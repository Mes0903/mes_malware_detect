
71f7537b215691be12a4bb5f1d786ea6af185800783d7948553f8a26518ab6b2.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411001:	pop    ebx
  411002:	jge    0x410f96
  411004:	jmp    0x410fa3
  411006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411007:	xchg   edi,eax
  411008:	stos   BYTE PTR es:[edi],al
  411009:	xchg   esp,eax
  41100a:	stos   DWORD PTR es:[edi],eax
  41100b:	ds push ecx
  41100d:	daa    
  41100e:	and    esp,DWORD PTR [ebx]
  411010:	lods   eax,DWORD PTR ds:[esi]
  411011:	push   esi
  411012:	fimul  DWORD PTR [ecx*8-0x78053968]
  411019:	bound  edx,QWORD PTR [eax+0x63]
  41101c:	ins    DWORD PTR es:[edi],dx
  41101d:	sub    DWORD PTR fs:[eax-0x16],0xffffff81
  411022:	dec    ecx
  411023:	push   0x48
  411025:	mov    bh,0xe9
  411027:	sbb    DWORD PTR [ecx+0xe32e93d],esp
  41102d:	lea    esi,[eax-0x3fbacc72]
  411033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411034:	stos   BYTE PTR es:[edi],al
  411035:	pop    edx
  411036:	push   ebp
  411037:	aaa    
  411038:	fstp   TBYTE PTR [esp+edi*1+0x3c]
  41103c:	rol    edx,cl
  41103e:	jmp    0xf049:0x36999ced
  411045:	sub    ah,al
  411047:	adc    al,0x6e
  411049:	imul   ecx,DWORD PTR [edx+0x30],0x19
  41104d:	les    edi,FWORD PTR [esi-0x56]
  411050:	mov    al,ds:0x7705233e
  411055:	jne    0x411055
  411057:	and    BYTE PTR [ecx+0x2],0xab
  41105b:	push   esp
  41105c:	pop    ecx
  41105d:	stos   BYTE PTR es:[edi],al
  41105e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41105f:	adc    esi,DWORD PTR [edi]
  411061:	push   ds
  411062:	sbb    al,0x9c
  411064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411065:	out    dx,eax
  411066:	add    DWORD PTR [esi-0x23],0x50
  41106a:	daa    
  41106b:	lods   eax,DWORD PTR ds:[esi]
  41106c:	inc    ebp
  41106d:	push   0xffffffe1
  41106f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411070:	or     eax,DWORD PTR [esi]
  411072:	or     al,BYTE PTR [eax-0xbfabb5f]
  411078:	jmp    0xdeb25615
  41107d:	inc    ebx
  41107e:	dec    edx
  41107f:	xor    BYTE PTR [edx],ah
  411081:	push   ebp
  411082:	mov    esi,esp
  411084:	cwde   
  411085:	xchg   DWORD PTR [ebx],ebp
  411087:	inc    ebx
  411088:	push   esi
  411089:	ret    
  41108a:	jecxz  0x411076
  41108c:	cmp    ch,cl
  41108e:	add    BYTE PTR [edx+0x44f6592d],dl
  411094:	sbb    dh,BYTE PTR [ebp+0x74166bdd]
  41109a:	int    0xff
  41109c:	icebp  
  41109d:	shl    esp,1
  41109f:	xor    eax,0xcb99d88
  4110a4:	jge    0x4110b0
  4110a6:	add    esp,ebx
  4110a8:	xor    bl,bl
  4110aa:	pushf  
  4110ab:	inc    ebx
  4110ac:	mov    ah,0x32
  4110ae:	(bad)  
  4110b0:	push   ecx
  4110b1:	push   es
  4110b2:	push   eax
  4110b3:	lea    edx,[edi-0x2684849e]
  4110b9:	jmp    0x3a1d62ef
  4110be:	sbb    dh,dh
  4110c0:	sbb    BYTE PTR [eax-0x61],ch
  4110c3:	xor    eax,0x6f4a9392
  4110c8:	div    DWORD PTR [esi-0x69cfa19e]
  4110ce:	retf   0x9ef4
  4110d1:	popa   
  4110d2:	push   ecx
  4110d3:	nop
  4110d4:	lods   al,BYTE PTR ds:[esi]
  4110d5:	sub    eax,0xf93ad633
  4110da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110db:	ds ror eax,0xe1
  4110df:	in     eax,dx
  4110e0:	sahf   
  4110e1:	ins    BYTE PTR es:[edi],dx
  4110e2:	fs pushf 
  4110e4:	inc    eax
  4110e5:	push   edi
  4110e6:	sbb    BYTE PTR [edx],al
  4110e8:	mov    al,0xa6
  4110ea:	ja     0x4110ac
  4110ec:	imul   edi,esi,0xffffffce
  4110ef:	mov    ecx,ds
  4110f1:	sahf   
  4110f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110f3:	das    
  4110f4:	pop    ss
  4110f5:	cli    
  4110f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110f7:	push   edi
  4110f8:	mov    edx,ss
  4110fa:	mov    BYTE PTR [eax+0x63e0c236],bl
  411100:	lods   eax,DWORD PTR ds:[esi]
  411101:	icebp  
  411102:	pop    esi
  411103:	mov    edi,0x79cb2e99
  411108:	sbb    bl,0xa1
  41110b:	pop    ecx
  41110c:	jbe    0x41110e
  41110e:	jns    0x41114b
  411110:	or     BYTE PTR [ebx+0x61da1bc3],ah
  411116:	sti    
  411117:	sub    al,BYTE PTR [edx+0x440c6f33]
  41111d:	(bad)  
  41111e:	neg    BYTE PTR [ebx+ebp*8+0x2c]
  411122:	cmp    DWORD PTR [eax+0x20],0x40
  411126:	not    ah
  411128:	mov    cl,dh
  41112a:	fst    DWORD PTR [edi+0x1027f628]
  411130:	cmp    BYTE PTR [ebp+0x78],al
  411133:	imul   esi,DWORD PTR [ebx+0x266fe44b],0x3afc99da
  41113d:	mov    eax,ds:0x5734183
  411142:	push   0x479c7c56
  411147:	inc    ebp
  411148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411149:	sub    bl,BYTE PTR [edi+0x6c47e3ec]
  41114f:	fistp  QWORD PTR [eax-0x5d]
  411152:	jns    0x411135
  411154:	rol    BYTE PTR [edi],cl
  411156:	jb     0x411111
  411158:	cmp    DWORD PTR [edi],ecx
  41115a:	lahf   
  41115b:	xchg   edx,eax
  41115c:	(bad)  
  41115d:	enter  0xc29d,0x2c
  411161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411162:	dec    edx
  411163:	mov    dh,0xad
  411165:	out    dx,al
  411166:	or     ebx,DWORD PTR [ebp+0x15]
  411169:	pop    ebx
  41116a:	xchg   ebp,eax
  41116b:	push   dx
  41116d:	and    eax,0x7a750ce8
  411172:	stos   DWORD PTR es:[edi],eax
  411173:	mov    ah,0xc9
  411175:	fwait
  411176:	aad    0x36
  411178:	pop    ebx
  411179:	sti    
  41117a:	mov    WORD PTR [ebx-0x45],?
  41117d:	cld    
  41117e:	mov    al,0x24
  411180:	add    eax,0xf4e1d25e
  411185:	aam    0xa5
  411187:	sub    BYTE PTR [ecx],cl
  411189:	mov    ah,0x39
  41118b:	jnp    0x411130
  41118d:	and    BYTE PTR ds:0xd078467a,dl
  411193:	test   DWORD PTR [ecx+eiz*4],edi
  411196:	or     eax,0xf8aafd23
  41119b:	jmp    0x4111c3
  41119d:	test   DWORD PTR [edx+0x489bc9a0],ecx
  4111a3:	shl    DWORD PTR [ebx+0x1572a850],0x54
  4111aa:	xor    DWORD PTR [bx-0x3480],eax
  4111af:	push   edi
  4111b0:	add    DWORD PTR [edx-0x4bc53057],edx
  4111b6:	std    
  4111b7:	pop    ds
  4111b8:	fnsave [esi]
  4111ba:	inc    ebp
  4111bb:	mov    bh,0x7f
  4111bd:	jle    0x411192
  4111bf:	inc    ebx
  4111c0:	stos   DWORD PTR es:[edi],eax
  4111c1:	pop    ebp
  4111c2:	mov    DWORD PTR [eax-0x4],ebp
  4111c5:	lahf   
  4111c6:	adc    bh,bl
  4111c8:	mov    ds:0x7eae1930,eax
  4111cd:	sub    al,0xcd
  4111cf:	popf   
  4111d0:	call   0xa09e2040
  4111d5:	addr16 jle 0x411212
  4111d8:	repz ja 0x411223
  4111db:	push   0x26
  4111dd:	push   es
  4111de:	push   edi
  4111df:	daa    
  4111e0:	xchg   esi,eax
  4111e1:	push   edi
  4111e2:	ins    DWORD PTR es:[edi],dx
  4111e3:	cmc    
  4111e4:	jbe    0x411205
  4111e6:	xor    DWORD PTR [ecx],eax
  4111e8:	and    al,BYTE PTR [edx]
  4111ea:	out    0x99,eax
  4111ec:	inc    ebp
  4111ed:	mov    dh,0x6f
  4111ef:	mov    cl,0xb2
  4111f1:	xchg   ebp,eax
  4111f2:	sub    cl,bh
  4111f4:	jnp    0x411251
  4111f6:	pop    ecx
  4111f7:	dec    esi
  4111f8:	push   eax
  4111f9:	stos   BYTE PTR es:[edi],al
  4111fa:	das    
  4111fb:	adc    BYTE PTR [edi-0x5e],dl
  4111fe:	(bad)  
  4111ff:	and    ebx,DWORD PTR ds:0xaf8d50c0
  411205:	out    0x7,eax
  411207:	xchg   edi,eax
  411208:	jg     0x41123e
  41120a:	ja     0x4111d6
  41120c:	retf   
  41120d:	mov    ebx,DWORD PTR [ecx-0x738af936]
  411213:	imul   esp,DWORD PTR [edx-0x4d],0x666bd088
  41121a:	call   0x2607:0xab6e3d89
  411221:	inc    ecx
  411222:	mov    ah,0xf4
  411224:	mov    BYTE PTR [edx+0x3139dcbb],dl
  41122a:	sub    DWORD PTR [eax],ecx
  41122c:	adc    ebp,esp
  41122e:	dec    edx
  41122f:	lgs    edx,FWORD PTR [esp+esi*8]
  411233:	lock leave 
  411235:	and    DWORD PTR [esi+0x17],esi
  411238:	mov    esp,0xccd1526b
  41123d:	out    dx,al
  41123e:	adc    dh,ch
  411240:	xor    dl,0x63
  411243:	scas   eax,DWORD PTR es:[edi]
  411244:	outs   dx,BYTE PTR ds:[esi]
  411245:	fstp   DWORD PTR [esi]
  411247:	xor    BYTE PTR [ebp+0x5bb3f378],cl
  41124d:	clc    
  41124e:	push   ebp
  41124f:	push   ecx
  411250:	cmp    al,0xe5
  411252:	mov    gs,WORD PTR [edi-0x3c8f962e]
  411258:	pop    ecx
  411259:	cli    
  41125a:	call   0x1d2a:0xef95c6e2
  411261:	mov    al,ds:0x777ce8f3
  411266:	imul   esi,DWORD PTR [ebx-0x559cb0f8],0xffffffeb
  41126d:	shr    BYTE PTR [ebx-0x440e25ef],1
  411273:	(bad)  
  411274:	mov    dh,0xfc
  411276:	push   cs
  411277:	or     eax,0x23ebce
  41127c:	lock sbb al,0x56
  41127f:	inc    esi
  411280:	dec    ebp
  411281:	into   
  411282:	mov    cl,0xaf
  411284:	add    BYTE PTR ds:0x5a9d58c3,0xcc
  41128b:	jnp    0x41124b
  41128d:	(bad)  
  41128e:	repnz adc cl,BYTE PTR ds:0x4177637
  411295:	aas    
  411296:	int    0x9d
  411298:	loope  0x4112c5
  41129a:	lahf   
  41129b:	popf   
  41129c:	adc    al,0xb8
  41129e:	leave  
  41129f:	shl    DWORD PTR [edi+eiz*2-0x11],1
  4112a3:	push   eax
  4112a4:	gs or  eax,0x6b0cb4c3
  4112aa:	or     al,0xd6
  4112ac:	je     0x41130a
  4112ae:	adc    esi,DWORD PTR [eax+0x10]
  4112b1:	test   DWORD PTR [ecx],esi
  4112b3:	sbb    BYTE PTR [ebx+ecx*2-0x4e],cl
  4112b7:	icebp  
  4112b8:	mov    al,ds:0xc99cb47b
  4112bd:	sti    
  4112be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112bf:	not    BYTE PTR [edi-0x2f]
  4112c2:	push   0x6e
  4112c4:	jae    0x41126c
  4112c6:	mov    bh,0xfc
  4112c8:	cmp    dl,BYTE PTR [edi-0x48]
  4112cb:	xchg   ecx,eax
  4112cc:	sub    esp,esp
  4112ce:	sbb    eax,0x658ee699
  4112d3:	push   esi
  4112d4:	shr    DWORD PTR [eax-0x55],0xa8
  4112d8:	je     0x4112f3
  4112da:	imul   eax,DWORD PTR [ecx-0x5e],0x9e2182e2
  4112e1:	xor    edi,ebx
  4112e3:	loope  0x411323
  4112e5:	mov    ds:0xdb7f7c49,eax
  4112ea:	fs js  0x4112b2
  4112ed:	fdivr  QWORD PTR [ecx]
  4112ef:	sbb    cl,BYTE PTR [eax]
  4112f1:	ret    0xf2b1
  4112f4:	cmp    BYTE PTR [edx],al
  4112f6:	test   DWORD PTR [edx-0x2c],esi
  4112f9:	out    0x61,al
  4112fb:	cmp    DWORD PTR [ecx-0x6f3637b6],esp
  411301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411302:	outs   dx,DWORD PTR ds:[esi]
  411303:	rcl    edi,cl
  411305:	mov    eax,ds:0x6da5ef42
  41130a:	loopne 0x41135d
  41130c:	mov    esp,0x87e07342
  411311:	aaa    
  411312:	gs push edi
  411314:	loopne 0x4112e8
  411316:	cmp    ch,BYTE PTR [edx-0x21d71793]
  41131c:	aam    0xfe
  41131e:	mov    ch,0xcc
  411320:	div    BYTE PTR [ebp-0x48]
  411323:	xchg   DWORD PTR [esi],esp
  411325:	bound  esp,QWORD PTR [ebp-0xcb8ee15]
  41132b:	push   cs
  41132c:	mov    ebx,0xff8c820d
  411331:	add    bl,BYTE PTR [esp+eax*1+0x828b6dc]
  411338:	xor    al,BYTE PTR [ecx+edi*2-0x15baad46]
  41133f:	mov    edx,0xe4bb403f
  411344:	arpl   WORD PTR [edi-0x50cbffff],sp
  41134a:	popf   
  41134b:	aam    0x51
  41134d:	dec    ecx
  41134e:	and    edx,0x32
  411351:	je     0x41136a
  411353:	gs add al,al
  411356:	daa    
  411357:	jecxz  0x41133f
  411359:	inc    ebx
  41135a:	jno    0x411375
  41135c:	clc    
  41135d:	push   ebx
  41135e:	cmp    BYTE PTR [ebx-0x2f],0x97
  411362:	add    cl,BYTE PTR gs:[edi+0x19]
  411366:	push   es
  411367:	dec    esp
  411368:	adc    DWORD PTR [ebx+0x6fa81ea9],esi
  41136e:	cli    
  41136f:	sub    DWORD PTR [ecx],edi
  411371:	jae    0x411314
  411373:	and    edx,DWORD PTR [ebp+ebx*2+0x5bf4f679]
  41137a:	in     eax,0xda
  41137c:	ret    
  41137d:	ret    0x275d
  411380:	sti    
  411381:	xchg   esp,eax
  411382:	pushf  
  411383:	jecxz  0x4113a0
  411385:	clc    
  411386:	mov    dh,0xf2
  411388:	push   0x6b
  41138a:	jne    0x4113f0
  41138c:	xchg   ebx,eax
  41138d:	les    ebp,FWORD PTR ds:0xac85509
  411393:	mov    eax,0xb3914275
  411398:	scas   eax,DWORD PTR es:[edi]
  411399:	(bad)  
  41139a:	push   edx
  41139c:	mov    ds,WORD PTR [ecx-0x6e]
  41139f:	aad    0x53
  4113a1:	into   
  4113a2:	pop    ebp
  4113a3:	xor    DWORD PTR [ebp+0x1b],edi
  4113a6:	xchg   ebx,eax
  4113a7:	or     ecx,esp
  4113a9:	test   BYTE PTR [edx+0x2c6dcd11],ah
  4113af:	xchg   ebp,eax
  4113b0:	out    dx,al
  4113b1:	mov    esi,DWORD PTR [eax-0x59]
  4113b4:	fldcw  WORD PTR ds:0x5db0ea91
  4113ba:	push   es
  4113bb:	push   esp
  4113bc:	into   
  4113bd:	inc    edi
  4113be:	imul   esi,DWORD PTR [edi+0x1e],0x47
  4113c2:	sub    al,0x65
  4113c4:	dec    eax
  4113c5:	push   ss
  4113c6:	jp     0x4113cf
  4113c8:	loop   0x411411
  4113ca:	call   0x7503:0xa75474d5
  4113d1:	jbe    0x411367
  4113d3:	out    dx,eax
  4113d4:	arpl   bp,sp
  4113d6:	push   esp
  4113d7:	xor    BYTE PTR [edi],al
  4113d9:	xchg   esp,eax
  4113da:	fstp   DWORD PTR [eax-0x39]
  4113dd:	sbb    eax,0xbdeec24f
  4113e2:	and    esp,esi
  4113e4:	pushf  
  4113e5:	mov    eax,ds:0xefb8ea6f
  4113ea:	jno    0x4113a8
  4113ec:	fmul   QWORD PTR [ecx-0x7c]
  4113ef:	je     0x4113ee
  4113f1:	xchg   BYTE PTR [edi+0x3e65c7b1],al
  4113f7:	mov    ah,0xce
  4113f9:	push   edi
  4113fa:	dec    ebx
  4113fb:	sahf   
  4113fc:	call   0xa781:0x2daebc9a
  411403:	aaa    
  411404:	stos   DWORD PTR es:[edi],eax
  411405:	rcl    DWORD PTR [edi+0x7d07d649],1
  41140b:	inc    ebp
  41140c:	jp     0x41147f
  41140e:	js     0x41143a
  411410:	mov    bl,BYTE PTR [esi-0x70]
  411413:	push   ebx
  411414:	aam    0x56
  411416:	leave  
  411417:	add    DWORD PTR [ecx+0x1049407b],ebx
  41141d:	iret   
  41141e:	jae    0x41140a
  411420:	clc    
  411421:	sahf   
  411422:	test   BYTE PTR [ebp-0x3c],0xb7
  411426:	inc    ebp
  411427:	and    DWORD PTR [esi+edi*8-0x49],edx
  41142b:	mov    ebx,0xba5f67c2
  411430:	pop    edi
  411431:	bound  ebp,QWORD PTR [ecx-0x547fa229]
  411437:	mov    cs,WORD PTR [edx-0x4f86d37]
  41143d:	fs push esp
  41143f:	dec    esp
  411440:	jecxz  0x411427
  411442:	inc    ecx
  411443:	jmp    0x411432
  411445:	jno    0x4113de
  411447:	pop    esi
  411448:	pop    ss
  411449:	jecxz  0x411488
  41144b:	push   esp
  41144c:	inc    ebp
  41144d:	xchg   esp,eax
  41144e:	rol    BYTE PTR [edi+eiz*8+0x2a],cl
  411452:	scas   eax,DWORD PTR es:[edi]
  411453:	mov    ecx,0xe542e58b
  411458:	test   eax,0xa08a9650
  41145d:	sub    DWORD PTR [esi],eax
  41145f:	jae    0x4114be
  411461:	es pop edx
  411463:	repnz pop ebx
  411465:	mov    cl,0x8d
  411467:	jle    0x41142b
  411469:	add    dl,al
  41146b:	sub    eax,0xee4cccdd
  411470:	jns    0x41140c
  411472:	cmc    
  411473:	iret   
  411474:	sub    al,0x44
  411476:	es xchg ebp,eax
  411478:	bound  esp,QWORD PTR [ebx]
  41147a:	loope  0x41148b
  41147c:	mov    esi,0x4c7d78db
  411481:	pushw  ss
  411483:	cs push ebp
  411485:	and    eax,0x2c56f681
  41148a:	sahf   
  41148b:	xchg   DWORD PTR [ebp+0x64],ecx
  41148e:	scas   eax,DWORD PTR es:[edi]
  41148f:	hlt    
  411490:	dec    eax
  411491:	lahf   
  411492:	imul   eax
  411494:	data16 or BYTE PTR [edx-0x5b],cl
  411498:	rcr    DWORD PTR [edi-0x6c],0xbb
  41149c:	aad    0x2f
  41149e:	push   ds
  41149f:	fnstsw WORD PTR [edi+0x3f072bb6]
  4114a5:	xor    eax,0xf40f53ad
  4114aa:	into   
  4114ab:	pop    es
  4114ac:	jne    0x411460
  4114ae:	pop    ecx
  4114af:	mov    gs,WORD PTR [ebp-0x2f]
  4114b2:	mov    ebp,0xb6964e96
  4114b7:	retf   0x2c69
  4114ba:	mov    ds:0xa847fb77,eax
  4114bf:	pop    ss
  4114c0:	into   
  4114c1:	mov    eax,0x2d3c3ae1
  4114c6:	stos   BYTE PTR es:[edi],al
  4114c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c8:	push   esp
  4114c9:	push   cs
  4114ca:	inc    ebp
  4114cb:	jnp    0x411496
  4114cd:	pop    ebp
  4114ce:	sub    eax,DWORD PTR [ebx]
  4114d0:	inc    ebp
  4114d1:	sub    edx,DWORD PTR [ebx-0x4a87590d]
  4114d7:	jl     0x411501
  4114d9:	mov    dl,ah
  4114db:	loope  0x41152b
  4114dd:	push   ax
  4114df:	xchg   BYTE PTR [esi+0x50919963],ch
  4114e5:	mov    ah,0x95
  4114e7:	xor    dh,ah
  4114e9:	iret   
  4114ea:	sub    al,0x48
  4114ed:	push   edi
  4114ee:	sub    esi,DWORD PTR [edi+0x55b3902f]
  4114f4:	nop
  4114f5:	sub    BYTE PTR [edi-0x3e229422],cl
  4114fb:	mov    dl,0xc6
  4114fd:	push   esi
  4114fe:	jg     0x411487
  411500:	xchg   esp,eax
  411501:	mov    edi,0x93bf4848
  411506:	outs   dx,DWORD PTR ds:[esi]
  411507:	lods   al,BYTE PTR ds:[esi]
  411508:	mov    DWORD PTR [ecx-0x26],ecx
  41150b:	daa    
  41150c:	jecxz  0x41148e
  41150e:	je     0x1b8cae40
  411514:	xchg   BYTE PTR [esi-0x26],cl
  411517:	and    eax,edx
  411519:	jmp    0xd3e8:0x853e8533
  411520:	aas    
  411521:	add    ecx,DWORD PTR [ebx-0x1b4558f4]
  411527:	adc    eax,0x174dfd32
  41152c:	jbe    0x4114c0
  41152e:	sbb    eax,0x8c6ea69c
  411533:	dec    eax
  411534:	cmp    al,0xba
  411536:	mov    al,ds:0xcf658826
  41153b:	adc    DWORD PTR [ebp+0x139ce368],edx
  411541:	mov    bl,0x61
  411543:	shr    al,1
  411545:	adc    DWORD PTR [ecx-0x7],ecx
  411548:	out    0xf1,eax
  41154a:	stos   BYTE PTR es:[edi],al
  41154b:	pop    ebp
  41154c:	leave  
  41154d:	xchg   DWORD PTR [edi+ebx*1-0x53d1e941],ebp
  411554:	add    edx,0xb3e7bdb7
  41155a:	sbb    esp,ebx
  41155c:	ins    DWORD PTR es:[edi],dx
  41155d:	sub    ecx,DWORD PTR [ecx-0x3b]
  411560:	bound  esi,QWORD PTR [ecx]
  411562:	or     eax,0x1bd3c604
  411567:	retf   0xfa94
  41156a:	fidiv  DWORD PTR [eax+ecx*2+0x3e]
  41156e:	aaa    
  41156f:	adc    eax,0xb0cb6ba7
  411574:	push   cs
  411575:	pop    esp
  411576:	out    0xb,eax
  411578:	dec    eax
  411579:	mov    eax,0x456b728
  41157e:	cli    
  41157f:	dec    ebp
  411580:	les    edi,FWORD PTR [esi+0x65]
  411583:	(bad)  gs:[edi]
  411586:	test   al,0x74
  411588:	xchg   esp,eax
  411589:	and    al,0xf8
  41158b:	sub    dl,dl
  41158d:	lods   eax,DWORD PTR ds:[esi]
  41158e:	rcr    DWORD PTR [edx+0x7f8df5ed],cl
  411594:	in     eax,dx
  411595:	test   al,0xb4
  411597:	push   ds
  411598:	push   es
  411599:	data16 lods al,BYTE PTR ds:[esi]
  41159b:	inc    ebx
  41159c:	(bad)  
  41159e:	fist   DWORD PTR [ecx-0x2216e02d]
  4115a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115a5:	mov    esp,0x2c80b235
  4115aa:	(bad)  
  4115ab:	lods   eax,DWORD PTR ds:[esi]
  4115ac:	clc    
  4115ad:	jl     0x4115eb
  4115af:	(bad)  [edx]
  4115b1:	mov    ah,0x62
  4115b3:	mov    dh,0xde
  4115b5:	bswap  esi
  4115b7:	mov    bh,0xe0
  4115b9:	iret   
  4115ba:	mov    al,es:0x461946cd
  4115c0:	adc    BYTE PTR [eax+eiz*4-0x71a3fe8],bl
  4115c7:	popf   
  4115c8:	adc    ah,al
  4115ca:	mov    dl,0xb8
  4115cc:	push   0xfffffff8
  4115ce:	dec    esi
  4115cf:	sub    esp,ebx
  4115d1:	mov    eax,0xd6a2f71d
  4115d6:	sub    DWORD PTR [edi],edi
  4115d8:	test   eax,edi
  4115da:	xchg   edx,eax
  4115db:	icebp  
  4115dc:	xor    al,0x64
  4115de:	mov    ebp,0x1a53ff6b
  4115e3:	loopne 0x41160c
  4115e5:	scas   al,BYTE PTR es:[edi]
  4115e6:	js     0x41165e
  4115e8:	aas    
  4115e9:	es inc ebx
  4115eb:	jbe    0x41157e
  4115ed:	(bad)  
  4115ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ef:	cmp    bl,BYTE PTR fs:[eax-0x47067c44]
  4115f6:	jp     0x41159e
  4115f8:	fdivr  st(7),st
  4115fa:	cmp    DWORD PTR ds:0xf9f4d4e9,eax
  411600:	outs   dx,DWORD PTR ds:[esi]
  411601:	mov    ch,0xae
  411603:	pop    ebx
  411604:	(bad)  
  411605:	jnp    0x4115b9
  411607:	adc    DWORD PTR [ebx],eax
  411609:	pusha  
  41160a:	sbb    edi,DWORD PTR [edx+0x5506d81]
  411610:	sahf   
  411611:	add    al,0x3d
  411613:	js     0x4115c3
  411615:	lock or BYTE PTR [ebx-0x58],bh
  411619:	and    esp,DWORD PTR [ecx+0x3d253955]
  41161f:	inc    esi
  411620:	nop
  411621:	call   0xdbc27b1c
  411626:	lock aaa 
  411628:	inc    ecx
  411629:	push   edx
  41162a:	das    
  41162b:	shr    cl,0xdc
  41162e:	cmp    bl,BYTE PTR [edx-0x26]
  411631:	jmp    0xeaba:0x32cab793
  411638:	(bad)  
  41163a:	pop    ecx
  41163b:	test   eax,0xe28b9554
  411640:	xchg   ebx,eax
  411641:	jl     0x411640
  411643:	mov    edx,0x59be49aa
  411648:	or     dl,cl
  41164a:	push   edx
  41164b:	ja     0x4115fb
  41164d:	lea    eax,[ebx]
  41164f:	push   ebp
  411650:	shr    BYTE PTR [edx-0x14b56c2b],1
  411656:	stos   BYTE PTR es:[edi],al
  411657:	xchg   DWORD PTR [ebp-0x2c544c53],eax
  41165d:	push   ds
  41165e:	cli    
  41165f:	imul   eax,DWORD PTR [ecx-0x28],0x53
  411663:	das    
  411664:	mov    dh,BYTE PTR [eax]
  411666:	mov    ebx,0xc27b895f
  41166b:	(bad)  
  41166c:	out    dx,al
  41166d:	jo     0x411647
  41166f:	nop
  411670:	fimul  WORD PTR [ebp-0x61]
  411673:	jno    0x4115f9
  411675:	sub    al,0xe
  411677:	mov    dl,0xe4
  411679:	mov    ecx,0xefbb7be8
  41167e:	loopne 0x4116c6
  411680:	add    dh,al
  411682:	fs retf 
  411684:	sbb    DWORD PTR [ebp+0x5bdd93ef],ebx
  41168a:	or     edi,DWORD PTR [edx-0x9a0a171]
  411690:	popf   
  411691:	lods   eax,DWORD PTR ds:[esi]
  411692:	dec    edx
  411693:	pop    ebx
  411694:	clc    
  411695:	imul   esp,DWORD PTR ds:0x18e48028,0xfb2d4da1
  41169f:	sbb    ecx,DWORD PTR [ebx-0x36008117]
  4116a5:	add    DWORD PTR [edx+0x3],0xffffffdb
  4116a9:	loop   0x411705
  4116ab:	scas   eax,DWORD PTR es:[edi]
  4116ac:	imul   BYTE PTR [esi+0x2c]
  4116af:	cld    
  4116b0:	vpsllw xmm5,xmm5,XMMWORD PTR [ebx-0x62]
  4116b5:	out    dx,al
  4116b6:	and    al,0x2b
  4116b8:	sbb    edx,0xd390df16
  4116be:	inc    ebp
  4116bf:	icebp  
  4116c0:	jmp    0x41170c
  4116c2:	mov    ch,0xc6
  4116c4:	outs   dx,BYTE PTR ds:[esi]
  4116c5:	inc    eax
  4116c6:	sub    bl,dl
  4116c8:	cmp    ch,BYTE PTR ds:0xf9ba89dd
  4116ce:	cld    
  4116cf:	(bad)  
  4116d0:	pop    ebp
  4116d1:	scas   eax,DWORD PTR es:[edi]
  4116d2:	(bad)  
  4116d3:	gs stc 
  4116d5:	(bad)  
  4116d6:	(bad)  
  4116d7:	cld    
  4116d8:	call   0xfe38:0xf78e58cf
  4116df:	adc    ebx,DWORD PTR [ecx+ecx*1]
  4116e2:	mov    ebx,0xd02e1d05
  4116e7:	dec    eax
  4116e8:	pop    esi
  4116e9:	mov    cl,0x28
  4116eb:	sbb    esi,eax
  4116ed:	inc    esp
  4116ee:	enter  0xc169,0xc
  4116f2:	push   cs
  4116f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116f4:	cmp    dl,BYTE PTR [edx]
  4116f6:	xchg   ebx,eax
  4116f7:	and    BYTE PTR [edx+0x6d],ch
  4116fa:	or     DWORD PTR [ebx+esi*1],ecx
  4116fd:	push   edx
  4116fe:	adc    ebp,DWORD PTR [ebx+esi*4-0x63f869b4]
  411705:	jmp    0x411691
  411707:	pop    ebx
  411708:	cmp    edi,DWORD PTR [esi-0x32ff8b0c]
  41170e:	sub    eax,0x6ee83c2d
  411713:	pushf  
  411714:	ret    0x77b8
  411717:	das    
  411718:	or     dh,BYTE PTR ds:0xd6dfb807
  41171e:	fadd   DWORD PTR [ecx+0x4b60b9b8]
  411724:	pop    esi
  411725:	mov    ds:0xe2d57c7c,eax
  41172a:	xchg   ebp,eax
  41172b:	addr16 ja 0x411703
  41172e:	pop    esp
  41172f:	jbe    0x411797
  411731:	xchg   esi,eax
  411732:	clc    
  411733:	bnd jmp 0x411722
  411736:	aad    0x82
  411738:	xor    esp,DWORD PTR ds:0xfe823472
  41173e:	or     esi,DWORD PTR [edi-0x790f09c7]
  411744:	xor    dl,dh
  411746:	pop    ebp
  411747:	and    al,0xde
  411749:	arpl   WORD PTR [edi+0x5f9b5467],sp
  41174f:	add    BYTE PTR [ecx-0x71],dl
  411752:	dec    esi
  411753:	jg     0x4117a2
  411755:	bound  edi,QWORD PTR [esp+0x23dbda42]
  41175c:	inc    edi
  41175d:	mov    edi,0x42447ac9
  411762:	pop    esp
  411763:	xor    ecx,eax
  411765:	mov    bh,0xa
  411767:	or     al,0xd2
  411769:	sar    BYTE PTR ds:0xfbc0535d,cl
  41176f:	or     ebp,DWORD PTR [esi-0x1f]
  411772:	adc    DWORD PTR [eax],edi
  411774:	and    ah,BYTE PTR [eax-0x4700b84a]
  41177a:	adc    al,0x78
  41177c:	mov    bl,0xfd
  41177e:	sbb    bl,BYTE PTR [edi-0x35]
  411781:	test   al,0x75
  411783:	ss out dx,al
  411785:	fld    st(4)
  411787:	ja     0x4117a7
  411789:	inc    eax
  41178a:	push   eax
  41178b:	mov    bl,0xe7
  41178d:	jne    0x41175a
  41178f:	and    DWORD PTR [bp+0x66f4],eax
  411794:	loopne 0x4117c0
  411796:	push   ds
  411797:	sahf   
  411798:	rcr    esi,0xcf
  41179b:	sahf   
  41179c:	into   
  41179d:	in     eax,dx
  41179e:	push   0x6
  4117a0:	cmp    bh,BYTE PTR [ecx]
  4117a2:	xor    dl,BYTE PTR [edx+0x43]
  4117a5:	out    0xd6,al
  4117a7:	xchg   esi,eax
  4117a8:	mov    esi,0x8779cca2
  4117ad:	pop    edi
  4117ae:	aad    0xc9
  4117b0:	push   ebx
  4117b1:	xchg   bl,bl
  4117b3:	xor    ebx,DWORD PTR [ebx+0x1e48fce1]
  4117b9:	in     eax,dx
  4117ba:	cmp    eax,0x4970e56b
  4117bf:	pop    edi
  4117c0:	pop    es
  4117c1:	call   0x611a:0x2a206079
  4117c8:	push   ecx
  4117c9:	pop    ss
  4117ca:	lock mov al,ds:0x2e95a81b
  4117d0:	mul    BYTE PTR ds:0xae5a4c18
  4117d6:	dec    edi
  4117d7:	lock scas al,BYTE PTR es:[edi]
  4117d9:	imul   ecx,DWORD PTR [edx],0x17
  4117dc:	outs   dx,BYTE PTR ds:[esi]
  4117dd:	retf   0x59f5
  4117e0:	(bad)  
  4117e1:	dec    DWORD PTR [edi]
  4117e3:	dec    ebp
  4117e4:	or     DWORD PTR [ecx-0x1f6ba0a9],edi
  4117ea:	pop    ebp
  4117eb:	and    DWORD PTR [eax-0xc],eax
  4117ee:	popf   
  4117ef:	ds pusha 
  4117f1:	pop    edx
  4117f2:	mov    bh,BYTE PTR [esp+edi*4-0xb0a88e7]
  4117f9:	xor    DWORD PTR [edi+0x40],ebp
  4117fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117fd:	sbb    eax,0xde967dec
  411802:	push   ebp
  411803:	pop    ss
  411804:	mov    ch,0x67
  411806:	mov    esp,0xb856f16e
  41180b:	pop    ebp
  41180c:	retf   0xb55c
  41180f:	je     0x411822
  411811:	or     al,0xb9
  411813:	dec    ecx
  411814:	lods   eax,DWORD PTR ds:[esi]
  411815:	das    
  411816:	mov    dh,0x4e
  411818:	mov    ecx,DWORD PTR [eax]
  41181a:	rcl    DWORD PTR [ecx+esi*8+0x3631967f],cl
  411821:	or     eax,0x8c383acf
  411826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411827:	imul   edi,DWORD PTR [ebp+0x6db78c8e],0xab8900f4
  411831:	sub    al,0x5b
  411833:	jno    0x411842
  411835:	iret   
  411836:	inc    ebp
  411837:	or     edx,edx
  411839:	fadd   st(2),st
  41183b:	pop    ecx
  41183c:	cmp    BYTE PTR [edx-0x59],bh
  41183f:	call   0xcf908057
  411844:	rol    DWORD PTR [edx-0x7330b858],cl
  41184a:	mov    ebp,0x12631835
  41184f:	arpl   WORD PTR [ecx],si
  411851:	(bad)  
  411852:	dec    edi
  411853:	push   ss
  411854:	ret    
  411855:	aam    0x6a
  411857:	and    ah,dl
  411859:	pop    ebx
  41185a:	pop    ds
  41185b:	scas   eax,DWORD PTR es:[edi]
  41185c:	mov    ah,0x7
  41185e:	retf   0x52a2
  411861:	std    
  411862:	sbb    ebp,eax
  411864:	inc    eax
  411865:	addr16 popa 
  411867:	or     dh,BYTE PTR [edx+0x7d58c0e3]
  41186d:	js     0x41183a
  41186f:	daa    
  411870:	in     eax,dx
  411871:	xor    DWORD PTR [ecx-0x22],eax
  411874:	sahf   
  411875:	sbb    esp,DWORD PTR [edx+eax*4]
  411878:	sub    eax,0x630ebc17
  41187d:	daa    
  41187e:	push   0xfffffffb
  411880:	jb     0x41181e
  411882:	cmp    ebp,DWORD PTR [eax-0x2d]
  411885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411886:	pop    ss
  411887:	js     0x41187c
  411889:	dec    edi
  41188a:	push   ebx
  41188b:	mov    cl,0xc3
  41188d:	fwait
  41188e:	les    edi,FWORD PTR es:[edi-0x51]
  411892:	cli    
  411893:	repz cmp DWORD PTR [ebp-0x3628fcfe],ecx
  41189a:	and    bl,ah
  41189c:	or     eax,0xe1719f05
  4118a1:	push   ds
  4118a2:	and    DWORD PTR [esi+0x5f],esi
  4118a5:	and    al,0xb
  4118a7:	inc    edi
  4118a8:	mov    ?,WORD PTR [eax+ecx*8]
  4118ab:	sub    ah,al
  4118ad:	mov    esi,0x8908af08
  4118b2:	jl     0x41187b
  4118b4:	sub    al,0x7b
  4118b6:	std    
  4118b7:	sub    edi,DWORD PTR [ecx+0x1f]
  4118ba:	dec    ebx
  4118bb:	test   BYTE PTR [edx+eiz*4-0x7a01c228],bl
  4118c2:	add    al,0x32
  4118c4:	mov    bl,0x31
  4118c6:	cs cld 
  4118c8:	mov    eax,0xe5a0438d
  4118cd:	ret    0xf795
  4118d0:	hlt    
  4118d1:	into   
  4118d2:	push   cs
  4118d3:	dec    esp
  4118d4:	in     al,0xca
  4118d6:	shl    DWORD PTR [ecx],cl
  4118d8:	out    dx,eax
  4118d9:	sar    ebp,1
  4118db:	ins    BYTE PTR es:[edi],dx
  4118dc:	and    ah,BYTE PTR [ebx-0x4ed621bf]
  4118e2:	out    dx,eax
  4118e3:	jecxz  0x411901
  4118e5:	sbb    dh,ah
  4118e7:	fisubr DWORD PTR [edi-0x19]
  4118ea:	test   DWORD PTR [ebp-0xd],eax
  4118ed:	jmp    0x8ed4:0x908a3ed6
  4118f4:	gs pop ebx
  4118f6:	ss dec ebp
  4118f8:	and    eax,0xd288fb6
  4118fd:	sbb    eax,0x1aaffc48
  411902:	int3   
  411903:	sub    esi,edi
  411905:	mov    esi,0xcfa011e1
  41190a:	std    
  41190b:	gs repz mov esp,0x8341ba45
  411912:	or     al,0xf3
  411914:	add    al,0xab
  411916:	jecxz  0x411953
  411918:	jns    0x41197f
  41191a:	dec    esi
  41191b:	js     0x411911
  41191d:	scas   al,BYTE PTR es:[edi]
  41191e:	ja     0x411965
  411920:	es mov ah,0x4b
  411923:	jns    0x411940
  411925:	jmp    0x6e78:0xe4291ad
  41192c:	pop    es
  41192d:	enter  0x20a1,0xae
  411931:	sub    al,BYTE PTR [edi-0x4fb0812f]
  411937:	adc    al,0x5d
  411939:	sbb    BYTE PTR [ecx-0x1],bh
  41193c:	inc    edi
  41193d:	jb     0x4118d6
  41193f:	data16 sahf 
  411941:	adc    al,BYTE PTR [eax]
  411943:	sar    BYTE PTR [edx-0x5500208f],0x9b
  41194a:	jmp    0x72616ef9
  41194f:	inc    edx
  411950:	fimul  DWORD PTR [ebp-0x19]
  411953:	xor    ch,BYTE PTR [edx+0x630482fb]
  411959:	mov    ebx,0x77f84fc6
  41195e:	int3   
  41195f:	push   esp
  411960:	and    eax,ecx
  411962:	jmp    0x6fa7:0x6d906e5c
  411969:	xchg   edi,eax
  41196a:	dec    edx
  41196b:	das    
  41196c:	dec    edi
  41196d:	inc    edx
  41196e:	inc    esi
  41196f:	popa   
  411970:	pop    ebx
  411971:	inc    edx
  411972:	adc    DWORD PTR [esi+0x59c5ad21],edx
  411978:	inc    ebx
  411979:	pushf  
  41197a:	sub    BYTE PTR [edx-0x38],ch
  41197d:	retf   
  41197e:	vpmacssdql xmm3,xmm3,xmm6,xmm1
  411984:	adc    eax,DWORD PTR [eax]
  411986:	push   edx
  411987:	test   eax,0x9bdf22e9
  41198c:	mov    esi,0x6ceedb98
  411991:	xor    bh,BYTE PTR [edx+eiz*4]
  411994:	mov    cl,0x3d
  411996:	jg     0x411979
  411998:	aaa    
  411999:	or     BYTE PTR [ecx],dl
  41199b:	fwait
  41199c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199d:	ins    DWORD PTR es:[edi],dx
  41199e:	add    esp,DWORD PTR [eax]
  4119a0:	jnp    0x411a15
  4119a2:	inc    esi
  4119a3:	or     DWORD PTR [esi+edx*4+0x6fcb269b],ebp
  4119aa:	mov    BYTE PTR [esi+0x12],al
  4119ad:	fdivr  DWORD PTR [eax-0x40]
  4119b0:	push   eax
  4119b1:	inc    ebx
  4119b2:	fisttp DWORD PTR [ebp+esi*4+0x64160ecf]
  4119b9:	aad    0xcd
  4119bb:	mov    al,0x92
  4119bd:	loop   0x411a36
  4119bf:	lods   al,BYTE PTR ds:[esi]
  4119c0:	shl    BYTE PTR [ebp+ebp*2+0x6a],cl
  4119c4:	inc    ecx
  4119c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119c6:	hlt    
  4119c7:	nop
  4119c8:	cwde   
  4119c9:	es fwait
  4119cb:	xor    ah,cl
  4119cd:	cmp    ecx,edi
  4119cf:	sub    esi,DWORD PTR [ecx-0x28]
  4119d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119d3:	push   eax
  4119d4:	gs clc 
  4119d6:	jbe    0x41198c
  4119d8:	rcl    BYTE PTR [ecx+0x18bc8744],cl
  4119de:	scas   eax,DWORD PTR es:[edi]
  4119df:	test   BYTE PTR [ebx+0x62590044],bh
  4119e5:	pop    es
  4119e6:	push   es
  4119e7:	mov    cs,eax
  4119e9:	fucomp st(7)
  4119eb:	sub    BYTE PTR [eax+ecx*2],cl
  4119ee:	pop    ecx
  4119ef:	mov    al,0x30
  4119f1:	loopne 0x41197a
  4119f3:	pushf  
  4119f4:	add    al,0x0
  4119f6:	sbb    dh,ch
  4119f8:	fidivr WORD PTR [ebx+0xb8bc2da]
  4119fe:	iret   
  4119ff:	mov    ebx,0xded2e7a4
  411a04:	mov    ch,0x20
  411a06:	aam    0xb
  411a08:	jg     0x41199b
  411a0a:	out    dx,eax
  411a0b:	dec    edi
  411a0c:	test   DWORD PTR [ecx-0x64],edx
  411a0f:	shr    BYTE PTR [edx],1
  411a11:	data16 xlat BYTE PTR ds:[ebx]
  411a13:	outs   dx,DWORD PTR ds:[esi]
  411a14:	jecxz  0x411a50
  411a16:	push   gs
  411a18:	loope  0x411a68
  411a1a:	push   es
  411a1b:	fwait
  411a1c:	add    al,0x88
  411a1e:	imul   ebx,esp,0x40
  411a21:	in     eax,dx
  411a22:	hlt    
  411a23:	sbb    BYTE PTR [edi],bh
  411a25:	outs   dx,DWORD PTR ds:[esi]
  411a26:	out    0xf2,eax
  411a28:	push   ebx
  411a29:	test   DWORD PTR ds:0xeec56e94,esi
  411a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a30:	mov    bh,0xee
  411a32:	xor    al,0x76
  411a34:	cmp    cl,BYTE PTR [esi-0x6ff58342]
  411a3a:	nop
  411a3b:	or     bl,BYTE PTR [eax+0x4d]
  411a3e:	push   ss
  411a3f:	mov    edi,0xe87097b7
  411a44:	retf   
  411a45:	pop    esp
  411a46:	clc    
  411a47:	push   edx
  411a48:	stos   BYTE PTR es:[edi],al
  411a49:	add    eax,0x660af420
  411a4e:	mov    esp,0xd71110e7
  411a53:	in     eax,0xc
  411a55:	stc    
  411a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a57:	cmp    eax,0xff12b2a9
  411a5c:	sub    esp,edx
  411a5e:	retf   0x94ba
  411a61:	pushf  
  411a62:	test   DWORD PTR [esi-0x2a],ecx
  411a65:	and    al,0x62
  411a67:	retf   
  411a68:	mov    ds:0x9fd46474,eax
  411a6d:	sbb    ecx,DWORD PTR [eax]
  411a6f:	in     al,0x92
  411a71:	inc    ecx
  411a72:	xchg   edi,edi
  411a74:	test   eax,0x6ef6b11d
  411a79:	or     al,0x49
  411a7b:	dec    BYTE PTR ds:0x47516ddd
  411a81:	ss dec eax
  411a83:	(bad)  
  411a84:	out    dx,al
  411a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a86:	inc    ecx
  411a87:	mov    ds:0xd61d1ceb,eax
  411a8c:	adc    bh,al
  411a8e:	test   eax,0x65fef830
  411a93:	pop    ebx
  411a94:	xchg   DWORD PTR [eax+0x9c38e0a],eax
  411a9a:	cmp    eax,0xec0acb99
  411a9f:	les    eax,FWORD PTR [esi-0x6b]
  411aa2:	xchg   edi,ebx
  411aa4:	sub    dh,BYTE PTR [edi]
  411aa6:	out    0x87,al
  411aa8:	in     al,0x68
  411aaa:	pop    es
  411aab:	cs sbb eax,0xe72f96c8
  411ab1:	loop   0x411b2d
  411ab3:	xor    al,BYTE PTR [esi+0x4cfb892c]
  411ab9:	lock sub ch,cl
  411abc:	and    cl,BYTE PTR [ebx-0x8]
  411abf:	pop    ebp
  411ac0:	shr    DWORD PTR [edx+0x2d],0xbc
  411ac4:	or     esp,DWORD PTR [eax+0x63]
  411ac7:	mov    ch,0x1e
  411ac9:	inc    ecx
  411aca:	not    DWORD PTR [edx-0x37]
  411acd:	sub    BYTE PTR [ebx+eiz*1],ch
  411ad0:	inc    eax
  411ad1:	or     eax,0x5b43f69b
  411ad6:	sbb    DWORD PTR [ecx],edi
  411ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ad9:	adc    cl,BYTE PTR [ebx-0x65]
  411adc:	das    
  411add:	or     esp,DWORD PTR [eax]
  411adf:	and    al,0x22
  411ae1:	lock mov eax,ds:0x344ef581
  411ae7:	adc    edx,DWORD PTR [edi+0x2d1d378f]
  411aed:	scas   eax,DWORD PTR es:[edi]
  411aee:	push   es
  411aef:	das    
  411af0:	dec    eax
  411af1:	pop    esi
  411af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411af3:	dec    ebx
  411af4:	pop    ebx
  411af5:	loop   0x411b13
  411af7:	lea    edi,[edi]
  411af9:	pop    eax
  411afa:	leave  
  411afb:	mov    eax,0x1e0f08b2
  411b00:	cld    
  411b01:	jg     0x411b2b
  411b03:	enter  0xd909,0xfc
  411b07:	mov    al,ah
  411b09:	in     al,0xf6
  411b0b:	sbb    eax,eax
  411b0d:	mov    al,0x6f
  411b0f:	push   ds
  411b10:	lods   al,BYTE PTR ds:[esi]
  411b11:	and    eax,0x314defdf
  411b16:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  411b18:	sbb    eax,DWORD PTR [esi-0x3efb054b]
  411b1e:	dec    ecx
  411b1f:	push   0xffffffa9
  411b21:	fbld   TBYTE PTR [eax+eiz*4+0x51]
  411b25:	test   eax,0x5e7b51ac
  411b2a:	mov    esi,DWORD PTR [ebp+0x28]
  411b2d:	add    al,0xf9
  411b2f:	cld    
  411b30:	rol    DWORD PTR ds:0x5d971309,0x88
  411b37:	and    esi,DWORD PTR [edx-0x47ba1430]
  411b3d:	push   ss
  411b3e:	xor    eax,0xaf64e956
  411b43:	jmp    0x13e9:0xde33728e
  411b4a:	xor    eax,0x84ad1694
  411b4f:	mov    ecx,ds
  411b51:	or     ebx,DWORD PTR [edx-0x57249825]
  411b57:	mov    esi,0x39455c9a
  411b5c:	sbb    BYTE PTR [ecx-0x44],0x9a
  411b60:	or     BYTE PTR [eax+eiz*2-0x6c36b0ba],bl
  411b67:	xchg   BYTE PTR [edx+0xe],al
  411b6a:	sar    BYTE PTR [ecx],cl
  411b6c:	inc    ebp
  411b6d:	dec    eax
  411b6e:	outs   dx,BYTE PTR ds:[esi]
  411b6f:	adc    bl,ah
  411b71:	fcomp  DWORD PTR [ebx]
  411b73:	jmp    0x411b6c
  411b75:	outs   dx,DWORD PTR ds:[esi]
  411b76:	adc    BYTE PTR [ecx-0x59],al
  411b79:	mov    BYTE PTR [eax+0x64af83d1],bh
  411b7f:	out    dx,al
  411b80:	cli    
  411b81:	sbb    esp,DWORD PTR [esi]
  411b83:	stc    
  411b84:	push   es
  411b85:	aad    0x99
  411b87:	das    
  411b88:	sub    BYTE PTR [edi],ch
  411b8a:	and    esp,DWORD PTR [eax+0x75e60615]
  411b90:	sub    eax,0x3b50490f
  411b95:	adc    esi,DWORD PTR [esi-0x7e719f5b]
  411b9b:	popa   
  411b9c:	xor    eax,DWORD PTR [ebp-0x607830a3]
  411ba2:	push   ss
  411ba3:	clc    
  411ba4:	pusha  
  411ba5:	lock pop ebx
  411ba7:	push   es
  411ba8:	xchg   ebx,eax
  411ba9:	in     al,dx
  411baa:	outs   dx,BYTE PTR ds:[esi]
  411bab:	dec    esi
  411bac:	sbb    ebx,DWORD PTR cs:[esi]
  411baf:	into   
  411bb0:	mov    dh,0xb0
  411bb2:	js     0x411b5b
  411bb4:	rcl    BYTE PTR [eax+0x49],cl
  411bb7:	mov    al,0x56
  411bb9:	lds    ebp,FWORD PTR [edx-0x33c549fc]
  411bbf:	cmp    BYTE PTR [ecx+0x582dff11],bh
  411bc5:	fistp  QWORD PTR [ebp-0x2c]
  411bc8:	sub    BYTE PTR [edi+0x78],dh
  411bcb:	cwde   
  411bcc:	xchg   ebp,eax
  411bcd:	sti    
  411bce:	scas   al,BYTE PTR es:[edi]
  411bcf:	fnsave [eax-0xc]
  411bd2:	push   esp
  411bd3:	fnsave [esi]
  411bd5:	mov    ecx,0x11e569d4
  411bda:	sub    ebp,DWORD PTR [edx+ecx*4+0x490e9241]
  411be1:	mov    eax,ds:0x7346059f
  411be6:	push   DWORD PTR [eax-0x5a1932ce]
  411bec:	jmp    0xd785:0x3051c2f5
  411bf3:	jle    0x411c73
  411bf5:	iret   
  411bf6:	iret   
  411bf7:	mov    esp,0x290e3511
  411bfc:	mov    ds:0x37bcc506,al
  411c01:	test   eax,0x47ea9842
  411c06:	pop    eax
  411c07:	sbb    ebp,DWORD PTR [ecx+0x40]
  411c0a:	ja     0x411c03
  411c0c:	mov    ecx,0xa4368457
  411c11:	test   al,0x6d
  411c13:	sub    eax,0xce9c1f61
  411c18:	call   0xf8ed9758
  411c1d:	push   edx
  411c1e:	fldl2t 
  411c20:	sahf   
  411c21:	cmp    edi,esi
  411c23:	jle    0x411c23
  411c25:	inc    eax
  411c26:	push   esi
  411c27:	jno    0x411bea
  411c29:	and    esp,DWORD PTR [eax+0x7d1a5c33]
  411c2f:	popf   
  411c30:	loop   0x411c72
  411c32:	scas   eax,DWORD PTR es:[edi]
  411c33:	sbb    edi,DWORD PTR [ecx+0x7806ce2e]
  411c39:	xor    cl,BYTE PTR [ebx]
  411c3b:	jno    0x411bfa
  411c3d:	in     eax,0x1a
  411c3f:	sub    DWORD PTR [edx],0x2b
  411c42:	xor    bh,BYTE PTR [eax-0x14f8de7a]
  411c48:	inc    ebp
  411c49:	push   ds
  411c4a:	push   esp
  411c4b:	loopne 0x411be3
  411c4d:	xchg   ebp,eax
  411c4e:	cmc    
  411c4f:	outs   dx,DWORD PTR ds:[esi]
  411c50:	push   esi
  411c51:	inc    ebx
  411c52:	jmp    0x4180:0x6767220e
  411c59:	int3   
  411c5a:	inc    ebp
  411c5b:	pop    eax
  411c5c:	jbe    0x411c0c
  411c5e:	mov    bh,0x93
  411c60:	addr16 xchg edi,eax
  411c62:	ins    BYTE PTR es:[edi],dx
  411c63:	lahf   
  411c64:	shl    BYTE PTR [ebx+0x7],0xc0
  411c68:	and    esi,DWORD PTR [ecx-0x189e932a]
  411c6e:	inc    edi
  411c6f:	test   DWORD PTR [ecx],0xdd161eea
  411c75:	rol    DWORD PTR [ebp+0x3d],cl
  411c78:	push   0x14640406
  411c7d:	js     0x411cbe
  411c7f:	pop    ebp
  411c80:	pop    ecx
  411c81:	sub    al,0xf9
  411c83:	(bad)  
  411c84:	pop    eax
  411c85:	xor    esp,esp
  411c87:	jle    0x411c0c
  411c89:	in     eax,dx
  411c8a:	(bad)  
  411c8b:	sbb    eax,0xc57f562f
  411c90:	into   
  411c91:	mov    dh,0xee
  411c93:	lahf   
  411c94:	inc    BYTE PTR [ecx-0x80]
  411c97:	push   ecx
  411c98:	jge    0x411c9d
  411c9a:	inc    eax
  411c9b:	test   al,0xc
  411c9d:	je     0x411ce4
  411c9f:	sahf   
  411ca0:	mov    ah,0xd0
  411ca2:	ins    BYTE PTR es:[edi],dx
  411ca3:	cmc    
  411ca4:	sti    
  411ca5:	in     al,0x0
  411ca7:	ret    
  411ca8:	inc    ecx
  411ca9:	mul    bl
  411cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cac:	gs cmc 
  411cae:	adc    al,0xe1
  411cb0:	inc    esp
  411cb1:	(bad)  
  411cb2:	sbb    eax,0xccc7c770
  411cb7:	(bad)  
  411cb8:	(bad)  
  411cb9:	adc    DWORD PTR [eax+0x6e],esp
  411cbc:	int    0xcc
  411cbe:	pushf  
  411cbf:	pushf  
  411cc0:	inc    ebp
  411cc1:	and    esi,DWORD PTR [ecx]
  411cc3:	mov    dl,BYTE PTR [esi]
  411cc5:	ror    DWORD PTR [edx+0x33],cl
  411cc8:	pop    edi
  411cc9:	add    BYTE PTR [edi+0x357b8e94],bl
  411ccf:	in     eax,0xc7
  411cd1:	push   0xffffffca
  411cd3:	adc    edx,DWORD PTR [esp+ebp*8-0x17]
  411cd7:	cs mov esp,0xaccc9b3e
  411cdd:	jmp    0x14beb20f
  411ce2:	or     eax,0xcea72d
  411ce7:	add    eax,0x3aa4fbd4
  411cec:	jne    0x411c7d
  411cee:	mov    bh,0xb
  411cf0:	pop    ebp
  411cf1:	push   edi
  411cf2:	mul    DWORD PTR [eax-0x6b]
  411cf5:	cmp    BYTE PTR [ecx+0x25],ch
  411cf8:	add    al,cl
  411cfa:	cmp    BYTE PTR [edx-0x7c],bh
  411cfd:	sar    BYTE PTR [esi-0x2f],0xff
  411d01:	xor    bl,0xfa
  411d04:	imul   bp,WORD PTR [ebp+0x42018b93],0x4ff3
  411d0d:	xchg   DWORD PTR [ebx+0x58f3ae22],ebp
  411d13:	fbld   TBYTE PTR [esi+ecx*4]
  411d16:	int3   
  411d17:	(bad)  
  411d18:	mov    edx,0xfd695095
  411d1d:	pushf  
  411d1e:	mov    edx,0x12acb3ec
  411d23:	xchg   ecx,eax
  411d24:	sbb    al,BYTE PTR [edi]
  411d26:	in     eax,dx
  411d27:	jg     0x411da6
  411d29:	jecxz  0x411d07
  411d2b:	push   esi
  411d2c:	pop    ss
  411d2d:	mov    dl,0xc2
  411d2f:	xor    dl,ah
  411d31:	add    DWORD PTR [ebx-0x15744754],esi
  411d37:	cmp    BYTE PTR [ecx-0x1206fd38],dl
  411d3d:	lds    ebp,FWORD PTR [ebx]
  411d3f:	sahf   
  411d40:	mov    eax,0xe3a8c55a
  411d45:	pop    ebp
  411d46:	imul   DWORD PTR [eax+0x17]
  411d49:	scas   al,BYTE PTR es:[edi]
  411d4a:	add    al,0x34
  411d4c:	popa   
  411d4d:	les    edi,FWORD PTR [ebx-0x16]
  411d50:	pop    es
  411d51:	loop   0x411dd2
  411d53:	arpl   WORD PTR [eax+0x3d],dx
  411d56:	add    dl,al
  411d58:	cmp    BYTE PTR [esi+0x3dde1b37],dh
  411d5e:	mov    eax,0x998c291c
  411d63:	jae    0x411d2d
  411d65:	clc    
  411d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d68:	gs push edi
  411d6a:	push   ebp
  411d6b:	sub    BYTE PTR [ecx+0x35703e3d],dh
  411d71:	adc    DWORD PTR [ebx+eiz*2+0x5e],edi
  411d75:	mov    dh,0x20
  411d77:	mov    al,ds:0x92a08090
  411d7c:	rcr    BYTE PTR [edi],0xaa
  411d7f:	jmp    0x411d0a
  411d81:	sbb    al,0x81
  411d83:	push   ss
  411d84:	popf   
  411d85:	push   cs
  411d86:	jb     0x411d47
  411d88:	loop   0x411db9
  411d8a:	call   FWORD PTR [ebp+0x4f809713]
  411d90:	test   DWORD PTR [esi-0x43c59a32],edi
  411d96:	loop   0x411dd9
  411d98:	sbb    ecx,ebp
  411d9a:	xchg   esp,eax
  411d9b:	inc    ebx
  411d9c:	cli    
  411d9d:	iret   
  411d9e:	js     0x411d7b
  411da0:	(bad)  
  411da1:	cmp    esi,edi
  411da3:	push   0x324a642c
  411da8:	lock and eax,0xfe76bc3f
  411dae:	cmp    al,0x6e
  411db0:	fld    TBYTE PTR [edi+0x2a092b39]
  411db6:	retf   0x1f29
  411db9:	retf   0x4817
  411dbc:	xchg   ecx,eax
  411dbd:	icebp  
  411dbe:	push   ecx
  411dbf:	inc    edx
  411dc0:	shr    BYTE PTR [edx-0x6ae1af0a],0x93
  411dc7:	ss push 0xd52950f0
  411dcd:	mov    eax,ds:0x3dc8525e
  411dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dd3:	sahf   
  411dd4:	in     eax,dx
  411dd5:	out    0x18,al
  411dd7:	idiv   BYTE PTR [edi-0x33]
  411dda:	not    edi
  411ddc:	in     al,dx
  411ddd:	test   DWORD PTR [ecx],edi
  411ddf:	push   ds
  411de0:	enter  0xc923,0xb9
  411de4:	clc    
  411de5:	in     eax,dx
  411de6:	jns    0x411d8c
  411de8:	push   edi
  411dea:	cdq    
  411deb:	xchg   esp,eax
  411dec:	hlt    
  411ded:	inc    ebx
  411dee:	or     bl,cl
  411df0:	mov    ebx,ss
  411df2:	jle    0x411e67
  411df4:	mov    al,0xd5
  411df6:	loopne 0x411d90
  411df8:	sub    al,0xa5
  411dfa:	in     eax,dx
  411dfb:	pop    esi
  411dfc:	sbb    DWORD PTR [eax+eiz*4+0x3206a3f8],esp
  411e03:	std    
  411e04:	push   eax
  411e05:	stc    
  411e06:	mov    edx,0x7327d66c
  411e0b:	test   BYTE PTR [ecx+0x1d],dh
  411e0e:	aam    0x4f
  411e10:	push   0x78ebd37f
  411e15:	jg     0x411e52
  411e17:	add    DWORD PTR [ebp-0x3b],ecx
  411e1a:	xbegin 0x3a8b538c
  411e20:	sub    DWORD PTR [edx-0x2],ebp
  411e23:	fistp  QWORD PTR [edx-0x71]
  411e26:	jbe    0x411e4b
  411e28:	sbb    DWORD PTR [eax],0x5e
  411e2b:	sub    esi,DWORD PTR [edi+0x5a933e74]
  411e31:	arpl   WORD PTR [ebp+0x3c7ff9ee],si
  411e37:	or     DWORD PTR [eax],edx
  411e39:	inc    ebx
  411e3a:	stos   DWORD PTR es:[edi],eax
  411e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e3c:	cli    
  411e3d:	in     eax,dx
  411e3e:	outs   dx,DWORD PTR ds:[esi]
  411e3f:	sbb    BYTE PTR [edi+0x5085b68b],0x2a
  411e46:	dec    ebx
  411e47:	sub    bl,0x30
  411e4a:	sub    BYTE PTR [edx],0x27
  411e4d:	mov    bh,0x2
  411e4f:	imul   ebp,ebp,0x823dbcf3
  411e55:	push   ds
  411e56:	jnp    0x411e04
  411e58:	cwde   
  411e59:	mov    ebx,0x53161d5e
  411e5e:	mov    esi,ds
  411e60:	(bad)  
  411e62:	mov    bh,0xde
  411e64:	add    bl,BYTE PTR ds:0x18844516
  411e6a:	fwait
  411e6b:	push   edi
  411e6c:	mov    ds:0x5d5494a2,eax
  411e71:	jecxz  0x411e5f
  411e73:	dec    eax
  411e74:	sub    al,0xbf
  411e76:	mov    ebp,0x3fd4407
  411e7b:	lock jno 0x411e55
  411e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e7f:	push   es
  411e80:	sbb    esp,DWORD PTR [bx+0x3ff6]
  411e85:	scas   al,BYTE PTR es:[edi]
  411e86:	repnz pop edx
  411e88:	fdiv   st,st(4)
  411e8a:	popa   
  411e8b:	dec    ebp
  411e8c:	xchg   edx,eax
  411e8d:	push   eax
  411e8e:	fdiv   DWORD PTR [esi+0x7f7e07f6]
  411e94:	jbe    0x411e28
  411e96:	jb     0x411ea2
  411e98:	(bad)  
  411e9a:	into   
  411e9b:	cs dec ecx
  411e9d:	add    eax,0xd732fcd8
  411ea2:	cmp    al,0x41
  411ea4:	xchg   esp,eax
  411ea5:	sbb    bh,BYTE PTR [ebp-0x26]
  411ea8:	xchg   ebp,eax
  411ea9:	jbe    0x411e48
  411eab:	loope  0x411e4b
  411ead:	aas    
  411eae:	cmp    DWORD PTR [edi+0x257e703c],ecx
  411eb4:	inc    edx
  411eb5:	and    BYTE PTR [esi],dl
  411eb7:	pop    es
  411eb8:	or     eax,0x86bb179f
  411ebd:	rcl    ch,0xfa
  411ec0:	mov    al,ds:0x530454f7
  411ec5:	(bad)  
  411ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec7:	out    dx,eax
  411ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ec9:	aas    
  411eca:	or     al,0x6b
  411ecc:	(bad)  
  411ecd:	in     eax,dx
  411ece:	pop    edi
  411ecf:	mov    eax,esi
  411ed1:	ds mov bl,0x88
  411ed4:	test   al,0x8
  411ed6:	in     eax,0x83
  411ed8:	out    0x73,eax
  411eda:	or     ch,BYTE PTR [edi]
  411edc:	inc    ecx
  411edd:	sub    al,0x9f
  411edf:	sub    BYTE PTR [ecx-0x771e1b68],ah
  411ee5:	inc    eax
  411ee6:	test   edx,ebx
  411ee8:	mov    ecx,0xd0448207
  411eee:	ds jnp 0x411e71
  411ef1:	leave  
  411ef2:	inc    esp
  411ef3:	call   0x1cc39357
  411ef8:	fisttp DWORD PTR [eax]
  411efa:	mov    ds:0x2ced136f,eax
  411eff:	jne    0x411f68
  411f01:	and    BYTE PTR [eax+0x104207be],0xd0
  411f08:	pop    edx
  411f09:	imul   esp,DWORD PTR [edx],0xdede6e8c
  411f0f:	fldcw  WORD PTR [ebx]
  411f11:	xchg   ecx,eax
  411f12:	popf   
  411f13:	xor    DWORD PTR [ecx+0x7fd4dbe6],ecx
  411f19:	call   0xe96d1034
  411f1e:	push   ecx
  411f1f:	fiadd  DWORD PTR [edx-0x6c06e87d]
  411f25:	mov    eax,0x584c5ab2
  411f2a:	ins    DWORD PTR es:[edi],dx
  411f2b:	ret    0x9ed4
  411f2e:	push   eax
  411f2f:	inc    ecx
  411f31:	ret    0x465e
  411f34:	aad    0x77
  411f36:	pop    ds
  411f37:	and    esp,edi
  411f39:	pop    edx
  411f3a:	outs   dx,BYTE PTR ds:[esi]
  411f3b:	xor    DWORD PTR [ebp+0x6c5ccda2],edi
  411f41:	sar    esi,1
  411f43:	sub    DWORD PTR [ebx],esi
  411f45:	pop    ebx
  411f46:	push   0x1cff43b
  411f4b:	jnp    0x411f94
  411f4d:	dec    esp
  411f4e:	jae    0x411f27
  411f50:	mov    DWORD PTR [edi],edx
  411f52:	push   0x39
  411f54:	xor    eax,0x7a54b6d0
  411f59:	mov    bh,0x93
  411f5b:	ret    
  411f5c:	(bad)
  411f61:	(bad)  
  411f62:	jmp    0x5649:0x7b88bd7
  411f69:	retf   
  411f6a:	popa   
  411f6b:	cmp    bh,cl
  411f6d:	test   dh,dh
  411f6f:	xchg   DWORD PTR [ecx],ebx
  411f71:	rcl    BYTE PTR [edi],cl
  411f73:	mov    ch,0x12
  411f75:	xor    eax,0x52086045
  411f7a:	mov    esi,0xfb7c79aa
  411f7f:	xchg   esp,eax
  411f80:	fcomp  QWORD PTR [eax-0x6bd1b761]
  411f86:	cmp    eax,0x6312aca2
  411f8b:	or     eax,0x87c13fb2
  411f90:	mov    dh,BYTE PTR [esi+eiz*1+0x24d84ee3]
  411f97:	and    DWORD PTR [ecx],0xffffffab
  411f9a:	xor    ebx,eax
  411f9c:	jge    0x411fd1
  411f9e:	(bad)  
  411f9f:	out    dx,eax
  411fa0:	retf   0x4558
  411fa3:	or     ecx,DWORD PTR [ecx-0x5ad274b7]
  411fa9:	shr    DWORD PTR [edx+ebx*2+0x39],0x21
  411fae:	cs sbb eax,0xcf7c5519
  411fb4:	mov    eax,0x68bc7307
  411fb9:	loope  0x411fe9
  411fbb:	pop    ss
  411fbc:	cld    
  411fbd:	cmp    al,0xf
  411fbf:	sub    DWORD PTR [ecx+edx*4-0xb74889c],esp
  411fc6:	mov    ss,WORD PTR [edi]
  411fc8:	adc    esp,esp
  411fca:	xchg   DWORD PTR [edi],ecx
  411fcc:	loop   0x412007
  411fce:	imul   edx,DWORD PTR [ecx],0x733e8b31
  411fd4:	jb     0x412050
  411fd6:	leave  
  411fd7:	push   0xae007b57
  411fdc:	icebp  
  411fdd:	sub    bh,BYTE PTR [ecx]
  411fdf:	dec    edx
  411fe0:	loope  0x41202a
  411fe2:	jb     0x411f69
  411fe4:	xchg   edx,eax
  411fe5:	(bad)  
  411fe6:	pop    edi
  411fe7:	inc    esi
  411fe8:	shr    DWORD PTR [edx-0x68],0x30
  411fec:	push   esi
  411fed:	icebp  
  411fee:	dec    ecx
  411fef:	mov    al,0x7f
  411ff1:	mov    eax,0x747b7848
  411ff6:	test   bl,cl
  411ff8:	and    al,0xca
  411ffa:	adc    eax,0x65f7dcef
  411fff:	sbb    al,0x52
  412001:	imul   eax,DWORD PTR [edi+0x63a6b9d9],0x34a06b98
  41200b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41200c:	shl    BYTE PTR [edi+eax*2-0x73c4b9d8],0xe8
  412014:	dec    ebx
  412015:	mov    bl,0x5
  412017:	inc    ecx
  412018:	mov    ecx,0xd1066ca4
  41201d:	std    
  41201e:	out    dx,eax
  41201f:	jmp    0x43fc:0x80b7ade7
  412026:	fs sub eax,0xa4f549f
  41202c:	and    DWORD PTR [esi+0x2d3dcc42],0x4d
  412033:	(bad)  
  412034:	retf   0x60c1
  412037:	push   edx
  412038:	test   al,0x45
  41203a:	jmp    0xb29b:0xc896c7fa
  412041:	push   esi
  412042:	jle    0x412078
  412044:	test   DWORD PTR [ecx+eiz*4-0x9],eax
  412048:	data16 or bl,dl
  41204b:	adc    dh,ch
  41204d:	push   ecx
  41204e:	imul   edx,ebx,0x5fb5df56
  412054:	push   ecx
  412055:	adc    al,ch
  412057:	sub    esi,DWORD PTR [ecx+0x2f]
  41205a:	add    BYTE PTR [edx],ah
  41205c:	es cmp al,0x48
  41205f:	mov    al,ds:0x3d1d8c81
  412064:	jle    0x411ff9
  412066:	out    dx,al
  412067:	mov    bl,0x36
  412069:	gs stos DWORD PTR es:[edi],eax
  41206b:	and    ah,BYTE PTR [eax]
  41206d:	inc    ebp
  41206e:	lahf   
  41206f:	icebp  
  412070:	adc    BYTE PTR [eax+0x5cdcb850],bl
  412076:	pushw  0x357
  41207a:	add    DWORD PTR [eax-0x5b1407c3],eax
  412080:	and    al,BYTE PTR [esi]
  412082:	leave  
  412083:	shr    BYTE PTR [eax+0x34],cl
  412086:	mov    dl,0x1a
  412088:	pop    ss
  412089:	stos   BYTE PTR es:[edi],al
  41208a:	int3   
  41208b:	ror    DWORD PTR [ebx+ebx*4-0x4d],0xec
  412090:	scas   eax,DWORD PTR es:[edi]
  412091:	jg     0x412105
  412093:	or     ah,BYTE PTR [edi]
  412095:	shl    DWORD PTR ds:0xc5bd36b,cl
  41209b:	sbb    edi,DWORD PTR [eax+0x74506bac]
  4120a1:	jmp    DWORD PTR [ebx]
  4120a3:	sbb    eax,0x30cc0297
  4120a8:	sbb    esi,DWORD PTR [esi]
  4120aa:	pop    eax
  4120ab:	sahf   
  4120ac:	mov    ebx,0x139ec287
  4120b1:	and    BYTE PTR [edi],dh
  4120b3:	popa   
  4120b4:	dec    ecx
  4120b5:	dec    ecx
  4120b6:	xor    al,0x55
  4120b8:	jle    0x4120ab
  4120ba:	in     al,dx
  4120bb:	jecxz  0x412053
  4120bd:	pop    ebp
  4120be:	fcomp  DWORD PTR [ebp+0x1545a640]
  4120c4:	xchg   edi,eax
  4120c5:	popa   
  4120c6:	sub    DWORD PTR [edi+eiz*1+0x5f],esi
  4120ca:	mov    ebx,0x6836936f
  4120cf:	int    0x25
  4120d1:	out    dx,al
  4120d2:	ror    ch,cl
  4120d4:	gs xchg ebx,eax
  4120d6:	pop    edi
  4120d7:	xchg   edx,eax
  4120d8:	sbb    eax,0xc6354496
  4120dd:	aam    0x3
  4120df:	fsubr  DWORD PTR [ebp+0x4e]
  4120e2:	adc    eax,0x805faa59
  4120e7:	(bad)  
  4120e8:	sub    al,0x9f
  4120ea:	adc    DWORD PTR [ecx+0x59ce8262],esi
  4120f0:	stos   DWORD PTR es:[edi],eax
  4120f1:	aas    
  4120f2:	rol    ebx,0xd5
  4120f5:	sub    BYTE PTR [eax+eiz*8-0x1b75e39e],al
  4120fc:	clc    
  4120fd:	push   ss
  4120fe:	push   0xfffffff0
  412100:	adc    DWORD PTR [ecx],esp
  412102:	sbb    eax,0x47309b48
  412107:	in     al,dx
  412108:	jmp    0xf1d8e45b
  41210d:	mov    ds:0xf49ac595,al
  412112:	inc    ecx
  412113:	sub    bh,BYTE PTR [edi+eiz*4-0x16d6e0e]
  41211a:	into   
  41211b:	dec    edi
  41211c:	out    0x1a,al
  41211e:	icebp  
  41211f:	mov    al,ds:0x4c0df281
  412124:	je     0x4120e8
  412126:	repnz daa 
  412128:	lahf   
  412129:	xor    BYTE PTR [ebx-0x219a73db],bl
  41212f:	stc    
  412130:	push   esp
  412131:	int    0x45
  412133:	and    al,0x88
  412135:	inc    ecx
  412136:	rol    bh,1
  412138:	(bad)  
  41213a:	mov    bl,0xfd
  41213c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41213d:	stos   DWORD PTR es:[edi],eax
  41213e:	sti    
  41213f:	xor    ecx,DWORD PTR [edi-0x56b30bdd]
  412145:	xchg   ebp,eax
  412146:	fcomp  st(6)
  412148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412149:	pop    ebp
  41214a:	test   DWORD PTR [ecx+0x0],esi
  41214d:	in     eax,0xc
  41214f:	xor    DWORD PTR [eax-0x2fefa0a4],ebx
  412155:	dec    esi
  412156:	xchg   DWORD PTR [edx+0x5e],esi
  412159:	ins    BYTE PTR es:[edi],dx
  41215a:	dec    edi
  41215b:	push   edi
  41215c:	mov    ebx,0xf90aa30a
  412161:	mov    bl,0x1
  412163:	cmp    eax,0xb3334fd4
  412168:	loopne 0x412138
  41216a:	int3   
  41216b:	data16 sub al,0x1
  41216e:	mov    bl,0x0
  412170:	sub    dh,BYTE PTR [edi-0x1e]
  412173:	and    al,0x1f
  412175:	push   0x721dc61
  41217a:	mov    ebx,0xe50b3f3d
  41217f:	cmp    eax,0x9d0684b
  412184:	xchg   esp,eax
  412185:	push   ss
  412186:	mov    bl,0x9e
  412188:	idiv   DWORD PTR [edi-0x62f343ae]
  41218e:	out    0xea,al
  412190:	rol    BYTE PTR ds:0xc998654a,cl
  412196:	xchg   ebp,eax
  412197:	and    al,0x80
  412199:	push   ecx
  41219a:	das    
  41219b:	jecxz  0x4121a6
  41219d:	xchg   ebx,eax
  41219e:	push   ecx
  4121a0:	inc    esi
  4121a1:	das    
  4121a2:	xor    edi,DWORD PTR [ebp-0x1148e9]
  4121a8:	mov    ch,0x22
  4121aa:	sub    al,0x31
  4121ac:	push   esi
  4121ad:	int3   
  4121ae:	cli    
  4121af:	lock loope 0x412183
  4121b2:	jg     0x412198
  4121b4:	push   0x8b74dc8a
  4121b9:	mov    gs,WORD PTR [ebx+0x3f]
  4121bc:	ficom  DWORD PTR [edi]
  4121be:	mov    bl,0x72
  4121c0:	dec    ebx
  4121c1:	mov    edi,0xa7fd0b99
  4121c6:	jl     0x41217c
  4121c8:	lock mov ds:0x8034a0d5,eax
  4121ce:	push   ss
  4121cf:	jne    0x4121ed
  4121d1:	into   
  4121d2:	xor    eax,0x5084960b
  4121d7:	out    dx,eax
  4121d8:	nop
  4121d9:	fsubr  DWORD PTR [edx+0x241d0498]
  4121df:	xchg   edx,eax
  4121e0:	mov    edx,DWORD PTR [ebx-0x3a]
  4121e3:	int3   
  4121e4:	(bad)  
  4121e5:	push   esp
  4121e6:	sub    BYTE PTR [edx],dh
  4121e8:	and    eax,0x4965cc7c
  4121ed:	xchg   edx,eax
  4121ee:	ret    
  4121ef:	in     al,dx
  4121f0:	or     eax,0x74e53b4b
  4121f5:	fimul  WORD PTR ds:0x7b765d3a
  4121fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121fc:	xor    ecx,DWORD PTR [eax+esi*4-0x13]
  412200:	jge    0x412269
  412202:	sub    dh,0xdb
  412205:	inc    eax
  412206:	inc    edi
  412207:	neg    BYTE PTR [esi+edx*1+0x9ebb6e]
  41220e:	dec    ebp
  41220f:	scas   al,BYTE PTR es:[edi]
  412210:	mov    ch,0xe4
  412212:	or     al,0x4a
  412214:	les    esi,FWORD PTR [esi+0x6146c415]
  41221a:	sub    bl,BYTE PTR [edx+edi*2+0x66]
  41221e:	scas   al,BYTE PTR es:[edi]
  41221f:	loope  0x412212
  412221:	or     eax,0xe97453c8
  412226:	leave  
  412227:	repnz cld 
  412229:	inc    edi
  41222a:	pop    ss
  41222b:	mov    ah,0xd5
  41222d:	mov    esi,0xd15734f7
  412232:	shr    BYTE PTR [ebp+0x45f31abe],0x15
  412239:	pop    esp
  41223a:	popf   
  41223b:	jno    0x412209
  41223d:	in     al,0xa3
  41223f:	ja     0x412251
  412241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412242:	pop    ss
  412243:	pop    eax
  412244:	lods   eax,DWORD PTR ds:[esi]
  412245:	or     BYTE PTR [edi-0x53],dh
  412248:	push   esi
  412249:	push   ebp
  41224a:	jge    0x4122b7
  41224c:	inc    ecx
  41224d:	xor    BYTE PTR [bp-0x4712],0xa
  412253:	sub    al,0xf0
  412255:	jmp    0x58f36f9d
  41225a:	push   eax
  41225b:	(bad)  
  41225c:	ins    DWORD PTR es:[edi],dx
  41225d:	xor    eax,0x9c30b63d
  412262:	add    dh,BYTE PTR [ebx+0x3a]
  412265:	out    dx,eax
  412266:	mov    eax,0xf9fbd71d
  41226b:	jecxz  0x4122b5
  41226d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41226e:	jb     0x412244
  412270:	and    DWORD PTR [edx-0x7f],edi
  412273:	cli    
  412274:	js     0x412249
  412276:	arpl   WORD PTR [eax+0x5eeaae18],bp
  41227c:	mov    fs:0xf3ba817a,eax
  412282:	add    BYTE PTR [esi-0x31],0x26
  412286:	(bad)  
  412287:	ror    BYTE PTR [ebx+0x2066bfeb],1
  41228d:	xchg   ebx,eax
  41228e:	enter  0x9d4c,0x86
  412292:	in     eax,0xfb
  412294:	je     0x4122d8
  412296:	cmp    al,0x60
  412298:	mov    al,ds:0xdb0dccd
  41229d:	mov    edx,0xe59b2fa6
  4122a2:	fst    QWORD PTR [edx]
  4122a4:	out    dx,eax
  4122a5:	mov    dh,0xaf
  4122a7:	fcmovne st,st(6)
  4122a9:	mov    edx,0xe56f76a
  4122ae:	pop    edx
  4122af:	call   0xb12d:0x16dd5f79
  4122b6:	xchg   edi,eax
  4122b7:	push   edx
  4122b8:	iret   
  4122b9:	xchg   ebp,eax
  4122ba:	pop    DWORD PTR [ebp+0x52d98b80]
  4122c0:	in     al,0x13
  4122c2:	fisub  WORD PTR [edx-0x74a6c6ae]
  4122c8:	lods   eax,DWORD PTR ds:[esi]
  4122c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122ca:	sbb    al,0x16
  4122cc:	clc    
  4122cd:	add    BYTE PTR [ebx],0xa5
  4122d0:	pop    ebp
  4122d1:	inc    ebx
  4122d2:	fisubr DWORD PTR [edx-0x1ba5556d]
  4122d8:	cli    
  4122d9:	neg    BYTE PTR [edx+0x67]
  4122dc:	push   0x5d
  4122de:	neg    DWORD PTR [ecx+ebx*4-0x439cd9c1]
  4122e5:	les    eax,FWORD PTR [ebx-0x48]
  4122e8:	inc    esi
  4122e9:	retf   
  4122ea:	sub    dl,BYTE PTR [eax+0x1074f962]
  4122f0:	and    al,0x14
  4122f2:	popf   
  4122f3:	sub    dl,dl
  4122f5:	sub    ebx,DWORD PTR [eax-0x78]
  4122f8:	retf   
  4122f9:	scas   eax,DWORD PTR es:[edi]
  4122fa:	dec    ebx
  4122fb:	test   DWORD PTR [edx+0x3ed1146],0x90cc0838
  412305:	int3   
  412306:	out    0x3a,al
  412308:	pop    ecx
  412309:	dec    esi
  41230a:	lahf   
  41230b:	cld    
  41230c:	mov    ah,0x5c
  41230e:	push   es
  41230f:	sbb    eax,0x63bb9dd2
  412314:	ins    BYTE PTR es:[edi],dx
  412315:	(bad)  
  412316:	adc    eax,0x3c8306e
  41231b:	xlat   BYTE PTR ds:[ebx]
  41231c:	and    ebx,ecx
  41231e:	(bad)
  412321:	mov    bl,0xbe
  412323:	jmp    0x5e2:0x1f43580f
  41232a:	sub    DWORD PTR [ebp-0x5d6bb181],ecx
  412330:	lods   eax,DWORD PTR ds:[esi]
  412331:	or     al,0x5f
  412333:	cmp    dh,BYTE PTR [edi-0x6adbb508]
  412339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41233a:	pop    ecx
  41233b:	jb     0x4123a4
  41233d:	xor    eax,0x3cceb53d
  412342:	jp     0x4123bf
  412344:	inc    edx
  412345:	js     0x4122ce
  412347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412348:	xlat   BYTE PTR ds:[ebx]
  412349:	xchg   esp,eax
  41234a:	sbb    BYTE PTR [ecx-0xe],cl
  41234d:	or     ecx,DWORD PTR [edx]
  41234f:	stos   BYTE PTR es:[edi],al
  412350:	xchg   ecx,eax
  412351:	xchg   edx,eax
  412352:	jmp    0x8046c46c
  412357:	cli    
  412358:	in     al,dx
  412359:	adc    eax,0x68f1f76d
  41235e:	hlt    
  41235f:	test   DWORD PTR [ebp-0x54],0x2612dd17
  412366:	out    dx,eax
  412367:	dec    edx
  412368:	pop    edx
  412369:	daa    
  41236a:	inc    esp
  41236b:	pop    ecx
  41236c:	sbb    al,0xdd
  41236e:	inc    ecx
  41236f:	and    al,0x21
  412371:	js     0x41233d
  412373:	push   ds
  412374:	cmp    al,0x3c
  412376:	sub    BYTE PTR [ebx-0x6a2e9817],ah
  41237c:	jae    0x412368
  41237e:	fdivp  st(2),st
  412380:	jbe    0x4123fc
  412382:	dec    ebx
  412383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412384:	pop    ebx
  412385:	xor    BYTE PTR [esi],dh
  412387:	add    cl,cl
  412389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41238a:	pop    ebp
  41238b:	lds    ebp,FWORD PTR [ebp+0x57a4314f]
  412391:	cs popf 
  412393:	sbb    DWORD PTR [edx-0x53748ac7],ecx
  412399:	ins    BYTE PTR es:[edi],dx
  41239a:	xchg   edi,eax
  41239b:	dec    ebx
  41239c:	mov    dh,0x12
  41239e:	cmc    
  41239f:	inc    ebp
  4123a0:	jg     0x412380
  4123a2:	dec    ebx
  4123a3:	cmp    BYTE PTR [bp+si],bl
  4123a6:	push   0xffffffb4
  4123a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a9:	gs push 0xffffffa7
  4123ac:	lahf   
  4123ad:	rol    DWORD PTR [esi],cl
  4123af:	popa   
  4123b0:	xchg   ebx,eax
  4123b1:	int3   
  4123b2:	inc    esp
  4123b3:	xor    DWORD PTR [esi-0x116e9c6],esi
  4123b9:	fimul  WORD PTR [esi-0x22]
  4123bc:	xor    ah,BYTE PTR [esi-0x7c]
  4123bf:	or     al,0xde
  4123c1:	pop    ebx
  4123c2:	jno    0x412439
  4123c4:	ficomp DWORD PTR [ecx]
  4123c6:	cmp    dl,BYTE PTR [esi+edx*1-0x1f]
  4123ca:	add    al,0x44
  4123cc:	jb     0x412410
  4123ce:	jmp    0x73e5d43f
  4123d3:	add    bl,BYTE PTR [ebp+0x6c]
  4123d6:	xchg   edi,edi
  4123d8:	sub    al,0xea
  4123da:	cli    
  4123db:	xor    eax,0xc85a40a0
  4123e0:	and    eax,0x2213a8b
  4123e5:	inc    ebx
  4123e6:	sbb    cl,BYTE PTR [edi-0x5f]
  4123e9:	jbe    0x412387
  4123eb:	mov    ax,ds:0x89a67ac4
  4123f1:	mov    edx,ebp
  4123f3:	ss rcr esp,0xd6
  4123f7:	outs   dx,BYTE PTR ds:[esi]
  4123f8:	scas   eax,DWORD PTR es:[edi]
  4123f9:	pop    eax
  4123fa:	loop   0x4123a6
  4123fc:	outs   dx,BYTE PTR ds:[esi]
  4123fd:	jle    0x412439
  4123ff:	mov    eax,ds:0x7c67b41f
  412404:	in     al,dx
  412405:	arpl   WORD PTR [ecx],dx
  412407:	push   0x259edc7e
  41240c:	or     al,0x36
  41240e:	mov    DWORD PTR [esi-0x2c967c1d],edx
  412414:	imul   ebx,DWORD PTR [ebx+0x21],0xb048f2d7
  41241b:	and    eax,DWORD PTR [edx+0x5ff5a7ab]
  412421:	test   eax,0x96081cda
  412426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412427:	enter  0xdae5,0x4b
  41242b:	fbstp  TBYTE PTR [ebp+0x5c675fd1]
  412431:	iret   
  412432:	les    ebp,FWORD PTR [ebx-0x1c]
  412435:	scas   eax,DWORD PTR es:[edi]
  412436:	mov    eax,ds:0x52879295
  41243b:	add    al,0x96
  41243d:	adc    DWORD PTR [edi],eax
  41243f:	xor    DWORD PTR [esi+0xf],edx
  412442:	push   ecx
  412443:	imul   edx,DWORD PTR [eax],0x40970624
  412449:	dec    ebx
  41244a:	cmc    
  41244b:	stos   DWORD PTR es:[edi],eax
  41244c:	js     0x412418
  41244e:	xchg   esp,eax
  41244f:	out    0x83,eax
  412451:	push   ss
  412452:	mov    cl,0xf4
  412454:	jb     0x4124bb
  412456:	rol    BYTE PTR [eax-0x7b],1
  412459:	inc    eax
  41245a:	sbb    al,0x88
  41245c:	xchg   ebx,eax
  41245d:	sar    BYTE PTR [eax],cl
  41245f:	lods   eax,DWORD PTR ds:[esi]
  412460:	pop    ebp
  412461:	pop    ss
  412462:	mov    es,WORD PTR ds:0x281fc50f
  412468:	adc    ebp,DWORD PTR [ebx+0x34]
  41246b:	shr    DWORD PTR [edx+0x5ccf7583],1
  412471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412472:	pop    eax
  412473:	cld    
  412474:	test   eax,0x66e5c179
  412479:	les    ebx,FWORD PTR [esi+ebx*4]
  41247c:	and    dh,BYTE PTR [esi+0x788d7daf]
  412482:	test   ch,bl
  412484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412485:	or     BYTE PTR [ebp+eax*8-0x18],dl
  412489:	(bad)  
  41248b:	xor    edi,esi
  41248d:	push   edx
  41248e:	aad    0x6b
  412490:	mov    BYTE PTR [edx-0x67f8b2e6],bl
  412496:	stc    
  412497:	jno    0x41246b
  412499:	push   eax
  41249a:	ud1    edx,edi
  41249d:	test   eax,0xd89c2004
  4124a2:	js     0x4124df
  4124a4:	mov    dh,0x74
  4124a6:	and    ebx,DWORD PTR [edx+0x5d108b29]
  4124ac:	mov    esi,0x214a5340
  4124b1:	repz ficom WORD PTR [edi+0x1e]
  4124b5:	fs xor al,0x2d
  4124b8:	mov    ds:0xbca22b99,al
  4124bd:	xor    eax,0xa497a65a
  4124c2:	fwait
  4124c3:	aaa    
  4124c4:	cmc    
  4124c5:	ror    DWORD PTR [ebp+esi*2+0x4e],1
  4124c9:	je     0x412538
  4124cb:	adc    DWORD PTR [edx+ebx*4],ecx
  4124ce:	push   eax
  4124cf:	ret    0xc0c
  4124d2:	xchg   edx,eax
  4124d3:	sti    
  4124d4:	hlt    
  4124d5:	and    BYTE PTR [esi],al
  4124d7:	loop   0x412496
  4124d9:	out    0xf8,eax
  4124db:	cs inc ebx
  4124dd:	std    
  4124de:	jecxz  0x412507
  4124e0:	inc    ecx
  4124e1:	retf   0xea6
  4124e4:	xchg   ebp,eax
  4124e5:	mov    ebp,0xe8eb5886
  4124ea:	stos   BYTE PTR es:[edi],al
  4124eb:	leave  
  4124ec:	add    DWORD PTR [eax+0x1e],edx
  4124ef:	dec    edi
  4124f0:	in     al,0x44
  4124f2:	push   eax
  4124f3:	scas   eax,DWORD PTR es:[edi]
  4124f4:	daa    
  4124f5:	inc    ecx
  4124f6:	mov    dl,0x6
  4124f8:	mov    edi,0x1e287082
  4124fd:	jnp    0x41256b
  4124ff:	mov    eax,ds:0x315abd0d
  412504:	out    0x97,eax
  412506:	push   ds
  412507:	inc    edx
  412508:	shl    bh,1
  41250a:	push   0x59dcc8fa
  41250f:	repnz inc ebx
  412511:	(bad)
  412514:	mov    dh,0xd9
  412516:	push   esp
  412517:	mov    ah,0xb2
  412519:	cmp    DWORD PTR [eax-0xf],eax
  41251c:	xchg   esp,eax
  41251d:	(bad)
  412520:	add    DWORD PTR [ebx-0x6b],ebx
  412523:	addr16 cld 
  412525:	jge    0x412575
  412527:	and    BYTE PTR [ecx+0x4e17f2ad],0x2f
  41252e:	inc    edi
  41252f:	(bad)
  412532:	mov    ss,edi
  412534:	cld    
  412535:	in     eax,dx
  412536:	cmp    DWORD PTR [edx+0x193149ab],0x5f6abd42
  412540:	and    BYTE PTR ds:0x26dd4fba,dl
  412546:	aaa    
  412547:	xchg   edi,eax
  412548:	push   es
  412549:	or     eax,0x87d66a22
  41254e:	adc    eax,0x769d65d2
  412553:	mov    ds:0x39732846,al
  412558:	shl    DWORD PTR [ebx-0x6859bb5f],cl
  41255e:	jno    0x41256c
  412560:	(bad)  
  412561:	xor    BYTE PTR [ebx],cl
  412563:	arpl   WORD PTR [esi],di
  412565:	in     al,dx
  412566:	adc    ebx,edx
  412568:	push   ecx
  412569:	cwde   
  41256a:	xor    DWORD PTR [ecx],ebx
  41256c:	outs   dx,BYTE PTR es:[esi]
  41256e:	aaa    
  41256f:	jnp    0x4124fb
  412571:	sahf   
  412572:	imul   esp,DWORD PTR [esi],0x3b
  412575:	div    ebp
  412577:	or     esp,ecx
  412579:	sbb    eax,0xa22c536
  41257e:	js     0x412576
  412580:	stos   BYTE PTR es:[edi],al
  412581:	cmp    esp,DWORD PTR [esp+edx*2]
  412584:	mov    ebx,0xb5e06ba4
  412589:	cld    
  41258a:	xchg   edi,eax
  41258b:	jns    0x4125a0
  41258d:	inc    ebx
  41258e:	sub    BYTE PTR [eax+0x15],bh
  412591:	mov    ds:0x7ed231d9,eax
  412596:	sub    BYTE PTR [eax-0x2d1a44ef],cl
  41259c:	out    0x24,eax
  41259e:	rcr    BYTE PTR [ecx],1
  4125a0:	retf   
  4125a1:	rcr    BYTE PTR [esi-0x18758945],cl
  4125a7:	pop    ebx
  4125a8:	dec    ebx
  4125a9:	mov    edx,0x5d15bf2b
  4125ae:	lock (bad) 
  4125b1:	loope  0x412580
  4125b3:	imul   ebp,DWORD PTR cs:[eax+0x7d68232c],0x67d85954
  4125be:	aas    
  4125bf:	cld    
  4125c0:	addr16 je 0x412603
  4125c3:	mov    ebp,0x2d07e542
  4125c8:	xor    esp,DWORD PTR [esi-0x6ff4e675]
  4125ce:	or     ch,BYTE PTR [edx+0x3]
  4125d1:	jo     0x4125b3
  4125d3:	and    al,ch
  4125d5:	mov    cl,0x58
  4125d7:	xchg   ecx,eax
  4125d8:	mov    eax,ds:0xd93a6769
  4125dd:	test   al,0xa4
  4125df:	mov    esi,DWORD PTR ds:0x807c9b89
  4125e5:	jo     0x4125ae
  4125e7:	imul   BYTE PTR [esi+0x44f01e34]
  4125ed:	add    eax,0x35ff14f9
  4125f2:	ficom  WORD PTR [ebp+0x2021f1ad]
  4125f8:	pop    eax
  4125f9:	xor    al,0x71
  4125fb:	sbb    dl,cl
  4125fd:	imul   ecx,esi,0x2c
  412600:	std    
  412601:	mov    ds:0x666643eb,eax
  412606:	test   DWORD PTR ds:0x4026b7da,ebp
  41260c:	mov    ah,0x4a
  41260e:	mov    ch,0x15
  412610:	pop    ss
  412611:	test   al,0x3
  412613:	push   ss
  412614:	stos   DWORD PTR es:[edi],eax
  412615:	mov    eax,0xf55dd04f
  41261a:	out    0x46,al
  41261c:	ss (bad) 
  41261e:	clc    
  41261f:	pop    edx
  412620:	ds push 0x9f6dcd2e
  412626:	je     0x412663
  412628:	sub    bl,BYTE PTR [edi+0x44]
  41262b:	mov    ebx,0xd3731ccc
  412630:	(bad)  
  412631:	jbe    0x41267b
  412633:	mov    edi,0x6be24d9f
  412638:	(bad)  
  412639:	div    edx
  41263b:	test   al,0xbd
  41263d:	pop    ss
  41263e:	repnz mov ecx,0x3e95c582
  412644:	or     BYTE PTR [ecx+0x46],bh
  412647:	shr    BYTE PTR [edx-0x2a4eaf73],0xcb
  41264e:	inc    edx
  41264f:	pxor   mm0,QWORD PTR cs:[eax]
  412653:	and    eax,0x112b5905
  412658:	mov    ah,0xbc
  41265a:	jae    0x4126b2
  41265c:	das    
  41265d:	inc    eax
  41265e:	fs inc ebx
  412660:	pop    ebp
  412661:	outs   dx,BYTE PTR ds:[esi]
  412662:	jl     0x4126b6
  412664:	adc    DWORD PTR [eax+0x6cbc29ba],ecx
  41266a:	dec    ecx
  41266b:	jg     0x41267b
  41266d:	dec    ebp
  41266e:	pop    ds
  41266f:	add    BYTE PTR [ebx+0x6d],dl
  412672:	loopne 0x4126b6
  412674:	xchg   BYTE PTR [esi-0x39],bh
  412677:	test   ebp,ecx
  412679:	aad    0xcd
  41267b:	mov    ah,0xb7
  41267d:	fdivr  DWORD PTR [ecx*4+0x252361b]
  412684:	jo     0x4126dd
  412686:	cmc    
  412687:	dec    eax
  412688:	mov    ebp,0xdf9fbc7d
  41268d:	push   edi
  41268e:	jg     0x4126bd
  412690:	mov    edi,0x8389b3c8
  412695:	mov    cl,0xe7
  412697:	ret    
  412698:	ss mov ch,0x1b
  41269b:	frstor [ebx+ebx*4]
  41269e:	push   esp
  41269f:	mov    esp,0xe574117f
  4126a4:	jo     0x412663
  4126a6:	mov    es,WORD PTR ds:0x98453ed4
  4126ac:	sbb    ebp,DWORD PTR [edi]
  4126ae:	pusha  
  4126af:	fldlg2 
  4126b1:	jl     0x41265d
  4126b3:	or     ah,BYTE PTR [eax]
  4126b5:	gs push cs
  4126b7:	dec    eax
  4126b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126b9:	and    al,BYTE PTR [eax]
  4126bb:	mov    ch,0x3f
  4126bd:	push   0x3c0ece03
  4126c2:	arpl   WORD PTR [ecx+0x47],dx
  4126c5:	xor    esi,DWORD PTR [edx-0xe]
  4126c8:	shr    DWORD PTR [ecx+eax*1-0x5013cc06],0x82
  4126d0:	pusha  
  4126d1:	(bad)  
  4126d2:	mov    ebx,0x848941dc
  4126d7:	sar    BYTE PTR [edx],0x9
  4126da:	addr16 fcomi st,st(6)
  4126dd:	adc    eax,DWORD PTR [eax+0x516d41c4]
  4126e3:	sub    eax,0xdd220f7a
  4126e8:	loope  0x41273b
  4126ea:	shl    BYTE PTR [esi],1
  4126ec:	bound  ecx,QWORD PTR gs:[ebp-0x6916281c]
  4126f3:	outs   dx,BYTE PTR ds:[esi]
  4126f4:	sbb    al,0x2a
  4126f6:	(bad)  
  4126f7:	retf   0xe5d1
  4126fa:	popf   
  4126fb:	call   0xca34497c
  412700:	inc    DWORD PTR [ebx]
  412702:	call   0xddef:0x34b8b673
  412709:	mov    dl,0x4c
  41270b:	ss jle 0x412760
  41270e:	sbb    eax,0x3e2cea1b
  412713:	dec    eax
  412714:	fist   WORD PTR [esi+0x4]
  412717:	sub    DWORD PTR [ecx+0x3d65394a],edx
  41271d:	jge    0x4126a0
  41271f:	xlat   BYTE PTR ds:[ebx]
  412720:	fidiv  DWORD PTR [ebp-0x538ecd66]
  412726:	leave  
  412727:	enter  0xf680,0xa
  41272b:	dec    ebp
  41272c:	adc    BYTE PTR [ecx+0x247ca554],ch
  412732:	sbb    al,0xf0
  412734:	imul   edx,DWORD PTR [esi-0x284a6ef5],0xfeb14242
  41273e:	mov    BYTE PTR [edi],al
  412740:	shr    BYTE PTR [esi+eiz*4+0x7a],cl
  412744:	xchg   ecx,eax
  412745:	jo     0x412795
  412747:	shl    DWORD PTR [edx-0x78d9be15],1
  41274d:	mov    ds:0x642c2606,al
  412752:	xchg   ecx,eax
  412753:	inc    ebx
  412754:	mov    al,0x5e
  412756:	cs pushf 
  412758:	inc    edi
  412759:	mov    ds:0x516f3b85,al
  41275e:	ret    
  41275f:	xor    esi,DWORD PTR [esi]
  412761:	lea    eax,[edx+esi*4-0x20]
  412765:	cli    
  412766:	out    0xe0,al
  412768:	mov    eax,0x4eddd27d
  41276d:	shl    DWORD PTR [edx],cl
  41276f:	cmp    dh,BYTE PTR [edx-0x51]
  412772:	lea    esi,[edi+0x25fef1fa]
  412778:	inc    ecx
  412779:	not    esi
  41277b:	sub    al,0x1e
  41277d:	dec    edx
  41277e:	push   esp
  41277f:	fcom   st(1)
  412781:	cmp    BYTE PTR [ebx],dh
  412783:	mov    bl,0xe4
  412785:	addr16 mov ch,0x32
  412788:	mov    eax,ds:0xf6ae4a5
  41278d:	leave  
  41278e:	(bad)  
  41278f:	pop    ds
  412790:	mov    edi,DWORD PTR [edx]
  412792:	jo     0x412780
  412794:	inc    ebp
  412795:	jbe    0x412721
  412797:	inc    eax
  412798:	pop    ebp
  412799:	and    DWORD PTR [ebx+0x57],edx
  41279c:	dec    esp
  41279d:	or     eax,0x847c1f28
  4127a2:	int3   
  4127a3:	jge    0x412734
  4127a5:	lea    esi,[edi-0x52]
  4127a8:	call   0x39ba:0xb9cf92af
  4127af:	sbb    ebx,eax
  4127b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b2:	daa    
  4127b3:	mov    bl,0x81
  4127b5:	sbb    esp,edi
  4127b7:	jmp    0x52ad:0x8318ac1c
  4127be:	mul    BYTE PTR [ebp-0x7d]
  4127c1:	ja     0x412780
  4127c3:	out    0x46,al
  4127c5:	lea    esp,[ebp+edx*2-0x3248a2ef]
  4127cc:	cld    
  4127cd:	jno    0x412828
  4127cf:	pop    ss
  4127d0:	mov    BYTE PTR [edx+0x54402160],bl
  4127d6:	push   eax
  4127d7:	stc    
  4127d8:	mov    ecx,0x80d7821e
  4127dd:	imul   ebp,DWORD PTR [ebx+esi*4-0xc70b289],0x4dc23025
  4127e8:	xchg   ecx,eax
  4127e9:	and    eax,0x1b9318bf
  4127ee:	cmp    al,BYTE PTR [edx+0x536b028f]
  4127f4:	outs   dx,BYTE PTR ds:[esi]
  4127f5:	sub    DWORD PTR [eax+0x56ceb846],ebx
  4127fb:	addr16 adc eax,0x3e01e50d
  412801:	add    BYTE PTR [esi-0x5a],bh
  412804:	xchg   edx,eax
  412805:	mov    bl,BYTE PTR [eax+0x603b1039]
  41280b:	ret    
  41280c:	jmp    0x6709:0xdce7a992
  412813:	mov    fs,WORD PTR [eax+0x4f]
  412816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412817:	push   ebp
  412818:	fcmovu st,st(2)
  41281a:	add    ecx,edi
  41281c:	mov    al,0x99
  41281e:	and    BYTE PTR [edi],0x6b
  412821:	lods   al,BYTE PTR ds:[esi]
  412822:	or     ah,ah
  412824:	adc    al,0x5a
  412826:	imul   ecx,DWORD PTR [edi+0x1f],0x3d0f885a
  41282d:	dec    eax
  41282e:	push   0xc06481ad
  412833:	in     al,dx
  412834:	(bad)  
  412835:	std    
  412836:	push   es
  412837:	gs retf 0xad73
  41283b:	repnz mov edi,0xf1e9981b
  412841:	or     ecx,ebx
  412843:	push   esp
  412844:	mov    ah,0x72
  412846:	pop    esp
  412847:	mov    eax,0xcc7caabb
  41284c:	inc    eax
  41284d:	or     esi,DWORD PTR [ecx]
  41284f:	icebp  
  412850:	adc    al,0x87
  412852:	loope  0x4128d3
  412854:	aam    0xf2
  412856:	popa   
  412857:	jecxz  0x41280b
  412859:	xchg   ebx,eax
  41285a:	pop    ebx
  41285b:	popa   
  41285c:	stos   BYTE PTR es:[edi],al
  41285d:	mov    edi,0xa0600b05
  412862:	mov    ds:0x5572b72a,al
  412867:	jo     0x4128b5
  412869:	imul   eax,DWORD PTR [edx+0xe36fdd8],0xffffff82
  412870:	dec    esp
  412871:	mov    cl,bh
  412873:	pusha  
  412874:	mov    esi,0xd6bb5836
  412879:	mov    edx,0x436c4400
  41287e:	dec    esi
  41287f:	xor    BYTE PTR ds:0xab70bcca,bl
  412885:	xor    edx,DWORD PTR [ecx]
  412887:	fs mov dh,0xfe
  41288a:	retf   
  41288b:	(bad)  
  41288c:	lahf   
  41288d:	or     eax,0x94dc8a0c
  412892:	or     bl,BYTE PTR [edx+0x2]
  412895:	adc    ah,BYTE PTR [ebx-0x6f501642]
  41289b:	pop    esi
  41289c:	adc    DWORD PTR [edi-0x66],esp
  41289f:	push   0xb8a9ef66
  4128a4:	mov    ds:0x7bbd854b,al
  4128a9:	mov    ebp,0xf6247e7f
  4128ae:	and    eax,0x3efff9a5
  4128b3:	mov    bh,BYTE PTR [ebx]
  4128b5:	cmp    bl,BYTE PTR [ebx]
  4128b7:	xchg   ecx,eax
  4128b8:	loope  0x412938
  4128ba:	les    edi,FWORD PTR [ecx-0x59]
  4128bd:	ficomp DWORD PTR [edx+0x7a]
  4128c0:	test   ebp,esp
  4128c2:	push   esp
  4128c3:	bndldx (bad),[ecx+0x5d]
  4128c7:	pmulhuw mm7,QWORD PTR [ebx+0x44]
  4128cb:	cmp    eax,0x56b81e5b
  4128d0:	dec    ecx
  4128d1:	mov    esi,0xb986b7b
  4128d6:	xor    al,0x9e
  4128d8:	jns    0x412902
  4128da:	popa   
  4128db:	dec    ebx
  4128dc:	mov    BYTE PTR [esi-0x16ebbd38],bh
  4128e2:	repz retf 
  4128e4:	jno    0x4128bb
  4128e6:	or     al,0x5d
  4128e8:	pop    ebp
  4128e9:	and    al,BYTE PTR [ebx-0x2c4ad2f4]
  4128ef:	and    esp,DWORD PTR [ecx+0x70]
  4128f2:	pop    ebx
  4128f3:	shl    BYTE PTR [eax-0x3abc8438],0x5
  4128fa:	mov    eax,0xbc330ea5
  4128ff:	fidivr DWORD PTR [ecx]
  412901:	xchg   ebp,eax
  412902:	cmc    
  412903:	push   cs
  412904:	cli    
  412905:	and    al,0x5d
  412907:	push   0xa37fdb91
  41290c:	xor    BYTE PTR [ebp+0x7b7a5c42],ch
  412912:	xchg   ecx,eax
  412913:	inc    ebx
  412914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412915:	or     edi,DWORD PTR [ebx-0x50]
  412918:	push   ebx
  412919:	xchg   ecx,eax
  41291a:	xchg   edi,eax
  41291b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41291c:	jo     0x41292b
  41291e:	jmp    0x412933
  412920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412921:	push   esp
  412922:	sub    DWORD PTR [eax-0x48b36976],0x6d
  412929:	xor    BYTE PTR ss:[edi-0x37d80e42],al
  412930:	and    DWORD PTR [eax+0x2aa9536d],ebx
  412936:	inc    ebp
  412937:	mov    dh,0x8c
  412939:	imul   ebx,DWORD PTR [edx-0x50],0xfffffffc
  41293d:	or     eax,0xd00a9649
  412942:	sub    DWORD PTR [ecx+ecx*1+0x35],esi
  412946:	pop    es
  412947:	or     DWORD PTR [edx-0x4b9807dc],esp
  41294d:	call   0xacf16c66
  412952:	mov    edi,ecx
  412954:	jecxz  0x412991
  412956:	mov    esp,0x23198b91
  41295b:	mov    ds:0xf9475f1e,eax
  412960:	adc    ah,bh
  412962:	int    0xa0
  412964:	pop    ebp
  412965:	sub    al,0xa5
  412967:	mov    dh,0x9a
  412969:	add    cl,BYTE PTR [edi-0x46]
  41296c:	push   ebx
  41296d:	leave  
  41296e:	adc    BYTE PTR [edx],0xba
  412971:	or     al,0x22
  412973:	fimul  WORD PTR [esi+0x561cf8fe]
  412979:	xchg   esi,eax
  41297a:	and    eax,edi
  41297c:	mov    esp,0x14e86a36
  412981:	inc    esi
  412982:	mov    BYTE PTR [esi-0x4a33846b],dh
  412988:	loope  0x412928
  41298a:	nop
  41298b:	or     ebp,DWORD PTR [ecx-0x16]
  41298e:	pop    ss
  41298f:	data16 jno 0x4129c9
  412992:	(bad)  
  412994:	mov    ebx,0xf340e1de
  412999:	mov    eax,0x1e698645
  41299e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4129a0:	stos   BYTE PTR es:[edi],al
  4129a1:	and    eax,0x4780ffcf
  4129a6:	cmp    esp,DWORD PTR [eax+0x67327e92]
  4129ac:	jnp    0x41295e
  4129ae:	in     al,dx
  4129af:	inc    ebx
  4129b0:	sub    BYTE PTR [esi+0x62],ch
  4129b3:	xor    al,0xdb
  4129b5:	jnp    0x412952
  4129b7:	(bad)  
  4129b9:	xchg   ecx,eax
  4129ba:	sbb    DWORD PTR [ebp+0x3e],esp
  4129bd:	enter  0xf42f,0x1b
  4129c1:	pop    ebp
  4129c2:	mov    ecx,0x63709b7e
  4129c7:	cs (bad) 
  4129c9:	jg     0x412a43
  4129cb:	add    edx,DWORD PTR [ecx+0x6dea7b5f]
  4129d1:	add    esp,DWORD PTR [ebx-0x32]
  4129d4:	cmp    dl,BYTE PTR [edi-0x50]
  4129d7:	cmp    al,BYTE PTR [ecx+0x1a7a9f1c]
  4129dd:	and    DWORD PTR [esi-0x38],ebx
  4129e0:	imul   ebp,DWORD PTR [ecx-0x37],0x5868cfdc
  4129e7:	xor    BYTE PTR [eax+ebp*8],bh
  4129ea:	not    BYTE PTR [ebx]
  4129ec:	in     eax,0xae
  4129ee:	repz shl BYTE PTR [edx+0x41a2e40a],1
  4129f5:	jbe    0x4129fd
  4129f7:	stos   DWORD PTR es:[edi],eax
  4129f8:	xchg   esi,eax
  4129f9:	cvtps2pd xmm1,xmm6
  4129fc:	imul   edi,ebx,0xfffffff2
  4129ff:	ret    0xb557
  412a02:	xor    BYTE PTR [ecx+0x5be57435],0x1
  412a09:	xchg   ebp,eax
  412a0a:	push   ebp
  412a0b:	sbb    eax,0x7b5e9024
  412a10:	(bad)  
  412a11:	ficomp DWORD PTR [esp+edi*4+0x7d]
  412a15:	mov    dh,0x75
  412a17:	mov    ch,al
  412a19:	leave  
  412a1a:	adc    al,0xbe
  412a1c:	lods   al,BYTE PTR ds:[esi]
  412a1d:	dec    ecx
  412a1e:	xor    BYTE PTR [edi-0x60],0x46
  412a22:	rcr    BYTE PTR [ebx+0x484b4d9e],1
  412a28:	cwde   
  412a29:	fnstcw WORD PTR [ebx]
  412a2b:	sbb    eax,0x83685e87
  412a30:	xlat   BYTE PTR ds:[ebx]
  412a31:	adc    DWORD PTR cs:[edi],edx
  412a34:	sbb    eax,0x2eabc396
  412a39:	mov    ds:0x5df9bc69,al
  412a3e:	cld    
  412a3f:	dec    edx
  412a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a41:	shr    dh,1
  412a43:	mov    eax,ds:0xf865b00a
  412a48:	mov    ebp,0x7fa3c82b
  412a4d:	nop
  412a4e:	dec    ebp
  412a4f:	inc    ecx
  412a50:	mov    ch,0xe4
  412a52:	stos   BYTE PTR es:[edi],al
  412a53:	ins    BYTE PTR es:[edi],dx
  412a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a55:	das    
  412a56:	xor    al,0xc1
  412a58:	jmp    0x4a04:0xefe9a21
  412a5f:	adc    ah,al
  412a61:	pushf  
  412a62:	jge    0x412a77
  412a64:	add    DWORD PTR [esi+0x30],ebp
  412a67:	sub    al,0xc1
  412a69:	pop    edi
  412a6a:	imul   ecx,DWORD PTR [esi+0x4],0xbc7d1b9a
  412a71:	pop    esp
  412a72:	lahf   
  412a73:	sahf   
  412a74:	pop    es
  412a75:	ja     0x412a10
  412a77:	ficom  DWORD PTR [edx+0x2b]
  412a7a:	sub    esi,DWORD PTR cs:[ebp+0x6c]
  412a7e:	ins    BYTE PTR es:[edi],dx
  412a7f:	loope  0x412ad8
  412a81:	out    dx,eax
  412a82:	loope  0x412aea
  412a84:	into   
  412a85:	push   edx
  412a86:	mov    dh,BYTE PTR [ebx]
  412a88:	cli    
  412a89:	inc    edx
  412a8a:	retf   
  412a8b:	xlat   BYTE PTR ds:[ebx]
  412a8c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a8e:	sbb    ch,BYTE PTR [ebx+0x1e]
  412a91:	retf   
  412a92:	js     0x412ac6
  412a94:	mov    dh,0x13
  412a96:	imul   ebp,ebp,0x5ab9ab85
  412a9c:	imul   esp,DWORD PTR [edi+edx*4-0xdc8d112],0x53951c64
  412aa7:	inc    esp
  412aa8:	popf   
  412aa9:	sub    al,0x14
  412aab:	out    0x6b,al
  412aad:	xchg   esp,eax
  412aae:	outs   dx,BYTE PTR ds:[esi]
  412aaf:	arpl   dx,ax
  412ab1:	cwde   
  412ab2:	and    DWORD PTR ds:0xee8745b2,ebx
  412ab8:	fs rsm 
  412abb:	sub    BYTE PTR [edi+0x67433469],bh
  412ac1:	dec    esp
  412ac2:	test   eax,0x6b71f3c5
  412ac7:	pusha  
  412ac8:	jae    0x412ab0
  412aca:	xchg   edi,eax
  412acb:	push   edi
  412acc:	jp     0x412b37
  412ace:	xor    al,0x2
  412ad0:	rol    DWORD PTR [edi],1
  412ad2:	loope  0x412aa6
  412ad4:	sbb    DWORD PTR [ebp+0x4f],ebx
  412ad7:	aad    0x1e
  412ad9:	rcl    edx,0x16
  412adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412add:	sub    eax,0x8a162b3
  412ae2:	scas   eax,DWORD PTR es:[edi]
  412ae3:	les    ecx,FWORD PTR [ecx+0x59]
  412ae6:	cdq    
  412ae7:	in     eax,0xa
  412ae9:	fidivr DWORD PTR [ecx]
  412aeb:	or     eax,0x14199e92
  412af0:	sub    ch,dl
  412af2:	and    ch,0xdf
  412af5:	imul   esp,DWORD PTR [ebp+ebx*8-0x7db00d55],0xffffffe6
  412afd:	xor    BYTE PTR [eax-0x43],ah
  412b00:	inc    edi
  412b01:	sbb    dh,al
  412b03:	mov    ch,0x1f
  412b05:	dec    esp
  412b06:	sti    
  412b07:	ret    0x9fd7
  412b0a:	mov    esi,0x175b047f
  412b0f:	jne    0x412b37
  412b11:	(bad)  [esi]
  412b13:	xor    DWORD PTR [esi-0x60408a40],ebp
  412b19:	mov    ecx,0x192b9ff9
  412b1e:	xor    eax,0x2939dcb2
  412b23:	jecxz  0x412b1d
  412b25:	test   al,0x34
  412b27:	mov    ds:0x2342c63a,eax
  412b2c:	cmp    esp,DWORD PTR [esp+eax*2-0x214b6cd4]
  412b33:	aad    0xe
  412b35:	rol    edx,cl
  412b37:	leave  
  412b38:	ret    0x6d69
  412b3b:	ds inc ebx
  412b3d:	fs jmp 0x412bba
  412b40:	and    ecx,0xffffffad
  412b43:	fwait
  412b44:	jl     0x412ae7
  412b46:	xor    DWORD PTR [esi+eiz*4],ebx
  412b49:	adc    ah,BYTE PTR ds:0xf5a0d01
  412b4f:	sar    BYTE PTR [esi],1
  412b51:	imul   esp,DWORD PTR [ebp+eiz*2+0x1f3d5904],0xe9774ef
  412b5c:	adc    eax,0x3346b9eb
  412b61:	rcl    DWORD PTR [edx-0x23918384],1
  412b67:	sahf   
  412b68:	retf   
  412b69:	clc    
  412b6a:	or     DWORD PTR [edx+0x15],ecx
  412b6d:	push   esp
  412b6e:	mov    ch,0x8e
  412b70:	xor    al,BYTE PTR [ebx]
  412b72:	dec    edi
  412b73:	imul   edx,DWORD PTR [ecx],0xffffffbb
  412b76:	add    BYTE PTR [ebx-0x7a41a6a6],0xad
  412b7d:	or     ecx,DWORD PTR [ebp+0x15]
  412b80:	scas   eax,DWORD PTR es:[edi]
  412b81:	test   DWORD PTR [esi],ecx
  412b83:	xor    ch,BYTE PTR [eax*1+0x7f97a348]
  412b8a:	xchg   ebp,eax
  412b8b:	mov    ch,bh
  412b8d:	test   BYTE PTR [edi],ah
  412b8f:	mov    ch,0x40
  412b91:	mov    eax,ds:0x3f782879
  412b96:	cmp    ch,0x9b
  412b99:	mov    esp,0xaf51f4ad
  412b9e:	pop    ss
  412b9f:	ret    0x1591
  412ba2:	or     DWORD PTR [ecx-0x10],edi
  412ba5:	cdq    
  412ba6:	mov    BYTE PTR [edi-0x332c7fd7],bl
  412bac:	sub    DWORD PTR [eax+0x7e],0x2a
  412bb0:	fs push 0xbf4b3caa
  412bb6:	mov    ch,0xef
  412bb8:	int    0x6f
  412bba:	in     al,0x17
  412bbc:	mov    esi,0x4d78ea0c
  412bc1:	(bad)  
  412bc3:	je     0x412b9b
  412bc5:	xlat   BYTE PTR ds:[ebx]
  412bc6:	aam    0x3a
  412bc8:	inc    edx
  412bc9:	pop    eax
  412bca:	call   0x90b4d3c8
  412bcf:	sub    DWORD PTR [ebx+0x24],0xcda7d734
  412bd6:	sbb    BYTE PTR [esi],0x5a
  412bd9:	push   esp
  412bda:	and    eax,0x5152d725
  412bdf:	mov    cl,0x6c
  412be1:	lods   al,BYTE PTR ds:[esi]
  412be2:	or     bh,BYTE PTR [edx-0x4991cbdc]
  412be8:	adc    DWORD PTR [edi+0x55],ebx
  412beb:	cmp    BYTE PTR [edi-0x4],bl
  412bee:	arpl   WORD PTR [eax],di
  412bf0:	ja     0x412beb
  412bf2:	or     eax,0xfa163fcc
  412bf7:	mov    al,0x47
  412bf9:	arpl   di,bp
  412bfb:	dec    ecx
  412bfc:	(bad)  [ecx-0x27]
  412bff:	cmp    BYTE PTR [ecx-0x5622d4d9],bh
  412c05:	mov    ds:0xf8f5f03a,eax
  412c0a:	cmp    DWORD PTR [ebx+0x404154b1],esi
  412c10:	cwde   
  412c11:	inc    edx
  412c12:	rcr    BYTE PTR [ebx-0x3c0793fd],1
  412c18:	adc    eax,0x17b98b6b
  412c1d:	pop    ebx
  412c1e:	pop    es
  412c1f:	pushf  
  412c20:	jbe    0x412c9e
  412c22:	imul   eax,DWORD PTR ds:0x84ee63d6,0xffffff8d
  412c29:	jb     0x412c82
  412c2b:	xor    eax,0xbfb19548
  412c30:	ret    
  412c31:	(bad)  
  412c32:	rol    BYTE PTR ss:[edx+0x7a],cl
  412c36:	leave  
  412c37:	or     DWORD PTR [edx-0x76],eax
  412c3a:	jno    0x412cbb
  412c3c:	fild   DWORD PTR [esi+0x127f9c88]
  412c42:	mov    cs,WORD PTR [ebx]
  412c44:	das    
  412c45:	call   0xda58:0xe809aaa8
  412c4c:	pop    ss
  412c4d:	pop    esp
  412c4e:	sar    BYTE PTR [ebp+0x57],1
  412c51:	stos   BYTE PTR es:[edi],al
  412c52:	mov    BYTE PTR [esi],bl
  412c54:	test   al,0xd
  412c56:	test   DWORD PTR [ebp-0x2e],0x93914538
  412c5d:	sub    edx,DWORD PTR [edi-0x3fe539c1]
  412c63:	jo     0x412c60
  412c65:	data16 mov ch,0x5a
  412c68:	icebp  
  412c69:	rep lods eax,DWORD PTR ds:[esi]
  412c6b:	push   ebp
  412c6c:	clc    
  412c6d:	in     eax,0x51
  412c6f:	stc    
  412c70:	test   al,0x16
  412c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c73:	xor    eax,0xe9620063
  412c78:	cmp    DWORD PTR [eax+edx*4-0x8eede1c],edi
  412c7f:	mov    esi,0xf86ac6e9
  412c84:	fild   WORD PTR ds:0x8d29a75d
  412c8a:	lds    esi,FWORD PTR [ebp+0x289117c3]
  412c90:	sub    al,0xf
  412c92:	imul   eax,DWORD PTR [esi+0x26],0x609f6d36
  412c99:	cli    
  412c9a:	add    eax,0x2c3bc053
  412c9f:	scas   al,BYTE PTR es:[edi]
  412ca0:	repnz sub eax,0xbf4ae5b2
  412ca6:	retf   0xc34d
  412ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412caa:	stos   DWORD PTR es:[edi],eax
  412cab:	sbb    al,0xc1
  412cad:	fcom   DWORD PTR [ebp+0x66b173a7]
  412cb3:	cmp    eax,0xdf60cf9f
  412cb8:	loopne 0x412c82
  412cba:	sbb    BYTE PTR [eax+0x59],al
  412cbd:	adc    DWORD PTR [edi+0x46],0x7c
  412cc1:	mov    bl,0xd1
  412cc3:	mov    cl,al
  412cc5:	js     0x412caa
  412cc7:	enter  0xc75f,0xd
  412ccb:	add    edx,0xc383012e
  412cd1:	(bad)  
  412cd2:	out    0xe3,eax
  412cd4:	push   eax
  412cd5:	push   esp
  412cd6:	pop    ebx
  412cd7:	inc    edx
  412cd8:	cmp    ecx,esp
  412cda:	mov    eax,0x272c157
  412cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce0:	fimul  DWORD PTR [eax-0x73]
  412ce3:	in     eax,dx
  412ce4:	xchg   esp,eax
  412ce5:	xchg   edx,eax
  412ce6:	cmp    eax,ecx
  412ce8:	loopne 0x412d61
  412cea:	sar    ecx,1
  412cec:	mov    bl,0xfb
  412cee:	fmul   DWORD PTR [ecx-0x67]
  412cf1:	xchg   esp,eax
  412cf2:	dec    esi
  412cf3:	add    BYTE PTR ss:[eax-0x350c9d2a],0x34
  412cfb:	loope  0x412c8a
  412cfd:	(bad)  
  412cfe:	(bad)  
  412cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d00:	clc    
  412d01:	add    edx,edx
  412d03:	rcr    BYTE PTR [edx+0x38],1
  412d06:	jno    0x412cb2
  412d08:	mov    ds:0xcf74531b,eax
  412d0d:	cli    
  412d0e:	aaa    
  412d0f:	fmul   DWORD PTR [eax]
  412d11:	adc    DWORD PTR [eax+0x1415d406],0x290e6fae
  412d1b:	outs   dx,BYTE PTR ds:[esi]
  412d1c:	rcr    BYTE PTR [ecx],1
  412d1e:	sub    cl,BYTE PTR [esi+0x28e898d0]
  412d24:	mov    bl,0x41
  412d26:	pop    ds
  412d27:	push   ebp
  412d28:	fs xchg edx,eax
  412d2a:	inc    esp
  412d2b:	xor    eax,ecx
  412d2d:	mov    edi,0xa6121661
  412d32:	enter  0x6a20,0x61
  412d36:	lods   al,BYTE PTR ds:[esi]
  412d37:	int3   
  412d38:	vpunpckhdq xmm2,xmm0,xmm5
  412d3c:	int    0x32
  412d3e:	push   ecx
  412d3f:	pushf  
  412d40:	(bad)  
  412d41:	xor    DWORD PTR [edi-0x52c1f670],ebx
  412d47:	xchg   ebp,eax
  412d48:	adc    ebx,DWORD PTR [edx-0x48]
  412d4b:	mov    esi,ebx
  412d4d:	pop    ds
  412d4e:	arpl   WORD PTR [ebx+0x6898e892],sp
  412d54:	push   ecx
  412d55:	mov    ds:0x393ca4dc,eax
  412d5a:	mov    BYTE PTR [ebx-0x7b7b7bf3],bl
  412d60:	sar    al,0x1e
  412d63:	lea    edx,[ebx-0x66ec4b98]
  412d69:	mov    ecx,0x1d971c55
  412d6e:	xor    eax,0x57aed64e
  412d73:	xchg   esp,eax
  412d74:	enter  0xcab6,0x72
  412d78:	add    esp,esp
  412d7a:	nop
  412d7b:	mov    BYTE PTR [ecx-0x7f],dh
  412d7e:	dec    ebp
  412d7f:	out    0x2f,eax
  412d81:	lahf   
  412d82:	mov    bh,0xc1
  412d84:	xor    ah,cl
  412d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d87:	sahf   
  412d88:	mov    bl,BYTE PTR [ebx+eiz*8]
  412d8b:	cmp    al,0x91
  412d8d:	adc    edx,DWORD PTR [esi-0x48]
  412d90:	dec    ebx
  412d91:	mov    BYTE PTR [ebx+0x71],bh
  412d94:	(bad)  
  412d95:	jmp    0x4fc827bb
  412d9a:	ud2    
  412d9c:	and    bl,BYTE PTR [esi]
  412d9e:	daa    
  412d9f:	xor    eax,0x710520f
  412da4:	stos   DWORD PTR es:[edi],eax
  412da5:	dec    esp
  412da6:	int    0x55
  412da8:	mov    esi,0x94d4bb53
  412dad:	pop    edx
  412dae:	jno    0x412e05
  412db0:	cmp    DWORD PTR [ebp+edx*4-0x69],ecx
  412db4:	pop    ebp
  412db5:	ins    BYTE PTR es:[edi],dx
  412db6:	mov    al,ds:0x5c2c7ffc
  412dbb:	popa   
  412dbc:	js     0x412d65
  412dbe:	add    ah,0x32
  412dc1:	add    BYTE PTR [ebx+0x8],al
  412dc4:	pop    esp
  412dc5:	xor    ebx,DWORD PTR [esi]
  412dc7:	push   esp
  412dc8:	mov    bh,0x2d
  412dca:	pop    edi
  412dcb:	jp     0x412e2d
  412dcd:	jo     0x412db3
  412dcf:	push   ebx
  412dd0:	js     0x412dfa
  412dd2:	scas   al,BYTE PTR es:[edi]
  412dd3:	dec    edx
  412dd4:	test   dl,ah
  412dd6:	push   esp
  412dd7:	ror    BYTE PTR [ebp+0x2f],1
  412dda:	xor    al,0xa
  412ddc:	shr    BYTE PTR [ecx-0x48edd78e],1
  412de2:	in     eax,dx
  412de3:	(bad)
  412de6:	adc    al,BYTE PTR [esi-0x7f80cc1c]
  412dec:	adc    ecx,DWORD PTR [edx-0x7c]
  412def:	inc    edx
  412df0:	in     eax,0x12
  412df2:	mov    ah,bl
  412df4:	pop    edx
  412df5:	gs repnz or al,dh
  412df9:	or     al,cl
  412dfb:	int    0x64
  412dfd:	inc    esi
  412dfe:	idiv   DWORD PTR [ecx+esi*4]
  412e01:	test   edi,0x694c5b8d
  412e07:	icebp  
  412e08:	xchg   edx,eax
  412e09:	xchg   DWORD PTR ds:0xef60230d,eax
  412e0f:	adc    edx,DWORD PTR [ebp+0x65]
  412e12:	call   0x77c9e601
  412e17:	fidivr WORD PTR [esi]
  412e19:	bound  ebx,QWORD PTR [eax+edx*8]
  412e1c:	or     eax,0xdb7d0345
  412e21:	sub    DWORD PTR [esi],edx
  412e23:	push   esp
  412e24:	mov    esp,DWORD PTR [ecx+0x6]
  412e27:	adc    BYTE PTR [edx-0x80],bh
  412e2a:	mov    eax,0x8f35e1c
  412e2f:	xlat   BYTE PTR ds:[ebx]
  412e30:	fwait
  412e31:	mov    es,WORD PTR [esi]
  412e33:	inc    edx
  412e34:	jmp    0x412dd2
  412e36:	lock (bad) 
  412e38:	js     0x412e8e
  412e3a:	in     eax,dx
  412e3b:	sub    DWORD PTR [ebx+0x3e836220],0x2727f8e5
  412e45:	jge    0x412eb7
  412e47:	mov    ah,0x8c
  412e49:	fadd   st(7),st
  412e4b:	mov    al,ds:0xc489dad3
  412e50:	stos   BYTE PTR es:[edi],al
  412e51:	pop    edx
  412e52:	hlt    
  412e53:	xchg   edx,eax
  412e54:	push   ebp
  412e55:	mov    dh,0xcc
  412e57:	or     esp,ecx
  412e59:	inc    esp
  412e5a:	jmp    FWORD PTR [eax+ecx*2-0x7c73156b]
  412e61:	loopne 0x412e93
  412e63:	rcr    DWORD PTR [esi+ebx*8+0x680bfec6],cl
  412e6a:	mov    bl,0xb2
  412e6c:	push   0x154a61b8
  412e71:	mov    edx,0xc581b0cd
  412e76:	mov    ecx,0x3d8ef9a5
  412e7b:	sar    ecx,cl
  412e7d:	xchg   ebx,eax
  412e7e:	xchg   ecx,eax
  412e7f:	test   DWORD PTR [edx],esp
  412e81:	retf   0xb5e9
  412e84:	es jmp 0x412e15
  412e87:	aaa    
  412e88:	xor    eax,0xb58f24c4
  412e8d:	push   eax
  412e8e:	ror    DWORD PTR [ecx],0x46
  412e91:	lds    esp,FWORD PTR [esp+ecx*4-0xa245988]
  412e98:	cmc    
  412e99:	mov    cl,0x78
  412e9b:	dec    esi
  412e9c:	jle    0x412ea0
  412e9e:	sbb    BYTE PTR [esi+esi*4-0x26a925c4],dh
  412ea5:	adc    BYTE PTR [esi],ah
  412ea7:	cmp    DWORD PTR [edx-0x62a6252b],0x48
  412eae:	adc    ebp,DWORD PTR [esi-0x35]
  412eb1:	in     al,0x4b
  412eb3:	xchg   bp,ax
  412eb5:	imul   BYTE PTR [ecx]
  412eb7:	test   bh,bh
  412eb9:	out    dx,al
  412eba:	stos   BYTE PTR es:[edi],al
  412ebb:	in     al,dx
  412ebc:	sbb    DWORD PTR [esi],esi
  412ebe:	pop    edx
  412ebf:	sbb    eax,0xf7d543b2
  412ec4:	aaa    
  412ec5:	cmp    al,0xce
  412ec7:	fimul  WORD PTR [ecx+0x7a]
  412eca:	xchg   esi,eax
  412ecb:	or     DWORD PTR [esi-0x24],ebp
  412ece:	pop    ds
  412ecf:	popa   
  412ed0:	rcr    bl,0x9c
  412ed3:	cmp    al,0xf
  412ed5:	jne    0x412ef8
  412ed7:	lods   eax,DWORD PTR ds:[esi]
  412ed8:	push   ebx
  412ed9:	gs retf 
  412edb:	aad    0xb1
  412edd:	mov    ecx,0xeeadcacd
  412ee2:	mov    eax,ds:0x4dad1fd1
  412ee7:	mov    eax,eax
  412ee9:	and    DWORD PTR [ecx],edi
  412eeb:	sar    esi,1
  412eed:	add    BYTE PTR [edi+0xd],bh
  412ef0:	shl    bh,0xbd
  412ef3:	adc    ah,BYTE PTR [esi]
  412ef5:	fild   DWORD PTR [eax+0x2e7d222b]
  412efb:	sub    BYTE PTR [edi+esi*4-0x6c],0x97
  412f00:	adc    al,0x5f
  412f02:	sub    ch,bl
  412f04:	fs lock mov ebx,0xca62ec05
  412f0b:	imul   ebp,DWORD PTR [eax],0xdde35e1d
  412f11:	jmp    0x412f66
  412f13:	sar    DWORD PTR [ebx+eax*1-0x753f814f],cl
  412f1a:	pop    fs
  412f1c:	fisub  DWORD PTR ds:0x6f1d1bb5
  412f22:	xchg   ebx,eax
  412f23:	mov    ch,0xa3
  412f25:	cwde   
  412f26:	inc    esp
  412f27:	jns    0x412f71
  412f29:	mov    BYTE PTR [ecx+0x29],ch
  412f2c:	jge    0x412f96
  412f2e:	pop    ss
  412f2f:	data16 je 0x412f10
  412f32:	mov    ebp,0x8c70c8ca
  412f37:	sbb    DWORD PTR [ecx+0x26b88526],edi
  412f3d:	jmp    0x412f12
  412f3f:	mov    ds:0xb4fc734,eax
  412f44:	inc    BYTE PTR [esi+eax*2-0x42]
  412f48:	outs   dx,DWORD PTR ds:[esi]
  412f49:	sbb    DWORD PTR [ebx+0x24b5b4f3],0x7d308d6b
  412f53:	sub    eax,0xc3f1b86
  412f58:	or     ah,ah
  412f5a:	and    al,0xd6
  412f5c:	add    edx,esi
  412f5e:	mov    dh,0x99
  412f60:	adc    al,0x1c
  412f62:	test   DWORD PTR [esi-0x5f2cf24],esi
  412f68:	out    dx,eax
  412f69:	jnp    0x412f3d
  412f6b:	fcom   DWORD PTR [ebx]
  412f6d:	ja     0x412fba
  412f6f:	cmp    edx,DWORD PTR [eax*2-0x18e51c4b]
  412f76:	or     DWORD PTR [edi+ecx*2-0x2198c3e5],ebp
  412f7d:	std    
  412f7e:	inc    esi
  412f7f:	inc    ebx
  412f80:	lods   eax,DWORD PTR ds:[esi]
  412f81:	xchg   edx,eax
  412f82:	addr16 xchg ebx,eax
  412f84:	jl     0x412fbf
  412f86:	adc    edx,DWORD PTR [ecx+0x5c]
  412f89:	fldl2t 
  412f8b:	sub    eax,0x7c8b707e
  412f90:	lea    ecx,[esi+ecx*2-0xe]
  412f94:	cmp    DWORD PTR [esp+esi*2+0x3db0f356],0xffffff85
  412f9c:	pop    ds
  412f9d:	pop    eax
  412f9e:	push   eax
  412f9f:	and    dl,dl
  412fa1:	mov    esi,esi
  412fa3:	js     0x412f45
  412fa5:	clc    
  412fa6:	sahf   
  412fa7:	sbb    edx,esi
  412fa9:	sar    BYTE PTR [eax],0xd1
  412fac:	sbb    esi,DWORD PTR [edx+0x66]
  412faf:	fcmovbe st,st(6)
  412fb1:	mov    dh,0xcf
  412fb3:	cmp    ecx,DWORD PTR [ecx]
  412fb5:	adc    ecx,edx
  412fb7:	jl     0x413018
  412fb9:	sub    eax,0xfdb8bb3d
  412fbe:	mov    DWORD PTR [eax-0x1d],ecx
  412fc1:	aad    0x18
  412fc3:	test   al,0x61
  412fc5:	fstp   QWORD PTR [ebx+0x602f054d]
  412fcb:	push   ss
  412fcc:	pop    edi
  412fcd:	cmp    eax,0x9c3a4431
  412fd2:	push   esi
  412fd3:	xchg   DWORD PTR [esi+0xf],ebx
  412fd6:	out    dx,al
  412fd7:	mov    ch,BYTE PTR [edi+0x2ceb90ee]
  412fdd:	fadd   QWORD PTR [edi+ebp*8]
  412fe0:	or     BYTE PTR ds:0xee2c862a,ah
  412fe6:	or     bh,BYTE PTR [eax+0x14]
  412fe9:	mov    ch,0x99
  412feb:	cdq    
  412fec:	arpl   WORD PTR [edi+ebx*4],di
  412fef:	xor    DWORD PTR [esp+esi*2],ebx
  412ff2:	push   ebx
  412ff3:	pop    ebx
  412ff4:	adc    DWORD PTR [edi+0x757140cf],eax
  412ffa:	dec    ebp
  412ffb:	xchg   ebp,eax
  412ffc:	mov    al,0x83
  412ffe:	push   ecx
  412fff:	mov    dl,0xae
  413001:	pop    ebp
  413002:	mov    BYTE PTR [ecx-0x3c],dl
  413005:	cmp    al,0x2e
  413007:	cli    
  413008:	inc    ebx
  413009:	xchg   edx,eax
  41300a:	sar    DWORD PTR [edi+0x331cd454],0xdd
  413011:	adc    ebx,ebp
  413013:	add    dh,BYTE PTR [esi]
  413015:	loop   0x413017
  413017:	pop    esp
  413018:	cmc    
  413019:	mov    al,ds:0x29042615
  41301e:	pop    ecx
  41301f:	jo     0x413062
  413021:	or     eax,0xd9b175db
  413026:	loopne 0x413075
  413028:	mov    cl,0xb5
  41302a:	mov    esi,0xa087423c
  41302f:	push   esp
  413030:	in     eax,dx
  413031:	pop    es
  413032:	(bad)  
  413033:	stc    
  413034:	loop   0x4130a7
  413036:	in     al,0xa3
  413038:	xchg   esi,eax
  413039:	xor    eax,0xf1d8b862
  41303e:	inc    ebp
  41303f:	ins    DWORD PTR es:[edi],dx
  413040:	lahf   
  413041:	test   al,0xc4
  413043:	into   
  413044:	and    bl,ah
  413046:	call   0x10d:0x8d15e1a
  41304d:	jnp    0x413022
  41304f:	or     eax,0xa0f6d053
  413054:	adc    BYTE PTR [ebp-0x4b],cl
  413057:	jns    0x4130cf
  413059:	pop    es
  41305a:	ret    0xd1d8
  41305d:	cmp    ebp,ebx
  41305f:	sbb    BYTE PTR [eax],cl
  413061:	es dec esp
  413063:	and    sp,WORD PTR [ebx*2+0x796a79b0]
  41306b:	push   edx
  41306c:	aam    0xad
  41306e:	cmp    DWORD PTR [edi+0x60],eax
  413071:	xor    DWORD PTR [ebp+0x39],0x1c
  413075:	mov    eax,ds:0x28761d56
  41307a:	les    edi,FWORD PTR [edx+0x635abcfe]
  413080:	test   eax,0xdd8c0f82
  413085:	sub    DWORD PTR [ebx+0x3929ea3e],esi
  41308b:	shr    BYTE PTR [esi+0x2321aa67],cl
  413091:	pop    es
  413092:	icebp  
  413093:	dec    edx
  413094:	mov    edx,0x1db5a41a
  413099:	pop    edx
  41309a:	pop    esi
  41309b:	outs   dx,BYTE PTR ds:[esi]
  41309c:	test   ecx,ebx
  41309e:	sub    BYTE PTR [ecx],bl
  4130a0:	lock pop ecx
  4130a2:	ror    BYTE PTR [esi],0xf8
  4130a5:	and    BYTE PTR [esi+0x55797157],dh
  4130ab:	dec    esi
  4130ac:	test   eax,0x19be63cc
  4130b1:	fidivr WORD PTR [esi]
  4130b3:	lahf   
  4130b4:	jle    0x4130e8
  4130b6:	xlat   BYTE PTR ds:[ebx]
  4130b7:	test   ebx,eax
  4130b9:	jns    0x4130e3
  4130bb:	in     al,dx
  4130bc:	adc    al,0x16
  4130be:	sub    al,0x4b
  4130c0:	jmp    0x413093
  4130c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130c3:	mov    ebp,0x2427f011
  4130c8:	addr16 push esi
  4130ca:	xchg   ebp,eax
  4130cb:	les    edi,FWORD PTR [eax]
  4130cd:	xchg   edx,eax
  4130ce:	daa    
  4130cf:	outs   dx,DWORD PTR ds:[esi]
  4130d0:	pop    edi
  4130d1:	mov    esi,0x85f02bd
  4130d6:	push   ebx
  4130d7:	lea    esp,[eax+0x704fb591]
  4130dd:	cmp    ecx,DWORD PTR [edi]
  4130df:	(bad)  
  4130e0:	lods   eax,DWORD PTR ds:[esi]
  4130e1:	ret    0xecf7
  4130e4:	xchg   ecx,eax
  4130e5:	inc    ebp
  4130e6:	pop    ss
  4130e7:	ins    BYTE PTR es:[edi],dx
  4130e8:	fs cli 
  4130ea:	lods   al,BYTE PTR ds:[esi]
  4130eb:	aaa    
  4130ec:	sahf   
  4130ed:	mov    cs,ebp
  4130ef:	lods   al,BYTE PTR ds:[esi]
  4130f0:	mov    eax,0x51310621
  4130f5:	stos   DWORD PTR es:[edi],eax
  4130f6:	inc    esp
  4130f7:	ret    
  4130f8:	lock mov bh,0xa1
  4130fb:	jle    0x4130ef
  4130fd:	adc    DWORD PTR [edi-0x54],edx
  413100:	adc    edi,edx
  413102:	retf   
  413103:	repz shl BYTE PTR [edx+esi*8],cl
  413107:	rol    cl,cl
  413109:	push   eax
  41310a:	push   eax
  41310b:	push   ecx
  41310c:	retf   
  41310d:	neg    BYTE PTR [ebx-0x29]
  413110:	xchg   ebp,eax
  413111:	addr16 icebp 
  413113:	xor    edx,DWORD PTR [edx]
  413115:	cmp    BYTE PTR [ebx+0x4c0e4f63],0x9f
  41311c:	inc    esp
  41311d:	cmp    cl,dl
  41311f:	je     0x413125
  413121:	and    al,0x78
  413123:	or     BYTE PTR [ebx],bh
  413125:	or     dl,BYTE PTR [eax+esi*4]
  413128:	or     dl,cl
  41312a:	inc    ebp
  41312b:	in     eax,0xf9
  41312d:	cmp    eax,DWORD PTR [ebx]
  41312f:	cwde   
  413130:	mov    al,ds:0x69849763
  413135:	shl    DWORD PTR [esi-0x50],cl
  413138:	mov    ebp,0xf4a56b5
  41313d:	cmp    ebp,DWORD PTR [ecx]
  41313f:	stc    
  413140:	jns    0x41319d
  413142:	and    eax,ebp
  413144:	iret   
  413145:	jge    0x413154
  413147:	mov    edx,0xb15df262
  41314c:	jmp    0x9b0a6519
  413151:	adc    eax,0xd8a66a4
  413156:	and    BYTE PTR [ecx+0x69],bh
  413159:	fwait
  41315a:	enter  0x90c5,0x64
  41315e:	jns    0x413199
  413160:	call   0x5d6c4fcd
  413165:	sub    eax,0x3cd39d82
  41316a:	adc    eax,0xf9d551e
  41316f:	add    dh,BYTE PTR [ecx+0xbbed7c0]
  413175:	sub    eax,0x3a662ca9
  41317a:	push   edx
  41317b:	arpl   ax,ax
  41317d:	sub    BYTE PTR [ebx+0x3b],dh
  413180:	js     0x41319a
  413182:	xchg   edx,eax
  413183:	loope  0x413202
  413185:	or     DWORD PTR [ebp+0x45759757],ebp
  41318b:	pop    es
  41318c:	adc    al,BYTE PTR [ebx-0x69]
  41318f:	or     DWORD PTR [ebx],esi
  413191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413192:	enter  0x7821,0x86
  413196:	push   edi
  413197:	inc    esi
  413198:	push   es
  413199:	aaa    
  41319a:	or     BYTE PTR [edx+0x55b3df8f],ah
  4131a0:	retf   0x5519
  4131a3:	out    dx,eax
  4131a4:	int3   
  4131a5:	push   ebx
  4131a6:	out    0x61,eax
  4131a8:	fwait
  4131a9:	xchg   edi,eax
  4131aa:	and    ah,bl
  4131ac:	or     dl,BYTE PTR [ebx-0x4]
  4131af:	adc    eax,0x12e1d29f
  4131b4:	mov    al,BYTE PTR [esi]
  4131b6:	pop    edi
  4131b7:	push   cs
  4131b8:	mov    esi,0x50cea922
  4131bd:	push   eax
  4131be:	jge    0x41322c
  4131c0:	push   edi
  4131c1:	enter  0x9a05,0x14
  4131c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131c6:	xchg   BYTE PTR [ebp-0xc756423],bl
  4131cc:	aad    0x23
  4131ce:	jmp    0x56ee:0x83a476a3
  4131d5:	mov    esp,DWORD PTR [eax]
  4131d7:	pop    ecx
  4131d8:	into   
  4131d9:	out    dx,eax
  4131da:	and    eax,0x431ca2b6
  4131df:	push   ebp
  4131e0:	cs mov ebp,0x4dd58ec9
  4131e6:	sub    cl,BYTE PTR [edx+0x3e]
  4131e9:	and    ecx,edx
  4131eb:	xchg   edi,eax
  4131ec:	out    0x2,eax
  4131ee:	jne    0x4131bf
  4131f0:	and    ecx,0x6b
  4131f3:	leave  
  4131f4:	nop
  4131f5:	sub    edi,DWORD PTR [ebx+ecx*1]
  4131f8:	dec    ebx
  4131f9:	clc    
  4131fa:	fdiv   DWORD PTR [ecx-0x25]
  4131fd:	imul   edi,DWORD PTR gs:[esi+0x18],0x29
  413202:	fs push esi
  413204:	aas    
  413205:	pop    es
  413206:	test   BYTE PTR ds:0x939bc594,0x43
  41320d:	pop    es
  41320e:	cs add al,0xbd
  413211:	mov    bh,0xad
  413213:	aas    
  413214:	add    DWORD PTR [ebx+0x60],edi
  413217:	add    DWORD PTR [ebx],0x28123574
  41321d:	push   0xc2837a0
  413222:	jnp    0x41328e
  413224:	cwde   
  413225:	inc    ebx
  413226:	xor    dh,ah
  413228:	pop    edi
  413229:	outs   dx,BYTE PTR ds:[esi]
  41322a:	dec    esi
  41322b:	mov    ecx,0xcc9b3027
  413230:	pop    ebp
  413231:	clc    
  413232:	sub    BYTE PTR [edi-0x7a],bl
  413235:	and    DWORD PTR [ebx-0x324d03fd],edx
  41323b:	push   0xffffffde
  41323d:	(bad)
  413241:	or     eax,0xbed03f33
  413246:	in     eax,0x1f
  413248:	cs lahf 
  41324a:	pop    ebx
  41324b:	dec    esp
  41324c:	pop    ds
  41324d:	xor    BYTE PTR [edi+0x76c8fa6a],bl
  413253:	lods   eax,DWORD PTR ds:[esi]
  413254:	ret    0x80d0
  413257:	mov    dh,0x18
  413259:	xor    ch,0x61
  41325c:	adc    al,0xa1
  41325e:	out    0xe9,eax
  413260:	pop    esp
  413261:	inc    esp
  413262:	sub    edx,DWORD PTR [esi+0x68015e2]
  413268:	lahf   
  413269:	shl    BYTE PTR [edx-0x5b],1
  41326c:	push   esi
  41326d:	dec    ebp
  41326e:	mov    ebx,0xaf263e93
  413273:	and    bh,dl
  413275:	(bad)  
  413276:	jne    0x4132db
  413278:	(bad)  
  413279:	cmp    BYTE PTR [edi+0x523bee95],bh
  41327f:	xchg   ebp,eax
  413280:	push   edx
  413281:	lods   al,BYTE PTR ds:[esi]
  413282:	or     DWORD PTR [ebx],edi
  413284:	jg     0x413294
  413286:	inc    esi
  413287:	push   esp
  413288:	xlat   BYTE PTR ds:[ebx]
  413289:	push   0x4c
  41328b:	xchg   BYTE PTR [ecx],ch
  41328d:	mov    ecx,0xe1435825
  413292:	pusha  
  413293:	mov    eax,ds:0x4b31368a
  413298:	mov    eax,ds:0xab2be1cc
  41329d:	push   edx
  41329e:	adc    DWORD PTR [ebx],esp
  4132a0:	add    esi,edx
  4132a2:	jne    0x4132e2
  4132a4:	mov    ah,0xcc
  4132a6:	inc    edx
  4132a7:	cmp    eax,0xb7a6f512
  4132ac:	jno    0x4132aa
  4132ae:	jg     0x41323f
  4132b0:	shr    DWORD PTR [ebx-0xd671e68],1
  4132b6:	enter  0x11dc,0xc0
  4132ba:	adc    bl,dl
  4132bc:	mov    ch,0xec
  4132be:	popa   
  4132bf:	sbb    al,0xd0
  4132c1:	lds    eax,FWORD PTR [esi+0x7ef3cd12]
  4132c7:	xor    edx,DWORD PTR [ecx-0x4d]
  4132ca:	(bad)  
  4132cb:	int    0xd5
  4132cd:	inc    dl
  4132cf:	(bad)  
  4132d0:	mov    edi,0xaf85bc62
  4132d5:	fucomi st,st(2)
  4132d7:	call   0xfa0d:0xee76cdc8
  4132de:	and    ebx,DWORD PTR [ebp+0x4f6e7745]
  4132e4:	loopne 0x4132c9
  4132e6:	popa   
  4132e7:	aad    0xa6
  4132e9:	les    esp,FWORD PTR [ebp-0x1a]
  4132ec:	popf   
  4132ed:	xchg   ecx,eax
  4132ee:	popf   
  4132ef:	(bad)  
  4132f0:	hlt    
  4132f1:	inc    edi
  4132f2:	mov    BYTE PTR [ebp-0x64],dh
  4132f5:	fwait
  4132f6:	js     0x4132e4
  4132f8:	repz push esi
  4132fa:	je     0x4132ae
  4132fc:	icebp  
  4132fd:	xchg   BYTE PTR [eax+0x7239d20d],ah
  413303:	pop    ecx
  413304:	mov    eax,ds:0x9c9d487b
  413309:	xor    al,0x1f
  41330b:	cli    
  41330c:	inc    esi
  41330d:	push   esi
  41330e:	rcr    BYTE PTR [edi-0x45],0x6f
  413312:	mov    bl,0x21
  413314:	imul   ebp,DWORD PTR [ecx],0x93aece72
  41331a:	aam    0x4e
  41331c:	mov    bh,cl
  41331e:	mov    cl,0xcf
  413320:	mov    al,cl
  413322:	mov    ecx,esi
  413324:	ret    
  413325:	xchg   ebx,eax
  413326:	add    DWORD PTR [esi],eax
  413328:	ds push edi
  41332a:	(bad)
  41332d:	cs and eax,0xa95fad6d
  413333:	adc    al,0xd8
  413335:	out    0x4a,al
  413337:	call   0xbcd6310a
  41333c:	mov    edx,0xee2b8bb8
  413341:	and    dl,BYTE PTR [edx+0x10]
  413344:	arpl   WORD PTR [esi+0x7647375d],ax
  41334a:	and    bl,BYTE PTR [edi-0x43]
  41334d:	adc    DWORD PTR [ebx+0x2c0e90d0],ebx
  413353:	imul   ebp,DWORD PTR [edx+0x2],0xffffffb6
  413357:	cmp    DWORD PTR [ecx+eiz*2-0x2],0x4f8f014
  41335f:	out    dx,eax
  413360:	mov    ah,0x4a
  413362:	pop    ecx
  413363:	das    
  413364:	pop    ebp
  413365:	bnd jnp 0x413300
  413368:	test   edx,0x15cd3575
  41336e:	cld    
  41336f:	stc    
  413370:	cmp    eax,0xe5a09927
  413375:	loop   0x41330c
  413377:	jp     0x4133f5
  413379:	mov    esp,0x36c22ef8
  41337e:	lea    esi,[ecx-0x27]
  413381:	mov    esp,0xc0e34b57
  413386:	xor    BYTE PTR [edx],0x65
  413389:	mov    esi,0x19525251
  41338e:	rcr    BYTE PTR [edi+0x6db59468],cl
  413394:	lods   al,BYTE PTR ds:[esi]
  413395:	xor    esp,esp
  413397:	mov    esp,es
  413399:	rcr    eax,cl
  41339b:	in     eax,0xb4
  41339d:	pop    esp
  41339e:	mov    ah,0x5a
  4133a0:	jo     0x413377
  4133a2:	dec    ecx
  4133a3:	dec    ebp
  4133a4:	inc    esp
  4133a5:	cmp    esp,DWORD PTR [ebx+0x40]
  4133a8:	lods   al,BYTE PTR ds:[esi]
  4133a9:	int    0x18
  4133ab:	jge    0x4133a7
  4133ad:	ja     0x4133cf
  4133af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b0:	int    0x35
  4133b2:	xchg   edx,eax
  4133b3:	push   ecx
  4133b4:	mov    dl,0xcb
  4133b6:	xor    al,0x9b
  4133b8:	sub    al,al
  4133ba:	sbb    eax,0x9e613e83
  4133bf:	stc    
  4133c0:	push   0x8624c0a6
  4133c5:	sub    bl,BYTE PTR [edx+0x19d8fa5d]
  4133cb:	mov    ds:0x7f8d2821,eax
  4133d0:	outs   dx,BYTE PTR ds:[esi]
  4133d1:	lock inc eax
  4133d3:	jp     0x41336c
  4133d5:	xchg   ebx,eax
  4133d6:	lock xor DWORD PTR [ebp+ecx*1-0x6d],0xffffffc1
  4133dc:	fiadd  WORD PTR [edi-0x6699a679]
  4133e2:	(bad)  
  4133e3:	popa   
  4133e4:	adc    edx,DWORD PTR [ecx+0x3b18a5fd]
  4133ea:	out    0x73,al
  4133ec:	enter  0x1c7c,0xd0
  4133f0:	rcl    ebp,0x50
  4133f3:	jp     0x4133c9
  4133f5:	pop    ecx
  4133f6:	rol    BYTE PTR [esi],1
  4133f8:	popf   
  4133f9:	mov    eax,0xb5d0890c
  4133fe:	enter  0x1e42,0xc5
  413402:	add    DWORD PTR [ebx],0xa5f5cff9
  413408:	push   cs
  413409:	sub    ah,BYTE PTR [edi+eiz*8]
  41340c:	jecxz  0x4133d4
  41340e:	push   ecx
  41340f:	push   ss
  413410:	stc    
  413411:	(bad)  
  413412:	add    esi,DWORD PTR [edi]
  413414:	in     eax,dx
  413415:	pop    ss
  413416:	and    BYTE PTR [esi+0x2df6e60],bh
  41341c:	adc    BYTE PTR [eax],ah
  41341e:	retf   0xab4a
  413421:	loopne 0x413408
  413423:	(bad)  
  413424:	xchg   ecx,eax
  413425:	inc    esp
  413426:	push   cs
  413427:	cs ds retf 
  41342a:	mov    edx,0xa3a837bb
  413430:	mov    DWORD PTR [ebx+0x48],eax
  413433:	xor    cl,bl
  413435:	mov    ds:0xe38eacee,eax
  41343a:	call   0x22d7e448
  41343f:	sub    BYTE PTR [edi],dl
  413441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413442:	test   eax,0xa7ddc272
  413447:	shl    DWORD PTR [ebx+0x5b],1
  41344a:	lds    edx,FWORD PTR [eax]
  41344c:	jnp    0x413476
  41344e:	add    al,0x43
  413450:	out    0x38,al
  413452:	cmp    eax,0x419485ba
  413457:	add    al,0x37
  413459:	dec    esp
  41345a:	dec    edx
  41345b:	mov    WORD PTR [edx+0x71],ss
  41345e:	aam    0xc2
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	inc    ecx
  413462:	fild   WORD PTR [edi+esi*8]
  413465:	rcr    DWORD PTR [edi-0x40adac0a],0x8e
  41346c:	jbe    0x4134e8
  41346e:	popa   
  41346f:	int3   
  413470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413471:	sbb    BYTE PTR [edi-0x75e0e333],cl
  413477:	pop    ss
  413478:	pop    eax
  413479:	push   edx
  41347a:	xchg   al,al
  41347c:	sar    DWORD PTR [edx-0x79],1
  41347f:	das    
  413480:	ds dec esp
  413482:	or     ch,BYTE PTR [eax-0x1eca7d80]
  413488:	mov    edx,0x665dc444
  41348d:	daa    
  41348e:	addr16 pop esi
  413490:	mov    ch,BYTE PTR [esi-0x7c]
  413493:	sbb    ecx,DWORD PTR [esi-0x63]
  413496:	lock push es
  413498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413499:	or     BYTE PTR [ebp-0x52f54b6f],dl
  41349f:	pop    ebx
  4134a0:	xor    DWORD PTR [edx+0x5cabc2b7],ecx
  4134a6:	rcl    BYTE PTR ds:0x68b803f1,cl
  4134ac:	push   edx
  4134ad:	mov    esp,0xa8fc7a9c
  4134b2:	inc    ebp
  4134b3:	pop    edx
  4134b4:	mov    cl,0x44
  4134b6:	push   edx
  4134b7:	(bad)  
  4134b8:	fcom   QWORD PTR [edi+ecx*8-0x5932b7e3]
  4134bf:	jp     0x4134e9
  4134c1:	cdq    
  4134c2:	iret   
  4134c3:	inc    sp
  4134c5:	jge    0x4134a4
  4134c7:	scas   al,BYTE PTR es:[edi]
  4134c8:	call   0x444c4212
  4134cd:	mov    ds:0x2a85cc41,al
  4134d2:	and    al,0xe9
  4134d4:	in     eax,0xfb
  4134d6:	mov    ds:0x84328c07,al
  4134db:	or     DWORD PTR [esi-0x4fb8ad21],ecx
  4134e1:	scas   eax,DWORD PTR es:[edi]
  4134e2:	ficomp DWORD PTR [esi+0x29]
  4134e5:	push   0xd0d14a6d
  4134ea:	sub    bl,BYTE PTR [edx]
  4134ec:	retf   0x11a3
  4134ef:	mov    cl,0xc5
  4134f1:	xchg   ebp,eax
  4134f2:	adc    al,0xf2
  4134f4:	inc    esi
  4134f5:	push   es
  4134f6:	pop    eax
  4134f7:	leave  
  4134f8:	ja     0x41354b
  4134fa:	in     al,dx
  4134fb:	fld    QWORD PTR [esi+0x69]
  4134fe:	xchg   esi,eax
  4134ff:	mov    ah,cl
  413501:	jns    0x413499
  413503:	outs   dx,DWORD PTR ds:[esi]
  413504:	aam    0xea
  413506:	fwait
  413507:	shl    BYTE PTR [ebx],0x66
  41350a:	into   
  41350b:	repnz sub BYTE PTR ds:0xf8f05bc3,bh
  413512:	lahf   
  413513:	lods   al,BYTE PTR ds:[esi]
  413514:	out    0x6d,al
  413516:	in     al,0xf5
  413518:	pop    ecx
  413519:	mov    BYTE PTR ds:0xd997189e,dh
  41351f:	les    eax,FWORD PTR [esi]
  413521:	test   BYTE PTR [ebx+edi*1-0x2cb199f2],dl
  413528:	aas    
  413529:	int3   
  41352a:	leave  
  41352b:	adc    bh,BYTE PTR [edi-0x7d]
  41352e:	popa   
  41352f:	leave  
  413530:	xchg   ecx,eax
  413531:	(bad)  
  413532:	jbe    0x413508
  413534:	rcl    DWORD PTR [edi+0x5163fe2b],0xc1
  41353b:	into   
  41353c:	dec    edi
  41353d:	mov    WORD PTR [esi+0x4cbce57a],es
  413543:	aaa    
  413544:	xor    dl,BYTE PTR [esi+0xc]
  413547:	or     DWORD PTR [edx+0x384f0821],0xffffff81
  41354e:	jp     0x4134ee
  413550:	sti    
  413551:	fs fdivr st,st(4)
  413554:	jg     0x4135b3
  413556:	inc    edi
  413557:	jns    0x413573
  413559:	mov    ecx,0xd56f4296
  41355e:	adc    dl,dl
  413560:	imul   bl
  413562:	mov    ebx,DWORD PTR [ebx]
  413564:	jmp    0x99379099
  413569:	aaa    
  41356a:	or     DWORD PTR [esi],ecx
  41356c:	adc    BYTE PTR [edi-0x4],ah
  41356f:	dec    ebx
  413570:	clc    
  413571:	inc    esp
  413572:	push   ebx
  413573:	adc    al,0xf1
  413575:	xchg   DWORD PTR ds:0x2ebdb49b,edi
  41357b:	inc    esp
  41357c:	jb     0x413584
  41357e:	mov    ebp,0x33d03a42
  413583:	adc    DWORD PTR [ebx-0x6b34dd52],ecx
  413589:	jb     0x413582
  41358b:	push   ecx
  41358c:	call   0xda0d:0x759f46c7
  413593:	iret   
  413594:	mov    eax,0x3cf13366
  413599:	pop    esp
  41359a:	or     ecx,DWORD PTR [ebx]
  41359c:	mov    ecx,0x9620ec86
  4135a1:	ret    
  4135a2:	pop    edi
  4135a3:	and    al,0xcb
  4135a5:	mov    ah,0xcb
  4135a7:	mov    ch,0xf9
  4135a9:	sahf   
  4135aa:	and    DWORD PTR [ebp+0x3e],ebp
  4135ad:	dec    esp
  4135ae:	jmp    0x413612
  4135b0:	xor    DWORD PTR [ebx+0x4aadcb01],esi
  4135b6:	xor    BYTE PTR [edx+0xd],0xfb
  4135ba:	pop    ebp
  4135bb:	sbb    al,0xcb
  4135bd:	ins    DWORD PTR es:[edi],dx
  4135be:	retf   
  4135bf:	pop    ebp
  4135c0:	sti    
  4135c1:	add    edi,DWORD PTR [eax-0x23]
  4135c4:	inc    ebx
  4135c5:	repnz cmp ah,cl
  4135c8:	call   0x9f2e6c7a
  4135cd:	and    esi,esp
  4135cf:	lods   al,BYTE PTR ds:[esi]
  4135d0:	stos   BYTE PTR es:[edi],al
  4135d1:	add    BYTE PTR [ebp+0x6d29949f],dl
  4135d7:	jne    0x4135d9
  4135d9:	or     esi,ebx
  4135db:	and    BYTE PTR [eax-0x57d0c27e],0x8b
  4135e2:	fwait
  4135e3:	ins    BYTE PTR es:[edi],dx
  4135e4:	repnz pop edi
  4135e6:	jbe    0x4135dd
  4135e8:	(bad)  
  4135e9:	imul   DWORD PTR [edi-0xde5e2e0]
  4135ef:	(bad)  
  4135f1:	fsubr  QWORD PTR [ebp-0x28]
  4135f4:	fisub  DWORD PTR [ebp+0x14df5676]
  4135fa:	retf   
  4135fb:	popf   
  4135fc:	icebp  
  4135fd:	nop
  4135fe:	out    dx,eax
  4135ff:	test   ebx,0x8858743f
  413605:	mov    esp,0xaba2602e
  41360a:	or     eax,0xf364d24e
  41360f:	mov    al,ds:0x37ac091d
  413614:	and    al,0xf1
  413616:	jge    0x4135b4
  413618:	and    eax,0xae585761
  41361d:	test   eax,0x5a531c89
  413622:	scas   eax,DWORD PTR es:[edi]
  413623:	sub    eax,0xdfd78c3d
  413628:	and    DWORD PTR [edi-0x145aa401],0x78
  41362f:	cs add al,0x84
  413632:	adc    edx,ecx
  413634:	test   al,0x6e
  413636:	lea    ecx,[esi-0xae04a2d]
  41363c:	ins    BYTE PTR es:[edi],dx
  41363d:	in     al,dx
  41363e:	(bad)  
  41363f:	mov    ecx,0x4ed95c09
  413644:	call   0xe48d3f03
  413649:	mov    ah,0xb5
  41364b:	cli    
  41364c:	pop    ecx
  41364d:	add    cl,BYTE PTR [eax+ebp*2]
  413650:	cmp    BYTE PTR [eax],0x22
  413653:	or     eax,0x5c6cb256
  413658:	inc    ecx
  413659:	dec    DWORD PTR [edx]
  41365b:	xchg   edx,eax
  41365c:	sbb    ecx,ebx
  41365e:	stos   DWORD PTR es:[edi],eax
  41365f:	stos   BYTE PTR es:[edi],al
  413660:	nop
  413661:	push   edx
  413662:	push   eax
  413663:	or     BYTE PTR [eax],dl
  413665:	outs   dx,DWORD PTR ds:[esi]
  413666:	shl    esi,cl
  413668:	sub    ebp,ebp
  41366a:	std    
  41366b:	fisubr WORD PTR ds:0x65c8a095
  413671:	int    0x9f
  413673:	jg     0x4136e6
  413675:	dec    esi
  413676:	cmp    eax,0xfca8b9b3
  41367b:	mov    ah,0xc2
  41367d:	xlat   BYTE PTR ds:[ebx]
  41367e:	fwait
  41367f:	dec    esp
  413680:	mov    cl,0x5a
  413682:	push   ecx
  413683:	jb     0x41362d
  413685:	retf   
  413686:	popa   
  413687:	mov    WORD PTR [ebx+0x126f06b2],?
  41368d:	clc    
  41368e:	sbb    DWORD PTR [edx],ebp
  413690:	xor    DWORD PTR [eax+eax*1+0x75250ab9],ebp
  413697:	mov    al,ds:0xe5893f62
  41369c:	mov    edx,0x63db1eab
  4136a1:	ficom  WORD PTR [edx+0x3f103c8]
  4136a7:	jno    0x413728
  4136a9:	loope  0x413717
  4136ab:	into   
  4136ac:	pop    es
  4136ad:	and    ch,bh
  4136af:	and    ah,0xe3
  4136b2:	out    dx,eax
  4136b3:	and    eax,0xc2c2546b
  4136b8:	cmc    
  4136b9:	in     al,dx
  4136ba:	dec    ebx
  4136bb:	dec    edx
  4136bc:	rcr    DWORD PTR [ebp+0x51],1
  4136bf:	jmp    0x210a:0x5d90977b
  4136c6:	jnp    0x4136a4
  4136c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136c9:	mov    dl,0xaa
  4136cb:	(bad)  
  4136cc:	ret    
  4136cd:	push   ds
  4136ce:	stc    
  4136cf:	das    
  4136d0:	pop    es
  4136d1:	repnz add DWORD PTR cs:[ebx-0xf2b3c1f],0xffffff86
  4136da:	jl     0x4136f1
  4136dc:	enter  0x31d6,0x28
  4136e0:	inc    eax
  4136e1:	pop    edx
  4136e2:	ror    BYTE PTR ss:[ebp-0x64],1
  4136e6:	ret    
  4136e7:	sbb    BYTE PTR [eax],ah
  4136e9:	pop    es
  4136ea:	mov    ah,0xc
  4136ec:	repnz aas 
  4136ee:	jns    0x4136f4
  4136f0:	sub    dl,BYTE PTR [ecx-0x515f49b2]
  4136f6:	aam    0x22
  4136f8:	xor    DWORD PTR [edi+eax*1+0x559664bf],ecx
  4136ff:	test   BYTE PTR [edx-0x2a],ah
  413702:	jl     0x4136eb
  413704:	inc    esi
  413705:	hlt    
  413706:	fwait
  413707:	mov    al,ds:0x94093834
  41370c:	xchg   BYTE PTR [esp+esi*8+0x1f],al
  413710:	in     al,0xdd
  413712:	pop    eax
  413713:	shr    DWORD PTR [edi+0x5852a271],cl
  413719:	test   DWORD PTR ds:[esi],ebx
  41371c:	add    bh,BYTE PTR [edx]
  41371e:	dec    edx
  41371f:	fs in  eax,0x30
  413722:	and    al,0x2a
  413724:	fisttp QWORD PTR [edi-0x2a]
  413727:	and    edx,ebx
  413729:	inc    edi
  41372a:	and    al,0xd3
  41372c:	xchg   ebp,eax
  41372d:	push   esp
  41372e:	cs xchg edx,eax
  413730:	out    0xee,eax
  413732:	sar    DWORD PTR ds:0x308ce3b5,0xf3
  413739:	lods   al,BYTE PTR ds:[esi]
  41373a:	lds    esp,FWORD PTR [eax]
  41373c:	sub    edx,esi
  41373e:	loopne 0x4136cf
  413740:	push   cs
  413741:	arpl   bp,di
  413743:	jnp    0x4136d9
  413745:	mov    DWORD PTR [esi],edx
  413747:	stos   BYTE PTR es:[edi],al
  413748:	test   al,0xed
  41374a:	cdq    
  41374b:	fiadd  DWORD PTR [esp+ecx*8]
  41374e:	cmp    eax,0x1ccd95a2
  413753:	mov    bh,0x1f
  413755:	ficomp WORD PTR ds:0xf1fff90
  41375b:	dec    edx
  41375c:	imul   esp,DWORD PTR [ecx+0x693d27d2],0xffffffd0
  413763:	dec    ecx
  413764:	jbe    0x4136fd
  413766:	pop    ebp
  413767:	sbb    al,0xf3
  413769:	imul   edi,DWORD PTR [edi-0x3ef44ade],0x5c60cf02
  413773:	jo     0x413700
  413775:	xor    esi,ebx
  413777:	cmp    bh,BYTE PTR [esi+0x3cf6427a]
  41377d:	and    BYTE PTR ds:0xc98f3705,dh
  413783:	stc    
  413784:	cmp    DWORD PTR [eax-0x5],ecx
  413787:	mov    ds:0x2c8f3e04,eax
  41378c:	push   0x100d93c1
  413791:	jge    0x4137b1
  413793:	dec    esi
  413794:	inc    ebx
  413795:	mov    ecx,0x6a417fd7
  41379a:	mov    DWORD PTR [esi+esi*8],esp
  41379d:	or     eax,0xfbeb6cca
  4137a2:	sub    ah,al
  4137a4:	js     0x413762
  4137a6:	les    edi,FWORD PTR [eax-0x51817b63]
  4137ac:	mov    esp,0xba806f56
  4137b1:	ins    BYTE PTR es:[edi],dx
  4137b2:	add    eax,0x36d8397e
  4137b7:	mov    edx,0x83d3e65c
  4137bc:	out    dx,eax
  4137bd:	pop    ss
  4137be:	lods   al,BYTE PTR ds:[esi]
  4137bf:	add    BYTE PTR [ebx],cl
  4137c1:	je     0x4137d6
  4137c3:	add    al,0x2a
  4137c5:	rol    DWORD PTR [esi],0xe7
  4137c8:	call   0x6b2cd11c
  4137cd:	jbe    0x413768
  4137cf:	clc    
  4137d0:	push   edi
  4137d1:	jg     0x413801
  4137d3:	xor    dl,BYTE PTR ds:0x8946fc6f
  4137d9:	adc    al,0x78
  4137dc:	ja     0x4137ec
  4137de:	sahf   
  4137df:	mov    ds:0xa2e2fad7,al
  4137e4:	ret    
  4137e5:	xor    BYTE PTR [ebp-0x25],0xcb
  4137e9:	sub    DWORD PTR [ecx+edx*1],0x591df0cc
  4137f0:	daa    
  4137f1:	ret    0xf790
  4137f4:	imul   eax,edx,0xd82de4f8
  4137fa:	pushf  
  4137fb:	ins    BYTE PTR es:[edi],dx
  4137fc:	jmp    0x6a8aafd4
  413801:	inc    ebx
  413802:	dec    esi
  413803:	mov    DWORD PTR [eax-0x3c],eax
  413806:	mov    edi,0x5d197c07
  41380b:	jg     0x41384c
  41380d:	lea    ebp,[ebx-0x50ca4a39]
  413813:	xor    BYTE PTR [eax+eiz*2-0x3e99dd10],cl
  41381a:	stc    
  41381b:	(bad)  
  41381c:	xchg   edx,eax
  41381d:	mov    dl,0xef
  41381f:	imul   esp,ebx,0xb8599385
  413825:	jnp    0x41386c
  413827:	and    ecx,ebx
  413829:	dec    esi
  41382a:	fwait
  41382b:	lods   al,BYTE PTR ds:[esi]
  41382c:	lods   al,BYTE PTR ds:[esi]
  41382d:	(bad)  
  41382f:	bnd jb 0x4138b1
  413832:	shr    BYTE PTR [edi-0x6e5fe9ef],1
  413838:	inc    edx
  413839:	mov    edi,0xd36a2328
  41383e:	cmps   WORD PTR ds:[si],WORD PTR es:[di]
  413841:	stos   DWORD PTR es:[edi],eax
  413842:	cwde   
  413843:	adc    al,0xc3
  413845:	call   0xfb6b26c8
  41384a:	or     eax,0x1de2eb18
  41384f:	or     cl,BYTE PTR [eax]
  413851:	mov    ds:0x480b6631,al
  413856:	shr    BYTE PTR [edi+0x7f],1
  413859:	jno    0x4138a4
  41385b:	cli    
  41385c:	jmp    0xbfdd:0xd7bc1a10
  413863:	(bad)  
  413865:	pop    esi
  413866:	mov    cl,0x1a
  413868:	push   esp
  413869:	push   ds
  41386a:	xchg   esp,eax
  41386b:	jecxz  0x413842
  41386d:	test   DWORD PTR [ebx+eax*8+0x30],0xd1975d09
  413875:	xchg   edi,eax
  413876:	(bad)  
  413877:	fwait
  413878:	sbb    DWORD PTR [edi+0x2],0xffffff87
  41387c:	adc    al,0xef
  41387e:	jecxz  0x4138ea
  413880:	jp     0x41386c
  413882:	cmp    ebx,DWORD PTR [ecx-0x43]
  413885:	mov    esi,0x804f6d72
  41388a:	jle    0x4138af
  41388c:	rol    ecx,1
  41388e:	sahf   
  41388f:	pop    ebp
  413890:	repz loope 0x41388e
  413893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413895:	sub    DWORD PTR [edx+0x52],esi
  413898:	or     BYTE PTR [ebx],0x63
  41389b:	push   es
  41389c:	sbb    BYTE PTR [eax],ch
  41389e:	mov    edi,0xd373b12b
  4138a3:	xchg   esp,eax
  4138a4:	pop    ss
  4138a5:	sub    DWORD PTR [eax+eax*8],esi
  4138a8:	int3   
  4138a9:	call   0x28dce6e1
  4138ae:	and    eax,0xa814e281
  4138b3:	retf   0xec4a
  4138b6:	mov    bl,0xda
  4138b8:	sar    DWORD PTR [edx+0x26ab1623],cl
  4138be:	push   eax
  4138bf:	(bad)  
  4138c0:	jmp    0x15ff01f
  4138c5:	iret   
  4138c6:	mov    edi,0xb0cf7867
  4138cb:	mov    al,0x62
  4138cd:	xor    eax,0x7acd3286
  4138d2:	jle    0x413901
  4138d4:	out    0xe1,al
  4138d6:	mov    ebp,0x32029d36
  4138db:	pop    ds
  4138dc:	outs   dx,BYTE PTR ds:[esi]
  4138dd:	xchg   ebx,eax
  4138de:	pushf  
  4138df:	mov    BYTE PTR [eax-0x4d],cl
  4138e2:	adc    cl,0x7b
  4138e5:	cmp    ah,dh
  4138e7:	push   es
  4138e8:	mov    ss,edi
  4138ea:	cmp    dh,dh
  4138ec:	fcom   QWORD PTR [ebx-0xf]
  4138ef:	xor    BYTE PTR [ebx],dh
  4138f1:	xchg   DWORD PTR ds:0x2b1b16ad,ebx
  4138f7:	sub    al,al
  4138f9:	adc    BYTE PTR [ebx],bl
  4138fb:	mov    ds:0x6895e166,al
  413900:	call   DWORD PTR [bx]
  413903:	es push esi
  413905:	loop   0x413972
  413907:	pop    ecx
  413908:	and    DWORD PTR [ebp-0x3d],0xffffffd6
  41390c:	je     0x4138a9
  41390e:	cs popf 
  413910:	sub    eax,0xa0841b1e
  413915:	lods   eax,DWORD PTR ds:[esi]
  413916:	lea    edx,[edx+0x7e]
  413919:	jmp    edx
  41391b:	mov    esp,0x53d881bc
  413920:	sbb    BYTE PTR [eax+0x72],cl
  413923:	xor    al,0x7
  413925:	and    eax,0x4cfc667
  41392a:	imul   eax,DWORD PTR [edi+ecx*8-0x46228797],0xffffffb1
  413932:	mov    al,0x17
  413934:	add    BYTE PTR [ecx-0xe302a08],ah
  41393a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41393b:	test   al,0x70
  41393d:	mov    esp,DWORD PTR [eax+0xf]
  413940:	popf   
  413941:	push   ebx
  413942:	lods   eax,DWORD PTR ds:[esi]
  413943:	sbb    ecx,ecx
  413945:	rol    DWORD PTR [edx],0x7c
  413948:	inc    eax
  413949:	inc    eax
  41394a:	xor    DWORD PTR [esi],esp
  41394c:	dec    edx
  41394d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41394e:	add    DWORD PTR [eax+0x2620859c],esp
  413954:	adc    eax,0x9ba06956
  413959:	rol    bh,1
  41395b:	xor    bl,ah
  41395d:	daa    
  41395e:	or     ebx,ebx
  413960:	repz xlat BYTE PTR ds:[ebx]
  413962:	(bad)  
  413963:	rcr    BYTE PTR cs:[edi+0x757e5622],cl
  41396a:	sbb    BYTE PTR [esi+eiz*4],al
  41396d:	daa    
  41396e:	ja     0x41398b
  413970:	cli    
  413971:	inc    ebx
  413972:	popf   
  413973:	jmp    0x4139af
  413975:	out    dx,eax
  413976:	lea    edi,[esi]
  413978:	inc    ebp
  413979:	in     eax,0x9d
  41397b:	mov    al,ds:0x7202ddb7
  413980:	or     DWORD PTR [ebp+eax*4-0x1aae7892],esi
  413987:	xor    edi,esp
  413989:	push   ss
  41398a:	cmp    edx,DWORD PTR [ebp+0x678df380]
  413990:	mov    esp,0xc043e752
  413995:	mov    esi,0x26ec945c
  41399a:	pop    edi
  41399b:	pop    eax
  41399c:	in     al,dx
  41399d:	mov    ch,0x57
  41399f:	add    eax,0xc7f71aab
  4139a4:	lods   eax,DWORD PTR ds:[esi]
  4139a5:	mov    ds:0xe9eb7c01,al
  4139aa:	xchg   ebp,eax
  4139ab:	(bad)  [eax-0x12]
  4139ae:	int    0x30
  4139b0:	mov    eax,0xc65eb5a3
  4139b5:	cmp    esi,esp
  4139b7:	dec    esi
  4139b8:	xchg   ecx,eax
  4139b9:	mov    ebx,0xcb9539fb
  4139be:	jmp    0x7463:0xdc7cedcd
  4139c5:	dec    edx
  4139c6:	pop    esp
  4139c7:	sahf   
  4139c8:	out    0xad,al
  4139ca:	mov    esp,0x50fbc06
  4139cf:	bound  ecx,QWORD PTR [edi]
  4139d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139d2:	(bad)  
  4139d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139d4:	dec    esi
  4139d5:	shl    DWORD PTR [eax],0x87
  4139d8:	pop    es
  4139d9:	and    bl,BYTE PTR [ebx]
  4139db:	scas   al,BYTE PTR es:[edi]
  4139dc:	ss fwait
  4139de:	jno    0x413a1d
  4139e0:	cmp    bl,BYTE PTR [esi]
  4139e2:	and    eax,0x6d0902be
  4139e7:	lock jp 0x4139cf
  4139ea:	mov    esp,ebx
  4139ec:	jmp    0x413a67
  4139ee:	aas    
  4139ef:	repnz mov eax,ds:0x68f1ff0a
  4139f5:	fadd   DWORD PTR [eax+eax*2-0x155bf4b8]
  4139fc:	sub    cl,BYTE PTR [esi-0x68]
  4139ff:	std    
  413a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a02:	daa    
  413a03:	ins    DWORD PTR es:[edi],dx
  413a04:	cmc    
  413a05:	ror    DWORD PTR [edi-0x7d],cl
  413a08:	pop    ebx
  413a09:	xor    ebx,DWORD PTR [ebx]
  413a0b:	popa   
  413a0c:	ret    
  413a0d:	adc    eax,0xc3e3aa7a
  413a12:	sti    
  413a13:	dec    esp
  413a14:	das    
  413a15:	add    BYTE PTR [edx+0x7db9ad82],dh
  413a1b:	fcomi  st,st(1)
  413a1d:	pushf  
  413a1e:	ins    BYTE PTR es:[edi],dx
  413a1f:	inc    esi
  413a20:	jae    0x4139bd
  413a22:	(bad)  
  413a23:	push   ecx
  413a24:	fs int 0xd6
  413a27:	pop    esi
  413a28:	out    0x83,al
  413a2a:	add    ah,0x62
  413a2d:	xchg   esi,eax
  413a2e:	push   ecx
  413a2f:	mul    DWORD PTR ds:0x7449f325
  413a35:	(bad)  
  413a36:	in     al,dx
  413a37:	jnp    0x413a8a
  413a39:	adc    DWORD PTR [edi],edi
  413a3b:	call   0x1b96:0x64df406c
  413a42:	fisubr WORD PTR [ecx]
  413a44:	sub    bl,BYTE PTR [ebx]
  413a46:	das    
  413a47:	cmp    eax,0x1ed3d52c
  413a4c:	xchg   edx,eax
  413a4d:	fild   DWORD PTR [ebp-0x55]
  413a50:	fbld   TBYTE PTR [esi]
  413a52:	cmp    al,dl
  413a54:	adc    cl,ah
  413a56:	idiv   DWORD PTR [esi+0x4d]
  413a59:	std    
  413a5a:	das    
  413a5b:	rol    DWORD PTR [esi],1
  413a5d:	mov    ebp,0x4fe0fd07
  413a62:	xor    al,0xbd
  413a64:	adc    eax,0xc1bf7abc
  413a69:	jne    0x413a05
  413a6b:	mov    cl,0xd8
  413a6d:	and    ecx,DWORD PTR [edi+0x36272a38]
  413a73:	clc    
  413a74:	add    BYTE PTR [ebx+eiz*2],al
  413a77:	dec    esi
  413a78:	int3   
  413a79:	sbb    edx,0xedb14ed4
  413a7f:	xchg   esi,eax
  413a80:	dec    esp
  413a81:	into   
  413a82:	out    dx,eax
  413a83:	xchg   DWORD PTR [edi-0x4a3cc992],esi
  413a89:	sub    DWORD PTR [ebx],0x85d87c0
  413a8f:	or     DWORD PTR [esi],ebx
  413a91:	mov    eax,ds:0x75daec1c
  413a96:	into   
  413a97:	mov    edx,0x311c1a4f
  413a9c:	add    ah,BYTE PTR [ecx-0x74]
  413a9f:	mov    dh,0xc8
  413aa1:	sbb    al,0xb9
  413aa3:	mov    bl,0xe8
  413aa5:	pop    esp
  413aa6:	sahf   
  413aa7:	cmp    BYTE PTR [ebx+0x3fbd95c7],ch
  413aad:	xor    al,dl
  413aaf:	xchg   edx,eax
  413ab0:	daa    
  413ab1:	mov    cl,0xdb
  413ab3:	mov    DWORD PTR [ebp-0x4],eax
  413ab6:	lods   al,BYTE PTR ds:[esi]
  413ab7:	imul   esp,DWORD PTR [ecx],0x6bd7a949
  413abd:	loop   0x413a6e
  413abf:	jmp    0x55ac:0x20adf724
  413ac6:	xchg   esi,eax
  413ac7:	fdivrp st(6),st
  413ac9:	cmp    esp,ecx
  413acb:	in     eax,0xc8
  413acd:	test   eax,0xeceac1fa
  413ad2:	in     al,0x6
  413ad4:	lods   al,BYTE PTR ds:[esi]
  413ad5:	xchg   edx,eax
  413ad6:	push   esp
  413ad7:	mov    bl,0x9d
  413ad9:	mov    esi,0xa923929c
  413ade:	loope  0x413b26
  413ae0:	pop    edi
  413ae1:	dec    esi
  413ae2:	fwait
  413ae3:	fwait
  413ae4:	ds sahf 
  413ae6:	cs in  al,dx
  413ae8:	aam    0x5e
  413aea:	xchg   DWORD PTR [ebx-0x2f872cf6],ecx
  413af0:	jo     0x413a7a
  413af2:	xor    eax,0xf0be7ed8
  413af7:	call   0xcb4cfcd9
  413afc:	mov    ah,0xc5
  413afe:	les    esp,FWORD PTR [eax]
  413b00:	jns    0x413a97
  413b02:	arpl   WORD PTR [edi],si
  413b04:	lods   eax,DWORD PTR ds:[esi]
  413b05:	sbb    BYTE PTR ds:[eax],ah
  413b08:	ret    0x59e8
  413b0b:	ins    BYTE PTR es:[edi],dx
  413b0c:	push   es
  413b0d:	mov    ah,0x49
  413b0f:	xor    BYTE PTR [ebp+0x39],bh
  413b12:	mov    DWORD PTR [ebx],eax
  413b14:	pop    ecx
  413b15:	popa   
  413b16:	cli    
  413b17:	aam    0xe6
  413b19:	fwait
  413b1a:	jg     0x413b47
  413b1c:	add    BYTE PTR [eax+0x1224f8a9],cl
  413b22:	js     0x413b20
  413b24:	sbb    al,0xf9
  413b26:	add    al,0xc
  413b28:	pop    edx
  413b29:	add    al,0x7f
  413b2b:	and    esp,0xb77041e7
  413b31:	in     eax,dx
  413b32:	xor    DWORD PTR [edx],0x2235334b
  413b38:	jl     0x413b8b
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	mov    ebp,0xf878e7e9
  413b41:	adc    bh,BYTE PTR [edx-0x1d]
  413b44:	or     DWORD PTR [edx+esi*4+0x3d],0xffffffdc
  413b49:	sub    edi,DWORD PTR [ecx+ebx*4-0x5953c0f7]
  413b50:	mov    bl,0x62
  413b52:	inc    ecx
  413b53:	dec    ebx
  413b54:	cmp    ch,al
  413b56:	(bad)  
  413b57:	sub    esi,DWORD PTR [edx]
  413b59:	js     0x413b77
  413b5b:	push   es
  413b5c:	or     al,0x83
  413b5e:	retf   
  413b5f:	adc    bh,BYTE PTR [esi-0x1ab44f08]
  413b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b66:	push   ebp
  413b67:	test   esi,eax
  413b69:	sbb    BYTE PTR [eax+0x1bfc2ac9],bl
  413b6f:	enter  0x40ac,0x95
  413b73:	mov    cl,0xa1
  413b75:	aas    
  413b76:	mov    dh,0x5d
  413b78:	jp     0x413b37
  413b7a:	or     ecx,DWORD PTR [ebx+0x22e66773]
  413b80:	fldenv [edi]
  413b82:	sar    DWORD PTR [ebp+edi*8-0x4a],cl
  413b86:	into   
  413b87:	and    DWORD PTR [ebx-0x5b],0x17
  413b8b:	dec    ecx
  413b8c:	xchg   BYTE PTR [edi-0x17c3a731],dl
  413b92:	aas    
  413b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b94:	cmp    BYTE PTR [esi+0x5ad6f822],dl
  413b9a:	sbb    ah,ah
  413b9c:	nop
  413b9d:	lock add esp,DWORD PTR [ebx]
  413ba0:	rcr    DWORD PTR [ebx+0x1f],0x83
  413ba4:	dec    eax
  413ba5:	push   ebp
  413ba6:	popa   
  413ba7:	pop    esp
  413ba8:	fs aam 0x28
  413bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bac:	popf   
  413bad:	ror    BYTE PTR [ecx],cl
  413baf:	mov    ch,0xe5
  413bb1:	dec    edi
  413bb2:	popa   
  413bb3:	clc    
  413bb4:	add    ch,ch
  413bb6:	lea    ebp,[ebx+0x46]
  413bb9:	jp     0x413b4d
  413bbb:	jmp    0xb68ae1ea
  413bc0:	push   ss
  413bc1:	sahf   
  413bc2:	sbb    BYTE PTR [eax],0x55
  413bc5:	hlt    
  413bc6:	push   ebx
  413bc7:	cld    
  413bc8:	sbb    ebx,DWORD PTR es:[eax]
  413bcb:	mov    bh,cl
  413bcd:	xchg   ebx,eax
  413bce:	push   ds
  413bcf:	jo     0x413b57
  413bd1:	pop    ds
  413bd2:	ja     0x413c09
  413bd4:	cmc    
  413bd5:	mov    ah,0x4b
  413bd7:	int    0xea
  413bd9:	call   0x7436d086
  413bde:	or     DWORD PTR [ecx-0x24],edi
  413be1:	jae    0x413bae
  413be3:	sub    BYTE PTR [ecx-0x75035c26],dh
  413be9:	pop    ss
  413bea:	fcom   DWORD PTR [ebx+ecx*8]
  413bed:	dec    ebx
  413bee:	out    0x34,al
  413bf0:	cwde   
  413bf1:	push   ss
  413bf2:	cmp    ecx,DWORD PTR [esp+edi*8]
  413bf5:	out    0xdb,al
  413bf7:	neg    DWORD PTR [ebx+0x3f]
  413bfa:	mul    DWORD PTR [esi+0x11e2c429]
  413c00:	mov    edx,0x3dddeafe
  413c05:	pop    esp
  413c06:	test   BYTE PTR [edi-0x33],0xea
  413c0a:	in     al,dx
  413c0b:	push   edi
  413c0c:	(bad)  
  413c0d:	int3   
  413c0e:	mov    ?,WORD PTR [ebp+0x54]
  413c11:	clc    
  413c12:	dec    ebp
  413c13:	aad    0x9b
  413c15:	xchg   edi,eax
  413c16:	mov    ds:0x7c63f3f6,eax
  413c1b:	xchg   esp,eax
  413c1c:	addr16 push ds
  413c1e:	xchg   DWORD PTR [ebp+0x26fcc7a8],edx
  413c24:	fbld   TBYTE PTR [ebp-0x46]
  413c27:	adc    BYTE PTR [esi+eax*8+0x39],al
  413c2b:	xchg   edx,eax
  413c2c:	(bad)  
  413c2d:	mov    WORD PTR [esi-0x4],ds
  413c30:	adc    eax,0x234448fc
  413c35:	mov    ds:0xdc0988a4,eax
  413c3a:	jns    0x413c42
  413c3c:	mov    ?,WORD PTR [ecx+0x78]
  413c3f:	(bad)  
  413c40:	cs test al,0x93
  413c43:	mov    ecx,0x127e3cd4
  413c48:	fnstsw WORD PTR ds:0xdd38d5bb
  413c4e:	inc    esi
  413c4f:	jecxz  0x413c6a
  413c51:	repz mov dh,0x24
  413c54:	push   edi
  413c55:	sbb    DWORD PTR [edi+0x2e],ebp
  413c58:	cwde   
  413c59:	aad    0xfc
  413c5b:	push   ds
  413c5c:	lods   eax,DWORD PTR ds:[esi]
  413c5d:	outs   dx,DWORD PTR ds:[esi]
  413c5e:	and    eax,0xa81afeac
  413c63:	dec    ecx
  413c64:	add    BYTE PTR [eax],al
  413c66:	dec    ecx
  413c67:	push   esi
  413c68:	nop
  413c69:	dec    edx
  413c6a:	dec    edx
  413c6b:	add    DWORD PTR [edi-0x427f4835],esp
  413c71:	xchg   esi,eax
  413c72:	cmp    DWORD PTR [edi],0xee93671a
  413c78:	jecxz  0x413c6f
  413c7a:	mov    bl,0xb0
  413c7c:	jno    0x413c1b
  413c7e:	js     0x413c6e
  413c80:	jl     0x413c6e
  413c82:	mov    ds,ecx
  413c84:	cdq    
  413c85:	bound  ebp,QWORD PTR [edx]
  413c87:	arpl   WORD PTR [ebx-0x5a],bx
  413c8a:	pushf  
  413c8b:	outs   dx,DWORD PTR ds:[esi]
  413c8c:	fwait
  413c8d:	in     al,dx
  413c8e:	mov    eax,DWORD PTR [ecx+0x5e7e999]
  413c94:	mov    ecx,0x18b84d1a
  413c99:	adc    esi,DWORD PTR [edi+0x4174699]
  413c9f:	sbb    al,0x62
  413ca1:	fbstp  TBYTE PTR [ecx]
  413ca3:	and    edi,DWORD PTR [ecx+0x385c0c59]
  413ca9:	xchg   ebp,eax
  413caa:	xchg   edi,eax
  413cab:	pop    edi
  413cac:	mov    ecx,0xca94a275
  413cb1:	call   0xf9b0c33a
  413cb6:	aaa    
  413cb7:	outs   dx,BYTE PTR ds:[esi]
  413cb8:	dec    esp
  413cb9:	push   ecx
  413cba:	mov    ebx,0x14002b5a
  413cbf:	mov    bl,0xdb
  413cc1:	inc    edx
  413cc2:	mov    ds:0x952d61e2,eax
  413cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cc8:	dec    ebp
  413cc9:	and    esp,ebp
  413ccb:	dec    ebp
  413ccc:	jb     0x413d43
  413cce:	xchg   esp,eax
  413ccf:	jns    0x413d17
  413cd1:	cmp    al,0x43
  413cd3:	(bad)  
  413cd4:	jmp    0x292b:0xdbd96eb1
  413cdb:	js     0x413d50
  413cdd:	jp     0x413c93
  413cdf:	(bad)  
  413ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ce2:	mov    edi,0xb55eb8d0
  413ce7:	js     0x413ced
  413ce9:	mov    edi,0x3792f091
  413cee:	jno    0x413ca2
  413cf0:	lea    ebp,[edx]
  413cf2:	inc    edi
  413cf3:	and    al,0x9f
  413cf5:	popa   
  413cf6:	or     eax,ecx
  413cf8:	or     eax,0xa04f242e
  413cfd:	dec    esp
  413cfe:	loope  0x413c95
  413d00:	mov    esp,eax
  413d02:	arpl   WORD PTR [edx],ax
  413d04:	inc    edx
  413d05:	sbb    al,BYTE PTR [ecx]
  413d07:	mov    ebx,0x2793d0f1
  413d0c:	lahf   
  413d0d:	ins    BYTE PTR es:[edi],dx
  413d0e:	cmp    BYTE PTR [edx+0x2e],bh
  413d11:	sbb    DWORD PTR [ecx],edi
  413d13:	scas   eax,DWORD PTR es:[edi]
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	push   ss
  413d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d17:	popa   
  413d18:	repnz mov al,ds:0x2570798b
  413d1e:	sbb    DWORD PTR [esi-0x56bbaaed],0xf8a25ed9
  413d28:	xor    BYTE PTR ds:0x8a33ed4,bl
  413d2e:	enter  0xe076,0x19
  413d32:	ret    0xa3e0
  413d35:	xor    bh,BYTE PTR [ebp-0x5b]
  413d38:	push   ebp
  413d39:	outs   dx,DWORD PTR ds:[esi]
  413d3a:	cdq    
  413d3b:	cmp    al,0x33
  413d3d:	stos   BYTE PTR es:[edi],al
  413d3e:	(bad)  [eax-0x35]
  413d41:	fcmove st,st(4)
  413d43:	clc    
  413d44:	sar    BYTE PTR [ecx],cl
  413d46:	mov    dh,0x86
  413d48:	call   0xa5200bd3
  413d4d:	xchg   ebp,eax
  413d4e:	push   ebx
  413d4f:	xchg   ebx,eax
  413d50:	call   0xee0ff788
  413d55:	lahf   
  413d56:	pop    ebx
  413d57:	sbb    dl,BYTE PTR es:[ebp+0x6d]
  413d5b:	sbb    ah,BYTE PTR [edx+0x8]
  413d5e:	fiadd  DWORD PTR [edx+0x2c091b5d]
  413d64:	inc    eax
  413d65:	std    
  413d66:	xor    eax,0xa439dbd3
  413d6b:	leave  
  413d6c:	pop    ecx
  413d6d:	aam    0x62
  413d6f:	aas    
  413d70:	aam    0x2f
  413d72:	montmul (bad)
  413d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d74:	(bad)  
  413d75:	mov    eax,edi
  413d77:	into   
  413d78:	int    0xbc
  413d7a:	xlat   BYTE PTR ds:[ebx]
  413d7b:	jnp    0x413d4b
  413d7d:	mov    ds:0xefa0dd4f,eax
  413d82:	and    ebx,ebp
  413d84:	cmp    bl,bh
  413d86:	mov    ah,BYTE PTR [edx+ebp*1+0x25]
  413d8a:	imul   ebp,DWORD PTR [ecx+0x7b],0x3
  413d8e:	push   ss
  413d8f:	stos   DWORD PTR es:[edi],eax
  413d90:	ja     0x413dfa
  413d92:	ret    0xa37e
  413d95:	xor    DWORD PTR [eax+0x108549d7],0xea5e4eed
  413d9f:	sbb    DWORD PTR [eax-0x47aa3c16],ecx
  413da5:	inc    ebx
  413da6:	or     esp,eax
  413da8:	or     BYTE PTR [ebp-0x5c],ah
  413dab:	nop
  413dac:	adc    al,BYTE PTR fs:[ebx]
  413daf:	pop    ebp
  413db0:	sbb    ebx,DWORD PTR [ecx+ebp*8]
  413db3:	xchg   esi,eax
  413db4:	dec    edx
  413db5:	inc    esp
  413db6:	sub    BYTE PTR [esi+0x51],ch
  413db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dba:	stc    
  413dbb:	pop    eax
  413dbc:	or     ebp,ebx
  413dbe:	lods   eax,DWORD PTR ds:[esi]
  413dbf:	sbb    al,0x8d
  413dc1:	adc    dh,ch
  413dc3:	test   BYTE PTR [eax],0xc3
  413dc6:	pop    ds
  413dc7:	ret    
  413dc8:	pushf  
  413dc9:	inc    ebx
  413dca:	jmp    0xcbe627b
  413dcf:	add    BYTE PTR [ecx+0x466d2fc1],ah
  413dd5:	add    eax,0x2c3027f5
  413dda:	(bad)  
  413ddb:	cmp    BYTE PTR [edx-0x22151dc0],dh
  413de1:	adc    esi,ecx
  413de3:	inc    eax
  413de4:	or     BYTE PTR [edi-0x1096d4a9],cl
  413dea:	repnz adc DWORD PTR [edx],edx
  413ded:	or     ebp,esp
  413def:	outs   dx,DWORD PTR ds:[esi]
  413df0:	cmp    eax,0x84bfc64b
  413df5:	xor    edx,DWORD PTR [esi-0x405b2e38]
  413dfb:	ds aad 0x9d
  413dfe:	lods   al,BYTE PTR ds:[esi]
  413dff:	xchg   ebp,eax
  413e00:	xchg   ebx,eax
  413e01:	aad    0x24
  413e03:	lods   al,BYTE PTR ds:[esi]
  413e04:	test   eax,0xc238d855
  413e09:	xchg   ebx,eax
  413e0a:	enter  0x2d3e,0xa0
  413e0e:	inc    ebp
  413e0f:	sbb    BYTE PTR [ebx-0x5b85befe],0xec
  413e16:	ins    DWORD PTR es:[edi],dx
  413e17:	mov    esi,0xcc04e498
  413e1c:	lds    ebp,FWORD PTR [esi+0x30]
  413e1f:	push   edx
  413e20:	jp     0x413e0b
  413e22:	and    bl,BYTE PTR [ebp+eiz*4-0x69]
  413e26:	push   esp
  413e27:	shr    BYTE PTR [edx+0x3ace7212],0xa6
  413e2e:	sbb    al,0x80
  413e30:	xchg   BYTE PTR [ebx+ecx*8],ah
  413e33:	test   bh,cl
  413e35:	mov    esp,0x2a199ef
  413e3a:	mov    dh,0xe9
  413e3c:	cmp    ch,dl
  413e3e:	aad    0x62
  413e40:	xchg   esp,eax
  413e41:	push   ss
  413e42:	fbld   TBYTE PTR [esi-0x52166527]
  413e48:	xor    edi,DWORD PTR [edx+0x13]
  413e4b:	and    eax,0xcf7d3dcd
  413e50:	fmul   DWORD PTR [ebx+0x64a784d8]
  413e56:	test   DWORD PTR [ebp-0x9],edi
  413e59:	ja     0x413e69
  413e5b:	push   ebx
  413e5c:	(bad)  
  413e5d:	out    0xbf,al
  413e5f:	push   esi
  413e60:	mov    dl,0xda
  413e62:	inc    esp
  413e63:	dec    ebp
  413e64:	mov    ds:0x11a2d26d,al
  413e69:	aam    0xb1
  413e6b:	pop    ebp
  413e6c:	popf   
  413e6d:	fisttp QWORD PTR [esi+ebp*8+0x64]
  413e71:	sub    DWORD PTR [eax],0x11ba3c4e
  413e77:	mov    bl,BYTE PTR [esi]
  413e79:	xchg   esi,eax
  413e7a:	out    0x69,eax
  413e7c:	(bad)  
  413e7d:	adc    eax,0x8f45a235
  413e82:	xchg   al,cl
  413e84:	aam    0x8b
  413e86:	pop    ss
  413e87:	bswap  ebx
  413e89:	xor    al,0x71
  413e8b:	jns    0x413e7c
  413e8d:	lds    eax,FWORD PTR [ebx]
  413e8f:	and    DWORD PTR [ecx+edi*4+0x69fa2cb],esi
  413e96:	cld    
  413e97:	add    cl,BYTE PTR [ecx-0x6abc18d7]
  413e9d:	ret    0x9662
  413ea0:	adc    al,0x6f
  413ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ea3:	xchg   edi,eax
  413ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ea5:	adc    DWORD PTR [ebx+0x1a],esp
  413ea8:	dec    edi
  413ea9:	push   ebp
  413eaa:	in     al,dx
  413eab:	dec    edx
  413eac:	stc    
  413ead:	push   edx
  413eae:	je     0x413ef6
  413eb0:	out    dx,al
  413eb1:	pop    DWORD PTR [edx]
  413eb3:	shr    bl,0x95
  413eb6:	in     eax,dx
  413eb7:	mov    dl,0xa4
  413eb9:	(bad)  
  413eba:	mov    eax,0x8667dc93
  413ebf:	test   BYTE PTR [ebx-0x48],dl
  413ec2:	lea    ecx,[edi-0x39]
  413ec5:	xchg   DWORD PTR [edi-0x636da782],ecx
  413ecb:	test   al,0x60
  413ecd:	dec    ebx
  413ece:	ins    DWORD PTR es:[edi],dx
  413ecf:	inc    esi
  413ed0:	mov    ?,WORD PTR [eax]
  413ed2:	sbb    eax,edi
  413ed4:	and    ah,BYTE PTR [ebx-0x17]
  413ed7:	pop    ss
  413ed8:	cmp    BYTE PTR [ebx+0x5a],dl
  413edb:	cmp    bl,bl
  413edd:	lea    ebp,[ebx+0x48]
  413ee0:	cmp    eax,0xfb0a42f
  413ee5:	daa    
  413ee6:	and    cl,al
  413ee8:	test   eax,0x99fd379e
  413eed:	xor    eax,0xc9c6dfd2
  413ef2:	ds je  0x413ec3
  413ef5:	and    ch,BYTE PTR [eax]
  413ef7:	mov    eax,ds:0xdc041e25
  413efc:	mov    eax,es
  413efe:	retf   0x6e7
  413f01:	adc    BYTE PTR [esi+0x38],dl
  413f04:	mul    bh
  413f06:	mov    dh,0x2c
  413f08:	fsub   DWORD PTR [edx-0x31]
  413f0b:	push   ds
  413f0c:	sub    DWORD PTR [ecx-0x344214cd],0x1e
  413f13:	gs pop ebp
  413f15:	jne    0x413ed3
  413f17:	push   esi
  413f18:	xchg   DWORD PTR [ecx],ecx
  413f1a:	inc    eax
  413f1b:	pop    edx
  413f1c:	retf   0xfbb
  413f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f20:	stc    
  413f21:	pop    esi
  413f22:	arpl   WORD PTR gs:[ecx+0x4626c4e7],dx
  413f29:	or     dh,BYTE PTR [ecx-0x4d]
  413f2c:	ror    BYTE PTR [edx+0x4454f8de],cl
  413f32:	ret    0x5c44
  413f35:	mov    dl,BYTE PTR [ebx+esi*2-0x58]
  413f39:	js     0x413f29
  413f3b:	ins    DWORD PTR es:[edi],dx
  413f3c:	mov    ds:0x55ee1f3d,eax
  413f41:	scas   eax,DWORD PTR es:[edi]
  413f42:	xor    DWORD PTR [ecx+0x37],0x34
  413f46:	mov    esp,0xd4935346
  413f4b:	mov    ds:0xd1169adf,al
  413f50:	cli    
  413f51:	lock inc ebx
  413f53:	push   esi
  413f54:	repnz sub cl,BYTE PTR [eax]
  413f57:	not    DWORD PTR [eax+0x2c05295e]
  413f5d:	dec    edx
  413f5e:	ja     0x413efc
  413f60:	and    esi,DWORD PTR [edx-0x2b1d3a11]
  413f66:	bswap  esp
  413f68:	fs sbb edi,eax
  413f6b:	cdq    
  413f6c:	push   ds
  413f6d:	test   BYTE PTR [edi+ebx*8-0x10],0xb2
  413f72:	jnp    0x413fd7
  413f74:	f2xm1  
  413f76:	cmp    al,0x36
  413f78:	add    ah,ch
  413f7a:	push   ss
  413f7b:	divps  xmm7,XMMWORD PTR [edx-0x1499d926]
  413f82:	sti    
  413f83:	cmp    cl,BYTE PTR [edi]
  413f85:	xchg   esi,eax
  413f86:	les    edi,FWORD PTR cs:[ebx-0x27]
  413f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f8b:	dec    ebx
  413f8c:	xor    ebx,DWORD PTR [esi-0x608720af]
  413f92:	mov    ecx,0xa788d978
  413f97:	dec    ebp
  413f98:	(bad)  ss:[edx+0x4c]
  413f9c:	js     0x414003
  413f9e:	stc    
  413f9f:	mov    ebx,0x56882b16
  413fa4:	push   ss
  413fa5:	push   0x7fdc4783
  413faa:	aam    0x32
  413fac:	push   ecx
  413fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fae:	sti    
  413faf:	jmp    0x413fc1
  413fb1:	jecxz  0x413fb9
  413fb3:	mov    ah,0x59
  413fb5:	pop    es
  413fb6:	test   DWORD PTR ss:0xe83dfe73,0x56b579be
  413fc1:	ror    DWORD PTR [ecx],cl
  413fc3:	sub    ecx,esi
  413fc5:	test   DWORD PTR [edi],ecx
  413fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fc8:	sub    esi,esp
  413fca:	jno    0x41400b
  413fcc:	add    eax,0x39934a2c
  413fd1:	push   cs
  413fd2:	sub    eax,0x70826a89
  413fd7:	cs bsr edx,esp
  413fdb:	xor    BYTE PTR [ebp-0xc],0x47
  413fdf:	retf   0x587e
  413fe2:	in     al,0xa6
  413fe4:	test   al,0x7d
  413fe6:	repnz rcl BYTE PTR [eax+0x37],0x2d
  413feb:	pop    esp
  413fec:	mov    eax,0xb9bd220c
  413ff1:	call   0x33b6:0x8531c4b8
  413ff8:	mov    eax,ds:0x23874daa
  413ffd:	inc    ebp
  413ffe:	cwde   
  413fff:	and    al,0xfc
  414001:	cwde   
  414002:	jns    0x414023
  414004:	and    eax,0x8f0c6e7
  414009:	ins    DWORD PTR es:[edi],dx
  41400a:	fldcw  WORD PTR [eax]
  41400c:	in     al,dx
  41400d:	and    dl,cl
  41400f:	outs   dx,BYTE PTR ds:[esi]
  414010:	mov    esp,0xcceabb
  414015:	pop    ebp
  414016:	pop    ebx
  414017:	inc    eax
  414018:	add    esp,esp
  41401a:	call   0x1616:0xb62d8071
  414021:	and    BYTE PTR [edx+edi*4],bh
  414024:	pop    esi
  414025:	jnp    0x414072
  414027:	and    esp,edi
  414029:	cdq    
  41402a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41402b:	daa    
  41402c:	mov    BYTE PTR [ecx-0x5a],bl
  41402f:	jge    0x413fe8
  414031:	leave  
  414032:	add    WORD PTR [edi+0x1f],0xffc3
  414037:	test   BYTE PTR cs:[edi-0x33],ah
  41403b:	ins    BYTE PTR es:[edi],dx
  41403c:	(bad)  
  41403d:	mov    al,0x2c
  41403f:	sbb    BYTE PTR [eax],0x16
  414042:	xchg   BYTE PTR [eax-0x65],dh
  414045:	popf   
  414046:	das    
  414047:	(bad)  
  414048:	(bad)  
  41404a:	dec    ebp
  41404b:	je     0x4140a6
  41404d:	sbb    DWORD PTR [ebx+0x7e],edi
  414050:	shl    BYTE PTR [esi],0x26
  414053:	test   BYTE PTR [edi+esi*1-0x4ce678fd],ch
  41405a:	and    ecx,esi
  41405c:	cmp    al,0xb4
  41405e:	rol    BYTE PTR [ebx],1
  414060:	mov    dh,0xa2
  414062:	repz inc ecx
  414064:	imul   edi,DWORD PTR [eax+edi*4-0x1092f630],0x8746d644
  41406f:	cmp    ebx,DWORD PTR [ebx-0x137e9b63]
  414075:	fsubp  st(6),st
  414077:	(bad)  
  414078:	test   DWORD PTR [edi+0x44],edx
  41407b:	jo     0x414045
  41407d:	popa   
  41407e:	stos   DWORD PTR es:[edi],eax
  41407f:	sub    eax,0x2eda6831
  414084:	aas    
  414085:	inc    edi
  414086:	dec    esp
  414087:	push   0x13
  414089:	sbb    BYTE PTR [edx+0x39],bl
  41408c:	dec    edi
  41408d:	in     al,dx
  41408e:	pop    edi
  41408f:	addr16 mov ecx,0x56f67d34
  414095:	mov    al,0x54
  414097:	mov    al,ds:0xb1fddc1b
  41409c:	mov    esp,0xd42a9be0
  4140a1:	sbb    BYTE PTR [esi],ah
  4140a3:	jg     0x41409d
  4140a5:	pop    edx
  4140a6:	adc    al,0x58
  4140a8:	push   eax
  4140a9:	push   es
  4140aa:	mov    esp,0xac924d85
  4140af:	ret    
  4140b0:	mov    ds:0x67b0fc9,eax
  4140b5:	shl    BYTE PTR [ebx-0x2ac0b594],1
  4140bb:	(bad)  
  4140bc:	popf   
  4140bd:	xchg   ebx,eax
  4140be:	hlt    
  4140bf:	neg    ah
  4140c1:	or     DWORD PTR [edi],ebp
  4140c3:	pop    edx
  4140c4:	add    eax,0xc7c63ec8
  4140c9:	push   0xffffffcf
  4140cb:	cmp    dl,BYTE PTR [ebx]
  4140cd:	push   es
  4140ce:	mov    eax,0x494d02af
  4140d3:	fsubrp st(2),st
  4140d5:	das    
  4140d6:	sbb    DWORD PTR ds:0xa821c9df,edi
  4140dc:	ds ins BYTE PTR es:[edi],dx
  4140de:	shl    BYTE PTR [edx+0x65],0xdd
  4140e2:	push   ss
  4140e3:	jo     0x414106
  4140e5:	xchg   esi,eax
  4140e6:	jb     0x4140a1
  4140e8:	or     eax,DWORD PTR [eax]
  4140ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140eb:	bound  di,DWORD PTR [ebx-0x7ff4bb3f]
  4140f2:	test   BYTE PTR [edi+0x14],dh
  4140f5:	outs   dx,DWORD PTR ds:[esi]
  4140f6:	imul   ebp,DWORD PTR [edi],0xffffffcd
  4140f9:	or     ebx,0x13
  4140fc:	push   es
  4140fd:	cmp    ch,BYTE PTR [eax-0x734c1306]
  414103:	xchg   ebp,eax
  414104:	ja     0x414125
  414106:	cdq    
  414107:	cmp    DWORD PTR [edx-0x29921029],esi
  41410d:	ja     0x414124
  41410f:	xchg   cl,dh
  414111:	and    al,0x29
  414113:	cmp    ah,BYTE PTR [esi-0x19769543]
  414119:	dec    ebx
  41411a:	pop    ds
  41411b:	mov    ah,0x67
  41411d:	jmp    0x414149
  41411f:	rcr    DWORD PTR [ecx+0x62197934],0x4
  414126:	repnz and al,0xb9
  414129:	mov    bh,0x9
  41412b:	sub    BYTE PTR [edi+ebp*4],cl
  41412e:	jne    0x4140e6
  414130:	dec    esi
  414131:	pop    ecx
  414132:	sbb    eax,0xe339b76a
  414137:	push   ebx
  414138:	sub    al,0x6a
  41413a:	mov    al,0x9a
  41413c:	fucomip st,st(6)
  41413e:	push   ebp
  41413f:	add    BYTE PTR [esi+0x4a],dh
  414142:	adc    ch,BYTE PTR [ebx]
  414144:	pushf  
  414145:	and    BYTE PTR [edx+edi*1+0x610addc8],cl
  41414c:	push   cs
  41414d:	retf   0xabb0
  414150:	sbb    eax,0xc24ab6bb
  414155:	xor    esp,DWORD PTR [ecx-0x69]
  414158:	inc    ecx
  414159:	ds pop eax
  41415b:	mov    edi,0x9103bbe6
  414160:	jecxz  0x414131
  414162:	mov    dh,0xad
  414164:	sahf   
  414165:	(bad)  
  414166:	aad    0xd1
  414168:	repnz and eax,0xa0b4a93
  41416e:	loopne 0x4141de
  414170:	adc    al,0x53
  414172:	outs   dx,DWORD PTR ds:[esi]
  414173:	add    al,0xd4
  414175:	fucom  st(4)
  414177:	dec    ecx
  414178:	sbb    eax,0xec806a83
  41417d:	scas   eax,DWORD PTR es:[edi]
  41417e:	mov    ah,0x6b
  414180:	dec    esp
  414181:	pusha  
  414182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414183:	cmp    dl,BYTE PTR [eax-0x54]
  414186:	sbb    bl,BYTE PTR [esi]
  414188:	or     eax,0x105f54f1
  41418d:	jmp    0xf55b2d80
  414192:	mov    cl,0x9d
  414194:	popa   
  414195:	outs   dx,BYTE PTR ds:[esi]
  414196:	dec    ebx
  414197:	ret    0x5fe9
  41419a:	scas   eax,DWORD PTR es:[edi]
  41419b:	retf   0x431d
  41419e:	dec    edi
  41419f:	lds    ebx,FWORD PTR [edi+0x6]
  4141a2:	add    BYTE PTR [edi],dh
  4141a4:	xchg   BYTE PTR [esp+ebp*8-0x168be1c0],ch
  4141ab:	mov    bh,0x23
  4141ad:	and    al,0xa0
  4141af:	sahf   
  4141b0:	popa   
  4141b1:	xor    edx,DWORD PTR [edi+0x253d6bbc]
  4141b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141b8:	sub    BYTE PTR [ebx-0x78fd2a49],bl
  4141be:	or     edi,DWORD PTR [esi+0x14]
  4141c1:	(bad)  
  4141c3:	call   0x1b1c:0x4f6758de
  4141ca:	mov    esp,0xa9c140d0
  4141cf:	dec    ecx
  4141d0:	out    0x5c,eax
  4141d2:	mov    ds:0x5a8cb457,al
  4141d7:	outs   dx,BYTE PTR ds:[esi]
  4141d8:	sbb    al,0x5d
  4141da:	test   BYTE PTR [eax+0x72],ch
  4141dd:	lahf   
  4141de:	aam    0x8f
  4141e0:	aas    
  4141e1:	jle    0x4141c6
  4141e3:	sbb    eax,0xbad0bf3d
  4141e8:	popa   
  4141e9:	xor    DWORD PTR [esi+eiz*8-0x3a],0x390c870b
  4141f1:	aas    
  4141f2:	cli    
  4141f3:	sbb    edi,ebp
  4141f5:	mov    al,ds:0x6b8c3428
  4141fa:	outs   dx,BYTE PTR ds:[esi]
  4141fb:	mov    ch,0x27
  4141fd:	ss pusha 
  4141ff:	mul    DWORD PTR [edi+0x32]
  414202:	rcl    DWORD PTR [ecx+0x1d],cl
  414205:	test   BYTE PTR [esi+0x4e],bh
  414208:	(bad)  [ebx+0x39bd0860]
  41420e:	cmp    BYTE PTR [edi],0x6e
  414211:	fidiv  WORD PTR ds:0x5d31fe36
  414217:	imul   ebp,DWORD PTR [ebp-0x79],0x2a50b674
  41421e:	add    ecx,eax
  414220:	sbb    dh,BYTE PTR ds:0x241d7894
  414226:	cld    
  414227:	jle    0x4141b8
  414229:	add    eax,0x9295f06e
  41422e:	hlt    
  41422f:	cmp    DWORD PTR [eax+0x20],ebp
  414232:	pop    esi
  414233:	inc    ebx
  414234:	cli    
  414235:	push   ds
  414236:	jno    0x4141e6
  414238:	push   0x722babc8
  41423d:	xchg   BYTE PTR [ecx+0x7],dh
  414240:	jb     0x4141e0
  414242:	icebp  
  414243:	js     0x4141c9
  414245:	(bad)  
  414246:	sbb    eax,0x79daf7f1
  41424b:	iret   
  41424c:	jle    0x414271
  41424e:	jmp    0xc278149c
  414253:	arpl   WORD PTR [edi-0x1c99b955],bx
  414259:	mov    edi,0x2fb6dc91
  41425e:	sub    al,0x41
  414260:	sahf   
  414261:	(bad)  
  414262:	mov    dl,0x25
  414264:	push   0x4b
  414266:	sub    DWORD PTR [ebp+ecx*4-0x6fb7f97c],0x6e80344d
  414271:	mov    ah,dl
  414273:	dec    ebp
  414274:	ficomp WORD PTR [edi-0x45]
  414277:	shr    ebp,0xa2
  41427a:	ret    0x9002
  41427d:	ficom  WORD PTR [eax-0x79]
  414280:	test   edi,edi
  414282:	push   es
  414283:	aam    0xd3
  414285:	(bad)  
  414287:	cld    
  414288:	pop    esi
  414289:	inc    ecx
  41428a:	in     eax,0x47
  41428c:	jmp    0x617f:0x78ca0acc
  414293:	aaa    
  414294:	sub    DWORD PTR [ecx+0x192ff67f],ebp
  41429a:	test   esi,edi
  41429c:	ins    BYTE PTR es:[edi],dx
  41429d:	sub    BYTE PTR [edi-0x5b],bh
  4142a0:	pop    esi
  4142a1:	fadd   DWORD PTR [eax]
  4142a3:	shr    BYTE PTR [ebx],0x38
  4142a6:	pushf  
  4142a7:	aad    0xf3
  4142a9:	test   BYTE PTR [ebx-0x26],bh
  4142ac:	add    cl,BYTE PTR [ebx+0x5f]
  4142af:	mov    bl,0xd3
  4142b1:	dec    ecx
  4142b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142b3:	sbb    BYTE PTR ds:0x6f38a7f4,al
  4142b9:	aaa    
  4142ba:	sub    BYTE PTR [eax],al
  4142bc:	popf   
  4142bd:	jg     0x41425c
  4142bf:	cmp    ebx,DWORD PTR [ecx]
  4142c1:	xchg   ebx,eax
  4142c2:	xchg   edi,eax
  4142c3:	out    0xd4,al
  4142c5:	arpl   WORD PTR [ebx],bx
  4142c7:	push   es
  4142c8:	ret    
  4142c9:	mov    ah,0x46
  4142cb:	jge    0x4142a6
  4142cd:	jle    0x4142db
  4142cf:	sub    BYTE PTR [edi],cl
  4142d1:	lahf   
  4142d2:	xchg   edi,eax
  4142d3:	cmp    DWORD PTR [eax-0xff09575],ebx
  4142d9:	loope  0x4142df
  4142db:	mov    bh,0xc3
  4142dd:	add    bl,BYTE PTR [edi-0x6]
  4142e0:	loopne 0x4142ef
  4142e2:	add    BYTE PTR [edx-0x6a],bh
  4142e5:	mov    bh,cl
  4142e7:	fld    QWORD PTR [ebp-0x18611875]
  4142ed:	pop    esp
  4142ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ef:	xchg   esp,eax
  4142f0:	push   cs
  4142f1:	int    0xef
  4142f3:	imul   esi,DWORD PTR [ebp+0xe5cba24],0xd553ca86
  4142fd:	and    cl,al
  4142ff:	jl     0x414353
  414301:	test   DWORD PTR [ecx-0x6dd8e5c5],0x7293f2c
  41430b:	punpckhdq mm0,QWORD PTR [eax]
  41430e:	hlt    
  41430f:	xlat   BYTE PTR ds:[ebx]
  414310:	mov    bh,0x9b
  414312:	bound  ebp,QWORD PTR [ebx+ebx*8-0x5a]
  414316:	pop    eax
  414317:	xor    esp,DWORD PTR [ecx+0x68f51cad]
  41431d:	cld    
  41431e:	out    dx,al
  41431f:	in     al,dx
  414320:	mov    ecx,0xe9f7ab7f
  414325:	push   0x47c66c9b
  41432a:	test   ecx,edx
  41432c:	sar    DWORD PTR [esi+0x45a5fbd0],0x4f
  414333:	daa    
  414334:	xor    al,0x79
  414336:	mov    ecx,0xc559e2b5
  41433b:	mov    ch,0xdb
  41433d:	sbb    cl,dl
  41433f:	in     al,dx
  414340:	aaa    
  414341:	dec    esi
  414342:	loop   0x4142f7
  414344:	test   BYTE PTR [ebx-0x382d42e1],cl
  41434a:	push   edx
  41434b:	pop    es
  41434c:	test   al,0x7a
  41434e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41434f:	mov    ds:0xb5c9749a,eax
  414354:	pop    edi
  414355:	aad    0x97
  414357:	into   
  414358:	out    dx,al
  414359:	rol    DWORD PTR [ebp+0x37e412ef],cl
  41435f:	mov    ds:0x48b11131,eax
  414364:	pop    es
  414365:	mov    ecx,0x4da3c69d
  41436a:	and    dh,al
  41436c:	mov    bh,0xae
  41436e:	pop    edi
  41436f:	ret    0xd8c6
  414372:	mov    bh,0x5a
  414374:	push   eax
  414375:	loop   0x41434e
  414377:	mov    ds:0xd2651f11,eax
  41437c:	pop    ds
  41437d:	in     eax,0xd0
  41437f:	ror    DWORD PTR [edi],1
  414381:	and    eax,0x202a3f1e
  414386:	inc    edi
  414387:	fsub   DWORD PTR es:[eax+0x1]
  41438b:	jp     0x41439a
  41438d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41438e:	adc    al,bl
  414390:	mov    edx,0x129b2e0e
  414395:	xlat   BYTE PTR ds:[ebx]
  414396:	lock push 0x50
  414399:	mov    ds:0xe0623ea9,eax
  41439e:	pusha  
  41439f:	push   edi
  4143a0:	cli    
  4143a1:	sbb    BYTE PTR [ecx-0x7c6215e],bh
  4143a7:	gs es xor al,0xe3
  4143ab:	ror    DWORD PTR [edi],1
  4143ad:	fisub  WORD PTR [ebx]
  4143af:	mov    ebp,0x7b189752
  4143b4:	mov    ds:0xda4c6714,eax
  4143b9:	mul    esp
  4143bb:	sahf   
  4143bc:	call   0x35beb00e
  4143c1:	jle    0x4143fe
  4143c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c4:	test   DWORD PTR [esi-0x60],esi
  4143c7:	jg     0x414361
  4143c9:	(bad)  
  4143ca:	sub    al,0x6b
  4143cc:	or     bl,dl
  4143ce:	loopne 0x41441c
  4143d0:	mov    ds:0xd4183838,ax
  4143d6:	jecxz  0x414437
  4143d8:	add    eax,0xa5603ff2
  4143dd:	ficom  WORD PTR [esi+ebx*4]
  4143e0:	mov    al,ds:0x68db6bc7
  4143e5:	ins    BYTE PTR es:[edi],dx
  4143e6:	xchg   ebp,eax
  4143e7:	jge    0x41440a
  4143e9:	stc    
  4143ea:	fidivr WORD PTR [ebp+0x57]
  4143ed:	cmc    
  4143ee:	push   0xa72c794a
  4143f3:	xchg   edi,eax
  4143f4:	aam    0x6d
  4143f6:	sub    edi,DWORD PTR [esp+esi*4+0xb]
  4143fa:	add    DWORD PTR [ebx-0x1c],0xffffffea
  4143fe:	pop    ss
  4143ff:	push   ds
  414400:	repz mov edx,0xdfa101ac
  414406:	cmp    dh,BYTE PTR [ecx+0x49b0883]
  41440c:	fcom   DWORD PTR [edi]
  41440e:	or     BYTE PTR [esi-0x66],0xfb
  414412:	xor    DWORD PTR [edi],0xffffffde
  414415:	int3   
  414416:	je     0x414443
  414418:	add    DWORD PTR [ebp-0x4a91ad4d],esp
  41441e:	pop    edx
  41441f:	ret    
  414420:	push   eax
  414421:	adc    edx,ebp
  414423:	push   0xb6e6910f
  414428:	or     al,0x45
  41442a:	pop    esi
  41442b:	les    edx,FWORD PTR [ebx+0x4c]
  41442e:	add    eax,DWORD PTR [eax-0x26143b8d]
  414434:	ins    BYTE PTR es:[edi],dx
  414435:	shl    ecx,cl
  414437:	mov    bl,0x83
  414439:	push   cs
  41443a:	and    dh,BYTE PTR [ecx+0x5c974bbd]
  414440:	push   cs
  414441:	lea    ebp,ds:0xe0ce31d3
  414447:	jbe    0x414465
  414449:	mov    dh,0xa3
  41444b:	cmp    al,0xfb
  41444d:	add    edx,DWORD PTR [bp+si+0x5]
  414451:	jmp    DWORD PTR [ebx+0x4e24e781]
  414457:	mov    bl,0x34
  414459:	inc    eax
  41445a:	sbb    bh,BYTE PTR [ecx+0x32]
  41445d:	inc    eax
  41445e:	mov    edi,0x9c5dee69
  414463:	es sub bl,cl
  414466:	lock int 0xda
  414469:	into   
  41446a:	mov    BYTE PTR [edx-0x3c81ac50],dl
  414470:	push   0x5fe0fd34
  414475:	aam    0xe4
  414477:	inc    ecx
  414478:	addr16 in al,0xa
  41447b:	out    0x8f,al
  41447d:	aaa    
  41447e:	mov    bl,0x9e
  414480:	mov    ds:0xeea409ab,eax
  414485:	popf   
  414486:	xchg   edx,eax
  414487:	mov    ah,0xb9
  414489:	mov    al,ds:0xa05edcba
  41448e:	out    dx,eax
  41448f:	and    cl,0xb2
  414492:	iret   
  414493:	jge    0x4144c0
  414495:	mov    bh,0x74
  414497:	das    
  414498:	repz jno 0x41450a
  41449b:	hlt    
  41449c:	dec    esp
  41449d:	xor    al,0x3e
  41449f:	verr   sp
  4144a2:	mov    BYTE PTR [edi+0xfaafc0b],bl
  4144a8:	lods   eax,DWORD PTR ds:[esi]
  4144a9:	das    
  4144aa:	xchg   edi,eax
  4144ab:	or     DWORD PTR [edx],esp
  4144ad:	dec    ebp
  4144ae:	rcl    BYTE PTR [esp+esi*8+0x3e03d085],cl
  4144b5:	jae    0x414465
  4144b7:	test   DWORD PTR [esi-0x22702d00],0x21d4fb02
  4144c1:	aad    0x7f
  4144c3:	adc    ecx,DWORD PTR [edi]
  4144c5:	call   0x40ba:0x76a8ed2c
  4144cc:	xor    ah,BYTE PTR [esi]
  4144ce:	mov    dh,BYTE PTR [edi+0x851929]
  4144d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144d5:	mov    ds:0xa943b438,eax
  4144da:	xchg   esi,eax
  4144db:	shr    BYTE PTR [esi-0x5c],cl
  4144de:	mov    ah,0x9
  4144e0:	leave  
  4144e1:	mov    ebx,0x326f0118
  4144e6:	cmc    
  4144e7:	inc    ebp
  4144e8:	add    eax,0x70d374d5
  4144ed:	pusha  
  4144ee:	ja     0x414493
  4144f0:	retf   
  4144f1:	aam    0x85
  4144f3:	mov    eax,0x92c1574
  4144f8:	test   BYTE PTR [esi-0x74],0x48
  4144fc:	adc    ebx,DWORD PTR [edi+0x46ffe6c1]
  414502:	(bad)  
  414503:	xchg   edx,eax
  414504:	dec    ecx
  414505:	scas   eax,DWORD PTR es:[edi]
  414506:	jo     0x41456a
  414508:	xor    ebx,DWORD PTR [ecx-0x21]
  41450b:	xor    DWORD PTR [esi+0x1f],edx
  41450e:	pop    ebp
  41450f:	mov    al,0xe
  414511:	inc    esi
  414512:	(bad)  
  414513:	jmp    0x41451e
  414515:	ss nop
  414517:	mov    ds:0xeed06c6d,al
  41451c:	and    eax,0x5d0b908d
  414521:	lock inc esp
  414523:	inc    ecx
  414524:	xchg   esi,eax
  414525:	add    edx,esi
  414527:	push   es
  414528:	and    eax,DWORD PTR [eax+eax*1+0x5ceacb65]
  41452f:	add    ah,BYTE PTR [esi]
  414531:	call   0x5d3d:0x9f498c4
  414538:	add    eax,DWORD PTR [esi]
  41453a:	mov    ebx,0xe668e88
  41453f:	aaa    
  414540:	adc    BYTE PTR [ecx+0xc],dh
  414543:	mov    WORD PTR [ebx-0x31934f75],cs
  414549:	pusha  
  41454a:	mov    ds:0x40e6ef3e,al
  41454f:	mov    esp,0x5c656e8e
  414554:	arpl   WORD PTR ds:0x421fe4a8,si
  41455a:	ret    0x4f5e
  41455d:	push   esi
  41455e:	mov    ebp,0xa83592f8
  414563:	sub    DWORD PTR [esi],ebp
  414565:	and    bh,BYTE PTR [ebp+esi*2-0x6a]
  414569:	pop    ss
  41456a:	mov    esi,edx
  41456c:	or     DWORD PTR cs:[ecx],ebp
  41456f:	imul   esp,DWORD PTR [ecx-0x35c8bf8d],0x1c
  414576:	sbb    eax,0x252a34b6
  41457b:	cld    
  41457c:	es push edi
  41457e:	sub    al,0xaf
  414580:	mov    ch,0x18
  414582:	imul   edx,DWORD PTR [eax],0x7b31b404
  414588:	adc    dl,BYTE PTR [edx-0x58]
  41458b:	ds dec esp
  41458d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41458e:	cmp    al,0x63
  414590:	nop
  414591:	outs   dx,DWORD PTR ds:[esi]
  414592:	lahf   
  414593:	xor    al,0x35
  414595:	ror    esi,1
  414597:	mov    eax,0xc62a695b
  41459c:	xchg   ecx,eax
  41459d:	jno    0x4145ba
  41459f:	dec    ebp
  4145a0:	xor    bl,dh
  4145a2:	push   ebp
  4145a3:	xor    DWORD PTR [eax-0x33],edx
  4145a6:	mov    ah,0x12
  4145a8:	mov    ds:0x82db193d,al
  4145ad:	outs   dx,BYTE PTR ds:[esi]
  4145ae:	repz xor dl,BYTE PTR cs:[edi]
  4145b2:	leave  
  4145b3:	outs   dx,BYTE PTR ds:[esi]
  4145b4:	pop    ebp
  4145b5:	sbb    esp,DWORD PTR [ebp-0x6cf7f6c0]
  4145bb:	sub    DWORD PTR [ebx+0x14],ebp
  4145be:	cld    
  4145bf:	(bad)  
  4145c0:	add    al,0x5a
  4145c2:	sub    al,0x86
  4145c4:	add    ch,BYTE PTR [ebx]
  4145c6:	mov    esp,0xfcbe309f
  4145cb:	mov    BYTE PTR [eax-0x17],dh
  4145ce:	fldcw  WORD PTR [ecx]
  4145d0:	ficomp WORD PTR [edi+edx*4+0x3e942219]
  4145d7:	jecxz  0x4145c6
  4145d9:	(bad)
  4145dc:	xchg   DWORD PTR [ebp+0x61312b61],esp
  4145e2:	das    
  4145e3:	enter  0x3003,0xed
  4145e7:	call   0xc262669b
  4145ec:	jp     0x4145cd
  4145ee:	sar    edx,cl
  4145f0:	inc    esi
  4145f1:	pusha  
  4145f2:	dec    ebp
  4145f3:	inc    edi
  4145f4:	(bad)  
  4145f5:	in     eax,dx
  4145f6:	pushf  
  4145f7:	inc    ecx
  4145f8:	out    0x6e,eax
  4145fa:	dec    esp
  4145fb:	fsubr  st(0),st
  4145fd:	addr16 int 0x4c
  414600:	adc    BYTE PTR [ebp-0xa],0x28
  414604:	add    eax,0x201c66f
  414609:	jecxz  0x4145e3
  41460b:	aam    0x10
  41460d:	sub    al,0x40
  41460f:	aas    
  414610:	mov    BYTE PTR [edi],dh
  414612:	icebp  
  414613:	retf   
  414614:	iret   
  414615:	pop    ss
  414616:	dec    edx
  414617:	retf   
  414618:	cmc    
  414619:	mov    edx,0x6040166c
  41461e:	lahf   
  41461f:	scas   eax,DWORD PTR es:[edi]
  414620:	ror    BYTE PTR [ebp+0x1a],0x99
  414624:	aad    0xbf
  414626:	dec    ebx
  414627:	scas   al,BYTE PTR es:[edi]
  414628:	test   eax,0xa0a25677
  41462d:	sahf   
  41462e:	test   DWORD PTR [esi+0x5a],ebx
  414631:	inc    edi
  414632:	push   cs
  414633:	xor    esi,DWORD PTR [edi-0x6e]
  414636:	fcomp  DWORD PTR [eax-0x3cd01811]
  41463c:	jmp    0x850d:0xd82ba233
  414643:	xchg   esp,eax
  414644:	nop
  414645:	and    eax,ebx
  414647:	xor    al,0xbc
  414649:	clc    
  41464a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41464b:	js     0x41464d
  41464d:	mov    al,dh
  41464f:	imul   esp,DWORD PTR [edx],0xb3336cdf
  414655:	mov    eax,ds:0x1bb66a20
  41465a:	sbb    dl,BYTE PTR [edx-0x11]
  41465d:	or     al,0x2b
  41465f:	jno    0x414618
  414661:	pop    esp
  414662:	retf   
  414663:	fadd   QWORD PTR [edx+eax*8+0x70]
  414667:	es ins BYTE PTR es:[edi],dx
  414669:	adc    al,0xad
  41466b:	(bad)  
  41466c:	loopne 0x414621
  41466e:	add    eax,0xccf5408c
  414673:	cdq    
  414674:	add    eax,DWORD PTR [ecx]
  414676:	(bad)  
  414677:	cmp    ebx,DWORD PTR [ebx]
  414679:	jmp    0x10d6e9fc
  41467e:	inc    ebx
  41467f:	fsub   DWORD PTR [ebp+0x49f4ae5b]
  414685:	mov    BYTE PTR ds:0x2005ddfe,al
  41468b:	sub    esi,DWORD PTR [edi]
  41468d:	add    DWORD PTR [eax-0x17bb08e8],0xffffffda
  414694:	fdiv   st,st(0)
  414696:	mov    BYTE PTR [esi+0x6dc1ebb],ah
  41469c:	lods   al,BYTE PTR ds:[esi]
  41469d:	call   0x86f2:0xbad6b4d3
  4146a4:	stos   DWORD PTR es:[edi],eax
  4146a5:	and    BYTE PTR [ecx+0x77595163],ah
  4146ab:	adc    eax,0x749b287c
  4146b0:	dec    esi
  4146b1:	jnp    0x4146c9
  4146b3:	imul   ebp,DWORD PTR [esi-0x5c],0xe0412e5c
  4146ba:	jge    0x414655
  4146bc:	or     dl,al
  4146be:	dec    BYTE PTR [ecx]
  4146c0:	inc    ebx
  4146c1:	sub    dh,bh
  4146c3:	push   0x3a3a29d7
  4146c8:	jb     0x414739
  4146ca:	xchg   DWORD PTR [edx+0x59517a02],ebx
  4146d0:	push   0x2547a311
  4146d5:	and    ch,BYTE PTR [ecx+ebx*8]
  4146d8:	lahf   
  4146d9:	fistp  WORD PTR [ebx]
  4146db:	adc    eax,0x2e08284e
  4146e0:	mov    ebx,0x621d1fa
  4146e5:	pop    eax
  4146e6:	xchg   DWORD PTR [edi],eax
  4146e8:	imul   BYTE PTR [ebp-0x17379036]
  4146ee:	add    cl,BYTE PTR [edx-0x3]
  4146f1:	repz cmp DWORD PTR [ebx],esp
  4146f4:	outs   dx,DWORD PTR ds:[si]
  4146f6:	add    esp,DWORD PTR [eax]
  4146f8:	jmp    0xa8517234
  4146fd:	xchg   edx,eax
  4146fe:	or     eax,0xde21d46c
  414703:	in     al,0x25
  414705:	xchg   esi,eax
  414706:	cs call 0x9857:0x4fdd686b
  41470e:	lock add ch,0x67
  414712:	lock or DWORD PTR [ebp-0x380cb434],esi
  414719:	push   0xde524706
  41471e:	or     DWORD PTR [ebx],edx
  414720:	fisttp WORD PTR [ecx+0x68b53ae8]
  414726:	mov    ds:0xeb741bd5,eax
  41472b:	mov    dl,0x64
  41472d:	push   cs
  41472e:	int    0xc1
  414730:	das    
  414731:	sahf   
  414732:	adc    eax,DWORD PTR [esi+ebp*8]
  414735:	jne    0x414756
  414737:	aam    0x22
  414739:	addr16 mov ecx,0xb189c1d5
  41473f:	out    0x1a,al
  414741:	sbb    bh,BYTE PTR [ebx+0x75ce06f3]
  414747:	in     eax,0x29
  414749:	xchg   ebx,eax
  41474a:	and    bh,BYTE PTR [esi-0x5e]
  41474d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41474e:	sbb    eax,esp
  414750:	je     0x4147ab
  414752:	push   edx
  414753:	mov    ds:0x645bf635,al
  414758:	push   eax
  414759:	pop    esi
  41475a:	add    al,0x28
  41475c:	xor    eax,0xd5100019
  414761:	fldpi  
  414763:	or     al,0x22
  414765:	sub    eax,DWORD PTR [ebp-0x3142fc75]
  41476b:	cmp    esi,DWORD PTR [ebp+0x725db80a]
  414771:	dec    esp
  414772:	mov    DWORD PTR [edx],0x79424688
  414778:	dec    esi
  414779:	inc    eax
  41477a:	sbb    esi,ecx
  41477c:	mov    esp,0xc647f2a2
  414781:	push   edx
  414782:	cmp    DWORD PTR [edx+edi*1],ebx
  414785:	inc    BYTE PTR [edx+0x6e7923be]
  41478b:	mov    ebp,0xab32cc28
  414790:	ss mov ebx,0xd2114efa
  414796:	out    dx,eax
  414797:	iret   
  414798:	push   eax
  414799:	or     esp,edi
  41479b:	int    0x7
  41479d:	scas   eax,DWORD PTR es:[edi]
  41479e:	stos   BYTE PTR es:[edi],al
  41479f:	add    BYTE PTR [ebx+0x4f8c2ed7],cl
  4147a5:	lea    eax,[edx+0x5ad67607]
  4147ab:	loop   0x414740
  4147ad:	sub    eax,0x19e387
  4147b2:	ret    
  4147b3:	sysret 
  4147b5:	frstor [edx-0x53c7320c]
  4147bb:	xor    BYTE PTR [esp+eiz*4],ch
  4147be:	add    dl,BYTE PTR [esi+0x27]
  4147c1:	xchg   edx,eax
  4147c2:	lds    edi,FWORD PTR [edi]
  4147c4:	cmp    eax,0x35912397
  4147c9:	fnstcw WORD PTR [edx]
  4147cb:	xor    eax,DWORD PTR [edx-0x4e]
  4147ce:	fwait
  4147cf:	jle    0x41484e
  4147d1:	clc    
  4147d2:	add    BYTE PTR [esi],cl
  4147d4:	xor    DWORD PTR ss:[ebp+0x68dfcef1],ebx
  4147db:	loop   0x414819
  4147dd:	pop    DWORD PTR [edx-0x36]
  4147e0:	nop
  4147e1:	arpl   di,cx
  4147e3:	add    al,0x43
  4147e5:	outs   dx,BYTE PTR ds:[esi]
  4147e6:	mov    esi,0x68fafd8d
  4147eb:	pop    ecx
  4147ec:	pop    eax
  4147ed:	sub    bh,BYTE PTR [eax]
  4147ef:	test   DWORD PTR [eax-0x29da805a],0xada7341e
  4147f9:	dec    esp
  4147fa:	shl    DWORD PTR [ebp-0x5c],1
  4147fd:	jns    0x414789
  4147ff:	icebp  
  414800:	ins    BYTE PTR es:[edi],dx
  414801:	fild   QWORD PTR ds:0xa8729288
  414807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414808:	shl    BYTE PTR [edx-0x67],1
  41480b:	(bad)  
  41480c:	in     al,dx
  41480d:	fisub  WORD PTR [ebp+0x4a]
  414810:	or     al,0x87
  414812:	xchg   esi,eax
  414813:	test   esi,edi
  414815:	jecxz  0x414849
  414817:	adc    dl,al
  414819:	fiadd  DWORD PTR [edi]
  41481b:	test   DWORD PTR [esi],eax
  41481d:	aam    0x9a
  41481f:	enter  0x99a2,0xc7
  414823:	neg    esp
  414825:	mov    ebp,0xf0340913
  41482a:	in     eax,dx
  41482b:	adc    al,0x6
  41482d:	sar    ah,cl
  41482f:	add    al,0x18
  414831:	push   edi
  414832:	mov    gs,WORD PTR [esi]
  414834:	test   al,0xf2
  414836:	div    DWORD PTR [ecx+eax*8]
  414839:	sub    dl,bl
  41483b:	and    ah,BYTE PTR [ebp+0x27]
  41483e:	in     al,dx
  41483f:	sub    al,0x3e
  414841:	sti    
  414842:	inc    ebp
  414843:	mov    edx,0x42a670c7
  414848:	add    BYTE PTR [edx+0xf124357],ah
  41484e:	icebp  
  41484f:	out    dx,eax
  414850:	xchg   bl,dh
  414852:	fnstcw WORD PTR [esi-0x2d94b318]
  414858:	push   edx
  414859:	mov    edi,0x684cdcc3
  41485e:	gs xchg ebp,eax
  414860:	push   0x12
  414862:	lahf   
  414863:	add    DWORD PTR [edi],ebp
  414865:	mov    dl,0x4a
  414867:	cli    
  414868:	neg    BYTE PTR [ebx+eax*4-0x31]
  41486c:	push   0x38
  41486e:	dec    edi
  41486f:	mov    edx,0x2ddf92f5
  414874:	ret    0x55cc
  414877:	sub    eax,DWORD PTR [esi]
  414879:	pop    ss
  41487a:	mov    ?,WORD PTR [ecx-0x45]
  41487d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41487e:	pop    eax
  41487f:	iret   
  414880:	cdq    
  414881:	pop    ss
  414882:	push   ecx
  414883:	iret   
  414884:	mov    esp,0x7f5a57c
  414889:	repnz les ebp,FWORD PTR ds:0xf7c85f73
  414890:	rcr    DWORD PTR [edi],cl
  414892:	ja     0x414890
  414894:	fidivr DWORD PTR [eax+0x1f4a2802]
  41489a:	loopne 0x414876
  41489c:	imul   edx,DWORD PTR ss:[ebx+0x70],0x5c
  4148a1:	lods   eax,DWORD PTR ds:[esi]
  4148a2:	jmp    0x414917
  4148a4:	jmp    0x960:0x8597b82b
  4148ab:	cdq    
  4148ac:	push   edx
  4148ad:	imul   eax,DWORD PTR [esp+edx*8+0x4367754f],0x22
  4148b5:	push   cs
  4148b6:	fucom  st(5)
  4148b8:	dec    ecx
  4148b9:	jnp    0x41491b
  4148bb:	or     DWORD PTR [edx+esi*2],edx
  4148be:	scas   eax,DWORD PTR es:[edi]
  4148bf:	fs je  0x414861
  4148c2:	loopne 0x414869
  4148c4:	hlt    
  4148c5:	mov    eax,ds:0x90574d0a
  4148ca:	jo     0x4148b8
  4148cc:	jmp    0x414933
  4148ce:	jae    0x41488e
  4148d0:	jle    0x414902
  4148d2:	out    dx,al
  4148d3:	sub    DWORD PTR [edi+eax*1+0x480748d4],edi
  4148da:	jns    0x41489d
  4148dc:	push   edx
  4148dd:	shl    BYTE PTR [edi],cl
  4148df:	pop    DWORD PTR [edx+esi*2-0x319451d8]
  4148e6:	stc    
  4148e7:	shl    DWORD PTR [edi+0x5d],0x76
  4148eb:	cmp    al,0xfc
  4148ed:	adc    ah,BYTE PTR [edi]
  4148ef:	or     BYTE PTR [eax-0x61],dh
  4148f2:	div    BYTE PTR [ebx+ebx*2]
  4148f5:	es ret 0x744f
  4148f9:	(bad)  
  4148fa:	arpl   WORD PTR [edx-0x3238d9ee],bx
  414900:	dec    esp
  414901:	add    bh,BYTE PTR [edx-0x592954fe]
  414907:	add    al,0xc5
  414909:	jecxz  0x414913
  41490b:	jns    0x4148f6
  41490d:	mov    bh,0x42
  41490f:	inc    eax
  414910:	mov    bh,0x85
  414913:	cli    
  414914:	mov    al,ds:0x7498435e
  414919:	retf   0x6f8a
  41491c:	pop    ss
  41491d:	(bad)  
  41491e:	outs   dx,BYTE PTR ds:[esi]
  41491f:	adc    DWORD PTR [eax],esi
  414921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414922:	and    DWORD PTR ds:0x5cdc4d9d,edi
  414928:	ja     0x414921
  41492a:	jne    0x41492c
  41492c:	xacquire xchg BYTE PTR [eax-0x47e6d6b],bh
  414933:	arpl   WORD PTR [edi-0x25],si
  414936:	pop    ss
  414937:	lea    esi,[edx+0x33]
  41493a:	cmp    al,0xa
  41493c:	rcl    BYTE PTR [edi+0x7],0xb4
  414940:	xchg   edx,eax
  414941:	xchg   ecx,eax
  414942:	push   esi
  414943:	scas   eax,DWORD PTR es:[edi]
  414944:	sbb    DWORD PTR es:[edx],edi
  414947:	adc    DWORD PTR [edx-0x643c432],esi
  41494d:	xor    dh,0xba
  414950:	cli    
  414951:	push   cs
  414952:	std    
  414953:	test   eax,0xcac6e7d
  414958:	outs   dx,BYTE PTR ds:[esi]
  414959:	push   ds
  41495a:	and    al,0x4d
  41495c:	mov    al,ds:0xc56e5b89
  414961:	mov    ebp,DWORD PTR es:[edi+0x2e]
  414965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414966:	les    eax,FWORD PTR [edi]
  414968:	adc    DWORD PTR [ebx],esi
  41496a:	ja     0x4148f6
  41496c:	pop    esp
  41496d:	ds clc 
  41496f:	in     al,dx
  414970:	jge    0x4149f1
  414972:	push   es
  414973:	adc    DWORD PTR [ecx],edi
  414975:	rol    BYTE PTR ds:0x34597f45,0x4e
  41497c:	pop    ebx
  41497d:	test   BYTE PTR [ebx+0x3c94d59c],0xbf
  414984:	mov    ds:0x9709b8d8,eax
  414989:	sbb    ch,BYTE PTR [ebp-0x4d]
  41498c:	jne    0x41492d
  41498e:	pop    edx
  41498f:	xchg   ecx,eax
  414990:	sti    
  414991:	pop    ebp
  414992:	push   ebx
  414993:	ja     0x414a0d
  414995:	jmp    0x295b:0xa9e66085
  41499c:	sbb    bl,ch
  41499e:	pop    ebx
  41499f:	aas    
  4149a0:	mov    edx,0x708376db
  4149a5:	adc    eax,0x49e8b955
  4149aa:	xor    DWORD PTR [esi],esp
  4149ac:	fmul   st,st(4)
  4149ae:	push   0xdf7bffba
  4149b3:	je     0x414a13
  4149b5:	cdq    
  4149b6:	das    
  4149b7:	addr16 retf 0x1e30
  4149bb:	push   ds
  4149bc:	stos   DWORD PTR es:[edi],eax
  4149bd:	in     al,0x41
  4149bf:	adc    al,bl
  4149c1:	cmp    BYTE PTR [esi-0x4cdb27ec],0xc0
  4149c8:	pop    ss
  4149c9:	enter  0xdb38,0x67
  4149cd:	mov    esi,0xbb8273fa
  4149d2:	cs mov edx,0xd86756fb
  4149d8:	jmp    0x414a05
  4149da:	lds    ecx,FWORD PTR [edx+0x31]
  4149dd:	jmp    0x1875:0x735eed22
  4149e4:	lock aas 
  4149e6:	or     ch,BYTE PTR [ebx]
  4149e8:	cwde   
  4149e9:	out    dx,eax
  4149ea:	push   0x1f22680a
  4149ef:	inc    esp
  4149f0:	lods   eax,DWORD PTR ds:[esi]
  4149f1:	sub    al,0x3
  4149f3:	adc    DWORD PTR [ebp+ebp*1+0x27],esi
  4149f7:	push   edi
  4149f8:	sbb    eax,0x75fc8f39
  4149fd:	cmp    eax,0xa7e7bebe
  414a02:	bound  esp,QWORD PTR [eax+0x61]
  414a05:	clc    
  414a06:	mov    cs:0xf741af,al
  414a0c:	pop    edx
  414a0d:	or     eax,0xd5b14228
  414a12:	push   0x77f6adb2
  414a17:	jns    0x4149df
  414a19:	inc    ebx
  414a1a:	stc    
  414a1b:	push   es
  414a1c:	mov    bl,0x1d
  414a1e:	bound  eax,QWORD PTR [esi]
  414a20:	dec    edx
  414a21:	fs cdq 
  414a23:	mov    esi,0xf68c063b
  414a28:	push   ds
  414a29:	cmp    eax,0x998bfb71
  414a2e:	fdiv   QWORD PTR [edi]
  414a30:	push   eax
  414a31:	sar    BYTE PTR [edx+0x7d],1
  414a34:	arpl   di,dx
  414a36:	ret    0xe538
  414a39:	jnp    0x414a2c
  414a3b:	out    0xfd,al
  414a3d:	mov    ah,0xae
  414a3f:	mov    ebx,DWORD PTR [edi]
  414a41:	cvttps2pi mm6,QWORD PTR [esi-0x23]
  414a45:	sbb    DWORD PTR [ebx+0x2a],ebp
  414a48:	or     al,0xaa
  414a4a:	in     al,dx
  414a4b:	cwde   
  414a4c:	sbb    al,0x66
  414a4e:	pop    esp
  414a4f:	arpl   WORD PTR [esi+0x1362d1ec],cx
  414a55:	daa    
  414a56:	cmp    BYTE PTR [ecx+edx*2],dh
  414a59:	inc    esi
  414a5a:	inc    edx
  414a5b:	mov    esp,0x374b15e3
  414a60:	xchg   ebp,eax
  414a61:	test   DWORD PTR [ecx+0x7daabadb],esp
  414a67:	test   eax,0x1e2b5006
  414a6c:	fs je  0x414a7b
  414a6f:	lods   al,BYTE PTR ds:[esi]
  414a70:	lea    edx,[edx-0x21]
  414a73:	iret   
  414a74:	or     DWORD PTR [ebp+eax*8+0x27],edi
  414a78:	lods   eax,DWORD PTR ds:[esi]
  414a79:	fwait
  414a7a:	cmp    ebp,DWORD PTR gs:[ebx-0x1a]
  414a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a7f:	inc    ecx
  414a80:	mov    eax,0xee0f8faa
  414a85:	retf   
  414a86:	scas   eax,DWORD PTR es:[edi]
  414a87:	or     edi,DWORD PTR [ebx]
  414a89:	mov    ah,0xb4
  414a8b:	aad    0x7f
  414a8d:	out    0x77,al
  414a8f:	cmc    
  414a90:	and    dh,al
  414a92:	js     0x414a51
  414a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a95:	out    dx,eax
  414a96:	int    0x71
  414a98:	aad    0x64
  414a9a:	jae    0x414a39
  414a9c:	add    eax,ebp
  414a9e:	xor    al,0x49
  414aa0:	test   al,0x2d
  414aa2:	pop    ds
  414aa3:	mov    ecx,0x11578e6c
  414aa8:	jg     0x414a90
  414aaa:	sbb    cl,dl
  414aac:	fistp  WORD PTR [ebp-0x2b0adc00]
  414ab2:	adc    DWORD PTR [ebx+0x793ac79c],0xe98f358b
  414abc:	js     0x414a71
  414abe:	and    dh,BYTE PTR [ebx+0x7a7270fc]
  414ac4:	dec    edi
  414ac5:	fsubr  DWORD PTR [edx]
  414ac7:	mov    dh,0xb2
  414ac9:	(bad)  
  414aca:	pop    esp
  414acb:	jne    0x414a5b
  414acd:	sub    dl,BYTE PTR [eax-0x2c]
  414ad0:	repnz cs inc esi
  414ad3:	mov    ebx,0x72770c4a
  414ad8:	icebp  
  414ad9:	outs   dx,DWORD PTR ds:[esi]
  414ada:	pop    es
  414adb:	fbld   TBYTE PTR [ebx]
  414add:	sahf   
  414ade:	sub    al,0x23
  414ae1:	push   ss
  414ae2:	mov    dl,0x56
  414ae4:	pop    edi
  414ae5:	push   esp
  414ae6:	pop    ds
  414ae7:	dec    esi
  414ae8:	and    ebx,ebx
  414aea:	mov    ah,0x89
  414aec:	xchg   ecx,eax
  414aed:	gs cld 
  414aef:	fimul  WORD PTR [edx+0x14b1606b]
  414af5:	jmp    0x414ac4
  414af7:	sub    eax,0x463c79bc
  414afc:	lods   eax,DWORD PTR ds:[esi]
  414afd:	rol    BYTE PTR [eax+0x51ff78e9],1
  414b03:	jmp    0x2af3:0xf2d9f08b
  414b0a:	and    bh,BYTE PTR [ebx+0x24b99110]
  414b10:	fmul   QWORD PTR [ebx+0x68]
  414b13:	cmp    bh,bh
  414b15:	test   al,0x7b
  414b17:	scas   al,BYTE PTR es:[edi]
  414b18:	shr    cl,0xe5
  414b1b:	das    
  414b1c:	push   esp
  414b1d:	ret    0x6df6
  414b20:	jge    0x414b88
  414b22:	dec    edi
  414b23:	inc    ecx
  414b24:	je     0x414aee
  414b26:	jmp    0xa5fa:0x1811d0c8
  414b2d:	mov    WORD PTR [esi+0x22d5b0bb],fs
  414b33:	xchg   al,al
  414b35:	and    ebx,DWORD PTR [ebp-0x458412ce]
  414b3b:	mov    BYTE PTR [edx+0x52],dh
  414b3e:	cdq    
  414b3f:	mov    ds:0x184ee17d,al
  414b44:	mov    edi,0x9bc77670
  414b49:	out    0xd3,eax
  414b4b:	cmp    ah,bl
  414b4d:	fistp  WORD PTR [esi-0x1e7885f0]
  414b53:	pop    eax
  414b54:	mov    ds:0x9af856b3,al
  414b59:	sti    
  414b5a:	in     eax,0x90
  414b5c:	sar    DWORD PTR [esp+esi*4+0x4fe0aafd],cl
  414b63:	and    esi,eax
  414b65:	mov    al,0xd6
  414b67:	les    eax,FWORD PTR [ebp-0x3d]
  414b6a:	adc    ebp,ebx
  414b6c:	mov    esi,0x5c6d7193
  414b71:	dec    edi
  414b72:	ja     0x414b4d
  414b74:	(bad)  
  414b75:	int3   
  414b76:	mov    dh,0x93
  414b78:	lea    ebp,[edx+0x3]
  414b7b:	sub    DWORD PTR [bp+di],edi
  414b7e:	sar    bh,1
  414b80:	mov    DWORD PTR [esi+0x2975113d],ebp
  414b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b87:	mov    eax,0x1adad130
  414b8c:	pop    eax
  414b8d:	or     BYTE PTR [edi],0xce
  414b90:	outs   dx,DWORD PTR ds:[esi]
  414b91:	sub    esi,0xffffffc3
  414b94:	mov    DWORD PTR [eax+0x26],esp
  414b97:	cmp    eax,0xc3aa747c
  414b9c:	ins    DWORD PTR es:[edi],dx
  414b9d:	stos   DWORD PTR es:[edi],eax
  414b9e:	xor    eax,0x46d4df62
  414ba3:	out    dx,al
  414ba4:	mov    al,ds:0x441132d7
  414ba9:	sbb    eax,0x6167f410
  414bae:	les    esp,FWORD PTR [ebp+0x333bfdf4]
  414bb4:	pushf  
  414bb5:	adc    bl,cl
  414bb7:	sub    eax,0x96cefb60
  414bbc:	imul   esi,edi,0x7f
  414bbf:	ret    0xfaa
  414bc2:	repz (bad) 
  414bc4:	outs   dx,BYTE PTR ds:[esi]
  414bc5:	sub    BYTE PTR [eax+0x145ea9c4],bh
  414bcb:	ins    BYTE PTR es:[edi],dx
  414bcc:	push   edi
  414bcd:	jl     0x414bfc
  414bcf:	xchg   esp,eax
  414bd0:	push   es
  414bd1:	push   cs
  414bd2:	mov    DWORD PTR [esi],eax
  414bd4:	xchg   ebx,eax
  414bd5:	shr    ecx,1
  414bd7:	push   0xffffffb1
  414bd9:	rcl    DWORD PTR [edi],0x39
  414bdc:	jge    0x414b9b
  414bde:	add    edx,esi
  414be0:	add    al,0x3c
  414be2:	or     eax,0xc822d380
  414be7:	pop    edi
  414be8:	or     eax,0x57cdb187
  414bed:	fldcw  WORD PTR [edx+0x539ac55c]
  414bf3:	pop    esp
  414bf4:	push   ds
  414bf5:	sbb    eax,0xd45a6ff6
  414bfa:	mov    ecx,0xcdcae1fd
  414bff:	push   0x9a471b4e
  414c04:	lods   al,BYTE PTR ds:[esi]
  414c05:	or     bl,BYTE PTR [ebx]
  414c07:	or     DWORD PTR [ecx],0xd72e828f
  414c0d:	mov    ebp,0x8335d4c8
  414c12:	push   cs
  414c13:	adc    BYTE PTR [ebp+ebx*1+0x24],al
  414c17:	mov    DWORD PTR [edi],ebx
  414c19:	arpl   cx,bp
  414c1b:	push   esi
  414c1c:	iret   
  414c1d:	jmp    0xae3426d2
  414c22:	sbb    edi,DWORD PTR [ebp+0x3e]
  414c25:	(bad)  
  414c26:	popf   
  414c27:	inc    ecx
  414c28:	ror    dh,cl
  414c2a:	pop    edi
  414c2b:	dec    edi
  414c2c:	arpl   cx,di
  414c2e:	cmc    
  414c2f:	sbb    DWORD PTR [esi-0x70592a5],edi
  414c35:	dec    esp
  414c36:	stos   DWORD PTR es:[edi],eax
  414c37:	and    bl,bl
  414c39:	clc    
  414c3a:	xor    edi,DWORD PTR [ebx+eiz*4-0x71]
  414c3e:	cmp    edi,0xb75c879e
  414c44:	lock inc ecx
  414c46:	imul   ebx,DWORD PTR [eax-0x65],0x55
  414c4a:	xchg   BYTE PTR [ecx-0x4],bh
  414c4d:	push   ebp
  414c4e:	imul   eax,DWORD PTR [edi],0xfffffff6
  414c51:	int3   
  414c52:	fisttp QWORD PTR ds:0x5f1b246b
  414c58:	retf   0xdef
  414c5b:	mov    ebx,0xe6104749
  414c60:	stos   DWORD PTR es:[edi],eax
  414c61:	call   0x51b3:0xe01f2006
  414c68:	mov    ebp,0xfec976b8
  414c6d:	test   BYTE PTR [edi],bh
  414c6f:	imul   esp,DWORD PTR [ebp+0x68113e3b],0x1
  414c76:	jns    0x414ca8
  414c78:	fst    QWORD PTR [eax-0x5068f9fc]
  414c7e:	mov    ds:0xb86e200,eax
  414c83:	and    bl,bh
  414c85:	scas   eax,DWORD PTR es:[edi]
  414c86:	adc    eax,0xb1cd8eb5
  414c8b:	sti    
  414c8c:	sbb    al,ch
  414c8e:	fmul   DWORD PTR [ecx+0x39]
  414c91:	push   es
  414c92:	cmc    
  414c93:	leave  
  414c94:	lds    edx,FWORD PTR [edi-0x64eaf3d]
  414c9a:	outs   dx,DWORD PTR ds:[esi]
  414c9b:	and    eax,0xfc9d9596
  414ca0:	or     BYTE PTR [ebp-0x75e2de30],0x84
  414ca7:	cmp    edx,DWORD PTR [edx-0x46]
  414caa:	jo     0x414c5c
  414cac:	push   ds
  414cad:	adc    al,0x30
  414caf:	mov    ds:0x8708a9d,al
  414cb4:	jb     0x414c75
  414cb6:	nop
  414cb7:	add    dh,al
  414cb9:	dec    edx
  414cba:	mov    ebx,0x8dcbe410
  414cbf:	jle    0x414cab
  414cc1:	ret    0xa108
  414cc4:	outs   dx,BYTE PTR ds:[esi]
  414cc5:	mov    edx,DWORD PTR [ebx]
  414cc7:	mov    ebp,0xb591475c
  414ccc:	dec    esp
  414ccd:	and    al,0xdb
  414ccf:	pop    ss
  414cd0:	xor    edx,DWORD PTR [esi]
  414cd2:	cmc    
  414cd3:	jns    0x414d24
  414cd5:	mov    edx,0xad93cfe3
  414cda:	mov    al,BYTE PTR [esi]
  414cdc:	cli    
  414cdd:	push   ebx
  414cde:	ret    0x8c40
  414ce1:	push   esi
  414ce2:	xchg   edx,eax
  414ce3:	or     al,0x50
  414ce5:	out    dx,eax
  414ce6:	inc    eax
  414ce7:	mov    ecx,0x21ba3180
  414cec:	ja     0x414d40
  414cee:	les    ebp,FWORD PTR [bp+di+0x53d1]
  414cf3:	(bad)  
  414cf4:	in     eax,0xbe
  414cf6:	es xchg edx,eax
  414cf8:	jbe    0x414c8d
  414cfa:	sub    esi,DWORD PTR [ecx-0x4b728728]
  414d00:	frstor [ebx-0x67]
  414d03:	fidiv  WORD PTR [ecx+esi*1+0x78]
  414d07:	mov    bh,0xa2
  414d09:	fist   DWORD PTR [ecx]
  414d0b:	fdiv   st,st(2)
  414d0d:	and    DWORD PTR [ebx-0x64d42066],0x18
  414d14:	scas   eax,DWORD PTR es:[edi]
  414d15:	push   ds
  414d16:	sbb    cl,cl
  414d18:	bound  eax,QWORD PTR [esi-0x3e0434c6]
  414d1e:	mov    edi,DWORD PTR [eax]
  414d20:	jg     0x414d1c
  414d22:	dec    esp
  414d23:	lods   al,BYTE PTR ds:[esi]
  414d24:	sbb    ebp,edi
  414d26:	jmp    0x3dd1bc74
  414d2b:	sbb    ebp,0xdc370dd9
  414d31:	in     al,0x2
  414d33:	dec    eax
  414d34:	sub    al,0x5a
  414d36:	in     eax,dx
  414d37:	jecxz  0x414cc5
  414d39:	push   esp
  414d3a:	jnp    0x414d4b
  414d3c:	int3   
  414d3d:	and    ebp,DWORD PTR [ecx+0x1]
  414d40:	bound  edi,QWORD PTR [ebx+0x6d167df4]
  414d46:	rcl    BYTE PTR [ecx+ebx*4],cl
  414d49:	and    ebp,DWORD PTR [edx-0x479f7aff]
  414d4f:	fs das 
  414d51:	idiv   DWORD PTR [ecx+edx*1]
  414d54:	int3   
  414d55:	cmp    DWORD PTR [esi],0x25a231ad
  414d5b:	in     al,0x88
  414d5d:	loopne 0x414d7b
  414d5f:	ins    BYTE PTR es:[edi],dx
  414d60:	sbb    DWORD PTR [edi],eax
  414d62:	pop    ebx
  414d63:	mov    ds:0x3a3ea154,eax
  414d68:	ja     0x414da6
  414d6a:	fld    QWORD PTR [esi+0x463674b3]
  414d70:	xchg   DWORD PTR [edx-0x60],eax
  414d73:	addr16 jg 0x414d18
  414d76:	xor    al,0xec
  414d78:	sub    eax,0x858c146f
  414d7d:	mov    al,0xa8
  414d7f:	daa    
  414d80:	or     al,dl
  414d82:	arpl   dx,si
  414d84:	into   
  414d85:	mov    ebp,0xeea198db
  414d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d8b:	xor    edx,0xa138785e
  414d91:	cmp    cl,BYTE PTR [ecx+0x50]
  414d94:	pusha  
  414d95:	mov    dl,0xc2
  414d97:	pusha  
  414d98:	mov    bh,0xef
  414d9a:	xor    BYTE PTR [eax-0x2a4c0ca3],bl
  414da0:	jg     0x414db2
  414da2:	lods   eax,DWORD PTR ds:[esi]
  414da3:	cdq    
  414da4:	mov    ebx,0xb114e125
  414da9:	retf   0x642e
  414dac:	(bad)  
  414dad:	out    dx,eax
  414dae:	dec    ebp
  414daf:	push   ds
  414db0:	repz clc 
  414db2:	push   cs
  414db3:	in     eax,dx
  414db4:	jge    0x414dcd
  414db6:	shr    ch,cl
  414db8:	fwait
  414db9:	mov    eax,0xe5c4d929
  414dbe:	in     al,0x9b
  414dc0:	bound  eax,QWORD PTR [edx+0x371d4e04]
  414dc6:	out    dx,al
  414dc7:	push   esi
  414dc8:	add    ebx,DWORD PTR [esi]
  414dca:	fld    QWORD PTR [ebx+0x72c48242]
  414dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dd1:	mov    al,ds:0x7e3c9944
  414dd6:	push   edx
  414dd7:	xor    BYTE PTR [edx+edx*4+0x64],bh
  414ddb:	cdq    
  414ddc:	popa   
  414ddd:	push   eax
  414dde:	mov    ecx,0xce723d37
  414de3:	(bad)
  414de7:	add    DWORD PTR fs:[ecx-0x12],0x22
  414dec:	push   0xfffffffe
  414dee:	pop    ds
  414def:	push   ebx
  414df0:	loopne 0x414e44
  414df2:	packsswb mm7,QWORD PTR [edx-0x29]
  414df6:	pop    ebp
  414df7:	xchg   edi,eax
  414df8:	ret    0x7d77
  414dfb:	out    dx,eax
  414dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dfd:	loop   0x414e63
  414dff:	inc    edx
  414e00:	pop    esp
  414e01:	and    BYTE PTR [edi],ah
  414e03:	jo     0x414df0
  414e05:	aas    
  414e06:	mov    dl,0x7c
  414e08:	mov    bl,0x60
  414e0a:	push   ds
  414e0b:	neg    BYTE PTR [ebp-0x6e8361f0]
  414e11:	pusha  
  414e12:	out    0x6c,eax
  414e14:	in     al,dx
  414e15:	aad    0x5c
  414e17:	mov    eax,0xb3273506
  414e1c:	dec    esp
  414e1d:	cmp    bh,BYTE PTR [edi]
  414e1f:	jb     0x414daf
  414e21:	imul   dl
  414e23:	fadd   DWORD PTR [eax]
  414e25:	cmp    al,0xea
  414e27:	leave  
  414e28:	mov    ds:0x1f2ecc15,eax
  414e2d:	mov    WORD PTR cs:[ecx+0xe369bec],gs
  414e34:	cld    
  414e35:	ins    DWORD PTR es:[edi],dx
  414e36:	sub    edi,DWORD PTR [ecx]
  414e38:	adc    al,0xd2
  414e3a:	xchg   ebx,eax
  414e3b:	mov    bl,0x5b
  414e3d:	mov    WORD PTR [eax+0x13],gs
  414e40:	(bad)  
  414e41:	mov    dl,0x5a
  414e43:	mov    dl,0xc3
  414e45:	sbb    DWORD PTR [edi],ebx
  414e47:	ret    0x4f8d
  414e4a:	leave  
  414e4b:	pop    edx
  414e4c:	jl     0x414e2d
  414e4e:	inc    edx
  414e4f:	fmul   QWORD PTR [edi+0x5c]
  414e52:	mov    dl,0x2b
  414e54:	es int 0xaf
  414e57:	xor    dl,BYTE PTR [edx+0x14]
  414e5a:	imul   ebx,DWORD PTR [edx],0xa7e989fc
  414e60:	rcr    ecx,0x53
  414e63:	hlt    
  414e64:	jmp    0x414df3
  414e66:	test   eax,0x14e2750b
  414e6b:	push   ss
  414e6c:	and    esp,DWORD PTR [ebp+0x53d15be5]
  414e72:	push   edx
  414e73:	mov    BYTE PTR [edx-0x6b4f1f92],bh
  414e79:	in     eax,0x71
  414e7b:	sbb    al,ch
  414e7d:	xchg   esi,eax
  414e7e:	adc    DWORD PTR ds:0xdc9c8648,edx
  414e84:	or     dl,0xe2
  414e87:	fs rol edi,0x8e
  414e8b:	bound  esi,QWORD PTR [ebx+0x1be6e74f]
  414e91:	pop    eax
  414e92:	and    DWORD PTR [ecx],0x988681ae
  414e98:	sub    al,ah
  414e9a:	pop    DWORD PTR [eax]
  414e9c:	fwait
  414e9d:	xor    DWORD PTR [eax-0x60eb4563],ecx
  414ea3:	and    BYTE PTR ds:[edi],0x5
  414ea7:	mov    dh,0xdc
  414ea9:	ins    DWORD PTR es:[edi],dx
  414eaa:	add    al,0x55
  414eac:	adc    eax,0x78e4017d
  414eb1:	or     dl,BYTE PTR [edx]
  414eb3:	loop   0x414e46
  414eb5:	in     eax,dx
  414eb6:	lahf   
  414eb7:	inc    esi
  414eb8:	pushf  
  414eb9:	ja     0x414e64
  414ebb:	or     DWORD PTR [edi-0x40],ebp
  414ebe:	jg     0x414eb7
  414ec0:	mov    al,0x55
  414ec2:	jecxz  0x414ed9
  414ec4:	leave  
  414ec5:	dec    edx
  414ec6:	cmp    bh,cl
  414ec8:	mov    edi,0x32e8ce0c
  414ecd:	sub    BYTE PTR [edx+0xb94ed3],bl
  414ed3:	retf   0x607d
  414ed6:	jbe    0x414f0c
  414ed8:	loop   0x414ed4
  414eda:	xor    BYTE PTR [ebp+0x11],bl
  414edd:	dec    esp
  414ede:	jo     0x414f2c
  414ee0:	dec    BYTE PTR [esi+0x59]
  414ee3:	es in  ax,0x80
  414ee7:	inc    sp
  414ee9:	ins    DWORD PTR es:[edi],dx
  414eea:	fidiv  WORD PTR [esi+0x19]
  414eed:	rcr    DWORD PTR [edx+0x59],1
  414ef0:	lods   al,BYTE PTR ds:[esi]
  414ef1:	sub    DWORD PTR [ebx-0x4a315d7d],0x5b
  414ef8:	cmp    BYTE PTR [ecx+ebp*2+0x68],0x17
  414efd:	xor    dh,BYTE PTR ds:0x10596e09
  414f03:	xchg   edx,eax
  414f04:	ret    
  414f05:	sbb    esp,esp
  414f07:	inc    edx
  414f08:	mov    dh,0x79
  414f0a:	adc    al,BYTE PTR [ebx-0x1f]
  414f0d:	rcl    esi,0x81
  414f10:	jne    0x414f2f
  414f12:	and    eax,0x7acf61b4
  414f17:	mov    cl,0x8d
  414f19:	test   al,0xae
  414f1b:	test   al,0x17
  414f1d:	xchg   BYTE PTR [edi+esi*8-0x22930c14],dh
  414f24:	int    0x48
  414f26:	push   edi
  414f27:	ror    BYTE PTR [ecx],0xa2
  414f2a:	sbb    ch,BYTE PTR [esi]
  414f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f2d:	mov    esi,0xf5b7a4e
  414f32:	and    ch,BYTE PTR [eax+0x3b4ea088]
  414f38:	ret    
  414f39:	int    0x6
  414f3b:	ss cmp ah,ah
  414f3e:	dec    ecx
  414f3f:	loopne 0x414fa0
  414f41:	inc    edx
  414f42:	fwait
  414f43:	cmp    DWORD PTR [ecx-0x5c8246e],eax
  414f49:	push   ss
  414f4a:	sbb    ch,BYTE PTR [edi+0x559f7833]
  414f50:	sbb    al,0xa3
  414f52:	cs pop esp
  414f54:	stos   DWORD PTR es:[edi],eax
  414f55:	xchg   edi,eax
  414f56:	(bad)  
  414f57:	std    
  414f58:	ss call 0x493e:0x6ba8c1bb
  414f60:	jns    0x414fb8
  414f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f63:	(bad)  
  414f64:	mov    ds:0xe6888a97,al
  414f69:	adc    al,0xa5
  414f6b:	jl     0x414fb0
  414f6d:	cwde   
  414f6e:	xchg   edx,eax
  414f6f:	cmp    esi,edx
  414f71:	addr16 cli 
  414f73:	jbe    0x414f88
  414f75:	repz ror BYTE PTR [edi-0xd],0xbb
  414f7a:	das    
  414f7b:	imul   eax,DWORD PTR [esi],0x2e
  414f7e:	lahf   
  414f7f:	mov    cl,0xd6
  414f81:	mov    ds:0xb93b9a40,eax
  414f86:	inc    edx
  414f87:	data16 adc ah,BYTE PTR [ebx]
  414f8a:	push   ebp
  414f8b:	addr16 retf 
  414f8d:	stc    
  414f8e:	dec    esp
  414f8f:	pushf  
  414f90:	mov    ecx,0x613671b
  414f95:	pop    ebp
  414f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f97:	loop   0x414fb8
  414f99:	cmp    al,0x68
  414f9b:	mov    al,0x5c
  414f9d:	sahf   
  414f9e:	or     dh,BYTE PTR [ebx]
  414fa0:	and    ch,ah
  414fa2:	mov    ds:0xf150c196,eax
  414fa7:	and    eax,DWORD PTR [ebx]
  414fa9:	push   esi
  414faa:	arpl   WORD PTR [edx+0x67],bp
  414fad:	inc    ebx
  414fae:	test   al,0xd8
  414fb0:	and    DWORD PTR [ebp-0x7],ecx
  414fb3:	mov    ah,0xce
  414fb5:	loop   0x414f95
  414fb7:	aad    0xda
  414fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fba:	hlt    
  414fbb:	or     edx,0x76
  414fbe:	das    
  414fbf:	mov    ecx,0xf116ed2b
  414fc4:	mov    al,fs:0x22ced260
  414fca:	in     eax,0x3d
  414fcc:	jne    0x414f97
  414fce:	cmp    eax,0xbe4e0361
  414fd3:	mov    esp,0xc8cbdfd5
  414fd8:	add    ebp,DWORD PTR [esi+0x4e]
  414fdb:	out    0xcc,eax
  414fdd:	daa    
  414fde:	jl     0x41501b
  414fe0:	sbb    dh,BYTE PTR [ecx]
  414fe2:	shl    DWORD PTR [esi],0x59
  414fe5:	mov    eax,ds:0xbb803b6b
  414fea:	ja     0x414f6e
  414fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fed:	adc    bh,BYTE PTR es:[eax]
  414ff0:	(bad)  
  414ff1:	cmp    eax,0x8bf373aa
  414ff6:	pop    ebp
  414ff7:	mov    ds:0xaecb7cc4,al
  414ffc:	nop
  414ffd:	jecxz  0x414ff8
  414fff:	test   BYTE PTR [eax],ah
  415001:	jbe    0x415041
  415003:	es mov esp,0xed41ae72
  415009:	and    DWORD PTR [eax],esp
  41500b:	cmp    BYTE PTR [esi+0x4b],0x4
  41500f:	mov    bh,0x55
  415011:	leave  
  415012:	add    esi,DWORD PTR [esi]
  415014:	push   cs
  415015:	fmul   DWORD PTR [eax-0x21]
  415018:	push   cs
  415019:	add    edx,eax
  41501b:	jae    0x414fcd
  41501d:	xor    al,0x20
  41501f:	sbb    edx,DWORD PTR [ebp+ebp*4-0x7b]
  415023:	cmp    eax,ebp
  415025:	je     0x414fba
  415027:	xchg   ebx,eax
  415028:	cwde   
  415029:	repnz dec esp
  41502b:	ds jl  0x415043
  41502e:	out    dx,al
  41502f:	mov    ecx,0xf8ea362a
  415034:	test   eax,0x3efd642c
  415039:	loope  0x415086
  41503b:	cwde   
  41503c:	cmp    esi,DWORD PTR [esi+0x51]
  41503f:	(bad)  
  415040:	xor    ah,BYTE PTR [eax]
  415042:	scas   eax,DWORD PTR es:[edi]
  415043:	pop    edi
  415044:	xor    esp,DWORD PTR [edi+0x7460ed05]
  41504a:	dec    esp
  41504b:	push   ds
  41504c:	cmp    al,0x70
  41504e:	(bad)
  415051:	rcl    ah,1
  415053:	dec    esp
  415054:	add    al,0x49
  415056:	sahf   
  415057:	scas   al,BYTE PTR es:[edi]
  415058:	and    al,0x1a
  41505a:	popf   
  41505b:	jae    0x415012
  41505d:	outs   dx,BYTE PTR ds:[esi]
  41505e:	mov    ebp,0x3c63068c
  415063:	add    DWORD PTR [ecx+eax*4-0x10fce771],edi
  41506a:	xor    BYTE PTR [edi],0x29
  41506d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41506e:	push   ss
  41506f:	cmp    al,dl
  415071:	repz mov edi,0xa3c0684d
  415077:	data16 jb 0x4150cb
  41507a:	dec    edx
  41507b:	jnp    0x41506e
  41507d:	mov    ch,0x10
  41507f:	imul   ebx,esi,0x42463d07
  415085:	mov    dl,0xeb
  415087:	(bad)  
  415088:	or     BYTE PTR [edi],bh
  41508a:	(bad)  
  41508b:	pop    eax
  41508c:	sbb    BYTE PTR [eax+0xd],cl
  41508f:	jbe    0x415027
  415091:	rcl    BYTE PTR [ebx],cl
  415093:	push   edx
  415094:	pop    esp
  415095:	icebp  
  415096:	push   ss
  415097:	imul   ebp,DWORD PTR [esi+0x57ab6f94],0x44ffc396
  4150a1:	jmp    0xcf84e84a
  4150a6:	jg     0x415081
  4150a8:	(bad)  
  4150a9:	mov    al,0xd1
  4150ab:	in     eax,dx
  4150ac:	xor    eax,0xdba994d2
  4150b1:	std    
  4150b2:	aas    
  4150b3:	add    esp,DWORD PTR [edx+0x3ec81deb]
  4150b9:	sbb    ch,dl
  4150bb:	ret    0x6574
  4150be:	dec    edi
  4150bf:	aas    
  4150c0:	(bad)  
  4150c1:	(bad)  
  4150c2:	xor    BYTE PTR [ecx],dh
  4150c4:	jge    0x415109
  4150c6:	repnz clc 
  4150c8:	push   es
  4150c9:	sub    eax,0xccb65dbb
  4150ce:	aad    0x49
  4150d0:	js     0x4150f5
  4150d2:	hlt    
  4150d3:	dec    esi
  4150d4:	push   cs
  4150d5:	push   ebx
  4150d6:	in     al,0x2a
  4150d8:	cli    
  4150d9:	retf   0xfb48
  4150dc:	push   ecx
  4150dd:	sub    ecx,DWORD PTR [ecx-0x14]
  4150e0:	and    eax,0x4b2d9cbb
  4150e5:	imul   esp
  4150e7:	lea    esp,[esp+esi*8+0x63e73c6e]
  4150ee:	mov    bh,0x6c
  4150f0:	sub    bh,BYTE PTR [edi-0x1ea13690]
  4150f6:	dec    eax
  4150f7:	and    eax,DWORD PTR [ebp+0x4d]
  4150fa:	idiv   BYTE PTR [ecx+ebx*2]
  4150fd:	lods   eax,DWORD PTR ds:[esi]
  4150fe:	dec    eax
  4150ff:	adc    esp,DWORD PTR ds:0x225bd487
  415105:	mov    eax,ds:0xf280cfaf
  41510a:	xchg   ecx,eax
  41510b:	jne    0x415127
  41510d:	inc    esp
  41510e:	test   al,0x8b
  415110:	cwde   
  415111:	call   0x3884:0xa42880d3
  415118:	sub    al,0x10
  41511a:	mov    esp,0xecd7d132
  41511f:	ror    eax,1
  415121:	and    DWORD PTR [ebx-0x31],ebp
  415124:	repz icebp 
  415126:	test   al,0x93
  415128:	cmp    eax,0x6be42706
  41512d:	jae    0x415133
  41512f:	push   cs
  415130:	sar    DWORD PTR [ecx+ebp*8],0x89
  415134:	or     edi,DWORD PTR fs:[edx+eiz*4]
  415138:	sar    BYTE PTR [eax+0x69],1
  41513b:	in     al,0xe5
  41513d:	in     eax,dx
  41513e:	mov    esp,0x86ff3212
  415143:	xchg   edi,eax
  415144:	jno    0x41511f
  415146:	jmp    0x2bfc:0xfe2f2ec5
  41514d:	mov    BYTE PTR [ebx],dh
  41514f:	adc    DWORD PTR [edi-0x45],esp
  415152:	dec    esp
  415153:	xchg   BYTE PTR [ebx-0x7e],cl
  415156:	outs   dx,DWORD PTR ds:[esi]
  415157:	pop    es
  415158:	mov    es,esi
  41515a:	outs   dx,DWORD PTR ds:[esi]
  41515b:	jmp    0xccb3aee3
  415160:	cli    
  415161:	fimul  WORD PTR [ecx+0x3dec7831]
  415167:	add    ch,cl
  415169:	cwde   
  41516a:	vmwrite eax,esp
  41516d:	mov    ebp,0x17bddcf2
  415172:	nop
  415173:	jecxz  0x4151d1
  415175:	pop    ebp
  415176:	adc    dl,BYTE PTR ds:0xaeaad9c7
  41517d:	xor    esp,DWORD PTR [ebx+ecx*8]
  415180:	inc    eax
  415181:	iret   
  415182:	pop    ebp
  415183:	(bad)  
  415184:	mov    gs,eax
  415186:	jne    0x4151e8
  415188:	sub    esp,DWORD PTR [ecx-0x6c85b24e]
  41518e:	jbe    0x415195
  415190:	xor    DWORD PTR [eax+esi*8-0x7f840829],esi
  415197:	pop    ds
  415198:	sub    BYTE PTR [eax+edi*4],bl
  41519b:	or     edx,DWORD PTR [ecx+0x3034ffa8]
  4151a1:	or     ah,ch
  4151a3:	and    dl,dl
  4151a5:	pop    ss
  4151a6:	rcr    DWORD PTR [ebp+0x6d],cl
  4151a9:	sub    BYTE PTR [eax+ebx*4-0x4ea3bdc1],cl
  4151b0:	ret    0x1c66
  4151b3:	cld    
  4151b4:	xchg   edi,eax
  4151b5:	cmp    DWORD PTR [ebp+eax*4-0x6d],0xe8fd5984
  4151bd:	and    DWORD PTR [eax+0x67],esp
  4151c0:	sbb    BYTE PTR [esp+ecx*8+0x7e69025d],al
  4151c7:	data16 fs and al,0x48
  4151cb:	inc    esi
  4151cc:	repz cmp al,BYTE PTR [ebx]
  4151cf:	push   eax
  4151d0:	ja     0x41522c
  4151d2:	pushf  
  4151d3:	sub    edx,0xd8b60914
  4151d9:	fucomip st,st(3)
  4151db:	inc    ecx
  4151dc:	ret    0x3a6e
  4151df:	out    dx,al
  4151e0:	mov    bl,0xc8
  4151e2:	mov    bh,BYTE PTR [bp+si-0x46]
  4151e6:	jae    0x415213
  4151e8:	cmp    dl,bh
  4151ea:	iret   
  4151eb:	ret    
  4151ec:	mov    eax,0x795d63d9
  4151f1:	pop    ds
  4151f2:	mov    ebx,0xa2b1e22e
  4151f7:	mov    al,ds:0x2c7517cd
  4151fc:	mov    ds:0x7aadf8ba,eax
  415201:	mov    cl,0x2f
  415203:	(bad)  
  415204:	cmp    BYTE PTR [ebp+0xf],ch
  415207:	sub    DWORD PTR [ebx+0x41],esi
  41520a:	xor    dh,BYTE PTR [ecx]
  41520c:	pop    ecx
  41520d:	dec    esi
  41520e:	cmp    eax,0x987c3688
  415213:	or     eax,0x2fe62cf0
  415218:	push   ebx
  415219:	leave  
  41521a:	fstp   QWORD PTR [ebp+0x24]
  41521d:	mov    DWORD PTR [esi+0x7c],ebp
  415220:	push   es
  415221:	arpl   bx,bx
  415223:	sbb    DWORD PTR [ebx-0x21f32c53],edi
  415229:	xor    DWORD PTR [ecx-0x76],ebp
  41522c:	test   eax,0x56e96036
  415231:	push   cs
  415232:	inc    esi
  415233:	mov    ds,eax
  415235:	jecxz  0x4152b6
  415237:	dec    ebx
  415238:	or     cl,dh
  41523a:	sbb    eax,0x839be4e5
  41523f:	aaa    
  415240:	(bad)  
  415241:	jno    0x415261
  415243:	ja     0x4152bf
  415245:	stos   DWORD PTR es:[edi],eax
  415246:	cdq    
  415247:	clc    
  415248:	pop    ds
  415249:	sahf   
  41524a:	pop    ebx
  41524b:	idiv   DWORD PTR [edx+ebp*8]
  41524e:	or     al,0x13
  415250:	push   ecx
  415251:	add    dh,BYTE PTR [esi-0x4b]
  415254:	enter  0x3bbf,0xae
  415258:	xlat   BYTE PTR ds:[ebx]
  415259:	adc    eax,0x6b641685
  41525e:	add    esp,esi
  415260:	or     ecx,DWORD PTR [eax+0x2d]
  415263:	(bad)  
  415265:	gs and al,0xf5
  415268:	retf   0x51d
  41526b:	push   ebp
  41526c:	ror    al,cl
  41526e:	cmp    edx,DWORD PTR [edx-0x41]
  415271:	addr16 mov cl,0x2
  415274:	imul   esp,DWORD PTR [esi+0x32],0xfffffff3
  415278:	das    
  415279:	nop
  41527a:	ds pop ebx
  41527c:	push   ds
  41527d:	cli    
  41527e:	jo     0x4152e0
  415280:	cmp    al,0x4c
  415282:	cmp    BYTE PTR [eax-0x30a8dce7],al
  415288:	scas   al,BYTE PTR es:[edi]
  415289:	push   ds
  41528a:	movzx  ebx,BYTE PTR [edx+0x53ee2586]
  415291:	pop    eax
  415292:	dec    edi
  415293:	mov    BYTE PTR [esi-0x72],0x8c
  415297:	(bad)  
  415299:	test   DWORD PTR [ecx+0x12],edx
  41529c:	mov    al,ds:0x180e5ee3
  4152a1:	push   0xfffffffa
  4152a3:	jp     0x41525f
  4152a5:	jge    0x4152d8
  4152a7:	mov    eax,ds:0xa548b223
  4152ac:	sahf   
  4152ad:	mov    esi,0xeab590d2
  4152b2:	out    dx,al
  4152b3:	or     al,0xb4
  4152b5:	ja     0x4152ba
  4152b7:	cwde   
  4152b8:	xor    dh,ch
  4152ba:	shl    DWORD PTR [ecx-0x7d],1
  4152bd:	cmp    bh,BYTE PTR [edi-0x7402da4]
  4152c3:	addr16 hlt 
  4152c5:	push   ds
  4152c6:	js     0x415316
  4152c8:	repz xchg edi,eax
  4152ca:	inc    eax
  4152cb:	mov    dh,0xbd
  4152cd:	cmp    DWORD PTR [esi+ebp*8-0x327809e6],0x378f00d9
  4152d8:	lods   eax,DWORD PTR ds:[esi]
  4152d9:	stos   DWORD PTR es:[edi],eax
  4152da:	scas   eax,DWORD PTR es:[edi]
  4152db:	pop    esi
  4152dc:	sahf   
  4152dd:	mov    fs,WORD PTR [edi]
  4152df:	adc    al,0xb6
  4152e1:	test   BYTE PTR [ecx-0x3e1053f5],dl
  4152e7:	adc    eax,0xb8e9ad2
  4152ec:	mov    ebp,0x7b786c66
  4152f1:	mov    eax,ds:0x81a91717
  4152f6:	push   ds
  4152f7:	and    esp,ecx
  4152f9:	imul   ebp,edx,0xd
  4152fc:	mov    DWORD PTR [edi],ebx
  4152fe:	cmp    DWORD PTR [eax+0x93a250e],esi
  415304:	and    bh,BYTE PTR [edi]
  415306:	or     DWORD PTR [ecx+0x3],esi
  415309:	or     al,0xa0
  41530b:	daa    
  41530c:	mov    edx,0xf53cf4ec
  415311:	mov    dl,0x0
  415313:	cmp    DWORD PTR [edi],ecx
  415315:	mov    al,0x97
  415317:	sbb    DWORD PTR [ecx+0x313b533c],eax
  41531d:	or     BYTE PTR [esi],ch
  41531f:	cmp    DWORD PTR [edx+0x29],ebx
  415322:	jmp    0x7d715c65
  415327:	popf   
  415328:	cli    
  415329:	mov    bl,0x2e
  41532b:	stc    
  41532c:	frstor [eax]
  41532e:	std    
  41532f:	xlat   BYTE PTR ds:[ebx]
  415330:	pop    es
  415331:	mov    eax,ds:0x48f60c97
  415336:	mov    ebx,0x8edceba6
  41533b:	mov    al,ds:0x3a28acdb
  415340:	fs dec edx
  415342:	mov    al,0xd7
  415344:	sub    edi,edx
  415346:	mov    bh,0x89
  415348:	add    esi,DWORD PTR [esi]
  41534a:	cmp    cl,bh
  41534c:	mov    ds,WORD PTR [ebp-0x73]
  41534f:	daa    
  415350:	mov    eax,ds:0xf3de0e6d
  415355:	cmp    BYTE PTR [edi+0x376962d5],al
  41535b:	cmp    eax,0x1be117f9
  415360:	(bad)  
  415361:	stos   BYTE PTR es:[edi],al
  415362:	mov    eax,ds:0x42657af1
  415367:	xchg   DWORD PTR [ebx+0x2b2996e8],eax
  41536d:	test   al,0x1c
  41536f:	vcvtsi2ss xmm1,xmm7,DWORD PTR ds:0x5db51ea3
  415377:	mov    bl,0xba
  415379:	ss or  al,0xf7
  41537c:	fidivr WORD PTR [ebp-0x2e3ec0d6]
  415382:	mov    cl,0x20
  415384:	ins    DWORD PTR es:[edi],dx
  415385:	daa    
  415386:	pop    gs
  415388:	inc    eax
  415389:	xor    al,0xa9
  41538b:	call   0x5f2a09d3
  415390:	(bad)  [ecx]
  415392:	mov    al,ds:0xd8f913ae
  415397:	test   al,0xae
  415399:	bound  edi,QWORD PTR [eax+0x58]
  41539c:	xor    eax,edi
  41539e:	dec    eax
  41539f:	popa   
  4153a0:	cwde   
  4153a1:	(bad)  
  4153a2:	sar    BYTE PTR [edx+0x1171de8f],0x41
  4153a9:	out    0x9e,eax
  4153ab:	(bad)  
  4153ac:	hlt    
  4153ad:	outs   dx,DWORD PTR ds:[esi]
  4153ae:	scas   al,BYTE PTR es:[edi]
  4153af:	loope  0x4153e1
  4153b1:	pop    edi
  4153b2:	xchg   ah,ah
  4153b4:	in     al,0x5a
  4153b6:	jb     0x41540d
  4153b8:	mov    edi,0x6bc62053
  4153bd:	scas   eax,DWORD PTR es:[edi]
  4153be:	stos   DWORD PTR es:[edi],eax
  4153bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153c0:	jp     0x415353
  4153c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c3:	jmp    0x4153df
  4153c5:	adc    BYTE PTR [esi-0x3a],ch
  4153c8:	pop    eax
  4153c9:	xchg   DWORD PTR [ecx-0xb7b1abb],esi
  4153cf:	mov    edx,0x473b04a
  4153d4:	in     eax,dx
  4153d5:	sub    al,0xba
  4153d7:	retf   
  4153d8:	scas   al,BYTE PTR es:[edi]
  4153d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153da:	jbe    0x4153e2
  4153dc:	sbb    eax,0x580cf82e
  4153e1:	mov    eax,0x9378bc52
  4153e6:	or     BYTE PTR [edx+ecx*2-0x63629c1],al
  4153ed:	mov    eax,0xb4d1b67a
  4153f2:	out    0x1f,al
  4153f4:	and    ch,BYTE PTR [ebp+0x33]
  4153f7:	xchg   edi,eax
  4153f8:	shl    DWORD PTR [ebx],0x8e
  4153fb:	jbe    0x415405
  4153fd:	mov    esp,0xd815da5c
  415402:	jnp    0x41546f
  415404:	pop    es
  415405:	icebp  
  415406:	cmp    BYTE PTR ds:0x2b927350,0xc4
  41540d:	test   DWORD PTR [ebx],ebp
  41540f:	test   al,0xe8
  415411:	mov    al,ds:0x8ee58c8a
  415416:	test   ecx,0x28addafe
  41541c:	pop    esp
  41541d:	adc    DWORD PTR [esi+0x1699669a],0xffffffa0
  415424:	xor    eax,0x7918bbcb
  415429:	push   es
  41542a:	jno    0x4153c3
  41542c:	sahf   
  41542d:	jnp    0x4153c0
  41542f:	xor    eax,0x5c54e9f7
  415434:	sub    al,0x92
  415436:	sub    edx,edi
  415438:	popa   
  415439:	mov    edx,edx
  41543b:	jno    0x415482
  41543d:	mov    edx,0xdbaa7a00
  415442:	sbb    ebx,ebp
  415444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415445:	das    
  415446:	xor    BYTE PTR ds:0xb8a0eea4,ah
  41544c:	cmp    al,0xcb
  41544e:	pop    ds
  41544f:	add    BYTE PTR [eax-0x6af46232],dl
  415455:	sbb    DWORD PTR [eax+0x15],edx
  415458:	test   eax,0x85974581
  41545d:	xchg   ecx,esp
  41545f:	and    ah,BYTE PTR [ebx]
  415461:	popf   
  415462:	mov    ecx,0xe568cad4
  415467:	sahf   
  415468:	daa    
  415469:	jb     0x415459
  41546b:	sbb    BYTE PTR [edi+0x2b],dh
  41546e:	les    ebx,FWORD PTR [edi-0x3cb3c925]
  415474:	or     BYTE PTR [edi-0x1a0704f2],al
  41547a:	std    
  41547b:	sub    BYTE PTR [esi],0x82
  41547e:	jno    0x4154ca
  415480:	pop    edx
  415481:	out    dx,eax
  415482:	test   eax,0x6580931c
  415487:	or     dl,cl
  415489:	jmp    0x15df:0xb9ed18af
  415490:	(bad)  
  415491:	push   0xdcfc762c
  415496:	dec    ecx
  415497:	xor    ch,0x7b
  41549a:	and    BYTE PTR [eax+edi*8],bl
  41549d:	cli    
  41549e:	adc    eax,ebp
  4154a0:	jl     0x4154f2
  4154a2:	lock fdivr DWORD PTR [ecx+0x74]
  4154a6:	aas    
  4154a7:	jns    0x41542a
  4154a9:	leave  
  4154aa:	fidiv  WORD PTR [esi+0x10768c5a]
  4154b0:	sub    DWORD PTR [edi+0x4d],esp
  4154b3:	ins    DWORD PTR es:[edi],dx
  4154b4:	bnd jns 0x4154aa
  4154b7:	inc    edx
  4154b8:	cmc    
  4154b9:	js     0x415533
  4154bb:	dec    ebp
  4154bc:	mov    BYTE PTR [edi+0x2d],cl
  4154bf:	test   bh,0x4a
  4154c2:	mov    ecx,DWORD PTR [ebp-0x763ebb60]
  4154c8:	cmp    cl,BYTE PTR [edi]
  4154ca:	cmp    eax,0x9890ba13
  4154cf:	out    0x67,al
  4154d1:	dec    ebx
  4154d2:	(bad)  
  4154d3:	sbb    DWORD PTR [edi+0x8],ebp
  4154d6:	sbb    ah,BYTE PTR [edi+0x6c06ef0c]
  4154dc:	mov    eax,ds:0x4ae43666
  4154e1:	pop    ds
  4154e2:	shr    BYTE PTR [edi-0x3],cl
  4154e5:	and    al,0x32
  4154e7:	retf   
  4154e8:	dec    edi
  4154e9:	int    0x9f
  4154eb:	mov    ecx,0xa49498f7
  4154f0:	shr    cl,1
  4154f2:	test   bh,al
  4154f4:	call   0xd253:0x9b860d74
  4154fb:	retf   
  4154fc:	jae    0x41554a
  4154fe:	sbb    eax,0x75e3c99b
  415503:	mov    esi,0x3d40e95
  415508:	hlt    
  415509:	mov    eax,0xaa450510
  41550e:	sbb    esp,DWORD PTR [edx+0x352e2588]
  415514:	lods   al,BYTE PTR ds:[esi]
  415515:	xchg   esp,eax
  415516:	push   0x6afee97d
  41551b:	add    ch,cl
  41551d:	xchg   cl,dl
  41551f:	jle    0x4154d0
  415521:	mov    dh,0xf1
  415523:	jo     0x41556d
  415525:	lahf   
  415526:	adc    DWORD PTR [esi+0x5637cd8f],0x745b1457
  415530:	and    ebp,DWORD PTR [ebp+ecx*1-0x74]
  415534:	jp     0x4154e2
  415536:	pop    edx
  415537:	or     DWORD PTR [eax],esi
  415539:	sbb    DWORD PTR [ecx],edi
  41553b:	ror    ah,cl
  41553d:	cmp    eax,0x973a7236
  415542:	shl    BYTE PTR [edi+0x9],cl
  415545:	pop    ebp
  415546:	pop    ebp
  415547:	xor    DWORD PTR [esi-0x62],esi
  41554a:	aad    0x7b
  41554c:	ins    BYTE PTR es:[edi],dx
  41554d:	ficom  DWORD PTR [ebx-0x3e]
  415550:	fs sbb al,0x10
  415553:	sbb    ebp,edi
  415555:	stc    
  415556:	jle    0x41551b
  415558:	adc    al,0xde
  41555a:	inc    edx
  41555b:	stos   BYTE PTR es:[edi],al
  41555c:	jo     0x41558a
  41555e:	stos   BYTE PTR es:[edi],al
  41555f:	aam    0xdd
  415561:	mov    cl,0xe2
  415563:	(bad)  
  415564:	fwait
  415565:	mov    ds:0xc58e8f60,eax
  41556a:	pop    eax
  41556b:	mov    ds:0x55c89b41,al
  415570:	scas   al,BYTE PTR es:[edi]
  415571:	mov    edi,0x99c82579
  415576:	push   edx
  415577:	jno    0x415554
  415579:	pop    ecx
  41557a:	int    0x41
  41557c:	xchg   DWORD PTR [ecx],eax
  41557e:	mov    ebx,0x341bfb7
  415583:	add    BYTE PTR [edi+0x0],bl
  415586:	fwait
  415587:	call   0xac4f:0x1f161e22
  41558e:	and    BYTE PTR [edx-0x299dac14],ah
  415594:	mov    edi,0xcc25734d
  415599:	mov    edi,0xc6ff8337
  41559e:	loop   0x415522
  4155a0:	mov    esp,0x168c3080
  4155a5:	push   ecx
  4155a6:	cmp    dl,BYTE PTR [ebx]
  4155a8:	mov    cl,0x80
  4155aa:	arpl   WORD PTR [ecx*4+0x2d39abce],bx
  4155b1:	(bad)
  4155b5:	ret    
  4155b6:	loopne 0x415616
  4155b8:	outs   dx,DWORD PTR ds:[esi]
  4155b9:	pusha  
  4155ba:	ret    
  4155bb:	mov    ch,0x2b
  4155bd:	mov    esi,0x9755eae9
  4155c2:	jge    0x415638
  4155c4:	mov    esi,0xcda38fa3
  4155c9:	stc    
  4155ca:	fsubr  st,st(5)
  4155cc:	push   ss
  4155cd:	call   0xc5cc3bab
  4155d2:	and    eax,ebp
  4155d4:	fldcw  WORD PTR [edx-0x5b]
  4155d7:	repz lea esi,[esi+0x7c]
  4155db:	lock dec esp
  4155dd:	test   BYTE PTR ds:[esi-0x7f],dh
  4155e1:	addr16 leave 
  4155e3:	sub    eax,0x29e8101d
  4155e8:	das    
  4155e9:	and    ecx,ecx
  4155eb:	inc    edi
  4155ec:	or     DWORD PTR [esi],0xbe73c5ee
  4155f2:	xor    eax,DWORD PTR [ebp+0x3e]
  4155f5:	mov    esp,?
  4155f7:	pop    es
  4155f8:	fidivr DWORD PTR [ecx-0x628b88e3]
  4155fe:	sahf   
  4155ff:	fstp   QWORD PTR [edi]
  415601:	push   0xb558e804
  415606:	shl    BYTE PTR [ecx+ecx*2-0x5f],0x38
  41560b:	sub    ch,BYTE PTR [ebx]
  41560d:	jmp    0xfca2:0x1437d961
  415614:	cld    
  415615:	cli    
  415616:	jg     0x4155ea
  415618:	pop    ss
  415619:	in     al,dx
  41561a:	mov    ch,bh
  41561c:	push   esp
  41561d:	std    
  41561e:	push   ebp
  41561f:	aad    0xae
  415621:	lock jno 0x4155ef
  415624:	das    
  415625:	(bad)  
  415626:	fimul  DWORD PTR [ebx+0x17d7239e]
  41562c:	enter  0x3e8f,0xe3
  415630:	add    eax,0x5e16b036
  415635:	fld    DWORD PTR [ecx]
  415637:	call   0x85b4bb7
  41563c:	dec    esi
  41563d:	dec    ebp
  41563e:	jb     0x4156aa
  415640:	rcr    BYTE PTR [eax],1
  415642:	mov    ah,0xc5
  415644:	lods   eax,DWORD PTR ds:[esi]
  415645:	inc    ecx
  415646:	mov    eax,0xa131f28f
  41564b:	push   eax
  41564c:	test   DWORD PTR [eax+ecx*2],esp
  41564f:	sub    ecx,ecx
  415651:	mov    cl,0xd0
  415653:	imul   ebp,DWORD PTR [eax-0x4e],0xffffffcf
  415657:	lahf   
  415658:	jmp    0xf6cbf5ab
  41565d:	mov    dl,0x1b
  41565f:	cmp    eax,DWORD PTR [edi-0x58]
  415662:	test   al,0xc1
  415664:	pop    esp
  415665:	adc    BYTE PTR [esi],ch
  415667:	fidivr WORD PTR [edx+0x4b]
  41566a:	ins    BYTE PTR es:[edi],dx
  41566b:	ret    0x8065
  41566e:	lds    edx,FWORD PTR [edx-0x68]
  415671:	push   esi
  415672:	push   eax
  415673:	fwait
  415674:	pop    ds
  415675:	rcl    DWORD PTR ds:0xf5a6f657,0x92
  41567c:	cmp    BYTE PTR [eax-0x6b28d1ea],al
  415682:	scas   eax,DWORD PTR es:[edi]
  415683:	div    DWORD PTR [ebx-0x50e669e9]
  415689:	or     edx,DWORD PTR [ebx+0x26]
  41568c:	out    0x8,eax
  41568e:	mov    ds:0x824f3d0f,al
  415693:	dec    ecx
  415694:	popa   
  415695:	pop    edi
  415696:	dec    esi
  415697:	ins    BYTE PTR es:[edi],dx
  415698:	in     eax,0x6b
  41569a:	fiadd  WORD PTR ds:0x13db26a
  4156a0:	cmp    eax,0xeb57a043
  4156a5:	stc    
  4156a6:	ss sub eax,0xf297f872
  4156ac:	fwait
  4156ad:	jae    0x415701
  4156af:	scas   eax,DWORD PTR es:[edi]
  4156b0:	mov    ds:0xd4ae31ae,al
  4156b5:	test   al,0x68
  4156b7:	add    al,0x80
  4156b9:	pop    esp
  4156ba:	push   esi
  4156bb:	sub    DWORD PTR es:[edi+0xc11f58],ebp
  4156c2:	jecxz  0x4156cc
  4156c4:	or     DWORD PTR [edi-0x53c68970],ebx
  4156ca:	sbb    edx,ebp
  4156cc:	je     0x41569b
  4156ce:	sub    BYTE PTR [ebx],al
  4156d0:	das    
  4156d1:	inc    ebp
  4156d2:	jmp    0x889f:0x5864aa9f
  4156d9:	jmp    0xb1fc:0x6b302240
  4156e0:	rcl    DWORD PTR [ecx],cl
  4156e2:	sbb    eax,0xc5949ba0
  4156e7:	leave  
  4156e8:	xchg   BYTE PTR [esi],cl
  4156ea:	mov    ds:0x1e39d8d9,eax
  4156ef:	jae    0x41576f
  4156f1:	scas   al,BYTE PTR es:[edi]
  4156f2:	push   eax
  4156f4:	out    dx,al
  4156f5:	fisubr WORD PTR [ebp-0xd]
  4156f8:	test   BYTE PTR [bp-0x5f8],cl
  4156fd:	mov    esp,0x4f177570
  415702:	sub    DWORD PTR [ebp-0x22],esp
  415705:	jge    0x4156e6
  415707:	push   ecx
  415708:	pop    ds
  415709:	push   edi
  41570a:	(bad)  [edx-0x3e]
  41570d:	test   DWORD PTR [edx],0x544c864
  415713:	sbb    dh,BYTE PTR [ecx]
  415715:	clc    
  415716:	xchg   esi,eax
  415717:	mov    ebx,0xaa10fb6
  41571c:	cmp    dl,BYTE PTR [ecx-0x65]
  41571f:	mov    eax,0xab96803d
  415724:	sub    DWORD PTR [ecx+0x51],ecx
  415727:	sub    eax,0xf61f4b8d
  41572c:	jecxz  0x415774
  41572e:	data16 sub cl,bl
  415731:	pusha  
  415732:	cmp    bh,cl
  415734:	lea    ebx,[eax+0x4196338e]
  41573a:	aad    0x63
  41573c:	xor    eax,0x4d154b50
  415741:	ja     0x415760
  415743:	xor    dh,0x10
  415746:	(bad)  
  415747:	je     0x4156eb
  415749:	adc    eax,0xa0eec198
  41574e:	outs   dx,DWORD PTR ds:[esi]
  41574f:	lods   al,BYTE PTR ds:[esi]
  415750:	mov    edi,0xade6081
  415755:	and    al,0x3c
  415757:	mov    edi,0xa17a7387
  41575c:	jae    0x41579d
  41575e:	je     0x41574b
  415760:	call   0xaacd:0x55a4b20b
  415767:	test   al,bl
  415769:	jno    0x415748
  41576b:	sub    DWORD PTR ds:0xee9dc22f,0x19
  415772:	mov    bh,0x24
  415774:	pop    ebx
  415775:	leave  
  415776:	jns    0x4157a0
  415778:	lods   eax,DWORD PTR ds:[esi]
  415779:	mov    ecx,DWORD PTR [esi+0x7d]
  41577c:	rol    BYTE PTR [eax+0x346ce1f2],1
  415782:	retf   
  415783:	sub    al,0xf0
  415785:	call   0xbc09865e
  41578a:	lods   eax,DWORD PTR ds:[esi]
  41578b:	and    ch,ah
  41578d:	push   edx
  41578e:	mov    ebp,0x50fb7f23
  415793:	mov    esp,0x13cfdd1b
  415798:	mov    WORD PTR [edx],gs
  41579a:	xchg   esp,eax
  41579b:	mov    ah,0xd9
  41579d:	mov    bh,0xa9
  41579f:	call   FWORD PTR [esi-0x630750e7]
  4157a5:	sbb    dh,BYTE PTR [edx-0x3597e66b]
  4157ab:	ret    0x1acb
  4157ae:	fs call 0xa911:0x8dff3d2b
  4157b6:	jl     0x41574c
  4157b8:	push   0xffffff9b
  4157ba:	das    
  4157bb:	or     eax,0x157eac01
  4157c0:	fwait
  4157c1:	cmp    bh,cl
  4157c3:	test   al,0x59
  4157c5:	dec    edi
  4157c6:	lods   al,BYTE PTR ds:[esi]
  4157c7:	mov    gs,WORD PTR [ecx-0x6bfe908a]
  4157cd:	add    al,cl
  4157cf:	pop    edx
  4157d0:	jb     0x4157ee
  4157d2:	mov    DWORD PTR [edx-0x3f],edi
  4157d5:	lods   eax,DWORD PTR ds:[esi]
  4157d6:	dec    esp
  4157d7:	sub    bh,BYTE PTR [ebx+esi*1]
  4157da:	pop    edi
  4157db:	jno    0x415763
  4157dd:	cmc    
  4157de:	pop    ss
  4157df:	lea    eax,[ecx]
  4157e1:	adc    DWORD PTR [ecx],ecx
  4157e3:	adc    ebp,DWORD PTR [esi+0x6b]
  4157e6:	cwde   
  4157e7:	sti    
  4157e8:	dec    edi
  4157e9:	(bad)  
  4157ea:	call   FWORD PTR [ecx]
  4157ec:	(bad)  
  4157ed:	in     eax,dx
  4157ee:	call   0xd9e0:0xddae911d
  4157f5:	addr16 dec edx
  4157f7:	push   es
  4157f8:	repz es sub ch,cl
  4157fc:	(bad)  
  4157fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157ff:	push   esp
  415800:	inc    esi
  415801:	outs   dx,BYTE PTR ds:[esi]
  415802:	push   esi
  415803:	dec    esi
  415804:	adc    DWORD PTR [eax-0x1c7ec135],ebp
  41580a:	push   0xffffffe7
  41580c:	sbb    edi,ecx
  41580e:	ret    
  41580f:	in     al,0xf9
  415811:	jmp    0xe57c2f70
  415816:	das    
  415817:	fsub   DWORD PTR [edx-0x6f]
  41581a:	pop    ecx
  41581b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41581c:	adc    ch,bl
  41581e:	mov    bl,BYTE PTR [ecx+0x14]
  415821:	std    
  415822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415823:	sub    DWORD PTR [ebx+0x36e86ace],esi
  415829:	or     BYTE PTR [ebx+0x4d],bl
  41582c:	fsub   QWORD PTR [ecx-0x6e347e1d]
  415832:	dec    eax
  415833:	icebp  
  415834:	and    DWORD PTR [eax-0x4b],ecx
  415837:	fsubp  st(2),st
  415839:	mov    ecx,0x837bf67a
  41583e:	out    dx,al
  41583f:	retf   
  415840:	pop    ss
  415841:	dec    esp
  415842:	retf   
  415843:	add    bl,BYTE PTR [eax-0x6e]
  415846:	scas   al,BYTE PTR es:[edi]
  415847:	jmp    0x28e7:0xcedce3d2
  41584e:	in     eax,0x84
  415850:	jge    0x4157da
  415852:	add    al,0x63
  415854:	int3   
  415855:	aad    0x34
  415857:	sbb    eax,0xbd20e435
  41585c:	pop    ss
  41585d:	sbb    eax,0x79901728
  415862:	mov    ds:0x4658829,al
  415867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415868:	les    ebx,FWORD PTR [ecx-0x590b0705]
  41586e:	pop    ebx
  41586f:	inc    ebx
  415870:	sub    eax,0x5444d0b6
  415875:	and    bl,BYTE PTR [ebx-0x75]
  415878:	mov    ds:0xe83bd9b9,eax
  41587d:	leave  
  41587e:	add    edi,DWORD PTR [edi+0x57e492f0]
  415884:	and    DWORD PTR [eax+0x21f23370],eax
  41588a:	or     DWORD PTR [ebp-0x2da0abd0],ecx
  415890:	jo     0x4158fb
  415892:	aad    0xe2
  415894:	xor    al,0x0
  415896:	fstp   QWORD PTR ds:0x7dc2e989
  41589c:	fwait
  41589d:	jp     0x415870
  41589f:	and    al,0x29
  4158a1:	je     0x4158d8
  4158a3:	es xchg ecx,eax
  4158a5:	sbb    eax,0x232f8356
  4158aa:	(bad)  
  4158ab:	sbb    BYTE PTR ds:0x372bf0c1,al
  4158b1:	mov    ds:0x734e9511,eax
  4158b6:	fbstp  TBYTE PTR [edi+eax*8-0xa]
  4158ba:	(bad)  
  4158bb:	icebp  
  4158bc:	cli    
  4158bd:	jp     0x415860
  4158bf:	and    cl,0xa6
  4158c2:	mov    DWORD PTR [edx-0x5f],ebp
  4158c5:	xchg   esi,eax
  4158c6:	sbb    eax,DWORD PTR [ecx]
  4158c8:	scas   eax,DWORD PTR es:[edi]
  4158c9:	add    esp,0xba2cd1
  4158cf:	inc    ebx
  4158d0:	je     0x415865
  4158d2:	scas   eax,DWORD PTR es:[edi]
  4158d3:	shl    eax,1
  4158d5:	jp     0x4158f4
  4158d7:	jl     0x41585e
  4158d9:	mov    esi,0x516c30af
  4158de:	jge    0x415885
  4158e0:	sub    eax,ecx
  4158e2:	ret    0x3597
  4158e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158e6:	push   ds
  4158e7:	mov    ebp,0x3c24b92f
  4158ec:	mov    WORD PTR [edx-0x41cf8081],fs
  4158f2:	mov    ecx,0x23960244
  4158f7:	leave  
  4158f8:	fidivr DWORD PTR [ecx+0x4f]
  4158fb:	ret    
  4158fc:	out    dx,al
  4158fd:	arpl   WORD PTR [edx+0x38],bx
  415900:	sti    
  415901:	and    ebx,DWORD PTR [ecx-0x231ae6e7]
  415907:	mov    dl,0xe9
  415909:	jno    0x415917
  41590b:	mov    eax,0x9a436cd6
  415910:	mov    gs,WORD PTR [eax+0x3ff6664]
  415916:	into   
  415917:	imul   ebp,ebp,0xd9993c56
  41591d:	test   ch,dh
  41591f:	rcl    eax,0x4c
  415922:	jne    0x415932
  415924:	add    al,0x29
  415926:	test   DWORD PTR [edi-0x2],ecx
  415929:	sub    edi,DWORD PTR [edi+0x5acf5ff9]
  41592f:	sub    ah,ah
  415931:	mov    dh,0x27
  415933:	fidiv  DWORD PTR [ebx]
  415935:	sti    
  415936:	scas   al,BYTE PTR es:[edi]
  415937:	cmp    ebp,DWORD PTR [ebx]
  415939:	rol    DWORD PTR [ebp-0x6d],cl
  41593c:	push   edx
  41593d:	dec    eax
  41593e:	dec    eax
  41593f:	sbb    BYTE PTR [eax+ebp*1],ch
  415942:	fwait
  415943:	retf   
  415944:	lea    esp,[ebx]
  415946:	xor    al,0x25
  415948:	add    DWORD PTR [edi],0xa02fb129
  41594e:	jne    0x4158d4
  415950:	mov    eax,0xfac1de6f
  415955:	and    al,0x5d
  415957:	push   esi
  415958:	mov    bh,BYTE PTR [esi-0x31be24ca]
  41595e:	xchg   esp,eax
  41595f:	xchg   ebx,eax
  415960:	(bad)  
  415961:	fnstcw WORD PTR [ebx+esi*2-0x69f13b21]
  415968:	ret    
  415969:	and    eax,0xcb0ee26f
  41596e:	push   esi
  41596f:	dec    ecx
  415970:	and    eax,0x9e2dd0d8
  415975:	mov    ds:0x4f7ecc2f,eax
  41597a:	nop
  41597b:	lds    edi,FWORD PTR [edx+ebp*2-0x31]
  41597f:	into   
  415980:	stos   DWORD PTR es:[edi],eax
  415981:	push   es
  415982:	push   0x46
  415984:	js     0x41594a
  415986:	inc    ecx
  415987:	sub    BYTE PTR [eax-0x78107e8d],bh
  41598d:	mov    es,WORD PTR [ebx-0x1c]
  415990:	int    0xc5
  415992:	jbe    0x4159fc
  415994:	xor    eax,0xcd2745c
  415999:	(bad)  
  41599a:	push   0xffffffd9
  41599c:	stos   BYTE PTR es:[edi],al
  41599d:	cmp    eax,0xdd229cb
  4159a2:	and    al,0x1a
  4159a4:	xchg   edi,eax
  4159a5:	fnstcw WORD PTR ds:0x9c1b4c40
  4159ab:	jge    0x415975
  4159ad:	mov    esp,0x72ebcfcc
  4159b2:	into   
  4159b3:	std    
  4159b4:	test   eax,0xf33c57e8
  4159b9:	stc    
  4159ba:	mov    dl,0x19
  4159bc:	mov    ?,WORD PTR [ebx]
  4159be:	sbb    eax,DWORD PTR [esi-0x7b3c9a9d]
  4159c4:	sub    al,0xc8
  4159c6:	call   0xfae21250
  4159cb:	ret    0xea34
  4159ce:	(bad)  
  4159cf:	mov    edx,0x5838d3be
  4159d4:	int3   
  4159d5:	xchg   ebx,eax
  4159d6:	ss dec edi
  4159d8:	das    
  4159d9:	jnp    0x415972
  4159db:	loope  0x415a4c
  4159dd:	jbe    0x4159b2
  4159df:	adc    dl,BYTE PTR [esi]
  4159e1:	push   ds
  4159e2:	jns    0x4159b9
  4159e4:	mov    al,0x91
  4159e6:	or     DWORD PTR [esi+ebx*1],ebp
  4159e9:	popf   
  4159ea:	or     al,0xcd
  4159ec:	fnstcw WORD PTR [esi]
  4159ee:	and    eax,0x5f327f5b
  4159f3:	mov    ch,0xc7
  4159f5:	lods   eax,DWORD PTR ds:[esi]
  4159f6:	sub    al,0x50
  4159f8:	in     al,0x57
  4159fa:	and    eax,0x64c9ad36
  4159ff:	mov    DWORD PTR [eax+0x141299a0],ecx
  415a05:	imul   esi,DWORD PTR [ebp+0x1c],0x73
  415a09:	adc    DWORD PTR [edi+esi*8],ebx
  415a0c:	repnz and al,0x1
  415a0f:	gs in  al,0x82
  415a12:	pusha  
  415a13:	rol    DWORD PTR [ebx+0x25],cl
  415a16:	and    al,0xa9
  415a18:	call   0x2019:0xa6936a3b
  415a1f:	or     eax,0xebba6843
  415a24:	sub    dh,BYTE PTR [eax+0x98d5c2b]
  415a2a:	sbb    DWORD PTR [ecx-0x79a5702d],edi
  415a30:	stc    
  415a31:	retf   0xc9c8
  415a34:	sub    ebp,DWORD PTR ds:0xc37e9a9b
  415a3a:	dec    ebp
  415a3b:	mov    eax,ds:0xa746e071
  415a40:	int3   
  415a41:	popf   
  415a42:	popf   
  415a43:	dec    edx
  415a44:	push   edi
  415a45:	jg     0x4159d5
  415a47:	inc    ebp
  415a48:	stc    
  415a49:	test   ecx,edi
  415a4b:	das    
  415a4c:	pop    ss
  415a4d:	lahf   
  415a4e:	rcl    DWORD PTR ds:0xcc32fbac,cl
  415a54:	inc    ecx
  415a55:	xchg   DWORD PTR [ecx-0x2f],esp
  415a58:	leave  
  415a59:	jae    0x415a53
  415a5b:	enter  0x78d0,0xea
  415a5f:	adc    ebp,ebx
  415a61:	mov    bh,0x1a
  415a63:	pop    ds
  415a64:	push   edx
  415a65:	xchg   ebp,eax
  415a66:	aas    
  415a67:	jecxz  0x415a7f
  415a69:	into   
  415a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a6b:	add    DWORD PTR [ebx+0x29],0x7c77aa19
  415a72:	fsub   st,st(3)
  415a74:	adc    DWORD PTR [ebp-0x17118bfc],esp
  415a7a:	jmp    0x415a39
  415a7c:	sbb    eax,0xea8d073
  415a81:	je     0x415a55
  415a83:	cs ins DWORD PTR es:[edi],dx
  415a85:	mov    dh,0x27
  415a87:	pop    eax
  415a88:	mov    ebp,0x5e7f02fd
  415a8d:	push   ebx
  415a8e:	retf   
  415a8f:	and    eax,0x34f1f4b8
  415a94:	xchg   edx,edx
  415a96:	loopne 0x415a38
  415a98:	inc    esi
  415a99:	aad    0x8f
  415a9b:	aam    0x87
  415a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a9e:	inc    edi
  415a9f:	xor    bl,BYTE PTR [ecx+0x4107dae2]
  415aa5:	and    ch,bh
  415aa7:	retf   0x25fb
  415aaa:	mov    dh,0x2d
  415aac:	rcr    cl,cl
  415aae:	cmp    BYTE PTR [ebp-0x59],bl
  415ab1:	jnp    0x415a89
  415ab3:	aad    0x89
  415ab5:	leave  
  415ab6:	not    BYTE PTR [edx+0x13b32394]
  415abc:	fsub   st(0),st
  415abe:	push   es
  415abf:	mov    ebx,0x620a01dc
  415ac4:	mov    WORD PTR [edi],ds
  415ac6:	fwait
  415ac7:	and    BYTE PTR [ebp-0x51],ch
  415aca:	add    al,0x19
  415acc:	xor    eax,0xc3a33cf1
  415ad1:	pop    esi
  415ad2:	mov    esi,0x7b07a717
  415ad7:	push   eax
  415ad8:	mov    ch,0xd6
  415ada:	push   es
  415adb:	jle    0x415b0f
  415add:	jnp    0x415af1
  415adf:	das    
  415ae0:	imul   edx,DWORD PTR [edx],0xffffffc5
  415ae3:	mov    WORD PTR [esi+0x30],ss
  415ae6:	push   esi
  415ae7:	ins    DWORD PTR es:[edi],dx
  415ae8:	and    eax,0x8cda49d4
  415aed:	sub    DWORD PTR [edx+0x3cf417b2],ebx
  415af3:	mov    ecx,0x44075821
  415af8:	add    al,0x64
  415afa:	or     BYTE PTR [edx+0xb],dh
  415afd:	cmp    BYTE PTR [esp+ebp*1],dl
  415b00:	mov    edi,0xb7b5a0a7
  415b05:	jle    0x415b03
  415b07:	cwde   
  415b08:	scas   eax,DWORD PTR es:[edi]
  415b09:	ss ret 
  415b0b:	xor    DWORD PTR [eax],0x51398bf1
  415b11:	xor    eax,0x952ec876
  415b16:	cmp    al,0x7b
  415b18:	jge    0x415b82
  415b1a:	pop    eax
  415b1b:	cmp    ch,BYTE PTR [esi-0x7290143f]
  415b21:	sbb    eax,0x794405c5
  415b26:	mov    bh,0x43
  415b28:	mov    BYTE PTR [ecx+esi*4],bl
  415b2b:	(bad)  
  415b2c:	arpl   WORD PTR [edi],bx
  415b2e:	pop    ss
  415b2f:	ror    edi,1
  415b31:	lahf   
  415b32:	aaa    
  415b33:	xor    edx,edi
  415b35:	ss dec ecx
  415b37:	push   ss
  415b38:	out    dx,eax
  415b39:	sbb    esp,ebp
  415b3b:	les    esp,FWORD PTR [ecx-0x56d969eb]
  415b41:	jg     0x415b31
  415b43:	xor    edi,DWORD PTR [eax-0x6e13ebe4]
  415b49:	fxch   st(7)
  415b4b:	or     al,0x91
  415b4d:	loopne 0x415b33
  415b4f:	xchg   ebx,eax
  415b50:	dec    edx
  415b51:	pop    edi
  415b52:	dec    edx
  415b53:	xor    BYTE PTR [edx+0xf],0xe
  415b57:	xchg   DWORD PTR [eax],edx
  415b59:	mov    DWORD PTR [edi],ebp
  415b5b:	ror    ecx,1
  415b5d:	push   esi
  415b5e:	mov    BYTE PTR [edx],bh
  415b60:	repz std 
  415b62:	stc    
  415b63:	push   0x67
  415b65:	mov    ecx,DWORD PTR [ecx]
  415b67:	cmp    dl,dh
  415b69:	rcl    DWORD PTR [ebx+0x3a],cl
  415b6c:	fdivr  st,st(3)
  415b6e:	xchg   esi,eax
  415b6f:	xchg   DWORD PTR [ecx+eiz*2-0x6d4bfb14],esi
  415b76:	jns    0x415bd4
  415b78:	cmp    BYTE PTR [ebp+ebp*8-0x15e9a309],dh
  415b7f:	xchg   ebp,eax
  415b80:	mov    DWORD PTR [ebx+eiz*8-0x30],edi
  415b84:	xor    BYTE PTR [ecx],bl
  415b86:	pop    edi
  415b87:	xchg   edx,eax
  415b88:	ficomp DWORD PTR [ecx+0x44e9b05b]
  415b8e:	jb     0x415bf0
  415b90:	imul   ecx,DWORD PTR [ebx],0x37
  415b93:	mov    ds:0x3f0db1d3,al
  415b98:	into   
  415b99:	mov    eax,ebx
  415b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b9c:	xchg   ebx,eax
  415b9d:	stc    
  415b9e:	fld    QWORD PTR ds:0x2db6cd21
  415ba4:	dec    esi
  415ba5:	pop    ebp
  415ba6:	cmp    al,0x7d
  415ba8:	shl    DWORD PTR [esi-0x32],cl
  415bab:	pop    eax
  415bac:	adc    BYTE PTR [edi+0x29],bh
  415baf:	xchg   BYTE PTR [ebx+0x2efda4a2],al
  415bb5:	mov    esp,0xa07b0297
  415bba:	mov    ds,WORD PTR [ebp+0x19]
  415bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bbe:	pop    ss
  415bbf:	pop    ebp
  415bc0:	jmp    0x3faf:0x4ceaf706
  415bc7:	imul   DWORD PTR es:[ebx]
  415bca:	mov    edx,0x40548a40
  415bcf:	in     al,0xb7
  415bd1:	das    
  415bd2:	add    ebx,esi
  415bd4:	push   ebx
  415bd5:	mov    dl,0x85
  415bd7:	xor    BYTE PTR [edi-0x2d2dd36f],al
  415bdd:	cmp    al,0xe3
  415bdf:	pop    es
  415be0:	inc    ecx
  415be1:	stos   BYTE PTR es:[edi],al
  415be2:	mov    dh,0xb2
  415be4:	pop    ss
  415be5:	out    dx,eax
  415be6:	lods   al,BYTE PTR ds:[esi]
  415be7:	xor    dh,BYTE PTR [esi+0x5d]
  415bea:	pop    edx
  415beb:	pop    ebp
  415bec:	mov    eax,0xe9bc741b
  415bf1:	lods   al,BYTE PTR ds:[esi]
  415bf2:	cmp    ch,bh
  415bf4:	sbb    al,0xc1
  415bf6:	(bad)  
  415bf7:	mov    edx,0x2dc56830
  415bfc:	shr    ah,0xe6
  415bff:	xchg   DWORD PTR [ecx-0x6138174f],ebx
  415c05:	add    DWORD PTR [edi+0x1cc31ef7],edx
  415c0b:	pusha  
  415c0c:	xchg   edx,eax
  415c0d:	fdiv   QWORD PTR [eax-0x5bd5accf]
  415c13:	sbb    ebp,DWORD PTR [edi]
  415c15:	cmc    
  415c16:	fs aam 0xa6
  415c19:	ret    
  415c1a:	xchg   ecx,eax
  415c1b:	mov    cl,0x60
  415c1d:	or     esp,DWORD PTR [ebx]
  415c1f:	dec    eax
  415c20:	les    eax,FWORD PTR [ebp-0x7d289214]
  415c26:	loop   0x415bd9
  415c28:	cli    
  415c29:	(bad)  
  415c2a:	aad    0x17
  415c2c:	mov    cl,0x97
  415c2e:	out    0xdd,eax
  415c30:	or     edi,DWORD PTR [ebx]
  415c32:	ins    DWORD PTR es:[edi],dx
  415c33:	ins    BYTE PTR es:[edi],dx
  415c34:	ins    BYTE PTR es:[edi],dx
  415c35:	xor    esp,DWORD PTR [ecx-0x125cdf17]
  415c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c3c:	push   esp
  415c3d:	jo     0x415c58
  415c3f:	out    0xb5,al
  415c41:	call   0xb90d496d
  415c46:	(bad)  
  415c47:	fimul  DWORD PTR [eax-0x2f880c6a]
  415c4d:	in     eax,0x89
  415c4f:	arpl   dx,dx
  415c51:	and    eax,0x528ba318
  415c56:	inc    eax
  415c57:	in     eax,0xf8
  415c59:	in     eax,dx
  415c5a:	repnz pop edi
  415c5c:	fsubr  QWORD PTR [edi+0x5841457c]
  415c62:	mov    BYTE PTR [edi-0xa],ah
  415c65:	adc    DWORD PTR [edx-0x2f41a0f1],ecx
  415c6b:	or     cl,ah
  415c6d:	test   al,0xb3
  415c6f:	or     cl,BYTE PTR [ebx]
  415c71:	xor    DWORD PTR [esi+ebx*2],esp
  415c74:	adc    BYTE PTR [esi-0xa04e893],0x78
  415c7b:	mov    ah,0x6b
  415c7d:	inc    eax
  415c7e:	mov    al,0xa8
  415c80:	dec    esp
  415c81:	xor    DWORD PTR [ebp-0x1],esi
  415c84:	pop    ebx
  415c85:	or     eax,0x61b2c943
  415c8a:	mov    esi,0x7d40ae83
  415c8f:	mov    dh,0xfb
  415c91:	retf   0xae68
  415c94:	xor    ecx,DWORD PTR [ecx-0x75166a65]
  415c9a:	adc    BYTE PTR [ecx],ch
  415c9c:	(bad)  
  415c9e:	scas   eax,DWORD PTR es:[edi]
  415c9f:	xor    ebx,DWORD PTR [ebx]
  415ca1:	outs   dx,BYTE PTR ds:[esi]
  415ca2:	inc    esp
  415ca3:	ret    
  415ca4:	jnp    0x415c52
  415ca6:	sbb    DWORD PTR ds:[edi-0x32],esi
  415caa:	ss xor edi,eax
  415cad:	pop    esi
  415cae:	pop    edx
  415caf:	jl     0x415c99
  415cb1:	inc    esi
  415cb2:	ins    DWORD PTR es:[edi],dx
  415cb3:	jg     0x415c6b
  415cb5:	jmp    0x276bf300
  415cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cbb:	mov    cl,0x28
  415cbd:	pop    ds
  415cbe:	test   eax,0xaa2310fa
  415cc3:	xlat   BYTE PTR ds:[ebx]
  415cc4:	push   esi
  415cc5:	mov    ebp,0xacf7c910
  415cca:	mov    esp,0x70d1e8ce
  415ccf:	ins    BYTE PTR es:[edi],dx
  415cd0:	cmp    ebp,ecx
  415cd2:	push   eax
  415cd3:	sub    DWORD PTR [edx-0x71],esp
  415cd6:	enter  0xa113,0x71
  415cda:	outs   dx,BYTE PTR ds:[esi]
  415cdb:	xor    bl,BYTE PTR [ecx+0x6d]
  415cde:	in     eax,0x7c
  415ce0:	add    al,0xe
  415ce2:	mov    cl,0x18
  415ce4:	ins    DWORD PTR es:[edi],dx
  415ce5:	inc    eax
  415ce6:	pusha  
  415ce7:	or     edx,edi
  415ce9:	sbb    al,0xe9
  415ceb:	pop    ecx
  415cec:	xor    eax,0x80c0c8d3
  415cf1:	adc    al,0x79
  415cf3:	cld    
  415cf4:	mov    ecx,0xd05cd540
  415cf9:	xchg   esp,eax
  415cfa:	shl    DWORD PTR [edx],1
  415cfc:	test   DWORD PTR [edx],0xee0453f5
  415d02:	and    dh,BYTE PTR [ecx-0x19]
  415d05:	push   ebx
  415d06:	sbb    edx,DWORD PTR [ebp+0x725e8c85]
  415d0c:	mov    ds:0xaaeb423c,al
  415d11:	clc    
  415d12:	addr16 mov dl,0x79
  415d15:	pusha  
  415d16:	icebp  
  415d17:	pop    eax
  415d18:	mov    dh,0x4d
  415d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d1b:	(bad)  
  415d1c:	push   ds
  415d1d:	(bad)  
  415d1e:	sbb    eax,0x3d5e6df5
  415d23:	mov    ah,BYTE PTR [edx+0x3be9778b]
  415d29:	in     eax,dx
  415d2a:	and    BYTE PTR [ebx-0x63],bl
  415d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d2e:	add    al,0xf0
  415d30:	rcr    DWORD PTR [ecx],cl
  415d32:	xor    BYTE PTR [ebx+0x26],al
  415d35:	jecxz  0x415cc5
  415d37:	fldcw  WORD PTR [ecx]
  415d39:	test   BYTE PTR [edi+0x43],bh
  415d3c:	inc    edi
  415d3d:	ja     0x415cc8
  415d3f:	popf   
  415d40:	inc    ebp
  415d41:	sub    ebp,DWORD PTR [ecx-0x1f403f79]
  415d47:	pop    eax
  415d48:	lds    ecx,FWORD PTR [ebp+ebp*1+0x23c7e2d9]
  415d4f:	scas   eax,DWORD PTR es:[edi]
  415d50:	loope  0x415d64
  415d52:	or     edx,DWORD PTR [ebp+eiz*2-0x970d018]
  415d59:	jmp    0x69f8:0xa21f6b17
  415d60:	in     al,dx
  415d61:	or     bl,BYTE PTR [eax]
  415d63:	in     eax,0x5a
  415d65:	push   ds
  415d66:	pop    edx
  415d67:	ret    0xd7e2
  415d6a:	and    eax,0x980727c7
  415d6f:	in     al,dx
  415d70:	jno    0x415d48
  415d72:	scas   al,BYTE PTR es:[edi]
  415d73:	mov    bl,0x1e
  415d75:	call   0x658736ac
  415d7a:	xor    ebp,DWORD PTR [ebp-0x37e2439f]
  415d80:	icebp  
  415d81:	xor    al,0xf
  415d83:	adc    eax,0x35249138
  415d88:	aaa    
  415d89:	(bad)  
  415d8a:	fsub   QWORD PTR [ebx]
  415d8c:	int3   
  415d8d:	push   ds
  415d8e:	pop    edi
  415d8f:	retf   
  415d90:	jmp    0xe1b7:0xe5749561
  415d97:	mov    ds:0xaf8b77c7,ax
  415d9d:	out    dx,eax
  415d9e:	repnz mov dl,0x0
  415da1:	add    dh,BYTE PTR [eax+ebp*4]
  415da4:	jne    0x415e11
  415da6:	xor    BYTE PTR [edi],al
  415da8:	shl    DWORD PTR [esi],1
  415daa:	mov    esp,0x8cf60b4e
  415daf:	js     0x415deb
  415db1:	pop    eax
  415db2:	jg     0x415d72
  415db4:	sbb    eax,0x72cb203e
  415db9:	cdq    
  415dba:	cmp    bl,BYTE PTR [ebx+0x2f]
  415dbd:	ror    bh,0x5b
  415dc0:	test   BYTE PTR [edi-0x6e],bl
  415dc3:	inc    ecx
  415dc4:	fwait
  415dc5:	and    BYTE PTR [eax-0x3c410ec3],bl
  415dcb:	push   eax
  415dcc:	ins    DWORD PTR es:[edi],dx
  415dcd:	fsubr  DWORD PTR [edi-0x2eccf174]
  415dd3:	cmp    DWORD PTR [edx+0x2ea17516],esi
  415dd9:	daa    
  415dda:	push   cs
  415ddb:	into   
  415ddc:	xchg   ebx,eax
  415ddd:	or     esi,ebx
  415ddf:	iret   
  415de0:	pop    edx
  415de1:	jge    0x415d9f
  415de3:	xlat   BYTE PTR ds:[ebx]
  415de4:	mov    ?,WORD PTR [edx+0x710f09f8]
  415dea:	in     al,dx
  415deb:	call   0xe36f43c5
  415df0:	lds    esp,FWORD PTR [ebx-0x623d96b5]
  415df6:	sub    eax,0xe0ca5d15
  415dfb:	mov    cl,0xe3
  415dfd:	and    DWORD PTR [ecx],ecx
  415dff:	jge    0x415e07
  415e01:	xlat   BYTE PTR ds:[ebx]
  415e02:	out    0x3e,al
  415e04:	jae    0x415db1
  415e06:	stos   DWORD PTR es:[edi],eax
  415e07:	(bad)  
  415e08:	mov    ds:0xc1a184f3,al
  415e0d:	xlat   BYTE PTR ds:[ebx]
  415e0e:	fs sub esi,esi
  415e11:	aaa    
  415e12:	lock stos DWORD PTR es:[edi],eax
  415e14:	scas   eax,DWORD PTR es:[edi]
  415e15:	push   ss
  415e16:	ins    BYTE PTR es:[edi],dx
  415e17:	loop   0x415deb
  415e19:	lea    ecx,[eax+0x7e]
  415e1c:	daa    
  415e1d:	mov    DWORD PTR [ebx+esi*4+0x35],edi
  415e21:	jo     0x415db3
  415e23:	or     al,0xe7
  415e25:	les    ecx,FWORD PTR [esi+0x39]
  415e28:	cmp    al,0x80
  415e2a:	adc    BYTE PTR [edi],bl
  415e2c:	pop    ecx
  415e2d:	push   ebx
  415e2e:	jmp    0x1795:0x9b5e2e27
  415e35:	fist   WORD PTR [esi]
  415e37:	outs   dx,BYTE PTR ds:[esi]
  415e38:	xlat   BYTE PTR ds:[ebx]
  415e39:	xor    BYTE PTR [ecx+0x7b],ch
  415e3c:	mov    ds:0xf1fdd0c9,eax
  415e41:	xchg   edx,eax
  415e42:	sbb    eax,0x71567fa9
  415e47:	nop
  415e48:	push   esi
  415e49:	cld    
  415e4a:	mov    eax,0xb526458b
  415e4f:	sub    al,0x7c
  415e51:	mov    DWORD PTR [eax+0x61],edx
  415e54:	mov    esp,0xca22a285
  415e59:	in     eax,dx
  415e5a:	gs push ebp
  415e5c:	push   ecx
  415e5d:	fdiv   DWORD PTR cs:[eax]
  415e60:	xchg   ebx,eax
  415e61:	pop    ebp
  415e62:	scas   eax,DWORD PTR es:[edi]
  415e63:	add    al,0x50
  415e65:	push   edi
  415e66:	inc    ebp
  415e67:	mov    ch,0xde
  415e69:	pop    esp
  415e6a:	mov    bl,BYTE PTR [esi+ebx*2+0x4c18cbc]
  415e71:	dec    esp
  415e72:	repnz out 0x95,al
  415e75:	stc    
  415e76:	mov    ebp,0xd847b355
  415e7b:	mov    esp,0x2b9ec41f
  415e80:	lods   al,BYTE PTR ds:[esi]
  415e81:	jecxz  0x415ed2
  415e83:	mov    eax,ds:0xd9109022
  415e88:	jbe    0x415eac
  415e8a:	xchg   esp,eax
  415e8b:	pop    ebp
  415e8c:	jmp    0x47671a6f
  415e91:	loope  0x415e63
  415e93:	fs mov dl,0x7c
  415e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e97:	call   0xb425:0xf904b9b9
  415e9e:	mov    bl,0xe2
  415ea0:	leave  
  415ea1:	lods   al,BYTE PTR ds:[esi]
  415ea2:	lock cmp al,0x60
  415ea5:	loop   0x415e90
  415ea7:	in     eax,0x94
  415ea9:	add    al,0xba
  415eab:	sub    esp,DWORD PTR [eax+edx*4-0x13]
  415eaf:	imul   eax,DWORD PTR [esi-0x43],0x97e5ba0f
  415eb6:	jbe    0x415e5d
  415eb8:	fldcw  WORD PTR [esp+edx*1-0x564ac2a6]
  415ebf:	cmovns esi,DWORD PTR [ebx+0x46a42fad]
  415ec6:	leave  
  415ec7:	sbb    bh,BYTE PTR [edi]
  415ec9:	test   BYTE PTR [ebp-0xb],cl
  415ecc:	lods   eax,DWORD PTR ds:[esi]
  415ecd:	push   ecx
  415ece:	jbe    0x415eeb
  415ed0:	jne    0x415f2d
  415ed2:	mov    esi,0xdbbf20da
  415ed7:	(bad)  
  415ed8:	xor    ch,BYTE PTR [ebx-0x7a]
  415edb:	sub    al,0x3
  415edd:	mov    bl,0x46
  415edf:	xchg   ecx,eax
  415ee0:	xor    eax,edi
  415ee2:	xor    ebp,DWORD PTR [ebp+0x68748459]
  415ee8:	mov    eax,0x68256095
  415eed:	adc    ebx,0xffffffd3
  415ef0:	out    0x8a,eax
  415ef2:	int3   
  415ef3:	cmp    BYTE PTR [edi+eax*8],bl
  415ef6:	jp     0x415eb2
  415ef8:	cmp    al,0x30
  415efa:	push   edx
  415efb:	repnz fbstp TBYTE PTR [esp+edi*1-0x38]
  415f00:	out    0xc1,eax
  415f02:	jge    0x415ecd
  415f04:	cli    
  415f05:	inc    ebx
  415f06:	pop    ds
  415f07:	loope  0x415f0f
  415f09:	add    edx,DWORD PTR [ecx+0x2a3d3fc5]
  415f0f:	mov    DWORD PTR [edi+0x29],0xb0b68151
  415f16:	loope  0x415ea3
  415f18:	cmp    eax,0x3cb9a2b7
  415f1d:	jae    0x415f94
  415f1f:	cmp    bl,cl
  415f21:	pop    ebx
  415f22:	loopne 0x415f69
  415f24:	adc    esi,DWORD PTR [esi+0x6cd4f834]
  415f2a:	cwde   
  415f2b:	push   ss
  415f2c:	sbb    eax,0x1b1e8141
  415f31:	jge    0x415f07
  415f33:	jl     0x415fac
  415f35:	jg     0x415ec1
  415f37:	xchg   esp,eax
  415f38:	push   ebp
  415f39:	pop    ecx
  415f3a:	push   ecx
  415f3b:	mov    eax,ds
  415f3d:	iret   
  415f3e:	aam    0x86
  415f40:	dec    esp
  415f41:	mov    ch,0x1f
  415f43:	dec    ecx
  415f44:	cmp    edx,DWORD PTR [ebp+ecx*1-0x4e2088e1]
  415f4b:	sbb    al,0xbc
  415f4d:	scas   eax,DWORD PTR es:[edi]
  415f4e:	es and dl,ah
  415f51:	data16 jae 0x415f6b
  415f54:	sub    ebp,esi
  415f56:	imul   edi,esp,0x3e
  415f59:	imul   edi,edi,0xcc54b21f
  415f5f:	popf   
  415f60:	test   BYTE PTR [esi+0x17],ch
  415f63:	sbb    bh,ch
  415f65:	push   esi
  415f66:	cs push cx
  415f69:	mov    ds:0xd5e8968f,eax
  415f6e:	out    dx,eax
  415f6f:	dec    edx
  415f70:	add    BYTE PTR [ebx+0x607a02f4],dh
  415f76:	loop   0x415fed
  415f78:	lock ins DWORD PTR es:[edi],dx
  415f7a:	cmp    dh,BYTE PTR [ecx-0x5a]
  415f7d:	clc    
  415f7e:	ret    0x55e9
  415f81:	or     eax,0xa5bae174
  415f86:	sbb    al,0x91
  415f88:	xlat   BYTE PTR ds:[ebx]
  415f89:	pop    ebx
  415f8a:	mov    BYTE PTR [edi],cl
  415f8c:	fstp   DWORD PTR [ebx-0x5d]
  415f8f:	jno    0x415f42
  415f91:	retf   
  415f92:	pop    ebx
  415f93:	loopne 0x415fd1
  415f95:	jbe    0x415f5c
  415f97:	jge    0x415fa2
  415f99:	adc    DWORD PTR [ecx+0x407c3a3a],edx
  415f9f:	out    dx,al
  415fa0:	outs   dx,BYTE PTR ds:[esi]
  415fa1:	lea    esi,[ebx+0x761898b0]
  415fa7:	or     DWORD PTR [edx],0x20
  415faa:	mov    WORD PTR [edi],cs
  415fac:	aaa    
  415fad:	sub    ebp,0x5f
  415fb0:	rol    BYTE PTR [edx-0x18ad1bc2],1
  415fb6:	mov    esi,0xb82ae484
  415fbb:	jno    0x415fc7
  415fbd:	lods   al,BYTE PTR ds:[esi]
  415fbe:	mov    eax,0x542ae839
  415fc3:	shl    DWORD PTR [esi],cl
  415fc5:	mov    BYTE PTR [ecx+0x3d],bl
  415fc8:	pop    esp
  415fc9:	cmp    dl,BYTE PTR [esi+0x1014dff9]
  415fcf:	out    dx,eax
  415fd0:	(bad)  
  415fd1:	cmc    
  415fd2:	ja     0x416003
  415fd4:	cmp    eax,0xb07f2bf2
  415fd9:	je     0x416046
  415fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fdc:	push   esi
  415fdd:	push   0x7e
  415fdf:	or     bl,BYTE PTR [edi+0x28]
  415fe2:	leave  
  415fe3:	loopne 0x415ff7
  415fe5:	xchg   ebx,eax
  415fe6:	xor    eax,0x5b48df5c
  415feb:	jge    0x41605c
  415fed:	sahf   
  415fee:	dec    ebp
  415fef:	call   0x99dea550
  415ff4:	lock popf 
  415ff6:	fidivr DWORD PTR [edi-0x57]
  415ff9:	jno    0x415fa3
  415ffb:	mov    ecx,?
  415ffd:	cvtps2pd xmm7,QWORD PTR [edi-0x1b534091]
  416004:	daa    
  416005:	int    0xed
  416007:	pop    eax
  416008:	das    
  416009:	inc    ecx
  41600a:	push   eax
  41600b:	mov    ecx,0xb4c65136
  416010:	jp     0x416075
  416012:	fnsave es:[edi-0xbd6864]
  416019:	popf   
  41601a:	dec    ecx
  41601b:	inc    edi
  41601c:	scas   eax,DWORD PTR es:[edi]
  41601d:	xchg   esp,eax
  41601e:	out    0xc9,al
  416020:	mov    ebx,0xf3b4a31c
  416025:	mov    esp,0x45aabb0e
  41602a:	dec    ebp
  41602b:	outs   dx,BYTE PTR ds:[esi]
  41602c:	pushf  
  41602d:	lea    ecx,[edx+0x23fd1fb6]
  416033:	mov    eax,ds:0xfdbbb446
  416038:	nop
  416039:	test   al,0xd
  41603b:	lods   al,BYTE PTR ds:[esi]
  41603c:	pop    esp
  41603d:	imul   eax
  41603f:	jl     0x415fd5
  416041:	ficom  DWORD PTR [bx+di+0x799]
  416046:	sub    BYTE PTR [ebx-0x70],bh
  416049:	jmp    0x4160a2
  41604b:	mov    ecx,fs
  41604d:	jl     0x4160b6
  41604f:	push   esi
  416050:	mov    esp,0x32958175
  416055:	cmp    DWORD PTR [edi],esi
  416057:	loopne 0x416041
  416059:	push   ecx
  41605a:	adc    ebx,eax
  41605c:	inc    ecx
  41605d:	retf   
  41605e:	xlat   BYTE PTR ds:[ebx]
  41605f:	cli    
  416060:	xchg   esp,eax
  416061:	out    0x20,al
  416063:	jge    0x4160a0
  416065:	mov    DWORD PTR [eax-0x2a],ebp
  416068:	clc    
  416069:	repz sbb DWORD PTR [edi+0x1f],ecx
  41606d:	cmp    al,0xb4
  41606f:	mov    ebp,0x8d3aa246
  416074:	fsub   QWORD PTR es:[ebx-0xb]
  416078:	mov    DWORD PTR [esi+0x6e339919],eax
  41607e:	sbb    BYTE PTR [ebx+edi*1+0x67544170],dl
  416085:	and    DWORD PTR [ebp-0x70],esi
  416088:	addr16 loop 0x416077
  41608b:	enter  0x535e,0x1c
  41608f:	jae    0x4160f3
  416091:	mov    dh,0xd4
  416093:	or     edx,DWORD PTR [eax-0x46c6f60]
  416099:	mov    al,0x1d
  41609b:	jb     0x416111
  41609d:	data16 loope 0x416058
  4160a0:	pop    ebp
  4160a1:	sahf   
  4160a2:	mov    ds:0x27ccc9ed,eax
  4160a7:	or     al,0x24
  4160a9:	out    dx,eax
  4160aa:	inc    edi
  4160ab:	cmp    BYTE PTR [ebp-0x575891f9],0xf
  4160b2:	mov    eax,0xece45fc6
  4160b7:	or     eax,0x82307307
  4160bc:	xchg   ebp,eax
  4160bd:	cdq    
  4160be:	inc    ebx
  4160bf:	add    ch,ah
  4160c1:	js     0x416071
  4160c3:	xchg   edx,eax
  4160c4:	dec    edi
  4160c5:	xchg   ebx,eax
  4160c6:	inc    esi
  4160c7:	jnp    0x416087
  4160c9:	lahf   
  4160ca:	mov    ebp,0x7cd3607e
  4160cf:	jmp    0xdf99:0xb2bab8ed
  4160d6:	or     dl,ch
  4160d8:	jnp    0x4160a7
  4160da:	xor    DWORD PTR [eax+0x1d],edx
  4160dd:	sbb    ebx,esp
  4160df:	mov    ah,0xe2
  4160e1:	leave  
  4160e2:	imul   edi,DWORD PTR [eax],0xd8d8724c
  4160e8:	or     bl,BYTE PTR ds:0x4e3229c6
  4160ee:	mov    dl,0xc9
  4160f0:	inc    eax
  4160f1:	jne    0x4160b9
  4160f3:	call   0xe917:0xea237aa2
  4160fa:	icebp  
  4160fb:	inc    ebp
  4160fc:	xchg   edx,eax
  4160fd:	fucom  st(7)
  4160ff:	call   0xd804:0x7635eae7
  416106:	add    bh,bl
  416108:	sbb    bl,BYTE PTR [edx-0x59]
  41610b:	jmp    FWORD PTR [edi-0x26]
  41610e:	mov    eax,0x5b77ac4a
  416113:	mov    esi,0x2f36b5fa
  416118:	xor    dl,cl
  41611a:	mov    cl,0x82
  41611c:	imul   ebx,esp,0x4d
  41611f:	pop    esp
  416120:	hlt    
  416121:	dec    ecx
  416122:	xchg   ecx,eax
  416123:	cli    
  416124:	and    DWORD PTR [edx-0x7c],esp
  416127:	mov    ebx,0xf180cfe2
  41612c:	and    ah,BYTE PTR [edi-0x23]
  41612f:	fld    TBYTE PTR [edi-0x4e64f0ec]
  416135:	pop    ebx
  416136:	jg     0x4160dd
  416138:	adc    DWORD PTR [edi-0x3473bacd],eax
  41613e:	out    0xe2,al
  416140:	cs xchg edi,eax
  416142:	fistp  DWORD PTR [eax-0x5a4c86cf]
  416148:	mov    ebp,0x6b722218
  41614d:	pop    edx
  41614e:	inc    edi
  41614f:	mov    dl,0x33
  416151:	add    edx,ecx
  416153:	in     al,dx
  416154:	cmp    al,0xeb
  416156:	test   dl,bl
  416158:	cmc    
  416159:	mov    bl,0xaf
  41615b:	pop    ebx
  41615c:	add    ah,BYTE PTR [ecx]
  41615e:	ins    BYTE PTR es:[edi],dx
  41615f:	fist   DWORD PTR [esi-0x71]
  416162:	mov    ebx,0xfefea3ca
  416167:	aas    
  416168:	aaa    
  416169:	cmc    
  41616a:	not    DWORD PTR [eax+ebp*2+0x47]
  41616e:	cli    
  41616f:	sbb    dl,al
  416171:	push   edi
  416172:	fmul   st,st(3)
  416174:	push   ebp
  416175:	js     0x416134
  416177:	inc    esi
  416178:	ret    0x695e
  41617b:	pop    esp
  41617c:	mov    bl,0xfe
  41617e:	push   eax
  41617f:	outs   dx,BYTE PTR ds:[esi]
  416180:	retf   0x7124
  416183:	es lock test eax,0x3d4ef29d
  41618a:	mov    ebp,0x4fb362d6
  41618f:	dec    ebp
  416190:	inc    edx
  416191:	arpl   WORD PTR [edi-0x39],dx
  416194:	nop
  416195:	je     0x41613a
  416197:	xor    eax,0xfbfabec5
  41619c:	pop    DWORD PTR [ebx+ebx*2-0x44]
  4161a0:	data16 jnp 0x4161df
  4161a3:	jb     0x416218
  4161a5:	fwait
  4161a6:	add    ch,BYTE PTR [edx]
  4161a8:	inc    esi
  4161a9:	push   ecx
  4161aa:	jmp    0xbdab5387
  4161af:	and    DWORD PTR [eax],ebx
  4161b1:	pop    ebx
  4161b2:	sub    BYTE PTR [edx],bh
  4161b4:	jbe    0x416224
  4161b6:	dec    ecx
  4161b7:	sub    eax,0xb9ec847
  4161bc:	mov    esp,0x1bb258e3
  4161c1:	call   ebx
  4161c3:	xchg   ebp,eax
  4161c4:	mov    ds:0xca064fc8,eax
  4161c9:	mov    ds:0x74686ad6,al
  4161ce:	cmc    
  4161cf:	pusha  
  4161d0:	pop    ecx
  4161d1:	xor    ebx,DWORD PTR [esi+0x4d]
  4161d4:	pop    esp
  4161d5:	cmp    al,0x62
  4161d7:	loopne 0x416247
  4161d9:	imul   edi,DWORD PTR [esi+0x21],0x277c81d5
  4161e0:	addr16 jg 0x4161a1
  4161e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161e4:	dec    esi
  4161e5:	fistp  WORD PTR [esi+0x4d]
  4161e8:	inc    ebp
  4161e9:	jo     0x4161ca
  4161eb:	xchg   esi,eax
  4161ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161ed:	xor    cl,dh
  4161ef:	dec    ebp
  4161f0:	adc    dl,BYTE PTR [ebp+0x78]
  4161f3:	fwait
  4161f4:	das    
  4161f5:	dec    edi
  4161f6:	lahf   
  4161f7:	cdq    
  4161f8:	dec    esp
  4161f9:	(bad)  
  4161fa:	loop   0x41623a
  4161fc:	dec    ebx
  4161fd:	lods   eax,DWORD PTR ds:[esi]
  4161fe:	and    DWORD PTR [esp+ecx*1],ebp
  416201:	sub    al,0x47
  416203:	or     eax,0xbb3915c4
  416208:	push   esi
  416209:	and    dl,al
  41620b:	mov    eax,ds:0xdcfc4370
  416210:	adc    BYTE PTR [ebx],al
  416212:	call   0xc175977a
  416217:	jnp    0x4161df
  416219:	aam    0xfc
  41621b:	xchg   ebp,eax
  41621c:	sub    DWORD PTR [eax+0x3a],eax
  41621f:	sbb    DWORD PTR [ebx+0x3d],ebx
  416222:	scas   eax,DWORD PTR es:[edi]
  416223:	loopne 0x4161e9
  416225:	shl    al,cl
  416227:	jne    0x416221
  416229:	xor    eax,0xddf2bd78
  41622e:	add    DWORD PTR [ecx-0x5f],0xffffff8b
  416232:	frstorw [eax-0x19]
  416236:	push   0xffffffc1
  416238:	fs cmp eax,0x7c3c8a4d
  41623e:	sbb    ch,BYTE PTR [edx-0x25]
  416241:	dec    esp
  416242:	mov    ds:0xec3f87f1,al
  416247:	dec    edx
  416248:	pop    es
  416249:	mov    cl,0x8d
  41624b:	loopne 0x4161f8
  41624d:	add    DWORD PTR [edi-0x67662f51],edi
  416253:	lea    esi,[ebp-0x71]
  416256:	lods   al,BYTE PTR ds:[esi]
  416257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416258:	test   ch,bh
  41625a:	enter  0xbe48,0xed
  41625e:	popf   
  41625f:	mov    eax,ds:0x4339bedb
  416264:	data16 jno 0x4161f5
  416267:	xchg   BYTE PTR [edx+0x43],cl
  41626a:	pushf  
  41626b:	dec    esi
  41626c:	mov    esp,0xd62a7c25
  416271:	gs sub eax,0xf9ac39f0
  416277:	popa   
  416278:	ret    0xb88d
  41627b:	in     eax,dx
  41627c:	int3   
  41627d:	add    ah,dl
  41627f:	push   ecx
  416280:	sub    ebx,DWORD PTR [ecx-0x29]
  416283:	(bad)  
  416284:	cmc    
  416285:	push   ss
  416286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416287:	ss cwde 
  416289:	inc    edx
  41628a:	adc    al,BYTE PTR [ebx+0x3ece2d1d]
  416290:	icebp  
  416291:	dec    ecx
  416292:	adc    dl,cl
  416294:	in     eax,0x39
  416296:	ds mov ah,0xda
  416299:	popf   
  41629a:	push   DWORD PTR [edi+eiz*2]
  41629d:	adc    eax,DWORD PTR [ebx-0xa8fd62c]
  4162a3:	adc    eax,0xcfdd2cc4
  4162a8:	pop    edx
  4162a9:	xor    al,0x6b
  4162ab:	mov    bl,0x4c
  4162ad:	xor    al,0x2a
  4162af:	sub    eax,0xd43f5005
  4162b4:	daa    
  4162b5:	cwde   
  4162b6:	call   0x713:0xf53f5ef
  4162bd:	aaa    
  4162be:	sbb    bl,BYTE PTR [ebp+0x2045a078]
  4162c4:	dec    ebp
  4162c5:	les    sp,DWORD PTR fs:[edx-0x5287a96b]
  4162cd:	mov    dh,0x13
  4162cf:	cmovb  ebx,DWORD PTR [esi+eiz*2+0xe79658b]
  4162d7:	add    DWORD PTR [edx-0x1de4fe85],0x46
  4162de:	pushf  
  4162df:	xor    esp,DWORD PTR ss:[esi-0x537b17d8]
  4162e6:	pop    esp
  4162e7:	jb     0x416306
  4162e9:	sbb    DWORD PTR [edx+0x28e38aa5],esp
  4162ef:	adc    eax,0xb6904835
  4162f4:	jmp    0x416360
  4162f6:	inc    esp
  4162f7:	out    0xa0,al
  4162f9:	(bad)  
  4162fa:	and    eax,0xb277a4ba
  4162ff:	out    dx,eax
  416300:	loope  0x416337
  416302:	sub    esp,DWORD PTR [ebx-0x42]
  416305:	xchg   esi,edx
  416307:	std    
  416308:	or     DWORD PTR [ebx+0x267aecb7],ecx
  41630e:	daa    
  41630f:	jbe    0x4162db
  416311:	repz sbb BYTE PTR [bx+di+0x1c5a],dh
  416317:	bswap  eax
  416319:	(bad)  
  41631a:	ins    DWORD PTR es:[edi],dx
  41631b:	mov    ch,0x7b
  41631d:	mov    WORD PTR [eax],ss
  41631f:	aaa    
  416320:	jle    0x416368
  416322:	and    al,BYTE PTR [edi-0x5bec34b8]
  416328:	jp     0x4162be
  41632a:	mov    edi,DWORD PTR [eax-0x7c9d6954]
  416330:	cmp    ch,BYTE PTR [ebp-0x2205e708]
  416336:	cld    
  416337:	mov    edi,0xdaab4ede
  41633c:	fiadd  DWORD PTR [esp+ebx*1+0x62780b48]
  416343:	dec    BYTE PTR [eax+0x74]
  416346:	dec    ebx
  416347:	pop    eax
  416348:	and    BYTE PTR [edi-0x45744c17],dl
  41634e:	(bad)
  416351:	cmp    BYTE PTR [eax-0x3],cl
  416354:	add    eax,0xcfc333c6
  416359:	scas   al,BYTE PTR es:[edi]
  41635a:	push   esi
  41635b:	sbb    BYTE PTR [ecx+eiz*1],cl
  41635e:	rcr    BYTE PTR [eax+0x7b],0xb2
  416362:	sar    BYTE PTR [edi-0x54],0xc
  416366:	push   ds
  416367:	pop    eax
  416368:	test   dl,dl
  41636a:	or     esp,esp
  41636c:	repnz enter 0x61fd,0x7e
  416371:	test   BYTE PTR [edx-0x2c531cb8],cl
  416377:	les    ecx,FWORD PTR [edx+ecx*4+0x7c]
  41637b:	ficom  DWORD PTR [ecx+0x5e]
  41637e:	mov    al,0x72
  416380:	sbb    ecx,DWORD PTR [ebp-0x57]
  416383:	mov    al,ds:0x8ee618e2
  416388:	les    edi,FWORD PTR [edx+eiz*1]
  41638b:	dec    esi
  41638c:	xor    esi,DWORD PTR [ebx-0xb]
  41638f:	jl     0x416363
  416391:	das    
  416392:	and    eax,0xe0ebd3b5
  416397:	cmp    DWORD PTR [ecx+eiz*1],ebx
  41639a:	fcomp  DWORD PTR [eax-0x35]
  41639d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41639e:	xchg   ebx,eax
  41639f:	inc    edx
  4163a0:	and    al,0xa6
  4163a2:	jl     0x4163d1
  4163a4:	jmp    0x7820feec
  4163a9:	outs   dx,DWORD PTR ds:[esi]
  4163aa:	and    DWORD PTR [edx+0x77],esi
  4163ad:	mov    ebx,0x5fd979aa
  4163b2:	pop    esp
  4163b3:	daa    
  4163b4:	adc    DWORD PTR [ebx+0x6d],esi
  4163b7:	gs xchg edi,eax
  4163b9:	out    0xbb,eax
  4163bb:	(bad)  
  4163bd:	and    DWORD PTR [ebx-0x54],0xffffffb5
  4163c1:	pop    es
  4163c2:	and    bh,BYTE PTR [ebx+0x51e78e12]
  4163c8:	jmp    0x4163c6
  4163ca:	xchg   ecx,eax
  4163cb:	xor    ebx,esp
  4163cd:	sbb    eax,0xe30253f0
  4163d2:	nop
  4163d3:	and    DWORD PTR [edx],esi
  4163d5:	sub    BYTE PTR fs:[eax-0x40],al
  4163d9:	fbld   TBYTE PTR [ecx]
  4163db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163dc:	sbb    eax,0x55ff95cc
  4163e1:	pop    ecx
  4163e2:	(bad)  
  4163e3:	fnstcw WORD PTR [ecx]
  4163e5:	mov    al,ds:0x8e020764
  4163ea:	outs   dx,DWORD PTR ds:[esi]
  4163eb:	ret    
  4163ec:	pop    eax
  4163ed:	or     cl,0x1d
  4163f0:	and    esp,DWORD PTR [ecx+0x1f]
  4163f3:	retf   
  4163f4:	jg     0x416377
  4163f6:	cs dec ecx
  4163f8:	inc    ebx
  4163f9:	pop    eax
  4163fa:	test   eax,0xef80457b
  4163ff:	packssdw mm4,mm1
  416402:	test   al,0xa7
  416404:	gs ss ds push 0xdfc551c1
  41640c:	ja     0x4163ac
  41640e:	out    0xb9,eax
  416410:	gs ins BYTE PTR es:[edi],dx
  416412:	or     eax,0x552f649
  416417:	sbb    BYTE PTR [eax+0x3566b379],ch
  41641d:	xor    eax,0xc64cf2ff
  416422:	add    eax,0x59460f2c
  416427:	aad    0xa6
  416429:	and    ebx,edx
  41642b:	xor    al,0xfe
  41642d:	lea    esi,[edi+0x7c839229]
  416433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416434:	fnstenv ds:0x257ced34
  41643a:	adc    DWORD PTR [edx-0x1136ae90],ecx
  416440:	nop
  416441:	mov    eax,0x4b37ecd0
  416446:	or     cl,BYTE PTR [edi+0x17]
  416449:	push   0xffffff90
  41644b:	push   ecx
  41644c:	adc    WORD PTR [eax+edi*1+0x45],dx
  416451:	aam    0x7b
  416453:	mov    esi,0x292ec9c3
  416458:	fsub   QWORD PTR [ebp+0x32]
  41645b:	bound  eax,QWORD PTR [ebx+eax*1]
  41645e:	lods   al,BYTE PTR ds:[esi]
  41645f:	into   
  416460:	pop    es
  416461:	sub    al,0xc7
  416463:	fadd   st(4),st
  416465:	out    dx,eax
  416466:	or     edi,DWORD PTR [ecx-0x3d]
  416469:	jmp    0xd754:0x5c3099bc
  416470:	inc    esp
  416471:	stos   DWORD PTR es:[edi],eax
  416472:	out    dx,al
  416473:	loope  0x4164c8
  416475:	inc    ebx
  416476:	add    ebp,DWORD PTR [ebx+0x11]
  416479:	cmp    DWORD PTR [eax+0x70],edx
  41647c:	xor    eax,0xe87c1b2f
  416481:	mov    esp,fs
  416483:	dec    edi
  416484:	cmp    al,0x85
  416486:	push   ds
  416487:	xor    eax,0x2ebc1f91
  41648c:	sahf   
  41648d:	or     eax,0x74cc0a9d
  416492:	mov    ds:0xcb982b38,eax
  416497:	pop    ebp
  416498:	inc    esp
  416499:	pop    ss
  41649a:	(bad)  
  41649b:	out    0xb7,eax
  41649d:	xlat   BYTE PTR ds:[ebx]
  41649e:	lods   al,BYTE PTR ds:[esi]
  41649f:	call   0x83071be0
  4164a4:	fs jbe 0x41642f
  4164a7:	push   0x7
  4164a9:	pop    es
  4164aa:	loope  0x41644e
  4164ac:	lods   eax,DWORD PTR ds:[esi]
  4164ad:	and    BYTE PTR [edx-0x6908f81f],0xd
  4164b4:	and    ah,BYTE PTR [ebp-0x11]
  4164b7:	cmp    esp,0x5488d265
  4164bd:	mov    eax,ds:0xdf2af9b0
  4164c2:	popa   
  4164c3:	(bad)  
  4164c4:	sub    al,0x1
  4164c6:	inc    esi
  4164c7:	pop    esp
  4164c8:	inc    eax
  4164c9:	enter  0xdd01,0x41
  4164cd:	pop    ebp
  4164ce:	sahf   
  4164cf:	cmp    cl,dh
  4164d1:	xchg   DWORD PTR cs:[ecx+0x19cc3782],esp
  4164d8:	push   0x38
  4164da:	cwde   
  4164db:	lods   al,BYTE PTR ds:[esi]
  4164dc:	fild   DWORD PTR [ebp+edi*1+0x8]
  4164e0:	dec    edx
  4164e1:	loopne 0x416489
  4164e3:	mov    ch,0x35
  4164e5:	jbe    0x4164d7
  4164e7:	mov    ch,0x5f
  4164e9:	cwde   
  4164ea:	add    DWORD PTR [edx-0x5dc3e7ca],esp
  4164f0:	jo     0x416549
  4164f2:	cli    
  4164f3:	mov    edx,0x77facab2
  4164f8:	lods   al,BYTE PTR ds:[esi]
  4164f9:	arpl   cx,bx
  4164fb:	jo     0x4164bb
  4164fd:	pusha  
  4164fe:	lods   eax,DWORD PTR ds:[esi]
  4164ff:	pop    esi
  416500:	sub    cl,BYTE PTR [edx-0x327a6eca]
  416506:	aas    
  416507:	mov    edx,0xb735dcf9
  41650c:	stos   BYTE PTR es:[edi],al
  41650d:	fstp   QWORD PTR [ebp-0x2e2534e6]
  416513:	iret   
  416514:	aas    
  416515:	dec    edx
  416516:	cmp    eax,0xd96ece9d
  41651b:	jno    0x41653d
  41651d:	fcomp  DWORD PTR [edi-0x3fb4b9dc]
  416523:	mov    dl,BYTE PTR [ebp+0x6a]
  416526:	adc    BYTE PTR [ebp+edx*1+0x21],bl
  41652a:	or     ecx,ecx
  41652c:	xchg   ebp,eax
  41652d:	pop    esp
  41652e:	adc    BYTE PTR [eax-0x25d68283],0xdc
  416535:	(bad)  
  416536:	xchg   esi,ebp
  416538:	cmp    al,0x24
  41653a:	mov    ebp,ds
  41653c:	jmp    0x416575
  41653e:	mov    BYTE PTR [eax+0x5d1a4bf2],dh
  416544:	add    DWORD PTR [esi+0x327b6dde],ecx
  41654a:	js     0x416520
  41654c:	jb     0x41654e
  41654e:	pop    esi
  41654f:	dec    esi
  416550:	adc    eax,0x7821f718
  416555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416556:	cld    
  416557:	daa    
  416558:	mov    esp,0x4baf6591
  41655d:	cs out 0xdf,eax
  416560:	inc    edi
  416561:	popa   
  416562:	ss jne 0x416587
  416565:	sbb    eax,0x438f8e4b
  41656a:	mov    ebp,0x5eea8da6
  41656f:	cmc    
  416570:	daa    
  416571:	cmp    eax,0xd0a6e401
  416576:	xor    BYTE PTR [edi+0xd54f15c],cl
  41657c:	jbe    0x416535
  41657e:	fs jmp 0x91f8:0x67a863f4
  416586:	mov    bl,0xbd
  416588:	arpl   WORD PTR [ebx],si
  41658a:	adc    BYTE PTR [ebx],dh
  41658c:	(bad)  
  41658d:	(bad)  
  41658e:	dec    edi
  41658f:	loope  0x4165ef
  416591:	out    dx,eax
  416592:	dec    ebp
  416593:	ret    0xc6b3
  416596:	rcl    dh,1
  416598:	inc    esp
  416599:	lods   eax,DWORD PTR ds:[esi]
  41659a:	les    edx,FWORD PTR [eax-0x38cd83cf]
  4165a0:	and    al,0x58
  4165a2:	sub    DWORD PTR [ebp+ecx*2+0x53d2f412],edi
  4165a9:	loopne 0x41661b
  4165ab:	push   0x45537ca5
  4165b0:	xlat   BYTE PTR ds:[ebx]
  4165b1:	fimul  WORD PTR [edi+0x51eb4ee6]
  4165b7:	popf   
  4165b8:	(bad)  
  4165b9:	sbb    al,0xa9
  4165bb:	push   esi
  4165bc:	mov    eax,ds:0x15326e01
  4165c1:	push   cs
  4165c2:	out    0xb2,eax
  4165c4:	push   cs
  4165c5:	sub    ah,BYTE PTR [ecx-0x24]
  4165c8:	adc    BYTE PTR [eax+0x579089a3],ch
  4165ce:	lods   eax,DWORD PTR ds:[esi]
  4165cf:	xor    BYTE PTR [esi-0x2bc4d123],ch
  4165d5:	pop    edx
  4165d6:	jg     0x416621
  4165d8:	mov    al,0xcb
  4165da:	stos   BYTE PTR es:[edi],al
  4165db:	lods   eax,DWORD PTR ds:[esi]
  4165dc:	jg     0x416593
  4165de:	nop
  4165df:	mov    ebp,0xfe3c0a2f
  4165e4:	jecxz  0x4165c9
  4165e6:	mul    BYTE PTR [ebx]
  4165e8:	xchg   esp,eax
  4165e9:	inc    dh
  4165eb:	xor    edx,DWORD PTR [ecx]
  4165ed:	jmp    0x46f2:0xd2398f7b
  4165f4:	pop    ebx
  4165f5:	cmc    
  4165f6:	xchg   esp,eax
  4165f7:	inc    ebx
  4165f8:	test   al,0xe7
  4165fa:	outs   dx,DWORD PTR ds:[esi]
  4165fb:	pop    ds
  4165fc:	lahf   
  4165fd:	scas   al,BYTE PTR es:[edi]
  4165fe:	mov    bl,0x25
  416600:	sub    eax,0xcac33dfc
  416605:	(bad)  
  416606:	push   cs
  416607:	mov    bl,0x59
  416609:	leave  
  41660a:	in     al,0xb3
  41660c:	inc    esp
  41660d:	mov    BYTE PTR [esi-0x5e223d0f],ah
  416613:	bound  ebp,QWORD PTR [ecx-0x5414baa8]
  416619:	nop
  41661a:	adc    DWORD PTR [esi+0x752e1051],esi
  416620:	in     al,0x3a
  416622:	mov    ebx,0x3375ad74
  416627:	addr16 adc eax,0x1d6c86cb
  41662d:	inc    ebp
  41662e:	imul   edi,esi,0x4e
  416631:	jns    0x41664c
  416633:	enter  0xc9af,0x2f
  416637:	or     DWORD PTR [eax+eiz*4-0x6c],esi
  41663b:	retf   0xe9f
  41663e:	aas    
  41663f:	push   cs
  416640:	jecxz  0x416630
  416642:	or     eax,0x72406d71
  416647:	mov    esi,0xcdee3821
  41664c:	jb     0x4166c7
  41664e:	mov    ch,0xcd
  416650:	inc    edi
  416651:	jns    0x41666c
  416653:	jmp    0x90687cd9
  416658:	enter  0xadbe,0x9c
  41665c:	popa   
  41665d:	xor    BYTE PTR [eax+0x56],cl
  416660:	cmp    ecx,ebp
  416662:	leave  
  416663:	mov    ds:0xcfa564fc,eax
  416668:	test   eax,0x4338dbb2
  41666d:	and    al,0x5e
  41666f:	sar    cl,0x75
  416672:	imul   eax,DWORD PTR [edi],0xe90fd388
  416678:	pusha  
  416679:	jnp    0x4166a1
  41667b:	adc    eax,0xf057483c
  416680:	mov    ebx,0xe6923929
  416685:	cmp    eax,edi
  416687:	fiadd  WORD PTR [ebp-0x6]
  41668a:	pop    eax
  41668b:	sbb    dh,dl
  41668d:	mov    ebx,0x17a14492
  416692:	rcl    eax,cl
  416694:	push   0xffffffc8
  416696:	scas   eax,DWORD PTR es:[edi]
  416697:	repnz xchg ebp,eax
  416699:	mov    dl,0x7e
  41669b:	mov    BYTE PTR [edx],bh
  41669d:	inc    esp
  41669e:	cmp    al,0x96
  4166a0:	pop    ebp
  4166a1:	out    0xbf,eax
  4166a3:	das    
  4166a4:	ins    DWORD PTR es:[edi],dx
  4166a5:	fiadd  DWORD PTR [edx+ecx*4]
  4166a8:	std    
  4166a9:	in     eax,dx
  4166aa:	das    
  4166ab:	sub    cl,0xaa
  4166ae:	dec    ecx
  4166af:	cmp    ebx,DWORD PTR [eax-0x218e5a04]
  4166b5:	mov    ds:0xd1daac91,eax
  4166ba:	(bad)  
  4166bb:	cmp    DWORD PTR [eax-0x51],eax
  4166be:	frstor [ebp+0x1a]
  4166c1:	fcmovu st,st(2)
  4166c3:	push   0x21
  4166c5:	push   esi
  4166c6:	outs   dx,BYTE PTR ds:[esi]
  4166c7:	xor    edi,edi
  4166c9:	inc    eax
  4166ca:	jg     0x4166ea
  4166cc:	jnp    0x4166f8
  4166ce:	imul   BYTE PTR [esi]
  4166d0:	loopne 0x4166e9
  4166d2:	scas   eax,DWORD PTR es:[edi]
  4166d3:	dec    edx
  4166d4:	inc    eax
  4166d5:	cmp    eax,0x8c8dfad4
  4166da:	xor    al,0x2c
  4166dc:	mov    ecx,0x7c5ec7ef
  4166e1:	or     BYTE PTR [edx-0x21defbbf],0xc5
  4166e8:	sub    BYTE PTR [eax+0xc],ch
  4166eb:	sbb    BYTE PTR [ecx+0x5f],dh
  4166ee:	and    DWORD PTR [eax-0x2166b334],eax
  4166f4:	push   0xe27a5e98
  4166f9:	dec    ecx
  4166fa:	xlat   BYTE PTR ds:[ebx]
  4166fb:	dec    eax
  4166fc:	mov    DWORD PTR [edi],ecx
  4166fe:	nop
  4166ff:	fcmovnbe st,st(2)
  416701:	mov    esp,0x5b3629a
  416706:	inc    ebx
  416707:	outs   dx,DWORD PTR ds:[esi]
  416708:	mov    ebx,0xcdd0ed50
  41670d:	sub    esi,ebp
  41670f:	stc    
  416710:	hlt    
  416711:	mov    WORD PTR [ebx-0x41],gs
  416714:	xchg   DWORD PTR [edi+0x5aa681f9],edx
  41671a:	inc    esp
  41671b:	rcr    BYTE PTR [eax],1
  41671d:	(bad)  
  41671e:	mov    al,cl
  416720:	sbb    DWORD PTR es:[ecx-0x6c],esp
  416724:	fstp   QWORD PTR [ebx]
  416726:	jo     0x4166c1
  416728:	mov    cl,0x57
  41672a:	call   0x17cc:0x999a5b54
  416731:	call   0x2080f8f8
  416736:	test   al,0x2c
  416738:	mov    eax,0xdbb98a71
  41673d:	mov    fs,WORD PTR [edi+ebp*4-0x956ed73]
  416744:	retf   0x7968
  416747:	scas   al,BYTE PTR es:[edi]
  416748:	mov    ah,0x6b
  41674a:	sbb    al,0x22
  41674c:	add    DWORD PTR [ebx-0x2f],ebx
  41674f:	pop    ds
  416750:	cmp    dh,ah
  416752:	sbb    BYTE PTR [ebx],cl
  416754:	xor    bh,al
  416756:	adc    DWORD PTR [ecx+eiz*2+0x1],esi
  41675a:	mov    ds:0xf9fd7c7a,eax
  41675f:	stc    
  416760:	js     0x4167c9
  416762:	cmp    dh,BYTE PTR [ebx]
  416764:	in     eax,0xdf
  416766:	fldcw  WORD PTR [eax+0x60]
  416769:	clc    
  41676a:	fidivr DWORD PTR [esi]
  41676c:	sub    ah,0x25
  41676f:	jmp    0xf7e9:0xd29b88ea
  416776:	mov    edi,es
  416778:	dec    eax
  416779:	pop    ss
  41677a:	push   ebp
  41677b:	js     0x4167f8
  41677d:	push   eax
  41677e:	call   0x9bdb490b
  416783:	or     ah,BYTE PTR fs:0x8cde7f16
  41678a:	mov    cl,0xf2
  41678c:	gs xchg esp,eax
  41678e:	and    eax,0xf311064d
  416793:	stc    
  416794:	movd   mm0,esi
  416797:	not    DWORD PTR [ebp+0x10bc061c]
  41679d:	test   eax,ebx
  41679f:	xchg   edi,eax
  4167a0:	pop    ebx
  4167a1:	pop    eax
  4167a2:	sub    BYTE PTR ss:[ebx],dh
  4167a5:	retf   0x4bdf
  4167a8:	or     BYTE PTR ds:0xe5ef4471,cl
  4167ae:	mov    BYTE PTR [ebp-0x85d379a],ah
  4167b4:	fisubr DWORD PTR [ebp+0x63c35339]
  4167ba:	ss repz xchg ebx,eax
  4167bd:	and    eax,0xd0f23faa
  4167c2:	sub    eax,0x2068fa74
  4167c7:	out    0x47,eax
  4167c9:	shl    eax,cl
  4167cb:	in     eax,0x14
  4167cd:	pop    DWORD PTR [ebp+0x68]
  4167d0:	pop    eax
  4167d1:	inc    ebx
  4167d2:	test   BYTE PTR [eax+edi*8-0x5b],bh
  4167d6:	sub    al,0x4f
  4167d8:	or     edi,DWORD PTR [ebp+0x17]
  4167db:	pushf  
  4167dc:	jg     0x416854
  4167de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167df:	cmc    
  4167e0:	out    dx,eax
  4167e1:	aad    0xf4
  4167e3:	xchg   ecx,eax
  4167e4:	jne    0x4167c0
  4167e6:	stos   BYTE PTR es:[edi],al
  4167e7:	pop    es
  4167e8:	pop    esi
  4167e9:	inc    esi
  4167ea:	xchg   esi,eax
  4167eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167ec:	or     BYTE PTR [ecx+0x16],dl
  4167ef:	(bad)  ds:0xdb43c5e9
  4167f5:	cmp    esi,esp
  4167f7:	stc    
  4167f8:	std    
  4167f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167fa:	sub    al,0xa
  4167fc:	and    ah,al
  4167fe:	outs   dx,DWORD PTR ds:[esi]
  4167ff:	mov    dh,0x7b
  416801:	push   0x2e4d63f3
  416806:	mov    edx,0x95fb2d25
  41680b:	mov    ds:0x95acabd1,eax
  416810:	fs out 0xee,al
  416813:	rol    eax,0xf8
  416816:	push   cs
  416817:	pop    ebx
  416818:	rol    DWORD PTR [ecx-0x37],cl
  41681b:	rol    BYTE PTR [ebx+eiz*4-0xf937e32],0x7f
  416823:	mov    eax,0x88336714
  416828:	sub    eax,0xa6f5499a
  41682d:	mov    ch,0x0
  41682f:	fucomp st(7)
  416831:	loope  0x4167df
  416833:	sub    BYTE PTR [ecx],dh
  416835:	ins    DWORD PTR es:[edi],dx
  416836:	push   ds
  416837:	sub    DWORD PTR [edi],ebx
  416839:	(bad)  
  41683a:	mov    eax,0x1b74973e
  41683f:	fdiv   QWORD PTR [esi]
  416841:	ret    
  416842:	pusha  
  416843:	inc    esp
  416844:	cs xor al,0x98
  416847:	sbb    DWORD PTR [ecx],esp
  416849:	pop    es
  41684a:	iret   
  41684b:	(bad)  
  41684d:	and    al,0xa4
  41684f:	sub    BYTE PTR [ebx-0x79499a6f],0xcc
  416856:	(bad)  
  416857:	out    dx,al
  416858:	or     esi,edx
  41685a:	aaa    
  41685b:	mov    al,ds:0x3a55e41c
  416860:	fidivr DWORD PTR [edx+ecx*4-0x3519d710]
  416867:	adc    eax,0x3af57457
  41686c:	out    0x24,al
  41686e:	scas   eax,DWORD PTR es:[edi]
  41686f:	imul   esp,DWORD PTR [ebx+0x13],0x76
  416873:	adc    edx,eax
  416875:	mov    ebx,0xa940e7e9
  41687a:	mov    ah,ch
  41687c:	mov    DWORD PTR [edi],ecx
  41687e:	out    dx,eax
  41687f:	lea    esp,[edx]
  416881:	xor    bl,BYTE PTR [eax+0x30]
  416884:	mov    ebp,0x64a2741d
  416889:	inc    esp
  41688a:	in     al,dx
  41688b:	push   es
  41688c:	enter  0x145d,0x7
  416890:	jnp    0x416885
  416892:	xor    DWORD PTR [esi-0x2230ebfe],edi
  416898:	fucomip st,st(6)
  41689a:	test   DWORD PTR [edi-0xf],ebp
  41689d:	sbb    eax,DWORD PTR [eax-0x23]
  4168a0:	gs (bad) 
  4168a3:	cmp    edx,DWORD PTR [ebp-0x29af2651]
  4168a9:	pop    esi
  4168aa:	add    DWORD PTR [edx+0x69998de6],eax
  4168b0:	mov    al,0x8
  4168b2:	lea    esi,[edi]
  4168b4:	ins    BYTE PTR es:[edi],dx
  4168b5:	mov    WORD PTR [ebx+0x49497e05],ds
  4168bb:	push   es
  4168bc:	stos   DWORD PTR es:[edi],eax
  4168bd:	loop   0x4168cd
  4168bf:	xchg   DWORD PTR [edi+0x4e],ecx
  4168c2:	repz loopne 0x416922
  4168c5:	mov    ch,BYTE PTR [ebp-0x7b]
  4168c8:	sub    ch,BYTE PTR [ecx+0x1cef25b3]
  4168ce:	scas   al,BYTE PTR es:[edi]
  4168cf:	jns    0x416861
  4168d1:	inc    edi
  4168d2:	pop    esp
  4168d3:	or     eax,0xde673d4c
  4168d8:	aas    
  4168d9:	retf   0x5467
  4168dc:	cmp    BYTE PTR [ecx-0x3a787244],bh
  4168e2:	mov    edx,0xb0d379bf
  4168e7:	lds    esp,FWORD PTR [esp+ecx*1]
  4168ea:	push   ds
  4168eb:	and    eax,0xde095845
  4168f1:	and    BYTE PTR [eax-0x7119ab7e],dh
  4168f7:	mov    ds:0xb940f376,eax
  4168fc:	icebp  
  4168fd:	and    DWORD PTR [edx+0x53],esi
  416900:	cli    
  416901:	int    0xd0
  416903:	xchg   ebx,eax
  416904:	pop    ecx
  416905:	jnp    0x416923
  416907:	jl     0x41694d
  416909:	mov    bl,0x83
  41690b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41690c:	mov    bl,0xf0
  41690e:	xchg   BYTE PTR [edi+0x148388f5],dl
  416914:	dec    ebp
  416915:	jno    0x41694b
  416917:	outs   dx,BYTE PTR ds:[esi]
  416918:	or     DWORD PTR [ebp-0x6493a4f1],0x44f605d1
  416922:	pop    edx
  416923:	mov    ds:0xe2445456,al
  416928:	xor    DWORD PTR [ebx-0x1],esp
  41692b:	xchg   DWORD PTR [ebx],ecx
  41692d:	adc    dl,cl
  41692f:	push   ds
  416930:	adc    bh,BYTE PTR [ecx+0x43]
  416933:	cdq    
  416934:	repz mov ds:0xe138b7c4,al
  41693a:	mov    cl,0xc0
  41693c:	stos   BYTE PTR es:[edi],al
  41693d:	mov    edi,DWORD PTR [esi]
  41693f:	inc    esp
  416940:	mov    al,0xd7
  416942:	cld    
  416943:	xchg   BYTE PTR [ecx+edx*2],dh
  416946:	or     al,bh
  416948:	or     bh,BYTE PTR [esp+ebp*4]
  41694b:	icebp  
  41694c:	xchg   ebx,eax
  41694d:	fucom  st(5)
  41694f:	int    0x14
  416951:	and    esi,DWORD PTR [eax-0x71]
  416954:	(bad)  
  416955:	fxsave [ebx+ebp*8-0x1b]
  41695a:	rcl    DWORD PTR [esi],1
  41695c:	ja     0x4169d8
  41695e:	int    0x4d
  416960:	ins    DWORD PTR es:[edi],dx
  416961:	pop    ebx
  416962:	rcr    DWORD PTR [esi],0x76
  416965:	lods   eax,DWORD PTR ds:[esi]
  416966:	jno    0x416950
  416968:	fs sub al,0xf
  41696b:	mov    eax,0xbd04bd53
  416970:	ja     0x416956
  416972:	dec    esi
  416973:	xor    DWORD PTR [ebx+edx*2],eax
  416976:	in     al,dx
  416977:	jmp    0x4169c1
  416979:	popf   
  41697a:	xchg   DWORD PTR [eax-0x63b98505],ebx
  416980:	or     eax,0x2ca95b5b
  416985:	or     edi,DWORD PTR [edi+0x4c]
  416988:	sbb    eax,0xce70aafb
  41698d:	mov    eax,0x3664491
  416992:	mov    eax,0x6530c23a
  416997:	xchg   ecx,eax
  416998:	aaa    
  416999:	(bad)  
  41699b:	mov    al,0x31
  41699d:	cmp    al,0xe5
  41699f:	lock push cs
  4169a1:	data16 cmp dh,BYTE PTR [edx+ebx*1]
  4169a5:	jmp    0xcd6ea687
  4169aa:	sub    BYTE PTR [esi+0x72b4f054],0x75
  4169b1:	daa    
  4169b2:	push   esi
  4169b3:	sub    eax,0xebd2ce2b
  4169b8:	adc    eax,0xe53565c1
  4169bd:	cmp    ebp,0xcf61086e
  4169c3:	add    DWORD PTR [esp+edi*2+0x790ed723],ebp
  4169ca:	jno    0x4169b1
  4169cc:	aaa    
  4169cd:	pop    es
  4169ce:	arpl   bp,bx
  4169d0:	and    al,0x73
  4169d2:	dec    eax
  4169d3:	cs jle 0x4169f6
  4169d6:	(bad)  [edi-0x753b37a5]
  4169dc:	(bad)  
  4169dd:	shr    DWORD PTR [esi+eax*1+0x66],0x88
  4169e2:	cmp    dl,dh
  4169e4:	mov    eax,0x505cd771
  4169e9:	std    
  4169ea:	jp     0x416a22
  4169ec:	xchg   ebx,eax
  4169ed:	andps  xmm0,XMMWORD PTR [ebp-0x13]
  4169f1:	sub    edi,edx
  4169f3:	push   ss
  4169f4:	loop   0x416a3d
  4169f6:	push   0xffffffa2
  4169f8:	sbb    cl,BYTE PTR [edx-0x3a]
  4169fb:	shl    eax,1
  4169fd:	jbe    0x4169f1
  4169ff:	in     al,0xea
  416a01:	mov    al,ds:0x761b074a
  416a06:	inc    edi
  416a07:	inc    esp
  416a08:	jge    0x4169da
  416a0a:	mov    ebp,0x55b77325
  416a0f:	mov    dh,0xae
  416a11:	mov    edi,0xac223819
  416a16:	push   0xffffffbd
  416a18:	ficom  WORD PTR [ebp+0x50f39d3b]
  416a1e:	in     eax,0x3a
  416a20:	test   DWORD PTR [edx-0x56],0xddbe5dda
  416a27:	mov    ecx,0xfbd4c113
  416a2c:	sub    DWORD PTR [esi+0x3bf42b58],0xf8760ea6
  416a36:	std    
  416a37:	and    BYTE PTR [ecx-0x31c44ecf],bl
  416a3d:	in     al,0x16
  416a3f:	sti    
  416a40:	jae    0x416a93
  416a42:	mov    edx,0x96da22df
  416a47:	dec    esi
  416a48:	(bad)  
  416a49:	sti    
  416a4a:	sub    DWORD PTR [edx+edi*4],0x78d7982d
  416a51:	shl    DWORD PTR [eax],cl
  416a53:	jg     0x416a56
  416a55:	repz leave 
  416a57:	jge    0x416a54
  416a59:	add    esp,DWORD PTR ds:0xe7eefe69
  416a5f:	pop    ss
  416a60:	ror    BYTE PTR [edi-0x9cbb955],cl
  416a66:	mov    al,ds:0x9974871f
  416a6b:	rcl    DWORD PTR [esi+0xf],cl
  416a6e:	es cmc 
  416a70:	popf   
  416a71:	mov    bh,0xff
  416a73:	sbb    ebx,DWORD PTR [ecx+0x51]
  416a76:	jg     0x416ad1
  416a78:	shl    ch,0x68
  416a7b:	and    al,0x9c
  416a7d:	xor    DWORD PTR [ecx-0x22],edx
  416a80:	mov    esp,0x76fde82c
  416a85:	push   esi
  416a86:	test   al,0x3e
  416a88:	out    0x89,eax
  416a8a:	test   DWORD PTR [ecx],0xc7234bc5
  416a90:	ins    BYTE PTR es:[edi],dx
  416a91:	and    esp,ebp
  416a93:	mov    esi,0x7e91474
  416a98:	scas   eax,DWORD PTR es:[edi]
  416a99:	ja     0x416a3a
  416a9b:	je     0x416a60
  416a9d:	sbb    DWORD PTR [edi+0x6d],edx
  416aa0:	xchg   esi,eax
  416aa1:	je     0x416a3c
  416aa3:	in     eax,dx
  416aa4:	jne    0x416b0d
  416aa6:	dec    esi
  416aa7:	jecxz  0x416af3
  416aa9:	dec    esp
  416aaa:	mov    eax,ds:0xa2111232
  416aaf:	mov    fs,WORD PTR [edi-0x50]
  416ab2:	sbb    dh,BYTE PTR [ebp-0x10ee71d]
  416ab8:	(bad)  
  416ab9:	fidiv  WORD PTR [ebx]
  416abb:	out    dx,eax
  416abc:	ins    DWORD PTR es:[edi],dx
  416abd:	(bad)  
  416abe:	xlat   BYTE PTR es:[ebx]
  416ac0:	js     0x416a97
  416ac2:	sbb    dl,BYTE PTR [edx+0x9]
  416ac5:	adc    eax,0xacbd3fd7
  416aca:	inc    esi
  416acb:	jae    0x416ac8
  416acd:	mov    al,ds:0xd4b847d3
  416ad2:	inc    eax
  416ad3:	shl    ebx,1
  416ad5:	in     eax,0xb
  416ad7:	xchg   ebp,eax
  416ad8:	mov    edi,0xf149cf80
  416add:	mov    esi,0xa1316234
  416ae2:	pop    ebp
  416ae3:	or     eax,0x71edde6c
  416ae8:	push   esp
  416ae9:	fdivr  DWORD PTR [edx-0x3f1698b8]
  416aef:	fs xor esp,edx
  416af2:	sbb    al,0x78
  416af4:	test   DWORD PTR [edi+0x6a],0xaf9d2bd7
  416afb:	dec    esp
  416afc:	jb     0x416b2f
  416afe:	dec    edx
  416aff:	int    0x4
  416b01:	sub    ebx,DWORD PTR [edx+0x59]
  416b04:	mov    ecx,DWORD PTR [edi+0x19]
  416b07:	pop    ds
  416b08:	or     BYTE PTR [edi+ecx*8+0x1f],bl
  416b0c:	dec    ebx
  416b0d:	shr    DWORD PTR [ecx-0x5fdd1eb2],cl
  416b13:	dec    esi
  416b14:	popa   
  416b15:	ins    DWORD PTR es:[edi],dx
  416b16:	xchg   esp,eax
  416b17:	(bad)  
  416b18:	outs   dx,DWORD PTR ds:[esi]
  416b19:	ss lock mov si,0x1b27
  416b1f:	and    DWORD PTR [edi-0x530d41b],ebp
  416b25:	test   al,0x8c
  416b27:	push   ecx
  416b28:	sub    al,0x1
  416b2a:	cmp    al,0x70
  416b2c:	add    ch,dl
  416b2e:	(bad)  
  416b2f:	or     dh,ah
  416b31:	inc    ebx
  416b32:	lods   al,BYTE PTR ds:[esi]
  416b33:	inc    ebx
  416b34:	push   esp
  416b35:	jb     0x416b89
  416b37:	enter  0x4656,0x3a
  416b3b:	shl    BYTE PTR [esi+0x58],0x83
  416b3f:	fnstcw WORD PTR [eax]
  416b41:	sub    eax,0x499e8726
  416b46:	jl     0x416b2d
  416b48:	pop    esi
  416b49:	jmp    0x4209:0x7c3d8a62
  416b50:	enter  0xc4f6,0x8a
  416b54:	dec    ebp
  416b55:	sti    
  416b56:	push   ebx
  416b57:	pusha  
  416b58:	test   BYTE PTR [ebx],ah
  416b5a:	pop    eax
  416b5b:	inc    ecx
  416b5c:	mov    DWORD PTR [edi+0x50],eax
  416b5f:	(bad)  
  416b60:	cmp    DWORD PTR [edx+eax*1],edi
  416b63:	jne    0x416bc2
  416b65:	int3   
  416b66:	cmp    esi,edx
  416b68:	ret    
  416b69:	loopne 0x416b0f
  416b6b:	sub    bl,BYTE PTR [esi]
  416b6d:	and    DWORD PTR [eax-0x9],edi
  416b70:	loope  0x416b3e
  416b72:	imul   ecx
  416b74:	pop    es
  416b75:	dec    edi
  416b76:	sbb    bh,dh
  416b78:	cmp    DWORD PTR [eax+esi*8-0x122efa1],edx
  416b7f:	int    0x8e
  416b81:	push   0x3
  416b83:	add    al,0xd7
  416b85:	push   edi
  416b86:	mov    edi,0x7e436753
  416b8b:	lea    esi,[ebx+0x5cdf7856]
  416b91:	push   edx
  416b92:	stos   DWORD PTR es:[edi],eax
  416b93:	imul   edi,DWORD PTR [eax+ebx*4+0x3d],0x1e25c753
  416b9b:	call   0xe135408
  416ba0:	xlat   BYTE PTR ds:[ebx]
  416ba1:	dec    edx
  416ba2:	push   edi
  416ba3:	push   ebx
  416ba4:	mov    ah,0x45
  416ba6:	pop    edx
  416ba7:	sub    al,0x54
  416ba9:	dec    esp
  416baa:	adc    ebp,DWORD PTR [ebx*4+0x1e0af7b9]
  416bb1:	fidivr WORD PTR [edi]
  416bb3:	push   eax
  416bb4:	mov    eax,0x1747d928
  416bb9:	add    BYTE PTR [eax+0x65a6bc0f],dh
  416bbf:	lea    edx,[esi]
  416bc1:	sub    eax,0x8dd6b4cd
  416bc6:	sahf   
  416bc7:	in     eax,0x13
  416bc9:	pop    ds
  416bca:	adc    DWORD PTR [edx-0x6d],0x33
  416bce:	jae    0x416ba9
  416bd0:	shr    bl,0xbe
  416bd3:	pop    edi
  416bd4:	mov    BYTE PTR ds:0x1998354e,bh
  416bda:	into   
  416bdb:	mov    bh,0x2
  416bdd:	xchg   edi,eax
  416bde:	js     0x416ba8
  416be0:	xor    DWORD PTR [esi-0x4d0c72c4],0x8cd9940e
  416bea:	sbb    esi,DWORD PTR [ebx-0x39723918]
  416bf0:	cli    
  416bf1:	gs cs pop ebp
  416bf4:	(bad)  
  416bf5:	cmp    dh,bh
  416bf7:	jmp    0x6aa9a870
  416bfc:	mov    cl,0x3c
  416bfe:	inc    edi
  416bff:	aam    0x60
  416c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c02:	adc    al,0x7e
  416c04:	ins    BYTE PTR es:[edi],dx
  416c05:	retf   
  416c06:	(bad)  
  416c07:	repnz mov ah,0xb
  416c0a:	add    BYTE PTR [edi+eax*2],al
  416c0d:	xor    eax,0x607debe4
  416c12:	adc    al,0x4e
  416c14:	jo     0x416b96
  416c16:	outs   dx,DWORD PTR ds:[esi]
  416c17:	loopne 0x416c36
  416c19:	aas    
  416c1a:	iret   
  416c1b:	mov    ecx,0x1bbf85aa
  416c20:	iret   
  416c21:	sbb    bl,bl
  416c23:	(bad)  
  416c24:	fiadd  WORD PTR [ecx+eax*4]
  416c27:	xchg   ecx,eax
  416c28:	pop    ebx
  416c29:	sub    ah,BYTE PTR [esi]
  416c2b:	sbb    esp,ecx
  416c2d:	mov    ebp,0x80f71a5a
  416c32:	cmp    eax,0x4f2a6114
  416c37:	test   eax,0x999da81a
  416c3c:	mov    bl,cl
  416c3e:	mov    al,0xd1
  416c40:	and    dh,BYTE PTR [ebx-0x74486972]
  416c46:	bnd jo 0x416bdc
  416c49:	ret    0x206d
  416c4c:	cmp    al,0x8c
  416c4e:	mov    edx,0x97d7270a
  416c53:	push   ds
  416c54:	cmc    
  416c55:	add    edi,DWORD PTR [edx+0x28]
  416c58:	push   ecx
  416c59:	mov    edi,0xc422ce34
  416c5e:	adc    esi,DWORD PTR [ecx-0x16de009c]
  416c64:	xchg   BYTE PTR ds:0x928c1453,bl
  416c6a:	fdivr  DWORD PTR [edi-0x51c12a86]
  416c70:	push   cs
  416c71:	mov    BYTE PTR [ebx-0x34061c61],dh
  416c77:	(bad)  
  416c78:	stc    
  416c79:	out    dx,eax
  416c7a:	and    eax,0x5dc740f6
  416c7f:	leave  
  416c80:	mov    cs,WORD PTR [ebp+0x2a]
  416c83:	mov    ebx,0xb52e0399
  416c88:	adc    BYTE PTR [ebx],0x53
  416c8b:	inc    ebp
  416c8c:	sub    esp,ebp
  416c8e:	mov    ch,0xcc
  416c90:	int3   
  416c91:	dec    eax
  416c92:	in     eax,dx
  416c93:	add    DWORD PTR [ecx+0x69],esp
  416c96:	xor    ebx,DWORD PTR [eax]
  416c98:	test   BYTE PTR [edx],bh
  416c9a:	pop    ebp
  416c9b:	das    
  416c9c:	inc    esi
  416c9d:	outs   dx,BYTE PTR ds:[esi]
  416c9e:	mov    cl,0x25
  416ca0:	pop    ebx
  416ca1:	mov    dh,0x76
  416ca3:	mov    esi,0x8593acfc
  416ca8:	mov    edx,0x94ada4ea
  416cad:	cwde   
  416cae:	xchg   edi,eax
  416caf:	jle    0x416c91
  416cb1:	inc    esp
  416cb2:	data16 aaa 
  416cb4:	je     0x416c99
  416cb6:	inc    esi
  416cb7:	lahf   
  416cb8:	sbb    ecx,DWORD PTR [ecx-0xa]
  416cbb:	call   0x8607:0x68f11a04
  416cc2:	icebp  
  416cc3:	out    dx,eax
  416cc4:	nop
  416cc5:	sub    eax,0xd690be7f
  416cca:	es popa 
  416ccc:	jno    0x416cfe
  416cce:	lea    edx,[ebp+0x32]
  416cd1:	pop    ecx
  416cd2:	pop    ebx
  416cd3:	(bad)  
  416cd4:	call   DWORD PTR [edi+eax*4]
  416cd7:	imul   edx,DWORD PTR [ebx],0xaf81ebc7
  416cdd:	dec    ebp
  416cde:	jmp    0x416ce5
  416ce0:	mov    ds:0xc6d53510,eax
  416ce5:	test   al,0x25
  416ce7:	mov    ?,ebx
  416ce9:	je     0x416d68
  416ceb:	call   0x3d79b639
  416cf0:	pop    ds
  416cf1:	pushf  
  416cf2:	xlat   BYTE PTR ds:[ebx]
  416cf3:	aam    0x36
  416cf5:	(bad)  
  416cf6:	adc    eax,0x8e0224c9
  416cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cfc:	jne    0x416d1a
  416cfe:	sub    cl,bl
  416d00:	lods   eax,DWORD PTR ds:[esi]
  416d01:	dec    ebp
  416d02:	aaa    
  416d03:	icebp  
  416d04:	fisubr DWORD PTR [edx]
  416d06:	mov    dl,0xe5
  416d08:	js     0x416cff
  416d0a:	fisub  WORD PTR [edx+ebp*2+0x69]
  416d0e:	sbb    bl,BYTE PTR [edi+0x576f74a8]
  416d14:	aas    
  416d15:	ficomp DWORD PTR [edx-0x7c5328c8]
  416d1b:	ds call 0x484b:0x61a274d8
  416d23:	pushf  
  416d24:	jns    0x416cc8
  416d26:	push   es
  416d27:	pop    edx
  416d28:	into   
  416d29:	jo     0x416cd4
  416d2b:	(bad)  
  416d2c:	xor    al,0x4b
  416d2e:	sbb    al,0x64
  416d30:	(bad)  
  416d31:	jmp    0x1d6f6941
  416d36:	push   edx
  416d37:	inc    BYTE PTR [esi-0x75]
  416d3a:	mov    cs:0x75552496,eax
  416d40:	adc    cl,cl
  416d42:	repz mov edi,0x6c9cf23e
  416d48:	jo     0x416dab
  416d4a:	mov    BYTE PTR [esi-0x7f535a48],bl
  416d50:	ss jne 0x416d0e
  416d53:	mov    cl,BYTE PTR [esi]
  416d55:	xor    BYTE PTR ds:0xf80a12a0,ah
  416d5b:	arpl   WORD PTR [esi+0x12e89f2f],ax
  416d61:	cmp    ecx,edi
  416d63:	dec    eax
  416d64:	mov    eax,ds:0x813b5d27
  416d69:	mov    al,0x14
  416d6b:	xor    DWORD PTR [ebp+0x748af320],ebp
  416d71:	cli    
  416d72:	push   ebp
  416d73:	sbb    ebp,DWORD PTR [ebx]
  416d75:	cwde   
  416d76:	jl     0x416d4e
  416d78:	sbb    eax,0x661c0d7a
  416d7d:	call   0xc0a8377e
  416d82:	inc    esi
  416d83:	mov    eax,edi
  416d85:	div    DWORD PTR [ecx-0x31809aa8]
  416d8b:	(bad)  
  416d8c:	pop    ss
  416d8d:	mov    edi,DWORD PTR [ebp+edi*8+0x65]
  416d91:	add    al,0xc3
  416d93:	sbb    BYTE PTR [ebx+0x51c227f5],bl
  416d99:	nop
  416d9a:	cdq    
  416d9b:	pop    eax
  416d9c:	lods   eax,DWORD PTR ds:[esi]
  416d9d:	pop    ecx
  416d9e:	add    DWORD PTR [eax+eiz*8+0x1e5505e6],0x3c8d7f2a
  416da9:	(bad)  
  416daa:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dac:	test   BYTE PTR [eax+0x71],0xff
  416db0:	inc    ecx
  416db1:	push   edx
  416db2:	lods   al,BYTE PTR ds:[esi]
  416db3:	mov    edx,0xd5fc3204
  416db8:	push   ds
  416db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dba:	mov    edi,0xf65ff528
  416dbf:	lods   eax,DWORD PTR ds:[esi]
  416dc0:	push   ebx
  416dc1:	pushf  
  416dc2:	out    0x70,al
  416dc4:	mov    bh,0xf4
  416dc6:	(bad)  [ecx-0x61615da7]
  416dcc:	jmp    0x94a09629
  416dd1:	imul   ebx,DWORD PTR [edx]
  416dd4:	dec    esp
  416dd5:	adc    eax,0x9abb028e
  416dda:	mov    BYTE PTR [edx+0x2a],ah
  416ddd:	rol    DWORD PTR [ebx+0x42],0x6
  416de1:	cwde   
  416de2:	(bad)  
  416de3:	popa   
  416de4:	es push eax
  416de6:	fs (bad) 
  416de8:	fst    DWORD PTR [ecx]
  416dea:	mov    esp,0x2f868df1
  416def:	std    
  416df0:	pop    eax
  416df1:	mov    al,ds:0x8bd6f168
  416df6:	fwait
  416df7:	std    
  416df8:	jae    0x416dee
  416dfa:	lds    eax,FWORD PTR ds:0x5c5fb84
  416e00:	dec    ecx
  416e01:	cdq    
  416e02:	cmp    ch,cl
  416e04:	nop
  416e05:	mov    gs,WORD PTR [eax-0x2bb8b0db]
  416e0b:	jno    0x416e06
  416e0d:	jp     0x416e63
  416e0f:	pop    ecx
  416e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e12:	les    eax,FWORD PTR [ebx+0x3b5c124e]
  416e18:	xor    esp,ebx
  416e1a:	iret   
  416e1b:	ins    DWORD PTR es:[edi],dx
  416e1c:	fwait
  416e1d:	addr16 lock mov bh,0xe9
  416e21:	mov    al,ds:0x47fff165
  416e26:	or     edi,0x12
  416e29:	leave  
  416e2a:	cmp    ebx,DWORD PTR [ebp-0x29]
  416e2d:	dec    ebp
  416e2e:	jle    0x416e7a
  416e30:	sbb    al,0x6d
  416e32:	jp     0x416df2
  416e34:	mov    ebx,gs
  416e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e37:	(bad)  
  416e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e39:	cs ds push edi
  416e3c:	xor    eax,0x7ebedc24
  416e41:	dec    ebx
  416e42:	loopne 0x416eba
  416e44:	idiv   DWORD PTR [ebx+0x6e9e0667]
  416e4a:	outs   dx,DWORD PTR ds:[esi]
  416e4b:	out    dx,eax
  416e4c:	mov    al,0xe1
  416e4e:	mov    dl,0xef
  416e50:	cmp    ebx,DWORD PTR [edx]
  416e52:	in     eax,dx
  416e53:	test   dh,bh
  416e55:	iret   
  416e56:	add    bl,BYTE PTR [ebx+ebp*1-0x55]
  416e5a:	(bad)  
  416e5c:	inc    ebx
  416e5d:	jo     0x416e62
  416e5f:	dec    ebx
  416e60:	add    ecx,esp
  416e62:	fsubp  st(3),st
  416e64:	(bad)  
  416e65:	push   edx
  416e66:	ja     0x416ebf
  416e68:	test   BYTE PTR [edx+0x1f],dl
  416e6b:	add    edx,DWORD PTR [esi+0x22637678]
  416e71:	(bad)  
  416e72:	mov    ds:0xfde6829b,eax
  416e77:	or     ch,BYTE PTR [ecx-0x82da002]
  416e7d:	jp     0x416eb1
  416e7f:	icebp  
  416e80:	jecxz  0x416ef2
  416e82:	dec    ebx
  416e83:	gs mov ebp,0x2f6015ed
  416e89:	outs   dx,DWORD PTR ds:[esi]
  416e8a:	jnp    0x416ee7
  416e8c:	pop    ebx
  416e8d:	ror    BYTE PTR [ebx-0x7c0f12cb],1
  416e93:	dec    edi
  416e94:	sahf   
  416e95:	inc    ecx
  416e96:	daa    
  416e97:	(bad)  
  416e98:	retf   0xfb3b
  416e9b:	cld    
  416e9c:	pop    es
  416e9d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e9f:	sbb    eax,0xdbb6a2b
  416ea4:	jle    0x416ee5
  416ea6:	hlt    
  416ea7:	pop    edx
  416ea8:	sub    BYTE PTR [eax-0x36],0x92
  416eac:	arpl   WORD PTR [bx+si-0x55],ax
  416eb0:	push   edi
  416eb1:	sub    al,0x81
  416eb3:	ficomp DWORD PTR [esp+ecx*8-0x11]
  416eb7:	push   edx
  416eb8:	xchg   esp,eax
  416eb9:	push   esi
  416ebb:	mov    eax,0x26807c6b
  416ec0:	pop    eax
  416ec1:	(bad)  
  416ec2:	cli    
  416ec3:	or     edi,DWORD PTR [esi+0x6b]
  416ec6:	inc    eax
  416ec7:	xchg   esp,eax
  416ec8:	sbb    DWORD PTR [ecx+0x6757e320],ebp
  416ece:	hlt    
  416ecf:	pusha  
  416ed0:	(bad)  
  416ed1:	into   
  416ed2:	popa   
  416ed3:	stos   DWORD PTR es:[edi],eax
  416ed4:	lods   eax,DWORD PTR ds:[esi]
  416ed5:	mov    ?,WORD PTR [edx]
  416ed7:	ja     0x416ef2
  416ed9:	dec    ecx
  416eda:	inc    esp
  416edb:	cdq    
  416edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416edd:	aad    0xfd
  416edf:	mov    ch,0xa7
  416ee1:	xor    ch,0x8b
  416ee4:	int3   
  416ee5:	pop    esi
  416ee6:	mov    esp,0x646f7c42
  416eeb:	xchg   edi,eax
  416eec:	js     0x416e82
  416eee:	shr    DWORD PTR [ebx],0xb1
  416ef1:	cmp    ah,dh
  416ef3:	add    al,0x97
  416ef5:	jl     0x416f16
  416ef7:	outs   dx,BYTE PTR ds:[esi]
  416ef8:	push   0x3a
  416efa:	dec    ebx
  416efb:	nop
  416efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416efd:	mov    edi,DWORD PTR [ecx]
  416eff:	sar    DWORD PTR [edi+0x7],cl
  416f02:	rcl    DWORD PTR [eax],1
  416f04:	aaa    
  416f05:	lahf   
  416f06:	pop    eax
  416f07:	jns    0x416f5d
  416f09:	xor    dl,0x42
  416f0c:	sar    DWORD PTR [edx-0x5b],0xd9
  416f10:	std    
  416f11:	div    ebp
  416f13:	rcl    BYTE PTR [ebx+ebp*1-0x52a33d7f],0x40
  416f1b:	jnp    0x416f7b
  416f1d:	sti    
  416f1e:	add    al,0x5
  416f20:	dec    edi
  416f21:	popf   
  416f22:	xor    ch,BYTE PTR [eax]
  416f24:	inc    edi
  416f25:	(bad)  
  416f26:	xchg   edi,eax
  416f27:	bound  eax,QWORD PTR [eax+0x33]
  416f2a:	mov    esi,DWORD PTR [edi]
  416f2c:	cli    
  416f2d:	pop    eax
  416f2e:	xor    eax,0x5f7e640b
  416f33:	(bad)  
  416f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f36:	mov    ecx,0xcc27d502
  416f3b:	inc    edi
  416f3c:	sbb    dl,bh
  416f3e:	les    eax,FWORD PTR [ecx]
  416f40:	or     ch,dh
  416f42:	scas   eax,DWORD PTR es:[edi]
  416f43:	sub    BYTE PTR [eax],bh
  416f45:	pop    ebp
  416f46:	test   al,0xfd
  416f48:	add    edx,esi
  416f4a:	outs   dx,DWORD PTR ds:[esi]
  416f4b:	(bad)  
  416f4c:	jae    0x416faa
  416f4e:	aad    0xfa
  416f50:	call   0x750ca104
  416f55:	jg     0x416f6b
  416f57:	sub    BYTE PTR [edx-0x1c],cl
  416f5a:	xchg   ebp,eax
  416f5b:	je     0x416f9b
  416f5d:	cmp    eax,0x5e20bc19
  416f62:	mov    cl,dh
  416f64:	or     al,0x2b
  416f66:	ins    DWORD PTR es:[edi],dx
  416f67:	and    BYTE PTR [ebx+0x152b846a],cl
  416f6d:	xor    ah,BYTE PTR [eax]
  416f6f:	call   0x3923:0xc1202c6c
  416f76:	imul   edi,DWORD PTR [edx],0xecc90a2
  416f7c:	popa   
  416f7d:	add    eax,0x7fdfc48c
  416f82:	or     dh,BYTE PTR [esi-0x46a5c665]
  416f88:	inc    ebp
  416f89:	push   edx
  416f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f8b:	call   0x50e9bd1
  416f90:	shl    ah,0x68
  416f93:	fnstsw WORD PTR [edx+ebp*8]
  416f96:	sbb    DWORD PTR [esi+0x202eb55b],0x33
  416f9d:	sbb    dl,ah
  416f9f:	in     al,dx
  416fa0:	popa   
  416fa1:	dec    edi
  416fa2:	fdiv   st,st(5)
  416fa4:	leave  
  416fa5:	jnp    0x416fe5
  416fa7:	imul   edi,DWORD PTR fs:[esi],0xda1fc02d
  416fae:	dec    ebx
  416faf:	push   esp
  416fb0:	mov    al,0x51
  416fb2:	test   BYTE PTR [ebx+esi*8+0x64e75a72],dl
  416fb9:	mov    ebp,0x852b2acd
  416fbe:	div    BYTE PTR [ebp+0x2928206f]
  416fc4:	xchg   edi,eax
  416fc5:	xor    BYTE PTR [ecx+esi*8-0x10775bc0],dl
  416fcc:	popa   
  416fcd:	popf   
  416fce:	sbb    DWORD PTR [ebx],edi
  416fd0:	lock sub dl,BYTE PTR [ebx-0x6d]
  416fd4:	adc    al,0xc6
  416fd6:	mov    edi,0x91b09342
  416fdb:	popf   
  416fdc:	mov    DWORD PTR [ebx-0xc],esp
  416fdf:	dec    esp
  416fe0:	jo     0x416fe3
  416fe2:	ja     0x41705a
  416fe4:	mov    cs,WORD PTR [esi+0x6d]
  416fe7:	add    ebx,DWORD PTR [ebx-0x6a]
  416fea:	leave  
  416feb:	push   eax
  416fec:	ficomp WORD PTR [edi+edi*2]
  416fef:	push   ds
  416ff0:	popf   
  416ff1:	mov    esi,0xe8897bf1
  416ff6:	add    eax,0x3d0bd6d
  416ffb:	popa   
  416ffc:	test   eax,0xaae61573
  417001:	hlt    
  417002:	sub    bl,BYTE PTR [ebx]
  417004:	loope  0x416fc0
  417006:	add    ch,BYTE PTR [ecx-0x66]
  417009:	shr    BYTE PTR [edi],0x78
  41700c:	jmp    0x5c8eaf3
  417011:	inc    edi
  417012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417013:	cli    
  417014:	mov    esp,DWORD PTR [esi+eiz*8+0x637adbef]
  41701b:	jl     0x417062
  41701d:	cmp    eax,0x41c43dd6
  417022:	dec    esp
  417023:	hlt    
  417024:	repnz inc edi
  417026:	push   ecx
  417027:	je     0x416fdc
  417029:	mov    dl,0x82
  41702b:	lods   al,BYTE PTR ds:[esi]
  41702c:	inc    eax
  41702d:	retf   
  41702e:	in     al,dx
  41702f:	mov    eax,ds:0xeb15c4ec
  417034:	test   eax,0xa36fe4f9
  417039:	mov    BYTE PTR [edi],dh
  41703b:	ret    0xbff6
  41703e:	in     al,0x5b
  417040:	loope  0x416fee
  417042:	sar    bh,cl
  417044:	(bad)
  417047:	dec    eax
  417048:	in     eax,dx
  417049:	mov    al,0x0
  41704b:	xchg   edx,eax
  41704c:	ds mov ecx,0xe5e1b3d9
  417052:	mov    cs,WORD PTR [edi+0x39964adb]
  417058:	gs clc 
  41705a:	lds    eax,FWORD PTR [esi+0x4b]
  41705d:	popf   
  41705e:	xchg   ebx,eax
  41705f:	jne    0x417082
  417061:	mov    bx,0x2617
  417065:	and    bh,BYTE PTR [ecx+0xfb13f5c]
  41706b:	inc    esp
  41706c:	xor    BYTE PTR [ebx+0x5b],0x4b
  417070:	mov    ds:0x4441c41b,eax
  417075:	iret   
  417076:	pop    ecx
  417077:	xor    ch,BYTE PTR [edi]
  417079:	mov    eax,ds:0x222fefdf
  41707e:	daa    
  41707f:	push   esp
  417080:	push   ss
  417081:	pop    edi
  417082:	fadd   QWORD PTR [ebp+0x37e4cf56]
  417088:	retf   0xab39
  41708b:	xchg   esi,ebp
  41708d:	cs push ebx
  41708f:	and    BYTE PTR ds:[edi+ebx*8],0xb3
  417094:	shl    BYTE PTR [eax],0x15
  417097:	test   DWORD PTR [ebx],esp
  417099:	int    0xe2
  41709b:	(bad)  
  41709c:	leave  
  41709d:	repnz xchg dh,bh
  4170a0:	out    dx,al
  4170a1:	ja     0x4170b2
  4170a3:	mov    ah,0x1b
  4170a5:	cwde   
  4170a6:	xchg   ecx,eax
  4170a7:	mov    dh,0xfd
  4170a9:	xchg   ebp,eax
  4170aa:	cmp    eax,0x41d694db
  4170af:	retf   
  4170b0:	xchg   edx,eax
  4170b1:	xchg   ch,bh
  4170b3:	add    al,al
  4170b5:	jo     0x4170b8
  4170b7:	ja     0x4170c3
  4170b9:	inc    ecx
  4170ba:	push   0xe6e10080
  4170bf:	adc    BYTE PTR [ebx-0x50ec4b60],cl
  4170c5:	mov    edi,0xaaef6e34
  4170ca:	or     ebx,DWORD PTR [edi+0x1e55ea60]
  4170d0:	ins    DWORD PTR es:[edi],dx
  4170d1:	mov    eax,ds:0x1b626c47
  4170d6:	bound  esp,QWORD PTR [ecx+0x2e]
  4170d9:	add    DWORD PTR [edi],esi
  4170db:	pop    ebp
  4170dc:	mov    ebp,0xf1574635
  4170e1:	(bad)  
  4170e2:	and    BYTE PTR [eax-0x527eccbf],al
  4170e8:	inc    edi
  4170e9:	cdq    
  4170ea:	xor    ch,BYTE PTR [ecx+eiz*1-0x24a739bb]
  4170f1:	sub    al,0x31
  4170f3:	into   
  4170f4:	xchg   BYTE PTR [edx-0x986d5b6],dh
  4170fa:	push   eax
  4170fb:	jno    0x417111
  4170fd:	fisttp WORD PTR [ebp+eax*2+0x5b]
  417101:	call   0x4869:0x10652234
  417108:	(bad)  
  417109:	and    eax,0xcd3a529a
  41710e:	and    eax,0x8b6c9e60
  417113:	test   DWORD PTR [eax-0x65],ebp
  417116:	div    DWORD PTR [edi+0x29]
  417119:	dec    ebx
  41711a:	cmp    al,0x9e
  41711c:	hlt    
  41711d:	sbb    BYTE PTR [esi+0x7],cl
  417120:	cli    
  417121:	neg    DWORD PTR [ecx-0x7a25c3c4]
  417127:	(bad)  [ecx+0x7d]
  41712a:	addr16 imul esi,esi,0xffffffb5
  41712e:	ror    DWORD PTR [eax+0x47fcc040],cl
  417134:	in     eax,0x6d
  417136:	aad    0x9c
  417138:	loop   0x417165
  41713a:	mov    esi,0xc1d05ed9
  41713f:	jmp    0x2b687711
  417144:	cmp    eax,DWORD PTR [esi+0x40]
  417147:	out    0x25,eax
  417149:	sub    al,0x4
  41714b:	(bad)  
  41714c:	sub    eax,0xcc547de7
  417151:	enter  0xd57,0x45
  417155:	add    BYTE PTR [ebx],0x32
  417158:	push   esp
  417159:	(bad)  
  41715b:	rol    BYTE PTR [esi+edi*4+0x60],1
  41715f:	jge    0x417124
  417161:	(bad)  
  417162:	imul   eax
  417164:	mov    eax,ds:0xb16251c0
  417169:	xchg   esi,ebx
  41716b:	lahf   
  41716c:	ins    DWORD PTR es:[edi],dx
  41716d:	xchg   ebp,eax
  41716e:	mov    ch,0x6a
  417170:	subps  xmm7,XMMWORD PTR [eax+0x2884705b]
  417177:	jnp    0x417191
  417179:	out    dx,eax
  41717a:	inc    ecx
  41717b:	dec    esi
  41717c:	imul   esp,DWORD PTR [ecx+0x13e14da5],0xffffffa6
  417183:	sub    DWORD PTR [edx*2+0x5479124d],0xffffff8b
  41718b:	out    0xdc,eax
  41718d:	jl     0x4171bb
  41718f:	jnp    0x4171d6
  417191:	into   
  417192:	and    DWORD PTR [eax-0x7e62ea19],ebp
  417198:	push   edi
  417199:	imul   esp,DWORD PTR [esi],0xbe3ab163
  41719f:	lods   al,BYTE PTR ds:[esi]
  4171a0:	xchg   ecx,eax
  4171a1:	cmp    esi,esi
  4171a3:	push   0x1e3f285a
  4171a8:	arpl   WORD PTR [esi-0x4e],bp
  4171ab:	fimul  WORD PTR [edi+ebp*2-0x76]
  4171af:	in     eax,0xb0
  4171b1:	call   0x2a52:0x958541f6
  4171b8:	xchg   ebp,eax
  4171b9:	rol    BYTE PTR [eax],cl
  4171bb:	outs   dx,DWORD PTR ds:[esi]
  4171bc:	stc    
  4171bd:	sub    BYTE PTR [edi+0x395b25fa],dh
  4171c3:	es xchg edi,eax
  4171c5:	in     eax,0x37
  4171c7:	mov    eax,0x7ffbef5b
  4171cc:	push   edi
  4171cd:	fs in  eax,0xd2
  4171d0:	add    dh,BYTE PTR [edi]
  4171d2:	rcl    DWORD PTR [ecx+eiz*8-0x77],0xb0
  4171d7:	int    0xe7
  4171d9:	test   DWORD PTR [ebp+0x48],esp
  4171dc:	aas    
  4171dd:	es cmp al,0xce
  4171e0:	je     0x4171bf
  4171e2:	sbb    DWORD PTR [edx+0xe2ff3ed],esp
  4171e8:	xchg   edi,eax
  4171e9:	repz xor BYTE PTR [ecx],ah
  4171ec:	inc    edi
  4171ed:	lds    ecx,FWORD PTR [ecx-0x42e0922d]
  4171f3:	adc    BYTE PTR [esi-0x75],dl
  4171f6:	cs aas 
  4171f8:	and    BYTE PTR ds:0xa1ada221,bl
  4171fe:	mov    ch,0x3
  417200:	sub    DWORD PTR [ecx-0x74],ebp
  417203:	ins    BYTE PTR es:[edi],dx
  417204:	mov    ds:0xc03311c4,al
  417209:	es mov ch,0x49
  41720c:	jecxz  0x417276
  41720e:	lods   al,BYTE PTR ds:[esi]
  41720f:	inc    edi
  417210:	fist   DWORD PTR [ebx-0x34f5a25d]
  417216:	adc    BYTE PTR [ecx+0x4364ae7e],ch
  41721c:	push   ebp
  41721d:	lahf   
  41721e:	gs xchg edi,eax
  417220:	and    al,0xea
  417222:	adc    BYTE PTR [edi+0x4e888aca],0xb4
  417229:	mov    dl,0xb0
  41722b:	jle    0x4171f0
  41722d:	dec    edi
  41722e:	mov    bl,0xa0
  417230:	pushf  
  417231:	jns    0x417217
  417233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417234:	nop
  417235:	jmp    0xebe5:0x73f0c387
  41723c:	leave  
  41723d:	sub    dh,BYTE PTR [edx+ecx*8+0x10f66397]
  417244:	lods   eax,DWORD PTR ds:[esi]
  417245:	push   ebx
  417246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417247:	xchg   BYTE PTR [edx+edi*4+0x17],bl
  41724b:	xchg   ecx,eax
  41724c:	mov    eax,ds:0x2db53c5c
  417251:	ror    BYTE PTR [edx],cl
  417253:	and    ebp,DWORD PTR [ebp+ecx*1-0x28]
  417257:	mov    ebx,0x36752a0b
  41725c:	xor    DWORD PTR [esp+ebx*2-0x32227841],esi
  417263:	mov    eax,fs
  417265:	xor    al,0x4a
  417267:	loopne 0x417241
  417269:	mov    al,ds:0x7a76f969
  41726e:	in     eax,0xe7
  417270:	scas   al,BYTE PTR es:[edi]
  417271:	sub    ecx,ebx
  417273:	adc    DWORD PTR [ebp-0x3],0x4b
  417277:	pop    edx
  417278:	mov    al,ds:0x6f3b9ce1
  41727d:	xlat   BYTE PTR ds:[ebx]
  41727e:	dec    eax
  41727f:	(bad)
  417282:	jge    0x417230
  417284:	adc    DWORD PTR [edi+0x36d1e806],0x18
  41728b:	sbb    BYTE PTR [ebp+ebp*4-0x55],al
  41728f:	rol    DWORD PTR [edi+0x50e0e700],cl
  417295:	sub    bl,BYTE PTR ds:0x3a1731af
  41729b:	fild   QWORD PTR [ecx+0x79]
  41729e:	sub    al,0x33
  4172a0:	mov    dh,0xf4
  4172a2:	mov    esp,0xa7af6951
  4172a7:	lock sti 
  4172a9:	jl     0x417287
  4172ab:	jge    0x4172cf
  4172ad:	retf   
  4172ae:	sbb    DWORD PTR [ebx+0xb],esi
  4172b1:	jmp    0x417312
  4172b3:	mov    esp,0x50564ae8
  4172b8:	adc    ebx,DWORD PTR [ebp+eiz*8-0x52ef3841]
  4172bf:	push   eax
  4172c0:	mov    ebx,0x808b3beb
  4172c5:	popa   
  4172c6:	mov    ebp,0x6c32123
  4172cb:	cmp    edx,esp
  4172cd:	outs   dx,DWORD PTR ds:[esi]
  4172ce:	call   0x26d9fb96
  4172d3:	mov    ?,WORD PTR ds:0x1219bc8d
  4172d9:	fisubr DWORD PTR [ebp+0x1d]
  4172dc:	jo     0x4172db
  4172de:	je     0x417342
  4172e0:	repnz es and al,0x5e
  4172e4:	scas   eax,DWORD PTR es:[edi]
  4172e5:	adc    ebx,DWORD PTR [ebx]
  4172e7:	test   eax,0x4366a36a
  4172ec:	inc    eax
  4172ed:	mov    al,ds:0x33049531
  4172f2:	arpl   WORD PTR [ebp+0x54],si
  4172f5:	mov    eax,esp
  4172f7:	push   eax
  4172f8:	mov    edi,DWORD PTR [ebp+0x6caa9f46]
  4172fe:	inc    eax
  4172ff:	repz adc al,BYTE PTR [ebx+ebx*8+0x3845726e]
  417307:	test   BYTE PTR [eax+0x17],cl
  41730a:	or     esp,ecx
  41730c:	stos   BYTE PTR es:[edi],al
  41730d:	xchg   ebp,eax
  41730e:	outs   dx,BYTE PTR ds:[esi]
  41730f:	and    al,0xec
  417311:	adc    esi,DWORD PTR [esi+ebp*2]
  417314:	inc    esp
  417315:	je     0x4172ba
  417317:	lods   eax,DWORD PTR ds:[esi]
  417318:	jne    0x41734b
  41731a:	ret    
  41731b:	rcr    DWORD PTR [ebp+0x14],cl
  41731e:	repnz sbb ah,BYTE PTR [eax]
  417321:	dec    eax
  417322:	imul   ebx,DWORD PTR [ebx-0x3b02172c],0x31e9d687
  41732c:	push   es
  41732d:	mov    al,0xf0
  41732f:	jae    0x4172e4
  417331:	mov    cs,WORD PTR [ebx-0x1c]
  417334:	neg    DWORD PTR [esi-0x7cec18fd]
  41733a:	push   edi
  41733b:	lods   eax,DWORD PTR ds:[esi]
  41733c:	push   ds
  41733d:	mov    ds:0x7a9abe6a,al
  417342:	xchg   ebp,eax
  417343:	jp     0x41734e
  417345:	ror    BYTE PTR [esi+edi*1],1
  417348:	push   edx
  417349:	(bad)  
  41734a:	xor    eax,DWORD PTR [esi+0x21111348]
  417350:	xor    ebx,eax
  417352:	bnd jns 0x417389
  417355:	std    
  417356:	xor    edx,eax
  417358:	fcomip st,st(3)
  41735a:	int    0x8c
  41735c:	mov    ebp,0x5ca5ee
  417361:	out    dx,al
  417362:	dec    esi
  417363:	dec    ecx
  417364:	cs ja  0x4173d1
  417367:	mov    eax,ds:0xcf3650e8
  41736c:	out    0x98,eax
  41736e:	inc    edx
  41736f:	bound  ebx,QWORD PTR [esi-0x6]
  417372:	popa   
  417373:	stc    
  417374:	xrelease mov DWORD PTR [ebx+0x14],ebx
  417378:	cmp    ecx,DWORD PTR [edi+0x7b2dd5ba]
  41737e:	push   cs
  41737f:	jne    0x4173f1
  417381:	call   0x7efc12bf
  417386:	pushf  
  417387:	mov    al,ds:0xf6b4e5ad
  41738c:	shl    dh,cl
  41738e:	dec    ebx
  41738f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417390:	or     DWORD PTR ds:0xad04846a,esp
  417396:	idiv   esi
  417398:	mov    ebp,0x44a60b50
  41739d:	xchg   DWORD PTR [edx-0xa],ebx
  4173a0:	daa    
  4173a1:	retf   
  4173a2:	(bad)  
  4173a4:	aaa    
  4173a5:	test   ch,cl
  4173a7:	mov    al,0x98
  4173a9:	inc    eax
  4173aa:	inc    eax
  4173ab:	jae    0x417421
  4173ad:	cld    
  4173ae:	and    BYTE PTR ds:0xd59ee327,al
  4173b4:	das    
  4173b5:	xchg   ebx,eax
  4173b6:	mov    eax,ds:0x8e35c6b4
  4173bb:	imul   edx,DWORD PTR [esi+ebp*4+0x48ac52e4],0x75e909d1
  4173c6:	and    al,0xc2
  4173c8:	push   edx
  4173c9:	outs   dx,BYTE PTR ds:[esi]
  4173ca:	test   eax,0x78f6e946
  4173cf:	add    al,0x50
  4173d1:	pop    es
  4173d2:	pop    edi
  4173d3:	pusha  
  4173d4:	sahf   
  4173d5:	addr16 jmp 0x315c4803
  4173db:	push   cs
  4173dc:	mov    eax,0x3604c8ea
  4173e1:	and    al,0x1b
  4173e3:	or     BYTE PTR ds:0x99f11e,0x40
  4173ea:	cdq    
  4173eb:	stc    
  4173ec:	xchg   edi,eax
  4173ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173ee:	adc    BYTE PTR [esi+0x737254e9],dl
  4173f4:	push   ebx
  4173f5:	gs icebp 
  4173f7:	jle    0x41738d
  4173f9:	mov    ds:0x5794c736,al
  4173fe:	mov    ds:0xbbb9942f,al
  417403:	in     al,dx
  417404:	int3   
  417405:	shr    BYTE PTR [edx-0x8c6e36f],0xf6
  41740c:	cli    
  41740d:	xchg   edi,eax
  41740e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41740f:	cmp    al,0x7
  417411:	dec    ebx
  417412:	icebp  
  417413:	ja     0x4173e0
  417415:	or     esp,DWORD PTR [edi+0x57]
  417418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417419:	mov    ds:0x4deb1f69,al
  41741e:	jge    0x4173d5
  417420:	(bad)  
  417421:	jmp    0xda601f10
  417426:	xor    DWORD PTR [esi],edx
  417428:	shl    DWORD PTR [edi+0x32],cl
  41742b:	dec    ebp
  41742c:	jns    0x417474
  41742e:	sub    BYTE PTR [edx+0x71],bl
  417431:	(bad)  
  417432:	push   ebp
  417433:	daa    
  417434:	out    0xfa,eax
  417436:	jno    0x417424
  417438:	cmp    edx,DWORD PTR [eax+eax*4]
  41743b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41743c:	mov    dh,0x47
  41743e:	(bad)  
  41743f:	adc    bh,BYTE PTR [edi+0x79ab28d2]
  417445:	test   eax,0xb5754721
  41744a:	adc    al,dh
  41744c:	dec    edx
  41744d:	adc    al,0xa8
  41744f:	shl    DWORD PTR [esi+0x4bc4d269],cl
  417455:	mov    ecx,0x4b9bcb4b
  41745a:	popf   
  41745b:	lock not DWORD PTR [eax+0x65fd4f4d]
  417462:	stos   DWORD PTR es:[edi],eax
  417463:	xchg   BYTE PTR [edx+0x0],bh
  417466:	cwde   
  417467:	div    dl
  417469:	enter  0xeca5,0x4f
  41746d:	ss pop edi
  41746f:	pop    ss
  417470:	in     al,dx
  417471:	xchg   ebx,edi
  417473:	out    0x55,eax
  417475:	push   0x33
  417477:	push   esp
  417478:	sbb    al,0xb6
  41747a:	ret    0xbc48
  41747d:	aam    0x1d
  41747f:	jmp    0x8a1e79e1
  417484:	jecxz  0x41740c
  417486:	pop    ebx
  417487:	pop    edi
  417488:	cmp    BYTE PTR [edx],bl
  41748a:	fdivr  QWORD PTR [edx-0xe18ef00]
  417490:	xor    esp,ecx
  417492:	and    esp,DWORD PTR [eax]
  417494:	jmp    0x152b545f
  417499:	add    cl,cl
  41749b:	sbb    al,0xed
  41749d:	push   cs
  41749e:	pop    es
  41749f:	call   0x81d6bcf4
  4174a4:	ins    BYTE PTR es:[edi],dx
  4174a5:	pop    es
  4174a6:	xchg   BYTE PTR [esi+0x68a53858],al
  4174ac:	stc    
  4174ad:	arpl   WORD PTR [eax-0x26],cx
  4174b0:	(bad)
  4174b3:	sbb    eax,0x20fb1963
  4174b8:	push   ebx
  4174b9:	cmp    cl,BYTE PTR [edx]
  4174bb:	leave  
  4174bc:	mov    ds:0xb49b423e,eax
  4174c1:	sub    al,0xcd
  4174c3:	test   BYTE PTR [eax],ah
  4174c5:	jge    0x417519
  4174c7:	je     0x4174d9
  4174c9:	cmp    esi,eax
  4174cb:	(bad)  
  4174cc:	pop    ebx
  4174cd:	xor    DWORD PTR [edi+ebx*1+0x54478862],esi
  4174d4:	jecxz  0x4174d5
  4174d6:	dec    ecx
  4174d7:	test   BYTE PTR [ebp+0x6c],cl
  4174da:	cmp    DWORD PTR [eax-0x21bc09bd],eax
  4174e0:	push   edi
  4174e1:	sar    BYTE PTR [edx],cl
  4174e3:	jo     0x417508
  4174e5:	shl    DWORD PTR ss:[edx],1
  4174e8:	fnstsw WORD PTR [edx-0x13]
  4174eb:	mov    ds:0x61bb7eed,al
  4174f0:	dec    ebp
  4174f1:	sub    ecx,DWORD PTR [ebx+0x6d]
  4174f4:	mov    eax,ds:0x4448a899
  4174f9:	push   es
  4174fa:	mov    ebp,0x43d227ed
  4174ff:	sub    eax,0x87a36c52
  417504:	in     eax,0x39
  417506:	cmc    
  417507:	test   DWORD PTR [ebx-0x2d],edi
  41750a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41750b:	int    0xfa
  41750d:	(bad)  
  41750e:	fisub  WORD PTR [edx+0x90e9e3e]
  417514:	sub    edi,DWORD PTR [eax-0x2d026200]
  41751a:	addr16 ja 0x417510
  41751d:	mov    ds:0x1739ee2b,eax
  417522:	pop    edi
  417523:	mov    edi,0xb493338b
  417528:	add    eax,0x16fef045
  41752d:	adc    edx,DWORD PTR [edx]
  41752f:	adc    dl,ah
  417531:	sar    ebp,1
  417533:	sbb    ecx,eax
  417535:	mov    ecx,0x7670514
  41753a:	cmp    DWORD PTR [ebp-0x570f7d60],esp
  417540:	push   ecx
  417541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417542:	and    esp,DWORD PTR [ecx-0x1c29db1e]
  417548:	lea    ebp,[ecx+0x6d]
  41754b:	jmp    0x417590
  41754d:	cmp    al,0xf
  41754f:	pop    eax
  417550:	out    0x3e,eax
  417552:	sar    bl,1
  417554:	std    
  417555:	mov    ebx,0xa3bcbf13
  41755a:	repz int3 
  41755c:	mov    bl,cl
  41755e:	mov    edi,0xae5e6034
  417563:	push   edi
  417564:	mov    eax,ds:0x711a19f
  417569:	pop    ss
  41756a:	jo     0x4175db
  41756c:	clc    
  41756d:	dec    ebp
  41756e:	ret    
  41756f:	jnp    0x4175e9
  417571:	xchg   BYTE PTR [eax-0x40d8a1c0],cl
  417577:	jb     0x417513
  417579:	dec    DWORD PTR [esi]
  41757b:	adc    BYTE PTR [edi-0x99699d0],al
  417581:	sbb    BYTE PTR [ebx],bl
  417583:	adc    eax,0x4e3ec1d9
  417588:	sbb    BYTE PTR [edx+0x72d3d2c7],al
  41758e:	adc    esi,DWORD PTR [eax+0x39f2004c]
  417594:	mov    ebp,0x26f8c477
  417599:	mov    esi,0x12dbcbd5
  41759e:	mov    ch,BYTE PTR [edi-0x37bdde7a]
  4175a4:	mov    edi,0x56ff3c97
  4175a9:	cmc    
  4175aa:	ins    DWORD PTR es:[edi],dx
  4175ab:	push   ebx
  4175ac:	add    edi,DWORD PTR [ebp-0x1c]
  4175af:	cmp    eax,0x14cdeb3f
  4175b4:	int3   
  4175b5:	mov    ds:0xa582d56,al
  4175ba:	scas   al,BYTE PTR es:[edi]
  4175bb:	push   eax
  4175bc:	dec    ebx
  4175bd:	add    eax,0x599cbaa
  4175c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175c3:	jnp    0x4175b5
  4175c5:	ds jecxz 0x417553
  4175c8:	loopne 0x41758e
  4175ca:	mov    ebp,0x588c45e2
  4175cf:	push   ds
  4175d0:	je     0x4175b0
  4175d2:	add    al,0x57
  4175d4:	sahf   
  4175d5:	xchg   ebp,eax
  4175d6:	mov    al,ds:0x27e2ca89
  4175db:	mov    BYTE PTR [ecx],dl
  4175dd:	sub    BYTE PTR [ecx+edi*4],ah
  4175e0:	test   DWORD PTR [ecx+edx*8],esp
  4175e3:	sbb    DWORD PTR [eax+eiz*2-0x69],esi
  4175e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175e8:	inc    eax
  4175e9:	or     edx,ebx
  4175eb:	stc    
  4175ec:	xchg   ecx,eax
  4175ed:	dec    ebx
  4175ee:	call   0xe9638164
  4175f3:	call   0xde9d4af2
  4175f8:	or     BYTE PTR [esi+0x64],cl
  4175fb:	inc    esp
  4175fc:	stc    
  4175fd:	add    DWORD PTR [eax+esi*4+0x4c],edx
  417601:	add    al,0x3c
  417603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417604:	enter  0xf040,0x2c
  417608:	xor    DWORD PTR [ebx+0x14],0x23
  41760c:	retf   
  41760d:	loopne 0x4175ec
  41760f:	jne    0x4175d3
  417611:	mov    ds:0x615309d6,eax
  417616:	test   BYTE PTR [edx+0x62775bbb],ch
  41761c:	repnz mov eax,ds:0xcb6d2d5d
  417622:	push   ecx
  417623:	push   eax
  417624:	test   DWORD PTR [ecx-0x41],esi
  417627:	rcr    DWORD PTR [edx],0x7a
  41762a:	in     eax,0xf6
  41762c:	lods   al,BYTE PTR ds:[esi]
  41762d:	dec    eax
  41762e:	dec    edx
  41762f:	xchg   edi,eax
  417630:	xchg   esi,eax
  417631:	sub    BYTE PTR [esi+edi*2],dl
  417634:	jle    0x41761a
  417636:	sbb    BYTE PTR [edi+eiz*4],0x87
  41763a:	int    0x56
  41763c:	mov    ch,0xe5
  41763e:	test   BYTE PTR ds:0x7e54750,0xbe
  417645:	retf   
  417646:	addr16 xor al,0x79
  417649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41764a:	push   eax
  41764b:	cmc    
  41764c:	or     DWORD PTR [edi+0x3f053183],edi
  417652:	xchg   edi,eax
  417653:	sub    ch,BYTE PTR [eax+0x7c93474d]
  417659:	inc    ecx
  41765a:	add    eax,0xef82041c
  41765f:	mov    bl,dh
  417661:	dec    ebx
  417662:	push   eax
  417663:	dec    esp
  417664:	(bad)  
  417665:	std    
  417666:	fsubr  DWORD PTR [edi-0x7b3650e9]
  41766c:	dec    ebx
  41766d:	jae    0x417640
  41766f:	arpl   WORD PTR [edx-0x1b],bx
  417672:	or     edi,DWORD PTR ds:0x2b46789f
  417678:	add    ebx,DWORD PTR [eax+0x4cf4a035]
  41767e:	sbb    cl,BYTE PTR [esi+0x6e]
  417681:	fisttp DWORD PTR [edi]
  417683:	stos   DWORD PTR es:[edi],eax
  417684:	xor    al,0xa4
  417686:	mov    DWORD PTR [edx],ebx
  417688:	inc    bl
  41768a:	cmp    al,0x2b
  41768c:	or     DWORD PTR [ecx-0x63],ecx
  41768f:	lahf   
  417690:	lods   eax,DWORD PTR ds:[esi]
  417691:	dec    esp
  417692:	(bad)  
  417693:	ins    BYTE PTR es:[edi],dx
  417694:	retf   
  417695:	push   ebx
  417696:	ja     0x417640
  417698:	es stos DWORD PTR es:[edi],eax
  41769a:	or     ch,BYTE PTR [eax+0x64798f34]
  4176a0:	jl     0x4176f7
  4176a2:	cmp    BYTE PTR [esi-0x5200e866],cl
  4176a8:	cmp    BYTE PTR [edx+0x1a3418],dl
  4176ae:	inc    ebx
  4176af:	inc    ecx
  4176b0:	mov    dl,0x10
  4176b2:	test   dl,al
  4176b4:	repz pop edx
  4176b6:	sti    
  4176b7:	ins    BYTE PTR es:[edi],dx
  4176b8:	imul   ebx,DWORD PTR [eax+edi*2],0xffffffcc
  4176bc:	(bad)  
  4176bd:	mov    eax,ds:0x7c527fcd
  4176c2:	dec    esp
  4176c3:	dec    esp
  4176c4:	push   edx
  4176c5:	inc    esi
  4176c6:	mov    edx,?
  4176c8:	popa   
  4176c9:	leave  
  4176ca:	dec    eax
  4176cb:	sahf   
  4176cc:	or     esp,DWORD PTR [eax+0x61645a78]
  4176d2:	cmc    
  4176d3:	add    esi,esp
  4176d5:	(bad)  
  4176d7:	cmp    al,0x36
  4176d9:	rol    eax,1
  4176db:	call   0xb3bf:0x790ac354
  4176e2:	mov    cl,BYTE PTR [ebp-0x2df7f774]
  4176e8:	not    DWORD PTR [ecx-0x1a]
  4176eb:	inc    edi
  4176ec:	dec    eax
  4176ed:	mov    bl,0xb5
  4176ef:	jp     0x4176c7
  4176f1:	in     al,0xa4
  4176f3:	mov    esi,0x89966135
  4176f8:	rcr    BYTE PTR [ebp-0x45e2832d],cl
  4176fe:	xchg   esp,eax
  4176ff:	mov    ah,0xf3
  417701:	xchg   edi,eax
  417702:	stos   BYTE PTR es:[edi],al
  417703:	ret    0x1413
  417706:	and    BYTE PTR [ecx+0x143b0ef6],cl
  41770c:	sbb    BYTE PTR [ebx+0x528a1f7c],dh
  417712:	lock inc eax
  417714:	cdq    
  417715:	pop    ebx
  417716:	test   al,0x74
  417718:	and    edx,DWORD PTR [edx]
  41771a:	sbb    BYTE PTR [ecx],bl
  41771c:	jp     0x417713
  41771e:	popf   
  41771f:	dec    esi
  417720:	xchg   esi,eax
  417721:	(bad)  
  417722:	xchg   BYTE PTR cs:[ecx+0x3d],bh
  417726:	ret    0x87d4
  417729:	add    edx,DWORD PTR [eax-0x7e132802]
  41772f:	pushf  
  417730:	mov    gs,WORD PTR [esi+0x7c603390]
  417736:	into   
  417737:	nop
  417738:	in     al,0x67
  41773a:	inc    ecx
  41773b:	aam    0x62
  41773d:	out    0x51,eax
  41773f:	int3   
  417740:	push   ecx
  417741:	int    0x6a
  417743:	bound  ebp,QWORD PTR [edi+edi*1-0x25a8af9]
  41774a:	pop    ecx
  41774b:	outs   dx,DWORD PTR ds:[esi]
  41774c:	loope  0x4177b2
  41774e:	fs lock gs jl 0x417794
  417753:	test   DWORD PTR [ebx+0x247c91ec],ecx
  417759:	cld    
  41775a:	mov    al,ds:0xa16aec72
  41775f:	jmp    0x417719
  417761:	repnz dec ebx
  417763:	shl    DWORD PTR [ecx],1
  417765:	cmp    ecx,DWORD PTR [eax+0x57286b59]
  41776b:	add    cl,BYTE PTR [esi]
  41776d:	pop    esi
  41776e:	retf   
  41776f:	cld    
  417770:	dec    ecx
  417771:	inc    eax
  417772:	sbb    ebx,DWORD PTR [edi-0x12c01907]
  417778:	push   ecx
  417779:	gs out dx,eax
  41777b:	dec    edx
  41777c:	add    edi,DWORD PTR [edi+0x4a747b36]
  417782:	jg     0x417760
  417784:	add    al,0xd8
  417786:	mov    ds:0x73c9527f,al
  41778b:	mov    bh,0x8b
  41778d:	xor    dh,ah
  41778f:	mov    dl,0x67
  417791:	mov    ebp,ebp
  417793:	sub    al,0xce
  417795:	add    BYTE PTR [edx-0x184705e2],cl
  41779b:	adc    esi,ebx
  41779d:	pop    edi
  41779e:	jmp    0xa578:0x80970931
  4177a5:	add    DWORD PTR [ebx],ecx
  4177a7:	or     al,0xd9
  4177a9:	sub    DWORD PTR [ebx-0x69429eb9],eax
  4177af:	push   ebp
  4177b0:	mov    esi,esp
  4177b2:	adc    ax,0x9775
  4177b6:	mov    al,ds:0x4a283ca9
  4177bb:	adc    bl,BYTE PTR [eax+eiz*8-0x18]
  4177bf:	popa   
  4177c0:	enter  0xd0e8,0x53
  4177c4:	and    BYTE PTR [ebx+ecx*8-0x67],ah
  4177c8:	test   dh,0xd9
  4177cb:	jl     0x41778e
  4177cd:	push   eax
  4177ce:	sti    
  4177cf:	jp     0x41782e
  4177d1:	cli    
  4177d2:	inc    esi
  4177d3:	jbe    0x4177c6
  4177d5:	push   esp
  4177d6:	jo     0x4177b7
  4177d8:	loopne 0x4177ba
  4177da:	xor    BYTE PTR [edx-0x11b45b56],bh
  4177e0:	mov    fs,WORD PTR [esi+0x5ee313c8]
  4177e6:	inc    edi
  4177e7:	jmp    0x62fc93c9
  4177ec:	rcr    BYTE PTR [ebp-0x3c001fd5],1
  4177f2:	imul   esp,DWORD PTR [ecx],0xe76d6f75
  4177f8:	jae    0x41779b
  4177fa:	push   es
  4177fb:	pop    ebp
  4177fc:	jecxz  0x4177fc
  4177fe:	xchg   esi,eax
  4177ff:	xor    bh,ah
  417801:	inc    edx
  417802:	inc    edi
  417803:	jo     0x417840
  417805:	xchg   esp,eax
  417806:	mov    cl,0xb3
  417808:	add    dh,BYTE PTR ds:0x19d5b029
  41780e:	xchg   ebp,eax
  41780f:	fistp  WORD PTR [ecx]
  417811:	in     eax,0x3d
  417813:	fsubr  st(3),st
  417815:	xor    al,0x54
  417817:	push   edx
  417818:	outs   dx,DWORD PTR ds:[esi]
  417819:	mov    al,ds:0x9cebeff6
  41781e:	pop    ds
  41781f:	loopne 0x417849
  417821:	arpl   cx,si
  417823:	dec    edx
  417824:	add    ah,BYTE PTR [ebp+0x21]
  417827:	outs   dx,BYTE PTR ds:[esi]
  417828:	adc    DWORD PTR [esi-0x490b6b70],ebp
  41782e:	dec    edx
  41782f:	xchg   dl,bl
  417831:	lods   al,BYTE PTR ds:[esi]
  417832:	and    ch,dl
  417834:	enter  0x33ee,0xfb
  417838:	sbb    eax,0xca8c680f
  41783d:	inc    BYTE PTR [eax+0x85663af]
  417843:	jns    0x4177ff
  417845:	push   ebx
  417846:	pop    esp
  417847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417848:	jmp    0xe4b2:0x36b384a5
  41784f:	add    BYTE PTR [edx],al
  417851:	jns    0x41785d
  417853:	sbb    esp,esp
  417855:	shl    BYTE PTR [eax-0x2a2ce632],1
  41785b:	addr16 push ebp
  41785d:	dec    ebp
  41785e:	jg     0x417895
  417860:	scas   al,BYTE PTR es:[edi]
  417861:	jns    0x417845
  417863:	(bad)  [ecx]
  417865:	xchg   edi,eax
  417866:	inc    ebx
  417867:	pop    ecx
  417868:	jb     0x4178a1
  41786a:	jecxz  0x41781b
  41786c:	arpl   WORD PTR [esi+0x5445a02a],cx
  417872:	xor    al,bl
  417874:	fisubr WORD PTR [edx]
  417876:	std    
  417877:	imul   esp,ebx,0xffffffb5
  41787a:	inc    ebx
  41787b:	int    0x54
  41787d:	in     eax,dx
  41787e:	ja     0x41789b
  417880:	mov    eax,0xdc43f794
  417885:	sub    BYTE PTR [edi+0x38],dh
  417888:	mov    bh,0x5a
  41788a:	adc    BYTE PTR [eax],dl
  41788c:	ror    DWORD PTR [edi-0x5b06a1a2],1
  417892:	add    eax,0xeb0312a1
  417897:	and    BYTE PTR [ebx+0x245ff293],dh
  41789d:	push   0xffffff9c
  41789f:	dec    ebx
  4178a0:	pop    edx
  4178a1:	stc    
  4178a2:	dec    ebp
  4178a3:	cs pop ss
  4178a5:	ret    
  4178a6:	scas   al,BYTE PTR es:[edi]
  4178a7:	into   
  4178a8:	lahf   
  4178a9:	aam    0x6b
  4178ab:	jne    0x41790d
  4178ad:	js     0x417850
  4178af:	jmp    0xfd39e264
  4178b4:	xchg   ecx,eax
  4178b5:	mov    edi,0x99486d3b
  4178ba:	fidiv  WORD PTR [esi+ebp*2]
  4178bd:	dec    eax
  4178be:	mov    BYTE PTR [ebx+eiz*8],bh
  4178c1:	out    dx,al
  4178c2:	fsub   st,st(3)
  4178c4:	mov    ebp,0x39160091
  4178c9:	mov    ebx,0xa778d85e
  4178ce:	dec    ebp
  4178cf:	mov    ecx,0x42f2cfc1
  4178d4:	loopne 0x41790c
  4178d6:	ins    DWORD PTR es:[edi],dx
  4178d7:	sbb    bl,bh
  4178d9:	fdivr  QWORD PTR [esi+0x25657866]
  4178df:	imul   esp,DWORD PTR [esi+0x32],0x4c
  4178e3:	in     al,0x92
  4178e5:	jecxz  0x4178d4
  4178e7:	xchg   bh,cl
  4178e9:	jbe    0x4178cf
  4178eb:	mov    dh,0x54
  4178ed:	(bad)  
  4178ee:	enter  0x38f4,0xe
  4178f2:	adc    al,0x21
  4178f4:	scas   al,BYTE PTR es:[edi]
  4178f5:	or     dh,BYTE PTR [ecx-0x2e]
  4178f8:	popf   
  4178f9:	(bad)  
  4178fa:	mov    ebx,0x1fdf6c2
  4178ff:	push   ecx
  417900:	add    DWORD PTR [edi+0x6f],ebp
  417903:	fcomp  QWORD PTR [ecx+0x649c1414]
  417909:	jne    0x417949
  41790b:	and    dl,bl
  41790d:	in     al,0xe9
  41790f:	cmp    al,0xc6
  417911:	mov    bl,0x23
  417913:	dec    edi
  417914:	shr    DWORD PTR [eax+0x4a12bcaf],cl
  41791a:	(bad)
  41791d:	(bad)  
  41791e:	push   ecx
  41791f:	lds    esp,FWORD PTR ss:[eax]
  417922:	inc    ebp
  417923:	mov    bl,0x4b
  417925:	pusha  
  417926:	xchg   BYTE PTR [eax],al
  417928:	outs   dx,DWORD PTR ds:[esi]
  417929:	mov    dh,0xfa
  41792b:	cmp    cl,al
  41792d:	nop
  41792e:	repz pop ss
  417930:	loopne 0x4178b6
  417932:	adc    BYTE PTR [ebp+0x25505885],ah
  417938:	push   0xffffff94
  41793a:	mov    al,ds:0x2853879e
  41793f:	jp     0x41796d
  417941:	push   ss
  417942:	arpl   di,sp
  417944:	xor    BYTE PTR [edx+edx*8],0xdb
  417948:	jne    0x417988
  41794a:	mov    bh,0xcc
  41794c:	in     eax,dx
  41794d:	and    dh,al
  41794f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417950:	loopne 0x41790a
  417952:	sbb    eax,0x57811697
  417957:	(bad)  
  417958:	fcom   DWORD PTR [edx]
  41795a:	test   DWORD PTR [ecx],0xddd1783e
  417960:	mov    dh,0xc2
  417962:	xchg   ecx,eax
  417963:	pop    ss
  417964:	stos   BYTE PTR es:[edi],al
  417965:	xchg   edi,eax
  417966:	cdq    
  417967:	sar    BYTE PTR [edi+esi*4-0x19],cl
  41796b:	add    eax,0x52409e12
  417970:	push   0xa00bd21b
  417975:	mov    esi,0x4b270662
  41797a:	aaa    
  41797b:	jmp    0x4179b7
  41797d:	sti    
  41797e:	mov    ah,0x60
  417980:	xchg   esi,eax
  417981:	sbb    eax,0xd814318c
  417986:	sahf   
  417987:	std    
  417988:	cdq    
  417989:	lods   al,BYTE PTR ds:[esi]
  41798a:	lahf   
  41798b:	jmp    0xe13c:0x7e6326a9
  417992:	das    
  417993:	pop    ebp
  417994:	iret   
  417995:	cdq    
  417996:	je     0x4179ed
  417998:	push   ecx
  417999:	test   DWORD PTR [eax-0x78],esp
  41799c:	mov    al,ds:0x2a94152b
  4179a1:	sub    ebp,edx
  4179a3:	out    dx,eax
  4179a4:	rcl    BYTE PTR [ebx],0x97
  4179a7:	and    eax,0x366de457
  4179ac:	jecxz  0x417973
  4179ae:	gs push 0x703bb8b0
  4179b4:	xlat   BYTE PTR ds:[ebx]
  4179b5:	sar    bl,cl
  4179b7:	out    dx,al
  4179b8:	pop    ss
  4179b9:	gs adc eax,0x4452ca86
  4179bf:	and    eax,0xbe51d84d
  4179c4:	cmp    ch,BYTE PTR [edi+esi*1-0x6]
  4179c8:	add    BYTE PTR [ecx],ah
  4179ca:	das    
  4179cb:	das    
  4179cc:	lds    esp,FWORD PTR [edi+esi*1+0x7c]
  4179d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179d1:	int3   
  4179d2:	mov    ebx,DWORD PTR [eax]
  4179d4:	cdq    
  4179d5:	aad    0xe1
  4179d7:	rcl    DWORD PTR [ebx],cl
  4179d9:	cmp    cl,cl
  4179db:	mov    ss,WORD PTR [edi+0x527d3b19]
  4179e1:	inc    ecx
  4179e2:	test   DWORD PTR [ecx],eax
  4179e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179e5:	or     cl,BYTE PTR [edx-0x10edbdc4]
  4179eb:	ret    0x983d
  4179ee:	sub    BYTE PTR [esi-0x1c4cec4f],bl
  4179f4:	(bad)  
  4179f5:	lods   al,BYTE PTR ds:[esi]
  4179f6:	adc    ebx,edx
  4179f8:	fstp   DWORD PTR [esp+eax*4]
  4179fb:	lods   eax,DWORD PTR ds:[esi]
  4179fc:	mov    edi,0x4bc6ba01
  417a01:	pusha  
  417a02:	cwde   
  417a03:	xor    eax,0x6c46a572
  417a08:	fild   WORD PTR [eax+0x0]
  417a0b:	lods   eax,DWORD PTR ds:[esi]
  417a0c:	test   al,0x83
  417a0e:	push   ds
  417a0f:	add    BYTE PTR [edi+esi*1+0x5e],al
  417a13:	cmp    BYTE PTR [ebx],bl
  417a15:	out    0xe3,eax
  417a17:	xchg   esp,eax
  417a18:	jmp    0x417a4c
  417a1a:	mov    eax,0x491e2536
  417a1f:	dec    ecx
  417a20:	or     ecx,DWORD PTR [edi-0x69]
  417a23:	pop    ecx
  417a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a25:	mov    ds:0x688d5f69,eax
  417a2a:	stc    
  417a2b:	lahf   
  417a2c:	retf   0x4a15
  417a2f:	ja     0x417aa9
  417a31:	adc    eax,0x546d4886
  417a36:	stos   BYTE PTR es:[edi],al
  417a37:	fisubr WORD PTR [eax-0x19]
  417a3a:	jo     0x417a24
  417a3c:	loop   0x417a94
  417a3e:	pop    edi
  417a3f:	mov    bh,0x86
  417a41:	shl    DWORD PTR [ebp-0x67],1
  417a44:	sub    DWORD PTR [esi+0x7],ebx
  417a47:	test   eax,0x67a19320
  417a4c:	or     al,0xa8
  417a4e:	and    DWORD PTR [ebx],eax
  417a50:	or     eax,0xa049e1b9
  417a55:	js     0x417a74
  417a57:	jmp    0x417a08
  417a59:	into   
  417a5a:	popa   
  417a5b:	push   esp
  417a5c:	mov    ecx,0x10254ad9
  417a61:	push   ds
  417a62:	fs enter 0x37b7,0x69
  417a67:	jnp    0x417a8f
  417a69:	in     eax,dx
  417a6a:	cmp    eax,DWORD PTR [edx-0xf]
  417a6d:	fs ins BYTE PTR es:[edi],dx
  417a6f:	cli    
  417a70:	test   edi,edi
  417a72:	mul    DWORD PTR [ebp+eiz*2+0x2c7d87db]
  417a79:	cs scas al,BYTE PTR es:[edi]
  417a7b:	aam    0xb4
  417a7d:	jp     0x417abc
  417a7f:	sbb    BYTE PTR [ebx+eax*1-0x24],ah
  417a83:	mov    al,0x31
  417a85:	movntq QWORD PTR ds:0x9054730d,mm6
  417a8c:	cmp    eax,0xe06e212d
  417a91:	or     BYTE PTR [ebp-0x1de576f0],dh
  417a97:	mov    bl,0xaa
  417a99:	mov    esi,0xf58f1e45
  417a9e:	sbb    ah,cl
  417aa0:	scas   al,BYTE PTR es:[edi]
  417aa1:	mov    edx,esp
  417aa3:	fldl2e 
  417aa5:	inc    esp
  417aa6:	cmp    esp,DWORD PTR ds:0xe078e6d1
  417aac:	sbb    BYTE PTR [ebp-0x75],bl
  417aaf:	cmp    ecx,DWORD PTR [ebp+0x35]
  417ab2:	dec    ebx
  417ab3:	push   ss
  417ab4:	xchg   ebx,eax
  417ab5:	repnz clc 
  417ab7:	aad    0x1a
  417ab9:	in     al,0xe
  417abb:	in     eax,0xee
  417abd:	jecxz  0x417a7a
  417abf:	fadd   QWORD PTR [edx-0x696be667]
  417ac5:	sbb    cl,ah
  417ac7:	into   
  417ac8:	or     ah,ch
  417aca:	out    0x62,al
  417acc:	(bad)  
  417ace:	and    BYTE PTR [ecx+0x65],0x36
  417ad2:	clc    
  417ad3:	dec    ebx
  417ad4:	mov    bh,0xb8
  417ad6:	out    dx,eax
  417ad7:	lods   al,BYTE PTR ds:[esi]
  417ad8:	call   0x45a8:0xdc1c3d4f
  417adf:	xchg   ebp,eax
  417ae0:	(bad)  
  417ae1:	mov    eax,ds:0xa36300aa
  417ae6:	aas    
  417ae7:	lods   al,BYTE PTR ds:[esi]
  417ae8:	fs loope 0x417af1
  417aeb:	out    0xde,al
  417aed:	lahf   
  417aee:	int    0x9
  417af0:	cmp    al,0x13
  417af2:	mov    bl,0x29
  417af4:	cmc    
  417af5:	dec    eax
  417af6:	push   ebp
  417af7:	mov    eax,ds:0x989301d6
  417afc:	out    dx,eax
  417afd:	iret   
  417afe:	jae    0x417ade
  417b00:	ret    0x9047
  417b03:	aam    0x5b
  417b05:	dec    esp
  417b06:	pushf  
  417b07:	pop    ebx
  417b08:	inc    esp
  417b09:	cwde   
  417b0a:	lds    eax,FWORD PTR [ecx+0x20]
  417b0d:	(bad)  
  417b0e:	mov    WORD PTR [ecx+0x5928fe54],ss
  417b14:	ja     0x417aa2
  417b16:	sub    eax,0x9707603b
  417b1b:	inc    ebx
  417b1c:	xchg   esi,eax
  417b1d:	sahf   
  417b1e:	dec    ebp
  417b1f:	sub    esi,DWORD PTR [ebx]
  417b21:	push   0x82fee5ef
  417b26:	lods   eax,DWORD PTR ds:[esi]
  417b27:	inc    DWORD PTR [edi+0x2e]
  417b2a:	push   eax
  417b2b:	cmp    BYTE PTR [eax+0x971c72a],dh
  417b31:	xor    BYTE PTR [ebx+0x21],bh
  417b34:	mov    dl,0xa1
  417b36:	push   esp
  417b37:	int    0xd7
  417b39:	mov    eax,cs:0x9ce7677a
  417b3f:	dec    esp
  417b40:	or     BYTE PTR [esi+ebx*4-0x10],bl
  417b44:	leave  
  417b45:	jmp    0xcd0f1f8a
  417b4a:	or     BYTE PTR [ebx+0x189451bb],0x1a
  417b51:	data16 and cl,dl
  417b54:	sbb    edx,DWORD PTR [edi+0x40328991]
  417b5a:	mov    edi,0x1bc08699
  417b5f:	pop    edi
  417b60:	sub    eax,0xd4bcc082
  417b65:	xchg   BYTE PTR [eax],cl
  417b67:	or     bl,al
  417b69:	cs or  ah,ch
  417b6c:	fidivr WORD PTR [esi]
  417b6e:	popf   
  417b6f:	jns    0x417bcb
  417b71:	mov    ds:0xdb970ebe,al
  417b76:	(bad)  
  417b77:	xor    bl,BYTE PTR [eax-0x57]
  417b7a:	pop    es
  417b7b:	rcl    DWORD PTR [edi],1
  417b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b7e:	rol    DWORD PTR [esi],1
  417b80:	inc    BYTE PTR [esi-0x70c65849]
  417b86:	mov    ds:0x34af80c4,al
  417b8b:	sbb    eax,0x81b09ebb
  417b90:	jns    0x417b99
  417b92:	test   BYTE PTR [eax+0x73],ah
  417b95:	in     al,dx
  417b96:	pop    ecx
  417b97:	inc    edx
  417b98:	std    
  417b99:	mov    al,0xad
  417b9b:	rol    BYTE PTR [ebp-0x2741d991],1
  417ba1:	fwait
  417ba2:	xchg   esp,eax
  417ba3:	lea    edx,[eax+0x3b922877]
  417ba9:	and    eax,0xc6440c25
  417bae:	enter  0xc5a5,0x67
  417bb2:	sub    esp,DWORD PTR [ecx-0x1020bd78]
  417bb8:	clc    
  417bb9:	xchg   esp,eax
  417bba:	sbb    edi,esp
  417bbc:	rol    BYTE PTR [edi],cl
  417bbe:	rol    BYTE PTR [ebp+0x14],1
  417bc1:	xor    BYTE PTR [eax+0x378fd91c],bl
  417bc7:	jae    0x417bc0
  417bc9:	ror    DWORD PTR [eax],cl
  417bcb:	adc    edx,esp
  417bcd:	repz test DWORD PTR gs:[esi-0x41],0x90bf50c3
  417bd6:	sub    edx,0x6abf7ec3
  417bdc:	pop    edx
  417bdd:	xchg   esp,eax
  417bde:	mov    al,ds:0x2110178b
  417be3:	in     al,dx
  417be4:	pop    ebp
  417be5:	push   edi
  417be6:	push   0xffffffac
  417be8:	(bad)  
  417be9:	adc    dh,ch
  417beb:	fistp  DWORD PTR [ecx]
  417bed:	and    bl,BYTE PTR [edi+esi*8-0x3d]
  417bf1:	cmp    al,0x9b
  417bf3:	div    DWORD PTR [ecx+0x6c562713]
  417bf9:	xor    DWORD PTR [edi+ebx*4+0x18],ecx
  417bfd:	mov    eax,0x7eef7dce
  417c02:	cdq    
  417c03:	sbb    dl,BYTE PTR [ebx+0x3f6b1b1]
  417c09:	aam    0x71
  417c0b:	sub    eax,0x68052fe4
  417c10:	stos   BYTE PTR es:[edi],al
  417c11:	pusha  
  417c12:	(bad)  
  417c13:	xor    esi,DWORD PTR [ebp+0x18]
  417c16:	ror    cl,0xcd
  417c19:	jne    0x417bde
  417c1b:	and    eax,0x69c18261
  417c20:	xchg   esi,eax
  417c21:	arpl   si,si
  417c23:	inc    eax
  417c24:	cmp    eax,0xbd780fe7
  417c29:	push   edi
  417c2a:	lds    ebp,FWORD PTR [edi]
  417c2c:	call   0xc3a0f837
  417c31:	mov    eax,ds:0x7b4d18a3
  417c36:	out    dx,eax
  417c37:	inc    ecx
  417c38:	jmp    0x417c92
  417c3a:	daa    
  417c3b:	ins    DWORD PTR es:[edi],dx
  417c3c:	int3   
  417c3d:	inc    eax
  417c3e:	sbb    DWORD PTR [edi-0x20],ecx
  417c41:	push   0x62
  417c43:	xchg   edx,eax
  417c44:	push   esi
  417c45:	mov    dh,0xa3
  417c47:	pop    esp
  417c48:	or     eax,0x806bf934
  417c4d:	xchg   DWORD PTR ds:0x1b7ca20c,eax
  417c53:	add    BYTE PTR [ebx+0x138ceba3],0x72
  417c5a:	sar    DWORD PTR [edi-0x1a],cl
  417c5d:	push   edi
  417c5e:	and    BYTE PTR [edi-0x172549b7],0x35
  417c65:	xor    edx,ecx
  417c67:	out    dx,eax
  417c68:	ins    BYTE PTR es:[edi],dx
  417c69:	sbb    BYTE PTR [ecx+0x23],bh
  417c6c:	push   edi
  417c6d:	or     BYTE PTR [ebx-0x31],dl
  417c70:	faddp  st(5),st
  417c72:	popf   
  417c73:	jmp    0x417c20
  417c75:	sar    DWORD PTR [esp+ecx*2-0x1be342c7],cl
  417c7c:	pop    es
  417c7d:	outs   dx,BYTE PTR ds:[esi]
  417c7e:	cmc    
  417c7f:	inc    ebp
  417c80:	add    eax,ecx
  417c82:	fstp   QWORD PTR [eax-0x2]
  417c85:	imul   eax,DWORD PTR [esi+0x38be1eb9],0x26
  417c8c:	mov    DWORD PTR [ecx-0x2fa2bb93],ebp
  417c92:	xlat   BYTE PTR ds:[ebx]
  417c93:	ins    BYTE PTR es:[edi],dx
  417c94:	xchg   edi,eax
  417c95:	and    dl,cl
  417c97:	push   cs
  417c98:	int    0x99
  417c9a:	sub    al,0x60
  417c9c:	ss push ebx
  417c9e:	add    edx,ebp
  417ca0:	or     BYTE PTR [edx+0x2de04b21],dl
  417ca6:	mov    eax,0xb534b793
  417cab:	lods   al,BYTE PTR ds:[esi]
  417cac:	out    0x75,eax
  417cae:	and    al,0xe0
  417cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cb1:	adc    BYTE PTR [ebp-0xeef6d8e],0x76
  417cb8:	js     0x417c69
  417cba:	cmp    BYTE PTR [ebp+eiz*1+0x73],ah
  417cbe:	or     al,0xb0
  417cc0:	push   esi
  417cc1:	repnz popf 
  417cc3:	or     eax,0x53892ad3
  417cc8:	rol    BYTE PTR [edi],1
  417cca:	sahf   
  417ccb:	cmp    BYTE PTR [edi+0x7af64d61],bh
  417cd1:	pop    edi
  417cd2:	or     bh,bl
  417cd4:	dec    ecx
  417cd5:	and    ebp,DWORD PTR [edx+eiz*2+0x3b]
  417cd9:	mov    al,BYTE PTR [edi+edi*2]
  417cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cdd:	sti    
  417cde:	sbb    DWORD PTR [ecx+0x7be3df32],ebx
  417ce4:	jle    0x417d21
  417ce6:	pop    es
  417ce7:	add    edx,DWORD PTR [edx]
  417ce9:	fiadd  DWORD PTR [esi+0x5c]
  417cec:	pop    esi
  417ced:	xor    ch,BYTE PTR [edx-0x67]
  417cf0:	shl    BYTE PTR [eax+0x7c2a9d5d],0xca
  417cf7:	cld    
  417cf8:	mov    ecx,0x91f80dc9
  417cfd:	dec    edx
  417cfe:	aaa    
  417cff:	mov    dh,0xad
  417d01:	call   0x6e0a:0xe99af362
  417d08:	jb     0x417d1d
  417d0a:	clc    
  417d0b:	sub    eax,0xe44d77cb
  417d10:	cmp    al,0xa8
  417d12:	push   eax
  417d13:	mov    ebx,0x42d12cc6
  417d18:	lock outs dx,BYTE PTR ds:[esi]
  417d1a:	add    eax,0xe406de9c
  417d1f:	push   0xffffffdb
  417d21:	adc    esi,esi
  417d23:	neg    DWORD PTR [ebx+0x27]
  417d26:	xchg   ecx,eax
  417d27:	mov    edi,0xf9e8d711
  417d2c:	add    BYTE PTR [ebx+0x2],0x9b
  417d30:	mov    WORD PTR [eax+edx*4],ss
  417d33:	cmp    ecx,edx
  417d35:	mov    al,0x39
  417d37:	sbb    eax,0x3b9e99b0
  417d3c:	xchg   edi,eax
  417d3d:	mov    dh,0x25
  417d3f:	xor    ch,BYTE PTR [ebp+eiz*8+0x2d]
  417d43:	ffree  st(5)
  417d45:	mov    dl,0xdb
  417d47:	inc    esi
  417d48:	fs push es
  417d4a:	ins    BYTE PTR es:[edi],dx
  417d4b:	jg     0x417ce7
  417d4d:	sti    
  417d4e:	or     esp,esp
  417d50:	imul   esp,DWORD PTR [edx+0x67],0x48
  417d54:	push   ecx
  417d55:	sbb    edx,DWORD PTR es:[ebp+0x6]
  417d59:	mov    ah,0xd2
  417d5b:	jecxz  0x417ce0
  417d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d5e:	fld    DWORD PTR [esi]
  417d60:	or     dl,bh
  417d62:	into   
  417d63:	or     al,0x13
  417d65:	xor    al,0xd9
  417d67:	jmp    0x417dc7
  417d69:	sub    edi,0x1fd85758
  417d6f:	test   DWORD PTR [ebx],ecx
  417d71:	inc    esi
  417d72:	jnp    0x417dbb
  417d74:	nop
  417d75:	jmp    0x67db3294
  417d7a:	jno    0x417d6f
  417d7c:	fldcw  WORD PTR [ecx+0x34a260de]
  417d82:	ja     0x417d6f
  417d84:	inc    esp
  417d85:	lods   al,BYTE PTR ds:[esi]
  417d86:	mov    ecx,0x7409097d
  417d8b:	clc    
  417d8c:	mov    edi,0xff47a1c6
  417d91:	jns    0x417dc2
  417d93:	loop   0x417de7
  417d95:	push   ecx
  417d96:	xchg   esp,eax
  417d97:	leave  
  417d98:	cmp    DWORD PTR [ebx],0xa926033f
  417d9e:	xor    al,0x4d
  417da0:	mov    dl,0x8
  417da2:	pop    ebp
  417da3:	or     eax,0xd4c49d12
  417da8:	cli    
  417da9:	cmc    
  417daa:	dec    ebx
  417dab:	leave  
  417dac:	mov    edx,0xf0e77668
  417db1:	mov    ecx,0x37bd45eb
  417db6:	xchg   edi,eax
  417db7:	sub    DWORD PTR [edx-0x550853f3],edi
  417dbd:	mul    edi
  417dbf:	inc    esp
  417dc0:	push   ebp
  417dc1:	xchg   ecx,eax
  417dc2:	mov    esi,0xe3f4ac98
  417dc7:	rol    BYTE PTR [edx-0x72],1
  417dca:	xchg   edi,eax
  417dcb:	xchg   ebx,eax
  417dcc:	push   0xffffffc1
  417dce:	in     al,dx
  417dcf:	mov    ds:0xcb1d7b37,eax
  417dd4:	cs sahf 
  417dd6:	mov    DWORD PTR ds:0x2b5d4f05,0x8b7520a4
  417de0:	(bad)  
  417de1:	sub    eax,0x1f01c22e
  417de6:	in     eax,0x9a
  417de8:	adc    edx,eax
  417dea:	fwait
  417deb:	jo     0x417dfa
  417ded:	bound  ebx,QWORD PTR [ebx-0x55]
  417df0:	and    al,0x8
  417df2:	lods   eax,DWORD PTR ds:[esi]
  417df3:	fistp  WORD PTR [eax-0x7]
  417df6:	test   eax,0x7e3af757
  417dfb:	add    eax,0x55b7f278
  417e00:	xchg   edx,eax
  417e01:	push   ebx
  417e02:	je     0x417e54
  417e04:	inc    ebx
  417e05:	fadd   DWORD PTR [edi+ebp*1-0x2d]
  417e09:	into   
  417e0a:	retf   
  417e0b:	adc    al,0x1b
  417e0d:	dec    edi
  417e0e:	xor    ch,BYTE PTR [esp]
  417e11:	icebp  
  417e12:	sub    eax,0xa2f88fef
  417e17:	or     ax,0xf19c
  417e1b:	repz arpl cx,bx
  417e1e:	retf   0xbeef
  417e21:	cmp    al,BYTE PTR [ecx+0x7b]
  417e24:	sbb    al,0x3c
  417e26:	jo     0x417e57
  417e28:	lods   eax,DWORD PTR ds:[esi]
  417e29:	inc    ebp
  417e2a:	push   esp
  417e2b:	outs   dx,DWORD PTR ds:[esi]
  417e2c:	dec    edi
  417e2d:	bound  edi,QWORD PTR [esi-0x7994d1a6]
  417e33:	jmp    0x417e2d
  417e35:	dec    BYTE PTR [esi+0x59898949]
  417e3b:	stc    
  417e3c:	sbb    edx,ebx
  417e3e:	inc    ebp
  417e3f:	jnp    0x417e04
  417e41:	dec    esi
  417e42:	addr16 lahf 
  417e44:	push   esi
  417e45:	add    DWORD PTR [edx-0x73],edi
  417e48:	fcomip st,st(4)
  417e4a:	sbb    DWORD PTR [ebx],0x4c54e256
  417e50:	jle    0x417e0d
  417e52:	mov    eax,0x88e9512d
  417e57:	lea    edi,[eax-0xa]
  417e5a:	xchg   edi,eax
  417e5b:	push   cs
  417e5c:	mov    dh,BYTE PTR [ecx]
  417e5e:	xor    DWORD PTR [ecx],edi
  417e60:	sbb    ah,BYTE PTR [ebx+0x3c]
  417e63:	cwde   
  417e64:	lds    ebp,FWORD PTR [edi+0x3e51715d]
  417e6a:	mov    ebx,0x26b8054c
  417e6f:	adc    dh,BYTE PTR [edi]
  417e71:	les    ebx,FWORD PTR [ecx+0x6f]
  417e74:	int    0x58
  417e76:	sbb    eax,0x1c0dde18
  417e7b:	push   ds
  417e7c:	xchg   edi,eax
  417e7d:	jno    0x417e09
  417e7f:	mov    bh,0x85
  417e81:	adc    DWORD PTR [edx+edi*4-0x67],0x50
  417e86:	or     BYTE PTR [esi],0xae
  417e89:	xchg   ebp,eax
  417e8a:	psubw  mm5,mm1
  417e8d:	add    eax,0xf572da90
  417e92:	push   cs
  417e93:	cwde   
  417e94:	sub    ah,BYTE PTR [edi+0x20]
  417e97:	aam    0x1e
  417e99:	and    BYTE PTR [eax-0x4],dl
  417e9c:	adc    eax,0x8efc04de
  417ea1:	ins    DWORD PTR es:[edi],dx
  417ea2:	jp     0x417ed8
  417ea4:	leave  
  417ea5:	shl    esp,cl
  417ea7:	mov    edi,0x2995ce24
  417eac:	cmp    al,0x93
  417eae:	sbb    DWORD PTR [ebp+0x63f37d8b],ebp
  417eb4:	mov    ah,0x47
  417eb6:	jne    0x417eb0
  417eb8:	and    cl,BYTE PTR [ebx-0x3879665e]
  417ebe:	inc    edx
  417ebf:	cmp    ebx,DWORD PTR [ebx+0x3]
  417ec2:	xchg   ebx,eax
  417ec3:	stc    
  417ec4:	push   ds
  417ec5:	and    esp,0x3d290d91
  417ecb:	push   ds
  417ecc:	xchg   edi,eax
  417ecd:	fstp   DWORD PTR [ecx+0xb]
  417ed0:	addr16 leave 
  417ed2:	outs   dx,DWORD PTR ds:[esi]
  417ed3:	sbb    al,0x7a
  417ed5:	test   BYTE PTR [esi],dl
  417ed7:	test   BYTE PTR [eax],0xe9
  417eda:	jge    0x417edf
  417edc:	data16 jl 0x417eae
  417edf:	xchg   DWORD PTR [ecx+eax*8-0x1dd42915],edx
  417ee6:	mov    ecx,0x1a893e94
  417eeb:	jns    0x417eb4
  417eed:	rcr    DWORD PTR [ecx+0x30],0x18
  417ef1:	jno    0x417f19
  417ef3:	sti    
  417ef4:	sub    bl,BYTE PTR [ecx]
  417ef6:	and    cl,bl
  417ef8:	fcomi  st,st(1)
  417efa:	out    0xc1,al
  417efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417efd:	lock adc DWORD PTR [edx-0x1],ecx
  417f01:	xor    ebp,DWORD PTR [ebp+0x27]
  417f04:	outs   dx,BYTE PTR ds:[esi]
  417f05:	sbb    edi,esp
  417f07:	mov    ds:0xbf3fc9ca,al
  417f0c:	inc    ebx
  417f0d:	lea    edx,[ecx+0x52]
  417f10:	enter  0x63b8,0xf8
  417f14:	iret   
  417f15:	rol    BYTE PTR ds:0xa0856208,cl
  417f1b:	mov    ah,0x5f
  417f1d:	(bad)  
  417f1e:	daa    
  417f1f:	out    0xe2,al
  417f21:	mov    es,esi
  417f23:	sub    eax,0x9b7b8e4f
  417f28:	and    bl,ah
  417f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f2b:	xchg   edi,eax
  417f2c:	pushf  
  417f2d:	lea    esi,[esi-0x64]
  417f30:	jbe    0x417f16
  417f32:	mov    eax,cs
  417f34:	pop    ecx
  417f35:	ficom  DWORD PTR [edi]
  417f37:	mov    al,ds:0x7f9522f1
  417f3c:	sahf   
  417f3d:	out    0x8a,al
  417f3f:	jp     0x417eec
  417f41:	xor    al,al
  417f43:	jmp    0x417ef7
  417f45:	call   0x1695:0xf296f60d
  417f4c:	clc    
  417f4d:	mov    dh,BYTE PTR [ebp+0x2b974580]
  417f53:	mov    WORD PTR [ecx+0x2b],es
  417f56:	adc    eax,0xe97ddca7
  417f5b:	mov    ds:0x12aeed13,al
  417f60:	popf   
  417f61:	iret   
  417f62:	xchg   edx,eax
  417f63:	or     BYTE PTR [esi+0x68],dh
  417f66:	xor    al,0x4c
  417f68:	cwde   
  417f69:	sbb    DWORD PTR [edx],esp
  417f6b:	cld    
  417f6c:	pop    ds
  417f6d:	mov    edi,0x33740af4
  417f72:	gs inc edi
  417f74:	popa   
  417f75:	stos   DWORD PTR es:[edi],eax
  417f76:	pusha  
  417f77:	xor    ch,BYTE PTR [esi+0x9]
  417f7a:	add    dl,BYTE PTR [eax]
  417f7c:	out    dx,eax
  417f7d:	sbb    al,0x20
  417f7f:	fcomip st,st(1)
  417f81:	mov    dl,0xfd
  417f83:	mov    BYTE PTR [edi-0x19d17694],al
  417f89:	lds    edx,FWORD PTR [edx+esi*2]
  417f8c:	fcomi  st,st(4)
  417f8e:	pop    esi
  417f8f:	pop    eax
  417f90:	add    al,0x93
  417f92:	adc    eax,0x1de6a245
  417f97:	inc    ecx
  417f98:	jnp    0x417f54
  417f9a:	cmc    
  417f9b:	(bad)  
  417f9c:	pop    ss
  417f9d:	mov    bl,0x46
  417f9f:	xor    al,0xf4
  417fa1:	jp     0x417f89
  417fa3:	add    BYTE PTR [ebx+eiz*2],bl
  417fa6:	and    DWORD PTR ds:0x32d946ed,ebp
  417fac:	push   ebx
  417fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fae:	jne    0x418002
  417fb0:	mov    esi,0xbba25c35
  417fb5:	sar    bh,0xa2
  417fb8:	in     al,0xf5
  417fba:	push   0x61
  417fbc:	test   eax,0xb9f10b05
  417fc1:	inc    ecx
  417fc2:	or     esp,edx
  417fc4:	mov    bl,0xc0
  417fc6:	out    dx,eax
  417fc7:	cmp    al,0x77
  417fc9:	paddd  mm7,QWORD PTR ds:0x794e9e0b
  417fd0:	ds add eax,0xb3098f9e
  417fd6:	or     al,0xe7
  417fd8:	cmp    ecx,DWORD PTR [esi+0x3]
  417fdb:	ins    DWORD PTR es:[edi],dx
  417fdc:	inc    edi
  417fdd:	sahf   
  417fde:	repz push esi
  417fe0:	pushf  
  417fe1:	adc    BYTE PTR [eax+eiz*4],bl
  417fe4:	fs push esp
  417fe6:	lods   al,BYTE PTR ds:[esi]
  417fe7:	ja     0x417f9d
  417fe9:	mov    cl,0xed
  417feb:	ret    
  417fec:	xchg   ebp,eax
  417fed:	fldcw  WORD PTR [ebx+ebx*2+0xb]
  417ff1:	xor    ch,BYTE PTR [edi+ecx*4]
  417ff4:	jp     0x418020
  417ff6:	mov    ebx,0x8a6a66d4
  417ffb:	mov    eax,ds:0xbab2b99a
  418000:	jg     0x417fd9
  418002:	add    ah,BYTE PTR [esi+0x53444a9b]
  418008:	jne    0x418086
  41800a:	call   0xf282:0x8918408d
  418011:	and    al,BYTE PTR [ebx-0x4087dbac]
  418017:	push   edx
  418018:	call   0xfc74:0x190a53cc
  41801f:	inc    ebx
  418020:	inc    edx
  418021:	xchg   esp,eax
  418022:	xchg   ebp,eax
  418023:	sbb    BYTE PTR [ecx-0x2e],0x3
  418027:	adc    DWORD PTR [esi+0x377373e9],edx
  41802d:	aaa    
  41802e:	dec    ebx
  41802f:	inc    ebx
  418030:	pop    ebx
  418031:	sahf   
  418032:	sub    al,0x1c
  418034:	aad    0xb2
  418036:	addr16 popf 
  418038:	enter  0x2c11,0xa0
  41803c:	rol    bl,1
  41803e:	repnz xchg edi,eax
  418040:	dec    ebp
  418041:	cmp    ecx,ebx
  418043:	add    dl,BYTE PTR [edx]
  418045:	daa    
  418046:	adc    bl,BYTE PTR [edi+0x6c7659ae]
  41804c:	aam    0x5d
  41804e:	or     eax,0x5c841e98
  418053:	loopne 0x418048
  418055:	mov    dl,0xe8
  418057:	jmp    0xf0f91b0d
  41805c:	mov    edi,0xfc4c297b
  418061:	fild   WORD PTR [ebp+0x4e]
  418064:	mov    ecx,0xe65bc0ec
  418069:	(bad)  
  41806a:	push   ds
  41806b:	ins    BYTE PTR es:[edi],dx
  41806c:	(bad)  
  41806d:	cld    
  41806e:	jp     0x418012
  418070:	stos   BYTE PTR es:[edi],al
  418071:	cmp    al,0xf7
  418073:	ins    DWORD PTR es:[edi],dx
  418074:	xor    al,0xb7
  418076:	push   esi
  418077:	jo     0x41805b
  418079:	shr    BYTE PTR [eax+0x719b9d7e],0xbb
  418080:	stos   DWORD PTR es:[edi],eax
  418081:	ror    ah,1
  418083:	ffreep st(6)
  418085:	jg     0x418106
  418087:	jb     0x4180d4
  418089:	(bad)  
  41808a:	and    DWORD PTR [esi+eax*1+0x7e],eax
  41808e:	pop    esi
  41808f:	mov    eax,0x5c5cc625
  418094:	repz data16 aaa 
  418097:	retf   
  418098:	arpl   WORD PTR [ebx+eax*4],bp
  41809b:	jns    0x4180fd
  41809d:	push   ebp
  41809e:	jle    0x418072
  4180a0:	test   dl,0xda
  4180a3:	and    eax,0x506de1c5
  4180a8:	add    al,0x6a
  4180aa:	sub    DWORD PTR [ebx],edx
  4180ac:	sbb    ch,ch
  4180ae:	inc    edi
  4180af:	pop    ds
  4180b0:	sbb    DWORD PTR ss:[edi+0x2b317cbe],0x35
  4180b8:	mov    BYTE PTR [esi],ch
  4180ba:	in     al,0xde
  4180bc:	push   cs
  4180bd:	les    ebx,FWORD PTR [eax+ebp*1]
  4180c0:	sbb    edx,DWORD PTR [eax+0x3866db42]
  4180c6:	push   ebp
  4180c7:	xchg   ecx,eax
  4180c8:	jmp    0x1091f045
  4180cd:	aam    0x3d
  4180cf:	xchg   esp,eax
  4180d0:	add    dh,ch
  4180d2:	inc    esi
  4180d3:	and    bl,BYTE PTR [esi-0x7a]
  4180d6:	xlat   BYTE PTR ds:[ebx]
  4180d7:	add    eax,0x99792cef
  4180dc:	xor    DWORD PTR [eax-0x6902af91],esi
  4180e2:	pop    ebp
  4180e3:	in     eax,0x89
  4180e5:	jne    0x41815d
  4180e7:	clc    
  4180e8:	xor    ah,BYTE PTR [eax+0x3f7aeb2b]
  4180ee:	push   ebp
  4180ef:	call   0xf7ee:0xae6628f5
  4180f6:	jo     0x41816f
  4180f8:	push   0x6d3ea0eb
  4180fd:	out    dx,eax
  4180fe:	ins    BYTE PTR es:[edi],dx
  4180ff:	imul   ecx,eax,0xbe592eda
  418105:	shr    esp,cl
  418107:	pusha  
  418108:	clc    
  418109:	xor    eax,0x963bd376
  41810e:	call   0xc29e:0x75277190
  418115:	push   ebx
  418116:	mov    dh,BYTE PTR ds:0x2d611b20
  41811c:	in     eax,dx
  41811d:	or     eax,0x66d174be
  418122:	xchg   DWORD PTR [esi],edi
  418124:	and    BYTE PTR ds:0x6e8b9bfe,cl
  41812a:	std    
  41812b:	mov    al,ds:0xad3b64b8
  418130:	xor    eax,0x643f9d1e
  418135:	push   cs
  418136:	inc    ebp
  418137:	dec    esp
  418138:	pop    ebx
  418139:	popa   
  41813a:	cwde   
  41813b:	test   DWORD PTR [ebx],eax
  41813d:	cmp    BYTE PTR [edi],dh
  41813f:	fiadd  WORD PTR [edi-0x49952c55]
  418145:	jg     0x418133
  418147:	add    edx,ebp
  418149:	pop    ebx
  41814a:	dec    edx
  41814b:	and    ah,BYTE PTR [edx+0x20ac8d38]
  418151:	dec    ebp
  418152:	xor    DWORD PTR [ecx+eiz*8-0x1c],ebx
  418156:	dec    eax
  418157:	fldcw  WORD PTR ds:0x1bca8dea
  41815d:	ss dec ecx
  41815f:	cdq    
  418160:	mov    cl,0xb7
  418162:	or     al,0xc7
  418164:	iret   
  418165:	adc    DWORD PTR [edi+0x4110d0cf],ebp
  41816b:	pusha  
  41816c:	sbb    BYTE PTR [esi-0x2d18154a],cl
  418172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418173:	hlt    
  418174:	int    0xb7
  418176:	inc    edx
  418177:	(bad)  
  418178:	scas   al,BYTE PTR es:[edi]
  418179:	xchg   edi,eax
  41817a:	ss cld 
  41817c:	jmp    0x4181b8
  41817e:	pop    es
  41817f:	out    0x5e,eax
  418181:	pushf  
  418182:	jecxz  0x41817e
  418184:	cmp    DWORD PTR [eax],ebx
  418186:	(bad)  
  418187:	rol    esi,1
  418189:	hlt    
  41818a:	mov    esi,ebx
  41818c:	(bad)  
  41818d:	inc    ebp
  41818e:	adc    BYTE PTR [ebx-0x4b],ah
  418191:	aas    
  418192:	and    ebx,DWORD PTR [edx]
  418194:	mov    ds:0xc2473eff,eax
  418199:	rol    DWORD PTR [esi+0x79b29b10],cl
  41819f:	cs add DWORD PTR ss:[eax+0x1f266f06],esp
  4181a7:	and    al,0x7c
  4181a9:	idiv   BYTE PTR [ebp-0x43edac80]
  4181af:	mov    esp,0xda6c7f4a
  4181b4:	inc    ecx
  4181b5:	mov    ebp,0x72a87b94
  4181ba:	sub    bl,BYTE PTR [ebx-0x5a1e72f9]
  4181c0:	or     BYTE PTR [ecx-0x45150b0f],al
  4181c6:	clc    
  4181c7:	pop    esi
  4181c8:	jbe    0x418158
  4181ca:	add    eax,0x11f78c63
  4181cf:	xchg   esp,eax
  4181d0:	mov    bl,0x93
  4181d2:	sbb    BYTE PTR [esi],dl
  4181d4:	jmp    0x370626c8
  4181d9:	lock loope 0x4181b8
  4181dc:	jg     0x4181a1
  4181de:	addr16 test al,0xce
  4181e1:	(bad)  
  4181e2:	repnz push esp
  4181e4:	pop    ebx
  4181e5:	and    BYTE PTR ds:0xd021ff30,0x4d
  4181ec:	inc    ebp
  4181ed:	lahf   
  4181ee:	adc    ebp,DWORD PTR [edi+0x41]
  4181f1:	sbb    bl,dh
  4181f3:	out    0x4c,eax
  4181f5:	mov    esi,0xd29bed9c
  4181fa:	and    al,0xc8
  4181fc:	xor    DWORD PTR [ebp+0x10c764a9],ebx
  418202:	jmp    0x418190
  418204:	jns    0x4181ef
  418206:	addr16 data16 loopne 0x4181a4
  41820a:	dec    edi
  41820b:	out    dx,al
  41820c:	aas    
  41820d:	idiv   DWORD PTR [ebp-0x2032f5f2]
  418213:	mov    eax,cs
  418215:	or     bh,ch
  418217:	jae    0x4181c6
  418219:	fcmovne st,st(4)
  41821b:	add    esp,edx
  41821d:	push   edi
  41821e:	or     dl,BYTE PTR [ecx]
  418220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418221:	jne    0x4181c4
  418223:	call   0x2402d140
  418228:	in     al,0x5f
  41822a:	add    ebx,DWORD PTR [eax+0x234e55a9]
  418230:	pop    esp
  418231:	or     eax,0xedb24c7c
  418236:	adc    al,0x4
  418238:	cmp    cl,BYTE PTR [eax-0x57]
  41823b:	and    bl,BYTE PTR [ebx+0x3c]
  41823e:	ss mov edx,edx
  418241:	mov    cl,0xdf
  418243:	pop    ecx
  418244:	dec    ebp
  418245:	fadd   QWORD PTR [esi-0x57]
  418248:	xor    BYTE PTR [ebp-0x47f72625],dh
  41824e:	sbb    eax,DWORD PTR [edx]
  418250:	(bad)  [edx-0x5a6270ed]
  418256:	or     ebx,DWORD PTR [eax]
  418258:	or     al,0xc5
  41825a:	cmp    eax,0x28b58e58
  41825f:	inc    eax
  418260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418262:	dec    esi
  418263:	push   ds
  418264:	call   DWORD PTR [ebx+0x43751076]
  41826a:	sbb    BYTE PTR [esi],cl
  41826c:	test   DWORD PTR [ecx+0x60],edi
  41826f:	paddb  mm3,QWORD PTR [ebp+0x5c]
  418273:	mov    edi,DWORD PTR [eax+0x50421c21]
  418279:	xchg   esi,ecx
  41827b:	inc    ebp
  41827c:	sub    edx,0x19
  41827f:	addr16 retf 0x3ae8
  418283:	loop   0x4182fb
  418285:	test   bh,ch
  418287:	dec    ebp
  418288:	fwait
  418289:	inc    edx
  41828a:	pop    ds
  41828b:	or     al,0x41
  41828d:	dec    ebp
  41828e:	jp     0x4182cb
  418290:	std    
  418291:	clc    
  418292:	addr16 test edx,ebp
  418295:	cs (bad) 
  418297:	jbe    0x418249
  418299:	fcomp  DWORD PTR [ecx+0x2b]
  41829c:	xchg   DWORD PTR [ecx+0x3f],eax
  41829f:	repz repz clc 
  4182a2:	iret   
  4182a3:	(bad)  
  4182a4:	neg    BYTE PTR [esp+ebx*2+0x60]
  4182a8:	or     al,0x23
  4182aa:	popa   
  4182ab:	fnsave [edi+0x3f]
  4182ae:	xchg   esi,eax
  4182af:	scas   eax,DWORD PTR es:[edi]
  4182b0:	push   ss
  4182b1:	and    eax,0x2c35cedd
  4182b6:	and    eax,0xeb9319a7
  4182bb:	adc    ebx,ebp
  4182bd:	popf   
  4182be:	sbb    DWORD PTR [ebp-0x76],0x78
  4182c2:	(bad)  
  4182c3:	mov    ebp,0xe7daeb59
  4182c8:	sbb    DWORD PTR [bp+di+0x449a],ecx
  4182cd:	mov    eax,0xaf9bcd3a
  4182d2:	fnstsw WORD PTR [esi-0x2cad071d]
  4182d8:	icebp  
  4182d9:	dec    eax
  4182da:	xchg   ebp,eax
  4182db:	xor    eax,0x9fbd87bc
  4182e0:	xchg   BYTE PTR [ecx-0x7ad218dd],cl
  4182e6:	push   ebx
  4182e7:	inc    edx
  4182e8:	shrd   DWORD PTR [eax],ebx,0xcd
  4182ec:	sbb    ah,cl
  4182ee:	adc    eax,0x72f2f6db
  4182f3:	fmul   QWORD PTR [edx+0xead359f]
  4182f9:	js     0x4182fc
  4182fb:	sahf   
  4182fc:	dec    edi
  4182fd:	add    ebp,DWORD PTR [eax+0x7d]
  418300:	xor    al,BYTE PTR [esi]
  418302:	add    BYTE PTR [eax+0x19ebec69],0x53
  418309:	pop    ds
  41830a:	sub    DWORD PTR [ebx-0x3],ebx
  41830d:	icebp  
  41830e:	(bad)  
  41830f:	lods   al,BYTE PTR ds:[esi]
  418310:	and    BYTE PTR [edi-0x42080e1a],al
  418316:	mov    edi,0xa8bec5b4
  41831b:	(bad)  
  41831c:	inc    bh
  41831e:	jmp    0x8d06:0x63f4e962
  418325:	push   0xd55033a1
  41832a:	ret    
  41832b:	jae    0x4182fc
  41832d:	adc    al,BYTE PTR [edi+edx*1]
  418330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418331:	outs   dx,BYTE PTR ds:[esi]
  418332:	dec    ecx
  418333:	cli    
  418334:	mov    esp,0x2b7effd6
  418339:	xchg   esp,eax
  41833a:	sub    ch,bl
  41833c:	test   BYTE PTR [edx+0x2504bdc8],dh
  418342:	es scas al,BYTE PTR es:[edi]
  418344:	test   cl,dh
  418346:	aad    0xdf
  418348:	fldcw  WORD PTR [ebx]
  41834a:	xchg   ecx,eax
  41834b:	push   cs
  41834c:	lds    edi,FWORD PTR [esi+0xb]
  41834f:	inc    esp
  418350:	xchg   esp,eax
  418351:	dec    ebx
  418352:	cmp    edi,DWORD PTR [esi+0x6d627e8e]
  418358:	shl    BYTE PTR [ecx-0xa],1
  41835b:	(bad)  
  41835c:	in     al,0x98
  41835e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41835f:	repz lahf 
  418361:	cmp    BYTE PTR [esi-0xf1654e2],0xaa
  418368:	ret    0xfe0e
  41836b:	mov    ds:0x8ee23a29,eax
  418370:	aas    
  418371:	jne    0x418391
  418373:	add    DWORD PTR [esi-0x34],eax
  418376:	xor    eax,DWORD PTR [ebx]
  418378:	icebp  
  418379:	xor    bh,BYTE PTR [edi]
  41837b:	cwde   
  41837c:	jp     0x4183ec
  41837e:	sbb    eax,0x4aff0b7f
  418383:	repnz xor eax,0x34ea5d4a
  418389:	imul   esp,DWORD PTR [eax+0x29],0xd536706c
  418390:	inc    eax
  418391:	and    BYTE PTR cs:[ebx-0x75b100c2],bh
  418398:	loope  0x418382
  41839a:	pop    es
  41839b:	daa    
  41839c:	xor    bh,BYTE PTR [ebx]
  41839e:	mov    ds:0xc88262c8,al
  4183a3:	js     0x41834c
  4183a5:	cs pop eax
  4183a7:	repnz retf 
  4183a9:	cmp    DWORD PTR gs:[ebp+0x1d],ebx
  4183ad:	cmc    
  4183ae:	dec    eax
  4183af:	jmp    0x8000d4fc
  4183b4:	pop    ecx
  4183b5:	jnp    0x418403
  4183b7:	push   ds
  4183b8:	mov    edi,DWORD PTR [ebx+0x68187e98]
  4183be:	dec    edx
  4183bf:	leave  
  4183c0:	jns    0x41836e
  4183c2:	pop    ebp
  4183c3:	std    
  4183c4:	adc    al,0xba
  4183c6:	dec    eax
  4183c7:	xchg   esp,eax
  4183c8:	lods   eax,DWORD PTR ds:[esi]
  4183c9:	test   BYTE PTR [edx+eiz*2+0x68093b80],dl
  4183d0:	shl    BYTE PTR [ecx],cl
  4183d2:	pop    edi
  4183d3:	lods   eax,DWORD PTR ds:[esi]
  4183d4:	js     0x4183ba
  4183d6:	and    BYTE PTR [ebx-0x6c],0x76
  4183da:	jmp    0x4183cf
  4183dc:	in     al,dx
  4183dd:	dec    esp
  4183de:	sub    ebx,DWORD PTR [ebx-0x23]
  4183e1:	je     0x41843e
  4183e3:	pop    edx
  4183e4:	push   cs
  4183e5:	lods   al,BYTE PTR ds:[esi]
  4183e6:	js     0x418380
  4183e8:	fbstp  TBYTE PTR [edx]
  4183ea:	sub    al,0xb1
  4183ec:	and    bh,bl
  4183ee:	fmul   st,st(5)
  4183f0:	dec    esp
  4183f1:	or     eax,0x54160bf7
  4183f6:	out    0x7b,al
  4183f8:	adc    bl,al
  4183fa:	add    BYTE PTR [ebp-0x67c3cb9d],dh
  418400:	sbb    edx,edx
  418402:	(bad)  
  418403:	std    
  418404:	clc    
  418405:	pop    ebx
  418406:	add    eax,0xa819422d
  41840b:	cli    
  41840c:	mov    al,0xef
  41840e:	loope  0x4183b5
  418410:	aaa    
  418411:	push   0xffffffd5
  418413:	imul   edi,ecx,0x43
  418416:	jmp    0xc7586896
  41841b:	xor    ch,BYTE PTR [edi-0x43]
  41841e:	jp     0x4183bf
  418420:	push   cs
  418421:	dec    ecx
  418422:	int3   
  418423:	lds    ebx,FWORD PTR [eax+0x64]
  418426:	scas   al,BYTE PTR es:[edi]
  418427:	pop    edx
  418428:	imul   esi,DWORD PTR [ebx],0xad37eb7f
  41842e:	popa   
  41842f:	jbe    0x418454
  418431:	pop    ss
  418432:	loope  0x4183fd
  418434:	fisttp WORD PTR [esi+0x6528e0de]
  41843a:	test   eax,0x1d08c1c6
  41843f:	outs   dx,BYTE PTR ds:[esi]
  418440:	jg     0x418413
  418442:	pop    ss
  418443:	jle    0x418483
  418445:	pop    ss
  418446:	mov    ecx,0x79319442
  41844b:	aaa    
  41844c:	js     0x418432
  41844e:	jp     0x41840f
  418450:	cmp    BYTE PTR [ecx-0x4f578b2],al
  418456:	mov    eax,DWORD PTR [eax+0x25caeff5]
  41845c:	out    dx,al
  41845d:	jmp    0x4184d7
  41845f:	jge    0x418424
  418461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418462:	inc    esi
  418463:	add    DWORD PTR [ecx+0x22e6a056],0xfe26e2bb
  41846d:	push   edi
  41846e:	mov    al,ds:0x82c02c47
  418473:	and    ecx,DWORD PTR [esi-0x2cd065ac]
  418479:	in     eax,0x22
  41847b:	(bad)  
  41847d:	cmp    edx,DWORD PTR [edx-0x8637283]
  418483:	inc    BYTE PTR [edx-0x200bde5b]
  418489:	xor    BYTE PTR [edi+0x34dedb41],dl
  41848f:	arpl   WORD PTR [ebx-0x70a7faae],ax
  418495:	and    BYTE PTR [edi-0x66ee8547],dl
  41849b:	dec    ebx
  41849c:	fild   DWORD PTR [eax+esi*4+0x4d]
  4184a0:	cmp    al,0x4b
  4184a2:	mov    ds:0x2c1f191d,al
  4184a7:	ss cs lock gs jmp 0xf194:0x47c28cf2
  4184b2:	jae    0x41844a
  4184b4:	jge    0x418486
  4184b6:	and    ebx,DWORD PTR [ebp-0x6d]
  4184b9:	fisttp QWORD PTR [bp+di+0x52]
  4184bd:	mov    esi,DWORD PTR [esi]
  4184bf:	mov    ecx,0x35759dfc
  4184c4:	lds    edx,FWORD PTR [edi]
  4184c6:	repz dec esi
  4184c8:	dec    ebp
  4184c9:	xor    bl,cl
  4184cb:	sub    al,0xe7
  4184cd:	mov    dl,0xd8
  4184cf:	xor    DWORD PTR [esi+edx*8+0x364d4046],ecx
  4184d6:	xchg   ebp,eax
  4184d7:	push   esp
  4184d8:	fbstp  TBYTE PTR [eax-0x417dfc80]
  4184de:	test   eax,0x60e21a70
  4184e3:	xchg   ebx,eax
  4184e4:	cli    
  4184e5:	std    
  4184e6:	hlt    
  4184e7:	push   ebx
  4184e8:	cmp    esi,edx
  4184ea:	and    DWORD PTR [ecx+eax*2-0x5f],0x8
  4184ef:	imul   ebx,edx,0x6d
  4184f2:	mov    DWORD PTR [edi],eax
  4184f4:	fnstenv [ecx]
  4184f6:	(bad)  
  4184f7:	call   0xed39:0xb8b485a6
  4184fe:	retf   
  4184ff:	jp     0x4184ca
  418501:	mov    ?,esi
  418503:	xchg   ebp,eax
  418504:	call   0x287566fc
  418509:	popa   
  41850a:	inc    edi
  41850b:	fsubr  QWORD PTR [eax+0x60]
  41850e:	jbe    0x41854f
  418510:	dec    ebx
  418511:	into   
  418512:	mov    cs,WORD PTR ds:[ecx-0x64]
  418516:	fs xchg ecx,eax
  418518:	dec    esi
  418519:	inc    edx
  41851a:	fnstsw WORD PTR [edx-0x5e0179db]
  418520:	in     al,dx
  418521:	in     al,dx
  418522:	in     al,dx
  418523:	sbb    dh,bh
  418525:	scas   al,BYTE PTR es:[edi]
  418526:	call   0xe72e:0xe45dfea0
  41852d:	push   ss
  41852e:	push   edi
  41852f:	and    bh,BYTE PTR [esp+ebx*4-0x1d5a39f]
  418536:	or     ebx,DWORD PTR [eax+0x2eb878ee]
  41853c:	xor    al,0xbe
  41853e:	int    0x63
  418540:	mov    ebp,0xed7a33c8
  418545:	xchg   ebp,eax
  418546:	xor    eax,0x149e1068
  41854b:	in     al,dx
  41854c:	push   ss
  41854d:	out    0x3a,eax
  41854f:	ret    0x556a
  418552:	stos   BYTE PTR es:[edi],al
  418553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418554:	data16 stc 
  418556:	push   eax
  418557:	cmp    BYTE PTR [ecx-0x4f38743d],bl
  41855d:	call   0x51d1:0x236618e1
  418564:	out    0x98,al
  418566:	add    BYTE PTR [ecx-0x43],dl
  418569:	sbb    al,0xc6
  41856b:	jg     0x4184ef
  41856d:	inc    esi
  41856e:	sub    eax,DWORD PTR [ecx+edi*1+0x529d1ab2]
  418575:	ficom  DWORD PTR [ebx-0x43aa59ce]
  41857b:	loop   0x41850e
  41857d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41857e:	mov    edx,0xc809a331
  418583:	cmp    edi,esp
  418585:	fs test al,0xdb
  418588:	mov    eax,0xccdfa24c
  41858d:	and    esp,DWORD PTR [edx+0x14f20fca]
  418593:	adc    sp,WORD PTR [esi-0xe]
  418597:	xchg   si,ax
  418599:	aas    
  41859a:	or     eax,0xe81773af
  41859f:	repz fdiv DWORD PTR [edx+0x3c2caf2b]
  4185a6:	jl     0x418600
  4185a8:	mov    al,ds:0x6d4da577
  4185ad:	mov    dh,bl
  4185af:	mov    esi,0x1b915d90
  4185b4:	sbb    eax,0x603add4c
  4185b9:	std    
  4185ba:	or     al,0xd3
  4185bc:	retfw  0xb26d
  4185c0:	adc    BYTE PTR [ecx],ch
  4185c2:	mov    ebx,0xac9650ce
  4185c7:	xor    BYTE PTR [esp+ecx*4],dh
  4185ca:	dec    esp
  4185cb:	push   ecx
  4185cc:	push   0xfffffff9
  4185ce:	mov    al,0xc6
  4185d0:	push   esp
  4185d1:	into   
  4185d2:	mov    bh,0x1b
  4185d4:	xchg   ebp,eax
  4185d5:	(bad)
  4185d8:	lahf   
  4185d9:	aas    
  4185da:	mov    al,ds:0x7b584622
  4185df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185e0:	pop    ds
  4185e1:	call   DWORD PTR [esi+0x235f7b75]
  4185e7:	add    BYTE PTR [edi-0x705e9361],bh
  4185ed:	mov    ebx,0x2c179486
  4185f2:	dec    ebp
  4185f3:	mov    DWORD PTR cs:[ebp+ebp*8-0x21],ebx
  4185f8:	cs mov esp,0x930f2af0
  4185fe:	fbld   TBYTE PTR [edx-0x65]
  418601:	outs   dx,BYTE PTR ds:[esi]
  418602:	push   eax
  418603:	mov    ebp,0x47dcdad3
  418608:	iret   
  418609:	icebp  
  41860a:	jbe    0x4185b0
  41860c:	call   0xaac3:0xa9258b95
  418613:	popf   
  418614:	cmp    eax,0x3db8220
  418619:	mov    ecx,0x7634aadf
  41861e:	js     0x418620
  418620:	imul   ebp,DWORD PTR [eax-0x2fc76c0b],0xe794f3c9
  41862a:	push   edx
  41862b:	ja     0x4185fb
  41862d:	sbb    al,0x42
  41862f:	cmc    
  418630:	inc    edx
  418631:	ja     0x4185ca
  418633:	xchg   ebx,eax
  418634:	mov    DWORD PTR [edx-0x65],edi
  418637:	lods   eax,DWORD PTR ds:[esi]
  418638:	test   eax,0x9dd79c18
  41863d:	ja     0x418616
  41863f:	push   cs
  418640:	xor    DWORD PTR [ebx+0x1c],ecx
  418643:	stc    
  418644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418645:	stc    
  418646:	xor    esp,DWORD PTR [edx]
  418648:	mov    ds:0x37816d8f,eax
  41864d:	outs   dx,BYTE PTR ds:[esi]
  41864e:	inc    edi
  41864f:	fist   WORD PTR [ebp+0x12]
  418652:	mov    WORD PTR [edx+0x7e3a5fc4],fs
  418658:	out    dx,eax
  418659:	imul   edx,DWORD PTR [esi-0x4a],0xffffff8f
  41865d:	add    eax,0x99966e8f
  418662:	les    esp,FWORD PTR [ebp+0x6b]
  418665:	(bad)  
  418666:	ja     0x418627
  418668:	push   ebx
  418669:	inc    ebx
  41866a:	jl     0x4186cb
  41866c:	imul   esp,edx,0x295fdc43
  418672:	stc    
  418673:	retf   0x3ec7
  418676:	mov    edi,0x9f0f585c
  41867b:	sub    DWORD PTR [ebx],ecx
  41867d:	out    dx,eax
  41867e:	sub    al,0x92
  418680:	aam    0x14
  418682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418683:	mov    ds:0x30fa917e,al
  418688:	xchg   ecx,edi
  41868a:	repz idiv DWORD PTR [ecx+esi*2]
  41868e:	imul   edx,DWORD PTR [ebp+0x25afd38d],0xbabdd613
  418698:	(bad)  [edx-0x51]
  41869b:	ret    0xdf8e
  41869e:	sbb    eax,0x47de63ea
  4186a3:	daa    
  4186a4:	xchg   esp,eax
  4186a5:	int    0xad
  4186a7:	mov    ebx,0x76dc4308
  4186ac:	or     edi,DWORD PTR [ecx+eiz*4-0x54]
  4186b0:	inc    esi
  4186b1:	jmp    0xa78b0f5d
  4186b6:	mov    dh,0xbc
  4186b8:	mov    edx,0xcec045b7
  4186bd:	imul   edx,DWORD PTR [eax+0x22cc6ec8],0xf400e3b6
  4186c7:	mov    bh,0xf9
  4186c9:	jge    0x418733
  4186cb:	push   ebp
  4186cc:	mov    ebp,0x2f4d2433
  4186d1:	(bad)
  4186d5:	jne    0x418698
  4186d7:	inc    esp
  4186d8:	inc    esi
  4186d9:	add    al,0xb4
  4186db:	ud0    edx,edi
  4186de:	jmp    0xebb4e87b
  4186e3:	push   edx
  4186e4:	pop    es
  4186e5:	jo     0x41873e
  4186e7:	push   edx
  4186e8:	mov    al,ah
  4186ea:	sub    eax,0x1e2c3beb
  4186ef:	cmp    BYTE PTR [eax+edx*2],0x43
  4186f3:	or     BYTE PTR [edi-0x2b],ch
  4186f6:	jp     0x4186da
  4186f8:	mov    ebp,0x5055a778
  4186fd:	jle    0x41875e
  4186ff:	add    ah,BYTE PTR [eax+0x45]
  418702:	mov    DWORD PTR [esi],esp
  418704:	xchg   edx,eax
  418705:	cmp    al,0xb2
  418707:	pop    ecx
  418708:	xlat   BYTE PTR ds:[ebx]
  418709:	fwait
  41870a:	and    DWORD PTR [eax-0x59],esp
  41870d:	add    BYTE PTR [eax+esi*4-0x79dbecd8],al
  418714:	push   ebx
  418715:	sti    
  418716:	xchg   dh,dl
  418718:	pop    esp
  418719:	lods   eax,DWORD PTR ds:[esi]
  41871a:	enter  0x3e,0xf8
  41871e:	add    bh,BYTE PTR [edx]
  418720:	mov    edx,0x7a71a8fc
  418725:	push   eax
  418726:	xor    eax,0x499827c6
  41872b:	rcl    DWORD PTR [edi-0x7d96e461],1
  418731:	(bad)  
  418732:	bnd jno 0x418756
  418735:	out    dx,eax
  418736:	sub    BYTE PTR [eax],dl
  418738:	inc    esp
  418739:	(bad)  
  41873a:	icebp  
  41873b:	scas   al,BYTE PTR es:[edi]
  41873c:	shl    dh,1
  41873e:	xchg   ecx,eax
  41873f:	aaa    
  418740:	sub    al,BYTE PTR [ecx-0xa90aa29]
  418746:	mov    dh,0x47
  418748:	mov    eax,0x7cc90a77
  41874d:	call   0x5df5d6b4
  418752:	xchg   edx,eax
  418753:	lods   eax,DWORD PTR ds:[esi]
  418754:	push   ds
  418755:	xchg   esp,eax
  418756:	and    bl,BYTE PTR [ebp+0x39a1d0f7]
  41875c:	call   0x33fc7956
  418761:	out    dx,al
  418762:	lds    ebx,FWORD PTR [esi+0x23]
  418765:	mov    eax,0xd4ab0057
  41876a:	outs   dx,DWORD PTR ds:[esi]
  41876b:	push   ebx
  41876c:	jl     0x418701
  41876e:	loope  0x4186f3
  418770:	jl     0x4187b5
  418772:	or     DWORD PTR [edx-0x2b85a787],eax
  418778:	out    dx,al
  418779:	nop
  41877a:	(bad)  
  41877b:	lahf   
  41877c:	scas   eax,DWORD PTR es:[edi]
  41877d:	push   esi
  41877e:	dec    esi
  41877f:	retf   
  418780:	xor    DWORD PTR [edx+0x630ec99b],0x24
  418787:	mov    al,0x8
  418789:	or     DWORD PTR [ecx],esi
  41878b:	repnz (bad) [ebx-0x1495144e]
  418792:	xchg   DWORD PTR [esp+edi*8],ecx
  418795:	idiv   BYTE PTR [eax-0x6e98faa2]
  41879b:	ins    DWORD PTR es:[edi],dx
  41879c:	sbb    eax,0xbaf16938
  4187a1:	inc    ebp
  4187a2:	push   ecx
  4187a3:	scas   al,BYTE PTR es:[edi]
  4187a4:	inc    esp
  4187a5:	xchg   edx,eax
  4187a6:	mov    al,ds:0x77bb6f8
  4187ab:	dec    esp
  4187ac:	jl     0x418738
  4187ae:	sub    DWORD PTR [eax],eax
  4187b0:	cmp    eax,0x8719c240
  4187b5:	repz mov al,0xda
  4187b8:	adc    DWORD PTR [eax-0x6d],ebp
  4187bb:	mov    esp,es
  4187bd:	enter  0x26bd,0xf0
  4187c1:	out    dx,eax
  4187c2:	out    0xf2,al
  4187c4:	in     eax,dx
  4187c5:	in     al,dx
  4187c6:	lods   eax,DWORD PTR ds:[esi]
  4187c7:	fs xchg esp,eax
  4187c9:	fld    TBYTE PTR [ecx+edi*8]
  4187cc:	iret   
  4187cd:	ins    DWORD PTR es:[edi],dx
  4187ce:	sbb    dh,BYTE PTR [ebp+0x62ba2f14]
  4187d4:	sbb    BYTE PTR [ebx],dh
  4187d6:	pop    edx
  4187d7:	inc    bl
  4187d9:	outs   dx,DWORD PTR ds:[esi]
  4187da:	adc    eax,0x58c19af3
  4187df:	dec    ebp
  4187e0:	xchg   esi,eax
  4187e1:	jbe    0x418837
  4187e3:	mov    BYTE PTR [edi-0x1e],bh
  4187e6:	xchg   DWORD PTR [edx-0x74b733f4],ebp
  4187ec:	lea    eax,[edx+eax*4-0x2b]
  4187f0:	(bad)  [eax+eax*1-0x10]
  4187f4:	fs js  0x41885c
  4187f7:	pop    edi
  4187f8:	loopne 0x41879b
  4187fa:	das    
  4187fb:	and    ch,BYTE PTR [ebp-0x59f302a6]
  418801:	push   DWORD PTR [edx]
  418803:	mov    ecx,0xa6244b87
  418808:	pop    eax
  418809:	jb     0x4187eb
  41880b:	out    dx,eax
  41880c:	dec    ecx
  41880d:	aad    0xee
  41880f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418810:	out    dx,eax
  418811:	clc    
  418812:	dec    esi
  418813:	retf   0x2051
  418816:	xor    edx,DWORD PTR [ecx+eax*8]
  418819:	leave  
  41881a:	fstp   st(2)
  41881c:	mov    ch,0x4
  41881e:	scas   eax,DWORD PTR es:[edi]
  41881f:	aad    0x84
  418821:	leave  
  418822:	aas    
  418823:	adc    esp,edi
  418825:	push   cs
  418826:	mov    ebp,0x6b1f7366
  41882b:	cmp    eax,esi
  41882d:	mov    al,0x16
  41882f:	pop    ecx
  418830:	lods   eax,DWORD PTR ds:[esi]
  418831:	mov    ebp,0x9e4a133e
  418836:	and    bh,BYTE PTR [ecx+0x68]
  418839:	cmc    
  41883a:	iret   
  41883b:	popa   
  41883c:	call   0x475a:0x9b342d57
  418843:	push   ebx
  418844:	mov    eax,ds:0x8863388
  418849:	inc    edx
  41884a:	out    0x8a,al
  41884c:	fild   DWORD PTR [ebx]
  41884e:	dec    ebp
  41884f:	mov    ecx,0xf600d318
  418854:	xchg   ebx,eax
  418855:	sub    esi,DWORD PTR [edx-0x5012d64b]
  41885b:	(bad)  
  41885e:	inc    eax
  41885f:	or     DWORD PTR [esp+ebp*1],0x39
  418863:	gs int 0x9
  418866:	jle    0x418826
  418868:	nop
  418869:	mov    ah,0xcd
  41886b:	dec    esp
  41886c:	hlt    
  41886d:	cld    
  41886e:	jb     0x418869
  418870:	sub    esi,DWORD PTR [edi]
  418872:	or     esi,esp
  418874:	lds    edx,FWORD PTR ds:0x8b5398bd
  41887a:	add    cl,BYTE PTR [edx-0x5713591a]
  418880:	aad    0xa1
  418882:	push   0x2c
  418884:	jmp    0x6a511418
  418889:	mov    eax,ds:0x89f621b9
  41888e:	cwde   
  41888f:	push   edi
  418890:	jns    0x4188da
  418892:	push   ebp
  418893:	ja     0x418820
  418895:	and    al,0x1
  418897:	rcl    esi,1
  418899:	xchg   ebx,eax
  41889a:	fmul   DWORD PTR [eax+0x4fbb2a61]
  4188a0:	in     al,dx
  4188a1:	jnp    0x4188c6
  4188a3:	mov    bh,0xbf
  4188a5:	iret   
  4188a6:	sub    ah,ch
  4188a8:	jle    0x4188dc
  4188aa:	rcr    esp,cl
  4188ac:	stc    
  4188ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188ae:	xor    BYTE PTR [edi],al
  4188b0:	adc    eax,0xa6522bf1
  4188b5:	cmp    dl,bh
  4188b7:	and    BYTE PTR [ebp-0x6725f7c4],bh
  4188bd:	dec    ecx
  4188be:	ds ds cld 
  4188c1:	iret   
  4188c2:	jg     0x4188e3
  4188c4:	adc    eax,0x31e66610
  4188c9:	(bad)  
  4188ca:	jb     0x41888a
  4188cc:	bound  eax,QWORD PTR [esi+0x4b7b61fb]
  4188d2:	lods   eax,DWORD PTR ds:[esi]
  4188d3:	bound  ebx,QWORD PTR [eax]
  4188d5:	mov    al,ds:0x33140933
  4188da:	out    0x8e,eax
  4188dc:	and    dh,BYTE PTR [edx+0x1aef1364]
  4188e2:	jge    0x4188e8
  4188e4:	sub    ebp,DWORD PTR [edx]
  4188e6:	pop    ebx
  4188e7:	cld    
  4188e8:	mov    BYTE PTR [eax-0x25],cl
  4188eb:	dec    ecx
  4188ec:	imul   edx,DWORD PTR [ebx+eax*1-0x70],0xffffff94
  4188f1:	ds and eax,0x6273203f
  4188f7:	sti    
  4188f8:	xchg   ecx,eax
  4188f9:	stos   BYTE PTR es:[edi],al
  4188fa:	and    eax,0x8118309a
  4188ff:	je     0x4188dc
  418901:	add    DWORD PTR [esi-0x6a7600fa],ebx
  418907:	loop   0x418949
  418909:	sbb    eax,ecx
  41890b:	ins    BYTE PTR es:[edi],dx
  41890c:	test   al,0x57
  41890e:	ins    BYTE PTR es:[edi],dx
  41890f:	fwait
  418910:	dec    esp
  418911:	add    al,0x4a
  418913:	xchg   edi,eax
  418914:	sbb    edi,ebp
  418916:	fistp  DWORD PTR cs:[esp+ecx*4]
  41891a:	in     al,0x3c
  41891c:	xor    DWORD PTR [esi-0x37a2d877],ecx
  418922:	ds push esp
  418924:	mov    bl,0x7a
  418926:	bound  ebp,QWORD PTR [ebx+0x7b1c9521]
  41892c:	push   ebx
  41892d:	mov    ecx,0x7cfd9e15
  418932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418933:	mov    bl,0x22
  418935:	outs   dx,DWORD PTR ds:[esi]
  418936:	retf   
  418937:	add    BYTE PTR cs:[edi+edi*1-0x3e99f927],ah
  41893f:	jecxz  0x41897e
  418941:	sub    al,0xab
  418943:	fmul   DWORD PTR [ebp+0x4]
  418946:	push   ds
  418947:	mov    cl,0xd6
  418949:	lock or BYTE PTR [ebp-0x5f],bl
  41894d:	fistp  WORD PTR [edx+0x7d]
  418950:	fdivr  DWORD PTR [ebp-0x5b82a4f6]
  418956:	lds    esi,FWORD PTR [si-0x4f]
  41895a:	push   0xffffffeb
  41895c:	pop    ecx
  41895d:	jnp    0x41899e
  41895f:	mov    edx,0x8b157985
  418964:	cmp    eax,0xca46053f
  418969:	sbb    edi,ecx
  41896b:	test   ch,dh
  41896d:	push   es
  41896e:	inc    esp
  41896f:	jae    0x41890a
  418971:	icebp  
  418972:	inc    esi
  418973:	aas    
  418974:	out    0xee,eax
  418976:	and    eax,eax
  418978:	stc    
  418979:	or     al,0xfc
  41897b:	imul   esp,DWORD PTR [ecx-0x35e67cdf],0x1ccd2f65
  418985:	cs and bl,bh
  418988:	clc    
  418989:	sub    DWORD PTR [ebx],ebp
  41898b:	fild   WORD PTR [ebp-0x46]
  41898e:	scas   eax,DWORD PTR es:[edi]
  41898f:	shl    BYTE PTR [edi-0x69],cl
  418992:	outs   dx,DWORD PTR ds:[esi]
  418993:	int    0xd9
  418995:	push   esi
  418996:	mov    ch,0x70
  418998:	and    ecx,esi
  41899a:	cli    
  41899b:	push   ebx
  41899c:	push   ebp
  41899d:	out    0xeb,al
  41899f:	jp     0x4189ee
  4189a1:	mov    BYTE PTR [edi+ebx*4],cl
  4189a4:	fcmovnbe st,st(2)
  4189a6:	inc    edx
  4189a7:	lds    eax,FWORD PTR [esi-0xfadbe1]
  4189ad:	mov    ds:0x356125ff,eax
  4189b2:	(bad)  
  4189b3:	and    cl,dl
  4189b5:	aad    0x1a
  4189b7:	repz icebp 
  4189b9:	adc    edx,DWORD PTR [edi]
  4189bb:	mov    bl,0x3b
  4189bd:	mov    ebp,0x842a2d00
  4189c2:	daa    
  4189c3:	popf   
  4189c4:	das    
  4189c5:	ret    0xc682
  4189c8:	add    al,0xb5
  4189ca:	pop    edi
  4189cb:	adc    edx,0xfffffff0
  4189ce:	xchg   esi,eax
  4189cf:	ror    DWORD PTR [ebp-0x387c2e55],0x91
  4189d6:	jnp    0x4189d8
  4189d8:	sub    dh,BYTE PTR [esi-0x48]
  4189db:	call   0x4567:0xe8b743b1
  4189e2:	rep outs dx,DWORD PTR ds:[esi]
  4189e4:	cli    
  4189e5:	call   0xad0c0dcf
  4189ea:	mov    esp,0x74a91f93
  4189ef:	cmp    eax,0x9cbfe857
  4189f4:	aad    0xa
  4189f6:	fwait
  4189f7:	lods   eax,DWORD PTR ds:[esi]
  4189f8:	sub    al,0x34
  4189fa:	daa    
  4189fb:	jns    0x418a6c
  4189fd:	add    BYTE PTR [edx],bh
  4189ff:	test   DWORD PTR ds:0x6673a79c,0xbe824f1b
  418a09:	mov    ebx,0x8622ab1c
  418a0e:	out    dx,eax
  418a0f:	(bad)  
  418a11:	mov    bl,0x73
  418a13:	mov    ebp,DWORD PTR [esi]
  418a15:	dec    esp
  418a16:	out    dx,al
  418a17:	pop    ds
  418a18:	lea    edi,[ebp-0x5d]
  418a1b:	nop
  418a1c:	sub    al,0x52
  418a1e:	xor    al,0xf8
  418a20:	pop    esp
  418a21:	mov    al,0x96
  418a23:	int    0x7e
  418a25:	push   0x6b
  418a27:	or     bh,BYTE PTR [esi+eiz*1-0x19ea4361]
  418a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a2f:	jl     0x418a4f
  418a31:	les    ebp,FWORD PTR [ebp-0x4cc29600]
  418a37:	call   0xb362:0xe0d8ae24
  418a3e:	push   edi
  418a3f:	pop    esi
  418a40:	jg     0x418a5a
  418a42:	add    BYTE PTR [ebp-0x6d3d8640],dh
  418a48:	mov    ah,0x9c
  418a4a:	call   0xe151:0xf57d08d8
  418a51:	stos   DWORD PTR es:[edi],eax
  418a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a53:	push   edx
  418a54:	(bad)  
  418a56:	fisub  DWORD PTR [edi+0x7b601df1]
  418a5c:	pop    ebx
  418a5d:	dec    esi
  418a5e:	cmc    
  418a5f:	sbb    dl,BYTE PTR [edi+esi*8+0x3f]
  418a63:	sbb    bl,BYTE PTR [ebp+0x74]
  418a66:	std    
  418a67:	dec    ebx
  418a68:	in     al,dx
  418a69:	xor    DWORD PTR [ebp-0x5d],ebp
  418a6c:	mov    cs,edi
  418a6e:	(bad)  
  418a6f:	(bad)  
  418a70:	adc    eax,0x8c563f9b
  418a75:	pop    edx
  418a76:	xchg   ebx,eax
  418a77:	stos   BYTE PTR es:[edi],al
  418a78:	mov    bl,0xac
  418a7a:	add    eax,0x10741716
  418a7f:	in     eax,0x51
  418a81:	pop    ecx
  418a82:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  418a84:	inc    ebp
  418a85:	push   ds
  418a86:	adc    eax,0x98045001
  418a8b:	into   
  418a8c:	sub    DWORD PTR [edx+0x3d],edx
  418a8f:	fmul   DWORD PTR [ecx-0x67]
  418a92:	mov    bl,0xd5
  418a94:	lods   eax,DWORD PTR ds:[esi]
  418a95:	jno    0x418ab0
  418a97:	or     DWORD PTR ds:0x389e2a48,0xffffffea
  418a9e:	pusha  
  418a9f:	adc    ah,BYTE PTR [ebx]
  418aa1:	fidiv  DWORD PTR [eax+0x6a62cb55]
  418aa7:	scas   eax,DWORD PTR es:[edi]
  418aa8:	dec    edx
  418aa9:	pusha  
  418aaa:	(bad)  
  418aab:	stos   BYTE PTR es:[edi],al
  418aac:	xor    al,dh
  418aae:	mov    cl,0x97
  418ab0:	mov    ebx,0x91c57229
  418ab5:	cmp    ecx,esp
  418ab7:	xchg   ebx,eax
  418ab8:	aam    0x7
  418aba:	cwde   
  418abb:	and    bh,BYTE PTR [ebp-0x3c]
  418abe:	pusha  
  418abf:	mov    ecx,0xae5d283c
  418ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ac5:	cmp    al,0xde
  418ac7:	sub    DWORD PTR [edx-0x3d],esi
  418aca:	and    al,0x3f
  418acc:	out    dx,eax
  418acd:	inc    ebp
  418ace:	in     eax,dx
  418acf:	mov    bl,0x15
  418ad1:	xor    BYTE PTR [edi],ch
  418ad3:	js     0x418b19
  418ad5:	sti    
  418ad6:	lock dec ebx
  418ad8:	je     0x418a71
  418ada:	test   BYTE PTR [eax+0xb389fae],dh
  418ae0:	or     eax,DWORD PTR [ecx]
  418ae2:	mov    eax,ds:0x69c76672
  418ae7:	xor    al,0x69
  418ae9:	leave  
  418aea:	add    al,BYTE PTR [eax+0x7]
  418aed:	dec    esi
  418aee:	adc    BYTE PTR [ebx+0x3efebe1a],ah
  418af4:	jo     0x418af5
  418af6:	test   al,0x9c
  418af8:	xor    esp,DWORD PTR [edi*2+0x5f63d7f2]
  418aff:	stos   DWORD PTR es:[edi],eax
  418b00:	push   0x30587b29
  418b05:	pop    esp
  418b06:	pop    esi
  418b07:	icebp  
  418b08:	mov    ds:0xdc7c02ad,al
  418b0d:	sub    ebx,DWORD PTR [edi]
  418b0f:	ret    0x9c2e
  418b12:	dec    esi
  418b13:	mov    ebx,0xd0bb0270
  418b18:	sub    edx,eax
  418b1a:	aas    
  418b1b:	iret   
  418b1c:	lock jp 0x418b04
  418b1f:	lods   al,BYTE PTR ds:[esi]
  418b20:	loopne 0x418af1
  418b22:	loopne 0x418aab
  418b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b25:	cmp    ebx,eax
  418b27:	push   edx
  418b28:	push   DWORD PTR [eax]
  418b2a:	mov    BYTE PTR [edi+0x323c7b56],cl
  418b30:	pop    esp
  418b31:	pop    ebp
  418b32:	xor    DWORD PTR [ebx-0x16],0x7e9a1c9f
  418b39:	ficomp WORD PTR ds:0xe777a421
  418b3f:	lea    esi,[edx+esi*4-0x6b5686d1]
  418b46:	sbb    DWORD PTR [ecx-0x3f],0x11c581f5
  418b4d:	jbe    0x418b5e
  418b4f:	cmp    DWORD PTR [edx+eiz*1],ecx
  418b52:	mov    ch,0xf
  418b54:	fisub  DWORD PTR [eax+0x77]
  418b57:	inc    ebp
  418b58:	push   cs
  418b59:	mov    eax,0xc7b5d2ce
  418b5e:	mov    DWORD PTR [edx],edx
  418b60:	aaa    
  418b61:	xor    edx,DWORD PTR [eax+esi*4]
  418b64:	daa    
  418b65:	push   ebp
  418b66:	test   al,0x7c
  418b68:	in     al,dx
  418b69:	mov    ecx,0xdee4feb5
  418b6e:	arpl   WORD PTR [edx+0x21ec74fe],bp
  418b74:	mov    ah,BYTE PTR [esi+0x28fcd642]
  418b7a:	cs call 0x92de:0xc4fa6d38
  418b82:	mov    ebx,0x6202c08d
  418b87:	push   ds
  418b88:	fs pop esp
  418b8a:	pusha  
  418b8b:	jge    0x418bef
  418b8d:	adc    ah,BYTE PTR [ebp+0x92bd473]
  418b93:	fisub  WORD PTR [edi]
  418b95:	and    eax,0x8b398bc5
  418b9a:	sbb    dh,BYTE PTR ds:[edx-0x5c]
  418b9e:	icebp  
  418b9f:	stos   DWORD PTR es:[edi],eax
  418ba0:	gs cmp eax,0xf8447009
  418ba6:	push   esi
  418ba7:	fs cmc 
  418ba9:	jmp    0x9528:0x8bce466f
  418bb0:	sub    eax,0x263be7bf
  418bb5:	sbb    bh,BYTE PTR [ebx+0x69]
  418bb8:	bound  edi,QWORD PTR [ebx]
  418bba:	xor    BYTE PTR [ebp+0x65cae870],dh
  418bc0:	push   esp
  418bc1:	mov    edx,0xd4fb940c
  418bc6:	icebp  
  418bc7:	in     al,0x8e
  418bc9:	or     ebp,DWORD PTR [edi]
  418bcb:	stos   DWORD PTR es:[edi],eax
  418bcc:	mov    WORD PTR [eax],cs
  418bce:	mov    eax,ds:0x9b927ee8
  418bd3:	int    0x87
  418bd5:	and    bl,cl
  418bd7:	jmp    0x430b:0x1e49e6
  418bde:	aad    0x1a
  418be0:	adc    eax,0x20f46f7a
  418be5:	addr16 mov ds:0x9191,eax
  418be9:	ret    0xf552
  418bec:	sbb    ecx,DWORD PTR [eax-0xa488577]
  418bf2:	xor    al,0x76
  418bf4:	push   ebp
  418bf5:	sbb    ch,0x97
  418bf8:	xor    bh,BYTE PTR [ebp+0x7cbd3e76]
  418bfe:	test   al,0xfb
  418c00:	sub    BYTE PTR ds:[edi+0x5f],cl
  418c04:	aad    0x9d
  418c06:	data16 adc dl,BYTE PTR [ebp+eax*8+0x7eba8bff]
  418c0e:	jb     0x418baa
  418c10:	or     edi,DWORD PTR [edx+ebp*2+0x77]
  418c14:	xor    DWORD PTR [eax-0x15],ecx
  418c17:	cmc    
  418c18:	aam    0x1c
  418c1a:	adc    al,0x8c
  418c1c:	jle    0x418bf8
  418c1e:	inc    edi
  418c1f:	pop    ds
  418c20:	sub    al,0x3
  418c22:	les    esp,FWORD PTR [edi+0x1f]
  418c25:	dec    ecx
  418c26:	pop    esi
  418c27:	push   edx
  418c28:	pop    ebp
  418c29:	mov    ch,0x87
  418c2b:	jecxz  0x418c14
  418c2d:	stc    
  418c2e:	jno    0x418c37
  418c30:	gs mov ah,0x3b
  418c33:	call   0x8b3b95de
  418c38:	fwait
  418c39:	add    esi,DWORD PTR [edi+0xd3bac43]
  418c3f:	(bad)  
  418c40:	in     al,0xf5
  418c42:	jns    0x418cbe
  418c44:	sbb    DWORD PTR [esi-0xd],0x92574f6c
  418c4b:	xor    BYTE PTR [edi+eax*4-0x1b5a9fa2],cl
  418c52:	or     BYTE PTR [ecx-0x32],ah
  418c55:	jmp    0x418c8f
  418c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c58:	dec    edi
  418c59:	dec    esp
  418c5a:	cmp    dh,BYTE PTR [eax]
  418c5c:	test   DWORD PTR [esi+eax*4],edi
  418c5f:	mov    ecx,0x8e209169
  418c64:	cmp    BYTE PTR [ebx-0x6d950fe8],ah
  418c6a:	fs sbb eax,0x156413dd
  418c70:	cmc    
  418c71:	or     eax,0x4043d79b
  418c76:	ret    0x190d
  418c79:	xchg   ebx,eax
  418c7a:	test   al,0xa8
  418c7c:	rcl    BYTE PTR [ebx+0x28e56a9f],1
  418c82:	inc    esi
  418c83:	jo     0x418c0c
  418c85:	jge    0x418c0a
  418c87:	mov    al,BYTE PTR [ecx+0x52]
  418c8a:	mov    ds:0x172ab658,al
  418c8f:	cdq    
  418c90:	mov    edi,0xf4b3fd93
  418c95:	cmc    
  418c96:	cdq    
  418c97:	and    BYTE PTR [ecx-0x23ea9293],cl
  418c9d:	push   0x6540aef2
  418ca2:	mov    bh,0x59
  418ca4:	sahf   
  418ca5:	or     bl,bh
  418ca7:	mov    edi,edi
  418ca9:	mov    ecx,0xffc68082
  418cae:	pop    eax
  418caf:	mov    bl,0xf6
  418cb1:	pop    es
  418cb2:	inc    esi
  418cb3:	nop    DWORD PTR [edx+0x3aaff972]
  418cba:	cli    
  418cbb:	mov    ebx,fs
  418cbd:	js     0x418c57
  418cbf:	inc    edi
  418cc0:	out    dx,eax
  418cc1:	cli    
  418cc2:	jns    0x418c5b
  418cc4:	xchg   ebx,eax
  418cc5:	mov    BYTE PTR [edx+0x30],cl
  418cc8:	push   ds
  418cc9:	scas   al,BYTE PTR es:[edi]
  418cca:	loope  0x418ce6
  418ccc:	and    esp,DWORD PTR [ebp-0x6eae5ae1]
  418cd2:	test   al,0xd4
  418cd4:	sar    bl,0x77
  418cd7:	cmp    eax,0x58bc6194
  418cdc:	pop    edx
  418cdd:	daa    
  418cde:	je     0x418cc1
  418ce0:	fldenv [ebx]
  418ce2:	jle    0x418c91
  418ce4:	sahf   
  418ce5:	shr    bh,0xb2
  418ce8:	fcom   QWORD PTR [edx+0x7]
  418ceb:	test   eax,0x938f2a8e
  418cf0:	or     eax,0x95391939
  418cf5:	sub    eax,0x2f5ef4ca
  418cfa:	jp     0x418d12
  418cfc:	sub    eax,0xe8d2d5c8
  418d01:	sar    cl,1
  418d03:	jnp    0x418cc5
  418d05:	ss das 
  418d07:	xor    BYTE PTR [esi],bh
  418d09:	sub    eax,DWORD PTR [ebp+0x3f]
  418d0c:	fld    st(3)
  418d0e:	sub    eax,0xbc05ec1c
  418d13:	inc    esp
  418d14:	fldenv [ebx-0x44a3b802]
  418d1a:	inc    esp
  418d1b:	cwde   
  418d1c:	popf   
  418d1d:	mov    ds:0xc1deea39,eax
  418d22:	loopne 0x418da1
  418d24:	mov    BYTE PTR [esi],bh
  418d26:	fcom   DWORD PTR [ecx-0x75]
  418d29:	int3   
  418d2a:	out    0xd1,al
  418d2c:	jmp    0x276e5dbd
  418d31:	mov    ds:0x4c747cf8,eax
  418d36:	xor    DWORD PTR [ecx-0x309858ed],edi
  418d3c:	mov    edi,0x9074ea3d
  418d41:	frstpm(287 only) 
  418d43:	pop    ebx
  418d44:	xchg   esp,eax
  418d45:	(bad)  
  418d46:	mov    dh,0x46
  418d48:	mov    ecx,0x563541f0
  418d4d:	pop    edi
  418d4e:	mov    ds:0x33659b5d,al
  418d53:	lods   al,BYTE PTR ds:[esi]
  418d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d55:	push   0xffffff8f
  418d57:	std    
  418d58:	inc    edx
  418d59:	shl    BYTE PTR [edi],0x70
  418d5c:	dec    edi
  418d5d:	test   eax,0xef07473a
  418d62:	sbb    BYTE PTR [ebx+0x17],0xdc
  418d66:	sub    bl,BYTE PTR [ebx+0x325b1f25]
  418d6c:	bt     DWORD PTR [eax+0x73436184],edi
  418d73:	mov    eax,ds:0xd558bc26
  418d78:	sbb    al,0xd4
  418d7a:	push   ds
  418d7b:	inc    ebx
  418d7c:	add    ebp,DWORD PTR [edx-0x5f]
  418d7f:	jnp    0x418d3e
  418d81:	fidiv  WORD PTR [eax-0x4760f596]
  418d87:	push   edi
  418d88:	aaa    
  418d89:	jnp    0x418d56
  418d8b:	in     al,dx
  418d8c:	jg     0x418d3e
  418d8e:	xchg   dl,bh
  418d90:	push   eax
  418d91:	adc    al,0x43
  418d93:	retf   
  418d94:	inc    edi
  418d95:	xchg   ebp,eax
  418d96:	imul   esp,ebp,0xffffff9e
  418d99:	fimul  WORD PTR [eax]
  418d9b:	push   esi
  418d9c:	in     eax,dx
  418d9d:	and    DWORD PTR [esp+eiz*2+0x9],0xba330fa5
  418da5:	or     eax,0x86ce1171
  418daa:	shr    BYTE PTR [edx],0xa9
  418dad:	push   esi
  418dae:	inc    edi
  418daf:	dec    esp
  418db0:	push   ebp
  418db1:	gs (bad) 
  418db3:	jg     0x418e0e
  418db5:	outs   dx,BYTE PTR ds:[esi]
  418db6:	daa    
  418db7:	test   al,0xc
  418db9:	aad    0x7f
  418dbb:	aaa    
  418dbc:	sbb    eax,0x17162e33
  418dc1:	jns    0x418e19
  418dc3:	push   esp
  418dc4:	jmp    0xf170362a
  418dc9:	sub    ebx,DWORD PTR [bx+di]
  418dcc:	sahf   
  418dcd:	inc    ecx
  418dce:	cmp    al,BYTE PTR [edi+0x7f97c8dd]
  418dd4:	sub    DWORD PTR [ecx],ebx
  418dd6:	mov    al,0x76
  418dd8:	out    dx,eax
  418dd9:	fisubr DWORD PTR [eax+0x33]
  418ddc:	popa   
  418ddd:	sahf   
  418dde:	push   ecx
  418ddf:	push   ds
  418de0:	fnstcw WORD PTR es:[edi+0x17f00747]
  418de7:	jo     0x418e4c
  418de9:	sahf   
  418dea:	pusha  
  418deb:	sbb    esi,DWORD PTR [edx+eiz*2]
  418dee:	fisub  DWORD PTR [ecx-0xb6713c2]
  418df4:	je     0x418e19
  418df6:	pop    edx
  418df7:	daa    
  418df8:	ins    BYTE PTR es:[edi],dx
  418df9:	mov    edx,0xc273fed9
  418dfe:	mov    WORD PTR [ecx-0x5a],ds
  418e01:	jae    0x418e80
  418e03:	xchg   edi,eax
  418e04:	cmp    al,0x94
  418e06:	into   
  418e07:	stos   BYTE PTR es:[edi],al
  418e08:	and    DWORD PTR [eax+edi*4-0xa],ebx
  418e0c:	xor    cl,bh
  418e0e:	inc    bp
  418e10:	int3   
  418e11:	jb     0x418e89
  418e13:	sbb    al,0xd6
  418e15:	jp     0x418de9
  418e17:	in     al,dx
  418e18:	ss jecxz 0x418e3e
  418e1b:	add    esi,DWORD PTR [ecx-0x7c3f9939]
  418e21:	adc    edi,DWORD PTR [edi-0x757cae21]
  418e27:	jb     0x418e33
  418e29:	and    edx,DWORD PTR [ebx-0x3481a509]
  418e2f:	and    cl,0x4f
  418e32:	mov    ch,0xce
  418e34:	adc    al,0xba
  418e36:	mov    DWORD PTR [eax+0x46],ebp
  418e39:	dec    esi
  418e3a:	not    DWORD PTR [ebp-0x288e9bec]
  418e40:	fldenv [edx-0x63db7f5d]
  418e46:	ins    BYTE PTR es:[edi],dx
  418e47:	inc    edi
  418e48:	and    eax,0x3f6f919e
  418e4d:	dec    edx
  418e4e:	fistp  DWORD PTR [edi+0x16312ba0]
  418e54:	clc    
  418e55:	inc    ebx
  418e56:	xor    DWORD PTR [edx],esp
  418e58:	aam    0x67
  418e5a:	mov    bl,0x74
  418e5c:	push   ecx
  418e5d:	out    dx,al
  418e5e:	(bad)  
  418e5f:	cwde   
  418e60:	xchg   edx,eax
  418e61:	jne    0x418e97
  418e63:	cmp    eax,0x8b92d950
  418e68:	(bad)  
  418e69:	jae    0x418e55
  418e6b:	jae    0x418e17
  418e6d:	sbb    ch,dh
  418e6f:	fist   WORD PTR [ecx-0x44]
  418e72:	adc    dl,BYTE PTR [ecx-0x6f]
  418e75:	outs   dx,BYTE PTR ds:[esi]
  418e76:	out    dx,al
  418e77:	mov    ecx,0x2ac0cc45
  418e7c:	add    ecx,edi
  418e7e:	(bad)  
  418e7f:	push   ebp
  418e80:	mov    eax,ds:0xdc93faf5
  418e85:	and    al,0x12
  418e87:	mov    ch,0x2
  418e89:	js     0x418e73
  418e8b:	push   0x1f
  418e8d:	lods   al,BYTE PTR ds:[esi]
  418e8e:	out    dx,eax
  418e8f:	aad    0x3d
  418e91:	dec    eax
  418e92:	adc    dh,BYTE PTR [ebp+0x6]
  418e95:	imul   eax,esp,0x10e12ec5
  418e9b:	and    eax,eax
  418e9d:	fs daa 
  418e9f:	ss push ecx
  418ea1:	test   al,0x3f
  418ea3:	jg     0x418ee4
  418ea5:	(bad)  
  418ea7:	clc    
  418ea8:	xor    edi,DWORD PTR [esi]
  418eaa:	bound  esi,QWORD PTR [ecx+eiz*8-0x5a6f4e48]
  418eb1:	pop    esp
  418eb2:	xchg   ebp,eax
  418eb3:	pop    es
  418eb4:	repz push ebx
  418eb6:	ret    0x93ae
  418eb9:	out    dx,al
  418eba:	and    eax,0xee3cf6d0
  418ebf:	push   DWORD PTR [eax+0x413dd0fe]
  418ec5:	test   DWORD PTR [edx],0xa46ae4a1
  418ecb:	pop    ebp
  418ecc:	inc    esi
  418ecd:	in     eax,dx
  418ece:	xchg   ebp,eax
  418ecf:	inc    ebp
  418ed0:	aaa    
  418ed1:	xchg   esp,eax
  418ed2:	jg     0x418e94
  418ed4:	dec    ebx
  418ed5:	mov    esi,0x50a91d1b
  418eda:	fldenv [edx+0x2c]
  418edd:	sar    BYTE PTR [eax+0x311bef34],cl
  418ee3:	sbb    ebp,DWORD PTR [esp+eax*4]
  418ee6:	pop    ss
  418ee7:	ins    BYTE PTR es:[edi],dx
  418ee8:	jae    0x418f1e
  418eea:	mov    al,0xee
  418eec:	adc    eax,0x185ad7be
  418ef1:	sar    DWORD PTR [ecx-0x4f105689],cl
  418ef7:	mov    esi,0x21c7db01
  418efc:	dec    ebx
  418efd:	jle    0x418e83
  418eff:	adc    al,0xa0
  418f01:	ins    BYTE PTR es:[edi],dx
  418f02:	gs mov esp,0x1dcb157c
  418f08:	xchg   bp,ax
  418f0a:	test   BYTE PTR [ecx+eiz*2],0x66
  418f0e:	mov    al,ds:0x74826eb4
  418f13:	add    edx,DWORD PTR [esi-0x55]
  418f16:	jno    0x418ef4
  418f18:	jmp    FWORD PTR [esi+0x6c2275f0]
  418f1e:	addr16 loopne 0x418f13
  418f21:	adc    BYTE PTR [ecx+0x0],0x63
  418f25:	inc    eax
  418f26:	outs   dx,DWORD PTR ds:[esi]
  418f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f28:	pop    ebp
  418f29:	je     0x418f7c
  418f2b:	sbb    al,0x69
  418f2d:	fcomp  QWORD PTR [edi-0x4ec5810b]
  418f33:	push   cs
  418f34:	pop    es
  418f35:	jnp    0x418fb2
  418f37:	push   0x376b043f
  418f3c:	mov    ds,WORD PTR [ecx-0x6b]
  418f3f:	call   0x90049ab4
  418f44:	aas    
  418f45:	mov    ?,edi
  418f47:	fxch   st(3)
  418f49:	rcl    BYTE PTR [ebx+0x7109924c],cl
  418f4f:	popa   
  418f50:	pusha  
  418f51:	jl     0x418ed8
  418f53:	mov    DWORD PTR [edx-0x73ac7453],edx
  418f59:	mov    BYTE PTR [esi],ch
  418f5b:	cmp    DWORD PTR [ebx],edx
  418f5d:	cli    
  418f5e:	fucomp st(7)
  418f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f61:	data16 scas al,BYTE PTR es:[edi]
  418f63:	and    eax,0x38c4920d
  418f68:	test   al,0x76
  418f6a:	fwait
  418f6b:	mov    esp,0xa93150df
  418f70:	adc    eax,0x526d9c4a
  418f75:	cs pushf 
  418f77:	push   ebp
  418f78:	or     DWORD PTR [esi-0x46a94f1b],ecx
  418f7e:	mov    ebp,0x13046f83
  418f83:	xchg   ebp,eax
  418f84:	daa    
  418f85:	nop
  418f86:	stos   BYTE PTR es:[edi],al
  418f87:	pushf  
  418f88:	pop    esi
  418f89:	jo     0x418fda
  418f8b:	retf   
  418f8c:	addr16 push 0x53b474d
  418f92:	push   esp
  418f93:	retf   
  418f94:	out    dx,eax
  418f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f96:	repnz faddp st(4),st
  418f99:	jmp    0x6efe:0xb57cadb3
  418fa0:	into   
  418fa1:	xor    eax,0x20ab30e3
  418fa6:	inc    ebx
  418fa7:	ins    DWORD PTR es:[edi],dx
  418fa8:	cmp    BYTE PTR [edx],0xc0
  418fab:	sbb    eax,0x64e13219
  418fb0:	push   ebp
  418fb1:	ret    0x6a9b
  418fb4:	jmp    0x418f64
  418fb6:	sub    dl,dh
  418fb8:	dec    ebp
  418fb9:	cmp    al,0x7f
  418fbb:	(bad)  [esp+edi*8+0x1b]
  418fbf:	hlt    
  418fc0:	push   0xffffffd6
  418fc2:	xlat   BYTE PTR ds:[ebx]
  418fc3:	cmp    dl,BYTE PTR [edx+0x7b]
  418fc6:	pop    ebx
  418fc7:	sub    eax,0xfe0ac890
  418fcc:	mov    ds:0xd70a23ad,al
  418fd1:	add    BYTE PTR ds:0x90280e0f,dl
  418fd7:	push   cs
  418fd8:	call   0x9eec16c3
  418fdd:	or     esp,esi
  418fdf:	fiadd  DWORD PTR [edx-0x80]
  418fe2:	lods   eax,DWORD PTR ds:[esi]
  418fe3:	clc    
  418fe4:	mov    al,ds:0xfc5f1ca5
  418fe9:	fwait
  418fea:	cld    
  418feb:	mov    esi,0x6c222daf
  418ff0:	pop    ss
  418ff1:	ss inc edx
  418ff3:	mov    dh,0x50
  418ff5:	(bad)  
  418ff6:	in     eax,0x9c
  418ff8:	pusha  
  418ff9:	lds    edi,FWORD PTR [ebp-0x554a9733]
  418fff:	pop    esp
  419000:	mov    ebx,0x7f5f82fa
  419005:	mov    ecx,0xffaf896d
  41900a:	je     0x41902c
  41900c:	cmp    al,0xee
  41900e:	nop
  41900f:	pop    ss
  419010:	hlt    
  419011:	or     esp,ebx
  419013:	push   ds
  419014:	cdq    
  419015:	pusha  
  419016:	xor    DWORD PTR [esi],0x8bcba10d
  41901c:	js     0x418ff0
  41901e:	push   cs
  41901f:	inc    eax
  419020:	fidivr DWORD PTR [ebp+0xbd89491]
  419026:	cdq    
  419027:	fwait
  419028:	jmp    0xfcf0c3c9
  41902d:	hlt    
  41902e:	fs mov eax,0x574177f5
  419034:	xchg   dh,dl
  419036:	mov    dh,0xab
  419038:	xor    al,BYTE PTR [ecx+eax*8-0x74]
  41903c:	push   eax
  41903d:	mov    ch,BYTE PTR [ecx+0x7d8c4246]
  419043:	mov    cl,0xd5
  419045:	lds    edx,FWORD PTR [edi+0x7d23d76e]
  41904b:	pop    esi
  41904c:	leave  
  41904d:	pushf  
  41904e:	inc    edx
  41904f:	mov    edi,0x2a9c1ab0
  419054:	enter  0x9f1f,0x82
  419058:	sub    BYTE PTR [eax],ah
  41905a:	inc    ebx
  41905b:	jle    0x419048
  41905d:	call   FWORD PTR [edi-0x51]
  419060:	xchg   edx,eax
  419061:	xchg   ebx,eax
  419062:	push   ss
  419063:	int3   
  419064:	(bad)  
  419065:	jns    0x4190c2
  419067:	mov    eax,ds:0xede51e2a
  41906c:	ret    
  41906d:	stc    
  41906e:	cmc    
  41906f:	lods   eax,DWORD PTR ds:[esi]
  419070:	push   es
  419071:	pop    eax
  419072:	lock inc ebx
  419074:	ss pushw ds
  419077:	pop    ecx
  419078:	retf   0x5ec3
  41907b:	pop    edx
  41907c:	pop    es
  41907d:	add    edi,DWORD PTR [ebx]
  41907f:	jecxz  0x41904f
  419081:	rcl    eax,0xae
  419084:	push   ebp
  419085:	add    eax,0x5edec09d
  41908a:	dec    esi
  41908b:	in     eax,dx
  41908c:	jmp    0x4190a7
  41908e:	cmc    
  41908f:	ror    DWORD PTR [edx+ebx*2-0x5014068e],0x6
  419097:	cmp    BYTE PTR [ebx-0x14],al
  41909a:	xor    BYTE PTR [ebx],ah
  41909c:	fdivr  DWORD PTR [ebx-0x1]
  41909f:	(bad)  
  4190a0:	retf   
  4190a1:	aad    0xb6
  4190a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190a4:	pop    ebx
  4190a5:	dec    edx
  4190a6:	jo     0x4190bf
  4190a8:	push   es
  4190a9:	mov    ebp,DWORD PTR [edi]
  4190ab:	scas   al,BYTE PTR es:[edi]
  4190ac:	and    al,0x77
  4190ae:	(bad)  [esi+0x37d250ce]
  4190b4:	(bad)  
  4190b5:	push   ecx
  4190b6:	lea    ebp,[esi]
  4190b8:	adc    BYTE PTR [eax-0x7f],dh
  4190bb:	mov    eax,0x8937f6ec
  4190c0:	ss inc eax
  4190c2:	frstor [ebp+0x61]
  4190c5:	call   0xdc2b:0x3d7a4bcc
  4190cc:	pop    esp
  4190cd:	mov    bl,0x6c
  4190cf:	sbb    edi,esp
  4190d1:	mov    edx,0x9b45871d
  4190d6:	stos   BYTE PTR es:[edi],al
  4190d7:	bound  eax,QWORD PTR [esp+ebx*4+0x6b510b2e]
  4190de:	scas   eax,DWORD PTR es:[edi]
  4190df:	mov    ebp,0x2c7ed2ff
  4190e4:	mov    bl,0xb9
  4190e6:	lods   al,BYTE PTR ds:[esi]
  4190e7:	fisub  WORD PTR [eax]
  4190e9:	sbb    eax,ebx
  4190eb:	test   DWORD PTR [ebx-0x36],edi
  4190ee:	pop    ebp
  4190ef:	add    dl,ah
  4190f1:	cld    
  4190f2:	jmp    0x8435066
  4190f7:	ss jmp 0xa408:0xa64852e1
  4190ff:	gs test al,0x5a
  419102:	add    cl,ah
  419104:	push   edx
  419105:	xor    ch,BYTE PTR [esi+0x1ebf3a8a]
  41910b:	sbb    dl,BYTE PTR [edx]
  41910d:	rcr    BYTE PTR [ebx],cl
  41910f:	push   cs
  419110:	jne    0x419161
  419112:	and    BYTE PTR [esi-0x5d31e93c],al
  419118:	inc    ebx
  419119:	jno    0x41918d
  41911b:	add    DWORD PTR [eax],0x6f
  41911e:	das    
  41911f:	int    0xe7
  419121:	outs   dx,DWORD PTR ds:[esi]
  419122:	addr16 jmp 0xb5e:0x89fc1461
  41912a:	and    al,0xb
  41912c:	cmp    esp,eax
  41912e:	popf   
  41912f:	xchg   edi,eax
  419130:	sub    bh,BYTE PTR [edi+edx*4]
  419133:	sbb    esp,DWORD PTR [ecx+0x48a19b8f]
  419139:	nop
  41913a:	xor    al,0xe5
  41913c:	xchg   esp,eax
  41913d:	xor    BYTE PTR [ebx-0x75],bl
  419140:	mov    edx,0x76da9553
  419145:	test   eax,0x9c1143e6
  41914a:	das    
  41914b:	(bad)  
  41914d:	xchg   BYTE PTR [ebp-0x48],bl
  419150:	xchg   edi,eax
  419151:	(bad)
  419155:	daa    
  419156:	test   BYTE PTR [edx],cl
  419158:	in     eax,dx
  419159:	int3   
  41915a:	ja     0x419157
  41915c:	dec    edi
  41915d:	mov    ecx,0x13307a6f
  419162:	imul   edx,DWORD PTR [esi],0x52f2a83b
  419168:	jecxz  0x41918e
  41916a:	adc    BYTE PTR [ebx-0x2e1ee799],0x5a
  419171:	cwde   
  419172:	adc    DWORD PTR [edx],0xa3067eab
  419178:	cs push edi
  41917a:	push   edx
  41917b:	fsub   DWORD PTR [eax+edx*2-0x72]
  41917f:	adc    ch,BYTE PTR [esi+0x2c80f260]
  419185:	cmp    eax,0x5663c35b
  41918a:	or     ebp,eax
  41918c:	sub    ecx,DWORD PTR [ebx-0x12]
  41918f:	cli    
  419190:	clc    
  419191:	out    dx,eax
  419192:	push   0xffffff96
  419194:	fimul  DWORD PTR [ebx]
  419196:	pop    esi
  419197:	sub    DWORD PTR [ebx+0x14],esi
  41919a:	adc    al,0x82
  41919c:	sub    al,0x37
  41919e:	fucom  st(4)
  4191a0:	inc    ecx
  4191a1:	aas    
  4191a2:	cmp    BYTE PTR [ebp-0x1],dh
  4191a5:	pop    esp
  4191a6:	setnp  BYTE PTR [eax]
  4191a9:	inc    edi
  4191aa:	xchg   edx,eax
  4191ab:	hlt    
  4191ac:	addr16 cwde 
  4191ae:	add    al,0xb
  4191b0:	test   eax,esi
  4191b2:	pusha  
  4191b3:	idiv   cl
  4191b5:	test   eax,0x2439b9b5
  4191ba:	fsubrp st(1),st
  4191bc:	(bad)  [eax-0x5c]
  4191bf:	sub    al,0xe6
  4191c1:	out    0x1d,al
  4191c3:	pop    es
  4191c4:	cmp    esi,esi
  4191c6:	sbb    dh,BYTE PTR [ecx-0x1c]
  4191c9:	add    DWORD PTR [eax+0x5fa844ff],esp
  4191cf:	shl    ch,1
  4191d1:	test   al,0xc8
  4191d3:	arpl   si,sp
  4191d5:	in     al,dx
  4191d6:	xor    al,0x9b
  4191d8:	jle    0x4191b4
  4191da:	push   0x6b183d2f
  4191df:	dec    ecx
  4191e0:	cmp    dh,BYTE PTR [ebx-0x46d111ae]
  4191e6:	popf   
  4191e7:	int3   
  4191e8:	inc    edx
  4191e9:	or     al,0xbb
  4191eb:	add    eax,0xf3abd30e
  4191f0:	adc    dh,BYTE PTR [edx]
  4191f2:	inc    ebx
  4191f3:	int3   
  4191f4:	inc    edi
  4191f5:	pop    edi
  4191f6:	clc    
  4191f7:	sub    BYTE PTR [ebx-0x18],bh
  4191fa:	retf   
  4191fb:	cld    
  4191fc:	gs cmc 
  4191fe:	call   0xb2aa:0xcb673adb
  419205:	or     eax,0x4252d405
  41920a:	sub    eax,0xe42812fc
  41920f:	jp     0x4191d9
  419211:	daa    
  419212:	fsub   DWORD PTR [esi+0x13]
  419215:	push   cs
  419216:	add    al,0x14
  419218:	sub    ebp,edi
  41921a:	add    eax,0x50869142
  41921f:	fistp  WORD PTR [edi+0x10e9af5a]
  419225:	call   FWORD PTR [edx-0x80]
  419228:	cmp    edx,DWORD PTR [ebp+0x2b]
  41922b:	popa   
  41922c:	clc    
  41922d:	cdq    
  41922e:	dec    esi
  41922f:	push   0xffffffb2
  419231:	cwde   
  419232:	shl    BYTE PTR [esp+ebp*8],0x9f
  419236:	fwait
  419237:	je     0x4191f2
  419239:	jge    0x41929d
  41923b:	out    0xae,eax
  41923d:	xchg   DWORD PTR ds:0xca946e2c,esi
  419243:	fwait
  419244:	call   0x949f:0x8febfd12
  41924b:	mov    ds,WORD PTR ds:0xfa2fff7e
  419251:	nop
  419252:	sbb    al,0x85
  419254:	xchg   ebx,eax
  419255:	sar    edi,0x43
  419258:	pop    edx
  419259:	push   cs
  41925a:	bound  edx,QWORD PTR [edi]
  41925c:	jmp    0xbb9a:0xdccc36f9
  419263:	push   ebp
  419264:	fdivrp st(5),st
  419266:	sahf   
  419267:	lds    ebx,FWORD PTR [ebp-0x641b3e88]
  41926d:	sub    bl,BYTE PTR [esp+ebp*2+0x5cfa8b4d]
  419274:	add    eax,0x388f98b6
  419279:	dec    edx
  41927a:	in     al,0xcb
  41927c:	cmp    al,0x85
  41927e:	push   ds
  41927f:	jg     0x4192e0
  419281:	gs hlt 
  419283:	jae    0x4192e2
  419285:	xor    eax,0xfca283db
  41928a:	cwde   
  41928b:	cmp    DWORD PTR [ebx+0x6f],0xfffffffa
  41928f:	push   ebp
  419290:	push   ss
  419291:	imul   ebp,esp,0xffffffd9
  419294:	sbb    DWORD PTR [ecx+0x2d],ebx
  419297:	(bad)  
  419299:	add    DWORD PTR [edx+eiz*1+0x11],edi
  41929d:	stc    
  41929e:	in     al,dx
  41929f:	pop    edx
  4192a0:	outs   dx,DWORD PTR ds:[esi]
  4192a1:	aas    
  4192a2:	jmp    0x13c0:0x7a29041c
  4192a9:	repz mov WORD PTR [ebx+0x4b],ss
  4192ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ae:	sbb    bh,dl
  4192b0:	das    
  4192b1:	jno    0x4192c1
  4192b3:	fisub  DWORD PTR [edi+edx*1+0x13a766]
  4192ba:	fs popf 
  4192bc:	pop    esp
  4192bd:	cmc    
  4192be:	loopne 0x41929d
  4192c0:	mov    cl,0xa6
  4192c2:	mov    dl,0x37
  4192c4:	bound  esp,QWORD PTR [ecx-0x805d397]
  4192ca:	pop    edx
  4192cb:	(bad)  
  4192cc:	mov    eax,0x4e774777
  4192d1:	imul   esi,DWORD PTR [ecx],0x71da0dcf
  4192d7:	push   ebp
  4192d8:	sub    al,0x46
  4192da:	int3   
  4192db:	pusha  
  4192dc:	pop    es
  4192dd:	xchg   ecx,eax
  4192de:	clc    
  4192df:	xchg   esp,eax
  4192e0:	outs   dx,BYTE PTR ds:[esi]
  4192e1:	pop    ebp
  4192e2:	out    dx,eax
  4192e3:	into   
  4192e4:	inc    ebp
  4192e5:	pop    ebx
  4192e6:	jmp    0x419315
  4192e8:	out    dx,al
  4192e9:	nop
  4192ea:	(bad)  
  4192eb:	jbe    0x419285
  4192ed:	inc    ebp
  4192ee:	or     cl,al
  4192f0:	fdivr  QWORD PTR [edi+0x10]
  4192f3:	or     eax,0xf0d789a5
  4192f8:	xor    eax,0xc9290fec
  4192fd:	mov    eax,ds:0x3f4cd513
  419302:	mov    dh,0x1e
  419304:	(bad)  
  419305:	ds out dx,al
  419307:	cmp    edx,eax
  419309:	cld    
  41930a:	out    0x17,eax
  41930c:	xor    eax,0x108735fd
  419311:	add    BYTE PTR [esi+0x4a],al
  419314:	dec    eax
  419315:	xor    BYTE PTR [eax],ch
  419317:	pop    ebx
  419318:	(bad)  
  419319:	sbb    al,0x81
  41931b:	push   esi
  41931c:	sbb    ah,cl
  41931e:	stos   BYTE PTR es:[edi],al
  41931f:	jno    0x41934a
  419321:	fistp  DWORD PTR [eax]
  419323:	pop    esp
  419324:	arpl   WORD PTR [edx-0x199bf562],cx
  41932a:	cmp    dl,BYTE PTR [eax-0x58ba2bfe]
  419330:	jnp    0x4192bb
  419332:	mov    BYTE PTR [ebx-0x6be0cb97],dl
  419338:	fs ins DWORD PTR es:[edi],dx
  41933a:	cmp    ch,dl
  41933c:	in     eax,dx
  41933d:	test   al,0x4a
  41933f:	xchg   BYTE PTR [ecx+0x2b],ah
  419342:	pop    edx
  419343:	sti    
  419344:	and    BYTE PTR [esi],al
  419346:	jnp    0x419364
  419348:	stos   BYTE PTR es:[edi],al
  419349:	xchg   ecx,eax
  41934a:	dec    esp
  41934b:	or     dl,dh
  41934d:	xor    dh,BYTE PTR [edx+0x63da7313]
  419353:	dec    ecx
  419354:	dec    edx
  419355:	shl    BYTE PTR [edi],0xe6
  419358:	xchg   edx,eax
  419359:	mov    BYTE PTR ds:[ebp-0x7a],dh
  41935d:	mov    ecx,ebp
  41935f:	adc    al,0xa8
  419361:	push   DWORD PTR [eax]
  419363:	xchg   ebx,eax
  419364:	div    BYTE PTR [ebx+0x73]
  419367:	jg     0x4192ff
  419369:	xchg   DWORD PTR [eax-0x62],ebp
  41936c:	pop    ebx
  41936d:	jp     0x41937e
  41936f:	(bad)  
  419370:	out    dx,eax
  419371:	ins    DWORD PTR es:[edi],dx
  419372:	outs   dx,BYTE PTR ds:[esi]
  419373:	cmpxchg BYTE PTR [ebp+ebx*2-0x7ea94dcf],bl
  41937b:	dec    edx
  41937c:	sbb    al,dh
  41937e:	hlt    
  41937f:	mov    ch,0x35
  419381:	xor    cl,BYTE PTR [ecx]
  419383:	stos   DWORD PTR es:[edi],eax
  419384:	ret    0x6cb9
  419387:	jmp    0x419339
  419389:	jae    0x419365
  41938b:	mov    ds:0xcca19a56,al
  419390:	test   DWORD PTR [ebx+0x603ab422],ebx
  419396:	mov    ecx,0x1d2f1868
  41939b:	mov    ecx,0x4434cdba
  4193a0:	jmp    0xf572ca75
  4193a5:	xor    al,0x7a
  4193a7:	scas   eax,DWORD PTR es:[edi]
  4193a8:	dec    eax
  4193a9:	ror    BYTE PTR [edx],1
  4193ab:	add    ebx,ecx
  4193ad:	push   cs
  4193ae:	adc    esp,DWORD PTR [eax+0x55]
  4193b1:	fldcw  WORD PTR [esi]
  4193b3:	mov    esp,0xbd506730
  4193b8:	iret   
  4193b9:	pop    ebx
  4193ba:	std    
  4193bb:	out    dx,eax
  4193bc:	or     ebx,DWORD PTR [ebp+0x44cc645]
  4193c2:	pop    eax
  4193c3:	mov    ds:0x9016fed7,eax
  4193c8:	jle    0x41942c
  4193ca:	push   esi
  4193cb:	test   eax,0xc7c1f7e2
  4193d0:	push   DWORD PTR [ebp-0x64]
  4193d3:	imul   ecx,DWORD PTR [esi+0x4d],0xa4fec05
  4193da:	loope  0x41943a
  4193dc:	stos   DWORD PTR es:[edi],eax
  4193dd:	xchg   edi,eax
  4193de:	adc    edx,0x26
  4193e1:	xchg   ebx,eax
  4193e2:	inc    ecx
  4193e3:	pusha  
  4193e4:	sbb    BYTE PTR [esi-0x58c46e80],al
  4193ea:	imul   ebx,DWORD PTR [esi+0x3f],0xffffffb8
  4193ee:	push   edi
  4193ef:	int    0x45
  4193f1:	fnstcw WORD PTR [ecx-0x48]
  4193f4:	rol    DWORD PTR [edi+0x7179735b],0x8e
  4193fb:	ror    DWORD PTR [edx],0x8e
  4193fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ff:	mov    WORD PTR [ebx],cs
  419401:	mov    bl,0xe5
  419403:	xlat   BYTE PTR ds:[ebx]
  419404:	mov    al,0x52
  419406:	ror    BYTE PTR [ebp-0x77],1
  419409:	pop    es
  41940a:	shr    al,0x56
  41940d:	scas   al,BYTE PTR es:[edi]
  41940e:	jmp    0x4193db
  419410:	daa    
  419411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419412:	inc    esp
  419413:	cmp    eax,0xc97bcc26
  419418:	imul   BYTE PTR [edi]
  41941a:	aam    0x5a
  41941c:	(bad)  
  41941d:	ficom  WORD PTR [eax]
  41941f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419420:	push   esi
  419421:	ja     0x4193f3
  419423:	push   0xfffffff4
  419425:	ror    DWORD PTR [esi-0x61fdb009],0x96
  41942c:	jmp    0x525131bc
  419431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419432:	imul   eax,DWORD PTR [edx],0xf135f168
  419438:	jg     0x41941a
  41943a:	cdq    
  41943b:	test   DWORD PTR [eax],ebp
  41943d:	ret    0x287a
  419440:	inc    ecx
  419441:	sti    
  419442:	jbe    0x41941b
  419444:	adc    DWORD PTR [ecx+0x19],esp
  419447:	adc    ah,bl
  419449:	pop    ds
  41944a:	xchg   BYTE PTR [edi-0x7b],ah
  41944d:	sub    esi,DWORD PTR [edi-0xac310b1]
  419453:	stos   BYTE PTR es:[edi],al
  419454:	jmp    0x4193fb
  419456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419457:	xchg   ebx,eax
  419458:	stc    
  419459:	jo     0x4194d8
  41945b:	or     eax,0x61054ba3
  419460:	bound  ebp,QWORD PTR [ebp+0x5373f6d5]
  419466:	sbb    eax,0xe3041554
  41946b:	leave  
  41946c:	jl     0x419417
  41946e:	mov    bl,0xa3
  419470:	dec    esp
  419471:	ret    0x2879
  419474:	sbb    eax,0xcca958fc
  419479:	jmp    0x4194ca
  41947b:	cmp    edi,DWORD PTR [edx+0x1e]
  41947e:	cmp    al,0x6c
  419481:	adc    BYTE PTR [eax-0x10],dl
  419484:	cmp    al,0xa7
  419486:	(bad)  
  419487:	aas    
  419488:	xchg   esi,eax
  419489:	clc    
  41948a:	mov    esi,DWORD PTR ds:0x22bfc358
  419490:	sub    bl,BYTE PTR [ecx+0x110b3188]
  419496:	mov    ds:0xbfa977c3,eax
  41949b:	jge    0x4194cc
  41949d:	push   esi
  41949e:	jne    0x419507
  4194a0:	out    0x7,eax
  4194a2:	cmc    
  4194a3:	and    eax,0x33e7ab87
  4194a9:	scas   al,BYTE PTR es:[edi]
  4194aa:	(bad)  
  4194ab:	pop    ss
  4194ac:	dec    ecx
  4194ad:	pop    ds
  4194ae:	lods   eax,DWORD PTR ds:[esi]
  4194af:	test   BYTE PTR [esi+edi*1+0x12],ch
  4194b3:	ins    DWORD PTR es:[edi],dx
  4194b4:	dec    ecx
  4194b5:	or     BYTE PTR [esi+0xe8c5efa],cl
  4194bb:	es dec ebx
  4194bd:	sub    BYTE PTR [ebx],dl
  4194bf:	mov    al,0x4e
  4194c1:	or     dh,ah
  4194c3:	ret    
  4194c4:	adc    dl,BYTE PTR [ebx+ecx*1-0x62e3523f]
  4194cb:	mov    cl,0xe6
  4194cd:	adc    al,0xf
  4194cf:	das    
  4194d0:	fdiv   QWORD PTR [ebx+eax*2]
  4194d3:	push   cs
  4194d4:	lods   eax,DWORD PTR ds:[esi]
  4194d5:	xchg   esi,eax
  4194d6:	dec    esp
  4194d7:	mov    edi,0x2dbd78af
  4194dc:	data16 loopne 0x419505
  4194df:	pop    edx
  4194e0:	rcr    DWORD PTR [edi+0x396f899f],1
  4194e6:	js     0x419536
  4194e8:	std    
  4194e9:	test   eax,0xa7148daf
  4194ee:	test   BYTE PTR [eax+0x7f462371],bl
  4194f4:	cmp    edx,esi
  4194f6:	test   eax,0xa1243f24
  4194fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194fc:	(bad)  [edx-0x76]
  4194ff:	adc    esp,DWORD PTR [edi-0xd]
  419502:	sub    al,0x25
  419504:	out    dx,al
  419505:	pushf  
  419506:	mov    al,BYTE PTR [edi-0x35290ef]
  41950c:	push   eax
  41950d:	lahf   
  41950e:	dec    dl
  419510:	shl    ebp,cl
  419512:	jo     0x4194a2
  419514:	sbb    al,BYTE PTR [edi-0x1730ebb6]
  41951a:	in     al,0x2d
  41951c:	pop    bx
  41951e:	and    esp,ecx
  419520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419521:	shl    DWORD PTR [esi],1
  419523:	mov    ds:0x74643d82,al
  419528:	dec    edx
  419529:	jmp    0x41956c
  41952b:	es aaa 
  41952d:	out    dx,al
  41952e:	mov    edx,0x114bb263
  419533:	jae    0x419560
  419535:	sbb    ebp,ebx
  419537:	add    eax,0x42d32ce7
  41953c:	push   ebp
  41953d:	out    0xe9,al
  41953f:	pop    ds
  419540:	stc    
  419541:	into   
  419542:	aas    
  419543:	clc    
  419544:	fcom   QWORD PTR [edi]
  419546:	in     al,0xe9
  419548:	ja     0x419598
  41954a:	xor    bl,0xad
  41954d:	push   ds
  41954e:	adc    BYTE PTR [ebx+0x12],0xd9
  419552:	scas   al,BYTE PTR es:[edi]
  419553:	push   ss
  419554:	ins    BYTE PTR es:[edi],dx
  419555:	sbb    DWORD PTR [eax-0x2e],esi
  419558:	sub    al,0x1a
  41955a:	mov    ch,0xe3
  41955c:	sub    DWORD PTR [ebx+0x53f053b4],ebx
  419562:	xor    al,0x83
  419564:	xchg   ebx,eax
  419565:	ss jb  0x419532
  419568:	daa    
  419569:	outs   dx,DWORD PTR ds:[esi]
  41956a:	add    BYTE PTR [esi+0x29],cl
  41956d:	adc    edi,ebx
  41956f:	xchg   ecx,eax
  419570:	ins    BYTE PTR es:[edi],dx
  419571:	aas    
  419572:	xchg   esp,eax
  419573:	jns    0x4195e3
  419575:	pop    edi
  419576:	and    eax,0xa9a01ec1
  41957b:	dec    esi
  41957c:	test   al,0x3f
  41957e:	inc    ebx
  41957f:	cld    
  419580:	xor    esi,edi
  419582:	sahf   
  419583:	or     al,0x5b
  419585:	cmp    DWORD PTR [eax-0xc],edi
  419588:	mov    ecx,0x24b29c9d
  41958d:	xchg   BYTE PTR [edi-0x44ae4e62],al
  419593:	vpackssdw xmm6,xmm4,XMMWORD PTR [edi+0x50ede831]
  41959b:	sahf   
  41959c:	dec    esi
  41959d:	jp     0x4195e6
  41959f:	push   ebp
  4195a0:	lock and al,BYTE PTR [ebx+0x2e7969c]
  4195a7:	data16 jbe 0x419579
  4195aa:	iret   
  4195ab:	adc    DWORD PTR [ebp+0x6e621976],ebp
  4195b1:	fwait
  4195b2:	cmp    BYTE PTR [edi+0x302f69aa],cl
  4195b8:	pop    esp
  4195b9:	imul   edx,DWORD PTR ds:[eax],0x40
  4195bd:	push   esp
  4195be:	adc    dh,BYTE PTR [ecx]
  4195c0:	pop    ss
  4195c1:	sub    dh,ch
  4195c3:	sub    eax,0x148061c4
  4195c8:	scas   eax,DWORD PTR es:[edi]
  4195c9:	pop    ecx
  4195ca:	int    0x30
  4195cc:	xchg   ebx,eax
  4195cd:	rcl    DWORD PTR [edi],1
  4195cf:	add    BYTE PTR [edx],ah
  4195d1:	xor    DWORD PTR [ecx-0x547bf6ba],edx
  4195d7:	pusha  
  4195d8:	cmp    DWORD PTR [edi],edx
  4195da:	cwde   
  4195db:	(bad)  
  4195dc:	mov    ch,0x58
  4195de:	mov    ebp,0xcf76dd3b
  4195e3:	xor    al,0x4
  4195e5:	cld    
  4195e6:	adc    edi,ebx
  4195e8:	sub    cl,BYTE PTR [esi-0x22]
  4195eb:	add    DWORD PTR ds:0x7e9ba919,ecx
  4195f1:	nop
  4195f2:	xchg   DWORD PTR [ebx],edi
  4195f4:	leave  
  4195f5:	ret    
  4195f6:	pop    ecx
  4195f7:	xchg   ecx,eax
  4195f8:	test   al,0x6d
  4195fa:	and    al,0x56
  4195fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195fd:	in     eax,0x7f
  4195ff:	cmp    ch,dh
  419601:	jno    0x4195d5
  419603:	mov    bh,0x50
  419605:	xor    ebx,DWORD PTR [esp+eiz*4]
  419608:	inc    ebx
  419609:	test   al,0xe7
  41960b:	pop    edi
  41960c:	xor    BYTE PTR [ebp-0x755e3209],0x67
  419613:	inc    ebp
  419614:	test   esi,ebx
  419616:	push   esp
  419617:	repz call 0xc906:0xa9da390
  41961f:	cs inc eax
  419621:	int    0x57
  419623:	mov    cs,WORD PTR [edi]
  419625:	inc    esp
  419626:	sar    bl,0x84
  419629:	imul   edi,DWORD PTR [ebx],0xed7fd7ac
  41962f:	arpl   WORD PTR [ecx],cx
  419631:	xchg   DWORD PTR [ebx-0x75],esi
  419634:	mov    esi,0x5c470627
  419639:	dec    edi
  41963a:	fsub   QWORD PTR [ebx+0xbe7b49a]
  419640:	lds    edx,FWORD PTR [edx-0x1bfd0a5b]
  419646:	test   eax,0x9434184a
  41964b:	mov    al,0x3b
  41964d:	pop    es
  41964e:	mov    BYTE PTR ds:[edi-0x567e120c],al
  419655:	jl     0x419664
  419657:	mov    ch,BYTE PTR [edx]
  419659:	scas   al,BYTE PTR es:[edi]
  41965a:	out    0x90,al
  41965c:	mov    edx,0xcc470a73
  419661:	fisttp DWORD PTR [ebx]
  419663:	repnz dec ecx
  419665:	mov    cl,0xa4
  419667:	test   BYTE PTR [eax],bh
  419669:	cld    
  41966a:	inc    edi
  41966b:	or     ebx,DWORD PTR [ebx]
  41966d:	fmul   QWORD PTR [edi+0x6f]
  419670:	mov    gs,WORD PTR [ebx-0x26]
  419673:	cmp    ah,BYTE PTR [ecx+0x7a]
  419676:	data16 lods al,BYTE PTR ds:[esi]
  419678:	fs je  0x4196bf
  41967b:	xlat   BYTE PTR ds:[ebx]
  41967c:	sbb    DWORD PTR [edx-0x653ec345],0xa0038544
  419686:	mov    al,0xe0
  419688:	add    dl,BYTE PTR [esi+0x7ca8cab8]
  41968e:	mov    ch,0xbe
  419690:	pop    esi
  419691:	dec    esp
  419692:	and    BYTE PTR [eax],ah
  419694:	les    ebp,FWORD PTR [edi+0x30]
  419697:	dec    eax
  419698:	jo     0x41963e
  41969a:	cwde   
  41969b:	mov    eax,ds:0x33c0de78
  4196a0:	fcmovu st,st(5)
  4196a2:	mov    edi,0x3e795fd8
  4196a7:	xor    eax,0xda869b54
  4196ac:	hlt    
  4196ad:	inc    esp
  4196ae:	int    0x6b
  4196b0:	dec    esp
  4196b1:	out    0x34,al
  4196b3:	pop    ebx
  4196b4:	(bad)  
  4196b5:	xchg   ecx,eax
  4196b6:	mov    DWORD PTR [ebx-0x62115815],edx
  4196bc:	add    DWORD PTR [eax+edx*1],ebx
  4196bf:	hlt    
  4196c0:	adc    DWORD PTR [esi],ecx
  4196c2:	out    0x98,al
  4196c4:	clc    
  4196c5:	mov    es,WORD PTR [eax+edx*8+0x3ba33372]
  4196cc:	fwait
  4196cd:	push   ebx
  4196ce:	out    0x3c,al
  4196d0:	push   esi
  4196d1:	xor    eax,0x2b016e8f
  4196d6:	shl    BYTE PTR [eax+ebx*4],1
  4196d9:	jnp    0x41968c
  4196db:	loopne 0x4196a2
  4196dd:	fild   QWORD PTR [edx]
  4196df:	adc    DWORD PTR [ebx],0x52
  4196e2:	cmp    edi,ecx
  4196e4:	dec    DWORD PTR [ebx-0x646905cd]
  4196ea:	mov    dl,BYTE PTR [esi+0x74]
  4196ed:	lds    edx,FWORD PTR [edx]
  4196ef:	test   eax,0x81aec91a
  4196f4:	fadd   st(1),st
  4196f6:	adc    eax,0xbf8f68ba
  4196fb:	sti    
  4196fc:	or     al,BYTE PTR [esi-0x66c6cb9f]
  419702:	sbb    ebx,0xffffffd0
  419705:	inc    eax
  419706:	hlt    
  419707:	xor    DWORD PTR [edi+0x1a],0xcd4f74ac
  41970e:	mov    dh,0x9c
  419710:	or     bh,BYTE PTR [esi-0x59]
  419713:	push   eax
  419714:	pop    es
  419715:	jae    0x4196f8
  419717:	sub    al,0x90
  419719:	lock aad 0x52
  41971c:	mov    edi,0xe63b053e
  419721:	retf   
  419722:	(bad)  ds:0xc5d275ba
  419728:	lods   eax,DWORD PTR ds:[esi]
  419729:	xor    al,0xd6
  41972b:	ret    0x6116
  41972e:	sbb    BYTE PTR [ebx-0x741e41cb],0xda
  419735:	push   ebx
  419736:	ins    BYTE PTR es:[di],dx
  419738:	ficomp DWORD PTR ds:0xf8bf1fe4
  41973e:	out    dx,al
  41973f:	ret    0x10c8
  419742:	jecxz  0x41971e
  419744:	lea    esi,[eax]
  419746:	jge    0x419782
  419748:	xor    al,BYTE PTR [ebx]
  41974a:	push   eax
  41974b:	mov    esp,0x26a2c66
  419750:	cmc    
  419751:	add    eax,0xb9b51402
  419756:	xor    eax,0xcc3fc058
  41975b:	mov    ecx,DWORD PTR [edi+0x17]
  41975e:	fmul   DWORD PTR [edi]
  419760:	(bad)  
  419761:	stos   BYTE PTR es:[edi],al
  419762:	jnp    0x419728
  419764:	dec    ebp
  419765:	cmp    BYTE PTR [eax*4+0x276cfc57],ch
  41976c:	ja     0x419764
  41976e:	ja     0x7fe0d4a5
  419774:	outs   dx,DWORD PTR ds:[esi]
  419775:	pop    edx
  419776:	fiadd  WORD PTR [edi]
  419778:	loop   0x4197f2
  41977a:	cld    
  41977b:	jecxz  0x419730
  41977d:	sbb    edi,DWORD PTR [ecx-0x6f]
  419780:	ins    DWORD PTR es:[edi],dx
  419781:	mov    ebx,0xe5222788
  419786:	xchg   ebx,eax
  419787:	dec    ebx
  419788:	sbb    BYTE PTR [eax-0x4e22f75e],cl
  41978e:	popa   
  41978f:	xchg   edx,eax
  419790:	nop
  419791:	iret   
  419792:	lods   al,BYTE PTR ds:[esi]
  419793:	lds    edi,FWORD PTR [ebp+edi*8+0x656eab55]
  41979a:	mov    esp,0x43ba7740
  41979f:	mov    al,0xd7
  4197a1:	xor    BYTE PTR [edi],dl
  4197a3:	aam    0x5c
  4197a5:	mov    dh,BYTE PTR [bp+di]
  4197a8:	cmp    eax,0xb75db76d
  4197ad:	pop    edx
  4197ae:	push   ds
  4197af:	or     BYTE PTR [eax-0x5c],dl
  4197b2:	test   al,0x2c
  4197b4:	sar    DWORD PTR [esi+0x2a],0x2e
  4197b8:	leave  
  4197b9:	not    DWORD PTR [edi+0x3f]
  4197bc:	inc    eax
  4197bd:	add    eax,0xdc6df870
  4197c2:	js     0x419796
  4197c4:	mov    ds:0x6f6dc43d,al
  4197c9:	fs xor eax,0x22e564f1
  4197cf:	sub    edi,eax
  4197d1:	push   cs
  4197d2:	jg     0x4197a7
  4197d4:	test   eax,0x2466c312
  4197d9:	and    ch,BYTE PTR [edx]
  4197db:	dec    DWORD PTR [edx-0x441f739e]
  4197e1:	scas   eax,DWORD PTR es:[edi]
  4197e2:	loopne 0x419824
  4197e4:	pop    ds
  4197e5:	repnz shr DWORD PTR ds:[ebp-0x220c7b9c],1
  4197ed:	fistp  QWORD PTR [eax+0x6d]
  4197f0:	in     al,dx
  4197f1:	jno    0x41978b
  4197f3:	aad    0x8e
  4197f5:	pop    ss
  4197f6:	cli    
  4197f7:	lds    ecx,FWORD PTR [ecx]
  4197f9:	pop    es
  4197fa:	mov    edx,0x5fe8a526
  4197ff:	add    bl,BYTE PTR [ecx+ebx*2+0x54cc62b8]
  419806:	xchg   DWORD PTR [eax+0x4bf4ef0a],esp
  41980c:	je     0x4197eb
  41980e:	mov    ebx,0x5d9d92cb
  419813:	(bad)  
  419814:	retf   0x7b8c
  419817:	sbb    al,0x51
  419819:	pop    ecx
  41981a:	popf   
  41981b:	adc    dl,ah
  41981d:	adc    al,0xae
  41981f:	mov    esp,0x1716aabb
  419824:	pop    edi
  419825:	scas   al,BYTE PTR es:[edi]
  419826:	mov    bl,BYTE PTR [edi+0x2c]
  419829:	into   
  41982a:	dec    esi
  41982b:	(bad)  
  41982c:	push   edi
  41982d:	arpl   WORD PTR [esi+ebp*4],cx
  419830:	cs sti 
  419832:	sar    BYTE PTR [ebp+0x21],0xa2
  419836:	dec    edi
  419837:	jne    0x419889
  419839:	js     0x419883
  41983b:	nop
  41983c:	pop    ebp
  41983d:	aam    0x9e
  41983f:	push   esi
  419840:	ror    BYTE PTR [edx],0xb6
  419843:	adc    al,0x44
  419845:	sub    esi,ebx
  419847:	xchg   BYTE PTR ds:0x50baae55,cl
  41984d:	ret    0x57ae
  419850:	xor    al,0x85
  419852:	mov    ebp,0x45fec292
  419857:	icebp  
  419858:	lea    ebp,[eax]
  41985a:	fwait
  41985b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41985c:	jg     0x419849
  41985e:	add    eax,0xc247b1ba
  419863:	scas   al,BYTE PTR es:[edi]
  419864:	jge    0x4198d3
  419866:	cmp    al,0xd3
  419868:	dec    ebp
  419869:	xchg   ebx,eax
  41986a:	test   al,0x8e
  41986c:	jge    0x4198a7
  41986e:	or     BYTE PTR ds:0x568a0f08,0x1
  419875:	inc    ebp
  419876:	out    dx,al
  419877:	data16 jbe 0x419834
  41987a:	xchg   edx,eax
  41987b:	add    al,0xbd
  41987d:	cmp    eax,0x970b88e2
  419882:	scas   al,BYTE PTR es:[edi]
  419883:	and    eax,0x8ca35f36
  419888:	lods   eax,DWORD PTR ds:[esi]
  419889:	cli    
  41988a:	mov    al,ds:0x657b152e
  41988f:	jle    0x41982f
  419891:	mov    eax,0x722a3660
  419896:	es pop ecx
  419898:	cli    
  419899:	xchg   ebp,eax
  41989a:	loop   0x419884
  41989c:	dec    ecx
  41989d:	imul   ebx,ebx,0xcdcba73d
  4198a3:	push   cs
  4198a4:	enter  0x2cd6,0x50
  4198a8:	adc    eax,0x7eb570bb
  4198ad:	mov    dh,0x3
  4198af:	fisubr WORD PTR [esi]
  4198b1:	push   esp
  4198b2:	rcr    DWORD PTR [ecx+0x6d75c116],1
  4198b8:	adc    ebx,DWORD PTR [esi+esi*8-0x5e]
  4198bc:	jmp    0xf1be5613
  4198c1:	jecxz  0x4198c7
  4198c3:	mov    dh,0x3
  4198c5:	push   ebp
  4198c6:	push   ds
  4198c7:	es popa 
  4198c9:	adc    eax,0xbd5046ef
  4198ce:	add    eax,0x8ba507e7
  4198d3:	fdivr  st(6),st
  4198d5:	xor    ebx,DWORD PTR [edi-0x30]
  4198d8:	mov    eax,ds:0xade6a0f3
  4198dd:	retf   0xb489
  4198e0:	push   0x82f6abef
  4198e5:	add    eax,0x33c39c5c
  4198ea:	ds mov esp,0xd837e070
  4198f0:	sti    
  4198f1:	aad    0xcc
  4198f3:	cmp    DWORD PTR [edx+esi*4+0x13a51387],0x3fa9a884
  4198fe:	cs retfw 0x6762
  419903:	push   eax
  419904:	mov    ds:0xcaa17ccc,eax
  419909:	cmp    esp,ecx
  41990b:	adc    al,0x18
  41990d:	add    al,0x67
  41990f:	dec    ebx
  419910:	stos   DWORD PTR es:[edi],eax
  419911:	arpl   WORD PTR [ecx+eax*4+0x2cc82782],cx
  419918:	jb     0x419997
  41991a:	push   eax
  41991b:	das    
  41991c:	out    dx,eax
  41991d:	adc    BYTE PTR [edx],dh
  41991f:	(bad)  [esi+0x322e6b03]
  419925:	sub    eax,0xaad35037
  41992a:	shl    BYTE PTR [edx-0x700ba339],0x41
  419931:	mov    ebx,0x1e6ffc0f
  419936:	xchg   DWORD PTR [edx+0x18],edx
  419939:	mov    edi,0xd3c80034
  41993e:	ss dec esi
  419940:	out    0x4e,eax
  419942:	jl     0x4198fe
  419944:	jno    0x419931
  419946:	dec    ecx
  419947:	cmp    BYTE PTR [ecx-0x134081a1],dl
  41994d:	and    ecx,edx
  41994f:	mov    WORD PTR [edi],es
  419951:	xor    cl,ch
  419953:	mov    ebp,0x7104647f
  419958:	or     BYTE PTR [esi+esi*8],dl
  41995b:	xor    DWORD PTR [ecx],0x22e72adc
  419961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419962:	pop    eax
  419963:	cmp    esi,esi
  419965:	test   BYTE PTR [esi+ebx*1],dh
  419968:	sbb    ecx,DWORD PTR [eax-0x2578e61d]
  41996e:	arpl   WORD PTR [ecx],ax
  419970:	xchg   ecx,eax
  419971:	imul   esp,ecx,0x1b
  419974:	loop   0x4199f1
  419976:	cmp    al,BYTE PTR [ecx]
  419978:	shr    BYTE PTR [ebp+0x396ce68e],0xb6
  41997f:	aam    0x28
  419981:	push   edi
  419982:	jno    0x41993f
  419984:	jo     0x4199e4
  419986:	sbb    dl,bl
  419988:	pop    edx
  419989:	leave  
  41998a:	clc    
  41998b:	cmp    esp,DWORD PTR [edx]
  41998d:	fdivr  DWORD PTR [ecx+0x1c]
  419990:	loop   0x419a09
  419992:	mov    BYTE PTR [ecx-0x1ebf0104],0x32
  419999:	sub    DWORD PTR [edi+0x23],ebx
  41999c:	fisttp WORD PTR [ebx+0x74]
  41999f:	push   ebx
  4199a0:	loope  0x419969
  4199a2:	sub    esi,edx
  4199a4:	sbb    dl,BYTE PTR [eax-0x7]
  4199a7:	xchg   ebx,eax
  4199a8:	push   es
  4199a9:	rcr    BYTE PTR [ebx-0x3846b07e],cl
  4199af:	shr    DWORD PTR [edx-0x34],1
  4199b2:	out    0xa6,al
  4199b4:	shr    DWORD PTR [eax],1
  4199b6:	mov    al,0x6f
  4199b8:	dec    edx
  4199b9:	jne    0x4199b2
  4199bb:	fstp   TBYTE PTR [edi]
  4199bd:	inc    esp
  4199be:	arpl   WORD PTR [esi-0x346a8400],cx
  4199c4:	cmp    BYTE PTR ds:0xdadf9f2e,bl
  4199ca:	sbb    BYTE PTR [ebp+0x52],ah
  4199cd:	mov    ebp,0x37bbdc2c
  4199d2:	pusha  
  4199d3:	sbb    al,0xa3
  4199d5:	lds    ebx,FWORD PTR [edi+0x428e4b16]
  4199db:	push   0x51
  4199dd:	sbb    edx,0x26
  4199e0:	mov    bl,0xec
  4199e2:	rcl    DWORD PTR [ebx-0x62],cl
  4199e5:	adc    eax,0x4d60b99d
  4199ea:	pop    ss
  4199eb:	mov    bl,0xb
  4199ed:	jae    0x41999a
  4199ef:	aam    0xbb
  4199f1:	pop    ebp
  4199f2:	and    BYTE PTR [ebx+esi*4],0x56
  4199f6:	(bad)  
  4199f7:	out    dx,eax
  4199f8:	inc    esi
  4199f9:	ja     0x4199fc
  4199fb:	daa    
  4199fc:	and    esi,DWORD PTR [ecx]
  4199fe:	out    0x3f,al
  419a00:	and    edx,DWORD PTR [esi+eiz*4+0x53cbd170]
  419a07:	call   0x41f9:0xe328e690
  419a0e:	(bad)  
  419a0f:	fsubr  DWORD PTR ds:0xde0f514c
  419a15:	loopne 0x4199c1
  419a17:	fisub  WORD PTR [edx+0x27c6827e]
  419a1d:	and    BYTE PTR [eax+0x56c12779],dh
  419a23:	cmp    BYTE PTR [esi+eiz*8],dl
  419a26:	dec    ecx
  419a27:	fcomp  DWORD PTR [ebp+ebx*4+0x3b3bb8c4]
  419a2e:	mov    al,ds:0x3b0c6325
  419a33:	sub    eax,0xc90b20a5
  419a38:	sti    
  419a39:	pop    ecx
  419a3a:	pop    es
  419a3b:	(bad)  
  419a3c:	cmc    
  419a3d:	add    edx,DWORD PTR ds:0x55ad16c6
  419a43:	test   al,0x32
  419a45:	aam    0xb8
  419a47:	arpl   WORD PTR [edi+0x6f],cx
  419a4a:	and    ah,cl
  419a4c:	test   ch,bl
  419a4e:	cmp    al,0x3
  419a50:	repz inc edx
  419a52:	not    DWORD PTR [edi-0x4fd3ce1f]
  419a58:	xor    bl,bh
  419a5a:	jns    0x419a83
  419a5c:	and    al,0xd3
  419a5e:	xchg   ebp,eax
  419a5f:	xor    BYTE PTR [bp+di],bh
  419a62:	sbb    DWORD PTR [eax-0x46],esi
  419a65:	sahf   
  419a66:	mov    dl,0x8a
  419a68:	iret   
  419a69:	out    0xcd,al
  419a6b:	mov    al,ds:0x1c6eac74
  419a70:	cmp    bh,dl
  419a72:	mov    ecx,0x2cc170bf
  419a77:	mov    edx,0xa9f8f8fb
  419a7c:	or     BYTE PTR [edi+0x14],al
  419a7f:	mov    ch,0x70
  419a81:	jae    0x419a9a
  419a83:	mov    ds:0x66751c89,al
  419a88:	pop    bx
  419a8a:	pop    ebx
  419a8b:	inc    edi
  419a8c:	jle    0x419af2
  419a8e:	add    edx,esi
  419a90:	mov    ch,0x20
  419a92:	jl     0x419b06
  419a94:	jecxz  0x419aba
  419a96:	rol    BYTE PTR [esi+0x676fa2ce],0xef
  419a9d:	mov    al,0x2
  419a9f:	adc    al,0xb
  419aa1:	jl     0x419a31
  419aa3:	inc    edx
  419aa4:	cdq    
  419aa5:	inc    eax
  419aa6:	add    esi,DWORD PTR ds:0x4d7451ff
  419aac:	push   edx
  419aad:	jo     0x419a41
  419aaf:	or     eax,0xa7bbdbe0
  419ab4:	lods   eax,DWORD PTR ds:[esi]
  419ab5:	mov    bh,0x14
  419ab7:	aas    
  419ab8:	inc    eax
  419ab9:	rcr    BYTE PTR [esp+ebx*4+0x69e5ff5],0x6d
  419ac1:	cs inc ecx
  419ac3:	sub    BYTE PTR ds:0x427a0b23,cl
  419ac9:	aaa    
  419aca:	jo     0x419b45
  419acc:	xchg   edi,eax
  419acd:	clc    
  419ace:	push   cs
  419acf:	ret    0x74cc
  419ad2:	xlat   BYTE PTR ds:[ebx]
  419ad3:	stos   BYTE PTR es:[edi],al
  419ad4:	push   edi
  419ad5:	adc    eax,0x1eaf1d85
  419ada:	stc    
  419adb:	and    cl,ch
  419add:	xor    ch,dl
  419adf:	loopne 0x419ae0
  419ae1:	ror    BYTE PTR [esi-0x30],0x92
  419ae5:	leave  
  419ae6:	mov    ah,0x69
  419ae8:	scas   al,BYTE PTR es:[edi]
  419ae9:	add    ebp,DWORD PTR [edi+0x5d]
  419aec:	jns    0x419b56
  419aee:	shr    DWORD PTR [ebx-0x3b45cd86],cl
  419af4:	or     al,0x68
  419af6:	inc    ebx
  419af7:	push   0x61
  419af9:	xchg   esi,eax
  419afa:	ret    
  419afb:	mov    al,ds:0xb7fe4556
  419b00:	dec    edi
  419b01:	outs   dx,BYTE PTR ds:[esi]
  419b02:	mov    edx,0x4ac6436f
  419b07:	aaa    
  419b08:	add    bl,BYTE PTR ds:0xf913c0f1
  419b0e:	push   ebp
  419b0f:	mov    ecx,0xca92fe82
  419b14:	push   ebp
  419b15:	adc    DWORD PTR [esi-0x3bc4064e],ebp
  419b1b:	pushf  
  419b1c:	das    
  419b1d:	iret   
  419b1e:	xor    al,0x61
  419b20:	pop    ss
  419b21:	pop    ds
  419b22:	add    BYTE PTR ds:0x7e9ecb75,0xe7
  419b29:	cmp    bh,BYTE PTR [edx]
  419b2b:	imul   esi,esp,0xfb808652
  419b31:	in     al,0x5
  419b33:	test   eax,0xf2e1f13b
  419b38:	mov    esi,0x91942dc7
  419b3d:	loopne 0x419b3e
  419b3f:	jb     0x419b15
  419b41:	and    BYTE PTR [edx+0x31],ch
  419b44:	rcl    BYTE PTR [esi-0x52],cl
  419b47:	inc    ebx
  419b48:	test   al,0x4a
  419b4a:	xor    cl,bl
  419b4c:	ins    DWORD PTR es:[edi],dx
  419b4d:	lea    edi,[ecx]
  419b4f:	std    
  419b50:	push   esp
  419b51:	xchg   cl,ch
  419b53:	mov    esi,0x7ea1cd33
  419b58:	add    BYTE PTR [ebx+0x7c6e248a],dh
  419b5e:	ja     0x419b53
  419b60:	inc    edi
  419b61:	add    BYTE PTR [edx],0xae
  419b64:	sub    ebx,DWORD PTR gs:[edx-0x818164b]
  419b6b:	push   esi
  419b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b6d:	add    ecx,ecx
  419b6f:	stc    
  419b70:	nop
  419b71:	stos   DWORD PTR es:[edi],eax
  419b72:	and    al,BYTE PTR [ebx+0x18]
  419b75:	xchg   BYTE PTR [esi+0x2a2b1048],al
  419b7b:	and    DWORD PTR [edx],edi
  419b7d:	inc    ebx
  419b7e:	jbe    0x419b46
  419b80:	dec    esp
  419b81:	nop
  419b82:	dec    ecx
  419b83:	rcr    cl,cl
  419b85:	mov    esp,0xf44f93f2
  419b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b8b:	leave  
  419b8c:	push   esp
  419b8d:	push   ss
  419b8e:	fs in  eax,dx
  419b90:	add    eax,0x7a43bf7a
  419b95:	and    DWORD PTR [ecx-0x2b240331],ebp
  419b9b:	addr16 sahf 
  419b9d:	cld    
  419b9e:	sahf   
  419b9f:	frstor [ebx]
  419ba1:	or     ebp,DWORD PTR [edi-0x6badf5f8]
  419ba7:	ret    0x7a9
  419baa:	adc    ch,al
  419bac:	int3   
  419bad:	icebp  
  419bae:	mov    bh,0x53
  419bb0:	rol    BYTE PTR [edx-0x7e],1
  419bb3:	iret   
  419bb4:	mov    DWORD PTR [ebx-0x2ad64a8],ebx
  419bba:	imul   ebx,DWORD PTR [ebx+0x3a],0xdcbd544d
  419bc1:	lock mov WORD PTR [edx],cs
  419bc4:	push   es
  419bc5:	pop    ecx
  419bc6:	int    0xff
  419bc8:	sub    DWORD PTR [edi+ebx*4-0x62],0x66
  419bcd:	(bad)  [edx-0x7aa396a5]
  419bd3:	jno    0x419c23
  419bd5:	mov    BYTE PTR [ebp+0x13fd39d5],dl
  419bdb:	jmp    0xdc897150
  419be0:	jb     0x419b86
  419be2:	addr16 ja 0x419be2
  419be5:	les    edx,FWORD PTR [ecx]
  419be7:	int3   
  419be8:	ins    BYTE PTR es:[edi],dx
  419be9:	rcr    DWORD PTR [edx-0x41],cl
  419bec:	imul   edx,DWORD PTR [edx-0x2aac6a92],0xfffffffe
  419bf3:	retf   0x9403
  419bf6:	dec    DWORD PTR [edi]
  419bf8:	xor    cl,dh
  419bfa:	and    BYTE PTR [edx+0x1baa1297],ch
  419c00:	cmp    BYTE PTR [ebx],cl
  419c02:	jmp    0xcd73:0xeee2c21e
  419c09:	imul   esp,ebx,0x56533b04
  419c0f:	ds push ss
  419c11:	loop   0x419c0f
  419c13:	pop    ecx
  419c14:	pop    ss
  419c15:	adc    bh,0x6d
  419c18:	scas   eax,DWORD PTR es:[edi]
  419c19:	or     bl,BYTE PTR ds:0xc2151442
  419c1f:	mov    edx,0xd877969e
  419c24:	shl    edi,cl
  419c26:	(bad)  
  419c27:	jo     0x419bec
  419c29:	lds    edi,FWORD PTR ds:0xccc40061
  419c2f:	xchg   edx,eax
  419c30:	dec    esi
  419c31:	sbb    esp,eax
  419c33:	add    DWORD PTR [ecx+0x23],eax
  419c36:	imul   eax,esp,0xffffffaf
  419c39:	add    edx,ecx
  419c3b:	ds loop 0x419c41
  419c3e:	loope  0x419cbe
  419c40:	dec    edi
  419c41:	dec    ebp
  419c42:	inc    ebp
  419c43:	stos   BYTE PTR es:[edi],al
  419c44:	mov    ds:0x7d47639b,eax
  419c49:	xor    BYTE PTR [esi+0x40],cl
  419c4c:	or     ah,ah
  419c4e:	adc    BYTE PTR [esi-0x6],dh
  419c51:	pop    esi
  419c52:	out    0x32,al
  419c54:	push   cs
  419c55:	mov    ds:0x75214a9,al
  419c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c5b:	test   al,0x4c
  419c5d:	rol    DWORD PTR [eax],0xaf
  419c60:	xchg   ebx,eax
  419c61:	jp     0x419c58
  419c63:	scas   al,BYTE PTR es:[edi]
  419c64:	jg     0x419c69
  419c66:	or     bl,BYTE PTR [esi]
  419c68:	fldenv [eax-0x70]
  419c6b:	loopne 0x419cc0
  419c6d:	aaa    
  419c6e:	(bad)  
  419c6f:	das    
  419c70:	dec    ebp
  419c71:	rcl    DWORD PTR [ebp-0x6b],0x9c
  419c75:	inc    esp
  419c76:	inc    esp
  419c78:	xor    BYTE PTR [ebx],0x87
  419c7b:	and    al,0x96
  419c7d:	fnstsw WORD PTR [esi+0x783bac06]
  419c83:	hlt    
  419c84:	xchg   edx,eax
  419c85:	fidiv  WORD PTR [ebp-0x12948922]
  419c8b:	outs   dx,BYTE PTR ds:[esi]
  419c8c:	inc    esp
  419c8d:	sahf   
  419c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c8f:	dec    eax
  419c90:	mov    ebx,0x1b8da144
  419c95:	push   es
  419c96:	push   0x109ad5f
  419c9b:	das    
  419c9c:	sub    al,0xf0
  419c9e:	pop    ebx
  419c9f:	xor    dh,BYTE PTR [edx+0x6d]
  419ca2:	(bad)  
  419ca3:	pop    eax
  419ca4:	pop    ss
  419ca5:	aad    0x7
  419ca7:	(bad)  
  419ca8:	push   0x1e31023b
  419cad:	call   0x7a42:0x75ba719e
  419cb4:	dec    esi
  419cb5:	inc    ebp
  419cb6:	push   ss
  419cb7:	test   BYTE PTR [edi-0x44],0x90
  419cbb:	test   al,0xb6
  419cbd:	xchg   ebp,eax
  419cbe:	inc    ebx
  419cbf:	and    eax,DWORD PTR [ebx+0x57]
  419cc2:	retf   
  419cc3:	push   cs
  419cc4:	mov    esi,DWORD PTR [esi-0x14]
  419cc7:	int3   
  419cc8:	leave  
  419cc9:	xchg   BYTE PTR [ecx],bh
  419ccb:	pusha  
  419ccc:	push   cs
  419ccd:	cld    
  419cce:	xor    eax,0x955a8c08
  419cd3:	rcr    DWORD PTR [esi+eiz*1+0x29b54f0c],cl
  419cda:	inc    esi
  419cdb:	add    al,0xf0
  419cdd:	and    dh,cl
  419cdf:	cmp    BYTE PTR [esi+ebp*8+0x24bdc7c7],ah
  419ce6:	idiv   edi
  419ce8:	test   DWORD PTR cs:[edi-0x7876708f],esi
  419cef:	adc    al,0xab
  419cf1:	(bad)  
  419cf2:	sti    
  419cf3:	push   esp
  419cf4:	daa    
  419cf5:	mov    ch,0xc6
  419cf7:	inc    esi
  419cf8:	cmp    eax,0xcf4cc7b3
  419cfd:	inc    esp
  419cfe:	out    0x9d,al
  419d00:	sub    DWORD PTR [eax+0x4dd65f3e],esi
  419d06:	xor    ebx,ebx
  419d08:	in     al,0xcb
  419d0a:	jns    0x419d41
  419d0c:	cmp    bl,BYTE PTR [eax]
  419d0e:	adc    bl,BYTE PTR [edx]
  419d10:	xlat   BYTE PTR ds:[ebx]
  419d11:	or     eax,0x7672ec39
  419d16:	lds    ebp,FWORD PTR [esi-0x8]
  419d19:	mov    ah,0x20
  419d1b:	aaa    
  419d1c:	test   al,0xf7
  419d1e:	jne    0x419d10
  419d20:	call   0xb594:0xacf85948
  419d27:	mov    cl,0x66
  419d29:	aad    0x9c
  419d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d2c:	stc    
  419d2d:	mov    ah,0xf7
  419d2f:	loop   0x419cbb
  419d31:	test   eax,0xdb078c4
  419d36:	mov    bl,0x13
  419d38:	xor    DWORD PTR [edi-0x21cbb2df],0x36
  419d3f:	in     al,0xcc
  419d41:	out    dx,eax
  419d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d43:	mov    ah,0xfe
  419d45:	xchg   ebp,eax
  419d46:	in     al,dx
  419d47:	enter  0x2bbe,0x3a
  419d4b:	repnz out dx,al
  419d4d:	es mov eax,0x1f897d2e
  419d53:	out    0x5c,al
  419d55:	push   cs
  419d56:	cdq    
  419d57:	sbb    eax,0xd8636a21
  419d5c:	xor    eax,edx
  419d5e:	inc    ebx
  419d5f:	lock push es
  419d61:	out    0x36,eax
  419d63:	mov    al,BYTE PTR [eax+edx*8+0x3a]
  419d67:	add    al,dh
  419d69:	mov    ecx,0x17add339
  419d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d6f:	xor    dh,cl
  419d71:	adc    BYTE PTR [edi+ebx*8+0x13162fae],0x1f
  419d79:	and    dh,0xaa
  419d7c:	cmp    esp,DWORD PTR [ebx]
  419d7e:	aas    
  419d7f:	lock test eax,0x3a76456e
  419d85:	out    0xc5,eax
  419d87:	dec    edx
  419d88:	push   ss
  419d89:	sub    esi,eax
  419d8b:	sbb    ah,dl
  419d8d:	fld    DWORD PTR [ebx+eiz*1+0x56]
  419d91:	outs   dx,BYTE PTR ds:[esi]
  419d92:	jb     0x419d78
  419d94:	or     cl,ah
  419d96:	clc    
  419d97:	out    0xbe,al
  419d99:	push   esi
  419d9a:	jmp    0x419d96
  419d9c:	loope  0x419dc9
  419d9e:	call   edx
  419da0:	pop    edx
  419da1:	xchg   ebp,eax
  419da2:	inc    ebx
  419da3:	jp     0x419dfb
  419da5:	xchg   edi,eax
  419da6:	pop    ecx
  419da7:	adc    esp,DWORD PTR gs:[eax+0x4af63a7e]
  419dae:	or     al,0xa3
  419db0:	popa   
  419db1:	xor    eax,esp
  419db3:	sar    DWORD PTR [ecx+0xa],1
  419db6:	push   esi
  419db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db8:	test   BYTE PTR [ecx],0x3d
  419dbb:	stos   DWORD PTR es:[edi],eax
  419dbc:	push   ebp
  419dbd:	cmp    bh,BYTE PTR [edx]
  419dbf:	push   0x359f7305
  419dc4:	dec    ebx
  419dc5:	in     eax,0x7d
  419dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc8:	jecxz  0x419de6
  419dca:	aas    
  419dcb:	xchg   esi,eax
  419dcc:	rcl    DWORD PTR [edx+0x1f385536],cl
  419dd2:	fwait
  419dd3:	out    0x72,al
  419dd5:	adc    DWORD PTR [ebx+0x3e],0xffffffda
  419dd9:	sbb    bl,BYTE PTR [edi]
  419ddb:	mov    eax,0xf3c6e4a5
  419de0:	aam    0x3b
  419de2:	int    0xee
  419de4:	cmc    
  419de5:	repz pusha 
  419de7:	and    al,0x65
  419de9:	shl    DWORD PTR [ebp+0x62],1
  419dec:	jg     0x419da8
  419dee:	bound  ebp,QWORD PTR [ebp+0x782a2145]
  419df4:	mov    esp,DWORD PTR [ecx]
  419df6:	pusha  
  419df7:	adc    eax,0x636b198f
  419dfc:	inc    ebp
  419dfd:	push   esi
  419dfe:	or     BYTE PTR [esi-0x453e0e1b],ch
  419e04:	sbb    BYTE PTR [ecx+0x3f29025c],0x58
  419e0b:	mov    dh,0xab
  419e0d:	les    eax,FWORD PTR [esi]
  419e0f:	dec    ecx
  419e10:	lods   al,BYTE PTR ds:[esi]
  419e11:	out    dx,eax
  419e12:	dec    esi
  419e13:	inc    esi
  419e14:	cmp    eax,0x27b83606
  419e19:	xor    eax,0x3d54d0d7
  419e1e:	aas    
  419e1f:	ins    DWORD PTR es:[edi],dx
  419e20:	(bad)
  419e23:	xor    esp,DWORD PTR [ebx]
  419e25:	ret    
  419e26:	cdq    
  419e27:	inc    ecx
  419e28:	call   0x1472:0x46bced79
  419e2f:	ins    BYTE PTR es:[edi],dx
  419e30:	outs   dx,BYTE PTR ds:[si]
  419e32:	cwde   
  419e33:	cwde   
  419e34:	add    al,bl
  419e36:	xchg   ah,dl
  419e38:	push   0xffffffd5
  419e3a:	aaa    
  419e3b:	adc    BYTE PTR [edx-0x5d],0x78
  419e3f:	jb     0x419e33
  419e41:	neg    DWORD PTR [edi-0x377fe6f9]
  419e47:	mov    WORD PTR [ecx],?
  419e49:	or     BYTE PTR [edx+0x11625b91],ch
  419e4f:	mov    ah,0xa4
  419e51:	adc    DWORD PTR [eax+0x22],ebx
  419e54:	js     0x419ea0
  419e56:	mul    esi
  419e58:	jb     0x419e27
  419e5a:	mov    ebp,edi
  419e5c:	dec    edx
  419e5d:	and    al,0x8f
  419e5f:	add    edx,DWORD PTR [ebx+0x720c4904]
  419e65:	mov    edi,0xa8908827
  419e6a:	ds sbb al,0xc7
  419e6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e6e:	mov    esp,0x9fd72c37
  419e73:	jle    0x419e74
  419e75:	cdq    
  419e76:	adc    ah,bl
  419e78:	test   BYTE PTR [ecx-0x953c13b],dh
  419e7e:	xchg   DWORD PTR [esi],ebx
  419e80:	xchg   edi,eax
  419e81:	dec    edx
  419e82:	(bad)  
  419e83:	sti    
  419e84:	jno    0x419ec1
  419e86:	aaa    
  419e87:	ret    0xc3aa
  419e8a:	test   eax,0x71b7b7f9
  419e8f:	retf   
  419e90:	mov    cl,BYTE PTR [edx-0x6]
  419e93:	inc    eax
  419e94:	nop
  419e95:	dec    ecx
  419e96:	add    DWORD PTR ds:0x7e6ce28f,ebx
  419e9c:	pop    ss
  419e9d:	mov    bl,0x62
  419e9f:	(bad)  
  419ea1:	dec    edx
  419ea2:	xlat   BYTE PTR ds:[ebx]
  419ea3:	shl    edi,1
  419ea5:	dec    ebp
  419ea6:	dec    eax
  419ea7:	sbb    BYTE PTR [eax+0x56],dh
  419eaa:	fs ds xor ecx,ecx
  419eae:	mov    eax,0xe8a6dc23
  419eb3:	push   es
  419eb4:	(bad)  
  419eb5:	sar    dl,cl
  419eb7:	popf   
  419eb8:	je     0x419eda
  419eba:	jnp    0x419ede
  419ebc:	(bad)  
  419ebd:	lods   al,BYTE PTR ds:[esi]
  419ebe:	repnz and eax,0xc9c0647c
  419ec4:	and    DWORD PTR [ebx+0x40af8d28],ebx
  419eca:	and    BYTE PTR [eax+0x7c06079a],0x2a
  419ed1:	xchg   BYTE PTR [ebx*1-0x1d987b32],bh
  419ed8:	mov    eax,0x4d5b867d
  419edd:	mov    al,ds:0xc985ed85
  419ee2:	and    BYTE PTR [ebp-0x4120b4fd],ah
  419ee8:	push   ebp
  419ee9:	pop    es
  419eea:	and    al,0xc
  419eec:	pop    ebx
  419eed:	pushf  
  419eee:	mov    ch,0x0
  419ef0:	imul   eax,DWORD PTR [edx],0x50
  419ef3:	xor    BYTE PTR [eax+0x4b19e297],ch
  419ef9:	xor    DWORD PTR [edx],ebx
  419efb:	add    bl,BYTE PTR cs:[edx-0x63]
  419eff:	mov    ds:0xf6791f12,eax
  419f04:	mov    ecx,DWORD PTR [esi-0x511cdb4f]
  419f0a:	inc    edi
  419f0b:	jecxz  0x419f58
  419f0d:	cmp    esp,DWORD PTR [ecx+0x29]
  419f10:	mov    al,0x21
  419f12:	int3   
  419f13:	jp     0x419f56
  419f15:	push   edi
  419f16:	sub    ch,BYTE PTR [edi]
  419f18:	leave  
  419f19:	out    dx,al
  419f1a:	mov    al,ds:0x93b93940
  419f1f:	lds    ecx,FWORD PTR [esi-0x54]
  419f22:	shr    BYTE PTR [ecx+edx*4-0x2],0xc5
  419f27:	mov    ecx,0xd9071b22
  419f2d:	jno    0x419efd
  419f2f:	dec    esi
  419f30:	mov    bh,0x5a
  419f32:	mov    BYTE PTR [ecx+0x21],al
  419f35:	xchg   BYTE PTR es:[ebp+0x1b],cl
  419f39:	not    DWORD PTR [eax-0x39ae48b4]
  419f3f:	test   al,0xc8
  419f41:	pop    esp
  419f42:	mov    esi,0x22a0a8c1
  419f47:	xchg   edi,eax
  419f48:	push   es
  419f49:	gs addr16 mov ecx,ds
  419f4d:	mov    ebp,0xc6f6a66d
  419f52:	sub    al,0x47
  419f54:	aaa    
  419f55:	inc    ebx
  419f56:	in     eax,0xf2
  419f58:	dec    ecx
  419f59:	or     eax,ebp
  419f5b:	inc    ecx
  419f5c:	stos   DWORD PTR es:[edi],eax
  419f5d:	or     DWORD PTR [eax],ecx
  419f5f:	cmc    
  419f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f61:	aas    
  419f62:	cmp    DWORD PTR [ecx-0xa8cc445],0x1565736c
  419f6c:	mov    eax,0x858ea103
  419f71:	(bad)  
  419f73:	aam    0xb8
  419f75:	bnd jne 0x419f2b
  419f78:	stos   BYTE PTR es:[edi],al
  419f79:	pushf  
  419f7a:	rol    cl,1
  419f7c:	pop    edi
  419f7d:	(bad)  
  419f7e:	xchg   esp,eax
  419f7f:	mov    ds:0x67a28b45,eax
  419f84:	xor    al,0x58
  419f86:	cmp    eax,0xdf5a5f1
  419f8b:	sbb    DWORD PTR [ebp-0x59],ebp
  419f8e:	lods   eax,DWORD PTR ds:[esi]
  419f8f:	mov    eax,ds:0x5951883f
  419f94:	inc    ecx
  419f95:	add    al,0xbd
  419f97:	cmc    
  419f98:	push   edx
  419f99:	xor    edx,edi
  419f9b:	mov    eax,ss
  419f9d:	sti    
  419f9e:	push   0x4a141916
  419fa3:	fdiv   DWORD PTR [ebx-0x37fd3367]
  419fa9:	ins    BYTE PTR es:[edi],dx
  419faa:	inc    edi
  419fab:	scas   al,BYTE PTR es:[edi]
  419fac:	push   DWORD PTR [eax-0x60]
  419faf:	mov    ch,dh
  419fb1:	and    bl,BYTE PTR [edi]
  419fb3:	into   
  419fb4:	push   eax
  419fb5:	sbb    esi,DWORD PTR [ecx]
  419fb7:	imul   DWORD PTR [ebx+0x51]
  419fba:	aam    0xbe
  419fbc:	sbb    ebx,esp
  419fbe:	or     ch,dh
  419fc0:	mov    ecx,0x3d060148
  419fc5:	dec    esi
  419fc6:	pop    ss
  419fc7:	test   eax,0x47a51625
  419fcc:	mov    ds:0x7a7dd4e4,al
  419fd1:	ds int 0x35
  419fd4:	xchg   edx,eax
  419fd5:	shr    DWORD PTR [eax],0xfd
  419fd8:	pop    esi
  419fd9:	sahf   
  419fda:	stos   DWORD PTR es:[edi],eax
  419fdb:	outs   dx,BYTE PTR ds:[esi]
  419fdc:	daa    
  419fdd:	adc    esi,0x44ad0e0a
  419fe3:	pop    edx
  419fe4:	sbb    bh,BYTE PTR [esi+0x40]
  419fe7:	pusha  
  419fe8:	or     BYTE PTR [ebp+ebp*8-0x21c7dc12],al
  419fef:	mov    esp,0x96bdad5
  419ff4:	popf   
  419ff5:	and    BYTE PTR [ebp-0xe7303ff],bh
  419ffb:	inc    edi
  419ffc:	inc    esp
  419ffd:	sub    eax,0xe693c893
  41a002:	rcr    DWORD PTR [esi],1
  41a004:	pop    es
  41a005:	fcmove st,st(7)
  41a007:	pop    ebp
  41a008:	xchg   DWORD PTR ds:0x3c98c08e,ebx
  41a00e:	push   ds
  41a00f:	jp     0x419ff2
  41a011:	cs pop ds
  41a013:	and    DWORD PTR [esi+0x7f],ebx
  41a016:	mov    edx,0xf4cad550
  41a01b:	shr    BYTE PTR [eax],cl
  41a01d:	mov    eax,ds:0xb590762a
  41a022:	jae    0x419ffe
  41a024:	mov    ebx,0xbd00c53c
  41a029:	xchg   esi,eax
  41a02a:	gs (bad) 
  41a02c:	cmc    
  41a02d:	push   eax
  41a02e:	and    bh,ah
  41a030:	or     DWORD PTR [ebx+ebx*2],ecx
  41a033:	and    eax,0xc64065ab
  41a038:	aad    0xbd
  41a03a:	cs stos BYTE PTR es:[edi],al
  41a03c:	ftst   
  41a03e:	sub    al,0x67
  41a040:	clc    
  41a041:	or     al,0xf6
  41a043:	mov    ebp,0x7fd2bb77
  41a048:	cmp    DWORD PTR [edi+0x67d3b0ec],eax
  41a04e:	add    al,0xf1
  41a050:	js     0x41a002
  41a052:	mov    bl,0xaa
  41a054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a055:	retf   0x4d05
  41a058:	int    0x3e
  41a05a:	mov    al,ds:0x393a89d0
  41a05f:	xchg   ebp,eax
  41a060:	lods   eax,DWORD PTR ds:[esi]
  41a061:	jno    0x41a0bf
  41a063:	js     0x41a06c
  41a065:	pop    esp
  41a066:	add    al,BYTE PTR [edx]
  41a068:	(bad)  
  41a06a:	adc    eax,0x45070875
  41a06f:	push   edi
  41a070:	mov    ?,WORD PTR [eax+0x63]
  41a073:	in     eax,0x8d
  41a075:	sbb    BYTE PTR [eax+ebp*1-0x10],bl
  41a079:	add    BYTE PTR [ebp+0x76e83e4c],ah
  41a07f:	fwait
  41a080:	into   
  41a081:	fidivr DWORD PTR ds:0x1466d8b3
  41a087:	dec    edx
  41a088:	pop    ss
  41a089:	cmova  esp,edi
  41a08c:	or     eax,0xcf5952b9
  41a091:	rol    BYTE PTR [ebx],cl
  41a093:	jmp    0x41a0cf
  41a095:	add    al,0xe3
  41a097:	loopne 0x41a118
  41a099:	test   BYTE PTR [ebx-0x70],0x10
  41a09d:	add    bh,BYTE PTR [esi-0x57539366]
  41a0a3:	inc    edx
  41a0a4:	cmc    
  41a0a5:	xlat   BYTE PTR ds:[ebx]
  41a0a6:	loopne 0x41a0c8
  41a0a8:	ja     0x41a03b
  41a0aa:	les    esi,FWORD PTR [edi]
  41a0ac:	push   edi
  41a0ad:	pushf  
  41a0ae:	add    eax,0x5b81e38f
  41a0b3:	ins    BYTE PTR es:[edi],dx
  41a0b4:	push   ebp
  41a0b5:	jnp    0x41a041
  41a0b7:	mov    ds:0x5c9939ba,eax
  41a0bc:	xor    BYTE PTR [ebx+0x5a],bh
  41a0bf:	or     al,BYTE PTR cs:[eax]
  41a0c2:	and    BYTE PTR [edx+0xb],al
  41a0c5:	lock push eax
  41a0c7:	cmc    
  41a0c8:	cli    
  41a0c9:	cmp    ebp,esp
  41a0cb:	pop    ebp
  41a0cc:	(bad)  
  41a0cd:	or     BYTE PTR [eax],cl
  41a0cf:	je     0x41a052
  41a0d1:	(bad)  
  41a0d2:	jp     0x41a135
  41a0d4:	pop    ebp
  41a0d5:	lahf   
  41a0d6:	inc    ebp
  41a0d7:	push   cs
  41a0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0d9:	int    0xf1
  41a0db:	dec    esp
  41a0dc:	xchg   ebx,eax
  41a0dd:	in     al,0xd
  41a0df:	vpcmpeqw ymm5,ymm0,YMMWORD PTR [edx+0x52]
  41a0e4:	imul   edi,DWORD PTR [ecx-0x7f],0xffffffd4
  41a0e8:	pop    eax
  41a0e9:	or     DWORD PTR [eax-0x5c],esp
  41a0ec:	jns    0x41a0a8
  41a0ee:	fidiv  WORD PTR [ebx-0x61adfc28]
  41a0f4:	sbb    eax,0x5cb6cc3c
  41a0f9:	jp     0x41a0df
  41a0fb:	int    0xa7
  41a0fd:	mov    edx,0x48702592
  41a102:	mov    bl,0xff
  41a104:	cmp    al,0x24
  41a106:	cmp    bh,dh
  41a108:	jno    0x41a095
  41a10a:	gs leave 
  41a10c:	clc    
  41a10d:	pop    esi
  41a10e:	shl    BYTE PTR [ebp-0x351644d1],1
  41a114:	and    ah,BYTE PTR [ebp-0x41]
  41a117:	pop    ecx
  41a118:	mov    BYTE PTR [edi],bh
  41a11a:	push   eax
  41a11b:	adc    al,0x7a
  41a11d:	aad    0x73
  41a11f:	retf   
  41a120:	jb     0x41a165
  41a122:	shl    BYTE PTR [edi-0x22],cl
  41a125:	cmp    bh,BYTE PTR [edx-0x2e0a7285]
  41a12b:	xchg   esp,eax
  41a12c:	div    DWORD PTR [eax+0x50d796c0]
  41a132:	cmp    edi,DWORD PTR [edx-0x53]
  41a135:	jmp    0x41a0c6
  41a137:	inc    esi
  41a138:	div    BYTE PTR [ebx-0x2a]
  41a13b:	std    
  41a13c:	(bad)  
  41a13d:	sti    
  41a13e:	or     al,0xab
  41a140:	cmp    BYTE PTR [edi+0x77],al
  41a143:	mov    edx,0xeec40fa6
  41a148:	mov    bl,0x89
  41a14a:	pop    eax
  41a14b:	mov    cl,0xbe
  41a14d:	push   0xab48d3a0
  41a152:	inc    ecx
  41a153:	sub    DWORD PTR [ebp+0x69268cff],ebp
  41a159:	jb     0x41a1c9
  41a15b:	inc    ebx
  41a15c:	loop   0x41a1c2
  41a15e:	mov    ebp,0x31b002e1
  41a163:	sbb    ebx,eax
  41a165:	test   eax,0x31c8408d
  41a16a:	jb     0x41a0ed
  41a16c:	das    
  41a16d:	aas    
  41a16e:	inc    esi
  41a16f:	adc    BYTE PTR [eax],ch
  41a171:	or     al,cl
  41a173:	sbb    eax,0xed9be2b2
  41a178:	test   BYTE PTR [esi+0x75221a53],al
  41a17e:	mov    WORD PTR [eax+0x51754d18],?
  41a184:	adc    dl,BYTE PTR ds:0x71310a02
  41a18a:	add    al,0xc3
  41a18c:	gs mov ebx,0x7d14a582
  41a192:	into   
  41a193:	adc    al,0x5a
  41a195:	cld    
  41a196:	shr    al,cl
  41a198:	jno    0x41a1f9
  41a19a:	das    
  41a19b:	ror    DWORD PTR [edx-0x4e234289],1
  41a1a1:	scas   eax,DWORD PTR es:[edi]
  41a1a2:	aam    0xef
  41a1a4:	inc    ebx
  41a1a5:	retf   0xfd44
  41a1a8:	mov    dl,0xb
  41a1aa:	stos   DWORD PTR es:[edi],eax
  41a1ab:	pop    ds
  41a1ac:	jno    0x41a1ff
  41a1ae:	(bad)  
  41a1af:	aad    0x92
  41a1b1:	data16 xor BYTE PTR [edx],dh
  41a1b4:	shl    edi,cl
  41a1b6:	cld    
  41a1b7:	mov    ecx,0x260da45
  41a1bc:	xchg   DWORD PTR [ecx],edx
  41a1be:	out    0xf5,eax
  41a1c0:	arpl   WORD PTR [ebp+0x2fee936a],dx
  41a1c6:	ds push ss
  41a1c8:	inc    esi
  41a1c9:	loop   0x41a22d
  41a1cb:	imul   edi,DWORD PTR [ebp-0x4d],0x8e90b955
  41a1d2:	add    al,0xfd
  41a1d4:	mov    ebx,0x394eaca
  41a1d9:	mov    dh,0x2e
  41a1db:	mov    eax,0x4ff6dbe1
  41a1e0:	imul   esi,DWORD PTR [edx],0x7f
  41a1e3:	mov    ds:0xfacc5975,eax
  41a1e8:	jge    0x41a184
  41a1ea:	xchg   ecx,eax
  41a1eb:	ret    0x44f8
  41a1ee:	and    al,BYTE PTR [edi-0x4e]
  41a1f1:	(bad)  
  41a1f2:	add    BYTE PTR ds:0x45de,al
  41a1f7:	sbb    al,0xd1
  41a1f9:	push   esi
  41a1fa:	pushf  
  41a1fb:	adc    ch,ah
  41a1fd:	aad    0xaf
  41a1ff:	mov    ebp,0xb95b1046
  41a204:	and    BYTE PTR [eax+0x39],cl
  41a207:	pushf  
  41a208:	adc    BYTE PTR [edx],dh
  41a20a:	sahf   
  41a20b:	cli    
  41a20c:	xchg   esp,eax
  41a20d:	cmp    DWORD PTR [esp+ecx*4-0x19],0x3
  41a212:	and    cl,BYTE PTR [edi-0x79]
  41a215:	(bad)  
  41a216:	sub    eax,0x278e018e
  41a21b:	cwde   
  41a21c:	scas   al,BYTE PTR es:[edi]
  41a21d:	jo     0x41a1ab
  41a21f:	sar    al,cl
  41a221:	pop    ss
  41a222:	popa   
  41a223:	jns    0x41a1d0
  41a225:	push   cs
  41a226:	scas   eax,DWORD PTR es:[edi]
  41a227:	scas   al,BYTE PTR es:[edi]
  41a228:	jmp    0x41a1e8
  41a22a:	mov    cl,0xf2
  41a22c:	call   0xe99f3449
  41a231:	and    BYTE PTR [ebp-0x42],cl
  41a234:	jmp    0x41a288
  41a236:	daa    
  41a237:	ja     0x41a2b2
  41a239:	pop    ds
  41a23a:	call   0xe589:0x83178cf5
  41a241:	fldcw  WORD PTR [edx+0xb]
  41a244:	push   0xc6b4a9c3
  41a249:	xchg   ebx,eax
  41a24a:	xchg   BYTE PTR [edi+eiz*2],dl
  41a24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a24e:	jo     0x41a207
  41a250:	sub    esi,DWORD PTR ds:0x6ce01d4f
  41a256:	xchg   DWORD PTR [ecx-0x3ab1af8c],esp
  41a25c:	out    0xf4,al
  41a25e:	adc    al,bh
  41a260:	push   esp
  41a261:	stos   DWORD PTR es:[edi],eax
  41a262:	push   ss
  41a263:	cmp    edi,ebp
  41a265:	scas   eax,DWORD PTR es:[edi]
  41a266:	jbe    0x41a23b
  41a268:	add    DWORD PTR [ebp+edi*4+0x4b],edi
  41a26c:	(bad)  
  41a26d:	jecxz  0x41a263
  41a26f:	or     ah,cl
  41a271:	sub    esp,edi
  41a273:	xchg   edi,eax
  41a274:	and    dl,BYTE PTR [edi-0x4b]
  41a277:	cwde   
  41a278:	das    
  41a279:	(bad)  
  41a27a:	stos   BYTE PTR es:[edi],al
  41a27b:	aam    0xc4
  41a27d:	jb     0x41a26c
  41a27f:	jl     0x41a286
  41a281:	pop    ebx
  41a282:	jbe    0x41a247
  41a284:	scas   al,BYTE PTR es:[edi]
  41a285:	dec    eax
  41a286:	out    dx,eax
  41a287:	das    
  41a288:	jb     0x41a27e
  41a28a:	adc    al,0x2a
  41a28c:	nop
  41a28d:	xlat   BYTE PTR ds:[ebx]
  41a28e:	call   FWORD PTR [ecx+0x753ec95]
  41a294:	sub    BYTE PTR [eax],dh
  41a296:	add    DWORD PTR [esi+eiz*1+0x54cefc38],edx
  41a29d:	mov    ebp,0x9bbc48d
  41a2a2:	stc    
  41a2a3:	pop    eax
  41a2a4:	or     edi,ecx
  41a2a6:	nop
  41a2a7:	jge    0x41a244
  41a2a9:	or     bh,BYTE PTR [esi-0x3e]
  41a2ac:	enter  0x595a,0x40
  41a2b0:	or     esp,ecx
  41a2b2:	pop    ebx
  41a2b3:	and    bl,dl
  41a2b5:	mov    ebx,0xc425d0c2
  41a2ba:	adc    ebp,DWORD PTR fs:[ebx+0x61d97df1]
  41a2c1:	push   esp
  41a2c2:	lods   eax,DWORD PTR ds:[esi]
  41a2c3:	out    dx,al
  41a2c4:	inc    ebx
  41a2c5:	pop    ebx
  41a2c6:	mov    dl,0x7
  41a2c8:	test   BYTE PTR [edx-0x7e208654],dh
  41a2ce:	add    dl,BYTE PTR ds:0xff6048fb
  41a2d4:	popf   
  41a2d5:	push   eax
  41a2d6:	jae    0x41a2f7
  41a2d8:	call   0x11b6cb2c
  41a2dd:	addr16 loope 0x41a2dc
  41a2e0:	pop    esi
  41a2e1:	stos   DWORD PTR es:[edi],eax
  41a2e2:	push   DWORD PTR [eax+esi*8-0x3a]
  41a2e6:	test   DWORD PTR [ebp-0x66],0x751ab298
  41a2ed:	adc    eax,ebx
  41a2ef:	mov    ebp,0xdf7232bf
  41a2f4:	addr16 sahf 
  41a2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2f7:	(bad)  
  41a2f8:	ficomp WORD PTR [esp+esi*8]
  41a2fb:	lods   eax,DWORD PTR ds:[esi]
  41a2fc:	enter  0x74e4,0x5a
  41a300:	scas   al,BYTE PTR es:[edi]
  41a301:	mov    esp,?
  41a303:	and    BYTE PTR [edx-0x7469d23a],ah
  41a309:	fimul  DWORD PTR [ecx+0x5de8714c]
  41a30f:	inc    ecx
  41a310:	dec    ebp
  41a311:	dec    esp
  41a312:	scas   al,BYTE PTR es:[edi]
  41a313:	lods   eax,DWORD PTR ds:[esi]
  41a314:	cdq    
  41a315:	add    al,0xa
  41a317:	ret    
  41a318:	add    al,0x8b
  41a31a:	rcl    DWORD PTR [ebx],0x80
  41a31d:	stos   DWORD PTR es:[edi],eax
  41a31e:	ja     0x41a2e0
  41a320:	arpl   WORD PTR [eax],si
  41a322:	mov    DWORD PTR [ecx],ecx
  41a324:	mov    al,ds:0xc83f1069
  41a329:	popa   
  41a32a:	rcr    dl,cl
  41a32c:	pop    edx
  41a32d:	mov    ch,0xe6
  41a32f:	push   es
  41a330:	pop    es
  41a331:	push   ebp
  41a332:	xchg   edx,eax
  41a333:	std    
  41a334:	test   BYTE PTR [ecx+0x72b9fa4b],bl
  41a33a:	rol    esi,0x49
  41a33d:	into   
  41a33e:	sahf   
  41a33f:	and    DWORD PTR [ebx+0x65],esi
  41a342:	jmp    0xcdbccf99
  41a347:	mov    eax,0x450437a2
  41a34c:	adc    al,0x1c
  41a34e:	(bad)  
  41a34f:	pushf  
  41a350:	pop    ebp
  41a351:	out    0x35,al
  41a353:	push   cs
  41a354:	in     al,0x61
  41a356:	or     bl,BYTE PTR [edi-0x43]
  41a359:	fs pop es
  41a35b:	inc    ecx
  41a35c:	mov    eax,ds:0x4a6b1bac
  41a361:	mov    al,ds:0xd3c0954e
  41a366:	pop    ebx
  41a367:	fsubr  QWORD PTR ds:0xadccc851
  41a36d:	cmc    
  41a36e:	pop    esp
  41a36f:	pop    ebp
  41a370:	hlt    
  41a371:	mov    al,ds:0xeb08a346
  41a376:	xchg   ah,al
  41a378:	push   0x7c
  41a37a:	sbb    al,0xed
  41a37c:	xchg   esp,eax
  41a37d:	jp     0x41a3da
  41a37f:	add    bh,BYTE PTR [ebp+0x44]
  41a382:	jp     0x41a3ca
  41a384:	aam    0x55
  41a386:	dec    ebx
  41a387:	cwde   
  41a388:	bound  eax,QWORD PTR [eax]
  41a38a:	icebp  
  41a38b:	mov    ecx,gs
  41a38d:	xchg   DWORD PTR [ebp-0xd086768],ebx
  41a393:	pop    edi
  41a394:	fsub   QWORD PTR [esi]
  41a396:	(bad)  [ecx-0x3c4dcb01]
  41a39c:	xchg   esi,eax
  41a39d:	retf   
  41a39e:	imul   DWORD PTR ds:0xca7f5172
  41a3a4:	gs cmc 
  41a3a6:	gs sub eax,0x71a5df51
  41a3ac:	stc    
  41a3ad:	jmp    0xcc05:0xe5911794
  41a3b4:	int3   
  41a3b5:	sub    ecx,DWORD PTR [ebx+ebx*8-0x46e4f1d3]
  41a3bc:	cmp    edx,DWORD PTR [edi]
  41a3be:	or     eax,0x9ff339a
  41a3c3:	mov    ecx,0x6fae97d8
  41a3c8:	jge    0x41a359
  41a3ca:	jg     0x41a41d
  41a3cc:	scas   al,BYTE PTR es:[edi]
  41a3cd:	aam    0x78
  41a3cf:	sbb    ebx,0x4b
  41a3d2:	iret   
  41a3d3:	xchg   edi,eax
  41a3d4:	icebp  
  41a3d5:	(bad)  [ebx-0x2f918c20]
  41a3db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3dc:	push   ss
  41a3dd:	or     edi,edi
  41a3df:	rcl    DWORD PTR [edi+0x6f],cl
  41a3e2:	push   ds
  41a3e3:	inc    eax
  41a3e4:	in     al,dx
  41a3e5:	add    ebp,DWORD PTR [ebx-0x14]
  41a3e8:	test   eax,0xa6ece053
  41a3ed:	jb     0x41a46d
  41a3ef:	hlt    
  41a3f0:	xchg   esi,eax
  41a3f1:	xlat   BYTE PTR ds:[ebx]
  41a3f2:	add    ebp,ebx
  41a3f4:	sti    
  41a3f5:	ins    BYTE PTR es:[edi],dx
  41a3f6:	adc    DWORD PTR [ecx],edi
  41a3f8:	xor    al,0xde
  41a3fa:	xchg   edi,eax
  41a3fb:	sbb    BYTE PTR [eax-0x15],cl
  41a3fe:	test   eax,0x1745def8
  41a403:	lahf   
  41a404:	mov    dl,0x50
  41a406:	push   es
  41a407:	dec    ebx
  41a408:	mov    ah,BYTE PTR [ebx+ebx*2-0x69]
  41a40c:	add    al,0xe8
  41a40e:	adc    eax,0x3a49f5d3
  41a413:	adc    ch,BYTE PTR [ebp+0x7a]
  41a416:	dec    esi
  41a417:	jnp    0x41a404
  41a419:	mov    cl,0x1
  41a41b:	daa    
  41a41c:	adc    dl,BYTE PTR [edi]
  41a41e:	mov    esi,0xcfeec34d
  41a423:	jecxz  0x41a407
  41a425:	add    eax,edx
  41a427:	push   eax
  41a428:	(bad)  
  41a429:	cmc    
  41a42a:	mov    bh,0x51
  41a42c:	in     eax,dx
  41a42d:	push   0xffffffcb
  41a42f:	jmp    0x41a44b
  41a431:	mov    eax,DWORD PTR [eax]
  41a433:	aaa    
  41a434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a435:	in     eax,dx
  41a436:	xchg   ecx,eax
  41a437:	xchg   ebx,eax
  41a438:	cwde   
  41a439:	imul   edx,eax,0x2e
  41a43c:	lods   al,BYTE PTR ds:[esi]
  41a43d:	push   eax
  41a43e:	mov    ebp,0xcc72cc17
  41a443:	xchg   esi,eax
  41a444:	addr16 jns 0x41a4bc
  41a447:	adc    ah,BYTE PTR [eax+0x58]
  41a44a:	mov    esi,es
  41a44c:	iret   
  41a44d:	inc    ebp
  41a44e:	push   ecx
  41a44f:	adc    esi,edi
  41a451:	mov    edi,0x549f2c4f
  41a456:	jno    0x41a3f2
  41a458:	cmc    
  41a459:	cmp    DWORD PTR [eax],eax
  41a45b:	mov    ds:0x567315f2,eax
  41a460:	lods   eax,DWORD PTR ds:[esi]
  41a462:	jb     0x41a4a1
  41a464:	in     eax,dx
  41a465:	mov    al,ds:0x2c7ce21
  41a46a:	xchg   esp,eax
  41a46b:	(bad)  
  41a46c:	mov    edi,0xcfb1132d
  41a471:	jge    0x41a47a
  41a473:	push   edx
  41a474:	add    bh,al
  41a476:	popa   
  41a477:	add    al,0xfd
  41a479:	retf   0x71be
  41a47c:	xor    ecx,DWORD PTR [eax*2-0x1d27545c]
  41a483:	push   0x37
  41a485:	jnp    0x41a4b1
  41a487:	push   ds
  41a488:	pop    ebx
  41a489:	add    DWORD PTR ds:0xb33415a9,esp
  41a48f:	or     al,0xe1
  41a491:	pop    es
  41a492:	inc    edx
  41a493:	fnsave [eax+ebx*2-0x40897c8e]
  41a49a:	test   BYTE PTR [ebx+0x7f045cfe],dl
  41a4a0:	leave  
  41a4a1:	or     eax,0xf0e0f9ab
  41a4a6:	adc    ah,bh
  41a4a8:	and    al,0xc0
  41a4aa:	or     ebp,ebp
  41a4ac:	imul   edx,DWORD PTR [eax+0x116e90c7],0xfc771632
  41a4b6:	cmc    
  41a4b7:	aam    0xef
  41a4b9:	push   DWORD PTR [ecx-0x450b4a39]
  41a4bf:	push   esi
  41a4c0:	mov    ebx,0x2ce75834
  41a4c5:	pop    ecx
  41a4c6:	lock (bad) [eax+0x18]
  41a4ca:	repnz std 
  41a4cc:	ja     0x41a4d7
  41a4ce:	pop    esp
  41a4cf:	dec    edx
  41a4d0:	enter  0xefb4,0xad
  41a4d4:	outs   dx,DWORD PTR ds:[esi]
  41a4d5:	add    bl,ch
  41a4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4d8:	std    
  41a4d9:	pusha  
  41a4da:	add    al,BYTE PTR [ebx+esi*8-0x34bebea5]
  41a4e1:	lea    esp,[esp+esi*8+0x717485b2]
  41a4e8:	mov    bh,0x21
  41a4ea:	adc    ah,BYTE PTR [ebx-0x6addfdd8]
  41a4f0:	int    0xeb
  41a4f2:	shl    BYTE PTR [esi-0x29],0xa4
  41a4f6:	stos   DWORD PTR es:[edi],eax
  41a4f7:	xor    al,0x66
  41a4f9:	into   
  41a4fa:	shl    DWORD PTR [ebx],cl
  41a4fc:	fcom   st(4)
  41a4fe:	add    DWORD PTR [ecx+0x56],esp
  41a501:	aad    0x29
  41a503:	xchg   ebx,eax
  41a504:	pop    ebp
  41a505:	adc    eax,0x24774c52
  41a50a:	outs   dx,BYTE PTR ds:[esi]
  41a50b:	(bad)  
  41a50c:	pop    ecx
  41a50d:	pop    ecx
  41a50e:	pop    es
  41a50f:	ja     0x41a4b8
  41a511:	shl    DWORD PTR [edi],1
  41a513:	retf   0x1e85
  41a516:	shl    BYTE PTR [esi],0xb4
  41a519:	push   ebx
  41a51a:	dec    edx
  41a51b:	dec    edi
  41a51c:	(bad)  
  41a51d:	push   edx
  41a51e:	pop    ecx
  41a51f:	xchg   edi,eax
  41a520:	aad    0x2f
  41a522:	add    ebx,DWORD PTR [edi-0x18]
  41a525:	aaa    
  41a526:	jmp    0xeec4:0x415803fc
  41a52d:	popa   
  41a52e:	aaa    
  41a52f:	lahf   
  41a530:	inc    ecx
  41a531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a532:	cs iret 
  41a534:	sbb    DWORD PTR [ebx],edi
  41a536:	out    0x91,al
  41a538:	popf   
  41a539:	mov    BYTE PTR [esi-0x5054257a],cl
  41a53f:	xchg   bh,bl
  41a541:	add    al,BYTE PTR [eax]
  41a543:	pushf  
  41a544:	arpl   dx,bx
  41a546:	adc    ch,bl
  41a548:	cmp    eax,0x701d3a3
  41a54d:	mov    ebp,0x9e178437
  41a552:	cdq    
  41a553:	adc    BYTE PTR [ecx+eax*2],0x36
  41a557:	xchg   esp,eax
  41a558:	add    eax,0x768f9aa0
  41a55d:	sbb    DWORD PTR [esi-0x2b],ebx
  41a560:	push   esi
  41a561:	shl    BYTE PTR [ecx-0x45495ab7],cl
  41a567:	lods   eax,DWORD PTR ds:[esi]
  41a568:	fst    QWORD PTR [ecx+edx*4+0x23]
  41a56c:	xchg   ecx,eax
  41a56d:	inc    edi
  41a56e:	popa   
  41a56f:	jne    0x41a5bf
  41a571:	out    dx,al
  41a572:	xor    eax,0xddf35009
  41a577:	dec    esi
  41a578:	push   0xffffffb8
  41a57a:	inc    ebx
  41a57b:	(bad)  
  41a57d:	inc    ebp
  41a57e:	add    DWORD PTR [eax+0x8],edi
  41a581:	xchg   ebx,eax
  41a582:	or     BYTE PTR [esi-0x5727cdbe],dh
  41a588:	adc    eax,0xe3d9f2d2
  41a58d:	dec    esp
  41a58e:	pop    eax
  41a58f:	jmp    0x942ab6a8
  41a594:	sbb    esi,DWORD PTR [eax-0x60666487]
  41a59a:	shl    DWORD PTR [ebx+0x76547f7f],0x11
  41a5a1:	arpl   WORD PTR [eax+0x7f],di
  41a5a4:	ror    BYTE PTR [esi-0x1e145f6b],0x5a
  41a5ab:	xor    eax,0x4d21aef5
  41a5b0:	push   edx
  41a5b1:	mov    ?,ebp
  41a5b3:	mov    cl,0x51
  41a5b5:	adc    cl,BYTE PTR [eax]
  41a5b7:	mov    esi,0x790b5779
  41a5bc:	or     al,0x73
  41a5be:	add    eax,0x1a26e331
  41a5c3:	and    edx,DWORD PTR [esi]
  41a5c5:	adc    BYTE PTR [ebp-0x1142e988],bl
  41a5cb:	outs   dx,BYTE PTR ds:[esi]
  41a5cc:	push   ss
  41a5cd:	nop
  41a5ce:	mov    DWORD PTR [eax+0x716881dc],eax
  41a5d4:	xchg   ebx,eax
  41a5d5:	(bad)  
  41a5d6:	loop   0x41a5dd
  41a5d8:	cld    
  41a5d9:	add    ebp,ebx
  41a5db:	jmp    0x4d21:0x193d046a
  41a5e2:	adc    BYTE PTR [edx-0x4e],ah
  41a5e5:	jbe    0x41a5e5
  41a5e7:	retf   0xc439
  41a5ea:	inc    edx
  41a5eb:	add    eax,DWORD PTR [ebx+ebx*2-0x78]
  41a5ef:	mov    ebp,0xf5391f68
  41a5f4:	inc    ecx
  41a5f5:	xchg   ebx,eax
  41a5f6:	or     cl,cl
  41a5f8:	pop    es
  41a5f9:	xor    al,0x10
  41a5fb:	popf   
  41a5fc:	popf   
  41a5fd:	or     al,0x30
  41a5ff:	retf   
  41a600:	adc    DWORD PTR [edi+0x49],esi
  41a603:	or     BYTE PTR [edi-0x63c8f3d8],bh
  41a609:	in     al,dx
  41a60a:	mov    dh,bh
  41a60c:	jb     0x41a5a7
  41a60e:	cmc    
  41a60f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a610:	out    dx,eax
  41a611:	sbb    eax,DWORD PTR [ecx]
  41a613:	je     0x41a63e
  41a615:	xchg   ebx,eax
  41a616:	jge    0x41a68a
  41a618:	cmp    DWORD PTR [eax+0x2191d1f9],eax
  41a61e:	imul   eax,DWORD PTR [ebp-0xc],0x75
  41a622:	sub    edi,0xfffffffc
  41a625:	mov    al,ds:0x5c841d0c
  41a62a:	dec    ecx
  41a62b:	jno    0x41a619
  41a62d:	xchg   dh,dh
  41a62f:	mov    eax,0x536ae72
  41a634:	mov    bh,0xd
  41a636:	pop    es
  41a637:	sub    BYTE PTR [edi+0x381b8cba],bl
  41a63d:	xor    dh,BYTE PTR [edx]
  41a63f:	cs hlt 
  41a641:	scas   eax,DWORD PTR es:[edi]
  41a642:	lea    ebx,[edx-0x7588d1cb]
  41a648:	into   
  41a649:	cmc    
  41a64a:	dec    ebx
  41a64b:	cld    
  41a64c:	jmp    0x41a6c3
  41a64e:	aam    0xfc
  41a650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a651:	or     eax,0xad982a54
  41a656:	(bad)  [edx-0x3799c19]
  41a65c:	mov    eax,0x8260c713
  41a661:	nop
  41a662:	xchg   edi,eax
  41a663:	int    0xb6
  41a665:	pop    esi
  41a666:	nop
  41a667:	int3   
  41a668:	dec    ebp
  41a669:	into   
  41a66a:	mov    ebx,esi
  41a66c:	push   ds
  41a66d:	adc    esi,DWORD PTR es:[eax-0x6f8b7042]
  41a674:	and    DWORD PTR [eax+0xf59af92],esi
  41a67a:	mov    ah,0xd5
  41a67c:	jmp    FWORD PTR [edi+0x71158808]
  41a682:	test   edx,0x790669ec
  41a688:	repz mov eax,0x8ccdaec0
  41a68e:	sbb    al,0x7c
  41a690:	sar    ebx,1
  41a692:	push   edx
  41a693:	xchg   ebp,eax
  41a694:	or     al,BYTE PTR [eax]
  41a696:	mov    ?,WORD PTR [eax]
  41a698:	pop    ds
  41a699:	push   ecx
  41a69a:	sbb    edi,DWORD PTR [esi+0x9]
  41a69d:	sti    
  41a69e:	call   FWORD PTR [ecx-0x7b]
  41a6a1:	stc    
  41a6a2:	push   es
  41a6a3:	or     esp,DWORD PTR [edi]
  41a6a5:	jge    0x41a673
  41a6a7:	sbb    ah,BYTE PTR [ebp+eiz*4-0x469a67f3]
  41a6ae:	or     DWORD PTR [ebx],eax
  41a6b0:	dec    ebx
  41a6b1:	hlt    
  41a6b2:	aaa    
  41a6b3:	js     0x41a70f
  41a6b5:	ret    
  41a6b6:	xor    BYTE PTR [esi+0x48adcb54],bh
  41a6bc:	leave  
  41a6bd:	mov    BYTE PTR [ebx+0x68],bh
  41a6c0:	ds sbb eax,0x44006242
  41a6c6:	ja     0x41a652
  41a6c8:	inc    esp
  41a6c9:	inc    esi
  41a6ca:	xor    al,0x1b
  41a6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6cd:	enter  0xa4b7,0x68
  41a6d1:	sbb    al,0x55
  41a6d3:	pop    ds
  41a6d4:	mov    WORD PTR [ebx],ds
  41a6d6:	cmp    BYTE PTR [ecx],bl
  41a6d8:	xor    al,BYTE PTR [ecx-0x1d8b76f2]
  41a6de:	cmp    ah,al
  41a6e0:	pusha  
  41a6e1:	or     al,0x52
  41a6e3:	jo     0x41a6d5
  41a6e5:	xchg   ecx,eax
  41a6e6:	push   edi
  41a6e7:	or     ch,BYTE PTR [ecx-0xb]
  41a6ea:	xlat   BYTE PTR ds:[ebx]
  41a6eb:	jb     0x41a746
  41a6ed:	mov    bh,0xbf
  41a6ef:	ins    BYTE PTR es:[edi],dx
  41a6f0:	stos   DWORD PTR es:[edi],eax
  41a6f1:	ret    
  41a6f2:	cmp    cl,ch
  41a6f4:	mov    esi,0x97f8526e
  41a6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6fa:	pop    esi
  41a6fb:	jle    0x41a6ed
  41a6fd:	daa    
  41a6fe:	test   eax,0x5fe010ae
  41a703:	sar    BYTE PTR [eax+0x309c7682],0x46
  41a70a:	push   edi
  41a70b:	pop    ebx
  41a70c:	out    dx,eax
  41a70d:	dec    eax
  41a70e:	pushf  
  41a70f:	pop    ds
  41a710:	dec    eax
  41a711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a712:	pop    es
  41a713:	push   esp
  41a714:	sub    cl,BYTE PTR [esi]
  41a716:	fcom   DWORD PTR [di]
  41a719:	and    ebx,DWORD PTR [ebx+ecx*4-0x48c47807]
  41a720:	loop   0x41a6d7
  41a722:	dec    ecx
  41a723:	scas   eax,DWORD PTR es:[edi]
  41a724:	push   ebp
  41a725:	nop
  41a726:	xlat   BYTE PTR ds:[ebx]
  41a727:	shl    DWORD PTR [edx],0x5d
  41a72a:	jecxz  0x41a713
  41a72c:	push   eax
  41a72d:	cld    
  41a72e:	sub    al,0xa8
  41a730:	inc    ebp
  41a731:	sub    DWORD PTR [ebx],edx
  41a733:	pusha  
  41a734:	cmp    BYTE PTR [edi+0x2de07c84],0xb8
  41a73b:	sub    al,0xb6
  41a73d:	or     BYTE PTR [ebx],0xb2
  41a740:	mov    cl,0xc9
  41a742:	or     eax,0x34bdf08b
  41a747:	in     al,0x82
  41a749:	mov    esi,0xd8276771
  41a74e:	out    dx,eax
  41a74f:	aaa    
  41a750:	jmp    FWORD PTR [ecx-0x66]
  41a753:	cmp    eax,0xe310536a
  41a758:	or     edx,ebp
  41a75a:	pop    ds
  41a75b:	sub    ebp,DWORD PTR [edi+ebp*1]
  41a75e:	mov    ebx,0xf5d3a5ec
  41a763:	sbb    dh,0x14
  41a766:	js     0x41a767
  41a768:	popf   
  41a769:	lods   al,BYTE PTR ds:[esi]
  41a76a:	jns    0x41a717
  41a76c:	lahf   
  41a76d:	rcr    bh,cl
  41a76f:	jb     0x41a777
  41a771:	call   0x4512:0x9b1fdf4d
  41a778:	icebp  
  41a779:	inc    esi
  41a77a:	jl     0x41a7f8
  41a77c:	(bad)  
  41a77d:	cmp    al,cl
  41a77f:	jns    0x41a77e
  41a781:	add    DWORD PTR [edi],ecx
  41a783:	mov    dh,0x89
  41a786:	mov    ds:0x7f128438,eax
  41a78b:	and    al,0x45
  41a78d:	fild   DWORD PTR ss:[ebx-0x7a4c7409]
  41a794:	ins    BYTE PTR es:[edi],dx
  41a795:	nop
  41a796:	out    dx,al
  41a797:	cmp    dh,dh
  41a799:	out    dx,al
  41a79a:	mov    al,ds:0x44e390d3
  41a79f:	sti    
  41a7a0:	out    dx,eax
  41a7a1:	hlt    
  41a7a2:	aam    0x29
  41a7a4:	stos   BYTE PTR es:[edi],al
  41a7a5:	fwait
  41a7a6:	(bad)  
  41a7a7:	and    bl,cl
  41a7a9:	pop    edi
  41a7aa:	xchg   ecx,eax
  41a7ab:	sub    ecx,esi
  41a7ad:	lahf   
  41a7ae:	and    BYTE PTR [edx-0x59],ch
  41a7b1:	mov    ds:0x8ab70546,al
  41a7b6:	(bad)  
  41a7b7:	push   ecx
  41a7b8:	repz jae 0x41a81e
  41a7bb:	cdq    
  41a7bc:	push   cs
  41a7bd:	bound  esi,QWORD PTR [esp+edx*1]
  41a7c0:	pop    ss
  41a7c1:	jmp    0xe858165b
  41a7c6:	sbb    eax,0x5c92c3c9
  41a7cb:	std    
  41a7cc:	sbb    al,0x7f
  41a7ce:	jmp    esp
  41a7d0:	adc    BYTE PTR [eax+0xf],0xc8
  41a7d4:	push   cs
  41a7d5:	mov    ebp,0x3382761
  41a7da:	mov    ds:0x2cc4af01,al
  41a7df:	mov    cl,BYTE PTR [esi+0x413347ba]
  41a7e5:	xlat   BYTE PTR ds:[ebx]
  41a7e6:	arpl   WORD PTR [edi],si
  41a7e8:	(bad)  
  41a7e9:	addr16 dec edx
  41a7eb:	clc    
  41a7ec:	in     al,0xce
  41a7ee:	lahf   
  41a7ef:	jo     0x41a84e
  41a7f1:	xor    al,0xd0
  41a7f3:	add    ch,bl
  41a7f5:	cmp    DWORD PTR [ebx],esp
  41a7f7:	mov    eax,ds:0x95465fc2
  41a7fc:	das    
  41a7fd:	stos   BYTE PTR es:[edi],al
  41a7fe:	sub    ax,0xe242
  41a802:	add    ch,BYTE PTR [ecx+0x6e4be69d]
  41a808:	jmp    0x41a7c4
  41a80a:	mov    edx,0xf238c01d
  41a80f:	stos   DWORD PTR es:[edi],eax
  41a810:	inc    esi
  41a811:	lea    esi,[eax+0x12]
  41a814:	mov    dl,0xbb
  41a816:	xor    bh,BYTE PTR [eax-0x5638ffbd]
  41a81c:	(bad)
  41a81f:	xchg   BYTE PTR [eax],al
  41a821:	sbb    dl,ah
  41a823:	push   ds
  41a824:	(bad)  
  41a825:	ins    BYTE PTR es:[edi],dx
  41a826:	pop    ebp
  41a827:	add    ecx,edx
  41a829:	data16 inc BYTE PTR [ebx]
  41a82c:	je     0x41a808
  41a82e:	xchg   esp,eax
  41a82f:	int3   
  41a830:	jmp    0x41a7be
  41a832:	jmp    0x41a7ec
  41a834:	(bad)  
  41a835:	jo     0x41a822
  41a837:	xor    ebx,DWORD PTR [eax-0x5]
  41a83a:	cld    
  41a83b:	push   0x3b
  41a83d:	pop    ebx
  41a83e:	sar    BYTE PTR [eax],0x84
  41a841:	jb     0x41a7f2
  41a843:	mov    eax,DWORD PTR [edi]
  41a845:	call   0x1b52:0x68b41984
  41a84c:	or     al,0x45
  41a84e:	int3   
  41a84f:	not    edx
  41a851:	adc    eax,0xaad20c49
  41a856:	xchg   ebx,eax
  41a857:	xchg   edx,eax
  41a858:	fs mov bl,0xfc
  41a85b:	leave  
  41a85c:	sbb    esp,DWORD PTR [edi-0x51d0c091]
  41a862:	ficomp DWORD PTR [ebx+eiz*4+0x6d18fe31]
  41a869:	push   ebp
  41a86a:	rcr    BYTE PTR [ecx-0x19],1
  41a86d:	push   esp
  41a86e:	xchg   esi,eax
  41a86f:	xor    eax,0x2c17a9f8
  41a874:	sub    ch,BYTE PTR [ebx]
  41a876:	jne    0x41a88a
  41a878:	add    al,0x1e
  41a87a:	adc    ch,ch
  41a87c:	xor    BYTE PTR [esi+0x48e103a],bh
  41a882:	mov    al,0xb6
  41a884:	les    edi,FWORD PTR [edx-0x15]
  41a887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a888:	jb     0x41a889
  41a88a:	or     DWORD PTR [ebp-0x6256e7d3],esp
  41a890:	sbb    ecx,DWORD PTR [ebp-0x6f6b6062]
  41a896:	std    
  41a897:	mov    ebx,0x1f3a89f9
  41a89c:	scas   eax,DWORD PTR es:[edi]
  41a89d:	(bad)  
  41a89e:	outs   dx,BYTE PTR ds:[esi]
  41a89f:	jle    0x41a8cf
  41a8a1:	popf   
  41a8a2:	sbb    ch,dl
  41a8a4:	mov    WORD PTR [edi-0x4],?
  41a8a7:	sbb    ebp,DWORD PTR [ebx+eax*8-0x34]
  41a8ab:	xor    esi,0x5
  41a8ae:	xor    BYTE PTR [ebp+0x1c],dh
  41a8b1:	pop    ecx
  41a8b2:	cdq    
  41a8b3:	cmp    ecx,DWORD PTR [esi-0x5713084c]
  41a8b9:	test   ebx,0x2209f985
  41a8bf:	lds    edi,FWORD PTR [ecx-0x42]
  41a8c2:	xchg   edi,eax
  41a8c3:	sbb    eax,0x5608339d
  41a8c8:	lea    ebp,ds:0x47a4dc52
  41a8ce:	inc    DWORD PTR [eax]
  41a8d0:	call   0x14760118
  41a8d5:	js     0x41a885
  41a8d7:	addr16 ret 0xe24f
  41a8db:	loopne 0x41a927
  41a8dd:	mov    dh,0x95
  41a8df:	push   ebp
  41a8e0:	mov    al,0xea
  41a8e2:	call   0x9b57d960
  41a8e7:	mov    cl,ah
  41a8e9:	je     0x41a924
  41a8eb:	add    BYTE PTR [eax+0x36],bh
  41a8ee:	add    al,0xe0
  41a8f0:	inc    eax
  41a8f1:	rcl    cl,cl
  41a8f3:	mov    ecx,0x21e1f833
  41a8f8:	sub    eax,0xcd81f86d
  41a8fd:	fcomp  QWORD PTR [edi-0x26]
  41a900:	shl    DWORD PTR [ebx+0x52b7553f],1
  41a906:	inc    ebp
  41a907:	cwde   
  41a908:	inc    esi
  41a909:	clc    
  41a90a:	out    dx,eax
  41a90b:	or     eax,0x4a3eba5e
  41a910:	xor    eax,0x183a02dd
  41a915:	pop    ebp
  41a916:	push   ss
  41a917:	mov    al,0x45
  41a919:	fs test eax,0x4396285a
  41a91f:	stc    
  41a920:	push   ebx
  41a921:	inc    esi
  41a922:	xor    DWORD PTR [ecx+0x3d50c46a],ecx
  41a928:	je     0x41a8ea
  41a92a:	pop    ebx
  41a92b:	or     DWORD PTR [eax+ebp*2-0x53],edx
  41a92f:	jmp    0x41a987
  41a931:	or     esp,DWORD PTR [ecx]
  41a933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a934:	push   0x77
  41a936:	or     edi,ecx
  41a938:	sahf   
  41a939:	push   0xd88c2fc5
  41a93e:	and    DWORD PTR [edi-0x63],esp
  41a941:	shl    DWORD PTR [ecx+0x6e],0xb
  41a945:	in     eax,0x8c
  41a947:	mov    bh,0x3d
  41a949:	outs   dx,BYTE PTR ds:[esi]
  41a94a:	push   ds
  41a94b:	fdivr  QWORD PTR [eax+0x595a67be]
  41a951:	sbb    DWORD PTR [eax+edi*2-0x37],ebp
  41a955:	dec    eax
  41a956:	jo     0x41a9bd
  41a958:	enter  0x125c,0x25
  41a95c:	pop    esp
  41a95d:	ins    DWORD PTR es:[edi],dx
  41a95e:	xchg   ebp,eax
  41a95f:	pop    es
  41a960:	jl     0x41a90c
  41a962:	in     al,dx
  41a963:	adc    al,0xf
  41a965:	loopne 0x41a9a4
  41a967:	xor    al,0xb4
  41a969:	push   0xa607f2d1
  41a96e:	call   0xc24d:0x4719b827
  41a975:	xchg   ebp,eax
  41a976:	vpmulhw ymm7,ymm4,YMMWORD PTR [ebx]
  41a97a:	leave  
  41a97b:	sbb    bl,BYTE PTR [edx+0x2713dfb8]
  41a981:	inc    edi
  41a982:	cmp    dl,BYTE PTR [esi-0x2ee566a5]
  41a988:	mov    ecx,0xf8425d30
  41a98d:	cwde   
  41a98e:	fsub   st,st(6)
  41a990:	mov    edi,0x97a4e01f
  41a995:	xchg   edi,eax
  41a996:	push   ecx
  41a997:	cmc    
  41a998:	leave  
  41a999:	push   edi
  41a99a:	xor    ch,bh
  41a99c:	dec    ebx
  41a99d:	jge    0x41a9cc
  41a99f:	sub    BYTE PTR [edi+esi*2-0x4d],bh
  41a9a3:	retf   
  41a9a4:	pop    es
  41a9a5:	mov    ecx,0x2f60344d
  41a9aa:	repz dec eax
  41a9ac:	(bad)  
  41a9ad:	and    dl,BYTE PTR [esi-0x5c]
  41a9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b1:	jle    0x41a9bd
  41a9b3:	ins    DWORD PTR es:[edi],dx
  41a9b4:	xchg   ebp,eax
  41a9b6:	(bad)  
  41a9b7:	mov    ch,0x43
  41a9b9:	mov    bh,0x37
  41a9bb:	inc    esp
  41a9bc:	int    0xdb
  41a9be:	stos   BYTE PTR es:[edi],al
  41a9bf:	sub    BYTE PTR [ebp+0x5df2ec78],cl
  41a9c5:	out    0x48,eax
  41a9c7:	into   
  41a9c8:	sub    esp,DWORD PTR [esi+0x3f8d49e6]
  41a9ce:	pop    eax
  41a9cf:	xchg   ebx,eax
  41a9d0:	pop    ecx
  41a9d1:	xchg   ecx,eax
  41a9d2:	(bad)  
  41a9d4:	or     BYTE PTR [eax],dl
  41a9d6:	pop    edx
  41a9d7:	jae    0x41aa36
  41a9d9:	inc    ebx
  41a9da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9db:	xchg   DWORD PTR [ebx+0x11],esp
  41a9de:	dec    eax
  41a9df:	mov    ds:0x153946ba,al
  41a9e4:	rcr    DWORD PTR [eax+0x7e9811dc],0x98
  41a9eb:	rcl    BYTE PTR [esi],0xb2
  41a9ee:	shr    DWORD PTR [eax-0x621f8c1a],cl
  41a9f4:	inc    ebx
  41a9f5:	mov    ebx,0x308fbbbe
  41a9fa:	fimul  DWORD PTR [esi]
  41a9fc:	xor    eax,0x8df8c3f1
  41aa01:	out    0x82,eax
  41aa03:	or     dh,BYTE PTR [esi]
  41aa05:	sti    
  41aa06:	cmp    ebx,DWORD PTR [eax]
  41aa08:	cli    
  41aa09:	and    eax,0xdb9a3e0e
  41aa0e:	fucom  st(7)
  41aa10:	and    edx,DWORD PTR [ebp-0x3f]
  41aa13:	or     cl,cl
  41aa15:	test   eax,0xf8ae25f6
  41aa1a:	push   edx
  41aa1b:	test   BYTE PTR [ecx+0x4b03d78f],0x51
  41aa22:	out    dx,al
  41aa23:	or     ah,al
  41aa25:	xchg   DWORD PTR ds:0x7658c6f5,ebx
  41aa2b:	mov    BYTE PTR [edx+edx*2-0x623a1152],bl
  41aa32:	push   es
  41aa33:	aas    
  41aa34:	mov    ebx,0x46b1a054
  41aa39:	addr16 test al,0x27
  41aa3c:	fist   WORD PTR [eax]
  41aa3e:	fstp   TBYTE PTR [edi-0x48]
  41aa41:	sub    dl,dh
  41aa43:	and    esi,esp
  41aa45:	lds    edi,FWORD PTR [edi-0x77]
  41aa48:	idiv   bh
  41aa4a:	push   edi
  41aa4b:	cmp    eax,esi
  41aa4d:	fs dec edi
  41aa4f:	xor    eax,0x9fa5c429
  41aa54:	jnp    0x41a9fb
  41aa56:	mov    ds:0xd58949b4,eax
  41aa5b:	mov    ebp,0xa78bfddb
  41aa60:	mov    DWORD PTR [edx+0x57cdc956],edi
  41aa66:	or     al,0xe0
  41aa68:	jb     0x41aa93
  41aa6a:	aas    
  41aa6b:	lds    esp,FWORD PTR [edx]
  41aa6d:	fldenv [ebp+0x6316b6ed]
  41aa73:	das    
  41aa74:	loopne 0x41aa0c
  41aa76:	cmp    eax,0xf5071765
  41aa7b:	adc    al,0x4e
  41aa7d:	lea    ebx,[esi]
  41aa7f:	jne    0x41aa25
  41aa81:	or     al,0xd8
  41aa83:	add    al,0xd9
  41aa85:	daa    
  41aa86:	std    
  41aa87:	dec    esp
  41aa88:	mov    eax,0x1acb0534
  41aa8d:	jmp    0xff8c:0x33b91e09
  41aa94:	sbb    al,0xab
  41aa96:	shl    BYTE PTR [ebp+edi*8+0x1d],1
  41aa9a:	in     al,0xa1
  41aa9c:	cmp    BYTE PTR [edi+0x3c2bf34f],0x51
  41aaa3:	test   al,0xdd
  41aaa5:	or     esp,DWORD PTR [eax]
  41aaa7:	inc    edx
  41aaa8:	(bad)  
  41aaa9:	xor    DWORD PTR [esi+ebp*8+0x2f59a7d1],ecx
  41aab0:	mov    ecx,0x39ae2af0
  41aab5:	mov    ecx,DWORD PTR [ebx]
  41aab7:	or     BYTE PTR [edx+0x8124eac],0x80
  41aabe:	cdq    
  41aabf:	inc    esp
  41aac0:	mov    esi,0xe5909e6d
  41aac5:	mov    eax,0xf06a385f
  41aaca:	or     eax,0x18f74727
  41aacf:	add    ecx,DWORD PTR [ebp+0x55263c24]
  41aad5:	or     esp,esi
  41aad7:	mov    ebp,0xba53643
  41aadc:	inc    ebx
  41aadd:	push   0x78ac0730
  41aae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aae4:	fdiv   DWORD PTR [esi]
  41aae6:	out    dx,eax
  41aae7:	cmc    
  41aae8:	or     eax,0x4
  41aaeb:	cmp    al,0x80
  41aaed:	mov    cl,0xe8
  41aaef:	add    ebx,edi
  41aaf1:	dec    ebx
  41aaf2:	mov    ebx,0xa72465f5
  41aaf7:	aaa    
  41aaf8:	jae    0x41ab3e
  41aafa:	sub    esi,edx
  41aafc:	jns    0x41aaf6
  41aafe:	arpl   bp,dx
  41ab00:	dec    ebp
  41ab01:	(bad)  
  41ab02:	jle    0x41ab38
  41ab04:	loop   0x41aa9a
  41ab06:	out    0x80,eax
  41ab08:	(bad)  [ecx-0x5d]
  41ab0b:	cmp    edi,DWORD PTR [esi+ebp*4-0x791856b4]
  41ab12:	call   0xce25:0x67a682f5
  41ab19:	jmp    0x52db:0xd6f725b8
  41ab20:	push   esi
  41ab21:	fst    QWORD PTR [ebx-0x5a29decc]
  41ab27:	(bad)  
  41ab28:	ds aas 
  41ab2a:	xchg   ebp,eax
  41ab2b:	sbb    al,0xc9
  41ab2d:	lods   eax,DWORD PTR ds:[esi]
  41ab2e:	jp     0x41aaf7
  41ab30:	mov    dh,0x90
  41ab32:	sub    ecx,edi
  41ab34:	outs   dx,BYTE PTR ds:[esi]
  41ab35:	xor    bl,ah
  41ab37:	pop    eax
  41ab38:	(bad)  [ebp-0x71ff166d]
  41ab3e:	sar    DWORD PTR [eax-0x4],0x59
  41ab42:	jne    0x41aac8
  41ab44:	stos   DWORD PTR es:[di],eax
  41ab46:	test   BYTE PTR [edx-0x3aea6e89],ch
  41ab4c:	sbb    eax,0xc0919be7
  41ab51:	dec    esp
  41ab52:	in     eax,dx
  41ab53:	inc    esi
  41ab54:	fcomp  QWORD PTR [ecx]
  41ab56:	call   0xadcc:0xdb61f427
  41ab5d:	jmp    0x41ab8b
  41ab5f:	fild   WORD PTR [edx+esi*1-0x54]
  41ab63:	mov    edi,0x16b77ed0
  41ab68:	test   dh,bh
  41ab6a:	retf   
  41ab6b:	add    DWORD PTR [ecx-0x24b9938],esi
  41ab71:	xor    al,0x4
  41ab73:	test   DWORD PTR [edi-0x44],esp
  41ab76:	xor    al,cl
  41ab78:	mov    BYTE PTR [ebx],ch
  41ab7a:	push   es
  41ab7b:	and    DWORD PTR [ebx-0x7a34e124],esi
  41ab81:	inc    ebp
  41ab82:	xor    al,0x47
  41ab84:	ret    0xf30c
  41ab87:	js     0x41ab57
  41ab89:	sub    ch,BYTE PTR [ebx*8-0x54b75be5]
  41ab90:	sar    DWORD PTR [eax+0x36],0xd1
  41ab94:	dec    esp
  41ab95:	cmp    ah,cl
  41ab97:	sbb    eax,0x7e6c1806
  41ab9c:	rcl    bh,0xf9
  41ab9f:	shr    BYTE PTR [ebx],0xd7
  41aba2:	mov    esi,0x9fbec3c0
  41aba7:	imul   esp,DWORD PTR [ebx],0x89666e52
  41abad:	jle    0x41abe2
  41abaf:	stos   DWORD PTR es:[edi],eax
  41abb0:	add    dh,BYTE PTR [eax-0x28]
  41abb3:	or     BYTE PTR [edx],cl
  41abb5:	daa    
  41abb6:	inc    esi
  41abb7:	xchg   eax,edi
  41abb9:	sahf   
  41abba:	in     eax,dx
  41abbb:	pop    edx
  41abbc:	push   edi
  41abbd:	retf   
  41abbe:	sahf   
  41abbf:	xchg   ebp,eax
  41abc1:	inc    ecx
  41abc2:	lea    esp,[ebp-0x4dfc5034]
  41abc8:	leave  
  41abc9:	loopne 0x41ac2a
  41abcb:	jmp    0x57a3:0xfbd77911
  41abd2:	lock stos BYTE PTR es:[edi],al
  41abd4:	mov    esi,0x76c50de6
  41abd9:	cmp    ecx,DWORD PTR [eax]
  41abdb:	jo     0x41abc4
  41abdd:	xor    BYTE PTR [ebp+0x3eb6a1e6],dl
  41abe3:	sub    DWORD PTR [eax-0x444907dd],edi
  41abe9:	dec    ebx
  41abea:	sbb    BYTE PTR [ebx-0x63],0x69
  41abee:	push   ecx
  41abef:	adc    ebp,DWORD PTR [ecx]
  41abf1:	cmp    DWORD PTR [ebp-0x426569a2],0xe7cac454
  41abfb:	pop    ss
  41abfc:	add    al,0xf1
  41abfe:	mov    dh,ch
  41ac00:	pop    ss
  41ac01:	sub    ebx,ecx
  41ac03:	dec    edi
  41ac04:	push   edx
  41ac05:	pop    esp
  41ac06:	daa    
  41ac07:	outs   dx,DWORD PTR ds:[esi]
  41ac08:	sbb    al,0x6e
  41ac0a:	push   eax
  41ac0b:	sub    eax,0x30eed374
  41ac10:	jg     0x41ac6c
  41ac12:	sbb    dl,BYTE PTR [ebx]
  41ac14:	imul   esp,DWORD PTR [edi+0x39a9b5fa],0xdedbb295
  41ac1e:	add    BYTE PTR ds:0xe60737f5,ah
  41ac24:	rcl    DWORD PTR [ecx],0x8e
  41ac27:	sbb    edx,0x1a2bfc04
  41ac2d:	popf   
  41ac2e:	out    0x85,al
  41ac30:	xor    BYTE PTR [eax+0x76],bl
  41ac33:	sub    edi,DWORD PTR [edi]
  41ac35:	imul   eax,DWORD PTR [eax],0x18
  41ac38:	pusha  
  41ac39:	mov    esi,0x5bb3d78c
  41ac3e:	aam    0x33
  41ac40:	popaw  
  41ac42:	xchg   ebp,eax
  41ac43:	aam    0xfc
  41ac45:	jg     0x41ac04
  41ac47:	clc    
  41ac48:	cmp    ecx,ebp
  41ac4a:	push   ebx
  41ac4b:	fiadd  DWORD PTR [edx+0x22]
  41ac4e:	aas    
  41ac4f:	dec    ebp
  41ac50:	cwde   
  41ac51:	out    0xa8,al
  41ac53:	dec    ebx
  41ac54:	retf   
  41ac55:	jmp    0x4429:0x13b2da96
  41ac5c:	iret   
  41ac5d:	mov    ds:0x7c872d20,eax
  41ac62:	sbb    BYTE PTR [eax-0x6c54a9ef],ch
  41ac68:	dec    DWORD PTR [edi-0x25aa7178]
  41ac6e:	je     0x41ac17
  41ac70:	test   eax,0x991a6bea
  41ac75:	mov    esi,0xf84ce671
  41ac7a:	jb     0x41aca3
  41ac7c:	push   0x45
  41ac7e:	enter  0x46be,0xa3
  41ac82:	adc    eax,0x3038db57
  41ac87:	jno    0x41ac68
  41ac89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac8a:	jmp    0xaf4e54f6
  41ac8f:	dec    ebx
  41ac90:	mov    ds:0xf260eaf2,eax
  41ac95:	dec    edi
  41ac96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac97:	popf   
  41ac98:	gs jno 0x41aca6
  41ac9b:	in     al,0x75
  41ac9d:	pusha  
  41ac9e:	imul   DWORD PTR [ebx]
  41aca0:	scas   al,BYTE PTR es:[edi]
  41aca1:	or     al,0x25
  41aca3:	xchg   ecx,eax
  41aca4:	cmc    
  41aca5:	and    BYTE PTR [esi],ah
  41aca7:	loop   0x41acc8
  41aca9:	add    eax,0x532f4c21
  41acae:	ror    BYTE PTR [ebp-0x3b],1
  41acb1:	pushf  
  41acb2:	mov    esi,0xf35bdf1e
  41acb7:	dec    edx
  41acb8:	pop    DWORD PTR [edx-0x21f39523]
  41acbe:	mov    ?,WORD PTR [ecx+0x22a0e03b]
  41acc4:	push   ds
  41acc5:	(bad)  
  41acc6:	scas   eax,DWORD PTR es:[edi]
  41acc7:	push   0xcc7762e3
  41accc:	shl    BYTE PTR [edi+0x64],cl
  41accf:	mov    ecx,0xad03732b
  41acd4:	mov    cl,bh
  41acd6:	shr    BYTE PTR [edx],0x10
  41acd9:	pushf  
  41acda:	jb     0x41acfc
  41acdc:	mov    ecx,0xac9c88e
  41ace1:	jg     0x41acaf
  41ace3:	xor    BYTE PTR [edx-0x752e989a],dl
  41ace9:	xchg   ebp,eax
  41acea:	jg     0x41ac82
  41acec:	sti    
  41aced:	xchg   ebp,ebp
  41acef:	inc    ebx
  41acf0:	mov    al,0x53
  41acf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acf3:	jmp    0x6ce30f81
  41acf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acf9:	int    0x67
  41acfb:	sbb    eax,DWORD PTR [ecx+0x5a134e0c]
  41ad01:	out    0xaa,eax
  41ad03:	fistp  DWORD PTR [edx-0x1abdcc25]
  41ad09:	pop    edx
  41ad0a:	ds push esi
  41ad0c:	mov    ecx,0x94634b18
  41ad11:	cmp    ebx,DWORD PTR ds:0x18e2c644
  41ad17:	fld    QWORD PTR [eax]
  41ad19:	fs pushf 
  41ad1b:	(bad)  
  41ad1c:	push   0x6e
  41ad1e:	fimul  WORD PTR [edx-0x3c943328]
  41ad24:	jbe    0x41ad33
  41ad26:	fdiv   DWORD PTR ds:0x93a9ba43
  41ad2c:	mov    dl,0xa
  41ad2e:	test   DWORD PTR [edi],ebp
  41ad30:	mov    WORD PTR [edi],ds
  41ad32:	retf   0xff3b
  41ad35:	jle    0x41ad23
  41ad37:	mov    bl,0x3b
  41ad39:	loopne 0x41acdc
  41ad3b:	test   BYTE PTR [ecx],dh
  41ad3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad3e:	or     eax,0xc9f281d4
  41ad43:	cmp    al,0x5d
  41ad45:	ror    BYTE PTR [ebp+0x263b41bc],1
  41ad4b:	bound  edi,QWORD PTR [edi]
  41ad4d:	cwde   
  41ad4e:	mov    cl,0xc0
  41ad50:	mov    ebx,0x9d86ebda
  41ad55:	lea    ebx,[esi+edi*8+0x12]
  41ad59:	push   eax
  41ad5a:	sub    DWORD PTR [ecx],ecx
  41ad5c:	mov    DWORD PTR [edx+0x11],0xef6b2a10
  41ad63:	imul   ebp,ecx,0x19
  41ad66:	gs cmp eax,0x9877bb1b
  41ad6c:	ret    0x3d49
  41ad6f:	pop    edi
  41ad70:	ffreep st(5)
  41ad72:	cmp    ebp,eax
  41ad74:	sahf   
  41ad75:	push   eax
  41ad76:	cmc    
  41ad77:	and    eax,0x4257cece
  41ad7c:	cwde   
  41ad7d:	sub    BYTE PTR [esi-0x27dfa6d7],al
  41ad83:	sub    dl,BYTE PTR [edx]
  41ad85:	ret    
  41ad86:	imul   ecx,ecx,0xf510ed07
  41ad8c:	ja     0x41ad66
  41ad8e:	bound  ecx,QWORD PTR [ecx-0x6d]
  41ad91:	mov    cl,0x4f
  41ad93:	es aam 0x5
  41ad96:	mov    esi,0x2b54731f
  41ad9b:	push   cs
  41ad9c:	or     BYTE PTR [ecx-0x59edc2cf],0x59
  41ada3:	ja     0x41ad4c
  41ada5:	push   ss
  41ada6:	push   edx
  41ada7:	pushf  
  41ada8:	push   DWORD PTR [edi-0x7d]
  41adab:	jp     0x41ad8f
  41adad:	mov    esi,DWORD PTR [edi+0x3d]
  41adb0:	hlt    
  41adb1:	(bad)  
  41adb2:	mov    edx,0x8f50d207
  41adb7:	and    esi,DWORD PTR [ebp+0x24]
  41adba:	cmp    al,0xe7
  41adbc:	jl     0x41ada8
  41adbe:	dec    ecx
  41adbf:	ss jp  0x41ad5a
  41adc2:	(bad)  
  41adc3:	xchg   ebx,eax
  41adc4:	and    DWORD PTR [bp+si-0x26],ebx
  41adc8:	add    dl,BYTE PTR [ecx+0x5a]
  41adcb:	push   ds
  41adcc:	(bad)
  41adcf:	out    dx,al
  41add0:	std    
  41add1:	and    al,BYTE PTR [ebp+0x6810388]
  41add7:	bound  ebp,QWORD PTR [esi]
  41add9:	sbb    eax,0xd70ce91b
  41adde:	sub    esi,0x33e4f0f4
  41ade4:	mov    ?,WORD PTR [esi+0x3d00fab0]
  41adea:	fs fwait
  41adec:	adc    ecx,DWORD PTR [edx-0x486b4849]
  41adf2:	dec    esp
  41adf3:	xor    ebp,DWORD PTR [eax+0x8]
  41adf6:	dec    ebp
  41adf7:	jno    0x41ae69
  41adf9:	imul   ebx,DWORD PTR [ebx],0x25
  41adfc:	clc    
  41adfd:	sbb    BYTE PTR [eax+0x15],ch
  41ae00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae01:	retf   0xbbab
  41ae04:	inc    edi
  41ae05:	scas   eax,DWORD PTR es:[edi]
  41ae06:	pop    ds
  41ae07:	popa   
  41ae08:	xor    ecx,0xb74c1cfc
  41ae0e:	test   DWORD PTR [esi-0x41],edi
  41ae11:	cmp    ah,BYTE PTR [edx+0x26]
  41ae14:	fwait
  41ae15:	xchg   esp,eax
  41ae16:	jo     0x41add3
  41ae18:	in     al,dx
  41ae19:	and    ebx,esi
  41ae1b:	xchg   esp,eax
  41ae1c:	inc    ebx
  41ae1d:	cmp    DWORD PTR [ecx-0x5f],ecx
  41ae20:	mov    bl,BYTE PTR [ebx-0x3b]
  41ae23:	add    eax,DWORD PTR [eax-0x8]
  41ae26:	mov    al,0xab
  41ae28:	and    BYTE PTR [ecx+0x59],dh
  41ae2b:	cmc    
  41ae2c:	ret    0x19c7
  41ae2f:	repnz aad 0x32
  41ae32:	neg    DWORD PTR [ebx]
  41ae34:	jns    0x41ae2e
  41ae36:	and    al,0x5
  41ae38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae39:	test   DWORD PTR [esi],edi
  41ae3b:	stos   DWORD PTR es:[edi],eax
  41ae3c:	fdiv   DWORD PTR [ebp+0xf2eb94b]
  41ae42:	shr    al,1
  41ae44:	jns    0x41ae6d
  41ae46:	jbe    0x41ae9a
  41ae48:	and    al,0xe9
  41ae4a:	hlt    
  41ae4b:	loope  0x41ae7e
  41ae4d:	dec    edi
  41ae4e:	or     ch,BYTE PTR [edi+esi*1]
  41ae51:	mov    ch,0x72
  41ae53:	and    cl,BYTE PTR [esi]
  41ae55:	and    eax,0xc48811f
  41ae5a:	mov    bh,0xec
  41ae5c:	mov    bl,0x47
  41ae5e:	pop    esp
  41ae5f:	mov    esp,0xa7806b9f
  41ae64:	jmp    0x41ae57
  41ae66:	and    bl,BYTE PTR [esi+0x77]
  41ae69:	sbb    cl,BYTE PTR [ebx-0x1c]
  41ae6c:	xchg   edx,eax
  41ae6d:	jno    0x41aecd
  41ae6f:	pop    edx
  41ae70:	sub    BYTE PTR [ecx+esi*1-0x1a0aae1f],bh
  41ae77:	test   BYTE PTR [edi-0xa7307d7],dh
  41ae7d:	inc    edx
  41ae7e:	jno    0x41ae64
  41ae80:	daa    
  41ae81:	(bad)  
  41ae83:	add    eax,0x6a3f473a
  41ae88:	loop   0x41ae15
  41ae8a:	add    cl,ch
  41ae8c:	sub    DWORD PTR [esi],edi
  41ae8e:	dec    ecx
  41ae8f:	jg     0x41aec2
  41ae91:	add    esp,DWORD PTR [esi-0x3977efb6]
  41ae97:	and    DWORD PTR [edi-0x4b678ed3],esi
  41ae9d:	outs   dx,DWORD PTR ds:[esi]
  41ae9e:	mov    al,0x45
  41aea0:	scas   al,BYTE PTR es:[edi]
  41aea1:	sbb    ch,al
  41aea3:	add    al,0xa2
  41aea5:	mov    ch,0xda
  41aea7:	test   eax,0x4161cb33
  41aeac:	ret    
  41aead:	scas   eax,DWORD PTR es:[edi]
  41aeae:	push   esp
  41aeaf:	fsubr  DWORD PTR [ecx-0x54272349]
  41aeb5:	dec    esi
  41aeb6:	jae    0x41af0e
  41aeb8:	ins    DWORD PTR es:[edi],dx
  41aeb9:	jno    0x41ae99
  41aebb:	mov    ?,edx
  41aebd:	mov    ebp,0x11d12d97
  41aec2:	in     eax,0xc
  41aec4:	jnp    0x41ae4b
  41aec6:	xchg   ebp,eax
  41aec7:	push   ebx
  41aec8:	pop    ds
  41aec9:	aam    0x60
  41aecb:	sbb    DWORD PTR [ebx+0x29],esi
  41aece:	and    eax,0x6ab811e3
  41aed3:	imul   ebp,DWORD PTR [ebp-0x3],0xf4305f27
  41aeda:	inc    ecx
  41aedb:	or     eax,0xc58c1fef
  41aee0:	add    ebp,DWORD PTR ds:0xab221f9
  41aee6:	(bad)  
  41aee7:	cld    
  41aee8:	mov    ds:0xea01c4b9,eax
  41aeed:	(bad)  
  41aeef:	sbb    DWORD PTR [ecx-0x21ad5ef8],ebx
  41aef5:	cmp    eax,0x26918f82
  41aefa:	clc    
  41aefb:	mov    edi,0x61311818
  41af00:	ret    
  41af01:	xchg   BYTE PTR [ecx-0x10],cl
  41af04:	or     dl,dl
  41af06:	jge    0x41ae94
  41af08:	xchg   edx,eax
  41af09:	ss sub eax,0x2e0102d2
  41af0f:	xchg   BYTE PTR [ebp-0x3a02e31f],ah
  41af15:	push   ds
  41af16:	adc    BYTE PTR [ecx+0x77],ch
  41af19:	cmp    eax,0x4ab123d9
  41af1e:	call   0xa8d2975a
  41af23:	jb     0x41af71
  41af25:	in     eax,0x7f
  41af27:	jbe    0x41af15
  41af29:	xor    al,0x71
  41af2b:	sbb    esi,DWORD PTR [esi-0x55]
  41af2e:	cmp    al,0xcd
  41af30:	sbb    eax,0xa25dda7f
  41af35:	pop    es
  41af36:	cwde   
  41af37:	mov    al,ds:0x95842ab0
  41af3c:	cmc    
  41af3d:	mov    dh,0x66
  41af3f:	xchg   edi,eax
  41af40:	xor    al,0x62
  41af42:	in     al,dx
  41af43:	out    0x53,al
  41af45:	and    DWORD PTR [edx],ecx
  41af47:	pop    ds
  41af48:	gs or  bl,ch
  41af4b:	push   ebp
  41af4c:	popf   
  41af4d:	lds    ebx,FWORD PTR [eax-0x1e]
  41af50:	or     ecx,DWORD PTR [ebp-0x2b]
  41af53:	dec    esp
  41af54:	test   al,0x8
  41af56:	lds    edi,FWORD PTR [ecx-0x60954be3]
  41af5c:	ja     0x41afc2
  41af5e:	std    
  41af5f:	cmp    bl,BYTE PTR [esi-0x6d]
  41af62:	push   edi
  41af63:	es pop ebp
  41af65:	and    eax,eax
  41af67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af68:	and    DWORD PTR [edx],ecx
  41af6a:	jl     0x41af7c
  41af6c:	aas    
  41af6d:	cs inc ebp
  41af6f:	out    0x16,eax
  41af71:	sub    BYTE PTR [ecx-0x74],dh
  41af74:	push   ecx
  41af75:	bound  ecx,QWORD PTR [eax+esi*4-0x5]
  41af79:	push   esp
  41af7a:	cmp    ecx,ecx
  41af7c:	into   
  41af7d:	or     BYTE PTR [edx-0x75],ch
  41af80:	callw  0xbceb
  41af84:	(bad)  
  41af85:	sub    edx,DWORD PTR [eax]
  41af87:	pop    ebp
  41af88:	lods   eax,DWORD PTR ds:[esi]
  41af89:	add    eax,ebx
  41af8b:	xchg   ecx,eax
  41af8c:	mov    bl,0x87
  41af8e:	scas   eax,DWORD PTR es:[edi]
  41af8f:	pop    edx
  41af90:	arpl   WORD PTR [ebx],bx
  41af92:	add    al,0x8e
  41af94:	mov    bh,0x4a
  41af96:	push   es
  41af97:	and    BYTE PTR [ebp+0x9],dl
  41af9a:	or     dl,ah
  41af9c:	loope  0x41afd6
  41af9e:	adc    dl,BYTE PTR [edx]
  41afa0:	adc    eax,DWORD PTR [ebx]
  41afa2:	adc    eax,0xca0f4fd9
  41afa7:	fild   WORD PTR [eax+0x59]
  41afaa:	sub    eax,0xa84d77aa
  41afaf:	lds    eax,FWORD PTR [eax]
  41afb1:	pop    ebp
  41afb2:	stos   BYTE PTR es:[edi],al
  41afb3:	xor    eax,0x766a67a
  41afb8:	xchg   BYTE PTR [esi-0x6f513b56],cl
  41afbe:	and    eax,0xeb16e29c
  41afc3:	aad    0x13
  41afc5:	xchg   BYTE PTR [edi-0x60],ah
  41afc8:	mov    edx,0x98e61bd8
  41afcd:	ror    DWORD PTR [edi-0x59],cl
  41afd0:	out    0x83,al
  41afd2:	mov    bl,0x7e
  41afd4:	sbb    edi,DWORD PTR [edx]
  41afd6:	xor    DWORD PTR [edx-0x70850a54],ebp
  41afdc:	(bad)  
  41afdd:	dec    esp
  41afde:	test   esp,edx
  41afe0:	gs call 0x3409:0x681ac3ff
  41afe8:	or     BYTE PTR ss:[ecx+0x24],dl
  41afec:	inc    eax
  41afed:	(bad)  
  41afee:	cmc    
  41afef:	test   ah,0xe
  41aff2:	mov    ah,0xbc
  41aff4:	pop    eax
  41aff5:	jnp    0x41afff
  41aff7:	add    DWORD PTR [eax-0x74],eax
  41affa:	js     0x41b078
  41affc:	(bad)  
  41affd:	pushf  
  41affe:	dec    ebx
  41afff:	xchg   ebx,eax
  41b000:	pop    edx
  41b001:	adc    BYTE PTR [ebx],cl
  41b003:	imul   esp,DWORD PTR [edx+0x34],0xda11b88d
  41b00a:	add    DWORD PTR [eax+0x60],edx
  41b00d:	add    dl,cl
  41b00f:	(bad)  
  41b010:	xor    ch,bl
  41b012:	hlt    
  41b013:	scas   al,BYTE PTR es:[edi]
  41b014:	mov    dh,0x5f
  41b016:	ror    DWORD PTR ss:[edx+0x5a],cl
  41b01a:	popa   
  41b01b:	jbe    0x41afc8
  41b01d:	mov    dl,0x64
  41b01f:	xor    DWORD PTR [ebx],esi
  41b021:	add    al,0xcc
  41b023:	jge    0x41b074
  41b025:	jbe    0x41b06e
  41b027:	shl    DWORD PTR [edi-0x28],0x8d
  41b02b:	ins    DWORD PTR es:[edi],dx
  41b02c:	cmp    BYTE PTR [ebx-0xe],0x23
  41b030:	cmp    DWORD PTR [ebp-0x56],0xfffffff2
  41b034:	or     al,0x72
  41b036:	cmp    bh,0x91
  41b039:	sti    
  41b03a:	in     eax,dx
  41b03b:	and    esp,esi
  41b03d:	test   BYTE PTR [ebx],0x23
  41b040:	mov    ebx,0xf7e1f212
  41b045:	and    DWORD PTR [ebx-0x2b],ebp
  41b048:	shl    DWORD PTR [esi],0x32
  41b04b:	and    al,0x17
  41b04d:	sub    al,0xe7
  41b04f:	fidivr DWORD PTR [edi+0x77]
  41b052:	pop    edx
  41b053:	int3   
  41b054:	push   DWORD PTR [edx]
  41b056:	js     0x41b037
  41b058:	aad    0x32
  41b05a:	pop    esp
  41b05b:	push   0xe85b182b
  41b060:	xor    bl,bl
  41b062:	jmp    FWORD PTR [edi-0x1e]
  41b065:	xchg   ah,ah
  41b067:	push   cs
  41b068:	mov    ebx,edx
  41b06a:	xor    eax,0x6f401496
  41b06f:	xor    eax,0x4a112e3
  41b074:	or     dh,cl
  41b076:	bound  ecx,QWORD PTR [edi]
  41b078:	or     eax,0x8e1553a2
  41b07d:	adc    al,0x89
  41b07f:	push   esi
  41b080:	dec    esi
  41b081:	xor    eax,0x3a7a0634
  41b086:	xchg   esi,eax
  41b087:	mov    ah,0xb6
  41b089:	jge    0x41b031
  41b08b:	inc    esp
  41b08c:	lods   eax,DWORD PTR ds:[esi]
  41b08d:	scas   al,BYTE PTR es:[edi]
  41b08e:	adc    bl,BYTE PTR [edx-0x5d]
  41b091:	mov    esi,0xd51ecdea
  41b096:	gs inc esi
  41b098:	push   ss
  41b099:	sub    edi,DWORD PTR [ecx]
  41b09b:	lock imul ebx,esi,0x30
  41b09f:	lea    eax,[ebp-0x41]
  41b0a2:	gs inc ebx
  41b0a4:	mov    bp,0x51d5
  41b0a8:	cmp    al,0x17
  41b0aa:	jle    0x41b0c7
  41b0ac:	jns    0x41b03e
  41b0ae:	sub    DWORD PTR [edx-0x78f0ec28],0xffffffd1
  41b0b5:	or     dl,BYTE PTR [eax]
  41b0b7:	ficomp DWORD PTR [edi-0x68]
  41b0ba:	push   ds
  41b0bb:	mov    ebx,0x48dc3958
  41b0c0:	mov    ebp,0x556207c4
  41b0c5:	js     0x41b0f7
  41b0c7:	mov    al,0xd5
  41b0c9:	jmp    0xc63b0726
  41b0ce:	dec    eax
  41b0cf:	not    DWORD PTR [eax+0x69]
  41b0d2:	cld    
  41b0d3:	push   0xffffff9a
  41b0d5:	jg     0x41b05b
  41b0d7:	in     al,dx
  41b0d8:	fst    QWORD PTR [ebx+0x2360f6d4]
  41b0de:	xchg   ecx,eax
  41b0df:	or     eax,0x46538124
  41b0e4:	out    0xef,al
  41b0e6:	iret   
  41b0e7:	pop    eax
  41b0e8:	jmp    0x2d64e90c
  41b0ed:	xlat   BYTE PTR ds:[ebx]
  41b0ee:	daa    
  41b0ef:	rsqrtps xmm2,xmm2
  41b0f2:	dec    ebx
  41b0f3:	arpl   WORD PTR [ebp+0x70a93cc0],sp
  41b0f9:	mov    fs:0x4f12dca7,al
  41b0ff:	mov    ds:0xa21deac7,al
  41b104:	aaa    
  41b105:	stos   DWORD PTR es:[edi],eax
  41b106:	sar    edi,cl
  41b108:	jno    0x41b0b4
  41b10a:	stos   BYTE PTR es:[edi],al
  41b10b:	cmp    eax,0xbeffcebf
  41b110:	aad    0x49
  41b112:	jle    0x41b10e
  41b114:	pop    es
  41b115:	scas   al,BYTE PTR es:[edi]
  41b116:	ficomp WORD PTR [esi-0x46d9091b]
  41b11c:	ins    DWORD PTR es:[edi],dx
  41b11d:	mov    ebx,edx
  41b11f:	sbb    cl,BYTE PTR [edi+0x11]
  41b122:	ss add eax,0x3302de89
  41b128:	jge    0x41b121
  41b12a:	push   edx
  41b12b:	jecxz  0x41b0de
  41b12d:	push   0xa1d1bfb7
  41b132:	loopne 0x41b12d
  41b134:	lea    esp,ds:0x76eb1665
  41b13a:	stos   DWORD PTR es:[edi],eax
  41b13b:	loop   0x41b0e4
  41b13d:	xor    esp,DWORD PTR [edx]
  41b13f:	dec    ebx
  41b140:	stos   DWORD PTR es:[edi],eax
  41b141:	mov    esi,0x212010e3
  41b146:	imul   dh
  41b148:	push   cs
  41b149:	sbb    DWORD PTR [ecx+0x6d],edi
  41b14c:	jmp    0x7c17:0x84711c8f
  41b153:	push   ecx
  41b154:	rcr    BYTE PTR fs:[ecx+0x4f],cl
  41b158:	mov    ebp,0xb33c1721
  41b15d:	add    eax,0x8dcb2940
  41b162:	pop    es
  41b163:	out    0x65,al
  41b165:	ds ret 0xadb3
  41b169:	sbb    ah,dl
  41b16b:	aam    0xfd
  41b16d:	fistp  QWORD PTR [esi-0x21252098]
  41b173:	outs   dx,DWORD PTR ds:[esi]
  41b174:	xor    DWORD PTR [ebp+0x350c5956],ebx
  41b17a:	mov    DWORD PTR [eax+0x65f8f3f4],ebp
  41b180:	xor    esi,DWORD PTR [ebx]
  41b182:	sbb    ch,al
  41b184:	pop    ss
  41b185:	dec    ebx
  41b186:	jge    0x41b18e
  41b188:	add    ch,bl
  41b18a:	push   cs
  41b18b:	add    edx,0x7a2effaa
  41b191:	adc    eax,0x91495bc1
  41b196:	xor    esi,eax
  41b198:	data16 (bad) 
  41b19a:	xchg   esi,eax
  41b19b:	mov    ecx,0x24794704
  41b1a0:	retf   
  41b1a1:	push   es
  41b1a2:	mov    ds:0xb0f2ded,eax
  41b1a7:	mov    ah,0x99
  41b1a9:	cdq    
  41b1aa:	or     dl,BYTE PTR [ecx+eiz*1-0x57]
  41b1ae:	fisttp QWORD PTR [ecx+edi*8]
  41b1b1:	test   eax,0x94f54aa
  41b1b6:	dec    ebp
  41b1b7:	sbb    DWORD PTR [ebx+0x5d3e5292],0xffffff84
  41b1be:	repz cmp BYTE PTR [eax-0x5a2f4fef],al
  41b1c5:	(bad)  
  41b1c6:	cmp    al,0xc8
  41b1c8:	(bad)  
  41b1c9:	out    dx,al
  41b1ca:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b1cc:	aas    
  41b1cd:	or     ah,ah
  41b1cf:	pop    edx
  41b1d0:	mov    ah,0xdb
  41b1d2:	sbb    BYTE PTR [edx+0x4c],cl
  41b1d5:	cwde   
  41b1d6:	shl    DWORD PTR [edi-0x2c079c34],0x43
  41b1dd:	retf   0x10d
  41b1e0:	mov    ebp,0x68f7dc5d
  41b1e5:	push   edi
  41b1e6:	sub    ax,0x636e
  41b1ea:	jmp    0x137147fe
  41b1ef:	enter  0xe39b,0x5e
  41b1f3:	adc    al,bh
  41b1f5:	fimul  DWORD PTR [esi+edi*2-0x1cd430f2]
  41b1fc:	lea    ecx,[esi+ebp*8]
  41b1ff:	xchg   BYTE PTR [ebx+0x3ce3b5d],bh
  41b205:	sub    DWORD PTR [edx],edi
  41b207:	and    DWORD PTR [edi-0x1f],0x19
  41b20b:	cmp    BYTE PTR [ecx+ebx*1-0x13070299],al
  41b212:	pusha  
  41b213:	js     0x41b1f2
  41b215:	xor    BYTE PTR [ebp+0x2ffaddee],al
  41b21b:	cmp    BYTE PTR [ebp-0x77],al
  41b21e:	and    BYTE PTR [esi],0x99
  41b221:	sbb    al,0xa7
  41b223:	call   0x1ced7568
  41b228:	call   0x2c7d98ff
  41b22d:	push   es
  41b22e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b22f:	push   eax
  41b231:	xchg   edi,eax
  41b232:	mov    ebx,0x7e1b35b4
  41b237:	shl    si,cl
  41b23a:	push   0xffffff95
  41b23c:	dec    edx
  41b23d:	repnz and eax,0x30ea2638
  41b243:	mov    esi,0x7d791cb
  41b248:	sub    BYTE PTR [edx-0x27dcea72],dl
  41b24e:	lea    ecx,[edx+0x5a]
  41b251:	xor    eax,0x73ee5d7d
  41b256:	inc    eax
  41b257:	inc    eax
  41b258:	jns    0x41b200
  41b25a:	scas   eax,DWORD PTR es:[edi]
  41b25b:	pop    ebx
  41b25c:	out    dx,al
  41b25d:	push   eax
  41b25e:	shl    BYTE PTR [esi],1
  41b260:	dec    esi
  41b261:	retf   
  41b262:	dec    edi
  41b263:	dec    edx
  41b264:	push   ss
  41b265:	mov    esi,0xffc854f6
  41b26a:	cmp    DWORD PTR [ebx],ecx
  41b26c:	mov    al,BYTE PTR [ebp-0x6909f4cb]
  41b272:	sub    eax,ecx
  41b274:	mov    esp,0x40b530b7
  41b279:	stc    
  41b27a:	dec    ecx
  41b27b:	loop   0x41b299
  41b27d:	dec    edx
  41b27e:	fnstcw WORD PTR [eax+esi*1-0x217e81fe]
  41b285:	sar    BYTE PTR [edx+esi*1-0x3e],0xb1
  41b28a:	sub    edi,esi
  41b28c:	dec    esi
  41b28d:	shl    edx,0x68
  41b290:	cli    
  41b291:	rcr    dh,0xe8
  41b294:	int3   
  41b295:	jecxz  0x41b2d2
  41b297:	pop    esp
  41b298:	xchg   dl,al
  41b29a:	inc    edi
  41b29b:	cmp    eax,DWORD PTR [ecx+0x4]
  41b29e:	popf   
  41b29f:	xor    eax,0xdd51dfdf
  41b2a4:	lods   al,BYTE PTR ds:[esi]
  41b2a5:	mov    WORD PTR [ecx],cs
  41b2a7:	call   0xa73f13f0
  41b2ac:	adc    eax,0x6a5c3107
  41b2b1:	lea    ecx,[esi-0x18]
  41b2b4:	lods   eax,DWORD PTR ds:[esi]
  41b2b5:	js     0x41b335
  41b2b7:	xchg   cx,ax
  41b2b9:	cmp    eax,0x1136fb6f
  41b2be:	imul   ecx,DWORD PTR [edi+0x30],0xffffffa3
  41b2c2:	mov    esp,0xa300d930
  41b2c7:	int3   
  41b2c8:	mov    ds:0xd7725e79,al
  41b2cd:	cmc    
  41b2ce:	push   ebx
  41b2cf:	push   ecx
  41b2d0:	out    0x7b,al
  41b2d2:	dec    esi
  41b2d3:	cdq    
  41b2d4:	inc    ecx
  41b2d5:	mov    ebp,0x71a04c03
  41b2da:	cmp    DWORD PTR [ecx],ebx
  41b2dc:	cmp    edx,esp
  41b2de:	jp     0x41b2f1
  41b2e0:	cmc    
  41b2e1:	shr    dl,1
  41b2e3:	jns    0x41b2a5
  41b2e5:	inc    eax
  41b2e6:	clc    
  41b2e7:	mov    ch,0x3b
  41b2e9:	jae    0x41b302
  41b2eb:	mov    ah,0xe0
  41b2ed:	les    ebp,FWORD PTR [ebx+0x2d096972]
  41b2f3:	dec    esp
  41b2f4:	adc    al,0x93
  41b2f6:	sbb    eax,0xac0bdb64
  41b2fb:	mov    al,0x63
  41b2fd:	cmp    al,0xaa
  41b2ff:	xchg   ebp,eax
  41b300:	arpl   WORD PTR [ebx+edi*8],cx
  41b303:	mov    ds:0xcfd5eeb6,al
  41b308:	cs jno 0x41b29b
  41b30b:	push   edi
  41b30c:	cmc    
  41b30d:	cwde   
  41b30e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b30f:	adc    al,0xe4
  41b311:	es and ah,cl
  41b314:	push   0xf39fff11
  41b319:	in     al,0xc0
  41b31b:	ret    
  41b31c:	cmc    
  41b31d:	stos   BYTE PTR es:[edi],al
  41b31e:	std    
  41b31f:	and    eax,0xf8429f0a
  41b324:	jmp    0x41b331
  41b326:	or     eax,DWORD PTR [edi+0x5c]
  41b329:	lahf   
  41b32a:	adc    eax,0xb1906372
  41b32f:	push   ebp
  41b330:	mov    DWORD PTR [esi],ebx
  41b332:	pusha  
  41b333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b334:	jmp    0xa106aa5
  41b339:	dec    esp
  41b33a:	sub    BYTE PTR [ebp+eax*2+0x2ebe955b],0xdd
  41b342:	sbb    ecx,DWORD PTR [ebx-0x2a]
  41b345:	shl    DWORD PTR [ebp+0x3b],0x49
  41b349:	cmp    DWORD PTR [eax+ebx*8+0x16cc7f50],ebp
  41b350:	and    cl,BYTE PTR [ebx-0x1029e5e9]
  41b356:	cmc    
  41b357:	fbstp  TBYTE PTR [eax-0x5e]
  41b35a:	cli    
  41b35b:	cdq    
  41b35c:	inc    eax
  41b35d:	inc    edx
  41b35e:	imul   edi,DWORD PTR [ebx],0x47
  41b361:	push   edi
  41b362:	pop    ecx
  41b363:	pop    edx
  41b364:	push   ebp
  41b365:	sub    al,0xa4
  41b367:	bound  edi,QWORD PTR [eax+edi*4]
  41b36a:	test   BYTE PTR [ebp+0x58],dh
  41b36d:	adc    esp,ebp
  41b36f:	fistp  QWORD PTR [ebx]
  41b371:	push   cs
  41b372:	mov    edx,0xf28218d9
  41b377:	and    BYTE PTR [edx+0x429c3f7d],bl
  41b37d:	(bad)  
  41b37f:	inc    esp
  41b380:	fisubr WORD PTR [edi-0x6d]
  41b383:	ins    BYTE PTR es:[edi],dx
  41b384:	data16 lahf 
  41b386:	out    0xeb,eax
  41b388:	out    dx,al
  41b389:	mov    DWORD PTR [eax+0x71],0x9773a107
  41b390:	xchg   edi,eax
  41b391:	xchg   ebx,eax
  41b392:	(bad)  
  41b393:	jae    0x41b32c
  41b395:	jns    0x41b376
  41b397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b399:	adc    BYTE PTR [ebp+0x60],dl
  41b39c:	mov    ecx,0x6799d03d
  41b3a1:	int    0xd0
  41b3a3:	out    0xbb,eax
  41b3a5:	fdiv   QWORD PTR ds:0x78a57f4d
  41b3ab:	data16 inc BYTE PTR [eax]
  41b3ae:	cmp    eax,0x55cc5bc8
  41b3b3:	mov    dl,0x66
  41b3b5:	js     0x41b33a
  41b3b7:	mov    ebx,DWORD PTR ds:0x99b737f7
  41b3bd:	inc    esi
  41b3be:	cmp    esp,DWORD PTR [ecx+0x1dde0f14]
  41b3c4:	lahf   
  41b3c5:	sub    al,0x8a
  41b3c7:	mov    bl,0xb0
  41b3c9:	scas   al,BYTE PTR es:[edi]
  41b3ca:	mov    bl,0x5e
  41b3cc:	add    eax,0xecc14c99
  41b3d1:	mov    DWORD PTR [esi],edi
  41b3d3:	pop    esp
  41b3d4:	jne    0x41b428
  41b3d6:	push   ecx
  41b3d7:	test   eax,0x8be7f079
  41b3dc:	sahf   
  41b3dd:	das    
  41b3de:	mov    ebp,0x8a812861
  41b3e3:	push   cs
  41b3e4:	cli    
  41b3e5:	xchg   esp,eax
  41b3e6:	or     al,0xc4
  41b3e8:	jbe    0x41b38e
  41b3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3eb:	adc    eax,0xdb4405b7
  41b3f0:	imul   esi,esp,0xffffff80
  41b3f3:	dec    edx
  41b3f4:	mov    dl,bh
  41b3f6:	fisttp DWORD PTR [edx-0x74f8b6fe]
  41b3fc:	inc    edi
  41b3fd:	sub    edi,esp
  41b3ff:	int3   
  41b400:	fdivr  QWORD PTR [edx]
  41b402:	ja     0x41b3de
  41b404:	mov    bl,0xc8
  41b406:	sub    al,0xbe
  41b408:	adc    BYTE PTR [ebp+0x3a],bl
  41b40b:	xor    edi,DWORD PTR [edi+0x24]
  41b40e:	jbe    0x41b426
  41b410:	imul   ecx,DWORD PTR [edx-0x2d],0x2b8282d9
  41b417:	fdiv   DWORD PTR [edx+0x2b822e54]
  41b41d:	mov    DWORD PTR [ecx],edx
  41b41f:	adc    eax,esi
  41b421:	ins    BYTE PTR es:[edi],dx
  41b422:	cli    
  41b423:	mov    esi,0xd0cd93e9
  41b428:	or     al,0xc7
  41b42a:	sbb    DWORD PTR [ecx+0x7ef54393],edi
  41b430:	test   al,0x69
  41b432:	in     al,dx
  41b433:	push   ss
  41b434:	hlt    
  41b435:	js     0x41b418
  41b437:	xchg   esi,eax
  41b438:	je     0x41b420
  41b43a:	dec    esi
  41b43b:	fidivr WORD PTR [ebp-0x74]
  41b43e:	es leave 
  41b440:	mov    edi,0xc6c83cba
  41b445:	mov    dh,0x21
  41b447:	push   ebx
  41b448:	jb     0x41b44d
  41b44a:	fdivr  st(2),st
  41b44c:	push   esi
  41b44d:	push   edx
  41b44e:	mov    edx,0x59672a5b
  41b453:	rcl    DWORD PTR [edx],cl
  41b455:	and    DWORD PTR [esi+0x0],edx
  41b458:	lahf   
  41b459:	pop    edx
  41b45a:	std    
  41b45b:	cs xchg edi,eax
  41b45d:	cmp    dl,BYTE PTR [edx+0x59]
  41b460:	xlat   BYTE PTR ds:[ebx]
  41b461:	shl    DWORD PTR [ecx-0xd4f9d2e],0x6f
  41b468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b469:	push   0xaadb1731
  41b46e:	push   edi
  41b46f:	nop
  41b470:	dec    DWORD PTR [ecx-0x1fe12e56]
  41b476:	dec    ebx
  41b477:	ins    DWORD PTR es:[edi],dx
  41b478:	add    BYTE PTR [ebp-0x2c],bl
  41b47b:	ret    0xf1b4
  41b47e:	inc    ebp
  41b47f:	xchg   ebx,eax
  41b480:	adc    DWORD PTR [ebx+0x30d23adc],ebp
  41b486:	test   DWORD PTR [eax+0x68],edx
  41b489:	or     esi,ecx
  41b48b:	idiv   BYTE PTR [edi+0x67]
  41b48e:	mov    esi,0x5cb16556
  41b493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b494:	mov    ebp,0xfc38c60d
  41b499:	lahf   
  41b49a:	pop    esi
  41b49b:	mov    ecx,0x3028e659
  41b4a0:	aas    
  41b4a1:	outs   dx,BYTE PTR ds:[esi]
  41b4a2:	out    0x1e,eax
  41b4a4:	(bad)  
  41b4a5:	outs   dx,BYTE PTR ds:[esi]
  41b4a6:	mov    ebp,0x48278d9b
  41b4ab:	dec    edi
  41b4ac:	cli    
  41b4ad:	cmp    BYTE PTR [esi-0x30c8af66],bh
  41b4b3:	mov    dh,0x58
  41b4b5:	dec    edx
  41b4b6:	or     DWORD PTR [esp+ecx*8],0xffffffba
  41b4ba:	pop    esp
  41b4bb:	inc    esp
  41b4bc:	jge    0x41b464
  41b4be:	sbb    eax,0xaceaaee4
  41b4c3:	in     eax,dx
  41b4c4:	inc    eax
  41b4c5:	push   ebx
  41b4c6:	enter  0x3c5f,0x42
  41b4ca:	sbb    al,dh
  41b4cc:	push   cx
  41b4ce:	xor    esi,esp
  41b4d0:	push   eax
  41b4d1:	mov    ds:0x9b01c97b,al
  41b4d6:	add    al,0xb1
  41b4d8:	mov    DWORD PTR [eax-0x1f7aeab3],eax
  41b4de:	mov    bh,0xdc
  41b4e0:	jmp    0xbc52:0x72faea39
  41b4e7:	jl     0x41b494
  41b4e9:	push   esp
  41b4ea:	lods   eax,DWORD PTR ds:[esi]
  41b4eb:	sti    
  41b4ec:	int3   
  41b4ed:	jle    0x41b4b3
  41b4ef:	xchg   BYTE PTR [ebx],cl
  41b4f1:	popf   
  41b4f2:	mov    ds:0x626808e8,eax
  41b4f7:	dec    ecx
  41b4f8:	pop    ds
  41b4f9:	lods   eax,DWORD PTR ds:[esi]
  41b4fa:	rcl    dl,0x47
  41b4fd:	lea    edi,[esi]
  41b4ff:	pop    edi
  41b500:	fs push 0x4e178c6e
  41b506:	popa   
  41b507:	daa    
  41b508:	movhps xmm3,QWORD PTR [ebx+0x51]
  41b50c:	lods   eax,DWORD PTR ds:[esi]
  41b50d:	call   0xb578b8c0
  41b512:	or     al,0x29
  41b514:	es pop eax
  41b516:	in     eax,dx
  41b517:	daa    
  41b518:	sbb    esi,DWORD PTR [eax-0x1513625a]
  41b51e:	icebp  
  41b51f:	sbb    al,0x41
  41b521:	into   
  41b522:	push   cs
  41b523:	add    ah,ch
  41b525:	jge    0x41b4b8
  41b527:	inc    ebp
  41b528:	mov    dh,0x66
  41b52a:	add    edx,DWORD PTR [esi+0x2f7bbdfa]
  41b530:	sbb    ecx,ecx
  41b532:	sbb    al,0xe8
  41b534:	and    DWORD PTR [ecx+eax*4+0x2ad77189],eax
  41b53b:	sahf   
  41b53c:	jmp    0x41b5b0
  41b53e:	jbe    0x41b4d4
  41b540:	and    al,0xaa
  41b542:	xor    DWORD PTR [ebp+0x590ff749],esp
  41b548:	mov    esi,0xd3915f22
  41b54d:	daa    
  41b54e:	stos   BYTE PTR es:[edi],al
  41b54f:	dec    edi
  41b550:	pop    es
  41b551:	adc    ah,BYTE PTR [ebx+0x14d71c64]
  41b557:	fdivr  QWORD PTR [esi*2-0x639b0b56]
  41b55e:	xchg   ebp,eax
  41b55f:	or     DWORD PTR [ecx+0x7e],edx
  41b562:	int    0x84
  41b564:	(bad)  
  41b565:	into   
  41b566:	push   esp
  41b567:	scas   eax,DWORD PTR es:[edi]
  41b568:	push   ebx
  41b569:	test   eax,0x290e2e5f
  41b56e:	sahf   
  41b56f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b570:	(bad)  
  41b572:	shl    DWORD PTR [edx+0x64],1
  41b575:	call   0x156bbfec
  41b57a:	push   es
  41b57b:	out    0xdd,al
  41b57d:	dec    cl
  41b57f:	jne    0x41b511
  41b581:	mov    edi,0x279bb416
  41b586:	mov    edi,0xf938ba8a
  41b58b:	inc    edi
  41b58c:	or     edi,DWORD PTR [ebp-0x65]
  41b58f:	and    DWORD PTR [ebx-0x3a8caf15],edi
  41b595:	xchg   edi,eax
  41b596:	bound  ecx,QWORD PTR [ebp+esi*2-0x1207ccb0]
  41b59d:	or     edi,DWORD PTR [ecx]
  41b59f:	and    dl,dl
  41b5a1:	xchg   edi,eax
  41b5a2:	loop   0x41b52f
  41b5a4:	out    0xe1,eax
  41b5a6:	test   DWORD PTR [edx],esi
  41b5a8:	adc    eax,0xacd2e562
  41b5ad:	call   0x3896:0xdd75e105
  41b5b4:	stos   DWORD PTR es:[edi],eax
  41b5b5:	dec    esi
  41b5b6:	mov    DWORD PTR [edx+0x44],eax
  41b5b9:	and    dl,dh
  41b5bb:	aam    0xbe
  41b5bd:	pop    ecx
  41b5be:	inc    edx
  41b5bf:	adc    al,0x79
  41b5c1:	scas   al,BYTE PTR es:[edi]
  41b5c2:	cwde   
  41b5c3:	dec    eax
  41b5c4:	lods   al,BYTE PTR ds:[esi]
  41b5c5:	sti    
  41b5c6:	add    edx,DWORD PTR [ebp-0x196601d1]
  41b5cc:	add    cl,BYTE PTR [eax]
  41b5ce:	dec    ebp
  41b5cf:	clc    
  41b5d0:	mov    esi,ecx
  41b5d2:	cmp    eax,0xb34e47b9
  41b5d7:	xchg   dh,cl
  41b5d9:	cmp    ebp,DWORD PTR [esi-0x45ad11a]
  41b5df:	rol    BYTE PTR [edx-0xc609053],cl
  41b5e5:	jge    0x41b582
  41b5e7:	mov    bl,0x2b
  41b5e9:	sub    al,0xa9
  41b5eb:	sbb    al,0x28
  41b5ed:	mov    es,WORD PTR [eax]
  41b5ef:	xstore-rng (bad)
  41b5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5f1:	ret    
  41b5f2:	push   cs
  41b5f3:	jne    0x41b580
  41b5f5:	mov    al,ds:0xcf25ccce
  41b5fa:	xor    DWORD PTR [eax],esi
  41b5fc:	xchg   edi,eax
  41b5fd:	mov    fs,edx
  41b5ff:	fs cmp al,0xce
  41b602:	fisttp DWORD PTR [esi+0x8]
  41b605:	in     eax,dx
  41b606:	pop    ss
  41b607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b608:	jge    0x41b595
  41b60a:	xchg   ebx,eax
  41b60b:	shl    BYTE PTR [ecx-0x3f],cl
  41b60e:	inc    ecx
  41b60f:	(bad)  
  41b610:	outs   dx,BYTE PTR ds:[esi]
  41b611:	test   DWORD PTR [edx+0x77306807],ebp
  41b617:	iret   
  41b618:	push   ebx
  41b619:	fist   WORD PTR [eax+0x2741aec9]
  41b61f:	repz loopne 0x41b5f2
  41b622:	loope  0x41b5ca
  41b624:	xor    BYTE PTR [ebx+0x75c77137],ch
  41b62a:	mov    ecx,0x59e6f44a
  41b62f:	dec    esp
  41b630:	loopne 0x41b601
  41b632:	idiv   bh
  41b634:	sahf   
  41b635:	bndstx [esi],bnd3
  41b638:	adc    eax,DWORD PTR [ecx]
  41b63a:	xlat   BYTE PTR ds:[ebx]
  41b63b:	lea    ebx,[ebp-0x4c]
  41b63e:	ret    
  41b63f:	and    al,BYTE PTR ds:0x32227ada
  41b645:	dec    ecx
  41b646:	mov    cl,0x4
  41b648:	pop    ebx
  41b649:	js     0x41b639
  41b64b:	test   al,0x41
  41b64d:	outs   dx,DWORD PTR ds:[esi]
  41b64e:	jno    0x41b696
  41b650:	loopne 0x41b657
  41b652:	in     al,0xf7
  41b654:	cdq    
  41b655:	call   0xc7053f7d
  41b65a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b65b:	or     ecx,esi
  41b65d:	jno    0x41b5f4
  41b65f:	into   
  41b660:	aaa    
  41b661:	mov    edx,0xf9f9db9f
  41b666:	(bad)  
  41b667:	adc    ebp,DWORD PTR [ebx]
  41b669:	leave  
  41b66a:	jno    0x41b65e
  41b66c:	bound  esp,QWORD PTR [esi+0x3563e1ce]
  41b672:	push   ecx
  41b673:	push   eax
  41b674:	stc    
  41b675:	adc    dh,BYTE PTR [esi]
  41b677:	push   esi
  41b678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b679:	mov    cl,0x80
  41b67b:	mov    BYTE PTR ds:0x5a68f0e7,0x91
  41b682:	push   edx
  41b683:	xchg   ecx,eax
  41b684:	dec    ebp
  41b685:	dec    ebx
  41b686:	dec    edi
  41b687:	jne    0x41b635
  41b689:	sub    eax,0x3a0aaf73
  41b68e:	outs   dx,BYTE PTR ds:[esi]
  41b68f:	pop    ss
  41b690:	mov    ebp,0x87c859df
  41b695:	sub    BYTE PTR [ebx+0x36],bl
  41b698:	xchg   DWORD PTR [edi-0x48],eax
  41b69b:	pop    edi
  41b69c:	mov    dh,0xd5
  41b69e:	or     BYTE PTR [ebx],dl
  41b6a0:	xchg   esp,esi
  41b6a2:	icebp  
  41b6a3:	mov    edx,0x2ba707dd
  41b6a8:	scas   al,BYTE PTR es:[edi]
  41b6a9:	fcmove st,st(6)
  41b6ab:	mov    eax,0xab5393ab
  41b6b0:	cli    
  41b6b1:	pop    edx
  41b6b2:	ror    DWORD PTR [edi+0x43],1
  41b6b5:	mov    eax,ds:0x89a5f419
  41b6ba:	sbb    DWORD PTR [eax+0xe],ebp
  41b6bd:	punpcklbw mm2,mm7
  41b6c0:	ret    
  41b6c1:	jns    0x41b6de
  41b6c3:	mov    ebx,eax
  41b6c5:	cld    
  41b6c6:	mov    BYTE PTR [ebp+0x16],bl
  41b6c9:	addr16 add eax,0x59b90cd8
  41b6cf:	xchg   ecx,eax
  41b6d0:	push   ebp
  41b6d1:	out    0xc1,al
  41b6d3:	stc    
  41b6d4:	hlt    
  41b6d5:	dec    ecx
  41b6d6:	jle    0x41b6fa
  41b6d8:	push   esp
  41b6d9:	repz rol DWORD PTR [edi+ebp*2+0x57a94115],0x7
  41b6e2:	test   al,0x37
  41b6e4:	(bad)  
  41b6e5:	jl     0x41b712
  41b6e7:	cmp    ebp,edx
  41b6e9:	and    bh,BYTE PTR [eax+0x1dfe0a91]
  41b6ef:	sbb    al,0xea
  41b6f1:	sbb    BYTE PTR [ebx-0x522c5ab6],bl
  41b6f7:	loope  0x41b70e
  41b6f9:	inc    edx
  41b6fa:	test   DWORD PTR [eax+0x51fe86c3],edi
  41b700:	out    dx,al
  41b701:	loope  0x41b735
  41b703:	mov    bh,0x67
  41b705:	sbb    dl,ch
  41b707:	psllw  mm7,QWORD PTR [ebx]
  41b70a:	lods   al,BYTE PTR ds:[esi]
  41b70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b70c:	cmp    al,0xaa
  41b70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b70f:	fdivr  QWORD PTR [eax+0x5f]
  41b712:	in     eax,0xf7
  41b714:	(bad)  
  41b715:	mov    edx,0x2d9391cb
  41b71a:	test   ebx,ebp
  41b71c:	es push edx
  41b71e:	cs dec ebx
  41b720:	push   esp
  41b721:	mov    ds:0x36b3cf2d,eax
  41b726:	mov    esi,es
  41b728:	sub    al,0xec
  41b72a:	(bad)  
  41b72c:	cs pop ebx
  41b72e:	mov    edi,0x7c643c16
  41b733:	mov    ecx,0x514cdacc
  41b738:	leave  
  41b739:	dec    edi
  41b73a:	adc    BYTE PTR [edx],bh
  41b73c:	ja     0x41b6cf
  41b73e:	lahf   
  41b73f:	inc    ebp
  41b740:	repz and BYTE PTR [esi-0x60317a1b],0x81
  41b748:	mov    ebx,0x5b2eef3e
  41b74d:	(bad)  
  41b74e:	sbb    BYTE PTR [ecx],ah
  41b750:	adc    dl,cl
  41b752:	ss xchg ebx,eax
  41b754:	das    
  41b755:	mov    ebp,0xf1505a92
  41b75a:	jmp    0x6d203cc9
  41b75f:	jge    0x41b71b
  41b761:	pop    esp
  41b762:	(bad)  
  41b763:	pop    edi
  41b764:	out    0x68,al
  41b766:	jo     0x41b7e0
  41b768:	jnp    0x41b7c2
  41b76a:	popa   
  41b76b:	inc    esp
  41b76c:	xchg   ch,dl
  41b76e:	popa   
  41b76f:	ins    DWORD PTR es:[edi],dx
  41b770:	test   al,0xa
  41b772:	stos   BYTE PTR es:[edi],al
  41b773:	lods   eax,DWORD PTR ds:[esi]
  41b774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b775:	retf   0x134f
  41b778:	pop    ss
  41b779:	sbb    BYTE PTR [ebx+edx*8],0x53
  41b77d:	add    al,0xca
  41b77f:	shl    DWORD PTR [eax-0x5f],1
  41b782:	sub    eax,0x1b5a9160
  41b787:	mov    dl,0x80
  41b789:	pop    edi
  41b78a:	in     al,0x54
  41b78c:	xor    edi,ebp
  41b78e:	jle    0x41b710
  41b790:	pop    ecx
  41b791:	mov    edi,0xc64838c9
  41b796:	jno    0x41b764
  41b798:	mov    edx,0x21523c84
  41b79d:	cmp    dl,BYTE PTR [eax-0x1b7396a7]
  41b7a3:	nop    DWORD PTR [edi-0x1d3e8f7e]
  41b7aa:	pushf  
  41b7ab:	jp     0x41b7c4
  41b7ad:	xchg   DWORD PTR gs:[edx+0x6fb8c04a],esp
  41b7b4:	cmc    
  41b7b5:	cdq    
  41b7b6:	add    edx,esp
  41b7b8:	and    DWORD PTR [ecx+0x59],edx
  41b7bb:	cmp    DWORD PTR [edx+0x2e],esi
  41b7be:	cdq    
  41b7bf:	or     eax,0xf9c89931
  41b7c4:	mov    al,ds:0x20031cb2
  41b7c9:	dec    ecx
  41b7ca:	call   0x64950923
  41b7cf:	adc    al,0xbb
  41b7d1:	aad    0xdd
  41b7d3:	ret    
  41b7d4:	sbb    DWORD PTR [edx+0x80e1e13],ecx
  41b7da:	pop    esi
  41b7db:	pop    ds
  41b7dc:	inc    esi
  41b7dd:	mov    dh,0xb8
  41b7df:	test   al,0xe4
  41b7e1:	ffree  st(0)
  41b7e3:	sub    esi,ecx
  41b7e5:	retf   0x3382
  41b7e8:	(bad)  
  41b7e9:	ja     0x41b801
  41b7eb:	pop    eax
  41b7ec:	mov    esp,0x5f9568ca
  41b7f1:	jecxz  0x41b808
  41b7f3:	and    eax,0x2d3f6d13
  41b7f8:	push   edx
  41b7f9:	in     eax,dx
  41b7fa:	xchg   esp,eax
  41b7fb:	pop    esi
  41b7fc:	mov    dl,0x6a
  41b7fe:	inc    edx
  41b7ff:	scas   eax,DWORD PTR es:[edi]
  41b800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b801:	dec    ebx
  41b802:	fwait
  41b803:	xchg   BYTE PTR [esi-0xa81a899],bl
  41b809:	jo     0x41b7a9
  41b80b:	cs call 0x853f772
  41b811:	cdq    
  41b812:	aam    0x10
  41b814:	add    al,0xd2
  41b816:	aas    
  41b817:	aas    
  41b818:	lock mov eax,0x3535ae9d
  41b81e:	dec    edi
  41b81f:	mov    edx,0x66c3f724
  41b824:	jg     0x41b7b4
  41b826:	out    0xe8,al
  41b828:	scas   al,BYTE PTR es:[edi]
  41b829:	aas    
  41b82a:	xchg   BYTE PTR [eax-0x603fd512],dl
  41b830:	inc    esi
  41b831:	loopne 0x41b86c
  41b833:	xor    bl,BYTE PTR [edx+0x2e]
  41b836:	in     eax,0x3f
  41b838:	xor    DWORD PTR [ebp+ebx*1-0x629a71ee],edi
  41b83f:	push   edx
  41b840:	cmp    al,0x45
  41b842:	std    
  41b843:	mov    gs,eax
  41b845:	sbb    DWORD PTR [edx+ebx*1],esi
  41b848:	stos   BYTE PTR es:[edi],al
  41b849:	mov    dl,0xed
  41b84b:	stos   BYTE PTR es:[edi],al
  41b84c:	pop    ss
  41b84d:	mov    al,ds:0x35cc6f64
  41b852:	dec    eax
  41b853:	push   ds
  41b854:	mov    al,bl
  41b856:	int3   
  41b857:	js     0x41b7e2
  41b859:	loope  0x41b804
  41b85b:	mov    bh,BYTE PTR [esi-0x72]
  41b85e:	jns    0x41b89f
  41b860:	dec    ecx
  41b861:	mov    esi,ds
  41b863:	sahf   
  41b864:	mov    al,ds:0x1dcc37eb
  41b869:	test   DWORD PTR [edi],edx
  41b86b:	loop   0x41b894
  41b86d:	sbb    BYTE PTR [ecx+eax*2+0x28be5cc2],dl
  41b874:	arpl   WORD PTR [edi+0x13c78628],sp
  41b87a:	imul   ebp,ecx,0x6a
  41b87d:	push   0x1b
  41b87f:	xor    eax,0x8ee2cb82
  41b884:	test   eax,0x1c9134dd
  41b889:	inc    eax
  41b88a:	sahf   
  41b88b:	and    bl,BYTE PTR [ebx]
  41b88d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b88e:	push   edx
  41b88f:	mov    bh,0x14
  41b891:	das    
  41b892:	in     al,dx
  41b893:	fld    st(1)
  41b895:	arpl   cx,ax
  41b897:	rol    dl,1
  41b899:	int3   
  41b89a:	sub    BYTE PTR [ebp-0x5a85af11],ah
  41b8a0:	shl    DWORD PTR [ecx+ecx*4+0x32],1
  41b8a4:	sub    al,0x29
  41b8a6:	js     0x41b8cd
  41b8a8:	cmp    DWORD PTR [esi+0x5b5948b4],esp
  41b8ae:	mov    ah,0xea
  41b8b0:	ja     0x41b924
  41b8b2:	aam    0x9c
  41b8b4:	jmp    0x41b849
  41b8b6:	retf   0xa22f
  41b8b9:	fs inc edx
  41b8bb:	pop    esi
  41b8bc:	push   ss
  41b8bd:	sub    eax,0x3f7541c8
  41b8c2:	call   0x4eeaed1
  41b8c7:	ins    DWORD PTR es:[edi],dx
  41b8c8:	xchg   edx,eax
  41b8c9:	retf   0x6266
  41b8cc:	test   al,0x35
  41b8ce:	jmp    0x41b8f4
  41b8d0:	stc    
  41b8d1:	cmp    al,0x15
  41b8d3:	ja     0x41b912
  41b8d5:	iret   
  41b8d6:	(bad)  
  41b8d7:	cmp    BYTE PTR [ebp+0x1c],ah
  41b8da:	jnp    0x41b897
  41b8dc:	add    edi,DWORD PTR ds:0xd2db7188
  41b8e2:	push   eax
  41b8e3:	out    0xd6,eax
  41b8e5:	push   esi
  41b8e6:	or     DWORD PTR [ecx],esp
  41b8e8:	jge    0x41b874
  41b8ea:	or     edx,DWORD PTR [eax+0x8731f23]
  41b8f0:	mov    eax,DWORD PTR [edi]
  41b8f2:	cmp    al,0x8
  41b8f4:	dec    esp
  41b8f5:	imul   esp,DWORD PTR [eax+ecx*4-0x35],0xffffffcc
  41b8fa:	jne    0x41b8a7
  41b8fc:	fldenv [edx*1-0x28f22e0e]
  41b903:	(bad)  
  41b904:	push   esi
  41b905:	loopne 0x41b8d2
  41b907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b908:	xchg   BYTE PTR [edx-0x70f17071],al
  41b90e:	fiadd  WORD PTR [ecx]
  41b910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b911:	sub    al,BYTE PTR [esi+ecx*4]
  41b914:	mov    ?,WORD PTR ds:0xde41076b
  41b91a:	out    dx,eax
  41b91b:	cmp    esp,DWORD PTR [eax+0x2911502c]
  41b921:	popa   
  41b922:	inc    eax
  41b923:	in     al,dx
  41b924:	js     0x41b919
  41b926:	jp     0x41b8bb
  41b928:	hlt    
  41b929:	jmp    0xa8e58c25
  41b92e:	or     dl,BYTE PTR [esi+eiz*1-0x727a5f45]
  41b935:	repz loop 0x41b961
  41b938:	ret    
  41b939:	push   cs
  41b93a:	mov    al,ds:0xd0b43dd1
  41b93f:	addr16 out dx,al
  41b941:	pop    ds
  41b942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b943:	cli    
  41b944:	jmp    0xb6f:0x94f8b94f
  41b94b:	xchg   esi,eax
  41b94c:	out    0xe0,al
  41b94e:	shl    BYTE PTR [ebp+0x7e44b820],cl
  41b954:	jp     0x41b904
  41b956:	and    BYTE PTR [eax-0xdd46609],bl
  41b95c:	jmp    0xe792e4a5
  41b961:	adc    al,0x50
  41b963:	aaa    
  41b964:	push   0xe75cc615
  41b969:	add    al,dh
  41b96b:	ficom  WORD PTR [ebx-0x4f4e24e0]
  41b971:	mov    ch,0xdb
  41b973:	mov    esp,ebp
  41b975:	ins    BYTE PTR es:[edi],dx
  41b976:	ret    0xe64
  41b979:	push   ebx
  41b97a:	and    al,al
  41b97c:	test   ch,0x66
  41b97f:	mov    WORD PTR [ebx-0x4042f337],cs
  41b985:	pop    ebx
  41b986:	and    eax,0xb172b412
  41b98b:	push   edx
  41b98c:	enter  0x9638,0x1
  41b990:	std    
  41b991:	add    al,0xae
  41b993:	(bad)
  41b996:	icebp  
  41b997:	inc    esp
  41b998:	mov    dl,0x52
  41b99a:	loopne 0x41b943
  41b99c:	jmp    0x72cc:0xde7edd69
  41b9a3:	pxor   mm5,QWORD PTR [ebx-0x51]
  41b9a7:	xlat   BYTE PTR ds:[ebx]
  41b9a8:	mov    ebp,edx
  41b9aa:	hlt    
  41b9ab:	into   
  41b9ac:	sbb    BYTE PTR [ebp+0x21],ch
  41b9af:	pop    ecx
  41b9b0:	jmp    0x41b95a
  41b9b2:	mov    edx,DWORD PTR [ebp+0xd]
  41b9b5:	add    ebp,ebx
  41b9b7:	shr    BYTE PTR [edi+0x166b9343],1
  41b9bd:	cs push eax
  41b9bf:	sahf   
  41b9c0:	jns    0x41b9fe
  41b9c2:	mov    ah,0x68
  41b9c4:	jge    0x41b9ca
  41b9c6:	nop
  41b9c7:	sti    
  41b9c8:	loope  0x41ba43
  41b9ca:	inc    esp
  41b9cb:	dec    ebx
  41b9cc:	jo     0x41ba1f
  41b9ce:	mov    fs:0x6b83e43f,eax
  41b9d4:	xor    al,0xf9
  41b9d6:	call   0x530c916d
  41b9db:	dec    eax
  41b9dc:	aas    
  41b9dd:	inc    eax
  41b9de:	add    dl,cl
  41b9e0:	xor    BYTE PTR [esi-0x30],dl
  41b9e3:	test   BYTE PTR [ebp-0x27c4b8b8],0xff
  41b9ea:	adc    al,0x42
  41b9ec:	inc    si
  41b9ee:	xor    ah,BYTE PTR [ebp+0x69f6ca04]
  41b9f4:	jle    0x41b9eb
  41b9f6:	mov    eax,0x65d6f9d9
  41b9fb:	xchg   esp,eax
  41b9fc:	sbb    al,BYTE PTR [ebx]
  41b9fe:	xlat   BYTE PTR ds:[ebx]
  41b9ff:	xor    bl,bh
  41ba01:	stc    
  41ba02:	cmp    BYTE PTR [ebp-0x4d704d31],bh
  41ba08:	lods   al,BYTE PTR ds:[esi]
  41ba09:	stos   DWORD PTR es:[edi],eax
  41ba0a:	mov    ebp,esp
  41ba0c:	xchg   ebx,eax
  41ba0d:	pusha  
  41ba0e:	pop    esp
  41ba0f:	arpl   dx,sp
  41ba11:	je     0x41ba71
  41ba13:	mov    al,0xd
  41ba15:	dec    ecx
  41ba16:	rcr    ah,cl
  41ba18:	xor    BYTE PTR [edx-0x63de2868],ch
  41ba1e:	and    edx,eax
  41ba20:	mov    dh,0xe8
  41ba22:	pop    ds
  41ba23:	fist   WORD PTR ds:0xc93a0d1e
  41ba29:	xchg   DWORD PTR [eax-0x48],ebx
  41ba2c:	js     0x41ba40
  41ba2e:	mov    al,0xd3
  41ba30:	xor    DWORD PTR [esi+0x7b],ecx
  41ba33:	inc    ebp
  41ba34:	or     ebx,DWORD PTR [esi]
  41ba36:	mov    dl,0xd5
  41ba38:	sar    dh,0x4d
  41ba3b:	xchg   esi,eax
  41ba3c:	sahf   
  41ba3d:	jmp    0x41b9ed
  41ba3f:	ret    0x7149
  41ba42:	fisubr WORD PTR ds:0x7bdb901a
  41ba48:	repz xor al,0xf3
  41ba4b:	add    al,0x65
  41ba4d:	and    DWORD PTR [ebp-0xab2a6ef],0x21
  41ba54:	test   edx,esp
  41ba56:	mov    cs,WORD PTR [ebx]
  41ba58:	and    ah,BYTE PTR [edi-0xf127232]
  41ba5e:	pop    esp
  41ba5f:	repz in al,dx
  41ba61:	and    DWORD PTR [ecx*4-0x58fb283],ebx
  41ba68:	mul    DWORD PTR [ebp+0x2e]
  41ba6b:	sti    
  41ba6c:	test   DWORD PTR [edx+0x37e79311],edi
  41ba72:	adc    al,0x70
  41ba74:	in     eax,0x58
  41ba76:	sub    DWORD PTR [edx],esi
  41ba78:	jae    0x41ba78
  41ba7a:	dec    edi
  41ba7b:	or     BYTE PTR [bp-0x6151],ch
  41ba80:	jbe    0x41bac4
  41ba82:	mov    esp,0x3d9cd0ef
  41ba87:	(bad)  
  41ba88:	ins    BYTE PTR es:[edi],dx
  41ba89:	rcr    BYTE PTR [ecx],cl
  41ba8b:	outs   dx,BYTE PTR ds:[esi]
  41ba8c:	mov    ch,0x48
  41ba8e:	xor    dl,BYTE PTR [edx]
  41ba90:	stos   BYTE PTR es:[edi],al
  41ba91:	adc    dl,BYTE PTR [eax+0x9]
  41ba94:	ja     0x41ba71
  41ba96:	sub    BYTE PTR ds:0xcd2bcb11,dl
  41ba9c:	inc    ecx
  41ba9d:	fidiv  WORD PTR [ecx-0x618bebe]
  41baa3:	push   ds
  41baa4:	jns    0x41bad9
  41baa6:	xor    al,0x43
  41baa8:	adc    al,0x4
  41baaa:	data16 mov ah,0x20
  41baad:	scas   eax,DWORD PTR es:[edi]
  41baae:	dec    eax
  41baaf:	inc    eax
  41bab0:	jg     0x41bac6
  41bab2:	into   
  41bab3:	ficomp WORD PTR [eax+0x78]
  41bab6:	sbb    ebp,0xc0172e60
  41babc:	ret    
  41babd:	xor    BYTE PTR [edx],bl
  41babf:	cmp    DWORD PTR [edx],ecx
  41bac1:	push   edx
  41bac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bac3:	in     al,dx
  41bac4:	mov    esi,DWORD PTR [esi]
  41bac6:	push   0xffffffa3
  41bac8:	fsub   QWORD PTR [ebx+0x6a]
  41bacb:	int3   
  41bacc:	sbb    al,0x64
  41bace:	lds    edx,FWORD PTR [ebp-0x39d29dc8]
  41bad4:	out    0xf,eax
  41bad6:	int    0xee
  41bad8:	ja     0x41bafa
  41bada:	push   esi
  41badb:	(bad)  
  41badc:	cwde   
  41badd:	pushf  
  41bade:	mov    ds:0x941db01d,eax
  41bae3:	or     cl,0x90
  41bae6:	dec    esp
  41bae7:	push   es
  41bae8:	inc    ecx
  41bae9:	xor    ecx,DWORD PTR [eax+ebp*1-0x446005b0]
  41baf0:	int3   
  41baf1:	or     al,0xe6
  41baf3:	fs int 0xe9
  41baf6:	sbb    BYTE PTR ds:0x43f09184,0x7b
  41bafd:	xchg   esp,eax
  41bafe:	xchg   BYTE PTR [ebp+0x72],cl
  41bb01:	arpl   WORD PTR [edi],dx
  41bb03:	adc    BYTE PTR ds:[esi],cl
  41bb06:	cdq    
  41bb07:	fs mov edi,0xa873db4e
  41bb0d:	es sbb eax,0xeb11074e
  41bb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb14:	iret   
  41bb15:	pop    ebp
  41bb16:	ret    0xad58
  41bb19:	or     dl,BYTE PTR [edi+0x3cd4ee9e]
  41bb1f:	popf   
  41bb20:	jns    0x41bb1e
  41bb22:	aas    
  41bb23:	sub    ebx,DWORD PTR [ecx-0x2a]
  41bb26:	xchg   edx,eax
  41bb27:	push   0x44
  41bb29:	push   es
  41bb2a:	jbe    0x41bad6
  41bb2c:	inc    eax
  41bb2d:	jns    0x41bbab
  41bb2f:	popf   
  41bb30:	add    esi,DWORD PTR [ebp-0x4e58a0bc]
  41bb36:	cld    
  41bb37:	lods   eax,DWORD PTR ds:[esi]
  41bb38:	or     eax,0xe949da69
  41bb3d:	pop    esi
  41bb3e:	dec    ebx
  41bb3f:	(bad)  
  41bb40:	fdivr  DWORD PTR [bx+di-0x95d]
  41bb46:	(bad)  
  41bb47:	xchg   edx,eax
  41bb48:	fnstenv [ecx+0x66bbc298]
  41bb4e:	mov    edx,DWORD PTR [ebx]
  41bb50:	pop    ecx
  41bb51:	nop
  41bb52:	lods   eax,DWORD PTR ds:[esi]
  41bb53:	fld    TBYTE PTR [eax-0x3cf9119]
  41bb59:	aam    0x63
  41bb5b:	or     DWORD PTR [ebp+0x27],esp
  41bb5e:	scas   al,BYTE PTR es:[edi]
  41bb5f:	adc    eax,DWORD PTR [eax]
  41bb61:	aaa    
  41bb62:	xor    DWORD PTR [eax+eiz*4-0x70],edi
  41bb66:	mov    ah,0x32
  41bb68:	mov    ebp,0x8e7d7270
  41bb6d:	scas   al,BYTE PTR es:[edi]
  41bb6e:	mov    eax,0x789d6399
  41bb73:	lds    ecx,FWORD PTR ds:0xa0fcd2e9
  41bb7a:	fisubr WORD PTR [eax]
  41bb7c:	dec    bx
  41bb7e:	mov    bh,0x60
  41bb80:	xchg   edi,eax
  41bb81:	mov    esp,0xea5dd3ea
  41bb86:	and    cl,BYTE PTR [eax+eax*2+0x28a13241]
  41bb8d:	pop    ds
  41bb8e:	mov    ecx,0x97371b24
  41bb93:	hlt    
  41bb94:	shl    esi,cl
  41bb96:	xlat   BYTE PTR ds:[ebx]
  41bb97:	cmp    eax,0xf42a12c7
  41bb9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb9d:	mov    edx,0x2ae1e6e
  41bba2:	mov    ebp,DWORD PTR [edx]
  41bba4:	jo     0x41bb63
  41bba6:	jmp    0x3ba6:0x73cdd5e6
  41bbad:	inc    esp
  41bbae:	xor    bh,BYTE PTR [eax+edi*4]
  41bbb1:	in     al,0x5f
  41bbb3:	out    dx,al
  41bbb4:	add    al,0x6e
  41bbb6:	sub    ah,BYTE PTR [ecx]
  41bbb8:	mov    bl,0xfa
  41bbba:	push   esi
  41bbbb:	xchg   edx,eax
  41bbbc:	jp     0x41bbb3
  41bbbe:	aam    0x96
  41bbc0:	xchg   DWORD PTR [ecx],ebx
  41bbc2:	push   es
  41bbc3:	xor    eax,0xa443848c
  41bbc8:	cmp    BYTE PTR [ecx-0x323c535e],cl
  41bbce:	stos   BYTE PTR es:[edi],al
  41bbcf:	dec    edx
  41bbd0:	fidiv  WORD PTR [edi-0x65]
  41bbd3:	mov    ch,0x4c
  41bbd5:	mov    BYTE PTR [edi],cl
  41bbd7:	retf   0x55c7
  41bbda:	pop    ebp
  41bbdb:	and    al,0x70
  41bbdd:	mov    ebx,DWORD PTR [eax-0x78]
  41bbe0:	push   cs
  41bbe1:	xlat   BYTE PTR ds:[ebx]
  41bbe2:	pop    edi
  41bbe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbe4:	fwait
  41bbe5:	xchg   ebx,eax
  41bbe6:	je     0x41bbcf
  41bbe8:	inc    edi
  41bbe9:	xchg   edx,eax
  41bbea:	jl     0x41bb9c
  41bbec:	imul   eax,DWORD PTR [ecx-0x3],0x1f
  41bbf0:	adc    ecx,esp
  41bbf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbf3:	fsubr  QWORD PTR [ebx+0x1]
  41bbf6:	mov    esi,0xb095755f
  41bbfb:	push   ebp
  41bbfc:	shl    esp,1
  41bbfe:	stos   BYTE PTR es:[edi],al
  41bbff:	xchg   esi,eax
  41bc00:	add    cl,BYTE PTR [esp+ebp*4+0x6faebc81]
  41bc07:	push   ds
  41bc08:	pop    ds
  41bc09:	pusha  
  41bc0a:	dec    ebx
  41bc0b:	xchg   dl,al
  41bc0d:	dec    ebx
  41bc0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc0f:	xor    cl,BYTE PTR [eax-0x4a]
  41bc12:	push   ebp
  41bc13:	(bad)  
  41bc14:	push   ecx
  41bc15:	dec    ebx
  41bc16:	daa    
  41bc17:	xchg   DWORD PTR [edi+0x4f],edi
  41bc1a:	mov    ah,0x4b
  41bc1c:	sub    al,0xaf
  41bc1e:	dec    edx
  41bc1f:	cwde   
  41bc20:	mov    ecx,0x4bff22ac
  41bc25:	xor    bh,BYTE PTR [ebx+edi*2-0x5f]
  41bc29:	add    bh,BYTE PTR [edx+0x1d]
  41bc2c:	shr    edi,0xc9
  41bc2f:	push   ebx
  41bc30:	add    eax,0xa31f73a2
  41bc35:	pop    esp
  41bc36:	gs repz leave 
  41bc39:	cmp    esp,DWORD PTR [esi]
  41bc3b:	jecxz  0x41bbc9
  41bc3d:	jmp    0x41bca9
  41bc3f:	push   ecx
  41bc40:	pop    esp
  41bc41:	add    edx,DWORD PTR [edi*8-0x7c1130fa]
  41bc48:	or     cl,BYTE PTR [ebx]
  41bc4a:	lock mov ecx,0xb4152e3f
  41bc50:	stos   BYTE PTR es:[edi],al
  41bc51:	sbb    al,0x6b
  41bc53:	mov    al,ds:0xa997274c
  41bc58:	cli    
  41bc59:	neg    BYTE PTR [ebx+0x5b9d99ce]
  41bc5f:	mov    cl,0x3
  41bc61:	inc    edx
  41bc62:	xchg   BYTE PTR [eax-0x42],dl
  41bc65:	add    BYTE PTR [edx-0x17b19df8],bh
  41bc6b:	std    
  41bc6c:	cmp    ebx,DWORD PTR [edx-0x576abb61]
  41bc72:	rol    DWORD PTR [esp+edi*2-0x27fc8369],0xb7
  41bc7a:	cmp    ebx,DWORD PTR [edx]
  41bc7c:	(bad)  
  41bc7d:	push   0x6745ca95
  41bc82:	sub    eax,0x263dd5d4
  41bc87:	adc    DWORD PTR [esi],eax
  41bc89:	and    DWORD PTR [edx],ebx
  41bc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc8c:	lahf   
  41bc8d:	aad    0x1d
  41bc8f:	iret   
  41bc90:	pop    ds
  41bc91:	adc    DWORD PTR [ebx+eax*2+0x6298c1d5],esp
  41bc98:	mov    ch,BYTE PTR [edi]
  41bc9a:	gs rol cl,cl
  41bc9d:	mov    eax,ds:0xf01194a8
  41bca2:	imul   esi,ecx,0x39
  41bca5:	(bad)  
  41bca6:	and    eax,0x10e5dba8
  41bcab:	push   edi
  41bcac:	inc    edi
  41bcad:	sub    ebp,DWORD PTR [ecx]
  41bcaf:	in     al,0x31
  41bcb1:	and    al,al
  41bcb3:	imul   edi,DWORD PTR [edx],0xffffffea
  41bcb6:	fwait
  41bcb7:	or     ebp,edx
  41bcb9:	stc    
  41bcba:	pop    ebx
  41bcbb:	xchg   BYTE PTR [edx+0x64],ah
  41bcbe:	popa   
  41bcbf:	push   es
  41bcc0:	das    
  41bcc1:	add    ecx,DWORD PTR [esi+0x3e]
  41bcc4:	sub    dh,BYTE PTR [ebp+0x21]
  41bcc7:	test   DWORD PTR [eax-0x6c],edi
  41bcca:	enter  0x67a9,0x8
  41bcce:	imul   DWORD PTR [eax]
  41bcd0:	(bad)  
  41bcd1:	push   0xffffffd2
  41bcd3:	mov    bh,0xa6
  41bcd5:	call   0x9d9a:0x40f36547
  41bcdc:	and    eax,0xbd74f43d
  41bce1:	out    dx,al
  41bce2:	daa    
  41bce3:	fcmovne st,st(1)
  41bce5:	fnstenv [edx+0x4726bf7a]
  41bceb:	push   ds
  41bcec:	xor    DWORD PTR [ecx],edi
  41bcee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcef:	push   eax
  41bcf0:	jmp    0xc1ede6dc
  41bcf5:	(bad)  
  41bcf6:	loope  0x41bcd9
  41bcf8:	enter  0x51fa,0xe1
  41bcfc:	popf   
  41bcfd:	sub    al,0xc4
  41bcff:	scas   eax,DWORD PTR es:[edi]
  41bd00:	jge    0x41bd3c
  41bd02:	mov    esp,0x4a86cbf1
  41bd07:	pop    esi
  41bd08:	push   es
  41bd09:	jmp    0x41bd4a
  41bd0b:	outs   dx,BYTE PTR ds:[esi]
  41bd0c:	mov    ds:0xa6320f45,al
  41bd11:	jne    0x41bcbd
  41bd13:	leave  
  41bd14:	ficomp DWORD PTR [edx]
  41bd16:	ret    0x89d7
  41bd19:	adc    al,0x30
  41bd1b:	jno    0x41bd10
  41bd1d:	inc    edi
  41bd1e:	popa   
  41bd1f:	push   ds
  41bd20:	push   eax
  41bd21:	test   eax,0xd83d249e
  41bd26:	mov    ds:0xb3f0b5d9,al
  41bd2b:	daa    
  41bd2c:	call   0x69ae7187
  41bd31:	test   DWORD PTR [ebp+ecx*1-0x43],edx
  41bd35:	sbb    bl,BYTE PTR [edi]
  41bd37:	shl    DWORD PTR [ebp-0x5],0xf9
  41bd3b:	rol    DWORD PTR [ecx],cl
  41bd3d:	stos   BYTE PTR es:[edi],al
  41bd3e:	sbb    al,BYTE PTR [edx]
  41bd40:	jp     0x41bd01
  41bd42:	add    dh,0x39
  41bd45:	sahf   
  41bd46:	arpl   WORD PTR [ebx],dx
  41bd48:	adc    al,0x2
  41bd4a:	fs push ecx
  41bd4c:	jns    0x41bd24
  41bd4e:	pop    edx
  41bd4f:	adc    BYTE PTR [edx+0x68],ah
  41bd52:	shl    BYTE PTR [ecx+edi*2-0x35256b3d],0x70
  41bd5a:	push   ebp
  41bd5b:	test   dl,bh
  41bd5d:	adc    DWORD PTR [ebx-0x4d6843be],0xffffffb1
  41bd64:	add    al,dh
  41bd66:	push   esi
  41bd67:	push   ecx
  41bd68:	cli    
  41bd69:	call   0x90c385b6
  41bd6e:	aas    
  41bd6f:	mov    esp,0x602b91a2
  41bd74:	bound  esp,QWORD PTR [edi]
  41bd76:	xchg   ebx,eax
  41bd77:	add    DWORD PTR [edx-0x4c],ebp
  41bd7a:	add    ebp,esp
  41bd7c:	xchg   esp,eax
  41bd7d:	ds pop ecx
  41bd7f:	push   ebx
  41bd80:	adc    DWORD PTR [eax+0x28],eax
  41bd83:	mov    WORD PTR gs:[edi+0x53],es
  41bd87:	in     eax,0x80
  41bd89:	retf   
  41bd8a:	or     ecx,DWORD PTR [ecx+ebp*8+0x390e3479]
  41bd91:	cmp    eax,DWORD PTR [esi+0x5ecd0195]
  41bd97:	pop    ecx
  41bd98:	sahf   
  41bd99:	jae    0x41bd61
  41bd9b:	ins    DWORD PTR es:[edi],dx
  41bd9c:	lods   al,BYTE PTR cs:[esi]
  41bd9e:	enter  0x4854,0x9a
  41bda2:	and    ecx,DWORD PTR [ecx-0x43]
  41bda5:	(bad)
  41bda8:	out    0x67,al
  41bdaa:	les    ebp,FWORD PTR [ebp+0x42491556]
  41bdb0:	pop    edx
  41bdb1:	test   eax,0x621da46a
  41bdb6:	pusha  
  41bdb7:	mov    esp,0x39e8577f
  41bdbc:	addr16 sti 
  41bdbe:	cs dec edx
  41bdc0:	push   esp
  41bdc1:	add    BYTE PTR [ecx],0x1c
  41bdc4:	inc    edi
  41bdc5:	and    edx,ebx
  41bdc7:	sbb    BYTE PTR [esi-0x7e2e8eb4],bh
  41bdcd:	loopne 0x41bd7c
  41bdcf:	jne    0x41bd9f
  41bdd1:	pushf  
  41bdd2:	mov    ecx,0x2ab2ddb8
  41bdd7:	adc    edi,DWORD PTR [edi+0x3]
  41bdda:	in     al,dx
  41bddb:	pop    edx
  41bddc:	cmp    eax,DWORD PTR [edx-0x36f3080c]
  41bde2:	leave  
  41bde3:	loop   0x41bdd9
  41bde5:	cmp    al,0xe
  41bde7:	mov    ds:0xaf9e2d02,al
  41bdec:	or     edi,esi
  41bdee:	mov    BYTE PTR [eax+0x11],dh
  41bdf1:	aas    
  41bdf2:	sub    BYTE PTR [ebx+0x65d9bd94],dh
  41bdf8:	mov    ds:0x23a73e86,al
  41bdfd:	xchg   esp,eax
  41bdfe:	xchg   ebp,eax
  41bdff:	dec    eax
  41be00:	push   0xc0583038
  41be05:	mov    eax,0x73c953a3
  41be0a:	push   edx
  41be0b:	out    dx,eax
  41be0c:	and    al,0xfe
  41be0e:	jl     0x41be7a
  41be10:	push   ss
  41be11:	xor    al,0x9e
  41be13:	dec    esp
  41be14:	outs   dx,BYTE PTR ds:[esi]
  41be15:	add    eax,DWORD PTR [eax+0x2e]
  41be18:	xor    dl,dl
  41be1a:	xor    edx,DWORD PTR [eax+0x8]
  41be1d:	push   ss
  41be1e:	mov    es,WORD PTR [eax+0x7869823b]
  41be24:	xor    al,0x47
  41be26:	sbb    DWORD PTR [esi+0x52e3da],edx
  41be2c:	aam    0x5e
  41be2e:	cmc    
  41be2f:	xor    DWORD PTR [ebx],edx
  41be31:	mov    bh,0x3
  41be33:	in     al,0x7
  41be35:	inc    edx
  41be36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be37:	xor    al,BYTE PTR [eax+0x3c0ac113]
  41be3d:	ds mov edx,0x668dbebb
  41be43:	push   eax
  41be44:	lea    ebx,[edi+0xb7600aa]
  41be4a:	aaa    
  41be4b:	sub    BYTE PTR [ebx],al
  41be4d:	mov    esp,0xf7a53340
  41be52:	shl    DWORD PTR [ecx],0xc1
  41be55:	(bad)  
  41be57:	mov    edi,0xfd52533c
  41be5c:	fucomi st,st(7)
  41be5e:	sbb    bh,BYTE PTR [ecx+0x4a23c4a2]
  41be64:	push   eax
  41be65:	mov    eax,0xf6d37f35
  41be6a:	sub    DWORD PTR [ebx+0x77],edi
  41be6d:	std    
  41be6e:	sbb    eax,esi
  41be70:	js     0x41be83
  41be72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be73:	dec    ecx
  41be74:	mov    dl,0xb2
  41be76:	cmp    eax,0xc7edc195
  41be7b:	pop    eax
  41be7c:	sbb    BYTE PTR [edi-0x4b],0x6a
  41be80:	xchg   edi,eax
  41be81:	lahf   
  41be82:	jecxz  0x41be2f
  41be84:	inc    ebx
  41be85:	ret    0xf398
  41be88:	and    edx,DWORD PTR [ecx+0x742e301d]
  41be8e:	loope  0x41be4f
  41be90:	and    esi,0x6d
  41be93:	sbb    DWORD PTR [esi+0x31da1ce1],ecx
  41be99:	ins    BYTE PTR es:[edi],dx
  41be9a:	call   0x149b:0xec75c6a3
  41bea1:	mov    BYTE PTR [bx+si],bl
  41bea4:	inc    esi
  41bea5:	(bad)  
  41bea6:	aas    
  41bea7:	add    eax,0x1de8439
  41beac:	push   esi
  41bead:	mov    ds:0x9c8ded58,al
  41beb2:	xchg   ecx,eax
  41beb3:	push   ds
  41beb4:	(bad)  ss:0x48668c1
  41bebb:	cmp    bl,BYTE PTR [edi-0x5bffa62e]
  41bec1:	scas   al,BYTE PTR es:[edi]
  41bec2:	stc    
  41bec3:	mov    ebp,0x5269447e
  41bec8:	pop    ecx
  41bec9:	mov    ecx,0xaf95b4f0
  41bece:	test   DWORD PTR [ebp-0x57],eax
  41bed1:	add    ah,0x6c
  41bed4:	jp     0x41bf21
  41bed6:	or     eax,0x3713b995
  41bedb:	push   ebx
  41bedc:	jns    0x41be6e
  41bede:	inc    esi
  41bedf:	pop    eax
  41bee0:	or     edx,edi
  41bee2:	sub    bh,dl
  41bee4:	sub    eax,0xeb207b58
  41bee9:	jge    0x41be9f
  41beeb:	inc    edi
  41beec:	mov    dl,0xc8
  41beee:	enter  0xcf7d,0x6d
  41bef2:	das    
  41bef3:	imul   esp,DWORD PTR [esi],0xbb6c39ae
  41bef9:	and    BYTE PTR [eax-0x71f0b264],bl
  41beff:	pop    ds
  41bf00:	pop    eax
  41bf01:	outs   dx,DWORD PTR ds:[esi]
  41bf02:	push   0xea588e0f
  41bf07:	jle    0x41bf08
  41bf09:	fwait
  41bf0a:	cdq    
  41bf0b:	enter  0x647e,0xe9
  41bf0f:	mov    ds,WORD PTR [ebx]
  41bf11:	xchg   ecx,eax
  41bf12:	loopne 0x41bea2
  41bf14:	dec    ecx
  41bf15:	faddp  st(0),st
  41bf17:	xchg   ebp,eax
  41bf18:	stos   DWORD PTR es:[edi],eax
  41bf19:	mov    gs,WORD PTR [edx+0x25]
  41bf1c:	mov    BYTE PTR [esi+0x7f],bh
  41bf1f:	mov    edi,0x57c69ab2
  41bf24:	aad    0xd8
  41bf26:	xor    DWORD PTR [ebx-0x44],edi
  41bf29:	jns    0x41bf68
  41bf2b:	dec    edi
  41bf2c:	cmp    ebx,DWORD PTR [ebx]
  41bf2e:	fnstsw WORD PTR [edx-0x17]
  41bf31:	jl     0x41bf79
  41bf33:	(bad)  
  41bf34:	or     BYTE PTR ds:[ebx],ah
  41bf37:	aam    0xee
  41bf39:	dec    esp
  41bf3a:	(bad)  
  41bf3b:	iret   
  41bf3c:	retf   
  41bf3d:	cld    
  41bf3e:	push   edi
  41bf3f:	inc    esp
  41bf40:	pop    edi
  41bf41:	retf   
  41bf42:	ret    
  41bf43:	mov    ds:0xbbd430c4,eax
  41bf48:	aad    0x5
  41bf4a:	fwait
  41bf4b:	dec    esp
  41bf4c:	or     BYTE PTR [ebp+0x5397a9b2],ch
  41bf52:	add    BYTE PTR [edi+0x6],cl
  41bf55:	add    ebp,esi
  41bf57:	fidiv  DWORD PTR ss:[ebp+0xe]
  41bf5b:	and    dh,BYTE PTR [edi+0x2]
  41bf5e:	xor    al,0x29
  41bf60:	sbb    al,0x6c
  41bf62:	mov    al,ds:0x8c2fc1ba
  41bf67:	bound  eax,QWORD PTR [edi+0x4f02f4df]
  41bf6d:	aas    
  41bf6e:	int    0x66
  41bf70:	lea    eax,[ebx+0x7a]
  41bf73:	pop    ecx
  41bf74:	sbb    eax,0x9046bc00
  41bf79:	fwait
  41bf7a:	imul   eax,DWORD PTR [esi-0x59],0x2c226219
  41bf81:	xchg   DWORD PTR [ebx+0x37],edi
  41bf84:	mov    al,BYTE PTR [edi-0x6f]
  41bf87:	dec    esi
  41bf88:	cmc    
  41bf89:	outs   dx,DWORD PTR ds:[esi]
  41bf8a:	fst    QWORD PTR [esi+0x374a1778]
  41bf90:	rcl    DWORD PTR [edi-0x6d],1
  41bf93:	pop    ds
  41bf94:	mov    ah,0x59
  41bf96:	push   cs
  41bf97:	mov    esi,DWORD PTR [ecx-0x334b3499]
  41bf9d:	gs call 0xb827:0xec147b11
  41bfa5:	stc    
  41bfa6:	mov    ?,WORD PTR [edi+ebp*4-0x77]
  41bfaa:	inc    ebp
  41bfab:	int3   
  41bfac:	cmp    al,0xf0
  41bfae:	mov    bl,0x23
  41bfb0:	push   ecx
  41bfb1:	mov    BYTE PTR [esi-0x42b8c992],ch
  41bfb7:	(bad)  
  41bfb8:	xchg   edi,eax
  41bfb9:	popa   
  41bfba:	(bad)  
  41bfbb:	jns    0x41c02c
  41bfbd:	movups XMMWORD PTR ds:[ecx],xmm6
  41bfc1:	push   DWORD PTR [ecx-0x5d]
  41bfc4:	paddsb mm1,mm4
  41bfc7:	lds    ecx,FWORD PTR [ebx]
  41bfc9:	mov    bh,ch
  41bfcb:	in     eax,dx
  41bfcc:	xchg   BYTE PTR [esi+eiz*1+0xeea31ab],dl
  41bfd3:	pop    ecx
  41bfd4:	mov    esp,0x6ec67316
  41bfd9:	sbb    ebx,eax
  41bfdb:	sbb    DWORD PTR [ebx-0x49],esp
  41bfde:	fisub  DWORD PTR [eax]
  41bfe0:	dec    ecx
  41bfe1:	retf   0xf705
  41bfe4:	inc    esi
  41bfe5:	or     DWORD PTR [ebp+0x7b],0xbe01a3fc
  41bfec:	(bad)  
  41bfed:	fnsave [edi-0x6b]
  41bff0:	(bad)  
  41bff2:	push   ebp
  41bff3:	test   BYTE PTR [edi-0x6],ch
  41bff6:	lock jg 0x41c041
  41bff9:	ret    0x52bf
  41bffc:	sbb    edx,edi
  41bffe:	add    DWORD PTR [edi-0x26],0xdbd98123
  41c005:	clc    
  41c006:	sbb    eax,0xc5e34e47
  41c00b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c00c:	lds    ebx,FWORD PTR [edx-0x15a3a61]
  41c012:	test   eax,0x12e38c2f
  41c017:	mov    cl,0x96
  41c019:	stc    
  41c01a:	mov    DWORD PTR [esp+esi*4+0x72bbdb51],edx
  41c021:	test   DWORD PTR [ecx+0xa504dd],edi
  41c027:	test   DWORD PTR [edx+0x23],0x5e3ab3c5
  41c02e:	repz xor bh,BYTE PTR [eax]
  41c031:	jbe    0x41c006
  41c033:	addr16 je 0x41c006
  41c036:	mov    bl,0xcf
  41c038:	icebp  
  41c039:	jnp    0x41c097
  41c03b:	rcr    DWORD PTR [ecx+0x3ce30d0d],0xc5
  41c042:	test   DWORD PTR [esi],ebx
  41c044:	pop    esp
  41c045:	xchg   ecx,eax
  41c046:	out    dx,eax
  41c047:	cmp    al,0x18
  41c049:	or     dl,BYTE PTR [ecx+eax*2-0x653ba219]
  41c050:	aaa    
  41c051:	fstp   DWORD PTR [edx-0x67df0532]
  41c057:	inc    edx
  41c058:	jmp    0x498cacdc
  41c05d:	test   BYTE PTR [edx-0x1006c87],dh
  41c063:	ret    
  41c064:	es mov bl,0x95
  41c067:	nop
  41c068:	imul   BYTE PTR [ecx+0x6c]
  41c06b:	(bad)  
  41c06c:	scas   al,BYTE PTR es:[edi]
  41c06d:	clc    
  41c06e:	lds    edi,FWORD PTR [ebx-0x72]
  41c071:	xchg   ebp,eax
  41c072:	nop
  41c073:	dec    ebp
  41c074:	jge    0x41c04a
  41c076:	mov    eax,ds:0x95961200
  41c07b:	lds    esp,FWORD PTR [esi+eiz*2]
  41c07e:	mov    edi,0x74258f9d
  41c083:	adc    ch,al
  41c085:	inc    edi
  41c086:	bound  ebx,QWORD PTR [edi+0x365f0f74]
  41c08c:	jg     0x41c044
  41c08e:	xor    eax,0x332e2977
  41c093:	jne    0x41c0a9
  41c095:	outs   dx,DWORD PTR ds:[esi]
  41c096:	dec    esi
  41c097:	outs   dx,DWORD PTR ds:[esi]
  41c098:	adc    dh,dh
  41c09a:	fistp  QWORD PTR [edx-0x59dd3aa5]
  41c0a0:	mov    cl,0x18
  41c0a2:	shl    DWORD PTR [ebx],0x48
  41c0a5:	jbe    0x41c029
  41c0a7:	idiv   WORD PTR [ecx+0x2a287d46]
  41c0ae:	retf   0x7f85
  41c0b1:	xor    DWORD PTR [esi+0x17a71d2],ebx
  41c0b7:	in     eax,0xd7
  41c0b9:	(bad)  
  41c0ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0bc:	pop    edi
  41c0bd:	and    ch,ah
  41c0bf:	shr    DWORD PTR [ecx+0x71d7512b],0x41
  41c0c6:	das    
  41c0c7:	push   esp
  41c0c8:	mov    cl,0x6f
  41c0ca:	(bad)  [ebx-0x2a]
  41c0cd:	inc    ecx
  41c0ce:	(bad)  
  41c0d0:	test   BYTE PTR [esp+ecx*4],ah
  41c0d3:	loopne 0x41c143
  41c0d5:	inc    esp
  41c0d6:	mov    WORD PTR [edi],?
  41c0d8:	adc    ebx,DWORD PTR [edi+0x70]
  41c0db:	xchg   esi,eax
  41c0dc:	push   esi
  41c0dd:	cs pop edx
  41c0df:	push   ecx
  41c0e0:	jge    0x41c13f
  41c0e2:	rcl    edi,cl
  41c0e4:	pushf  
  41c0e5:	and    ebp,0xb1b3c03c
  41c0eb:	aad    0xb7
  41c0ed:	jbe    0x41c14c
  41c0ef:	call   0xe717:0xb29eb6b3
  41c0f6:	mov    al,0x42
  41c0f8:	(bad)  
  41c0f9:	push   esp
  41c0fa:	add    ecx,ebx
  41c0fc:	je     0x41c144
  41c0fe:	outs   dx,BYTE PTR ds:[esi]
  41c0ff:	or     al,0x3e
  41c101:	out    0x4d,al
  41c103:	pop    esp
  41c104:	sar    eax,0x80
  41c107:	pusha  
  41c108:	and    ecx,DWORD PTR [ecx]
  41c10a:	pop    ds
  41c10b:	sar    BYTE PTR [esi+0x7087c967],0x87
  41c112:	cmp    al,0x90
  41c114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c115:	dec    esi
  41c116:	adc    DWORD PTR [ebx+0x4b],ecx
  41c119:	xor    eax,0xc26a69e8
  41c11e:	jne    0x41c10f
  41c120:	ss jg  0x41c19f
  41c123:	pusha  
  41c124:	and    edi,esp
  41c126:	(bad)  
  41c127:	js     0x41c0f7
  41c129:	lock scas eax,DWORD PTR es:[edi]
  41c12b:	outs   dx,DWORD PTR ds:[esi]
  41c12c:	(bad)  
  41c12d:	fdivr  st,st(6)
  41c12f:	cmp    al,0x5a
  41c131:	xchg   BYTE PTR [esi+0x21fc94d3],bl
  41c137:	mov    esp,0x311b035b
  41c13d:	icebp  
  41c13e:	sbb    cl,dl
  41c140:	mov    edx,0xf5b1baf
  41c145:	pushf  
  41c146:	clc    
  41c147:	mov    al,0x4d
  41c149:	or     DWORD PTR [edx+ebp*8-0x51],esp
  41c14d:	jg     0x41c18b
  41c14f:	push   esi
  41c150:	in     eax,0x5
  41c152:	mov    ch,0xb3
  41c154:	idiv   eax
  41c156:	sar    BYTE PTR [eax+0x7808cff9],1
  41c15c:	imul   DWORD PTR [ecx+0xc]
  41c15f:	push   0x4d
  41c161:	mov    bl,0x3b
  41c163:	mov    eax,ds:0xddff8081
  41c168:	cmp    ecx,DWORD PTR [eax+0x36a5ce61]
  41c16e:	hlt    
  41c16f:	icebp  
  41c170:	loop   0x41c193
  41c172:	mov    cl,0xd6
  41c174:	push   cs
  41c175:	in     eax,dx
  41c176:	push   0xf763a881
  41c17b:	enter  0x150d,0xca
  41c17f:	xor    al,0xab
  41c181:	(bad)  
  41c183:	mov    dh,0xa8
  41c185:	aam    0x44
  41c187:	jmp    DWORD PTR [ebp+0x52]
  41c18a:	imul   edx,DWORD PTR [eax+0x42],0x9aeb5aa5
  41c191:	mov    ebp,0x759b7525
  41c196:	in     eax,0x59
  41c198:	xchg   bh,bh
  41c19a:	out    0xc9,eax
  41c19c:	sub    ah,BYTE PTR [edi-0x33]
  41c19f:	fbstp  TBYTE PTR [esi-0x2c]
  41c1a2:	xor    BYTE PTR [edx-0x6b0bbe3a],0x94
  41c1a9:	cmp    al,0xb2
  41c1ab:	xor    eax,DWORD PTR [ebp-0x45c9d620]
  41c1b1:	jne    0x41c1d7
  41c1b3:	in     eax,0x3b
  41c1b5:	dec    ebx
  41c1b6:	div    esi
  41c1b8:	hlt    
  41c1b9:	imul   esp,DWORD PTR [esi-0x5f23485c],0xfffffff6
  41c1c0:	and    al,0xab
  41c1c2:	xchg   edi,eax
  41c1c3:	mov    eax,0xd982c62b
  41c1c8:	leave  
  41c1c9:	(bad)  
  41c1ca:	into   
  41c1cb:	push   cs
  41c1cc:	mov    BYTE PTR [edi-0x602fa86d],0x92
  41c1d3:	ficomp WORD PTR [ebp+0x5554af21]
  41c1d9:	nop
  41c1da:	mov    ds:0x9fad25a3,eax
  41c1df:	sub    eax,0x42f41bd3
  41c1e4:	js     0x41c168
  41c1e6:	(bad)
  41c1e9:	fild   QWORD PTR [ecx]
  41c1eb:	jmp    0xc659:0x9bfb2c58
  41c1f2:	shl    BYTE PTR [edx-0x3a45034f],cl
  41c1f8:	div    DWORD PTR [esi-0x614ab804]
  41c1fe:	icebp  
  41c1ff:	es stos BYTE PTR es:[edi],al
  41c201:	popf   
  41c202:	(bad)  
  41c203:	repz addr16 popa 
  41c206:	and    ebx,DWORD PTR [edx+0x621f5fde]
  41c20c:	xchg   edi,eax
  41c20d:	gs aad 0xec
  41c210:	fisttp DWORD PTR [ecx+edx*2-0x10cfe7ae]
  41c217:	std    
  41c218:	mov    bh,0xa
  41c21a:	sahf   
  41c21b:	shl    DWORD PTR [edi-0x4f843f5],cl
  41c221:	fnstenv [eax+0x10]
  41c224:	jge    0x41c1fb
  41c226:	add    DWORD PTR [edi-0x1a6d15af],ebx
  41c22c:	push   cs
  41c22d:	imul   ebx,DWORD PTR [esi-0x2d155602],0x98da25d4
  41c237:	and    BYTE PTR gs:[di+0x4746],0xd0
  41c23e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c23f:	and    DWORD PTR [edx+0x3d],ebp
  41c242:	fcomip st,st(6)
  41c244:	cmp    DWORD PTR [edi-0x21],eax
  41c247:	inc    edx
  41c248:	or     dh,BYTE PTR [edi-0x42]
  41c24b:	add    BYTE PTR [edx-0x3],ch
  41c24e:	xchg   esi,eax
  41c24f:	jecxz  0x41c20b
  41c251:	fcom   DWORD PTR [ebp-0x76]
  41c254:	dec    eax
  41c255:	fsubp  st(2),st
  41c257:	shr    BYTE PTR [ebx+0x1ce7791a],0x8a
  41c25e:	and    ecx,DWORD PTR [edi-0x6d]
  41c261:	jne    0x41c2af
  41c263:	dec    eax
  41c264:	push   ebx
  41c265:	repnz mov ebp,0xcbb8be05
  41c26b:	pop    ebx
  41c26c:	fwait
  41c26d:	pop    edi
  41c26e:	fucomp st(1)
  41c270:	cmp    DWORD PTR [eax+eiz*2-0x59],eax
  41c274:	(bad)  
  41c275:	aad    0x6f
  41c277:	frstor [edi-0x607ddfa8]
  41c27d:	stos   BYTE PTR es:[edi],al
  41c27e:	or     cl,0x18
  41c281:	mov    ebp,0x185cb53c
  41c286:	in     eax,0x35
  41c288:	cs pop ebp
  41c28a:	repz fisub DWORD PTR [ecx-0x71805b5e]
  41c291:	jge    0x41c255
  41c293:	lds    ebx,FWORD PTR [esi]
  41c295:	push   0x3123220a
  41c29a:	xchg   BYTE PTR [eax+0x1c610108],al
  41c2a0:	mov    edx,0x35a342c1
  41c2a5:	sbb    eax,0xce440185
  41c2aa:	inc    ebp
  41c2ab:	ds daa 
  41c2ad:	outs   dx,BYTE PTR ds:[esi]
  41c2ae:	aaa    
  41c2af:	mov    eax,0x7c5face0
  41c2b4:	dec    edx
  41c2b5:	call   0x4e0e:0x29d13401
  41c2bc:	jb     0x41c32a
  41c2be:	sbb    ch,bl
  41c2c0:	sbb    DWORD PTR [edx-0x42a35abb],0xa7184a23
  41c2ca:	iret   
  41c2cb:	push   0xffffffea
  41c2cd:	in     al,0x22
  41c2cf:	xchg   edi,eax
  41c2d0:	jg     0x41c34b
  41c2d2:	sub    al,0x44
  41c2d4:	cmp    BYTE PTR [edx-0x13],ah
  41c2d7:	mov    al,0x5c
  41c2d9:	mov    ch,0x72
  41c2db:	xchg   DWORD PTR [eax-0x131b7d7f],esp
  41c2e1:	push   edx
  41c2e2:	stos   BYTE PTR es:[edi],al
  41c2e3:	aaa    
  41c2e4:	xchg   edx,eax
  41c2e5:	dec    esi
  41c2e6:	fistp  WORD PTR [ebx-0xa0272a4]
  41c2ec:	(bad)  
  41c2ed:	fs out dx,al
  41c2ef:	xchg   DWORD PTR [eax-0x7f],ebx
  41c2f2:	(bad)  
  41c2f3:	es mov edx,ss
  41c2f6:	cs mov dl,0x47
  41c2f9:	sahf   
  41c2fa:	xor    eax,0xfd8c3d7e
  41c2ff:	cmp    DWORD PTR [ebx-0x5e7b4265],ebp
  41c305:	push   ds
  41c306:	aad    0x61
  41c308:	xlat   BYTE PTR ds:[ebx]
  41c309:	mov    al,0x44
  41c30b:	fild   WORD PTR [ebp+0x364a3408]
  41c311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c312:	leave  
  41c313:	xor    DWORD PTR [eax-0x63],edx
  41c316:	add    al,BYTE PTR [esi]
  41c318:	jg     0x41c2f5
  41c31a:	outs   dx,BYTE PTR ds:[esi]
  41c31b:	nop
  41c31c:	shl    DWORD PTR [ebp*2+0x5c499d39],0xf8
  41c324:	mov    eax,0x3d09f10b
  41c329:	xor    edi,DWORD PTR [ebx+0x7c]
  41c32c:	jg     0x41c38f
  41c32e:	aaa    
  41c32f:	test   BYTE PTR [edi-0x32c5f1a5],0x20
  41c336:	xor    edx,eax
  41c338:	rcl    BYTE PTR ds:0xb25b7981,cl
  41c33e:	je     0x41c2c2
  41c340:	dec    eax
  41c341:	fwait
  41c342:	push   0x67
  41c344:	xchg   edi,ebx
  41c346:	(bad)  [eax-0x70722890]
  41c34c:	jecxz  0x41c2d7
  41c34e:	out    0x65,al
  41c350:	mov    bh,0x65
  41c352:	xor    BYTE PTR [edi],0xef
  41c355:	(bad)  
  41c356:	pop    ecx
  41c357:	(bad)  
  41c358:	clc    
  41c359:	mov    ds:0xa92186db,al
  41c35e:	fnstcw WORD PTR [edi]
  41c360:	mov    bh,BYTE PTR [eax-0x13]
  41c363:	je     0x41c3d0
  41c365:	fwait
  41c366:	loope  0x41c3a5
  41c368:	repz fild QWORD PTR [edx]
  41c36b:	adc    bl,BYTE PTR [esi]
  41c36d:	pop    si
  41c36f:	dec    edi
  41c370:	adc    edx,edi
  41c372:	sub    esi,DWORD PTR [edx]
  41c374:	int3   
  41c375:	ins    BYTE PTR es:[edi],dx
  41c376:	imul   ebx,esi,0xffffff9b
  41c379:	sbb    BYTE PTR [edx-0x1db8b1e],ch
  41c37f:	out    0x91,eax
  41c381:	out    0x2b,eax
  41c383:	jne    0x41c326
  41c385:	push   ebx
  41c386:	mov    al,BYTE PTR [edx+ebx*1+0x65bd486]
  41c38d:	mov    ebx,0xbabb862a
  41c392:	fst    DWORD PTR [ebx]
  41c394:	xor    bh,0x23
  41c397:	inc    esp
  41c398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c399:	call   0xfcad:0x7bdbbff9
  41c3a0:	les    eax,FWORD PTR [eax-0x1e38684f]
  41c3a6:	pop    es
  41c3a7:	inc    eax
  41c3a8:	inc    ecx
  41c3a9:	ins    BYTE PTR es:[edi],dx
  41c3aa:	dec    ebx
  41c3ab:	add    DWORD PTR [eax],esi
  41c3ad:	fmul   QWORD PTR [esi-0x1fce1877]
  41c3b3:	mov    ebp,0xb21aa80f
  41c3b8:	push   ds
  41c3b9:	mov    ch,0x9f
  41c3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3bc:	(bad)  
  41c3bd:	in     al,dx
  41c3be:	push   esi
  41c3bf:	jl     0x41c387
  41c3c1:	retf   0xc31a
  41c3c4:	inc    esp
  41c3c6:	ffreep st(2)
  41c3c8:	push   ds
  41c3c9:	ins    BYTE PTR es:[edi],dx
  41c3ca:	test   BYTE PTR [edi+0x3e],dl
  41c3cd:	mov    esp,?
  41c3cf:	dec    esi
  41c3d0:	data16 arpl WORD PTR [edx-0x2c8b790e],si
  41c3d7:	addr16 inc esi
  41c3d9:	sub    dh,BYTE PTR ds:[edi+ebp*4-0x3c]
  41c3de:	add    edx,DWORD PTR [edi*4+0x2e54ab1]
  41c3e5:	jo     0x41c423
  41c3e7:	inc    ebx
  41c3e8:	pop    esi
  41c3e9:	ss cmp al,0x84
  41c3ec:	loope  0x41c446
  41c3ee:	pushf  
  41c3ef:	sbb    BYTE PTR [esi],0x87
  41c3f2:	and    cl,BYTE PTR [ebx]
  41c3f4:	aam    0x75
  41c3f6:	mov    edi,0xdfc1d2ff
  41c3fb:	sbb    BYTE PTR [esi],bh
  41c3fd:	pop    ecx
  41c3fe:	dec    esi
  41c3ff:	inc    ebp
  41c400:	out    dx,al
  41c401:	xlat   BYTE PTR ds:[ebx]
  41c402:	ins    DWORD PTR es:[edi],dx
  41c403:	loop   0x41c44a
  41c405:	imul   ebp,DWORD PTR [ebp-0x3b],0x681f7bd1
  41c40c:	mov    al,0xa0
  41c40e:	cdq    
  41c40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c410:	push   0x58b69995
  41c415:	ret    0xa94b
  41c418:	sub    al,0xe5
  41c41a:	enter  0x6dc0,0x4a
  41c41e:	outs   dx,DWORD PTR ds:[esi]
  41c41f:	jmp    0x41c3e6
  41c421:	call   0xe487a6ca
  41c426:	jb     0x41c436
  41c428:	(bad)  
  41c429:	dec    ebx
  41c42a:	xchg   ebx,eax
  41c42b:	pop    ds
  41c42c:	add    BYTE PTR [edi+0x7b804ec8],dl
  41c432:	mov    esi,DWORD PTR [ebp-0x6afea19d]
  41c438:	out    0xca,al
  41c43a:	loop   0x41c45a
  41c43c:	popf   
  41c43d:	mov    ebp,0xc0a82d56
  41c442:	pop    es
  41c443:	xchg   esi,eax
  41c444:	scas   al,BYTE PTR es:[edi]
  41c445:	pop    esi
  41c446:	std    
  41c447:	mov    bh,0x27
  41c449:	test   BYTE PTR [eax-0x2e141aa4],cl
  41c44f:	xor    esi,ebx
  41c451:	push   ds
  41c452:	sub    DWORD PTR [ecx+0xf0d34bd],edx
  41c458:	and    bl,BYTE PTR [ebx]
  41c45a:	mov    bl,0xfa
  41c45c:	jp     0x41c46c
  41c45e:	ja     0x41c4a4
  41c460:	and    DWORD PTR [edi-0x69],esp
  41c463:	cmp    eax,0x6d52d07e
  41c468:	sbb    BYTE PTR [eax-0x6a],al
  41c46b:	outs   dx,DWORD PTR ds:[esi]
  41c46c:	inc    ecx
  41c46d:	cli    
  41c46e:	and    eax,0x19b1e866
  41c473:	lock imul ecx,esp,0x26171c59
  41c47a:	add    al,0x19
  41c47c:	in     al,dx
  41c47d:	fist   DWORD PTR [ecx-0x5a8aaf9c]
  41c483:	in     eax,dx
  41c484:	cli    
  41c485:	das    
  41c486:	mov    ds:0x532b08a8,al
  41c48b:	aam    0x3d
  41c48d:	fld    st(7)
  41c48f:	pop    ebp
  41c490:	inc    ebp
  41c491:	xchg   ecx,eax
  41c492:	mov    ebp,0x39b9d50b
  41c497:	lods   al,BYTE PTR ds:[esi]
  41c498:	or     ah,BYTE PTR [edx+esi*4+0x4e71f3e5]
  41c49f:	shr    BYTE PTR [edx+0x46],0x4
  41c4a3:	lahf   
  41c4a4:	xchg   edi,eax
  41c4a5:	sub    esp,esp
  41c4a7:	shl    BYTE PTR [eax-0x760405ab],0x76
  41c4ae:	mov    ds,WORD PTR [ebp+0x2f0f8c7]
  41c4b4:	add    ch,BYTE PTR [ecx-0x1f35aabb]
  41c4ba:	or     al,BYTE PTR [ecx+0x76]
  41c4bd:	nop
  41c4be:	xor    ecx,edi
  41c4c0:	jbe    0x41c508
  41c4c2:	xor    al,0xdc
  41c4c4:	aas    
  41c4c5:	retf   
  41c4c6:	(bad)  
  41c4c7:	stc    
  41c4c8:	les    eax,FWORD PTR ds:0xd37377c4
  41c4ce:	mov    dl,0x43
  41c4d0:	inc    al
  41c4d2:	outs   dx,DWORD PTR ds:[esi]
  41c4d3:	sbb    ebx,esp
  41c4d5:	test   DWORD PTR [edx],esi
  41c4d7:	push   ss
  41c4d8:	bound  ecx,QWORD PTR [esi+0x7d]
  41c4db:	pop    esi
  41c4dc:	mov    esi,0x8712864d
  41c4e1:	test   al,0xab
  41c4e3:	fyl2xp1 
  41c4e5:	(bad)  
  41c4e6:	jne    0x41c4f6
  41c4e8:	mov    ecx,0xac053327
  41c4ed:	jp     0x41c50a
  41c4ef:	mov    bl,0x33
  41c4f1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41c4f3:	xchg   ebx,eax
  41c4f4:	mov    edx,edx
  41c4f6:	stos   DWORD PTR es:[edi],eax
  41c4f7:	gs scas eax,DWORD PTR es:[edi]
  41c4f9:	fs jnp 0x41c4f6
  41c4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4fd:	xor    bl,ah
  41c4ff:	add    al,0x15
  41c501:	add    eax,DWORD PTR [esi]
  41c503:	pop    ebx
  41c504:	sbb    BYTE PTR [esi],0x88
  41c507:	mov    BYTE PTR [edi+0x57202d19],dh
  41c50d:	aam    0xd1
  41c50f:	adc    al,0xda
  41c511:	dec    esp
  41c512:	jmp    0x41c565
  41c514:	lock add edi,edx
  41c517:	push   eax
  41c518:	mov    esp,0xd3250fd9
  41c51d:	ins    DWORD PTR es:[edi],dx
  41c51e:	sbb    esp,esi
  41c520:	ror    DWORD PTR [eax+0x73],1
  41c523:	popa   
  41c524:	dec    edi
  41c525:	adc    eax,0xe4aaa21b
  41c52a:	and    eax,ebx
  41c52c:	dec    esi
  41c52d:	ret    
  41c52e:	idiv   BYTE PTR [ebx]
  41c530:	jb     0x41c4cc
  41c532:	imul   esi,DWORD PTR [esi+0x4d],0x60
  41c536:	and    al,0x8d
  41c538:	(bad)  
  41c539:	test   al,0xd9
  41c53b:	(bad)  
  41c53c:	mov    edx,0xe2383b40
  41c541:	sub    BYTE PTR [ebp+0x5502d59],dh
  41c547:	mov    ebp,0xe9584cb8
  41c54c:	sti    
  41c54d:	cld    
  41c54e:	in     eax,dx
  41c54f:	add    al,0x39
  41c551:	sbb    eax,0xda833802
  41c556:	jle    0x41c532
  41c558:	fisubr WORD PTR [edi+eax*8-0x5ac98e50]
  41c55f:	retf   
  41c560:	dec    esi
  41c561:	mov    ds:0x3c74f,eax
  41c566:	mov    ch,BYTE PTR [edi-0x3d]
  41c569:	push   ecx
  41c56a:	pop    ebx
  41c56b:	dec    esp
  41c56c:	xor    ch,BYTE PTR [edx+0x3]
  41c56f:	out    dx,al
  41c570:	aas    
  41c571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c572:	scas   eax,DWORD PTR es:[edi]
  41c573:	call   0x38154b23
  41c578:	in     al,dx
  41c579:	cmp    DWORD PTR [ebx],edi
  41c57b:	sbb    al,0xb1
  41c57d:	ret    
  41c57e:	fwait
  41c57f:	lahf   
  41c580:	mov    eax,ds:0xf6a90e0c
  41c585:	mov    bl,0x2f
  41c587:	std    
  41c588:	mov    ecx,0x7bb2e1ce
  41c58d:	pop    esi
  41c58e:	add    ah,bh
  41c590:	daa    
  41c591:	pop    edx
  41c592:	mov    ?,WORD PTR [edx+eiz*1+0x52]
  41c596:	sbb    DWORD PTR [ecx+ecx*2],edx
  41c599:	loopne 0x41c5d7
  41c59b:	ret    
  41c59c:	in     al,dx
  41c59d:	ret    
  41c59e:	fidivr WORD PTR [ecx]
  41c5a0:	or     cl,BYTE PTR [esi+0x438cf8cf]
  41c5a6:	dec    edx
  41c5a7:	jb     0x41c60b
  41c5a9:	call   0x4fa5:0x77a637d5
  41c5b0:	nop
  41c5b1:	sbb    al,0x8a
  41c5b3:	and    ebx,ecx
  41c5b5:	leave  
  41c5b6:	addr16 xchg ecx,eax
  41c5b8:	jb     0x41c5f7
  41c5ba:	jo     0x41c594
  41c5bc:	scas   eax,DWORD PTR es:[edi]
  41c5bd:	lods   eax,DWORD PTR ds:[esi]
  41c5be:	add    BYTE PTR [eax+0x5392c8fe],cl
  41c5c4:	dec    ebx
  41c5c5:	pause  
  41c5c7:	in     al,dx
  41c5c8:	(bad)  
  41c5c9:	test   eax,0xd64a36f6
  41c5ce:	mov    bl,0xac
  41c5d0:	out    dx,eax
  41c5d1:	icebp  
  41c5d2:	(bad)  
  41c5d3:	cmc    
  41c5d4:	out    dx,al
  41c5d5:	mov    ecx,0x8b05eb03
  41c5da:	icebp  
  41c5db:	js     0x41c566
  41c5dd:	leave  
  41c5de:	and    DWORD PTR [ecx],ecx
  41c5e0:	lods   al,BYTE PTR ds:[esi]
  41c5e1:	push   esp
  41c5e2:	push   esp
  41c5e3:	nop
  41c5e4:	or     ebp,edx
  41c5e6:	xlat   BYTE PTR ds:[ebx]
  41c5e7:	push   es
  41c5e8:	jb     0x41c5a5
  41c5ea:	add    esi,esp
  41c5ec:	push   ebx
  41c5ed:	sbb    DWORD PTR [ecx],ecx
  41c5ef:	push   cs
  41c5f0:	hlt    
  41c5f1:	adc    bh,BYTE PTR [ecx-0xe]
  41c5f4:	or     ecx,DWORD PTR [edx-0x6fc4c697]
  41c5fa:	int3   
  41c5fb:	sbb    eax,0x5fa5ac00
  41c600:	stos   DWORD PTR es:[edi],eax
  41c601:	icebp  
  41c602:	sar    bh,0xe7
  41c605:	cmp    BYTE PTR [edi+eiz*4+0x2dd236a0],bh
  41c60c:	fsubr  st,st(3)
  41c60e:	mov    ch,0xe1
  41c610:	mov    ds:0xf22442f9,eax
  41c615:	and    cl,BYTE PTR [eax]
  41c617:	ficom  DWORD PTR [esi+0x46]
  41c61a:	ret    0x8594
  41c61d:	fadd   st(7),st
  41c61f:	in     al,0x83
  41c621:	aam    0x60
  41c623:	jle    0x41c5d9
  41c625:	leave  
  41c626:	mov    ecx,0xa506e9c6
  41c62b:	inc    esi
  41c62c:	ja     0x41c606
  41c62e:	cwde   
  41c62f:	sub    ch,cl
  41c631:	inc    ebx
  41c632:	xor    eax,0x76d956e8
  41c637:	gs adc eax,0x73195404
  41c63d:	push   ecx
  41c63e:	push   edx
  41c63f:	dec    ebx
  41c640:	test   eax,0x755bd1fa
  41c645:	rol    BYTE PTR fs:[edx],cl
  41c648:	xlat   BYTE PTR ds:[ebx]
  41c649:	jns    0x41c5cf
  41c64b:	nop
  41c64c:	or     al,0xe0
  41c64e:	xchg   edi,eax
  41c64f:	mov    eax,ds:0x7a6df99f
  41c654:	jl     0x41c6a9
  41c656:	add    dh,BYTE PTR [edx-0x2f]
  41c659:	mov    eax,ds:0x4e3032e8
  41c65e:	push   0xffffffef
  41c660:	fadd   QWORD PTR [ebp-0x22]
  41c663:	shl    BYTE PTR [eax],1
  41c665:	dec    esi
  41c666:	mov    ebx,0x701d958a
  41c66b:	js     0x41c686
  41c66d:	sbb    BYTE PTR [ecx+0x775ea21e],cl
  41c673:	inc    ebp
  41c674:	jmp    0x41c67b
  41c676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c677:	cmp    esp,DWORD PTR [ecx]
  41c679:	inc    edi
  41c67a:	scas   eax,DWORD PTR es:[edi]
  41c67b:	mov    ds:0x53886521,al
  41c680:	out    0xdb,al
  41c682:	cli    
  41c683:	and    ah,BYTE PTR [ebx]
  41c685:	addr16 adc al,0x66
  41c688:	out    dx,al
  41c689:	loopne 0x41c674
  41c68b:	sbb    al,0xc5
  41c68d:	cmp    eax,0xbfc7ac41
  41c692:	fdivr  st(5),st
  41c694:	sub    edi,edi
  41c696:	fstp   DWORD PTR [eax+eiz*4+0x25]
  41c69a:	adc    al,0xe
  41c69c:	pop    ecx
  41c69d:	loope  0x41c68c
  41c69f:	cmp    al,0x4f
  41c6a1:	fdiv   st,st(7)
  41c6a3:	hlt    
  41c6a4:	jnp    0x41c685
  41c6a6:	cmp    al,0xb1
  41c6a8:	pop    esp
  41c6a9:	loope  0x41c65b
  41c6ab:	adc    edi,DWORD PTR [esi+0x191a34ef]
  41c6b1:	cmc    
  41c6b2:	jl     0x41c6fc
  41c6b4:	in     al,dx
  41c6b5:	les    eax,FWORD PTR [eax+0x2873e313]
  41c6bb:	push   ds
  41c6bc:	sbb    ch,BYTE PTR ds:0x5cb1ae48
  41c6c2:	push   es
  41c6c3:	adc    edi,0x31
  41c6c6:	jbe    0xf694979d
  41c6cc:	mov    eax,0x9a213c7
  41c6d1:	mov    ds:0x22474a7b,eax
  41c6d6:	jg     0x41c67b
  41c6d8:	inc    ebx
  41c6da:	iret   
  41c6db:	inc    eax
  41c6dc:	loop   0x41c716
  41c6de:	mov    edi,gs
  41c6e0:	je     0x41c6db
  41c6e2:	lods   al,BYTE PTR ds:[esi]
  41c6e3:	imul   edx,DWORD PTR [edi+edx*2-0x33a5717b],0x8845fd1f
  41c6ee:	int    0xbd
  41c6f0:	adc    BYTE PTR [ecx],dh
  41c6f2:	ds (bad) 
  41c6f4:	test   BYTE PTR [ebx+ebp*8-0x76],0x75
  41c6f9:	push   esp
  41c6fa:	aaa    
  41c6fb:	fisttp DWORD PTR [esi+0xf]
  41c6fe:	repnz mov eax,ds:0x9559dca8
  41c704:	jns    0x41c6b4
  41c706:	push   esp
  41c707:	repz and ebp,0x64d6e51c
  41c70e:	lods   eax,DWORD PTR ds:[esi]
  41c70f:	ds push ebp
  41c711:	mov    edi,DWORD PTR ds:0x34644b6f
  41c717:	icebp  
  41c718:	dec    eax
  41c719:	pop    es
  41c71a:	jmp    0x64cd1d55
  41c71f:	pop    esp
  41c720:	and    BYTE PTR [eax-0x35],ch
  41c723:	sub    BYTE PTR [eax-0x52],al
  41c726:	adc    dl,cl
  41c728:	sub    eax,0xa75813af
  41c72d:	retf   
  41c72e:	xor    DWORD PTR [edx],0xcb381a49
  41c734:	adc    DWORD PTR [edi+0x5],ebp
  41c737:	das    
  41c738:	lods   al,BYTE PTR ds:[esi]
  41c739:	iret   
  41c73a:	sbb    eax,0x2a18494c
  41c73f:	mov    ?,WORD PTR ds:0x15bba756
  41c745:	sti    
  41c746:	inc    esp
  41c747:	sbb    DWORD PTR [eax+0x14],ebx
  41c74a:	dec    ebp
  41c74b:	and    ebx,DWORD PTR [ebx-0x305eebfe]
  41c751:	sbb    bh,BYTE PTR [edi+0x64e7dd71]
  41c757:	add    cl,ch
  41c759:	and    eax,0x378f9200
  41c75e:	repnz inc ebp
  41c760:	das    
  41c761:	xor    BYTE PTR [ecx+edx*1+0x6aa0eff7],dh
  41c768:	retf   
  41c769:	jne    0x41c726
  41c76b:	ficom  DWORD PTR [ecx]
  41c76d:	push   edx
  41c76e:	mov    cl,0x51
  41c770:	fistp  QWORD PTR [edi+ebx*2]
  41c773:	imul   esp,DWORD PTR [ebx+eiz*2-0x58],0xffffff8a
  41c778:	and    eax,0xa80e2d6f
  41c77d:	shl    BYTE PTR [edi-0x5f],cl
  41c780:	and    al,0xf0
  41c782:	or     BYTE PTR [eax],ch
  41c784:	jle    0x41c7a1
  41c786:	(bad)  
  41c787:	fdivr  st(6),st
  41c789:	fsub   QWORD PTR [ebp-0x32]
  41c78c:	xchg   ebp,eax
  41c78d:	and    BYTE PTR [ebx],bh
  41c78f:	adc    esp,DWORD PTR [edx]
  41c791:	mov    bh,0x88
  41c793:	jo     0x41c795
  41c795:	mov    ebp,ss
  41c797:	mov    ds:0x1d5ac977,al
  41c79c:	pushf  
  41c79d:	sbb    eax,0x2a382dbc
  41c7a2:	sub    ch,BYTE PTR [esi]
  41c7a4:	js     0x41c743
  41c7a6:	mov    ecx,DWORD PTR [edi+0x6e]
  41c7a9:	pop    esi
  41c7aa:	or     eax,0xe16c9e0a
  41c7af:	or     al,0x71
  41c7b1:	and    edx,ebp
  41c7b3:	ja     0x41c817
  41c7b5:	aaa    
  41c7b6:	loop   0x41c776
  41c7b8:	dec    edi
  41c7b9:	add    DWORD PTR [ebp-0x7],0x2d
  41c7bd:	popf   
  41c7be:	push   eax
  41c7bf:	into   
  41c7c0:	dec    esi
  41c7c1:	xor    BYTE PTR [eax+0x7b046000],bl
  41c7c7:	xor    BYTE PTR [edx-0x1a4da762],0x4b
  41c7ce:	jbe    0x41c7df
  41c7d0:	and    eax,0x84a7715d
  41c7d5:	les    ebp,FWORD PTR [eax]
  41c7d7:	fldcw  WORD PTR [esi-0x3d]
  41c7da:	mov    ebp,0x70582b1
  41c7df:	cdq    
  41c7e0:	jecxz  0x41c82d
  41c7e2:	mov    eax,0x1e79caad
  41c7e7:	pop    edx
  41c7e8:	jbe    0x41c860
  41c7ea:	add    eax,0xbbe4d85a
  41c7ef:	dec    esp
  41c7f0:	dec    ebp
  41c7f1:	push   ebp
  41c7f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7f3:	adc    ah,BYTE PTR [edi+0xef33e3]
  41c7f9:	mov    ebx,0x18774fc2
  41c7fe:	dec    ebp
  41c7ff:	loop   0x41c7e1
  41c801:	mov    fs,WORD PTR [ebx-0x4e]
  41c804:	pusha  
  41c805:	sub    BYTE PTR [ecx-0x1],dl
  41c808:	push   esi
  41c809:	into   
  41c80a:	mov    ecx,0xc226a1a2
  41c80f:	mov    ?,WORD PTR ds:0xcd4eaff4
  41c815:	hlt    
  41c816:	out    dx,al
  41c817:	mov    bh,0xe5
  41c819:	retf   0x869f
  41c81c:	dec    esi
  41c81d:	inc    edi
  41c81e:	mov    al,ds:0x5e9800c2
  41c823:	mov    al,ds:0xc656b663
  41c828:	repz add eax,DWORD PTR [ecx]
  41c82b:	sbb    eax,0x202bb4d1
  41c830:	mov    dl,0x8e
  41c832:	mov    es,WORD PTR [edi]
  41c834:	pop    ds
  41c835:	jge    0x41c847
  41c837:	push   0xffffffc6
  41c839:	inc    edi
  41c83a:	sub    DWORD PTR [edx+0x3a],eax
  41c83d:	push   0x5a
  41c83f:	leave  
  41c840:	test   BYTE PTR [ebx-0x14],0x58
  41c844:	push   ebp
  41c845:	xchg   edi,eax
  41c846:	adc    eax,0xc080c90f
  41c84b:	push   0x7e5d3d22
  41c850:	sub    ch,BYTE PTR [edx-0x28]
  41c853:	or     BYTE PTR [esi+edx*2],ch
  41c856:	or     BYTE PTR fs:[edx-0x1b0f145f],dh
  41c85d:	sub    al,0xf6
  41c85f:	int    0x0
  41c861:	xor    DWORD PTR [edx-0x7bd2dac3],edx
  41c867:	std    
  41c868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c869:	xchg   edx,eax
  41c86a:	outs   dx,DWORD PTR ds:[esi]
  41c86b:	inc    esp
  41c86c:	call   0xed92d86d
  41c871:	jbe    0x41c833
  41c873:	cwde   
  41c874:	addr16 dec eax
  41c876:	mov    ebx,DWORD PTR [ebp-0x5]
  41c879:	xchg   ebx,eax
  41c87a:	popf   
  41c87b:	dec    ebp
  41c87c:	push   esi
  41c87d:	leave  
  41c87e:	inc    esi
  41c87f:	pop    ecx
  41c880:	fsubrp st(4),st
  41c882:	ror    DWORD PTR [eax+0x24e47144],cl
  41c888:	arpl   WORD PTR [edx-0x7cb4e751],ax
  41c88e:	mov    ecx,DWORD PTR [edi-0x6b5bc513]
  41c894:	adc    esi,DWORD PTR [esp+ecx*4]
  41c897:	xor    edi,ecx
  41c899:	mov    cl,0xe9
  41c89b:	or     edi,0x268ad301
  41c8a1:	hlt    
  41c8a2:	xchg   esi,eax
  41c8a3:	mov    ds:0x1e0c3225,al
  41c8a8:	inc    ebx
  41c8a9:	cmove  ecx,DWORD PTR [eax]
  41c8ac:	leave  
  41c8ad:	data16 mov ch,0xe1
  41c8b0:	pusha  
  41c8b1:	jo     0x41c850
  41c8b3:	or     DWORD PTR [ecx+ebp*4],ebp
  41c8b6:	std    
  41c8b7:	add    DWORD PTR [ecx],ecx
  41c8b9:	in     eax,0x79
  41c8bb:	jl     0x41c92a
  41c8bd:	std    
  41c8be:	adc    edi,0xd91f354d
  41c8c4:	cmp    BYTE PTR [ecx],0x83
  41c8c7:	loope  0x41c857
  41c8c9:	ins    DWORD PTR es:[edi],dx
  41c8ca:	pop    es
  41c8cb:	in     al,0x37
  41c8cd:	jl     0x41c86c
  41c8cf:	adc    dl,BYTE PTR [eax+0x57]
  41c8d2:	push   ss
  41c8d3:	mov    ss,WORD PTR [edx+0x2d]
  41c8d6:	iret   
  41c8d7:	inc    esi
  41c8d8:	ss lock dec ecx
  41c8db:	stc    
  41c8dc:	ins    DWORD PTR es:[edi],dx
  41c8dd:	sub    ecx,esp
  41c8df:	inc    esp
  41c8e0:	inc    eax
  41c8e1:	ja     0x41c8a5
  41c8e3:	outs   dx,DWORD PTR ds:[esi]
  41c8e4:	(bad)  
  41c8e5:	push   ecx
  41c8e6:	mov    ah,0xa2
  41c8e8:	repnz push ecx
  41c8ea:	retf   0xf8cb
  41c8ed:	xor    bl,bl
  41c8ef:	lods   eax,DWORD PTR ds:[esi]
  41c8f0:	xchg   ebx,eax
  41c8f1:	pop    ds
  41c8f2:	jp     0x41c8df
  41c8f4:	pop    esi
  41c8f5:	jno    0x41c8f0
  41c8f7:	(bad)  
  41c8f8:	jg     0x41c93d
  41c8fa:	push   edi
  41c8fb:	fcomp  QWORD PTR [edx]
  41c8fd:	jle    0x41c8ab
  41c8ff:	pop    ecx
  41c900:	aas    
  41c901:	pop    ecx
  41c902:	jmp    0x69eb631e
  41c907:	ins    DWORD PTR es:[edi],dx
  41c908:	xchg   edi,eax
  41c909:	inc    eax
  41c90a:	cmp    al,0xbb
  41c90c:	cwde   
  41c90d:	scas   al,BYTE PTR es:[edi]
  41c90e:	inc    edi
  41c90f:	push   eax
  41c910:	xchg   ebp,eax
  41c911:	jne    0x41c923
  41c913:	jmp    0x1d2a:0x770eae7c
  41c91a:	xchg   esp,eax
  41c91b:	mov    cl,BYTE PTR [ebp-0x5d093720]
  41c921:	or     dl,BYTE PTR [ebx]
  41c923:	mul    dl
  41c925:	push   cs
  41c926:	adc    al,0x13
  41c928:	loop   0x41c939
  41c92a:	outs   dx,DWORD PTR ds:[esi]
  41c92b:	sub    BYTE PTR [eax],dh
  41c92d:	push   0x1d
  41c92f:	cmp    DWORD PTR [esi-0x6c],esi
  41c932:	popa   
  41c933:	icebp  
  41c934:	pushf  
  41c935:	test   al,0x9c
  41c937:	inc    esi
  41c938:	imul   esp,DWORD PTR [esi],0xf0b7a8d4
  41c93e:	fst    QWORD PTR ds:0x7429629a
  41c944:	gs mov edi,0x3b240c7b
  41c94a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c94b:	dec    BYTE PTR [edx+eiz*2]
  41c94e:	test   dl,0xc1
  41c951:	sub    ah,cl
  41c953:	jl     0x41c911
  41c955:	or     BYTE PTR [edi+eiz*8-0xf9b9e23],bh
  41c95c:	xor    BYTE PTR [esp+ecx*2-0x1c3c8547],al
  41c963:	sub    BYTE PTR [ebx-0x48],bl
  41c966:	neg    edi
  41c968:	mov    dl,0x7a
  41c96a:	pop    ds
  41c96b:	mov    bh,0xa8
  41c96d:	enter  0x347e,0x52
  41c971:	inc    esp
  41c972:	or     edi,DWORD PTR [ebx]
  41c974:	cmp    edi,ecx
  41c976:	xchg   esi,eax
  41c977:	adc    al,0x17
  41c979:	inc    edx
  41c97a:	jno    0x41c9aa
  41c97c:	loopne 0x41c976
  41c97e:	sub    edx,DWORD PTR [esi+eax*1-0x2]
  41c982:	xchg   edi,eax
  41c983:	or     BYTE PTR [esi+edx*1],bh
  41c986:	xchg   ebx,eax
  41c987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c988:	jbe    0x41c9ea
  41c98a:	push   ebp
  41c98b:	shl    edx,1
  41c98d:	dec    edx
  41c98f:	mov    cl,BYTE PTR [edi]
  41c991:	sub    DWORD PTR [ebx-0x4d],esi
  41c994:	mov    gs,WORD PTR [ebp+eax*8+0x1b]
  41c998:	jecxz  0x41c92b
  41c99a:	aaa    
  41c99b:	test   BYTE PTR [eax+0x57],bl
  41c99e:	mov    eax,0xedfc9860
  41c9a3:	pop    es
  41c9a4:	dec    ecx
  41c9a5:	(bad)  
  41c9a6:	cmp    eax,0x3a334660
  41c9ab:	sbb    DWORD PTR [esi],edx
  41c9ad:	pop    edi
  41c9ae:	pop    esi
  41c9af:	mov    ds:0xb03f4b60,eax
  41c9b4:	leave  
  41c9b5:	sbb    edx,DWORD PTR [ecx]
  41c9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b8:	mov    al,0x19
  41c9ba:	outs   dx,DWORD PTR ds:[esi]
  41c9bb:	mov    ecx,0x4f33fd5
  41c9c0:	push   ebx
  41c9c1:	cmp    dl,BYTE PTR [edi]
  41c9c3:	outs   dx,DWORD PTR ds:[esi]
  41c9c4:	clc    
  41c9c5:	inc    edi
  41c9c6:	arpl   cx,di
  41c9c8:	mov    eax,ds:0xad4cd3fc
  41c9cd:	icebp  
  41c9ce:	jnp    0x41c983
  41c9d0:	hlt    
  41c9d1:	clc    
  41c9d2:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41c9d4:	or     al,0x3d
  41c9d6:	mov    al,ds:0xcd0fee2a
  41c9db:	mov    edi,0xdee76ec6
  41c9e0:	fcmovb st,st(6)
  41c9e2:	popa   
  41c9e3:	jo     0x41c9ae
  41c9e5:	add    al,0x5e
  41c9e7:	shr    DWORD PTR [edi-0x2b5a95c7],1
  41c9ed:	popf   
  41c9ee:	repnz in al,0xa6
  41c9f1:	test   eax,0x4c623cbd
  41c9f6:	fadd   QWORD PTR [eax]
  41c9f8:	mov    eax,0x91c3da36
  41c9fd:	stos   BYTE PTR es:[edi],al
  41c9fe:	aaa    
  41c9ff:	shl    DWORD PTR [edx+0x7b],cl
  41ca02:	or     DWORD PTR ds:0x68b8d4da,esi
  41ca08:	push   ds
  41ca09:	(bad)  
  41ca0a:	div    DWORD PTR [esi+edx*2-0x662e7d44]
  41ca11:	add    BYTE PTR [ebx-0x28867cdb],0x83
  41ca18:	fcomp  QWORD PTR [ebp-0x75]
  41ca1b:	lods   al,BYTE PTR ds:[esi]
  41ca1c:	push   0xffffffec
  41ca1e:	shl    BYTE PTR [edx+0x5d],1
  41ca21:	jno    0x41c9ca
  41ca23:	in     al,0x94
  41ca25:	mov    esp,0xcd058d23
  41ca2a:	in     al,dx
  41ca2b:	sbb    dh,ch
  41ca2d:	repnz inc edi
  41ca2f:	inc    eax
  41ca30:	data16 cmc 
  41ca32:	sub    eax,0xfdd273aa
  41ca37:	ret    0x73df
  41ca3a:	jo     0x41ca24
  41ca3c:	(bad)  
  41ca3d:	jg     0x41c9e7
  41ca3f:	cmp    ebx,eax
  41ca41:	and    dl,BYTE PTR [ecx-0x4f]
  41ca44:	stos   DWORD PTR es:[edi],eax
  41ca45:	ficom  WORD PTR [edx+eax*1+0x5d]
  41ca49:	sub    BYTE PTR [eax-0x4ed57ccd],dl
  41ca4f:	pop    es
  41ca50:	and    eax,0xe57e385
  41ca55:	add    esp,DWORD PTR [edi-0xb215ba5]
  41ca5b:	cmp    ch,dl
  41ca5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca5e:	mov    edx,0xb28d8ed2
  41ca63:	mov    eax,0x2a3a4de6
  41ca68:	xor    esi,eax
  41ca6a:	adc    eax,0x4f19be72
  41ca6f:	or     ch,0xfc
  41ca72:	push   0x3ac6a1d0
  41ca77:	sub    esp,esp
  41ca79:	push   eax
  41ca7a:	sbb    esi,DWORD PTR [ebx+0x371e91c9]
  41ca80:	mov    ?,edx
  41ca82:	adc    DWORD PTR [edx+0x482866dc],ecx
  41ca88:	adc    esp,DWORD PTR [edx+0x58e4b43e]
  41ca8e:	xchg   sp,ax
  41ca90:	fwait
  41ca91:	jg     0x41cabe
  41ca93:	fcmovbe st,st(5)
  41ca95:	jg     0x41ca91
  41ca97:	push   eax
  41ca98:	cld    
  41ca99:	lahf   
  41ca9a:	sub    DWORD PTR [eax-0x6e],0xfbfa3b3e
  41caa1:	push   cs
  41caa2:	pop    ds
  41caa3:	pop    eax
  41caa4:	fistp  WORD PTR [ecx-0x13]
  41caa7:	jp     0x41ca67
  41caa9:	mov    bl,0x54
  41caab:	and    eax,0x1b6f174f
  41cab0:	push   0x56
  41cab2:	inc    esp
  41cab3:	inc    BYTE PTR [ecx]
  41cab5:	data16 mov bh,BYTE PTR [ebp+0x66]
  41cab9:	push   es
  41caba:	xor    eax,0x2318f141
  41cabf:	push   ebx
  41cac0:	and    al,0xe8
  41cac2:	cmp    al,0xab
  41cac4:	mov    WORD PTR [esi+esi*4],ds
  41cac7:	mov    BYTE PTR [ecx-0x2165ae0a],bl
  41cacd:	cs je  0x41cae3
  41cad0:	out    dx,al
  41cad1:	push   esi
  41cad2:	stos   DWORD PTR es:[edi],eax
  41cad3:	inc    eax
  41cad4:	pop    ecx
  41cad5:	cmp    ebp,DWORD PTR [esi-0x12]
  41cad8:	mov    dl,0xcd
  41cada:	xor    DWORD PTR [ebx-0x2eedc3b7],0x35
  41cae1:	inc    ebx
  41cae2:	pop    ds
  41cae3:	cld    
  41cae4:	les    ecx,FWORD PTR [edi+0x6a]
  41cae7:	pushf  
  41cae8:	into   
  41cae9:	xchg   ebp,eax
  41caea:	dec    esi
  41caeb:	lea    edx,[ecx-0x61654f62]
  41caf1:	push   esi
  41caf2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41caf4:	xor    ebp,DWORD PTR [ecx]
  41caf6:	or     eax,0x6f160775
  41cafb:	sbb    al,0xec
  41cafd:	sti    
  41cafe:	mov    edx,DWORD PTR [ebx-0x4be314ed]
  41cb04:	je     0x41cb60
  41cb06:	pop    eax
  41cb07:	adc    ecx,ebx
  41cb09:	jmp    0x41cad7
  41cb0b:	jno    0x41ca9f
  41cb0d:	in     eax,dx
  41cb0e:	or     al,0x5c
  41cb10:	out    0xb9,al
  41cb12:	push   0x22
  41cb14:	add    eax,0x3a26e054
  41cb19:	loope  0x41cb8a
  41cb1b:	add    ah,BYTE PTR [esp+esi*2+0x80716a0]
  41cb22:	adc    DWORD PTR [ecx-0x7657d3b9],esp
  41cb28:	dec    esp
  41cb29:	stos   DWORD PTR es:[edi],eax
  41cb2a:	add    eax,DWORD PTR [edi-0x17]
  41cb2d:	adc    al,ch
  41cb2f:	push   edi
  41cb30:	xor    esp,DWORD PTR [ebx-0x7eaebe22]
  41cb36:	push   ebp
  41cb37:	pop    ebp
  41cb38:	mov    eax,ds:0x3071ab73
  41cb3d:	add    ch,al
  41cb3f:	scas   al,BYTE PTR es:[edi]
  41cb40:	jb     0x41cb57
  41cb42:	jmp    DWORD PTR [ebx+0x250c8199]
  41cb48:	jp     0x41cb02
  41cb4a:	xchg   esi,eax
  41cb4b:	clc    
  41cb4c:	cmp    al,0xfd
  41cb4e:	mov    esi,0x4c92481
  41cb53:	jno    0x41cb70
  41cb55:	adc    al,0x6
  41cb57:	dec    ebx
  41cb58:	push   0x6dec56de
  41cb5d:	push   cs
  41cb5e:	daa    
  41cb5f:	pop    esp
  41cb60:	scas   eax,DWORD PTR es:[edi]
  41cb61:	ret    
  41cb62:	sub    ebx,edx
  41cb64:	cmp    BYTE PTR [ebx+0x77],cl
  41cb67:	ins    BYTE PTR es:[edi],dx
  41cb68:	push   ebx
  41cb69:	xchg   edx,eax
  41cb6a:	jbe    0x41cb16
  41cb6c:	sbb    al,0x9e
  41cb6e:	xor    al,0xc
  41cb70:	jmp    0x8813a08a
  41cb75:	scas   eax,DWORD PTR es:[edi]
  41cb76:	pop    ecx
  41cb77:	cmp    al,0xe2
  41cb79:	mov    WORD PTR [edi*1-0x3252113b],gs
  41cb80:	loop   0x41cba0
  41cb82:	arpl   WORD PTR [esi-0x52],dx
  41cb85:	inc    esp
  41cb86:	ds jecxz 0x41cbc3
  41cb89:	and    edi,DWORD PTR [edx-0x15]
  41cb8c:	test   BYTE PTR [edi],bh
  41cb8e:	ficomp DWORD PTR [ebp+0x2cd0429d]
  41cb94:	sub    edi,edx
  41cb96:	adc    bh,BYTE PTR [eax+0x74]
  41cb99:	adc    DWORD PTR [eax+0x26ecf198],edi
  41cb9f:	push   esp
  41cba0:	loop   0x41cbe2
  41cba2:	icebp  
  41cba3:	pop    ebx
  41cba4:	(bad)  
  41cba5:	mov    al,0xa9
  41cba7:	(bad)  
  41cba8:	xlat   BYTE PTR ds:[ebx]
  41cba9:	gs or  al,0xa2
  41cbac:	pop    es
  41cbad:	div    bh
  41cbaf:	push   ebx
  41cbb0:	idiv   BYTE PTR [eax-0x515b385d]
  41cbb6:	fist   WORD PTR [edx]
  41cbb8:	jecxz  0x41cbdb
  41cbba:	rcr    ebx,0x1d
  41cbbd:	lock xor edx,DWORD PTR [edx-0x61]
  41cbc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbc2:	stc    
  41cbc3:	xor    ebx,edx
  41cbc5:	lods   eax,DWORD PTR ds:[esi]
  41cbc6:	aam    0x5a
  41cbc8:	mov    bl,0x33
  41cbca:	aaa    
  41cbcb:	push   edx
  41cbcc:	adc    BYTE PTR [esi+0x4a],al
  41cbcf:	mov    BYTE PTR [ecx],bh
  41cbd1:	fistp  WORD PTR [esi]
  41cbd3:	rol    BYTE PTR [edi+0x213bb45d],0x33
  41cbda:	jl     0x41cbaf
  41cbdc:	xchg   edi,eax
  41cbdd:	popa   
  41cbde:	out    0x6b,eax
  41cbe0:	outs   dx,DWORD PTR ds:[esi]
  41cbe1:	mov    ds:0xbbe1e54d,eax
  41cbe6:	(bad)  
  41cbe7:	cmp    eax,0xacaaba94
  41cbec:	jg     0x41cb99
  41cbee:	addr16 inc ebx
  41cbf0:	pop    esi
  41cbf1:	sub    dh,bh
  41cbf3:	mov    WORD PTR [ecx+0x2c],ds
  41cbf6:	out    0xf9,al
  41cbf8:	stos   DWORD PTR es:[edi],eax
  41cbf9:	dec    edi
  41cbfa:	push   esi
  41cbfb:	pusha  
  41cbfc:	(bad)
  41cbff:	aam    0x1e
  41cc01:	mov    ch,0xb9
  41cc03:	(bad)  
  41cc04:	dec    esp
  41cc05:	sbb    DWORD PTR [eax+0x18d8ee0e],ecx
  41cc0b:	lds    ecx,FWORD PTR [edx-0x1]
  41cc0e:	add    DWORD PTR ds:0x345f89cb,esp
  41cc14:	xlat   BYTE PTR ds:[ebx]
  41cc15:	adc    eax,0xba24b553
  41cc1a:	popf   
  41cc1b:	and    BYTE PTR [edx],bl
  41cc1d:	fcomp  QWORD PTR [eax+0x38242740]
  41cc23:	jge    0x41cc8d
  41cc25:	div    DWORD PTR [edi-0x7e]
  41cc28:	(bad)
  41cc2d:	mov    WORD PTR [ebx],gs
  41cc2f:	jmp    0x41cc45
  41cc31:	out    dx,eax
  41cc32:	sbb    al,0x1b
  41cc34:	je     0x41cc12
  41cc36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc37:	test   eax,0x62aef23e
  41cc3c:	pop    edi
  41cc3d:	jno    0x41cc60
  41cc3f:	adc    ecx,esi
  41cc41:	xchg   edi,eax
  41cc42:	inc    ecx
  41cc43:	mov    ecx,0xdd096de4
  41cc48:	xchg   ebx,eax
  41cc49:	mov    edi,0xb5d08a0e
  41cc4e:	int    0x71
  41cc50:	outs   dx,BYTE PTR ds:[esi]
  41cc51:	or     bh,BYTE PTR [edi]
  41cc53:	pusha  
  41cc54:	in     al,dx
  41cc55:	cmp    BYTE PTR [edi-0x79298c2f],ah
  41cc5b:	push   eax
  41cc5c:	inc    edi
  41cc5d:	js     0x41cc4b
  41cc5f:	sub    DWORD PTR [ecx-0x861c55e],esp
  41cc65:	retf   
  41cc66:	out    dx,eax
  41cc67:	ins    DWORD PTR es:[edi],dx
  41cc68:	sbb    al,0x95
  41cc6a:	and    ebp,DWORD PTR [edi+0xf]
  41cc6d:	cmp    DWORD PTR [edi],esi
  41cc6f:	fsubr  st,st(6)
  41cc71:	cs popa 
  41cc73:	ffreep st(3)
  41cc75:	test   eax,0xf2ac1f3e
  41cc7a:	dec    ebx
  41cc7b:	push   ecx
  41cc7c:	outs   dx,DWORD PTR ds:[esi]
  41cc7d:	pop    ss
  41cc7e:	hlt    
  41cc7f:	(bad)  
  41cc80:	jne    0x41cc4f
  41cc82:	(bad)  
  41cc85:	in     eax,0x6f
  41cc87:	jl     0x41ccad
  41cc89:	inc    ebx
  41cc8a:	jl     0x41cc5d
  41cc8c:	mov    ds:0xfd2375ee,eax
  41cc91:	xor    cl,ch
  41cc93:	sar    BYTE PTR [ecx],0x48
  41cc96:	loope  0x41cc18
  41cc98:	cmp    DWORD PTR [ecx-0x45],esp
  41cc9b:	mov    ah,0x5
  41cc9d:	stos   DWORD PTR es:[edi],eax
  41cc9e:	clts   
  41cca0:	xchg   esp,eax
  41cca1:	push   esi
  41cca2:	repnz adc DWORD PTR [ecx-0x4b15d292],ecx
  41cca9:	stos   DWORD PTR es:[edi],eax
  41ccaa:	inc    eax
  41ccab:	pop    edi
  41ccac:	push   ss
  41ccad:	adc    BYTE PTR [esi+0x10],0x88
  41ccb1:	into   
  41ccb2:	fadd   QWORD PTR [ebp+edx*8+0x22]
  41ccb6:	dec    esi
  41ccb7:	pop    esi
  41ccb8:	(bad)  
  41ccba:	xchg   BYTE PTR [ebp+0x532e27a3],dh
  41ccc0:	dec    eax
  41ccc1:	push   0x8a77c463
  41ccc6:	dec    ecx
  41ccc7:	scas   eax,DWORD PTR es:[edi]
  41ccc8:	cmc    
  41ccc9:	(bad)  [edi-0x6]
  41cccc:	test   DWORD PTR [edi],ebx
  41ccce:	mov    WORD PTR [esi+0x240d3d5c],cs
  41ccd4:	inc    ecx
  41ccd5:	sbb    BYTE PTR [edi-0x11],bl
  41ccd8:	mov    esi,DWORD PTR [ebx+0x19]
  41ccdb:	mov    dh,0x80
  41ccdd:	mov    bl,0x4a
  41ccdf:	inc    ebp
  41cce0:	stc    
  41cce1:	data16 mov bh,BYTE PTR [esi-0x31]
  41cce5:	jle    0x41cc6e
  41cce7:	dec    ebx
  41cce8:	inc    ecx
  41cce9:	repz (bad) 
  41cceb:	rcr    bl,cl
  41cced:	push   es
  41ccee:	fimul  WORD PTR [edx+edx*4]
  41ccf1:	sbb    DWORD PTR [edi],edi
  41ccf3:	pushf  
  41ccf4:	mov    ah,BYTE PTR [edi]
  41ccf6:	mov    edi,0xced227e6
  41ccfb:	pop    ss
  41ccfc:	leave  
  41ccfd:	into   
  41ccfe:	jp     0x41cd73
  41cd00:	mov    DWORD PTR [ecx-0x756a638],ebp
  41cd06:	addr16 pushf 
  41cd08:	shl    DWORD PTR ds:0xb7235de9,cl
  41cd0e:	or     bl,BYTE PTR [ecx+0x68b46e13]
  41cd14:	clc    
  41cd15:	repz jle 0x41cd0b
  41cd18:	jmp    0x41cd3a
  41cd1a:	or     DWORD PTR [esi],ecx
  41cd1c:	cmp    BYTE PTR cs:[edi+0x51dbc2a6],0x48
  41cd24:	xchg   edi,eax
  41cd25:	push   edi
  41cd26:	iret   
  41cd27:	xchg   DWORD PTR [ecx],edx
  41cd29:	shl    DWORD PTR [ecx],1
  41cd2b:	push   es
  41cd2c:	(bad)  
  41cd2e:	imul   eax,ebp,0xf30ca5a5
  41cd34:	dec    ebx
  41cd35:	repnz pop edi
  41cd37:	popa   
  41cd38:	cs std 
  41cd3a:	jmp    0x9bd61049
  41cd3f:	(bad)  
  41cd40:	rcr    dh,1
  41cd42:	enter  0xb861,0x31
  41cd46:	in     eax,0x16
  41cd48:	repz aam 0x44
  41cd4b:	push   es
  41cd4c:	xor    edi,DWORD PTR [edi]
  41cd4e:	dec    edx
  41cd4f:	in     eax,dx
  41cd50:	xor    eax,0x27dc2cd9
  41cd55:	fdiv   DWORD PTR [ebx+0x4e]
  41cd58:	xlat   BYTE PTR ds:[ebx]
  41cd59:	and    eax,0xec68f23e
  41cd5e:	push   edx
  41cd5f:	sbb    al,0x8d
  41cd61:	sbb    al,0x9f
  41cd63:	into   
  41cd64:	ret    0x721f
  41cd67:	xchg   ecx,eax
  41cd68:	fst    st(5)
  41cd6a:	fidivr WORD PTR ds:0x4f1897ea
  41cd70:	sbb    al,0x40
  41cd72:	dec    eax
  41cd73:	ds ds aad 0x6a
  41cd77:	mov    esp,0xe949b76c
  41cd7c:	lahf   
  41cd7d:	add    DWORD PTR ds:0xbea48f9e,0x48
  41cd84:	inc    eax
  41cd85:	test   BYTE PTR [ebx],0xbb
  41cd88:	int    0x69
  41cd8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd8b:	repnz fild QWORD PTR [esp+eax*8]
  41cd8f:	xor    ch,BYTE PTR [ecx]
  41cd91:	scas   eax,DWORD PTR es:[edi]
  41cd92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd93:	sub    bl,BYTE PTR [ebp-0x3e]
  41cd96:	sub    BYTE PTR [ecx-0x2a],dh
  41cd99:	xor    BYTE PTR [esi-0x55dd4fc],dl
  41cd9f:	mov    ds:0x6eb80486,al
  41cda4:	mov    eax,ds:0x92c5950a
  41cda9:	inc    ecx
  41cdaa:	(bad)  
  41cdab:	repnz scas eax,DWORD PTR es:[edi]
  41cdad:	retf   
  41cdae:	cld    
  41cdaf:	out    0xd6,al
  41cdb1:	sub    BYTE PTR [edx-0x37],0xfa
  41cdb5:	jae    0x41cd73
  41cdb7:	int3   
  41cdb8:	xor    bh,BYTE PTR [edi-0x64e2f32d]
  41cdbe:	scas   al,BYTE PTR es:[edi]
  41cdbf:	xchg   edx,eax
  41cdc0:	and    al,0x79
  41cdc2:	enter  0xbbdd,0xe7
  41cdc6:	or     eax,0x9c6eff49
  41cdcb:	iret   
  41cdcc:	es aad 0x48
  41cdcf:	sub    bl,BYTE PTR [esi+0x6fdd279b]
  41cdd5:	cmp    DWORD PTR [esi-0x280b66d1],esi
  41cddb:	out    0x37,al
  41cddd:	into   
  41cdde:	shl    BYTE PTR [eax+0x28],0x22
  41cde2:	mov    dh,0x61
  41cde4:	jle    0x41cd95
  41cde6:	(bad)  [edi]
  41cde8:	aas    
  41cde9:	lds    eax,FWORD PTR [edx]
  41cdeb:	(bad)  [edx+ecx*8-0x3f13ff11]
  41cdf2:	mov    DWORD PTR [edx+0x2b],eax
  41cdf5:	jmp    0xd428:0xff630c19
  41cdfc:	ds retf 
  41cdfe:	ss jmp 0xabfd:0x931bfc3b
  41ce06:	rcl    BYTE PTR [ebx],1
  41ce08:	dec    edx
  41ce09:	int    0x7
  41ce0b:	int3   
  41ce0c:	pop    ecx
  41ce0d:	outs   dx,DWORD PTR ds:[esi]
  41ce0e:	std    
  41ce0f:	ja     0x41cdde
  41ce11:	rcr    edx,0x49
  41ce14:	pop    es
  41ce15:	push   esp
  41ce16:	rcr    esi,0x75
  41ce19:	jmp    0x1b4c:0x7e34cb3a
  41ce20:	and    al,0x6d
  41ce22:	fcmovnb st,st(0)
  41ce24:	loopne 0x41cdac
  41ce26:	(bad)  
  41ce29:	push   esi
  41ce2a:	jge    0x41ce94
  41ce2c:	stos   BYTE PTR es:[edi],al
  41ce2d:	mov    dl,0xc8
  41ce2f:	push   cs
  41ce30:	and    eax,0xb0de79e3
  41ce35:	loopne 0x41cde3
  41ce37:	std    
  41ce38:	mov    ah,0xfd
  41ce3a:	dec    edi
  41ce3b:	fwait
  41ce3c:	popa   
  41ce3d:	cdq    
  41ce3e:	and    al,0x2f
  41ce40:	pop    ecx
  41ce41:	push   es
  41ce42:	ficomp WORD PTR [edi]
  41ce44:	add    ebx,ecx
  41ce46:	sahf   
  41ce47:	fcom   DWORD PTR [ecx+0x59ddf373]
  41ce4d:	mov    cl,0xa2
  41ce4f:	dec    ecx
  41ce50:	sahf   
  41ce51:	add    eax,0x340d2fe2
  41ce56:	mov    ebx,0x67eaefa2
  41ce5b:	jg     0x41ce30
  41ce5d:	lahf   
  41ce5e:	iret   
  41ce5f:	call   DWORD PTR [ebx]
  41ce61:	mov    eax,ds:0xfae7944a
  41ce66:	shl    ebx,1
  41ce68:	mov    ecx,0xc59e1910
  41ce6d:	jae    0x41ceac
  41ce6f:	not    BYTE PTR [edi-0x19]
  41ce72:	jo     0x41ce2a
  41ce74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce75:	jecxz  0x41cecf
  41ce77:	into   
  41ce78:	and    al,0x57
  41ce7a:	test   eax,0xd8dcd8fb
  41ce7f:	sbb    DWORD PTR [edi-0x6d91c355],esi
  41ce85:	inc    eax
  41ce86:	jmp    0x41ce29
  41ce88:	xchg   ebp,eax
  41ce89:	shl    BYTE PTR [edi],0x26
  41ce8c:	push   ecx
  41ce8d:	jmp    0x2691a037
  41ce92:	mov    bl,0x43
  41ce94:	jg     0x41ce38
  41ce96:	and    esi,esp
  41ce98:	cmp    ecx,esi
  41ce9a:	outs   dx,DWORD PTR ds:[esi]
  41ce9b:	jl     0x41cefc
  41ce9d:	mov    esi,0xf3f7a0
  41cea2:	addr16 popa 
  41cea4:	jae    0x41cee5
  41cea6:	dec    esi
  41cea7:	mov    ah,0xf9
  41cea9:	mov    ch,0xca
  41ceab:	cwde   
  41ceac:	js     0x41cee7
  41ceae:	stc    
  41ceaf:	xor    ecx,DWORD PTR [ebp-0x67d758e0]
  41ceb5:	lds    edi,FWORD PTR [ecx+0x16]
  41ceb8:	jns    0x41cf26
  41ceba:	mov    ecx,0xabdc76e4
  41cebf:	test   eax,eax
  41cec1:	mov    edx,0xa33e18ee
  41cec6:	mov    edi,0xac3b366d
  41cecb:	frstor [ebx+0x68e38be2]
  41ced1:	call   0x84c6:0x92257038
  41ced8:	push   edx
  41ced9:	push   ss
  41ceda:	xor    BYTE PTR [ebp-0x28fcee79],dl
  41cee0:	sub    BYTE PTR [ebx+edi*8],ch
  41cee3:	and    ch,bh
  41cee5:	mov    bl,BYTE PTR [edi+0x28]
  41cee8:	stc    
  41cee9:	aas    
  41ceea:	pop    edi
  41ceeb:	adc    bl,BYTE PTR [ecx-0x4b]
  41ceee:	mov    cl,0x19
  41cef0:	fucomi st,st(6)
  41cef2:	or     edx,ecx
  41cef4:	mov    edx,0x1c859331
  41cef9:	cmp    eax,0x6d54b178
  41cefe:	jecxz  0x41cea0
  41cf00:	fs ret 0xf16
  41cf04:	jb     0x41cf4f
  41cf06:	and    al,0xb5
  41cf08:	fs pop esp
  41cf0a:	push   ds
  41cf0b:	mov    ds:0x8c49371a,eax
  41cf10:	adc    dh,BYTE PTR [ecx+0x63]
  41cf13:	nop
  41cf14:	ret    
  41cf15:	and    BYTE PTR [edx+ebp*4],bh
  41cf18:	inc    ebp
  41cf19:	dec    BYTE PTR [edx+0x4]
  41cf1c:	jmp    0x41ceb4
  41cf1e:	fistp  QWORD PTR ds:0x9f00f8a0
  41cf24:	pop    eax
  41cf25:	and    esi,edx
  41cf27:	scas   al,BYTE PTR es:[edi]
  41cf28:	xor    al,0xa9
  41cf2a:	inc    esi
  41cf2b:	outs   dx,DWORD PTR ds:[esi]
  41cf2c:	pop    ds
  41cf2d:	pop    ss
  41cf2e:	xchg   edi,eax
  41cf2f:	inc    ecx
  41cf30:	sbb    ch,BYTE PTR [ebx-0x40]
  41cf33:	jg     0x41cec1
  41cf35:	aad    0x82
  41cf37:	xor    al,0x9e
  41cf39:	loopne 0x41cf8b
  41cf3b:	std    
  41cf3c:	retf   
  41cf3d:	fld    TBYTE PTR [edx-0x343d044]
  41cf43:	push   cs
  41cf44:	stc    
  41cf45:	ins    DWORD PTR es:[edi],dx
  41cf46:	dec    edx
  41cf47:	retf   
  41cf48:	or     al,0xb
  41cf4a:	lods   eax,DWORD PTR ds:[esi]
  41cf4b:	xchg   edi,eax
  41cf4c:	aas    
  41cf4d:	and    BYTE PTR [edi+0x60eeb96b],0x3a
  41cf54:	inc    edi
  41cf55:	out    0xc5,al
  41cf57:	xchg   edi,eax
  41cf58:	in     eax,dx
  41cf59:	and    ebx,0x57
  41cf5c:	adc    ebx,DWORD PTR [eax]
  41cf5e:	mov    edi,0xcdae1e56
  41cf63:	mov    bl,0x97
  41cf65:	mov    ah,0x9e
  41cf67:	pop    eax
  41cf68:	mov    dl,dl
  41cf6a:	out    dx,eax
  41cf6b:	inc    esp
  41cf6c:	mov    ah,0xba
  41cf6e:	clc    
  41cf6f:	push   es
  41cf70:	sub    al,0xc5
  41cf72:	out    0x3a,eax
  41cf74:	std    
  41cf75:	lds    ebx,FWORD PTR [esi+esi*2]
  41cf78:	fwait
  41cf79:	sub    sp,WORD PTR [ecx]
  41cf7c:	dec    ecx
  41cf7d:	test   ebp,0xfd9e6d0
  41cf83:	xchg   esi,eax
  41cf84:	jbe    0x41cfac
  41cf86:	pop    edi
  41cf87:	sbb    ah,BYTE PTR [eax]
  41cf89:	test   eax,0x93814888
  41cf8e:	xchg   ebx,eax
  41cf8f:	sbb    cl,BYTE PTR [ecx+0x29]
  41cf92:	push   edx
  41cf93:	mov    eax,0xd67860d5
  41cf98:	fist   DWORD PTR [ecx-0x75]
  41cf9b:	push   0xffffff9b
  41cf9d:	cmp    BYTE PTR [eax],ch
  41cf9f:	xchg   ebx,eax
  41cfa0:	jnp    0x41cfad
  41cfa2:	adc    al,0xb4
  41cfa4:	je     0x41cf64
  41cfa6:	adc    al,0x2
  41cfa8:	cmp    BYTE PTR [ecx],al
  41cfaa:	sahf   
  41cfab:	mov    edx,0x558437b1
  41cfb0:	dec    eax
  41cfb1:	stc    
  41cfb2:	xchg   ecx,eax
  41cfb3:	(bad)  
  41cfb5:	bound  ebp,QWORD PTR ds:0x9e5930ee
  41cfbb:	fwait
  41cfbc:	aaa    
  41cfbd:	fist   WORD PTR [ebp+ebx*2-0x3d4f4a90]
  41cfc4:	sbb    DWORD PTR [edx],0xffffffeb
  41cfc7:	cdq    
  41cfc8:	mov    bh,BYTE PTR [esi+0x7f]
  41cfcb:	js     0x41cfa2
  41cfcd:	cmp    edx,DWORD PTR [eax+0x28]
  41cfd0:	jle    0x41cffa
  41cfd2:	cmc    
  41cfd3:	jecxz  0x41cfe4
  41cfd5:	cli    
  41cfd6:	push   ss
  41cfd7:	add    ebx,DWORD PTR [edi+0x7d318d1f]
  41cfdd:	test   eax,edi
  41cfdf:	add    eax,0xbf3dfd98
  41cfe4:	test   BYTE PTR [edi-0xba5ead8],bh
  41cfea:	fs xor edx,edi
  41cfed:	jno    0x41d026
  41cfef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cff0:	cmp    DWORD PTR [ebx],edi
  41cff2:	rcl    dl,cl
  41cff4:	mov    cl,0x77
  41cff6:	xchg   esp,eax
  41cff7:	(bad)  
  41cff8:	or     eax,0xd798a0b7
  41cffd:	fidivr WORD PTR [eax-0x24]
  41d000:	cmovl  ebp,DWORD PTR [ebp+0xa]
  41d004:	mov    ds:0xf8bec2a5,al
  41d009:	(bad)  
  41d00a:	jno    0x41cfec
  41d00c:	mov    dh,al
  41d00e:	mov    ds,WORD PTR [eax-0x556d82b3]
  41d014:	adc    al,0xd
  41d016:	out    dx,al
  41d017:	in     al,dx
  41d018:	fiadd  DWORD PTR [ebp+ebp*4+0x5b2f6e92]
  41d01f:	mov    ds:0xb9c3ae45,eax
  41d024:	pop    ecx
  41d025:	dec    ebx
  41d026:	ror    dh,0xb8
  41d029:	in     eax,dx
  41d02a:	inc    edi
  41d02b:	hlt    
  41d02c:	mov    ?,WORD PTR [esi-0x79]
  41d02f:	int3   
  41d030:	and    eax,0x66022795
  41d035:	sub    DWORD PTR [edi-0x3a],eax
  41d038:	and    BYTE PTR [ecx-0x5b],cl
  41d03b:	dec    esp
  41d03c:	and    BYTE PTR [edx+0x33],cl
  41d03f:	jmp    0x41cfe8
  41d041:	imul   eax,DWORD PTR ds:0x780b71a2,0xffffffde
  41d048:	hlt    
  41d049:	rcr    DWORD PTR [ecx],cl
  41d04b:	es (bad) 
  41d04d:	xchg   esi,eax
  41d04e:	mov    ?,WORD PTR [ebp-0x25]
  41d051:	in     eax,dx
  41d052:	jle    0x41d0c0
  41d054:	cmp    DWORD PTR [edx+0x7810584b],ebp
  41d05a:	sub    BYTE PTR [ebx+eiz*8-0x7],dl
  41d05e:	retf   
  41d05f:	push   0xffffff9f
  41d061:	test   BYTE PTR [esi],al
  41d063:	mov    DWORD PTR [ebx-0xd],esp
  41d066:	dec    ebx
  41d067:	das    
  41d068:	lock jbe 0x41d07c
  41d06b:	stos   BYTE PTR es:[edi],al
  41d06c:	shr    DWORD PTR [edi],0x72
  41d06f:	lea    edi,[edi-0x677006c4]
  41d075:	and    eax,0x35d9bc0a
  41d07a:	imul   esi,DWORD PTR [ebp+ebp*4-0x3d377bc1],0x9809bab3
  41d085:	inc    esi
  41d086:	call   0x9243:0xa155ba6d
  41d08d:	xor    BYTE PTR [ebx+0x56d0adda],bl
  41d093:	nop
  41d094:	dec    esp
  41d095:	push   ecx
  41d096:	loop   0x41d08e
  41d098:	retf   0x8b38
  41d09b:	mov    edx,0xc96093c2
  41d0a0:	jl     0x41d0fb
  41d0a2:	dec    esi
  41d0a3:	xchg   DWORD PTR [eax],ebp
  41d0a5:	out    0x5d,al
  41d0a7:	repz adc BYTE PTR [esi-0x4b7ee09c],ah
  41d0ae:	in     al,0x11
  41d0b0:	adc    DWORD PTR ds:0x16b94503,ebx
  41d0b6:	and    bl,ah
  41d0b8:	test   DWORD PTR cs:[eax-0x79616514],ebp
  41d0bf:	mov    dh,0x97
  41d0c1:	aas    
  41d0c2:	sub    al,0xd
  41d0c4:	out    0xaf,al
  41d0c6:	(bad)  
  41d0c7:	rol    BYTE PTR ds:0x45108ef9,cl
  41d0cd:	push   0x4612908a
  41d0d2:	sahf   
  41d0d3:	mov    al,ds:0x24c47a0a
  41d0d8:	jg     0x41d0b2
  41d0da:	mov    bl,0x16
  41d0dc:	fadd   DWORD PTR [ebp+0xb83726b]
  41d0e2:	mov    esi,0x1daac243
  41d0e7:	cmp    eax,0xf5943e71
  41d0ec:	inc    edx
  41d0ed:	jne    0x41d14a
  41d0ef:	mov    bl,0xb5
  41d0f1:	xchg   ebx,eax
  41d0f2:	bound  esp,QWORD PTR [edi]
  41d0f4:	icebp  
  41d0f5:	mov    ebp,DWORD PTR [edi-0x483ba65e]
  41d0fb:	and    eax,esp
  41d0fd:	mov    ebp,0x344ce7f4
  41d102:	pop    ss
  41d103:	popa   
  41d104:	lock xchg DWORD PTR [ecx],esp
  41d107:	or     al,0xc4
  41d109:	cwde   
  41d10a:	fsub   st,st(1)
  41d10c:	add    eax,0x252db6fe
  41d111:	dec    ebp
  41d112:	inc    edi
  41d113:	sub    eax,0x779ab35a
  41d118:	in     eax,dx
  41d119:	shl    ebp,1
  41d11b:	inc    esp
  41d11c:	mul    BYTE PTR [ebx+0x1032e96e]
  41d122:	in     eax,dx
  41d123:	loopne 0x41d0d7
  41d125:	sbb    BYTE PTR [esi+0x7f],0xbd
  41d129:	or     dl,dl
  41d12b:	dec    esi
  41d12c:	pop    edx
  41d12d:	pop    ecx
  41d12e:	jb     0x41d11f
  41d130:	mov    dl,0x60
  41d132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d133:	not    cl
  41d135:	mov    edx,0x9b6607e4
  41d13a:	fistp  QWORD PTR [esp+eax*4-0x17abab3]
  41d141:	push   0xa23427c8
  41d146:	push   0x8b3d97ab
  41d14b:	push   0xf7af3f4a
  41d150:	cmp    al,bh
  41d152:	mov    bl,0x7
  41d154:	std    
  41d155:	loopne 0x41d0f8
  41d157:	out    0x74,al
  41d159:	pop    es
  41d15a:	add    dh,ah
  41d15c:	mov    BYTE PTR [ecx+0x76a36437],ch
  41d162:	adc    BYTE PTR [edi],bh
  41d164:	arpl   bx,ax
  41d166:	pop    ebp
  41d167:	ja     0x41d171
  41d169:	cdq    
  41d16a:	mov    edx,0x96cb4cdc
  41d16f:	(bad)  
  41d173:	and    BYTE PTR [edx-0x19],bl
  41d176:	mov    esi,0x8f9e6024
  41d17b:	rcl    DWORD PTR [esp+edx*1],0x29
  41d17f:	push   eax
  41d180:	sar    DWORD PTR [eax+0x25],0xea
  41d184:	mov    ecx,0x9687475e
  41d189:	fdiv   QWORD PTR [esi+0x2d3237f5]
  41d18f:	mov    al,ds:0x66ae3fca
  41d194:	mov    ds:0x16059cde,al
  41d199:	dec    ebx
  41d19a:	les    esi,FWORD PTR [edx]
  41d19c:	xchg   ebx,eax
  41d19d:	jns    0x41d1b6
  41d19f:	add    al,0xc3
  41d1a1:	imul   ebp,DWORD PTR [eax],0x6bc15436
  41d1a7:	and    cl,dh
  41d1a9:	push   ebp
  41d1aa:	cld    
  41d1ab:	adc    bl,BYTE PTR [ebx+0x7d]
  41d1ae:	outs   dx,BYTE PTR ds:[esi]
  41d1af:	outs   dx,DWORD PTR ds:[esi]
  41d1b0:	pop    esi
  41d1b1:	mov    esp,0xd0fde98d
  41d1b6:	leave  
  41d1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1b8:	push   edi
  41d1b9:	lods   eax,DWORD PTR ds:[esi]
  41d1ba:	push   ecx
  41d1bb:	arpl   WORD PTR [edx+0x49],cx
  41d1be:	xchg   DWORD PTR [edx+0x4a],edx
  41d1c1:	or     eax,0xc1fd7246
  41d1c6:	ds into 
  41d1c8:	add    DWORD PTR [ecx],ecx
  41d1ca:	mov    WORD PTR [esp+edx*8+0x35],cs
  41d1ce:	mov    cl,0xb8
  41d1d0:	test   BYTE PTR [ebx+ebx*1-0x24],dl
  41d1d4:	cmp    DWORD PTR [edx],esp
  41d1d6:	in     eax,dx
  41d1d7:	add    ecx,DWORD PTR [edi-0x8]
  41d1da:	sahf   
  41d1db:	sub    bh,BYTE PTR [eax+0x0]
  41d1de:	mov    dl,0xb8
  41d1e0:	sbb    al,0xcd
  41d1e2:	(bad)
  41d1e5:	mov    eax,0x78696371
  41d1ea:	sbb    BYTE PTR [eax],ah
  41d1ec:	xor    DWORD PTR [eax-0x5d],0x40
  41d1f0:	stos   DWORD PTR es:[edi],eax
  41d1f1:	jmp    DWORD PTR [ecx+edi*4]
  41d1f4:	jge    0x41d1d7
  41d1f6:	cmp    BYTE PTR [edi+0x59dc034d],0x4b
  41d1fd:	xor    al,0x41
  41d1ff:	js     0x41d1ff
  41d201:	scas   eax,DWORD PTR es:[edi]
  41d202:	repnz inc ebx
  41d204:	pop    esp
  41d205:	mov    edi,0x98e6875
  41d20a:	xchg   edi,ebp
  41d20c:	int3   
  41d20d:	out    dx,eax
  41d20e:	call   0x5c21:0xd582d397
  41d215:	js     0x41d1e0
  41d217:	sbb    eax,0x814bc516
  41d21c:	sub    al,0xa7
  41d21e:	lahf   
  41d21f:	cmc    
  41d220:	sti    
  41d221:	mov    BYTE PTR [edx-0x4d],bh
  41d224:	jmp    0x41d285
  41d226:	inc    esi
  41d227:	jnp    0x41d299
  41d229:	jo     0x41d230
  41d22b:	mov    eax,0xa32f9031
  41d230:	es clc 
  41d232:	xor    bh,BYTE PTR [edx+0x5cddb167]
  41d238:	xchg   edi,eax
  41d239:	xor    dh,BYTE PTR [edi+0x6d1380e0]
  41d23f:	int    0xbf
  41d241:	pusha  
  41d242:	fnstcw WORD PTR [esi-0x58f535f6]
  41d248:	pop    edi
  41d249:	call   0xc7ee88dd
  41d24e:	popf   
  41d24f:	push   es
  41d250:	scas   eax,DWORD PTR es:[edi]
  41d251:	xchg   edx,eax
  41d252:	mov    eax,ds:0x34f8c6f9
  41d257:	cli    
  41d258:	jmp    0xd607:0xbd560349
  41d25f:	push   ecx
  41d260:	in     eax,0xa8
  41d262:	mov    eax,0xe033a842
  41d267:	add    ecx,esp
  41d269:	inc    ecx
  41d26a:	repz and BYTE PTR [eax+0x21],dh
  41d26e:	(bad)  
  41d270:	or     bh,BYTE PTR [edx+0x4f]
  41d273:	cdq    
  41d274:	out    0x54,eax
  41d276:	sbb    al,0xdb
  41d278:	jmp    0x41d2a5
  41d27a:	int3   
  41d27b:	sbb    bh,BYTE PTR es:[esi+esi*1+0x32]
  41d280:	mov    ah,0xbf
  41d282:	loopne 0x41d27c
  41d284:	in     al,0xa1
  41d286:	jne    0x41d26d
  41d288:	das    
  41d289:	(bad)  
  41d28a:	and    eax,0xd2d001a2
  41d28f:	push   esi
  41d290:	pop    ecx
  41d291:	push   ebx
  41d292:	xchg   edx,eax
  41d293:	and    BYTE PTR [ebx],ch
  41d295:	in     al,0x8b
  41d297:	retf   0x5247
  41d29a:	out    0x11,al
  41d29c:	nop
  41d29d:	lahf   
  41d29e:	mov    ebx,0x8c70e8c0
  41d2a3:	dec    edi
  41d2a4:	ins    BYTE PTR es:[edi],dx
  41d2a5:	mov    ecx,0xb24db77a
  41d2aa:	outs   dx,DWORD PTR ds:[esi]
  41d2ab:	push   0x718db367
  41d2b0:	add    bh,BYTE PTR [esi+0x71]
  41d2b3:	jecxz  0x41d25e
  41d2b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2b6:	mov    esp,ecx
  41d2b8:	push   ss
  41d2b9:	popf   
  41d2ba:	mov    ds:0x872f1597,eax
  41d2bf:	mov    bl,0x6
  41d2c1:	pop    esi
  41d2c2:	loopne 0x41d2e5
  41d2c4:	or     ebp,ebx
  41d2c6:	test   ebp,edx
  41d2c8:	outs   dx,DWORD PTR ds:[esi]
  41d2c9:	mov    edx,0xcbf0ef9a
  41d2ce:	xchg   esi,eax
  41d2cf:	stc    
  41d2d0:	cmp    DWORD PTR [esi],eax
  41d2d2:	ficomp DWORD PTR ds:0x5f7c08c5
  41d2d8:	stc    
  41d2d9:	pushf  
  41d2da:	xchg   DWORD PTR [esi+0x3b],ebx
  41d2dd:	sbb    DWORD PTR [ecx+0x58c3c2a5],ecx
  41d2e3:	jbe    0x41d341
  41d2e5:	test   BYTE PTR [edx-0x67cd362a],dh
  41d2eb:	pushf  
  41d2ec:	xchg   edx,eax
  41d2ed:	icebp  
  41d2ee:	or     ebp,eax
  41d2f0:	in     eax,dx
  41d2f1:	dec    edx
  41d2f2:	nop
  41d2f3:	das    
  41d2f4:	fwait
  41d2f5:	lahf   
  41d2f6:	pusha  
  41d2f7:	aam    0xe5
  41d2f9:	inc    ebx
  41d2fa:	test   al,0x1d
  41d2fc:	stos   BYTE PTR es:[edi],al
  41d2fd:	int    0xec
  41d2ff:	jmp    FWORD PTR [edx+0x20]
  41d302:	mov    edx,0x178fae47
  41d307:	cmp    al,0xaf
  41d309:	jns    0x41d323
  41d30b:	(bad)  
  41d30c:	cmp    DWORD PTR [esi-0x4c],esi
  41d30f:	adc    BYTE PTR [edx+0x8a2b76],al
  41d315:	or     edx,DWORD PTR [esp+ebx*2-0x7f]
  41d319:	jl     0x41d2e9
  41d31b:	mov    edx,0xa902b057
  41d320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d321:	stos   DWORD PTR es:[edi],eax
  41d322:	sub    esi,ecx
  41d324:	sbb    eax,esi
  41d326:	dec    esp
  41d327:	into   
  41d328:	(bad)  
  41d329:	and    al,0xab
  41d32b:	sbb    dh,BYTE PTR [ebp-0x43]
  41d32e:	push   cs
  41d32f:	loope  0x41d352
  41d331:	repnz mov ebp,0xdcdee440
  41d337:	and    esi,DWORD PTR [esi+eax*1-0x64d8606c]
  41d33e:	mov    esi,0x195ab67b
  41d343:	(bad)  
  41d344:	enter  0xdd69,0x33
  41d348:	(bad)  
  41d349:	in     eax,0x53
  41d34b:	xor    BYTE PTR [edx+0x7c],dl
  41d34e:	add    DWORD PTR [eax],ecx
  41d350:	mov    BYTE PTR [ebp+0x31],0x1e
  41d354:	retf   0x55e6
  41d357:	fisttp DWORD PTR [eax-0x418a2c7]
  41d35d:	push   cs
  41d35e:	push   ss
  41d35f:	mov    ch,0xde
  41d361:	mov    eax,ebp
  41d363:	enter  0xd117,0x32
  41d367:	mov    ch,0x12
  41d369:	repnz add DWORD PTR [eax-0x7c8ecbe6],ebx
  41d370:	inc    esp
  41d371:	nop
  41d372:	jmp    0xace5e17
  41d377:	xor    eax,0xa642152e
  41d37c:	xchg   edi,eax
  41d37d:	dec    esp
  41d37e:	test   eax,0x151fa455
  41d383:	push   cs
  41d384:	cli    
  41d385:	fmul   DWORD PTR [ecx+0x4c]
  41d388:	add    al,0xa8
  41d38a:	out    dx,al
  41d38b:	outs   dx,DWORD PTR ds:[esi]
  41d38c:	cmp    edx,DWORD PTR [edx+0x16]
  41d38f:	dec    edx
  41d390:	jmp    0xf76211dd
  41d395:	cmp    BYTE PTR [eax-0x104e5258],al
  41d39b:	inc    edi
  41d39c:	call   0x88bb2d54
  41d3a1:	cmp    al,BYTE PTR [esi+0x18571c72]
  41d3a7:	aaa    
  41d3a8:	jecxz  0x41d33a
  41d3aa:	push   ebx
  41d3ab:	lea    esp,[eax]
  41d3ad:	mov    ebx,0x42896ee9
  41d3b2:	ss (bad) 
  41d3b4:	xor    al,0x7
  41d3b6:	gs xchg ecx,ebx
  41d3b9:	icebp  
  41d3ba:	adc    DWORD PTR [edi-0x4],ebx
  41d3bd:	lds    ebx,FWORD PTR [ebx-0x2d]
  41d3c0:	mov    WORD PTR [esi-0x1b],cs
  41d3c3:	adc    esp,DWORD PTR [eax]
  41d3c5:	or     BYTE PTR [ebx],dh
  41d3c7:	sbb    eax,0x959cd81b
  41d3cc:	jns    0x41d412
  41d3ce:	jp     0x41d39f
  41d3d0:	mov    al,0x17
  41d3d2:	iret   
  41d3d3:	mov    ds:0xc069de9a,al
  41d3d8:	cmp    esi,DWORD PTR [edi+esi*1]
  41d3db:	jns    0x41d41c
  41d3dd:	pop    edx
  41d3de:	jl     0x41d3b7
  41d3e0:	outs   dx,BYTE PTR ds:[esi]
  41d3e1:	inc    ecx
  41d3e2:	bound  edx,QWORD PTR [ebp-0x9]
  41d3e5:	ins    DWORD PTR es:[edi],dx
  41d3e6:	fwait
  41d3e7:	outs   dx,DWORD PTR ds:[esi]
  41d3e8:	fsubr  DWORD PTR [ebp+0x3747c782]
  41d3ee:	pushf  
  41d3ef:	in     eax,0xb7
  41d3f1:	mov    ebx,DWORD PTR [ebx]
  41d3f3:	and    bh,ch
  41d3f5:	repz (bad) 
  41d3f7:	jl     0x41d40b
  41d3f9:	stos   BYTE PTR es:[edi],al
  41d3fa:	cmovl  esi,DWORD PTR [edi+0x7149fa92]
  41d401:	imul   edx,DWORD PTR [ecx+0x56],0xdca41100
  41d408:	xchg   edi,eax
  41d409:	call   DWORD PTR [ecx]
  41d40b:	or     ah,0x1c
  41d40e:	push   ebx
  41d40f:	jns    0x41d3a7
  41d411:	retf   0xa0d8
  41d414:	ds push eax
  41d416:	ds sbb edx,ebx
  41d419:	sub    BYTE PTR [eax-0xed421f1],ch
  41d41f:	mov    WORD PTR [ecx],es
  41d421:	add    al,0x90
  41d423:	loopne 0x41d495
  41d425:	scas   eax,DWORD PTR es:[edi]
  41d426:	fnstenv [esi+edx*8-0x66728973]
  41d42d:	ret    
  41d42e:	call   FWORD PTR [esi+0x45415ce2]
  41d434:	pushf  
  41d435:	xor    esi,esp
  41d437:	push   esp
  41d438:	stos   DWORD PTR es:[edi],eax
  41d439:	into   
  41d43a:	jmp    0x41d426
  41d43c:	popf   
  41d43d:	mov    dh,0x47
  41d43f:	in     al,0xc9
  41d441:	aas    
  41d442:	dec    ebx
  41d443:	jle    0x41d451
  41d445:	sbb    BYTE PTR [ebx],0xc9
  41d448:	push   es
  41d449:	fcomip st,st(6)
  41d44b:	and    eax,0xa051d421
  41d450:	mov    ecx,0x248b0fac
  41d455:	push   ebx
  41d456:	pop    edi
  41d457:	adc    DWORD PTR [ecx-0x9],edi
  41d45a:	xlat   BYTE PTR ds:[ebx]
  41d45b:	int    0x2
  41d45d:	xchg   ebx,eax
  41d45e:	je     0x41d44e
  41d460:	fst    QWORD PTR [edx+eiz*4]
  41d463:	leave  
  41d464:	add    DWORD PTR [ecx+0x2015d094],ebp
  41d46a:	add    bl,BYTE PTR [ecx+0x23]
  41d46d:	pop    esp
  41d46e:	mov    edx,0x4366baaf
  41d473:	arpl   bp,sp
  41d475:	mov    ah,0x8b
  41d477:	aad    0x70
  41d479:	lods   al,BYTE PTR ds:[esi]
  41d47a:	lods   eax,DWORD PTR ds:[esi]
  41d47b:	cmp    dh,0x63
  41d47e:	stc    
  41d47f:	cmp    BYTE PTR [ecx-0xe955c6d],al
  41d485:	add    BYTE PTR [edx],cl
  41d487:	pop    ds
  41d488:	stos   BYTE PTR es:[edi],al
  41d489:	ror    DWORD PTR [esi+0x1236ded8],1
  41d48f:	sbb    dl,bh
  41d491:	lds    eax,FWORD PTR ds:0xe8aa60a6
  41d497:	lea    esp,[eax-0x75039be8]
  41d49d:	ret    0x8902
  41d4a0:	test   al,0x8a
  41d4a2:	xor    ch,BYTE PTR [edx-0x1277ba25]
  41d4a8:	loope  0x41d4e5
  41d4aa:	ins    BYTE PTR es:[edi],dx
  41d4ab:	in     eax,0xe1
  41d4ad:	das    
  41d4ae:	imul   ebp,DWORD PTR [ebp+0x432c3a69],0xffffffac
  41d4b5:	pop    es
  41d4b6:	xchg   edx,eax
  41d4b7:	scas   al,BYTE PTR es:[edi]
  41d4b8:	cmp    eax,DWORD PTR [esp+ebx*1-0x4c]
  41d4bc:	mov    DWORD PTR [edx+0x6d],esp
  41d4bf:	jbe    0x41d4ae
  41d4c1:	sub    esi,DWORD PTR [ecx+0x36117e1e]
  41d4c7:	mov    ecx,0x3d901cb0
  41d4cc:	(bad)  
  41d4cd:	sub    esi,eax
  41d4cf:	loop   0x41d4ee
  41d4d1:	xchg   ebp,eax
  41d4d2:	mov    bh,0xe
  41d4d4:	lahf   
  41d4d5:	and    al,BYTE PTR [ebx+0x1a]
  41d4d8:	ret    
  41d4d9:	and    eax,0x29a7d31f
  41d4de:	and    ch,BYTE PTR [esi+0x36]
  41d4e1:	sar    BYTE PTR [ecx],0x9
  41d4e4:	adc    DWORD PTR gs:[edi],ebx
  41d4e7:	push   0x9004ce1e
  41d4ec:	(bad)  
  41d4ed:	fldenv [esi+esi*8+0x57]
  41d4f1:	dec    edi
  41d4f2:	arpl   WORD PTR [ebp+0x38],cx
  41d4f5:	mov    dl,0xd3
  41d4f7:	arpl   si,bx
  41d4f9:	push   cs
  41d4fa:	ror    DWORD PTR [eax],1
  41d4fc:	or     DWORD PTR [edx],0x46
  41d4ff:	pushf  
  41d500:	jae    0x41d4a2
  41d502:	mul    DWORD PTR [ebp+0x33f2087d]
  41d508:	or     DWORD PTR [esi+0x75],ebx
  41d50b:	and    al,0xf3
  41d50d:	xor    BYTE PTR [eax+0x6e1974ea],al
  41d513:	pop    ss
  41d514:	test   bh,0x75
  41d517:	push   ebx
  41d518:	lea    ebp,[esi]
  41d51a:	push   ebx
  41d51b:	lahf   
  41d51c:	and    esi,ebx
  41d51e:	push   esp
  41d51f:	mov    eax,ds:0xbe78d108
  41d524:	dec    esp
  41d525:	fst    DWORD PTR [edx]
  41d527:	jb     0x41d535
  41d529:	mov    ecx,0xdffbd215
  41d52e:	jb     0x41d4b8
  41d530:	lock popa 
  41d532:	(bad)  
  41d534:	loope  0x41d525
  41d536:	ror    BYTE PTR [ecx],cl
  41d538:	push   es
  41d539:	std    
  41d53a:	xchg   esp,eax
  41d53b:	mov    dh,0xda
  41d53d:	pushf  
  41d53e:	jecxz  0x41d538
  41d540:	push   ebp
  41d541:	inc    esp
  41d542:	stc    
  41d543:	sti    
  41d544:	sbb    BYTE PTR [esi],0xe3
  41d547:	ja     0x41d5ad
  41d549:	dec    ecx
  41d54a:	xchg   ecx,eax
  41d54b:	hlt    
  41d54c:	xchg   ecx,eax
  41d54d:	fild   QWORD PTR [edx+0x41c7f71f]
  41d553:	push   esi
  41d554:	xchg   edi,eax
  41d555:	fs cwde 
  41d557:	in     al,dx
  41d558:	sub    DWORD PTR [esi],ecx
  41d55a:	xchg   esi,eax
  41d55b:	std    
  41d55c:	mov    ch,0x62
  41d55e:	or     cl,BYTE PTR [edx+ebx*4]
  41d561:	jbe    0x41d5da
  41d563:	push   ebx
  41d564:	shl    DWORD PTR [esi-0x4ad39968],cl
  41d56a:	and    eax,esi
  41d56c:	xor    ebx,ecx
  41d56e:	icebp  
  41d56f:	xor    cl,al
  41d571:	ss mov bh,0x95
  41d574:	and    ah,dh
  41d576:	test   BYTE PTR [esi+eiz*2+0x4ef92757],bh
  41d57d:	cld    
  41d57e:	shl    DWORD PTR [edx-0x5f],1
  41d581:	ret    0x5417
  41d584:	out    dx,eax
  41d585:	clc    
  41d586:	sub    edi,DWORD PTR [ebp+edi*1+0x6b2360e4]
  41d58d:	add    DWORD PTR [esi+0x5a],eax
  41d590:	push   edi
  41d591:	inc    DWORD PTR [ebx+ebp*8]
  41d594:	cmc    
  41d595:	jl     0x41d5ef
  41d597:	pop    ebx
  41d598:	stc    
  41d599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d59a:	sbb    al,0x45
  41d59c:	mov    si,0x720f
  41d5a0:	jg     0x41d5b2
  41d5a2:	ds sbb cl,bh
  41d5a5:	xor    DWORD PTR [edi-0x4e],edi
  41d5a8:	xchg   ebx,eax
  41d5a9:	(bad)  
  41d5ac:	cmp    BYTE PTR [edi+eiz*4-0x33],bl
  41d5b0:	or     eax,0xe2c64d86
  41d5b5:	arpl   WORD PTR [ebp+0x7e],dx
  41d5b8:	sub    al,0x99
  41d5ba:	push   eax
  41d5bb:	inc    ebx
  41d5bc:	or     al,0xdb
  41d5be:	fmul   st(2),st
  41d5c0:	ret    
  41d5c1:	push   ds
  41d5c2:	enter  0xbf8b,0x27
  41d5c6:	mov    cl,0xbd
  41d5c8:	into   
  41d5c9:	fsub   QWORD PTR [esi-0x74bd0120]
  41d5cf:	lea    ecx,[edx+0x2e]
  41d5d2:	inc    edi
  41d5d3:	xchg   ebp,eax
  41d5d4:	cmp    bh,BYTE PTR [ebx+ebp*8-0x80]
  41d5d8:	cmp    al,0x11
  41d5da:	cmp    cl,BYTE PTR es:[esp+eiz*4-0x25]
  41d5df:	dec    DWORD PTR [edi+0x7a]
  41d5e2:	lods   al,BYTE PTR ds:[esi]
  41d5e3:	mov    bl,0x2a
  41d5e5:	stc    
  41d5e6:	clc    
  41d5e7:	jb     0x41d620
  41d5e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ea:	ins    DWORD PTR es:[edi],dx
  41d5eb:	adc    al,BYTE PTR [eax-0x66eb931c]
  41d5f1:	dec    esi
  41d5f2:	mov    ds:0x536647a3,eax
  41d5f7:	pop    edi
  41d5f8:	push   ss
  41d5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5fa:	jmp    0x41d621
  41d5fc:	repz mov dl,0xf0
  41d5ff:	xor    al,0xef
  41d601:	push   edi
  41d602:	or     eax,0xc0129238
  41d607:	mov    WORD PTR [eax+0x4c291e3c],ds
  41d60d:	clc    
  41d60e:	pusha  
  41d60f:	adc    edi,ebx
  41d611:	loopne 0x41d672
  41d613:	popf   
  41d614:	dec    ebx
  41d615:	push   esi
  41d616:	push   ebx
  41d617:	jmp    0x4f97:0xeb025e78
  41d61e:	add    ebx,DWORD PTR [eax-0x65]
  41d621:	ffree  st(3)
  41d623:	dec    esp
  41d624:	rcr    DWORD PTR [ecx-0x3b],cl
  41d627:	inc    ebp
  41d628:	jle    0x41d5dc
  41d62a:	jmp    FWORD PTR [edi+0x3f84ba08]
  41d630:	test   BYTE PTR [ebx-0x19],dl
  41d633:	pop    edi
  41d634:	push   ss
  41d635:	outs   dx,BYTE PTR ds:[esi]
  41d636:	retf   
  41d637:	inc    esi
  41d638:	jbe    0x41d609
  41d63a:	ret    
  41d63b:	aad    0xf
  41d63d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d63e:	mov    eax,0xb7243cfb
  41d643:	mov    eax,0xf26a6ece
  41d648:	test   al,0xf5
  41d64a:	mov    dl,0x6c
  41d64c:	mov    dh,0x96
  41d64e:	inc    edi
  41d64f:	jns    0x41d669
  41d651:	xor    eax,0xda9be40d
  41d656:	or     DWORD PTR [ecx-0x7b8a2316],0xb02a6def
  41d660:	idiv   DWORD PTR [eax+0x30]
  41d663:	sahf   
  41d664:	jb     0x41d699
  41d666:	jnp    0x41d685
  41d668:	les    ecx,FWORD PTR [esi]
  41d66a:	push   ebp
  41d66b:	adc    eax,0x70b2f762
  41d670:	into   
  41d671:	or     dl,BYTE PTR [edi]
  41d673:	xchg   esi,eax
  41d674:	std    
  41d675:	mov    esi,0x6f0fe043
  41d67a:	sub    esp,ebx
  41d67c:	enter  0xcdba,0xfc
  41d680:	mov    ebp,0xff60797f
  41d685:	sti    
  41d686:	jl     0x41d6cc
  41d688:	inc    edi
  41d689:	xchg   ebx,edx
  41d68b:	or     dh,ch
  41d68d:	dec    eax
  41d68e:	xor    al,0x15
  41d690:	sub    DWORD PTR ds:0x7ffa9a5a,esp
  41d696:	nop
  41d697:	fwait
  41d698:	sbb    BYTE PTR [ebp-0x5073633f],cl
  41d69e:	fwait
  41d69f:	shl    DWORD PTR [eax-0x2d674225],cl
  41d6a5:	loope  0x41d6b1
  41d6a7:	test   BYTE PTR [edi-0xd],ch
  41d6aa:	(bad)  
  41d6ab:	cmp    eax,0xb55de97
  41d6b0:	mov    ds:0xbbe5ac62,al
  41d6b5:	xchg   ebp,eax
  41d6b6:	sbb    BYTE PTR [ebx+0x21272d83],dl
  41d6bc:	shl    ch,cl
  41d6be:	add    cl,BYTE PTR [edx]
  41d6c0:	jp     0x41d6c9
  41d6c2:	das    
  41d6c3:	pop    es
  41d6c4:	inc    ebx
  41d6c5:	int    0xd5
  41d6c7:	pop    ebx
  41d6c8:	lods   al,BYTE PTR ds:[esi]
  41d6c9:	xchg   ecx,eax
  41d6ca:	vmwrite edx,edx
  41d6cd:	sbb    BYTE PTR [edx+0x54],ch
  41d6d0:	xchg   ebp,eax
  41d6d1:	mov    al,ds:0x7cffdd8a
  41d6d6:	scas   al,BYTE PTR es:[edi]
  41d6d7:	jnp    0x41d733
  41d6d9:	and    BYTE PTR [eax+ebx*4-0x4f26ed3b],ah
  41d6e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6e1:	xor    DWORD PTR [edi-0x4b],ebx
  41d6e4:	jns    0x41d674
  41d6e6:	out    dx,eax
  41d6e7:	mov    ds:0xf9480749,eax
  41d6ec:	aaa    
  41d6ed:	inc    edi
  41d6ee:	xchg   edi,eax
  41d6ef:	imul   eax,DWORD PTR [eax+0x60bf3d4d],0xb6b3b4ed
  41d6f9:	lea    ebx,[ecx+esi*2]
  41d6fc:	dec    edi
  41d6fd:	mov    dh,0x6e
  41d6ff:	jns    0x41d6b0
  41d701:	in     eax,dx
  41d702:	push   es
  41d703:	test   DWORD PTR cs:[eax+edi*1-0x161f0de5],0x7d3ae8e4
  41d70f:	stos   DWORD PTR es:[edi],eax
  41d710:	stos   DWORD PTR es:[edi],eax
  41d711:	pop    ss
  41d712:	pop    eax
  41d713:	pushf  
  41d714:	sbb    ch,BYTE PTR [edi*1+0x7c84b729]
  41d71b:	xlat   BYTE PTR ds:[ebx]
  41d71c:	and    DWORD PTR [edi],edi
  41d71e:	scas   eax,DWORD PTR es:[edi]
  41d71f:	(bad)  
  41d720:	imul   ebx,DWORD PTR [ebx+ebx*1-0x30d3f66c],0x4f09c7f0
  41d72b:	arpl   WORD PTR [ecx-0x2d4b5a7a],di
  41d731:	or     ecx,edi
  41d733:	leave  
  41d734:	ret    0xe8d3
  41d737:	xchg   DWORD PTR [ebp-0xfaf237a],ecx
  41d73d:	sbb    eax,eax
  41d73f:	and    DWORD PTR [ecx],ebx
  41d741:	adc    esi,ebp
  41d743:	mov    ah,0x2b
  41d745:	imul   edx,DWORD PTR [edx+ecx*1],0x31
  41d749:	retf   0x2ef9
  41d74c:	xchg   edx,eax
  41d74d:	sub    cl,ah
  41d74f:	inc    esp
  41d750:	pop    ds
  41d751:	sahf   
  41d752:	adc    ebp,DWORD PTR [eax+0x3a778f16]
  41d758:	pop    esi
  41d759:	pop    ds
  41d75a:	scas   eax,DWORD PTR es:[edi]
  41d75b:	push   edx
  41d75c:	sub    DWORD PTR [esi],edx
  41d75e:	or     DWORD PTR [edi-0x2bce1f3b],ebx
  41d764:	fmul   st(3),st
  41d766:	ret    
  41d767:	test   BYTE PTR ds:0x3a9574a5,0xa7
  41d76e:	mov    eax,ds:0x195ea66a
  41d773:	fst    st(5)
  41d775:	test   eax,0xed7a7bea
  41d77a:	mov    ds:0xfadc0e4a,eax
  41d77f:	cmp    DWORD PTR [esi+ecx*8+0x201a18ec],esp
  41d786:	dec    BYTE PTR [esi]
  41d788:	outs   dx,BYTE PTR ds:[esi]
  41d789:	add    eax,0xd0ed82d1
  41d78e:	ficomp DWORD PTR [ebx]
  41d790:	imul   edx,DWORD PTR [ebx-0xb33076a],0xa9a29abc
  41d79a:	mov    BYTE PTR [ebp-0x1be9ea8],bl
  41d7a0:	pusha  
  41d7a1:	daa    
  41d7a2:	push   eax
  41d7a3:	nop
  41d7a4:	xchg   DWORD PTR [edx],eax
  41d7a6:	call   0x4f02:0x9377e290
  41d7ad:	popa   
  41d7ae:	pop    es
  41d7af:	imul   ecx,DWORD PTR [esi+0x410e08de],0x41a955c2
  41d7b9:	or     DWORD PTR [eax],esi
  41d7bb:	mov    BYTE PTR [ebx+0x3503e833],ah
  41d7c1:	loop   0x41d79d
  41d7c3:	in     al,dx
  41d7c4:	mov    ch,0x7c
  41d7c6:	and    al,0x26
  41d7c8:	cmp    DWORD PTR [esi+ebx*2-0x96b15e4],ebx
  41d7cf:	jp     0x41d772
  41d7d1:	dec    esi
  41d7d2:	fiadd  WORD PTR ds:0x597cd781
  41d7d8:	int3   
  41d7d9:	cwde   
  41d7da:	je     0x41d7bf
  41d7dc:	idiv   BYTE PTR [edx+0x5b]
  41d7df:	ffree  st(2)
  41d7e1:	xchg   esp,eax
  41d7e2:	(bad)
  41d7e6:	pop    eax
  41d7e7:	outs   dx,DWORD PTR ds:[esi]
  41d7e8:	xchg   ebp,eax
  41d7e9:	sub    edi,DWORD PTR [ebp-0x2cc99bcf]
  41d7ef:	inc    ebx
  41d7f0:	add    BYTE PTR [ebx],ch
  41d7f2:	cmp    eax,0xdc5d689f
  41d7f7:	ror    DWORD PTR [edi-0x12e534c8],cl
  41d7fd:	inc    esi
  41d7fe:	repnz add bh,BYTE PTR [edx+0x462fc81]
  41d805:	push   edx
  41d806:	xchg   esi,eax
  41d807:	add    bl,BYTE PTR [eax+edi*4+0x7]
  41d80b:	mov    cl,0x4
  41d80d:	cdq    
  41d80e:	ret    0x8ae2
  41d811:	sti    
  41d812:	and    edx,DWORD PTR [eax]
  41d814:	inc    eax
  41d815:	fisubr DWORD PTR [ecx-0x3e9ad119]
  41d81b:	in     eax,dx
  41d81c:	rdtsc  
  41d81e:	xor    al,0xe3
  41d820:	adc    BYTE PTR [edi+edi*4-0x5bb8c3f7],0x7c
  41d828:	hlt    
  41d829:	retf   0x5a29
  41d82c:	popf   
  41d82d:	jge    0x41d8a4
  41d82f:	xchg   edi,eax
  41d830:	int3   
  41d831:	dec    esi
  41d832:	xor    DWORD PTR [ebx+0x15839c04],ebp
  41d838:	mov    edx,0x9c20a174
  41d83d:	sahf   
  41d83e:	mov    bl,bl
  41d840:	cmp    bl,BYTE PTR [ebp+0x70]
  41d843:	inc    esp
  41d844:	and    ah,dl
  41d846:	and    BYTE PTR [edi],dl
  41d848:	aaa    
  41d849:	enter  0xcbb3,0x2f
  41d84d:	push   ebx
  41d84e:	jbe    0x41d7f8
  41d850:	dec    eax
  41d851:	je     0x41d8ad
  41d853:	push   esi
  41d854:	std    
  41d855:	shl    DWORD PTR [edi-0x72ab1196],cl
  41d85b:	pop    ecx
  41d85c:	cmovl  ebp,ebx
  41d85f:	stc    
  41d860:	xchg   esp,eax
  41d861:	mov    bh,0xde
  41d863:	cmp    al,BYTE PTR es:[esp+eax*1+0xafef12]
  41d86b:	(bad)
  41d86f:	fldenv [edx-0x73]
  41d872:	jmp    0x6d9:0x7b995a5a
  41d879:	jne    0x41d8fa
  41d87b:	mov    esi,DWORD PTR [eax-0x48]
  41d87e:	pushf  
  41d87f:	call   FWORD PTR [esi+0x68]
  41d882:	repz fist DWORD PTR [ebp+0x5f]
  41d886:	lods   eax,DWORD PTR ds:[esi]
  41d887:	jmp    0x47057387
  41d88c:	les    edi,FWORD PTR [eax+0x51]
  41d88f:	adc    BYTE PTR [esi-0x2e70f55d],dl
  41d895:	adc    DWORD PTR [edx-0x33e3a49d],edx
  41d89b:	das    
  41d89c:	cmp    eax,0x1788e6f1
  41d8a1:	mov    dl,0xb1
  41d8a3:	pop    eax
  41d8a4:	int    0xc0
  41d8a6:	sti    
  41d8a7:	sti    
  41d8a8:	(bad)  
  41d8a9:	cmp    DWORD PTR [edi-0xc],esi
  41d8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ae:	test   al,0xd5
  41d8b0:	(bad)  
  41d8b1:	mov    edx,0x8feb804
  41d8b6:	pushf  
  41d8b7:	xor    BYTE PTR [ebx-0x29],ch
  41d8ba:	mov    al,ds:0xb69d79c8
  41d8bf:	xor    DWORD PTR ds:0xe28c9859,ebx
  41d8c5:	push   esp
  41d8c6:	ror    DWORD PTR [esi],cl
  41d8c8:	gs out dx,eax
  41d8ca:	xlat   BYTE PTR ds:[ebx]
  41d8cb:	mov    ecx,0x1d2a737f
  41d8d0:	shr    DWORD PTR [esi+ebx*1+0x5c],0x12
  41d8d5:	inc    eax
  41d8d6:	mov    edi,gs
  41d8d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8d9:	adc    DWORD PTR [edi+0x48],esp
  41d8dc:	adc    DWORD PTR [edx+0x700de2c6],edi
  41d8e2:	dec    ebx
  41d8e3:	pop    esp
  41d8e4:	loope  0x41d940
  41d8e6:	rol    BYTE PTR [esi+0x1a],1
  41d8e9:	jmp    0x41d87b
  41d8eb:	ror    BYTE PTR [edx+0x7209bd3c],cl
  41d8f1:	mov    esp,0x19c3f588
  41d8f6:	pop    DWORD PTR [ecx+0x1a]
  41d8f9:	test   BYTE PTR [ebp-0x29632d0d],dh
  41d8ff:	xchg   esp,eax
  41d900:	arpl   WORD PTR [ecx+0x5c52ec6a],si
  41d906:	clc    
  41d907:	mov    ebx,0x8870c94e
  41d90c:	stos   BYTE PTR es:[edi],al
  41d90d:	mov    al,0x7d
  41d90f:	pop    esi
  41d910:	fstp   DWORD PTR [eax-0x5a5953ad]
  41d916:	push   ebp
  41d917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d918:	mov    al,0x67
  41d91a:	outs   dx,DWORD PTR ds:[esi]
  41d91b:	xchg   esi,eax
  41d91c:	fdiv   QWORD PTR [edx+0x22]
  41d91f:	inc    eax
  41d920:	sub    DWORD PTR [ebp-0x5f907c9c],esp
  41d926:	pop    edx
  41d927:	xor    ah,BYTE PTR [edi]
  41d929:	xchg   ebp,eax
  41d92a:	sub    al,0x92
  41d92c:	mov    ah,0x1f
  41d92e:	adc    cl,dl
  41d930:	ins    BYTE PTR es:[edi],dx
  41d931:	out    0xd5,al
  41d933:	inc    eax
  41d934:	pop    edx
  41d935:	jg     0x41d8ce
  41d937:	ret    
  41d938:	push   0x6c
  41d93a:	pop    eax
  41d93b:	jns    0x41d911
  41d93d:	call   0xb4a40ff6
  41d942:	push   esp
  41d943:	out    0x1,al
  41d945:	and    ecx,esp
  41d947:	inc    edx
  41d948:	les    edx,FWORD PTR [edi]
  41d94a:	or     BYTE PTR [eax+esi*8-0x75],dl
  41d94e:	xchg   ebp,eax
  41d94f:	mov    al,0xe6
  41d951:	jnp    0x41d91d
  41d953:	out    0x7c,eax
  41d955:	push   edx
  41d956:	mov    DWORD PTR [ebp+ebp*2+0x42785314],eax
  41d95d:	scas   eax,DWORD PTR es:[edi]
  41d95e:	fsubr  QWORD PTR [ebx+0x430737b8]
  41d964:	adc    eax,0xa3fb33bd
  41d969:	cld    
  41d96a:	lahf   
  41d96b:	loop   0x41d9b8
  41d96d:	jne    0x41d90f
  41d96f:	hlt    
  41d970:	xor    dl,BYTE PTR [edx+0x9758fe1]
  41d976:	dec    esi
  41d977:	mov    eax,0x3b25a34
  41d97c:	inc    esi
  41d97d:	adc    cl,BYTE PTR [ecx+0x6a120747]
  41d983:	sub    eax,0xc8e340e9
  41d988:	test   al,0xd2
  41d98a:	fist   DWORD PTR [ebx+0x1c]
  41d98d:	mov    al,0xe3
  41d98f:	scas   al,BYTE PTR es:[edi]
  41d990:	mov    ds:0xea570f12,eax
  41d995:	xlat   BYTE PTR ds:[ebx]
  41d996:	call   0x568103ba
  41d99b:	aas    
  41d99c:	jno    0x41da0d
  41d99e:	jae    0x41d943
  41d9a0:	fwait
  41d9a1:	shl    eax,1
  41d9a3:	inc    esp
  41d9a4:	shl    BYTE PTR [ecx-0x6b798250],cl
  41d9aa:	mov    ds:0x457ec1b2,eax
  41d9af:	(bad)  
  41d9b0:	xor    BYTE PTR [eax-0x58],bh
  41d9b3:	and    eax,0xfb9b537e
  41d9b8:	lock jo 0x41d94a
  41d9bb:	repnz sahf 
  41d9bd:	mov    bh,0xaf
  41d9bf:	in     al,0xd0
  41d9c1:	in     eax,dx
  41d9c2:	pop    ebx
  41d9c3:	mov    ?,WORD PTR [esi-0x7f565c1c]
  41d9c9:	out    dx,al
  41d9ca:	add    bh,BYTE PTR [ebx-0x62]
  41d9cd:	dec    edx
  41d9ce:	add    BYTE PTR [eax+ebp*1-0x20515976],dl
  41d9d5:	mov    eax,ds:0xe2c5b9d
  41d9da:	push   eax
  41d9db:	rcl    BYTE PTR [ecx+0xa53caa0],1
  41d9e1:	jmp    0x1952:0xf02c4e4d
  41d9e8:	mov    al,0x36
  41d9ea:	add    eax,DWORD PTR [edi]
  41d9ec:	ja     0x41da56
  41d9ee:	xchg   DWORD PTR [edx-0x5f4caf48],edi
  41d9f4:	xchg   esp,eax
  41d9f5:	inc    edx
  41d9f6:	std    
  41d9f7:	jbe    0x41da6b
  41d9f9:	adc    ebx,DWORD PTR [edx+esi*1+0x25dcf26d]
  41da00:	das    
  41da01:	xchg   ebx,eax
  41da02:	fs stos DWORD PTR es:[edi],eax
  41da04:	outs   dx,DWORD PTR ds:[esi]
  41da05:	cmp    esi,DWORD PTR [eax-0x6a65c4cf]
  41da0b:	mov    esp,ecx
  41da0d:	cmp    ebp,DWORD PTR [ebp-0x43]
  41da10:	xchg   ebp,eax
  41da11:	push   DWORD PTR [ebx-0x2bfdedfd]
  41da17:	jg     0x41da8b
  41da19:	stos   BYTE PTR es:[edi],al
  41da1a:	lods   eax,DWORD PTR ds:[esi]
  41da1b:	in     al,dx
  41da1c:	pop    ecx
  41da1d:	out    0xd2,eax
  41da1f:	out    dx,eax
  41da20:	mov    ds:0xe54c64ea,al
  41da25:	add    al,0x3b
  41da27:	aaa    
  41da28:	out    dx,eax
  41da29:	loopne 0x41d9da
  41da2b:	ret    0xb5e3
  41da2e:	in     eax,dx
  41da2f:	inc    edi
  41da30:	jno    0x41d9f9
  41da32:	mov    cl,0xcc
  41da34:	dec    eax
  41da35:	jmp    0x41daa1
  41da37:	xchg   edx,eax
  41da38:	int3   
  41da39:	mov    ecx,0x80a70d4d
  41da3e:	xor    al,0xb6
  41da40:	cli    
  41da41:	fxch   st(3)
  41da43:	scas   eax,DWORD PTR es:[edi]
  41da44:	fdiv   QWORD PTR [ebp+0x61821fe1]
  41da4a:	call   0xf7ade381
  41da4f:	mov    DWORD PTR [ebx+ebp*1-0x70],0x273e3198
  41da57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da58:	sbb    al,0x16
  41da5a:	mul    BYTE PTR [ecx]
  41da5c:	xor    dl,BYTE PTR cs:[ecx+0xe]
  41da60:	inc    esp
  41da61:	push   edx
  41da62:	inc    ecx
  41da63:	dec    eax
  41da64:	pop    ebp
  41da65:	mov    ecx,0xff27174d
  41da6a:	cmp    BYTE PTR [edi-0x5ab704ca],cl
  41da70:	mov    eax,0x939d6435
  41da75:	(bad)  
  41da76:	jmp    0x7792c421
  41da7b:	(bad)  
  41da7d:	pop    eax
  41da7e:	and    DWORD PTR [edi+0x13],ebx
  41da81:	jmp    0x41da9d
  41da83:	stos   BYTE PTR es:[edi],al
  41da84:	test   DWORD PTR [edx+0x2a],ebx
  41da87:	pop    ss
  41da88:	or     ch,BYTE PTR [edi-0x6361482b]
  41da8e:	jle    0x41da25
  41da90:	add    eax,0x2888116
  41da95:	(bad)  
  41da96:	xor    al,0xe8
  41da98:	fcmovb st,st(0)
  41da9a:	js     0x41daea
  41da9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da9d:	adc    BYTE PTR [ecx],ch
  41da9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daa0:	test   al,0x80
  41daa2:	outs   dx,BYTE PTR ds:[esi]
  41daa3:	xchg   DWORD PTR [ecx],ecx
  41daa5:	mov    esp,0x5e343d10
  41daaa:	push   ebp
  41daab:	add    esp,DWORD PTR [eax-0x71]
  41daae:	loop   0x41da8e
  41dab0:	shr    BYTE PTR [ebx],1
  41dab2:	dec    ecx
  41dab3:	outs   dx,DWORD PTR ds:[esi]
  41dab4:	mov    eax,ds:0xe2bb1ca
  41dab9:	or     bl,BYTE PTR [ecx]
  41dabb:	xchg   edi,eax
  41dabc:	retf   
  41dabd:	add    eax,0xab45442c
  41dac2:	in     al,dx
  41dac3:	nop
  41dac4:	ret    0x3f77
  41dac7:	mov    eax,DWORD PTR [esi-0x2b]
  41daca:	popf   
  41dacb:	popa   
  41dacc:	loop   0x41db37
  41dace:	mov    ds:0x38aed79d,eax
  41dad3:	mov    edx,0x16657b62
  41dad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dad9:	jl     0x41daa7
  41dadb:	mov    ebp,eax
  41dadd:	xor    edi,DWORD PTR [ecx+0x15]
  41dae0:	sub    DWORD PTR [ebx+edi*4],ebp
  41dae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dae4:	test   BYTE PTR [edi+edx*8+0x42],bl
  41dae8:	mov    cl,0xcf
  41daea:	xchg   DWORD PTR [ecx],ebp
  41daec:	mov    edx,0xc42049f4
  41daf1:	retf   
  41daf2:	scas   eax,DWORD PTR es:[edi]
  41daf3:	das    
  41daf4:	cli    
  41daf5:	dec    ecx
  41daf6:	cmp    ebp,DWORD PTR [edi+0x1b58aa7a]
  41dafc:	rcl    DWORD PTR [esi+edi*4],cl
  41daff:	or     BYTE PTR ds:0x6392f672,cl
  41db05:	add    DWORD PTR [ebx-0x4c9cf3dc],ebp
  41db0b:	rcl    al,1
  41db0d:	popf   
  41db0e:	je     0x41db38
  41db10:	mov    ebp,0x36b1cefe
  41db15:	ja     0x41db34
  41db17:	lahf   
  41db18:	(bad)  
  41db19:	retf   0x1141
  41db1c:	jnp    0x41db98
  41db1e:	in     al,dx
  41db1f:	ss ss xlat BYTE PTR gs:[ebx]
  41db23:	test   al,0x26
  41db25:	xchg   bp,ax
  41db27:	and    eax,0xec6f8ac4
  41db2c:	sub    al,0xd7
  41db2e:	jle    0x41db22
  41db30:	dec    ecx
  41db31:	rsm    
  41db33:	fnstenv [ecx]
  41db35:	mov    eax,0x54a21794
  41db3a:	outs   dx,DWORD PTR ds:[esi]
  41db3b:	cwde   
  41db3c:	mov    ds:0xa8984e0c,eax
  41db41:	out    0x2c,al
  41db43:	out    dx,eax
  41db44:	mov    dl,0xea
  41db46:	rcl    ecx,1
  41db48:	(bad)
  41db4d:	jne    0x41dade
  41db4f:	sbb    eax,0x48f3b77d
  41db54:	cli    
  41db55:	ss jns 0x41db23
  41db58:	hlt    
  41db59:	push   es
  41db5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5b:	call   0x102e:0x95af006b
  41db62:	sbb    eax,eax
  41db64:	shl    BYTE PTR [ebx],0x4c
  41db67:	popa   
  41db68:	xor    DWORD PTR [ecx],ecx
  41db6a:	jl     0x41db2f
  41db6c:	add    al,0x55
  41db6e:	and    eax,0x4d80b60d
  41db73:	leave  
  41db74:	in     eax,dx
  41db75:	fsub   DWORD PTR [ecx]
  41db77:	pop    edx
  41db78:	mov    BYTE PTR [edi+0x46],cl
  41db7b:	add    DWORD PTR [esi-0x1bb86340],esi
  41db81:	xchg   ebp,ecx
  41db83:	cmc    
  41db84:	loope  0x41db1a
  41db86:	mov    ds:0x6cca5414,eax
  41db8b:	sub    al,0xbd
  41db8d:	mov    ecx,ss
  41db8f:	xor    eax,0xfba16179
  41db94:	sub    ch,ah
  41db96:	mov    WORD PTR [ebx+0x8f8241d],gs
  41db9c:	cmp    DWORD PTR [esi-0x2d],esi
  41db9f:	stos   BYTE PTR es:[edi],al
  41dba0:	inc    eax
  41dba1:	mov    al,ds:0xbf4fa0b9
  41dba6:	lock js 0x41db42
  41dba9:	dec    ebp
  41dbaa:	fdiv   QWORD PTR [esi-0x3]
  41dbad:	mov    ds:0x565654a3,al
  41dbb2:	sti    
  41dbb3:	push   esp
  41dbb4:	lock stos BYTE PTR es:[edi],al
  41dbb6:	adc    DWORD PTR [ebx+esi*2-0x7246313],ebp
  41dbbd:	inc    esp
  41dbbe:	jg     0x41db7a
  41dbc0:	sub    al,0x19
  41dbc2:	lds    esi,FWORD PTR [ebp+0x77e0b465]
  41dbc8:	js     0x41dbed
  41dbca:	test   DWORD PTR [ebx],0x55baf6d4
  41dbd0:	int    0xc3
  41dbd2:	stos   BYTE PTR es:[edi],al
  41dbd3:	out    0x52,eax
  41dbd5:	fs adc eax,0xd9d4ad8c
  41dbdb:	inc    eax
  41dbdc:	jb     0x41dc1b
  41dbde:	fstp   DWORD PTR [edx+0x2aa9b102]
  41dbe4:	leave  
  41dbe5:	jle    0x41dba3
  41dbe7:	(bad)  
  41dbe9:	mov    ds:0x88821c58,al
  41dbee:	lds    ebp,FWORD PTR [esi]
  41dbf0:	icebp  
  41dbf1:	push   esp
  41dbf2:	dec    edx
  41dbf3:	stos   BYTE PTR es:[edi],al
  41dbf4:	mov    ah,0x15
  41dbf6:	(bad)  
  41dbf7:	adc    ch,ch
  41dbf9:	ss jae 0x41dc27
  41dbfc:	xor    al,0xa
  41dbfe:	fdiv   DWORD PTR [eax+0x45]
  41dc01:	sub    BYTE PTR [esi+0x32],al
  41dc04:	aad    0x34
  41dc06:	dec    esi
  41dc07:	dec    eax
  41dc08:	jb     0x41dbdb
  41dc0a:	ja     0x41dc36
  41dc0c:	sahf   
  41dc0d:	inc    ebx
  41dc0e:	and    eax,0xa2579554
  41dc13:	jb     0x41dc0e
  41dc15:	stos   DWORD PTR es:[edi],eax
  41dc16:	xchg   ebp,eax
  41dc17:	push   esi
  41dc18:	shl    DWORD PTR [edi+eiz*4-0xde27a63],0x34
  41dc20:	mov    ebp,0x5fb7c92d
  41dc25:	stos   DWORD PTR es:[edi],eax
  41dc26:	xchg   ecx,eax
  41dc27:	mov    esi,DWORD PTR [ebx-0x351bf7d7]
  41dc2d:	bnd js 0x41dbf3
  41dc30:	call   0x5e1afe6b
  41dc35:	push   ds
  41dc36:	sub    edi,edx
  41dc38:	ja     0x41dbe3
  41dc3a:	fs push ecx
  41dc3c:	cld    
  41dc3d:	inc    esi
  41dc3e:	or     bl,BYTE PTR [esi]
  41dc40:	aam    0xfe
  41dc42:	or     eax,0x583a9f4
  41dc47:	(bad)  
  41dc48:	cmp    esi,DWORD PTR [ecx]
  41dc4a:	in     al,0xd9
  41dc4c:	pop    edi
  41dc4d:	sub    bh,0x9f
  41dc50:	mov    ebx,0xae276b30
  41dc55:	data16 jne 0x41dc07
  41dc58:	std    
  41dc59:	imul   ebx,esi,0xcb9215fb
  41dc5f:	pop    edx
  41dc60:	ret    
  41dc61:	dec    esp
  41dc62:	daa    
  41dc63:	mov    eax,ds:0x944d0096
  41dc68:	rcl    DWORD PTR [edx-0x8d197d4],0x1c
  41dc6f:	mov    ds:0x22065b29,al
  41dc74:	hlt    
  41dc75:	add    dl,dl
  41dc77:	fild   QWORD PTR [edx+0x38]
  41dc7a:	rcl    DWORD PTR [ebx+ebx*1-0x7e],1
  41dc7e:	inc    edx
  41dc7f:	sub    eax,0xf21273c1
  41dc84:	out    0x9e,eax
  41dc86:	loopne 0x41dcf6
  41dc88:	mov    eax,ds:0x35bdc2fe
  41dc8d:	xor    BYTE PTR [ecx],al
  41dc8f:	mov    ebx,0x173d23b2
  41dc94:	dec    edx
  41dc95:	mov    fs,WORD PTR [ecx+0x40e98c8c]
  41dc9b:	inc    ebx
  41dc9c:	jbe    0x41dc74
  41dc9e:	fsub   QWORD PTR [esi]
  41dca0:	movnti DWORD PTR [ebx-0x46],esi
  41dca4:	arpl   WORD PTR [edi],ax
  41dca6:	scas   al,BYTE PTR es:[edi]
  41dca7:	jno    0x41dd0d
  41dca9:	aas    
  41dcaa:	jno    0x41dd13
  41dcac:	cli    
  41dcad:	jbe    0x41dd2e
  41dcaf:	call   0x7148:0x297c4411
  41dcb6:	(bad)  
  41dcb7:	int    0xe5
  41dcb9:	dec    ebp
  41dcba:	les    ecx,FWORD PTR [esi+0x25bc47f9]
  41dcc0:	or     al,0x72
  41dcc2:	push   ds
  41dcc3:	lods   eax,DWORD PTR ds:[esi]
  41dcc4:	jp     0x41dc61
  41dcc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcc7:	push   ebp
  41dcc8:	mov    ecx,0x40644b2f
  41dccd:	jmp    0x41dc6a
  41dccf:	cmp    esp,edi
  41dcd1:	fs pop es
  41dcd3:	mov    al,0xc1
  41dcd5:	es lahf 
  41dcd7:	imul   esp,DWORD PTR [esi-0x7f7d4e65],0xb8ca3ed5
  41dce1:	inc    ecx
  41dce2:	push   ebx
  41dce3:	jp     0x41dc7c
  41dce5:	jle    0x41dccc
  41dce7:	xchg   ecx,eax
  41dce8:	push   esi
  41dce9:	mov    eax,ds:0x9c9f3d83
  41dcee:	out    dx,al
  41dcef:	and    ch,BYTE PTR [ecx]
  41dcf1:	nop
  41dcf2:	leave  
  41dcf3:	inc    ebp
  41dcf4:	push   0xfffffff5
  41dcf6:	pop    esi
  41dcf7:	shr    DWORD PTR [ebx+0x25],0xfa
  41dcfb:	push   0x23
  41dcfd:	scas   eax,DWORD PTR es:[edi]
  41dcfe:	addr16 push ebp
  41dd00:	xchg   esi,eax
  41dd01:	adc    BYTE PTR [ebx+edx*2+0x7794587a],cl
  41dd08:	shl    BYTE PTR [ebx-0x35],1
  41dd0b:	pop    ebx
  41dd0c:	rol    DWORD PTR [ebp+0x4071224a],1
  41dd12:	xchg   ebx,eax
  41dd13:	push   cs
  41dd14:	and    BYTE PTR [ebp+ecx*2-0x69],al
  41dd18:	cli    
  41dd19:	imul   ebx,DWORD PTR [eax+0x7e],0x27
  41dd1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd1e:	cdq    
  41dd1f:	cmp    esi,edi
  41dd21:	loope  0x41dd08
  41dd23:	ins    BYTE PTR es:[edi],dx
  41dd24:	test   eax,0x27196dc0
  41dd29:	pop    edi
  41dd2a:	mov    ebx,0x11ef0752
  41dd2f:	sub    BYTE PTR [edx+0x48cc409],dh
  41dd35:	sbb    BYTE PTR [ebx+0x34cdbccb],dl
  41dd3b:	cmp    DWORD PTR [ebx],esi
  41dd3d:	and    eax,0x317ead8b
  41dd42:	xchg   ecx,eax
  41dd43:	xlat   BYTE PTR ds:[ebx]
  41dd44:	loope  0x41dd43
  41dd46:	xchg   esi,eax
  41dd47:	mov    edx,ecx
  41dd49:	scas   eax,DWORD PTR es:[edi]
  41dd4a:	xchg   bh,cl
  41dd4c:	push   ecx
  41dd4d:	jg     0x41ddc4
  41dd4f:	mul    edi
  41dd51:	mov    ds:0x85477aa7,eax
  41dd56:	pop    eax
  41dd57:	lea    edx,[eax-0x15]
  41dd5a:	data16 jle 0x41ddad
  41dd5d:	push   eax
  41dd5e:	call   0xa0db980
  41dd63:	add    DWORD PTR ds:0x6e4cd6a5,esi
  41dd69:	pop    ss
  41dd6a:	les    eax,FWORD PTR [ebx+0x47]
  41dd6d:	(bad)  
  41dd6e:	fild   DWORD PTR [ebx+0x6b]
  41dd71:	mov    dl,0xa1
  41dd73:	jg     0x41dd61
  41dd75:	ins    DWORD PTR es:[edi],dx
  41dd76:	push   0xff91cbaa
  41dd7b:	push   edx
  41dd7c:	jl     0x41dd7b
  41dd7e:	inc    ebx
  41dd7f:	adc    esi,edx
  41dd81:	xor    BYTE PTR [ebp+0x6c],bh
  41dd84:	sbb    ebp,edi
  41dd86:	test   ax,0x9fcc
  41dd8a:	cmp    eax,0x21666b19
  41dd8f:	xchg   BYTE PTR [ecx-0x598f90c3],dh
  41dd95:	jge    0x41dd7a
  41dd97:	sub    al,0x3c
  41dd99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd9a:	ins    DWORD PTR es:[edi],dx
  41dd9b:	xchg   BYTE PTR [edx-0x52],ch
  41dd9e:	test   al,0xc6
  41dda0:	sbb    ebp,DWORD PTR [ebx-0x32]
  41dda3:	inc    eax
  41dda4:	and    eax,0xd9a64f86
  41dda9:	add    bl,BYTE PTR [esi-0x232d406d]
  41ddaf:	cmp    dl,dh
  41ddb1:	mov    edi,0xbbff95ce
  41ddb6:	mov    ch,0xe3
  41ddb8:	push   edi
  41ddb9:	jl     0x41ddac
  41ddbb:	je     0x41dd99
  41ddbd:	in     al,dx
  41ddbe:	cmp    ebx,DWORD PTR [edi-0x513e9d5b]
  41ddc4:	cli    
  41ddc5:	or     DWORD PTR [ecx],esp
  41ddc7:	popa   
  41ddc8:	dec    edi
  41ddc9:	mov    bl,0x50
  41ddcb:	jnp    0x41de4b
  41ddcd:	push   ecx
  41ddce:	jo     0x41dd9e
  41ddd0:	dec    ebp
  41ddd1:	pop    eax
  41ddd2:	mov    ecx,0xfba1d818
  41ddd7:	(bad)  
  41ddd8:	in     eax,dx
  41ddd9:	(bad)  
  41dddb:	cmp    esi,eax
  41dddd:	fwait
  41ddde:	lahf   
  41dddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dde0:	daa    
  41dde1:	mov    al,ds:0x3dba8ca
  41dde6:	sub    eax,0x8ed719e1
  41ddeb:	hlt    
  41ddec:	into   
  41dded:	ja     0x41de4a
  41ddef:	inc    ebx
  41ddf0:	adc    edi,esi
  41ddf2:	mov    dl,0xa7
  41ddf4:	mov    ds:0x6634d181,eax
  41ddf9:	xlat   BYTE PTR ds:[ebx]
  41ddfa:	enter  0xc3a3,0xc1
  41ddfe:	ret    0xc2f4
  41de01:	adc    eax,DWORD PTR [ecx-0x16]
  41de04:	jp     0x41dda1
  41de06:	add    eax,0xecd2d6e1
  41de0b:	iret   
  41de0c:	stos   DWORD PTR es:[edi],eax
  41de0d:	jmp    0x8b60fd58
  41de12:	xor    al,0x35
  41de14:	and    BYTE PTR [eax],0x3
  41de17:	inc    esi
  41de18:	loope  0x41ddc5
  41de1a:	in     al,0x59
  41de1c:	or     BYTE PTR [edi+esi*8+0x35],dl
  41de20:	add    DWORD PTR [ebx],eax
  41de22:	arpl   bx,cx
  41de24:	dec    esi
  41de25:	xor    BYTE PTR [edi],ch
  41de27:	mov    cl,0x91
  41de29:	cmp    al,0x9e
  41de2b:	push   0x21a95b14
  41de30:	jae    0x41de00
  41de32:	iret   
  41de33:	jb     0x41ddc8
  41de35:	data16 jbe 0x41de6e
  41de38:	push   esp
  41de39:	jl     0x41dde6
  41de3b:	data16 cs (bad) 
  41de3e:	jg     0x41de68
  41de40:	inc    esp
  41de41:	mov    BYTE PTR [ecx-0x3a],bl
  41de44:	push   ecx
  41de45:	popa   
  41de46:	pop    esp
  41de47:	jp     0x41de9d
  41de49:	cwde   
  41de4a:	xchg   edx,eax
  41de4b:	and    al,0xe
  41de4d:	inc    ebx
  41de4e:	sub    BYTE PTR [edx+ecx*4-0x3e],ah
  41de52:	test   BYTE PTR [edi+0x1ee1e437],al
  41de58:	add    edx,DWORD PTR [edx-0x45f48614]
  41de5e:	cwde   
  41de5f:	mul    BYTE PTR [ecx]
  41de61:	clc    
  41de62:	mov    esi,esp
  41de64:	mov    edx,esp
  41de66:	xchg   esi,eax
  41de67:	aaa    
  41de68:	clc    
  41de69:	add    bl,BYTE PTR [ecx]
  41de6b:	rcr    esi,cl
  41de6d:	cmp    BYTE PTR [esi+0x9],ah
  41de70:	mov    dl,0xfc
  41de72:	int    0x90
  41de74:	jle    0x41de7f
  41de76:	sbb    ecx,edi
  41de78:	stc    
  41de79:	mov    eax,ds:0x5d307a6e
  41de7e:	sub    DWORD PTR [ebx-0x7e72fc55],esp
  41de84:	xchg   esi,eax
  41de85:	repz mov esi,0xd5107868
  41de8b:	fdivp  st(5),st
  41de8d:	(bad)  
  41de8e:	iret   
  41de8f:	sti    
  41de90:	jg     0x41de69
  41de92:	sub    BYTE PTR [ecx-0x612c51e5],al
  41de98:	push   ss
  41de99:	push   ss
  41de9a:	xchg   BYTE PTR [edi],bl
  41de9c:	cs call 0xb796:0x99aadfc6
  41dea4:	xlat   BYTE PTR ds:[ebx]
  41dea5:	enter  0x54b1,0xbc
  41dea9:	cmp    al,0xf4
  41deab:	xchg   BYTE PTR [ebx],dl
  41dead:	and    bh,BYTE PTR [edx-0x63b80c4d]
  41deb3:	push   fs
  41deb5:	adc    eax,0xc9206361
  41deba:	cs pop esp
  41debc:	mov    esi,0x954ffa5d
  41dec1:	or     al,0x6e
  41dec3:	adc    eax,0xb975b75
  41dec8:	imul   edi,DWORD PTR [edi-0x6430a0e1],0xc53a901a
  41ded2:	mov    esp,0xcd790692
  41ded7:	aaa    
  41ded8:	fisub  DWORD PTR [ecx+0x26]
  41dedb:	cwde   
  41dedc:	arpl   WORD PTR [eax+ebx*4+0x6d],sp
  41dee0:	aam    0x4e
  41dee2:	das    
  41dee3:	and    DWORD PTR [ebx+0x2b],esi
  41dee6:	add    cl,ch
  41dee8:	(bad)  
  41dee9:	ja     0x41dee6
  41deeb:	xor    DWORD PTR [edi+0x1d],0xffffffb7
  41deef:	enter  0x6df0,0xd5
  41def3:	daa    
  41def4:	scas   al,BYTE PTR es:[edi]
  41def5:	dec    ebx
  41def6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def7:	jne    0x41ded9
  41def9:	cmp    al,0x8b
  41defb:	pop    DWORD PTR [edx]
  41defd:	xor    al,0x89
  41deff:	(bad)  
  41df00:	pusha  
  41df01:	retf   
  41df02:	enter  0x9f2f,0x27
  41df06:	dec    ebx
  41df07:	scas   al,BYTE PTR es:[edi]
  41df08:	or     al,0x24
  41df0a:	rcr    BYTE PTR [ebx],0xaa
  41df0d:	or     bh,BYTE PTR [ebx-0x7a]
  41df10:	bound  eax,QWORD PTR [edx]
  41df12:	pop    eax
  41df13:	mov    eax,0x71680d47
  41df18:	lds    edx,FWORD PTR [ecx-0xd]
  41df1b:	push   ebx
  41df1c:	js     0x41df0d
  41df1e:	mov    eax,ds:0x74ed7e01
  41df23:	icebp  
  41df24:	mov    bh,0xfc
  41df26:	mov    cl,0x88
  41df28:	mov    edx,0x23df904e
  41df2d:	or     DWORD PTR [edi+0xcdf72ec],ecx
  41df33:	nop
  41df34:	add    al,0xd
  41df36:	sbb    BYTE PTR [ecx+0x27243d78],0x59
  41df3d:	(bad)  
  41df3e:	cli    
  41df3f:	inc    ebp
  41df40:	sbb    bl,BYTE PTR [edx-0x37]
  41df43:	jecxz  0x41df9f
  41df45:	lock xchg edx,eax
  41df47:	xor    edi,DWORD PTR [ebx]
  41df49:	idiv   BYTE PTR [edx-0x4d]
  41df4c:	xor    eax,0xac0356a8
  41df51:	mov    ss,WORD PTR [edi]
  41df53:	popa   
  41df54:	aad    0x76
  41df56:	dec    esi
  41df57:	add    ah,BYTE PTR [edx-0x11b659a3]
  41df5d:	cs std 
  41df5f:	dec    ecx
  41df60:	ret    
  41df61:	dec    eax
  41df62:	frstor [esi-0x16]
  41df65:	jne    0x41dfc9
  41df67:	call   FWORD PTR [ebp+0x220ac7d9]
  41df6d:	jae    0x41defe
  41df6f:	out    dx,eax
  41df70:	or     DWORD PTR [esi+0x25],ebp
  41df73:	mul    DWORD PTR [esi-0x4094332d]
  41df79:	mov    ah,0x25
  41df7b:	fadd   DWORD PTR [ebp-0x56]
  41df7e:	ja     0x41df0f
  41df80:	pop    edi
  41df81:	xchg   esp,eax
  41df82:	jb     0x41df76
  41df84:	out    0xc6,eax
  41df86:	sub    dh,BYTE PTR [edx+esi*1+0x77a95d8]
  41df8d:	or     BYTE PTR [edx-0x5790c176],dl
  41df93:	cwde   
  41df94:	add    DWORD PTR [esp+ebp*4+0x2d2a3141],esp
  41df9b:	mov    edi,0x135fc906
  41dfa0:	aad    0x5c
  41dfa2:	imul   edx,DWORD PTR [ebp+0x8],0xc5a2bf5a
  41dfa9:	and    eax,0x4fa33473
  41dfae:	and    DWORD PTR [esi-0x31],eax
  41dfb1:	stc    
  41dfb2:	push   es
  41dfb3:	cdq    
  41dfb4:	inc    ecx
  41dfb5:	enter  0xcddb,0xfe
  41dfb9:	addr16 push ebx
  41dfbb:	adc    edi,DWORD PTR [eax+0x22cbcf58]
  41dfc1:	pop    ds
  41dfc2:	pop    ss
  41dfc3:	adc    dl,ah
  41dfc5:	push   eax
  41dfc6:	stos   DWORD PTR es:[edi],eax
  41dfc7:	mov    dl,0xb1
  41dfc9:	sbb    DWORD PTR [ebp+0x486feeda],ebx
  41dfcf:	xchg   ecx,eax
  41dfd0:	stc    
  41dfd1:	cwde   
  41dfd2:	clc    
  41dfd3:	and    al,0x2a
  41dfd5:	inc    edx
  41dfd6:	mov    edi,0xe57a1a74
  41dfdb:	pop    esp
  41dfdc:	mov    ds:0x40d9a33f,eax
  41dfe1:	test   DWORD PTR [ebx+ecx*1-0x23],edx
  41dfe5:	jmp    0x3e9e4b5a
  41dfea:	cld    
  41dfeb:	inc    ebx
  41dfec:	pop    ebx
  41dfed:	aas    
  41dfee:	pop    edi
  41dfef:	add    ebp,DWORD PTR [ebx]
  41dff1:	adc    eax,0x76a3ec39
  41dff6:	fsub   DWORD PTR [edi+ecx*1+0x75]
  41dffa:	xor    al,0xea
  41dffc:	jo     0x41e05c
  41dffe:	std    
  41dfff:	push   0xfffffff9
  41e001:	push   ecx
  41e002:	cmp    eax,0xc33e0e34
  41e007:	sbb    ebp,ebp
  41e009:	sub    dh,BYTE PTR ds:0xb3f863d2
  41e00f:	mov    bh,BYTE PTR ds:0xc330748b
  41e015:	sbb    ebx,DWORD PTR [ebx]
  41e017:	lock sub edi,DWORD PTR [ecx+0x6c01149d]
  41e01e:	popf   
  41e01f:	or     BYTE PTR [ebx],cl
  41e021:	push   edi
  41e022:	jne    0x41dfce
  41e024:	cmp    BYTE PTR [ebx-0x6],bl
  41e027:	jle    0x41e08a
  41e029:	pop    ds
  41e02a:	daa    
  41e02b:	pop    ebx
  41e02c:	int3   
  41e02d:	aas    
  41e02e:	test   eax,0xf08d5d0d
  41e033:	cdq    
  41e034:	test   edi,edi
  41e036:	dec    eax
  41e037:	and    al,0x5d
  41e039:	in     eax,dx
  41e03a:	push   edx
  41e03b:	shr    BYTE PTR [esi],1
  41e03d:	pop    edx
  41e03e:	mov    ch,0x9
  41e040:	fcom   DWORD PTR [esi]
  41e042:	mov    bh,0x47
  41e044:	sbb    eax,0x42af5a7a
  41e049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e04a:	out    dx,al
  41e04b:	aas    
  41e04c:	fist   DWORD PTR [esi+0x61]
  41e04f:	and    BYTE PTR [eax-0x11],0xe8
  41e053:	test   DWORD PTR [esi],esi
  41e055:	dec    ebx
  41e056:	das    
  41e057:	pop    ds
  41e058:	hlt    
  41e059:	jle    0x41e0ae
  41e05b:	add    al,0x54
  41e05d:	push   ecx
  41e05e:	adc    al,0x6
  41e060:	push   cs
  41e061:	addr16 in al,0xa9
  41e064:	and    eax,0x79c0f65e
  41e069:	outs   dx,BYTE PTR es:[esi]
  41e06b:	pop    es
  41e06c:	loopne 0x41e07b
  41e06e:	and    DWORD PTR [edx-0x4a],0x57
  41e072:	or     esi,DWORD PTR [edx+0x27614a3b]
  41e078:	xor    edi,DWORD PTR [ebp-0x58ca2b06]
  41e07e:	fstp   TBYTE PTR [edi]
  41e080:	sub    al,0xab
  41e082:	inc    eax
  41e084:	popa   
  41e085:	in     al,0x36
  41e087:	scas   al,BYTE PTR es:[edi]
  41e088:	add    eax,DWORD PTR [edx+eax*1]
  41e08b:	inc    ebx
  41e08c:	out    dx,al
  41e08d:	repz cmp BYTE PTR [bx+si-0x7b],ch
  41e092:	enter  0xef6c,0xd4
  41e096:	or     BYTE PTR [ebp+0x4b192cb5],0xd1
  41e09d:	push   0x73c79e2c
  41e0a2:	mov    ds:0xe62df233,al
  41e0a7:	mov    DWORD PTR [eax-0x1a6fe830],esp
  41e0ad:	mov    ah,0x90
  41e0af:	sbb    BYTE PTR [eax-0x5477d251],0xca
  41e0b6:	ror    eax,0x2f
  41e0b9:	or     bl,BYTE PTR [eax+0x31]
  41e0bc:	mov    ebx,ebx
  41e0be:	or     DWORD PTR [ebx+0xc],ebp
  41e0c1:	mov    ds:0x3ce62e16,al
  41e0c6:	mov    eax,0xb59d389f
  41e0cb:	xchg   esi,eax
  41e0cc:	call   0xf205:0xaf6aebef
  41e0d3:	nop
  41e0d4:	jecxz  0x41e103
  41e0d6:	mov    eax,ds:0xcc115409
  41e0db:	fistp  QWORD PTR [edx-0x58]
  41e0de:	(bad)  
  41e0df:	bound  ecx,QWORD PTR [esi+0x5583db25]
  41e0e5:	mov    ch,0x35
  41e0e7:	in     al,dx
  41e0e8:	mov    al,ds:0x1cecf30f
  41e0ed:	mov    edx,0xee92d1b4
  41e0f2:	jno    0x41e0c5
  41e0f4:	or     al,0x5c
  41e0f6:	in     eax,0x98
  41e0f8:	mov    bh,0xd2
  41e0fa:	data16 loop 0x41e10f
  41e0fd:	clc    
  41e0fe:	inc    esp
  41e0ff:	cmp    DWORD PTR [ecx+esi*1-0x2eb8a17],edi
  41e106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e107:	bound  edx,QWORD PTR [edi]
  41e109:	cli    
  41e10a:	mov    cl,0x2f
  41e10c:	jecxz  0x41e154
  41e10e:	sti    
  41e10f:	mov    eax,ds:0x3d29ed13
  41e114:	dec    edi
  41e115:	(bad)  
  41e116:	sbb    dl,BYTE PTR [eax]
  41e118:	mov    eax,0xb2cee16d
  41e11d:	pop    eax
  41e11e:	mov    esp,0xc4a6df36
  41e123:	push   ebx
  41e124:	mov    ds:0xc8dd0fca,eax
  41e129:	ds jmp 0x41e193
  41e12c:	stos   BYTE PTR es:[edi],al
  41e12d:	adc    eax,0xad2da9cb
  41e132:	test   al,0x98
  41e134:	(bad)  
  41e135:	cmp    BYTE PTR [ebx],cl
  41e137:	xchg   ebp,eax
  41e138:	inc    edx
  41e139:	cdq    
  41e13a:	pop    ss
  41e13b:	mov    bl,0xa8
  41e13d:	inc    esp
  41e13e:	push   0x3db7ed79
  41e143:	daa    
  41e144:	jo     0x41e0fd
  41e146:	or     BYTE PTR [edx],bh
  41e148:	not    BYTE PTR [edi]
  41e14a:	jle    0x41e190
  41e14c:	ss iret 
  41e14e:	lds    ecx,FWORD PTR [ebx+0x6a]
  41e151:	dec    eax
  41e152:	pusha  
  41e153:	sub    BYTE PTR [eax-0x54],bl
  41e156:	xchg   ecx,eax
  41e157:	sbb    al,0xfa
  41e159:	inc    edi
  41e15a:	mov    dh,0x0
  41e15c:	sbb    al,0xea
  41e15e:	std    
  41e15f:	adc    DWORD PTR ds:0x271a3643,esp
  41e165:	je     0x41e158
  41e167:	push   ebp
  41e168:	sub    BYTE PTR [ebp-0x54447100],0xa0
  41e16f:	enter  0x90bf,0x6
  41e173:	mul    al
  41e175:	pop    ds
  41e176:	adc    DWORD PTR ds:0xe0ef918e,ebx
  41e17c:	push   0xffffff84
  41e17e:	xchg   esi,eax
  41e17f:	sub    bl,BYTE PTR [eax-0x419b439d]
  41e185:	dec    esp
  41e186:	stos   DWORD PTR es:[edi],eax
  41e187:	not    ch
  41e189:	sti    
  41e18a:	retf   
  41e18b:	das    
  41e18c:	ins    BYTE PTR es:[edi],dx
  41e18d:	jecxz  0x41e143
  41e18f:	and    DWORD PTR [edi],esi
  41e191:	fucomi st,st(0)
  41e193:	ret    0x8037
  41e196:	inc    esi
  41e197:	ds mov ecx,0x34143f5c
  41e19d:	push   edi
  41e19e:	pop    edx
  41e19f:	xchg   esi,eax
  41e1a0:	pop    esi
  41e1a1:	mov    al,ds:0x5fe5f52c
  41e1a6:	push   eax
  41e1a7:	cs das 
  41e1a9:	aas    
  41e1aa:	fidivr WORD PTR [edx+0x2241d4b7]
  41e1b0:	push   ss
  41e1b1:	popa   
  41e1b2:	in     al,0x45
  41e1b4:	push   ebp
  41e1b5:	xor    ch,BYTE PTR [edx+edi*8+0x3accab16]
  41e1bc:	in     eax,dx
  41e1bd:	cdq    
  41e1be:	ret    0x26fb
  41e1c1:	popa   
  41e1c2:	mov    edi,0x9f50baff
  41e1c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1c8:	add    BYTE PTR [ebx+0x43bc176a],ch
  41e1ce:	loope  0x41e18a
  41e1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1d1:	xchg   esi,eax
  41e1d2:	test   DWORD PTR [ecx],esp
  41e1d4:	in     al,0xe1
  41e1d6:	sbb    eax,0xf5c2173f
  41e1db:	adc    edx,0x22
  41e1de:	inc    edi
  41e1df:	push   cs
  41e1e0:	adc    BYTE PTR [edx],dl
  41e1e2:	sbb    BYTE PTR [ecx+esi*8],0x9c
  41e1e6:	inc    ebp
  41e1e7:	mov    fs,WORD PTR ds:0xed519ee0
  41e1ed:	leave  
  41e1ee:	mov    al,ds:0xfe030d78
  41e1f3:	sub    DWORD PTR [edx],0x5948bc3b
  41e1f9:	arpl   WORD PTR [edi],bp
  41e1fb:	mov    bh,0xc6
  41e1fd:	loop   0x41e1f0
  41e1ff:	mov    esp,0xaed914bf
  41e204:	cmp    al,0xb5
  41e206:	stos   BYTE PTR es:[edi],al
  41e207:	ds inc edx
  41e209:	jge    0x41e1e7
  41e20b:	xor    bh,BYTE PTR [ecx]
  41e20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e20e:	(bad)  
  41e20f:	jnp    0x41e1f1
  41e211:	mov    al,BYTE PTR [ebp+0x6c24a1ff]
  41e217:	mov    edx,0x68da9447
  41e21c:	loop   0x41e28e
  41e21e:	in     al,dx
  41e21f:	push   ebx
  41e220:	push   0x73aadb3f
  41e225:	sbb    BYTE PTR ds:0x8a8c1523,dh
  41e22b:	push   es
  41e22c:	div    ch
  41e22e:	cmp    ebx,ebx
  41e230:	push   es
  41e231:	test   al,0xe7
  41e233:	cmp    cl,dh
  41e235:	pop    es
  41e236:	popa   
  41e237:	jbe    0x41e233
  41e239:	sub    BYTE PTR [edi],bh
  41e23b:	and    BYTE PTR [edx+0x3c],dh
  41e23e:	mov    ch,0xf1
  41e240:	addr16 mov eax,ds:0xe77f
  41e244:	(bad)  
  41e245:	cmp    eax,ecx
  41e247:	mov    ah,0xbe
  41e249:	and    eax,0x14878f05
  41e24e:	adc    ebp,DWORD PTR [esi]
  41e250:	push   es
  41e251:	packsswb mm4,QWORD PTR [ecx]
  41e254:	test   al,0xf7
  41e256:	pop    edi
  41e257:	xchg   ebx,eax
  41e258:	int3   
  41e259:	mov    ah,0xfd
  41e25b:	push   ds
  41e25c:	sbb    edi,DWORD PTR [ecx]
  41e25e:	fucomp st(2)
  41e260:	add    DWORD PTR [edi+esi*1+0x7],ebx
  41e264:	push   esi
  41e265:	and    cl,bl
  41e267:	pop    edx
  41e268:	out    dx,al
  41e269:	inc    edi
  41e26a:	nop
  41e26b:	cld    
  41e26c:	fnstsw WORD PTR [ebx+0x7fdaa54f]
  41e272:	(bad)  
  41e273:	xor    al,al
  41e275:	pop    ecx
  41e276:	pop    edx
  41e277:	ins    DWORD PTR es:[edi],dx
  41e278:	loope  0x41e2a2
  41e27a:	xchg   esi,eax
  41e27b:	cmp    dl,cl
  41e27d:	pop    eax
  41e27e:	pop    edx
  41e27f:	test   BYTE PTR [esi+0x9],dh
  41e282:	push   ds
  41e283:	push   eax
  41e284:	push   eax
  41e285:	sub    BYTE PTR [edx-0xa],ch
  41e288:	mov    WORD PTR [esi+eax*1-0x2741a7e4],es
  41e28f:	xor    BYTE PTR [esi+eiz*4-0x20],ch
  41e293:	xchg   edx,eax
  41e294:	fcom   DWORD PTR [edx-0x2f8ee727]
  41e29a:	mov    ebx,DWORD PTR [ecx]
  41e29c:	test   al,0xc3
  41e29e:	mov    ebp,0xa75ec57a
  41e2a3:	inc    esi
  41e2a4:	mov    ah,BYTE PTR [ebx+0x47ba2cca]
  41e2aa:	mov    edx,0xc5d4005
  41e2af:	jecxz  0x41e300
  41e2b1:	test   DWORD PTR [ebx],ebx
  41e2b3:	pusha  
  41e2b4:	hlt    
  41e2b5:	and    cl,dh
  41e2b7:	jns    0x41e302
  41e2b9:	cmp    bl,BYTE PTR [edx]
  41e2bb:	mov    eax,ds:0xe4957bf0
  41e2c0:	or     cl,BYTE PTR [edi+ecx*2+0x2917d006]
  41e2c7:	fisttp QWORD PTR [ecx]
  41e2c9:	mov    bh,0x2e
  41e2cb:	repnz in al,0xc0
  41e2ce:	pop    esp
  41e2cf:	add    eax,DWORD PTR ds:0x6090f118
  41e2d5:	enter  0x41dc,0x3
  41e2d9:	es int3 
  41e2db:	push   esp
  41e2dc:	outs   dx,DWORD PTR ds:[esi]
  41e2dd:	pushf  
  41e2de:	sub    ecx,DWORD PTR [eax-0x146d33f]
  41e2e4:	retf   
  41e2e5:	and    dl,ch
  41e2e7:	add    ebp,ebp
  41e2e9:	jne    0x41e31a
  41e2eb:	lock (bad) 
  41e2ed:	aaa    
  41e2ee:	sahf   
  41e2ef:	repz bound eax,QWORD PTR [ecx-0x218ddffd]
  41e2f6:	cmp    al,0xff
  41e2f8:	pusha  
  41e2f9:	sub    DWORD PTR [esi+ecx*4],ebx
  41e2fc:	cli    
  41e2fd:	std    
  41e2fe:	clc    
  41e2ff:	jg     0x41e2e7
  41e301:	cmp    BYTE PTR [edx+0x6e],dl
  41e304:	out    0xf9,eax
  41e306:	push   es
  41e307:	push   ss
  41e308:	adc    edi,esp
  41e30a:	aad    0x5b
  41e30c:	and    eax,0x584ffbf7
  41e311:	stos   DWORD PTR es:[edi],eax
  41e312:	cdq    
  41e313:	dec    ebx
  41e314:	rol    DWORD PTR [edi],cl
  41e316:	pop    ecx
  41e317:	clc    
  41e318:	dec    esi
  41e319:	(bad)  [ebp+0x5c]
  41e31c:	test   DWORD PTR [edx-0x16],edx
  41e31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e320:	daa    
  41e321:	jne    0x41e35d
  41e323:	inc    ecx
  41e324:	sbb    BYTE PTR [edx+ebp*2-0x32],dh
  41e328:	stos   DWORD PTR es:[edi],eax
  41e329:	jmp    0xbff20bed
  41e32e:	sbb    al,0x7d
  41e330:	lods   eax,DWORD PTR ds:[esi]
  41e331:	into   
  41e332:	mov    dh,0x65
  41e334:	(bad)  
  41e335:	into   
  41e336:	adc    ebx,DWORD PTR [edx+0x28fd72a]
  41e33c:	cmp    BYTE PTR [edx+0x3527b833],ah
  41e342:	xchg   BYTE PTR [ebx],ah
  41e344:	jge    0x41e34e
  41e346:	add    bh,BYTE PTR [ecx+0x75f3959c]
  41e34c:	push   ss
  41e34d:	jp     0x41e305
  41e34f:	xlat   BYTE PTR ds:[ebx]
  41e350:	inc    edx
  41e351:	or     DWORD PTR ds:0x944b505,eax
  41e357:	in     al,dx
  41e358:	popa   
  41e359:	sub    dh,cl
  41e35b:	jmp    0x41e39f
  41e35d:	fs jmp 0xb21dad9f
  41e363:	pop    ebp
  41e364:	jle    0x41e37d
  41e366:	imul   eax,esp,0xffffffc2
  41e369:	sbb    BYTE PTR [edx],dh
  41e36b:	loopne 0x41e3c6
  41e36d:	cmp    DWORD PTR [edi-0x5b],esp
  41e370:	sub    bh,bh
  41e372:	sahf   
  41e373:	adc    DWORD PTR [eax-0x67],edi
  41e376:	pop    ebx
  41e377:	mov    ecx,0x26a67de7
  41e37c:	add    ah,dl
  41e37e:	dec    esi
  41e37f:	sbb    edx,eax
  41e381:	xchg   edx,eax
  41e382:	xlat   BYTE PTR ds:[ebx]
  41e383:	loopne 0x41e3a3
  41e385:	fdiv   DWORD PTR [eax-0x29]
  41e388:	(bad)  [ecx]
  41e38a:	(bad)  
  41e38b:	push   esi
  41e38c:	test   BYTE PTR [esi+0x63],0x32
  41e390:	push   ds
  41e391:	xchg   esi,eax
  41e392:	cmp    al,0x42
  41e394:	fst    DWORD PTR [edi]
  41e396:	and    BYTE PTR [ecx],bh
  41e398:	dec    ebp
  41e399:	xlat   BYTE PTR ds:[ebx]
  41e39a:	mov    ah,0xd2
  41e39c:	mov    ds:0xcc95e44b,al
  41e3a1:	int    0xe1
  41e3a3:	add    al,0x9b
  41e3a5:	add    bl,BYTE PTR [ebx-0x69]
  41e3a8:	(bad)  
  41e3a9:	jne    0x41e356
  41e3ab:	add    DWORD PTR [ecx-0x44d10df4],eax
  41e3b1:	(bad)  
  41e3b3:	mov    BYTE PTR [eax-0x76b7dd32],0xf4
  41e3ba:	ins    DWORD PTR es:[edi],dx
  41e3bb:	push   esp
  41e3bc:	ds sub ah,cl
  41e3bf:	or     eax,0xb062dcd6
  41e3c4:	clc    
  41e3c5:	sbb    al,0xa4
  41e3c7:	jb     0x41e361
  41e3c9:	jo     0x41e3b7
  41e3cb:	in     al,0xc8
  41e3cd:	call   0x3273e1f4
  41e3d2:	mov    dx,0x4102
  41e3d6:	push   edi
  41e3d7:	pop    eax
  41e3d8:	jmp    0xc60a:0x3cc5a135
  41e3df:	jmp    0x41e3c0
  41e3e1:	es (bad) 
  41e3e3:	fsubr  QWORD PTR [esi-0x68]
  41e3e6:	and    cl,dl
  41e3e8:	dec    ebx
  41e3e9:	xchg   edi,eax
  41e3ea:	in     eax,0x87
  41e3ec:	popf   
  41e3ed:	fwait
  41e3ee:	dec    ecx
  41e3ef:	push   eax
  41e3f0:	push   0x72
  41e3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3f3:	jge    0x41e3d6
  41e3f5:	jl     0x41e39e
  41e3f7:	mov    ebx,0x97e12a1c
  41e3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3fd:	pop    ss
  41e3fe:	and    DWORD PTR [ecx],ebp
  41e400:	pop    ecx
  41e401:	xchg   edi,eax
  41e402:	dec    edx
  41e403:	inc    ebx
  41e404:	test   eax,0xb025e560
  41e409:	mov    cl,0x21
  41e40b:	adc    BYTE PTR [ebp+0x641402e6],dh
  41e411:	mov    ds:0x6b7fe334,al
  41e416:	inc    edx
  41e417:	inc    esi
  41e418:	cli    
  41e419:	mov    edx,0x3a243357
  41e41e:	pusha  
  41e41f:	fdiv   DWORD PTR [ebp-0x3e]
  41e422:	sub    al,0x43
  41e424:	mov    DWORD PTR [eax-0x19],esp
  41e427:	nop
  41e428:	ja     0x41e4a7
  41e42a:	mov    ds:0xcce4655b,eax
  41e42f:	lock lock or BYTE PTR [eax+ecx*2],bl
  41e434:	and    DWORD PTR [esi+0x1b],0x62597f70
  41e43b:	jnp    0x41e469
  41e43d:	aas    
  41e43e:	ss ins BYTE PTR es:[edi],dx
  41e440:	popa   
  41e441:	(bad)  
  41e442:	cdq    
  41e443:	repz test al,0x67
  41e446:	jns    0x41e3c8
  41e448:	dec    esi
  41e449:	sar    DWORD PTR [ecx+0x23],cl
  41e44c:	and    ebx,DWORD PTR [eax-0x38730b91]
  41e452:	mov    dl,0xe1
  41e454:	ins    BYTE PTR es:[edi],dx
  41e455:	jge    0x41e423
  41e457:	xor    ah,al
  41e459:	div    DWORD PTR [ebp-0x735c3fb9]
  41e45f:	cli    
  41e460:	ror    BYTE PTR [eax],cl
  41e462:	outs   dx,DWORD PTR ds:[esi]
  41e463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e464:	mov    edi,0x6ed84707
  41e469:	into   
  41e46a:	dec    esp
  41e46b:	adc    DWORD PTR [edx+0x30003fd],edx
  41e471:	mov    al,0x6a
  41e473:	xchg   ebx,eax
  41e474:	test   eax,0x61a1e629
  41e479:	and    BYTE PTR [ecx+0x2c9a254e],al
  41e47f:	(bad)  
  41e480:	out    0xb2,eax
  41e482:	add    al,0xc1
  41e484:	jb     0x41e453
  41e486:	enter  0xe0e1,0x3d
  41e48a:	pop    ss
  41e48b:	daa    
  41e48c:	adc    DWORD PTR ds:0x9dc4935d,esp
  41e492:	adc    BYTE PTR [eax-0x6a],bl
  41e495:	adc    eax,0x4db37fae
  41e49a:	mov    dh,0xa3
  41e49c:	repnz int 0xd
  41e49f:	cs xchg edx,eax
  41e4a1:	(bad)  
  41e4a2:	in     eax,0xa1
  41e4a4:	repz add bh,dh
  41e4a7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4a9:	test   al,0x77
  41e4ab:	add    DWORD PTR [edx],ecx
  41e4ad:	shl    BYTE PTR [ecx+0x39b58173],1
  41e4b3:	add    eax,0xcaf6179e
  41e4b8:	inc    esi
  41e4b9:	dec    ebp
  41e4ba:	shr    DWORD PTR [ebp-0x53],1
  41e4bd:	aaa    
  41e4be:	add    bl,BYTE PTR [edi-0x6c19cb1]
  41e4c4:	mov    bh,0xc1
  41e4c6:	xchg   edx,eax
  41e4c7:	lock fcom DWORD PTR [edi-0x78]
  41e4cb:	sub    ecx,edi
  41e4cd:	cmp    eax,0xc764c0a2
  41e4d2:	(bad)  
  41e4d4:	bound  esp,QWORD PTR [ebp-0xd]
  41e4d7:	outs   dx,DWORD PTR ds:[esi]
  41e4d8:	into   
  41e4d9:	retf   
  41e4da:	mov    al,0xcf
  41e4dc:	test   BYTE PTR [ebp+0x20],ah
  41e4df:	mov    bl,0x4e
  41e4e1:	pushf  
  41e4e2:	add    eax,0x8fcfdf31
  41e4e7:	mov    bl,0xde
  41e4e9:	mov    cl,0xf6
  41e4eb:	xor    al,0x76
  41e4ed:	sbb    BYTE PTR [ebp-0x19ef2ba0],dl
  41e4f3:	ret    
  41e4f4:	test   al,0x2f
  41e4f6:	and    ebp,DWORD PTR [eax+0x8]
  41e4f9:	xchg   ebp,eax
  41e4fa:	ret    0xa9fa
  41e4fd:	rcr    esi,1
  41e4ff:	retf   0x3db8
  41e502:	push   es
  41e503:	xlat   BYTE PTR ds:[ebx]
  41e504:	mov    eax,0xa0f50dc7
  41e509:	adc    esp,DWORD PTR [esp+eiz*2+0x57]
  41e50d:	cdq    
  41e50e:	inc    eax
  41e50f:	rcl    BYTE PTR [edx],1
  41e511:	mov    esi,0xa2cb3911
  41e516:	retf   
  41e517:	in     al,0x49
  41e519:	dec    ebx
  41e51a:	in     eax,dx
  41e51b:	mov    al,0xd3
  41e51d:	push   ebp
  41e51e:	inc    edi
  41e51f:	les    esi,FWORD PTR [edi-0x61]
  41e522:	adc    eax,0xac187111
  41e527:	jb     0x41e54e
  41e529:	addr16 mov ebx,0xc24b62cc
  41e52f:	sub    BYTE PTR [esi+0x4b],ch
  41e532:	and    BYTE PTR [ebp+0x7d09bd76],0x56
  41e539:	pop    edi
  41e53a:	mov    ebp,0x62afc61d
  41e53f:	cmp    dl,BYTE PTR [ebx+ebp*1+0x68aea3c0]
  41e546:	(bad)  
  41e547:	jmp    0x912e:0xb7e47b0
  41e54e:	jae    0x41e5c1
  41e550:	inc    ecx
  41e551:	mov    dl,0x22
  41e553:	mov    ecx,0x23aef5ef
  41e558:	xor    ch,cl
  41e55a:	pushf  
  41e55b:	(bad)  
  41e55c:	ins    BYTE PTR es:[edi],dx
  41e55d:	ins    BYTE PTR es:[edi],dx
  41e55e:	sbb    DWORD PTR [ecx],ecx
  41e560:	mov    bl,0x7c
  41e562:	sub    al,BYTE PTR [eax+0x53ad14a3]
  41e568:	adc    bl,BYTE PTR [ebp-0x439f29cf]
  41e56e:	jg     0x41e5dd
  41e570:	sbb    DWORD PTR [esi-0x6c3afa68],eax
  41e576:	ror    DWORD PTR [esi],1
  41e578:	pop    ebx
  41e579:	sbb    BYTE PTR [ebx+0x1c8af01c],0xc3
  41e580:	jle    0x41e505
  41e582:	and    BYTE PTR [edi+0x43e08fac],ah
  41e588:	les    edx,FWORD PTR [edx+0x6adf063a]
  41e58e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e58f:	mov    ebx,ebx
  41e591:	push   esi
  41e592:	mov    bh,0x9c
  41e594:	jmp    0xd224:0x35ca35e5
  41e59b:	dec    ecx
  41e59c:	std    
  41e59d:	push   0x19
  41e59f:	mov    esp,0x29c3b175
  41e5a4:	cmp    cl,BYTE PTR [ecx+0x50ff5398]
  41e5aa:	aam    0x33
  41e5ac:	les    ebx,FWORD PTR [ebp+eiz*8+0x13]
  41e5b0:	pop    ebp
  41e5b1:	inc    esi
  41e5b2:	imul   eax,DWORD PTR [eax+0x5fad63d2],0xa3039ca5
  41e5bc:	jne    0x41e573
  41e5be:	adc    ebx,DWORD PTR [ebp+0x7ab3c42d]
  41e5c4:	cmp    eax,0x83343bb6
  41e5c9:	jle    0x41e62a
  41e5cb:	jns    0x41e619
  41e5cd:	popf   
  41e5ce:	jmp    0x6714:0xc9ebcbc5
  41e5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5d6:	sub    BYTE PTR [ebx+edx*2-0x52],0xe
  41e5db:	push   ss
  41e5dc:	cmp    dh,BYTE PTR [ebp+0x17]
  41e5df:	stc    
  41e5e0:	sbb    ch,BYTE PTR [esi]
  41e5e2:	jnp    0x41e5ae
  41e5e4:	jl     0x41e5d3
  41e5e6:	xchg   ecx,eax
  41e5e7:	out    0x94,eax
  41e5e9:	mov    ah,0xf2
  41e5eb:	lea    edx,[edx+0x7b1e8ecc]
  41e5f1:	je     0x41e645
  41e5f3:	inc    ecx
  41e5f4:	xchg   ebx,eax
  41e5f5:	aam    0x39
  41e5f7:	cwde   
  41e5f8:	jmp    0xcc6a:0x481d90a4
  41e5ff:	pop    eax
  41e600:	lea    ebp,[esi+0xe]
  41e603:	push   edi
  41e604:	sti    
  41e605:	xor    eax,0x5154d75e
  41e60a:	xor    BYTE PTR [ebx],ch
  41e60c:	les    ebx,FWORD PTR [edx]
  41e60e:	ret    
  41e60f:	cli    
  41e610:	cs in  eax,dx
  41e612:	push   es
  41e613:	outs   dx,BYTE PTR ds:[esi]
  41e614:	call   0x1c574cf2
  41e619:	fsub   st(5),st
  41e61b:	push   edx
  41e61c:	sbb    bh,cl
  41e61e:	push   0x68dad8a0
  41e623:	call   FWORD PTR [eax]
  41e625:	and    ebx,ebx
  41e627:	cli    
  41e628:	mov    ah,bl
  41e62a:	push   cs
  41e62b:	xchg   BYTE PTR ds:0x8d3e320,cl
  41e631:	push   ecx
  41e632:	cmp    al,0xd4
  41e634:	cmp    al,0x25
  41e636:	rol    DWORD PTR [eax+ecx*1-0x4a],0xb4
  41e63b:	xor    eax,DWORD PTR [ecx]
  41e63d:	scas   eax,DWORD PTR es:[edi]
  41e63e:	into   
  41e63f:	loopne 0x41e6a0
  41e641:	jp     0x41e63f
  41e643:	or     al,0x13
  41e645:	adc    bh,al
  41e647:	js     0x41e67b
  41e649:	das    
  41e64a:	jmp    0x65f8:0xe98609b
  41e651:	jmp    0x3cce116b
  41e656:	sbb    bl,ah
  41e658:	xor    eax,0x8ef0c039
  41e65d:	jl     0x41e622
  41e65f:	repz fsubr st,st(3)
  41e662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e663:	xor    BYTE PTR [edx-0x74],dh
  41e666:	es push ds
  41e668:	cmovnp ecx,DWORD PTR [esp+eiz*2+0x4b7ed14b]
  41e670:	test   eax,0x7e2b0c07
  41e675:	sbb    al,0xaa
  41e677:	xlat   BYTE PTR ds:[ebx]
  41e678:	and    al,0x4a
  41e67a:	sti    
  41e67b:	enter  0x353e,0xa1
  41e67f:	sbb    BYTE PTR [ecx-0x50],al
  41e682:	pop    edx
  41e683:	iret   
  41e684:	scas   al,BYTE PTR es:[edi]
  41e685:	xor    bl,BYTE PTR [eax-0x36]
  41e688:	pop    esp
  41e689:	mul    esp
  41e68b:	popa   
  41e68c:	mov    al,ds:0x6400eb55
  41e691:	add    eax,edi
  41e693:	push   edx
  41e694:	icebp  
  41e695:	je     0x41e6c5
  41e697:	add    bh,ah
  41e699:	scas   al,BYTE PTR es:[edi]
  41e69a:	push   esi
  41e69b:	sahf   
  41e69c:	lds    edi,FWORD PTR [eax+0x49]
  41e69f:	dec    esi
  41e6a0:	mov    ah,0xad
  41e6a2:	pop    edi
  41e6a3:	outs   dx,DWORD PTR ds:[esi]
  41e6a4:	inc    ebp
  41e6a5:	test   eax,0x1cf8c237
  41e6aa:	int    0x15
  41e6ac:	popa   
  41e6ad:	jae    0x41e706
  41e6af:	add    eax,0xca0d2692
  41e6b4:	loop   0x41e670
  41e6b6:	data16 (bad) [ebp-0x1b]
  41e6ba:	jb     0x41e662
  41e6bc:	sbb    DWORD PTR [eax+0x45],ecx
  41e6bf:	and    eax,0xb2e9ea46
  41e6c4:	and    DWORD PTR [esp+ebx*1+0x49],edx
  41e6c8:	es mov edi,0x8a87b3c3
  41e6ce:	outs   dx,DWORD PTR ds:[esi]
  41e6cf:	aad    0xf8
  41e6d1:	xchg   BYTE PTR [ebx],dh
  41e6d3:	ret    0x32ad
  41e6d6:	or     DWORD PTR [edx-0x1e2fe24b],ebp
  41e6dc:	fnstsw WORD PTR [edx]
  41e6de:	jbe    0x41e75e
  41e6e0:	inc    esi
  41e6e1:	aad    0x70
  41e6e3:	pop    esp
  41e6e4:	jns    0x41e6b9
  41e6e6:	addr16 push eax
  41e6e8:	mov    dh,0xe6
  41e6ea:	inc    eax
  41e6eb:	call   FWORD PTR [ecx]
  41e6ed:	js     0x41e757
  41e6ef:	adc    bl,ch
  41e6f1:	inc    edi
  41e6f2:	xor    al,0x40
  41e6f4:	jg     0x41e6be
  41e6f6:	arpl   WORD PTR [ebp+0x60f44d25],sp
  41e6fc:	data16 aam 0xf0
  41e6ff:	call   0x74d0:0x655bf6ad
  41e706:	ja     0x41e6e3
  41e708:	lahf   
  41e709:	loopne 0x41e719
  41e70b:	loope  0x41e6cc
  41e70d:	popa   
  41e70e:	scas   eax,DWORD PTR es:[edi]
  41e70f:	(bad)  
  41e710:	mov    edx,0x6c30d752
  41e715:	fist   WORD PTR [esp+ecx*8]
  41e718:	cdq    
  41e719:	dec    edx
  41e71a:	cmp    bh,BYTE PTR [ecx+ebp*8]
  41e71d:	dec    esp
  41e71e:	pop    edx
  41e71f:	in     al,0xe
  41e721:	jno    0x41e789
  41e723:	mov    ?,edx
  41e725:	inc    ebx
  41e726:	dec    esi
  41e727:	shr    BYTE PTR [eax+0x261c3044],0xbc
  41e72e:	(bad)  
  41e72f:	fld    DWORD PTR [esi+0x6b04b4a9]
  41e735:	add    DWORD PTR [eax-0x6e25adf7],esi
  41e73b:	dec    esp
  41e73c:	loopne 0x41e70c
  41e73e:	int3   
  41e73f:	test   eax,0x885a93f8
  41e744:	jb     0x41e751
  41e746:	retf   
  41e747:	add    eax,0xcd9cd02c
  41e74c:	shl    BYTE PTR ds:0x5913,0xc5
  41e752:	imul   ebx,ecx,0xb4cd2913
  41e758:	fwait
  41e759:	lock mov ebp,0x987298f1
  41e75f:	es mov ebx,0x30b8db52
  41e765:	push   ebp
  41e766:	cmp    DWORD PTR [esi-0x56e03524],0x58
  41e76d:	mov    ebx,0xec699502
  41e772:	cmp    BYTE PTR [eax],bh
  41e774:	aaa    
  41e775:	fnsave [ebp+0x2c]
  41e778:	hlt    
  41e779:	mul    DWORD PTR [esp+ecx*8+0xb]
  41e77d:	jmp    0x41e764
  41e77f:	adc    BYTE PTR [ebp-0x4c017f66],bh
  41e785:	dec    esp
  41e786:	adc    BYTE PTR [ebx],0xe9
  41e789:	cmp    ebp,DWORD PTR [ebx-0x74d6366d]
  41e78f:	shl    ch,1
  41e791:	add    bl,dl
  41e793:	pop    ecx
  41e794:	popa   
  41e795:	mov    eax,es
  41e797:	push   cs
  41e798:	and    ch,dh
  41e79a:	cli    
  41e79b:	or     DWORD PTR [esi],eax
  41e79d:	adc    BYTE PTR [esi+0x2c573984],dh
  41e7a3:	sbb    BYTE PTR [edx],0x46
  41e7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7a7:	and    BYTE PTR [edx],ah
  41e7a9:	call   0x392b:0xe502072c
  41e7b0:	dec    edx
  41e7b1:	imul   edi,DWORD PTR [edx],0x7394a2c9
  41e7b7:	pop    ds
  41e7b8:	cld    
  41e7b9:	std    
  41e7ba:	stos   DWORD PTR es:[edi],eax
  41e7bb:	outs   dx,DWORD PTR ds:[esi]
  41e7bc:	test   eax,0xa1895130
  41e7c1:	push   eax
  41e7c2:	push   ecx
  41e7c3:	fstp   TBYTE PTR [edi+0x78]
  41e7c6:	pop    ebx
  41e7c7:	imul   ebx,DWORD PTR [ebp-0x24],0xffffff9e
  41e7cb:	cmp    bl,cl
  41e7cd:	inc    edx
  41e7ce:	cmp    cl,BYTE PTR [esi-0x14]
  41e7d1:	mov    esi,0x692c09e5
  41e7d6:	mov    al,0x51
  41e7d8:	push   esp
  41e7d9:	repnz (bad) 
  41e7db:	in     eax,0xf9
  41e7dd:	xor    BYTE PTR [edx],bh
  41e7df:	jge    0x41e79d
  41e7e1:	mov    eax,ds:0x8ef5e3b
  41e7e6:	aas    
  41e7e7:	mov    esi,0x9b64549c
  41e7ec:	and    edi,0x1d96e789
  41e7f2:	dec    eax
  41e7f3:	mov    BYTE PTR [esi],ah
  41e7f5:	(bad)  
  41e7f6:	pop    eax
  41e7f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7f8:	lds    esi,FWORD PTR [ecx+0x76]
  41e7fb:	pushf  
  41e7fc:	mov    ebp,0x890da276
  41e801:	pop    esi
  41e802:	daa    
  41e803:	push   ebp
  41e804:	pushf  
  41e805:	lahf   
  41e806:	xchg   dx,ax
  41e808:	add    al,0xc2
  41e80a:	cmp    BYTE PTR [eax-0x7d],al
  41e80d:	mov    ebp,esi
  41e80f:	out    0x67,eax
  41e811:	mov    ebx,0x650d8465
  41e816:	aaa    
  41e817:	mov    ah,0x8f
  41e819:	and    ebp,esp
  41e81b:	xor    BYTE PTR [ecx-0xde7a881],al
  41e821:	nop
  41e822:	mov    eax,0x527e7efe
  41e827:	loope  0x41e82e
  41e829:	mov    esp,0x54ac50a2
  41e82e:	adc    al,0x74
  41e830:	dec    edi
  41e831:	mov    eax,0x70586bfe
  41e836:	nop
  41e837:	sub    DWORD PTR [ebx-0x55],esp
  41e83a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e83b:	cmc    
  41e83c:	mov    cl,0x8d
  41e83e:	aad    0xee
  41e840:	add    eax,0x99a42a76
  41e845:	test   BYTE PTR [ebp-0x5889649b],0x3f
  41e84c:	ret    
  41e84d:	repnz push 0xffffffd3
  41e850:	jb     0x41e81a
  41e852:	inc    ebp
  41e853:	sbb    al,0x46
  41e855:	mov    esi,ds
  41e857:	inc    edi
  41e858:	and    al,0xb1
  41e85a:	pop    eax
  41e85b:	mov    esi,0x4c284bca
  41e860:	sub    BYTE PTR [ecx+0xd7b46f3],ch
  41e866:	xchg   dl,ah
  41e868:	jmp    0x2076:0x1a1a3831
  41e86f:	jp     0x41e8eb
  41e871:	fbstp  TBYTE PTR [esi+ebx*4+0x6e]
  41e875:	jno    0x41e8f1
  41e877:	cwde   
  41e878:	adc    al,0x83
  41e87a:	inc    ecx
  41e87b:	outs   dx,BYTE PTR es:[esi]
  41e87d:	adc    al,0xe9
  41e87f:	pushf  
  41e880:	and    esp,ebx
  41e882:	repz sbb ch,BYTE PTR [edx-0x5239e202]
  41e889:	pop    edx
  41e88a:	jp     0x41e811
  41e88c:	repz jecxz 0x41e869
  41e88f:	mov    WORD PTR [ecx-0x63],es
  41e892:	push   0xffffff82
  41e894:	sbb    DWORD PTR [ebx],ebx
  41e896:	inc    ecx
  41e897:	sub    al,0x72
  41e899:	(bad)  
  41e89a:	(bad)  
  41e89b:	call   0xa303cf65
  41e8a0:	jmp    FWORD PTR [ebx+0x4b50c67]
  41e8a6:	push   ebx
  41e8a7:	xor    al,0x4f
  41e8a9:	mov    edx,0x78b76ad8
  41e8ae:	xchg   esp,eax
  41e8af:	pop    eax
  41e8b0:	arpl   WORD PTR [edi-0x72],cx
  41e8b3:	test   DWORD PTR [ecx+0x38],0x78364531
  41e8ba:	cld    
  41e8bb:	js     0x41e879
  41e8bd:	jae    0x41e864
  41e8bf:	or     eax,0x38725c0
  41e8c4:	push   ecx
  41e8c5:	mov    esi,0x81444b6f
  41e8ca:	aaa    
  41e8cb:	out    dx,al
  41e8cc:	push   ss
  41e8cd:	xor    al,0xb2
  41e8cf:	loope  0x41e8de
  41e8d1:	pop    ebx
  41e8d2:	xor    bh,BYTE PTR [esi-0x9]
  41e8d5:	(bad)  
  41e8d6:	pop    ebx
  41e8d7:	daa    
  41e8d8:	jl     0x41e94f
  41e8da:	dec    esi
  41e8db:	lods   eax,DWORD PTR ds:[esi]
  41e8dc:	jnp    0x41e93c
  41e8de:	mov    edi,0x6a165152
  41e8e3:	jmp    0x1f643421
  41e8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8e9:	push   edi
  41e8ea:	xor    al,0x32
  41e8ec:	shr    BYTE PTR ds:0x9d790490,1
  41e8f2:	int    0x1c
  41e8f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8f5:	loopne 0x41e8ed
  41e8f7:	mov    WORD PTR [ebp+0x4f352ce9],?
  41e8fd:	repz retf 0x75b
  41e901:	out    dx,ax
  41e903:	pop    eax
  41e904:	sbb    al,0x15
  41e906:	dec    ebp
  41e907:	xor    BYTE PTR [ebx+0x26],cl
  41e90a:	and    eax,0x8d09a77f
  41e90f:	adc    BYTE PTR [edi],ch
  41e911:	xchg   DWORD PTR [esi+eax*8+0xa],ecx
  41e915:	outs   dx,BYTE PTR ds:[esi]
  41e916:	in     al,0xed
  41e918:	in     eax,0x19
  41e91a:	mov    al,ch
  41e91c:	test   eax,0x3cf62e3
  41e921:	mov    DWORD PTR [edx-0x8],ebx
  41e924:	fadd   DWORD PTR gs:[ebp+0x5f95c50e]
  41e92b:	sahf   
  41e92c:	in     al,dx
  41e92d:	jno    0x41e974
  41e92f:	add    eax,0x44e67bef
  41e934:	div    DWORD PTR [ecx-0x2e]
  41e937:	cmp    dh,dh
  41e939:	push   0xb2c9b248
  41e93e:	cmp    DWORD PTR [eax-0x60],0x6de41b45
  41e945:	fwait
  41e946:	dec    edi
  41e947:	fcmovnb st,st(5)
  41e949:	add    eax,DWORD PTR [edx-0x39f03b97]
  41e94f:	push   edx
  41e950:	jle    0x41e8f0
  41e952:	jnp    0x41e9c5
  41e954:	leave  
  41e955:	clc    
  41e956:	mov    dl,BYTE PTR [ecx+0x428a328b]
  41e95c:	idiv   dh
  41e95e:	inc    edi
  41e95f:	aad    0xb7
  41e961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e962:	cdq    
  41e963:	ja     0x41e9c5
  41e965:	or     al,0x6
  41e967:	or     al,0xdd
  41e969:	xor    DWORD PTR [edx-0x4c],0xee9d717e
  41e970:	sbb    al,BYTE PTR [ecx+0x8]
  41e973:	mov    ecx,0x457d66b
  41e978:	lea    ecx,[esi-0x14]
  41e97b:	and    cl,ah
  41e97d:	and    eax,0x5a5ae964
  41e982:	pushf  
  41e983:	pop    ebx
  41e984:	mov    DWORD PTR [eax-0x712f1a8f],ebx
  41e98a:	push   esp
  41e98b:	inc    ebx
  41e98c:	in     al,0x46
  41e98e:	shl    BYTE PTR [ebp+0x2b],0xf8
  41e992:	cdq    
  41e993:	mov    ebp,0x158b5920
  41e998:	loopne 0x41e9a4
  41e99a:	cli    
  41e99b:	adc    DWORD PTR [ebx-0x41],esp
  41e99e:	cld    
  41e99f:	fild   WORD PTR [ecx+ebx*2]
  41e9a2:	dec    ebx
  41e9a3:	and    esi,DWORD PTR [ecx-0x79]
  41e9a6:	push   ebx
  41e9a7:	arpl   WORD PTR [ebp+0x38],dx
  41e9aa:	in     eax,dx
  41e9ab:	mov    edx,DWORD PTR [ebx]
  41e9ad:	out    dx,al
  41e9ae:	mov    esi,cs
  41e9b0:	call   FWORD PTR [ebx]
  41e9b2:	cmp    BYTE PTR [ecx+0x619c3147],cl
  41e9b8:	xchg   esi,eax
  41e9b9:	dec    eax
  41e9ba:	or     eax,0x9dff68a3
  41e9bf:	jge    0x41e9f8
  41e9c1:	sbb    al,0xe9
  41e9c3:	imul   esp,DWORD PTR [ecx],0xffffffef
  41e9c6:	mov    ds:0x7b311c85,eax
  41e9cb:	sar    DWORD PTR [edx-0x3f],1
  41e9ce:	sub    al,0xa2
  41e9d0:	dec    ebx
  41e9d1:	aas    
  41e9d2:	add    eax,0xe518dc30
  41e9d7:	retf   
  41e9d8:	clc    
  41e9d9:	pop    eax
  41e9da:	push   cs
  41e9db:	mov    dh,0x9b
  41e9dd:	cs cmp al,0x4c
  41e9e0:	ror    DWORD PTR [ebx+0x7a2777eb],0x5d
  41e9e7:	je     0x41ea06
  41e9e9:	aas    
  41e9ea:	in     al,dx
  41e9eb:	aam    0x72
  41e9ed:	clc    
  41e9ee:	push   edx
  41e9ef:	adc    al,0x8d
  41e9f1:	mov    bl,BYTE PTR [ecx-0xcadafe1]
  41e9f7:	jmp    0x1c4d:0x5023f437
  41e9fe:	jbe    0x41ea36
  41ea00:	(bad)  
  41ea01:	sub    eax,0xcbace995
  41ea06:	push   ebx
  41ea07:	mov    bh,0x69
  41ea09:	push   0xfffffffb
  41ea0b:	pop    ds
  41ea0c:	push   ebp
  41ea0d:	jae    0x41e9d8
  41ea0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea10:	mov    ecx,0x24d14c3b
  41ea15:	fs loope 0x41e9b9
  41ea18:	mov    dh,0x24
  41ea1a:	jbe    0x41e9be
  41ea1c:	in     eax,0x67
  41ea1e:	jae    0x41ea04
  41ea20:	sub    BYTE PTR [ebx+0x1b48e998],al
  41ea26:	adc    ecx,DWORD PTR [edi-0x4b]
  41ea29:	jb     0x41e9e4
  41ea2b:	jp     0x41ea9d
  41ea2d:	fisub  DWORD PTR [eax]
  41ea2f:	gs inc edx
  41ea31:	daa    
  41ea32:	cwde   
  41ea33:	popf   
  41ea34:	sahf   
  41ea35:	aam    0x5d
  41ea37:	dec    ebp
  41ea38:	out    dx,eax
  41ea39:	retf   
  41ea3a:	add    DWORD PTR [esp+eiz*4+0x15],ecx
  41ea3e:	cmp    al,0x9d
  41ea40:	sbb    bl,BYTE PTR [esi]
  41ea42:	dec    ebp
  41ea43:	sbb    ebx,DWORD PTR [ecx]
  41ea45:	pop    es
  41ea46:	pop    ss
  41ea47:	mov    ebx,0xff679bad
  41ea4c:	imul   DWORD PTR [ecx-0x494cb61b]
  41ea52:	lahf   
  41ea53:	or     cl,BYTE PTR [ecx]
  41ea55:	and    ebx,DWORD PTR [ecx]
  41ea57:	add    BYTE PTR [ebp-0x45],0x33
  41ea5b:	hlt    
  41ea5c:	stos   DWORD PTR es:[edi],eax
  41ea5d:	shl    DWORD PTR [ebx],1
  41ea5f:	jns    0x41e9fa
  41ea61:	inc    edx
  41ea62:	inc    edx
  41ea63:	mov    BYTE PTR [ecx+0x36604975],ah
  41ea69:	dec    esp
  41ea6a:	jmp    0x7a394462
  41ea6f:	test   DWORD PTR [ecx+eax*2+0x2e],edx
  41ea73:	jmp    0x41ea1f
  41ea75:	pop    ecx
  41ea76:	test   bh,bh
  41ea78:	inc    esp
  41ea79:	ret    0xa70e
  41ea7c:	std    
  41ea7d:	clc    
  41ea7e:	ret    
  41ea7f:	js     0x41eaec
  41ea81:	pop    ebp
  41ea82:	pop    esi
  41ea83:	les    eax,FWORD PTR [ecx+0x67]
  41ea86:	daa    
  41ea87:	sub    esi,DWORD PTR [eax+0x5f6f2de1]
  41ea8d:	loope  0x41ea65
  41ea8f:	sbb    bh,BYTE PTR [edx-0x7e]
  41ea92:	mov    dh,0xbe
  41ea94:	or     DWORD PTR [edi-0x51],edi
  41ea97:	push   ebp
  41ea98:	sbb    al,0x9d
  41ea9a:	in     eax,0x45
  41ea9c:	pop    ebp
  41ea9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea9e:	sahf   
  41ea9f:	inc    ebp
  41eaa0:	mov    edx,0xfa896213
  41eaa5:	cmc    
  41eaa6:	fs int3 
  41eaa8:	inc    esi
  41eaa9:	sub    edx,DWORD PTR [eax+ecx*4+0x50cf027a]
  41eab0:	jmp    0xfc37:0xe910f3f8
  41eab7:	push   0x44e3685c
  41eabc:	pop    esp
  41eabd:	cmp    eax,0x6da7bed8
  41eac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac3:	jne    0x41eac4
  41eac5:	std    
  41eac6:	dec    ebx
  41eac7:	or     ah,bl
  41eac9:	add    eax,0xc50e6c06
  41eace:	ins    DWORD PTR es:[edi],dx
  41eacf:	outs   dx,DWORD PTR ds:[esi]
  41ead0:	cmp    DWORD PTR [esi+0x6c],0x75881cf8
  41ead7:	jae    0x41eb3f
  41ead9:	daa    
  41eada:	into   
  41eadb:	std    
  41eadc:	inc    ebx
  41eade:	(bad)  
  41eadf:	or     bl,al
  41eae1:	or     bl,dl
  41eae3:	push   eax
  41eae4:	stos   DWORD PTR es:[edi],eax
  41eae5:	xchg   edi,eax
  41eae6:	ret    
  41eae7:	sahf   
  41eae8:	jle    0x41ea97
  41eaea:	dec    edx
  41eaeb:	jnp    0x41ea94
  41eaed:	jns    0x41eae6
  41eaef:	sub    ecx,ebx
  41eaf1:	bound  eax,QWORD PTR [eax]
  41eaf3:	dec    eax
  41eaf4:	mov    bl,0x0
  41eaf6:	xchg   esp,eax
  41eaf7:	xchg   edx,eax
  41eaf8:	lds    eax,FWORD PTR [esi-0x73]
  41eafb:	int    0xa
  41eafd:	mov    ah,0xc4
  41eaff:	pop    esi
  41eb00:	int3   
  41eb01:	(bad)  
  41eb03:	push   esp
  41eb04:	xchg   esi,eax
  41eb05:	jmp    0x41eb02
  41eb07:	in     al,0x7f
  41eb09:	mov    al,0x7f
  41eb0b:	sar    BYTE PTR [ebp+0x39],1
  41eb0e:	fwait
  41eb0f:	lds    esi,FWORD PTR [edi-0x77]
  41eb12:	jne    0x41ead7
  41eb14:	popf   
  41eb15:	add    bl,dl
  41eb17:	jecxz  0x41ead2
  41eb19:	dec    edi
  41eb1a:	push   ds
  41eb1b:	into   
  41eb1c:	rcl    DWORD PTR [eax-0x30],cl
  41eb1f:	not    BYTE PTR [esi]
  41eb21:	sbb    eax,0x3fd8bb07
  41eb26:	mov    eax,0xaa0ba815
  41eb2b:	jb     0x41eb64
  41eb2d:	xlat   BYTE PTR ds:[ebx]
  41eb2e:	mov    esi,0xea86d7fa
  41eb33:	inc    ebx
  41eb34:	leave  
  41eb35:	dec    esp
  41eb36:	or     eax,0x6cd2b7c7
  41eb3b:	or     ebx,ebx
  41eb3d:	cs neg esi
  41eb40:	call   0x149:0xeaf297d0
  41eb47:	jo     0x41eb5b
  41eb49:	add    BYTE PTR [eax-0x56],dl
  41eb4c:	out    dx,eax
  41eb4d:	adc    ebx,DWORD PTR [eax+0x13]
  41eb50:	sub    eax,0xb2b27249
  41eb55:	mov    eax,ds:0x9c793562
  41eb5a:	sub    BYTE PTR [edx-0x59eee61c],0x1c
  41eb61:	mov    ebp,esi
  41eb63:	(bad)  
  41eb64:	adc    edx,DWORD PTR ds:0x5f6243a3
  41eb6a:	xchg   ebp,eax
  41eb6b:	(bad)  
  41eb6c:	out    0xbd,eax
  41eb6e:	or     DWORD PTR [esi-0x22],ebx
  41eb71:	jbe    0x41ebed
  41eb73:	scas   eax,DWORD PTR es:[edi]
  41eb74:	mov    bl,0x9f
  41eb76:	call   0xb06:0x7d1de3ac
  41eb7d:	out    0x62,eax
  41eb7f:	sbb    edi,DWORD PTR [edi+esi*8+0x2a0018e9]
  41eb86:	xor    BYTE PTR [ebx],ch
  41eb88:	js     0x41ebda
  41eb8a:	loop   0x41ebe0
  41eb8c:	ja     0x41ebeb
  41eb8e:	dec    esp
  41eb8f:	sti    
  41eb90:	call   0x5ee60347
  41eb95:	mov    ecx,0x3e0653e3
  41eb9a:	jge    0x41ebff
  41eb9c:	and    eax,0x3ae53a97
  41eba1:	jne    0x41ebe3
  41eba3:	ret    0xd9d9
  41eba6:	js     0x41eb49
  41eba8:	dec    esp
  41eba9:	mov    ?,esp
  41ebab:	nop
  41ebac:	mov    ds:0x6c404227,eax
  41ebb1:	xor    ebp,DWORD PTR [edi]
  41ebb3:	cmp    bl,al
  41ebb5:	scas   al,BYTE PTR es:[edi]
  41ebb6:	pop    ebx
  41ebb7:	enter  0x5eb7,0x6
  41ebbb:	rcl    ebp,1
  41ebbd:	pop    esp
  41ebbe:	inc    ebp
  41ebbf:	out    dx,al
  41ebc0:	jle    0x41ebc3
  41ebc2:	pop    esp
  41ebc3:	xor    bh,ah
  41ebc5:	pop    ebx
  41ebc6:	cld    
  41ebc7:	jne    0x41eb4d
  41ebc9:	mov    esp,0x8da94aac
  41ebce:	mov    eax,0xde1ee6c3
  41ebd3:	push   ebp
  41ebd4:	push   ebp
  41ebd5:	or     DWORD PTR [edx+eiz*1-0x40],edi
  41ebd9:	pop    ss
  41ebda:	jp     0x41ec41
  41ebdc:	xchg   BYTE PTR [edx],ch
  41ebde:	arpl   WORD PTR [ecx],ax
  41ebe0:	in     eax,0x48
  41ebe2:	test   DWORD PTR [ebp+0x25a0933c],ebx
  41ebe8:	stos   DWORD PTR es:[edi],eax
  41ebe9:	and    eax,DWORD PTR [ebp-0x44]
  41ebec:	ja     0x41ec5d
  41ebee:	add    bh,0xf0
  41ebf1:	push   DWORD PTR [ecx+0x25]
  41ebf4:	mov    ?,WORD PTR [ebp-0x22]
  41ebf7:	test   eax,0x92d0904e
  41ebfc:	in     al,0x43
  41ebfe:	xor    eax,0x69cb13af
  41ec03:	push   ss
  41ec04:	je     0x41ec5f
  41ec06:	call   0x45ed:0x25eb5129
  41ec0d:	push   cs
  41ec0e:	jnp    0x41ebf8
  41ec10:	jp     0x41ebbb
  41ec12:	xchg   edx,eax
  41ec13:	popf   
  41ec14:	cmc    
  41ec15:	stc    
  41ec16:	mov    ecx,0x346a2faf
  41ec1b:	mov    esp,0xef7eb4b4
  41ec20:	inc    edi
  41ec22:	lods   al,BYTE PTR ds:[esi]
  41ec23:	mov    WORD PTR [edx],gs
  41ec25:	(bad)  
  41ec26:	mov    ds:0x5f212c62,eax
  41ec2b:	sub    eax,0x54108624
  41ec30:	out    0xfd,al
  41ec32:	xchg   edi,eax
  41ec33:	mov    al,ds:0x54a1deea
  41ec38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec39:	cld    
  41ec3a:	dec    edi
  41ec3b:	add    DWORD PTR [ecx+0x50],edx
  41ec3e:	fimul  WORD PTR [edx+0x7b8f6ba6]
  41ec44:	(bad)  
  41ec45:	out    0x1d,eax
  41ec47:	ins    BYTE PTR es:[edi],dx
  41ec48:	in     eax,0x7b
  41ec4a:	pop    es
  41ec4b:	cmp    eax,0x4f236dae
  41ec50:	hlt    
  41ec51:	mov    ebp,0xdda93481
  41ec56:	adc    BYTE PTR [eax+0x6a71abd9],0xcb
  41ec5d:	add    BYTE PTR [ebp-0x16],bl
  41ec60:	ret    
  41ec61:	ja     0x41ec5b
  41ec63:	pop    ebx
  41ec64:	jge    0x41ec27
  41ec66:	cld    
  41ec67:	cmp    bl,ch
  41ec69:	and    eax,0x7158397f
  41ec6e:	into   
  41ec6f:	imul   esp,DWORD PTR [esi+eiz*2+0x72],0x588a6d84
  41ec77:	pop    esi
  41ec78:	sub    eax,0x2ba46cf0
  41ec7d:	fiadd  DWORD PTR [ebp-0x7]
  41ec80:	int3   
  41ec81:	add    ecx,esp
  41ec83:	mov    ebp,0x6d1b9c3a
  41ec88:	xor    al,0x22
  41ec8a:	dec    edx
  41ec8b:	lods   eax,DWORD PTR ds:[esi]
  41ec8c:	sahf   
  41ec8d:	inc    ebx
  41ec8e:	nop    ebx
  41ec91:	jecxz  0x41ecdb
  41ec93:	pusha  
  41ec94:	ficomp DWORD PTR [eax]
  41ec96:	imul   esi,DWORD PTR [ebx],0xffffffe4
  41ec99:	dec    ebp
  41ec9a:	or     BYTE PTR [ebx-0x4b],ch
  41ec9d:	mov    ch,0x1e
  41ec9f:	addr16 push esi
  41eca1:	xchg   DWORD PTR ds:[eax-0x417a0320],ebp
  41eca8:	fwait
  41eca9:	and    DWORD PTR [edx-0x72],esi
  41ecac:	xlat   BYTE PTR ds:[ebx]
  41ecad:	jns    0x41ecb7
  41ecaf:	adc    eax,0x4804b91f
  41ecb4:	sahf   
  41ecb5:	fs pop ebp
  41ecb7:	xor    bl,BYTE PTR [ebx-0x38]
  41ecba:	inc    ecx
  41ecbb:	jg     0x41ec8f
  41ecbd:	shr    BYTE PTR [esi-0x5d1754de],1
  41ecc3:	mov    dh,0x58
  41ecc5:	and    BYTE PTR [esi-0x10eb8086],cl
  41eccb:	arpl   WORD PTR [ebp+0x7867532f],sp
  41ecd1:	(bad)  
  41ecd3:	or     al,0x63
  41ecd5:	ret    0x1691
  41ecd8:	and    BYTE PTR [ebp+0x32],dl
  41ecdb:	and    al,BYTE PTR [ecx]
  41ecdd:	and    DWORD PTR [ebx+0x6b],0xba5d86c9
  41ece4:	outs   dx,DWORD PTR ds:[esi]
  41ece5:	fist   DWORD PTR [ebx-0x65c77559]
  41eceb:	mov    al,ds:0x7d1e9937
  41ecf0:	enter  0xc923,0x86
  41ecf4:	lods   eax,DWORD PTR ds:[esi]
  41ecf5:	lea    ebx,[eax]
  41ecf7:	push   ds
  41ecf8:	cmp    BYTE PTR [edx+0x35886e9d],al
  41ecfe:	mov    eax,0x19cceb33
  41ed03:	jmp    0xbcc0:0x420e953a
  41ed0a:	or     bh,0x3c
  41ed0d:	mov    ds:0x30843b95,al
  41ed12:	inc    edx
  41ed13:	ja     0x41ecc7
  41ed15:	add    edi,DWORD PTR [eax]
  41ed17:	or     al,0xf1
  41ed19:	adc    eax,0x96928d50
  41ed1e:	aam    0xcb
  41ed20:	out    dx,al
  41ed21:	jb     0x41ed6c
  41ed23:	xlat   BYTE PTR ds:[ebx]
  41ed24:	das    
  41ed25:	sub    al,0x4b
  41ed27:	cli    
  41ed28:	int    0x97
  41ed2a:	jbe    0x41ed12
  41ed2c:	leave  
  41ed2d:	jb     0x41eda1
  41ed2f:	leave  
  41ed30:	retf   
  41ed31:	rcl    esi,cl
  41ed33:	jmp    0x1e435223
  41ed38:	dec    edx
  41ed39:	push   es
  41ed3a:	out    0x9a,al
  41ed3c:	mov    esp,0xebb991f2
  41ed41:	stos   DWORD PTR es:[edi],eax
  41ed42:	shr    DWORD PTR [edi+0x2b],1
  41ed45:	es mov edx,0xec726ee3
  41ed4b:	div    DWORD PTR [ecx-0x2abf81ba]
  41ed51:	dec    eax
  41ed52:	aad    0xf7
  41ed54:	call   0x745a:0xf821eabb
  41ed5b:	test   DWORD PTR [ebx],0x83af039b
  41ed61:	and    dh,BYTE PTR gs:[esi+ebx*8-0x40111398]
  41ed69:	lods   al,BYTE PTR ds:[esi]
  41ed6a:	test   al,0xe9
  41ed6c:	xchg   esp,eax
  41ed6d:	(bad)  
  41ed6e:	test   DWORD PTR [edx],0x4b314d4c
  41ed74:	fidivr WORD PTR [ecx+0x2e]
  41ed77:	mov    al,0x4d
  41ed79:	push   ebp
  41ed7a:	mov    ds,WORD PTR [edx+0x29]
  41ed7d:	or     eax,0x4d6953ac
  41ed82:	ret    0xfd65
  41ed85:	sbb    ecx,0x89c9ed91
  41ed8b:	in     eax,dx
  41ed8c:	icebp  
  41ed8d:	dec    esp
  41ed8e:	mov    al,0x2f
  41ed90:	add    DWORD PTR [edi-0x2059ff68],ecx
  41ed96:	out    dx,al
  41ed97:	shr    DWORD PTR [edx],cl
  41ed99:	pop    ebx
  41ed9a:	fwait
  41ed9b:	fwait
  41ed9c:	inc    dx
  41ed9e:	mov    ch,0x62
  41eda0:	retf   0x99e8
  41eda3:	in     al,dx
  41eda4:	xor    BYTE PTR [edi],bl
  41eda6:	dec    edx
  41eda7:	inc    eax
  41eda8:	xor    eax,0xcb64ff70
  41edae:	adc    ax,0xdb26
  41edb2:	push   esi
  41edb3:	stc    
  41edb4:	pop    edi
  41edb5:	pop    edx
  41edb6:	dec    esp
  41edb7:	cmc    
  41edb8:	cmp    dl,BYTE PTR [edx]
  41edba:	gs and eax,0x54675192
  41edc0:	call   0x4e3a60f
  41edc5:	jp     0x41ede1
  41edc7:	sub    eax,0x57d28d1d
  41edcc:	cmp    dh,BYTE PTR [edi]
  41edce:	adc    bl,BYTE PTR [ebx-0x1b]
  41edd1:	jp     0x41ee3e
  41edd3:	mov    cl,0xf6
  41edd5:	inc    eax
  41edd6:	outs   dx,DWORD PTR ds:[esi]
  41edd7:	call   0xb363:0xdf796323
  41edde:	xlat   BYTE PTR ds:[ebx]
  41eddf:	pop    eax
  41ede0:	idiv   DWORD PTR [ebp-0x510afdf0]
  41ede6:	pop    es
  41ede7:	popf   
  41ede8:	adc    esi,esi
  41edea:	mov    edi,0x2fdf0b0e
  41edef:	sub    BYTE PTR [ebp-0x23],dl
  41edf2:	enter  0xb8e6,0xd1
  41edf6:	xor    al,0xae
  41edf8:	in     eax,0xa0
  41edfa:	fild   WORD PTR [eax]
  41edfc:	test   DWORD PTR [edi],edx
  41edfe:	enter  0xa781,0xb4
  41ee02:	jnp    0x41ee25
  41ee04:	in     eax,0x72
  41ee06:	std    
  41ee07:	xor    eax,0xada34bae
  41ee0c:	call   0x3a42:0xc7e0637d
  41ee13:	fild   DWORD PTR [ecx+0x45]
  41ee16:	(bad)  
  41ee17:	cld    
  41ee18:	push   ds
  41ee19:	mov    bl,0x60
  41ee1b:	(bad)  
  41ee1c:	jmp    FWORD PTR [esi+0x2cabf5bf]
  41ee22:	sub    ch,BYTE PTR [esp+ecx*2+0x70]
  41ee26:	jmp    0x41ee77
  41ee28:	call   0x7d962deb
  41ee2d:	xchg   esp,eax
  41ee2e:	push   ds
  41ee2f:	add    BYTE PTR [ebx],dl
  41ee31:	dec    edi
  41ee32:	ret    
  41ee33:	mov    esi,0x66346520
  41ee38:	fimul  WORD PTR [ebp-0x3c]
  41ee3b:	jecxz  0x41ee2c
  41ee3d:	push   ds
  41ee3e:	sti    
  41ee3f:	test   BYTE PTR [edi-0x6d79f99b],bh
  41ee45:	stos   BYTE PTR es:[edi],al
  41ee46:	push   ecx
  41ee47:	dec    esp
  41ee48:	sub    DWORD PTR [esi+0x16e2a585],0x95a831eb
  41ee52:	call   0x666143df
  41ee57:	dec    eax
  41ee58:	nop
  41ee59:	xor    esi,DWORD PTR [ebx]
  41ee5b:	stos   BYTE PTR es:[edi],al
  41ee5c:	and    DWORD PTR [ebx+0x2353158c],ecx
  41ee62:	popf   
  41ee63:	lods   eax,DWORD PTR ds:[esi]
  41ee64:	les    eax,FWORD PTR [ecx+0x6b]
  41ee67:	inc    ebx
  41ee68:	adc    al,0x5b
  41ee6a:	mov    ebp,0xccfd0fa9
  41ee6f:	sbb    al,0x82
  41ee71:	test   eax,0x62b0ed6f
  41ee76:	rol    DWORD PTR ds:0x859d9d87,1
  41ee7c:	sbb    cl,BYTE PTR [ecx]
  41ee7e:	mov    eax,ds:0x3e4cc106
  41ee83:	mov    cl,0xb8
  41ee85:	and    al,0xc3
  41ee87:	adc    edx,DWORD PTR [ebx-0x1b]
  41ee8a:	adc    al,0x80
  41ee8c:	ins    BYTE PTR es:[edi],dx
  41ee8d:	cdq    
  41ee8e:	pop    ebx
  41ee8f:	(bad)  
  41ee90:	clc    
  41ee91:	inc    esp
  41ee92:	fimul  WORD PTR [ebp-0x20ad8a79]
  41ee98:	aam    0x7e
  41ee9a:	dec    esi
  41ee9b:	xor    eax,eax
  41ee9d:	adc    bh,BYTE PTR [edx+0x7f]
  41eea0:	es in  eax,dx
  41eea2:	jbe    0x41ee29
  41eea4:	pop    ss
  41eea5:	inc    edi
  41eea6:	dec    ebx
  41eea7:	daa    
  41eea8:	jecxz  0x41ef1c
  41eeaa:	push   DWORD PTR [esi]
  41eeac:	mov    dh,0x37
  41eeae:	sbb    bh,BYTE PTR [ebx-0x6b17ab20]
  41eeb4:	jne    0x41eed9
  41eeb6:	jns    0x41ee59
  41eeb8:	push   es
  41eeb9:	leave  
  41eeba:	and    BYTE PTR [edx+edi*8],dh
  41eebd:	xor    BYTE PTR [edx],bh
  41eebf:	call   0x162dcf1
  41eec4:	loopne 0x41ee96
  41eec6:	dec    edi
  41eec7:	mov    ss,ebp
  41eec9:	jnp    0x41ee97
  41eecb:	js     0x41eea4
  41eecd:	inc    ebx
  41eece:	jns    0x41ee76
  41eed0:	imul   edi,DWORD PTR [eax-0x44],0x337298da
  41eed7:	lahf   
  41eed8:	arpl   WORD PTR [edx+eax*8+0x2b],ax
  41eedc:	mov    bh,0x9e
  41eede:	aad    0xf9
  41eee0:	div    DWORD PTR [ebp-0x72502484]
  41eee6:	pop    eax
  41eee7:	shl    DWORD PTR [edx+0x36],cl
  41eeea:	and    DWORD PTR [ecx-0xd62f9a3],eax
  41eef0:	push   ds
  41eef1:	stc    
  41eef2:	pop    eax
  41eef3:	ds loope 0x41eef3
  41eef6:	mov    ch,0xcf
  41eef8:	rol    ebp,0xc
  41eefb:	in     al,dx
  41eefc:	in     eax,dx
  41eefd:	inc    edi
  41eefe:	mov    eax,ds:0x493ee370
  41ef03:	mov    bh,0xa7
  41ef05:	or     esi,esi
  41ef07:	inc    eax
  41ef08:	pop    edx
  41ef09:	out    dx,eax
  41ef0a:	pop    esi
  41ef0b:	sub    al,0x27
  41ef0d:	rcr    esi,cl
  41ef0f:	les    eax,FWORD PTR fs:[esi+0x17]
  41ef13:	inc    esi
  41ef14:	mov    al,ds:0x5b556393
  41ef19:	and    ebp,DWORD PTR [edx]
  41ef1b:	call   0x8cee:0x41c05ad2
  41ef22:	test   cl,bh
  41ef24:	jo     0x41ef9a
  41ef26:	ja     0x41eec4
  41ef28:	outs   dx,DWORD PTR ds:[esi]
  41ef29:	gs hlt 
  41ef2b:	sub    eax,0x7508e712
  41ef30:	stos   BYTE PTR es:[edi],al
  41ef31:	dec    ecx
  41ef32:	in     al,0x26
  41ef34:	inc    ebp
  41ef35:	mov    ebp,0x5f001b5a
  41ef3a:	int3   
  41ef3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef3c:	jns    0x41ef03
  41ef3e:	inc    esi
  41ef3f:	rcl    esp,0xed
  41ef42:	mov    BYTE PTR [eax-0x53669d6e],0x2c
  41ef49:	dec    ecx
  41ef4a:	xchg   DWORD PTR [esi],esp
  41ef4c:	sub    al,0xa9
  41ef4e:	lods   eax,DWORD PTR ds:[esi]
  41ef4f:	fmul   QWORD PTR [esi-0x66a8ca5]
  41ef55:	cs jbe 0x41efc5
  41ef58:	ror    ch,0x83
  41ef5b:	inc    esp
  41ef5c:	mov    WORD PTR [ecx+0x351c0765],?
  41ef62:	int    0x33
  41ef64:	pusha  
  41ef65:	jno    0x41efb9
  41ef67:	pop    esp
  41ef68:	pop    ss
  41ef69:	or     DWORD PTR [ecx+0x97037a6],esp
  41ef6f:	fist   WORD PTR [edx]
  41ef72:	jnp    0x41ef84
  41ef74:	push   esi
  41ef75:	out    0xb2,al
  41ef77:	mov    BYTE PTR [esi],bl
  41ef79:	lds    edx,FWORD PTR [eax]
  41ef7b:	adc    DWORD PTR [eax],0x7231a552
  41ef81:	neg    cl
  41ef83:	push   eax
  41ef84:	inc    esp
  41ef85:	fist   DWORD PTR [esi]
  41ef87:	(bad)  
  41ef88:	stos   BYTE PTR es:[edi],al
  41ef89:	push   edx
  41ef8a:	mov    eax,0x17cb8b15
  41ef8f:	jno    0x41ef72
  41ef91:	pushf  
  41ef92:	test   BYTE PTR [ebx+0x29],0x27
  41ef96:	inc    edi
  41ef97:	fistp  WORD PTR [edx+0x62140480]
  41ef9d:	cmp    ch,BYTE PTR [edx]
  41ef9f:	out    dx,eax
  41efa0:	inc    eax
  41efa1:	mov    al,cl
  41efa3:	cmp    ecx,ebp
  41efa5:	add    eax,DWORD PTR [edi-0x5816708a]
  41efab:	mov    bh,0x39
  41efad:	adc    DWORD PTR [ecx+0x2f6f7158],ebx
  41efb3:	cmc    
  41efb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efb5:	das    
  41efb6:	loope  0x41efe0
  41efb8:	sbb    ch,BYTE PTR [edx]
  41efba:	mov    ebx,0x7356a4a6
  41efbf:	sbb    al,0xcf
  41efc1:	enter  0xcc43,0xe0
  41efc5:	jecxz  0x41f002
  41efc7:	test   DWORD PTR ds:0x865cb85f,ebp
  41efcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efce:	arpl   WORD PTR [ecx+edi*2+0x1c10f0d5],di
  41efd5:	lock push edx
  41efd7:	or     BYTE PTR [esi+0x40c80e7c],bl
  41efdd:	mov    edx,0x7f232e04
  41efe2:	push   ecx
  41efe3:	xchg   al,dh
  41efe5:	xor    eax,0xd3d73d1f
  41efea:	lods   al,BYTE PTR ds:[esi]
  41efeb:	lock push ebp
  41efed:	inc    eax
  41efee:	lahf   
  41efef:	jg     0x41efab
  41eff1:	imul   DWORD PTR [ebx+esi*2+0x9]
  41eff5:	inc    edi
  41eff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eff7:	(bad)  
  41eff8:	es sbb eax,0x3a020cff
  41effe:	add    ah,0x9
  41f001:	in     al,0xb7
  41f003:	push   0xfffffffd
  41f005:	add    al,0x33
  41f007:	das    
  41f008:	mov    edi,DWORD PTR [ecx+0x5a26f86]
  41f00e:	imul   edi,edx,0x6ce0df4d
  41f014:	sbb    al,0x89
  41f016:	in     al,0xa3
  41f018:	gs ffreep st(5)
  41f01b:	fdivr  QWORD PTR [ebp-0x411bd180]
  41f021:	xor    DWORD PTR [esp+edx*8],0x2f034074
  41f028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f029:	cmc    
  41f02a:	ffreep st(3)
  41f02c:	inc    ecx
  41f02d:	sub    al,0xb9
  41f02f:	sbb    al,0xaa
  41f031:	aad    0x91
  41f033:	scas   eax,DWORD PTR es:[edi]
  41f034:	dec    esi
  41f035:	add    DWORD PTR [ebp-0x6672d9ec],esi
  41f03b:	ret    
  41f03c:	mov    eax,ds:0x8fb4524b
  41f041:	adc    DWORD PTR [ecx-0x7bd97937],esi
  41f047:	cmc    
  41f048:	or     dl,BYTE PTR [esi]
  41f04a:	stos   DWORD PTR es:[edi],eax
  41f04b:	ficom  DWORD PTR [ebx+eax*4-0x7f609032]
  41f052:	pop    edx
  41f053:	retf   0x6289
  41f056:	shl    BYTE PTR [ebx-0x28],cl
  41f059:	add    dh,BYTE PTR [ecx]
  41f05b:	out    0x60,eax
  41f05d:	dec    ebp
  41f05e:	call   0xf59bdc7d
  41f063:	push   ebx
  41f064:	inc    esi
  41f065:	push   esp
  41f066:	pop    esi
  41f067:	loop   0x41f056
  41f069:	mov    edx,0x53d1a47a
  41f06e:	pop    ecx
  41f06f:	aas    
  41f070:	ret    
  41f071:	scas   al,BYTE PTR es:[edi]
  41f072:	aaa    
  41f073:	lods   al,BYTE PTR ds:[esi]
  41f074:	cwde   
  41f075:	jl     0x41f0d6
  41f077:	pop    ebp
  41f078:	cmp    eax,0x45fd354d
  41f07d:	(bad)  
  41f07e:	shl    BYTE PTR [eiz*2+0x62ec7a57],0x73
  41f086:	jp     0x41f034
  41f088:	daa    
  41f089:	push   ebp
  41f08a:	mov    edx,0xe6ff2f8d
  41f08f:	sub    ah,BYTE PTR [ebp-0x3a7d264c]
  41f095:	mov    esi,0x88b5dda1
  41f09a:	inc    edx
  41f09b:	loopne 0x41f044
  41f09d:	and    DWORD PTR [ebx+0x76c995de],0xe73f0f3c
  41f0a7:	shl    BYTE PTR [edi+0x40],1
  41f0aa:	fs ja  0x41f092
  41f0ad:	or     DWORD PTR [esi+ebp*1-0x3d],esp
  41f0b1:	jl     0x41f069
  41f0b3:	inc    ebx
  41f0b4:	jns    0x41f039
  41f0b6:	in     eax,0x7c
  41f0b8:	xchg   ebx,eax
  41f0b9:	imul   eax,DWORD PTR gs:[ecx-0x2d12fa0],0x360aa997
  41f0c4:	adc    al,0xea
  41f0c6:	adc    esi,DWORD PTR [eax+0x5f933787]
  41f0cc:	scas   al,BYTE PTR es:[edi]
  41f0cd:	xchg   esp,esi
  41f0cf:	sbb    BYTE PTR [ebx+eiz*4+0x3e40cf17],dl
  41f0d6:	out    0x54,eax
  41f0d8:	aaa    
  41f0d9:	int3   
  41f0da:	clc    
  41f0db:	in     al,dx
  41f0dc:	dec    edi
  41f0dd:	nop
  41f0de:	fwait
  41f0df:	xchg   ebx,eax
  41f0e0:	(bad)  
  41f0e1:	rcl    ah,1
  41f0e3:	outs   dx,DWORD PTR ds:[esi]
  41f0e4:	mov    ds,WORD PTR [edx]
  41f0e6:	in     eax,dx
  41f0e7:	(bad)  
  41f0e8:	aad    0x9a
  41f0ea:	fs jmp 0x41f0eb
  41f0ed:	xor    BYTE PTR [edx],0xec
  41f0f0:	pop    ebp
  41f0f1:	loop   0x41f097
  41f0f3:	stc    
  41f0f4:	and    bh,BYTE PTR [edx-0xc]
  41f0f7:	fisubr DWORD PTR [edi+ebp*4-0x7]
  41f0fb:	add    al,0xfd
  41f0fd:	push   esp
  41f0fe:	sub    bh,BYTE PTR [ebp+0x2bafc9a]
  41f104:	pop    ecx
  41f105:	mov    al,0x12
  41f107:	xor    BYTE PTR [esi+0x303df333],bl
  41f10d:	mov    cl,0xd0
  41f10f:	stos   DWORD PTR es:[edi],eax
  41f110:	adc    eax,0xa65d1a3f
  41f115:	(bad)  
  41f116:	cmp    BYTE PTR [esi+0x62],ch
  41f119:	retf   
  41f11a:	adc    DWORD PTR [eax],0xebbe0a8a
  41f120:	(bad)  
  41f122:	cmp    BYTE PTR [ebp-0x38],0xec
  41f126:	pop    edx
  41f127:	retf   0xa164
  41f12a:	inc    esp
  41f12b:	popf   
  41f12c:	ds add eax,0x9608e0bf
  41f132:	dec    ebx
  41f133:	clc    
  41f134:	jle    0x41f0e1
  41f136:	xor    eax,0xfd8c4fef
  41f13b:	jecxz  0x41f146
  41f13d:	aaa    
  41f13e:	sub    BYTE PTR [ebx-0x1367c4e7],dh
  41f144:	std    
  41f145:	hlt    
  41f146:	loop   0x41f14c
  41f148:	sub    BYTE PTR [ebp+0x42f64743],dh
  41f14e:	xor    cl,BYTE PTR [edi]
  41f150:	test   bl,dl
  41f152:	stos   BYTE PTR es:[edi],al
  41f153:	mov    ds:0x38a6b29,al
  41f158:	mov    ebp,ecx
  41f15a:	jno    0x41f163
  41f15c:	hlt    
  41f15d:	lea    ecx,[ebp-0x33]
  41f160:	mov    eax,DWORD PTR [ebx+eiz*2-0x75]
  41f164:	shl    ebp,0x56
  41f167:	push   esi
  41f168:	enter  0x6704,0x72
  41f16c:	push   edx
  41f16d:	es or  eax,0x6cc54835
  41f173:	sbb    eax,0xda16813
  41f178:	aad    0xcd
  41f17a:	out    dx,al
  41f17b:	jne    0x41f1ef
  41f17d:	hlt    
  41f17e:	repnz push esi
  41f180:	enter  0x3346,0x57
  41f184:	icebp  
  41f185:	daa    
  41f186:	icebp  
  41f187:	add    eax,0x1755d88
  41f18c:	mov    bh,0xa6
  41f18e:	fwait
  41f18f:	sub    esi,ebx
  41f191:	icebp  
  41f192:	popf   
  41f193:	jle    0x41f1c3
  41f195:	dec    esp
  41f196:	test   DWORD PTR [edx],ecx
  41f198:	sub    ecx,DWORD PTR [edi]
  41f19a:	add    ebp,DWORD PTR ds:0x6f5edd88
  41f1a0:	sbb    eax,0x3f61fe00
  41f1a5:	sub    BYTE PTR [edi],ah
  41f1a7:	jnp    0x41f1cd
  41f1a9:	jp     0x41f175
  41f1ab:	add    BYTE PTR [ecx],dl
  41f1ad:	in     al,dx
  41f1ae:	jo     0x41f150
  41f1b0:	push   ebx
  41f1b1:	ss and eax,0x1769aedf
  41f1b7:	repnz pop es
  41f1b9:	mov    ?,WORD PTR [edx-0x15]
  41f1bc:	jmp    0x2793:0xf34a90e8
  41f1c3:	test   BYTE PTR [eax+0x6087e0d5],ah
  41f1c9:	retf   
  41f1ca:	fs clc 
  41f1cc:	xor    BYTE PTR gs:[eax],cl
  41f1cf:	out    dx,al
  41f1d0:	and    eax,DWORD PTR [eax-0x66]
  41f1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1d4:	add    eax,0xd0b79881
  41f1d9:	mov    ah,0xf6
  41f1db:	mov    edi,0x45e7bb3a
  41f1e0:	(bad)  
  41f1e1:	imul   eax,ecx,0x8f398a6c
  41f1e7:	pop    es
  41f1e8:	sub    eax,0xaae1141e
  41f1ed:	and    DWORD PTR [edi+eiz*2],0x746d8aa7
  41f1f4:	dec    ecx
  41f1f5:	cld    
  41f1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1f7:	out    dx,al
  41f1f8:	add    DWORD PTR [edx-0x56],edx
  41f1fb:	or     eax,ebx
  41f1fd:	xchg   edx,eax
  41f1fe:	test   DWORD PTR [edi],ebx
  41f200:	imul   BYTE PTR [edx]
  41f202:	shl    BYTE PTR [eax-0x4b],0xc4
  41f206:	mov    esi,0x5faea3be
  41f20b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41f20d:	add    eax,0xc8489d31
  41f212:	rol    BYTE PTR [edi-0x5576dbee],0x15
  41f219:	jecxz  0x41f213
  41f21b:	mov    edi,0x4fe1fde5
  41f220:	mov    al,ds:0x456ee4c7
  41f225:	dec    esi
  41f226:	sub    al,0x69
  41f228:	inc    edx
  41f229:	pop    edi
  41f22a:	or     BYTE PTR [edx+eax*8],cl
  41f22d:	aam    0x33
  41f22f:	xchg   BYTE PTR [esi],ah
  41f231:	jmp    0x6ceef6a1
  41f236:	leave  
  41f237:	or     ah,BYTE PTR [eax]
  41f239:	rcr    edi,1
  41f23b:	add    dl,ch
  41f23d:	jno    0x41f299
  41f23f:	add    cl,dh
  41f241:	mov    al,0xf
  41f243:	cld    
  41f244:	into   
  41f245:	mov    eax,0x1dacbc4a
  41f24a:	daa    
  41f24b:	push   eax
  41f24c:	repnz (bad) 
  41f24e:	lahf   
  41f24f:	mov    ds:0xe05ba8e3,al
  41f254:	dec    edx
  41f255:	out    dx,eax
  41f256:	in     eax,0x35
  41f258:	jmp    0xb1e33551
  41f25d:	je     0x41f2a0
  41f25f:	cwde   
  41f260:	pop    ds
  41f261:	mov    ecx,0x8a8787fa
  41f266:	aad    0x9e
  41f268:	adc    eax,0xfed8ff63
  41f26d:	cmp    eax,DWORD PTR [ebx-0x1b]
  41f270:	pop    ds
  41f271:	imul   esi,DWORD PTR [eax+0x2f],0x54
  41f275:	retf   0xb22f
  41f278:	fadd   QWORD PTR [edx-0xb]
  41f27b:	ss ja  0x41f2bf
  41f27e:	push   ebp
  41f27f:	in     eax,0xfe
  41f281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f282:	cmp    al,0xba
  41f284:	pop    ecx
  41f285:	fbld   TBYTE PTR [ecx+0x1]
  41f288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f289:	in     al,0xd
  41f28b:	test   DWORD PTR [ecx],edi
  41f28d:	daa    
  41f28e:	jmp    0x41f235
  41f290:	std    
  41f291:	cwde   
  41f292:	aad    0x16
  41f294:	popf   
  41f295:	and    dh,BYTE PTR [edi-0x61]
  41f298:	cdq    
  41f299:	hlt    
  41f29a:	jnp    0x41f277
  41f29c:	sub    BYTE PTR [edx-0x6214fde0],0x89
  41f2a3:	adc    ah,BYTE PTR [ebp+0x7f8ddb8b]
  41f2a9:	bound  edx,QWORD PTR [eax+0x45949893]
  41f2af:	dec    ebx
  41f2b0:	pop    ecx
  41f2b1:	sbb    eax,0x51e50949
  41f2b6:	xor    cl,BYTE PTR [ebp+0x279340e6]
  41f2bc:	sti    
  41f2bd:	int    0xb3
  41f2bf:	jmp    0x1930f8bb
  41f2c4:	jbe    0x41f249
  41f2c6:	and    bh,BYTE PTR [edi-0x48]
  41f2c9:	sbb    eax,0xacd91c99
  41f2ce:	adc    DWORD PTR [esi+0x8],0x820ed9ac
  41f2d5:	push   edx
  41f2d6:	mov    ebx,0x39a60a97
  41f2db:	pop    edi
  41f2dc:	pop    ss
  41f2dd:	daa    
  41f2de:	cld    
  41f2df:	xchg   esi,esp
  41f2e1:	jmp    0x5ab2063a
  41f2e6:	cmp    DWORD PTR [edi+eiz*2-0x4f],edi
  41f2ea:	mov    BYTE PTR [ebx+0x45],bh
  41f2ed:	fld    DWORD PTR [ebx+0x3822453e]
  41f2f3:	repnz sub edx,DWORD PTR [esi-0x5794e26a]
  41f2fa:	inc    esp
  41f2fb:	push   0xfffffff0
  41f2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2fe:	jg     0x41f2a8
  41f300:	xchg   edx,eax
  41f301:	sti    
  41f302:	pop    ebp
  41f303:	cmp    al,0xd2
  41f305:	ja     0x41f2f3
  41f307:	test   DWORD PTR [edx],esp
  41f309:	xor    eax,0x61a928ef
  41f30e:	enter  0xebf9,0x51
  41f312:	mov    ebp,0xc7837cc1
  41f317:	cdq    
  41f318:	popa   
  41f319:	xchg   esi,eax
  41f31a:	enter  0xc63a,0xa3
  41f31e:	dec    ebp
  41f31f:	iret   
  41f320:	sbb    al,0xd1
  41f322:	sbb    eax,0x1bf0f3b4
  41f327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f328:	pop    ds
  41f329:	add    al,0x0
  41f32b:	cmp    ch,dl
  41f32d:	repz cld 
  41f32f:	sbb    edi,DWORD PTR [ebp-0x44d49a55]
  41f335:	fisttp DWORD PTR [edx-0x101edb10]
  41f33b:	or     eax,DWORD PTR [esi+0x53]
  41f33e:	cmp    al,0x9d
  41f340:	inc    edi
  41f341:	jl     0x41f39d
  41f343:	fsub   QWORD PTR [esi-0x51]
  41f346:	xchg   dl,ch
  41f348:	jmp    0x5996:0x3f147e06
  41f34f:	cld    
  41f350:	test   al,0x44
  41f352:	push   edx
  41f353:	mov    ecx,0x6c7ba172
  41f358:	mov    dl,0x60
  41f35a:	(bad)
  41f35e:	aam    0xd8
  41f360:	dec    ecx
  41f361:	in     eax,0x7b
  41f363:	hlt    
  41f364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f365:	ret    0x68d0
  41f368:	clc    
  41f369:	sub    BYTE PTR fs:[eax+0x39],cl
  41f36d:	sti    
  41f36e:	add    BYTE PTR [ecx+0x59dcb15b],ch
  41f374:	data16 into 
  41f376:	xor    edx,0xd2f01951
  41f37c:	inc    ebp
  41f37d:	fimul  WORD PTR [eax+0x63b10721]
  41f383:	xchg   DWORD PTR [edx],edx
  41f385:	push   ebp
  41f386:	or     BYTE PTR [eax],dl
  41f388:	mov    eax,0x34035332
  41f38d:	xchg   ecx,eax
  41f38e:	je     0x41f3a8
  41f390:	mov    ch,0xc0
  41f392:	stos   BYTE PTR es:[edi],al
  41f393:	inc    ebx
  41f394:	pop    ss
  41f395:	das    
  41f396:	xor    al,0x14
  41f398:	jae    0x41f3d0
  41f39a:	sub    ah,BYTE PTR [eax]
  41f39c:	push   esp
  41f39d:	pop    ss
  41f39e:	push   eax
  41f39f:	adc    al,0x5e
  41f3a1:	xchg   edi,eax
  41f3a2:	ficomp WORD PTR [ebp+0x6b]
  41f3a5:	jae    0x41f3fc
  41f3a7:	sahf   
  41f3a8:	or     al,0xd2
  41f3aa:	push   es
  41f3ab:	dec    ebp
  41f3ac:	pop    edx
  41f3ad:	pop    edx
  41f3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3af:	xchg   BYTE PTR [ecx-0x4f],dh
  41f3b2:	add    eax,0xc3847451
  41f3b7:	call   DWORD PTR [ecx+0x6ef164d5]
  41f3bd:	xor    eax,0x3b070110
  41f3c2:	mov    BYTE PTR [ebx+0x14],0x7f
  41f3c6:	jne    0x41f364
  41f3c8:	int3   
  41f3c9:	daa    
  41f3ca:	or     DWORD PTR [edi],ebx
  41f3cc:	ret    0xe78e
  41f3cf:	xor    al,0x43
  41f3d1:	test   eax,0xb5279872
  41f3d6:	mov    bh,0x11
  41f3d8:	inc    esi
  41f3d9:	stos   DWORD PTR es:[edi],eax
  41f3da:	loopne 0x41f42e
  41f3dc:	adc    esi,DWORD PTR [ecx-0x257cd5f9]
  41f3e2:	clc    
  41f3e3:	xor    al,0xc6
  41f3e5:	and    DWORD PTR [eax],0x4b
  41f3e8:	mov    bh,0x15
  41f3ea:	mov    DWORD PTR [edi+edx*4+0x73],eax
  41f3ee:	int    0x90
  41f3f0:	rcr    BYTE PTR [eax-0x6a900fb3],1
  41f3f6:	sub    eax,0x497e8c50
  41f3fb:	pusha  
  41f3fc:	int3   
  41f3fd:	dec    ebx
  41f3fe:	in     eax,0x4f
  41f400:	sub    BYTE PTR [edi+ebp*8-0x5c],dl
  41f404:	loop   0x41f3d7
  41f406:	dec    ebx
  41f407:	push   ebx
  41f408:	push   ecx
  41f409:	popa   
  41f40a:	sub    al,0x40
  41f40c:	mov    BYTE PTR [eax],ch
  41f40e:	push   edi
  41f40f:	and    DWORD PTR [esi],esp
  41f411:	lock popa 
  41f413:	sub    ecx,esp
  41f415:	dec    ecx
  41f416:	push   ebx
  41f417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f418:	cs xchg edi,eax
  41f41a:	or     ecx,DWORD PTR ds:0xa3041ae4
  41f420:	nop
  41f421:	cmp    DWORD PTR [edi-0xc5730ed],edi
  41f427:	adc    BYTE PTR [ebp-0x70],ch
  41f42a:	rcl    ax,cl
  41f42d:	jno    0x41f434
  41f42f:	push   esp
  41f430:	ss es ins DWORD PTR es:[edi],dx
  41f433:	(bad)  
  41f434:	adc    ch,BYTE PTR [ebx-0x72c56a2f]
  41f43a:	xchg   al,al
  41f43c:	cs sbb dl,al
  41f43f:	cli    
  41f440:	rcr    BYTE PTR [ecx+ebx*4+0x2e],0xf
  41f445:	mov    cs:0x33ee0a3d,al
  41f44b:	fstp   DWORD PTR ds:0xb5ddf773
  41f451:	mov    ebp,es
  41f453:	(bad)  
  41f454:	jns    0x41f3fc
  41f456:	xor    bh,al
  41f458:	push   es
  41f459:	push   edi
  41f45a:	jae    0x41f464
  41f45c:	fild   QWORD PTR [ebx+0x72]
  41f45f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f460:	test   ebp,0x189c3aca
  41f466:	idiv   DWORD PTR [edx-0x4a6921b3]
  41f46c:	ret    0x726f
  41f46f:	jbe    0x41f404
  41f471:	mov    BYTE PTR [ecx],al
  41f473:	mov    bl,0x57
  41f475:	mov    edi,0xc63a16b6
  41f47a:	cdq    
  41f47b:	imul   edx,DWORD PTR [edx-0x21a84894],0xe18c80a0
  41f485:	sahf   
  41f486:	cmp    BYTE PTR [ebx],ch
  41f488:	jne    0x41f47e
  41f48a:	xor    dh,cl
  41f48c:	cmc    
  41f48d:	les    edi,FWORD PTR [eax+0x34]
  41f490:	pop    ecx
  41f491:	sub    al,0x67
  41f493:	into   
  41f494:	sub    al,BYTE PTR [esi-0x2e0dd746]
  41f49a:	jmp    0x6188:0xf035aee8
  41f4a1:	inc    edi
  41f4a2:	cmp    ebx,ecx
  41f4a4:	mov    ecx,0xd1360607
  41f4a9:	retf   0xf3d
  41f4ac:	cmp    eax,0x66440aac
  41f4b1:	cmc    
  41f4b2:	shr    DWORD PTR [esi+ebx*8],1
  41f4b5:	fs jno 0x41f44a
  41f4b8:	fdiv   st,st(4)
  41f4ba:	xor    eax,0x9183ee60
  41f4bf:	or     DWORD PTR [edx+0x51],esi
  41f4c2:	push   ss
  41f4c3:	pop    ds
  41f4c4:	repnz lds esp,FWORD PTR [edx-0x57]
  41f4c8:	and    bh,BYTE PTR [ebp+0x7f0752e3]
  41f4ce:	sbb    al,0x31
  41f4d0:	shl    BYTE PTR [edi],0x44
  41f4d3:	xchg   edx,eax
  41f4d4:	xchg   ebp,eax
  41f4d5:	or     BYTE PTR [ebx+0x7c],bh
  41f4d8:	fcom   st(1)
  41f4da:	mov    esi,0x5ee71cf4
  41f4df:	cwde   
  41f4e0:	je     0x41f522
  41f4e2:	lahf   
  41f4e3:	mov    al,0xc5
  41f4e5:	xor    edx,esp
  41f4e7:	xor    BYTE PTR ds:0x390b5b2e,bh
  41f4ed:	mov    esp,0x16c9ef7b
  41f4f2:	xchg   ebp,eax
  41f4f3:	ret    
  41f4f4:	xchg   ebp,eax
  41f4f5:	xchg   ebx,eax
  41f4f6:	xchg   edx,eax
  41f4f7:	test   eax,0xa7e99a8
  41f4fc:	push   ebp
  41f4fd:	(bad)  
  41f4fe:	dec    edi
  41f4ff:	(bad)  
  41f500:	and    ch,BYTE PTR [ebx+0x6d]
  41f503:	js     0x41f545
  41f505:	mov    al,ds:0x571016fd
  41f50a:	mov    ebx,0xdf8c071c
  41f50f:	xor    edx,edi
  41f511:	pop    edi
  41f512:	pop    ds
  41f513:	inc    ebx
  41f514:	ror    DWORD PTR [esi+0xa7296b4],cl
  41f51a:	adc    esp,DWORD PTR [edx]
  41f51c:	popf   
  41f51d:	stos   BYTE PTR es:[edi],al
  41f51e:	call   0x7246:0x235457e5
  41f525:	dec    ebx
  41f526:	inc    ebx
  41f527:	sub    eax,DWORD PTR [eax+0x18451685]
  41f52d:	jl     0x41f59b
  41f52f:	cmp    al,0xe3
  41f531:	jo     0x41f575
  41f533:	xchg   ecx,eax
  41f534:	jp     0x41f4eb
  41f536:	dec    ebx
  41f537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f538:	sub    edx,DWORD PTR [eax+0x351b745]
  41f53e:	cwde   
  41f53f:	hlt    
  41f540:	or     BYTE PTR [ebp-0x67],dh
  41f543:	add    BYTE PTR [edx-0x4],dh
  41f546:	cmc    
  41f547:	and    DWORD PTR [edx+edx*2+0x12427cd9],esi
  41f54e:	mov    ds:0xd303ad90,al
  41f553:	cli    
  41f554:	or     al,0x1e
  41f556:	int3   
  41f557:	pop    edx
  41f558:	arpl   cx,cx
  41f55a:	mov    al,0x66
  41f55c:	xor    al,BYTE PTR [edx-0x2aa271b9]
  41f562:	xchg   BYTE PTR [eax+0x4b94fd38],bl
  41f568:	lea    ebp,[esi+0x19927b47]
  41f56e:	xchg   ecx,eax
  41f56f:	sbb    al,0x83
  41f571:	push   0xffffffa1
  41f573:	sahf   
  41f574:	cmp    eax,0xeb2f5cc7
  41f579:	(bad)  
  41f57a:	fcomp  QWORD PTR [ebx]
  41f57c:	and    al,0x3f
  41f57e:	repnz mov edi,0xca99f08
  41f584:	push   ebp
  41f585:	xchg   ecx,eax
  41f586:	add    BYTE PTR [ebp+0x2265ec19],0x7b
  41f58d:	jmp    0xa26a:0x2c20d14c
  41f594:	sub    cl,dh
  41f596:	sub    eax,0x1c9a43d8
  41f59b:	inc    edx
  41f59c:	test   eax,0x3f7fce21
  41f5a1:	adc    al,BYTE PTR [ecx+eiz*8+0x6f]
  41f5a5:	cmp    al,0xfe
  41f5a7:	ins    DWORD PTR es:[edi],dx
  41f5a8:	test   eax,0x8d6f52eb
  41f5ad:	jmp    0x724e:0x6715bf15
  41f5b4:	xlat   BYTE PTR ds:[ebx]
  41f5b5:	push   eax
  41f5b6:	fsub   st,st(4)
  41f5b8:	mov    WORD PTR [eax],ds
  41f5ba:	inc    edi
  41f5bb:	ds retf 0xcd67
  41f5bf:	cdq    
  41f5c0:	fidiv  WORD PTR [edi+0x37f3c437]
  41f5c6:	test   BYTE PTR [edx],dl
  41f5c8:	call   0xf85b346f
  41f5cd:	imul   esp,ebp,0xc6fb36d
  41f5d3:	stos   BYTE PTR es:[edi],al
  41f5d4:	shr    BYTE PTR [ecx+ecx*1],cl
  41f5d7:	dec    ecx
  41f5d8:	add    BYTE PTR [esi+0x4816e197],bh
  41f5de:	inc    edi
  41f5df:	jl     0x41f5f3
  41f5e1:	xor    al,0x77
  41f5e3:	ins    BYTE PTR es:[edi],dx
  41f5e4:	and    eax,0x42f3d970
  41f5e9:	aam    0x52
  41f5eb:	icebp  
  41f5ec:	mov    edi,0xcc506514
  41f5f1:	jb     0x41f65c
  41f5f3:	ins    DWORD PTR es:[edi],dx
  41f5f4:	xchg   edi,eax
  41f5f5:	jne    0x41f5c0
  41f5f7:	pop    esi
  41f5f8:	or     ch,BYTE PTR [edx-0x5e258014]
  41f5fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ff:	hlt    
  41f600:	jnp    0x41f5d5
  41f602:	adc    BYTE PTR ds:0x994b5e8f,al
  41f608:	mov    eax,ds:0x9aab9ad2
  41f60d:	std    
  41f60e:	jmp    0x6e0247d7
  41f613:	out    dx,al
  41f614:	or     cl,cl
  41f616:	(bad)  
  41f617:	and    al,0x48
  41f619:	jb     0x41f65f
  41f61b:	jae    0x41f5d1
  41f61d:	xor    ch,BYTE PTR [esi+0xce9c18f]
  41f623:	jle    0x41f5db
  41f625:	fst    st(4)
  41f627:	jmp    0xffb:0xf72328ec
  41f62e:	mov    dl,ah
  41f630:	adc    eax,0xaa11262c
  41f635:	push   edx
  41f637:	enter  0xdeb7,0x76
  41f63b:	xchg   edx,eax
  41f63c:	cmp    al,0x39
  41f63e:	cwde   
  41f63f:	int3   
  41f640:	push   0x62138d4b
  41f645:	and    BYTE PTR [ecx+0x13],bh
  41f648:	push   eax
  41f649:	push   ebp
  41f64a:	rol    DWORD PTR [eax+0x54a12f58],0x41
  41f651:	bound  ebp,QWORD PTR [ecx+0x64]
  41f654:	out    dx,eax
  41f655:	fisub  DWORD PTR [ebx+0x5e7e750a]
  41f65b:	inc    ebp
  41f65c:	jae    0x41f67e
  41f65e:	add    eax,0xc2b77159
  41f663:	inc    esi
  41f664:	loop   0x41f609
  41f666:	dec    ecx
  41f667:	push   ebp
  41f668:	ret    
  41f669:	add    eax,0x41157bcf
  41f66e:	loop   0x41f63e
  41f670:	dec    ecx
  41f671:	jmp    0x59479820
  41f676:	pop    ebx
  41f678:	xor    DWORD PTR [edi-0x1d8b0964],edi
  41f67e:	or     eax,DWORD PTR [esi-0x1d]
  41f681:	xchg   edx,eax
  41f682:	mov    dh,0x26
  41f684:	xchg   ecx,eax
  41f685:	sbb    esi,0x72824d9c
  41f68b:	mov    DWORD PTR [ebp+0x7d],ebp
  41f68e:	pop    edx
  41f68f:	mov    bh,0x3
  41f691:	mov    bh,0x41
  41f693:	dec    edi
  41f694:	sbb    BYTE PTR [edx],al
  41f696:	mov    ah,0x12
  41f698:	inc    edi
  41f699:	jl     0x41f625
  41f69b:	mov    al,BYTE PTR [ecx+edi*1+0x13]
  41f69f:	add    eax,0xe8d7556e
  41f6a4:	push   ecx
  41f6a5:	ror    DWORD PTR [eax+0x19],cl
  41f6a8:	dec    edx
  41f6a9:	outs   dx,DWORD PTR ds:[esi]
  41f6aa:	test   al,0x48
  41f6ac:	mov    esp,0xb12aa180
  41f6b1:	clc    
  41f6b2:	ret    
  41f6b3:	add    ebx,edx
  41f6b5:	cmp    BYTE PTR [edi+0x13b670d2],dl
  41f6bb:	cmp    esi,DWORD PTR [edi]
  41f6bd:	push   es
  41f6be:	and    ebx,ebp
  41f6c0:	xchg   edx,eax
  41f6c1:	inc    esp
  41f6c2:	lahf   
  41f6c3:	push   ecx
  41f6c4:	lods   al,BYTE PTR ds:[esi]
  41f6c5:	stos   BYTE PTR es:[edi],al
  41f6c6:	mov    eax,eax
  41f6c8:	imul   esi,DWORD PTR [edx],0x7a
  41f6cb:	mov    cl,0x9a
  41f6cd:	bound  ebp,QWORD PTR [ebx]
  41f6cf:	cmp    al,0x4d
  41f6d1:	imul   edx,edx,0x15228655
  41f6d7:	push   ds
  41f6d8:	das    
  41f6d9:	jbe    0x41f6e3
  41f6db:	xchg   ebx,eax
  41f6dc:	push   cs
  41f6dd:	add    eax,eax
  41f6df:	push   ds
  41f6e0:	ret    0x57ba
  41f6e3:	dec    edi
  41f6e4:	push   edx
  41f6e5:	push   ds
  41f6e6:	xor    edi,DWORD PTR [eax]
  41f6e8:	(bad)  
  41f6ea:	dec    edx
  41f6eb:	pop    edi
  41f6ec:	fild   DWORD PTR [ecx+0x6a]
  41f6ef:	addr16 inc ecx
  41f6f1:	xor    al,0xb1
  41f6f3:	sub    al,0x71
  41f6f5:	xchg   edi,eax
  41f6f6:	repnz out 0x8e,eax
  41f6f9:	std    
  41f6fa:	mov    WORD PTR [ebx+0x491187d],cs
  41f700:	in     al,dx
  41f701:	xchg   esp,esi
  41f703:	enter  0x4672,0x14
  41f707:	inc    edx
  41f708:	jb     0x41f70c
  41f70a:	(bad)  [ebx]
  41f70c:	mov    ecx,0xd7a9e987
  41f711:	out    dx,eax
  41f712:	repz dec esi
  41f714:	mov    ds:0xdb1bdae8,al
  41f719:	test   DWORD PTR [ebx+0x18],edi
  41f71c:	xor    edx,0x77
  41f71f:	loope  0x41f753
  41f721:	inc    edi
  41f722:	dec    ecx
  41f723:	pop    eax
  41f724:	pop    esi
  41f725:	hlt    
  41f726:	xor    eax,0x65a78c0c
  41f72b:	por    mm0,QWORD PTR [ebp+0x5c]
  41f72f:	adc    ecx,DWORD PTR [edx]
  41f731:	add    BYTE PTR [edx-0x242b2e4e],dh
  41f737:	dec    esp
  41f738:	mov    dl,0x6a
  41f73a:	sar    bh,0xee
  41f73d:	lock jle 0x41f729
  41f740:	xlat   BYTE PTR ds:[ebx]
  41f741:	sub    DWORD PTR [ecx+0x6b],edx
  41f744:	jnp    0x41f78c
  41f746:	loopne 0x41f75c
  41f748:	push   ds
  41f749:	sub    DWORD PTR [esi-0x10],ebp
  41f74c:	jns    0x41f788
  41f74e:	push   ecx
  41f74f:	push   es
  41f750:	push   cs
  41f751:	adc    al,0xfd
  41f753:	pop    edi
  41f754:	in     al,dx
  41f755:	in     al,0xf0
  41f757:	mov    WORD PTR [ebx],?
  41f759:	out    dx,al
  41f75a:	dec    esi
  41f75b:	dec    ebx
  41f75c:	mov    edi,0xef488e36
  41f761:	hlt    
  41f762:	and    al,0x6f
  41f764:	outs   dx,BYTE PTR ds:[esi]
  41f765:	das    
  41f766:	jle    0x41f73e
  41f768:	mov    dl,0x7f
  41f76a:	jge    0x41f76a
  41f76c:	mov    bh,0x40
  41f76e:	sub    esp,DWORD PTR [edi]
  41f770:	mov    ds:0x1a32f4fc,eax
  41f775:	in     eax,0x84
  41f777:	lds    edi,FWORD PTR [ecx]
  41f779:	pop    ebx
  41f77a:	(bad)  
  41f77b:	ds inc eax
  41f77d:	(bad)
  41f780:	repz dec ebx
  41f782:	dec    esp
  41f783:	shr    DWORD PTR [ecx-0x60d934d],0x86
  41f78a:	test   eax,0x7b14400c
  41f78f:	jmp    0xd40f:0x2dae7edb
  41f796:	in     eax,0x77
  41f798:	and    DWORD PTR [ebp+0x345116b8],edx
  41f79e:	loop   0x41f7ab
  41f7a0:	cmp    eax,0x1b385b85
  41f7a5:	push   edi
  41f7a6:	sar    DWORD PTR [ebx+ebp*4],cl
  41f7a9:	test   BYTE PTR [ecx],ah
  41f7ab:	popa   
  41f7ac:	scas   eax,DWORD PTR es:[edi]
  41f7ad:	dec    ebp
  41f7ae:	jnp    0x41f779
  41f7b0:	mov    edi,0x9dcdcdac
  41f7b5:	pop    DWORD PTR [edi]
  41f7b7:	clc    
  41f7b8:	xor    BYTE PTR [ebx-0x72fca8f3],al
  41f7be:	or     DWORD PTR ds:0xeed2a64e,0x9cc4d44b
  41f7c8:	jmp    0x32ed:0x653faa06
  41f7cf:	out    0xbe,al
  41f7d1:	out    0x3c,al
  41f7d3:	ret    0x90b
  41f7d6:	stos   BYTE PTR es:[edi],al
  41f7d7:	aas    
  41f7d8:	outs   dx,BYTE PTR ds:[esi]
  41f7d9:	add    al,BYTE PTR [edi+0xd]
  41f7dc:	jns    0x41f82a
  41f7de:	sahf   
  41f7df:	cmp    bh,BYTE PTR [ecx-0x6f]
  41f7e2:	dec    edi
  41f7e3:	push   eax
  41f7e4:	pop    ebp
  41f7e5:	mov    WORD PTR [edx],?
  41f7e7:	popa   
  41f7e8:	inc    ebx
  41f7e9:	call   0xc48a:0x3d75a0c3
  41f7f0:	dec    esi
  41f7f1:	inc    ebx
  41f7f2:	xchg   esp,eax
  41f7f3:	and    al,BYTE PTR [eax+eiz*8+0x6f]
  41f7f7:	les    ebp,FWORD PTR [eax+0x4c]
  41f7fa:	mov    al,0x93
  41f7fc:	lahf   
  41f7fd:	iret   
  41f7fe:	sub    dh,cl
  41f800:	add    ebx,esp
  41f802:	pop    ds
  41f803:	pop    eax
  41f804:	shl    BYTE PTR cs:[edi],0x7a
  41f808:	out    dx,al
  41f809:	pusha  
  41f80a:	pop    ss
  41f80b:	arpl   bp,si
  41f80d:	push   ebp
  41f80e:	mov    cl,0xa
  41f810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f811:	xor    esp,ebx
  41f813:	es gs (bad) 
  41f816:	icebp  
  41f817:	jecxz  0x41f870
  41f819:	mov    ebp,0xd8b05c37
  41f81e:	and    BYTE PTR [edx],0x9d
  41f821:	popf   
  41f822:	add    al,0x19
  41f824:	pop    ebx
  41f825:	xchg   BYTE PTR [esi+ebx*1+0x23],al
  41f829:	cli    
  41f82a:	ins    BYTE PTR es:[edi],dx
  41f82b:	inc    edi
  41f82c:	leave  
  41f82d:	retf   
  41f82e:	and    eax,0x8d47e913
  41f833:	mov    bl,0x1
  41f835:	pop    ebp
  41f836:	sbb    ebx,esp
  41f838:	(bad)  
  41f839:	adc    al,0xd1
  41f83b:	pop    es
  41f83c:	sub    BYTE PTR [edi],bh
  41f83e:	add    eax,0x74c913fd
  41f843:	imul   DWORD PTR [edx]
  41f845:	jmp    DWORD PTR [edi+0x64]
  41f848:	js     0x41f801
  41f84a:	cli    
  41f84b:	xchg   ebp,eax
  41f84c:	inc    ebp
  41f84d:	cld    
  41f84e:	mov    cl,0x7d
  41f850:	and    al,0xa9
  41f852:	int    0xbb
  41f854:	loop   0x41f8d3
  41f856:	imul   esp,edi,0xffffffb4
  41f859:	jge    0x41f844
  41f85b:	push   eax
  41f85c:	adc    al,0x91
  41f85e:	mov    esi,0x3e8e6e08
  41f863:	dec    eax
  41f864:	not    cl
  41f866:	leave  
  41f867:	or     ebx,DWORD PTR [edx-0x46]
  41f86a:	into   
  41f86b:	mov    ds:0xf9486b33,eax
  41f870:	outs   dx,DWORD PTR ds:[esi]
  41f871:	or     bh,BYTE PTR [eax]
  41f873:	mov    dh,0x6e
  41f875:	ja     0x41f7fe
  41f877:	sar    BYTE PTR [ebx],0x8c
  41f87a:	mov    edx,0xa0c51735
  41f87f:	not    ecx
  41f881:	ds mov edx,0x2bdab91c
  41f887:	rcl    al,cl
  41f889:	lods   al,BYTE PTR ds:[esi]
  41f88a:	jmp    0x3e0e211e
  41f88f:	lds    esp,FWORD PTR [ebx-0x9ec1627]
  41f895:	dec    esp
  41f896:	add    al,0xe2
  41f898:	rcr    BYTE PTR [eax+0xd55dcdf],cl
  41f89e:	gs popf 
  41f8a0:	cmp    al,0x4d
  41f8a2:	in     eax,dx
  41f8a3:	lods   al,BYTE PTR ds:[esi]
  41f8a4:	add    cl,BYTE PTR [esi+0x5543188e]
  41f8aa:	out    dx,eax
  41f8ab:	mov    BYTE PTR [edi-0x6c],dl
  41f8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8af:	cmp    al,0x44
  41f8b1:	ficom  DWORD PTR [edi-0x3eab977d]
  41f8b7:	fsubr  st,st(0)
  41f8b9:	or     al,0xdc
  41f8bb:	sbb    DWORD PTR [edx+edx*1-0x4ab495f0],ecx
  41f8c2:	aam    0x5b
  41f8c4:	dec    esi
  41f8c5:	mov    dl,0x1d
  41f8c7:	lds    esi,FWORD PTR [ebx+0x5890c9ff]
  41f8cd:	cmp    DWORD PTR [edx],0x7d
  41f8d0:	xor    esi,eax
  41f8d2:	and    bl,BYTE PTR [edx-0x6cba9b8f]
  41f8d8:	stc    
  41f8d9:	mov    WORD PTR es:[ecx],cs
  41f8dc:	repz xor eax,0x9097bdea
  41f8e2:	inc    DWORD PTR [esp+edx*2+0x66aafa61]
  41f8e9:	pop    ds
  41f8ea:	mov    dl,0xbd
  41f8ec:	cmp    al,0xc5
  41f8ee:	out    0xd2,al
  41f8f0:	xor    eax,DWORD PTR [edx-0x4dc5b392]
  41f8f6:	imul   eax,DWORD PTR [edx+0x4bb26f33],0x987044ec
  41f900:	fild   WORD PTR [edi+0x3f]
  41f903:	lea    esi,[edi-0xc514d51]
  41f909:	out    0xcb,al
  41f90b:	sub    BYTE PTR [ebx],0x63
  41f90e:	cmp    dh,dh
  41f910:	cmp    eax,DWORD PTR [ebx-0x63]
  41f913:	push   edx
  41f914:	adc    DWORD PTR [edi+0xf],ebp
  41f917:	jecxz  0x41f986
  41f919:	iret   
  41f91a:	add    ecx,ebp
  41f91c:	mov    ebx,DWORD PTR [ebp+eax*2+0x1772c2d0]
  41f923:	mov    ds:0x806bccce,eax
  41f928:	ja     0x41f8d0
  41f92a:	push   eax
  41f92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f92c:	fnsave [esi]
  41f92e:	cmpps  xmm7,xmm4,0x4e
  41f932:	xchg   BYTE PTR [edi],bl
  41f934:	xchg   edi,eax
  41f935:	mov    ds:0x1a8f8430,eax
  41f93a:	lods   al,BYTE PTR ds:[esi]
  41f93b:	punpckldq mm6,DWORD PTR [ebp+ecx*4+0x6b]
  41f940:	shl    DWORD PTR [ecx+0x7c],cl
  41f943:	outs   dx,BYTE PTR ds:[esi]
  41f944:	mov    dh,0x11
  41f946:	or     ebx,ecx
  41f948:	mov    ?,WORD PTR [eax-0x4]
  41f94b:	sub    DWORD PTR [esi-0x5c50b88a],0x64ad6148
  41f955:	sar    BYTE PTR [esi-0x2c0132e],0x34
  41f95c:	dec    esi
  41f95d:	pop    eax
  41f95e:	add    BYTE PTR [esi-0x770f97d1],ch
  41f964:	push   edi
  41f965:	into   
  41f966:	rcr    BYTE PTR [ebp-0x14],0x67
  41f96a:	dec    ebx
  41f96b:	imul   esi,DWORD PTR [edi-0x45],0xffffff9c
  41f96f:	mul    ecx
  41f971:	jmp    0x116cc
  41f976:	ins    DWORD PTR es:[edi],dx
  41f977:	mov    ebx,0x266e37a3
  41f97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f97d:	or     edx,DWORD PTR [ebp-0x63a4c448]
  41f983:	cli    
  41f984:	ja     0x41f9f5
  41f986:	pop    eax
  41f987:	xor    eax,0x6bfec657
  41f98c:	xchg   ebx,eax
  41f98d:	test   DWORD PTR [ebx+0x38add4be],0xc25e83fa
  41f997:	mov    esi,0x8b19f15
  41f99c:	seta   BYTE PTR [esp+eax*1-0x48]
  41f9a1:	sbb    eax,0xbcee521
  41f9a6:	les    esp,FWORD PTR [edi-0x63]
  41f9a9:	cmp    BYTE PTR [eax],0x2b
  41f9ac:	daa    
  41f9ad:	mov    ds:0xeca03b21,eax
  41f9b2:	test   BYTE PTR [edx+0x2645f316],al
  41f9b8:	pushf  
  41f9b9:	cmc    
  41f9ba:	inc    ebp
  41f9bb:	dec    ebp
  41f9bc:	sub    DWORD PTR [ebx],edi
  41f9be:	loopne 0x41f967
  41f9c0:	xor    ebp,DWORD PTR [ebp-0x54]
  41f9c3:	jmp    0xee66af54
  41f9c8:	(bad)  
  41f9c9:	adc    eax,esp
  41f9cb:	rcl    DWORD PTR [edi+0x2f],cl
  41f9ce:	sbb    esi,DWORD PTR [esi-0x6d77fb05]
  41f9d4:	and    ecx,DWORD PTR [ebp+0x59]
  41f9d7:	jg     0x41fa38
  41f9d9:	adc    bl,BYTE PTR [edi+ebp*8+0x1323546f]
  41f9e0:	sub    ah,bl
  41f9e2:	pushf  
  41f9e3:	cs aaa 
  41f9e5:	pop    edx
  41f9e6:	fsubr  st,st(1)
  41f9e8:	mov    ds,WORD PTR [ecx+0xc948aa]
  41f9ee:	imul   esi,DWORD PTR [ebx],0x17
  41f9f1:	clc    
  41f9f2:	mov    ch,0x78
  41f9f4:	add    DWORD PTR [ecx+0x2c],edx
  41f9f7:	push   esp
  41f9f8:	aam    0xad
  41f9fa:	retf   
  41f9fb:	mov    ecx,0xec31befc
  41fa00:	pop    ebp
  41fa01:	out    dx,al
  41fa02:	dec    ebp
  41fa03:	shl    DWORD PTR [edi],0xd9
  41fa06:	or     DWORD PTR [edi+ecx*2+0x2d6f1f07],0x5765da52
  41fa11:	mov    ds:0xb31d8bd0,al
  41fa16:	fxam   
  41fa18:	adc    dh,ah
  41fa1a:	or     eax,edi
  41fa1c:	out    dx,al
  41fa1d:	pop    esi
  41fa1e:	mov    ebp,0x25761e56
  41fa23:	es jnp 0x41fa0d
  41fa26:	xor    al,BYTE PTR [ecx+ebx*1+0x6991113b]
  41fa2d:	jo     0x41fa08
  41fa2f:	push   esp
  41fa30:	daa    
  41fa31:	jbe    0x41faa2
  41fa33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa34:	aad    0x75
  41fa36:	jbe    0x41fa07
  41fa38:	aas    
  41fa39:	or     ch,bl
  41fa3b:	fsub   QWORD PTR [ecx-0x15]
  41fa3e:	sbb    esi,ecx
  41fa40:	pusha  
  41fa41:	mov    dl,0xcf
  41fa43:	xor    eax,0xf13d6494
  41fa48:	jnp    0x41fa98
  41fa4a:	pop    edi
  41fa4b:	cmp    al,0x93
  41fa4d:	jmp    0x3a13fbcc
  41fa52:	pushw  ss
  41fa54:	add    al,0x5a
  41fa56:	loope  0x41fa7b
  41fa58:	jmp    0xcc2:0xf6cbc6d9
  41fa5f:	xor    eax,0x29e6657d
  41fa64:	test   BYTE PTR [ecx+ebx*2],ch
  41fa67:	mov    dh,0xa3
  41fa69:	out    dx,eax
  41fa6a:	sahf   
  41fa6b:	or     ecx,ebx
  41fa6d:	sub    ecx,ecx
  41fa6f:	repnz in eax,0xd7
  41fa72:	ret    
  41fa73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa74:	jecxz  0x41faba
  41fa76:	inc    eax
  41fa77:	cmp    al,0x3b
  41fa79:	lea    edi,[edx+ebx*8+0x4ccd8499]
  41fa80:	push   edx
  41fa81:	pop    eax
  41fa82:	stc    
  41fa83:	pop    edx
  41fa84:	mov    bh,0x79
  41fa86:	int    0xb9
  41fa88:	aam    0xd5
  41fa8a:	pop    edx
  41fa8b:	inc    esi
  41fa8c:	sub    BYTE PTR [ebx-0x629256f4],bl
  41fa92:	sahf   
  41fa93:	pushf  
  41fa94:	pop    esp
  41fa95:	pop    ecx
  41fa96:	jmp    esi
  41fa98:	jecxz  0x41fa99
  41fa9a:	aam    0xe3
  41fa9c:	in     al,dx
  41fa9d:	and    BYTE PTR [ebx],dh
  41fa9f:	mov    ecx,0xd1003a66
  41faa4:	and    BYTE PTR [ebx+0x7b42cbfe],bl
  41faaa:	mov    eax,0xc637c04c
  41faaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fab0:	jne    0x41facd
  41fab2:	test   BYTE PTR [ecx+0x5fe6db89],dl
  41fab8:	jns    0x41fb2b
  41faba:	arpl   WORD PTR [edx],di
  41fabc:	sub    eax,0xf8518695
  41fac1:	aad    0xe
  41fac3:	inc    ecx
  41fac4:	add    DWORD PTR [edi+0xecf0496],esi
  41faca:	and    edi,DWORD PTR [eax-0x7f]
  41facd:	sbb    edx,DWORD PTR [edi-0x3d]
  41fad0:	mov    bh,0xa1
  41fad2:	neg    BYTE PTR [edi+eax*8+0x35]
  41fad6:	and    dh,bl
  41fad8:	bound  edi,QWORD PTR [esi+0x63]
  41fadb:	cmc    
  41fadc:	jp     0x41fa8f
  41fade:	mov    ah,0x6d
  41fae0:	fnstenv [edx+0x6bbe3261]
  41fae6:	inc    ebx
  41fae7:	je     0x41faa4
  41fae9:	pushf  
  41faea:	adc    al,0xd3
  41faec:	in     al,0x36
  41faee:	arpl   WORD PTR [edx-0xf77b0a4],di
  41faf4:	sbb    esp,DWORD PTR [ebx+ecx*4-0x9ff70cd]
  41fafb:	and    dl,ch
  41fafd:	out    0xf6,al
  41faff:	std    
  41fb00:	ds pop edi
  41fb02:	pop    edi
  41fb03:	mov    ebp,0xa924972a
  41fb08:	pop    ecx
  41fb09:	pop    ds
  41fb0a:	mov    ds,ebx
  41fb0c:	push   ebp
  41fb0d:	mov    esi,0xe5d99669
  41fb12:	jo     0x41fb06
  41fb14:	out    0xb5,al
  41fb16:	or     eax,0xa4f4a398
  41fb1b:	in     al,0x8b
  41fb1d:	imul   esi,DWORD PTR [edi],0xfffffff9
  41fb20:	fstp   TBYTE PTR [eax+0x5c]
  41fb23:	pop    esi
  41fb24:	shl    BYTE PTR [ebx],0x92
  41fb27:	jne    0x41fac3
  41fb29:	add    al,0xd8
  41fb2b:	pop    ss
  41fb2c:	clc    
  41fb2d:	sbb    dh,BYTE PTR [edi+0x73]
  41fb30:	pop    ecx
  41fb31:	adc    ebx,DWORD PTR [ebx]
  41fb33:	mov    es:0x49bd40bd,eax
  41fb39:	or     DWORD PTR [ecx],0x70
  41fb3c:	enter  0x215e,0x33
  41fb40:	mov    ecx,0x82d13cea
  41fb45:	push   ecx
  41fb46:	xchg   ebp,eax
  41fb47:	sbb    al,0x8d
  41fb49:	test   al,0x65
  41fb4b:	jmp    0x611b675f
  41fb50:	jl     0x41faf8
  41fb52:	(bad)  
  41fb53:	iret   
  41fb54:	call   0x5f7f:0x2a7a0c26
  41fb5b:	add    DWORD PTR [ecx-0x43],0x1277ca80
  41fb62:	jns    0x41fb03
  41fb64:	popa   
  41fb65:	push   ebp
  41fb66:	adc    BYTE PTR [edx-0x228d1963],dl
  41fb6c:	adc    DWORD PTR [edx+ecx*4+0x67197ab9],esi
  41fb73:	stos   BYTE PTR es:[edi],al
  41fb74:	stc    
  41fb75:	adc    al,0x72
  41fb77:	sbb    edx,DWORD PTR [ebp+ecx*2+0x53ba12a8]
  41fb7e:	cdq    
  41fb7f:	dec    esi
  41fb80:	ss dec edi
  41fb82:	jl     0x41fbda
  41fb84:	inc    ebx
  41fb85:	jb     0x41fb5a
  41fb87:	out    dx,eax
  41fb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb89:	popf   
  41fb8a:	jmp    0x41fba6
  41fb8c:	mov    eax,ds:0x605af8b
  41fb91:	outs   dx,BYTE PTR ds:[esi]
  41fb92:	dec    ecx
  41fb93:	fwait
  41fb94:	or     dh,0x75
  41fb97:	std    
  41fb98:	(bad)  
  41fb99:	rcr    BYTE PTR [ebp+0x23],1
  41fb9c:	into   
  41fb9d:	mov    eax,0xf317ac85
  41fba2:	or     eax,DWORD PTR [eax-0x58]
  41fba5:	int    0x9e
  41fba7:	rol    DWORD PTR [ebx],1
  41fba9:	pusha  
  41fbaa:	rol    cl,cl
  41fbac:	mul    DWORD PTR [edx-0x71]
  41fbaf:	jne    0x41fbe1
  41fbb1:	std    
  41fbb2:	or     BYTE PTR [esi],0x75
  41fbb5:	fsub   QWORD PTR [ebx-0x76]
  41fbb8:	stc    
  41fbb9:	or     dh,BYTE PTR [edi]
  41fbbb:	pop    esp
  41fbbc:	fisub  DWORD PTR [eax+0x55]
  41fbbf:	mov    edx,ebp
  41fbc1:	mov    ebx,0xa0ebc049
  41fbc6:	imul   DWORD PTR [ecx-0x4e]
  41fbc9:	inc    edx
  41fbca:	cli    
  41fbcb:	out    dx,eax
  41fbcc:	xor    al,cl
  41fbce:	leave  
  41fbcf:	cmp    edx,esi
  41fbd1:	dec    edx
  41fbd2:	add    DWORD PTR [ecx+0x70],0x5b
  41fbd6:	push   edx
  41fbd7:	adc    eax,0xf5ee5935
  41fbdc:	das    
  41fbdd:	sbb    edi,DWORD PTR [ecx-0x27]
  41fbe0:	sub    DWORD PTR [esi+0x7d],ebp
  41fbe3:	dec    esp
  41fbe4:	je     0x41fbe5
  41fbe6:	sar    DWORD PTR [ebx-0x4200a5c9],1
  41fbec:	xchg   ecx,eax
  41fbed:	add    BYTE PTR [ebx],0x5d
  41fbf0:	addr16 into 
  41fbf2:	pop    ebp
  41fbf3:	mov    bl,0x7
  41fbf5:	xor    DWORD PTR [edx],ebp
  41fbf7:	push   ss
  41fbf8:	jmp    0x44ce:0xc3be433c
  41fbff:	dec    esi
  41fc00:	xchg   edi,eax
  41fc01:	mov    ebx,0xfc2b912e
  41fc06:	inc    edx
  41fc07:	dec    ebp
  41fc08:	(bad)  
  41fc09:	cli    
  41fc0a:	sub    ecx,esp
  41fc0c:	jge    0x41fc79
  41fc0e:	addr16 push cs
  41fc10:	into   
  41fc11:	lock (bad) 
  41fc13:	jp     0x41fc43
  41fc15:	xchg   ebp,eax
  41fc16:	sbb    dl,BYTE PTR [ecx-0x60]
  41fc19:	jbe    0x41fc55
  41fc1b:	jno    0x41fc24
  41fc1d:	sub    dl,ch
  41fc1f:	addr16 sahf 
  41fc21:	loope  0x41fc79
  41fc23:	push   0x829593a5
  41fc28:	call   0x28d5:0xa8f37474
  41fc2f:	retf   
  41fc30:	inc    ebp
  41fc31:	xor    eax,0xda6844f6
  41fc36:	jp     0x41fc7f
  41fc38:	cmp    al,0xa3
  41fc3a:	aas    
  41fc3b:	xor    eax,0xc04e6b16
  41fc40:	and    al,0x7c
  41fc42:	xor    al,0x48
  41fc44:	jle    0x41fc20
  41fc46:	rol    DWORD PTR [esi+0x5a],1
  41fc49:	add    DWORD PTR [ebp-0xa],ecx
  41fc4c:	aam    0x30
  41fc4e:	push   edx
  41fc4f:	loopne 0x41fbd2
  41fc51:	mov    ecx,edx
  41fc53:	(bad)
  41fc56:	xor    dl,dl
  41fc58:	pop    ebp
  41fc59:	aam    0x64
  41fc5b:	mov    al,ah
  41fc5d:	mov    esp,edx
  41fc5f:	icebp  
  41fc60:	std    
  41fc61:	fistp  DWORD PTR [esi]
  41fc63:	sub    esi,ebp
  41fc65:	adc    DWORD PTR [eax+ebx*8+0x3b],ecx
  41fc69:	mov    edx,0x88eccbea
  41fc6e:	nop
  41fc6f:	cmp    bl,BYTE PTR [edi-0x39]
  41fc72:	xor    dh,BYTE PTR [edx+0x1900efe0]
  41fc78:	xor    eax,0x12a9a205
  41fc7d:	push   ss
  41fc7e:	scas   al,BYTE PTR es:[edi]
  41fc7f:	scas   eax,DWORD PTR es:[edi]
  41fc80:	ds pop ss
  41fc82:	add    eax,0x624fca3d
  41fc87:	fiadd  WORD PTR [eax+0x67]
  41fc8a:	int    0x57
  41fc8c:	and    ch,BYTE PTR [esi]
  41fc8e:	add    BYTE PTR [ecx+0x3313cad],al
  41fc94:	repz inc edi
  41fc96:	mov    ds:0x406d6db4,eax
  41fc9b:	xchg   edi,eax
  41fc9c:	fwait
  41fc9d:	out    0x39,al
  41fc9f:	imul   dx,WORD PTR [ebx],0x8
  41fca3:	adc    eax,0xc9302a0b
  41fca8:	or     BYTE PTR [ecx],cl
  41fcaa:	jecxz  0x41fc81
  41fcac:	push   es
  41fcad:	and    al,0xca
  41fcaf:	iret   
  41fcb0:	out    dx,eax
  41fcb1:	gs stos DWORD PTR es:[edi],eax
  41fcb3:	jnp    0x41fc46
  41fcb5:	and    ebx,ebp
  41fcb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcb8:	test   BYTE PTR [ecx-0x11dab46c],bl
  41fcbe:	(bad)  
  41fcbf:	imul   ebp,DWORD PTR [edi],0xa88d0146
  41fcc5:	jo     0x41fccb
  41fcc7:	xor    al,0xa0
  41fcc9:	xchg   BYTE PTR [ebx+0x3c],bl
  41fccc:	inc    edx
  41fccd:	(bad)  
  41fcce:	mov    eax,eax
  41fcd0:	dec    edi
  41fcd1:	cmp    BYTE PTR [eax],al
  41fcd3:	rcl    DWORD PTR gs:[edi],0x5c
  41fcd7:	adc    esi,eax
  41fcd9:	jge    0x41fcb7
  41fcdb:	mov    ds:0xbdad9094,eax
  41fce0:	sub    esi,edx
  41fce2:	add    ch,BYTE PTR [esi+0xa]
  41fce5:	jp     0x41fcb8
  41fce7:	outs   dx,BYTE PTR ds:[esi]
  41fce8:	adc    DWORD PTR [esi-0x7a],esp
  41fceb:	pop    edi
  41fcec:	push   ds
  41fced:	adc    DWORD PTR [ebx-0x19],ebp
  41fcf0:	push   ds
  41fcf1:	xchg   edi,eax
  41fcf2:	in     al,0x65
  41fcf4:	loope  0x41fceb
  41fcf6:	icebp  
  41fcf7:	push   ds
  41fcf8:	aam    0x65
  41fcfa:	pop    edi
  41fcfb:	push   edi
  41fcfc:	mov    bh,0x77
  41fcfe:	clc    
  41fcff:	push   ds
  41fd00:	sti    
  41fd01:	and    DWORD PTR ds:0x93f757d8,ebx
  41fd07:	ret    
  41fd08:	jo     0x41fd73
  41fd0a:	add    DWORD PTR [esi+ebx*1-0x2c],0x83c16a33
  41fd12:	cmp    ebx,edi
  41fd14:	or     BYTE PTR [ebp+0x1d],dl
  41fd17:	js     0x41fd3c
  41fd19:	rcl    eax,0x55
  41fd1c:	jns    0x41fd2d
  41fd1e:	xchg   ebp,eax
  41fd1f:	mov    edi,DWORD PTR [edi+0xb]
  41fd22:	xor    dl,BYTE PTR [ebx+ebx*2]
  41fd25:	cmp    bl,bl
  41fd27:	dec    ebp
  41fd28:	sub    ch,BYTE PTR [esi+0x63880542]
  41fd2e:	xchg   ebx,eax
  41fd2f:	data16 stos BYTE PTR es:[edi],al
  41fd31:	das    
  41fd32:	mov    al,ds:0xceb3315b
  41fd37:	das    
  41fd38:	adc    eax,0x2bc1dbde
  41fd3d:	fcomp  st(6)
  41fd3f:	xor    al,0x51
  41fd41:	inc    ebp
  41fd42:	iret   
  41fd43:	xchg   bh,cl
  41fd45:	mov    ss,WORD PTR [esi+ebp*2]
  41fd48:	popf   
  41fd49:	xchg   ebx,eax
  41fd4a:	iret   
  41fd4b:	jo     0x41fd03
  41fd4d:	retf   
  41fd4e:	call   0xc4a67980
  41fd53:	retf   0x3efe
  41fd56:	popf   
  41fd57:	clc    
  41fd58:	not    BYTE PTR [edx]
  41fd5a:	je     0x41fdb0
  41fd5c:	outs   dx,DWORD PTR gs:[esi]
  41fd5e:	in     eax,dx
  41fd5f:	sahf   
  41fd60:	mov    dl,BYTE PTR [eax]
  41fd62:	ins    DWORD PTR es:[edi],dx
  41fd63:	xlat   BYTE PTR ds:[ebx]
  41fd64:	ret    
  41fd65:	mov    edi,DWORD PTR [ebp+0x7a]
  41fd68:	pushf  
  41fd69:	out    dx,eax
  41fd6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd6b:	scas   al,BYTE PTR es:[edi]
  41fd6c:	neg    esi
  41fd6e:	pop    eax
  41fd6f:	push   ss
  41fd70:	lock (bad) 
  41fd73:	outs   dx,DWORD PTR ds:[esi]
  41fd74:	jbe    0x41fd1e
  41fd76:	push   edi
  41fd77:	mov    ds:0xef6274b,al
  41fd7c:	jb     0x41fdb2
  41fd7e:	jmp    0x41fd25
  41fd80:	ins    DWORD PTR es:[edi],dx
  41fd81:	xchg   esi,eax
  41fd82:	sbb    BYTE PTR [edx+eax*8],cl
  41fd85:	mov    esi,0xf9f89f8f
  41fd8a:	mov    ecx,0xa21f6e32
  41fd8f:	lods   eax,DWORD PTR ds:[esi]
  41fd90:	push   edi
  41fd91:	aam    0x5c
  41fd93:	lock daa 
  41fd95:	sar    BYTE PTR [edi-0x67],cl
  41fd98:	inc    esp
  41fd99:	xlat   BYTE PTR ds:[ebx]
  41fd9a:	cs cwde 
  41fd9c:	fnstsw WORD PTR [esi]
  41fd9e:	adc    cl,ah
  41fda0:	rol    BYTE PTR [edx],cl
  41fda2:	cmp    eax,0xe4d4b45b
  41fda7:	(bad)  
  41fda8:	fist   DWORD PTR [ebx+0x5f]
  41fdab:	popa   
  41fdac:	mov    bl,0xcb
  41fdae:	shl    DWORD PTR [ecx+0x646092fb],1
  41fdb4:	add    al,0x8
  41fdb6:	xor    dh,dh
  41fdb8:	pop    ds
  41fdb9:	sub    BYTE PTR [ebx+0x1a096a3b],al
  41fdbf:	jmp    0x27fa7c13
  41fdc4:	test   al,0xf6
  41fdc6:	pop    esp
  41fdc7:	sbb    edx,DWORD PTR [edi]
  41fdc9:	jno    0x41fd4b
  41fdcb:	inc    eax
  41fdcc:	cwde   
  41fdcd:	(bad)  
  41fdce:	mov    ah,0x85
  41fdd0:	jmp    0x8884b484
  41fdd5:	jl     0x41fdf6
  41fdd7:	mov    dl,0x42
  41fdd9:	lods   eax,DWORD PTR ds:[esi]
  41fdda:	add    DWORD PTR [ecx+ebx*2],ebp
  41fddd:	push   edi
  41fdde:	scas   eax,DWORD PTR es:[edi]
  41fddf:	xor    al,0xc3
  41fde1:	cmp    al,0xa6
  41fde3:	or     bh,cl
  41fde5:	add    esp,edx
  41fde7:	add    al,0x56
  41fde9:	rol    BYTE PTR [edi],cl
  41fdeb:	mov    ah,0x79
  41fded:	push   ds
  41fdee:	hlt    
  41fdef:	aam    0xe5
  41fdf1:	or     BYTE PTR [edi],0xfa
  41fdf4:	sub    DWORD PTR [ebp-0x38c32752],esp
  41fdfa:	or     al,0xa8
  41fdfc:	icebp  
  41fdfd:	not    BYTE PTR [edx+ebx*2-0x79]
  41fe01:	(bad)  
  41fe02:	mov    ds:0xf47e7f00,al
  41fe07:	cdq    
  41fe08:	repz xchg ebp,eax
  41fe0a:	aas    
  41fe0b:	fsubr  DWORD PTR [edx-0x70]
  41fe0e:	add    BYTE PTR [ebx+0x7e08b87e],al
  41fe14:	lods   eax,DWORD PTR ds:[esi]
  41fe15:	shl    DWORD PTR [ebp+ebx*1-0x56],1
  41fe19:	mov    ecx,0xf091608b
  41fe1e:	jp     0x41fdfb
  41fe20:	dec    eax
  41fe21:	inc    edx
  41fe22:	ins    BYTE PTR es:[edi],dx
  41fe23:	lea    esi,[edx+eax*1-0x5a816c24]
  41fe2a:	fsub   QWORD PTR [ecx-0x7579fbcb]
  41fe30:	loopne 0x41fdcc
  41fe32:	xlat   BYTE PTR ds:[ebx]
  41fe33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe34:	jecxz  0x41fdf7
  41fe36:	and    eax,0xfd609e23
  41fe3b:	outs   dx,BYTE PTR ds:[esi]
  41fe3c:	in     eax,0x43
  41fe3e:	sbb    dh,dh
  41fe40:	scas   eax,DWORD PTR es:[edi]
  41fe41:	add    eax,0x14c443de
  41fe46:	mov    WORD PTR [esi+0x6a7ec7df],gs
  41fe4c:	sub    al,0x98
  41fe4e:	sub    bh,BYTE PTR [esi+0x6a0328cb]
  41fe54:	inc    esi
  41fe55:	add    DWORD PTR [esi+esi*4-0x4e],0xffffff94
  41fe5a:	mov    dl,0x40
  41fe5c:	icebp  
  41fe5d:	add    eax,0xc8f2db1f
  41fe62:	jo     0x41fe45
  41fe64:	push   ebx
  41fe65:	out    dx,al
  41fe66:	fst    DWORD PTR [esi+0x72]
  41fe69:	out    0xde,ax
  41fe6c:	mov    eax,0xa9679c73
  41fe71:	daa    
  41fe72:	inc    edi
  41fe73:	mov    dl,0x30
  41fe75:	pop    ds
  41fe76:	push   esi
  41fe77:	(bad)  
  41fe78:	jb     0x41feaa
  41fe7a:	rol    DWORD PTR [eax+0x72],1
  41fe7d:	fdiv   DWORD PTR [edx]
  41fe7f:	xchg   DWORD PTR [edx],edx
  41fe81:	xchg   BYTE PTR [ebx+0x68d14faf],bl
  41fe87:	xchg   ebx,eax
  41fe88:	pop    esp
  41fe89:	pop    eax
  41fe8a:	aaa    
  41fe8b:	xor    al,0x43
  41fe8d:	push   ecx
  41fe8e:	ja     0x41fe7f
  41fe90:	imul   esp,DWORD PTR [ecx+0x33],0x105948e3
  41fe97:	out    0x50,eax
  41fe99:	fiadd  DWORD PTR [ecx]
  41fe9b:	jnp    0x41feac
  41fe9d:	fsub   QWORD PTR [edi]
  41fe9f:	pop    ds
  41fea0:	call   0x4a5e:0x2d295aa1
  41fea7:	push   0x1f
  41fea9:	and    DWORD PTR [ebp+0x6c10e8ee],ebp
  41feaf:	mov    al,ds:0x5b213e28
  41feb4:	xor    ch,bl
  41feb6:	inc    ecx
  41feb7:	daa    
  41feb8:	aam    0xc5
  41feba:	cwde   
  41febb:	loop   0x41fea3
  41febd:	(bad)  
  41febe:	mov    edi,0x9598c92c
  41fec3:	xchg   esp,eax
  41fec4:	rcl    BYTE PTR [ebx+0x0],1
  41fec7:	xchg   edi,eax
  41fec8:	aam    0xa7
  41feca:	(bad)  [edx+0x33]
  41fecd:	dec    DWORD PTR [esi+eiz*2-0xe55db45]
  41fed4:	xlat   BYTE PTR ds:[ebx]
  41fed5:	push   0xa8c4d481
  41feda:	outs   dx,BYTE PTR ds:[esi]
  41fedb:	pop    ss
  41fedc:	adc    al,0x9b
  41fede:	lods   eax,DWORD PTR ds:[esi]
  41fedf:	push   ebx
  41fee0:	cmp    BYTE PTR [edi+0x11bb6123],0xbd
  41fee7:	in     al,dx
  41fee8:	imul   edx,DWORD PTR [eax+0x30],0xffffff81
  41feec:	das    
  41feed:	pop    esp
  41feee:	js     0x41feb0
  41fef0:	mov    BYTE PTR [ebx-0x14],bh
  41fef3:	fsubr  QWORD PTR [ebp-0x7ebfdd1c]
  41fef9:	sti    
  41fefa:	pop    edx
  41fefb:	jnp    0x41ff6b
  41fefd:	fld    QWORD PTR [eax-0x64810017]
  41ff03:	lods   eax,DWORD PTR ds:[esi]
  41ff04:	mov    cl,0xda
  41ff06:	or     DWORD PTR [ecx+eax*2],ebx
  41ff09:	shr    edi,1
  41ff0b:	pop    edi
  41ff0c:	in     al,0x49
  41ff0e:	mov    ds:0xf454a561,eax
  41ff13:	xchg   edx,eax
  41ff14:	aas    
  41ff15:	lods   al,BYTE PTR ds:[esi]
  41ff16:	scas   al,BYTE PTR es:[edi]
  41ff17:	jl     0x41feb5
  41ff19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff1a:	shl    DWORD PTR [esi+0x36],0xf1
  41ff1e:	rcl    BYTE PTR [ecx-0x6b30b597],0x40
  41ff25:	ficomp WORD PTR [eax-0x33]
  41ff28:	je     0x41ff0b
  41ff2a:	or     bl,dl
  41ff2c:	xor    BYTE PTR [esi],cl
  41ff2e:	push   cs
  41ff2f:	shl    dh,1
  41ff31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff32:	mul    ebx
  41ff34:	xchg   BYTE PTR [esi+0x77],ah
  41ff37:	inc    ecx
  41ff38:	inc    eax
  41ff39:	out    dx,al
  41ff3a:	pop    eax
  41ff3b:	stos   BYTE PTR es:[edi],al
  41ff3c:	or     DWORD PTR [esi-0x7d],esi
  41ff3f:	xchg   edx,eax
  41ff40:	add    BYTE PTR [eax+0x59],bl
  41ff43:	outs   dx,BYTE PTR ds:[esi]
  41ff44:	or     BYTE PTR [edx+0xd],0x51
  41ff48:	xchg   BYTE PTR [eax-0x47],bh
  41ff4b:	and    esi,esi
  41ff4d:	test   eax,0xb4b88df7
  41ff52:	sbb    al,0x31
  41ff54:	and    ch,BYTE PTR [edx+0x67929825]
  41ff5a:	pop    ebp
  41ff5b:	mov    bl,BYTE PTR [ebx+0x76]
  41ff5e:	scas   al,BYTE PTR es:[edi]
  41ff5f:	jmp    0x41ffa5
  41ff61:	ins    DWORD PTR es:[edi],dx
  41ff62:	mov    ecx,ds
  41ff64:	imul   ebp,ebx,0x6dba0b7c
  41ff6a:	add    DWORD PTR [edx],0xfffffff5
  41ff6d:	dec    eax
  41ff6e:	or     ch,BYTE PTR [ecx-0x38e6a750]
  41ff74:	test   eax,0x22878fb8
  41ff79:	pusha  
  41ff7a:	mov    cl,0xa8
  41ff7c:	out    0x73,eax
  41ff7e:	or     eax,0xb9e7f37d
  41ff83:	mov    edx,edi
  41ff85:	pop    esp
  41ff86:	enter  0x6d24,0x2
  41ff8a:	dec    ebp
  41ff8b:	add    eax,esi
  41ff8d:	outs   dx,BYTE PTR ds:[esi]
  41ff8e:	mov    al,0x8f
  41ff90:	cdq    
  41ff91:	sbb    esi,esi
  41ff93:	push   eax
  41ff94:	mov    esp,0xacbd2a0a
  41ff99:	push   esi
  41ff9a:	inc    edi
  41ff9b:	jge    0x41ff6a
  41ff9d:	jo     0x41ffdd
  41ff9f:	xchg   edx,eax
  41ffa0:	shl    ebx,cl
  41ffa2:	sub    eax,0xf3061f4c
  41ffa7:	jecxz  0x41ff58
  41ffa9:	mov    eax,0x36f33d1d
  41ffae:	jmp    0xe115:0xfe8ad787
  41ffb5:	mov    eax,ds:0xb90e58a
  41ffba:	jmp    0x7133:0xed2fa7b6
  41ffc1:	cmp    bh,BYTE PTR [edx+0x2d3df2d3]
  41ffc7:	push   ds
  41ffc8:	jp     0x420014
  41ffca:	cld    
  41ffcb:	dec    edi
  41ffcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffcd:	(bad)
  41ffd0:	out    dx,al
  41ffd1:	test   DWORD PTR [edi-0x72c0d2ba],ecx
  41ffd7:	in     al,dx
  41ffd8:	mov    esp,0x2407d463
  41ffdd:	test   BYTE PTR [edx-0x479db7f1],bh
  41ffe3:	mov    al,0x7c
  41ffe5:	sti    
  41ffe6:	push   cs
  41ffe7:	mov    ds:0x2327efd4,eax
  41ffec:	repnz mov ebp,0x90b38382
  41fff2:	fsub   QWORD PTR [eax]
  41fff4:	dec    esi
  41fff5:	and    al,0x24
  41fff7:	mov    ebp,0x1350751e
  41fffc:	scas   eax,DWORD PTR es:[edi]
  41fffd:	neg    DWORD PTR [esp+ebx*1]
  420000:	xor    dl,BYTE PTR [esi]
  420002:	outs   dx,BYTE PTR ds:[esi]
  420003:	jb     0x420080
  420005:	pop    edi
  420006:	cmp    eax,0xff80175d
  42000b:	xchg   esp,eax
  42000c:	sub    ebp,edx
  42000e:	sub    al,0xf4
  420010:	inc    edx
  420011:	dec    ebp
  420012:	in     eax,dx
  420013:	shl    esp,cl
  420015:	imul   esp,DWORD PTR [ecx],0xffffffa1
  420018:	sbb    cl,ah
  42001a:	jl     0x41ffd8
  42001c:	push   0xe
  42001e:	retf   
  42001f:	push   edx
  420020:	sub    al,0x15
  420022:	loop   0x420017
  420024:	sbb    ch,BYTE PTR [edi+0x6b1ae8a6]
  42002a:	inc    ecx
  42002b:	cmp    al,dl
  42002d:	xchg   cl,ch
  42002f:	adc    ebp,DWORD PTR [ecx-0x6353fc95]
  420035:	mov    ch,0x57
  420037:	or     BYTE PTR [ebx-0x66],dl
  42003a:	stos   BYTE PTR es:[edi],al
  42003b:	(bad)  
  42003c:	mov    ecx,ebx
  42003e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42003f:	jmp    0x41ffc5
  420041:	jns    0x41ffdb
  420043:	push   ebx
  420044:	and    ebp,edi
  420046:	cdq    
  420047:	and    BYTE PTR [ebx+0xb94bfd5],dl
  42004d:	addr16 std 
  42004f:	push   eax
  420050:	jno    0x41ffdf
  420052:	inc    edx
  420053:	jo     0x420038
  420055:	hlt    
  420056:	in     al,dx
  420057:	add    eax,0x233409df
  42005c:	clc    
  42005d:	xchg   edi,eax
  42005e:	mov    dl,ch
  420060:	shl    DWORD PTR [esi],0x2a
  420063:	dec    esp
  420064:	cmp    ebx,DWORD PTR [ebx+0x74]
  420067:	shl    BYTE PTR [edx-0x65],1
  42006a:	leave  
  42006b:	dec    BYTE PTR [edx+0x57]
  42006e:	pop    ecx
  42006f:	sub    DWORD PTR [ebx+0x10],eax
  420072:	lds    edi,FWORD PTR [esi-0x46]
  420075:	mov    ebx,0xde4b859a
  42007a:	sbb    ah,BYTE PTR [ebp-0x46a40d2c]
  420080:	int3   
  420081:	inc    eax
  420082:	aam    0xc4
  420084:	iret   
  420085:	icebp  
  420086:	call   0xb204c35
  42008b:	or     DWORD PTR [edi+0x1ff7653b],eax
  420091:	in     eax,0x5c
  420093:	lea    ebp,[eax]
  420095:	lds    esi,FWORD PTR [edi]
  420097:	sub    al,0x36
  420099:	repnz pop eax
  42009b:	push   ebp
  42009c:	mov    al,ds:0x361a8fdb
  4200a1:	(bad)  
  4200a2:	out    dx,eax
  4200a3:	out    0xb6,al
  4200a5:	xlat   BYTE PTR ds:[ebx]
  4200a6:	test   eax,0xcd100b8d
  4200ab:	out    dx,al
  4200ac:	cmp    esp,eax
  4200ae:	retf   0x9012
  4200b1:	push   esp
  4200b2:	lahf   
  4200b3:	lea    edx,[edx-0x4e]
  4200b6:	sbb    BYTE PTR [edi],bl
  4200b8:	xchg   edx,eax
  4200b9:	in     al,dx
  4200ba:	add    cl,BYTE PTR [esi+eax*1]
  4200bd:	fimul  DWORD PTR [ebx-0x3236754c]
  4200c3:	mov    bh,0xbc
  4200c5:	mov    edx,0xcaee12fa
  4200ca:	(bad)  
  4200cb:	mul    al
  4200cd:	(bad)  
  4200ce:	test   al,0xce
  4200d0:	inc    esi
  4200d1:	jle    0x420117
  4200d3:	sbb    esp,DWORD PTR [edi]
  4200d5:	in     al,0x61
  4200d7:	int3   
  4200d8:	mov    edi,0xfe9b3b16
  4200dd:	mov    esi,0xb67d739f
  4200e2:	scas   eax,DWORD PTR es:[edi]
  4200e3:	adc    BYTE PTR [edx+0x9563903],al
  4200e9:	stos   DWORD PTR es:[edi],eax
  4200ea:	sbb    al,0x23
  4200ec:	enter  0x7849,0xeb
  4200f0:	add    ch,BYTE PTR [eax]
  4200f2:	add    eax,ebx
  4200f4:	sahf   
  4200f5:	push   0x14deb1e5
  4200fa:	mov    ah,0xd
  4200fc:	xchg   DWORD PTR [ecx+0x6e5b8819],ebp
  420102:	loope  0x420108
  420104:	jns    0x420116
  420106:	and    edi,DWORD PTR [eax-0x270501df]
  42010c:	cmp    esp,DWORD PTR ds:0xe169d9d1
  420112:	push   ecx
  420113:	and    eax,0xaf78f335
  420118:	adc    ebp,ecx
  42011a:	inc    eax
  42011b:	adc    DWORD PTR [ebp+eiz*8+0x53],0xffffffeb
  420120:	mov    bh,0xc5
  420122:	jg     0x420146
  420124:	or     ah,BYTE PTR [ebx]
  420126:	(bad)  
  420127:	sub    BYTE PTR [ecx-0x3a],dl
  42012a:	pusha  
  42012b:	fidiv  DWORD PTR [edi+0xa]
  42012e:	popf   
  42012f:	loope  0x42016a
  420131:	jmp    0x420135
  420133:	enter  0xc15d,0xfe
  420137:	iret   
  420138:	xor    al,0x2
  42013a:	mov    eax,0x149a9dd6
  42013f:	les    ebp,FWORD PTR [esi-0x6dfac2b6]
  420145:	in     al,0xce
  420147:	sbb    BYTE PTR [eax+ebp*1+0x2cbff867],dh
  42014e:	and    al,0x65
  420150:	ret    0xa3d1
  420153:	dec    esi
  420154:	add    dl,BYTE PTR [eax-0x20]
  420157:	test   BYTE PTR [edi],ah
  420159:	ret    0xea77
  42015c:	sub    cl,bh
  42015e:	test   DWORD PTR [ebp+0x35],edi
  420161:	mov    ah,0x71
  420163:	fucomip st,st(1)
  420165:	call   0xd103f08f
  42016a:	in     al,0x8d
  42016c:	lahf   
  42016d:	sbb    bl,BYTE PTR [esi+0x53]
  420170:	(bad)  
  420171:	stos   DWORD PTR es:[edi],eax
  420172:	out    0xb9,eax
  420174:	outs   dx,DWORD PTR ds:[esi]
  420175:	std    
  420176:	mov    cl,BYTE PTR [esi-0xfc0ce63]
  42017c:	mov    esp,0x30dec83c
  420181:	jg     0x420195
  420183:	jns    0x420130
  420185:	lods   eax,DWORD PTR ds:[esi]
  420186:	retf   
  420187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420188:	and    ch,BYTE PTR [ebx+ebx*4+0x4d]
  42018c:	js     0x4201e0
  42018e:	cmp    edi,DWORD PTR gs:[ebx-0x40]
  420192:	or     bl,al
  420194:	lods   al,BYTE PTR ds:[esi]
  420195:	pop    es
  420196:	mov    cl,0xb9
  420198:	jnp    0x420129
  42019a:	jne    0x4201ca
  42019c:	or     ebp,0xffffffdb
  42019f:	mov    al,ds:0x6ebb2d72
  4201a4:	loop   0x4201fd
  4201a6:	add    al,0x2
  4201a8:	adc    DWORD PTR [esi-0xc277696],ebp
  4201ae:	mov    al,ds:0x2492c6bf
  4201b3:	push   es
  4201b4:	push   ds
  4201b5:	psrlw  mm2,mm2
  4201b8:	inc    edx
  4201b9:	fnsave ds:0xe8d1c46f
  4201bf:	and    al,BYTE PTR [ecx+0x3d]
  4201c2:	dec    edx
  4201c3:	adc    DWORD PTR [ecx-0x59f5ac13],edi
  4201c9:	xor    al,0xfd
  4201cb:	mov    edi,DWORD PTR [edx-0x17]
  4201ce:	sbb    ebp,DWORD PTR [edi-0x4d]
  4201d1:	(bad)  
  4201d3:	pop    ebp
  4201d4:	hlt    
  4201d5:	dec    esp
  4201d6:	push   esp
  4201d7:	loope  0x42021e
  4201d9:	and    al,0xc1
  4201db:	into   
  4201dc:	in     eax,dx
  4201dd:	push   ss
  4201de:	shrd   DWORD PTR [ebp-0x59],ecx,cl
  4201e2:	imul   ecx,eax,0xffffffd5
  4201e5:	xor    esi,eax
  4201e7:	add    BYTE PTR [ebx+0x43ea08cc],ah
  4201ed:	dec    ecx
  4201ee:	scas   eax,DWORD PTR es:[edi]
  4201ef:	jno    0x42020e
  4201f1:	mov    dl,0x91
  4201f3:	adc    al,0x71
  4201f5:	and    DWORD PTR [edi+eiz*2+0x76],ebp
  4201f9:	cli    
  4201fa:	adc    dl,BYTE PTR [edi+eax*2+0x66]
  4201fe:	repz mov dh,0x8f
  420201:	mov    ecx,0x12448828
  420206:	adc    edi,esp
  420208:	pop    esp
  420209:	add    al,ah
  42020b:	xchg   DWORD PTR [ebp+0x335d4373],eax
  420211:	adc    eax,0x9204e559
  420216:	pushf  
  420217:	(bad)  
  420218:	pushf  
  420219:	mov    ah,0x9
  42021b:	std    
  42021c:	jae    0x420212
  42021e:	ret    0x3882
  420221:	jle    0x420231
  420223:	mov    al,ds:0x4c87e4fd
  420228:	fcmove st,st(4)
  42022a:	jmp    0x2078:0x1933a005
  420231:	jae    0x420232
  420233:	pop    ebx
  420234:	mov    eax,ds:0xbe68816a
  420239:	out    0x8e,al
  42023b:	pop    edi
  42023c:	retf   
  42023d:	js     0x420225
  42023f:	cmp    ch,0x70
  420242:	or     DWORD PTR [edx],ebx
  420244:	pop    ebp
  420245:	dec    ecx
  420246:	cmp    cl,BYTE PTR [ecx+0x6567dc21]
  42024c:	mov    BYTE PTR [ebx+0x37672784],dh
  420252:	stos   BYTE PTR es:[edi],al
  420253:	lods   al,BYTE PTR ds:[esi]
  420254:	mov    ah,0x33
  420256:	or     al,0xed
  420258:	aaa    
  420259:	xchg   ecx,eax
  42025a:	dec    esp
  42025b:	ins    DWORD PTR es:[edi],dx
  42025c:	adc    BYTE PTR [eax],cl
  42025e:	add    dl,dh
  420260:	(bad)  
  420261:	hlt    
  420262:	mov    eax,0xd8a16cb1
  420267:	out    dx,eax
  420268:	dec    esi
  420269:	or     eax,0x2f8191a3
  42026e:	out    dx,al
  42026f:	daa    
  420270:	fistp  QWORD PTR [eax+0x1b793a54]
  420276:	call   0xfa47:0x52865cd4
  42027d:	(bad)  
  42027e:	adc    DWORD PTR [ebp-0x38b2a9d8],ebp
  420284:	jmp    0x9c8e948e
  420289:	push   eax
  42028a:	lods   eax,DWORD PTR gs:[esi]
  42028c:	xchg   ebx,eax
  42028d:	test   cl,ch
  42028f:	add    dh,BYTE PTR [edi+esi*8-0x55]
  420293:	add    dh,BYTE PTR [edi+0x13]
  420296:	mov    edx,0xc07bbca6
  42029b:	out    dx,al
  42029c:	int    0x8
  42029e:	xlat   BYTE PTR ds:[ebx]
  42029f:	add    DWORD PTR [esi+0x5],eax
  4202a2:	push   0x71ca163a
  4202a7:	inc    ebx
  4202a8:	fmul   st,st(4)
  4202aa:	push   cs
  4202ab:	test   al,0xc3
  4202ad:	adc    eax,0x9a668937
  4202b2:	ins    DWORD PTR es:[edi],dx
  4202b3:	add    eax,0x509a7a87
  4202b8:	clc    
  4202b9:	loop   0x4202be
  4202bb:	mov    bh,0x2b
  4202bd:	sbb    al,0xb1
  4202bf:	es dec edi
  4202c1:	fisub  WORD PTR [eax+0x58]
  4202c4:	adc    DWORD PTR [ebp+edi*4-0x76],0x2a
  4202c9:	sbb    DWORD PTR [ecx+ecx*2],ecx
  4202cc:	cmp    eax,DWORD PTR [ecx]
  4202ce:	mov    bl,0xb7
  4202d0:	push   ebp
  4202d1:	mov    edi,0x57206f64
  4202d6:	fistp  DWORD PTR [eax+0x7a]
  4202d9:	inc    eax
  4202da:	mov    ecx,0xfe162f30
  4202df:	sub    edi,DWORD PTR [ebp+0x4b]
  4202e2:	or     eax,0xbde8fbd9
  4202e7:	cmp    ecx,edi
  4202e9:	cdq    
  4202ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202eb:	ds std 
  4202ed:	retf   
  4202ee:	ja     0x4202fc
  4202f0:	xchg   edx,eax
  4202f1:	pop    ebp
  4202f2:	xchg   DWORD PTR [edx-0x60c42869],esp
  4202f8:	jl     0x42032f
  4202fa:	sbb    DWORD PTR [eax],edx
  4202fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202fd:	ror    DWORD PTR [ebp+0x2f],1
  420300:	push   ds
  420301:	adc    DWORD PTR [eax],0x90e7c63e
  420307:	nop
  420308:	inc    esi
  420309:	int3   
  42030a:	in     eax,0x6
  42030c:	or     al,0x5b
  42030e:	int3   
  42030f:	jo     0x420292
  420311:	lahf   
  420312:	sub    BYTE PTR [esi+0x2302b632],dh
  420318:	mov    ax,0x5016
  42031c:	popf   
  42031d:	jne    0x4202ce
  42031f:	fsqrt  
  420321:	pop    ds
  420322:	push   ebx
  420323:	or     al,0x73
  420325:	jns    0x420353
  420327:	stos   BYTE PTR es:[edi],al
  420328:	mov    esi,0xee098e5f
  42032d:	xchg   ebp,eax
  42032e:	outs   dx,BYTE PTR ds:[esi]
  42032f:	repz mov edx,gs
  420332:	retf   
  420333:	jmp    0x45f3:0x159a4863
  42033a:	jmp    0xeee6:0xd504a092
  420341:	leave  
  420342:	dec    ecx
  420343:	mov    esp,0xe565b249
  420348:	(bad)  
  420349:	loopne 0x4202ea
  42034b:	out    dx,eax
  42034c:	jle    0x42034b
  42034e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420350:	add    DWORD PTR [eax+0x6d],ebx
  420353:	xor    al,0x3d
  420355:	test   edi,ebp
  420357:	cmp    DWORD PTR [edx-0x36],eax
  42035a:	fsqrt  
  42035c:	repnz (bad) 
  42035e:	pop    edx
  42035f:	mov    ah,0xa3
  420362:	push   ebp
  420363:	mov    dl,0xfc
  420365:	jg     0x4203ba
  420367:	xor    al,0x2c
  420369:	mov    ecx,0x751483a6
  42036e:	mov    bh,0x6f
  420370:	dec    ebx
  420371:	loopne 0x4203a3
  420373:	pop    es
  420374:	cmp    BYTE PTR [eax+ebp*8-0x59],al
  420378:	adc    DWORD PTR [esi-0x689b22b2],ecx
  42037e:	leave  
  42037f:	test   BYTE PTR [edi+0x409b3b22],cl
  420385:	pop    ebx
  420386:	aas    
  420387:	fdiv   QWORD PTR gs:[esi-0x6396b8a3]
  42038e:	test   ebp,edi
  420390:	xchg   esp,eax
  420391:	jmp    0x4203a9
  420393:	gs inc edi
  420395:	popf   
  420396:	(bad)  
  420397:	push   ebp
  420398:	push   edx
  420399:	(bad)  
  42039a:	jae    0x4203fd
  42039c:	sar    DWORD PTR [edi-0x39],1
  42039f:	jno    0x420339
  4203a1:	push   esp
  4203a2:	inc    esi
  4203a3:	jb     0x42041c
  4203a5:	lahf   
  4203a6:	ins    BYTE PTR es:[edi],dx
  4203a7:	fdivr  st(4),st
  4203a9:	jne    0x4203bf
  4203ab:	mov    eax,0x9ac3b022
  4203b0:	scas   eax,DWORD PTR es:[edi]
  4203b1:	daa    
  4203b2:	(bad)  
  4203b3:	push   eax
  4203b4:	adc    cl,BYTE PTR [edi+0x7b]
  4203b7:	(bad)  
  4203b8:	sbb    eax,DWORD PTR [ebp-0x62f90e7b]
  4203be:	repz inc al
  4203c1:	les    edi,FWORD PTR [esi]
  4203c3:	jge    0x42036c
  4203c5:	pop    ss
  4203c6:	(bad)  
  4203c7:	mov    ax,sp
  4203ca:	pop    edx
  4203cb:	stos   BYTE PTR es:[edi],al
  4203cc:	repz sub al,0x31
  4203cf:	fiadd  WORD PTR [ebp-0xa]
  4203d2:	jg     0x4203fe
  4203d4:	mov    ebx,0xa1627079
  4203d9:	mov    ch,0xe7
  4203db:	addr16 aaa 
  4203dd:	mov    al,ds:0x32e99c4f
  4203e2:	adc    eax,0x271a6aef
  4203e7:	add    ah,BYTE PTR [esi-0x38]
  4203ea:	push   ss
  4203eb:	pop    esi
  4203ec:	adc    BYTE PTR [ebp+0x42109fe7],bl
  4203f2:	shr    DWORD PTR [edx],0xcc
  4203f5:	xchg   edx,esp
  4203f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f8:	in     eax,0xf4
  4203fa:	addr16 js 0x9edf9d3d
  420401:	mov    BYTE PTR [edx+0x33],bh
  420404:	push   ecx
  420405:	mov    bh,0xe5
  420407:	xchg   esp,eax
  420408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420409:	push   0x507872f0
  42040e:	cmp    dh,bl
  420410:	scas   eax,DWORD PTR es:[edi]
  420411:	in     eax,0x56
  420413:	das    
  420414:	scas   eax,DWORD PTR es:[edi]
  420415:	or     al,0x69
  420417:	push   0xffffffec
  420419:	sub    bh,bh
  42041b:	sub    dh,bl
  42041d:	shl    DWORD PTR [esi+0x30eb250f],cl
  420423:	jae    0x420461
  420425:	add    BYTE PTR [esi],ch
  420427:	push   ds
  420428:	push   0xffffffe3
  42042a:	mov    ecx,0x6729aa48
  42042f:	jle    0x4203ec
  420431:	outs   dx,DWORD PTR ds:[esi]
  420432:	enter  0xc005,0x3
  420436:	push   esi
  420437:	test   eax,0xe1a5b4aa
  42043c:	xchg   ebp,eax
  42043d:	xchg   ecx,eax
  42043e:	scas   al,BYTE PTR es:[edi]
  42043f:	push   ebx
  420440:	pop    es
  420441:	mov    esp,0xfe94f4e
  420446:	neg    ecx
  420448:	push   es
  420449:	hlt    
  42044a:	push   eax
  42044b:	int3   
  42044c:	js     0x420447
  42044e:	jno    0x4203f6
  420450:	es aam 0x85
  420453:	sbb    ebx,edi
  420455:	js     0x4204d6
  420457:	pop    ss
  420458:	aaa    
  420459:	retf   
  42045a:	std    
  42045b:	das    
  42045c:	dec    esp
  42045d:	adc    BYTE PTR [ecx+0x58],dl
  420460:	inc    ecx
  420461:	stos   DWORD PTR es:[edi],eax
  420462:	mov    dl,0x92
  420464:	jl     0x4204cd
  420466:	sti    
  420467:	or     BYTE PTR [edx-0x25ad81f],dl
  42046d:	xlat   BYTE PTR ds:[ebx]
  42046e:	fcomp  st(7)
  420470:	repnz xchg ecx,eax
  420472:	(bad)  
  420473:	xor    al,BYTE PTR [edi-0x1]
  420476:	sar    BYTE PTR [edx-0x67aebc47],1
  42047c:	dec    edx
  42047d:	dec    esi
  42047e:	rol    BYTE PTR [eax],0xfd
  420481:	inc    esi
  420482:	jp     0x420452
  420484:	mov    ?,WORD PTR [ebx-0x4]
  420487:	ins    DWORD PTR es:[edi],dx
  420488:	add    DWORD PTR [eax+0x372629aa],ecx
  42048e:	cld    
  42048f:	sub    edx,ecx
  420491:	inc    ebp
  420492:	mov    ah,0x7e
  420494:	into   
  420495:	ficom  DWORD PTR [eax]
  420497:	lea    ebx,[ebp+0x44]
  42049a:	jmp    0x46ea:0xf0f724c1
  4204a1:	aam    0x4d
  4204a3:	jnp    0x4204ac
  4204a5:	aas    
  4204a6:	outs   dx,DWORD PTR ds:[esi]
  4204a7:	xchg   esp,eax
  4204a8:	(bad)  
  4204a9:	jmp    0x42042f
  4204ab:	arpl   WORD PTR [esi+0x1a],ax
  4204ae:	sbb    eax,0xff50cccd
  4204b3:	pop    es
  4204b4:	push   ds
  4204b5:	mov    esi,0x8de69aa5
  4204ba:	jmp    0x4204fd
  4204bc:	push   es
  4204bd:	pop    ds
  4204be:	xor    ah,BYTE PTR [edi+0x6c]
  4204c1:	mov    dh,0x8c
  4204c3:	cwde   
  4204c4:	xor    esi,ebx
  4204c6:	popf   
  4204c7:	or     dh,dh
  4204c9:	(bad)  
  4204ca:	lahf   
  4204cb:	jmp    0x42046c
  4204cd:	rcr    DWORD PTR [eax],1
  4204cf:	gs push 0xa44bfb12
  4204d5:	shl    DWORD PTR [eax-0x7],1
  4204d8:	daa    
  4204d9:	jb     0x4204d2
  4204db:	sbb    dl,bl
  4204dd:	jb     0x4204fb
  4204df:	and    DWORD PTR [eax+0x4f3fff76],edx
  4204e5:	fwait
  4204e6:	popf   
  4204e7:	rcl    BYTE PTR [ecx-0x14],cl
  4204ea:	(bad)  
  4204eb:	cli    
  4204ec:	and    eax,0xb5cc0ebb
  4204f1:	or     BYTE PTR [ecx-0x2078c6f1],ch
  4204f7:	adc    BYTE PTR [ebx],bh
  4204f9:	adc    BYTE PTR [edx+esi*1],bl
  4204fc:	xchg   esp,eax
  4204fd:	std    
  4204fe:	outs   dx,DWORD PTR ds:[esi]
  4204ff:	aaa    
  420500:	in     eax,dx
  420501:	sub    edi,DWORD PTR [esi+0xd625b4d]
  420507:	imul   eax,ebp,0xdc8998bf
  42050d:	adc    eax,0x5044ae0f
  420512:	loopne 0x4204f0
  420514:	sahf   
  420515:	fidivr DWORD PTR [edx]
  420517:	sbb    DWORD PTR [esi+0x27],esi
  42051a:	mov    esi,0x8952d148
  42051f:	xchg   edi,eax
  420520:	and    edx,ebx
  420522:	in     al,dx
  420523:	call   0x4bb09f84
  420528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420529:	mov    ch,0x8c
  42052b:	cmp    BYTE PTR [esi+0x36aa3f8c],ah
  420531:	dec    esi
  420532:	test   al,0x9b
  420534:	icebp  
  420535:	sbb    al,0xb
  420537:	adc    DWORD PTR [edx-0x7df0a1e3],esp
  42053d:	and    esp,ebp
  42053f:	repz inc ebp
  420541:	jmp    0xf7e:0xca34cea2
  420548:	jl     0x420535
  42054a:	retf   0x134f
  42054d:	ins    BYTE PTR es:[edi],dx
  42054e:	adc    al,0x13
  420550:	cld    
  420551:	or     BYTE PTR [eax+0x64],0x29
  420555:	cli    
  420556:	(bad)  
  420557:	btc    DWORD PTR ds:0xff0c5e8a,ecx
  42055e:	xlat   BYTE PTR ds:[ebx]
  42055f:	xor    BYTE PTR [ecx+0x57c5b191],bh
  420565:	inc    ebp
  420566:	mov    edx,0x627ed113
  42056b:	shl    edi,cl
  42056d:	lahf   
  42056e:	mov    al,ds:0xbc44a797
  420573:	out    0x74,al
  420575:	dec    ecx
  420576:	adc    dl,BYTE PTR [edi+0x7c2115db]
  42057c:	mov    al,0x17
  42057e:	enter  0xa87c,0x80
  420582:	inc    ebp
  420583:	adc    dl,cl
  420585:	imul   ebx,DWORD PTR ds:0x3234fd87,0x7a
  42058c:	stc    
  42058d:	adc    edx,DWORD PTR [edx-0x7f]
  420590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420591:	ret    0xc0d0
  420594:	fstp   TBYTE PTR [esp+eiz*4+0x6318546a]
  42059b:	xchg   ebx,eax
  42059c:	jmp    0xda4d:0xb6c0c68c
  4205a3:	inc    ebp
  4205a4:	mov    al,0x6f
  4205a6:	ss mov dh,0xd7
  4205a9:	aaa    
  4205aa:	jns    0x4205a2
  4205ac:	pcmpeqd mm1,mm0
  4205af:	int3   
  4205b0:	jl     0x4205d4
  4205b2:	lock fsub DWORD PTR [ebx+0x5]
  4205b6:	xor    eax,0xe267e523
  4205bb:	loope  0x420638
  4205bd:	add    eax,0x9c0ec25a
  4205c2:	xlat   BYTE PTR ds:[ebx]
  4205c3:	cmp    eax,0x870621ad
  4205c8:	loop   0x420626
  4205ca:	fnstcw WORD PTR [eax-0x7f]
  4205cd:	imul   ebx,esp,0x6760b77e
  4205d3:	rcl    esp,cl
  4205d5:	dec    ecx
  4205d6:	mov    dl,0xee
  4205d8:	repnz push ebp
  4205da:	sbb    DWORD PTR [edi-0x60c6caab],0xffffffb1
  4205e1:	mov    eax,0xeba559e
  4205e6:	inc    ebx
  4205e7:	pop    esp
  4205e8:	push   ebp
  4205e9:	mov    DWORD PTR [ebx],esi
  4205eb:	fimul  WORD PTR [eax]
  4205ed:	fsin   
  4205ef:	sahf   
  4205f0:	mov    ebx,0x8a51a061
  4205f5:	rcr    BYTE PTR [eax],0x77
  4205f8:	push   0x3074e648
  4205fd:	dec    edx
  4205fe:	inc    eax
  4205ff:	fsubr  QWORD PTR [edx+0x71]
  420602:	adc    edi,eax
  420604:	addr16 fwait
  420606:	jecxz  0x420681
  420608:	push   ecx
  420609:	ins    BYTE PTR es:[edi],dx
  42060a:	xor    dl,ch
  42060c:	jle    0x420644
  42060e:	adc    al,0x3b
  420610:	lahf   
  420611:	sar    ebx,cl
  420613:	sub    eax,0x94bb1ea3
  420618:	fxch   st(7)
  42061a:	and    DWORD PTR [ebp-0x5cf541e7],esi
  420620:	or     ebp,0xffffff97
  420623:	rcr    dl,1
  420625:	mov    eax,ds:0x8d691978
  42062a:	rcl    DWORD PTR [esi],cl
  42062c:	cmp    al,BYTE PTR [edi-0x2e]
  42062f:	add    ebx,0x32
  420632:	mov    ds:0xcdb9871f,eax
  420637:	jl     0x4205c6
  420639:	push   es
  42063a:	jmp    0x73d65004
  42063f:	pop    eax
  420640:	push   ss
  420641:	mov    edx,0xc882bb67
  420646:	mul    DWORD PTR [eax-0x63919bf5]
  42064c:	int3   
  42064d:	loope  0x4206b7
  42064f:	jnp    0x4205e6
  420651:	fisttp WORD PTR [ebx+0x18]
  420654:	call   0x5b2f:0xae67192b
  42065b:	push   ebp
  42065c:	fadd   st(0),st
  42065e:	or     esi,DWORD PTR [edi+0x31bb92b3]
  420664:	enter  0x8143,0x6b
  420668:	jnp    0x420696
  42066a:	popa   
  42066b:	xchg   DWORD PTR [ebx+eiz*8],ebp
  42066e:	scas   al,BYTE PTR es:[edi]
  42066f:	jp     0x4206d8
  420671:	std    
  420672:	add    BYTE PTR [ecx],bh
  420674:	and    al,0xb2
  420676:	int3   
  420677:	push   ss
  420678:	and    bh,BYTE PTR [edi-0x2d84888b]
  42067e:	test   eax,0xe27545da
  420683:	push   esp
  420684:	xchg   ebx,eax
  420685:	sub    BYTE PTR [edx],bh
  420687:	sti    
  420688:	mov    DWORD PTR [edi+0x7f09e354],ebx
  42068e:	and    al,BYTE PTR [ecx]
  420690:	sub    cl,BYTE PTR [edi]
  420692:	icebp  
  420693:	pop    ss
  420694:	jb     0x420681
  420696:	xchg   DWORD PTR [esi],eax
  420698:	jno    0x4206b4
  42069a:	jmp    0xd94e:0x1c007d49
  4206a1:	mov    ch,0x3f
  4206a3:	pop    edx
  4206a4:	pushf  
  4206a5:	adc    ebp,ebx
  4206a7:	push   es
  4206a8:	add    DWORD PTR [ebx],eax
  4206aa:	aad    0x16
  4206ac:	and    bh,BYTE PTR [edx+eiz*2-0x1bc01687]
  4206b3:	lock outs dx,BYTE PTR ds:[esi]
  4206b5:	inc    edi
  4206b6:	mov    ch,0x65
  4206b8:	out    0xc1,al
  4206ba:	sbb    edx,esp
  4206bc:	retf   0xc215
  4206bf:	xor    WORD PTR [ecx+0x6e],ax
  4206c3:	std    
  4206c4:	add    eax,0xe2513805
  4206c9:	mov    edi,0xabc3c30e
  4206ce:	xor    ecx,ebp
  4206d0:	out    0x17,al
  4206d2:	push   0xffffffa7
  4206d4:	mov    ebx,0x5816bbca
  4206d9:	fmul   st,st(4)
  4206db:	mov    cl,bl
  4206dd:	jecxz  0x4206d9
  4206df:	int    0x2d
  4206e1:	out    dx,al
  4206e2:	xchg   ebx,eax
  4206e3:	xchg   BYTE PTR [bp+0x4e42],cl
  4206e8:	jno    0x420742
  4206ea:	xor    DWORD PTR [esp+ecx*1-0x10],esp
  4206ee:	push   eax
  4206ef:	xlat   BYTE PTR ds:[ebx]
  4206f0:	jge    0x4206bf
  4206f2:	loopne 0x420738
  4206f4:	mov    bh,0x40
  4206f6:	jle    0x4206c1
  4206f8:	jmp    0xd0919552
  4206fd:	add    di,WORD PTR [ebx+edx*2+0x1d0747ea]
  420705:	push   esp
  420706:	jmp    0x269e8c3a
  42070b:	pop    ds
  42070c:	pop    ebx
  42070d:	ins    BYTE PTR es:[edi],dx
  42070e:	inc    eax
  42070f:	add    al,0xac
  420711:	(bad)  
  420712:	sub    BYTE PTR [edi],al
  420714:	adc    al,0x28
  420716:	add    edi,DWORD PTR [ebp-0x5fa56fa5]
  42071c:	cmc    
  42071d:	pop    ecx
  42071e:	pop    edi
  42071f:	jo     0x42077f
  420721:	ins    DWORD PTR es:[edi],dx
  420722:	fs pop ecx
  420724:	mov    edx,esp
  420726:	mov    dh,0xd
  420728:	add    al,BYTE PTR [esi]
  42072a:	in     eax,0x4f
  42072c:	sbb    DWORD PTR [edx+0x36],ebx
  42072f:	ror    DWORD PTR [eax-0x7e1e7f42],1
  420735:	push   esi
  420736:	imul   edx,edx,0xb87dd24a
  42073c:	fidiv  WORD PTR [ebp-0x39d8f75a]
  420742:	ret    
  420743:	pop    ebp
  420744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420745:	in     al,0xf4
  420747:	sub    edi,DWORD PTR [esi-0x3e]
  42074a:	inc    edx
  42074b:	int3   
  42074c:	fcmovb st,st(7)
  42074e:	jle    0x42073c
  420750:	ss js  0x4207c6
  420753:	scas   al,BYTE PTR es:[edi]
  420754:	je     0x420778
  420756:	shr    DWORD PTR [eax+esi*4],1
  420759:	add    eax,0x33617b1a
  42075e:	inc    ecx
  42075f:	call   0x88dec361
  420764:	fwait
  420765:	push   esi
  420766:	rcr    DWORD PTR [ecx+0x7c668bad],0x37
  42076d:	aaa    
  42076e:	lock mov ah,0xfc
  420771:	or     DWORD PTR ds:0xb655d068,edi
  420777:	shl    ch,0x66
  42077a:	lods   eax,DWORD PTR ds:[esi]
  42077b:	scas   al,BYTE PTR es:[edi]
  42077c:	inc    esi
  42077d:	imul   esp,DWORD PTR [esi],0x48
  420780:	repz (bad) 
  420782:	or     esp,DWORD PTR [eax+esi*2+0x2a]
  420786:	jmp    0x4207b7
  420788:	loopne 0x420762
  42078a:	and    ebx,DWORD PTR [edx]
  42078c:	xor    BYTE PTR [ecx-0x57],ch
  42078f:	jl     0x4207cd
  420791:	jle    0x4207fd
  420793:	push   ebx
  420794:	outs   dx,DWORD PTR ds:[esi]
  420795:	fsubr  st(6),st
  420797:	je     0x42076f
  420799:	in     eax,dx
  42079a:	adc    edx,DWORD PTR [ebx-0x64b3047e]
  4207a0:	test   eax,0x1e49d09b
  4207a5:	xchg   esi,eax
  4207a6:	xlat   BYTE PTR ds:[ebx]
  4207a7:	push   esp
  4207a8:	cs sub al,0xef
  4207ab:	ins    DWORD PTR es:[edi],dx
  4207ac:	imul   BYTE PTR [ebx+esi*2]
  4207af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b0:	aad    0xf7
  4207b2:	out    0xb1,eax
  4207b4:	iret   
  4207b5:	imul   eax,DWORD PTR [edx-0x24],0xa275e32c
  4207bc:	mov    bl,0x4a
  4207be:	cli    
  4207bf:	push   ebp
  4207c0:	js     0x4207a1
  4207c2:	cmc    
  4207c3:	retf   
  4207c4:	and    edx,DWORD PTR [eax+0x6d]
  4207c7:	mov    esi,0x3cb918b
  4207cc:	mov    ebp,0xf7c0a8cf
  4207d1:	arpl   WORD PTR [ecx-0x62],ax
  4207d4:	ret    0xd391
  4207d7:	scas   eax,DWORD PTR es:[edi]
  4207d8:	pop    ebp
  4207d9:	es xchg esi,eax
  4207db:	sub    cl,BYTE PTR [esi-0x26]
  4207de:	mov    bl,0xd5
  4207e0:	mov    bh,0x1e
  4207e2:	adc    BYTE PTR [ecx-0x77],cl
  4207e5:	fstp   TBYTE PTR [eax+esi*2+0x6f9880a]
  4207ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207ed:	shl    BYTE PTR [esi],0x73
  4207f0:	mov    esp,0x5fe3f7ef
  4207f5:	inc    esi
  4207f6:	dec    esp
  4207f7:	into   
  4207f8:	or     BYTE PTR [ecx+eax*2+0x44e9835],ch
  4207ff:	test   al,0xd3
  420801:	xchg   esp,eax
  420802:	out    0xec,eax
  420804:	push   esi
  420805:	mov    WORD PTR [edx+0x73],gs
  420808:	fistp  QWORD PTR [ecx+0x23]
  42080b:	pop    es
  42080c:	repnz aam 0x8c
  42080f:	arpl   ax,ax
  420811:	mov    al,ds:0xa76ab7cc
  420816:	push   esi
  420817:	mov    bh,0x38
  420819:	stos   DWORD PTR es:[edi],eax
  42081a:	in     eax,dx
  42081b:	daa    
  42081c:	mov    esi,DWORD PTR [ebx]
  42081e:	and    eax,0xdde132ab
  420823:	add    eax,0xeffcc950
  420828:	push   0x2038e97b
  42082d:	xor    edi,esp
  42082f:	jno    0x420876
  420831:	icebp  
  420832:	or     eax,0xdce04978
  420837:	push   0xd3972070
  42083c:	inc    esp
  42083d:	cld    
  42083e:	dec    edi
  42083f:	(bad)  
  420840:	in     al,0x4b
  420842:	test   eax,0x665de5f1
  420847:	or     DWORD PTR [ebx-0x2f],ebx
  42084a:	lods   al,BYTE PTR ds:[esi]
  42084b:	fld    DWORD PTR [ebp-0x39]
  42084e:	dec    ecx
  42084f:	pop    edi
  420850:	or     edx,DWORD PTR [ecx+esi*2-0x7e864f3c]
  420857:	stc    
  420858:	fnstsw WORD PTR [eax+esi*8+0x3958eb19]
  42085f:	sahf   
  420860:	ds iret 
  420862:	or     DWORD PTR [edi+0x5d],ebx
  420865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420866:	xor    ah,ah
  420868:	scas   eax,DWORD PTR es:[edi]
  420869:	pop    edi
  42086a:	xchg   esi,eax
  42086b:	mov    WORD PTR [esi+edi*8],es
  42086e:	ins    BYTE PTR es:[edi],dx
  42086f:	sbb    BYTE PTR [eax],bl
  420871:	outs   dx,DWORD PTR ds:[esi]
  420872:	fnstenv [esi+0x2a]
  420875:	mov    ah,0x6d
  420877:	sbb    ebp,0x89823d8b
  42087d:	pop    edi
  42087e:	add    al,0x34
  420880:	jne    0x420870
  420882:	sub    bh,bh
  420884:	mov    edi,0x38180883
  420889:	push   ebp
  42088a:	stos   DWORD PTR es:[edi],eax
  42088b:	mov    al,0xd4
  42088d:	pop    es
  42088e:	push   ss
  42088f:	jecxz  0x420848
  420891:	adc    bl,al
  420893:	fild   DWORD PTR [edx+0x55]
  420896:	mov    eax,ds:0xb305d714
  42089b:	push   0x43
  42089d:	dec    ebx
  42089e:	push   esi
  42089f:	dec    esi
  4208a0:	(bad)  
  4208a1:	pushf  
  4208a2:	cmp    al,BYTE PTR [ebp-0x24]
  4208a5:	imul   esi,DWORD PTR [edx-0x6dd645d9],0xb413baf1
  4208af:	add    al,0xbe
  4208b1:	in     eax,0xd
  4208b3:	call   0x9ef61640
  4208b8:	cmc    
  4208b9:	in     eax,dx
  4208ba:	fs mov cl,0xf2
  4208bd:	xchg   esp,eax
  4208be:	mov    bh,0xad
  4208c0:	mov    cl,cl
  4208c2:	jb     0x420858
  4208c4:	scas   al,BYTE PTR es:[edi]
  4208c5:	pusha  
  4208c6:	mov    eax,esp
  4208c8:	xor    al,0x8
  4208ca:	and    BYTE PTR [eax+edi*2-0x51a922b5],al
  4208d1:	js     0x42090a
  4208d3:	mov    dh,0x98
  4208d5:	mov    eax,0x8aaded2e
  4208da:	std    
  4208db:	mov    ebx,0x49842e5f
  4208e0:	or     BYTE PTR [esi-0x3f1d203a],ch
  4208e6:	mov    al,ds:0x29fa477d
  4208eb:	sub    al,0x6b
  4208ed:	inc    edi
  4208ee:	int3   
  4208ef:	xor    eax,0x63fecf0
  4208f4:	and    BYTE PTR [ebp-0x1958679a],bl
  4208fa:	test   DWORD PTR [edx],esi
  4208fc:	pop    edi
  4208fd:	sbb    ebx,DWORD PTR [esi-0x731a5633]
  420903:	push   eax
  420904:	pop    es
  420905:	cmp    eax,0xd252e70
  42090a:	bound  ecx,QWORD PTR [ebp-0x72d9f0db]
  420910:	push   ds
  420911:	mov    ecx,0xb40136f8
  420916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420917:	pop    ss
  420918:	mov    eax,ds:0x64efbf02
  42091d:	aad    0xdf
  42091f:	data16 std 
  420921:	cmp    eax,0xbe1bd05d
  420926:	cs popa 
  420928:	aaa    
  420929:	dec    edi
  42092a:	xchg   ebx,eax
  42092b:	xchg   ebp,eax
  42092c:	pop    ecx
  42092d:	aam    0x28
  42092f:	into   
  420930:	mov    dh,cl
  420932:	push   ebp
  420933:	cmp    esi,DWORD PTR [eax+edi*4-0x43e5a63a]
  42093a:	int    0x5b
  42093c:	loopne 0x4208f6
  42093e:	daa    
  42093f:	xchg   BYTE PTR [edi-0x76],bl
  420942:	stos   DWORD PTR es:[edi],eax
  420943:	aad    0xbd
  420945:	or     BYTE PTR gs:[edx],al
  420948:	and    al,0x9b
  42094a:	xor    eax,0xe2bf458
  42094f:	sbb    esi,edx
  420951:	sub    eax,0x272f898b
  420956:	in     al,0xaf
  420958:	jns    0x42092d
  42095a:	pop    ebx
  42095b:	cmp    eax,esi
  42095d:	dec    ebx
  42095e:	inc    eax
  42095f:	jl     0x4209c0
  420961:	or     dl,BYTE PTR [eax]
  420963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420964:	in     eax,0x81
  420966:	in     al,0x8a
  420968:	sub    dl,ch
  42096a:	mov    ah,cl
  42096c:	cmp    BYTE PTR [edi],bh
  42096e:	pop    ss
  42096f:	repz je 0x4209ab
  420972:	setnp  BYTE PTR [esp+edi*2-0x60d23b5a]
  42097a:	sar    ah,cl
  42097c:	pop    ss
  42097d:	retf   
  42097e:	call   0x1022:0x151a184f
  420985:	dec    ecx
  420986:	icebp  
  420987:	jo     0x420957
  420989:	rcr    DWORD PTR [eax+0x37],cl
  42098c:	add    bl,BYTE PTR [edx]
  42098e:	fisub  DWORD PTR [eax]
  420990:	rcl    BYTE PTR [edx+0x18a46510],cl
  420996:	xor    DWORD PTR [edx+0x71],edx
  420999:	jle    0x42091c
  42099b:	rol    DWORD PTR [edi],0xdc
  42099e:	lds    esi,FWORD PTR [ebp-0x37]
  4209a1:	jmp    0x4209eb
  4209a3:	stos   DWORD PTR es:[edi],eax
  4209a4:	imul   edi,DWORD PTR [ecx+0x4c92583],0x21c14cfd
  4209ae:	jne    0x420a16
  4209b0:	mov    esi,0xc76989f3
  4209b5:	add    al,0x1f
  4209b7:	dec    edx
  4209b8:	(bad)  
  4209b9:	aam    0x60
  4209bb:	mov    ebp,0x3052fa9f
  4209c0:	cdq    
  4209c1:	inc    edx
  4209c2:	mov    dh,0xbc
  4209c4:	xchg   edi,eax
  4209c5:	cmp    al,0x6e
  4209c7:	icebp  
  4209c8:	mov    dh,0xf6
  4209ca:	and    eax,0x98f149ca
  4209cf:	or     al,0xc0
  4209d1:	mov    WORD PTR [ecx-0x73abaf0],ss
  4209d7:	sbb    eax,0x80ddf17e
  4209dc:	pop    ebx
  4209dd:	and    al,0x24
  4209df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209e0:	xlat   BYTE PTR ds:[ebx]
  4209e1:	stos   BYTE PTR es:[edi],al
  4209e2:	push   edx
  4209e3:	ins    BYTE PTR es:[edi],dx
  4209e4:	cwde   
  4209e5:	dec    ebx
  4209e6:	push   eax
  4209e7:	dec    esi
  4209e8:	mov    WORD PTR fs:[ebx+eax*4+0x7fd02d1d],cs
  4209f0:	cdq    
  4209f1:	xor    eax,0x270f2c46
  4209f6:	and    DWORD PTR [ecx],eax
  4209f8:	call   0x59a44b00
  4209fd:	mov    dl,0x83
  4209ff:	shr    BYTE PTR [esi+0x7636806d],0x4e
  420a06:	aas    
  420a07:	fwait
  420a08:	and    DWORD PTR [eax-0x13],0xe59bf51
  420a0f:	fdivr  QWORD PTR [edi+eiz*1]
  420a12:	shl    BYTE PTR [edx-0x75],cl
  420a15:	and    dl,BYTE PTR [ebp-0x4]
  420a18:	adc    BYTE PTR [esi+0x18],ah
  420a1b:	add    al,0x7d
  420a1d:	sub    DWORD PTR [edi-0x18],ebp
  420a20:	and    ebp,edx
  420a22:	sub    eax,DWORD PTR [esp+edi*4-0x18]
  420a26:	sbb    eax,0x697f2fb3
  420a2b:	leave  
  420a2c:	push   ss
  420a2d:	mov    eax,ds:0x3f1ed389
  420a32:	imul   esp,DWORD PTR [esi+0x17d84ccd],0x8b45baf4
  420a3c:	cmc    
  420a3d:	xor    dh,BYTE PTR [eax-0x3eec5c6]
  420a43:	mov    ebx,0xf2e5064d
  420a48:	jo     0x420abe
  420a4a:	popa   
  420a4b:	or     DWORD PTR [edx],edi
  420a4d:	iret   
  420a4e:	inc    edi
  420a4f:	hlt    
  420a50:	in     eax,dx
  420a51:	sbb    DWORD PTR [eax],ebp
  420a53:	and    eax,0xe41d5e2a
  420a58:	(bad)  
  420a59:	sti    
  420a5a:	pop    ecx
  420a5b:	dec    esi
  420a5c:	or     ch,ah
  420a5e:	push   ebx
  420a5f:	ror    DWORD PTR [edx+0x7e],cl
  420a62:	(bad)  
  420a63:	adc    eax,0xefd0a617
  420a68:	jp     0x420a81
  420a6a:	and    DWORD PTR ds:0xd74bd611,ebp
  420a70:	inc    edi
  420a71:	(bad)  
  420a72:	aas    
  420a73:	clc    
  420a74:	dec    edi
  420a75:	call   0xe01e6a58
  420a7a:	adc    bl,BYTE PTR [bp+si-0x1e]
  420a7e:	xchg   edx,eax
  420a7f:	mov    edx,ebx
  420a81:	jno    0x420ac9
  420a83:	push   esp
  420a84:	sbb    dh,BYTE PTR es:[esi]
  420a87:	jo     0x420ae1
  420a89:	mov    dh,0x1
  420a8b:	in     al,0xb4
  420a8d:	pop    ecx
  420a8e:	push   eax
  420a8f:	xor    eax,0x4aaac2a3
  420a94:	repnz cmp DWORD PTR [eax+0x6b6450e],ebp
  420a9b:	jg     0x420a6d
  420a9d:	cmp    al,0xc5
  420a9f:	cmc    
  420aa0:	xor    ebp,DWORD PTR [ecx-0x178d97f4]
  420aa6:	hlt    
  420aa7:	imul   ebp,DWORD PTR [ecx+0x1e0ed33c],0xffffff8e
  420aae:	les    edi,FWORD PTR [edx]
  420ab0:	mov    bl,0xd8
  420ab2:	cli    
  420ab3:	xchg   edi,eax
  420ab4:	adc    DWORD PTR cs:[ecx-0x6c55817a],0xffffffae
  420abc:	ja     0x420b21
  420abe:	adc    bh,BYTE PTR [edx]
  420ac0:	ret    0x5ffc
  420ac3:	pop    edx
  420ac4:	(bad)  
  420ac5:	icebp  
  420ac6:	loopne 0x420abf
  420ac8:	mov    esp,DWORD PTR [ebp-0x118294e2]
  420ace:	push   ds
  420acf:	jecxz  0x420aa5
  420ad1:	jb     0x420b3e
  420ad3:	repnz mov bl,0xc7
  420ad6:	scas   eax,DWORD PTR es:[edi]
  420ad7:	xchg   cl,ch
  420ad9:	xor    edi,DWORD PTR [eax]
  420adb:	adc    al,BYTE PTR [ebx+eiz*4+0x5]
  420adf:	fldl2t 
  420ae1:	sbb    bl,BYTE PTR [edx-0x5a]
  420ae4:	or     DWORD PTR [edx+0x77],0xabb3a40e
  420aeb:	or     DWORD PTR [esi-0x41],ebp
  420aee:	call   0x272bb0d7
  420af3:	popa   
  420af4:	imul   DWORD PTR [edx+eax*4-0x5518adc5]
  420afb:	dec    edx
  420afc:	stos   BYTE PTR es:[edi],al
  420afd:	bound  edx,QWORD PTR [edx+0x566bf693]
  420b03:	mov    eax,0xe1d5dffe
  420b08:	(bad)  [eax+0x288878d3]
  420b0e:	pop    esi
  420b0f:	push   es
  420b10:	dec    esp
  420b11:	test   DWORD PTR [ecx+0x2a],ecx
  420b14:	mov    fs,WORD PTR [edi]
  420b16:	lock xchg ebx,eax
  420b18:	int3   
  420b19:	cmp    al,0xa0
  420b1b:	xor    edx,DWORD PTR [ecx+edx*8+0x2dfc362]
  420b22:	pop    ds
  420b23:	stos   DWORD PTR es:[edi],eax
  420b24:	fldcw  WORD PTR [edx]
  420b26:	add    bl,BYTE PTR [eax]
  420b28:	xor    al,0x9d
  420b2a:	bound  edi,QWORD PTR [esi-0x70b0f3c5]
  420b30:	sbb    eax,0xf717712b
  420b35:	add    BYTE PTR [esi],ch
  420b37:	rcr    BYTE PTR [edx],1
  420b39:	addr16 xchg ecx,eax
  420b3b:	mov    esi,0xb86a8005
  420b40:	(bad)  
  420b41:	xchg   edx,eax
  420b42:	inc    eax
  420b43:	adc    dl,BYTE PTR [ecx+0x35]
  420b46:	pop    eax
  420b47:	call   0x5e52:0x2b3b9a5e
  420b4e:	das    
  420b4f:	ror    DWORD PTR [ecx-0x7c96529e],cl
  420b55:	dec    DWORD PTR [ecx]
  420b57:	xchg   edi,eax
  420b58:	(bad)  
  420b59:	jmp    0xf000:0xcddd22c9
  420b60:	out    0x60,eax
  420b62:	out    dx,eax
  420b63:	enter  0x8b69,0xfa
  420b67:	adc    DWORD PTR [edx-0x63],ebp
  420b6a:	jae    0x420bc8
  420b6c:	fimul  WORD PTR ds:0x8c920b08
  420b72:	jmp    0xe9b88230
  420b77:	sar    DWORD PTR [edx],1
  420b79:	and    al,0xf6
  420b7b:	pusha  
  420b7c:	popa   
  420b7d:	add    al,0xf9
  420b7f:	ja     0x420bb2
  420b81:	dec    edx
  420b82:	xchg   esi,eax
  420b83:	in     eax,dx
  420b84:	mov    ecx,0x4111e24b
  420b89:	jb     0x420b8b
  420b8b:	lods   al,BYTE PTR ds:[esi]
  420b8c:	push   esi
  420b8d:	in     eax,dx
  420b8e:	xchg   ecx,eax
  420b8f:	mov    cl,0xc
  420b91:	out    dx,al
  420b92:	inc    esi
  420b93:	stos   DWORD PTR es:[edi],eax
  420b94:	dec    esp
  420b95:	int    0x1a
  420b97:	or     bh,BYTE PTR [ecx]
  420b99:	sti    
  420b9a:	cmp    bh,0xd5
  420b9d:	sub    eax,0x80fcdbef
  420ba2:	jno    0x420c0d
  420ba4:	jno    0x420bf3
  420ba6:	xchg   ecx,eax
  420ba7:	xchg   edx,eax
  420ba8:	mov    dl,0x1d
  420baa:	inc    ecx
  420bab:	enter  0x17c9,0xf2
  420baf:	test   DWORD PTR [esi+0x54],ebp
  420bb2:	xchg   ebp,ebx
  420bb4:	xchg   BYTE PTR gs:[esi-0x390e11d5],bl
  420bbb:	dec    edi
  420bbc:	and    DWORD PTR [ebx-0x7bd48ee4],edi
  420bc2:	outs   dx,BYTE PTR ds:[esi]
  420bc3:	push   edi
  420bc4:	add    dh,cl
  420bc6:	sti    
  420bc7:	sti    
  420bc8:	or     DWORD PTR [esi],esi
  420bca:	jne    0x420c09
  420bcc:	cmc    
  420bcd:	adc    dh,bl
  420bcf:	xchg   ecx,eax
  420bd0:	pop    ds
  420bd1:	cli    
  420bd2:	adc    BYTE PTR [ebp+esi*4+0x110efb11],dh
  420bd9:	pop    esi
  420bda:	jg     0x420b7a
  420bdc:	lods   eax,DWORD PTR ds:[esi]
  420bdd:	jb     0x420c20
  420bdf:	lahf   
  420be0:	nop
  420be1:	test   al,0xcd
  420be4:	in     al,0x30
  420be6:	aad    0xf9
  420be8:	xchg   ebp,eax
  420be9:	add    eax,ecx
  420beb:	stos   DWORD PTR es:[edi],eax
  420bec:	inc    eax
  420bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bee:	mov    ecx,0x9e7626a
  420bf3:	aas    
  420bf4:	dec    ebp
  420bf5:	loopne 0x420b9d
  420bf7:	pop    es
  420bf8:	cli    
  420bf9:	jmp    0x6277f9b5
  420bfe:	pop    es
  420bff:	xchg   ecx,eax
  420c00:	outs   dx,BYTE PTR ds:[esi]
  420c01:	fs retf 0x64e6
  420c05:	stos   DWORD PTR es:[edi],eax
  420c06:	pop    ss
  420c07:	int3   
  420c08:	leave  
  420c09:	hlt    
  420c0a:	daa    
  420c0b:	or     al,0x91
  420c0d:	(bad)  
  420c0e:	dec    esp
  420c0f:	inc    edx
  420c10:	fstp   QWORD PTR [eax]
  420c12:	pop    es
  420c13:	or     BYTE PTR [edi-0x2b4c5686],0xd6
  420c1a:	lods   al,BYTE PTR ds:[esi]
  420c1b:	not    BYTE PTR [ebx-0x40]
  420c1e:	and    BYTE PTR [edi+eiz*1+0x2],ch
  420c22:	mov    ds:0x8e1b62af,eax
  420c27:	out    0x27,eax
  420c29:	pop    eax
  420c2a:	inc    sp
  420c2c:	test   eax,0xa2f02aa5
  420c31:	imul   esp,DWORD PTR [edi+0x663eff0a],0x58523704
  420c3b:	push   eax
  420c3c:	sub    esi,ebp
  420c3e:	mov    edx,DWORD PTR [ebx+0x5aa1e0e6]
  420c44:	sub    al,0x12
  420c46:	outs   dx,DWORD PTR ds:[esi]
  420c47:	sub    DWORD PTR [eax+0x51557e1e],esi
  420c4d:	ins    DWORD PTR es:[edi],dx
  420c4e:	into   
  420c4f:	mov    cx,0xe3c3
  420c53:	pop    esp
  420c54:	(bad)  
  420c55:	mov    edi,0x6b022f72
  420c5a:	push   esp
  420c5b:	mov    ds:0xbab114f1,al
  420c60:	jo     0x420c97
  420c62:	or     al,0x2a
  420c64:	hlt    
  420c65:	into   
  420c66:	nop
  420c67:	mov    dl,0x30
  420c69:	je     0x420c94
  420c6b:	pop    DWORD PTR [edi]
  420c6d:	ret    
  420c6e:	ds (bad) 
  420c70:	mov    bh,0x49
  420c72:	lds    eax,FWORD PTR [ebx-0x2eda2eca]
  420c78:	loop   0x420c6b
  420c7a:	(bad)  
  420c7b:	call   0x9c50193d
  420c80:	sbb    eax,0x53ef5615
  420c85:	or     dl,bh
  420c87:	and    DWORD PTR [ebx+0x5e1f9d4c],eax
  420c8d:	sbb    DWORD PTR [ebp-0x5d532f4f],esi
  420c93:	push   es
  420c94:	inc    esp
  420c95:	mov    ds,WORD PTR [eax*1-0x4e9c6696]
  420c9c:	(bad)  
  420c9d:	cld    
  420c9e:	fdiv   QWORD PTR [esi-0x3a19d7c3]
  420ca4:	xchg   edi,eax
  420ca5:	daa    
  420ca6:	mov    ebx,DWORD PTR [eax+0x72772723]
  420cac:	es pop esi
  420cae:	dec    edx
  420caf:	mov    ds:0x619e690e,eax
  420cb4:	or     esp,eax
  420cb6:	push   esp
  420cb7:	jae    0x420c3f
  420cb9:	loop   0x420d0e
  420cbb:	mov    ecx,0xd3f1f525
  420cc0:	dec    ebp
  420cc1:	push   edi
  420cc2:	cld    
  420cc3:	aaa    
  420cc4:	jge    0x420cdd
  420cc6:	lock in al,dx
  420cc8:	add    esp,esp
  420cca:	in     eax,0x74
  420ccc:	mov    ah,0x5c
  420cce:	sbb    BYTE PTR [ecx-0x6b],0x6b
  420cd2:	jne    0x420c9c
  420cd4:	or     al,0x94
  420cd6:	xor    DWORD PTR [ecx-0x3ef1d5b7],eax
  420cdc:	into   
  420cdd:	loopne 0x420cb4
  420cdf:	pop    DWORD PTR [edx]
  420ce1:	jp     0x420ccb
  420ce3:	aam    0x7b
  420ce5:	mov    ecx,0x3f231ea8
  420cea:	sbb    bl,BYTE PTR [edx+0x5e]
  420ced:	ret    
  420cee:	(bad)  
  420cef:	sahf   
  420cf0:	cmp    eax,0xa35666e3
  420cf5:	xor    dh,0x7d
  420cf8:	push   ebp
  420cf9:	cld    
  420cfa:	push   edi
  420cfb:	or     eax,DWORD PTR [esi-0x22fe79e3]
  420d01:	xor    esi,ebp
  420d03:	pop    ds
  420d04:	jb     0x420d5f
  420d06:	daa    
  420d07:	xor    al,0xc6
  420d09:	out    dx,eax
  420d0a:	sbb    DWORD PTR [ebp+0x47121a42],ebp
  420d10:	repz jl 0x420cdc
  420d13:	cs jge 0x420d62
  420d16:	dec    ebx
  420d17:	xor    DWORD PTR ds:0x93324548,ecx
  420d1d:	push   ds
  420d1e:	mov    ebp,0xf5275ba8
  420d23:	fs pop es
  420d25:	cmp    edi,DWORD PTR [eax+0x68]
  420d28:	shl    ch,1
  420d2a:	mov    bh,0x4a
  420d2c:	aas    
  420d2d:	and    al,0x7a
  420d2f:	adc    al,0xb
  420d31:	adc    DWORD PTR [esi+edx*8-0x46067178],esi
  420d38:	fidivr WORD PTR [eax-0x18]
  420d3b:	adc    BYTE PTR [ebp+ebp*8-0x28f4d9a6],ch
  420d42:	cmp    al,al
  420d44:	mov    esi,0x2edce42c
  420d49:	mov    bl,0xf1
  420d4b:	cdq    
  420d4c:	test   DWORD PTR [esi-0x67],edx
  420d4f:	fwait
  420d50:	ja     0x420d86
  420d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d54:	adc    BYTE PTR [ecx],al
  420d56:	push   ebx
  420d57:	je     0x420db2
  420d59:	dec    ebp
  420d5a:	fidiv  WORD PTR [ecx]
  420d5c:	push   0xdf1cc0a7
  420d61:	inc    edi
  420d62:	in     eax,dx
  420d63:	mov    eax,0xa16e3513
  420d68:	ror    ecx,0x14
  420d6b:	out    dx,al
  420d6c:	push   esi
  420d6d:	popf   
  420d6e:	(bad)  
  420d6f:	in     al,dx
  420d70:	pop    ebp
  420d71:	inc    esi
  420d72:	dec    edi
  420d73:	inc    esi
  420d74:	ficomp WORD PTR [esi-0x66b046e3]
  420d7a:	aas    
  420d7b:	int    0x34
  420d7d:	cli    
  420d7e:	shr    BYTE PTR [eax-0x75],0x9d
  420d82:	push   edx
  420d83:	sub    ch,0x5
  420d86:	pop    edx
  420d87:	xchg   edi,eax
  420d88:	xlat   BYTE PTR ds:[ebx]
  420d89:	push   edi
  420d8a:	inc    esi
  420d8b:	xchg   edx,eax
  420d8c:	sub    cl,BYTE PTR [edx+0x2005ef45]
  420d92:	pushf  
  420d93:	mov    ah,0x54
  420d95:	sub    al,0xc2
  420d97:	push   esp
  420d98:	inc    ecx
  420d99:	mov    dh,BYTE PTR [edi]
  420d9b:	xchg   ebx,eax
  420d9c:	jne    0x420dbd
  420d9e:	dec    BYTE PTR [ebp+0x28a19643]
  420da4:	and    BYTE PTR [edi],ah
  420da6:	mov    ebx,0x7a24c736
  420dab:	out    dx,al
  420dac:	pop    ss
  420dad:	adc    esp,DWORD PTR [edx+0x3db43796]
  420db3:	cmp    al,al
  420db5:	jns    0x420e2f
  420db7:	cmp    BYTE PTR [ecx],ah
  420db9:	daa    
  420dba:	pop    edx
  420dbb:	sub    al,BYTE PTR ds:0x99d6311d
  420dc1:	int3   
  420dc2:	xchg   edx,eax
  420dc3:	ret    
  420dc4:	xchg   ebx,eax
  420dc5:	mov    ds:0xc557ce35,eax
  420dca:	adc    al,0x8a
  420dcc:	fstp   DWORD PTR [esi-0x4c]
  420dcf:	bound  esi,QWORD PTR [esi+edx*4]
  420dd2:	jl     0x420d6b
  420dd4:	scas   al,BYTE PTR es:[edi]
  420dd5:	adc    BYTE PTR [edi+0x3a4c01b0],bl
  420ddb:	add    BYTE PTR [edx+0x42fe7815],0x73
  420de2:	jnp    0x420dfc
  420de4:	aaa    
  420de5:	inc    esp
  420de6:	leave  
  420de7:	lea    eax,[esi*1-0x72c2773f]
  420dee:	push   ebx
  420def:	pop    edi
  420df0:	cmp    edi,DWORD PTR [edi-0x4f]
  420df3:	xlat   BYTE PTR ds:[ebx]
  420df4:	mov    esp,0xe6057418
  420df9:	popa   
  420dfa:	ficomp DWORD PTR [eax]
  420dfc:	(bad)  
  420dfd:	stc    
  420dfe:	icebp  
  420dff:	cli    
  420e00:	out    0x80,eax
  420e02:	sub    eax,0xf883b2ef
  420e07:	scas   al,BYTE PTR es:[edi]
  420e08:	mov    bl,0xbc
  420e0a:	stos   DWORD PTR es:[edi],eax
  420e0b:	iret   
  420e0c:	sub    ebp,eax
  420e0e:	mov    ecx,0x4b98a47a
  420e13:	outs   dx,BYTE PTR ds:[esi]
  420e14:	loopne 0x420e68
  420e16:	inc    ecx
  420e17:	add    al,0x47
  420e19:	sbb    dh,bh
  420e1b:	pop    eax
  420e1c:	(bad)  
  420e1d:	sbb    BYTE PTR [esi-0x2],al
  420e20:	iret   
  420e21:	push   ss
  420e22:	inc    ebp
  420e23:	add    DWORD PTR [ecx+eax*8+0x53b95e62],edx
  420e2a:	jmp    0xecd9:0x1e58029a
  420e31:	jb     0x420e6d
  420e33:	or     dl,dl
  420e35:	retf   0x996
  420e38:	push   ds
  420e39:	ret    
  420e3a:	enter  0xd3a0,0xb9
  420e3e:	stos   DWORD PTR es:[edi],eax
  420e3f:	or     eax,0x5b042094
  420e44:	pop    ecx
  420e45:	jo     0x420e9b
  420e47:	fsub   QWORD PTR [ebp-0x4e4aa684]
  420e4d:	push   ds
  420e4e:	adc    al,0xd5
  420e50:	addr16 int 0x68
  420e53:	mov    ecx,0x5fdbde11
  420e58:	push   ds
  420e59:	mov    edi,0x9b48e9b7
  420e5e:	cwde   
  420e5f:	je     0x420e4f
  420e61:	dec    esp
  420e62:	(bad)  
  420e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e64:	dec    BYTE PTR [esi]
  420e66:	aam    0xcd
  420e68:	(bad)  
  420e69:	dec    esi
  420e6a:	mov    dl,0xa2
  420e6c:	jmp    0x84d972af
  420e71:	stc    
  420e72:	shl    BYTE PTR [ecx],0xe1
  420e75:	cmp    al,0xcc
  420e77:	(bad)  [esi+0x3f]
  420e7a:	jno    0x420efa
  420e7c:	pop    ebx
  420e7d:	pop    ecx
  420e7e:	cmc    
  420e7f:	add    dh,BYTE PTR [ebx]
  420e81:	enter  0xf0f,0xed
  420e85:	repnz pop ebx
  420e87:	or     al,0x34
  420e89:	jb     0x420eb9
  420e8b:	aam    0x97
  420e8d:	mov    eax,ds:0xa5a6b809
  420e92:	es cld 
  420e94:	dec    ebp
  420e95:	jp     0x420e19
  420e97:	and    DWORD PTR [edx],eax
  420e99:	cmp    DWORD PTR [edx],esi
  420e9b:	and    al,0xff
  420e9d:	pusha  
  420e9e:	dec    edi
  420e9f:	nop
  420ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ea1:	sub    dl,BYTE PTR [ebx-0x74e8d74a]
  420ea7:	std    
  420ea8:	cmp    eax,0xbde5a520
  420ead:	lods   eax,DWORD PTR ds:[esi]
  420eae:	scas   al,BYTE PTR es:[edi]
  420eaf:	push   cs
  420eb0:	dec    ebp
  420eb1:	fimul  DWORD PTR [edx+0x7d]
  420eb4:	icebp  
  420eb5:	jne    0x420ed9
  420eb7:	xor    al,0xf5
  420eb9:	je     0x420f32
  420ebb:	stc    
  420ebc:	sbb    esi,DWORD PTR [ebp+0x39341b4a]
  420ec2:	in     al,dx
  420ec3:	loopne 0x420f40
  420ec5:	mov    ecx,0xbaabdefa
  420eca:	or     al,BYTE PTR [esi-0x26]
  420ecd:	mov    al,0x30
  420ecf:	bound  esp,QWORD PTR [edx-0x26]
  420ed2:	loop   0x420ed8
  420ed4:	xor    ebx,DWORD PTR ds:0x366462b0
  420eda:	and    al,0x22
  420edc:	out    dx,al
  420edd:	fs push ebp
  420edf:	and    dh,al
  420ee1:	popf   
  420ee2:	jecxz  0x420ede
  420ee4:	add    al,0x98
  420ee6:	stc    
  420ee7:	add    eax,0x8bc7cb04
  420eec:	sub    eax,0x7c2eb3f
  420ef1:	jns    0x420ec3
  420ef3:	dec    ecx
  420ef4:	daa    
  420ef5:	imul   ebp,esi,0x2e973441
  420efb:	xchg   edx,eax
  420efc:	loopne 0x420f41
  420efe:	ins    BYTE PTR es:[edi],dx
  420eff:	mov    al,0x69
  420f01:	add    eax,0xb99de93c
  420f06:	sbb    eax,0x485a528f
  420f0b:	xor    eax,0xed00faa7
  420f10:	push   ss
  420f11:	or     al,0xf3
  420f13:	data16 stos BYTE PTR es:[edi],al
  420f15:	mov    ah,0x8e
  420f17:	test   ah,bl
  420f19:	xlat   BYTE PTR ds:[ebx]
  420f1a:	push   es
  420f1b:	sub    eax,0x22801f7d
  420f20:	and    al,0x82
  420f22:	pop    eax
  420f23:	add    al,BYTE PTR [edx+0x5]
  420f26:	push   ds
  420f27:	adc    BYTE PTR [esp+eax*4],bl
  420f2a:	pop    edi
  420f2b:	mov    al,0x83
  420f2d:	xor    edi,DWORD PTR [eax-0x20ec4fc9]
  420f33:	add    cl,BYTE PTR [ecx+0x2c15b4ab]
  420f39:	dec    edx
  420f3a:	sub    bh,al
  420f3c:	mov    cl,0xeb
  420f3e:	arpl   WORD PTR [eax+ecx*1],sp
  420f41:	dec    esi
  420f42:	js     0x420f09
  420f44:	jns    0x420ede
  420f46:	ret    
  420f47:	(bad)  
  420f48:	adc    edi,DWORD PTR [ebp-0x196f2ea3]
  420f4e:	les    esp,FWORD PTR gs:[edi+eiz*4+0x19e086c]
  420f56:	pop    ss
  420f57:	and    al,0x18
  420f59:	jmp    0x420f02
  420f5b:	inc    ecx
  420f5c:	dec    esp
  420f5d:	mov    cs,ebp
  420f5f:	ret    
  420f60:	mov    ecx,0xec7cb480
  420f65:	ss jo  0x420f9a
  420f68:	xor    DWORD PTR [eax-0x32530af3],ebp
  420f6e:	arpl   ax,sp
  420f70:	mul    DWORD PTR [edx]
  420f72:	shr    DWORD PTR [ebp+0x8],0x62
  420f76:	retf   0x2625
  420f79:	xchg   ebx,eax
  420f7a:	mov    edx,0x93baaafd
  420f7f:	pop    ds
  420f80:	jmp    0xf895:0xb9744f93
  420f87:	aaa    
  420f88:	jne    0x420fdc
  420f8a:	mov    al,0xb4
  420f8c:	dec    esi
  420f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f8e:	mov    ah,0x83
  420f90:	push   esi
  420f91:	mov    edi,0x995ad65c
  420f96:	test   bl,ch
  420f98:	lods   al,BYTE PTR ds:[esi]
  420f99:	(bad)  
  420f9a:	cmp    dl,BYTE PTR [eax]
  420f9c:	sub    BYTE PTR [esi],ah
  420f9e:	nop
  420f9f:	push   ebx
  420fa0:	and    DWORD PTR [esi],ebp
  420fa2:	mov    edi,0xf896445
  420fa7:	aad    0x3e
  420fa9:	dec    ebp
  420faa:	call   0x1155b651
  420faf:	in     al,dx
  420fb0:	sar    BYTE PTR [esi],cl
  420fb2:	out    0x24,eax
  420fb4:	fucompp 
  420fb6:	xchg   ebp,eax
  420fb7:	aas    
  420fb8:	pop    DWORD PTR [eax]
  420fba:	test   DWORD PTR [edx-0x7e],ecx
  420fbd:	gs aam 0x6d
  420fc0:	in     eax,dx
  420fc1:	paddusb mm3,QWORD PTR [edi-0x7cfb48ec]
  420fc8:	adc    ebx,DWORD PTR [eax-0x66]
  420fcb:	stos   BYTE PTR es:[edi],al
  420fcc:	sub    ah,BYTE PTR [ecx]
  420fce:	fadd   DWORD PTR [eax+ecx*2+0x70]
  420fd2:	ret    0xeb06
  420fd5:	data16 hlt 
  420fd7:	stos   DWORD PTR es:[edi],eax
  420fd8:	push   esp
  420fd9:	popf   
  420fda:	add    DWORD PTR [esi],esp
  420fdc:	add    DWORD PTR [edi+0x79],ecx
  420fdf:	sahf   
  420fe0:	aaa    
  420fe1:	xor    al,0x90
  420fe3:	cmp    DWORD PTR [ebx+0x4f170c3d],0x7d
  420fea:	dec    edi
  420feb:	cwde   
  420fec:	pop    edx
  420fed:	je     0x420fb0
  420fef:	push   ss
  420ff0:	xchg   ebx,eax
  420ff1:	adc    ch,BYTE PTR [esp+ebp*4]
  420ff4:	popf   
  420ff5:	push   ebp
  420ff6:	push   edi
  420ff7:	pop    es
  420ff8:	add    eax,edi
  420ffa:	inc    esi
  420ffb:	repnz mov esi,0x9b4bb776
  421001:	pop    ss
  421002:	adc    BYTE PTR [esi+0x51],bl
  421005:	adc    eax,0x7926cfd0
  42100a:	cdq    
  42100b:	inc    esi
  42100c:	repnz fisub WORD PTR [ebx+0x5e]
  421010:	dec    edi
  421011:	retf   
  421012:	sub    esp,DWORD PTR [ecx+edx*4+0x28]
  421016:	fmul   QWORD PTR [ebx]
  421018:	jge    0x420faf
  42101a:	je     0x420faa
  42101c:	push   0x1e700d58
  421021:	mov    WORD PTR [edx+0x4d],cs
  421024:	sub    cl,BYTE PTR [edi]
  421026:	call   0xbd5bb7f5
  42102b:	stc    
  42102c:	mov    bl,BYTE PTR [eax-0x52]
  42102f:	jecxz  0x421080
  421031:	sbb    eax,0xde23414
  421036:	push   0xfd4b2697
  42103b:	lahf   
  42103c:	sbb    esi,esp
  42103e:	xchg   ebp,eax
  42103f:	dec    esi
  421040:	(bad)  
  421041:	lea    edi,[edi-0x25]
  421044:	mov    bl,0x2e
  421046:	cwde   
  421047:	es xor dl,ah
  42104a:	sbb    eax,0x9c5c29a4
  42104f:	inc    ebp
  421050:	(bad)  
  421051:	in     eax,0x1a
  421053:	cmove  ebp,DWORD PTR [esi+esi*2+0x25861efc]
  42105b:	jns    0x421095
  42105d:	sbb    al,BYTE PTR [edx+0x5bea1909]
  421063:	adc    al,0x57
  421065:	add    DWORD PTR [eax-0x2a5e5623],edx
  42106b:	dec    esp
  42106c:	inc    ebx
  42106d:	ds fwait
  42106f:	ins    BYTE PTR es:[edi],dx
  421070:	pop    ecx
  421071:	or     eax,0x6a2e16e7
  421076:	or     DWORD PTR [esi],0x29080461
  42107c:	das    
  42107d:	imul   edi,DWORD PTR [edx-0x713e81fa],0x474b72b9
  421087:	sub    BYTE PTR ds:0xd1648caf,dh
  42108d:	mov    cl,0xcf
  42108f:	stc    
  421090:	out    dx,al
  421091:	dec    ecx
  421092:	(bad)  
  421093:	jg     0x421055
  421095:	adc    BYTE PTR [eax+eax*2],al
  421098:	xchg   ah,ah
  42109a:	sub    ecx,ebp
  42109c:	retf   
  42109d:	popa   
  42109e:	dec    esp
  42109f:	xchg   esp,eax
  4210a0:	xchg   edi,eax
  4210a1:	inc    eax
  4210a2:	jae    0x4210c9
  4210a4:	mov    ebx,0xfcb71333
  4210a9:	inc    edi
  4210aa:	pop    edx
  4210ab:	xor    al,0x29
  4210ad:	cmp    DWORD PTR [ebx+0x10],0xffffffa3
  4210b1:	xchg   esi,eax
  4210b2:	(bad)  
  4210b3:	out    0x8f,al
  4210b5:	ds push esp
  4210b7:	ja     0x421087
  4210b9:	in     eax,0x37
  4210bb:	out    dx,eax
  4210bc:	xor    BYTE PTR [ecx],ch
  4210be:	enter  0xdd74,0xda
  4210c2:	pop    esp
  4210c3:	daa    
  4210c4:	and    ch,BYTE PTR [ecx+0x41]
  4210c7:	dec    esp
  4210c8:	stos   DWORD PTR es:[edi],eax
  4210c9:	inc    ebp
  4210ca:	and    BYTE PTR [ebx],dh
  4210cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210cd:	ins    DWORD PTR es:[edi],dx
  4210ce:	fs dec ecx
  4210d0:	xchg   ebp,eax
  4210d1:	stc    
  4210d2:	gs mov esp,0xf3fe6ab9
  4210d8:	cdq    
  4210d9:	mov    ebp,0x78b9237b
  4210de:	cmp    al,0xc0
  4210e0:	pop    esi
  4210e1:	mov    ch,BYTE PTR [esi+esi*1]
  4210e4:	or     al,0x50
  4210e6:	push   es
  4210e7:	test   DWORD PTR [ebx-0x59601188],eax
  4210ed:	ins    BYTE PTR es:[edi],dx
  4210ee:	push   esp
  4210ef:	and    dh,BYTE PTR [edi+0x265ba3d8]
  4210f5:	sbb    DWORD PTR [edx+edi*1+0x46],esi
  4210f9:	xchg   ebx,eax
  4210fa:	je     0x4210fe
  4210fc:	jne    0x42109d
  4210fe:	aam    0xff
  421100:	sti    
  421101:	std    
  421102:	push   ss
  421103:	inc    ebx
  421104:	adc    BYTE PTR [edx+0x1a6cb1da],bl
  42110a:	inc    ecx
  42110b:	ror    DWORD PTR [edx+0x5bb31006],cl
  421111:	or     eax,0xc3cf7b05
  421116:	mov    esp,0xd789af7a
  42111c:	sbb    ebp,DWORD PTR [ecx-0x13de41a4]
  421122:	(bad)  
  421123:	fucomp st(1)
  421125:	dec    esi
  421126:	jo     0x42111a
  421128:	dec    esi
  421129:	ret    
  42112a:	pushf  
  42112b:	sbb    eax,0x5a017f99
  421130:	adc    DWORD PTR [eax-0x50],0xbe768de5
  421137:	push   ds
  421138:	iret   
  421139:	mov    ds:0xe8625575,eax
  42113e:	cs out 0xcd,al
  421141:	xor    DWORD PTR [ebp-0x3da3df7f],edx
  421147:	inc    esi
  421148:	retf   
  421149:	push   ebp
  42114a:	dec    esp
  42114b:	mov    dl,0x1f
  42114d:	cld    
  42114e:	aas    
  42114f:	js     0x4210f2
  421151:	aas    
  421152:	aaa    
  421153:	das    
  421154:	pop    edx
  421155:	mov    esi,0xb77bcc21
  42115a:	arpl   dx,sp
  42115c:	int3   
  42115d:	fsubr  st(0),st
  42115f:	mov    ebx,0x70438435
  421164:	sub    eax,0x3137b9d
  421169:	dec    esp
  42116a:	fldcw  WORD PTR [ecx+0xc]
  42116d:	sahf   
  42116e:	xchg   ecx,eax
  42116f:	inc    ebx
  421170:	xor    eax,0x70f73b70
  421175:	or     DWORD PTR [ebp-0x2f],ebx
  421178:	cmp    eax,0x3d2417b6
  42117d:	ds retf 0x933e
  421181:	inc    ebp
  421182:	pushf  
  421183:	fiadd  DWORD PTR cs:[ecx]
  421186:	jmp    0x353a5719
  42118b:	jo     0x421188
  42118d:	addr16 gs pop ss
  421190:	sbb    eax,0x3af4f1cb
  421195:	or     dh,BYTE PTR [eax+0x1d]
  421198:	popa   
  421199:	mul    DWORD PTR [edi-0x39d1b102]
  42119f:	sbb    DWORD PTR [edx],ebx
  4211a1:	xchg   edi,eax
  4211a2:	cs push edx
  4211a4:	sbb    BYTE PTR [esi+0x67168356],0x6c
  4211ab:	dec    esi
  4211ac:	xchg   edx,eax
  4211ad:	aam    0x9c
  4211af:	outs   dx,BYTE PTR ds:[esi]
  4211b0:	mov    ds:0x678f6d8c,eax
  4211b5:	jmp    FWORD PTR ds:0x94d2356b
  4211bb:	repnz pop es
  4211bd:	mov    ebp,0x3ca4029b
  4211c2:	arpl   cx,ax
  4211c4:	jb     0x421178
  4211c6:	pop    eax
  4211c7:	dec    ebp
  4211c8:	shr    DWORD PTR [esi+0x67988d27],1
  4211ce:	xor    esp,DWORD PTR [ecx-0x2dbf6805]
  4211d4:	push   esi
  4211d5:	adc    ecx,DWORD PTR [esi+0x3f870ce8]
  4211db:	or     DWORD PTR [ebp-0x36],ebp
  4211de:	js     0x4211e4
  4211e0:	xlat   BYTE PTR ds:[ebx]
  4211e1:	mov    ds:0x5fb210d5,eax
  4211e6:	xchg   ebp,eax
  4211e7:	jmp    0x57bfd8d4
  4211ec:	push   0xffffffb5
  4211ee:	inc    ecx
  4211ef:	fidiv  DWORD PTR [ebp-0x5a5e7965]
  4211f5:	sbb    al,0xed
  4211f7:	pop    ecx
  4211f8:	mov    eax,ds:0xa4730c2f
  4211fd:	push   0xa841ccaf
  421202:	and    bl,BYTE PTR [ecx]
  421204:	ins    DWORD PTR es:[edi],dx
  421205:	push   esp
  421206:	retf   
  421207:	mov    esi,0xe4e8b8f4
  42120c:	cdq    
  42120d:	xchg   esp,eax
  42120e:	jge    0x421263
  421210:	add    dh,BYTE PTR ds:[ebp-0x57]
  421214:	pop    ebp
  421215:	push   ebx
  421216:	sbb    al,0x65
  421218:	iret   
  421219:	enter  0x8429,0x6d
  42121d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42121e:	adc    esp,DWORD PTR [eax]
  421220:	rol    BYTE PTR [eax+0x4611345a],cl
  421226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421227:	call   DWORD PTR [edx+0x4c3189ed]
  42122d:	test   al,0x5c
  42122f:	mul    BYTE PTR [ebx+0x6acfbe52]
  421235:	ds into 
  421237:	push   0x6a
  421239:	push   ebp
  42123a:	ds loope 0x421299
  42123d:	fidiv  WORD PTR [esi]
  42123f:	ret    
  421240:	popf   
  421241:	jp     0x421203
  421243:	mov    edx,0x5ccb2955
  421248:	pop    ebp
  421249:	and    al,0x97
  42124b:	popa   
  42124c:	loopne 0x42123d
  42124e:	pop    ss
  42124f:	fcomip st,st(7)
  421251:	mov    bh,0xbc
  421253:	ins    DWORD PTR es:[edi],dx
  421254:	aam    0xa2
  421256:	sbb    ebp,DWORD PTR [eax+0x34]
  421259:	xchg   ch,bh
  42125b:	lods   eax,DWORD PTR ds:[esi]
  42125c:	push   edx
  42125d:	xchg   ah,dh
  42125f:	xchg   BYTE PTR [edx-0x65afc9ce],dl
  421265:	outs   dx,BYTE PTR ds:[esi]
  421266:	(bad)  
  421267:	or     al,BYTE PTR [edi]
  421269:	ror    DWORD PTR [ebx-0x4480d95a],cl
  42126f:	inc    ecx
  421270:	jne    0x421255
  421272:	imul   edi,eax,0xe85cc7f5
  421278:	shr    BYTE PTR [eax],1
  42127a:	retf   
  42127b:	cmp    eax,0x8964713c
  421280:	and    DWORD PTR [ecx+0x59],ebx
  421283:	in     al,dx
  421284:	sub    al,0x6e
  421286:	aaa    
  421287:	jg     0x421219
  421289:	repnz xor DWORD PTR [edx],ebx
  42128c:	fsub   QWORD PTR [ecx]
  42128e:	call   0x20ae0fb7
  421293:	inc    esp
  421294:	das    
  421295:	scas   eax,DWORD PTR es:[edi]
  421296:	sbb    ch,ch
  421298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421299:	add    bh,dh
  42129b:	cmp    ecx,ebx
  42129d:	in     al,0x11
  42129f:	push   cs
  4212a0:	jo     0x4212cb
  4212a2:	int    0x41
  4212a4:	xor    BYTE PTR [edx],0x64
  4212a7:	inc    edx
  4212a8:	pop    es
  4212a9:	mov    BYTE PTR fs:[ebx+ecx*1-0x38],ch
  4212ae:	jae    0x421248
  4212b0:	push   eax
  4212b1:	and    bl,BYTE PTR [eax]
  4212b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212b4:	sub    bl,BYTE PTR [ebp+0x3b]
  4212b7:	cwde   
  4212b8:	xchg   ebx,eax
  4212b9:	inc    ebp
  4212ba:	xchg   edi,eax
  4212bb:	popf   
  4212bc:	push   ecx
  4212bd:	jmp    0x687f:0x6492ad40
  4212c4:	push   edi
  4212c5:	push   esi
  4212c6:	mov    DWORD PTR [ecx+0x308fc773],ebx
  4212cc:	sahf   
  4212cd:	add    eax,0x452d71cf
  4212d2:	adc    edi,DWORD PTR [ebx]
  4212d4:	inc    esi
  4212d5:	and    ebx,DWORD PTR [edi+0x45762e7e]
  4212db:	sub    BYTE PTR [edx+0x399df659],dl
  4212e1:	inc    ecx
  4212e2:	out    dx,al
  4212e3:	mov    eax,0xb89ebf62
  4212e8:	iret   
  4212e9:	je     0x42132f
  4212eb:	dec    ebx
  4212ec:	pop    ebx
  4212ed:	push   ds
  4212ee:	icebp  
  4212ef:	ficom  WORD PTR ds:[esi-0x422e0786]
  4212f6:	push   edx
  4212f7:	push   edi
  4212f8:	inc    ebp
  4212f9:	add    esp,esi
  4212fb:	in     eax,0x78
  4212fd:	cmp    esp,ecx
  4212ff:	mov    al,0xd4
  421301:	adc    al,0x35
  421303:	dec    edx
  421304:	push   cs
  421305:	(bad)  
  421306:	sbb    eax,0xeb534109
  42130b:	sub    DWORD PTR [ecx-0x3a1cdcfa],esp
  421311:	add    DWORD PTR [ebx],ebp
  421313:	xchg   edi,eax
  421314:	inc    esp
  421315:	bound  eax,QWORD PTR [ecx]
  421317:	pushf  
  421318:	fmul   DWORD PTR [ecx+0x59c700b7]
  42131e:	dec    esp
  42131f:	and    eax,0x6d617c8f
  421324:	(bad)  
  421325:	loop   0x4212f9
  421327:	add    al,0x5f
  421329:	loop   0x421345
  42132b:	cmp    DWORD PTR [edi],0x1b
  42132e:	push   cs
  42132f:	mov    edx,0x46d4ed5
  421334:	ins    BYTE PTR es:[edi],dx
  421335:	dec    edi
  421336:	fld    TBYTE PTR [esi-0x2d088774]
  42133c:	add    eax,DWORD PTR [edi]
  42133e:	xlat   BYTE PTR ds:[ebx]
  42133f:	jmp    0x42135f
  421341:	adc    BYTE PTR fs:[edi-0xb],bl
  421345:	mov    edx,0xcd78f60d
  42134a:	xchg   esp,eax
  42134b:	mov    edi,0x6784ef73
  421350:	pop    ss
  421351:	sub    BYTE PTR [esi+0x2c],bh
  421354:	adc    BYTE PTR [edx-0x62],0xf1
  421358:	bound  edi,QWORD PTR ds:0x4c8d9d1a
  42135e:	(bad)  
  42135f:	(bad)  
  421360:	dec    esi
  421361:	fld    TBYTE PTR [edx-0x5b61bb99]
  421367:	mov    esi,0xa58a4a4e
  42136c:	cmp    ebp,ebp
  42136e:	sub    al,0x86
  421370:	cmp    eax,0x96c09ea5
  421375:	xchg   esi,eax
  421376:	in     al,0xf0
  421378:	pop    edx
  421379:	or     eax,0xe8e2b55b
  42137e:	test   BYTE PTR ds:0x4ca64cd7,bh
  421384:	rcl    DWORD PTR [edx-0x557f5793],0x92
  42138b:	sbb    BYTE PTR [ebx-0x30],ah
  42138e:	pop    DWORD PTR [eax+0x4460b338]
  421394:	mov    esi,0x93e09efa
  421399:	and    BYTE PTR [edx+0x63],cl
  42139c:	imul   esp,DWORD PTR [eax-0x20],0xffffffd5
  4213a0:	int3   
  4213a1:	mov    ebp,0x67db090f
  4213a6:	sbb    BYTE PTR [esi],0x68
  4213a9:	test   eax,0xbf39dfd3
  4213ae:	add    bl,BYTE PTR [ebx+0x73]
  4213b1:	and    edx,edx
  4213b3:	pushf  
  4213b4:	and    ch,BYTE PTR [ecx+0x36c0eb95]
  4213ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213bb:	lahf   
  4213bc:	add    dh,BYTE PTR [edi-0x1d5d0c67]
  4213c2:	(bad)  
  4213c3:	lahf   
  4213c4:	push   es
  4213c5:	lods   eax,DWORD PTR ds:[esi]
  4213c6:	pop    esp
  4213c7:	xor    eax,esi
  4213c9:	inc    ecx
  4213ca:	inc    esi
  4213cb:	jmp    0x421446
  4213cd:	popf   
  4213ce:	es enter 0x2264,0xeb
  4213d3:	int    0x87
  4213d5:	sbb    dh,BYTE PTR [ebp-0x72744c33]
  4213db:	add    dh,al
  4213dd:	jp     0x42139c
  4213df:	mov    al,0x22
  4213e1:	cdq    
  4213e2:	sar    DWORD PTR [ebx],1
  4213e4:	out    dx,al
  4213e5:	fild   QWORD PTR [ecx]
  4213e7:	je     0x42141f
  4213e9:	sbb    bh,BYTE PTR [ebp+0x1a]
  4213ec:	loop   0x421447
  4213ee:	fisttp DWORD PTR [eax-0x40]
  4213f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213f2:	addr16 es pop eax
  4213f5:	mov    bl,0xaf
  4213f7:	fdivr  DWORD PTR [esi]
  4213f9:	pop    esi
  4213fa:	jl     0x421475
  4213fc:	ficom  DWORD PTR [ecx]
  4213fe:	jecxz  0x421442
  421400:	ds pop esi
  421402:	mul    BYTE PTR [edi]
  421404:	std    
  421405:	xor    ah,ch
  421407:	js     0x42147a
  421409:	jle    0x4213c0
  42140b:	imul   edx,DWORD PTR [ebx+0x4c],0x27a50d4
  421412:	test   al,cl
  421414:	cmp    ah,BYTE PTR [edi+ecx*2]
  421417:	je     0xa4798f28
  42141d:	jb     0x421469
  42141f:	jmp    0x4213ef
  421421:	mov    ebx,0xb4f13365
  421426:	(bad)  
  421428:	into   
  421429:	retf   0x8099
  42142c:	loop   0x421422
  42142e:	out    dx,eax
  42142f:	std    
  421430:	int    0x5b
  421432:	rcl    BYTE PTR [ebx+0x410303ee],0x40
  421439:	fs sti 
  42143b:	outs   dx,BYTE PTR ds:[esi]
  42143c:	and    ah,ah
  42143e:	ret    
  42143f:	cmp    DWORD PTR [eax-0x36],esp
  421442:	call   0xdc2a:0x70bb8e38
  421449:	mov    ebp,0xdeebf135
  42144e:	mov    bh,0x76
  421450:	mov    ebx,0x2b1568e4
  421455:	push   esi
  421456:	pushf  
  421457:	sub    al,0x1e
  421459:	jmp    0x7fe7f24a
  42145e:	or     eax,0xdb12c2b1
  421463:	cmp    al,0x51
  421465:	sbb    DWORD PTR [ebx+0x3dbdc675],0x37
  42146c:	mov    ebx,?
  42146e:	sub    al,0xb3
  421470:	(bad)  
  421472:	push   esi
  421473:	lods   al,BYTE PTR ds:[esi]
  421474:	std    
  421475:	stos   BYTE PTR es:[edi],al
  421476:	pop    esi
  421477:	jl     0x4213fb
  421479:	rol    esi,1
  42147b:	add    BYTE PTR [edx+0x7e01b070],dh
  421481:	push   cs
  421482:	mov    ch,0xe5
  421484:	cli    
  421485:	loope  0x4214c3
  421487:	and    DWORD PTR [edi+0x73191fe0],0x42
  42148e:	fst    st(0)
  421490:	out    dx,eax
  421491:	mov    edi,0x5878404e
  421496:	fbld   TBYTE PTR [edx]
  421498:	push   es
  421499:	js     0x421486
  42149b:	mov    ds:0xee6d68ed,eax
  4214a0:	out    dx,eax
  4214a1:	xor    DWORD PTR [ebp+0x4405bc47],edx
  4214a7:	jne    0x42150a
  4214a9:	and    esp,DWORD PTR [ebp+0x55bab237]
  4214af:	data16 and dh,BYTE PTR [edx-0x1d]
  4214b3:	sub    DWORD PTR [esi],ecx
  4214b5:	and    DWORD PTR [edi+edx*8-0xc563282],esp
  4214bc:	xor    bl,BYTE PTR [edx+0x5196d3bb]
  4214c2:	xor    eax,0xdb0d5da9
  4214c7:	jo     0x421539
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x282313f5
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x932fbf97
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	push   DWORD PTR [eax]
  4217ea:	and    DWORD PTR [eax-0x4740bcff],ebx
  4217f0:	cmc    
  4217f1:	repnz int3 
  4217f3:	push   cs
  4217f4:	ror    dl,1
  4217f6:	cmp    BYTE PTR [ebx+0x8],0xb9
  4217fa:	inc    eax
  4217fb:	mov    edi,0xccf6f5b8
  421800:	push   cs
  421801:	nop
  421802:	xor    eax,0x1087b7d
  421807:	inc    eax
  421808:	mov    edi,0xccf6f5b8
  42180d:	push   cs
  42180e:	shl    BYTE PTR ds:0x1087b7d,1
  421814:	inc    eax
  421815:	mov    edi,0xccf6f5b8
  42181a:	push   cs
  42181b:	shl    BYTE PTR ds:0x1087b7d,1
  421821:	inc    eax
  421822:	mov    edi,0xcc0ef5b8
  421827:	push   cs
  421828:	sar    BYTE PTR [ebx],1
  42182a:	(bad)
  42182f:	mov    dh,0x75
  421831:	aam    0x4e
  421833:	int    0x42
  421835:	sbb    eax,0x61132914
  42183a:	jb     0x42189c
  42183c:	iret   
  42183d:	retf   0x919a
  421840:	mov    esi,0x1e15bd6f
  421845:	sbb    ah,BYTE PTR [esi+0x6f]
  421848:	das    
  421849:	retf   
  42184a:	cwde   
  42184b:	xchg   edi,eax
  42184c:	xchg   ebx,eax
  42184d:	in     al,dx
  42184e:	jl     0x4217f5
  421850:	pop    ebx
  421851:	pop    ebp
  421852:	adc    ah,BYTE PTR [esi+0x21]
  421855:	add    al,0xf0
  421857:	jmp    0x42182e
  421859:	fwait
  42185a:	mov    ds:0x701bb56a,eax
  42185f:	jbe    0x421863
  421861:	and    eax,0xf5b8bf40
  421866:	test   ah,0xe
  421869:	xlat   BYTE PTR ds:[ebx]
  42186a:	lods   al,BYTE PTR ds:[esi]
  42186b:	and    DWORD PTR [edx],0xb5d2f94b
  421871:	sti    
  421872:	or     eax,0x284dc664
  421877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421878:	ja     0x42189d
  42187a:	ins    DWORD PTR es:[edi],dx
  42187b:	or     eax,0x6740e04a
  421880:	cld    
  421881:	xchg   esp,eax
  421882:	imul   ebp,eax,0x3f
  421885:	mov    edi,0x180b9a83
  42188a:	fiadd  DWORD PTR [ecx-0x63cb6101]
  421890:	ficomp DWORD PTR [ecx]
  421892:	repz inc edx
  421894:	add    al,BYTE PTR [edi-0x48]
  421897:	sub    eax,0xdd76bfb2
  42189c:	add    al,0x9a
  42189e:	int    0xef
  4218a0:	jno    0x4218e4
  4218a2:	add    DWORD PTR [ecx-0x4b],0xc6640de0
  4218a9:	dec    ebp
  4218aa:	sub    BYTE PTR [esi-0x6c0eac89],ah
  4218b0:	dec    edx
  4218b1:	add    BYTE PTR [eax+0x75],ah
  4218b4:	cld    
  4218b5:	xor    esi,0x1e253f42
  4218bb:	xor    eax,0x2a47480b
  4218c0:	jmp    FWORD PTR [esi+0x77da06a9]
  4218c6:	test   ecx,ebp
  4218c8:	add    bl,BYTE PTR [ecx+0x25]
  4218cb:	mov    al,0xb2
  4218cd:	mov    bh,0xe
  4218cf:	pop    esi
  4218d0:	add    al,0x82
  4218d2:	pop    esp
  4218d3:	push   ds
  4218d4:	adc    ecx,DWORD PTR [ebx-0x7]
  4218d7:	shl    BYTE PTR [ebp-0x33090a48],cl
  4218dd:	push   cs
  4218de:	shl    BYTE PTR ds:0x14d2b7d,1
  4218e4:	inc    eax
  4218e5:	repz mov ecx,0xde6cf6f7
  4218eb:	mov    ebx,0x87b7d7a
  4218f0:	add    DWORD PTR [eax-0x41],eax
  4218f3:	mov    eax,0xdcc16f5
  4218f8:	sar    DWORD PTR [esi],1
  4218fa:	jl     0x42196d
  4218fc:	or     BYTE PTR [ecx],al
  4218fe:	scas   al,BYTE PTR es:[edi]
  4218ff:	mov    ebx,0xca4af5b8
  421904:	push   cs
  421905:	shl    BYTE PTR ds:0xbc197b7d,1
  42190b:	inc    eax
  42190c:	mov    edi,0xccf6e5b8
  421911:	push   cs
  421912:	shl    BYTE PTR [eax],1
  421914:	jge    0x421991
  421916:	or     BYTE PTR [eax+0x40],al
  421919:	mov    edi,0xccf6f5a8
  42191e:	or     al,0xd0
  421920:	xor    eax,0x1097b78
  421925:	inc    eax
  421926:	mov    edi,0xccf3f5b8
  42192b:	(bad)  
  42192d:	xor    eax,0x1087b7d
  421932:	adc    BYTE PTR [ebx-0x330d0a48],dh
  421938:	push   cs
  421939:	rcl    ecx,1
  42193b:	js     0x4219b8
  42193d:	or     al,BYTE PTR [ecx]
  42193f:	inc    eax
  421940:	aas    
  421941:	mov    eax,0xecce6f5
  421946:	shl    BYTE PTR ds:0x11087b7d,0x40
  42194d:	mov    edi,0xccf6f5a8
  421952:	push   cs
  421953:	shl    BYTE PTR ds:0x1087b6d,1
  421959:	inc    eax
  42195a:	mov    edi,0xccf6f5b8
  42195f:	push   cs
  421960:	rol    cl,1
  421962:	inc    esp
  421963:	ja     0x42196d
  421965:	push   0xf5b8bf43
  42196a:	push   es
  42196b:	(bad)  
  42196c:	push   cs
  42196d:	lahf   
  42196e:	jl     0x4219ed
  421970:	jnp    0x42197a
  421972:	add    DWORD PTR [eax-0x41],eax
  421975:	mov    eax,0xeccf6f5
  42197a:	shl    BYTE PTR ds:0x1087b7d,1
  421980:	inc    eax
  421981:	mov    edi,0xccf6f5b8
  421986:	push   cs
  421987:	shl    BYTE PTR ds:0x1087b7d,1
  42198d:	inc    eax
  42198e:	mov    edi,0xccf6f5b8
  421993:	push   cs
  421994:	shl    BYTE PTR ds:0x1087b7d,1
  42199a:	inc    eax
  42199b:	mov    edi,0xccf6f5b8
  4219a0:	push   cs
  4219a1:	shl    BYTE PTR ds:0x1087b7d,1
  4219a7:	inc    eax
  4219a8:	mov    edi,0xccf6f5b8
  4219ad:	push   cs
  4219ae:	shl    BYTE PTR ds:0x1087b7d,1
  4219b4:	inc    eax
  4219b5:	mov    edi,0xccf6f5b8
  4219ba:	push   cs
  4219bb:	shl    BYTE PTR ds:0x1087b7d,1
  4219c1:	inc    eax
  4219c2:	mov    edi,0xccf6f5b8
  4219c7:	push   cs
  4219c8:	shl    BYTE PTR ds:0x1087b7d,1
  4219ce:	inc    eax
  4219cf:	mov    edi,0xccf6f5b8
  4219d4:	push   cs
  4219d5:	shl    BYTE PTR ds:0x75267b7d,1
  4219db:	and    eax,0xf6f5ccc7
  4219e0:	int3   
  4219e1:	push   cs
  4219e2:	xor    BYTE PTR [esi],bh
  4219e4:	jge    0x421a61
  4219e6:	sbb    BYTE PTR [ecx],al
  4219e8:	inc    eax
  4219e9:	mov    edi,0xccf6f16c
  4219ee:	or     dl,al
  4219f0:	xor    eax,0x334b3e2d
  4219f5:	adc    al,0xf0
  4219f7:	mov    eax,0xeccf6f5
  4219fc:	rcl    BYTE PTR ds:0x2fe87b7d,1
  421a02:	xor    cl,ah
  421a04:	retf   0xf696
  421a07:	int3   
  421a08:	push   cs
  421a09:	rcl    BYTE PTR [ebp+0x7d],1
  421a0c:	jnp    0x421a16
  421a0e:	icebp  
  421a0f:	dec    ebx
  421a10:	mov    edi,0xccf6afb8
  421a15:	push   cs
  421a16:	or     BYTE PTR [ecx],dh
  421a18:	jge    0x421a95
  421a1a:	or     BYTE PTR [ecx],al
  421a1c:	inc    eax
  421a1d:	mov    edi,0xccf6f5b8
  421a22:	push   cs
  421a23:	shl    BYTE PTR ds:0xe1087b5d,1
  421a29:	inc    eax
  421a2a:	mov    edi,0xccf6f5b8
  421a2f:	push   cs
  421a30:	shl    BYTE PTR ds:0x1087b7d,1
  421a36:	inc    eax
  421a37:	mov    edi,0xccf6f5b8
  421a3c:	push   cs
  421a3d:	shl    BYTE PTR ds:0x1087b7d,1
  421a43:	inc    eax
  421a44:	mov    edi,0xccf6f5b8
  421a49:	push   cs
  421a4a:	shl    BYTE PTR ds:0x1087b7d,1
  421a50:	inc    eax
  421a51:	mov    edi,0xccf6f5b8
  421a56:	push   cs
  421a57:	shl    BYTE PTR ds:0x1087b7d,1
  421a5d:	inc    eax
  421a5e:	mov    edi,0xccf6f5b8
  421a63:	push   cs
  421a64:	shl    BYTE PTR ds:0x1087b7d,1
  421a6a:	inc    eax
  421a6b:	mov    edi,0xccf6f5b8
  421a70:	push   cs
  421a71:	shl    BYTE PTR ds:0x1087b7d,1
  421a77:	inc    eax
  421a78:	mov    edi,0xccf6f5b8
  421a7d:	push   cs
  421a7e:	shl    BYTE PTR ds:0x1087b7d,1
  421a84:	inc    eax
  421a85:	mov    edi,0xccf6f5b8
  421a8a:	push   cs
  421a8b:	shl    BYTE PTR ds:0x1087b7d,1
  421a91:	inc    eax
  421a92:	mov    edi,0xccf6f5b8
  421a97:	push   cs
  421a98:	shl    BYTE PTR ds:0x1087b7d,1
  421a9e:	inc    eax
  421a9f:	mov    edi,0xccf6f5b8
  421aa4:	push   cs
  421aa5:	shl    BYTE PTR ds:0x1087b7d,1
  421aab:	inc    eax
  421aac:	mov    edi,0xccf6f5b8
  421ab1:	push   cs
  421ab2:	shl    BYTE PTR ds:0x1087b7d,1
  421ab8:	inc    eax
  421ab9:	mov    edi,0xccf6f5b8
  421abe:	push   cs
  421abf:	shl    BYTE PTR ds:0x1087b7d,1
  421ac5:	inc    eax
  421ac6:	mov    edi,0xccf6f5b8
  421acb:	push   cs
  421acc:	shl    BYTE PTR ds:0x1087b7d,1
  421ad2:	inc    eax
  421ad3:	mov    edi,0xccf6f5b8
  421ad8:	push   cs
  421ad9:	shl    BYTE PTR ds:0x1087b7d,1
  421adf:	inc    eax
  421ae0:	mov    edi,0xccf6f5b8
  421ae5:	push   cs
  421ae6:	shl    BYTE PTR ds:0x1087b7d,1
  421aec:	inc    eax
  421aed:	mov    edi,0xccf6f5b8
  421af2:	push   cs
  421af3:	shl    BYTE PTR ds:0x1087b7d,1
  421af9:	inc    eax
  421afa:	mov    edi,0xccf6f5b8
  421aff:	push   cs
  421b00:	shl    BYTE PTR ds:0x1087b7d,1
  421b06:	inc    eax
  421b07:	mov    edi,0xccf6f5b8
  421b0c:	push   cs
  421b0d:	shl    BYTE PTR ds:0x1087b7d,1
  421b13:	inc    eax
  421b14:	mov    edi,0xccf6f5b8
  421b19:	push   cs
  421b1a:	shl    BYTE PTR ds:0x1087b7d,1
  421b20:	inc    eax
  421b21:	mov    edi,0xccf6f5b8
  421b26:	push   cs
  421b27:	shl    BYTE PTR ds:0x1087b7d,1
  421b2d:	inc    eax
  421b2e:	mov    edi,0xccf6f5b8
  421b33:	push   cs
  421b34:	shl    BYTE PTR ds:0x1087b7d,1
  421b3a:	inc    eax
  421b3b:	mov    edi,0xccf6f5b8
  421b40:	push   cs
  421b41:	shl    BYTE PTR ds:0x1087b7d,1
  421b47:	inc    eax
  421b48:	mov    edi,0xccf6f5b8
  421b4d:	push   cs
  421b4e:	shl    BYTE PTR ds:0x1087b7d,1
  421b54:	inc    eax
  421b55:	mov    edi,0xccf6f5b8
  421b5a:	push   cs
  421b5b:	shl    BYTE PTR ds:0x1087b7d,1
  421b61:	inc    eax
  421b62:	mov    edi,0xccf6f5b8
  421b67:	push   cs
  421b68:	shl    BYTE PTR ds:0x1087b7d,1
  421b6e:	inc    eax
  421b6f:	mov    edi,0xccf6f5b8
  421b74:	push   cs
  421b75:	shl    BYTE PTR ds:0x1087b7d,1
  421b7b:	inc    eax
  421b7c:	mov    edi,0xccf6f5b8
  421b81:	push   cs
  421b82:	shl    BYTE PTR ds:0x1087b7d,1
  421b88:	inc    eax
  421b89:	mov    edi,0xccf6f5b8
  421b8e:	push   cs
  421b8f:	shl    BYTE PTR ds:0x1087b7d,1
  421b95:	inc    eax
  421b96:	mov    edi,0xccf6f5b8
  421b9b:	push   cs
  421b9c:	shl    BYTE PTR ds:0x1087b7d,1
  421ba2:	inc    eax
  421ba3:	mov    edi,0xccf6f5b8
  421ba8:	push   cs
  421ba9:	shl    BYTE PTR ds:0x1087b7d,1
  421baf:	inc    eax
  421bb0:	mov    edi,0xccf6f5b8
  421bb5:	push   cs
  421bb6:	shl    BYTE PTR ds:0x1087b7d,1
  421bbc:	inc    eax
  421bbd:	mov    edi,0xccf6f5b8
  421bc2:	push   cs
  421bc3:	shl    BYTE PTR ds:0x1087b7d,1
  421bc9:	inc    eax
  421bca:	mov    edi,0xccf6f5b8
  421bcf:	push   cs
  421bd0:	shl    BYTE PTR ds:0x1087b7d,1
  421bd6:	inc    eax
  421bd7:	mov    edi,0xccf6f5b8
  421bdc:	push   cs
  421bdd:	shl    BYTE PTR ds:0x1087b7d,1
  421be3:	inc    eax
  421be4:	mov    edi,0xccf6f5b8
  421be9:	popa   
  421bea:	js     0x421c2a
  421bec:	jge    0x421c42
  421bee:	or     BYTE PTR [ecx],al
  421bf0:	push   eax
  421bf1:	mov    edi,0x1654dfb8
  421bf6:	jg     0x421bae
  421bf8:	retf   0xe550
  421bfb:	(bad)  
  421bfc:	push   ecx
  421bfd:	lods   eax,DWORD PTR ds:[esi]
  421bfe:	mov    DWORD PTR [eax-0x1a],edx
  421c01:	inc    edx
  421c02:	pop    ecx
  421c03:	push   0x6827b1a1
  421c08:	mov    ecx,0x5cd256b6
  421c0d:	jg     0x421c86
  421c0f:	or     ah,BYTE PTR [eax]
  421c11:	mov    dl,0xa5
  421c13:	inc    edx
  421c14:	inc    edx
  421c15:	cmp    ecx,DWORD PTR [esi-0xf]
  421c18:	test   al,0x9a
  421c1a:	cmc    
  421c1b:	shr    DWORD PTR [ebx-0x7a],1
  421c1e:	test   DWORD PTR [eax+edx*1-0x2e],esp
  421c22:	cmp    bh,BYTE PTR [ebx*4-0x66af655]
  421c29:	adc    ch,BYTE PTR [edx]
  421c2b:	imul   edi,DWORD PTR [ecx-0x52],0xffffffbe
  421c2f:	daa    
  421c30:	stc    
  421c31:	fidiv  WORD PTR [ebp+0x6fd69157]
  421c37:	add    DWORD PTR [ecx],esp
  421c39:	lahf   
  421c3a:	push   eax
  421c3b:	ds jo  0x421c85
  421c3e:	adc    esp,edi
  421c40:	jbe    0x421c86
  421c42:	mov    al,0xe5
  421c44:	jae    0x421c93
  421c46:	mov    ah,0x27
  421c48:	cdq    
  421c49:	(bad)  
  421c4b:	ret    0xd38c
  421c4e:	adc    edi,edx
  421c50:	cmp    al,0x6f
  421c52:	pop    ebx
  421c53:	push   ebp
  421c54:	fld    TBYTE PTR [edi+0x24]
  421c57:	out    0xeb,al
  421c59:	xchg   edi,eax
  421c5a:	repz adc cl,cl
  421c5d:	ins    BYTE PTR es:[edi],dx
  421c5e:	adc    eax,0x3dc7878f
  421c63:	mov    ah,0x7a
  421c65:	imul   edi,ebp,0xfdc70a96
  421c6b:	ret    0x3a67
  421c6e:	adc    ebx,ecx
  421c70:	push   esi
  421c71:	mov    esp,0x31fdb56d
  421c76:	arpl   WORD PTR [ebp+0x6e51e381],ax
  421c7c:	jg     0x3f251eab
  421c82:	dec    eax
  421c83:	fstp   TBYTE PTR [esi]
  421c85:	add    al,0x5c
  421c87:	fs gs enter 0xae0e,0xa
  421c8d:	dec    edi
  421c8e:	mov    ds:0x1683b67c,al
  421c93:	cld    
  421c94:	adc    DWORD PTR [edi-0x29d28d3d],0x4e
  421c9b:	aaa    
  421c9c:	lahf   
  421c9d:	(bad)  
  421c9e:	fldenv [edi+edx*8]
  421ca1:	inc    eax
  421ca2:	push   ss
  421ca3:	mov    DWORD PTR [eax+0x737cd23f],edi
  421ca9:	or     edi,edi
  421cab:	ror    BYTE PTR [edx+edx*1-0x18a73618],cl
  421cb2:	scas   al,BYTE PTR es:[edi]
  421cb3:	lahf   
  421cb4:	outs   dx,BYTE PTR ds:[esi]
  421cb5:	aaa    
  421cb6:	frstor [eax+0x2244d202]
  421cbc:	pop    es
  421cbd:	inc    esi
  421cbe:	dec    BYTE PTR [edi]
  421cc0:	pop    es
  421cc1:	dec    ebx
  421cc2:	sbb    dh,ah
  421cc4:	jge    0x421d27
  421cc6:	mov    bl,0x47
  421cc8:	mov    ebp,0xf6e0267e
  421ccd:	cmp    BYTE PTR [ebp+0x3210e7f4],ch
  421cd3:	loope  0x421c55
  421cd5:	(bad)
  421cd8:	jecxz  0x421cea
  421cda:	mov    ah,0x63
  421cdc:	pop    ecx
  421cdd:	aad    0x94
  421cdf:	adc    BYTE PTR [edi],dl
  421ce1:	hlt    
  421ce2:	dec    eax
  421ce3:	aaa    
  421ce4:	xchg   edx,eax
  421ce5:	xor    al,0x82
  421ce7:	cwde   
  421ce8:	test   BYTE PTR [ebx-0x265f8f5a],cl
  421cee:	daa    
  421cef:	xchg   ecx,eax
  421cf0:	leave  
  421cf1:	std    
  421cf2:	mov    ds:0x26760b1f,al
  421cf7:	mov    ah,0x36
  421cf9:	jmp    0xac05:0xde8477c0
  421d00:	pop    ebx
  421d01:	rol    BYTE PTR [ebx-0x49],1
  421d04:	jmp    0x4974ec4e
  421d09:	dec    ecx
  421d0a:	xor    BYTE PTR [esi-0x6f],cl
  421d0d:	add    DWORD PTR [esi+edi*4+0x3d21aed1],edx
  421d14:	cdq    
  421d15:	fbstp  TBYTE PTR [eax+0x30c9bf07]
  421d1b:	mov    ebx,0xb7707e35
  421d20:	mov    ebp,0x3aeffee9
  421d25:	mov    bh,BYTE PTR [ecx+0x76aee1f8]
  421d2b:	lock dec esp
  421d2d:	cmp    BYTE PTR [ebx-0x62],bh
  421d30:	stc    
  421d31:	dec    ecx
  421d32:	scas   al,BYTE PTR es:[edi]
  421d33:	pop    edi
  421d34:	sar    DWORD PTR [esi],1
  421d36:	dec    ebx
  421d37:	hlt    
  421d38:	pop    edi
  421d39:	mov    DWORD PTR [eax+0x67],0x6520d22
  421d40:	scas   eax,DWORD PTR es:[edi]
  421d41:	call   0x119d:0x5d88914e
  421d48:	adc    esp,eax
  421d4a:	icebp  
  421d4b:	xor    DWORD PTR [edi-0x13],ebx
  421d4e:	fisubr DWORD PTR [eax]
  421d50:	mov    al,0xe7
  421d52:	addr16 mov cl,0xd5
  421d55:	test   BYTE PTR [ebp+0x21b8f133],0xc7
  421d5c:	sub    eax,0x499609c8
  421d61:	push   eax
  421d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d63:	push   esi
  421d64:	icebp  
  421d65:	xor    BYTE PTR [eax],dh
  421d67:	ss ja  0x421d4b
  421d6a:	jnp    0x421d32
  421d6c:	mov    al,ds:0xfd5a9bd2
  421d71:	cmp    esi,esp
  421d73:	fist   DWORD PTR [ebp-0x4e9115a3]
  421d79:	repz fdivr DWORD PTR [edi+0x35452eb1]
  421d80:	add    al,0xbe
  421d82:	nop
  421d83:	push   cs
  421d84:	jmp    0x421d95
  421d86:	std    
  421d87:	xchg   BYTE PTR [esi+0x5f3196c9],bh
  421d8d:	add    ah,BYTE PTR [ebx-0x6d59dcdd]
  421d93:	enter  0x2a19,0x70
  421d97:	imul   ebx,DWORD PTR [edi+edi*8+0x70],0x3931674d
  421d9f:	sub    cl,BYTE PTR [edx]
  421da1:	lahf   
  421da2:	ins    DWORD PTR es:[edi],dx
  421da3:	je     0x421de1
  421da5:	jecxz  0x421e06
  421da7:	xor    BYTE PTR [ebp-0x6d],dh
  421daa:	and    DWORD PTR [eax-0x3ef50403],esp
  421db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db1:	dec    esi
  421db2:	mov    edi,0x79983e7f
  421db7:	inc    eax
  421db8:	jmp    0x4e2f:0x1a3272d1
  421dbf:	out    dx,al
  421dc0:	lock jl 0x421d61
  421dc3:	fcomi  st,st(7)
  421dc5:	test   eax,0x1a496ee8
  421dca:	xchg   ebx,eax
  421dcb:	aam    0x5b
  421dcd:	adc    eax,0x1ae962c1
  421dd2:	ret    
  421dd3:	pusha  
  421dd4:	scas   eax,DWORD PTR es:[edi]
  421dd5:	mov    bl,0x39
  421dd7:	(bad)  
  421dd8:	dec    edi
  421dd9:	dec    si
  421ddb:	cmp    BYTE PTR [ecx+0x6d330caa],0x3a
  421de2:	test   DWORD PTR [esi],ecx
  421de4:	ja     0x421dde
  421de6:	xlat   BYTE PTR ds:[ebx]
  421de7:	jo     0x421d7f
  421de9:	xchg   ebp,eax
  421dea:	lea    ecx,[esi+0x7e87c36e]
  421df0:	mov    ah,0x86
  421df2:	sbb    al,0xce
  421df4:	inc    esp
  421df5:	mov    dl,0x88
  421df7:	in     al,0x43
  421df9:	aad    0x4c
  421dfb:	mov    ecx,0x163dd33b
  421e00:	or     al,0x64
  421e02:	rcl    DWORD PTR [edx+eax*8],1
  421e05:	(bad)  
  421e06:	jne    0x421e3f
  421e08:	dec    ecx
  421e09:	std    
  421e0a:	loopne 0x421e28
  421e0c:	rcr    DWORD PTR [edx+0x2f903e33],0x14
  421e13:	(bad)  
  421e14:	cmc    
  421e15:	rol    DWORD PTR [ebp+0x3993efd2],0x26
  421e1c:	fwait
  421e1d:	adc    al,0xb7
  421e1f:	bound  ebx,QWORD PTR [eax-0x72861480]
  421e25:	mov    al,0xb3
  421e27:	inc    ecx
  421e28:	pusha  
  421e29:	repnz cmp al,0xd7
  421e2c:	xlat   BYTE PTR ds:[ebx]
  421e2d:	pusha  
  421e2e:	out    0xe6,eax
  421e30:	in     al,0x8a
  421e32:	fmul   st,st(5)
  421e34:	in     al,0xb9
  421e36:	sub    ah,cl
  421e38:	mov    al,ds:0xfabe8705
  421e3d:	lea    esp,[edi+0x4e]
  421e40:	test   BYTE PTR [ecx-0x5c],0x23
  421e44:	stos   DWORD PTR es:[edi],eax
  421e45:	sbb    al,BYTE PTR [edx]
  421e47:	mov    esi,0x93fa29ee
  421e4c:	lahf   
  421e4d:	loopne 0x421dee
  421e4f:	sbb    BYTE PTR [esi+0x35],ah
  421e52:	inc    edx
  421e53:	mov    eax,0xedc3b341
  421e58:	scas   eax,DWORD PTR es:[edi]
  421e59:	xor    DWORD PTR [edi],esi
  421e5b:	int3   
  421e5c:	fimul  WORD PTR [edi+0x41391477]
  421e62:	call   0x46458d59
  421e67:	jg     0x421e57
  421e69:	xchg   edi,eax
  421e6a:	pop    ss
  421e6b:	je     0x421e6a
  421e6d:	cld    
  421e6e:	jmp    FWORD PTR [ecx]
  421e70:	and    esp,ecx
  421e72:	(bad)  
  421e73:	mov    ah,0xc4
  421e75:	xchg   edi,eax
  421e76:	push   es
  421e77:	mov    bh,0x6e
  421e79:	mov    ch,0x34
  421e7b:	push   ebp
  421e7c:	sub    BYTE PTR [edx-0x57bbe343],cl
  421e82:	(bad)  
  421e83:	stc    
  421e84:	mov    ah,ah
  421e86:	imul   ebx,DWORD PTR [edi+0x38],0xfffffff4
  421e8a:	jae    0x421e45
  421e8c:	shr    ecx,cl
  421e8e:	sbb    DWORD PTR [eax-0x43f7128b],0x7fcf15d9
  421e98:	in     al,dx
  421e99:	inc    esp
  421e9a:	or     al,0xd9
  421e9c:	je     0x421e33
  421e9e:	push   ecx
  421e9f:	shl    ch,0x3
  421ea2:	test   BYTE PTR [ebx],0xa6
  421ea5:	mov    ds:0x2e7b3e60,al
  421eaa:	or     eax,0x25781f9e
  421eaf:	jno    0x421ee6
  421eb1:	cwde   
  421eb2:	loopne 0x421e35
  421eb4:	rcl    BYTE PTR [edi-0x22],0xae
  421eb8:	and    ebx,DWORD PTR [ebx]
  421eba:	push   esi
  421ebb:	and    al,0xbd
  421ebd:	test   eax,0x854d8d4d
  421ec2:	je     0x421e93
  421ec4:	push   0x5b
  421ec6:	xchg   edx,eax
  421ec7:	les    ebp,FWORD PTR [eax+0x67]
  421eca:	cmp    al,0x8f
  421ecc:	add    ebx,ebx
  421ece:	outs   dx,BYTE PTR ds:[esi]
  421ecf:	jg     0x421f07
  421ed1:	out    dx,al
  421ed2:	sub    ebp,DWORD PTR [ebp+0x12]
  421ed5:	inc    edi
  421ed6:	push   edi
  421ed7:	inc    edi
  421ed8:	adc    DWORD PTR [ebx+ecx*8],ebp
  421edb:	jo     0x421f4f
  421edd:	push   ebx
  421ede:	outs   dx,DWORD PTR ds:[esi]
  421edf:	push   cs
  421ee0:	jl     0x421ea0
  421ee2:	push   ds
  421ee3:	pop    ebx
  421ee4:	out    dx,eax
  421ee5:	ja     0x421f55
  421ee7:	es aad 0xe6
  421eea:	xchg   esp,eax
  421eeb:	xchg   ebp,eax
  421eec:	xchg   ebx,eax
  421eed:	push   ss
  421eee:	imul   eax,eax,0x9582a7a2
  421ef4:	and    al,0x6
  421ef6:	mul    DWORD PTR [ebp-0x76465a75]
  421efc:	cmp    al,0x3c
  421efe:	sti    
  421eff:	xlat   BYTE PTR ds:[ebx]
  421f00:	fist   WORD PTR [edi]
  421f02:	mov    edx,0xf16703de
  421f07:	push   ds
  421f08:	adc    al,0x52
  421f0a:	jns    0x421f49
  421f0c:	fnsave ds:0x513f9602
  421f12:	push   eax
  421f13:	jge    0x421ef9
  421f15:	fs mov al,0xc0
  421f18:	xor    BYTE PTR [eax],ch
  421f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f1b:	addr16 imul ebp,eax,0xd45613ff
  421f22:	daa    
  421f23:	dec    esi
  421f24:	jbe    0x421f8a
  421f26:	mov    dl,0x6b
  421f28:	dec    ebx
  421f29:	dec    esp
  421f2a:	or     al,0xe8
  421f2c:	xor    DWORD PTR ds:0x7dd0e15f,edi
  421f32:	jns    0x421f36
  421f34:	dec    ebx
  421f35:	ret    0x94b6
  421f38:	sub    al,0x8f
  421f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f3b:	xchg   esp,eax
  421f3c:	mov    edx,0x871f928f
  421f41:	mov    dh,0x50
  421f43:	es pop es
  421f45:	sbb    ebx,esi
  421f47:	pop    ds
  421f48:	hlt    
  421f49:	lods   al,BYTE PTR ds:[esi]
  421f4a:	mov    edi,0x571d7ea7
  421f4f:	les    eax,FWORD PTR [ecx]
  421f51:	data16 (bad) 
  421f53:	jae    0x421f56
  421f55:	add    dl,bl
  421f57:	div    BYTE PTR [esi]
  421f59:	add    eax,0xbecb401c
  421f5e:	test   BYTE PTR [edi+0x25],bh
  421f61:	add    al,0xe2
  421f63:	jbe    0x421fb0
  421f65:	nop
  421f66:	or     ebx,ecx
  421f68:	rcr    BYTE PTR ds:0x2d69ddc5,0xf9
  421f6f:	in     eax,0xde
  421f71:	sti    
  421f72:	repnz pop esp
  421f74:	push   esi
  421f75:	call   0x8a6b:0xb847852b
  421f7c:	fadd   DWORD PTR [ecx+0x28e2f553]
  421f82:	lock sahf 
  421f84:	outs   dx,DWORD PTR ds:[esi]
  421f85:	(bad)  
  421f86:	(bad)  
  421f87:	and    bl,dl
  421f89:	sahf   
  421f8a:	out    dx,eax
  421f8b:	test   eax,0x80b803c2
  421f90:	pop    edi
  421f91:	test   BYTE PTR [ebp-0x1ceab96b],bh
  421f97:	pop    ss
  421f98:	fcom   QWORD PTR [esi+eiz*2-0x80]
  421f9d:	sub    esi,edx
  421f9f:	add    esi,esp
  421fa1:	ins    BYTE PTR es:[edi],dx
  421fa2:	or     dh,bh
  421fa4:	stc    
  421fa5:	push   ebx
  421fa6:	ins    BYTE PTR es:[edi],dx
  421fa7:	xor    ah,BYTE PTR [eax]
  421fa9:	scas   al,BYTE PTR es:[edi]
  421faa:	inc    esi
  421fab:	push   esi
  421fac:	fmul   DWORD PTR [edi-0x4a37ce6]
  421fb2:	sti    
  421fb3:	add    eax,0x45a8d149
  421fb8:	jp     0x421ffe
  421fba:	add    edi,DWORD PTR [ebp+0x66]
  421fbd:	lock jae 0x421f77
  421fc0:	stos   BYTE PTR es:[edi],al
  421fc1:	bound  esp,QWORD PTR [ebx]
  421fc3:	cmp    eax,0xdb70208d
  421fc8:	fisub  DWORD PTR [ebp-0x4]
  421fcb:	dec    edx
  421fcc:	jle    0x421f66
  421fce:	sbb    BYTE PTR [edi+eiz*1-0x139ce25f],0xc4
  421fd6:	jmp    0x5113a982
  421fdb:	inc    edx
  421fdc:	mov    WORD PTR [eax],fs
  421fde:	mov    edx,0xa3d6a104
  421fe3:	push   edx
  421fe4:	xchg   edi,eax
  421fe5:	sbb    edi,ebx
  421fe7:	js     0x421fe8
  421fe9:	out    dx,eax
  421fea:	loope  0x421fc1
  421fec:	sub    DWORD PTR [edi+0x324b03fb],ecx
  421ff2:	pop    eax
  421ff3:	dec    ebp
  421ff4:	xor    eax,esp
  421ff6:	mov    ds:0xa2640def,al
  421ffb:	jecxz  0x421f8f
  421ffd:	xchg   BYTE PTR [ebx+0x4355599a],bh
  422003:	mov    dl,0xa1
  422005:	jmp    0xd6e1:0x7bc1766a
  42200c:	sar    BYTE PTR [edi-0x2c1f9d16],0xa8
  422013:	xchg   ebp,eax
  422014:	mov    esi,0xd89268b8
  422019:	fst    DWORD PTR [ebp-0x77]
  42201c:	dec    ebp
  42201d:	pushf  
  42201e:	sbb    ebp,DWORD PTR [edi-0x2f47745c]
  422024:	shl    BYTE PTR [ebx],cl
  422026:	sahf   
  422027:	jo     0x422055
  422029:	cmp    bh,BYTE PTR [ebx-0x1b6fa501]
  42202f:	lea    edi,[edx+0x61]
  422032:	push   ebx
  422033:	add    eax,0xaf5a175f
  422038:	inc    esi
  422039:	fwait
  42203a:	les    ecx,FWORD PTR fs:[edi+0x74]
  42203e:	ins    DWORD PTR es:[edi],dx
  42203f:	xchg   ch,ch
  422041:	mov    WORD PTR [edi-0x67de30c9],cs
  422047:	adc    al,0x8a
  422049:	sbb    dl,BYTE PTR [ecx-0x78]
  42204c:	mov    edi,eax
  42204e:	mov    ecx,0x655e9616
  422053:	adc    BYTE PTR [ecx+0x11aa5eda],bl
  422059:	imul   BYTE PTR [ecx-0x11]
  42205c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42205d:	mov    ebx,0x52df64a1
  422062:	mov    esp,0x43b6c51b
  422067:	push   edx
  422068:	push   esp
  422069:	cmp    BYTE PTR [ebp-0x4a],cl
  42206c:	dec    ebp
  42206d:	and    ah,BYTE PTR [eax+0xb44be01]
  422073:	xor    ebp,eax
  422075:	pop    ebp
  422076:	pusha  
  422077:	enter  0x355e,0xf9
  42207b:	aam    0x77
  42207d:	inc    esp
  42207e:	cmp    ebp,DWORD PTR [ecx-0x69]
  422081:	ret    
  422082:	and    eax,0x5678b4dc
  422087:	push   0x862804ea
  42208c:	or     ebp,DWORD PTR [eax-0x67d9ea81]
  422092:	data16 stc 
  422094:	and    ah,dh
  422096:	scas   eax,DWORD PTR es:[edi]
  422097:	shl    DWORD PTR [ebx-0xed28264],cl
  42209d:	mov    ah,0x54
  42209f:	sbb    DWORD PTR [edx],0xffffffe0
  4220a2:	sbb    bl,BYTE PTR [edi-0x11bbd6f]
  4220a8:	pusha  
  4220a9:	cmp    al,0xb6
  4220ab:	push   edi
  4220ac:	dec    ebp
  4220ad:	leave  
  4220ae:	add    cl,BYTE PTR [edx-0x50bbd74a]
  4220b4:	or     ebx,DWORD PTR [ecx]
  4220b6:	popf   
  4220b7:	das    
  4220b8:	xchg   BYTE PTR [eiz*8+0x435d3a6d],bl
  4220bf:	dec    edi
  4220c0:	ins    DWORD PTR es:[edi],dx
  4220c1:	stos   DWORD PTR es:[edi],eax
  4220c2:	or     BYTE PTR [eax],dl
  4220c4:	shr    BYTE PTR [ebp-0x5c9faf29],cl
  4220ca:	retf   0x850b
  4220cd:	jmp    0x42205a
  4220cf:	sti    
  4220d0:	xchg   esp,eax
  4220d1:	inc    ebx
  4220d2:	fild   DWORD PTR [eax-0xd]
  4220d5:	xlat   BYTE PTR ds:[ebx]
  4220d6:	sbb    al,0x87
  4220d9:	dec    ecx
  4220da:	jb     0x422154
  4220dc:	je     0x4220e4
  4220de:	jmp    0xee382d32
  4220e3:	test   BYTE PTR [ecx+0x5c],al
  4220e6:	lods   al,BYTE PTR ds:[esi]
  4220e7:	push   esi
  4220e8:	jmp    0x12d7:0xbe0e0dad
  4220ef:	inc    ecx
  4220f0:	retf   
  4220f1:	popf   
  4220f2:	xor    ecx,DWORD PTR [ebp+0x66]
  4220f5:	inc    ecx
  4220f6:	push   edx
  4220f7:	(bad)  
  4220f8:	fld    TBYTE PTR [ebp-0x542690fd]
  4220fe:	in     al,0xb5
  422100:	and    dh,BYTE PTR [ebx+ebp*4-0x47]
  422104:	mov    dh,0xb2
  422106:	push   edx
  422107:	stos   BYTE PTR es:[edi],al
  422108:	xor    eax,ebx
  42210a:	mov    DWORD PTR [esi-0x6629b911],0x95bc034c
  422114:	clc    
  422115:	aaa    
  422116:	jnp    0x4220bf
  422118:	sub    edx,edx
  42211a:	in     al,dx
  42211b:	ja     0x422162
  42211d:	jae    0x42212c
  42211f:	mov    bh,0xb1
  422121:	ja     0x42214a
  422123:	jns    0x4220a5
  422125:	pusha  
  422126:	xor    al,0x7e
  422128:	xor    DWORD PTR [ebp+0x1e],esi
  42212b:	aas    
  42212c:	or     dh,BYTE PTR [edi-0xfcefe58]
  422132:	outs   dx,DWORD PTR ds:[esi]
  422133:	stc    
  422134:	push   ebp
  422135:	mov    esi,0x6cd66b6a
  42213a:	in     eax,dx
  42213b:	dec    ebp
  42213c:	bound  ecx,QWORD PTR [ecx-0x32b99f5f]
  422142:	push   ss
  422143:	cmp    edi,esi
  422145:	std    
  422146:	fiadd  DWORD PTR [ebx]
  422148:	das    
  422149:	xchg   ebx,eax
  42214a:	cmp    DWORD PTR [ecx],edi
  42214c:	and    esi,ebx
  42214e:	sbb    al,0x86
  422150:	push   DWORD PTR [ecx+0x4d]
  422153:	or     al,0xc0
  422155:	dec    esi
  422156:	arpl   bp,si
  422158:	jne    0x42211c
  42215a:	jbe    0x422177
  42215c:	dec    eax
  42215d:	aad    0x23
  42215f:	pop    ebx
  422160:	mov    al,0xd3
  422162:	popf   
  422163:	adc    bl,BYTE PTR [edx+ebp*2]
  422166:	dec    esp
  422167:	pop    eax
  422168:	cmp    edi,DWORD PTR [edi+0x0]
  42216b:	sub    al,0xa6
  42216d:	cmp    sp,WORD PTR [ecx-0x1b]
  422171:	ins    BYTE PTR es:[edi],dx
  422172:	ficomp WORD PTR [ecx+0x6880c520]
  422178:	or     eax,0x58bd5cad
  42217d:	mov    ah,al
  42217f:	and    BYTE PTR [edi-0x15],ah
  422182:	icebp  
  422183:	ins    DWORD PTR es:[edi],dx
  422184:	retf   
  422185:	xlat   BYTE PTR ds:[ebx]
  422186:	(bad)  
  422187:	xor    al,0x5
  422189:	test   eax,0xea1c380a
  42218e:	aad    0x1a
  422190:	sbb    ch,dh
  422192:	adc    BYTE PTR [ebp+eax*8+0x8],bl
  422196:	jne    0x42220d
  422198:	nop
  422199:	nop
  42219a:	lods   eax,DWORD PTR ds:[esi]
  42219b:	jle    0x42214c
  42219d:	jnp    0x422176
  42219f:	jg     0x422213
  4221a1:	lock rol DWORD PTR ds:0xc491605e,0x4c
  4221a9:	xchg   BYTE PTR [eax+ebp*8-0x3c],ch
  4221ad:	mov    bl,0x7f
  4221af:	retf   
  4221b0:	or     eax,0xd6478fc7
  4221b5:	aaa    
  4221b6:	add    dh,BYTE PTR [eax+0x29]
  4221b9:	fbld   TBYTE PTR [esi]
  4221bb:	sbb    DWORD PTR [esi-0x57],ebx
  4221be:	push   0x53e2197c
  4221c3:	mov    dl,0x54
  4221c5:	push   ebp
  4221c6:	xchg   esi,eax
  4221c7:	aad    0x7c
  4221c9:	sbb    al,0xe
  4221cb:	xor    ebx,edi
  4221cd:	in     al,0x45
  4221cf:	sub    DWORD PTR [ecx+esi*4-0x9d34e6d],eax
  4221d6:	in     eax,dx
  4221d7:	sbb    BYTE PTR [edx+0x4c030c5a],0x8d
  4221de:	xlat   BYTE PTR ds:[ebx]
  4221df:	jno    0x42221f
  4221e1:	repz add BYTE PTR [ecx],al
  4221e4:	cmp    DWORD PTR [eax],0xa423abf1
  4221ea:	dec    edi
  4221eb:	cmp    esp,0x3c
  4221ee:	mov    ?,WORD PTR [edi]
  4221f0:	scas   al,BYTE PTR es:[edi]
  4221f1:	mov    ds:0xb4a3921b,eax
  4221f6:	icebp  
  4221f7:	or     al,0xb0
  4221f9:	je     0x422201
  4221fb:	inc    edx
  4221fc:	adc    edx,DWORD PTR [edi+0x2c431d5c]
  422202:	fcom   QWORD PTR [ebx-0x73f0d5c1]
  422208:	lock xchg edi,eax
  42220a:	inc    ebx
  42220b:	jno    0x42225a
  42220d:	push   edx
  42220e:	or     DWORD PTR [edx],ebp
  422210:	call   0xdccb67f2
  422215:	push   ebp
  422216:	xor    ch,al
  422218:	sbb    eax,0xfcf3e006
  42221d:	push   0xa5e10b42
  422222:	pop    edx
  422223:	sub    ebx,DWORD PTR [esp+ebp*4-0x3a]
  422227:	and    DWORD PTR [eax],edi
  422229:	and    esi,DWORD PTR [edi+0x2a]
  42222c:	fnsave [edx+0x32]
  42222f:	pop    ebp
  422230:	out    0x65,eax
  422232:	xchg   DWORD PTR [esi+0xd],ecx
  422235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422236:	mov    al,0x9c
  422238:	xor    DWORD PTR [ecx],ecx
  42223a:	jnp    0x4221dd
  42223c:	fisubr WORD PTR [bp+si+0x72be]
  422241:	push   ebp
  422242:	stos   BYTE PTR es:[edi],al
  422243:	in     eax,0xad
  422245:	aaa    
  422246:	jo     0x422273
  422248:	inc    ecx
  422249:	pop    edi
  42224a:	or     DWORD PTR [ecx+eiz*4+0x51],eax
  42224e:	cmp    DWORD PTR [edx+0x25],edx
  422251:	mov    ebx,0xb3e18265
  422256:	dec    ecx
  422257:	xor    eax,0x3b5a2150
  42225c:	push   ebp
  42225d:	push   ss
  42225e:	lods   eax,DWORD PTR ds:[esi]
  42225f:	dec    eax
  422260:	sbb    bh,BYTE PTR [eax]
  422262:	sbb    eax,0xc4b1777e
  422267:	aad    0xf1
  422269:	pop    ebx
  42226a:	cmp    eax,0x2a2f0d64
  42226f:	fsubr  st(3),st
  422271:	mov    DWORD PTR [ebx+edi*1-0x74f5d70c],edi
  422278:	sbb    BYTE PTR [edx],0x3c
  42227b:	shl    BYTE PTR [esi+edx*1-0x1cf4b909],1
  422282:	sub    eax,DWORD PTR [ebx-0x1f3c2ac9]
  422288:	and    al,0x52
  42228a:	popa   
  42228b:	xor    al,0x65
  42228d:	jns    0x422241
  42228f:	mov    esp,0x8b1d4afa
  422294:	pop    ds
  422295:	ret    
  422296:	(bad)  
  422297:	rcl    ah,0x71
  42229a:	scas   eax,DWORD PTR es:[edi]
  42229b:	sub    edx,eax
  42229d:	pop    ds
  42229e:	pop    ds
  42229f:	scas   al,BYTE PTR es:[edi]
  4222a0:	xchg   ch,dl
  4222a2:	mov    dl,0x70
  4222a4:	push   ds
  4222a5:	inc    ebp
  4222a6:	sub    al,0x1a
  4222a8:	and    BYTE PTR [eax-0x78],cl
  4222ab:	xchg   esp,eax
  4222ac:	sub    DWORD PTR [ebx],ebp
  4222ae:	jl     0x4222a8
  4222b0:	mov    DWORD PTR [edi-0x360742da],ebx
  4222b6:	bound  edx,QWORD PTR [ecx-0x2cdaccda]
  4222bc:	dec    ebp
  4222bd:	sub    al,0x53
  4222bf:	add    DWORD PTR [edi],0x70e9e0f7
  4222c5:	fwait
  4222c6:	jmp    0x5731ac7
  4222cb:	je     0x4222ed
  4222cd:	jb     0x422331
  4222cf:	dec    edx
  4222d0:	sbb    al,0x10
  4222d2:	sahf   
  4222d3:	repz ja 0x42234b
  4222d6:	xor    ch,BYTE PTR [ebx]
  4222d8:	shr    BYTE PTR [ebx-0x22f855d5],cl
  4222de:	xor    eax,0xe71bf224
  4222e3:	push   ecx
  4222e4:	push   edx
  4222e5:	xlat   BYTE PTR ds:[ebx]
  4222e6:	xchg   edx,eax
  4222e7:	xor    DWORD PTR [ecx+edi*1-0x29],esp
  4222eb:	xchg   ecx,eax
  4222ec:	popa   
  4222ed:	xchg   esi,eax
  4222ee:	cmc    
  4222ef:	outs   dx,DWORD PTR ds:[esi]
  4222f0:	mov    edi,0xccf42aa8
  4222f5:	xchg   edx,eax
  4222f6:	nop
  4222f7:	xchg   esi,eax
  4222f8:	sbb    eax,ecx
  4222fa:	fisttp WORD PTR [edi+0x58]
  4222fd:	sbb    dl,BYTE PTR [ecx+0xc853662]
  422303:	dec    esp
  422304:	push   ebx
  422305:	(bad)
  422308:	adc    eax,DWORD PTR [ebp+ecx*1-0x7f4681cc]
  42230f:	imul   esp,DWORD PTR [esi-0x8bd992c],0xffffffb5
  422316:	cmp    ebp,DWORD PTR ds:0xeddbba70
  42231c:	int3   
  42231d:	jle    0x422327
  42231f:	xor    esi,ebx
  422321:	mov    eax,0x1251c579
  422326:	xchg   esp,eax
  422327:	fmul   QWORD PTR [ecx+0x17]
  42232a:	call   0xa736:0xdabac02e
  422331:	mov    bl,0x3d
  422333:	ret    0x15e3
  422336:	pushf  
  422337:	pop    edi
  422338:	mov    dl,0x53
  42233a:	push   0x4c
  42233c:	test   al,0x7e
  42233e:	test   al,0xc1
  422340:	fsubr  DWORD PTR [edi+0x49]
  422343:	les    eax,FWORD PTR [ebp-0x1]
  422346:	es jbe 0x4223bb
  422349:	mov    al,ds:0xaed0a74e
  42234e:	dec    esp
  42234f:	xor    BYTE PTR [esi+0x230e205b],dh
  422355:	push   ebx
  422356:	cli    
  422357:	pop    ebp
  422358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422359:	enter  0x1b1e,0x32
  42235d:	sbb    ebx,ebx
  42235f:	aad    0xc
  422361:	(bad)
  422364:	les    edx,FWORD PTR [eax]
  422366:	mov    eax,0xdad7b721
  42236b:	mov    cl,0xe2
  42236d:	sbb    bh,BYTE PTR [eax+eiz*4]
  422370:	mov    dl,0x61
  422372:	or     al,0xf
  422374:	mov    esp,0xca6bddcb
  422379:	xchg   DWORD PTR [ebx+0x1a],ebx
  42237c:	adc    al,0x70
  42237e:	retf   
  42237f:	jmp    0xddef:0x58789c0
  422386:	mov    BYTE PTR [edi+0x32],0x16
  42238a:	in     al,dx
  42238b:	scas   eax,DWORD PTR es:[edi]
  42238c:	out    dx,al
  42238d:	xlat   BYTE PTR ds:[ebx]
  42238e:	or     ebp,DWORD PTR [ebx+0xd]
  422391:	jb     0x42233a
  422393:	in     al,dx
  422394:	aad    0x7a
  422396:	iret   
  422397:	gs in  eax,dx
  422399:	fcmove st,st(0)
  42239b:	mov    ds:0xa98c053d,eax
  4223a0:	cs iret 
  4223a2:	in     al,dx
  4223a3:	inc    edx
  4223a4:	call   0x2c5f18a2
  4223a9:	sbb    al,cl
  4223ab:	dec    ebx
  4223ac:	mov    es,WORD PTR [edx+eax*2]
  4223af:	and    BYTE PTR [eax],dl
  4223b1:	jb     0x422431
  4223b3:	aaa    
  4223b4:	jp     0x422367
  4223b6:	shl    edi,0x96
  4223b9:	arpl   WORD PTR ds:0xbb5e418d,cx
  4223bf:	add    al,0xff
  4223c1:	sti    
  4223c2:	rcr    DWORD PTR [eax-0x2],0x15
  4223c6:	xchg   ebp,eax
  4223c7:	pop    ecx
  4223c8:	or     esi,DWORD PTR [eax]
  4223ca:	or     DWORD PTR [edi-0x6c628e16],esi
  4223d0:	push   cs
  4223d1:	call   0x3f76:0x5b340799
  4223d8:	or     dh,dh
  4223da:	jmp    FWORD PTR [eax+0x7df27dea]
  4223e0:	adc    DWORD PTR [edx+0xbcb5891],esi
  4223e6:	cmp    al,0x45
  4223e8:	or     al,0x77
  4223ea:	xor    eax,0x8ccc73ba
  4223ef:	add    edi,DWORD PTR [edx]
  4223f1:	pop    esi
  4223f2:	sbb    al,0x3f
  4223f4:	mov    al,ds:0x77dac0e7
  4223f9:	in     al,dx
  4223fa:	and    al,0xfc
  4223fc:	dec    ecx
  4223fd:	dec    edi
  4223fe:	stos   BYTE PTR es:[edi],al
  4223ff:	dec    esi
  422400:	xor    BYTE PTR [eax],ah
  422402:	ficomp DWORD PTR [ebx+edi*1+0x20]
  422406:	push   esp
  422407:	lods   eax,DWORD PTR ds:[esi]
  422408:	mov    ds:0x90c929ec,eax
  42240d:	adc    BYTE PTR [esi-0x7bc940c3],dl
  422413:	or     DWORD PTR [eax],0x0
  422416:	iret   
  422417:	(bad)  
  422419:	je     0x422456
  42241b:	sbb    DWORD PTR [ebx-0x45780208],0xffffff8b
  422422:	scas   eax,DWORD PTR es:[edi]
  422423:	xchg   ecx,eax
  422424:	xor    al,0x6e
  422426:	mov    dl,0x56
  422428:	jp     0x422457
  42242a:	add    BYTE PTR [esi+ecx*1+0x7a],dh
  42242e:	std    
  42242f:	call   0xd0ce:0x587265ad
  422436:	inc    ecx
  422437:	push   cs
  422438:	bound  edx,QWORD PTR [ebx+0xf]
  42243b:	fcom   DWORD PTR gs:[esi+0x49]
  42243f:	adc    DWORD PTR [edx-0x16],edx
  422442:	(bad)  
  422443:	mov    eax,0x56a096b7
  422448:	adc    al,BYTE PTR [edi]
  42244a:	dec    ecx
  42244b:	and    eax,0x9fd4a917
  422450:	xchg   ebp,eax
  422451:	sub    eax,0xc6346d40
  422456:	mov    esp,0x15b2b702
  42245b:	mov    ecx,0xc780cbcd
  422460:	pop    eax
  422461:	shr    eax,1
  422463:	aam    0x54
  422465:	leave  
  422466:	rcl    BYTE PTR [ebp+eiz*1+0x2d],0xf9
  42246b:	jnp    0x4224d7
  42246d:	fs jmp 0x2299:0x6373357f
  422475:	fs ins DWORD PTR es:[edi],dx
  422477:	cmp    ax,0x155b
  42247b:	cmp    BYTE PTR [esi-0x2b8b5f3a],dh
  422481:	ins    DWORD PTR es:[edi],dx
  422482:	lods   al,BYTE PTR ds:[esi]
  422483:	jmp    0x84d6:0x59a7cb9b
  42248a:	ins    DWORD PTR es:[edi],dx
  42248b:	out    0xc9,al
  42248d:	xchg   edx,eax
  42248e:	shl    eax,1
  422490:	jae    0x4224fe
  422492:	mov    dl,BYTE PTR [ebx-0x14]
  422495:	adc    al,0x8d
  422497:	retf   
  422498:	sub    DWORD PTR [esi+0x37941ce1],esi
  42249e:	(bad)  
  42249f:	shl    BYTE PTR [edx],cl
  4224a1:	dec    edx
  4224a2:	in     al,dx
  4224a3:	mov    edi,0xf907b3eb
  4224a8:	xchg   ebp,eax
  4224a9:	fsincos 
  4224ab:	imul   esp,DWORD PTR [ecx-0x15db35f0],0x37c133b7
  4224b5:	mov    eax,0x718bc74d
  4224ba:	cmp    al,0x2b
  4224bc:	and    al,bl
  4224be:	mov    DWORD PTR ds:0x227e3034,ebx
  4224c4:	(bad)  
  4224c5:	ja     0x422546
  4224c7:	cld    
  4224c8:	xchg   edi,eax
  4224c9:	jmp    0xfa9c:0x730f3d6f
  4224d0:	mov    ebx,0xc37ee34
  4224d5:	adc    al,0x11
  4224d7:	fs cmp eax,0x29c9e9de
  4224dd:	push   ebp
  4224de:	cmp    esi,DWORD PTR [edx-0x2d323e0c]
  4224e4:	or     cl,al
  4224e6:	jno    0x4224e8
  4224e8:	into   
  4224e9:	inc    ebx
  4224ea:	mov    bh,0xe0
  4224ec:	xchg   ecx,eax
  4224ed:	cmp    al,0x4e
  4224ef:	mov    edx,0x8a6f5f26
  4224f4:	xchg   ecx,eax
  4224f5:	jge    0x4224bc
  4224f7:	and    ecx,eax
  4224f9:	jge    0x4224bd
  4224fb:	dec    ecx
  4224fc:	xchg   BYTE PTR [esi-0x69af2e94],bl
  422502:	(bad)  
  422503:	jle    0x4224b1
  422505:	cmp    dl,BYTE PTR [edi+0x7f607bfb]
  42250b:	popf   
  42250c:	cmp    edi,DWORD PTR [ebp+0x666a54d7]
  422512:	fstp   QWORD PTR [esi]
  422514:	call   0xf4a2607d
  422519:	xchg   ebx,ebx
  42251b:	sub    edi,DWORD PTR [ecx+0x46a8f1ab]
  422521:	imul   edx,DWORD PTR [ecx+0x57338fc0],0x70
  422528:	xlat   BYTE PTR ds:[ebx]
  422529:	push   esp
  42252a:	pop    esp
  42252b:	xchg   edi,eax
  42252c:	and    al,0xa4
  42252e:	dec    edi
  42252f:	or     eax,0xa0a67e95
  422534:	pop    ebp
  422535:	aas    
  422536:	repnz loop 0x422558
  422539:	mov    ecx,0x1de6b6eb
  42253e:	or     DWORD PTR [eax+0x30d477c6],eax
  422544:	cwde   
  422545:	aad    0x47
  422547:	xchg   edx,eax
  422548:	jmp    eax
  42254a:	mov    WORD PTR [edx-0x2d732e35],fs
  422550:	fstp   DWORD PTR [esi-0x55]
  422553:	xchg   BYTE PTR [eax+eiz*4-0x166cadfc],dl
  42255a:	scas   al,BYTE PTR es:[edi]
  42255b:	loop   0x42251c
  42255d:	jmp    0xe795b86
  422562:	jnp    0x4225d0
  422564:	sbb    al,BYTE PTR [esi-0x1aaedb12]
  42256a:	lds    edx,FWORD PTR [eax+edi*2-0xde1db4a]
  422571:	jne    0x4225b3
  422573:	dec    edx
  422574:	aam    0x7c
  422576:	mov    al,ds:0x27108175
  42257b:	shl    BYTE PTR [esi],1
  42257d:	and    eax,DWORD PTR [edi+0xe]
  422580:	mov    edx,0x874316a0
  422585:	mov    ch,0x18
  422587:	cmp    al,0xae
  422589:	fwait
  42258a:	or     al,0x37
  42258c:	adc    DWORD PTR [ebp+0x5e],edi
  42258f:	stc    
  422590:	sbb    ah,BYTE PTR ds:0x84c9dacb
  422596:	mov    esp,DWORD PTR [ebx+eiz*1+0x61]
  42259a:	or     eax,0x87e11e56
  42259f:	xchg   edi,eax
  4225a0:	add    eax,0x5f895b09
  4225a5:	mov    eax,0x60e15779
  4225aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ab:	or     esp,DWORD PTR [eax-0x2e0dc767]
  4225b1:	mov    al,ds:0xbc21d687
  4225b6:	mov    ecx,0x929c0db4
  4225bb:	cmp    eax,0xe22d4057
  4225c0:	push   eax
  4225c1:	sahf   
  4225c2:	(bad)  
  4225c3:	std    
  4225c4:	push   ds
  4225c5:	cli    
  4225c6:	dec    esp
  4225c7:	call   0x5c32:0x890bc4e3
  4225ce:	and    ebx,edx
  4225d0:	cmc    
  4225d1:	xchg   edx,eax
  4225d3:	retf   0xb589
  4225d6:	retf   0x6cc9
  4225d9:	dec    ecx
  4225da:	js     0x42262e
  4225dc:	jl     0x4225bc
  4225de:	je     0x42265a
  4225e0:	cmp    al,0xd3
  4225e2:	sar    BYTE PTR [edi+esi*8+0x78656892],1
  4225e9:	fcom   DWORD PTR [eax]
  4225eb:	dec    edx
  4225ec:	mov    ecx,0xad3eb5b5
  4225f1:	xchg   DWORD PTR [ebx+0x6],ecx
  4225f4:	int    0xa7
  4225f6:	mov    cl,0xdb
  4225f8:	dec    esp
  4225f9:	test   eax,0x46f183e3
  4225fe:	cmp    BYTE PTR [ecx+0x75687d2a],bl
  422604:	hlt    
  422605:	cs pop esp
  422607:	aas    
  422608:	mov    dh,0x86
  42260a:	push   0xffffffef
  42260c:	(bad)
  42260f:	xor    al,0xc9
  422611:	mov    al,ds:0x5a099ba6
  422616:	xor    ah,BYTE PTR [esi+eax*1]
  422619:	sbb    bl,ah
  42261b:	xlat   BYTE PTR ds:[ebx]
  42261c:	jle    0x422618
  42261e:	dec    esi
  42261f:	sub    BYTE PTR [edx],0x57
  422622:	sub    al,0x2
  422624:	push   edi
  422625:	mov    DWORD PTR [edx+0x2ec97d67],eax
  42262b:	mov    ch,0x18
  42262d:	cmp    eax,0x50b5299d
  422632:	popf   
  422633:	add    esp,DWORD PTR [edi+0x28]
  422636:	add    dh,dh
  422638:	pushf  
  422639:	cmc    
  42263a:	(bad)  
  42263b:	mov    ds:0xd35137c,al
  422640:	ss cld 
  422642:	or     eax,esi
  422644:	dec    esp
  422645:	adc    al,0x86
  422647:	add    BYTE PTR [edx+0x28ff00ee],dl
  42264d:	fstp   QWORD PTR [edi+0x3b]
  422650:	dec    ebp
  422651:	ss aam 0x83
  422654:	pcmpeqw mm3,QWORD PTR [ecx+0x29]
  422658:	cmp    al,BYTE PTR [ecx-0x3a]
  42265b:	in     eax,0x8e
  42265d:	dec    ebx
  42265e:	sub    DWORD PTR [eax+ebp*8],0xcb403fa
  422665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422666:	rcr    DWORD PTR [eax-0x109f92d7],0x3d
  42266d:	hlt    
  42266e:	jae    0x422623
  422670:	das    
  422671:	iret   
  422672:	retf   
  422673:	retf   0x7790
  422676:	fsubr  DWORD PTR [edx-0x6f975798]
  42267c:	jge    0x4226e0
  42267e:	rdpmc  
  422680:	push   edi
  422681:	hlt    
  422682:	call   0xcf78baec
  422687:	push   eax
  422688:	inc    edi
  422689:	in     eax,0xbe
  42268b:	loop   0x42261a
  42268d:	adc    eax,0xcec9d9ec
  422692:	xchg   ebp,eax
  422693:	mov    edx,DWORD PTR [ebx]
  422695:	mov    cl,0x37
  422697:	sbb    al,0xfe
  422699:	lock mov ds:0x372bb376,eax
  42269f:	mov    al,0xcd
  4226a1:	je     0x4226e0
  4226a3:	mov    ds:0x46ead3da,eax
  4226a8:	xchg   ecx,eax
  4226a9:	jecxz  0x4226d3
  4226ab:	or     eax,0x224b609
  4226b0:	lods   eax,DWORD PTR ds:[esi]
  4226b1:	jmp    ebx
  4226b3:	repz xor eax,0xa409af5c
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	rcl    DWORD PTR [edi],0x51
  4226bd:	rcr    DWORD PTR [ecx+0x2e],cl
  4226c0:	lods   al,BYTE PTR ds:[esi]
  4226c1:	inc    ebp
  4226c2:	cmp    DWORD PTR [ebp-0x11],eax
  4226c5:	outs   dx,BYTE PTR ds:[esi]
  4226c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c8:	and    ecx,eax
  4226ca:	call   0x3b2b:0x2638b543
  4226d1:	or     esi,eax
  4226d3:	in     eax,0x14
  4226d5:	cmp    al,0x1c
  4226d7:	jle    0x422671
  4226d9:	aam    0x85
  4226db:	inc    esp
  4226dc:	popa   
  4226dd:	hlt    
  4226de:	pop    ebx
  4226df:	into   
  4226e0:	ss gs (bad) 
  4226e3:	addr16 (bad) 
  4226e5:	enter  0x2e9a,0x49
  4226e9:	aam    0x1
  4226eb:	adc    al,0x4
  4226ed:	fadd   QWORD PTR [edi+esi*2+0x2f051d55]
  4226f4:	mov    ebx,fs
  4226f6:	pop    edi
  4226f7:	sbb    cl,BYTE PTR [ecx+0x1e]
  4226fa:	leave  
  4226fb:	cmp    cl,BYTE PTR [ecx+0x4a]
  4226fe:	call   0xa421:0x768b1a21
  422705:	ins    BYTE PTR es:[edi],dx
  422706:	ins    BYTE PTR es:[edi],dx
  422707:	mov    bl,0xf2
  422709:	cwde   
  42270a:	nop
  42270b:	cld    
  42270c:	lods   eax,DWORD PTR ds:[esi]
  42270d:	pop    edx
  42270e:	clc    
  42270f:	lock push esp
  422711:	fcomp  DWORD PTR [esi+0x4f9629a0]
  422717:	xchg   dh,al
  422719:	shr    BYTE PTR [ecx],1
  42271b:	jmp    0xd7a7:0x94aabdce
  422722:	adc    eax,0x64181dc3
  422727:	cwde   
  422728:	add    eax,0x714566b3
  42272d:	push   esp
  42272e:	fld    DWORD PTR [ecx-0xfaee639]
  422734:	vpshaw xmm7,[ecx+0x17],xmm2
  42273a:	or     eax,0x9d256811
  42273f:	push   eax
  422740:	mov    esi,0xbc08202d
  422745:	mov    dh,0xce
  422747:	dec    esi
  422748:	mul    DWORD PTR [eax+0x4d471f95]
  42274e:	push   0x69
  422750:	fs jo  0x422763
  422753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422754:	mov    ebx,0xc08b8e49
  422759:	cmp    eax,edx
  42275b:	push   esp
  42275c:	loope  0x42274c
  42275e:	sub    edi,esi
  422760:	dec    edx
  422761:	dec    esi
  422762:	mov    BYTE PTR [ebx-0x68],dh
  422765:	stc    
  422766:	xchg   edx,eax
  422767:	jo     0x4227d3
  422769:	sub    bh,ch
  42276b:	out    dx,eax
  42276c:	lods   eax,DWORD PTR ds:[esi]
  42276d:	int    0x99
  42276f:	push   esp
  422770:	jmp    0x68d4:0x3049e91d
  422777:	pop    esi
  422778:	nop
  422779:	sbb    cl,BYTE PTR [esi-0x55]
  42277c:	(bad)  
  42277d:	not    BYTE PTR [edi-0x70]
  422780:	fadd   QWORD PTR [esi-0x74cbda2c]
  422786:	pop    ss
  422787:	cmp    BYTE PTR [ebx],0x2b
  42278a:	jmp    0xe6e:0x7a1afb57
  422791:	cs sub eax,0x4162c85a
  422797:	sar    DWORD PTR [esi+edx*4+0x377b6aee],cl
  42279e:	xlat   BYTE PTR ds:[ebx]
  42279f:	jns    0x422771
  4227a1:	push   cs
  4227a2:	xchg   DWORD PTR [ebx-0x76],esi
  4227a5:	ret    0xa041
  4227a8:	out    dx,eax
  4227a9:	inc    eax
  4227aa:	das    
  4227ab:	push   ds
  4227ac:	xor    al,0x8c
  4227ae:	sbb    dl,ah
  4227b0:	add    eax,DWORD PTR [eax]
  4227b2:	xchg   ebp,eax
  4227b3:	test   al,0x99
  4227b5:	(bad)  
  4227b6:	dec    ebx
  4227b7:	sbb    al,0x1b
  4227b9:	cmp    BYTE PTR [esi-0x33017f69],bh
  4227bf:	pusha  
  4227c0:	outs   dx,DWORD PTR ds:[esi]
  4227c1:	cld    
  4227c2:	mov    al,ds:0x5d784cd0
  4227c7:	adc    eax,0xa4dc772
  4227cc:	mov    dh,0x22
  4227ce:	adc    eax,0xa7776e51
  4227d3:	sub    BYTE PTR [edi+0x60],bl
  4227d6:	mov    WORD PTR [edi-0x65],es
  4227d9:	pushf  
  4227da:	xchg   ecx,eax
  4227db:	retf   
  4227dc:	dec    ecx
  4227dd:	mov    fs:0x321656f4,al
  4227e3:	pop    edx
  4227e4:	fidivr DWORD PTR [ecx]
  4227e6:	and    eax,0x9c78bc9d
  4227eb:	clc    
  4227ec:	xchg   ebp,eax
  4227ed:	xchg   esp,eax
  4227ee:	lods   eax,DWORD PTR ds:[esi]
  4227ef:	jne    0x4227aa
  4227f1:	aaa    
  4227f2:	int    0x36
  4227f4:	xor    DWORD PTR [eax+0x71809],ebx
  4227fa:	sar    DWORD PTR [edx-0x14],cl
  4227fd:	sub    al,0x9e
  4227ff:	mov    bl,BYTE PTR [edi+eiz*2]
  422802:	cdq    
  422803:	std    
  422804:	pop    esp
  422805:	jle    0x4227f2
  422807:	and    DWORD PTR [edi-0x3],eax
  42280a:	pop    eax
  42280b:	fiadd  WORD PTR [eax-0x26]
  42280e:	dec    ebx
  42280f:	or     edi,edx
  422811:	aam    0xf2
  422813:	cmp    ecx,eax
  422815:	xchg   ebp,eax
  422816:	mov    bh,BYTE PTR [edx+0x6009b28f]
  42281c:	add    bh,al
  42281e:	ffree  st(3)
  422820:	mov    bl,0x20
  422822:	adc    BYTE PTR [esi+0xc],bl
  422825:	test   BYTE PTR [ebp-0x2df39437],cl
  42282b:	fiadd  DWORD PTR [eax]
  42282d:	jmp    esi
  42282f:	xchg   DWORD PTR [edx],edi
  422831:	sub    ebp,DWORD PTR [edi+esi*8]
  422834:	mov    ds:0xa2ed8ac0,al
  422839:	sub    DWORD PTR [edi-0x38],esi
  42283c:	jne    0x422804
  42283e:	mov    DWORD PTR [esi-0x69],ebp
  422841:	sub    eax,0x1cf6930
  422846:	retf   0x1ac0
  422849:	aam    0x95
  42284b:	sbb    ecx,DWORD PTR [esi-0x253cb135]
  422851:	jns    0x422826
  422853:	ins    DWORD PTR es:[edi],dx
  422854:	dec    esp
  422855:	cld    
  422856:	in     eax,0x7f
  422858:	pop    ebp
  422859:	pop    eax
  42285a:	call   0x5523:0xe44d2c24
  422861:	test   al,0xcb
  422863:	push   edx
  422864:	in     al,dx
  422865:	mov    BYTE PTR [edx+0x33a10ca5],ah
  42286b:	mov    BYTE PTR [ecx+esi*1],ch
  42286e:	cdq    
  42286f:	adc    DWORD PTR [edi+0x6c],ebx
  422872:	nop
  422873:	mov    ah,0xf1
  422875:	cmp    eax,0x4c7030c
  42287a:	test   edi,ecx
  42287c:	repz in eax,dx
  42287e:	ins    BYTE PTR es:[edi],dx
  42287f:	mov    bl,0xb3
  422881:	pop    ecx
  422882:	hlt    
  422883:	loop   0x4228bd
  422885:	fisub  DWORD PTR [ebp+0x76c4e09]
  42288b:	or     DWORD PTR [edi+0x2a],0xffffffcd
  42288f:	sti    
  422890:	sbb    al,0x33
  422892:	mov    bh,0x7b
  422894:	int    0xcb
  422896:	mov    eax,0xb030e165
  42289b:	dec    ebx
  42289c:	rcr    BYTE PTR ds:0x8dbbc8d4,cl
  4228a2:	add    eax,0x3b33ba74
  4228a7:	or     al,0xc5
  4228a9:	pop    es
  4228aa:	jg     0x422875
  4228ac:	rcl    DWORD PTR [esp+0xd],0xf8
  4228b1:	stos   DWORD PTR es:[edi],eax
  4228b2:	pop    edi
  4228b3:	sub    BYTE PTR [ebx-0x21],dl
  4228b6:	xor    DWORD PTR [edx],0x52
  4228b9:	arpl   WORD PTR [edx+0x32],si
  4228bc:	shr    DWORD PTR [ebx-0x19eaf1a8],1
  4228c2:	push   ebp
  4228c3:	aam    0x13
  4228c5:	add    ebx,esp
  4228c7:	mov    dh,0x5d
  4228c9:	and    eax,0x8ad78f5b
  4228ce:	ss (bad) 
  4228d0:	xchg   ecx,eax
  4228d1:	imul   eax,DWORD PTR [ecx+0x664c336d],0xffffffd3
  4228d8:	inc    esi
  4228d9:	stos   DWORD PTR es:[edi],eax
  4228da:	mov    WORD PTR ds:0x163cf085,fs
  4228e0:	adc    DWORD PTR [ebp-0x68],ecx
  4228e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228e4:	xor    ch,BYTE PTR ds:0x5d351ca5
  4228ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228eb:	adc    dh,bl
  4228ed:	push   edx
  4228ee:	jmp    0x20ebdeb6
  4228f3:	test   al,0x3f
  4228f5:	adc    al,0x78
  4228f7:	mov    dl,0x4f
  4228f9:	retf   
  4228fa:	ja     0x4228be
  4228fc:	fisub  DWORD PTR [ebp+0x31]
  4228ff:	and    BYTE PTR [ebx],dh
  422901:	push   0x9d5ed70
  422906:	push   0x3e
  422908:	push   es
  422909:	mov    edi,DWORD PTR [esi+0x67]
  42290c:	jecxz  0x4228c5
  42290e:	xlat   BYTE PTR ds:[ebx]
  42290f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422910:	call   0xe63dabca
  422915:	xor    eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
