
55eafdbf9c15c5fdcbee6f61ebd8cd15d0c943d9b90e8f288d6b4c6f42d00494.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x8
  401006:	mov    DWORD PTR [ebp-0x4],0x0
  40100d:	jmp    0x401018
  40100f:	mov    eax,DWORD PTR [ebp-0x4]
  401012:	add    eax,0x1
  401015:	mov    DWORD PTR [ebp-0x4],eax
  401018:	mov    ecx,DWORD PTR [ebp-0x4]
  40101b:	cmp    ecx,DWORD PTR [ebp+0x10]
  40101e:	jge    0x401033
  401020:	mov    edx,DWORD PTR [ebp+0xc]
  401023:	mov    DWORD PTR [ebp-0x8],edx
  401026:	mov    eax,DWORD PTR [ebp+0x8]
  401029:	add    eax,DWORD PTR [ebp-0x4]
  40102c:	mov    cl,BYTE PTR [ebp-0x8]
  40102f:	mov    BYTE PTR [eax],cl
  401031:	jmp    0x40100f
  401033:	mov    esp,ebp
  401035:	pop    ebp
  401036:	ret    
  401037:	int3   
  401038:	int3   
  401039:	int3   
  40103a:	int3   
  40103b:	int3   
  40103c:	int3   
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	sub    esp,0x174
  401049:	pusha  
  40104a:	mov    DWORD PTR ds:0x445e48,ebp
  401050:	mov    DWORD PTR [ebp-0x148],0x0
  40105a:	lea    eax,[ebp-0x128]
  401060:	push   eax
  401061:	push   0x20019
  401066:	push   0x0
  401068:	push   0x44406c
  40106d:	push   0x80000002
  401072:	call   DWORD PTR ds:0x4448ec
  401078:	lea    ecx,[ebp-0x128]
  40107e:	push   ecx
  40107f:	push   0x20019
  401084:	push   0x0
  401086:	push   0x444080
  40108b:	mov    edx,DWORD PTR [ebp-0x128]
  401091:	push   edx
  401092:	call   DWORD PTR ds:0x4448ec
  401098:	test   eax,eax
  40109a:	je     0x4010a8
  40109c:	xor    eax,eax
  40109e:	jmp    0x401458
  4010a3:	jmp    0x4011f6
  4010a8:	mov    eax,ds:0x4445d4
  4010ad:	mov    DWORD PTR [ebp-0x15c],eax
  4010b3:	mov    DWORD PTR [ebp-0x138],0x402938
  4010bd:	mov    DWORD PTR [ebp-0x128],0x0
  4010c7:	mov    DWORD PTR [ebp-0x114],0x0
  4010d1:	mov    DWORD PTR [ebp-0x140],0x64
  4010db:	mov    DWORD PTR [ebp-0x11c],0x2
  4010e5:	mov    DWORD PTR [ebp-0x148],0x0
  4010ef:	mov    DWORD PTR [ebp-0x124],0x0
  4010f9:	mov    DWORD PTR [ebp-0x13c],0x1
  401103:	mov    DWORD PTR [ebp-0x148],0x0
  40110d:	mov    DWORD PTR [ebp-0x124],0x0
  401117:	mov    DWORD PTR [ebp-0x13c],0x1
  401121:	mov    DWORD PTR [ebp-0x118],0x3
  40112b:	push   0x104
  401130:	lea    ecx,[ebp-0x110]
  401136:	push   ecx
  401137:	call   DWORD PTR ds:0x4445d8
  40113d:	call   0x401650
  401142:	mov    edx,DWORD PTR [ebp-0x138]
  401148:	push   edx
  401149:	call   0x401760
  40114e:	add    esp,0x4
  401151:	mov    DWORD PTR [ebp-0x14c],eax
  401157:	mov    eax,ds:0x444014
  40115c:	push   eax
  40115d:	lea    ecx,[ebp-0x110]
  401163:	push   ecx
  401164:	call   DWORD PTR ds:0x4445dc
  40116a:	lea    edx,[ebp+eax*1-0x110]
  401171:	push   edx
  401172:	call   DWORD PTR ds:0x4445e0
  401178:	push   0x0
  40117a:	push   0x80
  40117f:	push   0x3
  401181:	push   0x0
  401183:	mov    eax,DWORD PTR [ebp-0x118]
  401189:	push   eax
  40118a:	mov    ecx,DWORD PTR [ebp-0x13c]
  401190:	push   ecx
  401191:	lea    edx,[ebp-0x110]
  401197:	push   edx
  401198:	call   DWORD PTR [ebp-0x15c]
  40119e:	mov    DWORD PTR [ebp-0x12c],eax
  4011a4:	cmp    DWORD PTR [ebp-0x12c],0xffffffff
  4011ab:	je     0x4011b6
  4011ad:	cmp    DWORD PTR [ebp-0x12c],0x0
  4011b4:	jne    0x4011bd
  4011b6:	xor    eax,eax
  4011b8:	jmp    0x401458
  4011bd:	mov    eax,DWORD PTR [ebp-0x14c]
  4011c3:	push   eax
  4011c4:	call   0x401770
  4011c9:	add    esp,0x4
  4011cc:	mov    DWORD PTR [ebp-0x144],eax
  4011d2:	mov    ecx,DWORD PTR [ebp-0x14c]
  4011d8:	push   ecx
  4011d9:	push   0x0
  4011db:	mov    edx,DWORD PTR [ebp-0x144]
  4011e1:	push   edx
  4011e2:	call   0x401000
  4011e7:	add    esp,0xc
  4011ea:	mov    eax,DWORD PTR [ebp-0x14c]
  4011f0:	mov    DWORD PTR [ebp-0x154],eax
  4011f6:	mov    ecx,DWORD PTR [ebp-0x148]
  4011fc:	cmp    ecx,DWORD PTR [ebp-0x14c]
  401202:	jae    0x40128e
  401208:	mov    edx,DWORD PTR [ebp-0x154]
  40120e:	push   edx
  40120f:	mov    eax,DWORD PTR [ebp-0x140]
  401215:	push   eax
  401216:	call   0x401520
  40121b:	add    esp,0x8
  40121e:	mov    DWORD PTR [ebp-0x158],eax
  401224:	mov    ecx,DWORD PTR [ebp-0x158]
  40122a:	push   ecx
  40122b:	mov    edx,DWORD PTR [ebp-0x138]
  401231:	add    edx,DWORD PTR [ebp-0x124]
  401237:	push   edx
  401238:	mov    eax,DWORD PTR [ebp-0x144]
  40123e:	add    eax,DWORD PTR [ebp-0x148]
  401244:	push   eax
  401245:	call   0x401700
  40124a:	add    esp,0xc
  40124d:	mov    ecx,DWORD PTR [ebp-0x11c]
  401253:	add    ecx,DWORD PTR [ebp-0x140]
  401259:	add    ecx,DWORD PTR [ebp-0x124]
  40125f:	mov    DWORD PTR [ebp-0x124],ecx
  401265:	mov    edx,DWORD PTR [ebp-0x148]
  40126b:	add    edx,DWORD PTR [ebp-0x140]
  401271:	mov    DWORD PTR [ebp-0x148],edx
  401277:	mov    eax,DWORD PTR [ebp-0x154]
  40127d:	sub    eax,DWORD PTR [ebp-0x158]
  401283:	mov    DWORD PTR [ebp-0x154],eax
  401289:	jmp    0x4011f6
  40128e:	mov    ecx,DWORD PTR [ebp-0x14c]
  401294:	push   ecx
  401295:	mov    edx,DWORD PTR [ebp-0x144]
  40129b:	push   edx
  40129c:	call   0x401550
  4012a1:	add    esp,0x8
  4012a4:	mov    DWORD PTR [ebp-0x124],0x0
  4012ae:	mov    DWORD PTR [ebp-0x160],0x0
  4012b8:	mov    DWORD PTR [ebp-0x170],0x442330
  4012c2:	mov    eax,DWORD PTR [ebp-0x170]
  4012c8:	push   eax
  4012c9:	call   0x401760
  4012ce:	add    esp,0x4
  4012d1:	mov    DWORD PTR [ebp-0x164],eax
  4012d7:	mov    ecx,DWORD PTR [ebp-0x164]
  4012dd:	push   ecx
  4012de:	call   0x401770
  4012e3:	add    esp,0x4
  4012e6:	mov    DWORD PTR [ebp-0x120],eax
  4012ec:	mov    edx,DWORD PTR [ebp-0x164]
  4012f2:	push   edx
  4012f3:	push   0x0
  4012f5:	mov    eax,DWORD PTR [ebp-0x120]
  4012fb:	push   eax
  4012fc:	call   0x401000
  401301:	add    esp,0xc
  401304:	mov    ecx,DWORD PTR [ebp-0x164]
  40130a:	mov    DWORD PTR [ebp-0x16c],ecx
  401310:	mov    edx,DWORD PTR [ebp-0x160]
  401316:	cmp    edx,DWORD PTR [ebp-0x164]
  40131c:	jae    0x4013a8
  401322:	mov    eax,DWORD PTR [ebp-0x16c]
  401328:	push   eax
  401329:	mov    ecx,DWORD PTR [ebp-0x140]
  40132f:	push   ecx
  401330:	call   0x401520
  401335:	add    esp,0x8
  401338:	mov    DWORD PTR [ebp-0x174],eax
  40133e:	mov    edx,DWORD PTR [ebp-0x174]
  401344:	push   edx
  401345:	mov    eax,DWORD PTR [ebp-0x170]
  40134b:	add    eax,DWORD PTR [ebp-0x124]
  401351:	push   eax
  401352:	mov    ecx,DWORD PTR [ebp-0x120]
  401358:	add    ecx,DWORD PTR [ebp-0x160]
  40135e:	push   ecx
  40135f:	call   0x401700
  401364:	add    esp,0xc
  401367:	mov    edx,DWORD PTR [ebp-0x11c]
  40136d:	add    edx,DWORD PTR [ebp-0x140]
  401373:	add    edx,DWORD PTR [ebp-0x124]
  401379:	mov    DWORD PTR [ebp-0x124],edx
  40137f:	mov    eax,DWORD PTR [ebp-0x160]
  401385:	add    eax,DWORD PTR [ebp-0x140]
  40138b:	mov    DWORD PTR [ebp-0x160],eax
  401391:	mov    ecx,DWORD PTR [ebp-0x16c]
  401397:	sub    ecx,DWORD PTR [ebp-0x174]
  40139d:	mov    DWORD PTR [ebp-0x16c],ecx
  4013a3:	jmp    0x401310
  4013a8:	mov    edx,DWORD PTR [ebp-0x164]
  4013ae:	push   edx
  4013af:	mov    eax,DWORD PTR [ebp-0x120]
  4013b5:	push   eax
  4013b6:	call   0x401550
  4013bb:	add    esp,0x8
  4013be:	mov    ecx,DWORD PTR [ebp-0x144]
  4013c4:	mov    edx,DWORD PTR [ebp-0x120]
  4013ca:	mov    DWORD PTR [ecx],edx
  4013cc:	push   0x41000
  4013d1:	call   0x401770
  4013d6:	add    esp,0x4
  4013d9:	mov    DWORD PTR [ebp-0x4],eax
  4013dc:	lea    eax,[ebp-0x128]
  4013e2:	push   eax
  4013e3:	push   0x20019
  4013e8:	push   0x0
  4013ea:	push   0x444108
  4013ef:	push   0x80000002
  4013f4:	call   DWORD PTR ds:0x4448ec
  4013fa:	test   eax,eax
  4013fc:	je     0x401402
  4013fe:	xor    eax,eax
  401400:	jmp    0x401458
  401402:	push   0x3e600
  401407:	mov    ecx,DWORD PTR [ebp-0x144]
  40140d:	push   ecx
  40140e:	mov    edx,DWORD PTR [ebp-0x4]
  401411:	add    edx,0x300
  401417:	push   edx
  401418:	call   0x401700
  40141d:	add    esp,0xc
  401420:	mov    eax,DWORD PTR [ebp-0x4]
  401423:	sub    eax,0x400000
  401428:	push   eax
  401429:	mov    ecx,DWORD PTR [ebp-0x4]
  40142c:	push   ecx
  40142d:	mov    edx,DWORD PTR [ebp-0x120]
  401433:	push   edx
  401434:	call   0x401460
  401439:	add    esp,0xc
  40143c:	mov    esp,DWORD PTR ds:0x445e48
  401442:	pop    ecx
  401443:	mov    eax,DWORD PTR [ebp-0x4]
  401446:	add    eax,0x3e5c0
  40144b:	mov    DWORD PTR [ebp-0x134],eax
  401451:	push   DWORD PTR [ebp-0x134]
  401457:	ret    
  401458:	mov    esp,ebp
  40145a:	pop    ebp
  40145b:	ret    
  40145c:	int3   
  40145d:	int3   
  40145e:	int3   
  40145f:	int3   
  401460:	push   ebp
  401461:	mov    ebp,esp
  401463:	sub    esp,0x14
  401466:	mov    eax,DWORD PTR [ebp+0x8]
  401469:	cmp    DWORD PTR [eax+0x4],0x0
  40146d:	je     0x401510
  401473:	mov    DWORD PTR [ebp-0x14],0x5d
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	mov    edx,DWORD PTR [ecx+0x4]
  401480:	sub    edx,0x8
  401483:	shr    edx,1
  401485:	mov    DWORD PTR [ebp-0xc],edx
  401488:	mov    eax,DWORD PTR [ebp+0x8]
  40148b:	add    eax,0x8
  40148e:	mov    DWORD PTR [ebp-0x10],eax
  401491:	mov    DWORD PTR [ebp-0x4],0x0
  401498:	jmp    0x4014a3
  40149a:	mov    ecx,DWORD PTR [ebp-0x4]
  40149d:	add    ecx,0x1
  4014a0:	mov    DWORD PTR [ebp-0x4],ecx
  4014a3:	mov    edx,DWORD PTR [ebp-0x4]
  4014a6:	cmp    edx,DWORD PTR [ebp-0xc]
  4014a9:	jae    0x4014ff
  4014ab:	mov    eax,DWORD PTR [ebp-0x4]
  4014ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4014b1:	movzx  edx,WORD PTR [ecx+eax*2]
  4014b5:	sar    edx,0xc
  4014b8:	cmp    edx,0x3
  4014bb:	jne    0x4014fd
  4014bd:	mov    eax,DWORD PTR [ebp-0x4]
  4014c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4014c3:	movzx  edx,WORD PTR [ecx+eax*2]
  4014c7:	and    edx,0xfff
  4014cd:	add    edx,0x143
  4014d3:	mov    DWORD PTR [ebp-0x8],edx
  4014d6:	mov    eax,DWORD PTR [ebp+0x8]
  4014d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4014dc:	add    ecx,DWORD PTR [eax]
  4014de:	mov    edx,DWORD PTR [ebp-0x8]
  4014e1:	mov    eax,DWORD PTR [ecx+edx*1-0x143]
  4014e8:	add    eax,DWORD PTR [ebp+0x10]
  4014eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4014ee:	mov    edx,DWORD PTR [ebp+0xc]
  4014f1:	add    edx,DWORD PTR [ecx]
  4014f3:	mov    ecx,DWORD PTR [ebp-0x8]
  4014f6:	mov    DWORD PTR [edx+ecx*1-0x143],eax
  4014fd:	jmp    0x40149a
  4014ff:	mov    edx,DWORD PTR [ebp+0x8]
  401502:	mov    eax,DWORD PTR [ebp+0x8]
  401505:	add    eax,DWORD PTR [edx+0x4]
  401508:	mov    DWORD PTR [ebp+0x8],eax
  40150b:	jmp    0x401466
  401510:	mov    esp,ebp
  401512:	pop    ebp
  401513:	ret    
  401514:	int3   
  401515:	int3   
  401516:	int3   
  401517:	int3   
  401518:	int3   
  401519:	int3   
  40151a:	int3   
  40151b:	int3   
  40151c:	int3   
  40151d:	int3   
  40151e:	int3   
  40151f:	int3   
  401520:	push   ebp
  401521:	mov    ebp,esp
  401523:	sub    esp,0x8
  401526:	mov    eax,DWORD PTR [ebp+0x8]
  401529:	mov    DWORD PTR [ebp-0x4],eax
  40152c:	mov    ecx,DWORD PTR [ebp+0xc]
  40152f:	mov    DWORD PTR [ebp-0x8],ecx
  401532:	mov    edx,DWORD PTR [ebp-0x4]
  401535:	cmp    edx,DWORD PTR [ebp-0x8]
  401538:	jae    0x401541
  40153a:	mov    eax,DWORD PTR [ebp-0x4]
  40153d:	jmp    0x401544
  40153f:	jmp    0x401544
  401541:	mov    eax,DWORD PTR [ebp-0x8]
  401544:	mov    esp,ebp
  401546:	pop    ebp
  401547:	ret    
  401548:	int3   
  401549:	int3   
  40154a:	int3   
  40154b:	int3   
  40154c:	int3   
  40154d:	int3   
  40154e:	int3   
  40154f:	int3   
  401550:	push   ebp
  401551:	mov    ebp,esp
  401553:	sub    esp,0x14
  401556:	mov    DWORD PTR [ebp-0x4],0x18ed
  40155d:	mov    DWORD PTR [ebp-0xc],0x0
  401564:	jmp    0x40156f
  401566:	mov    eax,DWORD PTR [ebp-0xc]
  401569:	add    eax,0x4
  40156c:	mov    DWORD PTR [ebp-0xc],eax
  40156f:	mov    ecx,DWORD PTR [ebp-0xc]
  401572:	cmp    ecx,DWORD PTR [ebp+0xc]
  401575:	jae    0x4015d2
  401577:	mov    DWORD PTR [ebp-0x4],0x303
  40157e:	mov    edx,DWORD PTR [ebp+0x8]
  401581:	add    edx,DWORD PTR [ebp-0xc]
  401584:	mov    eax,DWORD PTR [edx]
  401586:	add    eax,DWORD PTR [ebp-0xc]
  401589:	mov    ecx,DWORD PTR [ebp+0x8]
  40158c:	add    ecx,DWORD PTR [ebp-0xc]
  40158f:	mov    DWORD PTR [ecx],eax
  401591:	mov    DWORD PTR [ebp-0x4],0x18ed
  401598:	mov    edx,DWORD PTR [ebp-0xc]
  40159b:	add    edx,0x13437
  4015a1:	mov    DWORD PTR ds:0x445e4c,edx
  4015a7:	mov    eax,DWORD PTR [ebp-0x8]
  4015aa:	mov    DWORD PTR [ebp-0x10],eax
  4015ad:	mov    DWORD PTR [ebp-0x4],0x303
  4015b4:	mov    ecx,DWORD PTR ds:0x445e4c
  4015ba:	mov    DWORD PTR [ebp-0x14],ecx
  4015bd:	mov    edx,DWORD PTR [ebp+0x8]
  4015c0:	add    edx,DWORD PTR [ebp-0xc]
  4015c3:	mov    eax,DWORD PTR [edx]
  4015c5:	xor    eax,DWORD PTR [ebp-0x14]
  4015c8:	mov    ecx,DWORD PTR [ebp+0x8]
  4015cb:	add    ecx,DWORD PTR [ebp-0xc]
  4015ce:	mov    DWORD PTR [ecx],eax
  4015d0:	jmp    0x401566
  4015d2:	mov    esp,ebp
  4015d4:	pop    ebp
  4015d5:	ret    
  4015d6:	int3   
  4015d7:	int3   
  4015d8:	int3   
  4015d9:	int3   
  4015da:	int3   
  4015db:	int3   
  4015dc:	int3   
  4015dd:	int3   
  4015de:	int3   
  4015df:	int3   
  4015e0:	push   ebp
  4015e1:	mov    ebp,esp
  4015e3:	sub    esp,0xc
  4015e6:	mov    DWORD PTR [ebp-0x4],0x2
  4015ed:	mov    DWORD PTR ds:0x445e50,0x0
  4015f7:	jmp    0x401606
  4015f9:	mov    eax,ds:0x445e50
  4015fe:	add    eax,0x1
  401601:	mov    ds:0x445e50,eax
  401606:	mov    ecx,DWORD PTR ds:0x445e50
  40160c:	cmp    ecx,DWORD PTR [ebp+0x10]
  40160f:	jae    0x401648
  401611:	mov    DWORD PTR [ebp-0x8],0x1fe6
  401618:	mov    edx,DWORD PTR [ebp+0x8]
  40161b:	add    edx,DWORD PTR ds:0x445e50
  401621:	movzx  eax,BYTE PTR [edx]
  401624:	mov    DWORD PTR [ebp-0xc],eax
  401627:	mov    DWORD PTR [ebp-0x8],0x98251
  40162e:	mov    ecx,DWORD PTR [ebp+0xc]
  401631:	add    ecx,DWORD PTR ds:0x445e50
  401637:	movzx  edx,BYTE PTR [ecx]
  40163a:	cmp    DWORD PTR [ebp-0xc],edx
  40163d:	je     0x401646
  40163f:	mov    eax,0x1
  401644:	jmp    0x40164a
  401646:	jmp    0x4015f9
  401648:	xor    eax,eax
  40164a:	mov    esp,ebp
  40164c:	pop    ebp
  40164d:	ret    
  40164e:	int3   
  40164f:	int3   
  401650:	push   ebp
  401651:	mov    ebp,esp
  401653:	mov    eax,ds:0x444014
  401658:	mov    BYTE PTR [eax+0x9],0x5c
  40165c:	mov    ecx,DWORD PTR ds:0x444014
  401662:	mov    BYTE PTR [ecx+0xa],0x61
  401666:	mov    edx,DWORD PTR ds:0x444014
  40166c:	mov    BYTE PTR [edx+0xb],0x74
  401670:	mov    eax,ds:0x444014
  401675:	mov    BYTE PTR [eax+0xc],0x6c
  401679:	mov    ecx,DWORD PTR ds:0x444014
  40167f:	mov    BYTE PTR [ecx+0xd],0x2e
  401683:	mov    edx,DWORD PTR ds:0x444014
  401689:	mov    BYTE PTR [edx+0xe],0x64
  40168d:	mov    eax,ds:0x444014
  401692:	mov    BYTE PTR [eax+0xf],0x6c
  401696:	mov    ecx,DWORD PTR ds:0x444014
  40169c:	mov    BYTE PTR [ecx+0x10],0x6c
  4016a0:	mov    edx,DWORD PTR ds:0x444014
  4016a6:	mov    BYTE PTR [edx],0x5c
  4016a9:	mov    eax,ds:0x444014
  4016ae:	mov    BYTE PTR [eax+0x1],0x73
  4016b2:	mov    ecx,DWORD PTR ds:0x444014
  4016b8:	mov    BYTE PTR [ecx+0x2],0x79
  4016bc:	mov    edx,DWORD PTR ds:0x444014
  4016c2:	mov    BYTE PTR [edx+0x3],0x73
  4016c6:	mov    eax,ds:0x444014
  4016cb:	mov    BYTE PTR [eax+0x4],0x74
  4016cf:	mov    ecx,DWORD PTR ds:0x444014
  4016d5:	mov    BYTE PTR [ecx+0x5],0x65
  4016d9:	mov    edx,DWORD PTR ds:0x444014
  4016df:	mov    BYTE PTR [edx+0x6],0x6d
  4016e3:	mov    eax,ds:0x444014
  4016e8:	mov    BYTE PTR [eax+0x7],0x33
  4016ec:	mov    ecx,DWORD PTR ds:0x444014
  4016f2:	mov    BYTE PTR [ecx+0x8],0x32
  4016f6:	pop    ebp
  4016f7:	ret    
  4016f8:	int3   
  4016f9:	int3   
  4016fa:	int3   
  4016fb:	int3   
  4016fc:	int3   
  4016fd:	int3   
  4016fe:	int3   
  4016ff:	int3   
  401700:	push   ebp
  401701:	mov    ebp,esp
  401703:	sub    esp,0xc
  401706:	mov    DWORD PTR [ebp-0x4],0x1cf9
  40170d:	mov    DWORD PTR [ebp-0x4],0xb68e7
  401714:	mov    DWORD PTR [ebp-0xc],0x0
  40171b:	jmp    0x401726
  40171d:	mov    eax,DWORD PTR [ebp-0xc]
  401720:	add    eax,0x1
  401723:	mov    DWORD PTR [ebp-0xc],eax
  401726:	mov    ecx,DWORD PTR [ebp-0xc]
  401729:	cmp    ecx,DWORD PTR [ebp+0x10]
  40172c:	jge    0x40175c
  40172e:	mov    DWORD PTR [ebp-0x4],0xb68e7
  401735:	mov    edx,DWORD PTR [ebp+0xc]
  401738:	add    edx,DWORD PTR [ebp-0xc]
  40173b:	movzx  eax,BYTE PTR [edx]
  40173e:	mov    DWORD PTR [ebp-0x8],eax
  401741:	mov    DWORD PTR [ebp-0x4],0xb68e7
  401748:	mov    ecx,DWORD PTR [ebp+0x8]
  40174b:	add    ecx,DWORD PTR [ebp-0xc]
  40174e:	mov    dl,BYTE PTR [ebp-0x8]
  401751:	mov    BYTE PTR [ecx],dl
  401753:	mov    DWORD PTR [ebp-0x4],0xb68e7
  40175a:	jmp    0x40171d
  40175c:	mov    esp,ebp
  40175e:	pop    ebp
  40175f:	ret    
  401760:	push   ebp
  401761:	mov    ebp,esp
  401763:	mov    eax,DWORD PTR [ebp+0x8]
  401766:	mov    eax,DWORD PTR [eax-0x4]
  401769:	pop    ebp
  40176a:	ret    
  40176b:	int3   
  40176c:	int3   
  40176d:	int3   
  40176e:	int3   
  40176f:	int3   
  401770:	push   ebp
  401771:	mov    ebp,esp
  401773:	push   ecx
  401774:	mov    DWORD PTR [ebp-0x4],0x4
  40177b:	push   0x40
  40177d:	push   0x3000
  401782:	mov    eax,DWORD PTR [ebp+0x8]
  401785:	push   eax
  401786:	push   0x0
  401788:	call   DWORD PTR ds:0x4445e4
  40178e:	mov    esp,ebp
  401790:	pop    ebp
  401791:	ret    
  401792:	int3   
  401793:	int3   
	...
  402734:	outs   dx,DWORD PTR ds:[esi]
  402735:	xchg   esp,eax
  402736:	and    DWORD PTR [eax-0x80],ebx
  402739:	cli    
  40273a:	stos   BYTE PTR es:[edi],al
  40273b:	jp     0x402712
  40273d:	cld    
  40273e:	jge    0x4026e6
  402740:	jno    0x40275a
  402742:	mov    eax,0xf7221709
  402747:	lods   al,BYTE PTR ds:[esi]
  402748:	in     eax,0x20
  40274a:	dec    ebp
  40274b:	loopne 0x402716
  40274d:	push   ecx
  40274e:	ret    
  40274f:	push   cs
  402750:	(bad)  [esi]
  402752:	sbb    BYTE PTR [ebx],dh
  402754:	lahf   
  402755:	pop    eax
  402756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402757:	jb     0x4026f0
  402759:	aaa    
  40275a:	jmp    0x46728503
  40275f:	mov    ecx,0xf88389c6
  402764:	or     eax,0x52957828
  402769:	sub    ah,ah
  40276b:	in     al,0xbd
  40276d:	xchg   esp,eax
  40276e:	push   esi
  40276f:	stos   BYTE PTR es:[edi],al
  402770:	sub    DWORD PTR [eax],edi
  402772:	mov    bl,0xd1
  402774:	mov    WORD PTR [ebx+0xb0aa142],gs
  40277a:	in     eax,dx
  40277b:	out    dx,eax
  40277c:	(bad)  
  40277d:	mov    eax,ds:0x3386fe81
  402782:	jg     0x402762
  402784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402786:	push   0x5f232149
  40278b:	inc    edi
  40278c:	enter  0x13a0,0xe3
  402790:	les    ebp,FWORD PTR [edx]
  402792:	ret    0xfe2f
  402795:	push   ebx
  402796:	pusha  
  402797:	and    eax,0x5516cf42
  40279c:	cs add esi,edi
  40279f:	fldenv [esi+0x4d]
  4027a2:	inc    bx
  4027a4:	push   ebx
  4027a5:	mov    cl,0x11
  4027a7:	into   
  4027a8:	call   0xfb84:0xc350e6b
  4027af:	mov    esp,0xdea645a2
  4027b4:	fidivr WORD PTR [edi+0x29]
  4027b7:	test   eax,0x36bae279
  4027bc:	nop
  4027bd:	add    DWORD PTR [esi-0x6],edi
  4027c0:	lea    edx,[esi+0x45]
  4027c3:	push   edx
  4027c4:	out    0xcc,eax
  4027c6:	mov    eax,0x12a9cf8
  4027cb:	cli    
  4027cc:	fild   DWORD PTR [edi+0x6f]
  4027cf:	mov    es,WORD PTR [ebp-0x24]
  4027d2:	mov    ds:0x463b26cb,eax
  4027d7:	dec    edi
  4027d8:	icebp  
  4027d9:	mov    ds:0xa7bf949e,al
  4027de:	push   edi
  4027df:	stos   BYTE PTR es:[edi],al
  4027e0:	ja     0x40285c
  4027e2:	es jg  0x4027c4
  4027e5:	xchg   esp,eax
  4027e6:	sti    
  4027e7:	xor    al,0x97
  4027e9:	xchg   edi,eax
  4027ea:	push   ebp
  4027eb:	dec    edx
  4027ec:	pop    ds
  4027ed:	sub    eax,0xd02d5e20
  4027f2:	inc    BYTE PTR fs:[ebx+esi*1]
  4027f6:	pusha  
  4027f7:	rcl    DWORD PTR [ebx-0x22029489],0xd0
  4027fe:	popa   
  4027ff:	cmp    al,0xde
  402801:	ret    
  402802:	ins    DWORD PTR es:[edi],dx
  402803:	push   cs
  402804:	loop   0x40284a
  402806:	inc    esp
  402807:	jmp    0x6a769c99
  40280c:	inc    edx
  40280d:	sar    DWORD PTR [edi],1
  40280f:	retf   
  402810:	mov    ds:0xc0fb1d2e,eax
  402815:	push   esi
  402816:	(bad)  
  402818:	sbb    DWORD PTR [eax-0x72],0x79
  40281c:	dec    edi
  40281d:	dec    esi
  40281e:	aad    0x89
  402820:	push   ebx
  402821:	lea    edx,[edi+0x11]
  402824:	jns    0x40282e
  402826:	and    dl,bl
  402828:	das    
  402829:	ss lock in eax,dx
  40282c:	aad    0x7d
  40282e:	dec    edx
  40282f:	mov    ah,0x2b
  402831:	dec    ecx
  402832:	(bad)  
  402834:	mov    ch,0x90
  402836:	mov    dh,0x0
  402838:	fdivr  DWORD PTR [eax+0x6f]
  40283b:	pop    esi
  40283c:	and    al,0x32
  40283e:	dec    edx
  40283f:	rol    BYTE PTR [eax+0x5b65e053],1
  402845:	fcmovb st,st(6)
  402847:	cmp    eax,0x1a83c1df
  40284c:	push   0xf
  40284e:	loop   0x4027ff
  402850:	lahf   
  402851:	sub    DWORD PTR [ebp+0x5f],0xffffffdf
  402855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402856:	mov    al,ds:0x62eaa633
  40285b:	pushf  
  40285c:	loope  0x4028d1
  40285e:	adc    dl,ch
  402860:	imul   edx,DWORD PTR [ebp-0x2a],0x30b301f5
  402867:	lock sti 
  402869:	pop    ds
  40286a:	inc    edi
  40286b:	js     0x40285e
  40286d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40286e:	mov    bl,0x73
  402870:	ror    esi,cl
  402872:	int3   
  402873:	jmp    0x4028a1
  402875:	aaa    
  402876:	shl    BYTE PTR [edi-0x3b53d57e],0xed
  40287d:	stos   DWORD PTR es:[edi],eax
  40287e:	loop   0x402876
  402880:	sub    DWORD PTR [ebx+0xb],0xffffffe4
  402884:	stc    
  402885:	addr16 xchg esi,eax
  402887:	and    esi,DWORD PTR [ebp+0x69]
  40288a:	pop    ds
  40288b:	out    0x29,al
  40288d:	arpl   WORD PTR [edi-0x17],dx
  402890:	clc    
  402891:	jns    0x402903
  402893:	add    ah,dh
  402895:	gs mov ebx,eax
  402898:	mov    WORD PTR [esi],gs
  40289a:	xor    eax,0x5bb423cb
  40289f:	cmp    DWORD PTR [esp+eiz*8-0x35dcea56],ebp
  4028a6:	js     0x4028b2
  4028a8:	fcmovbe st,st(5)
  4028aa:	mov    dl,BYTE PTR [ebx+0x3d]
  4028ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028ae:	push   0xfffffffc
  4028b0:	fsincos 
  4028b2:	and    BYTE PTR [ebx],ah
  4028b4:	push   ecx
  4028b5:	push   ds
  4028b6:	dec    esp
  4028b7:	mov    al,0x7b
  4028b9:	cmp    al,0xb4
  4028bb:	(bad)  
  4028bd:	jbe    0x402851
  4028bf:	inc    edx
  4028c0:	pop    ebx
  4028c1:	in     al,0xe2
  4028c3:	jle    0x40292a
  4028c5:	lea    esp,[edx+0xe8711e]
  4028cb:	loop   0x4028b8
  4028cd:	ins    BYTE PTR es:[edi],dx
  4028ce:	scas   eax,DWORD PTR es:[edi]
  4028cf:	mov    cl,0x57
  4028d1:	and    DWORD PTR [ebp-0x3b],ebp
  4028d4:	ds icebp 
  4028d6:	or     al,0xf6
  4028d8:	repz dec ecx
  4028da:	out    0xdb,al
  4028dc:	and    eax,0xc97dc1ba
  4028e1:	jbe    0x402910
  4028e3:	std    
  4028e4:	(bad)  
  4028e5:	mov    esp,0x2b59d60d
  4028ea:	imul   eax,DWORD PTR [eax],0x2a
  4028ed:	not    BYTE PTR [ecx-0x5e89b43d]
  4028f3:	mov    ds:0x8d52da34,al
  4028f8:	es mov eax,0x4993a6c
  4028fe:	cmp    edi,0x4e
  402901:	xchg   ecx,eax
  402902:	jno    0x4028c6
  402904:	pop    ebp
  402905:	pop    esp
  402906:	dec    esp
  402907:	add    DWORD PTR [edi+0x30],ecx
  40290a:	out    0xcb,eax
  40290c:	js     0x4028e4
  40290e:	mov    al,ds:0x1f27c790
  402913:	mov    edx,0x8e3c1b56
  402918:	pop    edx
  402919:	retf   
  40291a:	and    DWORD PTR [ecx],edi
  40291c:	repnz ror DWORD PTR [ebx],0x36
  402920:	loope  0x40299f
  402922:	push   bp
  402924:	mov    dl,BYTE PTR [edx+0x2952b1a6]
  40292a:	jl     0x4028c3
  40292c:	mov    bh,0xd8
  40292e:	and    eax,DWORD PTR [edi]
  402930:	push   ebp
  402931:	fist   WORD PTR [eax+0x3e60081]
  402937:	add    BYTE PTR [edi],dh
  402939:	fld    QWORD PTR [edx+0x0]
  40293c:	js     0x40298f
  40293e:	jne    0x402990
  402940:	inc    ebp
  402941:	pop    ebx
  402942:	bound  eax,QWORD PTR [ecx+0x1b]
  402945:	push   eax
  402946:	jae    0x4029ad
  402948:	and    al,0x47
  40294a:	add    DWORD PTR [eax],eax
  40294c:	repz pop edx
  40294e:	pusha  
  40294f:	fs jmp 0x4029ae
  402952:	arpl   WORD PTR [edx+0x16],si
  402955:	inc    esi
  402956:	js     0x40299d
  402958:	pcmpeqw mm0,QWORD PTR [ecx]
  40295b:	add    bl,dh
  40295d:	pop    edx
  40295e:	pusha  
  40295f:	fs jmp 0x4029be
  402962:	arpl   WORD PTR [edx-0x2a],si
  402965:	inc    ebp
  402966:	js     0x4029ad
  402968:	out    dx,eax
  402969:	bound  eax,QWORD PTR [ecx]
  40296b:	add    al,bh
  40296d:	push   eax
  40296e:	jne    0x4029bd
  402970:	enter  0x744f,0x6c
  402974:	fidivr DWORD PTR [ebx+0x60]
  402977:	outs   dx,BYTE PTR ds:[esi]
  402978:	rcl    DWORD PTR [edi+0x64],cl
  40297b:	inc    ecx
  40297c:	aaa    
  40297d:	xor    al,0x1
  40297f:	add    ah,dh
  402981:	inc    ebp
  402982:	fs popa 
  402984:	stos   DWORD PTR es:[edi],eax
  402985:	push   ecx
  402986:	inc    edi
  402987:	imul   ebx,DWORD PTR [ebx-0x6cffbfaf],0x94727547
  402991:	push   ebp
  402992:	jne    0x4029d5
  402994:	aaa    
  402995:	xor    al,0x1
  402997:	add    BYTE PTR [eax+0x51],dh
  40299a:	jne    0x4029f3
  40299c:	add    BYTE PTR [eax],al
  40299e:	mov    ds,WORD PTR [edx+0x65]
  4029a1:	outs   dx,DWORD PTR ds:[esi]
  4029a2:	add    BYTE PTR [edi+0x45],0x69
  4029a6:	gs push ecx
  4029a8:	bound  esi,QWORD PTR [eax+ebx*2+0x46]
  4029ac:	js     0x4029ef
  4029ae:	aaa    
  4029af:	xor    al,0x1
  4029b1:	add    BYTE PTR [eax+0x51],dh
  4029b4:	jne    0x402a03
  4029b6:	pusha  
  4029b7:	push   eax
  4029b8:	je     0x402a26
  4029ba:	push   edx
  4029bb:	jl     0x402a1d
  4029bd:	outs   dx,BYTE PTR ds:[esi]
  4029be:	pop    ebx
  4029bf:	pop    eax
  4029c0:	fs push edi
  4029c2:	aaa    
  4029c3:	xor    al,0x1
  4029c5:	add    BYTE PTR [ebx],bh
  4029c7:	aaa    
  4029c8:	inc    ecx
  4029c9:	add    BYTE PTR [ebx+0x37],al
  4029cc:	inc    ecx
  4029cd:	add    BYTE PTR [ebx+0x37],bl
  4029d0:	inc    ecx
  4029d1:	add    BYTE PTR [ebx+0x37],ah
  4029d4:	inc    ecx
  4029d5:	add    bh,bh
  4029d7:	ss inc ecx
  4029d9:	add    bl,ah
  4029db:	ss inc ecx
  4029dd:	add    BYTE PTR [edi],dl
  4029df:	aaa    
  4029e0:	inc    ecx
  4029e1:	add    bh,bh
  4029e3:	ss inc ecx
  4029e5:	add    al,bh
  4029e7:	push   eax
  4029e8:	jne    0x402a3a
  4029ea:	in     eax,0x5a
  4029ec:	bound  eax,QWORD PTR [ecx-0x25]
  4029ef:	dec    edi
  4029f0:	jae    0x402a57
  4029f2:	in     al,0x46
  4029f4:	add    DWORD PTR [eax],eax
  4029f6:	add    ebx,DWORD PTR [ebx+0x60]
  4029f9:	fs sti 
  4029fb:	pop    esp
  4029fc:	arpl   WORD PTR [edx-0x2a],si
  4029ff:	inc    ebp
  402a00:	js     0x402a47
  402a02:	add    BYTE PTR [eax],al
  402a04:	mov    edi,0x9c000174
  402a09:	dec    edi
  402a0a:	jae    0x402a7a
  402a0c:	xchg   edx,eax
  402a0d:	pop    eax
  402a0e:	xor    dh,BYTE PTR [edx]
  402a10:	push   ecx
  402a11:	push   eax
  402a12:	ins    DWORD PTR es:[edi],dx
  402a13:	ins    BYTE PTR es:[edi],dx
  402a14:	aaa    
  402a15:	xor    al,0x1
  402a17:	add    BYTE PTR [edx-0x7a9c88bb],ah
  402a1d:	inc    eax
  402a1e:	das    
  402a1f:	fs xchg ebx,eax
  402a21:	pop    eax
  402a22:	add    DWORD PTR [eax],eax
  402a24:	mov    cl,BYTE PTR [edi+0x6c]
  402a27:	jae    0x402a83
  402a29:	inc    eax
  402a2a:	add    DWORD PTR [eax],eax
  402a2c:	pop    edx
  402a2d:	inc    ebp
  402a2e:	ja     0x402a93
  402a30:	gs inc eax
  402a32:	das    
  402a33:	fs dec ebx
  402a35:	pop    eax
  402a36:	add    DWORD PTR [eax],eax
  402a38:	bound  ecx,QWORD PTR [edi+0x6c]
  402a3b:	arpl   WORD PTR [edi+0x4b],ax
  402a3e:	add    DWORD PTR [eax],eax
  402a40:	imul   ebx,DWORD PTR [ebx+0x73],0x6d534274
  402a47:	inc    ecx
  402a48:	and    ebx,DWORD PTR [eax+0x6e]
  402a4b:	arpl   WORD PTR [edi],si
  402a4d:	xor    al,0x1
  402a4f:	add    BYTE PTR [ecx],cl
  402a51:	pop    ebx
  402a52:	jae    0x402ac8
  402a54:	and    dl,BYTE PTR [ebx+0x6d]
  402a57:	inc    ecx
  402a58:	and    ebx,DWORD PTR [eax+0x6e]
  402a5b:	arpl   WORD PTR [edi],si
  402a5d:	xor    al,0x1
  402a5f:	add    dl,ch
  402a61:	pop    ecx
  402a62:	ins    BYTE PTR es:[edi],dx
  402a63:	popa   
  402a64:	pop    es
  402a65:	bound  ebp,QWORD PTR [eax+0x65]
  402a68:	add    BYTE PTR [eax],al
  402a6a:	call   0xde8691e7
  402a6f:	push   edi
  402a70:	add    BYTE PTR fs:[ecx],cl
  402a73:	pop    ebx
  402a74:	jae    0x402aea
  402a76:	loop   0x402aca
  402a78:	ins    DWORD PTR es:[edi],dx
  402a79:	push   eax
  402a7a:	lds    ebx,FWORD PTR [eax+0x75]
  402a7d:	gs aam 0x3f
  402a80:	add    DWORD PTR [eax],eax
  402a82:	out    dx,eax
  402a83:	dec    esi
  402a84:	pusha  
  402a85:	jo     0x402a7d
  402a87:	push   edi
  402a88:	ins    DWORD PTR es:[edi],dx
  402a89:	outs   dx,DWORD PTR ds:[esi]
  402a8a:	xchg   esp,eax
  402a8b:	xor    al,0x1
  402a8d:	add    BYTE PTR [edi+ecx*2+0x589a6e73],bl
  402a94:	xor    dh,BYTE PTR [edx]
  402a96:	dec    ecx
  402a97:	push   eax
  402a98:	ins    DWORD PTR es:[edi],dx
  402a99:	ins    BYTE PTR es:[edi],dx
  402a9a:	aaa    
  402a9b:	xor    al,0x1
  402a9d:	add    BYTE PTR [eax+0x4f],dh
  402aa0:	jne    0x402af2
  402aa2:	test   DWORD PTR [ecx+0x62],ebx
  402aa5:	test   BYTE PTR gs:[ebp+0x49],al
  402aa9:	gs push esi
  402aab:	inc    esp
  402aac:	add    DWORD PTR [eax],eax
  402aae:	aaa    
  402aaf:	xor    al,0xd1
  402ab1:	add    esi,DWORD PTR [edi]
  402ab3:	nop
  402ab4:	pop    eax
  402ab5:	add    BYTE PTR [edi],dh
  402ab7:	fild   DWORD PTR [edx]
  402ab9:	add    BYTE PTR [edi],dh
  402abb:	fild   DWORD PTR [edx]
  402abd:	add    BYTE PTR [edi],dh
  402abf:	fild   DWORD PTR [edx]
  402ac1:	add    BYTE PTR [edi],dh
  402ac3:	fild   DWORD PTR [edx]
  402ac5:	add    BYTE PTR [edi],dh
  402ac7:	fild   DWORD PTR [edx]
  402ac9:	add    BYTE PTR [edi],dh
  402acb:	fild   DWORD PTR [edx]
  402acd:	add    BYTE PTR [eax],al
  402acf:	add    BYTE PTR [edi],dh
  402ad1:	fild   DWORD PTR [edx]
  402ad3:	add    BYTE PTR [edi],dh
  402ad5:	fild   DWORD PTR [edx]
  402ad7:	add    BYTE PTR [edi],dh
  402ad9:	fild   DWORD PTR [edx]
  402adb:	add    BYTE PTR [edi],dh
  402add:	fild   DWORD PTR [edx]
  402adf:	add    BYTE PTR [edi],dh
  402ae1:	fild   DWORD PTR [edx]
  402ae3:	add    BYTE PTR [edi],dh
  402ae5:	fild   DWORD PTR [edx]
  402ae7:	add    BYTE PTR [edi],dh
  402ae9:	fild   DWORD PTR [edx]
  402aeb:	add    BYTE PTR [edi],dh
  402aed:	fild   DWORD PTR [edx]
  402aef:	add    BYTE PTR [edi],dh
  402af1:	fild   DWORD PTR ds:0x2db3700
  402af7:	add    BYTE PTR [edi],dh
  402af9:	fild   DWORD PTR [edx]
  402afb:	add    BYTE PTR [edi],dh
  402afd:	fild   DWORD PTR [edx]
  402aff:	add    BYTE PTR [edi],dh
  402b01:	fild   DWORD PTR [edx]
  402b03:	add    BYTE PTR [edi],dh
  402b05:	fild   DWORD PTR [edx]
  402b07:	add    BYTE PTR [edi],dh
  402b09:	fild   DWORD PTR [edx]
  402b0b:	add    BYTE PTR [edi],dh
  402b0d:	fld    QWORD PTR [edx]
  402b0f:	add    BYTE PTR [edi],dh
  402b11:	fld    QWORD PTR [edx]
  402b13:	add    BYTE PTR [edi],dh
  402b15:	fld    QWORD PTR [edx]
  402b17:	add    BYTE PTR [edi],dh
  402b19:	fld    QWORD PTR [edx]
  402b1b:	add    BYTE PTR [edi],dh
  402b1d:	fld    QWORD PTR [edx]
  402b1f:	add    BYTE PTR [edi],dh
  402b21:	fld    QWORD PTR [edx]
  402b23:	add    BYTE PTR [edi],dh
  402b25:	fld    QWORD PTR [edx]
  402b27:	add    BYTE PTR [edi],dh
  402b29:	fld    QWORD PTR [edx]
  402b2b:	add    BYTE PTR [edi],dh
  402b2d:	xor    al,0xe8
  402b2f:	add    esi,DWORD PTR [edi]
  402b31:	xor    al,0xe8
  402b33:	add    eax,DWORD PTR [eax]
  402b35:	add    BYTE PTR [edi],dh
  402b37:	xor    al,0xe8
  402b39:	add    esi,DWORD PTR [edi]
  402b3b:	xor    al,0xe8
  402b3d:	add    esi,DWORD PTR [edi]
  402b3f:	xor    al,0xe8
  402b41:	add    esi,DWORD PTR [edi]
  402b43:	xor    al,0xe8
  402b45:	add    esi,DWORD PTR [edi]
  402b47:	xor    al,0xe8
  402b49:	add    esi,DWORD PTR [edi]
  402b4b:	xor    al,0xe8
  402b4d:	add    esi,DWORD PTR [edi]
  402b4f:	xor    al,0xe8
  402b51:	add    esi,DWORD PTR [edi]
  402b53:	xor    al,0xe8
  402b55:	add    esi,DWORD PTR [edi]
  402b57:	xor    al,0xe8
  402b59:	add    esi,DWORD PTR [edi]
  402b5b:	xor    al,0xe8
  402b5d:	add    esi,DWORD PTR [edi]
  402b5f:	xor    al,0xe8
  402b61:	add    esi,DWORD PTR [edi]
  402b63:	xor    al,0xe8
  402b65:	add    esi,DWORD PTR [edi]
  402b67:	xor    al,0xe8
  402b69:	add    esi,DWORD PTR [edi]
  402b6b:	xor    al,0xe8
  402b6d:	add    esi,DWORD PTR [edi]
  402b6f:	xor    al,0xe8
  402b71:	add    esi,DWORD PTR [edi]
  402b73:	xor    al,0xe8
  402b75:	add    esi,DWORD PTR [edi]
  402b77:	xor    al,0xe8
  402b79:	add    esi,DWORD PTR [edi]
  402b7b:	xor    al,0xe8
  402b7d:	add    esi,DWORD PTR [edi]
  402b7f:	xor    al,0xe8
  402b81:	add    esi,DWORD PTR [edi]
  402b83:	xor    al,0xe8
  402b85:	add    esi,DWORD PTR [edi]
  402b87:	xor    al,0xe8
  402b89:	add    esi,DWORD PTR [edi]
  402b8b:	xor    al,0xe8
  402b8d:	add    esi,DWORD PTR [edi]
  402b8f:	xor    al,0xe8
  402b91:	add    esi,DWORD PTR [edi]
  402b93:	xor    al,0xe8
  402b95:	add    esi,DWORD PTR [edi]
  402b97:	xor    al,0xe8
  402b99:	add    eax,DWORD PTR [eax]
  402b9b:	add    BYTE PTR [edi],dh
  402b9d:	xor    al,0xe8
  402b9f:	add    esi,DWORD PTR [edi]
  402ba1:	xor    al,0xe8
  402ba3:	add    esi,DWORD PTR [edi]
  402ba5:	xor    al,0xe8
  402ba7:	add    esi,DWORD PTR [edi]
  402ba9:	xor    al,0x1
  402bab:	jmp    0xe9415fe4
  402bb0:	xor    al,0x34
  402bb2:	add    ecx,ebp
  402bb4:	xor    al,0x34
  402bb6:	add    ecx,ebp
  402bb8:	xor    al,0x34
  402bba:	add    DWORD PTR [ecx-0x62fecb89],edi
  402bc0:	cmp    esi,DWORD PTR [ebx]
  402bc2:	add    DWORD PTR [ecx],edi
  402bc4:	loopne 0x402bf1
  402bc6:	dec    esi
  402bc7:	jmp    0xe9416000
  402bcc:	xor    al,0x34
  402bce:	add    DWORD PTR [ecx],ecx
  402bd0:	xor    al,0x32
  402bd2:	add    dl,dh
  402bd4:	xor    eax,0xbce9013a
  402bd9:	xor    al,BYTE PTR [ecx]
  402bdb:	jmp    0xe9415fe4
  402be0:	xor    al,0x34
  402be2:	add    DWORD PTR [esi],ecx
  402be4:	sub    BYTE PTR [edx],dh
  402be6:	add    ecx,ebp
  402be8:	and    al,0x34
  402bea:	add    ecx,ebp
  402bec:	les    esi,FWORD PTR [edx]
  402bee:	add    ecx,ebp
  402bf0:	xor    al,0x74
  402bf2:	add    ecx,ebp
  402bf4:	inc    esp
  402bf5:	xor    al,0x1
  402bf7:	jmp    0xec416036
  402bfc:	xor    al,0x35
  402bfe:	add    eax,ebp
  402c00:	add    BYTE PTR [eax],al
  402c02:	xor    al,0x34
  402c04:	add    esp,ebp
  402c06:	xor    al,0x35
  402c08:	add    ecx,ebp
  402c0a:	xor    al,0x34
  402c0c:	add    ecx,ebp
  402c0e:	and    al,0x30
  402c10:	add    ecx,ebp
  402c12:	xor    dh,al
  402c14:	(bad)  
  402c15:	jmp    0xeb41604e
  402c1a:	xor    al,0x34
  402c1c:	sub    cl,0x34
  402c1f:	and    al,0x1
  402c21:	jmp    0x41604a
  402c26:	push   ds
  402c27:	xor    dl,BYTE PTR [ecx]
  402c29:	add    BYTE PTR [esi],cl
  402c2b:	and    al,BYTE PTR [ecx]
  402c2d:	add    BYTE PTR [esi],cl
  402c2f:	xor    al,BYTE PTR [ecx]
  402c31:	add    BYTE PTR [esi],cl
  402c33:	xor    al,BYTE PTR [ecx]
  402c35:	add    dh,bl
  402c37:	xor    DWORD PTR [ecx],eax
  402c39:	add    dh,cl
  402c3b:	xor    DWORD PTR [ecx],eax
  402c3d:	add    dl,ch
  402c3f:	inc    ebp
  402c40:	add    al,BYTE PTR [eax]
  402c42:	xchg   edx,eax
  402c43:	xor    al,BYTE PTR [ecx]
  402c45:	add    dh,bl
  402c47:	xor    DWORD PTR [ecx],eax
  402c49:	add    dh,cl
  402c4b:	xor    DWORD PTR [ecx],eax
  402c4d:	add    dh,cl
  402c4f:	xor    DWORD PTR [ecx],eax
  402c51:	add    BYTE PTR [esi-0x61fffecf],bl
  402c57:	xor    DWORD PTR [ecx],eax
  402c59:	add    BYTE PTR [esi-0x71fffecf],cl
  402c5f:	rol    DWORD PTR [edx],1
  402c61:	add    BYTE PTR [edx],dl
  402c63:	sub    eax,DWORD PTR [ecx]
  402c65:	add    BYTE PTR [eax],al
  402c67:	add    BYTE PTR [esi-0x71fffecf],bl
  402c6d:	xor    DWORD PTR [ecx],eax
  402c6f:	add    BYTE PTR [esi+0x5e000131],cl
  402c75:	xor    DWORD PTR [ecx],eax
  402c77:	add    BYTE PTR [esi+0x31],bl
  402c7a:	add    DWORD PTR [eax],eax
  402c7c:	dec    esi
  402c7d:	xor    DWORD PTR [ecx],eax
  402c7f:	add    BYTE PTR [esi+0x31],cl
  402c82:	add    DWORD PTR [eax],eax
  402c84:	pop    esi
  402c85:	xor    DWORD PTR [ecx],eax
  402c87:	add    BYTE PTR [esi+0x31],bl
  402c8a:	add    DWORD PTR [eax],eax
  402c8c:	dec    esi
  402c8d:	xor    DWORD PTR [ecx],eax
  402c8f:	add    BYTE PTR [esi+0x31],cl
  402c92:	add    DWORD PTR [eax],eax
  402c94:	push   ds
  402c95:	xor    DWORD PTR [ecx],eax
  402c97:	add    BYTE PTR [esi],bl
  402c99:	and    DWORD PTR [ecx],eax
  402c9b:	add    BYTE PTR [edx+0x37000133],ch
  402ca1:	fild   DWORD PTR [edx]
  402ca3:	add    BYTE PTR [edi],dh
  402ca5:	fild   DWORD PTR [edx]
  402ca7:	add    BYTE PTR [edi],dh
  402ca9:	fild   DWORD PTR [edx]
  402cab:	add    BYTE PTR [edi],dh
  402cad:	fild   DWORD PTR [edx]
  402caf:	add    BYTE PTR [edi],dh
  402cb1:	fild   DWORD PTR [edx]
  402cb3:	add    BYTE PTR [edi],dh
  402cb5:	fild   DWORD PTR [edx]
  402cb7:	add    BYTE PTR [edi],dh
  402cb9:	(bad)  [esi+0x65]
  402cbc:	pop    edi
  402cbd:	lahf   
  402cbe:	add    al,BYTE PTR [eax]
  402cc0:	aaa    
  402cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cc2:	xchg   ecx,eax
  402cc3:	add    esi,DWORD PTR [edi]
  402cc5:	fist   DWORD PTR [edx]
  402cc7:	add    BYTE PTR [edi],dh
  402cc9:	fistp  DWORD PTR [edx+0x37000003]
  402ccf:	(bad)  
  402cd1:	(bad)  
  402cd2:	mov    eax,0x370002da
  402cd7:	fild   DWORD PTR [edx]
  402cd9:	add    BYTE PTR [edi],dh
  402cdb:	fild   DWORD PTR [edx]
  402cdd:	add    BYTE PTR [edi],dh
  402cdf:	cmp    eax,DWORD PTR ds:0x612d1700
  402ce5:	popa   
  402ce6:	or     edi,DWORD PTR [ebp+eax*1+0x0]
  402cea:	aaa    
  402ceb:	daa    
  402cec:	push   ds
  402ced:	add    BYTE PTR [edi],dh
  402cef:	(bad)  [edx+0x8db3703]
  402cf5:	add    BYTE PTR [edi],dh
  402cf7:	fist   DWORD PTR [esi+0x2db3703]
  402cfd:	add    BYTE PTR [edi],dh
  402cff:	fild   DWORD PTR [edx]
  402d01:	add    BYTE PTR [edi],dh
  402d03:	fild   DWORD PTR [edx]
  402d05:	add    BYTE PTR [edi],dh
  402d07:	sbb    eax,DWORD PTR ds:0x70dc7700
  402d0d:	shl    DWORD PTR gs:0x87370062,cl
  402d14:	pop    ds
  402d15:	add    BYTE PTR [edi],dh
  402d17:	int    0xe2
  402d19:	add    esi,DWORD PTR [edi]
  402d1b:	xor    al,0xe8
  402d1d:	sub    esi,DWORD PTR [edi]
  402d1f:	xor    al,0xe8
  402d21:	popf   
  402d22:	xor    al,0x34
  402d24:	call   0xe874642c
  402d29:	add    esi,DWORD PTR [edi]
  402d2b:	xor    al,0xe8
  402d2d:	add    esi,DWORD PTR [edi]
  402d2f:	xor    al,0xa8
  402d31:	add    eax,DWORD PTR [eax]
  402d33:	add    BYTE PTR [edi],dh
  402d35:	jbe    0x402d1f
  402d37:	add    esi,DWORD PTR [edi]
  402d39:	xor    al,0xe8
  402d3b:	add    esi,DWORD PTR [edi]
  402d3d:	xor    al,0xe8
  402d3f:	add    esi,DWORD PTR [edi]
  402d41:	xor    al,0xe8
  402d43:	add    esi,DWORD PTR [edi]
  402d45:	xor    al,0xe8
  402d47:	add    esi,DWORD PTR [edi]
  402d49:	xor    al,0xe8
  402d4b:	add    esi,DWORD PTR [edi]
  402d4d:	xor    al,0xe8
  402d4f:	add    esi,DWORD PTR [edi]
  402d51:	xor    al,0xe8
  402d53:	add    esi,DWORD PTR [edi]
  402d55:	xor    al,0xe8
  402d57:	add    esi,DWORD PTR [edi]
  402d59:	xor    al,0xe8
  402d5b:	add    esi,DWORD PTR [edi]
  402d5d:	xor    al,0xe8
  402d5f:	add    esi,DWORD PTR [edi]
  402d61:	xor    al,0xe8
  402d63:	add    esi,DWORD PTR [edi]
  402d65:	xor    al,0xe8
  402d67:	add    esi,DWORD PTR [edi]
  402d69:	xor    al,0xe8
  402d6b:	add    esi,DWORD PTR [edi]
  402d6d:	xor    al,0xe8
  402d6f:	add    esi,DWORD PTR [edi]
  402d71:	xor    al,0xe8
  402d73:	add    esi,DWORD PTR [edi]
  402d75:	xor    al,0xe8
  402d77:	add    esi,DWORD PTR [edi]
  402d79:	xor    al,0xe8
  402d7b:	add    esi,DWORD PTR [edi]
  402d7d:	xor    al,0xe8
  402d7f:	add    esi,DWORD PTR [edi]
  402d81:	xor    al,0xe8
  402d83:	add    esi,DWORD PTR [edi]
  402d85:	xor    al,0xe8
  402d87:	add    esi,DWORD PTR [edi]
  402d89:	xor    al,0xe8
  402d8b:	add    esi,DWORD PTR [edi]
  402d8d:	xor    al,0xe8
  402d8f:	add    esi,DWORD PTR [edi]
  402d91:	xor    al,0xe8
  402d93:	add    esi,DWORD PTR [edi]
  402d95:	xor    al,0x1
  402d97:	jmp    0x34742d9c
  402d9c:	add    ecx,ebp
  402d9e:	xor    al,0x34
  402da0:	add    ecx,ebp
  402da2:	xor    al,0x34
  402da4:	add    ecx,ebp
  402da6:	xor    al,0x34
  402da8:	add    ecx,ebp
  402daa:	xor    al,0x34
  402dac:	add    ecx,ebp
  402dae:	xor    al,0x34
  402db0:	add    ecx,ebp
  402db2:	xor    al,0x34
  402db4:	add    ecx,ebp
  402db6:	xor    al,0x34
  402db8:	add    ecx,ebp
  402dba:	xor    al,0x34
  402dbc:	add    ecx,ebp
  402dbe:	xor    al,0x34
  402dc0:	add    ecx,ebp
  402dc2:	xor    al,0x34
  402dc4:	add    ecx,ebp
  402dc6:	xor    al,0x34
  402dc8:	add    ecx,ebp
  402dca:	xor    al,0x34
  402dcc:	add    ecx,ebp
  402dce:	xor    al,0x34
  402dd0:	add    ecx,ebp
  402dd2:	xor    al,0x34
  402dd4:	add    ecx,ebp
  402dd6:	xor    al,0x34
  402dd8:	add    ecx,ebp
  402dda:	xor    al,0x34
  402ddc:	add    ecx,ebp
  402dde:	xor    al,0x34
  402de0:	add    ecx,ebp
  402de2:	xor    al,0x34
  402de4:	add    ecx,ebp
  402de6:	xor    al,0x34
  402de8:	add    ecx,ebp
  402dea:	xor    al,0x34
  402dec:	add    ecx,ebp
  402dee:	xor    al,0x34
  402df0:	add    ecx,ebp
  402df2:	xor    al,0x34
  402df4:	add    ecx,ebp
  402df6:	xor    al,0x34
  402df8:	add    ecx,ebp
  402dfa:	xor    al,0x34
  402dfc:	add    ecx,ebp
  402dfe:	add    BYTE PTR [eax],al
  402e00:	xor    al,0x34
  402e02:	add    ecx,ebp
  402e04:	xor    al,0x34
  402e06:	add    ecx,ebp
  402e08:	xor    al,0x34
  402e0a:	add    ecx,ebp
  402e0c:	xor    al,0x34
  402e0e:	add    ecx,ebp
  402e10:	xor    al,0x34
  402e12:	add    DWORD PTR [eax],eax
  402e14:	dec    esi
  402e15:	add    DWORD PTR ss:[eax],eax
  402e18:	dec    esi
  402e19:	add    DWORD PTR ss:[eax],eax
  402e1c:	push   ds
  402e1d:	add    DWORD PTR ss:[eax],eax
  402e20:	push   ds
  402e21:	add    DWORD PTR ss:[eax],eax
  402e24:	push   cs
  402e25:	add    DWORD PTR ss:[eax],eax
  402e28:	push   cs
  402e29:	add    DWORD PTR ss:[eax],eax
  402e2c:	push   ds
  402e2d:	add    DWORD PTR ss:[eax],eax
  402e30:	push   ds
  402e31:	add    DWORD PTR ss:[eax],eax
  402e34:	push   cs
  402e35:	add    DWORD PTR ss:[eax],eax
  402e38:	push   cs
  402e39:	add    DWORD PTR ss:[eax],eax
  402e3c:	fidiv  WORD PTR ds:0x35de0001
  402e42:	add    DWORD PTR [eax],eax
  402e44:	into   
  402e45:	xor    eax,0x35ce0001
  402e4a:	add    DWORD PTR [eax],eax
  402e4c:	fidiv  WORD PTR ds:0x35de0001
  402e52:	add    DWORD PTR [eax],eax
  402e54:	into   
  402e55:	xor    eax,0x35ce0001
  402e5a:	add    DWORD PTR [eax],eax
  402e5c:	sahf   
  402e5d:	xor    eax,0x359e0001
  402e62:	add    DWORD PTR [eax],eax
  402e64:	add    BYTE PTR [eax],al
  402e66:	mov    ?,WORD PTR ds:0x358e0001
  402e6c:	add    DWORD PTR [eax],eax
  402e6e:	sahf   
  402e6f:	xor    eax,0x359e0001
  402e74:	add    DWORD PTR [eax],eax
  402e76:	mov    ?,WORD PTR ds:0x358e0001
  402e7c:	add    DWORD PTR [eax],eax
  402e7e:	pop    esi
  402e7f:	xor    eax,0x355e0001
  402e84:	add    DWORD PTR [eax],eax
  402e86:	dec    esi
  402e87:	xor    eax,0x354e0001
  402e8c:	add    DWORD PTR [eax],eax
  402e8e:	aaa    
  402e8f:	retf   
  402e90:	add    al,BYTE PTR [eax]
  402e92:	aaa    
  402e93:	retf   
  402e94:	add    al,BYTE PTR [eax]
  402e96:	aaa    
  402e97:	retf   
  402e98:	add    al,BYTE PTR [eax]
  402e9a:	aaa    
  402e9b:	retf   
  402e9c:	add    al,BYTE PTR [eax]
  402e9e:	aaa    
  402e9f:	retf   
  402ea0:	add    al,BYTE PTR [eax]
  402ea2:	aaa    
  402ea3:	retf   
  402ea4:	add    al,BYTE PTR [eax]
  402ea6:	aaa    
  402ea7:	retf   
  402ea8:	add    al,BYTE PTR [eax]
  402eaa:	aaa    
  402eab:	retf   
  402eac:	add    al,BYTE PTR [eax]
  402eae:	aaa    
  402eaf:	retf   
  402eb0:	add    al,BYTE PTR [eax]
  402eb2:	aaa    
  402eb3:	retf   
  402eb4:	add    al,BYTE PTR [eax]
  402eb6:	aaa    
  402eb7:	retf   
  402eb8:	add    al,BYTE PTR [eax]
  402eba:	aaa    
  402ebb:	retf   
  402ebc:	add    al,BYTE PTR [eax]
  402ebe:	aaa    
  402ebf:	retf   
  402ec0:	add    al,BYTE PTR [eax]
  402ec2:	aaa    
  402ec3:	retf   
  402ec4:	add    al,BYTE PTR [eax]
  402ec6:	aaa    
  402ec7:	retf   
  402ec8:	add    al,BYTE PTR [eax]
  402eca:	add    BYTE PTR [eax],al
  402ecc:	aaa    
  402ecd:	retf   
  402ece:	add    al,BYTE PTR [eax]
  402ed0:	aaa    
  402ed1:	or     ebx,DWORD PTR [ecx-0x66f8c8fd]
  402ed7:	add    esi,DWORD PTR [edi]
  402ed9:	daa    
  402eda:	cdq    
  402edb:	add    esi,DWORD PTR [edi]
  402edd:	int    0x96
  402edf:	add    esi,DWORD PTR [edi]
  402ee1:	fist   WORD PTR [esi-0x690cc8fd]
  402ee7:	add    esi,DWORD PTR [edi]
  402ee9:	adc    edx,DWORD PTR [ecx-0x6ef0c8fd]
  402eef:	add    esi,DWORD PTR [edi]
  402ef1:	ins    DWORD PTR es:[edi],dx
  402ef2:	xchg   ecx,eax
  402ef3:	add    esi,DWORD PTR [edi]
  402ef5:	addr16 xchg ecx,eax
  402ef7:	add    esi,DWORD PTR [edi]
  402ef9:	dec    ecx
  402efa:	xchg   ecx,eax
  402efb:	add    esi,DWORD PTR [edi]
  402efd:	mov    bh,0x91
  402eff:	add    esi,DWORD PTR [edi]
  402f01:	inc    edi
  402f02:	xchg   ecx,eax
  402f03:	add    esi,DWORD PTR [edi]
  402f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f06:	xchg   ecx,eax
  402f07:	add    esi,DWORD PTR [edi]
  402f09:	xor    al,0x94
  402f0b:	nop
  402f0c:	xor    al,0x34
  402f0e:	in     al,0x90
  402f10:	xor    al,0x34
  402f12:	lock nop
  402f14:	xor    al,0x34
  402f16:	ret    0x3490
  402f19:	xor    al,0xc4
  402f1b:	nop
  402f1c:	xor    al,0x34
  402f1e:	cs xchg ecx,eax
  402f20:	xor    al,0x34
  402f22:	push   ss
  402f23:	xchg   ecx,eax
  402f24:	xor    al,0x34
  402f26:	lock nop
  402f28:	xor    al,0x34
  402f2a:	jo     0x402ebd
  402f2c:	xor    al,0x34
  402f2e:	adc    BYTE PTR [ecx+0x34340000],0x8e
  402f35:	xchg   ecx,eax
  402f36:	xor    al,0x34
  402f38:	es xchg ecx,eax
  402f3a:	xor    al,0x34
  402f3c:	dec    edx
  402f3d:	xchg   ecx,eax
  402f3e:	xor    al,0x34
  402f40:	inc    edx
  402f41:	xchg   ecx,eax
  402f42:	xor    al,0x34
  402f44:	cli    
  402f45:	xchg   ecx,eax
  402f46:	xor    al,0x34
  402f48:	sahf   
  402f49:	xchg   ecx,eax
  402f4a:	xor    al,0x34
  402f4c:	xchg   edx,eax
  402f4d:	xchg   ecx,eax
  402f4e:	xor    al,0x34
  402f50:	pushf  
  402f51:	xchg   ecx,eax
  402f52:	xor    al,0x34
  402f54:	js     0x402ee8
  402f56:	xor    al,0x34
  402f58:	dec    edx
  402f59:	xchg   edx,eax
  402f5a:	xor    al,0x34
  402f5c:	dec    esp
  402f5d:	(bad)  
  402f5e:	xor    al,0x34
  402f60:	call   0x96746668
  402f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f66:	xor    al,0x34
  402f68:	lods   al,BYTE PTR ds:[esi]
  402f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f6a:	xor    al,0x34
  402f6c:	push   es
  402f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f6e:	xor    al,0x34
  402f70:	in     al,dx
  402f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f72:	xor    al,0x34
  402f74:	fsub   QWORD PTR [ebp-0x5a45cbcc]
  402f7a:	xor    al,0x34
  402f7c:	test   BYTE PTR [ebp-0x58c9cbcc],ah
  402f82:	xor    al,0x34
  402f84:	add    ecx,ebp
  402f86:	xor    al,0x34
  402f88:	add    edi,eax
  402f8a:	fwait
  402f8b:	xor    eax,DWORD PTR [ecx]
  402f8d:	and    eax,0xc1013392
  402f92:	fwait
  402f93:	xor    eax,DWORD PTR [ecx]
  402f95:	sbb    DWORD PTR [eax],eax
  402f97:	add    BYTE PTR [edx-0x65f6fecd],dl
  402f9d:	xor    eax,DWORD PTR [ecx]
  402f9f:	mov    bh,0x93
  402fa1:	xor    eax,DWORD PTR [ecx]
  402fa3:	stos   DWORD PTR es:[edi],eax
  402fa4:	(bad)  [edx]
  402fa6:	add    DWORD PTR [edi-0x2d],eax
  402fa9:	xor    al,BYTE PTR [ecx]
  402fab:	dec    ebx
  402fac:	(bad)  [edx]
  402fae:	add    DWORD PTR [ecx+0x6d0132d3],eax
  402fb4:	(bad)  [edx]
  402fb6:	add    DWORD PTR [ecx+0x5b0132d3],edi
  402fbc:	(bad)  [edx]
  402fbe:	add    DWORD PTR [ecx],ecx
  402fc0:	shl    BYTE PTR [edx],cl
  402fc2:	add    DWORD PTR [ebx],eax
  402fc4:	call   0x134:0x34e90132
  402fcb:	pop    ebp
  402fcc:	les    esi,FWORD PTR [edx]
  402fce:	add    DWORD PTR [ebx-0x3c],ecx
  402fd1:	xor    al,BYTE PTR [ecx]
  402fd3:	push   edi
  402fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd5:	xor    al,BYTE PTR [ecx]
  402fd7:	cmp    esp,DWORD PTR [edx+esi*1+0x32a40301]
  402fde:	add    ebp,ebp
  402fe0:	mov    ds:0xcbd70132,eax
  402fe5:	xor    al,BYTE PTR [ecx]
  402fe7:	ret    
  402fe8:	ret    
  402fe9:	xor    al,BYTE PTR [ecx]
  402feb:	mov    cl,0xcb
  402fed:	xor    al,BYTE PTR [ecx]
  402fef:	xor    esp,eax
  402ff1:	xor    al,BYTE PTR [ecx]
  402ff3:	inc    ecx
  402ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff5:	xor    al,BYTE PTR [ecx]
  402ff7:	inc    ecx
  402ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff9:	xor    al,BYTE PTR [ecx]
  402ffb:	add    BYTE PTR gs:[eax],al
  402ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fff:	xor    al,BYTE PTR [ecx]
  403001:	add    al,bl
  403003:	mov    ds:0xa2b80002,al
  403008:	add    al,BYTE PTR [eax]
  40300a:	out    0xa2,al
  40300c:	add    al,BYTE PTR [eax]
  40300e:	shl    BYTE PTR [edx-0x5d51fffe],0x2
  403015:	add    BYTE PTR [esi+0x580002a2],ch
  40301b:	test   al,0x2
  40301d:	add    BYTE PTR [eax+ebp*4+0x2],ch
  403021:	add    BYTE PTR [eax-0x58],bh
  403024:	add    al,BYTE PTR [eax]
  403026:	pop    eax
  403027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403028:	add    al,BYTE PTR [eax]
  40302a:	dec    edx
  40302b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40302c:	add    al,BYTE PTR [eax]
  40302e:	sub    al,0xa6
  403030:	add    al,BYTE PTR [eax]
  403032:	cld    
  403033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403034:	add    al,BYTE PTR [eax]
  403036:	pushf  
  403037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403038:	add    al,BYTE PTR [eax]
  40303a:	mov    WORD PTR [esi-0x5945fffe],fs
  403040:	add    al,BYTE PTR [eax]
  403042:	mov    ah,0xa6
  403044:	add    al,BYTE PTR [eax]
  403046:	and    BYTE PTR [esi-0x5983fffe],ah
  40304c:	add    al,BYTE PTR [eax]
  40304e:	nop
  40304f:	mov    eax,ds:0xa8cc0002
  403054:	add    al,BYTE PTR [eax]
  403056:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  403058:	add    al,BYTE PTR [eax]
  40305a:	cli    
  40305b:	test   al,0x2
  40305d:	add    BYTE PTR [eax+0x2a8],al
  403063:	add    dl,dh
  403065:	test   al,0x2
  403067:	add    dl,ah
  403069:	test   al,0x2
  40306b:	add    BYTE PTR [esi+0x260002a8],bh
  403071:	test   al,0x2
  403073:	add    BYTE PTR [eax],cl
  403075:	test   al,0x2
  403077:	add    BYTE PTR [edx],dl
  403079:	test   al,0x2
  40307b:	add    BYTE PTR [edi],dh
  40307d:	mov    ch,0x95
  40307f:	add    esi,DWORD PTR [edi]
  403081:	xchg   edi,eax
  403082:	xchg   ebp,eax
  403083:	add    esi,DWORD PTR [edi]
  403085:	popf   
  403086:	xchg   ebp,eax
  403087:	add    esi,DWORD PTR [edi]
  403089:	jecxz  0x403020
  40308b:	add    esi,DWORD PTR [edi]
  40308d:	retf   
  40308e:	xchg   esi,eax
  40308f:	add    esi,DWORD PTR [edi]
  403091:	jecxz  0x403029
  403093:	add    esi,DWORD PTR [edi]
  403095:	out    dx,eax
  403096:	xchg   esi,eax
  403097:	add    esi,DWORD PTR [edi]
  403099:	fst    DWORD PTR [esi-0x66f4c8fd]
  40309f:	add    esi,DWORD PTR [edi]
  4030a1:	pop    es
  4030a2:	cdq    
  4030a3:	add    esi,DWORD PTR [edi]
  4030a5:	sub    DWORD PTR [ecx-0x69b6c8fd],ebx
  4030ab:	add    esi,DWORD PTR [edi]
  4030ad:	ins    DWORD PTR es:[edi],dx
  4030ae:	xchg   esi,eax
  4030af:	add    esi,DWORD PTR [edi]
  4030b1:	add    DWORD PTR [esi-0x69f8c8fd],edx
  4030b7:	add    esi,DWORD PTR [edi]
  4030b9:	imul   edx,DWORD PTR [esi-0x5670c8fd],0x3
  4030c0:	aaa    
  4030c1:	xor    ebp,DWORD PTR [eax-0x5620c8fd]
  4030c7:	add    eax,DWORD PTR [eax]
  4030c9:	add    BYTE PTR [edi],dh
  4030cb:	ret    
  4030cc:	test   eax,0xa7f93703
  4030d1:	add    esi,DWORD PTR [edi]
  4030d3:	jnp    0x403067
  4030d5:	add    esi,DWORD PTR [edi]
  4030d7:	not    DWORD PTR [edx-0x6d70c8fd]
  4030dd:	add    esi,DWORD PTR [edi]
  4030df:	out    0x92,eax
  4030e1:	add    esi,DWORD PTR [edi]
  4030e3:	jge    0x403077
  4030e5:	add    esi,DWORD PTR [edi]
  4030e7:	jmp    0x40307b
  4030e9:	add    esi,DWORD PTR [edi]
  4030eb:	iret   
  4030ec:	xchg   edx,eax
  4030ed:	add    esi,DWORD PTR [edi]
  4030ef:	ret    
  4030f0:	jle    0x4030f5
  4030f2:	aaa    
  4030f3:	xor    eax,DWORD PTR [ecx-0x45cbc8fd]
  4030f9:	jg     0x40312f
  4030fb:	xor    al,0xa6
  4030fd:	jg     0x403133
  4030ff:	xor    al,0x86
  403101:	jg     0x403137
  403103:	xor    al,0x6e
  403105:	jg     0x40313b
  403107:	xor    al,0x76
  403109:	jg     0x40313f
  40310b:	xor    al,0x6a
  40310d:	jg     0x403143
  40310f:	xor    al,0x38
  403111:	jg     0x403147
  403113:	xor    al,0x48
  403115:	jg     0x40314b
  403117:	xor    al,0x32
  403119:	jg     0x40314f
  40311b:	xor    al,0xdc
  40311d:	jle    0x403153
  40311f:	xor    al,0xf6
  403121:	jle    0x403157
  403123:	xor    al,0xe4
  403125:	jle    0x40315b
  403127:	xor    al,0x7c
  403129:	jle    0x40315f
  40312b:	xor    al,0x90
  40312d:	jle    0x40312f
  40312f:	add    BYTE PTR [esp+esi*1],dh
  403132:	pushf  
  403133:	jle    0x403169
  403135:	xor    al,0x2c
  403137:	jle    0x40316d
  403139:	xor    al,0x88
  40313b:	jle    0x403171
  40313d:	xor    al,0x74
  40313f:	jle    0x403175
  403141:	xor    al,0x60
  403143:	jle    0x403179
  403145:	xor    al,0xd6
  403147:	jge    0x40317d
  403149:	xor    al,0xd0
  40314b:	jge    0x403181
  40314d:	xor    al,0xa2
  40314f:	jge    0x403185
  403151:	xor    al,0xa0
  403153:	jge    0x403189
  403155:	xor    al,0xec
  403157:	jge    0x40318d
  403159:	xor    al,0xd8
  40315b:	jge    0x403191
  40315d:	xor    al,0xca
  40315f:	jge    0x403195
  403161:	xor    al,0xfa
  403163:	jge    0x403199
  403165:	xor    al,0xea
  403167:	jge    0x40319d
  403169:	xor    al,0x10
  40316b:	xor    DWORD PTR [esp+esi*1],0x3434811c
  403172:	add    DWORD PTR [edi],ebp
  403174:	mov    dh,0x37
  403176:	add    DWORD PTR [ecx],edi
  403178:	mov    dh,0x37
  40317a:	add    DWORD PTR [ebp-0x7efec849],ecx
  403180:	mov    bh,0x37
  403182:	add    DWORD PTR [ebp-0x49],esp
  403185:	aaa    
  403186:	add    DWORD PTR [ebp-0x4a],ecx
  403189:	aaa    
  40318a:	add    DWORD PTR [ebx-0x4a],edx
  40318d:	aaa    
  40318e:	add    DWORD PTR [ebx],esp
  403190:	mov    dh,0x37
  403192:	add    DWORD PTR [edi],ebp
  403194:	add    BYTE PTR [eax],al
  403196:	mov    dh,0x37
  403198:	add    ecx,esi
  40319a:	mov    bh,0x37
  40319c:	add    ebp,edx
  40319e:	mov    bh,0x37
  4031a0:	add    edi,edi
  4031a2:	mov    bh,0x37
  4031a4:	add    ebx,edi
  4031a6:	mov    bh,0x37
  4031a8:	add    edi,esp
  4031aa:	mov    bh,0x37
  4031ac:	add    DWORD PTR [ecx-0x76fec850],eax
  4031b2:	test   al,0x37
  4031b4:	add    DWORD PTR [edi+0x370137a0],ebp
  4031ba:	cwde   
  4031bb:	aaa    
  4031bc:	add    DWORD PTR [edi+0x67013790],eax
  4031c2:	mov    BYTE PTR [edi],dh
  4031c4:	add    edi,edx
  4031c6:	xor    BYTE PTR [edi],0x1
  4031c9:	retf   
  4031ca:	js     0x403203
  4031cc:	add    DWORD PTR [edi-0x56fec890],ebx
  4031d2:	push   0xb70f0137
  4031d7:	add    DWORD PTR ss:[ebp+0x5d],eax
  4031db:	aaa    
  4031dc:	add    edi,edi
  4031de:	push   eax
  4031df:	aaa    
  4031e0:	add    DWORD PTR ds:0x1b01374d,ebx
  4031e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031e7:	ss add ecx,ebp
  4031ea:	xor    al,0x34
  4031ec:	add    DWORD PTR [eax],eax
  4031ee:	push   0xffffff8c
  4031f0:	add    al,BYTE PTR [eax]
  4031f2:	test   BYTE PTR [ebx-0x740ffffe],0x2
  4031f9:	add    BYTE PTR [eax],al
  4031fb:	add    BYTE PTR [esi-0x5ffffeca],cl
  403201:	add    DWORD PTR ss:[eax-0x7ffec97a],eax
  403208:	xchg   edi,eax
  403209:	add    DWORD PTR ss:[eax-0x7ffec974],eax
  403210:	pop    esi
  403211:	add    DWORD PTR ss:[eax],eax
  403214:	cld    
  403215:	pop    DWORD PTR [edx]
  403217:	add    BYTE PTR [eax],bl
  403219:	nop
  40321a:	add    al,BYTE PTR [eax]
  40321c:	dec    eax
  40321d:	xchg   esi,eax
  40321e:	add    al,BYTE PTR [eax]
  403220:	pop    esi
  403221:	add    DWORD PTR ss:[eax],eax
  403224:	dec    eax
  403225:	xchg   esi,eax
  403226:	add    al,BYTE PTR [eax]
  403228:	push   esp
  403229:	xchg   esi,eax
  40322a:	add    al,BYTE PTR [eax]
  40322c:	test   al,0xa8
  40322e:	add    al,BYTE PTR [eax]
  403230:	enter  0x2a7,0x0
  403234:	retf   0x2a7
  403237:	add    BYTE PTR [esi-0x2dfffd59],bh
  40323d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40323e:	add    al,BYTE PTR [eax]
  403240:	(bad)  
  403241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403242:	add    al,BYTE PTR [eax]
  403244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403246:	add    al,BYTE PTR [eax]
  403248:	jle    0x4031f1
  40324a:	add    al,BYTE PTR [eax]
  40324c:	jmp    0x2a9:0x60002a8
  403253:	add    dl,cl
  403255:	test   al,0x2
  403257:	add    BYTE PTR [eax+ebp*4-0x571dfffe],dl
  40325e:	add    al,BYTE PTR [eax]
  403260:	add    BYTE PTR [eax],al
  403262:	add    ch,BYTE PTR [ecx-0x5731fffe]
  403268:	add    al,BYTE PTR [eax]
  40326a:	aaa    
  40326b:	and    eax,0x3137038f
  403270:	pop    DWORD PTR [ebx]
  403272:	aaa    
  403273:	adc    ecx,DWORD PTR [edi-0x70fac8fd]
  403279:	add    esi,DWORD PTR [edi]
  40327b:	dec    DWORD PTR [esi+0x2d93703]
  403281:	add    BYTE PTR [edi+0x370002cb],dh
  403287:	dec    edi
  403288:	mov    ds:0x2cb3703,al
  40328d:	add    BYTE PTR [edi],dh
  40328f:	arpl   WORD PTR [ebp-0x7296c8fd],cx
  403295:	add    esi,DWORD PTR [edi]
  403297:	and    DWORD PTR [ebp-0x72ecc8fd],ecx
  40329d:	add    esi,DWORD PTR [edi]
  40329f:	ror    DWORD PTR [edx-0x7518c8fd],0x3
  4032a6:	aaa    
  4032a7:	mov    ebp,0x9f37038a
  4032ac:	xchg   ebp,eax
  4032ad:	add    esi,DWORD PTR [edi]
  4032af:	fwait
  4032b0:	xchg   ebp,eax
  4032b1:	add    esi,DWORD PTR [edi]
  4032b3:	(bad)  
  4032b4:	xchg   ebp,eax
  4032b5:	add    esi,DWORD PTR [edi]
  4032b7:	fwait
  4032b8:	xchg   ebp,eax
  4032b9:	add    esi,DWORD PTR [edi]
  4032bb:	lea    edx,[ebp-0x6afec8fd]
  4032c1:	add    esi,DWORD PTR [edi]
  4032c3:	mov    ds:0x395,eax
  4032c8:	aaa    
  4032c9:	mov    bl,0x95
  4032cb:	add    esi,DWORD PTR [edi]
  4032cd:	push   ebp
  4032ce:	xchg   ebp,eax
  4032cf:	add    esi,DWORD PTR [edi]
  4032d1:	loope  0x403268
  4032d3:	add    esi,DWORD PTR [edi]
  4032d5:	jecxz  0x40326c
  4032d7:	add    esi,DWORD PTR [edi]
  4032d9:	test   eax,0x1537038a
  4032de:	mov    al,BYTE PTR [ebx]
  4032e0:	aaa    
  4032e1:	daa    
  4032e2:	mov    al,BYTE PTR [ebx]
  4032e4:	aaa    
  4032e5:	xor    al,0x1a
  4032e7:	mov    esi,DWORD PTR [esp+esi*1]
  4032ea:	je     0x403277
  4032ec:	xor    al,0x34
  4032ee:	dec    BYTE PTR [edx-0x7539cbcc]
  4032f4:	xor    al,0x34
  4032f6:	(bad)  
  4032f7:	mov    dh,BYTE PTR [esp+esi*1]
  4032fa:	call   0x348a:0x8c34348a
  403301:	xor    al,0x7e
  403303:	mov    dh,BYTE PTR [esp+esi*1]
  403306:	push   0xffffff8d
  403308:	xor    al,0x34
  40330a:	jp     0x403299
  40330c:	xor    al,0x34
  40330e:	mov    BYTE PTR [ebp-0x726bcbcc],cl
  403314:	xor    al,0x34
  403316:	lods   al,BYTE PTR ds:[esi]
  403317:	lea    esi,[esp+esi*1]
  40331a:	mov    al,ds:0xba34348d
  40331f:	lea    esi,[esp+esi*1]
  403322:	sub    al,0x8f
  403324:	xor    al,0x34
  403326:	adc    BYTE PTR [edi-0x70c3cbcc],cl
  40332c:	add    BYTE PTR [eax],al
  40332e:	xor    al,0x34
  403330:	cmp    BYTE PTR [edi-0x70d7cbcc],cl
  403336:	xor    al,0x34
  403338:	mov    esp,0xc634348e
  40333d:	mov    ?,WORD PTR [esp+esi*1]
  403340:	fimul  WORD PTR [esi-0x711dcbcc]
  403346:	xor    al,0x34
  403348:	bound  ecx,QWORD PTR [esi-0x7319cbcc]
  40334e:	xor    al,0x34
  403350:	jbe    0x4032de
  403352:	xor    al,0x34
  403354:	inc    edx
  403355:	mov    ?,WORD PTR [esp+esi*1]
  403358:	and    al,0x8e
  40335a:	xor    al,0x34
  40335c:	sub    al,0x8e
  40335e:	xor    al,0x34
  403360:	add    DWORD PTR [ecx],ebp
  403362:	test   eax,0xa7eb0133
  403367:	xor    eax,DWORD PTR [ecx]
  403369:	sti    
  40336a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40336b:	xor    eax,DWORD PTR [ecx]
  40336d:	lds    esp,FWORD PTR [edi-0x5824fecd]
  403373:	xor    eax,DWORD PTR [ecx]
  403375:	stos   DWORD PTR es:[edi],eax
  403376:	(bad)  
  403377:	xor    eax,DWORD PTR [ecx]
  403379:	cdq    
  40337a:	(bad)  
  40337b:	xor    eax,DWORD PTR [ecx]
  40337d:	popf   
  40337e:	(bad)  
  40337f:	xor    eax,DWORD PTR [ecx]
  403381:	xchg   ebx,eax
  403382:	lds    esi,FWORD PTR [ebx]
  403384:	add    DWORD PTR [ebp+0x250133a5],ebx
  40338a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40338b:	xor    eax,DWORD PTR [ecx]
  40338d:	adc    DWORD PTR [ebx+esi*1+0xf301],esp
  403394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403395:	xor    eax,DWORD PTR [ecx]
  403397:	jecxz  0x40335e
  403399:	xor    eax,DWORD PTR [ecx]
  40339b:	jmp    0x403362
  40339d:	xor    eax,DWORD PTR [ecx]
  40339f:	mov    ch,0xc6
  4033a1:	xor    eax,DWORD PTR [ecx]
  4033a3:	leave  
  4033a4:	(bad)  
  4033a5:	xor    eax,DWORD PTR [ecx]
  4033a7:	popf   
  4033a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a9:	xor    eax,DWORD PTR [ecx]
  4033ab:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4033ad:	xor    eax,DWORD PTR [ecx]
  4033af:	push   ecx
  4033b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b1:	xor    eax,DWORD PTR [ecx]
  4033b3:	jno    0x40335b
  4033b5:	xor    eax,DWORD PTR [ecx]
  4033b7:	pop    edi
  4033b8:	(bad)  
  4033b9:	xor    al,BYTE PTR [ecx]
  4033bb:	pop    es
  4033bc:	lds    esi,FWORD PTR [edx]
  4033be:	add    ebx,edi
  4033c0:	(bad)  
  4033c1:	xor    al,BYTE PTR [ecx]
  4033c3:	or     ebp,eax
  4033c5:	xor    al,BYTE PTR [ecx]
  4033c7:	sbb    eax,0x250132a5
  4033cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033cd:	xor    al,BYTE PTR [ecx]
  4033cf:	shld   DWORD PTR [edx],esi,cl
  4033d2:	add    DWORD PTR [ecx-0x59],ebp
  4033d5:	xor    al,BYTE PTR [ecx]
  4033d7:	jg     0x40339b
  4033d9:	xor    al,BYTE PTR [ecx]
  4033db:	add    BYTE PTR [esi+0x500002a8],bh
  4033e1:	test   eax,0xa89a0002
  4033e6:	add    al,BYTE PTR [eax]
  4033e8:	shr    BYTE PTR [eax-0x5767fffe],0x2
  4033ef:	add    dl,dh
  4033f1:	test   al,0x2
  4033f3:	add    dl,al
  4033f5:	test   al,0x2
  4033f7:	add    BYTE PTR [eax],al
  4033f9:	add    BYTE PTR [esi+0x200002a8],dl
  4033ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403400:	add    al,BYTE PTR [eax]
  403402:	out    dx,al
  403403:	mov    ds:0xa45e0002,eax
  403408:	add    al,BYTE PTR [eax]
  40340a:	pop    esi
  40340b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40340c:	add    al,BYTE PTR [eax]
  40340e:	int3   
  40340f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403410:	add    al,BYTE PTR [eax]
  403412:	jp     0x4033ba
  403414:	add    al,BYTE PTR [eax]
  403416:	pop    eax
  403417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403418:	add    al,BYTE PTR [eax]
  40341a:	push   esi
  40341b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40341c:	add    al,BYTE PTR [eax]
  40341e:	push   esp
  40341f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403420:	add    al,BYTE PTR [eax]
  403422:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403424:	add    al,BYTE PTR [eax]
  403426:	dec    esi
  403427:	xor    al,BYTE PTR [ecx]
  403429:	add    BYTE PTR [edi+edx*4],cl
  40342c:	add    al,BYTE PTR [eax]
  40342e:	hlt    
  40342f:	xchg   esi,eax
  403430:	add    al,BYTE PTR [eax]
  403432:	bound  edx,QWORD PTR [ebp-0x6a89fffe]
  403438:	add    al,BYTE PTR [eax]
  40343a:	sub    al,0x97
  40343c:	add    al,BYTE PTR [eax]
  40343e:	stos   BYTE PTR es:[edi],al
  40343f:	xchg   esp,eax
  403440:	add    al,BYTE PTR [eax]
  403442:	enter  0x294,0x0
  403446:	into   
  403447:	xchg   esp,eax
  403448:	add    al,BYTE PTR [eax]
  40344a:	je     0x4033e0
  40344c:	add    al,BYTE PTR [eax]
  40344e:	mov    BYTE PTR [edx+eax*1+0x2948e00],dl
  403455:	add    BYTE PTR [edi],dh
  403457:	repz sahf 
  403459:	add    esi,DWORD PTR [edi]
  40345b:	jns    0x4033fb
  40345d:	add    eax,DWORD PTR [eax]
  40345f:	add    BYTE PTR [edi],dh
  403461:	mov    DWORD PTR [esi-0x5edac8fd],ebx
  403467:	add    esi,DWORD PTR [edi]
  403469:	xlat   BYTE PTR ds:[ebx]
  40346a:	sahf   
  40346b:	add    esi,DWORD PTR [edi]
  40346d:	retf   
  40346e:	sahf   
  40346f:	add    esi,DWORD PTR [edi]
  403471:	and    DWORD PTR [ebx+eax*1+0x3a3fd37],esp
  403478:	aaa    
  403479:	inc    ebx
  40347a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40347b:	add    esi,DWORD PTR [edi]
  40347d:	jno    0x403423
  40347f:	add    esi,DWORD PTR [edi]
  403481:	ins    DWORD PTR es:[edi],dx
  403482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403483:	add    esi,DWORD PTR [edi]
  403485:	retf   
  403486:	add    al,BYTE PTR [eax]
  403488:	aaa    
  403489:	ja     0x40342f
  40348b:	add    esi,DWORD PTR [edi]
  40348d:	fadd   QWORD PTR [edx]
  40348f:	add    BYTE PTR [edi-0x48fffd38],dh
  403495:	int3   
  403496:	add    al,BYTE PTR [eax]
  403498:	mov    bh,0xd0
  40349a:	add    al,BYTE PTR [eax]
  40349c:	mov    bh,0xce
  40349e:	add    al,BYTE PTR [eax]
  4034a0:	mov    bh,0xfb
  4034a2:	add    al,0x0
  4034a4:	mov    bh,0x9
  4034a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034a7:	add    esi,DWORD PTR [edi]
  4034a9:	stos   DWORD PTR es:[edi],eax
  4034aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ab:	add    esi,DWORD PTR [edi]
  4034ad:	pop    edi
  4034ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034af:	add    esi,DWORD PTR [edi]
  4034b1:	mov    DWORD PTR [edx],0xa715b700
  4034b7:	add    esi,DWORD PTR [edi]
  4034b9:	sbb    al,BYTE PTR ds:0xa72cb700
  4034bf:	add    esi,DWORD PTR [edi]
  4034c1:	pop    ss
  4034c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034c3:	add    eax,DWORD PTR [eax]
  4034c5:	add    BYTE PTR [edi],dh
  4034c7:	fld    QWORD PTR [edx]
  4034c9:	add    BYTE PTR [edi-0x48fffd29],dh
  4034cf:	mov    esi,0x33b70002
  4034d4:	jmp    0x3703:0xfab43703
  4034db:	mov    ah,0xee
  4034dd:	add    esi,DWORD PTR [edi]
  4034df:	mov    ah,0xf4
  4034e1:	add    esi,DWORD PTR [edi]
  4034e3:	mov    ah,0xc
  4034e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e6:	xor    al,0x34
  4034e8:	loop   0x40348f
  4034ea:	xor    al,0x34
  4034ec:	fsub   DWORD PTR [ebp+0x3d83434]
  4034f2:	aaa    
  4034f3:	mov    ah,0xeb
  4034f5:	add    esi,DWORD PTR [edi]
  4034f7:	mov    ah,0xfb
  4034f9:	add    esi,DWORD PTR [edi]
  4034fb:	mov    ah,0x87
  4034fd:	add    esi,DWORD PTR [edi]
  4034ff:	mov    ah,0xf7
  403501:	add    esi,DWORD PTR [edi]
  403503:	mov    ah,0xe8
  403505:	add    esi,DWORD PTR [edi]
  403507:	xor    al,0x10
  403509:	sahf   
  40350a:	xor    al,0x34
  40350c:	cli    
  40350d:	popf   
  40350e:	xor    al,0x34
  403510:	in     al,dx
  403511:	popf   
  403512:	xor    al,0x34
  403514:	out    dx,al
  403515:	popf   
  403516:	xor    al,0x34
  403518:	clc    
  403519:	popf   
  40351a:	xor    al,0x34
  40351c:	repnz popf 
  40351e:	xor    al,0x34
  403520:	push   es
  403521:	sahf   
  403522:	xor    al,0x34
  403524:	adc    al,0x9e
  403526:	xor    al,0x34
  403528:	neg    BYTE PTR [ebp+0x34340000]
  40352e:	sub    BYTE PTR [esi-0x61dfcbcc],bl
  403534:	xor    al,0x34
  403536:	cmp    bl,BYTE PTR [esi-0x61efcbcc]
  40353c:	xor    al,0x34
  40353e:	or     bl,BYTE PTR [edi-0x61e7cbcc]
  403544:	xor    al,0x34
  403546:	push   es
  403547:	sahf   
  403548:	xor    al,0x34
  40354a:	data16 sahf 
  40354c:	xor    al,0x34
  40354e:	add    DWORD PTR [ebx-0x4f],ebx
  403551:	aaa    
  403552:	add    DWORD PTR [ebx-0x57],edx
  403555:	aaa    
  403556:	add    DWORD PTR [ebp-0x70fec85f],ecx
  40355c:	cdq    
  40355d:	aaa    
  40355e:	add    DWORD PTR [ebp+0x210137d1],edx
  403564:	leave  
  403565:	aaa    
  403566:	add    DWORD PTR [ebx],ebx
  403568:	shl    DWORD PTR [edi],0x1
  40356b:	pop    ds
  40356c:	mov    ecx,0xb1410137
  403571:	aaa    
  403572:	add    ecx,ebp
  403574:	xor    al,0x34
  403576:	add    DWORD PTR [ebx],ebx
  403578:	fwait
  403579:	aaa    
  40357a:	add    DWORD PTR [ecx],ecx
  40357c:	xchg   ebx,eax
  40357d:	aaa    
  40357e:	add    DWORD PTR [edi],esp
  403580:	(bad)  [edi]
  403582:	add    DWORD PTR [ebx-0x2d],edx
  403585:	aaa    
  403586:	add    DWORD PTR [ebx-0x25],ecx
  403589:	aaa    
  40358a:	add    ebp,esp
  40358c:	shl    DWORD PTR [edi],cl
  40358e:	add    ecx,ebp
  403590:	add    BYTE PTR [eax],al
  403592:	xor    al,0x34
  403594:	add    ecx,ebp
  403596:	xor    al,0x34
  403598:	add    DWORD PTR [eax-0x27],ebp
  40359b:	sub    BYTE PTR [bx],dl
  40359e:	or     al,0x86
  4035a0:	adc    BYTE PTR [ebx+0x1ebeb36a],bl
  4035a6:	mov    ebx,0x995c6172
  4035ab:	addr16 sub bh,dh
  4035ae:	int    0x85
  4035b0:	adc    BYTE PTR [ebx+0x4a],bh
  4035b3:	mov    bl,0xbe
  4035b5:	push   ds
  4035b6:	mov    ebx,0xc9db6172
  4035bb:	cmp    dh,ah
  4035bd:	cmp    BYTE PTR [esi-0x79],dh
  4035c0:	adc    BYTE PTR [eax-0x1d],ah
  4035c3:	xor    eax,DWORD PTR [ecx]
  4035c5:	xchg   ecx,eax
  4035c6:	xor    DWORD PTR [esi+0x5e6e0020],edx
  4035cc:	dec    ecx
  4035cd:	loopne 0x403568
  4035cf:	jb     0x40356e
  4035d1:	dec    ebp
  4035d2:	add    BYTE PTR [ecx-0x1851be8a],0x94
  4035d9:	mul    DWORD PTR [ebx+0x2d]
  4035dc:	mov    bh,dh
  4035de:	push   edx
  4035df:	in     eax,dx
  4035e0:	xor    eax,DWORD PTR [esi-0x44]
  4035e3:	mov    bl,bl
  4035e5:	push   es
  4035e6:	jae    0x403630
  4035e8:	sbb    esi,edx
  4035ea:	adc    ah,dh
  4035ec:	mov    ds:0x6d61ab0c,eax
  4035f1:	dec    edx
  4035f2:	dec    ecx
  4035f3:	lds    ebx,FWORD PTR [esi-0x11ffff8a]
  4035f9:	mov    al,0x7c
  4035fb:	cmc    
  4035fc:	mov    WORD PTR [edi+0x8d7304d],cs
  403602:	fld    DWORD PTR [eax+0x32]
  403605:	pop    ebp
  403606:	mov    eax,0x9aab5213
  40360b:	aam    0x16
  40360d:	pop    esp
  40360e:	push   esp
  40360f:	lods   eax,DWORD PTR ds:[esi]
  403610:	pop    edi
  403611:	jns    0x40365e
  403613:	inc    edi
  403614:	sbb    BYTE PTR [edx-0x3],al
  403617:	or     al,0x7e
  403619:	and    esi,DWORD PTR [esi-0x23af84c8]
  40361f:	jo     0x4035bc
  403621:	sti    
  403622:	call   0x22e7fe6d
  403627:	mov    dh,0xcd
  403629:	jno    0x403654
  40362b:	pop    ebp
  40362d:	out    dx,eax
  40362e:	fs jno 0x403617
  403631:	enter  0x42bc,0xe0
  403635:	call   0x25b:0x4fc21052
  40363c:	pop    es
  40363d:	or     dh,BYTE PTR [edi+0x61]
  403640:	sub    cl,BYTE PTR [edi]
  403642:	and    BYTE PTR gs:[edi],dh
  403645:	dec    ebx
  403646:	bound  esi,QWORD PTR [edx-0x6a]
  403649:	mov    al,0x5f
  40364b:	je     0x4035e7
  40364d:	lods   eax,DWORD PTR ds:[esi]
  40364e:	and    dh,BYTE PTR [eax-0x6a]
  403651:	scas   al,BYTE PTR es:[edi]
  403652:	jno    0x4036b9
  403654:	fwait
  403655:	jnp    0x4036c5
  403657:	outs   dx,DWORD PTR ds:[esi]
  403658:	push   edi
  403659:	pop    esi
  40365a:	and    eax,0x8a000072
  40365f:	mov    DWORD PTR [esi+0x69],ebp
  403662:	mov    bh,BYTE PTR [eax+0x22]
  403665:	pushw  0x79
  403668:	popa   
  403669:	je     0x4036c9
  40366b:	repnz push esp
  40366d:	cs sub eax,0x3700029b
  403673:	sti    
  403674:	lods   al,BYTE PTR ds:[esi]
  403675:	inc    ebx
  403676:	aaa    
  403677:	stos   DWORD PTR es:[edi],eax
  403678:	stos   DWORD PTR es:[edi],eax
  403679:	inc    ebx
  40367a:	aaa    
  40367b:	xor    eax,DWORD PTR ds:0x2d0376e
  403681:	ins    BYTE PTR es:[edi],dx
  403682:	aaa    
  403683:	mov    edi,0x9b372902
  403688:	add    al,BYTE PTR [eax]
  40368a:	aaa    
  40368b:	jae    0x4036e1
  40368d:	jne    0x4036a2
  40368f:	(bad)  
  403690:	sbb    eax,DWORD PTR [eax]
  403692:	aaa    
  403693:	fwait
  403694:	add    al,BYTE PTR [eax]
  403696:	aaa    
  403697:	mov    eax,ds:0x1bb18082
  40369c:	add    BYTE PTR [eax+0x3129b37],0xb1
  4036a3:	sbb    edi,DWORD PTR [edx+eax*4-0x49]
  4036a7:	scas   eax,DWORD PTR es:[edi]
  4036a8:	inc    DWORD PTR [edx+esi*8]
  4036ab:	push   edi
  4036ac:	test   DWORD PTR ds:[edx+0x58ffff20],edi
  4036b3:	stos   DWORD PTR es:[edi],eax
  4036b4:	xor    al,BYTE PTR [eax+0x821ae7]
  4036ba:	aas    
  4036bb:	fwait
  4036bc:	sbb    ah,BYTE PTR [edi]
  4036be:	push   DWORD PTR [ebx]
  4036c0:	cmp    BYTE PTR [ebp+0x0],cl
  4036c3:	add    BYTE PTR [edi+0x6803e734],dh
  4036c9:	fcom   DWORD PTR fs:[ebx-0x79]
  4036cd:	mov    esp,0x543703e8
  4036d2:	rol    BYTE PTR [ebx+0x368b3af],1
  4036d8:	aaa    
  4036d9:	xor    al,0x8
  4036db:	fs xchg edi,eax
  4036dd:	sbb    al,0x0
  4036df:	pop    esp
  4036e0:	das    
  4036e1:	cmp    al,0xef
  4036e3:	imul   eax,DWORD PTR [edi+0x6773d724],0x3c
  4036ea:	loopne 0x4036ef
  4036ec:	aaa    
  4036ed:	cmp    al,0xe8
  4036ef:	sti    
  4036f0:	loopne 0x40372b
  4036f2:	lock add esi,DWORD PTR [edi]
  4036f5:	xor    al,0xe8
  4036f7:	add    esi,DWORD PTR [edi]
  4036f9:	xor    al,0xe8
  4036fb:	add    esi,DWORD PTR [edi]
  4036fd:	xor    al,0xe8
  4036ff:	add    esi,DWORD PTR [edi]
  403701:	xor    al,0xc8
  403703:	or     DWORD PTR [esp+esi*1-0x1c],esi
  403707:	add    edi,DWORD PTR [ebx]
  403709:	xor    al,0xe0
  40370b:	add    esi,DWORD PTR [ebx]
  40370d:	xor    al,0x88
  40370f:	or     ah,dh
  403711:	xor    ebp,esp
  403713:	add    esi,DWORD PTR [edx]
  403715:	xor    al,0xd8
  403717:	add    edi,DWORD PTR [edi]
  403719:	xor    al,0x88
  40371b:	or     ah,dh
  40371d:	xor    esp,esp
  40371f:	add    edi,DWORD PTR [ecx]
  403721:	xor    al,0x8
  403723:	add    al,0x57
  403725:	xor    al,0x48
  403727:	inc    DWORD PTR [eax]
  403729:	add    ch,dh
  40372b:	xor    ebp,esp
  40372d:	add    esi,DWORD PTR [ebx]
  40372f:	xor    al,0xf8
  403731:	add    eax,DWORD PTR [edi+0x34]
  403734:	sub    BYTE PTR [edx],al
  403736:	hlt    
  403737:	xor    esi,eax
  403739:	add    esp,DWORD PTR [edi]
  40373b:	xor    al,0x1
  40373d:	or     DWORD PTR [ebx],esi
  40373f:	push   esp
  403740:	add    DWORD PTR [ecx],ebp
  403742:	xor    eax,0x34f100f5
  403747:	inc    esp
  403748:	add    DWORD PTR [ecx+0x3b],ebp
  40374b:	mov    ah,0x1
  40374d:	sub    DWORD PTR ds:0x34e100f3,esi
  403753:	push   esp
  403754:	add    DWORD PTR [ecx+0x33],ebp
  403757:	xor    al,0x0
  403759:	sub    DWORD PTR ds:0x34c900f3,esi
  40375f:	mov    ah,0x1
  403761:	jmp    0x40379e
  403763:	xor    al,0x5
  403765:	test   eax,0x900f336
  40376a:	cmp    esi,DWORD PTR [edx]
  40376c:	add    bl,ch
  40376e:	xor    esi,DWORD PTR [ecx+edx*1]
  403771:	test   eax,0xf800f336
  403776:	bound  ebp,QWORD PTR es:[edi]
  403779:	hlt    
  40377a:	xor    al,0x34
  40377c:	add    ecx,ecx
  40377e:	cmp    eax,0x2ce90134
  403783:	add    al,0x1
  403785:	jmp    0xf5417bb6
  40378a:	cmp    al,0x23
  40378c:	add    ebx,edi
  40378e:	add    BYTE PTR [eax],al
  403790:	cmp    eax,0x2ce9014f
  403795:	and    al,0x1
  403797:	jmp    0xe9419bc8
  40379c:	inc    ebx
  40379d:	je     0x4037a0
  40379f:	fnstcw WORD PTR ds:0x2ce9013a
  4037a5:	adc    al,0x1
  4037a7:	jmp    0xe9418bd8
  4037ac:	inc    ebx
  4037ad:	aam    0x1
  4037af:	jmp    0xe9416bf0
  4037b4:	sub    al,0xb4
  4037b6:	add    DWORD PTR [eax],eax
  4037b8:	dec    esi
  4037b9:	cmp    eax,DWORD PTR [ecx+0x0]
  4037bc:	pop    esi
  4037bd:	inc    eax
  4037be:	loope  0x4037c0
  4037c0:	outs   dx,BYTE PTR ds:[esi]
  4037c1:	cmp    al,BYTE PTR [edi]
  4037c3:	add    BYTE PTR [esi+0x3b],cl
  4037c6:	pop    ecx
  4037c7:	add    BYTE PTR [esi+0x3b],cl
  4037ca:	sbb    DWORD PTR [eax],eax
  4037cc:	push   ds
  4037cd:	inc    eax
  4037ce:	xchg   ecx,eax
  4037cf:	add    BYTE PTR ds:0xe003a3a,ch
  4037d5:	cmp    edi,DWORD PTR [ecx+0x0]
  4037d8:	push   cs
  4037d9:	cmp    edi,DWORD PTR [ecx]
  4037db:	add    BYTE PTR [esi],bl
  4037dd:	inc    eax
  4037de:	rol    DWORD PTR [eax],1
  4037e0:	out    dx,eax
  4037e1:	cmp    DWORD PTR [eax],edx
  4037e3:	add    BYTE PTR [esi],cl
  4037e5:	cmp    ebp,DWORD PTR [ecx+0x0]
  4037e8:	push   cs
  4037e9:	cmp    ebp,DWORD PTR [ecx]
  4037eb:	add    dh,bl
  4037ed:	aas    
  4037ee:	mov    cl,0x0
  4037f0:	fidivr WORD PTR [edx]
  4037f2:	or     DWORD PTR [eax],eax
  4037f4:	add    BYTE PTR [eax],al
  4037f6:	into   
  4037f7:	cmp    cl,BYTE PTR [ecx+0x493ace00]
  4037fd:	add    dh,bl
  4037ff:	aas    
  403800:	icebp  
  403801:	add    dh,ch
  403803:	cmp    DWORD PTR ds:0x553ace00,eax
  403809:	add    dh,cl
  40380b:	cmp    dl,BYTE PTR ds:0xe23aab00
  403811:	add    BYTE PTR [ebp-0x71ffd5c7],ch
  403817:	cmp    dh,BYTE PTR [ebp+0x0]
  40381a:	mov    ?,WORD PTR [edx]
  40381c:	xor    eax,0xc93f9e00
  403821:	add    BYTE PTR [edi+0x39],ch
  403824:	or     al,0x0
  403826:	mov    ?,WORD PTR [edx]
  403828:	add    BYTE PTR gs:[esi+0x5e00253a],cl
  40382f:	cmp    DWORD PTR [ecx+0xa9d3700],ebp
  403835:	add    al,0x37
  403837:	popf   
  403838:	or     al,BYTE PTR [edi+esi*1+0x37440a9d]
  40383f:	popf   
  403840:	or     ebp,eax
  403842:	aaa    
  403843:	lea    ecx,[ecx]
  403845:	or     BYTE PTR [edi],dh
  403847:	popf   
  403848:	or     bl,BYTE PTR [edi+esi*1-0x63]
  40384c:	or     bl,BYTE PTR [edi+esi*1]
  40384f:	fwait
  403850:	or     ebx,DWORD PTR [eax+0x5309af37]
  403856:	aaa    
  403857:	fwait
  403858:	or     bh,BYTE PTR [eax+eax*1+0x0]
  40385c:	aaa    
  40385d:	fwait
  40385e:	or     bh,BYTE PTR [edi+esi*1]
  403861:	fwait
  403862:	or     ebx,eax
  403864:	aaa    
  403865:	mov    DWORD PTR [ecx],ecx
  403867:	pop    ss
  403868:	aaa    
  403869:	fwait
  40386a:	or     ch,BYTE PTR [edi+esi*1-0x65]
  40386e:	or     ch,BYTE PTR [edi+esi*1]
  403871:	fwait
  403872:	or     edi,DWORD PTR [eax+0xc0a9b37]
  403878:	aaa    
  403879:	fwait
  40387a:	or     cl,BYTE PTR [edi+esi*1+0x374c0a9b]
  403881:	fwait
  403882:	or     edi,eax
  403884:	aaa    
  403885:	mov    ecx,DWORD PTR [ecx]
  403887:	add    esi,DWORD PTR [edi]
  403889:	fwait
  40388a:	or     dl,BYTE PTR [edx+0x37]
  40388d:	fwait
  40388e:	or     dl,BYTE PTR [edx]
  403890:	aaa    
  403891:	test   al,0xa
  403893:	mov    ds:0x2309aa37,eax
  403898:	aaa    
  403899:	fwait
  40389a:	or     dh,BYTE PTR [edx+0x37]
  40389d:	fwait
  40389e:	or     dh,BYTE PTR [edx]
  4038a0:	aaa    
  4038a1:	fwait
  4038a2:	or     eax,esp
  4038a4:	aaa    
  4038a5:	mov    WORD PTR [ecx],cs
  4038a7:	or     esi,DWORD PTR [edi]
  4038a9:	fwait
  4038aa:	or     ah,BYTE PTR [edx+0x37]
  4038ad:	xor    al,0xe8
  4038af:	or     edx,DWORD PTR ds:0x930ae834
  4038b5:	xor    al,0xe8
  4038b7:	or     esi,DWORD PTR ds:0xb50be834
  4038bd:	xor    al,0xe8
  4038bf:	or     eax,DWORD PTR [eax]
  4038c1:	add    ch,dh
  4038c3:	xor    ebp,eax
  4038c5:	or     dl,BYTE PTR [ebx+0x34]
  4038c8:	fmul   DWORD PTR [eax]
  4038ca:	cmp    BYTE PTR [eax+ebp*8],dh
  4038cd:	or     ebx,ebp
  4038cf:	xor    ebp,eax
  4038d1:	or     ecx,DWORD PTR [ebp+0x34]
  4038d4:	call   0xfc73fbe3
  4038d9:	or     BYTE PTR [esp+esi*1-0x18],dh
  4038dd:	or     ebx,DWORD PTR [ebp+0x4d0be834]
  4038e3:	xor    al,0xe8
  4038e5:	or     ah,bl
  4038e7:	xor    ebx,edx
  4038e9:	or     BYTE PTR [esp+esi*1],ah
  4038ec:	call   0xe874c5fc
  4038f1:	or     ebx,DWORD PTR ds:0xa30ae834
  4038f7:	xor    ebp,eax
  4038f9:	or     ebp,DWORD PTR ds:0xad0be834
  4038ff:	xor    ebp,eax
  403901:	or     edi,DWORD PTR [ebp+0x34]
  403904:	call   0xd873fc13
  403909:	or     BYTE PTR [edx],bh
  40390b:	xor    al,0xe8
  40390d:	or     esp,DWORD PTR [ecx+0x34]
  403910:	call   0xa8748220
  403915:	or     esi,DWORD PTR [edi]
  403917:	xor    al,0xfb
  403919:	or     BYTE PTR [esp+esi*1-0x18],ah
  40391d:	or     esp,DWORD PTR [ecx]
  40391f:	xor    al,0xe8
  403921:	or     ecx,DWORD PTR [ecx+0x34]
  403924:	call   0x7b403933
  403929:	xor    eax,DWORD PTR [ecx]
  40392b:	fsubr  DWORD PTR [edi]
  40392d:	cmp    eax,0x162ce901
  403932:	add    ecx,ebp
  403934:	cmp    al,0x56
  403936:	add    ecx,ebp
  403938:	cmp    esp,eax
  40393a:	add    ecx,ebp
  40393c:	sub    al,0x36
  40393e:	add    ecx,ebp
  403940:	sub    al,0xb6
  403942:	add    ecx,ebp
  403944:	cmp    al,0xf6
  403946:	add    cl,ch
  403948:	cmp    esp,DWORD PTR [eax+0x3b39d901]
  40394e:	add    ecx,ebp
  403950:	sub    al,0xe
  403952:	add    ecx,ebp
  403954:	cmp    al,0x4a
  403956:	add    ecx,ebp
  403958:	cmp    ecx,eax
  40395a:	add    ebp,edi
  40395c:	cmp    DWORD PTR [edi],edx
  40395e:	add    ecx,ebp
  403960:	sub    al,0x2a
  403962:	add    ecx,ebp
  403964:	cmp    al,0x6a
  403966:	add    ecx,ebp
  403968:	cmp    ecx,DWORD PTR [eax+0x4f39db01]
  40396e:	add    ecx,ebp
  403970:	sub    al,0x1a
  403972:	add    ecx,ebp
  403974:	cmp    al,0x5a
  403976:	add    ecx,ebp
  403978:	cmp    ebp,eax
  40397a:	add    ecx,ebp
  40397c:	sub    al,0x3a
  40397e:	add    ecx,ebp
  403980:	sub    al,0xba
  403982:	add    ecx,ebp
  403984:	cmp    al,0xfa
  403986:	add    cl,ch
  403988:	cmp    ebp,DWORD PTR [eax+0xc901]
  40398e:	cmp    DWORD PTR [ecx+eax*1],esi
  403991:	jmp    0xe9413ec2
  403996:	cmp    al,0x45
  403998:	add    esp,esi
  40399a:	cmp    al,0xb7
  40399c:	add    ebx,edi
  40399e:	cmp    DWORD PTR [ebx+0x1],ecx
  4039a1:	jmp    0x415ed2
  4039a6:	sahf   
  4039a7:	aas    
  4039a8:	xor    BYTE PTR [eax],al
  4039aa:	sahf   
  4039ab:	cmp    bl,al
  4039ad:	add    BYTE PTR [esi+0x32],bl
  4039b0:	or     eax,DWORD PTR [eax]
  4039b2:	mov    ?,WORD PTR [edi]
  4039b4:	pusha  
  4039b5:	add    BYTE PTR [esi+0x3f],bl
  4039b8:	and    BYTE PTR [eax],al
  4039ba:	pop    esi
  4039bb:	cmp    BYTE PTR [ebx+0x3f4e00],ah
  4039c1:	add    BYTE PTR [esi+0x3f],cl
  4039c4:	add    BYTE PTR [eax],0x5e
  4039c7:	aas    
  4039c8:	inc    eax
  4039c9:	add    BYTE PTR [esi+0x38],bl
  4039cc:	jecxz  0x4039ce
  4039ce:	pop    esi
  4039cf:	xor    al,BYTE PTR [edi]
  4039d1:	add    BYTE PTR [esi+0x3f],cl
  4039d4:	pop    eax
  4039d5:	add    BYTE PTR [esi],bl
  4039d7:	aas    
  4039d8:	sbb    BYTE PTR [eax],al
  4039da:	push   ds
  4039db:	cmp    BYTE PTR [ebx+0x3a321d00],dl
  4039e1:	add    BYTE PTR [esi],cl
  4039e3:	aas    
  4039e4:	js     0x4039e6
  4039e6:	push   ds
  4039e7:	aas    
  4039e8:	cmp    BYTE PTR [eax],al
  4039ea:	push   ds
  4039eb:	cmp    bl,dl
  4039ed:	add    bh,bl
  4039ef:	xor    DWORD PTR [eax],edx
  4039f1:	add    BYTE PTR [eax],al
  4039f3:	add    BYTE PTR [esi],cl
  4039f5:	aas    
  4039f6:	push   0x283ede00
  4039fb:	add    dh,bl
  4039fd:	aaa    
  4039fe:	mov    bl,0x0
  403a00:	into   
  403a01:	or     BYTE PTR ds:[eax],al
  403a04:	into   
  403a05:	mov    BYTE PTR ds:[eax],al
  403a08:	fidivr WORD PTR [esi]
  403a0a:	dec    eax
  403a0b:	add    dh,bl
  403a0d:	aaa    
  403a0e:	repz add dh,bl
  403a11:	xor    DWORD PTR ds:0x543ece00,eax
  403a17:	add    BYTE PTR [esi-0x51ffebc2],bl
  403a1d:	add    eax,DWORD PTR ds:[ecx]
  403a20:	aaa    
  403a21:	scas   al,BYTE PTR es:[edi]
  403a22:	pop    es
  403a23:	sub    esi,DWORD PTR [edi]
  403a25:	popf   
  403a26:	or     dh,BYTE PTR [ebp+0x37]
  403a29:	popf   
  403a2a:	or     dh,BYTE PTR ds:0xca0d9d37
  403a30:	aaa    
  403a31:	mov    WORD PTR [edi],es
  403a33:	or     eax,0x650a9d37
  403a38:	aaa    
  403a39:	popf   
  403a3a:	or     ah,BYTE PTR ds:0xaa0b9d37
  403a40:	aaa    
  403a41:	popf   
  403a42:	or     al,BYTE PTR ds:0x850a9d37
  403a48:	aaa    
  403a49:	popf   
  403a4a:	or     al,BYTE PTR [ebp+0x37]
  403a4d:	popf   
  403a4e:	or     ebp,edx
  403a50:	aaa    
  403a51:	lea    eax,ds:0xa9d3708
  403a57:	pop    ebp
  403a58:	add    BYTE PTR [eax],al
  403a5a:	aaa    
  403a5b:	fwait
  403a5c:	or     bl,BYTE PTR ds:0x9a0b9b37
  403a62:	aaa    
  403a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a64:	add    eax,0xa9b3753
  403a69:	jge    0x403aa2
  403a6b:	fwait
  403a6c:	or     bh,BYTE PTR ds:0xda0b9b37
  403a72:	aaa    
  403a73:	lea    eax,ds:0xa9b3717
  403a79:	ins    DWORD PTR es:[edi],dx
  403a7a:	aaa    
  403a7b:	fwait
  403a7c:	or     ch,BYTE PTR ds:0xba0b9b37
  403a82:	aaa    
  403a83:	fwait
  403a84:	or     cl,BYTE PTR ds:0x8d0a9b37
  403a8a:	aaa    
  403a8b:	fwait
  403a8c:	or     cl,BYTE PTR [ebp+0x37]
  403a8f:	fwait
  403a90:	or     edi,edx
  403a92:	aaa    
  403a93:	mov    eax,DWORD PTR ds:0xa9b3703
  403a99:	push   ebx
  403a9a:	aaa    
  403a9b:	xor    al,0xe8
  403a9d:	or     eax,DWORD PTR [esp+esi*1-0xb]
  403aa1:	or     esi,DWORD PTR [esp+esi*1-0x5]
  403aa5:	add    al,0x54
  403aa7:	xor    al,0xe8
  403aa9:	or     eax,DWORD PTR [esp+esi*1]
  403aac:	call   0xe8747ebc
  403ab1:	or     bh,BYTE PTR [ecx+0x34]
  403ab4:	fld    DWORD PTR [esp+ebp*1]
  403ab7:	xor    al,0xe8
  403ab9:	or     edx,esp
  403abb:	xor    ebp,eax
  403abd:	or     eax,DWORD PTR [eax]
  403abf:	add    BYTE PTR [esp+esi*1],dl
  403ac2:	call   0xe874d3d1
  403ac7:	or     esi,DWORD PTR [esp+esi*1]
  403aca:	call   0xe874eeda
  403acf:	or     esi,esp
  403ad1:	xor    ebp,eax
  403ad3:	or     bl,BYTE PTR [ecx+0x34]
  403ad6:	fadd   DWORD PTR [eax+esi*1]
  403ad9:	xor    al,0xe8
  403adb:	or     ecx,DWORD PTR [esp+esi*1+0x344c0be8]
  403ae2:	call   0xfc7403f1
  403ae7:	add    al,0x74
  403ae9:	xor    al,0xe8
  403aeb:	or     ecx,DWORD PTR [esp+esi*1+0x344c0be8]
  403af2:	call   0xda742401
  403af7:	add    al,0x24
  403af9:	xor    al,0xe8
  403afb:	or     ebx,DWORD PTR [esp+esi*1-0x18]
  403aff:	or     ebx,DWORD PTR [esp+esi*1]
  403b02:	call   0xe873e411
  403b07:	or     ebp,DWORD PTR [esp+esi*1]
  403b0a:	call   0xe873f71a
  403b0f:	or     edi,DWORD PTR [esp+esi*1-0x18]
  403b13:	or     cl,cl
  403b15:	xor    eax,DWORD PTR [ecx]
  403b17:	fnstenv [ebx]
  403b19:	das    
  403b1a:	add    ecx,ebp
  403b1c:	cmp    al,0x1
  403b1e:	add    ecx,ebp
  403b20:	cmp    al,0x41
  403b22:	add    DWORD PTR [ecx+0x342c0000],ebp
  403b28:	add    edx,edi
  403b2a:	xor    esp,DWORD PTR [ebp+0x1]
  403b2d:	jmp    0xe9415c6e
  403b32:	cmp    al,0x61
  403b34:	add    ecx,ebp
  403b36:	sub    eax,0x33d8017a
  403b3b:	cmp    DWORD PTR [ecx],eax
  403b3d:	jmp    0xe9414c7e
  403b42:	cmp    al,0x51
  403b44:	add    ecx,ebp
  403b46:	xor    ebx,edx
  403b48:	add    ecx,ebp
  403b4a:	sub    al,0x31
  403b4c:	add    ecx,ebp
  403b4e:	cmp    al,0xb1
  403b50:	add    ecx,ebp
  403b52:	cmp    al,0xf1
  403b54:	add    cl,ch
  403b56:	xor    ebx,DWORD PTR [edx+0x3b35d901]
  403b5c:	add    ecx,ebp
  403b5e:	cmp    al,0x7
  403b60:	add    ecx,ebp
  403b62:	cmp    al,0x47
  403b64:	add    ecx,ebp
  403b66:	xor    eax,esi
  403b68:	add    ebp,edi
  403b6a:	xor    eax,0x3ce90113
  403b6f:	daa    
  403b70:	add    ecx,ebp
  403b72:	cmp    al,0x67
  403b74:	add    ecx,ebp
  403b76:	xor    eax,DWORD PTR [esi+0x4b35db01]
  403b7c:	add    ecx,ebp
  403b7e:	cmp    al,0x17
  403b80:	add    ecx,ebp
  403b82:	cmp    al,0x57
  403b84:	add    ecx,ebp
  403b86:	xor    esp,esi
  403b88:	add    ecx,ebp
  403b8a:	add    BYTE PTR [eax],al
  403b8c:	sub    al,0x37
  403b8e:	add    ecx,ebp
  403b90:	cmp    al,0xb7
  403b92:	add    DWORD PTR [eax],eax
  403b94:	fidivr WORD PTR [ebx]
  403b96:	dec    esi
  403b97:	add    dh,cl
  403b99:	cmp    bh,bh
  403b9b:	add    dh,ch
  403b9d:	xor    al,BYTE PTR [ecx]
  403b9f:	add    BYTE PTR [esi-0x61ffaec5],bl
  403ba5:	cmp    edx,DWORD PTR [ecx]
  403ba7:	add    BYTE PTR [edx-0x63ff8dc5],ch
  403bad:	xor    bl,BYTE PTR [esi]
  403baf:	add    BYTE PTR [esi-0x61ff8ec5],bl
  403bb5:	cmp    esi,DWORD PTR [ecx]
  403bb7:	add    BYTE PTR [esi+0x5e00c038],cl
  403bbd:	xor    cl,BYTE PTR [ebx]
  403bbf:	add    BYTE PTR [esi+0x3b],bl
  403bc2:	popa   
  403bc3:	add    BYTE PTR [esi+0x3b],bl
  403bc6:	and    DWORD PTR [eax],eax
  403bc8:	dec    esi
  403bc9:	cmp    BYTE PTR [eax+0x13b4e00],ah
  403bcf:	add    BYTE PTR [esi+0x3b],bl
  403bd2:	add    DWORD PTR [eax],0x413b5e
  403bd8:	dec    esi
  403bd9:	cmp    al,ah
  403bdb:	add    BYTE PTR [esi+0x32],bl
  403bde:	pop    es
  403bdf:	add    BYTE PTR [esi],bl
  403be1:	cmp    ebx,DWORD PTR [ecx+0x0]
  403be4:	push   ds
  403be5:	cmp    ebx,DWORD PTR [ecx]
  403be7:	add    BYTE PTR [esi],cl
  403be9:	cmp    BYTE PTR [eax+0x3a321d00],dl
  403bef:	add    BYTE PTR [eax],al
  403bf1:	add    BYTE PTR [esi],bl
  403bf3:	cmp    edi,DWORD PTR [ecx+0x0]
  403bf6:	push   ds
  403bf7:	cmp    edi,DWORD PTR [ecx]
  403bf9:	add    BYTE PTR [esi],cl
  403bfb:	cmp    al,dl
  403bfd:	add    bh,bl
  403bff:	xor    DWORD PTR [eax],edx
  403c01:	add    dh,bl
  403c03:	cmp    ch,BYTE PTR [ecx+0x0]
  403c06:	fidivr WORD PTR [edx]
  403c08:	sub    DWORD PTR [eax],eax
  403c0a:	into   
  403c0b:	aaa    
  403c0c:	mov    al,0x0
  403c0e:	aaa    
  403c0f:	popf   
  403c10:	or     cl,BYTE PTR [eax]
  403c12:	aaa    
  403c13:	popf   
  403c14:	or     cl,BYTE PTR [eax+0x480a9d37]
  403c1a:	aaa    
  403c1b:	popf   
  403c1c:	or     eax,0x38d37f1
  403c21:	add    al,0x37
  403c23:	popf   
  403c24:	or     dl,BYTE PTR [edi+esi*1-0x63]
  403c28:	or     dl,BYTE PTR [edi+esi*1]
  403c2b:	mov    al,ds:0xaa37e30a
  403c30:	add    ebp,DWORD PTR [ebx]
  403c32:	aaa    
  403c33:	popf   
  403c34:	or     dh,BYTE PTR [edi+esi*1-0x63]
  403c38:	or     dh,BYTE PTR [edi+esi*1]
  403c3b:	popf   
  403c3c:	or     eax,0x38c37c9
  403c41:	or     eax,0x640a9d37
  403c46:	aaa    
  403c47:	popf   
  403c48:	or     ah,BYTE PTR [edi+esi*1]
  403c4b:	popf   
  403c4c:	or     ebp,DWORD PTR [ecx+0x40a9d37]
  403c52:	aaa    
  403c53:	popf   
  403c54:	or     al,BYTE PTR [eax+eax*1+0xa9d3700]
  403c5b:	inc    esp
  403c5c:	aaa    
  403c5d:	popf   
  403c5e:	or     ebp,ecx
  403c60:	aaa    
  403c61:	lea    eax,[ecx]
  403c63:	or     BYTE PTR [edi],dh
  403c65:	fwait
  403c66:	or     bl,BYTE PTR [edi+esi*1-0x65]
  403c6a:	or     bl,BYTE PTR [edi+esi*1]
  403c6d:	fwait
  403c6e:	or     ebx,DWORD PTR [ecx+0x5301a737]
  403c74:	aaa    
  403c75:	fwait
  403c76:	or     bh,BYTE PTR [edi+esi*1-0x65]
  403c7a:	or     bh,BYTE PTR [edi+esi*1]
  403c7d:	fwait
  403c7e:	or     ebx,ecx
  403c80:	aaa    
  403c81:	mov    DWORD PTR [ecx],eax
  403c83:	pop    ss
  403c84:	aaa    
  403c85:	fwait
  403c86:	or     ch,BYTE PTR [edi+esi*1+0x34]
  403c8a:	call   0xe8744f9a
  403c8f:	or     bl,BYTE PTR [esi+0x430be834]
  403c95:	xor    al,0xe8
  403c97:	or     edi,DWORD PTR [ebx+0x730be834]
  403c9d:	xor    al,0xe8
  403c9f:	or     bh,BYTE PTR [esi+0x3400d834]
  403ca5:	xor    al,0xe8
  403ca7:	or     eax,DWORD PTR ds:0x450be834
  403cad:	xor    al,0xf5
  403caf:	or     edx,esp
  403cb1:	xor    al,0xfb
  403cb3:	add    BYTE PTR [esp+esi*1-0x18],dl
  403cb7:	or     eax,DWORD PTR ds:0xbe834
  403cbd:	add    BYTE PTR [ebp+0x34],al
  403cc0:	call   0xd974aecf
  403cc5:	add    BYTE PTR [esp+esi*1],bh
  403cc8:	call   0xe87411d8
  403ccd:	or     edx,DWORD PTR ds:0x920ae834
  403cd3:	xor    al,0xe8
  403cd5:	or     esi,DWORD PTR ds:0xb50be834
  403cdb:	xor    al,0xe8
  403cdd:	or     esi,ebp
  403cdf:	xor    ebp,eax
  403ce1:	or     dl,BYTE PTR [edx+0x34]
  403ce4:	fadd   DWORD PTR [eax]
  403ce6:	cmp    BYTE PTR [eax+ebp*8],dh
  403ce9:	or     ecx,DWORD PTR [ebp+0x3d0be834]
  403cef:	xor    al,0xe8
  403cf1:	or     al,dl
  403cf3:	xor    edi,esp
  403cf5:	add    BYTE PTR [esp+esi*1-0x18],dh
  403cf9:	or     ecx,DWORD PTR [ebp+0x3d0be834]
  403cff:	xor    al,0xe8
  403d01:	or     ah,dl
  403d03:	xor    eax,DWORD PTR [ecx]
  403d05:	(bad)  [edi]
  403d07:	inc    ecx
  403d08:	add    ecx,ebp
  403d0a:	cmp    al,0x1a
  403d0c:	add    ecx,ebp
  403d0e:	sub    al,0x5a
  403d10:	add    ecx,ebp
  403d12:	sub    eax,0x3ce901df
  403d17:	cmp    al,BYTE PTR [ecx]
  403d19:	jmp    0xe941f75a
  403d1e:	sub    al,0xfa
  403d20:	add    cl,ch
  403d22:	add    BYTE PTR [eax],al
  403d24:	sub    eax,0x37d9019f
  403d29:	das    
  403d2a:	add    ecx,ebp
  403d2c:	cmp    al,0xfe
  403d2e:	add    cl,ch
  403d30:	sub    al,0x3e
  403d32:	add    DWORD PTR [ecx-0x5fecbd4],ebp
  403d38:	aaa    
  403d39:	popa   
  403d3a:	add    ecx,ebp
  403d3c:	cmp    al,0x1e
  403d3e:	add    ecx,ebp
  403d40:	sub    al,0x5e
  403d42:	add    ecx,ebp
  403d44:	sub    eax,0x37d80177
  403d49:	xor    eax,0xe3ce901
  403d4e:	add    ecx,ebp
  403d50:	sub    al,0x4e
  403d52:	add    ecx,ebp
  403d54:	sub    edx,edi
  403d56:	add    ecx,ebp
  403d58:	cmp    al,0x2e
  403d5a:	add    ecx,ebp
  403d5c:	cmp    al,0xae
  403d5e:	add    ecx,ebp
  403d60:	sub    al,0xee
  403d62:	add    cl,ch
  403d64:	sub    edx,DWORD PTR [edi+0x2d31d901]
  403d6a:	add    ecx,ebp
  403d6c:	cmp    al,0x2
  403d6e:	add    ecx,ebp
  403d70:	sub    al,0x42
  403d72:	add    ecx,ebp
  403d74:	sub    eax,ecx
  403d76:	add    ebp,edi
  403d78:	adc    DWORD PTR [edi],edx
  403d7a:	add    ecx,ebp
  403d7c:	cmp    al,0x22
  403d7e:	add    DWORD PTR [eax],eax
  403d80:	push   cs
  403d81:	xor    BYTE PTR [edi],bh
  403d83:	add    BYTE PTR [esi],cl
  403d85:	xor    esp,ebx
  403d87:	add    BYTE PTR [eax],al
  403d89:	add    BYTE PTR [ebx+eiz*4],cl
  403d8c:	sbb    eax,DWORD PTR [eax]
  403d8e:	fisubr WORD PTR [edi]
  403d90:	outs   dx,DWORD PTR ds:[esi]
  403d91:	add    dh,cl
  403d93:	das    
  403d94:	das    
  403d95:	add    dh,cl
  403d97:	xor    BYTE PTR [eax+eax*1+0xf2fde],bh
  403d9e:	fisubr WORD PTR [edi]
  403da0:	pop    DWORD PTR [eax]
  403da2:	into   
  403da3:	das    
  403da4:	dec    edi
  403da5:	add    dh,cl
  403da7:	xor    ah,bh
  403da9:	add    BYTE PTR [esi-0x5e],bh
  403dac:	(bad)  
  403dad:	call   FWORD PTR [esi-0x71ffafd1]
  403db3:	das    
  403db4:	adc    BYTE PTR [eax],al
  403db6:	mov    ds:0x8c00822f,eax
  403dbb:	mov    ds:0x2f9e001f,al
  403dc0:	jo     0x403dc2
  403dc2:	mov    gs,WORD PTR [edi]
  403dc4:	xor    BYTE PTR [eax],al
  403dc6:	mov    ?,WORD PTR [eax]
  403dc8:	ret    0x8e00
  403dcb:	mov    ds:0x2f5e0008,al
  403dd0:	pusha  
  403dd1:	add    BYTE PTR [esi+0x2f],cl
  403dd4:	and    BYTE PTR [eax],al
  403dd6:	dec    esi
  403dd7:	xor    BYTE PTR [edx+0x2f5e00],ah
  403ddd:	add    BYTE PTR [esi+0x2f],bl
  403de0:	add    BYTE PTR [eax],0x4e
  403de3:	das    
  403de4:	inc    eax
  403de5:	add    BYTE PTR [esi+0x30],cl
  403de8:	loop   0x403dea
  403dea:	push   cs
  403deb:	mov    ds:0x4,al
  403df0:	push   ds
  403df1:	das    
  403df2:	pop    eax
  403df3:	add    BYTE PTR [esi],cl
  403df5:	das    
  403df6:	sbb    BYTE PTR [eax],al
  403df8:	push   cs
  403df9:	xor    BYTE PTR [edx-0x61c900],dl
  403dff:	cmp    dh,BYTE PTR [edi]
  403e01:	lea    ecx,[edx]
  403e03:	jns    0x403e3c
  403e05:	lea    ecx,[edx]
  403e07:	cmp    DWORD PTR [edi],esi
  403e09:	lea    ecx,ds:0xff7c37d3
  403e0f:	adc    BYTE PTR [edi],dh
  403e11:	lea    ecx,[edx]
  403e13:	imul   esi,DWORD PTR [edi],0x37290a8d
  403e19:	lea    ecx,ds:0xa8d37b3
  403e1f:	or     DWORD PTR [edi],esi
  403e21:	lea    ecx,[edx]
  403e23:	mov    DWORD PTR [edi],esi
  403e25:	lea    ecx,[edx]
  403e27:	dec    ecx
  403e28:	aaa    
  403e29:	lea    ecx,ds:0xff7d37f3
  403e2f:	add    esi,DWORD PTR [edi]
  403e31:	lea    ecx,[edx]
  403e33:	push   ebp
  403e34:	aaa    
  403e35:	lea    ecx,[edx]
  403e37:	adc    eax,0x20a9d37
  403e3c:	ss sahf 
  403e3e:	jmp    FWORD PTR [edx]
  403e40:	aaa    
  403e41:	lea    ecx,[edx]
  403e43:	jne    0x403e7c
  403e45:	lea    ecx,[edx]
  403e47:	xor    eax,0xcb0d8d37
  403e4c:	aaa    
  403e4d:	jl     0x403e4e
  403e4f:	or     al,0x37
  403e51:	lea    ecx,[edx]
  403e53:	add    BYTE PTR gs:[eax],al
  403e56:	aaa    
  403e57:	lea    ecx,[edx]
  403e59:	and    eax,0xab0b8d37
  403e5e:	aaa    
  403e5f:	lea    ecx,[edx]
  403e61:	add    eax,0x850a8d37
  403e66:	aaa    
  403e67:	lea    ecx,[edx]
  403e69:	inc    ebp
  403e6a:	aaa    
  403e6b:	lea    ecx,[ebx]
  403e6d:	jmp    0x403ea6
  403e6f:	jnp    0x403e6e
  403e71:	pop    es
  403e72:	aaa    
  403e73:	mov    ecx,DWORD PTR [edx]
  403e75:	pop    ebp
  403e76:	aaa    
  403e77:	xor    al,0xe8
  403e79:	or     edi,DWORD PTR [edx]
  403e7b:	xor    al,0xe8
  403e7d:	or     ch,BYTE PTR [esp+esi*1+0x3465fcfc]
  403e84:	call   0xe874c094
  403e89:	or     edi,DWORD PTR [edx]
  403e8b:	xor    al,0xe8
  403e8d:	or     cl,BYTE PTR [esi*1+0x3441fcda]
  403e94:	call   0xe87490a4
  403e99:	or     ecx,DWORD PTR [edx]
  403e9b:	xor    al,0xe8
  403e9d:	or     cl,BYTE PTR [esp+esi*1+0x343a0be8]
  403ea4:	call   0xe874f0b4
  403ea9:	or     ebp,DWORD PTR [edx+0x34]
  403eac:	call   0xd874eabb
  403eb1:	cld    
  403eb2:	xor    eax,0x40be834
  403eb7:	xor    al,0xe8
  403eb9:	or     eax,DWORD PTR [eax]
  403ebb:	add    BYTE PTR [esp+esi*1-0xb],al
  403ebf:	or     esi,DWORD PTR [esp+esi*1-0x5]
  403ec3:	cld    
  403ec4:	push   ebp
  403ec5:	xor    al,0xe8
  403ec7:	or     eax,DWORD PTR [esp+esi*1]
  403eca:	call   0xe87482da
  403ecf:	or     bh,BYTE PTR [eax+0x34]
  403ed2:	frndint 
  403ed4:	cmp    eax,0xd40be834
  403ed9:	xor    ebp,eax
  403edb:	or     edx,DWORD PTR [esp+esi*1]
  403ede:	call   0xe874d6ed
  403ee3:	or     esi,DWORD PTR [esp+esi*1]
  403ee6:	call   0xe874f2f6
  403eeb:	or     esi,esp
  403eed:	xor    ebp,eax
  403eef:	or     bl,BYTE PTR [eax]
  403ef1:	xor    al,0x1
  403ef3:	fldcw  WORD PTR [ebx]
  403ef5:	cmp    al,BYTE PTR [ecx]
  403ef7:	jmp    0xe9413c28
  403efc:	sub    al,0x3d
  403efe:	add    ecx,ebp
  403f00:	cmp    eax,0xbfd01c9
  403f05:	test   BYTE PTR [eax],0xe9
  403f08:	sub    al,0x1d
  403f0a:	add    ecx,ebp
  403f0c:	sub    al,0x5d
  403f0e:	add    ecx,ebp
  403f10:	cmp    eax,0xebdb0189
  403f15:	inc    ebp
  403f16:	add    ecx,ebp
  403f18:	sub    al,0xd
  403f1a:	add    ecx,ebp
  403f1c:	sub    al,0x4d
  403f1e:	add    ecx,ebp
  403f20:	add    BYTE PTR [eax],al
  403f22:	cmp    eax,0x3ce901e9
  403f27:	sub    eax,0xad2ce901
  403f2c:	add    ecx,ebp
  403f2e:	sub    al,0xed
  403f30:	add    cl,ch
  403f32:	cmp    eax,0xabd901a9
  403f37:	aaa    
  403f38:	add    ecx,ebp
  403f3a:	sub    al,0x9
  403f3c:	add    ecx,ebp
  403f3e:	sub    al,0x49
  403f40:	add    DWORD PTR [ecx-0x5fecbc4],ebp
  403f46:	mov    esp,DWORD PTR [ebp+0x1]
  403f49:	jmp    0xe941687a
  403f4e:	sub    al,0x69
  403f50:	add    ecx,ebp
  403f52:	cmp    eax,0x6bd80171
  403f57:	xor    DWORD PTR [ecx],eax
  403f59:	jmp    0xe941588a
  403f5e:	pop    esp
  403f5f:	pop    ecx
  403f60:	add    ecx,ebp
  403f62:	push   ebx
  403f63:	rol    DWORD PTR [ecx],1
  403f65:	jmp    0xe94178b6
  403f6a:	cmp    al,0xb9
  403f6c:	add    DWORD PTR [eax],eax
  403f6e:	dec    esi
  403f6f:	pushf  
  403f70:	inc    edi
  403f71:	add    BYTE PTR [esi],bl
  403f73:	mov    eax,ds:0x2b0e00ef
  403f78:	or     BYTE PTR [eax],al
  403f7a:	push   cs
  403f7b:	pushf  
  403f7c:	pop    edi
  403f7d:	add    BYTE PTR [esi],cl
  403f7f:	pushf  
  403f80:	pop    ds
  403f81:	add    BYTE PTR [esi],bl
  403f83:	mov    eax,ds:0x9f
  403f88:	or     ch,BYTE PTR [ebx]
  403f8a:	bound  eax,QWORD PTR [eax]
  403f8c:	push   cs
  403f8d:	pushf  
  403f8e:	jg     0x403f90
  403f90:	push   cs
  403f91:	pushf  
  403f92:	aas    
  403f93:	add    dh,bl
  403f95:	mov    al,ds:0x2b0c00df
  403f9a:	sbb    al,BYTE PTR [eax]
  403f9c:	into   
  403f9d:	fwait
  403f9e:	outs   dx,DWORD PTR ds:[esi]
  403f9f:	add    dh,cl
  403fa1:	fwait
  403fa2:	das    
  403fa3:	add    dh,bl
  403fa5:	mov    al,ds:0x9bde00bf
  403faa:	str    esi
  403fad:	fwait
  403fae:	pop    DWORD PTR [eax]
  403fb0:	into   
  403fb1:	fwait
  403fb2:	dec    edi
  403fb3:	add    BYTE PTR [esi-0x71ff0060],bl
  403fb9:	sub    al,0x0
  403fbb:	add    BYTE PTR [ecx-0x62feffd4],cl
  403fc1:	sub    al,0x10
  403fc3:	add    BYTE PTR ds:0x8f10002d,dh
  403fc9:	sub    al,0x4
  403fcb:	add    BYTE PTR [edi+0x5b04002c],al
  403fd1:	sub    al,0x40
  403fd3:	add    BYTE PTR [ebx-0x71bfffd4],dl
  403fd9:	sub    al,0x2
  403fdb:	add    BYTE PTR [esi+0x5a02002c],al
  403fe1:	sub    al,0x20
  403fe3:	add    BYTE PTR [edx+0x2c],dl
  403fe6:	add    BYTE PTR [eax],ah
  403fe8:	aaa    
  403fe9:	fwait
  403fea:	or     DWORD PTR [ecx],ecx
  403fec:	add    BYTE PTR [eax],al
  403fee:	aaa    
  403fef:	mov    ds:0x7f2f0109,eax
  403ff4:	or     DWORD PTR [ecx+0x84d37],eax
  403ffa:	aaa    
  403ffb:	jge    0x404006
  403ffd:	add    dh,BYTE PTR [edi]
  403fff:	xchg   BYTE PTR [ecx],cl
  404001:	xor    DWORD PTR [esi],0x3719099a
  404007:	xor    cl,BYTE PTR [eax]
  404009:	add    DWORD PTR [edi],ebp
  40400b:	pushf  
  40400c:	or     DWORD PTR [edi],eax
  40400e:	aaa    
  40400f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404010:	or     DWORD PTR [ecx],eax
  404012:	xor    DWORD PTR [eax-0x7fc89ef7],eax
  404018:	or     DWORD PTR [ecx],eax
  40401a:	push   edi
  40401b:	jge    0x404026
  40401d:	add    al,0x37
  40401f:	test   DWORD PTR [ecx],ecx
  404021:	add    DWORD PTR [ecx+eiz*4],esi
  404024:	or     DWORD PTR [ecx],esi
  404026:	aaa    
  404027:	mov    eax,ds:0x9b070109
  40402c:	or     DWORD PTR ds:0x109a337,ecx
  404032:	sub    edi,DWORD PTR [edi+0x9]
  404035:	shl    DWORD PTR [edi],0xcd
  404038:	or     DWORD PTR [eax],eax
  40403a:	aaa    
  40403b:	jge    0x40403f
  40403d:	adc    DWORD PTR [edi],esi
  40403f:	jnp    0x404043
  404041:	add    BYTE PTR [edi],dh
  404043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404044:	add    al,BYTE PTR [edi]
  404046:	aaa    
  404047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404048:	add    al,BYTE PTR [esi]
  40404a:	aaa    
  40404b:	xchg   ebx,eax
  40404c:	add    al,BYTE PTR ds:0x4029237
  404052:	add    BYTE PTR [eax],al
  404054:	aaa    
  404055:	test   eax,0x90370302
  40405a:	add    al,BYTE PTR [edx]
  40405c:	aaa    
  40405d:	xchg   edi,eax
  40405e:	add    al,BYTE PTR [ecx]
  404060:	aaa    
  404061:	jle    0x404065
  404063:	add    BYTE PTR [edi],dh
  404065:	xor    al,0xe8
  404067:	add    esi,DWORD PTR [edi]
  404069:	xor    al,0x76
  40406b:	adc    al,0x30
  40406d:	daa    
  40406e:	add    al,0x63
  404070:	xor    DWORD PTR [esi-0x42d1cc6e],ecx
  404076:	loope  0x40403f
  404078:	mov    ds:0x9dd86f35,al
  40407d:	and    al,0xfd
  40407f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404080:	xchg   esp,eax
  404081:	mov    ecx,DWORD PTR [ebx-0x25416c89]
  404087:	jnp    0x404075
  404089:	cs inc esp
  40408b:	mov    ebx,gs
  40408d:	sbb    esi,esi
  40408f:	(bad)  
  404091:	xchg   esp,eax
  404092:	pusha  
  404093:	stos   DWORD PTR es:[edi],eax
  404094:	in     eax,0xc5
  404096:	sar    DWORD PTR [edi],cl
  404098:	test   eax,0xa6503d2b
  40409d:	push   ds
  40409e:	out    dx,eax
  40409f:	push   ds
  4040a0:	lahf   
  4040a1:	xchg   ebp,eax
  4040a2:	pop    ecx
  4040a3:	out    dx,eax
  4040a4:	cdq    
  4040a5:	(bad)  
  4040a6:	int3   
  4040a7:	xrelease mov DWORD PTR [edi],edi
  4040aa:	pop    edx
  4040ab:	and    al,0x87
  4040ad:	or     ah,BYTE PTR [eax+0x2ea17e52]
  4040b3:	inc    ebx
  4040b4:	jns    0x40406e
  4040b6:	lds    esi,FWORD PTR [edi+0x3a8d0000]
  4040bc:	push   ebx
  4040bd:	call   0x96d9504c
  4040c2:	mov    ebp,DWORD PTR [eax-0x4e7b78d9]
  4040c8:	mov    esi,0x2841236b
  4040cd:	pushf  
  4040ce:	sbb    al,0x18
  4040d0:	xchg   edx,eax
  4040d1:	retf   0x9f15
  4040d4:	cld    
  4040d5:	mov    edx,0x2fb7aa12
  4040da:	ss dec eax
  4040dc:	and    DWORD PTR [eax+0x31],esp
  4040df:	adc    DWORD PTR [ecx],eax
  4040e1:	mov    dh,BYTE PTR [ecx]
  4040e3:	sub    eax,0x3559f4fb
  4040e8:	mov    WORD PTR [ecx+0x3f3a0e14],?
  4040ee:	inc    ebx
  4040ef:	or     al,0x4d
  4040f1:	int    0xf5
  4040f3:	adc    edx,esp
  4040f5:	pop    ebx
  4040f6:	in     al,0x14
  4040f8:	mov    ds:0x3d311898,eax
  4040fd:	es out dx,eax
  4040ff:	aaa    
  404100:	dec    edx
  404101:	mov    ah,0xb9
  404103:	rol    DWORD PTR cs:[edx-0x40],cl
  404107:	sub    DWORD PTR [ebx+eiz*4+0xd34e6ac],esp
  40410e:	fwait
  40410f:	loop   0x404154
  404111:	mov    edi,0x29dad8bd
  404116:	in     al,dx
  404117:	fild   QWORD PTR [ebp+0x337c908a]
  40411d:	hlt    
  40411e:	add    BYTE PTR [eax],al
  404120:	sbb    BYTE PTR [ebp+0x44],bh
  404123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404124:	loope  0x4040ac
  404126:	fst    QWORD PTR [eax]
  404128:	sub    BYTE PTR [ebx+0x7b2495aa],al
  40412e:	daa    
  40412f:	and    esi,DWORD PTR [ebx]
  404131:	jle    0x404183
  404133:	imul   eax,DWORD PTR ds:0x55f7c985,0x887cbe84
  40413d:	out    0x20,eax
  40413f:	or     bh,BYTE PTR [edi-0x20]
  404142:	push   edi
  404143:	push   eax
  404144:	sub    edx,ebx
  404146:	into   
  404147:	(bad)  
  404149:	fidivr WORD PTR [ecx+0x2931bc87]
  40414f:	icebp  
  404150:	or     al,0x37
  404152:	pop    esi
  404153:	pop    ebx
  404154:	int    0x2f
  404156:	mov    ebp,0xb0285d
  40415c:	loope  0x40414a
  40415e:	ins    DWORD PTR es:[edi],dx
  40415f:	das    
  404160:	(bad)  
  404161:	pop    esp
  404162:	imul   ebx,DWORD PTR [eax-0xb],0x8bc1618d
  404169:	cmp    eax,0xf6ceb667
  40416e:	fdiv   QWORD PTR [esi+0x50]
  404171:	pop    es
  404172:	fiadd  DWORD PTR [ecx]
  404174:	stos   BYTE PTR es:[edi],al
  404175:	push   edi
  404176:	rcr    DWORD PTR [eax-0x102a57cc],cl
  40417c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40417d:	lods   eax,DWORD PTR ds:[esi]
  40417e:	mov    al,0x71
  404180:	or     DWORD PTR [ebp+0x6b7],edi
  404186:	mov    bl,0x8c
  404188:	mov    esi,0xb9e41d9f
  40418d:	call   0x78471b0e
  404192:	loop   0x4041fc
  404194:	add    DWORD PTR [edi],ecx
  404196:	cwde   
  404197:	mov    eax,0x10069608
  40419c:	psraw  mm6,QWORD PTR [ebp+0x35]
  4041a0:	imul   edi,DWORD PTR [edi-0x5],0x44
  4041a4:	ins    BYTE PTR es:[edi],dx
  4041a5:	or     BYTE PTR [ecx-0x306e9aec],al
  4041ab:	dec    ebx
  4041ac:	(bad)  
  4041ad:	out    0x72,al
  4041af:	popa   
  4041b0:	push   0x6b
  4041b2:	cld    
  4041b3:	adc    BYTE PTR [ebp+0x1c],ch
  4041b6:	push   es
  4041b7:	inc    eax
  4041b8:	test   DWORD PTR fs:[eax+0xbf26337],ebx
  4041bf:	sbb    eax,0xcc756c07
  4041c4:	add    BYTE PTR [ebx],bl
  4041c6:	dec    edi
  4041c7:	jl     0x4041d2
  4041c9:	add    cl,0x73
  4041cc:	push   cs
  4041cd:	cmc    
  4041ce:	pusha  
  4041cf:	leave  
  4041d0:	mov    cl,0x65
  4041d2:	into   
  4041d3:	js     0x40418b
  4041d5:	adc    dh,BYTE PTR [edi]
  4041d7:	aaa    
  4041d8:	lea    edi,[esi-0x46855654]
  4041de:	jae    0x404232
  4041e0:	lock (bad) 
  4041e3:	jecxz  0x404206
  4041e5:	fimul  DWORD PTR [edx-0x62]
  4041e8:	dec    esi
  4041e9:	rol    DWORD PTR [eax],cl
  4041eb:	add    BYTE PTR [ebx+0x4cd43eb0],ch
  4041f1:	cmc    
  4041f2:	arpl   WORD PTR [edx-0x4aca3506],si
  4041f8:	std    
  4041f9:	clc    
  4041fa:	add    al,0xbc
  4041fc:	xchg   esp,eax
  4041fd:	outs   dx,DWORD PTR ds:[esi]
  4041fe:	adc    bh,BYTE PTR [ebx-0x2057b3f5]
  404204:	jge    0x4041c8
  404206:	jns    0x4041e0
  404208:	(bad)  
  404209:	lock enter 0xd3d1,0xe5
  40420e:	(bad)  
  40420f:	(bad)  
  404210:	in     al,0x46
  404212:	fsubr  QWORD PTR [ecx+0x74]
  404215:	mov    ecx,0x4b4b6ead
  40421a:	jge    0x404283
  40421c:	retf   0x8adc
  40421f:	pusha  
  404220:	or     eax,0x7304219e
  404225:	mov    al,0xf1
  404227:	add    ah,BYTE PTR [edx+eax*2]
  40422a:	inc    ecx
  40422b:	or     cl,BYTE PTR [ebp-0xdf2b12d]
  404231:	push   eax
  404232:	push   esp
  404233:	add    eax,0x245c767
  404238:	sbb    BYTE PTR [ebp+0x12790af2],bl
  40423e:	and    cl,BYTE PTR [esi+edi*2]
  404241:	daa    
  404242:	cwde   
  404243:	push   0x6f891e00
  404248:	push   edi
  404249:	xchg   esp,eax
  40424a:	mov    dh,0x66
  40424c:	fsubp  st(1),st
  40424e:	in     eax,0x61
  404250:	add    BYTE PTR [eax],al
  404252:	xor    DWORD PTR [ebx],0xf969ccf6
  404258:	jg     0x404216
  40425a:	pop    esi
  40425b:	dec    esp
  40425c:	retf   0x676b
  40425f:	jecxz  0x4042b5
  404261:	fwait
  404262:	mov    BYTE PTR [edx-0x21],dh
  404265:	adc    BYTE PTR [esp+edi*8+0x49ab0068],ah
  40426c:	mov    bl,0x2f
  40426e:	call   0x873:0x8d5f3de2
  404275:	or     DWORD PTR [edi-0x7f6e6978],0x81e1e4bd
  40427f:	ss jb  0x404234
  404282:	out    0x20,al
  404284:	add    DWORD PTR [ebp+0x2],eax
  404287:	(bad)  
  404288:	(bad)  
  404289:	push   ebp
  40428a:	add    eax,0xfc25ddb8
  40428f:	xor    BYTE PTR [ebx-0xa],ch
  404292:	in     al,dx
  404293:	and    eax,0x9595f8fa
  404298:	or     DWORD PTR fs:[ebx-0x75a62940],ebx
  40429f:	daa    
  4042a0:	inc    eax
  4042a1:	sub    bl,BYTE PTR [ebp+0x1e]
  4042a4:	repz mov esp,0xcd5d9039
  4042aa:	(bad)
  4042ae:	aaa    
  4042af:	cmp    DWORD PTR cs:[esi+0x38],ebp
  4042b3:	pop    ss
  4042b4:	lods   al,BYTE PTR ds:[esi]
  4042b5:	jo     0x4042b7
  4042b7:	add    BYTE PTR [eax],bh
  4042b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042ba:	cmp    ah,BYTE PTR [ecx-0x2e3f4ed1]
  4042c0:	cmp    cl,BYTE PTR ss:[esi-0x3e]
  4042c4:	cmp    DWORD PTR [ebx],ecx
  4042c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042c7:	xor    al,0x15
  4042c9:	mov    eax,ds:0xb41a6533
  4042ce:	add    DWORD PTR [eax+0x46180842],edi
  4042d4:	cmp    DWORD PTR ds:0x859f9f6f,ecx
  4042da:	dec    DWORD PTR [ecx]
  4042dc:	push   ds
  4042dd:	test   DWORD PTR [eax+0x117deeb3],ecx
  4042e3:	sbb    eax,0x9666772d
  4042e8:	(bad)  
  4042eb:	add    BYTE PTR [edx-0x55557026],al
  4042f1:	loope  0x404309
  4042f3:	adc    al,0xd1
  4042f5:	jecxz  0x404358
  4042f7:	rcl    DWORD PTR [edi-0x39a0287e],1
  4042fd:	and    BYTE PTR [eax+0x397c76ad],0x3b
  404304:	add    eax,0x93b84e79
  404309:	fst    st(0)
  40430b:	inc    esi
  40430c:	push   0xffffffd8
  40430e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40430f:	xchg   esp,eax
  404310:	xor    bl,bh
  404312:	and    ch,BYTE PTR ds:[ecx]
  404315:	out    0x49,al
  404317:	ret    
  404318:	das    
  404319:	daa    
  40431a:	fldcw  WORD PTR ds:0x2b0e0000
  404320:	scas   al,BYTE PTR es:[edi]
  404321:	lahf   
  404322:	ds xor eax,0x307d0937
  404328:	inc    eax
  404329:	stos   BYTE PTR es:[edi],al
  40432a:	or     edx,DWORD PTR [esi+ebx*8]
  40432d:	adc    al,0x92
  40432f:	adc    BYTE PTR [ecx+0x300a5a86],ch
  404335:	lock ret 0x470a
  404339:	jne    0x4042e2
  40433b:	adc    cl,dl
  40433d:	add    esi,DWORD PTR [esi-0x797642ef]
  404343:	or     BYTE PTR [edi+edx*1],ah
  404346:	xchg   ebp,eax
  404347:	or     edx,DWORD PTR [ebx+0x0]
  40434a:	or     eax,DWORD PTR [eax]
  40434c:	or     eax,0x9ef8dcc
  404351:	mov    ebx,0x22009f27
  404356:	xchg   ecx,eax
  404357:	dec    esi
  404358:	add    al,0x55
  40435a:	adc    BYTE PTR [ebx+edi*4],ch
  40435d:	lds    esp,FWORD PTR [esi-0x65]
  404360:	mov    ebp,0xb54afcb2
  404365:	sub    ebx,DWORD PTR [edx-0x6]
  404368:	mov    cl,0x5c
  40436a:	stc    
  40436b:	addr16 (bad) 
  40436d:	ret    0xd79f
  404370:	shl    DWORD PTR [ebp+0x2cd806d5],1
  404376:	xor    DWORD PTR [esi+0x71ae5bdf],0x65
  40437d:	fwait
  40437e:	cmp    BYTE PTR [edx+0xec62],al
  404384:	ret    0x6bd0
  404387:	jne    0x40439d
  404389:	pop    ds
  40438a:	ins    BYTE PTR es:[edi],dx
  40438b:	add    al,bh
  40438d:	xor    cl,BYTE PTR [eax]
  40438f:	pushf  
  404390:	and    DWORD PTR [esi+0xf],eax
  404393:	jmp    0x404320
  404395:	adc    eax,DWORD PTR [esi]
  404397:	jb     0x404386
  404399:	bound  eax,QWORD PTR [ecx]
  40439b:	add    eax,0x95be569c
  4043a0:	or     ch,dl
  4043a2:	mov    eax,0xb03770e2
  4043a7:	jnp    0x4043af
  4043a9:	xchg   DWORD PTR [esp+ecx*1-0x6d2ce5ab],esi
  4043b0:	shr    DWORD PTR [ebp+0x7b19e5d4],cl
  4043b6:	fnstsw WORD PTR [edi+edi*8-0x36]
  4043ba:	fimul  DWORD PTR [ebx]
  4043bc:	or     bl,dh
  4043be:	rol    BYTE PTR [esi-0xe2a6e74],cl
  4043c4:	aaa    
  4043c5:	add    eax,0xd71fdd96
  4043ca:	xchg   edx,ebx
  4043cc:	dec    eax
  4043cd:	pusha  
  4043ce:	repz mov ebp,0xb920d2b6
  4043d4:	mov    eax,ds:0x20b051ec
  4043d9:	fiadd  WORD PTR [ebx-0x49]
  4043dc:	das    
  4043dd:	daa    
  4043de:	das    
  4043df:	or     BYTE PTR [edi+0x780f5cbd],ch
  4043e5:	push   ebx
  4043e6:	push   cs
  4043e7:	push   es
  4043e8:	add    BYTE PTR [eax],al
  4043ea:	fxch   st(0)
  4043ec:	inc    DWORD PTR [eax]
  4043ee:	inc    esi
  4043ef:	imul   esp,DWORD PTR cs:[ebp-0x50],0xffffffc4
  4043f4:	cwde   
  4043f5:	bound  ebx,QWORD PTR [edi+0x3a]
  4043f8:	retf   0xd66b
  4043fb:	iret   
  4043fc:	mov    ebx,0xe715216c
  404401:	or     dl,BYTE PTR [edi+0x600db467]
  404407:	pop    ecx
  404408:	xchg   BYTE PTR [ecx+eax*4],al
  40440b:	retf   
  40440c:	xchg   edi,eax
  40440d:	add    ebp,DWORD PTR [esi-0x14]
  404410:	and    ah,BYTE PTR [edi-0x28]
  404413:	(bad)  
  404415:	pop    edi
  404416:	pop    es
  404417:	push   eax
  404418:	inc    edx
  404419:	imul   edi,DWORD PTR [esi-0x3e],0x63496e53
  404420:	pop    edi
  404421:	rcl    ecx,1
  404423:	fsubr  DWORD PTR [esi+edx*8]
  404426:	fisub  WORD PTR [esi]
  404428:	(bad)  
  404429:	fidiv  WORD PTR [edi-0x43]
  40442c:	psubusb mm4,QWORD PTR [eax]
  40442f:	cmp    bl,BYTE PTR [ebx+0x68cf8ebc]
  404435:	mov    ebx,0xb2bb9df9
  40443a:	js     0x4043f0
  40443c:	retf   
  40443d:	mov    ch,0x7
  40443f:	xor    al,0x4
  404441:	(bad)  
  404442:	sbb    al,0x72
  404445:	lds    edi,FWORD PTR [ebp+0x69]
  404448:	sbb    BYTE PTR [edi-0x1c],dh
  40444b:	add    al,BYTE PTR [esi-0x1cffff5a]
  404451:	dec    edi
  404452:	in     eax,dx
  404453:	adc    DWORD PTR [edi-0x7ffea427],eax
  404459:	push   0xff713301
  40445e:	outs   dx,BYTE PTR ds:[esi]
  40445f:	bound  ebp,QWORD PTR [esi+0x52]
  404462:	(bad)  
  404463:	dec    ebp
  404464:	sbb    ebx,esp
  404466:	pusha  
  404467:	cmp    eax,0xeeea7016
  40446c:	fdivr  st,st(0)
  40446e:	jae    0x40448e
  404470:	fmul   DWORD PTR [ecx-0x41]
  404473:	mov    DWORD PTR [eax+eiz*8],ebp
  404476:	dec    ecx
  404477:	jns    0x4044a4
  404479:	jae    0x40444e
  40447b:	stos   BYTE PTR es:[edi],al
  40447c:	cmp    bh,dl
  40447e:	pop    esp
  40447f:	fidiv  DWORD PTR ds:0x3703e849
  404485:	xor    al,0x29
  404487:	adc    ebx,DWORD PTR [edi*1+0x6269666a]
  40448e:	stos   DWORD PTR es:[edi],eax
  40448f:	xor    eax,0xbeec495a
  404494:	xchg   ebx,eax
  404495:	adc    BYTE PTR ds:0x6e17a0d0,ah
  40449b:	mov    eax,ds:0x72a6fe6d
  4044a0:	jbe    0x404487
  4044a2:	out    dx,eax
  4044a3:	jge    0x404483
  4044a5:	ins    BYTE PTR es:[edi],dx
  4044a6:	xor    DWORD PTR [ebp-0x239d7c0b],ecx
  4044ac:	loopne 0x404448
  4044ae:	mov    ds:0xf491e3ab,eax
  4044b3:	cmp    BYTE PTR [eax],al
  4044b5:	add    BYTE PTR [edx-0x76b5d238],ch
  4044bb:	fild   WORD PTR [ecx]
  4044bd:	sub    BYTE PTR [bx+di-0x6161],dh
  4044c2:	fistp  QWORD PTR [ebp+0x73cab886]
  4044c8:	dec    ebx
  4044c9:	stc    
  4044ca:	adc    edi,DWORD PTR [ebx+0x52]
  4044cd:	cmp    cl,BYTE PTR [ebx]
  4044cf:	mov    al,ds:0x84f47b79
  4044d4:	pusha  
  4044d5:	pushf  
  4044d6:	out    0xc6,eax
  4044d8:	das    
  4044d9:	aad    0x96
  4044db:	fbstp  TBYTE PTR [esi]
  4044dd:	push   ds
  4044de:	sar    BYTE PTR [ebp+ebx*1+0x4b1b757],0xc0
  4044e6:	or     al,0x39
  4044e8:	add    DWORD PTR [ecx],0xffffff9c
  4044eb:	xor    al,0x9a
  4044ed:	xor    al,BYTE PTR [ecx-0x558c4eb9]
  4044f3:	pop    esi
  4044f4:	test   al,0xa4
  4044f6:	sbb    DWORD PTR ds:0x800dde7,ebx
  4044fc:	(bad)  
  4044fd:	push   ss
  4044fe:	ds repz aam 0x4f
  404502:	dec    ebp
  404503:	sti    
  404504:	retf   
  404505:	mov    esp,DWORD PTR [eax]
  404507:	mov    al,0x94
  404509:	retf   0xb649
  40450c:	lea    ecx,[ecx]
  40450e:	jne    0x4044f2
  404510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404511:	dec    eax
  404512:	xchg   bl,cl
  404514:	mov    edi,0xf08c158f
  404519:	mov    BYTE PTR [eax],0x0
  40451c:	in     al,0xa0
  40451e:	jmp    0xc2b5ff30
  404523:	inc    esp
  404524:	mov    eax,ds:0x9e53db6e
  404529:	neg    BYTE PTR [ebx-0x6e]
  40452c:	(bad)  
  40452d:	out    dx,al
  40452e:	inc    esp
  40452f:	shr    DWORD PTR [eax-0xfff91f8],0x23
  404536:	ja     0x404538
  404538:	mov    al,bh
  40453a:	das    
  40453b:	cmp    DWORD PTR [ecx-0x5dfd4ba],ebp
  404541:	cdq    
  404542:	pop    es
  404543:	or     ecx,ebx
  404545:	sub    BYTE PTR ds:0x47435d12,bl
  40454b:	fistp  WORD PTR [ebx+esi*1+0x448fc65c]
  404552:	jno    0x404541
  404554:	dec    esi
  404555:	cmc    
  404556:	imul   esi,esp,0xbb2b8061
  40455c:	and    BYTE PTR [edi+0x30],ch
  40455f:	mov    ds:0x891d21d3,al
  404564:	adc    al,0x6
  404567:	nop
  404568:	push   ebp
  404569:	lods   eax,DWORD PTR ds:[esi]
  40456a:	sahf   
  40456b:	pop    ss
  40456c:	adc    al,0x1e
  40456e:	test   DWORD PTR [esi],ecx
  404570:	(bad)  
  404571:	retf   0x25a8
  404574:	xchg   BYTE PTR [ebx-0x4d],bh
  404577:	cmp    al,0x39
  404579:	jmp    0x6ae9:0x591873f1
  404580:	add    BYTE PTR [eax],al
  404582:	retf   
  404583:	xchg   ebp,eax
  404585:	inc    ecx
  404586:	call   0x785d:0x5358df36
  40458d:	lock adc ch,dh
  404590:	(bad)  
  404591:	jmp    0xc28e7337
  404596:	rcr    BYTE PTR [edx+edx*2+0x140e0fdb],1
  40459d:	xchg   esp,eax
  40459e:	dec    esi
  40459f:	mov    edi,0x709d8d0f
  4045a4:	and    ah,BYTE PTR [esi-0x40c61e24]
  4045aa:	or     esi,DWORD PTR [ebp-0x5f]
  4045ad:	cmp    BYTE PTR [edx+0x64],cl
  4045b0:	mov    edx,0x9e1a3721
  4045b5:	xchg   esi,eax
  4045b6:	cmp    eax,0x448d6fb3
  4045bb:	test   BYTE PTR [edx],al
  4045bd:	int3   
  4045be:	jnp    0x404605
  4045c0:	adc    al,0xd7
  4045c2:	jp     0x4045da
  4045c4:	arpl   dx,di
  4045c6:	pop    ecx
  4045c7:	xlat   BYTE PTR ds:[ebx]
  4045c8:	xor    ah,cl
  4045ca:	dec    eax
  4045cb:	shr    DWORD PTR [ecx],1
  4045cd:	mov    ebx,0xa056887d
  4045d2:	aam    0x53
  4045d4:	push   es
  4045d5:	lea    edi,[edi-0x396a08f6]
  4045db:	lods   eax,DWORD PTR ds:[esi]
  4045dc:	push   0xffffffd7
  4045de:	jns    0x40464c
  4045e0:	popf   
  4045e1:	int3   
  4045e2:	js     0x404613
  4045e4:	retf   
  4045e5:	loope  0x4045e7
  4045e7:	add    BYTE PTR [ebx-0x75054612],bl
  4045ed:	jns    0x40459e
  4045ef:	bound  eax,QWORD PTR ds:0xdc79dc90
  4045f5:	dec    edx
  4045f6:	nop
  4045f7:	push   esp
  4045f8:	mul    DWORD PTR [ecx]
  4045fa:	or     DWORD PTR [edi-0x2],0x410df0d4
  404601:	xchg   esp,eax
  404602:	and    edx,DWORD PTR ds:0x38552740
  404608:	adc    esp,esi
  40460a:	inc    ebx
  40460b:	and    eax,DWORD PTR [edx]
  40460d:	ret    0xfd5b
  404610:	sar    BYTE PTR [edx+0x28],cl
  404613:	out    0xb3,al
  404615:	inc    eax
  404616:	cld    
  404617:	retf   0xf980
  40461a:	or     al,0xd0
  40461c:	jno    0x4045dc
  40461e:	xchg   esp,eax
  40461f:	xchg   ecx,eax
  404620:	ss jg  0x40468a
  404623:	mov    ch,BYTE PTR [edi]
  404625:	cmp    al,0xb9
  404627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404628:	inc    esp
  404629:	std    
  40462a:	(bad)  
  40462b:	mov    esp,0xe457344d
  404630:	push   ebx
  404631:	loope  0x4045c1
  404633:	mov    bl,0x30
  404635:	enter  0x82c5,0x45
  404639:	mov    bl,0xfc
  40463b:	xchg   ecx,eax
  40463c:	cs mov edx,0x7d6f1f53
  404642:	xchg   edx,eax
  404643:	lock gs sar DWORD PTR fs:0x4f008f49,0x0
  40464d:	add    BYTE PTR [edx-0x6a],bl
  404650:	pop    esi
  404651:	dec    esp
  404652:	clc    
  404653:	bound  edx,QWORD PTR [edi-0x23b5a4c5]
  404659:	jmp    0x3845:0x1a15313f
  404660:	cmp    al,BYTE PTR [edi+0x787aff04]
  404666:	jmp    ebp
  404668:	mov    bh,0xa5
  40466a:	adc    cl,BYTE PTR ds:0x1401d6f9
  404670:	rcl    BYTE PTR es:[ecx+0x72c15f9a],cl
  404677:	xchg   ecx,eax
  404678:	xchg   esp,eax
  404679:	je     0x404602
  40467b:	push   0x7f6ca3cd
  404680:	add    cl,BYTE PTR ds:0xfe43b6ad
  404686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404687:	lods   eax,DWORD PTR ds:[esi]
  404688:	jo     0x4046b9
  40468a:	mov    eax,esp
  40468c:	mov    cl,0x60
  40468e:	cwde   
  40468f:	(bad)  [ebx]
  404691:	ins    BYTE PTR es:[edi],dx
  404692:	mov    ah,0x4e
  404694:	repnz call 0x3be2:0xcaa156cf
  40469c:	pusha  
  40469d:	mov    ecx,0x273724d1
  4046a2:	or     dl,dh
  4046a4:	in     eax,dx
  4046a5:	push   edi
  4046a6:	or     edi,ebx
  4046a8:	add    BYTE PTR [edx+esi*1+0x95d6c6b],ah
  4046af:	je     0x404726
  4046b1:	sub    al,BYTE PTR [eax]
  4046b3:	add    BYTE PTR ds:0x17ebf1ec,al
  4046b9:	repz jmp 0x7469:0xc02083a8
  4046c1:	or     ecx,ebx
  4046c3:	mov    cl,BYTE PTR cs:[edx-0x6a]
  4046c7:	out    0xf2,eax
  4046c9:	pop    edi
  4046ca:	(bad)  
  4046cb:	lods   al,BYTE PTR ds:[esi]
  4046cc:	mov    eax,0xb765a434
  4046d1:	sub    eax,0xf33d03bd
  4046d6:	outs   dx,DWORD PTR ds:[esi]
  4046d7:	ret    0xeebf
  4046da:	push   0x42098b71
  4046df:	xor    ah,cl
  4046e1:	and    BYTE PTR [ebx-0x19],bl
  4046e4:	arpl   WORD PTR [edi+0x14],bx
  4046e7:	sahf   
  4046e8:	cli    
  4046e9:	dec    ecx
  4046ea:	or     eax,0x262d2055
  4046ef:	or     al,0x8f
  4046f1:	xchg   ecx,eax
  4046f2:	cmp    al,0xfb
  4046f4:	xor    al,0xac
  4046f6:	mov    eax,0xa1b545ba
  4046fb:	jns    0x4046d2
  4046fd:	loope  0x404689
  4046ff:	cmp    BYTE PTR [esi],ah
  404701:	(bad)  
  404702:	xchg   ebx,eax
  404703:	fistp  WORD PTR [ecx-0x7f692378]
  404709:	mov    eax,ds:0x76aa5dc5
  40470e:	out    dx,al
  40470f:	adc    al,0xd1
  404711:	push   0xfffffff7
  404713:	shl    BYTE PTR [eax+0x91af39],1
  404719:	add    BYTE PTR [ecx-0x2ebd49d0],ch
  40471f:	inc    edx
  404720:	popf   
  404721:	add    ecx,DWORD PTR [edx]
  404723:	pop    esi
  404724:	test   BYTE PTR [eax],al
  404726:	add    edi,esi
  404728:	imul   ecx,edx,0xd3714cc2
  40472e:	jno    0x4046cb
  404730:	pop    ebp
  404731:	clc    
  404732:	add    BYTE PTR [ebx],ch
  404734:	inc    edi
  404735:	loope  0x4046e6
  404737:	fbld   TBYTE PTR ds:[esi+0x7e]
  40473b:	nop
  40473c:	lds    edi,FWORD PTR [edi+0x3d]
  40473f:	inc    esp
  404740:	jmp    0xf2323399
  404745:	dec    ebp
  404746:	stos   DWORD PTR es:[edi],eax
  404747:	arpl   WORD PTR [ebx-0x578c85fe],si
  40474d:	sbb    edi,DWORD PTR [ecx]
  40474f:	add    eax,0xd4f83085
  404754:	sahf   
  404755:	sub    DWORD PTR [esi+0x17e4c4a6],edx
  40475b:	sbb    bh,bl
  40475d:	std    
  40475e:	inc    esp
  40475f:	int3   
  404760:	repnz (bad) 
  404762:	test   DWORD PTR [ecx-0x17],edi
  404765:	iret   
  404766:	mov    dl,0xeb
  404768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404769:	adc    BYTE PTR [ebx+0x5b],0xb3
  40476d:	cdq    
  40476e:	or     BYTE PTR [ebp+0x3cd1b29f],0x85
  404775:	stos   DWORD PTR es:[edi],eax
  404776:	fidiv  WORD PTR [eax]
  404778:	sbb    eax,0x7a24f2c
  40477d:	xor    eax,0x4e8c0000
  404782:	sub    ebx,DWORD PTR [esi]
  404784:	mov    ebp,0x1a072fff
  404789:	xchg   esi,eax
  40478a:	jno    0x4047d4
  40478c:	dec    ebx
  40478d:	lds    ebp,FWORD PTR [edx+0x51]
  404790:	mov    BYTE PTR [ebx-0x5d3685b9],dh
  404796:	pop    esp
  404797:	arpl   WORD PTR [eax],ax
  404799:	ins    DWORD PTR es:[edi],dx
  40479a:	sti    
  40479b:	retf   
  40479c:	and    esi,ebx
  40479e:	loopne 0x404772
  4047a0:	aaa    
  4047a1:	fnstcw WORD PTR [eax-0x34]
  4047a4:	push   ds
  4047a5:	icebp  
  4047a6:	mov    bh,dl
  4047a8:	pop    ss
  4047a9:	inc    esp
  4047aa:	pop    ss
  4047ab:	xchg   esi,eax
  4047ac:	loopne 0x404730
  4047ae:	out    0x8c,eax
  4047b0:	rcl    ebp,0x35
  4047b3:	mov    al,ds:0xbb4414a2
  4047b8:	mov    bl,0x5f
  4047ba:	pusha  
  4047bb:	and    esi,DWORD PTR [esi+edx*4]
  4047be:	cmp    BYTE PTR cs:[ebp-0x1f],cl
  4047c2:	add    dl,BYTE PTR ds:0xe131826
  4047c8:	cvtdq2ps xmm3,XMMWORD PTR [ebp+0x6d9a584f]
  4047cf:	push   esp
  4047d0:	dec    ecx
  4047d1:	fnstsw WORD PTR [edi-0x31e39587]
  4047d7:	bound  ebp,QWORD PTR [ebx+0x36]
  4047da:	enter  0xb638,0xcf
  4047de:	mov    dh,0x23
  4047e0:	iret   
  4047e1:	or     BYTE PTR [edx+0xe],ch
  4047e4:	add    BYTE PTR [eax],al
  4047e6:	in     al,0x61
  4047e8:	fwait
  4047e9:	adc    eax,0x540292cd
  4047ee:	call   0x26e4:0x8b4ef5d3
  4047f5:	bound  ebp,QWORD PTR [eax+0x25]
  4047f8:	push   esi
  4047f9:	jns    0x404864
  4047fb:	mov    ss,WORD PTR [ebx-0x1f]
  4047fe:	inc    dh
  404800:	inc    eax
  404801:	cli    
  404802:	pop    es
  404803:	adc    al,dh
  404805:	(bad)  
  404806:	fmul   QWORD PTR [eax+0x21]
  404809:	int3   
  40480a:	aad    0x69
  40480c:	mov    WORD PTR [ebp-0x698054de],cs
  404812:	add    ebp,esp
  404814:	lods   al,BYTE PTR ds:[esi]
  404815:	mov    ebx,0xa0dc2d20
  40481a:	xor    DWORD PTR [esp+edx*8],esi
  40481d:	mov    dh,0xb1
  40481f:	out    dx,al
  404820:	mov    ebp,es
  404822:	xchg   edx,eax
  404823:	test   DWORD PTR [ebp-0x6b],0x63ff206f
  40482a:	test   BYTE PTR [ecx],cl
  40482c:	sar    cl,1
  40482e:	es dec edx
  404830:	xchg   ecx,eax
  404831:	or     bh,BYTE PTR [esi]
  404833:	push   ebx
  404834:	inc    edx
  404835:	pop    eax
  404836:	pop    ebx
  404837:	cmp    al,0x3
  404839:	sub    DWORD PTR [eax],edi
  40483b:	and    eax,0xa5983c8c
  404840:	inc    ebp
  404841:	dec    ebx
  404842:	stos   DWORD PTR es:[edi],eax
  404843:	mov    esi,0xd7c61f0e
  404848:	(bad)  
  404849:	in     eax,dx
  40484a:	add    BYTE PTR [eax],al
  40484c:	scas   al,BYTE PTR es:[edi]
  40484d:	ror    BYTE PTR [eax+0x4981fc7f],1
  404853:	nop
  404854:	out    0x9a,eax
  404856:	or     ah,dl
  404858:	ret    0xcb73
  40485b:	mov    dl,0xd1
  40485d:	ins    BYTE PTR es:[edi],dx
  40485e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40485f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404860:	repz daa 
  404862:	pop    esp
  404863:	rcl    eax,cl
  404865:	inc    eax
  404866:	pop    ss
  404867:	xchg   DWORD PTR [ebp-0x398a31ab],ebp
  40486d:	dec    esi
  40486e:	and    edi,0x18400380
  404874:	jl     0x404892
  404876:	repz dec ecx
  404878:	cdq    
  404879:	icebp  
  40487a:	mov    cl,0x3a
  40487c:	jp     0x404868
  40487e:	pop    esp
  40487f:	fisubr DWORD PTR cs:[edi+0x14]
  404883:	pop    ebp
  404884:	jmp    0x44d2801
  404889:	sahf   
  40488a:	xchg   esi,eax
  40488b:	sti    
  40488c:	lock xchg BYTE PTR [ecx],bh
  40488f:	jno    0x4048cf
  404891:	int3   
  404892:	clc    
  404893:	mov    eax,ds:0xba01d525
  404898:	jo     0x4048e8
  40489a:	mov    edi,DWORD PTR [ebx+0x77]
  40489d:	push   edi
  40489e:	xchg   edx,eax
  40489f:	jmp    0x16417cd8
  4048a4:	pop    ecx
  4048a5:	jb     0x4048a7
  4048a7:	inc    edi
  4048a8:	(bad)  
  4048a9:	mov    eax,0xf6b53002
  4048ae:	add    ah,BYTE PTR [ebp+0x3ba30000]
  4048b4:	push   es
  4048b5:	shl    cl,cl
  4048b7:	jns    0x4048c0
  4048b9:	jnp    0x404932
  4048bb:	mov    edi,0xfd1d6405
  4048c0:	add    esp,DWORD PTR [ecx-0x7c]
  4048c3:	and    DWORD PTR [edi],ecx
  4048c5:	outs   dx,BYTE PTR ds:[esi]
  4048c6:	jmp    0xca5:0xb8bf0e64
  4048cd:	mov    BYTE PTR [esi-0x73f2f319],ah
  4048d3:	sub    cl,BYTE PTR [eax]
  4048d5:	sbb    ah,BYTE PTR [edx-0x2e1cf694]
  4048db:	scas   eax,DWORD PTR es:[edi]
  4048dc:	or     ebp,DWORD PTR [edi+ebp*2+0x1bd909f0]
  4048e3:	push   esi
  4048e4:	sbb    eax,0x1c987da6
  4048e9:	neg    DWORD PTR [edi-0x2e]
  4048ec:	push   ds
  4048ed:	add    BYTE PTR [eax],bh
  4048ef:	adc    al,0x1f
  4048f1:	xchg   ebp,eax
  4048f2:	inc    edx
  4048f3:	pop    ebp
  4048f4:	sbb    ah,BYTE PTR [edx+0x54]
  4048f7:	lahf   
  4048f8:	sbb    ebp,DWORD PTR [ebx]
  4048fa:	xchg   esi,eax
  4048fb:	fstp   DWORD PTR [ecx]
  4048fd:	xor    al,0x0
  4048ff:	sbb    ebx,DWORD PTR [eax]
  404901:	xor    DWORD PTR [ecx-0x34e1ecb9],ebp
  404907:	test   DWORD PTR [edx],edx
  404909:	dec    edi
  40490a:	dec    ebp
  40490b:	les    edx,FWORD PTR [eax]
  40490d:	js     0x404916
  40490f:	add    DWORD PTR [ecx],edx
  404911:	add    BYTE PTR [edx-0x11],dh
  404914:	cmp    al,0x15
  404916:	add    BYTE PTR [eax],al
  404918:	jge    0x40489b
  40491a:	cld    
  40491b:	adc    al,0xc4
  40491d:	mov    ds:0xd59b16b9,al
  404922:	jnp    0x40493b
  404924:	(bad)  
  404925:	cli    
  404926:	dec    ebx
  404927:	cmp    cl,ah
  404929:	pushf  
  40492a:	(bad)  
  40492b:	cmp    DWORD PTR [eax-0x38c43759],ebx
  404931:	enter  0x3a0a,0x3a
  404935:	ret    0x3f45
  404938:	add    eax,0x1c3e87b5
  40493d:	mov    ?,WORD PTR [esi+0x2e8733c]
  404943:	cmp    eax,0x365f2b76
  404948:	cmp    DWORD PTR [ebp-0x63],ecx
  40494b:	aaa    
  40494c:	add    BYTE PTR [eax-0x25],bh
  40494f:	xor    eax,0x341919cf
  404954:	bound  esi,QWORD PTR [esi+edx*2-0x6b99f2cf]
  40495b:	xor    BYTE PTR [edi+ebx*2+0x31ab32d2],dh
  404962:	adc    BYTE PTR [ebx],dh
  404964:	cs (bad) 
  404966:	push   0x24
  404968:	mov    cl,0xa3
  40496a:	test   al,0x25
  40496c:	or     BYTE PTR [edx-0xfa8d811],al
  404972:	sub    esp,DWORD PTR [esi]
  404974:	retf   0x62fd
  404977:	and    esi,DWORD PTR [ebp-0x65]
  40497a:	sahf   
  40497b:	and    al,BYTE PTR [eax]
  40497d:	add    BYTE PTR [ecx+ebp*4],ch
  404980:	out    0x20,eax
  404982:	arpl   di,ax
  404984:	and    eax,0x79048621
  404989:	sub    ch,BYTE PTR [ecx-0x6e]
  40498c:	mov    ebx,0x22dd372b
  404991:	cld    
  404992:	push   cs
  404993:	lods   al,BYTE PTR ds:[esi]
  404994:	or     al,0x3e
  404996:	pop    ds
  404997:	(bad)  
  404998:	pop    ds
  404999:	jno    0x4049b5
  40499b:	pop    edx
  40499c:	cmp    BYTE PTR [ebx-0xa361eed],dh
  4049a2:	or     DWORD PTR [eax+0x64],edx
  4049a5:	aaa    
  4049a6:	pusha  
  4049a7:	fst    QWORD PTR [eax-0x599d5866]
  4049ad:	pop    eax
  4049ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049af:	mov    bl,0x5c
  4049b1:	push   ds
  4049b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b3:	add    al,0xf2
  4049b5:	fild   DWORD PTR [ebp-0x7f6d166f]
  4049bb:	es dec esi
  4049bd:	push   ecx
  4049be:	mov    DWORD PTR [edi-0x4c],ecx
  4049c1:	pop    ss
  4049c2:	adc    DWORD PTR [eax-0x66],0xffffffd5
  4049c6:	push   0x55
  4049c8:	loope  0x404953
  4049ca:	imul   ebx,DWORD PTR [edx+0x77],0xa8b604b
  4049d1:	or     eax,0xcf207c5a
  4049d6:	push   ebx
  4049d7:	stc    
  4049d8:	cmp    BYTE PTR [eax+0x421eee4e],al
  4049de:	aas    
  4049df:	xlat   BYTE PTR ds:[ebx]
  4049e0:	gs add al,0x0
  4049e3:	add    BYTE PTR ds:0x2cc6cb18,bh
  4049e9:	lods   eax,DWORD PTR ds:[esi]
  4049ea:	out    dx,eax
  4049eb:	mov    ebx,0x7e49121b
  4049f0:	adc    al,BYTE PTR [ebx-0x45]
  4049f3:	cmp    BYTE PTR [eax],cl
  4049f5:	hlt    
  4049f6:	xchg   esp,eax
  4049f7:	cli    
  4049f8:	and    DWORD PTR [ecx-0x7c],esp
  4049fb:	mov    ch,0x1c
  4049fd:	(bad)  
  4049fe:	scas   al,BYTE PTR es:[edi]
  4049ff:	ja     0x404a0e
  404a01:	lahf   
  404a02:	push   eax
  404a03:	xor    DWORD PTR [edi],ecx
  404a05:	cmp    dl,0xf2
  404a08:	fidiv  WORD PTR [ebx]
  404a0a:	lock ds cwde 
  404a0d:	push   ss
  404a0e:	fistp  WORD PTR [eax]
  404a10:	rcl    BYTE PTR [esi],cl
  404a12:	mov    gs,WORD PTR [edx+0xc]
  404a15:	adc    eax,0x145ec4b9
  404a1a:	sbb    al,0xd7
  404a1c:	xchg   ecx,eax
  404a1d:	adc    DWORD PTR [ebx],ecx
  404a1f:	sbb    ebx,0x1503320f
  404a25:	adc    bl,BYTE PTR [ebp+0x2d]
  404a28:	pop    ss
  404a29:	adc    ecx,DWORD PTR [eax]
  404a2b:	retf   
  404a2c:	add    ah,bh
  404a2e:	mul    BYTE PTR [edx+ecx*2-0x3]
  404a32:	and    eax,0x50ff841f
  404a37:	cmp    DWORD PTR [esi-0x16dd3c03],esp
  404a3d:	cli    
  404a3e:	mov    dl,0xc
  404a40:	and    edi,edx
  404a42:	pop    ecx
  404a43:	jbe    0x404aa2
  404a45:	clc    
  404a46:	test   al,ah
  404a48:	add    BYTE PTR [eax],al
  404a4a:	iret   
  404a4b:	clc    
  404a4c:	jg     0x4049e7
  404a4e:	repz icebp 
  404a50:	dec    esi
  404a51:	mov    bl,0x39
  404a53:	repz popf 
  404a55:	dec    ebp
  404a56:	ja     0x404a49
  404a58:	test   al,0xe7
  404a5a:	mov    dh,0xef
  404a5c:	sub    esi,edx
  404a5e:	sti    
  404a5f:	hlt    
  404a60:	cli    
  404a61:	pop    ebx
  404a62:	xor    ah,dh
  404a64:	shl    DWORD PTR [ebp-0x70330992],0xbc
  404a6b:	div    BYTE PTR [edi-0x392059d5]
  404a71:	add    DWORD PTR [ecx+eiz*8+0x15],esp
  404a75:	and    BYTE PTR [edx],0xe3
  404a78:	loopne 0x404a4f
  404a7a:	enter  0x73e1,0xc3
  404a7e:	(bad)  
  404a7f:	out    0x82,al
  404a81:	imul   edi,DWORD PTR ds:0x204b00e6,0x32145108
  404a8b:	retf   0x1150
  404a8e:	imul   edx,DWORD PTR [ebx+ebx*2+0x5a54053e],0x6f
  404a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a97:	adc    DWORD PTR [eax+0x58],ebx
  404a9a:	mov    ecx,0xa3bd59cf
  404a9f:	sahf   
  404aa0:	pop    esp
  404aa1:	jmp    0x1aef:0x935d5c7d
  404aa8:	pop    edi
  404aa9:	jl     0x404acc
  404aab:	fstp   DWORD PTR [esi+0x69]
  404aae:	add    BYTE PTR [eax],al
  404ab0:	dec    esi
  404ab1:	aas    
  404ab2:	loopne 0x404a4a
  404ab4:	fs and ecx,0xe3c3eac7
  404abb:	mov    al,0x98
  404abd:	add    eax,0x488625e2
  404ac2:	out    0x52,eax
  404ac4:	fmul   QWORD PTR [edx-0x33ac041a]
  404aca:	in     al,0xe4
  404acc:	inc    ecx
  404acd:	push   cs
  404ace:	in     eax,0xe1
  404ad0:	jle    0x404b24
  404ad2:	out    dx,al
  404ad3:	out    dx,al
  404ad4:	aam    0x95
  404ad6:	out    dx,eax
  404ad7:	aas    
  404ad8:	mov    ecx,0x8f08edd6
  404add:	adc    al,0xec
  404adf:	lea    edx,[ebp-0x4c6516a7]
  404ae5:	xchg   edi,eax
  404ae6:	call   0xeb1f0c4e
  404aeb:	sub    al,0x17
  404aed:	sbb    ebp,ebx
  404aef:	pop    ecx
  404af0:	sub    esp,DWORD PTR ds:0x638526fc
  404af6:	std    
  404af7:	ja     0x404b60
  404af9:	mov    eax,ds:0xdf3980ff
  404afe:	std    
  404aff:	add    BYTE PTR [edx],ah
  404b01:	and    BYTE PTR [ebx],bl
  404b03:	cli    
  404b04:	xchg   ebp,eax
  404b05:	dec    ebx
  404b06:	fsincos 
  404b08:	int3   
  404b09:	jno    0x404aaa
  404b0b:	stc    
  404b0c:	stos   DWORD PTR es:[edi],eax
  404b0d:	pop    ss
  404b0e:	pop    ebp
  404b0f:	clc    
  404b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b11:	fiadd  WORD PTR [ecx]
  404b13:	repz add BYTE PTR [eax],al
  404b16:	shl    DWORD PTR [ebx+eax*8-0x7d75970e],0xf0
  404b1e:	dec    edi
  404b1f:	loopne 0x404b67
  404b21:	icebp  
  404b22:	jmp    0xcb9a:0xedf407f4
  404b29:	cmc    
  404b2a:	inc    esp
  404b2b:	mov    ds:0xc753f78c,al
  404b30:	dec    esi
  404b31:	idiv   BYTE PTR [esi-0x17]
  404b34:	js     0x404b0f
  404b36:	imul   edi,DWORD PTR [edi-0x48],0xfdbe10d8
  404b3d:	fisub  DWORD PTR [edi]
  404b3f:	sar    DWORD PTR [edi],cl
  404b41:	(bad)  [edx-0x7a218f3f]
  404b47:	test   al,0xb2
  404b49:	fistp  WORD PTR [ebp+edx*4-0x404220b]
  404b50:	xor    eax,0x6a38f6dc
  404b55:	xlat   BYTE PTR ds:[ebx]
  404b56:	mov    cl,0x4e
  404b58:	test   al,0xd6
  404b5a:	js     0x404bc9
  404b5c:	out    dx,al
  404b5d:	aam    0x5f
  404b5f:	add    ebp,DWORD PTR [edx*8-0x2f9cef26]
  404b66:	jge    0x404bde
  404b68:	mov    eax,ds:0xe74034d1
  404b6d:	rol    DWORD PTR [ebx+0x2e],cl
  404b70:	and    eax,0x5fc6aed2
  404b75:	lds    edi,FWORD PTR [ecx]
  404b77:	lods   al,BYTE PTR ds:[esi]
  404b78:	popf   
  404b79:	les    eax,FWORD PTR [eax]
  404b7b:	add    BYTE PTR [edi],dh
  404b7d:	popa   
  404b7e:	call   0x4313c55c
  404b83:	sbb    BYTE PTR [eax+0x3e],dh
  404b86:	push   esp
  404b87:	push   edi
  404b88:	jne    0x404b7f
  404b8a:	std    
  404b8b:	xchg   esp,eax
  404b8c:	je     0x404b4a
  404b8e:	adc    bl,0x76
  404b91:	fild   QWORD PTR [ecx+0x6ce27711]
  404b97:	dec    ebp
  404b98:	ins    BYTE PTR es:[edi],dx
  404b99:	or     edi,eax
  404b9b:	(bad)  
  404b9c:	ins    DWORD PTR es:[edi],dx
  404b9d:	pop    eax
  404b9e:	cmp    ecx,ecx
  404ba0:	jg     0x404bcd
  404ba2:	adc    ecx,DWORD PTR [ebx]
  404ba4:	jle    0x404bac
  404ba6:	add    eax,0x2fdd7344
  404bab:	xchg   BYTE PTR [edx+0x64],ch
  404bae:	rol    eax,1
  404bb0:	add    cl,cl
  404bb2:	jnp    0x404bb6
  404bb4:	stc    
  404bb5:	pop    ebp
  404bb6:	xchg   ebx,eax
  404bb7:	scas   eax,DWORD PTR es:[edi]
  404bb8:	(bad)  
  404bb9:	fidivr WORD PTR [eax+0x472fc76d]
  404bbf:	sub    esp,DWORD PTR [ebp-0x5b17157c]
  404bc5:	adc    ebx,edi
  404bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bc8:	test   eax,0xa06451a2
  404bcd:	retf   
  404bce:	scas   eax,DWORD PTR es:[edi]
  404bcf:	and    cl,dl
  404bd1:	rol    BYTE PTR [ebp-0x3d2a3c20],1
  404bd7:	mov    esp,0x7e68d6c0
  404bdc:	mov    ecx,0x381607
  404be1:	add    BYTE PTR [ebx-0x5505c404],dh
  404be7:	jns    0x404c14
  404be9:	mov    ch,0x9f
  404beb:	push   0x1
  404bed:	ja     0x404b8d
  404bef:	push   ebx
  404bf0:	jle    0x404c23
  404bf2:	int3   
  404bf3:	cwde   
  404bf4:	aad    0xf3
  404bf6:	int    0x34
  404bf8:	sbb    cl,dh
  404bfa:	scas   eax,DWORD PTR es:[edi]
  404bfb:	mov    ecx,0xb7ec5ae7
  404c00:	mov    dh,0xa4
  404c02:	inc    edx
  404c03:	mov    dh,0xc1
  404c05:	mov    ?,WORD PTR [eax-0x49]
  404c08:	push   esp
  404c09:	cdq    
  404c0a:	mov    bh,0xba
  404c0c:	and    esi,DWORD PTR [ebx+0x4d6abaf5]
  404c12:	cmp    edi,DWORD PTR [ebp-0x438d188b]
  404c18:	jo     0x404c3a
  404c1a:	mov    ebp,0xff0a5fb3
  404c1f:	mov    cl,0xe
  404c21:	je     0x404c54
  404c23:	mov    ah,0x39
  404c25:	fisubr WORD PTR [ebx-0x4b]
  404c28:	pushf  
  404c29:	(bad)  
  404c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c2b:	mov    al,0x8b
  404c2d:	popa   
  404c2e:	out    0xb0,al
  404c30:	mov    dl,0x1b
  404c32:	dec    eax
  404c33:	scas   eax,DWORD PTR es:[edi]
  404c34:	fnsave ds:0xd388ae02
  404c3a:	adc    eax,0x577d77dd
  404c3f:	fsub   QWORD PTR [esi-0x2e256501]
  404c45:	sub    DWORD PTR [eax],eax
  404c47:	add    bl,dl
  404c49:	fiadd  DWORD PTR [esp+edi*1+0xc]
  404c4d:	(bad)  
  404c4e:	xor    edx,DWORD PTR [esi]
  404c50:	dec    esi
  404c51:	xlat   BYTE PTR ds:[ebx]
  404c52:	fisub  DWORD PTR [edi+0x60]
  404c55:	fld    DWORD PTR ds:0xd79ac2
  404c5b:	test   esi,esp
  404c5d:	into   
  404c5e:	iret   
  404c5f:	scas   al,BYTE PTR es:[edi]
  404c60:	and    al,0xce
  404c62:	push   ds
  404c63:	push   ecx
  404c64:	dec    edx
  404c65:	shr    BYTE PTR [ecx],1
  404c67:	sti    
  404c68:	adc    eax,0xd3c8ecac
  404c6e:	jnp    0x404cb6
  404c70:	std    
  404c71:	aam    0x1
  404c73:	inc    ebx
  404c74:	out    dx,eax
  404c75:	pop    es
  404c76:	mov    ds:0xa3c5c54c,al
  404c7b:	cmp    DWORD PTR [ecx+0x70],ebp
  404c7e:	mov    ah,0x46
  404c80:	cmp    ebp,DWORD PTR [esi]
  404c82:	mov    ch,0x97
  404c84:	adc    eax,0x7f60b6f4
  404c89:	mov    cl,0xb6
  404c8b:	cmc    
  404c8c:	popa   
  404c8d:	js     0x404c42
  404c8f:	add    al,BYTE PTR [edx]
  404c91:	aaa    
  404c92:	mov    dl,0xcb
  404c94:	cmp    eax,0x1794affd
  404c99:	mov    ebx,0x5d5a91b1
  404c9e:	mov    edx,0xbb20ecbe
  404ca3:	out    dx,eax
  404ca4:	xchg   dl,ah
  404ca6:	mov    eax,0xb8a4a0d8
  404cab:	cmp    eax,0x65b20000
  404cb0:	mov    ebp,0xbc27946a
  404cb5:	adc    ecx,DWORD PTR [esi+0x19fcbdea]
  404cbb:	sahf   
  404cbc:	mov    edi,0x13434e9
  404cc1:	inc    esp
  404cc2:	push   esi
  404cc3:	enter  0x62b9,0x3
  404cc7:	cmp    al,0xab
  404cc9:	mov    edi,0x1e13bf9e
  404cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ccf:	adc    cl,BYTE PTR [esi+0x3666c4fb]
  404cd5:	xchg   ebp,eax
  404cd6:	mov    ds,WORD PTR [ecx]
  404cd8:	and    al,0x70
  404cda:	jmp    0x404d3a
  404cdc:	pushf  
  404cdd:	xchg   esi,eax
  404cde:	rol    ecx,cl
  404ce0:	les    esi,FWORD PTR [ebx+0x6e]
  404ce3:	cmp    al,0x7c
  404ce5:	or     eax,0xe86ec79b
  404cea:	mov    bh,0x33
  404cec:	(bad)  
  404ced:	add    BYTE PTR [esi+0xb],dh
  404cf0:	xlat   BYTE PTR ds:[ebx]
  404cf1:	dec    edx
  404cf2:	fwait
  404cf3:	push   0x44edf26b
  404cf8:	fsubrp st(0),st
  404cfa:	inc    eax
  404cfb:	and    BYTE PTR [edx+0x58],ah
  404cfe:	mov    ecx,0x145017e3
  404d03:	and    BYTE PTR [ebp+0x11ac92e8],0xfa
  404d0a:	outs   dx,DWORD PTR ds:[esi]
  404d0b:	leave  
  404d0c:	lods   eax,DWORD PTR ds:[esi]
  404d0d:	inc    edx
  404d0e:	inc    esi
  404d0f:	jo     0x404d8b
  404d11:	fild   WORD PTR [eax]
  404d13:	add    BYTE PTR [ebx-0x629839ed],ch
  404d19:	cmp    DWORD PTR [ebx+0x75],esi
  404d1c:	xor    BYTE PTR [ebx-0x31],bl
  404d1f:	int    0xbe
  404d21:	dec    esp
  404d22:	lods   al,BYTE PTR ds:[esi]
  404d23:	xchg   ebp,eax
  404d24:	arpl   WORD PTR [ecx],bp
  404d26:	adc    BYTE PTR ds:0x3fa50325,ch
  404d2c:	fcomp  DWORD PTR [edi+0x19]
  404d2f:	xchg   DWORD PTR [ecx-0x27],esi
  404d32:	into   
  404d33:	sbb    cl,BYTE PTR [esp+edi*4-0x6f855d8e]
  404d3a:	les    esi,FWORD PTR [eax+0x87af357]
  404d40:	pop    eax
  404d41:	sbb    esi,DWORD PTR [ebx]
  404d43:	mov    al,ds:0x188f7875
  404d48:	mov    bl,0x53
  404d4a:	cmp    cl,BYTE PTR [edx]
  404d4c:	into   
  404d4d:	xor    BYTE PTR [esi+0x4e8867b2],al
  404d53:	das    
  404d54:	or     ch,ah
  404d56:	in     al,dx
  404d57:	xchg   edi,eax
  404d58:	cld    
  404d59:	rcr    BYTE PTR [eax-0x7b],0x51
  404d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d5e:	in     al,0x3d
  404d60:	lahf   
  404d61:	mov    bl,0x87
  404d63:	gs adc cl,0x3b
  404d67:	fnsave [edi]
  404d69:	inc    ecx
  404d6a:	dec    eax
  404d6b:	(bad)  
  404d6c:	clc    
  404d6d:	jne    0x404d59
  404d6f:	xor    cl,BYTE PTR [eax+0x15]
  404d72:	adc    ah,ah
  404d74:	int    0xb9
  404d76:	xor    DWORD PTR [eax+0x0],ebx
  404d79:	add    BYTE PTR ds:0xf7edda90,al
  404d7f:	xor    bh,BYTE PTR [eax+0x51]
  404d82:	lahf   
  404d83:	mov    ebx,0x4ea72bba
  404d88:	cdq    
  404d89:	xchg   edi,eax
  404d8a:	push   DWORD PTR [eax]
  404d8c:	cmc    
  404d8d:	and    ebp,ebp
  404d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d90:	push   ecx
  404d91:	sahf   
  404d92:	xchg   ebp,eax
  404d93:	inc    esp
  404d94:	sub    DWORD PTR [ecx-0x8],ecx
  404d97:	jmp    0xbfb942a5
  404d9c:	popa   
  404d9d:	inc    eax
  404d9e:	and    BYTE PTR [edx-0x3e],0xfc
  404da2:	sar    BYTE PTR [edx+edx*8+0x7162229f],cl
  404da9:	and    eax,edx
  404dab:	push   edi
  404dac:	sbb    dl,BYTE PTR [esi+0x2a38faa8]
  404db2:	sbb    BYTE PTR [ecx+eax*2-0x1df98203],dl
  404db9:	inc    eax
  404dba:	xor    eax,0x47f488df
  404dbf:	mov    ch,BYTE PTR [ebx+0x5d58cf48]
  404dc5:	adc    al,0xbc
  404dc7:	cmc    
  404dc8:	cmc    
  404dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dca:	push   esp
  404dcb:	mov    ds:0xbe461d95,eax
  404dd0:	scas   al,BYTE PTR es:[edi]
  404dd1:	mov    eax,ds:0x76c5e7ae
  404dd6:	and    edx,DWORD PTR [edx+0x6ca3ca6a]
  404ddc:	(bad)  
  404ddd:	jle    0x404ddf
  404ddf:	add    BYTE PTR [ecx+0x39c32519],ch
  404de5:	xor    al,0xba
  404de7:	xor    al,0x97
  404de9:	loop   0x404e41
  404deb:	rdpmc  
  404ded:	call   0xd6cc:0x889e7c31
  404df4:	sub    dh,al
  404df6:	ins    BYTE PTR es:[edi],dx
  404df7:	lahf   
  404df8:	cmc    
  404df9:	mov    BYTE PTR gs:[ecx+esi*1+0x7de6e60d],al
  404e01:	inc    DWORD PTR [edx]
  404e03:	dec    esp
  404e04:	sub    BYTE PTR [edi-0x76],dh
  404e07:	pop    es
  404e08:	sub    ch,BYTE PTR [edi+0x27]
  404e0b:	sub    al,0xc6
  404e0d:	pop    es
  404e0e:	add    DWORD PTR [edi+0x639c1533],edi
  404e14:	mov    edi,0x89c3d5d
  404e19:	clc    
  404e1a:	push   edi
  404e1b:	mov    bh,0x84
  404e1d:	xor    BYTE PTR [esi-0x2c6e2ead],0xee
  404e24:	jle    0x404e10
  404e26:	mov    ah,0xde
  404e28:	lahf   
  404e29:	xor    dl,al
  404e2b:	inc    ebx
  404e2c:	cmp    cl,dl
  404e2e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  404e30:	xchg   eax,ebx
  404e32:	dec    ebx
  404e33:	mov    WORD PTR [ebx],?
  404e35:	and    dl,ah
  404e37:	jae    0x404e95
  404e39:	mov    ch,0x7f
  404e3b:	into   
  404e3c:	cwde   
  404e3d:	cmp    eax,0x4f053c59
  404e42:	hlt    
  404e43:	push   ss
  404e44:	add    BYTE PTR [eax],al
  404e46:	xchg   ecx,eax
  404e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e48:	jmp    0x404df8
  404e4a:	push   ecx
  404e4b:	aas    
  404e4c:	inc    esi
  404e4d:	xchg   esp,eax
  404e4e:	lods   eax,DWORD PTR ds:[esi]
  404e4f:	mov    dh,0x60
  404e51:	neg    BYTE PTR [ecx-0x5b]
  404e54:	mov    ebp,0x1c4ca45b
  404e59:	and    al,0x73
  404e5b:	enter  0xfef9,0xe8
  404e5f:	das    
  404e60:	add    DWORD PTR [esi+0x731ef15c],edx
  404e66:	stc    
  404e67:	test   BYTE PTR [edi-0x59fe6b],ah
  404e6d:	jo     0x404ebb
  404e6f:	push   edx
  404e70:	inc    edi
  404e71:	push   cs
  404e72:	cmp    BYTE PTR [edi+0x5b04eb55],bl
  404e78:	in     eax,dx
  404e79:	inc    edx
  404e7a:	ins    BYTE PTR es:[edi],dx
  404e7b:	test   BYTE PTR [eax-0x61],dh
  404e7e:	cdq    
  404e7f:	out    dx,al
  404e80:	(bad)  
  404e81:	mov    ecx,0x14da7cb4
  404e86:	sar    al,0x61
  404e89:	test   DWORD PTR [ebx+eax*2],edx
  404e8c:	push   0x60
  404e8e:	shl    DWORD PTR [esi+0x4a5cfed2],1
  404e94:	rcr    bl,0x39
  404e97:	scas   al,BYTE PTR es:[edi]
  404e98:	js     0x404ecc
  404e9a:	mov    edi,ebx
  404e9c:	in     al,0x8f
  404e9e:	add    al,0x95
  404ea0:	pop    ebp
  404ea1:	test   eax,0x44ee7a1
  404ea6:	ret    
  404ea7:	mov    esi,edi
  404ea9:	call   0xf7af:0xaeac0000
  404eb0:	cdq    
  404eb1:	dec    edx
  404eb2:	pop    ss
  404eb3:	adc    esp,esi
  404eb5:	mov    ch,0x5
  404eb7:	ins    BYTE PTR es:[edi],dx
  404eb8:	popa   
  404eb9:	inc    eax
  404eba:	mov    ebp,0x208d21cd
  404ebf:	test   al,0x6c
  404ec1:	out    0x97,eax
  404ec3:	inc    esi
  404ec4:	stc    
  404ec5:	xchg   esp,eax
  404ec6:	mov    ah,BYTE PTR [ebx]
  404ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec9:	loopne 0x404efc
  404ecb:	and    cl,BYTE PTR [ecx-0x1bc01425]
  404ed1:	xchg   edi,eax
  404ed2:	push   esp
  404ed3:	cdq    
  404ed4:	inc    ecx
  404ed5:	in     al,0x45
  404ed7:	mov    ah,0x1c
  404ed9:	nop
  404eda:	inc    BYTE PTR [eax]
  404edc:	bound  edx,QWORD PTR [ebp+0x3fe7623b]
  404ee2:	xchg   dl,bl
  404ee4:	stc    
  404ee5:	int    0x33
  404ee7:	enter  0xba4c,0x8f
  404eeb:	jo     0x404e87
  404eed:	stos   BYTE PTR es:[edi],al
  404eee:	in     al,dx
  404eef:	sub    BYTE PTR [edi-0x43],ch
  404ef2:	push   eax
  404ef3:	nop
  404ef4:	add    edx,esi
  404ef6:	in     al,0x82
  404ef8:	in     al,0x86
  404efa:	push   esi
  404efb:	cmp    cl,BYTE PTR [ebp+0x2d]
  404efe:	mov    fs,WORD PTR [edi+0x1f325ab8]
  404f04:	xchg   esi,eax
  404f05:	jbe    0x404e8e
  404f07:	or     eax,0xb53adfa3
  404f0c:	stos   BYTE PTR es:[edi],al
  404f0d:	aad    0x41
  404f0f:	mov    ebp,0x25f0000
  404f14:	std    
  404f15:	add    eax,0x17498d31
  404f1a:	aam    0xf7
  404f1c:	repz scas eax,DWORD PTR es:[edi]
  404f1e:	cmp    eax,0x8322352
  404f23:	and    eax,0x7a68a9f
  404f28:	sub    bl,BYTE PTR [eax+0x20965e73]
  404f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f2f:	outs   dx,BYTE PTR ds:[esi]
  404f30:	cmc    
  404f31:	js     0x404eb3
  404f33:	pop    ss
  404f34:	dec    ecx
  404f35:	rcr    BYTE PTR [esi],0x35
  404f38:	cld    
  404f39:	sar    bl,cl
  404f3b:	and    DWORD PTR [eax+0x6a],eax
  404f3e:	push   edx
  404f3f:	out    0x96,eax
  404f41:	div    DWORD PTR [edi-0x76b0d783]
  404f47:	mov    dl,0x9e
  404f49:	pop    ebp
  404f4a:	sbb    al,0xc6
  404f4c:	and    ah,ch
  404f4e:	or     ebx,DWORD PTR [esi]
  404f50:	push   0x4d
  404f52:	jle    0x404f9e
  404f54:	(bad)  
  404f55:	cmc    
  404f56:	aaa    
  404f57:	sbb    ebx,edx
  404f59:	bound  ebx,QWORD PTR [eax]
  404f5b:	jbe    0x404fc9
  404f5d:	ficomp WORD PTR [eax+0x1d]
  404f60:	xchg   DWORD PTR [ecx],ecx
  404f62:	cmc    
  404f63:	mov    DWORD PTR [ebx+0x3ca46db5],ebp
  404f69:	add    BYTE PTR [edi+0xf],cl
  404f6c:	jecxz  0x404f29
  404f6e:	pop    es
  404f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f70:	repz fidivr WORD PTR [edi+0x634c11]
  404f77:	add    BYTE PTR [edi],al
  404f79:	sub    al,0xba
  404f7b:	(bad)  
  404f7c:	adc    eax,0x9d6a9497
  404f81:	neg    DWORD PTR [ebx-0x43]
  404f84:	cmp    bl,dl
  404f86:	ret    
  404f87:	add    eax,ebp
  404f89:	shl    BYTE PTR [esp+esi*4],0xd2
  404f8d:	sbb    eax,0xb542080a
  404f92:	inc    esp
  404f93:	jb     0x404fc7
  404f95:	loop   0x404f81
  404f97:	int    0xd2
  404f99:	jnp    0x405017
  404f9b:	jnp    0x404f65
  404f9d:	mov    ds:0xdb4828c7,ax
  404fa3:	adc    ch,al
  404fa5:	mov    ds:0xd11dac74,al
  404faa:	adc    ebx,DWORD PTR [ecx]
  404fac:	pop    ds
  404fad:	cs das 
  404faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb0:	mov    bh,0x9f
  404fb2:	sbb    al,0xc6
  404fb4:	outs   dx,DWORD PTR ds:[esi]
  404fb5:	jp     0x404fba
  404fb7:	jp     0x404f90
  404fb9:	sub    BYTE PTR [edi+ecx*8-0x3b],ah
  404fbd:	add    eax,0x6c6d73cb
  404fc2:	mov    bl,0xa4
  404fc4:	mov    dh,dl
  404fc6:	mov    WORD PTR [eax],ds
  404fc8:	sbb    ch,dh
  404fca:	cli    
  404fcb:	lods   al,BYTE PTR ds:[esi]
  404fcc:	and    ah,BYTE PTR [edx]
  404fce:	push   esp
  404fcf:	adc    DWORD PTR [edx+0x34],esi
  404fd2:	out    dx,al
  404fd3:	mov    eax,ds:0x7d4b0682
  404fd8:	push   es
  404fd9:	outs   dx,DWORD PTR ds:[esi]
  404fda:	gs jmp 0x45c0:0x60740000
  404fe2:	call   FWORD PTR [eax]
  404fe4:	sbb    DWORD PTR ds:0x11f47d20,ebp
  404fea:	(bad)  
  404feb:	cmc    
  404fec:	xchg   ecx,eax
  404fed:	jne    0x405008
  404fef:	jecxz  0x40505f
  404ff1:	fidivr DWORD PTR [ebp-0x31356e75]
  404ff7:	ret    
  404ff8:	ins    BYTE PTR es:[edi],dx
  404ff9:	gs jb  0x405027
  404ffc:	or     al,BYTE PTR [edx]
  404ffe:	(bad)  
  404fff:	sbb    eax,0xd56b1ce7
  405004:	inc    esi
  405005:	push   ebp
  405006:	int3   
  405007:	inc    eax
  405008:	mov    ds:0xbdb851fa,eax
  40500d:	mov    ebp,es
  40500f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405010:	sbb    BYTE PTR [edx+0x6d814e49],dh
  405016:	jmp    0x40506d
  405018:	pop    esp
  405019:	rcr    BYTE PTR [edi-0x1dcb0562],cl
  40501f:	scas   eax,DWORD PTR es:[edi]
  405020:	xlat   BYTE PTR ds:[ebx]
  405021:	sbb    DWORD PTR [esi+0x2ae23648],edx
  405027:	int    0x93
  405029:	cmp    eax,0xa9ad25bd
  40502e:	and    BYTE PTR [ebx],dh
  405030:	or     BYTE PTR [ebp-0x6b61444c],al
  405036:	push   edi
  405037:	xchg   ebx,eax
  405038:	sti    
  405039:	mov    ecx,0x4d14daeb
  40503e:	dec    esi
  40503f:	in     eax,dx
  405040:	outs   dx,DWORD PTR ds:[esi]
  405041:	repnz add BYTE PTR [eax],al
  405044:	jecxz  0x404fca
  405046:	leave  
  405047:	or     DWORD PTR [ebp+0x6924a40f],esi
  40504d:	push   0xaaf54301
  405052:	(bad)  
  405053:	push   ds
  405054:	jp     0x40509d
  405056:	jg     0x405079
  405058:	jp     0x405059
  40505a:	(bad)  
  40505b:	cmp    al,0x1d
  40505d:	jb     0x4050ce
  40505f:	call   0x69d6:0xb77d0683
  405066:	lds    edx,FWORD PTR [esi+0xd]
  405069:	and    DWORD PTR [eax-0xd],ebx
  40506c:	arpl   bp,dx
  40506e:	loopne 0x40503d
  405070:	inc    esi
  405071:	sub    dl,dh
  405073:	push   0xbe4acc0b
  405078:	xor    ebp,DWORD PTR [ebx+0x12]
  40507b:	pop    ebx
  40507c:	ss pop es
  40507e:	stos   BYTE PTR es:[edi],al
  40507f:	xor    eax,0xd0b8725a
  405084:	out    dx,al
  405085:	std    
  405086:	jmp    FWORD PTR [eax-0x1a]
  405089:	int3   
  40508a:	popf   
  40508b:	test   BYTE PTR [ebx-0x611ddad8],bh
  405091:	sahf   
  405092:	aaa    
  405093:	inc    DWORD PTR [ebx]
  405095:	and    BYTE PTR [edi-0x78e9d172],cl
  40509b:	sub    eax,DWORD PTR [ebx+0x5a]
  40509e:	aas    
  40509f:	add    eax,0xa02d0e65
  4050a4:	or     esp,DWORD PTR [ebx-0x6b]
  4050a7:	cmp    DWORD PTR [eax],eax
  4050a9:	add    BYTE PTR [ebx-0x61abf7c9],bh
  4050af:	mov    ebx,0x3123b2b0
  4050b4:	mov    ds:0x1ac356cf,al
  4050b9:	mov    cl,0x46
  4050bb:	fs inc edx
  4050bd:	int3   
  4050be:	sti    
  4050bf:	or     eax,0x5a7e2afa
  4050c4:	call   0x5056f410
  4050c9:	add    BYTE PTR [ecx],bl
  4050cb:	loope  0x40507d
  4050cd:	int3   
  4050ce:	mov    ah,0x73
  4050d0:	or     eax,0xb8588274
  4050d5:	popw   ds
  4050d7:	sub    eax,0x321ede04
  4050dc:	add    DWORD PTR [eax],eax
  4050de:	popa   
  4050df:	sub    esi,DWORD PTR [ecx]
  4050e1:	xchg   esi,eax
  4050e2:	clc    
  4050e3:	xor    ah,BYTE PTR [eax+0x2c]
  4050e6:	xchg   DWORD PTR [ecx+0x51],edi
  4050e9:	mov    edx,0x19c51ee1
  4050ee:	cs push ds
  4050f0:	cmc    
  4050f1:	(bad)  
  4050f2:	not    DWORD PTR [edi-0x5c]
  4050f5:	xor    eax,0xa3944c68
  4050fa:	enter  0x8970,0x32
  4050fe:	pop    ss
  4050ff:	fs mov ecx,0xe865aea4
  405105:	push   ds
  405106:	inc    ecx
  405107:	data16 fmul DWORD PTR [eax+0x2b4cfba7]
  40510e:	add    BYTE PTR [eax],al
  405110:	test   al,0x2
  405112:	jge    0x4050d1
  405114:	mov    cl,0x10
  405116:	sub    al,0x7
  405118:	inc    BYTE PTR [edx]
  40511a:	sbb    al,0x91
  40511c:	cmp    edi,ebx
  40511e:	adc    BYTE PTR [esp+eiz*2+0x1],ah
  405122:	and    edx,esi
  405124:	fisttp QWORD PTR [eax]
  405126:	jo     0x405170
  405128:	adc    al,BYTE PTR [edx]
  40512a:	inc    eax
  40512b:	ficom  WORD PTR [edi+ebp*2-0x2b]
  40512f:	jge    0x4051ac
  405131:	outs   dx,BYTE PTR ds:[esi]
  405132:	in     eax,0xeb
  405134:	and    bl,BYTE PTR [esp+esi*4+0x51]
  405138:	int    0x66
  40513a:	test   bh,al
  40513c:	dec    ebp
  40513d:	sbb    eax,0x20b25699
  405142:	test   eax,0x272837c0
  405147:	stc    
  405148:	mov    ebp,0x23c92610
  40514d:	pop    edi
  40514e:	add    ebx,DWORD PTR [eax+edi*2-0x56]
  405152:	or     BYTE PTR [esi+edi*8-0x80],ch
  405156:	add    DWORD PTR ds:0xcfce094,edi
  40515c:	or     dl,BYTE PTR [edx+0x23]
  40515f:	and    bh,bh
  405161:	dec    esi
  405162:	sbb    dl,BYTE PTR [eax]
  405164:	popa   
  405165:	shl    BYTE PTR [edx],0x41
  405168:	adc    ebp,DWORD PTR [ecx+0x37657129]
  40516e:	add    al,0xe4
  405170:	push   es
  405171:	inc    edx
  405172:	or     esp,edx
  405174:	add    BYTE PTR [eax],al
  405176:	js     0x405111
  405178:	inc    DWORD PTR [edx+ebx*8+0x5cb4fcb7]
  40517f:	pusha  
  405180:	ja     0x40512a
  405182:	int    0x48
  405184:	ja     0x40511e
  405186:	push   ebx
  405187:	ret    0xc96d
  40518a:	loope  0x4051ca
  40518c:	outs   dx,BYTE PTR ds:[esi]
  40518d:	stc    
  40518e:	idiv   DWORD PTR [eax+0x57946cca]
  405194:	rcr    BYTE PTR [edx+ebp*1-0x59],1
  405198:	fmul   DWORD PTR ds:0x3dd2f168
  40519e:	out    dx,al
  40519f:	sub    al,0xca
  4051a1:	xor    bl,bl
  4051a3:	mov    ebx,0x533d00d0
  4051a8:	fst    DWORD PTR [ecx-0x49]
  4051ab:	lods   eax,DWORD PTR ds:[esi]
  4051ac:	shl    BYTE PTR [ecx+0x49],cl
  4051af:	sub    al,0x79
  4051b1:	hlt    
  4051b2:	mov    ds:0x14c475a4,al
  4051b7:	push   esi
  4051b8:	ins    BYTE PTR es:[edi],dx
  4051b9:	xchg   ebp,eax
  4051ba:	mov    esi,0x40a56f02
  4051bf:	xor    al,0xd0
  4051c1:	add    eax,0x6bf9d8f
  4051c6:	scas   eax,DWORD PTR es:[edi]
  4051c7:	sub    ebp,DWORD PTR [esi]
  4051c9:	call   FWORD PTR [edi-0x3f]
  4051cc:	pop    ecx
  4051cd:	cld    
  4051ce:	pop    ds
  4051cf:	push   ecx
  4051d0:	xlat   BYTE PTR ds:[ebx]
  4051d1:	and    BYTE PTR [ebx+0x731ba0b3],ch
  4051d7:	and    eax,0x2229
  4051dc:	cmp    cl,bh
  4051de:	sub    DWORD PTR ss:[edx+0x39],esp
  4051e2:	pop    esi
  4051e3:	shl    BYTE PTR [esi-0x5c],1
  4051e6:	jmp    0x7072d8b5
  4051eb:	rcl    BYTE PTR [edi-0x48],cl
  4051ee:	mov    edi,0x394e47d9
  4051f3:	jne    0x4051a7
  4051f5:	lods   eax,DWORD PTR ds:[esi]
  4051f6:	out    0x75,al
  4051f8:	stos   BYTE PTR es:[edi],al
  4051f9:	sbb    edx,DWORD PTR [edi+0x6f]
  4051fc:	rcl    ecx,cl
  4051fe:	shr    BYTE PTR [ebx+ebp*8+0x47],0x20
  405203:	pop    es
  405204:	(bad)  
  405205:	(bad)  
  405206:	out    dx,eax
  405207:	add    edi,DWORD PTR [esi-0x6f0281c0]
  40520d:	stos   BYTE PTR es:[edi],al
  40520e:	mov    esi,edi
  405210:	enter  0x71c,0x1a
  405214:	cmp    bh,BYTE PTR [edi+0x496220f0]
  40521a:	pop    ecx
  40521b:	sub    BYTE PTR [ebx],cl
  40521d:	mov    ds:0x34f32386,eax
  405222:	rcr    DWORD PTR [edx],cl
  405224:	out    0x7f,al
  405226:	cld    
  405227:	pop    ds
  405228:	push   ss
  405229:	push   ss
  40522a:	ins    DWORD PTR es:[edi],dx
  40522b:	sub    DWORD PTR [edi+0x5c],eax
  40522e:	pop    edx
  40522f:	and    dh,BYTE PTR [edi]
  405231:	jmp    0x4e3:0x89c205d3
  405238:	call   0xc087:0x5b6b00ff
  40523f:	xor    al,0x0
  405241:	add    BYTE PTR [eax+0x77],dl
  405244:	push   esi
  405245:	mov    esp,es
  405247:	pop    esp
  405248:	(bad)  
  405249:	sti    
  40524a:	leave  
  40524b:	mov    WORD PTR [ecx+0x62],ss
  40524e:	leave  
  40524f:	mov    ebx,0xaca20deb
  405254:	jge    0x4051e1
  405256:	pop    es
  405257:	sbb    esi,ebx
  405259:	aam    0xee
  40525b:	dec    eax
  40525c:	dec    eax
  40525d:	gs add al,0xf8
  405260:	icebp  
  405261:	bnd call 0x8574b64e
  405267:	adc    eax,0xe57e2359
  40526c:	into   
  40526d:	mov    cl,BYTE PTR [eax+0x5db57534]
  405273:	inc    esp
  405274:	jecxz  0x4052a9
  405276:	clc    
  405277:	rol    BYTE PTR [eax-0x4],1
  40527a:	in     al,dx
  40527b:	mov    al,ds:0x70038dd6
  405280:	ins    BYTE PTR es:[edi],dx
  405281:	call   0x8d2a:0x2afa7fea
  405288:	imul   edx,ebp,0x22
  40528b:	pop    ebp
  40528c:	std    
  40528d:	inc    esp
  40528e:	adc    DWORD PTR [edi+eax*2-0x2e43ab4d],ebp
  405295:	sub    eax,0xba72493f
  40529a:	xor    eax,0x9e43e419
  40529f:	out    dx,al
  4052a0:	pop    ebp
  4052a1:	mov    WORD PTR [edi],?
  4052a3:	clc    
  4052a4:	(bad)  
  4052a5:	mov    ecx,0x53f0000
  4052aa:	cmp    eax,0xaaf53506
  4052af:	xchg   edi,eax
  4052b0:	jge    0x4052dc
  4052b2:	adc    DWORD PTR [eax],esp
  4052b4:	jo     0x4052d0
  4052b6:	xchg   DWORD PTR [eax],eax
  4052b8:	leave  
  4052b9:	push   ds
  4052ba:	mov    ah,0x25
  4052bc:	sbb    eax,DWORD PTR cs:[ebx+esi*4+0x9d550e7]
  4052c4:	xor    BYTE PTR [eax-0x1b],dl
  4052c7:	lahf   
  4052c8:	jo     0x405332
  4052ca:	clc    
  4052cb:	push   cs
  4052cc:	addr16 addr16 enter 0xde98,0x66
  4052d2:	cdq    
  4052d3:	and    bl,BYTE PTR [ecx+0x62]
  4052d6:	test   eax,0x3c06d7b4
  4052db:	pop    ss
  4052dc:	lock add DWORD PTR [ecx+eax*4],ecx
  4052e0:	pop    ecx
  4052e1:	add    al,0x5d
  4052e3:	cmp    ebx,DWORD PTR [esi+0xb]
  4052e6:	ins    DWORD PTR es:[edi],dx
  4052e7:	lods   eax,DWORD PTR ds:[esi]
  4052e8:	jecxz  0x4052f2
  4052ea:	and    BYTE PTR [eax],0xb4
  4052ed:	pop    es
  4052ee:	mov    dl,0xb6
  4052f0:	or     eax,0x8a0ce300
  4052f5:	add    eax,0x62049ad3
  4052fa:	inc    esi
  4052fb:	cmp    DWORD PTR [ebx-0x3550899a],eax
  405301:	ins    BYTE PTR es:[edi],dx
  405302:	daa    
  405303:	adc    eax,0x8317640d
  405308:	mov    ebp,0x120a53
  40530d:	add    BYTE PTR [edx+0x4c],cl
  405310:	cmp    al,BYTE PTR [ebx+edx*8+0x443e6b1a]
  405317:	push   ds
  405318:	pop    ebx
  405319:	test   al,0xba
  40531b:	jp     0x4052ec
  40531d:	or     edi,ebp
  40531f:	jl     0x405320
  405321:	popf   
  405322:	xchg   esp,eax
  405323:	xor    eax,0x30a327af
  405328:	lahf   
  405329:	mov    cl,0xee
  40532b:	jbe    0x4052c0
  40532d:	inc    esp
  40532e:	sbb    DWORD PTR [eax-0x5d],edi
  405331:	shl    BYTE PTR [edi],cl
  405333:	add    DWORD PTR [ebx],0x473dff2
  405339:	ret    0x3a69
  40533c:	and    edx,DWORD PTR [edi+0x2]
  40533f:	or     esp,DWORD PTR [esi]
  405341:	ins    BYTE PTR es:[di],dx
  405343:	fs push ds
  405345:	ss (bad) 
  405347:	mov    eax,0x51500619
  40534c:	fstp   DWORD PTR [ebx]
  40534e:	leave  
  40534f:	add    edx,eax
  405351:	sub    edx,DWORD PTR [edi+0x7b]
  405354:	enter  0x8d7a,0xb2
  405358:	iret   
  405359:	dec    edx
  40535a:	sti    
  40535b:	xor    ebp,DWORD PTR [edx-0x21]
  40535e:	nop
  40535f:	or     DWORD PTR [edi-0x11],ebp
  405362:	push   ds
  405363:	pop    edx
  405364:	jne    0x405324
  405366:	je     0x405313
  405368:	jb     0x4052f8
  40536a:	loop   0x405324
  40536c:	aam    0xa3
  40536e:	shrd   ebx,edx,0x93
  405372:	add    BYTE PTR [eax],al
  405374:	jns    0x405399
  405376:	int    0xc2
  405378:	sti    
  405379:	sbb    esp,ecx
  40537b:	repnz test DWORD PTR [ecx+ebp*2+0x6eb0e667],ebx
  405383:	push   edi
  405384:	push   eax
  405385:	xor    BYTE PTR [edi+0x6],0xf2
  405389:	push   edx
  40538a:	jae    0x4053c2
  40538c:	jl     0x405401
  40538e:	jmp    FWORD PTR [edx]
  405390:	fucomp st(1)
  405392:	neg    DWORD PTR [edx]
  405394:	imul   ebx,DWORD PTR [ecx+0x1],0x4a
  405398:	test   eax,0x177a094b
  40539d:	shl    BYTE PTR [edx],cl
  40539f:	out    dx,eax
  4053a0:	je     0x405384
  4053a2:	and    al,0xdf
  4053a4:	add    bh,BYTE PTR [esp+ebx*1+0x1a50a08e]
  4053ab:	mov    esi,0x2233340e
  4053b0:	les    esp,FWORD PTR [edi+0x1db4259c]
  4053b6:	or     eax,0xbad3851d
  4053bb:	sbb    edx,DWORD PTR [ebp+0x41]
  4053be:	xor    al,0xff
  4053c0:	jmp    0xf238d763
  4053c5:	xor    al,0xa
  4053c7:	add    ch,BYTE PTR [ecx]
  4053c9:	mov    ebx,0x49110695
  4053ce:	sub    eax,0x5ab9fc69
  4053d3:	outs   dx,BYTE PTR ds:[esi]
  4053d4:	sub    al,0x4c
  4053d6:	ret    
  4053d7:	ja     0x4053d9
  4053d9:	add    BYTE PTR [ebp-0x628f535e],cl
  4053df:	xor    BYTE PTR [edx],ch
  4053e1:	aam    0x20
  4053e3:	shl    BYTE PTR ds:0xc445e8d3,1
  4053e9:	retf   0xabb1
  4053ec:	xchg   ebx,eax
  4053ed:	int    0xd9
  4053ef:	sbb    DWORD PTR [ebx-0x333b0ae0],eax
  4053f5:	daa    
  4053f6:	add    eax,0x941e5d4f
  4053fb:	cwde   
  4053fc:	jmp    0x3afd:0x642ac418
  405403:	int    0xd3
  405405:	cli    
  405406:	and    dh,BYTE PTR [edi]
  405408:	cmp    al,BYTE PTR [ebx]
  40540a:	pop    eax
  40540b:	mov    cl,0xe5
  40540d:	add    esp,DWORD PTR [eax+0x23]
  405410:	jge    0x40547d
  405412:	ins    DWORD PTR es:[edi],dx
  405413:	mov    dl,0x8a
  405415:	ins    BYTE PTR es:[edi],dx
  405416:	cmp    eax,0x5c751320
  40541b:	(bad)  
  40541c:	fdiv   QWORD PTR [ecx+0x4c]
  40541f:	cmp    al,0x5a
  405421:	(bad)  
  405422:	mov    cl,0x9b
  405424:	test   ecx,edx
  405426:	fldcw  WORD PTR [ecx]
  405428:	add    ebp,esi
  40542a:	js     0x4053b3
  40542c:	mov    dh,0xe2
  40542e:	jns    0x405487
  405430:	and    BYTE PTR [edi+0x68],ch
  405433:	(bad)  
  405434:	aad    0x58
  405436:	addr16 xchg edx,eax
  405438:	inc    ebx
  405439:	sar    DWORD PTR [edi-0x3d],0xf9
  40543d:	out    dx,al
  40543e:	add    BYTE PTR [eax],al
  405440:	jp     0x4053f5
  405442:	outs   dx,DWORD PTR ds:[esi]
  405443:	push   0x37cc1dcd
  405448:	retf   0x5a4d
  40544b:	mov    ah,0xfe
  40544e:	(bad)  
  405450:	(bad)
  405453:	jno    0x405498
  405455:	fucom  st(6)
  405457:	push   ds
  405458:	cmp    al,0xd
  40545a:	jno    0x4053eb
  40545c:	ss cmp ecx,ebx
  40545f:	clc    
  405460:	xor    ebp,DWORD PTR [ebx]
  405462:	pop    ebp
  405463:	jbe    0x4054bb
  405465:	xchg   esi,eax
  405466:	inc    BYTE PTR [ecx]
  405468:	push   ecx
  405469:	(bad)  
  40546a:	push   0xd2773188
  40546f:	xlat   BYTE PTR ds:[ebx]
  405470:	and    BYTE PTR [edi+0x44],ah
  405473:	mov    DWORD PTR [edx],eax
  405475:	xchg   ebp,eax
  405476:	jns    0x40542e
  405478:	jmp    DWORD PTR [edi+ebp*8+0x27]
  40547c:	aaa    
  40547d:	mov    bl,0x55
  40547f:	adc    BYTE PTR [eax],dh
  405481:	ret    
  405482:	ret    
  405483:	mov    ss,WORD PTR ds:0x1499604e
  405489:	push   ds
  40548a:	mul    BYTE PTR [eax]
  40548c:	xor    ch,bh
  40548e:	dec    ebx
  40548f:	out    dx,eax
  405490:	cs (bad) 
  405492:	fst    DWORD PTR [edi-0x15]
  405495:	or     DWORD PTR [ebx-0x40],ecx
  405498:	out    0xd9,al
  40549a:	fsubr  QWORD PTR [ecx]
  40549c:	jl     0x4054c8
  40549e:	addr16 (bad) 
  4054a0:	jl     0x4054dc
  4054a2:	icebp  
  4054a3:	add    BYTE PTR [eax],al
  4054a5:	add    BYTE PTR [edi],al
  4054a7:	imul   edx,DWORD PTR [ebx-0x48]
  4054ab:	add    eax,0xfe61c59f
  4054b0:	int    0x7f
  4054b2:	into   
  4054b3:	add    edi,esi
  4054b5:	jmp    0x1d336095
  4054ba:	inc    esp
  4054bb:	or     ebx,eax
  4054bd:	mov    ch,BYTE PTR [ebp+0x323091fd]
  4054c3:	add    al,0xa2
  4054c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054c6:	mov    ah,0x62
  4054c8:	aaa    
  4054c9:	add    eax,0x9307620b
  4054ce:	mov    dl,0x6c
  4054d0:	push   esi
  4054d1:	sub    DWORD PTR ds:0xddbf6669,edi
  4054d7:	push   esp
  4054d8:	jnp    0x405508
  4054da:	adc    dl,BYTE PTR [eax+0x4b]
  4054dd:	mov    eax,0x21a19eb
  4054e2:	hlt    
  4054e3:	sbb    ch,BYTE PTR [edx]
  4054e5:	xchg   esp,eax
  4054e6:	bound  esi,QWORD PTR [esi-0x44]
  4054e9:	aaa    
  4054ea:	dec    ebp
  4054eb:	jge    0x405479
  4054ed:	mov    eax,ds:0x1bde34a4
  4054f2:	retf   
  4054f3:	das    
  4054f4:	out    dx,al
  4054f5:	lea    ecx,[esi]
  4054f7:	xor    al,BYTE PTR [ecx]
  4054f9:	add    BYTE PTR [edi],dh
  4054fb:	daa    
  4054fc:	xor    BYTE PTR [ecx+0x4c],al
  4054ff:	and    BYTE PTR [eax-0x7e],0x35
  405503:	pop    ebp
  405504:	push   ebx
  405505:	ret    
  405506:	jb     0x405524
  405508:	les    eax,FWORD PTR [eax+eax*1]
  40550b:	add    BYTE PTR [ebx],bl
  40550d:	inc    ebx
  40550e:	cmc    
  40550f:	inc    ebp
  405510:	xor    dh,ah
  405512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405513:	xchg   BYTE PTR [ecx],ch
  405515:	icebp  
  405516:	xchg   esi,eax
  405517:	mov    DWORD PTR [esi+0x7f088b69],0x3749ba6e
  405521:	mov    eax,ds:0xaabde898
  405526:	mov    cl,0xd9
  405528:	ins    BYTE PTR es:[edi],dx
  405529:	fild   QWORD PTR [ebp+0x4f]
  40552c:	sub    eax,DWORD PTR [eax+0x5b]
  40552f:	jle    0x405533
  405531:	fld    QWORD PTR [ebx-0x72f146d3]
  405537:	sbb    al,0x70
  405539:	rol    esp,0x12
  40553c:	out    0xb9,al
  40553e:	retf   
  40553f:	and    eax,DWORD PTR [edi+0x63]
  405542:	scas   al,BYTE PTR es:[edi]
  405543:	jo     0x4054c9
  405545:	ins    BYTE PTR es:[edi],dx
  405546:	cdq    
  405547:	inc    ecx
  405548:	lds    ebx,FWORD PTR ds:0x7e02d75b
  40554e:	outs   dx,DWORD PTR ds:[esi]
  40554f:	out    0x2b,al
  405551:	pop    edi
  405552:	mov    dh,BYTE PTR [ebp-0x7b7a6fa0]
  405558:	test   eax,0xde980c09
  40555d:	mov    cl,0x5
  40555f:	test   eax,0xf9d5db4f
  405564:	or     al,0xf4
  405566:	repnz retf 0x24bd
  40556a:	xor    BYTE PTR [ebp+0x7a],bl
  40556d:	jbe    0x405585
  40556f:	ins    BYTE PTR es:[edi],dx
  405570:	add    BYTE PTR [eax],al
  405572:	xor    edx,DWORD PTR [edi]
  405574:	inc    edx
  405575:	aas    
  405576:	call   0xa14ea492
  40557b:	idiv   DWORD PTR [ebp+0x24]
  40557e:	aad    0x6
  405580:	mov    DWORD PTR ds:0x4674a5d4,edx
  405586:	pop    ss
  405587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405588:	pop    ebx
  405589:	ja     0x4055e1
  40558b:	mov    esp,0x6291e19a
  405590:	mov    ch,0xd0
  405592:	fmul   st,st(1)
  405594:	enter  0x1383,0xa1
  405598:	mov    edi,0x45345ab2
  40559d:	inc    edi
  40559e:	mov    ecx,ecx
  4055a0:	and    al,0x42
  4055a2:	ror    BYTE PTR [eax+0x4b7b1d07],1
  4055a8:	push   ss
  4055a9:	xor    al,0xa2
  4055ab:	or     al,cl
  4055ad:	repnz or eax,0xeeddc8c6
  4055b3:	test   bl,ah
  4055b5:	add    BYTE PTR [esi],bh
  4055b7:	dec    eax
  4055b8:	fiadd  DWORD PTR [edi]
  4055ba:	aas    
  4055bb:	pop    es
  4055bc:	inc    edi
  4055bd:	inc    ecx
  4055be:	inc    ecx
  4055bf:	and    DWORD PTR [esi],0x45c23846
  4055c5:	xor    eax,DWORD PTR [ebx]
  4055c7:	add    edx,DWORD PTR [esp+ebx*1-0x26]
  4055cb:	inc    ebx
  4055cc:	sbb    ebp,0x65
  4055cf:	jl     0x40555b
  4055d1:	bnd jbe 0x405591
  4055d4:	popa   
  4055d5:	pop    es
  4055d6:	add    BYTE PTR [eax],al
  4055d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055d9:	(bad)  
  4055da:	push   edi
  4055db:	add    BYTE PTR [edi+0x7b88ff3f],dl
  4055e1:	js     0x4055d1
  4055e3:	jg     0x4055a7
  4055e5:	scas   al,BYTE PTR es:[edi]
  4055e6:	int    0x5a
  4055e8:	or     esi,ebp
  4055ea:	retf   
  4055eb:	jne    0x4055fd
  4055ed:	sub    eax,0x739eb47b
  4055f2:	xchg   edx,eax
  4055f3:	fwait
  4055f4:	jg     0x4055a8
  4055f6:	test   eax,0x8ff12cbe
  4055fb:	leave  
  4055fc:	dec    ebp
  4055fd:	xor    al,bl
  4055ff:	sub    eax,0x22d13968
  405604:	jno    0x4055fe
  405606:	test   eax,0xb3bb1a37
  40560b:	push   eax
  40560c:	inc    ebx
  40560d:	jp     0x40566b
  40560f:	adc    DWORD PTR [ebp-0x720992cb],ebp
  405615:	hlt    
  405616:	add    BYTE PTR [edi+0x6e825bd4],cl
  40561c:	ror    DWORD PTR [ebx+eax*8+0xc7954e1],cl
  405623:	enter  0x681d,0x4d
  405627:	jecxz  0x4055e3
  405629:	fwait
  40562a:	mov    ?,edx
  40562c:	pop    ds
  40562d:	retf   0x25cf
  405630:	fbstp  TBYTE PTR [eax+ecx*1]
  405633:	and    al,0x80
  405635:	and    eax,0xd6dd0749
  40563a:	mov    esi,esi
  40563c:	add    BYTE PTR [eax],al
  40563e:	fild   DWORD PTR [edi]
  405640:	retf   
  405641:	mov    ds:0x8a55110c,eax
  405646:	fcmovnu st,st(7)
  405648:	adc    esp,DWORD PTR [ecx-0x12]
  40564b:	xor    dl,bh
  40564d:	js     0x405600
  40564f:	inc    edx
  405650:	xchg   esi,eax
  405651:	daa    
  405652:	push   0x8f2651cc
  405657:	popf   
  405658:	adc    BYTE PTR [ebp-0x6e],al
  40565b:	outs   dx,BYTE PTR ds:[esi]
  40565c:	shl    DWORD PTR [ecx*4+0x169b927f],cl
  405663:	mov    ebx,DWORD PTR [ebp-0x6e]
  405666:	arpl   WORD PTR [edx+0x1c],bx
  405669:	test   eax,0xb0dfa978
  40566e:	imul   edi,DWORD PTR [eax+0x4522df9e],0x1727ee59
  405678:	sbb    ch,cl
  40567a:	sbb    al,0xe3
  40567c:	fisubr DWORD PTR [ebp+edx*1-0x31b3660c]
  405683:	fisub  WORD PTR [ebp-0x18f22ea3]
  405689:	lods   al,BYTE PTR ds:[esi]
  40568b:	cmp    al,0x24
  40568d:	pop    ds
  40568e:	or     ebp,DWORD PTR [eiz*2-0x50383100]
  405695:	mov    ds:0xe29decd6,eax
  40569a:	int    0x11
  40569c:	int    0x21
  40569e:	xor    al,0xdc
  4056a0:	sti    
  4056a1:	pusha  
  4056a2:	add    BYTE PTR [eax],al
  4056a4:	arpl   WORD PTR [ebx+0x5a0aafe1],dx
  4056aa:	into   
  4056ab:	out    dx,al
  4056ac:	and    DWORD PTR [ebp-0x7e],eax
  4056af:	sub    eax,0x6cb07018
  4056b4:	out    0x2e,eax
  4056b6:	and    eax,0x1405aeab
  4056bb:	jmp    0x13ac:0x29471905
  4056c2:	jbe    0x40572c
  4056c4:	and    DWORD PTR [ebx+0x79],ebx
  4056c7:	test   BYTE PTR [eax+0x54],0x46
  4056cb:	mov    bh,0x63
  4056cd:	outs   dx,DWORD PTR ds:[esi]
  4056ce:	sbb    esi,DWORD PTR [edx+ebx*2+0x44]
  4056d2:	sub    esi,DWORD PTR ds:0xf2bd05a5
  4056d8:	lods   al,BYTE PTR ds:[esi]
  4056d9:	mov    WORD PTR cs:[ebx+0x70df1387],?
  4056e0:	outs   dx,BYTE PTR ds:[esi]
  4056e1:	sbb    dh,ch
  4056e3:	xor    DWORD PTR [ecx],ebp
  4056e5:	shl    edx,1
  4056e7:	(bad)  
  4056e8:	push   eax
  4056e9:	pushf  
  4056ea:	ret    
  4056eb:	mov    edi,0x7c90856b
  4056f0:	inc    edx
  4056f1:	scas   al,BYTE PTR es:[edi]
  4056f2:	mov    eax,ds:0x36eb8d3d
  4056f7:	cli    
  4056f8:	xchg   esp,eax
  4056f9:	enter  0xbb06,0x4f
  4056fd:	fst    DWORD PTR [eax+edi*2+0x76]
  405701:	adc    ah,BYTE PTR [ecx+edi*1+0x55]
  405705:	mov    bl,0x99
  405707:	dec    ebx
  405708:	add    BYTE PTR [eax],al
  40570a:	cmp    al,0xc0
  40570c:	test   al,0xa
  40570e:	aaa    
  40570f:	push   esp
  405710:	outs   dx,DWORD PTR ds:[esi]
  405711:	cli    
  405712:	out    dx,al
  405713:	imul   edx,DWORD PTR [ebx+ecx*8-0x51],0x1a
  405718:	xchg   esp,eax
  405719:	pop    ebp
  40571a:	sbb    BYTE PTR [ecx],0xb1
  40571d:	ins    BYTE PTR es:[edi],dx
  40571e:	cmp    eax,edi
  405720:	leave  
  405721:	aas    
  405722:	repnz daa 
  405724:	ret    
  405725:	push   cs
  405726:	stos   DWORD PTR es:[edi],eax
  405727:	into   
  405728:	dec    ebx
  405729:	adc    dh,ah
  40572b:	les    eax,FWORD PTR [edx+0x23]
  40572e:	xor    eax,0x7670199c
  405733:	mov    ds:0x12b7412c,eax
  405738:	out    dx,eax
  405739:	(bad)  
  40573a:	clc    
  40573b:	loopne 0x405712
  40573d:	in     eax,0x31
  40573f:	add    BYTE PTR ds:0x81f7ab5,al
  405745:	test   BYTE PTR [ebx+0x4d8a438c],dh
  40574b:	or     DWORD PTR [eax-0x45],0xc
  40574f:	sahf   
  405750:	sub    eax,0x16a5bfe8
  405755:	fnstcw WORD PTR [esi-0x70]
  405758:	xlat   BYTE PTR ds:[ebx]
  405759:	dec    esi
  40575a:	xor    DWORD PTR [edi-0x14],ebx
  40575d:	jge    0x405747
  40575f:	inc    ecx
  405760:	or     BYTE PTR ds:0x1c0261a3,ch
  405766:	pop    edx
  405767:	aam    0x8c
  405769:	add    BYTE PTR [ebp-0x5],al
  40576c:	jg     0x40579f
  40576e:	add    BYTE PTR [eax],al
  405770:	test   dh,dl
  405772:	push   esi
  405773:	(bad)  
  405774:	(bad)  
  405775:	in     al,dx
  405776:	ins    DWORD PTR es:[edi],dx
  405777:	push   ebx
  405778:	push   es
  405779:	sbb    BYTE PTR [ecx-0x6be8d63b],dh
  40577f:	hlt    
  405780:	pusha  
  405781:	cmp    al,bl
  405783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405784:	stos   DWORD PTR es:[edi],eax
  405785:	push   0x33e296cb
  40578a:	xchg   esi,eax
  40578b:	cld    
  40578c:	lods   al,BYTE PTR ds:[esi]
  40578d:	pop    edx
  40578e:	xchg   edi,eax
  40578f:	pop    es
  405790:	mov    edx,0x2f2749b
  405795:	frstor [ecx+ebx*8-0x37]
  405799:	sbb    eax,0x5f4e18b2
  40579e:	fwait
  40579f:	xor    edi,DWORD PTR [edi-0x60]
  4057a2:	mov    al,0x46
  4057a4:	sbb    al,0xe1
  4057a6:	enter  0xd3d,0x22
  4057aa:	push   cs
  4057ab:	(bad)  
  4057ac:	imul   edx,DWORD PTR [ebx+0x1f],0x3c9430bf
  4057b3:	pushf  
  4057b4:	or     edx,ebp
  4057b6:	sbb    al,0xb1
  4057b8:	adc    dl,BYTE PTR [esi]
  4057ba:	jmp    0x755a:0xe3568471
  4057c1:	xchg   edi,eax
  4057c2:	mov    eax,0xc0d8a67f
  4057c7:	test   bh,dl
  4057c9:	sbb    DWORD PTR [esi+edi*4-0x5f],ecx
  4057cd:	stos   DWORD PTR es:[edi],eax
  4057ce:	pop    ebp
  4057cf:	(bad)
  4057d2:	ds mov al,0x0
  4057d5:	add    BYTE PTR [ebx+0x2d],dh
  4057d8:	pop    ds
  4057d9:	fwait
  4057da:	pop    edx
  4057db:	in     al,dx
  4057dc:	addr16 pop edx
  4057de:	fsubr  QWORD PTR [edi+0x6eed7161]
  4057e4:	jp     0x40576a
  4057e6:	xor    al,BYTE PTR cs:[ebx-0x2c0f0081]
  4057ed:	pop    es
  4057ee:	pop    ebx
  4057ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057f0:	aad    0xfc
  4057f2:	inc    ebx
  4057f3:	gs neg cl
  4057f6:	jp     0x40581a
  4057f8:	out    0xf2,eax
  4057fa:	mov    eax,ds:0x1633afe3
  4057ff:	test   eax,0x69e71899
  405804:	add    DWORD PTR [ebx+0x42],esi
  405807:	mov    bl,0x37
  405809:	mov    dh,BYTE PTR [ecx-0x5e]
  40580c:	jbe    0x4057c0
  40580e:	rol    DWORD PTR [edi+0x5692bb4f],1
  405814:	push   cs
  405815:	rol    BYTE PTR [edi],1
  405817:	stos   BYTE PTR es:[edi],al
  405818:	int    0xc9
  40581a:	pushf  
  40581b:	mov    eax,0x424d968c
  405820:	dec    ebx
  405821:	ja     0x4057c9
  405823:	adc    ecx,DWORD PTR [edx]
  405825:	push   esp
  405826:	pop    ebx
  405827:	in     al,0xc8
  405829:	gs pop eax
  40582b:	cmc    
  40582c:	xchg   edx,ebp
  40582e:	cdq    
  40582f:	adc    BYTE PTR [edi+0x3],al
  405832:	mov    ebx,ebx
  405834:	add    eax,0xc52e9fd8
  405839:	rol    DWORD PTR [eax],0x0
  40583c:	inc    esi
  40583d:	test   BYTE PTR ds:[esi],cl
  405840:	in     al,0xcb
  405842:	inc    ebx
  405843:	inc    DWORD PTR [eax-0x63]
  405846:	add    bl,BYTE PTR [edx+eiz*1]
  405849:	push   0xffffffc1
  40584b:	sbb    eax,0x68807b51
  405850:	xchg   ebx,eax
  405851:	js     0x405871
  405853:	adc    DWORD PTR [eax+0x63],0x97459a5f
  40585a:	pushf  
  40585b:	sbb    DWORD PTR [esi-0x37],0xffffffdd
  40585f:	dec    esp
  405860:	sysenter 
  405862:	sbb    bh,BYTE PTR ds:0x1e5b24e4
  405868:	sbb    edx,edx
  40586a:	xchg   edi,eax
  40586b:	pop    ds
  40586c:	sbb    al,BYTE PTR [ebx]
  40586e:	fnstenv [eax-0x46ea0125]
  405874:	retf   0x56ed
  405877:	xchg   edx,eax
  405878:	frstor [eax]
  40587a:	xchg   esp,eax
  40587b:	mov    ebp,eax
  40587d:	dec    edi
  40587e:	aad    0x0
  405880:	jmp    0x405845
  405882:	mov    edx,DWORD PTR [ebx]
  405884:	ret    0xb9ec
  405887:	push   edx
  405888:	jmp    0x10d2419a
  40588d:	rcl    edi,cl
  40588f:	sar    BYTE PTR [eax+0x12],1
  405892:	repnz in al,dx
  405894:	adc    DWORD PTR ds:0x7aadc3,ebx
  40589a:	nop
  40589b:	outs   dx,BYTE PTR ds:[esi]
  40589c:	and    DWORD PTR [edi],0xffffffa1
  40589f:	das    
  4058a0:	add    BYTE PTR [eax],al
  4058a2:	xor    al,0x66
  4058a4:	xor    al,0xe8
  4058a6:	cmp    eax,0xd6a90641
  4058ab:	push   esi
  4058ac:	push   edx
  4058ad:	push   0xffffffdf
  4058af:	push   ecx
  4058b0:	sub    esi,DWORD PTR gs:[eax]
  4058b3:	fidiv  DWORD PTR [edi-0x1c]
  4058b6:	sbb    DWORD PTR [edi],ecx
  4058b8:	dec    ecx
  4058b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ba:	repnz out 0x19,eax
  4058bd:	data16 jmp 0x405880
  4058c0:	sub    esp,DWORD PTR [edi]
  4058c2:	or     al,0x7e
  4058c4:	mov    ebp,0x8ca2a5e0
  4058c9:	mov    eax,ds:0x62df93ce
  4058ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058cf:	pushf  
  4058d0:	out    dx,al
  4058d1:	and    esi,DWORD PTR [edx+0xe]
  4058d4:	loopne 0x405893
  4058d6:	pop    ebx
  4058d7:	fnop   
  4058d9:	cld    
  4058da:	xor    BYTE PTR [esi-0x16d6c07e],bh
  4058e0:	mov    dl,0x7e
  4058e2:	mov    fs,WORD PTR [edx+0x7d67b925]
  4058e8:	adc    al,0xf8
  4058ea:	mov    WORD PTR [edi+eax*2+0x7693a53b],ds
  4058f1:	jp     0x40596d
  4058f3:	sbb    al,0x6a
  4058f5:	mov    ch,0x53
  4058f7:	adc    ebx,DWORD PTR [ebx-0xc]
  4058fa:	aaa    
  4058fb:	xor    eax,0x46600937
  405900:	dec    edx
  405901:	cmp    BYTE PTR [ecx+0xae0cf3],cl
  405907:	add    dh,al
  405909:	cld    
  40590a:	repz sahf 
  40590c:	pop    es
  40590d:	shl    dl,cl
  40590f:	retf   
  405910:	inc    esp
  405911:	or     ah,dh
  405913:	cld    
  405914:	gs pop ebx
  405916:	add    al,BYTE PTR [eax]
  405918:	aaa    
  405919:	pop    esp
  40591a:	les    ebp,FWORD PTR [edx+0x28]
  40591d:	pop    edx
  40591e:	xchg   ah,dl
  405920:	dec    ecx
  405921:	pop    ecx
  405922:	dec    eax
  405923:	mov    esi,0xa80b5e6e
  405928:	jmp    0x40597f
  40592a:	int    0xc2
  40592c:	int3   
  40592d:	pop    edi
  40592e:	(bad)  
  40592f:	jl     0x4058b6
  405931:	pop    eax
  405932:	push   ecx
  405933:	push   ss
  405934:	mov    edx,0xef50f565
  405939:	pop    esi
  40593a:	mov    bl,0x3b
  40593c:	mov    al,0x58
  40593e:	jns    0x4058c5
  405940:	or     DWORD PTR [edi+0x6496ef37],0x6313f8fc
  40594a:	mov    edx,0x8050e493
  40594f:	sub    eax,0x473e522d
  405954:	xor    dh,BYTE PTR [edi]
  405956:	jmp    0x4058fa
  405958:	out    0x6f,eax
  40595a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40595b:	leave  
  40595c:	clc    
  40595d:	gs fs ja 0x40599a
  405961:	pop    ebp
  405962:	and    bl,BYTE PTR ds:0xaf1521e
  405968:	fwait
  405969:	push   ecx
  40596a:	scas   eax,DWORD PTR es:[edi]
  40596b:	popa   
  40596c:	add    BYTE PTR [eax],al
  40596e:	pushf  
  40596f:	sub    DWORD PTR [ebp-0x21],0x75
  405973:	test   BYTE PTR [ebx],ch
  405975:	mov    ch,0x2a
  405977:	xor    al,0xfa
  405979:	(bad)  
  40597a:	es jl  0x405978
  40597d:	cwde   
  40597e:	mov    edi,0x5152f96c
  405983:	xchg   esi,eax
  405984:	clc    
  405985:	adc    al,0x83
  405987:	ret    
  405988:	fstp   st(7)
  40598a:	outs   dx,BYTE PTR ds:[esi]
  40598b:	dec    eax
  40598c:	aam    0xa1
  40598e:	inc    edi
  40598f:	adc    esi,ebx
  405991:	pop    ebx
  405992:	test   eax,0xdb1dd6e9
  405997:	(bad)  
  405998:	pop    ds
  405999:	dec    edi
  40599a:	jno    0x4059f0
  40599c:	and    DWORD PTR [ecx-0x34ec7aed],edx
  4059a2:	lds    edi,FWORD PTR [ebp-0x5530f2ee]
  4059a8:	pop    es
  4059a9:	dec    eax
  4059aa:	fldcw  WORD PTR [edi]
  4059ac:	dec    BYTE PTR [ecx-0x3c0bc745]
  4059b2:	std    
  4059b3:	add    ebp,ebp
  4059b5:	add    eax,0x41ddd707
  4059ba:	inc    eax
  4059bb:	or     al,0xd7
  4059bd:	jg     0x4059e1
  4059bf:	fstp   st(4)
  4059c1:	mov    ebp,0xfbd42574
  4059c6:	fbstp  TBYTE PTR [edx]
  4059c8:	mov    ecx,0xb8b7c838
  4059cd:	jbe    0x405a39
  4059cf:	mov    al,ds:0xb4ba
  4059d4:	or     al,0x5a
  4059d6:	mov    ebx,0xc8f37f2
  4059db:	sub    eax,0x6b05c352
  4059e0:	mov    al,0x94
  4059e2:	cmpxchg DWORD PTR [esi],esp
  4059e5:	outs   dx,BYTE PTR ds:[esi]
  4059e6:	push   es
  4059e7:	out    dx,eax
  4059e8:	in     eax,dx
  4059e9:	jp     0x4059f6
  4059eb:	es cli 
  4059ed:	dec    DWORD PTR [ecx]
  4059ef:	fs sbb cl,ch
  4059f2:	add    BYTE PTR [ecx],cl
  4059f4:	(bad)  
  4059f5:	retf   0x823
  4059f8:	pop    ds
  4059f9:	addr16 adc al,0xd3
  4059fc:	dec    esp
  4059fd:	mov    al,ds:0x8a82d229
  405a02:	push   ds
  405a03:	sar    BYTE PTR [eax+0x16c146d4],0x3e
  405a0a:	jo     0x4059e0
  405a0c:	and    eax,0x6bcdf548
  405a11:	loop   0x4059d4
  405a13:	(bad)  
  405a14:	mov    eax,ds:0xfbe9b7c
  405a19:	xchg   esi,eax
  405a1a:	lods   al,BYTE PTR ds:[esi]
  405a1b:	pop    ecx
  405a1c:	ins    DWORD PTR es:[edi],dx
  405a1d:	mov    ecx,0x532358c1
  405a22:	neg    BYTE PTR [edx-0x27]
  405a25:	or     al,0xaf
  405a27:	pop    ebx
  405a28:	mul    DWORD PTR [edi]
  405a2a:	cwde   
  405a2b:	ds inc esp
  405a2d:	adc    DWORD PTR ds:0x29fb0a37,ebx
  405a33:	cmp    eax,0x347364c0
  405a38:	add    BYTE PTR [eax],al
  405a3a:	out    dx,al
  405a3b:	iret   
  405a3c:	inc    esp
  405a3d:	daa    
  405a3e:	mov    edx,0xec1e7988
  405a43:	mov    eax,ds:0x3c46144e
  405a48:	pop    ss
  405a49:	or     eax,0x1fd680
  405a4e:	mov    bl,0xe0
  405a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a51:	add    ebp,esi
  405a53:	dec    ecx
  405a54:	xchg   edx,eax
  405a55:	repz xor BYTE PTR [ebx+ecx*8-0x381850e],dl
  405a5d:	aad    0x8
  405a5f:	sbb    dh,BYTE PTR [ecx-0x7a0fbd34]
  405a65:	(bad)  
  405a66:	jl     0x405ad5
  405a68:	fistp  QWORD PTR [edi+0xe8c4ae]
  405a6e:	gs or  al,0x87
  405a71:	ins    BYTE PTR es:[edi],dx
  405a72:	fs inc edx
  405a74:	in     eax,dx
  405a75:	pop    ebx
  405a76:	jbe    0x4059f8
  405a78:	push   eax
  405a79:	add    dh,bh
  405a7b:	lds    edi,FWORD PTR [ecx]
  405a7d:	xor    eax,0x87dd9bc
  405a82:	lods   eax,DWORD PTR ds:[esi]
  405a83:	and    edx,DWORD PTR [edi+edi*1]
  405a86:	scas   eax,DWORD PTR es:[edi]
  405a87:	pop    ebp
  405a88:	stos   DWORD PTR es:[edi],eax
  405a89:	mov    si,0xc097
  405a8d:	push   ecx
  405a8e:	mov    ebx,0xbad4d5d0
  405a93:	adc    bh,BYTE PTR [ebx+eiz*8-0x45fcab58]
  405a9a:	mov    ecx,0x8d6896
  405a9f:	add    BYTE PTR [esi],ah
  405aa1:	mov    ds:0x6d2720ca,eax
  405aa6:	mov    eax,ds:0x1e271517
  405aab:	dec    esi
  405aac:	adc    al,0xe1
  405aae:	jae    0x405b29
  405ab0:	add    DWORD PTR [edx+0x3410fc62],ebp
  405ab6:	or     bl,cl
  405ab8:	adc    ch,BYTE PTR [esi]
  405aba:	mov    dh,0x92
  405abc:	push   ebx
  405abd:	call   0x7c99009d
  405ac2:	fwait
  405ac3:	cwde   
  405ac4:	pop    ecx
  405ac5:	xor    dh,cl
  405ac7:	scas   eax,DWORD PTR es:[edi]
  405ac8:	dec    ebx
  405ac9:	lock dec esi
  405acb:	neg    BYTE PTR [edx-0x4a]
  405ace:	and    eax,0x33855fc1
  405ad3:	inc    esp
  405ad4:	dec    esi
  405ad5:	cmp    ebx,DWORD PTR [ecx+0x73]
  405ad8:	dec    esp
  405ad9:	stc    
  405ada:	out    0x2a,al
  405adc:	sbb    eax,0xaa1d8dbf
  405ae1:	mov    edi,0x85ab5069
  405ae6:	add    BYTE PTR [edi+0x37],ah
  405ae9:	stos   BYTE PTR es:[edi],al
  405aea:	sbb    DWORD PTR [ecx+edx*1+0x3ed657a3],edi
  405af1:	into   
  405af2:	call   0x7ca9:0xd8ceb3c0
  405af9:	int3   
  405afa:	push   ds
  405afb:	adc    al,0x15
  405afd:	int    0x5c
  405aff:	jle    0x405b03
  405b01:	jbe    0x405aa3
  405b03:	cmp    DWORD PTR [eax],eax
  405b05:	add    BYTE PTR [edi],cl
  405b07:	ja     0x405aeb
  405b09:	push   edx
  405b0a:	clc    
  405b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b0c:	and    al,0xed
  405b0e:	mov    ecx,0xc68766a3
  405b13:	nop
  405b14:	stos   DWORD PTR es:[edi],eax
  405b15:	xchg   ecx,eax
  405b16:	dec    ebx
  405b17:	(bad)  
  405b18:	in     eax,dx
  405b19:	cli    
  405b1a:	xor    al,0xc1
  405b1c:	das    
  405b1d:	inc    ebp
  405b1e:	lea    edi,[edx+0x7c5a2f71]
  405b24:	(bad)  
  405b25:	sbb    dh,BYTE PTR [edi-0x5f8e6b85]
  405b2b:	jge    0x405b7f
  405b2d:	iret   
  405b2e:	loope  0x405bae
  405b30:	adc    BYTE PTR [ebp-0x4d1e8612],ah
  405b36:	arpl   WORD PTR [edx-0x61],si
  405b39:	(bad)  [eax+edi*2+0x5d]
  405b3d:	outs   dx,DWORD PTR gs:[si]
  405b40:	sbb    ecx,DWORD PTR ds:0x49e7c232
  405b46:	pop    edi
  405b47:	mov    ecx,0xaf2820a9
  405b4c:	arpl   WORD PTR [esi-0xbdb1817],bx
  405b52:	push   ss
  405b53:	ret    
  405b54:	in     al,dx
  405b55:	loope  0x405af2
  405b57:	les    ebp,FWORD PTR [esi+0x68b66488]
  405b5d:	ss mov ebp,0xaa5c2ab5
  405b63:	xor    al,0x65
  405b65:	icebp  
  405b66:	test   al,0x64
  405b68:	pop    esp
  405b69:	mov    bl,0x0
  405b6b:	add    BYTE PTR [ebp-0x1c8aa98f],al
  405b71:	leave  
  405b72:	dec    edi
  405b73:	aaa    
  405b74:	xor    DWORD PTR [ebx+0x1830fa42],ebx
  405b7a:	inc    ebx
  405b7b:	mov    esp,0x7e314cbd
  405b80:	sti    
  405b81:	cmc    
  405b82:	das    
  405b83:	inc    eax
  405b84:	(bad)  
  405b86:	sbb    al,BYTE PTR [esi+ecx*1]
  405b89:	cld    
  405b8a:	sbb    edx,eax
  405b8c:	mov    ah,0xe8
  405b8e:	pop    ss
  405b8f:	mov    BYTE PTR [edx+0x12],dl
  405b92:	sbb    DWORD PTR [esi+0x60],eax
  405b95:	inc    ebx
  405b96:	cld    
  405b97:	or     dh,BYTE PTR [esi-0x40]
  405b9a:	cmc    
  405b9b:	enter  0x954c,0xff
  405b9f:	mov    cs,edx
  405ba1:	ins    DWORD PTR es:[edi],dx
  405ba2:	test   BYTE PTR [eax+ebp*8+0x76],0xc1
  405ba7:	sbb    eax,DWORD PTR [edx+0x2059bfd4]
  405bad:	add    DWORD PTR [edx-0x4cc64161],esi
  405bb3:	fst    st(5)
  405bb5:	sub    ah,BYTE PTR [esi-0x605835ee]
  405bbb:	push   eax
  405bbc:	cwde   
  405bbd:	mov    esp,0x86569695
  405bc2:	mov    esp,ss
  405bc4:	std    
  405bc5:	dec    esi
  405bc6:	mov    edi,0xb68c3328
  405bcb:	push   0x11
  405bcd:	pop    ecx
  405bce:	mov    esp,0x6f0000ac
  405bd3:	mov    eax,ds:0xb2c6eeb5
  405bd8:	cwde   
  405bd9:	and    ebx,ebx
  405bdb:	das    
  405bdc:	cdq    
  405bdd:	arpl   WORD PTR [ecx+0x24],bp
  405be0:	add    DWORD PTR [edx-0x64951c66],ebx
  405be6:	push   eax
  405be7:	dec    edx
  405be8:	pop    esp
  405be9:	sub    al,0x22
  405beb:	push   0x11
  405bed:	and    eax,0x2f26bfd8
  405bf2:	mov    ds,WORD PTR ds:0x284c267f
  405bf8:	dec    eax
  405bf9:	sub    ecx,DWORD PTR [ebx]
  405bfb:	add    cl,ch
  405bfd:	sub    al,cl
  405bff:	daa    
  405c00:	cli    
  405c01:	sub    bh,ah
  405c03:	mov    dl,0xa3
  405c05:	sub    DWORD PTR ds:0x71329450,esp
  405c0b:	xchg   edi,eax
  405c0c:	test   eax,0x9e71ab33
  405c11:	and    ebp,edi
  405c13:	jmp    0x405bdb
  405c15:	and    BYTE PTR [edi],bh
  405c17:	inc    ebp
  405c18:	lock xor eax,0x2c752f78
  405c1e:	mov    dl,0xd9
  405c20:	inc    ecx
  405c21:	es hlt 
  405c23:	sbb    DWORD PTR [ebx],0x1f
  405c26:	lods   eax,DWORD PTR ss:[esi]
  405c28:	sub    al,0x78
  405c2a:	dec    esp
  405c2b:	mov    esi,0x680e7941
  405c30:	jbe    0x405cad
  405c32:	loopne 0x405c29
  405c34:	cs jp  0x405c37
  405c37:	add    BYTE PTR [edx+0x555f181c],bl
  405c3d:	es popf 
  405c3f:	push   esi
  405c40:	pop    ss
  405c41:	add    BYTE PTR [edx-0xca266a4],ch
  405c47:	push   ebp
  405c48:	shl    DWORD PTR [esp+eax*8-0x691007a],cl
  405c4f:	jg     0x405c8e
  405c51:	cdq    
  405c52:	into   
  405c53:	jne    0x405cc8
  405c55:	inc    edx
  405c56:	xchg   edi,eax
  405c57:	ins    BYTE PTR es:[edi],dx
  405c58:	test   eax,0x16009fed
  405c5d:	add    eax,0x4317246e
  405c62:	add    al,0x13
  405c64:	add    eax,0x44abb81
  405c69:	mov    edi,0xb8eb7dd0
  405c6e:	xor    al,0x30
  405c70:	retf   0x5df6
  405c73:	pop    es
  405c74:	fdivr  DWORD PTR [eax+eiz*8]
  405c77:	pop    esi
  405c78:	jmp    0xc4a9e6f7
  405c7d:	scas   eax,DWORD PTR es:[edi]
  405c7e:	pushf  
  405c7f:	in     al,dx
  405c80:	vpmaddwd ymm3,ymm2,ymm3
  405c84:	xchg   edi,eax
  405c85:	xor    al,0x48
  405c87:	adc    BYTE PTR [esi-0x724add8e],0xe6
  405c8e:	mov    BYTE PTR fs:[eax+ebp*1+0x6a9ebf0f],cl
  405c96:	scas   al,BYTE PTR es:[edi]
  405c97:	out    0x9f,al
  405c99:	lods   al,BYTE PTR ds:[esi]
  405c9a:	fcmovnbe st,st(1)
  405c9c:	add    BYTE PTR [eax],al
  405c9e:	xchg   edx,eax
  405c9f:	(bad)  
  405ca1:	push   esp
  405ca2:	xchg   ebx,eax
  405ca3:	and    DWORD PTR [edi+0x16636163],esp
  405ca9:	cmp    dl,BYTE PTR [eax-0x5b]
  405cac:	jae    0x405cbb
  405cae:	(bad)  
  405caf:	nop
  405cb0:	shl    DWORD PTR [eax-0x6847ad3a],1
  405cb6:	mov    ah,0x14
  405cb8:	add    eax,0x6f06b5ce
  405cbd:	stc    
  405cbe:	test   al,0x95
  405cc0:	jns    0x405d3e
  405cc2:	test   eax,0xbb4b1057
  405cc7:	sbb    DWORD PTR [ebp-0x3923d5ee],ebp
  405ccd:	and    eax,0x1880bff1
  405cd2:	lock jge 0x405cc0
  405cd5:	das    
  405cd6:	aaa    
  405cd7:	stc    
  405cd8:	adc    BYTE PTR [ebp+0x1],dl
  405cdb:	lock push edx
  405cdd:	aas    
  405cde:	idiv   ah
  405ce0:	cdq    
  405ce1:	sub    DWORD PTR [ebx-0x5],esi
  405ce4:	fild   DWORD PTR [edx+0x64]
  405ce7:	stc    
  405ce8:	adc    eax,0x57fa9dfd
  405ced:	xchg   edi,eax
  405cee:	ret    0xbec7
  405cf1:	jae    0x405c7a
  405cf3:	rol    BYTE PTR [eax],0x19
  405cf6:	pop    eax
  405cf7:	mov    BYTE PTR [edx-0x59],0x89
  405cfb:	mov    ebp,0xeaaecd84
  405d00:	enter  0xdb,0x0
  405d04:	sub    ebp,edx
  405d06:	or     dh,BYTE PTR [ecx+0xf4cec6c]
  405d0c:	xchg   ebp,eax
  405d0d:	jmp    0x405c9d
  405d0f:	gs mov dl,dl
  405d12:	mov    dl,0x22
  405d14:	(bad)  
  405d15:	shl    eax,1
  405d17:	inc    edi
  405d18:	jo     0x405d1d
  405d1a:	aaa    
  405d1b:	div    BYTE PTR [ecx]
  405d1d:	add    al,0x75
  405d1f:	pushf  
  405d20:	inc    esi
  405d21:	out    dx,eax
  405d22:	mov    bh,0x8a
  405d24:	ret    
  405d25:	sub    dh,dh
  405d27:	fbstp  TBYTE PTR [esi+ebx*1+0x160d5e3c]
  405d2e:	jp     0x405d64
  405d30:	rcr    BYTE PTR [ebx+0x2],cl
  405d33:	add    BYTE PTR [edi],dh
  405d35:	xchg   ebx,eax
  405d36:	pop    ecx
  405d37:	addr16 pop edx
  405d39:	mov    cl,0xa
  405d3b:	enter  0x69bc,0x4f
  405d3f:	scas   eax,DWORD PTR es:[edi]
  405d40:	rcr    esi,1
  405d42:	es xchg edi,eax
  405d44:	pusha  
  405d45:	pop    esi
  405d46:	mov    eax,0x2c3865f0
  405d4b:	pop    edi
  405d4c:	mov    edi,eax
  405d4e:	scas   eax,DWORD PTR es:[edi]
  405d4f:	cmp    dh,bl
  405d51:	xor    al,0xad
  405d53:	push   eax
  405d54:	dec    edi
  405d55:	push   ebp
  405d56:	sbb    eax,0x7ba000c
  405d5b:	push   edi
  405d5c:	xchg   edi,eax
  405d5d:	shl    BYTE PTR [esi+0x3233b803],1
  405d63:	mov    dl,0xb8
  405d65:	lods   al,BYTE PTR ds:[esi]
  405d66:	jp     0x405d96
  405d68:	add    BYTE PTR [eax],al
  405d6a:	pop    DWORD PTR [edi+0x20e0b988]
  405d70:	adc    BYTE PTR ds:0xfab7fe47,ah
  405d76:	add    ebp,eax
  405d78:	push   eax
  405d79:	pop    edi
  405d7a:	pop    es
  405d7b:	push   0x52
  405d7d:	hlt    
  405d7e:	test   eax,0x3f67aa40
  405d83:	jecxz  0x405dab
  405d85:	sbb    eax,0xc0c77c77
  405d8a:	fcom   DWORD PTR [esi-0xec0ea43]
  405d90:	sbb    al,0xca
  405d92:	nop
  405d93:	push   cs
  405d94:	jge    0x405dfd
  405d96:	cwde   
  405d97:	in     al,0xcc
  405d99:	repnz sub BYTE PTR [edi],bh
  405d9c:	xlat   BYTE PTR ds:[ebx]
  405d9d:	pop    edi
  405d9e:	shr    BYTE PTR [eax+0x67],0xfc
  405da2:	(bad)
  405da6:	prefetchw BYTE PTR [edx+0x15]
  405daa:	shl    cl,0x37
  405dad:	ret    0x9817
  405db0:	loopne 0x405dcf
  405db2:	js     0x405e2f
  405db4:	mov    ch,dl
  405db6:	mov    DWORD PTR ds:0x8ff8a00,esp
  405dbc:	loop   0x405d9a
  405dbe:	push   ecx
  405dbf:	lahf   
  405dc0:	call   0xff34:0x17843780
  405dc7:	ficom  DWORD PTR [esi-0x59]
  405dca:	adc    BYTE PTR [eax],bh
  405dcc:	add    DWORD PTR [eax+eax*1+0x0],ebp
  405dd0:	ins    DWORD PTR es:[edi],dx
  405dd1:	fs jecxz 0x405dc0
  405dd4:	sar    DWORD PTR [esi+eax*4-0x2f534af4],0xbc
  405ddc:	jb     0x405d62
  405dde:	mov    ch,0xa6
  405de0:	mov    edi,0x6a165af4
  405de5:	or     al,0x3e
  405de7:	xchg   ebx,eax
  405de8:	cwde   
  405de9:	inc    ebx
  405dea:	xchg   DWORD PTR [ebx],ebx
  405dec:	xor    ebx,ebp
  405dee:	loope  0x405e19
  405df0:	nop
  405df1:	mov    ecx,DWORD PTR [ecx+esi*2]
  405df4:	and    eax,0x4b5969a5
  405df9:	pop    esp
  405dfa:	mov    al,ds:0xc5c4c7b1
  405dff:	mov    bl,0x52
  405e01:	adc    al,0x2b
  405e03:	dec    ebx
  405e04:	mov    esi,0xedc64dfc
  405e09:	aam    0xf6
  405e0b:	shr    DWORD PTR es:[edx+edx*4],0x1c
  405e10:	je     0x405dad
  405e12:	jl     0x405dd0
  405e14:	enter  0x1974,0xdc
  405e18:	lahf   
  405e19:	test   BYTE PTR [edi+0x6c],cl
  405e1c:	sbb    ebp,DWORD PTR [ebx+0x3c86762a]
  405e22:	(bad)  
  405e23:	(bad)  
  405e24:	adc    ah,bl
  405e26:	mov    al,ds:0x17fba143
  405e2b:	jmp    0x405ea2
  405e2d:	adc    al,0x7d
  405e2f:	fnstcw WORD PTR [eax+0x4193b3]
  405e35:	add    BYTE PTR [esp+ecx*2-0xa],ch
  405e39:	and    bh,0xb
  405e3c:	cmp    al,0xa
  405e3e:	arpl   WORD PTR [ebx],sp
  405e40:	pop    ecx
  405e41:	sbb    dh,cl
  405e43:	mov    bl,0xb7
  405e45:	pusha  
  405e46:	pop    edx
  405e47:	imul   edx,edx,0x0
  405e4a:	fidiv  DWORD PTR [ecx]
  405e4c:	into   
  405e4d:	push   0xffffffc2
  405e4f:	outs   dx,BYTE PTR ds:[esi]
  405e50:	test   eax,0x64b200f
  405e55:	loope  0x405def
  405e57:	jbe    0x405eba
  405e59:	test   al,dh
  405e5b:	xlat   BYTE PTR ds:[ebx]
  405e5c:	jo     0x405e30
  405e5e:	mov    eax,0xaab7175c
  405e63:	sar    DWORD PTR [eax-0x209adda7],1
  405e69:	cmp    al,0x9f
  405e6b:	jbe    0x405e53
  405e6d:	test   DWORD PTR [edi+0x4a],eax
  405e70:	and    eax,0xe2e6e65
  405e76:	lea    esi,[ebx]
  405e78:	dec    ecx
  405e79:	imul   esp,DWORD PTR ds:0x6da20e2d,0x8
  405e80:	imul   eax,edi,0x29c7637f
  405e86:	pop    es
  405e87:	add    BYTE PTR [ecx-0x66e575b4],ah
  405e8d:	cmc    
  405e8e:	jb     0x405e37
  405e90:	(bad)  
  405e91:	nop
  405e92:	jo     0x405ed6
  405e94:	push   ecx
  405e95:	jle    0x405e5f
  405e97:	pushf  
  405e98:	sbb    eax,DWORD PTR ss:[eax]
  405e9b:	add    BYTE PTR [eax],ah
  405e9d:	add    BYTE PTR [esi],ah
  405e9f:	dec    ebp
  405ea0:	push   0x7a284135
  405ea5:	or     dh,ch
  405ea7:	(bad)  
  405ea8:	adc    bh,BYTE PTR [ebx]
  405eaa:	mov    DWORD PTR [ebx+0x1ab19f8f],esp
  405eb0:	test   DWORD PTR [ecx-0x2a],0x79a4f57f
  405eb7:	xchg   ecx,eax
  405eb8:	jge    0x405ed4
  405eba:	push   ds
  405ebb:	hlt    
  405ebc:	adc    eax,0x5d03f782
  405ec1:	fst    QWORD PTR [eax-0x1923c89a]
  405ec7:	ds scas eax,DWORD PTR es:[edi]
  405ec9:	xor    esi,DWORD PTR [edx+0x58]
  405ecc:	retf   0x3de0
  405ecf:	pusha  
  405ed0:	or     edx,DWORD PTR [ecx-0x66]
  405ed3:	pop    es
  405ed4:	mov    cx,WORD PTR [ecx-0x58]
  405ed8:	cmp    BYTE PTR [edx-0x6522306b],0x70
  405edf:	fbld   TBYTE PTR [ebx-0x414818e6]
  405ee5:	and    BYTE PTR [edx+0x17],bh
  405ee8:	sbb    cl,ah
  405eea:	fisubr WORD PTR [edi+0x35]
  405eed:	pop    esp
  405eee:	xchg   edx,eax
  405eef:	dec    eax
  405ef0:	lods   al,BYTE PTR ds:[esi]
  405ef1:	mov    ds:0xc5892f46,eax
  405ef6:	popf   
  405ef7:	and    BYTE PTR [edi],0x2e
  405efa:	inc    eax
  405efb:	out    0x2,eax
  405efd:	xchg   bh,dl
  405eff:	lahf   
  405f00:	add    BYTE PTR [eax],al
  405f02:	mov    bl,0x1d
  405f04:	add    edi,0x4e
  405f07:	or     ecx,esp
  405f09:	sub    BYTE PTR [si+0xf88],al
  405f0e:	(bad)
  405f11:	aaa    
  405f12:	cld    
  405f13:	mov    edi,0x99d950a5
  405f18:	push   DWORD PTR cs:[edi+0x29]
  405f1c:	stos   BYTE PTR es:[edi],al
  405f1d:	cwde   
  405f1e:	push   edx
  405f1f:	or     DWORD PTR [ebx-0x30967b78],ecx
  405f25:	out    dx,al
  405f26:	and    DWORD PTR [edi-0x80],ecx
  405f29:	inc    eax
  405f2a:	(bad)  
  405f2b:	out    dx,eax
  405f2c:	shl    DWORD PTR [esi],cl
  405f2e:	call   0x30d4:0x1b1fad6c
  405f35:	js     0x405fad
  405f37:	(bad)  
  405f38:	mov    eax,ds:0x369e90d7
  405f3d:	mov    al,0xed
  405f3f:	xor    al,0xd5
  405f41:	cmp    ecx,DWORD PTR [ecx-0x1960cae3]
  405f47:	add    ch,BYTE PTR [edi]
  405f49:	xor    al,0x41
  405f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f4c:	iret   
  405f4d:	test   al,0x1e
  405f4f:	xchg   DWORD PTR [edx-0x27],ecx
  405f52:	push   edi
  405f53:	shl    BYTE PTR [ecx-0x5fd50e83],1
  405f59:	ror    BYTE PTR [edi-0x5679c7a7],cl
  405f5f:	mov    dh,0xd0
  405f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f62:	mov    cl,0x88
  405f64:	js     0x405f99
  405f66:	add    BYTE PTR [eax],al
  405f68:	mov    fs,WORD PTR [ebx+0xe9a06a]
  405f6e:	sar    BYTE PTR [ebx],cl
  405f70:	inc    esi
  405f71:	push   ds
  405f72:	dec    edi
  405f73:	test   DWORD PTR [esi],edi
  405f75:	mov    ch,0xdf
  405f77:	rcr    dl,1
  405f79:	pop    ecx
  405f7a:	in     eax,0x7d
  405f7c:	jbe    0x405faa
  405f7e:	xor    eax,0xa4cf92da
  405f83:	inc    esp
  405f84:	push   esi
  405f85:	cwde   
  405f86:	in     eax,0x97
  405f88:	mov    cl,0x73
  405f8a:	dec    DWORD PTR [edx+0xe]
  405f8d:	adc    DWORD PTR [edi-0x71],edi
  405f90:	jmp    0xab225982
  405f95:	gs jb  0x40600e
  405f98:	inc    esi
  405f99:	retf   0xe950
  405f9c:	loop   0x405f79
  405f9e:	pop    es
  405f9f:	ins    DWORD PTR es:[edi],dx
  405fa0:	(bad)  
  405fa1:	mov    al,ds:0x27ecfe8f
  405fa7:	dec    esp
  405fa8:	fst    DWORD PTR [ecx]
  405faa:	cmp    dl,BYTE PTR [edi+0x42827436]
  405fb0:	xchg   ecx,eax
  405fb1:	xchg   edi,eax
  405fb2:	jmp    FWORD PTR [ebp-0x6f]
  405fb5:	inc    eax
  405fb6:	scas   eax,DWORD PTR es:[edi]
  405fb7:	jmp    0x94413aeb
  405fbc:	imul   ecx,edx,0xffffff96
  405fbf:	add    al,0xd6
  405fc1:	arpl   bx,si
  405fc3:	xor    al,0x1e
  405fc5:	cmp    eax,DWORD PTR [esp+edx*8]
  405fc8:	fwait
  405fc9:	loope  0x40602b
  405fcb:	into   
  405fcc:	add    BYTE PTR [eax],al
  405fce:	push   ss
  405fcf:	or     DWORD PTR [edi-0x15567ed2],0xffffffab
  405fd6:	cmp    eax,0xf84353b2
  405fdb:	dec    edx
  405fdc:	ss inc ecx
  405fde:	cmp    edi,edx
  405fe0:	xlat   BYTE PTR ds:[ebx]
  405fe1:	cdq    
  405fe2:	add    BYTE PTR [ebx],dl
  405fe4:	mov    ebp,0xeb22cb71
  405fe9:	fst    DWORD PTR [edi+0xa]
  405fec:	mov    cs,ebx
  405fee:	rcr    BYTE PTR [edx+0x60],cl
  405ff1:	jae    0x406041
  405ff3:	ret    0xee05
  405ff6:	or     DWORD PTR [edx+0x73353ebc],ebx
  405ffc:	fld    DWORD PTR [eax+esi*8-0x2f]
  406000:	ss aam 0x2c
  406003:	sub    edx,DWORD PTR [edx+0x4]
  406006:	and    eax,0x72849af2
  40600b:	or     bh,dh
  40600d:	sahf   
  40600e:	pop    ds
  40600f:	mov    edx,0x527bde10
  406014:	jne    0x406071
  406016:	and    al,0x7d
  406018:	int3   
  406019:	adc    ebx,DWORD PTR [edi+0x1df1a99e]
  40601f:	inc    ebp
  406020:	inc    edi
  406021:	imul   edi,DWORD PTR [ecx-0x1a],0xd6d24121
  406028:	jae    0x405fb3
  40602a:	cs xor eax,0x8efb9b11
  406030:	jmp    DWORD PTR [ebx]
  406032:	add    BYTE PTR [eax],al
  406034:	daa    
  406035:	ins    DWORD PTR es:[edi],dx
  406036:	call   0x3922:0xefffd100
  40603d:	pop    ebx
  40603e:	xchg   esp,eax
  40603f:	inc    edi
  406040:	jmp    0x40601b
  406042:	aaa    
  406043:	test   eax,0xcc5c6293
  406048:	jo     0x40603f
  40604a:	out    dx,al
  40604b:	push   es
  40604c:	cwde   
  40604d:	leave  
  40604e:	mov    BYTE PTR [ebx-0x76],ah
  406051:	in     al,dx
  406052:	lea    esi,es:[edx-0x50]
  406056:	inc    eax
  406057:	call   0x51b9b3d3
  40605c:	pop    edi
  40605d:	out    0x1e,eax
  40605f:	xor    al,0x3d
  406061:	dec    edx
  406062:	mov    cl,0xda
  406064:	jne    0x406034
  406066:	(bad)  
  406067:	mov    edi,0xe9c7b0ed
  40606c:	test   esp,ebp
  40606e:	lahf   
  40606f:	mov    WORD PTR [edi-0x109df03d],es
  406075:	repz addr16 pop es
  406078:	jp     0x406048
  40607a:	dec    edi
  40607b:	mov    esi,0xdb344ad2
  406080:	add    dh,ah
  406082:	xchg   edi,eax
  406083:	xor    eax,0x50fc5598
  406088:	inc    eax
  406089:	sbb    al,0xb8
  40608b:	cdq    
  40608c:	enter  0xdfbf,0xfc
  406090:	fisub  DWORD PTR [eax+esi*2]
  406093:	adc    ah,BYTE PTR [edx]
  406095:	cdq    
  406096:	pop    ss
  406097:	ja     0x406099
  406099:	add    bh,al
  40609b:	jns    0x4060c9
  40609d:	into   
  40609e:	psraw  mm0,QWORD PTR [edi-0x55]
  4060a2:	or     eax,0xa545e482
  4060a7:	mov    bh,0x80
  4060a9:	and    BYTE PTR ds:0xf5769098,bh
  4060af:	push   cs
  4060b0:	not    DWORD PTR [ebx]
  4060b2:	aaa    
  4060b3:	xchg   esp,eax
  4060b4:	popf   
  4060b5:	pop    ecx
  4060b6:	cli    
  4060b7:	cmp    edi,DWORD PTR [eax]
  4060b9:	ds iret 
  4060bb:	enter  0x684,0x16
  4060bf:	dec    ecx
  4060c0:	shl    DWORD PTR [eax+0x7b],cl
  4060c3:	movd   esi,mm1
  4060c6:	(bad)  
  4060c7:	into   
  4060c8:	fisubr DWORD PTR [eax+0x41139f00]
  4060ce:	pxor   mm0,mm5
  4060d1:	bound  ecx,QWORD PTR es:[ecx]
  4060d4:	sbb    ecx,DWORD PTR [ecx-0x1143677c]
  4060da:	mov    DWORD PTR [ebx],edx
  4060dc:	lock aad 0x18
  4060df:	ins    BYTE PTR es:[edi],dx
  4060e0:	gs mov cl,0x2d
  4060e3:	call   0x795d:0x11931df6
  4060ea:	mov    dh,0x59
  4060ec:	mov    edi,0x1b016069
  4060f1:	push   cs
  4060f2:	lds    eax,FWORD PTR [ebx]
  4060f4:	les    esp,FWORD PTR [ecx-0x39efb425]
  4060fa:	fstp   DWORD PTR cs:[esi+edi*8+0x0]
  4060ff:	add    BYTE PTR [edi+0x5a98f978],dh
  406105:	sahf   
  406106:	bound  esi,QWORD PTR [esi]
  406108:	sub    al,0xff
  40610a:	in     eax,dx
  40610b:	push   eax
  40610c:	loope  0x4060dc
  40610e:	daa    
  40610f:	push   ss
  406110:	nop
  406111:	ds scas eax,DWORD PTR es:[edi]
  406113:	jno    0x40618a
  406115:	cmp    BYTE PTR [edx],ah
  406117:	fimul  WORD PTR [ebx]
  406119:	jmp    0x64bf1ad4
  40611e:	push   es
  40611f:	and    DWORD PTR [edi],0xcae649dd
  406125:	stos   BYTE PTR es:[edi],al
  406126:	add    DWORD PTR [ecx-0x64],ecx
  406129:	adc    BYTE PTR [ebp+0x2e],0x31
  40612d:	xor    al,0xab
  40612f:	mov    ch,0x49
  406131:	in     al,dx
  406132:	and    ah,BYTE PTR [ecx]
  406134:	pop    esi
  406135:	(bad)  
  406137:	scas   al,BYTE PTR es:[edi]
  406138:	add    DWORD PTR [edx-0x47],esi
  40613b:	sub    al,dh
  40613d:	xchg   esi,eax
  40613e:	xor    al,0x53
  406140:	sahf   
  406141:	cmp    eax,0xdaf2ff74
  406146:	lea    ecx,[esi+edx*2-0x38]
  40614a:	push   cs
  40614b:	or     BYTE PTR [ecx],bh
  40614d:	arpl   ax,bp
  40614f:	add    esi,DWORD PTR [edi]
  406151:	xor    al,0xe8
  406153:	add    esi,DWORD PTR [edi]
  406155:	xor    al,0xe8
  406157:	add    esi,DWORD PTR [edi]
  406159:	xor    al,0xe8
  40615b:	add    esi,DWORD PTR [edi]
  40615d:	xor    al,0xe8
  40615f:	add    esi,DWORD PTR [edi]
  406161:	xor    al,0xe8
  406163:	add    eax,DWORD PTR [eax]
  406165:	add    BYTE PTR [edi],dh
  406167:	xor    al,0xe8
  406169:	add    esi,DWORD PTR [edi]
  40616b:	xor    al,0xe8
  40616d:	add    esi,DWORD PTR [edi]
  40616f:	xor    al,0xe9
  406171:	add    esi,DWORD PTR [edi]
  406173:	xor    al,0xe9
  406175:	add    esi,DWORD PTR [edi]
  406177:	xor    al,0xe9
  406179:	add    esi,DWORD PTR [edi]
  40617b:	xor    al,0xe9
  40617d:	add    esi,DWORD PTR [edi]
  40617f:	xor    al,0xea
  406181:	add    esi,DWORD PTR [edi]
  406183:	xor    al,0xea
  406185:	add    esi,DWORD PTR [edi]
  406187:	xor    al,0xea
  406189:	add    esi,DWORD PTR [edi]
  40618b:	xor    al,0xea
  40618d:	add    esi,DWORD PTR [edi]
  40618f:	xor    al,0xeb
  406191:	add    esi,DWORD PTR [edi]
  406193:	xor    al,0xeb
  406195:	add    esi,DWORD PTR [edi]
  406197:	xor    al,0xeb
  406199:	add    esi,DWORD PTR [edi]
  40619b:	xor    al,0xeb
  40619d:	add    esi,DWORD PTR [edi]
  40619f:	xor    al,0xec
  4061a1:	add    esi,DWORD PTR [edi]
  4061a3:	xor    al,0xe4
  4061a5:	add    esi,DWORD PTR [edi]
  4061a7:	xor    al,0x1
  4061a9:	in     eax,dx
  4061aa:	xor    al,0x34
  4061ac:	add    ebp,esp
  4061ae:	xor    al,0x34
  4061b0:	add    esp,ebp
  4061b2:	xor    al,0x34
  4061b4:	add    esp,esp
  4061b6:	xor    al,0x34
  4061b8:	add    esp,ebp
  4061ba:	xor    al,0x34
  4061bc:	add    esp,esp
  4061be:	xor    al,0x34
  4061c0:	add    ecx,ebp
  4061c2:	xor    al,0x34
  4061c4:	add    ecx,ebx
  4061c6:	in     eax,0x42
  4061c8:	add    ecx,esp
  4061ca:	add    BYTE PTR [eax],al
  4061cc:	das    
  4061cd:	sub    eax,DWORD PTR [edi]
  4061cf:	jecxz  0x40620a
  4061d1:	sub    DWORD PTR ds:0x32f33f5,eax
  4061d7:	out    dx,eax
  4061d8:	xor    eax,0x34e9012d
  4061dd:	xor    al,0x1
  4061df:	jmp    0xe9419618
  4061e4:	xor    al,0x34
  4061e6:	add    ecx,ebp
  4061e8:	xor    al,0x34
  4061ea:	add    eax,ebp
  4061ec:	xor    al,0x34
  4061ee:	add    eax,ebp
  4061f0:	xor    al,0x34
  4061f2:	add    ebx,ebp
  4061f4:	xor    al,0x34
  4061f6:	add    ebx,ebp
  4061f8:	xor    al,0x34
  4061fa:	add    edx,ebp
  4061fc:	xor    al,0x34
  4061fe:	add    edx,ebp
  406200:	xor    al,0x34
  406202:	add    ebp,ebp
  406204:	xor    al,0x34
  406206:	add    ebp,esp
  406208:	xor    al,0x34
  40620a:	add    esp,ebp
  40620c:	xor    al,0x34
  40620e:	add    esp,esp
  406210:	xor    al,0x34
  406212:	add    edi,ebp
  406214:	xor    al,0x34
  406216:	add    edi,esp
  406218:	xor    al,0x34
  40621a:	add    esi,ebp
  40621c:	xor    al,0x34
  40621e:	add    esi,esp
  406220:	xor    al,0x34
  406222:	add    DWORD PTR [eax],eax
  406224:	cmp    BYTE PTR es:[ecx],al
  406227:	add    BYTE PTR [esi],ah
  406229:	cmp    BYTE PTR [ecx],al
  40622b:	add    BYTE PTR [edi],dl
  40622d:	cmp    BYTE PTR [ecx],al
  40622f:	add    BYTE PTR [eax],al
  406231:	add    BYTE PTR [edi],dl
  406233:	cmp    BYTE PTR [ecx],al
  406235:	add    BYTE PTR [eax+edi*1],al
  406238:	add    DWORD PTR [eax],eax
  40623a:	add    al,0x38
  40623c:	add    DWORD PTR [eax],eax
  40623e:	adc    eax,0xd5000138
  406243:	aaa    
  406244:	add    DWORD PTR [eax],eax
  406246:	loop   0x40627f
  406248:	add    DWORD PTR [eax],eax
  40624a:	shl    BYTE PTR [edi],cl
  40624c:	add    DWORD PTR [eax],eax
  40624e:	shl    DWORD PTR [edi],cl
  406250:	add    DWORD PTR [eax],eax
  406252:	repz aaa 
  406254:	add    DWORD PTR [eax],eax
  406256:	fidiv  WORD PTR [edi]
  406258:	add    DWORD PTR [eax],eax
  40625a:	into   
  40625b:	aaa    
  40625c:	add    DWORD PTR [eax],eax
  40625e:	into   
  40625f:	aaa    
  406260:	add    DWORD PTR [eax],eax
  406262:	sahf   
  406263:	aaa    
  406264:	add    DWORD PTR [eax],eax
  406266:	sahf   
  406267:	aaa    
  406268:	add    DWORD PTR [eax],eax
  40626a:	mov    ?,WORD PTR [edi]
  40626c:	add    DWORD PTR [eax],eax
  40626e:	mov    ?,WORD PTR [edi]
  406270:	add    DWORD PTR [eax],eax
  406272:	sahf   
  406273:	aaa    
  406274:	add    DWORD PTR [eax],eax
  406276:	sahf   
  406277:	aaa    
  406278:	add    DWORD PTR [eax],eax
  40627a:	mov    ?,WORD PTR [edi]
  40627c:	add    DWORD PTR [eax],eax
  40627e:	mov    ?,WORD PTR [edi]
  406280:	add    DWORD PTR [eax],eax
  406282:	pop    esi
  406283:	aaa    
  406284:	add    DWORD PTR [eax],eax
  406286:	pop    esi
  406287:	aaa    
  406288:	add    DWORD PTR [eax],eax
  40628a:	dec    esi
  40628b:	aaa    
  40628c:	add    DWORD PTR [eax],eax
  40628e:	dec    esi
  40628f:	aaa    
  406290:	add    DWORD PTR [eax],eax
  406292:	pop    esi
  406293:	aaa    
  406294:	add    DWORD PTR [eax],eax
  406296:	add    BYTE PTR [eax],al
  406298:	pop    esp
  406299:	aaa    
  40629a:	add    DWORD PTR [eax],eax
  40629c:	dec    ebp
  40629d:	aaa    
  40629e:	add    DWORD PTR [eax],eax
  4062a0:	aaa    
  4062a1:	dec    edx
  4062a2:	add    al,BYTE PTR [eax]
  4062a4:	aaa    
  4062a5:	dec    ebp
  4062a6:	add    al,BYTE PTR [eax]
  4062a8:	aaa    
  4062a9:	popa   
  4062aa:	add    cl,BYTE PTR [eax]
  4062ac:	aaa    
  4062ad:	leave  
  4062ae:	add    al,0x8
  4062b0:	aaa    
  4062b1:	xchg   ecx,eax
  4062b2:	add    cl,BYTE PTR [eax]
  4062b4:	aaa    
  4062b5:	cmp    DWORD PTR ds:0x2813708,eax
  4062bb:	or     BYTE PTR [edi],dh
  4062bd:	jmp    0xb1776ac6
  4062c2:	add    cl,BYTE PTR [eax]
  4062c4:	aaa    
  4062c5:	pop    ecx
  4062c6:	add    cl,BYTE PTR [eax]
  4062c8:	aaa    
  4062c9:	push   ecx
  4062ca:	add    cl,BYTE PTR [eax]
  4062cc:	aaa    
  4062cd:	stc    
  4062ce:	add    al,0x8
  4062d0:	aaa    
  4062d1:	rol    DWORD PTR [edx],0x8
  4062d4:	aaa    
  4062d5:	sub    DWORD PTR ds:0x5113708,eax
  4062db:	or     BYTE PTR [edi],dh
  4062dd:	mov    ecx,0x1370802
  4062e2:	add    eax,0x2693708
  4062e7:	or     BYTE PTR [edi],dh
  4062e9:	dec    edi
  4062ea:	add    cl,BYTE PTR [eax]
  4062ec:	aaa    
  4062ed:	iret   
  4062ee:	add    DWORD PTR [eax],ecx
  4062f0:	aaa    
  4062f1:	syscall 
  4062f3:	or     BYTE PTR [edi],dh
  4062f5:	pop    DWORD PTR [edx]
  4062f7:	or     BYTE PTR [edi],dh
  4062f9:	outs   dx,DWORD PTR ds:[esi]
  4062fa:	add    cl,BYTE PTR [eax]
  4062fc:	add    BYTE PTR [eax],al
  4062fe:	aaa    
  4062ff:	out    dx,eax
  406300:	add    DWORD PTR [eax],ecx
  406302:	aaa    
  406303:	das    
  406304:	add    eax,0x2af3708
  406309:	or     BYTE PTR [edi],dh
  40630b:	jg     0x40630f
  40630d:	or     BYTE PTR [edi],dh
  40630f:	inc    DWORD PTR [ecx]
  406311:	or     BYTE PTR [edi],dh
  406313:	aas    
  406314:	add    eax,0x2bf3708
  406319:	or     BYTE PTR [edi],dh
  40631b:	xor    al,0x1a
  40631d:	add    al,0x2f
  40631f:	xor    al,0x9a
  406321:	add    ebp,DWORD PTR [edi]
  406323:	xor    al,0xda
  406325:	add    edi,DWORD PTR [edi]
  406327:	xor    al,0x5a
  406329:	add    edi,DWORD PTR [edi]
  40632b:	xor    al,0xf2
  40632d:	add    ebp,DWORD PTR [edi]
  40632f:	xor    al,0x72
  406331:	add    ebp,DWORD PTR [edi]
  406333:	xor    al,0xa2
  406335:	add    edi,DWORD PTR [edi]
  406337:	xor    al,0x22
  406339:	add    edi,DWORD PTR [edi]
  40633b:	xor    al,0xd2
  40633d:	add    ebp,DWORD PTR [edi]
  40633f:	xor    al,0x52
  406341:	add    ebp,DWORD PTR [edi]
  406343:	xor    al,0x82
  406345:	add    edi,DWORD PTR [edi]
  406347:	xor    al,0x2
  406349:	add    edi,DWORD PTR [edi]
  40634b:	xor    al,0xe2
  40634d:	add    ebp,DWORD PTR [edi]
  40634f:	xor    al,0x62
  406351:	add    ebp,DWORD PTR [edi]
  406353:	xor    al,0x92
  406355:	add    edi,DWORD PTR [edi]
  406357:	xor    al,0x12
  406359:	add    edi,DWORD PTR [edi]
  40635b:	xor    al,0x22
  40635d:	add    al,0x2f
  40635f:	xor    al,0xa2
  406361:	add    al,0x0
  406363:	add    BYTE PTR [edi],ch
  406365:	xor    al,0x52
  406367:	add    al,0x3f
  406369:	xor    al,0xd2
  40636b:	add    al,0x3f
  40636d:	xor    al,0xee
  40636f:	add    ebp,DWORD PTR [edi]
  406371:	xor    al,0x66
  406373:	add    al,0x2f
  406375:	xor    al,0x2e
  406377:	add    al,0x3f
  406379:	xor    al,0xa6
  40637b:	add    al,0x3f
  40637d:	xor    al,0xce
  40637f:	add    ebp,DWORD PTR [edi]
  406381:	xor    al,0x46
  406383:	add    al,0x2f
  406385:	xor    al,0xe
  406387:	add    al,0x3f
  406389:	xor    al,0x86
  40638b:	add    al,0x3f
  40638d:	xor    al,0xde
  40638f:	add    ebp,DWORD PTR [edi]
  406391:	xor    al,0x56
  406393:	add    al,0x2f
  406395:	xor    al,0x1
  406397:	pop    ds
  406398:	cmp    ebp,DWORD PTR [ecx+eax*1]
  40639b:	xchg   edi,eax
  40639c:	xor    ebp,DWORD PTR [ecx+eax*1]
  40639f:	pop    ds
  4063a0:	cmp    ebp,DWORD PTR [ecx+eax*1]
  4063a3:	xchg   edi,eax
  4063a4:	xor    ebp,DWORD PTR [ecx+eax*1]
  4063a7:	fbstp  TBYTE PTR [esp+ebp*1]
  4063aa:	add    DWORD PTR [edi+0x33],edx
  4063ad:	sub    al,0x1
  4063af:	div    DWORD PTR [esp+ebp*1]
  4063b2:	add    DWORD PTR [edi+0x33],ebp
  4063b5:	sub    al,0x1
  4063b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b8:	xor    al,0x2c
  4063ba:	add    DWORD PTR [edi],ebx
  4063bc:	xor    ebp,DWORD PTR [ecx+eax*1]
  4063bf:	xlat   BYTE PTR ds:[ebx]
  4063c0:	xor    al,0x2c
  4063c2:	add    DWORD PTR [edi+0x33],ecx
  4063c5:	sub    al,0x1
  4063c7:	xchg   DWORD PTR [eax],eax
  4063c9:	add    BYTE PTR [esp+ebp*1],dh
  4063cc:	add    edi,edi
  4063ce:	xor    al,0x2c
  4063d0:	add    edi,esp
  4063d2:	xor    al,0x2c
  4063d4:	add    DWORD PTR [edi+0x33],ebx
  4063d7:	sub    al,0x1
  4063d9:	xchg   edi,eax
  4063da:	xor    al,0x2c
  4063dc:	add    DWORD PTR [edi],ecx
  4063de:	xor    ebp,DWORD PTR [ecx+eax*1]
  4063e1:	daa    
  4063e2:	cmp    ebp,DWORD PTR [ecx+eax*1]
  4063e5:	lahf   
  4063e6:	xor    al,0x2c
  4063e8:	add    DWORD PTR [edi+0x3b],edx
  4063eb:	sub    al,0x1
  4063ed:	iret   
  4063ee:	xor    al,0x2c
  4063f0:	add    eax,ebp
  4063f2:	xor    al,0x2c
  4063f4:	add    DWORD PTR [eax+0x34],ebp
  4063f7:	sub    al,0x1
  4063f9:	sub    BYTE PTR [ebx],bh
  4063fb:	sub    al,0x1
  4063fd:	test   al,0x34
  4063ff:	sub    al,0x1
  406401:	enter  0x2c34,0x1
  406405:	dec    eax
  406406:	xor    al,0x2c
  406408:	add    DWORD PTR [eax],ecx
  40640a:	cmp    ebp,DWORD PTR [ecx+eax*1]
  40640d:	mov    BYTE PTR [esp+ebp*1],dh
  406410:	add    DWORD PTR [eax],eax
  406412:	jg     0x406448
  406414:	or     DWORD PTR [eax],eax
  406416:	push   DWORD PTR [ecx+ecx*1]
  406419:	add    BYTE PTR [edi],ch
  40641b:	xor    BYTE PTR [ecx],cl
  40641d:	add    BYTE PTR [edi+0x1f000934],ch
  406423:	xor    BYTE PTR [ecx],cl
  406425:	add    BYTE PTR [edi+0xf000934],bl
  40642b:	xor    al,0x9
  40642d:	add    BYTE PTR [eax],al
  40642f:	add    BYTE PTR [edi+0x27000933],cl
  406435:	xor    al,0x9
  406437:	add    BYTE PTR [edi-0x28fff6cd],ah
  40643d:	xor    ecx,DWORD PTR [ecx]
  40643f:	add    BYTE PTR [edi+0x33],dl
  406442:	or     DWORD PTR [eax],eax
  406444:	out    0x33,eax
  406446:	or     DWORD PTR [eax],eax
  406448:	xor    ecx,DWORD PTR [bx+di]
  40644b:	add    BYTE PTR [edi+0x37000933],dh
  406451:	xor    ecx,DWORD PTR [ecx]
  406453:	add    bh,dl
  406455:	xor    ecx,DWORD PTR [ecx]
  406457:	add    BYTE PTR [edi+0x33],dl
  40645a:	or     DWORD PTR [eax],eax
  40645c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40645d:	xor    ecx,DWORD PTR [ecx]
  40645f:	add    BYTE PTR [edi],ah
  406461:	xor    ecx,DWORD PTR [ecx]
  406463:	add    BYTE PTR [edi],dl
  406465:	xor    BYTE PTR [ecx],cl
  406467:	add    BYTE PTR [edi+0x7000930],dl
  40646d:	xor    BYTE PTR [ecx],cl
  40646f:	add    BYTE PTR [edi-0x6cfff6d0],al
  406475:	xor    ecx,DWORD PTR [ecx]
  406477:	add    BYTE PTR [ebx],dl
  406479:	xor    BYTE PTR [ecx],cl
  40647b:	add    BYTE PTR [ebx+0x30],ah
  40647e:	or     DWORD PTR [eax],eax
  406480:	shl    DWORD PTR [eax],cl
  406482:	or     DWORD PTR [eax],eax
  406484:	jae    0x4064b9
  406486:	or     DWORD PTR [eax],eax
  406488:	repz das 
  40648a:	or     DWORD PTR [eax],eax
  40648c:	aaa    
  40648d:	sub    BYTE PTR ds:0x5b03708,al
  406493:	or     BYTE PTR [eax],al
  406495:	add    BYTE PTR [edi],dh
  406497:	js     0x40649b
  406499:	or     BYTE PTR [edi],dh
  40649b:	add    BYTE PTR ds:0x5383708,al
  4064a1:	or     BYTE PTR [edi],dh
  4064a3:	rol    BYTE PTR ds:0x5383708,0x8
  4064aa:	aaa    
  4064ab:	rol    BYTE PTR ds:0x2783708,0x8
  4064b2:	aaa    
  4064b3:	add    BYTE PTR ds:0x2603708,al
  4064b9:	or     BYTE PTR [edi],dh
  4064bb:	enter  0x804,0x37
  4064bf:	nop
  4064c0:	add    cl,BYTE PTR [eax]
  4064c2:	aaa    
  4064c3:	cmp    BYTE PTR ds:0x2803708,al
  4064c9:	or     BYTE PTR [edi],dh
  4064cb:	call   0xb0776cd4
  4064d0:	add    cl,BYTE PTR [eax]
  4064d2:	aaa    
  4064d3:	pop    eax
  4064d4:	add    cl,BYTE PTR [eax]
  4064d6:	aaa    
  4064d7:	push   eax
  4064d8:	add    cl,BYTE PTR [eax]
  4064da:	aaa    
  4064db:	clc    
  4064dc:	add    al,0x8
  4064de:	aaa    
  4064df:	rol    BYTE PTR [edx],0x8
  4064e2:	aaa    
  4064e3:	sub    BYTE PTR ds:0x5103708,al
  4064e9:	or     BYTE PTR [edi],dh
  4064eb:	mov    eax,0x370802
  4064f0:	add    eax,0x2683708
  4064f5:	or     BYTE PTR [edi],dh
  4064f7:	jp     0x4064fb
  4064f9:	or     DWORD PTR [eax],eax
  4064fb:	add    BYTE PTR [edi],dh
  4064fd:	jp     0x406504
  4064ff:	or     DWORD PTR [edi],esi
  406501:	cli    
  406502:	add    DWORD PTR [ecx],ecx
  406504:	aaa    
  406505:	cli    
  406506:	add    al,0x9
  406508:	aaa    
  406509:	xor    al,0x3b
  40650b:	add    al,0x2e
  40650d:	xor    al,0x3b
  40650f:	add    eax,0x3bb343e
  406514:	ds xor al,0xbb
  406517:	add    al,0x2e
  406519:	xor    al,0xbb
  40651b:	add    ebp,DWORD PTR [esi]
  40651d:	xor    al,0xbb
  40651f:	add    al,0x3e
  406521:	xor    al,0x3b
  406523:	add    edi,DWORD PTR [esi]
  406525:	xor    al,0x3b
  406527:	add    al,0x2e
  406529:	xor    al,0xdb
  40652b:	add    ebp,DWORD PTR [esi]
  40652d:	xor    al,0xdb
  40652f:	add    al,0x3e
  406531:	xor    al,0x5b
  406533:	add    edi,DWORD PTR [esi]
  406535:	xor    al,0x5b
  406537:	add    al,0x2e
  406539:	xor    al,0xf3
  40653b:	add    ebp,DWORD PTR [esi]
  40653d:	xor    al,0xf3
  40653f:	add    al,0x3e
  406541:	xor    al,0x63
  406543:	add    edi,DWORD PTR [esi]
  406545:	xor    al,0x63
  406547:	add    al,0x2e
  406549:	xor    al,0xb3
  40654b:	add    ebp,DWORD PTR [esi]
  40654d:	xor    al,0xb3
  40654f:	add    al,0x3e
  406551:	xor    al,0x23
  406553:	add    edi,DWORD PTR [esi]
  406555:	xor    al,0x23
  406557:	add    al,0x2e
  406559:	xor    al,0xd3
  40655b:	add    ebp,DWORD PTR [esi]
  40655d:	xor    al,0xd3
  40655f:	add    al,0x0
  406561:	add    BYTE PTR [esi],bh
  406563:	xor    al,0x43
  406565:	add    edi,DWORD PTR [esi]
  406567:	xor    al,0x43
  406569:	add    al,0x2e
  40656b:	xor    al,0x53
  40656d:	add    al,0x2e
  40656f:	xor    al,0x53
  406571:	add    edi,DWORD PTR [esi]
  406573:	xor    al,0xc3
  406575:	add    al,0x3e
  406577:	xor    al,0xc3
  406579:	add    ebp,DWORD PTR [esi]
  40657b:	xor    al,0xe3
  40657d:	add    ebp,DWORD PTR [esi]
  40657f:	xor    al,0xe3
  406581:	add    bh,BYTE PTR [esi]
  406583:	xor    al,0x1
  406585:	push   edx
  406586:	xor    ebp,DWORD PTR [ebx]
  406588:	add    DWORD PTR [edx+0x34],edx
  40658b:	sub    eax,DWORD PTR [ecx]
  40658d:	inc    edx
  40658e:	xor    ebp,DWORD PTR [ebx]
  406590:	add    DWORD PTR [edx+0x34],eax
  406593:	sub    eax,DWORD PTR [ecx]
  406595:	mov    dl,0x33
  406597:	sub    eax,DWORD PTR [ecx]
  406599:	mov    dl,0x34
  40659b:	sub    eax,DWORD PTR [ecx]
  40659d:	ret    0x2b34
  4065a0:	add    edx,eax
  4065a2:	xor    eax,0x3332012b
  4065a7:	sub    eax,DWORD PTR [ecx]
  4065a9:	xor    dh,BYTE PTR [ebx+ebp*1]
  4065ac:	add    edx,esp
  4065ae:	xor    al,0x2b
  4065b0:	add    edx,esp
  4065b2:	xor    eax,0x3352012b
  4065b7:	sub    eax,DWORD PTR [ecx]
  4065b9:	push   edx
  4065ba:	xor    al,0x2b
  4065bc:	add    esi,ebp
  4065be:	xor    al,0x2b
  4065c0:	add    esi,esp
  4065c2:	xor    eax,0x6e012b
  4065c7:	add    BYTE PTR [ebx],dh
  4065c9:	sub    eax,DWORD PTR [ecx]
  4065cb:	data16 xor al,0x2b
  4065ce:	add    DWORD PTR [esi-0x59fed4cc],ebp
  4065d4:	xor    eax,0x332e012b
  4065d9:	sub    eax,DWORD PTR [ecx]
  4065db:	es xor al,0x2b
  4065de:	add    esi,ecx
  4065e0:	xor    al,0x2b
  4065e2:	add    esi,eax
  4065e4:	xor    eax,0x334e012b
  4065e9:	sub    eax,DWORD PTR [ecx]
  4065eb:	inc    esi
  4065ec:	xor    al,0x2b
  4065ee:	add    DWORD PTR [esi+0x33],ecx
  4065f1:	sub    eax,DWORD PTR [ecx]
  4065f3:	inc    esi
  4065f4:	xor    al,0x2b
  4065f6:	add    esi,ecx
  4065f8:	xor    al,0x2b
  4065fa:	add    esi,eax
  4065fc:	xor    eax,0x7900012b
  406601:	xor    BYTE PTR [eax],cl
  406603:	add    BYTE PTR [ecx+0x31],ch
  406606:	or     BYTE PTR [eax],al
  406608:	jmp    0xe9406e3d
  40660d:	xor    DWORD PTR [eax],ecx
  40660f:	add    BYTE PTR [ecx],bh
  406611:	xor    BYTE PTR [eax],cl
  406613:	add    BYTE PTR [ecx],ch
  406615:	xor    DWORD PTR [eax],ecx
  406617:	add    BYTE PTR [ecx-0x56fff7d0],ch
  40661d:	xor    DWORD PTR [eax],ecx
  40661f:	add    BYTE PTR [ecx-0x76fff7d0],bl
  406625:	xor    DWORD PTR [eax],ecx
  406627:	add    BYTE PTR [ecx],cl
  406629:	xor    DWORD PTR [eax],ecx
  40662b:	add    BYTE PTR [eax],al
  40662d:	add    BYTE PTR [ecx],cl
  40662f:	xor    cl,BYTE PTR [eax]
  406631:	add    BYTE PTR [ecx+0x30],bl
  406634:	or     BYTE PTR [eax],al
  406636:	or     DWORD PTR [edi],esi
  406638:	or     BYTE PTR [eax],al
  40663a:	mov    DWORD PTR [edi],esi
  40663c:	or     BYTE PTR [eax],al
  40663e:	mov    DWORD PTR [esi],esi
  406640:	or     BYTE PTR [eax],al
  406642:	and    DWORD PTR [eax],edi
  406644:	or     BYTE PTR [eax],al
  406646:	and    DWORD PTR [edi],esi
  406648:	or     BYTE PTR [eax],al
  40664a:	xchg   ecx,eax
  40664b:	aaa    
  40664c:	or     BYTE PTR [eax],al
  40664e:	popa   
  40664f:	or     BYTE PTR ss:[eax],al
  406652:	shl    DWORD PTR [edi],0x8
  406655:	add    BYTE PTR [ecx+0x11000836],ah
  40665b:	aaa    
  40665c:	or     BYTE PTR [eax],al
  40665e:	inc    ecx
  40665f:	or     BYTE PTR ss:[eax],al
  406662:	add    DWORD PTR [eax],edi
  406664:	or     BYTE PTR [eax],al
  406666:	add    DWORD PTR [edi],esi
  406668:	or     BYTE PTR [eax],al
  40666a:	jno    0x4066a3
  40666c:	or     BYTE PTR [eax],al
  40666e:	add    DWORD PTR [esi],esi
  406670:	or     BYTE PTR [eax],al
  406672:	popa   
  406673:	cmp    BYTE PTR [eax],cl
  406675:	add    BYTE PTR [ecx],al
  406677:	cmp    DWORD PTR [eax],ecx
  406679:	add    BYTE PTR [edi],dh
  40667b:	jp     0x406682
  40667d:	or     DWORD PTR [edi],esi
  40667f:	xchg   edx,eax
  406680:	add    al,0x9
  406682:	aaa    
  406683:	pop    edx
  406684:	add    cl,BYTE PTR [ecx]
  406686:	aaa    
  406687:	jb     0x40668e
  406689:	or     DWORD PTR [edi],esi
  40668b:	jmp    0x904:0x2370904
  406692:	add    BYTE PTR [eax],al
  406694:	aaa    
  406695:	cli    
  406696:	add    al,0x9
  406698:	aaa    
  406699:	adc    al,BYTE PTR [ecx+ecx*1]
  40669c:	aaa    
  40669d:	mov    al,BYTE PTR ds:0x4a23709
  4066a3:	or     DWORD PTR [edi],esi
  4066a5:	jp     0x4066a9
  4066a7:	or     DWORD PTR [edi],esi
  4066a9:	xchg   edx,eax
  4066aa:	add    eax,0x50a3709
  4066af:	or     DWORD PTR [edi],esi
  4066b1:	and    al,BYTE PTR [ecx+ecx*1]
  4066b4:	aaa    
  4066b5:	pop    edx
  4066b6:	add    cl,BYTE PTR [ecx]
  4066b8:	aaa    
  4066b9:	jb     0x4066c0
  4066bb:	or     DWORD PTR [edi],esi
  4066bd:	jmp    0x904:0x2370904
  4066c4:	aaa    
  4066c5:	pop    ebp
  4066c6:	add    al,BYTE PTR [edi]
  4066c8:	aaa    
  4066c9:	popf   
  4066ca:	add    al,BYTE PTR [edi]
  4066cc:	aaa    
  4066cd:	cmp    eax,0x7d370705
  4066d2:	add    al,BYTE PTR [edi]
  4066d4:	aaa    
  4066d5:	dec    ebp
  4066d6:	add    al,BYTE PTR [edi]
  4066d8:	aaa    
  4066d9:	lea    eax,[edx]
  4066db:	pop    es
  4066dc:	aaa    
  4066dd:	ins    DWORD PTR es:[edi],dx
  4066de:	add    al,BYTE PTR [edi]
  4066e0:	aaa    
  4066e1:	lods   eax,DWORD PTR ds:[esi]
  4066e2:	add    al,BYTE PTR [edi]
  4066e4:	aaa    
  4066e5:	inc    ebp
  4066e6:	add    al,BYTE PTR [edi]
  4066e8:	aaa    
  4066e9:	test   DWORD PTR [edx],eax
  4066eb:	pop    es
  4066ec:	aaa    
  4066ed:	jne    0x4066f1
  4066ef:	pop    es
  4066f0:	aaa    
  4066f1:	mov    ch,0x2
  4066f3:	pop    es
  4066f4:	aaa    
  4066f5:	xor    al,0x0
  4066f7:	add    al,0x0
  4066f9:	add    BYTE PTR [eax],bh
  4066fb:	xor    al,0x40
  4066fd:	add    al,0x30
  4066ff:	xor    al,0x10
  406701:	add    al,0x38
  406703:	xor    al,0x50
  406705:	add    al,0x30
  406707:	xor    al,0xec
  406709:	add    edi,DWORD PTR [eax]
  40670b:	xor    al,0x24
  40670d:	add    al,0x30
  40670f:	xor    al,0xc
  406711:	add    al,0x38
  406713:	xor    al,0x44
  406715:	add    al,0x30
  406717:	xor    al,0xfc
  406719:	add    edi,DWORD PTR [eax]
  40671b:	xor    al,0x34
  40671d:	add    al,0x30
  40671f:	xor    al,0xdc
  406721:	add    edi,DWORD PTR [eax]
  406723:	xor    al,0x14
  406725:	add    al,0x30
  406727:	xor    al,0xeb
  406729:	add    edi,DWORD PTR [edi]
  40672b:	xor    al,0x6b
  40672d:	add    edi,DWORD PTR [edi]
  40672f:	xor    al,0x2b
  406731:	add    al,0x2f
  406733:	xor    al,0xab
  406735:	add    ebp,DWORD PTR [edi]
  406737:	xor    al,0xb
  406739:	add    al,0x3f
  40673b:	xor    al,0x8b
  40673d:	add    edi,DWORD PTR [edi]
  40673f:	xor    al,0xcb
  406741:	add    ebp,DWORD PTR [edi]
  406743:	xor    al,0x4b
  406745:	add    ebp,DWORD PTR [edi]
  406747:	xor    al,0xe8
  406749:	add    edi,DWORD PTR [edx]
  40674b:	xor    al,0xd8
  40674d:	add    esi,DWORD PTR [edx]
  40674f:	xor    al,0xe0
  406751:	add    edi,DWORD PTR [edx]
  406753:	xor    al,0xd0
  406755:	add    esi,DWORD PTR [edx]
  406757:	xor    al,0xec
  406759:	add    edi,DWORD PTR [edx]
  40675b:	xor    al,0xf4
  40675d:	add    eax,DWORD PTR [eax]
  40675f:	add    BYTE PTR [edx],dh
  406761:	xor    al,0xe4
  406763:	add    edi,DWORD PTR [edx]
  406765:	xor    al,0xec
  406767:	add    esi,DWORD PTR [edx]
  406769:	xor    al,0xea
  40676b:	add    edi,DWORD PTR [edx]
  40676d:	xor    al,0xda
  40676f:	add    esi,DWORD PTR [edx]
  406771:	xor    al,0x1
  406773:	jecxz  0x4067a9
  406775:	aaa    
  406776:	add    ebx,edx
  406778:	xor    al,0x37
  40677a:	add    edi,ebp
  40677c:	xor    al,0x37
  40677e:	add    edi,esi
  406780:	xor    al,0x37
  406782:	add    edi,esp
  406784:	xor    al,0x37
  406786:	add    edi,ebp
  406788:	xor    al,0x37
  40678a:	add    eax,ebp
  40678c:	xor    al,0x37
  40678e:	add    eax,ebx
  406790:	xor    al,0x37
  406792:	add    eax,esp
  406794:	xor    al,0x37
  406796:	add    eax,edx
  406798:	xor    al,0x37
  40679a:	add    esp,ebp
  40679c:	xor    al,0x37
  40679e:	add    esp,esi
  4067a0:	xor    al,0x37
  4067a2:	add    esp,esp
  4067a4:	xor    al,0x37
  4067a6:	add    esp,ebp
  4067a8:	xor    al,0x37
  4067aa:	add    edx,ebp
  4067ac:	xor    al,0x37
  4067ae:	add    edx,ebx
  4067b0:	xor    al,0x37
  4067b2:	add    edx,esp
  4067b4:	xor    al,0x37
  4067b6:	add    edx,edx
  4067b8:	xor    al,0x37
  4067ba:	add    esi,ebp
  4067bc:	xor    al,0x37
  4067be:	add    esi,esi
  4067c0:	xor    al,0x37
  4067c2:	add    ecx,ebp
  4067c4:	add    BYTE PTR [eax],al
  4067c6:	xor    eax,0x18e50236
  4067cb:	cmp    BYTE PTR [edi+ebp*8],al
  4067ce:	adc    dh,BYTE PTR [edi]
  4067d0:	pop    es
  4067d1:	out    0xb,al
  4067d3:	cmp    al,BYTE PTR [esi]
  4067d5:	loope  0x4067d3
  4067d7:	cmp    BYTE PTR [ecx],cl
  4067d9:	loope  0x4067d7
  4067db:	cmp    BYTE PTR [ecx],cl
  4067dd:	lock in eax,dx
  4067df:	cmp    ecx,DWORD PTR [eax]
  4067e1:	lock in eax,dx
  4067e3:	cmp    ecx,DWORD PTR [eax]
  4067e5:	jecxz  0x4067c5
  4067e7:	cmp    cl,BYTE PTR [ebx]
  4067e9:	jecxz  0x4067c9
  4067eb:	cmp    cl,BYTE PTR [ebx]
  4067ed:	add    ah,al
  4067ef:	dec    edx
  4067f0:	or     BYTE PTR [edx],cl
  4067f2:	les    ecx,FWORD PTR [edx+0x8]
  4067f5:	or     dl,ch
  4067f7:	dec    ebx
  4067f8:	or     ecx,DWORD PTR [ebx]
  4067fa:	aad    0x4b
  4067fc:	or     ecx,DWORD PTR [ebx]
  4067fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067ff:	dec    ebx
  406800:	or     ecx,DWORD PTR [ebx]
  406802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406803:	dec    ebx
  406804:	or     ecx,DWORD PTR [ebx]
  406806:	call   0xa48:0x7a0c0a48
  40680d:	or     al,0x8a
  40680f:	dec    eax
  406810:	or     cl,BYTE PTR [edx+ebx*4]
  406813:	dec    eax
  406814:	or     cl,BYTE PTR [edx+ebx*4]
  406817:	dec    eax
  406818:	or     cl,BYTE PTR [edx+ebx*2]
  40681b:	dec    eax
  40681c:	or     cl,BYTE PTR [edx+ebp*2]
  40681f:	dec    eax
  406820:	or     cl,BYTE PTR [edx+ebx*2]
  406823:	dec    eax
  406824:	or     cl,BYTE PTR [ebx+ebx*2]
  406827:	dec    ecx
  406828:	or     eax,0x7b00000d
  40682d:	dec    ecx
  40682e:	or     eax,0xd494b0d
  406833:	or     eax,0xd0d495b
  406838:	pop    ebx
  406839:	dec    ecx
  40683a:	or     eax,0xd495b0d
  40683f:	or     eax,0xd0d472b
  406844:	sbb    eax,DWORD PTR [edi+0xd]
  406847:	or     eax,0xe0c4a18
  40684c:	clc    
  40684d:	dec    ecx
  40684e:	or     al,0xe
  406850:	or     BYTE PTR [edx+0xc],cl
  406853:	push   cs
  406854:	sbb    BYTE PTR [edx+0xc],cl
  406857:	push   cs
  406858:	sbb    BYTE PTR [edx+0xc],cl
  40685b:	push   cs
  40685c:	fmul   DWORD PTR [ecx+0xc]
  40685f:	push   cs
  406860:	call   0xd84e74ae
  406865:	dec    ecx
  406866:	or     al,0xe
  406868:	aaa    
  406869:	push   edi
  40686a:	hlt    
  40686b:	or     eax,0xdf46f29
  406870:	inc    ecx
  406871:	inc    edi
  406872:	hlt    
  406873:	or     eax,0xdf45f39
  406878:	xor    DWORD PTR [edi-0xc],edx
  40687b:	or     eax,0xdf46f29
  406880:	inc    ecx
  406881:	inc    edi
  406882:	adc    BYTE PTR [esi],cl
  406884:	cmp    DWORD PTR [edi+0x10],ebx
  406887:	push   cs
  406888:	xor    DWORD PTR [esi+0x13],edx
  40688b:	movaps xmm5,XMMWORD PTR [esi+0x13]
  40688f:	sldt   WORD PTR [eax]
  406892:	inc    eax
  406893:	inc    esi
  406894:	adc    ecx,DWORD PTR [edi]
  406896:	cmp    BYTE PTR [esi+0x13],bl
  406899:	wrmsr  
  40689b:	push   esi
  40689c:	adc    ecx,DWORD PTR [edi]
  40689e:	sub    BYTE PTR [esi+0x13],ch
  4068a1:	cmovo  eax,DWORD PTR [esi+0x13]
  4068a5:	(bad)  
  4068a8:	adc    ecx,DWORD PTR [edi]
  4068aa:	xor    BYTE PTR [esi+0x13],dl
  4068ad:	movaps xmm5,XMMWORD PTR [esi+0x13]
  4068b1:	cmovo  eax,DWORD PTR [esi+0x13]
  4068b5:	(bad)  
  4068b8:	adc    ecx,DWORD PTR [edi]
  4068ba:	xor    BYTE PTR [esi+0x13],dl
  4068bd:	movaps xmm5,XMMWORD PTR [esi+0x13]
  4068c1:	cmovo  eax,DWORD PTR [esi+0x13]
  4068c5:	(bad)  
  4068c8:	adc    ecx,DWORD PTR [edi]
  4068ca:	xor    BYTE PTR [ebp+0x2],bl
  4068cd:	adc    BYTE PTR [esi+0x4b],al
  4068d0:	adc    al,0x13
  4068d2:	and    al,0x71
  4068d4:	push   ss
  4068d5:	adc    al,0x23
  4068d7:	push   0x6f2a1519
  4068dc:	sbb    BYTE PTR [esi],dl
  4068de:	and    DWORD PTR [edi+0x18],esp
  4068e1:	push   ss
  4068e2:	dec    ecx
  4068e3:	xor    al,0xff
  4068e5:	sbb    al,BYTE PTR [eax+0x27]
  4068e8:	neg    DWORD PTR [edx]
  4068ea:	dec    eax
  4068eb:	daa    
  4068ec:	lock sbb edi,DWORD PTR [edi]
  4068ef:	sub    al,0xf0
  4068f1:	sbb    ebp,DWORD PTR [edi]
  4068f3:	sub    al,0xe0
  4068f5:	sbb    eax,DWORD PTR [eax]
  4068f7:	add    BYTE PTR [edi],ch
  4068f9:	sub    al,0xe0
  4068fb:	sbb    ebx,DWORD PTR [edi]
  4068fd:	sub    al,0xd1
  4068ff:	sbb    al,0x1e
  406901:	sub    eax,0x2d4e1cd1
  406906:	add    DWORD PTR ds:0x1d012d4e,ebx
  40690c:	ds sub eax,0x2a3d1df2
  406912:	repnz sbb eax,0x1de22a2d
  406918:	sub    eax,0x1d1de22a
  40691d:	sub    dl,dl
  40691f:	sbb    eax,0x1dd22a1d
  406924:	dec    ebp
  406925:	sub    al,BYTE PTR [edx]
  406927:	push   ds
  406928:	dec    ebp
  406929:	sub    al,BYTE PTR [edx]
  40692b:	push   ds
  40692c:	cmp    eax,0x3c1ef32a
  406931:	sub    esi,ebx
  406933:	push   ds
  406934:	sub    al,0x2b
  406936:	jecxz  0x406956
  406938:	sub    al,0x2b
  40693a:	jecxz  0x40695a
  40693c:	sbb    al,0x2b
  40693e:	rcr    DWORD PTR [esi],cl
  406940:	sbb    al,0x2b
  406942:	rcr    DWORD PTR [esi],cl
  406944:	dec    esp
  406945:	sub    DWORD PTR [ebx],eax
  406947:	pop    ds
  406948:	dec    esp
  406949:	sub    DWORD PTR [ebx],eax
  40694b:	pop    ds
  40694c:	cmp    al,0x29
  40694e:	hlt    
  40694f:	pop    ds
  406950:	cmp    esi,DWORD PTR [eax]
  406952:	in     al,dx
  406953:	pop    ds
  406954:	xor    esi,DWORD PTR [eax]
  406956:	in     al,0x1f
  406958:	sub    esi,DWORD PTR [eax]
  40695a:	fcomp  QWORD PTR [edi]
  40695c:	add    BYTE PTR [eax],al
  40695e:	and    esi,DWORD PTR [eax]
  406960:	add    ebp,edx
  406962:	sbb    BYTE PTR [eax],dh
  406964:	sbb    eax,0x1d3050cd
  406969:	add    eax,0xfd1d3017
  40696e:	inc    eax
  40696f:	xor    BYTE PTR ds:0x1d3038f5,bl
  406975:	in     eax,dx
  406976:	xor    BYTE PTR [eax],dh
  406978:	sbb    eax,0x1d3028e5
  40697d:	frstor [eax]
  40697f:	xor    BYTE PTR ds:0x1d3018d5,bl
  406985:	int    0x50
  406987:	xor    BYTE PTR ds:0x1d305705,bl
  40698d:	std    
  40698e:	inc    eax
  40698f:	xor    BYTE PTR ds:0x1c2f39f4,bl
  406995:	in     al,dx
  406996:	xor    DWORD PTR [edi],ebp
  406998:	sbb    al,0xe4
  40699a:	sub    DWORD PTR [edi],ebp
  40699c:	sbb    al,0xdc
  40699e:	and    DWORD PTR [edi],ebp
  4069a0:	sbb    al,0xd4
  4069a2:	sbb    DWORD PTR [edi],ebp
  4069a4:	sbb    al,0xcc
  4069a6:	push   ecx
  4069a7:	das    
  4069a8:	sbb    al,0x4
  4069aa:	dec    eax
  4069ab:	das    
  4069ac:	sbb    al,0xfc
  4069ae:	inc    ecx
  4069af:	das    
  4069b0:	sbb    al,0xf4
  4069b2:	cmp    DWORD PTR [edi],ebp
  4069b4:	sbb    al,0xec
  4069b6:	xor    DWORD PTR [edi],ebp
  4069b8:	sbb    al,0xe4
  4069ba:	sub    DWORD PTR [edi],ebp
  4069bc:	sbb    al,0xdc
  4069be:	and    DWORD PTR [edi],ebp
  4069c0:	sbb    al,0xd4
  4069c2:	add    BYTE PTR [eax],al
  4069c4:	sbb    DWORD PTR [edi],ebp
  4069c6:	sbb    al,0xcc
  4069c8:	push   ecx
  4069c9:	das    
  4069ca:	sbb    al,0x4
  4069cc:	dec    eax
  4069cd:	das    
  4069ce:	sbb    al,0xfc
  4069d0:	inc    ecx
  4069d1:	das    
  4069d2:	sbb    al,0xe9
  4069d4:	xor    eax,0x39e50232
  4069d9:	ss push es
  4069db:	add    BYTE PTR [esi],al
  4069dd:	cmp    DWORD PTR [eax],ecx
  4069df:	or     DWORD PTR [edi+edi*1],eax
  4069e2:	or     cl,BYTE PTR [ebx]
  4069e4:	adc    bh,BYTE PTR ds:0x3e130c0d
  4069ea:	or     al,0xd
  4069ec:	loopne 0x406a10
  4069ee:	femms  
  4069f0:	shl    DWORD PTR [ebx],1
  4069f2:	push   cs
  4069f3:	pmaxub mm4,QWORD PTR [eax]
  4069f6:	adc    DWORD PTR [eax],edx
  4069f8:	into   
  4069f9:	and    BYTE PTR [ecx],dl
  4069fb:	adc    bh,ch
  4069fd:	and    DWORD PTR [eax],edx
  4069ff:	adc    edi,ebx
  406a01:	and    DWORD PTR [eax],edx
  406a03:	adc    esp,ebx
  406a05:	adc    edx,DWORD PTR es:[edx]
  406a08:	mov    WORD PTR [esi],fs
  406a0a:	adc    edx,DWORD PTR [edx]
  406a0c:	lods   eax,DWORD PTR ds:[esi]
  406a0d:	daa    
  406a0e:	adc    dl,BYTE PTR [ebx]
  406a10:	popf   
  406a11:	daa    
  406a12:	adc    dl,BYTE PTR [ebx]
  406a14:	call   0x1524:0x8a141524
  406a1b:	adc    al,0x6a
  406a1d:	and    al,0x15
  406a1f:	adc    al,0x6a
  406a21:	and    al,0x15
  406a23:	adc    al,0x5b
  406a25:	and    eax,0x1514
  406a2a:	mov    esp,DWORD PTR ds:0x256b1514
  406a30:	adc    al,0x15
  406a32:	imul   esp,DWORD PTR ds:0x2a581514,0x17
  406a39:	push   ss
  406a3a:	dec    eax
  406a3b:	sub    dl,BYTE PTR [edi]
  406a3d:	push   ss
  406a3e:	push   0x6816172a
  406a43:	sub    dl,BYTE PTR [edi]
  406a45:	push   ss
  406a46:	pop    ecx
  406a47:	sub    edx,DWORD PTR [esi]
  406a49:	pop    ss
  406a4a:	or     DWORD PTR ds:0x2d291716,ebp
  406a50:	push   ss
  406a51:	pop    ss
  406a52:	sub    DWORD PTR ds:0x45371716,ebp
  406a58:	sbb    bl,BYTE PTR [eax]
  406a5a:	das    
  406a5b:	inc    ebp
  406a5c:	sbb    bl,BYTE PTR [eax]
  406a5e:	das    
  406a5f:	push   ebp
  406a60:	sbb    bl,BYTE PTR [eax]
  406a62:	pop    ds
  406a63:	push   ebp
  406a64:	sbb    bl,BYTE PTR [eax]
  406a66:	pop    ds
  406a67:	sbb    bl,BYTE PTR gs:[eax]
  406a6a:	dec    edi
  406a6b:	sbb    bl,BYTE PTR gs:[eax]
  406a6e:	dec    edi
  406a6f:	xor    eax,0x353f181d
  406a74:	sbb    eax,0x1b443f18
  406a79:	sbb    DWORD PTR [esi],ebp
  406a7b:	inc    esp
  406a7c:	sbb    ebx,DWORD PTR [ecx]
  406a7e:	cs push esp
  406a80:	sbb    ebx,DWORD PTR [ecx]
  406a82:	push   ds
  406a83:	push   esp
  406a84:	sbb    ebx,DWORD PTR [ecx]
  406a86:	push   ds
  406a87:	sbb    ebx,DWORD PTR fs:[ecx]
  406a8a:	dec    esi
  406a8b:	sbb    ebx,DWORD PTR fs:[ecx]
  406a8e:	add    BYTE PTR [eax],al
  406a90:	dec    esi
  406a91:	xor    al,0x1c
  406a93:	sbb    DWORD PTR [esi],edi
  406a95:	xor    al,0x1c
  406a97:	sbb    DWORD PTR [esi],edi
  406a99:	inc    edi
  406a9a:	sbb    BYTE PTR [edx],bl
  406a9c:	sub    eax,0x2d1a1847
  406aa1:	push   edi
  406aa2:	sbb    BYTE PTR [edx],bl
  406aa4:	sbb    eax,0x1d1a1857
  406aa9:	sbb    BYTE PTR [bp+si],bl
  406aac:	dec    ebp
  406aad:	sbb    BYTE PTR [bp+si],bl
  406ab0:	dec    ebp
  406ab1:	aaa    
  406ab2:	sbb    ebx,DWORD PTR [edx]
  406ab4:	cmp    eax,0x3d1a1b37
  406ab9:	inc    esi
  406aba:	sbb    ebx,DWORD PTR [ebx]
  406abc:	sub    al,0x46
  406abe:	sbb    ebx,DWORD PTR [ebx]
  406ac0:	sub    al,0x56
  406ac2:	sbb    ebx,DWORD PTR [ebx]
  406ac4:	sbb    al,0x56
  406ac6:	sbb    ebx,DWORD PTR [ebx]
  406ac8:	sbb    al,0x66
  406aca:	sbb    ebx,DWORD PTR [ebx]
  406acc:	dec    esp
  406acd:	sbb    bx,WORD PTR [ebx]
  406ad0:	dec    esp
  406ad1:	xor    al,0x3
  406ad3:	sbb    edi,DWORD PTR [edi+ebp*1]
  406ad6:	add    ebx,DWORD PTR [ebx]
  406ad8:	cmp    al,0x28
  406ada:	call   0xe974a1e2
  406adf:	add    esi,DWORD PTR [edi]
  406ae1:	xor    al,0xea
  406ae3:	add    esi,DWORD PTR [edi]
  406ae5:	xor    al,0xeb
  406ae7:	add    esi,DWORD PTR [edi]
  406ae9:	xor    al,0xec
  406aeb:	add    esi,DWORD PTR [edi]
  406aed:	xor    al,0xe5
  406aef:	add    esi,DWORD PTR [edi]
  406af1:	xor    al,0xee
  406af3:	add    eax,DWORD PTR [eax]
  406af5:	add    BYTE PTR [edi],dh
  406af7:	xor    al,0xe7
  406af9:	add    esi,DWORD PTR [edi]
  406afb:	xor    al,0xe0
  406afd:	add    esi,DWORD PTR [edi]
  406aff:	xor    al,0xe2
  406b01:	add    esi,DWORD PTR [edi]
  406b03:	xor    al,0xf4
  406b05:	add    esi,DWORD PTR [edi]
  406b07:	xor    al,0xee
  406b09:	add    esi,DWORD PTR [edi]
  406b0b:	xor    al,0xd8
  406b0d:	add    esi,DWORD PTR [edi]
  406b0f:	xor    al,0xd4
  406b11:	add    esi,DWORD PTR [edi]
  406b13:	xor    al,0x0
  406b15:	add    al,0x37
  406b17:	xor    al,0xfc
  406b19:	add    esi,DWORD PTR [edi]
  406b1b:	xor    al,0x8
  406b1d:	add    al,0x37
  406b1f:	xor    al,0x0
  406b21:	add    al,0x37
  406b23:	xor    al,0xf8
  406b25:	add    esi,DWORD PTR [edi]
  406b27:	xor    al,0x0
  406b29:	add    al,0x37
  406b2b:	xor    al,0x28
  406b2d:	add    al,0x37
  406b2f:	xor    al,0x18
  406b31:	add    al,0x37
  406b33:	xor    al,0x8
  406b35:	add    al,0x37
  406b37:	xor    al,0x18
  406b39:	add    al,0x37
  406b3b:	xor    al,0x68
  406b3d:	add    esi,DWORD PTR [edi]
  406b3f:	xor    al,0x48
  406b41:	add    esi,DWORD PTR [edi]
  406b43:	xor    al,0xa8
  406b45:	add    esi,DWORD PTR [edi]
  406b47:	xor    al,0x88
  406b49:	add    esi,DWORD PTR [edi]
  406b4b:	xor    al,0x1
  406b4d:	jmp    0xe9419f86
  406b52:	xor    al,0x34
  406b54:	add    ecx,ebp
  406b56:	xor    al,0x34
  406b58:	add    eax,ebp
  406b5a:	add    BYTE PTR [eax],al
  406b5c:	xor    al,0x34
  406b5e:	add    ebx,ebp
  406b60:	xor    al,0x34
  406b62:	add    edx,ebp
  406b64:	xor    al,0x34
  406b66:	add    ebp,ebp
  406b68:	xor    al,0x34
  406b6a:	add    edi,esp
  406b6c:	xor    al,0x34
  406b6e:	add    ecx,esp
  406b70:	xor    al,0x34
  406b72:	add    ebp,ebx
  406b74:	xor    al,0x34
  406b76:	add    ecx,edi
  406b78:	xor    al,0x34
  406b7a:	add    DWORD PTR [ecx],eax
  406b7c:	xor    esi,DWORD PTR [ecx+eax*1]
  406b7f:	leave  
  406b80:	xor    al,0x34
  406b82:	add    ecx,ebx
  406b84:	xor    al,0x34
  406b86:	add    DWORD PTR [ecx-0x76fecbcc],ebp
  406b8c:	xor    al,0x34
  406b8e:	add    DWORD PTR [ecx+0x34],ebp
  406b91:	xor    al,0x1
  406b93:	sub    DWORD PTR [esp+esi*1],esi
  406b96:	add    ecx,ebp
  406b98:	xor    eax,0x34690134
  406b9d:	xor    al,0x1
  406b9f:	jmp    0xe9419fda
  406ba4:	aaa    
  406ba5:	xor    al,0x1
  406ba7:	jmp    0xe9419fe4
  406bac:	xor    dh,BYTE PTR [ecx+eax*1]
  406baf:	jmp    0xe9419ff0
  406bb4:	cmp    BYTE PTR [ecx+eax*1],dh
  406bb7:	jmp    0xe941a000
  406bbc:	cmp    al,0x34
  406bbe:	add    ecx,ebp
  406bc0:	add    BYTE PTR [eax],al
  406bc2:	adc    al,0x34
  406bc4:	add    ecx,ebp
  406bc6:	add    al,0x34
  406bc8:	add    DWORD PTR [eax],eax
  406bca:	dec    esi
  406bcb:	jne    0x406bcb
  406bcd:	dec    DWORD PTR [esi+0x55]
  406bd0:	(bad)  
  406bd1:	dec    DWORD PTR [ebp-0x72ffc1b4]
  406bd7:	dec    esp
  406bd8:	add    BYTE PTR ds:[ebp-0x62ffc1b4],bl
  406bdf:	dec    esp
  406be0:	add    BYTE PTR ds:[ebp-0x72ffc1b4],cl
  406be7:	dec    esp
  406be8:	add    BYTE PTR ds:[ebp+0x4c],bl
  406bec:	add    BYTE PTR ds:[ebp+0x4c],bl
  406bf0:	add    BYTE PTR ds:[ebp-0x72ffc1b4],cl
  406bf7:	dec    esp
  406bf8:	ds add ch,cl
  406bfb:	xor    al,0x5
  406bfd:	add    bl,dl
  406bff:	xor    al,0x7
  406c01:	add    cl,ah
  406c03:	xor    al,0x9
  406c05:	add    bh,dl
  406c07:	xor    al,0xb
  406c09:	add    ch,al
  406c0b:	xor    al,0xc
  406c0d:	add    cl,cl
  406c0f:	xor    al,0x10
  406c11:	add    BYTE PTR [ebp-0x7affe9cc],cl
  406c17:	xor    al,0x1e
  406c19:	add    BYTE PTR ds:0x3d002a30,ch
  406c1f:	xor    BYTE PTR [edx],bh
  406c21:	add    BYTE PTR [ebp+0x30],bl
  406c24:	push   edx
  406c25:	add    BYTE PTR [eax],al
  406c27:	add    ch,bh
  406c29:	das    
  406c2a:	jb     0x406c2c
  406c2c:	or     eax,0xcd00a235
  406c31:	xor    al,0xe2
  406c33:	add    BYTE PTR [ebp+esi*1+0x1],bl
  406c37:	add    BYTE PTR [esi+0x34],bl
  406c3a:	add    DWORD PTR [eax],eax
  406c3c:	pop    esi
  406c3d:	xor    al,0x11
  406c3f:	add    BYTE PTR [esi+0x34],bl
  406c42:	adc    DWORD PTR [eax],eax
  406c44:	aaa    
  406c45:	dec    ebx
  406c46:	add    dl,BYTE PTR [eax]
  406c48:	aaa    
  406c49:	dec    ebx
  406c4a:	add    dl,BYTE PTR [eax]
  406c4c:	aaa    
  406c4d:	ins    BYTE PTR es:[edi],dx
  406c4e:	add    dl,BYTE PTR [ecx]
  406c50:	aaa    
  406c51:	ins    BYTE PTR es:[edi],dx
  406c52:	add    dl,BYTE PTR [ecx]
  406c54:	aaa    
  406c55:	imul   eax,DWORD PTR [edx],0x12
  406c58:	aaa    
  406c59:	imul   eax,DWORD PTR [edx],0x12
  406c5c:	aaa    
  406c5d:	dec    edx
  406c5e:	add    dl,BYTE PTR [ebx]
  406c60:	aaa    
  406c61:	dec    edx
  406c62:	add    dl,BYTE PTR [ebx]
  406c64:	aaa    
  406c65:	dec    ecx
  406c66:	add    dl,BYTE PTR [edi+esi*1]
  406c69:	inc    ecx
  406c6a:	add    dl,BYTE PTR [edi+esi*1]
  406c6d:	push   0x60371502
  406c72:	add    dl,BYTE PTR ds:0x49026d37
  406c78:	aaa    
  406c79:	sbb    al,BYTE PTR [edx]
  406c7b:	add    BYTE PTR [edi],dh
  406c7d:	pop    esp
  406c7e:	add    al,BYTE PTR [edx]
  406c80:	aaa    
  406c81:	pop    edx
  406c82:	add    al,BYTE PTR [edi+esi*1]
  406c85:	pop    eax
  406c86:	add    al,BYTE PTR [edi]
  406c88:	aaa    
  406c89:	push   esp
  406c8a:	add    cl,BYTE PTR ds:0x6c370000
  406c90:	add    bl,BYTE PTR [ecx]
  406c92:	aaa    
  406c93:	jl     0x406c97
  406c95:	xor    DWORD PTR [edi],esi
  406c97:	pushf  
  406c98:	add    ah,BYTE PTR [ecx+0x37]
  406c9b:	fadd   QWORD PTR [ecx]
  406c9d:	shl    DWORD PTR [edi],0x5c
  406ca0:	add    eax,0x45c3681
  406ca5:	add    DWORD PTR [esp+ebx*2],esi
  406ca8:	inc    BYTE PTR [eax]
  406caa:	xor    DWORD PTR [edx+ecx*1+0x1],ebx
  406cae:	xor    ebx,DWORD PTR [edx+edx*1+0x1]
  406cb2:	pop    ds
  406cb3:	pop    esp
  406cb4:	and    al,BYTE PTR [ecx]
  406cb6:	daa    
  406cb7:	pop    esp
  406cb8:	ret    0xd700
  406cbb:	pop    esp
  406cbc:	add    al,BYTE PTR [eax]
  406cbe:	aaa    
  406cbf:	xor    al,0xf8
  406cc1:	add    eax,DWORD PTR [edi+0x34]
  406cc4:	clc    
  406cc5:	add    esp,DWORD PTR [edi]
  406cc7:	xor    al,0xf9
  406cc9:	add    esp,DWORD PTR [esi]
  406ccb:	xor    al,0xfa
  406ccd:	add    esp,DWORD PTR ds:0x2403db34
  406cd3:	xor    al,0xd4
  406cd5:	add    ecx,DWORD PTR [ebx+0x34]
  406cd8:	fld    QWORD PTR [ebx]
  406cda:	inc    edx
  406cdb:	xor    al,0xd6
  406cdd:	add    ecx,DWORD PTR [ecx+0x34]
  406ce0:	inc    DWORD PTR [ebx]
  406ce2:	inc    eax
  406ce3:	xor    al,0x0
  406ce5:	add    al,0x2f
  406ce7:	xor    al,0xf1
  406ce9:	add    ebp,DWORD PTR [esi]
  406ceb:	xor    al,0xf2
  406ced:	add    ebx,DWORD PTR ds:0x3e334
  406cf3:	add    BYTE PTR [esp+esi*1],bl
  406cf6:	fadd   QWORD PTR [ebx]
  406cf8:	push   ebx
  406cf9:	xor    al,0xd5
  406cfb:	add    ecx,DWORD PTR [edx+0x34]
  406cfe:	test   al,0x3
  406d00:	ja     0x406d36
  406d02:	and    al,BYTE PTR [edx+ebx*1]
  406d05:	xor    al,0xd4
  406d07:	xchg   edx,eax
  406d08:	ja     0x406d3e
  406d0a:	adc    BYTE PTR [edx+esi*1],al
  406d0d:	xor    al,0xbc
  406d0f:	xchg   edx,eax
  406d10:	ja     0x406d46
  406d12:	dec    ecx
  406d13:	add    al,0x8
  406d15:	xor    al,0xfc
  406d17:	xchg   ecx,eax
  406d18:	div    DWORD PTR [ebx]
  406d1a:	int3   
  406d1b:	add    esi,DWORD PTR [edx]
  406d1d:	xor    al,0xf4
  406d1f:	xchg   ecx,eax
  406d20:	div    DWORD PTR [ebx]
  406d22:	pop    ss
  406d23:	add    al,0x32
  406d25:	xor    al,0xcc
  406d27:	xchg   ecx,eax
  406d28:	div    DWORD PTR [ebx]
  406d2a:	pushf  
  406d2b:	add    edi,DWORD PTR [ecx]
  406d2d:	xor    al,0xac
  406d2f:	xchg   ecx,eax
  406d30:	div    DWORD PTR [ebx]
  406d32:	fadd   DWORD PTR [ebx]
  406d34:	and    esi,DWORD PTR [esp+eiz*4]
  406d37:	xchg   ecx,eax
  406d38:	div    DWORD PTR [ebx]
  406d3a:	add    DWORD PTR [ecx+0x34],esp
  406d3d:	cmp    eax,0xf3c67101
  406d42:	add    al,bl
  406d44:	xor    al,0x2e
  406d46:	add    DWORD PTR [ecx-0x5a],ebx
  406d49:	repz add ch,ch
  406d4c:	xor    al,0x31
  406d4e:	add    DWORD PTR [ecx-0x5a],eax
  406d51:	repz add BYTE PTR [ecx+0x34],bl
  406d55:	xor    eax,DWORD PTR [ecx]
  406d57:	inc    ebp
  406d58:	add    BYTE PTR [eax],al
  406d5a:	(bad)  
  406d5b:	hlt    
  406d5c:	add    BYTE PTR [esp+esi*1],bh
  406d5f:	and    DWORD PTR [ecx],eax
  406d61:	pop    ecx
  406d62:	(bad)  
  406d63:	hlt    
  406d64:	add    BYTE PTR [edi+0x65013a34],ah
  406d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d6b:	hlt    
  406d6c:	add    BYTE PTR ds:0xcd012e33,dl
  406d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d73:	hlt    
  406d74:	add    BYTE PTR [edx+0x34],al
  406d77:	add    DWORD PTR cs:[ebp+0x6b00f4c6],esi
  406d7e:	xor    al,0x36
  406d80:	add    ebp,eax
  406d82:	(bad)  
  406d83:	hlt    
  406d84:	add    BYTE PTR [ebx],ah
  406d86:	xor    al,0x31
  406d88:	add    DWORD PTR [ecx+0x1200f4a6],ecx
  406d8e:	xor    al,0x30
  406d90:	add    DWORD PTR [ecx-0x61ff0b5a],esi
  406d96:	xor    al,0x3b
  406d98:	add    DWORD PTR [ebp-0x63ff0b3a],ebp
  406d9e:	xor    al,0x4
  406da0:	add    ecx,edx
  406da2:	(bad)  
  406da3:	hlt    
  406da4:	add    BYTE PTR [ebx-0x6fed2cd],cl
  406daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dab:	hlt    
  406dac:	add    BYTE PTR [esi],ah
  406dae:	xor    edi,DWORD PTR [ebx]
  406db0:	add    ebp,esp
  406db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db3:	hlt    
  406db4:	add    BYTE PTR [eax],al
  406db6:	les    esi,FWORD PTR [eax]
  406db8:	or     eax,DWORD PTR [eax]
  406dba:	jbe    0x406d71
  406dbc:	inc    ecx
  406dbd:	add    BYTE PTR [eax],al
  406dbf:	add    BYTE PTR [ecx+0x31],ah
  406dc2:	adc    eax,DWORD PTR [eax]
  406dc4:	jp     0x406d7b
  406dc6:	inc    ecx
  406dc7:	add    BYTE PTR [edi],ch
  406dc9:	xor    BYTE PTR [ecx],ah
  406dcb:	add    BYTE PTR [esi-0x41ffbe4b],bl
  406dd1:	xor    BYTE PTR ds:0x41b4e600,al
  406dd7:	add    dh,ch
  406dd9:	das    
  406dda:	and    BYTE PTR [eax],al
  406ddc:	mov    dh,BYTE PTR [ebp+0x2fc60041]
  406de2:	xor    eax,DWORD PTR [eax]
  406de4:	cs mov ch,0x41
  406de7:	add    bl,bh
  406de9:	xor    BYTE PTR [ebx],ah
  406deb:	add    BYTE PTR [edx],dh
  406ded:	mov    ch,0x41
  406def:	add    al,cl
  406df1:	xor    BYTE PTR ds:0x41b60200,cl
  406df7:	add    BYTE PTR [eax],ah
  406df9:	xor    BYTE PTR [edx],bl
  406dfb:	add    BYTE PTR [esi],cl
  406dfd:	mov    dh,0x41
  406dff:	add    BYTE PTR [edi+ebp*1-0x4a31fff2],bh
  406e06:	inc    ecx
  406e07:	add    BYTE PTR [ebp+0x30],cl
  406e0a:	or     DWORD PTR [eax],eax
  406e0c:	sub    ah,BYTE PTR [ecx+eax*2+0x430e700]
  406e13:	add    dl,al
  406e15:	mov    ah,0x41
  406e17:	add    BYTE PTR [ebx+0x46000330],al
  406e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e1e:	inc    ecx
  406e1f:	add    BYTE PTR [ecx+0x1530],bl
  406e25:	add    BYTE PTR [esi],bh
  406e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e28:	inc    ecx
  406e29:	add    BYTE PTR [edx+0x30],al
  406e2c:	adc    BYTE PTR [eax],al
  406e2e:	mov    dl,0xb4
  406e30:	inc    ecx
  406e31:	add    BYTE PTR [edi],dh
  406e33:	mov    WORD PTR [edx],es
  406e35:	adc    DWORD PTR [edi],esi
  406e37:	mov    bl,0x8e
  406e39:	inc    eax
  406e3a:	aaa    
  406e3b:	jmp    0x408e:0xbb370701
  406e42:	aaa    
  406e43:	pop    es
  406e44:	add    eax,0x8deb370e
  406e49:	inc    eax
  406e4a:	aaa    
  406e4b:	sbb    BYTE PTR ds:0x8ddb370c,al
  406e51:	inc    eax
  406e52:	aaa    
  406e53:	popf   
  406e54:	add    al,BYTE PTR [edi+esi*1]
  406e57:	and    edx,DWORD PTR [ecx+0x2a33740]
  406e5d:	pop    es
  406e5e:	aaa    
  406e5f:	cmp    eax,0xbe37408e
  406e64:	add    DWORD PTR ds:0x40912d37,ecx
  406e6a:	aaa    
  406e6b:	imul   eax,DWORD PTR [edx],0x8
  406e6e:	aaa    
  406e6f:	mov    DWORD PTR [esi+0x2803740],ecx
  406e75:	or     BYTE PTR [edi],dh
  406e77:	xchg   ebp,eax
  406e78:	mov    es,WORD PTR [eax+0x37]
  406e7b:	aaa    
  406e7c:	add    eax,0x8e8d3707
  406e81:	inc    eax
  406e82:	aaa    
  406e83:	out    0x1,eax
  406e85:	adc    eax,0x40913537
  406e8a:	add    BYTE PTR [eax],al
  406e8c:	aaa    
  406e8d:	add    al,BYTE PTR [edx]
  406e8f:	or     esi,DWORD PTR [edi]
  406e91:	inc    ecx
  406e92:	mov    es,WORD PTR [eax+0x37]
  406e95:	ins    BYTE PTR es:[edi],dx
  406e96:	add    cl,BYTE PTR [ebx]
  406e98:	aaa    
  406e99:	cmp    eax,0xd137408e
  406e9e:	add    DWORD PTR [edx],edx
  406ea0:	aaa    
  406ea1:	inc    ecx
  406ea2:	xchg   edx,eax
  406ea3:	inc    eax
  406ea4:	aaa    
  406ea5:	sub    eax,DWORD PTR [edx]
  406ea7:	or     DWORD PTR [edi],esi
  406ea9:	cmp    eax,0x34374092
  406eae:	mov    eax,DWORD PTR [esp]
  406eb1:	xor    al,0xbc
  406eb3:	xchg   ebx,eax
  406eb4:	div    DWORD PTR [ebx]
  406eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eb7:	add    al,0x2f
  406eb9:	xor    al,0xb8
  406ebb:	xchg   ebx,eax
  406ebc:	div    DWORD PTR [ebx]
  406ebe:	pop    ds
  406ebf:	add    al,0x40
  406ec1:	xor    al,0xa8
  406ec3:	xchg   ebx,eax
  406ec4:	div    DWORD PTR [ebx]
  406ec6:	ja     0x406ecc
  406ec8:	cmp    BYTE PTR [eax+esi*2],dh
  406ecb:	xchg   ebx,eax
  406ecc:	div    DWORD PTR [ebx]
  406ece:	push   eax
  406ecf:	add    al,0x43
  406ed1:	xor    al,0x50
  406ed3:	xchg   ebx,eax
  406ed4:	div    DWORD PTR [ebx]
  406ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ed7:	add    al,0x2e
  406ed9:	xor    al,0x6c
  406edb:	xchg   ebx,eax
  406edc:	div    DWORD PTR [ebx]
  406ede:	xchg   esp,eax
  406edf:	add    al,0x3d
  406ee1:	xor    al,0x58
  406ee3:	xchg   ebx,eax
  406ee4:	ja     0x406f1a
  406ee6:	fld    DWORD PTR [ebx]
  406ee8:	cmp    esi,DWORD PTR [eax+eiz*2]
  406eeb:	xchg   ebx,eax
  406eec:	ja     0x406f22
  406eee:	outs   dx,DWORD PTR ds:[esi]
  406eef:	add    al,0x0
  406ef1:	add    BYTE PTR [ecx+0x35],bh
  406ef4:	test   al,0x91
  406ef6:	ja     0x406f2c
  406ef8:	das    
  406ef9:	add    al,0x6a
  406efb:	xor    al,0x40
  406efd:	xchg   ebp,eax
  406efe:	ja     0x406f34
  406f00:	add    eax,DWORD PTR [esi+ebx*1]
  406f03:	xor    al,0x7c
  406f05:	xchg   ebp,eax
  406f06:	ja     0x406f3c
  406f08:	and    DWORD PTR [ebp*1+0x77957834],eax
  406f0f:	xor    al,0x90
  406f11:	add    eax,DWORD PTR [esp+esi*1]
  406f14:	pushf  
  406f15:	xchg   esp,eax
  406f16:	ja     0x406f4c
  406f18:	xchg   ebp,eax
  406f19:	add    edi,DWORD PTR [eax]
  406f1b:	xor    al,0x94
  406f1d:	xchg   esp,eax
  406f1e:	ja     0x406f54
  406f20:	xchg   esi,eax
  406f21:	add    edi,DWORD PTR [esi]
  406f23:	xor    al,0x90
  406f25:	xchg   esp,eax
  406f26:	div    DWORD PTR [ebx]
  406f28:	add    ecx,edx
  406f2a:	xor    al,0x10
  406f2c:	add    DWORD PTR [ecx+0x5900f3c3],esi
  406f32:	cmp    esi,DWORD PTR [eax]
  406f34:	add    DWORD PTR [ecx],edx
  406f36:	mov    ds:0x34af00f3,al
  406f3b:	clc    
  406f3c:	add    cl,cl
  406f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f3f:	repz add BYTE PTR [eax],bl
  406f42:	cmp    edi,DWORD PTR [eax]
  406f44:	add    DWORD PTR [ebp+0x3500f3c4],edx
  406f4a:	cmp    edi,DWORD PTR [eax]
  406f4c:	add    DWORD PTR [ebp-0x2dff0c3c],ebx
  406f52:	xor    al,0x2e
  406f54:	add    DWORD PTR [ecx-0xc5c0000],ebp
  406f5a:	add    BYTE PTR [edx],ah
  406f5c:	cmp    edi,DWORD PTR [edx]
  406f5e:	add    DWORD PTR [ecx-0x5c],edx
  406f61:	repz add BYTE PTR [ebx],bl
  406f64:	cmp    ebx,DWORD PTR [edx]
  406f66:	add    DWORD PTR [ecx-0x3c],ebx
  406f69:	hlt    
  406f6a:	add    BYTE PTR [ecx+0x34],dh
  406f6d:	aaa    
  406f6e:	add    DWORD PTR [ecx-0x3c],esp
  406f71:	hlt    
  406f72:	add    cl,ah
  406f74:	xor    al,0x39
  406f76:	add    DWORD PTR [ecx-0x5c],ebp
  406f79:	hlt    
  406f7a:	add    bh,dh
  406f7c:	xor    al,0x35
  406f7e:	add    ebp,ecx
  406f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f81:	hlt    
  406f82:	add    al,ch
  406f84:	xor    al,0x29
  406f86:	add    ebp,eax
  406f88:	(bad)  
  406f89:	hlt    
  406f8a:	add    BYTE PTR [ebx],ah
  406f8c:	xor    al,0x31
  406f8e:	add    DWORD PTR [ebp+0x7600f4c4],edx
  406f94:	xor    al,0x37
  406f96:	add    DWORD PTR [ebp+0xa00f4a4],ebp
  406f9c:	xor    al,0x28
  406f9e:	add    ebp,edx
  406fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fa1:	hlt    
  406fa2:	add    BYTE PTR [eax],al
  406fa4:	shl    DWORD PTR ds:0xa582001f,0x41
  406fab:	add    BYTE PTR [ecx+0x7a000636],ah
  406fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fb2:	inc    ecx
  406fb3:	add    ch,ch
  406fb5:	aaa    
  406fb6:	adc    DWORD PTR [eax],eax
  406fb8:	xchg   esi,eax
  406fb9:	mov    bh,0x41
  406fbb:	add    BYTE PTR [eax],al
  406fbd:	add    BYTE PTR [eax+0x5e000735],dl
  406fc3:	mov    bh,0x41
  406fc5:	add    BYTE PTR [ebp+0x7a000235],cl
  406fcb:	mov    bh,0x41
  406fcd:	add    BYTE PTR [esi-0x35ffd1cb],al
  406fd3:	mov    dh,0x41
  406fd5:	add    BYTE PTR [edx-0xdffe9c8],bl
  406fdb:	mov    dh,0x41
  406fdd:	add    BYTE PTR [ebx],cl
  406fdf:	cmp    BYTE PTR [ebx],bl
  406fe1:	add    dh,dl
  406fe3:	mov    dh,0x41
  406fe5:	add    ah,bh
  406fe7:	xor    al,0xe
  406fe9:	add    BYTE PTR [esi],dh
  406feb:	mov    bh,0x41
  406fed:	add    bh,dl
  406fef:	aaa    
  406ff0:	adc    eax,0x41b72e00
  406ff5:	add    BYTE PTR [esi],ah
  406ff7:	cmp    BYTE PTR [esi],bl
  406ff9:	add    dh,bl
  406ffb:	mov    bh,0x41
  406ffd:	add    BYTE PTR [edx],cl
  406fff:	xor    eax,0xb8060025
  407004:	inc    ecx
  407005:	add    dl,ah
  407007:	xor    al,0xb
  407009:	add    dl,bl
  40700b:	mov    bh,0x41
  40700d:	add    BYTE PTR [eax+edi*1-0x482dfffb],al
  407014:	inc    ecx
  407015:	add    BYTE PTR [esi],bh
  407017:	cmp    BYTE PTR ds:0x41ba2a00,al
  40701d:	add    BYTE PTR [edi],dh
  40701f:	adc    eax,DWORD PTR ds:0x3700000c
  407025:	aas    
  407026:	test   BYTE PTR [eax+0x37],al
  407029:	std    
  40702a:	add    al,0x11
  40702c:	aaa    
  40702d:	adc    eax,DWORD PTR [edi+0x2633740]
  407033:	push   cs
  407034:	aaa    
  407035:	adc    eax,DWORD PTR [edi+0x5073740]
  40703b:	or     al,0x37
  40703d:	xchg   ebx,eax
  40703e:	test   BYTE PTR [eax+0x37],al
  407041:	lods   eax,DWORD PTR ds:[esi]
  407042:	add    dl,BYTE PTR [edx]
  407044:	aaa    
  407045:	mov    bh,0x84
  407047:	inc    eax
  407048:	aaa    
  407049:	rol    DWORD PTR [ecx],cl
  40704b:	push   ds
  40704c:	aaa    
  40704d:	xlat   BYTE PTR ds:[ebx]
  40704e:	add    DWORD PTR [eax+0x37],0xffffffa1
  407052:	add    dh,BYTE PTR [ecx]
  407054:	aaa    
  407055:	sbb    eax,DWORD PTR [edi+0x29c3740]
  40705b:	or     DWORD PTR [edi],esi
  40705d:	pop    ss
  40705e:	xchg   DWORD PTR [eax+0x37],eax
  407061:	sub    eax,0x67370c05
  407066:	test   BYTE PTR [eax+0x37],al
  407069:	sub    eax,0x79370c05
  40706e:	test   BYTE PTR [eax+0x37],al
  407071:	call   0x4084:0x71370702
  407078:	aaa    
  407079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40707a:	add    dl,BYTE PTR [edi+esi*1]
  40707d:	pop    ecx
  40707e:	test   BYTE PTR [eax+0x37],al
  407081:	daa    
  407082:	add    eax,0x86f13704
  407087:	inc    eax
  407088:	add    BYTE PTR [eax],al
  40708a:	aaa    
  40708b:	js     0x40708f
  40708d:	add    al,0x37
  40708f:	or     DWORD PTR [edi+0x2873740],eax
  407095:	add    al,0x37
  407097:	add    DWORD PTR [edi+0x23343740],eax
  40709d:	add    esi,DWORD PTR [ecx]
  40709f:	xor    al,0x4
  4070a1:	xchg   BYTE PTR [edi+0x34],dh
  4070a4:	lods   al,BYTE PTR ds:[esi]
  4070a5:	add    esp,DWORD PTR ds:0xf7863834
  4070ab:	xor    esi,DWORD PTR [ebx+eax*1+0x38]
  4070af:	xor    al,0x28
  4070b1:	xchg   bh,dh
  4070b3:	xor    esp,DWORD PTR [ebp+0x3]
  4070b6:	inc    ebp
  4070b7:	xor    al,0x3c
  4070b9:	xchg   bh,dh
  4070bb:	xor    edi,DWORD PTR [ebx]
  4070bd:	add    al,0x2b
  4070bf:	xor    al,0x6c
  4070c1:	xor    edi,0x2e04bc33
  4070c7:	xor    al,0x68
  4070c9:	xor    edi,0x3e041a33
  4070cf:	xor    al,0x34
  4070d1:	xor    edi,0x2c04c633
  4070d7:	xor    al,0x40
  4070d9:	xor    edi,0x3503d533
  4070df:	xor    al,0x4
  4070e1:	xor    edi,0x3303c133
  4070e7:	xor    al,0x2c
  4070e9:	xor    DWORD PTR [edi+0x34],0x3c8
  4070f0:	xor    esi,DWORD PTR [esp+edx*1]
  4070f3:	xor    DWORD PTR [edi+0x34],0x34330417
  4070fa:	sbb    al,0x81
  4070fc:	ja     0x407132
  4070fe:	aaa    
  4070ff:	add    al,0x24
  407101:	xor    al,0x20
  407103:	xor    DWORD PTR [edi+0x34],0x342d041d
  40710a:	cld    
  40710b:	xor    BYTE PTR [edi+0x34],0x71
  40710f:	add    al,0x3d
  407111:	xor    al,0x8
  407113:	xor    DWORD PTR [edi+0x34],0x2c34de01
  40711a:	add    ebp,edx
  40711c:	mov    bh,0xf3
  40711e:	add    BYTE PTR [edx+0x33],bh
  407121:	sub    eax,DWORD PTR [ecx]
  407123:	icebp  
  407124:	mov    bh,0xf3
  407126:	add    BYTE PTR [ebx+esi*1],ch
  407129:	sub    eax,DWORD PTR [ecx]
  40712b:	or     eax,0x5200f3b7
  407130:	xor    esi,DWORD PTR [edi]
  407132:	add    ebp,esi
  407134:	and    ah,dh
  407136:	add    BYTE PTR [ebx+esi*1+0x38],ah
  40713a:	add    ebp,edi
  40713c:	adc    ah,dh
  40713e:	add    BYTE PTR [ecx+0x33],cl
  407141:	sub    al,0x1
  407143:	leave  
  407144:	add    ah,dh
  407146:	add    cl,bl
  407148:	xor    al,0x2c
  40714a:	add    DWORD PTR [ebp-0x57ff0c10],esi
  407150:	xor    al,0x14
  407152:	add    DWORD PTR [ecx+0x0],edi
  407155:	add    al,ah
  407157:	repz add BYTE PTR [ebp+0x34],bh
  40715b:	sub    al,BYTE PTR [ecx]
  40715d:	test   eax,edx
  40715f:	repz add BYTE PTR [ebx-0x7efed5cc],ah
  407166:	shl    bl,0x0
  407169:	mov    ?,WORD PTR [edx+ebp*1]
  40716c:	add    DWORD PTR [ebp-0x50],ebx
  40716f:	hlt    
  407170:	add    BYTE PTR [ebx+0x34],al
  407173:	and    eax,DWORD PTR [ecx]
  407175:	add    DWORD PTR [edi+0x347700f4],esi
  40717b:	sub    eax,DWORD PTR [ecx]
  40717d:	std    
  40717e:	nop
  40717f:	hlt    
  407180:	add    ah,al
  407182:	xor    al,0x2d
  407184:	add    DWORD PTR [ebp+0x7700f480],edi
  40718a:	xor    al,0x2a
  40718c:	add    DWORD PTR [ecx+0xf470],edi
  407192:	mov    al,ds:0x9a000931
  407197:	mov    ebp,0x31260040
  40719c:	add    eax,0x40bde200
  4071a1:	add    BYTE PTR [esi-0x15fffacf],dh
  4071a7:	mov    ebp,0x316c0040
  4071ac:	add    al,BYTE PTR [eax]
  4071ae:	mov    ?,WORD PTR [ebp+0x31cf0040]
  4071b4:	add    al,BYTE PTR [eax]
  4071b6:	jb     0x407175
  4071b8:	inc    eax
  4071b9:	add    BYTE PTR [eax],al
  4071bb:	add    BYTE PTR [ebp+0x31],bl
  4071be:	sbb    DWORD PTR [eax],eax
  4071c0:	outs   dx,BYTE PTR ds:[esi]
  4071c1:	mov    ebp,0x38de0040
  4071c6:	push   es
  4071c7:	add    BYTE PTR [esi+0x520040bd],al
  4071cd:	cmp    BYTE PTR [ebx],cl
  4071cf:	add    BYTE PTR [edx+0x6e0040bf],al
  4071d5:	xor    DWORD PTR [edi],eax
  4071d7:	add    BYTE PTR [edx+0x4a0040bf],ch
  4071dd:	xor    DWORD PTR [eax+eax*1],eax
  4071e0:	xchg   edx,eax
  4071e1:	mov    edi,0x38350040
  4071e6:	or     al,BYTE PTR [eax]
  4071e8:	scas   al,BYTE PTR es:[edi]
  4071e9:	mov    edi,0x315f0040
  4071ee:	add    eax,0x40bee600
  4071f3:	add    ah,bh
  4071f5:	xor    BYTE PTR ds:0x40bebe00,al
  4071fb:	add    BYTE PTR [ebx+0x38],al
  4071fe:	add    eax,0x40bed600
  407203:	add    BYTE PTR [edi+0x4e000537],ah
  407209:	mov    edi,0xeb370040
  40720e:	add    al,0xb
  407210:	aaa    
  407211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407212:	jl     0x407254
  407214:	aaa    
  407215:	mov    al,BYTE PTR [edx]
  407217:	or     DWORD PTR [edi],esi
  407219:	mov    ds:0x8d37407c,eax
  40721e:	add    bl,BYTE PTR [esi]
  407220:	add    BYTE PTR [eax],al
  407222:	aaa    
  407223:	sar    DWORD PTR [ebx+0x40],cl
  407226:	aaa    
  407227:	mov    eax,0xa3371f05
  40722c:	jge    0x40726e
  40722e:	aaa    
  40722f:	mov    edi,0x8f370804
  407234:	jge    0x407276
  407236:	aaa    
  407237:	imul   eax,DWORD PTR [edx],0x8
  40723a:	aaa    
  40723b:	fwait
  40723c:	jge    0x40727e
  40723e:	aaa    
  40723f:	cmc    
  407240:	add    al,0x4
  407242:	aaa    
  407243:	xchg   ebx,eax
  407244:	jge    0x407286
  407246:	aaa    
  407247:	dec    ecx
  407248:	add    cl,BYTE PTR [eax]
  40724a:	aaa    
  40724b:	pop    ds
  40724c:	jl     0x40728e
  40724e:	aaa    
  40724f:	and    al,0x5
  407251:	or     esi,DWORD PTR [edi]
  407253:	sbb    edi,DWORD PTR [eax+eax*2+0x37]
  407257:	mov    bl,0x2
  407259:	sub    DWORD PTR [edi],esi
  40725b:	push   edi
  40725c:	jge    0x40729e
  40725e:	aaa    
  40725f:	fiadd  DWORD PTR [ecx]
  407261:	or     BYTE PTR [edi],dh
  407263:	cmp    DWORD PTR [eax+eax*2+0x37],0xffffffca
  407268:	add    DWORD PTR [edx],ecx
  40726a:	aaa    
  40726b:	scas   eax,DWORD PTR es:[edi]
  40726c:	jl     0x4072ae
  40726e:	aaa    
  40726f:	stos   BYTE PTR es:[edi],al
  407270:	add    cl,BYTE PTR [eax]
  407272:	aaa    
  407273:	lods   eax,DWORD PTR ds:[esi]
  407274:	jl     0x4072b6
  407276:	aaa    
  407277:	add    al,BYTE PTR ds:0x7ca13708
  40727d:	inc    eax
  40727e:	aaa    
  40727f:	inc    ecx
  407280:	add    al,BYTE PTR [esi]
  407282:	aaa    
  407283:	cdq    
  407284:	jl     0x4072c6
  407286:	add    BYTE PTR [eax],al
  407288:	aaa    
  407289:	xor    al,0x41
  40728b:	add    ebp,DWORD PTR [esp+esi*1]
  40728e:	sub    BYTE PTR [ebp+0x77],bh
  407291:	xor    al,0x97
  407293:	add    edi,DWORD PTR [edi]
  407295:	xor    al,0x94
  407297:	jge    0x407310
  407299:	xor    al,0x4f
  40729b:	add    edi,DWORD PTR [ecx]
  40729d:	xor    al,0x8c
  40729f:	jge    0x407318
  4072a1:	xor    al,0x6d
  4072a3:	add    edi,DWORD PTR [ecx]
  4072a5:	xor    al,0x84
  4072a7:	jge    0x407320
  4072a9:	xor    al,0x2e
  4072ab:	add    ebp,DWORD PTR ds:0x777d8034
  4072b1:	xor    al,0x7c
  4072b3:	add    eax,DWORD PTR [ecx+0x34]
  4072b6:	pusha  
  4072b7:	jge    0x4072b0
  4072b9:	xor    esi,DWORD PTR [edi]
  4072bb:	add    esi,DWORD PTR [edx]
  4072bd:	xor    al,0x80
  4072bf:	jge    0x4072b8
  4072c1:	xor    ecx,DWORD PTR [edi-0x6fcbcefd]
  4072c7:	jge    0x4072c0
  4072c9:	xor    eax,edx
  4072cb:	add    al,0x3b
  4072cd:	xor    al,0x38
  4072cf:	jp     0x4072c8
  4072d1:	xor    eax,DWORD PTR [edx+0x4]
  4072d4:	cmp    esi,DWORD PTR [eax+eiz*1]
  4072d7:	jp     0x4072d0
  4072d9:	xor    ebx,DWORD PTR ds:0x28343b04
  4072df:	jp     0x4072d8
  4072e1:	xor    esi,ebx
  4072e3:	add    esi,DWORD PTR ds:0xf779ec34
  4072e9:	xor    esi,DWORD PTR [eax]
  4072eb:	add    al,0x0
  4072ed:	add    BYTE PTR [eax],bh
  4072ef:	xor    al,0xd4
  4072f1:	jns    0x4072ea
  4072f3:	xor    edx,DWORD PTR [edi-0x43cbc5fc]
  4072f9:	jns    0x407372
  4072fb:	xor    al,0x5
  4072fd:	add    al,0x33
  4072ff:	xor    al,0xdc
  407301:	jns    0x40737a
  407303:	xor    al,0x1
  407305:	div    DWORD PTR [eax+esi*1]
  407308:	add    ebp,edx
  40730a:	mov    ?,esp
  40730c:	add    BYTE PTR [esi],dh
  40730e:	cmp    esi,DWORD PTR [eax]
  407310:	add    ebp,ebp
  407312:	jle    0x407308
  407314:	add    BYTE PTR [ebx+edi*1],ah
  407317:	xor    BYTE PTR [ecx],al
  407319:	in     eax,0x6e
  40731b:	hlt    
  40731c:	add    BYTE PTR [eax],bl
  40731e:	cmp    ebp,DWORD PTR [ecx+eax*1]
  407321:	inc    ecx
  407322:	pop    edx
  407323:	hlt    
  407324:	add    BYTE PTR [ebx+0x29010334],dl
  40732a:	dec    edx
  40732b:	hlt    
  40732c:	add    BYTE PTR [ebp+0x4d012634],bl
  407332:	cmp    dh,ah
  407334:	add    bl,bh
  407336:	xor    al,0x8
  407338:	add    DWORD PTR [ebp-0x19ff0bd5],ecx
  40733e:	xor    al,0x32
  407340:	add    DWORD PTR [ebp+0x1b],esi
  407343:	hlt    
  407344:	add    BYTE PTR [edi],ah
  407346:	cmp    ebp,DWORD PTR [ecx+eax*1]
  407349:	or     DWORD PTR [ebx],0x34d900f4
  40734f:	sub    BYTE PTR [ecx],al
  407351:	inc    ecx
  407352:	add    BYTE PTR [eax],al
  407354:	cli    
  407355:	repz add BYTE PTR [ebx],bh
  407358:	cmp    esi,DWORD PTR [eax]
  40735a:	add    DWORD PTR [ecx],edi
  40735c:	jmp    0x11a:0x3b4100f3
  407363:	stc    
  407364:	fcomi  st,st(3)
  407366:	add    BYTE PTR [esi+0x1013334],dh
  40736c:	retf   0xf3
  40736f:	mov    esi,0x1012b34
  407374:	mov    edx,0x344200f3
  407379:	sub    eax,0xf4abdd01
  40737e:	add    BYTE PTR [eax],al
  407380:	sub    DWORD PTR [esi],esi
  407382:	or     BYTE PTR [eax],al
  407384:	push   cs
  407385:	mov    ecx,0x35ec0040
  40738a:	or     al,0x0
  40738c:	mov    ?,WORD PTR [ebp+0x35420040]
  407392:	or     eax,DWORD PTR [eax]
  407394:	jb     0x407353
  407396:	inc    eax
  407397:	add    BYTE PTR [edx+0x30],cl
  40739a:	or     al,0x0
  40739c:	and    bh,BYTE PTR [ebp+0x35110040]
  4073a2:	pop    ss
  4073a3:	add    BYTE PTR [edx-0x43],bl
  4073a6:	inc    eax
  4073a7:	add    BYTE PTR [ebx+0x35],dh
  4073aa:	adc    al,0x0
  4073ac:	mov    dl,0xbd
  4073ae:	inc    eax
  4073af:	add    BYTE PTR [esi*1-0x4249fff6],ah
  4073b6:	inc    eax
  4073b7:	add    BYTE PTR [eax],al
  4073b9:	add    BYTE PTR [eax+0x16000c35],ch
  4073bf:	mov    ebp,0x35bc0040
  4073c4:	adc    DWORD PTR [eax],eax
  4073c6:	and    bh,BYTE PTR [ebp+0x35d20040]
  4073cc:	or     eax,0x40bdb200
  4073d1:	add    BYTE PTR [edi-0x9fff5d0],dl
  4073d7:	mov    bh,0x40
  4073d9:	add    BYTE PTR [esi+0x16000d30],bh
  4073df:	mov    eax,0x30060040
  4073e4:	adc    DWORD PTR [eax],eax
  4073e6:	bound  edi,QWORD PTR [ebp+0x307c0040]
  4073ec:	adc    al,BYTE PTR [eax]
  4073ee:	ds mov eax,0x30020040
  4073f4:	(bad)  
  4073f6:	ds mov ebp,0x7b370040
  4073fc:	add    eax,0x84a73711
  407401:	inc    eax
  407402:	aaa    
  407403:	nop
  407404:	add    eax,0x84a7370e
  407409:	inc    eax
  40740a:	aaa    
  40740b:	mov    al,ds:0xa3371005
  407410:	test   BYTE PTR [eax+0x37],al
  407413:	adc    eax,DWORD PTR ds:0x840f3711
  407419:	inc    eax
  40741a:	aaa    
  40741b:	pop    esi
  40741c:	add    dl,BYTE PTR [ebx]
  40741e:	add    BYTE PTR [eax],al
  407420:	aaa    
  407421:	fwait
  407422:	test   BYTE PTR [eax+0x37],al
  407425:	in     al,0x4
  407427:	adc    eax,0x4083d337
  40742c:	aaa    
  40742d:	push   es
  40742e:	add    eax,0x83cb3714
  407433:	inc    eax
  407434:	aaa    
  407435:	fadd   DWORD PTR [edi+edx*1]
  407438:	aaa    
  407439:	mov    ds:0xfa374085,eax
  40743e:	add    al,0x12
  407440:	aaa    
  407441:	jg     0x4073c8
  407443:	inc    eax
  407444:	aaa    
  407445:	cld    
  407446:	add    al,0x18
  407448:	aaa    
  407449:	jae    0x4073d0
  40744b:	inc    eax
  40744c:	aaa    
  40744d:	and    BYTE PTR ds:0x855f3723,al
  407453:	inc    eax
  407454:	aaa    
  407455:	or     eax,0x67372505
  40745a:	test   BYTE PTR [eax+0x37],al
  40745d:	add    DWORD PTR [edx],0x847b371b
  407463:	inc    eax
  407464:	aaa    
  407465:	test   DWORD PTR [edx],eax
  407467:	add    esi,DWORD PTR [edi]
  407469:	xchg   DWORD PTR [eax+eax*2+0x7029c37],eax
  407470:	aaa    
  407471:	pop    DWORD PTR [eax+eax*2+0x43e3437]
  407478:	xor    BYTE PTR [esp+ebx*2],dh
  40747b:	test   DWORD PTR [edi+0x34],esi
  40747e:	jl     0x407483
  407480:	dec    ebx
  407481:	xor    al,0x6c
  407483:	test   DWORD PTR [eax],eax
  407485:	add    BYTE PTR [edi+0x34],dh
  407488:	push   edx
  407489:	add    esi,DWORD PTR [eax]
  40748b:	xor    al,0x54
  40748d:	test   DWORD PTR [edi+0x34],esi
  407490:	jns    0x407495
  407492:	cmp    eax,0x77856034
  407497:	xor    al,0xbf
  407499:	add    ebp,DWORD PTR [ebx+0x34]
  40749c:	and    BYTE PTR [esi+0x3363477],al
  4074a2:	sbb    dh,BYTE PTR [eax+eiz*8]
  4074a5:	test   DWORD PTR [edi+0x34],esi
  4074a8:	push   cs
  4074a9:	add    al,0x30
  4074ab:	xor    al,0xe8
  4074ad:	test   DWORD PTR [edi+0x34],esi
  4074b0:	cli    
  4074b1:	add    edi,DWORD PTR [ebx]
  4074b3:	xor    al,0x38
  4074b5:	xchg   BYTE PTR [edi+0x34],dh
  4074b8:	lods   al,BYTE PTR ds:[esi]
  4074b9:	add    ebp,DWORD PTR [esp+esi*1]
  4074bc:	add    al,0x86
  4074be:	div    DWORD PTR [ebx]
  4074c0:	mov    ecx,0x30343c03
  4074c5:	xchg   bh,dh
  4074c7:	xor    ebp,DWORD PTR [ebx]
  4074c9:	add    ebp,DWORD PTR ds:0xf7862c34
  4074cf:	xor    ebp,DWORD PTR [eax+0x28343c03]
  4074d5:	xchg   bh,dh
  4074d7:	xor    edi,edi
  4074d9:	add    ebp,DWORD PTR [ebx]
  4074db:	xor    al,0x98
  4074dd:	xor    edi,0x1b03ec33
  4074e3:	xor    al,0x68
  4074e5:	xor    edi,0x4c433
  4074eb:	add    BYTE PTR [esp+esi*1],ch
  4074ee:	xor    al,0x81
  4074f0:	div    DWORD PTR [ebx]
  4074f2:	add    DWORD PTR [esi+0x49012433],esi
  4074f8:	mov    dh,0xf4
  4074fa:	add    BYTE PTR [ebx+0x33],ch
  4074fd:	sub    eax,DWORD PTR [ecx]
  4074ff:	xor    eax,0x3900f3b6
  407504:	xor    ebp,DWORD PTR [ebx]
  407506:	add    DWORD PTR [ecx],esp
  407508:	mov    dh,0xf3
  40750a:	add    BYTE PTR [ebx+0x33],dh
  40750d:	das    
  40750e:	add    DWORD PTR [ecx],ebp
  407510:	mov    dh,0xf3
  407512:	add    BYTE PTR ds:0xbd012233,dh
  407518:	mov    bh,0xf3
  40751a:	add    BYTE PTR [ecx-0x1afef1cd],bl
  407520:	mov    bh,0xf3
  407522:	add    BYTE PTR ds:0x55012933,cl
  407528:	mov    bh,0xf3
  40752a:	add    BYTE PTR [esp+esi*1-0x48bafed9],dh
  407531:	repz add BYTE PTR [edi],al
  407534:	xor    ebp,DWORD PTR ds:0xf3b71101
  40753a:	add    BYTE PTR [edx],bh
  40753c:	xor    ebp,DWORD PTR [eax]
  40753e:	add    DWORD PTR [ecx],esi
  407540:	mov    bh,0xf3
  407542:	add    BYTE PTR [edx+0x33],cl
  407545:	and    DWORD PTR [ecx],eax
  407547:	pop    ecx
  407548:	mov    bh,0xf3
  40754a:	add    BYTE PTR [eax+0x49012934],dh
  407550:	add    BYTE PTR [eax],al
  407552:	mov    bh,0xf3
  407554:	add    BYTE PTR [esi+0x5d012534],ah
  40755a:	mov    bh,0xf3
  40755c:	add    BYTE PTR [esi+0x33],dl
  40755f:	sub    eax,DWORD PTR [ecx]
  407561:	imul   esi,eax,0x34f800f3
  407567:	pop    ss
  407568:	add    DWORD PTR [ecx-0x49],ecx
  40756b:	repz add BYTE PTR [eax],al
  40756e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40756f:	xor    cl,BYTE PTR [eax]
  407571:	add    BYTE PTR [edx],ch
  407573:	mov    ah,0x41
  407575:	add    al,al
  407577:	xor    al,BYTE PTR [edx]
  407579:	add    BYTE PTR [esi],bl
  40757b:	mov    ah,0x41
  40757d:	add    BYTE PTR [esi+0x32],cl
  407580:	add    DWORD PTR [eax],eax
  407582:	push   ds
  407583:	xor    al,BYTE PTR [ecx]
  407585:	add    BYTE PTR [esi],bl
  407587:	xor    al,BYTE PTR [ecx]
  407589:	add    BYTE PTR [esi],cl
  40758b:	xor    al,BYTE PTR [ecx]
  40758d:	add    BYTE PTR [esi],cl
  40758f:	xor    al,BYTE PTR [ecx]
  407591:	add    BYTE PTR [esi],bl
  407593:	xor    al,BYTE PTR [ecx]
  407595:	add    BYTE PTR [esi],bl
  407597:	xor    al,BYTE PTR [ecx]
  407599:	add    BYTE PTR [esi],cl
  40759b:	xor    al,BYTE PTR [ecx]
  40759d:	add    BYTE PTR [esi],cl
  40759f:	xor    al,BYTE PTR [ecx]
  4075a1:	add    dh,bl
  4075a3:	xor    DWORD PTR [ecx],eax
  4075a5:	add    dh,bl
  4075a7:	adc    BYTE PTR [ecx],al
  4075a9:	and    edi,DWORD PTR [edx]
  4075ab:	adc    esp,DWORD PTR [edi]
  4075ad:	daa    
  4075ae:	into   
  4075af:	xor    DWORD PTR [ebx],ebp
  4075b1:	sub    ebx,esi
  4075b3:	sbb    al,0x2f
  4075b5:	add    BYTE PTR [eax],al
  4075b7:	add    dh,cl
  4075b9:	add    BYTE PTR [ebx],dh
  4075bb:	xor    ecx,edx
  4075bd:	add    al,0x37
  4075bf:	aaa    
  4075c0:	(bad)  
  4075c1:	or     BYTE PTR [ecx],al
  4075c3:	add    BYTE PTR [esi-0x61fffecf],bl
  4075c9:	push   eax
  4075ca:	pusha  
  4075cb:	arpl   WORD PTR [edx-0x39989bac],di
  4075d1:	pop    eax
  4075d2:	push   0x6c5cc26b
  4075d7:	outs   dx,DWORD PTR ds:[esi]
  4075d8:	push   cs
  4075d9:	inc    eax
  4075da:	jo     0x40764f
  4075dc:	or     al,BYTE PTR [esp+esi*2+0x77]
  4075e0:	push   ss
  4075e1:	dec    ecx
  4075e2:	js     0x4075e4
  4075e4:	pop    esi
  4075e5:	xor    DWORD PTR [edi+0x5f],ebx
  4075e8:	aaa    
  4075e9:	jmp    0x4075cc
  4075eb:	popa   
  4075ec:	aam    0xee
  4075ee:	frstor [ebp-0x30]
  4075f1:	loop   0x4075cc
  4075f3:	imul   ebx,esp,0xd86dd5e6
  4075f9:	cli    
  4075fa:	icebp  
  4075fb:	jno    0x4075c1
  4075fd:	(bad)  
  4075fe:	in     eax,dx
  4075ff:	jne    0x4075c1
  407601:	adc    ch,dl
  407603:	jns    0x40763c
  407605:	pop    ss
  407606:	add    eax,0x24b377e
  40760b:	add    BYTE PTR [edi],dh
  40760d:	dec    ebx
  40760e:	add    al,BYTE PTR [eax]
  407610:	aaa    
  407611:	dec    ebx
  407612:	add    al,BYTE PTR [eax]
  407614:	aaa    
  407615:	dec    ebx
  407616:	add    al,BYTE PTR [eax]
  407618:	aaa    
  407619:	dec    ebx
  40761a:	add    al,BYTE PTR [eax]
  40761c:	add    BYTE PTR [eax],al
  40761e:	aaa    
  40761f:	dec    ebx
  407620:	add    al,BYTE PTR [eax]
  407622:	aaa    
  407623:	dec    ebx
  407624:	add    al,BYTE PTR [eax]
  407626:	aaa    
  407627:	dec    ebx
  407628:	add    al,BYTE PTR [eax]
  40762a:	aaa    
  40762b:	dec    ebx
  40762c:	add    al,BYTE PTR [eax]
  40762e:	aaa    
  40762f:	dec    ebx
  407630:	add    al,BYTE PTR [eax]
  407632:	aaa    
  407633:	dec    ebx
  407634:	add    al,BYTE PTR [eax]
  407636:	aaa    
  407637:	dec    ebx
  407638:	add    al,BYTE PTR [eax]
  40763a:	aaa    
  40763b:	dec    ebx
  40763c:	add    al,BYTE PTR [eax]
  40763e:	aaa    
  40763f:	dec    ebx
  407640:	add    al,BYTE PTR [eax]
  407642:	aaa    
  407643:	dec    ebx
  407644:	add    al,BYTE PTR [eax]
  407646:	aaa    
  407647:	dec    ebx
  407648:	add    al,BYTE PTR [eax]
  40764a:	aaa    
  40764b:	dec    ebx
  40764c:	add    al,BYTE PTR [eax]
  40764e:	aaa    
  40764f:	dec    ebx
  407650:	add    al,BYTE PTR [eax]
  407652:	aaa    
  407653:	dec    ebx
  407654:	add    al,BYTE PTR [eax]
  407656:	aaa    
  407657:	dec    ebx
  407658:	add    al,BYTE PTR [eax]
  40765a:	aaa    
  40765b:	dec    ebx
  40765c:	add    al,BYTE PTR [eax]
  40765e:	aaa    
  40765f:	dec    ebx
  407660:	add    al,BYTE PTR [eax]
  407662:	aaa    
  407663:	xor    al,0xe8
  407665:	add    esi,DWORD PTR [edi]
  407667:	xor    al,0xe8
  407669:	add    esi,DWORD PTR [edi]
  40766b:	xor    al,0xe8
  40766d:	add    esi,DWORD PTR [edi]
  40766f:	xor    al,0xe8
  407671:	add    esi,DWORD PTR [edi]
  407673:	xor    al,0xe8
  407675:	add    esi,DWORD PTR [edi]
  407677:	xor    al,0xe8
  407679:	add    esi,DWORD PTR [edi]
  40767b:	xor    al,0xe8
  40767d:	add    esi,DWORD PTR [edi]
  40767f:	xor    al,0xe8
  407681:	add    eax,DWORD PTR [eax]
  407683:	add    BYTE PTR [edi],dh
  407685:	xor    al,0xe8
  407687:	add    esi,DWORD PTR [edi]
  407689:	xor    al,0xe8
  40768b:	add    esi,DWORD PTR [edi]
  40768d:	xor    al,0x97
  40768f:	push   0x688f3420
  407694:	sbb    BYTE PTR [edi+eax*4],dh
  407697:	push   0x687f3410
  40769c:	or     BYTE PTR [edi+esi*2],dh
  40769f:	push   0x686f3400
  4076a4:	clc    
  4076a5:	xor    esp,DWORD PTR [edi+0x68]
  4076a8:	lock xor ebx,DWORD PTR [edi+0x68]
  4076ac:	call   0xe0a8cde4
  4076b1:	xor    ecx,DWORD PTR [edi+0x68]
  4076b4:	fdiv   DWORD PTR [ebx]
  4076b6:	inc    edi
  4076b7:	push   0x683f33d0
  4076bc:	enter  0xe833,0x2
  4076c0:	xor    eax,0x32fee437
  4076c5:	cmp    esi,eax
  4076c7:	cli    
  4076c8:	mov    cl,0x33
  4076ca:	pop    ds
  4076cb:	push   0xfd1733a8
  4076d0:	sub    eax,0x29f9dd40
  4076d5:	xor    eax,DWORD PTR [edi]
  4076d7:	push   0x67ff3390
  4076dc:	mov    BYTE PTR [ebx],dh
  4076de:	add    esi,esi
  4076e0:	sbb    BYTE PTR [ebx],dh
  4076e2:	(bad)  
  4076e3:	out    dx,al
  4076e4:	adc    BYTE PTR [ebx],dh
  4076e6:	(bad)  
  4076e7:	out    0x0,al
  4076e9:	add    al,bl
  4076eb:	xor    bh,dh
  4076ed:	(bad)  
  4076ef:	xor    bh,dh
  4076f1:	(bad)  
  4076f2:	pop    ebp
  4076f3:	ds or  eax,0xfe4262dc
  4076f9:	(bad)  
  4076fa:	fdiv   DWORD PTR [edx]
  4076fc:	(bad)  
  4076fd:	mov    esi,0xb6fe32d0
  407702:	fdiv   DWORD PTR [edx]
  407704:	(bad)  
  407705:	scas   al,BYTE PTR es:[edi]
  407706:	shl    BYTE PTR [edx],1
  407708:	(bad)  
  407709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40770a:	cwde   
  40770b:	xor    edi,esi
  40770d:	sahf   
  40770e:	nop
  40770f:	xor    edi,esi
  407711:	jmp    0xe941ab4a
  407716:	xor    al,0x34
  407718:	add    ecx,ebp
  40771a:	xor    al,0x34
  40771c:	add    ecx,ebp
  40771e:	xor    al,0x34
  407720:	add    ecx,ebp
  407722:	xor    al,0x34
  407724:	add    ecx,ebp
  407726:	xor    al,0x34
  407728:	add    ecx,ebp
  40772a:	xor    al,0x34
  40772c:	add    ecx,ebp
  40772e:	xor    al,0x34
  407730:	add    ecx,ebp
  407732:	xor    al,0x34
  407734:	add    ecx,ebp
  407736:	xor    al,0x34
  407738:	add    ecx,ebp
  40773a:	xor    al,0x34
  40773c:	add    ecx,ebp
  40773e:	xor    al,0x34
  407740:	add    ecx,ebp
  407742:	xor    al,0x34
  407744:	add    ecx,ebp
  407746:	xor    al,0x34
  407748:	add    ecx,ebp
  40774a:	xor    al,0x34
  40774c:	add    ecx,ebp
  40774e:	add    BYTE PTR [eax],al
  407750:	xor    al,0x34
  407752:	add    ecx,ebp
  407754:	xor    al,0x34
  407756:	add    ecx,ebp
  407758:	xor    al,0x34
  40775a:	add    DWORD PTR [eax],eax
  40775c:	sahf   
  40775d:	add    DWORD PTR ss:[eax],eax
  407760:	sahf   
  407761:	add    DWORD PTR ss:[eax],eax
  407764:	mov    ?,WORD PTR [esi]
  407766:	add    DWORD PTR [eax],eax
  407768:	mov    ?,WORD PTR [esi]
  40776a:	add    DWORD PTR [eax],eax
  40776c:	pop    esi
  40776d:	add    DWORD PTR ss:[eax],eax
  407770:	pop    esi
  407771:	add    DWORD PTR ss:[eax],eax
  407774:	dec    esi
  407775:	add    DWORD PTR ss:[eax],eax
  407778:	dec    esi
  407779:	add    DWORD PTR ss:[eax],eax
  40777c:	pop    esi
  40777d:	add    DWORD PTR ss:[eax],eax
  407780:	pop    esi
  407781:	add    DWORD PTR ss:[eax],eax
  407784:	dec    esi
  407785:	add    DWORD PTR ss:[eax],eax
  407788:	dec    esi
  407789:	add    DWORD PTR ss:[eax],eax
  40778c:	push   ds
  40778d:	add    DWORD PTR ss:[eax],eax
  407790:	push   ds
  407791:	add    DWORD PTR ss:[eax],eax
  407794:	push   cs
  407795:	add    DWORD PTR ss:[eax],eax
  407798:	push   cs
  407799:	add    DWORD PTR ss:[eax],eax
  40779c:	push   ds
  40779d:	add    DWORD PTR ss:[eax],eax
  4077a0:	push   ds
  4077a1:	add    DWORD PTR ss:[eax],eax
  4077a4:	push   cs
  4077a5:	add    DWORD PTR ss:[eax],eax
  4077a8:	push   cs
  4077a9:	add    DWORD PTR ss:[eax],eax
  4077ac:	fidiv  WORD PTR ds:0x35de0001
  4077b2:	add    DWORD PTR [eax],eax
  4077b4:	add    BYTE PTR [eax],al
  4077b6:	into   
  4077b7:	cmp    BYTE PTR [eax],al
  4077b9:	add    bh,cl
  4077bb:	cmp    BYTE PTR [eax],al
  4077bd:	add    edi,ebx
  4077bf:	cmp    BYTE PTR [eax],al
  4077c1:	add    edi,ebx
  4077c3:	cmp    BYTE PTR [eax],al
  4077c5:	add    edi,ecx
  4077c7:	cmp    BYTE PTR [eax],al
  4077c9:	add    edi,ecx
  4077cb:	cmp    BYTE PTR [eax],al
  4077cd:	add    DWORD PTR [edi-0x60feffc8],ebx
  4077d3:	cmp    BYTE PTR [eax],al
  4077d5:	add    BYTE PTR [edi],dh
  4077d7:	sbb    al,0x5
  4077d9:	add    DWORD PTR [esi],esi
  4077db:	sbb    al,0x5
  4077dd:	add    DWORD PTR [esi],esi
  4077df:	sbb    al,0x5
  4077e1:	add    DWORD PTR [esi],esi
  4077e3:	sbb    al,0x5
  4077e5:	add    DWORD PTR [esi],esi
  4077e7:	sbb    al,0x5
  4077e9:	add    DWORD PTR [esi],esi
  4077eb:	sbb    al,0x5
  4077ed:	add    DWORD PTR [esi],esi
  4077ef:	sbb    al,0x3
  4077f1:	add    DWORD PTR [esi],esi
  4077f3:	sbb    al,0x3
  4077f5:	add    DWORD PTR [esi],esi
  4077f7:	sbb    al,0x3
  4077f9:	add    DWORD PTR [esi],esi
  4077fb:	sbb    al,0x3
  4077fd:	add    DWORD PTR [esi],esi
  4077ff:	sbb    al,0x3
  407801:	add    DWORD PTR [esi],esi
  407803:	sbb    al,0x3
  407805:	add    DWORD PTR [esi],esi
  407807:	sbb    al,0x3
  407809:	add    DWORD PTR [esi],esi
  40780b:	sbb    al,0x3
  40780d:	add    DWORD PTR [esi],esi
  40780f:	sbb    al,0x3
  407811:	add    DWORD PTR [esi],esi
  407813:	sbb    al,0x3
  407815:	add    DWORD PTR [edi],esi
  407817:	sbb    eax,DWORD PTR [edx]
  407819:	add    BYTE PTR [eax],al
  40781b:	add    BYTE PTR [edi],dh
  40781d:	sbb    eax,DWORD PTR [edx]
  40781f:	add    BYTE PTR [edi],dh
  407821:	sbb    eax,DWORD PTR [edx]
  407823:	add    BYTE PTR [edi],dh
  407825:	sbb    eax,DWORD PTR [edx]
  407827:	add    BYTE PTR [edi],dh
  407829:	sbb    eax,DWORD PTR [edx]
  40782b:	add    BYTE PTR [edi],dh
  40782d:	sbb    eax,DWORD PTR [edx]
  40782f:	add    BYTE PTR [edi],dh
  407831:	sbb    eax,DWORD PTR [edx]
  407833:	add    BYTE PTR [edi],dh
  407835:	sbb    eax,DWORD PTR [edx]
  407837:	add    BYTE PTR [edi],dh
  407839:	sbb    eax,DWORD PTR [edx]
  40783b:	add    BYTE PTR [edi],dh
  40783d:	sbb    eax,DWORD PTR [edx]
  40783f:	add    BYTE PTR [edi],dh
  407841:	sbb    eax,DWORD PTR [edx]
  407843:	add    BYTE PTR [edi],dh
  407845:	sbb    eax,DWORD PTR [edx]
  407847:	add    BYTE PTR [edi],dh
  407849:	sbb    eax,DWORD PTR [edx]
  40784b:	add    BYTE PTR [edi],dh
  40784d:	sbb    eax,DWORD PTR [edx]
  40784f:	add    BYTE PTR [edi],dh
  407851:	xor    al,0xe8
  407853:	add    esi,DWORD PTR [edi]
  407855:	xor    al,0xe8
  407857:	add    esi,DWORD PTR [edi]
  407859:	xor    al,0xe8
  40785b:	add    esi,DWORD PTR [edi]
  40785d:	xor    al,0xe8
  40785f:	add    esi,DWORD PTR [edi]
  407861:	xor    al,0xe8
  407863:	add    esi,DWORD PTR [edi]
  407865:	xor    al,0xe8
  407867:	add    esi,DWORD PTR [edi]
  407869:	xor    al,0xe8
  40786b:	add    esi,DWORD PTR [edi]
  40786d:	xor    al,0xe8
  40786f:	add    esi,DWORD PTR [edi]
  407871:	xor    al,0xe8
  407873:	add    esi,DWORD PTR [edi]
  407875:	xor    al,0xe8
  407877:	add    esi,DWORD PTR [edi]
  407879:	xor    al,0xe8
  40787b:	add    esi,DWORD PTR [edi]
  40787d:	xor    al,0xe8
  40787f:	add    eax,DWORD PTR [eax]
  407881:	add    BYTE PTR [edi],dh
  407883:	xor    al,0xe8
  407885:	add    esi,DWORD PTR [edi]
  407887:	xor    al,0xe8
  407889:	add    esi,DWORD PTR [edi]
  40788b:	xor    al,0xe8
  40788d:	add    esi,DWORD PTR [edi]
  40788f:	xor    al,0xe8
  407891:	add    esi,DWORD PTR [edi]
  407893:	xor    al,0xe8
  407895:	add    esi,DWORD PTR [edi]
  407897:	xor    al,0xe8
  407899:	add    esi,DWORD PTR [edi]
  40789b:	xor    al,0x35
  40789d:	adc    BYTE PTR [ecx-0x18f34d81],dh
  4078a3:	push   edi
  4078a4:	mov    ch,ch
  4078a6:	fcmovu st,st(7)
  4078a8:	sbb    DWORD PTR [esi-0x6a],ecx
  4078ab:	pop    ebx
  4078ac:	adc    BYTE PTR [edi+eiz*8],ah
  4078af:	cli    
  4078b0:	or     BYTE PTR gs:[edi],dh
  4078b3:	xchg   ecx,eax
  4078b4:	ds push ebx
  4078b6:	in     eax,dx
  4078b7:	(bad)  
  4078b8:	cmp    ch,BYTE PTR [ebp-0x50]
  4078bb:	fidivr DWORD PTR [ebp-0x6f]
  4078be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078bf:	aaa    
  4078c0:	repnz dec edx
  4078c2:	and    ah,BYTE PTR [ebx-0x6b]
  4078c5:	(bad)  
  4078c6:	outs   dx,DWORD PTR ds:[esi]
  4078c7:	loopne 0x407860
  4078c9:	ja     0x40793e
  4078cb:	lock add BYTE PTR [eax],bh
  4078ce:	loopne 0x4078a2
  4078d0:	out    0xee,al
  4078d2:	add    eax,0xe544d425
  4078d7:	xchg   ebp,eax
  4078d8:	xchg   DWORD PTR [esi-0x17],eax
  4078db:	push   es
  4078dc:	push   edx
  4078dd:	(bad)  
  4078de:	dec    edx
  4078df:	int3   
  4078e0:	xor    DWORD PTR [ebp+0x34],eax
  4078e3:	push   ss
  4078e4:	ins    DWORD PTR es:[edi],dx
  4078e5:	mov    ecx,0xbe480000
  4078ea:	aaa    
  4078eb:	pop    esi
  4078ec:	jp     0x4078a2
  4078ee:	sbb    al,0x8d
  4078f0:	adc    esi,edi
  4078f2:	inc    edi
  4078f3:	and    dh,dl
  4078f5:	and    ah,0x7b
  4078f8:	dec    ebx
  4078f9:	pop    esi
  4078fa:	aam    0x96
  4078fc:	mov    ebx,0x7a3f3171
  407901:	jl     0x407962
  407903:	sub    al,0x94
  407905:	dec    edi
  407906:	or     cl,cl
  407908:	cmp    DWORD PTR [esi],ecx
  40790a:	pop    DWORD PTR [eax+ecx*8-0x6229013e]
  407911:	jp     0x4078fa
  407913:	xchg   ecx,eax
  407914:	std    
  407915:	jmp    0xee75:0xce1eca3b
  40791c:	jbe    0x4078e6
  40791e:	int3   
  40791f:	rcr    BYTE PTR [edi-0x54],0x35
  407923:	fiadd  DWORD PTR [ecx+0x6a250cd9]
  407929:	loope  0x4078d0
  40792b:	push   0x4cf3d9f9
  407930:	adc    bh,BYTE PTR [eax-0x38]
  407933:	mov    ds:0xfa3e4a4,eax
  407938:	mov    al,ds:0xd6bf50be
  40793d:	fucomp st(4)
  40793f:	jae    0x407935
  407941:	out    dx,eax
  407942:	dec    ebp
  407943:	xor    bh,BYTE PTR [ecx-0x1d]
  407946:	mov    al,BYTE PTR [eax]
  407948:	stos   BYTE PTR es:[edi],al
  407949:	dec    edx
  40794a:	sbb    BYTE PTR [eax+0x6f100000],dh
  407950:	call   0xaf533769
  407955:	xor    ch,bh
  407957:	push   ebx
  407958:	mov    ch,0xa3
  40795a:	push   0xffffff89
  40795c:	xor    dl,al
  40795e:	inc    edx
  40795f:	icebp  
  407960:	sti    
  407961:	jae    0x40794f
  407963:	mov    dh,0x9d
  407965:	dec    esp
  407966:	shl    DWORD PTR ss:[ebx+0x3d],1
  40796a:	int    0xc9
  40796c:	test   al,0x67
  40796e:	shr    DWORD PTR [edx],1
  407970:	mov    ds:0x7fa512ad,al
  407975:	or     esp,DWORD PTR [eax-0x7e]
  407978:	cmp    dl,BYTE PTR [esi]
  40797a:	push   edi
  40797b:	fist   DWORD PTR [esp+edi*8-0xa]
  40797f:	mov    edi,0xc70018c
  407984:	jno    0x4079ad
  407986:	mov    esp,0xd218f162
  40798b:	xor    BYTE PTR [ebp+0x58b12d93],al
  407991:	or     al,0x8d
  407993:	jl     0x4079ce
  407995:	and    al,0x35
  407997:	out    dx,eax
  407998:	scas   eax,DWORD PTR es:[edi]
  407999:	or     eax,0x8d67787f
  40799e:	cmp    BYTE PTR [esi],0x3
  4079a1:	pusha  
  4079a2:	and    BYTE PTR [edi+0x49],0xc8
  4079a6:	pop    esp
  4079a7:	mov    al,BYTE PTR [ecx+0x57]
  4079aa:	daa    
  4079ab:	or     DWORD PTR [ecx+0x16],esp
  4079ae:	les    ebx,FWORD PTR [ecx]
  4079b0:	jg     0x407a19
  4079b2:	add    BYTE PTR [eax],al
  4079b4:	dec    edi
  4079b5:	add    eax,0x2e56af75
  4079ba:	sbb    esi,DWORD PTR [ecx-0x1d]
  4079bd:	in     eax,0x7e
  4079bf:	fild   WORD PTR [ecx]
  4079c1:	and    dl,BYTE PTR [edx+0x48f13779]
  4079c7:	test   DWORD PTR [edx-0x4b],edx
  4079ca:	and    esi,0xc750d047
  4079d0:	call   0x70c5aa
  4079d5:	mov    BYTE PTR [esi],ah
  4079d7:	push   0x56
  4079d9:	(bad)  
  4079da:	jp     0x407a10
  4079dc:	jmp    0x40799e
  4079de:	jo     0x40796a
  4079e0:	mov    edx,0x284ee87c
  4079e5:	mov    edi,0x90236711
  4079ea:	mov    bl,0xd6
  4079ec:	add    DWORD PTR [esi-0x7de4ad6c],eax
  4079f2:	pop    edx
  4079f3:	pop    ebp
  4079f4:	jp     0x407a01
  4079f6:	sbb    eax,0x3f922f1
  4079fb:	or     ebp,DWORD PTR [ebp+0x72]
  4079fe:	repnz mov edi,0x85c085bd
  407a04:	rcl    esp,cl
  407a06:	popf   
  407a07:	into   
  407a08:	pop    ebx
  407a09:	mov    cl,0x23
  407a0b:	nop
  407a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a0d:	cmp    ah,dh
  407a0f:	add    BYTE PTR [eax-0x64],bl
  407a12:	or     BYTE PTR [ecx],bh
  407a14:	xchg   ebx,eax
  407a15:	inc    edx
  407a16:	aad    0xc6
  407a18:	add    BYTE PTR [eax],al
  407a1a:	xor    DWORD PTR ds:0xc34a9149,edi
  407a20:	mov    ah,0x5d
  407a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a23:	xchg   ebp,eax
  407a24:	inc    ebp
  407a25:	call   FWORD PTR [eax+0x61]
  407a28:	call   0x45e4:0x603bdce5
  407a2f:	xlat   BYTE PTR ds:[ebx]
  407a30:	pop    ebp
  407a31:	add    DWORD PTR [esi+0x6d0887d6],esp
  407a37:	(bad)  
  407a38:	sbb    esp,DWORD PTR [edx-0x43e3ebd6]
  407a3e:	es xor al,0xbe
  407a41:	jmp    0x407a18
  407a43:	sbb    edi,DWORD PTR [esi+0x6c]
  407a46:	adc    BYTE PTR [ecx],bl
  407a48:	xchg   ecx,eax
  407a49:	js     0x407a65
  407a4b:	pop    ebx
  407a4c:	cli    
  407a4d:	retf   
  407a4e:	(bad)  
  407a4f:	xchg   edx,eax
  407a50:	call   0xc9e5573
  407a55:	aas    
  407a56:	sub    al,0x87
  407a58:	add    bl,BYTE PTR [ecx-0x370bb9e9]
  407a5e:	add    edi,DWORD PTR [edi]
  407a60:	cmp    eax,DWORD PTR [ebx]
  407a62:	fst    DWORD PTR ds:0x62291602
  407a68:	mov    ebp,0x9461ed15
  407a6d:	adc    eax,0xddf87147
  407a72:	dec    edi
  407a73:	mov    dl,0x67
  407a75:	pushf  
  407a76:	dec    esi
  407a77:	mov    eax,ds:0xd6d3362e
  407a7c:	add    al,0x93
  407a7e:	add    BYTE PTR [eax],al
  407a80:	mov    ah,0x20
  407a82:	test   al,0x29
  407a84:	cmp    ch,bl
  407a86:	enter  0x13cd,0xaa
  407a8a:	sbb    edi,DWORD PTR [eax]
  407a8c:	xor    bl,BYTE PTR [edx]
  407a8e:	fimul  WORD PTR [edi]
  407a90:	das    
  407a91:	mov    al,0xbc
  407a93:	mov    cl,0xf6
  407a95:	es cmp dh,0xcd
  407a99:	icebp  
  407a9a:	pop    ss
  407a9b:	aam    0x45
  407a9d:	and    ah,BYTE PTR [ebp+0x78]
  407aa0:	push   eax
  407aa1:	je     0x407ab0
  407aa3:	test   DWORD PTR [ecx-0x23],0xbe24950b
  407aaa:	dec    esi
  407aab:	jmp    0x407a67
  407aad:	or     al,0x51
  407aaf:	jl     0x407a3f
  407ab1:	sub    bl,al
  407ab3:	push   es
  407ab4:	or     al,0x23
  407ab6:	and    BYTE PTR [ecx-0x3efe6708],bl
  407abc:	dec    ebx
  407abd:	imul   eax,DWORD PTR [eax-0x159530c9],0xffffff9b
  407ac4:	bound  eax,QWORD PTR [ebp+0x78]
  407ac7:	dec    esi
  407ac8:	inc    edx
  407ac9:	call   0xb3bb:0x48d99414
  407ad0:	pop    edi
  407ad1:	pusha  
  407ad2:	pushw  0xda9e
  407ad6:	inc    esi
  407ad7:	aad    0x20
  407ad9:	dec    eax
  407ada:	xor    eax,0x35584f0d
  407adf:	cmc    
  407ae0:	inc    eax
  407ae1:	push   0xad35
  407ae6:	dec    eax
  407ae7:	js     0x407b1e
  407ae9:	mov    ch,0x40
  407aeb:	mov    BYTE PTR [ecx-0x1dcf221f],ch
  407af1:	xor    ebx,DWORD PTR [ecx]
  407af3:	outs   dx,BYTE PTR ds:[esi]
  407af4:	or     bh,BYTE PTR [edx]
  407af6:	pop    es
  407af7:	inc    ebx
  407af8:	les    edx,FWORD PTR [edi]
  407afa:	imul   ebx,DWORD PTR [edx+0x2330a6eb],0xcf00a389
  407b04:	mov    ah,0x36
  407b06:	pop    ebx
  407b07:	sub    edi,esi
  407b09:	cmp    DWORD PTR [ebx],esi
  407b0b:	xor    al,0x1
  407b0d:	in     eax,dx
  407b0e:	and    eax,0x24413290
  407b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b14:	xor    bh,BYTE PTR ds:0x1632ac24
  407b1a:	xchg   BYTE PTR [eax-0x58],bh
  407b1d:	xchg   ebp,eax
  407b1e:	xchg   ebp,eax
  407b1f:	or     DWORD PTR [ebx+0x5f],esp
  407b22:	xchg   ecx,eax
  407b23:	inc    bp
  407b25:	sar    BYTE PTR [esi+0x67],1
  407b28:	sbb    eax,0xbcf8465a
  407b2d:	in     al,dx
  407b2e:	cld    
  407b2f:	mov    ebp,esi
  407b31:	mov    esp,es
  407b33:	scas   al,BYTE PTR es:[edi]
  407b34:	xor    eax,0x8d4c9200
  407b39:	xor    al,0x62
  407b3b:	dec    esp
  407b3c:	popf   
  407b3d:	xor    al,0x82
  407b3f:	dec    esp
  407b40:	lods   eax,DWORD PTR ds:[esi]
  407b41:	xor    al,0x22
  407b43:	dec    esp
  407b44:	mov    ebp,0xe32d1234
  407b49:	les    eax,FWORD PTR [eax]
  407b4b:	add    BYTE PTR [eax+esi*4-0x6d],al
  407b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b50:	push   0xcc41bd48
  407b55:	xchg   DWORD PTR [edi-0x4b78ff79],esi
  407b5b:	inc    ebp
  407b5c:	(bad)  
  407b5d:	call   0xf5ce0f2c
  407b62:	dec    ecx
  407b63:	xor    al,0x3e
  407b65:	dec    esp
  407b66:	lds    esi,FWORD PTR [esi+eiz*2]
  407b69:	dec    esp
  407b6a:	int    0x34
  407b6c:	pop    esi
  407b6d:	dec    esp
  407b6e:	add    eax,0xb94b9635
  407b73:	ss pop esi
  407b75:	inc    ebx
  407b76:	test   al,0xed
  407b78:	sahf   
  407b79:	jno    0x407baf
  407b7b:	adc    ecx,ebp
  407b7d:	mov    ss,WORD PTR [ebx]
  407b7f:	pop    ds
  407b80:	dec    edx
  407b81:	shl    BYTE PTR [edx+0x21],cl
  407b84:	les    edx,FWORD PTR [esi-0x3c]
  407b87:	dec    esi
  407b88:	neg    bh
  407b8a:	das    
  407b8b:	sub    eax,0x6e002372
  407b90:	cmp    cl,BYTE PTR [eax+0x49]
  407b93:	cmp    bl,dl
  407b95:	dec    esi
  407b96:	xchg   edi,eax
  407b97:	cmp    BYTE PTR [esi+0x4d],dl
  407b9a:	push   esi
  407b9b:	cmp    eax,esi
  407b9d:	dec    ebp
  407b9e:	(bad)  
  407b9f:	cmp    ebp,DWORD PTR [ecx]
  407ba1:	dec    edx
  407ba2:	ret    0xd39
  407ba5:	in     al,dx
  407ba6:	and    ecx,0x6e
  407ba9:	enter  0x466,0xe2
  407bad:	ja     0x407b5a
  407baf:	sbb    eax,DWORD PTR [eax]
  407bb1:	add    BYTE PTR [edi],dh
  407bb3:	mov    ch,0x1b
  407bb5:	xor    DWORD PTR ds:0x8e3cd64c,edi
  407bbb:	popa   
  407bbc:	es xor ecx,esi
  407bbf:	call   FWORD PTR [esi]
  407bc1:	mov    dh,BYTE PTR [eax]
  407bc3:	pop    edi
  407bc4:	pop    ds
  407bc5:	shr    BYTE PTR [eax],1
  407bc7:	mov    ecx,0x1b37001e
  407bcc:	mov    ds:0x1bb3700,al
  407bd1:	add    BYTE PTR [edi],dh
  407bd3:	pop    ecx
  407bd4:	ja     0x407bc7
  407bd6:	pop    es
  407bd7:	adc    ah,BYTE PTR [edi]
  407bd9:	push   es
  407bda:	es fwait
  407bdc:	adc    bh,BYTE PTR [edi]
  407bde:	aad    0x7d
  407be0:	sar    DWORD PTR [edx-0xf5a179b],cl
  407be6:	rcl    edx,cl
  407be8:	add    bl,BYTE PTR [edi]
  407bea:	(bad)  
  407beb:	mov    dl,0xc1
  407bed:	ret    0x1c63
  407bf0:	sbb    DWORD PTR [ecx+0x4a],esp
  407bf3:	(bad)  
  407bf4:	sbb    DWORD PTR [ebx+0x6f193a42],ebx
  407bfa:	dec    ecx
  407bfb:	js     0x407c11
  407bfd:	xor    eax,0x875d0b40
  407c02:	bound  edi,QWORD PTR [ebx-0x5c85bdf8]
  407c08:	cld    
  407c09:	mov    ch,0x68
  407c0b:	or     al,0x3d
  407c0d:	pop    edi
  407c0e:	pushf  
  407c0f:	(bad)  
  407c10:	mov    al,ds:0xbb67eea9
  407c15:	fiadd  DWORD PTR [eax]
  407c17:	add    BYTE PTR [esi-0x5d],ch
  407c1a:	inc    eax
  407c1b:	idiv   dh
  407c1d:	lds    ebx,FWORD PTR [ecx]
  407c1f:	fsin   
  407c21:	call   0x4ad8e3f
  407c26:	sbb    BYTE PTR [ebp*2+0x5d6b182d],ah
  407c2d:	xor    al,0x70
  407c2f:	sbb    dl,BYTE PTR [ebx]
  407c31:	loope  0x407bda
  407c33:	aaa    
  407c34:	mov    DWORD PTR [ecx+ebp*8+0x3e565174],0x50f4f802
  407c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c40:	mov    ds:0x95e97778,eax
  407c45:	mov    ah,0x85
  407c47:	jnp    0x407c21
  407c49:	lea    ecx,[edi+0x6067e520]
  407c4f:	and    BYTE PTR ds:0x5b1ea767,ah
  407c55:	addr16 nop
  407c57:	pop    ds
  407c58:	loope  0x407cc0
  407c5a:	pop    es
  407c5b:	push   ds
  407c5c:	pop    es
  407c5d:	add    al,BYTE PTR [ebx-0x7b]
  407c60:	outs   dx,DWORD PTR ds:[esi]
  407c61:	or     ebx,DWORD PTR [edx]
  407c63:	les    esp,FWORD PTR ss:[ecx]
  407c66:	call   0xb406:0xa1f43df0
  407c6d:	push   ds
  407c6e:	sbb    DWORD PTR [ebx+0xa],0xedb0904
  407c75:	mov    esi,0x644e13ad
  407c7a:	test   BYTE PTR [ebx],dl
  407c7c:	add    BYTE PTR [eax],al
  407c7e:	adc    esp,DWORD PTR [ecx+edx*2+0x14]
  407c82:	jns    0x407ce7
  407c84:	in     eax,0x12
  407c86:	inc    eax
  407c87:	arpl   WORD PTR [edx+0x49630c12],bx
  407c8d:	aaa    
  407c8e:	or     dl,0x3c
  407c91:	or     BYTE PTR [ecx],ah
  407c93:	js     0x407c27
  407c95:	pcmpgtb mm4,QWORD PTR [esi-0x2d]
  407c99:	xchg   DWORD PTR [edx-0x80],esi
  407c9c:	mov    bl,BYTE PTR [ecx]
  407c9e:	mov    ch,0x2c
  407ca0:	add    eax,0xc9d621
  407ca5:	jecxz  0x407cd6
  407ca7:	add    dx,sp
  407caa:	inc    esi
  407cab:	inc    edx
  407cac:	xor    edx,ebx
  407cae:	inc    esi
  407caf:	xchg   DWORD PTR [ebx],esi
  407cb1:	pop    ebx
  407cb2:	inc    esi
  407cb3:	jmp    0x3b67d6ea
  407cb8:	xor    eax,0x3eab173f
  407cbd:	je     0x407cfb
  407cbf:	and    eax,0x63741559
  407cc4:	sub    BYTE PTR [ebp-0x3c],dh
  407cc7:	enter  0x9946,0xc3
  407ccb:	jns    0x407cdd
  407ccd:	(bad)  
  407ccf:	mov    ebx,0xb2d4b65e
  407cd4:	xor    eax,0x39903300
  407cd9:	(bad)  
  407cda:	sub    al,0x6
  407cdc:	cmp    DWORD PTR [eax+0x1c],eax
  407cdf:	push   0x6e38
  407ce4:	sbb    eax,0x4d3437e9
  407ce9:	push   edx
  407cea:	retf   0x75b6
  407ced:	dec    ax
  407cef:	add    eax,eax
  407cf1:	sub    BYTE PTR [eax],bl
  407cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cf4:	mov    esp,DWORD PTR [edx+0x70]
  407cf7:	mov    ebx,0x84c58ed3
  407cfc:	cmp    BYTE PTR [ecx+0x5f],cl
  407cff:	or     ah,BYTE PTR [eax+0x1af57f56]
  407d05:	je     0x407d46
  407d07:	mov    dl,0x52
  407d09:	les    edi,FWORD PTR [esi]
  407d0b:	or     ecx,DWORD PTR [edx+0x69]
  407d0e:	ds jmp 0x6941b108
  407d14:	xor    esi,DWORD PTR [edx+eiz*8]
  407d17:	lods   eax,DWORD PTR ds:[esi]
  407d18:	adc    DWORD PTR [esi],ebp
  407d1a:	mov    edx,0xc1e0075f
  407d1f:	dec    ebx
  407d20:	mov    esi,0xcc005516
  407d25:	mov    bl,0x7f
  407d27:	(bad)  
  407d29:	test   DWORD PTR [ebp-0x17],esp
  407d2c:	push   ds
  407d2d:	call   0x342d:0x3ed22618
  407d34:	sti    
  407d35:	test   BYTE PTR ss:[ecx*8+0x634ee43],dh
  407d3d:	inc    esp
  407d3e:	and    dh,BYTE PTR ds:0x35b2458e
  407d44:	lock dec ebp
  407d46:	nop
  407d47:	mov    al,0x0
  407d49:	add    BYTE PTR [edi+0x2109b8f0],dl
  407d4f:	xchg   edx,eax
  407d50:	mov    esp,0xb55f19da
  407d55:	icebp  
  407d56:	aaa    
  407d57:	pop    eax
  407d58:	daa    
  407d59:	bound  ebx,QWORD PTR [esp+edx*2+0xe734e4]
  407d60:	js     0x407d9a
  407d62:	std    
  407d63:	inc    edi
  407d64:	pop    es
  407d65:	cmp    edi,ebx
  407d67:	inc    edi
  407d68:	outs   dx,DWORD PTR ds:[esi]
  407d69:	cmp    DWORD PTR [edi-0x76c615b8],esi
  407d6f:	dec    eax
  407d70:	and    edi,DWORD PTR [edx]
  407d72:	rol    DWORD PTR [edi-0x3f597a61],1
  407d78:	data16 xlat BYTE PTR ds:[ebx]
  407d7a:	jecxz  0x407db2
  407d7c:	loopne 0x407d67
  407d7e:	shr    DWORD PTR [eax-0x7e],0x4
  407d82:	leave  
  407d83:	and    eax,0x6b15641
  407d88:	out    dx,eax
  407d89:	mov    DWORD PTR [edx+0x23f1a18],ebp
  407d8f:	dec    ebx
  407d90:	stos   DWORD PTR es:[edi],eax
  407d91:	aas    
  407d92:	dec    esi
  407d93:	bound  eax,QWORD PTR [ecx]
  407d95:	add    dh,ch
  407d97:	das    
  407d98:	add    DWORD PTR [eax],eax
  407d9a:	pop    esi
  407d9b:	inc    edx
  407d9c:	dec    ecx
  407d9d:	xor    BYTE PTR [edi],dh
  407d9f:	jne    0x407db6
  407da1:	das    
  407da2:	mov    ebx,0x7536e4c1
  407da7:	jne    0x407d9f
  407da9:	es test al,0xf3
  407dac:	ror    BYTE PTR [eax],0x0
  407daf:	add    dl,cl
  407db1:	push   ds
  407db2:	xor    dl,BYTE PTR [ecx+0xab9152b]
  407db8:	mov    dh,0x50
  407dba:	mov    edx,0x13bc43e5
  407dbf:	push   cs
  407dc0:	inc    esp
  407dc1:	xor    al,0x16
  407dc3:	test   eax,0x716e144
  407dc8:	inc    ebx
  407dc9:	inc    ecx
  407dca:	adc    DWORD PTR [edi-0x4f18dd5],ecx
  407dd0:	call   0x62d755cf
  407dd5:	adc    BYTE PTR [eax+0x15],al
  407dd8:	cmp    ch,BYTE PTR [eax]
  407dda:	jecxz  0x407dcb
  407ddc:	sub    ch,BYTE PTR [ebp+0x6d90cb41]
  407de2:	add    edx,DWORD PTR [edi+edx*2-0x123c6423]
  407de9:	mov    al,ds:0x7372d216
  407dee:	sbb    DWORD PTR [eax+0x68],esp
  407df1:	lock sbb al,BYTE PTR [eax]
  407df4:	aaa    
  407df5:	sbb    esp,DWORD PTR [edx+0x0]
  407df8:	aaa    
  407df9:	aas    
  407dfa:	add    al,BYTE PTR [eax]
  407dfc:	aaa    
  407dfd:	mov    edx,0xeca87245
  407e02:	inc    edi
  407e03:	mov    cl,0x70
  407e05:	sbb    eax,0xcd514ca6
  407e0a:	loope  0x407e40
  407e0c:	inc    ecx
  407e0d:	jae    0x407dfc
  407e0f:	mov    ds:0x3bc020ad,eax
  407e14:	add    BYTE PTR [eax],al
  407e16:	ficomp WORD PTR [ebp+0xd]
  407e19:	add    BYTE PTR ds:0x1161134,ah
  407e1f:	bound  esi,QWORD PTR [edi]
  407e21:	push   ss
  407e22:	jmp    0xc656be88
  407e27:	popa   
  407e28:	imul   edx,DWORD PTR [esi],0xffffffa3
  407e2b:	bound  esp,QWORD PTR [edx+0x55]
  407e2e:	inc    esi
  407e2f:	dec    esp
  407e30:	fs std 
  407e32:	and    BYTE PTR [edx],dl
  407e34:	inc    ebp
  407e35:	mov    ch,0x7d
  407e37:	dec    edx
  407e38:	xlat   BYTE PTR ds:[ebx]
  407e39:	and    eax,0xdd09b1df
  407e3e:	pop    ebp
  407e3f:	adc    esi,ebx
  407e41:	popa   
  407e42:	and    DWORD PTR [eax],esi
  407e44:	ficom  DWORD PTR [edi-0x6f]
  407e47:	popa   
  407e48:	das    
  407e49:	adc    eax,0x15026184
  407e4e:	mov    bh,0x60
  407e50:	jno    0x407e67
  407e52:	mov    eax,0xf915a860
  407e57:	pusha  
  407e58:	cwde   
  407e59:	mov    edi,0x219c1696
  407e5e:	adc    ah,ch
  407e60:	(bad)  
  407e62:	mov    eax,ds:0xc59bc7d5
  407e67:	xchg   esp,eax
  407e68:	xlat   BYTE PTR ds:[ebx]
  407e69:	inc    edx
  407e6a:	js     0x407e92
  407e6c:	and    cl,al
  407e6e:	out    dx,al
  407e6f:	mov    eax,0x86bd5d89
  407e74:	or     DWORD PTR gs:[ecx],0xfffffff8
  407e78:	neg    DWORD PTR [ecx]
  407e7a:	add    BYTE PTR [eax],al
  407e7c:	adc    al,0xd5
  407e7e:	cs into 
  407e80:	(bad)  
  407e81:	(bad)  
  407e82:	jno    0x407e3a
  407e84:	outs   dx,BYTE PTR ds:[esi]
  407e85:	cmp    al,0x1f
  407e87:	push   esp
  407e88:	test   DWORD PTR [edi+0x91f7722],edx
  407e8e:	and    DWORD PTR [ebx+0x2c76f28e],ecx
  407e94:	(bad)  
  407e95:	out    0x0,al
  407e97:	pop    esi
  407e98:	mov    ds:0x4416740b,al
  407e9d:	add    BYTE PTR [edi-0x558dfc0d],ah
  407ea3:	inc    esp
  407ea4:	push   0xffffffd5
  407ea6:	mov    bl,0xe9
  407ea8:	xor    al,0x33
  407eaa:	add    cl,ch
  407eac:	xor    al,0x34
  407eae:	add    ecx,ebp
  407eb0:	xor    al,0x34
  407eb2:	add    eax,ebp
  407eb4:	xor    eax,0x35e90134
  407eb9:	ss add ah,ch
  407ebc:	sbb    DWORD PTR [edx],edi
  407ebe:	push   es
  407ebf:	icebp  
  407ec0:	cmp    eax,0x31ed0a2e
  407ec5:	xor    cl,BYTE PTR [esi]
  407ec7:	stc    
  407ec8:	add    eax,0x9f51246
  407ecd:	dec    edx
  407ece:	push   ss
  407ecf:	loope  0x407ebe
  407ed1:	cmp    eax,0x41e1dd1a
  407ed6:	push   ds
  407ed7:	leave  
  407ed8:	adc    eax,0x39c52256
  407edd:	pop    edx
  407ede:	adc    DWORD PTR es:[eax],eax
  407ee1:	add    BYTE PTR [esi+ecx*2],bl
  407ee4:	sub    cl,BYTE PTR ds:0x192e5210
  407eea:	and    al,0x66
  407eec:	xor    dl,BYTE PTR ds:0x1366a28
  407ef2:	dec    esp
  407ef3:	pop    esi
  407ef4:	cmp    bh,ch
  407ef6:	inc    ecx
  407ef7:	bound  edi,QWORD PTR [esi]
  407ef9:	test   eax,0xc5629595
  407efe:	jns    0x407e99
  407f00:	xchg   cx,ax
  407f02:	popf   
  407f03:	lea    ebp,[edx-0x73]
  407f06:	xchg   ecx,eax
  407f07:	xchg   ecx,eax
  407f08:	outs   dx,BYTE PTR ds:[esi]
  407f09:	cdq    
  407f0a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407f0c:	jb     0x407ea3
  407f0e:	imul   ebp,DWORD PTR [ecx-0x149ff8a],0xeaca5b77
  407f18:	pop    ebx
  407f19:	pop    edi
  407f1a:	scas   al,BYTE PTR es:[edi]
  407f1b:	push   ss
  407f1c:	pusha  
  407f1d:	arpl   WORD PTR [edx-0x19989bfe],si
  407f23:	adc    BYTE PTR [eax+0x6b],ch
  407f26:	cli    
  407f27:	or     al,0x6c
  407f29:	outs   dx,DWORD PTR ds:[esi]
  407f2a:	fimul  WORD PTR [eax]
  407f2c:	jo     0x407fa1
  407f2e:	loop   0x407f34
  407f30:	je     0x407fa9
  407f32:	jbe    0x407f35
  407f34:	js     0x407fb1
  407f36:	push   0xfffffffd
  407f38:	jnp    0x407fb9
  407f3a:	mov    ?,WORD PTR [ecx-0x4a6d7c7e]
  407f40:	xchg   BYTE PTR [edi-0x74754e7a],al
  407f46:	add    BYTE PTR [eax],al
  407f48:	call   0x93a9:0x7e8f8ead
  407f4f:	xchg   ebx,eax
  407f50:	and    BYTE PTR [ebp-0x5ea96869],0x9b
  407f57:	fwait
  407f58:	mov    bl,BYTE PTR [ebp-0x26916061]
  407f5e:	mov    ds:0xa6d572a3,al
  407f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f65:	shr    BYTE PTR [edx-0x51334555],1
  407f6b:	scas   eax,DWORD PTR es:[edi]
  407f6c:	sahf   
  407f6d:	enter  0xb3b2,0xa2
  407f71:	les    esi,FWORD PTR [esi-0x453f4949]
  407f77:	mov    ebx,0xbfbebd2a
  407f7c:	dec    esi
  407f7d:	jns    0x407f42
  407f7f:	ret    
  407f80:	push   edx
  407f81:	jne    0x407f4a
  407f83:	mov    DWORD PTR [esi+0x71],0x6d5acbcb
  407f8a:	iret   
  407f8b:	iret   
  407f8c:	aaa    
  407f8d:	pop    ebp
  407f8e:	xor    al,0xd2
  407f90:	fs push 0x5488d630
  407f96:	cmp    al,0xda
  407f98:	mov    WORD PTR [eax+0x38],es
  407f9b:	fiadd  WORD PTR [eax+0x54e2642c]
  407fa1:	cmp    BYTE PTR [eax-0x1a],ah
  407fa4:	pop    eax
  407fa5:	add    al,0x6d
  407fa7:	jmp    0x0:0xee68f05c
  407fae:	push   eax
  407faf:	cld    
  407fb0:	push   esp
  407fb1:	repnz inc esp
  407fb3:	or     BYTE PTR [ecx-0xa],dl
  407fb6:	sub    ah,dh
  407fb8:	pop    esp
  407fb9:	cli    
  407fba:	sub    al,0xe0
  407fbc:	pop    eax
  407fbd:	(bad)  
  407fbe:	and    BYTE PTR [eax*1+0x1173402],cl
  407fc5:	push   es
  407fc6:	cmp    BYTE PTR [ebx],ah
  407fc8:	or     eax,0x90f3c0a
  407fcd:	push   cs
  407fce:	xor    BYTE PTR [ebx],bl
  407fd0:	cmc    
  407fd1:	adc    DWORD PTR [edi+eiz*1],esp
  407fd4:	icebp  
  407fd5:	adc    eax,0x19fd1348
  407fda:	dec    esp
  407fdb:	(bad)  
  407fdc:	clc    
  407fdd:	sbb    eax,0x2224eb40
  407fe2:	adc    al,0xf7
  407fe4:	and    BYTE PTR [esi],ah
  407fe6:	sbb    BYTE PTR [ebx+0x2c],al
  407fe9:	sub    bl,BYTE PTR [edi+ebp*1]
  407fec:	sub    BYTE PTR [esi],ch
  407fee:	adc    BYTE PTR [ebx],bh
  407ff0:	adc    al,0x32
  407ff2:	add    al,0x47
  407ff4:	adc    BYTE PTR [esi],dh
  407ff6:	push   0x6c3a1c33
  407ffb:	pop    ds
  407ffc:	sbb    DWORD PTR [esi],edi
  407ffe:	pusha  
  407fff:	retf   
  408000:	in     al,0x61
  408002:	adc    al,0xf7
  408004:	loopne 0x40806b
  408006:	sbb    BYTE PTR [eax+edx*4],dh
  408009:	in     al,dx
  40800a:	push   ds
  40800b:	lea    ecx,[eax+ebp*8-0x2b676eee]
  408012:	add    BYTE PTR [eax],al
  408014:	push   es
  408015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408016:	xchg   esp,eax
  408017:	shr    dl,1
  408019:	test   al,0x80
  40801b:	fsub   st(6),st
  40801d:	jl     0x407fbb
  40801f:	mov    eax,0xc4888102
  408024:	div    BYTE PTR [esp+eiz*4-0x40]
  408028:	cli    
  408029:	js     0x40805b
  40802b:	retf   
  40802c:	(bad)  
  40802d:	ins    BYTE PTR es:[edi],dx
  40802e:	sub    al,0xc7
  408030:	bnd jo 0x40806b
  408033:	mov    bl,0xe6
  408035:	test   BYTE PTR [edi+ebp*4],dh
  408038:	mov    cl,BYTE PTR [ecx-0x627144e0]
  40803e:	cmp    al,0xd7
  408040:	mov    ds:0xb58368a1,al
  408045:	mov    ah,0x63
  408047:	jg     0x408002
  408049:	mov    eax,0xacbd8b6f
  40804e:	imul   eax,DWORD PTR [edi+0x7377b0b1],0xffffffa5
  408055:	les    esi,FWORD PTR [ebx+0x6f]
  408058:	leave  
  408059:	enter  0x7b5f,0xcd
  40805d:	mov    esp,0xc0c1775b
  408062:	inc    edi
  408063:	mov    ds:0x9f43d495,eax
  408068:	cdq    
  408069:	fmul   DWORD PTR [edi-0x74336255]
  40806f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408070:	xchg   ecx,eax
  408071:	rcl    BYTE PTR [edi-0x6c1b7a6d],1
  408077:	pop    DWORD PTR [eax]
  408079:	add    cl,ch
  40807b:	call   0xdd2e1bff
  408080:	jnp    0x408019
  408082:	loope  0x408064
  408084:	add    BYTE PTR [ecx],ch
  408086:	hlt    
  408087:	cmc    
  408088:	shl    DWORD PTR ds:0x31c5fa50,0xfc
  40808f:	in     eax,dx
  408090:	leave  
  408091:	sub    eax,0x39cdf1f8
  408096:	inc    esp
  408097:	push   es
  408098:	shl    BYTE PTR ds:0x21d60a20,cl
  40809e:	sub    al,0xfe
  4080a0:	fstp   DWORD PTR ds:0x9de0228
  4080a6:	aam    0x15
  4080a8:	loop   0x4080af
  4080aa:	lock sbb esi,esp
  4080ad:	rcr    ebp,1
  4080af:	or     eax,0x11d9cdea
  4080b4:	out    dx,al
  4080b5:	fxam   
  4080b7:	and    eax,0x2681d5f2
  4080bc:	test   cl,0x8d
  4080bf:	sbb    bh,dl
  4080c1:	mov    ebp,0xe9fe1e89
  4080c6:	inc    edx
  4080c7:	xor    al,0x1
  4080c9:	call   0xe941b502
  4080ce:	xor    al,0x34
  4080d0:	add    ecx,ebp
  4080d2:	xor    al,0x34
  4080d4:	add    ecx,ebp
  4080d6:	xor    al,0x34
  4080d8:	add    ecx,ebp
  4080da:	xor    al,0x34
  4080dc:	add    ecx,ebp
  4080de:	add    BYTE PTR [eax],al
  4080e0:	xor    al,0x34
  4080e2:	add    ecx,ebp
  4080e4:	xor    al,0x34
  4080e6:	add    ecx,ebp
  4080e8:	xor    al,0x34
  4080ea:	add    ecx,ebp
  4080ec:	xor    al,0x1f
  4080ee:	add    ah,bh
  4080f0:	xor    al,0x34
  4080f2:	add    edi,ebx
  4080f4:	xor    al,0x34
  4080f6:	add    ecx,ebp
  4080f8:	xor    al,0x34
  4080fa:	add    ecx,ebp
  4080fc:	xor    al,0x34
  4080fe:	add    DWORD PTR [eax],eax
  408100:	sahf   
  408101:	xor    eax,DWORD PTR [ecx]
  408103:	add    BYTE PTR [esi-0x71fffecd],cl
  408109:	xor    eax,DWORD PTR [ecx]
  40810b:	add    BYTE PTR [esi-0x61fc01cd],bl
  408111:	xor    eax,DWORD PTR [ecx]
  408113:	add    BYTE PTR [esi-0x71fffecd],cl
  408119:	xor    eax,DWORD PTR [ecx]
  40811b:	add    BYTE PTR [esi+0x33],bl
  40811e:	add    DWORD PTR [eax],eax
  408120:	pop    esi
  408121:	xor    eax,DWORD PTR [ecx]
  408123:	add    BYTE PTR [esi+0x33],cl
  408126:	add    DWORD PTR [eax],eax
  408128:	dec    esi
  408129:	xor    eax,DWORD PTR [ecx]
  40812b:	add    BYTE PTR [esi+0x33],bl
  40812e:	add    DWORD PTR [eax],eax
  408130:	push   eax
  408131:	cmp    esi,0x7
  408134:	dec    esi
  408135:	xor    eax,DWORD PTR [ecx]
  408137:	add    BYTE PTR [esi+0x33],cl
  40813a:	add    DWORD PTR [eax],eax
  40813c:	push   ds
  40813d:	xor    eax,DWORD PTR [ecx]
  40813f:	add    BYTE PTR [esi],bl
  408141:	xor    eax,DWORD PTR [ecx]
  408143:	add    BYTE PTR [eax],al
  408145:	add    BYTE PTR [esi],cl
  408147:	xor    eax,DWORD PTR [ecx]
  408149:	add    BYTE PTR [esi],cl
  40814b:	xor    eax,DWORD PTR [ecx]
  40814d:	add    BYTE PTR [esi],bl
  40814f:	xor    eax,DWORD PTR [ecx]
  408151:	add    BYTE PTR [esi],bl
  408153:	xor    eax,DWORD PTR [ecx]
  408155:	add    BYTE PTR [eax+0xe07fe82],ah
  40815b:	xor    eax,DWORD PTR [ecx]
  40815d:	add    dh,bl
  40815f:	xor    al,BYTE PTR [ecx]
  408161:	add    dh,bl
  408163:	xor    al,BYTE PTR [ecx]
  408165:	add    dh,cl
  408167:	xor    al,BYTE PTR [ecx]
  408169:	add    dh,cl
  40816b:	xor    al,BYTE PTR [ecx]
  40816d:	add    dh,bl
  40816f:	xor    bh,dh
  408171:	add    edx,DWORD PTR [eax-0x7d]
  408174:	inc    BYTE PTR [edi+0x7fe8360]
  40817a:	aaa    
  40817b:	or     eax,0xd370002
  408180:	add    al,BYTE PTR [eax]
  408182:	aaa    
  408183:	or     eax,0xd370002
  408188:	add    al,BYTE PTR [eax]
  40818a:	aaa    
  40818b:	or     eax,0x4f370002
  408190:	push   edx
  408191:	dec    DWORD PTR [eax-0x7f00adab]
  408197:	cmp    eax,0xcf8ff52
  40819c:	add    al,BYTE PTR [eax]
  40819e:	aaa    
  40819f:	or     eax,0xd370002
  4081a4:	add    al,BYTE PTR [eax]
  4081a6:	aaa    
  4081a7:	or     eax,0x2
  4081ac:	aaa    
  4081ad:	or     eax,0xe370002
  4081b2:	push   ebx
  4081b3:	dec    DWORD PTR [eax+0x15]
  4081b6:	push   ebx
  4081b7:	inc    DWORD PTR [eax-0x3]
  4081ba:	push   edx
  4081bb:	(bad)  
  4081bc:	mov    eax,0x3700020c
  4081c1:	or     eax,DWORD PTR [edx]
  4081c3:	add    BYTE PTR [edi],dh
  4081c5:	or     eax,DWORD PTR [edx]
  4081c7:	add    BYTE PTR [edi],dh
  4081c9:	or     eax,DWORD PTR [edx]
  4081cb:	add    BYTE PTR [edi],dh
  4081cd:	or     eax,DWORD PTR [edx]
  4081cf:	add    BYTE PTR [edi],dh
  4081d1:	int    0x52
  4081d3:	add    BYTE PTR [ebx],cl
  4081d5:	or     eax,0xcff0002
  4081da:	add    al,BYTE PTR [eax]
  4081dc:	jg     0x4081e9
  4081de:	add    al,BYTE PTR [eax]
  4081e0:	aaa    
  4081e1:	or     eax,DWORD PTR [edx]
  4081e3:	add    BYTE PTR [edi],dh
  4081e5:	or     eax,DWORD PTR [edx]
  4081e7:	add    BYTE PTR [edi],dh
  4081e9:	or     eax,DWORD PTR [edx]
  4081eb:	add    BYTE PTR [edi],dh
  4081ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081ee:	push   ebx
  4081ef:	call   eax
  4081f1:	or     eax,DWORD PTR [edx]
  4081f3:	add    BYTE PTR [edi],dh
  4081f5:	xor    al,0xe8
  4081f7:	add    esi,DWORD PTR [edi]
  4081f9:	xor    al,0xe8
  4081fb:	add    esi,DWORD PTR [edi]
  4081fd:	mov    ah,0xe7
  4081ff:	add    esi,DWORD PTR [edi]
  408201:	xor    al,0xe8
  408203:	add    esi,DWORD PTR [edi]
  408205:	xor    al,0xe8
  408207:	add    esi,DWORD PTR [edi]
  408209:	xor    al,0xe8
  40820b:	add    esi,DWORD PTR [edi]
  40820d:	xor    al,0x68
  40820f:	add    eax,DWORD PTR [eax]
  408211:	add    BYTE PTR [edi],dh
  408213:	xor    al,0xe8
  408215:	add    esi,DWORD PTR [edi]
  408217:	xor    al,0xe8
  408219:	add    al,0x36
  40821b:	xor    al,0xe9
  40821d:	add    al,0x37
  40821f:	xor    al,0xe8
  408221:	add    esi,DWORD PTR [edi]
  408223:	xor    al,0xe8
  408225:	add    esi,DWORD PTR [edi]
  408227:	xor    al,0xe8
  408229:	add    esi,DWORD PTR [edi]
  40822b:	xor    al,0xe8
  40822d:	add    esi,DWORD PTR [edi]
  40822f:	xor    al,0xe9
  408231:	add    esi,DWORD PTR [edi]
  408233:	xor    al,0x68
  408235:	add    esi,DWORD PTR [edi]
  408237:	xor    al,0x68
  408239:	test   BYTE PTR [edi-0x48fc184c],dh
  40823f:	xor    al,0xf4
  408241:	out    dx,eax
  408242:	dec    esp
  408243:	inc    eax
  408244:	in     al,dx
  408245:	out    dx,eax
  408246:	dec    esp
  408247:	inc    eax
  408248:	in     al,0xef
  40824a:	and    BYTE PTR ds:0xb43703e8,bl
  408250:	out    0xed,eax
  408252:	cs cmp dl,dl
  408255:	in     eax,dx
  408256:	cs inc edx
  408258:	cli    
  408259:	cmc    
  40825a:	es inc edx
  40825c:	cli    
  40825d:	cmc    
  40825e:	es inc edx
  408260:	cli    
  408261:	cmc    
  408262:	inc    esi
  408263:	inc    edx
  408264:	cli    
  408265:	cmc    
  408266:	inc    esi
  408267:	inc    edx
  408268:	(bad)  
  40826a:	inc    esi
  40826b:	mov    ah,0x67
  40826d:	add    al,0xb7
  40826f:	inc    ebx
  408270:	add    ecx,ebp
  408272:	loop   0x4082ae
  408274:	sbb    edx,ebx
  408276:	add    BYTE PTR [eax],al
  408278:	fidivr DWORD PTR [edx]
  40827a:	adc    edi,ebx
  40827c:	retf   0x1342
  40827f:	sti    
  408280:	ret    0x1342
  408283:	sti    
  408284:	stos   BYTE PTR es:[edi],al
  408285:	inc    edx
  408286:	adc    edi,ebx
  408288:	mov    ds:0xaadb1342,al
  40828d:	inc    edx
  40828e:	sub    DWORD PTR [ecx+0x33],0x34e90134
  408295:	xor    al,0x1
  408297:	jmp    0xe941b6d0
  40829c:	xor    al,0x34
  40829e:	add    ecx,ebp
  4082a0:	xor    al,0x34
  4082a2:	add    ecx,ebp
  4082a4:	xor    al,0x34
  4082a6:	add    ecx,ebp
  4082a8:	xor    al,0x34
  4082aa:	add    ecx,ebp
  4082ac:	xor    al,0x34
  4082ae:	add    ecx,ebp
  4082b0:	xor    al,0x34
  4082b2:	add    ecx,ebp
  4082b4:	xor    al,0x34
  4082b6:	add    ecx,ebp
  4082b8:	xor    al,0x34
  4082ba:	add    ecx,ebp
  4082bc:	xor    al,0x34
  4082be:	add    ecx,ebp
  4082c0:	xor    al,0x34
  4082c2:	add    ecx,ebp
  4082c4:	xor    al,0x34
  4082c6:	add    ecx,ebp
  4082c8:	xor    al,0x34
  4082ca:	add    ecx,ebp
  4082cc:	xor    al,0x34
  4082ce:	add    ecx,ebp
  4082d0:	xor    al,0x34
  4082d2:	add    ecx,ebp
  4082d4:	xor    al,0x34
  4082d6:	add    ecx,ebp
  4082d8:	xor    al,0x34
  4082da:	add    ecx,ebp
  4082dc:	add    BYTE PTR [eax],al
  4082de:	xor    al,0x34
  4082e0:	add    ecx,ebp
  4082e2:	xor    al,0x34
  4082e4:	add    ecx,ebp
  4082e6:	xor    al,0x34
  4082e8:	add    ecx,ebp
  4082ea:	xor    al,0x34
  4082ec:	add    DWORD PTR [eax],eax
  4082ee:	into   
  4082ef:	aaa    
  4082f0:	add    DWORD PTR [eax],eax
  4082f2:	into   
  4082f3:	aaa    
  4082f4:	add    DWORD PTR [eax],eax
  4082f6:	fidiv  WORD PTR [edi]
  4082f8:	add    DWORD PTR [eax],eax
  4082fa:	fidiv  WORD PTR [edi]
  4082fc:	add    DWORD PTR [eax],eax
  4082fe:	into   
  4082ff:	aaa    
  408300:	add    DWORD PTR [eax],eax
  408302:	into   
  408303:	aaa    
  408304:	add    DWORD PTR [eax],eax
  408306:	sahf   
  408307:	aaa    
  408308:	add    DWORD PTR [eax],eax
  40830a:	sahf   
  40830b:	aaa    
  40830c:	add    DWORD PTR [eax],eax
  40830e:	mov    ?,WORD PTR [edi]
  408310:	add    DWORD PTR [eax],eax
  408312:	mov    ?,WORD PTR [edi]
  408314:	add    DWORD PTR [eax],eax
  408316:	dec    esp
  408317:	mov    ds:0xc0424244,al
  40831c:	inc    ebx
  40831d:	inc    edx
  40831e:	lock jb 0x408326
  408321:	jae    0x408345
  408323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408324:	inc    esp
  408325:	inc    edx
  408326:	push   ebx
  408327:	pushf  
  408328:	inc    ebp
  408329:	inc    edx
  40832a:	sbb    DWORD PTR [ebp+esi*4+0x3e],eax
  40832e:	out    0xe3,eax
  408330:	aam    0x1
  408332:	test   eax,0x14eb2eff
  408337:	xor    eax,DWORD PTR [edi+0x49]
  40833a:	aam    0xa6
  40833c:	mov    eax,ds:0x2a2e92f1
  408341:	retf   
  408342:	add    BYTE PTR [eax],al
  408344:	adc    eax,0x4775e415
  408349:	call   0x891d:0x12d8f387
  408350:	adc    al,0x99
  408352:	or     eax,0x6e915b42
  408357:	dec    eax
  408358:	sahf   
  408359:	mov    ecx,0xb54ba88b
  40835e:	push   edi
  40835f:	mov    cs,ebx
  408361:	icebp  
  408362:	aad    0xb2
  408364:	add    eax,0x375ce6cb
  408369:	ins    DWORD PTR es:[edi],dx
  40836a:	cmc    
  40836b:	sbb    dl,0x6d
  40836e:	mov    ecx,0xca02f53c
  408373:	sub    DWORD PTR [esi-0x4c],esi
  408376:	cwde   
  408377:	outs   dx,BYTE PTR ds:[esi]
  408378:	and    al,0x7d
  40837a:	(bad)  [eax-0x3a]
  40837d:	pusha  
  40837e:	(bad)  
  40837f:	outs   dx,DWORD PTR ds:[esi]
  408380:	sbb    al,0xd
  408382:	jp     0x4083a8
  408384:	mov    bl,0x5c
  408386:	cmp    al,0xc7
  408388:	loop   0x40839a
  40838a:	mov    ah,0x71
  40838c:	add    DWORD PTR [edx],ecx
  40838e:	or     al,0x86
  408390:	aad    0xa9
  408392:	retf   0xe579
  408395:	jp     0x4083cd
  408397:	cdq    
  408398:	pop    esp
  408399:	pop    esi
  40839a:	cmp    ah,BYTE PTR [edx+0x5f5e531b]
  4083a0:	cmp    ch,BYTE PTR [ecx-0x19]
  4083a3:	(bad)  
  4083a4:	sbb    eax,0x11bbce
  4083a9:	add    BYTE PTR [esi+0x47002466],bl
  4083af:	pop    edi
  4083b0:	or     eax,0x401a0478
  4083b5:	ss data16 hlt 
  4083b8:	jb     0x4083b2
  4083ba:	imul   edi,DWORD PTR [edx],0xf914c722
  4083c0:	and    ah,BYTE PTR [esi+0x24]
  4083c3:	out    dx,al
  4083c4:	sahf   
  4083c5:	imul   ebx,DWORD PTR [eax-0x63],0x61
  4083c9:	arpl   dx,bx
  4083cb:	adc    ebp,DWORD PTR [eax-0x70]
  4083ce:	fidivr WORD PTR [edi+0x26b72174]
  4083d4:	pop    edi
  4083d5:	sbb    cl,al
  4083d7:	jmp    0x6c15:0xaad9fd36
  4083de:	nop
  4083df:	lods   eax,DWORD PTR ds:[esi]
  4083e0:	cs sub eax,0x59c13467
  4083e6:	fadd   DWORD PTR [esi-0x3e]
  4083e9:	(bad)  
  4083ea:	xor    DWORD PTR ds:[ecx-0x691c649a],0xdb3ee939
  4083f5:	xchg   ecx,eax
  4083f6:	dec    ebx
  4083f7:	or     bh,BYTE PTR [edx+0x58e39d17]
  4083fd:	jmp    0x5de9:0x399f1c44
  408404:	dec    edi
  408405:	cld    
  408406:	out    dx,al
  408407:	dec    eax
  408408:	in     eax,0x3a
  40840a:	retf   
  40840b:	push   ecx
  40840c:	pushf  
  40840d:	add    BYTE PTR gs:[eax],al
  408410:	(bad)  
  408411:	daa    
  408412:	sti    
  408413:	call   0x9291dcf5
  408418:	aad    0xb2
  40841a:	mov    dh,0xff
  40841c:	cmp    eax,0x7c529523
  408421:	clc    
  408422:	mov    ah,0x42
  408424:	add    eax,0xf2c8e73a
  408429:	in     eax,0xd2
  40842b:	push   ebx
  40842c:	test   al,0xcd
  40842e:	fs lock inc esp
  408431:	or     DWORD PTR [eax+0x1633f5e7],esp
  408437:	add    esi,DWORD PTR [edi]
  408439:	xor    al,0x68
  40843b:	add    DWORD PTR [edi],esi
  40843d:	xor    al,0xcd
  40843f:	add    esi,DWORD PTR [edi]
  408441:	xor    al,0xff
  408443:	add    dh,BYTE PTR [edi]
  408445:	xor    al,0xc8
  408447:	std    
  408448:	cmp    BYTE PTR [ecx],bl
  40844a:	add    eax,0xd8343704
  40844f:	add    al,0x37
  408451:	xor    al,0xc8
  408453:	std    
  408454:	and    BYTE PTR [ecx],bl
  408456:	or     eax,0xb9343704
  40845b:	add    al,0x37
  40845d:	xor    al,0x1
  40845f:	imul   esi,DWORD PTR ds:0x3b040134,0x339b0134
  408469:	xor    al,0x1
  40846b:	imul   esi,DWORD PTR ds:0x34cc0134,0x9a0134
  408475:	add    BYTE PTR [ebx],bh
  408477:	xor    al,0x1
  408479:	imul   esi,DWORD PTR ds:0x34c40134,0x337d0134
  408483:	xor    al,0x1
  408485:	mov    edx,eax
  408487:	sbb    dh,bh
  408489:	or     eax,0xe9013433
  40848e:	xor    al,0x34
  408490:	add    ecx,ebp
  408492:	xor    al,0x34
  408494:	add    DWORD PTR [esi-0x49fe8cf4],eax
  40849a:	push   cs
  40849b:	jae    0x40849e
  40849d:	jmp    0x8941b8d6
  4084a2:	sbb    eax,0xd1f0173
  4084a7:	jae    0x4084aa
  4084a9:	or     DWORD PTR [eax+ebx*2+0x1],ebp
  4084ad:	lock xor al,0x34
  4084b0:	add    eax,ebp
  4084b2:	xor    al,0x34
  4084b4:	add    DWORD PTR [ecx],edi
  4084b6:	ins    BYTE PTR es:[edi],dx
  4084b7:	pop    eax
  4084b8:	add    edi,ebp
  4084ba:	xor    al,0x34
  4084bc:	add    DWORD PTR [ecx+0x41013434],edx
  4084c2:	jl     0x40851c
  4084c4:	add    ebx,ebx
  4084c6:	xor    al,0x34
  4084c8:	add    DWORD PTR [ecx],eax
  4084ca:	xor    esi,DWORD PTR [ecx+eax*1]
  4084cd:	gs std 
  4084cf:	push   edi
  4084d0:	add    ecx,edi
  4084d2:	xor    al,0x34
  4084d4:	add    ecx,esi
  4084d6:	xor    al,0x34
  4084d8:	add    DWORD PTR [eax],eax
  4084da:	add    BYTE PTR [eax],al
  4084dc:	pop    esi
  4084dd:	jmp    0x40851c
  4084df:	add    BYTE PTR [edi],al
  4084e1:	xor    al,0x1
  4084e3:	add    dh,ah
  4084e5:	xor    eax,DWORD PTR [ecx]
  4084e7:	add    BYTE PTR [edx],ch
  4084e9:	jmp    0x408528
  4084eb:	add    BYTE PTR [ebx],al
  4084ed:	xor    al,0x1
  4084ef:	add    dl,bl
  4084f1:	xor    eax,DWORD PTR [ecx]
  4084f3:	add    bh,bl
  4084f5:	xor    al,BYTE PTR [eax]
  4084f7:	add    edi,ecx
  4084f9:	xor    al,BYTE PTR [eax]
  4084fb:	add    edi,ecx
  4084fd:	xor    al,BYTE PTR [eax]
  4084ff:	add    edi,ebx
  408501:	xor    al,BYTE PTR [eax]
  408503:	add    ebx,ebp
  408505:	xor    al,BYTE PTR [eax]
  408507:	add    edi,ecx
  408509:	xor    al,BYTE PTR [eax]
  40850b:	add    edi,ecx
  40850d:	xor    eax,0x359c0100
  408512:	add    eax,DWORD PTR [edx]
  408514:	pushf  
  408515:	xor    eax,0x2f8c0203
  40851a:	add    eax,0x3358c04
  40851f:	add    al,0x9c
  408521:	xor    eax,0x359c0203
  408526:	add    eax,0x3359a04
  40852b:	add    cl,BYTE PTR [edx+0x5c020335]
  408531:	xor    eax,0x2f5a0403
  408536:	add    eax,DWORD PTR [edx]
  408538:	dec    esp
  408539:	das    
  40853a:	add    BYTE PTR [ecx],al
  40853c:	dec    edi
  40853d:	xor    al,BYTE PTR [eax]
  40853f:	add    DWORD PTR [eax],eax
  408541:	add    BYTE PTR [ebx+0x2e],bl
  408544:	and    BYTE PTR [ecx],ah
  408546:	pop    esi
  408547:	xor    al,0x2
  408549:	push   es
  40854a:	dec    ebp
  40854b:	xor    al,0x2
  40854d:	add    ecx,DWORD PTR [ebp+0x2e]
  408550:	add    al,BYTE PTR [ebx]
  408552:	sbb    eax,0x3705022e
  408557:	or     al,BYTE PTR [edi]
  408559:	add    eax,0x3070a34
  40855e:	xor    al,0xc
  408560:	add    eax,0x70c3401
  408565:	add    DWORD PTR [esp+ecx*1],esi
  408568:	pop    es
  408569:	add    DWORD PTR [esi],esi
  40856b:	or     al,0x7
  40856d:	add    DWORD PTR [edi],esi
  40856f:	in     al,0x4
  408571:	add    BYTE PTR [edi],dh
  408573:	and    ecx,DWORD PTR [ecx+0x40]
  408576:	aaa    
  408577:	rol    DWORD PTR [eax+eax*1],cl
  40857a:	aaa    
  40857b:	and    DWORD PTR [ecx+0x40],ecx
  40857e:	aaa    
  40857f:	loop   0x408585
  408581:	add    BYTE PTR [edi],dh
  408583:	test   DWORD PTR [eax+0x40],0x4d137
  40858a:	aaa    
  40858b:	xchg   DWORD PTR [ebx+0x40],ecx
  40858e:	aaa    
  40858f:	pusha  
  408590:	add    eax,0x4a333700
  408595:	inc    eax
  408596:	aaa    
  408597:	dec    edi
  408598:	add    eax,0x4a3f3700
  40859d:	inc    eax
  40859e:	aaa    
  40859f:	pop    esi
  4085a0:	add    eax,0x4acb3700
  4085a5:	inc    eax
  4085a6:	add    BYTE PTR [eax],al
  4085a8:	aaa    
  4085a9:	cmp    eax,0xb7370005
  4085ae:	dec    edx
  4085af:	inc    eax
  4085b0:	aaa    
  4085b1:	pop    esp
  4085b2:	add    eax,0x4ac73700
  4085b7:	inc    eax
  4085b8:	aaa    
  4085b9:	pop    ebx
  4085ba:	add    eax,0x4ab73700
  4085bf:	inc    eax
  4085c0:	aaa    
  4085c1:	cmp    al,BYTE PTR ds:0x4abc3700
  4085c7:	inc    eax
  4085c8:	aaa    
  4085c9:	cmp    DWORD PTR ds:0x4ac23700,eax
  4085cf:	inc    eax
  4085d0:	aaa    
  4085d1:	xor    al,0xbd
  4085d3:	add    esi,DWORD PTR [edi]
  4085d5:	xor    al,0x45
  4085d7:	dec    ebx
  4085d8:	ja     0x40860e
  4085da:	mov    esi,0xaa343703
  4085df:	add    esi,DWORD PTR [esi+0x34]
  4085e2:	lahf   
  4085e3:	add    esi,DWORD PTR [edi]
  4085e5:	xor    al,0xb2
  4085e7:	add    esi,DWORD PTR [esi+0x34]
  4085ea:	nop
  4085eb:	add    esi,DWORD PTR [edi]
  4085ed:	xor    al,0x90
  4085ef:	add    esi,DWORD PTR [esi+0x34]
  4085f2:	rol    DWORD PTR [ebx],0x37
  4085f5:	xor    al,0xbd
  4085f7:	add    esi,DWORD PTR [esi+0x34]
  4085fa:	mov    dl,0x3
  4085fc:	aaa    
  4085fd:	xor    al,0xbd
  4085ff:	add    al,0x76
  408601:	xor    al,0xa3
  408603:	add    esi,DWORD PTR [edi]
  408605:	xor    al,0xc1
  408607:	add    al,0x76
  408609:	xor    al,0x94
  40860b:	add    eax,DWORD PTR [eax]
  40860d:	add    BYTE PTR [edi],dh
  40860f:	xor    al,0x25
  408611:	add    eax,0x3453476
  408616:	aaa    
  408617:	xor    al,0x9e
  408619:	add    al,0xf6
  40861b:	xor    esi,DWORD PTR [esi]
  40861d:	add    esi,DWORD PTR [edi]
  40861f:	xor    al,0x50
  408621:	add    al,0xf6
  408623:	xor    esp,DWORD PTR [edi]
  408625:	add    esi,DWORD PTR [edi]
  408627:	xor    al,0xfa
  408629:	add    eax,0x34833f6
  40862e:	aaa    
  40862f:	xor    al,0xf2
  408631:	add    eax,0x44933f6
  408636:	cmp    esi,DWORD PTR [ebx]
  408638:	dec    edx
  408639:	add    al,0x8f
  40863b:	xor    cl,BYTE PTR [ebx+0x4]
  40863e:	div    BYTE PTR [edx]
  408640:	inc    ebp
  408641:	add    al,0x1a
  408643:	xor    ecx,DWORD PTR [esi+0x4]
  408646:	in     eax,dx
  408647:	xor    dl,BYTE PTR [ecx+0x4]
  40864a:	xlat   BYTE PTR ds:[ebx]
  40864b:	xor    al,BYTE PTR [ecx]
  40864d:	inc    ebx
  40864e:	cmp    esi,DWORD PTR [esi+0x0]
  408651:	inc    edx
  408652:	xor    edx,DWORD PTR [eax-0x64cb6b00]
  408658:	add    BYTE PTR [edi-0x79ff68cc],cl
  40865e:	xor    al,0x99
  408660:	add    BYTE PTR [eax+0x7b002f34],bl
  408666:	xor    al,0xf9
  408668:	add    bh,BYTE PTR [edx+0x34]
  40866b:	jb     0x40866d
  40866d:	jl     0x4086a3
  40866f:	push   esi
  408670:	add    BYTE PTR [edi+0x0],dh
  408673:	add    BYTE PTR [ecx+edi*2],dh
  408676:	add    BYTE PTR [esi+0x34],bl
  408679:	in     eax,dx
  40867a:	add    ah,BYTE PTR [eax+0x34]
  40867d:	xchg   ebx,eax
  40867e:	add    BYTE PTR [ebx+0x34],dl
  408681:	jne    0x408683
  408683:	push   edx
  408684:	xor    al,0x8f
  408686:	add    BYTE PTR [ebp+0x34],al
  408689:	call   0x3702:0xf7343c00
  408690:	xor    al,0x96
  408692:	add    BYTE PTR [esi],ch
  408694:	xor    al,0x98
  408696:	add    BYTE PTR [ecx],ch
  408698:	xor    al,0x80
  40869a:	add    BYTE PTR [edx],ch
  40869c:	xor    al,0x32
  40869e:	add    BYTE PTR [esp+esi*1],ch
  4086a1:	pop    ebx
  4086a2:	add    BYTE PTR [edi],ah
  4086a4:	xor    al,0x2e
  4086a6:	add    BYTE PTR [ecx],dh
  4086a8:	xor    al,0x28
  4086aa:	add    BYTE PTR [ebx],dh
  4086ac:	xor    al,0x3c
  4086ae:	add    BYTE PTR ds:0x1e003a34,ah
  4086b4:	xor    al,0x26
  4086b6:	add    BYTE PTR [ecx],bh
  4086b8:	xor    al,0x44
  4086ba:	add    BYTE PTR [eax],bh
  4086bc:	xor    al,0x71
  4086be:	add    BYTE PTR [ebx],bh
  4086c0:	xor    al,0x6d
  4086c2:	add    BYTE PTR [esp+esi*1],dh
  4086c5:	test   BYTE PTR [eax],al
  4086c7:	add    BYTE PTR [esi],dl
  4086c9:	xor    DWORD PTR [ecx+0x1],ebx
  4086cc:	pop    ss
  4086cd:	xor    DWORD PTR [edi+0x1],ebp
  4086d0:	and    eax,0x28017131
  4086d5:	xor    DWORD PTR [ebx+0x1],esp
  4086d8:	add    BYTE PTR [eax],al
  4086da:	(bad)  
  4086db:	ss push esp
  4086dd:	add    ebp,edi
  4086df:	add    al,BYTE PTR ss:[ecx]
  4086e2:	repz cmp eax,DWORD PTR ss:[ecx]
  4086e6:	lock ss push es
  4086e9:	add    esi,esp
  4086eb:	ss or  al,0x1
  4086ee:	in     al,0x36
  4086f0:	sbb    BYTE PTR [ecx],al
  4086f2:	cli    
  4086f3:	sbb    al,BYTE PTR ss:[ecx]
  4086f6:	mov    ecx,0xce010e36
  4086fb:	adc    BYTE PTR ss:[ecx],al
  4086fe:	iret   
  4086ff:	ss inc ebp
  408701:	add    DWORD PTR [esi+esi*1+0x36c30149],edi
  408708:	push   eax
  408709:	add    DWORD PTR [esi-0x48fea7ca],esi
  40870f:	outs   dx,BYTE PTR ss:[esi]
  408711:	add    DWORD PTR [ebp+0x36],eax
  408714:	jo     0x408717
  408716:	dec    eax
  408717:	bound  eax,QWORD PTR ss:[ecx]
  40871a:	sbb    DWORD PTR [esi],esi
  40871c:	fadd   DWORD PTR [edx]
  40871e:	mov    edi,0xb0012739
  408723:	cmp    DWORD PTR ds:0x3139b701,esp
  408729:	add    DWORD PTR [ebp-0x45fee0c7],esp
  40872f:	cmp    DWORD PTR ds:0x2638ff01,esi
  408735:	add    DWORD PTR [eax],eax
  408737:	cmp    DWORD PTR [ecx+eax*1],esp
  40873a:	xlat   BYTE PTR ds:[ebx]
  40873b:	cmp    BYTE PTR [eax],dh
  40873d:	add    DWORD PTR [eax],eax
  40873f:	add    ch,dl
  408741:	cmp    BYTE PTR [esi],bl
  408743:	add    DWORD PTR [edi],esi
  408745:	imul   eax,DWORD PTR [esi*1+0xa045836],0x8046336
  408750:	sub    BYTE PTR ss:[eax+eiz*1],al
  408754:	ss and eax,0x40361c04
  40875a:	add    al,0x6c
  40875c:	ss sti 
  40875e:	add    bl,BYTE PTR [esi+esi*1-0x8]
  408762:	add    cl,BYTE PTR [ebx]
  408764:	add    eax,DWORD PTR ss:[ebx]
  408767:	or     DWORD PTR [esi],esi
  408769:	call   0xf576a870
  40876e:	add    bl,BYTE PTR ds:0x6d02d036
  408774:	ss retf 
  408776:	add    bl,BYTE PTR [ebp+0x36]
  408779:	mov    edi,0x7e363801
  40877e:	add    dl,BYTE PTR [esi+0x36]
  408781:	js     0x408785
  408783:	sub    BYTE PTR [esi],dh
  408785:	add    DWORD PTR [edx],0x3b
  408788:	ss ja  0x40878d
  40878b:	adc    dh,BYTE PTR [esi]
  40878d:	data16 add ah,BYTE PTR [edx]
  408790:	add    DWORD PTR ss:[edx],0x24e3666
  408797:	push   edi
  408798:	ss dec eax
  40879a:	add    ch,BYTE PTR [ecx]
  40879c:	ss mov bl,0x1
  40879f:	cmp    al,0x36
  4087a1:	xlat   BYTE PTR ds:[ebx]
  4087a2:	add    DWORD PTR [ebx],edx
  4087a4:	add    BYTE PTR [eax],al
  4087a6:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4087a8:	add    DWORD PTR [ebx],esp
  4087aa:	rol    DWORD PTR ss:[ecx],0x67
  4087ae:	ss mov eax,0x92364a01
  4087b4:	add    cl,BYTE PTR [ebx+0x36]
  4087b7:	pop    ebp
  4087b8:	add    al,BYTE PTR [eax]
  4087ba:	ss pop edx
  4087bc:	add    ch,BYTE PTR [esi]
  4087be:	ss xor al,0x34
  4087c1:	add    eax,DWORD PTR [ecx+0x35]
  4087c4:	das    
  4087c5:	add    ecx,DWORD PTR ds:0xf2033935
  4087cb:	xor    al,0x3a
  4087cd:	add    eax,DWORD PTR [ebx]
  4087cf:	xor    eax,0x3501031b
  4087d4:	and    DWORD PTR [ebx],eax
  4087d6:	lds    esi,FWORD PTR [edx*1+0xe34cf03]
  4087dd:	add    ebx,DWORD PTR [ebp+0x3602c833]
  4087e3:	xor    eax,edi
  4087e5:	add    dl,BYTE PTR [eax+0x33]
  4087e8:	les    eax,FWORD PTR [edx]
  4087ea:	inc    eax
  4087eb:	xor    edi,DWORD PTR [edi-0x46cca3fe]
  4087f1:	add    dh,BYTE PTR [ecx+0x33]
  4087f4:	mov    edx,0xbb337202
  4087f9:	add    al,BYTE PTR [eax+0x33]
  4087fc:	mov    cl,0x2
  4087fe:	xor    esp,DWORD PTR fs:[ebp-0x61cca1fe]
  408805:	add    cl,BYTE PTR [ebx+esi*1+0x16]
  408809:	add    BYTE PTR [eax],al
  40880b:	add    BYTE PTR [ecx],bl
  40880d:	push   esp
  40880e:	dec    ecx
  40880f:	push   DWORD PTR [esi]
  408811:	inc    esp
  408812:	dec    edx
  408813:	(bad)  
  408814:	cmp    al,0x44
  408816:	dec    ebx
  408817:	push   DWORD PTR [ebx]
  408819:	inc    esp
  40881a:	dec    esp
  40881b:	push   DWORD PTR [edi]
  40881d:	inc    esp
  40881e:	inc    ebp
  40881f:	jmp    FWORD PTR [ebp-0x590071bc]
  408825:	inc    esp
  408826:	xchg   edi,edi
  408828:	xlat   BYTE PTR ds:[ebx]
  408829:	inc    esp
  40882a:	cmp    bh,0xd5
  40882d:	inc    esp
  40882e:	cmp    edi,0xff9244db
  408834:	rol    DWORD PTR [ebx+edx*4-0x1],1
  408838:	iret   
  408839:	inc    esp
  40883a:	add    DWORD PTR [ebp+0x7c311678],eax
  408840:	jo     0x40885a
  408842:	xor    DWORD PTR [edi+0x68],edx
  408845:	sbb    dh,BYTE PTR [ecx]
  408847:	dec    esi
  408848:	pusha  
  408849:	div    BYTE PTR [eax]
  40884b:	pop    ecx
  40884c:	pop    eax
  40884d:	or     eax,0xd3505831
  408852:	xor    BYTE PTR [ebx],bh
  408854:	dec    eax
  408855:	aad    0x30
  408857:	cmp    al,BYTE PTR [eax-0x29]
  40885a:	xor    BYTE PTR ds:0x3430d938,bh
  408860:	xor    bl,bl
  408862:	xor    BYTE PTR [edi-0x69cf22c9],bl
  408868:	aaa    
  408869:	fbstp  TBYTE PTR [eax]
  40886b:	xchg   ecx,eax
  40886c:	aaa    
  40886d:	loope  0x40889f
  40886f:	nop
  408870:	add    BYTE PTR [eax],al
  408872:	aaa    
  408873:	ret    
  408874:	xor    BYTE PTR [ebx-0x7dcf3ac9],al
  40887a:	aaa    
  40887b:	(bad)  
  40887c:	xor    BYTE PTR [ebp+0x37],dh
  40887f:	leave  
  408880:	xor    BYTE PTR [edi+esi*1-0x35],ch
  408884:	xor    BYTE PTR [edi+0x37],ah
  408887:	int    0x30
  408889:	pop    esi
  40888a:	aaa    
  40888b:	iret   
  40888c:	xor    BYTE PTR [ecx-0x57cf2ec9],ch
  408892:	aaa    
  408893:	repz xor BYTE PTR [ebx-0x55cf07c9],ch
  40889a:	aaa    
  40889b:	cli    
  40889c:	xor    BYTE PTR [ebp-0x5bcf03c9],ch
  4088a2:	aaa    
  4088a3:	(bad)  
  4088a4:	xor    BYTE PTR [edi],ch
  4088a6:	aaa    
  4088a7:	std    
  4088a8:	xor    BYTE PTR [esi],ah
  4088aa:	aaa    
  4088ab:	add    BYTE PTR [ecx],dh
  4088ad:	and    DWORD PTR [edi],esi
  4088af:	push   DWORD PTR [eax]
  4088b1:	and    BYTE PTR [edi],dh
  4088b3:	add    dh,BYTE PTR [ecx]
  4088b5:	add    BYTE PTR [esp+esi*1-0x32],al
  4088b9:	xor    BYTE PTR [ebp+0x34],al
  4088bc:	shl    DWORD PTR [eax],cl
  4088be:	push   edx
  4088bf:	xor    al,0xd4
  4088c1:	xor    BYTE PTR [ebx+0x34],dl
  4088c4:	fnstenv [eax]
  4088c6:	and    BYTE PTR [edx+ebx*8],dh
  4088c9:	xor    BYTE PTR [ecx],dl
  4088cb:	xor    al,0xdf
  4088cd:	xor    BYTE PTR [esi],bl
  4088cf:	xor    al,0xde
  4088d1:	xor    BYTE PTR [edi],cl
  4088d3:	xor    al,0xe1
  4088d5:	xor    BYTE PTR [eax],al
  4088d7:	add    BYTE PTR [esp+esi*1],ch
  4088da:	loopne 0x40890c
  4088dc:	sbb    eax,0x1a30e334
  4088e1:	xor    al,0xe5
  4088e3:	xor    BYTE PTR [ebx+0x34],cl
  4088e6:	out    0x30,eax
  4088e8:	call   0xe9716efc
  4088ed:	psubsw mm6,QWORD PTR [eax]
  4088f0:	out    0xf,al
  4088f2:	call   0xeb505027
  4088f7:	xor    ah,dl
  4088f9:	pminsw mm6,QWORD PTR [eax]
  4088fc:	aad    0xf
  4088fe:	in     eax,dx
  4088ff:	xor    BYTE PTR [edx-0x3ccf10f1],ah
  408905:	psllq  mm6,QWORD PTR [eax]
  408908:	lock setnp BYTE PTR [eax]
  40890c:	mov    eax,ds:0x72309a0f
  408911:	push   cs
  408912:	or     al,BYTE PTR [esi]
  408914:	gs push cs
  408916:	sbb    eax,DWORD PTR [esi]
  408918:	jno    0x408928
  40891a:	pop    ds
  40891b:	push   es
  40891c:	(bad)  
  40891d:	push   cs
  40891e:	and    DWORD PTR [esi],eax
  408920:	mov    WORD PTR [esi],cs
  408922:	and    BYTE PTR [esi],al
  408924:	fisttp QWORD PTR [esi]
  408926:	and    eax,DWORD PTR [esi]
  408928:	pop    edx
  408929:	push   cs
  40892a:	and    al,BYTE PTR [esi]
  40892c:	pop    ebx
  40892d:	push   cs
  40892e:	and    eax,0xff5f3706
  408933:	and    eax,0x26ff5639
  408938:	xor    DWORD PTR [ebp-0x1],eax
  40893b:	daa    
  40893c:	add    BYTE PTR [eax],al
  40893e:	cmp    DWORD PTR [edi+edi*8+0x28],eax
  408942:	xor    DWORD PTR [ebx-0x1],edx
  408945:	sub    DWORD PTR [ecx],edi
  408947:	push   edx
  408948:	jmp    FWORD PTR [edx]
  40894a:	xor    DWORD PTR [ecx-0x1],ecx
  40894d:	sub    edi,DWORD PTR [ecx]
  40894f:	pusha  
  408950:	jmp    FWORD PTR [ecx+esi*1]
  408953:	push   edi
  408954:	jmp    FWORD PTR ds:0x2eff2e39
  40895a:	xor    DWORD PTR ds:0x2c392fff,ebp
  408960:	push   DWORD PTR [eax]
  408962:	xor    DWORD PTR [ebx],ebp
  408964:	push   DWORD PTR [ecx]
  408966:	cmp    DWORD PTR [edx],ebp
  408968:	push   DWORD PTR [edx]
  40896a:	xor    ecx,edx
  40896c:	pop    es
  40896d:	xor    al,0x39
  40896f:	enter  0x3507,0x31
  408973:	iret   
  408974:	pop    es
  408975:	ss cmp esi,eax
  408978:	pop    es
  408979:	aaa    
  40897a:	xor    ebp,edx
  40897c:	pop    es
  40897d:	cmp    BYTE PTR [ecx],bh
  40897f:	aam    0x7
  408981:	cmp    DWORD PTR [ecx],esi
  408983:	mov    ds:0xfd393a07,eax
  408988:	pop    es
  408989:	inc    eax
  40898a:	xor    DWORD PTR [edi+eax*1+0x7bb3941],edi
  408991:	inc    edx
  408992:	xor    DWORD PTR [edx-0x46c6bcf9],edi
  408998:	pop    es
  408999:	inc    esp
  40899a:	xor    eax,eax
  40899c:	pop    es
  40899d:	inc    ebp
  40899e:	cmp    DWORD PTR [edi+0x4607],esi
  4089a4:	xor    DWORD PTR [esi-0x4ac6b8f9],edi
  4089aa:	pop    es
  4089ab:	dec    eax
  4089ac:	xor    DWORD PTR [ecx+edx*2],esi
  4089af:	or     esi,ebp
  4089b1:	xor    eax,0x35ed0952
  4089b6:	inc    ebx
  4089b7:	or     esp,edi
  4089b9:	xor    eax,0x35fb093c
  4089be:	push   ebp
  4089bf:	or     edx,esi
  4089c1:	xor    eax,0x35e9094e
  4089c6:	inc    edi
  4089c7:	or     DWORD PTR [eax],eax
  4089c9:	cmp    BYTE PTR ss:[ecx],cl
  4089cc:	pop    es
  4089cd:	sbb    DWORD PTR ss:[ecx],ecx
  4089d0:	push   es
  4089d1:	sbb    cl,BYTE PTR ss:[ecx]
  4089d4:	add    eax,0xe50a4936
  4089d9:	aaa    
  4089da:	dec    edx
  4089db:	or     ah,ah
  4089dd:	aaa    
  4089de:	dec    ebx
  4089df:	or     ah,dh
  4089e1:	aaa    
  4089e2:	inc    esp
  4089e3:	or     ah,bl
  4089e5:	aaa    
  4089e6:	dec    ebp
  4089e7:	or     cl,BYTE PTR [edx-0x7ef5b9c8]
  4089ed:	cmp    BYTE PTR [edi-0x6fc777f7],cl
  4089f3:	or     DWORD PTR [edi+0x38],edi
  4089f6:	or     DWORD PTR [ecx],0x982386e
  4089fc:	ins    DWORD PTR es:[edi],dx
  4089fd:	cmp    BYTE PTR [ebx-0x73c7a3f7],dl
  408a03:	or     DWORD PTR [ebx+0x38],ebx
  408a06:	test   DWORD PTR [ecx],ecx
  408a08:	add    BYTE PTR [eax],al
  408a0a:	(bad)  
  408a0b:	cmp    BYTE PTR [esi+0x9],bh
  408a0e:	mov    DWORD PTR [eax],edi
  408a10:	push   edi
  408a11:	or     DWORD PTR [eax+0x41095838],eax
  408a17:	push   ebx
  408a18:	pop    ecx
  408a19:	or     DWORD PTR ds:0x34095a38,esi
  408a1f:	cmp    BYTE PTR [ebx],bh
  408a21:	or     DWORD PTR [esi],esi
  408a23:	cmp    BYTE PTR [ecx+ecx*1],dh
  408a26:	xor    edi,DWORD PTR [eax]
  408a28:	add    DWORD PTR [esi+edi*1],edi
  408a2b:	aaa    
  408a2c:	add    eax,0x5363e37
  408a31:	sahf   
  408a32:	cs xor eax,0x3c2ea105
  408a38:	add    eax,0x53b3e90
  408a3d:	xchg   ebx,eax
  408a3e:	cmp    al,BYTE PTR ds:0x5392e82
  408a45:	jge    0x408a75
  408a47:	inc    eax
  408a48:	add    eax,0x4a43e74
  408a4d:	outs   dx,DWORD PTR ds:[esi]
  408a4e:	ds ds add eax,0x53d2e66
  408a55:	sub    DWORD PTR [esi],ebp
  408a57:	jle    0x408a5e
  408a59:	sub    BYTE PTR [esi],bh
  408a5b:	inc    esp
  408a5c:	add    eax,0x5433e2b
  408a61:	sub    ch,BYTE PTR [esi]
  408a63:	jbe    0x408a6a
  408a65:	and    eax,0x2c05482e
  408a6a:	ds inc edi
  408a6c:	add    eax,0x3e000027
  408a71:	js     0x408a78
  408a73:	scas   al,BYTE PTR es:[edi]
  408a74:	sub    eax,0x2db10541
  408a79:	ja     0x408a80
  408a7b:	mov    al,ds:0xa3054c3d
  408a80:	cmp    eax,0x2db2054b
  408a85:	dec    edx
  408a86:	add    eax,0x5492dad
  408a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a8c:	cmp    eax,0x3d9f0550
  408a91:	dec    edi
  408a92:	add    eax,0x54e2db6
  408a97:	mov    ecx,0xb8054d2d
  408a9c:	cmp    eax,0x3dbb057d
  408aa1:	je     0x408aa8
  408aa3:	add    BYTE PTR [ebp-0x5dfbbfc7],bl
  408aa9:	cmp    DWORD PTR [ebx+0x4],eax
  408aac:	sar    DWORD PTR [ecx],cl
  408aae:	inc    edx
  408aaf:	add    al,0xc0
  408ab1:	cmp    DWORD PTR [edi],esi
  408ab3:	add    al,0x61
  408ab5:	cmp    dh,BYTE PTR [ebx]
  408ab7:	add    al,0xf6
  408ab9:	cmp    DWORD PTR [ebp+0x4],ecx
  408abc:	inc    edi
  408abd:	cmp    cl,BYTE PTR [edx+0x4]
  408ac0:	inc    esp
  408ac1:	cmp    dh,BYTE PTR [esi]
  408ac3:	add    al,0x55
  408ac5:	cmp    cl,BYTE PTR [ecx+0x4]
  408ac8:	sbb    bh,BYTE PTR [edx]
  408aca:	dec    esp
  408acb:	add    al,0x4b
  408acd:	cmp    cl,BYTE PTR [eax+0x4]
  408ad0:	cmp    BYTE PTR [edx],bh
  408ad2:	inc    esi
  408ad3:	add    al,0x0
  408ad5:	add    cl,bh
  408ad7:	cmp    DWORD PTR [ebx+0x4],ecx
  408ada:	cmp    ch,BYTE PTR cs:[edi]
  408add:	add    al,0x3f
  408adf:	cmp    dl,BYTE PTR [ecx]
  408ae1:	add    al,0x3c
  408ae3:	cmp    dl,BYTE PTR [eax]
  408ae5:	add    al,0x2d
  408ae7:	cmp    ah,BYTE PTR [edi]
  408ae9:	add    al,0x32
  408aeb:	cmp    dl,BYTE PTR ds:0x143e4304
  408af1:	add    al,0x30
  408af3:	ds and eax,0x123df104
  408af9:	add    al,0x6
  408afb:	ds and al,0x4
  408afe:	idiv   DWORD PTR ds:0x3df40419
  408b04:	sbb    BYTE PTR [eiz*8-0x15fbe4c3],al
  408b0b:	cmp    eax,0x3dfb041a
  408b10:	sbb    eax,0x1c3da804
  408b15:	add    al,0xc9
  408b17:	cmp    eax,0x3dbe041f
  408b1c:	push   ds
  408b1d:	add    al,0x37
  408b1f:	lods   al,BYTE PTR ds:[esi]
  408b20:	pop    es
  408b21:	das    
  408b22:	xor    ebp,DWORD PTR [edi-0x71c4dff9]
  408b28:	or     BYTE PTR [ecx],ah
  408b2a:	xor    eax,DWORD PTR [ecx-0x77c4ddf8]
  408b30:	or     BYTE PTR [ebx],ah
  408b32:	xor    eax,DWORD PTR [ebx+0x6a3b1608]
  408b38:	or     BYTE PTR [edx],dl
  408b3a:	add    BYTE PTR [eax],al
  408b3c:	xor    edx,DWORD PTR [ebp+0x643b2c08]
  408b42:	or     BYTE PTR [ebx],ch
  408b44:	xor    esp,DWORD PTR [edi+0x8]
  408b47:	pop    ss
  408b48:	cmp    esi,DWORD PTR [esi+0x8]
  408b4b:	sub    BYTE PTR [ebx],dh
  408b4d:	dec    ecx
  408b4e:	or     BYTE PTR ds:0x2908403b,ch
  408b54:	xor    ebx,DWORD PTR [ebx+0x8]
  408b57:	daa    
  408b58:	cmp    edx,DWORD PTR [edx+0x8]
  408b5b:	sub    dh,BYTE PTR [ebx]
  408b5d:	jl     0x408b68
  408b5f:	xchg   BYTE PTR [edi+edi*2],dh
  408b62:	or     DWORD PTR [eax-0x76f681cc],ecx
  408b68:	xor    al,0x79
  408b6a:	or     DWORD PTR [edx-0x55f68fcc],ecx
  408b70:	xor    al,0x7a
  408b72:	or     DWORD PTR [esp+esi*1+0x348e0975],ecx
  408b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b7a:	add    eax,0x5a634ab
  408b7f:	(bad)  
  408b80:	xor    al,0xb3
  408b82:	add    eax,0x68a3485
  408b87:	adc    eax,0xac068c57
  408b8c:	xor    al,0x8f
  408b8e:	push   es
  408b8f:	lods   eax,DWORD PTR ds:[esi]
  408b90:	xor    al,0x8e
  408b92:	push   es
  408b93:	scas   al,BYTE PTR es:[edi]
  408b94:	xor    al,0x81
  408b96:	push   es
  408b97:	scas   eax,DWORD PTR es:[edi]
  408b98:	xor    al,0x34
  408b9a:	pop    ebp
  408b9b:	pop    es
  408b9c:	in     eax,dx
  408b9d:	ss push esi
  408b9f:	pop    es
  408ba0:	add    BYTE PTR [eax],al
  408ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ba3:	ss pop edi
  408ba5:	pop    es
  408ba6:	sti    
  408ba7:	ss push eax
  408ba9:	pop    es
  408baa:	repnz ss inc ecx
  408bad:	pop    es
  408bae:	in     al,dx
  408baf:	ss inc edx
  408bb1:	pop    es
  408bb2:	out    0x36,eax
  408bb4:	xor    eax,DWORD PTR [edi]
  408bb6:	jns    0x408bee
  408bb8:	test   eax,0x2a36c607
  408bbd:	pop    es
  408bbe:	lds    esi,FWORD PTR [esi]
  408bc0:	sub    eax,DWORD PTR [edi]
  408bc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc3:	ss sub al,0x7
  408bc6:	mov    ds:0xaa072536,eax
  408bcb:	ss cs pop es
  408bce:	mov    eax,ds:0xc8072736
  408bd3:	and    BYTE PTR ss:[edi],al
  408bd6:	iret   
  408bd7:	and    DWORD PTR ss:[edi],eax
  408bda:	mov    esi,0xbd073236
  408bdf:	xor    eax,DWORD PTR ss:[edi]
  408be2:	lods   al,BYTE PTR ds:[esi]
  408be3:	ss and al,0x7
  408be6:	stos   DWORD PTR es:[edi],eax
  408be7:	ss sbb eax,0x3636a207
  408bed:	pop    es
  408bee:	cdq    
  408bef:	ss das 
  408bf1:	pop    es
  408bf2:	shl    BYTE PTR ds:0x35d70718,1
  408bf8:	sbb    DWORD PTR [edi],eax
  408bfa:	(bad)  
  408bfb:	xor    eax,0x35d406ba
  408c00:	mov    ah,0x6
  408c02:	(bad)  ds:0x6bd
  408c08:	shl    BYTE PTR ds:0x35d906b6,cl
  408c0e:	lahf   
  408c0f:	push   es
  408c10:	shl    BYTE PTR ds:0x359f06a0,1
  408c16:	add    DWORD PTR [eax-0x37fe24cf],edx
  408c1c:	cmp    ebx,eax
  408c1e:	add    DWORD PTR [ebx-0x75fe39cf],ecx
  408c24:	cmp    ebp,eax
  408c26:	add    DWORD PTR [ebp-0x7bfe3fcf],ecx
  408c2c:	cmp    DWORD PTR [edi-0x3dce70ff],edi
  408c32:	add    DWORD PTR [esi-0x7efe3ec7],eax
  408c38:	xor    esp,ecx
  408c3a:	add    DWORD PTR [eax+0x5301cb39],eax
  408c40:	xor    esi,ecx
  408c42:	add    DWORD PTR [edx+0x39],edx
  408c45:	int    0x1
  408c47:	inc    ebp
  408c48:	xor    eax,ecx
  408c4a:	add    DWORD PTR [ecx+edi*1],edi
  408c4d:	mov    DWORD PTR [ecx],0x1ca3157
  408c53:	dec    esi
  408c54:	cmp    ecx,ecx
  408c56:	add    DWORD PTR [ecx],edi
  408c58:	xor    esp,esi
  408c5a:	add    DWORD PTR [eax],edi
  408c5c:	cmp    ebx,esi
  408c5e:	add    DWORD PTR [ebx],ebx
  408c60:	xor    ebp,esi
  408c62:	add    DWORD PTR [edx],ebx
  408c64:	cmp    esi,esi
  408c66:	add    DWORD PTR ds:0x1401f031,ebx
  408c6c:	add    BYTE PTR [eax],al
  408c6e:	cmp    edi,ebp
  408c70:	add    edi,edi
  408c72:	xor    dh,dl
  408c74:	add    esi,esi
  408c76:	cmp    dh,cl
  408c78:	add    ecx,esi
  408c7a:	xor    bh,ah
  408c7c:	add    eax,esi
  408c7e:	cmp    bh,bl
  408c80:	add    DWORD PTR [eax-0x74de3ed5],ecx
  408c86:	inc    ebx
  408c87:	cmp    BYTE PTR [edx+ecx*4],ah
  408c8a:	cmp    esi,DWORD PTR [esp]
  408c8d:	test   DWORD PTR [ebx],esi
  408c8f:	push   esp
  408c90:	and    al,BYTE PTR [eax]
  408c92:	stos   DWORD PTR es:[edi],eax
  408c93:	aaa    
  408c94:	and    BYTE PTR [ebx],ah
  408c96:	mov    eax,0xb9250337
  408c9b:	aaa    
  408c9c:	mov    al,ds:0xa237b623
  408ca1:	and    eax,DWORD PTR [edi+0x6423a538]
  408ca7:	cmp    BYTE PTR [edi-0x65c78add],ah
  408cad:	and    eax,DWORD PTR [edx]
  408caf:	cmp    BYTE PTR [ebx+eiz*1+0x239f3863],bl
  408cb6:	add    BYTE PTR [eax],bh
  408cb8:	mov    eax,ds:0xa937f123
  408cbd:	and    ebx,DWORD PTR [esi+0x38]
  408cc0:	lods   eax,DWORD PTR ds:[esi]
  408cc1:	and    edx,edx
  408cc3:	aaa    
  408cc4:	and    dh,BYTE PTR gs:[ebx-0x5fdd9ec9]
  408ccb:	aaa    
  408ccc:	and    dh,BYTE PTR fs:[ecx+0x222a37]
  408cd3:	add    BYTE PTR [esi+0x38],cl
  408cd6:	xor    eax,0x1c381f22
  408cdb:	and    bl,BYTE PTR [eax+edi*1]
  408cde:	pop    ds
  408cdf:	and    bl,BYTE PTR [ebx]
  408ce1:	cmp    BYTE PTR [esi],al
  408ce3:	and    ah,BYTE PTR [esi]
  408ce5:	cmp    BYTE PTR ds:0x42380722,bh
  408ceb:	and    dl,BYTE PTR [ebx]
  408ced:	cmp    ch,dl
  408cef:	and    DWORD PTR [eax],esp
  408cf1:	cmp    bl,dl
  408cf3:	and    DWORD PTR [ecx],eax
  408cf5:	cmp    BYTE PTR [eax+0x22],ah
  408cf8:	dec    eax
  408cf9:	cmp    BYTE PTR [ebx],bl
  408cfb:	and    al,BYTE PTR [eax+edi*1-0x7d]
  408cff:	and    al,BYTE PTR [ebp+0x38]
  408d02:	and    BYTE PTR [edx],0xf2
  408d05:	cmp    ebp,DWORD PTR [eax]
  408d07:	and    dl,bl
  408d09:	cmp    ebp,DWORD PTR [ebx]
  408d0b:	and    dh,BYTE PTR [edi]
  408d0d:	mov    edi,0xd6552709
  408d12:	or     DWORD PTR [eax],ebp
  408d14:	push   ebp
  408d15:	fimul  WORD PTR [ecx]
  408d17:	add    dl,BYTE PTR ds:0x369209bf
  408d1d:	ret    0x9009
  408d20:	push   ss
  408d21:	(bad)  [ecx]
  408d23:	xchg   ecx,eax
  408d24:	push   ss
  408d25:	ror    BYTE PTR [ecx],1
  408d27:	xchg   edx,eax
  408d28:	push   ss
  408d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d2a:	or     DWORD PTR [ebx+0x220abe16],edx
  408d30:	sbb    edi,DWORD PTR [ebp-0x43ed39f6]
  408d36:	or     dl,BYTE PTR [edx-0x44a60000]
  408d3c:	or     cl,BYTE PTR [ecx]
  408d3e:	push   ebx
  408d3f:	mov    edx,0xb15b0c0a
  408d44:	or     cl,BYTE PTR ds:0xa0b7853
  408d4a:	pop    ebx
  408d4b:	or     esp,DWORD PTR gs:[ebx+edx*2]
  408d4f:	je     0x408d5c
  408d51:	or     ebx,DWORD PTR [ebx+0x73]
  408d54:	or     ebx,DWORD PTR [eax]
  408d56:	push   edx
  408d57:	bound  ecx,QWORD PTR [ebx]
  408d59:	adc    BYTE PTR [edx],bl
  408d5b:	jns    0x408d68
  408d5d:	or     al,0x12
  408d5f:	jo     0x408d6c
  408d61:	adc    al,0x1a
  408d63:	inc    edi
  408d64:	or     edi,DWORD PTR [edx+edx*1]
  408d67:	push   ds
  408d68:	or     edi,DWORD PTR [edx-0x44f4d2ec]
  408d6e:	adc    al,0x2c
  408d70:	or     eax,DWORD PTR [eax]
  408d72:	sbb    ch,BYTE PTR [ebx]
  408d74:	or     edi,DWORD PTR [esp+edx*1+0x54bd080a]
  408d7b:	add    DWORD PTR [eax],ecx
  408d7d:	sbb    al,0x52
  408d7f:	or     BYTE PTR [eax],cl
  408d81:	and    al,0x5a
  408d83:	inc    DWORD PTR [edi]
  408d85:	xor    al,0x52
  408d87:	xor    al,0xdf
  408d89:	or     eax,0xde05163
  408d8e:	xor    eax,0x340e8951
  408d93:	push   esp
  408d94:	mov    cl,BYTE PTR [esi]
  408d96:	xor    eax,0x3b0e8b54
  408d9b:	push   esp
  408d9c:	test   BYTE PTR [esi],cl
  408d9e:	add    BYTE PTR [eax],al
  408da0:	xor    dl,BYTE PTR [ebp+ecx*4+0xe]
  408da4:	cmp    BYTE PTR [esi+eax*4+0xe],dl
  408da8:	das    
  408da9:	push   esp
  408daa:	dec    edi
  408dab:	push   cs
  408dac:	ds push esp
  408dae:	push   eax
  408daf:	push   cs
  408db0:	cmp    eax,0x2b0e4154
  408db5:	push   esp
  408db6:	inc    edx
  408db7:	push   cs
  408db8:	and    al,0x54
  408dba:	push   esp
  408dbb:	push   cs
  408dbc:	push   esp
  408dbd:	push   eax
  408dbe:	dec    esi
  408dbf:	push   cs
  408dc0:	push   ecx
  408dc1:	push   esp
  408dc2:	inc    edi
  408dc3:	push   cs
  408dc4:	pop    edx
  408dc5:	push   esp
  408dc6:	cmp    BYTE PTR [esi],cl
  408dc8:	add    al,0x55
  408dca:	cdq    
  408dcb:	push   cs
  408dcc:	jmp    0x408e22
  408dce:	call   0xe90e:0x9b54e20e
  408dd5:	push   esp
  408dd6:	xchg   esp,eax
  408dd7:	push   cs
  408dd8:	loopne 0x408e2e
  408dda:	jge    0x408dea
  408ddc:	andnps xmm6,XMMWORD PTR [esi+0xe]
  408de0:	push   cs
  408de1:	push   ebp
  408de2:	jg     0x408df2
  408de4:	std    
  408de5:	push   esp
  408de6:	jo     0x408df6
  408de8:	xor    dl,BYTE PTR [ebp+0x63]
  408deb:	push   cs
  408dec:	and    eax,0x1e0e5c54
  408df1:	push   ebx
  408df2:	push   ebp
  408df3:	push   cs
  408df4:	adc    DWORD PTR [esi+ecx*2],esi
  408df7:	push   cs
  408df8:	or     eax,0x8c0e2b53
  408dfd:	push   ebx
  408dfe:	and    al,0xe
  408e00:	mov    edx,DWORD PTR [ebx+0x1]
  408e03:	sub    al,0x0
  408e05:	add    BYTE PTR [ecx],dh
  408e07:	and    BYTE PTR [bx],ah
  408e0a:	sub    DWORD PTR [esi+0x20],esp
  408e0d:	mov    al,0x42
  408e0f:	push   edx
  408e10:	and    BYTE PTR [ebx-0x5ad8dec6],dh
  408e16:	xor    dh,bl
  408e18:	and    ebx,DWORD PTR [edx+ebp*1+0x42b723bd]
  408e1f:	stc    
  408e20:	and    ebp,DWORD PTR [esi-0x66dc2ac6]
  408e26:	xor    ch,BYTE PTR [ecx+eiz*1]
  408e29:	cwde   
  408e2a:	sub    ch,BYTE PTR [ebx]
  408e2c:	and    DWORD PTR [ebx-0x45ded7be],edi
  408e32:	cmp    ah,BYTE PTR [edi]
  408e34:	and    DWORD PTR [ebp-0x48dfd9ce],edi
  408e3a:	sub    al,BYTE PTR [edx+0x21]
  408e3d:	sahf   
  408e3e:	inc    edx
  408e3f:	inc    ecx
  408e40:	and    DWORD PTR [eax-0x6dd9d8c6],esp
  408e46:	xor    bl,al
  408e48:	and    ecx,DWORD PTR [ebp+0x4423f42a]
  408e4e:	inc    edx
  408e4f:	mov    esi,0xf53a3f23
  408e54:	and    esi,DWORD PTR [esi]
  408e56:	xor    dl,dh
  408e58:	and    ecx,DWORD PTR [ecx+0x2a]
  408e5b:	push   cs
  408e5c:	and    al,0x48
  408e5e:	inc    edx
  408e5f:	fldenv [ebx]
  408e61:	dec    ebx
  408e62:	cmp    dl,bh
  408e64:	and    ecx,DWORD PTR [edx+0x32]
  408e67:	shl    DWORD PTR [ebx],0x45
  408e6a:	add    BYTE PTR [eax],al
  408e6c:	sub    al,bh
  408e6e:	and    ecx,DWORD PTR [edx+eax*2]
  408e71:	cs daa 
  408e73:	pop    es
  408e74:	cmp    dl,BYTE PTR [edx+0x21]
  408e77:	push   cs
  408e78:	xor    bl,dl
  408e7a:	and    eax,DWORD PTR [ecx]
  408e7c:	sub    al,dl
  408e7e:	and    eax,DWORD PTR [eax]
  408e80:	inc    edi
  408e81:	aaa    
  408e82:	mov    ebp,0x1d374425
  408e87:	es xor eax,0x1a261f37
  408e8d:	cmp    BYTE PTR [edx+0x26],ah
  408e90:	jmp    0x408ec7
  408e92:	addr16 es clc 
  408e95:	xor    eax,0x35de2664
  408e9a:	and    DWORD PTR [edi],esp
  408e9c:	fbstp  TBYTE PTR ds:0x35ac2021
  408ea2:	and    BYTE PTR [eax],ah
  408ea4:	lods   eax,DWORD PTR ds:[esi]
  408ea5:	xor    eax,0x35a22712
  408eaa:	push   ss
  408eab:	daa    
  408eac:	mov    ds:0xb0266e35,eax
  408eb1:	xor    eax,0x35a1266c
  408eb6:	inc    ebx
  408eb7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  408eb9:	xor    eax,0x35a72641
  408ebe:	(bad)  
  408ec0:	mov    ah,0x35
  408ec2:	adc    al,0x23
  408ec4:	mov    ch,0x35
  408ec6:	push   ss
  408ec7:	and    DWORD PTR [edx],ebp
  408ec9:	cmp    DWORD PTR ss:[eax],esp
  408ecc:	or     esi,DWORD PTR [esi]
  408ece:	sbb    esp,DWORD PTR [eax]
  408ed0:	add    BYTE PTR [eax],al
  408ed2:	sbb    BYTE PTR [esi],dh
  408ed4:	pop    ds
  408ed5:	and    BYTE PTR [ebp-0x4fffc2ca],bh
  408edb:	ss aas 
  408edd:	add    BYTE PTR [esi-0x38ddd6ca],dh
  408ee3:	ss and bl,BYTE PTR es:[esi]
  408ee7:	aaa    
  408ee8:	scas   al,BYTE PTR es:[edi]
  408ee9:	add    BYTE PTR [edi+esi*1],cl
  408eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eed:	and    cl,BYTE PTR ds:0x22222837
  408ef3:	aaa    
  408ef4:	or     esp,DWORD PTR [ebx]
  408ef6:	adc    BYTE PTR [edi],dh
  408ef8:	pop    esi
  408ef9:	add    BYTE PTR [edi],dh
  408efb:	push   ecx
  408efc:	or     al,0x18
  408efe:	adc    eax,0x54950c27
  408f03:	dec    ebx
  408f04:	or     al,0xa4
  408f06:	push   ebp
  408f07:	push   edx
  408f08:	or     al,0xcb
  408f0a:	pop    edx
  408f0b:	push   ds
  408f0c:	or     al,0x8
  408f0e:	push   esp
  408f0f:	sub    ecx,DWORD PTR [edx+ebp*1]
  408f12:	push   ebp
  408f13:	cmc    
  408f14:	or     al,0x83
  408f16:	push   ebp
  408f17:	test   DWORD PTR [edx+eax*4],0xa20cc955
  408f1e:	push   ebp
  408f1f:	icebp  
  408f20:	or     al,0xa3
  408f22:	adc    eax,0x171705da
  408f27:	in     eax,dx
  408f28:	add    eax,0x5ec3ad0
  408f2d:	shl    DWORD PTR [edx],1
  408f2f:	out    dx,eax
  408f30:	add    eax,0x5ae3ad2
  408f35:	rol    DWORD PTR [eax],cl
  408f37:	add    BYTE PTR [edx],dh
  408f39:	mov    ecx,0xb03ad405
  408f3e:	add    eax,0x5bb32d5
  408f43:	(bad)  
  408f44:	cmp    dh,BYTE PTR [edx-0x5acd28fb]
  408f4a:	add    eax,0x5b43ad8
  408f4f:	fnstenv [edx]
  408f51:	mov    bh,0x5
  408f53:	fidivr DWORD PTR [edx]
  408f55:	pushw  es
  408f57:	(bad)  [edx]
  408f59:	jno    0x408f61
  408f5b:	fdivr  QWORD PTR [edx]
  408f5d:	js     0x408f65
  408f5f:	fnsave [edx]
  408f61:	inc    ebx
  408f62:	push   es
  408f63:	fidivr WORD PTR [edx]
  408f65:	push   0x6
  408f67:	fbstp  TBYTE PTR [edx]
  408f69:	cmp    eax,0x3c3ae006
  408f6e:	push   es
  408f6f:	loope  0x408fa3
  408f71:	aas    
  408f72:	push   es
  408f73:	loop   0x408faf
  408f75:	xor    al,0x1b
  408f77:	pop    es
  408f78:	push   esp
  408f79:	cmp    DWORD PTR [edi+eax*1],edx
  408f7c:	pop    ebx
  408f7d:	cmp    DWORD PTR ds:0x16395207,ebx
  408f83:	pop    es
  408f84:	sbb    DWORD PTR [ecx],edi
  408f86:	inc    DWORD PTR [esi]
  408f88:	adc    BYTE PTR [ecx],bh
  408f8a:	add    BYTE PTR [edi],al
  408f8c:	(bad)  
  408f8e:	icebp  
  408f8f:	push   es
  408f90:	push   cs
  408f91:	cmp    edx,esi
  408f93:	push   es
  408f94:	sbb    eax,0x36098939
  408f99:	xor    cl,BYTE PTR [edx+0x35000009]
  408f9f:	xor    cl,BYTE PTR [ebx-0x7bcdcbf7]
  408fa5:	or     DWORD PTR [ebx],edi
  408fa7:	xor    cl,BYTE PTR [ebp-0x79cdcdf7]
  408fad:	or     DWORD PTR [ecx],edi
  408faf:	xor    cl,BYTE PTR [edi-0x7fcdcff7]
  408fb5:	or     DWORD PTR [edi],edi
  408fb7:	xor    dl,BYTE PTR [ecx+0x9]
  408fba:	xor    dl,BYTE PTR ds:[edx+0x9]
  408fbe:	sub    eax,0x2c094332
  408fc3:	xor    bh,BYTE PTR [ecx+ecx*1]
  408fc6:	inc    ebx
  408fc7:	xor    dl,BYTE PTR [ebp+0x9]
  408fca:	cmp    dh,BYTE PTR [edx]
  408fcc:	dec    esi
  408fcd:	or     DWORD PTR [ecx],esi
  408fcf:	xor    al,BYTE PTR [edi+0x9]
  408fd2:	sub    BYTE PTR [edx],dh
  408fd4:	cmp    BYTE PTR [ecx],cl
  408fd6:	daa    
  408fd7:	xor    bl,BYTE PTR [ecx-0x65cdd9f7]
  408fdd:	or     DWORD PTR ds:0x24099b32,esp
  408fe3:	xor    dl,BYTE PTR [ecx+ecx*1+0x97d324b]
  408fea:	inc    edx
  408feb:	xor    dh,BYTE PTR [esi+0x9]
  408fee:	dec    ecx
  408fef:	xor    al,BYTE PTR [ecx]
  408ff1:	jle    0x409021
  408ff3:	sub    ecx,DWORD PTR [edi]
  408ff5:	jno    0x409035
  408ff7:	sbb    al,0xf
  408ff9:	pusha  
  408ffa:	ds sbb eax,0x1e2e630f
  409000:	rsqrtps xmm0,XMMWORD PTR [eax]
  409003:	add    BYTE PTR [esi],ch
  409005:	pop    ds
  409006:	cmovge edi,DWORD PTR [esi]
  409009:	and    BYTE PTR [edi],cl
  40900b:	inc    esp
  40900c:	ds pop ds
  40900e:	(bad)  
  409010:	and    cl,BYTE PTR cs:[edi]
  409013:	ss and DWORD PTR cs:[edi],ecx
  409017:	sub    DWORD PTR [esi],edi
  409019:	push   esp
  40901a:	push   gs
  40901c:	aas    
  40901d:	push   ebx
  40901e:	bts    DWORD PTR [edi],ebp
  409021:	push   esi
  409022:	rsm    
  409024:	das    
  409025:	push   ebp
  409026:	shld   DWORD PTR [edi],edi,cl
  409029:	pop    eax
  40902a:	shrd   DWORD PTR [edi],edi,0x57
  40902e:	xcrypt-ofb (bad)
  40902f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409030:	das    
  409031:	pop    edx
  409032:	xrstor [edi]
  409035:	pop    ecx
  409036:	pop    fs
  409038:	aas    
  409039:	dec    esp
  40903a:	cmpxchg BYTE PTR [edi],bh
  40903d:	dec    ebx
  40903e:	btr    DWORD PTR [edi],ebp
  409041:	dec    esi
  409042:	cpuid  
  409044:	das    
  409045:	dec    ebp
  409046:	setge  BYTE PTR [edi]
  409049:	push   eax
  40904a:	lfs    edi,FWORD PTR [edi]
  40904d:	dec    edi
  40904e:	imul   ebp,DWORD PTR [edi]
  409051:	push   edx
  409052:	(bad)  
  409054:	das    
  409055:	push   ecx
  409056:	setns  BYTE PTR [edi]
  409059:	inc    esp
  40905a:	(bad)  
  40905d:	inc    ebx
  40905e:	(bad)  
  409060:	das    
  409061:	inc    esi
  409062:	(bad)  
  409065:	inc    ebp
  409066:	sysexit 
  409068:	add    BYTE PTR [eax],al
  40906a:	aas    
  40906b:	dec    eax
  40906c:	str    WORD PTR [ebx+0x2c]
  409070:	xor    al,0xe
  409072:	dec    eax
  409073:	sub    al,0x37
  409075:	push   cs
  409076:	cmp    DWORD PTR [esi+esi*1],ebp
  409079:	push   cs
  40907a:	es sub al,0x39
  40907d:	push   cs
  40907e:	imul   DWORD PTR [ebx]
  409080:	cmp    BYTE PTR [esi],cl
  409082:	hlt    
  409083:	sub    edi,DWORD PTR [ebx]
  409085:	push   cs
  409086:	add    BYTE PTR [edi+edi*1],ch
  409089:	push   cs
  40908a:	popa   
  40908b:	sub    al,0x3e
  40908d:	push   cs
  40908e:	ds sub al,0x41
  409091:	push   cs
  409092:	das    
  409093:	sub    al,0x40
  409095:	push   cs
  409096:	sub    al,0x2c
  409098:	inc    ebx
  409099:	push   cs
  40909a:	cmp    eax,0xfa0e422c
  40909f:	cmp    BYTE PTR [ebp+0xe],al
  4090a2:	sti    
  4090a3:	cmp    BYTE PTR [esi+ecx*1-0x18],al
  4090a7:	cmp    BYTE PTR [edi+0xe],al
  4090aa:	stc    
  4090ab:	cmp    BYTE PTR [esi+0xe],al
  4090ae:	push   es
  4090af:	cmp    DWORD PTR [ecx+0xe],ecx
  4090b2:	pop    es
  4090b3:	cmp    DWORD PTR [eax+0xe],ecx
  4090b6:	hlt    
  4090b7:	cmp    BYTE PTR [ebx+0xe],cl
  4090ba:	cmc    
  4090bb:	cmp    BYTE PTR [edx+0xe],cl
  4090be:	mov    ds:0xb30e4d38,al
  4090c3:	cmp    BYTE PTR [esi+ecx*1-0x62],cl
  4090c7:	cmp    BYTE PTR [ecx+0xe],dl
  4090ca:	iret   
  4090cb:	cmp    BYTE PTR [eax+0xe],dl
  4090ce:	add    BYTE PTR [eax],al
  4090d0:	sub    al,0x39
  4090d2:	push   ebx
  4090d3:	push   cs
  4090d4:	sbb    eax,0x1a0e5239
  4090d9:	cmp    DWORD PTR [ebp+0xe],edx
  4090dc:	or     edi,DWORD PTR [ecx]
  4090de:	push   esp
  4090df:	push   cs
  4090e0:	call   0xe94ee81d
  4090e5:	cmp    BYTE PTR [esi+0xe],dl
  4090e8:	aaa    
  4090e9:	arpl   WORD PTR [esi],ax
  4090eb:	pop    eax
  4090ec:	inc    ecx
  4090ed:	fs push es
  4090ef:	pop    ecx
  4090f0:	cmp    DWORD PTR [esi+eax*1+0x6ad2631],ebp
  4090f7:	xor    ah,BYTE PTR [esi]
  4090f9:	scas   al,BYTE PTR es:[edi]
  4090fa:	push   es
  4090fb:	xor    eax,DWORD PTR [esi]
  4090fd:	mov    bh,0x6
  4090ff:	xor    al,0x6
  409101:	jo     0x40910a
  409103:	xor    eax,0x36077906
  409108:	push   es
  409109:	jb     0x409112
  40910b:	aaa    
  40910c:	data16 jne 0x409116
  40910f:	cmp    BYTE PTR [esi+0x64],ah
  409112:	pop    es
  409113:	cmp    DWORD PTR [esi+0x63],esp
  409116:	pop    es
  409117:	cmp    ah,BYTE PTR [esi+0x72]
  40911a:	pop    es
  40911b:	cmp    eax,DWORD PTR [esi+0x41]
  40911e:	pop    es
  40911f:	cmp    al,0x46
  409121:	test   al,0x3
  409123:	cmp    eax,0x3e03af46
  409128:	inc    esi
  409129:	mov    dh,0x3
  40912b:	aas    
  40912c:	es popf 
  40912e:	add    eax,DWORD PTR [eax+0x26]
  409131:	jl     0x409137
  409133:	inc    ecx
  409134:	add    BYTE PTR [eax],al
  409136:	es jnp 0x40913d
  409139:	inc    edx
  40913a:	es jp  0x409141
  40913d:	inc    ebx
  40913e:	push   es
  40913f:	mov    DWORD PTR [esp+eax*2],eax
  409142:	push   es
  409143:	pusha  
  409144:	add    al,0x45
  409146:	push   es
  409147:	addr16 add al,0x46
  40914a:	push   es
  40914b:	pop    esi
  40914c:	add    al,0x47
  40914e:	data16 gs add al,0x48
  409152:	data16 je 0x409159
  409155:	dec    ecx
  409156:	data16 jae 0x40915d
  409159:	dec    edx
  40915a:	inc    dx
  40915c:	add    al,0x4b
  40915e:	inc    esi
  40915f:	push   ecx
  409160:	add    al,0x4c
  409162:	inc    esi
  409163:	xor    al,0xa5
  409165:	add    eax,0x59e44f2
  40916a:	jmp    0x4628b3
  40916f:	inc    ebp
  409170:	sub    BYTE PTR ds:0x5294507,al
  409176:	push   es
  409177:	inc    ebp
  409178:	sub    al,BYTE PTR ds:0x52b4505
  40917e:	in     al,0x44
  409180:	and    al,0x5
  409182:	jecxz  0x4091c8
  409184:	sub    eax,0x2644ea05
  409189:	add    eax,0x52f44e1
  40918e:	mov    BYTE PTR [ebp+0x20],al
  409191:	add    eax,0x531458f
  409196:	jle    0x4091dd
  409198:	xor    al,BYTE PTR ds:0x457d0000
  40919e:	and    eax,DWORD PTR ds:0x51c456c
  4091a4:	imul   eax,DWORD PTR [ebp-0x4b],0x2
  4091a8:	bound  eax,QWORD PTR [ebp-0x52]
  4091ab:	add    bl,BYTE PTR [ecx+0x45]
  4091ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091af:	add    dl,BYTE PTR [eax+0x5702b845]
  4091b5:	inc    ebp
  4091b6:	cdq    
  4091b7:	add    dl,BYTE PTR [esi+0x45]
  4091ba:	call   0x5402:0x9b455502
  4091c1:	inc    ebp
  4091c2:	xchg   esp,eax
  4091c3:	add    bl,BYTE PTR [edi-0x71fd42dc]
  4091c9:	and    al,0xb6
  4091cb:	add    cl,BYTE PTR [ebp-0x23fd40dc]
  4091d1:	and    al,0xb0
  4091d3:	add    bl,bl
  4091d5:	and    al,0xa1
  4091d7:	add    dl,dl
  4091d9:	and    al,0xa2
  4091db:	add    cl,cl
  4091dd:	and    al,0x1
  4091df:	xchg   edx,eax
  4091e0:	xor    eax,0x358d0fcf
  4091e5:	les    ecx,FWORD PTR [edi]
  4091e7:	inc    esp
  4091e8:	xor    eax,0x353f0fc5
  4091ed:	ret    0x360f
  4091f0:	xor    eax,0x35490fc3
  4091f5:	enter  0x480f,0x35
  4091f9:	leave  
  4091fa:	cmovnp esi,DWORD PTR ds:0x4a0fc6
  409201:	add    BYTE PTR ds:0x35450fc7,dh
  409207:	mov    esp,0xbd350c0f
  40920c:	sysret 
  40920e:	xor    eax,0x350e0fba
  409213:	mov    ecx,0xc035010f
  409218:	movups xmm6,XMMWORD PTR ds:0x35130fbf
  40921f:	mov    esi,0xbd35020f
  409224:	paddw  mm6,QWORD PTR [esi]
  409227:	hlt    
  409228:	paddq  mm6,QWORD PTR [esi]
  40922b:	repz bswap edi
  40922e:	repnz (bad)
  409232:	ss (bad) 
  409234:	xor    cl,bl
  409236:	xor    DWORD PTR ss:[eax],0xffffffb8
  40923a:	ss jl  0x40926d
  40923d:	mov    ebx,0xba307d36
  409242:	ss mov bl,0x2f
  409245:	mov    ch,0x36
  409247:	mov    eax,0xb6369c2f
  40924c:	das    
  40924d:	xchg   edi,eax
  40924e:	ss scas eax,DWORD PTR es:[edi]
  409250:	das    
  409251:	sahf   
  409252:	ss scas al,BYTE PTR es:[edi]
  409254:	das    
  409255:	xchg   ecx,eax
  409256:	or     DWORD PTR ss:[eax],edx
  409259:	add    BYTE PTR [edi-0x4bee0ecd],dh
  40925f:	xor    edi,eax
  409261:	adc    DWORD PTR [ecx],ecx
  409263:	xor    ebp,DWORD PTR [eax-0xdffffe0]
  409269:	and    eax,0x26da20ad
  40926e:	push   ebx
  40926f:	add    DWORD PTR [ebx-0x37feadda],ebx
  409275:	es jns 0x409279
  409278:	mov    esi,0xaf209e11
  40927d:	adc    DWORD PTR [ecx-0x5fee53e0],esp
  409283:	and    BYTE PTR [ebp-0x4ddf5cef],bh
  409289:	adc    DWORD PTR [edx-0x5aef0ce0],esp
  40928f:	and    al,dh
  409291:	adc    BYTE PTR [eax+eiz*1+0x20a71181],ah
  409298:	jbe    0x4092ab
  40929a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40929b:	and    BYTE PTR [edi-0x7bdf56ef],al
  4092a1:	adc    DWORD PTR [eax-0x54ee8ae0],ebp
  4092a7:	and    BYTE PTR [edx+0x11],cl
  4092aa:	stos   BYTE PTR es:[edi],al
  4092ab:	and    BYTE PTR [esi],al
  4092ad:	inc    esp
  4092ae:	add    DWORD PTR [eax],eax
  4092b0:	push   es
  4092b1:	xor    DWORD PTR [ecx],eax
  4092b3:	add    bh,dl
  4092b5:	inc    ebx
  4092b6:	add    DWORD PTR [eax],eax
  4092b8:	xlat   BYTE PTR ds:[ebx]
  4092b9:	xor    BYTE PTR [ecx],al
  4092bb:	add    ch,ah
  4092bd:	inc    ebx
  4092be:	add    DWORD PTR [eax],eax
  4092c0:	retf   0x130
  4092c3:	add    bl,bl
  4092c5:	inc    ebx
  4092c6:	add    DWORD PTR [eax],eax
  4092c8:	jmp    0x4092fa
  4092ca:	add    DWORD PTR [eax],eax
  4092cc:	add    BYTE PTR [eax],al
  4092ce:	mov    ebp,0xbd000143
  4092d3:	xor    BYTE PTR [ecx],al
  4092d5:	add    BYTE PTR [edi],dh
  4092d7:	add    dh,BYTE PTR [ecx]
  4092d9:	add    BYTE PTR [edi],dh
  4092db:	add    al,BYTE PTR [edx]
  4092dd:	add    BYTE PTR [edi],dh
  4092df:	mov    dh,0x2f
  4092e1:	add    BYTE PTR [edi],dh
  4092e3:	in     eax,dx
  4092e4:	add    al,BYTE PTR [eax]
  4092e6:	aaa    
  4092e7:	sbb    esi,DWORD PTR [eax]
  4092e9:	add    BYTE PTR [edi],dh
  4092eb:	test   DWORD PTR [edx],0x30bc3700
  4092f1:	add    BYTE PTR [edi],dh
  4092f3:	cmp    BYTE PTR [edx],al
  4092f5:	add    BYTE PTR [edi],dh
  4092f7:	mov    ecx,0x35370030
  4092fc:	add    al,BYTE PTR [eax]
  4092fe:	aaa    
  4092ff:	call   0x2:0x36370030
  409306:	aaa    
  409307:	lahf   
  409308:	xor    BYTE PTR [eax],al
  40930a:	aaa    
  40930b:	xor    eax,DWORD PTR [edx]
  40930d:	add    BYTE PTR [edi],dh
  40930f:	shl    BYTE PTR [eax],0x0
  409312:	aaa    
  409313:	in     al,dx
  409314:	add    al,BYTE PTR [eax]
  409316:	aaa    
  409317:	mov    ebx,0xef370030
  40931c:	add    al,BYTE PTR [eax]
  40931e:	aaa    
  40931f:	call   0x2:0xee370030
  409326:	aaa    
  409327:	lods   eax,DWORD PTR ds:[esi]
  409328:	xor    BYTE PTR [eax],al
  40932a:	aaa    
  40932b:	hlt    
  40932c:	add    DWORD PTR [eax],eax
  40932e:	aaa    
  40932f:	ins    BYTE PTR es:[edi],dx
  409330:	xor    BYTE PTR [eax],al
  409332:	add    BYTE PTR [eax],al
  409334:	aaa    
  409335:	sub    DWORD PTR ds:0x306f3700,eax
  40933b:	add    BYTE PTR [edi],dh
  40933d:	ss add eax,0x306e3700
  409343:	add    BYTE PTR [edi],dh
  409345:	sub    BYTE PTR [edx],al
  409347:	add    BYTE PTR [edi],dh
  409349:	ja     0x40937b
  40934b:	add    BYTE PTR [edi],dh
  40934d:	cli    
  40934e:	add    DWORD PTR [eax],eax
  409350:	aaa    
  409351:	xor    al,0x13
  409353:	xor    DWORD PTR [edi],esi
  409355:	xor    al,0xeb
  409357:	add    dh,BYTE PTR [edi]
  409359:	xor    al,0x68
  40935b:	xor    BYTE PTR [edi],dh
  40935d:	xor    al,0xc8
  40935f:	add    esi,DWORD PTR [edi]
  409361:	xor    al,0x71
  409363:	xor    BYTE PTR [edi],dh
  409365:	xor    al,0xf1
  409367:	add    esi,DWORD PTR [edi]
  409369:	xor    al,0x65
  40936b:	xor    BYTE PTR [edi],dh
  40936d:	xor    al,0xdd
  40936f:	add    dh,BYTE PTR [edi]
  409371:	xor    al,0x79
  409373:	xor    BYTE PTR [edi],dh
  409375:	xor    al,0xd8
  409377:	add    esi,DWORD PTR [edi]
  409379:	xor    al,0x7a
  40937b:	xor    BYTE PTR [edi],dh
  40937d:	xor    al,0xd9
  40937f:	add    esi,DWORD PTR [edi]
  409381:	xor    al,0x5b
  409383:	xor    BYTE PTR [edi],dh
  409385:	xor    al,0xba
  409387:	add    esi,DWORD PTR [edi]
  409389:	xor    al,0x5c
  40938b:	xor    BYTE PTR [edi],dh
  40938d:	xor    al,0xbb
  40938f:	add    esi,DWORD PTR [edi]
  409391:	xor    al,0x7d
  409393:	xor    BYTE PTR [edi],dh
  409395:	xor    al,0xc4
  409397:	add    eax,DWORD PTR [eax]
  409399:	add    BYTE PTR [edi],dh
  40939b:	xor    al,0x7e
  40939d:	xor    BYTE PTR [edi],dh
  40939f:	xor    al,0xc5
  4093a1:	add    esi,DWORD PTR [edi]
  4093a3:	xor    al,0x5f
  4093a5:	xor    BYTE PTR [edi],dh
  4093a7:	xor    al,0xc6
  4093a9:	add    esi,DWORD PTR [edi]
  4093ab:	xor    al,0x50
  4093ad:	xor    BYTE PTR [edi],dh
  4093af:	xor    al,0xc7
  4093b1:	add    esi,DWORD PTR [edi]
  4093b3:	xor    al,0x81
  4093b5:	das    
  4093b6:	aaa    
  4093b7:	xor    al,0x10
  4093b9:	add    al,0x37
  4093bb:	xor    al,0x74
  4093bd:	das    
  4093be:	aaa    
  4093bf:	xor    al,0xb
  4093c1:	add    al,0x37
  4093c3:	xor    al,0x62
  4093c5:	das    
  4093c6:	aaa    
  4093c7:	xor    al,0x9
  4093c9:	add    al,0x37
  4093cb:	xor    al,0x1
  4093cd:	push   edx
  4093ce:	sbb    BYTE PTR [ecx+eax*1],dh
  4093d1:	or     edi,DWORD PTR [ebx]
  4093d3:	xor    al,0x1
  4093d5:	test   BYTE PTR [eax],cl
  4093d7:	xor    al,0x1
  4093d9:	in     eax,dx
  4093da:	xor    al,0x34
  4093dc:	add    DWORD PTR [edi+0x58],esi
  4093df:	xor    al,0x1
  4093e1:	mov    esp,0x66013434
  4093e6:	dec    eax
  4093e7:	xor    al,0x1
  4093e9:	iret   
  4093ea:	xor    al,0x34
  4093ec:	add    DWORD PTR [ebx+0x58],eax
  4093ef:	xor    al,0x1
  4093f1:	add    edi,DWORD PTR [ebx]
  4093f3:	xor    al,0x1
  4093f5:	xchg   edx,eax
  4093f6:	dec    eax
  4093f7:	xor    al,0x1
  4093f9:	shl    BYTE PTR [esp+esi*1],cl
  4093fc:	add    DWORD PTR [ebp+0x34180000],eax
  409402:	add    DWORD PTR [ebp-0x6bfecbcc],edi
  409408:	or     BYTE PTR [ecx+eax*1],dh
  40940b:	int3   
  40940c:	xor    al,0x34
  40940e:	add    DWORD PTR [edi-0x40fecbe8],eax
  409414:	xor    al,0x34
  409416:	add    DWORD PTR [esi+0x8],edx
  409419:	xor    al,0x1
  40941b:	mov    ?,WORD PTR [ebx]
  40941d:	xor    al,0x1
  40941f:	pop    ecx
  409420:	pop    eax
  409421:	xor    al,0x1
  409423:	mov    DWORD PTR [esp+esi*1],esi
  409426:	add    DWORD PTR [eax],edi
  409428:	dec    eax
  409429:	xor    al,0x1
  40942b:	mov    BYTE PTR [esp+esi*1],dh
  40942e:	add    DWORD PTR [ebx],edi
  409430:	pop    eax
  409431:	xor    al,0x1
  409433:	mov    esi,DWORD PTR [esp+esi*1]
  409436:	add    DWORD PTR [edx+0x4a013449],ebx
  40943c:	cmp    esi,DWORD PTR [ecx+eax*1]
  40943f:	popf   
  409440:	sbb    DWORD PTR [ecx+eax*1],esi
  409443:	inc    ebp
  409444:	cmp    esi,DWORD PTR [ecx+eax*1]
  409447:	add    BYTE PTR [ebx+0x4a],bl
  40944a:	add    DWORD PTR [eax],eax
  40944c:	jnp    0x40947e
  40944e:	add    DWORD PTR [eax],eax
  409450:	dec    eax
  409451:	dec    edx
  409452:	add    DWORD PTR [eax],eax
  409454:	js     0x409486
  409456:	add    DWORD PTR [eax],eax
  409458:	pop    ecx
  409459:	dec    edx
  40945a:	add    DWORD PTR [eax],eax
  40945c:	cmp    DWORD PTR [eax],esi
  40945e:	add    DWORD PTR [eax],eax
  409460:	push   es
  409461:	dec    edx
  409462:	add    DWORD PTR [eax],eax
  409464:	add    BYTE PTR [eax],al
  409466:	xor    BYTE PTR ss:[ecx],al
  409469:	add    bh,dh
  40946b:	dec    ecx
  40946c:	add    DWORD PTR [eax],eax
  40946e:	daa    
  40946f:	xor    BYTE PTR [ecx],al
  409471:	add    BYTE PTR [eax+0x4a],al
  409474:	add    DWORD PTR [eax],eax
  409476:	jle    0x4094ad
  409478:	add    DWORD PTR [eax],eax
  40947a:	ror    DWORD PTR [edx+0x1],1
  40947d:	add    BYTE PTR [edi+0x1e000135],cl
  409483:	dec    edx
  409484:	add    DWORD PTR [eax],eax
  409486:	jl     0x4094bd
  409488:	add    DWORD PTR [eax],eax
  40948a:	cmovp  eax,DWORD PTR [ecx]
  40948d:	add    BYTE PTR [ebp+0x1c000135],cl
  409493:	dec    edx
  409494:	add    DWORD PTR [eax],eax
  409496:	mov    dh,BYTE PTR ds:0x4a0d0001
  40949c:	add    DWORD PTR [eax],eax
  40949e:	retf   
  40949f:	xor    al,0x1
  4094a1:	add    BYTE PTR [edx+0x4a],bl
  4094a4:	add    DWORD PTR [eax],eax
  4094a6:	enter  0x134,0x0
  4094aa:	dec    ebx
  4094ab:	dec    edx
  4094ac:	add    DWORD PTR [eax],eax
  4094ae:	mov    DWORD PTR ds:0x4a580001,esi
  4094b4:	add    DWORD PTR [eax],eax
  4094b6:	xchg   BYTE PTR ds:0x46c90001,dh
  4094bc:	add    DWORD PTR [eax],eax
  4094be:	push   edi
  4094bf:	xor    BYTE PTR [ecx],al
  4094c1:	add    BYTE PTR [edi],dh
  4094c3:	shr    DWORD PTR [ebx],cl
  4094c5:	add    BYTE PTR [edi],dh
  4094c7:	gs add eax,0x37000000
  4094cd:	les    ebp,FWORD PTR [ebx]
  4094cf:	add    BYTE PTR [edi],dh
  4094d1:	jbe    0x4094d8
  4094d3:	add    BYTE PTR [edi],dh
  4094d5:	aad    0x2b
  4094d7:	add    BYTE PTR [edi],dh
  4094d9:	inc    edi
  4094da:	add    eax,0x2bc63700
  4094df:	add    BYTE PTR [edi],dh
  4094e1:	sbb    BYTE PTR ds:0x2bcf3700,al
  4094e7:	add    BYTE PTR [edi],dh
  4094e9:	sub    DWORD PTR ds:0x2bc03700,eax
  4094ef:	add    BYTE PTR [edi],dh
  4094f1:	cli    
  4094f2:	add    DWORD PTR [eax],eax
  4094f4:	aaa    
  4094f5:	shr    DWORD PTR [ebx],1
  4094f7:	add    BYTE PTR [edi],dh
  4094f9:	mov    eax,DWORD PTR ds:0x2c423700
  4094ff:	add    BYTE PTR [edi],dh
  409501:	mov    WORD PTR ds:0x2c3b3700,es
  409507:	add    BYTE PTR [edi],dh
  409509:	lea    eax,ds:0x2c1c3700
  40950f:	add    BYTE PTR [edi],dh
  409511:	mov    es,WORD PTR ds:0x2c1d3700
  409517:	add    BYTE PTR [edi],dh
  409519:	pop    DWORD PTR ds:0x2c3e3700
  40951f:	add    BYTE PTR [edi],dh
  409521:	nop
  409522:	add    eax,0x2c393700
  409527:	add    BYTE PTR [edi],dh
  409529:	pop    DWORD PTR ds:0x2c183700
  40952f:	add    BYTE PTR [eax],al
  409531:	add    BYTE PTR [edi],dh
  409533:	mov    es,WORD PTR ds:0x2c2c3700
  409539:	add    BYTE PTR [edi],dh
  40953b:	ins    DWORD PTR es:[edi],dx
  40953c:	add    eax,0xca343700
  409541:	sub    al,0x37
  409543:	xor    al,0x89
  409545:	add    esi,DWORD PTR [edi]
  409547:	xor    al,0xcb
  409549:	sub    al,0x37
  40954b:	xor    al,0x8a
  40954d:	add    esi,DWORD PTR [edi]
  40954f:	xor    al,0xcc
  409551:	sub    al,0x37
  409553:	xor    al,0x8b
  409555:	add    dh,BYTE PTR [edi]
  409557:	xor    al,0xc1
  409559:	sub    al,0x37
  40955b:	xor    al,0x84
  40955d:	add    esi,DWORD PTR [edi]
  40955f:	xor    al,0x92
  409561:	sub    al,0x37
  409563:	xor    al,0x45
  409565:	add    dh,BYTE PTR [edi]
  409567:	xor    al,0x83
  409569:	sub    al,0x37
  40956b:	xor    al,0x33
  40956d:	add    al,0x37
  40956f:	xor    al,0x94
  409571:	sub    al,0x37
  409573:	xor    al,0x1c
  409575:	add    al,0x37
  409577:	xor    al,0xf
  409579:	sub    eax,0x40d3437
  40957e:	aaa    
  40957f:	xor    al,0xea
  409581:	add    esi,DWORD PTR [edi]
  409583:	xor    al,0x80
  409585:	jmp    0x3e58cf2
  40958a:	aaa    
  40958b:	xor    al,0xe9
  40958d:	add    esi,DWORD PTR [edi]
  40958f:	xor    al,0xee
  409591:	add    esi,DWORD PTR [edi]
  409593:	xor    al,0xf8
  409595:	mov    dh,0x0
  409597:	add    BYTE PTR [eax-0x9],cl
  40959a:	in     al,dx
  40959b:	add    esi,DWORD PTR [edi]
  40959d:	xor    al,0xf8
  40959f:	mov    dh,0x38
  4095a1:	imul   eax
  4095a3:	add    DWORD PTR [edi],esi
  4095a5:	xor    al,0xe8
  4095a7:	add    esi,DWORD PTR [edi]
  4095a9:	xor    al,0xea
  4095ab:	add    DWORD PTR [edi],esi
  4095ad:	xor    al,0xea
  4095af:	add    esi,DWORD PTR [edi]
  4095b1:	xor    al,0xe9
  4095b3:	add    dh,BYTE PTR [edi]
  4095b5:	xor    al,0xe4
  4095b7:	add    esi,DWORD PTR [edi]
  4095b9:	xor    al,0x1
  4095bb:	jmp    0x4095f2
  4095bd:	xor    al,0x1
  4095bf:	out    0x34,eax
  4095c1:	xor    al,0x1
  4095c3:	mov    esp,0x4f0173bd
  4095c8:	push   esi
  4095c9:	je     0x4095cc
  4095cb:	pop    ebp
  4095cc:	push   esi
  4095cd:	je     0x4095d0
  4095cf:	add    edi,esp
  4095d1:	dec    esp
  4095d2:	add    DWORD PTR [ecx],ebx
  4095d4:	mov    WORD PTR [ecx+0x55],fs
  4095d7:	jmp    0x2e41ca10
  4095dc:	mul    BYTE PTR [edx+0x1]
  4095df:	and    edi,esp
  4095e1:	bound  edx,QWORD PTR [ecx-0x2a]
  4095e4:	stos   DWORD PTR es:[edi],eax
  4095e5:	dec    eax
  4095e6:	xor    cl,ch
  4095e8:	xor    al,0x34
  4095ea:	add    DWORD PTR [eax],ebp
  4095ec:	fcom   DWORD PTR [ecx+0x47e71964]
  4095f2:	dec    ebp
  4095f3:	or     BYTE PTR [ebp-0x2bf78b73],ch
  4095f9:	(bad)  
  4095fa:	cmp    ecx,ecx
  4095fc:	add    BYTE PTR [eax],al
  4095fe:	xor    al,0x34
  409600:	add    esp,ebx
  409602:	jp     0x4095fa
  409604:	std    
  409605:	stos   BYTE PTR es:[edi],al
  409606:	int    0x88
  409608:	outs   dx,DWORD PTR ds:[esi]
  409609:	les    edx,FWORD PTR [ecx-0x4139977e]
  40960f:	cmp    al,0x21
  409611:	stos   BYTE PTR es:[edi],al
  409612:	rol    BYTE PTR [ebp+0x2c4fcc72],0x1
  409619:	mov    ah,0x82
  40961b:	mov    ch,BYTE PTR [esi+eax*8-0x62]
  40961f:	dec    eax
  409620:	gs mov ebp,0xb6fdf6a0
  409626:	fiadd  DWORD PTR [ecx+0x60ce9060]
  40962c:	jb     0x4095ba
  40962e:	jmp    0x5281:0xbe846674
  409635:	add    BYTE PTR [edx-0x4e919741],dl
  40963b:	xor    DWORD PTR [ecx],eax
  40963d:	add    BYTE PTR [edi],cl
  40963f:	das    
  409640:	add    eax,0x1320e00
  409645:	add    BYTE PTR [edx],ah
  409647:	xor    BYTE PTR [eax+0x0],cl
  40964a:	sub    eax,0x1a005130
  40964f:	xor    BYTE PTR [eax+0x0],al
  409652:	daa    
  409653:	xor    BYTE PTR [ecx],al
  409655:	add    BYTE PTR [ebp+ecx*8+0x61],bh
  409659:	data16 jno 0x4095f4
  40965c:	imul   edi,DWORD PTR [bp+si-0x65],0x6b
  409661:	jo     0x409663
  409663:	add    bh,bh
  409665:	mov    ebp,0xc1507472
  40966a:	jne    0x4096e6
  40966c:	aas    
  40966d:	shr    DWORD PTR [eax+0x6f],cl
  409670:	inc    ebx
  409671:	(bad)  
  409672:	std    
  409673:	dec    DWORD PTR [ebx+0x52]
  409676:	inc    ecx
  409677:	add    bh,dl
  409679:	push   edx
  40967a:	inc    ecx
  40967b:	add    BYTE PTR [eax],ch
  40967d:	xor    al,0x42
  40967f:	add    BYTE PTR [eax],ch
  409681:	xor    al,0x42
  409683:	add    BYTE PTR [esi],dh
  409685:	les    esi,FWORD PTR [ecx+0x70]
  409688:	adc    al,0xd9
  40968a:	cs ja  0x40960e
  40968d:	ret    0x622b
  409690:	ja     0x40962d
  409692:	cs ins WORD PTR es:[edi],dx
  409695:	call   0x1:0x315e2f6c
  40969c:	lds    si,DWORD PTR [ecx+0x70]
  4096a0:	inc    esp
  4096a1:	fisubr DWORD PTR [esi]
  4096a3:	ja     0x409626
  4096a5:	ret    0x672b
  4096a8:	leave  
  4096a9:	cdq    
  4096aa:	data16 ins BYTE PTR es:[edi],dx
  4096ac:	mov    bl,0xda
  4096ae:	bound  ebp,QWORD PTR [edi+0x37]
  4096b1:	mov    al,0xda
  4096b3:	call   FWORD PTR [eax]
  4096b5:	imul   DWORD PTR [esi-0x51e8c8c1]
  4096bb:	aas    
  4096bc:	aaa    
  4096bd:	fwait
  4096be:	add    DWORD PTR [edx+0x37],esi
  4096c1:	scas   al,BYTE PTR es:[edi]
  4096c2:	add    DWORD PTR [eax+0x37],ebp
  4096c5:	mov    ah,0x1
  4096c7:	bound  eax,QWORD PTR [eax]
  4096c9:	add    BYTE PTR [edi],dh
  4096cb:	fs add eax,0x54f3774
  4096d1:	push   esp
  4096d2:	aaa    
  4096d3:	inc    edi
  4096d4:	add    eax,0x20b3700
  4096d9:	add    BYTE PTR [edi],dh
  4096db:	dec    esp
  4096dc:	mov    DWORD PTR [edx+0x73],0x6f46c350
  4096e3:	push   esp
  4096e4:	mov    edi,0xbb186b4a
  4096e9:	dec    esi
  4096ea:	pop    es
  4096eb:	cmp    al,0xd7
  4096ed:	push   edx
  4096ee:	add    eax,DWORD PTR [eax-0x2d]
  4096f1:	push   esi
  4096f2:	inc    DWORD PTR [ebx-0x31]
  4096f5:	pusha  
  4096f6:	adc    eax,0x1964a12a
  4096fb:	es popf 
  4096fd:	push   0x6c99221d
  409702:	adc    DWORD PTR [esi],ebp
  409704:	mov    ch,0x70
  409706:	add    eax,0xe974adfa
  40970b:	aad    0xa9
  40970d:	js     0x4096fc
  40970f:	sbb    dh,dl
  409711:	xor    DWORD PTR [edi+edx*1],esp
  409714:	out    dx,al
  409715:	xor    eax,0x2aea2320
  40971a:	and    BYTE PTR [ebx],cl
  40971c:	add    al,BYTE PTR [eax]
  40971e:	aaa    
  40971f:	or     eax,DWORD PTR [edx]
  409721:	add    BYTE PTR [edi],dh
  409723:	mov    edi,0xc81323dd
  409728:	mov    bl,0x72
  40972a:	stos   DWORD PTR es:[edi],eax
  40972b:	xor    al,0x9d
  40972d:	mov    cl,0x0
  40972f:	add    BYTE PTR [ecx-0x62525e94],ah
  409735:	sbb    ah,cl
  409737:	fist   WORD PTR [eax+ebx*1-0x3c]
  40973b:	fist   WORD PTR [edx+0x33]
  40973e:	test   al,0xc2
  409740:	jbe    0x4097b9
  409742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409743:	mov    esi,0xbaa07b7a
  409748:	outs   dx,BYTE PTR ds:[esi]
  409749:	jg     0x4096e7
  40974b:	mov    dh,0x82
  40974d:	cmp    DWORD PTR [eax],0xffffffd3
  409750:	xchg   BYTE PTR [edi-0x747530cc],al
  409756:	or     al,0xe0
  409758:	adc    al,0x18
  40975a:	add    al,0xe0
  40975c:	push   0x6ccd228d
  409761:	xchg   ecx,eax
  409762:	push   ds
  409763:	leave  
  409764:	pusha  
  409765:	push   ebp
  409766:	dec    edx
  409767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409768:	push   esp
  409769:	pop    ecx
  40976a:	inc    esi
  40976b:	mov    eax,ds:0x9d125d18
  409770:	sbb    al,0x61
  409772:	push   cs
  409773:	cdq    
  409774:	adc    BYTE PTR [ebp-0x18],ah
  409777:	add    esi,DWORD PTR [edi]
  409779:	xor    al,0xbe
  40977b:	add    ebx,DWORD PTR [ebx]
  40977d:	xor    al,0x9
  40977f:	add    al,0x3
  409781:	xor    al,0xe8
  409783:	add    esi,DWORD PTR [edi]
  409785:	xor    al,0x1b
  409787:	add    al,0x12
  409789:	xor    al,0x1b
  40978b:	add    al,0xdf
  40978d:	xor    ebx,ebp
  40978f:	add    esp,ebx
  409791:	xor    eax,esp
  409793:	add    eax,DWORD PTR [eax]
  409795:	add    al,dl
  409797:	xor    ebx,edi
  409799:	add    ecx,ecx
  40979b:	xor    edi,DWORD PTR [eax-0x2ecc3afd]
  4097a1:	add    eax,ecx
  4097a3:	xor    edx,ecx
  4097a5:	add    edx,ebx
  4097a7:	xor    eax,DWORD PTR [ecx]
  4097a9:	int3   
  4097aa:	xor    al,0x5b
  4097ac:	add    esp,eax
  4097ae:	xor    al,0x34
  4097b0:	add    esi,esp
  4097b2:	out    dx,eax
  4097b3:	repnz std 
  4097b5:	(bad)  
  4097b7:	repnz std 
  4097b9:	(bad)  
  4097ba:	call   0x34cb95b1
  4097bf:	push   ebp
  4097c0:	add    DWORD PTR [ebx-0x75fecbcc],ecx
  4097c6:	aad    0x54
  4097c8:	push   0x2f669987
  4097cd:	test   eax,ecx
  4097cf:	pop    esi
  4097d0:	add    DWORD PTR [edi],ebp
  4097d2:	hlt    
  4097d3:	jnp    0x409817
  4097d5:	pop    ebx
  4097d6:	xchg   esi,eax
  4097d7:	push   ebx
  4097d8:	jne    0x409826
  4097da:	xor    esi,DWORD PTR [ecx+eax*1]
  4097dd:	daa    
  4097de:	hlt    
  4097df:	jnp    0x409821
  4097e1:	dec    ebp
  4097e2:	xchg   edi,eax
  4097e3:	js     0x40984d
  4097e5:	dec    ebp
  4097e6:	xchg   esi,eax
  4097e7:	repnz std 
  4097e9:	das    
  4097ea:	hlt    
  4097eb:	jnp    0x409834
  4097ed:	cmp    eax,0x2a6965e6
  4097f2:	rcl    BYTE PTR [eax+ebp*2+0xf],cl
  4097f6:	(bad)  
  4097f7:	add    WORD PTR [edi],bp
  4097fa:	add    BYTE PTR [eax],al
  4097fc:	je     0x409879
  4097fe:	inc    ebp
  4097ff:	add    al,0xc4
  409801:	data16 jae 0x40981a
  409804:	(bad)  
  409806:	std    
  409807:	mov    eax,0xbc2f246a
  40980c:	xor    al,0x34
  40980e:	add    DWORD PTR [esp+esi*1-0x5544fecc],edi
  409815:	je     0x409838
  409817:	sbb    DWORD PTR [ebx+0x25],ebp
  40981a:	das    
  40981b:	sbb    DWORD PTR [ebx+0x25],esp
  40981e:	or     ebp,ecx
  409820:	xor    al,0x34
  409822:	add    DWORD PTR [eax],eax
  409824:	lods   al,BYTE PTR ds:[esi]
  409825:	mov    al,0x3f
  409827:	and    BYTE PTR [esi+0x36],cl
  40982a:	add    DWORD PTR [eax],eax
  40982c:	dec    esi
  40982d:	add    DWORD PTR ss:[eax],eax
  409830:	push   ds
  409831:	add    DWORD PTR ss:[eax],eax
  409834:	push   ds
  409835:	add    DWORD PTR ss:[eax],eax
  409838:	push   cs
  409839:	add    BYTE PTR ss:[eax],al
  40983c:	(bad)  
  40983d:	xor    eax,0x35ee003b
  409842:	add    DWORD PTR [eax],eax
  409844:	mov    dh,BYTE PTR ds:0x357e006c
  40984a:	add    DWORD PTR [eax],eax
  40984c:	jmp    0x409883
  40984e:	jb     0x409850
  409850:	sti    
  409851:	xor    eax,0x38160031
  409856:	jns    0x409858
  409858:	xor    BYTE PTR [eax],bh
  40985a:	and    al,0x0
  40985c:	jge    0x409896
  40985e:	add    DWORD PTR [eax],eax
  409860:	add    BYTE PTR [eax],al
  409862:	cmp    edi,DWORD PTR [eax]
  409864:	jb     0x409866
  409866:	cmp    edi,DWORD PTR [eax]
  409868:	xor    DWORD PTR [eax],eax
  40986a:	cmp    BYTE PTR ss:[ecx+0x0],bh
  40986e:	into   
  40986f:	xor    eax,0x38340001
  409874:	add    DWORD PTR [eax],eax
  409876:	mov    cl,dl
  409878:	inc    eax
  409879:	add    BYTE PTR [ecx],bh
  40987b:	xchg   esp,eax
  40987c:	push   0x72a33270
  409881:	cs cmp cl,ah
  409884:	imul   eax,DWORD PTR [eax],0x70689459
  40988a:	xor    ah,BYTE PTR [ebx-0x6785ac8e]
  409890:	outs   dx,DWORD PTR ds:[esi]
  409891:	je     0x4098fe
  409893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409894:	std    
  409895:	call   FWORD PTR [ecx+0x727068d1]
  40989b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40989c:	jb     0x4098f1
  40989e:	aaa    
  40989f:	repz mov al,0x73
  4098a2:	(bad)  [ecx-0x5dc89252]
  4098a8:	popf   
  4098a9:	push   0x64af9dc7
  4098ae:	(bad)  
  4098af:	scas   al,BYTE PTR es:[edi]
  4098b0:	mov    al,ds:0x98a79e41
  4098b5:	pusha  
  4098b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b7:	mov    eax,ds:0xa3926eaf
  4098bc:	mov    edi,0xc4988348
  4098c1:	dec    edi
  4098c2:	aaa    
  4098c3:	call   0x9f87:0x689d
  4098ca:	pushf  
  4098cb:	jb     0x409854
  4098cd:	ret    0x64b2
  4098d0:	outs   dx,BYTE PTR ds:[esi]
  4098d1:	mov    eax,0xdb5a66a4
  4098d6:	add    DWORD PTR [eax],eax
  4098d8:	aaa    
  4098d9:	and    ah,BYTE PTR [ecx-0x61e59898]
  4098df:	jae    0x40994f
  4098e1:	js     0x409885
  4098e3:	pop    dx
  4098e5:	sbb    BYTE PTR [edi-0x6180a79e],dl
  4098eb:	jno    0x409931
  4098ed:	dec    esi
  4098ee:	call   0x3700:0x1db5279
  4098f5:	sbb    ah,BYTE PTR [ecx-0x61ddd898]
  4098fb:	jae    0x4098eb
  4098fd:	aas    
  4098fe:	mov    ds:0x97201266,al
  409903:	bound  esp,QWORD PTR [eax]
  409905:	aaa    
  409906:	sahf   
  409907:	jno    0x40990d
  409909:	fild   DWORD PTR [ecx]
  40990b:	add    BYTE PTR [edi],dh
  40990d:	sbb    ah,BYTE PTR [ecx-0x5db1f898]
  409913:	jne    0x4098ef
  409915:	adc    edx,DWORD PTR [esi-0x32cc2fa0]
  40991b:	iret   
  40991c:	rol    DWORD PTR [esp+edx*8-0x3aad2c4f],1
  409923:	add    esi,DWORD PTR [edi]
  409925:	xor    al,0x95
  409927:	and    ah,ch
  409929:	dec    esi
  40992a:	mov    dl,0x29
  40992c:	add    BYTE PTR [eax],al
  40992e:	adc    dh,BYTE PTR [edi+0x5c]
  409931:	inc    edi
  409932:	fisub  DWORD PTR [eax+ebx*4+0x3dc19fe]
  409939:	lds    edi,FWORD PTR [eax-0x7e]
  40993c:	mov    bh,0xcb
  40993e:	jg     0x4098cf
  409940:	mov    ebx,0xad8686be
  409945:	shl    DWORD PTR [ecx+0x7c],1
  409948:	lahf   
  409949:	shl    BYTE PTR [edi+ecx*4-0x34],1
  40994d:	add    esi,DWORD PTR [edi]
  40994f:	xor    al,0x91
  409951:	xchg   ebp,eax
  409952:	mov    ds,WORD PTR [ecx-0x75]
  409955:	scas   eax,DWORD PTR es:[edi]
  409956:	lock out dx,eax
  409958:	jge    0x40995d
  40995a:	fs xor al,0x58
  40995d:	add    al,0x65
  40995f:	xor    al,0x14
  409961:	add    al,0x9
  409963:	xor    al,0x4c
  409965:	add    al,0x63
  409967:	xor    al,0x3c
  409969:	add    al,0x37
  40996b:	xor    al,0xf5
  40996d:	stc    
  40996e:	xor    edi,DWORD PTR [edx]
  409970:	call   0xf874d078
  409975:	idiv   BYTE PTR [esi]
  409977:	inc    ecx
  409978:	loop   0x40997d
  40997a:	aaa    
  40997b:	xor    al,0xcd
  40997d:	stos   DWORD PTR es:[edi],eax
  40997e:	mov    al,ds:0x98e3e1ef
  409983:	out    dx,eax
  409984:	and    eax,0x333f660
  409989:	add    al,0x12
  40998b:	xor    al,0xfa
  40998d:	add    edx,DWORD PTR [ecx]
  40998f:	xor    al,0x5
  409991:	add    al,0x0
  409993:	add    BYTE PTR [ebx],cl
  409995:	xor    al,0x1
  409997:	mov    edx,0xbf012234
  40999c:	xor    al,0x58
  40999e:	add    ebp,edx
  4099a0:	xor    al,0x60
  4099a2:	add    ecx,ebp
  4099a4:	xor    al,0x34
  4099a6:	add    DWORD PTR [eax-0x29917979],esp
  4099ac:	pop    edx
  4099ad:	and    edx,DWORD PTR [ecx-0x45]
  4099b0:	stos   DWORD PTR es:[edi],eax
  4099b1:	push   edx
  4099b2:	fs mov edx,0xbfdef87
  4099b8:	cmp    ebx,DWORD PTR [ecx]
  4099ba:	add    DWORD PTR [edx-0x16feedcc],edi
  4099c0:	xor    al,0x34
  4099c2:	add    ebx,ecx
  4099c4:	xor    al,0x19
  4099c6:	add    DWORD PTR [edx-0x36feedcc],ebx
  4099cc:	xor    al,0x19
  4099ce:	add    DWORD PTR [edx+0x34],edi
  4099d1:	xor    al,0x1
  4099d3:	je     0x40999c
  4099d5:	push   edi
  4099d6:	jae    0x409964
  4099d8:	retf   0x2f68
  4099db:	test   eax,eax
  4099dd:	pop    edx
  4099de:	add    DWORD PTR [edx],ebp
  4099e0:	leave  
  4099e1:	push   edi
  4099e2:	pusha  
  4099e3:	push   ebp
  4099e4:	mov    ?,WORD PTR [edi+0x6f]
  4099e7:	pop    edi
  4099e8:	mov    ds:0x863f6e64,al
  4099ed:	push   edi
  4099ee:	outs   dx,DWORD PTR ds:[esi]
  4099ef:	cmp    eax,0x4a6e5af9
  4099f4:	mov    dh,ch
  4099f6:	std    
  4099f7:	sub    eax,0x61de0000
  4099fc:	jne    0x409a39
  4099fe:	in     al,0x6b
  409a00:	inc    esp
  409a01:	pop    ss
  409a02:	mov    ebp,0xe50e735b
  409a07:	pop    edi
  409a08:	fs pop es
  409a0a:	scas   eax,DWORD PTR es:[edi]
  409a0b:	je     0x409a7a
  409a0d:	(bad)  
  409a0e:	rcr    DWORD PTR [ecx+0x1],1
  409a11:	add    BYTE PTR [esi+edx*4+0xc],dh
  409a15:	or     dh,BYTE PTR [edx]
  409a17:	popf   
  409a18:	imul   esp,DWORD PTR [eax],0x2272db7c
  409a1e:	mov    eax,DWORD PTR [eax+0x68]
  409a21:	cs popfw 
  409a24:	jne    0x409a8f
  409a26:	jge    0x4099ee
  409a28:	sbb    eax,0x1fc74322
  409a2d:	and    BYTE PTR [ecx-0x5f],dh
  409a30:	jno    0x409aa1
  409a32:	cs pushf 
  409a34:	std    
  409a35:	jmp    FWORD PTR [edx+esi*1+0x60]
  409a39:	add    dl,dh
  409a3b:	xor    DWORD PTR [ecx],eax
  409a3d:	add    dh,bl
  409a3f:	pushf  
  409a40:	bound  ebp,QWORD PTR [eax-0x37]
  409a43:	shr    DWORD PTR [esi+0x66],1
  409a46:	mov    al,0x44
  409a48:	or     esp,DWORD PTR ds:0x640b44ad
  409a4e:	mov    bl,0x9d
  409a50:	sbb    eax,0x1fd1d02f
  409a55:	and    eax,0xa0cd77d
  409a5a:	fidiv  WORD PTR [ecx]
  409a5c:	add    DWORD PTR [eax],eax
  409a5e:	add    BYTE PTR [eax],al
  409a60:	test   eax,0x2e006231
  409a65:	cmp    BYTE PTR [ebx],ah
  409a67:	add    BYTE PTR [ebx],dh
  409a69:	cmp    BYTE PTR [edx+0x0],dh
  409a6c:	cmp    al,0x38
  409a6e:	add    DWORD PTR [eax],eax
  409a70:	sbb    eax,0x6b006e38
  409a75:	cmp    BYTE PTR [edx+0x0],dl
  409a78:	(bad)  
  409a79:	aaa    
  409a7a:	fs add ch,bh
  409a7d:	aaa    
  409a7e:	add    DWORD PTR [eax],eax
  409a80:	dec    esi
  409a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a82:	pop    esi
  409a83:	dec    edi
  409a84:	ds fwait
  409a86:	imul   edx,DWORD PTR [ebp+ecx*2-0x58],0x52
  409a8b:	outs   dx,DWORD PTR ds:[esi]
  409a8c:	aaa    
  409a8d:	cmp    ch,BYTE PTR [esi+0x1db0364]
  409a93:	add    BYTE PTR [edi],dh
  409a95:	dec    ebx
  409a96:	mov    bh,0x5e
  409a98:	hlt    
  409a99:	ds mov dl,0x72
  409a9c:	fcmovu st,st(2)
  409a9e:	add    DWORD PTR [eax],eax
  409aa0:	aaa    
  409aa1:	dec    ebx
  409aa2:	mov    bh,0x5e
  409aa4:	pop    es
  409aa5:	push   es
  409aa6:	scas   al,BYTE PTR es:[edi]
  409aa7:	imul   esi,DWORD PTR [edi],0xffffffab
  409aaa:	mov    bl,0x5e
  409aac:	in     eax,0xff
  409aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aaf:	arpl   WORD PTR [edi],si
  409ab1:	stos   DWORD PTR es:[edi],eax
  409ab2:	mov    bl,0x5e
  409ab4:	call   0xd2b44761
  409ab9:	fiadd  DWORD PTR [ecx]
  409abb:	add    BYTE PTR [edi],dh
  409abd:	cmp    BYTE PTR ds:0x1db376d,al
  409ac3:	add    BYTE PTR [eax],al
  409ac5:	add    BYTE PTR [edi],dh
  409ac7:	sti    
  409ac8:	add    DWORD PTR ds:0x1b537,ebp
  409ace:	aaa    
  409acf:	clc    
  409ad0:	add    DWORD PTR [ebp+0x37],ebp
  409ad3:	clc    
  409ad4:	add    DWORD PTR [eax+0x37],esi
  409ad7:	add    BYTE PTR [edx],al
  409ad9:	jae    0x409b12
  409adb:	fild   DWORD PTR [ecx]
  409add:	add    BYTE PTR [edi],dh
  409adf:	cmc    
  409ae0:	add    DWORD PTR [eax],esi
  409ae2:	aaa    
  409ae3:	fild   DWORD PTR [ecx]
  409ae5:	add    BYTE PTR [edi],dh
  409ae7:	inc    esi
  409ae8:	stos   BYTE PTR es:[edi],al
  409ae9:	ins    DWORD PTR es:[edi],dx
  409aea:	push   ebx
  409aeb:	js     0x409a8a
  409aed:	sub    eax,0xff957347
  409af2:	enter  0x578,0x63
  409af6:	aaa    
  409af7:	fild   DWORD PTR [ecx]
  409af9:	add    BYTE PTR [edi],dh
  409afb:	and    BYTE PTR ds:0x1db3759,al
  409b01:	add    BYTE PTR [edi],dh
  409b03:	in     eax,dx
  409b04:	add    DWORD PTR [edi+esi*1+0x34],esi
  409b08:	and    BYTE PTR [ebx+eiz*1],al
  409b0b:	xor    al,0xe8
  409b0d:	add    esi,DWORD PTR [edi]
  409b0f:	xor    al,0x78
  409b11:	jecxz  0x409a9b
  409b13:	in     al,dx
  409b14:	mov    DWORD PTR [ebx],0x29a13437
  409b1a:	div    DWORD PTR [ebx]
  409b1c:	jp     0x409b30
  409b1e:	div    BYTE PTR [ebx]
  409b20:	mov    al,ds:0x1b33f61b
  409b25:	add    al,0xde
  409b27:	xor    ebx,ebx
  409b29:	add    eax,DWORD PTR [eax]
  409b2b:	add    bl,ch
  409b2d:	xor    edx,ecx
  409b2f:	add    eax,esp
  409b31:	xor    ebx,esp
  409b33:	add    esp,ecx
  409b35:	xor    eax,ecx
  409b37:	add    ebx,edx
  409b39:	xor    edi,DWORD PTR [edi-0x5cbfbfd]
  409b3f:	add    esi,DWORD PTR [edi]
  409b41:	xor    al,0xa5
  409b43:	add    esi,DWORD PTR [ebx+0x34]
  409b46:	mov    eax,ds:0x94347403
  409b4b:	add    ecx,DWORD PTR [esi-0x5efc7acc]
  409b51:	xor    al,0x9c
  409b53:	add    esi,DWORD PTR [edi]
  409b55:	xor    al,0xab
  409b57:	add    ecx,DWORD PTR [esi-0x6dfc74cc]
  409b5d:	xor    al,0x7a
  409b5f:	add    esp,DWORD PTR [eax+0x34]
  409b62:	popf   
  409b63:	add    edi,DWORD PTR [esi+0x34]
  409b66:	xchg   edi,eax
  409b67:	add    edx,DWORD PTR [ecx+0x34]
  409b6a:	dec    esp
  409b6b:	add    al,0x71
  409b6d:	xor    al,0x5a
  409b6f:	add    al,0x56
  409b71:	xor    al,0x45
  409b73:	add    al,0x52
  409b75:	xor    al,0xe8
  409b77:	add    esi,DWORD PTR [edi]
  409b79:	xor    al,0x2b
  409b7b:	add    al,0x48
  409b7d:	xor    al,0x4e
  409b7f:	add    al,0x24
  409b81:	xor    al,0x1
  409b83:	inc    esi
  409b84:	xor    ebx,DWORD PTR [eax+0x1]
  409b87:	inc    esp
  409b88:	cmp    eax,DWORD PTR [ebx+0x5a331001]
  409b8e:	add    DWORD PTR ds:0x5b3b0000,eax
  409b94:	add    DWORD PTR [esi],ebx
  409b96:	xor    esi,DWORD PTR [edi+0x1]
  409b99:	std    
  409b9a:	xor    al,0x55
  409b9c:	add    edx,edi
  409b9e:	xor    al,0x67
  409ba0:	add    ecx,ebp
  409ba2:	xor    al,0x34
  409ba4:	add    edx,ecx
  409ba6:	xor    al,0x27
  409ba8:	add    DWORD PTR [ebx+0x1f012334],edi
  409bae:	xor    ebp,DWORD PTR [ecx+eax*1]
  409bb1:	jmp    0xba41cfea
  409bb6:	xor    al,0x6d
  409bb8:	add    edx,ebx
  409bba:	xor    al,0x87
  409bbc:	add    ecx,edx
  409bbe:	xor    al,0x55
  409bc0:	add    ebp,eax
  409bc2:	xor    al,0x5b
  409bc4:	add    DWORD PTR [esi-0x58fecbcc],edi
  409bca:	in     eax,dx
  409bcb:	or     BYTE PTR [esp+ebp*4+0x34],0x34
  409bd0:	add    DWORD PTR [ebx+0x27],ecx
  409bd3:	jbe    0x409bd6
  409bd5:	scas   al,BYTE PTR es:[edi]
  409bd6:	shl    DWORD PTR [esi+0x51],1
  409bd9:	fwait
  409bda:	(bad)  
  409bdb:	push   ebp
  409bdc:	inc    eax
  409bdd:	(bad)  
  409bde:	shl    BYTE PTR [esp+eiz*2+0x7a],1
  409be2:	retf   
  409be3:	jmp    0x9d65:0x53a7a5fd
  409bea:	lea    edx,[ebx+esi*2+0x48]
  409bee:	lds    ebp,FWORD PTR [ebx+0x40]
  409bf1:	jmp    0x2741d02a
  409bf6:	add    BYTE PTR [eax],al
  409bf8:	scas   eax,DWORD PTR es:[edi]
  409bf9:	jne    0x409c6e
  409bfb:	inc    esp
  409bfc:	call   0x6f98:0x1a006466
  409c03:	call   FWORD PTR gs:[ebx-0x33af0003]
  409c0a:	inc    edx
  409c0b:	jb     0x409c08
  409c0d:	nop
  409c0e:	jno    0x409c75
  409c10:	pop    ebx
  409c11:	(bad)  
  409c12:	fs jb  0x409c63
  409c15:	(bad)  
  409c16:	outs   dx,BYTE PTR ds:[esi]
  409c17:	arpl   WORD PTR [ebx],di
  409c19:	(bad)  
  409c1a:	jb     0x409c1c
  409c1c:	and    ah,cl
  409c1e:	push   eax
  409c1f:	jne    0x409c4c
  409c21:	(bad)  
  409c22:	js     0x409c6d
  409c24:	inc    eax
  409c25:	xchg   edx,eax
  409c26:	outs   dx,BYTE PTR ds:[esi]
  409c27:	jb     0x409c5c
  409c29:	xchg   ecx,eax
  409c2a:	jno    0x409c95
  409c2c:	popa   
  409c2d:	cwde   
  409c2e:	dec    ebp
  409c2f:	jb     0x409bb2
  409c31:	xchg   ebp,eax
  409c32:	fs jae 0x409ca2
  409c35:	add    DWORD PTR ss:[eax],eax
  409c38:	mov    edx,es
  409c3a:	imul   edx,DWORD PTR [ebp+0x5d],0x66546f9b
  409c41:	les    esp,FWORD PTR [ecx+eiz*2-0x6]
  409c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c46:	jno    0x409ca9
  409c48:	in     al,dx
  409c49:	sar    ebp,0xff
  409c4c:	ret    0x6f91
  409c4f:	dec    esp
  409c50:	rcl    DWORD PTR [eax-0x663dbb9f],0xfd
  409c57:	call   edx
  409c59:	xchg   ecx,eax
  409c5a:	outs   dx,DWORD PTR ds:[esi]
  409c5b:	inc    edi
  409c5c:	add    BYTE PTR [eax],al
  409c5e:	mov    ebx,0xa26c41c1
  409c63:	std    
  409c64:	pusha  
  409c65:	outs   dx,BYTE PTR ds:[esi]
  409c66:	mov    edx,0xbd006499
  409c6b:	cwde   
  409c6c:	popa   
  409c6d:	add    dh,cl
  409c6f:	xor    eax,0x301d0001
  409c74:	dec    esi
  409c75:	add    BYTE PTR [eax],bl
  409c77:	xor    BYTE PTR [ebp+0x0],dl
  409c7a:	aaa    
  409c7b:	sub    al,BYTE PTR ds:0x52d3741
  409c81:	inc    ebp
  409c82:	aaa    
  409c83:	syscall 
  409c85:	dec    ebp
  409c86:	aaa    
  409c87:	test   BYTE PTR ds:0x52d3763,al
  409c8d:	outs   dx,DWORD PTR ds:[esi]
  409c8e:	aaa    
  409c8f:	cs add eax,0x539376f
  409c95:	je     0x409cce
  409c97:	daa    
  409c98:	add    eax,0x5343757
  409c9d:	outs   dx,BYTE PTR ds:[esi]
  409c9e:	aaa    
  409c9f:	das    
  409ca0:	add    eax,0x1ea376f
  409ca5:	jae    0x409cde
  409ca7:	sti    
  409ca8:	add    DWORD PTR [esi+0x37],ecx
  409cab:	inc    edi
  409cac:	add    eax,0x51e375c
  409cb1:	jne    0x409cea
  409cb3:	or     eax,0xf0377202
  409cb8:	add    DWORD PTR [esi+0x37],ebp
  409cbb:	pop    es
  409cbc:	add    dl,BYTE PTR [esi+0x37]
  409cbf:	lock add DWORD PTR [edx+0x0],esi
  409cc3:	add    BYTE PTR [edi],dh
  409cc5:	scas   al,BYTE PTR es:[edi]
  409cc6:	add    DWORD PTR [ecx+0x37],ebp
  409cc9:	cli    
  409cca:	add    DWORD PTR [esi+0x37],ebp
  409ccd:	mov    edi,0xad375001
  409cd2:	add    DWORD PTR [edi+0x37],ebp
  409cd5:	mov    ecx,0xb7376901
  409cda:	add    DWORD PTR [ebp+0x37],esp
  409cdd:	pop    DWORD PTR [ecx]
  409cdf:	imul   esi,DWORD PTR [edi],0x377401ce
  409ce5:	pop    DWORD PTR [ecx]
  409ce7:	and    eax,0x26e37
  409cec:	aaa    
  409ced:	retf   
  409cee:	add    DWORD PTR [edx+0x37],esi
  409cf1:	push   0x2
  409cf3:	data16 aaa 
  409cf5:	xor    al,0x51
  409cf7:	add    al,0x63
  409cf9:	xor    al,0x45
  409cfb:	add    al,0x7e
  409cfd:	xor    al,0x45
  409cff:	add    al,0x56
  409d01:	xor    al,0x47
  409d03:	add    al,0x52
  409d05:	xor    al,0x18
  409d07:	add    al,0x16
  409d09:	xor    al,0x34
  409d0b:	add    al,0x1f
  409d0d:	xor    al,0xe8
  409d0f:	add    esi,DWORD PTR [edi]
  409d11:	xor    al,0xe8
  409d13:	xchg   edi,eax
  409d14:	bound  ecx,QWORD PTR [ebx-0x17]
  409d17:	xchg   edi,eax
  409d18:	dec    edx
  409d19:	dec    ebx
  409d1a:	sti    
  409d1b:	inc    ecx
  409d1c:	addr16 imul edi,esp,0x41
  409d20:	addr16 imul edi,edx,0xffffffe0
  409d24:	ds xchg esi,eax
  409d26:	adc    ebp,DWORD PTR [ebx-0x17900000]
  409d2c:	(bad)  
  409d2e:	push   0x60d6ffe8
  409d33:	call   0xe8997537
  409d38:	iret   
  409d39:	rcl    BYTE PTR [eax-0x18],1
  409d3c:	iret   
  409d3d:	ror    DWORD PTR [eax-0x18],1
  409d40:	mov    edi,0xc3e840d2
  409d45:	stos   BYTE PTR es:[edi],al
  409d46:	ret    0xbc33
  409d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d4a:	xor    al,ch
  409d4c:	mov    bl,0x91
  409d4e:	sub    al,ch
  409d50:	mov    edi,0xc9e82091
  409d55:	xchg   ecx,eax
  409d56:	sbb    al,ch
  409d58:	jmp    0xeb72d25e
  409d5d:	add    DWORD PTR ds:0x3501ea32,esi
  409d63:	xor    ah,dl
  409d65:	or     DWORD PTR ds:0x3d09f214,ebp
  409d6b:	cmp    dh,dl
  409d6d:	or     DWORD PTR ds:0x977a013a,edi
  409d73:	gs push 0xfde7c079
  409d79:	push   edi
  409d7a:	xchg   ebp,eax
  409d7b:	bound  esi,QWORD PTR [ecx+0x22]
  409d7e:	xor    esi,DWORD PTR [ecx+eax*1]
  409d81:	sub    edx,DWORD PTR [edx+eiz*2-0x182cb598]
  409d88:	std    
  409d89:	enter  0x7b38,0x8c
  409d8d:	clc    
  409d8e:	add    BYTE PTR [eax],al
  409d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d91:	test   DWORD PTR [edi],0xc133fc68
  409d97:	push   ds
  409d98:	pop    ebx
  409d99:	mov    dh,BYTE PTR [ebp-0x38e3798]
  409d9f:	gs xchg edi,esi
  409da2:	cmovb  esp,ecx
  409da5:	xor    esp,DWORD PTR [ecx]
  409da7:	cmp    eax,DWORD PTR ds:0xb090a40b
  409dae:	sti    
  409daf:	addr16 retf 
  409db1:	test   DWORD PTR [edi],0xbde7a66b
  409db7:	push   ds
  409db8:	sbb    ecx,DWORD PTR [edx-0x7348474b]
  409dbe:	les    esp,FWORD PTR [edi-0x55]
  409dc1:	test   DWORD PTR [edi],0xbde7866b
  409dc7:	sahf   
  409dc8:	cld    
  409dc9:	mov    DWORD PTR [ebp-0x44fefe4],esi
  409dcf:	addr16 retf 
  409dd1:	test   BYTE PTR [edi],0x6b
  409dd4:	out    0xe6,al
  409dd6:	mov    ebp,0xb58a5c9e
  409ddb:	push   eax
  409ddc:	xchg   BYTE PTR [eax],bh
  409dde:	out    0x1c,al
  409de0:	inc    DWORD PTR [ebx]
  409de2:	adc    BYTE PTR [ebx-0x77],ah
  409de5:	xor    al,0xc1
  409de7:	sahf   
  409de8:	pop    ebp
  409de9:	test   edx,esi
  409deb:	add    BYTE PTR [ebp+eiz*2-0x111418f3],al
  409df2:	rcl    BYTE PTR [ecx],1
  409df4:	add    BYTE PTR [eax],al
  409df6:	push   esp
  409df7:	pop    esi
  409df8:	add    eax,eax
  409dfa:	mov    ecx,0xc4f35089
  409dff:	xor    al,BYTE PTR [ecx]
  409e01:	add    BYTE PTR ds:0x36003b30,cl
  409e07:	xor    BYTE PTR [eax+eax*1+0x1a],cl
  409e0b:	xor    BYTE PTR [edx],bh
  409e0d:	add    BYTE PTR ds:0x4c004f30,dh
  409e13:	xor    BYTE PTR [edi+0x0],cl
  409e16:	inc    ecx
  409e17:	xor    BYTE PTR [edi+0x0],cl
  409e1a:	inc    esi
  409e1b:	xor    BYTE PTR [edx],bh
  409e1d:	add    BYTE PTR [ebp+0x5a003a32],dl
  409e23:	xor    BYTE PTR [esi+0x0],dl
  409e26:	ja     0x409e5a
  409e28:	add    DWORD PTR [eax],eax
  409e2a:	cmp    eax,0x4d006430
  409e2f:	xor    BYTE PTR [eax+eax*1+0x3d],ah
  409e33:	xor    BYTE PTR [eax+eax*1+0x5c],dh
  409e37:	xor    ch,BYTE PTR [eax+0x0]
  409e3a:	bound  esi,QWORD PTR [edx]
  409e3c:	js     0x409e3e
  409e3e:	mov    ?,WORD PTR [edx]
  409e40:	jae    0x409e42
  409e42:	xor    dh,BYTE PTR [bx+0x0]
  409e46:	ja     0x409e7a
  409e48:	ins    DWORD PTR es:[edi],dx
  409e49:	add    BYTE PTR [ebx+0x32],dh
  409e4c:	data16 add BYTE PTR [ebx],al
  409e4f:	xor    al,BYTE PTR [ecx]
  409e51:	add    ch,cl
  409e53:	xor    DWORD PTR [ebx],edi
  409e55:	add    BYTE PTR [esi],dh
  409e57:	xor    BYTE PTR [eax+eax*1+0x0],cl
  409e5b:	add    BYTE PTR [edx-0x22ffc5cf],bh
  409e61:	xor    DWORD PTR [eax+0x0],ecx
  409e64:	fnstenv [ecx]
  409e66:	dec    eax
  409e67:	add    BYTE PTR [edi],dh
  409e69:	add    al,BYTE PTR [edx]
  409e6b:	dec    esi
  409e6c:	aaa    
  409e6d:	test   eax,0xc6374e01
  409e72:	add    DWORD PTR [esi+0x37],ecx
  409e75:	xchg   ebx,eax
  409e76:	add    DWORD PTR [ebx],edi
  409e78:	aaa    
  409e79:	mov    ds:0xc7373b01,al
  409e7e:	add    DWORD PTR [edi+0x37],edx
  409e81:	inc    esp
  409e82:	add    eax,0x5f733700
  409e87:	inc    edx
  409e88:	aaa    
  409e89:	xor    BYTE PTR ds:0x1db3776,al
  409e8f:	add    BYTE PTR [edi],dh
  409e91:	jl     0x409e3e
  409e93:	pop    ds
  409e94:	and    dh,BYTE PTR [ebp-0x52]
  409e97:	ins    DWORD PTR es:[edi],dx
  409e98:	adc    BYTE PTR [esi],ah
  409e9a:	stos   DWORD PTR es:[edi],eax
  409e9b:	pop    ds
  409e9c:	adc    ch,BYTE PTR [ecx]
  409e9e:	xchg   edi,eax
  409e9f:	outs   dx,BYTE PTR ds:[esi]
  409ea0:	add    eax,0x1462aafb
  409ea5:	inc    eax
  409ea6:	xchg   edi,eax
  409ea7:	jno    0x409ec3
  409ea9:	aaa    
  409eaa:	add    eax,0xb5133700
  409eaf:	inc    esp
  409eb0:	adc    BYTE PTR [eax-0x35],cl
  409eb3:	dec    edx
  409eb4:	stc    
  409eb5:	adc    eax,0xeb374db2
  409eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ebb:	jno    0x409ea1
  409ebd:	das    
  409ebe:	xchg   edi,eax
  409ebf:	pop    ds
  409ec0:	add    BYTE PTR [eax],al
  409ec2:	fimul  WORD PTR [ecx]
  409ec4:	loop   0x409f35
  409ec6:	(bad)  
  409ec7:	call   DWORD PTR [esi+0x1dadb64]
  409ecd:	add    BYTE PTR [edi],dh
  409ecf:	xchg   ebx,eax
  409ed0:	mov    cl,0x44
  409ed2:	nop
  409ed3:	retf   
  409ed4:	les    edx,FWORD PTR [esp+eax*4-0x70]
  409ed8:	mov    ebp,0x8daa20ff
  409edd:	jno    0x409e6d
  409edf:	cli    
  409ee0:	lea    ebx,[edi]
  409ee2:	mov    ds:0x939f9734,al
  409ee7:	adc    al,0x89
  409ee9:	xchg   esi,eax
  409eea:	test   DWORD PTR [edi-0x66],ecx
  409eed:	(bad)  
  409eee:	(bad)  
  409eef:	push   ebp
  409ef0:	jle    0x409ed5
  409ef2:	pop    edx
  409ef3:	push   ebx
  409ef4:	xchg   ecx,eax
  409ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ef6:	push   ebx
  409ef7:	push   eax
  409ef8:	call   0xa074d600
  409efd:	mov    bl,0x73
  409eff:	test   DWORD PTR [ebx+0x2b7b66af],ebx
  409f05:	mov    al,0xc8
  409f07:	in     al,0x44
  409f09:	stos   BYTE PTR es:[edi],al
  409f0a:	push   ebp
  409f0b:	push   ebp
  409f0c:	pop    ebp
  409f0d:	stos   BYTE PTR es:[edi],al
  409f0e:	inc    esp
  409f0f:	dec    edi
  409f10:	pop    edx
  409f11:	lahf   
  409f12:	adc    al,0x14
  409f14:	cmp    eax,0x386c13aa
  409f19:	lahf   
  409f1a:	adc    eax,0x38a04d60
  409f1f:	pop    ebx
  409f20:	ds nop
  409f22:	sbb    esp,DWORD PTR [edx+0x16]
  409f25:	mov    ds:0x141c0000,eax
  409f2a:	sbb    edx,DWORD PTR [eax+0x40d6017]
  409f30:	aaa    
  409f31:	xor    al,0x20
  409f33:	mov    ah,0xfb
  409f35:	test   BYTE PTR [ecx],dh
  409f37:	retf   0x7302
  409f3a:	sub    al,0xcb
  409f3c:	hlt    
  409f3d:	test   BYTE PTR [ecx],ah
  409f3f:	retf   0x6f04
  409f42:	sbb    cl,dl
  409f44:	div    DWORD PTR [edi-0x39]
  409f47:	mov    ah,0xe4
  409f49:	jb     0x409eff
  409f4b:	mov    esi,0xa9c0e440
  409f50:	ret    0xbc52
  409f53:	stos   BYTE PTR es:[edi],al
  409f54:	xchg   esp,eax
  409f55:	adc    al,0xcb
  409f57:	test   al,0x9a
  409f59:	addr16 mov ah,0xa2
  409f5c:	xchg   edx,eax
  409f5d:	push   0x67c20901
  409f62:	jae    0x409f24
  409f64:	ficomp WORD PTR [edx+0x1]
  409f67:	mov    cl,0xc4
  409f69:	js     0x409fc9
  409f6b:	mov    al,0xee
  409f6d:	mov    DWORD PTR [eax-0x5b],eax
  409f70:	in     eax,dx
  409f71:	ja     0x409fd1
  409f73:	stos   BYTE PTR es:[edi],al
  409f74:	push   DWORD PTR [ecx+0x52]
  409f77:	popf   
  409f78:	cmc    
  409f79:	jno    0x409fd0
  409f7b:	jmp    0x8041d3b4
  409f80:	mov    gs,WORD PTR [ecx+0x60]
  409f83:	jge    0x409f22
  409f85:	push   edi
  409f86:	and    DWORD PTR [edx-0x65],ecx
  409f89:	push   esp
  409f8a:	jae    0x409fd4
  409f8c:	add    BYTE PTR [eax],al
  409f8e:	call   0x6f4c:0xd35b6467
  409f95:	or     edx,ebx
  409f97:	pop    ebx
  409f98:	je     0x409ff1
  409f9a:	fiadd  DWORD PTR [ebx+0x72]
  409f9d:	push   eax
  409f9e:	rcr    DWORD PTR [eax+0x21],0x41
  409fa2:	mov    eax,0xa9446554
  409fa7:	jecxz  0x409fa6
  409fa9:	xor    ebx,eax
  409fab:	js     0x40a00b
  409fad:	xor    BYTE PTR [ebp-0x77],ch
  409fb0:	inc    eax
  409fb1:	and    eax,0x2a5e776c
  409fb6:	or     DWORD PTR [eax-0x7951cdb1],0x48
  409fbd:	and    esp,DWORD PTR [eax-0x72ff021d]
  409fc3:	imul   esp,DWORD PTR [eax-0x3],0xca21579d
  409fca:	pushf  
  409fcb:	push   esp
  409fcc:	jae    0x409f96
  409fce:	fist   DWORD PTR fs:[si+0x4c]
  409fd4:	outs   dx,DWORD PTR ds:[esi]
  409fd5:	or     edx,ebx
  409fd7:	push   ecx
  409fd8:	outs   dx,DWORD PTR ds:[esi]
  409fd9:	add    dl,ch
  409fdb:	shr    DWORD PTR [ebx+0x74],0x33
  409fdf:	mov    WORD PTR [esi+ebp*2-0x17],fs
  409fe3:	mov    dl,0x65
  409fe5:	and    dh,dh
  409fe7:	shl    DWORD PTR [eax+0x64],0xbb
  409feb:	enter  0xfffd,0xc6
  409fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ff0:	inc    esp
  409ff1:	pop    edi
  409ff2:	add    BYTE PTR [eax],al
  409ff4:	xlat   BYTE PTR ds:[ebx]
  409ff5:	in     al,dx
  409ff6:	push   ebx
  409ff7:	inc    ecx
  409ff8:	shr    ch,cl
  409ffa:	inc    ecx
  409ffb:	pop    edi
  409ffc:	popf   
  409ffd:	jmp    0x40a04a
  409fff:	push   esp
  40a000:	fwait
  40a001:	in     al,dx
  40a002:	push   ecx
  40a003:	pop    edi
  40a004:	xchg   edx,eax
  40a005:	mov    eax,ds:0xeeaa474b
  40a00a:	std    
  40a00b:	jmp    DWORD PTR [edi-0x66]
  40a00e:	jae    0x40a071
  40a010:	jb     0x409fa3
  40a012:	popa   
  40a013:	and    BYTE PTR [ebp-0x70],ch
  40a016:	pusha  
  40a017:	jb     0x40a018
  40a019:	xchg   esi,eax
  40a01a:	jno    0x40a081
  40a01c:	ins    BYTE PTR es:[edi],dx
  40a01d:	fsubr  DWORD PTR [eax+0x6e]
  40a020:	cs nop
  40a022:	fs popa 
  40a024:	jmp    0x44a8:0x56006f94
  40a02b:	pop    edi
  40a02c:	inc    edi
  40a02d:	cli    
  40a02e:	push   ebx
  40a02f:	inc    ecx
  40a030:	push   edx
  40a031:	icebp  
  40a032:	inc    ecx
  40a033:	pop    edi
  40a034:	push   esi
  40a035:	cmc    
  40a036:	inc    eax
  40a037:	inc    esp
  40a038:	sbb    esp,DWORD PTR [esi-0x10deaba2]
  40a03e:	inc    esp
  40a03f:	dec    esi
  40a040:	dec    esi
  40a041:	add    DWORD PTR ss:[eax],eax
  40a044:	adc    ah,BYTE PTR [edx-0x66c99ce3]
  40a04a:	outs   dx,DWORD PTR ds:[esi]
  40a04b:	popa   
  40a04c:	jge    0x40a000
  40a04e:	fs jb  0x40a07f
  40a051:	xchg   ebp,eax
  40a052:	jne    0x40a0c4
  40a054:	aaa    
  40a055:	lock mov ds:0x9a000073,al
  40a05b:	test   DWORD PTR [ecx],0xb1a33700
  40a061:	inc    esp
  40a062:	or     BYTE PTR [edi-0x3c8da145],0xb1
  40a069:	inc    esp
  40a06a:	je     0x40a033
  40a06c:	rol    BYTE PTR [ebx+0x37],0xc4
  40a070:	mov    ds:0xacaf9675,eax
  40a075:	arpl   WORD PTR [edi-0x4f],dx
  40a078:	(bad)  
  40a079:	pusha  
  40a07a:	pop    eax
  40a07b:	pusha  
  40a07c:	mov    eax,ds:0x1cb636d
  40a081:	add    BYTE PTR [edi],dh
  40a083:	mov    ds:0x947844b1,eax
  40a088:	ret    
  40a089:	push   ebp
  40a08a:	jbe    0x40a04b
  40a08c:	int3   
  40a08d:	inc    ebx
  40a08e:	push   0x7840b311
  40a093:	adc    al,al
  40a095:	dec    ebp
  40a096:	arpl   bx,cx
  40a098:	add    DWORD PTR [eax],eax
  40a09a:	aaa    
  40a09b:	je     0x40a044
  40a09d:	jne    0x40a0b5
  40a09f:	xchg   DWORD PTR [ebx+eiz*2+0x64901c57],ebp
  40a0a6:	and    eax,0xb72e524
  40a0ab:	sbb    eax,0xcb106dac
  40a0b0:	add    DWORD PTR [eax],eax
  40a0b2:	aaa    
  40a0b3:	and    esi,DWORD PTR [ebp-0x38ec27bc]
  40a0b9:	push   ebp
  40a0ba:	idiv   BYTE PTR [esi]
  40a0bc:	int3   
  40a0bd:	inc    ebx
  40a0be:	add    BYTE PTR [eax],al
  40a0c0:	or     BYTE PTR [eax+esi*4],bh
  40a0c3:	inc    esp
  40a0c4:	add    eax,0x352b614
  40a0c9:	cmp    eax,0xcaf84dcc
  40a0ce:	add    DWORD PTR [eax],eax
  40a0d0:	aaa    
  40a0d1:	xor    al,0xd1
  40a0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0d4:	retf   0xcc52
  40a0d7:	lods   al,BYTE PTR ds:[esi]
  40a0d8:	aam    0x13
  40a0da:	fsub   DWORD PTR [esp+eiz*4+0x3703e84c]
  40a0e1:	xor    al,0xb0
  40a0e3:	mov    bl,0x7b
  40a0e5:	xor    DWORD PTR [ecx-0x5b8c7d3b],0x988174cc
  40a0ef:	les    esp,FWORD PTR [esp+ebp*2-0x18]
  40a0f3:	add    esi,DWORD PTR [edi]
  40a0f5:	xor    al,0x91
  40a0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0f8:	adc    BYTE PTR [ebx-0x7c],0xac
  40a0fc:	push   esp
  40a0fd:	adc    al,0x98
  40a0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a100:	pushw  0x3e8
  40a104:	aaa    
  40a105:	xor    al,0xb0
  40a107:	mov    bl,0x73
  40a109:	and    DWORD PTR [ecx-0x638c953b],0x388174cc
  40a113:	lds    esp,FWORD PTR [esi-0x78]
  40a116:	call   0x4174d81e
  40a11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a11c:	sub    dl,BYTE PTR [ebx+0x3c]
  40a11f:	stos   DWORD PTR es:[edi],eax
  40a120:	adc    al,0x14
  40a122:	push   eax
  40a123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a124:	add    BYTE PTR [eax],al
  40a126:	and    eax,0x3703e868
  40a12b:	xor    al,0x20
  40a12d:	mov    ah,0xfb
  40a12f:	and    BYTE PTR [ecx],0xc6
  40a132:	loop   0x40a1a6
  40a134:	xor    al,0xcb
  40a136:	hlt    
  40a137:	xor    BYTE PTR [eax],0xc5
  40a13a:	in     eax,0x87
  40a13c:	call   0x174d844
  40a141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a142:	loop   0x40a196
  40a144:	adc    al,0xab
  40a146:	aam    0x13
  40a148:	adc    eax,0x133ecb2
  40a14d:	and    DWORD PTR [ebx+0x71205e77],ecx
  40a153:	xchg   BYTE PTR [eax-0x4b],al
  40a156:	ins    DWORD PTR es:[edi],dx
  40a157:	je     0x40a1b7
  40a159:	mov    ah,0x86
  40a15b:	ins    BYTE PTR es:[edi],dx
  40a15c:	add    eax,eax
  40a15e:	fisubr DWORD PTR [ecx+0x60]
  40a161:	mov    ebp,0xb12153dd
  40a166:	rol    BYTE PTR [ebx+0x58d00951],1
  40a16c:	jne    0x40a12f
  40a16e:	fist   DWORD PTR [ebx+0x1]
  40a171:	mov    eax,ds:0xb05e78c4
  40a176:	cli    
  40a177:	mov    DWORD PTR [eax-0x53],eax
  40a17a:	in     eax,dx
  40a17b:	jae    0x40a1db
  40a17d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a17e:	mov    cl,0x83
  40a180:	dec    ecx
  40a181:	sahf   
  40a182:	test   al,0xdf
  40a184:	std    
  40a185:	nop
  40a186:	call   0x8d00:0x8d6069
  40a18d:	push   ebx
  40a18e:	and    DWORD PTR [ecx-0x36ae7c60],esp
  40a194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a195:	arpl   WORD PTR [eax+0x5d],sp
  40a198:	mov    al,0x62
  40a19a:	and    DWORD PTR [edx-0x6e],ecx
  40a19d:	push   ebx
  40a19e:	fs jmp 0x2141d5d8
  40a1a4:	jecxz  0x40a21e
  40a1a6:	pop    esi
  40a1a7:	xor    BYTE PTR [ecx-0x77],bh
  40a1aa:	inc    eax
  40a1ab:	sub    eax,0x1a5e736c
  40a1b0:	(bad)  
  40a1b1:	je     0x40a208
  40a1b3:	adc    al,0xc6
  40a1b5:	(bad)  
  40a1b7:	adc    cl,bl
  40a1b9:	imul   esp,DWORD PTR [eax+0xd],0x212153cc
  40a1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1c1:	adc    DWORD PTR [ecx-0x37],0xffffffba
  40a1c5:	pop    eax
  40a1c6:	jae    0x40a1c8
  40a1c8:	pop    ebp
  40a1c9:	mov    ch,BYTE PTR [esi+0x6e]
  40a1cc:	dec    esi
  40a1cd:	xor    eax,DWORD PTR [ecx]
  40a1cf:	add    BYTE PTR [esi],dl
  40a1d1:	test   al,0x44
  40a1d3:	pop    edi
  40a1d4:	pop    ss
  40a1d5:	not    BYTE PTR [ebx+0x41]
  40a1d8:	mov    ch,dl
  40a1da:	inc    ecx
  40a1db:	pop    edi
  40a1dc:	sbb    BYTE PTR [esi-0x828acb1],0x4b
  40a1e3:	add    dl,dh
  40a1e5:	xchg   ecx,eax
  40a1e6:	jno    0x40a249
  40a1e8:	cs ret 0x6364
  40a1ec:	xrelease mov DWORD PTR [ebx+0x65],esi
  40a1f0:	add    BYTE PTR [eax],al
  40a1f2:	add    dl,bl
  40a1f4:	pusha  
  40a1f5:	retw   0x6fbd
  40a1f9:	and    BYTE PTR [ebp-0x558f9369],ch
  40a1ff:	mov    ebp,0xd2c26571
  40a204:	bound  ebp,QWORD PTR [edi+0x68]
  40a207:	cdq    
  40a208:	arpl   WORD PTR fs:[edx-0x76],sp
  40a20c:	outs   dx,BYTE PTR ds:[esi]
  40a20d:	outs   dx,BYTE PTR ds:[esi]
  40a20e:	hlt    
  40a20f:	shl    BYTE PTR [edx+0x6c],cl
  40a212:	mov    ecx,0x4b2064c3
  40a217:	mov    esi,0x8b6f7372
  40a21c:	add    BYTE PTR fs:[esi],al
  40a21f:	test   al,0x44
  40a221:	pop    edi
  40a222:	pop    ebp
  40a223:	hlt    
  40a224:	dec    esi
  40a225:	push   ebx
  40a226:	push   ebx
  40a227:	in     al,dx
  40a228:	pop    esi
  40a229:	inc    ebx
  40a22a:	imul   esi,edx,0x9c4d454b
  40a230:	dec    eax
  40a231:	dec    edi
  40a232:	pop    eax
  40a233:	cmp    BYTE PTR [ecx],al
  40a235:	add    BYTE PTR [edx-0x6d],al
  40a238:	outs   dx,BYTE PTR ds:[esi]
  40a239:	and    BYTE PTR [ebx],ch
  40a23b:	cdq    
  40a23c:	imul   edi,DWORD PTR [ecx+0x6e],0xffffffba
  40a240:	fs popa 
  40a242:	aaa    
  40a243:	xor    DWORD PTR [eax-0x73d4e88f],ebp
  40a249:	jae    0x40a225
  40a24b:	fabs   
  40a24d:	jb     0x40a221
  40a24f:	aaa    
  40a250:	mov    ds:0x9b36173a,eax
  40a255:	add    BYTE PTR fs:[eax],al
  40a258:	lds    esi,FWORD PTR [esi]
  40a25a:	mov    eax,ds:0xa92cc86e
  40a25f:	fs ret 
  40a261:	mul    DWORD PTR [esi+0x1ef9a73]
  40a267:	add    BYTE PTR [edi],dh
  40a269:	xchg   ebx,eax
  40a26a:	mov    cl,0x44
  40a26c:	and    BYTE PTR [ebx-0x678cbf38],0xb3
  40a273:	pop    esi
  40a274:	cmp    BYTE PTR [ebp-0x408eae38],0xc2
  40a27b:	push   esi
  40a27c:	aaa    
  40a27d:	mov    edx,0xac927195
  40a282:	mov    al,ds:0xa5b55a1f
  40a287:	fs push ebx
  40a289:	jmp    0x40a22f
  40a28b:	jae    0x40a2a4
  40a28d:	lods   al,BYTE PTR ds:[esi]
  40a28e:	lahf   
  40a28f:	pop    ds
  40a290:	bound  ebp,QWORD PTR [ebp-0x4fb88858]
  40a296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a297:	jae    0x40a2eb
  40a299:	mov    bh,0xe1
  40a29b:	jae    0x40a2eb
  40a29d:	mov    BYTE PTR [eax-0x4adc4701],ch
  40a2a3:	inc    esp
  40a2a4:	adc    BYTE PTR [ebx+eax*8],dl
  40a2a7:	push   ebp
  40a2a8:	idiv   BYTE PTR [esi]
  40a2aa:	mov    esp,0xc2100043
  40a2af:	inc    ebp
  40a2b0:	clc    
  40a2b1:	cmp    DWORD PTR [ecx+0x50feb40],edi
  40a2b7:	add    BYTE PTR [edi],dh
  40a2b9:	daa    
  40a2ba:	popf   
  40a2bb:	add    BYTE PTR fs:[eax],al
  40a2be:	push   edi
  40a2bf:	xor    al,0x17
  40a2c1:	mov    ds:0x97054ed9,al
  40a2c6:	in     eax,0x52
  40a2c8:	pop    gs
  40a2ca:	or     DWORD PTR [ecx-0x1],edx
  40a2cd:	mov    al,ds:0x980d4fd0
  40a2d2:	rcl    DWORD PTR [ebx],cl
  40a2d4:	or     esp,DWORD PTR [ebp-0x5af5b024]
  40a2da:	aad    0x48
  40a2dc:	enter  0xd7a9,0x4a
  40a2e0:	aam    0xa8
  40a2e2:	aam    0x33
  40a2e4:	mov    al,0xb3
  40a2e6:	jnp    0x40a365
  40a2e8:	stos   DWORD PTR es:[edi],eax
  40a2e9:	lds    ecx,FWORD PTR [ecx-0x5a693ab1]
  40a2ef:	push   ebx
  40a2f0:	iret   
  40a2f1:	test   al,0x79
  40a2f3:	push   ecx
  40a2f4:	iret   
  40a2f5:	mov    al,ds:0x97cd50a0
  40a2fa:	xchg   ebx,eax
  40a2fb:	xor    al,0xb4
  40a2fd:	fwait
  40a2fe:	fwait
  40a2ff:	adc    al,0x97
  40a301:	mov    eax,ds:0xa78f5259
  40a306:	outs   dx,DWORD PTR ds:[esi]
  40a307:	adc    al,0x8b
  40a309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a30a:	pop    esp
  40a30b:	push   eax
  40a30c:	mov    ah,BYTE PTR [ebp+edx*2+0x57a9c849]
  40a313:	dec    ebx
  40a314:	mov    WORD PTR [eax-0x4c5fcbac],gs
  40a31a:	jae    0x40a399
  40a31c:	stos   DWORD PTR es:[edi],eax
  40a31d:	lds    esp,FWORD PTR [ecx+0x52]
  40a320:	push   edi
  40a321:	test   al,0x0
  40a323:	add    BYTE PTR [edi],bh
  40a325:	xor    al,0x54
  40a327:	pushf  
  40a328:	sbb    edx,DWORD PTR [edi+eax*2]
  40a32b:	mov    ds:0xa3454c09,al
  40a330:	adc    al,0x57
  40a332:	cmp    dl,BYTE PTR [ebp-0x60b0af07]
  40a338:	and    BYTE PTR [eax+0x1],dl
  40a33b:	dec    esp
  40a33c:	scas   eax,DWORD PTR es:[edi]
  40a33d:	push   edi
  40a33e:	and    DWORD PTR [edx-0x2c],ecx
  40a341:	dec    eax
  40a342:	ins    DWORD PTR es:[edi],dx
  40a343:	or     edx,esp
  40a345:	push   ecx
  40a346:	push   0xffffffc9
  40a348:	sahf   
  40a349:	push   ebx
  40a34a:	push   0x1509005
  40a34f:	and    DWORD PTR [ebx+0x712a5e77],ebp
  40a355:	jge    0x40a3c0
  40a357:	add    al,0x94
  40a359:	push   eax
  40a35a:	fs sti 
  40a35c:	mov    ds:0xa1fe627d,eax
  40a361:	dec    esp
  40a362:	ins    DWORD PTR es:[edi],dx
  40a363:	int3   
  40a364:	mov    al,ds:0xccd50157
  40a369:	push   eax
  40a36a:	and    esi,eax
  40a36c:	(bad)  
  40a36d:	jp     0x40a3d8
  40a36f:	(bad)  
  40a370:	aad    0x57
  40a372:	fs mov ebx,0xcd6061e7
  40a378:	test   eax,0xd5ca2150
  40a37d:	dec    edi
  40a37e:	ins    DWORD PTR es:[edi],dx
  40a37f:	retf   
  40a380:	aad    0x56
  40a382:	push   0xffffffc9
  40a384:	into   
  40a385:	push   esp
  40a386:	push   0x9900008d
  40a38b:	push   edi
  40a38c:	add    DWORD PTR [ecx-0x55a18f5c],esp
  40a392:	cli    
  40a393:	jp     0x40a3fe
  40a395:	mov    WORD PTR [ebp-0x78849ba9],ss
  40a39b:	popa   
  40a39c:	pusha  
  40a39d:	test   DWORD PTR [ecx-0x638afeb0],esp
  40a3a3:	push   eax
  40a3a4:	and    DWORD PTR [esi-0x6b],edx
  40a3a7:	jp     0x40a412
  40a3a9:	inc    esp
  40a3aa:	aam    0x57
  40a3ac:	fs pop ebx
  40a3ae:	out    0x51,al
  40a3b0:	push   0x2157d744
  40a3b5:	add    ch,ch
  40a3b7:	xchg   esi,eax
  40a3b8:	imul   ebp,DWORD PTR [esp+edi*8-0x6a],0x8e3e6b62
  40a3c0:	pusha  
  40a3c1:	imul   eax,DWORD PTR [edx-0x6d],0xa0460061
  40a3c8:	inc    esp
  40a3c9:	pop    edi
  40a3ca:	sbb    eax,0x3b685ef2
  40a3cf:	xchg   edi,eax
  40a3d0:	popa   
  40a3d1:	gs cmp al,0xa5
  40a3d4:	arpl   WORD PTR [ecx+0x2b],bp
  40a3d7:	xchg   esp,eax
  40a3d8:	popa   
  40a3d9:	add    BYTE PTR [edx-0x41],cl
  40a3dc:	and    BYTE PTR fs:[ecx],dh
  40a3df:	xchg   esi,eax
  40a3e0:	pop    esi
  40a3e1:	data16 cmp al,0x96
  40a3e4:	ins    WORD PTR es:[edi],dx
  40a3e6:	imul   edx,DWORD PTR [ebp-0x6a02df8f],0x69
  40a3ed:	ins    BYTE PTR es:[edi],dx
  40a3ee:	add    BYTE PTR [eax],al
  40a3f0:	cld    
  40a3f1:	xchg   ebp,eax
  40a3f2:	bound  ebp,QWORD PTR [ebx+0x2e]
  40a3f5:	mov    fs,WORD PTR [eax+0x69]
  40a3f8:	add    dl,BYTE PTR [edx-0x5939ff9f]
  40a3fe:	inc    esp
  40a3ff:	pop    edi
  40a400:	(bad)  
  40a402:	pop    esi
  40a403:	mov    sp,0x6695
  40a407:	ins    DWORD PTR es:[edi],dx
  40a408:	stos   DWORD PTR es:[edi],eax
  40a409:	xchg   esp,eax
  40a40a:	jno    0x40a40c
  40a40c:	retf   0x64be
  40a40f:	and    BYTE PTR [ecx-0x438aa16c],dh
  40a415:	mov    edx,0xbaaf631d
  40a41a:	imul   esp,DWORD PTR [edx-0x41],0xb8206a8f
  40a421:	xchg   ebp,eax
  40a422:	push   0xfd92bb6c
  40a427:	inc    DWORD PTR [esi]
  40a429:	mov    al,ds:0xf65d5f44
  40a42e:	pop    esi
  40a42f:	jne    0x40a468
  40a431:	jg     0x40a3d4
  40a433:	jmp    DWORD PTR [eax+0x57649d80]
  40a439:	sbb    BYTE PTR [edi-0x57dff9a2],0x71
  40a440:	push   cs
  40a441:	inc    edx
  40a442:	xchg   edx,eax
  40a443:	jae    0x40a44a
  40a445:	je     0x40a3e6
  40a447:	push   di
  40a449:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40a44b:	imul   esp,ebx,0x2e
  40a44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a44f:	(bad)  
  40a450:	fsub   st(4),st
  40a452:	mov    ds:0xce000060,eax
  40a457:	fsubr  DWORD PTR [eax-0x4adac89d]
  40a45d:	inc    esp
  40a45e:	lock or eax,0xd7c65ec3
  40a464:	test   al,0x71
  40a466:	mov    esi,0xc5739229
  40a46b:	add    ebx,DWORD PTR [esi+eiz*2+0x6499ff37]
  40a472:	push   edi
  40a473:	repnz fwait
  40a475:	pop    esi
  40a476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a477:	in     al,dx
  40a478:	xchg   ebp,eax
  40a479:	addr16 push edi
  40a47b:	out    dx,al
  40a47c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a47d:	imul   esp,DWORD PTR [ebx-0x639d5b13],0x2b
  40a484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a485:	pusha  
  40a486:	mov    ss,WORD PTR [edi-0x5cc89c58]
  40a48c:	mov    cl,0x44
  40a48e:	nop
  40a48f:	mov    ?,WORD PTR [edi-0x6a5398a2]
  40a495:	addr16 aaa 
  40a497:	mov    edi,0xc2176499
  40a49c:	fwait
  40a49d:	pop    esi
  40a49e:	bound  esi,QWORD PTR [eax-0x55a98d6e]
  40a4a4:	test   al,0x5e
  40a4a6:	push   ebp
  40a4a7:	mov    al,0xa6
  40a4a9:	push   0xa3083449
  40a4ae:	pop    ss
  40a4af:	dec    eax
  40a4b0:	dec    esp
  40a4b1:	mov    ds:0xe4435517,al
  40a4b6:	sbb    dl,BYTE PTR [ebx+0x41]
  40a4b9:	mov    al,ds:0x50130000
  40a4be:	call   0x3074dbc6
  40a4c3:	mov    ah,0xf3
  40a4c5:	js     0x40a4f2
  40a4c7:	ret    0x46e1
  40a4ca:	inc    ebp
  40a4cb:	xchg   ebx,eax
  40a4cc:	add    eax,0x11a90f53
  40a4d1:	push   esi
  40a4d2:	add    eax,0xe849dfa7
  40a4d7:	add    esi,DWORD PTR [edi]
  40a4d9:	xor    al,0x1b
  40a4db:	cdq    
  40a4dc:	aad    0x54
  40a4de:	or     eax,0x3033c593
  40a4e3:	mov    ah,0xf3
  40a4e5:	js     0x40a50e
  40a4e7:	mov    ebx,0xc517d940
  40a4ec:	in     al,0x74
  40a4ee:	mov    al,0x3
  40a4f0:	aaa    
  40a4f1:	xor    al,0xb5
  40a4f3:	mov    ebp,0xb2aa7f85
  40a4f8:	jne    0x40a480
  40a4fa:	mov    eax,ds:0x9b3473c1
  40a4ff:	mov    eax,0xb1ab8576
  40a504:	jg     0x40a57c
  40a506:	lods   eax,DWORD PTR ds:[esi]
  40a507:	add    esi,DWORD PTR [edi]
  40a509:	xor    al,0x9e
  40a50b:	mov    esi,0xacae6b64
  40a510:	lock fsubr DWORD PTR [eax+eiz*8-0x4e56907b]
  40a518:	jne    0x40a586
  40a51a:	call   0xb574dc22
  40a51f:	enter  0x0,0x66
  40a523:	jno    0x40a4ca
  40a525:	add    esi,DWORD PTR [edi]
  40a527:	xor    al,0x1
  40a529:	stos   BYTE PTR es:[edi],al
  40a52a:	jl     0x40a59b
  40a52c:	inc    edx
  40a52d:	mov    ds:0xe9557f79,al
  40a532:	xor    al,0x34
  40a534:	add    DWORD PTR [esi+ebp*8],ebp
  40a537:	jae    0x40a57b
  40a539:	cmp    eax,0x35487edc
  40a53e:	int3   
  40a53f:	fdivr  st,st(5)
  40a541:	sbb    edi,DWORD PTR [eax+0x68]
  40a544:	dec    esi
  40a545:	sbb    ecx,edi
  40a547:	fdivr  st,st(5)
  40a549:	sbb    al,0xc1
  40a54b:	ins    BYTE PTR es:[edi],dx
  40a54c:	dec    esi
  40a54d:	sub    bh,BYTE PTR [esi-0x5ac60228]
  40a553:	imul   edx,DWORD PTR [ecx+0x39],0x21428474
  40a55a:	cmp    esi,DWORD PTR [ecx+eax*1]
  40a55d:	cmp    DWORD PTR [ebp-0x73d0ae97],esp
  40a563:	inc    bp
  40a565:	jmp    0x2441d99e
  40a56a:	cmp    BYTE PTR [esi+0x44],0xe9
  40a56e:	xor    al,0x34
  40a570:	add    DWORD PTR [edi+ebp*8+0x34ad4e72],esi
  40a577:	xor    al,0x1
  40a579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a57a:	jecxz  0x40a5ee
  40a57c:	dec    edx
  40a57d:	jmp    0xaa41d9b6
  40a582:	shl    DWORD PTR [edi+0x58],cl
  40a585:	jmp    0x3474a58a
  40a58a:	add    DWORD PTR [ebp-0x5bbd8b3a],ebx
  40a590:	xor    al,0x34
  40a592:	add    DWORD PTR [esi-0x51b77c5c],esi
  40a598:	stos   BYTE PTR es:[edi],al
  40a599:	add    BYTE PTR [ecx],0xaa
  40a59c:	mov    ds:0xf7a44f69,eax
  40a5a1:	add    DWORD PTR [ecx],0x0
  40a5a4:	scas   al,BYTE PTR es:[edi]
  40a5a5:	sahf   
  40a5a6:	push   ecx
  40a5a7:	add    BYTE PTR [esi-0x31bbbf12],al
  40a5ad:	xor    eax,DWORD PTR [ecx]
  40a5af:	add    BYTE PTR [edx+0x724549ee],dl
  40a5b5:	out    dx,eax
  40a5b6:	std    
  40a5b7:	(bad)  
  40a5b8:	std    
  40a5b9:	mov    eax,0x94f36e6b
  40a5be:	jno    0x40a629
  40a5c0:	pop    ecx
  40a5c1:	mov    dh,0xfd
  40a5c3:	dec    DWORD PTR [esi-0x3e]
  40a5c6:	outs   dx,BYTE PTR ds:[esi]
  40a5c7:	js     0x40a5c0
  40a5c9:	mul    BYTE PTR [edx+0x6f]
  40a5cc:	clc    
  40a5cd:	mov    ch,0x64
  40a5cf:	arpl   WORD PTR [edx-0x45],ax
  40a5d2:	outs   dx,BYTE PTR ds:[esi]
  40a5d3:	outs   dx,BYTE PTR ds:[esi]
  40a5d4:	pop    esi
  40a5d5:	xor    eax,DWORD PTR [ecx]
  40a5d7:	add    BYTE PTR ds:0x33746bb9,bh
  40a5dd:	mov    dh,0x71
  40a5df:	sub    eax,0x676b8e5a
  40a5e4:	push   edx
  40a5e5:	mov    ebx,0xc542fffd
  40a5ea:	pusha  
  40a5eb:	outs   dx,BYTE PTR ds:[esi]
  40a5ec:	add    BYTE PTR [eax],al
  40a5ee:	cmp    eax,0x7b726491
  40a5f3:	mov    gs,WORD PTR [ebx+0x63]
  40a5f6:	or     DWORD PTR [edi+0x32f16e68],ecx
  40a5fc:	add    DWORD PTR [eax],eax
  40a5fe:	add    eax,ebx
  40a600:	data16 jb 0x40a5f2
  40a603:	mov    fs,WORD PTR [eax+eax*1-0x3]
  40a607:	mov    edx,0x8de56e74
  40a60c:	popa   
  40a60d:	add    ch,dh
  40a60f:	lea    esp,[eax+esi*2-0x5]
  40a613:	xchg   ecx,eax
  40a614:	imul   ebp,DWORD PTR [ecx-0x30],0xbdfffd8d
  40a61b:	mov    dh,0x6e
  40a61d:	jae    0x40a656
  40a61f:	test   al,0x1
  40a621:	add    BYTE PTR [edi],dh
  40a623:	call   0x6301:0xb9376501
  40a62a:	aaa    
  40a62b:	stos   DWORD PTR es:[edi],eax
  40a62c:	add    DWORD PTR [eax+0x37],edx
  40a62f:	pop    ebx
  40a630:	add    ch,BYTE PTR [ecx+0x37]
  40a633:	pop    edi
  40a634:	add    ch,BYTE PTR [ecx+0x37]
  40a637:	add    DWORD PTR ds:0x56e3765,0x1cd3765
  40a641:	add    BYTE PTR [edi],dh
  40a643:	xlat   BYTE PTR ds:[ebx]
  40a644:	add    DWORD PTR [ebp+0x37],esp
  40a647:	jne    0x40a64e
  40a649:	gs aaa 
  40a64b:	int    0x1
  40a64d:	add    BYTE PTR [edi],dh
  40a64f:	push   es
  40a650:	add    eax,0x3700006c
  40a655:	push   ss
  40a656:	add    eax,0x52c3762
  40a65b:	ins    BYTE PTR es:[edi],dx
  40a65c:	aaa    
  40a65d:	sbb    DWORD PTR ds:0x5113700,eax
  40a663:	outs   dx,DWORD PTR ds:[esi]
  40a664:	aaa    
  40a665:	sub    al,BYTE PTR ds:0x5413761
  40a66b:	pop    esp
  40a66c:	aaa    
  40a66d:	int    0x1
  40a66f:	add    BYTE PTR [edi],dh
  40a671:	xchg   ebx,eax
  40a672:	ss int3 
  40a674:	aaa    
  40a675:	jno    0x40a6c1
  40a677:	lods   al,BYTE PTR ds:[esi]
  40a678:	fisubr DWORD PTR [ecx-0x5a2957dd]
  40a67e:	add    al,0x0
  40a680:	aaa    
  40a681:	xchg   ebp,eax
  40a682:	nop
  40a683:	cmp    bx,0x7593
  40a688:	xchg   esp,eax
  40a689:	cwde   
  40a68a:	xchg   ebp,eax
  40a68b:	dec    ebp
  40a68c:	sahf   
  40a68d:	repz xchg edi,eax
  40a68f:	dec    esi
  40a690:	xchg   ebx,eax
  40a691:	in     eax,dx
  40a692:	lahf   
  40a693:	imul   ecx,DWORD PTR [ecx+0x6b6dc1eb],0x699e9434
  40a69d:	dec    edi
  40a69e:	lahf   
  40a69f:	nop
  40a6a0:	mov    BYTE PTR [edx+esi*8],dh
  40a6a3:	call   0x1edcd8
  40a6a8:	xor    DWORD PTR [esi-0x15],ebp
  40a6ab:	std    
  40a6ac:	aas    
  40a6ad:	xor    al,0xe0
  40a6af:	in     eax,dx
  40a6b0:	and    dh,BYTE PTR [edi]
  40a6b2:	mov    dh,0xda
  40a6b4:	std    
  40a6b5:	and    bl,dl
  40a6b7:	rol    BYTE PTR [eax],1
  40a6b9:	add    BYTE PTR [eax+0x1e],dl
  40a6bc:	(bad)  
  40a6bd:	fcomp  DWORD PTR [esi+0xf]
  40a6c0:	sbb    DWORD PTR [edi+esi*1],eax
  40a6c3:	xor    al,0xf6
  40a6c5:	out    0x40,eax
  40a6c7:	sub    BYTE PTR [edi],cl
  40a6c9:	fstp   QWORD PTR [esi+0x31]
  40a6cc:	or     al,0xd9
  40a6ce:	pop    esp
  40a6cf:	and    al,0xfc
  40a6d1:	add    esi,DWORD PTR [edi]
  40a6d3:	xor    al,0xbc
  40a6d5:	adc    DWORD PTR [ebp+0x7f36a0cf],eax
  40a6db:	repz sar BYTE PTR [esi],0x8a
  40a6df:	out    0x9b,eax
  40a6e1:	ds xor ebp,0xf17828b1
  40a6e8:	xchg   DWORD PTR [ebx],eax
  40a6ea:	aaa    
  40a6eb:	xor    al,0x4c
  40a6ed:	popa   
  40a6ee:	xchg   ebp,eax
  40a6ef:	mov    ds:0xce594a46,eax
  40a6f4:	jl     0x40a73f
  40a6f6:	and    BYTE PTR [eax+0x343703e7],0xde
  40a6fd:	add    eax,0xc2b36ca9
  40a702:	cmp    edx,DWORD PTR [esi+ebx*8+0x3]
  40a706:	aaa    
  40a707:	xor    al,0xf5
  40a709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a70a:	xor    ecx,DWORD PTR [ecx]
  40a70c:	adc    al,ah
  40a70e:	xchg   edx,eax
  40a70f:	xor    ebp,edx
  40a711:	mov    DWORD PTR [ecx-0x4024feaf],ebx
  40a717:	imul   eax,DWORD PTR [ecx],0xffffffc6
  40a71a:	mov    dl,0x6b
  40a71c:	dec    ebp
  40a71d:	mov    al,0x0
  40a71f:	add    BYTE PTR [eax-0x710ffdc4],ch
  40a725:	inc    ecx
  40a726:	or     esi,DWORD PTR [esp+esi*1+0x1e0a0134]
  40a72d:	add    dh,al
  40a72f:	sub    bl,BYTE PTR [eax]
  40a731:	lock rol BYTE PTR ds:0xf1c9ea2c,cl
  40a738:	adc    edx,ebp
  40a73a:	fdivp  st(5),st
  40a73c:	outs   dx,DWORD PTR ds:[esi]
  40a73d:	(bad)  
  40a73e:	std    
  40a73f:	fisubr WORD PTR [ecx-0xc]
  40a742:	sar    DWORD PTR [esi-0x2631039d],1
  40a748:	push   ebx
  40a749:	in     eax,dx
  40a74a:	int3   
  40a74b:	retf   
  40a74c:	cmp    eax,0x54bbfcd3
  40a751:	xor    al,0x1
  40a753:	into   
  40a754:	dec    ecx
  40a755:	cld    
  40a756:	leave  
  40a757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a758:	dec    ebx
  40a759:	in     al,dx
  40a75a:	faddp  st(1),st
  40a75c:	inc    ebx
  40a75d:	cmc    
  40a75e:	aam    0xab
  40a760:	sbb    eax,0xcb3dcf3
  40a765:	xor    al,0x1
  40a767:	xchg   esi,eax
  40a768:	cmp    cl,dl
  40a76a:	in     eax,0x88
  40a76c:	inc    ebx
  40a76d:	rol    BYTE PTR [eax],cl
  40a76f:	mov    edi,0xc1330e64
  40a774:	inc    edx
  40a775:	and    DWORD PTR [ebx+eax*8],esp
  40a778:	data16 or al,0x1
  40a77b:	inc    esi
  40a77c:	dec    ebx
  40a77d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a77f:	lahf   
  40a780:	jle    0x40a772
  40a782:	mov    al,ds:0x8a0000a3
  40a787:	in     al,0x0
  40a789:	xchg   edx,eax
  40a78a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a78b:	scas   al,BYTE PTR es:[edi]
  40a78c:	xchg   ebx,eax
  40a78d:	pop    esi
  40a78e:	mov    ds:0x9b00a8a9,al
  40a793:	pop    edi
  40a794:	nop
  40a795:	sbb    DWORD PTR [esi-0x4a],0x380e94b8
  40a79c:	add    DWORD PTR [eax],eax
  40a79e:	imul   ecx,DWORD PTR [ecx-0x74],0xffffff8b
  40a7a2:	mov    bh,0x63
  40a7a4:	xchg   edi,eax
  40a7a5:	mov    edi,0x91b76b
  40a7aa:	cdq    
  40a7ab:	xchg   ecx,eax
  40a7ac:	cmp    eax,0x4df78953
  40a7b1:	inc    esi
  40a7b2:	scas   al,BYTE PTR es:[edi]
  40a7b3:	mul    DWORD PTR [esi+0x6c]
  40a7b6:	mov    ah,0x95
  40a7b8:	js     0x40a81e
  40a7ba:	cmp    al,0x96
  40a7bc:	inc    edi
  40a7bd:	inc    eax
  40a7be:	daa    
  40a7bf:	mov    esp,0xae057c73
  40a7c4:	cmp    edx,DWORD PTR [ecx+0x52]
  40a7c7:	xchg   ebx,eax
  40a7c8:	pop    eax
  40a7c9:	outs   dx,BYTE PTR ds:[esi]
  40a7ca:	pop    eax
  40a7cb:	test   DWORD PTR [edx+0x49],eax
  40a7ce:	dec    edx
  40a7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d0:	inc    esi
  40a7d1:	push   ecx
  40a7d2:	push   ecx
  40a7d3:	hlt    
  40a7d4:	inc    eax
  40a7d5:	inc    ecx
  40a7d6:	mov    ?,WORD PTR [edi]
  40a7d8:	add    DWORD PTR [eax],eax
  40a7da:	cmp    al,0xae
  40a7dc:	fs js  0x40a801
  40a7df:	cwde   
  40a7e0:	jno    0x40a844
  40a7e2:	pop    eax
  40a7e4:	fs jns 0x40a835
  40a7e7:	aaa    
  40a7e8:	add    DWORD PTR [eax],eax
  40a7ea:	add    BYTE PTR [eax],al
  40a7ec:	jl     0x40a7e0
  40a7ee:	das    
  40a7ef:	and    BYTE PTR [esi-0x15],dh
  40a7f2:	xor    ebp,DWORD PTR [ecx+0x63]
  40a7f5:	out    0x2e,al
  40a7f7:	add    dh,ch
  40a7f9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40a7fb:	lods   eax,DWORD PTR ds:[esi]
  40a7fc:	imul   BYTE PTR [esi-0x16]
  40a7ff:	mov    eax,ds:0x16c6d
  40a804:	cmp    cl,bl
  40a806:	sub    eax,0x2bea2f3c
  40a80b:	js     0x40a844
  40a80d:	sub    ebp,esp
  40a80f:	cmp    eax,0x34e12d37
  40a814:	pop    ebx
  40a815:	inc    eax
  40a816:	fsub   DWORD PTR [edx+edx*4]
  40a819:	and    al,0xce
  40a81b:	sub    dh,BYTE PTR [edi]
  40a81d:	mov    ds:0xc38d42b3,eax
  40a822:	test   eax,0xa7d17646
  40a827:	aas    
  40a828:	sbb    ebp,0x1
  40a82b:	add    BYTE PTR [edi],dh
  40a82d:	lahf   
  40a82e:	mov    cl,0x48
  40a830:	cmp    al,0x9a
  40a832:	lods   al,BYTE PTR ds:[esi]
  40a833:	inc    esp
  40a834:	aaa    
  40a835:	dec    eax
  40a836:	push   edx
  40a837:	mov    edx,0xaa4c7f8e
  40a83c:	jnp    0x40a894
  40a83e:	ins    BYTE PTR es:[edi],dx
  40a83f:	mov    ebp,0xa3467ce9
  40a844:	jmp    0xbdd0f1ed
  40a849:	mov    ebp,0xabd1ac5f
  40a84e:	push   eax
  40a84f:	cwde   
  40a850:	add    BYTE PTR [eax],al
  40a852:	mov    ecx,0xd3b253a9
  40a857:	ins    BYTE PTR es:[edi],dx
  40a858:	jp     0x40a7e4
  40a85a:	lahf   
  40a85b:	inc    esp
  40a85c:	jge    0x40a7ef
  40a85e:	mov    eax,ds:0xb7a65a64
  40a863:	add    BYTE PTR ds:0xd3283700,0x57
  40a86a:	add    esp,edi
  40a86c:	retf   
  40a86d:	jo     0x40a847
  40a86f:	fadd   DWORD PTR [ebx-0x72d9bd8f]
  40a875:	jnp    0x40a893
  40a877:	inc    eax
  40a878:	mov    edx,0x9ffa094e
  40a87d:	ins    DWORD PTR es:[edi],dx
  40a87e:	and    al,0x3a
  40a880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a881:	sbb    esp,DWORD PTR [ebx-0x62c669cc]
  40a887:	xor    al,0xe2
  40a889:	xchg   DWORD PTR [esi+eiz*1],edi
  40a88c:	mov    ebx,0xe42b2fee
  40a891:	stc    
  40a892:	jae    0x40a906
  40a894:	scas   al,BYTE PTR es:[edi]
  40a895:	cld    
  40a896:	ins    DWORD PTR es:[edi],dx
  40a897:	ins    BYTE PTR es:[edi],dx
  40a898:	call   0xab7dd099
  40a89d:	std    
  40a89e:	mov    WORD PTR [esi-0x12],ds
  40a8a1:	sti    
  40a8a2:	cmp    DWORD PTR [ebx],0xffffffdb
  40a8a5:	add    cl,BYTE PTR [ebp+0x30]
  40a8a8:	(bad)  
  40a8aa:	adc    BYTE PTR [ecx-0x27],bl
  40a8ad:	shl    DWORD PTR [edx+0x51],1
  40a8b0:	adc    DWORD PTR [ebx+edx*1+0x3e84c],0x0
  40a8b8:	aaa    
  40a8b9:	xor    al,0x60
  40a8bb:	imul   esp,DWORD PTR [ebp-0x65d4a859],0x376753ba
  40a8c5:	xor    al,0xf
  40a8c7:	inc    ecx
  40a8c8:	je     0x40a8c3
  40a8ca:	test   al,0x2b
  40a8cc:	jne    0x40a902
  40a8ce:	(bad)  
  40a8cf:	or     eax,0x6dcc693
  40a8d4:	xchg   esi,eax
  40a8d5:	int    0xda
  40a8d7:	sbb    al,0x9a
  40a8d9:	cmc    
  40a8da:	test   BYTE PTR [ecx],bl
  40a8dc:	jns    0x40a870
  40a8de:	jae    0x40a934
  40a8e0:	jns    0x40a8ce
  40a8e2:	mov    WORD PTR [ebp+ebp*4-0x33],ss
  40a8e6:	mov    DWORD PTR [esi],ebx
  40a8e8:	imul   ebx,esp,0x343703e7
  40a8ee:	fcmovbe st,st(1)
  40a8f0:	es or  bh,cl
  40a8f3:	(bad)  
  40a8f4:	adc    al,0x34
  40a8f6:	dec    sp
  40a8f8:	mov    dl,BYTE PTR [ebx+0x34585048]
  40a8fe:	adc    DWORD PTR gs:[ecx+0x34],0x1
  40a903:	bound  ecx,QWORD PTR [ebx-0x7fcb4e77]
  40a909:	mov    dh,bh
  40a90b:	pushf  
  40a90c:	ins    BYTE PTR es:[edi],dx
  40a90d:	mov    edi,DWORD PTR [eax-0x10779066]
  40a913:	xchg   BYTE PTR [ebp-0x20],bh
  40a916:	lahf   
  40a917:	mov    dl,BYTE PTR [edi+0x4ae79f]
  40a91d:	add    BYTE PTR [esi-0x22],ah
  40a920:	add    ch,ah
  40a922:	push   ss
  40a923:	sbb    al,0x2c
  40a925:	or     dl,ah
  40a927:	push   esp
  40a928:	xor    BYTE PTR [esp+ecx*8],al
  40a92b:	pop    ds
  40a92c:	xor    dl,dl
  40a92e:	or     BYTE PTR [eax+edi*1],cl
  40a931:	(bad)  
  40a932:	lds    eax,FWORD PTR ds:0x7fed23f
  40a938:	cmp    cl,bh
  40a93a:	mov    ebp,0xe5872c0b
  40a93f:	pop    es
  40a940:	xor    ah,dh
  40a942:	cmc    
  40a943:	ja     0x40a95a
  40a945:	mov    eax,ds:0x52013434
  40a94a:	dec    DWORD PTR [ecx-0x33105a4e]
  40a950:	scas   al,BYTE PTR es:[edi]
  40a951:	mov    ds:0x99b78d47,eax
  40a956:	out    0xc4,eax
  40a958:	mov    esi,0xa2a1e28b
  40a95d:	rcr    dh,1
  40a95f:	xchg   edi,eax
  40a960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a961:	mov    ah,al
  40a963:	xchg   ebx,eax
  40a964:	mov    cl,0x7a
  40a966:	aam    0x88
  40a968:	test   eax,0xe2e55b
  40a96d:	mov    esp,DWORD PTR [esi]
  40a96f:	repz fldenv [ebx+esi*8+0xdbcd5a8]
  40a977:	repnz fnstenv [eax+0xd9b108]
  40a97e:	xchg   edi,eax
  40a97f:	adc    cl,al
  40a981:	xlat   BYTE PTR ds:[ebx]
  40a982:	add    BYTE PTR [eax],al
  40a984:	lahf   
  40a985:	je     0x40a949
  40a987:	mov    BYTE PTR [esi],bl
  40a989:	xor    al,0x1
  40a98b:	add    BYTE PTR [edi-0x3f0b5f85],al
  40a991:	jl     0x40a952
  40a993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a994:	(bad)  
  40a995:	jle    0x40a993
  40a997:	mov    cl,0xa8
  40a999:	xor    DWORD PTR [edi+0x130b8aa],0xd3114e00
  40a9a3:	les    ebp,FWORD PTR [eax+0x1e]
  40a9a6:	(bad)  
  40a9a8:	sbb    BYTE PTR [esi+ecx*8],al
  40a9ab:	rol    BYTE PTR [esi+0x73],cl
  40a9ae:	(bad)  
  40a9b0:	adc    al,0x1e
  40a9b2:	ret    
  40a9b3:	retf   
  40a9b4:	or     BYTE PTR [esi],bl
  40a9b6:	mov    DWORD PTR [eax],0x8a9d4b58
  40a9bc:	jle    0x40aa1e
  40a9be:	nop
  40a9bf:	popf   
  40a9c0:	dec    esi
  40a9c1:	pop    edx
  40a9c2:	sbb    BYTE PTR [eax+eiz*2+0x72869149],0x47
  40a9ca:	lea    ebx,[esi+ebx*4-0x45fffecd]
  40a9d1:	pop    esp
  40a9d2:	(bad)  
  40a9d3:	cwde   
  40a9d4:	mov    esp,0x168f834a
  40a9d9:	inc    edi
  40a9da:	or     DWORD PTR [esi-0x6d784e16],0x9f9d7004
  40a9e4:	pop    es
  40a9e5:	xor    eax,DWORD PTR [ecx]
  40a9e7:	add    BYTE PTR [eax],al
  40a9e9:	add    BYTE PTR [eax+0x32],ah
  40a9ec:	adc    eax,0xc83602
  40a9f1:	add    al,0x36
  40a9f3:	fimul  WORD PTR ds:0xbcd5f1d
  40a9f9:	and    esi,DWORD PTR [edi]
  40a9fb:	loope  0x40a9f9
  40a9fd:	adc    al,0x37
  40a9ff:	xor    BYTE PTR [ebx-0x51c611a2],bh
  40aa05:	push   eax
  40aa06:	in     eax,0x27
  40aa08:	ret    0x8b52
  40aa0b:	sub    al,0x9b
  40aa0d:	inc    esp
  40aa0e:	test   DWORD PTR [ecx+0x5],eax
  40aa11:	add    BYTE PTR [edi],dh
  40aa13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa14:	push   esp
  40aa15:	mov    edx,0xa95756cb
  40aa1a:	leave  
  40aa1b:	push   edx
  40aa1c:	arpl   WORD PTR [ecx-0x4fbb403d],di
  40aa22:	mov    esi,0x370001dc
  40aa27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa28:	push   esp
  40aa29:	mov    edx,0xa9575ea3
  40aa2e:	mov    eax,ds:0x9ebb4c52
  40aa33:	push   0x49
  40aa35:	add    BYTE PTR [edi],dh
  40aa37:	js     0x40aa99
  40aa39:	mov    bh,0x96
  40aa3b:	push   ecx
  40aa3c:	dec    esp
  40aa3d:	mov    bl,0x92
  40aa3f:	adc    BYTE PTR [eax-0x7b],bl
  40aa42:	mov    ?,WORD PTR [ebx+0x52]
  40aa45:	mov    cl,0x8e
  40aa47:	ja     0x40aa4b
  40aa49:	add    BYTE PTR [edi],dh
  40aa4b:	cld    
  40aa4c:	(bad)  [edx]
  40aa4e:	add    BYTE PTR [eax],al
  40aa50:	push   edx
  40aa51:	out    dx,al
  40aa52:	iret   
  40aa53:	ss push esi
  40aa55:	and    eax,0x305f0133
  40aa5a:	xor    BYTE PTR [eax],al
  40aa5c:	aaa    
  40aa5d:	dec    esi
  40aa5e:	xchg   ebp,eax
  40aa5f:	test   BYTE PTR [ebx+eiz*4+0x5bad8a88],ah
  40aa66:	xchg   DWORD PTR [ebp+ebx*4-0x48775fb5],ecx
  40aa6d:	mov    BYTE PTR [si+0x37],dl
  40aa72:	sbb    al,0xf
  40aa74:	ds xor al,0xdb
  40aa77:	adc    DWORD PTR [esi],esi
  40aa79:	xor    al,0xf3
  40aa7b:	or     edi,DWORD PTR [eax]
  40aa7d:	and    al,0xd3
  40aa7f:	add    eax,0x3e82334
  40aa84:	aaa    
  40aa85:	xor    al,0x9d
  40aa87:	(bad)  
  40aa88:	jno    0x40aa6e
  40aa8a:	add    ah,0x12
  40aa8d:	repz mov ds:0xe7ff0ae0,al
  40aa93:	add    esi,DWORD PTR [edi]
  40aa95:	xor    al,0x74
  40aa97:	(bad)  
  40aa98:	mov    edx,0xc09489bc
  40aa9d:	stos   DWORD PTR es:[edi],eax
  40aa9e:	jne    0x40aa3a
  40aaa0:	mov    ds:0x6449a934,eax
  40aaa5:	ja     0x40aa7e
  40aaa7:	pop    eax
  40aaa8:	pusha  
  40aaa9:	je     0x40aa5b
  40aaab:	push   edx
  40aaac:	xchg   BYTE PTR [esi-0x18],dh
  40aaaf:	add    esi,DWORD PTR [edi]
  40aab1:	xor    al,0xf4
  40aab3:	and    eax,DWORD PTR [eax]
  40aab5:	add    BYTE PTR [eax],dh
  40aab7:	adc    bl,bl
  40aab9:	cmp    DWORD PTR [ecx],edx
  40aabb:	push   es
  40aabc:	fiadd  DWORD PTR [edi]
  40aabe:	sbb    eax,0x1d33db10
  40aac3:	or     al,0xe8
  40aac5:	add    esi,DWORD PTR [edi]
  40aac7:	xor    al,0x80
  40aac9:	outs   dx,DWORD PTR ds:[esi]
  40aaca:	je     0x40ab2a
  40aacc:	jg     0x40ab4b
  40aace:	sbb    eax,0x224b764a
  40aad3:	inc    ebx
  40aad4:	jbe    0x40aad9
  40aad6:	aaa    
  40aad7:	xor    al,0x74
  40aad9:	fwait
  40aada:	loope  0x40aa87
  40aadc:	outs   dx,BYTE PTR ds:[esi]
  40aadd:	sahf   
  40aade:	mov    ah,0x82
  40aae0:	ins    BYTE PTR es:[edi],dx
  40aae1:	mov    DWORD PTR [esp+esi*1-0x46a0129],esp
  40aae8:	shl    bh,0x91
  40aaeb:	shl    BYTE PTR [ebx+0xc96bf5],cl
  40aaf1:	mov    bl,0x58
  40aaf3:	icebp  
  40aaf4:	std    
  40aaf5:	ret    0xd84f
  40aaf8:	jmp    0xa344:0x134348d
  40aaff:	test   BYTE PTR [ecx-0x4f7771be],bl
  40ab05:	inc    edi
  40ab06:	xchg   esp,eax
  40ab07:	xchg   esi,eax
  40ab08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab09:	push   ecx
  40ab0a:	jbe    0x40aab3
  40ab0c:	lods   al,BYTE PTR ds:[esi]
  40ab0d:	aas    
  40ab0e:	fild   WORD PTR [eax-0x3312c94a]
  40ab14:	std    
  40ab15:	jns    0x1040c95
  40ab1b:	add    BYTE PTR [edx+0x57],bh
  40ab1e:	dec    eax
  40ab1f:	mov    eax,0xbc406b6c
  40ab24:	xor    al,0x34
  40ab26:	add    DWORD PTR [edi+0x7b8892c2],edx
  40ab2c:	ret    0xb2bf
  40ab2f:	xor    DWORD PTR [ebx+0x68b9fdcc],0x63ca4f58
  40ab39:	dec    edi
  40ab3a:	jp     0x40aacc
  40ab3c:	gs dec ebx
  40ab3e:	je     0x40aadb
  40ab40:	xor    al,0x34
  40ab42:	add    DWORD PTR [ecx+0x7f7f61b7],ecx
  40ab48:	dec    esp
  40ab49:	push   esi
  40ab4a:	data16 jp 0x40ab81
  40ab4d:	xor    al,0x1
  40ab4f:	and    eax,0x2ed9c693
  40ab54:	mov    ebx,ebp
  40ab56:	enter  0x7f1d,0xfd
  40ab5a:	add    BYTE PTR [ebx-0x62457125],cl
  40ab60:	fmul   DWORD PTR [ebp-0x793c7c74]
  40ab66:	mov    dl,0x95
  40ab68:	rol    BYTE PTR [ebp-0x5bea0000],1
  40ab6e:	cdq    
  40ab6f:	sahf   
  40ab70:	xlat   BYTE PTR ds:[ebx]
  40ab71:	xchg   edx,eax
  40ab72:	pushf  
  40ab73:	add    BYTE PTR [ebp-0x7ef0f6d4],al
  40ab79:	adc    DWORD PTR [edx+0xc],ebx
  40ab7c:	and    BYTE PTR [eax+eax*1+0x2c],0x0
  40ab81:	add    BYTE PTR [edi],cl
  40ab83:	jne    0x40abca
  40ab85:	add    ch,BYTE PTR [ecx+0x7c]
  40ab88:	pop    ebx
  40ab89:	pop    ecx
  40ab8a:	inc    edi
  40ab8b:	push   es
  40ab8c:	dec    edx
  40ab8d:	pop    edi
  40ab8e:	sbb    ch,BYTE PTR [ecx*2+0x12b1c13]
  40ab95:	add    ah,bh
  40ab97:	add    DWORD PTR [edx],esp
  40ab99:	and    cl,BYTE PTR [esi]
  40ab9b:	cmp    BYTE PTR [ecx],al
  40ab9d:	add    BYTE PTR [ebx-0x6c7e694e],cl
  40aba3:	test   eax,0x9448839e
  40aba8:	jg     0x40ab48
  40abaa:	push   cs
  40abab:	cmp    BYTE PTR [ecx],al
  40abad:	add    BYTE PTR [ebx+0x70bfac92],dl
  40abb3:	mov    ebx,0x37de9999
  40abb8:	add    DWORD PTR [eax],eax
  40abba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abbb:	inc    esi
  40abbc:	jo     0x40ac36
  40abbe:	nop
  40abbf:	pop    edi
  40abc0:	add    DWORD PTR [eax],eax
  40abc2:	lahf   
  40abc3:	imul   edx,DWORD PTR [edi+0x45],0xffffff9f
  40abc7:	ins    DWORD PTR es:[edi],dx
  40abc8:	inc    edi
  40abc9:	push   eax
  40abca:	cwde   
  40abcb:	pop    edi
  40abcc:	je     0x40ac46
  40abce:	mov    ds:0x2c697b58,al
  40abd3:	push   esp
  40abd4:	bound  ebp,QWORD PTR [ebp-0x4f]
  40abd7:	push   ecx
  40abd8:	imul   esi,DWORD PTR [ecx+0x74],0xe
  40abdc:	daa    
  40abdd:	cmp    DWORD PTR [esp+esi*4+0x67],ebx
  40abe1:	jns    0x40ac3b
  40abe3:	push   0x5f
  40abe5:	push   esi
  40abe6:	add    BYTE PTR [eax],al
  40abe8:	aaa    
  40abe9:	sbb    BYTE PTR [esi+edx*2-0x15],ch
  40abed:	add    edx,DWORD PTR [ebp+0x4d]
  40abf0:	out    dx,al
  40abf1:	fadd   QWORD PTR [ecx]
  40abf3:	add    BYTE PTR [edi],dh
  40abf5:	rcl    DWORD PTR [ecx],1
  40abf7:	add    al,0x33
  40abf9:	loop   0x40ac1b
  40abfb:	adc    eax,DWORD PTR [eax+0x39]
  40abfe:	sbb    al,0x1f
  40ac00:	cs retf 0x130c
  40ac04:	inc    eax
  40ac05:	fcom   QWORD PTR [edi]
  40ac07:	add    BYTE PTR [edi],dh
  40ac09:	aam    0x15
  40ac0b:	push   ds
  40ac0c:	xor    dl,ah
  40ac0e:	pop    ds
  40ac0f:	push   cs
  40ac10:	pop    ds
  40ac11:	ret    
  40ac12:	and    DWORD PTR ds:0x3224f167,edi
  40ac18:	push   esi
  40ac19:	xchg   DWORD PTR [eax],ebx
  40ac1b:	sub    ebx,DWORD PTR [edx-0xe]
  40ac1e:	sub    esp,DWORD PTR [edx]
  40ac20:	pop    esi
  40ac21:	push   DWORD PTR [edx+0x6e]
  40ac24:	xchg   BYTE PTR [edi],dh
  40ac26:	cmp    DWORD PTR [ecx],esp
  40ac28:	inc    esi
  40ac29:	rcl    DWORD PTR [ebx],cl
  40ac2b:	push   ss
  40ac2c:	and    eax,ebp
  40ac2e:	and    al,0x1b
  40ac30:	pop    ds
  40ac31:	rcl    DWORD PTR [edi],1
  40ac33:	add    al,BYTE PTR [edi-0x29]
  40ac36:	sub    al,0x12
  40ac38:	inc    ebx
  40ac39:	loope  0x40ac40
  40ac3b:	sbb    dh,BYTE PTR [edi]
  40ac3d:	out    0xb,eax
  40ac3f:	pop    ds
  40ac40:	aaa    
  40ac41:	pop    esp
  40ac42:	mov    bl,0x9f
  40ac44:	xchg   esi,eax
  40ac45:	jle    0x40ac04
  40ac47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac48:	test   esp,ebx
  40ac4a:	add    DWORD PTR [eax],eax
  40ac4c:	add    BYTE PTR [eax],al
  40ac4e:	aaa    
  40ac4f:	inc    ebp
  40ac50:	shr    DWORD PTR [ecx+0x1dc7b],0x37
  40ac57:	push   0xffffffa3
  40ac59:	mov    esi,0x1dcef
  40ac5e:	aaa    
  40ac5f:	adc    DWORD PTR [ecx],0xf
  40ac62:	cs xor al,0xe8
  40ac65:	add    esi,DWORD PTR [edi]
  40ac67:	xor    al,0x23
  40ac69:	and    DWORD PTR [esi],edi
  40ac6b:	and    eax,0x2b3014e3
  40ac70:	or     al,0x4
  40ac72:	and    eax,0x3703e82f
  40ac77:	xor    al,0x95
  40ac79:	aam    0xb3
  40ac7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac7c:	pop    esi
  40ac7d:	add    al,0x37
  40ac7f:	xor    al,0xe3
  40ac81:	and    eax,0x1cf21a1f
  40ac86:	xor    DWORD PTR [ebx+esi*1],esi
  40ac89:	push   ecx
  40ac8a:	aaa    
  40ac8b:	xor    al,0xc8
  40ac8d:	es add eax,0x3703e810
  40ac93:	xor    al,0xe2
  40ac95:	pop    es
  40ac96:	dec    ebp
  40ac97:	daa    
  40ac98:	call   0x3a74e3a0
  40ac9d:	mov    eax,0x3e797cd
  40aca2:	aaa    
  40aca3:	xor    al,0x1c
  40aca5:	sub    eax,0x23140454
  40acaa:	inc    esp
  40acab:	bndstx [esi+ebx*1],bnd1
  40acaf:	sub    ah,ch
  40acb1:	or     al,BYTE PTR [eax]
  40acb3:	add    BYTE PTR [edi+esi*1],bl
  40acb6:	adc    ebx,DWORD PTR [ecx]
  40acb8:	dec    ebp
  40acb9:	xor    dl,dh
  40acbb:	pop    ss
  40acbc:	xor    dh,BYTE PTR [ebx+ecx*1]
  40acbf:	adc    DWORD PTR [ebx+0x3c],ecx
  40acc2:	into   
  40acc3:	or     al,0x37
  40acc5:	xor    al,0x71
  40acc7:	call   0x8f94:0xa96fd8b3
  40acce:	dec    ebp
  40accf:	lods   al,BYTE PTR ds:[esi]
  40acd0:	xchg   edi,eax
  40acd1:	xchg   ebx,eax
  40acd2:	pop    eax
  40acd3:	add    al,0x37
  40acd5:	xor    al,0xfa
  40acd7:	in     al,0x9a
  40acd9:	xchg   edx,edi
  40acdb:	std    
  40acdc:	test   eax,0xa5f400ca
  40ace1:	retf   
  40ace2:	cli    
  40ace3:	add    esp,esp
  40ace5:	leave  
  40ace6:	std    
  40ace7:	in     al,0xc9
  40ace9:	nop
  40acea:	mov    dh,0x98
  40acec:	rcr    BYTE PTR [edx-0x36797c4f],0xfd
  40acf3:	pop    DWORD PTR [ebx+0x77bae1c5]
  40acf9:	leave  
  40acfa:	std    
  40acfb:	popf   
  40acfc:	ret    0x96bb
  40acff:	pop    esi
  40ad00:	or     ecx,0xe18765fd
  40ad06:	into   
  40ad07:	mov    ah,0x71
  40ad09:	inc    BYTE PTR [ebx+0x13434e9]
  40ad0f:	push   esi
  40ad10:	nop
  40ad11:	sahf   
  40ad12:	mov    dh,0x55
  40ad14:	mov    DWORD PTR [esi+0x4cf0],ebx
  40ad1a:	fcom   QWORD PTR [ecx+0x2440d200]
  40ad20:	sub    eax,0x13453b2
  40ad25:	scas   al,BYTE PTR es:[edi]
  40ad26:	dec    ecx
  40ad27:	or     bh,BYTE PTR [esi]
  40ad29:	and    eax,0xe92d0d5e
  40ad2e:	xor    al,0x34
  40ad30:	add    DWORD PTR [edi-0x55],edi
  40ad33:	mov    ah,0x92
  40ad35:	pusha  
  40ad36:	mov    cl,0xb0
  40ad38:	jg     0x40ad23
  40ad3a:	xor    al,0x34
  40ad3c:	add    DWORD PTR [edx],edi
  40ad3e:	out    0xc5,eax
  40ad40:	hlt    
  40ad41:	inc    eax
  40ad42:	in     eax,0xd0
  40ad44:	out    0x3f,al
  40ad46:	fmul   st(0),st
  40ad48:	std    
  40ad49:	and    dh,BYTE PTR [edi]
  40ad4b:	(bad)  
  40ad4c:	in     al,0x20
  40ad4e:	rol    eax,0xef
  40ad51:	jmp    0x241e18a
  40ad56:	ret    0xedcc
  40ad59:	add    BYTE PTR [ebp-0x37],al
  40ad5c:	jmp    0xd329e85b
  40ad61:	ror    DWORD PTR [esi-0x17],0xd5
  40ad65:	xchg   edi,eax
  40ad66:	inc    esi
  40ad67:	out    dx,al
  40ad68:	ret    0x78c0
  40ad6b:	jmp    0x40ad2c
  40ad6d:	repz shl edi,0xc9
  40ad71:	rcl    cl,1
  40ad73:	loopne 0x40acf8
  40ad75:	xchg   ebp,eax
  40ad76:	rcr    ch,cl
  40ad78:	(bad)  
  40ad79:	call   0xf2317907
  40ad7e:	add    BYTE PTR [eax],al
  40ad80:	jge    0x40adb1
  40ad82:	add    DWORD PTR [eax],eax
  40ad84:	sub    DWORD PTR [ebp+0x68],ecx
  40ad87:	sbb    bh,BYTE PTR [esi]
  40ad89:	imul   edx,DWORD PTR [eax+0x5f],0x406110
  40ad90:	sub    al,0x56
  40ad92:	jb     0x40ae06
  40ad94:	pop    ds
  40ad95:	pop    eax
  40ad96:	ja     0x40adf9
  40ad98:	dec    esi
  40ad99:	xor    al,0x1
  40ad9b:	add    ch,dl
  40ad9d:	aam    0xc8
  40ad9f:	fistp  WORD PTR [esi]
  40ada1:	xor    al,0x1
  40ada3:	add    BYTE PTR [ebx+0x62],al
  40ada6:	inc    esi
  40ada7:	push   ecx
  40ada8:	push   esp
  40ada9:	jl     0x40adf5
  40adab:	inc    edx
  40adac:	push   ds
  40adad:	xor    al,0x1
  40adaf:	add    BYTE PTR [edx-0x36],ch
  40adb2:	in     al,0xe3
  40adb4:	push   0xef6fec0
  40adb9:	xor    al,0x1
  40adbb:	add    BYTE PTR [eax],ch
  40adbd:	in     eax,0xd8
  40adbf:	retf   0xeb18
  40adc2:	enter  0x17df,0xe2
  40adc6:	repz in al,0xad
  40adc9:	in     al,0xc2
  40adcb:	(bad)  
  40adcc:	push   ss
  40adcd:	fucom  st(3)
  40adcf:	loopne 0x40ade5
  40add1:	in     al,dx
  40add2:	in     al,dx
  40add3:	(bad)  
  40add4:	aaa    
  40add5:	sub    ch,bl
  40add7:	out    dx,al
  40add8:	into   
  40add9:	sub    edi,ecx
  40addb:	out    dx,eax
  40addc:	aaa    
  40addd:	call   0xe086afeb
  40ade2:	call   DWORD PTR [ecx]
  40ade4:	add    BYTE PTR [eax],al
  40ade6:	cmp    ebp,ebx
  40ade8:	or     ch,BYTE PTR ds:0x2418df58
  40adee:	push   ebx
  40adef:	sub    al,0x3f
  40adf1:	cmp    dl,BYTE PTR [ecx-0x29]
  40adf4:	ss and al,0x56
  40adf7:	(bad)  [ebx+esi*1]
  40adfa:	dec    ecx
  40adfb:	(bad)  
  40adfc:	sub    DWORD PTR [eax],eax
  40adfe:	aaa    
  40adff:	fsubr  DWORD PTR [eax]
  40ae01:	sub    eax,0x292ce812
  40ae06:	rdpmc  
  40ae08:	add    eax,0x84933700
  40ae0d:	mov    al,al
  40ae0f:	pop    esp
  40ae10:	popf   
  40ae11:	mov    ?,WORD PTR [ecx+edx*2-0x5bc84076]
  40ae18:	retf   0x5ed7
  40ae1b:	fld    QWORD PTR [ecx]
  40ae1d:	add    BYTE PTR [edi],dh
  40ae1f:	lds    ebp,FWORD PTR [edx+edi*1]
  40ae22:	pop    ebx
  40ae23:	fld    QWORD PTR [ecx]
  40ae25:	add    BYTE PTR [edi],dh
  40ae27:	retf   
  40ae28:	dec    ebp
  40ae29:	push   edx
  40ae2a:	sbb    ch,0x1
  40ae2d:	add    BYTE PTR [edi],dh
  40ae2f:	aam    0x5c
  40ae31:	inc    eax
  40ae32:	jno    0x40ae11
  40ae34:	add    DWORD PTR [eax],eax
  40ae36:	aaa    
  40ae37:	sub    DWORD PTR ds:0x4e2d4536,esi
  40ae3d:	js     0x40aea0
  40ae3f:	clc    
  40ae40:	je     0x40aea5
  40ae42:	aaa    
  40ae43:	aaa    
  40ae44:	sub    BYTE PTR [esi+0x4d],bh
  40ae47:	icebp  
  40ae48:	add    DWORD PTR [eax],eax
  40ae4a:	add    BYTE PTR [eax],al
  40ae4c:	aaa    
  40ae4d:	out    dx,al
  40ae4e:	pop    edi
  40ae4f:	ins    DWORD PTR es:[edi],dx
  40ae50:	dec    edx
  40ae51:	xor    al,0x88
  40ae53:	data16 aaa 
  40ae55:	xor    al,0x86
  40ae57:	daa    
  40ae58:	add    DWORD PTR [eax],ecx
  40ae5a:	xlat   BYTE PTR ds:[ebx]
  40ae5b:	and    edi,ecx
  40ae5d:	sbb    edi,DWORD PTR [esp+ebp*2-0x5cb3cbc9]
  40ae64:	loop   0x40adf7
  40ae66:	inc    edi
  40ae67:	scas   eax,DWORD PTR es:[edi]
  40ae68:	in     al,0x33
  40ae6a:	or     dh,bh
  40ae6c:	mov    eax,ds:0x99f407cf
  40ae71:	(bad)  
  40ae72:	into   
  40ae73:	xlat   BYTE PTR ds:[ebx]
  40ae74:	jg     0x40ae70
  40ae76:	scas   eax,DWORD PTR es:[edi]
  40ae77:	shr    DWORD PTR [edi-0x1a],cl
  40ae7a:	mov    ds:0xcfe262fa,al
  40ae7f:	les    eax,FWORD PTR [edi+0x3703e7df]
  40ae85:	xor    al,0xe9
  40ae87:	add    cl,BYTE PTR [eax+0x34]
  40ae8a:	mov    edi,0xa03354ee
  40ae8f:	sar    BYTE PTR [eax-0xa],cl
  40ae92:	out    0x3,eax
  40ae94:	aaa    
  40ae95:	xor    al,0x58
  40ae97:	mov    dl,0x8f
  40ae99:	xchg   esi,eax
  40ae9a:	out    0x3,eax
  40ae9c:	aaa    
  40ae9d:	xor    al,0xf9
  40ae9f:	daa    
  40aea0:	push   esp
  40aea1:	adc    esp,edx
  40aea3:	and    eax,0x3e81e58
  40aea8:	aaa    
  40aea9:	xor    al,0x81
  40aeab:	call   0xefbe78a5
  40aeb0:	add    BYTE PTR [eax],al
  40aeb2:	retf   0x5fc4
  40aeb5:	cli    
  40aeb6:	or     dh,al
  40aeb8:	lock ss dec esp
  40aebb:	add    eax,0xff1f7c1d
  40aec0:	(bad)  
  40aec2:	sub    DWORD PTR [edi*8+0x14341630],ecx
  40aec9:	pushf  
  40aeca:	les    esp,FWORD PTR [eax-0x573ba000]
  40aed0:	mov    DWORD PTR ds:0x7901343b,ecx
  40aed6:	cld    
  40aed7:	fmulp  st(3),st
  40aed9:	ds call 0xdd758d7e
  40aedf:	call   0xe4c8e0b4
  40aee4:	lds    ebp,FWORD PTR [ecx+0x33]
  40aee7:	xor    al,0x1
  40aee9:	sub    al,0xc9
  40aeeb:	mov    ebx,0xb3ad6b90
  40aef0:	mov    esp,DWORD PTR [edx+0x77]
  40aef3:	(bad)  
  40aef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef7:	mov    edx,0xb5a97e8b
  40aefc:	xchg   edi,eax
  40aefd:	jb     0x40aeb2
  40aeff:	(bad)  
  40af02:	jnp    0x40aef3
  40af04:	fisub  WORD PTR [edi-0x672d1674]
  40af0a:	jl     0x40aed1
  40af0c:	std    
  40af0d:	pop    ebx
  40af0e:	lods   eax,DWORD PTR ds:[esi]
  40af0f:	mov    al,0x96
  40af11:	pop    ebx
  40af12:	mov    bh,0xa0
  40af14:	cmp    DWORD PTR [eax+eax*1+0x0],0x5fa192bd
  40af1c:	xchg   esp,eax
  40af1d:	fwait
  40af1e:	mov    esp,0xa688b864
  40af23:	push   ebp
  40af24:	in     al,dx
  40af25:	mov    ebp,0x7ee73f93
  40af2a:	mov    ecx,0xac8adc3a
  40af2f:	jmp    0x6941e368
  40af34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af35:	mov    bl,0x80
  40af37:	push   0xffffffaa
  40af39:	mov    al,0x91
  40af3b:	jmp    0xfc41e374
  40af40:	and    ch,BYTE PTR ds:0x39f0e310
  40af46:	add    eax,DWORD PTR [eax]
  40af48:	fidiv  WORD PTR [eax]
  40af4a:	add    DWORD PTR [eax],eax
  40af4c:	jnp    0x40af1c
  40af4e:	stc    
  40af4f:	cli    
  40af50:	into   
  40af51:	xor    BYTE PTR [ecx],al
  40af53:	add    BYTE PTR [ecx],dh
  40af55:	cli    
  40af56:	into   
  40af57:	leave  
  40af58:	je     0x40af49
  40af5a:	fadd   DWORD PTR [eax]
  40af5c:	js     0x40aef4
  40af5e:	test   al,0xa8
  40af60:	push   0xffffff8e
  40af62:	mov    dh,0xab
  40af64:	cld    
  40af65:	mov    ?,WORD PTR [ecx-0x173fc600]
  40af6b:	iret   
  40af6c:	lahf   
  40af6d:	iret   
  40af6e:	in     al,0xba
  40af70:	pushf  
  40af71:	aad    0xed
  40af73:	add    BYTE PTR [edi+0x15677546],ch
  40af79:	fs dec eax
  40af7b:	inc    eax
  40af7c:	add    BYTE PTR [eax],al
  40af7e:	mov    ?,WORD PTR [eax]
  40af80:	add    DWORD PTR [eax],eax
  40af82:	lods   eax,DWORD PTR ds:[esi]
  40af83:	(bad)  
  40af85:	jmp    0x40af07
  40af87:	shr    eax,cl
  40af89:	imul   BYTE PTR [edi+0x3ffffd95]
  40af8f:	jne    0x40afd3
  40af91:	push   edi
  40af92:	cmp    DWORD PTR [ebx+0x5e],ebp
  40af95:	push   esi
  40af96:	es jp  0x40af9a
  40af99:	add    BYTE PTR [edx-0x3d677550],dh
  40af9f:	mov    dh,0x9a
  40afa1:	(bad)  
  40afa2:	lds    ebp,FWORD PTR [edi-0x6d715a58]
  40afa8:	xchg   BYTE PTR [eax+0xebbaa1],bl
  40afae:	icebp  
  40afaf:	cld    
  40afb0:	cs das 
  40afb2:	push   cs
  40afb3:	cmp    BYTE PTR [ecx],al
  40afb5:	add    BYTE PTR [ebx],ch
  40afb7:	push   0x46
  40afb9:	push   ecx
  40afba:	push   ds
  40afbb:	cmp    BYTE PTR [ecx],al
  40afbd:	add    bh,dh
  40afbf:	je     0x40b019
  40afc1:	pop    esi
  40afc2:	aaa    
  40afc3:	int    0x1
  40afc5:	add    BYTE PTR [edi],dh
  40afc7:	stc    
  40afc8:	jne    0x40afca
  40afca:	aaa    
  40afcb:	push   ebx
  40afcc:	sbb    DWORD PTR [esi-0x6f65a742],0xfffffff0
  40afd3:	dec    edi
  40afd4:	or     DWORD PTR [edi+0x39232e37],0x5
  40afdb:	fdivr  DWORD PTR [edx+0x30]
  40afde:	or     esi,ebx
  40afe0:	add    DWORD PTR [eax],eax
  40afe2:	add    BYTE PTR [eax],al
  40afe4:	aaa    
  40afe5:	jb     0x40afa0
  40afe7:	mov    eax,ds:0xb5f86ee5
  40afec:	in     eax,0x65
  40afee:	add    eax,0x14e73700
  40aff3:	bound  edx,QWORD PTR [ecx]
  40aff5:	clc    
  40aff6:	adc    BYTE PTR [ecx+0x23],ah
  40aff9:	xchg   edx,eax
  40affa:	sbb    BYTE PTR [ecx],dh
  40affc:	dec    ecx
  40affd:	sub    BYTE PTR ds:0x11d94b3a,ch
  40b003:	add    bl,BYTE PTR es:[ebp+0x2b]
  40b007:	jo     0x40b04f
  40b009:	cmp    cl,BYTE PTR [ebx]
  40b00b:	aas    
  40b00c:	in     al,dx
  40b00d:	int3   
  40b00e:	add    DWORD PTR [eax],eax
  40b010:	aaa    
  40b011:	out    0xf9,al
  40b013:	(bad)  
  40b014:	mov    ds:0x6eada0b3,eax
  40b019:	push   edx
  40b01a:	mov    ds:0xd57171d3,eax
  40b01f:	mov    eax,0xff8fa598
  40b024:	cmp    BYTE PTR [edi+0x79eafdfa],dh
  40b02a:	mov    al,ds:0xa27b2fae
  40b02f:	hlt    
  40b030:	clc    
  40b031:	ja     0x40b027
  40b033:	xchg   DWORD PTR [edi],esi
  40b035:	out    dx,eax
  40b036:	xor    dh,BYTE PTR [esi]
  40b038:	xchg   edx,eax
  40b039:	ret    0x6767
  40b03c:	inc    edi
  40b03d:	xor    al,0xde
  40b03f:	imul   eax,DWORD PTR [edx+0x33],0xffffffcd
  40b043:	cmp    eax,0x59095287
  40b048:	add    BYTE PTR [eax],al
  40b04a:	aaa    
  40b04b:	xor    al,0x33
  40b04d:	aad    0x9e
  40b04f:	mov    ?,WORD PTR [edx-0x30]
  40b052:	loopne 0x40b016
  40b054:	div    BYTE PTR ds:0x3e8111a
  40b05a:	aaa    
  40b05b:	xor    al,0xfd
  40b05d:	xor    al,0x18
  40b05f:	jno    0x40b049
  40b061:	add    esi,DWORD PTR [edi]
  40b063:	xor    al,0x8d
  40b065:	jne    0x40b0b6
  40b067:	push   ecx
  40b068:	call   0x6274e770
  40b06d:	(bad)  
  40b06e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b06f:	ret    0xca35
  40b072:	jl     0x40b051
  40b074:	sub    edx,edi
  40b076:	xchg   edx,eax
  40b077:	out    dx,al
  40b078:	and    al,0xc7
  40b07a:	je     0x40b072
  40b07c:	and    dl,al
  40b07e:	in     ax,0xe7
  40b081:	add    esi,DWORD PTR [edi]
  40b083:	xor    al,0xd6
  40b085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b086:	stos   BYTE PTR es:[edi],al
  40b087:	mov    bl,0x8f
  40b089:	mov    al,ds:0x12253397
  40b08e:	sub    al,BYTE PTR [edi]
  40b090:	in     eax,dx
  40b091:	or     eax,0x1ae7244a
  40b096:	sub    DWORD PTR [ebp-0x18],ebx
  40b099:	add    esi,DWORD PTR [edi]
  40b09b:	xor    al,0x27
  40b09d:	adc    al,0x8
  40b09f:	or     ch,bh
  40b0a1:	add    DWORD PTR [ecx],ebp
  40b0a3:	inc    bl
  40b0a5:	or     DWORD PTR [edx],esi
  40b0a7:	xor    al,ch
  40b0a9:	add    esi,DWORD PTR [edi]
  40b0ab:	xor    al,0xb4
  40b0ad:	add    DWORD PTR [eax],0x0
  40b0b0:	fcom   QWORD PTR [ebx-0x5a4881a9]
  40b0b6:	jb     0x40b0bc
  40b0b8:	aaa    
  40b0b9:	xor    al,0x1
  40b0bb:	jp     0x40b094
  40b0bd:	iret   
  40b0be:	fst    QWORD PTR [edx-0x6e5e774d]
  40b0c4:	mov    ebp,0x163e58f
  40b0c9:	(bad)  
  40b0ca:	loope  0x40b116
  40b0cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0cd:	aam    0xb6
  40b0cf:	and    ebp,edi
  40b0d1:	test   al,0xb2
  40b0d3:	xchg   edx,eax
  40b0d4:	sahf   
  40b0d5:	xchg   ebx,eax
  40b0d6:	lods   al,BYTE PTR ds:[esi]
  40b0d7:	xchg   BYTE PTR [ecx-0x48e5183d],dl
  40b0dd:	mov    edi,0xb6a58bfc
  40b0e2:	xor    BYTE PTR [eax-0x55],0xaf
  40b0e6:	xchg   edi,eax
  40b0e7:	sub    esp,ebx
  40b0e9:	loopne 0x40b075
  40b0eb:	add    eax,0x4c01343b
  40b0f0:	popf   
  40b0f1:	fdivp  st(0),st
  40b0f3:	push   es
  40b0f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f5:	into   
  40b0f6:	out    dx,eax
  40b0f7:	add    eax,0xf0f2bde2
  40b0fc:	test   BYTE PTR [ebp+0x418d3cb5],cl
  40b102:	iret   
  40b103:	mov    BYTE PTR [edx+edx*8-0x6c42321a],dl
  40b10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b10b:	fidivr WORD PTR [ecx+0x52d8fdc1]
  40b111:	(bad)
  40b114:	add    BYTE PTR [eax],al
  40b116:	push   esi
  40b117:	in     al,dx
  40b118:	les    ebp,FWORD PTR [edx-0x5c173567]
  40b11e:	jge    0x40b0ff
  40b120:	enter  0x74a8,0xc1
  40b124:	std    
  40b125:	hlt    
  40b126:	sbb    cl,BYTE PTR [edi]
  40b128:	and    esp,ebx
  40b12a:	sbb    DWORD PTR [edx],eax
  40b12c:	adc    eax,0x230d50e3
  40b131:	jmp    0x41e56a
  40b136:	inc    ebx
  40b137:	cmp    al,0x68
  40b139:	push   0x5e7a3b1b
  40b13e:	or     eax,0x4667c43
  40b143:	pop    eax
  40b144:	add    DWORD PTR [eax],eax
  40b146:	jae    0x40b123
  40b148:	fcmovnbe st,st(5)
  40b14a:	ja     0x40b141
  40b14c:	(bad)  
  40b14d:	xchg   ebp,eax
  40b14e:	nop
  40b14f:	jecxz  0x40b11c
  40b151:	fcomp  QWORD PTR [eax-0x3d]
  40b154:	(bad)  
  40b156:	sub    BYTE PTR ds:0x95790001,dh
  40b15c:	mov    eax,ds:0xbc7abdaf
  40b161:	out    dx,eax
  40b162:	imul   edx,DWORD PTR [ebp+0x34ceafaa],0x1
  40b169:	add    dh,bh
  40b16b:	lahf   
  40b16c:	(bad)  
  40b16d:	nop
  40b16e:	sahf   
  40b16f:	xor    al,0x1
  40b171:	add    BYTE PTR [edi-0x45],dl
  40b174:	icebp  
  40b175:	in     eax,dx
  40b176:	mov    ?,WORD PTR [ecx+eax*1]
  40b179:	add    BYTE PTR [eax],al
  40b17b:	add    cl,al
  40b17d:	inc    edi
  40b17e:	push   0x5117c375
  40b183:	ins    BYTE PTR es:[edi],dx
  40b184:	mov    ebp,0x4900013f
  40b189:	inc    esi
  40b18a:	jns    0x40b1f7
  40b18c:	jmp    0x16bf1ad0
  40b191:	pusha  
  40b192:	jle    0x40b208
  40b194:	cld    
  40b195:	dec    ecx
  40b196:	pusha  
  40b197:	jl     0x40b19d
  40b199:	cmp    eax,0x5eef5853
  40b19e:	outs   dx,DWORD PTR ds:[esi]
  40b19f:	fs or  eax,0xf74b2752
  40b1a5:	dec    esi
  40b1a6:	and    bx,WORD PTR [edi]
  40b1a9:	pop    esp
  40b1aa:	push   esi
  40b1ab:	push   ebx
  40b1ac:	dec    esi
  40b1ad:	xor    al,0x1
  40b1af:	add    BYTE PTR [edi],dh
  40b1b1:	and    bh,BYTE PTR [edi]
  40b1b3:	dec    esp
  40b1b4:	mov    BYTE PTR [edx],al
  40b1b6:	dec    ecx
  40b1b7:	pop    esp
  40b1b8:	ins    DWORD PTR es:[edi],dx
  40b1b9:	cmp    DWORD PTR [ecx+0x4b],ebp
  40b1bc:	ja     0x40b1e5
  40b1be:	dec    ebx
  40b1bf:	push   ebp
  40b1c0:	jg     0x40b1e9
  40b1c2:	inc    esi
  40b1c3:	data16 fwait
  40b1c5:	sub    BYTE PTR [eax+0x5a],dl
  40b1c8:	mov    ?,WORD PTR [bx]
  40b1cb:	adc    bh,BYTE PTR [ecx-0x78]
  40b1ce:	push   ebp
  40b1cf:	pop    edx
  40b1d0:	aaa    
  40b1d1:	mov    ch,0xa7
  40b1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d4:	xchg   edx,eax
  40b1d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d6:	mov    ds:0xb662aaba,al
  40b1db:	in     al,dx
  40b1dc:	mov    ch,BYTE PTR [ebp+0xa39d]
  40b1e2:	call   0x1cd:0x99b4a63f
  40b1e9:	add    BYTE PTR [edi],dh
  40b1eb:	test   al,0x4b
  40b1ed:	push   esp
  40b1ee:	push   0xffffff84
  40b1f0:	dec    ecx
  40b1f1:	dec    edi
  40b1f2:	cmp    dh,BYTE PTR [esi-0x6df3a7b0]
  40b1f8:	push   ebp
  40b1f9:	pop    edi
  40b1fa:	aaa    
  40b1fb:	fld    TBYTE PTR [edx]
  40b1fd:	sub    esp,DWORD PTR [ebp-0x79]
  40b200:	sub    al,0x30
  40b202:	or     eax,0x532725dd
  40b207:	mov    DWORD PTR [eax],esp
  40b209:	and    BYTE PTR ds:0x502c2a36,al
  40b20f:	adc    al,0x22
  40b211:	sbb    ebx,DWORD PTR cs:[esp+ebp*1]
  40b215:	add    BYTE PTR [edi],dh
  40b217:	mov    dl,0x8d
  40b219:	(bad)  
  40b21a:	mov    esp,0x7c88845e
  40b21f:	mov    ah,0x8d
  40b221:	sahf   
  40b222:	lods   al,BYTE PTR ds:[esi]
  40b223:	popf   
  40b224:	mov    al,ds:0x9758a796
  40b229:	xchg   BYTE PTR [ebp-0x606991cc],ch
  40b22f:	xor    al,0x3d
  40b231:	jo     0x40b1df
  40b233:	inc    edx
  40b234:	sbb    BYTE PTR [eax-0x53],bl
  40b237:	cmp    ecx,DWORD PTR [edx]
  40b239:	jo     0x40b1d1
  40b23b:	push   esp
  40b23c:	pop    ds
  40b23d:	jp     0x40b1dc
  40b23f:	cmp    ecx,DWORD PTR ds:0xb52916a
  40b245:	popa   
  40b246:	add    BYTE PTR [eax],al
  40b248:	push   esi
  40b249:	push   0xfffffffd
  40b24b:	arpl   WORD PTR [edi+ecx*2+0x499562ad],cx
  40b252:	mov    ebp,0xf1547e49
  40b257:	dec    ebx
  40b258:	push   esp
  40b259:	and    al,0xd9
  40b25b:	dec    esi
  40b25c:	mov    DWORD PTR [ebp-0x67],esi
  40b25f:	cmp    eax,0x380a3472
  40b264:	push   ss
  40b265:	xor    al,0xaf
  40b267:	xor    al,0x3
  40b269:	or     edx,edi
  40b26b:	inc    ecx
  40b26c:	aaa    
  40b26d:	xor    al,0xcc
  40b26f:	sbb    BYTE PTR [eax],bl
  40b271:	sub    BYTE PTR [eax],al
  40b273:	add    edi,DWORD PTR [ecx]
  40b275:	push   0x30400ed0
  40b27a:	out    dx,al
  40b27b:	push   ss
  40b27c:	cs das 
  40b27e:	call   0x4874e986
  40b283:	lods   al,BYTE PTR ds:[esi]
  40b284:	leave  
  40b285:	jp     0x40b2f1
  40b287:	mov    WORD PTR [ecx+0x542ab433],gs
  40b28d:	add    al,0x1c
  40b28f:	daa    
  40b290:	inc    esp
  40b291:	sbb    DWORD PTR [ebx],ebx
  40b293:	daa    
  40b294:	cmp    ebp,DWORD PTR [edi]
  40b296:	icebp  
  40b297:	or     BYTE PTR [ebp+0x37],cl
  40b29a:	stc    
  40b29b:	add    eax,0x33fa130e
  40b2a0:	or     cl,BYTE PTR [eax]
  40b2a2:	sti    
  40b2a3:	xor    eax,0xe6012122
  40b2a8:	and    dh,BYTE PTR [ecx+eax*1]
  40b2ab:	jne    0x40b2ad
  40b2ad:	add    al,al
  40b2af:	lods   eax,DWORD PTR ds:[esi]
  40b2b0:	test   BYTE PTR [ecx-0x5e],dh
  40b2b3:	test   al,0xc4
  40b2b5:	push   ebx
  40b2b6:	mov    ch,0xb0
  40b2b8:	call   0xc658:0xcc9fc663
  40b2bf:	lahf   
  40b2c0:	cdq    
  40b2c1:	jmp    0x4441e6fa
  40b2c6:	fstp   TBYTE PTR [edi+0x34338ee1]
  40b2cc:	add    DWORD PTR ds:0x8fba8ccc,edi
  40b2d2:	les    ebx,FWORD PTR [ebp-0x7c625d54]
  40b2d8:	in     eax,dx
  40b2d9:	mov    WORD PTR [ebp+0x5b9d0097],ds
  40b2df:	push   esp
  40b2e0:	jno    0x40b2b5
  40b2e2:	jnp    0x40b336
  40b2e4:	arpl   cx,cx
  40b2e6:	jae    0x40b34d
  40b2e8:	dec    ebp
  40b2e9:	enter  0x4057,0x67
  40b2ed:	clc    
  40b2ee:	je     0x40b32d
  40b2f0:	jb     0x40b287
  40b2f2:	inc    ebx
  40b2f3:	push   edi
  40b2f4:	add    DWORD PTR [ebx-0x44feb6dc],edi
  40b2fa:	pop    ebx
  40b2fb:	fs push esp
  40b2fd:	loope  0x40b32e
  40b2ff:	sub    al,BYTE PTR [ecx]
  40b301:	inc    esp
  40b302:	mov    edi,0x3b648dab
  40b307:	xor    al,0x1
  40b309:	in     al,dx
  40b30a:	pop    edx
  40b30b:	(bad)  
  40b30c:	cmp    BYTE PTR [ecx-0x583ebb6],dh
  40b312:	add    BYTE PTR [eax],al
  40b314:	aas    
  40b315:	adc    BYTE PTR ds:0x27fb2a0d,bh
  40b31b:	dec    ebx
  40b31c:	cmp    eax,0x43032ffc
  40b321:	push   es
  40b322:	and    DWORD PTR [eax],eax
  40b324:	ss push esi
  40b326:	imul   ebp,DWORD PTR [edx],0x2426183f
  40b32c:	imul   esi,DWORD PTR [ecx],0xc1d7b4b
  40b332:	add    DWORD PTR [eax],eax
  40b334:	and    BYTE PTR [edi],cl
  40b336:	jne    0x40b3a5
  40b338:	adc    dh,BYTE PTR [ebp+0x1]
  40b33b:	add    bh,bh
  40b33d:	dec    esi
  40b33e:	dec    ecx
  40b33f:	pop    esp
  40b340:	pop    ecx
  40b341:	sbb    al,0xc
  40b343:	or     DWORD PTR [esi],edi
  40b345:	and    BYTE PTR [ecx],al
  40b347:	add    BYTE PTR [ebx-0x3],ah
  40b34a:	dec    esi
  40b34b:	inc    esi
  40b34c:	push   ds
  40b34d:	xor    DWORD PTR [ecx],eax
  40b34f:	add    BYTE PTR [esi],ch
  40b351:	dec    esp
  40b352:	bound  esp,QWORD PTR [esi+ecx*1+0x31]
  40b356:	add    DWORD PTR [eax],eax
  40b358:	fidiv  WORD PTR [eax]
  40b35a:	add    DWORD PTR [eax],eax
  40b35c:	imul   ebx,DWORD PTR [ecx-0x69344e61],0xffffffaf
  40b363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b364:	jl     0x40b31d
  40b366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b367:	scas   al,BYTE PTR es:[edi]
  40b368:	mov    dh,0x94
  40b36a:	mov    edx,0x85964ea6
  40b36f:	add    BYTE PTR [ebp-0x7c],0xb1
  40b373:	mov    esi,0x9e7d9d67
  40b378:	add    BYTE PTR [eax],al
  40b37a:	add    DWORD PTR [eax-0x59e94359],esp
  40b380:	scas   eax,DWORD PTR es:[edi]
  40b381:	sbb    BYTE PTR [esi],0xa1
  40b384:	mov    BYTE PTR [esi-0x7c5b79f2],cl
  40b38a:	lock mov dl,0x97
  40b38d:	xchg   ebp,ebp
  40b38f:	mov    ch,0xd1
  40b391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b392:	jmp    0xfed93540
  40b397:	scas   eax,DWORD PTR es:[edi]
  40b398:	mov    fs,WORD PTR [ecx-0x636c6442]
  40b39e:	aaa    
  40b39f:	loopne 0x40b36c
  40b3a1:	mov    al,ds:0x1ca67
  40b3a6:	aaa    
  40b3a7:	mov    edx,0xd125170e
  40b3ac:	aaa    
  40b3ad:	sbb    DWORD PTR [edi],ebp
  40b3af:	ficom  DWORD PTR [ecx]
  40b3b1:	pop    ds
  40b3b2:	das    
  40b3b3:	retf   
  40b3b4:	add    DWORD PTR [eax],eax
  40b3b6:	aaa    
  40b3b7:	add    bh,BYTE PTR [ebx+0x7c]
  40b3ba:	mov    al,ds:0xad6c7126
  40b3bf:	adc    DWORD PTR [ecx+0x7b],edx
  40b3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3c3:	xor    ebp,DWORD PTR [edi+0x65]
  40b3c6:	lahf   
  40b3c7:	and    ebp,DWORD PTR [esi+0x56]
  40b3ca:	jne    0x40b3fb
  40b3cc:	push   0x6b
  40b3ce:	mov    dh,BYTE PTR [ebx]
  40b3d0:	imul   esi,DWORD PTR [esi+0x54],0x8c766e0c
  40b3d7:	jp     0x40b415
  40b3d9:	pop    edi
  40b3da:	jle    0x40b3c9
  40b3dc:	pop    esi
  40b3dd:	dec    esp
  40b3de:	add    BYTE PTR [eax],al
  40b3e0:	or     DWORD PTR [ebx-0x3292aeaf],0x26370001
  40b3ea:	add    cl,BYTE PTR ds:0xbffd340
  40b3f0:	or     BYTE PTR [ebx-0x3ac8ffff],ah
  40b3f6:	adc    ebx,DWORD PTR [esi]
  40b3f8:	sbb    edi,DWORD PTR [eax-0x29c8e0f2]
  40b3fe:	pop    es
  40b3ff:	or     al,0x48
  40b401:	(bad)  
  40b402:	std    
  40b403:	sbb    ebp,DWORD PTR ds:0x370b1de9
  40b409:	(bad)  
  40b40b:	adc    al,0x3f
  40b40d:	(bad)  
  40b40f:	and    eax,0x1afadf45
  40b414:	xor    ch,bl
  40b416:	adc    eax,0x1933e406
  40b41b:	(bad)  
  40b41c:	cmp    bl,BYTE PTR [edi]
  40b41e:	pop    es
  40b41f:	sub    eax,0xef7fd18
  40b424:	sbb    DWORD PTR [edx],edx
  40b426:	sbb    ebx,DWORD PTR [ebx]
  40b428:	or     al,0x9
  40b42a:	or     eax,DWORD PTR ds:0x300c0f20
  40b430:	pop    ds
  40b431:	xor    al,0x52
  40b433:	scas   eax,DWORD PTR es:[edi]
  40b434:	mov    ?,WORD PTR [eax+esi*2-0x21]
  40b438:	cdq    
  40b439:	mov    ecx,DWORD PTR [ebp-0x5a]
  40b43c:	xor    BYTE PTR [ebx+0x6888570f],bh
  40b442:	and    BYTE PTR [ecx+0x0],dl
  40b445:	add    BYTE PTR [eax+0x5d],dh
  40b448:	push   DWORD PTR [eax+0x7f]
  40b44b:	addr16 sub eax,0x2d5f794b
  40b451:	push   edx
  40b452:	adc    BYTE PTR [ebp+0x29],0x4e
  40b456:	outs   dx,DWORD PTR ds:[esi]
  40b457:	pop    edx
  40b458:	sbb    eax,0xca346249
  40b45d:	push   ecx
  40b45e:	mov    ch,BYTE PTR [esp+edx*8+0x5b]
  40b462:	imul   ecx,DWORD PTR [esi-0x55],0x54
  40b466:	arpl   WORD PTR [ecx-0x33],ax
  40b469:	add    esi,DWORD PTR [edi]
  40b46b:	xor    al,0x7a
  40b46d:	mov    dh,0xb0
  40b46f:	sbb    DWORD PTR [ebx-0x4b],0xe9809085
  40b476:	ror    DWORD PTR [ecx+0x7e7aa670],1
  40b47c:	pop    ecx
  40b47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b47e:	lods   eax,DWORD PTR ds:[esi]
  40b47f:	xchg   edx,eax
  40b480:	inc    esi
  40b481:	mov    ah,0xd5
  40b483:	pop    DWORD PTR [ecx-0x5f]
  40b486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b487:	jg     0x40b4dc
  40b489:	mov    eax,0x826d8bdc
  40b48e:	adc    dl,dh
  40b490:	lds    esi,FWORD PTR cs:[ebp-0x10]
  40b494:	add    BYTE PTR [ebp-0x40],dl
  40b497:	not    ch
  40b499:	pop    es
  40b49a:	xchg   esp,eax
  40b49b:	sahf   
  40b49c:	cdq    
  40b49d:	jnp    0x40b45e
  40b49f:	mov    WORD PTR [eax+ebp*2-0x4b275e40],es
  40b4a6:	(bad)  
  40b4a7:	test   eax,0x5d91
  40b4ac:	ficomp DWORD PTR [esi-0x3cb16f76]
  40b4b2:	jecxz  0x40b46c
  40b4b4:	inc    ecx
  40b4b5:	(bad)  
  40b4b6:	lock mov BYTE PTR [ecx-0x32],dl
  40b4ba:	jmp    0xa8d0507e
  40b4bf:	dec    edi
  40b4c0:	loopne 0x40b449
  40b4c2:	xchg   edi,eax
  40b4c3:	xor    BYTE PTR [ebx],0x34
  40b4c6:	add    DWORD PTR [ebx-0x520925e2],ebx
  40b4cc:	and    eax,0xd990e3c7
  40b4d1:	mov    ah,dl
  40b4d3:	(bad)  
  40b4d4:	sbb    DWORD PTR [eax+0x7f068ce5],edi
  40b4da:	cmc    
  40b4db:	ins    DWORD PTR es:[edi],dx
  40b4dc:	push   es
  40b4dd:	mov    esp,0xb7ab63f7
  40b4e2:	icebp  
  40b4e3:	push   ebp
  40b4e4:	loop   0x40b4af
  40b4e6:	sti    
  40b4e7:	dec    esp
  40b4e8:	hlt    
  40b4e9:	call   0xe7dce9b1
  40b4ee:	shl    BYTE PTR [ebp+esi*4-0x58],cl
  40b4f2:	pushf  
  40b4f3:	imul   esp,DWORD PTR [edx-0x11d45d6b],0xffffffe9
  40b4fa:	(bad)  
  40b4fb:	cmp    eax,0x40d3f6f5
  40b500:	leave  
  40b501:	call   0x4dd7:0xea8430cc
  40b508:	ror    dh,1
  40b50a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b50b:	rcr    BYTE PTR ds:[ecx+0xb2],1
  40b512:	push   ds
  40b513:	nop
  40b514:	fwait
  40b515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b516:	dec    eax
  40b517:	mov    ch,BYTE PTR [edi+eiz*4-0x48057812]
  40b51e:	dec    edx
  40b51f:	xor    DWORD PTR [edi-0x16b6b47],0xfffffff0
  40b526:	push   ebp
  40b527:	mov    DWORD PTR [ebp-0x364a1d4c],esi
  40b52d:	fistp  WORD PTR [eax-0x3b6c6e23]
  40b533:	test   al,0xaf
  40b535:	pushf  
  40b536:	xlat   BYTE PTR ds:[ebx]
  40b537:	cmp    DWORD PTR [edi-0x72535c40],ecx
  40b53d:	xchg   edi,eax
  40b53e:	shl    BYTE PTR [ebp+edx*4-0x781a5f7c],1
  40b545:	popf   
  40b546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b547:	mov    eax,ds:0x55388ea3
  40b54c:	jae    0x40b5bb
  40b54e:	sbb    ecx,DWORD PTR [edi+ebx*2+0x6d]
  40b552:	inc    eax
  40b553:	inc    edx
  40b554:	imul   ebp,DWORD PTR [eax-0x19],0x6e280e
  40b55b:	dec    ebx
  40b55c:	addr16 jno 0x40b523
  40b55f:	pop    ss
  40b560:	sbb    eax,0x7954041a
  40b565:	outs   dx,BYTE PTR ds:[esi]
  40b566:	xchg   edx,eax
  40b567:	pop    edx
  40b568:	push   0x7d
  40b56a:	(bad)  
  40b56b:	mov    dh,0x6
  40b56d:	push   edi
  40b56e:	nop
  40b56f:	outs   dx,DWORD PTR ds:[esi]
  40b570:	push   ebp
  40b571:	push   edx
  40b572:	mov    al,ds:0x2556a
  40b577:	add    BYTE PTR [edx-0x9b9a603],ch
  40b57d:	je     0x40b5dc
  40b57f:	push   ecx
  40b580:	xchg   edx,eax
  40b581:	ins    DWORD PTR es:[edi],dx
  40b582:	pop    esi
  40b583:	push   edi
  40b584:	mov    esi,0xe8445565
  40b589:	pushw  ss
  40b58b:	dec    ebx
  40b58c:	aaa    
  40b58d:	repnz sbb al,0x32
  40b590:	cmp    al,0x77
  40b592:	sbb    eax,0x5fa05a22
  40b597:	ins    DWORD PTR es:[edi],dx
  40b598:	pop    ebp
  40b599:	in     eax,0x23
  40b59b:	cmp    dl,BYTE PTR [edx+0x41]
  40b59e:	popa   
  40b59f:	pop    eax
  40b5a0:	f2xm1  
  40b5a2:	and    al,0x34
  40b5a4:	adc    eax,0x2e2f1bcb
  40b5a9:	sbb    BYTE PTR [ebx+0x7b],dh
  40b5ac:	or     al,0xcd
  40b5ae:	push   es
  40b5af:	adc    BYTE PTR [ecx-0x2b],al
  40b5b2:	adc    ebx,DWORD PTR [eax]
  40b5b4:	add    ebx,edx
  40b5b6:	cld    
  40b5b7:	push   ds
  40b5b8:	xor    eax,0x2d1c0abf
  40b5bd:	in     eax,0xc
  40b5bf:	add    DWORD PTR [eiz*8+0x314a020d],ecx
  40b5c6:	clc    
  40b5c7:	push   cs
  40b5c8:	dec    esi
  40b5c9:	je     0x40b622
  40b5cb:	pop    ecx
  40b5cc:	inc    ecx
  40b5cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ce:	(bad)  
  40b5d0:	push   ss
  40b5d1:	je     0x40b57d
  40b5d3:	mov    edi,DWORD PTR [ebp+0x9e7edb3]
  40b5d9:	mov    ds:0xfaea,al
  40b5de:	adc    bh,BYTE PTR ds:0x4010b6af
  40b5e4:	repnz jecxz 0x40b5bc
  40b5e7:	push   edi
  40b5e8:	fninit 
  40b5ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5eb:	imul   ebp,eax,0xd665e9ea
  40b5f1:	iret   
  40b5f2:	icebp  
  40b5f3:	pop    ss
  40b5f4:	mov    eax,0xc507d0d4
  40b5f9:	(bad)  
  40b5fb:	add    eax,0x64f2dacc
  40b600:	(bad)  
  40b601:	(bad)  
  40b603:	adc    esi,ebx
  40b605:	fst    QWORD PTR [ecx-0x3636bbcc]
  40b60b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b60c:	adc    al,0x88
  40b60f:	loopne 0x40b66c
  40b611:	mov    eax,ds:0xbc1db78c
  40b616:	nop
  40b617:	mov    bh,0xa8
  40b619:	jb     0x40b62b
  40b61b:	cmp    ch,al
  40b61d:	add    esi,DWORD PTR [edi]
  40b61f:	xor    al,0x4d
  40b621:	mov    ?,WORD PTR [edx+ebp*4-0x4d2d839d]
  40b628:	jns    0x40b5ad
  40b62a:	push   0x95ae7db7
  40b62f:	mov    ecx,DWORD PTR [edx-0x6537745c]
  40b635:	add    esi,DWORD PTR [edi]
  40b637:	xor    al,0xa0
  40b639:	enter  0xe973,0xa4
  40b63d:	ret    0xd86d
  40b640:	gs mov ebx,0xea6c0000
  40b646:	out    0x3,eax
  40b648:	aaa    
  40b649:	xor    al,0xb2
  40b64b:	mov    esi,0xd374e600
  40b650:	out    dx,al
  40b651:	xor    esi,edx
  40b653:	sub    cl,BYTE PTR [eax-0x7]
  40b656:	into   
  40b657:	sub    eax,0x34e12847
  40b65c:	pop    eax
  40b65d:	std    
  40b65e:	mov    esp,0xaa345636
  40b663:	(bad)  
  40b664:	adc    BYTE PTR [edi+0x78],dh
  40b667:	(bad)  
  40b669:	jp     0x40b652
  40b66b:	add    esi,DWORD PTR [edi]
  40b66d:	xor    al,0x53
  40b66f:	cmc    
  40b670:	jmp    0x40b635
  40b672:	pop    edi
  40b673:	sub    al,0xa9
  40b676:	pop    ebp
  40b677:	int3   
  40b678:	mov    edi,0xbb8d6699
  40b67d:	sar    BYTE PTR [edi],cl
  40b67f:	lods   al,BYTE PTR ds:[esi]
  40b680:	jge    0x40b6b5
  40b682:	add    DWORD PTR [ecx+0x38],ebx
  40b685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b686:	sti    
  40b687:	ja     0x40b667
  40b689:	xchg   ebx,eax
  40b68a:	mov    esp,0x134344d
  40b68f:	xor    eax,0xcc0db8b
  40b694:	mov    eax,ds:0x9bfeece3
  40b699:	leave  
  40b69a:	stc    
  40b69b:	cs popf 
  40b69d:	mov    eax,0xb68f02e2
  40b6a2:	std    
  40b6a3:	js     0x40b6ab
  40b6a5:	cmp    BYTE PTR [ecx+ebp*4+0x0],ah
  40b6a9:	add    BYTE PTR [edx+edx*2],al
  40b6ac:	push   ebp
  40b6ad:	inc    edx
  40b6ae:	hlt    
  40b6af:	pop    esp
  40b6b0:	add    DWORD PTR [esi-0x49],esp
  40b6b3:	lods   al,BYTE PTR ds:[esi]
  40b6b4:	test   DWORD PTR [edi+0x7ca2a295],ebx
  40b6ba:	mov    al,BYTE PTR [ebp-0x12754d00]
  40b6c0:	faddp  st(2),st
  40b6c2:	pusha  
  40b6c3:	in     al,0xfc
  40b6c5:	mov    dh,0x45
  40b6c7:	loopne 0x40b6c7
  40b6c9:	(bad)  
  40b6cc:	lock lea ebx,[edx*8+0x343b96fb]
  40b6d4:	add    DWORD PTR [ebx],edi
  40b6d6:	pop    esp
  40b6d7:	push   0x2124e548
  40b6dc:	add    esp,eax
  40b6de:	push   esp
  40b6df:	adc    DWORD PTR [edi],esp
  40b6e1:	retf   
  40b6e2:	bound  edi,QWORD PTR [eax]
  40b6e4:	jl     0x40b6cf
  40b6e6:	xor    al,0x34
  40b6e8:	add    edi,eax
  40b6ea:	and    esp,edi
  40b6ec:	cmp    ebp,DWORD PTR [edx+edi*2+0x34e9596e]
  40b6f3:	xor    al,0x1
  40b6f5:	fwait
  40b6f6:	mov    ah,0xb0
  40b6f8:	cwde   
  40b6f9:	jno    0x40b6b2
  40b6fb:	cdq    
  40b6fc:	mov    es,WORD PTR [eax]
  40b6fe:	push   esp
  40b6ff:	cmp    cl,BYTE PTR [esi+0x1305f97]
  40b705:	add    BYTE PTR [esp+edi*1-0x76],al
  40b709:	mov    es,WORD PTR [eax]
  40b70b:	cmp    BYTE PTR [edx+0x8000000],bl
  40b711:	mov    al,ds:0x318e898e
  40b716:	add    DWORD PTR [eax],eax
  40b718:	mov    BYTE PTR [esi],dl
  40b71a:	sub    BYTE PTR [edx],dh
  40b71c:	jp     0x40b739
  40b71e:	outs   dx,DWORD PTR ss:[esi]
  40b720:	xchg   edi,eax
  40b721:	add    al,0x3e
  40b723:	sub    ecx,DWORD PTR [esi-0x46fffecf]
  40b729:	daa    
  40b72a:	sbb    DWORD PTR [ebx],eax
  40b72c:	mov    ebp,DWORD PTR [edx]
  40b72e:	pop    es
  40b72f:	pop    esi
  40b730:	dec    esi
  40b731:	sub    BYTE PTR [ecx],dl
  40b733:	sbb    BYTE PTR [edx+0x20],dl
  40b736:	add    DWORD PTR [eax],eax
  40b738:	jle    0x40b701
  40b73a:	loope  0x40b73a
  40b73c:	cmp    BYTE PTR [esi-0x7124ff10],0xaf
  40b743:	mov    esp,0xa4af7fb8
  40b748:	jp     0x40b6f6
  40b74a:	mov    ah,0xb9
  40b74c:	lods   al,BYTE PTR ds:[esi]
  40b74d:	mov    DWORD PTR [ebx+0x13178b0],esi
  40b753:	add    BYTE PTR [ebx],bh
  40b755:	cmc    
  40b756:	add    DWORD PTR [edx+0x49],esp
  40b759:	sti    
  40b75a:	inc    ecx
  40b75b:	dec    ebp
  40b75c:	xor    esi,DWORD PTR [eax+0x43]
  40b75f:	or     cl,BYTE PTR ds:0x57404cf9
  40b765:	xor    BYTE PTR [ecx],al
  40b767:	add    BYTE PTR [eax+0x50],dl
  40b76a:	sub    DWORD PTR [ecx-0xe],ecx
  40b76d:	push   edx
  40b76e:	imul   esp,DWORD PTR [esi-0x8],0x216855
  40b775:	add    dh,dh
  40b777:	dec    ebp
  40b778:	imul   si,WORD PTR [edi],0xffd9
  40b77c:	adc    eax,0x1cb3118
  40b781:	add    BYTE PTR [edi],dh
  40b783:	aam    0xfc
  40b785:	inc    eax
  40b787:	out    0x68,eax
  40b789:	add    DWORD PTR [eax],eax
  40b78b:	mov    dh,0x1
  40b78d:	add    BYTE PTR [edi],dh
  40b78f:	jno    0x40b771
  40b791:	jecxz  0x40b72c
  40b793:	sbb    ebx,ebx
  40b795:	lock mov ds:0x370001ca,al
  40b79b:	sub    al,dl
  40b79d:	ret    0xfc7b
  40b7a0:	(bad)  
  40b7a1:	mov    BYTE PTR [edi+0x72c6ba06],dl
  40b7a7:	or     eax,0xae37cac5
  40b7ac:	xor    eax,0x4aa0ff4f
  40b7b1:	add    eax,0x4b4102db
  40b7b6:	test   BYTE PTR [ecx],0x36
  40b7b9:	inc    edi
  40b7ba:	cmp    al,0xbd
  40b7bc:	dec    edi
  40b7bd:	pop    eax
  40b7be:	out    dx,eax
  40b7bf:	(bad)  
  40b7c0:	aaa    
  40b7c1:	push   ecx
  40b7c2:	cli    
  40b7c3:	std    
  40b7c4:	cs ds aaa 
  40b7c7:	outs   dx,BYTE PTR ds:[esi]
  40b7c8:	pop    esi
  40b7c9:	arpl   WORD PTR [eax+ebp*2+0x72b06066],di
  40b7d0:	pop    esi
  40b7d1:	jns    0x40b832
  40b7d3:	popf   
  40b7d4:	add    DWORD PTR [eax],eax
  40b7d6:	aaa    
  40b7d7:	nop
  40b7d8:	and    DWORD PTR [ebx],esp
  40b7da:	add    BYTE PTR [eax],al
  40b7dc:	push   ecx
  40b7dd:	ins    BYTE PTR es:[edi],dx
  40b7de:	adc    al,BYTE PTR [esi]
  40b7e0:	cmp    DWORD PTR [eax-0x72c2eef6],ebp
  40b7e6:	or     al,0x1a
  40b7e8:	xor    DWORD PTR [ecx+0x547108fc],esp
  40b7ee:	dec    BYTE PTR [esi+esi*1]
  40b7f1:	lahf   
  40b7f2:	stc    
  40b7f3:	or     DWORD PTR ds:0x6c55a834,edi
  40b7f9:	add    esp,esi
  40b7fb:	dec    ecx
  40b7fc:	aaa    
  40b7fd:	xor    al,0x78
  40b7ff:	ja     0x40b7c3
  40b801:	mov    edi,0xdf9da84b
  40b806:	jg     0x40b7b8
  40b808:	jl     0x40b7e5
  40b80a:	jl     0x40b7be
  40b80c:	adc    edi,0xa5d4a288
  40b812:	cmp    ebp,DWORD PTR [ebx+ebp*8-0x2a66a622]
  40b819:	loop   0x40b863
  40b81b:	in     al,dx
  40b81c:	xchg   esp,eax
  40b81d:	xchg   esi,eax
  40b81e:	(bad)  
  40b81f:	int    0x6a
  40b821:	(bad)  
  40b822:	pop    ebx
  40b823:	mov    BYTE PTR [ebx+0x8a6ec0],bh
  40b829:	retf   
  40b82a:	xor    cl,dl
  40b82c:	gs mov eax,0xb370e521
  40b832:	sub    bl,dl
  40b834:	xchg   BYTE PTR [ebx-0x78863e4c],al
  40b83a:	test   al,0xc1
  40b83c:	je     0x40b7f6
  40b83e:	mov    ebx,0x6f000083
  40b843:	mov    WORD PTR [esi-0x526f9b79],fs
  40b849:	retf   
  40b84a:	popf   
  40b84b:	jbe    0x40b7fe
  40b84d:	into   
  40b84e:	pop    ecx
  40b84f:	mov    DWORD PTR [esi-0x3c71f12b],edx
  40b855:	add    esi,DWORD PTR [edi]
  40b857:	xor    al,0x60
  40b859:	mov    bh,0xc0
  40b85b:	shl    edi,cl
  40b85d:	add    esi,DWORD PTR [edi]
  40b85f:	xor    al,0xc8
  40b861:	add    al,0x37
  40b863:	cmp    esi,ebp
  40b865:	adc    edi,DWORD PTR [ebp+0x57]
  40b868:	out    dx,eax
  40b869:	cld    
  40b86a:	xor    al,0x42
  40b86c:	in     al,0x5
  40b86e:	das    
  40b86f:	or     BYTE PTR [ecx],al
  40b871:	sbb    BYTE PTR [esi+0x3d],al
  40b874:	sbb    ah,ah
  40b876:	jl     0x40b883
  40b878:	adc    eax,DWORD PTR ds:0xf01a4b2d
  40b87e:	sub    eax,0x34e97526
  40b883:	xor    al,0x1
  40b885:	int    0x65
  40b887:	pop    es
  40b888:	dec    ecx
  40b889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b88a:	jo     0x40b88d
  40b88c:	adc    al,0xca
  40b88e:	(bad)  
  40b88f:	clc    
  40b890:	dec    edi
  40b891:	loopne 0x40b8dd
  40b893:	dec    eax
  40b894:	inc    edx
  40b895:	or     edx,DWORD PTR [edi+0x34]
  40b898:	add    DWORD PTR [ebx],edx
  40b89a:	xchg   ebp,eax
  40b89b:	mov    esp,0xba206883
  40b8a0:	mov    BYTE PTR [edi+0x6d],ch
  40b8a3:	mov    dl,0xfd
  40b8a5:	test   BYTE PTR [eax],al
  40b8a7:	add    BYTE PTR [ebx],bh
  40b8a9:	aaa    
  40b8aa:	push   es
  40b8ab:	in     al,dx
  40b8ac:	adc    DWORD PTR [eax+0x7],0x134348c
  40b8b3:	popa   
  40b8b4:	push   esi
  40b8b5:	lahf   
  40b8b6:	out    dx,eax
  40b8b7:	sti    
  40b8b8:	pop    edi
  40b8b9:	rol    BYTE PTR [eax],0x59
  40b8bc:	inc    eax
  40b8bd:	es and al,0x42
  40b8c0:	xor    eax,0x2911356a
  40b8c5:	outs   dx,BYTE PTR ds:[esi]
  40b8c6:	sub    eax,0x831db4a
  40b8cb:	sub    ch,BYTE PTR ss:[eax+0x22]
  40b8cf:	cli    
  40b8d0:	aam    0x5d
  40b8d2:	sub    eax,0x756d63f4
  40b8d7:	inc    eax
  40b8d8:	mov    gs,WORD PTR [ecx+eax*2+0x39]
  40b8dc:	and    BYTE PTR [ebx+0x38],bl
  40b8df:	retf   
  40b8e0:	cmp    BYTE PTR ds:0x500cf517,al
  40b8e6:	inc    ebp
  40b8e7:	sbb    al,BYTE PTR [ebp+0xe002812]
  40b8ed:	add    DWORD PTR ss:[eax],eax
  40b8f0:	rcr    BYTE PTR [ebp+0x3b],0x3a
  40b8f4:	hlt    
  40b8f5:	pop    edx
  40b8f6:	aas    
  40b8f7:	and    eax,0x135aa
  40b8fc:	gs ret 
  40b8fe:	mov    bl,cl
  40b900:	into   
  40b901:	xor    eax,0x294a0001
  40b906:	xchg   BYTE PTR [eax],al
  40b908:	mov    cl,0xa8
  40b90a:	mov    bh,0xae
  40b90c:	add    BYTE PTR [eax],al
  40b90e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b90f:	(bad)  
  40b910:	idiv   BYTE PTR [edi-0x533a5f57]
  40b916:	imul   ebx,eax,0xfffffffd
  40b919:	jmp    FWORD PTR [eax]
  40b91b:	fisubr DWORD PTR [eax-0x1d30b28]
  40b921:	inc    esi
  40b923:	pop    ss
  40b924:	outs   dx,DWORD PTR ds:[esi]
  40b925:	pop    ds
  40b926:	mov    ebp,DWORD PTR [ecx+0x1]
  40b929:	add    BYTE PTR [eax-0x13],al
  40b92c:	(bad)
  40b92f:	les    edx,FWORD PTR [esi-0x23fac64]
  40b935:	jmp    FWORD PTR [ebp+edi*2-0x2b]
  40b939:	aam    0x4e
  40b93b:	jl     0x40b92b
  40b93d:	xchg   edi,eax
  40b93e:	jmp    0x40b970
  40b940:	out    0x9b,eax
  40b942:	out    0xb4,eax
  40b944:	loop   0x40b8e5
  40b946:	sar    DWORD PTR [eax-0x658fff02],cl
  40b94c:	lock add BYTE PTR [ecx],al
  40b94f:	push   cs
  40b950:	fs ins BYTE PTR es:[edi],dx
  40b952:	std    
  40b953:	aaa    
  40b954:	add    DWORD PTR [eax],eax
  40b956:	add    eax,0xb021737
  40b95b:	imul   eax,DWORD PTR [ecx],0xafe08b00
  40b961:	rep ins BYTE PTR es:[edi],dx
  40b963:	int    0xbb
  40b965:	mov    bh,0x37
  40b967:	ret    
  40b968:	add    DWORD PTR [eax],eax
  40b96a:	aaa    
  40b96b:	outs   dx,BYTE PTR ds:[esi]
  40b96c:	push   ebx
  40b96d:	push   esi
  40b96e:	jns    0x40b9c4
  40b970:	inc    eax
  40b971:	sub    al,0x0
  40b973:	add    BYTE PTR [eax-0x10],al
  40b976:	aaa    
  40b977:	adc    BYTE PTR [eax+0x606d6939],al
  40b97d:	in     eax,0x24
  40b97f:	daa    
  40b980:	xchg   DWORD PTR [ebx+0x2c370001],ebx
  40b986:	mov    esp,0x785da58a
  40b98b:	xchg   ecx,eax
  40b98c:	hlt    
  40b98d:	pop    edi
  40b98e:	mov    ebp,0x8011b5d5
  40b993:	(bad)  
  40b994:	mov    eax,0xfe7f42db
  40b999:	xlat   BYTE PTR ds:[ebx]
  40b99a:	add    DWORD PTR [eax],eax
  40b99c:	aaa    
  40b99d:	aad    0x39
  40b99f:	jae    0x40b9b2
  40b9a1:	mov    edi,0x64370001
  40b9a6:	into   
  40b9a7:	(bad)  
  40b9a8:	gs jo  0x40b92f
  40b9ab:	xchg   DWORD PTR [esi+0x6fcd7f1d],edi
  40b9b1:	push   0x4c6bc9f3
  40b9b6:	test   DWORD PTR [ecx-0x2e74e145],ecx
  40b9bc:	add    DWORD PTR [ebp+edi*2-0x7f],0xffffffb3
  40b9c1:	es xchg ebx,eax
  40b9c3:	(bad)  [edx-0x75]
  40b9c6:	call   0x45e7:0xd97a67bd
  40b9cd:	out    dx,al
  40b9ce:	shl    bl,0x52
  40b9d1:	jl     0x40b9b5
  40b9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d4:	aaa    
  40b9d5:	or     DWORD PTR [ecx-0x2effff59],edx
  40b9db:	add    eax,DWORD PTR ds:0x740b3700
  40b9e1:	mov    ebp,DWORD PTR [esi+0x5bf7534]
  40b9e7:	sub    DWORD PTR [eax-0x72],0xffffffa5
  40b9eb:	mov    eax,0xb5ae926b
  40b9f0:	outs   dx,DWORD PTR ds:[esi]
  40b9f1:	xchg   edx,eax
  40b9f2:	lods   eax,DWORD PTR ds:[esi]
  40b9f3:	mov    dh,0x63
  40b9f5:	test   esi,esi
  40b9f7:	ja     0x40b9a5
  40b9f9:	mov    ds:0x8265c9cb,al
  40b9fe:	mov    esi,0x9fac3ac5
  40ba03:	loope  0x40b9a3
  40ba05:	mov    ah,0xa6
  40ba07:	mov    ds:0xae8ab38f,al
  40ba0c:	xchg   esi,eax
  40ba0d:	stos   DWORD PTR es:[edi],eax
  40ba0e:	cwde   
  40ba0f:	in     al,0x99
  40ba11:	lock (bad) 
  40ba13:	loope  0x40b99d
  40ba15:	mov    ds:0x7a8bd88b,al
  40ba1a:	aam    0xb0
  40ba1c:	inc    ebx
  40ba1d:	add    al,0x37
  40ba1f:	xor    al,0xdd
  40ba21:	add    esi,DWORD PTR [edi]
  40ba23:	xor    al,0xaf
  40ba25:	add    edx,DWORD PTR ds:[eax+ebp*8+0x3]
  40ba2a:	aaa    
  40ba2b:	xor    al,0xb8
  40ba2d:	xor    al,0xe4
  40ba2f:	pop    es
  40ba30:	enter  0x3703,0x34
  40ba34:	or     al,0xd7
  40ba36:	div    BYTE PTR [ebx]
  40ba38:	inc    ecx
  40ba39:	in     al,dx
  40ba3a:	div    BYTE PTR [ebx]
  40ba3c:	popf   
  40ba3d:	js     0x40ba3f
  40ba3f:	add    BYTE PTR [ebx+esi*4-0x5],bl
  40ba43:	or     esi,DWORD PTR [edx+0x5853cff9]
  40ba49:	dec    ecx
  40ba4a:	loopne 0x40ba5d
  40ba4c:	div    DWORD PTR [ebx]
  40ba4e:	gs ds dec edi
  40ba51:	add    al,0x5d
  40ba53:	ds dec edi
  40ba55:	add    al,0xc7
  40ba57:	push   cs
  40ba58:	inc    ebx
  40ba59:	inc    edx
  40ba5a:	sub    BYTE PTR [edx+eax*8],al
  40ba5d:	clc    
  40ba5e:	add    BYTE PTR [ecx-0x16fecaf4],dh
  40ba64:	xor    al,0x7d
  40ba66:	shl    DWORD PTR [edx+0x1c],0xba
  40ba6a:	inc    eax
  40ba6b:	in     eax,0x6e
  40ba6d:	xor    al,0x80
  40ba6f:	test   al,0x34
  40ba71:	mov    ah,0xbf
  40ba73:	ret    
  40ba74:	pop    esp
  40ba75:	mov    ah,0x96
  40ba77:	popa   
  40ba78:	xor    al,0x49
  40ba7a:	and    BYTE PTR [edi],ch
  40ba7c:	push   ebp
  40ba7d:	scas   al,BYTE PTR es:[edi]
  40ba7e:	push   eax
  40ba7f:	sbb    BYTE PTR [ebx],cl
  40ba81:	jge    0x40ba4f
  40ba83:	jmp    0x40bab9
  40ba85:	jae    0x40badd
  40ba87:	mov    esi,0x57ce8e3
  40ba8c:	iret   
  40ba8d:	mov    ecx,0xb7c89274
  40ba92:	not    ch
  40ba94:	mov    edi,0x3483de96
  40ba99:	xor    al,0x57
  40ba9b:	push   ecx
  40ba9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba9d:	or     eax,DWORD PTR [ecx]
  40ba9f:	jmp    0xe5facd5b
  40baa4:	add    BYTE PTR [eax],al
  40baa6:	xor    al,0x63
  40baa8:	ror    DWORD PTR [edi-0xa860ce3],0xfb
  40baaf:	or     eax,0x934edc3
  40bab4:	mov    bh,ch
  40bab6:	mov    dh,0x9a
  40bab8:	clc    
  40bab9:	jmp    0x9792eef2
  40babe:	add    eax,ecx
  40bac0:	inc    ebx
  40bac1:	xor    DWORD PTR [esi+esi*2],eax
  40bac4:	inc    ebx
  40bac5:	repnz xor eax,0x3307899c
  40bacb:	xor    al,0x8c
  40bacd:	push   esp
  40bace:	addr16 xchg esi,eax
  40bad0:	adc    esp,ebp
  40bad2:	xor    esi,DWORD PTR [edx+eax*4]
  40bad5:	inc    esp
  40bad6:	jg     0x40ba86
  40bad8:	mov    al,BYTE PTR [eax]
  40bada:	nop
  40badb:	jp     0x40bb21
  40badd:	int3   
  40bade:	mov    dh,0xa
  40bae0:	inc    ecx
  40bae1:	add    dh,dh
  40bae3:	push   eax
  40bae4:	(bad)  
  40bae5:	add    BYTE PTR [esi],cl
  40bae7:	mov    edi,0xf5a3085c
  40baec:	adc    al,0x89
  40baee:	pop    ebx
  40baef:	cwde   
  40baf0:	mov    WORD PTR [ebx+0x1a],es
  40baf3:	jl     0x40bb39
  40baf5:	in     al,dx
  40baf6:	push   cs
  40baf7:	jnp    0x40bb3d
  40baf9:	hlt    
  40bafa:	mov    bh,0x5
  40bafc:	inc    ecx
  40bafd:	add    BYTE PTR [edi-0x5],ah
  40bb00:	enter  0x1b89,0xa0
  40bb04:	mov    al,BYTE PTR [ebp-0x4a]
  40bb07:	mov    ebp,0x8b2d
  40bb0c:	mov    eax,DWORD PTR [ebp-0x3b228776]
  40bb12:	jns    0x40bb51
  40bb14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb15:	mov    edi,0x8a5bf07c
  40bb1a:	jno    0x40bb5e
  40bb1c:	inc    ebx
  40bb1d:	sti    
  40bb1e:	in     al,0x50
  40bb20:	and    edi,ebx
  40bb22:	les    edx,FWORD PTR [eax+0x76]
  40bb25:	cmp    DWORD PTR [ecx],edx
  40bb27:	add    BYTE PTR [esi-0x710001e7],cl
  40bb2d:	xor    esi,edi
  40bb2f:	ss pop ecx
  40bb31:	sti    
  40bb32:	in     al,0x4
  40bb34:	sahf   
  40bb35:	xor    DWORD PTR [ecx],eax
  40bb37:	dec    DWORD PTR [ebx-0x71bfeb2b]
  40bb3d:	mov    esp,0xc48b75bd
  40bb42:	inc    esp
  40bb43:	(bad)  
  40bb44:	into   
  40bb45:	xchg   edx,eax
  40bb46:	jae    0x40bb4c
  40bb48:	push   ecx
  40bb49:	lods   al,BYTE PTR ds:[esi]
  40bb4a:	sbb    eax,0x84380e12
  40bb4f:	shl    BYTE PTR [ecx-0x44],0xd7
  40bb53:	add    DWORD PTR [edi],esi
  40bb55:	fwait
  40bb56:	add    edi,edi
  40bb58:	retf   0xe9ee
  40bb5b:	sub    al,0x38
  40bb5d:	jbe    0x40bb41
  40bb5f:	mov    bh,BYTE PTR [edx-0x19]
  40bb62:	adc    dh,BYTE PTR [esi-0x17ce1989]
  40bb68:	sub    BYTE PTR [esi],bl
  40bb6a:	add    al,BYTE PTR [eax]
  40bb6c:	mov    bl,0xda
  40bb6e:	pop    eax
  40bb6f:	sbb    BYTE PTR [eax],al
  40bb71:	add    BYTE PTR [ecx+0x3800231a],bl
  40bb77:	pop    ds
  40bb78:	fwait
  40bb79:	add    BYTE PTR [edi],dh
  40bb7b:	fwait
  40bb7c:	push   ss
  40bb7d:	rcl    BYTE PTR [ecx+0x7ac60b24],0xb2
  40bb84:	add    al,0xe9
  40bb86:	sahf   
  40bb87:	fwait
  40bb88:	add    DWORD PTR [eax],eax
  40bb8a:	dec    ebp
  40bb8b:	mov    ebp,ecx
  40bb8d:	jmp    0x85425711
  40bb92:	test   DWORD PTR [esi+0xf7a8afa],0x8e26b613
  40bb9c:	xchg   edi,eax
  40bb9d:	dec    eax
  40bb9e:	mov    eax,0xa78b34c8
  40bba3:	add    ah,BYTE PTR [ecx]
  40bba5:	mov    eax,0xef8e9b37
  40bbaa:	mov    WORD PTR [eax+0x4cb2f616],ds
  40bbb0:	adc    eax,DWORD PTR [edx+edx*1-0x43fffe64]
  40bbb7:	(bad)  
  40bbb8:	mov    ch,0xc5
  40bbba:	cli    
  40bbbb:	inc    eax
  40bbbc:	add    al,BYTE PTR [ebp-0x74d0d188]
  40bbc2:	cmp    BYTE PTR [eax],ah
  40bbc4:	push   ecx
  40bbc5:	fadd   QWORD PTR [esi]
  40bbc7:	into   
  40bbc8:	loop   0x40bc19
  40bbca:	daa    
  40bbcb:	sbb    dl,al
  40bbcd:	je     0x40bc09
  40bbcf:	xor    al,0x4e
  40bbd1:	test   ebx,edx
  40bbd3:	(bad)  
  40bbd4:	ficom  WORD PTR [ecx]
  40bbd6:	add    BYTE PTR [eax],al
  40bbd8:	mov    ds:0xcbc46b73,eax
  40bbdd:	inc    edx
  40bbde:	arpl   WORD PTR [ecx],cx
  40bbe0:	int    0xac
  40bbe2:	push   ds
  40bbe3:	loope  0x40bb65
  40bbe5:	pusha  
  40bbe6:	mov    bh,0xbc
  40bbe8:	dec    esi
  40bbe9:	je     0x40bba0
  40bbeb:	les    edi,FWORD PTR [eax+0x738db1f1]
  40bbf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbf2:	neg    BYTE PTR [eax+0x28f7ec28]
  40bbf8:	aaa    
  40bbf9:	xor    al,0xe
  40bbfb:	sbb    eax,0x9c2026df
  40bc00:	dec    eax
  40bc01:	and    eax,ebp
  40bc03:	add    ebx,DWORD PTR [ecx+0x6f]
  40bc06:	mov    al,ds:0xf61e2959
  40bc0b:	mov    ?,WORD PTR [ebx-0x261e90c6]
  40bc11:	push   ds
  40bc12:	call   0xd1ee9b4a
  40bc17:	add    eax,0xbadbe37
  40bc1c:	mov    ah,0x70
  40bc1e:	fucomi st,st(3)
  40bc20:	out    0xed,al
  40bc22:	out    0x3,eax
  40bc24:	sbb    DWORD PTR [ebp+0x2a],esi
  40bc27:	or     al,0x11
  40bc29:	mov    ebp,0xaba0106c
  40bc2e:	cs push 0xffffffae
  40bc31:	leave  
  40bc32:	cmc    
  40bc33:	loopne 0x40bbc6
  40bc35:	stos   DWORD PTR es:[edi],eax
  40bc36:	ins    BYTE PTR es:[edi],dx
  40bc37:	jg     0x40bc75
  40bc39:	stos   DWORD PTR es:[edi],eax
  40bc3a:	push   ss
  40bc3b:	loope  0x40bc3d
  40bc3d:	add    BYTE PTR [ebp-0x411f008e],ch
  40bc43:	xor    al,0xe8
  40bc45:	xchg   DWORD PTR [eax+0x5f39a621],esi
  40bc4b:	and    eax,DWORD PTR [ecx]
  40bc4d:	xor    bh,BYTE PTR [ebx]
  40bc4f:	xor    al,0x85
  40bc51:	sub    DWORD PTR [eax],eax
  40bc53:	inc    esp
  40bc54:	jmp    0xfdec686d
  40bc59:	aaa    
  40bc5a:	pop    ebx
  40bc5b:	cmc    
  40bc5c:	pop    eax
  40bc5d:	jmp    0xea135996
  40bc62:	xor    al,0x34
  40bc64:	mov    WORD PTR [eax+eax*2-0x55],gs
  40bc68:	std    
  40bc69:	mov    esi,0x70d99c64
  40bc6e:	xor    al,0x34
  40bc70:	test   DWORD PTR [ecx+0x72674480],ebp
  40bc76:	mov    ecx,0x179efe38
  40bc7b:	adc    eax,eax
  40bc7d:	test   eax,0xa9b63b2c
  40bc82:	or     esi,DWORD PTR ds:0xf7c3a932
  40bc88:	lock pop es
  40bc8a:	mov    esp,0x22cc733
  40bc8f:	xor    al,0x8a
  40bc91:	and    al,0xcb
  40bc93:	mov    ebp,0x5abd494b
  40bc98:	mov    ah,BYTE PTR [esp+eiz*8+0x4ee98a10]
  40bc9f:	mov    ebp,0x63ff
  40bca4:	xlat   BYTE PTR ds:[ebx]
  40bca5:	cmp    DWORD PTR [ebp+0x1343474],eax
  40bcab:	jb     0x40bcec
  40bcad:	mov    ecx,0x365114b
  40bcb2:	(bad)  
  40bcb3:	cdq    
  40bcb4:	dec    esp
  40bcb5:	mov    cl,0xc0
  40bcb7:	pushf  
  40bcb8:	mov    BYTE PTR [eax],dl
  40bcba:	sbb    BYTE PTR [esp+ecx*8+0x747d0da9],0x6e
  40bcc2:	add    BYTE PTR [esp+ebp*1-0x3bfffa41],dl
  40bcc9:	ss push esi
  40bccb:	dec    esi
  40bccd:	pop    edx
  40bcce:	mov    al,BYTE PTR [ebp+0x62]
  40bcd1:	cmp    dh,BYTE PTR [edi+0xf029600]
  40bcd7:	dec    eax
  40bcd8:	repz pusha 
  40bcda:	imul   ecx,DWORD PTR [esi],0xffffff91
  40bcdd:	cld    
  40bcde:	in     al,0x11
  40bce0:	dec    esi
  40bce1:	ss add ebx,ebp
  40bce4:	push   edi
  40bce5:	sbb    al,0xc
  40bce7:	(bad)  
  40bce8:	arpl   WORD PTR [ebx+eax*1+0x59361e00],bx
  40bcef:	lea    esp,[ebx-0x28]
  40bcf2:	in     eax,0x53
  40bcf4:	aas    
  40bcf5:	add    DWORD PTR ss:[ebx-0x48f17f9d],ecx
  40bcfc:	push   ds
  40bcfd:	data16 mov al,dh
  40bd00:	ds push ds
  40bd02:	or     eax,0x91135b5b
  40bd07:	call   0xf418bd0c
  40bd0c:	add    BYTE PTR [eax],al
  40bd0e:	pop    ss
  40bd0f:	addr16 test al,al
  40bd12:	call   0xb2b6bbb6
  40bd17:	mov    ebp,0xc2c9f044
  40bd1c:	std    
  40bd1d:	dec    edi
  40bd1e:	inc    ebp
  40bd1f:	jno    0x40bd6e
  40bd21:	lea    edx,[ebx-0x2517b287]
  40bd27:	(bad)  
  40bd29:	jmp    DWORD PTR ds:0xeb80d513
  40bd2f:	mov    edi,ebp
  40bd31:	jae    0x40bcc9
  40bd33:	mov    esi,0x628e6a06
  40bd38:	(bad)  
  40bd39:	push   eax
  40bd3a:	jb     0x40bcfa
  40bd3c:	pop    esp
  40bd3d:	or     BYTE PTR [eax],ch
  40bd3f:	sti    
  40bd40:	in     al,dx
  40bd41:	xor    DWORD PTR [edi],0xffffffd8
  40bd44:	loope  0x40bd47
  40bd46:	mov    ah,0xd0
  40bd48:	aad    0x7
  40bd4a:	mov    ah,0xd8
  40bd4c:	jmp    0xee697454
  40bd51:	add    esi,DWORD PTR [eax]
  40bd53:	sbb    eax,0x9a58fca0
  40bd58:	mov    al,BYTE PTR [ebx+ebp*2+0x18]
  40bd5c:	ret    0x3d73
  40bd5f:	or     dl,BYTE PTR es:[eax+0x40]
  40bd63:	ins    BYTE PTR es:[edi],dx
  40bd64:	or     eax,0x1ded283
  40bd69:	mov    esi,DWORD PTR [edx+eiz*1+0x2]
  40bd70:	aaa    
  40bd71:	ror    DWORD PTR es:[eax+0x42c37f74],cl
  40bd78:	arpl   WORD PTR [ecx+ebp*8+0x19b374f],bx
  40bd7f:	test   bh,dh
  40bd81:	ds (bad) 
  40bd83:	bswap  ecx
  40bd85:	pop    ebp
  40bd86:	sbb    DWORD PTR [ebx+0x4b8c636c],ecx
  40bd8c:	mov    ah,0x8e
  40bd8e:	fild   DWORD PTR [edx+0x23]
  40bd91:	es push ecx
  40bd93:	enter  0x974d,0x37
  40bd97:	mov    esi,DWORD PTR [esi]
  40bd99:	adc    dl,al
  40bd9b:	jae    0x40bdde
  40bd9d:	mov    ds:0x26037293,al
  40bda2:	inc    edx
  40bda3:	add    al,0xae
  40bda5:	(bad)  
  40bda6:	xchg   edx,eax
  40bda7:	sbb    edi,DWORD PTR [ecx+0x768315dd]
  40bdad:	xchg   esi,eax
  40bdae:	inc    edi
  40bdaf:	jne    0x40bd42
  40bdb1:	sbb    ah,BYTE PTR [ecx-0x5]
  40bdb4:	ss call 0x23334ac6
  40bdba:	xor    ch,al
  40bdbc:	inc    ecx
  40bdbd:	xor    al,0xd1
  40bdbf:	add    esi,DWORD PTR [edi]
  40bdc1:	mov    bh,0x94
  40bdc3:	iret   
  40bdc4:	cwde   
  40bdc5:	idiv   DWORD PTR [ebx]
  40bdc7:	add    esi,DWORD PTR [edi]
  40bdc9:	or     DWORD PTR [esi-0x148a81c6],ebp
  40bdcf:	add    eax,DWORD PTR [eax]
  40bdd1:	call   FWORD PTR gs:[ebx]
  40bdd4:	add    BYTE PTR [eax],al
  40bdd6:	loope  0x40bde3
  40bdd8:	jge    0x40bdd2
  40bdda:	add    DWORD PTR [ecx],eax
  40bddc:	xchg   edi,eax
  40bddd:	ss push eax
  40bddf:	ds mov esp,0x713408f2
  40bde5:	inc    esi
  40bde6:	fild   QWORD PTR [edi+ebp*4+0x57]
  40bdea:	xor    esp,DWORD PTR [esi-0x58]
  40bded:	cmp    eax,0x3ce8e4f4
  40bdf2:	hlt    
  40bdf3:	add    DWORD PTR [ebx-0x10],esi
  40bdf6:	mov    ch,0x98
  40bdf8:	or     esi,DWORD PTR [ecx]
  40bdfa:	lods   al,BYTE PTR ds:[esi]
  40bdfb:	mov    WORD PTR [edx+0x41],fs
  40bdfe:	cmp    edi,DWORD PTR [ebp-0xc421bd4]
  40be04:	out    dx,eax
  40be05:	xor    eax,0x8f7ff1ae
  40be0a:	jne    0x40be78
  40be0c:	aaa    
  40be0d:	adc    ecx,ebp
  40be0f:	add    al,0x71
  40be11:	push   edi
  40be12:	or     esi,DWORD PTR [eax+0x24]
  40be15:	call   0x428f251
  40be1a:	scas   al,BYTE PTR es:[edi]
  40be1b:	icebp  
  40be1c:	jnp    0x40bdfb
  40be1e:	sub    ecx,DWORD PTR [ecx+edi*8-0x2b42c8bd]
  40be25:	(bad)  
  40be27:	and    bh,BYTE PTR [esp+ecx*1+0x3e917b1]
  40be2e:	aaa    
  40be2f:	mov    ebx,0xf9bc33aa
  40be34:	aas    
  40be35:	mov    DWORD PTR [esp+edi*4+0x0],esp
  40be39:	das    
  40be3a:	add    BYTE PTR [eax],al
  40be3c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be3e:	add    BYTE PTR [ecx+ebp*2+0x36],ah
  40be42:	test   DWORD PTR [edx+0x72013435],esi
  40be48:	stc    
  40be49:	cmp    eax,DWORD PTR [ecx+ebp*1-0x1694bb21]
  40be50:	and    al,0xa7
  40be52:	adc    edx,DWORD PTR ds:0x64016765
  40be58:	jnp    0x40be90
  40be5a:	test   DWORD PTR [edx+0x27013435],edi
  40be60:	clc    
  40be61:	test   al,0x0
  40be63:	scas   eax,DWORD PTR es:[edi]
  40be64:	icebp  
  40be65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be66:	add    dh,ch
  40be68:	stos   BYTE PTR es:[edi],al
  40be69:	lock std 
  40be6b:	test   al,0x54
  40be6d:	xor    cl,BYTE PTR [edx-0x786bc7b3]
  40be73:	sub    al,0x3
  40be75:	mov    al,0xfd
  40be77:	out    dx,al
  40be78:	mov    eax,0x34e900e8
  40be7d:	aaa    
  40be7e:	mov    bh,0x26
  40be80:	inc    ebx
  40be81:	cld    
  40be82:	je     0x40be7a
  40be84:	jl     0x40bea7
  40be86:	sbb    DWORD PTR [edi],eax
  40be88:	mov    dh,0x28
  40be8a:	push   ebp
  40be8b:	(bad)  
  40be8c:	popa   
  40be8d:	inc    ebp
  40be8e:	mov    WORD PTR [edi],ds
  40be90:	das    
  40be91:	fwait
  40be92:	push   cs
  40be93:	movzx  ebp,BYTE PTR [eax]
  40be96:	inc    ebp
  40be97:	jmp    0x40be22
  40be99:	xor    DWORD PTR [edi+eiz*1-0x45fd6491],ecx
  40bea0:	add    BYTE PTR [eax],al
  40bea2:	std    
  40bea3:	scas   eax,DWORD PTR es:[edi]
  40bea4:	(bad)  
  40bea5:	div    BYTE PTR [eax+0x34e900c4]
  40beab:	aaa    
  40beac:	mov    dh,0xaf
  40beae:	sar    BYTE PTR [ecx+0x264f956],0x50
  40beb5:	add    BYTE PTR ds:0xb575e578,ah
  40bebb:	xor    al,BYTE PTR [ecx]
  40bebd:	test   BYTE PTR [esi-0x1],cl
  40bec0:	or     al,BYTE PTR [ebx-0x3a028185]
  40bec6:	fisttp DWORD PTR [eax-0x78571500]
  40becc:	adc    al,0x0
  40bece:	js     0x40bec2
  40bed0:	add    BYTE PTR [ecx+0x14f9f],bh
  40bed6:	jne    0x40bf49
  40bed8:	jle    0x40bf13
  40beda:	jmp    0x1c99:0xcfc88a63
  40bee1:	daa    
  40bee2:	pop    esi
  40bee3:	xor    dh,BYTE PTR [ebp+0x49]
  40bee6:	fstp   QWORD PTR [eax-0x3b25f0ed]
  40beec:	std    
  40beed:	dec    DWORD PTR [esi-0x53]
  40bef0:	call   0x8a864901
  40bef5:	inc    ebp
  40bef6:	out    dx,al
  40bef7:	cmp    DWORD PTR [edi+0x4dde1b44],esi
  40befd:	call   0x3f44af
  40bf02:	sub    eax,0xfbc598
  40bf07:	add    cl,dl
  40bf09:	mov    esi,edi
  40bf0b:	jae    0x40bf83
  40bf0d:	mov    DWORD PTR [eax+ebp*8],edx
  40bf10:	cld    
  40bf11:	icebp  
  40bf12:	add    bl,ch
  40bf14:	mov    al,0x4c
  40bf16:	inc    edx
  40bf17:	daa    
  40bf18:	fidiv  WORD PTR [ecx]
  40bf1a:	jge    0x40bef6
  40bf1c:	mov    ds:0xce002665,eax
  40bf21:	or     ecx,DWORD PTR [edi]
  40bf23:	cmp    eax,0x15118
  40bf28:	jmp    0x130:0x39513c32
  40bf2f:	jne    0x40bf68
  40bf31:	pop    eax
  40bf32:	test   DWORD PTR [ecx+esi*4-0x65],edi
  40bf36:	push   eax
  40bf37:	or     al,0x71
  40bf39:	fcom   st(7)
  40bf3b:	add    BYTE PTR [esi+0x34eacdd0],ch
  40bf41:	pop    ebp
  40bf42:	inc    eax
  40bf43:	std    
  40bf44:	xchg   ecx,eax
  40bf45:	rcr    dl,1
  40bf47:	jg     0x40bf53
  40bf49:	dec    esi
  40bf4a:	pop    es
  40bf4b:	lgs    esp,FWORD PTR [edi+0x1b78feda]
  40bf52:	pop    eax
  40bf53:	std    
  40bf54:	xor    eax,0xf18af1c0
  40bf59:	mov    ds:0x70ebbf80,al
  40bf5e:	ret    0x2b45
  40bf61:	fisub  WORD PTR [edx]
  40bf63:	add    BYTE PTR [edi],dh
  40bf65:	xor    ch,BYTE PTR [edi]
  40bf67:	or     dl,0x8c
  40bf6a:	add    DWORD PTR [eax+eax*1+0x0],esi
  40bf6e:	or     al,0x1a
  40bf70:	pop    eax
  40bf71:	jo     0x40bfaa
  40bf73:	or     ah,dh
  40bf75:	out    0x2,eax
  40bf77:	cwde   
  40bf78:	add    eax,DWORD PTR [eax]
  40bf7a:	mov    esp,0x728b3559
  40bf7f:	jae    0x40bf07
  40bf81:	and    ebp,DWORD PTR [edi-0x43ec1166]
  40bf87:	dec    esp
  40bf88:	or     eax,0x846f785
  40bf8d:	mov    esi,DWORD PTR [edx-0x41]
  40bf90:	mov    WORD PTR [ebp+0x2b],cs
  40bf93:	imul   ebx,edx,0x14
  40bf96:	fild   QWORD PTR [eax+0x57e80041]
  40bf9c:	fisttp QWORD PTR [edx+0x431eb37a]
  40bfa2:	or     DWORD PTR [esi+0x15d19083],0xffffffdb
  40bfa9:	mov    cl,ah
  40bfab:	xor    edx,DWORD PTR [eax+0x1d]
  40bfae:	ss xor al,0xe8
  40bfb1:	fiadd  DWORD PTR [ebx-0x68]
  40bfb4:	push   esi
  40bfb5:	lock mov WORD PTR [ecx-0x58],es
  40bfb9:	add    ecx,DWORD PTR [eax]
  40bfbb:	push   es
  40bfbc:	mov    ds:0x72fe75cc,eax
  40bfc1:	out    0xb5,eax
  40bfc3:	xchg   edi,eax
  40bfc4:	iret   
  40bfc5:	xor    eax,ebp
  40bfc7:	mov    eax,0x43f58e2f
  40bfcc:	ins    DWORD PTR es:[edi],dx
  40bfcd:	ret    
  40bfce:	xor    DWORD PTR [eax+0x33d],esi
  40bfd4:	aaa    
  40bfd5:	xor    al,0x1e
  40bfd7:	inc    esi
  40bfd8:	dec    esi
  40bfd9:	xor    ebx,edi
  40bfdb:	jg     0x40bf61
  40bfdd:	xor    ebp,eax
  40bfdf:	add    ebp,DWORD PTR [ebp-0x2c791f10]
  40bfe5:	stos   DWORD PTR es:[edi],eax
  40bfe6:	out    0xd9,eax
  40bfe8:	js     0x40bfa5
  40bfea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfeb:	fidivr DWORD PTR [ebx-0x51cbe014]
  40bff1:	out    dx,al
  40bff2:	retf   
  40bff3:	fldenv [ebx]
  40bff5:	mov    ecx,?
  40bff7:	inc    ebx
  40bff8:	aaa    
  40bff9:	mov    bh,0x4e
  40bffb:	xor    BYTE PTR [edi],dh
  40bffd:	xor    ebp,DWORD PTR [esi+0x7b]
  40c000:	and    BYTE PTR [edi+eiz*8+0x6304718c],ah
  40c007:	inc    edi
  40c008:	cmpxchg bl,dh
  40c00b:	mov    edi,DWORD PTR [edi+0xa7f9c29]
  40c011:	sub    DWORD PTR [ecx*4-0x3b92d38e],ebp
  40c018:	fs stc 
  40c01a:	add    DWORD PTR [edi+eax*4],eax
  40c01d:	mov    ds:0xf446e7dc,eax
  40c022:	out    0x7e,eax
  40c024:	cwde   
  40c025:	sub    DWORD PTR [ecx],eax
  40c027:	mov    cl,0xc3
  40c029:	stc    
  40c02a:	jo     0x40c08c
  40c02c:	or     BYTE PTR [ebx+eax*4-0x75ad98d7],ah
  40c033:	xlat   BYTE PTR ds:[ebx]
  40c034:	les    ebp,FWORD PTR [esi+0x5d43]
  40c03a:	mov    edx,0xed5616e3
  40c03f:	test   DWORD PTR ds:[edx],0x6c150d8b
  40c046:	cmc    
  40c047:	aaa    
  40c048:	push   ecx
  40c049:	fs cli 
  40c04b:	cmp    eax,0x47982e51
  40c050:	pop    ss
  40c051:	test   eax,0xedc4b734
  40c056:	stc    
  40c057:	loop   0x40c0cc
  40c059:	loope  0x40c01d
  40c05b:	clc    
  40c05c:	std    
  40c05d:	shl    esi,1
  40c05f:	ss jne 0x40c056
  40c062:	jg     0x40c05c
  40c064:	clc    
  40c065:	jb     0x40c07f
  40c067:	pushf  
  40c068:	cmp    DWORD PTR [esi+0x2982620],ebp
  40c06e:	and    ebp,DWORD PTR [edi+0x79b3d973]
  40c074:	mov    DWORD PTR [edx-0x16b878b4],esi
  40c07a:	xor    al,0xaf
  40c07c:	inc    esi
  40c07d:	loope  0x40c028
  40c07f:	jecxz  0x40c0f5
  40c081:	repnz mov ebx,0x64e90d18
  40c087:	mov    ds:0x630ac113,eax
  40c08c:	add    DWORD PTR [edx+0x79],esp
  40c08f:	test   al,0xe8
  40c091:	popa   
  40c092:	or     BYTE PTR ds:0x4777201,dh
  40c098:	mov    ah,BYTE PTR [ebx+edx*1]
  40c09b:	mov    dh,0x24
  40c09d:	popa   
  40c09e:	add    BYTE PTR [eax],al
  40c0a0:	xor    al,0xaf
  40c0a2:	inc    ebx
  40c0a3:	add    BYTE PTR [esi-0x1dabb9c1],dh
  40c0a9:	mov    eax,ds:0x36de44e5
  40c0ae:	add    edi,edi
  40c0b0:	ret    
  40c0b1:	call   0x3d:0xa97a15fe
  40c0b8:	gs xor dh,dh
  40c0bb:	fcomp  DWORD PTR [ebx]
  40c0bd:	lock push ss
  40c0bf:	sbb    ebx,DWORD PTR [esi+0x58]
  40c0c2:	ror    BYTE PTR [edx-0x167ec81a],0x9c
  40c0c9:	icebp  
  40c0ca:	or     eax,0x4da35e83
  40c0cf:	mov    eax,DWORD PTR [ecx-0x71]
  40c0d2:	rol    DWORD PTR [esi],1
  40c0d4:	mov    ?,WORD PTR [esi]
  40c0d6:	test   eax,eax
  40c0d8:	mov    ds:0xd1ff5291,al
  40c0dd:	or     ch,cl
  40c0df:	xor    eax,0x84013575
  40c0e4:	push   cs
  40c0e5:	repz or BYTE PTR [edi-0x1b],dl
  40c0e9:	ja     0x40c0d0
  40c0eb:	lods   eax,DWORD PTR ds:[esi]
  40c0ec:	pop    ebp
  40c0ed:	add    DWORD PTR ss:[edi-0x48],ebx
  40c0f1:	ins    DWORD PTR es:[edi],dx
  40c0f2:	ret    0x8733
  40c0f5:	inc    esi
  40c0f6:	sar    DWORD PTR [ecx],cl
  40c0f8:	or     DWORD PTR [edi+esi*2+0x2b],esp
  40c0fc:	jo     0x40c0a9
  40c0fe:	jbe    0x40c150
  40c100:	ins    DWORD PTR es:[edi],dx
  40c101:	lods   eax,DWORD PTR ds:[esi]
  40c102:	add    eax,DWORD PTR [ebx+0x283a0000]
  40c108:	(bad)  
  40c109:	jae    0x40c11c
  40c10b:	scas   eax,DWORD PTR es:[edi]
  40c10c:	sbb    DWORD PTR [eax+0x41859c97],edx
  40c112:	pop    esp
  40c113:	cmp    eax,0x8d1c5456
  40c118:	pop    edx
  40c119:	cmp    edi,DWORD PTR [edi+0x37890a04]
  40c11f:	pop    edx
  40c120:	xor    DWORD PTR [ebx-0x2],ebp
  40c123:	inc    edi
  40c124:	in     eax,dx
  40c125:	xlat   BYTE PTR ds:[ebx]
  40c126:	test   DWORD PTR [ebx+0x3ef45e01],ecx
  40c12c:	xor    BYTE PTR [edi-0x44],dl
  40c12f:	call   0x8bb7d72d
  40c134:	adc    bl,bl
  40c136:	dec    ebp
  40c137:	fwait
  40c138:	mov    BYTE PTR [ebp+0x33],al
  40c13b:	pop    edx
  40c13c:	call   DWORD PTR [edi]
  40c13e:	sub    ecx,ebx
  40c140:	add    DWORD PTR [ebx+0x7],edx
  40c143:	adc    al,0x37
  40c145:	pop    esp
  40c146:	scas   al,BYTE PTR es:[edi]
  40c147:	fldenv [ecx-0x1]
  40c14a:	add    BYTE PTR [ebp+0x7ef98d09],0x32
  40c151:	push   eax
  40c152:	mov    BYTE PTR [edx+0x6b],cl
  40c155:	sbb    BYTE PTR [edx-0x18ad0a2f],dh
  40c15b:	inc    ecx
  40c15c:	scas   al,BYTE PTR es:[edi]
  40c15d:	mov    ah,BYTE PTR [edx]
  40c15f:	das    
  40c160:	repz aas 
  40c162:	aaa    
  40c163:	push   cs
  40c164:	shl    DWORD PTR [ebx],0xb2
  40c167:	rcr    DWORD PTR [ecx],1
  40c169:	push   eax
  40c16a:	add    BYTE PTR [eax],al
  40c16c:	scas   eax,DWORD PTR es:[edi]
  40c16d:	ror    DWORD PTR ds:0x3f186aff,0x64
  40c174:	out    0x13,eax
  40c176:	aaa    
  40c177:	push   eax
  40c178:	scas   al,BYTE PTR es:[edi]
  40c179:	stc    
  40c17a:	xor    BYTE PTR [ecx-0x2b2a0d27],cl
  40c180:	mov    esp,0xbe10214e
  40c185:	sbb    BYTE PTR [edx-0x7774df01],cl
  40c18b:	test   DWORD PTR [ebx+0x6700018a],ebp
  40c191:	adc    al,0x34
  40c193:	jl     0x40c153
  40c195:	lock cmp edi,0xd6e83400
  40c19c:	jecxz  0x40c1a9
  40c19e:	xchg   edx,eax
  40c19f:	add    dh,BYTE PTR [edi]
  40c1a1:	xor    al,0x65
  40c1a3:	jge    0x40c139
  40c1a5:	xor    ebp,eax
  40c1a7:	add    eax,DWORD PTR [esp+eax*1+0x77b5ae87]
  40c1ae:	jmp    0x40c1e6
  40c1b0:	jb     0x40c15f
  40c1b2:	lods   eax,DWORD PTR ds:[esi]
  40c1b3:	cmp    dh,ch
  40c1b5:	aaa    
  40c1b6:	call   0x4fdb6de9
  40c1bb:	repnz mov eax,0xf4cde7a0
  40c1c1:	push   edi
  40c1c2:	loopne 0x40c1c8
  40c1c4:	and    edi,DWORD PTR [edx]
  40c1c6:	mov    bh,0xeb
  40c1c8:	sahf   
  40c1c9:	add    eax,0x78ac03e8
  40c1ce:	sahf   
  40c1cf:	rol    DWORD PTR [eax],0x0
  40c1d2:	xor    al,0x34
  40c1d4:	fwait
  40c1d5:	xor    cl,ah
  40c1d7:	or     eax,0x3c39bee4
  40c1dc:	pushf  
  40c1dd:	inc    ebx
  40c1de:	aaa    
  40c1df:	scas   eax,DWORD PTR es:[edi]
  40c1e0:	mov    esi,0xdaad13ff
  40c1e5:	and    BYTE PTR [edx+0x27],0xe3
  40c1e9:	jmp    0x40c18c
  40c1eb:	in     al,0xe7
  40c1ed:	add    eax,DWORD PTR [ecx]
  40c1ef:	mov    WORD PTR [ebx],ss
  40c1f1:	xor    DWORD PTR [edi],esi
  40c1f3:	xor    al,0x6b
  40c1f5:	ret    0xef34
  40c1f8:	je     0x40c1e6
  40c1fa:	add    eax,0xe335207d
  40c1ff:	sub    DWORD PTR [eax],eax
  40c201:	mov    DWORD PTR [ecx+0x4],edi
  40c204:	gs add bh,cl
  40c207:	mov    bl,0xf
  40c209:	add    al,0xab
  40c20b:	aaa    
  40c20c:	jae    0x40c222
  40c20e:	psubd  mm4,mm2
  40c211:	add    DWORD PTR [edi],esi
  40c213:	repz add dl,dh
  40c216:	inc    ebx
  40c217:	or     BYTE PTR [ebx-0x3f],dh
  40c21a:	scas   al,BYTE PTR es:[edi]
  40c21b:	push   0x3474fbcd
  40c220:	mov    WORD PTR [esi],fs
  40c222:	push   ebx
  40c223:	add    al,0xfe
  40c225:	mov    edi,0x81512702
  40c22a:	pop    esi
  40c22b:	add    eax,0xf6afe901
  40c230:	pop    eax
  40c231:	fs sti 
  40c233:	and    eax,DWORD PTR [esi]
  40c235:	sbb    DWORD PTR [eax],eax
  40c237:	add    dl,ah
  40c239:	dec    eax
  40c23a:	leave  
  40c23b:	(bad)  [esp+esi*1-0x74]
  40c23f:	scas   al,BYTE PTR es:[edi]
  40c240:	pop    eax
  40c241:	add    al,0xfe
  40c243:	aaa    
  40c244:	mov    eax,0x34e98cb6
  40c249:	xor    al,0x51
  40c24b:	dec    esi
  40c24c:	rcr    DWORD PTR [esi+0x298ca575],1
  40c252:	push   ebx
  40c253:	jmp    0x2e9cc08c
  40c258:	mov    dh,BYTE PTR [edi+0x74]
  40c25b:	test   eax,0xbcc1fb34
  40c260:	scas   eax,DWORD PTR es:[edi]
  40c261:	mov    ecx,DWORD PTR [edi-0x48]
  40c264:	mov    ecx,0xaab938f6
  40c269:	clc    
  40c26a:	std    
  40c26b:	jmp    0x739bb1d
  40c270:	dec    eax
  40c271:	xchg   DWORD PTR [edx],edx
  40c273:	test   eax,0x9d7db534
  40c278:	arpl   WORD PTR [esi-0xe0c1700],bx
  40c27e:	push   esi
  40c27f:	jb     0x40c2ec
  40c281:	xchg   edi,eax
  40c282:	imul   esp,edx,0xa9849e0b
  40c288:	js     0x40c2f3
  40c28a:	mov    bl,BYTE PTR [esi]
  40c28c:	addr16 cmc 
  40c28e:	imul   eax,DWORD PTR [eax],0x778beee7
  40c294:	cs nop
  40c296:	ins    DWORD PTR es:[edi],dx
  40c297:	push   ecx
  40c298:	push   ds
  40c299:	xor    eax,DWORD PTR [ebp+0x4a0000c0]
  40c29f:	push   edx
  40c2a0:	mov    WORD PTR [ebx+0xa],es
  40c2a3:	arpl   si,di
  40c2a5:	adc    eax,0x3da282
  40c2aa:	push   ebp
  40c2ab:	pusha  
  40c2ac:	push   ebp
  40c2ad:	mov    eax,DWORD PTR [eax]
  40c2af:	stos   BYTE PTR es:[edi],al
  40c2b0:	sbb    DWORD PTR [ecx-0xa7104f],eax
  40c2b6:	sbb    DWORD PTR [esi+edi*8+0x15],esp
  40c2ba:	mov    dh,0xa4
  40c2bc:	cmp    eax,0xfe5d9800
  40c2c1:	add    eax,esi
  40c2c3:	xchg   DWORD PTR [eax+edi*8+0x11],esi
  40c2c7:	mov    ds,ecx
  40c2c9:	adc    bl,dh
  40c2cb:	xor    cl,BYTE PTR [ebx-0x3d960ebb]
  40c2d1:	push   ebp
  40c2d2:	and    eax,0xa2ec8297
  40c2d7:	stos   DWORD PTR es:[edi],eax
  40c2d8:	inc    esp
  40c2d9:	or     BYTE PTR [eax+0x5e788a4f],ch
  40c2df:	mov    bl,0xbd
  40c2e1:	push   ss
  40c2e2:	sbb    eax,ebp
  40c2e4:	sbb    bh,bh
  40c2e6:	jge    0x40c362
  40c2e8:	mov    WORD PTR [ebx-0x7a],es
  40c2eb:	(bad)  
  40c2ec:	mov    DWORD PTR [ebp+0x31],0x4ac78233
  40c2f3:	test   eax,0x9051f444
  40c2f8:	aad    0x12
  40c2fa:	sahf   
  40c2fb:	xor    dh,BYTE PTR [edx]
  40c2fd:	not    bh
  40c2ff:	in     eax,dx
  40c300:	clc    
  40c301:	cmp    DWORD PTR [eax],eax
  40c303:	add    ch,bl
  40c305:	pop    ebx
  40c306:	ja     0x40c36a
  40c308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c309:	cmc    
  40c30a:	push   eax
  40c30b:	lea    esi,[edi]
  40c30d:	(bad)  
  40c30e:	xchg   ecx,eax
  40c30f:	mov    ch,BYTE PTR [edi]
  40c311:	sbb    BYTE PTR [ebx+esi*2+0x8403477],bh
  40c318:	mov    ebp,DWORD PTR [ebx]
  40c31a:	jle    0x40c35c
  40c31c:	daa    
  40c31d:	or     al,ah
  40c31f:	adc    eax,0xbfedc408
  40c324:	push   esp
  40c325:	int3   
  40c326:	pop    esi
  40c327:	adc    al,0xb4
  40c329:	retf   
  40c32a:	or     BYTE PTR [eax-0x80],dl
  40c32d:	(bad)  
  40c32e:	not    DWORD PTR [ebx]
  40c330:	dec    ecx
  40c331:	dec    ebx
  40c332:	add    eax,0x88a7f383
  40c337:	mov    edi,0x427e924a
  40c33c:	adc    bl,BYTE PTR [bx+di]
  40c33f:	mov    al,0xcf
  40c341:	outs   dx,DWORD PTR ds:[esi]
  40c342:	jmp    0x40c345
  40c344:	aaa    
  40c345:	and    al,BYTE PTR [eax-0x8]
  40c348:	mov    esp,0x538331ca
  40c34d:	adc    eax,DWORD PTR ds:0x3edfac6
  40c353:	mov    esp,DWORD PTR [esi-0x708b8333]
  40c359:	xor    dl,BYTE PTR [esi+0x54]
  40c35c:	add    eax,0x807c84b2
  40c361:	mov    edx,DWORD PTR [ebp+0x7]
  40c364:	lods   al,BYTE PTR ds:[esi]
  40c365:	push   edx
  40c366:	fstp   QWORD PTR [eax+0x3e720000]
  40c36c:	sar    dh,cl
  40c36e:	loop   0x40c3ae
  40c370:	rcl    BYTE PTR [ebx+eax*4],cl
  40c373:	cdq    
  40c374:	inc    ecx
  40c375:	add    BYTE PTR [ebp-0xea12d30],ch
  40c37b:	arpl   di,ax
  40c37d:	add    esi,DWORD PTR [edi]
  40c37f:	sar    BYTE PTR [esi-0x15],0xb4
  40c383:	lahf   
  40c384:	and    eax,0x3f33e153
  40c389:	fsubr  QWORD PTR [ecx]
  40c38b:	(bad)  
  40c38c:	call   0x60dc7f94
  40c391:	push   eax
  40c392:	daa    
  40c393:	mov    bh,0xce
  40c395:	pop    eax
  40c396:	xor    BYTE PTR [edx-0x58],ah
  40c399:	fdivr  QWORD PTR [ebx-0x4bfc17cd]
  40c39f:	push   ds
  40c3a0:	fadd   DWORD PTR [ebx]
  40c3a2:	lods   al,BYTE PTR ds:[esi]
  40c3a3:	cld    
  40c3a4:	jecxz  0x40c36f
  40c3a6:	jae    0x40c345
  40c3a8:	out    0x58,eax
  40c3aa:	inc    ecx
  40c3ab:	scas   eax,DWORD PTR es:[edi]
  40c3ac:	and    al,0xb0
  40c3ae:	rol    BYTE PTR [eax],1
  40c3b0:	pop    es
  40c3b1:	add    eax,0xb024af37
  40c3b6:	scas   eax,DWORD PTR es:[edi]
  40c3b7:	not    bh
  40c3b9:	ror    BYTE PTR [ebx+0x44],cl
  40c3bc:	jae    0x40c416
  40c3be:	aas    
  40c3bf:	mov    WORD PTR [ecx+0x6],?
  40c3c2:	aaa    
  40c3c3:	xor    al,0x65
  40c3c5:	scas   al,BYTE PTR es:[edi]
  40c3c6:	cmp    ch,cl
  40c3c8:	push   0x68
  40c3ca:	scas   eax,DWORD PTR es:[edi]
  40c3cb:	xor    esi,DWORD PTR [ecx+0x30]
  40c3ce:	add    BYTE PTR [eax],al
  40c3d0:	mov    ds:0xfa06eea8,eax
  40c3d5:	fwait
  40c3d6:	rol    DWORD PTR [ebx],0x98
  40c3d9:	es in  al,0xd2
  40c3dc:	or     edi,DWORD PTR [edi+edi*1]
  40c3df:	pop    eax
  40c3e0:	and    ebx,DWORD PTR [ebp+0x2681f3bc]
  40c3e6:	(bad)  
  40c3e8:	mov    BYTE PTR [edx+ebp*8],al
  40c3eb:	add    edi,DWORD PTR [ebx+eiz*4+0x39e4d964]
  40c3f2:	arpl   WORD PTR [eax+0x2f],dx
  40c3f5:	test   eax,0x9dcadb2d
  40c3fa:	push   es
  40c3fb:	shl    BYTE PTR [ebx+esi*2-0x98ef88d],cl
  40c402:	add    dh,dh
  40c404:	xor    al,0x8c
  40c406:	pop    ebx
  40c407:	shl    BYTE PTR [edx],1
  40c409:	xor    al,0x8a
  40c40b:	or     esi,DWORD PTR fs:[edi-0x64c41ebd]
  40c412:	dec    ebx
  40c413:	fisttp QWORD PTR [eax-0x4e90228]
  40c419:	fst    QWORD PTR [eax-0x17]
  40c41c:	xor    al,0x3
  40c41e:	jmp    0x1750798
  40c423:	arpl   WORD PTR [eax-0x65],di
  40c426:	pop    ebp
  40c427:	cmovp  ebp,DWORD PTR [ebp-0x3e]
  40c42b:	add    DWORD PTR [ebx],edi
  40c42d:	add    DWORD PTR [edx+0xc8fb28d],ecx
  40c433:	push   0x0
  40c435:	add    BYTE PTR [eax-0x68],bl
  40c438:	add    BYTE PTR [edx],bh
  40c43a:	push   ds
  40c43b:	scas   eax,DWORD PTR es:[edi]
  40c43c:	jnp    0x40c42f
  40c43e:	push   ebx
  40c43f:	or     DWORD PTR [ecx-0x264b49a],0xffffffe9
  40c446:	cmp    eax,0x7262f4f0
  40c44b:	sub    al,0x88
  40c44d:	lods   al,BYTE PTR ds:[esi]
  40c44e:	jl     0x40c3e3
  40c450:	pop    ss
  40c451:	pop    edi
  40c452:	xchg   BYTE PTR [edx-0xd67c],bl
  40c458:	std    
  40c459:	aam    0x98
  40c45b:	scas   al,BYTE PTR es:[edi]
  40c45c:	cmp    ebx,DWORD PTR [ecx]
  40c45e:	mov    DWORD PTR [ebx+0x1],ebx
  40c461:	shl    DWORD PTR [ecx+ebp*4],cl
  40c464:	inc    ebx
  40c465:	cmp    eax,0x2e030e4b
  40c46a:	mov    esi,0x9e8f8b6
  40c46f:	and    BYTE PTR [bp+si-0x6498],0x74
  40c475:	hlt    
  40c476:	jecxz  0x40c46d
  40c478:	jo     0x40c488
  40c47a:	add    BYTE PTR [eax],ch
  40c47c:	mov    al,BYTE PTR [eax]
  40c47e:	sahf   
  40c47f:	lahf   
  40c480:	mov    BYTE PTR [ebp+0x36],al
  40c483:	cli    
  40c484:	add    BYTE PTR [ebp+0x6a4d8393],cl
  40c48a:	dec    esp
  40c48b:	test   dh,dl
  40c48d:	cmp    eax,0x1361c
  40c492:	sub    DWORD PTR [esi],0xffffff82
  40c495:	dec    ebp
  40c496:	or     al,BYTE PTR [edx+ebp*8+0x3d00000a]
  40c49d:	fild   WORD PTR [eax+0x3b]
  40c4a0:	fild   WORD PTR [ecx]
  40c4a2:	add    cl,BYTE PTR [ecx-0x74ad7ba5]
  40c4a8:	sub    ebx,DWORD PTR [eax-0x7c37cf1b]
  40c4ae:	dec    BYTE PTR [ebx+0x5b5e8423]
  40c4b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4b5:	jo     0x40c4bc
  40c4b7:	add    BYTE PTR [ebx],ah
  40c4b9:	sbb    edx,ebp
  40c4bb:	sbb    DWORD PTR [edx-0x9],0x51
  40c4bf:	push   esi
  40c4c0:	inc    ebp
  40c4c1:	xchg   DWORD PTR [edx-0x2a8411ba],ecx
  40c4c7:	sbb    ecx,DWORD PTR [esi-0x12e9b3e7]
  40c4cd:	jne    0x40c525
  40c4cf:	sbb    DWORD PTR [esi-0x71],0x4d
  40c4d3:	call   0x41ccdb
  40c4d8:	adc    dh,BYTE PTR [edi+0x71]
  40c4db:	pop    es
  40c4dc:	cmp    al,0x70
  40c4de:	call   0x1776471
  40c4e3:	(bad)  
  40c4e4:	retf   
  40c4e5:	jbe    0x40c471
  40c4e7:	(bad)  
  40c4e8:	imul   BYTE PTR [edi]
  40c4ea:	pushf  
  40c4eb:	add    DWORD PTR [esi+0x3e7d820c],ecx
  40c4f1:	aaa    
  40c4f2:	mov    ecx,0x1367110
  40c4f7:	mov    ecx,0x567d37
  40c4fc:	aaa    
  40c4fd:	sar    ebp,0x65
  40c500:	add    BYTE PTR [eax],al
  40c502:	push   cs
  40c503:	enter  0x71e1,0x6f
  40c507:	mov    dl,0xa
  40c509:	dec    ebp
  40c50a:	push   edi
  40c50b:	sbb    DWORD PTR [ebp+eiz*2-0x29f84c],esi
  40c512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c513:	lahf   
  40c514:	arpl   WORD PTR [ecx],di
  40c516:	jb     0x40c597
  40c518:	push   edx
  40c519:	lds    ebx,FWORD PTR [ecx-0x5f0bbfbc]
  40c51f:	stos   BYTE PTR es:[edi],al
  40c520:	jns    0x40c59e
  40c522:	aas    
  40c523:	and    BYTE PTR [esi+0x18b378b],al
  40c529:	push   eax
  40c52a:	stc    
  40c52b:	dec    eax
  40c52c:	retf   0xf2ff
  40c52f:	push   eax
  40c530:	int3   
  40c531:	add    al,dh
  40c533:	cwde   
  40c534:	rcl    DWORD PTR [ecx],1
  40c536:	ja     0x40c4c3
  40c538:	mov    BYTE PTR [edi-0x5b7e7d0],bh
  40c53e:	iret   
  40c53f:	cmp    BYTE PTR [eax+0x0],bh
  40c542:	aaa    
  40c543:	es aad 0x84
  40c546:	ror    DWORD PTR [edx-0x74c8797b],0x1
  40c54d:	lea    esi,[edx-0x2d]
  40c550:	xor    al,0xe8
  40c552:	jp     0x40c508
  40c554:	add    eax,DWORD PTR [eax]
  40c556:	mov    dl,0x4b
  40c558:	dec    ebp
  40c559:	aas    
  40c55a:	lods   al,BYTE PTR ds:[esi]
  40c55b:	arpl   WORD PTR [edx-0x25],bx
  40c55e:	pop    edi
  40c55f:	mov    gs,ebx
  40c561:	jg     0x40c575
  40c563:	cmc    
  40c564:	add    al,0x8d
  40c566:	add    BYTE PTR [eax],al
  40c568:	or     cl,BYTE PTR [ebx+0x59]
  40c56b:	pop    ds
  40c56c:	or     eax,0x47e8338b
  40c571:	add    eax,DWORD PTR [eax+eax*1]
  40c574:	pop    edi
  40c575:	xor    al,0xfc
  40c577:	fsubr  DWORD PTR [ecx-0x67]
  40c57a:	jo     0x40c5bf
  40c57c:	cmp    ebx,DWORD PTR [ecx+0x2ff27add]
  40c582:	add    dh,bh
  40c584:	sbb    dh,BYTE PTR [eax+ebp*8]
  40c587:	jnp    0x40c57c
  40c589:	pushf  
  40c58a:	adc    bh,bl
  40c58c:	into   
  40c58d:	xor    bl,BYTE PTR [esi-0x1743d825]
  40c593:	add    edi,DWORD PTR [edi-0x54851f12]
  40c599:	sub    al,0xd3
  40c59b:	sbb    eax,0x3d216b7
  40c5a0:	mov    ds:0x3b4d6b4c,eax
  40c5a5:	inc    bp
  40c5a7:	and    bl,BYTE PTR [ebp-0x8b792cd]
  40c5ad:	lods   al,BYTE PTR ds:[esi]
  40c5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5af:	fld    TBYTE PTR [ebp-0x3f]
  40c5b2:	call   0x1bb480ba
  40c5b7:	bnd jmp 0x3b86391e
  40c5bd:	mov    WORD PTR [edx+0x64343728],?
  40c5c3:	ret    
  40c5c4:	inc    esp
  40c5c5:	xor    BYTE PTR [esi+0x7f32cc48],ch
  40c5cb:	adc    eax,0x42cf0000
  40c5d0:	daa    
  40c5d1:	add    al,0x37
  40c5d3:	add    al,BYTE PTR [eax-0x17cbfe06]
  40c5d9:	sub    DWORD PTR [ebx],0xffffff9e
  40c5dc:	out    0x57,eax
  40c5de:	xor    ah,BYTE PTR [edi-0x67678092]
  40c5e4:	out    0x33,eax
  40c5e6:	nop
  40c5e7:	ds and al,0xf1
  40c5ea:	dec    eax
  40c5eb:	xor    al,0x68
  40c5ed:	push   eax
  40c5ee:	jl     0x40c623
  40c5f0:	add    DWORD PTR [ebp+0x3fffe431],edi
  40c5f6:	mov    ah,0x98
  40c5f8:	std    
  40c5f9:	jmp    0xea38ddb2
  40c5fe:	popa   
  40c5ff:	mov    ah,0xdf
  40c601:	pop    ss
  40c602:	imul   ebx,DWORD PTR [ecx+0x3d8a68b],0x994cac88
  40c60c:	adc    esp,DWORD PTR [ecx]
  40c60e:	inc    esi
  40c60f:	pop    eax
  40c610:	add    DWORD PTR [edi+ebp*8+0x6b],esp
  40c614:	mov    ecx,DWORD PTR [esi-0x2575fba0]
  40c61a:	or     esi,DWORD PTR [esi]
  40c61c:	cwde   
  40c61d:	call   0x52017756
  40c622:	push   ecx
  40c623:	stos   DWORD PTR es:[edi],eax
  40c624:	lock inc edx
  40c626:	jmp    0x6f3ac88a
  40c62b:	xor    al,0x52
  40c62d:	ins    BYTE PTR es:[edi],dx
  40c62e:	jo     0x40c6a4
  40c630:	call   0x8240c66f
  40c635:	xor    al,0x1
  40c637:	popa   
  40c638:	js     0x40c5d5
  40c63a:	call   0xfdd7d57c
  40c63f:	jo     0x40c6ba
  40c641:	xor    BYTE PTR [edx-0x6c380456],cl
  40c647:	call   0x13645180
  40c64c:	xor    al,0xa9
  40c64e:	inc    ebx
  40c64f:	test   eax,0x44e86a3e
  40c654:	inc    ecx
  40c655:	xor    al,0x1
  40c657:	popa   
  40c658:	clc    
  40c659:	call   0xde80:0x420f2984
  40c660:	adc    al,0xc4
  40c662:	(bad)  
  40c663:	call   0x1a48dc9c
  40c668:	jnp    0x40c614
  40c66a:	leave  
  40c66b:	add    dh,ah
  40c66d:	push   edx
  40c66e:	cdq    
  40c66f:	add    DWORD PTR [esi+0x41087468],ecx
  40c675:	lahf   
  40c676:	fst    DWORD PTR [edx]
  40c678:	sahf   
  40c679:	xor    ecx,DWORD PTR [ebx+0x5f491545]
  40c67f:	pop    ebx
  40c680:	daa    
  40c681:	jb     0x40c684
  40c683:	add    BYTE PTR [ebx+0x5283ea1c],bl
  40c689:	pop    ebx
  40c68a:	push   edi
  40c68b:	lea    ebx,[ebp+0x1850560f]
  40c691:	out    dx,eax
  40c692:	std    
  40c693:	add    bh,dl
  40c695:	out    dx,al
  40c696:	lock inc DWORD PTR [eax]
  40c699:	add    BYTE PTR [ebx],cl
  40c69b:	retf   
  40c69c:	cmovo  ebx,DWORD PTR [esi]
  40c69f:	inc    esp
  40c6a0:	ror    DWORD PTR [ecx+0x4338685b],0x6e
  40c6a7:	cdq    
  40c6a8:	mov    esi,edx
  40c6aa:	push   ds
  40c6ab:	xor    eax,DWORD PTR [ecx]
  40c6ad:	mov    DWORD PTR [ebx+0x7c],ebx
  40c6b0:	mov    bh,BYTE PTR [ebx+0x22]
  40c6b3:	xor    eax,0xfe95f47c
  40c6b8:	or     BYTE PTR [ebp-0x17b267e7],cl
  40c6be:	cmp    cl,BYTE PTR [eax]
  40c6c0:	add    DWORD PTR [eax],eax
  40c6c2:	pop    ebx
  40c6c3:	jae    0x40c6d3
  40c6c5:	mov    DWORD PTR [ecx+0x33],ecx
  40c6c8:	add    DWORD PTR [eax],eax
  40c6ca:	test   al,0xed
  40c6cc:	or     al,0x1
  40c6ce:	retf   
  40c6cf:	xchg   esi,eax
  40c6d0:	mov    al,dh
  40c6d2:	dec    ebp
  40c6d3:	jmp    0x40c6d9
  40c6d5:	xor    dl,cl
  40c6d7:	adc    eax,0x329e00ae
  40c6dc:	test   DWORD PTR [ebp-0x5e],0x845e7534
  40c6e3:	sub    cl,BYTE PTR [ebp+eax*2+0x5034c537]
  40c6ea:	nop
  40c6eb:	lahf   
  40c6ec:	icebp  
  40c6ed:	adc    eax,0x44788cf7
  40c6f2:	jg     0x40c6fd
  40c6f4:	(bad)  
  40c6f5:	or     ebp,DWORD PTR [edx-0x3717d22f]
  40c6fb:	std    
  40c6fc:	add    al,BYTE PTR [eax]
  40c6fe:	add    BYTE PTR [eax],al
  40c700:	push   0xf2fed1b7
  40c705:	push   esp
  40c706:	sub    DWORD PTR [ebx+eiz*2-0x7c],0x9a7314cc
  40c70e:	inc    ecx
  40c70f:	add    BYTE PTR [ecx+eiz*8+0x8376a4d],bh
  40c716:	inc    edi
  40c717:	mov    eax,0xe7c1d9e7
  40c71c:	or     esi,DWORD PTR [ebp+0x2]
  40c71f:	add    BYTE PTR [edx-0x72ebb535],dh
  40c725:	mov    WORD PTR [eax+0x44],?
  40c728:	fist   WORD PTR [edx]
  40c72a:	mov    ebx,0x420ede7
  40c72f:	add    BYTE PTR [ebx-0x6fbaf35],dh
  40c735:	push   eax
  40c736:	retf   0xf800
  40c739:	pop    eax
  40c73a:	aad    0xfe
  40c73c:	dec    edx
  40c73d:	ret    
  40c73e:	idiv   BYTE PTR [edi]
  40c740:	aaa    
  40c741:	ret    0x6a38
  40c744:	aaa    
  40c745:	and    al,dl
  40c747:	mov    ch,cl
  40c749:	mov    bl,0x88
  40c74b:	xchg   esp,eax
  40c74c:	mov    edi,DWORD PTR ss:[ebp-0x41]
  40c750:	inc    ebx
  40c751:	sbb    dh,0x24
  40c754:	lods   al,BYTE PTR ds:[esi]
  40c755:	dec    eax
  40c756:	std    
  40c757:	mov    al,bh
  40c759:	xor    dl,bl
  40c75b:	aaa    
  40c75c:	xor    al,0xdc
  40c75e:	pop    ebx
  40c75f:	add    BYTE PTR [esi],al
  40c761:	xor    al,0x50
  40c763:	add    BYTE PTR ds:[eax],al
  40c766:	leave  
  40c767:	xor    ebp,eax
  40c769:	jg     0x40c743
  40c76b:	and    ah,ch
  40c76d:	sar    ebx,0x94
  40c770:	call   0x170d0f3
  40c775:	dec    edx
  40c776:	cmp    esp,DWORD PTR [ecx]
  40c778:	out    0x7c,eax
  40c77a:	cli    
  40c77b:	das    
  40c77c:	cs inc ecx
  40c77e:	jo     0x40c7b3
  40c780:	arpl   WORD PTR [ecx+0x6f],ax
  40c783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c784:	mov    dl,0x27
  40c786:	dec    edi
  40c787:	and    eax,0x95370577
  40c78c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c78d:	retf   
  40c78e:	mov    ch,0x7
  40c790:	adc    al,0xc
  40c792:	dec    eax
  40c793:	out    dx,eax
  40c794:	(bad)  
  40c795:	jle    0x40c792
  40c797:	fwait
  40c798:	push   0x41
  40c79a:	inc    ebx
  40c79b:	pop    esp
  40c79c:	mov    bl,0x46
  40c79e:	xchg   edi,eax
  40c79f:	and    eax,0x9529f55c
  40c7a4:	out    0xca,al
  40c7a6:	stos   DWORD PTR es:[edi],eax
  40c7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a8:	fdivrp st(0),st
  40c7aa:	cld    
  40c7ab:	inc    ecx
  40c7ac:	sub    BYTE PTR [edi+esi*4],al
  40c7af:	push   ss
  40c7b0:	iret   
  40c7b1:	add    eax,DWORD PTR [ebx+0x2f40732c]
  40c7b7:	mov    WORD PTR ds:0x62343770,fs
  40c7bd:	inc    eax
  40c7be:	lock hlt 
  40c7c0:	or     eax,0xe82bf6bd
  40c7c5:	pop    ebp
  40c7c6:	aaa    
  40c7c7:	xchg   ebp,eax
  40c7c8:	push   edi
  40c7c9:	jnp    0x40c7cb
  40c7cb:	add    al,bl
  40c7cd:	xchg   esp,eax
  40c7ce:	out    0xca,eax
  40c7d0:	sub    ecx,DWORD PTR [eax-0x62c8bc07]
  40c7d6:	lahf   
  40c7d7:	out    dx,al
  40c7d8:	sbb    BYTE PTR [edi+ebx*4+0x16161c6],0x76
  40c7e0:	mov    ah,0xd6
  40c7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7e3:	jmp    0xdf41fc1c
  40c7e8:	cs and eax,0x94d767b7
  40c7ee:	std    
  40c7ef:	jmp    0x85cfa681
  40c7f4:	xor    al,0x34
  40c7f6:	add    edx,ebp
  40c7f8:	jne    0x40c85b
  40c7fa:	shl    DWORD PTR [esi],cl
  40c7fc:	arpl   WORD PTR [edx],cx
  40c7fe:	adc    eax,0xd500036
  40c803:	ret    0x40a2
  40c806:	mov    WORD PTR [ebp+0x4a],gs
  40c809:	into   
  40c80a:	add    cl,ch
  40c80c:	xor    al,0x4
  40c80e:	(bad)  
  40c80f:	cld    
  40c810:	pusha  
  40c811:	ds inc ecx
  40c813:	jmp    0x6c4d38c9
  40c818:	je     0x40c83a
  40c81a:	and    eax,0xa4aea6ee
  40c81f:	jmp    0xb286fc58
  40c824:	cld    
  40c825:	add    eax,0xd7a573c3
  40c82a:	add    cl,ch
  40c82c:	xor    al,0xb4
  40c82e:	cli    
  40c82f:	sbb    eax,DWORD PTR [eax]
  40c831:	add    BYTE PTR [edx+0x25],ch
  40c834:	push   cs
  40c835:	xchg   edi,eax
  40c836:	leave  
  40c837:	xchg   ecx,eax
  40c838:	ret    0x8571
  40c83b:	xlat   BYTE PTR ds:[ebx]
  40c83c:	add    cl,ch
  40c83e:	xor    al,0x9f
  40c840:	push   ds
  40c841:	sti    
  40c842:	hlt    
  40c843:	sahf   
  40c844:	arpl   WORD PTR ss:[ebp+0x34e900d8],si
  40c84b:	inc    ebx
  40c84c:	mov    bh,0xb1
  40c84e:	in     eax,dx
  40c84f:	ror    DWORD PTR ds:0xb742fb5f,cl
  40c855:	xchg   ebx,eax
  40c856:	pop    esp
  40c857:	mov    bh,ch
  40c859:	add    BYTE PTR [esi+0x6],al
  40c85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c85d:	add    dh,cl
  40c85f:	aaa    
  40c860:	push   0xffffffc9
  40c862:	xchg   edx,eax
  40c863:	icebp  
  40c864:	adc    al,0xff
  40c866:	mov    ds:0x128d0d33,al
  40c86b:	daa    
  40c86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c86d:	add    BYTE PTR [esi-0x6c00aec9],cl
  40c873:	xchg   DWORD PTR [ebx],edx
  40c875:	inc    eax
  40c876:	sahf   
  40c877:	mov    eax,0x36fe0cc1
  40c87c:	pop    esi
  40c87d:	ret    0x3792
  40c880:	mov    ecx,0xa3423d12
  40c885:	ret    
  40c886:	ret    
  40c887:	adc    dl,ch
  40c889:	xor    DWORD PTR [edx],0xffffff80
  40c88c:	sub    ah,0x5a
  40c88f:	xor    al,0x1
  40c891:	add    BYTE PTR [ebp+0x685645],cl
  40c897:	add    dh,al
  40c899:	inc    ecx
  40c89a:	add    DWORD PTR [eax],eax
  40c89c:	lds    edi,FWORD PTR [esi-0x2]
  40c89f:	adc    eax,0x3d8a2e
  40c8a4:	fwait
  40c8a5:	in     al,0x24
  40c8a7:	push   eax
  40c8a8:	ss dec ebx
  40c8aa:	and    BYTE PTR [edx],al
  40c8ac:	push   cs
  40c8ad:	adc    BYTE PTR ds:0xf71ce4,dh
  40c8b3:	lea    esp,[edx+0x1e00d133]
  40c8b9:	aaa    
  40c8ba:	push   ecx
  40c8bb:	jmp    DWORD PTR [eax-0x55db5e49]
  40c8c1:	add    DWORD PTR ss:[eax],eax
  40c8c4:	fdivrp st(0),st
  40c8c6:	add    BYTE PTR [edx-0x21],ch
  40c8c9:	daa    
  40c8ca:	ror    DWORD PTR [ebp+0xb932ba],0xce
  40c8d1:	mov    BYTE PTR ss:[edi+esi*1-0x37006e7f],bh
  40c8d9:	pushf  
  40c8da:	fldenv [edi]
  40c8dc:	sbb    DWORD PTR [ebp+0x27376a01],ebx
  40c8e2:	pop    es
  40c8e3:	xor    esi,DWORD PTR [edi+0x17]
  40c8e6:	and    di,WORD PTR [edi-0x64]
  40c8ea:	add    DWORD PTR [eax],eax
  40c8ec:	(bad)  
  40c8ed:	xchg   edx,eax
  40c8ee:	pop    ds
  40c8ef:	add    BYTE PTR [edi],dh
  40c8f1:	and    BYTE PTR [esi],bh
  40c8f3:	and    al,0xe7
  40c8f5:	adc    edi,DWORD PTR [esi+0x23]
  40c8f8:	rcr    DWORD PTR [ecx+eax*1-0x52000000],cl
  40c8ff:	loopne 0x40c91e
  40c901:	adc    al,0xaa
  40c903:	fcomp  DWORD PTR ds:0x86140718
  40c909:	and    edx,DWORD PTR [ebx-0x51fffe64]
  40c90f:	fcomp  DWORD PTR ds:0x7d4a5814
  40c915:	xor    al,0x2f
  40c917:	xchg   ebx,eax
  40c918:	inc    ecx
  40c919:	add    ch,bl
  40c91b:	xchg   esp,eax
  40c91c:	adc    al,0xdb
  40c91e:	mov    dl,0xe0
  40c920:	sbb    eax,0xc8ace434
  40c925:	aad    0xb4
  40c927:	pop    edi
  40c928:	imul   BYTE PTR [ecx+0x47]
  40c92b:	lock cmp eax,0x354e6324
  40c931:	inc    DWORD PTR [ecx]
  40c933:	pop    ds
  40c934:	ror    DWORD PTR [ebx],0x44
  40c937:	(bad)  [edi+0x4b]
  40c93a:	push   ebx
  40c93b:	mov    edi,DWORD PTR [ebx+ebx*2+0x5b]
  40c93f:	inc    ebx
  40c940:	jl     0x40c99d
  40c942:	push   ebx
  40c943:	pop    edi
  40c944:	fucomp st(4)
  40c946:	jle    0x40c8e5
  40c948:	add    DWORD PTR [ebx+0x2390f0f0],ecx
  40c94e:	iret   
  40c94f:	xor    al,0xe8
  40c951:	add    esi,DWORD PTR [edi]
  40c953:	pushf  
  40c954:	pop    esp
  40c955:	jl     0x40c98e
  40c957:	xor    al,0x65
  40c959:	adc    BYTE PTR [esp+edx*8],0xe7
  40c95d:	add    esi,DWORD PTR [edi]
  40c95f:	mov    ebx,0x482e
  40c964:	stos   BYTE PTR es:[edi],al
  40c965:	clc    
  40c966:	ret    
  40c967:	repz mov edi,0x370467b9
  40c96d:	xor    al,0x63
  40c96f:	mov    esi,0x806ebb09
  40c974:	cwde   
  40c975:	xchg   ecx,eax
  40c976:	out    0xdb,eax
  40c978:	mov    al,0x83
  40c97a:	push   esi
  40c97b:	(bad)  
  40c97c:	push   ds
  40c97d:	cmp    al,0x40
  40c97f:	sub    ebp,esp
  40c981:	xor    ebp,eax
  40c983:	or     dh,BYTE PTR [eax+ecx*1-0x13]
  40c987:	mov    esi,0x43b0f970
  40c98c:	aaa    
  40c98d:	mov    ebx,0x84adffaf
  40c992:	adc    al,BYTE PTR [edx]
  40c994:	and    al,0x8a
  40c996:	ins    BYTE PTR es:[edi],dx
  40c997:	inc    eax
  40c998:	sbb    esp,esp
  40c99a:	inc    ecx
  40c99c:	div    DWORD PTR [ebx]
  40c99e:	call   0xf3484a22
  40c9a3:	jp     0x40ca16
  40c9a5:	pushf  
  40c9a6:	rol    ch,1
  40c9a8:	xor    DWORD PTR [ecx-0x7d5c3b95],edx
  40c9ae:	jg     0x40ca13
  40c9b0:	or     eax,0xaa32e834
  40c9b5:	clc    
  40c9b6:	sti    
  40c9b7:	xor    eax,DWORD PTR [eax-0x36]
  40c9ba:	adc    BYTE PTR cs:[edi-0x6f],ah
  40c9be:	hlt    
  40c9bf:	mov    bl,0x26
  40c9c1:	hlt    
  40c9c2:	out    0x82,eax
  40c9c4:	add    BYTE PTR [ecx+0xf733],dl
  40c9ca:	xor    esi,DWORD PTR [esi]
  40c9cc:	add    eax,ebp
  40c9ce:	xor    al,0x34
  40c9d0:	jne    0x40c9b3
  40c9d2:	jmp    0x2e1e179d
  40c9d7:	jae    0x40ca4b
  40c9d9:	clc    
  40c9da:	and    DWORD PTR [ebp+edi*1-0x746e0e68],ebx
  40c9e1:	and    eax,0x8e8e417
  40c9e6:	adc    esi,DWORD PTR [esi]
  40c9e8:	add    DWORD PTR [edx+0x6e4cbdf2],edx
  40c9ee:	nop
  40c9ef:	dec    ebp
  40c9f0:	mov    fs,WORD PTR [ecx+0x34]
  40c9f3:	xor    al,0x1
  40c9f5:	neg    BYTE PTR [eax]
  40c9f7:	pop    edx
  40c9f8:	add    cl,ch
  40c9fa:	xor    al,0xbd
  40c9fc:	inc    ebp
  40c9fd:	mov    cl,0x3d
  40c9ff:	jl     0x40ca74
  40ca01:	fsubr  QWORD PTR ds:0xfdf07475
  40ca07:	jns    0x40c9f1
  40ca09:	add    al,BYTE PTR [edi-0x69bd026f]
  40ca0f:	mov    eax,0x415f055c
  40ca14:	mov    bh,0xad
  40ca16:	cmp    BYTE PTR [eax-0x76],al
  40ca19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1a:	shl    DWORD PTR [edx+edi*1],1
  40ca1d:	sub    bh,al
  40ca1f:	cmp    BYTE PTR ss:[ecx+0x7110440],ah
  40ca26:	clc    
  40ca27:	push   edi
  40ca28:	or     eax,0xd587869
  40ca2d:	in     eax,dx
  40ca2e:	add    BYTE PTR [eax],al
  40ca30:	xchg   BYTE PTR [ebx+0x34340be7],dl
  40ca36:	add    esi,esi
  40ca38:	stos   BYTE PTR es:[edi],al
  40ca39:	repz and al,0xed
  40ca3c:	pop    DWORD PTR [ebx]
  40ca3e:	xchg   ch,ch
  40ca40:	aas    
  40ca41:	or     DWORD PTR ds:0xfd8fc465,0x0
  40ca48:	push   cs
  40ca49:	pop    es
  40ca4a:	inc    edx
  40ca4b:	and    al,0x2a
  40ca4d:	dec    eax
  40ca4e:	(bad)  
  40ca4f:	jbe    0x40ca2b
  40ca51:	js     0x40ca86
  40ca53:	dec    DWORD PTR [ebx]
  40ca55:	rcl    BYTE PTR [eax+eax*2],1
  40ca58:	into   
  40ca59:	push   cs
  40ca5a:	mov    esi,0xfdac5b0f
  40ca5f:	(bad)  
  40ca60:	fiadd  WORD PTR [ecx-0x6fd5dbbf]
  40ca66:	jno    0x40ca9b
  40ca68:	not    DWORD PTR [edi]
  40ca6a:	and    al,BYTE PTR [esi+ebx*4+0xb0f0133]
  40ca71:	js     0x40caaa
  40ca73:	ret    
  40ca74:	or     DWORD PTR [esi],0x338e0093
  40ca7a:	mov    cl,dh
  40ca7c:	out    0x4f,al
  40ca7e:	scas   eax,DWORD PTR es:[edi]
  40ca7f:	add    BYTE PTR [esi-0x778b3dc4],bl
  40ca85:	or     al,0x5f
  40ca87:	jl     0x40ca27
  40ca89:	imul   ebp,edx,0x25
  40ca8c:	pop    edi
  40ca8d:	xor    ecx,DWORD PTR [edx-0x50dc0932]
  40ca93:	add    BYTE PTR [eax],al
  40ca95:	add    BYTE PTR [esi+0xe],cl
  40ca98:	mov    esi,0xda254275
  40ca9d:	neg    BYTE PTR [edx-0x55fe8ad1]
  40caa3:	inc    edx
  40caa4:	cmp    BYTE PTR [edx+edi*2-0x5],bl
  40caa8:	or     eax,0xc23a0e95
  40caad:	jne    0x40ca6d
  40caaf:	add    eax,0x33862482
  40cab4:	add    DWORD PTR [eax],eax
  40cab6:	mov    esi,0x32248205
  40cabb:	xor    eax,DWORD PTR [ecx]
  40cabd:	add    BYTE PTR [esi+0xd],cl
  40cac0:	int3   
  40cac1:	call   0xffd557fd
  40cac6:	add    BYTE PTR [edx],ah
  40cac8:	sar    BYTE PTR [ebp+0x4c],0x8
  40cacc:	jbe    0x40caf1
  40cace:	iret   
  40cacf:	fwait
  40cad0:	add    DWORD PTR [eax],eax
  40cad2:	xchg   BYTE PTR [eax],bl
  40cad4:	jbe    0x40caf9
  40cad6:	inc    ebx
  40cad7:	pushf  
  40cad8:	add    DWORD PTR [eax],eax
  40cada:	xchg   BYTE PTR [ebp-0x62c8c23e],ah
  40cae0:	js     0x40cad1
  40cae2:	or     al,0xaa
  40cae4:	dec    ebp
  40cae5:	adc    BYTE PTR [esi+ebx*8-0x6a303988],ch
  40caec:	into   
  40caed:	(bad)  
  40caee:	mov    al,0xa4
  40caf0:	mov    al,ds:0x109d3511
  40caf5:	fld    TBYTE PTR [ecx+0x742158]
  40cafb:	add    BYTE PTR ds:0x91b57d86,dh
  40cb01:	in     eax,dx
  40cb02:	les    edi,FWORD PTR [eax]
  40cb04:	jmp    0x40cb46
  40cb06:	dec    ecx
  40cb07:	rsm    
  40cb09:	pop    esp
  40cb0a:	or     bl,al
  40cb0c:	sub    BYTE PTR [ecx],ah
  40cb0e:	(bad)  
  40cb0f:	std    
  40cb10:	jo     0x40cb5f
  40cb12:	lds    esi,FWORD PTR [ebx+0x13]
  40cb15:	cdq    
  40cb16:	js     0x40caf6
  40cb18:	dec    edi
  40cb19:	cmp    eax,0x6958fed5
  40cb1e:	test   al,0x56
  40cb20:	pop    edi
  40cb21:	call   0xfd75:0x3348fed1
  40cb28:	inc    eax
  40cb29:	cmp    eax,0xad137377
  40cb2e:	fstp   DWORD PTR [eax+0x57]
  40cb31:	cdq    
  40cb32:	add    DWORD PTR [ebx+0x3ff05762],ecx
  40cb38:	aaa    
  40cb39:	lock jge 0x40cb5f
  40cb3c:	aaa    
  40cb3d:	xor    al,0xe9
  40cb3f:	add    esi,DWORD PTR [edi]
  40cb41:	in     al,0xde
  40cb43:	fidivr DWORD PTR [ebp+0x7716a04f]
  40cb49:	xor    al,0x11
  40cb4b:	pusha  
  40cb4c:	push   ebx
  40cb4d:	add    BYTE PTR [edx+ecx*1],bh
  40cb50:	lock or BYTE PTR [eax+edx*2],al
  40cb54:	call   0x1ba0bbbe
  40cb59:	cld    
  40cb5a:	xor    ecx,DWORD PTR [edx]
  40cb5c:	fmul   DWORD PTR [eax]
  40cb5e:	int3   
  40cb5f:	dec    ebx
  40cb60:	add    BYTE PTR [eax],al
  40cb62:	shl    BYTE PTR [ebp+0x6c],1
  40cb65:	dec    eax
  40cb66:	adc    esp,DWORD PTR [eax+eax*4]
  40cb69:	retf   0x326c
  40cb6c:	call   0xe0994001
  40cb71:	push   ebx
  40cb72:	mov    al,0x66
  40cb74:	ins    BYTE PTR es:[edi],dx
  40cb75:	mov    BYTE PTR [esp+ebx*8-0x19],dl
  40cb79:	add    esi,DWORD PTR [edi]
  40cb7b:	pushf  
  40cb7c:	shr    edx,0x98
  40cb7f:	lea    esi,[eax+ecx*2+0x5b]
  40cb83:	in     al,0x4f
  40cb85:	mov    al,ds:0x62e8322a
  40cb8a:	loope  0x40cb74
  40cb8c:	bound  ebp,QWORD PTR [ecx-0x71638f25]
  40cb92:	pop    esp
  40cb93:	loope  0x40cb2b
  40cb95:	mov    ?,WORD PTR [edx-0x64]
  40cb98:	mov    ebp,0x40343703
  40cb9d:	inc    ebp
  40cb9e:	xor    esi,DWORD PTR [eax+ebp*8]
  40cba1:	imul   BYTE PTR [ebp-0x1f]
  40cba4:	mov    edx,0xf8074856
  40cba9:	mov    cs,WORD PTR [eax-0x1b]
  40cbac:	push   cs
  40cbad:	sbb    edi,ecx
  40cbaf:	es test al,0x3
  40cbb2:	mov    BYTE PTR [ebx-0x479541b],bh
  40cbb8:	add    cl,ch
  40cbba:	xor    al,0x4b
  40cbbc:	pop    ds
  40cbbd:	je     0x40cbef
  40cbbf:	inc    edx
  40cbc0:	rcl    edx,0x82
  40cbc3:	int    0xd8
  40cbc5:	pop    edx
  40cbc6:	add    BYTE PTR [eax],al
  40cbc8:	jae    0x40cbfe
  40cbca:	(bad)  
  40cbcb:	sub    al,0x2b
  40cbcd:	cmp    BYTE PTR [ecx],al
  40cbcf:	jmp    0x7445e608
  40cbd4:	jge    0x40cc0e
  40cbd6:	push   ecx
  40cbd7:	mov    esi,0xb6368ded
  40cbdc:	aas    
  40cbdd:	or     al,0x14
  40cbdf:	sub    DWORD PTR [ebx],esi
  40cbe1:	mov    cl,0xc5
  40cbe3:	icebp  
  40cbe4:	cmc    
  40cbe5:	call   DWORD PTR [eax]
  40cbe7:	adc    al,0x9b
  40cbe9:	loope  0x40cc3c
  40cbeb:	add    edi,DWORD PTR [eax]
  40cbed:	loope  0x40cc40
  40cbef:	mov    ?,edi
  40cbf1:	aas    
  40cbf2:	(bad)  
  40cbf3:	cld    
  40cbf4:	cmp    al,0x8d
  40cbf6:	ss jle 0x40cc48
  40cbf9:	mov    eax,0xbb3b2913
  40cbfe:	inc    esi
  40cbff:	in     eax,0x99
  40cc01:	jno    0x40cc76
  40cc03:	lock shl DWORD PTR [esi-0x18],0xf3
  40cc08:	xor    al,0x34
  40cc0a:	add    DWORD PTR [edx+0x8],eax
  40cc0d:	(bad)  
  40cc0f:	lods   eax,DWORD PTR ds:[esi]
  40cc10:	fldz   
  40cc12:	ret    0x34f5
  40cc15:	out    0x55,al
  40cc17:	jb     0x40cbbd
  40cc19:	xchg   esp,eax
  40cc1a:	and    ecx,ebp
  40cc1c:	xor    al,0x34
  40cc1e:	mov    ah,BYTE PTR [edi-0x72c446d0]
  40cc24:	das    
  40cc25:	hlt    
  40cc26:	add    BYTE PTR [esp+esi*2+0x0],ah
  40cc2a:	push   es
  40cc2b:	mov    ecx,0x65750000
  40cc30:	add    DWORD PTR [edi+0x8a3430],0x74bdbd20
  40cc3a:	adc    al,ch
  40cc3c:	std    
  40cc3d:	xlat   BYTE PTR ds:[ebx]
  40cc3e:	lea    ebx,[ebp+0x72a85efd]
  40cc44:	mov    al,BYTE PTR [esi+0x6]
  40cc47:	mov    bl,0xbd
  40cc49:	je     0x40cc50
  40cc4b:	call   0x23b2e24d
  40cc50:	inc    ecx
  40cc51:	add    BYTE PTR [ebp-0x62fff6a2],cl
  40cc57:	jecxz  0x40cbe2
  40cc59:	in     al,dx
  40cc5a:	pop    edi
  40cc5b:	les    edx,FWORD PTR ds:0x5237ce01
  40cc61:	push   esi
  40cc62:	push   edi
  40cc63:	repz cld 
  40cc65:	add    DWORD PTR [ebx+0x74],0xffffffff
  40cc69:	push   esi
  40cc6a:	inc    ebp
  40cc6b:	(bad)  
  40cc6c:	mov    esi,0x8524a900
  40cc71:	je     0x40cc46
  40cc73:	mov    ah,0xfd
  40cc75:	(bad)  
  40cc76:	push   0xffffffbc
  40cc78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc79:	add    al,0xa2
  40cc7b:	cmp    eax,0x378ecf80
  40cc80:	add    DWORD PTR [eax],0x40719865
  40cc86:	sahf   
  40cc87:	pop    ds
  40cc88:	add    DWORD PTR [ebp-0x6d],esi
  40cc8b:	or     BYTE PTR [esi],ch
  40cc8d:	je     0x40cc5d
  40cc8f:	aaa    
  40cc90:	jmp    0xe940cd44
  40cc95:	je     0x40cc95
  40cc97:	push   0x5e
  40cc99:	in     al,dx
  40cc9a:	push   0xf0ed64
  40cc9f:	push   0x4e
  40cca1:	pop    edi
  40cca2:	xor    eax,0xfe378e74
  40cca7:	jne    0x40ccef
  40cca9:	loopne 0x40cca8
  40ccab:	jbe    0x40ccff
  40ccad:	je     0x40ccc3
  40ccaf:	je     0x40cce8
  40ccb1:	mov    BYTE PTR [ecx+0x0],al
  40ccb4:	scas   al,BYTE PTR es:[edi]
  40ccb5:	ror    DWORD PTR [ecx],cl
  40ccb7:	test   edi,esi
  40ccb9:	add    DWORD PTR [ebp+0x19d360b],0x4e103b6a
  40ccc3:	or     BYTE PTR [esi-0x7afb149],al
  40ccc9:	push   edi
  40ccca:	or     eax,0x19d3701
  40cccf:	jmp    FWORD PTR [edx]
  40ccd1:	in     eax,0x15
  40ccd3:	inc    eax
  40ccd4:	aaa    
  40ccd5:	jne    0x40cc68
  40ccd7:	mov    bl,0x37
  40ccd9:	popf   
  40ccda:	mov    WORD PTR [edi+eiz*2],?
  40ccdd:	pusha  
  40ccde:	inc    ecx
  40ccdf:	add    BYTE PTR [esp+ebx*4-0x6768ffff],bl
  40cce6:	add    eax,0xe9a54275
  40cceb:	mov    ah,0x37
  40cced:	popf   
  40ccee:	test   DWORD PTR [edi-0x78e6d0],edi
  40ccf4:	mov    eax,0x448e9c
  40ccf9:	add    BYTE PTR [edi],bh
  40ccfb:	sub    eax,0xaae848e
  40cd00:	sar    esi,0x7
  40cd03:	fiadd  DWORD PTR [esi+0x8]
  40cd06:	aaa    
  40cd07:	pushf  
  40cd08:	add    DWORD PTR [eax],eax
  40cd0a:	nop
  40cd0b:	xchg   DWORD PTR [ebp-0x796308ee],edx
  40cd11:	mov    edi,0xfe79740a
  40cd16:	aaa    
  40cd17:	popf   
  40cd18:	add    DWORD PTR [ecx],edi
  40cd1a:	cli    
  40cd1b:	test   BYTE PTR [eax],dl
  40cd1d:	inc    edx
  40cd1e:	repnz test bh,al
  40cd21:	cmp    DWORD PTR [edx],0x44
  40cd24:	sar    dh,0x58
  40cd27:	pushf  
  40cd28:	mov    es,WORD PTR [esi+ecx*2+0x49c02633]
  40cd2f:	jecxz  0x40cd4f
  40cd31:	push   ss
  40cd32:	jnp    0x40cd59
  40cd34:	test   al,0x3
  40cd36:	scas   al,BYTE PTR es:[edi]
  40cd37:	lock fild WORD PTR [esi+0x2da900f0]
  40cd3e:	inc    esi
  40cd3f:	mov    bh,0x64
  40cd41:	stos   DWORD PTR es:[edi],eax
  40cd42:	and    cl,BYTE PTR [edx+0x772af6]
  40cd48:	test   al,0x3
  40cd4a:	addr16 mov esp,edi
  40cd4d:	adc    esp,DWORD PTR [ecx]
  40cd4f:	hlt    
  40cd50:	out    0x8a,eax
  40cd52:	jnp    0x40cd90
  40cd54:	imul   ecx,eax,0x2c
  40cd57:	sbb    al,0x34
  40cd59:	cmp    BYTE PTR [edi+0x34],dh
  40cd5c:	jne    0x40cce6
  40cd5e:	add    BYTE PTR [eax],al
  40cd60:	xor    ecx,DWORD PTR [ebx-0x1b1e4043]
  40cd66:	mov    dh,0x19
  40cd68:	xchg   edi,eax
  40cd69:	sub    BYTE PTR es:[esp+edi*4],al
  40cd6d:	out    dx,eax
  40cd6e:	out    dx,eax
  40cd6f:	push   edx
  40cd70:	mov    ah,0x74
  40cd72:	cli    
  40cd73:	push   ebx
  40cd74:	mov    dl,0xaf
  40cd76:	jg     0x40cd36
  40cd78:	mov    ecx,0x2abf3789
  40cd7d:	cmp    al,0x87
  40cd7f:	xlat   BYTE PTR ds:[ebx]
  40cd80:	mov    ch,0x7
  40cd82:	in     al,dx
  40cd83:	add    ebp,DWORD PTR [ebx]
  40cd85:	and    ebx,DWORD PTR [ebx]
  40cd87:	mov    edi,0x396f2423
  40cd8c:	inc    ebx
  40cd8d:	mov    ebp,ebx
  40cd8f:	or     ecx,DWORD PTR [eax+0x37bc6a61]
  40cd95:	call   FWORD PTR [ebx]
  40cd97:	cmp    ebx,0xffffff87
  40cd9a:	out    0x38,eax
  40cd9c:	inc    ebp
  40cd9d:	in     eax,0xd1
  40cd9f:	adc    bl,bh
  40cda1:	jmp    0x40cd56
  40cda3:	inc    ebx
  40cda4:	aaa    
  40cda5:	mov    DWORD PTR [eax],eax
  40cda7:	mov    edi,0x6ad5892c
  40cdac:	xchg   ebx,eax
  40cdad:	xor    al,0x74
  40cdaf:	add    eax,0x1e190088
  40cdb4:	(bad)  
  40cdb5:	pop    ds
  40cdb6:	imul   ebp,ecx,0xe
  40cdb9:	xor    al,0xfe
  40cdbb:	xchg   edi,eax
  40cdbc:	cmp    al,0x89
  40cdbe:	adc    edx,DWORD PTR [ebp+0x6a00f44f]
  40cdc4:	add    BYTE PTR [eax],al
  40cdc6:	jecxz  0x40cdfb
  40cdc8:	je     0x40cdb7
  40cdca:	scas   al,BYTE PTR es:[edi]
  40cdcb:	enter  0xe6e9,0xdc
  40cdcf:	or     al,0xff
  40cdd1:	out    0xc9,al
  40cdd3:	inc    edx
  40cdd4:	sar    DWORD PTR [esi],0x61
  40cdd7:	in     eax,dx
  40cdd8:	(bad)  
  40cdd9:	stos   DWORD PTR es:[edi],eax
  40cdda:	and    BYTE PTR [esp+edx*2],dh
  40cddd:	bound  esp,QWORD PTR [eax-0x7ee5b01d]
  40cde3:	loope  0x40ce16
  40cde5:	mov    esi,0x343798ad
  40cdea:	inc    edi
  40cdeb:	inc    DWORD PTR ds:0x1387fa6
  40cdf1:	jmp    0x967b574a
  40cdf6:	or     BYTE PTR [edi],dh
  40cdf8:	imul   esp,ecx,0x61
  40cdfb:	loop   0x40cdfa
  40cdfd:	hlt    
  40cdfe:	dec    esp
  40cdff:	and    al,BYTE PTR [ecx-0x17]
  40ce02:	mov    ch,0x74
  40ce04:	or     al,0x70
  40ce06:	test   DWORD PTR [ebx+0x3444e9bd],0x9ae31601
  40ce10:	inc    esi
  40ce11:	jmp    0x65198b4a
  40ce16:	pop    ebp
  40ce17:	cmp    DWORD PTR [ebp+0x1343462],eax
  40ce1d:	push   0xfffffff7
  40ce1f:	and    eax,DWORD PTR [ecx]
  40ce21:	add    BYTE PTR [edx+0x21006b22],ch
  40ce27:	dec    esp
  40ce28:	adc    edi,edi
  40ce2a:	add    BYTE PTR [eax],al
  40ce2c:	jnp    0x40ce06
  40ce2e:	cmovo  ebx,DWORD PTR [esi+0x33]
  40ce32:	add    eax,DWORD PTR [ecx]
  40ce34:	pop    esi
  40ce35:	xor    al,0x74
  40ce37:	(bad)  
  40ce39:	sti    
  40ce3a:	cld    
  40ce3b:	push   eax
  40ce3c:	aad    0xfb
  40ce3e:	or     BYTE PTR [edi-0x13],dl
  40ce41:	(bad)  
  40ce42:	ins    DWORD PTR es:[edi],dx
  40ce43:	or     BYTE PTR [edi+0xbfffcf4],ah
  40ce49:	dec    eax
  40ce4a:	adc    al,0x40
  40ce4c:	push   cs
  40ce4d:	mov    ebp,0xbad774bd
  40ce52:	inc    esp
  40ce53:	cld    
  40ce54:	fwait
  40ce55:	jo     0x40cec8
  40ce57:	cmp    BYTE PTR [edi],cl
  40ce59:	out    dx,eax
  40ce5a:	clc    
  40ce5b:	mov    edx,DWORD PTR [ebx-0x38]
  40ce5e:	cmp    cl,BYTE PTR [ebp+0x12]
  40ce61:	inc    ecx
  40ce62:	test   DWORD PTR ss:[eax+0x108bb84c],ebp
  40ce69:	cmp    al,0x2
  40ce6b:	enter  0xd7f6,0x44
  40ce6f:	add    dh,bl
  40ce71:	scas   eax,DWORD PTR es:[edi]
  40ce72:	mov    ebp,0x74c8fb74
  40ce77:	cld    
  40ce78:	inc    ebp
  40ce79:	add    al,BYTE PTR cs:[esi-0x36]
  40ce7d:	in     al,0x50
  40ce7f:	jmp    FWORD PTR [ebx-0x61bfe8dd]
  40ce85:	mov    esp,0x7c0dfc44
  40ce8a:	or     DWORD PTR [ecx],eax
  40ce8c:	dec    eax
  40ce8d:	cmp    al,0xea
  40ce8f:	nop
  40ce90:	add    BYTE PTR [eax],al
  40ce92:	sub    eax,0x9e4687d8
  40ce97:	xor    esi,DWORD PTR [ecx+0x5224e501]
  40ce9d:	call   0x87ebd9
  40cea2:	aaa    
  40cea3:	adc    BYTE PTR [edi-0x911cf8d],dh
  40cea9:	out    0xea,eax
  40ceab:	into   
  40ceac:	add    DWORD PTR [eax],eax
  40ceae:	and    eax,0xec5e5c5d
  40ceb3:	push   ebx
  40ceb4:	ret    
  40ceb5:	or     esi,DWORD PTR [edi]
  40ceb7:	enter  0xeb88,0xb4
  40cebb:	cmp    DWORD PTR [ecx],ebx
  40cebd:	push   ebx
  40cebe:	loopne 0x40cf29
  40cec0:	fcom   DWORD PTR [edx-0x61]
  40cec3:	sbb    eax,0xa3370005
  40cec8:	call   DWORD PTR [edx-0x73]
  40cecb:	pushf  
  40cecc:	sub    DWORD PTR [eax],eax
  40cece:	aaa    
  40cecf:	popf   
  40ced0:	inc    ecx
  40ced1:	dec    DWORD PTR [edx+0x85c8969]
  40ced7:	mov    ss,WORD PTR [esi]
  40ced9:	mov    ah,0x25
  40cedb:	pop    ebp
  40cedc:	add    eax,0xbd19ff8b
  40cee1:	inc    BYTE PTR [eax+0x11]
  40cee4:	lahf   
  40cee5:	(bad)  
  40cee6:	call   0x37ff2287
  40ceeb:	ins    DWORD PTR es:[edi],dx
  40ceec:	add    DWORD PTR [eax],eax
  40ceee:	xor    DWORD PTR [ebp+0xc],0x8a9d3746
  40cef5:	inc    esp
  40cef6:	add    BYTE PTR [eax],al
  40cef8:	ret    
  40cef9:	xchg   ecx,eax
  40cefa:	shl    BYTE PTR [ebx+0x4a],0x4
  40cefe:	pop    edi
  40ceff:	clc    
  40cf00:	(bad)  
  40cf01:	aas    
  40cf02:	adc    eax,0xbc4a4674
  40cf07:	je     0x40cf50
  40cf09:	scas   al,BYTE PTR es:[edi]
  40cf0a:	push   ss
  40cf0b:	in     al,dx
  40cf0c:	inc    ebp
  40cf0d:	pop    ebp
  40cf0e:	add    eax,0x19c353d
  40cf13:	add    BYTE PTR [edx],cl
  40cf15:	and    DWORD PTR [esi-0x47cc78bc],ecx
  40cf1b:	mov    bl,bh
  40cf1d:	cmp    esi,DWORD PTR [esi+0x568003bc]
  40cf23:	xor    edi,DWORD PTR [edi]
  40cf25:	xchg   esp,esi
  40cf27:	aas    
  40cf28:	inc    edx
  40cf29:	hlt    
  40cf2a:	out    0x86,eax
  40cf2c:	mov    al,ds:0xf388fbff
  40cf31:	xor    edx,0xffffffc0
  40cf34:	les    ebx,FWORD PTR [ecx-0x17]
  40cf37:	inc    esi
  40cf38:	dec    edi
  40cf39:	mov    ah,0xa4
  40cf3b:	mov    ebx,0x3478640
  40cf40:	rcr    BYTE PTR [ebx+edi*4-0x72],0x83
  40cf45:	cwde   
  40cf46:	mov    eax,0xfc002853
  40cf4b:	push   ebx
  40cf4c:	and    BYTE PTR [eax],ah
  40cf4e:	inc    eax
  40cf4f:	adc    DWORD PTR [edi+0x34],esi
  40cf52:	ins    DWORD PTR es:[edi],dx
  40cf53:	ret    
  40cf54:	test   BYTE PTR [edi],bl
  40cf56:	arpl   WORD PTR [esi+0x7],ax
  40cf59:	dec    edx
  40cf5a:	sub    eax,0x840000a8
  40cf5f:	rcl    edx,1
  40cf61:	punpcklbw mm0,DWORD PTR [ebp-0xbb98c04]
  40cf68:	out    0xc1,eax
  40cf6a:	jae    0x40cef1
  40cf6c:	call   0xcfc13b2b
  40cf71:	ja     0x40cfe6
  40cf73:	xor    al,0xe8
  40cf75:	push   edx
  40cf76:	rcr    BYTE PTR [edi],1
  40cf78:	mov    al,ds:0x46347716
  40cf7d:	cld    
  40cf7e:	arpl   WORD PTR [ebp-0x47f3ec],ax
  40cf84:	jecxz  0x40cf31
  40cf86:	fadd   st(0),st
  40cf88:	out    0x3,eax
  40cf8a:	mov    ebp,0xfc5b86ef
  40cf8f:	jp     0x40cf3a
  40cf91:	or     BYTE PTR [edi],dh
  40cf93:	fild   WORD PTR [eax]
  40cf95:	(bad)  
  40cf96:	fbstp  TBYTE PTR [edx-0x221e2e14]
  40cf9c:	push   ebp
  40cf9d:	inc    si
  40cf9f:	cmp    BYTE PTR [esp+edx*8-0x2ca27230],cl
  40cfa6:	cmp    esi,DWORD PTR [eax*4+0x31f82729]
  40cfad:	and    bh,BYTE PTR [ebx+0x27ebfb08]
  40cfb3:	das    
  40cfb4:	imul   ebp,ebp,0xffffffed
  40cfb7:	cwde   
  40cfb8:	add    bh,dl
  40cfba:	lea    eax,[esi+0xb1f973]
  40cfc0:	or     DWORD PTR [esi],ebx
  40cfc2:	add    BYTE PTR [eax],al
  40cfc4:	push   es
  40cfc5:	mov    ebp,?
  40cfc7:	pushf  
  40cfc8:	fmul   DWORD PTR [edi+ebx*8-0x7b7a13ee]
  40cfcf:	sub    DWORD PTR [edi+0x1e],esp
  40cfd2:	push   edx
  40cfd3:	call   0xb9c4:0x7cfde181
  40cfda:	lds    esp,FWORD PTR [edx-0x3]
  40cfdd:	mov    WORD PTR [esi-0x7b7a421b],cs
  40cfe3:	test   eax,0xe8b23248
  40cfe8:	lods   eax,DWORD PTR ds:[esi]
  40cfe9:	(bad)  
  40cfea:	in     al,dx
  40cfeb:	shr    ecx,0xef
  40cfee:	add    cl,ch
  40cff0:	popf   
  40cff1:	push   eax
  40cff3:	shl    ecx,1
  40cff5:	out    dx,eax
  40cff6:	add    cl,ch
  40cff8:	ret    0x5d71
  40cffb:	punpckhbw mm7,QWORD PTR [ebx-0x3e]
  40cfff:	cmc    
  40d000:	xor    al,0xdf
  40d002:	mov    DWORD PTR [ebp+0x568e363],ecx
  40d008:	addr16 hlt 
  40d00a:	add    BYTE PTR [esi+0x12d047],cl
  40d010:	dec    esi
  40d011:	xor    BYTE PTR [eax-0x424c49bb],cl
  40d017:	jne    0x40cfb5
  40d019:	ja     0x40cfdd
  40d01b:	push   ebx
  40d01c:	and    DWORD PTR [eax+0x79],ebx
  40d01f:	je     0x40cfef
  40d021:	xor    BYTE PTR [ecx+0x33],dl
  40d024:	fxch   st(1)
  40d026:	adc    al,0xa8
  40d028:	add    BYTE PTR [eax],al
  40d02a:	ins    BYTE PTR es:[edi],dx
  40d02b:	lock add BYTE PTR [ebx+0x74dab426],cl
  40d032:	xchg   edx,eax
  40d033:	pop    eax
  40d034:	add    eax,0x6b304e10
  40d039:	or     BYTE PTR [ecx],cl
  40d03b:	test   BYTE PTR [ecx-0x1cf623a],bh
  40d041:	adc    eax,0x411e96
  40d046:	(bad)
  40d049:	call   edx
  40d04b:	xchg   edx,eax
  40d04c:	push   ebx
  40d04d:	(bad)  
  40d04e:	ror    ebx,cl
  40d050:	dec    ebp
  40d051:	push   edi
  40d052:	js     0x40d012
  40d054:	push   cs
  40d055:	add    BYTE PTR [esi],cl
  40d057:	push   edx
  40d058:	add    DWORD PTR [ecx-0x2c01346d],ecx
  40d05e:	xchg   ebx,eax
  40d05f:	ja     0x40d0d5
  40d061:	push   cs
  40d062:	test   DWORD PTR [ebx-0x3],eax
  40d065:	cmp    edx,eax
  40d067:	sub    eax,0x34a0c642
  40d06c:	push   es
  40d06d:	add    ch,dh
  40d06f:	ss push esi
  40d071:	call   0x41c52c
  40d076:	cmp    BYTE PTR [ebp+0x3389f874],bh
  40d07c:	mov    ebp,0x8a381e12
  40d081:	(bad)  
  40d082:	jns    0x40d065
  40d084:	mov    ebx,0x51e9b103
  40d08a:	aaa    
  40d08b:	push   cs
  40d08c:	push   ds
  40d08d:	cld    
  40d08e:	add    BYTE PTR [eax],al
  40d090:	aaa    
  40d091:	dec    ebx
  40d092:	mov    WORD PTR [edi+edx*1],?
  40d095:	pusha  
  40d096:	inc    ecx
  40d097:	add    BYTE PTR [eax],al
  40d099:	adc    BYTE PTR [esi],bh
  40d09b:	cld    
  40d09c:	out    0x36,eax
  40d09e:	add    eax,0x2e12556a
  40d0a3:	or     BYTE PTR [eax+0x2bf7e43],al
  40d0a9:	(bad)  
  40d0ac:	jae    0x40d10f
  40d0ae:	inc    esp
  40d0af:	inc    DWORD PTR [edx+0x1]
  40d0b2:	pop    ss
  40d0b3:	inc    eax
  40d0b4:	aaa    
  40d0b5:	push   cs
  40d0b6:	mov    ebp,0x8c34e279
  40d0bb:	inc    esp
  40d0bc:	push   ebx
  40d0bd:	int    0x2d
  40d0bf:	xor    bl,BYTE PTR [edi-0x7c]
  40d0c2:	cmp    eax,0xbd063700
  40d0c7:	test   BYTE PTR [eax],bh
  40d0c9:	test   eax,0x297a8ce0
  40d0ce:	push   ebp
  40d0cf:	push   edi
  40d0d0:	popf   
  40d0d1:	outs   dx,DWORD PTR ds:[esi]
  40d0d2:	mov    eax,0xd33a2f74
  40d0d7:	sbb    BYTE PTR [edi],0x8c
  40d0da:	adc    BYTE PTR cs:[edi+ecx*8+0x8f78505],bh
  40d0e2:	dec    DWORD PTR [edx+0x78a9972]
  40d0e8:	lods   al,BYTE PTR ds:[esi]
  40d0e9:	fldcw  WORD PTR [edi+eax*1+0x43f87588]
  40d0f0:	aaa    
  40d0f1:	(bad)  
  40d0f2:	hlt    
  40d0f3:	mov    edi,0x5b800000
  40d0f8:	retf   0x2fc1
  40d0fb:	lea    ecx,[esi-0x75]
  40d0fe:	jecxz  0x40d11b
  40d100:	test   BYTE PTR [ebx+ecx*8-0x74],ah
  40d104:	dec    edi
  40d105:	mov    ecx,DWORD PTR [edx]
  40d107:	xor    al,0x70
  40d109:	push   cs
  40d10a:	ja     0x40d140
  40d10c:	aaa    
  40d10d:	xchg   ebx,edi
  40d10f:	jg     0x40d148
  40d111:	cs aaa 
  40d113:	adc    DWORD PTR [eax+ecx*1],0xffffffa0
  40d117:	or     al,dh
  40d119:	mov    eax,0x2ea7b882
  40d11e:	push   eax
  40d11f:	cmp    eax,0x3e04b82d
  40d124:	outs   dx,DWORD PTR ds:[esi]
  40d125:	push   cs
  40d126:	shl    DWORD PTR ds:0x7bb403a8,cl
  40d12c:	loope  0x40d15c
  40d12e:	and    BYTE PTR [edi+0x73b5b7ac],ch
  40d134:	jmp    0x2ccce968
  40d139:	inc    esp
  40d13a:	aaa    
  40d13b:	xor    al,0x73
  40d13d:	mov    ebx,0x17bb82bb
  40d142:	mov    edx,0xe8532bf8
  40d147:	sbb    BYTE PTR [edi+eax*1-0x470ff7c8],0xa
  40d14f:	mov    dh,0xf
  40d151:	add    ah,BYTE PTR [edx+0xdc06338]
  40d157:	sub    eax,0xab9f
  40d15c:	add    dh,dh
  40d15e:	out    0x3,eax
  40d160:	inc    esp
  40d161:	je     0x40d0f9
  40d163:	pop    ecx
  40d164:	(bad)  
  40d165:	jbe    0x40d146
  40d167:	add    ebp,DWORD PTR [edx-0x53]
  40d16a:	rcl    DWORD PTR [ebp+0x66],cl
  40d16d:	mov    ch,0x44
  40d16f:	mov    eax,0x4f3de6f0
  40d174:	call   0x4bf7ad80
  40d179:	js     0x40d154
  40d17b:	inc    ebx
  40d17c:	aaa    
  40d17d:	xor    DWORD PTR [eax+edx*1],0x690147bc
  40d184:	es hlt 
  40d186:	add    BYTE PTR [edx-0x1d],ah
  40d189:	mov    al,0x43
  40d18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d18c:	arpl   WORD PTR [ecx-0x7dd6128d],ax
  40d192:	std    
  40d193:	jmp    0x153ebacc
  40d198:	xor    eax,DWORD PTR [ecx+0x8736cd6]
  40d19e:	pop    ebp
  40d19f:	jle    0x40d1c7
  40d1a1:	rcl    BYTE PTR [edx],1
  40d1a3:	sub    DWORD PTR [ebx],esi
  40d1a5:	mov    ch,0xf8
  40d1a7:	repz inc edi
  40d1a9:	jecxz  0x40d134
  40d1ab:	lods   al,BYTE PTR ds:[esi]
  40d1ac:	sar    BYTE PTR [esi],0xd9
  40d1af:	out    dx,al
  40d1b0:	xor    DWORD PTR [ebp+0x40],esi
  40d1b3:	(bad)  [edx]
  40d1b5:	mov    WORD PTR [edx-0x56],cs
  40d1b8:	xor    al,0x34
  40d1ba:	mov    BYTE PTR [esp+ebx*4+0xb5c0b8],ch
  40d1c1:	add    BYTE PTR [esi-0xa],cl
  40d1c4:	push   ecx
  40d1c5:	ss push es
  40d1c7:	xor    BYTE PTR [ecx+0x2e],dl
  40d1ca:	es je  0x40d1df
  40d1cd:	test   eax,0xf5738134
  40d1d2:	mov    edi,0xe1b9fcf7
  40d1d7:	pop    es
  40d1d8:	stc    
  40d1d9:	mov    dh,0xe9
  40d1db:	pop    es
  40d1dc:	or     DWORD PTR [esi],eax
  40d1de:	jmp    0x4829ca98
  40d1e3:	and    ecx,DWORD PTR [edx-0x3f48db54]
  40d1e9:	jne    0x40d222
  40d1eb:	lods   eax,DWORD PTR ds:[esi]
  40d1ec:	dec    ebx
  40d1ed:	in     eax,0xab
  40d1ef:	cmp    BYTE PTR [edx+0xa8db324],cl
  40d1f5:	(bad)  
  40d1f6:	daa    
  40d1f7:	jl     0x40d1e1
  40d1f9:	or     eax,0x13474
  40d1fe:	fnsave [esi+ebx*2+0x5e]
  40d202:	adc    eax,0xde10bf6f
  40d207:	jecxz  0x40d192
  40d209:	in     al,dx
  40d20a:	dec    ebp
  40d20b:	(bad)  [ecx]
  40d20d:	push   ebx
  40d20e:	clc    
  40d20f:	lods   al,BYTE PTR ds:[esi]
  40d210:	xor    al,0x60
  40d212:	stos   DWORD PTR es:[edi],eax
  40d213:	hlt    
  40d214:	add    BYTE PTR [edi+0x34],dl
  40d217:	xor    al,0x5a
  40d219:	lea    ebx,[ebx-0x44]
  40d21c:	dec    ebp
  40d21d:	lea    ecx,[ebx-0x3c]
  40d220:	dec    ebp
  40d221:	push   0x6b
  40d223:	leave  
  40d224:	je     0x40d22e
  40d226:	add    BYTE PTR [eax],al
  40d228:	pop    ss
  40d229:	fdiv   st(4),st
  40d22b:	jmp    FWORD PTR [eax+0x7b643cad]
  40d231:	hlt    
  40d232:	add    bl,ch
  40d234:	xor    al,0xad
  40d236:	inc    esp
  40d237:	hlt    
  40d238:	(bad)  [ecx+esi*2+0x21]
  40d23c:	add    ebp,esp
  40d23e:	cld    
  40d23f:	push   ecx
  40d240:	jecxz  0x40d22d
  40d242:	hlt    
  40d243:	push   ecx
  40d244:	and    edx,DWORD PTR fs:[ecx-0x77]
  40d248:	fwait
  40d249:	sub    al,0x88
  40d24b:	pop    ebp
  40d24c:	adc    cl,dl
  40d24e:	sar    edi,cl
  40d250:	fwait
  40d251:	sub    al,0x88
  40d253:	inc    ebp
  40d254:	push   esi
  40d255:	(bad)  
  40d256:	(bad)  
  40d257:	add    ebx,0xffffffbb
  40d25a:	std    
  40d25b:	je     0x40d2c3
  40d25d:	out    0x5e,al
  40d25f:	pop    ebx
  40d260:	addr16 jne 0x40d264
  40d263:	add    BYTE PTR [ebx-0x50ae1656],ch
  40d269:	into   
  40d26a:	inc    esp
  40d26b:	or     al,0xe
  40d26d:	xor    al,0x1
  40d26f:	pusha  
  40d270:	pop    edx
  40d271:	xor    al,0x32
  40d273:	rol    BYTE PTR ds:0x3765824d,0x65
  40d27a:	add    al,0x53
  40d27c:	mov    DWORD PTR [edx],edx
  40d27e:	out    dx,al
  40d27f:	jg     0x40d2c3
  40d281:	dec    ebp
  40d282:	add    eax,0x3e10376a
  40d287:	clc    
  40d288:	sbb    BYTE PTR ds:0xff,bh
  40d28d:	add    BYTE PTR [edi-0x32],ah
  40d290:	sub    eax,0xd20b80c
  40d295:	dec    DWORD PTR [ecx-0xe8b3ae8]
  40d29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d29c:	or     eax,0x54d45ac
  40d2a1:	sbb    DWORD PTR [edi-0x43c4d1cd],0x58
  40d2a8:	mov    ebp,0xa9c0033f
  40d2ad:	pop    edx
  40d2ae:	cmc    
  40d2af:	mov    WORD PTR [ecx],es
  40d2b1:	mov    ebx,DWORD PTR [edi+0x10]
  40d2b4:	fdiv   DWORD PTR [ebx+0x1d]
  40d2b7:	arpl   WORD PTR [ecx],ax
  40d2b9:	(bad)  
  40d2ba:	repnz in al,0x54
  40d2bd:	push   ebx
  40d2be:	pusha  
  40d2bf:	push   0x84e2ff05
  40d2c4:	mov    ah,0xd5
  40d2c6:	mov    ah,0xf5
  40d2c8:	add    DWORD PTR [ebp+0x27],esi
  40d2cb:	adc    bh,BYTE PTR [esi]
  40d2cd:	adc    BYTE PTR [edx-0x53faceb3],bh
  40d2d3:	enter  0x88b9,0x3f
  40d2d7:	add    al,al
  40d2d9:	jmp    0x8d75:0x5da9ba3f
  40d2e0:	add    DWORD PTR [ebx],esi
  40d2e2:	not    esi
  40d2e4:	pop    eax
  40d2e5:	leave  
  40d2e6:	cmc    
  40d2e7:	nop
  40d2e8:	add    DWORD PTR [ebx+0x52f6d08],eax
  40d2ee:	mov    ah,0x8d
  40d2f0:	xor    esi,DWORD PTR [esi+0x0]
  40d2f3:	add    BYTE PTR [esp+esi*1],ch
  40d2f6:	jne    0x40d374
  40d2f8:	nop
  40d2f9:	jg     0x40d2d9
  40d2fb:	mov    ah,0xb5
  40d2fd:	jnp    0x40d335
  40d2ff:	sub    eax,0xbc63163b
  40d304:	cmc    
  40d305:	stos   BYTE PTR es:[edi],al
  40d306:	scas   al,BYTE PTR es:[edi]
  40d307:	(bad)  
  40d309:	jle    0x40d2f2
  40d30b:	mov    ah,0xb
  40d30d:	xor    al,0xe8
  40d30f:	add    esi,DWORD PTR [esi]
  40d311:	or     BYTE PTR [esi+0x6086044d],bh
  40d317:	cld    
  40d318:	xor    eax,0x3486e834
  40d31d:	inc    ebp
  40d31e:	jno    0x40d308
  40d320:	jbe    0x40d386
  40d322:	pop    DWORD PTR [eax+eiz*8]
  40d325:	daa    
  40d326:	ins    DWORD PTR es:[edi],dx
  40d327:	mov    ebx,0xf8e7f414
  40d32c:	popa   
  40d32d:	add    ch,ch
  40d32f:	xchg   BYTE PTR [eax],dl
  40d331:	xor    eax,0x2b02fe83
  40d336:	jne    0x40d383
  40d338:	jo     0x40d374
  40d33a:	cs mov DWORD PTR ss:[edx+0x28],eax
  40d33f:	push   ebp
  40d340:	je     0x40d357
  40d342:	arpl   di,di
  40d344:	mov    bl,0x79
  40d346:	retf   
  40d347:	inc    ebx
  40d348:	aaa    
  40d349:	fisubr WORD PTR [edx]
  40d34b:	dec    esi
  40d34c:	mov    esp,0xe850988f
  40d351:	stos   BYTE PTR es:[edi],al
  40d352:	das    
  40d353:	lock js 0x40d391
  40d356:	lods   eax,DWORD PTR ds:[esi]
  40d357:	pop    es
  40d358:	add    BYTE PTR [eax],al
  40d35a:	inc    eax
  40d35b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d35c:	daa    
  40d35d:	dec    ebx
  40d35e:	push   edx
  40d35f:	xor    al,0xe8
  40d361:	add    esi,edi
  40d363:	stos   DWORD PTR es:[edi],eax
  40d364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d365:	mov    bh,0x66
  40d367:	je     0x40d35f
  40d369:	ins    DWORD PTR es:[edi],dx
  40d36a:	clc    
  40d36b:	cmp    edi,DWORD PTR [esi+eax*8-0x56fefce0]
  40d372:	xor    al,0x8
  40d374:	dec    eax
  40d375:	out    dx,eax
  40d376:	cmc    
  40d377:	cmp    DWORD PTR [ecx+0x5b],ebx
  40d37a:	xchg   ebp,eax
  40d37b:	inc    edx
  40d37c:	fiadd  DWORD PTR [edi-0x42]
  40d37f:	pop    edx
  40d380:	or     eax,0xfd7dcb6d
  40d385:	jmp    0x734ddc2f
  40d38a:	clc    
  40d38b:	stos   BYTE PTR es:[edi],al
  40d38c:	into   
  40d38d:	rol    DWORD PTR [edx+0x35e8ffe7],1
  40d393:	(bad)  
  40d394:	stc    
  40d395:	inc    ebx
  40d396:	xor    esp,ebp
  40d398:	std    
  40d399:	cld    
  40d39a:	pop    esp
  40d39b:	sub    BYTE PTR [ecx-0x17],al
  40d39e:	mov    edi,0x35e074bd
  40d3a3:	mov    al,0xa8
  40d3a6:	shr    DWORD PTR ds:0xaac72c08,cl
  40d3ac:	inc    esi
  40d3ad:	fxch   st(6)
  40d3af:	cmp    eax,0x4b3f6913
  40d3b4:	imul   DWORD PTR [ecx]
  40d3b6:	and    dh,BYTE PTR [ebx+esi*2-0x15cc14f6]
  40d3bd:	or     BYTE PTR [eax],al
  40d3bf:	add    BYTE PTR [esi+eax*8],dh
  40d3c2:	shl    dh,0xde
  40d3c5:	sub    ah,al
  40d3c7:	in     al,dx
  40d3c8:	and    esi,esp
  40d3ca:	add    dh,dh
  40d3cc:	into   
  40d3cd:	xor    ah,al
  40d3cf:	fld    QWORD PTR [ebx]
  40d3d1:	hlt    
  40d3d2:	add    bh,cl
  40d3d4:	jnp    0x40d36a
  40d3d6:	or     bh,al
  40d3d8:	cmp    DWORD PTR [ebp+0xd],esi
  40d3db:	pop    esi
  40d3dc:	add    cl,BYTE PTR [edx+0x41f4dba0]
  40d3e2:	enter  0x77d1,0x30
  40d3e6:	jne    0x40d3c7
  40d3e8:	mov    al,0xbc
  40d3ea:	or     eax,0x8c777300
  40d3ef:	add    al,0x9b
  40d3f1:	cmp    BYTE PTR [eax],al
  40d3f3:	add    BYTE PTR [esi],cl
  40d3f5:	sahf   
  40d3f6:	or     DWORD PTR [esi+ecx*2+0x6bc19431],eax
  40d3fd:	xor    eax,0x30df018c
  40d402:	add    edi,edi
  40d404:	add    esp,0x56
  40d407:	push   eax
  40d408:	jmp    0xf43fdd48
  40d40d:	inc    esp
  40d40e:	adc    eax,0xd5b9de40
  40d413:	sbb    ecx,DWORD PTR [esi-0x41142a47]
  40d419:	mov    al,0x7c
  40d41b:	or     al,0x9e
  40d41d:	inc    esp
  40d41e:	sub    eax,ebp
  40d420:	fadd   st,st(2)
  40d422:	(bad)  
  40d423:	inc    DWORD PTR [eax]
  40d425:	add    BYTE PTR [ecx+0x1366bdf9],bl
  40d42b:	jno    0x40d49e
  40d42d:	sbb    eax,DWORD PTR ds:0x5ff610f3
  40d433:	xor    DWORD PTR es:[ecx+edx*4-0x49],0x308efc4c
  40d43c:	add    DWORD PTR [eax],esp
  40d43e:	fnstcw WORD PTR [ebx]
  40d440:	std    
  40d441:	push   eax
  40d442:	xchg   BYTE PTR [esi],dh
  40d444:	add    BYTE PTR [eax],al
  40d446:	dec    esi
  40d447:	popf   
  40d448:	shl    BYTE PTR [edx],0xe
  40d44b:	loop   0x40d4a6
  40d44d:	leave  
  40d44e:	sbb    al,0x79
  40d450:	std    
  40d451:	push   esp
  40d452:	lds    ebx,FWORD PTR [eax+eax*4+0x13826ec]
  40d459:	add    BYTE PTR [eax+0x1eda68d9],ah
  40d45f:	cmp    BYTE PTR [ecx],al
  40d461:	push   0x1e
  40d463:	pop    es
  40d464:	(bad)  
  40d465:	mov    ebx,0x5701ce37
  40d46a:	sbb    BYTE PTR [ecx-0x7288e9f7],al
  40d470:	xchg   bl,al
  40d472:	cmp    esp,DWORD PTR [edi+0x41896803]
  40d478:	inc    edi
  40d479:	add    BYTE PTR [edi+0x45e7e4c4],cl
  40d47f:	xchg   BYTE PTR gs:[esi+0x36],ah
  40d483:	lea    edi,[esi-0x4c]
  40d486:	or     eax,0xfeaf63
  40d48b:	add    bh,cl
  40d48d:	int    0x75
  40d48f:	call   eax
  40d491:	out    0x6,eax
  40d493:	mov    edi,edi
  40d495:	push   ebp
  40d496:	popf   
  40d497:	int3   
  40d498:	mov    BYTE PTR [ebp+0x1df18b01],cl
  40d49e:	popf   
  40d49f:	lods   eax,DWORD PTR ds:[esi]
  40d4a0:	call   0xe79fd632
  40d4a5:	mov    WORD PTR [edi-0x37],cs
  40d4a8:	je     0x40d4c0
  40d4aa:	or     eax,DWORD PTR [ebp+0x4ffa2177]
  40d4b0:	lahf   
  40d4b1:	test   al,0x17
  40d4b3:	add    dh,BYTE PTR [edi]
  40d4b5:	push   cs
  40d4b6:	jmp    0x40d4b7
  40d4b8:	jne    0x40d4c7
  40d4ba:	out    dx,al
  40d4bb:	out    dx,eax
  40d4bc:	jno    0x40d50c
  40d4be:	add    eax,0xf4580900
  40d4c3:	mov    ebp,0x445247
  40d4c8:	or     edx,esp
  40d4ca:	adc    eax,0x1cd45d8
  40d4cf:	adc    BYTE PTR [edx],0x3d
  40d4d2:	retf   
  40d4d3:	inc    edx
  40d4d4:	aaa    
  40d4d5:	lea    esi,[esi]
  40d4d7:	pop    ss
  40d4d8:	dec    edi
  40d4d9:	mov    edx,0x1138feb0
  40d4de:	lds    esi,FWORD PTR [ebx+0x41]
  40d4e1:	xor    al,0x6b
  40d4e3:	out    0x24,eax
  40d4e5:	jb     0x40d491
  40d4e7:	add    esi,DWORD PTR [edi]
  40d4e9:	jb     0x40d4d7
  40d4eb:	mov    bl,0xf2
  40d4ed:	mul    bh
  40d4ef:	add    al,BYTE PTR [eax]
  40d4f1:	add    BYTE PTR [ecx+0x7b],ch
  40d4f4:	fmul   st(7),st
  40d4f6:	es hlt 
  40d4f8:	out    0x1b,eax
  40d4fa:	mov    DWORD PTR [eax+0x348d03aa],edi
  40d500:	add    BYTE PTR [ebx+0x5],0xf7
  40d504:	out    0xb0,eax
  40d506:	inc    ebx
  40d507:	xor    al,0xfb
  40d509:	inc    ebx
  40d50a:	aaa    
  40d50b:	scas   eax,DWORD PTR es:[edi]
  40d50c:	xlat   BYTE PTR ds:[ebx]
  40d50d:	xchg   dl,ah
  40d50f:	push   edx
  40d511:	sbb    eax,0x16c6e1d0
  40d516:	(bad)  ds:0x73ba0428
  40d51c:	cmp    edx,DWORD PTR [ecx]
  40d51e:	cli    
  40d51f:	mov    bl,0xe7
  40d521:	add    esi,DWORD PTR [edi]
  40d523:	add    BYTE PTR [eax],al
  40d525:	pop    edx
  40d526:	test   al,0x20
  40d528:	mov    al,0x15
  40d52a:	div    DWORD PTR [ebx]
  40d52c:	fcmovnb st,st(3)
  40d52e:	cli    
  40d52f:	mov    al,0xa7
  40d531:	aaa    
  40d532:	inc    ecx
  40d533:	scas   eax,DWORD PTR es:[edi]
  40d534:	xor    ebp,eax
  40d536:	xor    al,0xad
  40d538:	call   0xedd00cb0
  40d53d:	jl     0x40d5b1
  40d53f:	mov    ?,WORD PTR [ebp+esi*8-0x50]
  40d543:	jne    0x40d530
  40d545:	add    eax,DWORD PTR [edx]
  40d547:	scas   eax,DWORD PTR es:[edi]
  40d548:	dec    ebx
  40d549:	test   BYTE PTR [ebx+eiz*1+0x68],cl
  40d54d:	out    dx,al
  40d54e:	dec    eax
  40d54f:	jno    0x40d4fb
  40d551:	add    esi,DWORD PTR [edi]
  40d553:	loop   0x40d4f3
  40d555:	add    BYTE PTR ss:[eax],al
  40d558:	add    al,0xba
  40d55a:	xlat   BYTE PTR ds:[ebx]
  40d55b:	enter  0x33f5,0x1
  40d55f:	lahf   
  40d560:	xchg   DWORD PTR [edi],ebx
  40d562:	(bad)  
  40d564:	je     0x40d59a
  40d566:	and    esp,0xe9416fe4
  40d56c:	xor    al,0xff
  40d56e:	adc    eax,0xfd77ce01
  40d573:	push   cs
  40d574:	mov    eax,0xb3f774b9
  40d579:	push   eax
  40d57a:	cmc    
  40d57b:	daa    
  40d57c:	jnp    0x40d5b2
  40d57e:	add    DWORD PTR [edi],ebp
  40d580:	xor    DWORD PTR [esi+eax*8+0x573334aa],eax
  40d587:	out    0x4e,al
  40d589:	pop    eax
  40d58a:	adc    ch,BYTE PTR [ecx]
  40d58c:	cmp    ecx,DWORD PTR [esi]
  40d58e:	add    esi,DWORD PTR [ecx]
  40d590:	mov    dh,0x0
  40d592:	icebp  
  40d593:	shr    ecx,0xe
  40d596:	add    ecx,ebp
  40d598:	dec    ebp
  40d599:	lock or ah,ah
  40d59c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d59d:	jns    0x40d59c
  40d59f:	jmp    0xe9410bc0
  40d5a4:	xor    al,0xe4
  40d5a6:	mov    DWORD PTR [edi-0x1692c835],ebp
  40d5ac:	xor    al,0xe
  40d5ae:	add    eax,0x5127ee64
  40d5b3:	bound  edi,QWORD PTR [ecx-0x6f]
  40d5b6:	das    
  40d5b7:	adc    eax,0xfc8c3433
  40d5bc:	add    BYTE PTR [eax],al
  40d5be:	shr    BYTE PTR [esi+0xdba81c6],1
  40d5c4:	add    ecx,ebp
  40d5c6:	dec    esi
  40d5c7:	and    dh,bh
  40d5c9:	fadd   QWORD PTR [ecx+edi*2+0x73]
  40d5cd:	pop    ebp
  40d5ce:	nop
  40d5cf:	and    BYTE PTR ds:0x8233f4ff,bl
  40d5d5:	and    eax,0xc6ad37
  40d5da:	out    0xd1,al
  40d5dc:	push   0x0
  40d5de:	dec    esi
  40d5df:	jmp    0x5501:0x340cc95e
  40d5e6:	xchg   ebp,eax
  40d5e7:	aam    0x82
  40d5e9:	in     al,0x56
  40d5eb:	scas   eax,DWORD PTR es:[edi]
  40d5ec:	jmp    0x175e31d
  40d5f1:	push   ebx
  40d5f2:	fsub   st,st(1)
  40d5f4:	mov    esi,DWORD PTR [edx+edi*8+0x1e000054]
  40d5fb:	popf   
  40d5fc:	push   edi
  40d5fd:	mov    ah,0xe
  40d5ff:	xor    eax,0x28ea448c
  40d604:	push   ecx
  40d605:	jmp    FWORD PTR [ebx+0x7d]
  40d608:	mov    al,dh
  40d60a:	cs cwde 
  40d60c:	cmp    edi,edi
  40d60e:	add    edx,ecx
  40d610:	and    BYTE PTR [edx+ebp*1+0x20],0x1
  40d615:	lea    esi,[edx]
  40d617:	mov    WORD PTR [ecx],ss
  40d619:	push   ecx
  40d61a:	fs das 
  40d61c:	imul   eax,DWORD PTR [eax],0xffffffb6
  40d61f:	das    
  40d620:	add    DWORD PTR [eax],eax
  40d622:	add    BYTE PTR [eax],al
  40d624:	dec    esi
  40d625:	sbb    eax,0x305dbc01
  40d62a:	push   ecx
  40d62b:	mov    DWORD PTR [edx-0x74],ebx
  40d62e:	and    eax,0x10e0abff
  40d633:	inc    eax
  40d634:	mov    gs,WORD PTR [ebx-0x4c7b8a43]
  40d63a:	inc    ecx
  40d63b:	and    al,0x6e
  40d63d:	in     al,0x8b
  40d63f:	inc    esp
  40d640:	jp     0x40d66a
  40d642:	push   ecx
  40d643:	lea    ecx,[edx-0x74]
  40d646:	and    DWORD PTR [eax+0x13],edx
  40d649:	dec    ecx
  40d64a:	and    eax,0x19280620
  40d64f:	add    cl,BYTE PTR [esi-0x63]
  40d652:	add    al,BYTE PTR [ebx-0x7750acc9]
  40d658:	sti    
  40d659:	sbb    DWORD PTR cs:[ebx+0x7435f14f],eax
  40d660:	mov    edx,0xb470364a
  40d665:	mov    esi,0xc03617e5
  40d66a:	fmul   QWORD PTR [ebx+edi*2+0x20511569]
  40d671:	mov    ds:0xc1aa13e5,al
  40d676:	in     eax,0x5f
  40d678:	clc    
  40d679:	shl    ebp,1
  40d67b:	pop    edi
  40d67c:	xor    eax,0xf00018d
  40d681:	dec    eax
  40d682:	icebp  
  40d683:	(bad)  
  40d684:	clc    
  40d685:	jle    0x40d6bd
  40d687:	and    al,0x0
  40d689:	add    BYTE PTR [edi+0x12],al
  40d68c:	mov    dl,0xe7
  40d68e:	dec    BYTE PTR [edi+0x5]
  40d691:	add    BYTE PTR [esi-0x55f0171f],ch
  40d697:	or     ecx,ebp
  40d699:	out    dx,eax
  40d69a:	lea    eax,ss:[ecx]
  40d69d:	push   eax
  40d69e:	mov    edx,0xcf5be939
  40d6a3:	xlat   BYTE PTR ds:[ebx]
  40d6a4:	out    0xff,eax
  40d6a6:	mov    eax,0x4b243112
  40d6ab:	adc    BYTE PTR [ebx+esi*2+0x2439023c],ch
  40d6b2:	inc    edi
  40d6b3:	add    dl,ah
  40d6b5:	out    0x33,eax
  40d6b7:	pusha  
  40d6b8:	add    DWORD PTR [eax],eax
  40d6ba:	mov    esp,0x77850150
  40d6bf:	jns    0x40d6c0
  40d6c1:	mov    BYTE PTR [edi],bh
  40d6c3:	or     BYTE PTR [ecx+0x18c1723],cl
  40d6c9:	add    BYTE PTR [edi],al
  40d6cb:	mov    ch,0x7b
  40d6cd:	mov    ah,0x37
  40d6cf:	xor    al,0xe8
  40d6d1:	js     0x40d6c7
  40d6d3:	dec    edi
  40d6d4:	clc    
  40d6d5:	cwde   
  40d6d6:	sub    DWORD PTR [ecx+0x34f0e86b],ebp
  40d6dc:	call   0xc3ccbde4
  40d6e1:	jbe    0x40d723
  40d6e3:	ja     0x40d6df
  40d6e5:	ret    
  40d6e6:	(bad)  
  40d6e8:	xchg   edx,eax
  40d6e9:	js     0x40d706
  40d6eb:	fldcw  WORD PTR [ecx]
  40d6ed:	cld    
  40d6ee:	add    BYTE PTR [eax],al
  40d6f0:	sub    al,ah
  40d6f2:	jb     0x40d694
  40d6f4:	xchg   esi,ebx
  40d6f6:	ins    BYTE PTR es:[edi],dx
  40d6f7:	inc    edi
  40d6f8:	sbb    esp,esp
  40d6fa:	add    DWORD PTR [edx],0xad0d881f
  40d700:	or     DWORD PTR [ecx-0x4cdac7d9],esi
  40d706:	jl     0x40d6b7
  40d708:	xor    al,0x1
  40d70a:	in     al,0x78
  40d70c:	and    ah,ah
  40d70e:	(bad)  
  40d70f:	cmp    BYTE PTR [ecx],ch
  40d711:	xor    al,0xe8
  40d713:	js     0x40d70f
  40d715:	mov    ch,bh
  40d717:	push   ebx
  40d718:	iret   
  40d719:	hlt    
  40d71a:	adc    eax,0xa8433704
  40d71f:	dec    ebp
  40d720:	(bad)  
  40d721:	jb     0x40d73f
  40d723:	jns    0x40d6f1
  40d725:	mov    ah,0xcb
  40d727:	repz xor al,0x34
  40d72a:	call   0x94454ab2
  40d72f:	inc    eax
  40d730:	aaa    
  40d731:	xor    eax,0xff08563b
  40d736:	out    0xf1,al
  40d738:	fmul   DWORD PTR [edi+ecx*2+0x5d343703]
  40d73f:	jbe    0x40d6d5
  40d741:	js     0x40d6c9
  40d743:	lods   al,BYTE PTR ds:[esi]
  40d744:	cwde   
  40d745:	sbb    al,0x3b
  40d747:	add    esi,DWORD PTR [edi]
  40d749:	test   eax,0xe6e72c00
  40d74e:	push   0xffffffe8
  40d750:	out    dx,eax
  40d751:	jo     0x40d7a3
  40d753:	push   ecx
  40d754:	add    BYTE PTR [eax],al
  40d756:	xchg   ecx,eax
  40d757:	ja     0x40d756
  40d759:	pop    esi
  40d75a:	fldcw  WORD PTR [edi+0x75a35774]
  40d760:	push   eax
  40d761:	pop    esp
  40d762:	shl    DWORD PTR [edx-0x7],0x46
  40d766:	xchg   ebx,eax
  40d767:	mov    ds,ebp
  40d769:	add    esi,DWORD PTR [ebx]
  40d76b:	xor    al,0x6b
  40d76d:	in     eax,dx
  40d76e:	jg     0x40d719
  40d770:	rcr    DWORD PTR [ecx+eiz*2+0x2c],1
  40d774:	jmp    0xfdb6e734
  40d779:	xchg   ebx,eax
  40d77a:	xor    al,0xa
  40d77c:	add    esi,DWORD PTR [edi-0x60179071]
  40d782:	add    al,0x76
  40d784:	std    
  40d785:	test   BYTE PTR [edx+0x747590bd],0x34
  40d78c:	xor    dh,0x36
  40d78f:	push   DWORD PTR [edx]
  40d791:	pop    esp
  40d792:	jno    0x40d810
  40d794:	push   eax
  40d795:	je     0x40d74d
  40d797:	pop    ecx
  40d798:	cld    
  40d799:	fimul  WORD PTR [ebp+eiz*8-0x27b15577]
  40d7a0:	or     BYTE PTR [eax+0x46],ah
  40d7a3:	pop    ecx
  40d7a4:	cld    
  40d7a5:	(bad)  
  40d7a6:	mov    WORD PTR [ebp+0x343302b5],cs
  40d7ac:	mov    bh,BYTE PTR [ecx-0x298c804a]
  40d7b2:	das    
  40d7b3:	mov    al,0xe4
  40d7b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7b6:	int3   
  40d7b7:	jbe    0x40d809
  40d7b9:	xchg   ecx,eax
  40d7ba:	add    BYTE PTR [eax],al
  40d7bc:	adc    al,0xc1
  40d7be:	add    cl,ch
  40d7c0:	mov    bl,0xfe
  40d7c2:	std    
  40d7c3:	mov    ds,esp
  40d7c5:	test   al,0x73
  40d7c7:	add    BYTE PTR [esi-0x607a308],al
  40d7cd:	inc    edx
  40d7ce:	stc    
  40d7cf:	lea    esp,[ebx]
  40d7d1:	or     al,0x54
  40d7d3:	push   edi
  40d7d4:	dec    esi
  40d7d5:	sbb    BYTE PTR [ecx],al
  40d7d7:	mov    esp,0x43e9318d
  40d7dc:	pusha  
  40d7dd:	das    
  40d7de:	add    DWORD PTR [edx+0x844fb06],ecx
  40d7e4:	and    eax,0xa00671c0
  40d7e9:	cdq    
  40d7ea:	jae    0x40d829
  40d7ec:	dec    esi
  40d7ed:	xor    DWORD PTR [ebp+eax*4-0x1347e],ecx
  40d7f4:	into   
  40d7f5:	cwde   
  40d7f6:	imul   esi,DWORD PTR [esi+ecx*1-0x263c74cf],0xffffffea
  40d7fe:	pop    ecx
  40d7ff:	leave  
  40d800:	pop    esp
  40d801:	xor    al,0x1
  40d803:	push   ebp
  40d804:	xchg   ebp,eax
  40d805:	pushf  
  40d806:	push   eax
  40d807:	push   edi
  40d808:	mov    esi,ebx
  40d80a:	cld    
  40d80b:	push   eax
  40d80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d80d:	cs jmp 0xff0ac3f3
  40d813:	mov    esp,esi
  40d815:	mov    bl,0xfe
  40d817:	je     0x40d85b
  40d819:	cmc    
  40d81a:	inc    esp
  40d81b:	cld    
  40d81c:	(bad)  
  40d81d:	das    
  40d81e:	je     0x40d84d
  40d820:	add    BYTE PTR [eax],al
  40d822:	(bad)  
  40d823:	cwde   
  40d824:	test   dh,dh
  40d826:	bound  ebp,QWORD PTR [ebx]
  40d828:	cmp    al,0xff
  40d82a:	stc    
  40d82b:	leave  
  40d82c:	jle    0x40d8a1
  40d82e:	(bad)  
  40d830:	mov    ecx,DWORD PTR [ebp-0x16]
  40d833:	fild   QWORD PTR [edx+0x15]
  40d836:	inc    esp
  40d837:	cmc    
  40d838:	retf   
  40d839:	call   0x440a79
  40d83e:	lds    esi,FWORD PTR [ebx]
  40d840:	xor    al,al
  40d842:	aaa    
  40d843:	and    eax,0xb2e0057c
  40d848:	push   cs
  40d849:	cmp    eax,0x718b37
  40d84e:	mov    WORD PTR [edx-0x3fb917ae],es
  40d854:	add    DWORD PTR [eax],eax
  40d856:	and    eax,0x74c94acb
  40d85b:	mov    bh,0x7e
  40d85d:	jmp    0x40d813
  40d85f:	out    dx,al
  40d860:	test   eax,0xf26380
  40d865:	add    BYTE PTR [edi],dh
  40d867:	mov    ebp,0xe2478b52
  40d86c:	(bad)  
  40d86d:	(bad)  
  40d86e:	cmp    BYTE PTR ds:0x66aabf7e,dh
  40d874:	js     0x40d8f1
  40d876:	push   ebx
  40d877:	lea    ebx,[ecx+0x15c99b8]
  40d87d:	test   DWORD PTR [ecx],esp
  40d87f:	retf   0x8d0c
  40d882:	mov    ebx,0xb581
  40d887:	add    BYTE PTR [edi],dh
  40d889:	pop    ebp
  40d88a:	push   ecx
  40d88b:	lea    edi,[ebx-0x7f]
  40d88e:	adc    DWORD PTR [eax-0x73],edx
  40d891:	mov    BYTE PTR [ebx-0x75],cl
  40d894:	cmc    
  40d895:	(bad)  
  40d896:	mov    bh,0xe7
  40d898:	cmc    
  40d899:	pop    eax
  40d89a:	add    eax,DWORD PTR [eax]
  40d89c:	dec    edi
  40d89d:	jge    0x40d89c
  40d89f:	(bad)  
  40d8a0:	fsub   st,st(0)
  40d8a2:	inc    eax
  40d8a3:	and    al,0x2b
  40d8a5:	test   DWORD PTR [eax+edx*2],0x160968c8
  40d8ac:	ja     0x40d90b
  40d8ae:	test   bl,al
  40d8b0:	sub    edx,DWORD PTR [edx+0x4b]
  40d8b3:	mov    ebx,DWORD PTR [edx-0x43ab3bb8]
  40d8b9:	mov    cl,0x81
  40d8bb:	jmp    0x40d8c0
  40d8bd:	xor    al,0xec
  40d8bf:	add    esi,DWORD PTR [edi]
  40d8c1:	pop    es
  40d8c2:	ss push ecx
  40d8c4:	mov    edx,0x3d7fe674
  40d8c9:	xor    eax,0xb71903e8
  40d8ce:	mov    edi,0xe8b82803
  40d8d3:	add    dh,BYTE PTR [edi]
  40d8d5:	xor    al,0x2
  40d8d7:	prefetch (bad)
  40d8d8:	or     eax,0x58b81cc1
  40d8dd:	mov    esp,ebp
  40d8df:	add    eax,0xb7a4c137
  40d8e4:	add    BYTE PTR [ebx-0x4],dh
  40d8e7:	mov    esp,DWORD PTR [esi]
  40d8e9:	hlt    
  40d8ea:	out    0x7c,eax
  40d8ec:	add    BYTE PTR [eax],al
  40d8ee:	dec    eax
  40d8ef:	aaa    
  40d8f0:	inc    edi
  40d8f1:	test   bl,bh
  40d8f3:	jecxz  0x40d908
  40d8f5:	inc    ebp
  40d8f6:	aaa    
  40d8f7:	xor    eax,0x746500bf
  40d8fc:	inc    eax
  40d8fd:	fdiv   QWORD PTR [edi]
  40d8ff:	xor    al,0xe8
  40d901:	jbe    0x40d8e6
  40d903:	stos   DWORD PTR es:[edi],eax
  40d904:	sbb    al,0xa9
  40d906:	adc    DWORD PTR [ebx+ecx*4+0x72],ebx
  40d90a:	or     BYTE PTR [ebx+0x5c],dh
  40d90d:	aas    
  40d90e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d90f:	add    edx,DWORD PTR [edx+0x73075c05]
  40d915:	ret    0x5c80
  40d918:	lods   eax,DWORD PTR ds:[esi]
  40d919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d91a:	jmp    0x31ea3d91
  40d91f:	mov    eax,0x343703c2
  40d924:	ins    DWORD PTR es:[edi],dx
  40d925:	jle    0x40d99f
  40d927:	jb     0x40d8ff
  40d929:	test   al,0x78
  40d92b:	rcl    DWORD PTR [ebx+ebx*2-0x64398d43],0x18
  40d933:	sub    eax,0x8abc03e8
  40d938:	add    BYTE PTR [ecx+ebx*2-0x80],ah
  40d93c:	call   0xfdb36698
  40d941:	push   0xe9c572cf
  40d946:	xor    al,0xea
  40d948:	inc    eax
  40d949:	add    esi,DWORD PTR [edx]
  40d94b:	adc    cl,BYTE PTR [eax+0x5bbfd30c]
  40d951:	mov    ch,0x0
  40d953:	add    bh,cl
  40d955:	out    0xf8,eax
  40d957:	ins    BYTE PTR es:[edi],dx
  40d958:	xor    esp,eax
  40d95a:	push   ecx
  40d95b:	pop    ds
  40d95c:	add    ebx,esp
  40d95e:	add    BYTE PTR ds:0x2fe933fb,ch
  40d964:	sub    BYTE PTR [esi],dh
  40d966:	add    DWORD PTR [ecx+0x11],esi
  40d969:	jae    0x40d8f6
  40d96b:	lods   al,BYTE PTR ds:[esi]
  40d96c:	sub    BYTE PTR ds:0x736d5d9,0xe9
  40d973:	inc    ecx
  40d974:	dec    ebx
  40d975:	jb     0x40d974
  40d977:	ins    BYTE PTR es:[edi],dx
  40d978:	mov    cl,0xa9
  40d97a:	sti    
  40d97b:	fild   WORD PTR ss:[ecx]
  40d97e:	jmp    0xfdb283bc
  40d983:	jae    0x40d9de
  40d985:	jno    0x40d96e
  40d987:	dec    eax
  40d988:	xor    al,0x34
  40d98a:	add    edx,ebx
  40d98c:	int    0xb6
  40d98e:	std    
  40d98f:	in     eax,0xff
  40d991:	enter  0x72bf,0xf3
  40d995:	fild   DWORD PTR [eax]
  40d997:	shl    ch,cl
  40d999:	pop    ecx
  40d99a:	inc    ecx
  40d99b:	(bad)  
  40d99c:	xor    al,0x34
  40d99e:	push   cs
  40d99f:	aaa    
  40d9a0:	shl    DWORD PTR fs:[ecx+ebp*1+0x33],0xb5
  40d9a6:	(bad)  
  40d9a7:	call   0x2ccc71b3
  40d9ac:	fwait
  40d9ad:	add    DWORD PTR [esp+eiz*2+0xfd6d4b],ecx
  40d9b4:	icebp  
  40d9b5:	out    dx,eax
  40d9b6:	pushf  
  40d9b7:	mov    al,0x0
  40d9b9:	add    dl,dh
  40d9bb:	cdq    
  40d9bc:	(bad)  
  40d9bd:	push   eax
  40d9be:	adc    eax,0xc25d8cb1
  40d9c3:	shr    BYTE PTR [ecx-0x75ca71c7],1
  40d9c9:	fcomp  DWORD PTR [ebx]
  40d9cb:	jge    0x40da41
  40d9cd:	mov    DWORD PTR [ebx],edx
  40d9cf:	mov    bl,0xb5
  40d9d1:	std    
  40d9d2:	mov    cl,0x99
  40d9d4:	dec    ebp
  40d9d5:	call   0x3ebfec
  40d9da:	(bad)  
  40d9db:	push   edi
  40d9dc:	(bad)  
  40d9dd:	jmp    ecx
  40d9df:	mov    bh,0x3c
  40d9e1:	jo     0x40d9ad
  40d9e3:	cmc    
  40d9e4:	add    BYTE PTR [ecx],al
  40d9e6:	popa   
  40d9e7:	out    dx,eax
  40d9e8:	adc    edi,edi
  40d9ea:	icebp  
  40d9eb:	cwde   
  40d9ec:	mov    WORD PTR [ebp-0x1645a],?
  40d9f2:	neg    BYTE PTR [eax]
  40d9f4:	mov    cl,0x0
  40d9f6:	dec    esi
  40d9f7:	in     al,dx
  40d9f8:	inc    esp
  40d9f9:	nop
  40d9fa:	into   
  40d9fb:	dec    edx
  40d9fc:	add    ecx,DWORD PTR [ebx+0x63e90858]
  40da02:	gs cdq 
  40da04:	dec    BYTE PTR [ebp+0x684dc4cb]
  40da0a:	push   ds
  40da0b:	fld    DWORD PTR [edx+0x0]
  40da0e:	mov    dh,0x37
  40da10:	add    DWORD PTR [eax],eax
  40da12:	mov    ds,WORD PTR [ecx-0xb22b3ec]
  40da18:	add    BYTE PTR [ebx-0x72255eea],cl
  40da1e:	add    BYTE PTR [eax],al
  40da20:	pop    ebx
  40da21:	loopne 0x40da1f
  40da23:	call   ecx
  40da25:	cmp    bl,dl
  40da27:	push   eax
  40da28:	shl    BYTE PTR [ebp-0x1b],1
  40da2b:	dec    ecx
  40da2c:	lods   al,BYTE PTR ds:[esi]
  40da2d:	xor    al,0x1
  40da2f:	mov    dh,BYTE PTR [edi]
  40da31:	sahf   
  40da32:	inc    esi
  40da33:	pop    esi
  40da34:	pop    esp
  40da35:	xchg   esp,eax
  40da36:	ret    0xac54
  40da39:	xchg   BYTE PTR [ecx+edx*2+0x9],dl
  40da3d:	add    eax,0x5322fef9
  40da42:	cdq    
  40da43:	and    ah,BYTE PTR [ebx+0x5b]
  40da46:	add    DWORD PTR [ebp+0x6a5196f2],ecx
  40da4c:	sbb    al,bl
  40da4e:	outs   dx,DWORD PTR ds:[esi]
  40da4f:	cli    
  40da50:	mov    cl,cl
  40da52:	jp     0x40da43
  40da54:	mov    edx,0x450430c8
  40da59:	fwait
  40da5a:	call   0x6f82:0xa917bc20
  40da61:	push   esi
  40da62:	sub    eax,DWORD PTR [ebx]
  40da64:	int    0x8e
  40da66:	dec    ecx
  40da67:	push   eax
  40da68:	add    edx,ebx
  40da6a:	xor    BYTE PTR [eax],cl
  40da6c:	push   eax
  40da6d:	adc    DWORD PTR ds:0x5af7,edx
  40da72:	add    bl,0x33
  40da75:	test   eax,0x5afdf999
  40da7a:	add    DWORD PTR [eax-0x3e4330ca],esi
  40da80:	xor    ebx,DWORD PTR [ebp+0x50]
  40da83:	mov    eax,DWORD PTR [eax]
  40da85:	add    BYTE PTR [ebx],dl
  40da87:	int    0x54
  40da89:	push   esi
  40da8a:	sub    al,0x40
  40da8d:	cld    
  40da8e:	lds    edi,FWORD PTR [bx+di+0x8ff]
  40da93:	pop    esi
  40da94:	cdq    
  40da95:	ins    BYTE PTR es:[edi],dx
  40da96:	cld    
  40da97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da99:	mov    al,BYTE PTR [edi]
  40da9b:	loope  0x40da48
  40da9d:	jae    0x40daf2
  40da9f:	loop   0x40dae1
  40daa1:	cld    
  40daa2:	pop    ebp
  40daa3:	pop    esp
  40daa4:	pop    ss
  40daa5:	add    BYTE PTR [edi+ecx*2+0x34758d9a],ch
  40daac:	call   0x64ad96b4
  40dab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dab2:	inc    ebx
  40dab3:	ss ds pushf 
  40dab6:	sub    BYTE PTR [edx],0xe8
  40dab9:	add    ebp,DWORD PTR [edi+esi*2+0x737e4626]
  40dac0:	adc    al,0x79
  40dac2:	pushf  
  40dac3:	mov    ch,0xc3
  40dac5:	fdiv   QWORD PTR ds:0x1b80e834
  40dacb:	cmp    al,0xe8
  40dacd:	push   eax
  40dace:	jmp    0xb776efd9
  40dad3:	xor    DWORD PTR [eax],ebx
  40dad5:	shl    ch,1
  40dad7:	xor    ebp,ecx
  40dad9:	sub    eax,0xa03cc0dc
  40dade:	jae    0x40db4f
  40dae0:	jle    0x40da7e
  40dae2:	ret    0xe79f
  40dae5:	add    esi,DWORD PTR [edx+0x542bf9]
  40daeb:	add    bh,cl
  40daed:	jnp    0x40dad6
  40daef:	add    esi,DWORD PTR [edi]
  40daf1:	mov    ebx,0xe75f5425
  40daf6:	push   ecx
  40daf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf8:	inc    ecx
  40daf9:	shl    DWORD PTR [edi+eiz*2+0x67e7dbe8],0x75
  40db01:	xor    al,0xd0
  40db03:	add    dh,BYTE PTR [edi]
  40db05:	xor    al,0x68
  40db07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db08:	dec    ebx
  40db09:	add    bl,bl
  40db0b:	inc    ebx
  40db0c:	aaa    
  40db0d:	mov    ebx,0xbaedad3f
  40db12:	and    eax,0x1603ec0a
  40db17:	rcr    DWORD PTR [eax],0xd5
  40db1a:	pop    eax
  40db1b:	add    al,0x37
  40db1d:	pop    ebp
  40db1e:	in     eax,dx
  40db1f:	add    dh,BYTE PTR [edi]
  40db21:	xor    al,0x6d
  40db23:	aas    
  40db24:	out    dx,eax
  40db25:	add    eax,DWORD PTR [ecx]
  40db27:	xor    DWORD PTR [edx+ebx*8],0xffffffff
  40db2b:	in     eax,dx
  40db2c:	or     DWORD PTR [ecx+ebp*8],edi
  40db2f:	retf   
  40db30:	fld    TBYTE PTR [esi-0x3]
  40db33:	jb     0x40dad1
  40db35:	mov    bh,0xfd
  40db37:	pop    esp
  40db38:	ret    0xc124
  40db3b:	rcr    BYTE PTR [edi-0x4b160292],0x2f
  40db42:	jno    0x40dad9
  40db44:	div    DWORD PTR [ebx]
  40db46:	add    BYTE PTR [esi],bh
  40db48:	mov    ds:0x85c0da24,al
  40db4d:	outs   dx,BYTE PTR ds:[esi]
  40db4e:	std    
  40db4f:	jmp    0xa849db54
  40db54:	in     al,0x9c
  40db56:	shr    DWORD PTR [ebp-0x18],cl
  40db59:	int    0xeb
  40db5b:	outs   dx,BYTE PTR ds:[esi]
  40db5c:	std    
  40db5d:	pop    esp
  40db5e:	cmp    DWORD PTR [eax+0x6eb31150],esi
  40db64:	std    
  40db65:	jmp    0x81915459
  40db6a:	popa   
  40db6b:	ins    BYTE PTR es:[edi],dx
  40db6c:	std    
  40db6d:	outs   dx,BYTE PTR ds:[esi]
  40db6e:	loope  0x40db27
  40db70:	je     0x40dbd9
  40db72:	fwait
  40db73:	ins    DWORD PTR es:[edi],dx
  40db74:	push   eax
  40db75:	ins    BYTE PTR es:[edi],dx
  40db76:	(bad)  [edx+0x569b56fc]
  40db7c:	in     eax,0x17
  40db7e:	xor    esi,DWORD PTR [edx+ecx*4]
  40db81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db82:	fdivr  QWORD PTR [edx+0x55e772d5]
  40db88:	pop    ecx
  40db89:	(bad)  
  40db8a:	xor    al,0x34
  40db8c:	sub    BYTE PTR [esi],0x34
  40db8f:	jl     0x40db91
  40db91:	jmp    0xeaac12f8
  40db96:	jb     0x40dbf1
  40db98:	push   ebp
  40db99:	fidivr DWORD PTR [ebp+0x3e5fdb2]
  40db9f:	leave  
  40dba0:	mov    edi,0x5a33c400
  40dba5:	mov    ebx,DWORD PTR ds:0xf2b014b
  40dbab:	leave  
  40dbac:	cmp    eax,0xe31ce2c
  40dbb1:	mov    dh,0xae
  40dbb3:	call   0x411c29
  40dbb8:	fidiv  WORD PTR [esi-0x799cfe05]
  40dbbe:	mov    WORD PTR [ebp-0x2a],es
  40dbc1:	and    DWORD PTR [ebp+eax*4-0x16b26],ecx
  40dbc8:	daa    
  40dbc9:	mov    bl,0xd9
  40dbcb:	cld    
  40dbcc:	jmp    0xe69e6662
  40dbd1:	sub    BYTE PTR [edx+0x36dfa6c7],cl
  40dbd7:	add    BYTE PTR [esi-0x3a7a2a42],bl
  40dbdd:	dec    ebx
  40dbde:	push   ss
  40dbdf:	lea    edx,[ebx]
  40dbe1:	pushf  
  40dbe2:	cld    
  40dbe3:	(bad)  
  40dbe4:	mov    ecx,0x2e99e928
  40dbe9:	cmp    BYTE PTR [ecx],al
  40dbeb:	jmp    0x3f6d38
  40dbf0:	aad    0xf2
  40dbf2:	clc    
  40dbf3:	mov    DWORD PTR [ebx+0x39],ebx
  40dbf6:	(bad)  
  40dbf7:	jne    0x40dc3f
  40dbf9:	les    eax,FWORD PTR [esp+edi*4+0x7d]
  40dbfd:	sub    edx,DWORD PTR [ecx+0x68]
  40dc00:	dec    esi
  40dc01:	or     eax,0x8b860043
  40dc06:	lar    ebx,WORD PTR [esi]
  40dc09:	mov    ecx,0xf4250b44
  40dc0e:	clc    
  40dc0f:	je     0x40dc21
  40dc11:	es jmp 0x171f380
  40dc17:	lea    edx,[ebx+0xfffc9c]
  40dc1d:	add    BYTE PTR [edi],dh
  40dc1f:	inc    esi
  40dc20:	xor    eax,0x50b96e8
  40dc25:	add    BYTE PTR [ebp+0x62ff0e97],bh
  40dc2b:	xor    ebp,DWORD PTR [ebp+0x15b1e51]
  40dc31:	mov    dh,ah
  40dc33:	mov    ebp,0x98fe5b3f
  40dc38:	add    eax,0xade26200
  40dc3d:	adc    bl,0x4a
  40dc40:	or     DWORD PTR [eax],eax
  40dc42:	aaa    
  40dc43:	fneni(8087 only) 
  40dc45:	outs   dx,DWORD PTR ds:[esi]
  40dc46:	mov    ebx,DWORD PTR [ecx]
  40dc48:	add    eax,0x3a450401
  40dc4d:	mov    edi,DWORD PTR [edi+0x2d]
  40dc50:	or     dh,BYTE PTR [edx]
  40dc52:	ja     0x40dcc7
  40dc54:	xchg   ebx,eax
  40dc55:	call   DWORD PTR [eax-0x6c4b6fa6]
  40dc5b:	iret   
  40dc5c:	mov    ds:0x6f7e8ffe,al
  40dc61:	(bad)  
  40dc62:	js     0x40dc73
  40dc64:	dec    ecx
  40dc65:	mov    esp,0xffcc4307
  40dc6a:	push   0x7c58e5a
  40dc6f:	mov    bl,0x8
  40dc71:	stc    
  40dc72:	pop    eax
  40dc73:	fisttp QWORD PTR [eax-0x6fc43526]
  40dc79:	inc    esp
  40dc7a:	mov    ebp,DWORD PTR [edx-0x667cffd7]
  40dc80:	add    DWORD PTR [eax+0x0],ebp
  40dc83:	add    BYTE PTR [esi],dh
  40dc85:	pop    ebx
  40dc86:	add    DWORD PTR [eax+0x134d8930],eax
  40dc8c:	ja     0x40dceb
  40dc8e:	mov    ss,edi
  40dc90:	sub    BYTE PTR [edi-0x4],al
  40dc93:	ficomp DWORD PTR [ecx]
  40dc95:	pop    ds
  40dc96:	lods   eax,DWORD PTR ds:[esi]
  40dc97:	mov    ds:0x3e83437,al
  40dc9c:	mov    edx,0x1a193b1
  40dca1:	ins    BYTE PTR es:[edi],dx
  40dca2:	mov    bh,0x90
  40dca4:	ret    
  40dca5:	adc    BYTE PTR [edx],0xa2
  40dca8:	icebp  
  40dca9:	pop    esp
  40dcaa:	sub    eax,ebx
  40dcac:	call   0x2f594f1c
  40dcb1:	mov    edi,0x2220ab1a
  40dcb6:	call   0xe7b092be
  40dcbb:	retf   
  40dcbc:	enter  0x556b,0x7
  40dcc0:	dec    ebp
  40dcc1:	aaa    
  40dcc2:	aaa    
  40dcc3:	lods   eax,DWORD PTR ds:[esi]
  40dcc4:	popa   
  40dcc5:	daa    
  40dcc6:	mov    eax,ds:0xf730ad85
  40dccb:	jbe    0x40dd44
  40dccd:	fsubp  st(1),st
  40dccf:	inc    ecx
  40dcd0:	lods   al,BYTE PTR ds:[esi]
  40dcd1:	jb     0x40dd14
  40dcd3:	add    al,0x4c
  40dcd5:	jne    0x40dc96
  40dcd7:	call   FWORD PTR [ebp+0x34]
  40dcda:	call   0x77ed9def
  40dcdf:	sbb    bh,dh
  40dce1:	xor    ebp,DWORD PTR [ebx-0x5f]
  40dce4:	aaa    
  40dce5:	loope  0x40dcc0
  40dce7:	mov    es,WORD PTR [eax]
  40dce9:	add    bl,bh
  40dceb:	imul   edx,DWORD PTR [edi],0xffffff8f
  40dcee:	mov    bl,0x88
  40dcf0:	jnp    0x40dc93
  40dcf2:	popa   
  40dcf3:	add    al,0x63
  40dcf5:	lds    ebp,FWORD PTR [ebp-0x74751ff7]
  40dcfb:	mov    BYTE PTR [ebx-0x5f],ah
  40dcfe:	dec    ecx
  40dcff:	pop    esp
  40dd00:	fiadd  DWORD PTR gs:[eax+0x6b]
  40dd04:	bound  edx,QWORD PTR [ebx+esi*4-0x3c072b9e]
  40dd0b:	mov    al,0x4b
  40dd0d:	lahf   
  40dd0e:	sub    DWORD PTR [ebx-0x69],ebp
  40dd11:	stos   DWORD PTR es:[edi],eax
  40dd12:	stos   BYTE PTR es:[edi],al
  40dd13:	fwait
  40dd14:	add    cl,ch
  40dd16:	xor    al,0x5d
  40dd18:	cmp    DWORD PTR [esi],ebp
  40dd1a:	(bad)  
  40dd1b:	imul   ecx,DWORD PTR [ecx+0x5bbd3c9c],0xf8dfd621
  40dd25:	fs jo  0x40dcd0
  40dd28:	push   esi
  40dd29:	mov    dh,0x24
  40dd2b:	fadd   QWORD PTR [eax]
  40dd2d:	inc    ebp
  40dd2e:	jb     0x40dd64
  40dd30:	jmp    0x175c310
  40dd35:	arpl   WORD PTR [ebx+0x28e1742d],bx
  40dd3b:	xor    dl,BYTE PTR [edi-0x2f]
  40dd3e:	jg     0x40dd6c
  40dd40:	add    ecx,ebp
  40dd42:	mov    cl,0xaf
  40dd44:	in     al,0xd4
  40dd46:	xchg   edi,eax
  40dd47:	imul   edx,DWORD PTR [eax-0x3f],0xe9009997
  40dd4e:	add    BYTE PTR [eax],al
  40dd50:	mov    edx,0x621f5d75
  40dd55:	jge    0x40dd19
  40dd57:	in     eax,dx
  40dd58:	xor    al,0x1
  40dd5a:	mov    bh,BYTE PTR [ebp-0x12cfa14b]
  40dd60:	xor    al,0x34
  40dd62:	sbb    esp,0xe9418024
  40dd68:	xor    eax,0xc2365707
  40dd6d:	xor    BYTE PTR [ebp-0x12],0x82
  40dd71:	stos   BYTE PTR es:[edi],al
  40dd72:	out    0x7b,eax
  40dd74:	xor    al,0x34
  40dd76:	add    DWORD PTR [ecx+eax*1+0x57],esp
  40dd7a:	sti    
  40dd7b:	outs   dx,BYTE PTR ds:[esi]
  40dd7c:	xchg   edi,eax
  40dd7d:	push   edx
  40dd7e:	or     edx,DWORD PTR [esp+esi*1-0x1f5b73cc]
  40dd85:	cli    
  40dd86:	push   0x1343423
  40dd8b:	(bad)  
  40dd8c:	(bad)  
  40dd8d:	stc    
  40dd8e:	call   0xff0d5d93
  40dd93:	call   FWORD PTR [ebx-0x6cde8b58]
  40dd99:	repnz mov esp,0xbd35f650
  40dd9f:	inc    ebx
  40dda0:	push   ds
  40dda1:	push   ds
  40dda2:	add    BYTE PTR [eax],al
  40dda4:	push   cs
  40dda5:	mov    dh,0xfe
  40dda7:	adc    eax,0x3d60d2
  40ddac:	push   ebp
  40ddad:	lods   eax,DWORD PTR ds:[esi]
  40ddae:	neg    bl
  40ddb0:	aam    0xa8
  40ddb2:	sti    
  40ddb3:	ret    
  40ddb4:	add    BYTE PTR [eax],al
  40ddb6:	inc    edi
  40ddb7:	sar    ch,1
  40ddb9:	dec    esi
  40ddbb:	mov    edx,0xc9e07484
  40ddc0:	(bad)  
  40ddc1:	push   eax
  40ddc2:	inc    ebx
  40ddc3:	or     edx,edx
  40ddc5:	sti    
  40ddc6:	loope  0x40dd91
  40ddc8:	in     eax,0xab
  40ddca:	sbb    dh,BYTE PTR [eax]
  40ddcc:	add    DWORD PTR [ebx-0x2c75c7f5],ecx
  40ddd2:	xchg   BYTE PTR [edi+0x34],cl
  40ddd5:	add    BYTE PTR [esi-0x29ff0550],cl
  40dddb:	xor    BYTE PTR [ecx],al
  40dddd:	jbe    0x40dd7a
  40dddf:	sbb    eax,DWORD PTR [edx]
  40dde1:	pop    edi
  40dde2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dde3:	and    DWORD PTR [edx],esi
  40dde5:	leave  
  40dde6:	or     eax,0xfb0f01cd
  40ddeb:	outs   dx,BYTE PTR ds:[esi]
  40ddec:	add    ah,BYTE PTR [bx+si]
  40ddef:	mov    ebp,0x5e5e6ac3
  40ddf4:	shr    al,0x58
  40ddf7:	pop    ebx
  40ddf8:	std    
  40ddf9:	call   DWORD PTR [ecx-0x1]
  40ddfc:	mov    ch,0x90
  40ddfe:	dec    edx
  40ddff:	cmc    
  40de00:	add    BYTE PTR [ebx+0x32742ed1],al
  40de06:	sar    edx,cl
  40de08:	clc    
  40de09:	push   eax
  40de0a:	aaa    
  40de0b:	rol    BYTE PTR [edi-0x6205cc25],1
  40de11:	dec    edi
  40de12:	mov    esp,0x2f5c8a1d
  40de17:	in     al,0x57
  40de19:	fild   DWORD PTR [eax]
  40de1b:	add    BYTE PTR [ebx],bl
  40de1d:	and    bl,BYTE PTR [esi+0x160a0e7]
  40de23:	add    BYTE PTR [edx+ecx*2+0x628af588],bh
  40de2a:	nop
  40de2b:	test   BYTE PTR [ebx],dl
  40de2d:	inc    eax
  40de2e:	sahf   
  40de2f:	inc    BYTE PTR [edi+0x37ae3e33]
  40de35:	pop    ebx
  40de36:	lods   al,BYTE PTR ds:[esi]
  40de37:	cmp    ah,al
  40de39:	imul   ebx,DWORD PTR [esi-0x73ac9d76],0x1859cf5c
  40de43:	clc    
  40de44:	mov    edx,0x68556117
  40de49:	sub    ebp,DWORD PTR ds:0x51d7b00
  40de4f:	call   0x406800
  40de54:	mov    ebp,0x2f74da92
  40de59:	pop    ds
  40de5a:	pop    es
  40de5b:	push   esi
  40de5c:	(bad)
  40de60:	nop
  40de61:	pop    es
  40de62:	mov    ebx,esp
  40de64:	mov    dl,BYTE PTR [ecx-0x7d70b062]
  40de6a:	imul   edi,edi,0x78
  40de6d:	aam    0xc2
  40de6f:	pop    esi
  40de70:	adc    DWORD PTR [esi],esp
  40de72:	int3   
  40de73:	shl    DWORD PTR [ebx],0x5b
  40de76:	and    bh,0x37
  40de79:	pop    edi
  40de7a:	pop    es
  40de7b:	dec    eax
  40de7c:	jecxz  0x40dedb
  40de7e:	sar    BYTE PTR [edi+0x34740000],cl
  40de84:	rcl    BYTE PTR [edi+0x74],cl
  40de87:	xor    edx,edx
  40de89:	shr    eax,1
  40de8b:	je     0x40de41
  40de8d:	mov    cl,BYTE PTR [edx+esi*4+0x43]
  40de91:	inc    ebx
  40de92:	xor    al,0x34
  40de94:	call   0xe7ad721b
  40de99:	xor    ch,BYTE PTR [esp+ecx*4+0x218da67]
  40dea0:	lahf   
  40dea1:	push   cs
  40dea2:	mov    ebx,0x3703e87f
  40dea7:	mov    ecx,0x5c709bac
  40deac:	mov    bh,0x95
  40deae:	stc    
  40deaf:	addr16 imul eax,ebx,0x41
  40deb3:	mov    al,0x25
  40deb5:	add    al,0x37
  40deb7:	xor    al,0x73
  40deb9:	dec    eax
  40deba:	das    
  40debb:	pop    esp
  40debc:	inc    eax
  40debd:	sahf   
  40debe:	fldenv [edi+0x64]
  40dec1:	push   eax
  40dec2:	aas    
  40dec3:	add    eax,0x50738c98
  40dec8:	iret   
  40dec9:	ss enter 0xde67,0x89
  40dece:	cmp    edi,DWORD PTR [ebx+eiz*2]
  40ded1:	xchg   esp,eax
  40ded2:	or     DWORD PTR [ebx+0x2f44ac9d],edi
  40ded8:	call   0x34b599e0
  40dedd:	or     al,BYTE PTR [ecx]
  40dedf:	pop    esp
  40dee0:	ja     0x40deb8
  40dee2:	nop
  40dee3:	addr16 cli 
  40dee5:	xchg   ebp,eax
  40dee6:	add    BYTE PTR [eax],al
  40dee8:	inc    ebp
  40dee9:	addr16 push 0x27
  40deec:	mov    esi,DWORD PTR [ebx+ebx*8]
  40deef:	ret    
  40def0:	jb     0x40dee3
  40def2:	jg     0x40def8
  40def4:	mov    esi,0xe38b7be9
  40def9:	arpl   WORD PTR [esi+edx*4-0x1c],bp
  40defd:	inc    edx
  40defe:	push   0xe058de
  40df03:	out    dx,al
  40df04:	hlt    
  40df05:	mov    bl,0x7e
  40df07:	call   0xaf42bf40
  40df0c:	(bad)  
  40df0d:	sub    DWORD PTR fs:[ecx],0x1a
  40df11:	sbb    DWORD PTR [edx+0x64],edx
  40df14:	push   eax
  40df15:	pop    esp
  40df16:	call   0x1751192
  40df1b:	ins    DWORD PTR es:[edi],dx
  40df1c:	sti    
  40df1d:	xor    eax,0x34359985
  40df22:	add    DWORD PTR [ecx-0x10],ebp
  40df25:	(bad)  
  40df26:	aam    0xaa
  40df28:	xor    al,0x35
  40df2a:	jbe    0x40ded5
  40df2c:	out    0x89,al
  40df2e:	out    0x38,eax
  40df30:	xor    esi,DWORD PTR [ecx+eax*1]
  40df33:	mov    edx,0x6d136724
  40df38:	in     eax,0x26
  40df3a:	add    DWORD PTR [ebx+edi*8-0x1e],ebp
  40df3e:	push   cs
  40df3f:	ins    BYTE PTR es:[edi],dx
  40df40:	jo     0x40df9e
  40df42:	call   0x1751b02
  40df47:	fs repz fucomip st,st(0)
  40df4b:	rol    BYTE PTR [eax],cl
  40df4d:	add    cl,bh
  40df4f:	out    0x7b,al
  40df51:	shl    DWORD PTR [ecx+eiz*8],1
  40df54:	or     dh,dl
  40df56:	dec    ecx
  40df57:	fs call 0xfda7606a
  40df5d:	sti    
  40df5e:	fbstp  TBYTE PTR [edi-0x47333e8d]
  40df64:	repz mov dh,0xb3
  40df67:	mov    esp,0x338bc0c1
  40df6c:	add    ecx,ebp
  40df6e:	mov    cl,0x9f
  40df70:	int3   
  40df71:	pushf  
  40df72:	fwait
  40df73:	gs call 0xfda7bf46
  40df79:	pop    esp
  40df7a:	icebp  
  40df7b:	fwait
  40df7c:	push   eax
  40df7d:	add    BYTE PTR [ecx-0x6f741ac3],bh
  40df83:	and    ch,cl
  40df85:	pop    es
  40df86:	rol    bh,1
  40df88:	dec    BYTE PTR [ebx-0x247b5bc5]
  40df8e:	arpl   WORD PTR [eax-0x74],bp
  40df91:	inc    ebp
  40df92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df93:	and    ch,BYTE PTR [ecx+0x0]
  40df96:	retf   0xf4
  40df99:	push   0x8001321f
  40df9e:	jns    0x40dffe
  40dfa0:	dec    ecx
  40dfa1:	adc    ecx,esi
  40dfa3:	xor    DWORD PTR [edx+0x17ac51d8],ecx
  40dfa9:	fistp  DWORD PTR [eax+0x74]
  40dfac:	jmp    0xfe:0x59ae8b4d
  40dfb3:	add    BYTE PTR [ecx],bl
  40dfb5:	enter  0x8d4d,0x93
  40dfb9:	ins    DWORD PTR es:[edi],dx
  40dfba:	stc    
  40dfbb:	(bad)  
  40dfbc:	cmp    DWORD PTR [ecx+0x31ce32c1],ebx
  40dfc2:	mov    dh,BYTE PTR [ebp-0x22]
  40dfc5:	lods   eax,DWORD PTR ds:[esi]
  40dfc6:	shr    al,cl
  40dfc8:	test   BYTE PTR [ebp+edi*8-0x233a001],al
  40dfcf:	(bad)  
  40dfd0:	into   
  40dfd1:	xor    DWORD PTR [edi+0x4c],esi
  40dfd4:	fs sub eax,0xc0138b5e
  40dfda:	mov    BYTE PTR [ebp-0x6a],bl
  40dfdd:	retf   0x874
  40dfe0:	sub    esi,ebx
  40dfe2:	test   al,0x56
  40dfe4:	inc    ecx
  40dfe5:	and    BYTE PTR [ecx+0x0],ch
  40dfe8:	or     ch,ch
  40dfea:	add    al,ch
  40dfec:	hlt    
  40dfed:	cmp    DWORD PTR [ebx],eax
  40dfef:	add    BYTE PTR [eax+ebp*4],al
  40dff2:	cmp    dh,BYTE PTR [ebp-0x62]
  40dff5:	inc    esp
  40dff6:	pop    es
  40dff7:	push   esi
  40dff8:	aaa    
  40dff9:	mov    bl,0x79
  40dffb:	xor    al,0x37
  40dffd:	pop    ebx
  40dffe:	mov    BYTE PTR [ebx+esi*2+0x7fe99b0],al
  40e005:	ret    
  40e006:	jno    0x40dfb3
  40e008:	aaa    
  40e009:	pop    ebx
  40e00a:	cmp    DWORD PTR [edi+ebx*2+0x5b],0xcdf0850a
  40e012:	cdq    
  40e013:	(bad)  
  40e014:	cmp    BYTE PTR [eax+0xe791],al
  40e01a:	mov    dh,0x47
  40e01c:	add    eax,0x9a991e00
  40e021:	(bad)  
  40e022:	and    BYTE PTR [edx-0x34],ch
  40e025:	sbb    BYTE PTR [edi+ecx*2],0xa
  40e029:	xchg   ebp,eax
  40e02a:	div    BYTE PTR [eax+0x3]
  40e02d:	pop    esi
  40e02e:	mov    esp,0x4c002f0c
  40e033:	sbb    al,0xad
  40e035:	xlat   BYTE PTR ds:[ebx]
  40e036:	push   eax
  40e037:	pop    ebx
  40e038:	add    DWORD PTR [edi],ecx
  40e03a:	test   eax,0x77737502
  40e03f:	pop    ebx
  40e040:	xchg   dh,bh
  40e042:	ss call 0x63b36cb8
  40e048:	xor    DWORD PTR [ebp-0x166e946],ecx
  40e04e:	enter  0x8eca,0xc2
  40e052:	lods   al,BYTE PTR ds:[esi]
  40e053:	out    dx,eax
  40e054:	xchg   esp,eax
  40e055:	mov    BYTE PTR [edx-0x4f016a72],al
  40e05b:	jb     0x40e0a1
  40e05d:	xor    esi,DWORD PTR [edi]
  40e05f:	pop    ebx
  40e060:	mov    gs,edi
  40e062:	mov    edx,0x21850aa4
  40e067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e068:	call   0x88fc:0xc5d7c2fe
  40e06f:	xchg   ebp,eax
  40e070:	xor    eax,ebp
  40e072:	push   edx
  40e073:	xor    al,0x54
  40e075:	add    esi,DWORD PTR [edi]
  40e077:	pop    ebx
  40e078:	pusha  
  40e079:	cdq    
  40e07a:	jno    0x40e0e0
  40e07c:	sbb    BYTE PTR [bx+si],al
  40e07f:	add    BYTE PTR [edi+0x33],bl
  40e082:	adc    eax,0x77de600c
  40e087:	stos   DWORD PTR es:[edi],eax
  40e088:	inc    edx
  40e089:	pop    ds
  40e08a:	call   0x701fa292
  40e08f:	stos   DWORD PTR es:[edi],eax
  40e090:	ficomp WORD PTR [edi+0x6e]
  40e093:	call   0x7adc:0x39c67406
  40e09a:	sub    edi,edi
  40e09c:	xor    BYTE PTR [ecx],cl
  40e09e:	arpl   WORD PTR [edi+0x69f50b7],sp
  40e0a4:	aaa    
  40e0a5:	xor    al,0x9b
  40e0a7:	xor    DWORD PTR [eax+0x1198204c],eax
  40e0ad:	fs cli 
  40e0af:	mov    esi,0xdc0bf9bf
  40e0b4:	arpl   WORD PTR [ebx*4-0x67de48d1],bp
  40e0bb:	scas   eax,DWORD PTR es:[edi]
  40e0bc:	jne    0x40e0f2
  40e0be:	jmp    0x336713d5
  40e0c3:	scas   al,BYTE PTR es:[edi]
  40e0c4:	and    dh,BYTE PTR [ecx+0x63dbbf3c]
  40e0ca:	(bad)  
  40e0cb:	stos   BYTE PTR es:[edi],al
  40e0cc:	jmp    0x47f9:0xba03e78d
  40e0d3:	xor    eax,eax
  40e0d5:	jmp    0x5336e9d
  40e0da:	rcr    BYTE PTR [ebx-0x5c],1
  40e0dd:	arpl   si,dx
  40e0df:	xchg   ebx,esi
  40e0e1:	xchg   ebx,eax
  40e0e2:	aaa    
  40e0e3:	sub    al,0x0
  40e0e5:	add    BYTE PTR [edi],dh
  40e0e7:	mov    al,ds:0x350f042a
  40e0ec:	call   0xa497f4
  40e0f1:	fdivr  st(0),st
  40e0f3:	inc    esi
  40e0f4:	inc    ecx
  40e0f5:	jmp    0xc3366cad
  40e0fa:	stos   BYTE PTR es:[edi],al
  40e0fb:	jns    0x40e117
  40e0fd:	ret    0x622b
  40e100:	rol    DWORD PTR [ecx-0x16ff722e],0xb2
  40e107:	jbe    0x40e166
  40e109:	daa    
  40e10a:	sbb    ch,BYTE PTR [ebp-0x3e]
  40e10d:	in     eax,0x34
  40e10f:	mov    cl,0x43
  40e111:	mov    DWORD PTR [ebx],eax
  40e113:	lods   eax,DWORD PTR ds:[esi]
  40e114:	pop    ebx
  40e115:	mov    DWORD PTR [ebx-0x61990e97],edx
  40e11b:	mov    bh,0xc0
  40e11d:	aam    0x38
  40e11f:	mov    cl,0x73
  40e121:	dec    ecx
  40e122:	fstp   TBYTE PTR [ecx+esi*8+0x4e]
  40e126:	mov    esi,0xe052c124
  40e12b:	scas   eax,DWORD PTR es:[edi]
  40e12c:	inc    ebx
  40e12d:	inc    ebp
  40e12e:	dec    ebx
  40e12f:	arpl   WORD PTR [ebx+0x15],si
  40e132:	fistp  DWORD PTR [edi-0xc]
  40e135:	cs sahf 
  40e137:	lods   eax,DWORD PTR ds:[esi]
  40e138:	lock jb 0x40e173
  40e13b:	pop    eax
  40e13c:	push   eax
  40e13d:	jb     0x40e13c
  40e13f:	mov    edx,0xf7bc015b
  40e144:	in     al,dx
  40e145:	pusha  
  40e146:	xor    BYTE PTR [edi+eax*4-0x5c],ah
  40e14a:	add    BYTE PTR [eax],al
  40e14c:	test   al,0x5a
  40e14e:	lods   eax,DWORD PTR ds:[esi]
  40e14f:	in     eax,0x34
  40e151:	xor    al,0x85
  40e153:	sub    DWORD PTR [eax],edi
  40e155:	inc    esi
  40e156:	push   edi
  40e157:	add    DWORD PTR [edx+0x28],esi
  40e15a:	add    ecx,ebp
  40e15c:	loop   0x40e1db
  40e15e:	mov    edx,DWORD PTR [ebx+ebx*8+0x5a]
  40e162:	fcmove st,st(7)
  40e165:	popa   
  40e166:	jmp    0x928a0f4
  40e16b:	add    BYTE PTR ds:0x5e12c172,ah
  40e171:	cmp    BYTE PTR [ecx-0x2c443aa3],cl
  40e177:	push   ebx
  40e178:	jecxz  0x40e173
  40e17a:	call   0xe5d52d08
  40e17f:	(bad)  
  40e180:	pop    edx
  40e181:	add    DWORD PTR ss:[ebx+0xffee1c6],ecx
  40e188:	ficomp DWORD PTR [eax]
  40e18a:	add    BYTE PTR [eax],al
  40e18c:	dec    esi
  40e18d:	and    edi,esi
  40e18f:	(bad)  
  40e190:	(bad)  
  40e193:	push   eax
  40e194:	sub    DWORD PTR [ebp+0x767de474],edi
  40e19a:	in     eax,0x3b
  40e19c:	fwait
  40e19d:	add    DWORD PTR ss:[esi+ebx*2-0x6caceccf],eax
  40e1a5:	dec    edx
  40e1a6:	jmp    0xfda3a093
  40e1ab:	dec    DWORD PTR [edx+0x57175]
  40e1b1:	add    ch,al
  40e1b3:	jae    0x40e1f9
  40e1b5:	sti    
  40e1b6:	pop    ds
  40e1b7:	stc    
  40e1b8:	push   ecx
  40e1b9:	lea    esp,[ebx+0xa9ae58d]
  40e1bf:	add    DWORD PTR ss:[ebx+0x75fee216],ecx
  40e1c6:	push   ss
  40e1c7:	jge    0x40e20d
  40e1c9:	sti    
  40e1ca:	add    edx,esp
  40e1cc:	push   ss
  40e1cd:	add    esi,ecx
  40e1cf:	xor    eax,0x914e3d81
  40e1d4:	inc    edx
  40e1d5:	add    bh,bl
  40e1d7:	inc    esp
  40e1d8:	push   es
  40e1d9:	xor    ah,BYTE PTR ds:0xce00958e
  40e1df:	xor    eax,0xbbdab58c
  40e1e4:	(bad)  
  40e1e5:	push   DWORD PTR [edi]
  40e1e7:	jae    0x40e1aa
  40e1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1ea:	aaa    
  40e1eb:	dec    ebx
  40e1ec:	mov    BYTE PTR [edi+edx*8+0x3b],al
  40e1f0:	xchg   esi,eax
  40e1f1:	je     0x40e266
  40e1f3:	out    0xbe,al
  40e1f5:	dec    edi
  40e1f6:	lahf   
  40e1f7:	mov    cl,0x91
  40e1f9:	inc    BYTE PTR [eax-0x4d13c82a]
  40e1ff:	jbe    0x40e210
  40e201:	push   ds
  40e202:	ret    0x6518
  40e205:	dec    edi
  40e206:	fisttp WORD PTR [edx+0x55]
  40e209:	inc    edx
  40e20a:	aaa    
  40e20b:	xor    eax,DWORD PTR [eax+eax*1]
  40e20e:	aaa    
  40e20f:	retf   
  40e210:	xchg   ebp,eax
  40e211:	adc    al,0x3
  40e213:	jle    0x40e256
  40e215:	add    BYTE PTR [eax],al
  40e217:	add    BYTE PTR [ebx+eax*8-0x39e22573],bh
  40e21e:	xchg   esi,eax
  40e21f:	ret    0xa84c
  40e222:	mov    BYTE PTR [ebx+ecx*4-0x780169ff],al
  40e229:	fmul   DWORD PTR [edi-0x45]
  40e22c:	and    esi,edx
  40e22e:	xchg   ebp,eax
  40e22f:	out    0x94,eax
  40e231:	pop    ebx
  40e232:	add    DWORD PTR [eax],eax
  40e234:	mov    esp,0xe48a91a7
  40e239:	repnz mov ebx,0x844b372f
  40e23f:	cli    
  40e240:	aaa    
  40e241:	and    eax,DWORD PTR ds:0x278f6900
  40e247:	add    ecx,DWORD PTR [eax-0x510ff02a]
  40e24d:	(bad)  
  40e251:	arpl   WORD PTR [eax+0x2ec89744],cx
  40e257:	push   eax
  40e258:	pop    edi
  40e259:	dec    ebx
  40e25a:	push   ebp
  40e25b:	inc    edx
  40e25c:	aaa    
  40e25d:	xor    ecx,DWORD PTR [esp+ecx*1]
  40e260:	xor    eax,0x8889e834
  40e265:	sbb    al,0x55
  40e267:	xchg   esp,eax
  40e268:	and    al,0x3a
  40e26a:	lods   al,BYTE PTR ds:[esi]
  40e26c:	bound  esp,QWORD PTR ds:0xb6aa03e8
  40e272:	stos   DWORD PTR es:[edi],eax
  40e273:	cwde   
  40e274:	xchg   ecx,eax
  40e275:	pusha  
  40e276:	pop    ss
  40e277:	lods   al,BYTE PTR ds:[esi]
  40e278:	inc    edx
  40e279:	mov    fs,edi
  40e27b:	add    eax,DWORD PTR [eax]
  40e27d:	add    BYTE PTR [edi+0x2803bfde],dh
  40e283:	mov    bh,0xc6
  40e285:	xchg   ebp,eax
  40e286:	jno    0x40e2e8
  40e288:	sahf   
  40e289:	adc    BYTE PTR [edi+0x4b],ah
  40e28c:	(bad)  
  40e28d:	shl    BYTE PTR [eax+0x60],cl
  40e290:	xor    BYTE PTR [ecx-0x2d799fa6],0x7f
  40e297:	mov    ah,0x82
  40e299:	(bad)  
  40e29a:	cmp    edi,eax
  40e29c:	test   al,0x29
  40e29e:	xor    eax,0xcebd6302
  40e2a3:	xor    edx,DWORD PTR [ebx]
  40e2a5:	lds    ebx,FWORD PTR [eax]
  40e2a7:	call   0x2f77e6b0
  40e2ac:	sahf   
  40e2ad:	pop    ebx
  40e2ae:	mov    al,0xe8
  40e2b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b1:	add    esi,DWORD PTR [edi+ebx*2-0x4e55ef18]
  40e2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2b9:	or     esp,DWORD PTR [edi-0x4f]
  40e2bc:	ins    BYTE PTR es:[edi],dx
  40e2bd:	push   edi
  40e2be:	cld    
  40e2bf:	pop    edi
  40e2c0:	xor    ebp,DWORD PTR cs:[ebx+esi*2-0x5218c78e]
  40e2c8:	push   esp
  40e2c9:	push   edi
  40e2ca:	in     al,dx
  40e2cb:	pop    edi
  40e2cc:	push   ss
  40e2cd:	stos   DWORD PTR es:[edi],eax
  40e2ce:	add    BYTE PTR ds:0x64ac03e8,ah
  40e2d4:	ins    BYTE PTR es:[edi],dx
  40e2d5:	lea    eax,[ecx-0x47]
  40e2d8:	jne    0x40e270
  40e2da:	leave  
  40e2db:	pop    edi
  40e2dc:	add    BYTE PTR [edi+esi*4+0x73],ah
  40e2e0:	sti    
  40e2e1:	out    dx,al
  40e2e2:	add    BYTE PTR [eax],al
  40e2e4:	mov    ds:0x1cb5e8ef,al
  40e2e9:	pop    edi
  40e2ea:	std    
  40e2eb:	rol    ch,1
  40e2ed:	popa   
  40e2ee:	std    
  40e2ef:	(bad)  
  40e2f0:	mov    ebx,0x33e9e8e0
  40e2f5:	mov    ecx,0x5eaac76e
  40e2fa:	std    
  40e2fb:	xor    al,0xa3
  40e2fd:	dec    esp
  40e2fe:	pop    edi
  40e2ff:	mov    bh,0xaa
  40e301:	pop    esi
  40e302:	push   ebx
  40e303:	(bad)  
  40e304:	iret   
  40e305:	mov    dl,0xec
  40e307:	add    DWORD PTR [esi],esp
  40e309:	push   es
  40e30a:	mov    dl,ah
  40e30c:	test   al,0x45
  40e30e:	inc    ecx
  40e30f:	jmp    0x64966ac3
  40e314:	sahf   
  40e315:	fadd   QWORD PTR [edi]
  40e317:	xchg   BYTE PTR [eax+0x30],al
  40e31a:	(bad)  
  40e31b:	xchg   edi,eax
  40e31c:	mov    esi,0x29928387
  40e321:	ror    BYTE PTR [ebx-0x75fbd4dc],cl
  40e327:	lods   al,BYTE PTR ds:[esi]
  40e328:	cmp    al,0x4c
  40e32a:	push   0x62
  40e32c:	ret    0x505d
  40e32f:	inc    ecx
  40e330:	cmp    DWORD PTR [ebx-0x3],esp
  40e333:	dec    esi
  40e334:	scas   al,BYTE PTR es:[edi]
  40e335:	pop    es
  40e336:	or     DWORD PTR [edx+0x30],ebp
  40e339:	pop    esp
  40e33a:	add    BYTE PTR [ebx-0x53398941],bl
  40e340:	fcomp  DWORD PTR [esi-0x78]
  40e343:	xchg   esp,eax
  40e344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e345:	stos   DWORD PTR es:[edi],eax
  40e346:	inc    ebx
  40e347:	sbb    eax,0x9ea30000
  40e34c:	add    ch,cl
  40e34e:	xor    al,0xb8
  40e350:	rcr    BYTE PTR [ebp-0x45e9b631],0xc3
  40e357:	out    0xc,eax
  40e359:	add    BYTE PTR [ecx+0x4550d3c7],dh
  40e35f:	pop    ds
  40e360:	adc    DWORD PTR [ebx-0x4c826fe7],ecx
  40e366:	into   
  40e367:	xor    al,BYTE PTR [ebp-0x73abec40]
  40e36d:	inc    ebp
  40e36e:	jp     0x40e2fa
  40e370:	and    DWORD PTR [ebx],eax
  40e372:	mov    ?,WORD PTR [edx]
  40e374:	mov    bh,al
  40e376:	adc    ecx,eax
  40e378:	je     0x40e356
  40e37a:	ss pop ds
  40e37c:	in     eax,dx
  40e37d:	jne    0x40e305
  40e37f:	(bad)  
  40e380:	je     0x40e376
  40e382:	jbe    0x40e3db
  40e384:	das    
  40e385:	add    BYTE PTR [esi-0x7a0427c],cl
  40e38b:	sbb    al,0xc8
  40e38d:	ret    0x325a
  40e390:	cmp    DWORD PTR [ebp-0x46],0xa9087432
  40e397:	sub    eax,0x8456e8f5
  40e39c:	std    
  40e39d:	dec    DWORD PTR [esi]
  40e39f:	xor    ch,dl
  40e3a1:	out    0x23,eax
  40e3a3:	lods   eax,DWORD PTR ds:[esi]
  40e3a4:	jmp    0x576602fa
  40e3a9:	push   edi
  40e3aa:	stos   DWORD PTR es:[edi],eax
  40e3ab:	push   ds
  40e3ac:	stc    
  40e3ad:	push   eax
  40e3ae:	add    BYTE PTR [eax],al
  40e3b0:	push   es
  40e3b1:	sar    ebp,1
  40e3b3:	dec    DWORD PTR [esi]
  40e3b5:	mov    cl,BYTE PTR [edx+esi*8-0xf753797]
  40e3bc:	pusha  
  40e3bd:	push   ds
  40e3be:	inc    BYTE PTR [eax]
  40e3c0:	xchg   ebx,eax
  40e3c1:	scas   eax,DWORD PTR es:[edi]
  40e3c2:	jno    0x40e400
  40e3c4:	xchg   ebp,eax
  40e3c5:	idiv   al
  40e3c7:	push   0xffffffe6
  40e3c9:	test   bh,cl
  40e3cb:	mov    ebx,DWORD PTR [edi]
  40e3cd:	sub    dh,dh
  40e3cf:	not    DWORD PTR [ebx-0x5d]
  40e3d2:	je     0x40e400
  40e3d4:	aaa    
  40e3d5:	fdiv   st,st(5)
  40e3d7:	xor    BYTE PTR [ebp+ebp*1+0x6a44f2d9],ch
  40e3de:	daa    
  40e3df:	adc    al,0xc8
  40e3e1:	call   0x4fb970ef
  40e3e6:	xor    edi,edi
  40e3e8:	and    al,BYTE PTR [edi-0x35c8c015]
  40e3ee:	enter  0xb20b,0x8b
  40e3f2:	sbb    BYTE PTR [ecx],cl
  40e3f4:	mov    ah,0x8e
  40e3f6:	in     al,dx
  40e3f7:	cmp    bl,BYTE PTR [ecx+edi*8-0x72c4155b]
  40e3fe:	inc    edi
  40e3ff:	push   DWORD PTR [esi]
  40e401:	inc    ebp
  40e402:	popf   
  40e403:	mov    cl,0x46
  40e405:	dec    ebx
  40e406:	add    DWORD PTR [edx+0x5e318df2],ecx
  40e40c:	or     al,0xa4
  40e40e:	mov    BYTE PTR [ebx],0x37
  40e411:	sub    BYTE PTR [esi-0x15],bh
  40e414:	add    BYTE PTR [eax],al
  40e416:	mov    dh,0xb7
  40e418:	call   0x868c1b1f
  40e41d:	jl     0x40e45e
  40e41f:	dec    ebx
  40e420:	ss push esi
  40e422:	cmp    bh,dl
  40e424:	hlt    
  40e425:	add    BYTE PTR [edi],dh
  40e427:	dec    ebx
  40e428:	mov    dh,bh
  40e42a:	sub    bh,dl
  40e42c:	cld    
  40e42d:	add    BYTE PTR [edi],dh
  40e42f:	dec    ebx
  40e430:	cmp    bh,bh
  40e432:	mov    ds:0x66ef9963,al
  40e437:	dec    ebx
  40e438:	add    DWORD PTR [ebx+0x74add7ff],ecx
  40e43e:	cmp    BYTE PTR [ecx-0x3f],bl
  40e441:	call   0x4230bc
  40e446:	mov    bh,0x67
  40e448:	adc    esp,edx
  40e44a:	je     0x40e497
  40e44c:	add    al,0x77
  40e44e:	ds xor al,0x2e
  40e451:	dec    ecx
  40e452:	cmp    al,0x34
  40e454:	adc    DWORD PTR [ecx-0x7f18a320],edi
  40e45a:	mov    ds:0xd1930c57,eax
  40e45f:	dec    ebx
  40e460:	mov    ds:0x6c5cc869,eax
  40e465:	dec    ecx
  40e466:	add    DWORD PTR [ebx],0xffffff80
  40e469:	imul   edi,DWORD PTR [eax+0x7a7ee75c],0x3
  40e470:	rcl    al,1
  40e472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e473:	pop    esp
  40e474:	fiadd  WORD PTR [eax-0x6d2a1845]
  40e47a:	add    BYTE PTR [eax],al
  40e47c:	cdq    
  40e47d:	add    ebx,DWORD PTR [ebp+0x58]
  40e480:	ins    BYTE PTR es:[edi],dx
  40e481:	pop    edi
  40e482:	(bad)  
  40e483:	xchg   edx,eax
  40e484:	nop
  40e485:	cmp    al,0xe
  40e487:	add    al,0x37
  40e489:	test   eax,0x4b857e9e
  40e48e:	push   ebp
  40e48f:	loope  0x40e501
  40e491:	pop    esp
  40e492:	push   0xe7746892
  40e497:	add    ebp,ecx
  40e499:	sub    ch,BYTE PTR [edi-0x17cfa0b8]
  40e49f:	add    esi,DWORD PTR [edi]
  40e4a1:	dec    ecx
  40e4a2:	sbb    eax,0x7eb07fd7
  40e4a7:	pop    es
  40e4a8:	xor    bh,al
  40e4aa:	test   al,0x1d
  40e4ac:	xor    eax,0x9ec962fe
  40e4b1:	xor    al,0x13
  40e4b3:	lds    edx,FWORD PTR [eax]
  40e4b5:	in     al,0xa
  40e4b7:	add    al,0x37
  40e4b9:	sub    ebx,DWORD PTR [esi-0x581f577d]
  40e4bf:	add    edi,DWORD PTR [esi+0x863ff1]
  40e4c5:	ss mov ch,0xe2
  40e4c8:	mov    bl,0xf1
  40e4ca:	add    cl,ah
  40e4cc:	inc    esp
  40e4cd:	test   eax,0x5ac00d83
  40e4d2:	std    
  40e4d3:	mov    ecx,0x54877269
  40e4d8:	nop
  40e4d9:	pop    edi
  40e4da:	std    
  40e4db:	push   ss
  40e4dc:	mov    esp,0xe92e7b
  40e4e1:	add    BYTE PTR [edi+ebp*4],dh
  40e4e4:	lock ins BYTE PTR es:[edi],dx
  40e4e6:	scas   al,BYTE PTR es:[edi]
  40e4e7:	loopne 0x40e4ff
  40e4e9:	ins    BYTE PTR es:[edi],dx
  40e4ea:	scas   eax,DWORD PTR es:[edi]
  40e4eb:	push   edi
  40e4ec:	sti    
  40e4ed:	mul    BYTE PTR [esi+0x1d19e8eb]
  40e4f3:	pop    ebx
  40e4f4:	std    
  40e4f5:	rcr    BYTE PTR [edx+0x5b],1
  40e4f8:	std    
  40e4f9:	fisub  WORD PTR [edx]
  40e4fb:	xchg   WORD PTR [ebx+ebx*4+0x5a],dx
  40e500:	jae    0x40e4e3
  40e502:	adc    eax,esi
  40e504:	mov    esp,0xf8e0a61f
  40e509:	sbb    DWORD PTR [ebx],esp
  40e50b:	xor    al,0xbd
  40e50d:	sub    dh,BYTE PTR [ebx]
  40e50f:	dec    esp
  40e510:	imul   esp,eax,0x2c89343a
  40e516:	push   0x1e
  40e518:	repnz adc eax,0x49e9022d
  40e51e:	sbb    DWORD PTR [ebx-0x3],0x5c
  40e522:	mov    eax,0xa686fb57
  40e527:	jmp    0x40e511
  40e529:	popa   
  40e52a:	into   
  40e52b:	pop    edx
  40e52c:	std    
  40e52d:	arpl   ax,si
  40e52f:	mov    DWORD PTR cs:[edx+esi*1],esp
  40e533:	push   es
  40e534:	jmp    0xfd9be8aa
  40e539:	jae    0x40e5b3
  40e53b:	das    
  40e53c:	jmp    0x7a35:0x7117b4a6
  40e543:	xor    al,0x0
  40e545:	add    BYTE PTR [eax],al
  40e547:	add    BYTE PTR [ecx],al
  40e549:	lods   eax,DWORD PTR ds:[esi]
  40e54a:	idiv   esi
  40e54c:	inc    ecx
  40e54d:	lds    ecx,FWORD PTR [ebp+esi*4-0x15496]
  40e554:	jbe    0x40e56b
  40e556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e557:	add    dh,bl
  40e559:	fld    DWORD PTR [esp+edi*4-0x62]
  40e55d:	ds cdq 
  40e55f:	add    dh,cl
  40e561:	ss mov al,dh
  40e564:	mov    ?,WORD PTR [esi-0x3ace0fb3]
  40e56a:	mov    WORD PTR [ebp+0x2],es
  40e56d:	and    BYTE PTR [ecx+0x0],ch
  40e570:	add    dh,cl
  40e572:	add    BYTE PTR [eax-0x61],ch
  40e575:	add    DWORD PTR ss:[eax+0x13496191],eax
  40e57c:	dec    esi
  40e57d:	xor    BYTE PTR [edx-0x75788628],cl
  40e583:	mov    BYTE PTR [edi+eax*4-0x412201b3],0x37
  40e58b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e58c:	mov    ?,WORD PTR [esi]
  40e58e:	mov    eax,ebx
  40e590:	and    BYTE PTR [ecx],cl
  40e592:	enter  0x5ac2,0x36
  40e596:	push   esp
  40e597:	mov    eax,edx
  40e599:	and    eax,0xf1d35757
  40e59e:	cld    
  40e59f:	push   eax
  40e5a0:	ss retf 0xfffd
  40e5a4:	pop    esi
  40e5a5:	mov    esi,0xc3b1f0a8
  40e5aa:	mov    dh,al
  40e5ac:	add    BYTE PTR [eax],al
  40e5ae:	fstp   TBYTE PTR [ecx+esi*2-0x30e2ae0]
  40e5b5:	mov    ecx,0x136c5
  40e5ba:	dec    ebp
  40e5bb:	mov    ds:0xbc89f98a,al
  40e5c0:	test   dl,dl
  40e5c2:	aaa    
  40e5c3:	js     0x40e5c4
  40e5c5:	cmp    BYTE PTR [edx-0x43f6ec19],al
  40e5cb:	mov    al,ds:0xe63688f9
  40e5d0:	(bad)  
  40e5d1:	jmp    0x4b20:0xed99b92f
  40e5d8:	add    DWORD PTR [ebx],esi
  40e5da:	div    DWORD PTR [edx+0x2f]
  40e5dd:	leave  
  40e5de:	cmc    
  40e5df:	dec    edi
  40e5e0:	add    DWORD PTR [ebp-0x54],edx
  40e5e3:	das    
  40e5e4:	xor    edx,DWORD PTR [ecx+0x69]
  40e5e7:	clc    
  40e5e8:	inc    esi
  40e5e9:	cld    
  40e5ea:	lds    esp,FWORD PTR [di]
  40e5ed:	call   0xfece414d
  40e5f2:	lods   al,BYTE PTR ds:[esi]
  40e5f3:	adc    eax,DWORD PTR [edi+0x7c672bc8]
  40e5f9:	inc    esp
  40e5fa:	stos   DWORD PTR es:[edi],eax
  40e5fb:	add    eax,0x198532cb
  40e600:	xchg   esi,eax
  40e601:	cmc    
  40e602:	mov    dl,0x9d
  40e604:	pop    ss
  40e605:	push   cs
  40e606:	dec    esi
  40e607:	add    BYTE PTR [ecx+0x37e63e71],dl
  40e60d:	or     BYTE PTR [esi+0xc07a4d],ch
  40e613:	add    BYTE PTR [ebx+edx*2+0x5aa2e834],cl
  40e61a:	add    DWORD PTR [eax],eax
  40e61c:	and    al,0x8b
  40e61e:	cs leave 
  40e620:	jne    0x40e671
  40e622:	add    DWORD PTR [edx+0x2b],ebp
  40e625:	xor    edi,DWORD PTR [ebp+0x64]
  40e628:	hlt    
  40e629:	dec    edx
  40e62a:	cdq    
  40e62b:	add    DWORD PTR [ebp+0x6533014d],edx
  40e631:	jbe    0x40e5ea
  40e633:	jae    0x40e631
  40e635:	int    0xf
  40e637:	or     BYTE PTR ds:0x8288d849,dh
  40e63d:	xor    al,0x64
  40e63f:	shl    eax,cl
  40e641:	stos   BYTE PTR es:[edi],al
  40e642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e644:	pop    ebp
  40e645:	out    dx,eax
  40e646:	fist   WORD PTR [eax]
  40e648:	pop    ebx
  40e649:	sbb    al,0xf4
  40e64b:	sti    
  40e64c:	cmp    DWORD PTR [edi],0x0
  40e64f:	cmp    BYTE PTR [edi],ch
  40e651:	xor    esi,DWORD PTR [ebp-0x168c4a02]
  40e657:	retf   0x2c7b
  40e65a:	fbstp  TBYTE PTR [edi-0x58]
  40e65d:	mov    ah,0xb4
  40e65f:	(bad)  
  40e660:	loope  0x40e6ae
  40e662:	test   DWORD PTR [ebx-0x34],0x10c3da7c
  40e669:	jne    0x40e6cd
  40e66b:	sub    edi,ebx
  40e66d:	mov    ah,0xb4
  40e66f:	pop    ecx
  40e671:	and    eax,0x92c39c28
  40e676:	jmp    0x7540e67e
  40e67b:	das    
  40e67c:	call   0x3c5b6d53
  40e681:	call   0x7b4bc6ba
  40e686:	imul   DWORD PTR [ebx]
  40e688:	adc    eax,edx
  40e68a:	add    al,0x38
  40e68c:	sbb    edi,DWORD PTR [ebp+0x3d4440]
  40e692:	aas    
  40e693:	add    al,0xe9
  40e695:	pop    ss
  40e696:	sub    eax,0x1b3ff2f3
  40e69b:	xor    BYTE PTR [edi+eax*1],dh
  40e69e:	test   DWORD PTR [esp+edx*4-0x2e],0x43e54ca0
  40e6a6:	dec    esp
  40e6a7:	xor    al,0x63
  40e6a9:	inc    esp
  40e6aa:	aas    
  40e6ab:	jbe    0x40e690
  40e6ad:	add    edi,DWORD PTR [ebx+ebp*8-0x2190770d]
  40e6b4:	icebp  
  40e6b5:	jp     0x40e6a7
  40e6b7:	sub    eax,DWORD PTR [ecx]
  40e6b9:	pusha  
  40e6ba:	ins    BYTE PTR es:[edi],dx
  40e6bb:	sub    BYTE PTR [edx-0x768cc8d7],cl
  40e6c1:	mov    ecx,0xdbcb1b1c
  40e6c6:	daa    
  40e6c7:	add    cl,BYTE PTR [edx-0xcccc727]
  40e6cd:	adc    cl,cl
  40e6cf:	stc    
  40e6d0:	jno    0x40e6ad
  40e6d2:	jle    0x40e718
  40e6d4:	inc    eax
  40e6d5:	jo     0x40e713
  40e6d7:	sub    BYTE PTR [ebp+0x385e4f1b],al
  40e6dd:	fadd   DWORD PTR [eax]
  40e6df:	add    BYTE PTR [edi+0x78],cl
  40e6e2:	aas    
  40e6e3:	jo     0x40e701
  40e6e5:	sub    BYTE PTR [edx],dh
  40e6e7:	sub    ebp,esi
  40e6e9:	xlat   BYTE PTR ds:[ebx]
  40e6ea:	cmp    eax,0x332f28e9
  40e6ef:	sub    DWORD PTR [ebx+0x34e900aa],ebp
  40e6f5:	add    edi,esi
  40e6f7:	jne    0x40e6c9
  40e6f9:	das    
  40e6fa:	(bad)  
  40e6fb:	fdivr  QWORD PTR [eax+0x45]
  40e6fe:	inc    ecx
  40e6ff:	jmp    0xc2c46631
  40e704:	xor    dh,BYTE PTR [eax]
  40e706:	xor    ebp,DWORD PTR [ecx+0x6456e0be]
  40e70c:	sub    ch,BYTE PTR [edx+eax*4]
  40e70f:	rdpmc  
  40e711:	loope  0x40e734
  40e713:	je     0x40e70b
  40e715:	xor    DWORD PTR [ecx-0x2f],edx
  40e718:	push   es
  40e719:	or     DWORD PTR [ecx],eax
  40e71b:	jmp    0xa9c5180d
  40e720:	dec    edi
  40e721:	adc    BYTE PTR [edx-0x5a],dl
  40e724:	aas    
  40e725:	adc    BYTE PTR [ecx],dl
  40e727:	cmp    DWORD PTR [edx-0xb00eec0],ebp
  40e72d:	xor    eax,DWORD PTR [edx+0x5dad37a5]
  40e733:	add    BYTE PTR [edx-0x44],dl
  40e736:	sub    ecx,DWORD PTR [ebx+0x4c8c2c11]
  40e73c:	push   es
  40e73d:	xor    ch,cl
  40e73f:	retf   
  40e740:	jmp    0x40e774
  40e742:	add    DWORD PTR [eax+eax*1+0x53f4e00],eax
  40e749:	xor    cl,BYTE PTR [esi-0x43]
  40e74c:	xor    DWORD PTR [ebx+0x44ea818],ecx
  40e752:	sbb    eax,0x79530518
  40e757:	cmp    al,0x25
  40e759:	adc    BYTE PTR [edi+0x101014a7],bl
  40e75f:	repz add BYTE PTR [ebx+0x5f003412],al
  40e766:	rcr    bl,cl
  40e768:	inc    esi
  40e769:	add    al,0x65
  40e76b:	push   esi
  40e76c:	ret    
  40e76d:	add    al,0xd6
  40e76f:	xor    bh,dh
  40e771:	inc    edi
  40e772:	rcr    bl,cl
  40e774:	inc    esi
  40e775:	add    al,0x45
  40e777:	push   esi
  40e778:	ret    
  40e779:	add    al,0xc6
  40e77b:	xor    bh,dh
  40e77d:	inc    edi
  40e77e:	mov    ds:0xc55e0102,al
  40e783:	je     0x40e786
  40e785:	add    BYTE PTR [ebx-0x23],ah
  40e788:	jmp    0x7571210d
  40e78d:	add    al,0x2c
  40e78f:	jo     0x40e77b
  40e791:	popa   
  40e792:	inc    eax
  40e793:	test   eax,0x98050874
  40e798:	in     eax,0xe6
  40e79a:	mov    eax,0xae8bfea7
  40e79f:	fnstenv [eax+ecx*1-0x2d]
  40e7a3:	shl    BYTE PTR [esp+eax*1+0x7c],0x72
  40e7a8:	jmp    0xfe1e:0x1d000048
  40e7af:	adc    eax,0x3fef8937
  40e7b4:	aaa    
  40e7b5:	sar    BYTE PTR [esp+eax*1],cl
  40e7b8:	mov    dl,0x14
  40e7ba:	add    cl,BYTE PTR [ebp-0x382765cd]
  40e7c0:	ret    0xf956
  40e7c3:	add    bh,BYTE PTR [ecx]
  40e7c5:	cmp    al,0x35
  40e7c7:	jmp    FWORD PTR [edx+0x47148c63]
  40e7cd:	pop    ebp
  40e7ce:	inc    ecx
  40e7cf:	add    BYTE PTR [esi-0x62],bl
  40e7d2:	add    eax,0x804f788b
  40e7d7:	ret    
  40e7d8:	xor    edx,DWORD PTR [edx-0x5fc90780]
  40e7de:	cld    
  40e7df:	(bad)  
  40e7e0:	sub    ebx,esi
  40e7e2:	pushf  
  40e7e3:	sub    al,0x37
  40e7e5:	dec    ebx
  40e7e6:	and    BYTE PTR ds:0x43d0e37,0xcc
  40e7ed:	push   eax
  40e7ee:	cdq    
  40e7ef:	pop    ds
  40e7f0:	and    cl,BYTE PTR [ebx+0x1]
  40e7f3:	mov    al,0x36
  40e7f5:	test   DWORD PTR [esi],ebp
  40e7f7:	ret    0x4b3b
  40e7fa:	ss mov ecx,ebx
  40e7fd:	int3   
  40e7fe:	popf   
  40e7ff:	aaa    
  40e800:	cmp    ecx,DWORD PTR [ebx+0x1]
  40e803:	sub    DWORD PTR [edx],0x53
  40e806:	add    DWORD PTR [ebx+0x9],edx
  40e809:	push   ss
  40e80a:	cli    
  40e80b:	sub    DWORD PTR [ecx+0x4b],0x1
  40e80f:	add    BYTE PTR [eax],al
  40e811:	add    BYTE PTR ds:0x88532e4f,bl
  40e817:	add    ch,bh
  40e819:	mov    edx,?
  40e81b:	call   0x3fef:0x7b22ff34
  40e822:	aaa    
  40e823:	retf   0xbc0
  40e826:	mov    bh,0x48
  40e828:	adc    esp,edx
  40e82a:	hlt    
  40e82b:	xor    ebp,eax
  40e82d:	add    al,0xe0
  40e82f:	sub    al,0xda
  40e831:	ret    
  40e832:	pop    edi
  40e833:	pop    edx
  40e834:	out    0x3,eax
  40e836:	aaa    
  40e837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e838:	push   esp
  40e839:	test   al,0x43
  40e83b:	push   ebp
  40e83c:	xchg   BYTE PTR [esi+ebx*4-0x3dfc186e],bl
  40e843:	out    dx,al
  40e844:	cmp    esi,DWORD PTR [ebx*4+0x70c262cf]
  40e84b:	dec    esp
  40e84c:	in     eax,0x98
  40e84e:	sbb    DWORD PTR [ebp+0x6c],edx
  40e851:	sbb    DWORD PTR [esi+edx*2-0x588774aa],0x54fdb894
  40e85c:	inc    esi
  40e85d:	pushf  
  40e85e:	pop    eax
  40e85f:	or     ch,al
  40e861:	add    edi,DWORD PTR [eax+eax*4+0x4be71164]
  40e868:	adc    eax,0xda54e0de
  40e86d:	ret    
  40e86e:	dec    esi
  40e86f:	xor    al,0xa8
  40e871:	fwait
  40e872:	in     al,0x34
  40e874:	call   0x3840e87c
  40e879:	sahf   
  40e87a:	dec    edi
  40e87b:	je     0x40e8c1
  40e87d:	hlt    
  40e87e:	out    0x86,eax
  40e880:	mov    ecx,0xc3d07532
  40e885:	out    dx,al
  40e886:	fbstp  TBYTE PTR [ebx]
  40e888:	mov    edx,0xa18813ae
  40e88d:	push   esp
  40e88e:	aaa    
  40e88f:	jg     0x40e906
  40e891:	test   al,0xbd
  40e893:	ret    0x7fbb
  40e896:	ror    DWORD PTR [edx+0x3e83189],cl
  40e89c:	aaa    
  40e89d:	dec    esp
  40e89e:	add    edi,ebx
  40e8a0:	js     0x40e8f6
  40e8a2:	jb     0x40e837
  40e8a4:	mov    ebx,0x643c005d
  40e8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8aa:	or     DWORD PTR [ebp+0x39fd55af],0xffffffbb
  40e8b1:	or     ah,BYTE PTR [ebp+0x774b34e9]
  40e8b7:	xchg   esi,eax
  40e8b8:	mov    ebp,0xab148b55
  40e8bd:	stos   DWORD PTR es:[edi],eax
  40e8be:	pop    ebx
  40e8bf:	icebp  
  40e8c0:	lods   eax,DWORD PTR ds:[esi]
  40e8c1:	fisttp WORD PTR [eax]
  40e8c3:	ins    BYTE PTR es:[edi],dx
  40e8c4:	ja     0x40e84e
  40e8c6:	push   esi
  40e8c7:	push   ds
  40e8c8:	arpl   sp,bx
  40e8ca:	add    BYTE PTR ds:0x2fe93479,ch
  40e8d0:	aaa    
  40e8d1:	add    DWORD PTR ss:[ebx-0x24],esi
  40e8d5:	rol    BYTE PTR [ebx+0x59],0xf9
  40e8d9:	arpl   WORD PTR [ebx+eiz*4+0x0],si
  40e8dd:	add    BYTE PTR [esi+0x5c],al
  40e8e0:	not    DWORD PTR ds:0xabea3433
  40e8e6:	mov    ah,0x10
  40e8e8:	jno    0x40e907
  40e8ea:	jno    0x40e920
  40e8ec:	add    dh,bl
  40e8ee:	mov    dh,0xf5
  40e8f0:	std    
  40e8f1:	lods   eax,DWORD PTR es:[esi]
  40e8f3:	shl    BYTE PTR [ebx-0x2ad40c3],0x1
  40e8fa:	xchg   ecx,eax
  40e8fb:	xchg   esp,eax
  40e8fc:	add    cl,ch
  40e8fe:	aas    
  40e8ff:	clc    
  40e900:	mov    ah,0x99
  40e902:	sbb    bl,cl
  40e904:	mov    DWORD PTR [edi],esp
  40e906:	fs pop esp
  40e908:	lds    eax,FWORD PTR ds:0xa48b52bd
  40e90e:	lock add ch,BYTE PTR [ecx-0x17]
  40e912:	lock cmc 
  40e914:	add    BYTE PTR [ecx+0x34],dl
  40e917:	xor    al,0x1
  40e919:	imul   edi,DWORD PTR [esi-0xb05b2d8],0xd6008a33
  40e923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e924:	ficomp DWORD PTR [edx]
  40e926:	xchg   ebp,eax
  40e927:	mov    esi,0x9bdb8dc2
  40e92c:	cld    
  40e92d:	call   DWORD PTR [ecx-0x125216f8]
  40e933:	aaa    
  40e934:	add    DWORD PTR [edx+0x5b5f1d9d],ecx
  40e93a:	xchg   edi,eax
  40e93b:	jp     0x40e93e
  40e93d:	add    BYTE PTR [ebx],cl
  40e93f:	shr    ecx,1
  40e941:	add    DWORD PTR [eax],0x270a200
  40e947:	add    BYTE PTR [esi],bl
  40e949:	mov    eax,0x81e087c
  40e94e:	push   edi
  40e94f:	push   edi
  40e950:	xchg   ebp,eax
  40e951:	ror    BYTE PTR [esi],0x84
  40e954:	push   esp
  40e955:	aaa    
  40e956:	add    DWORD PTR [eax],eax
  40e958:	fwait
  40e959:	mov    ebp,0x372c840e
  40e95e:	add    DWORD PTR [eax],eax
  40e960:	cmc    
  40e961:	mov    ebx,0x43715716
  40e966:	or     eax,ebp
  40e968:	jl     0x40e9d6
  40e96a:	std    
  40e96b:	call   DWORD PTR [edi+0x13]
  40e96e:	stc    
  40e96f:	test   DWORD PTR [esi],ecx
  40e971:	inc    ebx
  40e972:	push   es
  40e973:	xor    cl,BYTE PTR [esi]
  40e975:	scas   eax,DWORD PTR es:[edi]
  40e976:	add    si,bx
  40e979:	cmp    DWORD PTR ss:0x42a2ae,0x320623cf
  40e984:	adc    eax,0x9e00fbaf
  40e989:	mov    WORD PTR ss:[ebp-0x144c6],?
  40e990:	ss or  eax,0xc98e00a0
  40e996:	inc    esp
  40e997:	mov    esp,0x98304e
  40e99c:	aaa    
  40e99d:	pop    ebp
  40e99e:	add    DWORD PTR [ebx+0x2f9d0c79],ecx
  40e9a4:	mov    edi,DWORD PTR [ecx-0x78]
  40e9a7:	test   BYTE PTR [eax],al
  40e9a9:	add    BYTE PTR [eax+0x7],dh
  40e9ac:	fimul  DWORD PTR [edx+esi*8+0x376831c8]
  40e9b3:	loope  0x40e9f9
  40e9b5:	add    bh,cl
  40e9b7:	pop    ebx
  40e9b8:	add    DWORD PTR [eax],eax
  40e9ba:	mov    bh,0xb1
  40e9bc:	out    dx,al
  40e9bd:	dec    ebx
  40e9be:	and    al,0x1d
  40e9c0:	add    eax,0xaca95f8b
  40e9c5:	mov    dh,BYTE PTR [ecx+0x56]
  40e9c8:	lods   al,BYTE PTR ds:[esi]
  40e9c9:	dec    edi
  40e9ca:	xor    DWORD PTR [edi+0x5bd41599],ebx
  40e9d0:	add    ecx,ebp
  40e9d2:	jmp    0xde0:0xaa00015b
  40e9d9:	(bad)  
  40e9da:	adc    bl,dh
  40e9dc:	xor    DWORD PTR [ebp-0x179f83e],ecx
  40e9e2:	add    ah,dh
  40e9e4:	sahf   
  40e9e5:	daa    
  40e9e6:	aaa    
  40e9e7:	pop    ebx
  40e9e8:	jl     0x40ea46
  40e9ea:	out    dx,eax
  40e9eb:	(bad)  
  40e9ec:	mov    al,0x8a
  40e9ee:	in     al,0xf3
  40e9f0:	sub    ch,BYTE PTR [ecx]
  40e9f2:	aaa    
  40e9f3:	pop    ebx
  40e9f4:	cmp    dh,0x37
  40e9f7:	add    eax,DWORD PTR [edx]
  40e9f9:	add    BYTE PTR [ecx+0x58],cl
  40e9fc:	sbb    eax,DWORD PTR [ebx]
  40e9fe:	imul   esi,DWORD PTR [esi],0xdeee3331
  40ea04:	mov    BYTE PTR [ebx],al
  40ea06:	sub    al,dh
  40ea08:	ret    0x3569
  40ea0b:	xchg   esi,eax
  40ea0c:	jl     0x40e9d0
  40ea0e:	add    BYTE PTR [eax],al
  40ea10:	sbb    eax,0x8fc0dc5b
  40ea15:	mov    eax,ds:0x3498ffe7
  40ea1a:	test   DWORD PTR [ebp-0x20],0x374453a4
  40ea21:	mov    ch,0xd5
  40ea23:	add    eax,0x415d060a
  40ea28:	das    
  40ea29:	in     al,0x74
  40ea2b:	or     DWORD PTR [eax+edx*2-0x50407842],0x51618893
  40ea36:	bound  ebp,QWORD PTR [ecx]
  40ea38:	pop    edi
  40ea39:	in     al,0x72
  40ea3b:	mov    edi,0x3d09958
  40ea40:	aaa    
  40ea41:	mov    ebp,0xc75d81af
  40ea46:	idiv   BYTE PTR [eax-0x4d]
  40ea49:	pop    eax
  40ea4a:	test   BYTE PTR [edi+0x6f8fe431],al
  40ea50:	(bad)  
  40ea51:	xor    ebp,eax
  40ea53:	pushf  
  40ea54:	addr16 push ecx
  40ea56:	outs   dx,BYTE PTR ds:[esi]
  40ea57:	xchg   DWORD PTR [ebp-0x6c82a012],ebp
  40ea5d:	cmp    al,0x5f
  40ea5f:	adc    DWORD PTR [edi],edi
  40ea61:	mov    edi,0xea6547ac
  40ea66:	mov    bh,0x1b
  40ea68:	aaa    
  40ea69:	nop
  40ea6a:	stos   BYTE PTR es:[edi],al
  40ea6b:	add    ebx,edi
  40ea6d:	add    al,0xe4
  40ea6f:	add    DWORD PTR [edi],esi
  40ea71:	mov    esp,0xfaac
  40ea76:	sbb    eax,0x31102fef
  40ea7b:	in     eax,0xf
  40ea7d:	pop    ds
  40ea7e:	sbb    al,0x34
  40ea80:	call   0x14989dfd
  40ea85:	xchg   ecx,eax
  40ea87:	jecxz  0x40ea88
  40ea89:	es xchg ebp,eax
  40ea8b:	xor    ebp,eax
  40ea8d:	jns    0x40eaa2
  40ea8f:	cmp    eax,0x5baf10ff
  40ea94:	add    BYTE PTR [ecx+0x2fd507d],bl
  40ea9a:	pop    esi
  40ea9b:	mov    ah,0x3b
  40ea9d:	pop    ecx
  40ea9e:	(bad)  
  40ea9f:	cmc    
  40eaa0:	add    al,ch
  40eaa2:	xor    DWORD PTR [esi+0x51b9d7d4],0x4f98948b
  40eaac:	std    
  40eaad:	(bad)  
  40eaae:	int3   
  40eaaf:	or     ah,BYTE PTR [ecx+0x43bf34e9]
  40eab5:	jne    0x40eadb
  40eab7:	fcom   QWORD PTR [edi-0x75cbcb17]
  40eabd:	scas   eax,DWORD PTR es:[edi]
  40eabe:	add    al,0x5c
  40eac0:	sbb    DWORD PTR [edx+0x2c8b51b1],edx
  40eac6:	out    dx,eax
  40eac7:	add    BYTE PTR [ecx-0x17],ch
  40eaca:	lock cmc 
  40eacc:	add    BYTE PTR [ecx],dl
  40eace:	cmp    dh,BYTE PTR [ecx+eax*1]
  40ead1:	imul   esi,DWORD PTR [ecx+0x74da4d28],0x918a34
  40eadb:	add    BYTE PTR [ecx+0x1e2f896a],ch
  40eae1:	imul   edx,DWORD PTR [eax+0x5f],0xfffffff5
  40eae5:	push   edi
  40eae6:	add    ecx,DWORD PTR [ebx+0x2a8b3434]
  40eaec:	push   ecx
  40eaed:	out    dx,al
  40eaee:	pop    ecx
  40eaef:	xor    dh,dh
  40eaf1:	xor    eax,DWORD PTR [ecx]
  40eaf3:	xchg   esp,eax
  40eaf4:	ins    DWORD PTR es:[edi],dx
  40eaf5:	pop    ebx
  40eaf6:	jg     0x40eb3d
  40eaf8:	cld    
  40eaf9:	xor    al,BYTE PTR [ecx]
  40eafb:	jmp    0xe949bbb5
  40eb00:	add    eax,0xbc7255e6
  40eb05:	ds test esp,edx
  40eb08:	cmp    esi,DWORD PTR [ecx+eax*1]
  40eb0b:	fs mov cl,0x3e
  40eb0e:	test   DWORD PTR [eax],eax
  40eb10:	repz cmp BYTE PTR [ecx],al
  40eb13:	add    bh,al
  40eb15:	mov    dh,0xda
  40eb17:	add    DWORD PTR [esi+0x23ff5633],ecx
  40eb1d:	dec    ebx
  40eb1e:	in     eax,0x37
  40eb20:	and    eax,0x53890138
  40eb25:	rol    BYTE PTR [eax+eax*8-0x3fd0af1d],0x77
  40eb2d:	xor    DWORD PTR [eax],eax
  40eb2f:	add    BYTE PTR [esi-0x4d],bl
  40eb32:	cmp    al,0x70
  40eb34:	ret    0xf5
  40eb37:	add    DWORD PTR [ecx],esp
  40eb39:	push   ecx
  40eb3a:	das    
  40eb3b:	(bad)  [edi-0x4a]
  40eb3e:	std    
  40eb3f:	inc    DWORD PTR [eax]
  40eb41:	add    BYTE PTR [esi-0x3a],bl
  40eb44:	mov    ah,0xe4
  40eb46:	stos   DWORD PTR es:[edi],eax
  40eb47:	mov    ecx,0xd8f2e8fe
  40eb4c:	std    
  40eb4d:	(bad)  
  40eb4e:	fisttp DWORD PTR [esi]
  40eb50:	mov    ebp,0xfdda4650
  40eb55:	call   FWORD PTR [esi]
  40eb57:	int3   
  40eb58:	ret    
  40eb59:	push   eax
  40eb5a:	mov    dh,0xce
  40eb5c:	out    0xff,eax
  40eb5e:	mov    edi,ecx
  40eb60:	(bad)  
  40eb61:	jne    0x40eb8a
  40eb63:	mov    DWORD PTR [esp+edi*4-0x32],0xcdbc012a
  40eb6b:	xor    ch,BYTE PTR [ecx+0x1]
  40eb6e:	push   cs
  40eb6f:	xor    eax,DWORD PTR [ecx+0x120713ff]
  40eb75:	inc    eax
  40eb76:	fmulp  st(3),st
  40eb78:	aad    0xf7
  40eb7a:	inc    ebp
  40eb7b:	int    0xc3
  40eb7d:	sbb    al,BYTE PTR [ebp+0x8]
  40eb80:	inc    ebx
  40eb82:	es sub eax,0xa9de00a0
  40eb88:	mov    ah,0x0
  40eb8a:	aaa    
  40eb8b:	pop    ebp
  40eb8c:	add    DWORD PTR [ebp-0x17c574e],ecx
  40eb92:	mov    al,0xac
  40eb94:	jbe    0x40eb4a
  40eb96:	mov    edx,DWORD PTR [eax-0x7c]
  40eb99:	dec    BYTE PTR [edi-0x6700237e]
  40eb9f:	shl    DWORD PTR ds:0x788dbcf8,1
  40eba5:	repnz add BYTE PTR [eax],al
  40eba8:	lahf   
  40eba9:	mov    esi,0xdb80ffdc
  40ebae:	test   bh,bh
  40ebb0:	jo     0x40ec0e
  40ebb2:	add    DWORD PTR [esi+0x3a],esi
  40ebb5:	jecxz  0x40ebb6
  40ebb7:	pop    ebp
  40ebb8:	pop    esp
  40ebb9:	and    eax,0x85b4c8d0
  40ebbe:	std    
  40ebbf:	push   cs
  40ebc0:	ret    0x179b
  40ebc3:	add    ch,ah
  40ebc5:	rol    eax,0x69
  40ebc8:	aaa    
  40ebc9:	(bad)
  40ebce:	add    DWORD PTR [eax],eax
  40ebd0:	sub    bh,ah
  40ebd2:	push   ecx
  40ebd3:	(bad)  
  40ebd4:	stos   DWORD PTR es:[edi],eax
  40ebd5:	sbb    eax,DWORD PTR ds:0xe5d2983
  40ebdb:	xor    dh,BYTE PTR [edx-0x55b002e0]
  40ebe1:	fsub   DWORD PTR [ebp+0x7ad710fb]
  40ebe7:	pushf  
  40ebe8:	jmp    0x40ebd9
  40ebea:	test   dh,bh
  40ebec:	lods   al,BYTE PTR ds:[esi]
  40ebed:	mov    BYTE PTR [ecx-0x65e953b1],cl
  40ebf3:	sti    
  40ebf4:	sbb    BYTE PTR [ebx+0x1],bl
  40ebf7:	mov    ecx,DWORD PTR [edi]
  40ebf9:	fldcw  WORD PTR [eax+0x7ed84874]
  40ebff:	jecxz  0x40ebdb
  40ec01:	push   ds
  40ec02:	test   DWORD PTR [edi-0x21],ecx
  40ec05:	xor    al,0x14
  40ec07:	arpl   ax,cx
  40ec09:	dec    ebp
  40ec0a:	adc    dl,dl
  40ec0c:	add    BYTE PTR [eax],al
  40ec0e:	ror    DWORD PTR [ebp+0x16],0x78
  40ec12:	pop    ebx
  40ec13:	dec    esp
  40ec14:	pusha  
  40ec15:	push   es
  40ec16:	aas    
  40ec17:	dec    ebp
  40ec18:	jl     0x40ec15
  40ec1a:	mov    ebx,0x9303bf7
  40ec1f:	in     al,0x7f
  40ec21:	add    ebx,ebx
  40ec23:	icebp  
  40ec24:	out    0x9b,eax
  40ec26:	mov    eax,0xbf03ea32
  40ec2b:	div    edx
  40ec2d:	ds loop 0x40ec7b
  40ec30:	pop    ebx
  40ec31:	or     ah,ah
  40ec33:	pop    ebx
  40ec34:	mov    ebp,DWORD PTR ds:0x89753437
  40ec3a:	push   esp
  40ec3b:	dec    edi
  40ec3c:	mov    esi,0x7b5bf083
  40ec41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec42:	pop    eax
  40ec43:	dec    ebp
  40ec44:	popa   
  40ec45:	loope  0x40ec84
  40ec47:	dec    ebp
  40ec48:	sbb    al,0x7c
  40ec4a:	push   eax
  40ec4b:	xchg   edi,eax
  40ec4c:	rol    BYTE PTR [ebx],1
  40ec4e:	aaa    
  40ec4f:	pop    ecx
  40ec50:	and    al,0x84
  40ec52:	sti    
  40ec53:	ret    
  40ec54:	mov    bl,0xc7
  40ec56:	xor    BYTE PTR [edi+esi*8],dh
  40ec59:	mov    DWORD PTR [esi+ecx*2],eax
  40ec5c:	jle    0x40ebe1
  40ec5e:	mov    bl,0x86
  40ec60:	mov    eax,DWORD PTR [ecx-0x6c80b2e7]
  40ec66:	mov    dl,0x33
  40ec68:	call   0xb7d15ffd
  40ec6d:	jmp    0x40ec0d
  40ec6f:	xor    ebp,eax
  40ec71:	add    eax,DWORD PTR [eax]
  40ec73:	add    BYTE PTR [ebp+esi*2+0x5b606bb7],ch
  40ec7a:	inc    esi
  40ec7b:	cmp    DWORD PTR [ebx+0x58d47bf6],0x34
  40ec82:	add    DWORD PTR [ebp-0x10],esi
  40ec85:	dec    esp
  40ec86:	gs call 0x26c220c0
  40ec8c:	add    BYTE PTR cs:[edx],dl
  40ec8f:	test   eax,0x1ed8b934
  40ec94:	pop    eax
  40ec95:	mov    edx,0xfd11f3c6
  40ec9a:	(bad)  
  40ec9b:	sub    bl,BYTE PTR [ebx]
  40ec9d:	jmp    0x40ec3f
  40ec9f:	jmp    0x9702a6d8
  40eca4:	xchg   esi,eax
  40eca5:	jmp    0x34801871
  40ecaa:	push   esp
  40ecab:	jb     0x40ecc5
  40ecad:	mov    ah,0xec
  40ecaf:	adc    DWORD PTR [eax],edi
  40ecb1:	xor    al,0x1
  40ecb3:	push   0x37
  40ecb5:	cmp    al,0x1
  40ecb7:	cmp    cl,BYTE PTR [ebp+0x45c189e5]
  40ecbd:	mov    eax,0x3434e83a
  40ecc2:	test   BYTE PTR [esi-0x17cd47bb],dh
  40ecc8:	xor    al,0x34
  40ecca:	push   0xffffffa6
  40eccc:	or     al,0xe5
  40ecce:	std    
  40eccf:	adc    al,0x33
  40ecd1:	pop    esp
  40ecd2:	(bad)  
  40ecd3:	shl    BYTE PTR [esp+esi*1],0x88
  40ecd7:	and    al,0x0
  40ecd9:	add    BYTE PTR [ebx+0x3dfcc0b0],dh
  40ecdf:	push   es
  40ece0:	rcl    DWORD PTR [eax-0x16fecaf3],0xb4
  40ece7:	or     BYTE PTR [ecx-0x6b],dh
  40ecea:	stc    
  40eceb:	dec    ebx
  40ecec:	add    dh,bl
  40ecee:	cmp    eax,0xb650da06
  40ecf3:	dec    ebx
  40ecf4:	std    
  40ecf5:	jmp    0x4d256da1
  40ecfa:	mov    ch,0x4a
  40ecfc:	call   0xfdd55f01
  40ed01:	call   DWORD PTR [ebx+0x7c]
  40ed04:	mov    ecx,0xfdadf650
  40ed09:	(bad)  
  40ed0a:	fidivr WORD PTR [edx-0x2bd9af3d]
  40ed10:	in     eax,0xff
  40ed12:	and    DWORD PTR [esi+edi*8+0x44a4f775],edi
  40ed19:	mov    esp,0xbbfd5fee
  40ed1e:	fnsave [edi]
  40ed20:	imul   eax,DWORD PTR [ecx],0xff81378e
  40ed26:	jnp    0x40eda3
  40ed28:	adc    al,BYTE PTR [eax-0x62]
  40ed2b:	mov    edx,0xb975f7d5
  40ed30:	ret    
  40ed31:	sbb    dh,BYTE PTR [ebp+0x60]
  40ed34:	sti    
  40ed35:	ret    
  40ed36:	jbe    0x40ed29
  40ed38:	sahf   
  40ed39:	add    BYTE PTR [esi-0x22],bl
  40ed3c:	mov    ah,0x0
  40ed3e:	add    BYTE PTR [eax],al
  40ed40:	pop    esi
  40ed41:	aaa    
  40ed42:	mov    WORD PTR [ebp-0x149d6],es
  40ed48:	ds mov ebx,0xb5a2dcb4
  40ed4e:	(bad)  
  40ed4f:	call   0x420020
  40ed54:	lds    ebp,FWORD PTR [edx-0xb]
  40ed57:	mov    edi,DWORD PTR [ecx-0x47]
  40ed5a:	bnd call 0x420a78
  40ed60:	lahf   
  40ed61:	mov    ch,0xfd
  40ed63:	(bad)  
  40ed64:	push   cs
  40ed65:	aaa    
  40ed66:	ja     0x40ed6d
  40ed68:	xor    al,0x31
  40ed6a:	pop    edi
  40ed6b:	jmp    0x40ed96
  40ed6d:	add    eax,ecx
  40ed6f:	adc    DWORD PTR [ecx+0x4f950e3c],0x5a
  40ed76:	call   FWORD PTR [edx+0x37]
  40ed79:	(bad)  
  40ed7a:	inc    ebx
  40ed7b:	imul   esi,DWORD PTR [edi],0xdce74236
  40ed81:	push   esi
  40ed82:	add    DWORD PTR [eax],eax
  40ed84:	xor    bl,al
  40ed86:	mov    ah,0x8f
  40ed88:	arpl   WORD PTR [ebp+0x5bd18301],bx
  40ed8e:	div    BYTE PTR [ecx]
  40ed90:	mov    edx,0xb2500997
  40ed95:	iret   
  40ed96:	pusha  
  40ed97:	sti    
  40ed98:	mov    eax,0x939c8a21
  40ed9d:	cmp    BYTE PTR [eax+0x798fbcfe],al
  40eda3:	dec    edi
  40eda4:	add    BYTE PTR [eax],al
  40eda6:	lods   al,BYTE PTR ds:[esi]
  40eda7:	adc    DWORD PTR [ebp+0x53],ebp
  40edaa:	push   ecx
  40edab:	pop    ebp
  40edac:	add    DWORD PTR [ebx+0x745bcf6f],ecx
  40edb2:	and    al,al
  40edb4:	xchg   bl,ah
  40edb6:	sub    BYTE PTR [ecx-0x80],0x4f
  40edba:	(bad)  
  40edbb:	sbb    BYTE PTR [eax+0x327370ff],ah
  40edc1:	jmp    FWORD PTR [eax+0x71]
  40edc4:	mov    WORD PTR [edi+ebx*2-0x3d],ds
  40edc8:	inc    BYTE PTR [edi]
  40edca:	pop    eax
  40edcb:	pop    es
  40edcc:	or     eax,0xd4d8fa8d
  40edd1:	push   ebp
  40edd2:	out    0x24,eax
  40edd4:	add    eax,0x695cf4bc
  40edd9:	fbstp  TBYTE PTR [edi]
  40eddb:	pop    edi
  40eddc:	add    DWORD PTR [eax+0x5d3c567a],ecx
  40ede2:	das    
  40ede3:	dec    eax
  40ede4:	pop    es
  40ede5:	push   ebx
  40ede6:	punpcklbw mm5,DWORD PTR [ecx]
  40ede9:	add    BYTE PTR [edi],dh
  40edeb:	rol    BYTE PTR [esi-0x7f24ed1d],1
  40edf1:	dec    edi
  40edf2:	pop    ds
  40edf3:	xor    eax,0x4a00a0f4
  40edf8:	jno    0x40edd8
  40edfa:	sub    eax,0xd87bdc49
  40edff:	inc    edi
  40ee00:	push   es
  40ee01:	add    al,0x37
  40ee03:	pop    ebp
  40ee04:	mov    ah,0x83
  40ee06:	and    eax,esp
  40ee08:	adc    eax,esp
  40ee0a:	add    BYTE PTR [eax],al
  40ee0c:	fdiv   DWORD PTR [edi+eiz*8]
  40ee0f:	mov    esp,esp
  40ee11:	dec    edx
  40ee12:	cmp    BYTE PTR cs:[ebx-0x3e81f481],0x49
  40ee1a:	punpckhbw mm3,QWORD PTR [esp+esi*1-0x78047118]
  40ee22:	mov    bh,0xeb
  40ee24:	ret    0xe834
  40ee27:	add    ebp,DWORD PTR [edx+esi*2+0x51706b97]
  40ee2e:	idiv   BYTE PTR [edi-0x3d]
  40ee31:	out    dx,eax
  40ee32:	sub    edx,ebx
  40ee34:	adc    BYTE PTR [esp+eiz*4],dh
  40ee37:	ret    
  40ee38:	adc    cl,0xe8
  40ee3b:	add    esi,DWORD PTR [edi]
  40ee3d:	mov    ah,0xd6
  40ee3f:	sbb    DWORD PTR [ebx],eax
  40ee41:	and    eax,0x6cbc0428
  40ee46:	mov    esi,0xe172ad5b
  40ee4b:	pop    edx
  40ee4c:	call   0x86ad989a
  40ee51:	stos   BYTE PTR es:[edi],al
  40ee52:	out    0x3,eax
  40ee54:	mov    ebp,0xddde4675
  40ee59:	jp     0x40ee04
  40ee5b:	or     BYTE PTR [edi],dh
  40ee5d:	fbld   TBYTE PTR [edx+0x70]
  40ee60:	mov    ch,0x4f
  40ee62:	pop    DWORD PTR [ebp+0x3eb181c]
  40ee68:	aaa    
  40ee69:	mov    ch,0xfc
  40ee6b:	or     esi,DWORD PTR [edi]
  40ee6d:	in     eax,0x0
  40ee6f:	pop    ds
  40ee70:	add    BYTE PTR [eax],al
  40ee72:	call   0xb11fe734
  40ee77:	cmc    
  40ee78:	(bad)  
  40ee79:	call   0xef3e9db2
  40ee7e:	mov    al,0xd
  40ee80:	add    cl,ch
  40ee82:	xor    al,0xdd
  40ee84:	std    
  40ee85:	adc    eax,DWORD PTR [eax]
  40ee87:	dec    edx
  40ee88:	jae    0x40ee7b
  40ee8a:	dec    esp
  40ee8b:	push   ebp
  40ee8c:	and    eax,0x44bb34e9
  40ee91:	or     eax,0xb4c0af2f
  40ee96:	xor    DWORD PTR [esi],eax
  40ee98:	rcl    DWORD PTR [eax],0xc7
  40ee9b:	xor    eax,DWORD PTR [ecx]
  40ee9d:	jmp    0x3db1f656
  40eea2:	je     0x40eeec
  40eea4:	add    BYTE PTR [esi+0x10da0631],dl
  40eeaa:	xor    eax,DWORD PTR cs:[ecx]
  40eead:	jmp    0x9165b379
  40eeb2:	sbb    al,0xe3
  40eeb4:	pushf  
  40eeb5:	jmp    0xd85a5ee
  40eeba:	push   edi
  40eebb:	in     al,0x6a
  40eebd:	inc    ebp
  40eebe:	lods   al,BYTE PTR ds:[esi]
  40eebf:	outs   dx,BYTE PTR ds:[esi]
  40eec0:	push   eax
  40eec1:	shr    DWORD PTR [edi],0x51
  40eec4:	std    
  40eec5:	into   
  40eec6:	mov    edi,0xc6137349
  40eecb:	hlt    
  40eecc:	and    al,0xdd
  40eece:	test   al,dl
  40eed0:	add    BYTE PTR [ebp+0x75],dh
  40eed3:	dec    eax
  40eed4:	gs call 0x3474eeda
  40eeda:	and    DWORD PTR [esi+0x2911f81f],0x9ed8bd33
  40eee4:	lea    edi,[edx-0x8720c3a]
  40eeea:	inc    BYTE PTR [eax]
  40eeec:	int    0xdb
  40eeee:	pop    ss
  40eeef:	sahf   
  40eef0:	push   cs
  40eef1:	xor    al,0xe8
  40eef3:	mov    edi,0x8d01341e
  40eef8:	xchg   edx,eax
  40eef9:	psubsw mm0,QWORD PTR [eax]
  40eefc:	push   cs
  40eefd:	xor    al,0x51
  40eeff:	lea    esp,[edx-0x21fdcaf1]
  40ef05:	xor    ebp,ecx
  40ef07:	out    0x3d,eax
  40ef09:	xor    BYTE PTR [ecx],al
  40ef0b:	mov    ebx,DWORD PTR [edx+0x418b150f]
  40ef11:	mov    edx,0xfa4e8f2
  40ef16:	add    DWORD PTR [eax],eax
  40ef18:	pop    edi
  40ef19:	(bad)  
  40ef1a:	std    
  40ef1b:	(bad)  
  40ef1c:	into   
  40ef1d:	xor    esi,DWORD PTR [edi+0x5]
  40ef20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef21:	xor    bl,BYTE PTR [edi-0x15]
  40ef24:	in     al,0x2
  40ef26:	enter  0x3983,0x2f
  40ef2a:	push   cs
  40ef2b:	xchg   ebp,eax
  40ef2c:	dec    edi
  40ef2d:	pop    ebp
  40ef2e:	call   FWORD PTR [edx+0x25]
  40ef31:	repnz add BYTE PTR [di-0x10],dh
  40ef36:	in     eax,0x3f
  40ef38:	xor    eax,DWORD PTR [bx+di]
  40ef3b:	sldt   WORD PTR [eax]
  40ef3e:	mov    al,ds:0x4e748d80
  40ef43:	xor    BYTE PTR [edx+0x313e5ffe],al
  40ef49:	lea    edx,[edx]
  40ef4b:	sbb    al,0x19
  40ef4d:	push   eax
  40ef4e:	jmp    0x40ef0b
  40ef50:	and    DWORD PTR [esp+ecx*2],esi
  40ef53:	xor    eax,DWORD PTR [ecx]
  40ef55:	mov    edx,ebp
  40ef57:	sbb    esi,DWORD PTR ds:0x8a335e02
  40ef5d:	pop    esp
  40ef5e:	jb     0x40ef8b
  40ef60:	push   ecx
  40ef61:	mov    edx,DWORD PTR [ecx+0x3724a1d8]
  40ef67:	pop    ebp
  40ef68:	add    DWORD PTR [ebx+0x7457d00f],ecx
  40ef6e:	dec    eax
  40ef6f:	ror    al,0x23
  40ef72:	jg     0x40efa1
  40ef74:	ins    DWORD PTR es:[edi],dx
  40ef75:	xchg   ebp,eax
  40ef76:	mov    dl,0x5c
  40ef78:	add    ecx,ebp
  40ef7a:	pop    eax
  40ef7b:	(bad)  
  40ef7c:	jnp    0x40ef7c
  40ef7e:	lods   al,BYTE PTR ds:[esi]
  40ef7f:	jo     0x40efa6
  40ef81:	adc    al,0xae
  40ef83:	push   0x68f01825
  40ef88:	and    eax,0x2590ba18
  40ef8d:	and    BYTE PTR [edi+eiz*4-0x36c8982f],al
  40ef94:	mov    edi,0x7c2ed8ff
  40ef99:	add    BYTE PTR [edi],dh
  40ef9b:	aad    0xc8
  40ef9d:	and    esp,DWORD PTR [edx+edx*2]
  40efa0:	frstor [ebx]
  40efa2:	add    BYTE PTR [eax],al
  40efa4:	and    esp,DWORD PTR [ecx-0x4360acfd]
  40efaa:	and    eax,DWORD PTR [eax]
  40efac:	aaa    
  40efad:	call   0xad40137a
  40efb2:	imul   ebx,DWORD PTR [ecx-0x46],0xf38a015c
  40efb9:	js     0x40efcb
  40efbb:	inc    DWORD PTR [ebx]
  40efbd:	jno    0x40efd4
  40efbf:	call   0x4626b2
  40efc4:	mov    WORD PTR [edx],es
  40efc6:	test   DWORD PTR [edi+eiz*8],edi
  40efc9:	mov    al,al
  40efcb:	push   DWORD PTR [edi]
  40efcd:	or     bx,0x61
  40efd1:	ins    DWORD PTR es:[edi],dx
  40efd2:	jl     0x40ef60
  40efd4:	jecxz  0x40f006
  40efd6:	fucom  st(7)
  40efd8:	or     ah,dl
  40efda:	add    DWORD PTR [eax],eax
  40efdc:	mov    edx,0xe71c2910
  40efe1:	xor    edx,DWORD PTR [edx]
  40efe3:	call   0x6c785d95
  40efe8:	dec    eax
  40efe9:	dec    esi
  40efea:	xchg   esi,eax
  40efeb:	jl     0x40efa8
  40efed:	lock ret 
  40efef:	pop    ds
  40eff0:	xchg   esp,ebx
  40eff2:	out    0xbf,eax
  40eff4:	jne    0x40f02a
  40eff6:	adc    BYTE PTR [ebx],al
  40eff8:	aaa    
  40eff9:	xor    al,0x68
  40effb:	jl     0x40f020
  40effd:	clc    
  40effe:	fcmovb st,st(3)
  40f000:	add    BYTE PTR [ebx-0x46228bc1],bh
  40f006:	and    eax,0xc000019
  40f00b:	in     eax,0x55
  40f00d:	inc    eax
  40f00e:	shl    BYTE PTR [ebx],1
  40f010:	ins    DWORD PTR es:[edi],dx
  40f011:	add    esi,DWORD PTR [edi]
  40f013:	mov    edx,0xe97adc2a
  40f018:	jb     0x40f080
  40f01a:	jae    0x40f08e
  40f01c:	jmp    0x40f021
  40f01e:	bound  edi,QWORD PTR [ecx+0x5ccc823b]
  40f024:	in     al,dx
  40f025:	add    esi,DWORD PTR [edi]
  40f027:	fidiv  WORD PTR [esi-0x1825bf17]
  40f02d:	sar    BYTE PTR [ebp+0x3f160e4c],1
  40f033:	push   ds
  40f034:	test   al,0x3
  40f036:	mov    ah,0x70
  40f038:	jmp    0x40efbd
  40f03a:	adc    edi,DWORD PTR [eax+ebp*8]
  40f03d:	test   BYTE PTR [ecx+esi*4+0x6c],0xf
  40f042:	aaa    
  40f043:	ror    BYTE PTR [esi],0x81
  40f046:	jns    0x40f008
  40f048:	or     bh,BYTE PTR [ebx-0x15]
  40f04b:	aaa    
  40f04c:	arpl   WORD PTR [ebx+0x50],ax
  40f04f:	test   BYTE PTR [eax],bh
  40f051:	add    eax,0x782cbb37
  40f056:	mov    bl,0x74
  40f058:	cmp    eax,0x44e816
  40f05d:	cmp    al,0x3f
  40f05f:	pop    esp
  40f060:	sbb    DWORD PTR [edi],eax
  40f062:	cmp    esi,DWORD PTR [edx+ecx*4]
  40f065:	cdq    
  40f066:	stos   BYTE PTR es:[edi],al
  40f067:	enter  0x640c,0xa5
  40f06b:	ror    BYTE PTR [eax-0x26],0x0
  40f06f:	add    BYTE PTR [esp+ebx*2-0x49],dh
  40f073:	jmp    0x3f4f24ac
  40f078:	imul   BYTE PTR [ecx+ecx*2]
  40f07b:	cmc    
  40f07c:	ds cld 
  40f07e:	jae    0x40f006
  40f080:	mov    esi,0x13190cef
  40f085:	jl     0x40f087
  40f087:	jmp    0x6c4849c0
  40f08c:	idiv   BYTE PTR [eax]
  40f08e:	push   ecx
  40f08f:	sar    DWORD PTR [edx+0x45],0xfd
  40f093:	jmp    0x47282ce4
  40f098:	pop    esp
  40f099:	mov    edx,0xc14564f0
  40f09e:	shl    BYTE PTR [edx-0xa],1
  40f0a1:	cmp    BYTE PTR [edi+0x41],dl
  40f0a4:	fucom  st(3)
  40f0a6:	(bad)  
  40f0a7:	call   0x653de057
  40f0ac:	sti    
  40f0ad:	lds    ecx,FWORD PTR [eax]
  40f0af:	mov    edi,0xe923e71c
  40f0b4:	xor    al,0x59
  40f0b6:	mov    eax,0xfb1cde74
  40f0bb:	dec    BYTE PTR ds:0x33a6204d
  40f0c1:	xor    al,0x6b
  40f0c3:	jmp    0xe399a077
  40f0c8:	std    
  40f0c9:	inc    ebp
  40f0ca:	push   eax
  40f0cb:	jb     0x40f144
  40f0cd:	cmp    BYTE PTR [edx],ch
  40f0cf:	sub    al,0xef
  40f0d1:	mov    ecx,0xc1ce
  40f0d6:	fstp   QWORD PTR [eax]
  40f0d8:	add    DWORD PTR [eax],eax
  40f0da:	dec    esi
  40f0db:	mov    ch,0xf5
  40f0dd:	mov    DWORD PTR [ebx],edx
  40f0df:	int3   
  40f0e0:	test   bh,bh
  40f0e2:	or     bh,dl
  40f0e4:	jge    0x40f163
  40f0e6:	push   esi
  40f0e7:	xor    BYTE PTR [edx+0x1970c507],cl
  40f0ed:	mov    DWORD PTR ds:0x9ff1054,ebx
  40f0f3:	rcr    BYTE PTR [ebx],1
  40f0f5:	and    eax,0xe856380e
  40f0fa:	push   ss
  40f0fb:	adc    eax,0x549d0001
  40f100:	stc    
  40f101:	add    BYTE PTR [esi],dh
  40f103:	fadd   DWORD PTR [eax+eax*1]
  40f106:	push   cs
  40f107:	lods   eax,DWORD PTR ds:[esi]
  40f108:	test   BYTE PTR [eax],bl
  40f10a:	xchg   esp,eax
  40f10b:	mov    esi,0x67de6afe
  40f110:	(bad)  
  40f111:	adc    eax,0x4125e6
  40f116:	push   ebp
  40f117:	je     0x40f122
  40f119:	or     DWORD PTR [edx],0x3b
  40f11c:	push   ecx
  40f11d:	push   esi
  40f11e:	in     al,0x39
  40f120:	mov    BYTE PTR [ebx-0x2a],al
  40f123:	lods   al,BYTE PTR ds:[esi]
  40f124:	jp     0x40f12a
  40f126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f127:	mov    al,0x72
  40f129:	or     al,0x26
  40f12b:	cmp    eax,0xb29e004f
  40f130:	inc    esp
  40f131:	cld    
  40f132:	loope  0x40f191
  40f134:	enter  0x96c2,0x37
  40f138:	(bad)  
  40f139:	jbe    0x40f13b
  40f13b:	add    BYTE PTR [edx-0x61db2c31],ah
  40f141:	aaa    
  40f142:	imul   edx,DWORD PTR [eax],0xffffffb4
  40f145:	aaa    
  40f146:	push   edi
  40f147:	jmp    FWORD PTR [ebx+0x1f]
  40f14a:	pop    ss
  40f14b:	inc    eax
  40f14c:	mov    ?,WORD PTR [eax+0x739d0cc1]
  40f152:	mov    ch,ah
  40f154:	aaa    
  40f155:	into   
  40f156:	pusha  
  40f157:	div    DWORD PTR [esi+0x3700d081]
  40f15d:	dec    ebp
  40f15e:	aam    0x8a
  40f160:	repnz inc esp
  40f162:	mov    eax,DWORD PTR [edx+0xf]
  40f165:	and    edx,eax
  40f167:	mov    bh,BYTE PTR [eax+edx*2+0x4ac0e8c]
  40f16e:	stc    
  40f16f:	mov    WORD PTR [ebx-0x45adf287],cs
  40f175:	add    BYTE PTR [ecx],ah
  40f177:	adc    al,0x85
  40f179:	(bad)  
  40f17a:	rol    DWORD PTR [edi-0x17d68e8d],1
  40f180:	jl     0x40f1ce
  40f182:	add    al,BYTE PTR [eax]
  40f184:	mov    bl,0x8c
  40f186:	lock and BYTE PTR [eax],al
  40f189:	dec    ecx
  40f18a:	sbb    eax,0x7811ac14
  40f18f:	jae    0x40f1ac
  40f191:	dec    ecx
  40f192:	js     0x40f207
  40f194:	adc    ebp,DWORD PTR ds:0x4d36256d
  40f19a:	add    edi,edi
  40f19c:	arpl   WORD PTR [ecx],si
  40f19e:	adc    eax,0x4a0000e8
  40f1a3:	cmp    DWORD PTR ds:0x4c1de00,eax
  40f1a9:	add    BYTE PTR [edi],dh
  40f1ab:	bound  esi,QWORD PTR [eax+0x54257742]
  40f1b1:	test   BYTE PTR [edi],dh
  40f1b3:	dec    ebp
  40f1b4:	mov    DWORD PTR [ebx+0x53],eax
  40f1b7:	inc    ecx
  40f1b8:	jge    0x40f179
  40f1ba:	xor    cl,bl
  40f1bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1bd:	call   FWORD PTR [eax-0x6fff14b4]
  40f1c3:	enter  0x181d,0xba
  40f1c7:	rcr    BYTE PTR ds:0x83ea8f24,0xff
  40f1ce:	js     0x40f203
  40f1d0:	jae    0x40f1d2
  40f1d2:	jo     0x40f157
  40f1d4:	outs   dx,DWORD PTR ds:[esi]
  40f1d5:	add    esi,DWORD PTR [edi]
  40f1d7:	xor    al,0x65
  40f1d9:	les    esp,FWORD PTR [eax]
  40f1db:	int3   
  40f1dc:	pop    ss
  40f1dd:	out    dx,eax
  40f1de:	pop    eax
  40f1df:	inc    edx
  40f1e0:	jb     0x40f22b
  40f1e2:	pop    eax
  40f1e3:	push   cs
  40f1e4:	add    si,WORD PTR [edi]
  40f1e7:	mov    eax,0x32d1efa7
  40f1ec:	jbe    0x40f1ad
  40f1ee:	adc    al,0x1c
  40f1f0:	xor    al,dh
  40f1f2:	ds in  al,dx
  40f1f4:	adc    al,0x8
  40f1f6:	icebp  
  40f1f7:	clc    
  40f1f8:	retf   
  40f1f9:	adc    ecx,DWORD PTR [ebp+0x7441e44d]
  40f1ff:	sbb    al,bl
  40f201:	jmp    0x40f1a1
  40f203:	xor    al,0x7f
  40f205:	out    dx,eax
  40f206:	add    BYTE PTR [eax],al
  40f208:	push   esp
  40f209:	sub    BYTE PTR [ebp-0x41],ah
  40f20c:	push   esp
  40f20d:	or     BYTE PTR [edx],al
  40f20f:	add    al,0xf
  40f211:	push   ebp
  40f212:	test   eax,0xbce3702
  40f217:	fidivr WORD PTR [ebx-0x4dd7f438]
  40f21d:	clc    
  40f21e:	add    ebx,esp
  40f220:	icebp  
  40f221:	clc    
  40f222:	or     ebx,esp
  40f224:	xor    al,0x34
  40f226:	call   0x91ed12e
  40f22b:	add    al,0x37
  40f22d:	lods   eax,DWORD PTR ds:[esi]
  40f22e:	out    0x78,al
  40f230:	mov    BYTE PTR [edi+eiz*8+0x35ad3703],ch
  40f237:	jmp    0x40f291
  40f239:	(bad)  
  40f23a:	out    0x3,eax
  40f23c:	or     eax,0xec86b010
  40f241:	pop    ss
  40f242:	int3   
  40f243:	imul   ebp,DWORD PTR [esi-0x54],0xffffffe7
  40f247:	add    esi,DWORD PTR [ebx+0x247d0074]
  40f24d:	inc    ecx
  40f24e:	je     0x40f215
  40f250:	sbb    al,0xaf
  40f252:	inc    esp
  40f253:	or     eax,0xd689e41b
  40f258:	fistp  DWORD PTR [edx]
  40f25a:	add    ecx,ebp
  40f25c:	xor    al,0xaf
  40f25e:	je     0x40f265
  40f260:	aas    
  40f261:	dec    esp
  40f262:	sahf   
  40f263:	ins    DWORD PTR es:[edi],dx
  40f264:	cmp    esi,DWORD PTR [edx+edx*2]
  40f267:	rol    DWORD PTR [esi+edx*1+0xe901],1
  40f26e:	imul   ebx,edi,0xae5ca931
  40f274:	jecxz  0x40f2ba
  40f276:	jne    0x40f2ad
  40f278:	add    DWORD PTR [esp+edi*4],esi
  40f27b:	dec    esp
  40f27c:	dec    edi
  40f27d:	cmp    BYTE PTR [esi+esi*1-0x19e0d676],ch
  40f284:	push   ebp
  40f285:	xchg   BYTE PTR [esi],al
  40f287:	cmp    DWORD PTR [esp+ebx*1-0x1753a675],ecx
  40f28e:	cmp    esi,DWORD PTR [eax*4-0x1edf857]
  40f295:	fsubr  QWORD PTR [eax-0x52]
  40f298:	(bad)  
  40f299:	pop    esi
  40f29a:	out    0x48,al
  40f29c:	std    
  40f29d:	fdivr  QWORD PTR [eax]
  40f29f:	dec    esp
  40f2a0:	and    ebp,ecx
  40f2a2:	xor    al,0x34
  40f2a4:	(bad)  
  40f2a5:	mov    esp,0x51f8ae4c
  40f2aa:	les    edx,FWORD PTR ds:0x36ade901
  40f2b0:	mov    bl,BYTE PTR [esp+ebp*1-0x7e5abf53]
  40f2b7:	pop    eax
  40f2b8:	jmp    0xb629:0x323433e8
  40f2bf:	inc    ecx
  40f2c0:	or     eax,0x59e1f36e
  40f2c5:	add    BYTE PTR [edi-0xa],al
  40f2c8:	add    eax,0xe9ada300
  40f2cd:	cmp    DWORD PTR [edx],0x18
  40f2d0:	push   edx
  40f2d1:	push   esi
  40f2d2:	add    BYTE PTR [eax],al
  40f2d4:	mov    eax,ds:0xe50c74c9
  40f2d9:	les    ecx,FWORD PTR [edx-0x2b591bb]
  40f2df:	mov    WORD PTR [ebx],gs
  40f2e1:	aam    0xe5
  40f2e3:	dec    ebx
  40f2e4:	imul   ecx,ecx,0xfffffffe
  40f2e7:	mov    DWORD PTR [ebx],esp
  40f2e9:	rol    BYTE PTR [eax+eax*8-0x377dcffd],0x89
  40f2f1:	iret   
  40f2f2:	les    eax,FWORD PTR [eax]
  40f2f4:	dec    esi
  40f2f5:	xor    al,0x8c
  40f2f7:	jle    0x40f2ff
  40f2f9:	add    ebx,edx
  40f2fb:	push   edi
  40f2fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2fd:	pop    esp
  40f2fe:	icebp  
  40f2ff:	jmp    DWORD PTR [ebx]
  40f301:	fmul   QWORD PTR [edi]
  40f303:	inc    eax
  40f304:	push   cs
  40f305:	aaa    
  40f306:	mov    bh,0x45
  40f308:	push   es
  40f309:	ins    BYTE PTR es:[edi],dx
  40f30a:	jno    0x40f332
  40f30c:	inc    esi
  40f30d:	inc    ebp
  40f30e:	pop    ebp
  40f30f:	adc    eax,0x1b
  40f312:	mov    al,BYTE PTR [esi]
  40f314:	lds    esi,FWORD PTR [ecx+eiz*8+0x73]
  40f318:	mov    al,0xc6
  40f31a:	je     0x40f328
  40f31c:	gs je  0x40f32c
  40f31f:	call   0x3fc3e5
  40f324:	push   edx
  40f325:	repz jno 0x40f36f
  40f328:	aaa    
  40f329:	es push cs
  40f32b:	xchg   ebp,eax
  40f32c:	push   ds
  40f32d:	stos   DWORD PTR es:[edi],eax
  40f32e:	inc    esp
  40f32f:	hlt    
  40f330:	jne    0x40f346
  40f332:	add    dh,0xd6
  40f335:	stos   BYTE PTR es:[edi],al
  40f336:	add    edi,DWORD PTR [ebx]
  40f338:	add    BYTE PTR [eax],al
  40f33a:	jecxz  0x40f31b
  40f33c:	jb     0x40f371
  40f33e:	dec    ecx
  40f33f:	inc    esp
  40f340:	cmc    
  40f341:	call   0xfeaa687d
  40f346:	cwde   
  40f347:	fld    DWORD PTR [ecx+0x73]
  40f34a:	pop    eax
  40f34b:	ss icebp 
  40f34d:	or     edi,DWORD PTR [eax+ebx*4+0x33a0e811]
  40f354:	ja     0x40f354
  40f356:	mov    bl,0xd
  40f358:	out    dx,al
  40f359:	pop    ss
  40f35a:	pop    edi
  40f35b:	arpl   WORD PTR [ebp-0x2],si
  40f35e:	push   0xfa8d14e3
  40f363:	jo     0x40f339
  40f365:	push   ebp
  40f366:	pop    eax
  40f367:	dec    eax
  40f368:	adc    DWORD PTR [esi],edx
  40f36a:	test   DWORD PTR [eax+esi*1-0x25],0x430899b4
  40f372:	call   0x261d00fc
  40f377:	or     eax,0xa5376a05
  40f37c:	jo     0x40f376
  40f37e:	ss dec ebp
  40f380:	and    BYTE PTR [ebx+esi*1+0x4d],0x80
  40f385:	cli    
  40f386:	sub    BYTE PTR ss:[eax],dl
  40f389:	adc    BYTE PTR [edx+0x2274ff45],0xbe
  40f390:	in     eax,dx
  40f391:	repz add BYTE PTR [eax+0x79],al
  40f395:	out    0x6d,eax
  40f397:	mov    ecx,0x44dc0004
  40f39c:	xchg   BYTE PTR [eax+eax*1+0x0],dh
  40f3a0:	shl    esp,cl
  40f3a2:	popf   
  40f3a3:	cld    
  40f3a4:	loopne 0x40f38b
  40f3a6:	xchg   DWORD PTR [edi+ebx*8-0x13],esi
  40f3aa:	cs call 0x461efe
  40f3b0:	popa   
  40f3b1:	in     eax,0xef
  40f3b3:	and    DWORD PTR [edi],esi
  40f3b5:	dec    ebp
  40f3b6:	xchg   BYTE PTR [ebx+ebp*1-0xb],dh
  40f3ba:	cmp    esp,eax
  40f3bc:	mov    al,0x33
  40f3be:	daa    
  40f3bf:	mov    DWORD PTR [ebp-0x22],esi
  40f3c2:	mov    ebp,0xe3716fd8
  40f3c7:	add    eax,DWORD PTR [ecx]
  40f3c9:	out    0x62,eax
  40f3cb:	jl     0x40f390
  40f3cd:	(bad)  
  40f3ce:	out    dx,eax
  40f3cf:	imul   eax,DWORD PTR [eax],0x41
  40f3d2:	(bad)  
  40f3d3:	je     0x40f388
  40f3d5:	(bad)  
  40f3d6:	iret   
  40f3d7:	imul   ecx,DWORD PTR [eax],0x41
  40f3da:	out    dx,al
  40f3db:	je     0x40f3a0
  40f3dd:	test   BYTE PTR [edi],0xd4
  40f3e0:	imul   ebp,DWORD PTR [eax],0x33f711ac
  40f3e6:	arpl   sp,si
  40f3e8:	xor    al,0xb9
  40f3ea:	into   
  40f3eb:	out    dx,eax
  40f3ec:	cmp    edi,esp
  40f3ee:	(bad)  
  40f3ef:	push   cs
  40f3f0:	jg     0x40f413
  40f3f2:	sub    BYTE PTR [eax+eiz*8],al
  40f3f5:	(bad)  [edx+0x212b8104]
  40f3fb:	lock cmp bl,ch
  40f3fe:	sbb    al,0x8
  40f400:	mov    edx,0x68ffea
  40f405:	add    BYTE PTR ds:0xb20c21af,dh
  40f40b:	imul   edx,DWORD PTR [eax+eax*1],0x45
  40f40f:	je     0x40f3a3
  40f411:	mov    esi,0xcde3e3bd
  40f416:	lods   eax,DWORD PTR ds:[esi]
  40f417:	enter  0xbcb,0xae
  40f41b:	fild   QWORD PTR es:[eax+eiz*2+0x28acf731]
  40f423:	xor    esi,DWORD PTR [ebx-0x2e]
  40f426:	sub    al,0x2d
  40f428:	xchg   DWORD PTR ds:0x20d362b3,edi
  40f42e:	mov    esp,0xf638efeb
  40f433:	(bad)
  40f436:	out    dx,eax
  40f437:	stc    
  40f438:	add    BYTE PTR [edi],ah
  40f43a:	xor    esi,edx
  40f43c:	out    dx,eax
  40f43d:	xchg   edi,eax
  40f43e:	aaa    
  40f43f:	fs push edx
  40f441:	es cwde 
  40f443:	adc    DWORD PTR ds:0x133d5370,edx
  40f449:	stc    
  40f44a:	sub    dh,ah
  40f44c:	add    BYTE PTR [edx+0x50],ch
  40f44f:	sub    edx,ebp
  40f451:	jmp    0xde35:0x390116b7
  40f458:	ret    0x34e1
  40f45b:	out    0x89,eax
  40f45d:	std    
  40f45e:	xchg   ah,ah
  40f460:	or     eax,0x8232aa9f
  40f465:	rol    BYTE PTR [ebx+0xf974e7],1
  40f46b:	add    BYTE PTR [ebx+0xae674ec],bl
  40f471:	je     0x40f45a
  40f473:	mov    ?,WORD PTR [ebx]
  40f475:	xor    al,0x1
  40f477:	ins    BYTE PTR es:[edi],dx
  40f478:	dec    ebx
  40f479:	and    eax,0xcdb7eaea
  40f47e:	or     BYTE PTR [edx+0x33],ah
  40f481:	mov    dl,0x63
  40f483:	mov    eax,ds:0x7255e133
  40f488:	shl    BYTE PTR [eax+eax*1+0x58af34e9],cl
  40f48f:	shr    ecx,0x3d
  40f492:	adc    esp,DWORD PTR [ecx+0x7200f421]
  40f498:	in     eax,dx
  40f499:	sub    BYTE PTR [ecx+ebp*4-0x801dd01],al
  40f4a0:	in     al,dx
  40f4a1:	in     al,dx
  40f4a2:	call   0x1750706
  40f4a7:	jo     0x40f497
  40f4a9:	inc    esp
  40f4aa:	mov    DWORD PTR [edi+0x4d43abdc],ebp
  40f4b0:	call   0x124107f2
  40f4b5:	es inc ecx
  40f4b7:	add    BYTE PTR [ebp+0x43],cl
  40f4ba:	cmc    
  40f4bb:	add    BYTE PTR [ebp+0x73],dl
  40f4be:	add    eax,0xf95b1357
  40f4c3:	jne    0x40f470
  40f4c5:	mov    ch,0x64
  40f4c7:	cld    
  40f4c8:	mov    ds,WORD PTR [eax+0x2d]
  40f4cb:	jne    0x40f45b
  40f4cd:	xor    BYTE PTR [ebx+0x4],ch
  40f4d0:	add    BYTE PTR [eax],al
  40f4d2:	(bad)  
  40f4d3:	fcomp  DWORD PTR [ebx-0x7a]
  40f4d6:	sahf   
  40f4d7:	xor    BYTE PTR [ebx],dh
  40f4d9:	shl    BYTE PTR ds:0xfb30bb75,0x30
  40f4e0:	add    DWORD PTR [esi-0x4c],edx
  40f4e3:	xor    al,0x59
  40f4e5:	xor    dh,BYTE PTR [ebp-0x28]
  40f4e8:	inc    edi
  40f4e9:	xchg   BYTE PTR [esi+0x30],cl
  40f4ec:	test   eax,eax
  40f4ee:	cli    
  40f4ef:	or     cl,BYTE PTR [edx+0x54bd8245]
  40f4f5:	clc    
  40f4f6:	lds    esi,FWORD PTR [ebx+0x5]
  40f4f9:	push   edi
  40f4fa:	sub    al,ah
  40f4fc:	xor    eax,DWORD PTR [esi-0x3f7acfb2]
  40f502:	push   0x21
  40f504:	mov    cl,BYTE PTR [ebp+0x26]
  40f507:	pop    edi
  40f508:	addr16 add al,0x76
  40f50b:	mov    ch,0x54
  40f50d:	or     BYTE PTR [esi+0x1e00843d],dh
  40f513:	mov    edx,0xd00bffd5
  40f518:	in     eax,0x15
  40f51a:	out    dx,eax
  40f51b:	aaa    
  40f51c:	add    DWORD PTR [edx+0x5e5a66cd],ecx
  40f522:	xchg   edi,eax
  40f523:	icebp  
  40f524:	add    DWORD PTR [eax],eax
  40f526:	scas   eax,DWORD PTR es:[edi]
  40f527:	pusha  
  40f528:	push   esp
  40f529:	mov    esi,edx
  40f52b:	adc    ebx,DWORD PTR [ecx]
  40f52d:	push   esi
  40f52e:	aaa    
  40f52f:	jp     0x40f5af
  40f531:	test   edx,0x561962
  40f537:	add    BYTE PTR [esi-0x3fefda87],bh
  40f53d:	pusha  
  40f53e:	dec    ecx
  40f53f:	adc    DWORD PTR [edi+0x4d],esi
  40f542:	jle    0x40f588
  40f544:	cmp    eax,DWORD PTR [esi-0x36]
  40f547:	pop    es
  40f548:	and    DWORD PTR [edi+0x47],edx
  40f54b:	inc    ebx
  40f54c:	pop    ebx
  40f54d:	ins    DWORD PTR es:[edi],dx
  40f54e:	add    al,0x8d
  40f550:	and    BYTE PTR [ecx+0x7e],cl
  40f553:	add    eax,0x23f5d3e4
  40f558:	and    ecx,eax
  40f55a:	inc    ecx
  40f55b:	jae    0x40f550
  40f55d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f55e:	add    DWORD PTR [eax+0x78],edx
  40f561:	pop    eax
  40f562:	pop    ebp
  40f563:	adc    edi,esi
  40f565:	dec    esp
  40f566:	xor    BYTE PTR [edx],al
  40f568:	ss dec ebp
  40f56a:	add    DWORD PTR [ebp+0x26],esi
  40f56d:	pop    ds
  40f56e:	dec    esp
  40f56f:	(bad)  
  40f570:	jecxz  0x40f59a
  40f572:	adc    eax,0x16892aff
  40f577:	inc    eax
  40f578:	aaa    
  40f579:	mov    DWORD PTR [ebx+0x5a],0x58ce1ae0
  40f580:	fimul  WORD PTR [esi+0xfbc0014]
  40f586:	add    eax,0xfb35703b
  40f58b:	push   es
  40f58c:	stc    
  40f58d:	adc    BYTE PTR [ecx],ch
  40f58f:	and    BYTE PTR ds:0x1055b0b6,dh
  40f595:	inc    eax
  40f596:	dec    ebp
  40f597:	adc    DWORD PTR [edi+0x4d],esi
  40f59a:	xor    eax,eax
  40f59c:	add    BYTE PTR [eax],al
  40f59e:	or     al,0x9b
  40f5a0:	outs   dx,DWORD PTR ds:[esi]
  40f5a1:	xor    eax,0x113957f8
  40f5a6:	ja     0x40f5f5
  40f5a8:	test   BYTE PTR ds:0x43d03437,ah
  40f5ae:	loopne 0x40f5ea
  40f5b0:	out    0x5b,eax
  40f5b2:	push   esi
  40f5b3:	adc    al,0xe8
  40f5b5:	add    edi,DWORD PTR [ebx+eax*2-0x7fbb859c]
  40f5bc:	jb     0x40f5cd
  40f5be:	daa    
  40f5bf:	and    ch,BYTE PTR [eax+0x36fc4d03]
  40f5c5:	clc    
  40f5c6:	push   esp
  40f5c7:	adc    al,0x96
  40f5c9:	jo     0x40f550
  40f5cb:	lods   eax,DWORD PTR ds:[esi]
  40f5cc:	stos   DWORD PTR es:[edi],eax
  40f5cd:	daa    
  40f5ce:	addr16 int3 
  40f5d0:	addr16 add al,0x37
  40f5d3:	xor    al,0x61
  40f5d5:	repnz dec esp
  40f5d7:	test   eax,0x341ec38d
  40f5dc:	lahf   
  40f5dd:	jnp    0x40f5d9
  40f5df:	sti    
  40f5e0:	(bad)  
  40f5e1:	push   ss
  40f5e2:	pop    ds
  40f5e3:	and    ch,BYTE PTR [eax-0x3c1843fd]
  40f5e9:	sub    esi,DWORD PTR [edi+ebp*2-0x40907901]
  40f5f0:	xor    eax,0xdfb8b5ea
  40f5f5:	add    ecx,ecx
  40f5f7:	jmp    0x7d4e:0x2cf3b9de
  40f5fe:	jmp    0x40f62b
  40f600:	inc    esi
  40f601:	inc    ebx
  40f602:	add    BYTE PTR [eax],al
  40f604:	push   esi
  40f605:	sub    ecx,DWORD PTR [esi-0x3]
  40f608:	imul   BYTE PTR [ecx]
  40f60a:	ja     0x40f667
  40f60c:	cmp    DWORD PTR [ecx-0x4c39a418],eax
  40f612:	out    0x3,eax
  40f614:	scas   eax,DWORD PTR es:[edi]
  40f615:	lock retf 
  40f617:	daa    
  40f618:	mov    esp,0xb7a17f73
  40f61d:	xor    al,0xe8
  40f61f:	shl    DWORD PTR [edi-0x1f],cl
  40f622:	jle    0x40f678
  40f624:	sub    DWORD PTR [edx+0x41f2d00],eax
  40f62a:	and    BYTE PTR [ebp-0x8b0e18],0x9c
  40f631:	lds    edx,FWORD PTR [ecx]
  40f633:	shl    DWORD PTR [ecx+edi*1+0x39f2e9fd],1
  40f63a:	push   esi
  40f63b:	dec    esi
  40f63c:	and    DWORD PTR [edi+edx*1],ebx
  40f63f:	test   eax,0xedc4b534
  40f644:	pop    ebx
  40f645:	xor    eax,0xf3966067
  40f64a:	mov    DWORD PTR [ebp+0x2e8a0c50],ebp
  40f650:	cld    
  40f651:	or     esp,esi
  40f653:	call   0xcd9da38c
  40f658:	sub    ch,ah
  40f65a:	push   esi
  40f65b:	cmp    DWORD PTR [ecx],0x5ce94067
  40f661:	cmp    ebp,edi
  40f663:	icebp  
  40f664:	xor    al,0x4c
  40f666:	xchg   esi,eax
  40f667:	cld    
  40f668:	add    BYTE PTR [eax],al
  40f66a:	ss xor al,0x85
  40f66d:	sub    DWORD PTR [eax+0x32],esp
  40f670:	mov    dl,0xe8
  40f672:	add    edi,DWORD PTR [ecx]
  40f674:	(bad)  
  40f675:	fmulp  st(0),st
  40f677:	fsubp  st(0),st
  40f679:	test   eax,0x6a013440
  40f67e:	adc    al,0x34
  40f680:	call   0xfd7ac83e
  40f685:	adc    al,0xbc
  40f687:	dec    esp
  40f688:	xor    DWORD PTR [ecx-0x51f83f60],0xfcfe2d2e
  40f692:	lods   al,BYTE PTR ds:[esi]
  40f693:	and    al,BYTE PTR [ecx-0x17]
  40f696:	add    eax,0xe43ada06
  40f69b:	cmp    DWORD PTR [ebx-0x7],esi
  40f69e:	loop   0x40f688
  40f6a0:	std    
  40f6a1:	add    BYTE PTR [ebx],al
  40f6a3:	cmp    DWORD PTR [edx-0x1],edx
  40f6a6:	add    edi,DWORD PTR ds:0x269215fe
  40f6ac:	inc    ecx
  40f6ad:	add    BYTE PTR [edi-0x1881f29d],ah
  40f6b3:	or     eax,0x73c91044
  40f6b8:	ret    0xca88
  40f6bb:	add    al,0x5a
  40f6bd:	pop    ebp
  40f6be:	sbb    al,0x34
  40f6c0:	add    DWORD PTR [ebp+0x45],edx
  40f6c3:	aam    0x52
  40f6c5:	mov    edx,DWORD PTR [esi]
  40f6c7:	bound  edx,QWORD PTR [esi-0x7d]
  40f6ca:	gs leave 
  40f6cc:	je     0x40f6d9
  40f6ce:	add    BYTE PTR [eax],al
  40f6d0:	pop    ecx
  40f6d1:	cmp    ecx,DWORD PTR [ecx]
  40f6d3:	jmp    DWORD PTR [ebx-0x71bff054]
  40f6d9:	mov    ebp,0xc99e6ad5
  40f6de:	je     0x40f6ec
  40f6e0:	ins    DWORD PTR es:[edi],dx
  40f6e1:	mov    esi,0xbd8675fe
  40f6e6:	ret    0xdae8
  40f6e9:	enter  0xfffe,0xd5
  40f6ed:	mov    DWORD PTR [edi+edi*8+0x744612d8],0xe8c6bd39
  40f6f8:	pop    edi
  40f6f9:	sub    DWORD PTR [ecx],eax
  40f6fb:	add    ch,dl
  40f6fd:	les    eax,FWORD PTR [esi+esi*8-0xa9da1e]
  40f704:	add    esi,DWORD PTR [edx+ecx*4]
  40f707:	ret    
  40f708:	jns    0x40f745
  40f70a:	add    eax,0xfec766e8
  40f70f:	call   DWORD PTR [ebp-0x2fd150f]
  40f715:	repz pop esi
  40f717:	pop    esi
  40f718:	jne    0x40f77f
  40f71a:	mov    edi,0xd84d3708
  40f71f:	mov    bl,BYTE PTR [ebx]
  40f721:	retf   
  40f722:	imul   edi,esi,0x746e448a
  40f728:	sub    esi,DWORD PTR [esi+0xd45c418]
  40f72e:	add    eax,0xd35d62ff
  40f733:	dec    edi
  40f734:	add    BYTE PTR [eax],al
  40f736:	loopne 0x40f790
  40f738:	std    
  40f739:	imul   esi,DWORD PTR [edi],0xd007f8d6
  40f73f:	cmp    BYTE PTR [ecx-0x7db288ef],dl
  40f745:	jl     0x40f76e
  40f747:	dec    ebp
  40f748:	jmp    0x40f756
  40f74a:	cld    
  40f74b:	(bad)  
  40f74c:	adc    DWORD PTR [ebp+esi*1+0x3a],edi
  40f750:	inc    ecx
  40f751:	xor    bh,BYTE PTR [esi+0x6f]
  40f754:	jl     0x40f761
  40f756:	stc    
  40f757:	outs   dx,DWORD PTR ds:[esi]
  40f758:	aas    
  40f759:	or     esi,DWORD PTR [edi]
  40f75b:	cmp    BYTE PTR [edx-0x15],0xe4
  40f75f:	ror    DWORD PTR [ecx+0x55],1
  40f762:	loopne 0x40f72d
  40f764:	push   0xfffffffe
  40f766:	or     al,BYTE PTR [edx+0x6e]
  40f769:	je     0x40f796
  40f76b:	ss adc eax,0x18d45c4
  40f771:	mov    ecx,DWORD PTR [edi-0x1500fe4d]
  40f777:	inc    eax
  40f778:	xor    dh,dh
  40f77a:	pop    eax
  40f77b:	loopne 0x40f779
  40f77d:	mov    dh,BYTE PTR [ebp+esi*2-0x70]
  40f781:	dec    BYTE PTR [eax+0x66]
  40f784:	ja     0x40f77d
  40f786:	mov    edx,0xf024ee6e
  40f78b:	(bad)  
  40f78c:	or     BYTE PTR [edi],bh
  40f78e:	mov    edx,0x1f1cf88c
  40f793:	add    al,0xf
  40f795:	add    BYTE PTR [edi],dh
  40f797:	xor    al,0x73
  40f799:	je     0x40f79b
  40f79b:	add    BYTE PTR [ebx+0x6812133d],dh
  40f7a1:	aaa    
  40f7a2:	sbb    al,0x0
  40f7a4:	mov    esp,0x38f78e72
  40f7a9:	dec    esp
  40f7aa:	cld    
  40f7ab:	ins    BYTE PTR es:[edi],dx
  40f7ac:	stc    
  40f7ad:	ss jb  0x40f7f6
  40f7b0:	fnsave [ecx]
  40f7b2:	mov    ebx,0x12d68943
  40f7b7:	iret   
  40f7b8:	imul   BYTE PTR [ebx]
  40f7ba:	call   0xb888a595
  40f7bf:	shr    BYTE PTR [edx-0x21],1
  40f7c2:	push   esi
  40f7c3:	div    DWORD PTR [eax]
  40f7c5:	stos   DWORD PTR es:[edi],eax
  40f7c6:	dec    edi
  40f7c7:	jns    0x40f790
  40f7c9:	fmul   QWORD PTR ss:[ebx+0x78e7f426]
  40f7d0:	mov    BYTE PTR [eax-0x1045d715],ch
  40f7d6:	out    0x1,eax
  40f7d8:	scas   al,BYTE PTR es:[edi]
  40f7d9:	lock and eax,DWORD PTR [ebx+0x7e737f3]
  40f7e0:	aaa    
  40f7e1:	xor    al,0x69
  40f7e3:	inc    ecx
  40f7e4:	mov    BYTE PTR [eax+ebp*8],dh
  40f7e7:	add    esi,DWORD PTR [esi-0x28fc18c6]
  40f7ed:	xor    esi,DWORD PTR [edi+0x2b]
  40f7f0:	mov    esp,0xbc5bf3e8
  40f7f5:	sbb    al,ch
  40f7f7:	add    edi,DWORD PTR [ebx+0x58205b73]
  40f7fd:	shr    bl,0x78
  40f800:	add    BYTE PTR [eax],al
  40f802:	cmp    dh,BYTE PTR [edi]
  40f804:	pop    esp
  40f805:	cld    
  40f806:	mov    ebx,0xf0d1502f
  40f80b:	fcom   QWORD PTR ss:[ebx-0x79180bdb]
  40f812:	lock mov esp,0xeaa9a100
  40f818:	std    
  40f819:	bnd jne 0x40f7d4
  40f81c:	mov    edi,0x6aa8cea
  40f821:	fimul  DWORD PTR [ebp-0x31]
  40f824:	xchg   ebp,esp
  40f826:	sbb    al,0xab
  40f828:	lds    eax,FWORD PTR [edx-0x79374ec9]
  40f82e:	jmp    0x40f807
  40f830:	pop    ecx
  40f831:	mov    al,0x76
  40f833:	sub    eax,0x37021f01
  40f838:	je     0x40f7ff
  40f83a:	loopne 0x40f7e6
  40f83c:	lock inc cx
  40f83f:	jo     0x40f853
  40f841:	test   eax,0x68f8a934
  40f846:	jae    0x40f87d
  40f848:	(bad)  
  40f849:	call   0xea3eab82
  40f84e:	xor    al,0x94
  40f850:	add    BYTE PTR [esi-0x17b2589c],dh
  40f856:	or     al,0x9
  40f858:	sbb    al,0xe9
  40f85a:	xor    al,0xb0
  40f85c:	rcr    BYTE PTR [ebp-0x3a8bcab0],0x24
  40f863:	xor    eax,0xcd74
  40f868:	and    al,0xdd
  40f86a:	std    
  40f86b:	xlat   BYTE PTR ds:[ebx]
  40f86c:	adc    esp,DWORD PTR [eax]
  40f86e:	(bad)  
  40f86f:	fidiv  DWORD PTR [ebp+esi*1-0x7c]
  40f873:	sub    DWORD PTR [esp+eiz*2-0x75],ebx
  40f877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f878:	(bad)  
  40f87a:	mov    edi,0xeaa1e6c
  40f87f:	scas   eax,DWORD PTR es:[edi]
  40f880:	aaa    
  40f881:	sub    al,0x1
  40f883:	sar    BYTE PTR [eax],cl
  40f885:	mov    cl,0xc8
  40f887:	(bad)  
  40f888:	jl     0x40f861
  40f88a:	ret    0x34e1
  40f88d:	fimul  WORD PTR [edx-0x180f6200]
  40f893:	add    al,0x21
  40f895:	or     edi,0x6a
  40f898:	pop    ss
  40f899:	imul   esp,DWORD PTR [ecx],0xf
  40f89c:	js     0x40f8a3
  40f89e:	repz sbb edi,DWORD PTR [eax-0x62f81c54]
  40f8a5:	repnz sub eax,0xebf1d66
  40f8ab:	mov    dh,0xce
  40f8ad:	push   ebp
  40f8ae:	or     BYTE PTR [edx+0x28],bl
  40f8b1:	add    eax,0xaccc1bd1
  40f8b6:	fild   WORD PTR [edi]
  40f8b8:	pop    ebp
  40f8b9:	out    dx,al
  40f8ba:	sub    eax,0x63e0cd66
  40f8bf:	mov    DWORD PTR [edi],edi
  40f8c1:	push   edx
  40f8c2:	mov    BYTE PTR [ecx-0x24],dl
  40f8c5:	push   0xffffffc2
  40f8c7:	and    DWORD PTR [esi-0x37],0x74
  40f8cb:	or     al,BYTE PTR [eax]
  40f8cd:	add    BYTE PTR [ecx+0x44],dh
  40f8d0:	and    DWORD PTR [ecx+esi*2],eax
  40f8d3:	and    ebx,DWORD PTR [ecx+0x230de12]
  40f8d9:	ror    dh,0xc9
  40f8dc:	jno    0x40f902
  40f8de:	xchg   esi,eax
  40f8df:	(bad)  
  40f8e0:	in     eax,0xa5
  40f8e2:	xor    esi,DWORD PTR [eax]
  40f8e4:	add    DWORD PTR [ebx],esi
  40f8e6:	inc    edi
  40f8e7:	push   edx
  40f8e8:	mov    BYTE PTR [esi+ebp*2],cl
  40f8eb:	out    dx,al
  40f8ec:	add    DWORD PTR [eax],eax
  40f8ee:	or     eax,0x8475fec8
  40f8f3:	leave  
  40f8f4:	jno    0x40f91a
  40f8f6:	pop    edx
  40f8f7:	leave  
  40f8f8:	adc    al,0xc4
  40f8fa:	mov    WORD PTR [eax-0x3],?
  40f8fd:	dec    edi
  40f8fe:	push   ecx
  40f8ff:	inc    esp
  40f900:	and    DWORD PTR [eax],ecx
  40f902:	sbb    al,bl
  40f904:	jg     0x40f923
  40f906:	pop    esi
  40f907:	xor    bh,al
  40f909:	add    al,0x37
  40f90b:	inc    ebp
  40f90c:	add    edx,eax
  40f90e:	cmp    ecx,DWORD PTR [ebx-0x7a]
  40f911:	jnp    0x40f926
  40f913:	inc    edi
  40f914:	add    DWORD PTR [ebp+0x3b],esi
  40f917:	cs inc ecx
  40f919:	jmp    0x17aa:0xfe689e58
  40f920:	push   0x68215373
  40f925:	adc    al,0xaf
  40f927:	das    
  40f928:	sar    edi,0x62
  40f92b:	cwde   
  40f92c:	sub    al,0x0
  40f92e:	mov    dl,0x5b
  40f930:	add    eax,DWORD PTR [ebp+0x31f70000]
  40f936:	or     eax,0x111d5e8
  40f93b:	add    BYTE PTR [edx-0x76f51323],dh
  40f941:	mov    ds:0xed2b23ec,al
  40f946:	pop    eax
  40f947:	inc    ecx
  40f948:	xor    bl,BYTE PTR ds:0x21f55e01
  40f94e:	add    DWORD PTR [ebx+0x13943],eax
  40f954:	popa   
  40f955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f956:	jo     0x40f9cc
  40f958:	cmp    ebp,DWORD PTR [esi]
  40f95a:	inc    ecx
  40f95b:	jmp    0x112a:0xfe6a9e5b
  40f962:	push   0x68255373
  40f967:	adc    al,0x7b
  40f969:	das    
  40f96a:	sar    edi,0xbd
  40f96d:	dec    ebp
  40f96e:	jns    0x40f9b5
  40f970:	ss cwde 
  40f972:	inc    eax
  40f973:	jae    0x40f908
  40f975:	inc    ebp
  40f976:	pushf  
  40f977:	sbb    esi,DWORD PTR [edi]
  40f979:	sbb    eax,0x15e3bf82
  40f97e:	sar    esi,cl
  40f980:	jmp    0x40f97a
  40f982:	hlt    
  40f983:	dec    edi
  40f984:	dec    edi
  40f985:	xor    al,0xee
  40f987:	push   es
  40f988:	aaa    
  40f989:	xor    al,0x3c
  40f98b:	inc    esi
  40f98c:	xor    al,0x34
  40f98e:	aaa    
  40f98f:	shr    BYTE PTR [ebp+0x407d3425],cl
  40f995:	mov    ecx,0xf0bc
  40f99a:	jo     0x40f95b
  40f99c:	fisttp QWORD PTR [ebx-0x7b158bba]
  40f9a2:	and    DWORD PTR [ebx],esi
  40f9a4:	ss cld 
  40f9a6:	sbb    DWORD PTR [eax+0x71013ce],ebp
  40f9ac:	jo     0x40fa1a
  40f9ae:	or     DWORD PTR [edx-0x6d],ebp
  40f9b1:	push   ebp
  40f9b2:	lods   eax,DWORD PTR ds:[esi]
  40f9b3:	or     ebx,DWORD PTR [esi-0x8]
  40f9b6:	cmp    eax,0x36fb36c1
  40f9bb:	sbb    al,0x99
  40f9bd:	or     eax,0x446e3437
  40f9c2:	fs dec ebx
  40f9c4:	pop    ebp
  40f9c5:	add    BYTE PTR [eax],bl
  40f9c7:	test   BYTE PTR [edi+0x2],ch
  40f9ca:	shl    BYTE PTR [edi+0x37ba1006],1
  40f9d0:	mov    dl,0xd3
  40f9d2:	fsubr  st,st(4)
  40f9d4:	out    dx,al
  40f9d5:	add    esi,DWORD PTR [edi]
  40f9d7:	in     al,0xe9
  40f9d9:	pop    esp
  40f9da:	ss data16 sub cl,cl
  40f9de:	or     cl,BYTE PTR [edi-0x48c8ffd8]
  40f9e4:	scas   al,BYTE PTR es:[edi]
  40f9e5:	pop    ds
  40f9e6:	xor    esi,DWORD PTR [edi+esi*4]
  40f9e9:	shr    ecx,1
  40f9eb:	mov    esi,0xa7877d42
  40f9f0:	sar    DWORD PTR [ebx+eax*2-0x8],1
  40f9f4:	clc    
  40f9f5:	ret    
  40f9f6:	js     0x40f9ad
  40f9f8:	jmp    FWORD PTR [eax-0x15]
  40f9fb:	cmp    edi,ebx
  40f9fd:	out    dx,eax
  40f9fe:	add    BYTE PTR [eax],al
  40fa00:	adc    al,0x44
  40fa02:	add    esi,esi
  40fa04:	pop    es
  40fa05:	mov    esi,0x3326eed9
  40fa0a:	aad    0x72
  40fa0c:	fdivr  QWORD PTR [edi+0x1c35fe4d]
  40fa12:	jge    0x40fa06
  40fa14:	xor    al,0x34
  40fa16:	test   DWORD PTR [ecx-0x1077bab8],ebp
  40fa1c:	or     esi,DWORD PTR [ebx]
  40fa1e:	jbe    0x40fa25
  40fa20:	inc    edi
  40fa21:	xor    eax,0x9b8319c4
  40fa26:	sbb    eax,0x2e434e9
  40fa2b:	xchg   edx,eax
  40fa2c:	cmp    ah,BYTE PTR [esi-0x3f]
  40fa2f:	ds std 
  40fa31:	mov    ?,WORD PTR [edi-0x375cb13]
  40fa37:	hlt    
  40fa38:	lods   al,BYTE PTR ds:[esi]
  40fa39:	inc    ebx
  40fa3a:	inc    ecx
  40fa3b:	jmp    0x1cbcebb1
  40fa40:	and    bh,bl
  40fa42:	xor    BYTE PTR [ebx-0x103e46f9],bl
  40fa48:	sub    al,0x41
  40fa4a:	mov    ah,0x25
  40fa4c:	in     eax,0xb6
  40fa4e:	cld    
  40fa4f:	or     edi,eax
  40fa51:	cmp    al,0x80
  40fa53:	cs inc edi
  40fa55:	xchg   edi,eax
  40fa56:	or     BYTE PTR [esi-0x48],0xaa
  40fa5a:	add    ebp,DWORD PTR [eax-0x422e9186]
  40fa60:	or     al,0x5e
  40fa62:	ret    0x64
  40fa65:	add    BYTE PTR [eax],dh
  40fa67:	or     BYTE PTR [esi-0x3547f05f],0xa1
  40fa6e:	es inc ecx
  40fa70:	mov    ah,0xdd
  40fa72:	retf   0xfcb6
  40fa75:	leave  
  40fa76:	nop
  40fa77:	cmp    al,0x80
  40fa79:	es pop es
  40fa7b:	xchg   edi,eax
  40fa7c:	add    BYTE PTR [eax],0x39
  40fa7f:	xor    DWORD PTR [esp+eax*1-0x5a],esi
  40fa83:	out    dx,al
  40fa84:	jns    0x40fa70
  40fa86:	leave  
  40fa87:	pusha  
  40fa88:	shl    DWORD PTR [esi+0x79],cl
  40fa8b:	mov    dl,0xbc
  40fa8d:	jle    0x40fad4
  40fa8f:	lods   al,BYTE PTR ds:[esi]
  40fa90:	or     BYTE PTR [eax],al
  40fa92:	clts   
  40fa94:	push   edi
  40fa95:	call   0x423804
  40fa9a:	sbb    eax,0x2a89666f
  40fa9f:	out    dx,eax
  40faa0:	mov    edi,0xd8664053
  40faa5:	mov    ebx,esi
  40faa7:	sub    BYTE PTR [esi+eax*1+0x66cd087b],dh
  40faae:	popf   
  40faaf:	sahf   
  40fab0:	or     DWORD PTR [edi+0x13],esi
  40fab3:	sub    dh,BYTE PTR [edx+eax*8+0x508e39b5]
  40faba:	imul   edx,DWORD PTR [edx],0x21e3fa80
  40fac0:	add    al,0x5
  40fac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fac3:	cwde   
  40fac4:	cld    
  40fac5:	push   DWORD PTR [ebp+0x508e29]
  40facb:	add    BYTE PTR [ecx+0x12],ch
  40face:	cmp    dl,0xe3
  40fad1:	and    DWORD PTR [ecx],ebx
  40fad3:	add    eax,0xfffc98a7
  40fad8:	push   edx
  40fad9:	jge    0x40fb4b
  40fadb:	pop    es
  40fadc:	(bad)  
  40fadd:	aaa    
  40fade:	inc    edx
  40fadf:	xor    dl,BYTE PTR [ebp-0x73]
  40fae2:	add    eax,eax
  40fae4:	(bad)  
  40fae5:	xor    ecx,DWORD PTR [ecx-0x7fc8e2ff]
  40faeb:	(bad)  
  40faec:	mov    WORD PTR [ebp+0x782366ba],cs
  40faf2:	jne    0x40fafc
  40faf4:	adc    bh,BYTE PTR [ebp+0x75]
  40faf7:	add    al,0x37
  40faf9:	mov    eax,DWORD PTR [esi]
  40fafb:	jmp    0x40fb32
  40fafd:	or     eax,0x5e0c5d41
  40fb02:	ror    BYTE PTR [edx+0xb599d5b],cl
  40fb08:	mov    ah,0xbf
  40fb0a:	inc    DWORD PTR fs:0x3f7477c9
  40fb11:	test   al,0xf4
  40fb13:	add    eax,0x82f957bc
  40fb18:	pop    ss
  40fb19:	sbb    ecx,esp
  40fb1b:	mov    dl,ch
  40fb1d:	add    ch,BYTE PTR [eax]
  40fb1f:	icebp  
  40fb20:	inc    eax
  40fb21:	call   0x4478:0x1e28ff64
  40fb28:	inc    edi
  40fb29:	call   0xea71:0x58ae0160
  40fb30:	add    BYTE PTR [eax],al
  40fb32:	cmp    ah,BYTE PTR [edx-0x1a43f80f]
  40fb38:	jg     0x40fbb6
  40fb3a:	or     ebx,DWORD PTR [esi]
  40fb3c:	js     0x40fb1b
  40fb3e:	and    DWORD PTR [ecx],0x78
  40fb41:	lds    ebp,FWORD PTR [esp+ebp*4]
  40fb44:	out    dx,eax
  40fb45:	or     edi,DWORD PTR [ebp+0x4b552b0d]
  40fb4b:	xor    DWORD PTR [edx],eax
  40fb4d:	inc    eax
  40fb4e:	sbb    al,0xdc
  40fb50:	repnz repz mov esp,0x77fe1795
  40fb57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb58:	rol    DWORD PTR [edi],0xcc
  40fb5b:	sbb    bh,cl
  40fb5d:	mov    WORD PTR [edx],?
  40fb5f:	adc    eax,0xd49ff078
  40fb64:	sti    
  40fb65:	jmp    FWORD PTR [eax-0xd75975e]
  40fb6b:	push   0x902b7477
  40fb70:	hlt    
  40fb71:	mov    WORD PTR [ebx],?
  40fb73:	xor    al,0xea
  40fb75:	add    esi,DWORD PTR [edi]
  40fb77:	sbb    al,0xc9
  40fb79:	or     DWORD PTR [edi],esi
  40fb7b:	xor    al,0x6e
  40fb7d:	inc    ebx
  40fb7e:	sub    DWORD PTR [eax+0x3437033f],edi
  40fb84:	ins    DWORD PTR es:[edi],dx
  40fb85:	data16 in al,0x49
  40fb88:	xchg   edi,eax
  40fb89:	jp     0x40fc04
  40fb8b:	sbb    al,0x25
  40fb8d:	push   0xd0602f59
  40fb92:	dec    esp
  40fb93:	mov    ebx,0x79b4
  40fb98:	aas    
  40fb99:	mov    ebp,0xf4bb92e6
  40fb9e:	jecxz  0x40fc1f
  40fba0:	stos   DWORD PTR es:[edi],eax
  40fba1:	xor    al,0xea
  40fba3:	add    ebp,DWORD PTR [ecx]
  40fba5:	jns    0x40fb81
  40fba7:	add    ah,BYTE PTR [ebx+0x1cb76f9e]
  40fbad:	mov    ebx,0xc01879ac
  40fbb2:	out    0x7b,al
  40fbb4:	mov    ch,0x6b
  40fbb6:	jmp    0x1cd:0xdabb69ef
  40fbbd:	dec    ecx
  40fbbe:	scas   al,BYTE PTR es:[edi]
  40fbbf:	adc    dh,BYTE PTR [edi+0x34]
  40fbc2:	gs inc esp
  40fbc4:	jb     0x40fb48
  40fbc6:	mov    bh,0x51
  40fbc8:	and    eax,0x6244662f
  40fbcd:	inc    esi
  40fbce:	pusha  
  40fbcf:	clc    
  40fbd0:	and    DWORD PTR [ecx+esi*2+0x6a3c4b24],esi
  40fbd7:	pop    ebx
  40fbd8:	aas    
  40fbd9:	mov    ah,0x61
  40fbdb:	add    BYTE PTR [eax+0x36],cl
  40fbde:	test   al,0xbc
  40fbe0:	std    
  40fbe1:	sub    ecx,edi
  40fbe3:	pop    ecx
  40fbe4:	pop    ebp
  40fbe5:	bnd jne 0x40fc10
  40fbe8:	rcr    DWORD PTR gs:[edx+0x201bb64],0xb1
  40fbf0:	sub    BYTE PTR [edx+0x2bb4f30d],bh
  40fbf6:	and    bl,BYTE PTR [ebp-0xf155174]
  40fbfc:	add    BYTE PTR [eax],al
  40fbfe:	mov    ah,0x2b
  40fc00:	push   es
  40fc01:	sahf   
  40fc02:	js     0x40fc7a
  40fc04:	inc    edi
  40fc05:	nop
  40fc06:	or     BYTE PTR [edx-0x5],ch
  40fc09:	jg     0x40fc6b
  40fc0b:	mov    bh,0xc1
  40fc0d:	jg     0x40fc6b
  40fc0f:	jle    0x40fc65
  40fc11:	lahf   
  40fc12:	cld    
  40fc13:	mov    esp,0xf634e917
  40fc18:	add    eax,0x46bb3319
  40fc1d:	loope  0x40fbfa
  40fc1f:	ja     0x40fc1e
  40fc21:	adc    BYTE PTR [eax+0x36],bh
  40fc24:	or     al,0x6b
  40fc26:	sub    ebp,DWORD PTR [edi]
  40fc28:	std    
  40fc29:	(bad)  
  40fc2a:	scas   eax,DWORD PTR es:[edi]
  40fc2b:	js     0x40fc2a
  40fc2d:	push   ds
  40fc2e:	stc    
  40fc2f:	mov    cl,dl
  40fc31:	stos   DWORD PTR es:[edi],eax
  40fc32:	inc    esp
  40fc33:	xor    al,0x88
  40fc35:	and    al,0x9f
  40fc37:	mov    edx,0x4bf791fb
  40fc3c:	add    ecx,ebp
  40fc3e:	mov    bh,0xf5
  40fc40:	cld    
  40fc41:	sbb    BYTE PTR [esi-0x78],0x88
  40fc45:	jge    0x40fbfe
  40fc47:	sbb    DWORD PTR [esi],ecx
  40fc49:	push   0x9
  40fc4b:	add    bl,BYTE PTR es:[edx]
  40fc4e:	icebp  
  40fc4f:	mov    edx,0x343a6aef
  40fc54:	mov    ss,ebp
  40fc56:	int3   
  40fc57:	xchg   BYTE PTR [edx+0x56bc50ac],cl
  40fc5d:	push   ebp
  40fc5e:	pslld  mm1,QWORD PTR [edx+ebp*2]
  40fc62:	add    BYTE PTR [eax],al
  40fc64:	jne    0x40fc93
  40fc66:	std    
  40fc67:	jmp    0xc2319a
  40fc6c:	not    DWORD PTR [eax+0x75]
  40fc6f:	or     cl,BYTE PTR [esi]
  40fc71:	call   0xdf9:0xb1937c09
  40fc78:	loope  0x40fca3
  40fc7a:	cmp    eax,0x3795db89
  40fc7f:	ret    0x909c
  40fc82:	aaa    
  40fc83:	ret    0xb491
  40fc86:	pushf  
  40fc87:	add    BYTE PTR [esi+0x31],bl
  40fc8a:	xchg   DWORD PTR [eax],ebx
  40fc8c:	jecxz  0x40fca6
  40fc8e:	add    al,BYTE PTR [eax+0x5755035]
  40fc94:	into   
  40fc95:	fwait
  40fc96:	and    dh,BYTE PTR [ebp+0x69]
  40fc99:	stos   BYTE PTR es:[edi],al
  40fc9a:	jge    0x40fc98
  40fc9c:	gs dec esp
  40fc9e:	xchg   DWORD PTR [edi],ecx
  40fca0:	into   
  40fca1:	mov    ds,WORD PTR [esp+esi*2]
  40fca4:	push   ecx
  40fca5:	mov    cl,0xf9
  40fca7:	or     DWORD PTR [edx+0x23f9813b],eax
  40fcad:	adc    eax,DWORD PTR [esi]
  40fcaf:	inc    edi
  40fcb0:	xor    eax,0x95ea728e
  40fcb5:	jno    0x40fcde
  40fcb7:	fdiv   st,st(5)
  40fcb9:	pop    edi
  40fcba:	cmp    DWORD PTR [edi],ebx
  40fcbc:	sub    esp,DWORD PTR ds:0xf993c930
  40fcc2:	sti    
  40fcc3:	jmp    0x40fcd1
  40fcc5:	clc    
  40fcc6:	inc    esp
  40fcc7:	add    BYTE PTR [eax],0x0
  40fcca:	push   es
  40fccb:	in     eax,dx
  40fccc:	jo     0x40fcc7
  40fcce:	push   0xdb740177
  40fcd3:	stc    
  40fcd4:	aaa    
  40fcd5:	cli    
  40fcd6:	fcom   QWORD PTR [edi+esi*1-0x3ca3406]
  40fcdd:	dec    ebp
  40fcde:	push   edx
  40fcdf:	mov    ebp,0x8c832bdb
  40fce4:	xchg   DWORD PTR [ebp+0x37],ecx
  40fce7:	adc    DWORD PTR [edx+0x116c20b],0x0
  40fcee:	aaa    
  40fcef:	sbb    DWORD PTR [edx-0x7ae4c8e9],0xffffffbf
  40fcf6:	and    esp,DWORD PTR [ecx]
  40fcf8:	mov    bl,dl
  40fcfa:	or     dl,BYTE PTR [ecx]
  40fcfc:	adc    al,0xc0
  40fcfe:	pop    ds
  40fcff:	stos   BYTE PTR es:[edi],al
  40fd00:	fnstcw WORD PTR [edi]
  40fd02:	aaa    
  40fd03:	fld    TBYTE PTR [ebx+0x4]
  40fd06:	js     0x40fcd7
  40fd08:	pop    esp
  40fd09:	mov    dh,BYTE PTR [edx+esi*1-0x42]
  40fd0d:	sti    
  40fd0e:	push   0xac0d8c35
  40fd13:	(bad)  
  40fd14:	pop    eax
  40fd15:	mov    BYTE PTR [ebx],dh
  40fd17:	mov    WORD PTR [edx+0x6004cbbf],cs
  40fd1d:	inc    esp
  40fd1e:	dec    edi
  40fd1f:	mov    eax,ds:0xa3f8f3b9
  40fd24:	loope  0x40fd21
  40fd26:	lods   al,BYTE PTR ds:[esi]
  40fd27:	(bad)  [ebp+0x36]
  40fd2a:	xor    bl,bh
  40fd2c:	pop    edi
  40fd2d:	mov    al,BYTE PTR [eax]
  40fd2f:	add    BYTE PTR [edx-0xb],dh
  40fd32:	imul   ecx,DWORD PTR [esp+ebp*4],0x50
  40fd36:	pop    ebp
  40fd37:	mov    bl,BYTE PTR [ecx-0xb]
  40fd3a:	retf   
  40fd3b:	sbb    BYTE PTR [edi],dh
  40fd3d:	sbb    eax,0x7308c784
  40fd42:	mov    edi,0xb9deee5a
  40fd47:	mov    cl,BYTE PTR [ebx]
  40fd49:	lahf   
  40fd4a:	ins    BYTE PTR es:[edi],dx
  40fd4b:	or     esi,DWORD PTR [eax+esi*1+0x4b85ff5d]
  40fd52:	mov    ecx,?
  40fd54:	mov    ah,0xf3
  40fd56:	add    BYTE PTR [ebp-0x7747aac5],cl
  40fd5c:	jp     0x40fcf7
  40fd5e:	lea    ebx,[ebx+eax*8+0x34]
  40fd62:	pop    ds
  40fd63:	inc    edi
  40fd64:	xor    DWORD PTR [edi+0x34370335],esi
  40fd6a:	jecxz  0x40fd06
  40fd6c:	cmp    BYTE PTR [edi+0x3e232351],dh
  40fd72:	addr16 pop esp
  40fd74:	das    
  40fd75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd76:	jmp    0x40fcfe
  40fd78:	lahf   
  40fd79:	cmp    DWORD PTR [ebx-0x170b4bf3],edi
  40fd7f:	mov    ebx,?
  40fd81:	daa    
  40fd82:	loopne 0x40fdca
  40fd84:	push   es
  40fd85:	adc    al,ah
  40fd87:	inc    esi
  40fd88:	sub    DWORD PTR [edi+0x34370359],esi
  40fd8e:	fistp  DWORD PTR [edx+0x582b930]
  40fd94:	add    BYTE PTR [eax],al
  40fd96:	mov    ah,0x2d
  40fd98:	(bad)  
  40fd99:	xlat   BYTE PTR ds:[ebx]
  40fd9a:	xor    esi,DWORD PTR [edi+0x47ca24f1]
  40fda0:	pop    edi
  40fda1:	xor    al,0xbf
  40fda3:	test   eax,0x3b036de6
  40fda8:	xchg   ebx,eax
  40fda9:	adc    DWORD PTR [ebp+ebp*1-0x48b827f5],esi
  40fdb0:	ror    DWORD PTR [ebx],1
  40fdb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdb3:	xor    DWORD PTR [edi+0x5b],esp
  40fdb6:	xor    esp,DWORD PTR [edx+0x35f184e3]
  40fdbc:	out    dx,eax
  40fdbd:	pop    esp
  40fdbe:	xchg   BYTE PTR [ebx],dl
  40fdc0:	pusha  
  40fdc1:	inc    ecx
  40fdc2:	pop    ebp
  40fdc3:	or     al,0x90
  40fdc5:	xor    DWORD PTR [ecx+0x22d6f36d],ebx
  40fdcb:	addr16 mov eax,ds:0x798f
  40fdcf:	sub    al,BYTE PTR [eax-0x6d4889f8]
  40fdd5:	push   es
  40fdd6:	pop    ecx
  40fdd7:	mov    bh,0xc2
  40fdd9:	mov    edi,0x7f022264
  40fdde:	je     0x40fe14
  40fde0:	jne    0x40fdc8
  40fde2:	mov    bl,0xf1
  40fde4:	jmp    DWORD PTR [ecx]
  40fde6:	bound  esp,QWORD PTR [ebp-0x5fa5dd25]
  40fdec:	add    eax,0x2ea06a
  40fdf1:	(bad)  
  40fdf2:	neg    BYTE PTR [ebp+0x5e]
  40fdf5:	inc    ebp
  40fdf6:	mov    dl,0x77
  40fdf8:	stc    
  40fdf9:	ins    BYTE PTR es:[edi],dx
  40fdfa:	add    BYTE PTR [eax],al
  40fdfc:	inc    edi
  40fdfd:	mov    ecx,0x3434e905
  40fe02:	shl    BYTE PTR [edx],cl
  40fe04:	sbb    edx,ebx
  40fe06:	adc    al,0xe9
  40fe08:	xor    al,0xb0
  40fe0a:	rcl    DWORD PTR [ebp-0x63274ee8],0x42
  40fe11:	rol    DWORD PTR [bx+di-0x5920],0x41
  40fe17:	jmp    0xfe481b90
  40fe1c:	sub    DWORD PTR [esi],0x39e32a89
  40fe22:	clc    
  40fe23:	out    dx,al
  40fe24:	xlat   BYTE PTR ds:[ebx]
  40fe25:	mov    ebp,0x2289720b
  40fe2a:	mov    esp,ebp
  40fe2c:	lds    ebp,FWORD PTR [edi+0x2b335dc1]
  40fe32:	inc    edi
  40fe33:	sar    DWORD PTR [ebx+0x6f6af588],1
  40fe39:	xor    ecx,DWORD PTR [edx-0x3b4168c4]
  40fe3f:	rcr    BYTE PTR [ebx+0x29],0xfd
  40fe43:	scas   al,BYTE PTR es:[edi]
  40fe44:	mov    ebx,0x3192f970
  40fe49:	mov    ebp,0x67aba146
  40fe4e:	jmp    0xfd6aeb28
  40fe53:	push   0x7c
  40fe55:	sub    bl,BYTE PTR [ebp+0x0]
  40fe58:	sbb    bh,ah
  40fe5a:	leave  
  40fe5b:	ret    
  40fe5c:	inc    ebx
  40fe5d:	mov    bh,0xe8
  40fe5f:	add    DWORD PTR [eax],0x0
  40fe62:	mov    edx,0x8d565021
  40fe67:	push   0xbe593353
  40fe6c:	pop    ebp
  40fe6d:	hlt    
  40fe6e:	inc    edi
  40fe6f:	jmp    0x860c:0x39eb39f4
  40fe76:	mov    ch,0x35
  40fe78:	add    DWORD PTR [eax],eax
  40fe7a:	and    eax,0xd38bf4fa
  40fe7f:	cmp    eax,0xb816048e
  40fe84:	or     al,0xc6
  40fe86:	rcl    DWORD PTR [esp+edi*8-0x78662c78],cl
  40fe8d:	retf   0x2225
  40fe90:	add    DWORD PTR [bp+0x55],0x75
  40fe95:	sbb    DWORD PTR [eax-0x23f60b50],esi
  40fe9b:	cmp    ah,BYTE PTR [ebx-0x7d]
  40fe9e:	cmp    dh,BYTE PTR ss:[ebx+0xd]
  40fea2:	fnsave [ebp+0x2]
  40fea5:	lmsw   WORD PTR [esi]
  40fea8:	arpl   WORD PTR [ebp-0x141ff472],ax
  40feae:	push   edx
  40feaf:	outs   dx,DWORD PTR ds:[esi]
  40feb0:	inc    ebp
  40feb1:	call   FWORD PTR [edi]
  40feb3:	jecxz  0x40feb0
  40feb5:	adc    eax,0x3d26a6
  40feba:	stos   DWORD PTR es:[edi],eax
  40febb:	inc    esp
  40febc:	cmp    DWORD PTR [ebp-0x72f6c8b6],ecx
  40fec2:	push   ebx
  40fec3:	mov    WORD PTR [ecx-0x31ffffbb],cs
  40fec9:	xchg   edi,eax
  40feca:	in     al,0x16
  40fecc:	push   cs
  40fecd:	xor    eax,0xea22c085
  40fed2:	jg     0x40ff51
  40fed4:	aaa    
  40fed5:	ret    
  40fed6:	add    eax,0xd3bf8a8b
  40fedb:	pop    es
  40fedc:	dec    ebp
  40fedd:	sti    
  40fede:	mov    eax,0xd80eae65
  40fee3:	inc    esi
  40fee4:	mov    bh,0x1f
  40fee6:	pop    esp
  40fee7:	inc    DWORD PTR [ebx+edx*1-0x15]
  40feeb:	and    DWORD PTR [edi-0x7],ebx
  40feee:	lea    eax,[ebx]
  40fef0:	cmp    al,0xd2
  40fef2:	xchg   DWORD PTR [ebx+eiz*4-0x7f],eax
  40fef6:	adc    eax,0x928af28b
  40fefb:	xor    ebx,DWORD PTR [ebx+eax*4]
  40fefe:	dec    edi
  40feff:	clc    
  40ff00:	cwde   
  40ff01:	imul   eax,DWORD PTR [eax],0xe29a877d
  40ff07:	(bad)  
  40ff08:	aaa    
  40ff09:	fisttp WORD PTR [esi]
  40ff0b:	push   0x55
  40ff0d:	repz out 0x88,al
  40ff10:	xor    edx,esi
  40ff12:	ret    
  40ff13:	xor    dh,BYTE PTR [edi-0x48]
  40ff16:	lea    eax,[ebx]
  40ff18:	in     al,dx
  40ff19:	cmp    edx,ecx
  40ff1b:	imul   DWORD PTR [edi+edx*8+0x16f23a58]
  40ff22:	or     al,0x82
  40ff24:	jmp    0xbc5d:0xbcfe5c21
  40ff2b:	pop    ebp
  40ff2c:	add    BYTE PTR [eax],al
  40ff2e:	fsubr  st(3),st
  40ff30:	inc    edx
  40ff31:	pop    es
  40ff32:	aaa    
  40ff33:	or     bl,dl
  40ff35:	repz pop ds
  40ff37:	pop    esi
  40ff38:	hlt    
  40ff39:	jmp    FWORD PTR [eax]
  40ff3b:	dec    ebx
  40ff3c:	inc    ebp
  40ff3d:	jmp    0x9a2f:0x23d4ef12
  40ff44:	dec    eax
  40ff45:	(bad)  
  40ff46:	adc    BYTE PTR [edx+0x29],ch
  40ff49:	or     BYTE PTR [ebp+0x871691d],bl
  40ff4f:	xor    eax,0x3cf65ea3
  40ff54:	jmp    0xbdb7:0x3d18bdb8
  40ff5b:	sub    eax,0xbb38d060
  40ff60:	jp     0x40feea
  40ff62:	out    dx,eax
  40ff63:	mov    eax,ds:0xa0d188ee
  40ff68:	fiadd  WORD PTR [edx+0x7f8227f0]
  40ff6e:	shl    BYTE PTR [edi],0xeb
  40ff71:	mov    BYTE PTR [ecx+0x7712eba1],bh
  40ff77:	je     0x40ffba
  40ff79:	jae    0x40ff23
  40ff7b:	daa    
  40ff7c:	jmp    0x40ff90
  40ff7e:	ja     0x40ff9d
  40ff80:	jb     0x40ff85
  40ff82:	aaa    
  40ff83:	xor    al,0x97
  40ff85:	mov    dh,BYTE PTR [ebx]
  40ff87:	lock fadd st,st(3)
  40ff8a:	mov    BYTE PTR [edx+0x640b5e2c],dh
  40ff90:	addr16 loopne 0x40ff93
  40ff93:	add    BYTE PTR [edi+eiz*1],ch
  40ff96:	xchg   esi,eax
  40ff97:	and    DWORD PTR [ebp+0x279de32f],edi
  40ff9d:	aaa    
  40ff9e:	dec    esp
  40ff9f:	xor    ecx,DWORD PTR ds:0xdb67e22
  40ffa5:	mul    DWORD PTR [esi+0x43]
  40ffa8:	les    eax,FWORD PTR [ebx+ebp*4+0x2c373189]
  40ffaf:	pop    ss
  40ffb0:	(bad)  
  40ffb1:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40ffb3:	xor    al,0xd
  40ffb5:	and    dl,BYTE PTR [edi+0x6e]
  40ffb8:	sbb    eax,0x55d3975
  40ffbd:	mov    ebx,0x23ac0c1d
  40ffc2:	push   0x36272cdf
  40ffc7:	or     ebp,DWORD PTR [eax+0x27]
  40ffca:	add    bl,BYTE PTR [edx+0x600977be]
  40ffd0:	clc    
  40ffd1:	cmp    cl,BYTE PTR [eax-0x1094d8c4]
  40ffd7:	adc    al,0x14
  40ffd9:	mov    cl,0xf3
  40ffdb:	sbb    eax,0x15cfafe8
  40ffe0:	fsub   QWORD PTR [ecx-0x3f]
  40ffe3:	ins    BYTE PTR es:[edi],dx
  40ffe4:	and    eax,0xb2ee16a9
  40ffe9:	arpl   WORD PTR [edi+esi*1],cx
  40ffec:	retf   0xf059
  40ffef:	hlt    
  40fff0:	das    
  40fff1:	jne    0x410037
  40fff3:	test   eax,0x4e7df21f
  40fff8:	add    BYTE PTR [eax],al
  40fffa:	push   ds
  40fffb:	xor    eax,0xfd465b28
  410000:	xchg   BYTE PTR [edi+0x32],dl
  410003:	mov    edx,0xda1df172
  410009:	loop   0x40ffff
  41000b:	mov    DWORD PTR [esi+0x21273da5],ecx
  410011:	sub    dl,al
  410013:	mov    BYTE PTR [esi+0x2b],bl
  410016:	sub    esi,DWORD PTR [esi+edx*2]
  410019:	jb     0x410002
  41001b:	adc    BYTE PTR [edx+eiz*2+0xc],0xba
  410020:	dec    esi
  410021:	loope  0x40ffd2
  410023:	push   ss
  410024:	xchg   DWORD PTR [eax],esi
  410026:	cmp    BYTE PTR [edx],0x86
  410029:	(bad)  
  41002a:	push   0xea218042
  41002f:	sbb    ebx,DWORD PTR [ebp-0x79cbcb17]
  410035:	out    0x61,al
  410037:	xor    eax,0x1cf4a930
  41003c:	xchg   ecx,eax
  41003d:	jmp    0xa9713476
  410042:	lea    edi,[ecx+0x320e0001]
  410048:	push   eax
  410049:	mov    esi,ebx
  41004b:	test   eax,0xb51e4012
  410050:	(bad)  
  410051:	dec    DWORD PTR [ebx+0x57]
  410054:	cmp    BYTE PTR [ebp+0x2],0x89
  410058:	jne    0x41007b
  41005a:	loope  0x41001c
  41005c:	add    ecx,DWORD PTR [edi]
  41005e:	add    BYTE PTR [eax],al
  410060:	mov    DWORD PTR [edx+0x28],eax
  410063:	lock dec ebx
  410065:	hlt    
  410066:	daa    
  410067:	iret   
  410068:	sub    BYTE PTR [ebp-0x4cd48b44],ch
  41006e:	ret    
  41006f:	add    dl,cl
  410071:	rol    BYTE PTR [ebx],0xf
  410074:	or     DWORD PTR ds:0xfd5e2b3a,edi
  41007a:	in     eax,dx
  41007b:	jmp    0x410058
  41007d:	loop   0x41007a
  41007f:	rcl    DWORD PTR ds:0xfe8b04f6,cl
  410085:	mov    bl,0x7d
  410087:	or     al,0xf1
  410089:	std    
  41008a:	or     DWORD PTR [edi+0x51],edx
  41008d:	xchg   DWORD PTR fs:[ebp-0x6a],ecx
  410091:	mov    edx,0xde150c45
  410096:	or     BYTE PTR [ebx],bh
  410098:	sbb    al,0xfe
  41009a:	and    eax,0x21fd4885
  41009f:	test   DWORD PTR [edi*8-0x51f1cce3],ebp
  4100a6:	sar    BYTE PTR [esi+0x57],cl
  4100a9:	cmp    BYTE PTR [ecx+esi*1+0x2b1bc061],dh
  4100b0:	dec    ebp
  4100b1:	dec    DWORD PTR [ebx]
  4100b3:	or     DWORD PTR [edi],0x33
  4100b6:	add    bh,0x4c
  4100b9:	icebp  
  4100ba:	aaa    
  4100bb:	ret    0x9592
  4100be:	out    0x2,eax
  4100c0:	aaa    
  4100c1:	xor    dl,BYTE PTR [ebx+0x32]
  4100c4:	add    BYTE PTR [eax],al
  4100c6:	out    dx,al
  4100c7:	(bad)  
  4100c8:	dec    edi
  4100c9:	push   cs
  4100ca:	mov    eax,0x8c58cdb
  4100cf:	sar    esp,cl
  4100d1:	mov    edi,0x8c9906c
  4100d6:	add    BYTE PTR [edx],bh
  4100d8:	inc    esi
  4100d9:	pop    esi
  4100da:	pop    ecx
  4100db:	jo     0x410120
  4100dd:	pop    es
  4100de:	aaa    
  4100df:	ret    0x3a02
  4100e2:	std    
  4100e3:	inc    esi
  4100e4:	or     al,BYTE PTR [eax-0x53]
  4100e7:	adc    bh,BYTE PTR [ebp-0x38]
  4100ea:	bound  ebp,QWORD PTR [eax+0x194bca1b]
  4100f0:	adc    al,0xc0
  4100f2:	hlt    
  4100f3:	mov    cl,0xd
  4100f5:	data16 cld 
  4100f7:	rcl    cl,1
  4100f9:	adc    DWORD PTR [edx+ebx*2+0x22e80f03],esi
  410100:	jecxz  0x410086
  410102:	jle    0x41010b
  410104:	push   ecx
  410105:	gs pop esi
  410107:	sub    ecx,ebp
  410109:	add    DWORD PTR [ebx+ebx*2+0x44],esp
  41010d:	push   esp
  41010e:	mov    esp,0xf28ab676
  410113:	adc    cl,BYTE PTR [esi+0x3c8f8344]
  410119:	jle    0x41014d
  41011b:	call   0x8caf:0x597efe4d
  410122:	and    esp,DWORD PTR [edx]
  410124:	mov    bl,0x56
  410126:	dec    edi
  410127:	jmp    0x41011b
  410129:	inc    DWORD PTR [eax]
  41012b:	add    BYTE PTR [eax-0x61],bl
  41012e:	ret    0xe70b
  410131:	and    eax,0xc5e4fbd2
  410136:	push   edi
  410137:	adc    al,0xa7
  410139:	or     ecx,eax
  41013b:	inc    DWORD PTR ds:0xbfe1b134
  410141:	jo     0x41015f
  410143:	pop    edx
  410144:	mov    dh,BYTE PTR [edi+0x2dab5ad2]
  41014a:	xor    ebx,DWORD PTR [ebx+0x43]
  41014d:	mov    esp,0xed10c3d8
  410152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410153:	push   ss
  410154:	(bad)  
  410155:	call   0xb6a7:0xed780761
  41015c:	lods   eax,DWORD PTR ds:[esi]
  41015d:	or     dh,0xb
  410160:	mov    edx,0xb4011c23
  410165:	in     al,dx
  410166:	xchg   ebx,eax
  410167:	mov    esi,0x6c348bf5
  41016c:	sub    DWORD PTR [edx-0x16],ecx
  41016f:	add    eax,edx
  410171:	js     0x410139
  410173:	pop    es
  410174:	xchg   DWORD PTR [bp+di],ebx
  410177:	mov    dl,0xc1
  410179:	dec    ecx
  41017a:	pop    esi
  41017b:	idiv   al
  41017d:	xor    ebp,DWORD PTR [edi+edi*4]
  410180:	jb     0x4101a5
  410182:	jmp    0x41010a
  410184:	mov    al,ds:0x90cde23
  410189:	and    esi,esi
  41018b:	aas    
  41018c:	inc    esi
  41018d:	je     0x410179
  41018f:	mov    esi,0xfa750000
  410194:	out    0x13,al
  410196:	aaa    
  410197:	jg     0x4101c0
  410199:	mov    ah,dh
  41019b:	push   edi
  41019c:	fidiv  WORD PTR [ebx+0x7cea879]
  4101a2:	jo     0x41014c
  4101a4:	mov    BYTE PTR [edi],0x5f
  4101a7:	popf   
  4101a8:	jmp    0x4c8e:0xb5f73703
  4101af:	test   DWORD PTR [esi+ecx*4+0x196f8b60],ebx
  4101b6:	mov    edx,0x84e50179
  4101bb:	and    dh,BYTE PTR [edi-0x1f]
  4101be:	test   eax,0xa3b788f6
  4101c3:	pop    esi
  4101c4:	repz fimul WORD PTR [esi-0x452ab954]
  4101cb:	sub    bh,ch
  4101cd:	push   esp
  4101ce:	sbb    DWORD PTR [eax-0x46c7c328],edi
  4101d4:	cld    
  4101d5:	xor    al,0x3c
  4101d7:	and    esi,DWORD PTR [ecx+eax*8]
  4101da:	into   
  4101db:	inc    esi
  4101dc:	add    ecx,ebp
  4101de:	push   ebp
  4101df:	bound  ecx,QWORD PTR [esi-0x16cb0dcb]
  4101e5:	mov    esp,edx
  4101e7:	and    bh,ch
  4101e9:	bound  esp,QWORD PTR [eax+0x6c2f5d1e]
  4101ef:	not    BYTE PTR [esi+0x72]
  4101f2:	pop    edi
  4101f3:	test   BYTE PTR [eax+0x6f000004],al
  4101f9:	and    edx,DWORD PTR [edi+0x64]
  4101fc:	xor    BYTE PTR [edx],0x51
  4101ff:	outs   dx,BYTE PTR ds:[esi]
  410200:	call   0x8ed9033
  410205:	sbb    esi,DWORD PTR [ebx+0x57]
  410208:	push   cs
  410209:	and    cl,BYTE PTR [ecx+0x7b292059]
  41020f:	jecxz  0x410210
  410211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410212:	std    
  410213:	push   ecx
  410214:	inc    si
  410216:	add    ecx,ebp
  410218:	sbb    edi,DWORD PTR [ebx]
  41021a:	mov    BYTE PTR [eax+ebp*8-0x521eb153],ch
  410221:	xor    ecx,DWORD PTR [eax-0x3f1452d1]
  410227:	mov    ah,0xbb
  410229:	push   cs
  41022a:	push   ebx
  41022b:	push   0xffffff80
  41022d:	push   ds
  41022e:	add    dh,BYTE PTR [edi+0x11a7ff]
  410234:	lea    esi,[esi-0x5]
  410237:	jne    0x410293
  410239:	mov    ecx,0x7436fc4d
  41023e:	cmc    
  41023f:	dec    DWORD PTR [ecx-0x51]
  410242:	in     al,dx
  410243:	test   DWORD PTR [eax],edx
  410245:	dec    DWORD PTR [edx]
  410247:	inc    DWORD PTR [ebx+0x2241e47c]
  41024d:	ss add ebx,ebp
  410250:	push   ss
  410251:	mov    cl,0x45
  410253:	cld    
  410254:	test   edx,edi
  410256:	add    al,0x89
  410258:	pop    ds
  410259:	mov    cl,0xc6
  41025b:	pop    esi
  41025c:	add    BYTE PTR [eax],al
  41025e:	xlat   BYTE PTR ds:[ebx]
  41025f:	ja     0x410269
  410261:	add    cl,cl
  410263:	inc    ebx
  410264:	jmp    0x176f492
  410269:	push   0xffffffda
  41026b:	jecxz  0x410251
  41026d:	push   ss
  41026e:	jecxz  0x4102a5
  410270:	add    ebx,eax
  410272:	and    DWORD PTR [edi+0x7cb983f4],ebp
  410278:	jne    0x410286
  41027a:	dec    ecx
  41027b:	icebp  
  41027c:	and    BYTE PTR [eax],cl
  41027e:	dec    ecx
  41027f:	adc    dl,BYTE PTR [ebp-0x77c7f1ee]
  410285:	clc    
  410286:	and    edi,DWORD PTR [esi+edi*2+0x27]
  41028a:	or     ecx,esi
  41028c:	and    BYTE PTR [eax],cl
  41028e:	adc    eax,0xebe96474
  410293:	xor    al,0x1
  410295:	call   0x3c740f
  41029a:	pop    es
  41029b:	xor    eax,DWORD PTR [esi+0x4d26c2c0]
  4102a1:	mov    eax,ecx
  4102a3:	and    esp,edi
  4102a5:	adc    eax,0x3d2722
  4102aa:	out    0xf2,eax
  4102ac:	add    al,0xb0
  4102ae:	aaa    
  4102af:	or     al,0x6e
  4102b1:	add    DWORD PTR ds:0x3bc1b94b,esp
  4102b7:	or     ebp,DWORD PTR [esi+0x2b]
  4102ba:	ror    DWORD PTR [ebp-0x434dea8],1
  4102c0:	loop   0x410244
  4102c2:	add    BYTE PTR [eax],al
  4102c4:	aas    
  4102c5:	cli    
  4102c6:	int3   
  4102c7:	or     bl,BYTE PTR [ecx-0x5ca4a272]
  4102cd:	sbb    bh,bl
  4102cf:	test   bh,dh
  4102d1:	jg     0x4102e1
  4102d3:	push   0x7b
  4102d5:	arpl   bx,bx
  4102d7:	mov    BYTE PTR ds:0x91013f8e,dh
  4102dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102de:	push   es
  4102df:	data16 scas al,BYTE PTR es:[edi]
  4102e1:	or     al,0x80
  4102e3:	shl    DWORD PTR ds:0x4001468e,0x82
  4102ea:	push   es
  4102eb:	data16 mov dl,0xca
  4102ee:	ror    bl,cl
  4102f0:	and    al,0xcb
  4102f2:	fisttp DWORD PTR [eax+0x4b88ce35]
  4102f8:	sbb    ecx,DWORD PTR [edi]
  4102fa:	push   0x150bbd0a
  4102ff:	or     cl,BYTE PTR [ebx+0x14]
  410302:	adc    eax,0xc618430d
  410307:	cmp    al,BYTE PTR [ecx+0x768a55fc]
  41030d:	inc    ebp
  41030e:	shl    DWORD PTR [ebx],0x3b
  410311:	inc    esi
  410312:	inc    ebx
  410313:	jae    0x410358
  410315:	xor    BYTE PTR [esi-0x2fbeb400],0xb
  41031c:	mov    bh,0x33
  41031e:	or     dh,BYTE PTR [ebp+0x38]
  410321:	mov    edx,DWORD PTR [edi]
  410323:	or     al,BYTE PTR [edx]
  410325:	or     eax,0xc988
  41032a:	div    BYTE PTR [ebx]
  41032c:	jno    0x410335
  41032e:	jne    0x410367
  410330:	jmp    0x2468:0x680fadb0
  410337:	test   DWORD PTR [edx+ecx*4-0x852d6b9],esi
  41033e:	cmp    BYTE PTR [ecx+0x53ceb176],cl
  410344:	pushf  
  410345:	mov    bl,dh
  410347:	add    ebx,DWORD PTR [ebx-0x15bc4595]
  41034d:	add    esi,DWORD PTR [ecx+ebx*4-0x49a9932]
  410354:	pop    ss
  410355:	push   edi
  410356:	pop    edi
  410357:	jle    0x410353
  410359:	int    0x56
  41035b:	stos   DWORD PTR es:[edi],eax
  41035c:	sub    al,0x8
  41035e:	xor    al,0xf7
  410360:	jno    0x410322
  410362:	fsubr  QWORD PTR [ebx-0x8b20bd4]
  410368:	pop    ebp
  410369:	enter  0xae00,0x2d
  41036d:	fs rcr dh,1
  410370:	fwait
  410371:	push   esi
  410372:	loope  0x41032c
  410374:	stos   BYTE PTR es:[edi],al
  410375:	shr    BYTE PTR [edx],1
  410377:	ja     0x410348
  410379:	aad    0x40
  41037b:	mov    ds:0x486a8ca4,al
  410380:	jno    0x410337
  410382:	sub    BYTE PTR [ebx],cl
  410384:	sub    cl,BYTE PTR [ebx+0x3ee80c73]
  41038a:	mov    edi,0x8cfe9e
  41038f:	add    dl,dh
  410391:	cmp    ebx,DWORD PTR [edx+0x17688c04]
  410397:	inc    esp
  410398:	gs pop ds
  41039a:	bound  edi,QWORD PTR [ebp+0x53adad24]
  4103a0:	dec    edi
  4103a1:	jbe    0x410395
  4103a3:	push   es
  4103a4:	mov    ebx,0x34e90221
  4103a9:	xor    al,0x30
  4103ab:	and    BYTE PTR [ebx-0x54],bh
  4103ae:	dec    esi
  4103af:	sbb    eax,0x72f970bb
  4103b4:	jp     0x4103e9
  4103b6:	xchg   ebp,esi
  4103b8:	sub    al,0x5a
  4103ba:	sbb    edx,DWORD PTR [ebp+eax*2+0x31d97b5a]
  4103c1:	mov    ecx,0x3434e9ce
  4103c6:	mov    dh,BYTE PTR [edi+0x3c]
  4103c9:	ror    DWORD PTR gs:[esi-0x55358616],0x4d
  4103d1:	jle    0x4103d5
  4103d3:	out    dx,al
  4103d4:	mov    al,ds:0x34e90213
  4103d9:	pop    ebx
  4103da:	jnp    0x4103d5
  4103dc:	add    BYTE PTR [edi],dl
  4103de:	mov    DWORD PTR [edi],esi
  4103e0:	aas    
  4103e1:	stos   BYTE PTR es:[edi],al
  4103e2:	adc    eax,0x1d70afee
  4103e7:	popa   
  4103e8:	enter  0xf41d,0xa8
  4103ec:	aas    
  4103ed:	test   al,0x3f
  4103ef:	lahf   
  4103f0:	je     0x410429
  4103f2:	jne    0x4103f0
  4103f4:	add    BYTE PTR [eax],al
  4103f6:	mov    ecx,0x7c69bc69
  4103fb:	cmp    al,0x74
  4103fd:	jmp    0xddfd:0x7421f1b4
  410404:	add    DWORD PTR [eax+0x6906a5bc],0xc4e83f75
  41040e:	mov    esp,0xa052fc87
  410413:	sub    eax,0x1deb2abb
  410418:	pop    ss
  410419:	aad    0x88
  41041b:	pop    esi
  41041c:	add    DWORD PTR [ebx+0x53],esp
  41041f:	cs mov ebx,0x4c87db00
  410425:	jmp    FWORD PTR [ebx+0x6]
  410428:	adc    DWORD PTR [eax-0x72],eax
  41042b:	stos   BYTE PTR es:[edi],al
  41042c:	inc    ebp
  41042d:	call   ebp
  41042f:	fsubp  st(4),st
  410431:	mov    ch,BYTE PTR [ebx-0x3525c579]
  410437:	call   0x34a34b32
  41043c:	jne    0x4103c9
  41043e:	fidivr WORD PTR [edx+ecx*1+0x75]
  410442:	jp     0x4103f6
  410444:	cli    
  410445:	or     eax,0x4d8827cb
  41044a:	inc    esi
  41044b:	cmp    ecx,DWORD PTR [ebx+0x10]
  41044e:	adc    DWORD PTR [ebp-0x76ee008b],esi
  410454:	xchg   DWORD PTR [esi+0x12],ecx
  410457:	cmp    bl,BYTE PTR [ebp+0x39]
  41045a:	add    BYTE PTR [eax],al
  41045c:	(bad)  
  41045e:	xchg   BYTE PTR [eax+0x1],ch
  410461:	mov    ebx,edi
  410463:	inc    edi
  410464:	icebp  
  410465:	fdivrp st(4),st
  410467:	jmp    0x41049a
  410469:	mov    eax,0x9f110afa
  41046e:	pop    ecx
  41046f:	jmp    DWORD PTR [ecx-0x1c048378]
  410475:	cmp    BYTE PTR [esi-0x4773eb0],al
  41047b:	mov    edx,DWORD PTR [ebx]
  41047d:	test   BYTE PTR [edi],dh
  41047f:	dec    esi
  410480:	(bad)  
  410481:	cmp    BYTE PTR [eax-0x4774ebc],al
  410487:	mov    edx,DWORD PTR [eax]
  410489:	xor    al,0x39
  41048b:	push   esp
  41048c:	iret   
  41048d:	xor    cl,BYTE PTR [eax*4-0x47717]
  410494:	fimul  WORD PTR [eax-0x77260bbb]
  41049a:	inc    ebp
  41049b:	clc    
  41049c:	aaa    
  41049d:	retf   
  41049e:	push   ebp
  41049f:	inc    esp
  4104a0:	mov    edx,DWORD PTR [ebx+edi*4+0x8cd4cef]
  4104a7:	(bad)  
  4104a9:	orps   xmm7,xmm6
  4104ac:	js     0x4104c8
  4104ae:	inc    ecx
  4104af:	cmc    
  4104b0:	stc    
  4104b1:	out    dx,al
  4104b2:	dec    DWORD PTR [eax+0x73d132e9]
  4104b8:	sbb    al,0xbd
  4104ba:	lock push cs
  4104bc:	ret    
  4104bd:	dec    ebx
  4104be:	addr16 or eax,0x2e500000
  4104c4:	push   ebp
  4104c5:	mov    ch,cl
  4104c7:	and    cl,BYTE PTR [ebx-0x515dc9b3]
  4104cd:	add    esi,edi
  4104cf:	loope  0x410512
  4104d1:	jb     0x41050b
  4104d3:	jecxz  0x4104d9
  4104d5:	add    ah,BYTE PTR [ebx-0x553cf303]
  4104db:	and    edi,DWORD PTR [ebp+eax*2+0x47]
  4104df:	hlt    
  4104e0:	cdq    
  4104e1:	std    
  4104e2:	adc    dh,ch
  4104e4:	fistp  DWORD PTR [edi]
  4104e6:	popa   
  4104e7:	test   al,0xc2
  4104e9:	iret   
  4104ea:	add    sp,WORD PTR [ecx+0x10]
  4104ee:	aaa    
  4104ef:	or     eax,DWORD PTR [esi]
  4104f1:	inc    ebp
  4104f2:	or     esi,DWORD PTR [edx+ecx*8]
  4104f5:	xlat   BYTE PTR ds:[ebx]
  4104f6:	mov    esi,0xeeaed54
  4104fb:	mov    ds:0xce340bc7,al
  410500:	jle    0x410546
  410502:	repz xchg ecx,eax
  410504:	(bad)  
  410505:	nop    esi
  410508:	or     BYTE PTR [edi+eiz*8-0x5d],0xca
  41050d:	(bad)  
  41050f:	repz push edx
  410511:	(bad)  
  410512:	mov    al,0x91
  410514:	ret    0x34e7
  410517:	xor    al,0x33
  410519:	jge    0x41050d
  41051b:	cmp    esp,DWORD PTR [esi+0x44]
  41051e:	sub    DWORD PTR [edi+0x1c9151d2],esi
  410524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410525:	push   cs
  410526:	add    BYTE PTR [eax],al
  410528:	or     DWORD PTR [eax+edi*4+0x35],eax
  41052c:	(bad)  
  41052d:	sar    BYTE PTR [ebx+edx*2],1
  410530:	jns    0x4105a5
  410532:	inc    ecx
  410533:	jae    0x4105a7
  410535:	sbb    al,0x2c
  410537:	mov    ch,0x50
  410539:	push   0xfffffff9
  41053b:	add    esi,DWORD PTR [edi]
  41053d:	icebp  
  41053e:	mov    ecx,0xea42d65b
  410543:	add    esi,DWORD PTR [esi+eax*4+0x5f]
  410547:	pusha  
  410548:	out    0x80,eax
  41054a:	pushf  
  41054b:	mov    BYTE PTR [ecx-0x5a],al
  41054e:	enter  0x5c16,0x60
  410552:	cld    
  410553:	jle    0x4105d0
  410555:	sub    al,0x94
  410557:	mov    dh,0x29
  410559:	mov    ds:0x28ab52fa,al
  41055e:	rcr    BYTE PTR [edx],cl
  410560:	pop    es
  410561:	ss jmp 0x41cc:0xd4b2207e
  410569:	xchg   edx,edx
  41056b:	sbb    ah,BYTE PTR [esi]
  41056d:	xor    al,0xea
  41056f:	pop    esi
  410570:	inc    ebx
  410571:	scas   eax,DWORD PTR es:[edi]
  410572:	sub    eax,0x5d365efc
  410577:	fsubr  st,st(4)
  410579:	jg     0x41050d
  41057b:	or     al,0x75
  41057d:	xor    al,0xea
  41057f:	mov    BYTE PTR [eax+0x4b7ecda1],bl
  410585:	sbb    BYTE PTR ds:0x6f37c2df,ah
  41058b:	dec    ecx
  41058c:	add    BYTE PTR [eax],al
  41058e:	not    DWORD PTR [ecx+ebp*8]
  410591:	mov    bl,0xd0
  410593:	and    eax,0x3434d902
  410598:	mov    BYTE PTR [ecx-0x5e890141],dl
  41059e:	sbb    BYTE PTR ds:0xb09c525a,0xfc
  4105a5:	fnstsw WORD PTR [edx]
  4105a7:	lods   eax,DWORD PTR ds:[esi]
  4105a8:	sbb    al,0x62
  4105aa:	(bad)  
  4105ab:	js     0x410605
  4105ad:	xor    dl,bh
  4105af:	add    DWORD PTR cs:[ecx+edi*8-0x5bba7ef2],edx
  4105b7:	xchg   BYTE PTR [ebx-0x6a],dl
  4105ba:	inc    ecx
  4105bb:	jmp    FWORD PTR [ecx+0x65]
  4105be:	jle    0x41061b
  4105c0:	add    DWORD PTR [eax-0x59],esi
  4105c3:	adc    edi,ebp
  4105c5:	cld    
  4105c6:	cwde   
  4105c7:	inc    ebp
  4105c8:	inc    ecx
  4105c9:	jmp    0xc3167599
  4105ce:	stc    
  4105cf:	sub    DWORD PTR [ebp+0x1343376],eax
  4105d5:	sub    DWORD PTR [ecx+eiz*4+0x41],0x1719e4e9
  4105dd:	xchg   ecx,eax
  4105de:	sub    DWORD PTR [ebx+0x1],ebx
  4105e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105e2:	lock test BYTE PTR [edx],0xe9
  4105e6:	xor    al,0x34
  4105e8:	mov    ch,BYTE PTR [ebx+ecx*2]
  4105eb:	lods   al,BYTE PTR ds:[esi]
  4105ec:	pop    esi
  4105ed:	mov    ch,0x7c
  4105ef:	js     0x4105c2
  4105f1:	add    al,BYTE PTR [eax]
  4105f3:	add    BYTE PTR [edx+0x2a],dh
  4105f6:	test   DWORD PTR [ebx],esp
  4105f8:	xor    al,0x34
  4105fa:	add    DWORD PTR [edx],ebx
  4105fc:	push   0x6038c568
  410601:	push   0xeb8638d9
  410606:	xchg   BYTE PTR [ecx-0x17cb4eca],ch
  41060c:	xor    al,0x34
  41060e:	push   eax
  41060f:	add    BYTE PTR ds:0xc29864e1,bl
  410615:	idiv   ah
  410617:	(bad)  
  410618:	xchg   ebx,eax
  410619:	jbe    0x410627
  41061b:	inc    eax
  41061c:	sahf   
  41061d:	xchg   edi,eax
  41061e:	hlt    
  41061f:	mov    DWORD PTR [ebx-0x7604c86a],ebx
  410625:	mov    dl,0xfc
  410627:	add    BYTE PTR [esi-0x7c00abca],bl
  41062d:	jp     0x41063b
  41062f:	inc    eax
  410630:	mov    ds,WORD PTR [ebp+0x7135f845]
  410636:	or     eax,DWORD PTR [ecx+eax*1+0x76000130]
  41063d:	idiv   BYTE PTR [eax+eax*1+0x4e]
  410641:	fisttp WORD PTR [edi+0x6a]
  410644:	dec    esp
  410645:	(bad)  
  410646:	cld    
  410647:	jle    0x4106a7
  410649:	ss push eax
  41064b:	inc    DWORD PTR [ebx-0x3a]
  41064e:	cmovo  ecx,DWORD PTR [esi-0x63]
  410652:	inc    ebp
  410653:	hlt    
  410654:	jne    0x4106c5
  410656:	jo     0x410678
  410658:	add    BYTE PTR [eax],al
  41065a:	fldcw  WORD PTR [ecx+edx*2-0x7bea7b32]
  410662:	and    dh,dh
  410664:	cld    
  410665:	test   dh,cl
  410667:	add    DWORD PTR [edi],ecx
  410669:	lea    esp,[ebx+0x74]
  41066c:	dec    esp
  41066d:	inc    DWORD PTR [ebx]
  41066f:	mov    dh,0x10
  410671:	inc    eax
  410672:	push   cs
  410673:	mov    bl,0xbc
  410675:	jne    0x410684
  410677:	lahf   
  410678:	pop    ebp
  410679:	hlt    
  41067a:	push   ebp
  41067b:	inc    edx
  41067c:	mov    ecx,0x67301e10
  410681:	or     BYTE PTR [ecx],ah
  410683:	adc    esi,0x6a
  410686:	in     al,0xdc
  410688:	mov    DWORD PTR [ebp+0x37],eax
  41068b:	mov    ebx,0xaa67d551
  410690:	shr    edi,cl
  410692:	scas   al,BYTE PTR es:[edi]
  410693:	dec    eax
  410694:	imul   edx,DWORD PTR [esi-0x48],0xf70f5900
  41069b:	or     bh,BYTE PTR [eax+0x44]
  41069e:	fwait
  41069f:	out    0x45,al
  4106a1:	jae    0x4106c0
  4106a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106a4:	adc    esp,eax
  4106a6:	inc    edi
  4106a7:	retf   
  4106a8:	add    BYTE PTR [eax-0x70],dl
  4106ab:	clc    
  4106ac:	dec    eax
  4106ad:	(bad)  
  4106ae:	popa   
  4106af:	xchg   esp,eax
  4106b0:	ret    
  4106b1:	fstp   TBYTE PTR [esi+ecx*2]
  4106b4:	aam    0x5d
  4106b6:	movntps XMMWORD PTR ds:0xb5bdf7cc,xmm0
  4106bd:	push   esi
  4106be:	add    BYTE PTR [eax],al
  4106c0:	push   0xeafe64e0
  4106c5:	cmp    dh,BYTE PTR [ebp+0x48c05852]
  4106cb:	(bad)  
  4106cc:	sub    ah,BYTE PTR [ebx-0x10]
  4106cf:	aas    
  4106d0:	aaa    
  4106d1:	nop
  4106d2:	inc    eax
  4106d3:	jae    0x4106d3
  4106d5:	rep stos DWORD PTR es:[edi],eax
  4106d7:	repz ret 
  4106d9:	jmp    0xb3bb:0xf6034c7d
  4106e0:	mov    esp,0xaafe30cf
  4106e5:	idiv   esp
  4106e7:	inc    edi
  4106e8:	in     al,dx
  4106e9:	inc    ebp
  4106ea:	retf   0x40b7
  4106ed:	push   ebx
  4106ee:	inc    eax
  4106ef:	dec    edi
  4106f0:	jmp    0xf800:0xf7da
  4106f6:	js     0x41070b
  4106f8:	ja     0x410705
  4106fa:	dec    esp
  4106fb:	je     0x41073c
  4106fd:	nop
  4106fe:	rcl    bl,cl
  410700:	call   0xd7286864
  410705:	xor    esi,DWORD PTR [esp+eax*1+0x37]
  410709:	lods   eax,DWORD PTR ds:[esi]
  41070a:	sbb    eax,0x826ebf64
  41070f:	dec    edi
  410710:	inc    ebx
  410711:	clc    
  410712:	mov    ebx,ecx
  410714:	enter  0x9d18,0x4f
  410718:	inc    ebx
  410719:	or     BYTE PTR [ecx+edi*8+0x74],bh
  41071d:	inc    ebx
  41071e:	sub    al,BYTE PTR [eax+ebp*4]
  410721:	sahf   
  410722:	jb     0x410773
  410724:	add    BYTE PTR [eax],al
  410726:	dec    ebx
  410727:	clc    
  410728:	cli    
  410729:	ret    
  41072a:	cwde   
  41072b:	sbb    DWORD PTR [ebx-0x7],0x3aa436c
  410732:	dec    esi
  410733:	ja     0x41076b
  410735:	fsub   DWORD PTR [eax]
  410737:	mov    WORD PTR [edx],fs
  410739:	(bad)  
  41073a:	cmp    BYTE PTR [ebx+edi*1],dh
  41073d:	fld    DWORD PTR [eax+ebx*1+0x74469bde]
  410744:	jmp    0xe34e:0xed9f740a
  41074b:	sti    
  41074c:	sbb    esi,DWORD PTR [ecx+edx*2]
  41074f:	sahf   
  410750:	ds dec edi
  410752:	and    ebx,eax
  410754:	clc    
  410755:	ret    
  410756:	inc    eax
  410757:	lods   eax,DWORD PTR ds:[esi]
  410758:	lods   eax,DWORD PTR ds:[esi]
  410759:	pop    ebx
  41075a:	fnstcw WORD PTR [ecx-0x61]
  41075d:	cmp    al,0xf6
  41075f:	xor    dl,ch
  410761:	adc    bh,dh
  410763:	ror    DWORD PTR [edx],cl
  410765:	nop
  410766:	jne    0x41079c
  410768:	sub    DWORD PTR [eax+edi*8+0x690427d8],ecx
  41076f:	stos   DWORD PTR es:[edi],eax
  410770:	cli    
  410771:	jp     0x410779
  410773:	idiv   BYTE PTR [ebp+ebp*8+0x56522245]
  41077a:	xchg   ebx,eax
  41077b:	lods   eax,DWORD PTR ds:[esi]
  41077c:	jecxz  0x41075d
  41077e:	xor    eax,0x4600225
  410783:	xor    al,0x80
  410785:	test   eax,0x853e7538
  41078a:	add    BYTE PTR [eax],al
  41078c:	jb     0x410800
  41078e:	add    DWORD PTR ds:0xb50eac5a,ebx
  410794:	mov    eax,0x742f0172
  410799:	aam    0xdd
  41079b:	inc    ebp
  41079c:	cmc    
  41079d:	pop    ss
  41079e:	ds stc 
  4107a0:	ss xor al,0x1
  4107a3:	out    0x28,al
  4107a5:	mov    DWORD PTR [ecx],0x547e34e9
  4107ab:	sbb    ah,BYTE PTR [ebp-0x27]
  4107ae:	cld    
  4107af:	pop    esi
  4107b0:	add    DWORD PTR [esi+0x330d2388],edx
  4107b6:	mov    es,WORD PTR [ebp-0x50]
  4107b9:	jb     0x4107bc
  4107bb:	cli    
  4107bc:	xor    BYTE PTR [ecx+0x17757de1],ch
  4107c2:	and    BYTE PTR [edi],ch
  4107c4:	inc    ebp
  4107c5:	xor    BYTE PTR [esi+0x172b049],cl
  4107cb:	jb     0x4107b9
  4107cd:	add    ebp,edx
  4107cf:	push   0xffffffd9
  4107d1:	xor    esi,DWORD PTR [eax]
  4107d3:	in     eax,dx
  4107d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107d5:	iret   
  4107d6:	mov    ecx,0x56334aa
  4107db:	je     0x41081d
  4107dd:	repnz inc eax
  4107df:	jmp    0x6446b3da
  4107e4:	xchg   esp,eax
  4107e5:	fild   DWORD PTR [eax-0x17]
  4107e8:	mov    ebx,0x34e9e11c
  4107ed:	xor    al,0x7d
  4107ef:	stos   DWORD PTR es:[edi],eax
  4107f0:	add    BYTE PTR [eax],al
  4107f2:	mov    ah,0x1c
  4107f4:	ins    DWORD PTR es:[edi],dx
  4107f5:	jmp    0x41082b
  4107f7:	xor    al,0x7e
  4107f9:	sbb    al,BYTE PTR [eax-0x11ff69d5]
  4107ff:	ret    
  410800:	aas    
  410801:	add    BYTE PTR [ebp+0x33],ah
  410804:	xor    BYTE PTR [ecx-0x26],al
  410807:	push   ebx
  410808:	ret    
  410809:	xor    ecx,edi
  41080b:	fwait
  41080c:	hlt    
  41080d:	sub    DWORD PTR [ecx+0x733c8832],0xffffffb8
  410814:	mov    ah,0x43
  410816:	fiadd  WORD PTR [ebx-0x46]
  410819:	je     0x4107cd
  41081b:	push   0x44a6d1fb
  410820:	stc    
  410821:	mov    DWORD PTR [edi-0x4d],esi
  410824:	rol    DWORD PTR [edi+ebx*1],0x6b
  410828:	cwde   
  410829:	(bad)  
  41082a:	dec    ebp
  41082b:	xor    BYTE PTR [ebp-0x2c],bh
  41082e:	and    eax,0xddc69917
  410833:	xor    ah,BYTE PTR [edx-0x30b5d20]
  410839:	xor    cl,BYTE PTR [edi+0x55]
  41083c:	ret    
  41083d:	xor    ecx,DWORD PTR [edi-0x63]
  410840:	(bad)  
  410841:	rol    DWORD PTR [esi],1
  410843:	mov    ch,0xe1
  410845:	add    DWORD PTR [ebp+0x2e],ebp
  410848:	mov    gs,WORD PTR [eax+0x5efcf4e6]
  41084e:	jge    0x41087d
  410850:	adc    ebx,eax
  410852:	popf   
  410853:	xor    bl,BYTE PTR [ebx-0x5d]
  410856:	add    BYTE PTR [eax],al
  410858:	ret    0x3f6d
  41085b:	add    BYTE PTR [ebp+0x72],bl
  41085e:	xchg   DWORD PTR [ebx+ecx*8],ecx
  410861:	(bad)  
  410862:	mov    eax,0x9ff21e43
  410867:	fsub   QWORD PTR [edx-0xd]
  41086a:	cld    
  41086b:	mov    cl,BYTE PTR [edi+0x71]
  41086e:	in     al,0xb
  410870:	cmp    eax,0x3bc18758
  410875:	mov    ch,0x54
  410877:	cmp    dh,BYTE PTR [edi]
  410879:	(bad)  
  41087a:	aas    
  41087b:	fistp  QWORD PTR [eax]
  41087d:	cmp    bh,BYTE PTR ds:0x8128f68a
  410883:	fdivrp st(0),st
  410885:	(bad)  
  410886:	aas    
  410887:	fistp  QWORD PTR [eax]
  410889:	sbb    bh,BYTE PTR [ecx]
  41088b:	mov    dh,dh
  41088d:	int3   
  41088e:	pop    eax
  41088f:	adc    DWORD PTR [esp+ecx*8],esp
  410892:	inc    ecx
  410893:	push   esp
  410894:	mov    esp,0x5f50afa7
  410899:	imul   eax,DWORD PTR [esi+0x42],0x37
  41089d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089e:	repz jecxz 0x4108c6
  4108a1:	dec    ebx
  4108a2:	add    eax,0xb0b2fa8d
  4108a7:	inc    BYTE PTR [edx-0x6d]
  4108aa:	repnz aas 
  4108ac:	aaa    
  4108ad:	nop
  4108ae:	inc    eax
  4108af:	je     0x4108e0
  4108b1:	mov    ?,ebx
  4108b3:	and    DWORD PTR ds:0x34eb00cb,0xffffff92
  4108ba:	ret    
  4108bb:	test   DWORD PTR [eax],0x4eb48f00
  4108c1:	(bad)  
  4108c2:	js     0x41085f
  4108c4:	dec    eax
  4108c6:	je     0x4108cb
  4108c8:	mov    eax,ds:0x4e0af4c5
  4108cd:	adc    al,0x73
  4108cf:	stc    
  4108d0:	sar    bh,0x75
  4108d3:	mov    ecx,DWORD PTR [ebx]
  4108d5:	fdivr  DWORD PTR [ecx-0x36]
  4108d8:	add    BYTE PTR [eax],al
  4108da:	in     al,0x91
  4108dc:	jmp    0x4108b9
  4108de:	and    eax,0xe05600cb
  4108e3:	mov    eax,ds:0xcb45d80b
  4108e8:	add    BYTE PTR [ebp+0x59],dh
  4108eb:	pop    ebp
  4108ec:	lock (bad) 
  4108ee:	je     0x4108fb
  4108f0:	mov    bh,0xfe
  4108f2:	add    BYTE PTR [edx+ebp*2],dh
  4108f5:	or     edi,ebp
  4108f7:	in     eax,dx
  4108f8:	daa    
  4108f9:	add    al,0x37
  4108fb:	lahf   
  4108fc:	lock pop ebx
  4108fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ff:	adc    al,0xcc
  410901:	dec    ebx
  410902:	mov    ah,0xf3
  410904:	ds cmc 
  410906:	stc    
  410907:	cs sahf 
  410909:	inc    edx
  41090a:	jne    0x410940
  41090c:	(bad)  
  41090d:	and    BYTE PTR [si],dh
  410910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410911:	add    edi,edi
  410913:	in     eax,dx
  410914:	daa    
  410915:	add    al,0x36
  410917:	jle    0x4108b4
  410919:	aaa    
  41091a:	mov    dl,bl
  41091c:	lods   al,BYTE PTR ds:[esi]
  41091d:	mov    eax,0x338b7e
  410923:	add    al,dl
  410925:	cwde   
  410926:	test   BYTE PTR [ebx-0x4f],cl
  410929:	jge    0x41099a
  41092b:	dec    esp
  41092c:	test   eax,0x1436000
  410931:	jbe    0x410942
  410933:	inc    edi
  410934:	pop    ebp
  410935:	jo     0x410945
  410937:	add    BYTE PTR [ecx],cl
  410939:	xadd   BYTE PTR ss:[eax+esi*1-0x44],dl
  41093f:	ret    
  410940:	lods   eax,DWORD PTR ds:[esi]
  410941:	and    edx,esi
  410943:	inc    DWORD PTR [ebp-0xc]
  410946:	dec    edi
  410947:	sti    
  410948:	pop    eax
  410949:	stos   BYTE PTR es:[edi],al
  41094a:	cmp    ecx,DWORD PTR [ebx+0x69]
  41094d:	pusha  
  41094e:	sbb    BYTE PTR [ebx+0x6a],dl
  410951:	test   al,0x28
  410953:	pop    es
  410954:	repz dec edi
  410956:	repnz test eax,0xb1ea2f76
  41095c:	add    eax,0x14cfd21e
  410961:	sub    BYTE PTR [ebx+eiz*1-0x37c3db20],dl
  410968:	push   esp
  410969:	sub    BYTE PTR [ebx+0x135298b],dl
  41096f:	jmp    0xeefe25a8
  410974:	ins    DWORD PTR es:[edi],dx
  410975:	adc    cl,BYTE PTR [ecx-0x76bfa8cb]
  41097b:	in     eax,0xe
  41097d:	jp     0x4109b7
  41097f:	pop    ebp
  410980:	push   edi
  410981:	and    al,0x6f
  410983:	(bad)  
  410984:	int    0x71
  410986:	mov    edi,0x340000f5
  41098b:	imul   ecx,DWORD PTR [eax+0x161fb1cd],0x11886c1f
  410995:	ror    DWORD PTR [edi+0x12],0xfd
  410999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41099a:	push   ecx
  41099b:	and    ecx,DWORD PTR [ebx+0x371b7b14]
  4109a1:	xchg   esi,eax
  4109a2:	ins    DWORD PTR es:[edi],dx
  4109a3:	adc    ch,BYTE PTR [ebx+0x13433e9]
  4109a9:	std    
  4109aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109ab:	cli    
  4109ac:	inc    esi
  4109ad:	(bad)  
  4109ae:	int3   
  4109af:	xchg   DWORD PTR [ecx-0x17],eax
  4109b2:	cmc    
  4109b3:	ja     0x4109a6
  4109b5:	sub    eax,0x52015368
  4109ba:	mov    ?,edx
  4109bc:	inc    esi
  4109bd:	dec    ebp
  4109be:	mov    al,0x87
  4109c0:	inc    ecx
  4109c1:	jmp    0x823281bb
  4109c6:	push   0x499a0153
  4109cb:	out    dx,eax
  4109cc:	mov    bl,BYTE PTR [eax+esi*8+0x31d95ebb]
  4109d3:	pop    es
  4109d4:	or     eax,0x1344967
  4109d9:	jmp    0x6a4a81af
  4109de:	aam    0x42
  4109e0:	mov    ch,BYTE PTR [eax+esi*8+0x448c8069]
  4109e7:	xor    eax,0x6f080076
  4109ec:	jmp    0xa97d:0x290000fe
  4109f3:	add    BYTE PTR [edi],cl
  4109f5:	aaa    
  4109f6:	add    DWORD PTR [esi+edi*8+0x75],esi
  4109fa:	inc    ebp
  4109fb:	in     al,dx
  4109fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109fd:	jecxz  0x410a3b
  4109ff:	add    cl,dl
  410a01:	shr    ah,cl
  410a03:	mov    esp,0xeafcf862
  410a08:	fdiv   DWORD PTR [ebx+0x45]
  410a0b:	in     al,dx
  410a0c:	mov    edx,0x91003ce3
  410a11:	shr    ah,cl
  410a13:	test   al,0x22
  410a15:	clc    
  410a16:	cld    
  410a17:	xor    BYTE PTR [ebx+0x8],0xfd
  410a1b:	sbb    BYTE PTR [ebx],0x64
  410a1e:	cld    
  410a1f:	jae    0x410a19
  410a21:	(bad)  
  410a22:	mov    edi,0x7f7c132b
  410a27:	clc    
  410a28:	iret   
  410a29:	in     al,0x20
  410a2b:	call   0x3c883a
  410a30:	and    eax,0x8f01b450
  410a35:	add    DWORD PTR ss:[ebx],esp
  410a38:	(bad)  
  410a39:	inc    eax
  410a3a:	leave  
  410a3b:	jne    0x4109c9
  410a3d:	(bad)  
  410a3e:	dec    ebp
  410a3f:	or     al,0x64
  410a41:	push   esi
  410a42:	pop    ecx
  410a43:	popw   ss
  410a45:	xor    al,0x5a
  410a47:	mov    ebx,ecx
  410a49:	jp     0x410a34
  410a4b:	pushf  
  410a4c:	pop    esi
  410a4d:	ss add esi,esi
  410a50:	xchg   ebx,eax
  410a51:	push   cs
  410a52:	sbb    eax,0x5d000074
  410a57:	xchg   ecx,eax
  410a58:	xlat   BYTE PTR ds:[ebx]
  410a59:	jne    0x410aab
  410a5b:	fs inc ebp
  410a5d:	or     dh,bl
  410a5f:	jecxz  0x410a8a
  410a61:	call   0x3c86fc
  410a66:	aaa    
  410a67:	mov    bh,0xfb
  410a69:	xor    ah,BYTE PTR [ebp-0x3d]
  410a6c:	push   ecx
  410a6d:	lock mov edx,0x8518cc2d
  410a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a74:	not    DWORD PTR [edi+0xf]
  410a77:	pop    esi
  410a78:	inc    edi
  410a79:	(bad)  
  410a7a:	sbb    BYTE PTR [edi-0x4ebff44c],dl
  410a80:	inc    eax
  410a81:	gs mov ah,0xdb
  410a84:	adc    BYTE PTR [esi-0x52],ah
  410a87:	pop    ds
  410a88:	test   al,0xea
  410a8a:	xchg   esp,eax
  410a8b:	xchg   esi,eax
  410a8c:	mov    ebx,0x7c4fbc0f
  410a91:	jmp    0x410a4f
  410a93:	pop    eax
  410a94:	stc    
  410a95:	mov    WORD PTR [ebx],fs
  410a97:	and    edx,DWORD PTR [esi]
  410a99:	shl    BYTE PTR [esi+0x777398e1],0x1b
  410aa0:	cli    
  410aa1:	xchg   esp,eax
  410aa2:	mul    DWORD PTR ds:0xbbb44805
  410aa8:	cli    
  410aa9:	xor    bh,0x18
  410aac:	pop    ecx
  410aad:	mov    esi,DWORD PTR [ecx-0xd0ab646]
  410ab3:	add    al,BYTE PTR [eax]
  410ab5:	data16 xor BYTE PTR [ecx-0x4],cl
  410ab9:	das    
  410aba:	add    BYTE PTR [eax],al
  410abc:	adc    DWORD PTR [ecx+eax*1-0x448ea48b],edx
  410ac3:	pop    es
  410ac4:	xor    eax,0x5c84f9e7
  410ac9:	out    dx,eax
  410aca:	std    
  410acb:	mov    dh,dl
  410acd:	out    dx,al
  410ace:	loop   0x410a52
  410ad0:	repz ror BYTE PTR [edx+0x1f],cl
  410ad4:	jecxz  0x410af7
  410ad6:	push   ebx
  410ad7:	inc    esp
  410ad8:	das    
  410ad9:	adc    ecx,ebp
  410adb:	adc    BYTE PTR [edi+0x1b],cl
  410ade:	dec    ebx
  410adf:	(bad)  
  410ae0:	push   eax
  410ae1:	xor    al,0x52
  410ae3:	add    al,bl
  410ae5:	cmp    esp,DWORD PTR [edx+0x63]
  410ae8:	inc    ecx
  410ae9:	xor    al,0xea
  410aeb:	loope  0x410b24
  410aed:	cmp    DWORD PTR [edi-0x32],ebx
  410af0:	sub    BYTE PTR [ebp+0x3],dh
  410af3:	mov    esi,0xf81c4d38
  410af8:	mov    dh,0x3
  410afa:	cmc    
  410afb:	inc    edi
  410afc:	sbb    DWORD PTR [ecx-0xc],esi
  410aff:	mov    ebp,0xd03f2438
  410b04:	das    
  410b05:	mov    bh,0xd4
  410b07:	shr    BYTE PTR [ebx],1
  410b09:	mov    ebp,0x7fabf82d
  410b0e:	pop    edx
  410b0f:	inc    esi
  410b10:	pop    edx
  410b11:	mov    ch,0x1
  410b13:	and    al,0x62
  410b15:	cmp    eax,0x82365d67
  410b1a:	cmp    eax,0x5f34cd50
  410b1f:	rol    DWORD PTR [eax],0x0
  410b22:	cmp    al,0x45
  410b24:	mov    cl,0x4e
  410b26:	jae    0x410b64
  410b28:	in     al,0xdd
  410b2a:	scas   eax,DWORD PTR es:[edi]
  410b2b:	aas    
  410b2c:	sbb    dl,al
  410b2e:	and    eax,0xb5fc5341
  410b33:	or     cl,BYTE PTR [edx]
  410b35:	sar    BYTE PTR ds:0x29ca81b5,cl
  410b3b:	cmp    ah,BYTE PTR [edi+0x45]
  410b3e:	js     0x410ad9
  410b40:	popa   
  410b41:	cld    
  410b42:	mov    ebp,0x763cc4f9
  410b47:	aas    
  410b48:	jmp    0x74fe:0x2c02adad
  410b4f:	xchg   DWORD PTR [edx+0x11655f03],ebp
  410b55:	add    eax,0x1fa70a37
  410b5a:	das    
  410b5b:	xor    eax,DWORD PTR [ecx]
  410b5d:	mov    ebp,0xbde9665a
  410b62:	dec    ebp
  410b63:	adc    ch,bh
  410b65:	jb     0x410b70
  410b67:	outs   dx,DWORD PTR ds:[esi]
  410b68:	mov    edi,0x886734e5
  410b6d:	add    eax,0xe80e1cb2
  410b72:	xor    al,0x34
  410b74:	push   eax
  410b75:	lahf   
  410b76:	fnstcw WORD PTR [edx+0x5b786af9]
  410b7c:	or     al,0x6b
  410b7e:	mov    DWORD PTR [edi],ecx
  410b80:	std    
  410b81:	jmp    0xecd31a41
  410b86:	add    BYTE PTR [eax],al
  410b88:	xor    al,0x34
  410b8a:	or     al,0x6e
  410b8c:	jle    0x410b9d
  410b8e:	std    
  410b8f:	jmp    0x644a7c11
  410b94:	sbb    eax,0xb9f60e83
  410b99:	xor    al,BYTE PTR [eax+0x68836c1]
  410b9f:	push   0x6c
  410ba1:	es jbe 0x410bdb
  410ba4:	adc    BYTE PTR [eax+0xe71a7f9],bh
  410baa:	push   es
  410bab:	jmp    0x96c73fe4
  410bb0:	call   0xaf5593f4
  410bb5:	mov    edx,0x7b774d4
  410bba:	cld    
  410bbb:	jle    0x410bb6
  410bbd:	push   ss
  410bbe:	jbe    0x410ba0
  410bc0:	xor    al,0x34
  410bc2:	mov    BYTE PTR [edi+ecx*4],ah
  410bc5:	(bad)  
  410bc6:	cmp    ecx,ebp
  410bc8:	js     0x410c49
  410bca:	or     al,0x97
  410bcc:	je     0x410c03
  410bce:	mov    fs,WORD PTR [esi-0x2436b5b8]
  410bd4:	ja     0x410b6d
  410bd6:	leave  
  410bd7:	add    BYTE PTR [esi+0x33],bl
  410bda:	add    eax,ebp
  410bdc:	dec    edx
  410bdd:	or     eax,0x62d5fffd
  410be2:	test   esi,esi
  410be4:	mov    al,BYTE PTR [edx]
  410be6:	in     eax,0x76
  410be8:	data16 cmp BYTE PTR [ecx],al
  410beb:	xor    eax,DWORD PTR [eax]
  410bed:	add    BYTE PTR [esi],cl
  410bef:	dec    esi
  410bf0:	push   es
  410bf1:	les    ebx,FWORD PTR [edx-0x689a030d]
  410bf7:	rol    DWORD PTR [ebx+ebp*8+0x1c],1
  410bfb:	and    dh,bl
  410bfd:	test   DWORD PTR [eax],ebp
  410bff:	(bad)  
  410c00:	sbb    BYTE PTR [edi+0x21],dl
  410c03:	dec    DWORD PTR [eax]
  410c05:	xchg   di,ax
  410c07:	stc    
  410c08:	adc    al,ch
  410c0a:	sub    BYTE PTR ds:0xce87fffd,cl
  410c10:	or     al,0x85
  410c12:	into   
  410c13:	(bad)  
  410c14:	adc    DWORD PTR [ebx-0x74fe1328],ecx
  410c1a:	mov    al,ds:0x8e330c78
  410c1f:	fcomp  DWORD PTR [esi+0x5b]
  410c22:	xchg   edi,eax
  410c23:	jno    0x410c29
  410c25:	add    BYTE PTR [ebp+0x37],dl
  410c28:	adc    DWORD PTR [esi],edx
  410c2a:	push   ds
  410c2b:	cmp    BYTE PTR [esi+0x692e2adb],al
  410c31:	or     dh,0x32
  410c34:	add    DWORD PTR [ebp+0x6ad060],ecx
  410c3a:	dec    ebp
  410c3b:	jns    0x410c52
  410c3d:	sbb    BYTE PTR [eax+0x4b8afcf2],cl
  410c43:	adc    BYTE PTR [eax+0x1d6a72c4],al
  410c49:	ins    BYTE PTR es:[edi],dx
  410c4a:	sahf   
  410c4b:	xor    dl,BYTE PTR [ecx-0x1]
  410c4e:	imul   ecx,DWORD PTR [edx],0x50
  410c51:	inc    DWORD PTR [eax]
  410c53:	add    BYTE PTR [edi],dh
  410c55:	dec    esi
  410c56:	add    bl,0x43
  410c59:	repz adc al,0xff
  410c5c:	loop   0x410c66
  410c5e:	je     0x410ca5
  410c60:	dec    ecx
  410c61:	lods   eax,DWORD PTR ds:[esi]
  410c62:	inc    ebp
  410c63:	(bad)  
  410c64:	mov    ah,0x60
  410c66:	stc    
  410c67:	mov    bh,BYTE PTR [ecx+0x71]
  410c6a:	mov    ss,WORD PTR [edx-0x1e]
  410c6d:	into   
  410c6e:	lods   eax,DWORD PTR ds:[esi]
  410c6f:	mov    al,BYTE PTR [edi+0x2d]
  410c72:	retf   
  410c73:	shrd   DWORD PTR [ebx],esp,0x5d
  410c77:	pop    ebp
  410c78:	cmp    eax,0x708b011b
  410c7d:	jmp    0x410cf8
  410c7f:	sub    al,0x47
  410c81:	in     eax,0xc0
  410c83:	jmp    FWORD PTR [edi-0x439a0f23]
  410c89:	(bad)  
  410c8a:	in     al,dx
  410c8b:	gs mov esi,0x9882f15d
  410c91:	or     eax,DWORD PTR [ecx]
  410c93:	xor    esi,edi
  410c95:	jae    0x410c1c
  410c97:	push   eax
  410c99:	sbb    ebx,edi
  410c9b:	mov    BYTE PTR [eax-0x11],dh
  410c9e:	jae    0x410cfe
  410ca0:	outs   dx,DWORD PTR ds:[esi]
  410ca1:	mov    al,ds:0x2b8447be
  410ca6:	inc    esi
  410ca7:	aam    0x4
  410ca9:	fcmovnu st,st(2)
  410cab:	sub    edx,DWORD PTR [ecx-0x7c]
  410cae:	add    edi,edi
  410cb0:	dec    ecx
  410cb1:	or     eax,DWORD PTR [edx+0x464d21c5]
  410cb7:	aam    0x0
  410cb9:	add    BYTE PTR ds:0xb5ffdacf,bl
  410cbf:	fsubp  st(6),st
  410cc1:	push   esi
  410cc2:	mov    al,ds:0xf715e8e8
  410cc7:	sbb    al,BYTE PTR [edx-0x5cc1a43d]
  410ccd:	pop    esp
  410cce:	in     al,dx
  410ccf:	xor    esp,DWORD PTR [edi]
  410cd1:	dec    ebp
  410cd2:	hlt    
  410cd3:	push   edi
  410cd4:	out    0x2,al
  410cd6:	loope  0x410c90
  410cd8:	pop    ecx
  410cd9:	cmp    al,0x3a
  410cdb:	cld    
  410cdc:	(bad)  
  410cdd:	ret    
  410cde:	push   0x58adec81
  410ce3:	pop    es
  410ce4:	repnz add esi,DWORD PTR [edi]
  410ce7:	mov    ecx,0x3876a52c
  410cec:	jmp    0xadfb:0xce88bdad
  410cf3:	ss mov bl,0x78
  410cf6:	push   0xd
  410cf8:	mov    ebx,0x95f3bbff
  410cfd:	(bad)  
  410cfe:	mov    ch,0xfc
  410d00:	add    ebx,DWORD PTR [eax+0x32]
  410d03:	call   0x2ba:0xf510b3e8
  410d0a:	aaa    
  410d0b:	mov    ecx,0x88097df2
  410d10:	cli    
  410d11:	sub    edi,ebp
  410d13:	inc    edx
  410d14:	jmp    0x5f34c01c
  410d19:	or     edi,DWORD PTR [ebp+esi*1+0x525f]
  410d20:	jmp    0xe1c7ff88
  410d25:	or     al,0x37
  410d27:	push   cs
  410d28:	mov    dl,0xc
  410d2a:	aas    
  410d2b:	or     ch,BYTE PTR [eax+0x1c]
  410d2e:	mov    dl,0x24
  410d30:	aaa    
  410d31:	xor    al,0x6f
  410d33:	or     cl,BYTE PTR [ebp+0x33]
  410d36:	outs   dx,DWORD PTR ds:[esi]
  410d37:	push   edx
  410d38:	mov    ecx,0xf0f73323
  410d3d:	ins    DWORD PTR es:[edi],dx
  410d3e:	test   al,0x8
  410d40:	aaa    
  410d41:	outs   dx,DWORD PTR ds:[si]
  410d43:	xor    BYTE PTR [edi],al
  410d45:	outs   dx,DWORD PTR gs:[esi]
  410d47:	cmp    al,0xb3
  410d49:	add    eax,0x4238fc02
  410d4e:	rol    DWORD PTR [edx-0x220348c9],0x28
  410d55:	call   0xa9e5:0x7ccb701
  410d5c:	xor    al,0x9a
  410d5e:	add    DWORD PTR [ecx+0x73],eax
  410d61:	in     eax,dx
  410d62:	add    ch,cl
  410d64:	lods   al,BYTE PTR ds:[esi]
  410d65:	ja     0x410d63
  410d67:	push   edx
  410d68:	inc    eax
  410d69:	imul   di,WORD PTR [esp+ebx*1],0x14d
  410d6f:	ret    
  410d70:	xor    al,0x1c
  410d72:	xchg   ebx,eax
  410d73:	sub    DWORD PTR [ebx],edi
  410d75:	xor    al,0x86
  410d77:	sub    DWORD PTR [edi+eiz*4],esp
  410d7a:	inc    esi
  410d7b:	push   ss
  410d7c:	mov    ebx,0xefe9fc88
  410d81:	xor    ecx,DWORD PTR [eax-0x2dffff11]
  410d87:	xor    al,0x88
  410d89:	das    
  410d8a:	je     0x410dc7
  410d8c:	xchg   DWORD PTR [ebp+esi*2-0x11d53596],ebp
  410d93:	mov    esi,0x3b506aed
  410d98:	push   eax
  410d99:	sbb    bl,BYTE PTR [eax+0x61]
  410d9c:	cmp    esp,esi
  410d9e:	sbb    al,0xf1
  410da0:	inc    eax
  410da1:	jmp    0xd9fc5a55
  410da6:	ins    DWORD PTR es:[edi],dx
  410da7:	jbe    0x410daa
  410da9:	pop    ss
  410daa:	je     0x410dcc
  410dac:	(bad)  
  410dae:	hlt    
  410daf:	or     esi,DWORD PTR ds:0x40f11ccc
  410db5:	jmp    0xe5043739
  410dba:	pop    edx
  410dbb:	iret   
  410dbc:	inc    eax
  410dbd:	jmp    0x5147ffb7
  410dc2:	(bad)  
  410dc3:	jne    0x410dc6
  410dc5:	add    BYTE PTR [edx+0x27003ccc],dl
  410dcb:	push   esp
  410dcc:	in     eax,dx
  410dcd:	(bad)  
  410dce:	pop    ebp
  410dcf:	xor    bl,al
  410dd1:	add    eax,0x3f7db6
  410dd6:	(bad)  
  410dd7:	in     eax,dx
  410dd8:	sti    
  410dd9:	adc    eax,0x41213a
  410dde:	xlat   BYTE PTR ds:[ebx]
  410ddf:	adc    ebp,ebp
  410de1:	mov    DWORD PTR [ebx-0x9a276bd],ebx
  410de7:	mov    esi,0xff5d
  410dec:	dec    ecx
  410ded:	lea    eax,[ebp-0x1]
  410df0:	aad    0x23
  410df2:	mov    ecx,0x50379dc6
  410df7:	jmp    DWORD PTR [edx-0x50]
  410dfa:	lea    eax,[ebp+0x1e]
  410dfd:	out    0xe4,eax
  410dff:	dec    esp
  410e00:	pop    ebp
  410e01:	jbe    0x410dfe
  410e03:	test   BYTE PTR [esi-0x34],bl
  410e06:	pop    es
  410e07:	(bad)  
  410e08:	shl    DWORD PTR [ebp+0x7c],cl
  410e0b:	jge    0x410e26
  410e0d:	xor    BYTE PTR [edi-0x24],ch
  410e10:	xor    eax,0x6b01b031
  410e15:	cld    
  410e16:	in     al,dx
  410e17:	call   0x3cc2e4
  410e1c:	cmp    BYTE PTR [edx+0x70975bbf],bh
  410e22:	push   ebp
  410e23:	mov    ebp,DWORD PTR [edx+0x3d14e8b0]
  410e29:	add    eax,ebx
  410e2b:	push   esi
  410e2c:	ss sub ebp,ecx
  410e2f:	(bad)  
  410e30:	sbb    eax,0x58397630
  410e35:	and    ah,al
  410e37:	inc    ebx
  410e38:	into   
  410e39:	in     al,dx
  410e3a:	sti    
  410e3b:	adc    eax,0x4121f6
  410e40:	aaa    
  410e41:	in     eax,0x1b
  410e43:	call   0x75466bb9
  410e48:	inc    ecx
  410e49:	fild   DWORD PTR [edx+ebx*8]
  410e4c:	fistp  DWORD PTR [ebp+0x5]
  410e4f:	inc    DWORD PTR [eax]
  410e51:	add    BYTE PTR [eax+0x17],bh
  410e54:	jns    0x410e1b
  410e56:	hlt    
  410e57:	sbb    al,0x5
  410e59:	jne    0x410e52
  410e5b:	sbb    al,0x88
  410e5d:	sbb    al,0x8b
  410e5f:	push   edx
  410e60:	(bad)  
  410e61:	(bad)  
  410e62:	jp     0x410e7b
  410e64:	sub    ebp,eax
  410e66:	hlt    
  410e67:	sbb    al,0x0
  410e69:	push   esi
  410e6a:	pusha  
  410e6b:	out    0x5c,eax
  410e6d:	adc    edi,esi
  410e6f:	sbb    al,0xaf
  410e71:	movsx  ebx,BYTE PTR [edi+0x4cea882c]
  410e78:	mov    BYTE PTR [ebx+ecx*2-0x7c],bl
  410e7c:	fdiv   st(6),st
  410e7e:	fstp   DWORD PTR [ecx]
  410e80:	jnp    0x410ec6
  410e82:	xor    BYTE PTR [edi-0x210e47f4],dl
  410e88:	add    BYTE PTR [ebx+0x20],dl
  410e8b:	enter  0x8c7f,0x72
  410e8f:	aaa    
  410e90:	aad    0xe7
  410e92:	rcr    DWORD PTR [ebp+0x42],cl
  410e95:	(bad)  
  410e96:	mov    bl,0x5b
  410e98:	mov    ecx,0xc380641d
  410e9d:	mul    DWORD PTR [edi-0x16]
  410ea0:	mov    bl,0x7
  410ea2:	mov    esi,0x3e673d68
  410ea7:	sbb    eax,DWORD PTR [ecx]
  410ea9:	inc    eax
  410eaa:	loopne 0x410ef4
  410eac:	cmp    esi,edi
  410eae:	inc    edx
  410eaf:	fwait
  410eb0:	adc    eax,DWORD PTR [eax+0x37]
  410eb3:	sahf   
  410eb4:	cmp    BYTE PTR [eax],al
  410eb6:	add    BYTE PTR [eax],al
  410eb8:	inc    ebx
  410eb9:	in     al,0x42
  410ebb:	inc    esp
  410ebc:	shl    BYTE PTR [edx+ebp*2],0xbe
  410ec0:	mov    ecx,0xa821836
  410ec5:	gs xchg ebx,eax
  410ec7:	mov    dh,0x30
  410ec9:	or     esi,esi
  410ecb:	sbb    ecx,DWORD PTR [ecx+0x74]
  410ece:	jmp    0xc405:0x8f387484
  410ed5:	xor    esp,DWORD PTR [ebp-0x3a]
  410ed8:	pushf  
  410ed9:	sbb    al,0xd9
  410edb:	add    BYTE PTR [ecx+0x758dc509],0x6d
  410ee2:	xor    DWORD PTR [ebp+0x34],eax
  410ee5:	xor    al,0x67
  410ee7:	mov    edi,0xd9e83014
  410eec:	lods   eax,DWORD PTR ds:[esi]
  410eed:	add    esi,esp
  410eef:	jns    0x410f21
  410ef1:	jg     0x410f01
  410ef3:	test   DWORD PTR [edi+0x3e],ecx
  410ef6:	mov    esi,0xde0bb41f
  410efb:	mov    dh,0xe3
  410efd:	jns    0x410ede
  410eff:	dec    ecx
  410f00:	lds    edi,FWORD PTR [edx+ebp*2]
  410f03:	mov    ebx,0x69d3e37
  410f08:	popf   
  410f09:	ss mov dl,0x2c
  410f0c:	xor    eax,0xafc32a45
  410f11:	xor    eax,0x35f8090f
  410f16:	jmp    0xb775461e
  410f1b:	inc    ebx
  410f1c:	add    BYTE PTR [eax],al
  410f1e:	inc    eax
  410f1f:	sbb    eax,0x3dff8326
  410f24:	pop    esi
  410f25:	div    BYTE PTR [ebp-0x224218f6]
  410f2b:	mov    ah,0xd1
  410f2d:	adc    DWORD PTR [ebx-0x7],ebp
  410f30:	imul   edi,DWORD PTR ds:0x3ea33b3,0x68012c4b
  410f3a:	or     dl,BYTE PTR [edx+0x21]
  410f3d:	jmp    0x685e9976
  410f42:	cli    
  410f43:	pop    ebx
  410f44:	and    ecx,ebp
  410f46:	xor    al,0x89
  410f48:	adc    eax,0x13535ae
  410f4d:	jmp    0xbb0f2c86
  410f52:	hlt    
  410f53:	dec    ebx
  410f54:	inc    ebp
  410f55:	lds    eax,FWORD PTR [eax+0x39]
  410f58:	xchg   esi,eax
  410f59:	test   eax,0xbab41d73
  410f5e:	hlt    
  410f5f:	mov    di,0x34f1
  410f63:	jl     0x410ee5
  410f65:	fstp   QWORD PTR [eax+0x34]
  410f68:	jmp    ebp
  410f6a:	loop   0x410f9c
  410f6c:	jbe    0x410f63
  410f6e:	mov    ch,0xb
  410f70:	or     BYTE PTR [ebp+0x6ac14585],bh
  410f76:	adc    bh,BYTE PTR [eax]
  410f78:	jbe    0x410f46
  410f7a:	icebp  
  410f7b:	xor    al,BYTE PTR [edx]
  410f7d:	jmp    0xc62943b6
  410f82:	add    BYTE PTR [eax],al
  410f84:	mov    ch,0xb
  410f86:	or     BYTE PTR [ebp+0x6a3a8a31],dl
  410f8c:	push   0x38
  410f8e:	jnp    0x410f4d
  410f90:	mov    ebx,0x34e9870c
  410f95:	xor    al,0x75
  410f97:	loope  0x410f54
  410f99:	or     al,0x25
  410f9b:	leave  
  410f9c:	xor    al,0x34
  410f9e:	jnp    0x410f65
  410fa0:	mov    ebx,0x33092b0c
  410fa5:	xor    al,0x7c
  410fa7:	std    
  410fa8:	jns    0x410fdf
  410faa:	add    cl,ch
  410fac:	xor    al,0x34
  410fae:	call   0x3b08f5b2
  410fb3:	add    BYTE PTR [edx],cl
  410fb5:	sbb    al,0x9
  410fb7:	packssdw mm6,QWORD PTR [ebx+0x3c]
  410fbb:	jmp    0x410ffb
  410fbd:	outs   dx,DWORD PTR ds:[esi]
  410fbe:	add    al,BYTE PTR [ecx]
  410fc0:	into   
  410fc1:	xor    eax,DWORD PTR [ecx]
  410fc3:	jmp    0x410ff9
  410fc5:	add    edi,DWORD PTR [ebp+0x410b37eb]
  410fcb:	and    al,0x96
  410fcd:	rol    DWORD PTR [edi],0x80
  410fd0:	inc    esi
  410fd1:	inc    edi
  410fd2:	or     eax,0x2dd8b75
  410fd7:	pop    eax
  410fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fd9:	xor    dh,BYTE PTR [eax]
  410fdb:	rcr    BYTE PTR [esi-0x47],0x2
  410fdf:	xor    ecx,esi
  410fe1:	repz ret 0x8e0c
  410fe5:	in     al,dx
  410fe6:	xchg   esp,ebp
  410fe8:	add    BYTE PTR [eax],al
  410fea:	fst    QWORD PTR [esi+0x10]
  410fed:	push   ebx
  410fee:	test   al,0xde
  410ff0:	fs cwde 
  410ff2:	push   0xb667fcf3
  410ff7:	and    DWORD PTR [ecx+0x0],eax
  410ffa:	out    0x71,al
  410ffc:	mov    ecx,0xd4ba5e00
  411001:	xor    ecx,DWORD PTR [eax]
  411003:	or     bl,bh
  411005:	je     0x410f9d
  411007:	mov    edx,0x45ed55ff
  41100c:	mov    esp,?
  41100e:	push   ds
  41100f:	xor    eax,DWORD PTR [ecx]
  411011:	mov    ecx,DWORD PTR ds:0x7eff4fe1
  411017:	adc    eax,DWORD PTR [edx]
  411019:	add    BYTE PTR [esi],bl
  41101b:	mov    edx,0xe50169ff
  411020:	sti    
  411021:	nop
  411022:	out    0x2f,al
  411024:	add    DWORD PTR [eax],eax
  411026:	test   DWORD PTR ds:0xa0115353,esi
  41102c:	or     al,0x1
  41102e:	aaa    
  41102f:	sbb    eax,0x68348b01
  411034:	int3   
  411035:	sti    
  411036:	xchg   BYTE PTR [ebp+0x6d],ah
  411039:	adc    eax,0xfed21d77
  41103e:	daa    
  41103f:	cwde   
  411040:	inc    ebp
  411041:	je     0x411045
  411043:	push   0xce67ebc4
  411048:	adc    al,0x1c
  41104a:	inc    esp
  41104b:	pop    ebp
  41104c:	add    eax,0x3c00006a
  411051:	inc    ebp
  411052:	mov    ds:0x8288fa88,eax
  411057:	jmp    0x4110a0
  411059:	retf   0x6540
  41105c:	mov    esi,0xf28a394f
  411061:	or     BYTE PTR [edx-0x736753f9],0x74
  411068:	mov    esi,DWORD PTR [edi+0x18dfa464]
  41106e:	mov    ah,0x3f
  411070:	aaa    
  411071:	int    0x63
  411073:	inc    dh
  411075:	fdiv   st(7),st
  411077:	push   DWORD PTR [edi]
  411079:	add    ah,0xfb
  41107c:	mov    esp,0xe6fed104
  411081:	adc    al,0xde
  411083:	pop    ebp
  411084:	lods   al,BYTE PTR ds:[esi]
  411085:	pop    ecx
  411086:	fcmove st,st(0)
  411088:	je     0x411051
  41108a:	mov    ebx,ebp
  41108c:	mov    ah,0x37
  41108e:	in     eax,0x52
  411090:	add    esi,0x1c1c4446
  411096:	sub    DWORD PTR [esi+0x18],ecx
  411099:	das    
  41109a:	ds mov ch,bh
  41109d:	nop
  41109e:	pop    edx
  41109f:	jae    0x411037
  4110a1:	nop
  4110a2:	(bad)
  4110a6:	adc    al,0x1c
  4110a8:	and    al,0x34
  4110aa:	sub    al,BYTE PTR [ebx*2+0x633d423c]
  4110b1:	cmp    al,0x4c
  4110b3:	mov    eax,DWORD PTR [eax]
  4110b5:	add    BYTE PTR [ebx+0x10],bh
  4110b8:	int3   
  4110b9:	push   ss
  4110ba:	adc    esp,DWORD PTR [ecx]
  4110bc:	sub    al,BYTE PTR [esi+edi*4]
  4110bf:	outs   dx,DWORD PTR ds:[esi]
  4110c0:	into   
  4110c1:	xchg   BYTE PTR [eax+0x3588f280],cl
  4110c7:	mov    bh,0x1d
  4110c9:	cmp    BYTE PTR [edi-0x4f],ah
  4110cc:	xchg   esi,eax
  4110cd:	adc    edi,DWORD PTR [eax+ecx*1-0x306b4992]
  4110d4:	dec    ebp
  4110d5:	add    ax,0x8bcf
  4110d9:	xchg   ebx,eax
  4110da:	nop
  4110db:	xor    al,0xea
  4110dd:	add    edi,DWORD PTR [edx+0x1108f5f4]
  4110e3:	mov    cl,0xf5
  4110e5:	aaa    
  4110e6:	cmp    DWORD PTR [edi-0x1a],0xea08f345
  4110ed:	mov    ?,ebx
  4110ef:	btc    DWORD PTR [ebx+eax*2],edi
  4110f3:	push   esp
  4110f4:	test   ebx,0x38cd8560
  4110fa:	pop    eax
  4110fb:	xor    dl,0x88
  4110fe:	xor    eax,0x30d33b61
  411103:	inc    ecx
  411104:	paddusb mm4,mm2
  411107:	mov    eax,0xf26fd827
  41110c:	out    dx,al
  41110d:	add    ecx,DWORD PTR [edx-0x422df147]
  411113:	sub    eax,0x631cce65
  411118:	mov    ah,0x3c
  41111a:	add    BYTE PTR [eax],al
  41111c:	push   0x84436d9c
  411121:	xor    BYTE PTR [edi-0x5a],ah
  411124:	or     al,0x34
  411126:	add    DWORD PTR [edx+0x3a],esp
  411129:	pop    esi
  41112a:	cld    
  41112b:	cdq    
  41112c:	sub    al,0xb9
  41112e:	inc    esi
  41112f:	in     eax,0x82
  411131:	repnz push esi
  411133:	jb     0x411154
  411135:	fs push edx
  411137:	ds mov al,0xb
  41113a:	mov    BYTE PTR [ecx+0x33],ah
  41113d:	xor    eax,DWORD PTR [ecx]
  41113f:	jmp    0x743d8900
  411144:	mov    ebx,0x34e90233
  411149:	mov    esp,0xe2b6af4e
  41114e:	jne    0x411180
  411150:	shl    BYTE PTR [edi+0x9],0xd2
  411154:	std    
  411155:	popa   
  411156:	mov    ah,BYTE PTR [ebx+eiz*2]
  411159:	mov    esp,0x686e156
  41115e:	inc    edi
  41115f:	xchg   BYTE PTR [esi+edi*4],bh
  411162:	jbe    0x4111e2
  411164:	mov    ecx,0x67e90320
  411169:	push   es
  41116a:	or     eax,0x88066e37
  41116f:	add    eax,0xe71dbc3a
  411174:	mov    esp,0xe6e60220
  411179:	cmp    BYTE PTR [ebx],al
  41117b:	fsubrp st(6),st
  41117d:	loop   0x41117f
  41117f:	xor    eax,DWORD PTR [eax]
  411181:	add    al,al
  411183:	pop    edi
  411184:	stc    
  411185:	push   0xe9020612
  41118a:	xor    al,0xba
  41118c:	or     eax,0x373842e8
  411191:	jno    0x4111cf
  411193:	jnp    0x411191
  411195:	lods   al,BYTE PTR ds:[esi]
  411196:	cmp    al,0x89
  411198:	ret    
  411199:	mov    bh,0x1
  41119b:	scas   al,BYTE PTR es:[edi]
  41119c:	dec    esi
  41119d:	push   cs
  41119e:	stos   DWORD PTR es:[edi],eax
  41119f:	mov    ebx,0x381f0001
  4111a4:	add    DWORD PTR [edx-0x777bc225],ecx
  4111aa:	(bad)  
  4111ac:	add    DWORD PTR [eax],eax
  4111ae:	test   eax,0xde04c270
  4111b3:	out    0x87,al
  4111b5:	stc    
  4111b6:	dec    ebp
  4111b7:	jno    0x41113e
  4111b9:	inc    DWORD PTR [edx+0x55565019]
  4111bf:	dec    ecx
  4111c0:	daa    
  4111c1:	lock inc esp
  4111c3:	xor    eax,DWORD PTR [ebx]
  4111c5:	mov    ebp,DWORD PTR [edx]
  4111c7:	adc    al,0xd
  4111c9:	xor    ah,dl
  4111cb:	and    BYTE PTR [edx-0x78],al
  4111ce:	fiadd  WORD PTR [edx]
  4111d0:	dec    ecx
  4111d1:	and    al,0xb2
  4111d3:	les    eax,FWORD PTR [edx]
  4111d5:	xor    esp,edi
  4111d7:	test   DWORD PTR [ebx+0x75],0x5f57ddb1
  4111de:	int3   
  4111df:	das    
  4111e0:	add    DWORD PTR [ebp+0x5],edx
  4111e3:	pop    ebx
  4111e4:	xchg   DWORD PTR [ebp+0x0],eax
  4111e7:	add    BYTE PTR [esi+0xd0ce8ba],al
  4111ed:	mov    esp,0xb5590008
  4111f2:	aad    0x0
  4111f4:	pop    esi
  4111f5:	aaa    
  4111f6:	push   eax
  4111f7:	lea    esp,[ebx+0x142b563f]
  4111fd:	out    0x87,al
  4111ff:	stc    
  411200:	je     0x41123c
  411202:	ret    
  411203:	inc    ebp
  411204:	stc    
  411205:	mov    cs,WORD PTR ss:[ebp-0xa]
  411209:	fdivr  QWORD PTR [edi+0x7d]
  41120c:	pop    edx
  41120d:	aaa    
  41120e:	jae    0x41121d
  411210:	aam    0x32
  411212:	or     al,0xff
  411214:	jmp    0x411250
  411216:	sti    
  411217:	inc    ebp
  411218:	dec    ecx
  411219:	scas   eax,DWORD PTR es:[edi]
  41121a:	adc    ebx,ebp
  41121c:	aaa    
  41121d:	push   cs
  41121e:	inc    ebx
  41121f:	add    BYTE PTR [edi],dh
  411221:	int3   
  411222:	retf   0x1974
  411225:	or     dh,BYTE PTR [ebx+0x4c]
  411228:	jbe    0xf4ed283
  41122e:	(bad)  
  41122f:	cdq    
  411230:	dec    edi
  411231:	mov    al,al
  411233:	inc    DWORD PTR [ecx-0x5d]
  411236:	int3   
  411237:	clc    
  411238:	mov    ah,0xeb
  41123a:	push   es
  41123b:	mov    esp,ebp
  41123d:	retf   
  41123e:	and    BYTE PTR [ebx],al
  411240:	test   dl,0x1
  411243:	or     eax,esi
  411245:	xchg   BYTE PTR [edi+0x54d4227],al
  41124b:	add    DWORD PTR [eax],0x0
  41124e:	clc    
  41124f:	or     eax,0xbb87c81
  411254:	mov    DWORD PTR [edx+ebp*4+0x22],ecx
  411258:	adc    cl,BYTE PTR [edi]
  41125a:	loope  0x4112ab
  41125c:	cmp    eax,DWORD PTR [edx-0x1ebfe66b]
  411262:	xor    eax,0x3c0528cc
  411267:	(bad)  
  411268:	mov    edx,DWORD PTR [eax-0x3ef7a1]
  41126e:	lea    ecx,[esi]
  411270:	ja     0x4112ae
  411272:	mov    bh,0xf
  411274:	cmp    al,BYTE PTR [ecx]
  411276:	jmp    0xfaf71c84
  41127b:	xchg   esi,eax
  41127c:	xchg   al,ah
  41127e:	and    BYTE PTR [edi-0x331dd878],dl
  411284:	add    bl,ch
  411286:	xor    eax,0xca7ff47c
  41128b:	fadd   QWORD PTR [eax]
  41128d:	je     0x4112a5
  41128f:	sbb    dh,BYTE PTR [ebx-0xe]
  411292:	rcl    DWORD PTR [ebx+0x34e90ef5],1
  411298:	popf   
  411299:	cs cmp edx,ecx
  41129c:	cmp    BYTE PTR [ecx],cl
  41129e:	jmp    0x88cb9f8e
  4112a3:	test   BYTE PTR ss:[edx-0x7573c780],cl
  4112aa:	jo     0x4112e6
  4112ac:	addr16 inc esp
  4112ae:	cmp    BYTE PTR ds:0x8bda,cl
  4112b4:	and    BYTE PTR [esi+0x5cb82e8d],ch
  4112ba:	jmp    0x72778b4a
  4112bf:	retf   
  4112c0:	xor    eax,0xb5ffaab5
  4112c5:	jg     0x4112a5
  4112c7:	add    eax,DWORD PTR [eax-0x47]
  4112ca:	add    bh,BYTE PTR [ecx]
  4112cc:	leave  
  4112cd:	add    DWORD PTR [edx+ebx*8],ebx
  4112d0:	pop    ebp
  4112d1:	dec    ebp
  4112d2:	sub    eax,0xdef6ee0c
  4112d7:	add    ecx,DWORD PTR [edx]
  4112d9:	lods   eax,DWORD PTR ds:[esi]
  4112da:	xchg   esi,eax
  4112db:	test   BYTE PTR [eax+esi*1+0x40b3d137],bl
  4112e2:	jmp    0x5f6d0673
  4112e7:	pop    edx
  4112e8:	mov    edi,0x79fc7e77
  4112ed:	xor    DWORD PTR [edi+0x68],esp
  4112f0:	add    BYTE PTR [ecx],0xeb
  4112f3:	rol    DWORD PTR [ebp+0xa],1
  4112f6:	mov    eax,0xd7e12d55
  4112fb:	leave  
  4112fc:	es jmp 0x411365
  4112ff:	dec    edx
  411300:	jmp    0x41133e
  411302:	push   0xffffffb6
  411304:	sub    al,0x34
  411306:	pusha  
  411307:	or     al,0xcb
  411309:	ss addr16 inc esp
  41130c:	ss or  eax,0x73b3c4ea
  411312:	add    DWORD PTR [eax+eax*2],ebx
  411315:	jb     0x41138b
  411317:	loop   0x411319
  411319:	add    BYTE PTR [edi],bh
  41131b:	retf   0x73c2
  41131e:	mov    esp,0x34a97677
  411323:	or     eax,0xb56ddb00
  411328:	retf   0x3995
  41132b:	mov    ah,0xfa
  41132d:	int    0xb1
  41132f:	jae    0x4112f1
  411331:	out    dx,al
  411332:	mov    al,0xf3
  411334:	sti    
  411335:	and    BYTE PTR [edx],dl
  411337:	stc    
  411338:	cmp    BYTE PTR [esi],cl
  41133a:	stos   BYTE PTR es:[edi],al
  41133b:	test   DWORD PTR [ebp+0x4339a7b0],0x4db972df
  411345:	cld    
  411346:	sbb    al,0x73
  411348:	adc    bl,0x37
  41134b:	sub    BYTE PTR [ebx+0x4885196c],0x73
  411352:	out    dx,al
  411353:	or     BYTE PTR [eax+0x56aafa2c],cl
  411359:	mov    al,0xfb
  41135b:	adc    eax,DWORD PTR [eax]
  41135d:	test   eax,0xa807355b
  411362:	lods   eax,DWORD PTR ds:[esi]
  411363:	outs   dx,DWORD PTR ds:[esi]
  411364:	mul    DWORD PTR [ecx+0x76]
  411367:	cld    
  411368:	xchg   DWORD PTR [eax-0xcfbec05],ebp
  41136e:	jg     0x41136d
  411370:	ror    DWORD PTR [ebx-0x14160bc9],0x2e
  411377:	test   BYTE PTR [ecx+0x53b0291c],0x66
  41137e:	add    BYTE PTR [eax],al
  411380:	fs jmp 0x41130c
  411383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411384:	pop    ds
  411385:	mov    eax,0xad47d7cf
  41138a:	jbe    0x4113e1
  41138c:	mov    ebp,0xf2000e74
  411391:	dec    eax
  411392:	inc    ebp
  411393:	hlt    
  411394:	mov    BYTE PTR [ecx],0x86
  411397:	leave  
  411398:	jnp    0x4113ce
  41139a:	inc    edx
  41139b:	cmp    edx,DWORD PTR [esp+edi*4-0x19]
  41139f:	cmp    esi,DWORD PTR [ecx+0x37]
  4113a2:	jg     0x4113f7
  4113a4:	inc    ecx
  4113a5:	inc    edi
  4113a6:	sti    
  4113a7:	pop    esi
  4113a8:	xchg   ebp,eax
  4113a9:	cmc    
  4113aa:	lock sub ebx,ebx
  4113ad:	sub    ebx,DWORD PTR [ebx+ebx*2+0x47]
  4113b1:	jb     0x4113b7
  4113b3:	add    BYTE PTR [eax+0x88aecaa],ch
  4113b9:	lods   al,BYTE PTR ds:[esi]
  4113ba:	add    DWORD PTR [ebx+0x147338e4],eax
  4113c0:	arpl   ax,di
  4113c2:	add    DWORD PTR [ebx],ebp
  4113c4:	jmp    FWORD PTR [edx+ecx*2+0x32f54ff]
  4113cb:	xor    cl,BYTE PTR [esi]
  4113cd:	inc    edi
  4113ce:	test   BYTE PTR [eax],dl
  4113d0:	push   ds
  4113d1:	icebp  
  4113d2:	jne    0x4113c8
  4113d4:	and    BYTE PTR [ebx+0x39],dh
  4113d7:	push   esp
  4113d8:	sub    dh,BYTE PTR [esi*2+0x70474e14]
  4113df:	and    al,0xa6
  4113e1:	in     eax,0xe4
  4113e3:	popa   
  4113e4:	add    BYTE PTR [eax],al
  4113e6:	lea    esi,[ebx]
  4113e8:	add    ebx,ebp
  4113ea:	mov    DWORD PTR [ebp+0x3c11048],ebp
  4113f0:	or     DWORD PTR [eax],edx
  4113f2:	inc    esi
  4113f3:	vcmpss xmm3,xmm1,DWORD PTR [edx-0x71d97fcd],0xcb
  4113fc:	add    al,BYTE PTR [ecx]
  4113fe:	pop    esi
  4113ff:	xor    edi,esp
  411401:	je     0x41143d
  411403:	xor    BYTE PTR [esi-0x41ca5ba],cl
  411409:	adc    eax,0x400efd37
  41140e:	aaa    
  41140f:	mov    bh,BYTE PTR [ebx+ecx*1]
  411412:	mov    esp,0x3703424f
  411417:	test   al,0x87
  411419:	jmp    0x411401
  41141b:	cdq    
  41141c:	out    dx,eax
  41141d:	enter  0xa689,0x88
  411421:	dec    esp
  411422:	sub    BYTE PTR [ebp-0x7b660237],al
  411428:	mov    bh,bh
  41142a:	aaa    
  41142b:	or     eax,0x63078b01
  411430:	add    BYTE PTR [ecx],al
  411432:	aaa    
  411433:	or     eax,0xd7760d89
  411438:	sahf   
  411439:	cmp    ch,ch
  41143b:	jp     0x411468
  41143d:	mov    ah,bh
  41143f:	xchg   ecx,eax
  411440:	cmp    cl,BYTE PTR [esi]
  411442:	mov    eax,ds:0x828a3647
  411447:	add    eax,0xb8b
  41144c:	ds xchg ebx,eax
  41144e:	or     eax,DWORD PTR [edx]
  411450:	std    
  411451:	or     al,0xc4
  411453:	std    
  411454:	cmp    BYTE PTR [edi-0x3c],bh
  411457:	std    
  411458:	lods   eax,DWORD PTR ds:[esi]
  411459:	loopne 0x41145a
  41145b:	std    
  41145c:	jb     0x411424
  41145e:	lea    ebx,ds:0xeffe8bf
  411464:	loope  0x4114ad
  411466:	ss cmp dh,dl
  411469:	adc    BYTE PTR [ebx+eax*1-0xc9b08f],ch
  411470:	cli    
  411471:	sbb    eax,0x56e8ceac
  411476:	fcmove st,st(0)
  411478:	jne    0x41147e
  41147a:	add    DWORD PTR [ebx-0xd775d1],ecx
  411480:	in     al,0xf3
  411482:	(bad)  
  411483:	jae    0x4114c9
  411485:	xor    al,0x67
  411487:	sub    esi,DWORD PTR ds:0x98f1e788
  41148d:	repnz pop edi
  41148f:	inc    esi
  411490:	mov    ebp,0x49e142f5
  411495:	inc    BYTE PTR [ebx+0x29]
  411498:	and    bh,bh
  41149a:	mov    edx,0x33e9ac0b
  41149f:	mov    ah,0x34
  4114a1:	test   eax,0xd028924
  4114a6:	push   es
  4114a7:	aaa    
  4114a8:	and    esi,edi
  4114aa:	wbinvd 
  4114ac:	mov    ah,0xf4
  4114ae:	out    dx,al
  4114af:	int    0x0
  4114b1:	add    BYTE PTR [ebp+0xc9202ee],bh
  4114b7:	inc    BYTE PTR [ebx]
  4114b9:	je     0x4114f2
  4114bb:	icebp  
  4114bc:	gs xor DWORD PTR cs:[ecx],0xffffffb7
  4114c1:	inc    ebx
  4114c2:	cmc    
  4114c3:	test   eax,0x34df80e2
  4114c8:	pop    esi
  4114c9:	clc    
  4114ca:	outs   dx,DWORD PTR ds:[esi]
  4114cb:	mov    BYTE PTR [ebx+ecx*8],al
  4114ce:	fs and eax,0x6b40b021
  4114d4:	push   ebp
  4114d5:	sub    bh,BYTE PTR [ebp-0x52bb901a]
  4114db:	icebp  
  4114dc:	rcr    BYTE PTR [eax-0x46],cl
  4114df:	std    
  4114e0:	mov    bl,0x28
  4114e2:	pusha  
  4114e3:	mov    ch,dl
  4114e5:	sub    BYTE PTR [esi],dh
  4114e7:	mov    ch,cl
  4114e9:	int    0x9
  4114eb:	test   eax,0xff332baf
  4114f0:	xchg   ebx,eax
  4114f1:	xor    al,0x75
  4114f3:	std    
  4114f4:	sbb    cl,BYTE PTR [esp+edi*4]
  4114f7:	out    dx,al
  4114f8:	xor    DWORD PTR [ebx-0x775c56cc],0x65
  4114ff:	or     al,0x2
  411501:	lods   al,BYTE PTR ds:[esi]
  411502:	sub    dh,bh
  411504:	cld    
  411505:	xor    BYTE PTR [ecx],0xb1
  411508:	shr    ebp,0x87
  41150b:	stos   BYTE PTR es:[edi],al
  41150c:	shl    DWORD PTR [edx-0xd],cl
  41150f:	adc    al,0x3a
  411511:	push   ebp
  411512:	or     edi,esi
  411514:	mov    BYTE PTR [edi],ah
  411516:	add    BYTE PTR [eax],al
  411518:	imul   DWORD PTR [ecx-0x56c8f2b3]
  41151e:	or     dl,BYTE PTR [edi+0x62546c6d]
  411524:	or     DWORD PTR fs:[edi],0x6718d9a0
  41152b:	jmp    0x5b36:0xa78ee327
  411532:	hlt    
  411533:	sbb    BYTE PTR [ebp-0x23],dh
  411536:	inc    DWORD PTR [ecx]
  411538:	xor    DWORD PTR [edx-0x4f994600],ecx
  41153e:	inc    ebx
  41153f:	jmp    0x41151e
  411541:	add    eax,0x321428f3
  411546:	push   ecx
  411547:	add    DWORD PTR [edi+0x34],ebx
  41154a:	add    ecx,ebp
  41154c:	popa   
  41154d:	add    eax,0x199fde87
  411552:	mov    BYTE PTR ds:0x45e928df,ch
  411558:	add    al,0xfe
  41155a:	cld    
  41155b:	ins    BYTE PTR es:[edi],dx
  41155c:	jnp    0x4114df
  41155e:	or     esi,DWORD PTR [edx-0x9]
  411561:	push   eax
  411562:	adc    DWORD PTR [edx+esi*2-0x7f],ebp
  411566:	call   FWORD PTR [edi+0x32]
  411569:	test   eax,0x65a392c4
  41156e:	jmp    0x17547b8
  411573:	(bad)  
  411575:	pop    ebp
  411576:	pop    ebx
  411577:	stos   DWORD PTR es:[edi],eax
  411578:	mov    edi,esp
  41157a:	xchg   DWORD PTR [eax],eax
  41157c:	add    BYTE PTR [eax],al
  41157e:	xchg   BYTE PTR [ebp-0x217dff17],dh
  411584:	dec    ecx
  411585:	je     0x411519
  411587:	mov    ch,0xe9
  411589:	add    esp,DWORD PTR [edx+0x35]
  41158c:	das    
  41158d:	ror    BYTE PTR ds:0xe556c27d,0x59
  411594:	in     al,0x4b
  411596:	call   0x592d10db
  41159b:	inc    ecx
  41159c:	ins    BYTE PTR es:[edi],dx
  41159d:	or     ch,al
  41159f:	cmp    eax,0x7d5270fb
  4115a4:	(bad)  
  4115a5:	mov    edx,DWORD PTR [eax+0x18]
  4115a8:	pop    ds
  4115a9:	cld    
  4115aa:	pop    ecx
  4115ab:	inc    edi
  4115ac:	out    0xb,eax
  4115ae:	lea    esi,[eax+0x0]
  4115b1:	push   esi
  4115b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115b3:	jbe    0x411599
  4115b5:	cwde   
  4115b6:	and    eax,0x1fb0fb47
  4115bb:	jae    0x411542
  4115bd:	test   BYTE PTR [ebx+0x4dc03032],0x7b
  4115c4:	add    al,0x83
  4115c6:	aaa    
  4115c7:	xor    BYTE PTR [ebp+0x3a],dh
  4115ca:	xchg   edi,eax
  4115cb:	ret    
  4115cc:	es dec ecx
  4115ce:	sbb    BYTE PTR [esi],0x4a
  4115d1:	je     0x41159c
  4115d3:	mov    eax,0x7b0cea75
  4115d8:	(bad)  
  4115d9:	mov    eax,DWORD PTR [ecx-0x601ffe1]
  4115df:	inc    esi
  4115e0:	out    0x2f,eax
  4115e2:	add    BYTE PTR [eax],al
  4115e4:	fs xor al,ch
  4115e7:	add    dh,ah
  4115e9:	xor    BYTE PTR [ebx+ecx*4-0x30],dl
  4115ed:	jp     0x4115b9
  4115ef:	call   0x3c61c8
  4115f4:	int    0x46
  4115f6:	ins    BYTE PTR es:[edi],dx
  4115f7:	or     BYTE PTR [edi],dh
  4115f9:	xchg   esi,eax
  4115fa:	inc    edx
  4115fb:	inc    BYTE PTR [edi]
  4115fd:	adc    DWORD PTR [esi+eax*8-0x71],edi
  411601:	shr    BYTE PTR [ebx],0xfe
  411604:	js     0x4115ac
  411606:	add    DWORD PTR [edx-0x4c],edx
  411609:	int    0x4
  41160b:	mov    eax,DWORD PTR [ecx-0x818c06a]
  411611:	xchg   ebp,eax
  411612:	das    
  411613:	(bad)  
  411614:	lods   al,BYTE PTR ds:[esi]
  411615:	push   ebx
  411616:	inc    ebx
  411617:	push   ebp
  411618:	mov    esp,0xff027b5d
  41161d:	aam    0xd7
  41161f:	mov    dh,BYTE PTR [ecx-0x48]
  411622:	push   es
  411623:	ror    DWORD PTR [esi-0x64],1
  411626:	sbb    cl,dl
  411628:	aaa    
  411629:	or     eax,0x902f8b01
  41162e:	das    
  41162f:	jae    0x411673
  411631:	xchg   ah,dl
  411633:	and    ebp,DWORD PTR [ebx]
  411635:	xchg   BYTE PTR [ebx-0x19],al
  411638:	mov    ah,0x21
  41163a:	das    
  41163b:	(bad)  
  41163c:	mov    dl,0x4c
  41163e:	mov    ah,0xd
  411640:	lods   al,BYTE PTR ds:[esi]
  411641:	shl    ah,0xf
  411644:	mov    dl,0x43
  411646:	mov    ah,0x1
  411648:	add    BYTE PTR [eax],al
  41164a:	mov    esi,0xdcc67c0b
  41164f:	adc    al,0xd8
  411651:	out    0xee,eax
  411653:	or     al,0x1
  411655:	add    BYTE PTR [ecx*8+0x14f55dd2],ah
  41165c:	add    DWORD PTR [ebp-0xfea002],eax
  411662:	or     ebp,esp
  411664:	jp     0x411665
  411666:	mov    eax,0x3725860c
  41166b:	div    bl
  41166d:	mov    dh,BYTE PTR [ecx]
  41166f:	mov    es,WORD PTR [eax+0x3]
  411672:	push   es
  411673:	xor    al,0x6d
  411675:	inc    esp
  411676:	and    esp,DWORD PTR [eax+edx*1]
  411679:	cld    
  41167a:	xchg   ecx,eax
  41167b:	inc    eax
  41167c:	push   esi
  41167d:	dec    edx
  41167e:	cmc    
  41167f:	xor    ecx,DWORD PTR [ebx+0x2a25ff17]
  411685:	add    al,0x8c
  411687:	sub    bl,BYTE PTR [edx]
  411689:	sahf   
  41168a:	cmp    bl,bh
  41168c:	mov    ebp,0xea76726f
  411691:	xor    BYTE PTR [ebx+0x78],cl
  411694:	clc    
  411695:	ret    
  411696:	pop    eax
  411697:	scas   eax,DWORD PTR es:[edi]
  411698:	sub    dh,BYTE PTR [edi+0x452a4635]
  41169e:	mov    edi,0x74039a31
  4116a3:	mov    dh,0xc6
  4116a5:	out    0x34,eax
  4116a7:	xor    al,0xb5
  4116a9:	push   DWORD PTR [ecx]
  4116ab:	inc    ebx
  4116ac:	inc    edx
  4116ad:	mov    eax,ds:0xfa280000
  4116b2:	jmp    0xadf6:0xf345a84
  4116b9:	xor    bl,BYTE PTR [ebx]
  4116bb:	mov    eax,0x446d3054
  4116c0:	sub    DWORD PTR [ecx],0xffffffba
  4116c3:	xor    BYTE PTR [ebx-0x48],cl
  4116c6:	sub    al,0xc5
  4116c8:	clc    
  4116c9:	cli    
  4116ca:	aad    0xab
  4116cc:	inc    esi
  4116cd:	je     0x4116b9
  4116cf:	sbb    al,0x39
  4116d1:	add    BYTE PTR fs:[ebx],0xe0
  4116d5:	aas    
  4116d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d7:	dec    ecx
  4116d8:	jne    0x41170e
  4116da:	fist   DWORD PTR [esi]
  4116dc:	push   ebx
  4116dd:	sub    al,BYTE PTR es:[edx+esi*4]
  4116e1:	hlt    
  4116e2:	push   ebp
  4116e3:	or     BYTE PTR ds:0xae07cff4,al
  4116e9:	xor    bh,BYTE PTR [edx+0x2]
  4116ec:	jne    0x41171e
  4116ee:	add    ecx,ebp
  4116f0:	mov    bl,0xb9
  4116f2:	add    eax,0xfc31c119
  4116f7:	fmul   QWORD PTR [eax]
  4116f9:	out    dx,eax
  4116fa:	inc    eax
  4116fb:	jmp    0xfbba3747
  411700:	je     0x4116fb
  411702:	mov    edi,0x555d06a
  411707:	jmp    0xa9714ccd
  41170c:	push   ebx
  41170d:	and    edi,esp
  41170f:	std    
  411710:	push   eax
  411711:	xor    eax,0xe967
  411716:	daa    
  411717:	inc    eax
  411718:	mov    ebp,0xfbf9732f
  41171d:	hlt    
  41171e:	pushf  
  41171f:	and    eax,DWORD PTR [ecx-0x17]
  411722:	repnz xor al,0x1
  411725:	push   0xffffff90
  411727:	push   ebp
  411728:	add    eax,0xfc2380e9
  41172d:	mov    ch,0x18
  41172f:	xor    eax,0x4067e967
  411734:	mov    ebp,0xfbf8fb27
  411739:	cld    
  41173a:	loopne 0x41175e
  41173c:	inc    ecx
  41173d:	jmp    0xbf424cbc
  411742:	mov    ecx,DWORD PTR [ecx]
  411744:	xchg   DWORD PTR [esi],ecx
  411746:	enter  0x8621,0xff
  41174a:	shl    DWORD PTR ds:0xc1e9fe4b,0xe9
  411751:	sbb    DWORD PTR [edi],esp
  411753:	cli    
  411754:	cld    
  411755:	fs push ds
  411757:	xor    al,0x3e
  41175a:	cmp    ebp,edi
  41175c:	cld    
  41175d:	fisub  WORD PTR [eax]
  41175f:	push   edi
  411760:	sar    BYTE PTR [edi],0xe0
  411763:	arpl   WORD PTR [eax-0x77db30ab],cx
  411769:	add    BYTE PTR [edx+0xc],dh
  41176c:	or     eax,0x150c628b
  411771:	repz mov edx,0xcc5e5be6
  411777:	xor    eax,DWORD PTR [ecx]
  411779:	test   DWORD PTR [eax],eax
  41177b:	add    bh,ah
  41177d:	mov    ebx,0xbc055610
  411782:	and    BYTE PTR [eax],cl
  411784:	adc    ebp,DWORD PTR [edi+eax*1]
  411787:	sub    ebx,DWORD PTR [edi+esi*4+0x2e5a8a49]
  41178e:	mov    DWORD PTR [eax],edx
  411790:	imul   eax,DWORD PTR [ecx+0x5e],0xffffffc2
  411794:	pop    edx
  411795:	xor    al,0x53
  411797:	jmp    FWORD PTR [edx+0x10]
  41179a:	or     eax,ebp
  41179c:	xchg   BYTE PTR [ecx-0x5],cl
  41179f:	inc    ebp
  4117a1:	aas    
  4117a2:	test   esi,esi
  4117a4:	push   0x22
  4117a6:	cld    
  4117a7:	je     0x4117e3
  4117a9:	xor    al,0xfc
  4117ab:	je     0x4117d7
  4117ad:	xor    al,0x53
  4117af:	dec    DWORD PTR [ebx]
  4117b1:	and    al,0x13
  4117b3:	inc    eax
  4117b4:	push   ds
  4117b5:	mov    bl,0xc0
  4117b7:	or     al,0x95
  4117b9:	outs   dx,BYTE PTR ds:[esi]
  4117ba:	pop    esi
  4117bb:	ret    0x3426
  4117be:	mov    BYTE PTR [edi],cl
  4117c0:	enter  0xec7a,0x3
  4117c4:	push   ebp
  4117c5:	sbb    BYTE PTR [eax-0x7fb8ce02],bl
  4117cb:	sar    BYTE PTR [edx+0x28],0x88
  4117cf:	ss (bad) 
  4117d2:	dec    edi
  4117d3:	jmp    FWORD PTR [edx+0xf]
  4117d6:	or     DWORD PTR [esi-0x2f],edx
  4117d9:	sbb    al,0x11
  4117db:	push   ss
  4117dc:	push   cs
  4117dd:	xor    BYTE PTR [eax-0x1dffff3c],al
  4117e3:	xor    BYTE PTR [ebx+ecx*4],bl
  4117e6:	aaa    
  4117e7:	(bad)  
  4117e8:	pop    ss
  4117e9:	add    DWORD PTR [ecx*8+0xd33c1ce],eax
  4117f0:	xlat   BYTE PTR ds:[ebx]
  4117f1:	push   esi
  4117f2:	fs mov dh,0xed
  4117f5:	jnp    0x41184a
  4117f7:	adc    DWORD PTR [edi-0x284353ec],esi
  4117fd:	out    dx,eax
  4117fe:	lods   eax,DWORD PTR ds:[esi]
  4117ff:	add    DWORD PTR [edi],eax
  411801:	mov    ah,BYTE PTR [edi]
  411803:	adc    edi,DWORD PTR [ebx]
  411805:	je     0x41183f
  411807:	inc    esi
  411808:	lds    edi,FWORD PTR [edx]
  41180a:	add    esi,ecx
  41180c:	cld    
  41180d:	jno    0x411797
  41180f:	mov    edx,0xcb115e40
  411814:	add    al,0x0
  411816:	cmp    BYTE PTR [edi],dh
  411818:	push   edx
  411819:	push   cs
  41181a:	test   eax,0x4cc1d7cc
  41181f:	pop    esp
  411820:	sub    esi,DWORD PTR [ebx+0x1b]
  411823:	add    eax,0xd949ff9b
  411828:	in     al,0xb
  41182a:	inc    eax
  41182b:	add    BYTE PTR [ecx],cl
  41182d:	push   ss
  41182e:	test   DWORD PTR [eax+eax*4],0xf84b43c3
  411835:	jmp    FWORD PTR [edi-0x37]
  411838:	in     al,0x3
  41183a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41183b:	loop   0x411824
  41183d:	(bad)  
  41183e:	mov    al,ds:0x5c10b4f6
  411843:	dec    esp
  411844:	rcl    BYTE PTR [eax+0x0],1
  411847:	add    BYTE PTR [eax],cl
  411849:	cdq    
  41184a:	in     al,0xb
  41184c:	add    BYTE PTR [eax],al
  41184e:	adc    DWORD PTR [esi],edx
  411850:	ja     0x41185f
  411852:	add    bl,0x43
  411855:	cmp    eax,0xbb35eb05
  41185a:	inc    eax
  41185b:	sar    DWORD PTR [ebx],0xd
  41185e:	fimul  DWORD PTR [edx-0x3890cc35]
  411864:	cmp    al,0xb5
  411866:	into   
  411867:	add    BYTE PTR [esi],dh
  411869:	xor    al,0xea
  41186b:	aad    0x69
  41186d:	mov    bh,0xea
  41186f:	add    DWORD PTR [edi],esi
  411871:	xor    al,0x1
  411873:	in     al,dx
  411874:	mov    BYTE PTR es:[ebx],dl
  411877:	sub    eax,0x1c172c23
  41187c:	mov    ?,ebp
  41187e:	stos   DWORD PTR es:[edi],eax
  41187f:	sub    eax,0x3fa78b5
  411884:	or     ebx,DWORD PTR [edi]
  411886:	fwait
  411887:	mov    bh,0x38
  411889:	test   eax,0xf682385d
  41188e:	mov    ebx,DWORD PTR [esp+esi*4]
  411891:	cli    
  411892:	sub    DWORD PTR ds:0x316fdebd,0x50
  411899:	push   DWORD PTR [esi+0x2d]
  41189c:	popa   
  41189d:	mov    ah,0xaf
  41189f:	(bad)  
  4118a0:	neg    DWORD PTR [ebp-0x53]
  4118a3:	mov    dh,0x13
  4118a5:	mov    WORD PTR [edx+0x3],fs
  4118a8:	aaa    
  4118a9:	xor    al,0x65
  4118ab:	mov    cl,0x0
  4118ad:	add    BYTE PTR [eax],bh
  4118af:	pop    esi
  4118b0:	rol    BYTE PTR [ecx],0xaa
  4118b3:	js     0x4118a7
  4118b5:	retf   
  4118b6:	sbb    BYTE PTR [ecx],ch
  4118b8:	push   cs
  4118b9:	add    al,0x37
  4118bb:	test   eax,0x715dfbad
  4118c0:	out    0xb6,al
  4118c2:	push   edi
  4118c3:	mov    esp,0x3437031c
  4118c8:	test   dl,ch
  4118ca:	xor    bh,BYTE PTR [ebp-0x5]
  4118cd:	cld    
  4118ce:	leave  
  4118cf:	cs pop edi
  4118d1:	mov    edi,0x371642c
  4118d6:	ret    0xf071
  4118d9:	rol    DWORD PTR [ebp+0x1165020c],cl
  4118df:	idiv   ah
  4118e1:	cmp    DWORD PTR [ecx+ecx*1],esi
  4118e4:	add    BYTE PTR [ebx],bl
  4118e6:	jnp    0x41193e
  4118e8:	pop    ebx
  4118e9:	mov    al,0x76
  4118eb:	sub    DWORD PTR [ecx],eax
  4118ed:	cmp    al,0x3e
  4118ef:	or     DWORD PTR [ebx+0x134bcbd],eax
  4118f5:	jmp    0x72a47784
  4118fa:	pop    esp
  4118fb:	mov    bh,0xf3
  4118fd:	call   0xa7c94d36
  411902:	sar    BYTE PTR [edx],cl
  411904:	stc    
  411905:	pop    ds
  411906:	aas    
  411907:	inc    edx
  411908:	rcl    DWORD PTR [edx-0x514bd988],0x64
  41190f:	div    BYTE PTR [esi-0x1f]
  411912:	add    BYTE PTR [eax],al
  411914:	stc    
  411915:	popa   
  411916:	pop    es
  411917:	sbb    edx,DWORD PTR [ebx+0x63]
  41191a:	sti    
  41191b:	jle    0x411938
  41191d:	mov    eax,DWORD PTR [ecx]
  41191f:	ret    0x5f24
  411922:	add    BYTE PTR [ebx+0x59a00d84],ch
  411928:	and    esi,esi
  41192a:	imul   esp,DWORD PTR [ecx+0x35],0x77640134
  411931:	sub    eax,0x3cbdc751
  411936:	addr16 jmp 0x4118ea
  411939:	jp     0x411940
  41193b:	mov    eax,ds:0xa8453273
  411940:	or     dh,BYTE PTR [eax-0x17]
  411943:	push   0xffffffff
  411945:	hlt    
  411946:	cld    
  411947:	push   0xffffffe1
  411949:	sub    BYTE PTR [ecx],al
  41194b:	xchg   ebp,eax
  41194c:	ds cmc 
  41194e:	jbe    0x411935
  411950:	add    eax,0xf64b0ff9
  411956:	jmp    0xfb8c355b
  41195b:	push   DWORD PTR [ecx+esi*1-0x1]
  41195f:	dec    esi
  411961:	jnp    0x411952
  411963:	call   0x3c6508
  411968:	scas   al,BYTE PTR es:[edi]
  411969:	cs pop esp
  41196b:	pop    esi
  41196c:	xchg   DWORD PTR [ebp+0x4],ebp
  41196f:	add    BYTE PTR [ebx],al
  411971:	jne    0x41195b
  411973:	cmp    DWORD PTR [edx+0x27],0x0
  41197a:	sahf   
  41197b:	fst    QWORD PTR [esi+0x57]
  41197e:	pop    ds
  41197f:	inc    edi
  411980:	cld    
  411981:	add    DWORD PTR [esi-0x49e90d0],ecx
  411987:	jnp    0x41198d
  411989:	add    al,bl
  41198b:	dec    eax
  41198c:	sti    
  41198d:	mov    edx,esi
  41198f:	jbe    0x4119de
  411991:	hlt    
  411992:	outs   dx,DWORD PTR gs:[esi]
  411994:	jae    0x4119e7
  411996:	or     eax,0xe50004cb
  41199b:	xor    BYTE PTR [edx+0x19c3b645],cl
  4119a1:	jmp    DWORD PTR [ebx-0x8]
  4119a4:	lea    esi,[ebp-0x4b626]
  4119aa:	out    0xbe,al
  4119ac:	cli    
  4119ad:	(bad)  
  4119ae:	jmp    0xdb9b1a48
  4119b3:	ret    0xe8f4
  4119b6:	or     DWORD PTR [ebp-0x5],eax
  4119b9:	call   FWORD PTR [edi-0x20bb0b63]
  4119bf:	add    eax,0x1f087546
  4119c4:	jne    0x4119ce
  4119c6:	jnp    0x4119bd
  4119c8:	hlt    
  4119c9:	push   eax
  4119ca:	shr    DWORD PTR [ebp+ebx*4-0x14],1
  4119ce:	sub    bl,BYTE PTR [edi]
  4119d0:	sti    
  4119d1:	(bad)  
  4119d2:	aaa    
  4119d3:	mov    al,ds:0xdd36ff28
  4119d8:	add    al,ch
  4119da:	mov    ebp,0xfe283b
  4119df:	add    BYTE PTR [ebx+0x780eb21d],dh
  4119e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e6:	test   eax,0xf43261f3
  4119eb:	mov    edi,0xc8cc7b70
  4119f0:	cmc    
  4119f1:	fld    DWORD PTR [eax]
  4119f3:	mov    edi,eax
  4119f5:	div    BYTE PTR [ecx]
  4119f7:	push   esp
  4119f8:	lods   al,BYTE PTR ds:[esi]
  4119f9:	mov    cl,0x83
  4119fb:	jmp    0x411a40
  4119fd:	ror    WORD PTR [ebx],0x1
  411a01:	data16 mov bl,0x3b
  411a04:	lods   al,BYTE PTR ds:[esi]
  411a05:	push   ecx
  411a06:	pop    es
  411a07:	xor    al,0x0
  411a09:	push   esi
  411a0a:	test   eax,0x3965c07
  411a0f:	(bad)  
  411a10:	out    0x29,eax
  411a12:	aam    0x8a
  411a14:	ins    BYTE PTR es:[edi],dx
  411a15:	push   esp
  411a16:	shl    ebx,0x8f
  411a19:	arpl   di,di
  411a1b:	add    BYTE PTR [edi],dh
  411a1d:	push   0x4707f7c1
  411a22:	(bad)  
  411a25:	fsub   DWORD PTR [edi]
  411a27:	je     0x411a58
  411a29:	bound  edx,QWORD PTR [ecx]
  411a2b:	fs and eax,0x7785009d
  411a31:	or     ebx,ebp
  411a33:	xor    ch,BYTE PTR [esi+0x55]
  411a36:	mov    ecx,0xf4cffefe
  411a3b:	jne    0x411a93
  411a3d:	jmp    0x7c1:0x66285472
  411a44:	add    BYTE PTR [eax],al
  411a46:	lods   eax,DWORD PTR ds:[esi]
  411a47:	rcl    BYTE PTR [ecx],1
  411a49:	adc    BYTE PTR [edi+0x9],ah
  411a4c:	stc    
  411a4d:	std    
  411a4e:	jp     0x411a84
  411a50:	and    eax,DWORD PTR [ebx-0x4f190c75]
  411a56:	xor    al,0xfa
  411a58:	lods   eax,DWORD PTR ds:[esi]
  411a59:	sub    bh,al
  411a5b:	jae    0x411a2c
  411a5d:	mov    eax,0x7823663c
  411a62:	jae    0x411a50
  411a64:	call   0x2caf:0xf3ec6b2a
  411a6b:	repz jne 0x411a69
  411a6e:	ror    DWORD PTR [eax+0x4e],1
  411a71:	push   ss
  411a72:	ja     0x411aa8
  411a74:	fld    TBYTE PTR [edi-0x2e48413c]
  411a7a:	mov    ecx,0xbdefec67
  411a7f:	(bad)  
  411a80:	shr    bl,cl
  411a82:	xor    DWORD PTR ds:0xfd02c8ea,esi
  411a88:	test   al,0xf8
  411a8a:	cwde   
  411a8b:	xchg   DWORD PTR [edi+0x18],ebx
  411a8e:	mov    bh,0xdf
  411a90:	test   BYTE PTR [edx],0x37
  411a93:	xor    al,0x34
  411a95:	jge    0x411a27
  411a97:	inc    edx
  411a98:	pop    ebx
  411a99:	mov    edi,0x439cbf2c
  411a9e:	push   edi
  411a9f:	inc    ebx
  411aa0:	out    dx,eax
  411aa1:	inc    edx
  411aa2:	mov    ebp,0x2f7cf280
  411aa7:	mov    ebp,0xf82d
  411aac:	lods   eax,DWORD PTR ds:[esi]
  411aad:	jl     0x411a7d
  411aaf:	inc    edx
  411ab0:	push   edi
  411ab1:	cmp    ebp,edi
  411ab3:	inc    edx
  411ab4:	mov    edi,0xfb76ee78
  411ab9:	aas    
  411aba:	popa   
  411abb:	jg     0x411af9
  411abd:	icebp  
  411abe:	dec    ebx
  411abf:	sub    ebx,eax
  411ac1:	mov    bh,0x42
  411ac3:	sub    ch,BYTE PTR [ecx]
  411ac5:	repnz and edi,DWORD PTR [edi+0x28]
  411ac9:	repz add DWORD PTR [esi],esi
  411acc:	dec    esi
  411acd:	xor    al,0x1
  411acf:	jmp    0xe9c81408
  411ad4:	pop    edi
  411ad5:	repnz cld 
  411ad7:	in     eax,0x34
  411ad9:	xor    al,0x1
  411adb:	add    DWORD PTR [esi],esi
  411add:	out    dx,al
  411ade:	cld    
  411adf:	push   cs
  411ae0:	std    
  411ae1:	cld    
  411ae2:	mov    edi,0x888734f1
  411ae7:	or     eax,0x98f9d5ba
  411aec:	mov    bl,0x70
  411aee:	or     eax,0x5487ebe9
  411af3:	pop    ebp
  411af4:	test   al,0xbe
  411af6:	pop    esi
  411af7:	cmc    
  411af8:	mov    ch,0xee
  411afa:	rcl    esi,0x2f
  411afd:	xor    al,0x74
  411aff:	xor    esi,DWORD PTR [edx]
  411b01:	jo     0x411b0c
  411b03:	jb     0x411b3c
  411b05:	mov    ebp,0x7d29d541
  411b0a:	sbb    ecx,ebx
  411b0c:	sbb    ebp,edx
  411b0e:	jmp    0x62411b56
  411b13:	repnz cld 
  411b15:	ins    DWORD PTR es:[edi],dx
  411b16:	hlt    
  411b17:	fs inc eax
  411b19:	jb     0x411b52
  411b1b:	mov    ebp,0xe433fd71
  411b20:	mov    ch,BYTE PTR [edi]
  411b22:	jae    0x411adc
  411b24:	fdivr  st,st(5)
  411b26:	inc    edi
  411b27:	icebp  
  411b28:	jbe    0x411b17
  411b2a:	jecxz  0x411b21
  411b2c:	mov    BYTE PTR [ebx+eax*2],dl
  411b2f:	mov    DWORD PTR [esi+0x59dc24ef],ecx
  411b35:	popw   ds
  411b37:	repnz mov BYTE PTR [eax+esi*1-0x441e8143],bh
  411b3f:	ja     0x411b4e
  411b41:	(bad)  
  411b42:	out    dx,al
  411b43:	cmp    BYTE PTR [edx+0x46741800],cl
  411b49:	add    al,0xe
  411b4b:	xor    eax,0xfb97ffff
  411b50:	or     BYTE PTR [ebx+0x10c1b819],cl
  411b56:	pop    ds
  411b57:	lods   eax,DWORD PTR ds:[esi]
  411b58:	adc    BYTE PTR [eax+0x3202500f],dh
  411b5e:	dec    esi
  411b5f:	cld    
  411b60:	pop    esi
  411b61:	pop    ebx
  411b62:	push   ebp
  411b63:	push   edx
  411b64:	pop    ebp
  411b65:	ret    0x350e
  411b68:	push   esi
  411b69:	mov    esi,DWORD PTR [edx]
  411b6b:	mov    eax,0x2bd0ce8
  411b70:	cld    
  411b71:	jne    0x411b61
  411b73:	imul   esi,DWORD PTR [ebp-0xc],0x305d0000
  411b7a:	sti    
  411b7b:	xor    dh,ch
  411b7d:	dec    edi
  411b7e:	mov    ds:0x8018e1e7,al
  411b83:	ror    BYTE PTR [edx],0x40
  411b86:	cld    
  411b87:	jne    0x411bfb
  411b89:	sbb    BYTE PTR [ebp-0xc],dh
  411b8c:	loope  0x411b30
  411b8e:	or     bh,bh
  411b90:	pop    ebx
  411b91:	lock in al,0x53
  411b94:	loope  0x411bae
  411b96:	sti    
  411b97:	mov    dh,BYTE PTR [esi+0x4f]
  411b9a:	jbe    0x411b83
  411b9c:	mov    eax,ds:0xcd8a5e18
  411ba1:	cld    
  411ba2:	leave  
  411ba3:	ret    0x3492
  411ba6:	xchg   al,al
  411ba8:	imul   ebp,ebx,0xffffff87
  411bab:	add    ebp,ecx
  411bad:	lahf   
  411bae:	adc    BYTE PTR [eax+0x5c],al
  411bb1:	adc    DWORD PTR [eax+0x34d8ec0],eax
  411bb7:	mov    ecx,DWORD PTR [esi+0x4c448dec]
  411bbd:	inc    esp
  411bbe:	mov    BYTE PTR [ecx],dl
  411bc0:	aaa    
  411bc1:	push   esi
  411bc2:	cmp    eax,0xcf52fd2a
  411bc7:	adc    esi,DWORD PTR [esp+ebx*1-0x5912c4eb]
  411bce:	not    DWORD PTR [ebp-0x54]
  411bd1:	lods   eax,DWORD PTR ds:[esi]
  411bd2:	clc    
  411bd3:	add    al,BYTE PTR [esi]
  411bd5:	jecxz  0x411c09
  411bd7:	pop    ebp
  411bd8:	sbb    ebx,0xbfef
  411bde:	hlt    
  411bdf:	or     al,BYTE PTR [ecx-0x16]
  411be2:	and    BYTE PTR [edx-0x3],dl
  411be5:	cmp    al,BYTE PTR [ebx+0x3874f8f9]
  411beb:	bound  edi,QWORD PTR [ebp+0x53cb603]
  411bf1:	add    BYTE PTR [edi],dh
  411bf3:	ins    DWORD PTR es:[edi],dx
  411bf4:	in     eax,dx
  411bf5:	dec    ebx
  411bf6:	sbb    edx,DWORD PTR [ecx]
  411bf8:	lods   eax,DWORD PTR ds:[esi]
  411bf9:	or     al,0xbc
  411bfb:	sub    ecx,esp
  411bfd:	add    ecx,edi
  411bff:	mov    bh,0x23
  411c01:	(bad)  
  411c02:	mov    eax,0x93744060
  411c07:	fwait
  411c08:	hlt    
  411c09:	inc    DWORD PTR [ebx]
  411c0b:	bound  edx,QWORD PTR [eax+edx*2]
  411c0e:	lods   al,BYTE PTR ds:[esi]
  411c0f:	pop    ss
  411c10:	stc    
  411c11:	push   edx
  411c12:	add    BYTE PTR [eax+0x40],ah
  411c15:	jae    0x411c34
  411c17:	pop    edx
  411c18:	inc    eax
  411c19:	add    edi,esp
  411c1b:	(bad)  
  411c1c:	sti    
  411c1d:	cli    
  411c1e:	or     dh,0x77
  411c21:	imul   DWORD PTR [esi+0x70842948]
  411c27:	dec    ecx
  411c28:	int    0xf5
  411c2a:	icebp  
  411c2b:	loopne 0x411c32
  411c2d:	lea    eax,[ecx]
  411c2f:	or     eax,0xef583ead
  411c34:	clc    
  411c35:	out    0x62,eax
  411c37:	arpl   WORD PTR [ebx],sp
  411c39:	(bad)  
  411c3a:	mov    esp,0x41806234
  411c3f:	push   0x2721
  411c44:	add    bh,BYTE PTR [ebx+0x6931fbac]
  411c4a:	loop   0x411c67
  411c4c:	jg     0x411c3c
  411c4e:	inc    ebx
  411c4f:	and    DWORD PTR es:[ecx+0x3e],ebp
  411c53:	jp     0x411cc7
  411c55:	inc    eax
  411c56:	xor    ebp,DWORD PTR [ebp-0x45a42c8]
  411c5c:	popa   
  411c5d:	shr    DWORD PTR [ebp-0x3507e705],0x3
  411c64:	aaa    
  411c65:	xchg   DWORD PTR [edi+0x4b],ebx
  411c68:	fcom   DWORD PTR [eax]
  411c6a:	adc    DWORD PTR [esi],esp
  411c6c:	jmp    0x6a451c23
  411c71:	cmp    cl,BYTE PTR [edi]
  411c73:	loope  0x411c22
  411c75:	jne    0x411c59
  411c77:	in     al,dx
  411c78:	jp     0x411cba
  411c7a:	jbe    0x411c8f
  411c7c:	enter  0xe668,0x1c
  411c80:	cli    
  411c81:	jmp    0xf4464261
  411c86:	xor    ecx,ecx
  411c88:	jg     0x411c7b
  411c8a:	out    0x3,al
  411c8c:	test   al,0x25
  411c8e:	ret    
  411c8f:	scas   eax,DWORD PTR es:[edi]
  411c90:	cmp    ah,bl
  411c92:	out    0x25,eax
  411c94:	cdq    
  411c95:	out    dx,al
  411c96:	pop    edi
  411c97:	mov    dh,0x3c
  411c99:	mov    ebx,0x37722825
  411c9e:	repnz add ebp,DWORD PTR [ebp+edi*2+0x3bf43dee]
  411ca6:	jmp    0x5c411cae
  411cab:	sysexit 
  411cad:	int    0x69
  411caf:	addr16 into 
  411cb1:	mov    edi,tr5
  411cb4:	jnp    0x411c66
  411cb6:	adc    al,0x48
  411cb8:	add    DWORD PTR [esi-0x79],esi
  411cbb:	adc    dl,BYTE PTR ds:0xfced5681
  411cc1:	mov    si,0x86de
  411cc5:	push   edi
  411cc6:	xchg   DWORD PTR [esi-0x4],eax
  411cc9:	fst    QWORD PTR [eax]
  411ccb:	cmp    ch,cl
  411ccd:	push   cs
  411cce:	push   edx
  411ccf:	out    dx,al
  411cd0:	cld    
  411cd1:	jb     0x411d26
  411cd3:	mov    eax,0xb91db5fc
  411cd8:	fdivr  DWORD PTR [ebp-0x22bc44ef]
  411cde:	lea    esi,[edx]
  411ce0:	mov    BYTE PTR [esi],ch
  411ce2:	cli    
  411ce3:	(bad)  
  411ce4:	mov    edi,0x888734ed
  411ce9:	add    eax,0xe80dd9b4
  411cee:	xor    al,0x34
  411cf0:	rep lods al,BYTE PTR ds:[esi]
  411cf2:	call   0xebd86d2b
  411cf7:	mov    edx,0xb1cbe17e
  411cfc:	mov    gs,ecx
  411cfe:	xor    al,0x34
  411d00:	xor    BYTE PTR [ecx-0x781601c1],ch
  411d06:	adc    ch,dh
  411d08:	cld    
  411d09:	bound  esp,QWORD PTR [eax+edi*4-0xd]
  411d0d:	push   ebp
  411d0e:	add    BYTE PTR [eax],al
  411d10:	shr    DWORD PTR [edx+0x6434e901],1
  411d16:	cmp    bh,0x34
  411d19:	push   0x31d2625f
  411d1e:	stos   BYTE PTR es:[edi],al
  411d1f:	jmp    0x1c425d58
  411d24:	jae    0x411d3e
  411d26:	cld    
  411d27:	sahf   
  411d28:	inc    esp
  411d29:	out    dx,al
  411d2a:	mov    ch,BYTE PTR [edi]
  411d2c:	aaa    
  411d2d:	adc    eax,eax
  411d2f:	pusha  
  411d30:	test   eax,0x90008839
  411d35:	dec    esp
  411d36:	sbb    BYTE PTR [ebx+0x750edc66],cl
  411d3c:	jo     0x411daa
  411d3e:	inc    esp
  411d3f:	add    al,0x7d
  411d41:	sub    al,0x37
  411d43:	dec    ebp
  411d44:	dec    edx
  411d45:	sahf   
  411d46:	or     bh,dh
  411d48:	mov    gs,ebp
  411d4a:	cld    
  411d4b:	call   FWORD PTR [eax]
  411d4d:	xor    DWORD PTR [esi+0x10],esi
  411d50:	popf   
  411d51:	sar    esp,1
  411d53:	mov    ch,BYTE PTR [ecx+0x49]
  411d56:	push   esp
  411d57:	(bad)  
  411d58:	pop    ecx
  411d59:	sbb    BYTE PTR [ebp-0x18862c40],al
  411d5f:	and    DWORD PTR [ebp-0x397502f1],ebx
  411d65:	in     al,dx
  411d66:	repz ror DWORD PTR [esi],0x31
  411d6a:	or     DWORD PTR [eax],eax
  411d6c:	shr    ch,cl
  411d6e:	jg     0x411d90
  411d70:	fimul  WORD PTR [ebx+0xe]
  411d73:	add    DWORD PTR [eax],0xfb182f00
  411d79:	lock fldcw WORD PTR [edx+0x44]
  411d7d:	add    al,0x35
  411d7f:	xor    al,0x80
  411d81:	fisubr WORD PTR es:[ebx-0x3a]
  411d85:	mov    ecx,DWORD PTR [ecx-0x2601dbe1]
  411d8b:	adc    BYTE PTR [edi+0x754a23f0],al
  411d91:	xchg   esp,esi
  411d93:	or     ebp,DWORD PTR [ebx+0x8]
  411d96:	jns    0x411da2
  411d98:	mov    ecx,0xfc384dc6
  411d9d:	adc    eax,0x3ce646
  411da2:	adc    eax,0x8a5d8930
  411da7:	mov    ebx,0x3f120fbc
  411dac:	add    al,BYTE PTR [eax]
  411dae:	aaa    
  411daf:	fist   DWORD PTR [ecx+0x796436f]
  411db5:	xor    BYTE PTR [edi],dh
  411db7:	fild   DWORD PTR [eax]
  411db9:	mov    ebp,DWORD PTR [eax]
  411dbb:	(bad)  
  411dbc:	into   
  411dbd:	pop    ss
  411dbe:	mov    esi,0x388afd12
  411dc3:	push   edx
  411dc4:	into   
  411dc5:	sbb    ebp,DWORD PTR [esi+0x7732fca2]
  411dcb:	popa   
  411dcc:	push   eax
  411dcd:	jmp    0xa6a4:0xffe05e9a
  411dd4:	mov    eax,DWORD PTR [esi+0x2f]
  411dd7:	jae    0x1ddc
  411ddc:	test   DWORD PTR ds:0xa8c2c804,0x1972890c
  411de6:	sub    eax,0x2012ffa7
  411deb:	mov    bl,BYTE PTR [edx-0x27]
  411dee:	test   BYTE PTR [edi-0x9fa6c0],bh
  411df4:	call   0xb24fa9d6
  411df9:	outs   dx,BYTE PTR ds:[esi]
  411dfa:	hlt    
  411dfb:	mov    dh,BYTE PTR [ecx]
  411dfd:	fiadd  WORD PTR [ebx-0x78]
  411e00:	aas    
  411e01:	push   esi
  411e02:	rol    BYTE PTR [ebx],1
  411e04:	mov    esi,0x708b0495
  411e09:	in     eax,0x8d
  411e0b:	inc    edi
  411e0c:	das    
  411e0d:	iretw  
  411e0f:	or     edi,DWORD PTR [esi-0x74eeeb]
  411e15:	aam    0x89
  411e17:	enter  0xf2b,0xb6
  411e1b:	mov    eax,gs
  411e1d:	or     al,0xb6
  411e1f:	xor    BYTE PTR [edi+0xd],0xb1
  411e23:	(bad)  
  411e24:	and    cl,BYTE PTR ds:0x34373ffb
  411e2a:	addr16 inc edi
  411e2c:	sub    al,0xbf
  411e2e:	and    eax,0x5f323720
  411e33:	shl    BYTE PTR [eax],1
  411e35:	mov    edi,0xe8dc2ba3
  411e3a:	and    DWORD PTR [edx],0xffffffad
  411e3d:	in     al,dx
  411e3e:	and    al,BYTE PTR gs:[eax]
  411e41:	add    bl,cl
  411e43:	ret    
  411e44:	pop    edi
  411e45:	(bad)  
  411e46:	and    al,0x29
  411e48:	jmp    0xb5ad:0xdb341703
  411e4f:	hlt    
  411e50:	cmp    dh,BYTE PTR [ebx-0x4be5893d]
  411e56:	mov    ebx,0xe0d70a6e
  411e5b:	(bad)  [ebx-0x17]
  411e5e:	sbb    bl,ch
  411e60:	inc    bx
  411e62:	test   BYTE PTR [eax+0x409d03c0],al
  411e68:	xchg   edi,eax
  411e69:	sub    esi,DWORD PTR [ebp-0x4adddc22]
  411e6f:	push   0x6ebc03fa
  411e74:	(bad)  
  411e75:	xchg   edi,eax
  411e76:	and    bl,dh
  411e78:	gs pop ss
  411e7a:	loop   0x411e66
  411e7c:	add    eax,DWORD PTR [edi]
  411e7e:	aaa    
  411e7f:	xor    al,0xea
  411e81:	mov    cl,dl
  411e83:	pop    edi
  411e84:	jecxz  0x411e14
  411e86:	loope  0x411e46
  411e88:	test   DWORD PTR [edi+0x21e4dfbb],0x1a0cdbb9
  411e92:	mov    cl,0xea
  411e94:	rcl    DWORD PTR [edi+0x1895b938],cl
  411e9a:	mov    ds:0xb82cc3ea,al
  411e9f:	loopne 0x411e5c
  411ea1:	and    DWORD PTR [ebx+0x3d01ea],edi
  411ea7:	add    BYTE PTR [edi+edi*4],bh
  411eaa:	aam    0x62
  411eac:	sub    dl,bl
  411eae:	adc    BYTE PTR [edi+0x2488ea56],bl
  411eb4:	outs   dx,DWORD PTR ds:[esi]
  411eb5:	mov    ebx,0xddfe6219
  411eba:	or     DWORD PTR [edx],edi
  411ebc:	adc    ecx,ebp
  411ebe:	stc    
  411ebf:	xchg   BYTE PTR [esi],dl
  411ec1:	rcr    DWORD PTR es:[esi],0x75
  411ec5:	(bad)  
  411ec6:	retf   0x43ab
  411ec9:	jmp    0x616a:0xdc2f0356
  411ed0:	push   ss
  411ed1:	jmp    0x980:0x32cf2986
  411ed8:	xor    edi,DWORD PTR [ebp+0x253942f1]
  411ede:	rep ins BYTE PTR es:[edi],dx
  411ee0:	cmp    eax,0xe8d33365
  411ee5:	pop    ebx
  411ee6:	or     DWORD PTR [esi],esi
  411ee8:	loopne 0x411e97
  411eea:	ret    
  411eeb:	stos   BYTE PTR es:[edi],al
  411eec:	xor    al,0xe9
  411eee:	push   ss
  411eef:	mov    eax,ds:0x70012a02
  411ef4:	cmp    eax,0xe09dc1af
  411ef9:	mov    esi,0xf12cc54d
  411efe:	inc    ecx
  411eff:	fld    QWORD PTR [edx+ebp*8]
  411f02:	cld    
  411f03:	jmp    0xa1cb4ecb
  411f08:	enter  0xc3be,0x2
  411f0c:	add    BYTE PTR [eax],al
  411f0e:	and    eax,0x1b31e984
  411f13:	jmp    0xd6f9:0x736337fc
  411f1a:	push   edi
  411f1b:	shr    DWORD PTR es:[edi],0xf9
  411f1f:	xor    al,0x1
  411f21:	add    BYTE PTR [ebx],bh
  411f23:	mov    bh,0xe8
  411f25:	add    DWORD PTR [edx-0x61fffe17],0xa78b56a0
  411f2f:	lods   al,BYTE PTR ds:[esi]
  411f30:	xchg   eax,edi
  411f32:	or     ebp,DWORD PTR [eax]
  411f34:	or     eax,DWORD PTR [edi+ebx*4-0x2cfffecb]
  411f3b:	sti    
  411f3c:	int3   
  411f3d:	cmp    eax,0x1b149e
  411f42:	popa   
  411f43:	mov    esp,0x355e00af
  411f48:	mov    BYTE PTR [ebp+0x52],al
  411f4b:	mov    al,0xdc
  411f4d:	add    edi,edx
  411f4f:	icebp  
  411f50:	or     BYTE PTR [ebp+0x3f],dh
  411f53:	lods   al,BYTE PTR ds:[esi]
  411f54:	dec    edi
  411f55:	call   0x3c6c66
  411f5a:	xchg   ebp,eax
  411f5b:	sub    eax,0xb101db85
  411f60:	xchg   ebx,eax
  411f61:	add    BYTE PTR [esi],cl
  411f63:	xor    eax,0x35067d80
  411f68:	jne    0x411fa2
  411f6a:	inc    ecx
  411f6b:	ret    0x8d04
  411f6e:	mov    ebx,DWORD PTR ds:0xfffe
  411f74:	push   ecx
  411f75:	sbb    eax,0x1451f4cc
  411f7a:	test   edi,edi
  411f7c:	retf   0x883d
  411f7f:	xlat   BYTE PTR ds:[ebx]
  411f80:	push   ebp
  411f81:	inc    eax
  411f82:	in     al,0x3c
  411f84:	fmul   DWORD PTR [eax-0x5]
  411f87:	(bad)  
  411f88:	pop    ebx
  411f89:	sbb    eax,0x31c1fffe
  411f8e:	add    DWORD PTR [eax],eax
  411f90:	into   
  411f91:	mov    cl,0xfb
  411f93:	je     0x411f56
  411f95:	mov    ebp,0xc28d8bd3
  411f9a:	test   eax,ebp
  411f9c:	aaa    
  411f9d:	add    DWORD PTR ds:0x16d98ffe,ebx
  411fa3:	(bad)  
  411fa4:	cwde   
  411fa5:	rcl    BYTE PTR gs:[ebx],0x4c
  411fa9:	xchg   edx,eax
  411faa:	call   0xb24f:0x359ab445
  411fb1:	sbb    eax,0xfaa4fd5
  411fb6:	adc    eax,0xd7c27732
  411fbb:	and    al,0x37
  411fbd:	fild   DWORD PTR [edi+edi*4+0xfab0aeb]
  411fc4:	stos   BYTE PTR es:[edi],al
  411fc5:	sbb    eax,0x91bc4fe5
  411fca:	mov    ch,0xfe
  411fcc:	and    al,BYTE PTR [edi]
  411fce:	idiv   DWORD PTR [edi]
  411fd0:	aaa    
  411fd1:	pop    esi
  411fd2:	dec    ecx
  411fd3:	or     esi,DWORD PTR [edx+0x199a1a]
  411fd9:	add    BYTE PTR [ebp+0x206128d1],bl
  411fdf:	jg     0x411ffd
  411fe1:	test   bh,dh
  411fe3:	add    DWORD PTR [edx],ecx
  411fe5:	adc    DWORD PTR [edi-0x23],0x27
  411fe9:	add    DWORD PTR [ebp+ebx*1-0x76],eax
  411fed:	mov    edi,0x178dd983
  411ff2:	or     al,0x8
  411ff4:	cmp    BYTE PTR [ebx+ebp*1-0x23],0x99
  411ff9:	add    eax,0xf6a04584
  411ffe:	call   0x8100f041
  412003:	xchg   edi,eax
  412004:	mov    bh,0xc8
  412006:	cmc    
  412007:	in     eax,0x0
  412009:	push   ebp
  41200a:	mov    esp,0xcfe38039
  41200f:	pop    edx
  412010:	xor    DWORD PTR [ebx],ecx
  412012:	lods   al,BYTE PTR ds:[esi]
  412013:	enter  0x8b0c,0x2e
  412017:	xor    al,0x6f
  412019:	int3   
  41201a:	inc    esp
  41201b:	xor    DWORD PTR [ebx+ecx*4],0x23
  41201f:	cmp    al,0x5f
  412021:	add    eax,0x90f674ac
  412026:	hlt    
  412027:	cmp    ebx,DWORD PTR [edx+0x670bfb6]
  41202d:	clc    
  41202e:	mov    bl,0xf4
  412030:	cmp    eax,0x620b440c
  412035:	mov    edi,0xa8f4454
  41203a:	pop    edi
  41203b:	loop   0x411fd1
  41203d:	push   ds
  41203e:	add    BYTE PTR [eax],al
  412040:	imul   edi,DWORD PTR [ebp-0x44cf17d2],0x23dd90b2
  41204a:	ins    DWORD PTR es:[edi],dx
  41204b:	cmp    al,BYTE PTR [ecx-0x50]
  41204e:	inc    esi
  41204f:	add    esi,DWORD PTR [edi]
  412051:	xor    al,0x5f
  412053:	(bad)  
  412054:	adc    al,0x40
  412056:	popa   
  412057:	ret    0xbb24
  41205a:	in     al,dx
  41205b:	mov    dh,BYTE PTR [eax+0x4c]
  41205e:	jno    0x412022
  412060:	inc    eax
  412061:	mov    ebx,0x48608aec
  412066:	popa   
  412067:	ret    0xbb3c
  41206a:	in     al,dx
  41206b:	mov    bh,BYTE PTR [eax+0x40]
  41206e:	addr16 sub al,0x58
  412071:	test   DWORD PTR [edi+0x43],esp
  412074:	push   eax
  412075:	test   BYTE PTR [ebx-0x3bbdce2],dl
  41207b:	ret    
  41207c:	lock mov ecx,0x40288ae4
  412082:	addr16 inc edi
  412084:	sub    al,0xb9
  412086:	mov    es,WORD PTR [esi]
  412088:	pop    es
  412089:	and    ebp,DWORD PTR [edx]
  41208b:	sub    cl,BYTE PTR [edx+ebx*2]
  41208e:	fidiv  DWORD PTR [ebp-0x23fe189f]
  412094:	les    eax,FWORD PTR [eax+0x41]
  412097:	jmp    0x6a4a9149
  41209c:	(bad)  
  41209d:	cmp    al,BYTE PTR [eax-0x3e505c5a]
  4120a3:	pop    ebp
  4120a4:	add    BYTE PTR [eax],al
  4120a6:	xchg   esi,eax
  4120a7:	in     eax,0x33
  4120a9:	pop    esp
  4120aa:	fnstenv [esi]
  4120ac:	cld    
  4120ad:	cmp    al,0x27
  4120af:	fadd   QWORD PTR ds:0xfce62ac3
  4120b5:	jmp    FWORD PTR [edi-0x5f51f690]
  4120bb:	cs mov dh,al
  4120be:	and    esp,eax
  4120c0:	cli    
  4120c1:	sahf   
  4120c2:	dec    edx
  4120c3:	xor    bh,BYTE PTR [ebx-0x1f]
  4120c6:	scas   eax,DWORD PTR es:[edi]
  4120c7:	mov    ah,BYTE PTR ds:0x88f0aff9
  4120cd:	xor    al,0x27
  4120cf:	fdivr  st(4),st
  4120d1:	sub    DWORD PTR [edx],0xffffffe6
  4120d4:	mov    BYTE PTR [ecx-0x48],bh
  4120d7:	loopne 0x41214f
  4120d9:	aaa    
  4120da:	lea    esi,[edx]
  4120dc:	jmp    0xfd276bb2
  4120e1:	fs jae 0x412145
  4120e4:	add    eax,0xffdb0b08
  4120e9:	sbb    DWORD PTR [ebx-0x50],esi
  4120ec:	sar    DWORD PTR [ebp+0x5219bb38],0x3b
  4120f3:	sub    ecx,0xfce62ab9
  4120f9:	cli    
  4120fa:	je     0x412082
  4120fc:	pop    ebx
  4120fd:	ret    0xd0bf
  412100:	pop    esi
  412101:	sub    edi,DWORD PTR [ebx]
  412103:	xor    al,0x56
  412105:	bound  esp,QWORD PTR [edi]
  412107:	test   BYTE PTR [eax-0x49],dl
  41210a:	add    BYTE PTR [eax],al
  41210c:	mov    ds:0xe2002d4d,eax
  412111:	xor    DWORD PTR [ecx],eax
  412113:	push   0xffffffc6
  412115:	dec    eax
  412116:	xor    eax,0xfcf310bc
  41211b:	xor    ah,BYTE PTR ds:0x99fc5db9
  412121:	fidiv  WORD PTR [edx+edx*1+0x5e]
  412125:	xor    BYTE PTR [eax+0xb4345f0],cl
  41212b:	test   bl,dl
  41212d:	xor    DWORD PTR [ecx],eax
  41212f:	add    BYTE PTR ds:0x5e10d106,al
  412135:	xor    BYTE PTR [eax+0x56],dl
  412138:	sbb    eax,0xc953019a
  41213d:	mov    esi,0xd960c718
  412142:	cld    
  412143:	call   FWORD PTR [esi+0x48]
  412146:	jne    0x412150
  412148:	leave  
  412149:	and    BYTE PTR [ebp-0x62528640],al
  41214f:	add    BYTE PTR [esi+0x31],bl
  412152:	push   eax
  412153:	push   esi
  412154:	sub    eax,0xc953019a
  412159:	mov    ebp,0x3943ff18
  41215e:	cld    
  41215f:	xlat   BYTE PTR ds:[ebx]
  412160:	mov    ds:0x91840b71,eax
  412165:	xor    DWORD PTR [ecx],eax
  412167:	add    BYTE PTR [ecx+0x23ff18be],cl
  41216d:	ins    DWORD PTR es:[edi],dx
  41216e:	or     al,0x40
  412170:	add    BYTE PTR [eax],al
  412172:	push   ds
  412173:	dec    eax
  412174:	jbe    0x41217e
  412176:	test   DWORD PTR [esi],eax
  412178:	and    DWORD PTR [esi],edx
  41217a:	into   
  41217b:	xor    BYTE PTR [edx-0x2cb815a3],cl
  412181:	pop    ecx
  412182:	gs jns 0x412190
  412185:	mov    bh,0x90
  412187:	ss hlt 
  412189:	fnstenv [edi]
  41218b:	xchg   ebx,eax
  41218c:	xchg   DWORD PTR [ebp+0x2f],ecx
  41218f:	mov    edi,0xd9df830e
  412194:	xchg   esp,eax
  412195:	or     BYTE PTR [edx+eax*2-0x4ed98b0c],dh
  41219c:	loopne 0x412188
  41219e:	das    
  41219f:	push   esp
  4121a0:	mov    esi,0x8de31d1f
  4121a5:	pop    ebp
  4121a6:	push   ebx
  4121a7:	jae    0x412148
  4121a9:	mov    cl,bh
  4121ab:	int3   
  4121ac:	pop    es
  4121ad:	mov    bh,0xf1
  4121af:	add    al,0x8
  4121b1:	scas   eax,DWORD PTR es:[edi]
  4121b2:	stc    
  4121b3:	(bad)  
  4121b4:	pop    es
  4121b5:	scas   eax,DWORD PTR es:[edi]
  4121b6:	jbe    0x41220b
  4121b8:	test   cl,ah
  4121ba:	cmp    dl,bl
  4121bc:	inc    esi
  4121bd:	sar    BYTE PTR [edi-0x27],0xb0
  4121c1:	dec    BYTE PTR [eax+0xe0b9a61]
  4121c7:	fs mov edi,0xf51cae13
  4121cd:	cmp    bl,BYTE PTR [esi+edi*1+0x3]
  4121d1:	mov    DWORD PTR [eax],ecx
  4121d3:	scas   al,BYTE PTR es:[edi]
  4121d4:	xchg   edx,eax
  4121d5:	pop    ss
  4121d6:	add    BYTE PTR [eax],al
  4121d8:	dec    eax
  4121d9:	fucomip st,st(4)
  4121db:	dec    dl
  4121dd:	or     dh,BYTE PTR [ebp+edx*2-0xf720c8]
  4121e4:	dec    edx
  4121e5:	sbb    eax,0x64373ff5
  4121ea:	ret    0x5cfb
  4121ed:	push   cs
  4121ee:	xchg   ecx,eax
  4121ef:	add    ebx,DWORD PTR [esi+eax*4-0x6e]
  4121f3:	adc    ebp,DWORD PTR [ecx-0x7b]
  4121f6:	nop
  4121f7:	hlt    
  4121f8:	or     BYTE PTR [ebx],ah
  4121fa:	ficomp WORD PTR [ebx+eiz*1-0x5f]
  4121fe:	or     eax,0x17f182ff
  412203:	adc    al,0xfb
  412205:	xor    al,0xfa
  412207:	ret    
  412208:	call   0x8158c7bb
  41220d:	sub    BYTE PTR [edi-0x15c309b4],0xb0
  412214:	mov    ebp,0xc02067d0
  412219:	test   DWORD PTR [ecx-0x11e7ab7a],ebx
  41221f:	add    esp,DWORD PTR [ecx+0x27]
  412222:	hlt    
  412223:	ror    DWORD PTR [ecx],0x1d
  412226:	pop    ebp
  412227:	lock es jg 0x412298
  41222b:	mov    edi,0x2c3a3054
  412230:	into   
  412231:	test   al,0xcb
  412233:	sbb    dh,BYTE PTR [esp+esi*8+0x694fc93e]
  41223a:	(bad)  
  41223b:	xchg   ecx,eax
  41223c:	add    BYTE PTR [eax],al
  41223e:	cmp    eax,0x79f42daf
  412243:	sub    BYTE PTR [edx-0x7a],bh
  412246:	js     0x41222b
  412248:	adc    BYTE PTR [edi+ebx*2],al
  41224b:	mov    WORD PTR [ebp-0x6d509ee6],?
  412251:	sbb    BYTE PTR [ecx+0x68],0xd8
  412255:	adc    ebx,0x2f
  412258:	jmp    0x4f0b:0xf5e33e8f
  41225f:	sub    eax,0xcf391a34
  412264:	loope  0x4121f4
  412266:	jnp    0x412294
  412268:	mov    ebx,0x5bf4372b
  41226d:	sbb    cl,BYTE PTR [ecx+0x1910eacc]
  412273:	jecxz  0x412219
  412275:	fimul  WORD PTR [ebx-0x44bf47b8]
  41227b:	addr16 push es
  41227d:	or     BYTE PTR [edi],cl
  41227f:	jno    0x412282
  412281:	jge    0x4122a0
  412283:	loop   0x412236
  412285:	call   0x9dcf50ab
  41228a:	or     BYTE PTR [edi],ch
  41228c:	jmp    0xfd23933a
  412291:	(bad)  [edx+eax*4+0x5b]
  412295:	bound  edx,QWORD PTR [edi]
  412297:	cmp    BYTE PTR [edi-0x3ed8cb27],0xa9
  41229e:	xor    edi,DWORD PTR [ecx]
  4122a0:	shr    DWORD PTR [edi],0x0
  4122a3:	add    cl,dh
  4122a5:	loop   0x412266
  4122a7:	push   0x3f
  4122a9:	hlt    
  4122aa:	ret    
  4122ab:	sub    dh,BYTE PTR [ebx]
  4122ad:	ss mov cl,0xe8
  4122b0:	sti    
  4122b1:	mov    ch,0xe
  4122b3:	test   eax,0xe10175f5
  4122b8:	in     al,0x33
  4122ba:	rcr    BYTE PTR [edx+edi*4],0xce
  4122be:	add    ch,0x23
  4122c1:	mov    ah,0xed
  4122c3:	ins    DWORD PTR es:[edi],dx
  4122c4:	xor    esi,DWORD PTR [ecx+eax*1]
  4122c7:	sbb    ah,BYTE PTR [ebp+0x4e998889]
  4122cd:	imul   eax,DWORD PTR ds:0x808623da,0x21db3ea1
  4122d7:	mov    ah,0x2e
  4122d9:	loop   0x4122d7
  4122db:	(bad)  
  4122dc:	cmp    al,0xad
  4122de:	inc    ebp
  4122df:	lds    esp,FWORD PTR [eax-0x7b]
  4122e2:	and    BYTE PTR [ecx-0x6bee24e2],0x4e
  4122e9:	loop   0x4122e7
  4122eb:	fbstp  TBYTE PTR [eax]
  4122ed:	stos   DWORD PTR es:[edi],eax
  4122ee:	inc    ebp
  4122ef:	add    eax,0x2180870f
  4122f4:	fld    DWORD PTR ds:[ecx]
  4122f7:	xor    al,0x2e
  4122f9:	loop   0x412283
  4122fb:	add    BYTE PTR [esi-0x53],cl
  4122fe:	jo     0x412324
  412300:	(bad)  
  412301:	(bad)  
  412302:	pop    eax
  412303:	and    al,0x2e
  412305:	sub    eax,DWORD PTR [ebp-0x20ffff9f]
  41230b:	xor    eax,0x1f23901
  412310:	and    eax,0x1a35a0f
  412315:	add    dh,cl
  412317:	add    al,dh
  412319:	cvtps2pd xmm5,xmm3
  41231c:	add    DWORD PTR [eax],eax
  41231e:	fdivp  st(5),st
  412320:	pop    ebp
  412321:	or     BYTE PTR [edx-0x2f],cl
  412324:	sti    
  412325:	je     0x412311
  412327:	int    0xfb
  412329:	je     0x4123a5
  41232b:	add    ebp,esp
  41232d:	push   0x8a013575
  412332:	jbe    0x412342
  412334:	add    DWORD PTR ss:[esi+0x3a448e35],ecx
  41233b:	aam    0x4c
  41233d:	mov    DWORD PTR [edx-0x2c],edx
  412340:	sub    al,0xe8
  412342:	push   eax
  412343:	je     0x412340
  412345:	call   DWORD PTR ds:0x3a7c893d
  41234b:	fdiv   QWORD PTR [edi]
  41234d:	sti    
  41234e:	popa   
  41234f:	popa   
  412350:	adc    DWORD PTR [ecx],eax
  412352:	dec    esi
  412353:	xor    eax,0xcd6a74fc
  412358:	lea    ebx,[edx+edi*2-0x63]
  41235c:	sti    
  41235d:	je     0x4123d9
  41235f:	add    ebp,esp
  412361:	or     bl,BYTE PTR [ebp+0x3a8b0135]
  412367:	add    DWORD PTR [ecx],esp
  412369:	cmp    DWORD PTR [edx],0xffffffd4
  41236c:	adc    al,0x0
  41236e:	add    BYTE PTR [eax],al
  412370:	pop    eax
  412371:	mov    eax,ds:0x620e0f20
  412376:	test   BYTE PTR [edi],0x37
  412379:	dec    edi
  41237a:	cmp    edi,edi
  41237c:	adc    bl,cl
  41237e:	lods   eax,DWORD PTR ds:[esi]
  41237f:	cmc    
  412380:	dec    ebp
  412381:	inc    cx
  412383:	mov    WORD PTR [edi+0x35],gs
  412386:	push   es
  412387:	div    DWORD PTR [edx+ecx*1+0x542d69fc]
  41238e:	les    esp,FWORD PTR [ebx]
  412390:	dec    edi
  412391:	fs mov esp,0xa2f64b23
  412397:	mov    dh,BYTE PTR [ebx-0x2f007112]
  41239d:	retf   0x84a2
  4123a0:	neg    DWORD PTR [esi+0xe]
  4123a3:	data16 (bad) 
  4123a5:	cdq    
  4123a6:	ror    BYTE PTR [esi],cl
  4123a8:	mov    dl,0x4a
  4123aa:	add    BYTE PTR [eax],al
  4123ac:	aaa    
  4123ad:	mov    ecx,0x6753838d
  4123b2:	add    eax,0x82793700
  4123b7:	mov    edi,0x389ed123
  4123bc:	clc    
  4123bd:	inc    edx
  4123be:	xchg   edx,eax
  4123bf:	ins    BYTE PTR es:[edi],dx
  4123c0:	mov    edx,0xe757e10e
  4123c5:	js     0x412403
  4123c7:	inc    ebx
  4123c8:	push   ebx
  4123c9:	jecxz  0x41239e
  4123cb:	sub    DWORD PTR [esi+0x683be116],edi
  4123d1:	fistp  QWORD PTR [ecx+edx*1]
  4123d4:	add    BYTE PTR [eax],al
  4123d6:	test   edx,0x713438d
  4123dc:	mov    BYTE PTR [ebx+0x1b],al
  4123df:	(bad)  [eax-0x43110c78]
  4123e5:	(bad)  
  4123e6:	sub    dl,BYTE PTR [edi+0x58373fef]
  4123ec:	leave  
  4123ed:	and    ebp,DWORD PTR [ebx+0x54]
  4123f0:	shl    DWORD PTR [ebx],0x73
  4123f3:	xor    al,0x2b
  4123f5:	rcl    BYTE PTR [esp+eax*4-0x1d],0x3
  4123fa:	aaa    
  4123fb:	xor    al,0x42
  4123fd:	cld    
  4123fe:	lock fisttp WORD PTR [ebx-0x80]
  412402:	enter  0xf68,0xdb
  412406:	jl     0x412420
  412408:	ficom  WORD PTR [ecx-0x205954d4]
  41240e:	inc    esp
  41240f:	xchg   DWORD PTR [edi+0x3e],ebx
  412412:	shr    BYTE PTR [eax+0x1e],1
  412415:	pop    ss
  412416:	loope  0x4123f7
  412418:	scas   al,BYTE PTR es:[edi]
  412419:	fist   WORD PTR [ecx*1+0xb40dfb6]
  412420:	pop    ss
  412421:	pop    ss
  412422:	jl     0x41243c
  412424:	loop   0x412410
  412426:	mov    ebp,0x24df9e0d
  41242b:	imul   BYTE PTR [esi-0x14cabe21]
  412431:	mov    edi,0xbf6f3c54
  412436:	push   esp
  412437:	sbb    cl,ch
  412439:	mov    bh,0x0
  41243b:	add    BYTE PTR [esp+eax*2-0x17],dl
  41243f:	mov    bh,0x54
  412441:	dec    eax
  412442:	out    0x1a,eax
  412444:	dec    edi
  412445:	js     0x412455
  412447:	cld    
  412448:	xor    DWORD PTR [edx-0x2086e8d3],esi
  41244e:	push   0xffffff97
  412450:	adc    al,0x2f
  412452:	jmp    0x3ce0:0x1edf3b8f
  412459:	int3   
  41245a:	sbb    ecx,DWORD PTR [ebx+0x59]
  41245d:	fbld   TBYTE PTR [eax+0x3b]
  412460:	pop    ebp
  412461:	xor    bl,al
  412463:	cmp    cl,BYTE PTR [ecx+0x68]
  412466:	into   
  412467:	neg    DWORD PTR [eax+0x49]
  41246a:	ja     0x412482
  41246c:	cmp    DWORD PTR [ecx+0xb10fd01],esi
  412472:	jmp    0xfd1fa978
  412477:	data16 mov al,0x12
  41247a:	and    DWORD PTR [ecx+0x35],edx
  41247d:	jecxz  0x41247b
  41247f:	push   esi
  412480:	sub    DWORD PTR [ebx+0x25],esp
  412483:	add    DWORD PTR [ebx-0x23],ebx
  412486:	out    dx,eax
  412487:	inc    esi
  412488:	sub    esi,ebx
  41248a:	jne    0x412491
  41248c:	jecxz  0x412464
  41248e:	repnz cmp ecx,DWORD PTR [ecx-0x22]
  412492:	pop    esp
  412493:	(bad)  
  412494:	mov    esi,0x177258f1
  412499:	cmp    BYTE PTR [edi-0x7776cb1b],0x5
  4124a0:	add    BYTE PTR [eax],al
  4124a2:	mov    ch,0xd2
  4124a4:	stc    
  4124a5:	bound  esi,QWORD PTR [ebx-0x4e]
  4124a8:	imul   ebp
  4124aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ab:	sub    esp,DWORD PTR [edi-0x18]
  4124ae:	or     al,0x49
  4124b0:	sti    
  4124b1:	test   BYTE PTR [edx-0x36],0xff
  4124b5:	mov    edx,0x44e6a9f4
  4124ba:	test   BYTE PTR [edi-0x2d493278],0xf9
  4124c1:	(bad)  
  4124c2:	hlt    
  4124c3:	mov    cl,0xf7
  4124c5:	in     eax,0xa6
  4124c7:	sub    esp,DWORD PTR [edi-0x17]
  4124ca:	dec    esp
  4124cb:	(bad)  
  4124cd:	mov    esi,0xfaffca22
  4124d2:	hlt    
  4124d3:	test   eax,0x84f60ce6
  4124d8:	push   edx
  4124d9:	adc    esi,DWORD PTR [edx+ecx*2]
  4124dc:	add    dl,BYTE PTR [ecx-0x69032089]
  4124e2:	test   BYTE PTR [edx+edx*2+0x24a3303],0x0
  4124ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124eb:	(bad)  
  4124ec:	std    
  4124ed:	(bad)  
  4124ee:	mov    ecx,0xddc03274
  4124f3:	mov    bl,0xd
  4124f5:	rcl    al,0xf3
  4124f8:	cld    
  4124f9:	movsx  esi,BYTE PTR [ecx]
  4124fc:	rol    BYTE PTR [ebx+0x43c6720b],0x1e
  412503:	fisubr WORD PTR [ecx+eax*1-0x72a30000]
  41250a:	xchg   esp,ebp
  41250c:	(bad)  
  41250d:	or     al,0x24
  41250f:	add    cl,BYTE PTR [esi]
  412511:	xor    dl,BYTE PTR [eax+0x33]
  412514:	inc    ebp
  412515:	(bad)
  412519:	stos   DWORD PTR es:[edi],eax
  41251a:	stc    
  41251b:	mov    bl,bh
  41251d:	dec    eax
  41251e:	jg     0x41251a
  412520:	iret   
  412521:	cmp    BYTE PTR [ebx+0x131df38],al
  412527:	mov    edx,DWORD PTR [ecx-0x29c69923]
  41252d:	cmp    BYTE PTR [ebp+0x131cf2c],al
  412533:	push   esi
  412534:	into   
  412535:	dec    eax
  412536:	adc    eax,0xfcf18d88
  41253b:	adc    BYTE PTR [esi+0x21850c32],0x31
  412542:	add    DWORD PTR [eax],eax
  412544:	imul   esi,DWORD PTR [eax+0x17e38d00],0x979c87f
  41254e:	push   ss
  41254f:	fidivr WORD PTR [ecx+0x59c08048]
  412555:	pop    ebp
  412556:	add    BYTE PTR [ecx],al
  412558:	pop    esi
  412559:	xor    DWORD PTR [esi-0x4b9897b],ecx
  41255f:	call   FWORD PTR [esi]
  412561:	adc    ch,dh
  412563:	popa   
  412564:	aaa    
  412565:	retf   
  412566:	add    BYTE PTR [edi+esi*2+0xfe9e47],al
  41256d:	add    dl,cl
  41256f:	stos   BYTE PTR es:[edi],al
  412570:	sub    al,dh
  412572:	adc    ah,cl
  412574:	add    BYTE PTR [ebx+0x7311a227],cl
  41257a:	test   BYTE PTR [eax+0x5622d77b],al
  412580:	adc    eax,0x8314ac4f
  412585:	pushf  
  412586:	out    dx,eax
  412587:	xchg   DWORD PTR ds:0x9e961ffe,edx
  41258d:	inc    DWORD PTR [eax]
  41258f:	dec    edi
  412590:	inc    eax
  412591:	jae    0x4125d1
  412593:	fiadd  DWORD PTR [eax+0x4f]
  412596:	lock lahf 
  412598:	and    BYTE PTR [eax+0x44871b72],cl
  41259e:	jmp    0x412603
  4125a0:	mov    ebx,0x1097aaf7
  4125a5:	dec    edi
  4125a6:	fist   WORD PTR [ecx+0x56c8fe64]
  4125ac:	inc    eax
  4125ad:	jae    0x4125d9
  4125af:	ss retf 
  4125b1:	fndisi(8087 only) 
  4125b3:	mov    DWORD PTR [eax],eax
  4125b5:	mov    esi,DWORD PTR [edx+edi*4-0x7d]
  4125b9:	inc    esp
  4125ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125bb:	mov    edx,0xd5cc5d28
  4125c0:	adc    BYTE PTR [edi+0x4482fdf2],al
  4125c6:	xchg   edx,esi
  4125c8:	dec    edx
  4125c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125ca:	mov    ch,ch
  4125cc:	aam    0xda
  4125ce:	jmp    0x1317ed5
  4125d3:	add    BYTE PTR [eax-0x63],bh
  4125d6:	xor    BYTE PTR [edi+edx*2-0xe],0x90
  4125db:	fsubr  QWORD PTR [eax-0x73]
  4125de:	sbb    al,0x20
  4125e0:	iret   
  4125e1:	xor    ebp,esi
  4125e3:	add    al,0x37
  4125e5:	xor    al,0x6d
  4125e7:	mov    DWORD PTR [eax-0x22],ebp
  4125ea:	xchg   ebx,eax
  4125eb:	adc    edi,eax
  4125ed:	fcom   QWORD PTR [ebx]
  4125ef:	or     BYTE PTR [eax+0x46],al
  4125f2:	and    dh,dh
  4125f4:	clc    
  4125f5:	xor    esi,DWORD PTR [edx]
  4125f7:	shl    DWORD PTR [esi],1
  4125f9:	xor    eax,0x52a003ea
  4125fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ff:	leave  
  412600:	and    DWORD PTR [esi],esi
  412602:	and    dh,BYTE PTR [ecx+0x7ebd6119]
  412608:	jnp    0x4125d2
  41260a:	pop    ss
  41260b:	sbb    dh,BYTE PTR [ebp+0x2899e8dc]
  412611:	mov    bh,0x2a
  412613:	adc    ch,BYTE PTR [eax-0x49]
  412616:	and    edi,esp
  412618:	mov    esp,ecx
  41261a:	xchg   edx,eax
  41261b:	sub    al,0xe9
  41261d:	fistp  DWORD PTR [edi+0x14]
  412620:	sbb    eax,0xaf089de7
  412625:	jns    0x412642
  412627:	pop    ds
  412628:	or     eax,0x62b6e94e
  41262d:	test   eax,0xdbc32c65
  412632:	add    esi,DWORD PTR [ebp+eiz*2+0xf8fb87]
  412639:	add    BYTE PTR [edi+eax*2-0x56],ah
  41263d:	add    esi,DWORD PTR [esp+ebx*8+0x71c002ca]
  412644:	jecxz  0x412611
  412646:	sti    
  412647:	ficom  DWORD PTR [ebp-0x6]
  41264a:	in     eax,0x86
  41264c:	aaa    
  41264d:	mov    edx,0x10b2b1bb
  412652:	sbb    ebx,0x92881c1a
  412658:	jmp    0xefe6:0x1f4ba03
  41265f:	outs   dx,DWORD PTR ds:[esi]
  412660:	cld    
  412661:	pop    ss
  412662:	inc    ebx
  412663:	or     eax,0x7945a6f2
  412668:	xchg   DWORD PTR [esp],esp
  41266b:	jp     0x4126c5
  41266d:	mov    al,ds:0x8b61d2f1
  412672:	xor    al,0x34
  412674:	mov    cl,0xe8
  412676:	icebp  
  412677:	dec    esp
  412678:	add    DWORD PTR [ebx],edx
  41267a:	cmp    ecx,DWORD PTR [esi+0x2]
  41267d:	and    DWORD PTR [edx-0x7b16fe2c],0x8550c034
  412687:	test   BYTE PTR [ecx],0xe9
  41268a:	leave  
  41268b:	sub    DWORD PTR [ecx+0x5],0xc3011aba
  412692:	xor    al,0x26
  412694:	fadd   DWORD PTR [esi-0x1]
  412697:	mov    edx,0xaf34a911
  41269c:	stc    
  41269d:	ins    BYTE PTR es:[edi],dx
  41269e:	add    BYTE PTR [eax],al
  4126a0:	inc    ebp
  4126a1:	addr16 xor eax,0x99086194
  4126a7:	stc    
  4126a8:	hlt    
  4126a9:	ficom  DWORD PTR [esi-0x6d]
  4126ac:	xor    al,0xcf
  4126ae:	adc    BYTE PTR [edi-0x66abfdb],bh
  4126b4:	hlt    
  4126b5:	fiadd  DWORD PTR [ebp+0x5131a029]
  4126bb:	(bad)  
  4126bc:	test   al,0x96
  4126be:	adc    DWORD PTR [ecx-0x11ab7dcc],ebp
  4126c4:	push   0x3d6cf1ae
  4126c9:	pusha  
  4126ca:	in     eax,0x39
  4126cc:	into   
  4126cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126ce:	add    dl,dh
  4126d0:	cmp    BYTE PTR [esi+0x7a3b2911],0x5e
  4126d7:	add    BYTE PTR [ecx+0x5a],dl
  4126da:	mov    edi,0x51a19d5b
  4126df:	push   0x5f
  4126e1:	mov    eax,0x2943e7fc
  4126e6:	sti    
  4126e7:	dec    DWORD PTR [ebp+0x5e6a51a1]
  4126ed:	mov    eax,0x291fe7fc
  4126f2:	sti    
  4126f3:	dec    DWORD PTR [ebp-0x3013785e]
  4126f9:	adc    esp,eax
  4126fb:	add    ebx,DWORD PTR [esi]
  4126fd:	ss push eax
  4126ff:	push   esi
  412700:	dec    ecx
  412701:	pop    ecx
  412702:	mov    ch,0x1e
  412704:	add    BYTE PTR [eax],al
  412706:	xchg   edx,eax
  412707:	inc    ebx
  412708:	sti    
  412709:	mov    ebx,ebx
  41270b:	sub    DWORD PTR [edi+0x65ab66d9],eax
  412711:	add    BYTE PTR [esi],bl
  412713:	pop    ecx
  412714:	les    esi,FWORD PTR [ebx]
  412716:	dec    esi
  412717:	pop    ecx
  412718:	mov    ebp,0xfb4373f4
  41271d:	inc    eax
  41271e:	xchg   BYTE PTR [esi+0x58de0063],dh
  412724:	(bad)  
  412725:	push   eax
  412726:	jbe    0x4126bb
  412728:	arpl   WORD PTR [eax],ax
  41272a:	into   
  41272b:	mov    ebp,0x359e75c0
  412730:	mov    bh,al
  412732:	mov    es,WORD PTR [ebp+edx*1+0x5c]
  412736:	mov    esp,0xb382fcf5
  41273b:	sub    DWORD PTR [ecx],eax
  41273d:	jbe    0x4127bd
  41273f:	pop    eax
  412740:	aas    
  412741:	add    al,0xb8
  412743:	mov    al,0x34
  412745:	add    BYTE PTR [edx],ch
  412747:	fmul   QWORD PTR [edi+edi*8-0x65]
  41274b:	dec    ebp
  41274c:	adc    al,BYTE PTR [eax-0x62]
  41274f:	xor    cl,al
  412751:	push   eax
  412752:	aaa    
  412753:	add    dl,BYTE PTR [esi-0x4f6d53fd]
  412759:	out    0xb6,eax
  41275b:	adc    BYTE PTR ds:0x7bc75c00,al
  412761:	test   BYTE PTR [ebx-0x60],ah
  412764:	adc    esi,edi
  412766:	pop    es
  412767:	repz (bad) 
  412769:	pop    esi
  41276a:	add    BYTE PTR [eax],al
  41276c:	aaa    
  41276d:	retf   
  41276e:	mov    cl,0x5d
  412770:	in     al,dx
  412771:	mov    ds:0xafbc5445,eax
  412776:	test   ebx,esp
  412778:	aas    
  412779:	sbb    al,0xb0
  41277b:	push   edx
  41277c:	loope  0x4127dd
  41277e:	xchg   esp,eax
  41277f:	and    edi,DWORD PTR [edi]
  412781:	ret    
  412782:	test   eax,0x7dcb37a1
  412787:	lds    ecx,FWORD PTR [edi]
  412789:	sbb    eax,0x4718ff66
  41278e:	inc    eax
  41278f:	jae    0x4127c0
  412791:	xor    DWORD PTR [ebp+0x55cb3671],0x0
  412798:	mov    dl,0xb6
  41279a:	in     al,0x7
  41279c:	(bad)  
  41279e:	push   ax
  4127a1:	mov    eax,0x568cc27e
  4127a6:	and    ebx,DWORD PTR [esp+esi*8-0x24]
  4127aa:	sub    eax,0x7d97ccea
  4127af:	jmp    0x412765
  4127b1:	or     BYTE PTR cs:[eax+0x66],dl
  4127b5:	sahf   
  4127b6:	mov    edx,0xf8ef4b8c
  4127bb:	out    0xa,eax
  4127bd:	ins    DWORD PTR es:[edi],dx
  4127be:	add    BYTE PTR [eax],al
  4127c0:	mov    esp,0xd5771810
  4127c5:	retf   0x8400
  4127c8:	ja     0x412828
  4127ca:	call   0x347542b6
  4127cf:	add    eax,0xa5370000
  4127d4:	jmp    0xe2512459
  4127d9:	sbb    esi,ebp
  4127db:	xchg   ebp,eax
  4127dc:	jmp    0xbdab:0xa7add903
  4127e3:	into   
  4127e4:	sbb    eax,0xbffd2643
  4127e9:	sbb    ebx,DWORD PTR [eax+0x34]
  4127ec:	jmp    0x4127f2
  4127ee:	aaa    
  4127ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127f0:	jmp    0xdbb08037
  4127f5:	add    al,0x37
  4127f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127f8:	jmp    0xaad50f3f
  4127fd:	inc    esi
  4127fe:	cmc    
  4127ff:	xor    edx,DWORD PTR [edx-0xc]
  412802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412803:	das    
  412804:	xchg   edx,eax
  412805:	mov    esp,0xacea354b
  41280a:	cmc    
  41280b:	mov    edx,fs
  41280d:	xchg   edi,eax
  41280e:	cs int3 
  412810:	shr    BYTE PTR [eax],1
  412812:	aaa    
  412813:	xor    al,0x8a
  412815:	inc    esp
  412816:	bnd jae 0x412803
  412819:	pop    ebx
  41281a:	xor    eax,0xe89c0160
  41281f:	popa   
  412820:	stos   BYTE PTR es:[edi],al
  412821:	add    ebx,edi
  412823:	or     al,BYTE PTR [edi+0x2a953704]
  412829:	inc    esi
  41282a:	jne    0x412860
  41282c:	ret    0x3703
  41282f:	xor    al,0x6a
  412831:	xor    eax,0x50ab3d8
  412836:	add    BYTE PTR [eax],al
  412838:	addr16 dec edx
  41283a:	jmp    0xbac5a911
  41283f:	mov    bl,0xb9
  412841:	inc    ecx
  412842:	jb     0x412838
  412844:	jo     0x41287a
  412846:	mov    eax,ds:0x130d042
  41284b:	jge    0x412884
  41284d:	dec    esp
  41284e:	add    ecx,ebp
  412850:	xor    al,0xb4
  412852:	addr16 std 
  412854:	inc    ecx
  412855:	inc    eax
  412856:	(bad)  
  412857:	cmc    
  412858:	je     0x412831
  41285a:	pop    ecx
  41285b:	stos   BYTE PTR es:[edi],al
  41285c:	mov    edi,0x1868edaa
  412861:	(bad)  
  412862:	(bad)  
  412863:	call   0x1cc9ab9c
  412868:	imul   eax,DWORD PTR [ecx+0x27c56454],0x67
  41286f:	jmp    0xcf53:0x1c8ad8dd
  412876:	aam    0x55
  412878:	xor    al,0x34
  41287a:	test   DWORD PTR [ecx-0x16584cbf],ebp
  412880:	xor    al,0x34
  412882:	mov    BYTE PTR [edx],ah
  412884:	das    
  412885:	and    al,cl
  412887:	pop    es
  412888:	cli    
  412889:	xor    DWORD PTR [esp+ebx*2],ecx
  41288c:	je     0x41283a
  41288e:	inc    esi
  41288f:	ins    DWORD PTR es:[edi],dx
  412890:	sbb    DWORD PTR [esi-0x69403100],ebx
  412896:	jbe    0x41287e
  412898:	jl     0x41286b
  41289a:	add    ecx,ebp
  41289c:	add    BYTE PTR [eax],al
  41289e:	xor    al,0xcb
  4128a0:	add    ebp,DWORD PTR [edx-0x53]
  4128a3:	xor    bh,ah
  4128a5:	mov    esp,0x89bea937
  4128aa:	cmp    dl,dh
  4128ac:	cld    
  4128ad:	inc    ecx
  4128ae:	xchg   ecx,eax
  4128af:	into   
  4128b0:	add    ch,cl
  4128b2:	cmp    eax,0x9c648e11
  4128b7:	xlat   BYTE PTR ds:[ebx]
  4128b8:	cld    
  4128b9:	push   ds
  4128ba:	sub    al,0x85
  4128bc:	jmp    0x71185da9
  4128c1:	in     eax,0x3d
  4128c3:	out    dx,al
  4128c4:	push   ecx
  4128c5:	add    cl,bh
  4128c7:	lahf   
  4128c8:	add    DWORD PTR [eax],eax
  4128ca:	sahf   
  4128cb:	mov    bl,0xb5
  4128cd:	mov    al,ds:0xe8fb28a8
  4128d2:	jmp    0x4128db
  4128d4:	sti    
  4128d5:	inc    DWORD PTR ds:0xf75904bf
  4128db:	mov    ecx,0xd7ddff0c
  4128e0:	fs clc 
  4128e2:	xor    al,0x30
  4128e4:	add    edi,edi
  4128e6:	jo     0x412922
  4128e8:	pop    eax
  4128e9:	repnz test eax,0x22c08028
  4128ef:	jmp    0xef3c2d5e
  4128f4:	clc    
  4128f5:	push   eax
  4128f6:	sub    ebp,DWORD PTR es:[edx]
  4128f9:	add    BYTE PTR [esi+0x27],bl
  4128fc:	ss call 0x3c6b12
  412902:	add    BYTE PTR [eax],al
  412904:	shr    BYTE PTR [edi+0x70],cl
  412907:	sub    DWORD PTR [ebx-0x56016353],ebp
  41290d:	daa    
  41290e:	dec    esp
  41290f:	inc    DWORD PTR [ebx]
  412911:	outs   dx,BYTE PTR ds:[esi]
  412912:	adc    al,BYTE PTR [eax+0xe]
  412915:	mov    ds:0x26be858d,al
  41291a:	sti    
  41291b:	dec    esi
  41291d:	mov    ecx,0x320e2afa
  412922:	cld    
  412923:	ss jbe 0x4128f7
  412926:	repnz (bad) 
  412928:	jns    0x4128d6
  41292a:	mov    esp,0xbd04d274
  41292f:	jmp    0x4128fe
  412931:	mov    ebx,0x87a95802
  412936:	push   edi
  412937:	leave  
  412938:	sbb    al,0x2c
  41293a:	add    DWORD PTR [ebp+0x45],edx
  41293d:	adc    al,0x81
  41293f:	in     al,dx
  412940:	aaa    
  412941:	mov    ebx,0x9a370004
  412946:	jns    0x412964
  412948:	inc    edi
  412949:	cmc    
  41294a:	sar    bh,0x2
  41294d:	mov    esi,0x58a00f9a
  412952:	clc    
  412953:	mov    edx,?
  412955:	push   es
  412956:	mov    ch,0xfe
  412958:	fs dec edx
  41295a:	inc    esp
  41295b:	or     ebx,DWORD PTR ds:0x73447bcf
  412961:	sbb    ebx,DWORD PTR ds:0xde68832
  412967:	add    BYTE PTR [eax],0x0
  41296a:	(bad)  
  41296c:	add    BYTE PTR [ebp-0x184f190e],cl
  412972:	ret    0xdb0
  412975:	(bad)  
  412976:	mov    bl,0x8b
  412978:	xchg   ebx,eax
  412979:	adc    edx,eax
  41297b:	cmp    BYTE PTR [ecx],ah
  41297d:	out    0xb6,eax
  41297f:	push   0xaa7ffe0d
  412984:	add    BYTE PTR [eax],al
  412986:	aaa    
  412987:	mov    ah,0x80
  412989:	add    DWORD PTR [edi],esi
  41298b:	retf   
  41298c:	jnp    0x4129d2
  41298e:	jmp    0x4129ca
  412990:	sbb    eax,0xd5ddcfd
  412995:	xor    edi,0xffffffde
  412998:	repnz mov WORD PTR [edx-0x259ee781],cs
  41299f:	jne    0x4129ae
  4129a1:	mov    bh,0x15
  4129a3:	retf   
  4129a4:	add    BYTE PTR [eax],al
  4129a6:	push   cs
  4129a7:	in     al,dx
  4129a8:	add    al,BYTE PTR [eax]
  4129aa:	aaa    
  4129ab:	dec    edx
  4129ac:	mov    ds:0xc34837e7,eax
  4129b1:	out    0x87,eax
  4129b3:	jae    0x41295e
  4129b5:	lods   al,BYTE PTR ds:[esi]
  4129b6:	fadd   DWORD PTR ds:0x344abf84
  4129bc:	cmc    
  4129bd:	jle    0x412a02
  4129bf:	int3   
  4129c0:	adc    cl,ah
  4129c2:	xchg   ebx,eax
  4129c3:	aam    0x13
  4129c5:	sbb    cl,BYTE PTR [esi]
  4129c7:	xor    ch,dl
  4129c9:	add    ebx,DWORD PTR ds:0xc67540
  4129cf:	add    ah,ch
  4129d1:	sub    DWORD PTR [ebp-0x3a],0xffffff84
  4129d5:	xor    ebx,0x2f
  4129d8:	mov    ch,0xef
  4129da:	ficomp WORD PTR [ebx]
  4129dc:	or     al,cl
  4129de:	jecxz  0x4129eb
  4129e0:	mov    edi,0xfb79ba6e
  4129e5:	fistp  QWORD PTR [edx]
  4129e7:	pushf  
  4129e8:	mov    eax,ds:0x5f03ea33
  4129ed:	imul   edx,DWORD PTR [ebx+ecx*1+0x7dbaa869],0xffffffeb
  4129f5:	fld    TBYTE PTR [ebp+0x12]
  4129f8:	sub    DWORD PTR [eax+0x3437046c],esi
  4129fe:	outs   dx,DWORD PTR ds:[esi]
  4129ff:	mov    DWORD PTR [ecx+ecx*2+0x2],eax
  412a03:	xlat   BYTE PTR ds:[ebx]
  412a04:	data16 test al,0xab
  412a07:	lods   eax,DWORD PTR ds:[esi]
  412a08:	inc    ecx
  412a09:	loop   0x412a70
  412a0b:	ss inc ecx
  412a0d:	mov    ecx,0x34370450
  412a12:	out    0x9,eax
  412a14:	lods   eax,DWORD PTR ds:[esi]
  412a15:	cli    
  412a16:	bound  esi,QWORD PTR [ecx-0x685cf0d3]
  412a1c:	mov    WORD PTR [edi],?
  412a1e:	sub    DWORD PTR [ebp+0x73],edi
  412a21:	les    ebp,FWORD PTR [edx-0x77]
  412a24:	sub    eax,0x8ee5dd34
  412a29:	sub    BYTE PTR [ebp-0x3f],bl
  412a2c:	lods   al,BYTE PTR ds:[esi]
  412a2d:	fs jne 0x4129f2
  412a30:	xor    al,0x64
  412a32:	cmp    esi,ecx
  412a34:	add    BYTE PTR [eax],al
  412a36:	inc    esp
  412a37:	sub    al,BYTE PTR [ecx]
  412a39:	test   eax,0xddc5b734
  412a3e:	mov    bh,0x93
  412a40:	jbe    0x412a34
  412a42:	dec    ecx
  412a43:	js     0x412a16
  412a45:	jo     0x412a7c
  412a47:	cli    
  412a48:	inc    esi
  412a49:	loop   0x412a7e
  412a4b:	fistp  QWORD PTR [ebx]
  412a4d:	bound  esi,QWORD PTR ds:0xc419460f
  412a53:	inc    eax
  412a54:	mov    BYTE PTR [esp+eiz*2+0x2a68c91e],ch
  412a5b:	push   ebx
  412a5c:	aaa    
  412a5d:	loopne 0x412a93
  412a5f:	dec    edx
  412a60:	daa    
  412a61:	and    BYTE PTR [esi+0x170e3],bh
  412a67:	cli    
  412a68:	sub    BYTE PTR [ebx+eiz*1],ch
  412a6b:	pop    ebp
  412a6c:	sbb    DWORD PTR [eax],esi
  412a6e:	loop   0x412a39
  412a70:	cli    
  412a71:	push   edx
  412a72:	repz sub dl,BYTE PTR [ecx-0x42]
  412a76:	(bad)  
  412a77:	jecxz  0x412acc
  412a79:	mov    dh,0x21
  412a7b:	mov    dh,0xc5
  412a7d:	fnsave [edx+0x77d0592b]
  412a83:	(bad)  
  412a84:	sub    BYTE PTR [ecx+0x2c2ae361],ah
  412a8a:	and    esi,DWORD PTR [esi-0x49e366ba]
  412a90:	ret    
  412a91:	loope  0x412a8c
  412a93:	leave  
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	outs   dx,BYTE PTR ds:[esi]
  412a96:	mov    ah,0x4f
  412a98:	or     cl,ch
  412a9a:	add    BYTE PTR [eax],al
  412a9c:	(bad)  
  412a9d:	jbe    0x412a2d
  412a9f:	and    al,0x4b
  412aa1:	and    DWORD PTR [edi+0x1],0xffffffd8
  412aa5:	mov    edi,0x787f557e
  412aaa:	stc    
  412aab:	inc    ecx
  412aac:	xchg   eax,esp
  412aae:	cld    
  412aaf:	dec    esi
  412ab0:	mov    bh,0x92
  412ab2:	jbe    0x412ab4
  412ab4:	inc    eax
  412ab5:	aas    
  412ab6:	jne    0x412ab0
  412ab8:	xchg   BYTE PTR [edx],ch
  412aba:	call   0xff714cbe
  412abf:	(bad)  
  412ac0:	and    DWORD PTR [esi],edi
  412ac2:	push   esi
  412ac3:	call   0x3c55ee
  412ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ac9:	ficom  WORD PTR [eax+edx*2+0x57]
  412acd:	hlt    
  412ace:	lock (bad) 
  412ad0:	fild   DWORD PTR [esi]
  412ad2:	dec    esp
  412ad3:	call   0x3c56b0
  412ad8:	daa    
  412ad9:	hlt    
  412ada:	hlt    
  412adb:	test   DWORD PTR [esi-0x32],ecx
  412ade:	and    dl,0xa0
  412ae1:	cmp    al,0xfb
  412ae3:	adc    BYTE PTR [ebx-0x58],0xd0
  412ae7:	inc    ebx
  412ae8:	mov    ?,WORD PTR ds:0x211c0774
  412aee:	jmp    0x17789e8
  412af3:	(bad)  
  412af4:	jmp    0x412b49
  412af6:	std    
  412af7:	jmp    DWORD PTR [ecx+0x4e61b62f]
  412afd:	mov    es,WORD PTR ss:[ebp+0x0]
  412b01:	add    dh,bl
  412b03:	xchg   DWORD PTR [edi+edx*4+0x5e],esp
  412b07:	add    DWORD PTR ss:[ebx-0x681b7868],ecx
  412b0e:	repnz cmp al,0xfb
  412b11:	mov    eax,DWORD PTR [ebx+0x24]
  412b14:	test   edi,edi
  412b16:	sub    edx,edi
  412b18:	lea    eax,[ebp-0x72]
  412b1b:	mov    BYTE PTR [eax+eax*1+0x62],ah
  412b1f:	idiv   esp
  412b21:	addr16 pop ds
  412b23:	add    DWORD PTR ss:[eax+0x1348e191],eax
  412b2a:	into   
  412b2b:	xor    eax,0x7237d888
  412b30:	sbb    DWORD PTR cs:[edx+eax*4],ecx
  412b34:	inc    esi
  412b35:	call   0x4206cc
  412b3a:	mov    dl,0x58
  412b3c:	sar    ebp,1
  412b3e:	fmul   DWORD PTR [edx]
  412b40:	mov    ch,0x8c
  412b42:	mov    ah,BYTE PTR [edi+0xe]
  412b45:	dec    al
  412b47:	and    esi,DWORD PTR [eax+0x7e32c0e8]
  412b4d:	je     0x412b0e
  412b4f:	push   esi
  412b50:	xor    ah,bh
  412b52:	js     0x412b88
  412b54:	or     bh,dh
  412b56:	mov    dh,0x3a
  412b58:	add    eax,0x92db37c8
  412b5d:	or     cl,BYTE PTR ds:0xa8aa9de
  412b63:	ret    
  412b64:	jge    0x412baa
  412b66:	add    BYTE PTR [eax],al
  412b68:	and    esi,0xffffffa8
  412b6b:	xor    ch,BYTE PTR [esi+0x5e]
  412b6e:	or     DWORD PTR [ebx],eax
  412b70:	sub    BYTE PTR [eax+0x3f],dl
  412b73:	imul   esi,DWORD PTR ds:0xddc57e21,0x4fc0ddda
  412b7d:	mov    ecx,0xda58fe2a
  412b82:	push   edx
  412b83:	mov    bh,0xa7
  412b85:	pop    es
  412b86:	(bad)  
  412b89:	call   0xf7a3:0x466974ff
  412b90:	stos   BYTE PTR es:[edi],al
  412b91:	and    ch,bh
  412b93:	dec    edi
  412b94:	ret    0x6457
  412b97:	sti    
  412b98:	sub    BYTE PTR [edx+0x477a8ab0],bh
  412b9e:	ja     0x412b54
  412ba0:	mov    ebx,0x1ffe0946
  412ba5:	icebp  
  412ba6:	push   ds
  412ba7:	dec    BYTE PTR [eax]
  412ba9:	xor    al,0x6f
  412bab:	adc    edi,DWORD PTR [ebx-0x540d2a37]
  412bb1:	mov    dh,0x8e
  412bb3:	push   es
  412bb4:	icebp  
  412bb5:	sar    BYTE PTR [edx-0x15aa15e5],1
  412bbb:	add    ecx,esi
  412bbd:	add    bh,BYTE PTR [ebx]
  412bbf:	or     cl,bl
  412bc1:	mov    esp,0x6a80fbad
  412bc6:	xchg   ebx,eax
  412bc7:	jbe    0x412c3c
  412bc9:	mov    ah,0xba
  412bcb:	fwait
  412bcc:	add    BYTE PTR [eax],al
  412bce:	ror    BYTE PTR [edi+eiz*4+0x2eb0cf03],0x2
  412bd6:	aaa    
  412bd7:	mov    esi,0xcc23cc32
  412bdc:	jle    0x412bdf
  412bde:	or     esp,ebx
  412be0:	push   ss
  412be1:	sbb    al,0x99
  412be3:	shl    BYTE PTR [ebp+0x7e],1
  412be6:	aam    0xce
  412be8:	jmp    0x412bf1
  412bea:	clc    
  412beb:	(bad)  [esi-0x242f7f5e]
  412bf1:	xchg   ecx,eax
  412bf2:	sbb    bl,0xaa
  412bf5:	sbb    esi,DWORD PTR [ecx-0x30]
  412bf8:	pop    ebp
  412bf9:	xchg   ecx,eax
  412bfa:	push   eax
  412bfb:	fcmovnu st,st(6)
  412bfd:	pop    edx
  412bfe:	popa   
  412bff:	shl    BYTE PTR [esi+0x2b],1
  412c02:	jecxz  0x412c44
  412c04:	gs xchg ecx,eax
  412c06:	pop    esp
  412c07:	fnclex 
  412c09:	pop    edx
  412c0a:	dec    ecx
  412c0b:	shl    BYTE PTR [edx+0x25],1
  412c0e:	inc    eax
  412c0f:	shr    dl,1
  412c11:	sbb    ch,BYTE PTR [esi]
  412c13:	mov    edi,0xce18181d
  412c18:	inc    eax
  412c19:	pop    es
  412c1a:	sub    DWORD PTR [edx+ebp*4],eax
  412c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c1e:	sub    BYTE PTR [ebx-0x4f],0x42
  412c22:	xor    al,0x34
  412c24:	add    DWORD PTR [esp+ecx*4],ebx
  412c27:	fild   DWORD PTR [edx+0x1356b7d]
  412c2d:	jmp    0x729595f7
  412c32:	add    BYTE PTR [eax],al
  412c34:	and    eax,DWORD PTR [edx]
  412c36:	cld    
  412c37:	mov    edi,0x60f15073
  412c3c:	(bad)  
  412c3d:	retf   
  412c3e:	cld    
  412c3f:	fmul   QWORD PTR [ebp+eiz*1+0x41]
  412c43:	jmp    0x608457a7
  412c48:	mov    esi,0x38ac8ac7
  412c4d:	or     dh,al
  412c4f:	div    BYTE PTR [ebp+0x34e90188]
  412c55:	mov    ebx,0x78321546
  412c5a:	jmp    0xb47fcf61
  412c5f:	icebp  
  412c60:	mov    ch,0xcc
  412c62:	pop    es
  412c63:	jne    0x412c05
  412c65:	mov    dl,0xfa
  412c67:	in     al,0xc0
  412c69:	sub    BYTE PTR ss:[ecx],0x35
  412c6d:	or     eax,eax
  412c6f:	pop    ebx
  412c70:	pop    ds
  412c71:	mov    edx,0xcbae12f9
  412c76:	rcl    dh,cl
  412c78:	jge    0x412c6c
  412c7a:	jne    0x412c6d
  412c7c:	out    dx,eax
  412c7d:	jbe    0x412c7e
  412c7f:	add    DWORD PTR [edx+eax*2],ebx
  412c82:	or     eax,DWORD PTR [edi-0x4c]
  412c85:	pop    es
  412c86:	push   cs
  412c87:	cmp    al,0x53
  412c89:	pop    ecx
  412c8a:	xor    al,0x4e
  412c8d:	dec    eax
  412c8e:	push   DWORD PTR [ecx-0x5]
  412c91:	mov    cl,0xc1
  412c93:	jmp    0x412c52
  412c95:	jg     0x412c90
  412c97:	add    BYTE PTR fs:[eax],al
  412c9a:	sub    al,al
  412c9c:	add    eax,0x8e3434e9
  412ca1:	add    BYTE PTR [ebx],ah
  412ca3:	aas    
  412ca4:	mov    DWORD PTR [ebp-0x66],eax
  412ca7:	sub    ecx,DWORD PTR [edx+ebp*8-0x77]
  412cab:	ss add al,0x2
  412caf:	mov    DWORD PTR [ebp-0x4221d01],eax
  412cb5:	jne    0x412d1d
  412cb7:	dec    edx
  412cb8:	ret    
  412cb9:	call   0x3c38dd
  412cbe:	push   ebp
  412cbf:	mov    eax,?
  412cc1:	mov    eax,ebx
  412cc3:	cmp    cl,BYTE PTR [ecx-0x434b80fc]
  412cc9:	je     0x412c98
  412ccb:	dec    ecx
  412ccc:	inc    ebp
  412ccd:	clc    
  412cce:	push   ebp
  412ccf:	mov    eax,?
  412cd1:	(bad)  
  412cd2:	shl    BYTE PTR [edi-0x4131c781],cl
  412cd8:	add    ecx,DWORD PTR [ebx-0x3147d572]
  412cde:	cmp    DWORD PTR [esi],esi
  412ce0:	sti    
  412ce1:	inc    ebp
  412ce2:	add    BYTE PTR ss:[esi-0x4],bl
  412ce6:	mov    DWORD PTR [eax+ebp*2+0x7f3889ff],esi
  412ced:	jge    0x412c75
  412cef:	cmp    BYTE PTR [ebp+0x19],dh
  412cf2:	ror    DWORD PTR [esi+0x328ee1ec],1
  412cf8:	add    ecx,ebp
  412cfa:	pop    esi
  412cfb:	xor    DWORD PTR [ecx],eax
  412cfd:	add    BYTE PTR [eax],al
  412cff:	add    ch,dl
  412d01:	mov    ?,esp
  412d03:	(bad)  
  412d04:	sti    
  412d05:	and    esp,esp
  412d07:	rol    DWORD PTR [eax+edi*1-0x1b7e1405],1
  412d0e:	sti    
  412d0f:	cmp    DWORD PTR [ebx],ebx
  412d11:	inc    eax
  412d12:	or     eax,DWORD PTR [esi+0x1377b]
  412d18:	xchg   ecx,eax
  412d19:	mov    ?,eax
  412d1b:	add    DWORD PTR [edi],esi
  412d1d:	fild   DWORD PTR [eax]
  412d1f:	add    BYTE PTR [esi+0x7a8a1940],bh
  412d25:	dec    edi
  412d26:	jp     0x412d74
  412d28:	or     esi,ebp
  412d2a:	les    eax,FWORD PTR [edi]
  412d2c:	inc    eax
  412d2d:	pop    edi
  412d2e:	pop    esi
  412d2f:	dec    DWORD PTR [eax]
  412d31:	fdivr  QWORD PTR [ecx+0x3]
  412d34:	das    
  412d35:	std    
  412d36:	(bad)  
  412d37:	aaa    
  412d38:	sub    BYTE PTR [edi+0x6a],dl
  412d3b:	push   eax
  412d3d:	(bad)  [eax-0x10bcbd02]
  412d43:	aas    
  412d44:	aaa    
  412d45:	inc    edx
  412d46:	mov    ebx,gs
  412d48:	lods   al,BYTE PTR ds:[esi]
  412d49:	add    edi,DWORD PTR [edx+0x44]
  412d4c:	retf   
  412d4d:	push   edx
  412d4e:	add    DWORD PTR [esi],eax
  412d50:	mov    edx,0x75e718a8
  412d55:	or     al,0x6
  412d57:	(bad)  
  412d58:	lods   al,BYTE PTR ds:[esi]
  412d59:	jae    0x412cdd
  412d5b:	cli    
  412d5c:	mov    al,0xd6
  412d5e:	jl     0x412ceb
  412d60:	aaa    
  412d61:	fild   DWORD PTR [eax]
  412d63:	cmp    eax,DWORD PTR [eax]
  412d65:	add    BYTE PTR [eax-0x539a5ab3],al
  412d6b:	xlat   BYTE PTR ds:[ebx]
  412d6c:	add    esi,DWORD PTR [edi]
  412d6e:	sbb    ebx,DWORD PTR [ebx-0x5c3d7300]
  412d74:	add    edi,esi
  412d76:	and    bl,0x13
  412d79:	loop   0x412db1
  412d7b:	fstp   TBYTE PTR [ecx-0x3b]
  412d7e:	mov    esp,0x684f1d70
  412d83:	and    eax,0xe8d71406
  412d88:	sar    bh,0xb3
  412d8b:	fwait
  412d8c:	mov    WORD PTR [edi],es
  412d8e:	clc    
  412d8f:	pop    ecx
  412d90:	add    eax,0x19a7c517
  412d95:	sbb    eax,0x78b734ac
  412d9a:	push   0xffffffcd
  412d9c:	test   BYTE PTR [esi],0x6c
  412d9f:	pop    eax
  412da0:	sub    al,BYTE PTR [ebx+esi*4]
  412da3:	repz adc eax,0x8676adf5
  412da9:	js     0x412e16
  412dab:	cmp    al,0xa3
  412dad:	mov    esi,0x3ead820
  412db2:	aaa    
  412db3:	mov    ebx,0x2c0180e9
  412db8:	(bad)  
  412dba:	lods   eax,DWORD PTR ds:[esi]
  412dbb:	jbe    0x412e1b
  412dbd:	js     0x412d42
  412dbf:	cmp    al,0x2b
  412dc1:	mov    esi,0x3ead6d8
  412dc6:	aaa    
  412dc7:	mov    ebx,0x78e9
  412dcc:	pop    ebx
  412dcd:	fsubr  QWORD PTR [edi+0x40]
  412dd0:	fdivr  DWORD PTR [esi]
  412dd2:	inc    eax
  412dd3:	add    al,0xc9
  412dd5:	push   ebp
  412dd6:	addr16 xchg al,dl
  412dd9:	xor    ebx,DWORD PTR [ebp+0x67cd05e4]
  412ddf:	mov    esi,0xbe13379c
  412de4:	lods   al,BYTE PTR ds:[esi]
  412de5:	mov    eax,0x8f807a5
  412dea:	lods   eax,DWORD PTR ds:[esi]
  412deb:	or     ebp,DWORD PTR [ecx]
  412ded:	mov    dl,0xb4
  412def:	add    al,0x91
  412df1:	int3   
  412df2:	(bad)  
  412df3:	sti    
  412df4:	jno    0x412e6c
  412df6:	cli    
  412df7:	and    DWORD PTR [eax-0xb711534],eax
  412dfd:	retf   
  412dfe:	outs   dx,DWORD PTR ds:[esi]
  412dff:	sub    DWORD PTR [ebx-0x25],0xcc6aedb6
  412e06:	inc    esp
  412e07:	(bad)  
  412e08:	hlt    
  412e09:	ret    
  412e0a:	and    esp,DWORD PTR [edx-0x2]
  412e0d:	cli    
  412e0e:	test   al,0x8
  412e10:	aaa    
  412e11:	add    DWORD PTR [bp+si+0x47],esp
  412e15:	mov    dl,0xe5
  412e17:	mov    cl,0xba
  412e19:	fistp  WORD PTR ds:0x503434ee
  412e1f:	aaa    
  412e20:	mov    WORD PTR [esi-0x1],ds
  412e23:	add    dl,cl
  412e25:	xchg   ebp,eax
  412e26:	test   BYTE PTR [edx+0x13],ch
  412e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e2a:	adc    eax,ebp
  412e2c:	xor    al,0xb3
  412e2e:	inc    ebp
  412e2f:	lds    eax,FWORD PTR [eax]
  412e31:	add    BYTE PTR [edi+esi*4],ch
  412e34:	sar    esp,0x3e
  412e37:	je     0x412e23
  412e39:	mov    dl,0x3b
  412e3b:	xor    al,0x1
  412e3d:	jb     0x412dd5
  412e3f:	cmp    al,0x80
  412e41:	add    al,0xfb
  412e43:	repnz inc eax
  412e45:	jmp    0x6302337e
  412e4a:	lock (bad) 
  412e4d:	push   esp
  412e4e:	xor    al,0xca
  412e50:	mov    BYTE PTR [ecx-0x3e],al
  412e53:	dec    eax
  412e54:	and    eax,0xcc9bfd9
  412e59:	gs ret 0x134
  412e5d:	jmp    0x9dc95f2b
  412e62:	pop    eax
  412e63:	and    al,0x80
  412e65:	xchg   esi,eax
  412e66:	cmp    BYTE PTR [esp+ecx*1],ah
  412e69:	addr16 jg 0x412ea0
  412e6c:	add    ecx,ebp
  412e6e:	add    DWORD PTR [ebp-0x25d2ee0c],edi
  412e74:	cld    
  412e75:	idiv   BYTE PTR [ecx+0x25f786c4]
  412e7b:	mov    al,0xbf
  412e7d:	jmp    0xd19462b6
  412e82:	xchg   edx,eax
  412e83:	into   
  412e84:	cld    
  412e85:	(bad)  
  412e86:	mov    cl,0x78
  412e88:	and    eax,0xb43a35f5
  412e8d:	add    BYTE PTR [esi+0xbdb805d],dl
  412e93:	push   cs
  412e94:	mov    al,BYTE PTR [edi+0x0]
  412e97:	add    BYTE PTR [edx-0x5c],dl
  412e9a:	dec    ebx
  412e9b:	adc    BYTE PTR [edi],bl
  412e9d:	mov    bl,0xe9
  412e9f:	adc    BYTE PTR [esi],ah
  412ea1:	fprem  
  412ea3:	add    BYTE PTR [esi],bl
  412ea5:	fbstp  TBYTE PTR [edi]
  412ea7:	retf   0x35c1
  412eaa:	xchg   eax,edi
  412eac:	fwait
  412ead:	ss jne 0x412eb7
  412eb0:	jne    0x412e82
  412eb2:	add    DWORD PTR [eax],eax
  412eb4:	push   ds
  412eb5:	fimul  DWORD PTR [esi]
  412eb7:	lea    ebx,[edx+0x1c]
  412eba:	adc    eax,0xe9fe9550
  412ebf:	jne    0x412e54
  412ec1:	ss sti 
  412ec3:	bswap  ecx
  412ec5:	out    dx,al
  412ec6:	push   esi
  412ec7:	call   0x4006aa
  412ecc:	or     DWORD PTR [ebx+0x36cf4825],0x1
  412ed3:	call   0x3d4ff5
  412ed8:	div    BYTE PTR [eax]
  412eda:	cld    
  412edb:	dec    esi
  412edd:	mov    ds:0x30422485,eax
  412ee2:	add    DWORD PTR [eax],eax
  412ee4:	out    dx,al
  412ee5:	mov    ds:0x66d62445,eax
  412eea:	jmp    0xfb776608
  412eef:	mov    ecx,edx
  412ef1:	adc    dl,BYTE PTR ds:0x3912ba83
  412ef7:	add    BYTE PTR [edi],dl
  412ef9:	jae    0x412f20
  412efb:	and    BYTE PTR [eax],al
  412efd:	add    bh,ch
  412eff:	jmp    0x2445:0xbd8e43d3
  412f06:	dec    esi
  412f07:	mov    ebx,0x1d372445
  412f0c:	mov    BYTE PTR [ebx+ebx*1+0x21],al
  412f10:	mov    WORD PTR [ebx+edx*1-0x2f],es
  412f14:	xchg   DWORD PTR [ebx+ebx*1-0x37],eax
  412f18:	mov    eax,DWORD PTR [ebx+edx*1+0x35]
  412f1c:	push   ebp
  412f1d:	data16 scas al,BYTE PTR es:[edi]
  412f1f:	cmp    BYTE PTR [ecx],ch
  412f21:	and    BYTE PTR [esi-0x7d7d6d8],ch
  412f27:	movaps XMMWORD PTR [esi+edx*8],xmm5
  412f2b:	fnstsw WORD PTR [edi]
  412f2d:	add    al,bh
  412f2f:	movaps XMMWORD PTR [eax],xmm6
  412f32:	or     edx,eax
  412f34:	aas    
  412f35:	add    BYTE PTR [edi],bl
  412f37:	mov    al,ds:0x293700ba
  412f3c:	in     eax,dx
  412f3d:	mov    cs,WORD PTR [edi]
  412f3f:	pop    ebx
  412f40:	add    cl,BYTE PTR [edx+0x7c8dc35a]
  412f46:	sbb    ecx,ebx
  412f48:	(bad)  
  412f49:	lds    edi,FWORD PTR [esi+edx*1+0x7ad3e0ed]
  412f50:	add    cl,BYTE PTR [eax-0x7ceac88d]
  412f56:	neg    edx
  412f58:	add    DWORD PTR [edi],0xffffffc8
  412f5b:	add    al,BYTE PTR [edx]
  412f5d:	test   ah,bl
  412f5f:	jg     0x412f6c
  412f61:	std    
  412f62:	add    BYTE PTR [eax],al
  412f64:	add    al,0x23
  412f66:	push   0xffffffe8
  412f68:	mov    al,0x2a
  412f6a:	push   esi
  412f6b:	call   0xfe436286
  412f70:	(bad)  
  412f71:	gs std 
  412f73:	std    
  412f74:	cwde   
  412f75:	xor    bh,BYTE PTR [ecx+0x24]
  412f78:	das    
  412f79:	and    esp,DWORD PTR [ebp+0x35db36bd]
  412f7f:	shl    al,0xb8
  412f82:	pop    ebp
  412f83:	mov    DWORD PTR [edx+0x3bc64534],edx
  412f89:	xor    al,0x35
  412f8b:	lea    ebx,[ebx-0x4b]
  412f8e:	(bad)  
  412f8f:	xor    ebp,DWORD PTR [ebp+0x27c26a3c]
  412f95:	mov    esp,0x7cbdf435
  412f9a:	call   0xecb5b1af
  412f9f:	pop    eax
  412fa0:	test   al,0x5e
  412fa2:	jecxz  0x412f2f
  412fa4:	in     al,dx
  412fa5:	ret    0xf941
  412fa8:	sub    BYTE PTR [esi-0x48cd924f],bh
  412fae:	adc    eax,0x62db29d4
  412fb3:	inc    esi
  412fb4:	and    eax,0xb80c2dbd
  412fb9:	outs   dx,BYTE PTR ds:[esi]
  412fba:	ja     0x412f4a
  412fbc:	je     0x412f82
  412fbe:	sbb    dh,BYTE PTR ds:0x1647dbf7
  412fc4:	aaa    
  412fc5:	xor    al,0x6e
  412fc7:	ret    
  412fc8:	add    BYTE PTR [eax],al
  412fca:	inc    edx
  412fcb:	mov    al,0x43
  412fcd:	add    esi,DWORD PTR [edi]
  412fcf:	xor    al,0x65
  412fd1:	inc    esi
  412fd2:	pop    es
  412fd3:	gs sbb ch,bl
  412fd6:	mov    al,0x6e
  412fd8:	inc    edx
  412fd9:	enter  0xc474,0xda
  412fdd:	add    esi,DWORD PTR [edi]
  412fdf:	xor    al,0x5f
  412fe1:	inc    esi
  412fe2:	mov    edi,0xef8deabd
  412fe7:	repz adc al,BYTE PTR [edi]
  412fea:	cmp    eax,DWORD PTR [ebx+0x6a]
  412fed:	loop   0x413029
  412fef:	mov    esp,0xf2b600ad
  412ff4:	mov    DWORD PTR ds:0x85b377,esi
  412ffa:	or     al,0x42
  412ffc:	fiadd  DWORD PTR [ebx+0x3f01c8f4]
  413002:	daa    
  413003:	add    dl,0x50
  413006:	or     bh,BYTE PTR [esi]
  413008:	pop    esp
  413009:	fidiv  WORD PTR [eax-0x44]
  41300c:	aas    
  41300d:	sbb    DWORD PTR [eax],edi
  41300f:	adc    al,0xd7
  413012:	je     0x412fcf
  413014:	or     eax,0xfc64ad1b
  413019:	test   BYTE PTR [edx-0x44550406],0x1f
  413020:	xor    ch,BYTE PTR [ebp+0x7b]
  413023:	aas    
  413024:	or     esi,ebx
  413026:	cmp    dl,0x89
  413029:	in     eax,dx
  41302a:	imul   eax,esi,0xffffffc0
  41302d:	sahf   
  41302e:	add    BYTE PTR [eax],al
  413030:	jle    0x412ffe
  413032:	cld    
  413033:	and    al,0x2b
  413035:	inc    esp
  413036:	lods   eax,DWORD PTR ds:[esi]
  413037:	fsubrp st(2),st
  413039:	cmc    
  41303a:	ret    
  41303b:	in     eax,dx
  41303c:	inc    esp
  41303d:	push   ss
  41303e:	mov    BYTE PTR [ebx+edi*1],ah
  413041:	pop    edx
  413042:	add    edi,DWORD PTR [edx+0x76f469e6]
  413048:	stc    
  413049:	cmc    
  41304a:	or     al,0x9f
  41304c:	cld    
  41304d:	xor    eax,0x440564cb
  413052:	or     BYTE PTR [esi],ch
  413054:	cmp    al,BYTE PTR [edx+0x76]
  413057:	jmp    0xec01e490
  41305c:	frstor [edx-0x78]
  41305f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413060:	cmp    al,0x5a
  413062:	push   es
  413063:	cli    
  413064:	out    0x69,al
  413066:	hlt    
  413067:	ss scas al,BYTE PTR es:[edi]
  413069:	loop   0x4130e1
  41306b:	icebp  
  41306c:	jns    0x413035
  41306e:	bound  edx,QWORD PTR [eax-0x2f17cbd2]
  413074:	lods   eax,DWORD PTR ds:[esi]
  413075:	jae    0x413080
  413077:	inc    ecx
  413078:	xor    al,0x43
  41307a:	or     BYTE PTR [eax],al
  41307c:	popa   
  41307d:	xor    DWORD PTR [esi+ebp*2-0x50],esp
  413081:	push   esi
  413082:	add    ebx,0x6a27da92
  413088:	lea    eax,[edx]
  41308a:	iret   
  41308b:	pop    edi
  41308c:	xchg   ecx,eax
  41308d:	mov    esi,0x3803d280
  413092:	mov    BYTE PTR [ecx],0x0
  413095:	add    cl,bh
  413097:	inc    ecx
  413098:	data16 add BYTE PTR [ebp+0x1f],dh
  41309c:	repz inc ebp
  41309e:	inc    esi
  41309f:	xor    BYTE PTR [eax+0x8],dh
  4130a2:	xchg   ecx,eax
  4130a3:	xor    BYTE PTR [ebx+0x65],ch
  4130a6:	add    dh,BYTE PTR [eax]
  4130a8:	jmp    0x4b6f:0x62309106
  4130af:	xor    BYTE PTR [ecx-0x4cc9e23d],al
  4130b5:	ret    
  4130b6:	shr    BYTE PTR [esi],1
  4130b8:	xor    DWORD PTR [eax],eax
  4130ba:	xchg   esp,eax
  4130bb:	repnz pop edx
  4130bd:	pop    edi
  4130be:	(bad)  
  4130bf:	hlt    
  4130c0:	add    eax,0xedbb2300
  4130c5:	cmp    DWORD PTR [edx+0x5b575362],0x7c
  4130cc:	jmp    0xdbbdb721
  4130d1:	dec    DWORD PTR [ecx-0x2a8b3e51]
  4130d7:	mov    bl,dl
  4130d9:	pop    es
  4130da:	into   
  4130db:	xor    ah,BYTE PTR [ebx+0x39]
  4130de:	mov    ds:0x5b0a72da,eax
  4130e3:	jl     0x4130ce
  4130e5:	push   eax
  4130e6:	or     DWORD PTR [ecx+edi*8],ebp
  4130e9:	adc    cl,BYTE PTR [esi-0x90216ce]
  4130ef:	(bad)  
  4130f2:	mov    bl,0xca
  4130f4:	add    DWORD PTR [ecx-0x420367c9],ecx
  4130fa:	add    BYTE PTR [eax],al
  4130fc:	jnp    0x4130cd
  4130fe:	add    BYTE PTR [eax],al
  413100:	mov    ah,0xaf
  413102:	or     BYTE PTR [eax],al
  413104:	loopne 0x413145
  413106:	or     ch,bh
  413108:	sub    bh,BYTE PTR ds:0x32374012
  41310e:	adc    ch,bh
  413110:	jmp    0x40ca:0x5b13fdc4
  413117:	add    BYTE PTR [edx],ah
  413119:	(bad)  
  41311b:	push   DWORD PTR [edi]
  41311d:	pusha  
  41311e:	cmp    ecx,DWORD PTR [ecx-0x2dcd0f06]
  413124:	mov    fs,esp
  413126:	add    al,BYTE PTR [eax]
  413128:	aaa    
  413129:	xchg   al,dh
  41312b:	mov    esi,edx
  41312d:	hlt    
  41312e:	mov    WORD PTR [ebx-0x19],?
  413131:	or     ebp,ebp
  413133:	pop    esi
  413134:	sub    DWORD PTR [edi-0x60850202],esp
  41313a:	mov    eax,eax
  41313c:	mov    ds:0x435389d6,eax
  413141:	inc    edx
  413142:	retf   
  413143:	call   0x46d5eb
  413148:	mov    ah,0xb3
  41314a:	add    eax,0x4d131f74
  41314f:	je     0x413194
  413151:	dec    esi
  413152:	inc    esp
  413153:	clc    
  413154:	mov    dh,0xe8
  413156:	clc    
  413157:	call   0x72420c90
  41315c:	xchg   esp,eax
  41315d:	sub    ebp,eax
  41315f:	pop    ebp
  413160:	add    BYTE PTR [eax],al
  413162:	jno    0x413168
  413164:	mov    edi,0x4b3708
  413169:	jmp    0x24ba3037
  41316e:	xor    esi,ecx
  413170:	or     ch,bh
  413172:	push   0x34
  413174:	cs (bad) 
  413176:	div    BYTE PTR [ebx]
  413178:	sbb    edx,DWORD PTR [edi]
  41317a:	pop    ds
  41317b:	and    ch,BYTE PTR [edx-0x714e89fd]
  413181:	daa    
  413182:	cmp    esi,DWORD PTR [esi+edi*2]
  413185:	adc    DWORD PTR [edx+0xd07c640],ecx
  41318b:	xor    al,0xf3
  41318d:	ss jae 0x41317e
  413190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413191:	add    esi,DWORD PTR [edx+0x1f]
  413194:	pop    esi
  413195:	adc    dh,bh
  413197:	xor    esp,DWORD PTR [edi+0x5fd8ae56]
  41319d:	inc    esi
  41319e:	sub    esi,DWORD PTR [ecx-0x2349ff36]
  4131a4:	jmp    0x2578:0x3227c355
  4131ab:	jl     0x4131eb
  4131ad:	or     al,0xb6
  4131af:	cld    
  4131b0:	stos   DWORD PTR es:[edi],eax
  4131b1:	jmp    0x33e9:0x3ea33cd
  4131b8:	jmp    0x37bd:0xe6d8f703
  4131bf:	xor    al,0xea
  4131c1:	inc    ebx
  4131c2:	push   ds
  4131c3:	das    
  4131c4:	inc    esp
  4131c5:	add    eax,DWORD PTR [eax]
  4131c7:	add    BYTE PTR [edi],dh
  4131c9:	xor    al,0x6a
  4131cb:	mov    BYTE PTR [eax+edi*1+0x30],dh
  4131cf:	add    esi,DWORD PTR [edx]
  4131d1:	xor    al,0xea
  4131d3:	and    ch,dh
  4131d5:	mov    ch,dl
  4131d7:	pop    es
  4131d8:	aaa    
  4131d9:	xor    al,0x1f
  4131db:	ret    
  4131dc:	bound  ebx,QWORD PTR [esi+ebx*8]
  4131df:	and    dh,BYTE PTR [ebx+esi*8+0x340c1ed6]
  4131e6:	jmp    0xd88168ee
  4131eb:	ds aaa 
  4131ed:	xor    al,BYTE PTR [ecx]
  4131ef:	jmp    0xeca77228
  4131f4:	xor    al,0x33
  4131f6:	add    ecx,ebp
  4131f8:	and    DWORD PTR [edi+0x67],edi
  4131fb:	jmp    0x41318c
  4131fd:	sub    eax,0x318fed67
  413202:	addr16 jmp 0x3134:0xc416daec
  41320a:	add    ecx,ebp
  41320c:	or     BYTE PTR [ebx],bh
  41320e:	ds jmp 0x75426646
  413214:	test   DWORD PTR [edx],0x2cb5cbf
  41321a:	shr    DWORD PTR [ecx],0x4
  41321d:	pop    edx
  41321e:	add    DWORD PTR [ecx-0x4d],eax
  413221:	xor    eax,DWORD PTR [ecx]
  413223:	jmp    0x53428c0c
  413228:	xor    BYTE PTR [esi-0x4],bl
  41322b:	xor    al,0x0
  41322d:	add    BYTE PTR [ebx],dh
  41322f:	(bad)  
  413230:	push   ss
  413231:	jge    0x413254
  413233:	je     0x413236
  413235:	bound  esi,QWORD PTR [ebx]
  413237:	mov    dh,0xfc
  413239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41323a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41323b:	daa    
  41323c:	addr16 in eax,dx
  41323e:	or     al,0x13
  413240:	cld    
  413241:	xchg   esi,eax
  413242:	sbb    al,0xae
  413244:	icebp  
  413245:	xor    BYTE PTR [esi+0x65dd76ca],dh
  41324b:	rcl    DWORD PTR [esi],0xb1
  41324e:	sub    DWORD PTR [ecx+eax*1+0x6a],esi
  413252:	jmp    0x413215
  413254:	pop    esp
  413255:	jle    0x5b2a3c51
  41325b:	aaa    
  41325c:	call   0x9890ef2
  413261:	push   0xffffffeb
  413263:	shr    ecx,0xc
  413266:	add    eax,edx
  413268:	cld    
  413269:	add    BYTE PTR [edi+0x36],al
  41326c:	mov    al,BYTE PTR [ebp-0x2e]
  41326f:	mov    al,0x43
  413271:	or     BYTE PTR [edi+0x3e],dl
  413274:	add    eax,0xddd3588b
  413279:	push   ebp
  41327a:	and    eax,0x92ec7ccc
  41327f:	cmp    DWORD PTR [ecx],eax
  413281:	add    al,bl
  413283:	data16 mov bh,al
  413286:	mov    ah,0x39
  413288:	mov    ecx,0x1770bf8
  41328d:	mov    edi,DWORD PTR [edi-0xb]
  413290:	inc    eax
  413291:	inc    DWORD PTR [eax]
  413293:	add    BYTE PTR [edi+0x61e612cf],cl
  413299:	mov    esi,0x300bc080
  41329e:	jl     0x413267
  4132a0:	inc    eax
  4132a1:	xor    eax,0x1f750001
  4132a6:	add    ah,BYTE PTR [bp+0x70cb]
  4132ab:	inc    eax
  4132ac:	pop    esi
  4132ad:	mov    dl,0xcb
  4132af:	call   0x40072b
  4132b4:	retf   
  4132b5:	div    BYTE PTR [eax+0x14]
  4132b8:	lahf   
  4132b9:	div    BYTE PTR [ebx]
  4132bb:	add    ebx,DWORD PTR [esi]
  4132bd:	aaa    
  4132be:	mov    dh,BYTE PTR [ebp+0x26]
  4132c1:	data16 or al,0xc1
  4132c5:	into   
  4132c6:	xchg   esp,eax
  4132c7:	mov    ecx,0x2444eabd
  4132cd:	cmp    bh,BYTE PTR [ecx+0x1770800]
  4132d3:	mov    edx,eax
  4132d5:	into   
  4132d6:	shl    ch,cl
  4132d8:	popa   
  4132d9:	mov    esi,0xd0bc080
  4132de:	push   edx
  4132df:	push   0x137da
  4132e4:	aaa    
  4132e5:	dec    esi
  4132e6:	ret    0x6901
  4132e9:	jge    0x413274
  4132eb:	mov    bl,0xc3
  4132ed:	ja     0x4132e6
  4132ef:	std    
  4132f0:	mov    ah,0x4
  4132f2:	imul   eax
  4132f4:	jmp    0x13f2a08
  4132f9:	add    BYTE PTR [eax-0x3774f779],dh
  4132ff:	xchg   edx,eax
  413300:	(bad)  
  413301:	push   DWORD PTR [edi]
  413303:	inc    esi
  413304:	ret    0x4be8
  413307:	test   BYTE PTR [eax],al
  413309:	add    ah,ch
  41330b:	pop    eax
  41330c:	shl    BYTE PTR [ebx+0x33],0x13
  413310:	inc    ecx
  413311:	std    
  413312:	aaa    
  413313:	inc    edi
  413314:	inc    ecx
  413315:	std    
  413316:	fsubr  DWORD PTR [edx-0x32c43d33]
  41331c:	push   ecx
  41331d:	mov    DWORD PTR [ebx+0x45],ebx
  413320:	inc    esp
  413321:	or     BYTE PTR [esi+0x37020df0],dh
  413327:	int    0x83
  413329:	or     DWORD PTR [edi-0x11],0xfffffffa
  41332d:	std    
  41332e:	out    0x45,eax
  413330:	cmp    al,0x18
  413332:	dec    edi
  413333:	sbb    edx,edi
  413335:	std    
  413336:	cmp    BYTE PTR [eax-0x3b],dl
  413339:	je     0x413381
  41333b:	xchg   edx,eax
  41333c:	ins    BYTE PTR es:[edi],dx
  41333d:	or     al,0xba
  41333f:	push   eax
  413340:	std    
  413341:	sti    
  413342:	and    BYTE PTR [ebx-0x568217ab],ah
  413348:	cli    
  413349:	std    
  41334a:	dec    BYTE PTR [esi-0x7af7377a]
  413350:	(bad)  
  413351:	push   ebx
  413352:	lods   al,BYTE PTR ds:[esi]
  413353:	scas   eax,DWORD PTR es:[edi]
  413354:	mov    es,WORD PTR [ebx+0x2f]
  413357:	dec    esi
  413358:	std    
  413359:	std    
  41335a:	imul   esi,ebx,0x7b
  41335d:	rol    BYTE PTR [eax],0x0
  413360:	arpl   WORD PTR [esi+ecx*1],si
  413363:	test   DWORD PTR [eax+esi*1-0x16],ebx
  413367:	outs   dx,DWORD PTR ds:[esi]
  413368:	cmp    DWORD PTR [esi-0x16],ecx
  41336b:	xchg   BYTE PTR [esp+ebp*1-0x47],bh
  41336f:	clc    
  413370:	inc    esp
  413371:	and    al,0x43
  413373:	outs   dx,DWORD PTR ds:[esi]
  413374:	xor    eax,ecx
  413376:	mov    edx,0xa627bbff
  41337b:	adc    eax,0xc46533f7
  413380:	and    esi,DWORD PTR [edi]
  413382:	outs   dx,DWORD PTR ds:[esi]
  413383:	aas    
  413384:	das    
  413385:	pop    edi
  413386:	daa    
  413387:	test   DWORD PTR [edi-0x3f],ebp
  41338a:	mov    ch,0xc4
  41338c:	in     al,0xac
  41338e:	(bad)  
  41338f:	push   ecx
  413390:	mov    esi,0x8184f247
  413395:	shl    DWORD PTR [esi+0x31],0xb4
  413399:	retf   0x357e
  41339c:	imul   edi,DWORD PTR [edx-0x1e],0x5031e30b
  4133a3:	push   es
  4133a4:	int    0x33
  4133a6:	push   eax
  4133a7:	add    al,0x5a
  4133a9:	dec    edx
  4133aa:	out    dx,al
  4133ab:	jmp    0x413411
  4133ad:	jmp    0x7533:0xdd03
  4133b3:	ds das 
  4133b5:	fs mov ebx,0x3dc1276e
  4133bb:	or     BYTE PTR [edx],dh
  4133bd:	dec    edx
  4133be:	out    0xf8,al
  4133c0:	inc    esp
  4133c1:	jl     0x4133bb
  4133c3:	inc    ebx
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	aaa    
  4133c7:	mov    bh,0xaa
  4133c9:	outs   dx,DWORD PTR ds:[esi]
  4133ca:	xor    al,0xad
  4133cc:	sub    eax,0x67351e0c
  4133d1:	retf   
  4133d2:	or     ah,BYTE PTR [edx+0x25]
  4133d5:	lds    ebp,FWORD PTR [ecx-0x53]
  4133d8:	neg    BYTE PTR [edi]
  4133da:	das    
  4133db:	mov    ch,0x1
  4133dd:	ja     0x4133ce
  4133df:	inc    edi
  4133e0:	sbb    BYTE PTR [esi+eiz*8+0x47],ah
  4133e4:	adc    al,0x66
  4133e6:	data16 cmp ah,bh
  4133e9:	hlt    
  4133ea:	in     al,dx
  4133eb:	and    eax,0x9cfe941
  4133f0:	jmp    0xfd000742
  4133f5:	lahf   
  4133f6:	int3   
  4133f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133f8:	(bad)  
  4133f9:	ds mov edi,0xe293068
  4133ff:	repz push ebx
  413401:	bound  ebx,QWORD PTR [eax]
  413403:	sbb    BYTE PTR [ecx],cl
  413405:	push   0xffffff9e
  413407:	mov    esi,0xca19dc75
  41340c:	jne    0x4133de
  41340e:	ret    
  41340f:	ja     0x413436
  413411:	stc    
  413412:	mov    bl,0xcb
  413414:	add    DWORD PTR [ebp+0x24],edi
  413417:	ins    BYTE PTR es:[edi],dx
  413418:	jne    0x41340b
  41341a:	in     al,dx
  41341b:	inc    esp
  41341c:	daa    
  41341d:	cmp    DWORD PTR [edx],0x5c
  413420:	call   0x4235580b
  413425:	shl    BYTE PTR ds:0x39c103,cl
  41342b:	add    BYTE PTR [edi+esi*2+0x65b3f925],ch
  413432:	push   ecx
  413433:	into   
  413434:	fnstenv [edi]
  413436:	jmp    0x1751971
  41343b:	gs jae 0x413485
  41343e:	pop    es
  41343f:	mov    dh,0xa1
  413441:	cmp    cl,ch
  413443:	dec    edx
  413444:	test   DWORD PTR [ecx+eax*1],esi
  413447:	inc    edi
  413448:	hlt    
  413449:	mov    ch,0xc9
  41344b:	sahf   
  41344c:	xor    ebp,0xae1f6256
  413452:	dec    esi
  413453:	loope  0x413408
  413455:	ror    BYTE PTR [ecx],1
  413457:	add    BYTE PTR [esp+esi*1],cl
  41345a:	add    DWORD PTR [ebp-0x73f6d],ecx
  413460:	imul   ebp,DWORD PTR [eax-0x76],0x18cc0e45
  413467:	(bad)  
  413468:	pop    ecx
  413469:	mov    DWORD PTR [ebp-0x77cffd40],0xfebd6685
  413473:	dec    DWORD PTR [esi-0x31ad7635]
  413479:	xor    eax,DWORD PTR [ebp+0x31bf82c0]
  41347f:	rcl    BYTE PTR [edi-0xd],0x82
  413483:	enter  0xf159,0xc2
  413487:	push   ebp
  413488:	and    eax,0xa6ec7ccc
  41348d:	xor    eax,0x1
  413492:	shr    BYTE PTR [eax+eax*4-0x138c408],1
  413499:	push   eax
  41349a:	add    eax,0x80331175
  41349f:	jno    0x41350a
  4134a1:	add    al,0xf0
  4134a3:	jb     0x4134a6
  4134a5:	add    eax,0xfffcbe90
  4134aa:	push   ds
  4134ab:	(bad)  
  4134ac:	adc    BYTE PTR [eax+0x5c],dl
  4134af:	jae    0x4134b2
  4134b1:	test   DWORD PTR [esi-0x2c72bcb1],ebx
  4134b7:	mov    edx,0x6379fff8
  4134bc:	jmp    0x1795104
  4134c1:	test   dh,bl
  4134c3:	dec    esi
  4134c4:	xor    ecx,DWORD PTR [ebx-0x74a9d3ad]
  4134ca:	pop    ebx
  4134cb:	xor    BYTE PTR [edx-0x779d4440],al
  4134d1:	test   DWORD PTR [edi],esi
  4134d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134d4:	stc    
  4134d5:	std    
  4134d6:	or     ch,bh
  4134d8:	mov    DWORD PTR [ebp+0x34],esi
  4134db:	mov    dh,0x11
  4134dd:	test   BYTE PTR [ecx*1-0x5f20affb],ah
  4134e4:	(bad)  
  4134e5:	std    
  4134e6:	call   0x37a9341d
  4134eb:	fild   WORD PTR [eax+0x0]
  4134ee:	and    BYTE PTR [ebp+0x33],0xe1
  4134f2:	shl    BYTE PTR [ebp+0x2f],1
  4134f5:	test   BYTE PTR [eax],0x0
  4134f8:	icebp  
  4134f9:	xchg   ebp,eax
  4134fa:	add    bl,BYTE PTR [ecx+edi*2-0x6a]
  4134fe:	xchg   esi,eax
  413500:	pop    ecx
  413501:	add    al,0xbf
  413503:	xor    DWORD PTR [edi-0x74],esi
  413506:	mov    edi,0x51097731
  41350b:	mov    DWORD PTR [ebx-0x4bc31bb7],edx
  413511:	(bad)  
  413512:	hlt    
  413513:	std    
  413514:	jmp    0xe05da66a
  413519:	xchg   bl,dh
  41351b:	jae    0x41353c
  41351d:	mov    ds:0xbe376a00,eax
  413522:	ins    BYTE PTR es:[edi],dx
  413523:	or     BYTE PTR [edi-0x35],bl
  413526:	idiv   ch
  413528:	push   0x7b81f851
  41352d:	sar    BYTE PTR [ebx-0x3],0xe3
  413531:	imul   eax,DWORD PTR [edx+0x536050fd],0x5598f28b
  41353b:	std    
  41353c:	enter  0xf5d0,0x13
  413540:	neg    edx
  413542:	inc    eax
  413543:	add    BYTE PTR [edx-0x45bf8e75],bh
  413549:	sbb    ch,bh
  41354b:	push   eax
  41354c:	mov    dl,0x34
  41354e:	sub    eax,0xf5bd87dc
  413553:	aas    
  413554:	and    eax,0x84f4ea74
  413559:	and    al,0x5d
  41355b:	aas    
  41355c:	add    BYTE PTR [eax],al
  41355e:	(bad)  
  41355f:	mov    ebp,0xbd6707fd
  413564:	aad    0x4f
  413566:	inc    ebp
  413567:	je     0x413553
  413569:	mov    BYTE PTR [eax+edi*8+0x5f],dh
  41356d:	inc    edi
  41356e:	dec    ebx
  41356f:	mov    cl,0x4a
  413571:	sbb    eax,0x83e9ab51
  413576:	xchg   ecx,eax
  413577:	or     bh,ah
  413579:	add    esi,DWORD PTR [edi]
  41357b:	xor    al,0xd5
  41357d:	or     ebp,DWORD PTR [esp+esi*4]
  413580:	jmp    0xb803:0x71563703
  413587:	aas    
  413588:	ss jmp 0x6f6c9bca
  41358e:	aas    
  41358f:	adc    al,BYTE PTR gs:[edi-0x67]
  413593:	mov    ebp,0x307b811b
  413598:	pop    edi
  413599:	aas    
  41359a:	mov    ebx,DWORD PTR [ebp-0x54]
  41359d:	retf   0x6576
  4135a0:	mov    bh,0xf4
  4135a2:	inc    eax
  4135a3:	(bad)  
  4135a4:	mov    ebp,0xe333f6bc
  4135a9:	jle    0x41353f
  4135ab:	xor    al,0xea
  4135ad:	add    ecx,edi
  4135af:	das    
  4135b0:	pop    esp
  4135b1:	inc    esp
  4135b2:	aaa    
  4135b3:	mov    ebp,0x74259ff5
  4135b8:	jmp    0xfe04:0x27f50fa0
  4135bf:	hlt    
  4135c0:	repz jg 0x4135c3
  4135c3:	add    BYTE PTR [eax-0x76fc15cc],dh
  4135c9:	test   eax,0x21dcfc01
  4135ce:	inc    ecx
  4135cf:	jmp    0x29b45260
  4135d4:	xor    esp,DWORD PTR [esp+edi*8-0x49]
  4135d8:	pushf  
  4135d9:	sbb    BYTE PTR [ebx+0x29],dh
  4135dc:	xor    edi,DWORD PTR [edi+0x72c3d136]
  4135e2:	add    DWORD PTR [edx+0x50],ecx
  4135e5:	test   DWORD PTR [eax-0x17],0xb969e5eb
  4135ec:	pop    edx
  4135ed:	je     0x4135f0
  4135ef:	outs   dx,BYTE PTR ds:[esi]
  4135f0:	adc    esp,edi
  4135f2:	ret    
  4135f3:	stos   BYTE PTR es:[edi],al
  4135f4:	xor    al,0x93
  4135f6:	xor    DWORD PTR [esi],esp
  4135f8:	ja     0x41362e
  4135fa:	cld    
  4135fb:	aas    
  4135fc:	pop    esp
  4135fd:	je     0x413672
  4135ff:	test   eax,0x136bf34
  413604:	jp     0x413678
  413606:	add    DWORD PTR [edx-0x16bf08a4],ecx
  41360c:	mov    ds:0xe3f5a0e5,eax
  413611:	jb     0x413614
  413613:	(bad)  
  413614:	pop    ebp
  413615:	stc    
  413616:	sub    al,0x26
  413618:	div    DWORD PTR [ebx]
  41361a:	jne    0x4135df
  41361c:	dec    ebp
  41361d:	stc    
  41361e:	xor    BYTE PTR [esi],ah
  413620:	div    DWORD PTR [ebx]
  413622:	jne    0x4135ef
  413624:	cmp    eax,0x2628f9
  413629:	add    bh,dh
  41362b:	xor    esi,DWORD PTR [ebp-0x2d]
  41362e:	das    
  41362f:	div    DWORD PTR [ebp-0x29]
  413632:	repz dec ebx
  413634:	add    ecx,ebp
  413636:	pop    esp
  413637:	mov    esp,0x4c2ede53
  41363c:	movaps XMMWORD PTR [ebx],xmm6
  41363f:	xchg   ebx,eax
  413640:	lds    esp,FWORD PTR [edi+0x3833f8]
  413646:	mov    DWORD PTR [edx],edi
  413648:	adc    edi,edi
  41364a:	sub    edx,DWORD PTR [eax]
  41364c:	mov    BYTE PTR [ebx+0x1e],0xc7
  413650:	adc    BYTE PTR [esp+edi*8-0x31cdfe89],bh
  413657:	addr16 ret 0x1bff
  41365b:	or     al,0xc6
  41365d:	inc    ebx
  41365e:	push   ds
  41365f:	mov    ah,bh
  413661:	pop    esi
  413662:	int    0xc7
  413664:	or     BYTE PTR [ecx+ecx*8],bh
  413667:	jae    0x41366a
  413669:	jne    0x413641
  41366b:	(bad)  
  41366c:	xor    BYTE PTR [eax],bh
  41366e:	cdq    
  41366f:	jae    0x413672
  413671:	dec    DWORD PTR [ebx]
  413673:	mov    WORD PTR [edi],cs
  413675:	inc    eax
  413676:	into   
  413677:	(bad)  
  413678:	xor    ah,al
  41367a:	sbb    BYTE PTR [ebx+0x1],dh
  41367d:	dec    ebx
  41367f:	pop    ebx
  413680:	cmovo  ecx,esi
  413683:	repnz push esi
  413685:	xor    esi,DWORD PTR [ecx-0x28]
  413688:	adc    al,0xff
  41368a:	jno    0x413653
  41368c:	test   eax,eax
  41368e:	add    BYTE PTR [eax],al
  413690:	xchg   ecx,eax
  413691:	mov    bl,0xe3
  413693:	add    BYTE PTR [esi-0x2597acc9],cl
  413699:	mov    eax,0xbfa4fffc
  41369e:	std    
  41369f:	xor    eax,0x42ede2
  4136a4:	xor    DWORD PTR ds:0x37ce1279,ebx
  4136aa:	mov    dh,al
  4136ac:	fstp   TBYTE PTR [ebp+0x301c840e]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	add    ebp,DWORD PTR [esi+0x374e053b]
  4136ba:	push   ecx
  4136bb:	xor    ebx,DWORD PTR [esi+0x375588df]
  4136c1:	int    0x0
  4136c3:	test   BYTE PTR [edi-0x26],dh
  4136c6:	test   BYTE PTR [esi-0x74ff32c9],ah
  4136cc:	mov    ecx,0x37000812
  4136d1:	sbb    eax,0xcd36015d
  4136d6:	add    ch,bh
  4136d8:	inc    edx
  4136d9:	add    eax,0x50374013
  4136de:	ror    BYTE PTR ds:0xc0848ca2,0x30
  4136e5:	push   ecx
  4136e6:	xchg   DWORD PTR [eax],eax
  4136e8:	aaa    
  4136e9:	int    0xad
  4136eb:	std    
  4136ec:	lock cmp DWORD PTR [edi-0x79],ebp
  4136f0:	jns    0x4136cb
  4136f2:	add    DWORD PTR [esi+0x0],0xf8544700
  4136f9:	xor    dh,ch
  4136fb:	mov    ebx,DWORD PTR [esi+0xc]
  4136fe:	mov    esi,0x7987248a
  413703:	xor    eax,0x8d490c5d
  413708:	add    BYTE PTR [ebx+0x5bea9],cl
  41370e:	aaa    
  41370f:	pushf  
  413710:	fsubr  DWORD PTR [esi]
  413712:	xchg   esi,eax
  413713:	add    edi,ebp
  413715:	push   0x35
  413717:	cmc    
  413718:	call   0x820e2e90
  41371d:	mov    es,WORD PTR [ebp-0x31]
  413720:	add    BYTE PTR [eax],al
  413722:	out    0x34,al
  413724:	or     ebx,edi
  413726:	sub    BYTE PTR [ecx],0x5a
  413729:	push   eax
  41372a:	(bad)  
  41372d:	aas    
  41372e:	aaa    
  41372f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413730:	das    
  413731:	push   cs
  413732:	test   ah,0x58
  413735:	icebp  
  413736:	xor    cl,BYTE PTR [eax+eax*1-0xacc9298]
  41373d:	inc    edx
  41373e:	aaa    
  41373f:	dec    esp
  413740:	push   0x423409ff
  413745:	ds sub al,0x75
  413748:	jmp    0x9f04:0x2929245b
  41374f:	mov    ch,0xef
  413751:	inc    edx
  413752:	aaa    
  413753:	dec    esp
  413754:	cmp    bh,ch
  413756:	popa   
  413757:	xor    al,0x5d
  413759:	dec    edx
  41375a:	add    BYTE PTR [eax],al
  41375c:	xor    ecx,DWORD PTR [eax+ebx*4+0x2]
  413760:	push   eax
  413761:	xor    al,0x3a
  413763:	icebp  
  413764:	and    al,0x8
  413766:	stos   DWORD PTR es:[edi],eax
  413767:	inc    ebp
  413768:	aaa    
  413769:	mov    ch,0xa6
  41376b:	cmp    BYTE PTR [eax+0x6bc46d32],dh
  413771:	xor    BYTE PTR [edi-0xe],ch
  413774:	fisubr WORD PTR ds:0xd4b1dc1c
  41377a:	imul   esi,ecx,0xffffffcf
  41377d:	into   
  41377e:	fs icebp 
  413780:	rcr    BYTE PTR [edx+0x6f],cl
  413783:	leave  
  413784:	push   0xfffffff5
  413786:	mov    ebp,0x3eb5d37c
  41378b:	or     al,0x61
  41378d:	lods   eax,DWORD PTR ds:[esi]
  41378e:	std    
  41378f:	mov    eax,DWORD PTR [ebp+0x74]
  413792:	jmp    0xf4c9:0xe63faa58
  413799:	mov    eax,0x7981f0ea
  41379e:	and    eax,DWORD PTR [edi+esi*1]
  4137a1:	xor    al,0x71
  4137a3:	inc    edi
  4137a4:	(bad)  
  4137a5:	std    
  4137a6:	sub    al,BYTE PTR [ecx]
  4137a8:	lods   al,BYTE PTR ds:[esi]
  4137a9:	cdq    
  4137aa:	jmp    0x73fb:0x7db93703
  4137b1:	loop   0x413824
  4137b3:	inc    edi
  4137b4:	arpl   di,si
  4137b6:	add    dl,ch
  4137b8:	xor    eax,0xd9de0134
  4137bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137be:	add    ecx,ebp
  4137c0:	add    BYTE PTR [eax],al
  4137c2:	xor    al,0xb7
  4137c4:	jbe    0x4137b3
  4137c6:	retf   
  4137c7:	je     0x4137c2
  4137c9:	fs leave 
  4137cb:	retf   
  4137cc:	jmp    0xfcf8b0be
  4137d1:	ins    DWORD PTR es:[edi],dx
  4137d2:	hlt    
  4137d3:	aas    
  4137d4:	ja     0x4137d6
  4137d6:	cwde   
  4137d7:	les    ebx,FWORD PTR [eax]
  4137d9:	test   eax,0xf580ac74
  4137de:	xor    esi,DWORD PTR [ecx+eax*1]
  4137e1:	ins    DWORD PTR es:[edi],dx
  4137e2:	hlt    
  4137e3:	aas    
  4137e4:	adc    bl,BYTE PTR [esi+0x2c882881]
  4137ea:	adc    ecx,DWORD PTR [esi+0x1]
  4137ed:	and    DWORD PTR [esi+0x7386fcf3],0x6beae8bc
  4137f7:	cmp    eax,0x3fe76ce9
  4137fc:	cmp    BYTE PTR [esi+0x61],ch
  4137ff:	sub    al,0x88
  413801:	lods   al,BYTE PTR ds:[esi]
  413802:	enter  0xb0ac,0x17
  413806:	xor    dh,BYTE PTR [ecx+eax*1]
  413809:	inc    ecx
  41380a:	push   edx
  41380b:	idiv   ah
  41380d:	dec    esi
  41380e:	pop    edx
  41380f:	mov    ecx,0xf9363c64
  413814:	add    cl,dl
  413816:	mov    ds:0xfce94229,al
  41381b:	leave  
  41381c:	or     ebp,DWORD PTR [eax-0x41feb1cc]
  413822:	in     al,dx
  413823:	mov    bh,0x76
  413825:	test   eax,0xb7340000
  41382a:	xor    BYTE PTR [esi],dl
  41382c:	sub    DWORD PTR [esp+eax*8],eax
  41382f:	stos   BYTE PTR es:[edi],al
  413830:	xor    al,0xb3
  413832:	lds    eax,FWORD PTR [eax]
  413834:	jle    0x4137e7
  413836:	ror    DWORD PTR [edi],0x3
  413839:	jb     0x413839
  41383b:	and    BYTE PTR ds:0x4e000201,0x34
  413842:	jne    0x41384a
  413844:	adc    eax,ebx
  413846:	ret    
  413847:	fild   QWORD PTR [ecx-0x38]
  41384a:	mov    BYTE PTR [ebp+0x76],dh
  41384d:	xlat   BYTE PTR ds:[ebx]
  41384e:	mov    ecx,ebx
  413850:	imul   ecx,eax,0x67f94587
  413856:	pop    ebx
  413857:	leave  
  413858:	fdivr  QWORD PTR [eax-0x2b6aab04]
  41385e:	jl     0x41384c
  413860:	push   ss
  413861:	add    DWORD PTR ss:[eax],eax
  413864:	dec    ebp
  413865:	mov    ch,0x3f
  413867:	sub    al,0x9b
  413869:	popf   
  41386a:	stc    
  41386b:	std    
  41386c:	test   eax,0xc78b4fc7
  413871:	fsub   st,st(0)
  413873:	push   ebx
  413874:	fidiv  WORD PTR [ebx]
  413876:	test   eax,eax
  413878:	loop   0x413886
  41387a:	push   ebx
  41387b:	mov    esp,ebx
  41387d:	mov    ebx,0x3ad64689
  413882:	sbb    ecx,DWORD PTR [ebp-0x206929e]
  413888:	imul   eax,edi,0x8d51
  41388e:	push   ebx
  41388f:	enter  0xfff8,0x69
  413893:	pusha  
  413894:	jmp    0xff08318e
  413899:	test   BYTE PTR [esi+0x3c],bl
  41389c:	add    bh,bh
  41389e:	shr    BYTE PTR [edi],1
  4138a0:	pop    ebx
  4138a1:	mov    al,0x8f
  4138a3:	push   0xffffffc4
  4138a5:	ret    0x33a2
  4138a8:	push   eax
  4138a9:	mov    edi,DWORD PTR [edx]
  4138ab:	mov    bl,0xed
  4138ad:	adc    BYTE PTR [edi],dh
  4138af:	ja     0x413877
  4138b1:	inc    ebx
  4138b2:	js     0x413881
  4138b4:	fcomp  st(4)
  4138b6:	jb     0x4138e6
  4138b8:	in     al,dx
  4138b9:	xor    DWORD PTR [ecx+0x44],esp
  4138bc:	dec    edx
  4138bd:	lock sbb al,0x7
  4138c0:	jns    0x413938
  4138c2:	add    BYTE PTR [edx+edi*2-0xc],dl
  4138c6:	push   eax
  4138c7:	mov    eax,0xccf71288
  4138cc:	jge    0x413911
  4138ce:	aas    
  4138cf:	and    al,bl
  4138d1:	jbe    0x4138fe
  4138d3:	outs   dx,DWORD PTR ds:[esi]
  4138d4:	cmp    BYTE PTR [eax+edi*2-0x11],0x4c
  4138d9:	je     0x41390e
  4138db:	or     eax,0x521f437e
  4138e0:	pop    ecx
  4138e1:	or     BYTE PTR [ecx+0x7a8b531f],al
  4138e7:	popf   
  4138e8:	push   eax
  4138e9:	push   0x45bb58
  4138ee:	(bad)  
  4138ef:	enter  0xff5a,0x0
  4138f3:	add    BYTE PTR [ebp-0x7aef276b],ch
  4138f9:	int    0x0
  4138fb:	aaa    
  4138fc:	bound  eax,QWORD PTR [ecx+0x76]
  4138ff:	pop    ds
  413900:	lods   al,BYTE PTR ds:[esi]
  413901:	pop    es
  413902:	cmc    
  413903:	push   0x45d6e5
  413908:	pop    edi
  413909:	pop    edi
  41390a:	(bad)  
  41390b:	ds aaa 
  41390d:	jg     0x4138fa
  41390f:	xor    al,al
  413911:	mov    bh,0x18
  413913:	lds    esi,FWORD PTR [ebp+ecx*8+0x7f]
  413917:	les    eax,FWORD PTR [edi+0x48]
  41391a:	shl    BYTE PTR [ebx+esi*1+0xf],0x49
  41391f:	std    
  413920:	ss push edx
  413922:	dec    ecx
  413923:	lock cwde 
  413925:	mov    esp,0x3390f077
  41392a:	std    
  41392b:	aaa    
  41392c:	jb     0x4139a0
  41392e:	jmp    0x7acd:0xacbe94c
  413935:	mov    dh,0x2
  413937:	das    
  413938:	ins    BYTE PTR es:[edi],dx
  413939:	mov    dh,0x3
  41393b:	jns    0x413931
  41393d:	mov    dh,0x9c
  41393f:	mov    esp,0x7aea2f75
  413944:	sub    al,0x58
  413946:	and    eax,DWORD PTR [edx+0x37]
  413949:	pop    esi
  41394a:	pop    ss
  41394b:	(bad)
  41394f:	js     0x413968
  413951:	stos   DWORD PTR es:[edi],eax
  413952:	adc    eax,0xea727244
  413957:	js     0x413959
  413959:	add    BYTE PTR [edx],cl
  41395b:	stos   BYTE PTR es:[edi],al
  41395c:	clc    
  41395d:	sub    BYTE PTR [ebx+0x3476ee10],ah
  413963:	mov    cl,0xb4
  413965:	in     eax,dx
  413966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413967:	and    ch,BYTE PTR [edx]
  413969:	xor    ebp,0x2c
  41396c:	repnz add esi,DWORD PTR [edi]
  41396f:	stc    
  413970:	test   al,0x72
  413972:	lar    ebp,WORD PTR [edx-0x190da6b3]
  413979:	add    ebx,DWORD PTR [eax-0xc]
  41397c:	repnz sti 
  41397e:	call   0xcf062138
  413983:	ret    
  413984:	pop    edi
  413985:	(bad)  
  413986:	jl     0x413975
  413988:	daa    
  413989:	add    al,0x69
  41398b:	pop    ebp
  41398c:	pop    ss
  41398d:	in     eax,dx
  41398e:	push   es
  41398f:	hlt    
  413990:	gs mov ebx,0x175f0e4b
  413996:	ja     0x413985
  413998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413999:	add    edi,DWORD PTR [esi-0x55d1983e]
  41399f:	inc    eax
  4139a0:	in     eax,dx
  4139a1:	inc    ebx
  4139a2:	and    dh,ch
  4139a4:	add    ecx,esp
  4139a6:	pushf  
  4139a7:	mov    ch,0xfc
  4139a9:	bnd jne 0x4139ee
  4139ac:	icebp  
  4139ad:	adc    dh,BYTE PTR [edi]
  4139af:	dec    ebp
  4139b0:	shl    ecx,0x7c
  4139b3:	mov    ch,0xfc
  4139b5:	jmp    0xf553:0x94f9ab76
  4139bc:	imul   esi,DWORD PTR [eax],0x2d6b0000
  4139c2:	add    ecx,ebp
  4139c4:	xchg   edx,eax
  4139c5:	je     0x41398b
  4139c7:	stos   BYTE PTR es:[edi],al
  4139c8:	xor    al,0xcc
  4139ca:	mov    BYTE PTR [edx+eiz*2],cl
  4139cd:	mov    bh,0x85
  4139cf:	test   eax,0x1c8813c0
  4139d4:	out    0xee,eax
  4139d6:	inc    eax
  4139d7:	jmp    0xe14af0b9
  4139dc:	xor    al,0x34
  4139de:	cld    
  4139df:	in     al,dx
  4139e0:	js     0x4139d1
  4139e2:	inc    eax
  4139e3:	jmp    0xae82331f
  4139e8:	ja     0x413a1e
  4139ea:	jne    0x4139d3
  4139ec:	(bad)  
  4139ed:	jo     0x413a14
  4139ef:	cmc    
  4139f0:	lea    ebp,[edi]
  4139f2:	mov    BYTE PTR [esi-0x1240a98d],ah
  4139f8:	xor    al,0x95
  4139fa:	pop    ebp
  4139fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139fc:	ja     0x413a32
  4139fe:	push   esp
  4139ff:	jb     0x4139dd
  413a01:	mov    al,0xc1
  413a03:	cmc    
  413a04:	jne    0x4139b1
  413a06:	push   ss
  413a07:	sub    edx,esi
  413a09:	jb     0x413a0c
  413a0b:	bound  ecx,QWORD PTR [esp+ecx*2-0x4b330e36]
  413a12:	cld    
  413a13:	ins    BYTE PTR es:[edi],dx
  413a14:	inc    eax
  413a15:	and    eax,0xb6cb5ef9
  413a1a:	adc    BYTE PTR [eax],0xa2
  413a1d:	inc    eax
  413a1e:	or     al,BYTE PTR [eax]
  413a20:	pop    ds
  413a21:	fimul  DWORD PTR [ecx]
  413a23:	or     BYTE PTR [eax],al
  413a25:	add    BYTE PTR [esi+0x5c754e30],cl
  413a2b:	or     al,0xf9
  413a2d:	je     0x413a93
  413a2f:	cmp    ecx,esi
  413a31:	imul   eax,DWORD PTR [edi-0x47],0x5e8e0004
  413a38:	mov    ebx,0x1744940
  413a3d:	call   0x401fa6
  413a42:	out    0x5,eax
  413a44:	pop    ebp
  413a45:	(bad)  
  413a46:	lea    esi,[eax]
  413a48:	pop    ebx
  413a49:	pop    edi
  413a4a:	or     eax,0xadec8a5e
  413a4f:	mov    eax,DWORD PTR [ebp-0x39]
  413a52:	sbb    eax,0x4bff5230
  413a57:	call   0xad8f7a6b
  413a5c:	js     0x413a66
  413a5e:	add    DWORD PTR [eax+0x381ed780],esi
  413a64:	add    DWORD PTR [ebx+0xefcac63],eax
  413a6a:	mov    ch,ch
  413a6c:	add    DWORD PTR [eax],eax
  413a6e:	push   ds
  413a6f:	mov    ebx,0xaf1e1078
  413a74:	add    bl,0xe
  413a77:	cmp    BYTE PTR [ecx],al
  413a79:	call   FWORD PTR [ebx]
  413a7b:	mov    al,0xe4
  413a7d:	retf   0x9fc0
  413a80:	inc    BYTE PTR [ebp-0xeeda62]
  413a86:	jmp    0x413a37
  413a88:	in     al,0xfd
  413a8a:	add    BYTE PTR [eax],al
  413a8c:	pusha  
  413a8d:	lahf   
  413a8e:	inc    BYTE PTR [ebp-0x587f5062]
  413a94:	fidiv  WORD PTR [edi]
  413a96:	add    esi,esi
  413a98:	fwait
  413a99:	inc    ebx
  413a9a:	cld    
  413a9b:	push   ebp
  413a9c:	aaa    
  413a9d:	repnz ins BYTE PTR es:[edi],dx
  413a9f:	push   cs
  413aa0:	ret    0xffc5
  413aa3:	add    esi,DWORD PTR [edi]
  413aa5:	popf   
  413aa6:	jns    0x413a58
  413aa8:	cmp    DWORD PTR [ebp-0x6b740000],esp
  413aae:	jns    0x413b28
  413ab0:	cmp    edx,DWORD PTR [eax]
  413ab2:	mov    ch,0x4
  413ab4:	xor    ebx,DWORD PTR [ebp-0x52fd7f00]
  413aba:	add    BYTE PTR [ecx+0x437d98f2],cl
  413ac0:	aas    
  413ac1:	retf   
  413ac2:	jne    0x413a7e
  413ac4:	aaa    
  413ac5:	lahf   
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	push   ds
  413ac9:	enter  0x7110,0x33
  413acd:	call   0x6af:0x922753af
  413ad4:	cmp    dl,dl
  413ad6:	into   
  413ad7:	add    DWORD PTR [esp+edx*8+0x0],esi
  413adb:	add    al,0x37
  413add:	popf   
  413ade:	sub    edi,DWORD PTR [edi-0x40e45057]
  413ae4:	xchg   ecx,eax
  413ae5:	inc    esp
  413ae6:	dec    DWORD PTR [eax+ebp*8]
  413ae9:	mov    ds:0x4cf00155,al
  413aee:	push   eax
  413aef:	call   0xc0df3af4
  413af4:	out    0xfd,eax
  413af6:	cmp    BYTE PTR [edx],dl
  413af8:	add    dl,BYTE PTR [ecx+0x0]
  413afb:	dec    eax
  413afc:	std    
  413afd:	add    al,dh
  413aff:	ins    BYTE PTR es:[edi],dx
  413b00:	fstp   QWORD PTR [edx+0x12]
  413b03:	ret    0x66e7
  413b06:	ss xchg ebx,eax
  413b08:	fist   DWORD PTR [eax]
  413b0a:	pop    ecx
  413b0b:	test   BYTE PTR [edx],al
  413b0d:	or     eax,0x1559aa0
  413b12:	clc    
  413b13:	dec    esp
  413b14:	push   eax
  413b15:	call   0xea866f8c
  413b1a:	ret    0x9342
  413b1d:	add    DWORD PTR [ebp+0x34],ecx
  413b20:	mov    ebx,0xea4159db
  413b25:	add    esi,DWORD PTR [ebx+esi*2+0xfa0e4bd]
  413b2c:	repnz sbb al,0xfc
  413b2f:	inc    ebx
  413b30:	mov    ebp,0x22f7ce8f
  413b35:	inc    esi
  413b36:	aaa    
  413b37:	pop    es
  413b38:	and    edx,DWORD PTR [eax]
  413b3a:	arpl   WORD PTR [ebp-0x56],ax
  413b3d:	add    ebx,edx
  413b3f:	adc    edi,edi
  413b41:	add    DWORD PTR [esi],eax
  413b43:	mov    bl,0xf5
  413b45:	mov    DWORD PTR [ebp-0xc],0x75fc4ee9
  413b4c:	fiadd  DWORD PTR [ebx]
  413b4e:	add    al,cl
  413b50:	je     0x413b51
  413b52:	pop    edi
  413b53:	dec    ebx
  413b54:	test   BYTE PTR [eax+eax*1],bl
  413b57:	add    BYTE PTR [ecx+0x3703ee37],dh
  413b5d:	inc    ebx
  413b5e:	xchg   ebx,eax
  413b5f:	jp     0x413b94
  413b61:	cmp    dl,ch
  413b63:	add    eax,DWORD PTR [eax-0x7dab5ccb]
  413b69:	pushf  
  413b6a:	mov    esi,0xebb222c8
  413b6f:	mov    al,0xb1
  413b71:	cmp    dh,ch
  413b73:	add    esi,DWORD PTR [edi]
  413b75:	push   ds
  413b76:	jmp    0xf6c55acb
  413b7b:	add    esi,DWORD PTR [edi]
  413b7d:	mov    bh,0xaa
  413b7f:	outs   dx,DWORD PTR ds:[esi]
  413b80:	in     al,0x11
  413b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b83:	push   ecx
  413b84:	mov    dl,0xf8
  413b86:	mov    ds:0x83093745,al
  413b8b:	ud0    eax,DWORD PTR [esi+0x2a]
  413b8f:	add    al,0xb6
  413b91:	xor    BYTE PTR [ecx],al
  413b93:	int    0xcc
  413b95:	mov    al,0x75
  413b97:	int3   
  413b98:	fild   QWORD PTR [eax]
  413b9a:	and    eax,0xfee3dcf1
  413b9f:	pop    esi
  413ba0:	into   
  413ba1:	mov    ch,0xc1
  413ba3:	fld    QWORD PTR [edx+ecx*1-0x78]
  413ba7:	pop    ecx
  413ba8:	mov    ebx,eax
  413baa:	cld    
  413bab:	inc    esi
  413bac:	mov    es,WORD PTR [edi]
  413bae:	cld    
  413baf:	aam    0x70
  413bb1:	inc    esi
  413bb2:	inc    ecx
  413bb3:	jmp    0xe6004ab6
  413bb8:	xor    al,0x9c
  413bba:	fwait
  413bbb:	in     eax,dx
  413bbc:	add    BYTE PTR [eax],al
  413bbe:	xor    eax,0x7298534
  413bc3:	repz push edx
  413bc5:	mov    esi,0xaac3f89f
  413bca:	xor    al,0x7
  413bcc:	cld    
  413bcd:	fsubr  QWORD PTR [esi+eax*2+0x41]
  413bd1:	jmp    0xe5666425
  413bd6:	ins    BYTE PTR es:[edi],dx
  413bd7:	sub    edi,esi
  413bd9:	out    dx,al
  413bda:	pop    edi
  413bdb:	mov    ebx,0x28466cf1
  413be0:	push   ds
  413be1:	shl    ecx,1
  413be3:	scas   al,BYTE PTR es:[edi]
  413be4:	cld    
  413be5:	(bad)  
  413be6:	mov    ebx,0xf31afc41
  413beb:	sbb    DWORD PTR [edx+0x135206f],ecx
  413bf1:	jmp    0xefc4f58c
  413bf6:	or     al,0xb1
  413bf8:	cld    
  413bf9:	ror    DWORD PTR ds:0x67a6fcaf,0xaf
  413c00:	push   ss
  413c01:	mov    ebp,0x3600f422
  413c06:	jge    0x413bb7
  413c08:	es xchg ecx,eax
  413c0a:	cmp    esp,esi
  413c0c:	add    BYTE PTR [eax],al
  413c0e:	inc    ebx
  413c0f:	das    
  413c10:	in     eax,dx
  413c11:	push   esi
  413c12:	pop    ecx
  413c13:	and    dl,BYTE PTR ds:0xfe44d3ff
  413c19:	jne    0x413c05
  413c1b:	fwait
  413c1c:	jo     0x413c26
  413c1e:	pop    ecx
  413c1f:	inc    edx
  413c20:	std    
  413c21:	adc    eax,0x348e0000
  413c26:	mov    dh,al
  413c28:	and    esp,DWORD PTR [ebx+0x64f6177b]
  413c2e:	add    eax,0xc1308e01
  413c33:	je     0x413bbd
  413c35:	push   cs
  413c36:	cld    
  413c37:	push   ebp
  413c38:	dec    ecx
  413c39:	and    cl,BYTE PTR ds:0xe4acc3ff
  413c3f:	push   ss
  413c40:	pop    eax
  413c41:	pushf  
  413c42:	dec    BYTE PTR [ebx-0x3da804b0]
  413c48:	outs   dx,BYTE PTR ds:[esi]
  413c49:	xor    al,0x50
  413c4b:	mov    ebp,DWORD PTR [edx+0x3]
  413c4e:	mov    dh,BYTE PTR [ebp-0x7e]
  413c51:	add    edi,esi
  413c53:	jne    0x413cc3
  413c55:	das    
  413c56:	js     0x413c64
  413c58:	dec    ecx
  413c59:	push   ds
  413c5a:	sbb    eax,0x533cc3ff
  413c5f:	jmp    ebx
  413c61:	inc    edi
  413c62:	push   esi
  413c63:	jmp    ebx
  413c65:	scas   eax,DWORD PTR es:[edi]
  413c66:	std    
  413c67:	adc    eax,0x41460e
  413c6c:	xchg   edi,eax
  413c6d:	cmc    
  413c6e:	sbb    al,0x85
  413c70:	into   
  413c71:	and    eax,0x24e08541
  413c76:	cmp    eax,0xfc3403e8
  413c7b:	call   DWORD PTR [edx-0x7acc8a88]
  413c81:	pop    esi
  413c82:	push   edx
  413c83:	xor    esi,ebp
  413c85:	mov    ch,0xf3
  413c87:	je     0x413c89
  413c89:	add    BYTE PTR [edi],dh
  413c8b:	je     0x413cb4
  413c8d:	pop    ebx
  413c8e:	inc    edi
  413c8f:	dec    edx
  413c90:	and    DWORD PTR [ecx+0x437ed63b],ecx
  413c96:	pop    ss
  413c97:	jb     0x413c57
  413c99:	jb     0x413ccf
  413c9b:	adc    al,0x72
  413c9d:	and    BYTE PTR [ebp-0x64],bl
  413ca0:	jecxz  0x413d15
  413ca2:	pop    ss
  413ca3:	push   ss
  413ca4:	jno    0x413c83
  413ca6:	xor    ecx,DWORD PTR [esi]
  413ca8:	jb     0x413cb2
  413caa:	lahf   
  413cab:	mov    eax,0xdaa8fdea
  413cb0:	pop    ss
  413cb1:	jae    0x413d0a
  413cb3:	lock retf 
  413cb5:	pop    ecx
  413cb6:	lods   al,BYTE PTR ds:[esi]
  413cb7:	fadd   DWORD PTR [ebx*2+0x1cc2c7f1]
  413cbe:	aaa    
  413cbf:	enter  0xec77,0xe9
  413cc3:	push   ebp
  413cc4:	jb     0x413cda
  413cc6:	js     0x413c90
  413cc8:	adc    ch,bh
  413cca:	jmp    0x123e:0x3f73e398
  413cd1:	hlt    
  413cd2:	dec    edx
  413cd3:	fld    QWORD PTR [eax]
  413cd5:	mov    DWORD PTR [edi+0x18],esp
  413cd8:	jmp    0x413d52
  413cda:	sbb    dh,BYTE PTR ds:0x9d360181
  413ce0:	jl     0x413ca2
  413ce2:	retf   
  413ce3:	cmp    BYTE PTR [edx-0x1c5d3d0a],al
  413ce9:	jae    0x413d2a
  413ceb:	jne    0x413c71
  413ced:	inc    BYTE PTR [eax]
  413cef:	add    BYTE PTR [eax],ch
  413cf1:	jle    0x413cca
  413cf3:	push   cs
  413cf4:	lea    ebx,[ebp-0x5e5d02b2]
  413cfa:	jecxz  0x413d6f
  413cfc:	aas    
  413cfd:	jne    0x413d43
  413cff:	sti    
  413d00:	or     dh,bl
  413d02:	ja     0x413cca
  413d04:	popa   
  413d05:	xor    al,0x45
  413d07:	ret    0x3427
  413d0a:	xor    eax,0x3c02e37b
  413d0f:	jnp    0x413d75
  413d11:	dec    eax
  413d12:	xor    esp,edi
  413d14:	fs push esp
  413d16:	outs   dx,DWORD PTR ds:[esi]
  413d17:	push   0x7f5af2b
  413d1c:	shr    BYTE PTR [eax],cl
  413d1e:	ror    BYTE PTR [ebp-0x36],cl
  413d21:	sub    dl,bl
  413d23:	dec    esi
  413d24:	ret    0xf228
  413d27:	out    0x24,al
  413d29:	mov    al,ds:0xbd3743f5
  413d2e:	lods   eax,DWORD PTR ds:[esi]
  413d2f:	pop    es
  413d30:	mov    ah,0x73
  413d32:	aad    0x43
  413d34:	mov    ah,0xa5
  413d36:	mov    esi,0xe7598f46
  413d3b:	add    al,0x37
  413d3d:	mov    eax,0xbae16f2a
  413d42:	hlt    
  413d43:	xor    bl,BYTE PTR [esi-0x48]
  413d46:	sbb    al,0x6f
  413d48:	jmp    0xe654fab7
  413d4d:	cld    
  413d4e:	pop    esi
  413d4f:	dec    DWORD PTR [ebx+0x23a5bc]
  413d55:	add    BYTE PTR [esi],bl
  413d57:	jbe    0x413dd1
  413d59:	add    dh,BYTE PTR [eax+0x3759ca28]
  413d5f:	scas   eax,DWORD PTR es:[edi]
  413d60:	jge    0x413d85
  413d62:	dec    edx
  413d63:	daa    
  413d64:	or     edi,edi
  413d66:	inc    ebx
  413d67:	sub    dl,dh
  413d69:	fild   DWORD PTR [esi-0x51]
  413d6c:	frstpm(287 only) 
  413d6e:	jbe    0x413dc9
  413d70:	pop    ebp
  413d71:	and    al,0xa4
  413d73:	test   DWORD PTR [edi-0x3c5349df],edi
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	cmp    DWORD PTR [ebp-0xbd6fc2b],ebp
  413d80:	add    cl,ch
  413d82:	push   ecx
  413d83:	and    DWORD PTR [ecx+ebp*8],esp
  413d86:	xor    al,0x21
  413d88:	adc    dl,BYTE PTR [ecx-0x16fdcd11]
  413d8e:	jo     0x413e04
  413d90:	jne    0x413d73
  413d92:	shl    DWORD PTR [ecx],cl
  413d94:	or     DWORD PTR [ecx-0x7903562d],eax
  413d9a:	pop    esi
  413d9b:	icebp  
  413d9c:	sbb    al,0x1e
  413d9e:	jns    0x413dab
  413da0:	pop    esi
  413da1:	stos   DWORD PTR es:[edi],eax
  413da2:	aas    
  413da3:	xor    al,0x88
  413da5:	and    eax,0x960c3c17
  413daa:	ja     0x413e04
  413dac:	or     eax,0xd7128cb9
  413db1:	push   esi
  413db2:	xchg   edx,eax
  413db3:	jae    0x413db1
  413db5:	aad    0x40
  413db7:	cmp    al,0xe9
  413db9:	rol    DWORD PTR [eax],0x0
  413dbc:	outs   dx,BYTE PTR ds:[esi]
  413dbd:	scas   eax,DWORD PTR es:[edi]
  413dbe:	cld    
  413dbf:	sub    ch,ch
  413dc1:	outs   dx,DWORD PTR ds:[esi]
  413dc2:	addr16 loope 0x413d58
  413dc5:	popa   
  413dc6:	mov    ebp,0xfc33f627
  413dcb:	cld    
  413dcc:	or     al,0x42
  413dce:	inc    ecx
  413dcf:	jmp    0xfcb6b1c5
  413dd4:	stos   DWORD PTR es:[edi],eax
  413dd5:	hlt    
  413dd6:	and    BYTE PTR [edx+0x2e016d33],bh
  413ddc:	repz push edi
  413dde:	pusha  
  413ddf:	(bad)  
  413de0:	cmc    
  413de1:	xor    eax,esp
  413de3:	test   eax,0xe9013b2c
  413de8:	xor    al,0x73
  413dea:	mov    bh,ch
  413dec:	mov    ecx,0xae047573
  413df1:	inc    BYTE PTR [eax+eiz*1]
  413df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413df5:	cmp    ecx,DWORD PTR [edx+0x54]
  413df8:	sub    ebp,edi
  413dfa:	call   0xff9327ff
  413dff:	jmp    ebp
  413e01:	scas   al,BYTE PTR es:[edi]
  413e02:	dec    esp
  413e03:	call   0x3dd5da
  413e08:	rcr    DWORD PTR [esi-0x17],1
  413e0b:	sub    esp,esi
  413e0d:	xchg   edi,eax
  413e0e:	inc    BYTE PTR [ebx+0x668230f8]
  413e14:	fidiv  DWORD PTR [eax]
  413e16:	ret    0x5555
  413e19:	test   DWORD PTR [edx+0x60b3e2ec],eax
  413e1f:	hlt    
  413e20:	add    BYTE PTR [eax],al
  413e22:	fidiv  WORD PTR [ebx-0x12107a0]
  413e28:	push   ebp
  413e29:	mov    eax,DWORD PTR [esi-0x77]
  413e2c:	xchg   edx,eax
  413e2d:	call   DWORD PTR [ecx-0x68]
  413e30:	mov    dh,al
  413e32:	sbb    ebx,DWORD PTR [edi+0x58744a75]
  413e38:	imul   ecx,DWORD PTR [eax+ecx*4-0x10],0xff5f6a00
  413e40:	call   0x173c366
  413e45:	test   DWORD PTR [esi+0x1e],ebx
  413e48:	sub    al,0x8b
  413e4a:	fld    TBYTE PTR [eax+0x6e050683]
  413e50:	or     eax,0x89ac9889
  413e55:	inc    ebp
  413e56:	outs   dx,BYTE PTR ds:[esi]
  413e57:	sub    DWORD PTR [ebx+0xc],eax
  413e5a:	aad    0xaf
  413e5c:	push   0x4
  413e5e:	mov    eax,0x19f47029
  413e63:	outs   dx,BYTE PTR ds:[esi]
  413e64:	stc    
  413e65:	add    bl,BYTE PTR [esi+0x30]
  413e68:	add    DWORD PTR [ecx-0x2a16bf68],ecx
  413e6e:	inc    edx
  413e6f:	add    DWORD PTR ss:[ebx+0xf83ac60],ecx
  413e76:	aaa    
  413e77:	push   ss
  413e78:	fucomp st(1)
  413e7a:	cs arpl bp,bp
  413e7d:	mov    edx,0x6ae072fe
  413e82:	adc    ecx,DWORD PTR [ebx-0x6e]
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [ebx],al
  413e89:	jbe    0x413eee
  413e8b:	std    
  413e8c:	add    bl,bl
  413e8e:	mov    ebp,es
  413e90:	pop    eax
  413e91:	repz int 0xc2
  413e94:	inc    ebx
  413e95:	popf   
  413e96:	cmp    DWORD PTR [ecx+0x1cf11cdb],ecx
  413e9c:	cmp    ebx,DWORD PTR [ebp-0x107eaf00]
  413ea2:	mov    ebx,0x1880d055
  413ea7:	adc    dh,BYTE PTR [edi-0x63]
  413eaa:	cmp    eax,0xffffffc0
  413ead:	mov    eax,ds:0x8927a85c
  413eb2:	or     eax,0xc5058089
  413eb7:	dec    ecx
  413eb8:	aaa    
  413eb9:	popf   
  413eba:	jmp    0x413ec2
  413ebc:	or     ch,dh
  413ebe:	lea    ecx,[eax+0x37]
  413ec1:	popf   
  413ec2:	test   al,al
  413ec4:	or     dh,BYTE PTR [eax-0x75]
  413ec7:	(bad)
  413eca:	add    eax,0x92083700
  413ecf:	in     al,dx
  413ed0:	jp     0x413f24
  413ed2:	loopne 0x413ebc
  413ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ed5:	inc    DWORD PTR ds:0xf118ba00
  413edb:	sti    
  413edc:	pusha  
  413edd:	cmp    dh,BYTE PTR ds:0xf41d42fd
  413ee3:	aas    
  413ee4:	aaa    
  413ee5:	sbb    BYTE PTR [edx-0xc],bl
  413ee8:	(bad)  
  413ee9:	call   0x3537:0x5
  413ef0:	(bad)  
  413ef1:	shl    BYTE PTR [esi],cl
  413ef3:	xor    al,0xea
  413ef5:	nop
  413ef6:	mov    ah,0x8f
  413ef8:	(bad)  
  413efa:	sub    al,BYTE PTR [eax+eax*2]
  413efd:	add    al,0xae
  413eff:	jno    0x413f3b
  413f01:	xchg   ecx,eax
  413f02:	mov    ah,0x97
  413f04:	(bad)
  413f07:	add    al,0xbb
  413f09:	clc    
  413f0a:	js     0x413f52
  413f0c:	sub    al,BYTE PTR [esp+esi*4]
  413f0f:	jae    0x413f47
  413f11:	add    BYTE PTR [ebp-0x24778acb],cl
  413f17:	scas   al,BYTE PTR es:[edi]
  413f18:	fwait
  413f19:	loop   0x413ea2
  413f1b:	add    edx,DWORD PTR [ebx+0x2a461cf8]
  413f21:	add    al,0xac
  413f23:	mov    al,0x8e
  413f25:	(bad)  
  413f27:	stos   BYTE PTR es:[edi],al
  413f28:	sbb    ch,ah
  413f2a:	pop    ss
  413f2b:	cld    
  413f2c:	jmp    0xde620134
  413f31:	loop   0x413f77
  413f33:	cmp    al,0xbb
  413f35:	jmp    0x413f38
  413f37:	bnd jmp 0xddb4f240
  413f3d:	jmp    FWORD PTR [eax-0xf]
  413f40:	stc    
  413f41:	pop    eax
  413f42:	xor    al,0xb4
  413f44:	aas    
  413f45:	or     eax,0xf3d2420b
  413f4a:	push   ebx
  413f4b:	xor    al,0xea
  413f4d:	loop   0x413f73
  413f4f:	xchg   esp,eax
  413f50:	fadd   DWORD PTR [ebx+0x0]
  413f53:	add    BYTE PTR [edi],dh
  413f55:	stos   BYTE PTR es:[edi],al
  413f56:	daa    
  413f57:	in     al,dx
  413f58:	add    ebp,DWORD PTR [ebx+0x34a7e21b]
  413f5e:	inc    DWORD PTR [eiz*1+0x703eac74]
  413f65:	jne    0x413f5d
  413f67:	add    esp,esp
  413f69:	mov    esi,0x435b860e
  413f6e:	add    DWORD PTR [edx+0x123000fe],ebx
  413f74:	add    DWORD PTR [ecx-0xc16b2ca],ebp
  413f7a:	add    BYTE PTR [eax+eax*4-0x60],ch
  413f7e:	jmp    0x175acc7
  413f83:	repz and BYTE PTR gs:[ebx+0x0],ah
  413f88:	push   eax
  413f89:	cmp    al,0x76
  413f8b:	fcom   QWORD PTR [edi]
  413f8d:	adc    DWORD PTR es:[edx+0x60],esp
  413f91:	cmp    ah,bh
  413f93:	xor    al,0xdb
  413f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f96:	jbe    0x413f35
  413f98:	jecxz  0x413f41
  413f9a:	sti    
  413f9b:	sahf   
  413f9c:	(bad)  
  413f9d:	mov    esi,0xa07864d9
  413fa2:	jmp    0x175af84
  413fa7:	xchg   edx,eax
  413fa8:	jns    0x413f65
  413faa:	jle    0x413f2d
  413fac:	push   cs
  413fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fae:	jbe    0x41402d
  413fb0:	shr    DWORD PTR [eax-0x44299127],cl
  413fb6:	icebp  
  413fb7:	je     0x413fb9
  413fb9:	add    al,bh
  413fbb:	lahf   
  413fbc:	jmp    0x1753d16
  413fc1:	ins    BYTE PTR es:[edi],dx
  413fc2:	jge    0x413fe4
  413fc4:	sub    ecx,eax
  413fc6:	fisubr WORD PTR [ecx+0x2597e9fc]
  413fcc:	or     DWORD PTR [esi-0x12ed63b2],edx
  413fd2:	xor    eax,0xdf298534
  413fd7:	ss cld 
  413fd9:	pushf  
  413fda:	add    BYTE PTR fs:[eax-0x16fdc764],cl
  413fe1:	push   eax
  413fe2:	push   ebp
  413fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fe4:	cld    
  413fe5:	arpl   WORD PTR [ebx-0x69ff16fe],bx
  413feb:	in     eax,dx
  413fec:	(bad)  
  413fed:	inc    esp
  413fef:	outs   dx,BYTE PTR ds:[esi]
  413ff0:	pop    esi
  413ff1:	pop    esi
  413ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ff3:	jle    0x413fb4
  413ff5:	or     al,0x4e
  413ff7:	bound  ecx,QWORD PTR [edx-0x66e6214]
  413ffd:	cmp    edx,0xffffffa8
  414000:	push   ecx
  414001:	push   esi
  414002:	popa   
  414003:	sbb    bl,BYTE PTR [ecx]
  414005:	call   0x402d14
  41400a:	or     eax,0x42c73a94
  41400f:	cmp    DWORD PTR [edx+0x9b01a4d],ecx
  414015:	call   DWORD PTR [edi-0x3174ef03]
  41401b:	xchg   edi,eax
  41401c:	push   DWORD PTR [edx]
  41401e:	add    BYTE PTR [eax],al
  414020:	rol    BYTE PTR [edi-0xa],0x74
  414024:	xor    ebp,DWORD PTR [ebx+0x69]
  414027:	or     dh,0x34
  41402a:	add    DWORD PTR [edx-0x1e],ebp
  41402d:	imul   esp,DWORD PTR [edi+0x1],0x26
  414031:	xor    BYTE PTR [ecx],al
  414033:	add    BYTE PTR [esi+0x49087093],cl
  414039:	mov    ds:0x34de12b0,al
  41403e:	test   BYTE PTR [esi],al
  414040:	sbb    eax,0xce74fe8d
  414045:	fs jmp 0x176112f
  41404b:	mov    eax,DWORD PTR [esi+0x50]
  41404e:	(bad)  
  41404f:	mov    edx,edx
  414051:	push   eax
  414052:	and    DWORD PTR [ecx-0x7cdaaf5e],ecx
  414058:	inc    edi
  414059:	xchg   esp,eax
  41405a:	jne    0x414085
  41405c:	outs   dx,BYTE PTR gs:[esi]
  41405e:	push   cs
  41405f:	test   ch,dh
  414061:	xor    al,0x1
  414063:	add    BYTE PTR [edi],dh
  414065:	jmp    0x6a30:0xab13448b
  41406c:	cmp    ah,BYTE PTR [eax]
  41406e:	inc    esp
  41406f:	and    al,0x2b
  414071:	retf   
  414072:	loope  0x4140aa
  414074:	scas   al,BYTE PTR es:[edi]
  414075:	push   ds
  414076:	and    al,0x2c
  414078:	scas   al,BYTE PTR es:[edi]
  414079:	push   ss
  41407a:	and    al,0x30
  41407c:	xor    BYTE PTR [ecx-0x6288edb4],ch
  414082:	mov    eax,eax
  414084:	add    BYTE PTR [eax],al
  414086:	stos   BYTE PTR es:[edi],al
  414087:	stos   DWORD PTR es:[edi],eax
  414088:	call   0xde7863
  41408d:	xor    edi,esi
  41408f:	dec    esi
  414090:	cmp    ebx,DWORD PTR [ecx-0x44]
  414093:	jo     0x4140d7
  414095:	ret    0x9d2f
  414098:	paddw  mm7,QWORD PTR [esi]
  41409b:	pop    ecx
  41409c:	sub    DWORD PTR [eax+eax*2],ecx
  41409f:	sbb    DWORD PTR [ebx+0x0],edi
  4140a2:	aaa    
  4140a3:	popf   
  4140a4:	jg     0x414122
  4140a6:	sbb    edx,DWORD PTR [ecx+0x12487309]
  4140ac:	inc    ecx
  4140ad:	and    al,0x27
  4140af:	jmp    0x5c8e:0xdd040c41
  4140b6:	sbb    ecx,DWORD PTR [ebp-0x7aeca401]
  4140bc:	xchg   eax,edi
  4140be:	inc    esp
  4140bf:	xchg   ecx,eax
  4140c0:	and    al,0x1c
  4140c2:	mov    ah,0x5a
  4140c4:	or     dl,BYTE PTR [ecx]
  4140c6:	lahf   
  4140c7:	inc    edx
  4140c8:	popa   
  4140c9:	and    al,0x53
  4140cb:	jle    0x414114
  4140cd:	jb     0x414108
  4140cf:	xor    al,BYTE PTR [ecx+0x24]
  4140d2:	push   edi
  4140d3:	fidivr WORD PTR [edi]
  4140d5:	jg     0x4140da
  4140d7:	cmp    ebp,esi
  4140d9:	(bad)  
  4140da:	js     0x414119
  4140dc:	add    eax,0x90342e75
  4140e1:	add    al,0x7
  4140e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140e4:	xchg   esi,eax
  4140e5:	daa    
  4140e6:	aas    
  4140e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140e8:	fsub   st(3),st
  4140ea:	add    BYTE PTR [eax],al
  4140ec:	fs icebp 
  4140ee:	jmp    0x7eb5fbf6
  4140f3:	jbe    0x4140d2
  4140f5:	xor    ebp,DWORD PTR [ebp+0x48]
  4140f8:	sbb    eax,DWORD PTR [edx+ebx*4+0x69]
  4140fc:	xor    al,0xb9
  4140fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ff:	daa    
  414100:	push   ebx
  414101:	add    al,0xe3
  414103:	adc    eax,0x300607b0
  414108:	mov    eax,0x1a140e27
  41410d:	inc    ecx
  41410e:	push   ds
  41410f:	repnz push eax
  414111:	xor    al,0x6d
  414113:	ret    
  414114:	test   BYTE PTR [ecx-0x58fdac2f],dh
  41411a:	mov    bl,0x12
  41411c:	cli    
  41411d:	(bad)  
  41411e:	stos   BYTE PTR es:[edi],al
  41411f:	push   edi
  414120:	sbb    edx,DWORD PTR [ebx+eiz*4+0x57]
  414124:	adc    edx,DWORD PTR [ebx+ebx*4+0x15]
  414128:	iret   
  414129:	jmp    0x414158
  41412b:	add    al,0x37
  41412d:	mov    al,0xaa
  41412f:	push   cs
  414130:	mov    ebx,0xcade82fd
  414135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414136:	mov    ah,0xde
  414138:	and    al,0x60
  41413a:	fadd   DWORD PTR [ebx+0x37]
  41413d:	mov    cl,0xaa
  41413f:	push   cs
  414140:	mov    ebx,0xaade62ed
  414145:	(bad)  
  414146:	mov    dl,0x36
  414148:	mov    ds:0xf475425d,al
  41414d:	xor    ebp,edx
  41414f:	xchg   DWORD PTR [eax],eax
  414151:	add    BYTE PTR [edi+0x36],dh
  414154:	outs   dx,BYTE PTR ds:[esi]
  414155:	pop    ss
  414156:	mov    ah,BYTE PTR [esi+0x3bf1823b]
  41415c:	add    DWORD PTR [esi],esi
  41415e:	mov    ch,0xf5
  414160:	or     al,0x2e
  414162:	mov    ebp,0x89d5ea6d
  414167:	test   al,0xfc
  414169:	jb     0x4141a5
  41416b:	mov    ch,0xf9
  41416d:	push   ss
  41416e:	add    BYTE PTR [ecx],bh
  414170:	push   ecx
  414171:	push   cs
  414172:	dec    edi
  414173:	(bad)  
  414174:	pop    gs
  414176:	xor    al,0xa9
  414178:	xor    edi,esi
  41417a:	dec    eax
  41417b:	outs   dx,BYTE PTR ds:[esi]
  41417c:	pop    gs
  41417e:	xor    al,0xfe
  414180:	call   0xfce92ba2
  414185:	jb     0x414178
  414187:	jae    0x4141df
  414189:	jb     0x4141b2
  41418b:	mov    ah,0xed
  41418d:	or     DWORD PTR [ecx+ebp*1+0x5434e90d],esi
  414194:	add    DWORD PTR [edx],ebx
  414196:	inc    edx
  414197:	aaa    
  414198:	test   BYTE PTR [edi-0x49fecbc5],ch
  41419e:	and    DWORD PTR [ebp+eiz*2-0x75cbc4dc],ebx
  4141a5:	sub    al,0xd3
  4141a7:	push   ebx
  4141a8:	mov    edi,0x80902870
  4141ad:	xchg   ecx,eax
  4141ae:	cli    
  4141af:	aaa    
  4141b0:	test   DWORD PTR [edi+0x3b],edx
  4141b3:	xor    al,0x1
  4141b5:	adc    eax,DWORD PTR [eax]
  4141b7:	add    BYTE PTR ds:0x61ad863,dh
  4141bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141be:	xor    eax,DWORD PTR [ecx-0x16ff0eef]
  4141c4:	mov    eax,0xd46d0c74
  4141c9:	xor    al,0x1
  4141cb:	jmp    0xb4caa053
  4141d0:	jnp    0x41416e
  4141d2:	xor    eax,0x8a3434a4
  4141d7:	add    bl,bl
  4141d9:	cdq    
  4141da:	and    al,dl
  4141dc:	pop    es
  4141dd:	pop    ebp
  4141de:	in     eax,dx
  4141df:	add    DWORD PTR [esi-0x79],0x75
  4141e3:	ja     0x414259
  4141e5:	mov    BYTE PTR cs:[ebp+0x4e],al
  4141e9:	arpl   WORD PTR [ecx-0x1],dx
  4141ec:	imul   ebp,DWORD PTR [ecx-0x43b1bfea],0x43
  4141f3:	adc    BYTE PTR [ebp-0x12],ch
  4141f6:	or     al,0x8b
  4141f8:	jae    0x4141c3
  4141fa:	cmovo  ecx,DWORD PTR [esi-0x4c]
  4141fe:	lds    ecx,FWORD PTR [ebx*4-0x6c0fbf46]
  414205:	in     eax,dx
  414206:	clc    
  414207:	push   eax
  414208:	test   BYTE PTR ds:0x60fe4588,ch
  41420e:	(bad)  
  41420f:	ss add eax,esp
  414212:	add    al,0x6a
  414215:	dec    edi
  414216:	cmp    BYTE PTR [ebp-0xa],0x2d
  41421a:	jo     0x41423d
  41421c:	add    BYTE PTR [eax],al
  41421e:	sbb    eax,0x1ef840b5
  414223:	xchg   DWORD PTR [eax+0xc],esi
  414226:	mov    eax,ds:0x8ff08fd
  41422b:	mov    dh,dl
  41422d:	test   DWORD PTR [esi+0xb8b0afc],ecx
  414233:	inc    esp
  414234:	xor    al,0x45
  414236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414237:	std    
  414238:	add    al,dh
  41423a:	sbb    eax,DWORD PTR [edi+0x63e8eafc]
  414240:	(bad)  
  414241:	jne    0x4141f5
  414243:	xchg   DWORD PTR [eax-0x18],esi
  414246:	and    DWORD PTR [edi],edi
  414248:	jmp    0x1721ced
  41424d:	dec    DWORD PTR [eax-0x79]
  414250:	adc    BYTE PTR [edi+esi*1],dh
  414253:	test   eax,0x3c900040
  414258:	ficom  WORD PTR [ebx]
  41425a:	(bad)  
  41425b:	mov    BYTE PTR [eax+0x0],al
  41425e:	in     al,0x65
  414260:	push   ebx
  414261:	in     al,0x78
  414263:	out    0xe0,eax
  414265:	std    
  414266:	sub    ebx,esi
  414268:	add    DWORD PTR [edi+esi*1-0x65],0x4160438a
  414270:	add    dh,BYTE PTR [edx]
  414272:	ja     0x414251
  414274:	cmp    edi,eax
  414276:	jne    0x41420a
  414278:	add    BYTE PTR [ebx-0x44],dl
  41427b:	ds and esp,0x18ec193f
  414282:	add    BYTE PTR [eax],al
  414284:	in     al,0xc5
  414286:	fnsave [esi]
  414288:	pop    ds
  414289:	cmove  eax,DWORD PTR [eax]
  41428c:	aaa    
  41428d:	sbb    cl,BYTE PTR es:[ebp+eax*2+0x4d]
  414292:	add    eax,0x4d76fc31
  414297:	aaa    
  414298:	jae    0x4142d3
  41429a:	or     DWORD PTR [esi+edx*4+0xe],esi
  41429e:	pop    ecx
  41429f:	and    al,0x33
  4142a1:	cwde   
  4142a2:	pop    es
  4142a3:	or     esp,0xffffff8d
  4142a6:	add    BYTE PTR [eax],al
  4142a8:	mov    esp,0x24102159
  4142ad:	push   ebx
  4142ae:	cmc    
  4142af:	xchg   BYTE PTR [ebx+0x79],bh
  4142b2:	lock cmp dh,BYTE PTR [edi]
  4142b5:	lea    esp,[eax]
  4142b7:	add    BYTE PTR [eax+0x1a],al
  4142ba:	jb     0x4142bc
  4142bc:	aaa    
  4142bd:	(bad)  
  4142be:	rol    BYTE PTR [ebx+ebx*1-0x77],cl
  4142c2:	add    eax,0xc3e63373
  4142c7:	jae    0x414336
  4142c9:	aaa    
  4142ca:	push   es
  4142cb:	push   ecx
  4142cc:	pop    es
  4142cd:	xor    al,0x63
  4142cf:	adc    cl,BYTE PTR [edi+0x3703a640]
  4142d5:	mov    eax,0xa30e502a
  4142da:	adc    al,0xec
  4142dc:	pop    eax
  4142dd:	clc    
  4142de:	jmp    0xa6ee28e6
  4142e3:	pop    ds
  4142e4:	sbb    esi,DWORD PTR [ecx+0x1fae]
  4142ea:	inc    edi
  4142eb:	add    al,0xc0
  4142ed:	add    BYTE PTR [eax+edi*8-0x5d0f0833],bh
  4142f4:	aam    0x8c
  4142f6:	add    ebx,DWORD PTR [eax-0x26]
  4142f9:	fisubr DWORD PTR [edx-0x47]
  4142fc:	sub    dl,BYTE PTR [ecx-0x52]
  4142ff:	(bad)  
  414300:	popf   
  414301:	xchg   BYTE PTR [edi-0x5d],ch
  414304:	(bad)  
  414306:	out    0x8b,eax
  414308:	mov    edx,0x5fa332b0
  41430d:	mov    esp,0x405e7eb4
  414312:	lea    esi,[ebp*2+0x3a44533f]
  414319:	fisttp DWORD PTR [ebx+0xa36f258]
  41431f:	push   0xffffffc3
  414321:	mov    dl,0xb4
  414323:	jae    0x41435b
  414325:	cs scas al,BYTE PTR es:[edi]
  414327:	test   DWORD PTR ds:0x5f82e08,0x105465f4
  414331:	add    eax,0x8ef228e2
  414336:	out    dx,al
  414337:	mov    ecx,DWORD PTR [esi+0x65a2d2b7]
  41433d:	ret    
  41433e:	inc    ebx
  41433f:	inc    esp
  414340:	outs   dx,DWORD PTR ds:[esi]
  414341:	inc    edi
  414342:	sbb    edi,DWORD PTR [ecx+esi*2]
  414345:	dec    ecx
  414346:	das    
  414347:	scas   eax,DWORD PTR es:[edi]
  414348:	add    DWORD PTR ds:0x1f8a4057,esp
  41434e:	add    BYTE PTR [eax],al
  414350:	aas    
  414351:	lea    ecx,[ecx]
  414353:	mov    edx,0x5ed6398c
  414358:	jge    0x4143be
  41435a:	shl    DWORD PTR [esi-0x531952af],0x72
  414361:	aaa    
  414362:	add    DWORD PTR [ecx+esi*4+0x5c45808f],ebx
  414369:	mov    ah,0xed
  41436b:	aad    0xc1
  41436d:	stc    
  41436e:	or     BYTE PTR [edx],cl
  414370:	cmc    
  414371:	das    
  414372:	push   eax
  414373:	fisub  DWORD PTR [ecx+0x29c55dab]
  414379:	mov    ch,0xf9
  41437b:	push   ss
  41437c:	cmp    eax,0x34e9a1b8
  414381:	xor    al,0xfc
  414383:	mov    edi,0xe940ae4c
  414388:	xor    al,0xbb
  41438a:	inc    ebp
  41438b:	int    0x2c
  41438d:	push   ebp
  41438e:	mov    edi,0x1d585860
  414393:	push   0x3
  414395:	mov    al,ds:0x34b5650c
  41439a:	add    ecx,ebp
  41439c:	dec    ebx
  41439d:	lahf   
  41439e:	jae    0x41437d
  4143a0:	out    dx,eax
  4143a1:	sub    cl,BYTE PTR [ecx]
  4143a3:	(bad)  
  4143a4:	and    eax,0x332a4d8c
  4143a9:	xor    al,0x85
  4143ab:	test   eax,0x5c502887
  4143b0:	ja     0x41440a
  4143b2:	adc    DWORD PTR [ecx],edi
  4143b4:	add    BYTE PTR [eax],al
  4143b6:	push   ecx
  4143b7:	xor    eax,0x4017258e
  4143bc:	push   ecx
  4143bd:	xchg   esi,eax
  4143be:	and    eax,0xc11d169f
  4143c3:	popa   
  4143c4:	add    DWORD PTR [eax],eax
  4143c6:	push   ebx
  4143c7:	js     0x41443e
  4143c9:	dec    ebx
  4143ca:	dec    ebp
  4143cb:	cld    
  4143cc:	and    al,0xc
  4143ce:	mov    ds:0x4a8044f2,eax
  4143d3:	push   esp
  4143d4:	adc    eax,0x737cdd01
  4143d9:	or     al,0xf9
  4143db:	add    eax,0x9030ff09
  4143e0:	adc    BYTE PTR [ebx-0x62],al
  4143e3:	xor    eax,0x5ac2c085
  4143e8:	push   edx
  4143e9:	(bad)  
  4143ea:	rol    BYTE PTR [ecx+0x11],cl
  4143ed:	push   eax
  4143ee:	je     0x414392
  4143f0:	xchg   DWORD PTR [edx+esi*1-0x64],eax
  4143f4:	dec    esp
  4143f5:	inc    DWORD PTR [eax+0x5cb8107c]
  4143fb:	cmc    
  4143fc:	add    BYTE PTR [ebp-0x7ceafbe2],al
  414402:	mov    edx,0xc3050d41
  414407:	cmp    esi,edi
  414409:	cmp    DWORD PTR ss:[edx+0x34de12ac],edx
  414410:	ret    
  414411:	inc    esp
  414412:	repnz das 
  414414:	cld    
  414415:	push   edx
  414416:	sbb    ecx,esi
  414418:	and    al,0x20
  41441a:	add    BYTE PTR [eax],al
  41441c:	stc    
  41441d:	lock and al,0x20
  414420:	jmp    0x5d162d67
  414425:	cmp    BYTE PTR [ecx],al
  414427:	mov    dl,BYTE PTR [edx+0x54]
  41442a:	or     bl,BYTE PTR [ebx-0x7b]
  41442d:	sbb    BYTE PTR [eax-0x3d],0xed
  414431:	ins    DWORD PTR es:[edi],dx
  414432:	or     BYTE PTR [di+0x76],dl
  414436:	push   edi
  414437:	test   al,0xcf
  414439:	lock add edx,ecx
  41443c:	(bad)  
  41443d:	xor    DWORD PTR [ecx],esp
  41443f:	xor    DWORD PTR [edi],0x3
  414442:	jecxz  0x41442d
  414444:	xor    eax,0x4a4ae8dc
  414449:	leave  
  41444a:	xchg   DWORD PTR [edx+ebp*4],eax
  41444d:	sub    al,dl
  41444f:	inc    ecx
  414450:	aaa    
  414451:	dec    esp
  414452:	xor    bh,0x37
  414455:	mov    WORD PTR [eax],es
  414457:	add    BYTE PTR ds:0x75ff8ff4,ah
  41445d:	or     eax,0xa60a001a
  414462:	push   0xd08b3740
  414467:	push   0x36
  414469:	test   DWORD PTR [eax],eax
  41446b:	push   0x37
  41446d:	leave  
  41446e:	fst    DWORD PTR [ebx]
  414470:	cmp    edi,DWORD PTR [ebx+0x40]
  414473:	add    BYTE PTR [edx+0x16034b4a],dh
  414479:	xchg   ecx,eax
  41447a:	push   ss
  41447b:	shl    BYTE PTR [edx+edi*8-0x2],0xc0
  414480:	add    BYTE PTR [eax],al
  414482:	mov    esi,0xff4808d0
  414487:	mov    BYTE PTR [edi],0x81
  41448a:	sbb    DWORD PTR [ebx-0x74cc997b],ecx
  414490:	in     eax,dx
  414491:	aas    
  414492:	mov    ah,0x97
  414494:	fld    DWORD PTR [eax+0x41c23d6a]
  41449a:	aaa    
  41449b:	lea    edx,[ecx+0x33]
  41449e:	cmp    BYTE PTR [esi-0x728b3b0b],0x2b
  4144a5:	std    
  4144a6:	and    ah,ch
  4144a8:	out    dx,eax
  4144a9:	aas    
  4144aa:	aaa    
  4144ab:	or     eax,0x4af1d01a
  4144b0:	add    eax,0xe87e6a00
  4144b5:	jp     0x41449f
  4144b7:	into   
  4144b8:	aam    0x84
  4144ba:	div    DWORD PTR [esi+ebx*1]
  4144bd:	push   es
  4144be:	mov    dh,0x59
  4144c0:	mov    dh,0xbe
  4144c2:	jbe    0x4144f8
  4144c4:	jmp    0x3743:0xa48434bd
  4144cb:	xor    eax,0x8024d71b
  4144d0:	fadd   DWORD PTR [ebx+0x37]
  4144d3:	call   FWORD PTR [esi-0x42]
  4144d6:	jbe    0x4144de
  4144d8:	pop    edi
  4144d9:	aam    0xae
  4144db:	div    cl
  4144dd:	dec    ebx
  4144de:	out    dx,eax
  4144df:	daa    
  4144e0:	std    
  4144e1:	mov    bh,cl
  4144e3:	aaa    
  4144e4:	ins    DWORD PTR es:[edi],dx
  4144e5:	les    eax,FWORD PTR [eax]
  4144e7:	add    BYTE PTR [ebx],al
  4144e9:	aaa    
  4144ea:	mov    edx,0xda4424d6
  4144ef:	inc    ebx
  4144f0:	aaa    
  4144f1:	stos   DWORD PTR es:[edi],eax
  4144f2:	hlt    
  4144f3:	sub    BYTE PTR [ecx+0x28],0xe1
  4144f7:	imul   esi,DWORD PTR [edi],0x38f12b06
  4144fd:	inc    esp
  4144fe:	stos   BYTE PTR es:[edi],al
  4144ff:	add    edi,ecx
  414501:	jb     0x4144b8
  414503:	mov    ah,BYTE PTR [ebx+0x5]
  414506:	mov    bh,0x2d
  414508:	mov    esi,0x2f3e5fa4
  41450d:	in     al,dx
  41450e:	mov    cl,0x2e
  414510:	ret    
  414511:	add    BYTE PTR [edx],dl
  414513:	dec    ebx
  414514:	xor    bl,BYTE PTR [edi+0x28f77ff3]
  41451a:	out    0x11,al
  41451c:	test   DWORD PTR [edx+0x38998964],0x3f48bb17
  414526:	pop    ebp
  414527:	adc    al,0xbe
  414529:	cmc    
  41452a:	loope  0x414556
  41452c:	mul    BYTE PTR [edi]
  41452e:	test   BYTE PTR [ebx-0x7c],0x44
  414532:	mov    ds:0x137f340,eax
  414537:	imul   esi,DWORD PTR [esp+esi*1],0xf2a1e6e8
  41453e:	cld    
  41453f:	jmp    0x504:0x360133b4
  414546:	cld    
  414547:	sbb    al,0xef
  414549:	mov    al,ds:0x8e33
  41454e:	(bad)  
  41454f:	sub    dl,BYTE PTR [ecx]
  414551:	sub    DWORD PTR [ebx],esi
  414553:	mov    bl,0xc1
  414555:	hlt    
  414556:	mov    al,0xb5
  414558:	sbb    al,0x82
  41455a:	jne    0x414560
  41455c:	cld    
  41455d:	hlt    
  41455e:	cmp    BYTE PTR [ecx+0x6881f176],ah
  414564:	cld    
  414565:	hlt    
  414566:	mov    al,ds:0xfce9412e
  41456b:	test   al,0xd9
  41456d:	bnd je 0x414563
  414570:	out    0x17,eax
  414572:	lods   al,BYTE PTR ds:[esi]
  414573:	xor    eax,0x77452230
  414578:	cmp    dl,BYTE PTR [eax+esi*1+0x27621c26]
  41457f:	sub    al,0xc
  414581:	pop    edi
  414582:	dec    eax
  414583:	sub    eax,0x91bb3930
  414588:	cld    
  414589:	jmp    0x20379c2
  41458e:	sub    al,0x65
  414590:	add    eax,0x4078d45c
  414595:	jmp    0xe58fa115
  41459a:	xchg   BYTE PTR [ebp-0x76],bh
  41459d:	out    0xc4,eax
  41459f:	popf   
  4145a0:	pop    ebx
  4145a1:	inc    edi
  4145a2:	pop    esi
  4145a3:	jne    0x414564
  4145a5:	icebp  
  4145a6:	xor    al,0x1
  4145a8:	mov    ch,al
  4145aa:	inc    esp
  4145ab:	stos   DWORD PTR es:[edi],eax
  4145ac:	push   ecx
  4145ad:	loope  0x414568
  4145af:	jmp    0x4e47:0xfb
  4145b6:	jne    0x4145fc
  4145b8:	pop    ebp
  4145b9:	mov    al,BYTE PTR [ecx]
  4145bb:	je     0x41458f
  4145bd:	jmp    0x41462e
  4145bf:	adc    BYTE PTR [ecx-0x31eb02a3],bl
  4145c5:	xor    DWORD PTR [ecx],eax
  4145c7:	jmp    0x4145a2
  4145c9:	loopne 0x41460b
  4145cb:	cld    
  4145cc:	into   
  4145cd:	xor    DWORD PTR [ecx],eax
  4145cf:	add    BYTE PTR [ebp-0x8],dl
  4145d2:	add    al,0x8b
  4145d4:	mov    ebx,0xaac08085
  4145d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145da:	push   0x0
  4145dc:	adc    esi,ebp
  4145de:	cld    
  4145df:	push   ecx
  4145e0:	dec    ecx
  4145e1:	or     bh,bh
  4145e3:	dec    edi
  4145e4:	adc    DWORD PTR [ebp+0x31de0ffc],ecx
  4145ea:	cmp    al,0x9f
  4145ed:	out    dx,al
  4145ee:	(bad)  
  4145ef:	cmp    BYTE PTR [ebx-0x7b],ch
  4145f2:	jne    0x414604
  4145f4:	jge    0x414667
  4145f6:	jmp    0xd508:0xea716c0c
  4145fd:	aaa    
  4145fe:	not    al
  414600:	xlat   BYTE PTR ds:[ebx]
  414601:	sahf   
  414602:	lods   al,BYTE PTR ds:[esi]
  414603:	add    DWORD PTR [eax+0x6a],esi
  414606:	ret    0xc555
  414609:	mov    eax,DWORD PTR [edx+0x536452ec]
  41460f:	lea    ebp,[ebx+0x3074e96d]
  414615:	xchg   esi,edi
  414617:	inc    DWORD PTR [eax]
  414619:	add    BYTE PTR [ebx+0x21c68a35],ch
  41461f:	out    dx,al
  414620:	or     al,ch
  414622:	cmp    al,BYTE PTR [esi+0x718afffe]
  414628:	jne    0x414639
  41462a:	test   edi,ebx
  41462c:	jmp    0xd5c77dac
  414631:	std    
  414632:	mov    ebx,0xc4044cca
  414637:	mov    ebp,ecx
  414639:	add    ah,BYTE PTR ds:0xe34383d2
  41463f:	jb     0x4146b7
  414641:	(bad)  
  414642:	loopne 0x414611
  414644:	ss mov dh,ah
  414647:	icebp  
  414648:	mov    edx,0x892b8b3f
  41464e:	fisttp DWORD PTR [ebx]
  414650:	in     al,0x58
  414652:	mov    eax,DWORD PTR ss:[eax]
  414655:	push   ecx
  414656:	add    al,0xd2
  414658:	cmp    BYTE PTR cs:[edx],dl
  41465b:	xchg   DWORD PTR [edx+ecx*1-0x58],ecx
  41465f:	lahf   
  414660:	lock out 0x2c,eax
  414663:	push   0xa38cfdd5
  414668:	xor    ch,bh
  41466a:	or     bl,BYTE PTR [ebx-0x73c23f18]
  414670:	add    BYTE PTR [ecx+0x74d24187],cl
  414676:	(bad)  [ecx]
  414678:	cmp    ecx,DWORD PTR [eax+ecx*1]
  41467b:	adc    BYTE PTR [ebx+0x690000a8],dl
  414681:	gs aad 0xe8
  414684:	add    dl,BYTE PTR [edx-0x1]
  414687:	dec    ebp
  414689:	pop    DWORD PTR [ebx-0x178db885]
  41468f:	push   edx
  414690:	jl     0x41461d
  414692:	add    BYTE PTR [esi-0x4e],dl
  414695:	pop    ss
  414696:	test   al,0xfe
  414698:	cmp    BYTE PTR ds:0xbdf88930,dh
  41469e:	add    DWORD PTR [ebx+0x43],0xffffffbd
  4146a2:	call   0xd0cc28d6
  4146a7:	xor    ebx,0xb632fa34
  4146ad:	pushf  
  4146ae:	fistp  DWORD PTR [eax+0x2a]
  4146b1:	fwait
  4146b2:	pop    ebp
  4146b3:	clc    
  4146b4:	scas   eax,DWORD PTR es:[edi]
  4146b5:	icebp  
  4146b6:	loope  0x4146ee
  4146b8:	cli    
  4146b9:	and    al,0xf2
  4146bb:	rol    BYTE PTR [eax+edi*8-0x2c],cl
  4146bf:	inc    ebx
  4146c0:	aaa    
  4146c1:	mov    bh,0xb2
  4146c3:	add    eax,0xac603664
  4146c8:	fisub  DWORD PTR [ecx]
  4146ca:	(bad)  
  4146cb:	fistp  DWORD PTR [ecx+0x61d39b85]
  4146d1:	mov    WORD PTR [edx-0x4b],cs
  4146d4:	ret    0x2c9b
  4146d7:	jle    0x4146cf
  4146d9:	push   DWORD PTR [eax+0x153447c6]
  4146df:	jg     0x41467c
  4146e1:	mov    bh,0x86
  4146e3:	inc    eax
  4146e4:	add    BYTE PTR [eax],al
  4146e6:	test   eax,0x7f3e1f1
  4146eb:	scas   eax,DWORD PTR es:[edi]
  4146ec:	add    eax,0xe9f425c8
  4146f1:	cmp    al,BYTE PTR [ebx]
  4146f3:	or     esp,DWORD PTR [edi+0x52]
  4146f6:	xor    esp,DWORD PTR [esi-0x2c]
  4146f9:	pop    esp
  4146fa:	xor    DWORD PTR [edx],0xddb57e9
  414700:	call   0x92b53385
  414705:	fild   DWORD PTR [ecx+0x5a03e96e]
  41470b:	and    dh,dh
  41470d:	jle    0x414789
  41470f:	fwait
  414710:	xchg   esp,eax
  414711:	sti    
  414712:	clc    
  414713:	call   0x7eb2:0x2bcd3437
  41471a:	push   0xffffff8c
  41471c:	jo     0x414754
  41471e:	aaa    
  41471f:	xor    al,0x66
  414721:	les    esp,FWORD PTR [ebx+0x3983015b]
  414727:	scas   eax,DWORD PTR es:[edi]
  414728:	jle    0x41471f
  41472a:	dec    esp
  41472b:	mov    WORD PTR [edx-0x71cbc44d],?
  414731:	and    al,0xb
  414733:	jmp    0x414730
  414735:	pop    edi
  414736:	dec    edi
  414737:	mov    WORD PTR [ebx-0x79cbcc1c],es
  41473d:	test   eax,0x3c801588
  414742:	jmp    0x4146de
  414744:	jbe    0x41475a
  414746:	sbb    DWORD PTR [ebx+0x624c],0xea672c6f
  414750:	push   cs
  414751:	mov    ebx,?
  414753:	lahf   
  414754:	in     eax,0x98
  414756:	mov    BYTE PTR [edi],ch
  414758:	mov    edi,0xfb15c1b5
  41475d:	or     eax,0x440e8601
  414762:	addr16 in eax,0x89
  414765:	bound  eax,QWORD PTR [ecx+0x759a8cf7]
  41476b:	mov    al,0x7e
  41476d:	xor    DWORD PTR [edx],eax
  41476f:	(bad)  [eax]
  414771:	scas   eax,DWORD PTR es:[edi]
  414772:	jle    0x414709
  414774:	and    DWORD PTR [ecx+ebp*8-0x27],esi
  414778:	ret    0xfc9a
  41477b:	dec    esi
  41477c:	fisub  WORD PTR [edi]
  41477e:	mov    BYTE PTR [esi],ch
  414780:	test   DWORD PTR [ecx],esp
  414782:	or     DWORD PTR [ecx-0x3cae7b7b],ebx
  414788:	pop    esp
  414789:	add    cl,BYTE PTR [eax+0x4f377c1e]
  41478f:	jmp    0x9602f7c8
  414794:	inc    esp
  414795:	stos   DWORD PTR es:[edi],eax
  414796:	inc    ebx
  414797:	in     eax,0xe2
  414799:	xor    edi,esp
  41479b:	xchg   edi,eax
  41479c:	cmp    al,0xc
  41479e:	add    al,BYTE PTR [eax]
  4147a0:	sar    BYTE PTR [ebp-0x52],1
  4147a3:	(bad)  
  4147a4:	sub    DWORD PTR [esi+ebx*2+0x56f575b],eax
  4147ab:	add    BYTE PTR [ebp+0xf349b4],bh
  4147b1:	add    BYTE PTR [eax+0x5b],dl
  4147b4:	cmp    cl,0x10
  4147b7:	std    
  4147b8:	dec    edx
  4147b9:	xor    esp,eax
  4147bb:	inc    edx
  4147bc:	fimul  DWORD PTR [ebp+0x2eea8356]
  4147c2:	gs in  al,dx
  4147c4:	and    al,0x10
  4147c6:	fs sub al,0xfc
  4147c9:	sub    ebx,esi
  4147cb:	sub    DWORD PTR [edi+esi*2],eax
  4147ce:	out    0xb1,al
  4147d0:	fidiv  DWORD PTR [edx+edx*8+0x2f]
  4147d4:	sar    DWORD PTR [edi+eax*8],0x3
  4147d8:	or     eax,0x9470680f
  4147dd:	push   0xffffffd4
  4147df:	fs idiv bh
  4147e2:	sub    esi,edx
  4147e4:	sti    
  4147e5:	adc    ebp,0x33
  4147e8:	mov    ebx,0xc22199c0
  4147ed:	add    ebx,DWORD PTR [esi]
  4147ef:	pop    ebp
  4147f0:	cmp    cl,0x19
  4147f3:	add    ecx,eax
  4147f5:	xor    ecx,DWORD PTR [edx+edi*8+0x6]
  4147f9:	mov    edx,DWORD PTR [eax+0x4d]
  4147fc:	div    cl
  4147fe:	adc    eax,0x55d8f672
  414803:	jne    0x414846
  414805:	jmp    0x414863
  414807:	aas    
  414808:	rcr    DWORD PTR [edi-0x38],0x48
  41480c:	mov    edi,0x10f74e04
  414811:	pop    ecx
  414812:	push   ebp
  414813:	jbe    0x414887
  414815:	add    eax,DWORD PTR [eax]
  414817:	add    BYTE PTR [ebp+0x75],ch
  41481a:	ret    0x3753
  41481d:	adc    cl,dh
  41481f:	add    al,0xad
  414821:	xchg   edx,eax
  414822:	or     al,0x31
  414824:	stos   DWORD PTR es:[edi],eax
  414825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414826:	sbb    al,0x34
  414828:	imul   ecx,DWORD PTR [ebp+0x4b64065a],0x2e
  41482f:	shl    esi,0x79
  414832:	cmp    cl,BYTE PTR [ebx+0x9dd8c88]
  414838:	mov    ebp,0x85300c90
  41483d:	xchg   esp,eax
  41483e:	or     al,0x37
  414840:	adc    BYTE PTR [eax+0x5ce4394a],0xd0
  414847:	cmp    esp,esp
  414849:	pop    esi
  41484a:	sub    BYTE PTR [eax+0x54544121],al
  414850:	sub    BYTE PTR [ecx],ah
  414852:	mov    edi,0xc1860189
  414857:	cmp    edi,edi
  414859:	aas    
  41485a:	cmp    BYTE PTR [ebp-0x31],dl
  41485d:	pop    edx
  41485e:	sar    ch,cl
  414860:	mov    eax,0x7074c00e
  414865:	dec    ecx
  414866:	jle    0x41482e
  414868:	pushf  
  414869:	nop
  41486a:	cmp    BYTE PTR [esi],0x1
  41486d:	xchg   edi,eax
  41486e:	add    eax,DWORD PTR [esi+0x5c]
  414871:	push   ds
  414872:	push   esi
  414873:	test   BYTE PTR [esi+edi*8+0x53],0x2c
  414878:	mov    esp,0xc81d48
  41487d:	add    BYTE PTR [ebx+eax*1-0x2eab8dfa],dh
  414884:	jge    0x414854
  414886:	pop    esp
  414887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414888:	jle    0x414890
  41488a:	sub    ebx,DWORD PTR [ebx-0x5bdcf8aa]
  414890:	pop    ecx
  414891:	add    esi,ecx
  414893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414894:	aad    0x72
  414896:	inc    esi
  414897:	xor    ebp,DWORD PTR [edi-0x37]
  41489a:	push   ds
  41489b:	jae    0x414904
  41489d:	retf   
  41489e:	cmp    esp,DWORD PTR [esi]
  4148a0:	in     al,dx
  4148a1:	jl     0x414914
  4148a3:	dec    esp
  4148a4:	and    ebx,esp
  4148a6:	xor    eax,0x8e312a63
  4148ab:	jae    0x414842
  4148ad:	jl     0x4148c2
  4148af:	mov    ah,0x6
  4148b1:	pop    ss
  4148b2:	xchg   dh,bh
  4148b4:	pop    esi
  4148b5:	sar    DWORD PTR [esi-0x4fc90e0f],cl
  4148bb:	icebp  
  4148bc:	loope  0x414899
  4148be:	sub    ebp,DWORD PTR [ebx+0x6eaecc55]
  4148c4:	ret    0xf240
  4148c7:	xchg   edi,eax
  4148c8:	ret    
  4148c9:	jnp    0x4148da
  4148cb:	mov    dl,0x9f
  4148cd:	pop    ecx
  4148ce:	inc    ebp
  4148cf:	xchg   edi,eax
  4148d0:	sub    eax,0xacb369cc
  4148d5:	hlt    
  4148d6:	dec    ebx
  4148d7:	(bad)  
  4148d8:	xlat   BYTE PTR ds:[ebx]
  4148d9:	ret    
  4148da:	push   0xfffffff6
  4148dc:	ds mov ebp,0x1aea2cf5
  4148e2:	add    BYTE PTR [eax],al
  4148e4:	(bad)  
  4148e5:	mov    ah,0xd
  4148e7:	add    BYTE PTR [edi],dh
  4148e9:	lods   eax,DWORD PTR ds:[esi]
  4148ea:	std    
  4148eb:	iret   
  4148ec:	out    dx,eax
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	jmp    0xa70a:0xee213703
  4148f5:	and    al,BYTE PTR [edi+0x679bfc7b]
  4148fb:	imul   edi,DWORD PTR [ebx],0x2e186d34
  414901:	pop    ebp
  414902:	lods   eax,DWORD PTR ds:[esi]
  414903:	iret   
  414904:	add    eax,0x73496133
  414909:	mov    bl,0xc5
  41490b:	iret   
  41490c:	aaa    
  41490d:	push   ds
  41490e:	fstp   TBYTE PTR [edx-0x14]
  414911:	daa    
  414912:	add    DWORD PTR [edx-0x12],esp
  414915:	xchg   edi,eax
  414916:	sub    BYTE PTR [eax],ch
  414918:	mov    dh,0x58
  41491a:	xor    dl,BYTE PTR [ecx]
  41491c:	jnp    0x4148b4
  41491e:	cld    
  41491f:	push   ds
  414920:	scas   al,BYTE PTR es:[edi]
  414921:	je     0x414999
  414923:	loop   0x41498e
  414925:	repz or al,0x62
  414928:	jle    0x414952
  41492a:	cmp    BYTE PTR [eax+edi*8+0x7ffee221],ch
  414931:	sub    BYTE PTR [ebx+0x1],dl
  414934:	ss sub al,0x2
  414937:	jmp    0x733a6c3d
  41493c:	cld    
  41493d:	lods   al,BYTE PTR ds:[esi]
  41493e:	rcl    cl,0x7b
  414941:	loop   0x41493f
  414943:	(bad)  
  414944:	pop    esi
  414945:	mov    ah,BYTE PTR cs:[eax+eax*1]
  414949:	add    BYTE PTR [edi],al
  41494b:	stos   DWORD PTR es:[edi],eax
  41494c:	jbe    0x414903
  41494e:	sbb    al,0x8c
  414950:	fdiv   DWORD PTR [ecx-0x64cfcbc5]
  414956:	lods   al,BYTE PTR ds:[esi]
  414957:	push   DWORD PTR [edx+0x29]
  41495a:	cmp    ebp,DWORD PTR [ebp+0x28fee2c9]
  414960:	inc    esi
  414961:	scas   al,BYTE PTR es:[edi]
  414962:	xor    eax,DWORD PTR [ebx]
  414964:	std    
  414965:	cmp    BYTE PTR [eax+0x648d45f1],bh
  41496b:	lods   eax,DWORD PTR ds:[esi]
  41496c:	ret    
  41496d:	sbb    DWORD PTR [ebp+0x2],esp
  414970:	imul   esi,DWORD PTR [ebx-0x7efecbcc],0xe901d3f6
  41497a:	mov    ch,0x6f
  41497c:	sbb    DWORD PTR [esi+0x5ecc2d6c],edi
  414982:	jno    0x41491c
  414984:	jbe    0x4149db
  414986:	pop    esp
  414987:	xchg   ebp,eax
  414988:	retf   
  414989:	dec    esi
  41498a:	sub    DWORD PTR [esi+eax*2+0x40396200],0x2714d08
  414995:	inc    ebp
  414996:	es js  0x4149de
  414999:	jmp    DWORD PTR [ecx]
  41499b:	push   ax
  41499d:	mov    esp,DWORD PTR [edx]
  41499f:	mov    dl,0xed
  4149a1:	pop    eax
  4149a2:	(bad)  [edx+0xe]
  4149a5:	test   BYTE PTR [edx],dl
  4149a7:	xor    eax,DWORD PTR [ecx]
  4149a9:	add    BYTE PTR [ebx+0x840e7f],bl
  4149af:	add    BYTE PTR [edx+0x31],bl
  4149b2:	add    DWORD PTR [eax],eax
  4149b4:	(bad)
  4149b8:	int    0x61
  4149ba:	jne    0x4149d6
  4149bc:	jae    0x4149b2
  4149be:	lods   al,BYTE PTR ds:[esi]
  4149bf:	push   ecx
  4149c0:	xor    BYTE PTR fs:[eax-0x169e09b3],cl
  4149c7:	out    dx,eax
  4149c8:	add    DWORD PTR [edx],esi
  4149ca:	add    DWORD PTR [ebp+0x6a05fd9e],eax
  4149d0:	bnd jns 0x414978
  4149d3:	add    dh,cl
  4149d5:	xor    DWORD PTR [edx-0x7a672e05],eax
  4149db:	xchg   ebp,eax
  4149dc:	fidiv  WORD PTR [ecx]
  4149de:	add    edi,edi
  4149e0:	cli    
  4149e1:	push   es
  4149e2:	shl    DWORD PTR [ebx],cl
  4149e4:	wrmsr  
  4149e6:	mov    al,BYTE PTR [eax-0x2a]
  4149e9:	dec    esi
  4149ea:	jle    0x414a66
  4149ec:	ret    0xea53
  4149ef:	jle    0x414a16
  4149f1:	lock add al,0xeb
  4149f4:	aaa    
  4149f5:	mov    bl,0x23
  4149f7:	add    BYTE PTR [ebp+0x5eb70dfe],dh
  4149fd:	mov    al,ds:0xc0816ee9
  414a02:	inc    ecx
  414a03:	adc    ah,ch
  414a05:	test   DWORD PTR ds:0xfcd337b7,0x548976f5
  414a0f:	push   es
  414a10:	cmp    BYTE PTR [esi],dl
  414a12:	inc    ebp
  414a13:	adc    al,0x0
  414a15:	add    BYTE PTR [esp+edx*8+0x79],cl
  414a19:	mov    edi,0x8101f376
  414a1e:	jg     0x414a65
  414a20:	fimul  DWORD PTR [ebp-0x4c]
  414a23:	popf   
  414a24:	int    0xe9
  414a26:	repz cmp al,0x45
  414a29:	or     al,0x33
  414a2b:	mov    bh,0x6
  414a2d:	or     eax,0xe8f6cae8
  414a32:	imul   ecx,DWORD PTR [edx],0x740cfdbd
  414a38:	std    
  414a39:	mov    ah,0x77
  414a3b:	sbb    ecx,0x455e4031
  414a41:	sbb    al,0x1c
  414a43:	inc    eax
  414a44:	(bad)  
  414a45:	mov    ah,0x6f
  414a47:	xor    eax,DWORD PTR [edx]
  414a49:	enter  0x8cae,0xd9
  414a4d:	and    edi,eax
  414a4f:	mov    WORD PTR [eax-0x267488a5],ss
  414a55:	sbb    esi,DWORD PTR [eax]
  414a57:	push   ds
  414a58:	inc    eax
  414a59:	or     al,0xe0
  414a5b:	mov    edx,0x1e4010d9
  414a60:	inc    eax
  414a61:	or     al,0xf6
  414a63:	ret    0xe904
  414a66:	cmp    BYTE PTR [esi-0x33d4bf6b],al
  414a6c:	fadd   DWORD PTR [ebx]
  414a6e:	mov    ah,0xaa
  414a70:	inc    DWORD PTR [esi-0x383f25cf]
  414a76:	je     0x414ab8
  414a78:	int3   
  414a79:	jmp    0x31764a7e
  414a7e:	retf   
  414a7f:	pop    eax
  414a80:	jle    0x414a4b
  414a82:	jo     0x414ac2
  414a84:	push   esp
  414a85:	xor    al,0xa9
  414a87:	add    ebp,edi
  414a89:	push   eax
  414a8a:	test   eax,0xa950e503
  414a8f:	add    ecx,DWORD PTR [edi]
  414a91:	push   ecx
  414a92:	test   eax,0xa9510903
  414a97:	add    ebp,esp
  414a99:	push   eax
  414a9a:	test   eax,0xa950db03
  414a9f:	add    edi,DWORD PTR [eax+edx*2+0x50a603a9]
  414aa6:	test   eax,0xa950a803
  414aab:	add    ebp,esp
  414aad:	push   eax
  414aae:	test   eax,0xa957d603
  414ab3:	add    ebx,esi
  414ab5:	push   edi
  414ab6:	test   eax,0xa957e603
  414abb:	add    ebx,ebx
  414abd:	push   edi
  414abe:	test   eax,0xa9578a03
  414ac3:	add    esp,DWORD PTR [edi+edi*4-0x2a]
  414ac7:	test   DWORD PTR [ebx],edx
  414ac9:	dec    ecx
  414aca:	in     al,0x3
  414acc:	aaa    
  414acd:	out    0x3b,eax
  414acf:	xor    edi,DWORD PTR [ecx+ecx*8-0x6c153636]
  414ad6:	ror    BYTE PTR [edi-0x3515cb8b],cl
  414adc:	fs inc eax
  414ade:	pop    edi
  414adf:	sub    DWORD PTR [eax],eax
  414ae1:	add    BYTE PTR [ebp+0x49fc3593],al
  414ae7:	xchg   edi,edx
  414ae9:	ins    BYTE PTR es:[edi],dx
  414aea:	xor    BYTE PTR [ebx-0x633cd68f],dl
  414af0:	in     al,0xb9
  414af2:	mov    dl,0x93
  414af4:	popa   
  414af5:	inc    ecx
  414af6:	scas   eax,DWORD PTR es:[edi]
  414af7:	mov    ecx,0x936350aa
  414afc:	cmc    
  414afd:	imul   eax
  414aff:	mov    esi,0x273af01
  414b04:	inc    esi
  414b05:	jmp    0x7502903e
  414b0a:	scas   al,BYTE PTR es:[edi]
  414b0b:	ins    BYTE PTR es:[edi],dx
  414b0c:	clc    
  414b0d:	pop    esi
  414b0e:	ins    BYTE PTR es:[edi],dx
  414b0f:	hlt    
  414b10:	xchg   DWORD PTR [edi],esp
  414b12:	xchg   ebx,eax
  414b13:	stos   DWORD PTR es:[edi],eax
  414b14:	inc    ebp
  414b15:	jmp    0x9a06084e
  414b1a:	ins    DWORD PTR es:[edi],dx
  414b1b:	daa    
  414b1c:	sbb    edx,0xee6733f4
  414b22:	iret   
  414b23:	push   es
  414b24:	loope  0x414ab7
  414b26:	ins    BYTE PTR es:[edi],dx
  414b27:	and    al,0xc4
  414b29:	call   0xf287c562
  414b2e:	xor    al,0x79
  414b30:	inc    esi
  414b31:	adc    eax,0xe901343a
  414b36:	or     DWORD PTR [esi],ebp
  414b38:	das    
  414b39:	and    bl,BYTE PTR [esi-0x12031e49]
  414b3f:	nop
  414b40:	push   ecx
  414b41:	add    DWORD PTR [eax-0x8],ecx
  414b44:	add    cl,ch
  414b46:	add    BYTE PTR [eax],al
  414b48:	pop    ebp
  414b49:	xacquire xchg BYTE PTR [edx-0xe4084af],ch
  414b50:	xor    al,0xbd
  414b52:	pop    esi
  414b53:	(bad)  [ecx]
  414b55:	xchg   ecx,eax
  414b56:	jbe    0x414b25
  414b58:	outs   dx,DWORD PTR ds:[esi]
  414b59:	mul    eax
  414b5b:	sbb    DWORD PTR [ecx+0x6f6c5828],eax
  414b61:	int3   
  414b62:	jmp    0xfcd1f0e6
  414b67:	push   0xffffff88
  414b69:	aas    
  414b6a:	and    BYTE PTR [ecx+0x7d8540ed],0x34
  414b71:	xor    al,0x1
  414b73:	fs mov bh,0x63
  414b76:	cli    
  414b77:	mov    ?,WORD PTR [ebp-0x1d]
  414b7a:	xchg   DWORD PTR [eax],eax
  414b7c:	ror    DWORD PTR [ebx],1
  414b7e:	cwde   
  414b7f:	fdiv   DWORD PTR [ebp+0x25e8fe7d]
  414b85:	stc    
  414b86:	add    BYTE PTR [eax],al
  414b88:	adc    dh,BYTE PTR [edi+0xe]
  414b8b:	test   BYTE PTR [esi],cl
  414b8d:	aaa    
  414b8e:	add    DWORD PTR [eax],eax
  414b90:	sbb    eax,0xde6852e3
  414b95:	add    DWORD PTR ss:[eax],eax
  414b98:	je     0x414bd1
  414b9a:	push   edx
  414b9b:	push   ebx
  414b9c:	xchg   BYTE PTR [esi],dh
  414b9e:	add    DWORD PTR [eax],eax
  414ba0:	push   cs
  414ba1:	or     al,0x80
  414ba3:	rol    BYTE PTR [edi],1
  414ba5:	jle    0x414ba5
  414ba7:	push   eax
  414ba8:	sbb    DWORD PTR [eax+esi*4-0x71ffffee],eax
  414baf:	ss mov dh,al
  414bb2:	int    0x7c
  414bb4:	(bad)  
  414bb5:	jne    0x414bde
  414bb7:	jg     0x414bc9
  414bb9:	lods   al,BYTE PTR ds:[esi]
  414bba:	sub    al,0xf6
  414bbc:	add    BYTE PTR [ebx+0x50704536],al
  414bc2:	sbb    DWORD PTR [edx-0x3],edx
  414bc5:	or     DWORD PTR [ebx+0x1e03e979],0xe5866f36
  414bcf:	cli    
  414bd0:	mov    DWORD PTR [ebp+0xa],edi
  414bd3:	dec    ecx
  414bd4:	mov    BYTE PTR [ebp+0xa],al
  414bd7:	dec    ecx
  414bd8:	push   esi
  414bd9:	inc    DWORD PTR [ebx+0x3ff5380]
  414bdf:	mov    esi,0x12ce400f
  414be4:	shl    DWORD PTR [edi+edx*8+0x73],0x40
  414be9:	or     ebx,edi
  414beb:	ds js  0x414bea
  414bee:	and    dh,BYTE PTR [edi]
  414bf0:	mov    DWORD PTR [ebp-0x3b],ebx
  414bf3:	inc    ebx
  414bf4:	(bad)  
  414bf5:	adc    eax,0x3ff2eb37
  414bfa:	aaa    
  414bfb:	dec    ecx
  414bfc:	retf   0x6f13
  414bff:	ins    DWORD PTR es:[edi],dx
  414c00:	inc    eax
  414c01:	add    BYTE PTR [edi+0x30],bl
  414c04:	(bad)  
  414c05:	jb     0x414c4a
  414c07:	sbb    BYTE PTR [eax+edx*8-0x72],bh
  414c0b:	and    cl,dl
  414c0d:	push   eax
  414c0e:	(bad)  
  414c0f:	adc    DWORD PTR [esi],ecx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [edi],dh
  414c15:	repnz dec ebx
  414c17:	clc    
  414c18:	pop    edi
  414c19:	sbb    edi,DWORD PTR [ecx+0x241568fd]
  414c1f:	or     DWORD PTR [esi-0x68],ecx
  414c22:	leave  
  414c23:	std    
  414c24:	pop    eax
  414c25:	test   al,0x7d
  414c27:	in     al,dx
  414c28:	mov    dh,0xf7
  414c2a:	je     0x414c34
  414c2c:	aaa    
  414c2d:	fwait
  414c2e:	xor    eax,0x8c07e856
  414c33:	aam    0x3a
  414c35:	xor    cl,dl
  414c37:	call   0x4228d6
  414c3c:	fs pop ebx
  414c3e:	je     0x414bfb
  414c40:	sti    
  414c41:	xor    ecx,edx
  414c43:	std    
  414c44:	ja     0x414c4c
  414c46:	mov    bh,0xe8
  414c48:	mov    ds:0xbc0000de,eax
  414c4d:	pop    ecx
  414c4e:	xor    eax,0xf51b2afd
  414c53:	aas    
  414c54:	aaa    
  414c55:	push   es
  414c56:	inc    ebx
  414c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c58:	pop    ebp
  414c59:	xchg   ebx,eax
  414c5a:	jae    0x414ccf
  414c5c:	add    eax,DWORD PTR [ebx-0x23]
  414c5f:	loopne 0x414c5b
  414c61:	fwait
  414c62:	add    BYTE PTR [edi-0x20],bh
  414c65:	lea    esp,[edi+0xf]
  414c68:	shl    BYTE PTR [ecx],1
  414c6a:	jle    0x414c32
  414c6c:	addr16 cmc 
  414c6e:	lock pop eax
  414c70:	mov    dl,0x33
  414c72:	and    eax,0x54dccf98
  414c77:	enter  0x0,0xb2
  414c7b:	jmp    0x7fdb:0x90af8530
  414c82:	repz xor ch,dl
  414c85:	add    ebp,DWORD PTR [esi+esi*4-0x6f6d3352]
  414c8c:	sbb    bh,BYTE PTR [ebp+0x72]
  414c8f:	mov    esi,0x9088bf4d
  414c94:	arpl   bx,bx
  414c96:	call   0xbb45368e
  414c9b:	jae    0x414c80
  414c9d:	jg     0x414cc6
  414c9f:	xor    ebp,edx
  414ca1:	add    ebp,DWORD PTR [esi+esi*4-0x6fa52f42]
  414ca8:	call   0x4ac8:0x2f7fb476
  414caf:	jecxz  0x414cdb
  414cb1:	out    dx,al
  414cb2:	adc    BYTE PTR [esi],ah
  414cb4:	stos   BYTE PTR es:[edi],al
  414cb5:	add    esi,DWORD PTR [esi-0x47fce9ea]
  414cbb:	stc    
  414cbc:	add    eax,0xdb902f84
  414cc1:	jg     0x414ce9
  414cc3:	xor    eax,0xb9ac03ea
  414cc8:	cs int3 
  414cca:	adc    dl,BYTE PTR [eax-0x2b4b8966]
  414cd0:	xrelease mov DWORD PTR [edx],0xc085c2
  414cd7:	nop
  414cd8:	fcmovnu st,st(4)
  414cda:	cmp    al,0xf4
  414cdc:	jmp    0xb3414ce4
  414ce1:	je     0x414cbe
  414ce3:	jg     0x414c8a
  414ce5:	xor    al,0xea
  414ce7:	add    esp,DWORD PTR [esi]
  414ce9:	(bad)  
  414cea:	adc    ebp,DWORD PTR [edi]
  414cec:	pop    ebp
  414ced:	xor    eax,DWORD PTR [ecx]
  414cef:	push   ds
  414cf0:	sbb    BYTE PTR [ecx+eax*1],bl
  414cf3:	jmp    0x6cd0012c
  414cf8:	jg     0x414c87
  414cfa:	cld    
  414cfb:	sahf   
  414cfc:	imul   edx,DWORD PTR [ecx+0x4fa55d16],0x1
  414d03:	pusha  
  414d04:	test   BYTE PTR [ebx+0x41708180],0x85
  414d0b:	ins    DWORD PTR es:[edi],dx
  414d0c:	cmp    esi,DWORD PTR [ecx+eax*1]
  414d0f:	sbb    DWORD PTR [ebx+0x3],ebp
  414d12:	aaa    
  414d13:	jmp    0xf3330a4c
  414d18:	jbe    0x414cd1
  414d1a:	push   esi
  414d1b:	inc    ecx
  414d1c:	mov    cl,0xf3
  414d1e:	imul   ecx
  414d20:	clc    
  414d21:	loop   0x414d5a
  414d23:	ss lock (bad) 
  414d26:	outs   dx,BYTE PTR ds:[esi]
  414d27:	icebp  
  414d28:	mov    bl,0x8e
  414d2a:	add    ecx,ebp
  414d2c:	xchg   esp,eax
  414d2d:	xor    al,0x74
  414d2f:	scas   al,BYTE PTR es:[edi]
  414d30:	iret   
  414d31:	cmc    
  414d32:	(bad)  
  414d33:	icebp  
  414d34:	or     DWORD PTR [eax],0x7d271145
  414d3a:	cld    
  414d3b:	push   ds
  414d3c:	lods   al,BYTE PTR ds:[esi]
  414d3d:	ins    BYTE PTR es:[edi],dx
  414d3e:	cmp    BYTE PTR [esi],dh
  414d40:	xchg   DWORD PTR [edi+0x54],eax
  414d43:	pop    esp
  414d44:	add    BYTE PTR [eax],al
  414d46:	jbe    0x414ce4
  414d48:	push   ecx
  414d49:	lahf   
  414d4a:	gs xchg ecx,eax
  414d4c:	jbe    0x414d47
  414d4e:	stc    
  414d4f:	and    cl,BYTE PTR [ebp-0x25]
  414d52:	je     0x414d88
  414d54:	xchg   BYTE PTR [ecx],ch
  414d56:	or     DWORD PTR [bx+si],esi
  414d59:	mov    al,0x2b
  414d5b:	add    ebp,ecx
  414d5d:	push   esp
  414d5e:	mov    ecx,DWORD PTR [ebp+0x4e]
  414d61:	mov    cl,0x87
  414d63:	sbb    eax,0xb35e3a53
  414d68:	aad    0x0
  414d6a:	repz jne 0x414d6b
  414d6d:	call   0x4241fc
  414d72:	push   ebp
  414d73:	hlt    
  414d74:	or     BYTE PTR [ecx-0xba7f042],cl
  414d7a:	mov    bl,dh
  414d7c:	stc    
  414d7d:	add    ecx,edx
  414d7f:	jecxz  0x414d71
  414d81:	jmp    FWORD PTR [ebx-0x71bff036]
  414d87:	mov    dl,0x78
  414d89:	sti    
  414d8a:	mov    ?,esi
  414d8c:	or     al,0x8d
  414d8e:	sbb    eax,edi
  414d90:	cli    
  414d91:	inc    DWORD PTR [ecx]
  414d93:	inc    ebx
  414d94:	jmp    0x17411b4
  414d99:	cmp    DWORD PTR [ebx-0x1ce78f82],edx
  414d9f:	mov    bl,0x75
  414da1:	test   DWORD PTR [ecx],0x8bff5176
  414da7:	data16 (bad) 
  414da9:	adc    eax,0x82460000
  414dae:	cmp    al,0x0
  414db0:	(bad)  [edx+0xe]
  414db3:	test   DWORD PTR [eax+0x75],ebp
  414db6:	(bad)  
  414db7:	call   DWORD PTR [ecx]
  414db9:	in     al,0xec
  414dbb:	(bad)  
  414dbc:	cmp    esp,DWORD PTR [esi]
  414dbe:	cmovo  ebx,DWORD PTR [esi]
  414dc1:	or     eax,0x7643d480
  414dc6:	(bad)  
  414dc7:	push   eax
  414dc8:	ss (bad) 
  414dca:	cmp    al,0x0
  414dcc:	push   cs
  414dcd:	or     eax,DWORD PTR [eax-0xc]
  414dd0:	and    eax,0x2ee8519f
  414dd5:	retf   
  414dd6:	(bad)  
  414dd7:	push   DWORD PTR ds:0xba8588af
  414ddd:	jne    0x414ddd
  414ddf:	jmp    FWORD PTR [esi]
  414de1:	jo     0x414da6
  414de3:	inc    ecx
  414de4:	aaa    
  414de5:	fwait
  414de6:	add    BYTE PTR [ecx],dh
  414de8:	neg    DWORD PTR [esi+0x23]
  414deb:	pop    ecx
  414dec:	out    dx,al
  414ded:	fld    DWORD PTR [ecx]
  414def:	add    BYTE PTR [ebp-0x317fbfbd],bh
  414df5:	pushf  
  414df6:	dec    esp
  414df7:	adc    al,0xb7
  414df9:	(bad)  
  414dfa:	push   DWORD PTR [edx+0x30]
  414dfd:	push   0xffffffb7
  414dff:	mov    si,0xd981
  414e03:	or     BYTE PTR [edi+0x347301a4],dh
  414e09:	sbb    bl,BYTE PTR [edi]
  414e0b:	add    BYTE PTR [ebp+0x8a1543],ch
  414e11:	add    bh,dh
  414e13:	pop    ebx
  414e14:	pop    es
  414e15:	enter  0x9904,0x7a
  414e19:	mov    edi,0x50c54530
  414e1e:	js     0x414e8f
  414e20:	sbb    al,0x8
  414e22:	add    eax,0x68ca85e3
  414e27:	out    0xbe,al
  414e29:	add    al,0x37
  414e2b:	enter  0xec79,0x6
  414e2f:	lods   al,BYTE PTR ds:[esi]
  414e30:	cmc    
  414e31:	mov    ah,0xf8
  414e33:	xor    BYTE PTR [ecx],0x8a
  414e36:	call   0x884e7cc5
  414e3b:	enter  0xcf0,0x80
  414e3f:	inc    esp
  414e40:	je     0x414eb6
  414e42:	inc    ecx
  414e43:	imul   BYTE PTR cs:[edi+edi*8+0x30f09595]
  414e4b:	out    0xae,al
  414e4d:	mov    BYTE PTR [edx+0x36],bh
  414e50:	div    BYTE PTR [ebp+0xd5e8e7a]
  414e56:	fcomp  st(7)
  414e58:	hlt    
  414e59:	or     al,0xc9
  414e5b:	and    DWORD PTR [edx],eax
  414e5d:	repnz xor al,0x34
  414e60:	mov    al,0xf4
  414e62:	mov    ds:0xfe94eb80,eax
  414e67:	mov    edx,0xc532cc25
  414e6c:	stos   BYTE PTR es:[edi],al
  414e6d:	or     cl,ch
  414e6f:	cmp    al,0x6b
  414e71:	imul   esi,DWORD PTR [edi],0x34
  414e74:	jmp    0x6173:0x830000f4
  414e7b:	ds daa 
  414e7d:	mov    ecx,0x16b7f00b
  414e82:	test   BYTE PTR [ebx],0x36
  414e85:	imul   esp,DWORD PTR [edi+0x46],0x47
  414e89:	xor    al,0x1c
  414e8b:	push   ds
  414e8c:	scas   al,BYTE PTR es:[edi]
  414e8d:	neg    ch
  414e8f:	js     0x414e95
  414e91:	cmp    al,0xe7
  414e93:	shl    bh,0xb8
  414e96:	mov    ds:0x738ce0db,eax
  414e9b:	les    esi,FWORD PTR [edx]
  414e9d:	(bad)  
  414e9e:	and    eax,DWORD PTR [ebx+0x78]
  414ea1:	div    ecx
  414ea3:	hlt    
  414ea4:	stos   BYTE PTR es:[edi],al
  414ea5:	hlt    
  414ea6:	sbb    DWORD PTR [ebx],eax
  414ea8:	hlt    
  414ea9:	aas    
  414eaa:	pop    edi
  414eab:	xor    ecx,DWORD PTR ds:[ecx-0x5b]
  414eaf:	repz out 0x69,al
  414eb2:	outs   dx,DWORD PTR ds:[esi]
  414eb3:	xor    al,0x2f
  414eb5:	mov    edx,0xff3642a3
  414eba:	xor    DWORD PTR [edi],eax
  414ebc:	inc    eax
  414ebd:	pop    es
  414ebe:	xlat   BYTE PTR ds:[ebx]
  414ebf:	js     0x414eb5
  414ec1:	and    esp,edi
  414ec3:	rcr    BYTE PTR [esi],0x33
  414ec6:	jo     0x414eb8
  414ec8:	mov    al,0x25
  414eca:	test   eax,0x986c5e40
  414ecf:	int    0xe
  414ed1:	pop    ecx
  414ed2:	mov    BYTE PTR [ecx],0x84
  414ed5:	daa    
  414ed6:	outs   dx,DWORD PTR ds:[esi]
  414ed7:	ds daa 
  414ed9:	aaa    
  414eda:	add    DWORD PTR [edx],ebp
  414edc:	add    BYTE PTR [eax],al
  414ede:	fbstp  TBYTE PTR [edx]
  414ee0:	xchg   edx,ebx
  414ee2:	jl     0x414f1f
  414ee4:	inc    edx
  414ee5:	sub    dh,al
  414ee7:	arpl   WORD PTR [edi-0x29],bp
  414eea:	cwde   
  414eeb:	daa    
  414eec:	cmp    eax,0x883b1fed
  414ef1:	and    al,0x43
  414ef3:	xor    eax,0xbe3dd2c0
  414ef8:	adc    BYTE PTR [ecx+0x22],dh
  414efb:	dec    ebx
  414efc:	inc    eax
  414efd:	repnz fadd QWORD PTR [esi]
  414f00:	repz bound esp,QWORD PTR [esi-0x74]
  414f04:	add    BYTE PTR [esi],dh
  414f06:	inc    edi
  414f07:	mov    bl,0x4e
  414f09:	mov    eax,ds:0x6f0c79a8
  414f0e:	gs mov esp,edi
  414f11:	mov    ss,WORD PTR ds:0x27abc9ed
  414f17:	xor    al,0x56
  414f19:	jb     0x414ee2
  414f1b:	mov    ch,0xed
  414f1d:	mov    ecx,0xba53e1e9
  414f22:	bound  eax,QWORD PTR [ebp-0x4]
  414f25:	scas   al,BYTE PTR es:[edi]
  414f26:	imul   ecx,ebx,0xb39cb48a
  414f2c:	push   esi
  414f2d:	pop    ecx
  414f2e:	mov    dl,0xe7
  414f30:	fsub   DWORD PTR [eax-0xa]
  414f33:	(bad)  
  414f34:	cmp    bl,BYTE PTR [eax+ebp*1+0x32728b39]
  414f3b:	xor    al,0x1
  414f3d:	(bad)  
  414f3e:	out    0x3b,al
  414f40:	mov    dl,BYTE PTR [eax+eax*1+0x4eb35800]
  414f47:	adc    eax,0x7010fec0
  414f4c:	mov    cs,WORD PTR [eax+edi*1+0x65ba4423]
  414f53:	call   0xc9838c
  414f58:	retf   
  414f59:	fimul  DWORD PTR [edx+0xdba3655]
  414f5f:	adc    DWORD PTR [esi-0x64c5021b],edx
  414f65:	cs push cs
  414f67:	test   BYTE PTR [eax],bl
  414f69:	xor    DWORD PTR [ecx],eax
  414f6b:	add    BYTE PTR [ebx-0x19],bl
  414f6e:	std    
  414f6f:	(bad)  
  414f70:	adc    edx,eax
  414f72:	cld    
  414f73:	dec    esi
  414f75:	ss mov dh,al
  414f78:	xor    eax,0x147d14fd
  414f7d:	mov    ebx,0xf457ec78
  414f82:	hlt    
  414f83:	mov    ebp,DWORD PTR [ebx]
  414f85:	int3   
  414f86:	mov    bh,BYTE PTR [ebp-0x2a]
  414f89:	mov    cs,WORD PTR [eax]
  414f8b:	cmp    eax,DWORD PTR [ebx-0x2]
  414f8e:	mov    edi,ebx
  414f90:	test   DWORD PTR [ebx],edx
  414f92:	adc    DWORD PTR [ebp+0x78],edi
  414f95:	mov    ecx,0x3a76f458
  414f9a:	cmp    dh,BYTE PTR [ebp-0x70]
  414f9d:	std    
  414f9e:	cmp    DWORD PTR [ebp+0x5e],edi
  414fa1:	dec    edx
  414fa2:	out    dx,eax
  414fa3:	dec    edi
  414fa4:	(bad)
  414fa7:	push   es
  414fa8:	add    BYTE PTR [eax],al
  414faa:	out    0xf3,eax
  414fac:	call   0x3b07db3a
  414fb1:	jge    0x414fb1
  414fb3:	repz add DWORD PTR [ecx+0x7d82c66b],ecx
  414fba:	(bad)  
  414fbb:	ss jnp 0x414fc6
  414fbe:	xor    eax,0x4d7ce8f5
  414fc3:	lock jmp 0xe19d1ccd
  414fc9:	add    BYTE PTR [ebp-0x34feef0c],ah
  414fcf:	rol    DWORD PTR [ebx+0x3b],0x37
  414fd3:	test   al,0x14
  414fd5:	jl     0x414f9f
  414fd7:	push   ss
  414fd8:	inc    ecx
  414fd9:	in     al,0xbc
  414fdb:	shr    BYTE PTR [eax-0x14cc85d7],0xcf
  414fe2:	jbe    0x414fc1
  414fe4:	lea    edx,[ebx+0x13]
  414fe7:	pop    ss
  414fe8:	pop    ecx
  414fe9:	lock sbb al,0x48
  414fec:	mov    ebp,0xee6f8a89
  414ff1:	out    dx,eax
  414ff2:	xor    BYTE PTR [edx-0x1f51bd28],dh
  414ff8:	fmul   DWORD PTR ds:0xddfecda0
  414ffe:	dec    ecx
  414fff:	or     DWORD PTR [ebp+0x4c14db5b],0xffffffe0
  415006:	int3   
  415007:	xchg   ecx,eax
  415008:	lea    ebx,[ebx-0x75]
  41500b:	add    al,0x54
  41500d:	loopne 0x41500f
  41500f:	add    BYTE PTR [edi-0x4dffded8],dh
  415015:	push   edx
  415016:	add    esi,DWORD PTR [ebx+0x34]
  415019:	call   0x28fd516f
  41501e:	adc    eax,0x1920d80d
  415023:	cmp    DWORD PTR [ebp-0x6e],ebp
  415026:	xchg   ecx,eax
  415027:	mov    dh,0x37
  415029:	fwait
  41502a:	add    ch,bh
  41502c:	cli    
  41502d:	repnz test BYTE PTR [ebx+0x4b],bh
  415031:	fwait
  415032:	lea    esi,[ebx+0x33]
  415035:	push   0xf9ea8a09
  41503a:	mov    WORD PTR [eax+ecx*1],cs
  41503d:	fimul  DWORD PTR [esi-0x5fa4b0b5]
  415043:	add    al,0x2d
  415045:	push   ebx
  415046:	lea    ecx,[eax+eax*1]
  415049:	adc    eax,0x3431e04c
  41504e:	xor    esp,eax
  415050:	or     BYTE PTR [eax],dh
  415052:	ins    DWORD PTR es:[edi],dx
  415053:	push   ebp
  415054:	and    bh,BYTE PTR [esi]
  415056:	and    BYTE PTR ds:0xf89ebbff,al
  41505c:	adc    DWORD PTR [esi+0x6b0062b],esi
  415062:	push   es
  415063:	mov    esi,DWORD PTR [eax+eax*4+0x61]
  415067:	pop    edi
  415068:	out    0x4c,eax
  41506a:	daa    
  41506b:	aas    
  41506c:	jbe    0x41502b
  41506e:	cmp    eax,0xe1f6bea4
  415073:	add    al,0x0
  415075:	add    al,dh
  415077:	mov    edx,0xdeaed83d
  41507c:	lods   eax,DWORD PTR ds:[esi]
  41507d:	mov    ah,BYTE PTR [esp+edx*4-0x31]
  415081:	sbb    eax,0xacc1f6be
  415086:	and    al,0xb5
  415088:	xor    eax,0xd5ffbab8
  41508d:	mov    WORD PTR [esp+edx*4],es
  415090:	outs   dx,DWORD PTR ds:[esi]
  415091:	ss aas 
  415093:	mov    esi,0x63361c3d
  415098:	bound  ebx,QWORD PTR [edi]
  41509a:	gs repz into 
  41509d:	dec    esi
  41509e:	imul   eax,DWORD PTR [edi],0xffffff8c
  4150a1:	mov    esp,?
  4150a3:	and    edi,DWORD PTR [ebx+0x46]
  4150a6:	mov    esi,DWORD PTR [edx]
  4150a8:	and    eax,0x75f6aea4
  4150ad:	cld    
  4150ae:	std    
  4150af:	arpl   si,sp
  4150b1:	shr    DWORD PTR [edx-0x12],cl
  4150b4:	popa   
  4150b5:	mov    esp,gs
  4150b7:	and    edx,DWORD PTR [ecx]
  4150b9:	dec    edi
  4150ba:	pop    edi
  4150bb:	cmp    BYTE PTR [esi-0x5f],bl
  4150be:	push   ecx
  4150bf:	mov    BYTE PTR [ebx-0xc],al
  4150c2:	data16 xor ch,BYTE PTR [ebp+0xf740df]
  4150c9:	inc    ebp
  4150ca:	hlt    
  4150cb:	dec    edx
  4150cc:	inc    esi
  4150cd:	aad    0x47
  4150cf:	mov    eax,0x89f7277b
  4150d4:	mov    BYTE PTR [eax+esi*1+0x314eba],ah
  4150db:	add    BYTE PTR [esp+edi*1-0x1968d978],ch
  4150e2:	push   edi
  4150e3:	xor    dl,dh
  4150e5:	sub    al,0x1
  4150e7:	mov    edx,0x9cf69df4
  4150ec:	stos   DWORD PTR es:[edi],eax
  4150ed:	cwde   
  4150ee:	cmp    ch,0x7d
  4150f1:	mov    ebp,0xefbdf14e
  4150f6:	sbb    al,0x37
  4150f8:	mov    BYTE PTR [edi-0x45326b2],ch
  4150fe:	adc    al,0x62
  415100:	lea    edi,[ebp+0x7c35d956]
  415106:	add    bl,al
  415108:	les    eax,FWORD PTR [ecx+0x34f62cc3]
  41510e:	ret    
  41510f:	and    al,0xf1
  415111:	xor    al,0x8a
  415113:	xor    al,0x2b
  415115:	scas   eax,DWORD PTR es:[edi]
  415116:	jle    0x4150c1
  415118:	mov    dl,0xf3
  41511a:	call   0x8e7ac4f1
  41511f:	push   ebx
  415120:	cmp    dh,BYTE PTR [ecx+eax*1]
  415123:	sar    BYTE PTR [ebp+eiz*8-0x77],cl
  415127:	sub    al,0x67
  415129:	popf   
  41512a:	add    BYTE PTR [edx-0x22],ah
  41512d:	and    ecx,DWORD PTR [eax+0x56af7b24]
  415133:	push   ebp
  415134:	ins    BYTE PTR es:[edi],dx
  415135:	ja     0x415143
  415137:	ins    BYTE PTR es:[edi],dx
  415138:	mov    DWORD PTR [edi+0x754de9fc],0xa48a
  415142:	fs popf 
  415144:	add    BYTE PTR [eax],al
  415146:	(bad)  
  415149:	push   0x5e
  41514b:	call   0xb93b9ed3
  415150:	dec    eax
  415151:	fsub   QWORD PTR ds:0xa7037870
  415157:	std    
  415158:	hlt    
  415159:	mov    ebx,ebx
  41515b:	jbe    0x415197
  41515d:	rol    ebx,0x31
  415160:	test   BYTE PTR [ebp+0x62],al
  415163:	mov    ebx,0xfe01dc58
  415168:	inc    edi
  415169:	call   0xec914f7f
  41516e:	xchg   ebp,eax
  41516f:	cmc    
  415170:	or     BYTE PTR [ebx-0x1f],dl
  415173:	dec    ebx
  415174:	cmc    
  415175:	dec    DWORD PTR [ebx+0x2c5e9c0]
  41517b:	(bad)  
  41517c:	dec    BYTE PTR [edi]
  41517e:	mov    cl,0x13
  415180:	cmc    
  415181:	mov    esi,DWORD PTR [ebx]
  415183:	and    al,0x8a
  415185:	inc    ebp
  415186:	mov    ?,WORD PTR [ecx-0x4e311ba0]
  41518c:	pusha  
  41518d:	loopne 0x41515d
  41518f:	mov    ds:0x6e580e3d,eax
  415194:	push   es
  415195:	add    BYTE PTR [edi],ah
  415197:	dec    esp
  415198:	mov    ebp,0x84686389
  41519d:	inc    ebp
  41519e:	(bad)  
  41519f:	jo     0x4151e1
  4151a1:	call   FWORD PTR [esi+0x174070]
  4151a7:	add    BYTE PTR [esi-0x702bbf90],bl
  4151ad:	jo     0x4151ef
  4151af:	cld    
  4151b0:	(bad)  
  4151b1:	mov    ebx,0xb34c7eda
  4151b6:	js     0x41519c
  4151b8:	pop    esi
  4151b9:	dec    ebx
  4151ba:	add    BYTE PTR [edx-0xaf45a2],cl
  4151c0:	aaa    
  4151c1:	adc    eax,DWORD PTR [eax]
  4151c3:	cmp    bh,dl
  4151c5:	cmc    
  4151c6:	cmp    BYTE PTR [ebx],al
  4151c8:	dec    eax
  4151c9:	xlat   BYTE PTR ds:[ebx]
  4151ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151cb:	jmp    0xe0826bfa
  4151d0:	aaa    
  4151d1:	enter  0xc603,0x7a
  4151d5:	push   edi
  4151d6:	add    BYTE PTR [eax+0x42fa8672],cl
  4151dc:	dec    eax
  4151dd:	mov    al,ds:0x3b72fd19
  4151e2:	xchg   DWORD PTR [ebx-0x1],eax
  4151e5:	ss push ecx
  4151e7:	fdiv   DWORD PTR [edi+0x1a]
  4151ea:	inc    ecx
  4151eb:	fdiv   DWORD PTR [edi]
  4151ed:	add    al,0x49
  4151ef:	enter  0x5778,0xa7
  4151f3:	add    al,0xf9
  4151f5:	rcl    ah,1
  4151f7:	add    BYTE PTR [eax+ebx*2+0x7b7a39a9],bh
  4151fe:	xor    ecx,DWORD PTR [eax]
  415200:	lods   eax,DWORD PTR ds:[esi]
  415201:	pop    eax
  415202:	mov    esi,0xa97e6a8a
  415207:	push   es
  415208:	mov    ebp,0x8a1658
  41520d:	add    BYTE PTR [edx-0x3a],ch
  415210:	test   DWORD PTR [ebx-0x46],edi
  415213:	fwait
  415214:	mov    BYTE PTR [ebx+0x48],dl
  415217:	aas    
  415218:	add    al,0x3a
  41521a:	repnz (bad) 
  41521c:	cmp    DWORD PTR [esi],ecx
  41521e:	mov    bh,0x96
  415220:	add    cl,BYTE PTR [eax+0x43c68d33]
  415226:	xchg   edx,eax
  415227:	pushf  
  415228:	mov    BYTE PTR [ebx+0x73],al
  41522b:	push   ebp
  41522c:	test   DWORD PTR [ebx-0x7d],edi
  41522f:	fwait
  415230:	or     eax,0x9bb183
  415235:	add    BYTE PTR [edi-0x157ff79a],dh
  41523b:	xor    edi,DWORD PTR [esi]
  41523d:	add    al,0xad
  41523f:	sub    eax,0x7b71cd6
  415244:	push   esp
  415245:	add    al,0xbd
  415247:	fcomip st,st(2)
  415249:	aaa    
  41524a:	xor    al,0x4a
  41524c:	popf   
  41524d:	mov    eax,0x7ee2acb
  415252:	scas   eax,DWORD PTR es:[edi]
  415253:	sub    eax,0x6e411862
  415258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415259:	mov    ebp,0xb8bdad28
  41525e:	jns    0x4151f9
  415260:	repnz cmova ebp,DWORD PTR [esi-0x53]
  415265:	mov    ebp,0xbce3bc37
  41526a:	test   BYTE PTR [eax+0x75],ah
  41526d:	or     BYTE PTR [ecx],dh
  41526f:	test   DWORD PTR [ebp-0x39],esi
  415272:	add    BYTE PTR [eax],al
  415274:	cli    
  415275:	(bad)  
  415276:	adc    eax,0x9a8064bd
  41527b:	mov    esp,0x6dd28464
  415280:	jecxz  0x415206
  415282:	fild   DWORD PTR [eax]
  415284:	out    0xae,eax
  415286:	stos   BYTE PTR es:[edi],al
  415287:	or     DWORD PTR ss:[ebp-0x42c51fab],eax
  41528e:	xor    eax,0xb5fec2ac
  415293:	or     al,0x82
  415295:	faddp  st(5),st
  415297:	mov    esp,0x365f8424
  41529c:	jmp    0x41530b
  41529e:	jmp    0x4152a2
  4152a0:	scas   al,BYTE PTR es:[edi]
  4152a1:	push   es
  4152a2:	repnz mov esi,esp
  4152a5:	xchg   BYTE PTR [edx+0x46],ah
  4152a8:	xchg   ecx,eax
  4152a9:	fwait
  4152aa:	outs   dx,BYTE PTR ds:[esi]
  4152ab:	mov    eax,0x466f848a
  4152b0:	xor    esp,ecx
  4152b2:	jp     0x4152ea
  4152b4:	xchg   DWORD PTR [eax],esi
  4152b6:	add    DWORD PTR [edi-0x58b563fc],ebp
  4152bc:	stos   DWORD PTR es:[edi],eax
  4152bd:	xchg   BYTE PTR [eax],al
  4152bf:	pop    edx
  4152c0:	mov    bh,0xf0
  4152c2:	in     al,dx
  4152c3:	stc    
  4152c4:	scas   eax,DWORD PTR es:[edi]
  4152c5:	lock in al,dx
  4152c7:	push   0x21
  4152c9:	adc    DWORD PTR fs:[edx],edx
  4152cc:	lock jae 0x4152db
  4152cf:	jne    0x4152d0
  4152d1:	test   esp,edi
  4152d3:	ds mov bh,0xf0
  4152d6:	call   0xbf4153b4
  4152db:	imul   eax
  4152dd:	push   0x59
  4152df:	jo     0x4152f2
  4152e1:	loop   0x41535c
  4152e3:	mov    esp,0x826b6d0c
  4152e8:	cld    
  4152e9:	push   ss
  4152ea:	outs   dx,DWORD PTR ds:[esi]
  4152eb:	loope  0x415274
  4152ed:	daa    
  4152ee:	push   0x7b
  4152f0:	mov    edi,0x87e734d9
  4152f5:	or     eax,0x9a2d90b7
  4152fa:	mov    ch,cl
  4152fc:	das    
  4152fd:	sbb    esp,edi
  4152ff:	add    BYTE PTR [edx+ebx*1-0x5],0xbb
  415304:	push   esi
  415305:	int    0xaa
  415307:	out    0xf4,eax
  415309:	pusha  
  41530a:	pushaw 
  41530c:	mov    cl,BYTE PTR [ebx+ebx*4+0x4b]
  415310:	push   esi
  415311:	(bad)  ds:0x34e8a4b2
  415317:	xor    al,0x88
  415319:	and    al,0x43
  41531b:	mov    ebx,0xefbac956
  415320:	lock jb 0x415311
  415323:	and    ecx,DWORD PTR [edx-0x38c220cc]
  415329:	out    0xbe,al
  41532b:	add    al,BYTE PTR [edx]
  41532d:	jmp    0x900066
  415332:	mov    edx,0x8df050b3
  415337:	jo     0x4152bd
  415339:	dec    ebp
  41533a:	(bad)  
  41533b:	das    
  41533c:	mov    dh,0xc
  41533e:	add    BYTE PTR [eax],al
  415340:	push   esp
  415341:	push   ebp
  415342:	cmp    cl,BYTE PTR [ebp+0x36]
  415345:	das    
  415346:	test   DWORD PTR [edi+ecx*2+0x37],edx
  41534a:	add    DWORD PTR [ebx-0x2ba74ef9],ecx
  415350:	jmp    0x415339
  415352:	std    
  415353:	(bad)  
  415354:	xchg   ebx,eax
  415355:	mov    ds:0x374efffc,eax
  41535a:	mov    dh,al
  41535c:	and    eax,0xff7d14f4
  415361:	mov    cl,0x48
  415363:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415365:	in     eax,dx
  415366:	clc    
  415367:	mov    ecx,ebx
  415369:	pop    esi
  41536a:	mov    bh,BYTE PTR [ebp+0x26]
  41536d:	push   esi
  41536e:	xor    al,0x1c
  415370:	jmp    0xbbcca0b8
  415375:	retf   0xcf8a
  415378:	cmc    
  415379:	jmp    0x41538b
  41537b:	jge    0x415356
  41537d:	mov    cl,0x48
  41537f:	clc    
  415380:	mov    al,0x7f
  415382:	sbb    BYTE PTR [ecx-0x7d],bh
  415385:	ss inc esi
  415387:	cmp    edi,DWORD PTR [ebx+0x28]
  41538a:	jge    0x41537d
  41538c:	sbb    DWORD PTR [ebx-0x502f8a14],eax
  415392:	js     0x415380
  415394:	inc    edi
  415395:	cmp    al,0xf5
  415397:	cmp    edi,ebx
  415399:	ret    
  41539a:	js     0x41539f
  41539c:	pop    ss
  41539d:	cmp    al,0xf5
  41539f:	sbb    DWORD PTR [ebx-0x2c],0x1
  4153a3:	jle    0x4153a5
  4153a5:	add    BYTE PTR [esi+0x3aec7781],ah
  4153ab:	cmp    edi,DWORD PTR [edi]
  4153ad:	jmp    0x4153e6
  4153af:	xchg   ecx,eax
  4153b0:	and    DWORD PTR [ebx-0x6d],0xffffff8c
  4153b4:	mov    ecx,DWORD PTR [ebx+0x27]
  4153b7:	mov    cs,ebp
  4153b9:	(bad)  
  4153ba:	jmp    0x415370
  4153bc:	inc    edx
  4153bd:	cmp    edx,ebp
  4153bf:	pusha  
  4153c0:	xor    al,0xa8
  4153c2:	mov    esp,0xf289a88f
  4153c7:	call   0x259c9eb6
  4153cc:	aad    0x3f
  4153ce:	cmc    
  4153cf:	adc    edx,DWORD PTR [ecx-0x18]
  4153d2:	mov    esp,0xea29acc7
  4153d7:	clc    
  4153d8:	mov    bl,BYTE PTR [ebx+0x4f]
  4153db:	and    eax,0x24e00db5
  4153e0:	inc    esi
  4153e1:	xchg   DWORD PTR [edx+0x25ad0723],esp
  4153e7:	xchg   edi,eax
  4153e8:	fidivr DWORD PTR [esi+0x2f]
  4153eb:	push   es
  4153ec:	pop    ecx
  4153ed:	call   0xe9de2cb0
  4153f2:	xor    DWORD PTR [esi],edx
  4153f4:	pop    ecx
  4153f5:	fsubr  DWORD PTR [esi+0x7a809ca0]
  4153fb:	pop    edi
  4153fc:	add    BYTE PTR [ebx+0x1318d80],cl
  415402:	mov    edx,0x8a88fca2
  415407:	jnp    0x415412
  415409:	lods   eax,DWORD PTR ds:[esi]
  41540a:	add    BYTE PTR [eax],al
  41540c:	add    BYTE PTR [edi-0x2af32dfb],0xa
  415413:	(bad)  
  415414:	test   DWORD PTR [ebx+0x50c00000],0x5f3a80d9
  41541e:	add    BYTE PTR [ecx+0xb2b972a],cl
  415424:	mov    esp,0x3388d120
  415429:	xor    al,0xdb
  41542b:	mov    ecx,DWORD PTR [ebx]
  41542d:	dec    ecx
  41542e:	jmp    0x6077ceb7
  415433:	inc    edi
  415434:	mov    esi,DWORD PTR [ecx+ecx*4+0x0]
  415438:	sub    eax,0x4208726c
  41543d:	scas   al,BYTE PTR es:[edi]
  41543e:	sub    eax,0xaa6b71a0
  415443:	mov    ds:0xb917af33,eax
  415448:	sub    eax,0xafdbe76e
  41544d:	lock adc al,BYTE PTR [ebx]
  415450:	mov    dh,0x79
  415452:	call   0x61cd20e1
  415457:	aas    
  415458:	aas    
  415459:	stos   DWORD PTR es:[edi],eax
  41545a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41545b:	iret   
  41545c:	(bad)  
  41545d:	je     0x41541c
  41545f:	ds mov esi,0x7c8d4de6
  415465:	and    bh,0xd2
  415468:	mov    eax,0x848d41e6
  41546d:	xchg   esp,eax
  41546e:	jno    0x4154bf
  415470:	add    BYTE PTR [eax],al
  415472:	sbb    ecx,DWORD PTR [ebp-0x7f83730a]
  415478:	call   DWORD PTR [eax]
  41547a:	mov    dh,0xfe
  41547c:	add    DWORD PTR [ecx+0x4f6f2a83],edi
  415482:	fistp  DWORD PTR [ecx]
  415484:	pop    edi
  415485:	das    
  415486:	dec    edi
  415487:	lods   eax,DWORD PTR ds:[esi]
  415488:	lea    ecx,[ebx]
  41548a:	arpl   WORD PTR ss:[ebx+ecx*4+0x23],cx
  41548f:	in     eax,0x28
  415491:	std    
  415492:	jge    0x4154f0
  415494:	push   esi
  415495:	mov    al,ds:0xb8f9eebe
  41549a:	je     0x415518
  41549c:	jmp    0x2dee27e7
  4154a1:	mov    esp,0x9d00ef6e
  4154a6:	pusha  
  4154a7:	jb     0x4154a5
  4154a9:	and    al,0xdf
  4154ab:	stos   BYTE PTR es:[edi],al
  4154ac:	dec    esi
  4154ad:	stc    
  4154ae:	popf   
  4154af:	in     eax,dx
  4154b0:	cld    
  4154b1:	out    dx,al
  4154b2:	mov    eax,0xcf96fbb7
  4154b7:	inc    edx
  4154b8:	iret   
  4154b9:	call   0xb041e8b7
  4154be:	xor    eax,0x7229f0ed
  4154c3:	cmc    
  4154c4:	adc    al,0xe6
  4154c6:	mov    al,0x15
  4154c8:	sti    
  4154c9:	outs   dx,BYTE PTR ds:[esi]
  4154ca:	lahf   
  4154cb:	stos   BYTE PTR es:[edi],al
  4154cc:	inc    esi
  4154cd:	cmc    
  4154ce:	stos   BYTE PTR es:[edi],al
  4154cf:	in     al,dx
  4154d0:	fdiv   QWORD PTR [ecx+0x3c]
  4154d3:	stos   DWORD PTR es:[edi],eax
  4154d4:	les    esi,FWORD PTR [esi-0x25120000]
  4154da:	leave  
  4154db:	sub    ebx,DWORD PTR [esp+esi*1]
  4154de:	xor    BYTE PTR [ecx],ch
  4154e0:	mov    eax,DWORD PTR [esi+edx*2-0x124a278e]
  4154e7:	cdq    
  4154e8:	mov    ebx,0x6d6208eb
  4154ed:	and    BYTE PTR [ebx-0x42],dl
  4154f0:	lods   eax,DWORD PTR ds:[esi]
  4154f1:	jmp    0x4154e7
  4154f3:	jb     0x41556e
  4154f5:	sub    BYTE PTR [eax+0x10e3bb13],cl
  4154fb:	jmp    0x76c6:0xbaf735ec
  415502:	inc    esi
  415503:	push   DWORD PTR ds:0x35f64676
  415509:	mov    bh,0x4e
  41550b:	cmp    DWORD PTR [ebp+0x7670bcfb],ebp
  415511:	nop
  415512:	cmp    BYTE PTR [eax-0x171b54c8],ch
  415518:	xor    al,0x34
  41551a:	sub    BYTE PTR [ecx+0x4eb764],ah
  415520:	xchg   bl,cl
  415522:	add    cl,BYTE PTR [ebx+0x458a284b]
  415528:	and    dh,BYTE PTR [ecx+0x63a5f050]
  41552e:	push   cs
  41552f:	lea    edx,[edi]
  415531:	cmp    DWORD PTR [ecx],eax
  415533:	add    BYTE PTR [ebp+0x75],ah
  415536:	test   BYTE PTR [ebp-0x2e],al
  415539:	retf   
  41553a:	add    cl,BYTE PTR [ebx+0x6c5b0000]
  415540:	adc    BYTE PTR [bx-0x4f],dl
  415544:	dec    eax
  415545:	clc    
  415546:	out    0xec,eax
  415548:	fdivr  DWORD PTR [ebx]
  41554a:	lahf   
  41554b:	cmp    eax,0xc01b8902
  415550:	mov    al,BYTE PTR [ebp+0x26]
  415553:	jnp    0x415510
  415555:	jge    0x4155b4
  415557:	mov    al,0x40
  415559:	fcom   st(5)
  41555b:	(bad)  
  41555d:	pop    gs
  41555f:	in     eax,dx
  415560:	in     al,dx
  415561:	ud1    esp,esp
  415564:	lock mov esi,ebx
  415567:	sub    dl,BYTE PTR [edx-0x1]
  41556a:	jmp    0x415526
  41556c:	(bad)  
  41556d:	jne    0x4155d9
  41556f:	shl    bh,1
  415571:	clc    
  415572:	push   ecx
  415573:	(bad)  
  415574:	push   cs
  415575:	scas   eax,DWORD PTR es:[edi]
  415576:	sar    DWORD PTR [edx-0x55edb276],cl
  41557c:	inc    eax
  41557d:	hlt    
  41557e:	lea    edx,[ebp-0x23]
  415581:	add    BYTE PTR [ebp+0x5d00e155],cl
  415587:	push   ebp
  415588:	jmp    0xe596b28d
  41558d:	add    BYTE PTR [ebx-0x77b9f184],al
  415593:	jge    0x415591
  415595:	mov    BYTE PTR [ebx+0x4],ch
  415598:	test   BYTE PTR [ebp+0x37],bl
  41559b:	ror    DWORD PTR [ebp+0x41d6fb43],0xd0
  4155a2:	add    BYTE PTR [eax],al
  4155a4:	ss iret 
  4155a6:	inc    ecx
  4155a7:	adc    eax,0x7ed71836
  4155ac:	or     ecx,DWORD PTR [edx]
  4155ae:	cmp    eax,ebp
  4155b0:	aaa    
  4155b1:	dec    eax
  4155b2:	sti    
  4155b3:	or     al,0xe0
  4155b5:	jl     0x415544
  4155b7:	push   ebx
  4155b8:	jae    0x415547
  4155ba:	imul   eax,DWORD PTR [eax],0x11
  4155bd:	bound  eax,QWORD PTR [ecx-0x24]
  4155c0:	or     bl,BYTE PTR [eax-0x5e70bc4d]
  4155c6:	sbb    BYTE PTR [ecx+0x7300b8f2],al
  4155cc:	ds adc dl,al
  4155cf:	(bad)  
  4155d0:	cli    
  4155d1:	add    BYTE PTR gs:[edi+0x391ded02],al
  4155d8:	cli    
  4155d9:	in     al,dx
  4155da:	xor    BYTE PTR ds:0x899ccf48,dl
  4155e0:	cli    
  4155e1:	pop    eax
  4155e2:	mov    bl,0x4b
  4155e4:	arpl   WORD PTR [ecx],cx
  4155e6:	rol    BYTE PTR [edx],0xb4
  4155e9:	ror    ah,0x0
  4155ec:	mov    esi,0xe37dbcd0
  4155f1:	repnz sti 
  4155f3:	lds    esi,FWORD PTR [edx+0x3b]
  4155f6:	add    BYTE PTR [ecx+0x42f7237a],cl
  4155fc:	adc    ebx,DWORD PTR [esi-0x2737f2f6]
  415602:	aam    0xd
  415604:	shl    BYTE PTR [eax+0xe9a0],0x3f
  41560b:	mov    gs,WORD PTR [ebx+0x43]
  41560e:	xlat   BYTE PTR ds:[ebx]
  41560f:	xchg   esi,eax
  415610:	imul   edx,DWORD PTR [ebx+0x3],0xc
  415614:	cmp    esi,edi
  415616:	aaa    
  415617:	xor    al,0x71
  415619:	dec    edi
  41561a:	repz or ah,ah
  41561d:	sbb    eax,0x30a9f70e
  415622:	sbb    eax,0xaf01dbb4
  415627:	cmp    ah,dh
  415629:	add    al,0xea
  41562b:	fs test eax,0x2eac3fac
  415631:	push   es
  415632:	mov    al,ds:0x98b62577
  415637:	lods   al,BYTE PTR ds:[esi]
  415638:	cmp    eax,0xe876b6c4
  41563d:	or     DWORD PTR [eiz*1-0x654bfb16],0xffffffea
  415645:	add    esi,DWORD PTR [edi]
  415647:	mov    ah,0xf3
  415649:	or     esi,DWORD PTR [edi-0x42fb6601]
  41564f:	xor    eax,0xfee0f2fe
  415654:	push   0x4
  415656:	jecxz  0x415681
  415658:	int3   
  415659:	mov    ah,ah
  41565b:	pop    edi
  41565c:	(bad)  
  41565d:	clc    
  41565e:	in     eax,0xbb
  415660:	fsubp  st(2),st
  415662:	xor    eax,ebp
  415664:	mov    ch,0xd7
  415666:	sub    edi,DWORD PTR [eax]
  415668:	jb     0x415667
  41566a:	mov    edi,0x8c1df6
  41566f:	add    BYTE PTR [ebx],dh
  415671:	sub    DWORD PTR cs:[edi+ebp*1+0x1805a6ac],ebp
  415679:	ja     0x415628
  41567b:	mov    ah,0x10
  41567d:	lods   al,BYTE PTR ds:[esi]
  41567e:	mov    ch,0x7b
  415680:	mov    dh,0x75
  415682:	call   0xfa71862f
  415687:	mov    ebp,0x8bea7d74
  41568c:	cmp    bh,BYTE PTR [ebp+0x75]
  41568f:	sar    DWORD PTR [edi+esi*1+0xabe701],cl
  415696:	shr    esi,0x9
  415699:	pop    esp
  41569a:	cld    
  41569b:	pop    esp
  41569c:	xchg   ebx,eax
  41569d:	jecxz  0x41569a
  41569f:	push   esp
  4156a0:	xchg   DWORD PTR [ebx+0x7e8bd564],ecx
  4156a6:	add    cl,bl
  4156a8:	cmp    DWORD PTR [esi+esi*2+0x1],esi
  4156ac:	jmp    0xece9:0x1beed900
  4156b3:	mov    dh,0x51
  4156b5:	jl     0x4156c3
  4156b7:	jbe    0x4156a2
  4156b9:	cmp    esp,0x1c
  4156bc:	(bad)  
  4156bd:	stos   BYTE PTR es:[edi],al
  4156be:	jbe    0x415715
  4156c0:	retf   0x236
  4156c3:	bound  ecx,QWORD PTR [ecx+0x2c]
  4156c6:	mov    DWORD PTR [ecx+eax*8],esp
  4156c9:	stos   DWORD PTR es:[edi],eax
  4156ca:	inc    esi
  4156cb:	xchg   BYTE PTR [ebp+eiz*4-0x555c810c],bl
  4156d2:	inc    esi
  4156d3:	in     eax,0x0
  4156d5:	add    BYTE PTR [edi],dh
  4156d7:	pop    ebx
  4156d8:	push   eax
  4156d9:	outs   dx,BYTE PTR ds:[esi]
  4156da:	or     DWORD PTR [eax-0x741bd100],ecx
  4156e0:	inc    edx
  4156e1:	sub    eax,DWORD PTR [ebx-0x48a5ff82]
  4156e7:	lock lock stc 
  4156ea:	scas   eax,DWORD PTR es:[edi]
  4156eb:	lock lock push 0x59
  4156ef:	push   0xb8680211
  4156f4:	or     al,0x65
  4156f6:	jp     0x415772
  4156f8:	cld    
  4156f9:	cs mov bh,0xf7
  4156fc:	in     al,dx
  4156fd:	stc    
  4156fe:	mov    edi,0x516aecf7
  415703:	ins    BYTE PTR es:[edi],dx
  415704:	adc    edx,edx
  415706:	inc    ecx
  415707:	les    ecx,FWORD PTR [ebx*2+0xfc7a16]
  41570e:	cmp    esp,ebx
  415710:	pop    ebp
  415711:	mov    edx,DWORD PTR [eax]
  415713:	loope  0x4156d8
  415715:	ret    0x37fe
  415718:	push   eax
  415719:	mov    ebx,edx
  41571b:	sti    
  41571c:	in     al,dx
  41571d:	sub    al,0xd
  41571f:	ficom  WORD PTR [ebp+0x33]
  415722:	mov    WORD PTR [ebx+0x701d47fd],es
  415728:	test   BYTE PTR [ebp-0x22],dl
  41572b:	stc    
  41572c:	dec    edi
  41572d:	hlt    
  41572e:	daa    
  41572f:	fstp   st(4)
  415731:	mov    DWORD PTR [ebx-0x2c],ebp
  415734:	xor    al,0x55
  415736:	xor    BYTE PTR [esi],0x8b
  415739:	stos   BYTE PTR es:[edi],al
  41573a:	add    BYTE PTR [eax],al
  41573c:	(bad)  
  41573d:	aaa    
  41573e:	add    DWORD PTR [ebx+0x5583784b],ecx
  415744:	mov    dl,0xf9
  415746:	inc    edi
  415747:	loopne 0x41575e
  415749:	cmc    
  41574a:	adc    BYTE PTR [ecx-0x35c53bbd],cl
  415750:	imul   esi,DWORD PTR [ebp+0x375e0181],0xfaea4d8a
  41575a:	push   edi
  41575b:	loopne 0x4156ec
  41575d:	sar    edi,1
  41575f:	mov    BYTE PTR [ebx+0x450c8a6f],cl
  415765:	mov    al,BYTE PTR [edi+0x18]
  415768:	pop    ecx
  415769:	mov    bl,0x56
  41576b:	add    DWORD PTR [esi+0x37],ecx
  41576e:	test   BYTE PTR [ebp+0x76],cl
  415771:	mov    ch,0x51
  415773:	call   DWORD PTR [ecx-0x13]
  415776:	call   0x178657c
  41577b:	mov    ebx,DWORD PTR [esi-0x75]
  41577e:	aas    
  41577f:	adc    al,0xdb
  415781:	out    0x89,eax
  415783:	dec    ebp
  415784:	jbe    0x415781
  415786:	ja     0x415780
  415788:	aaa    
  415789:	fs in  al,dx
  41578b:	or     BYTE PTR [edx-0xc84842a],al
  415791:	add    eax,0x5d7a39c0
  415796:	xor    DWORD PTR [esi],ecx
  415798:	lods   al,BYTE PTR ds:[esi]
  415799:	iret   
  41579a:	test   al,0x37
  41579c:	sub    eax,DWORD PTR [esi+0x3a]
  41579f:	push   es
  4157a0:	add    BYTE PTR [eax],al
  4157a2:	js     0x4157fa
  4157a4:	xor    dl,BYTE PTR [eax]
  4157a6:	dec    ebx
  4157a7:	pop    edi
  4157a8:	aas    
  4157a9:	cmp    edi,eax
  4157ab:	xlat   BYTE PTR ds:[ebx]
  4157ac:	push   es
  4157ad:	xchg   DWORD PTR [edx],edi
  4157af:	pop    ebp
  4157b0:	jge    0x41582d
  4157b2:	stos   DWORD PTR es:[edi],eax
  4157b3:	xor    eax,0x8e2af432
  4157b8:	jge    0x415835
  4157ba:	stos   DWORD PTR es:[edi],eax
  4157bb:	or     eax,0x4b37e831
  4157c0:	std    
  4157c1:	cmp    BYTE PTR [edx],dl
  4157c3:	popf   
  4157c4:	sub    al,0x1
  4157c6:	cmc    
  4157c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157c8:	add    al,0x81
  4157ca:	sbb    dh,BYTE PTR [ebp+0x7cfa8900]
  4157d0:	(bad)
  4157d3:	dec    ebx
  4157d4:	add    al,0xdd
  4157d6:	sub    al,0x80
  4157d8:	adc    al,0x7c
  4157da:	lea    edx,ds:0x17acec31
  4157e0:	mov    ch,0x29
  4157e2:	add    dl,BYTE PTR [ecx]
  4157e4:	fcmovne st,st(7)
  4157e6:	test   dh,0x7d
  4157e9:	push   ebx
  4157ea:	push   ebx
  4157eb:	adc    eax,0xc00cf459
  4157f0:	lods   al,BYTE PTR ds:[esi]
  4157f1:	mov    DWORD PTR [edx+0x38efdadf],edx
  4157f7:	stos   BYTE PTR es:[edi],al
  4157f8:	int    0x42
  4157fa:	scas   al,BYTE PTR es:[edi]
  4157fb:	mov    eax,0x3dc80dc8
  415800:	jmp    0x4157df
  415802:	xchg   ecx,eax
  415803:	xor    al,0xf2
  415805:	jle    0x415807
  415807:	add    BYTE PTR [eax+ecx*4+0x71],ch
  41580b:	inc    eax
  41580c:	jle    0x5c9dd6fe
  415812:	popa   
  415813:	pop    eax
  415814:	fbstp  TBYTE PTR [ebp+eax*4-0x5458c8f1]
  41581b:	add    eax,0x42653564
  415820:	xor    DWORD PTR [ebp-0x36bdec6b],ebp
  415826:	cmp    eax,0xe8968818
  41582b:	in     al,dx
  41582c:	out    dx,al
  41582d:	sub    DWORD PTR [ebx-0x41],esp
  415830:	aaa    
  415831:	xor    al,0xea
  415833:	mov    al,0xf4
  415835:	push   edi
  415836:	push   0x2f
  415838:	dec    ebx
  415839:	xor    al,0x6f
  41583b:	aaa    
  41583c:	xor    edi,edi
  41583e:	into   
  41583f:	jl     0x41582d
  415841:	jnp    0x4158a5
  415843:	add    BYTE PTR [edx-0x52],cl
  415846:	xor    eax,0xd308bfae
  41584b:	add    ch,BYTE PTR [edi-0x52fa2518]
  415851:	out    0x8e,eax
  415853:	jl     0x415858
  415855:	inc    ecx
  415856:	out    0x84,eax
  415858:	jb     0x41588a
  41585a:	jo     0x41589b
  41585c:	arpl   WORD PTR [ecx+ecx*4+0x8],si
  415860:	sub    eax,0xa00626c
  415865:	scas   al,BYTE PTR es:[edi]
  415866:	mov    ch,0x9b
  415868:	dec    ecx
  415869:	imul   ebp,DWORD PTR [edx],0xffffffa3
  41586c:	add    BYTE PTR [eax],al
  41586e:	cmp    esp,DWORD PTR [edi+0x6e2db0b7]
  415874:	out    0xcb,eax
  415876:	mov    edi,0xb602fae7
  41587b:	jo     0x415865
  41587d:	jp     0x41581b
  41587f:	mov    BYTE PTR [ecx],al
  415881:	pusha  
  415882:	jo     0x415900
  415884:	mov    cl,BYTE PTR [eax+ebp*8+0x73a4c03a]
  41588b:	stos   DWORD PTR es:[edi],eax
  41588c:	push   esi
  41588d:	adc    DWORD PTR [edx-0x1a150313],eax
  415893:	mov    al,0x56
  415895:	xor    DWORD PTR [edx-0x1b],esi
  415898:	in     al,0x70
  41589a:	or     BYTE PTR [eax+ebp*8-0x3129c1d],0x2
  4158a2:	inc    eax
  4158a3:	mov    bl,0x7e
  4158a5:	icebp  
  4158a6:	xchg   edi,edi
  4158a8:	adc    al,0x72
  4158aa:	popa   
  4158ab:	mov    WORD PTR [eax+0x5eab3354],cs
  4158b1:	loope  0x4158e6
  4158b3:	imul   ecx,DWORD PTR [edx+0x3838ca15],0xe2f77b34
  4158bd:	jb     0x415920
  4158bf:	and    al,0xfc
  4158c1:	sub    al,0xcb
  4158c3:	js     0x415912
  4158c5:	rcl    DWORD PTR [ebx],0xed
  4158c8:	clc    
  4158c9:	loop   0x415914
  4158cb:	pusha  
  4158cc:	jge    0x415887
  4158ce:	(bad)  
  4158cf:	hlt    
  4158d0:	cld    
  4158d1:	bound  eax,QWORD PTR [eax]
  4158d3:	add    BYTE PTR [ecx],bh
  4158d5:	and    al,0x3a
  4158d7:	sbb    al,0xa7
  4158d9:	lea    ebp,es:[ebx-0x5a]
  4158dd:	jbe    0x4158db
  4158df:	mov    edx,0x8d4d788a
  4158e4:	jne    0x41593e
  4158e6:	jmp    edi
  4158e8:	adc    DWORD PTR [ecx+eax*2+0xc1ff022],edx
  4158ef:	ins    DWORD PTR es:[edi],dx
  4158f0:	out    0x79,eax
  4158f2:	cld    
  4158f3:	push   esi
  4158f4:	mov    ebx,0x71630cf4
  4158f9:	pop    eax
  4158fa:	mov    DWORD PTR [eax],eax
  4158fc:	es stc 
  4158fe:	lds    ebx,FWORD PTR [edi-0x40]
  415901:	call   0x34481bc9
  415906:	xor    al,al
  415908:	jne    0x4158c8
  41590a:	push   eax
  41590b:	mov    esp,DWORD PTR [edx]
  41590d:	mov    al,0xed
  41590f:	push   eax
  415910:	test   DWORD PTR [esi],esi
  415912:	or     DWORD PTR [ebx+0x575327d7],ecx
  415918:	push   edi
  415919:	ss icebp 
  41591b:	mov    esp,DWORD PTR [ebx+0x65fa8a23]
  415921:	fimul  WORD PTR [ebx+eax*1]
  415924:	push   ss
  415925:	xor    bh,dh
  415927:	xor    ecx,eax
  415929:	ins    BYTE PTR es:[edi],dx
  41592a:	inc    eax
  41592b:	(bad)  
  41592c:	fidiv  WORD PTR [ecx+0x40]
  41592f:	dec    esi
  415931:	clc    
  415932:	inc    edi
  415933:	mov    al,0x57
  415935:	inc    ebp
  415936:	ror    DWORD PTR [ecx-0x67a50000],0x3a
  41593d:	shl    DWORD PTR [ecx-0x71fe194c],0x33
  415944:	sub    cl,al
  415946:	pop    ss
  415947:	cmc    
  415948:	enter  0x9deb,0xfa
  41594c:	dec    edi
  41594d:	or     al,0x5
  41594f:	in     eax,dx
  415950:	ror    BYTE PTR [ecx-0x2fc52bb5],0x91
  415957:	mov    ah,0xba
  415959:	add    DWORD PTR [esi+0x33],ebx
  41595c:	sub    al,dl
  41595e:	out    0xec,eax
  415960:	int3   
  415961:	jmp    0x4159b0
  415963:	cli    
  415964:	aas    
  415965:	int3   
  415966:	xor    al,0x20
  415968:	push   esp
  415969:	mov    DWORD PTR [ebx],esi
  41596b:	mov    esp,0x8ad64d84
  415970:	mov    ebx,0x3ff84d7d
  415975:	hlt    
  415976:	aaa    
  415977:	adc    cl,BYTE PTR [edx-0x38]
  41597a:	ins    BYTE PTR es:[edi],dx
  41597b:	dec    esp
  41597c:	xor    al,BYTE PTR [ecx]
  41597e:	mov    esi,0xaafda8c7
  415983:	cmc    
  415984:	sti    
  415985:	mov    ah,0x6a
  415987:	cmc    
  415988:	stos   DWORD PTR es:[edi],eax
  415989:	jae    0x415996
  41598b:	push   esi
  41598c:	jae    0x4159e1
  41598e:	sbb    ecx,DWORD PTR [esi+0x3a]
  415991:	lock lods al,BYTE PTR ds:[esi]
  415993:	xchg   edi,eax
  415994:	clc    
  415995:	out    0x16,eax
  415997:	sbb    DWORD PTR [ebp+edi*8+0xda8cfbc],ebp
  41599e:	add    BYTE PTR [eax],al
  4159a0:	cwde   
  4159a1:	(bad)  
  4159a2:	mov    ah,0x81
  4159a4:	pop    edx
  4159a5:	push   ebp
  4159a6:	add    eax,0x5215281
  4159ab:	sbb    DWORD PTR [edx+0x2d],0x69528105
  4159b2:	add    BYTE PTR [ecx+0x3c815d6a],cl
  4159b8:	sbb    DWORD PTR [edi-0x3d],eax
  4159bb:	add    eax,0xb8391437
  4159c0:	mov    esi,0xfa877947
  4159c5:	mov    al,ds:0x8b8743c6
  4159ca:	mov    BYTE PTR [ebx+0x24],0x8c
  4159ce:	mov    eax,eax
  4159d0:	or     DWORD PTR [edi],edi
  4159d2:	cmp    BYTE PTR [ebx-0x69],0x8c
  4159d6:	cmp    DWORD PTR [ebx],eax
  4159d8:	lods   al,BYTE PTR ds:[esi]
  4159d9:	mov    bh,BYTE PTR [ebp+0x43]
  4159dc:	(bad)  
  4159dd:	adc    DWORD PTR [edx],eax
  4159df:	cmp    edx,esi
  4159e1:	aam    0x39
  4159e3:	add    esp,DWORD PTR [eax+0x4f]
  4159e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159e7:	jmp    0xe472642e
  4159ec:	aaa    
  4159ed:	add    BYTE PTR [ebx],0xc6
  4159f0:	repnz xor esi,edi
  4159f3:	add    edi,DWORD PTR [eax-0xa15c210]
  4159f9:	push   edi
  4159fa:	fst    QWORD PTR [edx+esi*1]
  4159fd:	lock inc ebp
  4159ff:	scas   al,BYTE PTR es:[edi]
  415a00:	jl     0x415a62
  415a02:	rol    DWORD PTR [bx+si],0x0
  415a06:	cmp    esi,DWORD PTR [ecx-0xac82843]
  415a0c:	and    DWORD PTR [edx-0x2c5a91c5],ebx
  415a12:	aaa    
  415a13:	test   eax,0xef48a7ad
  415a18:	or     DWORD PTR ds:0xcbada92f,esi
  415a1e:	mov    esi,0x319a2de7
  415a23:	test   eax,0xe7aecfad
  415a28:	and    DWORD PTR [ebx+0x37ea765c],eax
  415a2e:	xor    al,0x39
  415a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a31:	mov    DWORD PTR [ebx+0x4b],0xac36fd6a
  415a38:	out    0xd,al
  415a3a:	scas   al,BYTE PTR es:[edi]
  415a3b:	fs test eax,0x36ac3f9a
  415a41:	push   cs
  415a42:	test   al,0xaa
  415a44:	call   0x7347:0x71248dc3
  415a4b:	jae    0x415a0f
  415a4d:	or     al,0xbf
  415a4f:	loopne 0x415a1c
  415a51:	add    DWORD PTR [edi+0x790103f0],edi
  415a57:	out    dx,eax
  415a58:	fwait
  415a59:	add    esi,DWORD PTR [esi-0x137c1192]
  415a5f:	and    dl,ch
  415a61:	cld    
  415a62:	mov    ch,0xd2
  415a64:	jmp    0xfb:0xebb43703
  415a6b:	add    al,bl
  415a6d:	test   BYTE PTR [eax],0x99
  415a70:	cmp    ebp,DWORD PTR [edx-0xabc0afc]
  415a76:	jge    0x415ade
  415a78:	cmp    eax,DWORD PTR [eax]
  415a7a:	push   es
  415a7b:	and    bh,al
  415a7d:	mov    bh,0x75
  415a7f:	sbb    eax,0xe6893037
  415a84:	lods   al,BYTE PTR ds:[esi]
  415a85:	sub    BYTE PTR [ebx],bl
  415a87:	jb     0x415a7d
  415a89:	mov    ah,0xe9
  415a8b:	icebp  
  415a8c:	pushf  
  415a8d:	lock sbb ch,al
  415a90:	(bad)  
  415a91:	mov    ch,0xc2
  415a93:	inc    ecx
  415a94:	and    ebp,DWORD PTR [ebp-0x730b9ab2]
  415a9a:	sbb    DWORD PTR [ecx+0x6f],esi
  415a9d:	push   ss
  415a9e:	jmp    DWORD PTR [eax+0x77]
  415aa1:	push   ss
  415aa2:	add    BYTE PTR [edi],ah
  415aa4:	jo     0x415b1d
  415aa6:	add    ch,BYTE PTR [edx-0x7]
  415aa9:	das    
  415aaa:	call   0xc36633a0
  415aaf:	lods   al,BYTE PTR ds:[esi]
  415ab0:	mov    ds:0x9be68933,eax
  415ab5:	add    cl,dl
  415ab7:	je     0x415af1
  415ab9:	push   ss
  415aba:	cld    
  415abb:	push   esp
  415abc:	out    dx,eax
  415abd:	jbe    0x415b35
  415abf:	shl    ebx,1
  415ac1:	add    ch,dh
  415ac3:	cmp    edx,ebx
  415ac5:	add    cl,dh
  415ac7:	rcr    DWORD PTR [ecx+0x78],1
  415aca:	cld    
  415acb:	mov    esi,0xa9868437
  415ad0:	add    BYTE PTR [eax],al
  415ad2:	dec    ecx
  415ad3:	cmp    bh,ah
  415ad5:	xor    al,0xdb
  415ad7:	es mov ah,0x34
  415ada:	mov    ds:0x7b957676,eax
  415adf:	mov    edi,0xa38556
  415ae4:	icebp  
  415ae5:	bound  esp,QWORD PTR [ecx]
  415ae7:	mov    esp,0x315100c3
  415aec:	mov    bh,BYTE PTR [ebp+0x66]
  415aef:	clc    
  415af0:	aas    
  415af1:	(bad)  
  415af2:	(bad)  
  415af3:	in     eax,dx
  415af4:	std    
  415af5:	call   0x401ee4
  415afa:	(bad)
  415afd:	shr    esi,0x32
  415b00:	push   ecx
  415b01:	call   DWORD PTR [ebx]
  415b03:	test   al,0x88
  415b05:	or     al,0x18
  415b07:	pop    es
  415b08:	jmp    0xfee21342
  415b0d:	add    ebx,DWORD PTR [esi-0x4c]
  415b10:	inc    eax
  415b11:	in     al,dx
  415b12:	out    dx,al
  415b13:	in     al,dx
  415b14:	aas    
  415b15:	in     al,dx
  415b16:	popf   
  415b17:	push   edx
  415b18:	int    0x10
  415b1a:	adc    eax,0x8a0fc0fb
  415b1f:	xor    edi,ebx
  415b21:	dec    DWORD PTR [ecx-0x4c]
  415b24:	inc    eax
  415b25:	call   0xe8814818
  415b2a:	dec    ebp
  415b2b:	push   edx
  415b2c:	leave  
  415b2d:	adc    ch,dh
  415b2f:	cli    
  415b30:	mov    al,0xf
  415b32:	pop    edx
  415b33:	push   edi
  415b34:	(bad)  
  415b35:	inc    DWORD PTR [eax]
  415b37:	add    cl,bl
  415b39:	dec    DWORD PTR [ecx-0x404e873a]
  415b3f:	or     al,0xce
  415b41:	add    al,0x8a
  415b43:	in     al,dx
  415b44:	adc    eax,0x533b0cf5
  415b49:	dec    eax
  415b4a:	push   cs
  415b4b:	xchg   esi,edi
  415b4d:	aaa    
  415b4e:	add    DWORD PTR [eax],eax
  415b50:	cmp    eax,0x72778a06
  415b55:	cmp    dh,BYTE PTR [eax+0xc]
  415b58:	lea    eax,[edx+0x25825d34]
  415b5e:	and    DWORD PTR [ebx+0x4877043],ecx
  415b64:	aaa    
  415b65:	mov    ss,WORD PTR [eax-0x77]
  415b68:	jo     0x415b1f
  415b6a:	mov    ds:0xf8ba60f2,eax
  415b6f:	mov    ch,0xf0
  415b71:	sbb    eax,DWORD PTR [esi]
  415b73:	inc    ebx
  415b74:	aas    
  415b75:	pop    edx
  415b76:	jb     0x415bbd
  415b78:	pop    es
  415b79:	pop    esi
  415b7a:	enter  0xe239,0x70
  415b7e:	ss loopne 0x415b2d
  415b81:	call   0x5d7e:0x718a8908
  415b88:	jbe    0x415be8
  415b8a:	inc    ecx
  415b8b:	or     al,0x34
  415b8d:	push   ebx
  415b8e:	jl     0x415b5e
  415b90:	mov    bh,0xf5
  415b92:	add    eax,0xb6662773
  415b97:	jno    0x415bdc
  415b99:	xlat   BYTE PTR ds:[ebx]
  415b9a:	or     eax,0x1f000088
  415b9f:	popf   
  415ba0:	inc    ebp
  415ba1:	cmp    ebp,ebp
  415ba3:	into   
  415ba4:	mov    dl,0xe9
  415ba6:	pop    ds
  415ba7:	(bad)  [ebx-0x14929dfe]
  415bad:	icebp  
  415bae:	fs pop edx
  415bb0:	jle    0x415bc9
  415bb2:	scas   eax,DWORD PTR es:[edi]
  415bb3:	push   esp
  415bb4:	inc    eax
  415bb5:	aas    
  415bb6:	or     al,0x17
  415bb8:	xor    esi,esi
  415bba:	fmul   QWORD PTR [ebp+0x103bf980]
  415bc0:	idiv   DWORD PTR [eax]
  415bc2:	lds    ecx,FWORD PTR ds:0xd54e89fb
  415bc8:	pop    es
  415bc9:	inc    eax
  415bca:	test   BYTE PTR [ebp-0x45],0x72
  415bce:	test   eax,0x340c40e5
  415bd3:	sbb    bh,cl
  415bd5:	xchg   dl,bh
  415bd7:	pop    eax
  415bd8:	jmp    0x415c1c
  415bda:	daa    
  415bdb:	xchg   edx,eax
  415bdc:	xor    BYTE PTR [eax+eax*4+0x33],0xa3
  415be1:	stos   BYTE PTR es:[edi],al
  415be2:	(bad)  [esi]
  415be4:	dec    ecx
  415be5:	and    edi,DWORD PTR [esi-0xa]
  415be8:	jmp    0xea84d135
  415bed:	push   eax
  415bee:	scas   al,BYTE PTR es:[edi]
  415bef:	pop    edi
  415bf0:	outs   dx,DWORD PTR ds:[esi]
  415bf1:	cmp    BYTE PTR [ebx],ch
  415bf3:	inc    ebx
  415bf4:	xor    edx,DWORD PTR [esp+esi*1-0x49]
  415bf8:	xchg   BYTE PTR [edi],bh
  415bfa:	out    0x9,al
  415bfc:	mov    bh,0xce
  415bfe:	jmp    0xfe00:0x2162be
  415c05:	xchg   bl,ch
  415c07:	jg     0x415c62
  415c09:	xor    eax,0xa93a03ea
  415c0e:	fld    DWORD PTR [edx]
  415c10:	cdq    
  415c11:	sub    eax,0x4bb4fa37
  415c16:	out    0x3,eax
  415c18:	aaa    
  415c19:	inc    ecx
  415c1a:	jnp    0x415c60
  415c1c:	or     BYTE PTR [edi],dh
  415c1e:	sbb    bh,dl
  415c20:	retf   
  415c21:	xchg   BYTE PTR [ecx+0x50],dh
  415c24:	out    dx,eax
  415c25:	fisubr DWORD PTR [esi+0x54]
  415c28:	ss (bad) 
  415c2b:	sar    DWORD PTR [edx],1
  415c2d:	test   eax,0x78847c38
  415c32:	jno    0x415c7c
  415c34:	sti    
  415c35:	mov    ebx,0xfb8979d
  415c3a:	es jle 0x415c24
  415c3d:	mov    ebp,0x760ebba5
  415c42:	repz jo 0x415c3c
  415c45:	fimul  WORD PTR [ecx+0x4a]
  415c48:	mov    eax,0x6e22ca07
  415c4d:	fs push edi
  415c4f:	(bad)  
  415c50:	mov    ecx,0x319db9e7
  415c55:	inc    ecx
  415c56:	jae    0x415c1c
  415c58:	mov    eax,0x55b900f7
  415c5d:	sub    edx,DWORD PTR [esi-0x5f]
  415c60:	jle    0x415c16
  415c62:	jl     0x415c4f
  415c64:	xor    al,0x34
  415c66:	arpl   WORD PTR [edx+0x0],bp
  415c69:	add    BYTE PTR [eax],bl
  415c6b:	fs add esi,esp
  415c6e:	call   0x352a5b5a
  415c73:	aas    
  415c74:	mov    ah,0x1c
  415c76:	mov    ds:0x4b26b33f,eax
  415c7b:	inc    eax
  415c7c:	lods   al,BYTE PTR ds:[esi]
  415c7d:	stos   DWORD PTR es:[edi],eax
  415c7e:	int3   
  415c7f:	hlt    
  415c80:	call   0x722463
  415c85:	jo     0x415c6f
  415c87:	xchg   DWORD PTR [edx+0x46bad0a4],ecx
  415c8d:	sub    eax,0x2e4e5aa
  415c92:	cmc    
  415c93:	ds mov ah,0x29
  415c96:	cmp    esp,edx
  415c98:	push   esi
  415c99:	(bad)  
  415c9a:	and    eax,DWORD PTR [ecx+0x58dec70]
  415ca0:	cmc    
  415ca1:	inc    edx
  415ca2:	xor    eax,0x7c29b43f
  415ca7:	cmc    
  415ca8:	hlt    
  415ca9:	xchg   ebx,esp
  415cab:	in     eax,0xc4
  415cad:	out    0xb3,al
  415caf:	sbb    bh,bh
  415cb1:	call   0x84c136ea
  415cb6:	mov    BYTE PTR [ebx],dh
  415cb8:	or     al,0x65
  415cba:	cmp    eax,0xcfe90136
  415cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cc0:	push   esi
  415cc1:	cmc    
  415cc2:	mov    edi,0xbff144a7
  415cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cc8:	retf   
  415cc9:	out    dx,al
  415cca:	daa    
  415ccb:	in     eax,0xe0
  415ccd:	add    BYTE PTR fs:[eax],al
  415cd0:	lock inc eax
  415cd2:	cld    
  415cd3:	fdivp  st(7),st
  415cd5:	mov    ecx,DWORD PTR [eax+eax*1]
  415cd8:	shl    DWORD PTR [ebp-0x7c],0x75
  415cdc:	jbe    0x415d49
  415cde:	mov    dh,0x77
  415ce0:	mov    ?,WORD PTR [edi]
  415ce2:	inc    eax
  415ce3:	clc    
  415ce4:	(bad)  
  415ce5:	stc    
  415ce6:	clc    
  415ce7:	psraw  mm6,QWORD PTR [edx-0x7c]
  415ceb:	dec    ebp
  415cec:	scas   al,BYTE PTR es:[edi]
  415ced:	imul   ebp,DWORD PTR [ebp+0xd29d5de],0xffffff80
  415cf4:	xchg   DWORD PTR [esp+eax*4],esi
  415cf7:	push   ebp
  415cf8:	xchg   esi,eax
  415cf9:	in     eax,dx
  415cfa:	aas    
  415cfb:	mov    esp,0xcff061
  415d00:	pop    esi
  415d01:	xor    al,0x87
  415d03:	dec    edi
  415d04:	jle    0x415cba
  415d06:	hlt    
  415d07:	add    DWORD PTR [ebx+0x5b],ebx
  415d0a:	mov    eax,esi
  415d0c:	push   ebp
  415d0d:	jns    0x415d1d
  415d0f:	xchg   esp,eax
  415d11:	xor    al,BYTE PTR [ecx]
  415d13:	add    BYTE PTR [ebp-0x1c74e70c],dl
  415d19:	retf   
  415d1a:	add    al,dh
  415d1c:	sbb    eax,0x5e4d84ac
  415d21:	pusha  
  415d22:	mov    ebx,0x4df0e673
  415d27:	adc    al,0xe5
  415d29:	stos   DWORD PTR es:[edi],eax
  415d2a:	add    cl,dh
  415d2c:	fs aas 
  415d2e:	cld    
  415d2f:	cmp    esi,ebp
  415d31:	ins    BYTE PTR es:[edi],dx
  415d32:	jg     0x415cd4
  415d34:	add    BYTE PTR [eax],al
  415d36:	into   
  415d37:	xor    eax,DWORD PTR [ecx]
  415d39:	inc    eax
  415d3a:	cmc    
  415d3b:	shl    DWORD PTR cs:[edx+0x41],0x38
  415d40:	jbe    0x415d4e
  415d42:	test   DWORD PTR [eax-0x11c82f8d],ebp
  415d48:	sti    
  415d49:	dec    esi
  415d4b:	mov    bl,0xf4
  415d4d:	add    cl,BYTE PTR [ebx]
  415d4f:	stc    
  415d50:	mov    eax,ecx
  415d52:	aaa    
  415d53:	inc    edx
  415d54:	ror    BYTE PTR ds:0x607b8,0x37
  415d5b:	loop   0x415d98
  415d5d:	sbb    BYTE PTR [eax+ecx*2+0x5a76019d],bh
  415d64:	sar    BYTE PTR [ecx],1
  415d66:	jne    0x415d92
  415d68:	or     cl,BYTE PTR [ecx-0x10288f00]
  415d6e:	xor    al,0xcc
  415d70:	jle    0x415de5
  415d72:	ja     0x415d46
  415d74:	xor    eax,eax
  415d76:	(bad)  
  415d78:	lock add eax,0x72f071d1
  415d7e:	in     al,dx
  415d7f:	fld    st(4)
  415d81:	add    cl,BYTE PTR [ebx+ebx*4]
  415d84:	das    
  415d85:	jmp    0x415dbb
  415d87:	dec    esi
  415d88:	stc    
  415d89:	cmp    BYTE PTR [edi+ecx*4-0x4a],ch
  415d8d:	out    0x70,eax
  415d8f:	pop    esp
  415d90:	add    BYTE PTR [eax],al
  415d92:	mov    bh,0x3
  415d94:	add    DWORD PTR ds:0x646ba,ecx
  415d9a:	add    BYTE PTR [eax],al
  415d9c:	aaa    
  415d9d:	loop   0x415d5b
  415d9f:	cmp    esp,esi
  415da1:	pop    ebp
  415da2:	jnp    0x415dd0
  415da4:	ss pop ebp
  415da6:	add    BYTE PTR [ecx+0x53778578],cl
  415dac:	cvtps2pd xmm0,xmm5
  415daf:	add    DWORD PTR [edi],eax
  415db1:	push   edx
  415db2:	ret    0x4c71
  415db5:	shr    BYTE PTR [ebx],cl
  415db7:	adc    al,0xc
  415db9:	dec    ebp
  415dba:	add    bh,ch
  415dbc:	scas   al,BYTE PTR es:[edi]
  415dbd:	out    dx,eax
  415dbe:	mov    edi,0x781d4a89
  415dc3:	xor    al,0x31
  415dc5:	mov    ds:0xda2472f0,al
  415dca:	les    eax,FWORD PTR [esp+edi*8]
  415dcd:	xor    ebp,DWORD PTR [eax+0x2b32a231]
  415dd3:	clc    
  415dd4:	outs   dx,DWORD PTR ds:[esi]
  415dd5:	jnp    0x415e33
  415dd7:	aam    0x98
  415dd9:	jmp    0x7c3f:0x3703
  415ddf:	ds push eax
  415de1:	(bad)  [ecx-0x15cbacfd]
  415de7:	add    BYTE PTR [edx],0x0
  415dea:	in     eax,0x2f
  415dec:	sub    eax,0x96a82d35
  415df1:	shr    DWORD PTR [esi-0x1fa4c8be],cl
  415df7:	jp     0x415de5
  415df9:	outs   dx,DWORD PTR ds:[esi]
  415dfa:	pop    ebp
  415dfb:	aas    
  415dfc:	pop    eax
  415dfd:	and    esi,DWORD PTR [ecx+0x40]
  415e00:	add    BYTE PTR [eax],al
  415e02:	push   ebx
  415e03:	mov    edx,0xbe9825
  415e08:	jbe    0x415e82
  415e0a:	repz xor al,0xde
  415e0d:	js     0x415dd3
  415e0f:	(bad)  
  415e10:	push   edx
  415e11:	inc    eax
  415e12:	in     eax,dx
  415e13:	ins    DWORD PTR es:[edi],dx
  415e14:	pop    ebx
  415e15:	jg     0x415e0e
  415e17:	cmp    eax,0x34376c6e
  415e1c:	jmp    0xf340:0xe760747a
  415e23:	(bad)  
  415e24:	outs   dx,BYTE PTR ds:[esi]
  415e25:	push   eax
  415e26:	pop    ss
  415e27:	xlat   BYTE PTR ds:[ebx]
  415e28:	sub    cl,al
  415e2a:	das    
  415e2b:	(bad)  
  415e2c:	pusha  
  415e2d:	adc    edx,DWORD PTR [ecx+0x599fbdb9]
  415e33:	jae    0x415e5d
  415e35:	sti    
  415e36:	push   edx
  415e37:	mov    ebx,0xb95901ba
  415e3c:	mov    ch,0xb3
  415e3e:	push   ecx
  415e3f:	jae    0x415e69
  415e41:	sti    
  415e42:	pop    edx
  415e43:	mov    ebx,0xb952ff9a
  415e48:	add    DWORD PTR [eax+edx*4-0x43d43e2a],ebx
  415e4f:	xlat   BYTE PTR ds:[ebx]
  415e50:	mov    DWORD PTR [ecx],edi
  415e52:	mov    cl,0xbc
  415e54:	push   esp
  415e55:	cmp    DWORD PTR [esp+eax*1],ebp
  415e58:	or     DWORD PTR [edx+0x5a],ebp
  415e5b:	add    BYTE PTR [esi],al
  415e5d:	pop    esp
  415e5e:	pop    ebx
  415e5f:	inc    eax
  415e60:	jne    0x415e58
  415e62:	fndisi(8087 only) 
  415e64:	call   0xd2415e83
  415e69:	loope  0x415e27
  415e6b:	sbb    BYTE PTR [ebx-0x2d5102a9],ah
  415e71:	pop    ebx
  415e72:	dec    edi
  415e73:	mul    dl
  415e75:	test   BYTE PTR [ecx+0x31],0x27
  415e79:	sub    al,0x49
  415e7b:	sbb    eax,0x1548f55b
  415e80:	pop    ecx
  415e81:	mov    ah,0x66
  415e83:	test   DWORD PTR [ebx],edi
  415e85:	pop    ebx
  415e86:	dec    edi
  415e87:	jle    0x415ea1
  415e89:	mov    WORD PTR [eax+0x766f671c],cs
  415e8f:	jno    0x415e4f
  415e91:	lock sar BYTE PTR [esi+0x77e985af],1
  415e98:	(bad)  [esi-0x4]
  415e9b:	inc    edx
  415e9c:	add    esi,DWORD PTR [eax+0x76]
  415e9f:	xor    DWORD PTR [esi+0x6046d501],ebx
  415ea5:	ins    BYTE PTR es:[edi],dx
  415ea6:	mov    BYTE PTR [esp+eiz*8+0x514153fc],ah
  415ead:	data16 cld 
  415eaf:	cs sahf 
  415eb1:	inc    edx
  415eb2:	cld    
  415eb3:	pushf  
  415eb4:	cld    
  415eb5:	mov    edx,0xe0923556
  415eba:	clc    
  415ebb:	bound  esp,QWORD PTR [eax]
  415ebd:	test   BYTE PTR [edx-0x4a],dl
  415ec0:	mov    esp,0x3900efb5
  415ec5:	xchg   edi,eax
  415ec6:	test   BYTE PTR [ebp-0x36],al
  415ec9:	in     eax,dx
  415eca:	shl    BYTE PTR [eax+eax*1+0x0],0xdb
  415ecf:	jmp    0x415f18
  415ed1:	in     al,dx
  415ed2:	leave  
  415ed3:	sub    eax,0x31628dcd
  415ed8:	or     eax,0x8acc5389
  415edd:	inc    ebp
  415ede:	xor    BYTE PTR [ecx],0x40
  415ee1:	in     al,0x15
  415ee3:	es or  eax,0xe4ac5b8b
  415ee9:	scas   eax,DWORD PTR es:[edi]
  415eea:	retf   
  415eeb:	xchg   edi,eax
  415eec:	dec    BYTE PTR [ebx+0x55029823]
  415ef2:	mov    esi,0x99fd54c9
  415ef7:	xchg   edi,eax
  415ef8:	sbb    bl,0x43
  415efb:	ins    DWORD PTR es:[edi],dx
  415efc:	push   0x2
  415efe:	sub    bl,cl
  415f00:	xor    al,0x33
  415f02:	mov    cs,WORD PTR [esi-0x7c]
  415f05:	inc    ebp
  415f06:	dec    edx
  415f07:	dec    edx
  415f08:	add    eax,0x4c6c138d
  415f0d:	inc    DWORD PTR [ebx+0x68]
  415f10:	ror    WORD PTR [ebp-0x4769998],0x61
  415f18:	in     al,0xde
  415f1a:	dec    ebp
  415f1b:	xor    BYTE PTR [ecx],al
  415f1d:	test   BYTE PTR [esi+0x1b],cl
  415f20:	push   ss
  415f21:	inc    DWORD PTR [ebx]
  415f23:	(bad)  
  415f24:	(bad)  
  415f25:	jne    0x415f81
  415f27:	nop
  415f28:	jo     0x415f32
  415f2a:	mov    ds:0xec0e0032,ax
  415f30:	shl    BYTE PTR [eax+eax*1+0x0],0x13
  415f35:	test   BYTE PTR gs:[esi+0x45],0x35
  415f3a:	xor    dh,dh
  415f3c:	dec    ecx
  415f3d:	sbb    bl,ch
  415f3f:	call   0xfda89c7b
  415f44:	fcom   st(6)
  415f46:	mov    ebp,0xc0ae35e9
  415f4b:	pop    ebp
  415f4c:	imul   edx,DWORD PTR [esi+0x5d2fc2b7],0x51ccc6f2
  415f56:	iret   
  415f57:	call   0xffaefc0d
  415f5c:	and    al,0x55
  415f5e:	mov    WORD PTR [ebx+ebx*2+0x59],ss
  415f62:	sub    al,BYTE PTR [edi+0x2448d635]
  415f68:	aas    
  415f69:	in     eax,0xc
  415f6b:	ret    0x5d3f
  415f6e:	cmp    DWORD PTR [ecx+0xcb0de93],ecx
  415f74:	in     al,0x42
  415f76:	cmp    BYTE PTR [edx+0xf],ch
  415f79:	inc    edi
  415f7a:	or     eax,0xc70922fd
  415f7f:	inc    ecx
  415f80:	aaa    
  415f81:	(bad)  
  415f82:	pushf  
  415f83:	mov    DWORD PTR [esi-0x46],edi
  415f86:	cli    
  415f87:	ja     0x415fae
  415f89:	sbb    eax,0xd0478905
  415f8e:	xchg   esi,eax
  415f8f:	or     eax,0x631bb
  415f94:	aaa    
  415f95:	fisub  WORD PTR [ecx]
  415f97:	or     BYTE PTR [eax],al
  415f99:	add    BYTE PTR [edi],dh
  415f9b:	in     al,0xfe
  415f9d:	gs mov esp,0x79872a51
  415fa3:	push   ebp
  415fa4:	lgs    esi,FWORD PTR [eax+0x51]
  415fa8:	retf   0x1043
  415fab:	pop    ebp
  415fac:	sub    al,BYTE PTR [edi-0x7bf0988f]
  415fb2:	je     0x416010
  415fb4:	add    BYTE PTR [eax],al
  415fb6:	sub    dl,ah
  415fb8:	dec    esi
  415fb9:	or     BYTE PTR [edi-0x15c946cc],al
  415fbf:	inc    eax
  415fc0:	adc    dh,ah
  415fc2:	and    BYTE PTR [ebp*2-0x45b29c3c],dh
  415fc9:	sub    ebx,DWORD PTR [edi]
  415fcb:	xor    eax,0xe0ca03ea
  415fd0:	icebp  
  415fd1:	nop
  415fd2:	jns    0x416014
  415fd4:	call   0x9f36:0x9a3c7490
  415fdb:	dec    edi
  415fdc:	test   al,0xa2
  415fde:	stos   BYTE PTR es:[edi],al
  415fdf:	pop    esi
  415fe0:	call   0x2cfe40bb
  415fe5:	hlt    
  415fe6:	mov    ch,0x73
  415fe8:	fild   DWORD PTR [edi+0x3ea3543]
  415fee:	mov    esi,0xae29f1e8
  415ff3:	repnz jecxz 0x416008
  415ff6:	ret    0xe1f9
  415ff9:	sub    DWORD PTR [eax+0x8be75b],esi
  415fff:	add    cl,dh
  416001:	and    ebp,ebx
  416003:	pop    ecx
  416004:	ja     0x416040
  416006:	inc    ebx
  416007:	les    esi,FWORD PTR [eax+0x366bddf1]
  41600d:	loopne 0x415ffa
  41600f:	xchg   BYTE PTR [edi+0x67],dl
  416012:	addr16 ret 
  416014:	cmp    edi,DWORD PTR [ebp-0xd52efd4]
  41601a:	fist   DWORD PTR [eax+0x6721491]
  416020:	mov    ebp,0x798bebf1
  416025:	adc    ebp,DWORD PTR [ecx+ecx*2]
  416028:	push   ebp
  416029:	xor    al,0xc4
  41602b:	xchg   BYTE PTR [edx-0x5bed0dc6],dl
  416031:	je     0x4160a5
  416033:	dec    ecx
  416034:	push   esi
  416035:	sub    BYTE PTR [ecx],al
  416037:	call   0x764d3e5b
  41603c:	jge    0x416078
  41603e:	and    BYTE PTR [ecx],0xe4
  416041:	out    0x13,al
  416043:	outs   dx,DWORD PTR es:[esi]
  416045:	cmp    al,0x1
  416047:	xchg   ebp,eax
  416048:	xor    al,0x34
  41604a:	les    esp,FWORD PTR [esp+ebp*4+0x34e90054]
  416051:	outs   dx,DWORD PTR ds:[esi]
  416052:	inc    esi
  416053:	cmc    
  416054:	ss xor al,0x1
  416057:	jmp    0xf1c1aee5
  41605c:	xchg   ebp,eax
  41605d:	out    0x15,al
  41605f:	scas   al,BYTE PTR es:[edi]
  416060:	lock cmp eax,DWORD PTR [ecx]
  416063:	jmp    0x35186068
  416068:	les    ebp,FWORD PTR [ebx+edi*4]
  41606b:	xor    al,0xfc
  41606d:	jmp    0xbd87cfa6
  416072:	(bad)  
  416073:	xor    al,0x1
  416075:	jmp    0x1968532b
  41607a:	test   al,0xf2
  41607c:	and    al,0x19
  41607e:	ret    0x8f5
  416081:	xchg   ecx,eax
  416082:	scas   eax,DWORD PTR es:[edi]
  416083:	push   0xfffffffc
  416085:	sahf   
  416086:	mov    al,0xf2
  416088:	daa    
  416089:	cmp    DWORD PTR [eax-0x3dc6dd0e],ebp
  41608f:	cmc    
  416090:	clc    
  416091:	xchg   ecx,eax
  416092:	jg     0x4160fe
  416094:	cld    
  416095:	jle    0x416047
  416097:	repnz sub al,0x19
  41609a:	test   al,0xf2
  41609c:	sub    BYTE PTR [ecx],bl
  41609e:	ret    0xf4f4
  4160a1:	push   ecx
  4160a2:	(bad)  
  4160a6:	push   ecx
  4160a7:	inc    esp
  4160a8:	push   eax
  4160a9:	fs ins DWORD PTR es:[edi],dx
  4160ab:	sbb    DWORD PTR [ecx+0x41],edx
  4160ae:	outs   dx,BYTE PTR ds:[esi]
  4160af:	lods   al,BYTE PTR ds:[esi]
  4160b0:	cld    
  4160b1:	add    BYTE PTR [ecx-0x46],dh
  4160b4:	inc    ebx
  4160b5:	xor    BYTE PTR [esi+0x790f3bfe],al
  4160bb:	inc    BYTE PTR [esi]
  4160bd:	(bad)  
  4160bf:	dec    BYTE PTR [esi+eax*8]
  4160c2:	cwde   
  4160c3:	cmp    bl,0x84
  4160c6:	push   cs
  4160c7:	dec    esp
  4160c8:	add    al,ch
  4160ca:	add    BYTE PTR [eax],al
  4160cc:	repz or al,0xfe
  4160cf:	call   DWORD PTR [edi-0x2]
  4160d2:	sbb    BYTE PTR [ebp-0xecb3e2],al
  4160d8:	dec    eax
  4160d9:	gs std 
  4160db:	shl    DWORD PTR ss:[ecx-0x24],0x10
  4160e0:	fidiv  WORD PTR [esp+eax*4]
  4160e3:	inc    esi
  4160e4:	call   0x407a:0x9a74c1b1
  4160eb:	dec    DWORD PTR [edi-0x59c216d5]
  4160f1:	xchg   ebx,eax
  4160f2:	inc    BYTE PTR [eax+0x750192f3]
  4160f8:	pop    edi
  4160f9:	xchg   ebx,eax
  4160fa:	jae    0x41610c
  4160fc:	shl    DWORD PTR [ecx-0x40],0x10
  416100:	push   ds
  416101:	xor    BYTE PTR [ebx-0x18],dl
  416104:	xchg   BYTE PTR [esi+edi*8],cl
  416107:	(bad)  
  416108:	jge    0x4160d4
  41610a:	mov    al,dh
  41610c:	and    esi,esi
  41610e:	pop    ecx
  41610f:	leave  
  416110:	pushf  
  416111:	xor    BYTE PTR [ecx],al
  416113:	dec    DWORD PTR [eax+0x30]
  416116:	(bad)  
  416117:	shl    DWORD PTR ss:[ecx-0x24],0x10
  41611c:	push   cs
  41611d:	xor    dh,bh
  41611f:	jbe    0x41612f
  416121:	xchg   ebp,eax
  416122:	adc    ah,al
  416124:	cs hlt 
  416126:	add    bh,bh
  416128:	or     BYTE PTR [eax-0x1c],ch
  41612b:	add    DWORD PTR [edi],esi
  41612d:	lds    esp,FWORD PTR [ecx+0x100000fd]
  416133:	cmp    al,0xe7
  416136:	push   cs
  416137:	out    0xa0,eax
  416139:	std    
  41613a:	add    BYTE PTR [eax-0x18f917bc],ah
  416140:	mov    al,ds:0xacf589fd
  416145:	mov    ch,0xe8
  416147:	push   cs
  416148:	lds    edx,FWORD PTR [ebx-0x54]
  41614b:	cmp    DWORD PTR [edi],ebp
  41614d:	push   esi
  41614e:	fmul   st,st(0)
  416150:	or     al,0xfd
  416152:	sub    dl,BYTE PTR [ecx]
  416154:	idiv   BYTE PTR [edi]
  416156:	aaa    
  416157:	loop   0x4160e8
  416159:	and    esi,DWORD PTR [edi]
  41615b:	pop    ebp
  41615c:	mov    eax,ds:0xbf0fac00
  416161:	out    0x47,eax
  416163:	push   edx
  416164:	mov    edi,0xa5dc7989
  416169:	add    BYTE PTR [eax-0x7e76ffa3],ah
  41616f:	pushf  
  416170:	lahf   
  416171:	adc    BYTE PTR [ebx+edx*4],bh
  416174:	(bad)  
  416175:	call   0x8e7fdb9
  41617a:	sub    al,0x9c
  41617c:	mov    es,WORD PTR [ebx+0x7b]
  41617f:	repz or BYTE PTR [ebx-0x2ca6706],cl
  416186:	loop   0x4161ec
  416188:	test   al,0x7d
  41618a:	es pop ebp
  41618c:	add    BYTE PTR [edi+esi*2+0x4982fd49],al
  416193:	inc    ecx
  416194:	cmc    
  416195:	push   ebp
  416196:	add    BYTE PTR [eax],al
  416198:	dec    eax
  416199:	push   0x64cafd0c
  41619e:	test   al,0x69
  4161a0:	push   es
  4161a1:	pop    ebp
  4161a2:	add    BYTE PTR [edi+esi*8+0x36b00460],al
  4161a9:	xor    al,0x4f
  4161ab:	add    ah,BYTE PTR [ebp+0x74]
  4161ae:	mov    esp,0xea3bf5cc
  4161b3:	cmp    BYTE PTR [esi-0x744f96a9],bh
  4161b9:	xor    ch,dl
  4161bb:	add    esp,DWORD PTR [esi-0x45]
  4161be:	popf   
  4161bf:	punpcklwd mm7,mm7
  4161c2:	pop    esi
  4161c3:	and    DWORD PTR [edi],edi
  4161c5:	fcmovu st,st(5)
  4161c7:	sub    ecx,DWORD PTR [edi-0x75fc5622]
  4161cd:	pop    esp
  4161ce:	fst    st(4)
  4161d0:	fsub   DWORD PTR [esi+0x6e]
  4161d3:	les    eax,FWORD PTR [edx-0x50]
  4161d6:	or     eax,DWORD PTR [edi]
  4161d8:	aaa    
  4161d9:	xor    al,0x92
  4161db:	inc    ebx
  4161dc:	dec    edx
  4161dd:	dec    ebx
  4161de:	jmp    0x7cb:0xadb92b29
  4161e5:	pop    esp
  4161e6:	adc    ebx,0xffffffa8
  4161e9:	data16 outs dx,BYTE PTR ds:[esi]
  4161eb:	ret    
  4161ec:	xor    dh,BYTE PTR [eax+0x343706c3]
  4161f2:	inc    eax
  4161f3:	or     bh,ch
  4161f5:	add    ebx,DWORD PTR [ebp+0x50]
  4161f8:	jg     0x4161fe
  4161fa:	sub    DWORD PTR [ebx],0xf4090000
  416200:	jmp    0xb3d590b0
  416205:	sahf   
  416206:	mov    ah,0x73
  416208:	fisttp DWORD PTR [eax+0x3ea2e7c]
  41620e:	scas   eax,DWORD PTR es:[edi]
  41620f:	lock stos BYTE PTR es:[edi],al
  416211:	mov    esi,esp
  416213:	and    BYTE PTR [ebp+0x20],0x52
  416217:	mov    eax,0x725fd025
  41621c:	jmp    0x416221
  41621e:	aaa    
  41621f:	mov    ecx,0xf0aca8fd
  416224:	add    BYTE PTR [ecx-0x16fb5324],bl
  41622a:	xor    al,0x37
  41622c:	mov    bl,0xac
  41622e:	iret   
  41622f:	aaa    
  416230:	mov    bl,0xac
  416232:	mov    ecx,0x3c49c1ce
  416237:	into   
  416238:	pop    es
  416239:	sub    BYTE PTR [ecx],bh
  41623b:	lahf   
  41623c:	shr    esp,0xd7
  41623f:	push   0x345b3efc
  416244:	add    cl,ch
  416246:	xor    al,0xce
  416248:	aaa    
  416249:	sub    BYTE PTR [ecx],bh
  41624b:	scas   eax,DWORD PTR es:[edi]
  41624c:	(bad)  
  41624d:	out    dx,al
  41624e:	xor    al,0x34
  416250:	mov    dl,dh
  416252:	mov    ch,0xd1
  416254:	call   0x8eaa4842
  416259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41625a:	pushf  
  41625b:	out    dx,eax
  41625c:	push   eax
  41625d:	je     0x41625e
  41625f:	push   edi
  416260:	mov    bh,BYTE PTR [eax+eax*1+0x0]
  416264:	mov    BYTE PTR [edi+0x50],ah
  416267:	in     eax,dx
  416268:	mov    ebp,0x7c62ecf1
  41626d:	mov    ebx,0x44cda8d1
  416272:	or     al,0x33
  416275:	xor    al,0xfc
  416277:	jmp    0xb9c9dcbb
  41627c:	jmp    0x352b5eb4
  416281:	adc    edx,ebx
  416283:	test   al,0xd3
  416285:	inc    esp
  416286:	or     BYTE PTR [ecx+0x248e301d],bl
  41628c:	xchg   ebx,eax
  41628d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41628e:	jmp    0xba39:0x95275f1
  416295:	loope  0x41629f
  416297:	loop   0x416317
  416299:	lods   eax,DWORD PTR ds:[esi]
  41629a:	dec    esi
  41629b:	mov    DWORD PTR [ebx+0x4e0030e3],ebx
  4162a1:	xor    DWORD PTR [ebp-0x7dd2bc40],eax
  4162a7:	dec    ebp
  4162a8:	mov    edx,0xaa458ac6
  4162ad:	mov    bl,0xe9
  4162af:	add    BYTE PTR [ecx],ch
  4162b1:	lods   eax,DWORD PTR ds:[esi]
  4162b2:	sbb    eax,DWORD PTR [edi]
  4162b4:	push   cs
  4162b5:	xor    DWORD PTR [ecx+0xf],ecx
  4162b8:	mov    ds:0x1e000552,eax
  4162bd:	sbb    DWORD PTR [ecx+0x77],eax
  4162c0:	adc    eax,0xbb8b5631
  4162c5:	cmp    BYTE PTR [eax+0x29000045],cl
  4162cb:	and    cl,ch
  4162cd:	mov    cl,ch
  4162cf:	xor    BYTE PTR [ecx],al
  4162d1:	test   BYTE PTR [esi],cl
  4162d3:	aaa    
  4162d4:	test   DWORD PTR [eax],ecx
  4162d6:	shl    DWORD PTR [eax],1
  4162d8:	add    DWORD PTR [eax-0x74fe3855],eax
  4162de:	aad    0x37
  4162e0:	nop
  4162e1:	ret    0x2339
  4162e4:	or     DWORD PTR [esi+ecx*1-0x5f0b7ac9],eax
  4162eb:	xor    BYTE PTR [ecx],al
  4162ed:	mov    edx,DWORD PTR [ebp-0x711f9f4d]
  4162f3:	mov    ch,0x40
  4162f5:	mov    BYTE PTR [esi-0x4b],bl
  4162f8:	push   eax
  4162f9:	loopne 0x416364
  4162fb:	and    ecx,DWORD PTR ds:0xc4add68b
  416301:	movlps xmm5,QWORD PTR [ebx-0x3871fffd]
  416308:	jo     0x41631a
  41630a:	fucomi st,st(5)
  41630c:	mov    al,ch
  41630e:	and    edx,DWORD PTR [esi+edi*8-0x7f571a01]
  416315:	fisttp DWORD PTR [ecx-0x54]
  416318:	rol    BYTE PTR [esi],0x37
  41631b:	pop    ebx
  41631c:	add    ch,bh
  41631e:	ret    0x9dba
  416321:	adc    edi,DWORD PTR [ebx-0x78]
  416324:	inc    eax
  416325:	add    BYTE PTR [eax],ch
  416327:	sbb    eax,0xe5bc0749
  41632c:	and    eax,0x74000089
  416331:	push   ebp
  416332:	es mov edi,0x9266617
  416338:	idiv   BYTE PTR [ebx-0x79]
  41633b:	inc    ebx
  41633c:	mov    bl,0x73
  41633e:	mov    DWORD PTR [ecx+0x3d],eax
  416341:	adc    BYTE PTR [esi+0x49],0x2c
  416345:	jae    0x416306
  416347:	loopne 0x416378
  416349:	jnp    0x416354
  41634b:	mov    edi,0x9e42d459
  416350:	mov    esp,0xe0ffe31a
  416355:	sbb    al,BYTE PTR [eax]
  416357:	mov    eax,ebp
  416359:	or     al,0xa7
  41635b:	adc    BYTE PTR [esp+ecx*1],bh
  41635e:	mov    ebp,ecx
  416360:	imul   BYTE PTR [eax+esi*8]
  416363:	mov    al,ch
  416365:	outs   dx,BYTE PTR ds:[esi]
  416366:	mov    dh,0x9
  416368:	in     eax,dx
  416369:	or     al,0xa8
  41636b:	or     BYTE PTR [esi+0x2c],dh
  41636e:	or     BYTE PTR [ecx],cl
  416370:	jbe    0x416346
  416372:	inc    edx
  416373:	mov    al,0xd
  416375:	pop    ebp
  416376:	mov    DWORD PTR [ecx+0x57],eax
  416379:	sbb    eax,0x1dd7438a
  41637e:	lods   eax,DWORD PTR ds:[esi]
  41637f:	cli    
  416380:	ret    0x9872
  416383:	data16 jbe 0x416396
  416386:	popa   
  416387:	or     BYTE PTR [ecx],dl
  416389:	mov    WORD PTR [edx-0x5a],es
  41638c:	aas    
  41638d:	repz lds eax,FWORD PTR [ebx-0x61]
  416391:	push   ebp
  416392:	sbb    BYTE PTR cs:[eax],al
  416395:	add    BYTE PTR [edx+0x7782d34],dh
  41639b:	arpl   WORD PTR ds:0xc2de5f0c,dx
  4163a1:	add    esi,DWORD PTR [edi]
  4163a3:	mov    eax,0xcbb0baa
  4163a8:	in     al,dx
  4163a9:	add    esi,DWORD PTR [edi]
  4163ab:	mov    ecx,0xb4b107b
  4163b0:	jae    0x4163c3
  4163b2:	pop    ss
  4163b3:	arpl   bp,si
  4163b5:	or     ecx,DWORD PTR [edi]
  4163b7:	(bad)  
  4163b8:	adc    al,BYTE PTR [edi+esi*1]
  4163bb:	mov    eax,0x43bb0b2a
  4163c0:	in     al,dx
  4163c1:	add    esi,DWORD PTR [edi]
  4163c3:	scas   eax,DWORD PTR es:[edi]
  4163c4:	or     eax,0xe9f42afc
  4163c9:	pop    ebx
  4163ca:	cli    
  4163cb:	(bad)  
  4163cc:	jmp    0x3703:0xea62b103
  4163d3:	scas   eax,DWORD PTR es:[edi]
  4163d4:	and    dh,BYTE PTR [edx]
  4163d6:	pop    ecx
  4163d7:	lods   eax,DWORD PTR ds:[esi]
  4163d8:	lods   eax,DWORD PTR ds:[esi]
  4163d9:	mov    esi,0x9a72b8ac
  4163de:	shl    BYTE PTR [edx-0x80],cl
  4163e1:	add    esp,DWORD PTR [edi+0x7a]
  4163e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163e5:	mov    ebx,0x4970da37
  4163ea:	loopne 0x41644e
  4163ec:	adc    esi,DWORD PTR [edx]
  4163ee:	pushw  0x65
  4163f1:	cmp    DWORD PTR [edi+0x99aeb60],0xb2e304
  4163fb:	add    BYTE PTR [esi+0x48d0277],dh
  416401:	pop    esp
  416402:	popa   
  416403:	adc    BYTE PTR [ebx+0x379c4db6],bl
  416409:	xor    ebp,DWORD PTR [esp+edi*4+0x37]
  41640d:	xor    al,0xea
  41640f:	sub    eax,0x500cc37
  416414:	xor    dh,BYTE PTR [ecx+eax*1]
  416417:	pop    esp
  416418:	imul   DWORD PTR [ebx]
  41641a:	push   ecx
  41641b:	fidiv  DWORD PTR [ebx+ecx*2+0x28]
  41641f:	fdiv   DWORD PTR [esp+esi*1]
  416422:	adc    BYTE PTR [ecx+0x4f8630ad],0x34
  416429:	xor    al,0x1
  41642b:	xchg   BYTE PTR [edi+0x62],al
  41642e:	push   ss
  41642f:	sub    DWORD PTR [ebx],edi
  416431:	sbb    eax,0x3434ce4d
  416436:	or     al,0x64
  416438:	mov    bl,0x35
  41643a:	add    ecx,ebp
  41643c:	mov    cl,0xdd
  41643e:	adc    al,0xe9
  416440:	inc    eax
  416441:	sub    esp,DWORD PTR [edi+0x56]
  416444:	lods   eax,DWORD PTR ds:[esi]
  416445:	in     eax,0x14
  416447:	dec    esi
  416448:	pop    es
  416449:	dec    esi
  41644a:	pop    gs
  41644c:	xor    al,0xab
  41644e:	inc    esi
  41644f:	in     eax,dx
  416450:	shr    DWORD PTR [esp+edi*8],0x99
  416454:	in     al,0xac
  416456:	jle    0x416489
  416458:	mov    ecx,0xb7e910d5
  41645d:	pop    edi
  41645e:	jne    0x4163f8
  416460:	add    BYTE PTR [eax],al
  416462:	mov    ecx,0x19e9e8d5
  416467:	pop    edi
  416468:	or     ah,BYTE PTR [edx+0x77]
  41646b:	push   eax
  41646c:	mov    BYTE PTR [esp+ecx*4+0x56e835ad],dh
  416473:	mov    bl,0x7b
  416475:	in     al,dx
  416476:	xor    al,0xea
  416478:	inc    edi
  416479:	xchg   DWORD PTR [ecx+0x46e903e2],edi
  41647f:	clc    
  416480:	push   edx
  416481:	fiadd  WORD PTR [eax+0x2c]
  416484:	mov    BYTE PTR [edx-0x310b4025],ch
  41648a:	sahf   
  41648b:	mov    bl,0xf9
  41648d:	add    BYTE PTR [ecx+0x2b],dh
  416490:	test   DWORD PTR [ebx],ebx
  416492:	pop    ebx
  416493:	xor    eax,0x2b9e8501
  416498:	test   DWORD PTR [ebx],edx
  41649a:	pop    ebx
  41649b:	xor    eax,0x35968301
  4164a0:	jo     0x4164c5
  4164a2:	lds    esp,FWORD PTR [eax]
  4164a4:	adc    DWORD PTR [eax+0x65],eax
  4164a7:	and    bh,cl
  4164a9:	jne    0x4164e7
  4164ab:	mov    esp,0x8acdf848
  4164b0:	add    al,0x8b
  4164b2:	loope  0x41646c
  4164b4:	jo     0x4164a2
  4164b6:	mov    dh,0x78
  4164b8:	mov    dl,0xff
  4164ba:	xchg   ecx,eax
  4164bb:	(bad)
  4164bf:	and    ebp,ecx
  4164c1:	jp     0x41646e
  4164c3:	mov    edx,0xfffe
  4164c8:	(bad)  [ecx+ecx*4+0x45]
  4164cc:	(bad)  
  4164cd:	mov    bh,0x40
  4164cf:	call   0xf880e4db
  4164d4:	lods   al,BYTE PTR ds:[esi]
  4164d5:	loop   0x416458
  4164d7:	jge    0x4164e3
  4164d9:	xor    eax,0xbb35840e
  4164de:	(bad)  
  4164df:	call   DWORD PTR [ecx]
  4164e1:	xor    DWORD PTR ds:0x1280cbff,edx
  4164e7:	inc    eax
  4164e8:	fimul  WORD PTR [ebp-0x44ce00e8]
  4164ee:	mov    bh,BYTE PTR [ebp-0x3a]
  4164f1:	or     al,0x41
  4164f3:	ja     0x41648a
  4164f5:	xor    al,0x67
  4164f7:	add    DWORD PTR [ebx],edx
  4164f9:	and    esi,edi
  4164fb:	push   eax
  4164fc:	ss push ss
  4164fe:	sub    BYTE PTR [eax],al
  416500:	mov    fs,eax
  416502:	ror    BYTE PTR [edi],0x1a
  416505:	jbe    0x41650c
  416507:	add    BYTE PTR [edi],dh
  416509:	dec    ebx
  41650a:	or     DWORD PTR [esi-0x177a8e06],esi
  416510:	aaa    
  416511:	push   0x7c
  416513:	sbb    al,0x3b
  416515:	dec    ebx
  416516:	add    BYTE PTR [eax-0x1],cl
  416519:	pop    ecx
  41651a:	jl     0x4164df
  41651c:	xor    eax,0x2848004b
  416521:	iret   
  416522:	loop   0x416525
  416524:	aaa    
  416525:	dec    ebx
  416526:	dec    eax
  416527:	or     eax,0xffff97b3
  41652c:	add    BYTE PTR [eax],al
  41652e:	aaa    
  41652f:	adc    ecx,DWORD PTR [edx]
  416531:	test   BYTE PTR [edx+ecx*2+0x4e7f0000],dl
  416538:	jnp    0x4164ca
  41653a:	xor    ecx,DWORD PTR [ebp+0x0]
  41653d:	push   0xfffd6677
  416542:	mov    cs,WORD PTR [edx-0x7d]
  416545:	inc    ebx
  416546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416547:	popf   
  416548:	test   al,0x1b
  41654a:	pop    edx
  41654b:	dec    ebp
  41654c:	add    BYTE PTR [edi+esi*8+0x33787c7e],al
  416553:	dec    ebp
  416554:	add    BYTE PTR [eax+0x77],ch
  416557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416558:	std    
  416559:	call   FWORD PTR [esi+0x51]
  41655c:	add    DWORD PTR [ebx-0x5],0xffffffbd
  416560:	test   al,0x3
  416562:	or     cl,BYTE PTR [ebp+0x0]
  416565:	test   bh,dh
  416567:	dec    esi
  416568:	jl     0x4165ca
  41656a:	xor    ecx,DWORD PTR [ebp+0x0]
  41656d:	mov    DWORD PTR [edx+0x19],esi
  416570:	lea    edi,[edi-0x2ffb2ee]
  416576:	aaa    
  416577:	loop   0x416527
  416579:	mov    edi,0xc20d7d9d
  41657e:	lods   al,BYTE PTR ds:[esi]
  41657f:	cmp    al,0xbf
  416581:	loop   0x4165ca
  416583:	xor    al,0x69
  416585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416586:	aaa    
  416587:	pop    edi
  416588:	jmp    0x2fac:0xa9853e03
  41658f:	jne    0x416559
  416591:	or     al,0x0
  416593:	add    BYTE PTR [esi],ch
  416595:	jb     0x416608
  416597:	inc    ecx
  416598:	jnp    0x41658e
  41659a:	jmp    0x4f03:0xea38107f
  4165a1:	fidiv  DWORD PTR [esi-0x69]
  4165a4:	pop    edx
  4165a5:	stos   DWORD PTR es:[edi],eax
  4165a6:	call   0x34fa:0x662f4981
  4165ad:	xor    al,0xea
  4165af:	sub    esi,edi
  4165b1:	out    0xee,al
  4165b3:	add    edi,DWORD PTR [edx]
  4165b5:	jmp    0xa4609467
  4165ba:	into   
  4165bb:	add    esi,DWORD PTR [edi]
  4165bd:	mov    eax,0x2abb07aa
  4165c2:	out    0x3,al
  4165c4:	aaa    
  4165c5:	stos   DWORD PTR es:[edi],eax
  4165c6:	lods   eax,DWORD PTR ds:[esi]
  4165c7:	pop    es
  4165c8:	mov    esi,0x3f8b2608
  4165cd:	push   es
  4165ce:	push   ebx
  4165cf:	xor    al,0x23
  4165d1:	push   es
  4165d2:	inc    edx
  4165d3:	sbb    eax,esi
  4165d5:	pop    esi
  4165d6:	inc    ebx
  4165d7:	lods   eax,DWORD PTR ds:[esi]
  4165d8:	and    al,0x5e
  4165da:	cmp    edx,DWORD PTR [edi+0x2be1e0be]
  4165e0:	ja     0x4165c9
  4165e2:	into   
  4165e3:	add    ecx,DWORD PTR [ebp+0x39]
  4165e6:	jne    0x416629
  4165e8:	mov    DWORD PTR [ebx],0x341b1612
  4165ee:	jmp    0x36bd:0x662ef77f
  4165f5:	xor    al,0xea
  4165f7:	sbb    eax,0xf8f00000
  4165fc:	clc    
  4165fd:	or     edx,DWORD PTR [ecx]
  4165ff:	jne    0x416602
  416601:	lods   al,BYTE PTR ds:[esi]
  416602:	lds    ebp,FWORD PTR [ebx]
  416604:	addr16 (bad) 
  416606:	test   DWORD PTR [edi-0x45],ebx
  416609:	jmp    0xde4299c2
  41660e:	xchg   DWORD PTR [edx],ecx
  416610:	push   ss
  416611:	sub    DWORD PTR [ebx],edi
  416613:	mov    bl,0xc1
  416615:	inc    edi
  416616:	lods   al,BYTE PTR ds:[esi]
  416617:	repnz fdecstp 
  41661a:	out    0xf2,eax
  41661c:	cmova  ecx,DWORD PTR [edx+0x2d3cf1f1]
  416623:	(bad)  
  416624:	xchg   DWORD PTR [esp+ebx*4],esp
  416627:	aad    0x39
  416629:	sub    al,0xa4
  41662b:	out    0x5,eax
  41662d:	pop    edi
  41662e:	xor    esi,DWORD PTR [ecx+eax*1-0x270d5117]
  416635:	arpl   di,bp
  416637:	arpl   WORD PTR [edi+0x27db499],ax
  41663d:	imul   edx,esi,0x30a33a5d
  416643:	push   ss
  416644:	test   DWORD PTR [eax+0x30302d28],esp
  41664a:	in     al,dx
  41664b:	jmp    0x6a4a:0x9d98ee0f
  416652:	(bad)  [esi]
  416654:	sub    BYTE PTR [eax],0x36
  416657:	dec    ebx
  416658:	or     al,0xfa
  41665a:	add    ebx,DWORD PTR ds:0xda4e
  416660:	xor    eax,ecx
  416662:	ret    0xb5a0
  416665:	jge    0x416674
  416667:	push   0xfffffff3
  416669:	cmp    BYTE PTR [eax],cl
  41666b:	sbb    BYTE PTR [esi-0x7b8c0f17],bh
  416671:	mov    ah,0xe2
  416673:	in     eax,dx
  416674:	mov    ah,0x52
  416676:	add    eax,0x22e8eed3
  41667b:	add    BYTE PTR [edx],ah
  41667d:	jo     0x4166f4
  41667f:	adc    ebp,ebp
  416681:	jo     0x4166bc
  416683:	dec    ebp
  416684:	jge    0x4166bc
  416686:	xchg   ebp,eax
  416687:	rcl    edi,0xb2
  41668a:	fdiv   st(2),st
  41668c:	sbb    eax,0x99eb0971
  416691:	test   bl,al
  416693:	cmp    BYTE PTR [ebx+0x63],bl
  416696:	or     eax,0x81e9cf94
  41669b:	loope  0x41664f
  41669d:	mov    bl,0xbc
  41669f:	adc    BYTE PTR [ebp-0x3e],ah
  4166a2:	xchg   DWORD PTR [ebp-0x62],ecx
  4166a5:	mov    eax,0x323202dc
  4166aa:	aaa    
  4166ab:	enter  0x6832,0x31
  4166af:	rcl    dl,0x68
  4166b2:	push   cs
  4166b3:	xchg   esp,eax
  4166b4:	mov    ?,eax
  4166b6:	and    eax,0x40c1b3ae
  4166bc:	and    eax,0xae45f3c1
  4166c1:	xor    BYTE PTR [ebp+0x9],dh
  4166c4:	add    BYTE PTR [eax],al
  4166c6:	xor    al,0x40
  4166c8:	jl     0x416698
  4166ca:	push   cs
  4166cb:	sub    DWORD PTR [ecx],eax
  4166cd:	add    cl,bh
  4166cf:	scas   al,BYTE PTR es:[edi]
  4166d0:	inc    eax
  4166d1:	lock push cs
  4166d3:	sub    eax,0xb1966a04
  4166d8:	retf   
  4166d9:	add    BYTE PTR [esi],dl
  4166db:	xor    DWORD PTR [ecx],eax
  4166dd:	pop    edi
  4166de:	add    al,0x5e
  4166e0:	xchg   DWORD PTR [ebp+0x2e],eax
  4166e3:	sub    BYTE PTR [eax-0x16d7b9bb],cl
  4166e9:	test   eax,0xffec75c
  4166ee:	jno    0x41670d
  4166f0:	repnz push edi
  4166f2:	mov    ?,WORD PTR [edi]
  4166f4:	mov    dh,0x45
  4166f6:	aaa    
  4166f7:	cmp    al,0x35
  4166f9:	mov    DWORD PTR [edx+0x7f],esi
  4166fc:	mov    DWORD PTR [eax],ecx
  4166fe:	mov    esp,0x4f50963c
  416703:	inc    esp
  416704:	out    dx,eax
  416705:	cli    
  416706:	mov    al,ds:0x2f7b8965
  41670b:	mov    bl,0x40
  41670d:	jne    0x41673b
  41670f:	dec    ebx
  416710:	sub    al,BYTE PTR ds:0x507117ba
  416716:	(bad)  
  416717:	and    edx,ebp
  416719:	(bad)  
  41671a:	js     0x4166f2
  41671c:	mov    edi,0x1dcbb0d
  416721:	add    BYTE PTR [edi],dh
  416723:	retf   
  416724:	adc    dl,BYTE PTR [edi+esi*1+0xc06b56]
  41672b:	add    BYTE PTR [eax],ch
  41672d:	in     eax,0xbf
  41672f:	push   eax
  416730:	mov    esp,0x67896e0f
  416735:	loope  0x4166fe
  416737:	mov    edi,0xe27f5a4e
  41673c:	aaa    
  41673d:	dec    ebx
  41673e:	xchg   ebp,eax
  41673f:	add    BYTE PTR [esp+edi*4],bh
  416742:	mov    eax,ecx
  416744:	imul   BYTE PTR [eax+esi*8-0x1dc8de]
  41674b:	jmp    FWORD PTR [edx*4+0xc434389]
  416752:	lahf   
  416753:	or     dh,dh
  416755:	pop    es
  416756:	or     BYTE PTR [ecx],cl
  416758:	out    0xd6,al
  41675a:	pop    es
  41675b:	std    
  41675c:	addr16 popa 
  41675e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41675f:	mov    bh,0xf3
  416761:	repnz xchg esp,eax
  416763:	mov    DWORD PTR [edx+0x65],ebp
  416766:	sub    BYTE PTR [eax+0x68],al
  416769:	xchg   BYTE PTR [eax],al
  41676b:	push   0x2e
  41676d:	clc    
  41676e:	cmp    cl,ah
  416770:	addr16 xor al,0x12
  416773:	add    DWORD PTR [esi],ebx
  416775:	xor    al,0xea
  416777:	jg     0x416770
  416779:	sub    ebp,DWORD PTR [esi+0x36]
  41677c:	xor    eax,0xf01dea34
  416781:	icebp  
  416782:	xor    al,0xb
  416784:	adc    DWORD PTR [ebp-0x5b],esi
  416787:	les    ebp,FWORD PTR [edi]
  416789:	shr    BYTE PTR [eax],cl
  41678b:	ds push 0xc2842c
  416791:	add    ah,dh
  416793:	xchg   dl,dh
  416795:	or     DWORD PTR [eax+ebp*2],0xffffffea
  416799:	add    ah,BYTE PTR [esp+esi*2+0x5b46bd17]
  4167a0:	bound  ecx,QWORD PTR [ecx-0x7d]
  4167a3:	sbb    eax,0x3de18c35
  4167a8:	outs   dx,DWORD PTR ds:[esi]
  4167a9:	dec    ecx
  4167aa:	push   ebx
  4167ab:	mov    bh,0xaa
  4167ad:	or     edx,ecx
  4167af:	sbb    al,0x22
  4167b1:	xchg   edx,eax
  4167b2:	les    esi,FWORD PTR [eax]
  4167b4:	or     al,0xcd
  4167b6:	xor    al,ah
  4167b8:	lock dec edx
  4167ba:	mov    dh,0x74
  4167bc:	loope  0x41678c
  4167be:	mov    ebp,0x6ea0185b
  4167c3:	fld    DWORD PTR [ecx+0x255b4019]
  4167c9:	mov    WORD PTR [esi-0xfe08e18],gs
  4167cf:	sub    al,0x5d
  4167d1:	sbb    DWORD PTR [ebx],esp
  4167d3:	dec    esp
  4167d4:	sub    al,0x54
  4167d6:	or     bl,BYTE PTR [ebx+0x66]
  4167d9:	les    esi,FWORD PTR [edx]
  4167db:	mov    al,0x54
  4167dd:	add    eax,0x92bf3437
  4167e2:	cmp    BYTE PTR [edi],dh
  4167e4:	lds    ebx,FWORD PTR [edi+0x496d2d5d]
  4167ea:	repz add eax,DWORD PTR [ecx]
  4167ed:	sahf   
  4167ee:	mov    esp,0xa42eb28d
  4167f3:	push   edx
  4167f4:	sub    DWORD PTR ds:0x58a40000,esp
  4167fa:	imul   ebp,DWORD PTR [ecx-0x7cfec2e3],0xe1765933
  416804:	int3   
  416805:	xor    al,0x28
  416807:	jmp    0xef031840
  41680c:	mov    eax,0x34e90283
  416811:	lods   eax,DWORD PTR ds:[esi]
  416812:	jle    0x4167f5
  416814:	sub    al,0xf4
  416816:	jae    0x41681a
  416818:	xor    ecx,esi
  41681a:	(bad)  
  41681b:	imul   ebp,edi,0x4f
  41681e:	push   ecx
  41681f:	ror    DWORD PTR [edx+0xe],0x1
  416823:	jmp    0x6d4ddbe0
  416828:	cvtdq2ps xmm7,xmm4
  41682b:	jmp    0xcd900965
  416830:	mov    cl,0xd4
  416832:	dec    esp
  416833:	jmp    0xa6680309
  416838:	xor    al,0x34
  41683a:	add    DWORD PTR [eax-0x7f3dd46c],ebp
  416840:	cmp    al,0x2b
  416842:	ret    0xb207
  416845:	repz dec eax
  416847:	movsx  esi,BYTE PTR [esp+ecx*1+0x65]
  41684c:	mov    dh,0x34
  41684e:	add    ecx,ebp
  416850:	xor    eax,0xdda8f99f
  416855:	ss mov ds,edx
  416858:	jo     0x416805
  41685a:	int3   
  41685b:	push   ecx
  41685c:	add    BYTE PTR [eax],al
  41685e:	jnp    0x416804
  416860:	cld    
  416861:	push   esi
  416862:	mov    al,0x74
  416864:	or     al,0x65
  416866:	inc    ebx
  416867:	pop    ecx
  416868:	cld    
  416869:	add    dh,bl
  41686b:	cmp    eax,0x35d57741
  416870:	push   esi
  416871:	(bad)  
  416872:	fcomp  st(2)
  416874:	ja     0x41687e
  416876:	jbe    0x4168a3
  416878:	daa    
  416879:	add    dh,bl
  41687b:	mov    cl,0xc1
  41687d:	cvtps2pd xmm2,QWORD PTR [eax]
  416880:	cld    
  416881:	dec    esi
  416883:	mov    dl,0x60
  416885:	adc    BYTE PTR [esi-0x6145437e],bl
  41688b:	mov    BYTE PTR [ecx],0x0
  41688e:	mov    eax,0x1d48416a
  416893:	pop    ds
  416894:	mov    al,BYTE PTR [esi]
  416896:	jno    0x416896
  416898:	inc    edi
  416899:	adc    bh,bl
  41689b:	xchg   ebp,eax
  41689c:	dec    DWORD PTR [eax-0x37fd47ad]
  4168a2:	adc    eax,0x9ff08a35
  4168a7:	mov    ss,WORD PTR [ecx]
  4168a9:	mov    esi,DWORD PTR [esi+0x4f]
  4168ac:	cli    
  4168ad:	or     ebp,DWORD PTR [ecx+0x4d79b333]
  4168b3:	jbe    0x416898
  4168b5:	or     BYTE PTR [edi-0x56f4f648],bl
  4168bb:	dec    edi
  4168bc:	ret    0x9e0b
  4168bf:	(bad)  [ebx]
  4168c1:	mov    eax,DWORD PTR [eax]
  4168c3:	add    BYTE PTR ds:0xb67589ec,cl
  4168c9:	cmp    DWORD PTR [eax],eax
  4168cb:	pop    ecx
  4168cc:	neg    DWORD PTR [eax+0x6]
  4168cf:	jne    0x4168de
  4168d1:	fimul  WORD PTR [ecx+0x4c]
  4168d4:	mov    eax,ds:0x956610f1
  4168d9:	sbb    DWORD PTR [ecx],edx
  4168db:	push   bp
  4168dd:	pop    ss
  4168de:	dec    ecx
  4168df:	jb     0x41688a
  4168e1:	mov    dh,0x0
  4168e3:	mov    edx,0x914b37
  4168e8:	aaa    
  4168e9:	(bad)  
  4168ea:	inc    ebp
  4168eb:	dec    esp
  4168ec:	mov    esp,0x47dfc022
  4168f1:	out    0x94,al
  4168f3:	and    ebp,esp
  4168f5:	push   ebp
  4168f6:	ret    0xc789
  4168f9:	or     ebx,DWORD PTR [edi+0x23d1408]
  4168ff:	mov    dh,0x64
  416901:	mov    bh,BYTE PTR [edi-0x3da9d021]
  416907:	or     DWORD PTR [ebp-0x2d],edi
  41690a:	cmp    eax,0x432b450
  41690f:	jae    0x416963
  416911:	into   
  416912:	or     eax,0x8352371c
  416917:	or     ecx,DWORD PTR [ecx+ecx*2+0x47336891]
  41691e:	add    BYTE PTR [eax],al
  416920:	or     eax,0xbb339163
  416925:	mov    BYTE PTR [ebp+0x0],al
  416928:	add    BYTE PTR [eax],al
  41692a:	jo     0x41698b
  41692c:	or     BYTE PTR [edx],dl
  41692e:	test   DWORD PTR [edx+0x77],0xbfd04341
  416935:	or     eax,0xfd8e71b2
  41693a:	push   eax
  41693b:	jae    0x416994
  41693d:	add    BYTE PTR [edi],dh
  41693f:	dec    ebx
  416940:	xchg   ecx,eax
  416941:	jno    0x416966
  416943:	ret    
  416944:	in     eax,0xaf
  416946:	cmp    cl,al
  416948:	test   DWORD PTR [ecx+0x53],esp
  41694b:	dec    ebp
  41694c:	xchg   edi,eax
  41694d:	xlat   BYTE PTR ds:[ebx]
  41694e:	sub    eax,0x776891af
  416953:	pop    esi
  416954:	in     eax,dx
  416955:	dec    DWORD PTR [esi+0x3f73914a]
  41695b:	mov    ch,0x54
  41695d:	daa    
  41695e:	aaa    
  41695f:	xor    al,0xea
  416961:	xchg   edi,esi
  416963:	daa    
  416964:	data16 xor BYTE PTR [edi],0x34
  416968:	jmp    0x6243:0xc22c6c7c
  41696f:	cmp    ebp,edx
  416971:	sbb    eax,0x57a5a947
  416976:	xchg   DWORD PTR [edi+ebx*8-0x26],ecx
  41697a:	rcl    BYTE PTR [edi+0x66],1
  41697d:	ret    
  41697e:	inc    ebx
  41697f:	retf   0xe69
  416982:	mov    edx,DWORD PTR [esi+edx*4]
  416985:	(bad)  
  416986:	cmp    cl,bl
  416988:	pop    ebp
  416989:	repz and al,0x2e
  41698c:	push   0xe
  41698e:	add    BYTE PTR [eax],al
  416990:	jecxz  0x4169be
  416992:	jge    0x4169bf
  416994:	mov    bh,0xd9
  416996:	xor    al,BYTE PTR [ebx]
  416998:	and    eax,DWORD PTR [edx]
  41699a:	mov    edx,es
  41699c:	hlt    
  41699d:	fwait
  41699e:	loop   0x4169c9
  4169a0:	enter  0x9ff1,0xfc
  4169a4:	sbb    dh,BYTE PTR [ebp+0x25]
  4169a7:	push   eax
  4169a8:	das    
  4169a9:	mov    ah,0x55
  4169ab:	push   esi
  4169ac:	aaa    
  4169ad:	retf   0xfef9
  4169b0:	lds    esi,FWORD PTR [edx+esi*2+0x49]
  4169b4:	test   eax,0x75825a9
  4169b9:	test   eax,0x6e00d527
  4169be:	and    eax,0x8e4f4857
  4169c3:	pop    edi
  4169c4:	inc    edx
  4169c5:	push   edi
  4169c6:	jo     0x416a11
  4169c8:	xor    DWORD PTR [edx+eax*4+0x3],0xffffffbf
  4169cd:	repnz sub BYTE PTR [ebp-0x707ca580],bl
  4169d4:	mov    dh,0xd8
  4169d6:	aad    0x3
  4169d8:	mov    ds:0x2e760142,eax
  4169dd:	inc    eax
  4169de:	cld    
  4169df:	aam    0x10
  4169e1:	inc    ebp
  4169e2:	inc    ecx
  4169e3:	jmp    0xe9a89a85
  4169e8:	pushf  
  4169e9:	mov    cl,0xac
  4169eb:	push   esi
  4169ec:	shr    BYTE PTR [eax+esi*8-0x39ee6bf],0x46
  4169f4:	add    BYTE PTR [eax],al
  4169f6:	mov    al,0xe2
  4169f8:	in     al,dx
  4169f9:	push   ecx
  4169fa:	inc    esp
  4169fb:	mov    esp,edi
  4169fd:	lods   al,BYTE PTR ss:[esi]
  4169ff:	aas    
  416a00:	mov    BYTE PTR [edx],bh
  416a02:	stos   DWORD PTR es:[edi],eax
  416a03:	jmp    0x1e08:0x4cb026f3
  416a0a:	push   ds
  416a0b:	dec    esp
  416a0c:	cld    
  416a0d:	pushf  
  416a0e:	lods   al,BYTE PTR ds:[esi]
  416a0f:	dec    esi
  416a10:	jo     0x416a28
  416a12:	mov    eax,0x4da75c58
  416a17:	outs   dx,DWORD PTR ds:[esi]
  416a18:	mov    edi,0x87fe34d9
  416a1d:	stc    
  416a1e:	mov    edi,0xe98755d
  416a23:	test   DWORD PTR cs:[ecx-0x44d012d8],ebp
  416a2a:	push   0x4eec7609
  416a2f:	xor    dl,BYTE PTR [edi-0x3e]
  416a32:	xor    BYTE PTR [eax],bl
  416a34:	sub    BYTE PTR [edx+edi*1],bh
  416a37:	out    dx,al
  416a38:	xchg   bh,ch
  416a3a:	xchg   BYTE PTR [esi-0x259b4f7f],dl
  416a40:	adc    ebx,DWORD PTR [edx]
  416a42:	mov    bl,0x5e
  416a44:	cmp    ah,BYTE PTR [esi]
  416a46:	dec    ebx
  416a47:	mov    ds:0x319d9707,eax
  416a4c:	ret    0x4c5
  416a4f:	lock xchg bh,bl
  416a52:	mov    ah,0x5d
  416a54:	xor    DWORD PTR [eax],eax
  416a56:	cmp    edi,DWORD PTR [ecx+0x845a]
  416a5c:	out    0x3d,eax
  416a5e:	add    al,BYTE PTR [ebx-0x49f1cf2c]
  416a64:	fidivr WORD PTR [edi+0x2fe202bf]
  416a6a:	rcr    BYTE PTR fs:[ecx+0x31],0x1
  416a6f:	add    BYTE PTR [esi+0x2e],dl
  416a72:	mov    al,dl
  416a74:	cwde   
  416a75:	jb     0x416ade
  416a77:	or     BYTE PTR [esi-0x47fff991],dl
  416a7d:	jb     0x416a09
  416a7f:	rcl    DWORD PTR [ebp-0x60],0xbc
  416a83:	jmp    0x3119:0xfffc4cee
  416a8a:	or     al,dl
  416a8c:	inc    ebp
  416a8d:	mov    al,ds:0xa69ee27c
  416a92:	add    DWORD PTR [eax],eax
  416a94:	pop    edi
  416a95:	nop
  416a96:	adc    DWORD PTR [ebx],ecx
  416a98:	aas    
  416a99:	jo     0x416a84
  416a9b:	or     BYTE PTR [edi-0x6d],cl
  416a9e:	or     DWORD PTR [ebx],ecx
  416aa0:	pop    esp
  416aa1:	jb     0x416af3
  416aa3:	mov    ecx,DWORD PTR [edx+0x5d88a23]
  416aa9:	pop    ebx
  416aaa:	in     al,0xcf
  416aac:	pop    ecx
  416aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aae:	(bad)  
  416aaf:	cmp    eax,0x50422223
  416ab4:	add    ch,BYTE PTR [edi]
  416ab6:	xor    al,al
  416ab8:	xchg   DWORD PTR [esp+edi*8],ebp
  416abb:	dec    DWORD PTR [esi+0x1f]
  416abe:	push   esi
  416abf:	mov    eax,DWORD PTR [eax]
  416ac1:	add    BYTE PTR [ebx],cl
  416ac3:	pop    eax
  416ac4:	push   0xa
  416ac6:	daa    
  416ac7:	fcomi  st,st(1)
  416ac9:	repz repz fimul DWORD PTR [ecx+0x4]
  416ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416acf:	cmc    
  416ad0:	std    
  416ad1:	push   DWORD PTR [edi]
  416ad3:	mov    esi,0xd43f737a
  416ad8:	inc    edx
  416ad9:	add    al,0xac
  416adb:	and    ebp,edi
  416add:	out    0xb8,eax
  416adf:	aad    0x8d
  416ae1:	std    
  416ae2:	mov    esi,0xc00cfd04
  416ae7:	adc    DWORD PTR [ecx],eax
  416ae9:	mov    esi,esp
  416aeb:	or     edx,DWORD PTR [edi-0x31409f8]
  416af1:	mov    bh,0xf0
  416af3:	dec    edx
  416af4:	add    BYTE PTR [eax],al
  416af6:	adc    al,0x1b
  416af8:	cli    
  416af9:	into   
  416afa:	pop    ecx
  416afb:	in     al,0x32
  416afd:	or     al,0x28
  416aff:	fidivr WORD PTR [ecx]
  416b01:	adc    BYTE PTR [ebx+edi*1+0x2a3feac0],bh
  416b08:	mov    ch,0xbf
  416b0a:	(bad)  
  416b0b:	(bad)  
  416b0c:	stc    
  416b0d:	into   
  416b0e:	push   ecx
  416b0f:	in     al,0x32
  416b11:	adc    BYTE PTR [eax-0xa],al
  416b14:	cmp    DWORD PTR [edx],edx
  416b16:	mov    esp,0x2feac01b
  416b1b:	push   0xffffffb0
  416b1d:	mov    edi,0xcef96296
  416b22:	sbb    esp,edx
  416b24:	xor    dl,BYTE PTR [edx]
  416b26:	add    BYTE PTR [eax],al
  416b28:	cmp    BYTE PTR [esi],bl
  416b2a:	cmp    dl,BYTE PTR [esp+ebp*4]
  416b2d:	fwait
  416b2e:	mov    edi,0xb52a2fea
  416b33:	mov    edi,0xcef95256
  416b38:	rcl    ebx,1
  416b3a:	xor    eax,0x38d63014
  416b3f:	push   ss
  416b40:	lods   al,BYTE PTR ds:[esi]
  416b41:	mov    ebx,0x2a3feabf
  416b46:	mov    ch,0xbf
  416b48:	push   esi
  416b49:	push   edx
  416b4a:	stc    
  416b4b:	into   
  416b4c:	fnstenv [ebx]
  416b4e:	jno    0x416b85
  416b50:	and    DWORD PTR ds:0xbf4f3853,esp
  416b56:	mov    ecx,0xc73d1dc2
  416b5b:	mov    bl,0xe0
  416b5d:	push   ebp
  416b5e:	repnz clc 
  416b60:	jmp    0x2f76dc3f
  416b65:	inc    ebx
  416b66:	cmp    edi,DWORD PTR [eax]
  416b68:	sub    eax,0xdc299bf
  416b6d:	cmp    eax,0x55b8b407
  416b72:	repnz clc 
  416b74:	add    ebx,ebx
  416b76:	pusha  
  416b77:	xor    eax,0x3893434d
  416b7c:	inc    ebx
  416b7d:	mov    edi,0x65afffa5
  416b82:	sub    DWORD PTR [ecx-0x3de5e8c1],ebx
  416b88:	call   0xf44ac9
  416b8d:	add    BYTE PTR [ecx-0x43],bl
  416b90:	mov    esp,0x966fb5ef
  416b95:	fdivr  QWORD PTR [edi+0x3e19f9d1]
  416b9b:	in     eax,dx
  416b9c:	pop    esi
  416b9d:	nop
  416b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b9f:	cdq    
  416ba0:	outs   dx,DWORD PTR ds:[esi]
  416ba1:	clc    
  416ba2:	nop
  416ba3:	jae    0x416ba1
  416ba5:	mov    edx,DWORD PTR [edx-0x4e0c8241]
  416bab:	cmp    bl,BYTE PTR [edi+0x38]
  416bae:	cmp    ebx,DWORD PTR [eax+edi*4-0x76]
  416bb2:	jp     0x416c07
  416bb4:	jno    0x416bf8
  416bb6:	cmp    edi,DWORD PTR [edi+0x7b50dc1f]
  416bbc:	int3   
  416bbd:	mov    esp,DWORD PTR [edx-0x43]
  416bc0:	sub    al,0xdc
  416bc2:	scas   eax,DWORD PTR es:[edi]
  416bc3:	leave  
  416bc4:	icebp  
  416bc5:	sub    bh,BYTE PTR [esi+0x1817017a]
  416bcb:	out    dx,eax
  416bcc:	mov    esi,0x87e734dd
  416bd1:	xchg   ebp,eax
  416bd2:	mov    dl,0x60
  416bd4:	test   eax,0x803434e9
  416bd9:	adc    al,0x2f
  416bdb:	push   eax
  416bdc:	or     al,0x65
  416bde:	mov    ?,WORD PTR [ecx+eax*1]
  416be1:	jmp    0xeb5662ac
  416be6:	(bad)  
  416be7:	idiv   esp
  416be9:	sbb    DWORD PTR [esi-0x5391a649],ecx
  416bef:	push   eax
  416bf0:	push   ecx
  416bf1:	data16 add BYTE PTR [eax],al
  416bf4:	es inc eax
  416bf6:	les    esp,FWORD PTR [eax+edi*4+0x34e901b3]
  416bfd:	enter  0x4e0e,0xe6
  416c01:	stos   BYTE PTR es:[edi],al
  416c02:	push   ss
  416c03:	test   eax,0xb5c1b734
  416c08:	les    esi,FWORD PTR [ebx+0x65aa36c9]
  416c0e:	add    ecx,ebp
  416c10:	xor    al,0x51
  416c12:	push   ss
  416c13:	or     esi,eax
  416c15:	adc    al,BYTE PTR [ecx]
  416c17:	adc    cl,bh
  416c19:	fnstcw WORD PTR [edi+0x54]
  416c1c:	pop    ebx
  416c1d:	push   ecx
  416c1e:	cld    
  416c1f:	push   cs
  416c20:	cmp    edi,eax
  416c22:	es xchg ebx,eax
  416c24:	cwde   
  416c25:	mov    ebp,0x50bd9d86
  416c2a:	cld    
  416c2b:	cdq    
  416c2c:	maskmovq mm4,mm0
  416c2f:	cdq    
  416c30:	jbe    0x416c28
  416c32:	or     ebp,eax
  416c34:	pushf  
  416c35:	mov    ch,0xae
  416c37:	fidivr WORD PTR [ebp-0x489c0123]
  416c3d:	in     eax,dx
  416c3e:	sti    
  416c3f:	into   
  416c40:	lods   eax,DWORD PTR ds:[esi]
  416c41:	jecxz  0x416bd0
  416c43:	add    BYTE PTR [ebx],cl
  416c45:	xchg   esp,eax
  416c46:	push   ecx
  416c47:	call   0x3f595a
  416c4c:	jne    0x416c52
  416c4e:	arpl   WORD PTR [ebx-0x1e12d],ax
  416c54:	xchg   ecx,eax
  416c55:	inc    ebp
  416c56:	outs   dx,DWORD PTR ds:[esi]
  416c57:	mov    dl,0x0
  416c59:	add    BYTE PTR [eax+ecx*2-0x79],al
  416c5d:	test   DWORD PTR [esi],edi
  416c5f:	mov    ebp,0xcb5efffe
  416c64:	aas    
  416c65:	loopne 0x416ca5
  416c67:	jbe    0x416ca9
  416c69:	bndldx (bad),[esi-0x417e52b5]
  416c70:	add    ah,BYTE PTR [bp+di-0x4c]
  416c74:	push   edi
  416c75:	call   DWORD PTR [ecx-0x6472ae42]
  416c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c7c:	push   ecx
  416c7d:	call   0x3f57c4
  416c82:	jne    0x416cc8
  416c84:	push   0x1c
  416c86:	arpl   sp,si
  416c88:	loopne 0x416cda
  416c8a:	lods   ax,WORD PTR ds:[esi]
  416c8c:	test   al,0xff
  416c8e:	add    DWORD PTR [ebx+0x41cf1440],esp
  416c94:	or     dh,al
  416c96:	mov    ecx,DWORD PTR [esi+0x0]
  416c99:	(bad)  
  416c9a:	fstp   TBYTE PTR [ecx+0x359e000f]
  416ca0:	jmp    0x4901:0xdf4580b
  416ca7:	hlt    
  416ca8:	cld    
  416ca9:	push   es
  416caa:	sahf   
  416cab:	xor    eax,0x45db8a01
  416cb0:	test   BYTE PTR [ebp+0x63],al
  416cb3:	das    
  416cb4:	add    eax,0x4c4c4b8d
  416cb9:	lea    ebx,[ebx]
  416cbb:	pushf  
  416cbc:	push   ecx
  416cbd:	mov    BYTE PTR [eax],0x0
  416cc0:	aaa    
  416cc1:	and    cl,bh
  416cc3:	add    bh,BYTE PTR [ecx+0x18]
  416cc6:	idiv   edi
  416cc8:	push   eax
  416cc9:	(bad)  
  416cca:	pop    ecx
  416ccb:	std    
  416ccc:	push   eax
  416ccd:	(bad)  
  416cce:	cmp    edi,esp
  416cd0:	mov    ah,0x9b
  416cd2:	add    DWORD PTR [eax-0x4e],edx
  416cd5:	sbb    BYTE PTR [ecx-0x2cfc7b0],ch
  416cdb:	out    0xb1,eax
  416cdd:	jns    0x416cdf
  416cdf:	add    BYTE PTR [esp+edx*4-0x7f],ah
  416ce3:	shl    BYTE PTR [eax],0xc8
  416ce6:	mov    edi,0xc383f689
  416ceb:	adc    BYTE PTR [edi],dh
  416ced:	sub    BYTE PTR [esi-0x14],bh
  416cf0:	mov    dh,0xb6
  416cf2:	xchg   ebp,eax
  416cf3:	add    al,0x37
  416cf5:	pop    ebx
  416cf6:	xor    eax,0xf86fac56
  416cfb:	push   esp
  416cfc:	mov    ebx,esp
  416cfe:	outs   dx,BYTE PTR ds:[esi]
  416cff:	or     esi,DWORD PTR [edi]
  416d01:	pop    ebx
  416d02:	aad    0xc6
  416d04:	and    ebx,DWORD PTR [ebp-0x7]
  416d07:	xchg   ebx,eax
  416d08:	test   BYTE PTR [ebp-0x53],0x51
  416d0c:	pop    ebp
  416d0d:	pop    esp
  416d0e:	jae    0x416d53
  416d10:	int3   
  416d11:	stos   BYTE PTR es:[edi],al
  416d12:	jge    0x416d12
  416d14:	scas   al,BYTE PTR es:[edi]
  416d15:	scas   eax,DWORD PTR es:[edi]
  416d16:	mov    al,ds:0x7fb3e8
  416d1b:	add    BYTE PTR [ebx-0xa7c05e6],bh
  416d21:	pop    esp
  416d22:	add    BYTE PTR [eax],al
  416d24:	add    BYTE PTR [eax],al
  416d26:	pop    edi
  416d27:	mov    al,ds:0x73b30d8d
  416d2c:	push   es
  416d2d:	add    BYTE PTR [edi],dh
  416d2f:	bound  edx,QWORD PTR [edx+0x43]
  416d32:	mov    WORD PTR [ebp-0x194574d0],gs
  416d38:	mov    ch,bh
  416d3a:	js     0x416d6f
  416d3c:	cmp    bl,BYTE PTR [eax+edx*1-0x4cfc15e9]
  416d43:	jae    0x416d28
  416d45:	jg     0x416d89
  416d47:	ss jmp 0x5e8d:0x2d8a2a03
  416d4f:	cmp    eax,0x36accc32
  416d54:	pop    esi
  416d55:	xchg   DWORD PTR [edx+0x50],eax
  416d58:	ss (bad) 
  416d5a:	push   DWORD PTR [ebp+ebx*1-0x6a]
  416d5e:	data16 je 0x416cf4
  416d61:	stos   DWORD PTR es:[edi],eax
  416d62:	dec    esi
  416d63:	je     0x416d32
  416d65:	add    esp,DWORD PTR [eax]
  416d67:	dec    edi
  416d68:	mov    ecx,DWORD PTR [eax+0x34]
  416d6b:	dec    edi
  416d6c:	jmp    0xf750:0xeb773603
  416d73:	mov    ebp,0x328da02d
  416d78:	pop    ebp
  416d79:	ds adc esp,ebp
  416d7c:	mov    ebx,0xea1a129b
  416d81:	add    esi,DWORD PTR [ebx+0x27fe374]
  416d87:	ss jmp 0xc50d:0x51000003
  416d8f:	lahf   
  416d90:	inc    esp
  416d91:	and    al,0x7a
  416d93:	add    dl,al
  416d95:	push   0xc13703e9
  416d9a:	data16 (bad) 
  416d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d9d:	push   eax
  416d9e:	and    ecx,DWORD PTR [eax+0x1db7749e]
  416da4:	xor    eax,ecx
  416da6:	lods   eax,DWORD PTR ds:[esi]
  416da7:	mov    edi,0x7b0cbb07
  416dac:	cld    
  416dad:	inc    esi
  416dae:	adc    dl,BYTE PTR [ebp+0x7fea345b]
  416db4:	ja     0x416df5
  416db6:	add    DWORD PTR [ebp-0x1c],ebp
  416db9:	dec    esi
  416dba:	cld    
  416dbb:	jmp    0xed063974
  416dc0:	imul   esi,DWORD PTR [edx+0x3434e8a3],0x4f9b2cf3
  416dca:	jo     0x416dc5
  416dcc:	cdq    
  416dcd:	repz mov eax,0x13434de
  416dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dd4:	test   BYTE PTR [edi+0x3434e8ff],0xe8
  416ddb:	fistp  QWORD PTR [ecx-0xd]
  416dde:	mov    eax,0x13434eb
  416de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416de4:	jbe    0x416d76
  416de6:	adc    al,0xe9
  416de8:	xor    al,0x34
  416dea:	or     al,0x57
  416dec:	jbe    0x416e67
  416dee:	dec    ecx
  416def:	jb     0x416df1
  416df1:	add    dh,ah
  416df3:	(bad)  
  416df4:	push   cs
  416df5:	sub    DWORD PTR [ebx],esi
  416df7:	mov    bh,0x5e
  416df9:	xchg   ecx,eax
  416dfa:	or     BYTE PTR [ebx+0x3434e80f],dh
  416e00:	dec    ecx
  416e01:	mov    cl,0x40
  416e03:	dec    BYTE PTR [eax-0x12]
  416e06:	mov    bh,0xd4
  416e08:	add    ecx,ebp
  416e0a:	xor    al,0xbd
  416e0c:	jle    0x416def
  416e0e:	and    eax,0xb67410da
  416e13:	das    
  416e14:	cld    
  416e15:	ds mov al,0xe3
  416e18:	call   0xfc90457f
  416e1d:	gs repz inc eax
  416e20:	test   DWORD PTR [eax-0x6cfecbc5],esi
  416e26:	xchg   esp,eax
  416e27:	fmul   QWORD PTR [eax]
  416e29:	push   ss
  416e2a:	xchg   BYTE PTR [edx+0x5134aac3],cl
  416e30:	rol    DWORD PTR [eax],cl
  416e32:	pop    es
  416e33:	cmc    
  416e34:	fdivr  DWORD PTR [ebx]
  416e36:	pop    ebp
  416e37:	inc    edi
  416e38:	cmp    ah,0x8e
  416e3b:	xor    al,BYTE PTR [ecx]
  416e3d:	push   0x61
  416e3f:	pop    ds
  416e40:	arpl   WORD PTR [ecx-0x72eed39a],cx
  416e46:	fist   DWORD PTR [esi-0x3]
  416e49:	dec    DWORD PTR [ecx+0x7708c1b1]
  416e4f:	mov    esp,0xc95e0001
  416e54:	ja     0x416e5e
  416e56:	add    BYTE PTR [eax],al
  416e58:	sub    eax,0x138cfc2a
  416e5d:	mov    esi,0x5411e851
  416e62:	cld    
  416e63:	jmp    DWORD PTR [edx+0x13840e71]
  416e69:	cmp    DWORD PTR [ecx],eax
  416e6b:	add    BYTE PTR [esi],al
  416e6d:	sbb    eax,0xb5920ff3
  416e72:	add    DWORD PTR [eax],eax
  416e74:	push   ds
  416e75:	inc    edi
  416e76:	mov    dh,0x45
  416e78:	add    BYTE PTR [edx],0x51
  416e7b:	lea    edx,[ebx-0x760006a3]
  416e81:	add    ecx,ebp
  416e83:	and    al,0x42
  416e85:	cmp    BYTE PTR [ecx],al
  416e87:	test   BYTE PTR [esi],bl
  416e89:	inc    esi
  416e8a:	and    dl,0xce
  416e8d:	xor    DWORD PTR [ecx],eax
  416e8f:	xadd   ah,dh
  416e92:	repnz mov BYTE PTR [edx+0x34],bl
  416e96:	adc    eax,0x88b609fb
  416e9b:	inc    ebp
  416e9c:	push   ss
  416e9d:	add    DWORD PTR [edx+0x53],edx
  416ea0:	pop    ebx
  416ea1:	mov    ah,0x15
  416ea3:	sti    
  416ea4:	pop    ecx
  416ea5:	mov    dh,0x51
  416ea7:	mov    ebx,ebp
  416ea9:	mov    esi,edi
  416eab:	adc    eax,0x3ff0cb37
  416eb0:	aaa    
  416eb1:	fdivr  DWORD PTR [edi+0x411d3e74]
  416eb7:	cmc    
  416eb8:	xor    esp,DWORD PTR [ebp*2+0x37000000]
  416ebf:	pop    ebx
  416ec0:	rcl    cl,cl
  416ec2:	lods   al,BYTE PTR ds:[esi]
  416ec3:	cwde   
  416ec4:	mov    eax,0xf1ef7439
  416ec9:	or     al,0xa1
  416ecb:	cmp    DWORD PTR [edx+0x4c],0x47c8a3b2
  416ed2:	xor    esp,edi
  416ed4:	jecxz  0x416e5e
  416ed6:	not    DWORD PTR [esi-0x37]
  416ed9:	rol    dl,0x86
  416edc:	add    edx,0xffffffb7
  416edf:	cmp    edi,0x3c955871
  416ee5:	cmc    
  416ee6:	cmp    edx,DWORD PTR [esi+0x4828c80c]
  416eec:	cwde   
  416eed:	adc    esi,DWORD PTR [edi+0x5b]
  416ef0:	cdq    
  416ef1:	sbb    BYTE PTR gs:[ebx],ch
  416ef4:	cmc    
  416ef5:	cld    
  416ef6:	xchg   DWORD PTR [ebx-0x68],edx
  416ef9:	add    al,0xdc
  416efb:	int    0x85
  416efd:	xchg   DWORD PTR [edx-0x5d],edi
  416f00:	retf   0x82c0
  416f03:	push   ebp
  416f04:	mov    esi,0x995be843
  416f09:	fist   DWORD PTR [ecx-0x26]
  416f0c:	int3   
  416f0d:	adc    al,0x6a
  416f0f:	push   cs
  416f10:	js     0x416f6a
  416f12:	aas    
  416f13:	aam    0x2c
  416f15:	add    al,0xdc
  416f17:	add    eax,0xaa3f7b7a
  416f1c:	sbb    al,BYTE PTR [edx+esi*4]
  416f1f:	lahf   
  416f20:	dec    esp
  416f21:	push   eax
  416f22:	add    BYTE PTR [eax],al
  416f24:	iret   
  416f25:	aad    0xe1
  416f27:	push   DWORD PTR [eax+0x23c46e33]
  416f2d:	sti    
  416f2e:	(bad)  
  416f2f:	out    dx,eax
  416f30:	push   cs
  416f31:	cmp    al,0x13
  416f33:	iret   
  416f34:	fdiv   QWORD PTR [ebp-0x59]
  416f37:	add    edx,DWORD PTR [edx+0x6f3f7165]
  416f3d:	or     BYTE PTR [edi],ah
  416f3f:	(bad)  
  416f41:	jbe    0x416ef0
  416f43:	mov    WORD PTR [eax+0x59],?
  416f46:	aad    0x19
  416f48:	xor    eax,0x3f7b4beb
  416f4d:	(bad)  
  416f4f:	jbe    0x416f3d
  416f51:	xchg   DWORD PTR [edi-0x3d],esp
  416f54:	xor    esp,ebx
  416f56:	cmp    DWORD PTR [ecx+ecx*8-0x417b3c67],ebx
  416f5d:	into   
  416f5e:	icebp  
  416f5f:	xor    ch,cl
  416f61:	xor    DWORD PTR [ebp+0x3e],esp
  416f64:	ja     0x416f49
  416f66:	sar    DWORD PTR ds:0x7fea3456,0xf7
  416f6d:	sar    eax,0x84
  416f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f71:	ins    BYTE PTR es:[edi],dx
  416f72:	and    ah,0xce
  416f75:	dec    ebx
  416f76:	mov    edx,ecx
  416f78:	shr    bl,1
  416f7a:	and    ebp,DWORD PTR [ecx]
  416f7c:	lock jbe 0x416f65
  416f7f:	add    edi,ecx
  416f81:	icebp  
  416f82:	outs   dx,BYTE PTR ds:[esi]
  416f83:	add    bh,BYTE PTR [edi]
  416f85:	jmp    0x4263fc
  416f8a:	mov    ch,0x14
  416f8c:	in     al,dx
  416f8d:	add    esi,DWORD PTR [edi]
  416f8f:	shr    BYTE PTR [esi+0x3e],cl
  416f92:	idiv   DWORD PTR [edi-0x42ae5423]
  416f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f99:	add    DWORD PTR [edx-0x7e],eax
  416f9c:	lods   eax,DWORD PTR ds:[esi]
  416f9d:	mov    esi,0xc3663b7f
  416fa2:	xor    al,0x34
  416fa4:	add    ecx,ebp
  416fa6:	cld    
  416fa7:	cmp    BYTE PTR [ebp-0x3b44e25],al
  416fad:	mov    cl,0x38
  416faf:	xor    eax,ebx
  416fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb2:	mov    bl,0x31
  416fb4:	jmp    0xb451:0xfc4b991e
  416fbb:	xor    al,0x1
  416fbd:	jmp    0x70f266cf
  416fc2:	inc    ecx
  416fc3:	cwde   
  416fc4:	mov    gs,WORD PTR [esp+eiz*8-0x779b721d]
  416fcb:	dec    eax
  416fcc:	cld    
  416fcd:	out    0x83,al
  416fcf:	loopne 0x416fcc
  416fd1:	hlt    
  416fd2:	aam    0x26
  416fd4:	inc    ecx
  416fd5:	jmp    0x644de489
  416fda:	repz das 
  416fdc:	add    ecx,ebp
  416fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fdf:	imul   DWORD PTR [ecx+ebx*1-0x4aea485a]
  416fe6:	mov    ah,0x49
  416fe8:	push   ecx
  416fe9:	push   ss
  416fea:	mov    ah,0x26
  416fec:	cdq    
  416fed:	cld    
  416fee:	add    BYTE PTR [eax],al
  416ff0:	hlt    
  416ff1:	dec    edx
  416ff2:	test   DWORD PTR [ecx-0x124448bc],ebp
  416ff8:	xor    al,0x34
  416ffa:	arpl   WORD PTR [edx-0xa],bp
  416ffd:	pop    ss
  416ffe:	cld    
  416fff:	xchg   BYTE PTR [eax+eiz*1+0x19ae7063],dh
  417006:	cld    
  417007:	jbe    0x416fbd
  417009:	(bad)  
  41700a:	or     al,0x60
  41700c:	xchg   esi,eax
  41700d:	out    dx,eax
  41700e:	sti    
  41700f:	data16 mov ah,0xb2
  417012:	sahf   
  417013:	sbb    DWORD PTR [eax+ecx*2+0x179e64fc],esi
  41701a:	cld    
  41701b:	dec    esi
  41701c:	mov    ah,0x5b
  41701e:	mov    DWORD PTR [eax],eax
  417020:	cmp    BYTE PTR [eax],dh
  417022:	add    DWORD PTR [ecx-0x77e2165],ecx
  417028:	add    DWORD PTR [edi],esp
  41702a:	test   DWORD PTR [edx+0x6801369a],ecx
  417030:	popf   
  417031:	ss cld 
  417033:	inc    esp
  417035:	ds (bad) 
  417037:	xor    eax,0x41fe02
  41703c:	inc    ecx
  41703d:	sub    eax,0x36de1279
  417042:	mov    bh,al
  417044:	jne    0x41700f
  417046:	outs   dx,DWORD PTR ds:[esi]
  417047:	or     DWORD PTR [eax+0x7d],ecx
  41704a:	cmc    
  41704b:	add    DWORD PTR [edi],esi
  41704d:	push   eax
  41704e:	add    BYTE PTR [eax],al
  417050:	pop    esi
  417051:	mov    ch,0x70
  417053:	loopne 0x417055
  417055:	add    ch,ah
  417057:	dec    ebx
  417058:	add    al,0x53
  41705a:	or     DWORD PTR [ebx-0x1c],0xfaa37656
  417061:	push   DWORD PTR [ecx-0x4f]
  417064:	stc    
  417065:	add    DWORD PTR [ecx-0x45],edx
  417068:	xor    al,BYTE PTR [esi+ecx*2]
  41706b:	mov    al,BYTE PTR ss:[ebp-0xa]
  41706f:	mov    dl,0x48
  417071:	in     al,dx
  417072:	shl    DWORD PTR [edx-0x493fdf78],1
  417078:	(bad)  
  417079:	call   DWORD PTR [edi+0x6389cc54]
  41707f:	aam    0x83
  417081:	pop    ebp
  417082:	mov    edx,0x80147ffe
  417087:	mov    dh,0xfe
  417089:	add    cl,BYTE PTR [esi]
  41708b:	add    DWORD PTR ss:[ecx-0x4d2d5],ecx
  417092:	push   ecx
  417093:	mov    eax,0xb6801c80
  417098:	(bad)  
  417099:	jmp    0x4471d5
  41709e:	aaa    
  41709f:	cli    
  4170a0:	clc    
  4170a1:	pop    es
  4170a2:	mov    edx,0xc0fe13d8
  4170a7:	or     ch,BYTE PTR [eax-0x1b]
  4170aa:	push   ss
  4170ab:	pop    ebx
  4170ac:	add    BYTE PTR [edi+esi*2+0x1f51187f],al
  4170b3:	adc    bh,BYTE PTR [edi+0x0]
  4170b6:	aaa    
  4170b7:	cmp    BYTE PTR [edi+0x73],0x0
  4170bb:	add    BYTE PTR [edi],ch
  4170bd:	and    bl,BYTE PTR [ecx]
  4170bf:	hlt    
  4170c0:	sub    bl,BYTE PTR [ebx+0x42778300]
  4170c6:	xchg   edx,eax
  4170c7:	retf   
  4170c8:	xor    al,0x5b
  4170ca:	add    ch,bh
  4170cc:	add    dh,BYTE PTR [ebx]
  4170ce:	xchg   ecx,eax
  4170cf:	or     DWORD PTR [ebx+0x59],0xffffff82
  4170d3:	std    
  4170d4:	jo     0x4170ee
  4170d6:	jne    0x417058
  4170d8:	aaa    
  4170d9:	pop    ebx
  4170da:	add    al,ch
  4170dc:	mov    eax,ds:0xbb00053c
  4170e1:	fwait
  4170e2:	adc    al,BYTE PTR [esi+edx*4-0x4dffffa3]
  4170e9:	adc    BYTE PTR [ebp+0x50],dh
  4170ec:	stos   BYTE PTR es:[edi],al
  4170ed:	fdiv   DWORD PTR [eax]
  4170ef:	std    
  4170f0:	xor    BYTE PTR [edx-0x6d60af2b],bl
  4170f6:	add    BYTE PTR [eax],0x37
  4170f9:	add    al,BYTE PTR [edx+0x14a20f73]
  4170ff:	xchg   esp,eax
  417100:	sub    bl,BYTE PTR [ebx]
  417102:	add    eax,0xf3c40789
  417107:	sar    DWORD PTR [esi+ecx*8],cl
  41710a:	adc    DWORD PTR [esi+0x5daf],ecx
  417110:	mov    ah,0xd8
  417112:	push   es
  417113:	or     eax,0x5da33b5
  417118:	aaa    
  417119:	xor    al,0xc4
  41711b:	mov    WORD PTR [edi+edx*1+0x8153],?
  417122:	rcl    cl,cl
  417124:	adc    BYTE PTR [edi-0x7ebcb7dd],al
  41712a:	xor    ch,BYTE PTR [edi+0x3437059e]
  417130:	int3   
  417131:	test   BYTE PTR [edi-0x41ee4acb],ch
  417137:	scas   al,BYTE PTR es:[edi]
  417138:	add    al,BYTE PTR [eax-0x7920b75e]
  41713e:	addr16 dec ecx
  417140:	adc    eax,DWORD PTR [ecx-0x7b7bd362]
  417146:	(bad)  
  417147:	and    BYTE PTR [ebp+0x1c],bh
  41714a:	or     eax,0x43876d24
  41714f:	dec    ecx
  417150:	repz cmp BYTE PTR [esi+esi*4+0x486a7fce],0xd2
  417159:	sets   BYTE PTR [eax-0x25]
  41715d:	xchg   BYTE PTR [edi+0x38],dh
  417160:	ins    DWORD PTR es:[edi],dx
  417161:	sub    BYTE PTR ds:0xca83ea34,dh
  417167:	xor    eax,0x26b410ea
  41716c:	call   0xf113a874
  417171:	and    BYTE PTR [edx-0x4f],al
  417174:	(bad)  
  417175:	add    eax,0xdee13437
  41717a:	adc    al,0xc2
  41717c:	xlat   BYTE PTR ds:[ebx]
  41717d:	and    BYTE PTR [esp+eax*2+0x47638665],0x8b
  417185:	add    BYTE PTR [eax],0x0
  417188:	addr16 mov ecx,0x47fc976d
  41718e:	jnp    0x417163
  417190:	adc    dl,bh
  417192:	add    BYTE PTR [ecx-0x49],al
  417195:	dec    ecx
  417196:	arpl   WORD PTR [edx-0x57],bp
  417199:	mov    al,ds:0x21b766fe
  41719e:	jbe    0x41718d
  4171a0:	lods   eax,DWORD PTR ds:[esi]
  4171a1:	stos   DWORD PTR es:[edi],eax
  4171a2:	lods   eax,DWORD PTR ds:[esi]
  4171a3:	push   esp
  4171a4:	mov    bh,0x49
  4171a6:	mov    ch,BYTE PTR [esp+ebp*4+0x4b]
  4171aa:	cld    
  4171ab:	inc    esi
  4171ac:	mov    bl,0xf3
  4171ae:	lock jo 0x4171a2
  4171b1:	push   ebx
  4171b2:	imul   ebp,DWORD PTR [ecx+0x34],0xb15c0134
  4171b9:	sbb    ah,bh
  4171bb:	es mov bh,0xe5
  4171be:	push   eax
  4171bf:	push   ds
  4171c0:	inc    ecx
  4171c1:	sub    al,0x13
  4171c3:	test   eax,0xa6b33934
  4171c8:	xor    esi,DWORD PTR [ebp+0x386cf5c5]
  4171ce:	test   ebp,esi
  4171d0:	xor    eax,0x7ca10134
  4171d5:	ret    
  4171d6:	mov    eax,ss:0xe8b2b347
  4171dc:	xor    al,0x34
  4171de:	sbb    bh,0x41
  4171e1:	cmp    DWORD PTR [ebx+0x1343a81],ecx
  4171e7:	inc    ebx
  4171e8:	and    ah,ch
  4171ea:	bound  esi,QWORD PTR [eax+0x0]
  4171ed:	add    BYTE PTR [esi-0x474103e8],ch
  4171f3:	fst    DWORD PTR [eax]
  4171f5:	fs clc 
  4171f7:	xor    dl,BYTE PTR [ecx+0x5c]
  4171fa:	mov    esi,0xa0a6fbff
  4171ff:	in     al,0xc3
  417201:	and    al,0xa3
  417203:	sub    BYTE PTR [ecx],al
  417205:	jmp    0x471bce3e
  41720a:	mov    BYTE PTR [ecx+0x67],cl
  41720d:	add    dl,ah
  41720f:	xlat   BYTE PTR ds:[ebx]
  417210:	in     al,0x0
  417212:	push   cs
  417213:	xor    eax,DWORD PTR [edi-0x3e511db9]
  417219:	rsqrtps xmm0,XMMWORD PTR [ebx-0x5]
  41721d:	dec    esi
  41721f:	xor    eax,0x784bc0b3
  417224:	add    eax,0x8b376f3b
  417229:	fbstp  TBYTE PTR gs:[edx]
  41722c:	add    DWORD PTR [eax+0x4b],edx
  41722f:	ja     0x417230
  417231:	push   eax
  417232:	dec    ebx
  417233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417234:	xchg   ebp,eax
  417235:	cld    
  417236:	imul   eax,edi,0x8eb6e84b
  41723c:	(bad)  
  41723d:	call   DWORD PTR [eax-0x44]
  417240:	add    BYTE PTR [edx+edi*1+0x1b00fdc7],dl
  417247:	push   0xa55e32ff
  41724c:	dec    eax
  41724d:	int3   
  41724e:	lahf   
  41724f:	bound  ecx,QWORD PTR [ecx+ecx*4+0x0]
  417253:	add    bl,dl
  417255:	test   BYTE PTR [edi-0x14bed7b],0xff
  41725c:	into   
  41725d:	lds    ecx,FWORD PTR [edi]
  41725f:	nop
  417260:	arpl   WORD PTR [edx-0x4],si
  417263:	test   BYTE PTR [esi+0x5f298035],cl
  417269:	xor    al,BYTE PTR [ecx]
  41726b:	xor    cl,BYTE PTR [ecx+eax*1-0x1bec740d]
  417272:	cmp    esi,eax
  417274:	add    ah,BYTE PTR [ebx]
  417276:	push   cs
  417277:	mov    dh,0xd4
  417279:	mov    edx,0x8a68d4d
  41727e:	dec    ecx
  41727f:	add    al,0x42
  417281:	and    DWORD PTR [edx-0x3cf4e5c0],ecx
  417287:	jne    0x4172c0
  417289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41728a:	jle    0x41724e
  41728c:	mov    bh,0xa1
  41728e:	add    dh,BYTE PTR [edx-0x20]
  417291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417292:	jnp    0x417294
  417294:	aaa    
  417295:	pop    ebx
  417296:	xchg   DWORD PTR [eax+0x47],ecx
  417299:	sub    al,0x8e
  41729b:	dec    ebx
  41729c:	out    0xd6,eax
  41729e:	out    dx,eax
  41729f:	pop    ss
  4172a0:	mov    dl,0xd8
  4172a2:	sub    edi,ebp
  4172a4:	fsub   st,st(6)
  4172a6:	iret   
  4172a7:	out    0x12,eax
  4172a9:	mov    dh,0x7b
  4172ab:	std    
  4172ac:	push   ecx
  4172ad:	fcmovb st,st(0)
  4172af:	sub    al,0xc0
  4172b1:	out    dx,al
  4172b2:	jp     0x4172c9
  4172b4:	inc    edx
  4172b5:	push   edi
  4172b6:	lea    esi,[ebx-0x2050000]
  4172bc:	jp     0x4172bb
  4172be:	mov    esi,0xa0fd2fc0
  4172c3:	push   cs
  4172c4:	jnp    0x417339
  4172c6:	imul   esp,DWORD PTR [esi],0x19
  4172c9:	call   0xe9420df8
  4172ce:	pop    eax
  4172cf:	fidivr DWORD PTR [ebp+0xa]
  4172d2:	xor    BYTE PTR [ebp+0x5b3700ba],bh
  4172d8:	jmp    0x1b83:0x8db50f01
  4172df:	push   esi
  4172e0:	jle    0x4172df
  4172e2:	int    0x56
  4172e4:	mov    eax,DWORD PTR [ebp+0x33]
  4172e7:	or     ecx,DWORD PTR [ebx+eax*4-0x281a1f9]
  4172ee:	out    0x8d,eax
  4172f0:	(bad)  
  4172f1:	out    dx,eax
  4172f2:	daa    
  4172f3:	pop    ebx
  4172f4:	add    BYTE PTR [eax],al
  4172f6:	dec    edi
  4172f7:	mov    esp,DWORD PTR [ebx+0xcf130fd]
  4172fd:	pop    ecx
  4172fe:	xchg   ecx,eax
  4172ff:	ror    BYTE PTR [eax],cl
  417301:	sbb    eax,0x2a733b4
  417306:	mov    dh,0xc6
  417308:	lea    edi,[ebp-0x67]
  41730b:	mov    ebx,0x450a2e6d
  417310:	mov    esi,edi
  417312:	fsubr  QWORD PTR gs:[ecx+0x4]
  417316:	aaa    
  417317:	xor    al,0x6d
  417319:	xchg   DWORD PTR [ebx+0x47],ecx
  41731c:	jae    0x41739b
  41731e:	add    BYTE PTR [eax],al
  417320:	pop    ebp
  417321:	xor    al,0x1a
  417323:	jge    0x417369
  417325:	sub    al,0xfc
  417327:	ret    
  417328:	fmul   st,st(6)
  41732a:	outs   dx,BYTE PTR ds:[esi]
  41732b:	xchg   DWORD PTR [ebx],esp
  41732d:	inc    ebp
  41732e:	push   ebx
  41732f:	jge    0x417382
  417331:	mov    ebx,0x44bc1865
  417336:	inc    ebx
  417337:	or     eax,0x48677382
  41733c:	inc    ebx
  41733d:	mov    bh,0x7d
  41733f:	sbb    BYTE PTR [esp+eax*2+0x67f48b2b],ch
  417346:	adc    dh,dh
  417348:	push   edi
  417349:	xor    al,0xea
  41734b:	mov    dh,ah
  41734d:	push   edi
  41734e:	addr16 jl 0x4172db
  417351:	xor    al,0x66
  417353:	rol    BYTE PTR [ecx+0x7730ea44],cl
  417359:	mov    al,0x7d
  41735b:	pop    edi
  41735c:	dec    edx
  41735d:	xor    eax,0xb0ff445d
  417362:	or     dl,BYTE PTR [eax]
  417364:	mov    dh,0x73
  417366:	lock mov dh,ah
  417369:	arpl   WORD PTR [ecx],sp
  41736b:	fbld   TBYTE PTR [ebp+eax*8-0x2]
  41736f:	or     al,0x82
  417371:	scas   al,BYTE PTR es:[edi]
  417372:	(bad)  
  417373:	jl     0x4173b7
  417375:	inc    esp
  417376:	add    edi,eax
  417378:	pop    esp
  417379:	mov    esi,0x44a47cda
  41737e:	add    DWORD PTR [ecx+esi*4+0x10],esp
  417382:	cld    
  417383:	scas   al,BYTE PTR es:[edi]
  417384:	add    BYTE PTR [eax],al
  417386:	mov    ds:0x7f2c87e4,eax
  41738b:	into   
  41738c:	add    dl,dl
  41738e:	ja     0x417374
  417390:	(bad)  
  417391:	in     eax,dx
  417392:	sub    esp,esp
  417394:	sti    
  417395:	adc    al,0x87
  417397:	inc    ecx
  417398:	push   ss
  417399:	lea    esp,[ecx]
  41739b:	hlt    
  41739c:	add    BYTE PTR [edx-0xf],ch
  41739f:	dec    edi
  4173a0:	cld    
  4173a1:	out    0xb0,al
  4173a3:	add    BYTE PTR [ecx],0xe9
  4173a6:	xor    al,0x41
  4173a8:	jbe    0x4173ff
  4173aa:	test   eax,0x535f15b7
  4173af:	inc    ecx
  4173b0:	jmp    0x1759e11
  4173b5:	gs je  0x4173e9
  4173b8:	test   DWORD PTR [ecx+0x72013434],edx
  4173be:	test   eax,0x24ac8e73
  4173c3:	in     al,0x8d
  4173c5:	fs push eax
  4173c7:	inc    ecx
  4173c8:	cld    
  4173c9:	test   BYTE PTR es:[eax+ebx*8],al
  4173cd:	mov    edx,0xe9fc41cc
  4173d2:	xor    al,0xd
  4173d4:	ret    
  4173d5:	mov    ecx,0x993438b1
  4173da:	sti    
  4173db:	(bad)  
  4173dc:	in     al,dx
  4173dd:	dec    BYTE PTR [edx-0x58]
  4173e0:	push   ss
  4173e1:	test   eax,0x6ebffd34
  4173e6:	xor    BYTE PTR [ecx],dh
  4173e8:	mov    ah,0x74
  4173ea:	add    BYTE PTR [eax],al
  4173ec:	cmovno edi,esp
  4173ef:	ficom  WORD PTR [edx]
  4173f1:	out    dx,eax
  4173f2:	fcomp  QWORD PTR [edi+eax*2+0x4]
  4173f6:	retf   0xb247
  4173f9:	xor    DWORD PTR [ecx+0x633a0100],ecx
  4173ff:	xor    DWORD PTR [ebx-0x1e0001f4],0x26
  417406:	push   cs
  417407:	xchg   ebp,eax
  417408:	iret   
  417409:	mov    ebp,0x3aaf80c3
  41740e:	sti    
  41740f:	rcr    DWORD PTR [ebp-0x69e827c3],0x6f
  417416:	add    DWORD PTR [ebp+0x14],esi
  417419:	push   ecx
  41741a:	or     al,0x8d
  41741c:	add    DWORD PTR [esi+edi*8],0xffffffff
  417420:	jno    0x4173f5
  417422:	or     al,BYTE PTR [ebx+0x74feeae3]
  417428:	rsqrtps xmm0,XMMWORD PTR [eax]
  41742b:	lea    esp,[ebx+0x8]
  41742e:	(bad)  
  41742f:	push   DWORD PTR [ecx+0x69]
  417432:	xchg   DWORD PTR [edi-0x26],ecx
  417435:	addr16 in al,0xb9
  417438:	mov    ebx,0xcc6afdbe
  41743d:	stos   DWORD PTR es:[edi],eax
  41743e:	mov    BYTE PTR [esi],ch
  417440:	jno    0x417401
  417442:	std    
  417443:	push   ecx
  417444:	adc    ebp,DWORD PTR [ebp+esi*1-0x2]
  417448:	mov    edi,0x51a5a2ce
  41744d:	mov    edi,0x75fd
  417452:	cmp    ch,BYTE PTR [ebp-0x40dc6b78]
  417458:	std    
  417459:	push   ecx
  41745a:	mov    ebp,0x9950c339
  41745f:	mov    ebp,0x2371e86f
  417464:	in     eax,0x15
  417466:	sahf   
  417467:	ss jmp 0x8245:0x89e19d02
  41746f:	or     esp,eax
  417471:	adc    DWORD PTR [esi-0x43],0xd
  417475:	xchg   ebp,eax
  417476:	aaa    
  417477:	mov    WORD PTR [ebp+0x77731783],cs
  41747d:	std    
  41747e:	mov    ah,0x8b
  417480:	push   es
  417481:	xchg   edx,eax
  417483:	addr16 jp 0x417483
  417486:	sub    bh,dl
  417488:	enter  0xae07,0xe0
  41748c:	pop    ss
  41748d:	(bad)  
  41748e:	sbb    BYTE PTR [ebx-0x3ae0b475],bl
  417494:	mov    BYTE PTR [ecx+ecx*1],bl
  417497:	stos   DWORD PTR es:[edi],eax
  417498:	ja     0x4174eb
  41749a:	dec    BYTE PTR fs:[ecx+0x77b92383]
  4174a1:	std    
  4174a2:	xchg   DWORD PTR [esi],ebx
  4174a4:	js     0x4174b9
  4174a6:	or     esp,DWORD PTR [ecx-0x40]
  4174a9:	(bad)  
  4174aa:	mov    ebx,0x2e8d078b
  4174af:	xlat   BYTE PTR ds:[ebx]
  4174b0:	jbe    0x4174af
  4174b2:	mov    esp,0xe86468
  4174b7:	add    ch,cl
  4174b9:	sub    al,0x5
  4174bb:	add    ah,cl
  4174bd:	popa   
  4174be:	cmp    eax,0xffffffb8
  4174c1:	add    BYTE PTR [edx],0xc6
  4174c4:	cli    
  4174c5:	or     DWORD PTR ds:0xd8d334e9,eax
  4174cb:	clc    
  4174cc:	or     bl,dh
  4174ce:	push   0xffffffa4
  4174d0:	cwde   
  4174d1:	sbb    cl,BYTE PTR [ebx+0x71249f73]
  4174d7:	add    BYTE PTR [edi],dh
  4174d9:	dec    ebx
  4174da:	inc    edx
  4174db:	inc    ebx
  4174dc:	mov    BYTE PTR [ebp+ebp*2-0x11],cl
  4174e0:	aaa    
  4174e1:	dec    ebx
  4174e2:	add    BYTE PTR [ecx],dh
  4174e4:	ja     0x41749f
  4174e6:	cmp    DWORD PTR [esi],0x40
  4174e9:	mov    cl,0x8d
  4174eb:	inc    esi
  4174ec:	xor    eax,0x476a08c8
  4174f1:	xor    al,0x75
  4174f3:	ret    0xe438
  4174f6:	sar    DWORD PTR [esp+edx*4+0x366dd341],1
  4174fd:	stos   DWORD PTR es:[edi],eax
  4174fe:	sub    al,0x0
  417500:	scas   al,BYTE PTR es:[edi]
  417501:	jp     0x4174d5
  417503:	lods   al,BYTE PTR ds:[esi]
  417504:	push   edx
  417505:	xor    al,0xea
  417507:	mov    WORD PTR [edi],fs
  417509:	stos   DWORD PTR es:[edi],eax
  41750a:	cmp    eax,0xab41b654
  41750f:	or     DWORD PTR [ebx+0x3703eab7],esi
  417515:	inc    ecx
  417516:	adc    eax,0x3aea6664
  41751b:	ins    BYTE PTR es:[edi],dx
  41751c:	add    BYTE PTR [eax],al
  41751e:	pop    es
  41751f:	dec    edx
  417520:	mov    edi,DWORD PTR [ecx-0x52]
  417523:	cmp    esp,DWORD PTR [edi+0x79]
  417526:	lock (bad) 
  417528:	xchg   DWORD PTR cs:[esp+ebp*1+0x1a],esi
  41752d:	xchg   DWORD PTR [esp+eiz*2+0x1a],esi
  417531:	ins    BYTE PTR es:[edi],dx
  417532:	xchg   BYTE PTR [ebx],dl
  417534:	jmp    0xcf8d:0x39c6be03
  41753b:	stos   BYTE PTR es:[edi],al
  41753c:	aad    0x4f
  41753e:	iret   
  41753f:	leave  
  417540:	or     BYTE PTR [edi+esi*1],al
  417543:	mov    ch,0x43
  417545:	jns    0x417572
  417547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417548:	xchg   ebx,eax
  417549:	imul   eax,DWORD PTR [edx+0x2d],0xffffffea
  41754d:	add    ebp,DWORD PTR [esi+0x6f8549f6]
  417553:	xor    eax,0x40ebd4ba
  417558:	xchg   ebp,eax
  417559:	or     ebx,DWORD PTR [edi-0x7d86e37c]
  41755f:	lods   al,BYTE PTR ds:[esi]
  417560:	adc    al,BYTE PTR [ebp+0xc7d327a]
  417566:	jb     0x41752e
  417568:	adc    eax,0x12c0c8d
  41756d:	add    DWORD PTR [esi+ebx*1-0x3b5416ff],edx
  417574:	aam    0xd1
  417576:	je     0x417599
  417578:	add    ecx,ebp
  41757a:	mov    bl,0x3e
  41757c:	cld    
  41757d:	out    0xc0,al
  41757f:	(bad)  
  417581:	into   
  417582:	add    BYTE PTR [eax],al
  417584:	mov    edi,0x20e8fcb2
  417589:	lock ret 0xaa24
  41758d:	xor    al,0xe8
  41758f:	and    esi,DWORD PTR [edx+0x3d0ae93e]
  417595:	xor    al,0x1
  417597:	jb     0x41751d
  417599:	mov    ch,0xfb
  41759b:	sahf   
  41759c:	sbb    DWORD PTR [edx],edi
  41759e:	ret    
  41759f:	sub    al,0x86
  4175a1:	xor    ebp,eax
  4175a3:	xlat   BYTE PTR ds:[ebx]
  4175a4:	out    0x57,al
  4175a6:	mov    ebx,0xfc3434f3
  4175ab:	hlt    
  4175ac:	push   esp
  4175ad:	in     eax,0x52
  4175af:	jbe    0x417582
  4175b1:	aaa    
  4175b2:	jmp    0xfc82dac6
  4175b7:	push   0x4c
  4175b9:	aas    
  4175ba:	jne    0x4175ae
  4175bc:	mov    ebx,0x4cbf08db
  4175c1:	in     al,0x1b
  4175c3:	jmp    0x6a4cc2fc
  4175c8:	sub    al,0x41
  4175ca:	jbe    0x4175b3
  4175cc:	div    dl
  4175ce:	repz call 0x8ccaaae7
  4175d4:	sbb    ecx,DWORD PTR [edi+ebx*8-0x37]
  4175d8:	xor    al,0x34
  4175da:	cld    
  4175db:	xchg   esp,eax
  4175dc:	in     al,dx
  4175dd:	dec    ebx
  4175de:	loop   0x41762a
  4175e0:	inc    DWORD PTR [eax-0x79]
  4175e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175e4:	sti    
  4175e5:	inc    DWORD PTR [ecx]
  4175e7:	add    BYTE PTR [eax],al
  4175e9:	add    BYTE PTR [ecx-0x42],ch
  4175ec:	mov    bl,0xf9
  4175ee:	imul   eax,edi,0x32617d80
  4175f4:	push   cs
  4175f5:	test   BYTE PTR [ecx],bl
  4175f7:	mov    edx,0x4559fffd
  4175fc:	fdiv   st(7),st
  4175fe:	jecxz  0x4175ce
  417600:	jmp    DWORD PTR [ecx+0x45]
  417604:	add    al,0xe8
  417606:	pop    eax
  417607:	sar    ebp,1
  417609:	jmp    DWORD PTR [ebx-0x216af208]
  41760f:	ror    BYTE PTR [edi+0x4fc6e9f9],1
  417615:	mov    ebx,edx
  417617:	mov    dl,0xed
  417619:	and    BYTE PTR [ebp+0x22ff083d],bl
  41761f:	sti    
  417620:	repnz inc ebp
  417622:	add    dh,BYTE PTR ds:0x67aa4588
  417628:	xchg   DWORD PTR [ebp-0x3e],eax
  41762b:	addr16 std 
  41762d:	jne    0x417609
  41762f:	std    
  417630:	aas    
  417631:	cld    
  417632:	(bad)  
  417633:	xor    al,BYTE PTR [ecx]
  417635:	add    dl,ah
  417637:	xor    eax,0x24b615fe
  41763c:	inc    ecx
  41763d:	add    BYTE PTR [ebx-0x8],dl
  417640:	je     0x41764f
  417642:	dec    ebp
  417643:	lock std 
  417645:	jmp    0x417670
  417647:	(bad)  
  417648:	pavgb  mm2,QWORD PTR [ebx+0xeafc72]
  41764f:	add    cl,bh
  417651:	stos   BYTE PTR es:[edi],al
  417652:	inc    eax
  417653:	call   0x6735eb6f
  417658:	adc    eax,0xa0ebe675
  41765d:	mov    cl,0x60
  41765f:	clc    
  417660:	sahf   
  417661:	add    ecx,eax
  417663:	data16 aaa 
  417665:	aam    0xc1
  417667:	cmc    
  417668:	lods   eax,DWORD PTR ds:[esi]
  417669:	xchg   edi,eax
  41766a:	adc    BYTE PTR [eax+0x7ea3ffa],cl
  417670:	mov    edx,0x60506c97
  417675:	mov    edi,0x48f2c607
  41767a:	add    al,ch
  41767c:	adc    eax,0x4000538
  417681:	test   BYTE PTR [eax+eax*8+0x30],bh
  417685:	rol    BYTE PTR [ecx+ecx*4+0x76],0x93
  41768a:	inc    edx
  41768b:	adc    BYTE PTR [edi],dh
  41768d:	and    BYTE PTR [eax+0x386fb6ec],cl
  417693:	jmp    DWORD PTR [eax]
  417695:	dec    esp
  417696:	iret   
  417697:	mov    BYTE PTR [edx+0x53],bh
  41769a:	into   
  41769b:	push   esp
  41769c:	mov    fs:0x4b37043a,eax
  4176a2:	das    
  4176a3:	mov    DWORD PTR [ebx+0x49],0x5af69403
  4176aa:	outs   dx,BYTE PTR ds:[esi]
  4176ab:	push   esi
  4176ac:	pop    ebp
  4176ad:	dec    esi
  4176ae:	mov    DWORD PTR [ebx-0x2d],eax
  4176b1:	sbb    ecx,DWORD PTR [eax-0x51ffff07]
  4176b7:	sbb    BYTE PTR [ecx-0x18],ch
  4176ba:	movq   mm0,QWORD PTR [eax]
  4176bd:	add    BYTE PTR [ebx+0x50cf10b],bh
  4176c3:	or     ebp,DWORD PTR [ebp-0x5a]
  4176c6:	ss dec ebx
  4176c8:	add    BYTE PTR [eax+0x73ffe23a],al
  4176ce:	dec    ebx
  4176cf:	ret    0x5676
  4176d2:	sbb    eax,0x9c43894c
  4176d7:	fwait
  4176d8:	push   0x4b3b07
  4176dd:	test   BYTE PTR [edi+0x34],dh
  4176e0:	popf   
  4176e1:	imul   ebx,DWORD PTR [esi-0x643790a3],0xffffffa9
  4176e8:	sub    DWORD PTR [eax],esp
  4176ea:	aaa    
  4176eb:	xor    al,0xb
  4176ed:	add    edi,DWORD PTR [esi+0x47692963]
  4176f3:	sub    DWORD PTR [eax],ebp
  4176f5:	mov    dh,BYTE PTR [eax-0x4d]
  4176f8:	or     BYTE PTR [ebx],al
  4176fa:	pop    edx
  4176fb:	xor    al,0xea
  4176fd:	inc    esp
  4176fe:	jo     0x417724
  417700:	out    dx,eax
  417701:	push   edx
  417702:	mov    BYTE PTR [edx+esi*8+0x42],cl
  417706:	push   ebp
  417707:	sub    al,0xdf
  417709:	inc    ecx
  41770a:	out    dx,eax
  41770b:	jne    0x417732
  41770d:	ins    DWORD PTR es:[edi],dx
  41770e:	(bad)  
  41770f:	inc    ebx
  417711:	add    al,0x37
  417713:	xor    al,0xeb
  417715:	jl     0x4176d2
  417717:	xor    ebp,edx
  417719:	add    eax,DWORD PTR [eax]
  41771b:	add    BYTE PTR [ebp-0x43fcbfcc],cl
  417721:	neg    BYTE PTR [esi-0x6dc7402c]
  417727:	mov    dh,0x1e
  417729:	xor    al,0xea
  41772b:	jg     0x417724
  41772d:	(bad)  
  41772e:	jae    0x4176ba
  417730:	je     0x41776b
  417732:	jb     0x4176b4
  417734:	and    al,0x70
  417736:	jl     0x4177ad
  417738:	loop   0x4176f1
  41773a:	stos   BYTE PTR es:[edi],al
  41773b:	lock sub dh,dh
  41773e:	push   0xea33d276
  417743:	add    ecx,DWORD PTR [ecx+0x66]
  417746:	push   ecx
  417747:	cli    
  417748:	ret    
  417749:	cmp    al,0x53
  41774b:	xchg   DWORD PTR [esp+eax*2-0x46],esi
  41774f:	xor    BYTE PTR [edx-0x4b79651c],dh
  417755:	outs   dx,DWORD PTR ds:[esi]
  417756:	cmp    al,0x75
  417758:	mov    ds:0xa06000e3,al
  41775d:	dec    esp
  41775e:	cld    
  41775f:	aam    0xa4
  417761:	and    BYTE PTR [ecx-0x17],al
  417764:	or     DWORD PTR [ebp+esi*2-0x19],esi
  417768:	inc    edx
  417769:	icebp  
  41776a:	repz mov dl,0xf
  41776d:	add    ecx,DWORD PTR [eax+0xa4ae494]
  417773:	push   0x61
  417775:	xor    bh,bh
  417777:	je     0x4177a6
  417779:	stos   DWORD PTR es:[edi],eax
  41777a:	jae    0x417751
  41777c:	pop    ds
  41777d:	inc    edi
  41777e:	jbe    0x41777a
  417780:	add    BYTE PTR [eax],al
  417782:	fbld   TBYTE PTR [ecx]
  417784:	mov    BYTE PTR [edi],ch
  417786:	sub    ecx,edx
  417788:	add    al,0x6a
  41778a:	hlt    
  41778b:	aaa    
  41778c:	push   ecx
  41778d:	fs jns 0x4177e7
  417790:	push   ecx
  417791:	shl    DWORD PTR [ebx],0x96
  417794:	cld    
  417795:	(bad)  
  417796:	mov    ds:0x31bef0c7,eax
  41779b:	dec    esp
  41779c:	push   ss
  41779d:	sub    DWORD PTR [ebx],esi
  41779f:	std    
  4177a0:	repz xor eax,0x9e7eb452
  4177a6:	out    dx,al
  4177a7:	jno    0x4177ef
  4177a9:	mov    ds:0xc2862935,al
  4177ae:	xor    eax,0x4b030134
  4177b3:	scas   eax,DWORD PTR es:[edi]
  4177b4:	inc    esi
  4177b5:	cdq    
  4177b6:	fidivr WORD PTR [ebx]
  4177b8:	dec    esp
  4177b9:	jle    0x4177ec
  4177bb:	sbb    al,0x13
  4177bd:	sub    DWORD PTR [ebx],esi
  4177bf:	mov    ch,0xc5
  4177c1:	fstp   st(6)
  4177c3:	xor    eax,0xf7bdcf59
  4177c8:	shr    dh,1
  4177ca:	xchg   edx,eax
  4177cb:	mul    esp
  4177cd:	mov    eax,ds:0xe9a9b033
  4177d2:	xor    al,0x34
  4177d4:	dec    ecx
  4177d5:	add    dl,ch
  4177d7:	cs ret 
  4177d9:	inc    ebp
  4177da:	imul   ebx,DWORD PTR [ebx+eiz*8-0x4],0x8d01378e
  4177e2:	(bad)  
  4177e4:	call   0x324178c3
  4177e9:	xor    BYTE PTR [ecx],al
  4177eb:	mov    ebx,DWORD PTR [esi]
  4177ed:	scas   al,BYTE PTR es:[edi]
  4177ee:	jo     0x4177e0
  4177f0:	or     eax,0x3b74fdc1
  4177f5:	shr    BYTE PTR [edi-0x14],0xc4
  4177f9:	pop    ebp
  4177fa:	push   esi
  4177fb:	push   ebx
  4177fc:	inc    esi
  4177fd:	push   ss
  4177fe:	sti    
  4177ff:	jmp    DWORD PTR [ecx-0x4d]
  417802:	stc    
  417803:	and    DWORD PTR [ecx+0x35],0x70
  417807:	push   esi
  417808:	ret    
  417809:	ins    BYTE PTR es:[edi],dx
  41780a:	add    al,0x50
  41780c:	shr    DWORD PTR [esp+ebp*8+0x50],cl
  417810:	jbe    0x4177ca
  417812:	sbb    al,BYTE PTR [eax]
  417814:	push   ds
  417815:	mov    edx,0xc8a5f06f
  41781a:	cmp    DWORD PTR [ebp-0x12],0xffffffd7
  41781e:	test   eax,0x82370e1e
  417823:	jmp    ecx
  417825:	cmp    al,0x8
  417827:	mov    esi,DWORD PTR [ebx+0x38]
  41782a:	mov    BYTE PTR [ebp-0x57],0x6a
  41782e:	jecxz  0x4177dc
  417830:	push   cs
  417831:	aaa    
  417832:	add    DWORD PTR [edi-0x4a],edx
  417835:	outs   dx,DWORD PTR ds:[esi]
  417836:	add    al,0x0
  417838:	fidivr WORD PTR [ecx+0x6565ec3f]
  41783e:	add    al,0x83
  417840:	xchg   esi,eax
  417841:	xor    DWORD PTR [ecx+0x6a],edx
  417844:	and    al,0x5f
  417846:	push   ecx
  417847:	call   0x3f3d54
  41784c:	add    BYTE PTR [eax],al
  41784e:	inc    ebp
  41784f:	enter  0xff81,0x37
  417853:	dec    esp
  417854:	stc    
  417855:	pop    es
  417856:	mov    al,0x5f
  417858:	pusha  
  417859:	call   0x41c8da
  41785e:	lods   al,BYTE PTR ds:[esi]
  41785f:	jg     0x4178c1
  417861:	call   0x41db73
  417866:	mov    ah,0x9
  417868:	jo     0x417877
  41786a:	mov    bl,0xa2
  41786c:	outs   dx,DWORD PTR ds:[esi]
  41786d:	std    
  41786e:	or     ch,0x6f
  417871:	inc    DWORD PTR [ecx+ecx*2]
  417874:	dec    edx
  417875:	inc    ebx
  417876:	ins    BYTE PTR es:[edi],dx
  417877:	dec    esp
  417878:	jle    0x4178bd
  41787a:	ins    BYTE PTR es:[edi],dx
  41787b:	xchg   ecx,eax
  41787c:	rcr    BYTE PTR [eax+0x6e],cl
  41787f:	push   cs
  417880:	or     DWORD PTR [eax],eax
  417882:	rcl    ebp,1
  417884:	leave  
  417885:	loop   0x417860
  417887:	ror    ecx,cl
  417889:	sar    DWORD PTR [edi+eax*1+0x7cc28b68],1
  417890:	jge    0x4178d5
  417892:	arpl   WORD PTR [edx+edi*1+0x19],si
  417896:	aaa    
  417897:	dec    ebx
  417898:	jnp    0x41788a
  41789a:	mov    ah,0x71
  41789c:	outs   dx,DWORD PTR ds:[esi]
  41789d:	or     eax,0xfd7035bb
  4178a2:	sbb    BYTE PTR [edx],bl
  4178a4:	pop    ebp
  4178a5:	sar    DWORD PTR [eax],1
  4178a7:	dec    ebx
  4178a8:	add    ch,bh
  4178aa:	sbb    BYTE PTR [edi-0x196a622],0x5c
  4178b1:	jo     0x4178b3
  4178b3:	add    dl,bh
  4178b5:	mov    ds:0x4cef816f,al
  4178ba:	stc    
  4178bb:	pop    es
  4178bc:	and    DWORD PTR [ebx+0x4b371bdd],0xc3b40d5b
  4178c6:	outs   dx,BYTE PTR ds:[esi]
  4178c7:	jae    0x417902
  4178c9:	xchg   ecx,eax
  4178ca:	leave  
  4178cb:	hlt    
  4178cc:	ins    BYTE PTR es:[edi],dx
  4178cd:	xor    al,0x4f
  4178cf:	pop    es
  4178d0:	stc    
  4178d1:	out    dx,eax
  4178d2:	pop    esi
  4178d3:	add    ecx,edi
  4178d5:	ds cmc 
  4178d7:	add    esi,DWORD PTR [edi]
  4178d9:	mov    ah,0xcd
  4178db:	outs   dx,BYTE PTR ds:[esi]
  4178dc:	test   al,0xc0
  4178de:	sbb    DWORD PTR gs:[ecx+eax*2],0xffffffa0
  4178e3:	test   edx,0x925fbd39
  4178e9:	mov    edi,0xe58bdd32
  4178ee:	adc    DWORD PTR [eax],edi
  4178f0:	jl     0x41792b
  4178f2:	sbb    ecx,DWORD PTR [eax+0x437d2977]
  4178f8:	pop    esi
  4178f9:	mov    al,0xb5
  4178fb:	jle    0x417958
  4178fd:	mov    ch,0xe
  4178ff:	imul   esp,eax,0x47
  417902:	pop    edx
  417903:	add    al,0x37
  417905:	xor    al,0x65
  417907:	pop    es
  417908:	sbb    esp,esp
  41790a:	add    DWORD PTR ds:0x70ea3435,0xc3f57424
  417914:	cmp    BYTE PTR [edx-0x4e],al
  417917:	or     eax,0xf3f70000
  41791c:	pop    esi
  41791d:	mov    WORD PTR [di-0x3d],?
  417921:	daa    
  417922:	or     ebx,DWORD PTR [edi]
  417924:	sub    al,BYTE PTR [edi+esi*4]
  417927:	test   cl,0x4a
  41792a:	jbe    0x417960
  41792c:	jmp    0xfa14:0x62e140f6
  417933:	hlt    
  417934:	jmp    0xb2607511
  417939:	push   ss
  41793a:	ja     0x417970
  41793c:	push   0x2f
  41793e:	xlat   BYTE PTR ds:[ebx]
  41793f:	jno    0x417968
  417941:	add    al,0x37
  417943:	mov    edi,0x38a55bdf
  417948:	add    DWORD PTR [esi+0x46],esi
  41794b:	mov    al,0xc1
  41794d:	cmc    
  41794e:	and    eax,0x6d4d066f
  417953:	repz add BYTE PTR [ecx],dl
  417956:	in     al,0xf9
  417958:	add    BYTE PTR [edi],ch
  41795a:	cmp    BYTE PTR [ebx+eax*8-0x56],dl
  41795e:	xor    al,0x39
  417960:	push   ebx
  417961:	inc    esi
  417962:	dec    eax
  417963:	pop    eax
  417964:	pop    gs
  417966:	xor    al,0xd7
  417968:	xchg   BYTE PTR [ebp-0x207fcfa8],ch
  41796e:	pop    es
  41796f:	mov    bl,0x63
  417971:	in     eax,dx
  417972:	xor    al,0xac
  417974:	inc    ebx
  417975:	icebp  
  417976:	cli    
  417977:	out    dx,eax
  417978:	and    al,0xe1
  41797a:	in     al,dx
  41797b:	icebp  
  41797c:	or     DWORD PTR [edx+0x0],esp
  41797f:	add    ch,bh
  417981:	jne    0x41798c
  417983:	jmp    0x692f2511
  417988:	xlat   BYTE PTR ds:[ebx]
  417989:	mov    ebx,0xb434e901
  41798e:	ds or  ebp,edi
  417991:	repnz add cl,ch
  417994:	pop    edi
  417995:	lds    esi,FWORD PTR [edx]
  417997:	sahf   
  417998:	and    al,0x6f
  41799a:	inc    eax
  41799b:	jmp    0xb157b2af
  4179a0:	inc    edx
  4179a1:	hlt    
  4179a2:	add    BYTE PTR [ecx+0x51],ch
  4179a5:	push   esp
  4179a6:	ret    
  4179a7:	sub    dh,BYTE PTR [ebx]
  4179a9:	xor    al,0x76
  4179ab:	shr    DWORD PTR [esi+eiz*8-0x5],cl
  4179af:	scas   al,BYTE PTR es:[edi]
  4179b0:	xchg   DWORD PTR [eax+0x71241dc1],esi
  4179b6:	push   es
  4179b7:	test   DWORD PTR [esi-0xb],ebp
  4179ba:	add    cl,al
  4179bc:	add    eax,0x31a700f7
  4179c1:	push   esp
  4179c2:	ret    
  4179c3:	add    BYTE PTR ds:0x5956fc30,cl
  4179c9:	push   ds
  4179ca:	fst    QWORD PTR [edx]
  4179cc:	push   ds
  4179cd:	xor    BYTE PTR [eax-0x789ca5bb],cl
  4179d3:	test   DWORD PTR [esi-0x3b],eax
  4179d6:	std    
  4179d7:	(bad)  
  4179d8:	jle    0x417a35
  4179da:	add    BYTE PTR [eax],ah
  4179dc:	sahf   
  4179dd:	xor    ebp,DWORD PTR [ecx-0x1]
  4179e0:	stc    
  4179e1:	xor    al,BYTE PTR [ecx]
  4179e3:	inc    DWORD PTR [eax]
  4179e5:	add    bl,ah
  4179e7:	cmp    edi,DWORD PTR [ebp+0x1338f74]
  4179ed:	mov    ebx,ecx
  4179ef:	(bad)  
  4179f0:	std    
  4179f1:	adc    eax,0x411eb2
  4179f6:	adc    esi,ebx
  4179f8:	je     0x417a0d
  4179fa:	shl    DWORD PTR [esi-0x3bb77781],0xfd
  417a01:	push   0x5e
  417a03:	arpl   bp,di
  417a05:	adc    eax,0x411d56
  417a0a:	int    0xee
  417a0c:	or     al,0x83
  417a0e:	or     ecx,edi
  417a10:	cli    
  417a11:	call   FWORD PTR [ecx+0x2c]
  417a14:	pop    esi
  417a15:	je     0x417a54
  417a17:	mov    dl,0xb8
  417a19:	in     al,0x58
  417a1b:	(bad)  
  417a1c:	std    
  417a1d:	adc    DWORD PTR [ecx],ebx
  417a1f:	pushf  
  417a20:	sar    esi,0xd6
  417a23:	or     edi,edi
  417a25:	xchg   DWORD PTR [eax+0x39],edx
  417a28:	jmp    0x3af4a31
  417a2d:	add    DWORD PTR [ebp-0x26012a53],edx
  417a33:	(bad)  
  417a34:	call   0x174894e
  417a39:	xor    DWORD PTR [eax],0x2c
  417a3c:	add    DWORD PTR [eax-0x7702f8c9],ecx
  417a42:	jb     0x417a99
  417a44:	jge    0x417a4c
  417a46:	lods   al,BYTE PTR ds:[esi]
  417a47:	xchg   BYTE PTR [esi],bh
  417a49:	ret    0x0
  417a4c:	xor    ecx,DWORD PTR [ebp+0x7f]
  417a4f:	sar    BYTE PTR ds:[eax],1
  417a52:	jmp    FWORD PTR [edi-0x4a0375ca]
  417a58:	jns    0x417a9e
  417a5a:	mov    eax,0xf4852a73
  417a5f:	add    BYTE PTR [ebp+0xd],ah
  417a62:	inc    eax
  417a63:	push   0x35
  417a65:	test   dl,bl
  417a67:	push   cs
  417a68:	mov    WORD PTR [edi+0x2f],es
  417a6b:	(bad)  
  417a6c:	mul    BYTE PTR [edx+0x6]
  417a6f:	mov    bh,cl
  417a71:	push   esp
  417a72:	retf   0x72e7
  417a75:	dec    esp
  417a76:	add    BYTE PTR [eax],al
  417a78:	in     eax,0x7b
  417a7a:	sar    ah,1
  417a7c:	and    dl,BYTE PTR [ecx+0x16]
  417a7f:	inc    eax
  417a80:	aaa    
  417a81:	pop    edx
  417a82:	cmp    eax,0x7e256f81
  417a87:	push   es
  417a88:	xor    al,bl
  417a8a:	inc    esp
  417a8b:	shl    DWORD PTR [esi+esi*4+0x45cb0003],0x2d
  417a93:	jle    0x417ad0
  417a95:	push   esi
  417a96:	xchg   esp,eax
  417a97:	shl    BYTE PTR [ebp+ecx*2+0x19],0xac
  417a9c:	and    cl,BYTE PTR ds:0x47798705
  417aa2:	mov    eax,eax
  417aa4:	mov    ds:0x204fd42c,eax
  417aa9:	imul   edx,DWORD PTR ss:[ebx],0xffffffef
  417aad:	pusha  
  417aae:	sar    bh,0x0
  417ab1:	add    BYTE PTR [ebx-0x41fa0675],bh
  417ab7:	add    eax,0x3436b001
  417abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417abd:	outs   dx,BYTE PTR ds:[esi]
  417abe:	xor    DWORD PTR [eax],0x1fa7189b
  417ac4:	sub    al,BYTE PTR [esi+esi*4]
  417ac7:	into   
  417ac8:	in     eax,0x3
  417aca:	and    eax,0x317aa774
  417acf:	mov    cl,0x82
  417ad1:	outs   dx,BYTE PTR ds:[esi]
  417ad2:	dec    ebx
  417ad3:	and    BYTE PTR [eax],al
  417ad5:	add    ah,BYTE PTR [edi+0x35]
  417ad8:	aad    0x3f
  417ada:	and    al,0xf4
  417adc:	jmp    0xf5767c4f
  417ae1:	imul   eax,DWORD PTR [esp+esi*8-0x17],0xffffff82
  417ae6:	cmp    DWORD PTR ds:0xaf34c55f,esi
  417aec:	sub    dh,bh
  417aee:	das    
  417aef:	in     al,0x3a
  417af1:	sbb    bh,al
  417af3:	pop    ds
  417af4:	stos   BYTE PTR es:[edi],al
  417af5:	add    esi,DWORD PTR [esi+0x7603e5ce]
  417afb:	fild   QWORD PTR [esi+0x5f]
  417afe:	clc    
  417aff:	inc    edi
  417b00:	mov    ds:0x65343704,al
  417b05:	enter  0xe46c,0x5c
  417b09:	mov    BYTE PTR [edi+0x76e0336],ch
  417b0f:	int3   
  417b10:	in     eax,0x23
  417b12:	aaa    
  417b13:	xor    al,0x82
  417b15:	outs   dx,BYTE PTR ds:[esi]
  417b16:	add    BYTE PTR [eax],al
  417b18:	dec    edx
  417b19:	xor    al,0xea
  417b1b:	outs   dx,BYTE PTR ds:[esi]
  417b1c:	les    ebp,FWORD PTR [ebx]
  417b1e:	stos   DWORD PTR es:[edi],eax
  417b1f:	(bad)  
  417b20:	cmp    al,0xc0
  417b22:	call   0xfd76b22a
  417b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b28:	inc    esp
  417b29:	hlt    
  417b2a:	jmp    0xf50072b5
  417b2f:	js     0x417ae5
  417b31:	pop    edi
  417b32:	mov    esp,0x14c126d
  417b37:	aad    0x34
  417b39:	xor    al,0x1
  417b3b:	ret    0x235
  417b3e:	shl    DWORD PTR [eax-0x11fecf8b],0xaa
  417b45:	jae    0x417b90
  417b47:	sbb    eax,0xea74eced
  417b4c:	daa    
  417b4d:	je     0x417b0f
  417b4f:	adc    eax,DWORD PTR [edx-0x24]
  417b52:	mov    edi,0xbfdc3513
  417b57:	and    DWORD PTR [ebx+0x636a07c0],ecx
  417b5d:	and    DWORD PTR [ebp-0x16],esi
  417b60:	push   es
  417b61:	je     0x417b23
  417b63:	cdq    
  417b64:	xor    eax,0xf7e8b173
  417b69:	es mov bl,0xa9
  417b6c:	pushf  
  417b6d:	in     al,dx
  417b6e:	je     0x417b63
  417b70:	fadd   st(0),st
  417b72:	(bad)  
  417b73:	stc    
  417b74:	hlt    
  417b75:	jb     0x417bde
  417b77:	aad    0x7c
  417b79:	jae    0x417be2
  417b7b:	fld    DWORD PTR [eax]
  417b7d:	add    BYTE PTR [ebx+esi*2+0xc],ch
  417b81:	pop    esi
  417b82:	xor    ebp,esp
  417b84:	dec    eax
  417b85:	xchg   ebp,eax
  417b86:	jo     0x417b3b
  417b88:	jmp    0x3074dc89
  417b8d:	sub    esi,esi
  417b8f:	leave  
  417b90:	sbb    al,0xa1
  417b92:	test   ecx,0xe0f7a110
  417b98:	xchg   DWORD PTR ds:0x1c3ab64,eax
  417b9e:	cld    
  417b9f:	ss cld 
  417ba1:	out    0x64,al
  417ba3:	retf   0xde00
  417ba6:	sub    DWORD PTR [edx+ecx*4],edi
  417ba9:	sub    al,0xa7
  417bab:	xor    DWORD PTR [esi],edx
  417bad:	icebp  
  417bae:	dec    edx
  417baf:	je     0x417bb2
  417bb1:	add    BYTE PTR [ebp+0x5b8d0d7b],cl
  417bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bb8:	push   ecx
  417bb9:	dec    DWORD PTR [ebx+0x30]
  417bbc:	std    
  417bbd:	ror    DWORD PTR ss:[edx-0x1f],1
  417bc1:	adc    eax,0xd8f6384e
  417bc6:	xor    eax,0x9cc94178
  417bcb:	cmp    eax,DWORD PTR [ecx]
  417bcd:	dec    DWORD PTR [edx+0x5c]
  417bd0:	add    eax,0xfe3bdeff
  417bd5:	xor    BYTE PTR [ecx+0x4a],dl
  417bd8:	lds    edx,FWORD PTR ds:0xd8f6381e
  417bde:	in     eax,0x77
  417be0:	inc    ecx
  417be1:	ret    0x0
  417be4:	retf   0x5037
  417be7:	mov    eax,DWORD PTR [edx]
  417be9:	mov    ah,0xec
  417beb:	xor    ch,ch
  417bed:	or     DWORD PTR [ebp-0x75],edx
  417bf0:	jmp    FWORD PTR [ebx-0x5e901727]
  417bf6:	(bad)  
  417bf7:	call   FWORD PTR [edx]
  417bf9:	ja     0x417c70
  417bfb:	xor    eax,0xe85e6474
  417c00:	frstor [eax+0x770afffe]
  417c06:	jne    0x417c31
  417c08:	popa   
  417c09:	call   0x3587ff0f
  417c0e:	jo     0x417c15
  417c10:	mov    ah,0x47
  417c12:	pop    ecx
  417c13:	jmp    0x417c75
  417c15:	les    eax,FWORD PTR fs:[ebx-0x6af1b7ca]
  417c1c:	pop    ds
  417c1d:	mov    dl,0x3c
  417c1f:	dec    ebp
  417c21:	xchg   esi,eax
  417c22:	sbb    eax,0x339efd50
  417c27:	jmp    FWORD PTR [ebx]
  417c29:	fisttp WORD PTR [edi]
  417c2b:	inc    eax
  417c2c:	aaa    
  417c2d:	sbb    eax,0x37abc081
  417c32:	jl     0x417c6f
  417c34:	aaa    
  417c35:	adc    eax,eax
  417c37:	call   DWORD PTR [ecx]
  417c39:	retf   0x31ab
  417c3c:	push   eax
  417c3d:	sbb    eax,0xe17a8700
  417c42:	sub    eax,ecx
  417c44:	sub    DWORD PTR [ebx],0x58
  417c47:	mov    DWORD PTR [eax],eax
  417c49:	add    cl,dh
  417c4b:	shl    DWORD PTR [edi-0x3],1
  417c4e:	(bad)  
  417c4f:	leave  
  417c50:	adc    ecx,DWORD PTR [bx-0x3fd9]
  417c55:	(bad)  
  417c56:	(bad)  
  417c58:	sub    eax,ecx
  417c5a:	dec    edx
  417c5b:	out    dx,eax
  417c5c:	pop    edx
  417c5d:	or     al,BYTE PTR [edi-0x36d1a4e5]
  417c63:	push   edi
  417c64:	push   ebp
  417c65:	adc    BYTE PTR [edx+0x32],al
  417c68:	addr16 jae 0x417caa
  417c6b:	mov    al,ds:0x9607cfc2
  417c70:	ret    0xd0b
  417c73:	sub    eax,0x1d342158
  417c78:	add    BYTE PTR [ebx-0x169f1789],al
  417c7e:	cmp    BYTE PTR [esi-0x16c81c16],bl
  417c84:	dec    esp
  417c85:	std    
  417c86:	add    al,BYTE PTR [ecx+0x68]
  417c89:	adc    ebx,DWORD PTR [edi+0x26ffc027]
  417c8f:	pop    ebp
  417c90:	enter  0xfc5d,0x53
  417c94:	inc    ebx
  417c95:	or     BYTE PTR [edi],dh
  417c97:	sar    DWORD PTR [edx-0x10],cl
  417c9a:	add    al,0x5d
  417c9c:	test   DWORD PTR [esi+0x3e],edi
  417c9f:	sbb    al,0xcf
  417ca1:	or     al,0xaa
  417ca3:	pop    esp
  417ca4:	jp     0x417d1e
  417ca6:	cmp    BYTE PTR [ebx],dh
  417ca8:	bound  esi,QWORD PTR [si]
  417cab:	mov    edi,0x75a
  417cb0:	pop    ds
  417cb1:	(bad)  
  417cb3:	push   0x22
  417cb5:	mov    ecx,0x1c6eefa9
  417cba:	mov    ds:0x66321268,eax
  417cbf:	inc    ebx
  417cc0:	xor    DWORD PTR [ebx-0x1d],0xffffffb2
  417cc4:	ss mov ch,0xb1
  417cc7:	add    eax,0x14103784
  417ccc:	(bad)  
  417ccd:	sbb    eax,0xb5f036ec
  417cd2:	xchg   ecx,eax
  417cd3:	adc    dh,BYTE PTR [edx]
  417cd5:	(bad)  
  417cd6:	test   al,0x78
  417cd8:	sbb    BYTE PTR [ecx],dh
  417cda:	arpl   WORD PTR [bp+di],si
  417cdd:	test   BYTE PTR [edi],dl
  417cdf:	imul   eax,DWORD PTR [ecx],0x31
  417ce2:	fisttp QWORD PTR [ebx+0x24]
  417ce5:	je     0x417cd1
  417ce7:	xor    bh,0xa7
  417cea:	add    al,BYTE PTR [ecx+esi*1+0x3af0e93b]
  417cf1:	sahf   
  417cf2:	(bad)  
  417cf3:	push   0x69
  417cf5:	xor    ebp,esi
  417cf7:	mov    ds:0x80ea7444,eax
  417cfc:	ja     0x417ca5
  417cfe:	out    0xb3,al
  417d00:	mov    BYTE PTR [esi],bl
  417d02:	fsubr  QWORD PTR [edx+0x24]
  417d05:	xor    al,0xd4
  417d07:	ret    
  417d08:	js     0x417cc8
  417d0a:	and    DWORD PTR [ebx+0x7e],ebx
  417d0d:	das    
  417d0e:	sbb    ebp,DWORD PTR [edx+0x2]
  417d11:	xor    ebp,edi
  417d13:	fwait
  417d14:	add    BYTE PTR [eax],al
  417d16:	inc    esp
  417d17:	je     0x417d03
  417d19:	xor    eax,0x46a49177
  417d1e:	in     al,0xbc
  417d20:	or     eax,0xc45b84
  417d25:	jmp    0x8391b15e
  417d2a:	dec    esi
  417d2b:	mov    esi,0x2f9e5f85
  417d30:	cld    
  417d31:	push   ebx
  417d32:	xor    eax,DWORD PTR [ecx+ebp*8-0x3cf41e3]
  417d39:	(bad)  
  417d3a:	fdivr  DWORD PTR [eax]
  417d3c:	xchg   DWORD PTR [ecx],ebp
  417d3e:	adc    esi,DWORD PTR [esp+eax*8-0x4c19313]
  417d45:	mov    dh,0x8e
  417d47:	call   0xa6fc:0x3007648a
  417d4e:	adc    eax,DWORD PTR [ecx+0x24]
  417d51:	jmp    0x1c72698a
  417d56:	cmp    esi,DWORD PTR [ecx+ebp*8]
  417d59:	fistp  WORD PTR [edi+0x2f]
  417d5c:	cld    
  417d5d:	push   0xfffffff0
  417d5f:	and    al,0x1
  417d61:	jo     0x417ceb
  417d63:	sub    BYTE PTR [ebx+0x62],ah
  417d66:	sub    BYTE PTR [eax],0x63
  417d69:	test   al,0x73
  417d6b:	cmp    al,0x63
  417d6d:	jo     0x417d9f
  417d6f:	stos   BYTE PTR es:[edi],al
  417d70:	cld    
  417d71:	pop    esi
  417d72:	push   ds
  417d73:	mov    ebx,0xcd29e145
  417d78:	je     0x417dc8
  417d7a:	add    BYTE PTR [eax],al
  417d7c:	push   cs
  417d7d:	das    
  417d7e:	jmp    0xfc709d68
  417d83:	rep movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  417d86:	ss xor BYTE PTR ss:[ebx+edx*1],dh
  417d8b:	test   eax,0xce416d34
  417d90:	xor    al,0x34
  417d92:	jbe    0x417d5c
  417d94:	fbstp  TBYTE PTR [ecx+edi*8+0x68]
  417d98:	pop    eax
  417d99:	sub    BYTE PTR [ecx],dh
  417d9b:	xchg   esp,eax
  417d9c:	xor    al,0x34
  417d9e:	jae    0x417da0
  417da0:	popa   
  417da1:	jae    0x417de3
  417da3:	clc    
  417da4:	outs   dx,BYTE PTR ds:[esi]
  417da5:	push   ebx
  417da6:	add    DWORD PTR [eax],eax
  417da8:	dec    ecx
  417da9:	icebp  
  417daa:	out    dx,eax
  417dab:	mov    eax,0xfffbea6e
  417db0:	sbb    BYTE PTR [ebx+0x40],0xf4
  417db4:	mov    ebx,fs
  417db6:	shl    BYTE PTR cs:[ebp+0x6b],0xbf
  417dbb:	add    al,0xe
  417dbd:	in     al,0xfb
  417dbf:	jmp    0x7285:0x575102d1
  417dc6:	jmp    0xfede497a
  417dcb:	xor    esp,DWORD PTR [ebp+0xfff5108]
  417dd1:	stos   DWORD PTR es:[edi],eax
  417dd2:	inc    ebp
  417dd3:	and    al,0xe2
  417dd5:	pushf  
  417dd6:	adc    BYTE PTR [ebx+eiz*8-0x3975040d],bl
  417ddd:	mov    eax,0xfffd
  417de2:	rcl    BYTE PTR [edx+0x52],cl
  417de5:	push   ebx
  417de6:	and    DWORD PTR [ebp-0xc1c37f0],ebx
  417dec:	sti    
  417ded:	push   ebp
  417dee:	xor    al,0x48
  417df0:	jmp    0xfede33de
  417df5:	cmp    ebx,DWORD PTR [ebp+0x1f]
  417df8:	or     al,0x57
  417dfa:	adc    eax,0x5a2e9a3
  417dff:	pushf  
  417e00:	dec    BYTE PTR [ebx+0x3303904e]
  417e06:	pop    esi
  417e07:	nop
  417e08:	dec    ecx
  417e09:	xor    eax,DWORD PTR [eax+0x60]
  417e0c:	bnd je 0x417e6d
  417e0f:	adc    DWORD PTR [ecx],esp
  417e11:	pop    edi
  417e12:	inc    esi
  417e13:	lods   eax,DWORD PTR ds:[esi]
  417e14:	std    
  417e15:	dec    DWORD PTR [ecx-0x51]
  417e18:	shl    DWORD PTR [edi+esi*1+0x24],0x7d
  417e1d:	(bad)  
  417e1e:	dec    esp
  417e1f:	or     al,0xde
  417e21:	pop    es
  417e22:	in     al,dx
  417e23:	ret    0x5505
  417e26:	dec    eax
  417e27:	or     BYTE PTR [ebx+edx*1],dh
  417e2a:	neg    DWORD PTR [ecx+edx*8]
  417e2d:	cld    
  417e2e:	and    ah,BYTE PTR ds:0x237400e
  417e34:	adc    ch,bh
  417e36:	inc    edx
  417e37:	sbb    eax,0x9237400e
  417e3c:	dec    ebp
  417e3d:	call   0xfda57f17
  417e42:	imul   eax,DWORD PTR ds:0x99ac,0xfccfee08
  417e4c:	sub    dh,BYTE PTR [ebp+0x2a374011]
  417e52:	inc    eax
  417e53:	pop    esi
  417e54:	nop
  417e55:	jb     0x417e25
  417e57:	rol    BYTE PTR [edx-0x2c7ea65e],0xf8
  417e5e:	into   
  417e5f:	push   ebp
  417e60:	adc    BYTE PTR [edx-0x5e397693],0x47
  417e67:	jmp    0x5546c1dc
  417e6c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417e6e:	sub    edi,ebp
  417e70:	and    ch,BYTE PTR [ecx-0x5fc8bfee]
  417e76:	inc    ebp
  417e77:	jle    0x417eaa
  417e79:	sbb    cl,BYTE PTR [eax+0x29]
  417e7c:	lahf   
  417e7d:	jno    0x417eb5
  417e7f:	je     0x417edc
  417e81:	jle    0x417e95
  417e83:	add    BYTE PTR [ecx],ch
  417e85:	(bad)  
  417e87:	cmp    al,BYTE PTR [esi+esi*1+0x5]
  417e8b:	add    BYTE PTR [edx],cl
  417e8d:	and    ebx,eax
  417e8f:	das    
  417e90:	add    bl,BYTE PTR ds:0x33fa8b00
  417e96:	ds aam 0xbf
  417e99:	js     0x417e8d
  417e9b:	fldenv [ecx+0x16]
  417e9e:	loope  0x417ea4
  417ea0:	aaa    
  417ea1:	xor    al,0x65
  417ea3:	inc    esp
  417ea4:	les    edx,FWORD PTR [edx-0x4]
  417ea7:	shl    BYTE PTR [esp+esi*1+0x76],0x0
  417eac:	add    BYTE PTR [eax],al
  417eae:	or     BYTE PTR [ecx+0x12],bh
  417eb1:	icebp  
  417eb2:	sbb    al,0xb9
  417eb4:	jmp    0x8ac6:0xe8e4e5e6
  417ebb:	mov    DWORD PTR [ecx+0x42343b41],esi
  417ec1:	icebp  
  417ec2:	push   ebx
  417ec3:	xor    al,0xea
  417ec5:	data16 and al,0xdc
  417ec8:	fadd   st(3),st
  417eca:	or     BYTE PTR [edx+ebp*4+0x5a],ah
  417ece:	or     eax,0xe4c3d2e
  417ed3:	and    al,0x15
  417ed5:	jnp    0x417eba
  417ed7:	sub    DWORD PTR [edi+0x44],0xffffffdf
  417edb:	rcr    DWORD PTR [ebp+0x2cbbe266],1
  417ee1:	push   0x6ee277ae
  417ee6:	out    dx,eax
  417ee7:	dec    ecx
  417ee8:	stos   BYTE PTR es:[edi],al
  417ee9:	js     0x417f4f
  417eeb:	xor    bh,al
  417eed:	inc    ecx
  417eee:	addr16 sub eax,0x344efbfd
  417ef4:	add    dl,BYTE PTR [esp+esi*1+0x2466ea34]
  417efb:	inc    eax
  417efc:	pop    ebx
  417efd:	xor    al,0xa2
  417eff:	inc    edi
  417f00:	jle    0x417f12
  417f02:	div    DWORD PTR [ebx]
  417f04:	and    DWORD PTR [ecx+0x3f],eax
  417f07:	xor    al,0x9d
  417f09:	jp     0x417ea6
  417f0b:	mov    cl,0x4d
  417f0d:	pop    ss
  417f0e:	out    0x85,al
  417f10:	add    DWORD PTR [esi+0xbfd0000],ebx
  417f16:	mov    BYTE PTR [eax],bh
  417f18:	in     eax,dx
  417f19:	sub    eax,ebp
  417f1b:	mov    dh,0x9c
  417f1d:	xor    al,0x11
  417f1f:	jmp    0xd2431958
  417f24:	in     al,dx
  417f25:	ds dec ebx
  417f27:	sub    ah,BYTE PTR [eax+ecx*4-0x4]
  417f2b:	mov    edi,0xd4fd40d1
  417f30:	je     0x417f5f
  417f32:	test   DWORD PTR [ecx],ebp
  417f34:	push   edx
  417f35:	aaa    
  417f36:	add    cl,dh
  417f38:	dec    esi
  417f39:	or     al,0xe8
  417f3b:	push   ss
  417f3c:	daa    
  417f3d:	imul   edi,esp,0xfffffff4
  417f40:	xor    al,0x46
  417f42:	inc    ecx
  417f43:	jmp    0xe965e299
  417f48:	xor    al,0xa1
  417f4a:	cs (bad) 
  417f4c:	sbb    BYTE PTR ds:0x8467248e,dh
  417f52:	mov    BYTE PTR [edi+edi*8],ch
  417f55:	call   0xe9fc:0x2d07c0ff
  417f5c:	imul   esi,esp,0x71510175
  417f62:	aad    0xeb
  417f64:	enter  0x3a31,0x24
  417f68:	jg     0x417f0b
  417f6a:	adc    ch,BYTE PTR [esi+edi*2-0x51]
  417f6e:	scas   al,BYTE PTR es:[edi]
  417f6f:	cmp    DWORD PTR [edi+ecx*4],esi
  417f72:	pop    ebx
  417f73:	adc    bh,ah
  417f75:	icebp  
  417f76:	or     cl,ch
  417f78:	add    BYTE PTR [eax],al
  417f7a:	data16 hlt 
  417f7c:	out    0x5c,eax
  417f7e:	adc    ah,BYTE PTR [ecx-0x23cfa123]
  417f84:	adc    eax,0xf21b34a9
  417f89:	(bad)  
  417f8a:	hlt    
  417f8b:	sbb    esi,esp
  417f8d:	add    ch,dh
  417f8f:	xchg   esi,eax
  417f90:	(bad)  
  417f91:	push   eax
  417f92:	inc    ecx
  417f93:	and    al,0x20
  417f95:	or     BYTE PTR [eax+esi*1-0x2],dh
  417f99:	je     0x417fd5
  417f9b:	inc    eax
  417f9c:	(bad)  
  417f9d:	je     0x418019
  417f9f:	cmp    dh,bh
  417fa1:	xor    DWORD PTR [ecx+0x3d],eax
  417fa4:	in     eax,0x15
  417fa6:	mov    ?,WORD PTR [eax]
  417fa8:	xor    cl,cl
  417faa:	fstp   QWORD PTR [edi+0x77eb0ffe]
  417fb0:	mov    edi,0x88fd4e0c
  417fb5:	in     al,dx
  417fb6:	int    0x8b
  417fb8:	or     eax,0x193bb83
  417fbd:	push   ebx
  417fbe:	imul   edx,DWORD PTR [ecx+0x52a50870],0x304e15c9
  417fc8:	(bad)  
  417fc9:	jbe    0x417fe5
  417fcb:	lods   eax,DWORD PTR ds:[esi]
  417fcc:	fcos   
  417fce:	or     BYTE PTR [ecx+0x1bce85d6],dl
  417fd4:	add    al,0x83
  417fd6:	aad    0x90
  417fd8:	in     al,0x88
  417fda:	fidiv  WORD PTR [edi]
  417fdc:	add    DWORD PTR [ebx+0x34200000],ecx
  417fe2:	mov    cl,0x1
  417fe4:	addr16 loop 0x417fd6
  417fe7:	test   DWORD PTR [ebp+0x2388ff1b],esp
  417fed:	cwde   
  417fee:	sti    
  417fef:	rol    cl,0xd9
  417ff2:	ror    BYTE PTR [ecx+0x75fd281b],0xde
  417ff9:	mov    ds:0x3034f440,al
  417ffe:	push   ecx
  417fff:	dec    DWORD PTR [ebx+0x5e15fd2f]
  418005:	inc    ebp
  418006:	inc    ecx
  418007:	add    BYTE PTR [edi],dh
  418009:	xchg   esi,eax
  41800a:	dec    eax
  41800b:	sub    DWORD PTR [eax+eax*1+0x4],0xfffffffd
  418010:	add    ah,BYTE PTR [ecx]
  418012:	jns    0x417fda
  418014:	(bad)  
  418015:	dec    esi
  418016:	imul   edi,ebp,0x74409978
  41801c:	ds xchg esi,eax
  41801e:	mov    ebx,0xf1352e0b
  418023:	ror    BYTE PTR [edi+edi*8-0x80],1
  418027:	leave  
  418028:	pop    eax
  418029:	add    eax,DWORD PTR ss:[ecx+0x6eb1c4c]
  418030:	jo     0x41800a
  418032:	arpl   cx,sp
  418034:	xor    al,0x1d
  418036:	add    cl,ch
  418038:	sub    BYTE PTR [ecx+ebp*2+0x1d3602],bl
  41803f:	jae    0x418071
  418041:	fcmove st,st(1)
  418043:	sti    
  418044:	add    BYTE PTR [eax],al
  418046:	jae    0x41807a
  418048:	add    eax,0x118b1800
  41804d:	std    
  41804e:	mov    DWORD PTR [ecx],edx
  418050:	pop    edi
  418051:	ss or  dl,cl
  418054:	mov    eax,eax
  418056:	mov    ebx,DWORD PTR [esi]
  418058:	or     ecx,0xfffffff8
  41805b:	popf   
  41805c:	loop   0x418059
  41805e:	aaa    
  41805f:	popa   
  418060:	push   cs
  418061:	std    
  418062:	(bad)
  418067:	pop    ds
  418068:	sar    bh,0x79
  41806b:	xchg   esi,eax
  41806c:	inc    esp
  41806d:	pop    ecx
  41806e:	(bad)  
  41806f:	ficom  WORD PTR [eax]
  418071:	add    BYTE PTR [edx-0x5a],ah
  418074:	jno    0x417ff7
  418076:	rcr    DWORD PTR [eax],cl
  418078:	adc    eax,eax
  41807a:	addr16 dec ebp
  41807c:	xchg   edx,eax
  41807d:	dec    ebx
  41807e:	aas    
  41807f:	dec    esp
  418080:	mov    ch,0x4f
  418082:	sbb    eax,0xf490f634
  418087:	pop    ds
  418088:	mov    edx,0xea3434eb
  41808d:	jnp    0x418021
  41808f:	mov    al,ds:0x1ff44ae2
  418094:	jmp    0x2375b79c
  418099:	leave  
  41809a:	add    BYTE PTR [ebx+0xb],0x4
  41809e:	aaa    
  41809f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180a1:	pop    edi
  4180a2:	mov    edi,0x6203ea46
  4180a7:	inc    eax
  4180a8:	push   esi
  4180a9:	stc    
  4180aa:	add    BYTE PTR [eax],al
  4180ac:	sbb    BYTE PTR [ebx+ebx*1],dh
  4180af:	cmp    al,0x2e
  4180b1:	hlt    
  4180b2:	test   eax,0xea2f754c
  4180b7:	mov    eax,0xed9917af
  4180bc:	xor    al,0x67
  4180be:	sub    dl,BYTE PTR [ecx-0x3c66d784]
  4180c4:	js     0x418064
  4180c6:	in     al,dx
  4180c7:	bound  esp,QWORD PTR [esp+edi*1+0x2a1cc871]
  4180ce:	std    
  4180cf:	xor    esp,DWORD PTR [esp+esi*2]
  4180d2:	jmp    0xf9c3:0xaa4def5a
  4180d9:	mul    ch
  4180db:	add    esp,DWORD PTR [esi+0x7f]
  4180de:	idiv   DWORD PTR [esi]
  4180e0:	mov    DWORD PTR [ebp+0x6a],esi
  4180e3:	and    bh,dl
  4180e5:	repnz es add al,0x37
  4180e9:	adc    DWORD PTR ds:0xab449919,0x8b7fd0c6
  4180f3:	clc    
  4180f4:	loopne 0x41813c
  4180f6:	sub    al,BYTE PTR [edi+esi*4]
  4180f9:	mov    cl,BYTE PTR [bx+di+0x76]
  4180fd:	xor    al,0x1
  4180ff:	jmp    0xbe2ac393
  418104:	or     al,0x27
  418106:	cld    
  418107:	ins    DWORD PTR es:[edi],dx
  418108:	hlt    
  418109:	lahf   
  41810a:	adc    DWORD PTR [esi],esp
  41810c:	das    
  41810d:	adc    bl,al
  41810f:	stos   BYTE PTR es:[edi],al
  418110:	add    BYTE PTR [eax],al
  418112:	xor    al,0x5c
  418114:	push   edx
  418115:	test   al,0x34
  418117:	mov    esp,0x72ee491d
  41811c:	add    DWORD PTR [edi-0x2422baeb],edx
  418122:	je     0x41814d
  418124:	mov    ah,BYTE PTR [ebp-0x5616bff0]
  41812a:	add    ah,BYTE PTR [edi]
  41812c:	cld    
  41812d:	jb     0x41816e
  41812f:	xor    BYTE PTR [ebx],dl
  418131:	test   eax,0x62039e34
  418136:	in     al,dx
  418137:	adc    BYTE PTR [esi+eax*1-0x2],0x9d
  41813c:	adc    dl,BYTE PTR [ebx+0x1887f32]
  418142:	xchg   ebp,eax
  418143:	add    cl,BYTE PTR [eax-0x3d34d0f]
  418149:	pop    ebp
  41814a:	cmp    BYTE PTR [ebx+0x3300defb],dh
  418150:	das    
  418151:	mov    dl,0xc2
  418153:	fs stc 
  418155:	hlt    
  418156:	hlt    
  418157:	sub    BYTE PTR [ebp-0x3a],dl
  41815a:	cmp    eax,0xf697fc7f
  41815f:	xchg   BYTE PTR [esi+0x63],bl
  418162:	jp     0x4180ef
  418164:	mov    edi,0x888534e5
  418169:	xchg   ebp,eax
  41816a:	mov    edx,0x423a1517
  41816f:	or     edx,DWORD PTR [ebx-0x2f]
  418172:	ror    DWORD PTR [eax],1
  418174:	ret    
  418175:	sub    al,BYTE PTR [eax]
  418177:	add    BYTE PTR [ebx],dh
  418179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41817a:	add    BYTE PTR ss:[eax+0x20],bh
  41817e:	lds    eax,FWORD PTR [ebx-0x32]
  418181:	jmp    0x3c:0x21c615fc
  418188:	out    0x29,al
  41818a:	fadd   st(6),st
  41818c:	int    0x34
  41818e:	jo     0x4181aa
  418190:	push   es
  418191:	iret   
  418192:	cmc    
  418193:	(bad)  
  418194:	jmp    0x8fb64254
  418199:	jnp    0x41819b
  41819b:	in     al,0x50
  41819d:	out    dx,eax
  41819e:	sti    
  41819f:	daa    
  4181a0:	lahf   
  4181a1:	cmc    
  4181a2:	sti    
  4181a3:	lds    esp,FWORD PTR [ebx-0x6c]
  4181a6:	ret    
  4181a7:	inc    ebx
  4181a8:	pop    esi
  4181a9:	xor    eax,0x6863ff53
  4181ae:	cmovo  ecx,DWORD PTR [esi-0x4a]
  4181b2:	aas    
  4181b3:	or     BYTE PTR [ebp-0x1d17fdea],cl
  4181b9:	mov    esi,?
  4181bb:	call   FWORD PTR [esi+0x60041093]
  4181c1:	hlt    
  4181c2:	sti    
  4181c3:	mov    bl,ah
  4181c5:	mov    eax,DWORD PTR [edx-0xe608]
  4181cb:	xor    cl,dh
  4181cd:	cwde   
  4181ce:	jns    0x41815b
  4181d0:	inc    ebx
  4181d1:	int3   
  4181d2:	cmovo  ebx,DWORD PTR [esi]
  4181d5:	in     eax,dx
  4181d6:	push   eax
  4181d7:	push   ebx
  4181d8:	imul   esi,esi,0xfffffff7
  4181db:	push   ecx
  4181dc:	add    BYTE PTR [eax],al
  4181de:	sbb    eax,0x1fec47b7
  4181e3:	loope  0x418235
  4181e5:	mov    edi,0x48013410
  4181ea:	inc    ecx
  4181eb:	loopne 0x41816f
  4181ed:	pop    ebp
  4181ee:	out    0xba,al
  4181f0:	push   edi
  4181f1:	cld    
  4181f2:	mov    ecx,0x37f8826d
  4181f7:	mov    esi,0x20c840d2
  4181fc:	add    BYTE PTR [esi],dl
  4181fe:	ja     0x41821d
  418200:	sbb    ebx,DWORD PTR [esi]
  418202:	adc    BYTE PTR ds:0x92697300,bl
  418208:	ret    
  418209:	sti    
  41820a:	ins    BYTE PTR es:[edi],dx
  41820b:	fcmovbe st,st(3)
  41820d:	sub    ecx,DWORD PTR [edi-0x67028698]
  418213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418214:	ret    
  418215:	pop    es
  418216:	dec    esp
  418217:	pop    edx
  418218:	aam    0x20
  41821a:	in     al,0xe9
  41821c:	mov    al,BYTE PTR [ebx-0x7d]
  41821f:	int    0x60
  418221:	jae    0x41829e
  418223:	rol    WORD PTR [edi],cl
  418226:	add    al,0xca
  418228:	mov    eax,0x6164e2fc
  41822d:	(bad)  
  41822e:	mov    edx,0x5808d45d
  418233:	rol    BYTE PTR [edi],0xe8
  418236:	push   esi
  418237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418238:	popa   
  418239:	std    
  41823a:	mov    esi,0xcafd07d8
  41823f:	xor    al,0x61
  418241:	adc    eax,DWORD PTR [eax]
  418243:	add    BYTE PTR [edi],bh
  418245:	add    al,al
  418247:	(bad)  
  418248:	mov    ebp,0x895d07d7
  41824d:	ret    0xc246
  418250:	cmp    ebx,DWORD PTR ds:0x6c0b88b9
  418256:	test   DWORD PTR [ebx],edi
  418258:	pop    ss
  418259:	xlat   BYTE PTR ds:[ebx]
  41825a:	mov    edi,0x1d8008ff
  41825f:	push   esi
  418260:	ror    DWORD PTR [ebx+eax*2],0x41
  418264:	aaa    
  418265:	aas    
  418266:	pop    esp
  418267:	adc    ecx,DWORD PTR [edi]
  418269:	or     eax,eax
  41826b:	jmp    FWORD PTR [eax+0x18]
  41826e:	pusha  
  41826f:	(bad)  
  418270:	je     0x4182a6
  418272:	jmp    0xc943:0x924a6403
  418279:	es xchg ebx,eax
  41827b:	mov    bh,dh
  41827d:	lahf   
  41827e:	stc    
  41827f:	inc    esi
  418280:	xor    al,0x10
  418282:	lods   al,BYTE PTR ds:[esi]
  418283:	ret    
  418284:	mov    eax,0xb0c5194e
  418289:	lock in al,dx
  41828b:	arpl   WORD PTR [ecx+0x72],si
  41828e:	jmp    0x453f:0xfd270904
  418295:	je     0x418281
  418297:	mov    ebp,0xb45670bd
  41829c:	mov    esp,DWORD PTR [eax+0x3bf48ade]
  4182a2:	rol    BYTE PTR [ebx],1
  4182a4:	jb     0x418316
  4182a6:	ds adc al,0x0
  4182a9:	add    BYTE PTR [edi],dh
  4182ab:	xor    al,0xea
  4182ad:	imul   ebp,DWORD PTR [eax+0x2b],0x2b
  4182b1:	pop    edi
  4182b2:	pop    es
  4182b3:	daa    
  4182b4:	popf   
  4182b5:	or     ebx,DWORD PTR [edx+0x40]
  4182b8:	pop    esi
  4182b9:	stc    
  4182ba:	adc    BYTE PTR [ebp*2-0x7dbe3cbc],dh
  4182c1:	or     ecx,0x73
  4182c4:	jmp    0x4cf8:0xfb37c45e
  4182cb:	inc    edx
  4182cc:	stos   BYTE PTR es:[edi],al
  4182cd:	add    esp,DWORD PTR [ebp-0xc]
  4182d0:	inc    BYTE PTR [ecx]
  4182d2:	out    0x33,eax
  4182d4:	mov    cl,0x41
  4182d6:	das    
  4182d7:	xor    al,0x35
  4182d9:	mov    esp,DWORD PTR [ebx]
  4182db:	mov    dl,0xc5
  4182dd:	mov    bh,0x90
  4182df:	xor    al,0xfa
  4182e1:	add    esi,DWORD PTR [edi]
  4182e3:	sbb    al,0xe2
  4182e5:	jbe    0x4182e1
  4182e7:	and    eax,0xafe0c871
  4182ec:	add    BYTE PTR [ecx-0x1e98c6f1],ch
  4182f2:	add    DWORD PTR [ecx-0x57],0x3225f4fc
  4182f9:	test   eax,0xe901d063
  4182fe:	xor    al,0x83
  418300:	mov    BYTE PTR [edi+eiz*1],ch
  418303:	arpl   cx,ax
  418305:	pop    ds
  418306:	cmp    BYTE PTR [edx+0x70fa807d],0xf9
  41830d:	jmp    0xbc1f8312
  418312:	inc    ebp
  418313:	loope  0x4182c2
  418315:	je     0x41831c
  418317:	jo     0x418388
  418319:	std    
  41831a:	xchg   DWORD PTR [edx+0x3545ad38],ebp
  418320:	mov    ebp,0x6f261171
  418325:	adc    edi,edi
  418327:	call   0x29c7b760
  41832c:	mov    BYTE PTR [ebx],bh
  41832e:	mov    ch,BYTE PTR [esp+edx*8+0x354545ee]
  418335:	xor    al,0x1
  418337:	jmp    0xea3714f1
  41833c:	mov    cl,0x64
  41833e:	jbe    0x418329
  418340:	xor    al,0x7f
  418342:	addr16 jmp 0x9a1af4ef
  418348:	fldenv [eax+0x27ff27e5]
  41834e:	add    esi,esi
  418350:	and    ch,dh
  418352:	push   cs
  418353:	test   eax,0xe7ff6934
  418358:	xor    al,0x34
  41835a:	or     al,0x65
  41835c:	aas    
  41835d:	and    eax,0x339fe9fc
  418362:	mov    BYTE PTR [edi+eiz*1],ch
  418365:	mov    cl,0xc0
  418367:	add    BYTE PTR [edx],bh
  418369:	push   ds
  41836a:	cmp    eax,0xfb8037df
  418370:	fidiv  WORD PTR [eax]
  418372:	add    DWORD PTR [ebx+0x381b0000],ecx
  418378:	mov    dh,bl
  41837a:	addr16 in eax,dx
  41837c:	out    0x8d,eax
  41837e:	adc    ecx,DWORD PTR [ecx-0x2aaf616]
  418384:	add    ecx,DWORD PTR [ecx+0x5d88a413]
  41838a:	mov    dh,0xb4
  41838c:	aas    
  41838d:	lods   al,BYTE PTR ds:[esi]
  41838e:	dec    esi
  41838f:	xchg   DWORD PTR [ebx+0x4],esi
  418392:	and    DWORD PTR [esi],edi
  418394:	(bad)  
  418395:	adc    eax,0x3c1cda
  41839a:	or     esi,DWORD PTR [eax+0xe]
  41839d:	test   edi,esp
  41839f:	das    
  4183a0:	add    DWORD PTR [eax],eax
  4183a2:	call   0x6a432b93
  4183a7:	add    ecx,DWORD PTR [ecx-0x3f5301bb]
  4183ad:	je     0x418349
  4183af:	mov    ecx,0x6bf7f43f
  4183b4:	add    DWORD PTR [eax],eax
  4183b6:	dec    esi
  4183b7:	mov    ebx,0x78cb1447
  4183bc:	jne    0x4183dc
  4183be:	lds    esi,FWORD PTR [eax]
  4183c0:	mov    BYTE PTR [ebp+0x36],dl
  4183c3:	loop   0x4183c1
  4183c5:	jne    0x4183e5
  4183c7:	xchg   DWORD PTR [eax-0x14],esi
  4183ca:	cwde   
  4183cb:	xchg   DWORD PTR [ecx],edx
  4183cd:	test   BYTE PTR [esi+0x31],bl
  4183d0:	test   DWORD PTR [esi-0x74fec7e2],esi
  4183d6:	fisttp DWORD PTR [edi+0xc080]
  4183dc:	nop
  4183dd:	sub    ebp,edi
  4183df:	jne    0x4183ef
  4183e1:	lods   eax,DWORD PTR ds:[esi]
  4183e2:	dec    edi
  4183e3:	lock aaa 
  4183e5:	xchg   esi,eax
  4183e6:	retf   
  4183e7:	jmp    0x418451
  4183e9:	cmc    
  4183ea:	sbb    al,0xf9
  4183ec:	clc    
  4183ed:	cli    
  4183ee:	add    eax,0x40
  4183f1:	cdq    
  4183f2:	js     0x4183f4
  4183f4:	aaa    
  4183f5:	or     eax,0xd58ffea
  4183fa:	lock (bad) 
  4183fc:	fcomp  st(2)
  4183fe:	shr    bh,cl
  418400:	ror    BYTE PTR [ebx],1
  418402:	pop    ebp
  418403:	adc    eax,ebx
  418405:	and    al,al
  418407:	jmp    FWORD PTR [edi-0x87c92a8]
  41840d:	cmp    ch,BYTE PTR [edx-0xc5dbd89]
  418413:	inc    DWORD PTR [edx+0x4d]
  418416:	add    eax,0xfffa643b
  41841b:	jmp    DWORD PTR [edx]
  41841d:	std    
  41841e:	push   ebp
  41841f:	inc    ebx
  418420:	jecxz  0x41844f
  418422:	fstp   DWORD PTR [esp+edi*4]
  418425:	rol    BYTE PTR [ebx-0x7d],1
  418428:	ja     0x418432
  41842a:	test   DWORD PTR [eax],edi
  41842c:	xor    al,0xe0
  41842e:	out    dx,al
  41842f:	mov    dl,bh
  418431:	jo     0x41841d
  418433:	(bad)  
  418434:	imul   ebx,DWORD PTR ds:0x873135d,0x4db3ffc0
  41843e:	ror    DWORD PTR [ebp+0x0],cl
  418441:	add    BYTE PTR [ecx+0xe],bh
  418444:	(bad)  
  418445:	jg     0x418411
  418447:	inc    esp
  418448:	push   DWORD PTR [edx+0x39]
  41844b:	(bad)  
  41844c:	fcomi  st,st(6)
  41844e:	mov    eax,ss:0xd9d5519
  418454:	mov    eax,DWORD PTR [ebx+0xf]
  418457:	mov    ebp,0x121b735c
  41845c:	test   bh,0x45
  41845f:	xor    al,0x2a
  418461:	add    al,0x4c
  418463:	ss jmp 0x6d74bb6c
  418469:	pop    edx
  41846a:	add    DWORD PTR [ebx],esp
  41846c:	retf   
  41846d:	inc    ebx
  41846e:	je     0x418498
  418470:	and    esi,DWORD PTR ss:[edi]
  418473:	xor    al,0xcf
  418475:	jmp    DWORD PTR [edi]
  418477:	in     eax,dx
  418478:	pop    sp
  41847a:	xor    eax,0x70455533
  41847f:	mov    ch,0x88
  418481:	cmp    DWORD PTR [esi],esi
  418483:	xor    al,0xea
  418485:	xchg   BYTE PTR [eax-0x3b369ec7],cl
  41848b:	push   cs
  41848c:	out    0x41,al
  41848e:	je     0x4184b3
  418490:	jmp    0x9265a8ef
  418495:	ja     0x41845b
  418497:	and    dh,BYTE PTR [ebx-0x79]
  41849a:	sbb    al,0x28
  41849c:	jmp    0x920c:0xde7efaba
  4184a3:	test   al,0x56
  4184a5:	pop    ebx
  4184a6:	add    BYTE PTR [eax],al
  4184a8:	and    al,0xcc
  4184aa:	cld    
  4184ab:	ret    
  4184ac:	sub    BYTE PTR [esp+eiz*4-0x260a8fa6],0x3
  4184b4:	push   es
  4184b5:	mov    ch,BYTE PTR [edi+0x54]
  4184b8:	add    ch,BYTE PTR [edi-0x5fc8004d]
  4184be:	push   es
  4184bf:	lock pop ds
  4184c1:	mov    ds:0xaf1ad1f2,al
  4184c6:	stos   DWORD PTR es:[edi],eax
  4184c7:	pop    es
  4184c8:	mov    esp,0x7a811374
  4184cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ce:	loope  0x418522
  4184d0:	addr16 push esi
  4184d2:	sub    ecx,DWORD PTR [ecx+0x60f3353]
  4184d8:	mov    esi,0x8c9a0101
  4184dd:	icebp  
  4184de:	xchg   esp,eax
  4184df:	out    dx,al
  4184e0:	jge    0x41849a
  4184e2:	rcr    BYTE PTR [edi+esi*1+0x63],0xc1
  4184e7:	ror    BYTE PTR ds:0x5de15abb,cl
  4184ed:	test   al,0x25
  4184ef:	cmc    
  4184f0:	test   eax,0x37270042
  4184f5:	pop    ds
  4184f6:	jne    0x4184fd
  4184f8:	out    0x84,eax
  4184fa:	cld    
  4184fb:	fsubr  st(4),st
  4184fd:	inc    edi
  4184fe:	inc    ecx
  4184ff:	jmp    0x704e7db5
  418504:	out    dx,al
  418505:	xor    eax,0x7f8daa88
  41850a:	pop    eax
  41850b:	stos   DWORD PTR es:[edi],eax
  41850c:	add    BYTE PTR [eax],al
  41850e:	sub    al,0x34
  418510:	push   esi
  418511:	pop    esp
  418512:	rcl    BYTE PTR [ebp-0x77],1
  418515:	push   0xe9027418
  41851a:	xor    al,0xad
  41851c:	test   DWORD PTR ds:0x19fc1efc,edx
  418522:	hlt    
  418523:	mov    ah,0x5c
  418525:	in     ax,dx
  418527:	push   ds
  418528:	sbb    eax,0xfc3434e8
  41852d:	cld    
  41852e:	nop
  41852f:	inc    ebx
  418530:	inc    ecx
  418531:	jmp    0x6d4d79ed
  418536:	sbb    DWORD PTR [ecx],esp
  418538:	cld    
  418539:	jmp    0xf09ab898
  41853e:	mov    bh,0x90
  418540:	cld    
  418541:	cs std 
  418543:	cs xchg ch,bh
  418546:	cmp    esi,DWORD PTR [ecx+eax*1]
  418549:	(bad)  
  41854b:	mov    bl,0x7d
  41854d:	lahf   
  41854e:	cmp    esp,DWORD PTR [ebp-0x6b60959a]
  418554:	cld    
  418555:	add    BYTE PTR [ecx],bh
  418557:	jle    0x418559
  418559:	jne    0x418549
  41855b:	aas    
  41855c:	mov    BYTE PTR [ecx+ebp*1+0x7b],ah
  418560:	(bad)  
  418561:	jne    0x41855d
  418563:	jb     0x418565
  418565:	(bad)
  418569:	add    bh,ah
  41856b:	mov    ds:0xb80e0001,al
  418570:	mov    bh,0x64
  418572:	add    BYTE PTR [eax],al
  418574:	jmp    0x324383f3
  418579:	sub    al,0x34
  41857b:	test   DWORD PTR [edx+0x7b],esi
  41857e:	(bad)  
  41857f:	(bad)  
  418580:	fldenv [ecx+0x34ce007f]
  418586:	lahf   
  418587:	fs test esi,esi
  41858a:	sti    
  41858b:	jmp    0x7aa9:0x60b7b715
  418592:	inc    BYTE PTR [esi]
  418594:	and    ecx,DWORD PTR [edx]
  418596:	xor    ecx,DWORD PTR [ebp-0x184be]
  41859c:	mov    ds:0x3205c32d,eax
  4185a1:	outs   dx,DWORD PTR ds:[esi]
  4185a2:	inc    edx
  4185a3:	add    BYTE PTR [edx-0x247ca371],dl
  4185a9:	adc    edi,ebp
  4185ab:	(bad)  
  4185ac:	jmp    0x5099f5e5
  4185b1:	and    DWORD PTR [eax-0x35],esp
  4185b4:	int    0x34
  4185b6:	add    ebp,ebx
  4185b8:	test   eax,0xa276403c
  4185bd:	xor    al,BYTE PTR [ecx+0x7037a07d]
  4185c3:	inc    esp
  4185c4:	int    0xc8
  4185c6:	pusha  
  4185c7:	call   FWORD PTR [ecx]
  4185c9:	jnp    0x4185cb
  4185cb:	jne    0x41861c
  4185cd:	cmp    eax,0x4a376480
  4185d2:	pop    edx
  4185d3:	std    
  4185d4:	ret    0x41fd
  4185d7:	add    eax,DWORD PTR [eax]
  4185d9:	add    BYTE PTR [ebx+0x35ffc662],bl
  4185df:	inc    edx
  4185e0:	sub    eax,DWORD PTR [ecx-0x2a7521e]
  4185e6:	sbb    BYTE PTR [eax],bl
  4185e8:	retf   
  4185e9:	push   ds
  4185ea:	dec    esi
  4185eb:	test   al,0xdc
  4185ed:	cld    
  4185ee:	or     bh,bh
  4185f0:	retf   0xf906
  4185f3:	adc    ah,bl
  4185f5:	enter  0xd74,0xfb
  4185f9:	call   0x64d51045
  4185fe:	call   0x6c40dee1
  418603:	push   cs
  418604:	inc    edx
  418605:	add    edx,DWORD PTR [ebx-0x2e]
  418608:	(bad)  
  418609:	(bad)  
  41860a:	cmp    DWORD PTR [ebp+0xd37fd59],edx
  418610:	sbb    eax,0x58c64f83
  418615:	std    
  418616:	jge    0x4185c6
  418618:	(bad)  
  418619:	push   DWORD PTR [edi]
  41861b:	adc    al,BYTE PTR [eax-0xb]
  41861e:	xchg   edx,ebp
  418620:	jp     0x41868a
  418622:	mov    al,ds:0xd46659a6
  418627:	aaa    
  418628:	dec    esi
  418629:	inc    ecx
  41862a:	aaa    
  41862b:	out    dx,eax
  41862c:	mov    WORD PTR [ebx+0x7],es
  41862f:	neg    DWORD PTR [edx+eax*8]
  418632:	or     BYTE PTR [edx],dl
  418634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418635:	push   0x65ffca6c
  41863a:	cs call 0x41fa15
  418640:	xor    DWORD PTR [ebp-0x359397fd],esp
  418646:	dec    DWORD PTR [edx-0x2a6da4e]
  41864c:	push   eax
  41864d:	xor    al,0xba
  41864f:	pop    eax
  418650:	and    al,0x3c
  418652:	clc    
  418653:	ret    
  418654:	inc    eax
  418655:	cdq    
  418656:	pop    edi
  418657:	jle    0x418658
  418659:	push   ds
  41865a:	or     ebx,DWORD PTR [eax-0x67]
  41865d:	ror    DWORD PTR [edi+0x3a34764c],cl
  418663:	add    cl,BYTE PTR [esi]
  418665:	push   ebx
  418666:	mov    bh,0x43
  418668:	xchg   ecx,eax
  418669:	rol    DWORD PTR [ebx+0x1734764c],cl
  41866f:	dec    ebp
  418670:	iret   
  418671:	push   ds
  418672:	fild   DWORD PTR [edi+esi*1]
  418675:	xchg   esi,eax
  418676:	xchg   edx,ebp
  418678:	out    dx,eax
  418679:	jb     0x418665
  41867b:	mov    edi,DWORD PTR [eax+ebx*4]
  41867e:	scas   eax,DWORD PTR es:[edi]
  41867f:	ret    
  418680:	call   0xf02d733b
  418685:	jb     0x418671
  418687:	adc    edi,esi
  418689:	mov    dl,0xa4
  41868b:	fdiv   st(1),st
  41868d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41868f:	test   BYTE PTR [esp+esi*1],cl
  418692:	mov    ds:0x1d1ec0c3,eax
  418697:	sbb    al,0x61
  418699:	fdivp  st(1),st
  41869b:	div    BYTE PTR ds:[ebx]
  41869e:	sbb    al,0x57
  4186a0:	inc    esp
  4186a1:	cld    
  4186a2:	xlat   BYTE PTR ds:[ebx]
  4186a3:	ret    
  4186a4:	add    BYTE PTR [eax],al
  4186a6:	mov    al,ds:0x7203b59e
  4186ab:	jb     0x418697
  4186ad:	add    eax,DWORD PTR [edx+edi*1]
  4186b0:	push   edx
  4186b1:	fimul  WORD PTR [edx+0x77805b1e]
  4186b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b8:	stc    
  4186b9:	ds xor al,0x38
  4186bc:	and    eax,ebx
  4186be:	jo     0x418726
  4186c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186c1:	les    ebp,FWORD PTR [eax-0x8]
  4186c4:	in     al,0x3
  4186c6:	jp     0x41873a
  4186c8:	add    ecx,ebp
  4186ca:	xor    eax,DWORD PTR [esi+0x4208d4fc]
  4186d0:	inc    ecx
  4186d1:	jmp    0x32a64558
  4186d6:	je     0x4186f6
  4186d8:	mov    edi,0xc4341e69
  4186dd:	stos   BYTE PTR es:[edi],al
  4186de:	xor    al,0x34
  4186e0:	jbe    0x4186a3
  4186e2:	fchs   
  4186e4:	adc    BYTE PTR [esi],ah
  4186e6:	hlt    
  4186e7:	sbb    eax,0x627f653
  4186ec:	pop    gs
  4186ee:	xor    al,0xb4
  4186f0:	cmp    eax,0x17349e9
  4186f5:	jmp    0xf72ac2e1
  4186fa:	bound  ebx,QWORD PTR [edi]
  4186fc:	cld    
  4186fd:	gs je  0x4186a8
  418700:	adc    ch,BYTE PTR [esi+0x2ac43837]
  418706:	cmp    ebx,DWORD PTR [ebx+ebx*2+0x28]
  41870a:	add    BYTE PTR [eax],al
  41870c:	xor    esi,esi
  41870e:	add    eax,0x17311e9
  418713:	call   0xbd57a7b1
  418718:	(bad)  
  418719:	pop    ebp
  41871a:	add    DWORD PTR [esi],esi
  41871c:	xchg   ebx,eax
  41871d:	cwde   
  41871e:	enter  0x3b2a,0xac
  418722:	add    cl,BYTE PTR [ecx-0x64]
  418725:	in     al,dx
  418726:	aas    
  418727:	jmp    0xf43fdd8
  41872c:	rcl    BYTE PTR [esi-0x69c4d538],cl
  418732:	mov    ch,BYTE PTR [edi-0x2c5d69ca]
  418738:	in     eax,dx
  418739:	jb     0x41873c
  41873b:	iret   
  41873c:	stos   DWORD PTR es:[edi],eax
  41873d:	jbe    0x418744
  41873f:	sub    dh,BYTE PTR [ecx+ebx*2-0xde6ffff]
  418746:	sti    
  418747:	jmp    FWORD PTR [ebx+0x7ebe5339]
  41874d:	pop    esi
  41874e:	inc    edx
  41874f:	add    BYTE PTR [eax+0x4cd81086],ch
  418755:	icebp  
  418756:	sti    
  418757:	jg     0x4187bc
  418759:	xor    esi,eax
  41875b:	inc    ebx
  41875c:	dec    esi
  41875d:	xor    DWORD PTR [eax+0x1a],esi
  418760:	ss mov ebx,0x9d31fff7
  418766:	shl    DWORD PTR [edi+edi*8+0x5d],0x0
  41876b:	add    al,0x49
  41876d:	repnz sti 
  41876f:	aaa    
  418770:	add    BYTE PTR [eax],al
  418772:	shl    bh,0xfb
  418775:	lds    ebx,FWORD PTR [ebx]
  418777:	xor    esi,eax
  418779:	inc    ebx
  41877a:	push   cs
  41877b:	xor    dl,BYTE PTR [ebx-0x1]
  41877e:	sti    
  41877f:	fs cmovo ebx,esi
  418783:	out    0x9b,al
  418785:	push   0xc2fbf2a5
  41878a:	dec    ebx
  41878b:	stos   DWORD PTR es:[edi],eax
  41878c:	in     al,dx
  41878d:	push   ebx
  41878e:	cmp    BYTE PTR [ebx-0x26],al
  418791:	push   ebx
  418792:	jbe    0x41874c
  418794:	add    BYTE PTR [eax],al
  418796:	fimul  WORD PTR [edx]
  418798:	add    dl,BYTE PTR [ebx+0x24]
  41879b:	xor    DWORD PTR [ecx+0x0],ebp
  41879e:	into   
  41879f:	xor    BYTE PTR [ecx-0x1],al
  4187a2:	dec    ebx
  4187a3:	xor    dh,bh
  4187a5:	adc    eax,0x3c226a
  4187aa:	and    eax,0x21fe8288
  4187af:	add    al,0x36
  4187b1:	cmp    DWORD PTR [ebx+0x2c],eax
  4187b4:	jne    0x4187d1
  4187b6:	push   edi
  4187b7:	in     eax,0xb
  4187b9:	je     0x418743
  4187bb:	jecxz  0x418743
  4187bd:	inc    ebp
  4187be:	aaa    
  4187bf:	sbb    esi,DWORD PTR [eax+0x551aeafc]
  4187c5:	jae    0x418802
  4187c7:	mov    ebp,0xf89f1354
  4187cc:	mov    edi,0xd14ab3ff
  4187d1:	add    DWORD PTR [ebx+ecx*1+0xfcae],eax
  4187d8:	and    ah,BYTE PTR [ebx-0x11]
  4187db:	aas    
  4187dc:	aaa    
  4187dd:	mov    ebx,DWORD PTR [edx-0x1]
  4187e0:	les    edx,FWORD PTR [edx]
  4187e2:	push   ebp
  4187e3:	jae    0x418824
  4187e5:	xor    eax,0xe28fee8
  4187ea:	mov    dh,0x89
  4187ec:	hlt    
  4187ed:	(bad)  
  4187ee:	mov    dl,0xc1
  4187f0:	sub    ecx,DWORD PTR ds:0xbd2388ab
  4187f6:	scas   al,BYTE PTR es:[edi]
  4187f7:	mov    BYTE PTR [edx+0x21],dh
  4187fa:	lods   eax,DWORD PTR ds:[esi]
  4187fb:	and    esi,DWORD PTR [esi]
  4187fd:	or     cl,BYTE PTR [esi-0x52fdbb40]
  418803:	push   esp
  418804:	call   0x4c4271ee
  418809:	int    0xac
  41880b:	adc    bh,0x13
  41880e:	or     eax,0xffed3d36
  418814:	ror    BYTE PTR ds:0x2542fd80,1
  41881a:	push   ebp
  41881b:	adc    ecx,DWORD PTR [ebx-0x50003fe1]
  418821:	dec    ebx
  418822:	or     eax,0x4aaaf81
  418827:	test   BYTE PTR [ebp-0x4dfffff3],dh
  41882d:	dec    eax
  41882e:	pop    ebp
  41882f:	dec    edi
  418830:	pop    es
  418831:	mov    ds:0x4d26ffeb,al
  418836:	add    eax,0xde347783
  41883b:	jmp    0x998a8840
  418840:	pop    esi
  418841:	into   
  418842:	adc    eax,0xb85bacaf
  418847:	jb     0x41882f
  418849:	sbb    BYTE PTR [edx-0x5f],dh
  41884c:	out    dx,al
  41884d:	mov    ah,BYTE PTR [ecx]
  41884f:	maskmovq mm5,mm1
  418852:	xor    al,0x8c
  418854:	jmp    0x4bac:0x9a343713
  41885b:	inc    ecx
  41885c:	repnz add BYTE PTR es:[ecx+esi*2],dh
  418861:	std    
  418862:	push   edx
  418864:	popf   
  418865:	ror    DWORD PTR [ebx+0x780b9ca9],0x1b
  41886c:	jl     0x41886d
  41886e:	jo     0x41888b
  418870:	je     0x41887d
  418872:	sbb    al,BYTE PTR [ecx-0x5a]
  418875:	icebp  
  418876:	push   eax
  418877:	xor    al,0x65
  418879:	inc    ebx
  41887a:	cmp    DWORD PTR [edx],0x6f
  41887d:	leave  
  41887e:	cmp    BYTE PTR [edi+0x24],bl
  418881:	or     BYTE PTR [edx+eax*2+0x363cc9dc],al
  418888:	push   esi
  418889:	add    dl,ch
  41888b:	mov    eax,ds:0xec4452f2
  418890:	xlat   BYTE PTR ds:[ebx]
  418891:	ret    
  418892:	fsubr  DWORD PTR [ebx+0x34a0fc33]
  418898:	mov    edi,0x6a3450ed
  41889d:	add    al,0x37
  41889f:	sbb    DWORD PTR [ebx-0x45ffffe6],0x40
  4188a6:	loop   0x41889d
  4188a8:	jo     0x4188de
  4188aa:	mov    ebx,edx
  4188ac:	xor    BYTE PTR [ebx],bl
  4188ae:	fnstsw WORD PTR [ebx]
  4188b0:	inc    ebp
  4188b1:	je     0x41889d
  4188b3:	adc    eax,0xa0017a77
  4188b8:	stc    
  4188b9:	sub    eax,DWORD PTR [ecx]
  4188bb:	pop    ss
  4188bc:	or     BYTE PTR [eax+ecx*4],ah
  4188bf:	out    dx,eax
  4188c0:	scas   eax,DWORD PTR es:[edi]
  4188c1:	repz je 0x4188b3
  4188c4:	pop    esp
  4188c5:	sbb    bh,BYTE PTR [ecx+ebp*8+0x34]
  4188c9:	mov    es,WORD PTR [ecx]
  4188cb:	mov    ecx,0xdb094705
  4188d0:	je     0x4188ec
  4188d2:	xchg   DWORD PTR [edi-0x420d4aa4],esi
  4188d8:	cmp    eax,0xcd4fc82
  4188dd:	inc    esi
  4188de:	inc    ecx
  4188df:	jmp    0x963d7c6a
  4188e4:	adc    BYTE PTR [edi+eiz*2-0x17],al
  4188e8:	test   DWORD PTR [eax-0x5f7a0adb],esp
  4188ee:	and    eax,0x25a085dd
  4188f3:	aad    0x85
  4188f5:	inc    ebp
  4188f6:	adc    ebx,ebx
  4188f8:	hlt    
  4188f9:	sbb    DWORD PTR [ebp-0x3f3acbd7],eax
  4188ff:	stos   DWORD PTR es:[edi],eax
  418900:	add    al,0x1a
  418902:	push   ebp
  418903:	jb     0x41895d
  418905:	mov    bl,0xec
  418907:	in     eax,0x0
  418909:	add    BYTE PTR [edx],dl
  41890b:	sbb    ecx,DWORD PTR [ebp+0x30868f34]
  418911:	mov    al,0xab
  418913:	rcr    DWORD PTR fs:[ecx],0x84
  418917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418918:	or     DWORD PTR [esi+0x290f29cf],esi
  41891e:	xor    esi,DWORD PTR [ebp-0x533ce240]
  418924:	inc    ebp
  418925:	xchg   ebp,eax
  418926:	cmp    DWORD PTR [ebp-0x4cc07d07],eax
  41892c:	(bad)  
  41892d:	mov    gs,WORD PTR [ecx]
  41892f:	test   cl,0x0
  418932:	int3   
  418933:	xor    DWORD PTR [ecx],eax
  418935:	push   ebp
  418936:	and    eax,0x1b514c79
  41893b:	in     al,dx
  41893c:	repz push eax
  41893e:	sbb    esp,edi
  418940:	add    edi,edi
  418942:	xor    DWORD PTR ds:0xac8e400f,0xffffffc0
  418949:	je     0x4189a1
  41894b:	call   0xebf7:0xdbd5f840
  418952:	push   ebx
  418953:	mov    dl,0xc6
  418955:	jmp    ebp
  418957:	outs   dx,BYTE PTR ds:[esi]
  418958:	(bad)
  41895c:	imul   eax,DWORD PTR [eax-0xfecaa2],0xff0951a2
  418966:	inc    ebx
  418967:	adc    DWORD PTR [ecx],0x75861e40
  41896d:	and    al,0x0
  41896f:	add    BYTE PTR [edx],dl
  418971:	xchg   BYTE PTR [eax],dl
  418973:	je     0x418974
  418975:	hlt    
  418976:	sti    
  418977:	test   BYTE PTR [esi+0x36],cl
  41897a:	nop
  41897b:	rcr    BYTE PTR [ecx+esi*1+0x1],0x55
  418980:	xchg   ebp,eax
  418981:	jns    0x4189ff
  418983:	in     al,dx
  418984:	(bad)  
  418985:	xor    BYTE PTR [ecx],al
  418987:	add    BYTE PTR ds:0x638d54de,bh
  41898d:	cmp    dl,0xff
  418990:	stc    
  418991:	fbld   TBYTE PTR [ebx-0xa]
  418994:	into   
  418995:	xor    al,0x1
  418997:	inc    DWORD PTR [ebx]
  418999:	fst    QWORD PTR [ecx]
  41899b:	inc    eax
  41899c:	(bad)  
  41899e:	ss cmc 
  4189a0:	fidiv  WORD PTR [ecx+eax*1]
  4189a3:	ja     0x4189c9
  4189a5:	aas    
  4189a6:	repz jmp DWORD PTR [ebx]
  4189a9:	sbb    ah,ah
  4189ab:	mov    ch,0x37
  4189ad:	lea    edx,[edx-0x3]
  4189b0:	pop    es
  4189b1:	xor    edi,DWORD PTR [ebp+0x76]
  4189b4:	test   DWORD PTR [edx],0x4b218fd8
  4189ba:	add    eax,0xc3bb9
  4189bf:	add    BYTE PTR [edx-0x7f04b2b9],bh
  4189c5:	xchg   ecx,eax
  4189c6:	pop    ebp
  4189c7:	or     al,0xfc
  4189c9:	jns    0x418a1d
  4189cb:	cmp    DWORD PTR [ebx+0x1a],0xfe68f885
  4189d2:	or     bh,ch
  4189d4:	add    BYTE PTR [eax],al
  4189d6:	jmp    0x5577:0xaac57d1e
  4189dd:	stc    
  4189de:	push   eax
  4189df:	popa   
  4189e0:	pop    ebp
  4189e1:	mov    bh,0x33
  4189e3:	or     eax,DWORD PTR [eax]
  4189e5:	test   BYTE PTR [edi-0x4a],dh
  4189e8:	pop    ds
  4189e9:	push   0x37
  4189eb:	ret    
  4189ec:	jg     0x4189ee
  4189ee:	aaa    
  4189ef:	or     eax,0xd9efede
  4189f4:	fdivp  st(6),st
  4189f6:	cwde   
  4189f7:	or     eax,0x16f70000
  4189fc:	ror    DWORD PTR [ebx],cl
  4189fe:	adc    cl,bh
  418a00:	xchg   ebx,eax
  418a01:	adc    dh,BYTE PTR [edi+0xd]
  418a04:	test   eax,edi
  418a06:	add    BYTE PTR [ecx-0xd],bh
  418a09:	inc    ebp
  418a0a:	mov    dh,0xf7
  418a0c:	aaa    
  418a0d:	add    BYTE PTR [edi],dh
  418a0f:	or     eax,0xcd2597d6
  418a14:	mov    al,0x5d
  418a16:	jl     0x4189fc
  418a18:	inc    ebp
  418a19:	or     BYTE PTR [edi],dh
  418a1b:	cmp    eax,0xfbff1352
  418a20:	mov    edi,0x5d0c98ff
  418a25:	out    dx,al
  418a26:	push   0x34
  418a28:	outs   dx,DWORD PTR ds:[esi]
  418a29:	pop    edi
  418a2a:	cmp    BYTE PTR [eax],cl
  418a2c:	cli    
  418a2d:	pop    es
  418a2e:	aaa    
  418a2f:	xor    al,0x37
  418a31:	mov    edx,0x5364a903
  418a36:	sahf   
  418a37:	pop    ss
  418a38:	xor    DWORD PTR [ebx+0x1e100000],0xffffffea
  418a3f:	add    esi,DWORD PTR [edi]
  418a41:	pop    ss
  418a42:	fnstsw WORD PTR [ebx-0x44158bda]
  418a48:	cmp    eax,0x3703ea21
  418a4d:	lahf   
  418a4e:	mov    bh,0x14
  418a50:	imul   ecx,DWORD PTR [esi+edi*8],0xba176a85
  418a57:	fstp   TBYTE PTR [eax-0x30fc5562]
  418a5d:	iret   
  418a5e:	mov    bl,0xc3
  418a60:	push   eax
  418a61:	(bad)  
  418a63:	add    dh,BYTE PTR [edi]
  418a65:	xor    al,0x5d
  418a67:	mov    ?,WORD PTR [edi]
  418a69:	sbb    DWORD PTR [ebx],esp
  418a6b:	push   eax
  418a6c:	dec    edi
  418a6d:	mov    esp,DWORD PTR [eax+0x2db33250]
  418a73:	push   DWORD PTR [edi+0x59d70b1b]
  418a79:	pop    ss
  418a7a:	jge    0x418a77
  418a7c:	scas   eax,DWORD PTR es:[edi]
  418a7d:	out    dx,al
  418a7e:	ins    BYTE PTR es:[edi],dx
  418a7f:	outs   dx,BYTE PTR ds:[esi]
  418a80:	pop    es
  418a81:	sbb    esi,ebx
  418a83:	dec    edi
  418a84:	pop    ds
  418a85:	cmp    al,0xe6
  418a87:	add    esi,DWORD PTR [edi]
  418a89:	mov    al,0xa9
  418a8b:	fsubr  DWORD PTR [ebx]
  418a8d:	mov    ch,dl
  418a8f:	dec    esi
  418a90:	fs sub al,0xd3
  418a93:	stc    
  418a94:	cmp    al,0x42
  418a96:	sub    al,BYTE PTR [esp+esi*4]
  418a99:	repz cmp al,0xff
  418a9c:	jb     0x418a51
  418a9e:	mov    ebx,0x460000e8
  418aa3:	mov    DWORD PTR [eax],0x5b7974fb
  418aa9:	adc    al,BYTE PTR [edx]
  418aab:	repnz add al,0xe9
  418aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aaf:	push   ss
  418ab0:	out    0x94,eax
  418ab2:	mov    esi,0x92f774f3
  418ab7:	mov    bl,0x38
  418ab9:	mov    edi,0x3e0c3e7f
  418abe:	(bad)  [ebx+eiz*2]
  418ac1:	fs push edx
  418ac3:	mov    al,ds:0x45fa6a0d
  418ac8:	jbe    0x418aad
  418aca:	call   0xa3:0x34ed78b3
  418ad1:	cdq    
  418ad2:	cmp    dh,ch
  418ad4:	cs sub esp,esi
  418ad7:	test   BYTE PTR [edi+edx*4],cl
  418ada:	sti    
  418adb:	jge    0x418b0d
  418add:	and    ah,BYTE PTR [edi+ebx*1+0x52f4e2d9]
  418ae4:	add    ecx,ebp
  418ae6:	xor    al,0x32
  418ae8:	push   ecx
  418ae9:	ret    
  418aea:	xor    eax,0x5ce86785
  418aef:	push   ss
  418af0:	add    ecx,ebp
  418af2:	xor    al,0x17
  418af4:	jne    0x418ac3
  418af6:	push   eax
  418af7:	pop    ss
  418af8:	push   ss
  418af9:	push   ebp
  418afa:	and    eax,0x83720156
  418aff:	mov    bl,0xfa
  418b01:	(bad)  
  418b02:	call   0xbf873f
  418b07:	add    BYTE PTR [eax+0x3c],dl
  418b0a:	cld    
  418b0b:	jne    0x418b65
  418b0d:	cmp    al,0xfc
  418b0f:	pop    ebp
  418b10:	dec    edi
  418b11:	cmp    al,0x53
  418b13:	fsubp  st(7),st
  418b15:	xor    DWORD PTR [edi],ecx
  418b17:	sub    DWORD PTR [ebx],esi
  418b19:	mov    cl,0xc0
  418b1b:	aaa    
  418b1c:	loopne 0x418ae0
  418b1e:	mov    edi,0xc41cf100
  418b23:	adc    bl,BYTE PTR [esi]
  418b25:	xor    BYTE PTR [ebx-0x76],bl
  418b28:	popf   
  418b29:	retf   0x10c1
  418b2c:	into   
  418b2d:	fmul   QWORD PTR [eax+0x19754fec]
  418b33:	add    bl,BYTE PTR [esi-0x72a9adcf]
  418b39:	dec    edx
  418b3a:	push   esi
  418b3b:	inc    ebx
  418b3c:	adc    eax,0xc6fb8a81
  418b41:	jb     0x418b78
  418b43:	call   DWORD PTR [ecx]
  418b45:	test   al,0xc0
  418b47:	test   al,0x9e
  418b49:	xor    DWORD PTR [edx],edi
  418b4b:	shl    DWORD PTR [ecx-0x51],0x8e
  418b4f:	add    BYTE PTR [esi+0x61c63a31],cl
  418b55:	mov    bl,0x86
  418b57:	add    BYTE PTR [esi+0x31],bl
  418b5a:	sub    al,cl
  418b5c:	inc    ebp
  418b5d:	outs   dx,BYTE PTR ds:[esi]
  418b5e:	push   cs
  418b5f:	or     dh,0x30
  418b62:	add    DWORD PTR [eax],eax
  418b64:	and    eax,0xf600676e
  418b69:	(bad)  
  418b6b:	inc    DWORD PTR [eax]
  418b6d:	add    BYTE PTR [ecx],dl
  418b6f:	xor    al,bl
  418b71:	cmp    ecx,DWORD PTR [eax]
  418b73:	add    ebp,DWORD PTR [ebx+0x33]
  418b76:	addr16 sti 
  418b78:	sti    
  418b79:	add    al,0x1e
  418b7b:	mov    al,ds:0xb0b6b611
  418b80:	xchg   edx,eax
  418b81:	cwde   
  418b82:	push   cs
  418b83:	mov    dl,0xcb
  418b85:	add    ch,BYTE PTR [edi+0x4fede3e0]
  418b8b:	xor    BYTE PTR [ecx],al
  418b8d:	dec    DWORD PTR [ebx-0x25ba7ce7]
  418b93:	mov    dl,0xc8
  418b95:	jmp    DWORD PTR [ebx-0x43]
  418b98:	in     al,dx
  418b99:	std    
  418b9a:	aaa    
  418b9b:	dec    BYTE PTR [ebp-0x79]
  418b9e:	mov    al,BYTE PTR [ebx]
  418ba0:	pop    ebp
  418ba1:	xor    esp,DWORD PTR [esi-0x12]
  418ba4:	dec    ebp
  418ba5:	mov    edi,DWORD PTR [edx-0x21]
  418ba8:	mov    ah,0x4f
  418baa:	addr16 nop
  418bac:	test   ah,ch
  418bae:	ret    0x4dc5
  418bb1:	push   eax
  418bb2:	addr16 into 
  418bb4:	repz jnp 0x418bfb
  418bb7:	dec    ebx
  418bb8:	add    eax,0xe6e2a048
  418bbd:	mov    edi,0x185ccaa1
  418bc2:	cwde   
  418bc3:	lods   eax,DWORD PTR ds:[esi]
  418bc4:	dec    ebp
  418bc5:	test   BYTE PTR [edi+0x1f],dh
  418bc8:	add    dh,BYTE PTR [edx]
  418bca:	ins    BYTE PTR es:[edi],dx
  418bcb:	xchg   ecx,eax
  418bcc:	inc    esi
  418bcd:	dec    ebp
  418bce:	mov    edx,0xed8ca
  418bd3:	add    BYTE PTR [edx+0x70fb6187],ch
  418bd9:	jne    0x418b90
  418bdb:	cld    
  418bdc:	inc    edx
  418bdd:	mov    esi,edx
  418bdf:	aas    
  418be0:	aaa    
  418be1:	nop
  418be2:	inc    ebp
  418be3:	jae    0x418c5a
  418be5:	mov    al,ds:0x1935e942
  418bea:	inc    eax
  418beb:	pop    ebp
  418bec:	jmp    0x3c03c2b2
  418bf1:	or     esi,DWORD PTR [ecx-0x4d8dfbab]
  418bf7:	addr16 aaa 
  418bf9:	sbb    eax,0x1e9d0200
  418bfe:	mov    cl,0x69
  418c00:	cmp    BYTE PTR [ebp-0x62c80001],dh
  418c06:	dec    esi
  418c07:	je     0x418c64
  418c09:	stc    
  418c0a:	dec    esp
  418c0b:	adc    eax,ebx
  418c0d:	out    dx,eax
  418c0e:	mov    edi,0x810dadff
  418c13:	(bad)  
  418c14:	clc    
  418c15:	xor    al,0x5e
  418c17:	jmp    0x418ba0
  418c19:	addr16 fcmovnbe st,st(7)
  418c1c:	adc    al,0x2c
  418c1e:	cmp    al,0x4d
  418c20:	inc    esp
  418c21:	or     cl,bh
  418c23:	ret    
  418c24:	fdivr  DWORD PTR [eax-0x56bc4a57]
  418c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c2b:	dec    esp
  418c2c:	and    al,0xfc
  418c2e:	xlat   BYTE PTR ds:[ebx]
  418c2f:	ret    
  418c30:	shl    BYTE PTR [ecx+0x60],0x40
  418c34:	pop    esi
  418c35:	div    cl
  418c37:	add    eax,DWORD PTR [eax]
  418c39:	add    BYTE PTR [esi],al
  418c3b:	imul   ebp,DWORD PTR [edi-0x21],0xb53c4054
  418c42:	add    eax,0x444caf46
  418c47:	mov    edi,ss
  418c49:	ret    
  418c4a:	nop
  418c4b:	mov    esi,0x89818679
  418c50:	call   0x338510cd
  418c55:	add    eax,0xd7c60cb6
  418c5a:	ds mov bh,0x61
  418c5d:	sbb    al,0xe3
  418c5f:	cmp    ah,cl
  418c61:	xchg   BYTE PTR [edi-0x77],dh
  418c64:	(bad)  
  418c65:	js     0x418cc6
  418c67:	inc    edi
  418c68:	sub    dh,BYTE PTR [esi+0x4ce3bcda]
  418c6e:	and    al,0x4c
  418c70:	fadd   st,st(3)
  418c72:	inc    eax
  418c73:	mov    dh,0x31
  418c75:	dec    esp
  418c76:	les    eax,FWORD PTR [eax-0x70]
  418c79:	add    eax,DWORD PTR [ebx+edx*1+0x7446fff5]
  418c80:	jmp    0x479b:0xe81ef786
  418c87:	mov    bl,dh
  418c89:	in     eax,0xb5
  418c8b:	adc    dh,BYTE PTR [esi-0x5]
  418c8e:	xchg   edx,eax
  418c8f:	mov    ebp,0xf9b7b700
  418c94:	inc    BYTE PTR [ecx]
  418c96:	test   eax,0x9d4601c4
  418c9b:	ins    DWORD PTR es:[edi],dx
  418c9c:	xchg   DWORD PTR [edx-0xb680000],ebp
  418ca2:	add    al,0xe9
  418ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ca5:	mov    ebx,0xc576aec
  418caa:	adc    ch,0xa3
  418cad:	ss add ecx,ebp
  418cb0:	sub    DWORD PTR [eax-0x72],0x513c172d
  418cb7:	bound  ecx,QWORD PTR [edx]
  418cb9:	int3   
  418cba:	mov    ah,0x1f
  418cbc:	jnp    0x418cd0
  418cbe:	in     al,0x8e
  418cc0:	xor    dh,BYTE PTR [ecx+eax*1]
  418cc3:	ins    DWORD PTR es:[edi],dx
  418cc4:	sti    
  418cc5:	xchg   DWORD PTR [ecx+0x5c],edi
  418cc8:	mov    bh,0x57
  418cca:	adc    ebx,ebp
  418ccc:	xor    al,0x34
  418cce:	push   ecx
  418ccf:	ins    BYTE PTR es:[edi],dx
  418cd0:	ja     0x418d28
  418cd2:	or     eax,0x3126ec19
  418cd7:	(bad)  [edx+edx*1-0x79]
  418cdb:	pop    ecx
  418cdc:	mov    eax,0x9ed5fc11
  418ce1:	mov    ebp,0x362f0d84
  418ce6:	add    ecx,ebp
  418ce8:	cld    
  418ce9:	in     al,0xfd
  418ceb:	inc    esi
  418cec:	cld    
  418ced:	mov    bh,0xc0
  418cef:	mov    ah,0x38
  418cf1:	mov    edi,0x82430d44
  418cf6:	mov    fs,WORD PTR [ebp+0x17]
  418cf9:	je     0x418cfa
  418cfb:	call   0xe8f2a934
  418d00:	xor    al,0x34
  418d02:	test   DWORD PTR [ecx],ebp
  418d04:	add    BYTE PTR [eax],al
  418d06:	pop    es
  418d07:	xor    ebx,esi
  418d09:	gs push edi
  418d0b:	and    al,0xff
  418d0d:	call   FWORD PTR [esi]
  418d0f:	adc    DWORD PTR ss:[ebp+eax*1-0x73],esi
  418d14:	dec    ebp
  418d15:	and    al,0x16
  418d17:	outs   dx,BYTE PTR ds:[esi]
  418d18:	mov    bh,bh
  418d1a:	or     DWORD PTR [edi-0x16],edi
  418d1d:	or     ch,BYTE PTR [ebx-0x2f]
  418d20:	pop    ds
  418d21:	or     BYTE PTR [esi],ch
  418d23:	jo     0x418d76
  418d25:	cld    
  418d26:	or     DWORD PTR [edi-0x78],edi
  418d29:	test   BYTE PTR [edx],dh
  418d2b:	or     BYTE PTR [edx],al
  418d2d:	add    dh,bl
  418d2f:	lds    edx,FWORD PTR [ebp-0x1]
  418d32:	jecxz  0x418d61
  418d34:	cmovo  ecx,esi
  418d37:	mov    ah,0xc0
  418d39:	jne    0x418cf2
  418d3b:	ret    
  418d3c:	cld    
  418d3d:	adc    eax,0x3c078a
  418d42:	inc    esi
  418d43:	mov    eax,0xca8e0000
  418d48:	cld    
  418d49:	adc    eax,0x3c05c2
  418d4e:	sub    eax,0x6ff8107d
  418d53:	cmc    
  418d54:	sti    
  418d55:	test   dh,cl
  418d57:	fisttp DWORD PTR [edx*4-0x1a771d32]
  418d5e:	jnp    0x418dda
  418d60:	push   eax
  418d61:	mov    edi,edx
  418d63:	mov    ecx,0x68cff8e4
  418d68:	gs add al,0x0
  418d6b:	add    BYTE PTR [esi+0x35],cl
  418d6e:	push   edx
  418d6f:	push   esi
  418d70:	mov    cl,0x8c
  418d72:	test   DWORD PTR [esi+eiz*2],esp
  418d75:	aaa    
  418d76:	add    DWORD PTR [eax],eax
  418d78:	sahf   
  418d79:	xchg   edx,eax
  418d7a:	aam    0xb8
  418d7c:	ret    0x3be2
  418d7f:	add    BYTE PTR [edi+0x46181fe1],ah
  418d85:	sub    edi,esp
  418d87:	push   DWORD PTR [edi]
  418d89:	sbb    edi,DWORD PTR [eax+eax*8+0x28]
  418d8d:	xchg   edi,eax
  418d8e:	jmp    0x795c9e91
  418d93:	inc    esp
  418d94:	push   ebx
  418d95:	adc    esi,DWORD PTR [eax-0x2c014476]
  418d9b:	add    DWORD PTR [edi],esi
  418d9d:	sbb    esi,DWORD PTR [eax-0xcd4b504]
  418da3:	aas    
  418da4:	aaa    
  418da5:	test   cl,al
  418da7:	and    eax,DWORD PTR [edi-0x62]
  418daa:	dec    ebp
  418dab:	std    
  418dac:	sub    BYTE PTR [edi+0x1b370044],dl
  418db2:	jge    0x418def
  418db4:	xlat   BYTE PTR ds:[ebx]
  418db5:	in     al,dx
  418db6:	mov    edi,0x7d105ff
  418dbb:	jae    0x418ddc
  418dbd:	inc    edi
  418dbe:	in     al,dx
  418dbf:	push   ebp
  418dc0:	mov    al,0x2f
  418dc2:	in     eax,dx
  418dc3:	cld    
  418dc4:	inc    edx
  418dc5:	mov    edi,0xe8373ff2
  418dca:	add    eax,0xf91a98ff
  418dcf:	add    BYTE PTR [eax],0x0
  418dd2:	data16 sbb al,BYTE PTR [eax]
  418dd5:	add    BYTE PTR [edx-0x70bbdeaa],bh
  418ddb:	mov    bl,0x48
  418ddd:	std    
  418dde:	js     0x418d76
  418de0:	inc    ebp
  418de1:	or     eax,0x4a3ba
  418de6:	aaa    
  418de7:	xchg   cl,al
  418de9:	and    edi,DWORD PTR [edi]
  418deb:	sahf   
  418dec:	gs adc bl,ah
  418def:	sbb    BYTE PTR [edx+0x43],dl
  418df2:	inc    ebx
  418df3:	sbb    eax,0x590c09cb
  418df8:	int3   
  418df9:	inc    ebx
  418dfa:	dec    ecx
  418dfb:	fcomip st,st(3)
  418dfd:	add    eax,ebx
  418dff:	and    BYTE PTR [edi],al
  418e01:	jae    0x418e42
  418e03:	xor    al,0x9c
  418e05:	or     bh,BYTE PTR [esi+0x23efc678]
  418e0b:	dec    ecx
  418e0c:	pop    edx
  418e0d:	ja     0x418e82
  418e0f:	pop    eax
  418e10:	mov    ds:0x7a2a13b3,al
  418e15:	hlt    
  418e16:	dec    eax
  418e17:	xor    al,0x65
  418e19:	inc    esp
  418e1a:	test   BYTE PTR [esp+ebp*4],bh
  418e1d:	or     al,0x84
  418e1f:	cmp    al,0x78
  418e21:	pop    edi
  418e22:	fisubr WORD PTR [ebx]
  418e24:	jecxz  0x418df4
  418e26:	inc    esp
  418e27:	shl    DWORD PTR ds:0x9ebb4320,0x48
  418e2e:	test   BYTE PTR [esi+eiz*2],ah
  418e31:	inc    ebx
  418e32:	dec    ebx
  418e33:	mov    BYTE PTR [edi-0x3a],ah
  418e36:	add    BYTE PTR [eax],al
  418e38:	sub    BYTE PTR [esi+esi*1],dh
  418e3b:	inc    ebx
  418e3d:	mov    DWORD PTR [edx],ecx
  418e3f:	dec    ecx
  418e40:	loop   0x418e48
  418e42:	and    BYTE PTR es:[edi+0x24],cl
  418e46:	push   ds
  418e47:	mov    ebp,0x2ee79a2
  418e4c:	sub    edi,DWORD PTR [ecx+0x65]
  418e4f:	jg     0x418ea4
  418e51:	pushf  
  418e52:	call   0x75a5c55a
  418e57:	mov    edi,0xa9927c54
  418e5c:	or     BYTE PTR [edi],0xea
  418e5f:	jg     0x418ed8
  418e61:	mov    BYTE PTR [edx-0x15d0137c],bh
  418e67:	iret   
  418e68:	xor    eax,0x63e7d50f
  418e6d:	out    0x52,eax
  418e6f:	into   
  418e70:	cmp    BYTE PTR [ebx+0xf2f1fb5],bh
  418e76:	mov    ebp,0x5c0bde7
  418e7b:	aam    0x36
  418e7d:	xor    al,0x1
  418e7f:	jmp    0x2e5b1173
  418e84:	add    DWORD PTR [ebx],esp
  418e86:	cld    
  418e87:	pushf  
  418e88:	and    al,0x10
  418e8a:	jbe    0x418e79
  418e8c:	outs   dx,DWORD PTR ds:[esi]
  418e8d:	or     DWORD PTR [ecx],0x1
  418e90:	dec    ecx
  418e91:	push   cs
  418e92:	cld    
  418e93:	push   cs
  418e94:	mov    DWORD PTR [eax+0x25],edi
  418e97:	loope  0x418e5d
  418e99:	pcmpeqw mm0,mm5
  418e9c:	add    BYTE PTR [eax],al
  418e9e:	adc    BYTE PTR [eax],dl
  418ea0:	push   ss
  418ea1:	rol    DWORD PTR [edx],0x4f
  418ea4:	add    DWORD PTR [esp+esi*2+0x41],esp
  418ea8:	xchg   dl,bh
  418eaa:	jno    0x418ebd
  418eac:	cld    
  418ead:	fiadd  WORD PTR [edi]
  418eaf:	push   ebx
  418eb0:	adc    esi,edx
  418eb2:	out    0x5a,al
  418eb4:	movaps XMMWORD PTR [ebx],xmm7
  418eb7:	jno    0x418f14
  418eb9:	and    cl,BYTE PTR [ebx+edx*1+0x5e]
  418ebd:	stos   DWORD PTR es:[edi],eax
  418ebe:	iret   
  418ebf:	push   cs
  418ec0:	push   ebp
  418ec1:	bound  ebx,QWORD PTR [edi-0x4b]
  418ec4:	in     al,dx
  418ec5:	fnsave [ebx]
  418ec7:	jae    0x418ec2
  418ec9:	ins    BYTE PTR es:[edi],dx
  418eca:	xrelease xchg DWORD PTR [edx+edx*4],ecx
  418ece:	mov    al,ds:0x359145b3
  418ed3:	mov    ebp,0xb3719145
  418ed8:	cmp    BYTE PTR ds:0x16530367,ah
  418ede:	cld    
  418edf:	dec    edx
  418ee0:	cdq    
  418ee1:	(bad)  [esi+ecx*1+0x4f]
  418ee5:	outs   dx,BYTE PTR ds:[esi]
  418ee6:	and    BYTE PTR [ecx],dl
  418ee8:	jbe    0x418f4b
  418eea:	in     al,dx
  418eeb:	add    edi,esp
  418eed:	fdivr  QWORD PTR ss:[edx+0x9]
  418ef1:	pusha  
  418ef2:	jbe    0x418ef6
  418ef4:	xchg   BYTE PTR [eax],ah
  418ef6:	test   DWORD PTR [bp+0x800],eax
  418efb:	in     eax,0xff
  418efd:	test   BYTE PTR [esi],cl
  418eff:	in     al,0x6a
  418f01:	mov    edi,0x374a0000
  418f06:	add    DWORD PTR [eax],eax
  418f08:	and    eax,0x1568787f
  418f0d:	dec    edi
  418f0e:	js     0x418f74
  418f10:	fwait
  418f11:	js     0x418f83
  418f13:	adc    al,BYTE PTR ds:0xcd0a754b
  418f19:	mov    al,bl
  418f1b:	mov    ecx,DWORD PTR [edi]
  418f1d:	push   0xffffffcc
  418f1f:	ins    DWORD PTR es:[edi],dx
  418f20:	add    DWORD PTR [edi-0x4f],esi
  418f23:	add    DWORD PTR ds:0x60f67ec8,esi
  418f29:	hlt    
  418f2a:	mov    BYTE PTR [ebp+0xa],al
  418f2d:	lea    edx,ds:0x7cb17836
  418f33:	sbb    al,BYTE PTR [eax]
  418f35:	(bad)  
  418f36:	or     al,0x95
  418f38:	sbb    esi,DWORD PTR [ebp+0x32]
  418f3b:	leave  
  418f3c:	ss retf 
  418f3e:	cld    
  418f3f:	packssdw mm7,QWORD PTR [eax+0x2]
  418f43:	enter  0x47cd,0x3a
  418f47:	iret   
  418f48:	arpl   WORD PTR [edx],bp
  418f4a:	mov    dh,BYTE PTR [ebp-0x5a]
  418f4d:	cmp    dh,dl
  418f4f:	je     0x418ef7
  418f51:	ret    
  418f52:	push   eax
  418f53:	push   esi
  418f54:	mov    dh,0xda
  418f56:	mov    bh,bh
  418f58:	shl    DWORD PTR [edx],0xef
  418f5b:	xor    BYTE PTR [ebx],0x75
  418f5e:	add    DWORD PTR [edi+eax*4-0x15],esi
  418f62:	push   edi
  418f63:	pop    ecx
  418f64:	sub    BYTE PTR [edi+0x830b],cl
  418f6a:	cwde   
  418f6b:	xor    edi,esi
  418f6d:	jne    0x418f45
  418f6f:	imul   ebp,DWORD PTR [ebx-0x15867401],0x452937a7
  418f79:	pop    ebp
  418f7a:	icebp  
  418f7b:	push   ebx
  418f7c:	inc    edx
  418f7d:	add    al,0x37
  418f7f:	jecxz  0x418fae
  418f81:	inc    DWORD PTR [eax+0x1b]
  418f84:	fadd   DWORD PTR [edi+0x55ffda63]
  418f8a:	xor    al,ch
  418f8c:	out    dx,eax
  418f8d:	adc    eax,0xc47f1b77
  418f92:	xor    eax,ebp
  418f94:	push   edi
  418f95:	shl    DWORD PTR ds:0xf989001b,1
  418f9b:	pop    ecx
  418f9c:	mov    cl,0x88
  418f9e:	sbb    ebx,DWORD PTR [edx-0x5a9bd7ac]
  418fa4:	test   esi,edx
  418fa6:	sbb    eax,DWORD PTR ss:[eax]
  418fa9:	push   esi
  418faa:	and    al,0x22
  418fac:	scas   eax,DWORD PTR es:[edi]
  418fad:	push   esp
  418fae:	call   0x775777c2
  418fb3:	sbb    edi,DWORD PTR [ecx+0x43]
  418fb6:	inc    ebx
  418fb7:	xchg   esp,eax
  418fb8:	mov    esi,0xf8d6b47b
  418fbd:	mov    dh,BYTE PTR [eax+0x1f]
  418fc0:	mov    al,0x86
  418fc2:	or     bl,ah
  418fc4:	inc    ebx
  418fc5:	mov    dl,0x37
  418fc7:	sbb    esi,DWORD PTR [ebx-0x7b]
  418fca:	mov    bh,0x1a
  418fcc:	add    BYTE PTR [eax],al
  418fce:	add    BYTE PTR [eax],al
  418fd0:	pop    es
  418fd1:	mov    ds:0x1b36823e,eax
  418fd6:	mov    cl,0x69
  418fd8:	dec    edi
  418fd9:	cwde   
  418fda:	mov    esp,0x10b2e7d7
  418fdf:	jnp    0x418f69
  418fe1:	mov    ch,0xd6
  418fe3:	daa    
  418fe4:	mov    dl,0x5f
  418fe6:	sub    eax,0x56ab08b
  418feb:	add    BYTE PTR [edi],dh
  418fed:	sub    al,0x5d
  418fef:	xchg   edx,eax
  418ff0:	mov    al,0x33
  418ff2:	arpl   WORD PTR [ebp-0x33],ax
  418ff5:	daa    
  418ff6:	pop    ebx
  418ff7:	iret   
  418ff8:	xor    BYTE PTR [edi+0xc50729a],bh
  418ffe:	jmp    0x815c:0x42fbb7b0
  419005:	cdq    
  419006:	cmp    eax,DWORD PTR [ebp-0x33]
  419009:	daa    
  41900a:	xor    ecx,edi
  41900c:	cmp    al,0xb9
  41900e:	jb     0x418fae
  419010:	sub    BYTE PTR [edx+ebp*8],cl
  419013:	mov    al,0xb7
  419015:	cld    
  419016:	sbb    bl,BYTE PTR [ebp+ecx*8-0x62]
  41901a:	adc    eax,DWORD PTR [ebp-0x63]
  41901d:	and    BYTE PTR [ebx],cl
  41901f:	iret   
  419020:	cmp    BYTE PTR [ecx+0xc008a3a],bh
  419026:	jmp    0xc95b:0xf2fcb7b0
  41902d:	sahf   
  41902e:	jmp    0x419074
  419030:	test   eax,0x3e30b
  419035:	add    BYTE PTR [edi],dh
  419037:	sahf   
  419038:	jmp    0x985e81b5
  41903d:	(bad)  
  41903e:	ror    DWORD PTR [ebx],cl
  419040:	fisttp DWORD PTR [edi+ebp*8-0x6871662]
  419047:	cmc    
  419048:	(bad)  
  419049:	repz rcl bh,1
  41904c:	xor    eax,0x733bb245
  419051:	inc    ebx
  419052:	div    DWORD PTR ds:[eax+0x7c]
  419056:	jno    0x41908d
  419058:	jmp    0x9f3d:0x5f350d03
  41905f:	mov    ebx,0x3b8a450d
  419064:	cmp    ebp,DWORD PTR [ebx]
  419066:	or     eax,0xb83d6f35
  41906b:	pop    ss
  41906c:	add    ecx,ebx
  41906e:	or     al,0xb4
  419070:	jl     0x4190e0
  419072:	repz cmp BYTE PTR [ecx+ebp*1+0x705af45f],dh
  41907a:	frstpm(287 only) 
  41907c:	add    ecx,ebp
  41907e:	xor    al,0xbd
  419080:	ret    
  419081:	mov    dl,0xd
  419083:	not    BYTE PTR [eax]
  419085:	jmp    0x992e4d1b
  41908a:	mov    cl,cl
  41908c:	shr    al,cl
  41908e:	xor    al,0x34
  419090:	push   ebx
  419091:	ret    
  419092:	xor    al,0x61
  419094:	cld    
  419095:	cld    
  419096:	or     al,0x21
  419098:	inc    ecx
  419099:	jmp    0xeff8909e
  41909e:	or     al,0x60
  4190a0:	inc    ebx
  4190a1:	mov    ebp,0x34344e7f
  4190a6:	add    DWORD PTR [ebx+ecx*8+0x36],esi
  4190aa:	addr16 mov ebp,0x917d717d
  4190b0:	imul   esp,DWORD PTR [ebp+0x44],0x19802d64
  4190b7:	ins    BYTE PTR es:[edi],dx
  4190b8:	mov    DWORD PTR [edi+0x7fbfa304],eax
  4190be:	inc    ecx
  4190bf:	jmp    0x5c905b8d
  4190c4:	out    dx,al
  4190c5:	push   cs
  4190c6:	dec    edi
  4190c7:	push   ebx
  4190c8:	aaa    
  4190c9:	outs   dx,BYTE PTR ds:[esi]
  4190ca:	jmp    0xfc4b725f
  4190cf:	bound  ebp,QWORD PTR [esi+0x3329133a]
  4190d5:	sahf   
  4190d6:	adc    DWORD PTR [eax+edi*4-0xc],esi
  4190da:	add    cl,ch
  4190dc:	xor    al,0x64
  4190de:	mov    gs,WORD PTR [esi-0x45]
  4190e1:	xor    eax,DWORD PTR [ecx]
  4190e3:	jmp    0x114984c
  4190e8:	es xor bh,ah
  4190eb:	dec    DWORD PTR [esi+0x5ed381a3]
  4190f1:	add    DWORD PTR ss:[eax+0xb],edx
  4190f5:	mov    edi,0x364e0090
  4190fa:	push   ecx
  4190fb:	jmp    DWORD PTR [eax]
  4190fd:	mov    bl,0xc4
  4190ff:	sbb    BYTE PTR [eax],al
  419101:	add    BYTE PTR [edx+eiz*1-0x78],dh
  419105:	add    DWORD PTR [ebx],0x31
  419108:	add    DWORD PTR [eax],eax
  41910a:	sahf   
  41910b:	mov    ds:0x364f92b5,eax
  419110:	add    DWORD PTR [edx+0x1e],ebp
  419113:	mov    bl,0xc8
  419115:	push   DWORD PTR [esi-0x7f]
  419118:	call   FWORD PTR fs:[ecx-0x26]
  41911c:	jge    0x4424af
  419122:	push   ds
  419123:	out    0x86,al
  419125:	mov    bh,0x70
  419127:	das    
  419128:	add    DWORD PTR [eax],eax
  41912a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41912b:	xor    eax,0x5df9c882
  419130:	xchg   edi,eax
  419131:	imul   ebp,ecx,0x8b146776
  419137:	mov    cl,0xdf
  419139:	add    eax,0x8d5135ce
  41913e:	rol    DWORD PTR [edi-0x28210004],0xfb
  419145:	adc    BYTE PTR [esi+0x6781e976],0x75
  41914c:	(bad)  
  41914d:	mov    esi,0x17679
  419152:	hlt    
  419153:	cs mov al,dh
  419156:	jbe    0x41912c
  419158:	jns    0x419159
  41915a:	fldenv [esi]
  41915c:	mov    dh,0xc0
  41915e:	iret   
  41915f:	push   ebp
  419160:	adc    DWORD PTR [ecx+0x6a415837],ecx
  419166:	add    BYTE PTR [eax],al
  419168:	ss xchg esi,eax
  41916a:	dec    edx
  41916b:	call   0xfd81c81c
  419170:	sub    BYTE PTR [edx+0x40],al
  419173:	or     edx,edi
  419175:	jle    0x419159
  419177:	xchg   BYTE PTR [eax+0x370004a9],dh
  41917d:	xchg   BYTE PTR [ebx+0x1b30fb],al
  419183:	xchg   DWORD PTR [eax+0x3700054d],edi
  419189:	xchg   esi,eax
  41918a:	inc    edi
  41918b:	(bad)  
  41918c:	je     0x419171
  41918e:	pop    ecx
  41918f:	(bad)  
  419190:	cmp    BYTE PTR [ebx],bl
  419192:	scas   al,BYTE PTR es:[edi]
  419193:	push   DWORD PTR [ecx]
  419195:	(bad)  
  419196:	jecxz  0x4191a3
  419198:	sub    al,ah
  41919a:	pop    ss
  41919b:	push   ss
  41919c:	ja     0x4191b9
  41919e:	add    esp,0x2b
  4191a1:	pop    ebp
  4191a2:	add    al,0x0
  4191a4:	push   0xffffff96
  4191a6:	sub    al,0x7f
  4191a8:	sbb    ebp,DWORD PTR [edi+0x0]
  4191ab:	add    BYTE PTR [edi],dh
  4191ad:	scas   al,BYTE PTR es:[edi]
  4191ae:	mov    bl,al
  4191b0:	popa   
  4191b1:	xchg   BYTE PTR ds:0xb91dec81,dh
  4191b7:	or     ebx,edi
  4191b9:	sti    
  4191ba:	cmp    ch,bh
  4191bc:	loopne 0x41920c
  4191be:	or     DWORD PTR [ecx+0x44],esi
  4191c1:	add    ebx,DWORD PTR gs:[ecx-0x46]
  4191c5:	lds    edi,FWORD PTR [eax-0x1a4be5]
  4191cb:	jae    0x4191cd
  4191cd:	add    BYTE PTR [eax],dh
  4191cf:	jno    0x4191ed
  4191d1:	cmp    DWORD PTR [ebp+ebx*1-0x673de83f],0x1aa8ff7b
  4191dc:	sub    eax,0x6c33b211
  4191e1:	push   0xffffff98
  4191e3:	or     dl,ch
  4191e5:	sub    al,0x3e
  4191e7:	mov    bh,0x6b
  4191e9:	xchg   esi,eax
  4191ea:	mov    BYTE PTR [eax],cl
  4191ec:	jmp    0xd40:0x2cbd362c
  4191f3:	and    BYTE PTR [edx],bl
  4191f5:	scas   al,BYTE PTR es:[edi]
  4191f6:	jo     0x4191af
  4191f8:	cld    
  4191f9:	push   edi
  4191fa:	mov    dh,0xfb
  4191fc:	push   0x2c
  4191fe:	ficomp DWORD PTR [edx+0xcb64163]
  419204:	call   0xdcf8d3bf
  419209:	outs   dx,DWORD PTR ds:[esi]
  41920a:	(bad)  
  41920b:	or     al,0xea
  41920d:	add    esi,DWORD PTR [edi]
  41920f:	sbb    al,0xe4
  419211:	test   DWORD PTR [eax],edi
  419213:	or     BYTE PTR [edi+0x62],ch
  419216:	push   ds
  419217:	daa    
  419218:	addr16 cmp eax,0x8ed68136
  41921e:	in     al,0x68
  419220:	and    eax,DWORD PTR [ecx+0x1a]
  419223:	int    0x1d
  419225:	add    al,0x37
  419227:	xor    al,0x2
  419229:	pop    es
  41922a:	mov    ch,0x35
  41922c:	jmp    0x7c:0xed1be18c
  419233:	add    BYTE PTR [edi-0x75fc591e],cl
  419239:	mov    ecx,0xacdf57ac
  41923e:	in     eax,dx
  41923f:	inc    eax
  419240:	loop   0x4192a8
  419242:	aas    
  419243:	mov    bh,dh
  419245:	and    ebp,0x618e90f4
  41924b:	or     al,dh
  41924d:	repz xor al,0x8d
  419250:	shl    DWORD PTR [ebp+0x7b80fd5],cl
  419256:	jmp    0x34e9:0xa435d9
  41925d:	xor    al,0x51
  41925f:	pop    esp
  419260:	sub    DWORD PTR [ebx+edi*8],ecx
  419263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419264:	neg    DWORD PTR [ebx]
  419266:	or     al,0x64
  419268:	test   DWORD PTR [eax],0x34271480
  41926e:	jne    0x419252
  419270:	mov    bl,0x63
  419272:	or     eax,0xe92fc172
  419277:	idiv   BYTE PTR [esi-0x3e803f7]
  41927d:	icebp  
  41927e:	or     cl,ch
  419280:	mov    DWORD PTR [esp+ebp*8-0x7df3ef96],edi
  419287:	dec    ebp
  419288:	sbb    al,0x2e
  41928a:	add    ecx,ebp
  41928c:	outs   dx,BYTE PTR ds:[esi]
  41928d:	pusha  
  41928e:	mov    cs,WORD PTR [ebp-0x16fdc8a8]
  419294:	xor    al,0x1c
  419296:	lds    edi,FWORD PTR [eax+0x0]
  419299:	add    BYTE PTR [esp+esi*1],dh
  41929c:	mov    gs,WORD PTR [ebp+0x10]
  41929f:	ja     0x4192a3
  4192a1:	jmp    0x9dcff6da
  4192a6:	adc    BYTE PTR [ebx],bh
  4192a8:	jmp    0xfc4a4adc
  4192ad:	(bad)
  4192b2:	xor    eax,0xfa110134
  4192b7:	mov    al,0xfb
  4192b9:	(bad)  
  4192ba:	adc    BYTE PTR [ecx-0x78],ch
  4192bd:	or     al,0x9
  4192bf:	cmc    
  4192c0:	add    al,0xe9
  4192c2:	add    eax,0x8d2e4bba
  4192c7:	dec    edx
  4192c8:	pop    ecx
  4192c9:	ins    BYTE PTR es:[edi],dx
  4192ca:	in     al,0x32
  4192cc:	xchg   BYTE PTR [eax-0x4479e271],ah
  4192d2:	jle    0x419303
  4192d4:	mov    bh,0x0
  4192d6:	pop    edx
  4192d7:	int3   
  4192d8:	cmp    eax,DWORD PTR [eax]
  4192da:	lods   eax,DWORD PTR ds:[esi]
  4192db:	jb     0x41932c
  4192dd:	lea    ecx,[edx+0x1c]
  4192e0:	add    BYTE PTR [edx-0xc],dl
  4192e3:	xor    edx,DWORD PTR [edi-0x18]
  4192e6:	mov    bl,0xdf
  4192e8:	cli    
  4192e9:	inc    DWORD PTR ds:0x155677f3
  4192ef:	or     eax,0x304e160c
  4192f4:	test   BYTE PTR [edi+0x12ff1],al
  4192fa:	inc    esp
  4192fb:	and    BYTE PTR [eax-0x21ffff7d],cl
  419301:	das    
  419302:	add    DWORD PTR [eax],eax
  419304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419306:	test   ebx,eax
  419308:	dec    esi
  419309:	xor    al,BYTE PTR [ecx]
  41930b:	push   eax
  41930c:	icebp  
  41930d:	pop    ebp
  41930e:	imul   eax,DWORD PTR [edx],0x8d01325f
  419314:	int    0x9f
  419316:	add    BYTE PTR [eax],al
  419318:	dec    esi
  419319:	loop   0x4192a1
  41931b:	xchg   DWORD PTR [ebp+0x30],ecx
  41931e:	add    DWORD PTR [eax],eax
  419320:	into   
  419321:	inc    esi
  419322:	rol    DWORD PTR [ebx+0x469285a],cl
  419328:	rdmsr  
  41932a:	add    DWORD PTR [ebp-0x45d63],ecx
  419330:	push   ds
  419331:	loop   0x4192b9
  419333:	mov    bh,0x4b
  419335:	das    
  419336:	add    DWORD PTR [eax],eax
  419338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419339:	xor    DWORD PTR [edx+0x2e59f1c8],eax
  41933f:	push   0x46946e1
  419344:	iret   
  419345:	xor    DWORD PTR [ecx],eax
  419347:	lea    ecx,[ebp-0x71]
  41934a:	cld    
  41934b:	(bad)  
  41934c:	fsubrp st(1),st
  41934e:	xchg   BYTE PTR [edi-0x13fc9],dh
  419354:	aaa    
  419355:	jno    0x41935c
  419357:	sub    edi,0x1f1127ee
  41935d:	(bad)  
  41935e:	cmp    ch,BYTE PTR [eax+0x33]
  419361:	sbb    al,0x0
  419363:	add    BYTE PTR [eax],al
  419365:	add    BYTE PTR [edx-0x67008566],dh
  41936b:	sbb    edx,eax
  41936d:	mov    cl,al
  41936f:	mov    al,0x8
  419371:	add    BYTE PTR [edi],dh
  419373:	xor    DWORD PTR ds:0x27b66f81,eax
  419379:	cmc    
  41937a:	adc    BYTE PTR [esi-0x564b76c6],ch
  419380:	add    al,0x0
  419382:	aaa    
  419383:	xchg   esp,eax
  419384:	cmp    ebx,0x38
  419387:	sbb    eax,DWORD PTR [eax]
  419389:	pop    esi
  41938a:	(bad)  
  41938b:	pop    ecx
  41938c:	xchg   DWORD PTR [eax],ecx
  41938e:	add    al,0x49
  419390:	(bad)  
  419391:	cmp    BYTE PTR [esi-0x19],0xe
  419395:	xor    DWORD PTR [edi+0xf],0xc6fc3087
  41939c:	jecxz  0x4193a5
  41939e:	stos   DWORD PTR es:[edi],eax
  41939f:	adc    eax,0x16f780c2
  4193a4:	test   esi,0xbff24ba5
  4193aa:	jns    0x419405
  4193ac:	add    al,0x0
  4193ae:	(bad)  
  4193af:	sbb    esp,DWORD PTR [edi]
  4193b1:	clc    
  4193b2:	bound  edx,QWORD PTR [edx-0x18ec80d4]
  4193b8:	add    al,0x0
  4193ba:	aaa    
  4193bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193bc:	out    dx,al
  4193bd:	cmc    
  4193be:	mov    esp,0xf1390fcf
  4193c3:	test   cl,dl
  4193c5:	sbb    bh,0x15
  4193c8:	mov    bl,0x12
  4193ca:	add    BYTE PTR [eax],al
  4193cc:	and    al,0x34
  4193ce:	mov    eax,0xea30df7b
  4193d3:	add    eax,edx
  4193d5:	add    al,BYTE PTR [ecx+0x52]
  4193d8:	iret   
  4193d9:	xor    dl,ch
  4193db:	add    esi,DWORD PTR [eax+0x48bc26e]
  4193e1:	or     BYTE PTR [edi-0x39],ch
  4193e4:	cmp    BYTE PTR [ebx+edi*4+0x5c],dh
  4193e8:	ds hlt 
  4193ea:	pop    esp
  4193eb:	iret   
  4193ec:	mov    al,ds:0xead4a950
  4193f1:	pop    ebp
  4193f2:	ins    DWORD PTR es:[edi],dx
  4193f3:	xchg   DWORD PTR [ebx-0x18c26cfb],eax
  4193f9:	pop    ebp
  4193fa:	mov    ds:0x83058387,eax
  4193ff:	cmp    eax,0x3ea0470
  419404:	mov    al,0xc6
  419406:	jno    0x419446
  419408:	bound  eax,QWORD PTR [ebx+ebp*2]
  41940b:	pop    ss
  41940c:	jnp    0x41942c
  41940e:	stos   BYTE PTR es:[edi],al
  41940f:	add    esi,DWORD PTR [esi+0x1eb6e90b]
  419415:	pop    esi
  419416:	push   ebx
  419417:	mov    bh,0x2c
  419419:	add    eax,0x4e20bd5
  41941e:	fnsave [edi]
  419420:	inc    esp
  419421:	je     0x41940d
  419423:	clc    
  419424:	repnz adc dl,0xea
  419428:	jne    0x41945a
  41942a:	jmp    0x9d7ec4f5
  41942f:	sldt   WORD PTR [eax]
  419432:	xchg   edx,eax
  419433:	mov    bl,0xd6
  419435:	inc    ebx
  419436:	inc    eax
  419437:	mov    esi,esp
  419439:	or     al,0xab
  41943b:	hlt    
  41943c:	stos   DWORD PTR es:[edi],eax
  41943d:	dec    edx
  41943e:	cmc    
  41943f:	xor    dl,ch
  419441:	icebp  
  419442:	mov    al,0xf
  419444:	repz (bad) 
  419446:	mov    edi,0xb980110
  41944b:	or     eax,0x33a1ee19
  419450:	mov    BYTE PTR [ebx+eax*2+0x1],ah
  419454:	dec    esi
  419455:	in     eax,dx
  419456:	sahf   
  419457:	add    cl,BYTE PTR [ebp-0x169bfdd4]
  41945d:	ss cli 
  41945f:	add    ah,bh
  419461:	ins    DWORD PTR es:[edi],dx
  419462:	hlt    
  419463:	xchg   DWORD PTR [esi],ecx
  419465:	push   0xffffffe9
  419467:	das    
  419468:	add    DWORD PTR [edx*2-0x13f1fe3c],edi
  41946f:	cmc    
  419470:	or     al,0xe9
  419472:	xchg   bl,al
  419474:	out    0x96,eax
  419476:	fiadd  WORD PTR [ebx]
  419478:	sti    
  419479:	sbb    eax,0x15fc338f
  41947e:	(bad)  
  41947f:	xor    edi,esp
  419481:	std    
  419482:	pop    eax
  419483:	xor    edi,esp
  419485:	aam    0x28
  419487:	daa    
  419488:	inc    ecx
  419489:	jmp    0xdd670bed
  41948e:	sub    ebp,DWORD PTR [eax+0x34402bc0]
  419494:	or     al,0x96
  419496:	add    BYTE PTR [eax],al
  419498:	xor    ebp,DWORD PTR [edx+0x67]
  41949b:	out    dx,eax
  41949c:	mov    es,WORD PTR [edx]
  41949e:	dec    esp
  41949f:	dec    esi
  4194a0:	and    DWORD PTR [eax],edi
  4194a2:	adc    ebp,DWORD PTR [ecx+0x6af0ad34]
  4194a8:	push   0x1
  4194aa:	jne    0x4194ba
  4194ac:	es ret 
  4194ae:	bound  ebp,QWORD PTR [edx+0x1b]
  4194b1:	xor    eax,0x6c747c0c
  4194b6:	or     BYTE PTR [ecx],0x40
  4194b9:	mov    ch,0xc0
  4194bb:	cmc    
  4194bc:	in     al,0x67
  4194be:	push   ebx
  4194bf:	push   cs
  4194c0:	and    DWORD PTR [ebp+edx*1-0x7fc96200],edi
  4194c7:	shl    BYTE PTR [edx+0x2d],0x53
  4194cb:	inc    DWORD PTR [ebx]
  4194cd:	aas    
  4194ce:	adc    BYTE PTR [eax-0x32],al
  4194d1:	mov    bl,0xca
  4194d3:	inc    DWORD PTR [ebp+0x76]
  4194d6:	pop    ebx
  4194d7:	ret    
  4194d8:	add    esi,DWORD PTR [ebx-0x1500ae14]
  4194de:	push   esp
  4194df:	data16 (bad) 
  4194e1:	ja     0x4194ec
  4194e3:	rdtsc  
  4194e5:	pusha  
  4194e6:	xor    bh,bh
  4194e8:	sbb    esi,ebp
  4194ea:	add    edx,DWORD PTR [eax+0x41]
  4194ed:	out    0xfc,eax
  4194ef:	jne    0x419487
  4194f1:	scas   eax,DWORD PTR es:[edi]
  4194f2:	ja     0x4194f0
  4194f4:	pop    es
  4194f5:	mov    ebp,0xa683fff3
  4194fa:	cmovo  eax,DWORD PTR [eax]
  4194fd:	add    BYTE PTR [esi-0x698b3f4d],cl
  419503:	mov    ecx,0xb9c7ffc8
  419508:	add    BYTE PTR [eax],al
  41950a:	pop    esi
  41950b:	in     al,0x88
  41950d:	jne    0x419565
  41950f:	push   ecx
  419510:	sub    ecx,DWORD PTR [ebx-0x77dcbf0]
  419516:	pop    esp
  419517:	ret    
  419518:	or     edi,edi
  41951a:	pusha  
  41951b:	es (bad) 
  41951d:	jbe    0x419565
  41951f:	dec    esi
  419520:	in     eax,dx
  419521:	test   ecx,ebp
  419523:	test   BYTE PTR ds:[ebp+0x7a],al
  419527:	push   ecx
  419528:	adc    al,BYTE PTR [ebx+0xe702576]
  41952e:	imul   eax,esi,0x1de0ff0b
  419534:	jmp    0xfe7f3910
  419539:	mov    ebx,edx
  41953b:	cmp    eax,0x737768a
  419540:	sti    
  419541:	hlt    
  419542:	and    BYTE PTR [ecx],0x38
  419545:	jae    0x419586
  419547:	cmp    dl,BYTE PTR [edx]
  419549:	call   0x89416090
  41954e:	jp     0x419557
  419550:	or     esi,0xffffffd8
  419553:	(bad)  
  419554:	ds je  0x419599
  419557:	xchg   BYTE PTR [eax],bh
  419559:	mov    si,0x373
  41955d:	call   0xfd787f61
  419562:	add    BYTE PTR [eax],al
  419564:	lods   al,BYTE PTR ds:[esi]
  419565:	fisttp DWORD PTR [edx+0x3790af7b]
  41956b:	je     0x4195b4
  41956d:	mov    ?,WORD PTR [edx]
  41956f:	std    
  419570:	sub    dl,BYTE PTR [esi]
  419572:	mov    ds:0x280cf886,al
  419577:	pop    ds
  419578:	nop
  419579:	fidiv  DWORD PTR [esi]
  41957b:	mov    DWORD PTR [edi-0x70044f5e],eax
  419581:	jmp    0x419503
  419583:	std    
  419584:	js     0x419538
  419586:	mov    al,0xf7
  419588:	pop    edi
  419589:	adc    eax,DWORD PTR [ecx+0x428668fd]
  41958f:	pop    esi
  419590:	add    BYTE PTR [esi],ah
  419592:	dec    esi
  419593:	ret    0xb33
  419596:	rcl    BYTE PTR [esp+edi*4-0x6d],cl
  41959a:	pop    es
  41959b:	mov    ch,0x30
  41959d:	in     eax,0x1
  41959f:	push   0x36
  4195a1:	mov    ebx,0x9331336
  4195a6:	sar    bh,0xbd
  4195a9:	cmp    al,BYTE PTR [ebx-0x3d38d702]
  4195af:	xor    bh,dh
  4195b1:	lock cmp BYTE PTR ds:0xc090e235,0x7f
  4195b9:	xor    al,0x67
  4195bb:	and    eax,DWORD PTR [ebx]
  4195bd:	mov    ch,0x29
  4195bf:	pop    ss
  4195c0:	imul   edi,DWORD PTR [si+0x243a],0xc3f4dc
  4195c9:	add    al,dh
  4195cb:	mov    bh,0x29
  4195cd:	mov    al,0x3d
  4195cf:	mov    gs,ecx
  4195d1:	shl    ebx,1
  4195d3:	es dec edx
  4195d5:	adc    BYTE PTR [edi+0x34],dh
  4195d8:	gs inc ebx
  4195da:	dec    ebx
  4195db:	sbb    esp,ebx
  4195dd:	getsec 
  4195df:	sub    ch,BYTE PTR [edx]
  4195e1:	add    al,0x69
  4195e3:	lods   eax,DWORD PTR ds:[esi]
  4195e4:	sar    DWORD PTR [ecx],1
  4195e6:	and    al,0xfc
  4195e8:	hlt    
  4195e9:	ret    
  4195ea:	mov    al,0x69
  4195ec:	ret    
  4195ed:	pandn  mm4,QWORD PTR [esi]
  4195f0:	sub    al,BYTE PTR [esi+esi*4]
  4195f3:	icebp  
  4195f4:	mov    dl,0xd9
  4195f6:	scas   eax,DWORD PTR es:[edi]
  4195f7:	stc    
  4195f8:	or     eax,DWORD PTR [ebp-0x1c]
  4195fb:	scas   al,BYTE PTR es:[edi]
  4195fc:	adc    eax,0x8db2bce0
  419601:	adc    al,0x34
  419603:	xor    al,0xea
  419605:	shl    ebx,1
  419607:	lods   al,BYTE PTR ds:[esi]
  419608:	int3   
  419609:	push   edi
  41960a:	inc    esp
  41960b:	je     0x4195f7
  41960d:	hlt    
  41960e:	bound  ecx,QWORD PTR [eax*1-0x4e7c1b75]
  419615:	outs   dx,BYTE PTR ds:[esi]
  419616:	rol    DWORD PTR [eax],cl
  419618:	imul   edi,DWORD PTR [ecx],0xffffffc9
  41961b:	pop    ebp
  41961c:	outs   dx,DWORD PTR ds:[esi]
  41961d:	mov    edi,0x7f65acd8
  419622:	iret   
  419623:	add    BYTE PTR [ebx+0x39],dl
  419626:	(bad)  
  419627:	hlt    
  419628:	aam    0xb
  41962a:	mov    esi,0x8ac671
  41962f:	add    BYTE PTR [eax+edx*4+0x4f],bh
  419633:	add    eax,0xc50161b8
  419638:	push   es
  419639:	cwde   
  41963a:	add    ebp,esp
  41963c:	xor    al,0x34
  41963e:	mov    ?,WORD PTR [edi+edx*8-0x4]
  419642:	sti    
  419643:	push   ds
  419644:	in     al,0x6f
  419646:	cld    
  419647:	cld    
  419648:	dec    eax
  419649:	and    eax,DWORD PTR [ecx-0x17]
  41964c:	mov    ebp,0x2b6a6973
  419651:	push   DWORD PTR [edi-0x6b]
  419654:	push   es
  419655:	jo     0x4195e5
  419657:	ins    BYTE PTR es:[edi],dx
  419658:	xchg   edi,eax
  419659:	cld    
  41965a:	sti    
  41965b:	out    dx,al
  41965c:	in     al,0x0
  41965e:	jbe    0x4196b5
  419660:	push   cs
  419661:	and    edi,ebp
  419663:	hlt    
  419664:	hlt    
  419665:	push   DWORD PTR [esi]
  419667:	sub    al,0x8b
  419669:	cmp    BYTE PTR [esi],0xce
  41966c:	icebp  
  41966d:	(bad)
  419671:	cmp    al,0x86
  419673:	inc    ebp
  419674:	pop    esi
  419675:	add    esp,edi
  419677:	cmp    edx,DWORD PTR ds:0x652d45ad
  41967d:	imul   ecx,DWORD PTR [edx-0x3ff2f94],0x85aa669e
  419687:	or     eax,0x39fc013e
  41968c:	test   eax,edi
  41968e:	test   DWORD PTR ds:0xebfc012e,ecx
  419694:	add    BYTE PTR [eax],al
  419696:	xor    al,0x34
  419698:	add    DWORD PTR [eax-0x3f],esp
  41969b:	mov    esp,?
  41969d:	outs   dx,BYTE PTR ds:[esi]
  41969e:	vmfunc 
  4196a1:	push   0xc
  4196a3:	dec    DWORD PTR [edx]
  4196a5:	ins    BYTE PTR es:[edi],dx
  4196a6:	cwde   
  4196a7:	add    ah,bh
  4196a9:	push   esi
  4196aa:	pop    edi
  4196ab:	popa   
  4196ac:	and    BYTE PTR [eax+eiz*8],0xf5
  4196b0:	mov    esi,0x50331a00
  4196b5:	mov    esi,DWORD PTR [edx-0x4e]
  4196b8:	in     al,dx
  4196b9:	or     al,0xf
  4196bb:	xor    eax,DWORD PTR [ecx]
  4196bd:	push   ebx
  4196be:	xchg   ebp,eax
  4196bf:	out    0x3,al
  4196c1:	push   esi
  4196c2:	test   DWORD PTR [ebx-0x76],eax
  4196c5:	inc    ebp
  4196c6:	adc    dh,BYTE PTR [esi+0x3a8d014a]
  4196cc:	inc    ecx
  4196cd:	jae    0x419696
  4196cf:	jge    0x419692
  4196d1:	je     0x4196a9
  4196d3:	pop    es
  4196d4:	sar    BYTE PTR [ebx+0x13846],cl
  4196da:	fld    DWORD PTR [edx-0x76]
  4196dd:	pop    ebp
  4196de:	(bad)  
  4196df:	leave  
  4196e0:	shr    eax,1
  4196e2:	fnsave [edx]
  4196e4:	add    DWORD PTR [ecx+0x5584401b],ecx
  4196ea:	loop   0x4196b5
  4196ec:	call   DWORD PTR [edx+0x13]
  4196ef:	mov    ch,0xf8
  4196f1:	(bad)  
  4196f2:	jno    0x41973a
  4196f4:	push   ecx
  4196f5:	mov    DWORD PTR [ebx],edx
  4196f7:	inc    esp
  4196f8:	sti    
  4196f9:	inc    DWORD PTR [eax]
  4196fb:	add    cl,ah
  4196fd:	dec    edi
  4196fe:	out    0x83,eax
  419700:	loope  0x419748
  419702:	xor    dh,0x2a
  419705:	and    eax,0x57cfc68a
  41970a:	dec    DWORD PTR [edi-0x5f]
  41970d:	les    ecx,FWORD PTR [ebx]
  41970f:	(bad)  
  419710:	fstp   TBYTE PTR [ebx]
  419712:	sti    
  419713:	push   DWORD PTR [ecx-0x322e1c19]
  419719:	inc    esi
  41971a:	(bad)  
  41971b:	xor    ecx,DWORD PTR [esi-0xcf3c106]
  419721:	in     al,dx
  419722:	repz sbb ebx,DWORD PTR [esi]
  419725:	adc    edi,DWORD PTR [ebx+0x67326450]
  41972b:	add    BYTE PTR [edi],dh
  41972d:	cwde   
  41972e:	xor    ah,0x31
  419731:	outs   dx,DWORD PTR ds:[esi]
  419732:	xor    al,0x50
  419734:	popf   
  419735:	or     esi,DWORD PTR [ebx]
  419737:	adc    eax,DWORD PTR [ebx]
  419739:	jmp    0x4bf596fd
  41973e:	mov    dl,0x13
  419740:	lahf   
  419741:	lahf   
  419742:	(bad)  
  419744:	or     BYTE PTR [edi+0x12],dl
  419747:	test   al,0x2a
  419749:	retf   
  41974a:	inc    DWORD PTR [eax+0x58d326ef]
  419750:	dec    BYTE PTR [ecx+0x9]
  419753:	add    BYTE PTR [ebx+esi*1-0x451a8bcc],dh
  41975a:	sub    eax,0x8a3a23fd
  41975f:	add    DWORD PTR [eax],0x0
  419762:	retf   
  419763:	or     eax,0x58dffd33
  419768:	cmp    ebp,edi
  41976a:	rcl    BYTE PTR [edi+0x4d2f7340],0x80
  419771:	(bad)  
  419772:	ss pop ecx
  419774:	sub    eax,0xfc8281e9
  419779:	mov    al,0x8c
  41977b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41977c:	ror    BYTE PTR [eax+0xbb0c68b],1
  419782:	inc    esp
  419783:	retf   
  419784:	test   eax,0xd2089ff
  419789:	inc    eax
  41978a:	(bad)  
  41978b:	loope  0x4197bf
  41978d:	std    
  41978e:	js     0x41971a
  419790:	cmp    ch,bh
  419792:	jmp    0x41979a
  419794:	mov    DWORD PTR [ebx+0x3b],ecx
  419797:	sbb    al,0xa7
  419799:	push   eax
  41979b:	aad    0xc0
  41979d:	or     esi,DWORD PTR [edi+0x5000000b]
  4197a3:	call   0x3438ab3b
  4197a8:	jmp    0x3982:0xea2c76d8
  4197af:	std    
  4197b0:	fst    QWORD PTR [ebx]
  4197b2:	popf   
  4197b3:	xor    dh,BYTE PTR [esi+esi*1-0x3c230fbc]
  4197ba:	and    BYTE PTR [edi+0x3b],ah
  4197bd:	adc    BYTE PTR [edi],bl
  4197bf:	daa    
  4197c0:	stos   BYTE PTR es:[edi],al
  4197c1:	add    esi,esi
  4197c3:	sub    al,0x73
  4197c5:	std    
  4197c6:	add    BYTE PTR [eax],al
  4197c8:	arpl   WORD PTR [edx+0x6436a9f9],cx
  4197ce:	sbb    edx,DWORD PTR [eax]
  4197d0:	xor    esp,DWORD PTR [esi]
  4197d2:	stos   BYTE PTR es:[edi],al
  4197d3:	add    edi,DWORD PTR [esi-0x15c99905]
  4197d9:	xchg   ebx,ecx
  4197db:	repnz mov al,ds:0x36f56795
  4197e1:	sub    eax,0xb17f435d
  4197e6:	or     DWORD PTR [edi],ebp
  4197e8:	mov    dh,0xf3
  4197ea:	add    eax,0xdb656ad4
  4197ef:	pandn  mm4,QWORD PTR [esi]
  4197f2:	sub    al,BYTE PTR [esp+esi*4]
  4197f5:	repz push ebp
  4197f7:	or     al,BYTE PTR [edx]
  4197f9:	std    
  4197fa:	fdivr  QWORD PTR [ebx]
  4197fc:	inc    esp
  4197fd:	je     0x4197e9
  4197ff:	sub    BYTE PTR [edx-0x4],0x5e
  419803:	cmp    eax,0x8913f0f2
  419808:	cwde   
  419809:	or     esi,edi
  41980b:	add    esi,DWORD PTR [edi]
  41980d:	xor    al,0x94
  41980f:	rcl    BYTE PTR [esp+ebp*1-0x17],0xaf
  419814:	cmp    ah,BYTE PTR [esi-0x7e]
  419817:	cdq    
  419818:	mov    ch,0xfc
  41981a:	or     BYTE PTR [ecx+0xa85d79],0x37
  419821:	test   eax,0xf7432f00
  419826:	add    dh,BYTE PTR [ecx]
  419828:	cdq    
  419829:	cmp    al,0x1
  41982b:	ins    BYTE PTR es:[edi],dx
  41982c:	add    BYTE PTR [eax],al
  41982e:	sti    
  41982f:	xchg   DWORD PTR [edi],eax
  419831:	jb     0x41985e
  419833:	fs cld 
  419835:	mov    eax,0xe162b53c
  41983a:	xor    al,0xad
  41983c:	retf   0x5f50
  41983f:	inc    eax
  419840:	add    ecx,ebp
  419842:	jmp    0xe5da84f3
  419847:	mov    ah,0x77
  419849:	loope  0x41987f
  41984b:	add    BYTE PTR ds:0xbff33459,0x6a
  419852:	cwde   
  419853:	add    eax,DWORD PTR [ecx]
  419855:	mov    edi,0xa912e39c
  41985a:	xor    al,0x8c
  41985c:	stc    
  41985d:	fcomip st,st(4)
  41985f:	sti    
  419860:	jecxz  0x419827
  419862:	leave  
  419863:	sti    
  419864:	sti    
  419865:	bound  ecx,QWORD PTR [ebx]
  419867:	mov    bh,0xf2
  419869:	jne    0x419839
  41986b:	lods   al,BYTE PTR ds:[esi]
  41986c:	add    ch,BYTE PTR [edx-0x5f]
  41986f:	inc    DWORD PTR [eax]
  419871:	ins    BYTE PTR es:[edi],dx
  419872:	icebp  
  419873:	call   DWORD PTR [ecx+0x3f]
  419876:	push   0x64
  419878:	sbb    eax,0x1f86f464
  41987d:	jb     0x419860
  41987f:	inc    DWORD PTR [ebp-0x77e33757]
  419885:	loope  0x419840
  419887:	addr16 stc 
  419889:	sbb    esp,DWORD PTR [ebx-0x8]
  41988c:	push   ecx
  41988d:	add    eax,0xe574f400
  419892:	add    BYTE PTR [eax],al
  419894:	mov    bh,0x97
  419896:	stc    
  419897:	jmp    0x633f105b
  41989c:	cmp    al,0x64
  41989e:	cld    
  41989f:	add    BYTE PTR [edi],bh
  4198a1:	sub    BYTE PTR [edx+0x51414006],cl
  4198a7:	or     ch,dl
  4198a9:	mov    ecx,0x76d35ef3
  4198ae:	jne    0x4198b5
  4198b0:	(bad)  
  4198b1:	repz add ebp,ebx
  4198b4:	mov    ch,0x5
  4198b6:	mov    esp,0x88ea5dc9
  4198bb:	in     al,dx
  4198bc:	out    dx,eax
  4198bd:	stos   DWORD PTR es:[edi],eax
  4198be:	inc    eax
  4198bf:	or     BYTE PTR [ebp-0x5aff0866],cl
  4198c5:	das    
  4198c6:	mov    BYTE PTR [ebp+0x4a],dl
  4198c9:	in     eax,0x4b
  4198cb:	jmp    FWORD PTR [edi-0x5d3f8112]
  4198d1:	cli    
  4198d2:	and    BYTE PTR [ebp+0x1a],0x37
  4198d6:	mov    al,BYTE PTR [ebp+0x4a]
  4198d9:	outs   dx,BYTE PTR ds:[esi]
  4198da:	ret    0xb656
  4198dd:	outs   dx,BYTE PTR ds:[esi]
  4198de:	adc    eax,DWORD PTR [eax-0x32]
  4198e1:	into   
  4198e2:	jecxz  0x4198fa
  4198e4:	mov    ?,WORD PTR [esi]
  4198e6:	jmp    0x1782b8c
  4198eb:	mov    ecx,esi
  4198ed:	js     0x4198e2
  4198ef:	je     0x4198f2
  4198f1:	(bad)  
  4198f3:	je     0x419927
  4198f5:	xor    al,0xfe
  4198f7:	adc    eax,0x23420000
  4198fc:	inc    ecx
  4198fd:	add    BYTE PTR ds:0x62ff8048,dl
  419903:	std    
  419904:	mov    BYTE PTR [esi],al
  419906:	inc    ecx
  419907:	fdivp  st(4),st
  419909:	push   eax
  41990a:	lods   eax,DWORD PTR ds:[esi]
  41990c:	shl    BYTE PTR [ebp+0x34],0x37
  419910:	mov    dh,0x4c
  419912:	jb     0x41993a
  419914:	mov    al,BYTE PTR [esi]
  419916:	aas    
  419917:	fdivp  st(4),st
  419919:	push   eax
  41991a:	aaa    
  41991b:	in     eax,0x88
  41991d:	shl    dl,0x6
  419920:	das    
  419921:	je     0x41993e
  419923:	fnstcw WORD PTR [edx+0x6]
  419926:	add    DWORD PTR [edx-0x2b],edi
  419929:	das    
  41992a:	mov    edx,0xbc0bb9cc
  41992f:	adc    bl,BYTE PTR [esi-0x2a6e1501]
  419935:	aas    
  419936:	mov    dl,0x4c
  419938:	mov    ecx,0xda09bc07
  41993d:	cld    
  41993e:	xchg   DWORD PTR [ebx],edx
  419940:	repz cmc 
  419942:	mov    BYTE PTR [ebx-0x8],ah
  419945:	xor    esi,DWORD PTR [edi]
  419947:	or     edi,DWORD PTR [ebx-0x3a]
  41994a:	jo     0x4198ed
  41994c:	inc    ebp
  41994d:	or     al,0x37
  41994f:	mov    al,ds:0x8666ec7a
  419954:	retf   0x6107
  419957:	ret    0x5d17
  41995a:	lock and dh,BYTE PTR [eax]
  41995d:	mov    DWORD PTR [eax],eax
  41995f:	add    bh,ah
  419961:	nop
  419962:	aaa    
  419963:	je     0x4199de
  419965:	mov    gs,WORD PTR [edx+0x78637fb]
  41996b:	mov    eax,DWORD PTR [edx+0x42fcd4ff]
  419971:	(bad)  
  419973:	mov    ah,0x72
  419975:	sti    
  419976:	aam    0x55
  419978:	mov    eax,0x7782dd3b
  41997d:	push   edi
  41997e:	or     DWORD PTR [ecx-0x770018ee],eax
  419984:	cmp    DWORD PTR [ecx],ebx
  419986:	xor    BYTE PTR [eax+0x2f],dl
  419989:	xchg   cl,cl
  41998b:	sti    
  41998c:	mov    esp,0x3c088bb
  419991:	in     al,0x7a
  419993:	or     BYTE PTR ds:0x7bd3a334,cl
  419999:	arpl   WORD PTR [edx],di
  41999b:	jg     0x419a0c
  41999d:	lods   eax,DWORD PTR ds:[esi]
  41999e:	jmp    0x419979
  4199a0:	imul   esp,DWORD PTR [edx+eiz*8-0xa],0xffffffa0
  4199a5:	scas   eax,DWORD PTR es:[edi]
  4199a6:	add    BYTE PTR [edx],0xc3
  4199a9:	hlt    
  4199aa:	mov    ?,WORD PTR [ebx+0x32de7f53]
  4199b0:	les    esp,FWORD PTR [ebx]
  4199b2:	imul   edi,DWORD PTR [eax+0x330b0c2c],0x3a
  4199b9:	stc    
  4199ba:	outs   dx,BYTE PTR ds:[esi]
  4199bb:	sub    esi,DWORD PTR [eax+edi*8-0xb9af824]
  4199c2:	repz add BYTE PTR ds:[eax],al
  4199c6:	scas   eax,DWORD PTR es:[edi]
  4199c7:	outs   dx,BYTE PTR ds:[esi]
  4199c8:	repnz (bad) 
  4199ca:	adc    BYTE PTR [esi],al
  4199cc:	cmp    al,0x32
  4199ce:	adc    ch,BYTE PTR [ebp+0x7f018839]
  4199d4:	out    0xf5,al
  4199d6:	fisttp WORD PTR [esi+edi*8]
  4199d9:	jle    0x419a0c
  4199db:	popa   
  4199dc:	mov    ah,0x32
  4199de:	xchg   DWORD PTR [edi+ebx*2+0x4b],edx
  4199e2:	mov    esi,0x8732b431
  4199e7:	sub    al,0x6d
  4199e9:	dec    esi
  4199ea:	sub    ah,BYTE PTR [eax+0x613a7e26]
  4199f0:	repz shl BYTE PTR [eax],cl
  4199f3:	scas   al,BYTE PTR es:[edi]
  4199f4:	es into 
  4199f6:	arpl   WORD PTR [edx-0x4f],bx
  4199f9:	inc    esi
  4199fa:	daa    
  4199fb:	xor    al,0x35
  4199fd:	jge    0x4199a2
  4199ff:	bound  edi,QWORD PTR [ecx]
  419a01:	aad    0x2
  419a03:	lods   eax,DWORD PTR ds:[esi]
  419a04:	adc    al,0x5c
  419a06:	inc    ebp
  419a07:	je     0x4199f3
  419a09:	fwait
  419a0a:	nop
  419a0b:	sub    DWORD PTR [edx],0x1409204
  419a11:	mov    dh,0xed
  419a13:	mov    eax,DWORD PTR ds:0xfaf87b36
  419a19:	fdivp  st(3),st
  419a1b:	(bad)  
  419a1d:	mov    bh,0xba
  419a1f:	xchg   esp,eax
  419a20:	stc    
  419a21:	jmp    0xb2c79e11
  419a26:	lahf   
  419a27:	push   eax
  419a28:	xchg   BYTE PTR [edi+0x0],bh
  419a2b:	add    BYTE PTR [edi+0x7248e54],bl
  419a31:	fs addr16 jmp 0x6e4b1f3f
  419a38:	jmp    0x75f7:0x21dcc0b4
  419a3f:	in     eax,dx
  419a40:	mov    bl,0xf1
  419a42:	sti    
  419a43:	fcomp  QWORD PTR [eax+0xc]
  419a46:	adc    ch,cl
  419a48:	xor    al,0x34
  419a4a:	cld    
  419a4b:	mov    esp,0x4145af48
  419a50:	inc    esi
  419a51:	fiadd  WORD PTR [edi+0x58565cac]
  419a57:	and    BYTE PTR [ecx+0x2c],bh
  419a5a:	add    DWORD PTR [ebx+edi*2-0x8f27ff8],edi
  419a61:	fs push ebx
  419a63:	(bad)  
  419a64:	loopne 0x419a35
  419a66:	push   cs
  419a67:	test   eax,0x1886134
  419a6c:	mov    ebx,0x34a9741f
  419a71:	stc    
  419a72:	xor    ebp,DWORD PTR [esi]
  419a74:	lock or ebx,DWORD PTR [ebx]
  419a77:	jmp    0xc03dceb0
  419a7c:	pushf  
  419a7d:	inc    ebx
  419a7e:	je     0x419aa9
  419a80:	cmp    edi,ecx
  419a82:	xor    esp,DWORD PTR [edx-0x4]
  419a85:	clc    
  419a86:	rol    BYTE PTR [ecx+0x77],cl
  419a89:	add    BYTE PTR [ecx+0x0],0x8e
  419a8d:	inc    esp
  419a8e:	mov    DWORD PTR ss:[eax],eax
  419a91:	add    BYTE PTR [ebx+0x40],bl
  419a94:	(bad)  
  419a95:	(bad)  
  419a96:	lea    edi,ds:0x8764584
  419a9c:	fimul  WORD PTR [edi]
  419a9e:	or     al,BYTE PTR [eax]
  419aa0:	sti    
  419aa1:	call   FWORD PTR [esi+0xa]
  419aa4:	outs   dx,DWORD PTR ds:[esi]
  419aa5:	lock push ecx
  419aa7:	scas   eax,DWORD PTR es:[edi]
  419aa8:	add    DWORD PTR es:[esi+0x33],ecx
  419aac:	cmp    al,dh
  419aae:	popa   
  419aaf:	scas   eax,DWORD PTR es:[edi]
  419ab0:	push   ds
  419ab1:	add    DWORD PTR [esi+0x33],ebx
  419ab4:	mov    BYTE PTR [ebp-0x36],al
  419ab7:	loop   0x419a3f
  419ab9:	inc    ebp
  419aba:	shl    dl,cl
  419abc:	xor    BYTE PTR [ebp-0x2a],0x79
  419ac0:	jo     0x419abe
  419ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac3:	mov    esi,0xae6dffef
  419ac8:	ror    BYTE PTR [edi],0x9b
  419acb:	xor    esp,edi
  419acd:	dec    DWORD PTR [esi]
  419acf:	js     0x419b11
  419ad1:	hlt    
  419ad2:	xor    eax,0x49840e6a
  419ad7:	xor    eax,DWORD PTR [ecx]
  419ad9:	add    BYTE PTR [edi],al
  419adb:	mov    esi,0x558a0ff7
  419ae0:	add    DWORD PTR [eax],eax
  419ae2:	ficomp WORD PTR [edx]
  419ae4:	scas   al,BYTE PTR es:[edi]
  419ae5:	jg     0x419b28
  419ae7:	inc    esp
  419ae8:	mov    bl,al
  419aea:	add    eax,0x11840e65
  419aef:	xor    eax,DWORD PTR [ecx]
  419af1:	add    BYTE PTR [ebp+0xf47043],ch
  419af7:	add    cl,al
  419af9:	shl    bh,0xff
  419afc:	stos   DWORD PTR es:[edi],eax
  419afd:	inc    edx
  419afe:	add    al,0x5b
  419b01:	or     DWORD PTR [ebx],esi
  419b03:	jne    0x419a97
  419b05:	mov    ebp,0x62378d2f
  419b0a:	cmc    
  419b0b:	cld    
  419b0c:	push   0x980bb9e6
  419b11:	xlat   BYTE PTR ds:[ebx]
  419b12:	lahf   
  419b13:	adc    edi,esi
  419b15:	or     al,0x89
  419b17:	rol    BYTE PTR [ebx],0x12
  419b1a:	mov    BYTE PTR [eax+0x72e81878],0x7b
  419b21:	sbb    bl,BYTE PTR ds:0x33224ae9
  419b27:	dec    esp
  419b28:	(bad)  
  419b2a:	(bad)  
  419b2b:	lock or DWORD PTR [eax-0x36],ebx
  419b2f:	xlat   BYTE PTR ds:[ebx]
  419b30:	pop    es
  419b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b32:	dec    edi
  419b33:	jge    0x419b85
  419b35:	jne    0x419ab7
  419b37:	arpl   WORD PTR [ebx+0xc],cx
  419b3a:	out    dx,eax
  419b3b:	cmc    
  419b3c:	in     al,0xb4
  419b3e:	ja     0x419bbd
  419b40:	cmp    BYTE PTR [ebp+0x73372ee],cl
  419b46:	mov    DWORD PTR [edi-0x74fff4c9],eax
  419b4c:	jp     0x419bb1
  419b4e:	aad    0x30
  419b50:	sbb    bh,al
  419b52:	rcl    BYTE PTR [ebp+0x10],cl
  419b55:	loope  0x419bce
  419b57:	push   ss
  419b58:	ja     0x419b65
  419b5a:	mov    eax,eax
  419b5c:	add    BYTE PTR [eax],al
  419b5e:	mov    bh,BYTE PTR [ebp-0x68008d14]
  419b64:	mov    ah,0x86
  419b66:	push   0xffffff93
  419b68:	out    dx,al
  419b69:	jb     0x419b46
  419b6b:	xchg   ebp,eax
  419b6c:	out    0x69,eax
  419b6e:	inc    edi
  419b6f:	mov    bl,0xa3
  419b71:	je     0x419bea
  419b73:	or     eax,DWORD PTR [ecx+0x179b9343]
  419b79:	mov    cs,WORD PTR [eax-0x2]
  419b7c:	sub    cl,BYTE PTR [ecx-0x4067bc86]
  419b82:	sbb    esi,DWORD PTR [ebx+ebp*4]
  419b85:	(bad)  
  419b86:	xor    eax,0x3703e5e4
  419b8b:	xor    al,0x5f
  419b8d:	enter  0x89e8,0xaa
  419b91:	cmpxchg BYTE PTR [eax-0x13],bh
  419b95:	aas    
  419b96:	mov    esi,0xc89a826f
  419b9b:	sbb    BYTE PTR [ebp-0x40],ah
  419b9e:	mov    WORD PTR [ebx-0xa9cf6e3],gs
  419ba4:	sub    al,0x6c
  419ba6:	mov    esp,0xbdd3626f
  419bab:	outs   dx,DWORD PTR ds:[esi]
  419bac:	mov    dl,0xd3
  419bae:	arpl   WORD PTR [edi-0x6e],di
  419bb1:	cs in  al,0x2b
  419bb4:	sbb    eax,0x58
  419bb7:	scas   eax,DWORD PTR es:[edi]
  419bb8:	test   eax,0xfdfbf47a
  419bbd:	cli    
  419bbe:	scas   eax,DWORD PTR es:[edi]
  419bbf:	sub    al,0x1a
  419bc1:	das    
  419bc2:	add    BYTE PTR [eax],al
  419bc4:	call   0x28fa0cf4
  419bc9:	or     esp,ebp
  419bcb:	jp     0x419c3c
  419bcd:	pop    esi
  419bce:	mov    esp,0x1762f9f2
  419bd3:	push   edx
  419bd4:	test   DWORD PTR [ebx+eax*2-0x2a],esp
  419bd8:	and    al,0xa9
  419bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bdb:	sub    ebx,DWORD PTR [esi]
  419bdd:	xor    dh,bh
  419bdf:	inc    ebx
  419be0:	bound  edx,QWORD PTR [esi-0x71]
  419be3:	cmp    al,0xf5
  419be5:	sub    ebp,edx
  419be7:	cs and al,0xb0
  419bea:	cs ret 0xce8
  419bee:	or     ch,BYTE PTR [ebp+0x43d6f4e3]
  419bf4:	xchg   esi,eax
  419bf5:	scas   eax,DWORD PTR es:[edi]
  419bf6:	cs ret 0xd1d0
  419bfa:	jno    0x419c36
  419bfc:	jbe    0x419c32
  419bfe:	add    DWORD PTR [edx-0x5c],ecx
  419c01:	jmp    0xd588:0x6175e93f
  419c08:	mov    dh,0x7
  419c0a:	and    eax,0x87d4e870
  419c0f:	and    al,0xa3
  419c11:	lods   eax,DWORD PTR ds:[esi]
  419c12:	dec    ebp
  419c13:	lds    ebx,FWORD PTR [esi]
  419c15:	imul   ecx,DWORD PTR ds:0x880cd070,0x4dad232c
  419c1f:	lds    esi,FWORD PTR [esi-0x47a3fe15]
  419c25:	fsub   DWORD PTR [edx-0x52]
  419c28:	add    BYTE PTR [eax],al
  419c2a:	js     0x419c04
  419c2c:	pop    ds
  419c2d:	shr    ebp,cl
  419c2f:	jo     0x419c2a
  419c31:	adc    DWORD PTR [ebx-0x75],0xf21c8efc
  419c38:	or     al,0xe9
  419c3a:	imul   ebp,DWORD PTR [ebx+0x20176aec],0x340b0c80
  419c44:	sub    ah,0x38
  419c47:	sub    al,0x53
  419c49:	mov    esi,0x27096faf
  419c4e:	lock lock add ah,bl
  419c52:	xor    edi,DWORD PTR [ebp+0x57b7dd43]
  419c58:	stc    
  419c59:	jmp    0xd5b69117
  419c5e:	pop    DWORD PTR [ecx-0x14379df7]
  419c64:	sub    ch,0x5
  419c67:	sub    eax,0x7723f175
  419c6c:	stc    
  419c6d:	loopne 0x419c60
  419c6f:	jmp    0x419cdf
  419c71:	push   es
  419c72:	pop    esi
  419c73:	adc    DWORD PTR [bx+si+0x0],esp
  419c77:	call   0x34759cfb
  419c7c:	push   cs
  419c7d:	sbb    bl,0x36
  419c80:	add    DWORD PTR [eax],eax
  419c82:	push   ebp
  419c83:	cmp    al,BYTE PTR [edx-0x7e0f2508]
  419c89:	cmc    
  419c8a:	sahf   
  419c8b:	aaa    
  419c8c:	add    DWORD PTR [ebx],edi
  419c8e:	add    BYTE PTR [eax],al
  419c90:	push   ebx
  419c91:	sub    al,0xe
  419c93:	xchg   DWORD PTR [edx+0x37],edi
  419c96:	add    DWORD PTR [eax],eax
  419c98:	adc    eax,0x4b84ffb1
  419c9d:	xor    al,0xe
  419c9f:	test   cl,bl
  419ca1:	aaa    
  419ca2:	add    DWORD PTR [eax],eax
  419ca4:	shl    DWORD PTR [esi+0x1],0x0
  419ca8:	mov    ?,WORD PTR [edi+0xe]
  419cab:	test   BYTE PTR [ebp-0x21fffec9],bl
  419cb1:	mov    eax,ds:0x344200fc
  419cb6:	test   cl,0x4e
  419cb9:	aaa    
  419cba:	add    DWORD PTR [eax+0x49],eax
  419cbd:	mov    ebx,0x375e00ab
  419cc2:	mov    dl,cl
  419cc4:	iret   
  419cc5:	adc    al,0x1
  419cc7:	add    BYTE PTR [esi-0x49],cl
  419cca:	je     0x419ccf
  419ccc:	cdq    
  419ccd:	cli    
  419cce:	jmp    0x419c5b
  419cd0:	shl    edx,cl
  419cd2:	inc    ebx
  419cd3:	je     0x419cab
  419cd5:	scas   al,BYTE PTR es:[edi]
  419cd6:	outs   dx,DWORD PTR ds:[esi]
  419cd7:	cmp    eax,0x316faed6
  419cdc:	popf   
  419cdd:	dec    edi
  419cde:	add    eax,0xe8b53274
  419ce3:	or     dl,al
  419ce5:	inc    edi
  419ce6:	sub    al,0xde
  419ce9:	out    dx,eax
  419cea:	jle    0x419c70
  419cec:	fidiv  WORD PTR [esi]
  419cee:	add    DWORD PTR [ecx+0x422c5a],esp
  419cf4:	add    BYTE PTR [eax],al
  419cf6:	aaa    
  419cf7:	push   es
  419cf8:	mov    BYTE PTR [edi],0x62
  419cfb:	mov    DWORD PTR [edx+0x796cdcd2],0xbd662745
  419d05:	adc    ecx,esp
  419d07:	mov    ds:0x562f4578,eax
  419d0c:	mov    ebx,0x7c4b9cf7
  419d11:	inc    ecx
  419d12:	push   ebx
  419d13:	mov    sp,0x8c27
  419d17:	xor    edi,DWORD PTR [ecx+eax*2+0x47]
  419d1b:	push   esi
  419d1c:	mov    esp,0x7b3b9c13
  419d21:	inc    ecx
  419d22:	das    
  419d23:	pop    ecx
  419d24:	inc    ebp
  419d25:	jae    0x419d56
  419d27:	mov    dl,0x45
  419d29:	add    BYTE PTR [edi],ah
  419d2b:	(bad)  
  419d2d:	jb     0x419d72
  419d2f:	fld    DWORD PTR [ebx+esi*2]
  419d32:	hlt    
  419d33:	leave  
  419d34:	inc    ebp
  419d35:	add    BYTE PTR [edi],dl
  419d37:	(bad)  
  419d39:	jae    0x419d57
  419d3b:	push   esi
  419d3c:	les    eax,FWORD PTR [edi]
  419d3e:	mov    esp,0x2188f925
  419d43:	pop    esi
  419d44:	sub    ecx,DWORD PTR [ebx+ecx*8]
  419d47:	sti    
  419d48:	cmp    dl,0x23
  419d4b:	jmp    0x419d29
  419d4d:	xor    ch,0x8f
  419d50:	out    dx,al
  419d51:	push   ebp
  419d52:	inc    edi
  419d53:	or     ch,ah
  419d55:	dec    esi
  419d56:	xchg   DWORD PTR [eax-0x41],ebx
  419d59:	or     eax,DWORD PTR [eax]
  419d5b:	add    BYTE PTR [edi+0x2fe8284e],al
  419d61:	pop    es
  419d62:	daa    
  419d63:	std    
  419d64:	mov    esp,0xf782f7b0
  419d69:	mov    ds:0xd771f4f8,eax
  419d6e:	(bad)  
  419d6f:	push   DWORD PTR [edi]
  419d71:	xor    al,0x6a
  419d73:	mov    al,0x1f
  419d75:	cli    
  419d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d77:	sub    ah,al
  419d79:	mov    esi,0xe875dceb
  419d7e:	out    0x33,al
  419d80:	mov    dh,0x6f
  419d82:	(bad)  
  419d83:	idiv   DWORD PTR [ebx]
  419d85:	mov    ch,0xe9
  419d87:	sub    al,dl
  419d89:	icebp  
  419d8a:	imul   ebp,DWORD PTR [ecx+0x27534bb],0xc120f466
  419d94:	cwde   
  419d95:	addr16 out 0xf6,eax
  419d98:	loopne 0x419e0e
  419d9a:	xor    ecx,edx
  419d9c:	jno    0x419d94
  419d9e:	fld    QWORD PTR [ebx]
  419da0:	inc    ebp
  419da1:	hlt    
  419da2:	into   
  419da3:	xor    esp,esp
  419da5:	mov    esp,0xbc9384cd
  419daa:	in     eax,dx
  419dab:	add    esi,DWORD PTR [edi]
  419dad:	test   DWORD PTR [ebx+edx*8],edx
  419db0:	mov    edi,0xf27ef26f
  419db5:	jae    0x419e1c
  419db7:	inc    ebx
  419db8:	in     al,0x38
  419dba:	fadd   DWORD PTR [ebx+0x50]
  419dbd:	fs out 0x3,eax
  419dc0:	add    BYTE PTR [eax],al
  419dc2:	aaa    
  419dc3:	pop    esp
  419dc4:	jmp    0xe436:0x12443703
  419dcb:	xor    ebp,edx
  419dcd:	shr    DWORD PTR [ebp-0x62e47d71],cl
  419dd3:	mov    dh,0x62
  419dd5:	sub    dh,BYTE PTR [eax-0x87fd18a]
  419ddb:	xor    eax,DWORD PTR [bp-0x2364]
  419de0:	loope  0x419e5e
  419de2:	je     0x419dc8
  419de4:	repnz test DWORD PTR [edi+0x35],ecx
  419de8:	jmp    0xf762:0x1350e03
  419def:	loopne 0x419d78
  419df1:	loope  0x419dac
  419df3:	call   0x1bf49400
  419df8:	add    cl,ch
  419dfa:	xor    al,0x2b
  419dfc:	dec    esi
  419dfd:	add    ebp,ebx
  419dff:	mov    bh,0x1b
  419e01:	jmp    0x80cc:0x29803434
  419e08:	mov    al,bh
  419e0a:	mov    edx,0xd48308e1
  419e0f:	pop    edx
  419e10:	add    DWORD PTR [edx+0x6],esp
  419e13:	mov    ebx,0x10d870db
  419e18:	mov    ah,BYTE PTR [edi+edi*1]
  419e1b:	fsub   QWORD PTR [edx]
  419e1d:	xlat   BYTE PTR ds:[ebx]
  419e1e:	dec    esi
  419e1f:	out    dx,eax
  419e20:	test   BYTE PTR [ecx-0x14634b72],ch
  419e26:	add    BYTE PTR [eax],al
  419e28:	xor    al,0x34
  419e2a:	cld    
  419e2b:	xor    al,0x1f
  419e2d:	mov    ebx,0x5e3443d2
  419e32:	add    ecx,eax
  419e34:	dec    ebx
  419e35:	repnz sti 
  419e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e38:	mov    bh,0xf3
  419e3a:	or     esp,DWORD PTR [ebp-0x4b]
  419e3d:	xor    eax,0x650fe901
  419e42:	in     eax,dx
  419e43:	(bad)  
  419e44:	in     eax,0x5d
  419e46:	call   DWORD PTR [edx]
  419e48:	xor    ebx,esp
  419e4a:	idiv   BYTE PTR [esi+ecx*1-0x11]
  419e4e:	test   BYTE PTR [ecx-0x148f4bc2],ch
  419e54:	xor    al,0x34
  419e56:	cld    
  419e57:	fadd   QWORD PTR [eax-0x43]
  419e5a:	rcl    bl,cl
  419e5c:	and    BYTE PTR [esi+0x1],bl
  419e5f:	inc    ecx
  419e60:	push   edi
  419e61:	jmp    0x419e5e
  419e63:	dec    esi
  419e64:	mov    bh,0xf4
  419e66:	or     eax,DWORD PTR [eax]
  419e68:	call   0x4671:0xe0001fe
  419e6f:	or     al,0xf4
  419e71:	jmp    0x419e6f
  419e73:	ja     0x419e4b
  419e75:	sar    edx,1
  419e77:	out    0x89,eax
  419e79:	stos   DWORD PTR es:[edi],eax
  419e7a:	cld    
  419e7b:	call   FWORD PTR [edx+0x78]
  419e7e:	push   cs
  419e7f:	test   DWORD PTR [ebp+0x55000139],ecx
  419e85:	mul    edi
  419e87:	mov    BYTE PTR [ebx+0x458920],bl
  419e8d:	add    BYTE PTR [ebx+ebp*2],dh
  419e90:	jo     0x419e86
  419e92:	dec    ebp
  419e93:	sbb    cl,BYTE PTR ds:0xfb001c0f
  419e99:	call   FWORD PTR [esi-0x697cfd90]
  419e9f:	out    0xc,eax
  419ea1:	adc    BYTE PTR [ebx+0x33],0x1
  419ea5:	add    BYTE PTR ds:0x190fefaf,ah
  419eab:	scas   eax,DWORD PTR es:[edi]
  419eac:	cli    
  419ead:	dec    DWORD PTR [esi-0x46fbb590]
  419eb3:	jb     0x419eb6
  419eb5:	add    BYTE PTR [esi-0x2d],bl
  419eb8:	or     al,0x84
  419eba:	jp     0x419eee
  419ebc:	add    DWORD PTR [eax],eax
  419ebe:	int    0x1a
  419ec0:	or     eax,0xfc3fc80f
  419ec5:	call   FWORD PTR [esi+0x25]
  419ec8:	mov    esp,0xf6f4101
  419ecd:	add    DWORD PTR [esi+0x33],ecx
  419ed0:	xchg   DWORD PTR [edi+0x66],eax
  419ed3:	outs   dx,DWORD PTR ds:[esi]
  419ed4:	shl    DWORD PTR [ebp+0x16],0x24
  419ed8:	mov    esp,0x1332e00
  419edd:	jne    0x419f09
  419edf:	xlat   BYTE PTR ds:[ebx]
  419ee0:	cli    
  419ee1:	push   cs
  419ee2:	aaa    
  419ee3:	pusha  
  419ee4:	sub    eax,0x30dd3700
  419ee9:	mov    edi,0x53d37
  419eee:	xor    BYTE PTR [ecx+0x19],bl
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi],dh
  419ef5:	fnstsw WORD PTR [edi+0x7b]
  419ef8:	in     eax,dx
  419ef9:	fsubr  QWORD PTR [edx-0x7d7045d7]
  419eff:	sti    
  419f00:	loopne 0x419f4f
  419f02:	sbb    dh,ah
  419f04:	out    0x45,eax
  419f06:	sub    DWORD PTR [edx+0x34],ebp
  419f09:	push   edx
  419f0a:	cmp    BYTE PTR [ebx-0x2d34776],cl
  419f10:	rcl    BYTE PTR [edi+edx*1+0x23e5c5eb],0x89
  419f18:	jns    0x419ee6
  419f1a:	pop    ss
  419f1b:	into   
  419f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f1d:	aad    0x23
  419f1f:	mov    DWORD PTR [edx],ebp
  419f21:	std    
  419f22:	cmp    al,BYTE PTR [ebx-0x63]
  419f25:	(bad)  [esi+0x1]
  419f28:	mov    ah,0xf4
  419f2a:	clc    
  419f2b:	dec    edi
  419f2c:	mov    edx,0xb24ff919
  419f31:	das    
  419f32:	popa   
  419f33:	xor    DWORD PTR [edi-0xc],esi
  419f36:	mov    edx,0x809d70a6
  419f3b:	sar    BYTE PTR [eax],0x61
  419f3e:	jl     0x419f3f
  419f40:	pusha  
  419f41:	fdivr  QWORD PTR [eax-0x75]
  419f44:	sti    
  419f45:	lds    esp,FWORD PTR [ebx]
  419f47:	std    
  419f48:	add    al,0xbe
  419f4a:	jbe    0x419f90
  419f4c:	or     al,BYTE PTR [ecx+0x6de2d81d]
  419f52:	and    al,0x45
  419f54:	mov    ah,0x9b
  419f56:	add    BYTE PTR [ecx+0xc300000],al
  419f5c:	mov    dl,0xed
  419f5e:	mov    ah,0x34
  419f60:	mov    ch,0x47
  419f62:	and    bl,BYTE PTR [ebx-0x1a]
  419f65:	(bad)  
  419f66:	addr16 hlt 
  419f68:	retf   
  419f69:	jl     0x419f7b
  419f6b:	rcr    DWORD PTR [edi+ebx*1-0x6616a588],0x0
  419f73:	shr    DWORD PTR [eax+ebp*4-0x1],0xed
  419f78:	xor    ch,BYTE PTR [eax+esi*8-0x13]
  419f7c:	jmp    0x71c61804
  419f81:	test   eax,0x1fa4bc04
  419f86:	fiadd  DWORD PTR [edi-0x42]
  419f89:	adc    esi,DWORD PTR [edi+0x34]
  419f8c:	gs inc esp
  419f8e:	inc    esp
  419f8f:	xor    DWORD PTR [ebp-0x3f],0xffffffe4
  419f93:	test   BYTE PTR [ebp-0x3f],ch
  419f96:	call   0x1d45201f
  419f9b:	xor    al,0x5d
  419f9d:	or     DWORD PTR [ebx],0x726e2ed
  419fa3:	in     eax,dx
  419fa4:	push   esp
  419fa5:	and    BYTE PTR [edx-0x8eba9b9],bl
  419fab:	xor    esp,DWORD PTR [ebp+0x43]
  419fae:	add    al,0x36
  419fb0:	outs   dx,DWORD PTR ds:[esi]
  419fb1:	shl    BYTE PTR [ebx+edi*4+0x24],0x48
  419fb6:	jp     0x41a01f
  419fb8:	into   
  419fb9:	es inc esp
  419fbb:	nop
  419fbc:	fcmovb st,st(3)
  419fbe:	add    BYTE PTR [eax],al
  419fc0:	push   0xe448252c
  419fc5:	dec    esi
  419fc6:	stos   BYTE PTR es:[di],al
  419fc8:	xor    BYTE PTR [ebx+eiz*8],dh
  419fcb:	jg     0x41a01e
  419fcd:	xor    al,0xea
  419fcf:	add    ebx,DWORD PTR [edi-0x9]
  419fd2:	leave  
  419fd3:	es inc edx
  419fd5:	mov    ecx,0x7f37fc2e
  419fda:	add    DWORD PTR [ecx+0x660bf51d],ebx
  419fe0:	dec    ebp
  419fe1:	xor    al,0x1
  419fe3:	jmp    0x274b0985
  419fe8:	imul   ebx
  419fea:	add    DWORD PTR [edx+0x35],esp
  419fed:	adc    eax,0xc355546
  419ff2:	add    ah,0x50
  419ff5:	inc    eax
  419ff6:	or     al,0x6a
  419ff8:	pop    esp
  419ff9:	out    dx,al
  419ffa:	sti    
  419ffb:	ss ins DWORD PTR es:[edi],dx
  419ffd:	jno    0x419ff0
  419fff:	ficomp WORD PTR [ecx+0x74]
  41a002:	add    edx,DWORD PTR [ecx-0x56fecbcc]
  41a008:	add    al,0xf0
  41a00a:	jae    0x419fb5
  41a00c:	dec    edi
  41a00d:	mov    ecx,ebx
  41a00f:	add    ebp,ebx
  41a011:	ins    BYTE PTR es:[edi],dx
  41a012:	cld    
  41a013:	push   es
  41a014:	cmp    eax,0x14ac89fc
  41a019:	mov    cl,0xc9
  41a01b:	out    0x30,al
  41a01d:	popf   
  41a01e:	add    cl,ch
  41a020:	xor    al,0xbb
  41a022:	pop    ebp
  41a023:	rol    DWORD PTR [eax],0x0
  41a026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a027:	lods   al,BYTE PTR ds:[esi]
  41a028:	mov    DWORD PTR [edi+eiz*2],esp
  41a02b:	fist   DWORD PTR ds:0xf6b32462
  41a031:	out    0xc6,eax
  41a033:	dec    esi
  41a034:	cmp    BYTE PTR [edx+0x28f34ad2],bl
  41a03a:	aaa    
  41a03b:	in     eax,dx
  41a03c:	je     0x41a020
  41a03e:	(bad)
  41a042:	mov    dh,0xea
  41a044:	add    bl,BYTE PTR [edx]
  41a046:	inc    ecx
  41a047:	fisttp DWORD PTR [ecx]
  41a049:	ins    BYTE PTR es:[edi],dx
  41a04a:	je     0x41a082
  41a04c:	mov    ch,BYTE PTR [edi+eax*1]
  41a04f:	mov    ecx,0x6112933e
  41a054:	cmc    
  41a055:	add    BYTE PTR [ebp+0x29],bh
  41a058:	cmp    DWORD PTR [ebp-0x4b],ecx
  41a05b:	out    0x8e,al
  41a05d:	rcl    DWORD PTR [edi-0x6b17505d],0xf3
  41a064:	cld    
  41a065:	jmp    eax
  41a067:	adc    BYTE PTR [eax-0x14],dh
  41a06a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a06b:	stos   DWORD PTR es:[edi],eax
  41a06c:	mov    bl,0xe8
  41a06e:	js     0x41a00e
  41a070:	cld    
  41a071:	call   DWORD PTR [ebp-0x3476245d]
  41a077:	sub    ecx,DWORD PTR [edx-0x271aa9b3]
  41a07d:	mov    DWORD PTR [ebx+0x1e758453],esp
  41a083:	outs   dx,DWORD PTR ds:[esi]
  41a084:	dec    eax
  41a085:	enter  0xf2d7,0xb3
  41a089:	jne    0x41a08b
  41a08b:	add    bl,dl
  41a08d:	ficom  WORD PTR [esi-0xc]
  41a090:	mov    bl,0xeb
  41a092:	cmp    bl,al
  41a094:	mov    ds:0x27586ed,eax
  41a099:	dec    eax
  41a09a:	pop    ss
  41a09b:	bswap  esi
  41a09d:	aaa    
  41a09e:	jmp    0xd775:0xeff2e737
  41a0a5:	ins    BYTE PTR es:[edi],dx
  41a0a6:	dec    esi
  41a0a7:	cmp    al,0x4f
  41a0a9:	int    0xc2
  41a0ab:	sbb    BYTE PTR [ebx],cl
  41a0ad:	cwde   
  41a0ae:	xor    ebp,eax
  41a0b0:	call   0x13419d53
  41a0b5:	ja     0x41a12c
  41a0b7:	gs add eax,0xcf8b37a0
  41a0bd:	int3   
  41a0be:	mov    ebx,0x3ae95d18
  41a0c3:	mov    DWORD PTR [ecx-0x24],ecx
  41a0c6:	imul   ebx,DWORD PTR [eax],0x51afa1eb
  41a0cc:	push   ds
  41a0cd:	dec    eax
  41a0ce:	pop    ebx
  41a0cf:	jp     0x41a108
  41a0d1:	ret    0xe924
  41a0d4:	xor    al,0x56
  41a0d6:	mov    ds:0x3518ac07,eax
  41a0db:	mov    DWORD PTR [edi],esi
  41a0dd:	add    al,0xbb
  41a0df:	out    0x36,eax
  41a0e1:	sbb    BYTE PTR ds:0xf7b5aa81,dh
  41a0e7:	or     al,0xb4
  41a0e9:	call   0x865a9e10
  41a0ee:	mov    eax,0x880000fc
  41a0f3:	inc    ebp
  41a0f4:	jp     0x41a13b
  41a0f6:	dec    ebx
  41a0f7:	jne    0x41a141
  41a0f9:	push   cs
  41a0fa:	aaa    
  41a0fb:	fstp   QWORD PTR [ecx+0x6b8faa17]
  41a101:	push   eax
  41a102:	mov    esi,0x8ce7e3c1
  41a107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a108:	and    al,0xfd
  41a10a:	scas   al,BYTE PTR es:[edi]
  41a10b:	cdq    
  41a10c:	out    0x38,eax
  41a10e:	hlt    
  41a10f:	sar    dl,0xfc
  41a112:	js     0x41a115
  41a114:	sbb    DWORD PTR [ecx],esp
  41a116:	mov    edx,0xa2e86bbf
  41a11b:	loop   0x41a11c
  41a11d:	dec    esp
  41a11f:	shl    DWORD PTR [edx+0x73],cl
  41a122:	jmp    0x41a158
  41a124:	xchg   ecx,eax
  41a125:	push   cs
  41a126:	aaa    
  41a127:	frstor [esi*2+0x3bc8665f]
  41a12e:	(bad)  
  41a12f:	mov    ebx,0x5437000e
  41a134:	shl    BYTE PTR [edi],0xbe
  41a137:	sbb    ecx,esp
  41a139:	cld    
  41a13a:	or     ah,BYTE PTR [ecx-0x560149d4]
  41a140:	pop    ds
  41a141:	xor    DWORD PTR [edi-0x1b],esi
  41a144:	(bad)  
  41a145:	cmp    ecx,DWORD PTR [ebp+ebx*4+0x17]
  41a149:	fadd   DWORD PTR [eax]
  41a14b:	xor    al,0x44
  41a14d:	mov    edi,0x3e5f571
  41a152:	in     al,0xbe
  41a154:	test   DWORD PTR [edi-0x74a50000],eax
  41a15a:	aaa    
  41a15b:	mov    edx,0xc04beeb
  41a160:	scas   al,BYTE PTR es:[edi]
  41a161:	jb     0x41a18d
  41a163:	mov    edi,esi
  41a165:	cmp    DWORD PTR [esi-0x33],ebp
  41a168:	ss xor al,0xea
  41a16b:	xchg   BYTE PTR [edx-0x4ced15e4],ah
  41a171:	sub    eax,ebp
  41a173:	add    esi,DWORD PTR [edi]
  41a175:	pop    esp
  41a176:	jmp    0x6417:0xc2443703
  41a17d:	xor    al,0xea
  41a17f:	mov    bl,0xad
  41a181:	xchg   DWORD PTR [edx],esp
  41a183:	sub    al,0x5
  41a185:	imul   esi,DWORD PTR [ebx],0x23
  41a188:	mov    dh,0x4f
  41a18a:	push   ss
  41a18b:	add    al,0xae
  41a18d:	in     al,0x6e
  41a18f:	leave  
  41a190:	add    BYTE PTR [ebp+0x6ff9526f],al
  41a196:	and    al,BYTE PTR [eax+esi*4]
  41a199:	outs   dx,DWORD PTR ds:[esi]
  41a19a:	push   ds
  41a19b:	lea    eax,[esp+eax*1+0x12]
  41a19f:	push   ebp
  41a1a0:	jo     0x41a18b
  41a1a2:	cli    
  41a1a3:	xchg   DWORD PTR [edi+0x39],esi
  41a1a6:	outs   dx,BYTE PTR ds:[esi]
  41a1a7:	pop    es
  41a1a8:	xor    eax,0x79d6ea34
  41a1ad:	scas   eax,DWORD PTR es:[edi]
  41a1ae:	fist   DWORD PTR [edi-0x7c5c42d7]
  41a1b4:	dec    edi
  41a1b5:	xor    al,0x5d
  41a1b7:	or     ecx,DWORD PTR [eax-0x4c]
  41a1ba:	push   ecx
  41a1bb:	add    eax,0x60370000
  41a1c0:	out    0xc3,eax
  41a1c2:	(bad)  
  41a1c3:	jecxz  0x41a22d
  41a1c5:	and    al,0x70
  41a1c7:	jmp    0x61f68acc
  41a1cc:	push   es
  41a1cd:	and    BYTE PTR [eax+0x4428faf1],bh
  41a1d3:	mov    ch,0xd9
  41a1d5:	call   0x2d04d60e
  41a1da:	sub    BYTE PTR [eax+ebp*8],dh
  41a1dd:	fldenv [edi+0x1b91c975]
  41a1e3:	jno    0x41a1e1
  41a1e5:	jle    0x41a1aa
  41a1e7:	je     0x41a1ce
  41a1e9:	ins    BYTE PTR es:[edi],dx
  41a1ea:	je     0x41a223
  41a1ec:	test   DWORD PTR [ebx+edi*1],edi
  41a1ef:	xor    al,0x1
  41a1f1:	mov    bp,0x883c
  41a1f5:	adc    al,0x7f
  41a1f7:	inc    esi
  41a1f8:	inc    ecx
  41a1f9:	jmp    0xba4b0153
  41a1fe:	push   ebp
  41a1ff:	add    dl,BYTE PTR [ecx-0x6]
  41a202:	je     0x41a1bf
  41a204:	(bad)  
  41a205:	push   ecx
  41a206:	fucomip st,st(2)
  41a208:	sti    
  41a209:	ss mov al,0xf3
  41a20c:	jne    0x41a1e8
  41a20e:	(bad)  
  41a20f:	je     0x41a1da
  41a211:	adc    DWORD PTR [ebx+0x71],ebp
  41a214:	cld    
  41a215:	push   ds
  41a216:	ror    DWORD PTR [ebx],0x86
  41a219:	xor    ch,BYTE PTR [edi+0x3b8ce9f2]
  41a21f:	xor    al,0x1
  41a221:	xchg   ebx,eax
  41a222:	add    BYTE PTR [eax],al
  41a224:	into   
  41a225:	pop    edx
  41a226:	jmp    FWORD PTR [ebx+0x7f]
  41a229:	fcom   DWORD PTR [eax-0xa]
  41a22c:	into   
  41a22d:	adc    al,0x88
  41a22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a230:	mov    eax,ss
  41a232:	push   0x44
  41a234:	push   esi
  41a235:	out    0x89,eax
  41a237:	and    al,0x5b
  41a239:	mov    bl,0xf8
  41a23b:	(bad)  
  41a23c:	es mov al,0x5a
  41a23f:	call   0xa8d678
  41a244:	xor    eax,0x1b8d019a
  41a249:	sub    BYTE PTR [ecx-0x1],dl
  41a24c:	sub    ebx,DWORD PTR [esi+edi*8]
  41a24f:	(bad)  
  41a250:	xchg   ecx,eax
  41a251:	rcr    bh,0xe8
  41a254:	and    ebp,DWORD PTR [ecx-0xf380004]
  41a25a:	fild   WORD PTR [ebx-0x7bf1ed5a]
  41a260:	pop    esp
  41a261:	xor    eax,0xfac50001
  41a266:	and    esi,DWORD PTR [ebx]
  41a268:	aad    0x9
  41a26a:	shl    DWORD PTR [ebp+0x1b],0xbb
  41a26e:	push   edi
  41a26f:	hlt    
  41a270:	mov    ch,0x38
  41a272:	jmp    0xfe56b8cd
  41a277:	mov    ebx,ebx
  41a279:	aas    
  41a27a:	xor    al,al
  41a27c:	xchg   edi,eax
  41a27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a27e:	jecxz  0x41a2b9
  41a280:	fstp   TBYTE PTR [edi]
  41a282:	push   cs
  41a283:	test   BYTE PTR ds:0x133,cl
  41a289:	add    BYTE PTR [edi-0x11],ah
  41a28c:	out    0x39,eax
  41a28e:	fwait
  41a28f:	adc    ecx,DWORD PTR [esi]
  41a291:	xchg   BYTE PTR [edx+0x30],al
  41a294:	add    DWORD PTR [eax],eax
  41a296:	gs mov edi,0x439b8be7
  41a29c:	cmp    BYTE PTR [esi+ebp*2],0x30
  41a2a0:	push   cs
  41a2a1:	test   BYTE PTR [ebx],al
  41a2a3:	xor    BYTE PTR [ecx],al
  41a2a5:	add    BYTE PTR [ebp+0x3c],al
  41a2a8:	mov    cl,0x8a
  41a2aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2ab:	scas   eax,DWORD PTR es:[edi]
  41a2ac:	ret    
  41a2ad:	bndldx bnd2,[eax+0x1]
  41a2b1:	add    BYTE PTR [esi-0x59140300],cl
  41a2b7:	scas   eax,DWORD PTR es:[edi]
  41a2b8:	ret    
  41a2b9:	je     0x41a242
  41a2bb:	cld    
  41a2bc:	mov    DWORD PTR [edi+esi*1],ecx
  41a2bf:	inc    ebp
  41a2c0:	test   edi,esi
  41a2c2:	inc    edx
  41a2c3:	adc    BYTE PTR [esi],0x31
  41a2c6:	ja     0x41a32c
  41a2c8:	ret    
  41a2c9:	fld    TBYTE PTR [esi]
  41a2cb:	adc    BYTE PTR [ecx],ch
  41a2cd:	jbe    0x41a2d3
  41a2cf:	push   edx
  41a2d0:	retf   
  41a2d1:	xlat   BYTE PTR ds:[ebx]
  41a2d2:	mov    dl,0xd1
  41a2d4:	jle    0x41a257
  41a2d6:	pop    ds
  41a2d7:	fst    QWORD PTR [ebx+0x7fddbc3b]
  41a2dd:	cmp    BYTE PTR [edi],dh
  41a2df:	dec    ecx
  41a2e0:	aam    0x88
  41a2e2:	repnz int3 
  41a2e4:	mov    WORD PTR [esi+eax*4],ds
  41a2e7:	dec    ebp
  41a2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e9:	les    edi,FWORD PTR [edx-0x7b]
  41a2ec:	loope  0x41a317
  41a2ee:	add    BYTE PTR [eax],al
  41a2f0:	mov    esi,0x4afd7117
  41a2f5:	xchg   ecx,eax
  41a2f6:	cmc    
  41a2f7:	aas    
  41a2f8:	aaa    
  41a2f9:	pusha  
  41a2fa:	retf   
  41a2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2fc:	mov    esi,0x6a874f8f
  41a301:	leave  
  41a302:	xchg   BYTE PTR [ebx-0x41],bh
  41a305:	or     eax,0xdd34c3c3
  41a30a:	(bad)  
  41a30b:	(bad)  
  41a30c:	fist   WORD PTR [edi-0x5c]
  41a30f:	cld    
  41a310:	call   0xbc295e66
  41a315:	sbb    al,0x93
  41a317:	cmp    BYTE PTR [edi+edx*4-0x7041bfc5],ch
  41a31e:	cmp    edi,DWORD PTR [ecx]
  41a320:	jb     0x41a35b
  41a322:	xchg   esi,eax
  41a323:	stos   BYTE PTR es:[edi],al
  41a324:	mov    edx,0xac079421
  41a329:	xchg   edi,eax
  41a32a:	adc    eax,esi
  41a32c:	cmp    ebx,edx
  41a32e:	jmp    0xfd95f73
  41a333:	std    
  41a334:	imul   ebp,DWORD PTR ds:0x33731321,0xfffffff8
  41a33b:	ret    
  41a33c:	nop
  41a33d:	mov    ecx,0xe6e7142c
  41a342:	sbb    eax,0xd678ae55
  41a347:	add    ebp,DWORD PTR [esi-0x7c]
  41a34a:	rcl    BYTE PTR [ebx],cl
  41a34c:	jmp    0x14bc:0x8f03bae6
  41a353:	sub    al,0x0
  41a355:	add    BYTE PTR [esi-0xbe11d98],ch
  41a35b:	xlat   BYTE PTR ds:[ebx]
  41a35c:	outs   dx,BYTE PTR ds:[esi]
  41a35d:	leave  
  41a35e:	pop    esp
  41a35f:	sub    ah,BYTE PTR ds:0xddb23a24
  41a365:	push   ds
  41a366:	inc    edx
  41a367:	out    0xce,al
  41a369:	mov    esi,0x1ef06110
  41a36e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a36f:	loopne 0x41a302
  41a371:	jae    0x41a315
  41a373:	in     eax,0x72
  41a375:	sub    eax,DWORD PTR [ebx-0x51]
  41a378:	mov    ds,WORD PTR [ecx+0x17dce52f]
  41a37e:	pop    ds
  41a37f:	mov    al,0xd2
  41a381:	push   ds
  41a382:	or     dl,BYTE PTR [esi*4+0x566fae17]
  41a389:	lea    esi,[edx+0x10]
  41a38c:	jno    0x41a34d
  41a38e:	sbb    dh,ch
  41a390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a391:	sbb    ch,al
  41a393:	mov    edx,0x67ae27ac
  41a398:	adc    ch,BYTE PTR [ecx+esi*4]
  41a39b:	pop    ebp
  41a39c:	and    ebx,DWORD PTR [edi]
  41a39e:	mov    esi,0x4c8b0a6f
  41a3a3:	in     al,0x1
  41a3a5:	fwait
  41a3a6:	dec    ebx
  41a3a7:	in     eax,0xa
  41a3a9:	test   BYTE PTR [esp+edi*8],bh
  41a3ac:	jmp    0x7526dc49
  41a3b1:	xor    ebx,DWORD PTR [edi+0x417e0183]
  41a3b7:	out    0x86,eax
  41a3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ba:	add    BYTE PTR [eax],al
  41a3bc:	cmp    eax,0x633f08db
  41a3c1:	outs   dx,BYTE PTR ds:[esi]
  41a3c2:	je     0x41a3a2
  41a3c4:	sub    DWORD PTR [edx],esp
  41a3c6:	shl    DWORD PTR [esi],0xc1
  41a3c9:	mov    edx,cs
  41a3cb:	stos   DWORD PTR es:[edi],eax
  41a3cc:	xor    BYTE PTR [esi+edx*2],dh
  41a3cf:	jb     0x41a3f1
  41a3d1:	gs in  eax,dx
  41a3d3:	jmp    0x6a42d817
  41a3d8:	(bad)  
  41a3d9:	fld    QWORD PTR [eax]
  41a3db:	sbb    ah,BYTE PTR [ecx-0x3ea9680]
  41a3e1:	jb     0x41a3e4
  41a3e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3e4:	jg     0x41a3c6
  41a3e6:	sti    
  41a3e7:	xchg   esi,eax
  41a3e8:	aas    
  41a3e9:	std    
  41a3ea:	push   cs
  41a3eb:	sub    DWORD PTR [ebx],esi
  41a3ed:	lds    ecx,FWORD PTR [eax-0x791b0a4e]
  41a3f3:	mov    ah,0xb0
  41a3f5:	cli    
  41a3f6:	aas    
  41a3f7:	jmp    0x6b3314af
  41a3fc:	cmp    al,0x38
  41a3fe:	call   0x806f601f
  41a403:	popa   
  41a404:	cmp    BYTE PTR [edx+0x30],ah
  41a407:	adc    ch,dh
  41a409:	aam    0x73
  41a40b:	jmp    DWORD PTR [edx]
  41a40d:	outs   dx,BYTE PTR ds:[esi]
  41a40e:	add    eax,0x883cc8e8
  41a413:	pushf  
  41a414:	cmp    al,0xe7
  41a416:	outs   dx,DWORD PTR ds:[esi]
  41a417:	in     eax,0xc7
  41a419:	ins    DWORD PTR es:[edi],dx
  41a41a:	or     eax,0x302cc52e
  41a41f:	add    BYTE PTR es:[eax],al
  41a422:	test   ah,cl
  41a424:	test   BYTE PTR [ecx+ebp*1-0x5cd67a19],al
  41a42b:	push   edx
  41a42c:	mov    bh,ah
  41a42e:	retf   
  41a42f:	jno    0x41a422
  41a431:	add    BYTE PTR [ebp-0x51827dc0],bl
  41a437:	xor    eax,0xc23a7584
  41a43c:	lds    ecx,FWORD PTR [ebx+0x6c6938ab]
  41a442:	(bad)
  41a445:	inc    BYTE PTR [ebx-0x71bff0dc]
  41a44b:	mov    ebx,0x70134041
  41a450:	push   cs
  41a451:	test   BYTE PTR [eax],ch
  41a453:	xor    DWORD PTR [ecx],eax
  41a455:	add    BYTE PTR [esi],al
  41a457:	xor    BYTE PTR [ecx],al
  41a459:	add    BYTE PTR [esi-0x68],bh
  41a45c:	lock push ebp
  41a45e:	dec    esi
  41a45f:	xor    BYTE PTR [ecx-0x73],dl
  41a462:	sti    
  41a463:	and    ebp,ecx
  41a465:	add    eax,0x8bfe472a
  41a46a:	add    esp,DWORD PTR [edx+eax*4]
  41a46d:	gs mov dl,0x2f
  41a470:	dec    edi
  41a471:	mov    esp,esi
  41a473:	jp     0x41a4b5
  41a475:	fcomp  DWORD PTR [esi]
  41a477:	scas   eax,DWORD PTR es:[edi]
  41a478:	dec    edi
  41a479:	fcom   QWORD PTR [edi-0x4f172405]
  41a47f:	cli    
  41a480:	cld    
  41a481:	jmp    DWORD PTR [edx+0x840e78]
  41a487:	add    BYTE PTR [ecx],bl
  41a489:	aaa    
  41a48a:	add    DWORD PTR [eax],eax
  41a48c:	ja     0x41a4d8
  41a48e:	add    DWORD PTR [eax],eax
  41a490:	push   cs
  41a491:	mov    bl,0xaf
  41a493:	or     al,0x7b
  41a495:	inc    ecx
  41a496:	(bad)  
  41a497:	call   0x3fb192
  41a49c:	hlt    
  41a49d:	xor    al,0x8a
  41a49f:	enter  0x837b,0x5
  41a4a3:	sti    
  41a4a4:	sbb    DWORD PTR [ecx+0x59],eax
  41a4a7:	call   0x3fb755
  41a4ac:	aaa    
  41a4ad:	push   esi
  41a4ae:	inc    ebx
  41a4af:	push   eax
  41a4b0:	iret   
  41a4b1:	lods   eax,DWORD PTR ds:[esi]
  41a4b2:	sub    bh,ch
  41a4b4:	mov    al,0x66
  41a4b6:	(bad)  
  41a4b7:	jmp    0x41a475
  41a4b9:	in     eax,0x80
  41a4bb:	out    0x33,eax
  41a4bd:	dec    esi
  41a4be:	inc    ebp
  41a4bf:	or     al,0x6
  41a4c1:	mov    ebp,0x3e6f7b8a
  41a4c6:	inc    ebp
  41a4c7:	call   0xfd5e5337
  41a4cc:	mov    ebx,0xaa41938d
  41a4d1:	or     ah,0xfc
  41a4d4:	jo     0x41a4d0
  41a4d6:	shl    ch,1
  41a4d8:	mov    ebp,0x4fd7d419
  41a4dd:	pop    ds
  41a4de:	mov    ebp,0x821b58fc
  41a4e3:	mov    edi,0x101e4e3b
  41a4e8:	lds    esi,FWORD PTR [edx+0xbfd0]
  41a4ee:	fst    DWORD PTR [ebx-0x1]
  41a4f1:	out    0x6e,eax
  41a4f3:	out    0x1c,al
  41a4f5:	std    
  41a4f6:	mov    esi,0x336a310f
  41a4fb:	push   eax
  41a4fc:	ret    
  41a4fd:	jmp    0x41a486
  41a4ff:	aaa    
  41a500:	or     DWORD PTR [ebx-0x2e1bf4e],ecx
  41a506:	adc    BYTE PTR [ebp+0x5633838a],bl
  41a50c:	sbb    eax,0x5b7567fd
  41a511:	dec    esi
  41a512:	ss int 0x27
  41a515:	or     eax,0xe71d79e8
  41a51a:	adc    BYTE PTR [edx],ah
  41a51c:	sbb    eax,0xdbd1adfd
  41a521:	push   ds
  41a522:	arpl   cx,si
  41a524:	fld    TBYTE PTR [edx]
  41a526:	dec    ebx
  41a527:	xor    al,0xfe
  41a529:	fisttp WORD PTR [eax]
  41a52b:	push   0x6862dfee
  41a530:	out    dx,al
  41a531:	rcr    edi,1
  41a533:	into   
  41a534:	ficom  DWORD PTR [eax+0x3b]
  41a537:	iret   
  41a538:	out    dx,eax
  41a539:	push   eax
  41a53a:	xor    eax,0x3650e3cf
  41a53f:	iret   
  41a540:	out    0x50,eax
  41a542:	cwde   
  41a543:	jns    0x41a5a4
  41a545:	xchg   esi,eax
  41a546:	cmp    bl,ah
  41a548:	pop    ebx
  41a549:	or     BYTE PTR [edx-0x7c4d0d97],cl
  41a54f:	dec    eax
  41a550:	scas   al,BYTE PTR es:[edi]
  41a551:	test   BYTE PTR [eax],0x0
  41a554:	cmp    BYTE PTR [edx+edi*1],dh
  41a557:	xlat   BYTE PTR ds:[ebx]
  41a558:	mov    al,0xae
  41a55a:	mov    dl,0x2c
  41a55c:	pop    edi
  41a55d:	jmp    0xf3fcc11c
  41a562:	cmp    eax,0xa6a22bed
  41a567:	xchg   DWORD PTR [edi+0x33],ebx
  41a56a:	push   ds
  41a56b:	cld    
  41a56c:	lock xor ah,BYTE PTR [esi-0x23]
  41a570:	inc    ecx
  41a571:	loop   0x41a55c
  41a573:	retf   
  41a574:	sub    edi,DWORD PTR [eax+0x343704b3]
  41a57a:	xor    dl,BYTE PTR [eax+0xbf56c37]
  41a580:	mov    dh,0x6f
  41a582:	jb     0x41a589
  41a584:	icebp  
  41a585:	ja     0x41a5fa
  41a587:	add    eax,0x90e7ddb7
  41a58c:	cmp    ch,BYTE PTR [edi+0x560f3ba4]
  41a592:	lods   al,BYTE PTR ds:[esi]
  41a593:	sbb    bh,dl
  41a595:	lods   eax,DWORD PTR ds:[esi]
  41a596:	push   ecx
  41a597:	xor    edx,0x6c846c67
  41a59d:	cld    
  41a59e:	jmp    0x122de33
  41a5a3:	mov    esp,0xb46dcc14
  41a5a8:	sub    eax,0x3cc487df
  41a5ad:	jmp    0x6214:0x653a2145
  41a5b4:	lock sub eax,0xe967
  41a5ba:	dec    ebp
  41a5bb:	arpl   WORD PTR [ecx],cx
  41a5bd:	xchg   ebx,eax
  41a5be:	xor    al,0xcc
  41a5c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5c1:	stos   DWORD PTR es:[edi],eax
  41a5c2:	cmp    eax,0xc72984df
  41a5c7:	xor    eax,0xe12c9c80
  41a5cc:	jle    0x41a630
  41a5ce:	xchg   ebx,eax
  41a5cf:	inc    edx
  41a5d0:	outs   dx,DWORD PTR ds:[esi]
  41a5d1:	or     eax,0x548e3bd1
  41a5d6:	(bad)  
  41a5d8:	jmp    0xfc24445a
  41a5dd:	jb     0x41a5a0
  41a5df:	cmp    eax,0xf7b00867
  41a5e4:	xchg   DWORD PTR [edi-0x518a1cf4],esp
  41a5ea:	sub    eax,0x3c1cc0b5
  41a5ef:	scas   al,BYTE PTR es:[edi]
  41a5f0:	inc    edx
  41a5f1:	enter  0x1c68,0x75
  41a5f5:	in     eax,dx
  41a5f6:	mov    eax,0xb9e575f3
  41a5fb:	ins    BYTE PTR es:[edi],dx
  41a5fc:	stc    
  41a5fd:	fnstcw WORD PTR [ecx+0x73ba2d72]
  41a603:	mov    ecx,0xa1f9814d
  41a608:	or     esp,DWORD PTR [ebp-0x5e]
  41a60b:	xor    al,0x1
  41a60d:	jmp    0xee4acfe8
  41a612:	add    cl,0x0
  41a615:	jmp    0x1981514e
  41a61a:	adc    BYTE PTR [edx+0xb],ah
  41a620:	pop    edx
  41a621:	arpl   WORD PTR [ecx],ax
  41a623:	add    dh,cl
  41a625:	xchg   edx,eax
  41a626:	xor    cl,BYTE PTR [eax]
  41a628:	shl    DWORD PTR [eax-0x78],1
  41a62b:	add    dh,bl
  41a62d:	xor    al,0x67
  41a62f:	sbb    eax,DWORD PTR [ebx-0x7c]
  41a632:	in     eax,0xfe
  41a634:	and    DWORD PTR [esi],edi
  41a636:	pop    ecx
  41a637:	call   0x3c3184
  41a63c:	inc    ecx
  41a63d:	retf   0x8b2b
  41a640:	pop    eax
  41a641:	ds jb  0x41a670
  41a644:	mov    esi,0xbee83fab
  41a649:	or     al,0xda
  41a64b:	pop    edi
  41a64c:	mov    eax,ds:0x8ec4823a
  41a651:	or     eax,0x348e0091
  41a656:	addr16 cmp al,0x41
  41a659:	mov    ds:0x91ea4586,eax
  41a65e:	sti    
  41a65f:	dec    edi
  41a660:	jno    0x41a632
  41a662:	adc    edx,DWORD PTR [esi]
  41a664:	push   cs
  41a665:	cmp    BYTE PTR [edx+0x7fb952c4],al
  41a66b:	fsub   QWORD PTR [ebx+0x1b89fe3a]
  41a671:	push   esp
  41a672:	mov    BYTE PTR [ebp-0x36],al
  41a675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a676:	imul   eax,DWORD PTR [eax],0x8907c5a1
  41a67c:	inc    ebx
  41a67d:	fs (bad) 
  41a67f:	jbe    0x41a6a7
  41a681:	jne    0x41a6c3
  41a683:	test   al,0x0
  41a685:	add    BYTE PTR ds:0xa1000133,cl
  41a68b:	iret   
  41a68c:	push   ebx
  41a68d:	adc    eax,0xf882385e
  41a692:	pop    ds
  41a693:	sub    eax,0x3d60f780
  41a698:	inc    BYTE PTR [ebx+0x680837]
  41a69e:	inc    eax
  41a69f:	push   edi
  41a6a0:	and    al,0xfe
  41a6a2:	call   0x3c52b1d
  41a6a7:	and    DWORD PTR [edx],ebx
  41a6a9:	std    
  41a6aa:	xchg   DWORD PTR [ebp-0xe],esi
  41a6ad:	jae    0x41a6e6
  41a6af:	int    0x26
  41a6b1:	fmul   st(1),st
  41a6b3:	push   ss
  41a6b4:	sbb    al,dh
  41a6b6:	jp     0x41a6fe
  41a6b8:	add    eax,0x1a47e4e7
  41a6bd:	std    
  41a6be:	mov    esp,0x7638cb8a
  41a6c3:	popa   
  41a6c4:	mov    ebp,0xb1692f37
  41a6c9:	imul   edi,DWORD PTR [ebx],0x904c4c58
  41a6cf:	into   
  41a6d0:	sbb    BYTE PTR [eax-0x61],bl
  41a6d3:	pop    es
  41a6d4:	mov    ds:0x94fe80fe,eax
  41a6d9:	xor    ebp,DWORD PTR [edi+ecx*4-0xb057551]
  41a6e0:	scas   eax,DWORD PTR es:[edi]
  41a6e1:	out    0xf1,eax
  41a6e3:	adc    eax,0x99b4fd1a
  41a6e8:	add    eax,DWORD PTR [ebx+0x27770000]
  41a6ee:	(bad)  
  41a6ef:	add    BYTE PTR [edi+0x3d],dh
  41a6f2:	sbb    dh,BYTE PTR [ebx+0x5f]
  41a6f5:	push   0xcacd0793
  41a6fa:	mov    bh,0xe7
  41a6fc:	jg     0x41a76a
  41a6fe:	sbb    ebp,edi
  41a700:	mov    esp,0x32370d17
  41a705:	jge    0x41a754
  41a707:	inc    ecx
  41a708:	aaa    
  41a709:	call   0xb5e4a417
  41a70e:	daa    
  41a70f:	push   cs
  41a710:	mov    ecx,DWORD PTR [esi+0x19]
  41a713:	adc    DWORD PTR [edx+0xe035234],0xc6672d
  41a71d:	adc    al,0x87
  41a71f:	jae    0x41a71f
  41a721:	jb     0x41a70d
  41a723:	sub    DWORD PTR [edi+eiz*8+0x42],0xffffff8e
  41a728:	inc    esp
  41a729:	mov    ah,0xbe
  41a72b:	sti    
  41a72c:	fldenv [edi-0x14]
  41a72f:	test   BYTE PTR [esi+0xc],cl
  41a732:	jmp    0x171b:0xace63a90
  41a739:	push   0xb4312cee
  41a73e:	xchg   esp,eax
  41a73f:	adc    BYTE PTR [eax-0x37b1999],dh
  41a745:	fcomi  st,st(1)
  41a747:	adc    esp,esi
  41a749:	fcomi  st,st(1)
  41a74b:	or     BYTE PTR [ebx+0x3e8ef],dh
  41a751:	add    BYTE PTR [edi],dh
  41a753:	stos   DWORD PTR es:[edi],eax
  41a754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a755:	jmp    0x41a7c9
  41a757:	js     0x41a748
  41a759:	add    esi,DWORD PTR [ebx+esi*8+0x480ef254]
  41a760:	gs cdq 
  41a762:	cmp    BYTE PTR [ebx-0x3e],0xeb
  41a766:	fnsave [edx+ebp*8]
  41a769:	mov    bh,BYTE PTR [edx-0x7d]
  41a76c:	push   eax
  41a76d:	dec    DWORD PTR [edi+0x7f]
  41a770:	mov    esp,0x364348c1
  41a775:	fmul   DWORD PTR [ebx+0x62]
  41a778:	into   
  41a779:	sub    ebx,DWORD PTR [ebx-0x4fe8647b]
  41a77f:	js     0x41a71b
  41a781:	xor    edi,0x2872662d
  41a787:	fsubp  st(1),st
  41a789:	shl    al,cl
  41a78b:	sbb    esp,DWORD PTR [edi]
  41a78d:	in     al,dx
  41a78e:	mov    ds:0xfe620177,al
  41a793:	int    0x8d
  41a795:	aad    0x3c
  41a797:	stos   BYTE PTR es:[edi],al
  41a798:	push   es
  41a799:	imul   esp,DWORD PTR [edx],0x3ae47616
  41a79f:	xor    al,BYTE PTR [edi]
  41a7a1:	inc    edx
  41a7a2:	inc    ebx
  41a7a3:	mov    ah,0xf9
  41a7a5:	add    al,dh
  41a7a7:	xor    al,0xc3
  41a7a9:	jmp    0x41a77f
  41a7ab:	sbb    eax,0x63ccaa38
  41a7b0:	loope  0x41a7f4
  41a7b2:	aam    0xb4
  41a7b4:	ja     0x41a7bf
  41a7b6:	add    BYTE PTR [eax],al
  41a7b8:	xor    ebp,DWORD PTR [edi]
  41a7ba:	xchg   dh,al
  41a7bc:	cmp    esi,DWORD PTR [ecx+eax*1]
  41a7bf:	xchg   ebx,eax
  41a7c0:	(bad)  
  41a7c1:	stos   BYTE PTR es:[edi],al
  41a7c2:	jge    0x41a7f9
  41a7c4:	repz aad 0xcd
  41a7c7:	jge    0x41a7fc
  41a7c9:	xor    al,0x88
  41a7cb:	cs jmp 0x41a819
  41a7ce:	or     ah,BYTE PTR [ecx-0x9ac7bb4]
  41a7d4:	sub    DWORD PTR [ebp+0x59b5f945],esi
  41a7da:	icebp  
  41a7db:	jmp    0xe87e6019
  41a7e0:	xor    al,0x34
  41a7e2:	or     BYTE PTR [edi+ebx*1+0x34],0xbb
  41a7e7:	and    eax,0x1f017323
  41a7ec:	dec    eax
  41a7ed:	inc    ecx
  41a7ee:	(bad)  
  41a7f0:	je     0x41a7cf
  41a7f2:	mov    BYTE PTR gs:[ebp+ebp*8+0x3f],dh
  41a7f7:	jmp    0x1e025aa6
  41a7fc:	jp     0x41a7aa
  41a7fe:	or     eax,0x17304e1
  41a803:	ins    BYTE PTR es:[edi],dx
  41a804:	sub    DWORD PTR [eax+0x34],0xffffffde
  41a808:	jns    0x41a7fe
  41a80a:	push   ecx
  41a80b:	add    dh,al
  41a80d:	sbb    BYTE PTR [eax-0x1],dl
  41a810:	cdq    
  41a811:	mov    ah,0xc0
  41a813:	je     0x41a809
  41a815:	xor    eax,0x285e15b6
  41a81a:	inc    edx
  41a81b:	add    BYTE PTR [eax],al
  41a81d:	add    BYTE PTR ds:0x6a45846f,bl
  41a823:	mov    ah,0xce
  41a825:	je     0x41a80b
  41a827:	mov    esi,0xd0963c80
  41a82c:	jo     0x41a835
  41a82e:	add    al,0xd1
  41a830:	pop    ecx
  41a831:	data16 addr16 int 0x43
  41a835:	sqrtps xmm4,xmm4
  41a838:	cmp    edx,eax
  41a83a:	popf   
  41a83b:	xor    BYTE PTR [ebx+edi*1],bh
  41a83e:	add    al,0xc3
  41a840:	in     eax,0x56
  41a842:	sbb    esp,esp
  41a844:	xlat   BYTE PTR ds:[ebx]
  41a845:	adc    bl,dh
  41a847:	xor    dh,bh
  41a849:	jae    0x41a7e1
  41a84b:	test   eax,0x30c40c41
  41a850:	jmp    0xfe876642
  41a855:	mov    eax,DWORD PTR [esi+0x120ffe5c]
  41a85b:	push   ebp
  41a85c:	add    DWORD PTR [eax],eax
  41a85e:	mov    cs,WORD PTR [edx-0x4abfa1c9]
  41a864:	jg     0x41a8ba
  41a866:	mov    DWORD PTR [esi-0x2],eax
  41a869:	push   0x5e
  41a86b:	mov    al,ds:0xce5615fc
  41a870:	cmp    eax,DWORD PTR [eax]
  41a872:	int    0x73
  41a874:	or     eax,0xfca3e38d
  41a879:	call   FWORD PTR [ecx-0x66ff9659]
  41a87f:	ret    0x8907
  41a882:	add    BYTE PTR [eax],al
  41a884:	jecxz  0x41a829
  41a886:	cld    
  41a887:	push   DWORD PTR [edi]
  41a889:	ret    0x7115
  41a88c:	aas    
  41a88d:	stos   BYTE PTR es:[edi],al
  41a88e:	jmp    0x41a8e7
  41a890:	dec    edx
  41a891:	or     eax,0xcd1f8105
  41a896:	mov    ch,BYTE PTR [edi-0x63]
  41a899:	inc    BYTE PTR [edx+0x164c13b3]
  41a89f:	std    
  41a8a0:	pop    edi
  41a8a1:	test   esp,esp
  41a8a3:	imul   esi,DWORD PTR [esi],0xffffffcd
  41a8a6:	test   eax,0x57f8c215
  41a8ab:	pop    eax
  41a8ac:	fild   QWORD PTR [edi]
  41a8ae:	test   eax,0x8c66e0fe
  41a8b3:	out    0xac,eax
  41a8b5:	shl    BYTE PTR [ebx],0x89
  41a8b8:	jl     0x41a8b7
  41a8ba:	jp     0x41a8b2
  41a8bc:	pop    DWORD PTR [ecx-0x1dc8c06f]
  41a8c2:	mov    ebx,0x61fb2ef
  41a8c7:	inc    esp
  41a8c8:	xchg   DWORD PTR [eax+0x48],ecx
  41a8cb:	jae    0x41a8ff
  41a8cd:	test   BYTE PTR [ecx+0xdccf775],dh
  41a8d3:	inc    ebx
  41a8d4:	lahf   
  41a8d5:	int3   
  41a8d6:	mov    eax,DWORD PTR [eax]
  41a8d8:	ret    0x5788
  41a8db:	std    
  41a8dc:	add    bl,ch
  41a8de:	lods   eax,DWORD PTR ds:[esi]
  41a8df:	push   ecx
  41a8e0:	out    0x1c,al
  41a8e2:	scas   al,BYTE PTR es:[edi]
  41a8e3:	mov    dh,BYTE PTR [edx+0xfd15f1]
  41a8e9:	add    BYTE PTR [eax+0x1d],dh
  41a8ec:	sar    BYTE PTR [edi-0x360574c],cl
  41a8f2:	pusha  
  41a8f3:	repnz sti 
  41a8f5:	imul   esi,DWORD PTR [edi],0xe8c06bca
  41a8fb:	dec    ebp
  41a8fc:	inc    eax
  41a8fd:	or     edi,esp
  41a8ff:	hlt    
  41a900:	mov    ch,0x40
  41a902:	aaa    
  41a903:	xor    al,0xea
  41a905:	xor    BYTE PTR [ebx+0xc],0x72
  41a909:	mov    esi,0xf482833f
  41a90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a90f:	fisttp DWORD PTR [edx-0x6e375bec]
  41a915:	in     al,dx
  41a916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a917:	fstp   TBYTE PTR [edx+0x14]
  41a91a:	test   ah,ah
  41a91c:	add    DWORD PTR [eax*4+0x7c836adb],0x348eea2f
  41a927:	mov    bh,0xc4
  41a929:	sbb    ebp,edx
  41a92b:	fcmovu st,st(4)
  41a92d:	sub    ebx,edi
  41a92f:	fcomp  st(0)
  41a931:	adc    al,0xe2
  41a933:	loope  0x41a8e1
  41a935:	sbb    ebx,eax
  41a937:	pop    edi
  41a938:	stc    
  41a939:	mov    al,0xd8
  41a93b:	mov    ds:0xafca143d,al
  41a940:	sub    DWORD PTR [edi+0x1bb4b734],ecx
  41a946:	xor    eax,0x471ba4e2
  41a94b:	pusha  
  41a94c:	cmc    
  41a94d:	add    BYTE PTR [eax],0x0
  41a950:	cs sbb cl,ch
  41a953:	mov    ?,WORD PTR [ecx]
  41a955:	scas   eax,DWORD PTR es:[edi]
  41a956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a957:	(bad)  [edi+0x403e65b]
  41a95d:	sub    dl,BYTE PTR [edi-0x1523a0d5]
  41a963:	adc    edi,DWORD PTR [ebx-0x49f7a20d]
  41a969:	push   0x607208e2
  41a96e:	sar    BYTE PTR [edi+0x66],cl
  41a971:	retf   
  41a972:	add    eax,0x6eda6264
  41a977:	leave  
  41a978:	pusha  
  41a979:	jp     0x41a997
  41a97b:	scas   eax,DWORD PTR es:[edi]
  41a97c:	jns    0x41a973
  41a97e:	add    ch,ch
  41a980:	xor    al,0x87
  41a982:	mov    BYTE PTR [ebp+0x6a1976c0],bh
  41a988:	pop    ss
  41a989:	inc    eax
  41a98a:	push   eax
  41a98b:	aaa    
  41a98c:	mov    al,0x24
  41a98e:	mov    BYTE PTR [edi+eiz*1],ch
  41a991:	lods   eax,DWORD PTR ds:[esi]
  41a992:	add    BYTE PTR [esi],dh
  41a994:	mov    dh,0x58
  41a996:	add    eax,DWORD PTR [esi-0x16fdedc6]
  41a99c:	xor    al,0xb4
  41a99e:	cmp    cl,ah
  41a9a0:	xor    eax,0x34e81cb5
  41a9a5:	xor    al,0x87
  41a9a7:	mov    edi,0x19f6b433
  41a9ac:	xor    al,0xb6
  41a9ae:	adc    al,ch
  41a9b0:	xor    al,0x34
  41a9b2:	adc    DWORD PTR [ebx+0x0],0x8428f200
  41a9b9:	out    dx,al
  41a9ba:	xor    esi,DWORD PTR [ecx+eax*1]
  41a9bd:	jb     0x41a9b5
  41a9bf:	inc    ecx
  41a9c0:	mov    al,ah
  41a9c2:	loope  0x41a9c0
  41a9c4:	lea    esp,[edi+0x6903cb25]
  41a9ca:	jmp    0x41a9e2
  41a9cc:	jbe    0x41a9b5
  41a9ce:	jns    0x41aa41
  41a9d0:	cmp    BYTE PTR [ecx],ah
  41a9d2:	int    0xe6
  41a9d4:	repnz sub bh,BYTE PTR [edx]
  41a9d7:	daa    
  41a9d8:	xchg   BYTE PTR [esi],cl
  41a9da:	xor    esi,DWORD PTR [ecx+eax*1]
  41a9dd:	imul   eax,DWORD PTR [ecx+0x24],0x9961ed76
  41a9e4:	out    0xc4,eax
  41a9e6:	mov    bh,0x75
  41a9e8:	std    
  41a9e9:	cmp    DWORD PTR [eiz*2-0x22508ef7],esp
  41a9f0:	ret    0x462c
  41a9f3:	xor    al,0xe9
  41a9f5:	std    
  41a9f6:	rcr    edx,0xfb
  41a9f9:	add    ch,cl
  41a9fb:	sub    al,0xfc
  41a9fd:	push   cs
  41a9fe:	loop   0x41aa6e
  41aa00:	add    DWORD PTR [eax],eax
  41aa02:	pop    esi
  41aa03:	jmp    0xb3:0xb261103e
  41aa0a:	dec    esi
  41aa0b:	xor    eax,0xb4224d8a
  41aa10:	add    al,0xc1
  41aa12:	xchg   ebp,eax
  41aa13:	fisttp QWORD PTR [eax-0xd05e588]
  41aa19:	add    eax,DWORD PTR [eax]
  41aa1b:	add    BYTE PTR [ebx-0x24],ah
  41aa1e:	push   esp
  41aa1f:	push   ecx
  41aa20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa21:	scas   eax,DWORD PTR es:[edi]
  41aa22:	imul   edi,edi,0xffffff81
  41aa25:	pop    eax
  41aa26:	inc    eax
  41aa27:	clc    
  41aa28:	fwait
  41aa29:	inc    esi
  41aa2a:	jne    0x41aa34
  41aa2c:	mov    esi,DWORD PTR [ebp+0xe]
  41aa2f:	test   BYTE PTR [ebx-0x56fffecc],bh
  41aa35:	pop    ecx
  41aa36:	fld1   
  41aa38:	retf   
  41aa39:	dec    ebp
  41aa3a:	add    DWORD PTR [eax],eax
  41aa3c:	gs pushf 
  41aa3e:	pop    ss
  41aa3f:	mov    ebp,esp
  41aa41:	pop    ecx
  41aa42:	(bad)  [ebx+0x88c89b]
  41aa48:	arpl   WORD PTR [ecx-0x13ba01ed],bp
  41aa4e:	adc    ecx,DWORD PTR [ebx+0x2bc9599e]
  41aa54:	push   eax
  41aa55:	mov    ah,0x4c
  41aa57:	adc    DWORD PTR [eax],esi
  41aa59:	cli    
  41aa5a:	jmp    0x41a9e5
  41aa5c:	jecxz  0x41aa9e
  41aa5e:	test   BYTE PTR [ebp-0x72],dh
  41aa61:	push   esi
  41aa62:	jo     0x41aa7c
  41aa64:	adc    esi,esi
  41aa66:	cli    
  41aa67:	out    0x94,eax
  41aa69:	(bad)  
  41aa6a:	cld    
  41aa6b:	dec    DWORD PTR [edx]
  41aa6d:	jo     0x41aae4
  41aa6f:	ins    DWORD PTR es:[edi],dx
  41aa70:	in     eax,0x6d
  41aa72:	mov    dh,BYTE PTR [eax]
  41aa74:	aaa    
  41aa75:	into   
  41aa76:	xchg   edx,eax
  41aa77:	out    dx,eax
  41aa78:	mov    ah,0x5
  41aa7a:	add    esi,DWORD PTR [ecx+0x45]
  41aa7d:	repnz xchg ebx,eax
  41aa7f:	repz add BYTE PTR [eax],al
  41aa82:	ret    0x310
  41aa85:	push   eax
  41aa86:	mov    edx,0x4f4fd4c6
  41aa8b:	repnz xchg esp,eax
  41aa8d:	cld    
  41aa8e:	cmp    ch,al
  41aa90:	out    dx,eax
  41aa91:	jne    0x41aad3
  41aa93:	bound  edi,QWORD PTR [ebx+esi*8+0x500307ba]
  41aa9a:	mov    dl,0xe1
  41aa9c:	aam    0xe7
  41aa9e:	or     ebx,esi
  41aaa0:	adc    ch,bh
  41aaa2:	fs push esi
  41aaa4:	xchg   esp,eax
  41aaa5:	mul    DWORD PTR [ecx+0x5e]
  41aaa8:	hlt    
  41aaa9:	movaps XMMWORD PTR ds:0xe1f38105,xmm1
  41aab0:	adc    BYTE PTR [ebx-0x11],dh
  41aab3:	test   DWORD PTR [esi+0x7e7ee870],eax
  41aab9:	inc    ebx
  41aaba:	inc    ebx
  41aabb:	push   esp
  41aabc:	int    0x88
  41aabe:	jb     0x41aa95
  41aac0:	jl     0x41aac2
  41aac2:	ret    0xf1a1
  41aac5:	cld    
  41aac6:	mov    edx,0x79fcc7a1
  41aacb:	loop   0x41aae5
  41aacd:	or     eax,0xfd0f1bb5
  41aad2:	mov    al,0x7d
  41aad4:	add    BYTE PTR [ebp+0x9],bl
  41aad7:	mov    ds:0xcd3fc236,al
  41aadc:	aad    0xbf
  41aade:	mov    eax,ds
  41aae0:	adc    BYTE PTR [ebx-0x71],dh
  41aae3:	inc    ebp
  41aae4:	mov    dh,0x6f
  41aae6:	add    BYTE PTR [eax],al
  41aae8:	mov    dh,bl
  41aaea:	sbb    al,0xf2
  41aaec:	jmp    0x4634:0x8b812151
  41aaf3:	jge    0x41aae9
  41aaf5:	sub    esi,DWORD PTR [edi]
  41aaf7:	mov    edx,0xb8e661bf
  41aafc:	scas   eax,DWORD PTR es:[edi]
  41aafd:	sbb    al,0x5f
  41aaff:	or     DWORD PTR [esi],esi
  41ab01:	out    dx,eax
  41ab02:	stos   DWORD PTR es:[edi],eax
  41ab03:	(bad)  
  41ab04:	push   ebx
  41ab05:	xor    al,0x71
  41ab07:	(bad)  
  41ab08:	pop    eax
  41ab09:	stos   DWORD PTR es:[edi],eax
  41ab0a:	adc    al,0x14
  41ab0c:	push   cs
  41ab0d:	mul    DWORD PTR [esi+0xc]
  41ab10:	and    al,0x62
  41ab12:	rol    DWORD PTR [esi+ebx*1+0x24a66741],1
  41ab19:	xor    al,0x0
  41ab1b:	neg    DWORD PTR [eax+0x18c41360]
  41ab21:	jle    0x41aaa6
  41ab23:	mul    BYTE PTR [esi+edi*1]
  41ab26:	sub    al,BYTE PTR [esi+esi*4]
  41ab29:	out    dx,eax
  41ab2a:	in     eax,0x86
  41ab2c:	mul    DWORD PTR [esi]
  41ab2e:	outs   dx,WORD PTR ds:[esi]
  41ab30:	aaa    
  41ab31:	xor    al,0xea
  41ab33:	adc    BYTE PTR [eax+eiz*8-0x5e],dh
  41ab37:	retf   0xe08d
  41ab3a:	(bad)  [ecx]
  41ab3c:	es sti 
  41ab3e:	fs sub al,0x2a
  41ab41:	mov    al,0x59
  41ab43:	add    esi,DWORD PTR [edi]
  41ab45:	xor    al,0x6a
  41ab47:	mov    cs,ebx
  41ab49:	xor    edi,DWORD PTR [ebp+0x4e0000cc]
  41ab4f:	cmp    DWORD PTR [ebp-0x72],ebx
  41ab52:	in     al,0x7b
  41ab54:	adc    bh,BYTE PTR [eax+0x7eea3519]
  41ab5a:	hlt    
  41ab5b:	iret   
  41ab5c:	mov    ecx,0xb1fd71b
  41ab61:	adc    BYTE PTR [ebx+0x43f07df3],dh
  41ab67:	lahf   
  41ab68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab69:	sbb    esp,edi
  41ab6b:	stos   BYTE PTR es:[edi],al
  41ab6c:	add    BYTE PTR [esi],ch
  41ab6e:	les    ecx,FWORD PTR [ecx+esi*1-0x72]
  41ab72:	stc    
  41ab73:	bound  esp,QWORD PTR [ebp-0x3861c2f]
  41ab79:	fsubp  st(4),st
  41ab7b:	bound  ecx,QWORD PTR ds:0x45ad9230
  41ab81:	shr    DWORD PTR [esi-0x4a12840d],1
  41ab87:	push   edx
  41ab88:	stc    
  41ab89:	jmp    0x63331e5b
  41ab8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab8f:	fisub  WORD PTR [edi]
  41ab91:	stos   BYTE PTR es:[edi],al
  41ab92:	mov    ah,0xcb
  41ab94:	adc    eax,0x1673b639
  41ab99:	cmp    DWORD PTR [ebx+ebx*8],esi
  41ab9c:	push   ebx
  41ab9d:	xchg   esi,eax
  41ab9e:	push   ds
  41ab9f:	push   cs
  41aba0:	adc    ebp,DWORD PTR [ecx]
  41aba2:	xor    esi,DWORD PTR [ebx+0x6141f5c4]
  41aba8:	stc    
  41aba9:	ins    BYTE PTR es:[edi],dx
  41abaa:	(bad)  
  41abab:	xchg   ecx,eax
  41abac:	push   eax
  41abad:	sbb    dh,BYTE PTR [eax]
  41abaf:	inc    ecx
  41abb0:	adc    edi,edx
  41abb2:	add    BYTE PTR [eax],al
  41abb4:	hlt    
  41abb5:	aad    0x86
  41abb7:	lods   al,BYTE PTR ds:[esi]
  41abb8:	cmp    al,0xab
  41abba:	dec    ebp
  41abbb:	icebp  
  41abbc:	ins    DWORD PTR es:[edi],dx
  41abbd:	sub    eax,0xd53c2980
  41abc2:	add    eax,0x286f6a
  41abc7:	idiv   DWORD PTR [edx+0x71]
  41abca:	cld    
  41abcb:	call   0x4133151b
  41abd0:	in     eax,dx
  41abd1:	fdivr  st,st(3)
  41abd3:	cs cmp al,0xf7
  41abd6:	jmp    0xfc18ed6c
  41abdb:	jae    0x41ac5b
  41abdd:	fcomp  DWORD PTR [ebx-0x49]
  41abe0:	int    0xee
  41abe2:	mov    esi,0x888134e1
  41abe7:	add    BYTE PTR [edx],ch
  41abe9:	mov    cl,0xec
  41abeb:	adc    BYTE PTR [ebp+0x7e8b549f],ch
  41abf1:	mov    ebx,0x8a248b05
  41abf6:	xor    BYTE PTR [ebp-0x6e],0x5a
  41abfa:	mov    esp,0x1cc38c3b
  41abff:	mov    edi,DWORD PTR [esi]
  41ac01:	jmp    0xeaa91ef7
  41ac06:	outs   dx,BYTE PTR ds:[esi]
  41ac07:	hlt    
  41ac08:	adc    esp,ebx
  41ac0a:	mov    ecx,DWORD PTR gs:[ebx]
  41ac0d:	loopne 0x41ac74
  41ac0f:	test   DWORD PTR [esi],eax
  41ac11:	sub    al,0x70
  41ac13:	adc    DWORD PTR [edi],esi
  41ac15:	mov    ebx,0x3ef
  41ac1a:	loopne 0x41ac03
  41ac1c:	dec    esi
  41ac1d:	hlt    
  41ac1e:	dec    ebp
  41ac1f:	comiss xmm0,xmm0
  41ac22:	mov    bh,0x61
  41ac24:	cld    
  41ac25:	dec    DWORD PTR [esi]
  41ac27:	mov    dl,0xbb
  41ac29:	push   es
  41ac2a:	test   DWORD PTR [edi],esp
  41ac2c:	sub    bh,dl
  41ac2e:	shr    bl,1
  41ac30:	cld    
  41ac31:	add    BYTE PTR [edi+0xb89ebf4],dl
  41ac37:	cmp    eax,0xb1b10f75
  41ac3c:	rol    BYTE PTR [esi],0xae
  41ac3f:	cmp    BYTE PTR [ecx+0x6f],dh
  41ac42:	mov    DWORD PTR [esi],esp
  41ac44:	test   BYTE PTR [ebp-0x7a],al
  41ac47:	cmp    al,BYTE PTR ds:0x1290383
  41ac4d:	test   DWORD PTR [ecx],ecx
  41ac4f:	mov    ebp,0x288b8348
  41ac54:	add    DWORD PTR [esi+ebx*8-0x4d],esi
  41ac58:	aas    
  41ac59:	hlt    
  41ac5a:	out    dx,al
  41ac5b:	mov    bl,0x3f
  41ac5d:	clc    
  41ac5e:	out    dx,al
  41ac5f:	cmp    BYTE PTR [esi+edi*8-0x76f4c1c9],cl
  41ac66:	sbb    bh,BYTE PTR [edi]
  41ac68:	mov    ebp,edi
  41ac6a:	or     ebx,DWORD PTR [esi+edi*2-0x5357085]
  41ac71:	cmp    DWORD PTR ds:0xacffffcc,0x5f
  41ac78:	clc    
  41ac79:	mov    bh,dl
  41ac7b:	div    BYTE PTR [edx+ecx*4-0x2d0e0000]
  41ac82:	mov    ah,0xfc
  41ac84:	in     al,0xda
  41ac86:	or     al,0x73
  41ac88:	sub    ebx,DWORD PTR ds:0x247730e
  41ac8e:	add    al,0xfb
  41ac90:	dec    eax
  41ac91:	xchg   ebp,eax
  41ac92:	mov    al,al
  41ac94:	xor    BYTE PTR [edi-0x13],al
  41ac97:	(bad)  
  41ac98:	cmp    dl,cl
  41ac9a:	js     0x41ad17
  41ac9c:	sub    esp,DWORD PTR [edi-0x3a5d76ff]
  41aca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aca3:	and    BYTE PTR [edx-0x4df30833],0x7b
  41acaa:	add    eax,0x81253700
  41acaf:	jne    0x41ad28
  41acb1:	fisttp QWORD PTR [ebx+esi*2]
  41acb4:	pop    es
  41acb5:	mov    dh,0x8d
  41acb7:	fld    QWORD PTR ss:[bx+si-0x1108]
  41acbd:	lock add DWORD PTR [ecx],esi
  41acc0:	neg    DWORD PTR [eax+0x45]
  41acc3:	or     eax,0x574af
  41acc8:	aaa    
  41acc9:	les    ecx,FWORD PTR es:[ebx]
  41accc:	inc    eax
  41accd:	pop    esi
  41acce:	and    eax,0x78dd3700
  41acd3:	jns    0x41ad00
  41acd5:	pop    eax
  41acd6:	fld    st(5)
  41acd8:	or     al,0xa3
  41acda:	add    eax,DWORD PTR [ecx]
  41acdc:	jno    0x41ad12
  41acde:	out    0x8e,eax
  41ace0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ace1:	inc    ebx
  41ace2:	inc    ax
  41ace4:	add    BYTE PTR [eax],al
  41ace6:	aaa    
  41ace7:	xor    al,0xea
  41ace9:	js     0x41ad5d
  41aceb:	fadd   st(0),st
  41aced:	popf   
  41acee:	xchg   ebx,eax
  41acef:	shl    DWORD PTR [eax-0x39],cl
  41acf2:	cmp    BYTE PTR [ecx-0x714b02d7],bh
  41acf8:	jmp    0xb414e400
  41acfd:	or     al,0xe6
  41acff:	and    edi,DWORD PTR [edx]
  41ad01:	or     eax,0xc3f42444
  41ad06:	pusha  
  41ad07:	mov    esi,0x23f400eb
  41ad0c:	addr16 inc edi
  41ad0e:	inc    ebx
  41ad0f:	sar    DWORD PTR [eax+ebx*1],cl
  41ad12:	dec    edx
  41ad13:	dec    ecx
  41ad14:	ret    0x43b3
  41ad17:	sub    edx,ebx
  41ad19:	cmc    
  41ad1a:	clc    
  41ad1b:	xor    ebx,DWORD PTR [edi-0x3b]
  41ad1e:	xor    al,0xbf
  41ad20:	cs clc 
  41ad22:	pop    edi
  41ad23:	cld    
  41ad24:	inc    di
  41ad26:	xor    esp,DWORD PTR [ebp+0x5f]
  41ad29:	mov    eax,0x78a23728
  41ad2e:	cmp    DWORD PTR [edi-0x5c80c04],edi
  41ad34:	out    0xc6,al
  41ad36:	add    al,0x65
  41ad38:	sbb    cl,BYTE PTR ds:0xc3d42424
  41ad3e:	lock mov ch,0x2d
  41ad41:	(bad)  
  41ad42:	jmp    0x41ad8a
  41ad44:	cli    
  41ad45:	sbb    esi,DWORD PTR ds:0xc5362
  41ad4b:	add    BYTE PTR [eax+0x4e7afa46],dh
  41ad51:	sub    BYTE PTR [esi+eax*8],ch
  41ad54:	retf   
  41ad55:	xor    al,0x4f
  41ad57:	lods   al,BYTE PTR ds:[esi]
  41ad58:	mov    bh,0x50
  41ad5a:	add    DWORD PTR [ecx],esi
  41ad5c:	xor    al,0x47
  41ad5e:	and    al,0x62
  41ad60:	cmp    bh,BYTE PTR [ebp+0x7d2fed7a]
  41ad66:	adc    edx,edx
  41ad68:	sub    al,0x69
  41ad6a:	add    BYTE PTR [ecx],ah
  41ad6c:	in     eax,0xda
  41ad6e:	inc    edi
  41ad6f:	jg     0x41adb4
  41ad71:	ror    DWORD PTR [ecx-0x3f48c354],1
  41ad77:	jne    0x41adec
  41ad79:	mov    BYTE PTR [bx+di],dl
  41ad7c:	sbb    al,0xb9
  41ad7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad7f:	jmp    0xdd8768b8
  41ad84:	call   0x537e3554
  41ad89:	mov    ebx,0x26c661ff
  41ad8e:	mov    ds,WORD PTR ds:0xbfe3d183
  41ad94:	scas   eax,DWORD PTR es:[edi]
  41ad95:	iret   
  41ad96:	sti    
  41ad97:	gs sti 
  41ad99:	inc    edi
  41ad9a:	push   ds
  41ad9b:	bound  esi,QWORD PTR ds:0x3c160035
  41ada1:	inc    ebp
  41ada2:	stc    
  41ada3:	cmp    DWORD PTR [eiz*1-0x2e0b08ef],edi
  41adaa:	(bad)  
  41adab:	rcr    DWORD PTR [ecx+0xa5803a],1
  41adb1:	add    BYTE PTR [edi],cl
  41adb3:	clc    
  41adb4:	add    al,0xee
  41adb6:	or     bh,BYTE PTR [ecx-0x76]
  41adb9:	ret    0x452d
  41adbc:	stc    
  41adbd:	cmp    DWORD PTR [ebp+ebx*2-0x4],0xfc75716e
  41adc5:	(bad)  
  41adc6:	sahf   
  41adc7:	ins    BYTE PTR es:[edi],dx
  41adc8:	retf   0xe72b
  41adcb:	rcl    DWORD PTR [edx+eiz*2+0x3f],1
  41adcf:	mov    bl,0xec
  41add1:	or     DWORD PTR [eax+0x1e003067],ecx
  41add7:	test   DWORD PTR [eax+0x4050c67d],ecx
  41addd:	in     al,0x57
  41addf:	repz jecxz 0x41ae1b
  41ade2:	(bad)  
  41ade4:	or     al,0x86
  41ade6:	ins    DWORD PTR es:[edi],dx
  41ade7:	aaa    
  41ade8:	add    DWORD PTR [eax],eax
  41adea:	daa    
  41adeb:	repz out 0x8b,eax
  41adee:	mov    ecx,0x927500dd
  41adf3:	jmp    0x5688:0xcd08ffd8
  41adfa:	xchg   edx,eax
  41adfb:	scas   eax,DWORD PTR es:[edi]
  41adfc:	add    edx,DWORD PTR [edi+0x36]
  41adff:	fs jmp 0x41ae01
  41ae02:	popa   
  41ae03:	push   ecx
  41ae04:	ror    DWORD PTR [edi],0xda
  41ae07:	pop    ebp
  41ae08:	cld    
  41ae09:	dec    DWORD PTR [esi+0x3e]
  41ae0c:	jae    0x41ae16
  41ae0e:	aad    0x82
  41ae10:	pop    es
  41ae11:	push   0x4e
  41ae13:	xchg   bl,ah
  41ae15:	sahf   
  41ae16:	add    BYTE PTR [eax],al
  41ae18:	pusha  
  41ae19:	inc    BYTE PTR ds:[esi+ecx*4+0x4f897fce]
  41ae21:	xor    eax,0xc4588b01
  41ae26:	sbb    bl,BYTE PTR [ebp-0x32]
  41ae29:	xlat   BYTE PTR ds:[ebx]
  41ae2a:	push   esi
  41ae2b:	hlt    
  41ae2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae2d:	fwait
  41ae2e:	or     ecx,DWORD PTR [ecx-0x77dc3b5]
  41ae34:	sbb    dh,cl
  41ae36:	adc    edi,0x8b01351e
  41ae3c:	or     eax,0x1106f8ba
  41ae41:	mov    bh,0x90
  41ae43:	add    dh,bl
  41ae45:	xor    al,0x3a
  41ae47:	inc    ebp
  41ae48:	push   edx
  41ae49:	into   
  41ae4a:	test   BYTE PTR [edi+0xf0134ce],al
  41ae50:	aaa    
  41ae51:	mov    dl,0xba
  41ae53:	add    ecx,ecx
  41ae55:	sbb    ebp,esp
  41ae57:	jae    0x41aeb3
  41ae59:	pop    ebx
  41ae5a:	and    eax,0x3d493004
  41ae5f:	cmc    
  41ae60:	fsubrp st(5),st
  41ae62:	cmp    al,0x81
  41ae64:	xchg   esi,eax
  41ae65:	jb     0x41adea
  41ae67:	mov    edi,0xc74eca57
  41ae6c:	scas   al,BYTE PTR es:[edi]
  41ae6d:	lahf   
  41ae6e:	pop    ds
  41ae6f:	sbb    DWORD PTR [edi-0x4bae6e28],0xf4370e1a
  41ae79:	les    edx,FWORD PTR [eax-0x7fffffb7]
  41ae7f:	dec    ecx
  41ae80:	in     al,dx
  41ae81:	mov    dh,ah
  41ae83:	loopne 0x41ae8b
  41ae85:	jne    0x41aece
  41ae87:	jo     0x41ae12
  41ae89:	test   DWORD PTR [edi],0x60589ee3
  41ae8f:	icebp  
  41ae90:	test   eax,edi
  41ae92:	ss addr16 aad 0x88
  41ae96:	jmp    0x742b:0x434b72d2
  41ae9d:	dec    ebx
  41ae9e:	inc    edi
  41ae9f:	sub    ecx,DWORD PTR [edx]
  41aea1:	jae    0x41aefa
  41aea3:	push   ebp
  41aea4:	ds push eax
  41aea6:	xor    BYTE PTR [ecx],cl
  41aea8:	or     eax,0x1c997289
  41aead:	dec    eax
  41aeae:	and    ch,BYTE PTR [edi+0x31f78409]
  41aeb4:	push   es
  41aeb5:	std    
  41aeb6:	jp     0x41ae71
  41aeb8:	or     DWORD PTR [ebx+0xf],esi
  41aebb:	jbe    0x41aec2
  41aebd:	xor    BYTE PTR [edi],0xdd
  41aec0:	pop    ss
  41aec1:	xchg   edx,eax
  41aec2:	mov    eax,DWORD PTR [esi+0xa]
  41aec5:	mov    DWORD PTR [edx-0x2b],esi
  41aec8:	jl     0x41aecb
  41aeca:	push   ds
  41aecb:	xor    al,0xad
  41aecd:	pop    es
  41aece:	ss in  al,dx
  41aed0:	xchg   sp,bx
  41aed3:	ss jecxz 0x41ae5a
  41aed6:	push   esp
  41aed7:	iret   
  41aed8:	dec    edx
  41aed9:	or     DWORD PTR [esi+0x49043e51],esi
  41aedf:	push   es
  41aee0:	cmp    edx,ecx
  41aee2:	add    BYTE PTR [eax],al
  41aee4:	scas   eax,DWORD PTR es:[edi]
  41aee5:	ja     0x41aed5
  41aee7:	fwait
  41aee8:	cdq    
  41aee9:	shr    ecx,1
  41aeeb:	add    ebx,DWORD PTR [edi-0x5df74b4b]
  41aef1:	mov    ebx,0x487e7f41
  41aef6:	icebp  
  41aef7:	or     BYTE PTR [eax+ecx*8],al
  41aefa:	or     cl,BYTE PTR [edi-0x4b15a568]
  41af00:	sbb    ch,bh
  41af02:	jmp    0x191de60a
  41af07:	int    0x70
  41af09:	iret   
  41af0a:	xchg   esi,eax
  41af0b:	sbb    edi,ebp
  41af0d:	pop    edi
  41af0e:	jecxz  0x41af18
  41af10:	bound  ecx,QWORD PTR [ecx-0x26]
  41af13:	sbb    esi,ebp
  41af15:	pop    edi
  41af16:	ror    DWORD PTR [eax],cl
  41af18:	dec    ecx
  41af19:	ss jmp 0xe9e76417
  41af1f:	add    esi,DWORD PTR [edi]
  41af21:	pop    esp
  41af22:	dec    esi
  41af23:	cmp    eax,0xeeb333f6
  41af28:	or     BYTE PTR [edx],ah
  41af2a:	sub    al,BYTE PTR [edi+ebx*1]
  41af2d:	push   cs
  41af2e:	xchg   ebp,eax
  41af2f:	or     BYTE PTR [edx],ah
  41af31:	mov    ebx,0x6daff823
  41af36:	loop   0x41afb2
  41af38:	je     0x41af0a
  41af3a:	or     di,WORD PTR [ebx]
  41af3d:	inc    edx
  41af3e:	adc    bh,BYTE PTR [ebp+0x36]
  41af41:	mov    bl,0x81
  41af43:	test   DWORD PTR [esi+0xb20155],0x73cab100
  41af4d:	or     eax,0x5e057d6a
  41af52:	jne    0x41af88
  41af54:	add    ecx,ebp
  41af56:	aam    0x42
  41af58:	inc    ebp
  41af59:	push   0x3c
  41af5b:	inc    eax
  41af5c:	jae    0x41af6c
  41af5e:	and    eax,0xf2bd018f
  41af63:	mov    ebx,0x74fb710d
  41af68:	add    edx,ebp
  41af6a:	ins    BYTE PTR es:[edi],dx
  41af6b:	mov    es,WORD PTR [edx+eiz*1-0x301c318d]
  41af72:	ret    
  41af73:	iret   
  41af74:	sti    
  41af75:	gs hlt 
  41af77:	inc    edi
  41af78:	and    dl,BYTE PTR [esi]
  41af7a:	imul   edi,DWORD PTR [ebx+0x754b650d],0x1
  41af81:	jmp    0x6534:0xaac7b689
  41af88:	push   edx
  41af89:	mul    BYTE PTR [edx+0x3e]
  41af8c:	adc    ebp,DWORD PTR [ecx+0x69ffbd34]
  41af92:	idiv   DWORD PTR [edi]
  41af94:	add    ah,ah
  41af96:	fdiv   st(4),st
  41af98:	aas    
  41af99:	jmp    0x624afa6b
  41af9e:	xor    al,0x17
  41afa0:	inc    esi
  41afa1:	lds    esi,FWORD PTR [esp+ebp*8]
  41afa4:	jg     0x41afe2
  41afa6:	das    
  41afa7:	inc    eax
  41afa8:	jo     0x41affb
  41afaa:	rcr    DWORD PTR [ecx-0x38],cl
  41afad:	sub    al,BYTE PTR [eax]
  41afaf:	add    BYTE PTR [ebx],dh
  41afb1:	iret   
  41afb2:	adc    eax,0x10e25c5
  41afb7:	sahf   
  41afb8:	not    ch
  41afba:	xchg   DWORD PTR [ebx+esi*1],ebp
  41afbd:	mov    bl,0x45
  41afbf:	jge    0x41afdc
  41afc1:	or     eax,0xc71a0044
  41afc6:	xor    DWORD PTR [eax],0x33fe3578
  41afcc:	sahf   
  41afcd:	stc    
  41afce:	ds in  al,0x39
  41afd1:	fnstcw WORD PTR [ebx+0x5a20815e]
  41afd7:	leave  
  41afd8:	or     al,0x34
  41afda:	add    DWORD PTR [esi+0x55],edx
  41afdd:	sub    dh,bh
  41afdf:	jbe    0x41afb7
  41afe1:	sub    DWORD PTR [edi+0x6b],esi
  41afe4:	jns    0x41b01b
  41afe6:	(bad)  
  41afe7:	jbe    0x41afc7
  41afe9:	sub    DWORD PTR [edi+0x6b],ebp
  41afec:	imul   esi,DWORD PTR ds:0x297a76fe,0x35596b67
  41aff6:	(bad)  
  41aff7:	jbe    0x41b063
  41aff9:	sub    DWORD PTR [edi+0x6b],ebx
  41affc:	sub    DWORD PTR ds:0x296e76fe,esi
  41b002:	push   edi
  41b003:	imul   edi,DWORD PTR [ecx],0x35
  41b006:	(bad)  
  41b007:	jbe    0x41afcb
  41b009:	sub    DWORD PTR [edi+0x6b],ecx
  41b00c:	imul   esi,DWORD PTR [esi],0xb49e768a
  41b012:	bnd je 0x41b015
  41b015:	add    BYTE PTR [ebx+0x36],ch
  41b018:	xor    ebp,eax
  41b01a:	adc    ch,BYTE PTR [ecx+0x3010fffc]
  41b020:	cmp    ebp,DWORD PTR [ebx+0x79]
  41b023:	ss pop ebx
  41b025:	ret    
  41b026:	jns    0x41afe7
  41b028:	jmp    edi
  41b02a:	inc    edx
  41b02b:	stos   BYTE PTR es:[edi],al
  41b02c:	cld    
  41b02d:	(bad)  
  41b02e:	jmp    0x2b29b3f1
  41b033:	stos   BYTE PTR es:[edi],al
  41b034:	cld    
  41b035:	(bad)  
  41b036:	fnstcw WORD PTR [esi-0x560d17f5]
  41b03c:	cld    
  41b03d:	push   DWORD PTR [edi]
  41b03f:	call   0x7403:0x580f88aa
  41b046:	sub    DWORD PTR ds:0x458cf578,ebp
  41b04c:	call   0xf4411b51
  41b051:	sbb    cl,0xe2
  41b054:	pop    ss
  41b055:	into   
  41b056:	loopne 0x41b0ad
  41b058:	add    ecx,DWORD PTR [ebp+0x62]
  41b05b:	push   0xdade5ca6
  41b060:	xchg   esi,eax
  41b061:	cld    
  41b062:	enter  0x7687,0xec
  41b066:	mov    ah,0x7e
  41b068:	or     BYTE PTR [ecx-0x137b3c8e],cl
  41b06e:	jae    0x41b049
  41b070:	(bad)  
  41b071:	inc    DWORD PTR [eiz*4-0x20d80356]
  41b078:	js     0x41b0ee
  41b07a:	add    BYTE PTR [eax],al
  41b07c:	push   ebx
  41b07d:	out    0x17,eax
  41b07f:	shl    BYTE PTR [eax+0x7783ffda],0xed
  41b086:	jnp    0x41b07c
  41b088:	ss (bad) 
  41b08b:	xor    BYTE PTR [esp+esi*4+0x3a],bl
  41b08f:	inc    esp
  41b090:	sbb    edi,edi
  41b092:	(bad)  
  41b093:	(bad)  
  41b094:	mov    al,0xbe
  41b096:	fist   DWORD PTR [eax]
  41b098:	dec    edi
  41b099:	mov    ah,0xdb
  41b09b:	cld    
  41b09c:	pop    eax
  41b09d:	inc    ecx
  41b09e:	adc    eax,0xe11e910d
  41b0a3:	adc    BYTE PTR [eax],bh
  41b0a5:	mov    ebp,0x2a1b03c0
  41b0aa:	mov    dl,0x50
  41b0ac:	out    0x24,eax
  41b0ae:	push   es
  41b0af:	adc    ebx,DWORD PTR [edi-0x7d004018]
  41b0b5:	push   esp
  41b0b6:	shl    DWORD PTR [ebx],0x43
  41b0b9:	xor    al,0x92
  41b0bb:	pop    ebp
  41b0bc:	(bad)  
  41b0bd:	retf   
  41b0be:	call   0xb4f4:0xf2106ccb
  41b0c5:	mov    ds:0x673703e8,al
  41b0ca:	pop    ss
  41b0cb:	call   0x106b:0x5176737
  41b0d2:	sbb    al,BYTE PTR ds:0x5221063
  41b0d8:	imul   edx,DWORD PTR [eax],0x1e
  41b0db:	add    eax,0xc3f4b044
  41b0e0:	add    BYTE PTR [eax],al
  41b0e2:	sar    BYTE PTR [ebp+ebp*4+0x270f2cdf],1
  41b0e9:	cmc    
  41b0ea:	mov    ah,0x5c
  41b0ec:	jmp    0xa500e7f4
  41b0f1:	sti    
  41b0f2:	mov    edi,0x408c6a34
  41b0f7:	xor    eax,0x7424dc6c
  41b0fc:	jmp    0x508f:0xd98a358f
  41b103:	xor    al,0xd7
  41b105:	cmp    dh,BYTE PTR [edi+0x36c5c648]
  41b10b:	rep outs dx,BYTE PTR ds:[si]
  41b10e:	mov    eax,0x3723697d
  41b113:	xor    al,0x6a
  41b115:	add    al,0xe8
  41b117:	cld    
  41b118:	jmp    0x38f1e429
  41b11d:	mov    cl,0x5b
  41b11f:	inc    esp
  41b120:	repnz fwait
  41b122:	add    al,0x40
  41b124:	sub    al,BYTE PTR [edx+ecx*2]
  41b127:	inc    eax
  41b128:	push   es
  41b129:	mov    esp,0xe03dcaea
  41b12e:	add    bl,cl
  41b130:	aam    0x8f
  41b132:	inc    ebp
  41b133:	je     0x41b136
  41b135:	jmp    0xd56721e7
  41b13a:	out    dx,eax
  41b13b:	repz or ebp,DWORD PTR [ebp+0x20]
  41b13f:	retf   0xe9fb
  41b142:	scas   al,BYTE PTR es:[edi]
  41b143:	and    cl,BYTE PTR [esi+0x17000015]
  41b149:	jae    0x41b1a4
  41b14b:	cmp    DWORD PTR [edi+0x55],0x77fe902
  41b152:	jno    0x41b128
  41b154:	hlt    
  41b155:	retf   0xe963
  41b158:	xor    al,0x34
  41b15a:	mov    eax,ds:0xc3bd3a03
  41b15f:	mov    ecx,0x9254033
  41b164:	cmp    ah,dl
  41b166:	data16 inc BYTE PTR [ecx+0x48]
  41b16a:	and    eax,0x69d28ca1
  41b16f:	retf   0x3435
  41b172:	mov    BYTE PTR [esp+ebp*4-0x230ffc45],bh
  41b179:	sub    dh,BYTE PTR [ebx-0x6]
  41b17c:	cmp    eax,DWORD PTR [ebp+ebx*1+0x74]
  41b180:	fcom   DWORD PTR [esi]
  41b182:	dec    ecx
  41b183:	mov    ecx,0xc1257009
  41b188:	(bad)  
  41b189:	rol    BYTE PTR [eax-0x4c],cl
  41b18c:	cmp    ecx,ecx
  41b18e:	jg     0x41b1bd
  41b190:	xor    BYTE PTR [ebp+0x525e7fc0],0x1
  41b197:	jmp    0xeea845d0
  41b19c:	xor    al,0x40
  41b19e:	and    eax,0x25403411
  41b1a3:	or     DWORD PTR [edx+eiz*8],esi
  41b1a6:	sti    
  41b1a7:	pop    ebp
  41b1a8:	pop    ds
  41b1a9:	adc    al,0xe9
  41b1ab:	lea    eax,[eax]
  41b1ad:	add    dl,dl
  41b1af:	enter  0xfb,0xc3
  41b1b3:	dec    ebx
  41b1b4:	and    eax,0xdd8e0670
  41b1b9:	jmp    ecx
  41b1bb:	mov    ds:0xd85a243f,eax
  41b1c0:	popf   
  41b1c1:	sub    al,0xd1
  41b1c3:	xor    eax,0x41fa4488
  41b1c8:	push   ecx
  41b1c9:	lea    ebx,[edx+0x1c]
  41b1cc:	dec    ecx
  41b1cd:	push   eax
  41b1ce:	xor    al,0x32
  41b1d0:	jmp    0x1720f6e
  41b1d5:	mov    ebp,DWORD PTR [esi-0x4f]
  41b1d8:	mov    edi,0x6fc2a50c
  41b1dd:	sbb    BYTE PTR [esi],dh
  41b1df:	xor    BYTE PTR [ecx],al
  41b1e1:	add    BYTE PTR [esi+0x7156fe5a],ch
  41b1e7:	dec    esp
  41b1e8:	and    eax,0x712b6120
  41b1ed:	adc    eax,0xe853358e
  41b1f2:	neg    BYTE PTR [eax-0x2]
  41b1f5:	jmp    DWORD PTR [ebx]
  41b1f7:	jl     0x41b21e
  41b1f9:	jo     0x41b1c9
  41b1fb:	fnsave [ecx-0x20]
  41b1fe:	push   ecx
  41b1ff:	xor    eax,0x4051078a
  41b204:	sub    DWORD PTR [ebx-0xe6ee56],ecx
  41b20a:	scas   al,BYTE PTR es:[edi]
  41b20b:	adc    DWORD PTR [edx+0x53],edx
  41b20e:	enter  0x1036,0x6c
  41b212:	add    BYTE PTR [eax],al
  41b214:	pop    ebx
  41b215:	jne    0x41b218
  41b217:	xor    DWORD PTR [esi],0x2f
  41b21a:	jo     0x41b24e
  41b21c:	int    0xa4
  41b21e:	aas    
  41b21f:	and    al,0x9a
  41b221:	mov    BYTE PTR gs:[edx+ebp*1+0x14],al
  41b226:	push   ecx
  41b227:	push   0x2001354d
  41b22c:	aaa    
  41b22d:	or     eax,ecx
  41b22f:	inc    ebx
  41b230:	sbb    edi,edi
  41b232:	or     BYTE PTR [eax],al
  41b234:	aaa    
  41b235:	fisttp DWORD PTR [ebx+ebx*2+0x1300235b]
  41b23c:	mov    bh,0xe7
  41b23e:	aas    
  41b23f:	add    BYTE PTR [edx+eax*4+0x5c2d7304],dh
  41b246:	jl     0x41b26c
  41b248:	sub    eax,DWORD PTR [ebx+0x2737ffff]
  41b24e:	dec    eax
  41b24f:	push   esi
  41b250:	add    al,al
  41b252:	arpl   WORD PTR [ebx],dx
  41b254:	ja     0x41b231
  41b256:	(bad)  
  41b257:	jae    0x41b274
  41b259:	out    0xfe,eax
  41b25b:	adc    dl,BYTE PTR [ebx-0x18]
  41b25e:	aas    
  41b25f:	add    al,ah
  41b261:	mov    esi,0xc7d81823
  41b266:	arpl   WORD PTR [ebx],dx
  41b268:	ja     0x41b245
  41b26a:	add    DWORD PTR [ebx+edx*1-0x32],eax
  41b26e:	jg     0x41b2eb
  41b270:	sbb    ecx,esi
  41b272:	add    eax,0xff25b50d
  41b277:	cld    
  41b278:	add    BYTE PTR [eax],al
  41b27a:	mov    al,0x9
  41b27c:	je     0x41b2a2
  41b27e:	addr16 jae 0x41b270
  41b281:	addr16 mov al,ds:0xff19
  41b285:	jae    0x41b2da
  41b287:	out    0xe7,eax
  41b289:	in     eax,0x1f
  41b28b:	sub    bh,bh
  41b28d:	pop    esp
  41b28e:	jmp    0xac9a7280
  41b293:	das    
  41b294:	popa   
  41b295:	ret    0xdb33
  41b298:	(bad)  
  41b299:	jae    0x41b2b6
  41b29b:	mov    esp,edi
  41b29d:	rcr    edi,1
  41b29f:	rol    DWORD PTR [ecx],0xfd
  41b2a2:	jmp    0x41b292
  41b2a4:	xor    ebp,eax
  41b2a6:	outs   dx,BYTE PTR ds:[esi]
  41b2a7:	xor    edx,DWORD PTR [edx+0x1]
  41b2aa:	push   edx
  41b2ab:	pop    ebp
  41b2ac:	add    DWORD PTR [ebx-0x7f9ac43d],ecx
  41b2b2:	sbb    ebx,DWORD PTR [eax]
  41b2b4:	xor    ch,ah
  41b2b6:	push   cs
  41b2b7:	push   esi
  41b2b8:	jmp    0x6aa6ac0
  41b2bd:	and    al,0x1e
  41b2bf:	addr16 inc eax
  41b2c1:	xor    BYTE PTR [ebp+0x53485d33],cl
  41b2c7:	adc    al,0x3a
  41b2c9:	lea    esi,[eax+edx*1-0x26]
  41b2cd:	pop    eax
  41b2ce:	pop    ds
  41b2cf:	outs   dx,DWORD PTR ds:[esi]
  41b2d0:	and    eax,0x61600201
  41b2d5:	dec    eax
  41b2d6:	push   ebx
  41b2d7:	adc    al,0x92
  41b2d9:	cdq    
  41b2da:	pop    eax
  41b2db:	(bad)  
  41b2dc:	jp     0x41b26b
  41b2de:	add    BYTE PTR [eax],al
  41b2e0:	je     0x41b2f2
  41b2e2:	(bad)  
  41b2e3:	test   al,ch
  41b2e5:	(bad)  
  41b2e6:	cmc    
  41b2e7:	cmp    esp,DWORD PTR [esi]
  41b2e9:	(bad)  
  41b2ea:	push   ds
  41b2eb:	lds    ecx,FWORD PTR [edx+0x1d]
  41b2ee:	outs   dx,DWORD PTR ds:[esi]
  41b2ef:	dec    eax
  41b2f0:	adc    ebp,DWORD PTR [eiz*2-0xdf280f8]
  41b2f7:	ja     0x41b31d
  41b2f9:	(bad)  
  41b2fa:	stc    
  41b2fb:	add    BYTE PTR [eax+esi*8-0x29],al
  41b2ff:	inc    ebx
  41b300:	aaa    
  41b301:	fs pop edi
  41b303:	dec    eax
  41b304:	pop    ebx
  41b305:	sub    BYTE PTR [ebx],ch
  41b307:	cmp    bh,bl
  41b309:	fdivr  QWORD PTR [edi-0x62]
  41b30c:	xchg   ebx,eax
  41b30d:	(bad)  
  41b30e:	outs   dx,BYTE PTR ds:[esi]
  41b30f:	dec    eax
  41b310:	push   ebx
  41b311:	sub    BYTE PTR [ebx+0x33427f3c],ch
  41b317:	(bad)  
  41b318:	cld    
  41b319:	psrad  mm5,mm3
  41b31c:	out    0x5b,al
  41b31e:	sti    
  41b31f:	add    BYTE PTR [eax+esi*2+0x6414cd01],bh
  41b326:	mov    fs,WORD PTR [ebp+0x74511c10]
  41b32c:	clc    
  41b32d:	rdtsc  
  41b32f:	cmp    ebp,ebp
  41b331:	fld    TBYTE PTR [edi+0xd]
  41b334:	ss leave 
  41b336:	xchg   ecx,edx
  41b338:	sti    
  41b339:	int3   
  41b33a:	jne    0x41b3aa
  41b33c:	sbb    eax,0x37befc77
  41b341:	arpl   WORD PTR [eax-0x7affff3b],cx
  41b347:	ja     0x41b399
  41b349:	pop    ss
  41b34a:	lods   al,BYTE PTR ds:[esi]
  41b34b:	das    
  41b34c:	xor    dl,al
  41b34e:	mov    ebp,0x859e0967
  41b353:	xor    ah,bh
  41b355:	sbb    DWORD PTR [ebx],esi
  41b357:	fsub   QWORD PTR [edi-0x71cbcbb6]
  41b35d:	(bad)  
  41b35e:	cmp    BYTE PTR [edx+ecx*4-0x19],ah
  41b362:	aaa    
  41b363:	and    eax,ebp
  41b365:	(bad)  [esp+esi*1-0x76]
  41b369:	and    al,0x37
  41b36b:	mov    ebx,0x5e646545
  41b370:	jmp    0xfc09830f
  41b375:	bound  ebp,QWORD PTR [esi]
  41b377:	mov    ebp,0x2aac4d4d
  41b37c:	add    al,BYTE PTR [eax]
  41b37e:	push   ebp
  41b37f:	inc    eax
  41b380:	pop    ds
  41b381:	call   0x5ae:0x4d696103
  41b388:	add    DWORD PTR [edx+0x6915c903],ebx
  41b38e:	sub    dh,BYTE PTR [ecx+eax*1+0x70]
  41b392:	push   DWORD PTR [edi]
  41b394:	cmp    BYTE PTR [edx],ch
  41b396:	or     BYTE PTR [eax],dh
  41b398:	mov    cl,0xe8
  41b39a:	mov    ebp,DWORD PTR ds:0xdab000fc
  41b3a0:	aad    0x67
  41b3a2:	imul   eax,esi,0x67c8c031
  41b3a8:	(bad)
  41b3ac:	ror    esp,cl
  41b3ae:	outs   dx,DWORD PTR ds:[esi]
  41b3af:	and    ebp,eax
  41b3b1:	and    al,0xd5
  41b3b3:	retf   
  41b3b4:	sbb    eax,0xd3c03230
  41b3b9:	clc    
  41b3ba:	outs   dx,DWORD PTR ds:[esi]
  41b3bb:	adc    eax,0xcbd12cd5
  41b3c0:	pop    ebp
  41b3c1:	xor    BYTE PTR [edx+esi*1],dh
  41b3c4:	bound  esi,QWORD PTR [esi]
  41b3c6:	inc    ecx
  41b3c7:	or     esp,0xefffbb8
  41b3cd:	or     edi,DWORD PTR [edx+esi*2-0x3c4e51]
  41b3d4:	fnstsw WORD PTR [ecx+0x71d5d406]
  41b3da:	add    DWORD PTR [ebx+0x43],edx
  41b3dd:	pop    esi
  41b3de:	or     bl,0xb9
  41b3e1:	add    ecx,eax
  41b3e3:	push   edi
  41b3e4:	sub    DWORD PTR [eax-0x43310005],edi
  41b3ea:	ret    0xf274
  41b3ed:	mov    edx,0x7105d026
  41b3f2:	add    DWORD PTR [ebx+0x39b103],ecx
  41b3f8:	loop   0x41b432
  41b3fa:	inc    ecx
  41b3fb:	add    eax,DWORD PTR [ecx]
  41b3fd:	or     DWORD PTR [edx+esi*2-0x74f2268e],edi
  41b404:	outs   dx,BYTE PTR ds:[esi]
  41b405:	push   edi
  41b406:	xrelease mov BYTE PTR [esi+0x63030131],cl
  41b40d:	mov    ecx,0x75d3
  41b412:	outs   dx,DWORD PTR ds:[esi]
  41b413:	jo     0x41b479
  41b415:	leave  
  41b416:	push   es
  41b417:	xor    BYTE PTR [ecx],al
  41b419:	add    BYTE PTR [edi],dh
  41b41b:	pop    ebp
  41b41c:	aad    0xc8
  41b41e:	hlt    
  41b41f:	(bad)  
  41b421:	xchg   edi,eax
  41b422:	fldcw  WORD PTR ds:0x3f7783fc
  41b428:	inc    edx
  41b429:	mov    DWORD PTR [edx+0x27],eax
  41b42c:	enter  0x3740,0xd6
  41b430:	or     ah,dl
  41b432:	jl     0x41b44e
  41b434:	add    eax,0xf3644489
  41b439:	xchg   DWORD PTR [edi],esi
  41b43b:	(bad)  
  41b43d:	add    BYTE PTR [edx],al
  41b43f:	mov    eax,esi
  41b441:	inc    eax
  41b442:	aaa    
  41b443:	pop    es
  41b444:	and    edx,DWORD PTR [ebp-0x7f]
  41b447:	jecxz  0x41b470
  41b449:	push   0x43867e20
  41b44e:	push   ebx
  41b44f:	fild   QWORD PTR [esi]
  41b451:	std    
  41b452:	mov    esi,0x376a42d4
  41b457:	pop    eax
  41b458:	inc    esi
  41b459:	sbb    BYTE PTR [esi+0x51e8091c],ch
  41b45f:	add    BYTE PTR [esi],al
  41b461:	add    BYTE PTR [eax-0x20c7b9c0],cl
  41b467:	out    0x58,eax
  41b469:	jmp    eax
  41b46b:	sbb    eax,0x99ac5b5b
  41b470:	push   esi
  41b471:	ret    0xdb3b
  41b474:	xchg   BYTE PTR [eax+0x0],cl
  41b477:	add    BYTE PTR [edi],ah
  41b479:	jge    0x41b4cd
  41b47b:	xor    eax,eax
  41b47d:	sub    ebp,eax
  41b47f:	sub    dh,0xde
  41b482:	and    BYTE PTR [ecx-0x2a7940dc],cl
  41b488:	mov    eax,ds:0x2d7301d8
  41b48d:	fwait
  41b48e:	jle    0x41b451
  41b490:	addr16 ret 0x71c4
  41b494:	test   BYTE PTR [ebx],dh
  41b496:	(bad)  
  41b498:	push   ds
  41b499:	hlt    
  41b49a:	fld    DWORD PTR [edx]
  41b49c:	jns    0x41b456
  41b49e:	adc    DWORD PTR [eax+0x55],edi
  41b4a1:	jae    0x41b522
  41b4a3:	int3   
  41b4a4:	and    BYTE PTR [edi+0x205f0f76],dh
  41b4aa:	test   dh,bh
  41b4ac:	arpl   WORD PTR [edi-0x46c188d7],bp
  41b4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4b3:	adc    edi,DWORD PTR [esi+0x18fd4ecb]
  41b4b9:	xor    DWORD PTR [edi+ecx*4],ebx
  41b4bc:	add    BYTE PTR [ebx],dh
  41b4be:	popa   
  41b4bf:	inc    ecx
  41b4c0:	daa    
  41b4c1:	inc    eax
  41b4c2:	loope  0x41b44c
  41b4c4:	ja     0x41b4f2
  41b4c6:	jno    0x41b50d
  41b4c8:	xor    edi,edx
  41b4ca:	loop   0x41b4cd
  41b4cc:	scas   al,BYTE PTR es:[edi]
  41b4cd:	sti    
  41b4ce:	adc    bl,BYTE PTR [esi-0xa]
  41b4d1:	push   0x5f
  41b4d3:	jae    0x41b4fc
  41b4d5:	pop    es
  41b4d6:	stos   BYTE PTR es:[edi],al
  41b4d7:	push   ebp
  41b4d8:	mov    ah,0xca
  41b4da:	adc    eax,0xae00001a
  41b4df:	cmp    eax,0x307188ee
  41b4e4:	pop    edi
  41b4e5:	shr    DWORD PTR [ecx],cl
  41b4e7:	ds out dx,al
  41b4e9:	jbe    0x41b51f
  41b4eb:	retf   0x1e7
  41b4ee:	imul   esi,DWORD PTR [ecx],0x2a
  41b4f1:	xor    esi,0x46c5af04
  41b4f7:	rcl    BYTE PTR [esi],cl
  41b4f9:	les    ebp,FWORD PTR [ebx+0x62]
  41b4fc:	daa    
  41b4fd:	imul   esi,edi,0xcfc2e704
  41b503:	retf   0x65f
  41b506:	fbstp  TBYTE PTR [esi]
  41b508:	mov    ebp,0xb635df4a
  41b50d:	or     al,0xae
  41b50f:	jp     0x41b512
  41b511:	loope  0x41b4c4
  41b513:	xor    DWORD PTR [edx+edi*8-0x1c],0xffffffcb
  41b518:	xor    cl,dl
  41b51a:	mov    eax,eax
  41b51c:	out    0xd2,eax
  41b51e:	or     DWORD PTR [ecx+0xd],0x62
  41b522:	icebp  
  41b523:	and    ebp,ecx
  41b525:	shr    BYTE PTR [edi-0x40],1
  41b528:	sti    
  41b529:	push   es
  41b52a:	loope  0x41b557
  41b52c:	jmp    0xfc028fc6
  41b531:	mul    dl
  41b533:	daa    
  41b534:	jmp    0xfc028fd6
  41b539:	out    0xc2,al
  41b53b:	adc    ebp,ecx
  41b53d:	and    eax,0xd6fbc0d9
  41b542:	add    BYTE PTR [eax],al
  41b544:	ret    0xe90b
  41b547:	or     eax,0x53fbc199
  41b54c:	arpl   WORD PTR [edx-0x17],bp
  41b54f:	adc    BYTE PTR [edx+0x32affbc1],bl
  41b555:	rcr    BYTE PTR ss:[edx],0x68
  41b559:	push   0x54
  41b55b:	jb     0x41b569
  41b55d:	pop    edx
  41b55e:	cld    
  41b55f:	jno    0x41b595
  41b561:	xor    al,0x1
  41b563:	jmp    0x53b:0x2ac7e439
  41b56a:	out    dx,al
  41b56b:	xchg   BYTE PTR [ebx+0x5c],ah
  41b56e:	mov    cl,dh
  41b570:	int3   
  41b571:	and    al,0x63
  41b573:	jbe    0x41b550
  41b575:	mov    edi,0x2cdcf973
  41b57a:	arpl   WORD PTR [esi-0x35],sp
  41b57d:	mov    edi,0x343469b3
  41b582:	add    DWORD PTR [ecx-0x45],eax
  41b585:	push   ebp
  41b586:	cld    
  41b587:	dec    esi
  41b588:	fnstsw WORD PTR [bx+di]
  41b58b:	add    BYTE PTR [ecx+0x25137326],al
  41b591:	dec    eax
  41b592:	or     eax,0x6dcf5b03
  41b597:	jmp    DWORD PTR [ecx-0x40]
  41b59a:	inc    eax
  41b59b:	sbb    DWORD PTR [ebx+0x7],0x3a
  41b59f:	pop    edi
  41b5a0:	jle    0x41b5e6
  41b5a2:	call   0xe9744fa6
  41b5a7:	fld    QWORD PTR [eax]
  41b5a9:	add    BYTE PTR [ebx+0x4aa1fcbf],bh
  41b5af:	in     al,dx
  41b5b0:	inc    eax
  41b5b1:	add    ch,ah
  41b5b3:	mov    esi,0x65dac07e
  41b5b8:	mov    dl,BYTE PTR ds:0x40ec2e
  41b5be:	(bad)
  41b5c1:	leave  
  41b5c2:	(bad)  
  41b5c3:	aaa    
  41b5c4:	add    DWORD PTR [eax],eax
  41b5c6:	shr    DWORD PTR [ebx-0x41fe87f6],cl
  41b5cc:	cld    
  41b5cd:	xor    DWORD PTR [edi],0x38
  41b5d0:	jo     0x41b5db
  41b5d2:	(bad)  
  41b5d3:	iret   
  41b5d4:	add    DWORD PTR [eax],0xe
  41b5d7:	ss dec esi
  41b5d9:	jne    0x41b5a7
  41b5db:	add    ecx,edi
  41b5dd:	je     0x41b5c3
  41b5df:	mov    ah,0xfc
  41b5e1:	jne    0x41b5f3
  41b5e3:	push   0xbd2ba1e9
  41b5e8:	cld    
  41b5e9:	and    DWORD PTR [ebx],eax
  41b5eb:	out    0xc8,al
  41b5ed:	inc    ebx
  41b5ee:	(bad)  
  41b5f0:	adc    DWORD PTR [ebx-0x773bb06f],ecx
  41b5f6:	into   
  41b5f7:	xor    eax,0xf1aebe01
  41b5fc:	inc    eax
  41b5fd:	add    BYTE PTR [esi-0xd],ah
  41b600:	pop    edi
  41b601:	jmp    DWORD PTR [ecx-0x51]
  41b604:	ss aam 0x37
  41b607:	push   ss
  41b608:	inc    esp
  41b609:	add    BYTE PTR [eax],dl
  41b60b:	xchg   ecx,eax
  41b60c:	pop    eax
  41b60d:	pop    ecx
  41b60e:	add    BYTE PTR [eax],al
  41b610:	je     0x41b5b2
  41b612:	mov    ch,bl
  41b614:	mov    dh,0x6f
  41b616:	test   eax,0x51cb3707
  41b61b:	push   0x49
  41b61d:	pusha  
  41b61e:	mov    dl,0x73
  41b620:	mov    BYTE PTR [edx],bl
  41b622:	clc    
  41b623:	push   edi
  41b624:	pop    ebp
  41b626:	push   esi
  41b627:	(bad)  
  41b628:	js     0x41b682
  41b62a:	and    BYTE PTR [ebx+0x6c],0x32
  41b62e:	clc    
  41b62f:	dec    edi
  41b630:	and    al,0xb
  41b632:	push   ebp
  41b633:	push   eax
  41b634:	int    0xd4
  41b636:	dec    edi
  41b637:	std    
  41b638:	inc    edx
  41b639:	jnp    0x41b64d
  41b63b:	inc    eax
  41b63c:	aaa    
  41b63d:	pop    eax
  41b63e:	lds    ecx,FWORD PTR [edx+esi*4]
  41b641:	or     al,BYTE PTR [esi]
  41b643:	add    BYTE PTR [edi],dh
  41b645:	dec    BYTE PTR [ecx-0x91a2c7e]
  41b64b:	cld    
  41b64c:	xchg   DWORD PTR [esi-0x3e],edx
  41b64f:	mov    cl,dl
  41b651:	outs   dx,BYTE PTR ds:[esi]
  41b652:	cld    
  41b653:	cld    
  41b654:	and    bl,ah
  41b656:	jns    0x41b62f
  41b658:	sbb    BYTE PTR [edx+0x5740bf7b],cl
  41b65e:	xor    eax,0x6dcb08ff
  41b663:	cmp    BYTE PTR [edx+0xf579127],dh
  41b669:	xchg   ecx,eax
  41b66a:	pop    ecx
  41b66b:	push   eax
  41b66d:	pop    edi
  41b66e:	sbb    DWORD PTR [ebx-0x12],0x4ff6b9
  41b675:	add    BYTE PTR [eax+ebx*4+0x49fe5ae7],ch
  41b67c:	test   DWORD PTR [ebx+0xf7be1f7],0x3ea3436
  41b686:	lods   al,BYTE PTR ds:[esi]
  41b687:	mov    dh,0xbd
  41b689:	cld    
  41b68a:	mov    ebx,0x45fab9c0
  41b68f:	cld    
  41b690:	test   DWORD PTR [ebx+0x37],0x33fa41b5
  41b697:	mov    eax,0x3437033f
  41b69c:	sar    BYTE PTR [esp+edi*4],0x46
  41b6a0:	and    bl,BYTE PTR [ebx-0x61]
  41b6a3:	mov    al,0xc3
  41b6a5:	add    al,0x37
  41b6a7:	dec    esi
  41b6a8:	loopne 0x41b632
  41b6aa:	add    eax,0xb4ebb184
  41b6af:	popa   
  41b6b0:	jmp    0x753e93b8
  41b6b5:	jo     0x41b71e
  41b6b7:	pop    ebx
  41b6b8:	adc    bh,BYTE PTR [ecx+edi*8+0x32]
  41b6bc:	jmp    0x3a52:0xe9c0f5c1
  41b6c3:	mov    ch,BYTE PTR [ecx+edi*8]
  41b6c6:	lock scas al,BYTE PTR es:[edi]
  41b6c8:	and    al,0xcc
  41b6ca:	call   0xbc9e971c
  41b6cf:	inc    ecx
  41b6d0:	scas   al,BYTE PTR es:[edi]
  41b6d1:	in     al,dx
  41b6d2:	push   0x89f9c36f
  41b6d7:	pop    ebp
  41b6d8:	addr16 cld 
  41b6da:	add    BYTE PTR [eax],al
  41b6dc:	sbb    DWORD PTR [edi],ebp
  41b6de:	data16 mov al,0x10
  41b6e1:	shr    cl,0x86
  41b6e4:	mov    ch,0x60
  41b6e6:	mov    eax,ds:0x106503f9
  41b6eb:	stc    
  41b6ec:	lods   eax,DWORD PTR ds:[esi]
  41b6ed:	jns    0x41b749
  41b6ef:	push   esp
  41b6f0:	mov    esi,0x45f939f7
  41b6f5:	xor    al,0xd9
  41b6f7:	inc    ebx
  41b6f8:	aaa    
  41b6f9:	stos   DWORD PTR es:[edi],eax
  41b6fa:	add    DWORD PTR [ebp-0x19ff4025],0xe900a450
  41b704:	xor    al,0xab
  41b706:	test   ebp,eax
  41b708:	mov    ebp,0x4cb9fbc0
  41b70d:	cmp    BYTE PTR [edx],al
  41b70f:	jmp    0xbdc76248
  41b714:	mov    eax,ds:0x6b99fbc0
  41b719:	(bad)  
  41b71a:	push   edx
  41b71b:	ins    BYTE PTR es:[edi],dx
  41b71c:	pop    eax
  41b71d:	les    edx,FWORD PTR [eax+0x64]
  41b720:	push   eax
  41b721:	loopne 0x41b773
  41b723:	cs cmp al,al
  41b726:	adc    BYTE PTR [ecx-0x6a3f4ccc],ch
  41b72c:	fisubr WORD PTR [edx-0x3f967a7b]
  41b732:	sti    
  41b733:	xchg   DWORD PTR ds:0x5e046c83,ebp
  41b739:	shl    BYTE PTR [ebp+edx*8-0x2a],0xb4
  41b73e:	cmp    dh,al
  41b740:	add    BYTE PTR [eax],al
  41b742:	loope  0x41b779
  41b744:	addr16 (bad) 
  41b746:	in     eax,dx
  41b747:	push   ebp
  41b748:	mov    dh,cl
  41b74a:	mov    ebx,0xfc46fe7f
  41b74f:	add    esi,DWORD PTR [esi-0x3b]
  41b752:	mov    ebx,0x575401bf
  41b757:	stos   DWORD PTR es:[edi],eax
  41b758:	test   DWORD PTR ds:0x19fbc026,ebx
  41b75e:	mov    al,0xb1
  41b760:	ins    BYTE PTR es:[edi],dx
  41b761:	mov    ah,0xf
  41b763:	ror    BYTE PTR [ebp-0x44297b4],0xa6
  41b76a:	or     al,0x4e
  41b76c:	fstp   DWORD PTR [esi+0x1dc0b2ff]
  41b772:	push   ecx
  41b773:	stos   DWORD PTR es:[edi],eax
  41b774:	lea    esi,ds:0xfbbfe6
  41b77a:	lds    esi,FWORD PTR [eax+ecx*4]
  41b77d:	lea    ebp,[edx]
  41b77f:	(bad)  
  41b780:	cld    
  41b781:	call   DWORD PTR [ebp+0x6e]
  41b784:	or     eax,ebp
  41b786:	out    0x32,al
  41b788:	add    DWORD PTR [eax],eax
  41b78a:	push   edx
  41b78b:	rep outs dx,DWORD PTR ds:[esi]
  41b78d:	or     eax,0x80fdfe58
  41b792:	mov    edi,DWORD PTR [ebx+0x161c0ff9]
  41b798:	(bad)  
  41b799:	(bad)  
  41b79a:	stc    
  41b79b:	pop    ebx
  41b79c:	pop    edx
  41b79d:	pop    esi
  41b79e:	addr16 stc 
  41b7a0:	(bad)  
  41b7a1:	push   DWORD PTR [ebx+0x81e7af]
  41b7a7:	add    BYTE PTR [edx+0x57],cl
  41b7aa:	add    al,BYTE PTR [eax]
  41b7ac:	mov    fs,WORD PTR [edi+0x53]
  41b7af:	push   0x61
  41b7b1:	mov    ch,0x6e
  41b7b3:	in     al,0xa6
  41b7b5:	test   eax,0xd9d5f44e
  41b7ba:	jecxz  0x41b83b
  41b7bc:	fwait
  41b7bd:	xor    DWORD PTR [ecx],eax
  41b7bf:	(bad)  
  41b7c0:	shr    DWORD PTR [esi+0x6149fff7],cl
  41b7c6:	mov    al,dh
  41b7c8:	ss and eax,0xb359ffd9
  41b7ce:	mov    ebx,0xfb83d20f
  41b7d3:	call   FWORD PTR [esi]
  41b7d5:	add    esi,ebx
  41b7d7:	push   esi
  41b7d8:	jbe    0x41b792
  41b7da:	sti    
  41b7db:	dec    DWORD PTR [esi]
  41b7dd:	dec    esp
  41b7de:	call   DWORD PTR [ebp-0x7c]
  41b7e1:	aaa    
  41b7e2:	imul   eax,DWORD PTR [eax],0x8d41321e
  41b7e8:	xchg   ebx,eax
  41b7e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ea:	idiv   edi
  41b7ec:	fldcw  WORD PTR [eax-0x2]
  41b7ef:	adc    eax,0x412262
  41b7f4:	aaa    
  41b7f5:	push   esp
  41b7f6:	inc    edx
  41b7f7:	cld    
  41b7f8:	mov    ah,0xa3
  41b7fa:	repz or al,0xbb
  41b7fd:	inc    esp
  41b7fe:	add    eax,0x67263700
  41b803:	cmp    al,0xc2
  41b805:	or     BYTE PTR [ecx+0x5d4ec8fd],bl
  41b80b:	xor    al,BYTE PTR [eax]
  41b80d:	add    ah,bl
  41b80f:	arpl   sp,bp
  41b811:	pop    ebx
  41b812:	ss retf 
  41b814:	dec    ebp
  41b815:	mov    DWORD PTR [edx-0x5d],ebp
  41b818:	push   cs
  41b819:	inc    eax
  41b81a:	aaa    
  41b81b:	pusha  
  41b81c:	inc    edx
  41b81d:	clc    
  41b81e:	pop    es
  41b81f:	mov    dh,0x3a
  41b821:	call   FWORD PTR [eax-0x4574b535]
  41b827:	addr16 repz cld 
  41b82a:	mov    BYTE PTR [ebx+0x168372f2],bl
  41b830:	retf   
  41b831:	xor    BYTE PTR [edi-0x59],0x2b
  41b835:	aaa    
  41b836:	repnz and dh,BYTE PTR [edx+0x2d]
  41b83a:	mov    ah,0xb0
  41b83c:	jmp    0x41b83d
  41b83e:	in     al,0xe9
  41b840:	bnd jb 0x41b8a6
  41b843:	mov    esi,0x8b25c410
  41b848:	jmp    FWORD PTR [ecx+0x37]
  41b84b:	push   edx
  41b84c:	std    
  41b84d:	mov    bh,dl
  41b84f:	ror    BYTE PTR [edi+0x55],cl
  41b852:	cmp    BYTE PTR [eax-0xf],ch
  41b855:	cld    
  41b856:	stos   BYTE PTR es:[edi],al
  41b857:	out    0xf2,eax
  41b859:	aad    0xb2
  41b85b:	mov    ch,BYTE PTR [ebx+0x7]
  41b85e:	pop    esi
  41b85f:	js     0x41b85e
  41b861:	jb     0x41b896
  41b863:	cmp    al,BYTE PTR ds:0xd6b935e9
  41b869:	cld    
  41b86a:	or     BYTE PTR [edi+0x33c712f2],0xf8
  41b871:	inc    ebx
  41b872:	add    BYTE PTR [eax],al
  41b874:	aaa    
  41b875:	mov    ebp,0x26f3f814
  41b87a:	mov    ds:0x2b347711,al
  41b87f:	cmp    bh,0x46
  41b882:	test   BYTE PTR [eax-0x982584b],0xd3
  41b889:	arpl   WORD PTR [edx+0x6abce518],ax
  41b88f:	push   ebp
  41b890:	xchg   DWORD PTR [edx],esi
  41b892:	mov    edi,0x6f66f7cc
  41b897:	out    0xb7,eax
  41b899:	iret   
  41b89a:	rol    DWORD PTR [ebx+0x4236446d],0x37
  41b8a1:	xor    edx,DWORD PTR [edi+0x39a9024d]
  41b8a7:	push   es
  41b8a8:	mov    ecx,0x3703e99f
  41b8ad:	dec    esp
  41b8ae:	push   esi
  41b8af:	outs   dx,BYTE PTR ds:[esi]
  41b8b0:	div    DWORD PTR [ebx]
  41b8b2:	and    edx,DWORD PTR [eax]
  41b8b4:	jg     0x41b8d9
  41b8b6:	stos   BYTE PTR es:[edi],al
  41b8b7:	add    esi,DWORD PTR [ebx+esi*8+0x33b17fe2]
  41b8be:	jmp    0xd175:0x7dc5b403
  41b8c5:	mov    al,0xbb
  41b8c7:	add    ecx,ebx
  41b8c9:	cmp    ebx,DWORD PTR [esi+esi*8+0x43d79c25]
  41b8d0:	aaa    
  41b8d1:	scas   eax,DWORD PTR es:[edi]
  41b8d2:	in     eax,dx
  41b8d3:	jle    0x41b90b
  41b8d5:	xor    al,0xea
  41b8d7:	add    eax,DWORD PTR [eax]
  41b8d9:	add    BYTE PTR [edi+0x2a6289cc],al
  41b8df:	mov    esp,0xbbb5fc5e
  41b8e4:	cmp    eax,0x6ee3ae5f
  41b8e9:	(bad)  
  41b8ea:	sbb    bl,ah
  41b8ec:	add    BYTE PTR [edi],ah
  41b8ee:	add    bh,BYTE PTR [ecx-0x3b6fa3ad]
  41b8f4:	jg     0x41b8a7
  41b8f6:	add    dl,ah
  41b8f8:	test   DWORD PTR [edi],ebp
  41b8fa:	jmp    0x9dd4:0xb6353b8
  41b901:	or     ebp,edx
  41b903:	mov    eax,0x7067a284
  41b908:	addr16 mov esp,0x11993eb9
  41b90e:	fstp   TBYTE PTR [ecx-0x46cb17a9]
  41b914:	jne    0x41b96f
  41b916:	scas   al,BYTE PTR es:[edi]
  41b917:	lock push eax
  41b919:	ins    BYTE PTR es:[edi],dx
  41b91a:	jo     0x41b8d4
  41b91c:	push   eax
  41b91d:	inc    ecx
  41b91e:	xchg   ebp,eax
  41b91f:	outs   dx,BYTE PTR ds:[esi]
  41b920:	cld    
  41b921:	dec    esi
  41b922:	mov    dh,0xf7
  41b924:	or     al,0x6c
  41b926:	jae    0x41b950
  41b928:	pushf  
  41b929:	sub    ah,BYTE PTR [ebx-0x7dc9b48b]
  41b92f:	mov    bh,0xd7
  41b931:	mov    ch,0x1d
  41b933:	mov    ecx,0xcd8b2575
  41b938:	cld    
  41b939:	push   ds
  41b93a:	push   0xffffffb8
  41b93c:	jne    0x41b953
  41b93e:	add    BYTE PTR [eax],al
  41b940:	pop    ebx
  41b941:	pop    ecx
  41b942:	pop    edi
  41b943:	push   cs
  41b944:	push   0xffffffcc
  41b946:	add    edx,DWORD PTR [ebx-0x22633cc]
  41b94c:	dec    ebx
  41b94d:	mov    eax,0xf2ef975b
  41b952:	mov    edi,0x7fcfaf94
  41b957:	aad    0x1c
  41b959:	gs push ebx
  41b95b:	data16 (bad) ss:[eax-0x63]
  41b960:	push   DWORD PTR [ebx+0x1]
  41b963:	bound  esp,QWORD PTR [edx+esi*4]
  41b966:	sbb    eax,0x40ebbe00
  41b96b:	add    BYTE PTR [edi+0x5dcbd522],al
  41b971:	xor    dh,bh
  41b973:	adc    eax,0x4124fa
  41b978:	test   edx,edi
  41b97a:	or     BYTE PTR [ebx+0x40eba2],ah
  41b980:	push   ebp
  41b981:	cli    
  41b982:	or     al,0xa3
  41b984:	outs   dx,BYTE PTR ds:[esi]
  41b985:	in     al,dx
  41b986:	inc    eax
  41b987:	add    BYTE PTR [ebp-0x6],ah
  41b98a:	adc    BYTE PTR [ebx+0x40ec7a],ah
  41b990:	push   ebp
  41b991:	cli    
  41b992:	adc    al,0xa3
  41b994:	mov    dl,0xeb
  41b996:	inc    eax
  41b997:	add    BYTE PTR [ebp-0x6],al
  41b99a:	sbb    BYTE PTR [edx+0x41],ch
  41b99d:	xchg   ebp,eax
  41b99e:	xchg   edi,eax
  41b99f:	retf   
  41b9a0:	fnsave [esi]
  41b9a2:	mov    BYTE PTR [ebp+0x0],bh
  41b9a5:	add    dh,dh
  41b9a7:	pop    esi
  41b9a8:	test   BYTE PTR ds:0x40ebc6,dh
  41b9ae:	out    0x53,al
  41b9b0:	pop    edx
  41b9b1:	add    DWORD PTR [esi-0x57af3b55],ebx
  41b9b7:	stos   DWORD PTR es:[edi],eax
  41b9b8:	cs test al,0x7c
  41b9bb:	jbe    0x41b9be
  41b9bd:	jmp    FWORD PTR [eax]
  41b9bf:	dec    ebp
  41b9c0:	xor    DWORD PTR [ebx+0x40ebe6],esp
  41b9c6:	add    eax,DWORD PTR [edx-0xf]
  41b9c9:	pop    eax
  41b9ca:	inc    esi
  41b9cb:	clc    
  41b9cc:	pop    ecx
  41b9cd:	add    DWORD PTR [esi-0x55],ebx
  41b9d0:	les    edx,FWORD PTR [eax+0x41]
  41b9d3:	or     BYTE PTR [ecx-0x1c97235],ch
  41b9d9:	(bad)  
  41b9da:	in     al,0x0
  41b9dc:	mov    ds:0x171e5b0,al
  41b9e1:	lea    esi,[edi]
  41b9e3:	pusha  
  41b9e4:	cmc    
  41b9e5:	push   edi
  41b9e6:	(bad)  
  41b9e8:	dec    edx
  41b9e9:	call   FWORD PTR [eax]
  41b9eb:	inc    edi
  41b9ec:	enter  0x104f,0xc1
  41b9f0:	xchg   edi,eax
  41b9f1:	enter  0xcb74,0xee
  41b9f5:	aad    0x8d
  41b9f7:	mov    ebp,0xeec93a2
  41b9fc:	add    eax,0x4ca3728b
  41ba01:	call   0x47c04c
  41ba06:	lods   al,BYTE PTR ds:[esi]
  41ba07:	xchg   edx,eax
  41ba08:	push   esp
  41ba09:	std    
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	and    ah,BYTE PTR [ebx-0x44]
  41ba0f:	inc    eax
  41ba10:	aaa    
  41ba11:	cmp    dl,bh
  41ba13:	mov    al,ds:0x4396ef
  41ba18:	(bad)  
  41ba19:	out    0x87,eax
  41ba1b:	enter  0xcb74,0x73
  41ba1f:	sbb    DWORD PTR [esi-0x48],ebp
  41ba22:	scas   eax,DWORD PTR es:[edi]
  41ba23:	enter  0xcaf4,0x73
  41ba27:	adc    DWORD PTR [esi-0x38],ebx
  41ba2a:	xchg   ebx,eax
  41ba2b:	enter  0xcaf4,0x73
  41ba2f:	or     DWORD PTR [ecx-0x30],edi
  41ba32:	fwait
  41ba33:	enter  0xcaf4,0x4
  41ba37:	cmp    DWORD PTR [eax+eax*4+0x9],esi
  41ba3b:	mov    BYTE PTR [edx],bl
  41ba3d:	pop    edi
  41ba3e:	mov    esp,0x517a3740
  41ba43:	pop    ecx
  41ba44:	jle    0x41ba53
  41ba46:	sbb    DWORD PTR [eax],eax
  41ba48:	or     dl,BYTE PTR [esi-0x1f]
  41ba4b:	or     BYTE PTR [ebx-0x61],0x59
  41ba4f:	push   ebp
  41ba50:	fisttp QWORD PTR [esi-0x530e17ae]
  41ba56:	out    dx,al
  41ba57:	cld    
  41ba58:	int    0x76
  41ba5a:	cmp    BYTE PTR [edx-0x7d],0x34
  41ba5e:	inc    edx
  41ba5f:	fsub   st(2),st
  41ba61:	pop    ebp
  41ba62:	jmp    0x654d576a
  41ba67:	jo     0x41ba60
  41ba69:	pop    ebx
  41ba6a:	ret    0x7e9e
  41ba6d:	xor    ebp,edx
  41ba6f:	jle    0x41ba71
  41ba71:	add    BYTE PTR [ebp+0x3b706f24],al
  41ba77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba78:	sub    al,0xe4
  41ba7a:	jo     0x41baca
  41ba7c:	call   0xf70e1cda
  41ba81:	(bad)  
  41ba82:	lock mov eax,0xb03bc364
  41ba88:	mov    ch,0x5
  41ba8a:	aaa    
  41ba8b:	xor    al,0x0
  41ba8d:	cld    
  41ba8e:	push   0xbde42cad
  41ba93:	data16 ss fcmovnu st,st(7)
  41ba97:	push   0x73
  41ba99:	repnz mov ch,0xf3
  41ba9c:	fimul  DWORD PTR [eax+0x3ea35f2]
  41baa2:	mov    esp,0x1d534e6e
  41baa7:	xor    edi,DWORD PTR [edx+ebx*2+0x370cb8f]
  41baae:	aaa    
  41baaf:	stos   DWORD PTR es:[edi],eax
  41bab0:	lods   al,BYTE PTR ds:[esi]
  41bab1:	xlat   BYTE PTR ds:[ebx]
  41bab2:	mov    ch,0xf3
  41bab4:	jmp    0xb603:0xea35da87
  41babb:	ss add ebp,DWORD PTR ds:[edx]
  41babf:	mov    al,0x4d
  41bac1:	add    eax,0x486d3437
  41bac6:	pop    edi
  41bac7:	arpl   WORD PTR [eax+0x2610903],ax
  41bacd:	leave  
  41bace:	shl    DWORD PTR [ebx],0xea
  41bad1:	jl     0x41bac8
  41bad3:	out    0x64,eax
  41bad5:	ret    
  41bad6:	add    BYTE PTR [eax],al
  41bad8:	cmp    esi,DWORD PTR [eax+0x343a6500]
  41bade:	add    DWORD PTR [edx-0x39],ebp
  41bae1:	retf   
  41bae2:	add    dh,dh
  41bae4:	mov    eax,0x34e8feb5
  41bae9:	stos   DWORD PTR es:[edi],eax
  41baea:	inc    ebp
  41baeb:	(bad)  [ebx-0x7c56ba55]
  41baf1:	pop    esi
  41baf2:	push   esp
  41baf3:	rcr    ecx,1
  41baf5:	sahf   
  41baf6:	add    cl,ch
  41baf8:	lea    esi,[edx-0x27]
  41bafb:	ins    BYTE PTR es:[edi],dx
  41bafc:	sti    
  41bafd:	sub    BYTE PTR [ebp+0x1343141],al
  41bb03:	push   0x60
  41bb05:	les    eax,FWORD PTR [eax]
  41bb07:	out    dx,al
  41bb08:	mov    al,0x59
  41bb0a:	(bad)  
  41bb0b:	call   0x85876644
  41bb10:	or     DWORD PTR [edx+0x0],0x1f
  41bb14:	outs   dx,BYTE PTR ds:[esi]
  41bb15:	int3   
  41bb16:	and    BYTE PTR [eax+0x33],0x34
  41bb1a:	mov    ch,BYTE PTR [ebx+eax*4]
  41bb1d:	mov    dl,0xc0
  41bb1f:	fidiv  WORD PTR [eax+0x34e8ff71]
  41bb25:	mov    ch,0x65
  41bb27:	push   ebp
  41bb28:	xor    ecx,DWORD PTR [edx+0x24]
  41bb2b:	adc    BYTE PTR fs:[eax+0x5e7a4158],ah
  41bb32:	add    ch,cl
  41bb34:	adc    DWORD PTR [edx-0x7],esi
  41bb37:	cdq    
  41bb38:	or     esi,eax
  41bb3a:	push   eax
  41bb3b:	lahf   
  41bb3c:	add    BYTE PTR [eax],al
  41bb3e:	xchg   DWORD PTR [edx+0xd],eax
  41bb41:	inc    ecx
  41bb42:	fstp   QWORD PTR [esi+0x77b9e900]
  41bb48:	je     0x41baf4
  41bb4a:	mov    bl,0x3a
  41bb4c:	stc    
  41bb4d:	jmp    0xeb5b6b89
  41bb52:	xor    al,0x34
  41bb54:	add    BYTE PTR [eax],0xbb
  41bb57:	retf   
  41bb58:	or     DWORD PTR [edi],ecx
  41bb5a:	shl    DWORD PTR [edi+edi*8],1
  41bb5d:	dec    DWORD PTR [esi+0x63]
  41bb60:	mov    al,BYTE PTR [ebp+0x46]
  41bb63:	outs   dx,DWORD PTR ss:[esi]
  41bb65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb66:	push   es
  41bb67:	int3   
  41bb68:	inc    ecx
  41bb69:	dec    DWORD PTR [ecx]
  41bb6b:	ss ja  0x41bb62
  41bb6e:	xchg   ebp,eax
  41bb6f:	fucom  st(3)
  41bb71:	inc    ecx
  41bb72:	sbb    al,0x33
  41bb74:	add    DWORD PTR [eax-0xe7fcbe4],ebp
  41bb7a:	pop    ds
  41bb7b:	xor    eax,DWORD PTR [ecx]
  41bb7d:	mov    edx,DWORD PTR [ebx-0x34]
  41bb80:	xor    al,BYTE PTR [ebp-0x3e]
  41bb83:	xor    edi,DWORD PTR [edi-0x1b]
  41bb86:	fbstp  TBYTE PTR [edx]
  41bb88:	add    DWORD PTR [ecx],ebp
  41bb8a:	adc    edi,DWORD PTR [eax+ebp*8-0x1ab9b2f6]
  41bb91:	add    cl,bh
  41bb93:	lods   eax,DWORD PTR ds:[esi]
  41bb94:	aad    0x1
  41bb96:	fidiv  WORD PTR [edx]
  41bb98:	mov    al,BYTE PTR [ebp-0x3a]
  41bb9b:	jmp    0x41bb9d
  41bb9d:	add    cl,dh
  41bb9f:	xor    al,BYTE PTR [ecx]
  41bba1:	mov    eax,DWORD PTR [eax]
  41bba3:	add    BYTE PTR [esi],cl
  41bba5:	sbb    al,0x67
  41bba7:	pop    es
  41bba8:	popa   
  41bba9:	outs   dx,BYTE PTR ds:[esi]
  41bbaa:	loope  0x41bbda
  41bbac:	sahf   
  41bbad:	xor    al,BYTE PTR [ecx]
  41bbaf:	pop    esi
  41bbb0:	adc    esi,ebx
  41bbb2:	jge    0x41bbe8
  41bbb4:	faddp  st(3),st
  41bbb6:	push   cs
  41bbb7:	cwde   
  41bbb8:	inc    ebp
  41bbb9:	jo     0x41bbbc
  41bbbb:	pop    ecx
  41bbbc:	pop    es
  41bbbd:	outs   dx,BYTE PTR ds:[esi]
  41bbbe:	fld    QWORD PTR [ebp+0x6a203f4e]
  41bbc4:	jge    0x41bbfb
  41bbc6:	ja     0x41bb70
  41bbc8:	jbe    0x41bba4
  41bbca:	push   ebp
  41bbcb:	pop    ecx
  41bbcc:	pop    edi
  41bbcd:	xor    cl,BYTE PTR [edx+0x5e01374d]
  41bbd3:	pop    es
  41bbd4:	lods   al,BYTE PTR ds:[esi]
  41bbd5:	or     eax,0x2dd79cd8
  41bbda:	icebp  
  41bbdb:	xor    BYTE PTR [edi+0x3f],0xfe
  41bbdf:	imul   ebp,DWORD PTR [edi],0xae04306
  41bbe5:	int    0xff
  41bbe7:	call   DWORD PTR [ecx-0x430fb5be]
  41bbed:	or     cl,ah
  41bbef:	or     al,0xe8
  41bbf1:	aad    0xff
  41bbf3:	lds    ebp,FWORD PTR [edx-0x440102f1]
  41bbf9:	mov    edi,DWORD PTR [eax+0x3]
  41bbfc:	pop    ds
  41bbfd:	dec    ebp
  41bbfe:	dec    esp
  41bbff:	std    
  41bc00:	add    BYTE PTR [ebp+0x40],dl
  41bc03:	or     BYTE PTR [edx+0x8798b],dh
  41bc09:	add    BYTE PTR [eax+ecx*1-0x33ac1907],bh
  41bc10:	(bad)  
  41bc11:	jmp    FWORD PTR [ebx+eiz*4-0x4c28bd89]
  41bc18:	not    DWORD PTR [esi+0x36]
  41bc1b:	retf   
  41bc1c:	jbe    0x41bc60
  41bc1e:	mov    DWORD PTR [edx+0x38],0x7a3e6708
  41bc25:	fdiv   DWORD PTR [edx*4-0x40db78ab]
  41bc2c:	xlat   BYTE PTR ds:[ebx]
  41bc2d:	ror    DWORD PTR [eax],0x56
  41bc30:	in     al,dx
  41bc31:	(bad)  
  41bc32:	cmc    
  41bc33:	into   
  41bc34:	jbe    0x41bc80
  41bc36:	or     DWORD PTR [ebx+0x2e],0x2d
  41bc3a:	mov    esp,0x3d73fb8a
  41bc3f:	inc    edx
  41bc40:	push   eax
  41bc41:	or     BYTE PTR [ecx-0x39],bh
  41bc44:	cvtps2pi mm7,QWORD PTR [eax-0x76]
  41bc48:	sti    
  41bc49:	mov    dl,bh
  41bc4b:	xor    edx,DWORD PTR [esi]
  41bc4d:	push   esp
  41bc4e:	clc    
  41bc4f:	test   al,0xae
  41bc51:	push   DWORD PTR [edi]
  41bc53:	imul   esp,edx,0xaa9b4f54
  41bc59:	out    dx,al
  41bc5a:	push   ebx
  41bc5b:	xor    esp,DWORD PTR [edi-0x118e4001]
  41bc61:	jp     0x41bc52
  41bc63:	sub    eax,DWORD PTR [eax-0x1dcf8ee7]
  41bc69:	add    edi,DWORD PTR [esi+esi*1+0x4bba]
  41bc70:	pop    ds
  41bc71:	jg     0x41bcb4
  41bc73:	add    eax,0xec2ca737
  41bc78:	push   0x1253a2a9
  41bc7d:	aas    
  41bc7e:	(bad)  
  41bc80:	test   DWORD PTR [eax],ebp
  41bc82:	ror    BYTE PTR ds:0x88ea339f,cl
  41bc88:	mov    eax,0x657ad53f
  41bc8d:	mov    esp,0x2664f56c
  41bc92:	cmp    bh,BYTE PTR [ebx-0x6]
  41bc95:	retf   
  41bc96:	repz inc ecx
  41bc98:	fidiv  DWORD PTR [eax+eiz*2-0x954d8be]
  41bc9f:	pop    ss
  41bca0:	mov    esi,0xc079ae6e
  41bca5:	clc    
  41bca6:	sbb    DWORD PTR [ecx+0x2b],edi
  41bca9:	mov    cl,0xec
  41bcab:	(bad)  [edi+edi*1]
  41bcae:	in     al,dx
  41bcaf:	(bad)
  41bcb2:	jmp    0xab3a0791
  41bcb7:	(bad)  
  41bcb8:	mov    ch,0x63
  41bcba:	dec    ebx
  41bcbb:	out    dx,al
  41bcbc:	xchg   ebx,eax
  41bcbd:	mov    al,0xc4
  41bcbf:	(bad)  [edi]
  41bcc1:	and    eax,0xb4824565
  41bcc6:	add    BYTE PTR [esi],dh
  41bcc8:	jb     0x41bd3d
  41bcca:	sbb    ecx,ebp
  41bccc:	push   cs
  41bccd:	or     al,0x8e
  41bccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcd0:	nop
  41bcd1:	pop    esp
  41bcd2:	jmp    0xec41bd8c
  41bcd7:	mov    ah,0xfb
  41bcd9:	fs out dx,eax
  41bcdb:	mov    ebx,0x64796250
  41bce0:	cld    
  41bce1:	jl     0x41bd07
  41bce3:	mov    bh,0x75
  41bce5:	in     eax,dx
  41bce6:	pop    esp
  41bce7:	jns    0x41bc7c
  41bce9:	jmp    0x76026e22
  41bcee:	dec    edi
  41bcef:	mov    ebp,0xa9b0e175
  41bcf4:	je     0x41bce5
  41bcf6:	test   BYTE PTR [ebp+0x72c8c1c2],bh
  41bcfc:	cld    
  41bcfd:	into   
  41bcfe:	mov    esp,?
  41bd00:	sbb    al,0x70
  41bd02:	xchg   BYTE PTR [eax+ecx*4+0x24],dl
  41bd06:	movsx  ecx,WORD PTR [eax-0x4a]
  41bd0a:	mov    ah,0xaa
  41bd0c:	sti    
  41bd0d:	scas   al,BYTE PTR es:[edi]
  41bd0e:	repnz mov bl,0x72
  41bd11:	lock outs dx,DWORD PTR ds:[esi]
  41bd13:	dec    al
  41bd15:	jo     0x41bd35
  41bd17:	pop    eax
  41bd18:	mov    ch,BYTE PTR [edx]
  41bd1a:	cmp    ebx,DWORD PTR [esi]
  41bd1c:	sub    BYTE PTR [eax+eiz*2-0x28],bl
  41bd20:	pop    eax
  41bd21:	xchg   ecx,eax
  41bd22:	xor    cl,BYTE PTR [edx+eax*1]
  41bd25:	jmp    0x1a3ab36b
  41bd2a:	ds js  0x41bd7d
  41bd2d:	outs   dx,BYTE PTR ds:[esi]
  41bd2e:	sub    BYTE PTR [esp+edi*8-0x24],al
  41bd32:	test   al,0x9b
  41bd34:	jo     0x41bdac
  41bd36:	cmp    esi,DWORD PTR [eax+ecx*4]
  41bd39:	pop    ecx
  41bd3a:	add    BYTE PTR [eax],al
  41bd3c:	mov    al,0xa9
  41bd3e:	je     0x41bd41
  41bd40:	mov    dh,0x2e
  41bd42:	stc    
  41bd43:	add    BYTE PTR [esi-0x3272e0d7],bl
  41bd49:	addr16 push ecx
  41bd4b:	(bad)  
  41bd4c:	int    0x53
  41bd4e:	push   ecx
  41bd4f:	jmp    FWORD PTR [ebx+0x46c6889f]
  41bd55:	mov    bh,0x99
  41bd57:	add    BYTE PTR [esi-0x45],cl
  41bd5a:	mov    ebx,0x3f2c5275
  41bd5f:	clc    
  41bd60:	mov    BYTE PTR [edi-0x5ecebead],cl
  41bd66:	add    BYTE PTR [ebx-0x76],0x8f
  41bd6a:	pop    esp
  41bd6b:	and    eax,DWORD PTR [ecx-0x60]
  41bd6e:	add    BYTE PTR [ebx-0x22],0x2b
  41bd72:	aas    
  41bd73:	or     BYTE PTR [edi-0x5616fb0c],ah
  41bd79:	mov    eax,ds:0xef8dfffc
  41bd7e:	cld    
  41bd7f:	pop    edi
  41bd80:	pusha  
  41bd81:	out    dx,eax
  41bd82:	ror    DWORD PTR [esi+ebx*1],0xa
  41bd86:	mov    ch,ah
  41bd88:	lea    edx,[ebx+0x7f95531f]
  41bd8e:	mov    BYTE PTR [ebp+0xe],al
  41bd91:	xor    al,0xc2
  41bd93:	push   esi
  41bd94:	dec    edx
  41bd95:	lods   eax,DWORD PTR ds:[esi]
  41bd96:	jecxz  0x41bd8a
  41bd98:	and    esp,DWORD PTR [ecx-0x46417404]
  41bd9e:	cmc    
  41bd9f:	jne    0x41bda1
  41bda1:	add    cl,bl
  41bda3:	arpl   cx,ax
  41bda5:	jmp    0x42f50c
  41bdaa:	sub    DWORD PTR [esi],ecx
  41bdac:	es (bad) 
  41bdae:	ret    
  41bdaf:	adc    BYTE PTR [ebx-0x18],0xa2
  41bdb3:	pop    es
  41bdb4:	cld    
  41bdb5:	jmp    DWORD PTR [ebx]
  41bdb7:	cli    
  41bdb8:	cld    
  41bdb9:	push   eax
  41bdba:	and    eax,0x37534b78
  41bdbf:	or     dh,BYTE PTR [ebx+0x8]
  41bdc2:	lahf   
  41bdc3:	stc    
  41bdc4:	xchg   ebp,eax
  41bdc5:	dec    DWORD PTR [eax-0x4507bcdd]
  41bdcb:	pop    esp
  41bdcc:	je     0x41be31
  41bdce:	or     eax,0x63427a97
  41bdd3:	int3   
  41bdd4:	in     al,dx
  41bdd5:	jb     0x41be1e
  41bdd7:	pop    edx
  41bdd8:	adc    ebp,DWORD PTR [ecx+ecx*2]
  41bddb:	(bad)  
  41bddd:	xor    BYTE PTR [ebx-0x68],0x7a
  41bde1:	inc    edx
  41bde2:	arpl   sp,bp
  41bde4:	in     al,dx
  41bde5:	adc    dh,BYTE PTR [ebx-0x72]
  41bde8:	aas    
  41bde9:	add    BYTE PTR [edi+eax*8-0x6b1dd719],ch
  41bdf0:	push   ecx
  41bdf1:	std    
  41bdf2:	stos   BYTE PTR es:[edi],al
  41bdf3:	xchg   ebx,eax
  41bdf4:	push   ebp
  41bdf5:	call   0xfd29b72c
  41bdfa:	xchg   DWORD PTR [eax],esp
  41bdfc:	cmp    ch,ah
  41bdfe:	xchg   BYTE PTR [eax],bl
  41be00:	stc    
  41be01:	xor    DWORD PTR [esi+0x73],esp
  41be04:	out    dx,eax
  41be05:	pop    edx
  41be06:	add    BYTE PTR [eax],al
  41be08:	or     BYTE PTR [ebx+0x79],bh
  41be0b:	cmp    esi,DWORD PTR ds:0x4cfc4226
  41be11:	lds    ebx,FWORD PTR [ebx]
  41be13:	fdiv   DWORD PTR [eax+ebx*2]
  41be16:	in     eax,dx
  41be17:	push   eax
  41be18:	xchg   DWORD PTR [eax],ebp
  41be1a:	add    DWORD PTR [esi],edi
  41be1c:	xchg   ebx,eax
  41be1e:	(bad)  
  41be1f:	pop    edx
  41be20:	fmul   st,st(2)
  41be22:	jns    0x41be66
  41be24:	shr    DWORD PTR [ebx+0x5b],cl
  41be27:	add    DWORD PTR [esi+esi*4],esi
  41be2a:	dec    edi
  41be2b:	push   esi
  41be2c:	iret   
  41be2d:	mov    dl,0x91
  41be2f:	(bad)  
  41be30:	mov    eax,0x3d72c520
  41be35:	dec    ecx
  41be36:	fisttp QWORD PTR [ecx-0x149ccbf6]
  41be3c:	addr16 je 0x41be8d
  41be3f:	or     eax,0xeafa279a
  41be44:	add    eax,0xc2dbba40
  41be49:	cmovae ebp,ebx
  41be4c:	scas   eax,DWORD PTR es:[edi]
  41be4d:	not    ebp
  41be4f:	jl     0x41be99
  41be51:	mov    ebp,0xaff41f2a
  41be56:	out    0x40,al
  41be58:	inc    edi
  41be59:	adc    esp,eax
  41be5b:	dec    esi
  41be5c:	js     0x41bed4
  41be5e:	stc    
  41be5f:	add    eax,DWORD PTR [edi*4+0x305c8705]
  41be66:	addr16 popa 
  41be68:	mov    bl,0x34
  41be6a:	jne    0x41bead
  41be6c:	add    BYTE PTR [eax],al
  41be6e:	mov    ebx,0x2f70fb04
  41be73:	mov    cl,0xdc
  41be75:	retf   
  41be76:	push   esp
  41be78:	jmp    0xa9f93ec9
  41be7d:	jo     0x41beb8
  41be7f:	hlt    
  41be80:	and    BYTE PTR [ecx-0x55],al
  41be83:	daa    
  41be84:	call   0xa7bcb5bf
  41be89:	dec    DWORD PTR [eax]
  41be8b:	or     al,bl
  41be8d:	outs   dx,DWORD PTR ds:[esi]
  41be8e:	pop    ebx
  41be8f:	cmp    al,0xbb
  41be91:	adc    bl,ch
  41be93:	jl     0x41bebb
  41be95:	add    al,0xbe
  41be97:	stos   DWORD PTR es:[edi],eax
  41be98:	adc    BYTE PTR [ecx-0x7c2ad815],al
  41be9e:	sbb    eax,0x3746aee0
  41bea3:	xor    al,0x1e
  41bea5:	and    bh,bl
  41bea7:	add    eax,0xb8370365
  41beac:	test   eax,0x3c0a1e6f
  41beb1:	scas   eax,DWORD PTR es:[edi]
  41beb2:	out    dx,eax
  41beb3:	hlt    
  41beb4:	add    cl,ch
  41beb6:	push   es
  41beb7:	scas   eax,DWORD PTR es:[edi]
  41beb8:	adc    eax,0xf44291
  41bebd:	mov    esi,0x5ef60f7c
  41bec2:	lea    eax,[esi]
  41bec4:	cld    
  41bec5:	cld    
  41bec6:	js     0x41bf0a
  41bec8:	inc    ecx
  41bec9:	jmp    0xa70579cc
  41bece:	jns    0x41bed3
  41bed0:	push   ebx
  41bed1:	jb     0x41bed3
  41bed3:	add    BYTE PTR [eax],cl
  41bed5:	pop    eax
  41bed6:	or     eax,0xa1455d9f
  41bedb:	and    dh,cl
  41bedd:	xor    ecx,DWORD PTR [eax-0x284b0cbf]
  41bee3:	xchg   esp,eax
  41bee4:	or     esi,DWORD PTR [ebp+0x6c079df2]
  41beea:	push   es
  41beeb:	cmp    eax,0x7d00f389
  41bef0:	pop    ds
  41bef1:	pushf  
  41bef2:	push   es
  41bef3:	fs xor al,0x34
  41bef6:	test   DWORD PTR [ecx],ebp
  41bef8:	mov    al,ds:0xd82e5458
  41befd:	jl     0x41bf3e
  41beff:	jmp    0xc157708b
  41bf04:	inc    ecx
  41bf05:	hlt    
  41bf06:	add    cl,al
  41bf08:	out    dx,al
  41bf09:	mov    ds:0xa7b2cefb,eax
  41bf0e:	sti    
  41bf0f:	cmp    eax,0xb7859800
  41bf14:	push   cs
  41bf15:	mov    cl,0x53
  41bf17:	mov    dh,0x40
  41bf19:	nop
  41bf1a:	push   cs
  41bf1b:	sub    DWORD PTR [ebx],esi
  41bf1d:	adc    DWORD PTR [ebx+0x72],ebx
  41bf20:	cli    
  41bf21:	or     al,0xc0
  41bf23:	ss pop edx
  41bf25:	daa    
  41bf26:	jne    0x41beea
  41bf28:	pop    esp
  41bf29:	sub    al,0x75
  41bf2b:	rcr    DWORD PTR [ebx],1
  41bf2d:	xor    BYTE PTR ds:0x4430ca00,ah
  41bf33:	jo     0x41befe
  41bf35:	data16 jge 0x41bf5c
  41bf38:	add    BYTE PTR [eax],al
  41bf3a:	call   0xfe03:0x41784938
  41bf41:	je     0x41bf75
  41bf43:	dec    eax
  41bf44:	jmp    0xfcde9a0a
  41bf49:	add    DWORD PTR [esi+0x1b],esp
  41bf4c:	mov    cl,BYTE PTR [eax+0x66]
  41bf4f:	pusha  
  41bf50:	dec    ecx
  41bf51:	je     0x41bf16
  41bf53:	xor    eax,0x33bb7881
  41bf58:	jne    0x41bf67
  41bf5a:	jbe    0x41bf3b
  41bf5c:	enter  0x5e43,0x9c
  41bf60:	push   cs
  41bf61:	fcomp  QWORD PTR [ebx+esi*8+0x0]
  41bf65:	jmp    0x41bfbd
  41bf67:	mov    bl,0x73
  41bf69:	jl     0x41bfc9
  41bf6b:	add    eax,0x67d51375
  41bf70:	jmp    0xfcde01fe
  41bf75:	xor    DWORD PTR [esi],0xffffff9d
  41bf78:	outs   dx,DWORD PTR ds:[esi]
  41bf79:	sbb    DWORD PTR [esi],esi
  41bf7b:	cmp    eax,0x9019fff3
  41bf80:	adc    DWORD PTR [ebp+0x36fe287e],ecx
  41bf86:	push   es
  41bf87:	clc    
  41bf88:	pop    esp
  41bf89:	(bad)  
  41bf8a:	jmp    0xf697d09f
  41bf8f:	bound  ebx,QWORD PTR [eax-0x1]
  41bf92:	stc    
  41bf93:	or     dh,BYTE PTR [ebp-0x1c7b235]
  41bf99:	adc    eax,0x4148ca
  41bf9e:	add    BYTE PTR [eax],al
  41bfa0:	cmp    BYTE PTR [ecx],dh
  41bfa2:	lds    ebx,FWORD PTR [edi-0x74]
  41bfa5:	stos   BYTE PTR es:[edi],al
  41bfa6:	sti    
  41bfa7:	mov    cl,bh
  41bfa9:	sub    eax,0xa23774bc
  41bfae:	aaa    
  41bfaf:	mov    DWORD PTR [ebx+0x79],esp
  41bfb2:	sti    
  41bfb3:	mov    DWORD PTR [ebx],ebp
  41bfb5:	lea    edi,[edi-0x7]
  41bfb8:	sub    ch,BYTE PTR [ecx-0x6d528006]
  41bfbe:	push   0x7
  41bfc0:	test   al,0x93
  41bfc2:	jl     0x41bf93
  41bfc4:	out    dx,eax
  41bfc5:	pop    ds
  41bfc6:	(bad)  
  41bfc7:	jb     0x41bf5a
  41bfc9:	pop    edx
  41bfca:	cld    
  41bfcb:	(bad)  
  41bfcc:	jmp    0x41bfdf
  41bfce:	aam    0x80
  41bfd0:	xchg   ebx,eax
  41bfd1:	add    al,0x7f
  41bfd3:	jmp    0x41bf80
  41bfd5:	pushf  
  41bfd6:	(bad)  
  41bfd7:	jmp    esp
  41bfd9:	(bad)  
  41bfda:	jl     0x41c04e
  41bfdc:	aas    
  41bfdd:	adc    al,BYTE PTR [edx+0x8]
  41bfe0:	add    ch,cl
  41bfe2:	jbe    0x41c027
  41bfe4:	sbb    edi,DWORD PTR [ecx]
  41bfe6:	jmp    0xbe00:0x3faa7312
  41bfed:	loopne 0x41c00a
  41bfef:	sbb    al,0xbc
  41bff1:	(bad)  
  41bff2:	pop    ds
  41bff3:	xchg   ebx,edi
  41bff5:	adc    BYTE PTR [edi],0x89
  41bff8:	icebp  
  41bff9:	js     0x41c058
  41bffb:	sub    BYTE PTR [esi-0x45cfe421],bh
  41c001:	pop    ds
  41c002:	sbb    al,0x50
  41c004:	add    BYTE PTR [eax],al
  41c006:	jg     0x41bf8b
  41c008:	sub    edx,DWORD PTR [ebx+0x36]
  41c00b:	fwait
  41c00c:	js     0x41c051
  41c00e:	pop    ebx
  41c00f:	aas    
  41c010:	push   ebp
  41c011:	mov    eax,esi
  41c013:	adc    BYTE PTR [ebx+0x18],al
  41c016:	addr16 jbe 0x41c048
  41c019:	xor    ecx,0xbe35e287
  41c01f:	inc    edi
  41c020:	and    DWORD PTR [eax],esp
  41c022:	mov    esi,0xcf242167
  41c027:	xor    al,0x77
  41c029:	nop
  41c02a:	fsubr  DWORD PTR [ebp+0x5c1b6866]
  41c030:	jmp    0x757a:0xca58747c
  41c037:	cmp    al,0x6f
  41c039:	cmp    al,0x2b
  41c03b:	mov    ecx,0xb81429
  41c040:	into   
  41c041:	xor    esi,DWORD PTR [eax+0x322fc5f8]
  41c047:	mov    eax,0x343704b8
  41c04c:	ins    DWORD PTR es:[edi],dx
  41c04d:	inc    eax
  41c04e:	pop    ebx
  41c04f:	dec    esp
  41c050:	mov    edx,0x4a9f81db
  41c055:	out    0xb4,eax
  41c057:	je     0x41c04b
  41c059:	jg     0x41c096
  41c05b:	xor    ebp,edx
  41c05d:	add    ebx,ebp
  41c05f:	push   esi
  41c060:	gs push 0xdb927013
  41c066:	jle    0x41c070
  41c068:	jmp    0xae41c070
  41c06d:	jne    0x41c028
  41c06f:	out    0x7,al
  41c071:	lods   eax,DWORD PTR ds:[esi]
  41c072:	fcmovnu st,st(3)
  41c074:	ffreep st(6)
  41c076:	jmp    0x6fa8027e
  41c07b:	mov    ebx,0x1a1231b1
  41c080:	xor    ch,BYTE PTR [ebp-0x40c2a60e]
  41c086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c087:	pop    ds
  41c088:	fwait
  41c089:	add    al,0xe3
  41c08b:	outs   dx,DWORD PTR ds:[esi]
  41c08c:	push   ebx
  41c08d:	push   0x466310db
  41c092:	sub    al,BYTE PTR [esi+esi*4]
  41c095:	ja     0x41c074
  41c097:	pop    ecx
  41c098:	pop    edx
  41c099:	mov    edi,0xc3b2045
  41c09e:	shl    BYTE PTR [edx-0x16fecc7c],cl
  41c0a4:	outs   dx,DWORD PTR ds:[esi]
  41c0a5:	icebp  
  41c0a6:	and    al,0xd
  41c0a8:	mov    edi,DWORD PTR [ebx+0x63d039c3]
  41c0ae:	cld    
  41c0af:	xlat   BYTE PTR ds:[ebx]
  41c0b0:	in     al,dx
  41c0b1:	cmp    DWORD PTR [ebp-0x3f4ecb17],edx
  41c0b7:	adc    eax,0xcd44b90d
  41c0bc:	push   esp
  41c0bd:	add    al,0xfc
  41c0bf:	aam    0xf0
  41c0c1:	inc    edx
  41c0c2:	inc    ecx
  41c0c3:	jmp    0xe24135f5
  41c0c8:	jl     0x41c0be
  41c0ca:	push   esi
  41c0cb:	xchg   cx,ax
  41c0cd:	mov    al,0xc0
  41c0cf:	out    dx,al
  41c0d0:	add    BYTE PTR [eax],al
  41c0d2:	adc    BYTE PTR [eax+eax*1-0x17],bh
  41c0d6:	xor    al,0xb9
  41c0d8:	inc    esp
  41c0d9:	add    eax,0x2e88041b
  41c0de:	in     al,0xae
  41c0e0:	das    
  41c0e1:	and    bl,BYTE PTR ds:[ebx+ebx*4-0x3cbcba4]
  41c0e9:	neg    ebp
  41c0eb:	jnp    0x41c076
  41c0ed:	jmp    0x9b59:0x1efae97c
  41c0f4:	inc    edi
  41c0f5:	add    DWORD PTR [edi],0xffffffb9
  41c0f8:	jl     0x41c0bf
  41c0fa:	in     al,0xb
  41c0fc:	jmp    0xfbeea9b2
  41c101:	ins    BYTE PTR es:[edi],dx
  41c102:	jo     0x41c154
  41c104:	popa   
  41c105:	cdq    
  41c106:	scas   eax,DWORD PTR es:[edi]
  41c107:	mul    DWORD PTR [ebp*4+0x39c3bd84]
  41c10e:	jge    0x41c168
  41c110:	pop    esp
  41c111:	ins    BYTE PTR es:[edi],dx
  41c112:	(bad)  
  41c113:	push   edi
  41c114:	sub    ecx,0x5ce93434
  41c11a:	inc    eax
  41c11b:	test   eax,0x748d00fb
  41c120:	pop    es
  41c121:	test   DWORD PTR [esi+0x228b7b24],ebx
  41c127:	push   esp
  41c128:	adc    DWORD PTR [ebx-0x742bd240],ecx
  41c12e:	or     dl,BYTE PTR [ebp+edx*1+0x51]
  41c132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c133:	pop    edi
  41c134:	pop    edx
  41c135:	inc    DWORD PTR [eax]
  41c137:	add    BYTE PTR [ecx+0x3674bc2b],ah
  41c13d:	sub    eax,0x2cda2470
  41c142:	fisttp QWORD PTR [ebx+0x24782c9d]
  41c148:	jb     0x41c16c
  41c14a:	dec    eax
  41c14b:	cmp    BYTE PTR [edx+0x1159c38f],bl
  41c151:	xchg   ecx,eax
  41c152:	jg     0x41c114
  41c154:	push   0x60
  41c156:	mov    al,BYTE PTR [ebx]
  41c158:	popf   
  41c159:	test   eax,0xcf760469
  41c15e:	je     0x41c1a0
  41c160:	mov    es,WORD PTR [edi]
  41c162:	jmp    0xfcd25618
  41c167:	mov    edx,DWORD PTR [eax-0x4c]
  41c16a:	add    BYTE PTR [ecx*2-0x4500ab54],al
  41c171:	dec    ebx
  41c172:	sub    eax,0x59b12651
  41c177:	jmp    DWORD PTR [ecx]
  41c179:	aaa    
  41c17a:	cmp    cl,BYTE PTR [ebx+0x77fcafb3]
  41c180:	data16 (bad) 
  41c182:	push   ebp
  41c183:	pop    edx
  41c184:	xor    DWORD PTR [eax+0x1b210688],edx
  41c18a:	and    eax,0x29699728
  41c18f:	mov    ecx,DWORD PTR ds:0xe62c452e
  41c195:	repz push esi
  41c197:	push   DWORD PTR [edi]
  41c199:	sbb    BYTE PTR [ecx+0x14],0x0
  41c19d:	add    BYTE PTR [ecx+0x75],ch
  41c1a0:	das    
  41c1a1:	pop    ecx
  41c1a2:	clc    
  41c1a3:	jno    0x41c154
  41c1a5:	(bad)  
  41c1a6:	fstp   QWORD PTR [esi+0x4388c031]
  41c1ac:	dec    edx
  41c1ad:	mov    edx,ebx
  41c1af:	aaa    
  41c1b0:	mov    edi,0x7a683703
  41c1b5:	jmp    0x41c16b
  41c1b7:	mov    eax,0x1661515b
  41c1bc:	imul   ecx,DWORD PTR [edi+esi*4],0x3a
  41c1c0:	stc    
  41c1c1:	jmp    DWORD PTR [ecx-0x5e]
  41c1c4:	jp     0x41c1b6
  41c1c6:	aaa    
  41c1c7:	popf   
  41c1c8:	dec    DWORD PTR [eax+0x62809521]
  41c1ce:	mov    ds:0x9b42729c,eax
  41c1d3:	in     al,dx
  41c1d4:	pop    ecx
  41c1d5:	push   ss
  41c1d6:	jmp    0x8856dadf
  41c1db:	add    DWORD PTR [ecx-0x29],edi
  41c1de:	scas   al,BYTE PTR es:[edi]
  41c1df:	xlat   BYTE PTR ds:[ebx]
  41c1e0:	out    0x82,eax
  41c1e2:	pop    esp
  41c1e3:	out    0xfc,eax
  41c1e5:	xor    DWORD PTR [edi+0x3],esi
  41c1e8:	xchg   edx,eax
  41c1e9:	(bad)  
  41c1ea:	push   0xb225599c
  41c1ef:	xlat   BYTE PTR ds:[ebx]
  41c1f0:	retf   
  41c1f1:	push   edi
  41c1f2:	dec    edi
  41c1f3:	je     0x41c245
  41c1f5:	call   DWORD PTR [eax-0x3a]
  41c1f8:	sbb    cl,BYTE PTR [ebx-0x17b7a336]
  41c1fe:	repnz in eax,dx
  41c200:	(bad)  
  41c201:	inc    DWORD PTR [eax]
  41c203:	add    BYTE PTR [edx+0x304fcbd7],ch
  41c209:	and    esp,esp
  41c20b:	push   eax
  41c20c:	pop    ds
  41c20d:	inc    ecx
  41c20e:	xchg   ecx,eax
  41c20f:	jmp    DWORD PTR [eax]
  41c211:	pop    ss
  41c212:	mov    ch,0x4e
  41c214:	xchg   DWORD PTR [edi+esi*1],esi
  41c217:	in     al,dx
  41c218:	out    0xc5,eax
  41c21a:	jmp    0x24f92822
  41c21f:	loopne 0x41c1da
  41c221:	out    dx,eax
  41c222:	int    0xec
  41c224:	test   eax,0x70e3c2a7
  41c229:	ins    DWORD PTR es:[edi],dx
  41c22a:	jmp    0x89b3:0xc2053f58
  41c231:	test   eax,0x1ea7efaa
  41c236:	fst    QWORD PTR [eax-0x13be6fb3]
  41c23c:	es add eax,0x524d03e9
  41c242:	pop    ebp
  41c243:	popa   
  41c244:	(bad)  
  41c245:	or     al,0x92
  41c247:	or     eax,DWORD PTR [esi]
  41c249:	xor    ebp,edx
  41c24b:	mov    ?,WORD PTR [ebx+0x4]
  41c24e:	gs dec ecx
  41c250:	ja     0x41c256
  41c252:	pop    ebp
  41c253:	dec    ecx
  41c254:	xchg   ebx,eax
  41c255:	add    al,0xd0
  41c257:	es repnz mov dh,0xd4
  41c25b:	jg     0x41c1ed
  41c25d:	push   es
  41c25e:	scas   al,BYTE PTR es:[edi]
  41c25f:	loop   0x41c1e4
  41c261:	mov    ch,0x25
  41c263:	adc    BYTE PTR [esp+esi*2+0xc8bd],dh
  41c26a:	mov    edi,0xf9bc6e7a
  41c26f:	mov    dh,0xb4
  41c271:	fild   QWORD PTR [ebp+0x58ec31ef]
  41c277:	or     esp,DWORD PTR [ebx]
  41c279:	jecxz  0x41c230
  41c27b:	je     0x41c212
  41c27d:	push   ds
  41c27e:	(bad)  
  41c280:	call   0xac3e:0xe61e3743
  41c287:	out    dx,eax
  41c288:	add    esp,ebp
  41c28a:	sbb    al,0xb
  41c28c:	sti    
  41c28d:	loop   0x41c244
  41c28f:	jae    0x41c291
  41c291:	jge    0x41c2e0
  41c293:	mov    ebx,0xfda9e145
  41c298:	clc    
  41c299:	jb     0x41c2ea
  41c29b:	test   al,0x2f
  41c29d:	ret    0x4cbc
  41c2a0:	adc    ah,BYTE PTR [eax+0x6c]
  41c2a3:	and    al,0x8a
  41c2a5:	cmp    DWORD PTR [edi-0x4f],ebx
  41c2a8:	pop    eax
  41c2a9:	inc    ecx
  41c2aa:	pop    ebp
  41c2ab:	mov    cl,0x58
  41c2ad:	cmp    eax,0xaf0cf5b8
  41c2b2:	je     0x41c2ec
  41c2b4:	add    al,al
  41c2b6:	in     al,dx
  41c2b7:	test   al,0xfb
  41c2b9:	jmp    0x913ad07f
  41c2be:	inc    esi
  41c2bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2c0:	sti    
  41c2c1:	xchg   esi,eax
  41c2c2:	dec    esp
  41c2c3:	cmp    al,0x11
  41c2c5:	jmp    0x223b5efe
  41c2ca:	xchg   esp,eax
  41c2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2cc:	xchg   DWORD PTR [ecx-0x74410000],esp
  41c2d2:	or     ebp,DWORD PTR [ebp-0x61]
  41c2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2d6:	sti    
  41c2d7:	outs   dx,BYTE PTR ds:[esi]
  41c2d8:	(bad)  
  41c2d9:	std    
  41c2da:	or     al,0xb8
  41c2dc:	sbb    al,0x34
  41c2de:	adc    ecx,ebp
  41c2e0:	xor    al,0xbd
  41c2e2:	aas    
  41c2e3:	out    dx,eax
  41c2e4:	inc    esp
  41c2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e6:	jb     0x41c2c9
  41c2e8:	xchg   ebp,eax
  41c2e9:	inc    ebp
  41c2ea:	jge    0x41c2c8
  41c2ec:	hlt    
  41c2ed:	xor    eax,DWORD PTR [eax-0x79c8ccbf]
  41c2f3:	repnz push ebp
  41c2f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2f6:	sti    
  41c2f7:	push   0xffffffd7
  41c2f9:	aaa    
  41c2fa:	add    DWORD PTR [ebp+esi*1+0x4c1061e],ebx
  41c301:	sbb    al,0xb1
  41c303:	sahf   
  41c304:	hlt    
  41c305:	xor    edx,DWORD PTR [eax+0x1]
  41c308:	cmp    eax,0x3900fc01
  41c30d:	mov    eax,0x5e460c3e
  41c312:	out    dx,eax
  41c313:	jmp    FWORD PTR [ecx]
  41c315:	mov    edx,0xf309083e
  41c31a:	add    al,0xeb
  41c31c:	push   ebx
  41c31d:	xchg   ebp,eax
  41c31e:	outs   dx,BYTE PTR ds:[esi]
  41c31f:	or     al,0x85
  41c321:	and    DWORD PTR [ebx-0x48],0x6a00f061
  41c328:	adc    esi,ebp
  41c32a:	call   0xfcd6e0b9
  41c32f:	pop    ecx
  41c330:	pop    ss
  41c331:	mov    cl,0xf3
  41c333:	inc    DWORD PTR [eax]
  41c335:	add    cl,bl
  41c337:	scas   eax,DWORD PTR es:[edi]
  41c338:	repnz dec BYTE PTR [ecx-0x1d389a6b]
  41c33f:	stos   DWORD PTR es:[edi],eax
  41c340:	push   es
  41c341:	or     bl,BYTE PTR [ebp+0x70]
  41c344:	add    DWORD PTR [ebx+0x10753aa6],eax
  41c34a:	test   eax,0x658d0cff
  41c34f:	cmp    cl,BYTE PTR [ebp+ecx*4-0x66]
  41c353:	stos   DWORD PTR es:[edi],eax
  41c354:	dec    edx
  41c355:	call   0x402c34
  41c35a:	(bad)  
  41c35b:	out    dx,al
  41c35c:	or     al,0x8b
  41c35e:	jecxz  0x41c397
  41c360:	ret    
  41c361:	add    al,0x36
  41c363:	aaa    
  41c364:	inc    BYTE PTR [ebp-0x66]
  41c367:	mov    eax,0x3c500c3e
  41c36c:	sbb    DWORD PTR [edx],ecx
  41c36e:	stc    
  41c36f:	out    dx,al
  41c370:	or     al,0x8b
  41c372:	xchg   ebx,eax
  41c373:	cmp    ecx,DWORD PTR [edx+0x5bb05a4d]
  41c379:	js     0x41c3c9
  41c37b:	mov    edx,0xf7c77053
  41c380:	je     0x41c3e8
  41c382:	adc    eax,esi
  41c384:	jl     0x41c386
  41c386:	aaa    
  41c387:	popf   
  41c388:	(bad)  
  41c389:	(bad)  
  41c38a:	(bad)  
  41c38c:	cmp    al,0xc7
  41c38e:	cmc    
  41c38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c390:	dec    DWORD PTR [eax-0x2c76e89]
  41c396:	stos   DWORD PTR es:[edi],eax
  41c397:	jns    0x41c3a0
  41c399:	mov    eax,DWORD PTR [eax]
  41c39b:	add    BYTE PTR [edi+0x2bbf8485],bl
  41c3a1:	test   DWORD PTR [edx-0x2779f7a9],edi
  41c3a7:	xlat   BYTE PTR ds:[ebx]
  41c3a8:	sbb    al,0xdd
  41c3aa:	fcom   st(7)
  41c3ac:	pop    eax
  41c3ad:	fild   DWORD PTR [ebx]
  41c3af:	add    BYTE PTR [edx-0x247f13de],cl
  41c3b5:	mov    al,ds:0xebac5634
  41c3ba:	mov    WORD PTR [ebp+0x3f],es
  41c3bd:	adc    cl,BYTE PTR [eax+0x4]
  41c3c0:	push   0xbef83324
  41c3c5:	dec    edi
  41c3c6:	loope  0x41c34a
  41c3c8:	out    dx,al
  41c3c9:	lea    eax,[ebx-0x62c881]
  41c3cf:	sub    BYTE PTR [esi],0x89
  41c3d2:	push   DWORD PTR [edx-0x9]
  41c3d5:	inc    edx
  41c3d6:	sbb    DWORD PTR [ebx-0x17c846de],ecx
  41c3dc:	sbb    cl,BYTE PTR [eax+eax*1+0x0]
  41c3e0:	inc    eax
  41c3e1:	(bad)  
  41c3e2:	dec    ecx
  41c3e3:	adc    ah,bh
  41c3e5:	xchg   ebp,eax
  41c3e6:	cwde   
  41c3e7:	inc    ebp
  41c3e8:	daa    
  41c3e9:	in     eax,dx
  41c3ea:	mov    esp,es
  41c3ec:	out    0x72,eax
  41c3ee:	neg    DWORD PTR [edx+eax*8-0x19]
  41c3f2:	retf   
  41c3f3:	out    0x71,eax
  41c3f5:	(bad)  
  41c3f7:	cld    
  41c3f8:	mov    ah,0x58
  41c3fa:	or     al,0x83
  41c3fc:	ja     0x41c3de
  41c3fe:	out    dx,al
  41c3ff:	mov    BYTE PTR [eax],al
  41c401:	add    BYTE PTR [ecx-0x404490cd],al
  41c407:	lock sbb eax,0x12ae4f32
  41c40d:	loopne 0x41c44a
  41c40f:	scas   eax,DWORD PTR es:[edi]
  41c410:	sub    DWORD PTR [esi+0x56],edx
  41c413:	mov    cl,0x31
  41c415:	loopne 0x41c436
  41c417:	imul   edx,DWORD PTR [eax-0x6e9381fb],0x5f4ba5ff
  41c421:	ret    0x2cbd
  41c424:	add    ch,BYTE PTR [ebx+eiz*2+0x20]
  41c428:	sub    al,BYTE PTR [esi+esi*4]
  41c42b:	je     0x41c42a
  41c42d:	jmp    0x41c493
  41c42f:	or     al,0xcb
  41c431:	fbstp  TBYTE PTR [ebp-0x4044318c]
  41c437:	out    dx,eax
  41c438:	mov    ebp,0xb330208b
  41c43d:	pop    ecx
  41c43e:	fistp  QWORD PTR [ecx-0xb06f3f4]
  41c444:	add    eax,0x9defbe05
  41c449:	in     al,dx
  41c44a:	js     0x41c3f1
  41c44c:	xchg   edx,eax
  41c44d:	fbstp  TBYTE PTR [esp+esi*2+0x7467c515]
  41c454:	and    bh,BYTE PTR [esi]
  41c456:	push   cs
  41c457:	jnp    0x41c400
  41c459:	or     BYTE PTR [edi],dh
  41c45b:	add    DWORD PTR ds:0xd223ae36,ebx
  41c461:	mov    bh,dl
  41c463:	das    
  41c464:	outs   dx,DWORD PTR ds:[esi]
  41c465:	jmp    0x19d5:0x74b50000
  41c46c:	mov    bh,0x2c
  41c46e:	test   BYTE PTR [ecx*1+0x4e58af32],0xfd
  41c476:	je     0x41c4d4
  41c478:	dec    edi
  41c479:	sbb    al,0x7e
  41c47b:	push   edi
  41c47c:	div    DWORD PTR [ebx]
  41c47e:	add    DWORD PTR [edx+0x73],ebp
  41c481:	inc    ecx
  41c482:	jmp    0xfbe8d172
  41c487:	(bad)  
  41c488:	mov    edi,0xb5e475e5
  41c48d:	ins    DWORD PTR es:[edi],dx
  41c48e:	sti    
  41c48f:	add    bh,BYTE PTR [ebx]
  41c491:	mov    esp,0xfcbce542
  41c496:	sbb    al,0x72
  41c498:	ja     0x41c4ea
  41c49a:	adc    DWORD PTR [ebp+ebp*4-0x5001792],edx
  41c4a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4a2:	sti    
  41c4a3:	gs sti 
  41c4a5:	and    dh,ah
  41c4a7:	sbb    dh,bl
  41c4a9:	push   es
  41c4aa:	pop    esi
  41c4ab:	inc    edx
  41c4ac:	cmc    
  41c4ad:	xor    BYTE PTR [ecx],al
  41c4af:	bound  esi,QWORD PTR [ebx+0x4c]
  41c4b2:	adc    BYTE PTR [ecx+0x3f],0x34
  41c4b6:	jne    0x41c4c1
  41c4b8:	mov    esp,0xac1a0564
  41c4bd:	or     BYTE PTR ds:0x78b921e1,ah
  41c4c3:	add    eax,0xc9c0b305
  41c4c8:	fsub   st(0),st
  41c4ca:	push   ebx
  41c4cb:	sahf   
  41c4cc:	add    BYTE PTR [eax],al
  41c4ce:	loope  0x41c4d7
  41c4d0:	pop    eax
  41c4d1:	ins    BYTE PTR es:[edi],dx
  41c4d2:	hlt    
  41c4d3:	and    DWORD PTR [esi],eax
  41c4d5:	push   0x7c
  41c4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4d8:	out    0xeb,eax
  41c4da:	inc    ebp
  41c4db:	je     0x41c49b
  41c4dd:	in     eax,0x34
  41c4df:	aaa    
  41c4e0:	mov    ah,0x18
  41c4e2:	lahf   
  41c4e3:	mov    ebx,0xe64ad141
  41c4e8:	enter  0x34e9,0x34
  41c4ec:	arpl   WORD PTR [edx],sp
  41c4ee:	leave  
  41c4ef:	push   es
  41c4f0:	jo     0x41c4de
  41c4f2:	mov    ch,0xaa
  41c4f4:	fidivr DWORD PTR fs:[edi]
  41c4f7:	mov    ebx,0xf2f10010
  41c4fc:	add    al,0x66
  41c4fe:	in     eax,0x5f
  41c500:	adc    eax,0x840e4f6a
  41c505:	push   eax
  41c506:	push   esi
  41c507:	cwde   
  41c508:	sub    eax,0x32305f45
  41c50d:	ror    BYTE PTR ds:0xcdec8a6c,0x94
  41c514:	jo     0x440a991d
  41c51a:	push   ds
  41c51b:	cmp    BYTE PTR [edx+0x56],dl
  41c51e:	leave  
  41c51f:	xor    al,BYTE PTR [ebp+0x1380d82]
  41c525:	call   0x42c849
  41c52a:	call   0x135:0x6b840c78
  41c531:	add    BYTE PTR [eax],al
  41c533:	add    BYTE PTR [ebp+0x11000d03],cl
  41c539:	mov    esp,0x37de0368
  41c53e:	cmp    BYTE PTR [ebp-0x2],0x37
  41c542:	push   cs
  41c543:	mov    gs,WORD PTR [edi+0x35]
  41c546:	add    DWORD PTR [eax],eax
  41c548:	push   ebp
  41c549:	or     ecx,DWORD PTR [ecx]
  41c54b:	push   esi
  41c54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c54d:	div    ebx
  41c54f:	jmp    DWORD PTR [ecx+0x4a0fbbac]
  41c555:	push   0xac9e0002
  41c55a:	fmul   DWORD PTR ss:[edi+esi*8+0x6d6abb00]
  41c562:	inc    eax
  41c563:	add    BYTE PTR ds:0x62e8d481,bh
  41c569:	xchg   edx,eax
  41c56a:	cld    
  41c56b:	inc    DWORD PTR [edi]
  41c56d:	sti    
  41c56e:	cld    
  41c56f:	adc    DWORD PTR [esi],0xffffff81
  41c572:	or     al,0x84
  41c574:	aaa    
  41c575:	aaa    
  41c576:	add    al,BYTE PTR [eax]
  41c578:	aaa    
  41c579:	je     0x41c53a
  41c57b:	xchg   DWORD PTR [edi],esi
  41c57d:	(bad)  
  41c57e:	inc    DWORD PTR [eax]
  41c580:	cmp    bh,BYTE PTR ds:0xe3740ca
  41c586:	pop    ebp
  41c587:	je     0x41c5c0
  41c589:	call   0xd8114593
  41c58e:	push   DWORD PTR [ebx+0x27]
  41c591:	inc    edx
  41c592:	push   esp
  41c593:	adc    BYTE PTR [eax],bh
  41c595:	ror    BYTE PTR [ebx],0xe8
  41c598:	add    BYTE PTR [eax],al
  41c59a:	jmp    0x96:0x1efcde43
  41c5a1:	add    BYTE PTR [edi],dh
  41c5a3:	es mov ebp,0x3c13ec88
  41c5a9:	in     al,dx
  41c5aa:	pop    ds
  41c5ab:	push   es
  41c5ac:	out    dx,al
  41c5ad:	cld    
  41c5ae:	or     BYTE PTR [ebx+eax*2],ah
  41c5b1:	lock inc esp
  41c5b3:	int    0x65
  41c5b5:	xchg   DWORD PTR [edx-0x7f],esi
  41c5b8:	mov    al,BYTE PTR [edx-0x1d]
  41c5bb:	adc    eax,DWORD PTR [ecx+0x50]
  41c5be:	mov    esp,0xf782d54f
  41c5c3:	push   0x8c37f5fa
  41c5c8:	push   ebx
  41c5c9:	push   ss
  41c5ca:	rcl    BYTE PTR [bp+si-0x14],cl
  41c5ce:	(bad)  
  41c5d0:	fdivr  st,st(4)
  41c5d2:	rcr    BYTE PTR [eax],0xc0
  41c5d5:	or     al,0xb3
  41c5d7:	cmc    
  41c5d8:	add    DWORD PTR [eax],eax
  41c5da:	aaa    
  41c5db:	push   ss
  41c5dc:	inc    ebx
  41c5dd:	in     al,dx
  41c5de:	pushf  
  41c5df:	pop    ebp
  41c5e0:	mov    DWORD PTR [edx-0x6d],eax
  41c5e3:	and    eax,0x8d378378
  41c5e8:	inc    DWORD PTR [edx+0x3736a86c]
  41c5ee:	jmp    0xfa00:0xf50cfa33
  41c5f5:	xor    BYTE PTR [edx-0x1d],bh
  41c5f8:	imul   eax,DWORD PTR [ebx],0x564b3437
  41c5fe:	add    BYTE PTR [eax],al
  41c600:	cmp    ecx,DWORD PTR [ebp+edi*8+0x6ea26235]
  41c607:	inc    esi
  41c608:	dec    ebx
  41c609:	dec    esp
  41c60a:	push   edx
  41c60b:	xchg   DWORD PTR [eax-0x5e],edx
  41c60e:	jmp    0x6ed1bb9b
  41c613:	mov    esi,DWORD PTR [ebx+esi*1+0x6cb403ea]
  41c61a:	pushf  
  41c61b:	hlt    
  41c61c:	xor    esp,ebp
  41c61e:	imul   eax,DWORD PTR [ebx],0xb4123437
  41c624:	test   DWORD PTR [ecx-0x6f8a7806],esp
  41c62a:	mov    ds:0x3ea3490,ax
  41c630:	aaa    
  41c631:	(bad)  
  41c632:	clc    
  41c633:	mov    es,WORD PTR [eax+0x3703e9b4]
  41c639:	add    esp,DWORD PTR [ebp+0x8]
  41c63c:	dec    edi
  41c63d:	add    edi,DWORD PTR [edx]
  41c63f:	in     al,dx
  41c640:	loop   0x41c649
  41c642:	ret    
  41c643:	fld    TBYTE PTR [edi+0x64efcdf7]
  41c649:	loop   0x41c6c8
  41c64b:	iret   
  41c64c:	ja     0x41c682
  41c64e:	adc    al,0xdb
  41c650:	and    eax,0x3743f780
  41c655:	mov    eax,ds:0x27bbf414
  41c65a:	out    0xda,al
  41c65c:	and    eax,0x8cf18b2c
  41c661:	ins    DWORD PTR es:[edi],dx
  41c662:	es add al,0x0
  41c665:	add    BYTE PTR [esi+0x2cc0667c],ch
  41c66b:	mov    bh,0x0
  41c66d:	xchg   edx,eax
  41c66e:	cmp    al,0xac
  41c670:	push   eax
  41c671:	jmp    0x41c6a7
  41c673:	xor    al,0x53
  41c675:	les    bp,DWORD PTR [ebp+esi*2-0x121c730f]
  41c67d:	push   esi
  41c67e:	mov    WORD PTR [eax+edi*8+0x7fa00e60],gs
  41c685:	inc    esi
  41c686:	jl     0x41c6b8
  41c688:	test   DWORD PTR [esi],edi
  41c68a:	xor    dh,BYTE PTR [ecx+eax*1]
  41c68d:	push   0xffffffee
  41c68f:	mov    ds:0x84266200,eax
  41c694:	(bad)  
  41c695:	stos   BYTE PTR es:[edi],al
  41c696:	xor    al,0x28
  41c698:	pop    ss
  41c699:	jb     0x41c707
  41c69b:	sbb    cl,dl
  41c69d:	popa   
  41c69e:	cmp    esi,DWORD PTR [ecx+eax*1]
  41c6a1:	jmp    0x9ffc:0x17a898fe
  41c6a8:	mov    DWORD PTR [esp+eax*1-0x6f193f4a],esp
  41c6af:	mov    al,BYTE PTR [ecx]
  41c6b1:	jmp    0x510571ea
  41c6b6:	sti    
  41c6b7:	mov    eax,0x3334e900
  41c6bc:	ret    
  41c6bd:	pusha  
  41c6be:	ja     0x41c650
  41c6c0:	dec    edi
  41c6c1:	into   
  41c6c2:	xchg   DWORD PTR [eax],esi
  41c6c4:	mov    ?,WORD PTR [ecx]
  41c6c6:	inc    ebx
  41c6c7:	or     al,0x5d
  41c6c9:	dec    edx
  41c6ca:	add    BYTE PTR [eax],al
  41c6cc:	jae    0x41c702
  41c6ce:	jmp    0xfbe2f20a
  41c6d3:	cli    
  41c6d4:	out    0xab,al
  41c6d6:	clc    
  41c6d7:	jo     0x41c738
  41c6d9:	pushf  
  41c6da:	(bad)  
  41c6db:	loopne 0x41c744
  41c6dd:	test   al,0x72
  41c6df:	pop    es
  41c6e0:	shr    ch,0xec
  41c6e3:	aaa    
  41c6e4:	mov    al,0xe1
  41c6e6:	cmp    BYTE PTR [eax],al
  41c6e8:	(bad)  
  41c6e9:	popa   
  41c6ea:	inc    edx
  41c6eb:	add    DWORD PTR [esi+0x2a74de51],ecx
  41c6f1:	mov    cl,0x3e
  41c6f3:	in     al,dx
  41c6f4:	adc    eax,0x8e007fad
  41c6f9:	xor    al,0x2
  41c6fb:	retf   
  41c6fc:	or     eax,ebp
  41c6fe:	jnp    0x41c700
  41c700:	pop    esi
  41c701:	xor    al,0xe9
  41c703:	cmp    esp,DWORD PTR [edx+0xe84fc7d]
  41c709:	test   DWORD PTR cs:[eax-0x74fecbb1],eax
  41c710:	mov    ds:0xd2888898,eax
  41c715:	xor    al,0x1
  41c717:	add    bl,dl
  41c719:	outs   dx,DWORD PTR ds:[esi]
  41c71a:	outs   dx,DWORD PTR ds:[esi]
  41c71b:	adc    al,0xc5
  41c71d:	mov    ah,0x7b
  41c71f:	add    BYTE PTR [esi],bl
  41c721:	xor    al,0x88
  41c723:	adc    al,0x26
  41c725:	push   0xffffff8a
  41c727:	rol    BYTE PTR [esi+0x51],1
  41c72a:	push   eax
  41c72b:	call   FWORD PTR [ecx]
  41c72d:	mov    dl,0x3e
  41c72f:	in     al,dx
  41c730:	add    BYTE PTR [eax],al
  41c732:	xchg   ebp,eax
  41c733:	in     al,dx
  41c734:	or     al,0x53
  41c736:	sbb    eax,0x9eff4a6b
  41c73b:	mov    eax,0x8c0efffb
  41c740:	std    
  41c741:	push   esp
  41c742:	or     DWORD PTR [esi-0x78],edi
  41c745:	inc    ebp
  41c746:	stos   BYTE PTR es:[edi],al
  41c747:	xor    ebx,DWORD PTR [ecx+0x133ce84]
  41c74d:	xor    esp,DWORD PTR [eax+0x238bdcb1]
  41c753:	mov    BYTE PTR [eax],bh
  41c755:	mov    BYTE PTR [edx],0x56
  41c758:	cmp    bl,dh
  41c75a:	sbb    BYTE PTR [edx-0x49358a04],bl
  41c760:	jae    0x41c78e
  41c762:	aaa    
  41c763:	or     al,ch
  41c765:	daa    
  41c766:	lahf   
  41c767:	jnp    0x41c793
  41c769:	std    
  41c76a:	mov    al,ds:0xb30cc510
  41c76f:	jle    0x41c76f
  41c771:	push   DWORD PTR [edi]
  41c773:	adc    bh,BYTE PTR [eax+esi*8]
  41c776:	mov    esp,0x8930d790
  41c77b:	outs   dx,DWORD PTR ds:[esi]
  41c77c:	push   ss
  41c77d:	jae    0x41c702
  41c77f:	mov    es,WORD PTR [ecx-0x72c879]
  41c785:	cmp    BYTE PTR [ecx+0x7e],dh
  41c788:	jnp    0x41c809
  41c78a:	aaa    
  41c78b:	(bad)  
  41c78c:	push   DWORD PTR [esi-0x7291]
  41c792:	fldenv [ebx+0xf442]
  41c798:	ret    0x2f93
  41c79b:	call   0xfd1c1c7b
  41c7a0:	lods   al,BYTE PTR ds:[esi]
  41c7a1:	fmul   st,st(7)
  41c7a3:	mov    BYTE PTR [edi+0x75],dh
  41c7a6:	mov    WORD PTR [edx+0x1b],cs
  41c7a9:	adc    al,0x40
  41c7ab:	jo     0x41c759
  41c7ad:	iret   
  41c7ae:	iret   
  41c7af:	mov    BYTE PTR [edi+0x71],dh
  41c7b2:	mov    WORD PTR [edx+0x23],cs
  41c7b5:	adc    al,0x40
  41c7b7:	je     0x41c775
  41c7b9:	xlat   BYTE PTR ds:[ebx]
  41c7ba:	jecxz  0x41c742
  41c7bc:	xchg   DWORD PTR ds:0xd70b428e,edx
  41c7c2:	aas    
  41c7c3:	jl     0x41c7fc
  41c7c5:	adc    al,BYTE PTR [ebx-0x14]
  41c7c8:	sub    al,0xcf
  41c7ca:	or     BYTE PTR [edi+esi*8-0x5384c0dc],dl
  41c7d1:	push   edi
  41c7d2:	aad    0x86
  41c7d4:	inc    edi
  41c7d5:	xor    eax,0x9c3428e
  41c7da:	rcr    BYTE PTR [ebx-0x2498cba7],0x57
  41c7e1:	das    
  41c7e2:	arpl   WORD PTR [ebp-0x73166150],cx
  41c7e8:	cmc    
  41c7e9:	mov    ds:0x8c57538a,eax
  41c7ee:	loope  0x41c81f
  41c7f0:	call   0xf99e:0x873e6e9e
  41c7f7:	out    dx,eax
  41c7f8:	nop
  41c7f9:	xor    BYTE PTR [esi],dl
  41c7fb:	fld    DWORD PTR [eax]
  41c7fd:	add    BYTE PTR [ebx+0xed3acaa],al
  41c803:	dec    eax
  41c804:	addr16 ret 
  41c806:	inc    esp
  41c807:	add    al,0x42
  41c809:	iret   
  41c80a:	add    al,0x9f
  41c80c:	dec    edx
  41c80d:	jmp    0xf0af:0xd842a07e
  41c814:	dec    ebp
  41c815:	rcl    DWORD PTR [ecx],1
  41c817:	out    dx,eax
  41c818:	imul   ecx,DWORD PTR [esi+0x2a],0x1e4e2f5b
  41c81f:	pop    ebx
  41c820:	sub    al,0x4f
  41c822:	aam    0x5a
  41c824:	cmp    al,0x59
  41c826:	nop
  41c827:	push   es
  41c828:	xor    BYTE PTR [ebp+0x10],0x9e
  41c82c:	or     bl,al
  41c82e:	inc    ebp
  41c82f:	in     al,0x2e
  41c831:	inc    esp
  41c832:	aaa    
  41c833:	sti    
  41c834:	mov    al,ds:0xfe9dff84
  41c839:	dec    eax
  41c83a:	dec    esi
  41c83b:	jbe    0x41c8b2
  41c83d:	inc    ebp
  41c83e:	dec    eax
  41c83f:	and    al,0x16
  41c841:	dec    esi
  41c842:	cmp    al,0xa9
  41c844:	sub    DWORD PTR [eax+edi*4],ebp
  41c847:	repz pop ecx
  41c849:	mov    esi,DWORD PTR [ebp-0x5c]
  41c84c:	pop    esi
  41c84d:	inc    esp
  41c84e:	adc    ebp,DWORD PTR [ecx-0xc4e17cc]
  41c854:	xor    eax,0x90758b
  41c859:	pusha  
  41c85a:	arpl   WORD PTR [eax+ecx*4],bx
  41c85d:	and    al,0xcf
  41c85f:	ja     0x41c8a1
  41c861:	and    eax,0xab320000
  41c866:	dec    ebp
  41c867:	lea    ecx,[esi+edi*2+0xb]
  41c86b:	jge    0x41c8e0
  41c86d:	mov    ch,0x41
  41c86f:	or     al,0xac
  41c871:	bnd lock jo 0x41c878
  41c875:	dec    esp
  41c876:	mov    ah,dh
  41c878:	fs xchg ebp,eax
  41c87a:	adc    DWORD PTR [eax+eiz*2+0x5ffde9a0],eax
  41c881:	mov    al,ds:0x9ff672fb
  41c886:	call   0xfbe22840
  41c88b:	sar    DWORD PTR [eax-0x7616c094],0x42
  41c892:	fstp   st(3)
  41c894:	hlt    
  41c895:	xor    ecx,DWORD PTR [eax+0x69655c2a]
  41c89b:	jge    0x41c919
  41c89d:	hlt    
  41c89e:	add    BYTE PTR [esi],ch
  41c8a0:	inc    esi
  41c8a1:	jns    0x41c8b1
  41c8a3:	test   eax,0x91090a34
  41c8a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8a9:	xchg   ebp,eax
  41c8aa:	sti    
  41c8ab:	push   ss
  41c8ac:	add    BYTE PTR [edx-0x4f],al
  41c8af:	and    dh,BYTE PTR [esp+esi*1+0x5a]
  41c8b3:	mov    al,ds:0x12fb74b5
  41c8b8:	adc    al,BYTE PTR [esp+edi*8]
  41c8bb:	fadd   st(0),st
  41c8bd:	inc    edx
  41c8be:	inc    ecx
  41c8bf:	jmp    0xe652eaad
  41c8c4:	addr16 xor ah,bh
  41c8c7:	push   esp
  41c8c8:	add    BYTE PTR [eax],al
  41c8ca:	inc    ebx
  41c8cb:	lahf   
  41c8cc:	adc    eax,0xf3fdb5
  41c8d1:	push   0xffffffa0
  41c8d3:	sub    BYTE PTR [eax+eax*1+0x10],bl
  41c8d7:	pop    ecx
  41c8d8:	(bad)
  41c8dc:	pusha  
  41c8dd:	push   ebx
  41c8de:	sub    ecx,DWORD PTR [esi-0x76]
  41c8e1:	jo     0x41c909
  41c8e3:	dec    ebp
  41c8e4:	mov    bh,BYTE PTR [eax+0x72]
  41c8e7:	mov    ebx,0x385dcbaf
  41c8ec:	push   eax
  41c8ed:	add    ecx,edi
  41c8ef:	dec    ecx
  41c8f0:	hlt    
  41c8f1:	jmp    FWORD PTR [ebx-0x71bfee1c]
  41c8f7:	dec    ebp
  41c8f8:	push   ebx
  41c8f9:	mov    ecx,DWORD PTR [edx+0x1561d3c]
  41c8ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c900:	xchg   edi,eax
  41c901:	retf   
  41c902:	dec    ebp
  41c903:	cmp    BYTE PTR [edx+0x7dd0dd8],cl
  41c909:	adc    ebp,0xffffff85
  41c90c:	outs   dx,DWORD PTR ds:[esi]
  41c90d:	pop    ebx
  41c90e:	stos   DWORD PTR es:[edi],eax
  41c90f:	test   DWORD PTR [esi],ecx
  41c911:	fcomp  DWORD PTR [eax+esi*8+0x0]
  41c915:	call   0x3e5260
  41c91a:	fnstsw WORD PTR [eax-0x4]
  41c91d:	jne    0x41c98c
  41c91f:	or     cl,BYTE PTR [ecx]
  41c921:	push   0xfffc88de
  41c926:	inc    ebp
  41c927:	fdivr  st,st(4)
  41c929:	adc    eax,0x406e8e
  41c92e:	add    BYTE PTR [eax],al
  41c930:	out    0x58,eax
  41c932:	jmp    0xe00:0x8377b730
  41c939:	cmp    BYTE PTR [edx],al
  41c93b:	add    eax,0x406e2e
  41c940:	(bad)
  41c943:	pop    ss
  41c944:	xchg   ebp,eax
  41c945:	pop    edi
  41c946:	lea    ebx,gs:[esi+0x58]
  41c94a:	(bad)  
  41c94b:	ss push es
  41c94d:	jbe    0x41c9a0
  41c94f:	push   DWORD PTR [edi]
  41c951:	and    BYTE PTR [esi+0x10],0x89
  41c955:	jne    0x41c8eb
  41c957:	push   eax
  41c958:	fdiv   DWORD PTR [edx-0x17]
  41c95b:	push   es
  41c95c:	ss push ebp
  41c95e:	gs std 
  41c960:	jg     0x41c94b
  41c962:	adc    ecx,ebx
  41c964:	je     0x41c9a6
  41c966:	(bad)  
  41c967:	adc    bl,bl
  41c969:	lahf   
  41c96a:	aas    
  41c96b:	add    BYTE PTR [eax],dl
  41c96d:	pop    ebx
  41c96e:	xor    al,0x89
  41c970:	je     0x41c9d8
  41c972:	mov    edi,0x2b5e3703
  41c977:	mov    DWORD PTR [edi+0x376c530d],esp
  41c97d:	es mov eax,0x3b165673
  41c983:	push   0x54dc53c
  41c988:	dec    esp
  41c989:	dec    esi
  41c98a:	mov    BYTE PTR [ebp-0x21],al
  41c98d:	add    eax,0xe8f28fb
  41c992:	pop    ebx
  41c993:	push   0x75370000
  41c998:	mov    ecx,eax
  41c99a:	hlt    
  41c99b:	mov    esp,ss
  41c99d:	adc    dh,BYTE PTR [ebx+0x7f]
  41c9a0:	aas    
  41c9a1:	add    BYTE PTR [edi+esi*2+0x2c],bl
  41c9a5:	mov    ebp,0x42568b
  41c9aa:	loopne 0x41c9fd
  41c9ac:	in     al,dx
  41c9ad:	fild   DWORD PTR [ebp-0x33]
  41c9b0:	dec    DWORD PTR [eax-0x21e74a5f]
  41c9b6:	xor    bh,cl
  41c9b8:	rcl    BYTE PTR [ebp+0x18],1
  41c9bb:	sbb    DWORD PTR [eax+ebx*1],ebx
  41c9be:	mov    esp,0x61181c20
  41c9c3:	mov    ds:0xcdec9bea,al
  41c9c8:	dec    DWORD PTR [eax-0x4098cc21]
  41c9ce:	cmp    al,0xb7
  41c9d0:	(bad)  
  41c9d2:	fs pop esi
  41c9d4:	cmp    edx,ebp
  41c9d6:	inc    ebp
  41c9d7:	jl     0x41c9d0
  41c9d9:	inc    ebx
  41c9da:	aaa    
  41c9db:	mov    WORD PTR [ecx-0x16],ss
  41c9de:	rcr    DWORD PTR [edx+0x20cbdb66],cl
  41c9e4:	xlat   BYTE PTR ds:[ebx]
  41c9e5:	imul   ebp,DWORD PTR [edi],0xbbeb5a0c
  41c9eb:	call   0xc85a:0x40b3bbee
  41c9f2:	div    DWORD PTR [ebx]
  41c9f4:	xor    DWORD PTR [ebx],edi
  41c9f6:	mov    gs,WORD PTR [edx]
  41c9f8:	add    esp,eax
  41c9fa:	add    BYTE PTR [eax],al
  41c9fc:	mov    al,0x33
  41c9fe:	jmp    0xf7c8:0x9a313603
  41ca05:	xor    eax,ecx
  41ca07:	cmp    ecx,DWORD PTR [edi]
  41ca09:	add    ebp,DWORD PTR [ebx-0x12]
  41ca0c:	pop    esp
  41ca0d:	inc    ebp
  41ca0e:	stos   BYTE PTR es:[edi],al
  41ca0f:	add    edx,DWORD PTR [edx]
  41ca11:	cli    
  41ca12:	outs   dx,BYTE PTR ds:[esi]
  41ca13:	ror    BYTE PTR [edi],0x76
  41ca16:	loope  0x41ca1b
  41ca18:	add    al,0xaf
  41ca1a:	cmp    eax,0x689b5480
  41ca1f:	out    0xb4,eax
  41ca21:	xor    ebp,edx
  41ca23:	add    esp,esi
  41ca25:	cvtpd2pi mm5,xmm2
  41ca29:	pop    ebx
  41ca2a:	int    0xa7
  41ca2c:	outs   dx,DWORD PTR ds:[esi]
  41ca2d:	imul   cl
  41ca2f:	add    al,0xbb
  41ca31:	out    0xe9,al
  41ca33:	add    esi,DWORD PTR [edi]
  41ca35:	mov    esp,?
  41ca37:	pop    ecx
  41ca38:	aaa    
  41ca39:	xor    al,0x66
  41ca3b:	ret    
  41ca3c:	sub    esi,DWORD PTR [eax+0x3437034c]
  41ca42:	shl    DWORD PTR [esi],0x3b
  41ca45:	sub    DWORD PTR [ecx],eax
  41ca47:	ins    DWORD PTR es:[edi],dx
  41ca48:	mov    BYTE PTR [ecx-0x2e21605],bl
  41ca4e:	adc    dh,dh
  41ca50:	mov    dh,0xc4
  41ca52:	add    cl,ch
  41ca54:	xor    al,0xab
  41ca56:	jne    0x41ca39
  41ca58:	push   ds
  41ca59:	mov    WORD PTR [ebx-0x2b],ss
  41ca5c:	add    al,0x99
  41ca5e:	test   BYTE PTR [ecx-0x4fcc0000],ch
  41ca64:	jle    0x41ca4f
  41ca66:	xor    al,0x34
  41ca68:	mov    esp,0xf4807d
  41ca6d:	push   ss
  41ca6e:	in     al,0x46
  41ca70:	fsincos 
  41ca72:	hlt    
  41ca73:	xor    ebp,ecx
  41ca75:	mov    ch,0x8a
  41ca77:	cwde   
  41ca78:	sti    
  41ca79:	bound  ecx,QWORD PTR [ebx-0x733a8b4e]
  41ca7f:	mov    ah,0xfa
  41ca81:	xchg   bh,ch
  41ca83:	imul   BYTE PTR [ecx+0x77]
  41ca86:	or     ebx,DWORD PTR [ecx+0x6539e9fb]
  41ca8c:	shl    DWORD PTR [edx-0x38c5cc10],1
  41ca92:	and    BYTE PTR [edx],ah
  41ca94:	or     eax,0x882c0e5e
  41ca99:	das    
  41ca9a:	sub    edi,0xfffffffa
  41ca9d:	dec    esi
  41ca9e:	test   BYTE PTR [edi+edx*2+0x730c0500],cl
  41caa5:	fcmovne st,st(1)
  41caa7:	in     eax,dx
  41caa8:	adc    BYTE PTR [esi],dh
  41caaa:	fisub  WORD PTR [edi]
  41caac:	mov    BYTE PTR [edi],ah
  41caae:	fs or  DWORD PTR es:[ecx],edx
  41cab2:	cld    
  41cab3:	xchg   esi,eax
  41cab4:	sti    
  41cab5:	push   ds
  41cab6:	or     ch,dh
  41cab8:	sti    
  41cab9:	pushf  
  41caba:	and    al,0xae
  41cabc:	pop    esp
  41cabd:	lds    ebx,FWORD PTR [eax-0x69]
  41cac0:	jne    0x41cac2
  41cac2:	or     al,BYTE PTR [esi+0x86e]
  41cac8:	es sub ah,0xff
  41cacc:	or     DWORD PTR [eax],ebx
  41cace:	inc    eax
  41cacf:	and    al,0xea
  41cad1:	mov    cl,0xf3
  41cad3:	call   DWORD PTR [ebx+0x32448a40]
  41cad9:	mov    bl,ah
  41cadb:	adc    ebp,esi
  41cadd:	test   esp,edi
  41cadf:	mov    ecx,DWORD PTR [ebp-0x61a5184]
  41cae5:	test   DWORD PTR [edi+edi*8-0x1d],edx
  41cae9:	enter  0x4011,0xce
  41caed:	test   DWORD PTR [esi+0x10],ebp
  41caf0:	mov    ebx,edi
  41caf2:	or     al,0xff
  41caf4:	push   ebx
  41caf5:	cwde   
  41caf6:	cld    
  41caf7:	adc    eax,0x40da2a
  41cafc:	or     eax,0x485f0771
  41cb01:	dec    ecx
  41cb02:	mov    ah,ch
  41cb04:	pop    ebx
  41cb05:	jno    0x41cb03
  41cb07:	inc    esi
  41cb08:	xchg   BYTE PTR [ecx-0x26],al
  41cb0b:	cmp    DWORD PTR [edx],ebp
  41cb0d:	dec    esp
  41cb0e:	dec    ebp
  41cb0f:	movhlps xmm5,xmm7
  41cb12:	(bad)  
  41cb13:	call   FWORD PTR [esi-0x4d]
  41cb16:	aas    
  41cb17:	and    al,0xa6
  41cb19:	fs jmp 0xfcc7f2e3
  41cb1f:	mov    DWORD PTR [edx+0x5fa82150],edx
  41cb25:	add    BYTE PTR [edx],ah
  41cb27:	lea    edx,[edx+0xe84950]
  41cb2d:	add    BYTE PTR [ebp-0x75],dh
  41cb30:	cld    
  41cb31:	jmp    DWORD PTR [ecx+0x2cdc0e85]
  41cb37:	hlt    
  41cb38:	add    BYTE PTR [ebx-0x3a],dl
  41cb3b:	into   
  41cb3c:	jecxz  0x41cb3d
  41cb3e:	aaa    
  41cb3f:	ds iret 
  41cb41:	adc    ah,bh
  41cb43:	push   edx
  41cb44:	inc    ebx
  41cb45:	add    BYTE PTR [esi-0x2c],ch
  41cb48:	add    bh,0x8
  41cb4b:	inc    ebx
  41cb4c:	cdq    
  41cb4d:	xchg   BYTE PTR [ebx+0x69],ah
  41cb50:	out    0x86,eax
  41cb52:	pop    ebx
  41cb53:	jno    0x41cb48
  41cb55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb56:	xor    eax,0x3669839e
  41cb5b:	(bad)  
  41cb5c:	dec    DWORD PTR [eax-0x196789ff]
  41cb62:	fsub   DWORD PTR [esi+0x7d]
  41cb65:	xlat   BYTE PTR ds:[ebx]
  41cb66:	mov    edx,0x838401d2
  41cb6b:	(bad)  
  41cb6c:	(bad)  
  41cb6d:	push   DWORD PTR [ecx+eiz*1-0x72c87bd7]
  41cb74:	(bad)  
  41cb75:	inc    BYTE PTR [ecx+0x8]
  41cb78:	jbe    0x41cb79
  41cb7a:	test   al,0x8d
  41cb7c:	jl     0x41cb09
  41cb7e:	pop    ebx
  41cb7f:	or     eax,0xa370005
  41cb84:	dec    eax
  41cb85:	add    al,0x37
  41cb87:	sahf   
  41cb88:	add    DWORD PTR [ecx-0x750072c9],0xfffffffb
  41cb8f:	push   0x8b37
  41cb94:	sti    
  41cb95:	jo     0x41cbba
  41cb97:	call   0xfd13d0a0
  41cb9c:	push   0x378028c1
  41cba1:	(bad)  
  41cba2:	inc    DWORD PTR [edi-0x7705cf0d]
  41cba8:	mov    ebx,0x48ff7d29
  41cbad:	(bad)  
  41cbae:	xlat   BYTE PTR ds:[ebx]
  41cbaf:	dec    esp
  41cbb0:	pop    edx
  41cbb1:	pop    esi
  41cbb2:	sar    BYTE PTR [edi-0x45],cl
  41cbb5:	xor    dh,dh
  41cbb7:	inc    DWORD PTR [ecx+0x34]
  41cbba:	outs   dx,BYTE PTR ds:[esi]
  41cbbb:	std    
  41cbbc:	sub    DWORD PTR [edi-0x68dda217],edx
  41cbc2:	popf   
  41cbc3:	daa    
  41cbc4:	arpl   WORD PTR [edi-0xbd9200c],dx
  41cbca:	jmp    0xd292509f
  41cbcf:	(bad)  [esi+0x4]
  41cbd2:	repz sar bl,1
  41cbd5:	pop    ds
  41cbd6:	(bad)  
  41cbd7:	adc    esi,edx
  41cbd9:	inc    eax
  41cbda:	mov    dl,0xf5
  41cbdc:	sub    BYTE PTR [edi+ebp*2],dh
  41cbdf:	dec    edi
  41cbe0:	sbb    ecx,DWORD PTR [eax+0x6d]
  41cbe3:	shr    BYTE PTR [ebx],1
  41cbe5:	mov    al,0xc9
  41cbe7:	add    esi,DWORD PTR [edi]
  41cbe9:	xor    al,0x75
  41cbeb:	inc    edi
  41cbec:	adc    ebp,esp
  41cbee:	shl    DWORD PTR [ecx+0x7cb296d4],1
  41cbf4:	ins    DWORD PTR es:[edi],dx
  41cbf5:	inc    esp
  41cbf6:	pop    edi
  41cbf7:	inc    edi
  41cbf8:	add    BYTE PTR [eax],al
  41cbfa:	pop    ebx
  41cbfb:	cmp    BYTE PTR [esp+eax*2+0x4c71343b],ch
  41cc02:	das    
  41cc03:	outs   dx,BYTE PTR ds:[esi]
  41cc04:	out    0x2,al
  41cc06:	ss jne 0x41cc69
  41cc09:	dec    ecx
  41cc0a:	pop    ds
  41cc0b:	outs   dx,BYTE PTR ds:[esi]
  41cc0c:	sub    esp,DWORD PTR [eax-0x78]
  41cc0f:	mov    ecx,DWORD PTR [ecx-0x2f]
  41cc12:	adc    DWORD PTR [esi-0x68d8a98e],0xfffffff4
  41cc19:	call   FWORD PTR [eax+0x1e]
  41cc1c:	mov    edx,0xa5ac6bd0
  41cc21:	daa    
  41cc22:	aas    
  41cc23:	mov    cl,0x29
  41cc25:	push   esi
  41cc26:	aas    
  41cc27:	xchg   edi,eax
  41cc28:	xchg   ebp,eax
  41cc29:	daa    
  41cc2a:	mov    bh,0x33
  41cc2c:	jmp    0x407c:0x5afbe03
  41cc33:	xchg   esi,eax
  41cc34:	add    cl,ch
  41cc36:	pop    esp
  41cc37:	imul   esp,esp,0x2e
  41cc3a:	pop    es
  41cc3b:	(bad)  
  41cc3c:	(bad)  
  41cc3d:	jmp    0xeb050076
  41cc42:	xor    al,0x97
  41cc44:	je     0x41cc13
  41cc46:	fs stos DWORD PTR es:[edi],eax
  41cc48:	inc    esp
  41cc49:	lds    ebx,FWORD PTR [esp+ecx*4-0x2d]
  41cc4d:	mov    ebx,0xaa8998e7
  41cc52:	cld    
  41cc53:	lods   al,BYTE PTR ds:[esi]
  41cc54:	test   ch,cl
  41cc56:	mov    ah,0x95
  41cc58:	sti    
  41cc59:	jmp    0x724ec0cb
  41cc5e:	add    BYTE PTR [eax],al
  41cc60:	mov    edi,0x34e98551
  41cc65:	xor    al,0x67
  41cc67:	neg    BYTE PTR [ebx-0xc]
  41cc6a:	adc    BYTE PTR [edi+eiz*2+0x50],bl
  41cc6e:	cmp    DWORD PTR [ecx],esp
  41cc70:	jmp    0x41ccc1
  41cc72:	dec    edx
  41cc73:	call   0x6462d6ac
  41cc78:	addr16 push eax
  41cc7a:	sub    DWORD PTR [ecx],edx
  41cc7c:	xchg   ebx,eax
  41cc7d:	cmp    ecx,DWORD PTR [edx-0x18]
  41cc80:	xor    al,0xab
  41cc82:	ret    
  41cc83:	cmp    DWORD PTR [esi+0x64d124f1],esi
  41cc89:	xchg   edi,eax
  41cc8a:	jne    0x41cc85
  41cc8c:	and    DWORD PTR [ecx],0xf16ccd25
  41cc92:	xchg   cl,ch
  41cc94:	xor    al,0xa
  41cc96:	pop    ds
  41cc97:	(bad)  
  41cc98:	retf   
  41cc99:	stos   BYTE PTR es:[edi],al
  41cc9a:	jl     0x41cc61
  41cc9c:	pop    esp
  41cc9d:	std    
  41cc9e:	call   0xfbd6f804
  41cca3:	jb     0x41cd1d
  41cca5:	in     eax,0x4f
  41cca7:	push   esi
  41cca8:	dec    DWORD PTR [edi+0x21]
  41ccab:	inc    ecx
  41ccac:	shr    DWORD PTR [ebp-0x4a20000],cl
  41ccb2:	and    al,0x8b
  41ccb4:	push   ss
  41ccb5:	mov    bl,0x77
  41ccb7:	and    al,0x46
  41ccb9:	dec    ecx
  41ccba:	jmp    0x171a39c
  41ccbf:	mov    ebx,DWORD PTR [ecx+0x60]
  41ccc2:	push   edx
  41ccc3:	inc    DWORD PTR [eax]
  41ccc5:	add    dl,cl
  41ccc7:	dec    esp
  41ccc8:	and    eax,ebp
  41ccca:	mov    bl,0x17
  41cccc:	cld    
  41cccd:	call   DWORD PTR [edi+0x81424ec]
  41ccd3:	in     eax,dx
  41ccd4:	and    al,0x20
  41ccd6:	sbb    bh,ch
  41ccd8:	push   ebp
  41ccd9:	mov    eax,DWORD PTR [edx-0x1e7ae6b3]
  41ccdf:	sti    
  41cce0:	or     BYTE PTR [ebx+0x5d8a3453],cl
  41cce6:	fidivr WORD PTR [ecx-0x1]
  41cce9:	mov    ah,BYTE PTR [edx]
  41cceb:	dec    esp
  41ccec:	adc    eax,0x194c1a8d
  41ccf1:	push   eax
  41ccf2:	icebp  
  41ccf3:	cld    
  41ccf4:	and    al,0x74
  41ccf6:	inc    ebp
  41ccf7:	jb     0x41ccf5
  41ccf9:	je     0x41cd25
  41ccfb:	cld    
  41ccfc:	push   ebp
  41ccfd:	call   0x3e4df1
  41cd02:	sar    esp,1
  41cd04:	and    al,0x6c
  41cd06:	daa    
  41cd07:	in     eax,dx
  41cd08:	and    al,0x18
  41cd0a:	mov    dh,0x85
  41cd0c:	dec    esp
  41cd0d:	inc    ecx
  41cd0f:	mov    cl,0x77
  41cd11:	and    al,0x6a
  41cd13:	xor    BYTE PTR [eax+0xf],dh
  41cd16:	jne    0x41cd1b
  41cd18:	or     eax,0x78175474
  41cd1d:	and    al,0x86
  41cd1f:	pop    ss
  41cd20:	pop    eax
  41cd21:	and    al,0x6a
  41cd23:	jns    0x41cd2d
  41cd25:	cmp    eax,DWORD PTR [ebx+0x66f94]
  41cd2b:	add    BYTE PTR [edi],dh
  41cd2d:	(bad)  
  41cd2e:	xlat   BYTE PTR ds:[ebx]
  41cd2f:	std    
  41cd30:	add    esi,esp
  41cd32:	retf   0xcb88
  41cd35:	es in  eax,dx
  41cd37:	add    BYTE PTR [eax-0x22],0x20
  41cd3b:	mov    esi,ebx
  41cd3d:	es cmp eax,0xcafe9fe8
  41cd43:	cld    
  41cd44:	mov    esp,0xb41c23e1
  41cd49:	mov    ebx,0xe3ae005f
  41cd4e:	push   edi
  41cd4f:	mov    DWORD PTR [ebx+0x79],edi
  41cd52:	xrelease xchg BYTE PTR [ecx-0x27],dh
  41cd56:	jbe    0x41cd9a
  41cd58:	daa    
  41cd59:	pop    ebx
  41cd5a:	inc    esi
  41cd5b:	ins    BYTE PTR es:[edi],dx
  41cd5c:	aaa    
  41cd5d:	adc    al,0x4e
  41cd5f:	pop    eax
  41cd60:	mov    esi,0x76e763db
  41cd65:	cwde   
  41cd66:	int    0xfc
  41cd68:	mov    dl,0x59
  41cd6a:	sub    DWORD PTR [eax-0x31],ecx
  41cd6d:	es loop 0x41cd6c
  41cd70:	rcl    BYTE PTR [esi],1
  41cd72:	dec    ecx
  41cd73:	and    al,0x2b
  41cd75:	push   es
  41cd76:	cmp    al,0x10
  41cd78:	xor    al,0xdc
  41cd7a:	ja     0x41cdc1
  41cd7c:	dec    edi
  41cd7d:	jecxz  0x41cdc1
  41cd7f:	ins    BYTE PTR es:[edi],dx
  41cd80:	aaa    
  41cd81:	je     0x41cd98
  41cd83:	sti    
  41cd84:	test   al,0xda
  41cd86:	xor    ecx,DWORD PTR [ecx-0x53f3e26d]
  41cd8c:	ins    BYTE PTR es:[edi],dx
  41cd8d:	pop    esi
  41cd8e:	add    eax,0xe4000000
  41cd93:	adc    eax,0x31e1082c
  41cd98:	pop    ecx
  41cd99:	outs   dx,DWORD PTR ds:[esi]
  41cd9a:	inc    esp
  41cd9b:	adc    cl,BYTE PTR [edx]
  41cd9d:	fld    QWORD PTR [ebx]
  41cd9f:	or     BYTE PTR ss:[ebx+0x43],bh
  41cda3:	mov    ds:0x34a9e865,eax
  41cda8:	fadd   QWORD PTR [ebx]
  41cdaa:	aaa    
  41cdab:	mov    eax,0x1bfc5829
  41cdb0:	sahf   
  41cdb1:	mov    ecx,0xf74b33f7
  41cdb6:	pusha  
  41cdb7:	es stos BYTE PTR es:[edi],al
  41cdb9:	add    ecx,DWORD PTR [eax]
  41cdbb:	adc    esi,ebp
  41cdbd:	dec    ebp
  41cdbe:	cmc    
  41cdbf:	mov    DWORD PTR [ebp-0x49cacb38],ebp
  41cdc5:	push   ss
  41cdc6:	mov    esi,0xcadc1f47
  41cdcb:	cdq    
  41cdcc:	sbb    cl,ch
  41cdce:	mov    bh,0x8b
  41cdd0:	adc    bl,BYTE PTR [eax+0x5f]
  41cdd3:	sbb    eax,0x93087c2a
  41cdd8:	jmp    0x2ea601dd
  41cddd:	inc    ecx
  41cdde:	aaa    
  41cddf:	mov    bh,0x71
  41cde1:	push   edi
  41cde2:	aaa    
  41cde3:	or     DWORD PTR [esi-0x15ee9f7d],ebp
  41cde9:	push   esi
  41cdea:	sub    DWORD PTR [edi-0x6556244f],edi
  41cdf0:	ror    ah,cl
  41cdf2:	mov    ch,0x73
  41cdf4:	push   ebp
  41cdf5:	pop    es
  41cdf6:	add    BYTE PTR [eax],al
  41cdf8:	shl    DWORD PTR [ebx],0xe9
  41cdfb:	push   esi
  41cdfc:	sbb    ebx,edi
  41cdfe:	dec    BYTE PTR [esi+0x2b]
  41ce01:	adc    BYTE PTR [ebx+ebx*2-0x15],dh
  41ce05:	jle    0x41ce2d
  41ce07:	add    al,0xaa
  41ce09:	sub    dh,al
  41ce0b:	icebp  
  41ce0c:	pusha  
  41ce0d:	xor    al,0x9b
  41ce0f:	push   esi
  41ce10:	inc    edi
  41ce11:	xchg   ebx,eax
  41ce12:	sbb    al,0x0
  41ce14:	out    0x92,al
  41ce16:	hlt    
  41ce17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce18:	jg     0x41ce10
  41ce1a:	jmp    0x1b81429f
  41ce1f:	cs fdivrp st(0),st
  41ce22:	add    BYTE PTR [edx+0x2ac7c80c],ch
  41ce28:	xor    edx,DWORD PTR [ecx+0x52664515]
  41ce2e:	add    DWORD PTR [edx],ebx
  41ce30:	jae    0x41ce84
  41ce32:	arpl   WORD PTR [eax-0x8],sp
  41ce35:	mov    WORD PTR [edx],es
  41ce37:	bound  esi,QWORD PTR [ebx-0x65]
  41ce3a:	in     al,0x6c
  41ce3c:	xchg   BYTE PTR [esi],al
  41ce3e:	inc    esi
  41ce3f:	jae    0x41ce7f
  41ce41:	mov    dh,0xc9
  41ce43:	mov    ebp,0x69c14343
  41ce48:	std    
  41ce49:	pop    esi
  41ce4a:	jbe    0x41ce38
  41ce4c:	jle    0x41ce84
  41ce4e:	pop    ecx
  41ce4f:	adc    dh,BYTE PTR [ecx]
  41ce51:	mov    ah,0xf9
  41ce53:	ret    0x9169
  41ce56:	inc    ecx
  41ce57:	mov    bh,0x27
  41ce59:	mov    ah,bh
  41ce5b:	fld    DWORD PTR [eax]
  41ce5d:	add    BYTE PTR [edx+ecx*4+0x1d067e39],dh
  41ce64:	repz jecxz 0x41ce5a
  41ce67:	iret   
  41ce68:	leave  
  41ce69:	pop    esp
  41ce6a:	add    BYTE PTR [edx-0x2f],0x2b
  41ce6e:	popa   
  41ce6f:	cmp    eax,DWORD PTR [ecx-0x15f2bc20]
  41ce75:	ins    DWORD PTR es:[edi],dx
  41ce76:	xchg   edx,eax
  41ce77:	add    eax,0x928b6a00
  41ce7c:	mov    ds:0xf43670eb,eax
  41ce81:	lahf   
  41ce82:	cmp    cl,BYTE PTR [eax+0x5b]
  41ce85:	stos   BYTE PTR es:[edi],al
  41ce86:	mov    eax,0xab430158
  41ce8b:	jmp    0x1e7ce24f
  41ce90:	add    DWORD PTR [esi+0x29737435],esp
  41ce96:	cmp    ecx,DWORD PTR [edi+0x51850d15]
  41ce9c:	add    DWORD PTR [eax],eax
  41ce9e:	pop    es
  41ce9f:	test   BYTE PTR [ebx+ecx*4],0xd0
  41cea3:	jns    0x41cefa
  41cea5:	mov    ebp,edi
  41cea7:	outs   dx,DWORD PTR ds:[esi]
  41cea8:	adc    BYTE PTR [eax],al
  41ceaa:	pop    esi
  41ceab:	xor    eax,0x903244f3
  41ceb0:	cli    
  41ceb1:	jae    0x41cf03
  41ceb3:	inc    ebx
  41ceb4:	jmp    0xfcc06a3a
  41ceb9:	mov    edx,DWORD PTR [eax]
  41cebb:	pop    esi
  41cebc:	mov    edi,0x8a434e04
  41cec1:	icebp  
  41cec2:	add    BYTE PTR [eax],al
  41cec4:	(bad)
  41cec7:	(bad)  
  41cec8:	and    BYTE PTR [ebp+0x74],dh
  41cecb:	inc    eax
  41cecc:	push   ds
  41cecd:	mov    ah,0xbb
  41cecf:	je     0x41cee4
  41ced1:	mov    edx,0x8ec301f3
  41ced6:	cld    
  41ced7:	adc    eax,0x3b869e
  41cedc:	popf   
  41cedd:	dec    esi
  41cede:	add    eax,0x8879d8ff
  41cee3:	inc    eax
  41cee4:	adc    dh,BYTE PTR [ebx+edi*4-0xc46268c]
  41ceeb:	add    DWORD PTR [edx-0x71],esp
  41ceee:	ss push es
  41cef0:	iret   
  41cef1:	aaa    
  41cef2:	xor    DWORD PTR [ebp+ecx*8+0x29],0x782dc3c1
  41cefa:	cmp    eax,ebx
  41cefc:	pop    ebp
  41cefd:	stc    
  41cefe:	and    al,0x4
  41cf00:	into   
  41cf01:	add    BYTE PTR [ebx],al
  41cf03:	push   DWORD PTR [ebx]
  41cf05:	mov    al,ds:0x769e4010
  41cf0a:	(bad)  
  41cf0b:	inc    DWORD PTR [ebx+0x11]
  41cf0e:	call   0xfd55dc64
  41cf13:	add    BYTE PTR [ebx],cl
  41cf15:	hlt    
  41cf16:	cld    
  41cf17:	push   eax
  41cf18:	aaa    
  41cf19:	stos   BYTE PTR es:[edi],al
  41cf1a:	push   eax
  41cf1b:	or     al,0x1f
  41cf1d:	pushf  
  41cf1e:	cmp    eax,DWORD PTR [eax]
  41cf20:	aaa    
  41cf21:	and    eax,0x8302fd05
  41cf26:	(bad)  
  41cf27:	adc    al,BYTE PTR [eax]
  41cf29:	add    BYTE PTR [ebx-0x4dffc090],bh
  41cf2f:	fiadd  DWORD PTR [edi+0x5]
  41cf32:	lods   al,BYTE PTR ds:[esi]
  41cf33:	ffreep st(3)
  41cf35:	xor    BYTE PTR [edi+0x67],0x5
  41cf39:	xor    DWORD PTR [edi+0x53],esi
  41cf3c:	mov    BYTE PTR [edi],0x37
  41cf3f:	enter  0xeb7a,0xe6
  41cf43:	mov    al,0x78
  41cf45:	inc    edx
  41cf46:	das    
  41cf47:	stos   DWORD PTR es:[edi],eax
  41cf48:	pop    ebp
  41cf49:	or     BYTE PTR [eax],dh
  41cf4b:	shl    edi,1
  41cf4d:	xor    BYTE PTR [ecx],ah
  41cf4f:	pop    edi
  41cf50:	icebp  
  41cf51:	pop    ss
  41cf52:	inc    edi
  41cf53:	(bad)  
  41cf55:	xor    bh,0xa9
  41cf58:	or     ch,bh
  41cf5a:	mov    dl,BYTE PTR [ebp-0x621ae229]
  41cf60:	dec    DWORD PTR [eax+0x73d22107]
  41cf66:	push   ecx
  41cf67:	sbb    cl,BYTE PTR [ecx+0xc]
  41cf6a:	aaa    
  41cf6b:	adc    DWORD PTR [eax],esp
  41cf6d:	mov    esi,DWORD PTR [edx-0x5f]
  41cf70:	cs push 0x3b
  41cf73:	xchg   esi,eax
  41cf74:	dec    ebx
  41cf75:	or     al,0x4d
  41cf77:	mov    eax,ds:0x663f72c8
  41cf7c:	jmp    0x41cfa5
  41cf7e:	daa    
  41cf7f:	pop    ebp
  41cf80:	add    eax,0xfd50f783
  41cf85:	push   ebp
  41cf86:	iret   
  41cf87:	or     DWORD PTR [ecx],edi
  41cf89:	std    
  41cf8a:	mov    al,0x8a
  41cf8c:	sar    esp,1
  41cf8e:	add    BYTE PTR [eax],al
  41cf90:	and    dl,BYTE PTR [ebp+0x346f12c8]
  41cf96:	clc    
  41cf97:	inc    ebx
  41cf98:	aaa    
  41cf99:	mov    ebx,0x72782aa3
  41cf9e:	loope  0x41cfa3
  41cfa0:	in     al,0xba
  41cfa2:	jge    0x41cf29
  41cfa4:	mov    WORD PTR [eax],?
  41cfa6:	sbb    al,0x31
  41cfa8:	inc    esi
  41cfa9:	(bad)  
  41cfaa:	adc    bl,BYTE PTR [esi+0x3b]
  41cfad:	(bad)  
  41cfae:	fsub   QWORD PTR [ebx]
  41cfb0:	cmp    ah,dh
  41cfb2:	jmp    0x31f52033
  41cfb7:	leave  
  41cfb8:	pop    ds
  41cfb9:	test   ch,dl
  41cfbb:	push   cs
  41cfbc:	mov    esp,0xe1344df9
  41cfc1:	jbe    0x41cf67
  41cfc3:	fistp  WORD PTR [esp+esi*1]
  41cfc6:	jmp    0x70f2:0xd6293a03
  41cfcd:	xor    al,0x3f
  41cfcf:	lock mov edi,0x740d39f8
  41cfd5:	cmp    al,0x9d
  41cfd7:	add    dh,BYTE PTR [edx-0x3f]
  41cfda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfdb:	fild   WORD PTR [eax+0x2cef12e6]
  41cfe1:	and    eax,0x73b403aa
  41cfe6:	jl     0x41cfc3
  41cfe8:	bound  ecx,QWORD PTR [edi-0xbb9442c]
  41cfee:	jmp    0x8c30c36f
  41cff3:	mov    edx,0x37f60000
  41cff8:	jmp    0x28d7:0x669fae2e
  41cfff:	jecxz  0x41d065
  41d001:	ds iret 
  41d003:	jecxz  0x41d01b
  41d005:	lods   eax,DWORD PTR ds:[esi]
  41d006:	sbb    cl,BYTE PTR [bp+si]
  41d009:	leave  
  41d00a:	and    eax,0x3743d940
  41d00f:	in     al,0x0
  41d011:	mov    dh,0x99
  41d013:	adc    DWORD PTR cs:[ecx],ebp
  41d016:	cmp    esi,DWORD PTR [ebx-0x465ae340]
  41d01c:	inc    ebp
  41d01d:	mov    eax,ds:0x3211a44
  41d022:	jle    0x41cfb3
  41d024:	adc    eax,0x14e84f1
  41d029:	ins    BYTE PTR es:[edi],dx
  41d02a:	je     0x41d02d
  41d02c:	add    eax,0x4c9b74bb
  41d031:	sub    DWORD PTR fs:[eax+0x3bf16e50],esp
  41d038:	les    ebp,FWORD PTR [esp+edi*2+0x34e9fb8d]
  41d03f:	in     eax,0xc3
  41d041:	lods   al,BYTE PTR ds:[esi]
  41d042:	js     0x41d078
  41d044:	add    ecx,ebp
  41d046:	xor    al,0x91
  41d048:	adc    eax,0x14e44f9
  41d04d:	fs hlt 
  41d04f:	add    DWORD PTR [edx],esp
  41d051:	call   0xfdfc:0xa48de363
  41d058:	dec    edi
  41d059:	add    BYTE PTR es:[eax],al
  41d05c:	imul   ecx,DWORD PTR [ebx+edi*8+0x412440f4],0x74cd89e9
  41d067:	fucomp st(7)
  41d069:	and    ch,BYTE PTR [ebp-0x79cb8b25]
  41d06f:	sub    DWORD PTR [ecx-0x174fce],eax
  41d075:	add    bh,cl
  41d077:	out    dx,al
  41d078:	shl    BYTE PTR [ebp+0xe],cl
  41d07b:	sub    DWORD PTR [ebx],esi
  41d07d:	mov    edx,0x739242bf
  41d082:	add    al,0xe9
  41d084:	pop    es
  41d085:	mov    ebx,0xe30a38ec
  41d08a:	lea    eax,[eax]
  41d08c:	or     eax,DWORD PTR [eax-0x145995b5]
  41d092:	std    
  41d093:	xor    eax,ebp
  41d095:	jne    0x41d0a5
  41d097:	sbb    BYTE PTR [esi-0xf],bh
  41d09a:	add    BYTE PTR [ebp-0x6b807a32],al
  41d0a0:	sahf   
  41d0a1:	xor    DWORD PTR [ecx],eax
  41d0a3:	push   edi
  41d0a4:	adc    eax,0x4e10293b
  41d0a9:	cmp    BYTE PTR [eax+0x5248b245],cl
  41d0af:	push   ebx
  41d0b0:	inc    esp
  41d0b1:	lahf   
  41d0b2:	cld    
  41d0b3:	jne    0x41d09b
  41d0b5:	je     0x41d08b
  41d0b7:	test   DWORD PTR [esi+0x5bff6ee3],ecx
  41d0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0be:	adc    DWORD PTR [eax+0x0],eax
  41d0c1:	add    BYTE PTR [esi-0x4e],bl
  41d0c4:	repz jp 0x41d132
  41d0c7:	out    dx,al
  41d0c8:	mov    DWORD PTR [ebp-0xe],eax
  41d0cb:	cmp    dl,al
  41d0cd:	je     0x41d13d
  41d0cf:	pop    edi
  41d0d0:	jmp    0xfcb7b617
  41d0d5:	mov    ebp,DWORD PTR [esi+0x39]
  41d0d8:	bnd je 0x41d098
  41d0db:	or     edi,DWORD PTR [edi]
  41d0dd:	cld    
  41d0de:	fidiv  WORD PTR [ebp+0x6e]
  41d0e1:	cld    
  41d0e2:	enter  0x13ea,0xff
  41d0e6:	stos   DWORD PTR es:[edi],eax
  41d0e7:	js     0x41d0e5
  41d0e9:	xlat   BYTE PTR ds:[ebx]
  41d0ea:	fwait
  41d0eb:	js     0x41d15c
  41d0ed:	cmp    dh,BYTE PTR [ecx]
  41d0ef:	ds (bad) 
  41d0f1:	adc    eax,0x3b80fa
  41d0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0f7:	jno    0x41d168
  41d0f9:	cs push esp
  41d0fb:	cmp    BYTE PTR [edi],dh
  41d0fd:	ret    
  41d0fe:	js     0x41d130
  41d100:	push   cs
  41d101:	mov    dh,0x9e
  41d103:	dec    eax
  41d104:	push   ecx
  41d105:	push   DWORD PTR [edi]
  41d107:	sub    eax,0x8b2312c4
  41d10c:	aas    
  41d10d:	add    ah,bh
  41d10f:	(bad)  [ebx+0x15]
  41d112:	mov    esp,0x5700089a
  41d117:	fwait
  41d118:	push   DWORD PTR [eax+0x3b]
  41d11b:	or     al,BYTE PTR ds:0xff982de9
  41d121:	das    
  41d122:	aaa    
  41d123:	fwait
  41d124:	jmp    0xb741d201
  41d129:	fsin   
  41d12b:	push   ebp
  41d12c:	(bad)  
  41d12d:	sahf   
  41d12e:	ss std 
  41d130:	js     0x41d186
  41d132:	les    esi,FWORD PTR [edx+0x6f]
  41d135:	or     eax,0x5b45c7f1
  41d13a:	add    eax,0x26d9ad5d
  41d13f:	(bad)  
  41d140:	je     0x41d111
  41d142:	jbe    0x41d12f
  41d144:	out    0x19,al
  41d146:	popa   
  41d147:	cld    
  41d148:	aaa    
  41d149:	jae    0x41d106
  41d14b:	je     0x41d144
  41d14d:	call   0x3f:0x6a3f12c2
  41d154:	mov    edx,0x9f204c5d
  41d159:	std    
  41d15a:	dec    edx
  41d15b:	inc    eax
  41d15c:	aaa    
  41d15d:	lods   eax,DWORD PTR ds:[esi]
  41d15e:	ret    0xcf12
  41d161:	(bad)  
  41d162:	aas    
  41d163:	add    BYTE PTR [edx-0x45efb3a3],bh
  41d169:	rol    bl,1
  41d16b:	dec    esi
  41d16c:	lea    edi,[edx]
  41d16e:	ret    
  41d16f:	iret   
  41d170:	mov    dl,0x5d
  41d172:	push   ecx
  41d173:	add    al,0x25
  41d175:	pop    ebp
  41d176:	mov    ebp,0xc400b4c0
  41d17b:	push   DWORD PTR [ecx]
  41d17d:	loopne 0x41d13e
  41d17f:	(bad)  
  41d180:	hlt    
  41d181:	xor    al,0x3d
  41d183:	jns    0x41d161
  41d185:	mov    bh,0xcd
  41d187:	sub    al,0x61
  41d189:	inc    edi
  41d18a:	mov    eax,ds:0xc9000011
  41d18f:	adc    ah,BYTE PTR [ecx+0x37]
  41d192:	mov    ebx,0x4d4fac4f
  41d197:	push   ds
  41d198:	es ja  0x41d190
  41d19b:	fistp  DWORD PTR [ebx]
  41d19d:	xor    al,0xa2
  41d19f:	and    edx,edx
  41d1a1:	in     eax,dx
  41d1a2:	pop    eax
  41d1a3:	xor    al,0x67
  41d1a5:	sar    BYTE PTR [ebx+esi*2],0x24
  41d1a9:	pushf  
  41d1aa:	hlt    
  41d1ab:	xor    ebp,edx
  41d1ad:	add    ebp,DWORD PTR [ecx+esi*8-0x781288bf]
  41d1b4:	ror    BYTE PTR [esi+0x3f],0x0
  41d1b8:	out    0x78,eax
  41d1ba:	std    
  41d1bb:	cmp    esp,DWORD PTR [ebp+0x2f]
  41d1be:	push   ebx
  41d1bf:	out    0x19,al
  41d1c1:	(bad)
  41d1c4:	mov    esp,0xea34375b
  41d1c9:	jmp    edx
  41d1cb:	loope  0x41d188
  41d1cd:	xor    ch,cl
  41d1cf:	mov    dh,ah
  41d1d1:	sti    
  41d1d2:	sub    esp,esi
  41d1d4:	jmp    0x1041c257
  41d1d9:	or     esp,DWORD PTR [esp+0x248ef3be]
  41d1e0:	pop    ebp
  41d1e1:	aas    
  41d1e2:	or     esp,esp
  41d1e4:	and    cl,BYTE PTR [edi+0x27]
  41d1e7:	pushf  
  41d1e8:	dec    ecx
  41d1e9:	cmp    cl,BYTE PTR [edx]
  41d1eb:	mov    edi,esi
  41d1ed:	repz add eax,DWORD PTR [ecx]
  41d1f0:	sbb    bh,BYTE PTR [ecx+0x0]
  41d1f3:	add    BYTE PTR [ebp+0x7c],al
  41d1f6:	xlat   BYTE PTR ds:[ebx]
  41d1f7:	inc    ebx
  41d1f8:	aaa    
  41d1f9:	mov    edx,DWORD PTR [ebx]
  41d1fb:	lds    esp,FWORD PTR [ebp-0x68]
  41d1fe:	add    dh,dh
  41d200:	xchg   edx,eax
  41d201:	mov    ebx,0x34fff545
  41d206:	xor    BYTE PTR [ecx-0x12418ce6],ch
  41d20c:	xor    al,0xe7
  41d20e:	xchg   ebp,eax
  41d210:	adc    al,BYTE PTR [ebp-0xd]
  41d213:	pop    esp
  41d214:	stc    
  41d215:	aaa    
  41d216:	cmp    bh,BYTE PTR [edi+ebp*4]
  41d219:	add    eax,0x3bf9be10
  41d21e:	imul   edi,DWORD PTR [ecx+0x1900f3f3],0xa6363f7b
  41d228:	jnp    0x41d1dd
  41d22a:	(bad)  
  41d22b:	in     eax,dx
  41d22c:	outs   dx,DWORD PTR ds:[esi]
  41d22d:	es cld 
  41d22f:	sbb    al,0x7f
  41d231:	xchg   DWORD PTR [ebp-0x1f],esi
  41d234:	fadd   QWORD PTR [edi-0x1bc4d68d]
  41d23a:	call   0xfbcb0c07
  41d23f:	push   0xffffffa0
  41d241:	cmp    bh,BYTE PTR [eax]
  41d243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d244:	repnz sub al,0xfc
  41d247:	fcomp  QWORD PTR [ebx+edi*4+0x45]
  41d24b:	cmc    
  41d24c:	jae    0x41d253
  41d24e:	adc    DWORD PTR [esi-0xf],edx
  41d251:	aaa    
  41d252:	jmp    0xfbc94470
  41d257:	inc    esi
  41d258:	add    BYTE PTR [eax],al
  41d25a:	cmp    DWORD PTR [eax],0x840c3988
  41d260:	dec    ecx
  41d261:	ss sti 
  41d263:	mov    esp,0x76518fc2
  41d268:	adc    al,0xe9
  41d26a:	popa   
  41d26b:	mov    ebx,0x11e06aec
  41d270:	push   esp
  41d271:	(bad)  
  41d273:	adc    DWORD PTR ds:0x8a347491,ecx
  41d279:	add    BYTE PTR [ebx+0x7215fc65],bh
  41d27f:	cmp    DWORD PTR [ebx],0x0
  41d282:	push   edi
  41d283:	dec    edx
  41d284:	cmc    
  41d285:	cmp    edx,DWORD PTR [ecx]
  41d287:	cmp    BYTE PTR [edi-0x3b],0xde
  41d28b:	xor    eax,0xb9005301
  41d290:	cs test al,0xbc
  41d293:	cmc    
  41d294:	add    BYTE PTR [eax-0x3a],ch
  41d297:	dec    ebp
  41d298:	inc    ecx
  41d299:	add    BYTE PTR [esi+0x75],cl
  41d29c:	aad    0x68
  41d29e:	scas   al,BYTE PTR es:[edi]
  41d29f:	dec    ebp
  41d2a0:	inc    ecx
  41d2a1:	add    cl,ch
  41d2a3:	dec    ebx
  41d2a4:	cmc    
  41d2a5:	mov    eax,esi
  41d2a7:	jne    0x41d27e
  41d2a9:	mov    DWORD PTR [ebx-0x3c],esp
  41d2ac:	cmp    bh,bl
  41d2ae:	cdq    
  41d2af:	mov    cl,0x90
  41d2b1:	add    BYTE PTR [esi+0x59c73a35],cl
  41d2b7:	mov    cl,0x88
  41d2b9:	add    BYTE PTR [esi+0x35],bl
  41d2bc:	push   esi
  41d2bd:	inc    DWORD PTR [eax]
  41d2bf:	add    BYTE PTR [ebx+0x3d],ah
  41d2c2:	mov    BYTE PTR [ebp-0x1a],al
  41d2c5:	fild   WORD PTR [ebx-0x2f8b1983]
  41d2cb:	test   DWORD PTR [esi],ebx
  41d2cd:	dec    ebx
  41d2ce:	add    cl,BYTE PTR [ecx+0x4469cd6b]
  41d2d4:	mov    BYTE PTR [edx-0x478fa945],al
  41d2da:	ds cld 
  41d2dc:	stos   DWORD PTR es:[edi],eax
  41d2dd:	sti    
  41d2de:	cwde   
  41d2df:	push   edi
  41d2e0:	into   
  41d2e1:	jne    0x41d2f1
  41d2e3:	sbb    BYTE PTR [eax],al
  41d2e5:	cmc    
  41d2e6:	add    BYTE PTR [ebx-0x3b7dc745],cl
  41d2ec:	or     bh,BYTE PTR [eax-0xc786792]
  41d2f2:	mov    al,ds:0x3a52373b
  41d2f7:	add    DWORD PTR [edx+0x7a8abba7],ebp
  41d2fd:	dec    edi
  41d2fe:	push   ebp
  41d2ff:	mov    esi,DWORD PTR [edx+0x13]
  41d302:	push   ebp
  41d303:	mov    DWORD PTR [edx-0x7d],edi
  41d306:	push   esi
  41d307:	push   eax
  41d308:	loopne 0x41d32c
  41d30a:	sbb    al,0xc0
  41d30c:	sbb    bl,BYTE PTR [ebx-0x67c8fffd]
  41d312:	(bad)  
  41d313:	push   DWORD PTR [edi]
  41d315:	xchg   edi,eax
  41d316:	dec    edi
  41d317:	push   ebp
  41d318:	pusha  
  41d319:	inc    edx
  41d31a:	push   esi
  41d31b:	push   ebp
  41d31c:	mov    al,0x47
  41d31e:	or     eax,0x153742fd
  41d323:	inc    eax
  41d324:	add    BYTE PTR [eax],al
  41d326:	aaa    
  41d327:	sbb    al,al
  41d329:	jae    0x41d36c
  41d32b:	fidivr DWORD PTR [eax]
  41d32d:	loopne 0x41d2eb
  41d32f:	addr16 (bad) 
  41d331:	adc    edi,esi
  41d333:	call   0xfce1:0x2780d5be
  41d33a:	popa   
  41d33b:	adc    eax,0x57bee449
  41d340:	mov    ch,0x36
  41d342:	jmp    0xb787:0x600633b2
  41d349:	cld    
  41d34a:	add    al,BYTE PTR [edi]
  41d34c:	mov    edi,0x19114b72
  41d351:	mov    esp,0x5dffdb25
  41d356:	fcom   QWORD PTR ds:0x53d8f049
  41d35c:	mov    BYTE PTR [edi],0x37
  41d35f:	add    cl,BYTE PTR [edx+0x4]
  41d362:	add    BYTE PTR [edx],0x1
  41d365:	enter  0xdd45,0xff
  41d369:	xor    bh,0xc1
  41d36c:	add    dl,BYTE PTR [eax+0x10]
  41d36f:	xor    eax,0xb1328e3b
  41d374:	sub    DWORD PTR [edi],esi
  41d376:	ss in  al,0x12
  41d379:	fimul  DWORD PTR [esi+0x3abb424]
  41d37f:	inc    BYTE PTR [edx]
  41d381:	ret    0x738b
  41d384:	xchg   esp,eax
  41d385:	mov    cs,esp
  41d387:	mov    ecx,0x13ac
  41d38c:	xchg   DWORD PTR [edx],ebx
  41d38e:	jmp    0x3b37:0xe32445c2
  41d395:	xchg   DWORD PTR [esp+ecx*1+0x4d],edx
  41d399:	xor    al,0xd3
  41d39b:	pop    ss
  41d39c:	mov    bh,0x22
  41d39e:	sub    al,BYTE PTR [esp+esi*4]
  41d3a1:	je     0x41d3e0
  41d3a3:	adc    BYTE PTR [edi],al
  41d3a5:	xchg   esp,edx
  41d3a7:	retf   
  41d3a8:	inc    esi
  41d3a9:	hlt    
  41d3aa:	jmp    0xbf65c93b
  41d3af:	push   es
  41d3b0:	inc    esi
  41d3b1:	je     0x41d3f7
  41d3b3:	(bad)  
  41d3b4:	cmp    al,0x34
  41d3b6:	xor    eax,0x85b58c8d
  41d3bb:	xor    al,0x36
  41d3bd:	xor    al,0xea
  41d3bf:	pop    ecx
  41d3c0:	or     bh,BYTE PTR [ecx-0x78953f94]
  41d3c6:	jp     0x41d41c
  41d3c8:	bound  eax,QWORD PTR [ecx]
  41d3ca:	loop   0x41d38c
  41d3cc:	inc    ebp
  41d3cd:	xchg   esp,eax
  41d3ce:	aad    0x43
  41d3d0:	aaa    
  41d3d1:	mov    ecx,0x874ac06c
  41d3d6:	pop    edx
  41d3d7:	push   esp
  41d3d8:	out    0x1b,eax
  41d3da:	mov    ds:0x8b33f73b,al
  41d3df:	xor    BYTE PTR ds:0xe58eea34,dh
  41d3e5:	mov    ds:0x9c23c13d,eax
  41d3ea:	add    BYTE PTR [eax+0x6afb8823],ch
  41d3f0:	add    BYTE PTR [eax],al
  41d3f2:	(bad)  
  41d3f3:	cmp    bl,BYTE PTR [edi+eax*8-0x4f]
  41d3f7:	(bad)  
  41d3f8:	jp     0x41d3ef
  41d3fa:	mov    cl,0xb1
  41d3fc:	nop
  41d3fd:	adc    eax,0x15087f6
  41d402:	inc    ebp
  41d403:	xor    al,0x1
  41d405:	jmp    0xe5b69aba
  41d40a:	fs xchg dh,ah
  41d40d:	jmp    0x41d3f1
  41d40f:	(bad)  
  41d410:	leave  
  41d411:	sub    edi,DWORD PTR [edi]
  41d413:	xor    al,0x56
  41d415:	jb     0x41d3af
  41d417:	add    eax,0x34384ded
  41d41c:	add    DWORD PTR [edx],edi
  41d41e:	pop    esi
  41d41f:	mov    ebx,0x87f19585
  41d424:	sti    
  41d425:	sbb    DWORD PTR [ebx+0x18],ebx
  41d428:	jns    0x41d453
  41d42a:	cmp    ebx,DWORD PTR [eax+eiz*2-0x7b788882]
  41d431:	test   eax,0xe9ebb027
  41d436:	xor    al,0x34
  41d438:	mov    fs,WORD PTR [esp+eax*1-0x75]
  41d43c:	sti    
  41d43d:	xchg   esi,eax
  41d43e:	in     al,0xba
  41d440:	test   DWORD PTR [ebp-0x4f],edx
  41d443:	xchg   ebx,edi
  41d445:	sbb    DWORD PTR [esi+0x21],esi
  41d448:	loope  0x41d41f
  41d44a:	hlt    
  41d44b:	xor    ecx,DWORD PTR [esi-0x4751b94]
  41d451:	outs   dx,BYTE PTR ds:[esi]
  41d452:	in     al,0x88
  41d454:	jne    0x41d447
  41d456:	add    BYTE PTR [eax],al
  41d458:	mov    ecx,0x8d108f1
  41d45d:	or     al,0x41
  41d45f:	jmp    0x1aa27048
  41d464:	test   BYTE PTR [eax+0x215a007f],0x82
  41d46b:	clc    
  41d46c:	popa   
  41d46d:	and    al,0x85
  41d46f:	stos   DWORD PTR es:[edi],eax
  41d470:	push   cs
  41d471:	xor    al,BYTE PTR [ecx]
  41d473:	push   eax
  41d474:	popa   
  41d475:	or     DWORD PTR ds:[ebp-0x90265],ecx
  41d47c:	and    ecx,esp
  41d47e:	call   0xfcb62fac
  41d483:	dec    ebx
  41d485:	cmp    DWORD PTR [edi+0x446c46d8],eax
  41d48b:	jmp    ecx
  41d48d:	scas   al,BYTE PTR es:[edi]
  41d48e:	fmul   DWORD PTR [edi]
  41d490:	dec    edx
  41d491:	mov    edx,0xb6defffb
  41d496:	jle    0x41d44c
  41d498:	rol    ebp,cl
  41d49a:	cld    
  41d49b:	push   eax
  41d49c:	data16 lods al,BYTE PTR ds:[esi]
  41d49e:	jae    0x41d4e0
  41d4a0:	into   
  41d4a1:	or     cl,BYTE PTR [esi]
  41d4a3:	add    DWORD PTR [esi+0xabd8831],ebx
  41d4a9:	retf   0xfffc
  41d4ac:	xchg   BYTE PTR [edi-0x181e00cf],al
  41d4b2:	push   ebx
  41d4b3:	add    esi,0xffffffc5
  41d4b6:	jge    0x41d51e
  41d4b8:	es cmp al,0xfc
  41d4bb:	inc    DWORD PTR [eax]
  41d4bd:	add    BYTE PTR [esi-0x5c4b815c],cl
  41d4c3:	(bad)  
  41d4c6:	ss sbb al,0x74
  41d4c9:	inc    eax
  41d4ca:	pop    esi
  41d4cb:	(bad)  
  41d4cc:	push   cs
  41d4cd:	add    al,0x7f
  41d4cf:	icebp  
  41d4d0:	add    BYTE PTR [eax-0x5d],cl
  41d4d3:	xor    edi,esp
  41d4d5:	call   FWORD PTR [esi+0x3e]
  41d4d8:	inc    esi
  41d4d9:	push   0xffffff9a
  41d4db:	cmp    ah,0x8d
  41d4de:	fwait
  41d4df:	add    eax,0xde375055
  41d4e4:	sbb    DWORD PTR [eax],ebx
  41d4e6:	dec    ecx
  41d4e7:	(bad)  
  41d4e9:	xor    bl,0x7e
  41d4ec:	out    dx,al
  41d4ed:	mov    edi,0xec4a0499
  41d4f2:	adc    BYTE PTR [eax],0x4a
  41d4f5:	mov    esp,0x82909e67
  41d4fa:	mov    ds:0x67fcbc50,eax
  41d4ff:	sbb    BYTE PTR [edx-0x43e2054d],cl
  41d505:	dec    edi
  41d506:	clc    
  41d507:	iret   
  41d508:	jnp    0x41d54d
  41d50a:	aaa    
  41d50b:	fwait
  41d50c:	inc    esp
  41d50e:	jp     0x41d533
  41d510:	push   es
  41d511:	add    BYTE PTR [edi],dh
  41d513:	fwait
  41d514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d515:	pop    es
  41d516:	rcl    BYTE PTR [ebp+0x31eff4ba],cl
  41d51c:	(bad)
  41d51f:	popa   
  41d520:	or     eax,0xb200008b
  41d525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d526:	sar    ah,0xb0
  41d529:	dec    edx
  41d52a:	lods   eax,DWORD PTR ds:[esi]
  41d52b:	inc    edi
  41d52c:	loope  0x41d59b
  41d52e:	mov    edx,0x58257731
  41d533:	(bad)  
  41d534:	jne    0x41d4cc
  41d536:	call   DWORD PTR [edx-0x44]
  41d539:	(bad)  
  41d53a:	jle    0x41d527
  41d53c:	daa    
  41d53d:	aad    0x48
  41d53f:	(bad)  
  41d540:	ss adc al,al
  41d543:	jae    0x41d53d
  41d545:	dec    ecx
  41d546:	push   ebx
  41d547:	push   ebp
  41d548:	ret    0xd23
  41d54b:	xchg   edx,esi
  41d54d:	push   es
  41d54e:	xchg   DWORD PTR [esi+ebp*4],eax
  41d551:	dec    edi
  41d552:	mov    ch,0x82
  41d554:	ja     0x41d4dc
  41d556:	and    DWORD PTR [ecx-0x49f4fd38],ecx
  41d55c:	call   0x7accc394
  41d561:	ins    DWORD PTR es:[edi],dx
  41d562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d563:	mov    esi,0x537e8c38
  41d568:	xor    BYTE PTR [esi+eiz*2-0x54f9b545],al
  41d56f:	nop
  41d570:	jne    0x41d5ee
  41d572:	cdq    
  41d573:	sub    DWORD PTR [edi+0xe],esi
  41d576:	aam    0x55
  41d578:	popf   
  41d579:	sub    DWORD PTR [edx],0x18
  41d57c:	jmp    0x41d5a3
  41d57e:	stos   BYTE PTR es:[edi],al
  41d57f:	add    esi,DWORD PTR [esp+esi*2+0x348ef195]
  41d586:	addr16 ret 0x0
  41d58a:	out    dx,eax
  41d58b:	out    0xa,eax
  41d58d:	cmp    bh,ah
  41d58f:	jmp    0x1486:0x29e3be8f
  41d596:	ja     0x41d5cc
  41d598:	ins    DWORD PTR es:[edi],dx
  41d599:	ret    
  41d59a:	inc    esp
  41d59b:	cmp    BYTE PTR [eax+ecx*2],ah
  41d59e:	retf   0x7535
  41d5a1:	inc    edi
  41d5a2:	mov    edi,0xbf37dae4
  41d5a7:	push   cs
  41d5a8:	hlt    
  41d5a9:	push   ebp
  41d5aa:	sbb    eax,0x8b17ca83
  41d5af:	and    eax,0x1b7042a
  41d5b4:	mov    ebx,0xac382404
  41d5b9:	inc    edi
  41d5ba:	xchg   ecx,eax
  41d5bb:	xor    al,0x67
  41d5bd:	lds    edi,FWORD PTR [eax]
  41d5bf:	xor    DWORD PTR [eax+edi*4],0x5
  41d5c3:	mov    cl,0x3a
  41d5c5:	pop    esi
  41d5c6:	fisubr WORD PTR [ebp+0x7779be2c]
  41d5cc:	xor    edx,DWORD PTR [ebp-0x42]
  41d5cf:	jle    0x41d63f
  41d5d1:	mov    bl,0xaf
  41d5d3:	xor    esi,ebx
  41d5d5:	shl    edi,1
  41d5d7:	xor    eax,DWORD PTR [ecx]
  41d5d9:	push   ds
  41d5da:	jmp    0x335c076a
  41d5df:	xor    al,0x30
  41d5e1:	xor    BYTE PTR [edx+edx*8],bh
  41d5e4:	sub    BYTE PTR [ebx],bh
  41d5e6:	div    BYTE PTR [ebx]
  41d5e8:	jbe    0x41d5d9
  41d5ea:	mov    ebp,0x3b28c9
  41d5ef:	add    BYTE PTR [esi+0x34],dh
  41d5f2:	sub    BYTE PTR [eax],0x2f
  41d5f5:	mov    ch,0xf9
  41d5f7:	loope  0x41d65f
  41d5f9:	mov    ds,WORD PTR [ebx-0x69]
  41d5fc:	mul    ebp
  41d5fe:	xchg   DWORD PTR ds:0x7252e564,edi
  41d604:	dec    eax
  41d605:	xor    BYTE PTR [eax],dh
  41d607:	inc    edx
  41d608:	push   es
  41d609:	jp     0x41d642
  41d60b:	sbb    ch,BYTE PTR [ecx]
  41d60d:	sbb    al,0x88
  41d60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d610:	cmp    al,0xb5
  41d612:	shl    ch,0xdd
  41d615:	jmp    0xf558:0xbb0975f4
  41d61c:	mov    esp,0xf36a422a
  41d621:	xor    bh,BYTE PTR [eax]
  41d623:	mov    bh,0x6
  41d625:	xchg   edx,eax
  41d626:	xchg   DWORD PTR [edi+0x3e1f740f],esp
  41d62c:	pop    ebp
  41d62d:	hlt    
  41d62e:	push   0xfb82a4e9
  41d633:	sbb    DWORD PTR [esi],eax
  41d635:	push   cs
  41d636:	cld    
  41d637:	mov    esi,0x29121441
  41d63c:	cmp    ebp,DWORD PTR [ebp+0x6cff2f8]
  41d642:	dec    esp
  41d643:	jo     0x41d626
  41d645:	jg     0x41d67e
  41d647:	call   0xb543:0x1c884442
  41d64e:	ret    0xbfe1
  41d651:	loopne 0x41d64b
  41d653:	add    BYTE PTR [eax],al
  41d655:	add    BYTE PTR [esi-0x14],al
  41d658:	test   eax,0xfde74e41
  41d65d:	jbe    0x41d629
  41d65f:	into   
  41d660:	std    
  41d661:	dec    edi
  41d662:	pop    edi
  41d663:	ss add al,0x62
  41d667:	sub    DWORD PTR [esi+edi*1+0x45fcbe4d],eax
  41d66e:	mov    ch,BYTE PTR [ebp-0x56afbbb]
  41d674:	cld    
  41d675:	adc    DWORD PTR [eax+0x25],0x3a
  41d679:	inc    ebp
  41d67a:	or     al,BYTE PTR [ebx+edx*8-0x75]
  41d67e:	jecxz  0x41d6b1
  41d680:	xor    al,0x45
  41d682:	pop    edx
  41d683:	dec    edx
  41d684:	or     DWORD PTR [eax+0x320dcd0f],esi
  41d68a:	dec    esi
  41d68b:	int3   
  41d68c:	or     BYTE PTR [ebx-0x5416d265],cl
  41d692:	cmp    al,al
  41d694:	cld    
  41d695:	xor    cl,BYTE PTR [esi]
  41d697:	loopne 0x41d6f3
  41d699:	pop    ebx
  41d69a:	daa    
  41d69b:	jae    0x41d6a0
  41d69d:	add    BYTE PTR [edi-0x6f],bh
  41d6a0:	rol    DWORD PTR [ebx-0x22],1
  41d6a3:	mov    edx,0x76ca74bb
  41d6a8:	(bad)  
  41d6a9:	shl    DWORD PTR [edx-0x612bff07],cl
  41d6af:	test   DWORD PTR [eax],0x241889eb
  41d6b5:	ror    BYTE PTR [ebp+0x38],cl
  41d6b8:	mov    BYTE PTR ds:0x4c20000,0x41
  41d6bf:	add    BYTE PTR [ebx+0x35],ch
  41d6c2:	aas    
  41d6c3:	add    BYTE PTR [ebp-0x71bc5098],bh
  41d6c9:	sbb    BYTE PTR [edx+edx*8],dh
  41d6cc:	dec    ebp
  41d6cd:	cmp    BYTE PTR [edx+0x43df37e0],ah
  41d6d3:	add    BYTE PTR [esi+0x3740124b],dl
  41d6d9:	out    dx,al
  41d6da:	mov    ah,0xb3
  41d6dc:	hlt    
  41d6dd:	mov    ah,BYTE PTR [ebx+ebp*2+0x2a]
  41d6e1:	dec    ebx
  41d6e2:	add    eax,0x444837a1
  41d6e7:	add    BYTE PTR [esi+0x374010bb],dl
  41d6ed:	scas   al,BYTE PTR es:[edi]
  41d6ee:	adc    al,0xb3
  41d6f0:	je     0x41d67d
  41d6f2:	fs push ebx
  41d6f4:	inc    edx
  41d6f5:	retf   
  41d6f6:	jmp    DWORD PTR [eax+0x440057]
  41d6fc:	(bad)  
  41d6fd:	jbe    0x41d70f
  41d6ff:	inc    eax
  41d700:	aaa    
  41d701:	scas   al,BYTE PTR es:[edi]
  41d702:	hlt    
  41d703:	mov    dl,0x74
  41d705:	mov    esp,DWORD PTR [ebx+edi*2+0x2a]
  41d709:	retf   
  41d70a:	jmp    DWORD PTR [eax+0x43e877]
  41d710:	xchg   esi,eax
  41d711:	into   
  41d712:	adc    BYTE PTR [eax+0x37],al
  41d715:	out    dx,al
  41d716:	push   esp
  41d717:	mov    bl,0x74
  41d719:	mov    esp,DWORD PTR [edi+eax*2+0x42]
  41d71d:	retf   
  41d71e:	jmp    DWORD PTR [eax+0x40570000]
  41d724:	inc    esp
  41d725:	add    BYTE PTR [esi+0x3740120a],dl
  41d72b:	scas   al,BYTE PTR es:[edi]
  41d72c:	das    
  41d72d:	mov    bl,0x74
  41d72f:	mov    esp,DWORD PTR [ebx+edi*1+0x4a]
  41d733:	dec    ebx
  41d734:	add    eax,0x42a7b7a1
  41d739:	add    dh,dl
  41d73b:	inc    esi
  41d73c:	adc    al,BYTE PTR [eax+0x37]
  41d73f:	scas   al,BYTE PTR es:[edi]
  41d740:	(bad)  
  41d741:	mov    dl,0xf4
  41d743:	mov    ah,BYTE PTR [edi+esi*2+0x22]
  41d747:	dec    ebx
  41d748:	add    eax,0x5d33d7a1
  41d74d:	inc    esi
  41d74e:	aaa    
  41d74f:	shl    DWORD PTR [ecx+0x4733f710],cl
  41d755:	jae    0x41d6fc
  41d757:	hlt    
  41d758:	jmp    0x2a6833c1
  41d75d:	add    al,0x96
  41d75f:	jae    0x41d795
  41d761:	inc    esi
  41d762:	aaa    
  41d763:	sar    DWORD PTR [ecx+0x10],cl
  41d766:	div    DWORD PTR [ebx]
  41d768:	inc    edi
  41d769:	rol    DWORD PTR [ebp+0x4464e9f4],cl
  41d76f:	es stos BYTE PTR es:[edi],al
  41d771:	add    edx,esi
  41d773:	xchg   esp,eax
  41d774:	pushf  
  41d775:	inc    esi
  41d776:	aaa    
  41d777:	aad    0x3d
  41d779:	adc    BYTE PTR [edi+0x34],dh
  41d77c:	xchg   DWORD PTR [ebx+0x64e9f3e5],esi
  41d782:	lods   al,BYTE PTR ds:[esi]
  41d783:	sub    BYTE PTR [edx-0x29fffffd],ch
  41d789:	xor    al,0x74
  41d78b:	inc    esi
  41d78c:	aaa    
  41d78d:	aad    0x41
  41d78f:	emms   
  41d791:	xor    al,0x47
  41d793:	adc    ebp,DWORD PTR [ecx+0x4464e9f3]
  41d799:	sub    DWORD PTR [edx+0x3c549603],ebp
  41d79f:	inc    esi
  41d7a0:	aaa    
  41d7a1:	aad    0x19
  41d7a3:	emms   
  41d7a5:	xor    al,0x47
  41d7a7:	repz xor bl,0xe9
  41d7ab:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41d7ad:	sub    BYTE PTR [edx],ch
  41d7af:	add    al,0x96
  41d7b1:	hlt    
  41d7b2:	xchg   ebx,eax
  41d7b3:	inc    ebp
  41d7b4:	aaa    
  41d7b5:	aad    0xb5
  41d7b7:	adc    bh,dh
  41d7b9:	xor    eax,DWORD PTR [edi-0x160c16ac]
  41d7bf:	bound  ebp,QWORD PTR [ecx+ebp*1]
  41d7c2:	sub    al,BYTE PTR [esi+edx*8]
  41d7c5:	adc    al,0x1
  41d7c7:	jg     0x41d7bb
  41d7c9:	xor    esp,DWORD PTR [edx+0xf42751]
  41d7cf:	dec    edx
  41d7d0:	inc    ebx
  41d7d1:	(bad)  
  41d7d2:	aas    
  41d7d3:	jmp    0x29563aad
  41d7d8:	xor    edx,ebp
  41d7da:	adc    BYTE PTR [edi-0x6],0x33
  41d7de:	mov    ds:0xf429d1,al
  41d7e3:	dec    edx
  41d7e4:	stos   DWORD PTR es:[edi],eax
  41d7e5:	leave  
  41d7e6:	aas    
  41d7e7:	jmp    0x2957fec1
  41d7ec:	add    BYTE PTR [eax],al
  41d7ee:	cmp    edx,ebp
  41d7f0:	mov    al,ds:0xa233f29f
  41d7f5:	std    
  41d7f6:	inc    ecx
  41d7f7:	hlt    
  41d7f8:	add    BYTE PTR [edx-0x16c0365d],cl
  41d7fe:	xchg   ebp,eax
  41d7ff:	pop    ds
  41d800:	push   ss
  41d801:	test   eax,0x77c0d534
  41d806:	jp     0x41d83c
  41d808:	mov    ds:0xf439e1,al
  41d80d:	mov    ch,bl
  41d80f:	enter  0xe93f,0x95
  41d813:	ret    
  41d814:	adc    al,0xa9
  41d816:	xor    al,0xd5
  41d818:	loopne 0x41d879
  41d81a:	jb     0x41d850
  41d81c:	mov    ds:0xf44a05,al
  41d821:	dec    edx
  41d822:	mov    ds:0x55e93fc8,eax
  41d827:	lahf   
  41d828:	adc    al,0xa9
  41d82a:	xor    al,0xd5
  41d82c:	add    BYTE PTR [esi],dh
  41d82e:	jp     0x41d864
  41d830:	mov    ds:0xf423bd,al
  41d835:	mov    al,BYTE PTR [ecx+ecx*8+0x3f]
  41d839:	jmp    0x29564b53
  41d83e:	cmp    edx,ebp
  41d840:	and    BYTE PTR [eax],al
  41d842:	sbb    eax,edi
  41d844:	add    BYTE PTR [ecx+0x412ea6],ah
  41d84a:	mov    ebp,0x8e43b482
  41d84f:	adc    esp,esp
  41d851:	adc    eax,DWORD PTR [eax]
  41d853:	add    BYTE PTR [esi+0x38],cl
  41d856:	mov    ds:0xf80940,al
  41d85b:	mov    eax,ds:0x412e92
  41d860:	in     eax,dx
  41d861:	loop   0x41d818
  41d863:	inc    ebx
  41d864:	dec    esi
  41d865:	adc    DWORD PTR [eax-0x5dc7e1ec],esp
  41d86b:	pusha  
  41d86c:	or     eax,edi
  41d86e:	add    BYTE PTR [ecx+0x4127b2],ah
  41d874:	lods   eax,DWORD PTR ds:[esi]
  41d875:	inc    edx
  41d876:	mov    dh,0x43
  41d878:	push   ds
  41d879:	adc    ecx,DWORD PTR [edx*1-0x7f5dce22]
  41d880:	leave  
  41d881:	clc    
  41d882:	add    BYTE PTR [ecx+0x412d8e],ah
  41d888:	mov    ebp,0x1e43b4a1
  41d88d:	adc    esi,DWORD PTR [esp+edx*1-0x5f5dce32]
  41d894:	pop    ecx
  41d895:	clc    
  41d896:	add    BYTE PTR [ecx+0x412d6e],ah
  41d89c:	jge    0x41d89f
  41d89e:	mov    ch,0x43
  41d8a0:	into   
  41d8a1:	adc    ah,BYTE PTR [eax]
  41d8a3:	adc    eax,0xc0a2318e
  41d8a8:	or     eax,edi
  41d8aa:	add    BYTE PTR [ecx+0x412d72],ah
  41d8b0:	ins    DWORD PTR es:[edi],dx
  41d8b1:	popa   
  41d8b2:	mov    ah,0x43
  41d8b4:	into   
  41d8b5:	sbb    ah,bl
  41d8b7:	adc    eax,DWORD PTR [eax]
  41d8b9:	add    BYTE PTR [esi+0x38],bl
  41d8bc:	mov    ds:0x3f9e37e0,al
  41d8c1:	add    dh,dl
  41d8c3:	ret    
  41d8c4:	cmovo  esi,DWORD PTR [edi]
  41d8c7:	stos   BYTE PTR es:[edi],al
  41d8c8:	mov    ah,0xb4
  41d8ca:	hlt    
  41d8cb:	mov    ah,BYTE PTR [edi+edi*4+0x23]
  41d8cf:	dec    ebx
  41d8d0:	add    eax,0x400337a1
  41d8d5:	add    dh,dl
  41d8d7:	ret    
  41d8d8:	adc    BYTE PTR [eax+0x37],al
  41d8db:	jmp    0xaf64:0x8af4b814
  41d8e2:	dec    ebx
  41d8e3:	dec    ebx
  41d8e4:	add    eax,0x3ff317a1
  41d8e9:	add    BYTE PTR [esi+0x3740113f],dl
  41d8ef:	jmp    0xa764:0x8af4b7f4
  41d8f6:	daa    
  41d8f7:	retf   
  41d8f8:	jmp    FWORD PTR [ecx+0x6f]
  41d8fb:	arpl   di,cx
  41d8fd:	mov    bl,0x74
  41d8ff:	mov    ebx,DWORD PTR [esi+0x3f]
  41d902:	(bad)  
  41d904:	jmp    edi
  41d906:	xor    al,bh
  41d908:	mov    bl,0xfc
  41d90a:	hlt    
  41d90b:	cdq    
  41d90c:	dec    ebp
  41d90d:	mov    DWORD PTR [edx-0x4d],eax
  41d910:	push   cs
  41d911:	inc    eax
  41d912:	aaa    
  41d913:	jae    0x41d980
  41d915:	ja     0x41d98e
  41d917:	mov    ecx,DWORD PTR [edx-0x3]
  41d91a:	or     DWORD PTR [ebx+0x77c7],esp
  41d920:	ja     0x41d8ad
  41d922:	dec    edx
  41d923:	mov    eax,ds:0x3fe387
  41d928:	fcomp  DWORD PTR [ebp*1-0x34b02c]
  41d92f:	push   esp
  41d930:	xchg   esp,eax
  41d931:	stos   BYTE PTR es:[edi],al
  41d932:	ja     0x41d974
  41d934:	aaa    
  41d935:	mov    cs,ebp
  41d937:	(bad)  [bp+di]
  41d93a:	bound  eax,QWORD PTR [edi+esi*1-0x1b]
  41d93e:	xchg   BYTE PTR [ebx],dh
  41d940:	out    dx,eax
  41d941:	lock jmp 0xc64d63fd
  41d947:	cmp    esi,edi
  41d949:	xor    ebx,DWORD PTR [ebx]
  41d94b:	arpl   WORD PTR [eax],dx
  41d94d:	mov    esp,0x658a0426
  41d952:	aas    
  41d953:	add    DWORD PTR [edi],ecx
  41d955:	in     al,0x71
  41d957:	inc    edx
  41d958:	aaa    
  41d959:	sar    DWORD PTR [ecx+0x7b],1
  41d95c:	div    DWORD PTR [ebx]
  41d95e:	xchg   edx,eax
  41d95f:	je     0x41d9cd
  41d961:	jl     0x41d8f5
  41d963:	mov    DWORD PTR [eax+0x142faeb7],ecx
  41d969:	jge    0x41d927
  41d96b:	fwait
  41d96c:	mov    al,dh
  41d96e:	jmp    0xbcbe4cfd
  41d973:	mov    ecx,DWORD PTR [eax+0x5b6e9f0]
  41d979:	cld    
  41d97a:	mov    eax,ds:0x147b3742
  41d97f:	sub    al,0xef
  41d981:	imul   ecx
  41d983:	mov    dh,0x0
  41d985:	add    BYTE PTR [ebp-0x24],ah
  41d988:	xchg   ecx,eax
  41d989:	inc    edx
  41d98a:	aaa    
  41d98b:	mov    WORD PTR [ecx-0x6483ec5d],ss
  41d991:	mov    edi,esi
  41d993:	fbld   TBYTE PTR [esi]
  41d995:	mov    bh,BYTE PTR [edx+0x30]
  41d998:	gs ret 
  41d99a:	test   BYTE PTR [edi],ch
  41d99c:	mov    edx,0xf94845b6
  41d9a1:	inc    ebx
  41d9a2:	aaa    
  41d9a3:	mov    bh,0x8b
  41d9a5:	jmp    eax
  41d9a7:	scas   al,BYTE PTR es:[edi]
  41d9a8:	jecxz  0x41d92a
  41d9aa:	cwde   
  41d9ab:	add    al,dh
  41d9ad:	push   ebx
  41d9ae:	shl    BYTE PTR [ecx],cl
  41d9b0:	xor    dl,BYTE PTR [ecx]
  41d9b2:	ja     0x41d9e8
  41d9b4:	add    DWORD PTR [edx-0x1e],ebp
  41d9b7:	jnp    0x41d977
  41d9b9:	xor    DWORD PTR [esi+ebp*1],0xbc5ce901
  41d9c0:	sub    dh,BYTE PTR gs:[ebx]
  41d9c3:	mov    WORD PTR [ecx],gs
  41d9c5:	pushf  
  41d9c6:	xor    al,0x34
  41d9c8:	xor    dh,cl
  41d9ca:	lods   al,BYTE PTR ds:[esi]
  41d9cb:	(bad)  
  41d9cc:	loopne 0x41da3e
  41d9ce:	dec    eax
  41d9cf:	nop
  41d9d0:	data16 jmp 0x41d9ce
  41d9d3:	loopne 0x41d962
  41d9d5:	sub    al,0xdb
  41d9d7:	jmp    0x41d9d4
  41d9d9:	xor    al,0x2f
  41d9db:	jns    0x41da12
  41d9dd:	lds    eax,FWORD PTR [ecx-0x5decff0c]
  41d9e3:	lods   al,BYTE PTR ds:[esi]
  41d9e4:	xor    eax,0xf445dd
  41d9e9:	mov    es,WORD PTR [eax]
  41d9eb:	add    BYTE PTR [ecx-0x4a],ch
  41d9ee:	shl    dh,0xd0
  41d9f1:	pop    ecx
  41d9f2:	add    cl,ch
  41d9f4:	xor    al,0xe
  41d9f6:	call   FWORD PTR ds:0x8545aef2
  41d9fc:	jecxz  0x41da76
  41d9fe:	jne    0x41d9f5
  41da00:	jmp    0x41da47
  41da02:	loope  0x41da3b
  41da04:	jbe    0x41da3a
  41da06:	addr16 push esi
  41da08:	jmp    0xc4b0:0x32298560
  41da0f:	jmp    0xe8a90e48
  41da14:	mov    WORD PTR [eax+0x0],?
  41da17:	jmp    0xf61d6650
  41da1c:	ret    
  41da1d:	ja     0x41d9a7
  41da1f:	ins    BYTE PTR es:[edi],dx
  41da20:	stos   DWORD PTR es:[edi],eax
  41da21:	test   ebx,edi
  41da23:	push   ds
  41da24:	stos   BYTE PTR es:[edi],al
  41da25:	mov    ch,0xf1
  41da27:	sbb    al,0xaa
  41da29:	ja     0x41da3c
  41da2b:	loope  0x41da61
  41da2d:	xor    al,0xc4
  41da2f:	add    BYTE PTR [ebx-0x41],ah
  41da32:	out    dx,al
  41da33:	dec    ecx
  41da35:	sbb    eax,DWORD PTR [ecx]
  41da37:	add    dh,cl
  41da39:	mov    cl,0x7e
  41da3b:	std    
  41da3c:	ret    
  41da3d:	mov    edi,0x7b5ae8fc
  41da42:	cld    
  41da43:	jmp    DWORD PTR ds:0x1389e13a
  41da49:	pop    eax
  41da4a:	cmc    
  41da4b:	jmp    FWORD PTR [ecx-0x55]
  41da4e:	ds in  al,0x0
  41da51:	add    BYTE PTR [edi],al
  41da53:	cli    
  41da54:	sub    dh,dh
  41da56:	leave  
  41da57:	mov    edi,0xc096b586
  41da5c:	cld    
  41da5d:	push   DWORD PTR [esi-0x71]
  41da60:	mov    ah,0xff
  41da62:	cdq    
  41da63:	mov    cl,0xb6
  41da65:	lock ret 
  41da67:	mov    edi,0xcea68bfc
  41da6c:	dec    esp
  41da6d:	mov    edx,0xc688bfa9
  41da72:	cs enter 0xb919,0xc9
  41da77:	mov    edi,0xc0a285c4
  41da7c:	cld    
  41da7d:	call   DWORD PTR [edx+0x36]
  41da80:	add    DWORD PTR [eax],eax
  41da82:	fldenv [esi]
  41da84:	or     DWORD PTR [eax],eax
  41da86:	push   ds
  41da87:	lods   eax,DWORD PTR ds:[esi]
  41da88:	aam    0x8d
  41da8a:	ret    
  41da8b:	(bad)
  41da8e:	imul   esi,DWORD PTR [edx-0x3f872b82],0x80a8e8fc
  41da98:	cld    
  41da99:	dec    DWORD PTR [ebp-0x6aff02e6]
  41da9f:	dec    edx
  41daa0:	or     edi,edi
  41daa2:	shr    BYTE PTR ds:0x47490067,1
  41daa8:	add    eax,0x177837ff
  41daad:	push   ss
  41daae:	ja     0x41da3b
  41dab0:	add    bl,0x43
  41dab3:	call   0x80c7:0x8282
  41daba:	scas   eax,DWORD PTR es:[edi]
  41dabb:	cld    
  41dabc:	sub    BYTE PTR [si],0x4
  41dac0:	mov    eax,0xf7160f60
  41dac5:	mov    al,BYTE PTR [edx+0x420e3bc3]
  41dacb:	cld    
  41dacc:	mov    al,ds:0x2ae9059b
  41dad1:	push   ds
  41dad2:	lds    edi,FWORD PTR [edi]
  41dad4:	je     0x41dadc
  41dad6:	sub    ch,al
  41dad8:	mov    ah,0x48
  41dada:	mov    cl,0xfc
  41dadc:	inc    ebp
  41dadd:	retf   
  41dade:	pushf  
  41dadf:	dec    esi
  41dae0:	ret    
  41dae1:	mov    edi,?
  41dae3:	sar    DWORD PTR [edi],0x8b
  41dae6:	pop    eax
  41dae7:	mov    DWORD PTR [ebx+0xc],ebx
  41daea:	mov    eax,ds:0xff8b3adf
  41daef:	push   ebp
  41daf0:	add    al,bl
  41daf2:	jno    0x41db13
  41daf4:	dec    ebp
  41daf5:	mov    dl,0xaf
  41daf7:	out    0xd3,eax
  41daf9:	and    eax,0x38ac0005
  41dafe:	jns    0x41daf8
  41db00:	cmp    BYTE PTR [edx],cl
  41db02:	sbb    eax,0xff8b3ae0
  41db07:	mov    al,dh
  41db09:	dec    DWORD PTR fs:[edi+0x20]
  41db0d:	js     0x41db16
  41db0f:	push   ss
  41db10:	ja     0x41da9d
  41db12:	add    bl,0x43
  41db15:	or     ah,cl
  41db17:	jae    0x41db4e
  41db19:	add    al,0xf4
  41db1b:	xor    BYTE PTR [eax],al
  41db1d:	add    bh,dh
  41db1f:	pop    es
  41db20:	mov    bh,0x5c
  41db22:	sub    bh,bl
  41db24:	les    ebx,FWORD PTR [ebp-0x2]
  41db27:	xor    esp,DWORD PTR [edi]
  41db29:	sbb    al,0x13
  41db2b:	xor    ebp,edx
  41db2d:	add    ecx,DWORD PTR [edi-0x34]
  41db30:	mov    WORD PTR [esi+0x37],es
  41db33:	mov    WORD PTR ds:0xb678d177,fs
  41db39:	mov    ecx,0x811dfeb1
  41db3e:	jne    0x41dba0
  41db40:	cdq    
  41db41:	mov    dl,0x25
  41db43:	push   eax
  41db44:	fld    DWORD PTR [ebx+0x37]
  41db47:	in     al,0xe2
  41db49:	sbb    BYTE PTR [ebx+0x25],bl
  41db4c:	sub    al,BYTE PTR [esi+ebp*4]
  41db4f:	pop    ebx
  41db50:	push   cs
  41db51:	shr    BYTE PTR [ebx],cl
  41db53:	mov    al,0xa0
  41db55:	add    esi,DWORD PTR [edi]
  41db57:	xor    al,0x1
  41db59:	cmp    DWORD PTR [ebx-0x7],esp
  41db5c:	(bad)  
  41db5d:	jle    0x41db9b
  41db5f:	lds    ebp,FWORD PTR [edx+esi*4+0x4]
  41db63:	dec    esp
  41db64:	inc    eax
  41db65:	push   es
  41db66:	fild   WORD PTR [ebx-0x1ec8bbdf]
  41db6c:	call   0xb404:0x2a24d318
  41db73:	jae    0x41db89
  41db75:	sbb    bh,BYTE PTR [eax+eiz*8+0x5bcd80ed]
  41db7c:	xchg   ecx,eax
  41db7d:	fidiv  DWORD PTR [esp+esi*1]
  41db80:	jmp    0xe2fe:0x78000088
  41db87:	jle    0x41dbfe
  41db89:	pop    esp
  41db8a:	ins    BYTE PTR es:[edi],dx
  41db8b:	ret    
  41db8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db8d:	sub    al,0xa4
  41db8f:	out    dx,al
  41db90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db91:	pusha  
  41db92:	aad    0xbe
  41db94:	sysenter 
  41db96:	popa   
  41db97:	dec    eax
  41db98:	repz jecxz 0x41dbdd
  41db9b:	sbb    BYTE PTR [ebx-0x49fc55de],bh
  41dba1:	stc    
  41dba2:	add    BYTE PTR ds:0x6a7e0034,dl
  41dba8:	daa    
  41dba9:	pop    eax
  41dbaa:	sti    
  41dbab:	popf   
  41dbac:	sub    eax,0x34f111b9
  41dbb1:	xor    al,0x54
  41dbb3:	fucompp 
  41dbb5:	in     al,0x4f
  41dbb7:	cmp    DWORD PTR [eax],0xffffffd6
  41dbba:	push   edx
  41dbbb:	push   es
  41dbbc:	addps  xmm7,xmm3
  41dbbf:	aam    0xdc
  41dbc1:	es inc ecx
  41dbc3:	jmp    0xb31ace03
  41dbc8:	jns    0x41dbcd
  41dbca:	pop    edx
  41dbcb:	jno    0x41dbc5
  41dbcd:	xchg   esp,eax
  41dbce:	mov    DWORD PTR [edi+eiz*8],edi
  41dbd1:	loopne 0x41dc23
  41dbd3:	(bad)  
  41dbd4:	call   0x29102c04
  41dbd9:	and    al,0x13
  41dbdb:	sub    DWORD PTR [ebx],esi
  41dbdd:	mov    ch,0xc4
  41dbdf:	in     eax,dx
  41dbe0:	std    
  41dbe1:	ror    esp,0xb7
  41dbe4:	(bad)  
  41dbe5:	js     0x41db6e
  41dbe7:	xchg   esi,eax
  41dbe8:	add    BYTE PTR [eax],al
  41dbea:	repnz or DWORD PTR [ebp-0x4868894],0xffffff9e
  41dbf2:	ret    
  41dbf3:	xor    bh,BYTE PTR [esi+edx*4]
  41dbf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbf7:	inc    esp
  41dbf8:	rcl    eax,0x23
  41dbfb:	ja     0x41dc07
  41dbfd:	pop    ebp
  41dbfe:	jae    0x41dbaf
  41dc00:	inc    ebp
  41dc01:	mov    ah,BYTE PTR [edx-0xc56cfd0]
  41dc07:	je     0x41db90
  41dc09:	add    al,0xd3
  41dc0b:	mov    bl,0x4d
  41dc0d:	gs out 0x77,al
  41dc10:	jne    0x41dc53
  41dc12:	out    0x21,al
  41dc14:	sub    eax,0xfc3474f8
  41dc19:	aam    0x0
  41dc1b:	js     0x41dc32
  41dc1d:	add    BYTE PTR [esi+0x1e],al
  41dc20:	inc    ecx
  41dc21:	add    BYTE PTR [edi+ebp*8-0x7ef3141f],al
  41dc28:	mov    ebx,0xfb0011e8
  41dc2d:	call   FWORD PTR [esp+ebp*1]
  41dc30:	add    DWORD PTR [esi],edi
  41dc32:	out    dx,eax
  41dc33:	daa    
  41dc34:	leave  
  41dc35:	(bad)  
  41dc36:	pushf  
  41dc37:	cmp    al,0xa6
  41dc39:	(bad)  
  41dc3a:	jne    0x41dbf9
  41dc3c:	dec    eax
  41dc3d:	cmp    BYTE PTR [edx],dh
  41dc3f:	adc    BYTE PTR [eax+esi*4-0x13],dh
  41dc43:	(bad)  
  41dc45:	jnp    0x41dc36
  41dc47:	sub    al,0xa2
  41dc49:	leave  
  41dc4a:	retf   0xaf7a
  41dc4d:	out    dx,eax
  41dc4e:	add    BYTE PTR [eax],al
  41dc50:	add    al,0xc8
  41dc52:	int3   
  41dc53:	lods   al,BYTE PTR ds:[esi]
  41dc54:	les    edi,FWORD PTR [ebx-0x382614b8]
  41dc5a:	dec    ecx
  41dc5b:	push   ds
  41dc5c:	adc    bh,BYTE PTR [edi]
  41dc5e:	xor    BYTE PTR [edx+0xf],ah
  41dc61:	mov    dl,0x3a
  41dc63:	call   0x648da112
  41dc68:	aaa    
  41dc69:	jmp    0x5c08:0x46b46b49
  41dc70:	cmp    DWORD PTR [ebx+0x3c],0x5d7a946c
  41dc77:	add    DWORD PTR [esi],0xfffffffc
  41dc7a:	dec    eax
  41dc7b:	loopne 0x41dc4f
  41dc7d:	mov    dh,0xcd
  41dc7f:	stos   DWORD PTR es:[edi],eax
  41dc80:	nop
  41dc81:	leave  
  41dc82:	ret    
  41dc83:	xchg   ebx,eax
  41dc84:	sub    esi,DWORD PTR [ecx+0xd1b0141]
  41dc8a:	mov    al,0x7e
  41dc8c:	pop    eax
  41dc8d:	int    0x8
  41dc8f:	imul   edi,DWORD PTR [edi],0x59
  41dc92:	lds    edx,FWORD PTR [edi]
  41dc94:	nop
  41dc95:	aam    0xa0
  41dc97:	ins    DWORD PTR es:[edi],dx
  41dc98:	aaa    
  41dc99:	jg     0x41dc92
  41dc9b:	mov    bl,0x17
  41dc9d:	mov    ecx,0x90b6a068
  41dca2:	div    DWORD PTR [ebx-0x404ee955]
  41dca8:	inc    eax
  41dca9:	or     eax,0xc6e2c5a5
  41dcae:	mov    ecx,0xc2c95c48
  41dcb3:	cld    
  41dcb4:	add    BYTE PTR [eax],al
  41dcb6:	retf   
  41dcb7:	shl    BYTE PTR [ecx+ecx*4],0x38
  41dcbb:	sbb    al,0x8b
  41dcbd:	dec    ecx
  41dcbe:	stos   DWORD PTR es:[edi],eax
  41dcbf:	inc    esi
  41dcc0:	mov    cl,0xbf
  41dcc2:	fwait
  41dcc3:	xor    DWORD PTR [ecx],edx
  41dcc5:	mov    ch,0x32
  41dcc7:	mov    al,ds:0x1d8cccf7
  41dccc:	imul   eax,ebp,0x60
  41dccf:	aad    0xa8
  41dcd1:	sbb    BYTE PTR [edi+0x49],ch
  41dcd4:	pop    esp
  41dcd5:	stc    
  41dcd6:	retf   
  41dcd7:	inc    eax
  41dcd8:	xor    BYTE PTR [ecx+0x3dfc9e38],cl
  41dcde:	adc    al,0x2e
  41dce0:	jo     0x41dd4e
  41dce2:	or     BYTE PTR [edx+0xb],dh
  41dce5:	mov    edi,0xc7fd1fb1
  41dcea:	enter  0xbad,0x34
  41dcee:	mov    WORD PTR [eax],fs
  41dcf0:	std    
  41dcf1:	and    BYTE PTR [edx+0x5948b3e2],ch
  41dcf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcf8:	iret   
  41dcf9:	push   esp
  41dcfa:	sbb    al,0xc9
  41dcfc:	sub    ebx,DWORD PTR [ebp+0x5dfcf11f]
  41dd02:	int3   
  41dd03:	out    dx,al
  41dd04:	jae    0x41dd4e
  41dd06:	dec    edi
  41dd07:	and    eax,0xd08c5a8
  41dd0c:	pushf  
  41dd0d:	sbb    BYTE PTR [eax+eax*8+0x33c3b444],dh
  41dd14:	add    BYTE PTR [esi+0x73030cc0],dh
  41dd1a:	add    BYTE PTR [eax],al
  41dd1c:	mov    eax,DWORD PTR [ecx]
  41dd1e:	push   eax
  41dd1f:	psubb  mm2,QWORD PTR [esi-0x4c]
  41dd23:	sti    
  41dd24:	or     ecx,0x94305d3c
  41dd2a:	stos   BYTE PTR es:[edi],al
  41dd2b:	pop    ecx
  41dd2c:	imul   BYTE PTR [ebx]
  41dd2e:	jmp    0x9ca0:0x6887be58
  41dd35:	xor    ebp,edx
  41dd37:	add    eax,DWORD PTR [esi+0x2b19b2de]
  41dd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd3e:	lods   al,BYTE PTR ds:[esi]
  41dd3f:	retf   
  41dd40:	pop    eax
  41dd41:	hlt    
  41dd42:	aaa    
  41dd43:	inc    ebx
  41dd44:	aaa    
  41dd45:	inc    ecx
  41dd46:	pop    ds
  41dd47:	outs   dx,BYTE PTR ds:[esi]
  41dd48:	shl    BYTE PTR [edx+ebp*8],0x3
  41dd4c:	stos   DWORD PTR es:[di],eax
  41dd4e:	xchg   esp,eax
  41dd4f:	stos   DWORD PTR es:[edi],eax
  41dd50:	mov    ecx,0x45aeedfe
  41dd55:	and    al,0xfc
  41dd57:	inc    ebx
  41dd58:	aaa    
  41dd59:	mov    cl,0xa5
  41dd5b:	inc    DWORD PTR [edi]
  41dd5d:	fidiv  WORD PTR [esi]
  41dd5f:	sbb    al,0x3b
  41dd61:	xor    al,0xea
  41dd63:	sti    
  41dd64:	mov    ebp,0xd53a1ee
  41dd69:	jne    0x41dd0d
  41dd6b:	dec    eax
  41dd6c:	xchg   edi,eax
  41dd6d:	xor    ch,dl
  41dd6f:	add    esi,DWORD PTR [edi]
  41dd71:	jne    0x41dd47
  41dd73:	repz cmp esp,esi
  41dd76:	jmp    0x1cec45f5
  41dd7b:	mov    eax,0xb1d791f
  41dd80:	add    BYTE PTR [eax],al
  41dd82:	jmp    0x315c1467
  41dd87:	fld    QWORD PTR [edx+0x2a230f18]
  41dd8d:	add    al,0xb0
  41dd8f:	out    dx,al
  41dd90:	add    BYTE PTR [ecx+0x1d],dh
  41dd93:	jne    0x41de0a
  41dd95:	shl    BYTE PTR [edi+0x4851f4e6],1
  41dd9b:	jo     0x41dd98
  41dd9d:	pop    esi
  41dd9e:	mov    bh,0xe6
  41dda0:	hlt    
  41dda1:	inc    ecx
  41dda2:	adc    BYTE PTR [eax-0x5],dh
  41dda5:	dec    esi
  41dda6:	push   es
  41dda7:	mov    ah,0x5b
  41dda9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddaa:	ins    DWORD PTR es:[edi],dx
  41ddab:	jnp    0x41dd6b
  41ddad:	icebp  
  41ddae:	xor    al,0xac
  41ddb0:	clc    
  41ddb1:	mov    cl,0x74
  41ddb3:	xor    al,0x39
  41ddb5:	mov    eax,gs
  41ddb7:	out    0x5,al
  41ddb9:	popa   
  41ddba:	enter  0x40e7,0xe9
  41ddbe:	test   BYTE PTR [ecx],cl
  41ddc0:	imul   ebp,ecx,0x8300f423
  41ddc6:	cmp    cl,BYTE PTR ds:0x7168448e
  41ddcc:	sti    
  41ddcd:	(bad)  
  41ddce:	popf   
  41ddcf:	or     ebp,DWORD PTR [edx]
  41ddd1:	mul    dl
  41ddd3:	mov    ah,0xc4
  41ddd5:	fnstsw WORD PTR [edi+0x3dad7ab3]
  41dddb:	hlt    
  41dddc:	das    
  41dddd:	ret    0xf618
  41dde0:	xchg   esp,eax
  41dde1:	cmp    ch,bl
  41dde3:	pop    ebx
  41dde4:	xor    DWORD PTR [eax],edi
  41dde6:	add    BYTE PTR [eax],al
  41dde8:	xor    al,0x34
  41ddea:	xor    BYTE PTR [ecx+0x6ce50dfc],ch
  41ddf0:	dec    eax
  41ddf1:	pop    esp
  41ddf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddf3:	push   0x7f
  41ddf5:	aas    
  41ddf6:	test   al,0x82
  41ddf8:	call   0xe07bc2f2
  41ddfd:	cmc    
  41ddfe:	nop
  41ddff:	cmp    DWORD PTR [esi],eax
  41de01:	add    eax,0x732eed67
  41de06:	dec    esi
  41de07:	cmp    cl,al
  41de09:	mov    ch,0x54
  41de0b:	add    BYTE PTR [ecx-0x46af035f],bh
  41de11:	sub    cl,BYTE PTR [ecx]
  41de13:	(bad)  
  41de14:	arpl   ax,cx
  41de16:	aas    
  41de17:	add    BYTE PTR [esi],bl
  41de19:	aaa    
  41de1a:	(bad)  
  41de1b:	adc    eax,0x414626
  41de20:	xchg   ebx,eax
  41de21:	js     0x41de91
  41de23:	setnp  BYTE PTR [ebx]
  41de26:	cmc    
  41de27:	call   0x3e7bc3
  41de2c:	test   BYTE PTR [ebp-0x1e],dh
  41de2f:	js     0x41de6a
  41de31:	mov    eax,ds:0x9ab3fffc
  41de36:	xchg   BYTE PTR [ebp+0x22],al
  41de39:	or     cl,ch
  41de3b:	cdq    
  41de3c:	adc    eax,0xe84fca1
  41de41:	sub    al,0x11
  41de43:	push   DWORD PTR [ebx-0x19ea0332]
  41de49:	inc    ebp
  41de4a:	inc    ecx
  41de4b:	add    BYTE PTR [eax],al
  41de4d:	add    BYTE PTR [ebp-0x60],cl
  41de50:	cld    
  41de51:	je     0x41de1f
  41de53:	jecxz  0x41de4f
  41de55:	(bad)  
  41de56:	xor    ebx,DWORD PTR [ebx+0x46563588]
  41de5c:	inc    ecx
  41de5d:	add    BYTE PTR [ecx-0x798a0378],bl
  41de63:	lahf   
  41de64:	aad    0xeb
  41de66:	test   eax,0x15ec8a09
  41de6b:	xor    cl,BYTE PTR [ecx]
  41de6d:	sub    DWORD PTR [edx+0x72],0x38e0001
  41de74:	push   ebx
  41de75:	push   edi
  41de76:	ins    DWORD PTR es:[edi],dx
  41de77:	jbe    0x41dea9
  41de79:	div    BYTE PTR [esi-0xf]
  41de7c:	inc    ecx
  41de7d:	call   FWORD PTR [ecx-0x7b8b4447]
  41de83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de84:	cmp    eax,DWORD PTR [edi+esi*1]
  41de87:	pop    ebp
  41de88:	(bad)  
  41de89:	jmp    DWORD PTR [edi]
  41de8b:	dec    ecx
  41de8c:	adc    BYTE PTR [ecx+0x18a6de2f],cl
  41de92:	lds    esp,FWORD PTR [esi-0x7e]
  41de95:	cmc    
  41de96:	stos   DWORD PTR es:[edi],eax
  41de97:	pop    edi
  41de98:	call   0x789f7faa
  41de9d:	out    dx,eax
  41de9e:	lods   al,BYTE PTR ds:[esi]
  41de9f:	test   al,0xf7
  41dea1:	out    0x90,eax
  41dea3:	popf   
  41dea4:	lods   al,BYTE PTR ds:[esi]
  41dea5:	cld    
  41dea6:	mov    edx,0xb2da331b
  41deab:	or     DWORD PTR [ebx],esi
  41dead:	add    al,0x45
  41deaf:	sbb    ebx,DWORD PTR [ecx-0x48ffff8e]
  41deb5:	mov    al,0xfb
  41deb7:	jmp    FWORD PTR [ebx+0x60]
  41deba:	cmp    BYTE PTR ds:0xfcaea74c,0x6a
  41dec1:	arpl   WORD PTR [eax+0x7d],di
  41dec4:	sub    eax,DWORD PTR [ebx+0x66]
  41dec7:	inc    ecx
  41dec8:	ror    BYTE PTR [edx+0x79],1
  41decb:	xlat   BYTE PTR ds:[ebx]
  41decc:	mov    dl,0x26
  41dece:	xor    al,0xe0
  41ded0:	mov    dl,0xe0
  41ded2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ded3:	cli    
  41ded4:	mov    eax,0xbf684e72
  41ded9:	icebp  
  41deda:	aas    
  41dedb:	add    BYTE PTR [ecx-0x68],dh
  41dede:	cld    
  41dedf:	call   FWORD PTR [eax-0x6703a76e]
  41dee5:	xlat   BYTE PTR ds:[ebx]
  41dee6:	les    esi,FWORD PTR [ebx+0x48]
  41dee9:	xor    dl,BYTE PTR [ebx+ecx*4-0x4e]
  41deed:	sub    DWORD PTR [ecx-0x62b47f04],0xfffffffd
  41def4:	int    0xb2
  41def6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def7:	xor    DWORD PTR [edi+0x2f],0xffffffe2
  41defb:	sub    BYTE PTR [ecx],0x86
  41defe:	not    BYTE PTR [ebx+0x71f33477]
  41df04:	cwde   
  41df05:	add    al,0x6d
  41df07:	or     DWORD PTR [eax+0x6f],0x5bf8ab92
  41df0e:	shr    BYTE PTR [ecx+0x41717143],0x2a
  41df15:	mov    edi,0xac64
  41df1a:	sub    eax,0x1f547271
  41df1f:	int    0x3d
  41df21:	stos   DWORD PTR es:[edi],eax
  41df22:	and    eax,DWORD PTR ds:0x715d8352
  41df28:	pop    edx
  41df29:	jle    0x41dfa0
  41df2b:	inc    ecx
  41df2c:	mov    bl,0x49
  41df2e:	outs   dx,BYTE PTR ds:[esi]
  41df2f:	jnp    0x41df58
  41df31:	cld    
  41df32:	add    BYTE PTR [eax],cl
  41df34:	outs   dx,DWORD PTR ds:[esi]
  41df35:	cwde   
  41df36:	imul   eax,DWORD PTR ds:0x343ba07f,0xe84becea
  41df40:	loop   0x41df37
  41df42:	mov    al,ds:0x3704ca5a
  41df47:	xor    al,0xb7
  41df49:	sbb    eax,0x11130a37
  41df4e:	das    
  41df4f:	dec    edx
  41df50:	stos   BYTE PTR es:[edi],al
  41df51:	add    esi,DWORD PTR [esi+0x5a7cf577]
  41df57:	xor    ebp,DWORD PTR [edi+0x43]
  41df5a:	aas    
  41df5b:	mov    edi,0x471ef8a3
  41df60:	popa   
  41df61:	inc    edx
  41df62:	cmp    BYTE PTR [esi*2-0x4f48d4ae],cl
  41df69:	das    
  41df6a:	das    
  41df6b:	mov    bh,0xb7
  41df6d:	xor    BYTE PTR [edx],dh
  41df6f:	scas   al,BYTE PTR es:[edi]
  41df70:	jne    0x41dfa1
  41df72:	div    DWORD PTR [ebx]
  41df74:	test   ebx,0xa814bee6
  41df7a:	push   es
  41df7b:	fiadd  WORD PTR [eax]
  41df7d:	fadd   QWORD PTR [eax]
  41df7f:	add    dl,bh
  41df81:	pop    ebx
  41df82:	push   ds
  41df83:	out    0x3b,eax
  41df85:	xor    al,0x8e
  41df87:	aaa    
  41df88:	hlt    
  41df89:	fnstsw WORD PTR [ecx+eax*2]
  41df8c:	into   
  41df8d:	pop    es
  41df8e:	cmp    ebp,DWORD PTR [ebx+ecx*4-0x1c]
  41df92:	sbb    BYTE PTR [edx+ebp*2-0x1b],ah
  41df96:	add    eax,DWORD PTR [ebx-0x58]
  41df99:	in     al,0x40
  41df9b:	jmp    0x64908fc9
  41dfa0:	xchg   DWORD PTR [eax+0x4e],esi
  41dfa3:	add    ecx,DWORD PTR [edi]
  41dfa5:	push   cs
  41dfa6:	jmp    0xfbb1170f
  41dfab:	jb     0x41e024
  41dfad:	cmp    al,0x88
  41dfaf:	hlt    
  41dfb0:	and    al,0x46
  41dfb2:	inc    ecx
  41dfb3:	jmp    0xe9fd993b
  41dfb8:	xor    al,0x34
  41dfba:	fldcw  WORD PTR [bx-0x48]
  41dfbe:	mov    dl,0xe9
  41dfc0:	xor    al,0x34
  41dfc2:	push   ecx
  41dfc3:	pop    esp
  41dfc4:	mov    dh,0x74
  41dfc6:	add    cl,ch
  41dfc8:	xor    al,0x4
  41dfca:	cld    
  41dfcb:	cmp    ch,BYTE PTR [edx+esi*1]
  41dfce:	add    ch,cl
  41dfd0:	xor    al,0xbb
  41dfd2:	and    DWORD PTR [edi],0x34
  41dfd5:	xor    al,0x1
  41dfd7:	cdq    
  41dfd8:	aas    
  41dfd9:	mov    ecx,0x3434e9cf
  41dfde:	push   ecx
  41dfdf:	test   BYTE PTR [edx+0x148aba],0x0
  41dfe6:	cmp    esi,DWORD PTR [ecx+eax*1]
  41dfe9:	push   0x77
  41dfeb:	inc    edi
  41dfec:	mov    eax,0x13435e5
  41dff1:	bound  esi,QWORD PTR [edx-0x46]
  41dff4:	xchg   ebx,eax
  41dff5:	mov    eax,ds:0x13434
  41dffa:	or     ebp,DWORD PTR [ebx-0x7a24e891]
  41e000:	outs   dx,BYTE PTR ds:[esi]
  41e001:	pop    es
  41e002:	in     al,0xc3
  41e004:	outs   dx,DWORD PTR ds:[esi]
  41e005:	inc    eax
  41e006:	dec    esi
  41e007:	push   0xfee352bb
  41e00c:	or     BYTE PTR [edx-0x3b],dl
  41e00f:	mov    bl,ah
  41e011:	xchg   esi,eax
  41e012:	pop    ebx
  41e013:	xor    al,BYTE PTR [ecx]
  41e015:	(bad)  
  41e016:	loopne 0x41e08e
  41e018:	add    BYTE PTR [eax],al
  41e01a:	dec    esi
  41e01b:	lock ror BYTE PTR [ebp+0x8889],0x1e
  41e023:	out    dx,al
  41e024:	ret    0x974
  41e027:	out    dx,al
  41e028:	shl    DWORD PTR [ebp+0x9],1
  41e02b:	loope  0x41dfbc
  41e02d:	je     0x41e00d
  41e02f:	xor    dh,BYTE PTR [edx]
  41e031:	ror    ah,0xe5
  41e034:	dec    esi
  41e035:	or     BYTE PTR [edi+ebp*8+0x6de3e8d0],bh
  41e03c:	cli    
  41e03d:	jmp    DWORD PTR [ebx-0x16]
  41e040:	fiadd  WORD PTR ds:0xc38a32de
  41e046:	add    ebp,0xffffffd3
  41e049:	add    eax,0x32ce0000
  41e04e:	or     cl,0xaa
  41e051:	inc    ebx
  41e052:	adc    dl,0xab
  41e055:	xor    esi,DWORD PTR [edi+0xf2aa94]
  41e05b:	xor    ecx,DWORD PTR [esi]
  41e05d:	push   es
  41e05e:	mov    BYTE PTR [ebp-0x5a],dl
  41e061:	or     BYTE PTR [edx-0xbc92d],cl
  41e067:	add    BYTE PTR [esi-0x761f7b11],cl
  41e06d:	xor    al,BYTE PTR [ecx]
  41e06f:	mov    DWORD PTR [eax],ebx
  41e071:	xchg   esi,eax
  41e072:	add    al,0x0
  41e074:	aaa    
  41e075:	pop    ebp
  41e076:	outs   dx,DWORD PTR ds:[esi]
  41e077:	(bad)  
  41e078:	fst    QWORD PTR [ebx+0x6a3703c5]
  41e07e:	mov    edi,0x1b288738
  41e083:	or     eax,0x392152a0
  41e088:	outs   dx,DWORD PTR ds:[esi]
  41e089:	sub    BYTE PTR [ebx],ah
  41e08b:	push   esi
  41e08c:	and    al,0xcf
  41e08e:	test   dh,dh
  41e090:	pop    es
  41e091:	dec    eax
  41e092:	push   ss
  41e093:	or     eax,0x81031280
  41e098:	ds inc esp
  41e09a:	xor    DWORD PTR [ebx],eax
  41e09c:	mov    ah,0xb3
  41e09e:	inc    edi
  41e09f:	jae    0x41e0db
  41e0a1:	inc    ecx
  41e0a2:	add    DWORD PTR [eax+0x34],ebx
  41e0a5:	retf   
  41e0a6:	push   esp
  41e0a7:	or     eax,0x567251e8
  41e0ac:	pop    es
  41e0ad:	jle    0x41e033
  41e0af:	clc    
  41e0b0:	add    BYTE PTR [eax],al
  41e0b2:	ds xchg bh,dh
  41e0b5:	add    BYTE PTR [ecx],al
  41e0b7:	fldcw  WORD PTR [ebx]
  41e0b9:	out    dx,eax
  41e0ba:	out    0xf2,eax
  41e0bc:	fisttp WORD PTR [edx-0x7ede49a2]
  41e0c2:	in     al,dx
  41e0c3:	pop    eax
  41e0c4:	xor    BYTE PTR [eax],cl
  41e0c6:	xor    al,0x2d
  41e0c8:	jae    0x41e13d
  41e0ca:	out    0x14,al
  41e0cc:	popf   
  41e0cd:	or     al,0xaa
  41e0cf:	je     0x41e059
  41e0d1:	gs mov ah,0x12
  41e0d4:	sti    
  41e0d5:	je     0x41e113
  41e0d7:	pop    edx
  41e0d8:	mov    cl,0x8a
  41e0da:	dec    ebx
  41e0db:	dec    esp
  41e0dc:	push   edi
  41e0dd:	xor    ch,0x59
  41e0e0:	pushf  
  41e0e1:	les    ecx,FWORD PTR [esi*4+0x5a23c67a]
  41e0e8:	test   bh,al
  41e0ea:	ss aam 0xf0
  41e0ed:	pop    ebp
  41e0ee:	je     0x41e124
  41e0f0:	push   eax
  41e0f1:	cld    
  41e0f2:	mov    ecx,0x9c34235
  41e0f7:	pusha  
  41e0f8:	mov    ch,0x5
  41e0fa:	aaa    
  41e0fb:	xor    al,0x44
  41e0fd:	cmp    DWORD PTR ds:0x3743ae54,0x34
  41e104:	pop    ss
  41e105:	push   ecx
  41e106:	mov    esi,0x61980da0
  41e10b:	ins    DWORD PTR es:[edi],dx
  41e10c:	jmp    0x89eee35e
  41e111:	mov    ebx,0x9c5f33f7
  41e116:	add    BYTE PTR [eax],al
  41e118:	jge    0x41e10b
  41e11a:	jmp    0x1600ed4f
  41e11f:	loopne 0x41e143
  41e121:	pop    esp
  41e122:	gs je  0x41e158
  41e125:	ins    DWORD PTR es:[edi],dx
  41e126:	outs   dx,BYTE PTR ds:[esi]
  41e127:	mov    esp,0x9c297467
  41e12c:	fldenv [ecx+0x75afa76a]
  41e132:	mov    ecx,0x5aa1be9b
  41e137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e138:	arpl   WORD PTR [ecx+0x60afa721],si
  41e13e:	inc    ecx
  41e13f:	scas   al,BYTE PTR es:[edi]
  41e140:	sbb    eax,0xf253426d
  41e145:	inc    esi
  41e146:	push   0x13
  41e148:	ja     0x41e17e
  41e14a:	ins    DWORD PTR es:[edi],dx
  41e14b:	cdq    
  41e14c:	sbb    edx,DWORD PTR fs:[ebx+0x6e6cf082]
  41e153:	mov    cl,0xd8
  41e155:	push   ebx
  41e156:	cld    
  41e157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e158:	retf   
  41e159:	push   es
  41e15a:	adc    edx,DWORD PTR [ecx]
  41e15c:	lahf   
  41e15d:	inc    ecx
  41e15e:	stos   BYTE PTR es:[edi],al
  41e15f:	add    ecx,DWORD PTR [ebp+0x38]
  41e162:	xchg   edx,eax
  41e163:	adc    ebp,DWORD PTR [eax]
  41e165:	hlt    
  41e166:	jmp    0x138d5e3
  41e16b:	jmp    0xb2cb3d74
  41e170:	shr    DWORD PTR [edi+0x2f],1
  41e173:	mov    al,0x32
  41e175:	mov    ch,0x48
  41e177:	in     eax,0xb4
  41e179:	test   al,0x24
  41e17b:	fld    DWORD PTR [eax]
  41e17d:	add    BYTE PTR [ebx],bh
  41e17f:	xor    al,0x1
  41e181:	jmp    0x4c2f8ce
  41e186:	sub    ecx,DWORD PTR [eax-0x19cc16c1]
  41e18c:	sbb    bl,BYTE PTR [edx]
  41e18e:	ret    
  41e18f:	xor    BYTE PTR [esi-0x16fc6e52],ch
  41e195:	mov    ds:0x36fb6cd9,eax
  41e19a:	nop
  41e19b:	inc    ecx
  41e19c:	cmp    ebx,edi
  41e19e:	hlt    
  41e19f:	xor    eax,DWORD PTR [eax+0x2e09191]
  41e1a5:	push   ds
  41e1a6:	rcl    DWORD PTR [ebx-0x45],cl
  41e1a9:	jmp    0x149ceae2
  41e1ae:	ins    BYTE PTR es:[edi],dx
  41e1af:	jmp    0x41e175
  41e1b1:	lea    esi,[ebx]
  41e1b3:	xor    al,0x1
  41e1b5:	sub    ecx,DWORD PTR [esp+ebp*2]
  41e1b8:	push   esp
  41e1b9:	jb     0x41e15b
  41e1bb:	cli    
  41e1bc:	push   ecx
  41e1bd:	mov    edx,0xd4fc0172
  41e1c2:	add    BYTE PTR ds:0x963351d8,ah
  41e1c8:	sti    
  41e1c9:	ds ins DWORD PTR es:[edi],dx
  41e1cb:	pop    ebx
  41e1cc:	aaa    
  41e1cd:	cmp    ch,cl
  41e1cf:	mov    bh,0x92
  41e1d1:	jmp    0x2972160a
  41e1d6:	mov    ah,0xee
  41e1d8:	or     al,0xe8
  41e1da:	rol    esi,0xc0
  41e1dd:	mov    eax,ds:0x6af48bb5
  41e1e2:	add    BYTE PTR [eax],al
  41e1e4:	hlt    
  41e1e5:	cmp    ecx,DWORD PTR [eax+eax*1]
  41e1e8:	or     DWORD PTR [ecx+0x38],ebp
  41e1eb:	ret    
  41e1ec:	and    bl,BYTE PTR [eax]
  41e1ee:	jmp    0xfcd4c691
  41e1f3:	mov    edi,DWORD PTR [esi]
  41e1f5:	call   0x8597da48
  41e1fa:	outs   dx,DWORD PTR ds:[esi]
  41e1fb:	imul   ebp,DWORD PTR ds:0x6a5d8291,0x5f
  41e202:	sbb    eax,0x54e2b7e
  41e207:	lea    esp,[eax]
  41e209:	xor    al,0x5a
  41e20b:	sub    BYTE PTR [ebx],0x6c
  41e20e:	cli    
  41e20f:	mov    dl,BYTE PTR [esi+0x1a]
  41e212:	adc    DWORD PTR [ebx+0x4d],edx
  41e215:	lods   al,BYTE PTR ds:[esi]
  41e216:	dec    edx
  41e217:	push   edx
  41e218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e219:	xchg   ebp,eax
  41e21a:	cmp    edi,edi
  41e21c:	test   eax,0x7d03fa35
  41e221:	int    0x11
  41e223:	push   0x3e
  41e225:	mov    ah,0xba
  41e227:	or     BYTE PTR [edi+0x6],cl
  41e22a:	jmp    0xfcd1d700
  41e22f:	adc    ecx,0x3f
  41e232:	add    dl,0xfe
  41e235:	(bad)  
  41e236:	ds cld 
  41e238:	test   DWORD PTR [ebx],esp
  41e23a:	std    
  41e23b:	sbb    DWORD PTR [esi+0x68],0x38
  41e23f:	push   cs
  41e240:	jmp    0xd13:0x8ec030ad
  41e247:	add    DWORD PTR [eax],eax
  41e249:	add    cl,dl
  41e24b:	(bad)  
  41e24c:	outs   dx,BYTE PTR ds:[esi]
  41e24d:	clc    
  41e24e:	fnstcw WORD PTR [ecx-0x76d1fa45]
  41e254:	sti    
  41e255:	(bad)  
  41e256:	mov    esi,0x26086e8f
  41e25b:	arpl   WORD PTR ds:0x6e9129ff,di
  41e261:	clc    
  41e262:	aaa    
  41e263:	xlat   BYTE PTR ds:[ebx]
  41e264:	int3   
  41e265:	out    0x5a,eax
  41e267:	xchg   DWORD PTR [esp+edi*8+0x3a4e4509],esp
  41e26e:	test   al,0x69
  41e270:	inc    esp
  41e271:	pop    esi
  41e272:	lods   eax,DWORD PTR ds:[esi]
  41e273:	sbb    eax,0x5475c74a
  41e278:	call   DWORD PTR [edx-0x44]
  41e27b:	cmp    BYTE PTR [esi-0x15],0x8b
  41e27f:	pop    esi
  41e280:	(bad)  
  41e281:	push   DWORD PTR [ecx+eax*2-0x321eaefb]
  41e288:	inc    ch
  41e28a:	cli    
  41e28b:	test   eax,0x854b72ff
  41e290:	(bad)  
  41e291:	fsub   QWORD PTR [ecx-0x5f]
  41e294:	dec    edi
  41e295:	call   0xfce7fe55
  41e29a:	mov    esi,0xc2bf7a59
  41e29f:	push   ecx
  41e2a0:	icebp  
  41e2a1:	mov    edi,0xffff2a4e
  41e2a6:	aaa    
  41e2a7:	xchg   ebx,eax
  41e2a8:	cmp    dh,ch
  41e2aa:	ss jmp 0x41eaea
  41e2b0:	ss pop edi
  41e2b2:	dec    esi
  41e2b3:	mov    ebp,edx
  41e2b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2b6:	mov    ds:0xf4b418fc,al
  41e2bb:	lods   al,BYTE PTR ds:[esi]
  41e2bc:	adc    bl,dl
  41e2be:	jb     0x41e242
  41e2c0:	dec    edi
  41e2c1:	or     BYTE PTR [ebp+0xe7367fc],ah
  41e2c7:	and    eax,0x34a45b37
  41e2cc:	fist   WORD PTR [ecx-0x1b]
  41e2cf:	cld    
  41e2d0:	call   0xf9caaaba
  41e2d5:	retf   
  41e2d6:	xchg   edi,eax
  41e2d7:	icebp  
  41e2d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2d9:	sbb    ah,BYTE PTR [ebp-0x61cb137d]
  41e2df:	cmp    eax,0x9b29efbc
  41e2e4:	jmp    0x8cb5:0x52a41368
  41e2eb:	ret    
  41e2ec:	mov    al,0xe5
  41e2ee:	xlat   BYTE PTR ds:[ebx]
  41e2ef:	jbe    0x41e2e6
  41e2f1:	jae    0x41e28c
  41e2f3:	sbb    eax,DWORD PTR [ebp+0x11]
  41e2f6:	jmp    0x4db2:0x2219a03
  41e2fd:	imul   esp,edx,0xbeb0608e
  41e303:	sbb    BYTE PTR [eax],ah
  41e305:	bound  ebp,QWORD PTR [esp+ecx*1]
  41e308:	xor    eax,0x3b2deee0
  41e30d:	mov    bh,0x2c
  41e30f:	pushf  
  41e310:	clc    
  41e311:	fcmovnbe st,st(6)
  41e313:	jmp    0xdbb2:0x69600000
  41e31a:	jae    0x41e30b
  41e31c:	mov    cl,0xff
  41e31e:	push   eax
  41e31f:	imul   ebp,ecx,0x9b26fcab
  41e325:	mov    ds:0x499b8cae,eax
  41e32a:	das    
  41e32b:	xor    bl,bl
  41e32d:	xchg   ebx,esp
  41e32f:	xor    ebp,edx
  41e331:	add    esi,DWORD PTR [ebx-0x31781574]
  41e337:	xor    ch,dl
  41e339:	add    ebp,DWORD PTR [esi+0x50f66e1e]
  41e33f:	xor    al,0x75
  41e341:	mov    DWORD PTR [ecx+ebp*2],edi
  41e344:	pop    edx
  41e345:	mov    ds:0x873b6970,eax
  41e34a:	add    BYTE PTR [ebx],dh
  41e34c:	aad    0xb
  41e34e:	mov    esi,0xeba2c9ae
  41e353:	push   0x6bb60c4e
  41e358:	add    bl,ch
  41e35a:	aas    
  41e35b:	inc    esp
  41e35c:	mov    BYTE PTR [eax+ebp*2-0x6a0a6244],ah
  41e363:	addr16 sti 
  41e365:	jmp    0x3288:0x2dd7db7c
  41e36c:	xor    BYTE PTR [edx],dh
  41e36e:	jecxz  0x41e39e
  41e370:	fadd   QWORD PTR [edi]
  41e372:	aam    0x33
  41e374:	rcl    BYTE PTR [ebx-0xeba4ec8],0x0
  41e37b:	add    bh,al
  41e37d:	cmc    
  41e37e:	clc    
  41e37f:	cdq    
  41e380:	pop    esp
  41e381:	inc    ecx
  41e382:	and    al,0xe9
  41e384:	xor    al,0x67
  41e386:	xor    edx,ecx
  41e388:	shr    DWORD PTR [esp+edi*8],cl
  41e38b:	(bad)  
  41e38c:	stos   BYTE PTR es:[edi],al
  41e38d:	add    BYTE PTR [edx+esi*4-0x17ae4fbb],0x34
  41e395:	xor    al,0x8e
  41e397:	xor    BYTE PTR fs:[edi-0x5],ah
  41e39b:	mov    dh,0x24
  41e39d:	shl    BYTE PTR [bp+si-0x41],cl
  41e3a1:	cmp    al,0xfc
  41e3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3a4:	xchg   ebp,eax
  41e3a5:	fcmovnb st,st(0)
  41e3a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3a8:	adc    dh,BYTE PTR [eax]
  41e3aa:	mov    ch,BYTE PTR [ebx+ebx*4]
  41e3ad:	mov    ebp,0xdc649145
  41e3b2:	pop    ss
  41e3b3:	into   
  41e3b4:	xor    al,0x34
  41e3b6:	cld    
  41e3b7:	mov    dh,0xcc
  41e3b9:	lahf   
  41e3ba:	cmp    al,0x76
  41e3bc:	aad    0xbd
  41e3be:	fsub   DWORD PTR [ebp-0x2f]
  41e3c1:	cmp    BYTE PTR [ebp+0x1343209],al
  41e3c7:	pop    esi
  41e3c8:	push   DWORD PTR [ebx-0x25cb56f2]
  41e3ce:	add    al,0x60
  41e3d0:	jg     0x41e43e
  41e3d2:	lea    eax,[eax]
  41e3d4:	fwait
  41e3d5:	retf   
  41e3d6:	dec    ebx
  41e3d7:	push   0xfffb5ad4
  41e3dc:	and    DWORD PTR [edx+0x93e3],ecx
  41e3e2:	loop   0x41e376
  41e3e4:	cld    
  41e3e5:	mov    dh,BYTE PTR [esi-0x51]
  41e3e8:	fmul   DWORD PTR [edi]
  41e3ea:	pop    edx
  41e3eb:	(bad)  
  41e3ec:	sti    
  41e3ed:	dec    esi
  41e3ef:	int    0x3e
  41e3f1:	or     BYTE PTR [esi+0x2b8d423f],dl
  41e3f7:	xchg   edi,eax
  41e3f8:	jecxz  0x41e46b
  41e3fa:	sti    
  41e3fb:	xchg   ecx,eax
  41e3fc:	cld    
  41e3fd:	push   0xffffff88
  41e3ff:	mov    dh,0xc5
  41e401:	push   eax
  41e402:	mov    dh,0x67
  41e404:	and    al,0x0
  41e406:	sahf   
  41e407:	xchg   esp,eax
  41e408:	xor    al,0xe8
  41e40a:	in     al,0x53
  41e40c:	cld    
  41e40d:	call   DWORD PTR [eax+ebp*4]
  41e410:	jg     0x41e3ed
  41e412:	xchg   ecx,eax
  41e413:	scas   eax,DWORD PTR es:[edi]
  41e414:	rol    DWORD PTR [eax],1
  41e416:	pop    esi
  41e417:	xor    edi,esi
  41e419:	adc    eax,0x3b630e
  41e41e:	push   ecx
  41e41f:	or     al,0xbc
  41e421:	push   0x5c
  41e423:	mov    edx,0xeec3f83e
  41e428:	clc    
  41e429:	push   eax
  41e42a:	es addr16 and al,0x0
  41e42e:	dec    esi
  41e42f:	xchg   esp,eax
  41e430:	xor    al,0xe8
  41e432:	pop    esp
  41e433:	push   esp
  41e434:	cld    
  41e435:	jmp    DWORD PTR [eax+ebp*4-0x50ee2481]
  41e43c:	test   eax,0xf3330e00
  41e441:	inc    ebp
  41e442:	push   ss
  41e443:	arpl   WORD PTR [esp+eax*4],cx
  41e446:	add    BYTE PTR [eax],al
  41e448:	pushf  
  41e449:	xor    BYTE PTR [ecx],al
  41e44b:	add    dh,ah
  41e44d:	das    
  41e44e:	cld    
  41e44f:	push   DWORD PTR [edi]
  41e451:	pop    ebp
  41e452:	mov    al,BYTE PTR [edx-0x35e07c5]
  41e458:	xchg   DWORD PTR [ebx+0x694afcff],eax
  41e45e:	out    dx,al
  41e45f:	aas    
  41e460:	aaa    
  41e461:	aam    0x43
  41e463:	clc    
  41e464:	mov    edx,0x41d191c
  41e469:	and    al,0x27
  41e46b:	xchg   DWORD PTR [ebx-0x4704fc71],esi
  41e471:	cmp    eax,0x383b828c
  41e476:	mov    ds:0x1c507fc,al
  41e47b:	and    eax,0x34a05d37
  41e480:	(bad)  
  41e481:	out    0xdb,al
  41e483:	cld    
  41e484:	nop
  41e485:	sar    BYTE PTR [esp+eax*8-0xfcab0e],cl
  41e48c:	sbb    BYTE PTR [ebx+eax*4-0x28],0x3
  41e491:	and    cl,BYTE PTR [edx+eax*2-0x7d73d391]
  41e498:	xor    esi,DWORD PTR [eax-0x60]
  41e49b:	cld    
  41e49c:	pop    es
  41e49d:	add    eax,DWORD PTR [ebx]
  41e49f:	std    
  41e4a0:	inc    edx
  41e4a1:	add    ebp,esi
  41e4a3:	aas    
  41e4a4:	aaa    
  41e4a5:	sar    DWORD PTR [edi+0x42e21173],1
  41e4ab:	clc    
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	mov    edx,0x41d139c
  41e4b3:	xchg   esp,eax
  41e4b4:	sub    DWORD PTR [edi-0x4f6ef3d],eax
  41e4ba:	sub    BYTE PTR [edi-0x17c47d76],ch
  41e4c0:	mov    al,ds:0x23387fc
  41e4c5:	and    eax,0x34a05b37
  41e4ca:	pop    ds
  41e4cb:	xor    eax,0x6603e014
  41e4d0:	outs   dx,DWORD PTR ds:[esi]
  41e4d1:	mov    ebx,0xfddd89b4
  41e4d6:	jmp    0xd024:0x64e3e1ef
  41e4dd:	add    ah,dl
  41e4df:	sbb    eax,0x65dcad52
  41e4e4:	xor    ch,BYTE PTR ds:0xabf26535
  41e4ea:	jmp    0xcfe20757
  41e4ef:	dec    eax
  41e4f0:	push   0x1e
  41e4f2:	ret    0x9d33
  41e4f5:	stc    
  41e4f6:	mov    edi,0x2499651d
  41e4fb:	aaa    
  41e4fc:	add    ebx,ecx
  41e4fe:	cwde   
  41e4ff:	jg     0x41e4b3
  41e501:	mov    al,ds:0xd001fe9b
  41e506:	dec    ebx
  41e507:	gs jmp 0xe2c3:0x70345383
  41e50f:	or     BYTE PTR [ecx+0x340000c2],dh
  41e515:	xor    al,0x3d
  41e517:	mov    ebx,DWORD PTR [ebx+esi*4-0x43]
  41e51b:	lods   al,BYTE PTR ds:[esi]
  41e51c:	imul   esp,DWORD PTR [ebp-0x17],0xf207ae32
  41e523:	xor    eax,0xf82eb902
  41e528:	mov    ecx,0xb84adff
  41e52d:	xor    ebx,DWORD PTR ds:0x99efac50
  41e533:	xor    al,0x4f
  41e535:	rcl    DWORD PTR [ebp+0xeb7339e],1
  41e53b:	hlt    
  41e53c:	sahf   
  41e53d:	push   ss
  41e53e:	xchg   edx,eax
  41e53f:	dec    ebp
  41e540:	sbb    al,0x65
  41e542:	jp     0x41e4cc
  41e544:	fcomp  st(7)
  41e546:	add    BYTE PTR [ecx+0x248e305e],bh
  41e54c:	xlat   BYTE PTR ds:[ebx]
  41e54d:	hlt    
  41e54e:	push   0xfb6519fc
  41e553:	pop    esi
  41e554:	loopne 0x41e5a2
  41e556:	and    edx,DWORD PTR [edx]
  41e558:	shl    BYTE PTR [edi-0x7c],1
  41e55b:	sub    DWORD PTR [edi+0x4a],ecx
  41e55e:	addr16 jmp 0x41e528
  41e561:	icebp  
  41e562:	clc    
  41e563:	cdq    
  41e564:	or     al,0x3e
  41e566:	and    al,0xe9
  41e568:	xor    al,0x67
  41e56a:	xor    eax,DWORD PTR [ecx-0x3e]
  41e56d:	sub    edi,esp
  41e56f:	es scas eax,DWORD PTR es:[edi]
  41e571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e572:	je     0x41e559
  41e574:	in     eax,0xa4
  41e576:	out    0x93,eax
  41e578:	add    BYTE PTR [eax],al
  41e57a:	pop    esi
  41e57b:	xor    bl,BYTE PTR [ecx+0x2]
  41e57e:	dec    esi
  41e57f:	mov    cl,0xc9
  41e581:	jl     0x41e5da
  41e583:	mov    ecx,0x67bae1b5
  41e588:	sti    
  41e589:	add    DWORD PTR [eax+ebx*4-0x5],eax
  41e58d:	out    dx,al
  41e58e:	pop    esp
  41e58f:	xor    al,BYTE PTR [edx]
  41e591:	jmp    0x91c79eca
  41e596:	call   0x8ef:0xc639fb67
  41e59d:	cmp    eax,ecx
  41e59f:	inc    ecx
  41e5a0:	adc    edi,ebx
  41e5a2:	hlt    
  41e5a3:	xor    ecx,DWORD PTR [eax-0x3b4cd0ca]
  41e5a9:	in     eax,0xbf
  41e5ab:	pop    esi
  41e5ac:	je     0x41e592
  41e5ae:	pushf  
  41e5af:	repnz pusha 
  41e5b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5b2:	mov    eax,ds:0xa7937567
  41e5b7:	scas   eax,DWORD PTR es:[edi]
  41e5b8:	push   es
  41e5b9:	call   0x819319f2
  41e5be:	clc    
  41e5bf:	add    esp,edi
  41e5c1:	add    BYTE PTR [ecx-0x6cfbbb50],bh
  41e5c7:	ja     0x41e54f
  41e5c9:	test   esi,esp
  41e5cb:	sar    esp,0xff
  41e5ce:	cs cmp eax,0xd20ae82a
  41e5d4:	cld    
  41e5d5:	inc    DWORD PTR [ebp-0x6f7afab6]
  41e5db:	dec    ebx
  41e5dc:	add    al,0xe8
  41e5de:	add    BYTE PTR [eax],al
  41e5e0:	loop   0x41e5f9
  41e5e2:	(bad)  
  41e5e3:	dec    DWORD PTR [ebp+0x1a]
  41e5e6:	add    eax,0x97a4f00
  41e5eb:	add    esi,ebx
  41e5ed:	aaa    
  41e5ee:	push   esi
  41e5ef:	call   0x3eb1f8
  41e5f4:	fnsave [edi+0x3b]
  41e5f7:	pop    edi
  41e5f8:	js     0x41e618
  41e5fa:	(bad)
  41e5fe:	jmp    0xfd0451e4
  41e603:	mov    esp,DWORD PTR [ecx]
  41e605:	cmp    eax,DWORD PTR [eax-0x798edd0a]
  41e60b:	inc    edi
  41e60c:	xchg   esi,eax
  41e60d:	daa    
  41e60e:	jmp    0xfd04a502
  41e613:	mov    ebx,DWORD PTR [esi-0x45]
  41e616:	cmc    
  41e617:	je     0x41e5b2
  41e619:	mov    ch,0xfd
  41e61b:	call   DWORD PTR [edx]
  41e61d:	(bad)  
  41e61e:	push   ebp
  41e61f:	dec    DWORD PTR ds:0x395fe368
  41e625:	sar    esp,0xff
  41e628:	pusha  
  41e629:	scas   al,BYTE PTR es:[edi]
  41e62a:	or     BYTE PTR ds:[esi-0x2f],dh
  41e62e:	xor    eax,0xe92a99ff
  41e633:	test   eax,0x8bfcc060
  41e638:	and    esi,DWORD PTR [eax]
  41e63a:	xor    dh,0x37
  41e63d:	inc    ecx
  41e63e:	ja     0x41e5c8
  41e640:	lods   al,BYTE PTR ds:[esi]
  41e641:	pop    ebp
  41e642:	cmp    ah,0x0
  41e645:	add    BYTE PTR [ebx+0xf349c68],ch
  41e64b:	or     ebx,edx
  41e64d:	cld    
  41e64e:	adc    BYTE PTR [edx-0x53],al
  41e651:	lea    eax,[ecx-0x2e]
  41e654:	popf   
  41e655:	xchg   BYTE PTR [ebp+ebx*2+0x1f81ca6],al
  41e65c:	sahf   
  41e65d:	push   eax
  41e65e:	mov    ah,BYTE PTR [ebx-0x5d430e78]
  41e664:	out    dx,eax
  41e665:	push   esp
  41e666:	lods   al,BYTE PTR ds:[esi]
  41e667:	jp     0x41e65c
  41e669:	xor    bh,dh
  41e66b:	in     eax,0xcb
  41e66d:	xor    ah,ch
  41e66f:	hlt    
  41e670:	scas   eax,DWORD PTR es:[edi]
  41e671:	cmp    eax,ecx
  41e673:	adc    DWORD PTR [edi+edi*4-0x357774b5],eax
  41e67a:	je     0x41e6c1
  41e67c:	les    edi,FWORD PTR [ecx]
  41e67e:	mov    al,0x49
  41e680:	test   BYTE PTR [edi-0x277bb6de],bh
  41e686:	sub    ebx,DWORD PTR [ebx-0x78]
  41e689:	inc    edx
  41e68a:	aaa    
  41e68b:	into   
  41e68c:	sbb    al,0x14
  41e68e:	mul    edx
  41e690:	repnz push edx
  41e692:	pop    ds
  41e693:	mov    ds:0x7373f07,al
  41e698:	add    eax,0x9c700ae8
  41e69d:	cld    
  41e69e:	mov    edx,0xb404138c
  41e6a3:	cli    
  41e6a4:	hlt    
  41e6a5:	jmp    eax
  41e6a7:	cmp    DWORD PTR ds:0x27000073,eax
  41e6ad:	out    0x14,al
  41e6af:	add    al,0xba
  41e6b1:	mov    ds:0x5c5f1b13,al
  41e6b6:	push   ds
  41e6b7:	std    
  41e6b8:	inc    eax
  41e6b9:	xor    ebp,DWORD PTR [esi-0x3d]
  41e6bc:	les    esi,FWORD PTR [edi]
  41e6be:	xlat   BYTE PTR ds:[ebx]
  41e6bf:	ret    
  41e6c0:	pop    ds
  41e6c1:	inc    edx
  41e6c2:	pop    edi
  41e6c3:	adc    al,0x33
  41e6c5:	mov    bh,0x93
  41e6c7:	pop    ss
  41e6c8:	xor    al,0x4c
  41e6ca:	mov    ecx,0x66621a3c
  41e6cf:	and    al,0x3b
  41e6d1:	xor    al,0x69
  41e6d3:	les    edi,FWORD PTR [esi]
  41e6d5:	xor    ebp,edx
  41e6d7:	add    ebp,DWORD PTR [edx+0x4c]
  41e6da:	sti    
  41e6db:	data16 sti 
  41e6dd:	popa   
  41e6de:	push   ss
  41e6df:	les    esi,FWORD PTR [eax]
  41e6e1:	add    DWORD PTR [esi+edi*1-0x774b8a72],esi
  41e6e8:	int3   
  41e6e9:	mov    ch,0x4d
  41e6eb:	fwait
  41e6ec:	pop    ecx
  41e6ed:	push   eax
  41e6ee:	add    eax,0x9734370b
  41e6f3:	xor    eax,0xd0e1e7be
  41e6f8:	sbb    BYTE PTR [esp+ebp*8],0x34
  41e6fc:	sub    al,bh
  41e6fe:	sub    DWORD PTR [ecx],ebp
  41e700:	xor    eax,0x4606b6fd
  41e705:	jbe    0x41e740
  41e707:	sbb    eax,DWORD PTR [edi]
  41e709:	dec    esp
  41e70a:	xor    edi,DWORD PTR [edi]
  41e70c:	aaa    
  41e70d:	xor    al,0x71
  41e70f:	inc    edi
  41e710:	add    BYTE PTR [eax],al
  41e712:	pop    ebx
  41e713:	inc    eax
  41e714:	ins    DWORD PTR es:[edi],dx
  41e715:	ret    
  41e716:	add    eax,0xfb9cb748
  41e71b:	or     edx,edx
  41e71d:	ret    
  41e71e:	inc    ebp
  41e71f:	popa   
  41e720:	fimul  DWORD PTR [edi+0x3f34017b]
  41e726:	mov    esi,0x34c62c57
  41e72b:	xor    al,0x89
  41e72d:	mov    eax,0x8ce9f582
  41e732:	hlt    
  41e733:	pop    ss
  41e734:	add    ecx,edi
  41e736:	mov    edi,0x392124b5
  41e73b:	xor    al,0x1
  41e73d:	je     0x41e71e
  41e73f:	adc    al,0x51
  41e741:	jmp    0x1917:0x2dc43434
  41e748:	and    DWORD PTR [ebx+0x7a],edx
  41e74b:	xor    al,0xc4
  41e74d:	sub    eax,0x425b0d17
  41e752:	jp     0x41e788
  41e754:	mov    ch,BYTE PTR ds:0xf58a2517
  41e75a:	loopne 0x41e778
  41e75c:	jmp    0x176251f
  41e761:	sar    DWORD PTR [edx],1
  41e763:	popa   
  41e764:	sti    
  41e765:	jmp    0x75669c29
  41e76a:	cmp    BYTE PTR [ecx+eax*1],dh
  41e76d:	cdq    
  41e76e:	scas   eax,DWORD PTR es:[edi]
  41e76f:	mov    ah,0x24
  41e771:	cdq    
  41e772:	cmp    dh,BYTE PTR [ecx+eax*1]
  41e775:	cdq    
  41e776:	add    BYTE PTR [eax],al
  41e778:	lods   eax,DWORD PTR ds:[esi]
  41e779:	inc    ebp
  41e77a:	adc    edi,edx
  41e77c:	je     0x41e7b2
  41e77e:	or     al,0x5f
  41e780:	xor    eax,0xb9edc4b3
  41e785:	pop    eax
  41e786:	add    BYTE PTR [ebp-0x108a075d],bl
  41e78c:	jne    0x41e782
  41e78e:	and    al,0xe1
  41e790:	sahf   
  41e791:	pusha  
  41e792:	sti    
  41e793:	jmp    0xdd66e45b
  41e798:	fnstenv [eax]
  41e79a:	les    esp,FWORD PTR [ebp-0x16eab7a0]
  41e7a0:	xor    al,0x34
  41e7a2:	les    esp,FWORD PTR ds:0xe9074457
  41e7a8:	xor    al,0x34
  41e7aa:	mov    BYTE PTR ds:0x6a4857,ah
  41e7b0:	mov    ss,WORD PTR [edi+eiz*8]
  41e7b3:	add    BYTE PTR [esi-0x51],bl
  41e7b6:	aas    
  41e7b7:	and    al,0x66
  41e7b9:	mov    cl,0x3f
  41e7bb:	and    al,0x6a
  41e7bd:	xadd   DWORD PTR [eax-0x5c],esp
  41e7c1:	xor    al,0x1
  41e7c3:	push   0x134be
  41e7c8:	xchg   edi,eax
  41e7c9:	pop    ds
  41e7ca:	and    eax,0x1fdf8318
  41e7cf:	push   esp
  41e7d0:	or     eax,0x1e6a0134
  41e7d5:	and    al,0xfe
  41e7d7:	adc    eax,0x3b65e6
  41e7dc:	add    BYTE PTR [eax],al
  41e7de:	mov    ebp,0x2c48073
  41e7e3:	push   ss
  41e7e4:	test   BYTE PTR [edx+edi*1-0x8],al
  41e7e8:	call   0x1758b23
  41e7ed:	test   BYTE PTR [esi],cl
  41e7ef:	sub    al,BYTE PTR [ebp+0x133cf93]
  41e7f5:	adc    al,0x33
  41e7f8:	push   cs
  41e7f9:	test   esp,ebx
  41e7fb:	cmp    BYTE PTR [ecx],al
  41e7fd:	add    cl,ah
  41e7ff:	add    al,BYTE PTR [eax+0x24]
  41e802:	mov    es,edx
  41e804:	rcr    DWORD PTR [ebx],cl
  41e806:	pop    esi
  41e807:	ret    0x8dcb
  41e80a:	sar    BYTE PTR [edi+0x3b],cl
  41e80d:	and    ecx,DWORD PTR [edi+0x23]
  41e810:	add    BYTE PTR [bp+0x68],al
  41e814:	bnd call DWORD PTR [ecx+0x6c3836b1]
  41e81b:	repz add BYTE PTR [ebp-0x3cee8],cl
  41e822:	mov    gs,WORD PTR [edx-0x4991dbc1]
  41e828:	aas    
  41e829:	and    al,0x37
  41e82b:	or     eax,0xca88fd35
  41e830:	int    0xfc
  41e832:	sbb    al,0x8a
  41e834:	adc    BYTE PTR ds:0x3fe119c2,al
  41e83a:	out    0x71,eax
  41e83c:	lock addr16 push edi
  41e83f:	xchg   edx,eax
  41e840:	inc    ebp
  41e841:	add    BYTE PTR [eax],al
  41e843:	add    BYTE PTR [eax],bh
  41e845:	sahf   
  41e846:	ffree  st(0)
  41e848:	inc    eax
  41e849:	ftst   
  41e84b:	(bad)  
  41e84c:	sub    BYTE PTR [ebp+0x27],cl
  41e84f:	loopne 0x41e83d
  41e851:	or     DWORD PTR ds:0xeb71a389,eax
  41e857:	mov    ah,dh
  41e859:	les    eax,FWORD PTR [esi]
  41e85b:	adc    eax,0xbfd5e608
  41e860:	addr16 cmp eax,0x8367012b
  41e866:	add    BYTE PTR [eax+0x37],ch
  41e869:	dec    ebp
  41e86a:	(bad)  
  41e86b:	jg     0x41e7ee
  41e86d:	push   es
  41e86e:	in     al,dx
  41e86f:	mov    bl,0x45
  41e871:	(bad)  
  41e872:	dec    DWORD PTR [eax+0xc9631e7]
  41e878:	mov    ebx,0x370004f7
  41e87d:	mov    edi,0xd9452a7
  41e882:	call   0xbc23:0xdb90ae55
  41e889:	adc    bl,BYTE PTR [edx+0x3f5a7f12]
  41e88f:	add    BYTE PTR [esi-0x6f],bl
  41e892:	fistp  DWORD PTR [edi]
  41e894:	and    ah,BYTE PTR [ebp+0x7a]
  41e897:	cld    
  41e898:	inc    eax
  41e899:	fld    st(0)
  41e89b:	dec    DWORD PTR [eax+0x30fc7a4c]
  41e8a1:	(bad)  
  41e8a2:	pop    eax
  41e8a3:	(bad)  
  41e8a4:	js     0x41e8d9
  41e8a6:	jmp    0x3e1d:0x3d000015
  41e8ad:	loopne 0x41e8f7
  41e8af:	das    
  41e8b0:	addr16 push ebx
  41e8b2:	pusha  
  41e8b3:	pop    esi
  41e8b4:	jmp    0xda59cd45
  41e8b9:	xchg   ah,dh
  41e8bb:	pop    ss
  41e8bc:	sub    dh,BYTE PTR [ecx+eiz*8]
  41e8bf:	pop    esi
  41e8c0:	fsub   QWORD PTR [ebx]
  41e8c2:	and    eax,0x787ee9f4
  41e8c7:	out    0xdf,eax
  41e8c9:	sub    eax,0x6999cc35
  41e8ce:	(bad)  
  41e8cf:	mov    ch,0x81
  41e8d1:	out    dx,al
  41e8d2:	jg     0x41e908
  41e8d4:	jmp    0xbb08:0x82b8208c
  41e8db:	lods   eax,DWORD PTR ds:[esi]
  41e8dc:	jmp    0xdf0c1fe4
  41e8e1:	xchg   BYTE PTR [eax+ebx*1+0x26],dh
  41e8e5:	xor    al,0x61
  41e8e7:	pop    ebp
  41e8e8:	cld    
  41e8e9:	xlat   BYTE PTR ds:[ebx]
  41e8ea:	inc    esi
  41e8eb:	hlt    
  41e8ec:	jmp    0xd52a916f
  41e8f1:	xor    bh,cl
  41e8f3:	jmp    0xdfad:0xaf3702de
  41e8fa:	adc    BYTE PTR [edi+ebp*2],al
  41e8fd:	(bad)  
  41e8fe:	rcl    al,1
  41e900:	fistp  DWORD PTR [eax+0xbb4a9c3]
  41e906:	mov    dh,0xd8
  41e908:	int    0xdb
  41e90a:	mov    al,0xcb
  41e90c:	call   0x2c41e997
  41e911:	sbb    dh,dl
  41e913:	stos   DWORD PTR es:[edi],eax
  41e914:	mov    al,0x5b
  41e916:	or     bl,BYTE PTR [eax+0x307d74b4]
  41e91c:	mov    dh,0xd6
  41e91e:	in     eax,0x3
  41e920:	mov    esp,0x8ccd00f8
  41e925:	in     eax,dx
  41e926:	call   0x1761d08
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	jnp    0x41e8da
  41e92e:	inc    edx
  41e92f:	in     eax,0x31
  41e931:	sar    DWORD PTR [edi-0x20229329],0xeb
  41e938:	mov    bh,0x9d
  41e93a:	je     0x41e92f
  41e93c:	mov    ebp,0xfade84d
  41e941:	pop    edi
  41e942:	sti    
  41e943:	bound  esp,QWORD PTR [esi]
  41e945:	sub    al,0x88
  41e947:	and    eax,0xa1882557
  41e94c:	mov    dh,0x9c
  41e94e:	je     0x41e93c
  41e950:	ror    DWORD PTR [ecx+ebp*8],0x49
  41e954:	add    al,0x60
  41e956:	sti    
  41e957:	ss retf 
  41e959:	mov    edx,0xdca8862f
  41e95e:	imul   ebx
  41e960:	daa    
  41e961:	pop    ds
  41e962:	mov    BYTE PTR ds:0xd8e84117,ch
  41e968:	mov    eax,ds:0x9cf924e0
  41e96d:	rcr    BYTE PTR [esi+0x75abc05e],0xe1
  41e974:	add    BYTE PTR [eax],al
  41e976:	jl     0x41e985
  41e978:	jbe    0x41e963
  41e97a:	xor    al,0x4
  41e97c:	cld    
  41e97d:	cld    
  41e97e:	mov    BYTE PTR [esi+0x41a1e93f],al
  41e984:	in     eax,dx
  41e985:	(bad)  [esp+esi*1+0x3e]
  41e989:	jmp    0x41e9be
  41e98b:	xor    al,0x1
  41e98d:	div    BYTE PTR [eax]
  41e98f:	retf   0x1efa
  41e992:	rcr    BYTE PTR [edi+0x74],0xcd
  41e996:	test   al,0x54
  41e998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e999:	jecxz  0x41e9ce
  41e99b:	xor    al,0x30
  41e99d:	add    BYTE PTR [ecx],bh
  41e99f:	pop    DWORD PTR [edx+0x7fc589fd]
  41e9a5:	fild   DWORD PTR [ebx]
  41e9a7:	jbe    0x41e931
  41e9a9:	inc    esp
  41e9aa:	jb     0x41ea04
  41e9ac:	call   0x5365177f
  41e9b1:	mov    eax,DWORD PTR [ebx+0x40]
  41e9b4:	cmovo  ecx,DWORD PTR [esi+0xd]
  41e9b8:	mov    bh,BYTE PTR ds:0x40a252
  41e9be:	mov    ch,0x64
  41e9c0:	add    BYTE PTR [eax],al
  41e9c2:	pop    esi
  41e9c3:	and    DWORD PTR [edi+0x8],esp
  41e9c6:	mov    DWORD PTR [ebx+0x380dc6b7],eax
  41e9cc:	(bad)  
  41e9cd:	(bad)  
  41e9ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9cf:	(bad)  
  41e9d0:	jle    0x41e9bf
  41e9d2:	inc    edx
  41e9d3:	es push edx
  41e9d5:	push   0x16
  41e9d7:	ret    
  41e9d8:	cs mov esp,0xf6d00000
  41e9de:	add    bh,bh
  41e9e0:	mov    al,0xae
  41e9e2:	jmp    0x41e969
  41e9e4:	sub    BYTE PTR [ebx],0x3c
  41e9e7:	push   0xe
  41e9e9:	call   0x14b6:0xa90f003e
  41e9f0:	fnsave [edi]
  41e9f2:	add    DWORD PTR [ebp-0x35],edx
  41e9f5:	mov    ebx,0x24ce41b8
  41e9fa:	add    BYTE PTR [bx+si],dl
  41e9fd:	pop    ecx
  41e9fe:	sti    
  41e9ff:	mov    BYTE PTR [eax-0x21ffffb5],bh
  41ea05:	(bad)  
  41ea06:	mov    ah,0x8
  41ea08:	iret   
  41ea09:	aaa    
  41ea0a:	add    BYTE PTR [bx+si+0x6724],ah
  41ea0f:	add    BYTE PTR [edi+ebx*4],ah
  41ea12:	jecxz  0x41e9be
  41ea14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea15:	xor    BYTE PTR [ecx],al
  41ea17:	test   BYTE PTR [edi],dh
  41ea19:	adc    DWORD PTR es:[eax],ecx
  41ea1c:	mov    bl,0xd
  41ea1e:	adc    DWORD PTR [esp+eax*2],eax
  41ea21:	or     eax,0xd4404a7
  41ea26:	inc    eax
  41ea27:	jmp    0x5d018961
  41ea2c:	fldenv [edi-0x19f53eca]
  41ea32:	test   al,0x80
  41ea34:	pop    ebx
  41ea35:	pop    ebp
  41ea36:	mov    BYTE PTR [ebp+0x47],al
  41ea39:	push   ds
  41ea3a:	(bad)
  41ea3e:	(bad)  
  41ea3f:	inc    DWORD PTR [eax]
  41ea41:	add    BYTE PTR [edi],dh
  41ea43:	dec    ebp
  41ea44:	jp     0x41ea05
  41ea46:	cmp    cl,dl
  41ea48:	inc    WORD PTR [eax+0x4d]
  41ea4c:	or     BYTE PTR [edx+0x3b],0x3c
  41ea50:	xchg   esi,eax
  41ea51:	jne    0x41ea96
  41ea53:	inc    edi
  41ea54:	add    BYTE PTR [eax+0x1f],dl
  41ea57:	jnp    0x41ea30
  41ea59:	cld    
  41ea5a:	and    dh,dl
  41ea5c:	mov    esp,0x7b79fc82
  41ea61:	mov    ?,WORD PTR [edi]
  41ea63:	dec    ebp
  41ea64:	jmp    FWORD PTR [ecx+0x37]
  41ea67:	lds    esi,FWORD PTR [ecx+0x5b]
  41ea6a:	aaa    
  41ea6b:	dec    ebp
  41ea6c:	ss push ecx
  41ea6e:	clc    
  41ea6f:	pop    edi
  41ea70:	xchg   ebx,eax
  41ea71:	mov    bh,ch
  41ea73:	cdq    
  41ea74:	xchg   esp,eax
  41ea75:	adc    dh,bl
  41ea77:	pop    esi
  41ea78:	aas    
  41ea79:	add    BYTE PTR [edi+ecx*4+0x75805007],ch
  41ea80:	div    DWORD PTR [esi+0x77]
  41ea83:	dec    ebp
  41ea84:	sub    DWORD PTR [ecx],eax
  41ea86:	outs   dx,DWORD PTR ds:[esi]
  41ea87:	add    eax,0x21c1e65d
  41ea8c:	cs mov bl,bh
  41ea8f:	hlt    
  41ea90:	sub    DWORD PTR [edx],esi
  41ea92:	mov    al,0x33
  41ea94:	and    edx,DWORD PTR [ebp+0x21115825]
  41ea9a:	gs pop ebx
  41ea9c:	adc    al,BYTE PTR [eax-0x6b4c2081]
  41eaa2:	or     ch,BYTE PTR [esi*2-0x70ffffc1]
  41eaa9:	int    0xe9
  41eaab:	xchg   esp,eax
  41eaac:	add    eax,0x8e06022c
  41eab1:	pop    ecx
  41eab2:	jmp    0xf589:0x27dfb07f
  41eab9:	push   edi
  41eaba:	outs   dx,BYTE PTR ds:[esi]
  41eabb:	inc    esi
  41eabc:	pop    edi
  41eabd:	int    0xe8
  41eabf:	xchg   esp,eax
  41eac0:	loop   0x41eae9
  41eac2:	ret    0x994
  41eac5:	pop    ebx
  41eac6:	ret    0x6088
  41eac9:	mov    al,0x9e
  41eacb:	bndstx [edi+0x5ab5f433],(bad)
  41ead2:	xor    eax,0x92223207
  41ead7:	fsub   QWORD PTR [esi+0x59]
  41eada:	call   0x1b94:0xd8140f2c
  41eae1:	scas   al,BYTE PTR es:[edi]
  41eae2:	sbb    al,0x8
  41eae4:	mov    esi,0x27357082
  41eae9:	pop    ecx
  41eaea:	adc    eax,DWORD PTR [eax]
  41eaec:	mov    eax,0x30a87def
  41eaf1:	pop    ecx
  41eaf2:	hlt    
  41eaf3:	fsubr  DWORD PTR [ebx]
  41eaf6:	sbb    BYTE PTR [ebp-0x705b5215],dl
  41eafc:	cmp    ebp,0x20
  41eaff:	shl    DWORD PTR [eax],0x34
  41eb02:	mov    ch,0x88
  41eb04:	fdiv   QWORD PTR [ebp+0x48b79b4d]
  41eb0a:	add    eax,0x69000031
  41eb0f:	add    DWORD PTR [ecx],eax
  41eb11:	fs clc 
  41eb13:	(bad)  
  41eb15:	cdq    
  41eb16:	mov    edi,0x88b58963
  41eb1b:	cmp    eax,0x57b247e9
  41eb20:	sti    
  41eb21:	ins    DWORD PTR es:[edi],dx
  41eb22:	je     0x41eb09
  41eb24:	pop    es
  41eb25:	fiadd  WORD PTR [ebx]
  41eb27:	cmc    
  41eb28:	and    al,0xcd
  41eb2a:	mov    ebp,0xcfdd24f5
  41eb2f:	xor    esp,eax
  41eb31:	lods   eax,DWORD PTR ds:[esi]
  41eb32:	pop    eax
  41eb33:	cmp    eax,0x3434e902
  41eb38:	mov    BYTE PTR [ebx+ebp*2-0x54],ah
  41eb3c:	inc    ebx
  41eb3d:	stc    
  41eb3e:	inc    edx
  41eb3f:	pop    ecx
  41eb40:	push   ebp
  41eb41:	(bad)  
  41eb42:	aas    
  41eb43:	adc    BYTE PTR [ecx],ah
  41eb45:	sbb    ah,BYTE PTR [eax+0x630d74ae]
  41eb4b:	mov    dl,0x44
  41eb4d:	add    eax,0xd5cb157
  41eb52:	inc    esp
  41eb53:	mov    dl,0x5c
  41eb55:	add    eax,0xcd5cb20b
  41eb5a:	add    BYTE PTR [edx+0x50ecc55c],dh
  41eb60:	and    eax,0x8457c581
  41eb65:	test   eax,0xe9bcb034
  41eb6a:	xor    al,0x34
  41eb6c:	mov    bl,BYTE PTR ds:0x2e88450f
  41eb72:	add    BYTE PTR [eax],al
  41eb74:	sti    
  41eb75:	sbb    eax,eax
  41eb77:	cmc    
  41eb78:	in     al,0x3
  41eb7a:	push   ecx
  41eb7b:	data16 out dx,al
  41eb7d:	dec    esp
  41eb7e:	push   cs
  41eb7f:	test   eax,0xe6c0b534
  41eb84:	mov    al,0xb9
  41eb86:	add    cl,ch
  41eb88:	xor    al,0xab
  41eb8a:	inc    esp
  41eb8b:	add    BYTE PTR [edx],bh
  41eb8d:	push   eax
  41eb8e:	cmp    bl,al
  41eb90:	mov    esi,DWORD PTR [ebx]
  41eb92:	jmp    0xfd0804b4
  41eb97:	push   eax
  41eb98:	test   BYTE PTR [ecx-0x46ae00cd],0x31
  41eb9f:	mov    ecx,DWORD PTR [esi-0x21eb943b]
  41eba5:	mov    esp,0xc54131c7
  41ebaa:	mov    al,dh
  41ebac:	jne    0x41eb6f
  41ebae:	outs   dx,DWORD PTR ds:[esi]
  41ebaf:	pop    ds
  41ebb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebb1:	xor    cl,ch
  41ebb3:	xor    DWORD PTR [edi+0x1d3bfcc5],edi
  41ebb9:	cmp    al,0x5
  41ebbb:	mov    DWORD PTR [esi],esi
  41ebbd:	mov    ecx,0x698e3301
  41ebc2:	shl    BYTE PTR [edx+ecx*2-0x29],0x2b
  41ebc7:	jmp    0x41ec1f
  41ebc9:	sbb    ch,cl
  41ebcb:	cmp    DWORD PTR [edi-0x3b],ecx
  41ebce:	cld    
  41ebcf:	xor    ecx,DWORD PTR [esi+0x451044d7]
  41ebd5:	jno    0x41ec46
  41ebd7:	push   ebx
  41ebd8:	add    BYTE PTR [eax],al
  41ebda:	xchg   ebp,eax
  41ebdb:	pop    ds
  41ebdc:	and    eax,0x2517a51c
  41ebe1:	adc    al,0x69
  41ebe3:	ret    
  41ebe4:	adc    al,0x3b
  41ebe6:	int    0x3c
  41ebe8:	adc    edi,edi
  41ebea:	sub    cl,BYTE PTR [edi+ecx*1-0x73]
  41ebee:	pop    edx
  41ebef:	dec    esp
  41ebf0:	and    edx,DWORD PTR [eax-0x7b]
  41ebf3:	mov    edx,0xc28044e3
  41ebf8:	cld    
  41ebf9:	mov    ebp,ecx
  41ebfb:	arpl   WORD PTR [edx+0x38483a44],ax
  41ec01:	repz or dh,BYTE PTR ds:0xf53736fe
  41ec08:	mov    gs,WORD PTR [edi]
  41ec0a:	shl    dh,1
  41ec0c:	cmp    eax,ebp
  41ec0e:	into   
  41ec0f:	pop    ebp
  41ec10:	mov    ?,esp
  41ec12:	mov    ah,0x99
  41ec14:	jecxz  0x41ec2d
  41ec16:	xor    eax,0x3380f899
  41ec1b:	xor    ebp,ebp
  41ec1d:	(bad)  
  41ec1e:	and    al,0x64
  41ec20:	mov    es,WORD PTR [ebx+0x5b]
  41ec23:	popa   
  41ec24:	pushf  
  41ec25:	dec    edx
  41ec26:	cwde   
  41ec27:	ds pop ebp
  41ec2a:	sti    
  41ec2b:	jo     0x41ec1f
  41ec2d:	(bad)  
  41ec2e:	mov    ebp,0xae1fe389
  41ec33:	mov    gs,edi
  41ec35:	mov    dh,bl
  41ec37:	push   0x2e84e7e3
  41ec3c:	xchg   edx,eax
  41ec3d:	cld    
  41ec3e:	add    BYTE PTR [eax],al
  41ec40:	mov    ebp,0x10e909
  41ec45:	pop    ss
  41ec46:	mov    DWORD PTR cs:[edx+0x20],edx
  41ec4a:	ret    
  41ec4b:	add    esi,DWORD PTR [edi]
  41ec4d:	and    BYTE PTR [esi-0x15],bh
  41ec50:	mov    ah,0x81
  41ec52:	int3   
  41ec53:	sbb    dl,0x88
  41ec56:	add    al,0x51
  41ec58:	int    0x78
  41ec5a:	jp     0x41ec9e
  41ec5c:	pop    es
  41ec5d:	repz add al,0x50
  41ec60:	sub    BYTE PTR [eax-0x19],bl
  41ec63:	adc    eax,0xc3844d77
  41ec68:	sub    edx,eax
  41ec6a:	inc    ebx
  41ec6b:	in     al,0x67
  41ec6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec6e:	repz jecxz 0x41ec96
  41ec71:	or     eax,0x658afd05
  41ec76:	xchg   edi,eax
  41ec77:	xchg   ecx,eax
  41ec78:	xchg   DWORD PTR [ebp-0x1],ecx
  41ec7b:	mov    DWORD PTR [edi],ecx
  41ec7d:	clc    
  41ec7e:	inc    ebx
  41ec7f:	in     al,0x87
  41ec81:	xor    al,0x63
  41ec83:	imul   esp
  41ec85:	inc    ecx
  41ec86:	stos   BYTE PTR es:[edi],al
  41ec87:	add    ebp,DWORD PTR [ebp-0x945518e]
  41ec8d:	das    
  41ec8e:	jmp    0xc8a8:0x6647be36
  41ec95:	mov    ah,0x4d
  41ec97:	test   al,0xb9
  41ec99:	push   esi
  41ec9a:	jmp    0x68bd52d3
  41ec9f:	cmovg  esi,DWORD PTR [edx+ebp*8]
  41eca3:	jecxz  0x41eca5
  41eca5:	add    BYTE PTR [eax-0x3844d00],ah
  41ecab:	pavgw  mm7,QWORD PTR [edx-0x14]
  41ecaf:	psubd  mm0,QWORD PTR [eax]
  41ecb2:	mov    dh,0x42
  41ecb4:	jmp    0xdc0c23bc
  41ecb9:	jle    0x41ecb7
  41ecbb:	pmaxub mm3,QWORD PTR [ebx-0x6f159f90]
  41ecc2:	mov    ah,0x73
  41ecc4:	xacquire xchg DWORD PTR [eax+0x33],esp
  41ecc8:	jmp    0xdef4:0xdd7ae03
  41eccf:	das    
  41ecd0:	pop    ebp
  41ecd1:	inc    esi
  41ecd2:	aas    
  41ecd3:	add    al,0x52
  41ecd5:	out    0x1b,al
  41ecd7:	xor    al,0xea
  41ecd9:	cmp    BYTE PTR [edi+0x7e],cl
  41ecdc:	not    BYTE PTR [eax+0xa9b133]
  41ece2:	mov    bl,0x82
  41ece4:	jmp    0x149723ec
  41ece9:	in     al,dx
  41ecea:	sbb    esp,eax
  41ecec:	std    
  41eced:	sbb    edx,DWORD PTR [esi+0xd]
  41ecf0:	jmp    0x3d4:0x434c6203
  41ecf7:	push   esi
  41ecf8:	gs ret 
  41ecfa:	sub    esi,DWORD PTR [eax+0x34343000]
  41ed00:	add    DWORD PTR [eax-0x8ad7e7],esi
  41ed06:	(bad)  
  41ed07:	loop   0x41ed15
  41ed09:	rol    DWORD PTR [eax],1
  41ed0b:	add    bh,bl
  41ed0d:	adc    BYTE PTR [ecx],al
  41ed0f:	jmp    0x15613923
  41ed14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed15:	pop    eax
  41ed16:	test   BYTE PTR [ecx],ch
  41ed18:	aaa    
  41ed19:	mov    al,0x9a
  41ed1b:	jmp    0x947c2154
  41ed20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed21:	loope  0x41ed35
  41ed23:	cs inc ecx
  41ed25:	inc    esp
  41ed26:	imul   eax,DWORD PTR [ecx],0xb6fb558e
  41ed2c:	mov    esp,0xa716352d
  41ed31:	mov    cl,0xc0
  41ed33:	fidiv  WORD PTR [eax+0x34e900b4]
  41ed39:	retf   0x90fe
  41ed3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed3d:	xchg   DWORD PTR [edi+0x5271cc6e],ecx
  41ed43:	jmp    0xd869a7c
  41ed48:	pop    edi
  41ed49:	sbb    al,0xc0
  41ed4b:	push   ebp
  41ed4c:	cmp    BYTE PTR [ecx+0x4d630d74],ch
  41ed52:	rol    DWORD PTR [ebp+0x534f58b8],0x3a
  41ed59:	dec    esp
  41ed5a:	jmp    0x41ed16
  41ed5c:	test   al,0x58
  41ed5e:	sti    
  41ed5f:	jge    0x41ed80
  41ed61:	dec    ebx
  41ed62:	add    ecx,ebp
  41ed64:	xor    al,0xcc
  41ed66:	loopne 0x41ed1a
  41ed68:	je     0x41ed9e
  41ed6a:	jmp    0xfb994da3
  41ed6f:	bound  eax,QWORD PTR [eax]
  41ed71:	add    BYTE PTR [ebx-0x10ea0fe5],ch
  41ed77:	test   eax,0x60f20044
  41ed7c:	dec    ebx
  41ed7d:	lea    edx,[edx-0x21ff58b4]
  41ed83:	xor    BYTE PTR [ecx+0x53],dl
  41ed86:	inc    ecx
  41ed87:	mov    eax,0xa559351f
  41ed8c:	cmp    bl,al
  41ed8e:	add    BYTE PTR [esi+0x4b],bl
  41ed91:	push   edx
  41ed93:	dec    esp
  41ed94:	psubsb mm5,QWORD PTR [ebp+0x79fffe07]
  41ed9b:	cmp    al,0x25
  41ed9d:	adc    BYTE PTR [esi-0x14],al
  41eda0:	and    al,0x13
  41eda2:	div    BYTE PTR [esi+ebp*1]
  41eda5:	call   FWORD PTR [ecx-0x48]
  41eda8:	sbb    DWORD PTR [eax+0x59],0x7274fca5
  41edaf:	pop    esp
  41edb0:	jecxz  0x41ed60
  41edb2:	mov    al,ds:0xd28d012f
  41edb7:	dec    esp
  41edb8:	adc    edx,DWORD PTR [eax+0x26]
  41edbb:	or     DWORD PTR [ebx-0x7968601],esp
  41edc1:	je     0x41ee1e
  41edc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edc4:	xor    al,0xe8
  41edc6:	retf   0xfc75
  41edc9:	jmp    DWORD PTR [ecx]
  41edcb:	mov    eax,0xa5792f45
  41edd0:	mov    DWORD PTR [edx+eax*2+0x55],eax
  41edd4:	pop    esp
  41edd5:	pop    esi
  41edd6:	add    BYTE PTR [eax],al
  41edd8:	add    eax,0x8c5dded9
  41eddd:	pop    esp
  41edde:	sti    
  41eddf:	push   esp
  41ede0:	lds    esi,FWORD PTR [eax+ecx*4+0x4fb39d06]
  41ede7:	push   ebx
  41ede8:	inc    ecx
  41ede9:	cs cld 
  41edeb:	mov    WORD PTR [ebx-0x2c],gs
  41edee:	dec    edx
  41edef:	push   esi
  41edf0:	std    
  41edf1:	sahf   
  41edf2:	cld    
  41edf3:	push   eax
  41edf4:	aaa    
  41edf5:	ins    DWORD PTR es:[edi],dx
  41edf6:	mov    BYTE PTR [edi+0x42781782],bh
  41edfc:	retf   
  41edfd:	js     0x41edfe
  41edff:	call   DWORD PTR [edi+0x5d]
  41ee02:	push   cs
  41ee03:	inc    eax
  41ee04:	sub    BYTE PTR cs:[ebp+0x72],cl
  41ee08:	sub    al,0xd4
  41ee0a:	dec    eax
  41ee0b:	clc    
  41ee0c:	sbb    al,0x1e
  41ee0e:	adc    al,0x34
  41ee10:	iret   
  41ee11:	or     al,0xde
  41ee13:	cld    
  41ee14:	rcl    dh,1
  41ee16:	xchg   DWORD PTR [eax],edi
  41ee18:	int3   
  41ee19:	imul   ebx,esp,0x40c83988
  41ee1f:	clc    
  41ee20:	data16 adc bl,BYTE PTR [ecx]
  41ee23:	clc    
  41ee24:	or     BYTE PTR [ebx-0x27c4b076],dh
  41ee2a:	mov    edi,0x191a4672
  41ee2f:	clc    
  41ee30:	add    BYTE PTR [edx],dh
  41ee32:	sbb    DWORD PTR [eax],ecx
  41ee34:	in     al,0xb6
  41ee36:	add    eax,ebp
  41ee38:	jmp    0x13e797f
  41ee3d:	add    BYTE PTR [ebp+0x62e83315],ch
  41ee43:	or     DWORD PTR [edx-0x4128ef04],0x58
  41ee4a:	jle    0x41ee6b
  41ee4c:	add    al,0x0
  41ee4e:	or     al,dh
  41ee50:	mov    al,ds:0x804d4b80
  41ee55:	bound  edx,QWORD PTR [ebx+0x5d]
  41ee58:	xor    BYTE PTR [esi-0x46],dl
  41ee5b:	sbb    ch,ch
  41ee5d:	dec    edi
  41ee5e:	inc    eax
  41ee5f:	adc    cl,bh
  41ee61:	mov    dh,dl
  41ee63:	nop
  41ee64:	xor    al,0xe8
  41ee66:	jle    0x41eecf
  41ee68:	mov    esp,?
  41ee6a:	mov    ah,0x84
  41ee6c:	lea    esi,[ebx+0x5f]
  41ee6f:	xor    al,0xa3
  41ee71:	pop    ss
  41ee72:	sbb    eax,ecx
  41ee74:	adc    al,0x94
  41ee76:	sbb    BYTE PTR [ebp+0x530b8cef],dh
  41ee7c:	adc    al,0x90
  41ee7e:	scas   al,BYTE PTR es:[edi]
  41ee7f:	imul   edx,DWORD PTR [ecx+0x7a534a75],0xffffff88
  41ee86:	bswap  eax
  41ee88:	into   
  41ee89:	mov    WORD PTR [ebp+0x4c],fs
  41ee8c:	push   0x17
  41ee8e:	out    0x52,eax
  41ee90:	fdivr  st(3),st
  41ee92:	fcmovne st,st(0)
  41ee94:	in     eax,dx
  41ee95:	mov    WORD PTR [ebp+0x3c],es
  41ee98:	inc    edx
  41ee99:	add    al,0xc9
  41ee9b:	push   edx
  41ee9c:	dec    edx
  41ee9d:	jp     0x41ee87
  41ee9f:	pop    ebx
  41eea0:	mov    cl,0xe9
  41eea2:	add    BYTE PTR [eax],al
  41eea4:	mov    ebx,0x9fc16f52
  41eea9:	xor    eax,0xef0ac3f8
  41eeae:	and    cl,al
  41eeb0:	add    eax,0x8c8315bf
  41eeb5:	pop    ss
  41eeb6:	out    0x3,al
  41eeb8:	aaa    
  41eeb9:	out    0xbb,eax
  41eebb:	xor    al,0xbe
  41eebd:	dec    ebx
  41eebe:	pop    esp
  41eebf:	xchg   DWORD PTR [eax+0x4e],esp
  41eec2:	add    cl,BYTE PTR [ebp+0x3f3dbe8]
  41eec8:	aaa    
  41eec9:	xor    al,0x2c
  41eecb:	inc    edi
  41eecc:	push   0x33
  41eece:	jmp    0x41eec6
  41eed0:	clc    
  41eed1:	and    eax,0x10ef042a
  41eed6:	aad    0x3
  41eed8:	aaa    
  41eed9:	xor    al,0xe3
  41eedb:	test   BYTE PTR [edx-0x53fc15cd],bh
  41eee1:	mov    eax,0x523b8ed1
  41eee6:	sbb    DWORD PTR [edx],ebx
  41eee8:	aaa    
  41eee9:	fadd   QWORD PTR [eax]
  41eeeb:	or     eax,0x5c00f43c
  41eef0:	mov    ecx,0xaba6f771
  41eef5:	add    esp,edi
  41eef7:	hlt    
  41eef8:	inc    esp
  41eef9:	es inc ecx
  41eefb:	jmp    0xfeb680b1
  41ef00:	xor    DWORD PTR [esi+0x50ab84e8],0x9150
  41ef0a:	aad    0xae
  41ef0c:	sti    
  41ef0d:	jbe    0x41eebf
  41ef0f:	xchg   ecx,eax
  41ef10:	je     0x41ef20
  41ef12:	mov    dl,0xc6
  41ef14:	or     BYTE PTR [ecx+ecx*2+0x59],dh
  41ef18:	std    
  41ef19:	pop    esi
  41ef1a:	ret    
  41ef1b:	pop    ecx
  41ef1c:	xchg   ebx,eax
  41ef1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef1e:	mov    ebx,0x28298450
  41ef23:	std    
  41ef24:	callw  0xa561
  41ef28:	call   0x5092b269
  41ef2d:	fs inc ecx
  41ef2f:	inc    esp
  41ef30:	adc    bh,BYTE PTR cs:[eax+ebp*4-0x4a54d969]
  41ef38:	rcl    BYTE PTR [ebp+0x185be9b],0xb9
  41ef3f:	push   eax
  41ef40:	sti    
  41ef41:	fs mov bl,0xc5
  41ef44:	(bad)  
  41ef45:	jno    0x41efba
  41ef47:	push   eax
  41ef48:	jne    0x41ef3f
  41ef4a:	mov    esp,0x42f6f0c6
  41ef4f:	inc    eax
  41ef50:	push   ecx
  41ef51:	xor    DWORD PTR [esi],0x5c
  41ef54:	inc    esi
  41ef55:	in     al,0xac
  41ef57:	push   eax
  41ef58:	xchg   cl,al
  41ef5a:	into   
  41ef5b:	cmc    
  41ef5c:	lock shr DWORD PTR [ebp+ebp*4-0x5],0xce
  41ef62:	mov    esi,0x7300e8b5
  41ef67:	mov    ebp,0x1ba650fc
  41ef6c:	(bad)  
  41ef6d:	call   0xdce1ef72
  41ef72:	cld    
  41ef73:	call   DWORD PTR [ebx+esi*8+0x21705ffd]
  41ef7a:	(bad)
  41ef7e:	push   eax
  41ef7f:	mov    esi,DWORD PTR [edx-0x6174acfa]
  41ef85:	retf   0xfc3e
  41ef88:	push   ds
  41ef89:	push   es
  41ef8a:	add    bl,BYTE PTR [bx+di-0x30e]
  41ef8f:	add    al,0xdf
  41ef91:	xor    al,0x1
  41ef93:	dec    DWORD PTR [ebx]
  41ef95:	fst    DWORD PTR [eax]
  41ef97:	inc    eax
  41ef98:	into   
  41ef99:	sar    BYTE PTR [ebx+0x3ed12c74],1
  41ef9f:	cld    
  41efa0:	pop    ebx
  41efa1:	js     0x41f012
  41efa3:	sub    ebx,DWORD PTR ds:0xc289658f
  41efa9:	repnz mov esi,eax
  41efac:	js     0x41f02d
  41efae:	or     eax,0xb44d3674
  41efb3:	or     BYTE PTR ds:0x8b742cbf,cl
  41efb9:	mov    ecx,0x32ab5cf2
  41efbe:	addr16 jl 0x41ef88
  41efc1:	adc    al,BYTE PTR [eax+ecx*1+0x6601780d]
  41efc8:	or     eax,0x3a74fb80
  41efcd:	mov    cl,0x9
  41efcf:	mov    eax,0x13816
  41efd4:	add    BYTE PTR [eax],al
  41efd6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41efd8:	and    eax,0xc41a4e01
  41efdd:	ret    
  41efde:	or     edx,ecx
  41efe0:	out    0x83,eax
  41efe2:	aaa    
  41efe3:	jg     0x41ef6c
  41efe5:	jle    0x41f03a
  41efe7:	out    0x3,al
  41efe9:	add    BYTE PTR [edi],dh
  41efeb:	cs das 
  41efed:	push   ebp
  41efee:	fs xchg edx,eax
  41eff0:	pop    ss
  41eff1:	sub    al,0xae
  41eff3:	sbb    eax,0x41af5105
  41eff8:	loope  0x41f00e
  41effa:	sbb    BYTE PTR [ecx+0x5f],dl
  41effd:	emms   
  41efff:	pop    ebp
  41f000:	jl     0x41f045
  41f002:	push   ebx
  41f003:	dec    ebp
  41f004:	retf   0x30c0
  41f007:	fnstcw WORD PTR [esi]
  41f009:	(bad)  
  41f00a:	clc    
  41f00b:	pop    ebp
  41f00c:	jp     0x41f040
  41f00e:	iret   
  41f00f:	ins    DWORD PTR es:[edi],dx
  41f010:	aas    
  41f011:	add    BYTE PTR [ebp+ebp*1-0x581f032c],al
  41f018:	retf   0x63c0
  41f01b:	dec    ebp
  41f01c:	das    
  41f01d:	std    
  41f01e:	dec    ebx
  41f01f:	cmp    ecx,esi
  41f021:	inc    esp
  41f022:	enter  0xcb0f,0xc0
  41f026:	dec    edx
  41f027:	jmp    0x4384e8f6
  41f02c:	rol    DWORD PTR [ebx+0x5b],0x5e
  41f030:	add    al,0xe7
  41f032:	inc    ebp
  41f033:	pop    esp
  41f034:	(bad)  
  41f035:	push   DWORD PTR [edx+0x1bdb89]
  41f03b:	add    bh,bl
  41f03d:	and    BYTE PTR [eax],al
  41f03f:	add    BYTE PTR [edi],dh
  41f041:	les    esp,FWORD PTR [ebx]
  41f043:	and    al,0x2f
  41f045:	aam    0x23
  41f047:	and    al,0x2b
  41f049:	xor    eax,0x5d362585
  41f04e:	sbb    eax,0xc1c20404
  41f053:	mov    BYTE PTR [edx],ah
  41f055:	in     eax,dx
  41f056:	out    dx,eax
  41f057:	aas    
  41f058:	aaa    
  41f059:	lods   eax,DWORD PTR ds:[esi]
  41f05a:	js     0x41f09f
  41f05c:	adc    esi,DWORD PTR [edx+ecx*1]
  41f05f:	xor    al,0x52
  41f061:	enter  0xe405,0x4b
  41f065:	data16 ins BYTE PTR es:[edi],dx
  41f067:	les    esi,FWORD PTR [ebx]
  41f069:	mov    eax,0x343704ac
  41f06e:	outs   dx,DWORD PTR ds:[esi]
  41f06f:	inc    eax
  41f070:	pop    ebx
  41f071:	sub    bh,bh
  41f073:	les    esp,FWORD PTR [ebp+0xfc3f738]
  41f079:	cmp    edx,eax
  41f07b:	or     al,0x4b
  41f07d:	dec    edi
  41f07e:	mov    ds:0x218747b,al
  41f083:	int    0xf7
  41f085:	outs   dx,BYTE PTR ds:[esi]
  41f087:	les    eax,FWORD PTR [eax]
  41f089:	dec    edi
  41f08a:	jmp    0x752523ac
  41f08f:	inc    eax
  41f090:	sbb    ebx,DWORD PTR [eax]
  41f092:	sbb    dh,BYTE PTR [edi+0x74]
  41f095:	sbb    dl,cl
  41f097:	xor    esp,edx
  41f099:	mov    ebp,0x6c65dbe3
  41f09f:	les    eax,FWORD PTR [eax]
  41f0a1:	add    BYTE PTR [ebx-0x48],al
  41f0a4:	jge    0x41f0aa
  41f0a6:	aaa    
  41f0a7:	xor    al,0xc2
  41f0a9:	xlat   BYTE PTR ds:[ebx]
  41f0aa:	dec    ecx
  41f0ab:	hlt    
  41f0ac:	jmp    0x7490e135
  41f0b1:	adc    BYTE PTR [ebx-0x30],bl
  41f0b4:	push   ecx
  41f0b5:	call   0xe37a:0x7d324f3a
  41f0bc:	sub    ch,bh
  41f0be:	push   0xbc03aa22
  41f0c3:	test   ebp,0xfc4ef8db
  41f0c9:	mov    esp,DWORD PTR [esi]
  41f0cb:	hlt    
  41f0cc:	jmp    0xc259f547
  41f0d1:	dec    ebx
  41f0d2:	jp     0x41f107
  41f0d4:	jmp    0x35cc:0x465f03
  41f0db:	xor    al,0x8e
  41f0dd:	gs push edi
  41f0df:	mov    BYTE PTR [ecx],0xe9
  41f0e2:	xor    al,0x5c
  41f0e4:	fistp  QWORD PTR [edi+0x9e0b4f]
  41f0eb:	sbb    BYTE PTR [ecx],ch
  41f0ed:	cmp    DWORD PTR [esi],edi
  41f0ef:	xchg   DWORD PTR [ebp+ecx*1+0xd],eax
  41f0f3:	dec    BYTE PTR [ebx]
  41f0f5:	jbe    0x41f15f
  41f0f7:	sbb    BYTE PTR [ebx],dh
  41f0f9:	sbb    DWORD PTR [eax+0x346524b1],ebp
  41f0ff:	xor    al,0x1
  41f101:	cmp    DWORD PTR [eax+0x7124b1],ecx
  41f107:	add    BYTE PTR ds:0x82390134,dh
  41f10d:	ja     0x41f15f
  41f10f:	add    ebp,ebp
  41f111:	in     al,dx
  41f112:	lea    eax,[ebp+0x10]
  41f115:	ds add ch,cl
  41f118:	xor    al,0x5c
  41f11a:	xchg   ebx,eax
  41f11b:	fild   QWORD PTR [edi-0x335a80b0]
  41f121:	mov    dl,0xc0
  41f123:	out    0xd4,eax
  41f125:	push   eax
  41f126:	je     0x41f12d
  41f128:	(bad)  
  41f129:	mov    esp,0x183056c3
  41f12e:	sbb    eax,0x7a201cb9
  41f133:	test   eax,0x50feda34
  41f138:	cmp    BYTE PTR [ebx-0x5],cl
  41f13b:	and    BYTE PTR ss:[ebp-0xe891b8c],cl
  41f142:	and    al,0xf6
  41f144:	xor    eax,0x381ed803
  41f149:	sbb    BYTE PTR [ecx],bl
  41f14b:	add    edi,ecx
  41f14d:	sbb    al,0xfc
  41f14f:	push   cs
  41f150:	inc    ebx
  41f151:	dec    edi
  41f152:	je     0x41f154
  41f154:	sbb    BYTE PTR [ebp-0x4],0x15
  41f158:	or     al,BYTE PTR [ecx+0x3b]
  41f15b:	add    ah,dl
  41f15d:	or     al,0x25
  41f15f:	pop    gs
  41f161:	sbb    ebx,DWORD PTR [edx-0x75]
  41f164:	sbb    DWORD PTR [ebx],0xffffffc2
  41f167:	push   ebp
  41f168:	fld    TBYTE PTR [ebx]
  41f16a:	and    eax,0xcf000094
  41f16f:	stos   DWORD PTR es:[edi],eax
  41f170:	out    dx,eax
  41f171:	add    cl,BYTE PTR [esi+0x31]
  41f174:	push   ebx
  41f175:	push   DWORD PTR [ebx+0x3c]
  41f178:	mov    dh,BYTE PTR [ebp+0x62]
  41f17b:	mov    ch,0x6e
  41f17d:	js     0x41f1bf
  41f17f:	mov    ch,0xe
  41f181:	test   al,0xfe
  41f183:	lock add BYTE PTR [ecx-0x3f7fcf9d],cl
  41f18a:	sbb    ebp,ecx
  41f18c:	inc    DWORD PTR [eax]
  41f18e:	push   cs
  41f18f:	xor    esi,esi
  41f191:	inc    ebp
  41f192:	sub    bh,BYTE PTR [eax]
  41f194:	add    DWORD PTR [eax],eax
  41f196:	push   cs
  41f197:	inc    esi
  41f198:	jle    0x41f191
  41f19a:	fidiv  WORD PTR [eax]
  41f19c:	add    DWORD PTR [ebp-0x1080baa0],eax
  41f1a2:	into   
  41f1a3:	xor    BYTE PTR [ecx],al
  41f1a5:	sbb    DWORD PTR [eax],0x38
  41f1a8:	push   cs
  41f1a9:	xchg   BYTE PTR [eax+0x38],dh
  41f1ac:	add    DWORD PTR [eax],eax
  41f1ae:	dec    ebp
  41f1af:	ss add eax,0xd7ccd900
  41f1b5:	add    BYTE PTR [esi-0x325516d0],bl
  41f1bb:	xor    BYTE PTR [ecx],al
  41f1bd:	test   BYTE PTR [esi+0x45],cl
  41f1c0:	jg     0x41f191
  41f1c2:	mov    ?,WORD PTR [eax]
  41f1c4:	add    DWORD PTR [ebx-0x2f],edx
  41f1c7:	retf   
  41f1c8:	ds dec esp
  41f1ca:	into   
  41f1cb:	mov    ch,0xe
  41f1cd:	clc    
  41f1ce:	aaa    
  41f1cf:	dec    ecx
  41f1d0:	aas    
  41f1d1:	add    BYTE PTR [eax],al
  41f1d3:	add    BYTE PTR [edx+0x79b77fa7],ch
  41f1d9:	pop    edx
  41f1da:	(bad)  
  41f1db:	call   FWORD PTR [edi+0x30]
  41f1de:	loope  0x41f1de
  41f1e0:	pusha  
  41f1e1:	xlat   BYTE PTR ds:[ebx]
  41f1e2:	adc    DWORD PTR [edi+ebx*4],edi
  41f1e5:	adc    eax,0x63370005
  41f1ea:	cwde   
  41f1eb:	and    esi,DWORD PTR [esi]
  41f1ed:	pop    ebx
  41f1ee:	js     0x41f172
  41f1f0:	mov    edi,0x4ffc8267
  41f1f5:	les    ecx,FWORD PTR [eax+0x4a4330fc]
  41f1fb:	inc    edx
  41f1fc:	jnp    0x41f22b
  41f1fe:	hlt    
  41f1ff:	mov    ah,0x7a
  41f201:	adc    esi,DWORD PTR ds:0x2f10e00d
  41f207:	push   eax
  41f208:	mov    esp,0xb28b2f9b
  41f20d:	adc    eax,0xe00fc8a
  41f212:	jp     0x41f256
  41f214:	mov    bh,0xd
  41f216:	pop    ss
  41f217:	ds mov eax,es
  41f21a:	or     al,al
  41f21c:	(bad)  
  41f21e:	lock cld 
  41f220:	loopne 0x41f200
  41f222:	mov    ebx,0x59db217
  41f227:	imul   edi,DWORD PTR [eax+ebx*4-0x15f802f5],0xf
  41f22f:	add    al,0xac
  41f231:	sbb    dh,BYTE PTR [eax]
  41f233:	xor    DWORD PTR [eax+0x21982],edi
  41f239:	add    BYTE PTR [edi-0x5703768c],bl
  41f23f:	sar    DWORD PTR [edi+0x10d60b73],1
  41f245:	js     0x41f2a3
  41f247:	add    cl,BYTE PTR [ebx+ecx*2]
  41f24a:	sbb    DWORD PTR [ecx+eiz*8],esi
  41f24d:	lds    eax,FWORD PTR [esp+edi*8]
  41f250:	ins    BYTE PTR es:[edi],dx
  41f251:	inc    eax
  41f252:	ja     0x41f238
  41f254:	adc    dh,al
  41f256:	mov    al,ds:0xdd03aa26
  41f25b:	cmp    edx,DWORD PTR [edx-0x160c1e31]
  41f261:	js     0x41f257
  41f263:	lock sub DWORD PTR [ebx],esi
  41f266:	dec    edi
  41f267:	cmp    eax,0x75386bf
  41f26c:	mov    cl,0x1e
  41f26e:	mov    al,0xfc
  41f270:	icebp  
  41f271:	sub    eax,0x8135c1ac
  41f276:	jo     0x41f2c3
  41f278:	shr    DWORD PTR [ecx+0x4a],0x4b
  41f27c:	ret    0xe880
  41f27f:	mov    edi,0xd0a584d2
  41f284:	fs aas 
  41f286:	test   DWORD PTR [edx+0x34],0xfe36728
  41f28d:	add    bl,BYTE PTR [edi]
  41f28f:	adc    ah,BYTE PTR [eax+0x195c0385]
  41f295:	out    dx,al
  41f296:	sti    
  41f297:	dec    edx
  41f298:	sub    ch,BYTE PTR [ecx]
  41f29a:	mov    esi,0x2611f0
  41f29f:	add    BYTE PTR [esi-0x944f290],dh
  41f2a5:	aaa    
  41f2a6:	jmp    0x1498:0x6657ae2e
  41f2ad:	mov    bh,0xcc
  41f2af:	xchg   eax,ecx
  41f2b1:	in     eax,0x6e
  41f2b3:	daa    
  41f2b4:	xor    esp,edx
  41f2b6:	fs inc ecx
  41f2b8:	outs   dx,DWORD PTR ds:[esi]
  41f2b9:	cmp    edx,DWORD PTR [ebx+0x23430bd4]
  41f2bf:	jmp    0xe12ad066
  41f2c4:	nop
  41f2c5:	fld    QWORD PTR [eax]
  41f2c7:	fbld   TBYTE PTR [ecx]
  41f2c9:	neg    ah
  41f2cb:	cdq    
  41f2cc:	or     eax,0x3311f4c6
  41f2d1:	das    
  41f2d2:	cld    
  41f2d3:	push   ds
  41f2d4:	(bad)  
  41f2d5:	jnp    0x41f2bf
  41f2d7:	xchg   ebp,eax
  41f2d8:	cmp    al,0x34
  41f2da:	add    DWORD PTR [edi+0x7b0842b7],eax
  41f2e0:	mov    bx,0xd93f
  41f2e4:	loope  0x41f270
  41f2e6:	jne    0x41f2d4
  41f2e8:	push   ebp
  41f2e9:	cmc    
  41f2ea:	cld    
  41f2eb:	add    dl,BYTE PTR [ecx-0x4d]
  41f2ee:	rcl    BYTE PTR ds:0x72fcf5cc,0x39
  41f2f5:	cmp    al,0x8e
  41f2f7:	cs arpl dx,di
  41f2fa:	sti    
  41f2fb:	hlt    
  41f2fc:	fsub   QWORD PTR [ebx]
  41f2fe:	inc    ecx
  41f2ff:	jmp    0x7052e3b3
  41f304:	add    BYTE PTR [eax],al
  41f306:	popa   
  41f307:	push   esp
  41f308:	xchg   DWORD PTR [esi],ebp
  41f30a:	adc    esi,DWORD PTR [ebx-0xf7672bb]
  41f310:	xor    BYTE PTR [ecx],bh
  41f312:	mov    dl,0x26
  41f314:	(bad)  
  41f316:	je     0x41f34c
  41f318:	or     al,0x5e
  41f31a:	cli    
  41f31b:	icebp  
  41f31c:	dec    eax
  41f31d:	adc    eax,0xdce8b4e4
  41f322:	cmp    BYTE PTR [eax],dh
  41f324:	xor    BYTE PTR [ecx-0x1177c841],ch
  41f32a:	cmp    bh,BYTE PTR [ebx+0x2fafd340]
  41f330:	mov    dh,ch
  41f332:	sub    bh,BYTE PTR [ebx-0x4edefec0]
  41f338:	inc    ebp
  41f339:	dec    ebp
  41f33a:	aas    
  41f33b:	hlt    
  41f33c:	adc    BYTE PTR [esi-0x24],dl
  41f33f:	mov    esi,0x5c880047
  41f344:	mov    ebx,0x46ce4f23
  41f349:	clc    
  41f34a:	je     0x41f3a3
  41f34c:	xchg   BYTE PTR [ebp+0x42],cl
  41f34f:	push   es
  41f350:	add    al,0x9a
  41f353:	add    eax,0x7f050167
  41f358:	jecxz  0x41f2f4
  41f35a:	pop    edi
  41f35b:	add    DWORD PTR ss:[ebx+0x75f5ca4e],ecx
  41f362:	pop    edx
  41f363:	arpl   WORD PTR [ebx+0x3ccc8ceb],di
  41f369:	mov    eax,DWORD PTR [eax]
  41f36b:	add    BYTE PTR [eax-0x53],al
  41f36e:	popa   
  41f36f:	xlat   BYTE PTR ds:[ebx]
  41f370:	pusha  
  41f371:	mov    ch,0x89
  41f373:	fsub   DWORD PTR [esi+0x6d]
  41f376:	icebp  
  41f377:	add    BYTE PTR [esi-0x46],cl
  41f37a:	ds cld 
  41f37c:	retf   
  41f37d:	out    dx,eax
  41f37e:	outs   dx,DWORD PTR ds:[esi]
  41f37f:	sub    DWORD PTR [eax],ecx
  41f381:	xor    ah,bh
  41f383:	jae    0x41f3bf
  41f385:	mov    ecx,0x70a50c3e
  41f38a:	or     esi,edi
  41f38c:	(bad)  
  41f38d:	sub    cl,al
  41f38f:	and    ebx,DWORD PTR [ebx-0x38]
  41f392:	add    al,0x36
  41f395:	pusha  
  41f396:	cld    
  41f397:	jne    0x41f343
  41f399:	mov    eax,0x3095083e
  41f39e:	(bad)  
  41f39f:	mov    al,0x5a
  41f3a1:	xor    BYTE PTR [ecx],al
  41f3a3:	add    dh,al
  41f3a5:	xor    ebp,DWORD PTR [ecx+0x0]
  41f3a8:	into   
  41f3a9:	mov    dh,0xc0
  41f3ab:	pop    edi
  41f3ac:	inc    eax
  41f3ad:	imul   eax,edx,0x5034d6c2
  41f3b3:	mov    esp,DWORD PTR [edx-0x51]
  41f3b6:	out    0x70,eax
  41f3b8:	(bad)  [ecx+eax*1]
  41f3bb:	push   ebx
  41f3bc:	aaa    
  41f3bd:	mov    DWORD PTR [edx+0x4bd608d7],ecx
  41f3c3:	out    0xc2,eax
  41f3c5:	cdq    
  41f3c6:	(bad)  
  41f3c7:	call   FWORD PTR [ecx]
  41f3c9:	fidivr WORD PTR [edx+eax*1+0x28]
  41f3cd:	fnstsw WORD PTR [esi-0x6fffff01]
  41f3d3:	pop    edx
  41f3d4:	out    0x60,eax
  41f3d6:	xor    bl,BYTE PTR [ebx-0x1]
  41f3d9:	mov    bh,BYTE PTR [edx+0x78fc7acb]
  41f3df:	mov    ah,0xff
  41f3e1:	dec    edi
  41f3e2:	jns    0x41f3b3
  41f3e4:	xchg   esp,eax
  41f3e5:	stc    
  41f3e6:	push   0x6ee80531
  41f3eb:	jne    0x41f3f1
  41f3ed:	add    BYTE PTR [ebp+ebx*4+0x667b810f],ch
  41f3f4:	mov    BYTE PTR [edi-0x407da23d],bh
  41f3fa:	adc    ebx,DWORD PTR [edx-0x4a]
  41f3fd:	inc    edi
  41f3fe:	xor    al,0xa1
  41f400:	fild   WORD PTR [edx]
  41f402:	aaa    
  41f403:	pop    ebp
  41f404:	mov    WORD PTR [edx+0x2b],?
  41f407:	clc    
  41f408:	cmp    ecx,esi
  41f40a:	xor    dh,cl
  41f40c:	test   edi,edi
  41f40e:	sbb    BYTE PTR [esi-0x17],bl
  41f411:	cmp    dh,0x1
  41f414:	add    cl,BYTE PTR [edx+0x7f4c8f3f]
  41f41a:	(bad)  
  41f41b:	pop    esp
  41f41c:	div    BYTE PTR [ebx-0x54]
  41f41f:	or     BYTE PTR ds:0x7dc1c28b,cl
  41f425:	cld    
  41f426:	call   0xc7cc8657
  41f42b:	mov    bl,0x7e
  41f42d:	cld    
  41f42e:	xchg   dl,bl
  41f430:	inc    ebp
  41f431:	pop    es
  41f432:	ret    0x7b58
  41f435:	out    0x0,eax
  41f437:	add    cl,ah
  41f439:	xor    al,0xec
  41f43b:	add    bl,0xb0
  41f43e:	sub    edi,esi
  41f440:	fs mov ebx,0x5e6f7fbc
  41f446:	rcl    al,cl
  41f448:	mov    edi,0x887ad9f3
  41f44d:	sub    ebp,DWORD PTR [edx]
  41f44f:	nop
  41f450:	out    dx,eax
  41f451:	sbb    eax,0x73b74507
  41f456:	mov    eax,ds:0x1b3bc212
  41f45b:	pop    esp
  41f45c:	pop    ds
  41f45d:	jge    0x41f4c5
  41f45f:	inc    ebp
  41f460:	xor    al,0xe2
  41f462:	fs cwde 
  41f464:	ror    BYTE PTR [edx+0xa],0x82
  41f468:	push   es
  41f469:	mov    bl,0x29
  41f46b:	pop    es
  41f46c:	pop    es
  41f46d:	adc    ebp,DWORD PTR [edi]
  41f46f:	in     eax,dx
  41f470:	xor    eax,0x5033605c
  41f475:	inc    edi
  41f476:	pop    esi
  41f477:	pop    ebx
  41f478:	mov    ch,0x6b
  41f47a:	pop    ebp
  41f47b:	sbb    ebp,DWORD PTR [esi+0x8cf1f1]
  41f481:	pop    esp
  41f482:	cmp    eax,0x5e47325a
  41f487:	jne    0x41f439
  41f489:	lock out dx,al
  41f48b:	imul   edi,DWORD PTR [edx+0x45],0xffffffe9
  41f48f:	add    ebp,DWORD PTR [ebp+0x366cdef0]
  41f495:	add    ch,BYTE PTR [edx-0x4f14951f]
  41f49b:	inc    esi
  41f49c:	add    BYTE PTR [eax],al
  41f49e:	xor    al,0x34
  41f4a0:	xor    eax,0x85b50c8d
  41f4a5:	js     0x41f498
  41f4a7:	inc    esi
  41f4a8:	jmp    0xf62ab481
  41f4ad:	mov    WORD PTR [edi+0x24],?
  41f4b0:	jae    0x41f50e
  41f4b2:	sub    BYTE PTR [ebx],0x1
  41f4b5:	test   eax,0xd777b9ee
  41f4ba:	adc    esi,DWORD PTR [ecx+0xb]
  41f4bd:	lahf   
  41f4be:	sti    
  41f4bf:	xor    eax,DWORD PTR [eax+0x7daf3351]
  41f4c5:	xor    eax,0xeb08b046
  41f4ca:	xor    al,0x34
  41f4cc:	dec    ecx
  41f4cd:	mov    cl,0xa8
  41f4cf:	or     al,0x49
  41f4d1:	mov    cl,0xa0
  41f4d3:	cmovns esp,DWORD PTR [ecx+0x41803a88]
  41f4da:	inc    edi
  41f4db:	rol    BYTE PTR [ebx],0xdb
  41f4de:	hlt    
  41f4df:	dec    ebp
  41f4e0:	stc    
  41f4e1:	call   0xacca291a
  41f4e6:	cmp    al,0xbd
  41f4e8:	add    BYTE PTR [esi],cl
  41f4ea:	mov    ds:0x34e900b2,eax
  41f4ef:	mov    ebp,0xcfeb11cf
  41f4f4:	add    cl,ch
  41f4f6:	fst    QWORD PTR [ecx+eax*1-0x17]
  41f4fa:	xor    al,0x49
  41f4fc:	jne    0x41f4ef
  41f4fe:	mov    bl,0x73
  41f500:	call   0xb641f59c
  41f505:	inc    edi
  41f506:	sti    
  41f507:	ror    BYTE PTR [ebx-0x441604ba],0x7c
  41f50e:	call   0xfb87e230
  41f513:	inc    edi
  41f514:	mov    dl,0x3d
  41f516:	sbb    al,0x3b
  41f518:	jge    0x41f567
  41f51a:	fidivr DWORD PTR [ebx+esi*1]
  41f51d:	xor    al,0x88
  41f51f:	cdq    
  41f520:	mov    bl,0xf4
  41f522:	adc    dl,bl
  41f524:	bound  ebp,QWORD PTR [esi+0x42339575]
  41f52a:	jne    0x41f4f8
  41f52c:	outs   dx,DWORD PTR ds:[esi]
  41f52d:	pop    ebp
  41f52e:	pop    ss
  41f52f:	add    BYTE PTR [esi-0x36b73f50],cl
  41f535:	mov    WORD PTR [eax],cs
  41f537:	and    esp,DWORD PTR [ecx-0x1aad2d34]
  41f53d:	cli    
  41f53e:	push   ecx
  41f53f:	or     DWORD PTR [esi],0x2d
  41f542:	push   ecx
  41f543:	and    eax,DWORD PTR ds:0xc7e80057
  41f549:	add    al,0xfc
  41f54b:	call   DWORD PTR ds:0xe2f67ec1
  41f551:	mov    ds:0xb8a64588,eax
  41f556:	xor    ecx,DWORD PTR [ebx-0x2a7e26d8]
  41f55c:	pop    eax
  41f55d:	mov    ah,0x89
  41f55f:	fsub   DWORD PTR [esi]
  41f561:	dec    esp
  41f562:	jmp    0x41f564
  41f564:	mov    ds,edx
  41f566:	bound  eax,QWORD PTR [ecx]
  41f568:	add    BYTE PTR [eax],al
  41f56a:	pop    esi
  41f56b:	xor    DWORD PTR [edx],edi
  41f56d:	ret    0x2ec3
  41f570:	test   BYTE PTR [ebp+0x36],dl
  41f573:	fadd   DWORD PTR ds:0x84150e83
  41f579:	inc    ebp
  41f57a:	inc    esi
  41f57b:	add    esi,edi
  41f57d:	push   0x1321c
  41f582:	retf   
  41f583:	mov    edx,0xc559fe0b
  41f588:	push   esp
  41f589:	push   eax
  41f58a:	xchg   edi,eax
  41f58b:	imul   ebp,ebx,0xffffff89
  41f58e:	jnp    0x41f55c
  41f590:	cld    
  41f591:	adc    eax,0x411f16
  41f596:	sbb    eax,0x1ac480f1
  41f59b:	mov    eax,0x6f07ec3e
  41f5a0:	(bad)  
  41f5a1:	jge    0x41f5d3
  41f5a3:	mov    bh,0x3e
  41f5a5:	call   0x7543f42f
  41f5aa:	aaa    
  41f5ab:	mov    bl,0x91
  41f5ad:	inc    ebp
  41f5ae:	aas    
  41f5af:	or     ecx,DWORD PTR [esi-0x363c288e]
  41f5b5:	jecxz  0x41f586
  41f5b7:	iret   
  41f5b8:	out    dx,eax
  41f5b9:	call   eax
  41f5bb:	(bad)  
  41f5bc:	inc    esp
  41f5bd:	jb     0x41f5bf
  41f5bf:	fidivr DWORD PTR [ebx+0x9]
  41f5c2:	inc    esp
  41f5c3:	cmp    eax,0xcadfee9
  41f5c8:	xchg   edx,eax
  41f5c9:	dec    edx
  41f5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5cb:	repnz mov al,ds:0x3700006c
  41f5d1:	pop    ebx
  41f5d2:	pushw  ds
  41f5d4:	mov    al,ds:0xf2887787
  41f5d9:	out    dx,al
  41f5da:	xchg   ecx,eax
  41f5db:	jb     0x41f564
  41f5dd:	repnz aad 0x6e
  41f5e0:	aaa    
  41f5e1:	pop    ebx
  41f5e2:	xchg   bh,al
  41f5e4:	mov    edx,0xac0ffd03
  41f5e9:	(bad)  
  41f5ea:	pop    edi
  41f5eb:	mov    BYTE PTR [ecx+0x376c6f32],dl
  41f5f1:	pop    ebx
  41f5f2:	xchg   BYTE PTR [edx+0x33],bl
  41f5f5:	ret    0xf401
  41f5f8:	pop    eax
  41f5f9:	(bad)  
  41f5fa:	imul   ecx,DWORD PTR [eax+0x4a863efa],0x5b
  41f601:	fxch   st(1)
  41f603:	out    0xff,eax
  41f605:	shr    DWORD PTR [edi+0x38],0xef
  41f609:	dec    esi
  41f60a:	sti    
  41f60b:	call   0x7250:0x3d6d2430
  41f612:	jp     0x41f669
  41f614:	(bad)  
  41f616:	and    al,0xfd
  41f618:	sbb    cl,bl
  41f61a:	jp     0x41f699
  41f61c:	xchg   esi,eax
  41f61d:	(bad)  
  41f61e:	enter  0xbeef,0x18
  41f622:	or     DWORD PTR [edx+0x7dcd34ba],0xc87043fb
  41f62c:	cmp    al,0xad
  41f62e:	adc    al,0x7c
  41f630:	mov    edi,0x8addc9
  41f635:	add    BYTE PTR [ebp+0x40],bl
  41f638:	inc    bp
  41f63a:	iret   
  41f63b:	dec    esp
  41f63c:	dec    esp
  41f63d:	repnz rol BYTE PTR [ebx+0x5e],1
  41f641:	add    BYTE PTR [ebx],bh
  41f643:	fisub  DWORD PTR [esi-0x2]
  41f646:	xor    al,0x34
  41f648:	fisttp QWORD PTR [ecx]
  41f64a:	dec    ebp
  41f64b:	xor    eax,0x4c0a07d0
  41f650:	jo     0x41f66e
  41f652:	stos   BYTE PTR es:[edi],al
  41f653:	inc    ebx
  41f654:	push   ebx
  41f655:	add    eax,0xe9dbc935
  41f65a:	cdq    
  41f65b:	int    0xd9
  41f65d:	nop
  41f65e:	sti    
  41f65f:	cmp    DWORD PTR [edx+0x2b1db36b],ebx
  41f665:	jle    0x41f5ff
  41f667:	inc    ecx
  41f668:	add    DWORD PTR [edi+0x7b],edi
  41f66b:	fidiv  DWORD PTR [eax-0x3a]
  41f66e:	dec    edx
  41f66f:	mov    bh,0xac
  41f671:	jg     0x41f693
  41f673:	mov    bh,0x22
  41f675:	xor    BYTE PTR [edx-0xf],ah
  41f678:	add    DWORD PTR [ebp+ebx*8-0x40488ad1],ecx
  41f67f:	sar    ebp,0x89
  41f682:	mul    DWORD PTR [ebx]
  41f684:	repz pop edx
  41f686:	pop    ds
  41f687:	je     0x41f68f
  41f689:	(bad)  
  41f68a:	pop    esp
  41f68b:	mov    bh,0xa6
  41f68d:	int3   
  41f68e:	inc    ebx
  41f68f:	mov    ebx,esi
  41f691:	je     0x41f694
  41f693:	pop    ds
  41f694:	mov    eax,ds:0x1b1123e9
  41f699:	pop    DWORD PTR [eax]
  41f69b:	add    ch,al
  41f69d:	and    edi,DWORD PTR [ebp+edi*2+0x6a00e613]
  41f6a4:	jae    0x41f6dd
  41f6a6:	push   ecx
  41f6a7:	or     ch,BYTE PTR [esi-0x33]
  41f6aa:	call   DWORD PTR [eax-0x16fdeeed]
  41f6b0:	mov    edi,0xe09f8552
  41f6b5:	sub    eax,0x5b6b14fc
  41f6ba:	cdq    
  41f6bb:	iret   
  41f6bc:	pop    ebx
  41f6bd:	inc    eax
  41f6be:	jmp    0xfb824994
  41f6c3:	(bad)  
  41f6c4:	lock cmp cl,BYTE PTR [eax-0x179f504f]
  41f6cb:	add    eax,0x73fb415f
  41f6d0:	adc    ebx,DWORD PTR [ebx+0x11]
  41f6d3:	inc    esi
  41f6d4:	xor    esi,DWORD PTR [esp+edi*8]
  41f6d7:	aam    0x24
  41f6d9:	pop    ebx
  41f6da:	jns    0x41f6eb
  41f6dc:	sbb    al,BYTE PTR [eax-0x7a]
  41f6df:	sub    bl,BYTE PTR [esi]
  41f6e1:	cmp    dl,BYTE PTR [eax+0x36]
  41f6e4:	cmp    BYTE PTR [edx],0xe9
  41f6e7:	adc    dh,bh
  41f6e9:	aas    
  41f6ea:	sti    
  41f6eb:	(bad)  
  41f6ec:	pop    edx
  41f6ed:	fcmovne st,st(1)
  41f6ef:	sub    eax,DWORD PTR [ebx+0x34]
  41f6f2:	push   esi
  41f6f3:	(bad)  
  41f6f4:	out    0xb3,eax
  41f6f6:	in     al,0x11
  41f6f8:	scas   al,BYTE PTR es:[edi]
  41f6f9:	xor    ecx,DWORD PTR [eax-0x133cd34c]
  41f6ff:	sub    DWORD PTR [eax],eax
  41f701:	add    BYTE PTR [esp+esi*1],dh
  41f704:	add    DWORD PTR [edi+0x61b03f63],ebx
  41f70a:	cmp    esi,DWORD PTR [ecx+eax*1]
  41f70d:	je     0x41f76f
  41f70f:	push   ss
  41f710:	or     eax,0xe8dc3853
  41f715:	jle    0x41f6d5
  41f717:	inc    eax
  41f718:	sti    
  41f719:	gs je  0x41f74c
  41f71c:	test   DWORD PTR [eax],eax
  41f71e:	pop    ebx
  41f71f:	xor    eax,0x2850001
  41f724:	adc    eax,0x67385e16
  41f729:	add    al,0x30
  41f72b:	push   0xffffff86
  41f72d:	inc    esp
  41f72e:	jmp    0xfb75:0x69786931
  41f735:	dec    edi
  41f736:	shr    eax,0x80
  41f739:	les    eax,FWORD PTR [edx]
  41f73b:	mov    ebx,0x4bfb74bb
  41f740:	dec    BYTE PTR [edx+ebx*1+0x5e680d0c]
  41f747:	test   al,0x3b
  41f749:	add    BYTE PTR [esi],bl
  41f74b:	mov    edi,0x310a83d4
  41f750:	add    al,0x8b
  41f753:	cmp    ecx,DWORD PTR [eax+0x3fb29675]
  41f759:	and    al,0xce
  41f75b:	gs jecxz 0x41f701
  41f75e:	or     eax,eax
  41f760:	cld    
  41f761:	test   BYTE PTR [esi+0x49],bl
  41f764:	dec    edx
  41f765:	data16 add BYTE PTR [eax],al
  41f768:	sbb    eax,0x8c401f41
  41f76d:	dec    edx
  41f76e:	or     DWORD PTR [eax+0x7f4519d2],eax
  41f774:	popa   
  41f775:	test   eax,0x577debbb
  41f77a:	cmp    BYTE PTR [edx+edi*2+0x75],0x14
  41f77f:	jne    0x41f7d8
  41f781:	dec    ebx
  41f782:	or     ecx,DWORD PTR [ebp+0x504d199a]
  41f788:	mov    dh,0x45
  41f78a:	jne    0x41f7cc
  41f78c:	dec    esi
  41f78d:	rcl    ah,0x83
  41f790:	mov    ch,BYTE PTR [esi+esi*8]
  41f793:	fdiv   DWORD PTR [eax+edi*8]
  41f796:	std    
  41f797:	shl    BYTE PTR [edi],0x76
  41f79a:	add    dh,BYTE PTR [edx]
  41f79c:	not    esi
  41f79e:	inc    esp
  41f79f:	jae    0x41f7e0
  41f7a1:	and    DWORD PTR [edx-0x30b0a4bd],ecx
  41f7a7:	mov    BYTE PTR [edx+ecx*4],dh
  41f7aa:	mov    ah,0x83
  41f7ac:	aaa    
  41f7ad:	dec    ebx
  41f7ae:	jmp    edi
  41f7b0:	popa   
  41f7b1:	and    eax,DWORD PTR ds:0x4abde00
  41f7b7:	add    BYTE PTR [edi],dh
  41f7b9:	add    DWORD PTR [edx-0x30a0e4bd],ecx
  41f7bf:	mov    BYTE PTR [esi+eax*8],dh
  41f7c2:	mov    esp,0xff4b377f
  41f7c7:	out    0x35,eax
  41f7c9:	je     0x41f7cf
  41f7cb:	add    BYTE PTR [eax],al
  41f7cd:	add    dh,cl
  41f7cf:	xchg   ebx,eax
  41f7d0:	add    al,0x0
  41f7d2:	aaa    
  41f7d3:	mov    BYTE PTR [ebx],0xfd
  41f7d6:	out    0xc2,eax
  41f7d8:	add    al,0x0
  41f7da:	aaa    
  41f7db:	(bad)  
  41f7dc:	leave  
  41f7dd:	pop    es
  41f7de:	or     eax,0x38add3a
  41f7e3:	das    
  41f7e4:	sbb    ch,al
  41f7e6:	add    ebx,0x77
  41f7e9:	cld    
  41f7ea:	mov    bl,0xa
  41f7ec:	or     BYTE PTR [ebp+ecx*8+0xdffff4a],al
  41f7f3:	push   eax
  41f7f4:	mov    BYTE PTR [ebx+0x1b],al
  41f7f7:	dec    edi
  41f7f8:	iret   
  41f7f9:	mov    dh,bl
  41f7fb:	outs   dx,BYTE PTR ds:[esi]
  41f7fc:	adc    edx,DWORD PTR [eax+0x60]
  41f7ff:	inc    edi
  41f800:	movlhps xmm6,xmm7
  41f803:	dec    edx
  41f804:	add    bl,0x43
  41f807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f808:	and    eax,DWORD PTR [edi-0xc4917d]
  41f80e:	inc    eax
  41f80f:	dec    edx
  41f810:	fisttp QWORD PTR [edx+0x100e33c3]
  41f816:	mov    esp,0x284405b8
  41f81b:	inc    eax
  41f81c:	jmp    0xcb55b98c
  41f821:	jp     0x41f7bb
  41f823:	ror    BYTE PTR ds:0x35c83710,0x84
  41f82a:	mov    WORD PTR [eax],ds
  41f82c:	fadd   QWORD PTR [ebx]
  41f82e:	mov    dl,cl
  41f830:	fidiv  DWORD PTR [ecx+0x186c0000]
  41f836:	sti    
  41f837:	mov    ?,WORD PTR [ecx+0x5edf91b3]
  41f83d:	xor    dh,BYTE PTR [eax]
  41f83f:	lock pop ds
  41f841:	or     ebp,DWORD PTR [eax-0x57f4dc11]
  41f847:	out    dx,eax
  41f848:	push   ss
  41f849:	or     ebp,DWORD PTR [eax-0x7e4cd511]
  41f84f:	fld    DWORD PTR [ebp-0xf]
  41f852:	imul   esi,edi,0xf0e72914
  41f858:	cli    
  41f859:	stos   BYTE PTR es:[edi],al
  41f85a:	out    0x7a,al
  41f85c:	and    eax,0x20b35f2c
  41f861:	xor    al,0xea
  41f863:	add    ecx,DWORD PTR [edi+0x3705106c]
  41f869:	dec    ebx
  41f86a:	cmc    
  41f86b:	jp     0x41f872
  41f86d:	sub    al,0x65
  41f86f:	(bad)  
  41f870:	cmp    BYTE PTR [ecx+0x4c1f1f9d],dh
  41f876:	sti    
  41f877:	push   es
  41f878:	jb     0x41f8b9
  41f87a:	push   cs
  41f87b:	es mov dh,0x4d
  41f87e:	(bad)  
  41f87f:	out    dx,eax
  41f880:	or     esp,DWORD PTR cs:[eax]
  41f883:	lock lods al,BYTE PTR ds:[esi]
  41f886:	popf   
  41f887:	pop    ds
  41f888:	daa    
  41f889:	dec    ebx
  41f88a:	in     al,0x41
  41f88c:	hlt    
  41f88d:	pop    ss
  41f88e:	add    ecx,ebx
  41f890:	cmp    eax,DWORD PTR [ecx+0x74]
  41f893:	lds    esp,FWORD PTR [ebx+ebp*4]
  41f896:	outs   dx,DWORD PTR ds:[esi]
  41f897:	icebp  
  41f898:	add    BYTE PTR [eax],al
  41f89a:	scas   eax,DWORD PTR es:[edi]
  41f89b:	ret    0xd108
  41f89e:	dec    edx
  41f89f:	aas    
  41f8a0:	cli    
  41f8a1:	(bad)  
  41f8a2:	(bad)  
  41f8a3:	loopne 0x41f82c
  41f8a5:	les    eax,FWORD PTR [eax]
  41f8a7:	jne    0x41f8ad
  41f8a9:	jmp    0x7295e199
  41f8ae:	movlps QWORD PTR [ecx],xmm2
  41f8b1:	mov    dh,0x46
  41f8b3:	lods   eax,DWORD PTR ds:[esi]
  41f8b4:	pop    ebx
  41f8b5:	in     eax,0x8c
  41f8b7:	repnz cli 
  41f8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8ba:	outs   dx,BYTE PTR ds:[esi]
  41f8bb:	lods   al,BYTE PTR ds:[esi]
  41f8bc:	xor    esp,DWORD PTR [ebp+eiz*2-0x3d]
  41f8c0:	pop    es
  41f8c1:	xor    DWORD PTR [edi+0x58efbb1],0x4fcd9957
  41f8cb:	inc    eax
  41f8cc:	push   ebx
  41f8cd:	xchg   ecx,eax
  41f8ce:	mov    ds:0xde76fc12,al
  41f8d3:	loopne 0x41f904
  41f8d5:	test   eax,0xe90474da
  41f8da:	sub    DWORD PTR [ebx-0xc444714],0x5687bf04
  41f8e4:	ret    0x3350
  41f8e7:	xor    al,0x88
  41f8e9:	ret    0xb390
  41f8ec:	gs cmp eax,0xe573ab33
  41f8f2:	data16 aas 
  41f8f4:	adc    eax,0xf42111
  41f8f9:	jb     0x41f931
  41f8fb:	mov    bl,0xc0
  41f8fd:	xchg   ebp,eax
  41f8fe:	add    BYTE PTR [eax],al
  41f900:	inc    ebp
  41f901:	lods   eax,DWORD PTR ds:[esi]
  41f902:	jnp    0x41f8f1
  41f904:	mov    ebx,0x339500ff
  41f909:	inc    ecx
  41f90a:	inc    ebp
  41f90b:	add    BYTE PTR [edx],bh
  41f90d:	mov    ecx,0x4d8604c4
  41f912:	icebp  
  41f913:	push   esi
  41f914:	dec    ecx
  41f915:	sub    eax,0x328e12dd
  41f91a:	jl     0x41f999
  41f91c:	sbb    bh,al
  41f91e:	cli    
  41f91f:	call   FWORD PTR [esi]
  41f921:	inc    ebp
  41f922:	das    
  41f923:	push   0x16
  41f925:	retf   0x241d
  41f928:	jmp    0xa43281e9
  41f92d:	ret    
  41f92e:	outs   dx,DWORD PTR ds:[esi]
  41f92f:	daa    
  41f930:	test   DWORD PTR [esi+0x3],edi
  41f933:	push   0xe
  41f935:	arpl   WORD PTR fs:[ecx],bp
  41f938:	fwait
  41f939:	jb     0x41f936
  41f93b:	mov    al,ah
  41f93d:	stos   BYTE PTR es:[edi],al
  41f93e:	pop    ebp
  41f93f:	add    al,0x65
  41f941:	inc    eax
  41f942:	jmp    DWORD PTR [edi-0x32]
  41f945:	xor    DWORD PTR [ecx],ecx
  41f947:	add    BYTE PTR [esi-0x21ff0d2f],dh
  41f94d:	mov    ebp,0x63d675bb
  41f952:	jecxz  0x41f965
  41f954:	repnz mov esp,0x29c38bfc
  41f95a:	xor    dh,0x92
  41f95d:	xor    cl,ch
  41f95f:	jmp    0x0:0x56fcbc12
  41f966:	idiv   BYTE PTR [ebx+0x5be9ff20]
  41f96c:	pop    ebp
  41f96d:	leave  
  41f96e:	pop    esp
  41f96f:	cmp    eax,0xd50554fb
  41f974:	sub    ah,0x9a
  41f977:	push   0x64a0db30
  41f97c:	mov    cl,dh
  41f97e:	out    0x65,eax
  41f980:	idiv   DWORD PTR [ebx]
  41f982:	sbb    eax,0x37890e4d
  41f987:	nop
  41f988:	imul   esp,edi,0x66
  41f98b:	dec    eax
  41f98c:	js     0x41f98a
  41f98e:	fisttp QWORD PTR [ebx-0x7a]
  41f991:	inc    edx
  41f992:	dec    edi
  41f993:	mov    eax,ds:0x3efa8b07
  41f998:	into   
  41f999:	call   0x5140aad1
  41f99e:	test   dl,al
  41f9a0:	rol    DWORD PTR [edi],0x84
  41f9a3:	cli    
  41f9a4:	iret   
  41f9a5:	out    0xf8,eax
  41f9a7:	xor    BYTE PTR [esi],al
  41f9a9:	add    BYTE PTR [edx+eiz*2-0x117406c9],ch
  41f9b0:	ins    BYTE PTR es:[edi],dx
  41f9b1:	leave  
  41f9b2:	and    bh,BYTE PTR [esi+0x73]
  41f9b5:	xor    ch,ah
  41f9b7:	ret    
  41f9b8:	mov    WORD PTR [eax],ss
  41f9ba:	aaa    
  41f9bb:	dec    ebx
  41f9bc:	push   0xffffffee
  41f9be:	mov    esp,0xcfc1858d
  41f9c3:	push   eax
  41f9c4:	(bad)  
  41f9c5:	inc    DWORD PTR [ebp+0xe82aa6]
  41f9cb:	add    ah,ah
  41f9cd:	js     0x41fa41
  41f9cf:	cld    
  41f9d0:	mov    esi,0xf438790f
  41f9d5:	cmp    al,0x36
  41f9d7:	cmp    BYTE PTR [edx+0x57],ah
  41f9da:	jmp    0x41fa11
  41f9dc:	lods   al,BYTE PTR ds:[esi]
  41f9dd:	and    eax,0xe27d88f5
  41f9e2:	lahf   
  41f9e3:	ds aaa 
  41f9e5:	dec    ebx
  41f9e6:	fld    QWORD PTR [eax+0x25f13c9f]
  41f9ec:	lods   al,BYTE PTR ds:[esi]
  41f9ed:	mov    BYTE PTR [edi],cl
  41f9ef:	cmp    DWORD PTR [esi+edi*2-0x2],esi
  41f9f3:	mov    ch,bh
  41f9f5:	cs je  0x41fa6d
  41f9f8:	cmp    ebx,eax
  41f9fa:	mov    esi,0xcc62847
  41f9ff:	cmc    
  41fa00:	mov    ?,WORD PTR [ebx]
  41fa02:	dec    DWORD PTR [edi+eax*1+0x11]
  41fa06:	xor    dl,ch
  41fa08:	arpl   si,ax
  41fa0a:	loope  0x41f994
  41fa0c:	repnz sub eax,DWORD PTR [edx]
  41fa0f:	(bad)  
  41fa10:	ss cmp eax,0x4b438b02
  41fa16:	add    eax,0x5e3c406b
  41fa1b:	sar    DWORD PTR [esp+ebx*8],0x8b
  41fa1f:	(bad)  
  41fa21:	jbe    0x41fa14
  41fa23:	add    eax,DWORD PTR [edi+ebp*4+0x190c82cd]
  41fa2a:	(bad)  
  41fa2b:	rcl    BYTE PTR [eax+ecx*1],0xaa
  41fa2f:	rol    BYTE PTR [eax],cl
  41fa31:	add    BYTE PTR [edx+0x47612cad],bl
  41fa37:	pop    edi
  41fa38:	adc    edi,DWORD PTR [eax+esi*2+0x6203ea31]
  41fa3f:	shl    BYTE PTR [eax-0x40],cl
  41fa42:	(bad)  [edx+0x2c]
  41fa45:	ja     0x41fa2f
  41fa47:	lods   al,BYTE PTR ds:[esi]
  41fa48:	cmp    al,0x7c
  41fa4a:	mov    ecx,0x753d9dd9
  41fa4f:	cmp    ch,cl
  41fa51:	mov    cl,BYTE PTR [ebp+0x2c]
  41fa54:	outs   dx,DWORD PTR ds:[esi]
  41fa55:	(bad)  
  41fa56:	ror    BYTE PTR [esi-0x6c],1
  41fa59:	jne    0x41fa1e
  41fa5b:	mov    al,0xa9
  41fa5d:	out    dx,eax
  41fa5e:	cmp    al,0xce
  41fa60:	call   0xaceb304e
  41fa65:	pop    edi
  41fa66:	clc    
  41fa67:	scas   al,BYTE PTR es:[edi]
  41fa68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa69:	pop    es
  41fa6a:	or     eax,0xd03c034
  41fa6f:	xor    BYTE PTR [edx+0x4],al
  41fa72:	pop    ebp
  41fa73:	xor    eax,0xb1988aea
  41fa78:	xor    eax,DWORD PTR [esi]
  41fa7a:	mov    ebx,0x34e80134
  41fa7f:	xor    al,0x69
  41fa81:	popa   
  41fa82:	inc    ebp
  41fa83:	xor    al,0x1
  41fa85:	sbb    DWORD PTR es:[edi+esi*1+0x3b],ecx
  41fa8a:	jmp    0x138:0xb5118737
  41fa91:	mov    WORD PTR [ebx+0x4c],es
  41fa94:	imul   edx,DWORD PTR [edx],0x34340000
  41fa9a:	mov    BYTE PTR [esi],ah
  41fa9c:	int    0x11
  41fa9e:	mov    BYTE PTR [edi+0x44],dh
  41faa1:	lods   al,BYTE PTR ds:[esi]
  41faa2:	retf   
  41faa3:	add    DWORD PTR [ecx+0xae900fb],edx
  41faa9:	mov    ah,0xf8
  41faab:	in     eax,0x3b
  41faad:	mov    dh,0xc7
  41faaf:	jmp    0x26d02ee8
  41fab4:	aaa    
  41fab5:	in     al,0xfb
  41fab7:	(bad)  
  41fab9:	sub    DWORD PTR [ecx-0x17],eax
  41fabc:	mov    ebp,?
  41fabe:	out    0xe9,eax
  41fac0:	xor    al,0x5
  41fac2:	shl    DWORD PTR [eax-0x18],0x4e
  41fac6:	inc    eax
  41fac7:	push   0x6b
  41fac9:	cmp    BYTE PTR [ebp-0xb],dh
  41facc:	push   0xfffffff6
  41face:	cli    
  41facf:	imul   esp,eax,0xb6ddff38
  41fad5:	mov    ebx,0x524286fb
  41fada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fadb:	jmp    0xa9722f14
  41fae0:	mov    dh,0x42
  41fae2:	add    esi,ebx
  41fae4:	mov    eax,0x34e900a1
  41fae9:	lods   eax,DWORD PTR ds:[esi]
  41faea:	dec    ebp
  41faeb:	dec    ebp
  41faec:	scas   al,BYTE PTR es:[edi]
  41faed:	leave  
  41faee:	adc    BYTE PTR [ecx+ecx*1-0x39],ch
  41faf2:	jmp    FWORD PTR [ecx+0x51]
  41faf5:	jle    0xe37ca2fb
  41fafb:	xchg   ecx,eax
  41fafc:	add    BYTE PTR [eax],al
  41fafe:	into   
  41faff:	add    DWORD PTR ss:[esi+0xd],esp
  41fb03:	enter  0xeff,0xe9
  41fb07:	mov    bh,0x82
  41fb09:	jge    0x41fb59
  41fb0b:	mov    ebx,0xfd5a74d8
  41fb10:	sbb    dh,BYTE PTR [ebp+0x7c]
  41fb13:	mov    bl,0x3d
  41fb15:	add    BYTE PTR [edx-0x4cc49cef],ch
  41fb1b:	xlat   BYTE PTR ds:[ebx]
  41fb1c:	je     0x41fb45
  41fb1e:	lds    edi,FWORD PTR [edx-0x11]
  41fb21:	psubw  mm4,mm0
  41fb24:	add    bl,al
  41fb26:	jecxz  0x41fb5d
  41fb28:	add    eax,0x13491e20
  41fb2d:	data16 fwait
  41fb2f:	shr    BYTE PTR [edi+0x17],0x5c
  41fb33:	mov    cl,0x76
  41fb35:	hlt    
  41fb36:	jae    0x41fbb2
  41fb38:	repz call 0x400efe
  41fb3e:	test   DWORD PTR [edx-0x15],eax
  41fb41:	test   esi,ecx
  41fb43:	dec    edx
  41fb44:	inc    ebp
  41fb46:	sbb    edi,DWORD PTR [edi-0x54cf7506]
  41fb4c:	outs   dx,BYTE PTR ds:[esi]
  41fb4d:	in     al,dx
  41fb4e:	mov    BYTE PTR [ecx+ebp*8-0x3a83200],0x45
  41fb56:	mov    ebx,0xdeff76b5
  41fb5b:	dec    edx
  41fb5c:	and    esp,DWORD PTR [esi-0xb]
  41fb5f:	inc    edx
  41fb60:	in     al,0xf
  41fb62:	add    BYTE PTR [eax],al
  41fb64:	dec    edx
  41fb65:	sar    ebp,1
  41fb67:	jmp    DWORD PTR [ecx]
  41fb69:	lods   al,BYTE PTR ds:[esi]
  41fb6a:	ds clc 
  41fb6c:	and    eax,0x8f890b72
  41fb71:	lods   al,BYTE PTR ds:[esi]
  41fb72:	ds adc al,0x37
  41fb75:	(bad)  
  41fb76:	ret    0xbef3
  41fb79:	push   ebx
  41fb7a:	scas   eax,DWORD PTR es:[edi]
  41fb7b:	(bad)  
  41fb7c:	jmp    0x7608d411
  41fb81:	pop    ebx
  41fb82:	jmp    edi
  41fb84:	mov    dh,0xf5
  41fb86:	(bad)  
  41fb87:	push   DWORD PTR [eax-0x80]
  41fb8a:	ja     0x41fb73
  41fb8c:	pop    esi
  41fb8d:	ins    BYTE PTR es:[edi],dx
  41fb8e:	je     0x41fb8c
  41fb90:	and    eax,0x2e7690b
  41fb95:	(bad)  
  41fb96:	arpl   WORD PTR [esi-0x44],cx
  41fb99:	dec    ebx
  41fb9a:	mov    BYTE PTR [edx+0x3f],cl
  41fb9d:	cdq    
  41fb9e:	int3   
  41fb9f:	mov    BYTE PTR [edi-0x3d],bh
  41fba2:	(bad)  
  41fba3:	push   DWORD PTR [edi]
  41fba5:	call   0xfbca:0xd88f03e9
  41fbac:	pop    ds
  41fbad:	xor    al,BYTE PTR [edi+0x44cf20fc]
  41fbb3:	jae    0x41fc17
  41fbb5:	into   
  41fbb6:	icebp  
  41fbb7:	sti    
  41fbb8:	aaa    
  41fbb9:	fistp  WORD PTR [edi]
  41fbbb:	jg     0x41fb47
  41fbbd:	outs   dx,DWORD PTR ds:[esi]
  41fbbe:	add    al,0x4
  41fbc0:	push   edi
  41fbc1:	dec    ebx
  41fbc2:	mul    BYTE PTR ds:0xe770f7f8
  41fbc8:	add    BYTE PTR [eax],al
  41fbca:	ret    0x702b
  41fbcd:	cld    
  41fbce:	mov    esp,0x6bf5899a
  41fbd3:	xor    edi,DWORD PTR [edx+eax*2-0x25]
  41fbd7:	aad    0xc1
  41fbd9:	pop    es
  41fbda:	push   0xc7e756d6
  41fbdf:	(bad)  
  41fbe0:	outs   dx,DWORD PTR ds:[esi]
  41fbe1:	cld    
  41fbe2:	mov    ebx,0x610df98a
  41fbe7:	mov    bl,0x7f
  41fbe9:	push   ds
  41fbea:	mov    al,0xc9
  41fbec:	xor    al,al
  41fbee:	or     BYTE PTR [esp+eax*8],dh
  41fbf1:	cmp    al,0x76
  41fbf3:	das    
  41fbf4:	jmp    0x34c7:0x6037f57e
  41fbfb:	stos   DWORD PTR es:[edi],eax
  41fbfc:	push   ss
  41fbfd:	mov    ah,0x89
  41fbff:	dec    ebp
  41fc00:	push   ebx
  41fc01:	jg     0x41fb83
  41fc03:	cmp    DWORD PTR [ecx+0x7c],edi
  41fc06:	js     0x41fc40
  41fc08:	jmp    0xe252008d
  41fc0d:	fistp  DWORD PTR [eax]
  41fc0f:	mov    edi,0x2fcd03e9
  41fc14:	ret    0xd25b
  41fc17:	mov    cl,0x12
  41fc19:	jae    0x41fbcf
  41fc1b:	jae    0x41fbf7
  41fc1d:	cwde   
  41fc1e:	mov    BYTE PTR [ebp-0x13],dh
  41fc21:	add    esp,esp
  41fc23:	lods   al,BYTE PTR ds:[esi]
  41fc24:	or     eax,0x7fe0e9d5
  41fc29:	cld    
  41fc2a:	mov    ebp,0xcbf1b9
  41fc2f:	add    BYTE PTR [eax],dl
  41fc31:	jle    0x41fc32
  41fc33:	add    al,0x37
  41fc35:	stos   DWORD PTR es:[edi],eax
  41fc36:	mov    ds:0xe1c21bd3,al
  41fc3b:	pop    ebx
  41fc3c:	repz dec edx
  41fc3e:	jmp    0x3cb6b046
  41fc43:	or     edi,DWORD PTR [edi+0x3703ba37]
  41fc49:	dec    ebx
  41fc4a:	push   es
  41fc4b:	fidivr WORD PTR [esi]
  41fc4d:	test   eax,0x4c806c2c
  41fc52:	or     DWORD PTR ds:0x4a6e37e0,0xfc1c3768
  41fc5c:	fdiv   DWORD PTR [esi+0x7f]
  41fc5f:	add    esi,DWORD PTR [edi]
  41fc61:	mov    cl,0xa9
  41fc63:	clc    
  41fc64:	cmp    edi,DWORD PTR [ebx+edi*2+0x72]
  41fc68:	mov    eax,0x3a820037
  41fc6d:	add    eax,0x756a0ec1
  41fc72:	add    al,0xe9
  41fc74:	jg     0x41fc22
  41fc76:	in     al,dx
  41fc77:	ror    DWORD PTR [edx-0x36],cl
  41fc7a:	add    BYTE PTR [edx-0x8e6ddfb],bh
  41fc80:	je     0x41fcb9
  41fc82:	xchg   BYTE PTR [eax+eax*4-0x4e1ab856],bl
  41fc89:	jae    0x41fc97
  41fc8b:	ins    BYTE PTR es:[edi],dx
  41fc8c:	xor    eax,ebx
  41fc8e:	push   cs
  41fc8f:	fs add al,dl
  41fc92:	add    eax,0xc9000063
  41fc97:	ret    
  41fc98:	inc    eax
  41fc99:	jmp    0xb94eef55
  41fc9e:	in     al,dx
  41fc9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fca0:	jmp    0xf2f5318e
  41fca5:	jge    0x41fcd0
  41fca7:	mov    ah,0x3a
  41fca9:	sar    DWORD PTR [edi],cl
  41fcab:	sub    DWORD PTR [ecx+0x76343b77],eax
  41fcb1:	loope  0x41fd14
  41fcb3:	je     0x41fd17
  41fcb5:	jo     0x41fcb1
  41fcb7:	add    al,ch
  41fcb9:	and    ebx,DWORD PTR [eax-0x7293cd0c]
  41fcbf:	ret    
  41fcc0:	sub    ah,BYTE PTR [ebx+0x35]
  41fcc3:	mov    al,0xc9
  41fcc5:	cmp    eax,0xf9f9b423
  41fcca:	add    DWORD PTR [ecx],esp
  41fccc:	xchg   DWORD PTR [edi],esp
  41fcce:	xor    al,0xb4
  41fcd0:	stc    
  41fcd1:	xor    edi,ebp
  41fcd3:	xor    DWORD PTR [ecx+0x9c1f3a0],eax
  41fcd9:	jb     0x41fd50
  41fcdb:	dec    edi
  41fcdc:	xchg   esi,eax
  41fcdd:	loope  0x41fd13
  41fcdf:	xor    al,0xe8
  41fce1:	sti    
  41fce2:	out    dx,eax
  41fce3:	stos   DWORD PTR es:[edi],eax
  41fce4:	clc    
  41fce5:	add    BYTE PTR [ebp-0x26],al
  41fce8:	jecxz  0x41fd0f
  41fcea:	(bad)  
  41fceb:	xor    al,BYTE PTR [ecx]
  41fced:	pop    edi
  41fcee:	mov    ch,0x2e
  41fcf0:	xor    cl,cl
  41fcf2:	xor    BYTE PTR [ebx+0x3ad38b03],bh
  41fcf8:	jle    0x41fcba
  41fcfa:	add    BYTE PTR [eax],al
  41fcfc:	xor    BYTE PTR [ebx],0x81
  41fcff:	cmp    BYTE PTR [edi+edi*1],dh
  41fd02:	or     DWORD PTR [eax+0x75013166],eax
  41fd08:	xchg   edx,eax
  41fd09:	inc    eax
  41fd0b:	jmp    0x41fc9d
  41fd0d:	(bad)
  41fd12:	cld    
  41fd13:	data16 xlat BYTE PTR ds:[ebx]
  41fd15:	jo     0x41fd4a
  41fd17:	pop    ebp
  41fd18:	or     al,0x38
  41fd1a:	sti    
  41fd1b:	push   esp
  41fd1c:	in     eax,0xd3
  41fd1e:	and    ah,0x26
  41fd21:	mov    bl,0xe7
  41fd23:	test   BYTE PTR [edx+0x32],dl
  41fd26:	add    DWORD PTR [ebx-0x3b],edx
  41fd29:	add    cx,WORD PTR [ebx+0x48b6334d]
  41fd30:	ficomp DWORD PTR [ebx-0x80]
  41fd33:	into   
  41fd34:	sbb    DWORD PTR [eax+0x320efffc],ecx
  41fd3a:	push   esi
  41fd3b:	mov    DWORD PTR [edx+0x7289150c],eax
  41fd41:	or     al,0x11
  41fd43:	and    ax,0x6ff6
  41fd47:	inc    ebp
  41fd48:	inc    esp
  41fd49:	dec    edx
  41fd4a:	cmp    dl,cl
  41fd4c:	inc    edx
  41fd4d:	add    esp,DWORD PTR [edi+0x2]
  41fd50:	inc    edi
  41fd51:	dec    edx
  41fd52:	or     BYTE PTR [edx+esi*1+0x28],0xe
  41fd57:	mov    dh,0x26
  41fd59:	jne    0x41fdc0
  41fd5b:	mov    ecx,DWORD PTR [esi]
  41fd5d:	je     0x41fdc4
  41fd5f:	rol    DWORD PTR [eax],0x0
  41fd62:	aaa    
  41fd63:	stos   DWORD PTR es:[edi],eax
  41fd64:	mul    DWORD PTR [ebp+0x3c]
  41fd67:	xchg   ebx,eax
  41fd68:	jp     0x41fde5
  41fd6a:	sbb    edx,DWORD PTR [ebx-0x17]
  41fd6d:	xchg   BYTE PTR [ebx+0x6f],ch
  41fd70:	or     eax,0xb66fbc5
  41fd75:	jge    0x41fdae
  41fd77:	dec    ebx
  41fd78:	(bad)  
  41fd79:	out    0x37,eax
  41fd7b:	mov    cl,0x70
  41fd7d:	cld    
  41fd7e:	scas   al,BYTE PTR es:[edi]
  41fd7f:	(bad)  
  41fd80:	and    edx,DWORD PTR [esp+ecx*2]
  41fd83:	add    eax,0x48fa8401
  41fd88:	(bad)  
  41fd89:	jmp    edi
  41fd8b:	loop   0x41fd18
  41fd8d:	test   DWORD PTR [eax-0xa],edi
  41fd90:	jl     0x41fd92
  41fd92:	ret    0x793
  41fd95:	mov    sp,0xbd8b
  41fd99:	dec    esi
  41fd9a:	dec    edi
  41fd9b:	imul   ecx,DWORD PTR [ebp-0x3c3ba704],0x23
  41fda2:	daa    
  41fda3:	bound  ecx,QWORD PTR [ecx+0xc]
  41fda6:	mov    bl,0x77
  41fda8:	add    eax,0x579b3700
  41fdad:	js     0x41fd60
  41fdaf:	ss imul edi,esp,0xffffffab
  41fdb3:	psubsb mm4,QWORD PTR [bx-0x33]
  41fdb8:	jo     0x41fdb6
  41fdba:	lods   al,BYTE PTR ds:[esi]
  41fdbb:	dec    ecx
  41fdbc:	jne    0x41fdbd
  41fdbe:	aaa    
  41fdbf:	fisttp WORD PTR [ecx]
  41fdc1:	xor    edi,0x15646
  41fdc7:	add    BYTE PTR [ebx+ecx*4-0x7f],al
  41fdcb:	dec    eax
  41fdcc:	cmp    ebx,DWORD PTR [edx*8+0xd2f83fc]
  41fdd3:	mov    al,0x34
  41fdd5:	icebp  
  41fdd6:	or     BYTE PTR [esi-0x21],bl
  41fdd9:	xchg   ebp,eax
  41fdda:	xor    al,0x0
  41fddc:	aaa    
  41fddd:	xor    al,0x6e
  41fddf:	inc    esp
  41fde0:	sub    esi,DWORD PTR [eax+0x34370595]
  41fde6:	pop    edi
  41fde7:	add    edi,DWORD PTR [edx]
  41fde9:	jge    0x41fe14
  41fdeb:	ror    BYTE PTR ds:0x37048236,0xc0
  41fdf2:	and    DWORD PTR [esp+0x54f87322],edi
  41fdf9:	and    BYTE PTR [edi-0x30],bl
  41fdfc:	push   esp
  41fdfd:	and    BYTE PTR [edx+0x4d],dl
  41fe00:	mov    esi,0x835d5a34
  41fe05:	xor    ch,dl
  41fe07:	add    edi,DWORD PTR [esi+0xd1405bf]
  41fe0d:	xor    al,0xd0
  41fe0f:	add    al,0xac
  41fe11:	out    dx,eax
  41fe12:	add    eax,0x33a90717
  41fe17:	pop    esp
  41fe18:	mov    cl,0x9b
  41fe1a:	sub    ch,BYTE PTR [edi-0x4c]
  41fe1d:	jae    0x41fdbc
  41fe1f:	movzx  esi,WORD PTR [edi-0x40ca013b]
  41fe26:	loope  0x41fdfd
  41fe28:	push   eax
  41fe29:	outs   dx,BYTE PTR ds:[esi]
  41fe2a:	xchg   edi,eax
  41fe2b:	outs   dx,BYTE PTR ds:[esi]
  41fe2c:	add    BYTE PTR [eax],al
  41fe2e:	inc    ebx
  41fe2f:	dec    eax
  41fe30:	hlt    
  41fe31:	cmp    DWORD PTR [edi+ecx*1+0x3aa407eb],0xffffff9a
  41fe39:	pop    ebx
  41fe3a:	inc    esi
  41fe3b:	mov    al,0xeb
  41fe3d:	outs   dx,BYTE PTR ds:[esi]
  41fe3e:	sbb    BYTE PTR [edi-0x7c],dh
  41fe41:	outs   dx,BYTE PTR ds:[esi]
  41fe42:	sbb    edi,DWORD PTR [eax+0x3327282c]
  41fe48:	ret    0x97e
  41fe4b:	xor    al,0xe9
  41fe4d:	fld    DWORD PTR [ecx]
  41fe4f:	xor    ebx,esi
  41fe51:	jmp    FWORD PTR [ecx]
  41fe53:	je     0x41fe3d
  41fe55:	shl    ebx,cl
  41fe57:	dec    ecx
  41fe58:	add    DWORD PTR ds:0x43017442,ebp
  41fe5e:	cmp    edi,DWORD PTR [edi+0x33c0cd85]
  41fe64:	sti    
  41fe65:	jmp    0x20ce9a4e
  41fe6a:	add    BYTE PTR [ebx-0x17],bl
  41fe6d:	mov    dh,0xef
  41fe6f:	xor    edi,ebx
  41fe71:	je     0x41fe23
  41fe73:	push   edi
  41fe74:	xchg   ecx,eax
  41fe75:	jmp    0x819332ae
  41fe7a:	mov    ch,0xd6
  41fe7c:	add    ecx,ebp
  41fe7e:	mov    eax,0x816d0af3
  41fe83:	xor    bh,bl
  41fe85:	jmp    0x75d030f8
  41fe8a:	push   eax
  41fe8b:	xor    BYTE PTR [edx],al
  41fe8d:	jmp    0xfa2a1ac6
  41fe92:	add    BYTE PTR [eax],al
  41fe94:	xor    al,0x34
  41fe96:	test   DWORD PTR [ecx],ebp
  41fe98:	jno    0x41fe51
  41fe9a:	xor    eax,ebp
  41fe9c:	xor    al,0x34
  41fe9e:	cli    
  41fe9f:	aam    0xbc
  41fea1:	inc    esp
  41fea2:	inc    ecx
  41fea3:	jmp    0x744cf257
  41fea8:	js     0x41ff01
  41feaa:	or     bl,dl
  41feac:	std    
  41fead:	push   0x5d
  41feaf:	lds    eax,FWORD PTR [ecx+0x40]
  41feb2:	test   BYTE PTR [eax+0x34],cl
  41feb5:	xor    al,0x1
  41feb7:	ins    BYTE PTR es:[edi],dx
  41feb8:	sub    BYTE PTR [edi+0x29],dl
  41febb:	xor    DWORD PTR [eax+0x33],esi
  41febe:	sti    
  41febf:	jmp    0xe85ba240
  41fec4:	xor    al,0xbf
  41fec6:	test   DWORD PTR ds:0xe9013593,eax
  41fecc:	in     al,0x83
  41fece:	dec    esi
  41fecf:	inc    ebx
  41fed0:	pop    eax
  41fed1:	test   edx,edi
  41fed3:	add    bl,bl
  41fed5:	data16 adc BYTE PTR [eax-0x22],al
  41fed9:	mov    ecx,0xb32275ba
  41fede:	jle    0x41ff04
  41fee0:	push   esi
  41fee1:	add    DWORD PTR ss:[eax],eax
  41fee4:	push   ds
  41fee5:	lods   eax,DWORD PTR ds:[esi]
  41fee6:	les    ecx,FWORD PTR [ebp+0x28d5c52]
  41feec:	fidiv  WORD PTR [esi]
  41feee:	jmp    0xfde33bdb
  41fef3:	test   BYTE PTR [esi+0x6a612b],cl
  41fef9:	add    BYTE PTR [edx+0x2],bl
  41fefc:	push   ebp
  41fefd:	xor    esp,DWORD PTR [ecx]
  41feff:	mov    bl,0x3e
  41ff01:	and    al,0x42
  41ff03:	or     DWORD PTR [ebx-0x1],ecx
  41ff06:	fwait
  41ff07:	adc    eax,DWORD PTR ds:[eax-0x62]
  41ff0b:	mov    bl,0xbe
  41ff0d:	or     al,0x13
  41ff0f:	mov    esp,0x368e901e
  41ff14:	add    DWORD PTR [ecx-0x72aea536],ecx
  41ff1a:	call   0x1efb:0xd350195a
  41ff21:	dec    esp
  41ff22:	mov    esi,0xd8b5607
  41ff27:	or     BYTE PTR [esp+esi*2+0x1be3027a],al
  41ff2e:	or     ah,BYTE PTR [ecx+0x2c0e85fd]
  41ff34:	and    eax,0x144c668
  41ff39:	add    BYTE PTR [ecx],dh
  41ff3b:	sub    bl,BYTE PTR [edi]
  41ff3d:	sbb    al,0x21
  41ff3f:	dec    ebx
  41ff40:	in     eax,dx
  41ff41:	adc    cl,dh
  41ff43:	xor    eax,0x442a74fc
  41ff48:	mov    BYTE PTR ds:0x4143c6,dh
  41ff4e:	aaa    
  41ff4f:	or     dl,BYTE PTR [ebp-0x4]
  41ff52:	mov    esi,DWORD PTR [edi]
  41ff54:	or     eax,0xc2e1e1fd
  41ff59:	and    eax,DWORD PTR [eax+0x1c]
  41ff5c:	xor    al,al
  41ff5e:	add    BYTE PTR [eax],al
  41ff60:	xchg   DWORD PTR [ebx-0x2b],ecx
  41ff63:	addr16 xor al,0xb
  41ff66:	(bad)  
  41ff67:	(bad)  
  41ff68:	fdiv   DWORD PTR [eax]
  41ff6a:	add    edx,DWORD PTR [edi+esi*2]
  41ff6d:	sbb    edi,DWORD PTR [edi+0x7b]
  41ff70:	adc    ebx,DWORD PTR [edx]
  41ff72:	add    BYTE PTR [ebx+0x60],dh
  41ff75:	ret    0x23b2
  41ff78:	pop    edi
  41ff79:	sbb    eax,0x97c2ffff
  41ff7e:	and    bh,ah
  41ff80:	aaa    
  41ff81:	sbb    edi,edi
  41ff83:	cld    
  41ff84:	jmp    0x41ff7d
  41ff86:	push   0xffffffff
  41ff88:	cwde   
  41ff89:	sbb    edi,DWORD PTR [eax+0x43]
  41ff8c:	pop    ebx
  41ff8d:	dec    ebx
  41ff8e:	jp     0x41ffd3
  41ff90:	push   ebx
  41ff91:	dec    ebx
  41ff92:	aad    0xfc
  41ff94:	or     esi,DWORD PTR [edi]
  41ff96:	adc    ebp,eax
  41ff98:	repz xor DWORD PTR ds:[eax],edx
  41ff9c:	ds (bad) 
  41ff9f:	(bad)  
  41ffa0:	repz lds edx,FWORD PTR ds:[ebp+0x2f]
  41ffa5:	(bad)  
  41ffa7:	(bad)  
  41ffa8:	repz inc dl
  41ffab:	push   esi
  41ffac:	aas    
  41ffad:	(bad)  
  41ffaf:	(bad)  
  41ffb0:	repz (bad) 
  41ffb2:	mov    dh,0x7a
  41ffb4:	das    
  41ffb5:	(bad)  
  41ffb7:	(bad)  
  41ffb8:	repz (bad) 
  41ffba:	mov    edx,0xfedd3fc3
  41ffbf:	les    esi,FWORD PTR [ebx-0x1]
  41ffc2:	into   
  41ffc3:	test   BYTE PTR [eax],0x0
  41ffc6:	das    
  41ffc7:	(bad)  
  41ffc9:	les    esi,FWORD PTR [ebx+0x34]
  41ffcc:	or     al,0xd0
  41ffce:	inc    eax
  41ffcf:	cmp    esp,DWORD PTR [esi]
  41ffd1:	add    al,0x1f
  41ffd3:	jb     0x42001f
  41ffd5:	imul   eax,DWORD PTR [ebx],0xffffff9e
  41ffd8:	jmp    0xc499b455
  41ffdd:	add    al,0x37
  41ffdf:	xor    al,0xd0
  41ffe1:	adc    ah,BYTE PTR ds:0x7d7ee834
  41ffe7:	cmp    al,0x5f
  41ffe9:	lock adc al,0x44
  41ffec:	nop
  41ffed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffee:	scas   al,BYTE PTR es:[edi]
  41ffef:	xor    BYTE PTR [edi+edi*2+0x5bfc5844],bl
  41fff6:	stos   DWORD PTR es:[edi],eax
  41fff7:	int    0x8b
  41fff9:	imul   esp,DWORD PTR [edi+0x1c],0x61
  41fffd:	or     DWORD PTR [edx+0x67ca1c30],esi
  420003:	hlt    
  420004:	movq   QWORD PTR [ebp+0x3700a68e],mm2
  42000b:	xchg   DWORD PTR [edi+0x58],ebp
  42000e:	adc    DWORD PTR [eax],esp
  420010:	or     DWORD PTR [esi],eax
  420012:	aaa    
  420013:	xor    al,0xb7
  420015:	shr    DWORD PTR [ebp-0x3a36f5a],1
  42001b:	and    eax,0x8ebe03e9
  420020:	lock loope 0x41ffda
  420023:	lods   al,BYTE PTR ds:[esi]
  420024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420025:	add    edi,DWORD PTR [ecx+0x76]
  420028:	sub    eax,DWORD PTR [eax+eax*1]
  42002b:	add    BYTE PTR [edx],ch
  42002d:	mov    eax,0x34370571
  420032:	ins    DWORD PTR es:[edi],dx
  420033:	(bad)  
  420034:	and    BYTE PTR [ebx+0x30eb5bad],bh
  42003a:	xchg   esi,eax
  42003b:	pop    ebx
  42003c:	sar    BYTE PTR [edi+eiz*4+0x53c218bd],cl
  420043:	imul   ebp,DWORD PTR [ebx],0xffffffbc
  420046:	add    ecx,esi
  420048:	mov    ds:0x8c6af9aa,eax
  42004d:	xor    BYTE PTR [ebp+0xd],dh
  420050:	test   DWORD PTR [eax+eax*1],esi
  420053:	out    dx,al
  420054:	mov    BYTE PTR [ebp-0x63cb1700],dl
  42005a:	mov    edx,edi
  42005c:	xor    al,0x34
  42005e:	cli    
  42005f:	cld    
  420060:	js     0x42006b
  420062:	aas    
  420063:	jmp    0xdc2f42c5
  420068:	hlt    
  420069:	das    
  42006a:	ds jmp 0x4200a0
  42006d:	xor    al,0x1
  42006f:	nop
  420070:	sbb    BYTE PTR [edi],ch
  420072:	sti    
  420073:	jmp    0x6b06185d
  420078:	dec    ebp
  420079:	xor    BYTE PTR [ebx-0x7f],dl
  42007c:	into   
  42007d:	mov    ah,0xfa
  42007f:	xchg   BYTE PTR [edi],ch
  420081:	loop   0x420064
  420083:	jl     0x4200a2
  420085:	xor    dl,ch
  420087:	(bad)  
  420089:	xor    bl,bh
  42008b:	pop    esp
  42008c:	mov    bh,0x13
  42008e:	std    
  42008f:	data16 add BYTE PTR [eax],al
  420092:	sbb    eax,0xf0d48c7f
  420097:	mov    bl,0xc9
  420099:	push   esi
  42009a:	fcom   QWORD PTR [eax]
  42009c:	or     cl,BYTE PTR [esi+0xd]
  42009f:	mov    bh,0x44
  4200a1:	inc    edi
  4200a2:	lock out dx,al
  4200a4:	jne    0x4200b9
  4200a6:	call   0xf8fefade
  4200ab:	mov    ebx,0x2f384574
  4200b0:	or     al,0x5f
  4200b2:	hlt    
  4200b3:	daa    
  4200b4:	fiadd  DWORD PTR [edx]
  4200b6:	repz mov ecx,0xef19ed46
  4200bc:	push   ecx
  4200bd:	mov    dh,0x84
  4200bf:	cs jecxz 0x4200c2
  4200c2:	xor    eax,0x9b00014c
  4200c7:	and    al,0xd7
  4200c9:	mov    bl,dl
  4200cb:	pushf  
  4200cc:	loop   0x42006b
  4200ce:	push   ss
  4200cf:	call   0xfff7:0x98a38dfd
  4200d6:	jmp    0x7e07e3e2
  4200db:	popf   
  4200dc:	std    
  4200dd:	sub    BYTE PTR [ebx-0x66],0xfa
  4200e1:	push   cs
  4200e2:	bound  edi,QWORD PTR [eax-0x6]
  4200e5:	(bad)  
  4200e6:	ficom  WORD PTR [eax]
  4200e8:	sti    
  4200e9:	imul   ecx,esi,0x3ef83fa5
  4200ef:	imul   eax,ecx,0xfdc068e8
  4200f5:	inc    DWORD PTR [eax]
  4200f7:	add    ch,dl
  4200f9:	in     eax,dx
  4200fa:	(bad)  
  4200fd:	sar    dl,1
  4200ff:	dec    esi
  420101:	scas   eax,DWORD PTR es:[edi]
  420102:	ja     0x4200fc
  420104:	inc    esi
  420105:	push   0x109e006e
  42010a:	add    BYTE PTR [ebp-0x17b557ad],cl
  420110:	icebp  
  420111:	mov    esi,0x7822fffd
  420116:	outs   dx,BYTE PTR ds:[esi]
  420117:	sbb    DWORD PTR [eax-0x49],esi
  42011a:	ja     0x42010c
  42011c:	xchg   ebx,eax
  42011d:	sbb    eax,0xeea10f11
  420122:	lock push edi
  420124:	jmp    0x42011c
  420126:	out    0xe8,al
  420128:	cmp    BYTE PTR [edi+0x1],al
  42012b:	add    ch,dl
  42012d:	test   BYTE PTR [edx],0xeb
  420130:	dec    esp
  420131:	push   0x241e84c1
  420136:	jno    0x420147
  420138:	loopne 0x420128
  42013a:	out    dx,al
  42013b:	dec    eax
  42013c:	aaa    
  42013d:	aad    0xea
  42013f:	or     edi,ebp
  420141:	aam    0xeb
  420143:	push   ebx
  420144:	stc    
  420145:	loopne 0x4201b0
  420147:	(bad)  
  420148:	sbb    eax,0xa280e0de
  42014d:	sub    ebx,edi
  42014f:	jb     0x4201c1
  420151:	nop
  420152:	mov    edx,0x6fad1fb7
  420157:	dec    DWORD PTR [eax]
  420159:	cmp    cl,0x69
  42015c:	add    BYTE PTR [eax],al
  42015e:	das    
  42015f:	push   es
  420160:	sub    al,0xbc
  420162:	icebp  
  420163:	pop    edx
  420164:	add    eax,0x13734afd
  420169:	inc    eax
  42016a:	aaa    
  42016b:	mov    ds:0x6fe9826e,al
  420170:	push   ss
  420171:	mov    DWORD PTR [edx-0x11],esi
  420174:	fdiv   st(7),st
  420176:	push   0xffffffa4
  420178:	or     BYTE PTR [ecx-0x3113bcc9],cl
  42017e:	jbe    0x42019b
  420180:	xlat   BYTE PTR ds:[ebx]
  420181:	(bad)  
  420182:	mov    eax,0x328aff19
  420187:	jae    0x420200
  420189:	inc    ebp
  42018a:	xor    eax,ebx
  42018c:	inc    esi
  42018d:	out    dx,al
  42018e:	aaa    
  42018f:	sbb    edi,DWORD PTR [ebx-0x41]
  420192:	and    dl,BYTE PTR ds:0x373ee7d1
  420198:	push   0x530888fc
  42019d:	out    0x36,eax
  42019f:	daa    
  4201a0:	push   0xfffffffc
  4201a2:	mov    bh,0x0
  4201a4:	push   0xffffffff
  4201a6:	inc    ecx
  4201a7:	lahf   
  4201a8:	mov    esi,0x7d6e68fc
  4201ad:	jb     0x42020e
  4201af:	jae    0x420207
  4201b1:	xchg   edi,eax
  4201b2:	pop    eax
  4201b3:	pop    esi
  4201b4:	jle    0x420230
  4201b6:	push   eax
  4201b7:	xor    al,0xe8
  4201b9:	out    dx,al
  4201ba:	xor    DWORD PTR [esi],esp
  4201bc:	call   0x93f933c3
  4201c1:	imul   eax,DWORD PTR [eax],0xac2d3b00
  4201c7:	jbe    0x42016e
  4201c9:	in     al,dx
  4201ca:	adc    ch,cl
  4201cc:	es xor al,0xe8
  4201cf:	push   0x70084a7
  4201d4:	es xor al,0xe8
  4201d7:	aam    0x18
  4201d9:	sti    
  4201da:	jmp    DWORD PTR [esi+0xb]
  4201dd:	mov    ecx,0x23df5ca2
  4201e2:	jmp    0xa8a35aea
  4201e7:	retf   
  4201e8:	stc    
  4201e9:	icebp  
  4201ea:	in     al,dx
  4201eb:	add    eax,DWORD PTR [ecx+edi*4-0x58337c34]
  4201f2:	pop    ss
  4201f3:	into   
  4201f4:	sbb    DWORD PTR [edx+0x4578df],0x41
  4201fb:	pop    esp
  4201fc:	jl     0x420245
  4201fe:	jmp    0xe0e8b006
  420203:	adc    BYTE PTR [ebp+0x30],0xe9
  420207:	ins    DWORD PTR es:[edi],dx
  420208:	cmp    dh,BYTE PTR [ebx]
  42020a:	push   cs
  42020b:	add    cl,BYTE PTR [esi]
  42020d:	test   al,0xd8
  42020f:	fnstenv [eax]
  420211:	mov    edi,0xbf07002a
  420216:	in     eax,dx
  420217:	addr16 mov edi,0xf00650f0
  42021d:	sub    al,0x5c
  42021f:	jns    0x420223
  420221:	dec    esp
  420222:	mov    ebx,0xf6f82566
  420227:	ret    
  420228:	add    BYTE PTR [eax],al
  42022a:	jo     0x4202a8
  42022c:	fwait
  42022d:	js     0x42021c
  42022f:	daa    
  420230:	jo     0x420275
  420232:	pop    eax
  420233:	cmp    eax,DWORD PTR [ecx]
  420235:	mov    al,ds:0x5c4f2fd1
  42023a:	xchg   ecx,eax
  42023b:	jp     0x42028e
  42023d:	je     0x42029d
  42023f:	and    al,0x87
  420241:	sub    ah,bl
  420243:	and    eax,0x2fd0164a
  420248:	jne    0x42025b
  42024a:	scas   al,BYTE PTR es:[edi]
  42024b:	jbe    0x42021a
  42024d:	push   es
  42024e:	sub    BYTE PTR es:[ebp+0x7528a87c],cl
  420255:	cmc    
  420256:	add    al,0x9e
  420258:	and    DWORD PTR [edx-0x19fb0494],edx
  42025e:	xchg   ecx,eax
  42025f:	mov    ah,0xc5
  420261:	stc    
  420262:	mov    ch,0x23
  420264:	sbb    esp,esi
  420266:	mov    bh,0xe1
  420268:	add    ecx,ebp
  42026a:	xor    al,0xbd
  42026c:	ret    0xd19
  42026f:	sub    esp,DWORD PTR [ebx+0x29]
  420272:	test   DWORD PTR [ecx+eax*1-0x4a],esi
  420276:	inc    edi
  420277:	xor    al,0xe
  420279:	sub    DWORD PTR [ebx],edi
  42027b:	mov    bl,0x44
  42027d:	icebp  
  42027e:	mov    bh,0xeb
  420280:	or     ah,BYTE PTR [ebp-0x53]
  420283:	sub    edi,ebx
  420285:	jmp    0xfbef48db
  42028a:	je     0x4202b7
  42028c:	ds add BYTE PTR ds:[eax],al
  420290:	xor    al,0x34
  420292:	add    esp,esi
  420294:	lahf   
  420295:	sub    BYTE PTR [ebp-0x1f],dh
  420298:	adc    DWORD PTR [esi-0x37],eax
  42029b:	(bad)  [ebx+ebp*1-0x80]
  42029f:	int3   
  4202a0:	mov    WORD PTR [ebx],gs
  4202a2:	sbb    ah,0x7c
  4202a5:	sub    ebp,DWORD PTR [edi-0x2e]
  4202a8:	pop    esi
  4202a9:	and    DWORD PTR [edi-0x1f],0xffffffd9
  4202ad:	gs mov ebp,0xfaf61800
  4202b3:	dec    BYTE PTR [ebx+0x4e40111f]
  4202b9:	scas   al,BYTE PTR es:[edi]
  4202ba:	repnz test DWORD PTR [ecx],esp
  4202bd:	sbb    ebx,DWORD PTR [eax-0x75]
  4202c0:	xor    eax,DWORD PTR [eax+0x13]
  4202c3:	inc    eax
  4202c4:	dec    esi
  4202c5:	or     eax,0x2b888d0b
  4202ca:	dec    ebx
  4202cb:	(bad)  
  4202cc:	fldcw  WORD PTR [edx]
  4202ce:	dec    ebx
  4202cf:	dec    DWORD PTR [ebp-0x52]
  4202d2:	add    al,0x6a
  4202d4:	hlt    
  4202d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d6:	add    eax,0x863b4883
  4202db:	inc    edi
  4202dc:	jmp    0x3fac:0xcdff4af8
  4202e3:	or     BYTE PTR [ebp-0x7299ed8c],cl
  4202e9:	adc    DWORD PTR [edi+0x0],eax
  4202ec:	push   edi
  4202ed:	jmp    0xb07d773c
  4202f2:	jge    0x42030c
  4202f4:	add    BYTE PTR [eax],al
  4202f6:	into   
  4202f7:	sbb    bl,BYTE PTR [esi]
  4202f9:	dec    bp
  4202fb:	adc    DWORD PTR [ecx+0x0],ecx
  4202fe:	or     bh,BYTE PTR [eax]
  420300:	push   esp
  420301:	push   0x3b8409
  420306:	xor    BYTE PTR es:[ecx],al
  420309:	or     dh,cl
  42030b:	mov    es,esp
  42030d:	rol    ecx,1
  42030f:	nop
  420310:	jg     0x4202d2
  420312:	stos   BYTE PTR es:[edi],al
  420313:	sub    ch,BYTE PTR [ebx+0x543fc501]
  420319:	call   0x3e411c
  42031e:	and    DWORD PTR [ebx],ebx
  420320:	add    ebp,eax
  420322:	dec    ebx
  420323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420324:	cli    
  420325:	call   FWORD PTR [eax+esi*2]
  420328:	pop    ebp
  420329:	pop    esi
  42032a:	aaa    
  42032b:	out    0x37,al
  42032d:	sar    DWORD PTR [ebx],0x1d
  420330:	int3   
  420331:	mov    BYTE PTR [ebx-0x63],bl
  420334:	popa   
  420335:	div    DWORD PTR [eax+edi*2-0x35feaf27]
  42033c:	fadd   DWORD PTR [ecx]
  42033e:	fistp  QWORD PTR [ebx]
  420340:	or     bh,BYTE PTR [ebx+eax*8]
  420343:	inc    esp
  420344:	ret    0x373e
  420347:	sbb    eax,0x21134378
  42034c:	jl     0x42030d
  42034e:	stos   BYTE PTR es:[edi],al
  42034f:	adc    DWORD PTR [edi-0xe3671a],edi
  420355:	dec    DWORD PTR [ebp+0x12662c]
  42035b:	add    BYTE PTR [ebx],ch
  42035d:	or     al,0xbf
  42035f:	inc    DWORD PTR [eax+0x26440c1a]
  420365:	pop    ebx
  420366:	add    eax,0x55d7de8
  42036b:	add    BYTE PTR [ebx+0x7f83f5db],dh
  420371:	sbb    al,0xff
  420373:	(bad)  
  420374:	fidivr WORD PTR [edx]
  420376:	(bad)  
  420377:	push   DWORD PTR [edi]
  420379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42037a:	mov    dl,0x23
  42037c:	inc    edi
  42037d:	nop
  42037e:	retf   0x2b23
  420381:	repz idiv edi
  420384:	leave  
  420385:	shl    BYTE PTR [edi+0x43],cl
  420388:	sbb    edx,DWORD PTR [edi]
  42038a:	xor    bh,0xb8
  42038d:	adc    bh,BYTE PTR [ebx-0x5d]
  420390:	aaa    
  420391:	sbb    edi,edi
  420393:	adc    BYTE PTR [ebx],0xf7
  420396:	push   ds
  420397:	add    BYTE PTR ds:0x5343724b,cl
  42039d:	repz fdivr st,st(7)
  4203a0:	add    BYTE PTR [ebx+0x34362be5],dh
  4203a6:	call   0x8920023
  4203ab:	xor    DWORD PTR [eax+edi*1+0x67],0xe43814e7
  4203b3:	out    dx,al
  4203b4:	out    dx,al
  4203b5:	sub    ah,bh
  4203b7:	fs inc ebp
  4203b9:	lock (bad) 
  4203bb:	ret    
  4203bc:	pop    eax
  4203bd:	mov    dh,0x30
  4203bf:	and    eax,DWORD PTR [eax]
  4203c1:	add    ah,al
  4203c3:	xchg   esi,eax
  4203c4:	pop    edi
  4203c5:	sub    al,0xbc
  4203c7:	js     0x420395
  4203c9:	pop    ds
  4203ca:	add    eax,0xadfd6f0d
  4203cf:	test   BYTE PTR [eax],bh
  4203d1:	sub    DWORD PTR [esi],0x3b
  4203d4:	xchg   ebx,eax
  4203d5:	(bad)  
  4203d6:	mov    esi,0xac0d0ff5
  4203db:	cmp    DWORD PTR [ebx],0xffffff83
  4203de:	push   ds
  4203df:	das    
  4203e0:	jnp    0x4203e1
  4203e2:	xor    al,0xfb
  4203e4:	(bad)  
  4203e5:	clc    
  4203e6:	mov    ebp,0xfe848383
  4203eb:	cs push ebx
  4203ed:	sti    
  4203ee:	xor    al,0xdb
  4203f0:	ins    BYTE PTR es:[edi],dx
  4203f1:	aas    
  4203f2:	fs xor eax,esp
  4203f5:	add    al,0x28
  4203f7:	data16 lahf 
  4203f9:	outs   dx,DWORD PTR ds:[esi]
  4203fa:	cmp    esi,esp
  4203fc:	enter  0xaf08,0x32
  420400:	ja     0x420407
  420402:	jns    0x420421
  420404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420405:	mov    BYTE PTR [eax-0x20782f62],cl
  42040b:	sahf   
  42040c:	les    ecx,FWORD PTR [edx+0x74]
  42040f:	push   eax
  420410:	enter  0x3704,0x34
  420414:	call   0x6f7e277b
  420419:	fld    TBYTE PTR [ecx+ebp*1]
  42041c:	hlt    
  42041d:	pop    es
  42041e:	lods   al,BYTE PTR ds:[esi]
  42041f:	xchg   DWORD PTR [ecx],eax
  420421:	int    0x30
  420423:	sbb    al,0x80
  420425:	jno    0x420427
  420427:	add    BYTE PTR [eax+ebp*1],dl
  42042a:	lea    ebp,[ebp+0x51515458]
  420430:	jmp    0x2574:0xc056fb2d
  420437:	fstp   st(4)
  420439:	mov    esi,0xbdd44618
  42043e:	inc    ebp
  42043f:	add    eax,0x31e97863
  420444:	addr16 daa 
  420446:	sti    
  420447:	fs repz aaa 
  42044a:	test   cl,bl
  42044c:	aad    0x27
  42044e:	sti    
  42044f:	ins    BYTE PTR es:[edi],dx
  420450:	outs   dx,DWORD PTR ds:[esi]
  420451:	push   esp
  420452:	sbb    DWORD PTR [ecx+0xfe89f9c],edi
  420458:	xchg   esp,eax
  420459:	mov    esp,0xa3606cd9
  42045e:	inc    edx
  42045f:	jb     0x420478
  420461:	push   esp
  420462:	sbb    DWORD PTR [esp+edx*4-0x5d],ebp
  420466:	cmp    BYTE PTR [edx+0x60],ah
  420469:	mov    ah,0x65
  42046b:	or     eax,0x3967345b
  420470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420471:	jae    0x420498
  420473:	add    ecx,esp
  420475:	daa    
  420476:	dec    ebx
  420477:	shl    DWORD PTR [ebp-0x4616ffa4],0xf3
  42047e:	or     eax,0x45bb3953
  420483:	or     eax,0xae517e33
  420488:	iret   
  420489:	aaa    
  42048a:	adc    ebp,DWORD PTR [ecx]
  42048c:	add    BYTE PTR [eax],al
  42048e:	cmp    esi,DWORD PTR [ebp+0x73a7edc5]
  420494:	and    eax,0x5f0fe4c9
  420499:	mov    WORD PTR ds:0xd0007f28,ss
  42049f:	dec    ecx
  4204a0:	dec    esp
  4204a1:	jne    0x42048a
  4204a3:	fsubrp st(2),st
  4204a5:	adc    DWORD PTR [edi-0x6e],esp
  4204a8:	std    
  4204a9:	push   0xfffb0cce
  4204ae:	sbb    DWORD PTR [ebp+ebx*8-0x2a],ecx
  4204b2:	int    0x33
  4204b4:	cld    
  4204b5:	adc    eax,0x3b20fa
  4204ba:	cmp    ebp,DWORD PTR [esi]
  4204bc:	cli    
  4204bd:	dec    DWORD PTR [esi+0x42]
  4204c0:	test   DWORD PTR [ebx+0x19],edi
  4204c3:	xchg   edx,eax
  4204c4:	std    
  4204c5:	call   DWORD PTR [edx+0x47e81d4f]
  4204cb:	cmp    edx,0xffffffff
  4204ce:	pop    ebp
  4204cf:	jae    0x42052e
  4204d1:	pop    esi
  4204d2:	jne    0x42048a
  4204d4:	fistp  WORD PTR [ebp+0x5c]
  4204d7:	das    
  4204d8:	add    DWORD PTR [ebp-0x6b],edx
  4204db:	xchg   edi,eax
  4204dc:	sub    esp,0x5754ddd2
  4204e2:	sbb    edi,edi
  4204e4:	push   es
  4204e5:	lea    ebp,[ebx+0x1675fdc6]
  4204eb:	mov    dh,0xea
  4204ed:	call   0x3f91cd
  4204f2:	add    BYTE PTR [eax],al
  4204f4:	lea    ecx,[edi]
  4204f6:	repz add BYTE PTR [ebx-0x11],bl
  4204fa:	not    BYTE PTR [eax-0xa]
  4204fd:	pop    esi
  4204fe:	loop   0x4204fe
  420500:	stc    
  420501:	mov    eax,0x383b89d2
  420506:	jle    0x4204e3
  420508:	adc    esi,DWORD PTR ds:0xe05a4586
  42050e:	xor    eax,eax
  420510:	push   cs
  420511:	cwde   
  420512:	sti    
  420513:	lock cwde 
  420515:	xchg   esp,eax
  420516:	mov    al,bl
  420518:	aaa    
  420519:	nop
  42051a:	shl    bh,cl
  42051c:	lahf   
  42051d:	les    edi,FWORD PTR [eax]
  42051f:	std    
  420520:	mov    al,ds:0x7489bf4d
  420525:	push   ecx
  420526:	inc    esi
  420527:	sar    DWORD PTR [edi],0x1d
  42052a:	mov    ?,WORD PTR [edx-0x75]
  42052d:	cdq    
  42052e:	loop   0x42053b
  420530:	aaa    
  420531:	cwde   
  420532:	push   edi
  420533:	jae    0x42057a
  420535:	cwde   
  420536:	fdiv   QWORD PTR ds:0x4f3ed7c2
  42053c:	mov    edx,0x4f4f50cd
  420541:	adc    esp,DWORD PTR [ebp-0x1]
  420544:	pop    eax
  420545:	pop    DWORD PTR [ebp+0x72]
  420548:	and    al,0xf7
  42054a:	lea    eax,[ecx+edx*8]
  42054d:	and    esp,eax
  42054f:	icebp  
  420550:	retf   0xe922
  420553:	mov    al,dh
  420555:	sbb    ch,cl
  420557:	cmp    BYTE PTR [eax],al
  420559:	add    BYTE PTR [edx+0x47],bh
  42055c:	(bad)  [edx+0x28]
  42055f:	ror    DWORD PTR [edx],1
  420561:	cmp    eax,0x2b7317f1
  420567:	test   eax,0xe209682f
  42056c:	mov    eax,DWORD PTR [edx-0x35]
  42056f:	retf   
  420570:	in     al,dx
  420571:	cmp    DWORD PTR [eax+eiz*4-0x25],ebx
  420575:	sti    
  420576:	stos   BYTE PTR es:[edi],al
  420577:	push   eax
  420578:	or     eax,0xff0e7ac6
  42057d:	xchg   BYTE PTR [edx-0x9],ah
  420580:	iretw  
  420582:	aas    
  420583:	out    dx,al
  420584:	popa   
  420585:	xor    bh,0x5f
  420588:	xrelease mov BYTE PTR [edx-0x21],bh
  42058c:	adc    eax,0x61eac0d2
  420591:	jb     0x4205c2
  420593:	xor    al,0x90
  420595:	test   eax,ecx
  420597:	es pushf 
  420599:	mov    esi,ebp
  42059b:	xor    al,0x93
  42059d:	(bad)  
  42059e:	xor    BYTE PTR [ebp*8+0x6f25a3fb],bl
  4205a5:	mov    esi,0x60f91b2b
  4205aa:	xchg   ebx,eax
  4205ab:	and    eax,0x4c3a6c18
  4205b0:	imul   esp,DWORD PTR [eax+0x46],0x9
  4205b4:	push   edx
  4205b5:	in     al,0x7b
  4205b7:	and    eax,0x23bfb95c
  4205bc:	outs   dx,BYTE PTR ds:[esi]
  4205bd:	pop    ecx
  4205be:	add    BYTE PTR [eax],al
  4205c0:	cmp    esi,DWORD PTR [eax+0x34370366]
  4205c6:	outs   dx,BYTE PTR ds:[esi]
  4205c7:	stc    
  4205c8:	mov    ah,0x2
  4205ca:	mov    ch,0xdf
  4205cc:	jmp    0x42062e
  4205ce:	and    DWORD PTR [edx+ecx*2],edx
  4205d1:	mov    ah,0x2e
  4205d3:	adc    eax,esp
  4205d5:	inc    eax
  4205d6:	outs   dx,BYTE PTR ds:[esi]
  4205d7:	mov    ecx,0xdb1ea539
  4205dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205dd:	das    
  4205de:	push   0xe29f805d
  4205e3:	in     eax,dx
  4205e4:	xor    al,0xb1
  4205e6:	sub    al,BYTE PTR ds:0xf96e817a
  4205ec:	mov    ebp,0xf831889
  4205f1:	cmp    esi,DWORD PTR [ebx-0xd]
  4205f4:	call   0xe512:0xb932a235
  4205fb:	in     eax,0x37
  4205fd:	cli    
  4205fe:	dec    edx
  4205ff:	adc    ecx,0x63
  420602:	mov    edi,0x8389ac2e
  420607:	test   bh,bl
  420609:	cs xor esi,esp
  42060c:	pop    edx
  42060d:	xor    eax,0xe6057701
  420612:	loopne 0x4205f9
  420614:	fidiv  DWORD PTR [ebx]
  420616:	(bad)  
  420617:	lfs    ecx,FWORD PTR ds:0xb9a99233
  42061e:	push   edi
  42061f:	jbe    0x4205d4
  420621:	sub    eax,DWORD PTR ds:0x9f000016
  420627:	mov    cs,WORD PTR [edx]
  420629:	inc    edi
  42062a:	gs out 0xe0,al
  42062d:	in     eax,0x9a
  42062f:	xor    eax,edi
  420631:	lfs    ecx,FWORD PTR ds:0xeda9de53
  420638:	inc    ebx
  420639:	push   edx
  42063a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42063b:	mov    eax,DWORD PTR [ebp+0x7e338f3b]
  420641:	xor    cl,BYTE PTR es:[esi-0x10521e78]
  420648:	pop    edx
  420649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42064a:	cmc    
  42064b:	arpl   ax,cx
  42064d:	sar    DWORD PTR [esi+ecx*4],cl
  420650:	mov    cl,ah
  420652:	mov    WORD PTR [esi-0x5efa9b42],es
  420658:	push   ebp
  420659:	jae    0x420688
  42065b:	mov    al,0xc8
  42065d:	xchg   ebp,eax
  42065e:	add    ah,BYTE PTR [ebp-0x3f]
  420661:	imul   ecx,DWORD PTR [edx+0xee4744e],0x2e125936
  42066b:	mov    ah,0xf8
  42066d:	shr    bh,cl
  42066f:	and    al,BYTE PTR [ecx-0x61]
  420672:	and    eax,0xb4d6e72a
  420677:	sub    bh,BYTE PTR [ecx]
  420679:	data16 cli 
  42067b:	mov    ebx,?
  42067d:	repz fidiv DWORD PTR [eax]
  420680:	mov    ebx,0xf034d2a0
  420685:	inc    edi
  420686:	mov    ah,0x11
  420688:	xor    al,BYTE PTR [eax]
  42068a:	add    BYTE PTR [eax],al
  42068c:	loope  0x420658
  42068e:	hlt    
  42068f:	inc    edx
  420690:	inc    esp
  420691:	sub    eax,0x14cef981
  420696:	loope  0x42061c
  420698:	xchg   edi,eax
  420699:	or     eax,DWORD PTR [edx]
  42069b:	add    DWORD PTR [esi-0x1f48f3c8],0xffffffcf
  4206a2:	add    BYTE PTR [eax+ebx*4+0x10],dh
  4206a6:	(bad)  
  4206a7:	push   DWORD PTR [ecx+0x27660137]
  4206ad:	xor    bl,BYTE PTR [ebx-0x3d]
  4206b0:	int    0x77
  4206b2:	push   0x5b13808
  4206b7:	pop    eax
  4206b8:	int    0xac
  4206ba:	hlt    
  4206bb:	je     0x4206ed
  4206bd:	scas   eax,DWORD PTR es:[edi]
  4206be:	pop    es
  4206bf:	xor    BYTE PTR [esi],ch
  4206c1:	idiv   dl
  4206c3:	xor    bl,BYTE PTR [esi]
  4206c5:	lods   al,BYTE PTR ds:[esi]
  4206c6:	ret    
  4206c7:	je     0x420725
  4206c9:	scas   al,BYTE PTR es:[edi]
  4206ca:	cvttps2pi mm7,QWORD PTR [esi]
  4206cd:	idiv   dl
  4206cf:	cmp    BYTE PTR [ebx+ecx*1+0xa],cl
  4206d3:	inc    eax
  4206d4:	fnsave [edx+eiz*1+0x3b]
  4206d8:	syscall 
  4206da:	out    dx,eax
  4206db:	add    DWORD PTR [esi],0xffffff82
  4206de:	rcl    DWORD PTR [ebx-0x15],0xad
  4206e2:	data16 and al,0x12
  4206e5:	mov    dh,0xc2
  4206e7:	(bad)  
  4206e8:	std    
  4206e9:	pop    ebp
  4206ea:	push   ebp
  4206eb:	mov    esi,DWORD PTR [esi]
  4206ed:	ds call 0x9a420702
  4206f3:	mov    ebx,0xae1efffa
  4206f8:	pop    es
  4206f9:	xor    BYTE PTR [esi],bl
  4206fb:	idiv   dl
  4206fd:	xor    cl,dh
  4206ff:	jmp    0x57cad23d
  420704:	mov    BYTE PTR ds:0x40353937,dl
  42070a:	aaa    
  42070b:	xchg   esi,eax
  42070c:	dec    edi
  42070d:	cmp    DWORD PTR ss:[ecx+0x7],esp
  420711:	inc    eax
  420712:	mov    ah,0xda
  420714:	sub    eax,0x595ef639
  420719:	call   0x68979d4a
  42071e:	rol    DWORD PTR [edx+eax*1],0xf2
  420722:	mov    esp,0xf628d2d4
  420727:	xor    eax,0xe0e12746
  42072c:	cs inc eax
  42072e:	aaa    
  42072f:	lds    esi,FWORD PTR [edx]
  420731:	adc    dl,BYTE PTR [eax+0x3bf89a1]
  420737:	dec    esp
  420738:	mov    BYTE PTR [edx],bh
  42073a:	inc    edi
  42073b:	mov    ebp,0xf79ffc0
  420740:	(bad)  
  420742:	hlt    
  420743:	or     al,0x8a
  420745:	hlt    
  420746:	fadd   QWORD PTR [edx+0x212a012d]
  42074c:	das    
  42074d:	inc    eax
  42074e:	aaa    
  42074f:	loope  0x420777
  420751:	push   ecx
  420752:	in     al,0xbd
  420754:	mov    cl,0x86
  420756:	add    BYTE PTR [eax],al
  420758:	sbb    DWORD PTR [ebp+0x74003bb],edx
  42075e:	xor    edx,DWORD PTR [ecx]
  420760:	test   DWORD PTR [edx+eax*4],0x8642534d
  420767:	inc    ebp
  420768:	aas    
  420769:	xchg   esp,eax
  42076a:	mov    ebx,0xeed1ae0b
  42076f:	xchg   BYTE PTR [ecx-0x1],bh
  420772:	xchg   DWORD PTR [ebp+0x2f],ebx
  420775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420776:	mov    ebx,0x22c9be1f
  42077b:	mov    eax,edi
  42077d:	mov    cl,0xbd
  42077f:	pop    edx
  420780:	pop    esp
  420781:	xor    al,0xa6
  420783:	pop    es
  420784:	aaa    
  420785:	mov    ch,BYTE PTR [edi+0x53]
  420788:	pop    edi
  420789:	sub    al,BYTE PTR [ecx]
  42078b:	add    DWORD PTR [eax+edx*2],esp
  42078e:	mov    eax,0xc38ad8c0
  420793:	aad    0x38
  420795:	mov    ch,0x2
  420797:	add    al,0xca
  420799:	inc    edi
  42079a:	mov    al,ds:0xab3400f1
  42079f:	aad    0x2c
  4207a1:	or     al,0xd1
  4207a3:	cmc    
  4207a4:	mov    bl,0x21
  4207a6:	pushf  
  4207a7:	aad    0x38
  4207a9:	lods   eax,DWORD PTR ds:[esi]
  4207aa:	sub    bh,al
  4207ac:	cwde   
  4207ad:	push   ds
  4207ae:	aas    
  4207af:	pop    esp
  4207b0:	fwait
  4207b1:	and    ebx,edi
  4207b3:	sti    
  4207b4:	cwde   
  4207b5:	inc    edi
  4207b6:	rcr    BYTE PTR [ebx+ecx*4-0x53],cl
  4207ba:	cli    
  4207bb:	daa    
  4207bc:	add    BYTE PTR [eax],al
  4207be:	mov    ah,0x2a
  4207c0:	cmc    
  4207c1:	add    eax,0x313e0be1
  4207c6:	jb     0x4207e9
  4207c8:	mov    dl,BYTE PTR [ebx]
  4207ca:	xchg   DWORD PTR [ebp-0x18],esi
  4207cd:	mov    BYTE PTR [eax-0x49],ch
  4207d0:	sub    bh,dl
  4207d2:	cmc    
  4207d3:	lods   al,BYTE PTR ds:[esi]
  4207d4:	(bad)  [edi]
  4207d6:	addr16 jne 0x4207c1
  4207d9:	mov    BYTE PTR [eax-0x73],dh
  4207dc:	and    DWORD PTR [ebx],ebp
  4207de:	lods   al,BYTE PTR ds:[esi]
  4207df:	jo     0x4207ba
  4207e1:	cmp    esi,DWORD PTR [edi+0x3ad6e85b]
  4207e7:	mov    ch,0x11
  4207e9:	sub    edi,DWORD PTR [edx-0x59]
  4207ec:	sbb    eax,0xc3a81f18
  4207f1:	xchg   BYTE PTR [ebx],bl
  4207f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207f4:	repnz mov cl,0x18
  4207f7:	pop    es
  4207f8:	(bad)  
  4207f9:	pop    esp
  4207fa:	or     edx,DWORD PTR [ebx+0x1]
  4207fd:	mov    ah,0x50
  4207ff:	add    al,0x3f
  420801:	jmp    0xb6c83895
  420806:	loopne 0x420801
  420808:	sub    DWORD PTR [edi-0x16c0fbe1],ebx
  42080e:	dec    esp
  42080f:	sbb    eax,0xba7cce16
  420814:	cmp    al,0xf9
  420816:	add    al,0x74
  420818:	add    DWORD PTR [esi],ebx
  42081a:	(bad)  
  42081b:	repz push esp
  42081d:	bound  ecx,QWORD PTR [edi+0x72]
  420820:	push   eax
  420821:	pop    ss
  420822:	add    BYTE PTR [eax],al
  420824:	fwait
  420825:	js     0x42088c
  420827:	sub    bh,BYTE PTR [ebx]
  420829:	pop    ds
  42082a:	shl    BYTE PTR [eax+0x76],cl
  42082d:	sub    dl,ch
  42082f:	mov    esp,0x6201343e
  420834:	xchg   BYTE PTR [eax],bh
  420836:	test   DWORD PTR [ecx-0x167d47c4],ebp
  42083c:	xor    al,0x34
  42083e:	xchg   BYTE PTR [ebx+ecx*4],ch
  420841:	mov    bl,0xf9
  420843:	mov    edx,0x617e6768
  420848:	jne    0x4207ee
  42084a:	das    
  42084b:	push   0xb
  42084d:	xchg   ebp,eax
  42084e:	jne    0x420854
  420850:	mov    eax,0x84d46c28
  420855:	stos   DWORD PTR es:[edi],eax
  420856:	dec    esp
  420857:	fnstsw WORD PTR [ecx-0x4e16026b]
  42085d:	xchg   ebp,eax
  42085e:	or     ecx,ebp
  420860:	scas   eax,DWORD PTR es:[edi]
  420861:	jne    0x42086c
  420863:	cdq    
  420864:	scas   eax,DWORD PTR es:[edi]
  420865:	jne    0x420864
  420867:	mov    ecx,0xb719a28d
  42086c:	pushf  
  42086d:	in     al,dx
  42086e:	push   es
  42086f:	jmp    0x9503bba8
  420874:	in     al,0x89
  420876:	jmp    0xfb66057b
  42087b:	jmp    DWORD PTR ds:0x495751f0
  420881:	and    al,0xcb
  420883:	inc    ebx
  420884:	push   cs
  420885:	jecxz  0x420884
  420887:	adc    eax,0x29f60000
  42088c:	cmp    eax,DWORD PTR [eax]
  42088e:	push   es
  42088f:	xor    bl,bh
  420891:	dec    DWORD PTR [ecx]
  420893:	dec    edx
  420894:	fadd   DWORD PTR [ebx+0x1b6e7b06]
  42089a:	inc    ebp
  42089b:	sub    al,0x2d
  42089d:	rcr    BYTE PTR ds:0x36c06838,1
  4208a3:	inc    eax
  4208a4:	pop    ebp
  4208a5:	or     dl,dl
  4208a7:	out    dx,eax
  4208a8:	push   es
  4208a9:	call   DWORD PTR [edx+0x30]
  4208ac:	or     edi,edi
  4208ae:	mov    ds:0x8e40108b,eax
  4208b3:	jge    0x420876
  4208b5:	push   edi
  4208b6:	test   eax,0x5e12d724
  4208bb:	cmp    BYTE PTR [esp+eax*4-0x2b],bl
  4208bf:	fisubr WORD PTR [esi+0x6]
  4208c2:	or     eax,0x82640afc
  4208c7:	and    edi,esi
  4208c9:	jne    0x420901
  4208cb:	jnp    0x42093c
  4208cd:	adc    al,0x9
  4208cf:	add    al,0xb
  4208d1:	inc    DWORD PTR [ebx-0x5c00acc9]
  4208d7:	jnp    0x420935
  4208d9:	leave  
  4208da:	sbb    al,0xf
  4208dc:	sti    
  4208dd:	push   eax
  4208de:	lods   eax,DWORD PTR ds:[esi]
  4208df:	in     al,0x89
  4208e1:	fnstcw WORD PTR ds:0x83dd398c
  4208e7:	xor    ch,BYTE PTR [edi]
  4208e9:	rol    BYTE PTR [edi+0x37],0xfa
  4208ed:	inc    DWORD PTR [eax]
  4208ef:	add    BYTE PTR [esi],bl
  4208f1:	or     ebp,ebx
  4208f3:	iret   
  4208f4:	aaa    
  4208f5:	retf   0xfcfe
  4208f8:	inc    edx
  4208f9:	gs hlt 
  4208fb:	aas    
  4208fc:	aaa    
  4208fd:	dec    edi
  4208fe:	mov    edx,0x1e0d3c23
  420903:	sub    ebp,DWORD PTR [edi]
  420905:	cmp    eax,0x383ffc3
  42090a:	mov    dl,0x52
  42090c:	pop    edi
  42090d:	or     al,0xff
  42090f:	add    esi,DWORD PTR [edi]
  420911:	(bad)  
  420912:	jmp    0x2fa1:0x54d4567
  420919:	ffree  st(4)
  42091b:	dec    DWORD PTR ds:0xfc8408d0
  420921:	or     al,0xff
  420923:	jmp    FWORD PTR [edi+edx*1+0xd74cfef]
  42092a:	push   ss
  42092b:	shr    BYTE PTR [eax+ebp*8-0x31],0x13
  420930:	mov    esp,0xf4d00327
  420935:	or     al,0x18
  420937:	sbb    al,0xb5
  420939:	std    
  42093a:	jp     0x4208c4
  42093c:	aaa    
  42093d:	or     eax,0xcc4c3fff
  420942:	shr    ebx,cl
  420944:	jmp    0x33cd12e0
  420949:	or     eax,0x28b1ffff
  42094e:	das    
  42094f:	inc    eax
  420950:	aaa    
  420951:	test   DWORD PTR [esi],edi
  420953:	adc    BYTE PTR [eax],al
  420955:	add    BYTE PTR [eax-0x7b],ah
  420958:	cmp    DWORD PTR [edi-0x8a66d8],0xfa00c50
  420962:	addr16 leave 
  420964:	dec    BYTE PTR [eax+0x402f1932]
  42096a:	aaa    
  42096b:	xchg   edx,eax
  42096c:	or     bh,BYTE PTR [eax+0x45]
  42096f:	xor    al,0xa8
  420971:	add    eax,DWORD PTR [edx+0x3c8ac78a]
  420977:	mov    bl,0x13
  420979:	jmp    FWORD PTR [eax]
  42097b:	add    al,0xa8
  42097d:	add    esp,DWORD PTR [ebp+ebx*1-0x42]
  420981:	or     esp,edi
  420983:	jno    0x42096d
  420985:	pop    eax
  420986:	jmp    0x8da8:0xfc1cf0a9
  42098d:	in     eax,dx
  42098e:	aas    
  42098f:	xchg   ebx,esp
  420991:	push   cs
  420992:	aas    
  420993:	add    al,0x28
  420995:	add    al,0xe2
  420997:	push   es
  420998:	pusha  
  420999:	push   ebx
  42099a:	pop    ds
  42099b:	daa    
  42099c:	pusha  
  42099d:	es dec ebx
  42099f:	inc    edx
  4209a0:	sub    BYTE PTR [ebx+eax*2],al
  4209a3:	pop    ecx
  4209a4:	dec    esi
  4209a5:	add    al,0x6a
  4209a7:	xchg   BYTE PTR [edx+0x2aab7d01],ch
  4209ad:	add    edi,DWORD PTR [ecx+0x76]
  4209b0:	in     eax,dx
  4209b1:	jmp    0x420a26
  4209b3:	jbe    0x420997
  4209b5:	sub    BYTE PTR [ebx+0x41e873],al
  4209bb:	add    dl,dh
  4209bd:	sub    DWORD PTR [edi-0x16c1c195],esp
  4209c3:	add    esi,DWORD PTR [esp+esi*8+0x787909f4]
  4209ca:	int3   
  4209cb:	hlt    
  4209cc:	jns    0x4209d8
  4209ce:	enter  0xf441,0x57
  4209d2:	out    dx,eax
  4209d3:	add    bl,BYTE PTR [esi+0x3e]
  4209d6:	mov    dl,0xed
  4209d8:	pusha  
  4209d9:	push   ds
  4209da:	push   ds
  4209db:	or     al,0x87
  4209dd:	jno    0x4209c7
  4209df:	pop    eax
  4209e0:	gs test esi,ecx
  4209e3:	add    ecx,DWORD PTR [edx+0x67]
  4209e6:	lock xor esi,edi
  4209e9:	xor    eax,DWORD PTR [ecx]
  4209eb:	or     DWORD PTR ss:[eax],esp
  4209ee:	or     eax,0x17464d9
  4209f3:	(bad)  
  4209f4:	out    dx,al
  4209f5:	xchg   esp,eax
  4209f6:	icebp  
  4209f7:	cs sti 
  4209f9:	sbb    al,0xfc
  4209fb:	cld    
  4209fc:	pusha  
  4209fd:	inc    ebx
  4209fe:	inc    ecx
  4209ff:	jmp    0xf2677ac6
  420a04:	sar    DWORD PTR [ebx+0x58],0x2a
  420a08:	shr    DWORD PTR [ebx+0x29906aed],1
  420a0e:	dec    esi
  420a0f:	xchg   edi,eax
  420a10:	ret    
  420a11:	popa   
  420a12:	popa   
  420a13:	cld    
  420a14:	hlt    
  420a15:	sbb    al,0x54
  420a17:	push   ebx
  420a18:	aaa    
  420a19:	stos   DWORD PTR es:[edi],eax
  420a1a:	fnstenv [esi]
  420a1c:	scas   al,BYTE PTR es:[edi]
  420a1d:	jno    0x420a1c
  420a1f:	cmp    DWORD PTR [eax],eax
  420a21:	add    BYTE PTR [esi-0x22e60a8f],bh
  420a27:	sbb    eax,0x18de7050
  420a2c:	sti    
  420a2d:	lahf   
  420a2e:	mov    dh,0xdc
  420a30:	jne    0x420a0b
  420a32:	mov    ebp,0xfa6cf569
  420a37:	mov    al,ds:0x1ecd9108
  420a3c:	sti    
  420a3d:	xchg   esi,eax
  420a3e:	mov    bh,0xdc
  420a40:	jne    0x420a30
  420a42:	mov    edi,0xbe19fd71
  420a47:	jno    0x420a42
  420a49:	sbb    DWORD PTR [ebp+0x5e604e41],ecx
  420a4f:	sbb    bl,bh
  420a51:	xchg   edi,eax
  420a52:	mov    dh,0xdc
  420a54:	jne    0x420a4c
  420a56:	mov    ch,0x99
  420a58:	stc    
  420a59:	jmp    0xb4c83fce
  420a5e:	cld    
  420a5f:	or     edi,DWORD PTR [ebp+0xbfb1b]
  420a65:	add    dh,cl
  420a67:	ss pop esp
  420a69:	pop    esi
  420a6a:	xchg   ebp,eax
  420a6b:	outs   dx,DWORD PTR ds:[esi]
  420a6c:	rcl    DWORD PTR [ebp-0x2d],0xb
  420a70:	pop    ds
  420a71:	mov    BYTE PTR [edi+0x1e016e8c],bl
  420a77:	cmp    BYTE PTR [eax+0x56],dl
  420a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a7b:	inc    ebp
  420a7c:	in     eax,0x12
  420a7e:	into   
  420a7f:	aaa    
  420a80:	push   esp
  420a81:	xor    eax,DWORD PTR [ecx+0x8]
  420a84:	(bad)  
  420a86:	add    BYTE PTR [eax],al
  420a88:	fnsave [edi]
  420a8a:	mov    al,bl
  420a8c:	xchg   DWORD PTR ds:0x37cdd02d,edi
  420a92:	cmp    BYTE PTR ds:0x4167ae,0xd1
  420a99:	dec    ecx
  420a9a:	push   0xeac32924
  420a9f:	iret   
  420aa0:	or     eax,0xcbff5430
  420aa5:	pop    ds
  420aa6:	adc    eax,0xbeb6de40
  420aab:	or     al,0x29
  420aad:	adc    esp,0xffffff80
  420ab0:	ret    
  420ab1:	pop    es
  420ab2:	iret   
  420ab3:	inc    ebx
  420ab4:	sahf   
  420ab5:	xor    BYTE PTR [esi+eax*4],cl
  420ab8:	add    eax,0x1b000130
  420abd:	pop    esi
  420abe:	outs   dx,BYTE PTR ds:[esi]
  420abf:	aaa    
  420ac0:	sub    BYTE PTR [edi+0x412a0039],dh
  420ac6:	addr16 aas 
  420ac8:	add    eax,DWORD PTR [ebx+ecx*2]
  420acb:	pop    eax
  420acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420acd:	mov    eax,0xd8e0106
  420ad2:	cmp    eax,0x525f6b8d
  420ad7:	call   0x3c3e9c
  420adc:	popf   
  420add:	or     BYTE PTR [edi],0x98
  420ae0:	aaa    
  420ae1:	pop    ds
  420ae2:	mov    edi,0xfed1c3ff
  420ae7:	add    edi,esp
  420ae9:	mov    ebp,0xfee8
  420aee:	mov    bl,0xd0
  420af0:	scas   al,BYTE PTR es:[edi]
  420af1:	dec    edi
  420af2:	lods   al,BYTE PTR ds:[esi]
  420af3:	dec    ebx
  420af4:	scas   al,BYTE PTR es:[edi]
  420af5:	out    0xdc,eax
  420af7:	jne    0x420af7
  420af9:	call   FWORD PTR [ebp-0x48d7633]
  420aff:	hlt    
  420b00:	xchg   WORD PTR [ebx],bp
  420b03:	or     al,0xff
  420b05:	imul   esi,DWORD PTR [esi+0x78],0x456f53d1
  420b0c:	(bad)  [ebx]
  420b0e:	ss or  eax,0x97aa41e9
  420b14:	push   cs
  420b15:	pop    eax
  420b16:	fistp  WORD PTR [esi-0x601700fe]
  420b1c:	mov    edx,0xed4fae53
  420b21:	mov    cl,dh
  420b23:	xchg   ebx,eax
  420b24:	mov    edx,0xed7fc26b
  420b29:	les    esi,FWORD PTR [edx+0x59]
  420b2c:	(bad)  
  420b2d:	push   DWORD PTR [edi]
  420b2f:	or     eax,0x90641d8a
  420b34:	mov    edx,0xfe8a07c3
  420b39:	push   DWORD PTR [edi]
  420b3b:	lea    ecx,[eax+0x67d88fc4]
  420b41:	call   FWORD PTR [eax+0x29734587]
  420b47:	mov    ds,edx
  420b49:	outs   dx,DWORD PTR ds:[esi]
  420b4a:	aaa    
  420b4b:	inc    edi
  420b4c:	add    DWORD PTR [ebx+0x69af1cfa],ecx
  420b52:	add    BYTE PTR [eax],al
  420b54:	xor    edi,DWORD PTR [esi]
  420b56:	add    BYTE PTR [edx+0x7b],0x3c
  420b5a:	ins    DWORD PTR es:[edi],dx
  420b5b:	inc    edi
  420b5c:	pop    esp
  420b5d:	xor    ebp,eax
  420b5f:	add    esi,DWORD PTR [esi-0x12ab1b0f]
  420b65:	lahf   
  420b66:	fisttp QWORD PTR [eax-0x22]
  420b69:	jbe    0x420bc8
  420b6b:	iret   
  420b6c:	fs jnp 0x420bbf
  420b6f:	imul   DWORD PTR [esi*1-0x570b1618]
  420b76:	mov    ebp,0xd70c88c7
  420b7b:	pop    es
  420b7c:	sub    BYTE PTR [edx],bl
  420b7e:	jbe    0x420b3f
  420b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b81:	test   BYTE PTR [esi-0x480299fe],cl
  420b87:	xchg   BYTE PTR [ebp+0x0],dh
  420b8a:	mov    ecx,0x7c97b1ac
  420b8f:	push   esp
  420b90:	and    eax,0xf8c3d880
  420b95:	mov    al,0x28
  420b97:	iret   
  420b98:	cmp    eax,0xbdb422ad
  420b9d:	lahf   
  420b9e:	pop    esp
  420b9f:	ins    BYTE PTR es:[edi],dx
  420ba0:	add    ecx,DWORD PTR [esi]
  420ba2:	jmp    0x1678d9aa
  420ba7:	inc    esp
  420ba8:	mov    ah,0xf4
  420baa:	push   esp
  420bab:	icebp  
  420bac:	mov    ebp,0xadb4346f
  420bb1:	outs   dx,DWORD PTR ds:[esi]
  420bb2:	xchg   esp,eax
  420bb3:	mov    bl,0xaf
  420bb5:	icebp  
  420bb6:	rcr    ah,0x0
  420bb9:	add    BYTE PTR [esi-0x178117cc],bl
  420bbf:	mov    al,ds:0xa734ea00
  420bc4:	and    eax,0xec8de8d4
  420bc9:	xchg   ch,dh
  420bcb:	cmp    BYTE PTR [bx-0xb],al
  420bd0:	sbb    BYTE PTR [ebx+0x3290a3dd],cl
  420bd6:	mov    ?,WORD PTR [ecx+eax*1]
  420bd9:	jmp    0xf4ce823c
  420bde:	enter  0xe981,0x97
  420be2:	das    
  420be3:	sbb    ebx,edi
  420be5:	rcr    DWORD PTR [edx-0x6cee8b52],cl
  420beb:	adc    DWORD PTR [edi+0x673435e2],ebx
  420bf1:	scas   al,BYTE PTR es:[edi]
  420bf2:	mov    ecx,0xcca15da6
  420bf7:	rol    BYTE PTR [esi],0xe8
  420bfa:	xor    al,0xad
  420bfc:	inc    esp
  420bfd:	icebp  
  420bfe:	mov    ebp,0x62724575
  420c03:	mov    dl,0x44
  420c05:	mov    cl,0xad
  420c07:	jge    0x420c7e
  420c09:	ror    DWORD PTR cs:[eax+0x3434e904],1
  420c10:	cli    
  420c11:	jl     0x420c03
  420c13:	lods   eax,DWORD PTR ds:[esi]
  420c14:	inc    esp
  420c15:	inc    ebp
  420c16:	les    ecx,FWORD PTR [edx-0x22466db6]
  420c1c:	add    eax,0x840000ee
  420c21:	sbb    dl,ch
  420c23:	aaa    
  420c24:	xchg   DWORD PTR [edi],edx
  420c26:	sti    
  420c27:	inc    eax
  420c28:	mov    dh,BYTE PTR [ebp-0x71d9a83f]
  420c2e:	call   FWORD PTR [ebx-0x1a]
  420c31:	je     0x420c8e
  420c33:	jb     0x420bf9
  420c35:	or     DWORD PTR [esp+eiz*2-0x4904e8d1],0xffffffeb
  420c3d:	loopne 0x420c3f
  420c3f:	jmp    0x8a2bc078
  420c44:	add    bl,BYTE PTR [ecx]
  420c46:	sti    
  420c47:	rep movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  420c4a:	sbb    BYTE PTR [edx-0x62],ch
  420c4d:	mov    WORD PTR [ecx],es
  420c4f:	add    edi,DWORD PTR [edi]
  420c51:	lods   eax,DWORD PTR ds:[esi]
  420c52:	inc    esp
  420c53:	add    BYTE PTR [edx],ch
  420c55:	loopne 0x420cbf
  420c57:	add    al,0x1d
  420c59:	mov    bl,0x7f
  420c5b:	add    al,0xe9
  420c5d:	test   ch,bh
  420c5f:	push   eax
  420c60:	mov    dh,0xd6
  420c62:	call   0xc5f35a67
  420c67:	add    al,0x88
  420c69:	sti    
  420c6a:	ret    
  420c6b:	jmp    DWORD PTR [ebx+0x6e4dfe00]
  420c71:	sti    
  420c72:	call   0x76c5:0x81c9985f
  420c79:	push   edi
  420c7a:	rcl    DWORD PTR [ebp-0x6b],0x94
  420c7e:	jnp    0x420c6c
  420c80:	(bad)  
  420c81:	sbb    edi,ebx
  420c83:	inc    DWORD PTR [eax]
  420c85:	add    ch,bl
  420c87:	fnsave [ecx]
  420c89:	fcmovnu st,st(5)
  420c8b:	sub    BYTE PTR [edi+0x8],0x9b
  420c8f:	std    
  420c90:	fimul  WORD PTR [ecx+0x6e267db]
  420c96:	mov    ecx,0x4e84fd82
  420c9b:	xor    eax,DWORD PTR [ebp+0x133df41]
  420ca1:	push   ebx
  420ca2:	mov    ah,0x30
  420ca4:	xchg   BYTE PTR [ebp+0x2],al
  420ca7:	in     al,0xfd
  420ca9:	jne    0x420c9d
  420cab:	xchg   esi,eax
  420cac:	aas    
  420cad:	call   0xff319ca8
  420cb2:	stc    
  420cb3:	xchg   esi,eax
  420cb4:	jmp    0xf675:0x838c138d
  420cbb:	jnp    0x420c5d
  420cbd:	jg     0x420ca8
  420cbf:	add    BYTE PTR [ecx-0x7acd2602],0x19
  420cc6:	(bad)  
  420cc7:	xor    eax,DWORD PTR [ecx]
  420cc9:	push   edi
  420cca:	inc    esp
  420ccb:	sbb    DWORD PTR [edx],esi
  420ccd:	shl    BYTE PTR [edi],cl
  420ccf:	xchg   edx,eax
  420cd0:	dec    eax
  420cd1:	push   esi
  420cd2:	cmp    BYTE PTR [ecx+ecx*4+0x4b8830d1],0xff
  420cda:	js     0x420ce9
  420cdc:	fld    QWORD PTR [edi-0x3e]
  420cdf:	and    BYTE PTR [ebx+0x57],ah
  420ce2:	pop    edi
  420ce3:	or     ebp,edi
  420ce5:	(bad)  
  420ce6:	pusha  
  420ce7:	add    edi,DWORD PTR [esi-0x25ffff76]
  420ced:	je     0x420c95
  420cef:	out    0xc6,eax
  420cf1:	adc    al,BYTE PTR [esi]
  420cf3:	add    BYTE PTR [ebx+ebx*2],al
  420cf6:	jge    0x420d52
  420cf8:	das    
  420cf9:	xor    dl,BYTE PTR [edx+0xc]
  420cfc:	mov    cl,0x55
  420cfe:	(bad)  
  420cff:	push   DWORD PTR [edi]
  420d01:	xchg   edx,eax
  420d02:	rol    DWORD PTR [edi],0xbc
  420d05:	iret   
  420d06:	push   edx
  420d07:	mov    BYTE PTR [ebx-0x5b],ch
  420d0a:	jge    0x420d7e
  420d0c:	daa    
  420d0d:	nop
  420d0e:	pop    eax
  420d0f:	or     al,0xbb
  420d11:	test   dh,bh
  420d13:	push   DWORD PTR [edi]
  420d15:	lea    edx,[eax]
  420d17:	add    BYTE PTR [eax],dh
  420d19:	mov    DWORD PTR [edi+0x7c0cf8ff],ebx
  420d1f:	jnp    0x420ce0
  420d21:	or     BYTE PTR [esi+0x7a],bh
  420d24:	xlat   BYTE PTR ds:[ebx]
  420d25:	(bad)  
  420d26:	dec    edi
  420d27:	or     al,0xbb
  420d29:	lods   al,BYTE PTR ds:[esi]
  420d2a:	add    eax,0x108d3700
  420d2f:	add    BYTE PTR [eax-0x77],al
  420d32:	js     0x420d33
  420d34:	enter  0x7e0c,0x5b
  420d38:	scas   eax,DWORD PTR es:[edi]
  420d39:	and    al,0x84
  420d3b:	fsubr  DWORD PTR [eax]
  420d3d:	xchg   ecx,eax
  420d3e:	jl     0x420d3f
  420d40:	mov    al,0xc
  420d42:	jg     0x420d7c
  420d44:	aaa    
  420d45:	test   BYTE PTR [edx-0x17cbc87f],0x3
  420d4c:	mov    dh,0xeb
  420d4e:	fwait
  420d4f:	mov    ah,0x0
  420d51:	add    dh,ah
  420d53:	stos   BYTE PTR es:[edi],al
  420d54:	lahf   
  420d55:	pop    esp
  420d56:	add    ebx,DWORD PTR ds:0xf3b5518b
  420d5c:	cld    
  420d5d:	adc    ch,BYTE PTR [eax+esi*2-0x28ff4a7c]
  420d64:	mov    al,0xfb
  420d66:	push   0xc0975e16
  420d6b:	push   ds
  420d6c:	fs push ecx
  420d6e:	push   eax
  420d6f:	jge    0x420dd0
  420d71:	push   edx
  420d72:	push   ebx
  420d73:	jl     0x420d26
  420d75:	test   BYTE PTR [eax+0x16],al
  420d78:	aad    0xb1
  420d7a:	scas   eax,DWORD PTR es:[edi]
  420d7b:	in     eax,0x99
  420d7d:	jle    0x420d6c
  420d7f:	pop    ss
  420d80:	push   ecx
  420d81:	push   es
  420d82:	sub    edx,DWORD PTR [edi]
  420d84:	xor    al,0x88
  420d86:	call   0xa5bea92b
  420d8b:	and    al,0x70
  420d8d:	iret   
  420d8e:	clc    
  420d8f:	jge    0x420d43
  420d91:	jle    0x420e08
  420d93:	cld    
  420d94:	mov    eax,0xe82c4090
  420d99:	add    ebp,DWORD PTR [edi+ebx*8+0x15fb5948]
  420da0:	adc    DWORD PTR [eax],ebp
  420da2:	out    dx,al
  420da3:	push   ss
  420da4:	hlt    
  420da5:	test   ah,dh
  420da7:	sub    BYTE PTR [edi+0x4c],ah
  420daa:	jecxz  0x420d4c
  420dac:	(bad)  
  420dae:	jmp    0xa40c:0xccbe6d83
  420db5:	push   esp
  420db6:	add    BYTE PTR [eax],al
  420db8:	retf   0x6515
  420dbb:	inc    ebx
  420dbc:	inc    esp
  420dbd:	cmp    BYTE PTR [edi-0x3a],ah
  420dc0:	xor    BYTE PTR [ebx],ch
  420dc2:	outs   dx,DWORD PTR ds:[esi]
  420dc3:	(bad)  
  420dc4:	cmp    BYTE PTR [ecx+0x713b9a01],ch
  420dca:	stc    
  420dcb:	fidivr WORD PTR [edx+0x7a6fa5f]
  420dd1:	or     al,0xe
  420dd3:	sahf   
  420dd4:	imul   ebx,DWORD PTR [ecx],0x1884c9ea
  420dda:	sti    
  420ddb:	push   0xffffff99
  420ddd:	sbb    DWORD PTR [edx],eax
  420ddf:	jb     0x420e52
  420de1:	sbb    eax,0xd08fc87
  420de6:	sub    eax,0x5b1807d9
  420deb:	bound  edi,QWORD PTR [ecx+0x19]
  420dee:	pop    esp
  420def:	ret    0xf31d
  420df2:	add    eax,0xedac89e9
  420df7:	push   0xe8ff2ce8
  420dfc:	xor    al,0x83
  420dfe:	mov    WORD PTR [ebx+0x4194a918],gs
  420e04:	sbb    DWORD PTR [eax],0xfeab9bfb
  420e0a:	jmp    0xfb59c705
  420e0f:	ins    DWORD PTR es:[edi],dx
  420e10:	je     0x420db3
  420e12:	gs mov dh,0x93
  420e15:	call   0xa075:0x323f1f09
  420e1c:	add    BYTE PTR [eax],al
  420e1e:	xor    DWORD PTR [edx+0x186704f9],0x16a61152
  420e28:	sti    
  420e29:	imul   BYTE PTR [esi+0x72]
  420e2c:	or     DWORD PTR [esp+esi*2-0x5f],esp
  420e30:	xor    edi,DWORD PTR [edi]
  420e32:	mov    ds:0xc5a51517,eax
  420e37:	push   esp
  420e38:	add    DWORD PTR [edx-0x78],esp
  420e3b:	sub    al,0x86
  420e3d:	mov    cl,0xb6
  420e3f:	lahf   
  420e40:	add    eax,0xe259cd00
  420e45:	repz mov al,ds:0xde84fd65
  420e4b:	sti    
  420e4c:	adc    BYTE PTR [ebx+0x8443198],cl
  420e52:	pop    ebp
  420e53:	outs   dx,DWORD PTR gs:[esi]
  420e55:	or     BYTE PTR [esi+0x78],cl
  420e58:	fmul   QWORD PTR [edi]
  420e5a:	mov    eax,ds:0x965efb64
  420e5f:	outs   dx,DWORD PTR gs:[esi]
  420e61:	or     BYTE PTR [esi-0xe00f264],ah
  420e67:	(bad)
  420e6a:	pop    edi
  420e6b:	lds    ebp,FWORD PTR [esi+0xc]
  420e6e:	add    ebp,DWORD PTR [ebx+0x64d1fdf2]
  420e74:	dec    edx
  420e75:	call   0x3ff446
  420e7a:	scas   al,BYTE PTR es:[edi]
  420e7b:	cs pop eax
  420e7d:	leave  
  420e7e:	or     al,0x2c
  420e80:	add    DWORD PTR [ebp+0x0],edx
  420e83:	add    ch,al
  420e85:	xchg   ebx,eax
  420e86:	and    esp,0x34e6b976
  420e8c:	sbb    al,0x38
  420e8e:	add    DWORD PTR [ebx-0x38],edx
  420e91:	retf   0x4c68
  420e94:	mov    ds:0xf62c1eec,eax
  420e99:	outs   dx,DWORD PTR ds:[esi]
  420e9a:	add    cl,BYTE PTR [ecx]
  420e9c:	pop    ds
  420e9d:	cmp    BYTE PTR [eax+0x1efc97c6],cl
  420ea3:	adc    BYTE PTR [ebp-0x6576fd03],al
  420ea9:	pop    ebx
  420eaa:	adc    eax,0x3eb4e133
  420eaf:	and    al,0xa6
  420eb1:	(bad)  
  420eb2:	push   ebp
  420eb3:	push   edi
  420eb4:	test   BYTE PTR [ecx+0x54],bl
  420eb7:	mov    DWORD PTR [edx+0x5c],esi
  420eba:	sub    eax,0x29693789
  420ebf:	xor    al,al
  420ec1:	or     BYTE PTR [edi],cl
  420ec3:	adc    DWORD PTR [edi+0x1d],esi
  420ec6:	mov    bh,BYTE PTR [edi+0x4ad7542a]
  420ecc:	mov    edx,0xff242951
  420ed1:	hlt    
  420ed2:	xor    eax,0xb41d3607
  420ed7:	push   esp
  420ed8:	call   0x5765d17c
  420edd:	dec    ebp
  420ede:	mov    ebx,edx
  420ee0:	xchg   esi,eax
  420ee1:	pop    esp
  420ee2:	add    eax,0xd9210d56
  420ee7:	inc    BYTE PTR [eax]
  420ee9:	add    bl,al
  420eeb:	sub    DWORD PTR [ecx],ebp
  420eed:	sub    al,0xba
  420eef:	pop    ecx
  420ef0:	sub    DWORD PTR [edi+ecx*2+0x1f],edx
  420ef4:	cmp    esp,0x23c28858
  420efa:	bswap  ebp
  420efc:	add    DWORD PTR [ebx+0x13],0x1b5b8041
  420f03:	inc    ecx
  420f04:	pop    ebp
  420f05:	inc    edx
  420f06:	mov    ah,0x7a
  420f08:	dec    ebx
  420f09:	xor    edi,0xffffffc8
  420f0c:	out    0x54,al
  420f0e:	xor    BYTE PTR [edx+0x3d5b4381],0xb5
  420f15:	push   ebp
  420f16:	lea    esp,[ecx]
  420f18:	fsin   
  420f1a:	ret    
  420f1b:	enter  0x2c22,0xbc
  420f1f:	push   ebp
  420f20:	push   esi
  420f21:	shl    DWORD PTR [esi+0x72f54b41],cl
  420f27:	add    eax,0x86457401
  420f2c:	ret    0x4f23
  420f2f:	xchg   esi,eax
  420f30:	ror    DWORD PTR [ebx],0xae
  420f33:	sbb    edi,DWORD PTR [eax+0x43]
  420f36:	adc    esi,DWORD PTR [esp+eax*1]
  420f39:	jns    0x420fb8
  420f3b:	and    al,0x71
  420f3d:	add    ebp,DWORD PTR [edx+0x72]
  420f40:	das    
  420f41:	jns    0x420f18
  420f43:	jo     0x420eeb
  420f45:	add    BYTE PTR [edi],dh
  420f47:	imul   ebp,DWORD PTR [edi+0x60],0xb1451fb7
  420f4e:	add    BYTE PTR [eax],al
  420f50:	add    ch,BYTE PTR [ebx+0x65]
  420f53:	(bad)  
  420f54:	pushf  
  420f55:	arpl   WORD PTR [ebp-0x39],bx
  420f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f59:	arpl   WORD PTR [esi],cx
  420f5b:	add    bl,BYTE PTR [edi-0x74b264a5]
  420f61:	inc    esi
  420f62:	scas   eax,DWORD PTR es:[edi]
  420f63:	or     ebx,esp
  420f65:	ud0    edi,DWORD PTR [ecx+0x5825792b]
  420f6c:	mov    ebp,0x50ac4888
  420f71:	dec    edx
  420f72:	loopne 0x420f76
  420f74:	aaa    
  420f75:	sahf   
  420f76:	pop    ds
  420f77:	jg     0x420f56
  420f79:	pop    es
  420f7a:	rcr    DWORD PTR [ebx+0x4a],0x3a
  420f7e:	jmp    0x6e3ccd86
  420f83:	sub    esp,eax
  420f85:	xor    eax,0xc0e8415f
  420f8a:	lods   eax,DWORD PTR ds:[esi]
  420f8b:	mov    ds:0xd9e89e80,eax
  420f90:	sub    BYTE PTR [ecx+ebp*8+0x2bf1c15b],bl
  420f97:	dec    ebp
  420f98:	mov    bh,0xf8
  420f9a:	cld    
  420f9b:	mov    al,0x18
  420f9d:	cwde   
  420f9e:	jmp    0xf9a8:0xb2720b4c
  420fa5:	cmc    
  420fa6:	mov    ch,0x78
  420fa8:	or     al,0xb6
  420faa:	adc    al,0xc
  420fac:	xchg   BYTE PTR [edx-0x6d],ch
  420faf:	(bad)  [esp]
  420fb2:	add    ecx,ebp
  420fb4:	add    BYTE PTR [eax],al
  420fb6:	xor    al,0xbb
  420fb8:	stc    
  420fb9:	(bad)  
  420fba:	lock inc ecx
  420fbc:	jle    0x420fc7
  420fbe:	cmp    esi,DWORD PTR [ebx+0x39eee922]
  420fc4:	cli    
  420fc5:	sbb    al,0xa7
  420fc7:	idiv   DWORD PTR [esi]
  420fc9:	jmp    0xdbbb3639
  420fce:	je     0x420fe1
  420fd0:	mov    BYTE PTR [ecx+0x6cf56e2d],ah
  420fd6:	dec    edi
  420fd7:	xchg   BYTE PTR [edx],al
  420fd9:	sti    
  420fda:	hlt    
  420fdb:	sbb    DWORD PTR [eax-0x5cbcb17],ebp
  420fe1:	adc    al,0x37
  420fe3:	unpckhps xmm4,XMMWORD PTR ds:0x3015184
  420fea:	sbb    esi,DWORD PTR [edx+0x53]
  420fed:	je     0x421068
  420fef:	std    
  420ff0:	addr16 jmp 0x7287079a
  420ff6:	xor    eax,0x62d1150f
  420ffb:	push   ecx
  420ffc:	add    DWORD PTR [eax+0x69],esi
  420fff:	std    
  421000:	jle    0x421027
  421002:	dec    eax
  421003:	mov    edx,0x11b2495c
  421008:	or     ebp,ecx
  42100a:	xor    al,0xb4
  42100c:	jl     0x420feb
  42100e:	xor    al,0x85
  421010:	push   cs
  421011:	ins    BYTE PTR es:[edi],dx
  421012:	icebp  
  421013:	adc    al,0x52
  421015:	lahf   
  421016:	jae    0x420f9e
  421018:	cmc    
  421019:	add    BYTE PTR cs:[eax],al
  42101c:	add    DWORD PTR [ecx],edi
  42101e:	cli    
  42101f:	cld    
  421020:	add    BYTE PTR [esi],ah
  421022:	inc    ecx
  421023:	jmp    0x9d3c3697
  421028:	or     al,0xbe
  42102a:	inc    esp
  42102b:	sbb    eax,0x5138de
  421030:	cmp    edx,ebp
  421032:	add    cl,BYTE PTR [ecx+0x15fd9963]
  421038:	xchg   edx,eax
  421039:	or     DWORD PTR [ebx],edi
  42103b:	add    BYTE PTR [ebx+0x75],dl
  42103e:	outs   dx,DWORD PTR ds:[esi]
  42103f:	sbb    cl,bl
  421041:	add    ah,BYTE PTR [edi+0x36381e12]
  421047:	in     eax,0xcd
  421049:	xor    al,0x1
  42104b:	jne    0x42107c
  42104d:	mov    edi,DWORD PTR [edi]
  42104f:	or     al,0x4e
  421051:	jo     0x420ff1
  421053:	in     al,0x9e
  421055:	xor    al,0xe8
  421057:	mov    dh,0x15
  421059:	fcmovnu st,st(6)
  42105b:	test   ebp,eax
  42105d:	jecxz  0x421070
  42105f:	push   DWORD PTR [ebx]
  421061:	mov    DWORD PTR fs:[ebp-0x72],eax
  421065:	ins    BYTE PTR es:[edi],dx
  421066:	xor    cl,BYTE PTR [esi]
  421068:	test   eax,0x23c07f7c
  42106d:	fadd   st,st(4)
  42106f:	inc    ebp
  421070:	mov    ch,0x37
  421072:	cld    
  421073:	jne    0x421057
  421075:	outs   dx,DWORD PTR ds:[esi]
  421076:	nop
  421077:	or     eax,0x7d7a7ce9
  42107c:	in     eax,0x37
  42107e:	outs   dx,BYTE PTR ds:[esi]
  42107f:	or     al,BYTE PTR [eax]
  421081:	add    ch,al
  421083:	repnz or bh,bh
  421086:	cs jo  0x421009
  421089:	or     eax,0x45887ce9
  42108e:	in     eax,0xdc
  421090:	pop    esp
  421091:	pop    ebx
  421092:	addr16 jbe 0x4210a3
  421095:	add    bl,al
  421097:	mov    fs,esi
  421099:	xor    DWORD PTR [edx-0x80],0xffffff81
  42109d:	in     al,dx
  42109e:	and    dh,BYTE PTR [edi+0x7b062446]
  4210a4:	push   ecx
  4210a5:	mov    ecx,DWORD PTR [ebx]
  4210a7:	pop    esp
  4210a8:	adc    BYTE PTR [eax+0x37],al
  4210ab:	sbb    eax,0x98f54b1
  4210b0:	das    
  4210b1:	inc    eax
  4210b2:	aaa    
  4210b3:	or     BYTE PTR [ebp-0x4],0x4
  4210b7:	or     DWORD PTR [esi],0xffffffe8
  4210ba:	jne    0x4210cb
  4210bc:	dec    eax
  4210bd:	cld    
  4210be:	mov    ah,0x5
  4210c0:	dec    eax
  4210c1:	or     al,0xbb
  4210c3:	sbb    eax,0x82370005
  4210c8:	stc    
  4210c9:	sub    esp,edi
  4210cb:	pop    edx
  4210cc:	add    eax,0x7835f769
  4210d1:	xor    edi,DWORD PTR [edi]
  4210d3:	or     bh,BYTE PTR [esi]
  4210d5:	ss stc 
  4210d7:	call   0x1cd096d3
  4210dc:	(bad)  
  4210dd:	push   DWORD PTR [edi+ebx*2+0xb0bfef1]
  4210e4:	jl     0x42112b
  4210e6:	add    BYTE PTR [eax],al
  4210e8:	daa    
  4210e9:	adc    al,0xb7
  4210eb:	add    ecx,DWORD PTR [ebx]
  4210ed:	adc    edi,DWORD PTR [ebp+eax*2+0x53]
  4210f1:	xchg   esp,eax
  4210f2:	jmp    esi
  4210f4:	xchg   BYTE PTR [edi+edi*8],bl
  4210f7:	(bad)  
  4210f8:	mov    esp,0x7638f558
  4210fd:	adc    DWORD PTR ds:0xc89a2f87,eax
  421103:	sbb    edx,DWORD PTR [eax+0x6]
  421106:	and    BYTE PTR [ebp+0x36],0x1d
  42110a:	dec    DWORD PTR [eax+0x454114f9]
  421110:	xor    ebx,DWORD PTR [ecx+ecx*4]
  421113:	adc    eax,DWORD PTR [edi]
  421115:	(bad)  
  421117:	push   ebp
  421118:	mov    esi,0x201c1ad8
  42111d:	lock and dl,BYTE PTR [ecx]
  421120:	ja     0x42113f
  421122:	dec    eax
  421123:	jb     0x421154
  421125:	xor    al,0x75
  421127:	mov    edi,0xd01b4854
  42112c:	and    al,0x64
  42112e:	adc    ecx,edi
  421130:	push   esp
  421131:	pop    eax
  421132:	pop    ebp
  421133:	mov    edi,0x12037814
  421138:	fisttp WORD PTR [eax+0x65e349fa]
  42113e:	pusha  
  42113f:	mov    edi,0x35eb2714
  421144:	mov    edi,0xc58cd046
  421149:	push   cs
  42114a:	fdivr  QWORD PTR [ebp+0x0]
  42114d:	add    al,dl
  42114f:	mov    dl,0xd2
  421151:	dec    ecx
  421152:	sub    edi,DWORD PTR [eax+0x3437035c]
  421158:	push   0xe82354c8
  42115d:	clc    
  42115e:	mov    ah,0xa4
  421160:	jmp    0xb2dd4868
  421165:	sbb    al,0x36
  421167:	dec    ecx
  421168:	aam    0x33
  42116a:	div    DWORD PTR [ebx]
  42116c:	ins    DWORD PTR es:[edi],dx
  42116d:	rcl    BYTE PTR [eax+ebx*2+0x38],0x42
  421172:	repnz aaa 
  421174:	call   0x795e3cc1
  421179:	inc    ecx
  42117a:	push   0xe
  42117c:	outs   dx,BYTE PTR ds:[esi]
  42117d:	mov    eax,0x7b196014
  421182:	hlt    
  421183:	push   edi
  421184:	les    edi,FWORD PTR [ebx+edi*1-0x66]
  421188:	jmp    0x32226240
  42118d:	dec    edx
  42118e:	inc    ebx
  42118f:	mov    esp,0xbb0f1fac
  421194:	mov    ds:0xc78b9f3,al
  421199:	or     al,0xbe
  42119b:	jbe    0x421171
  42119d:	adc    al,0xfe
  42119f:	mov    ebx,0x5038ad01
  4211a4:	cmp    BYTE PTR [ebp+0x6d0a5430],cl
  4211aa:	(bad)  
  4211ab:	or     eax,0x7189e9fb
  4211b0:	and    eax,0xc40000c9
  4211b5:	adc    eax,0x107e6fda
  4211ba:	xchg   BYTE PTR [ecx],ch
  4211bc:	out    dx,al
  4211bd:	mov    cl,0x94
  4211bf:	jmp    0xc8a945f8
  4211c4:	outs   dx,DWORD PTR ds:[esi]
  4211c5:	dec    eax
  4211c6:	jmp    0xfb511e9f
  4211cb:	jb     0x421249
  4211cd:	dec    esp
  4211ce:	not    BYTE PTR [ebp-0x34]
  4211d1:	xchg   edi,eax
  4211d2:	cmp    dh,dh
  4211d4:	call   0x57980c18
  4211d9:	dec    eax
  4211da:	cli    
  4211db:	cmp    eax,0xd1524857
  4211e0:	jae    0x421168
  4211e2:	cli    
  4211e3:	mov    dh,0xe7
  4211e5:	adc    eax,0xfffdd2d
  4211ea:	sti    
  4211eb:	sbb    eax,0x25865457
  4211f0:	push   edi
  4211f1:	pop    esp
  4211f2:	dec    esi
  4211f3:	and    DWORD PTR [edi],0xed8efc19
  4211f9:	jo     0x421220
  4211fb:	loope  0x421238
  4211fd:	repz jne 0x421216
  421200:	mov    bl,0xd
  421202:	or     ebp,ecx
  421204:	xor    al,0xb5
  421206:	inc    ebp
  421207:	lds    ebx,FWORD PTR [eax+0x15]
  42120a:	aam    0xf2
  42120c:	dec    DWORD PTR [edi]
  42120e:	xchg   DWORD PTR [ecx+0x33],esp
  421211:	or     esi,DWORD PTR [esi+0x13]
  421214:	shl    BYTE PTR [eax+0x25],0xed
  421218:	add    BYTE PTR [eax],al
  42121a:	in     al,0x67
  42121c:	cli    
  42121d:	add    dl,ch
  42121f:	sub    al,0x21
  421221:	(bad)  
  421222:	sbb    ecx,eax
  421224:	cli    
  421225:	dec    DWORD PTR [esi]
  421227:	jl     0x421238
  421229:	cmp    bl,ch
  42122b:	lock cli 
  42122d:	test   BYTE PTR [esi-0x3],bl
  421230:	sbb    BYTE PTR [ebx-0x3cc5f727],cl
  421236:	call   0xcfc:0xe6396507
  42123d:	jmp    FWORD PTR [edx+0x2d]
  421240:	xor    eax,0x352d6aff
  421245:	push   eax
  421246:	ss add al,0x74
  421249:	jmp    ecx
  42124b:	fsubr  st(2),st
  42124d:	leave  
  42124e:	lds    esi,FWORD PTR [ebp-0x3]
  421251:	jmp    FWORD PTR [edx+0x54]
  421254:	sbb    eax,ebp
  421256:	mov    cs,WORD PTR [eax]
  421258:	(bad)  
  421259:	inc    DWORD PTR [ecx-0x79dfe11d]
  42125f:	mov    esp,0x74e1ff09
  421264:	outs   dx,BYTE PTR ds:[esi]
  421265:	and    al,0x36
  421267:	jo     0x421215
  421269:	or     esp,ecx
  42126b:	je     0x4211f6
  42126d:	inc    esp
  42126e:	jp     0x421290
  421270:	add    BYTE PTR [esi+0x36],0x89
  421274:	ds and al,0x5a
  421277:	pop    DWORD PTR [esp+ebx*1-0x2b]
  42127b:	int    0x16
  42127d:	add    DWORD PTR [eax],0x0
  421280:	mov    dh,0x74
  421282:	outs   dx,BYTE PTR ds:[esi]
  421283:	push   eax
  421284:	test   esi,ecx
  421286:	sbb    cl,BYTE PTR [ebx-0x7ccd1c1a]
  42128c:	arpl   WORD PTR [eax],cx
  42128e:	sti    
  42128f:	je     0x4212dd
  421291:	call   0x30902290
  421296:	mov    ecx,0x53b3700
  42129b:	add    BYTE PTR [edi],bl
  42129d:	dec    esp
  42129e:	dec    eax
  42129f:	std    
  4212a0:	sub    BYTE PTR [ebp-0x37a1f440],al
  4212a6:	repnz or al,0x75
  4212a9:	shl    dl,0x80
  4212ac:	xchg   edx,eax
  4212ad:	adc    eax,0x862473ff
  4212b2:	mov    ebx,0x1ed33417
  4212b7:	push   ebp
  4212b8:	addr16 and dl,al
  4212bb:	pop    es
  4212bc:	fild   WORD PTR [ebp+0x1ce8fcf6]
  4212c2:	lds    ebx,FWORD PTR [edi]
  4212c4:	lods   al,BYTE PTR ds:[esi]
  4212c5:	shr    dh,1
  4212c7:	xor    bh,0x89
  4212ca:	add    BYTE PTR [edi+0x23c1520f],al
  4212d0:	and    ebx,DWORD PTR [edi+edi*8]
  4212d3:	push   DWORD PTR [edi]
  4212d5:	gs icebp 
  4212d7:	iret   
  4212d8:	je     0x4212f7
  4212da:	inc    esp
  4212db:	adc    dl,BYTE PTR [ebx-0x420040f1]
  4212e1:	pop    ecx
  4212e2:	and    DWORD PTR [eax+eax*1],edx
  4212e5:	add    BYTE PTR [eax],al
  4212e7:	sub    esp,DWORD PTR [esi+0x3f209288]
  4212ed:	adc    esi,DWORD PTR [edi]
  4212ef:	popf   
  4212f0:	ret    0x2423
  4212f3:	sbb    eax,0x218018cb
  4212f8:	and    DWORD PTR [eax],esi
  4212fa:	(bad)  
  4212fb:	std    
  4212fc:	idiv   esp
  4212fe:	jo     0x42129e
  421300:	inc    esp
  421301:	cld    
  421302:	jecxz  0x421303
  421304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421305:	sub    eax,DWORD PTR [edi+0x6169055e]
  42130b:	cmc    
  42130c:	cmp    al,0x43
  42130e:	cmp    DWORD PTR [ecx],edx
  421310:	inc    DWORD PTR [eax-0xff3cc2d]
  421316:	inc    eax
  421317:	xchg   ebx,eax
  421318:	inc    esp
  421319:	adc    eax,0xf0533437
  42131e:	js     0x421345
  421320:	test   al,0x3
  421322:	push   ds
  421323:	rcr    BYTE PTR [ebp+0x4cb70c7a],0xf3
  42132a:	xchg   DWORD PTR [esi-0x14405254],ebx
  421330:	inc    eax
  421331:	arpl   WORD PTR [edi],di
  421333:	or     esp,DWORD PTR [edx+edi*2]
  421336:	jne    0x421374
  421338:	and    edi,ebp
  42133a:	stc    
  42133b:	or     ch,cl
  42133d:	add    edi,DWORD PTR [eax-0x147f1b8f]
  421343:	jg     0x4212fb
  421345:	dec    ebp
  421346:	div    DWORD PTR [esi*2-0x48ffff1a]
  42134d:	push   cs
  42134e:	in     eax,dx
  42134f:	int    0x2e
  421351:	mov    ch,0xab
  421353:	fcmovne st,st(0)
  421355:	xchg   al,ch
  421357:	into   
  421358:	es in  eax,0xcf
  42135b:	lods   eax,DWORD PTR ds:[esi]
  42135c:	lods   eax,DWORD PTR ds:[esi]
  42135d:	jbe    0x421332
  42135f:	fidiv  DWORD PTR [eax-0x6f07dd45]
  421365:	inc    edi
  421366:	iret   
  421367:	inc    esi
  421368:	mov    ds:0xf776e11e,eax
  42136d:	or     bl,BYTE PTR [ebx+edi*2]
  421370:	cli    
  421371:	aaa    
  421372:	rcr    BYTE PTR [ebx+0x59a4099d],0x2e
  421379:	mov    ecx,0x63e9f82a
  42137e:	or     BYTE PTR [ebp+0x75],0x9
  421382:	mov    WORD PTR [ebx-0xe],?
  421385:	cmp    ebp,DWORD PTR [ebp+0x44]
  421388:	in     eax,0x32
  42138a:	mov    dh,0x43
  42138c:	push   ecx
  42138d:	add    BYTE PTR [edx],al
  42138f:	jmp    0x27ce47c8
  421394:	inc    edi
  421395:	jp     0x42131b
  421397:	dec    dx
  421399:	mov    ch,0xa4
  42139b:	jmp    0xaab47d4
  4213a0:	cmp    esi,DWORD PTR [ecx+eax*4]
  4213a3:	dec    esi
  4213a4:	clc    
  4213a5:	xor    ecx,ebp
  4213a7:	mov    DWORD PTR [edx+0x7],esp
  4213aa:	sti    
  4213ab:	xchg   esi,eax
  4213ac:	popf   
  4213ad:	outs   dx,DWORD PTR ds:[esi]
  4213ae:	adc    DWORD PTR [eax+eax*1+0x0],esp
  4213b2:	ror    BYTE PTR ds:0x19c85c52,1
  4213b8:	push   edx
  4213b9:	xchg   ebx,eax
  4213ba:	sub    DWORD PTR [edi],eax
  4213bc:	jne    0x4213af
  4213be:	cmp    esi,DWORD PTR [esi-0x3]
  4213c1:	loopne 0x4213f7
  4213c3:	xor    al,0x1
  4213c5:	push   cs
  4213c6:	fmul   DWORD PTR [ecx-0x4ccb56ec]
  4213cc:	stc    
  4213cd:	call   0xac7a39bb
  4213d2:	js     0x421453
  4213d4:	or     ch,BYTE PTR [ecx-0x10]
  4213d7:	sbb    DWORD PTR [edx+0x5c],edx
  4213da:	out    dx,al
  4213db:	mov    ah,0x7c
  4213dd:	fnstsw WORD PTR [eax-0xd9e527a]
  4213e3:	and    DWORD PTR [edi+eiz*1-0x17969bad],ecx
  4213ea:	xor    al,0x34
  4213ec:	cmp    DWORD PTR [esi+0x11e93169],0x60fb0752
  4213f6:	retf   0x862d
  4213f9:	sub    al,0x8b
  4213fb:	mov    esi,0x2b59e49
  421400:	sti    
  421401:	xchg   esi,eax
  421402:	imul   ecx,DWORD PTR [ecx],0x74
  421405:	fsub   st(7),st
  421407:	jge    0x421416
  421409:	add    bl,dl
  42140b:	dec    ebp
  42140c:	outs   dx,BYTE PTR ds:[esi]
  42140d:	push   es
  42140e:	out    0xbe,eax
  421410:	push   ds
  421411:	mov    DWORD PTR [eax],esp
  421413:	sub    BYTE PTR [edi+0x1c],ah
  421416:	add    BYTE PTR [eax],al
  421418:	fyl2xp1 
  42141a:	add    ch,al
  42141c:	dec    DWORD PTR [ecx-0x4]
  42141f:	inc    ebp
  421421:	pop    esp
  421422:	jg     0x4213ff
  421424:	adc    dl,bh
  421426:	add    DWORD PTR fs:[ebp+0x30],0x75
  42142b:	push   eax
  42142c:	add    al,0x12
  42142e:	(bad)  
  42142f:	jne    0x421457
  421431:	ins    DWORD PTR es:[edi],dx
  421432:	mov    ecx,0x7f7048c5
  421437:	rol    dl,0x30
  42143a:	arpl   WORD PTR [ebx+0x36753516],ax
  421440:	xchg   edi,ecx
  421442:	mov    DWORD PTR es:[eax+0x393ae824],esp
  421449:	cli    
  42144a:	add    ch,al
  42144c:	sahf   
  42144d:	dec    ecx
  42144e:	cld    
  42144f:	jmp    DWORD PTR [edi-0x39]
  421452:	or     al,dh
  421454:	mov    al,ds:0x1beafb1c
  421459:	mov    ch,0x77
  42145b:	lock adc DWORD PTR ds:0x74d92d7e,esp
  421462:	std    
  421463:	or     DWORD PTR [ebx],0x74
  421466:	add    DWORD PTR [edi],ecx
  421468:	adc    edx,DWORD PTR [ecx]
  42146a:	(bad)  
  42146b:	(bad)  
  42146c:	jns    0x4214eb
  42146e:	inc    esp
  42146f:	sbb    BYTE PTR [esi-0x360094a9],cl
  421475:	je     0x4214c1
  421477:	call   0x3e4b86
  42147c:	add    BYTE PTR [eax],al
  42147e:	cmp    eax,0x9909a458
  421483:	je     0x421467
  421485:	scas   al,BYTE PTR es:[edi]
  421486:	aaa    
  421487:	sar    DWORD PTR [edi],1
  421489:	cld    
  42148a:	mov    esi,0x36afc550
  42148f:	push   esi
  421490:	dec    esp
  421491:	shr    DWORD PTR [ebx],0x1b
  421494:	fimul  DWORD PTR [eax-0x8d6629d]
  42149a:	mov    ah,0x86
  42149c:	ror    DWORD PTR [eax+0x55d406fa],0xe0
  4214a3:	imul   esi,ebp,0x400d7a88
  4214a9:	das    
  4214aa:	mov    esp,0xaafd0ad0
  4214af:	add    eax,0x8318c884
  4214b4:	cmp    al,0x8a
  4214b6:	mov    edi,DWORD PTR [ecx]
  4214b8:	rol    DWORD PTR [esi-0x181ace95],1
  4214be:	xchg   edx,eax
  4214bf:	dec    edi
  4214c0:	ds cld 
  4214c2:	mov    bl,0x5d
  4214c4:	push   cs
  4214c5:	test   BYTE PTR [ecx+0x1b],dl
  4214c8:	(bad)  
  4214c9:	(bad)  
  4214ca:	mov    esp,0xb5e806d0
  4214cf:	or     BYTE PTR [eax-0x4],al
  4214d2:	scas   eax,DWORD PTR es:[edi]
  4214d3:	shl    edx,1
  4214d5:	or     al,0xbc
  4214d7:	push   edi
  4214d8:	aad    0xe7
  4214da:	daa    
  4214db:	imul   edi,DWORD PTR [esi],0xfffffffc
  4214de:	scas   al,BYTE PTR es:[edi]
  4214df:	pop    ecx
  4214e0:	jmp    0x8f4214fc
  4214e5:	sbb    al,0xb3
  4214e7:	adc    bl,BYTE PTR [edi]
  4214e9:	gs out dx,al
  4214eb:	jmp    FWORD PTR [eax+0x464819f6]
  4214f1:	pop    ebp
  4214f2:	add    eax,0x19311381
  4214f7:	add    BYTE PTR [esi+0x370005f0],bl
  4214fd:	mov    ch,0x4
  4214ff:	or     eax,0x46634bb
  421504:	aaa    
  421505:	xor    al,0x67
  421507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421508:	adc    al,0x24
  42150a:	call   0xa2b07805
  42150f:	(bad)  
  421510:	adc    al,0x36
  421512:	jmp    0xfc91fa13
  421517:	mov    eax,0xe824bafe
  42151c:	shl    BYTE PTR [edx-0x7fc8f80f],0xa8
  421523:	nop
  421524:	hlt    
  421525:	dec    edi
  421526:	test   al,0x90
  421528:	lods   al,BYTE PTR ds:[esi]
  421529:	push   eax
  42152a:	or     al,0x2c
  42152c:	lock ror DWORD PTR [ebx+0x42],cl
  421530:	mov    ah,0xf3
  421532:	mov    esp,0x46fadf9
  421537:	hlt    
  421538:	sbb    BYTE PTR [ebx+edx*1],0x62
  42153c:	or     BYTE PTR [edi],al
  42153e:	sub    al,0xb7
  421540:	push   esp
  421541:	pop    esp
  421542:	adc    BYTE PTR [edx],ch
  421544:	xor    BYTE PTR [edi],al
  421546:	sbb    al,0x42
  421548:	add    BYTE PTR [eax],al
  42154a:	fs push eax
  42154c:	fadd   DWORD PTR [edx+0x45]
  42154f:	cld    
  421550:	test   bl,0xe0
  421553:	mov    ecx,0xbd0ce7ac
  421558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421559:	out    0x40,eax
  42155b:	mov    cl,0x28
  42155d:	mov    bh,0x3d
  42155f:	mov    ebp,0x1b24e774
  421564:	dec    ebp
  421565:	test   BYTE PTR [eax+edx*2],bh
  421568:	jmp    0x42156d
  42156a:	and    al,0x2f
  42156c:	stos   BYTE PTR es:[edi],al
  42156d:	enter  0x3654,0xe8
  421571:	sub    al,0xa
  421573:	call   0xdc10:0x501c8ee2
  42157a:	cwde   
  42157b:	push   esp
  42157c:	add    ebx,ebp
  42157e:	xor    eax,0xc4f48634
  421583:	and    DWORD PTR [ecx-0x17],eax
  421586:	int3   
  421587:	push   es
  421588:	sti    
  421589:	jmp    0xaec87962
  42158e:	add    DWORD PTR [edi],0x75
  421591:	loope  0x42158a
  421593:	loopne 0x4215fc
  421595:	enter  0x8aa9,0x25
  421599:	leave  
  42159a:	ins    BYTE PTR es:[edi],dx
  42159b:	push   cs
  42159c:	add    ebx,ebp
  42159e:	xor    eax,0x34e9b634
  4215a3:	xor    al,0x81
  4215a5:	mov    edx,0x2687078a
  4215aa:	or     ecx,DWORD PTR [ecx]
  4215ac:	jne    0x42158f
  4215ae:	add    BYTE PTR [eax],al
  4215b0:	ja     0x421591
  4215b2:	or     dh,BYTE PTR [bx+si+0x2589]
  4215b7:	adc    ebx,edi
  4215b9:	or     eax,0x3435e8e5
  4215be:	dec    esi
  4215bf:	ret    
  4215c0:	ja     0x42157e
  4215c2:	ret    0x7799
  4215c5:	or     BYTE PTR [ecx],0x26
  4215c8:	pop    ebp
  4215c9:	mov    ah,0xc6
  4215cb:	push   ds
  4215cc:	mov    dh,0x21
  4215ce:	shr    DWORD PTR [edx-0xb05a0cc],1
  4215d4:	jl     0x4215f9
  4215d6:	inc    ecx
  4215d7:	jmp    0xef679f90
  4215dc:	xor    al,0x37
  4215de:	test   DWORD PTR [eax+0x33],ebp
  4215e1:	xor    al,0x1
  4215e3:	bound  ecx,QWORD PTR [eax+0x420e92d]
  4215e9:	or     bl,bh
  4215eb:	and    bh,dl
  4215ed:	add    DWORD PTR [edi],0xf0625b3f
  4215f3:	into   
  4215f4:	test   DWORD PTR [ebx-0x42],0x89d75a00
  4215fb:	lock mov edi,0x9e43cb15
  421601:	fdiv   st,st(4)
  421603:	sub    cl,dl
  421605:	mov    ebp,0xed05102a
  42160a:	sub    dl,BYTE PTR [esi+eax*8]
  42160d:	xor    DWORD PTR [esi+0x2692c1ff],edx
  421613:	rol    BYTE PTR [eax],1
  421615:	add    BYTE PTR ds:0x4874fc30,cl
  42161b:	sub    ecx,ebp
  42161d:	adc    eax,0xa1fd7446
  421622:	jb     0x421685
  421624:	inc    ecx
  421625:	add    ch,cl
  421627:	int3   
  421628:	add    al,0x18
  42162a:	dec    esi
  42162b:	xchg   edx,eax
  42162c:	es rcr ch,1
  42162f:	xor    BYTE PTR [eax-0x4eee79c],al
  421635:	mov    al,ds:0x416122
  42163a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42163b:	in     eax,0x4
  42163d:	sbb    al,0xbf
  42163f:	adc    al,0xcb
  421641:	inc    ebx
  421642:	push   ds
  421643:	mov    eax,0xb9c62446
  421648:	inc    esi
  421649:	push   es
  42164a:	(bad)  
  42164b:	xchg   ecx,eax
  42164c:	rcr    BYTE PTR es:[ebp-0x5b377d0],1
  421653:	les    eax,FWORD PTR [ebx-0x65e327b4]
  421659:	sub    al,0x3e
  42165b:	lock cli 
  42165d:	mov    ah,BYTE PTR [edx-0x6d76f4f4]
  421663:	cmp    ah,BYTE PTR ds:0x6e73eeeb
  421669:	and    al,0x56
  42166b:	mov    ecx,0x301e247e
  421670:	add    DWORD PTR [eax],eax
  421672:	aaa    
  421673:	repz mov eax,ds:0x7ef5a09b
  421679:	jnp    0x42167b
  42167b:	add    BYTE PTR [ebx-0x15],dl
  42167e:	(bad)  
  42167f:	jae    0x4216bf
  421681:	(bad)  
  421682:	mov    ecx,0xc1f32723
  421687:	ret    
  421688:	adc    ebp,0xef22fcd2
  42168e:	cmovo  esi,DWORD PTR [edi]
  421691:	mov    ds:0xcb43bd08,al
  421696:	mov    esi,0xe94e6aff
  42169b:	pop    ss
  42169c:	xor    eax,DWORD PTR [edi]
  42169e:	aam    0x88
  4216a0:	sti    
  4216a1:	out    dx,al
  4216a2:	mov    ds:0x8deafa88,al
  4216a7:	(bad)  
  4216a8:	lods   eax,DWORD PTR ds:[esi]
  4216a9:	dec    esi
  4216aa:	jmp    0x1301c316
  4216af:	push   ebp
  4216b0:	mov    esi,0xf123c0c
  4216b5:	add    BYTE PTR [edi+0x6e8adff],bh
  4216bb:	call   0xfc7c544d
  4216c0:	dec    esp
  4216c1:	dec    esi
  4216c2:	mov    eax,0x83756109
  4216c7:	out    dx,eax
  4216c8:	add    BYTE PTR [ebx-0xa],dl
  4216cb:	rol    BYTE PTR [ebx-0x69107814],0xf1
  4216d2:	dec    esi
  4216d3:	inc    eax
  4216d4:	aaa    
  4216d5:	mov    dh,0x34
  4216d7:	daa    
  4216d8:	loopne 0x421683
  4216da:	add    al,0xc
  4216dc:	iret   
  4216dd:	aad    0x3
  4216df:	std    
  4216e0:	add    BYTE PTR [eax],al
  4216e2:	rol    BYTE PTR [esi-0x69acdc37],1
  4216e8:	adc    BYTE PTR [edi+eiz*8],ch
  4216eb:	into   
  4216ec:	inc    BYTE PTR [esi+0xff23473]
  4216f2:	or     al,BYTE PTR [ebx]
  4216f4:	neg    BYTE PTR [edi+0x46]
  4216f7:	je     0x4216e1
  4216f9:	nop
  4216fa:	hlt    
  4216fb:	push   edi
  4216fc:	sub    BYTE PTR [eiz*8-0x40c13c61],ch
  421703:	js     0x421709
  421705:	sbb    dl,ch
  421707:	popa   
  421708:	jnp    0x13e878a3
  42170e:	aaa    
  42170f:	imul   ebp,DWORD PTR [edi+0x2f],0x3cb5e58
  421716:	aaa    
  421717:	mov    eax,0x6a20b7a8
  42171c:	xlat   BYTE PTR ds:[ebx]
  42171d:	xor    eax,0xb7d88921
  421722:	xor    edi,DWORD PTR ds:0x1dc30ff5
  421728:	add    BYTE PTR [edi+esi*1],al
  42172b:	xor    al,0x48
  42172d:	lds    esp,FWORD PTR ds:[ebx]
  421730:	arpl   WORD PTR [eax+0xbd6033c],di
  421736:	sub    ch,BYTE PTR [ecx]
  421738:	sbb    al,0x19
  42173a:	ja     0x421770
  42173c:	popa   
  42173d:	mov    eax,0xfbdad28
  421742:	mov    esp,0xd3e078
  421747:	add    BYTE PTR [ebp+0x6ad3dc78],bh
  42174d:	add    esi,DWORD PTR [esi+0x10ed460b]
  421753:	shr    ebp,cl
  421755:	add    bl,BYTE PTR [ebx*8-0x47ec0449]
  42175c:	cmp    esp,DWORD PTR [ecx+0xb]
  42175f:	call   0x3ea407c
  421764:	ins    BYTE PTR es:[edi],dx
  421765:	not    ah
  421767:	add    esp,DWORD PTR [edi+ebp*4+0x1]
  42176b:	add    eax,0xe92a340c
  421770:	xor    al,0xb8
  421772:	rcr    DWORD PTR [ebp+0x7b],0x68
  421776:	xlat   BYTE PTR cs:[ebx]
  421778:	lods   al,BYTE PTR ds:[esi]
  421779:	test   DWORD PTR [ecx],edx
  42177b:	pop    ebp
  42177c:	inc    edx
  42177d:	dec    ebx
  42177e:	je     0x42175d
  421780:	loopne 0x42179e
  421782:	imul   ebp,ecx,0xbea13434
  421788:	shl    BYTE PTR [edx],0xfa
  42178b:	cmp    al,0x27
  42178d:	add    DWORD PTR [ebp-0x1f],esi
  421790:	cmp    esp,DWORD PTR [esi]
  421792:	jno    0x421790
  421794:	je     0x421798
  421796:	mov    dl,BYTE PTR [ebx+eax*2]
  421799:	mov    ebx,0x75b1e574
  42179e:	sbb    DWORD PTR [ecx],edi
  4217a0:	test   al,0x75
  4217a2:	adc    eax,0x74ff6919
  4217a7:	icebp  
  4217a8:	inc    edi
  4217a9:	stc    
  4217aa:	jmp    0xf742181f
  4217af:	(bad)  
  4217b0:	cli    
  4217b1:	movzx  ecx,BYTE PTR [edx]
  4217b4:	sti    
  4217b5:	fdivr  QWORD PTR [ebx]
  4217b7:	pop    ebp
  4217b8:	cli    
  4217b9:	add    al,0xe7
  4217bb:	es inc ecx
  4217bd:	jmp    0xe9580bc3
  4217c2:	add    DWORD PTR [ebp+0x95f6aed],ebp
  4217c8:	jg     0x421817
  4217ca:	pop    es
  4217cb:	push   0x2118ce9
  4217d0:	sti    
  4217d1:	gs jae 0x421759
  4217d4:	je     0x4217b0
  4217d6:	sub    cl,BYTE PTR [ebx+0x55ff6c29]
  4217dc:	or     eax,0x742da9d0
  4217e1:	hlt    
  4217e2:	add    dh,BYTE PTR [edx-0x6]
  4217e5:	add    bl,dh
  4217e7:	sbb    eax,0xb4de4013
  4217ec:	mov    esi,0x1eec110c
  4217f1:	or     dh,dh
  4217f3:	xor    eax,0x4850001
  4217f8:	(bad)  
  4217f9:	jne    0x421795
  4217fb:	in     eax,0xe2
  4217fd:	jge    0x42178f
  4217ff:	inc    eax
  421800:	std    
  421801:	cmp    DWORD PTR [edx],eax
  421803:	or     al,0xf
  421805:	je     0x421849
  421807:	std    
  421808:	outs   dx,BYTE PTR ds:[esi]
  421809:	and    al,0x6e
  42180b:	leave  
  42180c:	sbb    al,0x68
  42180e:	mov    ?,WORD PTR ds:0xa001
  421814:	leave  
  421815:	leave  
  421816:	push   ds
  421817:	sbb    BYTE PTR [ecx-0x36e7e137],bl
  42181d:	retf   0xff02
  421820:	arpl   WORD PTR [ecx],cx
  421822:	adc    BYTE PTR [eax+0x4e],al
  421825:	scas   al,BYTE PTR es:[edi]
  421826:	outs   dx,BYTE PTR ds:[esi]
  421827:	and    al,0x6e
  421829:	scas   al,BYTE PTR es:[edi]
  42182a:	outs   dx,BYTE PTR ds:[esi]
  42182b:	and    al,0x62
  42182d:	mov    dl,0x3e
  42182f:	and    al,0x6e
  421831:	in     eax,0x87
  421833:	inc    esp
  421834:	jb     0x42184b
  421836:	dec    ebx
  421837:	push   esi
  421838:	cdq    
  421839:	retf   0x3302
  42183c:	addr16 dec ebp
  42183e:	imul   edi,esp,0xf8814089
  421844:	imul   ecx,edx,0x18e28d16
  42184a:	add    ebp,ebx
  42184c:	sbb    eax,0x490c3fac
  421851:	retf   0xff12
  421854:	ret    
  421855:	sub    ah,bh
  421857:	jne    0x421847
  421859:	in     al,0xfd
  42185b:	jne    0x421843
  42185d:	aas    
  42185e:	(bad)  
  421860:	aaa    
  421861:	add    BYTE PTR [edi+0x23967aff],bh
  421867:	pop    edx
  421868:	cmc    
  421869:	fdivp  st(6),st
  42186b:	push   edx
  42186c:	mov    esp,0xbfe3812e
  421871:	lea    ebp,[edx]
  421873:	sub    esp,DWORD PTR [ecx+0x33]
  421876:	(bad)  
  421877:	sub    eax,0xb370000
  42187c:	jnp    0x42183d
  42187e:	and    ebp,DWORD PTR [eax-0xe]
  421881:	cmc    
  421882:	or     eax,0x53438833
  421887:	(bad)  
  421889:	jb     0x4218ce
  42188b:	inc    eax
  42188c:	adc    BYTE PTR [esi-0x19],dl
  42188f:	rcl    DWORD PTR [eax],0x18
  421892:	sub    DWORD PTR [ebx+0x5],ecx
  421895:	xor    DWORD PTR [ebx-0x22],0x31b433f
  42189c:	out    0xff,eax
  42189e:	push   0x60302c0a
  4218a3:	pop    ds
  4218a4:	or     DWORD PTR [eax+0x4f],edx
  4218a7:	ret    0xfd00
  4218aa:	push   eax
  4218ab:	rep stos BYTE PTR es:[edi],al
  4218ad:	and    esp,DWORD PTR [ebx]
  4218af:	pop    es
  4218b0:	(bad)  [esi]
  4218b2:	retf   
  4218b3:	out    dx,al
  4218b4:	push   cs
  4218b5:	je     0x4218d0
  4218b7:	xor    eax,DWORD PTR ds:0x36ad3700
  4218bd:	jae    0x421912
  4218bf:	xor    eax,0x55b7336
  4218c4:	cmp    BYTE PTR [edx+0x2f],dh
  4218c7:	outs   dx,BYTE PTR ds:[esi]
  4218c8:	adc    BYTE PTR [eax+0x2a],dh
  4218cb:	int    0xfe
  4218cd:	xchg   BYTE PTR [ebx-0x7478eac7],al
  4218d3:	xor    DWORD PTR [ecx],edx
  4218d5:	mov    esi,DWORD PTR [ebx+0x39]
  4218d8:	in     eax,0x4f
  4218da:	ret    0xac34
  4218dd:	fild   WORD PTR [eax]
  4218df:	add    BYTE PTR [eax+0x64],cl
  4218e2:	mov    dl,0x3a
  4218e4:	gs sub al,0xd7
  4218e7:	dec    esp
  4218e8:	shl    dh,1
  4218ea:	(bad)  
  4218ec:	shl    DWORD PTR [ebx+0x20453b00],cl
  4218f2:	ins    DWORD PTR es:[edi],dx
  4218f3:	rcl    BYTE PTR [esp+ebp*1],0xff
  4218f7:	push   es
  4218f8:	scas   al,BYTE PTR es:[edi]
  4218f9:	jns    0x4218d7
  4218fb:	cmp    ah,BYTE PTR ds:0x44b0e31c
  421901:	call   DWORD PTR [ebp+0x14]
  421904:	pop    es
  421905:	call   FWORD PTR [ebp+0xc]
  421908:	call   0x2233:0xf7113429
  42190f:	(bad)  
  421910:	xchg   ebp,eax
  421911:	popa   
  421912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421913:	getsec 
  421915:	arpl   WORD PTR [edx],bx
  421917:	pop    DWORD PTR [eax+ebx*2]
  42191a:	(bad)  
  42191c:	jae    0x421947
  42191e:	or     al,0x11
  421920:	div    DWORD PTR [ebx]
  421922:	outs   dx,DWORD PTR ds:[esi]
  421923:	pop    ebx
  421924:	pop    eax
  421925:	lds    ax,DWORD PTR [ebx]
  421928:	aaa    
  421929:	mov    eax,0x6714afa8
  42192e:	inc    ebx
  42192f:	packuswb mm6,QWORD PTR [ebx-0x18]
  421933:	rol    BYTE PTR [ebx+0x29],cl
  421936:	nop
  421937:	adc    eax,0x378033f7
  42193c:	sbb    eax,0x208663ff
  421941:	call   esp
  421943:	add    BYTE PTR [eax],al
  421945:	add    BYTE PTR [edi],cl
  421947:	mov    esp,0x671b3a42
  42194c:	dec    ebx
  42194d:	adc    bl,dh
  42194f:	and    DWORD PTR [eax+0x6f5e6a03],ebp
  421955:	inc    esi
  421956:	pop    edi
  421957:	repnz add ebp,ebp
  42195a:	xor    al,0x63
  42195c:	xchg   BYTE PTR ds:0xe92c201c,bh
  421962:	xor    al,0xb8
  421964:	rcl    DWORD PTR [ebp-0x2f3ebc2d],0xf7
  42196b:	sub    dh,BYTE PTR [ebp-0x35]
  42196e:	shl    DWORD PTR [ecx+0x11],cl
  421971:	jg     0x4219a2
  421973:	inc    edi
  421974:	inc    esp
  421975:	aad    0x90
  421977:	es push ecx
  421979:	cdq    
  42197a:	std    
  42197b:	adc    DWORD PTR ds:0xfa36775c,0x7501435c
  421985:	in     eax,dx
  421986:	dec    esp
  421987:	ins    DWORD PTR es:[edi],dx
  421988:	repnz (bad) 
  42198a:	pop    esi
  42198b:	mov    ah,0xf9
  42198d:	into   
  42198e:	loopne 0x4219c7
  421990:	pop    esp
  421991:	(bad)  
  421992:	push   0x3b29147a
  421997:	pop    ebx
  421998:	mov    edi,0x866334d9
  42199d:	mov    ebp,0xd5dc1685
  4219a2:	xor    al,0x34
  4219a4:	xchg   BYTE PTR [edi+ebp*1],dl
  4219a7:	mov    eax,0x1dc1
  4219ac:	dec    esp
  4219ad:	mov    cl,0xf3
  4219af:	adc    eax,0xdd53ab70
  4219b4:	leave  
  4219b5:	in     al,0x75
  4219b7:	fistp  QWORD PTR [ecx+0x2b621978]
  4219bd:	mov    bl,0xc8
  4219bf:	cmc    
  4219c0:	inc    ecx
  4219c1:	push   DWORD PTR [ebp+edi*8-0x26]
  4219c5:	dec    BYTE PTR [edx-0x48]
  4219c8:	or     ch,BYTE PTR [ebx+0x374ce144]
  4219ce:	repnz dec esi
  4219d0:	dec    esi
  4219d1:	mov    ah,0xf9
  4219d3:	add    BYTE PTR [ecx-0x33],dh
  4219d6:	or     bh,bh
  4219d8:	retf   
  4219d9:	sub    eax,0xe3de75fc
  4219de:	std    
  4219df:	jne    0x4219b7
  4219e1:	cmp    al,0xf
  4219e3:	inc    esp
  4219e4:	jmp    0x4219d7
  4219e6:	cli    
  4219e7:	pop    ebp
  4219e8:	mov    ds:0x9b000a77,eax
  4219ed:	mov    al,0xe6
  4219ef:	call   0x3d2643
  4219f4:	pop    edx
  4219f5:	js     0x421a65
  4219f7:	sbb    ecx,eax
  4219f9:	into   
  4219fa:	push   cs
  4219fb:	lea    ecx,[ebx-0x5efd98d7]
  421a01:	into   
  421a02:	push   es
  421a03:	push   0xffffff9e
  421a05:	iret   
  421a06:	cli    
  421a07:	out    0xd2,eax
  421a09:	inc    ebx
  421a0a:	std    
  421a0b:	dec    DWORD PTR ds:0x75fd39
  421a11:	add    BYTE PTR [ecx+0x4625fde6],bl
  421a17:	sub    eax,0x76230041
  421a1c:	or     al,BYTE PTR [eax]
  421a1e:	sbb    ebp,DWORD PTR [edi+0xbffe8e6]
  421a24:	sti    
  421a25:	(bad)  
  421a26:	fidiv  DWORD PTR [eax+0x6e]
  421a29:	inc    edx
  421a2a:	sub    bl,ah
  421a2c:	mov    ebp,0xfaf89e14
  421a31:	push   esi
  421a32:	shr    DWORD PTR [esi],0xd9
  421a35:	adc    bl,BYTE PTR [esi]
  421a37:	cmp    BYTE PTR [eax+0x1494675],cl
  421a3d:	in     eax,dx
  421a3e:	sar    DWORD PTR [ebx],0x81
  421a41:	clc    
  421a42:	mov    eax,ds:0x5e6b1ccd
  421a47:	or     DWORD PTR [edx],eax
  421a49:	add    eax,0x416832
  421a4e:	aaa    
  421a4f:	mov    dh,BYTE PTR [esi+0x9e83613]
  421a55:	mov    DWORD PTR [edi-0x25],edi
  421a58:	test   DWORD PTR [esi+0x3b],esi
  421a5b:	or     ebp,DWORD PTR [ebx-0x253553fb]
  421a61:	xchg   BYTE PTR [edx+0x13],bh
  421a64:	sar    ah,cl
  421a66:	inc    edx
  421a67:	ja     0x421a7d
  421a69:	inc    eax
  421a6a:	aaa    
  421a6b:	mov    esi,0xefd85ad8
  421a70:	jle    0x421a84
  421a72:	ja     0x421a7f
  421a74:	daa    
  421a75:	or     al,0x0
  421a77:	add    BYTE PTR [ebx],bl
  421a79:	or     edi,edi
  421a7b:	xor    edi,0xffffff86
  421a7e:	pop    es
  421a7f:	mov    DWORD PTR [ebx-0x11],ebp
  421a82:	push   es
  421a83:	call   0xfc751713
  421a88:	test   al,0x2f
  421a8a:	stc    
  421a8b:	adc    dh,bh
  421a8d:	or     ah,BYTE PTR [edi]
  421a8f:	hlt    
  421a90:	dec    esp
  421a91:	or     edi,edi
  421a93:	xor    DWORD PTR [edi+0x66],0xc
  421a97:	mov    ebx,edi
  421a99:	cs or  eax,0x32ecc3e8
  421a9f:	cld    
  421aa0:	js     0x421ad1
  421aa2:	leave  
  421aa3:	adc    dh,bh
  421aa5:	or     dl,dl
  421aa7:	mov    BYTE PTR [ebx-0x77],bl
  421aaa:	mov    eax,0xa28360b
  421aaf:	sbb    edx,0x2672fafe
  421ab5:	mov    bl,0x55
  421ab7:	sub    BYTE PTR [edi],dh
  421ab9:	or     edi,DWORD PTR [ebx-0x41]
  421abc:	retf   
  421abd:	add    cl,BYTE PTR [eax-0x744cd8b6]
  421ac3:	in     eax,dx
  421ac4:	xor    BYTE PTR [ebx+0x3452fcd8],cl
  421aca:	loopne 0x421adc
  421acc:	ja     0x421b02
  421ace:	mov    ch,0xa9
  421ad0:	sbb    DWORD PTR [eax+ebp*8+0x401d4aaf],edx
  421ad7:	mov    ch,0x5e
  421ad9:	xor    al,0xe8
  421adb:	mov    al,BYTE PTR [eax]
  421add:	add    BYTE PTR [eax],bl
  421adf:	mov    dl,0x4d
  421ae1:	mov    cl,0x37
  421ae3:	je     0x421b24
  421ae5:	rcr    eax,cl
  421ae7:	(bad)  
  421ae8:	inc    DWORD PTR [ebx]
  421aea:	aaa    
  421aeb:	mov    al,0x28
  421aed:	mov    al,0x76
  421aef:	addr16 mov dl,0xce
  421af2:	dec    esi
  421af3:	add    eax,0x25431114
  421af8:	test   al,0x3
  421afa:	addr16 sti 
  421afc:	fnstsw WORD PTR [edi-0x75178bcf]
  421b02:	add    eax,0xb0c3d708
  421b07:	mov    esi,0x34371360
  421b0c:	aaa    
  421b0d:	aaa    
  421b0e:	fdiv   DWORD PTR gs:[edx-0x4505673e]
  421b15:	jbe    0x421b4d
  421b17:	xor    eax,0x2a9e03e8
  421b1c:	shl    bl,1
  421b1e:	outs   dx,BYTE PTR ds:[esi]
  421b1f:	xor    al,0xe8
  421b21:	sar    BYTE PTR [ebx+0x41],cl
  421b24:	xchg   esp,eax
  421b25:	dec    ebp
  421b26:	div    DWORD PTR [ebx]
  421b28:	stos   DWORD PTR es:[edi],eax
  421b29:	dec    ebp
  421b2a:	das    
  421b2b:	repz sbb al,0x26
  421b2e:	add    ebx,DWORD PTR [edx+0x3f]
  421b31:	rcl    DWORD PTR [eax-0x76],1
  421b34:	scas   al,BYTE PTR es:[edi]
  421b35:	add    esi,DWORD PTR [edi]
  421b37:	inc    edi
  421b38:	test   al,0xd8
  421b3a:	jbe    0x421b6c
  421b3c:	call   0x6a4acb11
  421b41:	daa    
  421b42:	add    BYTE PTR [eax],al
  421b44:	nop
  421b45:	xor    BYTE PTR [ecx],al
  421b47:	jmp    0x6e43a980
  421b4c:	inc    edi
  421b4d:	sub    BYTE PTR [eax],dl
  421b4f:	test   eax,0xf4fa6434
  421b54:	fsubr  DWORD PTR [ecx]
  421b56:	inc    ecx
  421b57:	jmp    0xe8a5153a
  421b5c:	fadd   DWORD PTR [eax+0x18]
  421b5f:	push   ecx
  421b60:	dec    edi
  421b61:	push   edx
  421b62:	add    ecx,ebp
  421b64:	stos   DWORD PTR es:[edi],eax
  421b65:	jne    0x421b60
  421b67:	ins    BYTE PTR es:[edi],dx
  421b68:	je     0x421af0
  421b6a:	add    ebp,DWORD PTR [ecx-0x16fe46e5]
  421b70:	xor    al,0x62
  421b72:	push   edx
  421b73:	xchg   ebx,eax
  421b74:	xor    al,0xaf
  421b76:	test   cl,dl
  421b78:	or     eax,edi
  421b7a:	cli    
  421b7b:	mov    ecx,0xcb09539c
  421b80:	or     DWORD PTR [ebx],edx
  421b82:	xchg   edx,eax
  421b83:	shl    BYTE PTR [esp+esi*1],1
  421b86:	mov    WORD PTR [esi+ecx*4],?
  421b89:	sti    
  421b8a:	cli    
  421b8b:	out    dx,al
  421b8c:	pop    ebp
  421b8d:	jmp    0xacad0204
  421b92:	leave  
  421b93:	ins    BYTE PTR es:[edi],dx
  421b94:	and    BYTE PTR [ebx-0x4],cl
  421b97:	(bad)  
  421b98:	dec    edx
  421b99:	inc    esp
  421b9a:	rol    ecx,0xf9
  421b9d:	cmp    edx,0x51f0aec6
  421ba3:	ror    DWORD PTR [edx],1
  421ba5:	cmp    dl,0xb6
  421ba8:	add    BYTE PTR [eax],al
  421baa:	mov    esi,0x38ae51ef
  421baf:	mov    WORD PTR [esi],cs
  421bb1:	sub    DWORD PTR [ebx],edi
  421bb3:	lods   eax,DWORD PTR ds:[esi]
  421bb4:	ret    0x2239
  421bb7:	es cdq 
  421bb9:	sti    
  421bba:	je     0x421bb6
  421bbc:	mov    DWORD PTR [edi+ecx*1],esp
  421bbf:	adc    ecx,esp
  421bc1:	add    BYTE PTR [esi+esi*1+0x1],ah
  421bc5:	test   BYTE PTR [esi-0x64aca83d],cl
  421bcb:	leave  
  421bcc:	xchg   esi,eax
  421bcd:	mov    eax,0x130ab
  421bd2:	xchg   BYTE PTR [ecx],dl
  421bd4:	test   DWORD PTR [eax],0xec2fad0e
  421bda:	or     al,0xf6
  421bdc:	cli    
  421bdd:	mov    edx,0x13056
  421be2:	popf   
  421be3:	inc    eax
  421be4:	das    
  421be5:	fsub   QWORD PTR [eax]
  421be7:	repz cli 
  421be9:	(bad)  
  421bea:	push   eax
  421beb:	mov    cl,0x79
  421bed:	cmp    ah,ch
  421bef:	cmp    BYTE PTR [edi+0x33],ch
  421bf2:	gs mov ecx,0x35928df6
  421bf8:	dec    DWORD PTR [eax+0x75fd41a3]
  421bfe:	cmp    dh,BYTE PTR [ecx+0x3f3b307f]
  421c04:	std    
  421c05:	push   eax
  421c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c07:	xchg   BYTE PTR ss:[ebp-0x2bf1a],al
  421c0e:	add    BYTE PTR [eax],al
  421c10:	into   
  421c11:	mov    dl,0x3f
  421c13:	pushf  
  421c14:	pop    esi
  421c15:	dec    eax
  421c16:	(bad)  
  421c17:	fimul  DWORD PTR [esi+0x33ff5035]
  421c1d:	pop    esp
  421c1e:	aam    0x43
  421c20:	sahf   
  421c21:	inc    eax
  421c22:	aam    0x3b
  421c24:	ror    ecx,1
  421c26:	aad    0x5b
  421c28:	mov    ecx,0x2be8f2ca
  421c2d:	pop    ebp
  421c2e:	cli    
  421c2f:	(bad)  
  421c30:	cmp    DWORD PTR [ebx],eax
  421c32:	mov    ebx,0xfe73a75e
  421c37:	jmp    DWORD PTR [ebx]
  421c39:	stos   DWORD PTR es:[edi],eax
  421c3a:	out    0x51,al
  421c3c:	aaa    
  421c3d:	ds retf 
  421c3f:	push   esp
  421c40:	mov    esp,0xf4d1fae8
  421c45:	or     dh,dl
  421c47:	fsub   st,st(4)
  421c49:	sbb    eax,0x4c215bad
  421c4e:	add    eax,0x2681bc51
  421c53:	int3   
  421c54:	or     BYTE PTR [ebx],cl
  421c56:	call   DWORD PTR [eax-0x7c]
  421c59:	jecxz  0x421ca2
  421c5b:	in     eax,dx
  421c5c:	jbe    0x421c69
  421c5e:	rol    BYTE PTR [edi-0x43d9958e],cl
  421c64:	call   0x5a7a1b73
  421c69:	cmp    ch,BYTE PTR [ebx-0x54b1d2f9]
  421c6f:	add    esp,DWORD PTR [ebx+ecx*2]
  421c72:	sub    DWORD PTR [eax],eax
  421c74:	add    BYTE PTR [eax],al
  421c76:	and    al,0x4b
  421c78:	mov    esi,0x47f6795c
  421c7d:	shr    BYTE PTR [edx-0x6a],0x22
  421c81:	jle    0x421c5e
  421c83:	cmp    bh,dh
  421c85:	push   DWORD PTR [edi]
  421c87:	sahf   
  421c88:	int3   
  421c89:	push   esp
  421c8a:	dec    ebp
  421c8b:	or     eax,DWORD PTR [edx+eax*4-0x3d0fd99]
  421c92:	pop    es
  421c93:	mov    bl,0xe1
  421c95:	pop    es
  421c96:	push   ebp
  421c97:	adc    bl,BYTE PTR [esi]
  421c99:	jle    0x421cea
  421c9b:	or     edi,edi
  421c9d:	mov    cl,BYTE PTR [edx]
  421c9f:	sub    DWORD PTR [ebp-0x16],0x37
  421ca3:	or     edi,edi
  421ca5:	out    0xe0,eax
  421ca7:	cmc    
  421ca8:	add    eax,0x6ed64500
  421cad:	(bad)  
  421cae:	jo     0x421cba
  421cb0:	jg     0x421c3c
  421cb2:	mov    dl,0xfa
  421cb4:	das    
  421cb5:	cld    
  421cb6:	pusha  
  421cb7:	xor    edi,DWORD PTR [eax]
  421cb9:	xor    ebp,0x53db389b
  421cbf:	push   ds
  421cc0:	and    al,0x17
  421cc2:	div    DWORD PTR [ebx]
  421cc4:	gs inc esp
  421cc6:	lds    esi,FWORD PTR [eax+edx*1+0x38]
  421cca:	cmp    eax,edi
  421ccc:	call   0xd7566203
  421cd1:	ret    
  421cd2:	sub    BYTE PTR [ecx-0x758fcfdb],ch
  421cd8:	jmp    0x18421d7a
  421cdd:	test   eax,0x5f808ba5
  421ce2:	popa   
  421ce3:	mov    cl,0xc
  421ce5:	clc    
  421ce6:	cmc    
  421ce7:	xlat   BYTE PTR ds:[ebx]
  421ce8:	xor    BYTE PTR [eax+ebp*8-0x78],dh
  421cec:	mov    eax,0xb580d981
  421cf1:	inc    esp
  421cf2:	xor    esi,DWORD PTR [ebx]
  421cf4:	jmp    0x421d5a
  421cf6:	pop    ebp
  421cf7:	mov    ecx,0x4eea0cdc
  421cfc:	fdiv   st,st(7)
  421cfe:	clts   
  421d00:	add    eax,0x44446cf4
  421d05:	or     al,BYTE PTR es:[edi+0x40]
  421d09:	sti    
  421d0a:	in     eax,dx
  421d0b:	mov    ch,0x93
  421d0d:	inc    edx
  421d0e:	sub    bl,dl
  421d10:	adc    bl,BYTE PTR [ebx+0x21]
  421d13:	inc    edi
  421d14:	fdiv   DWORD PTR ds:0x5e053aff
  421d1a:	cmp    esi,DWORD PTR [ebx]
  421d1c:	and    al,0x50
  421d1e:	clc    
  421d1f:	xor    ah,BYTE PTR ds:0x88c3f69c
  421d25:	stos   BYTE PTR es:[edi],al
  421d26:	shl    BYTE PTR [eax-0x68],1
  421d29:	xor    ebp,eax
  421d2b:	add    edi,DWORD PTR [esi]
  421d2d:	stc    
  421d2e:	cmp    dh,dh
  421d30:	mov    dl,0x70
  421d32:	add    DWORD PTR [ecx-0x51ab088f],ebx
  421d38:	aas    
  421d39:	fmul   QWORD PTR [edi]
  421d3b:	sub    DWORD PTR [ebx],esi
  421d3d:	stc    
  421d3e:	xor    al,0xe1
  421d40:	add    BYTE PTR [eax],al
  421d42:	in     al,0x73
  421d44:	add    DWORD PTR [ecx-0x710408db],eax
  421d4a:	mov    ecx,0x71993952
  421d4f:	idiv   edx
  421d51:	mov    edx,0x4a636174
  421d56:	hlt    
  421d57:	out    0x3e,al
  421d59:	jmp    0xfc1f3fc3
  421d5e:	hlt    
  421d5f:	imul   cl
  421d61:	xchg   DWORD PTR [esp+esi*1],esi
  421d64:	add    DWORD PTR [edx-0x552e8d54],edi
  421d6a:	xor    al,0xf9
  421d6c:	adc    al,0x21
  421d6e:	and    dh,BYTE PTR [ecx+eax*1-0x12]
  421d72:	ins    DWORD PTR es:[edi],dx
  421d73:	sbb    al,BYTE PTR [ecx+0x19]
  421d76:	icebp  
  421d77:	idiv   bh
  421d79:	or     eax,0xaad13f66
  421d7e:	xor    al,0x3d
  421d80:	fcom   QWORD PTR [edi-0x112e426f]
  421d86:	xor    al,0x34
  421d88:	jmp    0xfb3b5280
  421d8d:	ins    DWORD PTR es:[edi],dx
  421d8e:	je     0x421d13
  421d90:	imul   ebp,esi,0x2d
  421d93:	sub    al,BYTE PTR [ecx+0x19]
  421d96:	jno    0x421d8e
  421d98:	xchg   DWORD PTR [ecx+eax*4],esp
  421d9b:	out    dx,eax
  421d9c:	es mov cl,0x18
  421d9f:	and    eax,DWORD PTR [ecx]
  421da1:	mov    BYTE PTR [ebx+0xe93ee6],ah
  421da7:	add    BYTE PTR [edx-0x57],ah
  421daa:	or     eax,0xe9666421
  421daf:	add    BYTE PTR [edx+0x5dfffc2f],bh
  421db5:	sbb    eax,0x301dd039
  421dba:	xchg   BYTE PTR [ecx+edx*2],al
  421dbd:	loop   0x421dbc
  421dbf:	je     0x421e2b
  421dc1:	sub    cl,BYTE PTR [edi-0x18]
  421dc4:	mov    esi,0x38fffc2f
  421dc9:	jnp    0x421df2
  421dcb:	inc    eax
  421dcc:	jle    0x421dbe
  421dce:	cli    
  421dcf:	jmp    0x61c6:0x1b06757f
  421dd6:	std    
  421dd7:	(bad)  
  421dd8:	mov    eax,ds:0xfb74baac
  421ddd:	js     0x421de6
  421ddf:	cmp    BYTE PTR [esi-0x11],bl
  421de2:	cli    
  421de3:	mov    WORD PTR [edx],ds
  421de5:	add    eax,0x2da90f4b
  421dea:	inc    ecx
  421deb:	ror    ch,1
  421ded:	xor    esp,edi
  421def:	je     0x421e1b
  421df1:	sub    BYTE PTR [esi-0x1d1e60fc],al
  421df7:	lods   eax,DWORD PTR ds:[esi]
  421df8:	fiadd  WORD PTR [ebp+edi*8+0x66]
  421dfc:	push   edi
  421dfd:	and    eax,0x318dd041
  421e02:	imul   eax,DWORD PTR [esi+ecx*1-0x11],0x65cbfefa
  421e0a:	adc    BYTE PTR [eax+0x0],al
  421e0d:	add    dh,cl
  421e0f:	call   0x6fd57c71
  421e14:	(bad)  
  421e15:	dec    eax
  421e17:	cmp    DWORD PTR [esi],0xffffffd0
  421e1a:	fnsave [ecx]
  421e1c:	push   ebx
  421e1d:	dec    DWORD PTR [ebx-0x71bfef97]
  421e23:	xchg   edi,eax
  421e24:	push   cs
  421e25:	pop    eax
  421e26:	jno    0x421e26
  421e28:	shl    BYTE PTR cs:[edi],1
  421e2b:	dec    edx
  421e2c:	add    eax,0x5527d466
  421e31:	inc    eax
  421e32:	aaa    
  421e33:	jecxz  0x421e2e
  421e35:	push   DWORD PTR [ecx-0x4a]
  421e38:	cmc    
  421e39:	mov    edi,0x7e9472e
  421e3e:	jmp    0x421e17
  421e40:	xor    DWORD PTR [ebx+0x13],esi
  421e43:	add    ecx,edi
  421e45:	cmp    BYTE PTR [edi-0x6a],0x16
  421e49:	cmp    DWORD PTR [esi-0x63],edx
  421e4c:	xor    DWORD PTR [ebp-0x6c],edx
  421e4f:	fisttp WORD PTR [esi+0x40]
  421e52:	aaa    
  421e53:	scas   al,BYTE PTR es:[edi]
  421e54:	adc    ebx,esp
  421e56:	inc    ebp
  421e57:	dec    ebx
  421e58:	add    eax,0xff06f55e
  421e5d:	push   edx
  421e5e:	lods   al,BYTE PTR ds:[esi]
  421e5f:	jbe    0x421de6
  421e61:	jecxz  0x421e82
  421e63:	mov    WORD PTR [edx],ds
  421e65:	jae    0x421e9b
  421e67:	or     edi,edi
  421e69:	push   eax
  421e6a:	popa   
  421e6b:	mov    dh,0x7d
  421e6d:	jp     0x421e9e
  421e6f:	nop
  421e70:	xor    DWORD PTR [eax+eax*1],ecx
  421e73:	add    BYTE PTR [ebx+0x37fffe2d],dh
  421e79:	arpl   si,dx
  421e7b:	daa    
  421e7c:	aaa    
  421e7d:	or     eax,DWORD PTR [ebx-0xb70cf41]
  421e83:	(bad)  
  421e84:	fmul   DWORD PTR [edx]
  421e86:	jle    0x421ecc
  421e88:	cmp    ebx,eax
  421e8a:	inc    DWORD PTR [ecx]
  421e8c:	aaa    
  421e8d:	or     eax,DWORD PTR [edx]
  421e8f:	add    DWORD PTR [edx+ecx*1-0x38b00001],0x4e
  421e97:	inc    eax
  421e98:	aaa    
  421e99:	not    BYTE PTR [eax+ebx*8]
  421e9c:	inc    ebp
  421e9d:	retf   
  421e9e:	(bad)  
  421e9f:	gs mov ah,0xc7
  421ea2:	jmp    0x4203:0xe833f4cf
  421ea9:	scas   al,BYTE PTR es:[edi]
  421eaa:	ins    DWORD PTR es:[edi],dx
  421eab:	add    al,0x37
  421ead:	xor    al,0x90
  421eaf:	das    
  421eb0:	xor    DWORD PTR [ebx],0xffffffe8
  421eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421eb4:	jns    0x421ee5
  421eb6:	add    al,0x54
  421eb8:	div    DWORD PTR [ebx]
  421eba:	ins    DWORD PTR es:[edi],dx
  421ebb:	mov    eax,0x1b705014
  421ec0:	pusha  
  421ec1:	hlt    
  421ec2:	call   0xe93d06e2
  421ec7:	add    edi,DWORD PTR [esi-0x61e3c713]
  421ecd:	add    eax,0x6fb92f93
  421ed2:	(bad)  
  421ed3:	push   DWORD PTR [ebp+0xa2fcf3]
  421ed9:	add    BYTE PTR [ebp-0x1f103b98],bh
  421edf:	fucomp st(0)
  421ee1:	add    esi,DWORD PTR [edi]
  421ee3:	fdiv   QWORD PTR [esi+0x75f4182c]
  421ee9:	mov    eax,0x1aa04454
  421eee:	or     ah,dh
  421ef0:	call   0xe92f7310
  421ef5:	add    ebx,DWORD PTR [eax-0xf3ce7d8]
  421efb:	mov    eax,0xbf36b828
  421f00:	cmp    BYTE PTR [edi],ch
  421f02:	inc    ebp
  421f03:	mov    eax,0x83d8c3d6
  421f08:	and    edi,ecx
  421f0a:	inc    esp
  421f0b:	or     BYTE PTR [eax-0x338743fd],ch
  421f11:	(bad)  
  421f12:	push   0xffffff84
  421f14:	dec    edi
  421f15:	or     BYTE PTR [eax-0x137f170d],bh
  421f1b:	sbb    BYTE PTR [eax+0x5],dh
  421f1e:	aaa    
  421f1f:	xor    al,0x1
  421f21:	add    esi,edi
  421f23:	fsincos 
  421f25:	out    dx,al
  421f26:	sbb    eax,0xb4052567
  421f2b:	not    DWORD PTR [ecx]
  421f2d:	jb     0x421f20
  421f2f:	sub    cl,0xee
  421f32:	in     al,0xef
  421f34:	cli    
  421f35:	bound  esi,QWORD PTR [edx]
  421f37:	mov    bh,dl
  421f39:	sbb    DWORD PTR [ebx-0x44],esi
  421f3c:	jl     0x421f2f
  421f3e:	add    BYTE PTR [eax],al
  421f40:	int3   
  421f41:	ja     0x421f14
  421f43:	sub    bh,BYTE PTR [ebx]
  421f45:	icebp  
  421f46:	adc    al,0x8d
  421f48:	inc    esi
  421f49:	je     0x421f4c
  421f4b:	xchg   edx,eax
  421f4c:	mov    ebp,DWORD PTR [esi]
  421f4e:	add    eax,ebp
  421f50:	xor    al,0x34
  421f52:	je     0x421f57
  421f54:	mov    ah,0x70
  421f56:	or     edx,esi
  421f58:	adc    BYTE PTR [edi-0x74],0x2d
  421f5c:	pop    ds
  421f5d:	imul   edx,DWORD PTR [ecx+0x7e],0x4f
  421f61:	cld    
  421f62:	push   cs
  421f63:	sub    DWORD PTR [ebx],edi
  421f65:	mov    bh,0xc1
  421f67:	cmc    
  421f68:	call   FWORD PTR [ecx+eax*1-0x2d]
  421f6c:	adc    edi,DWORD PTR [esi-0x7bc4fabb]
  421f72:	mov    WORD PTR [ebp+0x18],gs
  421f75:	mov    bh,0x1
  421f77:	jmp    0x864ca3b0
  421f7c:	stc    
  421f7d:	inc    eax
  421f7e:	and    al,0x3e
  421f80:	xor    al,0x34
  421f82:	add    DWORD PTR [ecx+0x2e096811],ebx
  421f88:	aas    
  421f89:	add    BYTE PTR [edi],cl
  421f8b:	test   eax,0x9fc1b734
  421f90:	xlat   BYTE PTR ds:[ebx]
  421f91:	mov    bl,0xf9
  421f93:	call   0x8ec05d17
  421f98:	mov    esp,0xa700743a
  421f9d:	into   
  421f9e:	cmp    bh,BYTE PTR [ecx-0x22]
  421fa1:	ss call 0x29421fbd
  421fa7:	out    dx,eax
  421fa8:	or     DWORD PTR fs:[edx],0xffffffdb
  421fac:	or     ah,BYTE PTR [eax]
  421fae:	in     al,dx
  421faf:	inc    esi
  421fb0:	xor    cl,cl
  421fb2:	lock outs dx,BYTE PTR ds:[esi]
  421fb4:	inc    esi
  421fb5:	inc    esp
  421fb6:	jle    0x422029
  421fb8:	ds and al,0x7e
  421fbb:	push   es
  421fbc:	jecxz  0x422029
  421fbe:	jnp    0x421fe0
  421fc0:	std    
  421fc1:	push   edi
  421fc2:	test   eax,0xe14b14a
  421fc7:	cmp    BYTE PTR [esi+ebx*2+0x45],bl
  421fcb:	ins    DWORD PTR es:[edi],dx
  421fcc:	fistp  WORD PTR [ebp-0x64]
  421fcf:	cmp    eax,DWORD PTR [ecx]
  421fd1:	push   ebp
  421fd2:	lds    edx,FWORD PTR [ebx]
  421fd4:	push   esp
  421fd5:	mov    esp,DWORD PTR [ebx]
  421fd7:	lock push ebp
  421fd9:	push   esi
  421fda:	test   eax,0x5e14bd4a
  421fdf:	cmp    BYTE PTR [eax+0x2a1a7f8],cl
  421fe5:	call   0x3cfabd
  421fea:	xchg   edx,eax
  421feb:	js     0x42205c
  421fed:	pop    es
  421fee:	test   DWORD PTR [edi-0x1d],esi
  421ff1:	lea    ebx,[esi]
  421ff3:	add    DWORD PTR ss:[ebp-0x7d811097],eax
  421ffa:	push   cs
  421ffb:	add    DWORD PTR ss:[ebx+0xa753578],eax
  422002:	pop    ebp
  422003:	and    al,BYTE PTR [edi]
  422005:	je     0x421fda
  422007:	mov    ah,0xfc
  422009:	pop    es
  42200a:	add    BYTE PTR [eax],al
  42200c:	mov    ds:0x195751a4,eax
  422011:	dec    ecx
  422012:	push   ecx
  422013:	adc    DWORD PTR [esi+0x37d88835],ebx
  422019:	pusha  
  42201a:	dec    eax
  42201b:	jae    0x422070
  42201d:	push   esi
  42201e:	inc    ebx
  42201f:	inc    edi
  422020:	sub    ebx,eax
  422022:	and    edi,0x80f76731
  422028:	(bad)  
  422029:	loope  0x421fde
  42202b:	pop    ss
  42202c:	lods   al,BYTE PTR ds:[esi]
  42202d:	out    0x19,al
  42202f:	adc    al,0xe4
  422031:	test   dh,bh
  422033:	cmp    BYTE PTR [edi+0x12],0x17
  422037:	pop    ecx
  422038:	pusha  
  422039:	or     DWORD PTR [esi],ebp
  42203b:	mov    BYTE PTR [edi-0xa],bh
  42203e:	not    BYTE PTR [eax-0x23]
  422041:	ficomp DWORD PTR [ecx]
  422043:	in     al,dx
  422044:	mov    esp,0x6082fd30
  422049:	das    
  42204a:	fidivr DWORD PTR [ebp-0x3e350d]
  422050:	jmp    0x51b:0x25d81399
  422057:	push   0xffc543fb
  42205c:	push   eax
  42205d:	shr    DWORD PTR [edx],1
  42205f:	cld    
  422060:	xor    BYTE PTR [edx+0x1d],dl
  422063:	(bad)  
  422064:	sub    esi,DWORD PTR [edx+0x2d]
  422067:	push   ebp
  422068:	and    BYTE PTR [eax],dl
  42206a:	dec    ebx
  42206b:	adc    DWORD PTR [edi-0x25],esi
  42206e:	jmp    0x8b42216b
  422073:	loope  0x42204a
  422075:	out    0x32,eax
  422077:	xchg   ecx,eax
  422078:	sub    al,0xfc
  42207a:	add    BYTE PTR [eax],dl
  42207c:	idiv   esp
  42207e:	and    ah,BYTE PTR [edi-0x69c8bff1]
  422084:	jns    0x4220c8
  422086:	aas    
  422087:	ror    ah,cl
  422089:	pop    edx
  42208a:	cmc    
  42208b:	fdivp  st(6),st
  42208d:	push   ebp
  42208e:	lods   al,BYTE PTR ds:[esi]
  42208f:	out    0x42,eax
  422091:	adc    BYTE PTR [edi+0x34],dh
  422094:	call   0x1b757f6d
  422099:	mov    bh,0x14
  42209b:	dec    eax
  42209c:	call   DWORD PTR [eax]
  42209e:	scas   al,BYTE PTR es:[edi]
  42209f:	xchg   esp,eax
  4220a1:	(bad)  
  4220a2:	mov    edi,0x85061100
  4220a7:	xor    ebp,eax
  4220a9:	xchg   eax,esp
  4220ab:	fistp  WORD PTR [bx+di-0x76c9]
  4220b0:	jmp    0x422106
  4220b2:	mov    edi,0x52b6deb
  4220b7:	fidivr DWORD PTR [ebx]
  4220b9:	retf   0x3b76
  4220bc:	call   0x6821d091
  4220c1:	and    BYTE PTR [eax-0x4c],ch
  4220c4:	aam    0x10
  4220c6:	push   es
  4220c7:	mov    dl,BYTE PTR [ebx]
  4220c9:	sub    esp,ebp
  4220cb:	aas    
  4220cc:	pop    edi
  4220cd:	ss pop ebx
  4220cf:	data16 loopne 0x42214e
  4220d2:	les    edx,FWORD PTR [edi]
  4220d4:	int3   
  4220d5:	jl     0x4220d7
  4220d7:	add    ah,bh
  4220d9:	pop    ss
  4220da:	add    BYTE PTR [ebx],ch
  4220dc:	and    eax,0x38c3f7a8
  4220e1:	mov    ebp,0x400f81b0
  4220e6:	ins    BYTE PTR es:[edi],dx
  4220e7:	jg     0x422111
  4220e9:	lock call 0xe0c40ce9
  4220ef:	js     0x422165
  4220f1:	sbb    al,dl
  4220f3:	rcl    DWORD PTR [ebx],cl
  4220f5:	imul   ecx,DWORD PTR [eax+edx*1],0xf7a5a73a
  4220fc:	mov    ?,WORD PTR [edx]
  4220fe:	sub    DWORD PTR [eax+ebp*1],esp
  422101:	cmp    ebp,DWORD PTR [ecx]
  422103:	aam    0x5e
  422105:	xor    al,0xd0
  422107:	jg     0x4220f1
  422109:	out    dx,eax
  42210a:	call   0x18c04e5
  42210f:	sub    DWORD PTR [eax+0x74],eax
  422112:	add    DWORD PTR [ebx+edi*2+0x62],esp
  422116:	add    eax,0x5ddc79da
  42211b:	jb     0x422114
  42211d:	adc    ebx,DWORD PTR [ecx]
  42211f:	push   0xb
  422121:	lock je 0x4220c0
  422124:	xor    DWORD PTR [edx],esp
  422126:	mov    ecx,0x68ef74da
  42212b:	stc    
  42212c:	mov    DWORD PTR [esi-0xecf32a3],esi
  422132:	shl    DWORD PTR [edx-0x62],cl
  422135:	stos   DWORD PTR es:[edi],eax
  422136:	push   cs
  422137:	sub    DWORD PTR [ebx],esi
  422139:	cmp    eax,DWORD PTR [ecx]
  42213b:	jmp    0x3c762140
  422140:	push   ecx
  422141:	inc    ebx
  422142:	inc    ebx
  422143:	test   dl,bh
  422145:	mov    dh,0x1d
  422147:	bound  ecx,QWORD PTR ds:0x21137872
  42214d:	mov    esi,0x258637a7
  422152:	push   edi
  422153:	inc    edi
  422154:	jmp    0xfb323d99
  422159:	adc    eax,DWORD PTR [ebx]
  42215b:	lock jne 0x422123
  42215e:	sub    al,0xbd
  422160:	fst    DWORD PTR [esi-0x7105ee1a]
  422166:	pop    ebp
  422167:	call   0xf0a534bd
  42216c:	jne    0x422133
  42216e:	cmp    cl,dh
  422170:	rol    BYTE PTR [edx-0xa0c4cca],cl
  422176:	cmp    dh,BYTE PTR [edi-0x440139fd]
  42217c:	mov    esi,0x5cd281c2
  422181:	sub    edi,esp
  422183:	out    dx,al
  422184:	push   ebp
  422185:	bound  ecx,QWORD PTR [eax-0x4c]
  422188:	in     eax,0x0
  42218a:	jbe    0x422142
  42218c:	out    0x64,al
  42218e:	mov    ebp,0x8dffd86d
  422193:	out    0x7a,al
  422195:	jnp    0x42216d
  422197:	aaa    
  422198:	mov    BYTE PTR [ebx-0x3e],al
  42219b:	add    al,0x56
  42219d:	mov    ebx,DWORD PTR [edi]
  42219f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221a0:	pop    es
  4221a1:	add    DWORD PTR [eax],0x0
  4221a4:	es iret 
  4221a6:	je     0x4221b0
  4221a8:	mov    ah,0x38
  4221aa:	pop    ecx
  4221ab:	jmp    0x4354eb
  4221b0:	(bad)  
  4221b1:	out    0x87,al
  4221b3:	jl     0x42221f
  4221b5:	rcl    BYTE PTR [edx-0x18],cl
  4221b8:	loop   0x4221de
  4221ba:	cli    
  4221bb:	dec    DWORD PTR [eax+0x71]
  4221be:	lds    edx,FWORD PTR [eax-0x1c]
  4221c1:	cmc    
  4221c2:	pop    ebp
  4221c3:	(bad)  
  4221c4:	fcmovbe st,st(3)
  4221c6:	sub    ch,al
  4221c8:	adc    edx,DWORD PTR ds:0xfb17fffc
  4221ce:	jg     0x422190
  4221d0:	and    eax,esi
  4221d2:	xor    eax,eax
  4221d4:	push   cs
  4221d5:	dec    ebx
  4221d6:	mov    ecx,0x30325e00
  4221db:	call   FWORD PTR [ecx]
  4221dd:	add    eax,0x67a4488
  4221e2:	dec    ebx
  4221e3:	xor    ebx,DWORD PTR [eax-0x5dbc19a]
  4221e9:	add    DWORD PTR [esp+esi*2+0x748409fa],eax
  4221f0:	cli    
  4221f1:	add    eax,0xe1ea7484
  4221f6:	loop   0x4221f0
  4221f8:	dec    eax
  4221f9:	sbb    bh,ch
  4221fb:	test   BYTE PTR [esi+0x65],bl
  4221fe:	ds and al,0x2
  422201:	in     eax,dx
  422202:	jle    0x42218b
  422204:	aaa    
  422205:	(bad)  
  422207:	inc    DWORD PTR [eax]
  422209:	add    al,dh
  42220b:	dec    edx
  42220c:	popf   
  42220d:	leave  
  42220e:	cmp    ebx,ebx
  422210:	dec    BYTE PTR [edi-0x4e]
  422213:	xchg   edi,eax
  422214:	ficomp DWORD PTR [edi]
  422216:	iret   
  422217:	ss push 0xfffffffd
  42221a:	rcl    BYTE PTR [edi+0x45],1
  42221d:	jae    0x422278
  42221f:	push   ss
  422220:	mov    cl,0x23
  422222:	sub    esp,DWORD PTR [edx-0x3f]
  422225:	and    ebx,DWORD PTR [ebx]
  422227:	xor    edx,ebx
  422229:	daa    
  42222a:	aaa    
  42222b:	fcmovnbe st,st(7)
  42222d:	inc    ebx
  42222e:	push   ebx
  42222f:	shr    ebp,cl
  422231:	lds    esp,FWORD PTR [ecx]
  422233:	retf   
  422234:	jge    0x422279
  422236:	push   ebx
  422237:	add    ebx,DWORD PTR [ebp-0x39b6bbd6]
  42223d:	hlt    
  42223e:	xchg   BYTE PTR [edx],dl
  422240:	dec    edi
  422241:	jb     0x422239
  422243:	arpl   WORD PTR [edx+0x3f422723],bp
  422249:	jne    0x42229e
  42224b:	push   edx
  42224c:	mov    ds:0x2e624323,al
  422251:	cld    
  422252:	in     al,0xd6
  422254:	push   ss
  422255:	mov    ds:0x83fedaf3,al
  42225a:	ja     0x422283
  42225c:	add    ebp,edi
  42225e:	repz dec BYTE PTR [esi]
  422261:	cmp    DWORD PTR [eax+0x0],0xc64d72b9
  422268:	stos   BYTE PTR es:[edi],al
  422269:	and    ecx,DWORD PTR [ebx-0x4d]
  42226c:	or     eax,0x290000fc
  422271:	mov    dh,0x73
  422273:	inc    ebx
  422274:	pop    ebx
  422275:	movhps QWORD PTR [edi],xmm2
  422278:	in     al,0x64
  42227a:	sub    DWORD PTR [eax],esi
  42227c:	mul    DWORD PTR [ebx+0x342723aa]
  422282:	repz pop eax
  422285:	fdiv   st,st(4)
  422287:	sub    BYTE PTR [eax+ebx*1-0x170de404],al
  42228e:	dec    edx
  42228f:	sub    BYTE PTR [ebp-0x30f7f389],bh
  422295:	call   0xb91d4c10
  42229a:	sub    ecx,eax
  42229c:	jb     0x422227
  42229e:	pop    edi
  42229f:	push   ds
  4222a0:	ins    DWORD PTR es:[edi],dx
  4222a1:	icebp  
  4222a2:	mov    ebp,0xcb2cc7c
  4222a7:	outs   dx,DWORD PTR ds:[esi]
  4222a8:	xor    dh,BYTE PTR [eax+ebp*8]
  4222ab:	aam    0x67
  4222ad:	or     DWORD PTR [ebx+0x88eb1d0],esi
  4222b3:	jp     0x4222b2
  4222b5:	xlat   BYTE PTR ds:[ebx]
  4222b6:	jno    0x42227e
  4222b8:	mov    BYTE PTR [edx-0x7146d06b],bh
  4222be:	and    al,0x7a
  4222c0:	in     eax,dx
  4222c1:	sti    
  4222c2:	jno    0x42228d
  4222c4:	sub    BYTE PTR fs:[edi+0x623ceab0],ah
  4222cb:	xchg   ecx,eax
  4222cc:	jo     0x4222ba
  4222ce:	call   0x42738355
  4222d3:	push   cs
  4222d4:	add    BYTE PTR [eax],al
  4222d6:	mov    dh,0xeb
  4222d8:	out    0xf6,eax
  4222da:	mov    ch,0xb4
  4222dc:	call   0x362f59e4
  4222e1:	clc    
  4222e2:	mov    ebp,0x441c9876
  4222e7:	jno    0x4222d1
  4222e9:	add    ecx,DWORD PTR [esi+0x69]
  4222ec:	pop    edi
  4222ed:	mov    ecx,0x21bf38
  4222f2:	mov    esi,0x370470bd
  4222f7:	xor    al,0x67
  4222f9:	sub    al,0x36
  4222fb:	cmp    eax,DWORD PTR [ecx]
  4222fd:	pop    ebp
  4222fe:	jnp    0x4222b3
  422300:	inc    esp
  422301:	xor    eax,0xb9ad768e
  422306:	jg     0x42228e
  422308:	icebp  
  422309:	mov    eax,0x60ad7e7b
  42230e:	push   es
  42230f:	pushf  
  422310:	mov    BYTE PTR [esp+ebx*2+0x19dd60d3],ch
  422317:	call   0xaea1d002
  42231c:	push   ecx
  42231d:	xor    BYTE PTR [eax],bl
  42231f:	call   0xec1a160d
  422324:	cli    
  422325:	je     0x422375
  422327:	mov    dh,dh
  422329:	push   ds
  42232a:	adc    al,dh
  42232c:	inc    esp
  42232d:	add    DWORD PTR [edi+0x34],eax
  422330:	add    ecx,ebp
  422332:	das    
  422333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422334:	ins    DWORD PTR es:[edi],dx
  422335:	push   es
  422336:	pop    eax
  422337:	call   0x42af25
  42233c:	fldpi  
  42233e:	cli    
  42233f:	cmp    DWORD PTR [ebx],0xffffffbd
  422342:	ret    
  422343:	pop    esp
  422344:	into   
  422345:	fucomi st,st(1)
  422347:	dec    esp
  422348:	je     0x422335
  42234a:	cli    
  42234b:	push   0x39
  42234d:	push   ds
  42234e:	cli    
  42234f:	and    al,0x53
  422351:	data16 loopne 0x422395
  422354:	adc    esi,DWORD PTR [esi]
  422356:	add    ecx,ebp
  422358:	fbstp  TBYTE PTR [ebp-0x17ee3faf]
  42235e:	dec    esi
  42235f:	sbb    DWORD PTR [eax],ebx
  422361:	inc    esi
  422362:	sbb    edi,edx
  422364:	je     0x422351
  422366:	jg     0x422315
  422368:	dec    eax
  422369:	pop    ebp
  42236a:	add    BYTE PTR [edi+esi*2-0x25],ch
  42236e:	push   ecx
  42236f:	(bad)  
  422370:	div    DWORD PTR [edx]
  422372:	xchg   BYTE PTR [ecx],dh
  422374:	aaa    
  422375:	fdiv   QWORD PTR [eax+eax*1+0x33fd118a]
  42237c:	mov    al,ds:0x13f46fd8
  422381:	ds push ebx
  422383:	call   0x3e4172
  422388:	cdq    
  422389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42238a:	jmp    0xb0ff:0xfc1e12e8
  422391:	dec    esi
  422392:	cld    
  422393:	cli    
  422394:	js     0x4223a8
  422396:	xor    al,al
  422398:	xchg   DWORD PTR [ebx+0x0],edi
  42239b:	add    dh,cl
  42239d:	outs   dx,DWORD PTR ds:[si]
  42239f:	fadd   QWORD PTR [eax]
  4223a1:	add    BYTE PTR [edi-0x5c],dl
  4223a4:	out    0xe8,al
  4223a6:	addr16 test eax,0xf447fffa
  4223ac:	mov    dh,0x83
  4223ae:	fwait
  4223af:	dec    edx
  4223b0:	sti    
  4223b1:	vmovsd xmm2,xmm3,xmm7
  4223b5:	jl     0x42234a
  4223b7:	ins    DWORD PTR es:[edi],dx
  4223b8:	aas    
  4223b9:	hlt    
  4223ba:	inc    ebp
  4223bb:	ss addr16 push es
  4223be:	(bad)  
  4223bf:	addr16 aas 
  4223c1:	rcl    BYTE PTR [edi],1
  4223c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c4:	loop   0x4223ff
  4223c6:	add    ebx,DWORD PTR [ebx]
  4223c8:	or     eax,0x136588e
  4223cd:	add    BYTE PTR ds:0xa56be6f3,al
  4223d3:	inc    ebx
  4223d4:	sbb    BYTE PTR [ebp-0x5a],0x6e
  4223d8:	outs   dx,DWORD PTR ds:[esi]
  4223d9:	int3   
  4223da:	aaa    
  4223db:	fwait
  4223dc:	retf   0xc80f
  4223df:	push   cs
  4223e0:	add    DWORD PTR [eax],eax
  4223e2:	pop    esi
  4223e3:	imul   edi,DWORD PTR [edi],0x8
  4223e6:	aad    0xef
  4223e8:	(bad)  
  4223e9:	out    0x1b,eax
  4223eb:	cmp    esp,0xffffffff
  4223ee:	shr    BYTE PTR [edi+0xd],cl
  4223f1:	test   BYTE PTR [edi],dh
  4223f3:	jmp    0x567923f8
  4223f8:	mov    ds:0x353034cb,al
  4223fd:	xchg   BYTE PTR [edx-0x2485894d],ah
  422403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422404:	stos   DWORD PTR es:[edi],eax
  422405:	jmp    0x422407
  422407:	add    BYTE PTR [ecx-0x1c8d860e],al
  42240d:	add    eax,0xe3708b0b
  422412:	int3   
  422413:	dec    edi
  422414:	lock call 0xdbb93a24
  42241a:	add    ebx,0x73455833
  422420:	sub    DWORD PTR [edx],ebp
  422422:	mov    edx,0x2698bcf7
  422427:	xor    cl,0xff
  42242a:	jmp    0x450ff771
  42242f:	xor    cl,al
  422431:	mov    dx,0x6eeb
  422435:	cwde   
  422436:	es or  al,0xb2
  422439:	jp     0x422439
  42243b:	push   DWORD PTR [edi]
  42243d:	lock mov edi,?
  422440:	cwde   
  422441:	fcomi  st,st(5)
  422443:	cmp    BYTE PTR [eax-0x24],0xfe
  422447:	(bad)  
  422448:	mov    edx,0xa8b0a96
  42244d:	out    dx,eax
  42244e:	push   ss
  42244f:	cmp    DWORD PTR [esi+0x9],0x26
  422453:	xor    DWORD PTR [edi-0x79],0x3
  422457:	push   0x43
  422459:	mov    BYTE PTR [ebp-0x4499f8f9],bh
  42245f:	(bad)  [esi+ebx*4]
  422462:	into   
  422463:	cld    
  422464:	sub    cl,BYTE PTR [ebx]
  422466:	or     eax,0x3a5e3740
  42246b:	or     eax,DWORD PTR [eax]
  42246d:	add    BYTE PTR [eax+0x34],al
  422470:	sub    eax,0xf4f5b718
  422475:	jp     0x422404
  422477:	or     al,0x66
  422479:	les    esi,FWORD PTR [eax]
  42247b:	test   DWORD PTR [ebp-0x52],ebx
  42247e:	add    BYTE PTR [ebx-0x7cefa3db],bh
  422484:	and    al,0x4
  422486:	aaa    
  422487:	scas   eax,DWORD PTR es:[edi]
  422488:	test   al,0xf4
  42248a:	mov    cl,0x5c
  42248c:	jmp    0x50c75b94
  422491:	sub    esi,DWORD PTR [ebp+0x34]
  422494:	call   0x6d7ad518
  422499:	(bad)  
  42249a:	jmp    0xfbbb0d87
  42249f:	mov    esp,0x73981b32
  4224a4:	call   0xe435dfac
  4224a9:	jle    0x422527
  4224ab:	xor    ebp,eax
  4224ad:	add    esi,DWORD PTR [esi-0x48dbd78a]
  4224b3:	data16 add al,0xf1
  4224b6:	sub    al,0x3f
  4224b8:	adc    ebp,DWORD PTR [esi+0x1b27bcec]
  4224be:	fdiv   QWORD PTR [eax+ebp*8+0x3]
  4224c2:	mov    al,0x6e
  4224c4:	sub    BYTE PTR [esi-0x30],bh
  4224c7:	cmp    BYTE PTR [eax-0x2a],ah
  4224ca:	mov    eax,ebp
  4224cc:	call   0x6f7e1a49
  4224d1:	les    eax,FWORD PTR [eax]
  4224d3:	add    BYTE PTR [edi*4+0x7673a058],dh
  4224da:	mov    eax,0x25b744ae
  4224df:	mov    WORD PTR [edi],es
  4224e1:	test   bl,al
  4224e3:	stc    
  4224e4:	sub    BYTE PTR [edx+0x28],al
  4224e7:	add    al,0xb6
  4224e9:	out    dx,eax
  4224ea:	add    ebp,esp
  4224ec:	call   0x9d75:0xa7e168e9
  4224f3:	cmp    DWORD PTR [ebx],ecx
  4224f5:	sub    ch,ch
  4224f7:	lahf   
  4224f8:	push   esp
  4224f9:	pop    ebp
  4224fa:	add    BYTE PTR [ebx],al
  4224fc:	aaa    
  4224fd:	mov    ebx,0x5deb6144
  422502:	add    DWORD PTR [ebx],edx
  422504:	xor    ebx,DWORD PTR [edx-0x1]
  422507:	jno    0x422585
  422509:	iret   
  42250a:	xchg   edx,eax
  42250b:	jmp    0x91c85943
  422510:	scas   al,BYTE PTR es:[edi]
  422511:	or     al,0xb
  422513:	ins    DWORD PTR es:[edi],dx
  422514:	dec    esi
  422515:	out    0xfa,eax
  422517:	jmp    0xe979e4b8
  42251c:	xor    al,0xe9
  42251e:	xor    eax,DWORD PTR [ecx+0x2a]
  422521:	(bad)  
  422522:	sti    
  422523:	inc    esi
  422524:	stos   BYTE PTR es:[edi],al
  422525:	jb     0x422520
  422527:	push   0x33
  422529:	out    0x7d,al
  42252b:	in     eax,0xb9
  42252d:	in     al,0xe9
  42252f:	sub    eax,0x72fae77a
  422534:	out    dx,al
  422535:	(bad)  
  422537:	mov    al,BYTE PTR [eax]
  422539:	add    cl,al
  42253b:	jl     0x4225ae
  42253d:	bound  esi,QWORD PTR [edx+0x37]
  422540:	test   BYTE PTR [ecx],ch
  422542:	mov    esi,0x49ff2e33
  422547:	xor    al,0x8c
  422549:	jns    0x4224eb
  42254b:	iret   
  42254c:	ins    BYTE PTR es:[edi],dx
  42254d:	fidiv  WORD PTR [esp+esi*1]
  422550:	or     dh,BYTE PTR [esi]
  422552:	sti    
  422553:	mov    cl,0xf3
  422555:	pop    ebp
  422556:	xchg   edi,eax
  422557:	pop    ebp
  422558:	sub    al,0x1a
  42255a:	sub    DWORD PTR [esi-0xe],edi
  42255d:	fdivr  DWORD PTR [edi+0x44187505]
  422563:	mov    eax,ds:0x785d00c1
  422568:	cmp    eax,DWORD PTR fs:[esi-0x7f74da42]
  42256f:	mov    eax,0x8be3f83f
  422574:	call   DWORD PTR cs:[ecx+0x5b33e212]
  42257b:	xor    BYTE PTR [ecx],al
  42257d:	push   0x1f
  42257f:	mov    dh,0xc4
  422581:	lea    eax,[ebx+0x7c]
  422584:	loop   0x4225bc
  422586:	dec    edi
  422587:	xor    BYTE PTR [ecx],al
  422589:	sbb    ecx,0xffffffe3
  42258c:	std    
  42258d:	dec    ebp
  42258e:	xchg   ah,cl
  422590:	fisttp DWORD PTR [ebx-0xc76b0ed]
  422596:	pushw  0xffbb
  422599:	add    dh,bl
  42259b:	std    
  42259c:	mov    edx,0x4d000040
  4225a1:	dec    edx
  4225a2:	inc    esp
  4225a3:	cmp    ebx,DWORD PTR [eax]
  4225a5:	(bad)  
  4225a6:	pop    ecx
  4225a7:	mov    ecx,DWORD PTR [ebx-0x25b777c6]
  4225ad:	mov    ch,0x43
  4225af:	jl     0x422559
  4225b1:	test   eax,0x4176c689
  4225b6:	into   
  4225b7:	call   DWORD PTR [ecx]
  4225b9:	mov    dh,0x47
  4225bb:	shl    BYTE PTR ds:0xc7c97f7a,0x35
  4225c2:	push   ebx
  4225c3:	(bad)  
  4225c4:	ret    
  4225c5:	adc    ah,dl
  4225c7:	test   dh,0x32
  4225ca:	add    ebx,ebp
  4225cc:	xchg   bl,al
  4225ce:	push   edi
  4225cf:	loopne 0x422607
  4225d1:	xchg   ecx,eax
  4225d2:	cmp    eax,DWORD PTR [eax]
  4225d4:	mov    gs,WORD PTR [esi-0x46d88b46]
  4225da:	outs   dx,DWORD PTR ds:[esi]
  4225db:	or     al,0x98
  4225dd:	out    dx,al
  4225de:	std    
  4225df:	add    DWORD PTR [edi],esi
  4225e1:	pop    eax
  4225e2:	pop    ss
  4225e3:	jae    0x422618
  4225e5:	not    BYTE PTR [edx-0x3c57b059]
  4225eb:	call   DWORD PTR [eax+0x4f]
  4225ee:	inc    ebp
  4225ef:	jbe    0x422616
  4225f1:	sahf   
  4225f2:	xchg   edx,eax
  4225f3:	fild   QWORD PTR [edi+ecx*1-0x622418d7]
  4225fa:	pop    ds
  4225fb:	cld    
  4225fc:	mov    ah,0x30
  4225fe:	adc    DWORD PTR [eax],eax
  422600:	sub    BYTE PTR [ecx],bl
  422602:	cmp    DWORD PTR [eax-0x5c7e0000],ecx
  422608:	aam    0xf5
  42260a:	sbb    BYTE PTR [ecx],bl
  42260c:	sub    eax,0x84c37a88
  422611:	inc    edx
  422612:	sti    
  422613:	mov    ds:0x70b42dd,eax
  422618:	mov    ecx,ebp
  42261a:	cli    
  42261b:	dec    esi
  42261c:	and    ah,bh
  42261e:	push   0xffffff8b
  422620:	sub    eax,0x207def81
  422625:	mov    BYTE PTR [edx-0x10bd7349],cl
  42262b:	(bad)  
  42262c:	retf   0xbec3
  42262f:	rcl    BYTE PTR [edx-0x76],0x62
  422633:	addr16 mov bl,0x67
  422636:	xor    ah,ah
  422638:	(bad)  
  422639:	dec    DWORD PTR [esi-0x2d]
  42263c:	scas   al,BYTE PTR es:[edi]
  42263d:	dec    esi
  42263e:	mov    esi,0xf2860e98
  422643:	inc    esi
  422644:	xchg   BYTE PTR [edx+0x7b],dh
  422647:	push   esp
  422648:	xchg   edx,eax
  422649:	(bad)  
  42264a:	jno    0x4225e4
  42264c:	push   esi
  42264d:	(bad)  
  42264e:	cwde   
  42264f:	cmp    ecx,DWORD PTR [ecx]
  422651:	dec    DWORD PTR [eax-0x48ecb6a6]
  422657:	pop    eax
  422658:	and    esi,edi
  42265a:	sub    DWORD PTR [esp+ebp*2],esi
  42265d:	shr    DWORD PTR [ebp-0x1b],0xdb
  422661:	and    ch,ah
  422663:	pop    es
  422664:	shl    eax,0x68
  422667:	out    0xcb,al
  422669:	mov    ecx,0x2b500000
  42266e:	shl    BYTE PTR [ecx],0x53
  422671:	in     eax,0x35
  422673:	adc    al,0x50
  422675:	and    esi,DWORD PTR [eax+0x35e54321]
  42267b:	and    al,0x50
  42267d:	sbb    esp,DWORD PTR [eax+0x152b3321]
  422683:	cmp    BYTE PTR [ebx],bh
  422685:	lds    ebp,FWORD PTR [eax-0x5e767d40]
  42268b:	inc    ebp
  42268c:	xor    BYTE PTR [ebx*1-0x7b4ee373],dh
  422693:	sbb    esi,DWORD PTR [edi+0x65b4d0d7]
  422699:	jle    0x4226ae
  42269b:	lea    eax,[ecx]
  42269d:	in     eax,0xfd
  42269f:	xchg   DWORD PTR [esi+0x74],eax
  4226a2:	call   0xf4529b31
  4226a7:	mov    WORD PTR [ebx+0x30],?
  4226aa:	(bad)  
  4226ab:	(bad)  
  4226ac:	fsub   st,st(4)
  4226ae:	call   0x3bc61cb7
  4226b3:	mul    al
  4226b5:	inc    ecx
  4226b6:	test   al,0x3
  4226b8:	iret   
  4226b9:	(bad)
  4226bc:	aaa    
  4226bd:	mov    ecx,0x289dd418
  4226c2:	adc    eax,0xbb7ef996
  4226c7:	aam    0xe0
  4226c9:	fistp  DWORD PTR [eax]
  4226cb:	sbb    al,0x9b
  4226cd:	in     al,0x6c
  4226cf:	inc    ebx
  4226d0:	add    BYTE PTR [eax],al
  4226d2:	add    eax,0xc8d4950d
  4226d7:	jl     0x4226da
  4226d9:	test   eax,0xeef6d34c
  4226de:	sbb    BYTE PTR [ecx-0x448da33f],dh
  4226e4:	inc    edx
  4226e5:	in     eax,0xbd
  4226e7:	fs mov ecx,ebp
  4226ea:	xor    al,0x34
  4226ec:	imul   ebp,DWORD PTR [ecx+0x19012d50],0xdbed4230
  4226f6:	je     0x4226dc
  4226f8:	test   DWORD PTR [ecx-0x2b05be61],ebp
  4226fe:	mov    al,0x42
  422700:	inc    ecx
  422701:	jmp    0xfd679ec9
  422706:	pop    esp
  422707:	test   BYTE PTR [ecx+ebp*8],bh
  42270a:	xor    al,0xad
  42270c:	icebp  
  42270d:	sar    BYTE PTR [edi],cl
  42270f:	addr16 mov dl,0xc2
  422712:	das    
  422713:	xor    BYTE PTR [ebp+0x134325c],al
  422719:	bound  edi,QWORD PTR [ecx-0x25]
  42271c:	call   0xd8ad:0x8c3434af
  422723:	pop    ss
  422724:	push   ecx
  422725:	daa    
  422726:	call   DWORD PTR [edi]
  422728:	push   ss
  422729:	jmp    0x56776e1
  42272e:	or     ebp,DWORD PTR [edi-0x3e]
  422731:	inc    edi
  422732:	xor    BYTE PTR [esp+eax*8],bl
  422735:	mov    ch,0x0
  422737:	add    dh,al
  422739:	jae    0x422724
  42273b:	mov    ecx,0x6afae129
  422740:	xchg   edi,eax
  422741:	pop    ss
  422742:	and    eax,0xc1c641ed
  422747:	repz or WORD PTR gs:[esi],bp
  42274c:	outs   dx,DWORD PTR ds:[esi]
  42274d:	pop    ss
  42274e:	and    eax,ebp
  422750:	xor    al,0x34
  422752:	add    DWORD PTR [eax],eax
  422754:	ja     0x4226e7
  422756:	dec    BYTE PTR [esi]
  422758:	sbb    BYTE PTR [edx-0x6],dl
  42275b:	dec    DWORD PTR [esi+0x662466b0]
  422761:	scas   al,BYTE PTR es:[edi]
  422762:	inc    ebp
  422763:	add    al,0x86
  422765:	jecxz  0x42270f
  422767:	dec    BYTE PTR [ecx-0x2df04545]
  42276d:	pop    esp
  42276e:	cli    
  42276f:	dec    DWORD PTR [esi-0x52]
  422772:	sbb    al,0x3
  422774:	sbb    cl,ah
  422776:	adc    cl,BYTE PTR [ebp-0x17aecfe3]
  42277c:	das    
  42277d:	idiv   edx
  42277f:	call   edx
  422781:	jbe    0x4227f2
  422783:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  422785:	sti    
  422786:	push   ds
  422787:	push   ss
  422788:	sahf   
  422789:	ret    
  42278a:	push   ds
  42278b:	push   ss
  42278c:	push   cs
  42278d:	leave  
  42278e:	adc    ecx,DWORD PTR [ebx-0x7f77d3af]
  422794:	xchg   BYTE PTR [edi],dh
  422796:	add    DWORD PTR [eax],eax
  422798:	es mov al,0x11
  42279b:	add    BYTE PTR [eax],al
  42279d:	add    BYTE PTR [esi],cl
  42279f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a0:	std    
  4227a1:	adc    eax,0x3ae57a
  4227a6:	arpl   WORD PTR [edi+0x6e],si
  4227a9:	cmp    DWORD PTR [ebp-0x6],esp
  4227ac:	dec    BYTE PTR [edx+0x4489c296]
  4227b2:	xor    bl,al
  4227b4:	push   0xf70ead01
  4227b9:	ror    BYTE PTR [ecx],cl
  4227bb:	inc    edx
  4227bc:	jg     0x42277e
  4227be:	xchg   eax,ebp
  4227c0:	loop   0x422760
  4227c2:	sti    
  4227c3:	inc    eax
  4227c4:	std    
  4227c5:	test   BYTE PTR [esi-0x35],bl
  4227c8:	sbb    dh,bh
  4227ca:	rcr    dl,cl
  4227cc:	adc    al,0x80
  4227ce:	aaa    
  4227cf:	leave  
  4227d0:	loop   0x4227e7
  4227d2:	xor    bh,BYTE PTR [edi+0x4542e854]
  4227d8:	jg     0x422775
  4227da:	mov    ecx,esp
  4227dc:	xchg   BYTE PTR [eax+0x3b],al
  4227df:	adc    eax,edx
  4227e1:	and    esp,DWORD PTR [eax]
  4227e3:	int3   
  4227e4:	jle    0x422861
  4227e6:	sbb    esp,ebx
  4227e8:	add    esi,DWORD PTR [ebx+0x43]
  4227eb:	inc    dx
  4227ed:	mov    BYTE PTR [ecx-0xc],dh
  4227f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227f1:	aas    
  4227f2:	aaa    
  4227f3:	int    0xcb
  4227f5:	and    bl,0x30
  4227f8:	std    
  4227f9:	aaa    
  4227fa:	jno    0x422814
  4227fc:	jmp    0xc9905e15
  422801:	and    eax,DWORD PTR [eax]
  422803:	add    BYTE PTR [edi],bl
  422805:	in     eax,0xc3
  422807:	cmp    BYTE PTR [ecx-0x7e73f231],ah
  42280d:	ret    0xfc1c
  422810:	lods   al,BYTE PTR ds:[esi]
  422811:	sub    cl,BYTE PTR [ecx]
  422813:	push   0x35
  422815:	sub    DWORD PTR ds:0x1cb9df35,ebp
  42281b:	xor    edi,0xffffffe7
  42281e:	add    eax,esi
  422820:	jnp    0x422811
  422822:	cmc    
  422823:	inc    BYTE PTR [ebp-0x3a]
  422826:	fstp   QWORD PTR [ebx+0x1b]
  422829:	loop   0x4227bd
  42282b:	or     eax,ebp
  42282d:	dec    ecx
  42282e:	mov    BYTE PTR [ebp+0x3b],al
  422831:	jae    0x422802
  422833:	retf   0x72d9
  422836:	mov    BYTE PTR [ebp+0x3b],al
  422839:	dec    esi
  42283a:	sbb    eax,0x80364a31
  42283f:	neg    DWORD PTR [esi]
  422841:	test   al,0xbe
  422843:	cld    
  422844:	and    dl,BYTE PTR [edi-0x11]
  422847:	aas    
  422848:	aaa    
  422849:	xor    al,0xcf
  42284b:	(bad)  
  42284c:	push   esp
  42284d:	inc    eax
  42284e:	fld    QWORD PTR [ebx-0x6a176791]
  422854:	dec    ebx
  422855:	mov    dh,BYTE PTR [ebx+0x107c37a9]
  42285b:	test   eax,0x87fbe18e
  422860:	shl    BYTE PTR [edi-0x25],0xb0
  422864:	jecxz  0x42288a
  422866:	sub    BYTE PTR [eax+eax*1],ch
  422869:	add    BYTE PTR [edx],dl
  42286b:	fsubrp st(3),st
  42286d:	sbb    al,0xb4
  42286f:	hlt    
  422870:	push   ebp
  422871:	or     al,BYTE PTR [esi]
  422873:	mov    DWORD PTR [esi],edi
  422875:	add    bh,bh
  422877:	retf   
  422878:	cmp    BYTE PTR [edx],bl
  42287a:	push   ebx
  42287b:	loope  0x422840
  42287d:	div    BYTE PTR [esi+eax*2+0x78b80428]
  422884:	or     al,0x0
  422886:	cmp    ch,BYTE PTR [edx]
  422888:	shr    al,0x2a
  42288b:	loop   0x422830
  42288d:	mov    ch,0x10
  42288f:	pop    ss
  422890:	xchg   edx,eax
  422891:	sbb    eax,0x82bad23
  422896:	xor    al,0xb0
  422898:	call   0x83c65fa0
  42289d:	imul   ah
  42289f:	inc    ebp
  4228a0:	sub    BYTE PTR [esi+ebp*4],al
  4228a3:	js     0x422891
  4228a5:	mov    BYTE PTR [eax-0x54],bh
  4228a8:	call   0xa88e5fb0
  4228ad:	xchg   esp,eax
  4228ae:	dec    edi
  4228af:	xor    al,0xb8
  4228b1:	sbb    al,0x45
  4228b3:	shl    dh,1
  4228b5:	ret    
  4228b6:	fdiv   DWORD PTR [edi-0x164bf3d8]
  4228bc:	inc    ebp
  4228bd:	sbb    al,0xcb
  4228bf:	int3   
  4228c0:	in     al,dx
  4228c1:	mov    BYTE PTR [ebx+0x38],bh
  4228c4:	add    edx,ebp
  4228c6:	ja     0x422939
  4228c8:	cli    
  4228c9:	aam    0x70
  4228cb:	inc    ebx
  4228cc:	inc    ecx
  4228cd:	jmp    0x7f2d28d2
  4228d2:	pop    esp
  4228d3:	ret    0xd5af
  4228d6:	pop    esp
  4228d7:	sub    cl,dh
  4228d9:	sub    al,0x69
  4228db:	xchg   ecx,eax
  4228dc:	fnstenv [ebx+0x1]
  4228df:	adc    DWORD PTR [ebx+0x58],ebp
  4228e2:	add    cl,ch
  4228e4:	addr16 out 0x20,al
  4228e7:	jl     0x422901
  4228e9:	lods   al,BYTE PTR ds:[esi]
  4228ea:	aas    
  4228eb:	lods   eax,DWORD PTR ds:[esi]
  4228ec:	aaa    
  4228ed:	test   BYTE PTR [edx],0x9e
  4228f0:	jnp    0x422936
  4228f2:	mov    WORD PTR ds:0x9e0a3c3a,gs
  4228f8:	jae    0x422930
  4228fa:	arpl   WORD PTR [ebx+edi*8+0x64],sp
  4228fe:	push   ds
  4228ff:	push   ebx
  422900:	xor    DWORD PTR [edi+0x63],edi
  422903:	add    ah,BYTE PTR [ebx]
  422905:	fs push ss
  422907:	bound  esp,QWORD PTR [edx-0x3d450184]
  42290d:	(bad)  
  42290e:	in     eax,0xa6
  422910:	ret    0x5387
  422913:	sahf   
  422914:	mov    BYTE PTR es:[eax],dl
  422917:	sub    DWORD PTR [ebx],esi
  422919:	mov    bl,0xc1
  42291b:	adc    eax,0x70f32536
  422920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422921:	sar    DWORD PTR [esi+0x2c],cl
  422924:	pop    ds
  422925:	loopne 0x4228ad
  422927:	scas   eax,DWORD PTR es:[edi]
  422928:	dec    eax
  422929:	sub    ch,BYTE PTR [esi]
  42292b:	test   eax,0xcc86f4fb
  422930:	sbb    al,0xb4
  422932:	dec    esp
  422933:	pop    ebp
  422934:	add    BYTE PTR [eax],al
  422936:	cmp    al,0x24
  422938:	rol    DWORD PTR [ecx-0x2f],0x57
  42293c:	add    cl,ch
  42293e:	jns    0x42298d
  422940:	adc    DWORD PTR [eax],eax
  422942:	out    0x8b,al
  422944:	pop    edi
  422945:	inc    ebx
  422946:	into   
  422947:	or     ebx,eax
  422949:	addr16 iret 
  42294b:	xor    ecx,DWORD PTR [eax-0xf5171bb]
  422951:	mov    edx,ebx
  422953:	sub    eax,DWORD PTR [eax-0x77c7bd9b]
  422959:	push   ecx
  42295a:	xor    BYTE PTR [esi+0x37fa0ab6],0x1
  422961:	add    BYTE PTR [esi-0x71617ad6],bl
  422967:	xor    eax,DWORD PTR [ecx]
  422969:	mov    esp,edx
  42296b:	sub    eax,0x335e00a1
  422970:	sbb    BYTE PTR [ebp+0x6e],0xb4
  422974:	(bad)  [edi]
  422976:	fidiv  DWORD PTR [esi-0x51b10006]
  42297c:	push   edi
  42297d:	or     al,0x5d
  42297f:	and    BYTE PTR [ebx+0x16ac465d],al
  422985:	add    DWORD PTR [ecx+0x2dc0191b],ecx
  42298b:	ja     0x422916
  42298d:	push   esp
  42298e:	adc    al,0xef
  422990:	sub    edx,esi
  422992:	add    eax,0x127d8341
  422997:	scas   al,BYTE PTR es:[edi]
  422998:	push   edi
  422999:	adc    BYTE PTR [eax],al
  42299b:	add    BYTE PTR ds:0xbe5d8320,cl
  4229a1:	mov    ch,0x39
  4229a3:	add    BYTE PTR [edx],cl
  4229a5:	(bad)
  4229a9:	mov    dh,0xf8
  4229ab:	or     ah,bh
  4229ad:	icebp  
  4229ae:	xchg   DWORD PTR [edx+0x66],edi
  4229b1:	sub    ch,ch
  4229b3:	mov    ebx,edx
  4229b5:	loop   0x422938
  4229b7:	gs jp  0x4229ed
  4229ba:	mov    BYTE PTR [ebp+0x37],dl
  4229bd:	jno    0x42299a
  4229bf:	aam    0x44
  4229c1:	dec    ecx
  4229c2:	push   es
  4229c3:	mov    ch,0x63
  4229c5:	mov    edx,0x3aba6606
  4229ca:	mov    ah,BYTE PTR [edx]
  4229cc:	mov    dh,0x6a
  4229ce:	pop    ss
  4229cf:	or     al,0x37
  4229d1:	int    0x3
  4229d3:	adc    DWORD PTR [esp+ebx*1],esi
  4229d6:	fist   DWORD PTR [edx+0x2f]
  4229d9:	mov    ebx,0xc07782f0
  4229de:	cli    
  4229df:	cmp    BYTE PTR [edi-0x3b],ah
  4229e2:	or     BYTE PTR [ecx+0x39ede90a],cl
  4229e8:	lods   al,BYTE PTR ds:[esi]
  4229e9:	repnz add edi,esi
  4229ec:	scas   al,BYTE PTR es:[edi]
  4229ed:	mov    ds:0xce477a8b,al
  4229f2:	mov    edx,0x48f5ce3
  4229f7:	pop    ecx
  4229f8:	cmp    eax,DWORD PTR [edx]
  4229fa:	bound  eax,QWORD PTR [eax-0x50e6f716]
  422a00:	add    BYTE PTR [eax],al
  422a02:	repnz add dh,BYTE PTR ss:[ecx]
  422a06:	ja     0x422a14
  422a08:	inc    esp
  422a09:	mov    dl,bl
  422a0b:	add    al,0x85
  422a0d:	dec    edx
  422a0e:	cmp    esp,DWORD PTR [ebp+0x3f1fbfd3]
  422a14:	mov    al,ds:0x98a28fe
  422a19:	add    BYTE PTR [ebp-0x6d685919],cl
  422a1f:	or     al,BYTE PTR ds:0xfe363ae8
  422a25:	(bad)  
  422a26:	mov    esp,0xaed8d45c
  422a2b:	inc    eax
  422a2c:	sbb    DWORD PTR [eax+0x7b8da771],ecx
  422a32:	daa    
  422a33:	cmp    ecx,DWORD PTR [ebp-0x31cb2fa6]
  422a39:	ret    
  422a3a:	pop    eax
  422a3b:	xor    al,0x18
  422a3d:	add    al,0x37
  422a3f:	test   DWORD PTR [edi+0x4b2c4518],esi
  422a45:	out    dx,eax
  422a46:	push   0xb803a843
  422a4b:	ja     0x422a95
  422a4d:	(bad)  
  422a4f:	push   0xcc0ab08f
  422a54:	push   cs
  422a55:	adc    BYTE PTR [edx-0x46b39023],ch
  422a5b:	outs   dx,DWORD PTR ds:[esi]
  422a5c:	cmp    al,0xdd
  422a5e:	outs   dx,DWORD PTR ds:[esi]
  422a5f:	push   0x85e7b4d9
  422a64:	pop    edi
  422a65:	scas   eax,DWORD PTR es:[edi]
  422a66:	add    BYTE PTR [eax],al
  422a68:	push   0x831a1ecc
  422a6d:	frstor [esp+eax*2+0x4]
  422a71:	cmp    dl,BYTE PTR [edi+0xc6773b0]
  422a77:	sbb    ebp,esp
  422a79:	shl    ebx,cl
  422a7b:	mov    ?,WORD PTR [eax]
  422a7d:	(bad)  
  422a7f:	lahf   
  422a80:	sub    DWORD PTR [eax+ebp*8+0x10],esi
  422a84:	push   0x6010a839
  422a89:	lods   al,BYTE PTR ds:[esi]
  422a8a:	sub    eax,0x9c674321
  422a8f:	sub    eax,DWORD PTR [esi]
  422a91:	call   0x7faa4348
  422a96:	ret    
  422a97:	mov    es,WORD PTR [ebp+0x4c]
  422a9a:	call   0x381f4b22
  422a9f:	sbb    DWORD PTR [ebp+0x388e93d4],esp
  422aa5:	(bad)  
  422aa7:	mov    bh,0x39
  422aa9:	je     0x422a93
  422aab:	mov    bl,BYTE PTR [ebp-0x2c]
  422aae:	addr16 (bad) 
  422ab0:	cld    
  422ab1:	fadd   QWORD PTR [ecx]
  422ab3:	bound  esi,QWORD PTR [ecx+0x3dce6fc]
  422ab9:	popf   
  422aba:	inc    ecx
  422abb:	sub    dh,BYTE PTR [ebx-0xe9516af]
  422ac1:	fdivr  st,st(2)
  422ac3:	sbb    bh,BYTE PTR [ebx-0x2b]
  422ac6:	mov    eax,ds:0xbf3435c7
  422acb:	in     eax,dx
  422acc:	add    BYTE PTR [eax],al
  422ace:	xor    al,0x4a
  422ad0:	sbb    ecx,edx
  422ad2:	jl     0x422b25
  422ad4:	ds jmp 0xe8a5b236
  422ada:	xor    al,0xab
  422adc:	clc    
  422add:	push   0xffffffc1
  422adf:	fadd   DWORD PTR [ecx]
  422ae1:	jb     0x422b5a
  422ae3:	sbb    dh,bh
  422ae5:	sub    eax,0x6281d4bb
  422aea:	fs mov cl,0xf3
  422aed:	jge    0x422ac4
  422aef:	mov    bl,0x79
  422af1:	in     eax,0x88
  422af3:	push   si
  422af5:	jmp    0x1eb3:0x1174b647
  422afc:	add    DWORD PTR [ebp-0x56],ebx
  422aff:	stos   DWORD PTR es:[edi],eax
  422b00:	inc    ebx
  422b01:	in     eax,dx
  422b02:	xor    eax,0x86d651f7
  422b07:	xor    al,0x88
  422b09:	and    al,0x13
  422b0b:	mov    dl,0xc1
  422b0d:	cmp    eax,0xea1bab8b
  422b12:	add    DWORD PTR [ebx+eax*2-0x770eca27],ebp
  422b19:	and    al,0x57
  422b1b:	mov    dl,0x5c
  422b1d:	lds    ebp,FWORD PTR [esp+esi*1+0x10c7a984]
  422b24:	js     0x422b14
  422b26:	pop    ss
  422b27:	fsqrt  
  422b29:	jmp    0x46f862
  422b2e:	or     eax,0xc0811b
  422b33:	add    BYTE PTR [eax+ebp*4],cl
  422b36:	std    
  422b37:	jne    0x422af7
  422b39:	inc    ebx
  422b3a:	dec    edi
  422b3b:	or     al,0x53
  422b3d:	jo     0x422bad
  422b3f:	and    ah,BYTE PTR [ebp-0x13]
  422b42:	fimul  WORD PTR [ecx+0x4c1b6cf]
  422b48:	pop    ebp
  422b49:	cmc    
  422b4a:	fiadd  WORD PTR [esi*2-0x1d397ee0]
  422b51:	push   cs
  422b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b53:	or     DWORD PTR [ebx-0x604f02bd],0xe
  422b5a:	pop    es
  422b5b:	xor    ebx,DWORD PTR [esi-0x10]
  422b5e:	ror    DWORD PTR [ebx+0x4d810fb3],0x3a
  422b65:	inc    ebx
  422b66:	xor    al,al
  422b68:	ss arpl WORD PTR ss:[ecx],ax
  422b6c:	sahf   
  422b6d:	jne    0x422b71
  422b6f:	add    BYTE PTR [edi+ebx*8-0x94cb79e],ah
  422b76:	cli    
  422b77:	out    0x26,eax
  422b79:	xchg   ebp,eax
  422b7a:	sti    
  422b7b:	jmp    FWORD PTR [ebp+0x715d821e]
  422b81:	test   al,0x57
  422b83:	cld    
  422b84:	in     eax,0xef
  422b86:	ss mov edx,edx
  422b89:	add    DWORD PTR cs:[eax],0xd338375e
  422b90:	add    BYTE PTR [eax+0x5b46bc81],ah
  422b96:	cli    
  422b97:	inc    DWORD PTR [eax]
  422b99:	add    BYTE PTR [esi],bl
  422b9b:	retf   
  422b9c:	je     0x422be4
  422b9e:	mov    ebp,ebx
  422ba0:	or     BYTE PTR [ecx+0x6891843],cl
  422ba6:	adc    eax,0x373a6e76
  422bab:	push   eax
  422bac:	rol    BYTE PTR [edi],cl
  422bae:	mov    esp,0xf600f512
  422bb3:	arpl   cx,ax
  422bb5:	fld    TBYTE PTR [esi+0x50361ed7]
  422bbb:	fdecstp 
  422bbd:	mov    BYTE PTR [edx+0x6a0fd7d5],al
  422bc3:	in     al,0x87
  422bc5:	push   edx
  422bc6:	sub    esp,DWORD PTR [esi+ebp*8-0x3b]
  422bca:	jp     0x422c36
  422bcc:	add    eax,0x7fd0f081
  422bd1:	mov    edi,0x8034863b
  422bd6:	icebp  
  422bd7:	add    BYTE PTR [eax],ch
  422bd9:	(bad)  
  422bda:	fs or  eax,0xefbcc0be
  422be0:	es vmovaps xmm6,xmm7
  422be5:	sub    dl,0x38
  422be8:	adc    ecx,DWORD PTR [ecx+0x7e2629fa]
  422bee:	adc    cl,ah
  422bf0:	inc    cl
  422bf2:	das    
  422bf3:	int    0x87
  422bf5:	inc    ebp
  422bf6:	sub    edx,DWORD PTR [eax+0x3e]
  422bf9:	jae    0x422c33
  422bfb:	mov    ebp,0x1213
  422c00:	repz cld 
  422c02:	mov    esi,0x268aadff
  422c07:	xor    bh,BYTE PTR [eax]
  422c09:	cli    
  422c0a:	adc    al,0x55
  422c0c:	mov    esp,0x29b52dfc
  422c11:	jmp    0x54d8:0x18778314
  422c18:	stos   BYTE PTR es:[edi],al
  422c19:	sbb    cl,BYTE PTR [ecx]
  422c1b:	mov    DWORD PTR [eax],edi
  422c1d:	dec    eax
  422c1e:	inc    ebp
  422c1f:	jae    0x422c51
  422c21:	cmp    edx,DWORD PTR [edx+edx*1]
  422c24:	jnp    0x422c5a
  422c26:	clc    
  422c27:	ret    
  422c28:	sbb    BYTE PTR [edi+0x343ce01c],dh
  422c2e:	sbb    al,0xe4
  422c30:	arpl   WORD PTR [esi-0x18],cx
  422c33:	test   eax,0x2dc5200
  422c38:	aaa    
  422c39:	xor    al,0x7b
  422c3b:	nop
  422c3c:	adc    al,0x38
  422c3e:	jae    0x422c0e
  422c40:	jmp    0x422c81
  422c42:	sub    ah,dh
  422c44:	and    BYTE PTR [ebp*2+0x9326544],dh
  422c4b:	std    
  422c4c:	push   es
  422c4d:	hlt    
  422c4e:	aas    
  422c4f:	add    al,BYTE PTR [edi-0x94a54cd]
  422c55:	xor    al,ch
  422c57:	scas   al,BYTE PTR es:[edi]
  422c58:	scas   eax,DWORD PTR es:[edi]
  422c59:	enter  0xb299,0xbf
  422c5d:	je     0x422c43
  422c5f:	cmp    al,0xf5
  422c61:	xlat   BYTE PTR ds:[ebx]
  422c62:	in     al,0x3
  422c64:	add    BYTE PTR [eax],al
  422c66:	aaa    
  422c67:	xor    al,0x6d
  422c69:	inc    esp
  422c6a:	and    al,0x10
  422c6c:	mov    es,WORD PTR [ebx]
  422c6e:	mov    esp,0xbdb31467
  422c73:	adc    BYTE PTR [bp+di+0x2b0e],dh
  422c78:	cwde   
  422c79:	adc    al,0x25
  422c7b:	sbb    al,bl
  422c7d:	ret    
  422c7e:	jo     0x422c30
  422c80:	sub    BYTE PTR [eax+0x176db53d],dl
  422c86:	xor    al,0x5f
  422c88:	jmp    0x422c12
  422c8a:	cmc    
  422c8b:	fist   DWORD PTR [eax+0x1735c4fc]
  422c91:	inc    esp
  422c92:	mov    eax,ds:0x37fcc6b5
  422c97:	imul   BYTE PTR [ecx-0x5814c8e5]
  422c9d:	scas   al,BYTE PTR es:[edi]
  422c9e:	mov    edi,0xbe1a01c7
  422ca3:	add    BYTE PTR [edi-0x577b35a],al
  422ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422caa:	inc    ebx
  422cab:	sbb    al,0xd9
  422cad:	adc    eax,0x82c12637
  422cb2:	fidivr DWORD PTR [esi+0x4e]
  422cb5:	mov    ?,WORD PTR [ecx+0x266fe930]
  422cbb:	xlat   BYTE PTR ds:[ebx]
  422cbc:	cli    
  422cbd:	jb     0x422d03
  422cbf:	mov    dh,0xf3
  422cc1:	cld    
  422cc2:	call   0xf5c4ede9
  422cc7:	lods   eax,DWORD PTR ds:[esi]
  422cc8:	inc    ebp
  422cc9:	pop    es
  422cca:	add    BYTE PTR [eax],al
  422ccc:	inc    edx
  422ccd:	lods   al,BYTE PTR ds:[esi]
  422cce:	retf   
  422ccf:	and    ch,BYTE PTR [ebx]
  422cd1:	fs adc eax,0x54b0c563
  422cd7:	loop   0x422c87
  422cd9:	sub    BYTE PTR [ecx+0x685aed8],cl
  422cdf:	test   al,0xbc
  422ce1:	sub    BYTE PTR [ecx-0xe],cl
  422ce4:	cld    
  422ce5:	(bad)  
  422ce6:	in     eax,dx
  422ce7:	ret    
  422ce8:	xor    al,0x4e
  422cea:	add    DWORD PTR [esi],esp
  422cec:	stos   DWORD PTR es:[edi],eax
  422ced:	sub    al,0x4e
  422cef:	mov    bh,0x2b
  422cf1:	pusha  
  422cf2:	add    eax,0x11209916
  422cf7:	test   eax,0x659ad34
  422cfc:	sub    edi,esp
  422cfe:	pop    ss
  422cff:	and    ah,BYTE PTR [edx-0xcfe412a]
  422d05:	leave  
  422d06:	sti    
  422d07:	out    dx,al
  422d08:	scas   eax,DWORD PTR es:[edi]
  422d09:	repz pop ebx
  422d0b:	inc    edx
  422d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d0d:	repnz add eax,0xedab8fe9
  422d13:	push   0x1f
  422d15:	loope  0x422d95
  422d17:	mov    ebp,0x52835b
  422d1c:	adc    dx,WORD PTR [ebx]
  422d1f:	add    BYTE PTR [esi],bl
  422d21:	push   edi
  422d22:	ja     0x422d38
  422d24:	call   0x1eec:0x837c6e70
  422d2b:	or     al,0x5e
  422d2d:	mov    dh,0x12
  422d2f:	lea    eax,[eax]
  422d31:	add    BYTE PTR [edx-0x34],bl
  422d34:	adc    dl,BYTE PTR [eax+0x34]
  422d37:	xor    BYTE PTR [edi+edi*8+0xb],dl
  422d3b:	add    al,0xd1
  422d3d:	inc    ebx
  422d3e:	push   cs
  422d3f:	lods   eax,DWORD PTR ds:[esi]
  422d40:	mov    edx,0x76af3d78
  422d45:	and    al,0xa
  422d47:	xor    al,0x75
  422d49:	pop    esp
  422d4a:	dec    ebp
  422d4b:	les    ebx,FWORD PTR [esi]
  422d4d:	and    dh,cl
  422d4f:	mov    edi,0xcfeaff07
  422d54:	sbb    ch,al
  422d56:	add    BYTE PTR [ebp+edi*8-0x1],cl
  422d5a:	pop    ebx
  422d5b:	jo     0x422dcc
  422d5d:	dec    eax
  422d5e:	jno    0x422d1c
  422d60:	push   ds
  422d61:	and    BYTE PTR [esi],al
  422d63:	jbe    0x422d7a
  422d65:	add    BYTE PTR [esi+0x4585d256],bl
  422d6b:	mov    esp,0x9e8e6a33
  422d70:	loop   0x422d20
  422d72:	xor    BYTE PTR ss:[ecx],al
  422d75:	test   DWORD PTR [esi-0x44],ebx
  422d78:	and    al,0x2b
  422d7a:	fwait
  422d7b:	(bad)  
  422d7c:	rol    BYTE PTR [ebx-0x72],1
  422d7f:	sub    al,0x9e
  422d81:	and    BYTE PTR [ebx+esi*1+0x215605f3],bl
  422d88:	inc    ecx
  422d89:	add    BYTE PTR [esi-0x41],bh
  422d8c:	add    ecx,DWORD PTR [ebx-0x7ece1bdd]
  422d92:	scas   al,BYTE PTR es:[edi]
  422d93:	xor    eax,DWORD PTR [ecx]
  422d95:	add    BYTE PTR [eax],al
  422d97:	add    BYTE PTR [edi],dh
  422d99:	push   edx
  422d9a:	rcr    DWORD PTR [ebx],0xae
  422d9d:	dec    esp
  422d9e:	dec    esi
  422d9f:	(bad)  
  422da0:	cmp    ch,cl
  422da2:	mov    bl,0xfc
  422da4:	dec    edx
  422da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422da6:	hlt    
  422da7:	aas    
  422da8:	aaa    
  422da9:	sahf   
  422daa:	cdq    
  422dab:	and    esp,DWORD PTR [eax]
  422dad:	and    ch,ah
  422daf:	cld    
  422db0:	mov    ds:0x2f720e31,al
  422db5:	push   ds
  422db6:	push   cs
  422db7:	jb     0x422de0
  422db9:	mov    esi,0x40000b99
  422dbe:	std    
  422dbf:	cld    
  422dc0:	and    al,BYTE PTR ds:0x36374035
  422dc6:	stos   BYTE PTR es:[edi],al
  422dc7:	mov    dl,dl
  422dc9:	aas    
  422dca:	inc    ebx
  422dcb:	pop    ds
  422dcc:	aaa    
  422dcd:	inc    eax
  422dce:	jp     0x422dbb
  422dd0:	mov    dh,0x80
  422dd2:	cmp    al,BYTE PTR [ecx]
  422dd4:	aaa    
  422dd5:	int    0xb3
  422dd7:	cld    
  422dd8:	inc    edx
  422dd9:	cmp    eax,0x662f5a7a
  422dde:	cdq    
  422ddf:	sub    edi,DWORD PTR [eax+0x2afcd697]
  422de5:	xor    DWORD PTR [esi],ecx
  422de7:	jb     0x422e40
  422de9:	push   ds
  422dea:	cdq    
  422deb:	sbb    esp,DWORD PTR [eax+0x22fce69f]
  422df1:	(bad)  [edi]
  422df3:	jb     0x422e1c
  422df5:	ss cdq 
  422df7:	or     esp,esp
  422df9:	cmp    eax,0x2bf9
  422dfe:	gs mov esi,edi
  422e01:	xchg   dl,dh
  422e03:	add    BYTE PTR [edx+0x166540bf],cl
  422e09:	jmp    FWORD PTR [eax-0x34]
  422e0c:	sbb    BYTE PTR [edx+0x1b],al
  422e0f:	int3   
  422e10:	inc    DWORD PTR [ebx+0x3e83379]
  422e16:	aaa    
  422e17:	mov    cl,0xbf
  422e19:	add    DWORD PTR [ebx+0x3703e8fd],esi
  422e1f:	mov    bl,0x4d
  422e21:	add    BYTE PTR [edi],dh
  422e23:	daa    
  422e24:	ins    BYTE PTR es:[edi],dx
  422e25:	inc    eax
  422e26:	xor    dh,dl
  422e28:	call   0xe87f4148
  422e2d:	add    edi,DWORD PTR [ebx-0x2478240c]
  422e33:	xor    al,0xe8
  422e35:	add    edx,DWORD PTR [edx]
  422e37:	and    bl,BYTE PTR [ebx+0x284398f7]
  422e3d:	add    al,0xb4
  422e3f:	hlt    
  422e40:	fild   DWORD PTR [edi+0x3e834cb]
  422e46:	xchg   esp,ecx
  422e48:	scas   eax,DWORD PTR es:[edi]
  422e49:	cli    
  422e4a:	call   0x11099024
  422e4f:	scas   eax,DWORD PTR es:[edi]
  422e50:	test   al,0x1
  422e52:	mov    bl,0xb6
  422e54:	call   0xb3c0655c
  422e59:	jl     0x422e6a
  422e5b:	dec    edx
  422e5c:	call   0xf4310714
  422e61:	add    eax,DWORD PTR [eax]
  422e63:	add    BYTE PTR [edi],dh
  422e65:	test   eax,0x10257b38
  422e6a:	sbb    ah,BYTE PTR gs:[esi+edx*2]
  422e6e:	call   esi
  422e70:	cmp    al,0x2
  422e72:	test   al,0x3
  422e74:	scas   al,BYTE PTR es:[edi]
  422e75:	push   edi
  422e76:	hlt    
  422e77:	jle    0x422e2e
  422e79:	and    BYTE PTR ds:0x13848b11,bl
  422e7f:	fld    DWORD PTR [ecx]
  422e81:	out    dx,al
  422e82:	inc    ebp
  422e83:	in     al,0xf6
  422e85:	xor    ebp,DWORD PTR [ebx]
  422e87:	xchg   DWORD PTR [edi+edx*8],esp
  422e8a:	sti    
  422e8b:	adc    BYTE PTR [edi],dh
  422e8d:	xor    al,0x1
  422e8f:	call   0x815705c8
  422e94:	gs adc eax,0x60f46c01
  422e9a:	inc    ecx
  422e9b:	jb     0x422e4e
  422e9d:	leave  
  422e9e:	cld    
  422e9f:	(bad)  
  422ea0:	daa    
  422ea1:	sbb    al,0x4
  422ea3:	adc    eax,0x3c017401
  422ea8:	or     edi,ebx
  422eaa:	add    al,0xf1
  422eac:	bound  esi,QWORD PTR [ecx+eax*1-0x27]
  422eb0:	enter  0x2e2e,0x74
  422eb4:	push   eax
  422eb5:	(bad)  
  422eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422eb8:	xchg   ecx,eax
  422eb9:	mov    dl,0x35
  422ebb:	pushf  
  422ebc:	daa    
  422ebd:	fcom   DWORD PTR [ecx-0x6a]
  422ec0:	fild   QWORD PTR [ebp-0x27d67a4c]
  422ec6:	cli    
  422ec7:	scas   al,BYTE PTR es:[edi]
  422ec8:	add    BYTE PTR [eax],al
  422eca:	mov    ecx,0x477efc20
  422ecf:	xor    eax,DWORD PTR [ecx]
  422ed1:	call   0xfd57060a
  422ed6:	in     eax,0x14
  422ed8:	add    DWORD PTR [esp+esi*2+0x62],ebp
  422edc:	psrlw  mm6,QWORD PTR [esp+esi*4]
  422ee0:	add    ecx,ebp
  422ee2:	mov    ds:0xd0d4fbd4,al
  422ee7:	xlat   BYTE PTR ds:[ebx]
  422ee8:	cs inc esi
  422eea:	test   eax,0x34a91078
  422eef:	xlat   BYTE PTR ds:[ebx]
  422ef0:	je     0x422eeb
  422ef2:	inc    edi
  422ef3:	inc    edx
  422ef4:	leave  
  422ef5:	(bad)  [esp+edx*8+0x5b]
  422ef9:	(bad)  
  422efa:	adc    esi,DWORD PTR [edx+0x2d]
  422efd:	ret    0xf34d
  422f00:	sub    eax,0xedabc9e9
  422f05:	add    DWORD PTR [esp+edi*1-0x53a1ffff],eax
  422f0c:	mov    edx,0xfd855175
  422f11:	and    eax,0x411ea6
  422f16:	mov    ebp,0x5275899a
  422f1b:	popf   
  422f1c:	push   esp
  422f1d:	jmp    ebx
  422f1f:	fild   QWORD PTR [eax+0x0]
  422f22:	imul   edi,DWORD PTR [edx-0x1bbc00fe],0x8a1e43d0
  422f2c:	std    
  422f2d:	jne    0x422f2f
  422f2f:	add    BYTE PTR [esi],cl
  422f31:	dec    edi
  422f32:	bnd jmp DWORD PTR [ebx+0x34]
  422f36:	cld    
  422f37:	jne    0x422f4f
  422f39:	inc    ebx
  422f3a:	sha256msg1 xmm6,xmm7
  422f3e:	cli    
  422f3f:	mov    dh,dh
  422f41:	mov    ebp,0xbd4279fd
  422f46:	fnstcw WORD PTR [eax+0x3e]
  422f49:	mov    ebp,0xb72a74f4
  422f4e:	cmp    al,0x0
  422f50:	loop   0x422f4c
  422f52:	cmp    DWORD PTR [ebp-0x2],0x8417537
  422f59:	test   dl,cl
  422f5b:	inc    ebx
  422f5c:	fimul  WORD PTR [ecx-0x3989ea03]
  422f62:	cmp    al,BYTE PTR [eax]
  422f64:	pusha  
  422f65:	cmp    eax,0x378dd075
  422f6a:	cli    
  422f6b:	je     0x422fb0
  422f6d:	mov    al,0x8e
  422f6f:	ja     0x422f4f
  422f71:	aaa    
  422f72:	cld    
  422f73:	adc    eax,0x3ac866
  422f78:	adc    edi,DWORD PTR [eax+0x6e]
  422f7b:	or     DWORD PTR ds:0xe5ede240,eax
  422f81:	inc    edx
  422f82:	std    
  422f83:	jmp    0x422fbc
  422f85:	(bad)  
  422f87:	mov    edi,0x4991db3
  422f8c:	mov    ah,0xc8
  422f8e:	xchg   edx,eax
  422f8f:	iret   
  422f90:	hlt    
  422f91:	fadd   QWORD PTR ds:0x60000056
  422f97:	lock sub dl,BYTE PTR [ecx]
  422f9a:	neg    esp
  422f9c:	stos   DWORD PTR es:[edi],eax
  422f9d:	pop    ebp
  422f9e:	mov    esp,0x755aa79e
  422fa3:	int    0xfe
  422fa5:	push   ebp
  422fa6:	call   0x38c43600
  422fab:	push   0x110c82fd
  422fb0:	(bad)  
  422fb1:	push   ds
  422fb2:	xor    al,0xe6
  422fb4:	aam    0x82
  422fb6:	cld    
  422fb7:	adc    bl,dl
  422fb9:	mov    dh,BYTE PTR [eax-0x21]
  422fbc:	mov    DWORD PTR [edi-0xfe91575],edi
  422fc2:	sbb    DWORD PTR [ebx+0x6007880b],esi
  422fc8:	adc    al,0x73
  422fca:	push   ebx
  422fcb:	xor    eax,0xdd3772d5
  422fd0:	mov    bl,0x88
  422fd2:	imul   edi,ecx,0xfffffff2
  422fd5:	push   ebp
  422fd6:	iret   
  422fd7:	cmc    
  422fd8:	xchg   esi,eax
  422fd9:	cld    
  422fda:	fcomp  DWORD PTR [eax+0x3e]
  422fdd:	jb     0x42301c
  422fdf:	xchg   ebx,eax
  422fe0:	push   ss
  422fe1:	add    eax,0x310b72d8
  422fe6:	div    DWORD PTR [ebp-0x22]
  422fe9:	xchg   BYTE PTR [ebp*4-0x1ab216fb],al
  422ff0:	into   
  422ff1:	jb     0x42302a
  422ff3:	fnsave [ebx-0x6bed404]
  422ff9:	out    0x0,eax
  422ffb:	add    cl,al
  422ffd:	hlt    
  422ffe:	or     edi,esp
  423000:	mov    edx,0x70793f33
  423005:	inc    edx
  423006:	jne    0x42304b
  423008:	cmp    bl,0xc6
  42300b:	inc    esp
  42300c:	(bad)  [ecx+0x26]
  42300f:	pop    es
  423010:	aaa    
  423011:	imul   ebp,DWORD PTR [edi+0x1f],0x82e0dfb7
  423018:	fnstsw WORD PTR [edi]
  42301a:	call   0xfe8ae1c4
  42301f:	jp     0x423016
  423021:	fistp  WORD PTR [ebp-0x6]
  423024:	fidivr WORD PTR [eax]
  423026:	inc    eax
  423027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423028:	mov    ecx,0x4fb4c078
  42302d:	sub    bh,BYTE PTR [esi]
  42302f:	test   DWORD PTR [eax-0x5af327a2],0x757b4240
  423039:	fsub   QWORD PTR [ebp-0x39]
  42303c:	or     eax,0x2225c065
  423041:	shl    DWORD PTR [ebx+0x25bf259a],cl
  423047:	sbb    al,0x70
  423049:	rcr    DWORD PTR ds:0x4b10fc,1
  42304f:	or     eax,0x98a8b8f3
  423054:	dec    ebp
  423055:	pop    edx
  423056:	gs push ss
  423058:	fs and eax,0x64f254e3
  42305e:	imul   edx,DWORD PTR [edi-0x2ec00000],0xffffffdd
  423065:	sti    
  423066:	shl    BYTE PTR [edx-0x30],1
  423069:	or     al,0xc3
  42306b:	mov    eax,0x5359828
  423070:	sub    ah,al
  423072:	lahf   
  423073:	test   DWORD PTR ss:[ebx+0x71],0x403ecf6
  42307b:	mov    ebp,0xddb44501
  423080:	add    eax,0x4e3434eb
  423085:	mov    edi,0xe80059c3
  42308a:	xor    al,0x34
  42308c:	mov    WORD PTR [edi+eiz*1-0x32],gs
  423090:	cli    
  423091:	push   cs
  423092:	stos   DWORD PTR es:[edi],eax
  423093:	shl    BYTE PTR [ecx+esi*8+0x3b],1
  423097:	es add ebp,edx
  42309a:	je     0x42306d
  42309c:	xchg   DWORD PTR [ecx],edx
  42309e:	mov    al,0xec
  4230a0:	jnp    0x423064
  4230a2:	shr    BYTE PTR ds:0x3bdf,1
  4230a7:	xchg   DWORD PTR [ebp+0x4a],edi
  4230aa:	jnp    0x42307d
  4230ac:	xchg   DWORD PTR [edi-0x54],esp
  4230af:	push   esp
  4230b0:	inc    ecx
  4230b1:	jmp    0xc53fe767
  4230b6:	cmp    edx,eax
  4230b8:	push   ecx
  4230b9:	jb     0x423132
  4230bb:	fxch   st(1)
  4230bd:	sahf   
  4230be:	sub    dl,al
  4230c0:	test   BYTE PTR [ecx-0x5081dd58],ch
  4230c6:	add    BYTE PTR [eax],al
  4230c8:	or     BYTE PTR [eax+0x7e],bh
  4230cb:	lahf   
  4230cc:	mov    esp,0x74dad842
  4230d1:	jo     0x42312e
  4230d3:	xor    ch,BYTE PTR [ebx+esi*8]
  4230d6:	add    eax,0xdcfcfe9
  4230db:	pop    es
  4230dc:	pop    esi
  4230dd:	mov    eax,0xd0f30a81
  4230e2:	out    0x7c,eax
  4230e4:	mov    DWORD PTR [ebx+0x52868ed],edi
  4230ea:	or     ecx,ebp
  4230ec:	xor    al,0x6a
  4230ee:	push   edx
  4230ef:	sar    DWORD PTR [eax],0xd2
  4230f2:	cli    
  4230f3:	jmp    0x12e09df
  4230f8:	add    BYTE PTR [edi],bh
  4230fa:	std    
  4230fb:	dec    DWORD PTR [ebx-0x71bff440]
  423101:	dec    ebp
  423102:	inc    ecx
  423103:	add    al,0x1d
  423105:	cmp    eax,0xe29975fd
  42310a:	mov    edx,0x132cfe9
  42310f:	add    BYTE PTR [ebp+0x26],bl
  423112:	push   esp
  423113:	lea    ebx,[ebx-0x7097b548]
  423119:	pop    ebp
  42311a:	add    BYTE PTR [esi+eax*2+0x4e000e4f],0x51
  423122:	aas    
  423123:	test   BYTE PTR [esi+0x4a2c0f3f],ch
  423129:	hlt    
  42312a:	cli    
  42312b:	mov    BYTE PTR [eax],al
  42312d:	add    BYTE PTR ds:0xdac639d0,cl
  423133:	add    al,0x68
  423135:	add    DWORD PTR [ebx-0x79af810b],edx
  42313b:	(bad)  
  42313c:	xchg   ebx,eax
  42313d:	mov    BYTE PTR [edx+0xe146730],bl
  423143:	xor    al,0x86
  423145:	inc    ebp
  423146:	call   0x3a7b:0x1f6a5488
  42314d:	ror    BYTE PTR [ebp+0x38],cl
  423150:	push   esp
  423151:	(bad)  
  423152:	sti    
  423153:	pop    ds
  423154:	adc    BYTE PTR [eax-0x22],al
  423157:	push   eax
  423158:	inc    ecx
  423159:	or     al,0xf5
  42315b:	jne    0x4231cb
  42315d:	lods   eax,DWORD PTR ds:[esi]
  42315e:	inc    esp
  42315f:	cmp    DWORD PTR [esi+0x62884a45],eax
  423165:	and    dh,dh
  423167:	mov    ebx,0xdf9de812
  42316c:	cli    
  42316d:	call   DWORD PTR [ebx-0xb]
  423170:	jle    0x4231c2
  423172:	aaa    
  423173:	(bad)  
  423174:	scas   eax,DWORD PTR es:[edi]
  423175:	cld    
  423176:	dec    edx
  423177:	(bad)  
  423179:	aas    
  42317a:	aaa    
  42317b:	inc    esp
  42317c:	ret    0x5c13
  42317f:	pop    ss
  423180:	xchg   ecx,eax
  423181:	mov    DWORD PTR ds:0xbb4279dc,ecx
  423187:	lods   eax,DWORD PTR ds:[esi]
  423188:	xchg   esi,eax
  423189:	and    ebp,edx
  42318b:	xchg   ebp,eax
  42318c:	out    0x57,ax
  42318f:	leave  
  423190:	(bad)  
  423191:	inc    DWORD PTR [eax]
  423193:	add    BYTE PTR [edx-0x20b08560],ch
  423199:	hlt    
  42319a:	jne    0x42316b
  42319c:	xor    al,0xaf
  42319e:	pushf  
  42319f:	add    ecx,DWORD PTR [eax]
  4231a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231a2:	pop    es
  4231a3:	adc    ah,BYTE PTR [edi]
  4231a5:	in     al,dx
  4231a6:	mov    esi,0xcbdabfff
  4231ab:	lds    edi,FWORD PTR [eax]
  4231ad:	popa   
  4231ae:	mov    ds:0xb0ee40fc,al
  4231b3:	push   ebp
  4231b4:	loope  0x423228
  4231b6:	add    edx,DWORD PTR [eax+0x30]
  4231b9:	enter  0xed6,0x77
  4231bd:	(bad)  
  4231bf:	lds    esi,FWORD PTR [eax]
  4231c1:	pop    ecx
  4231c2:	mov    dh,0xfc
  4231c4:	sbb    BYTE PTR [esi-0x27d8bf83],al
  4231ca:	(bad)  
  4231cb:	dec    BYTE PTR [eax]
  4231cd:	fnsave [eax+0x3f357486]
  4231d3:	inc    edx
  4231d4:	cld    
  4231d5:	fadd   QWORD PTR [edi]
  4231d7:	adc    bl,BYTE PTR [edi-0x40004138]
  4231dd:	pop    ds
  4231de:	adc    DWORD PTR [eax],edi
  4231e0:	stc    
  4231e1:	fnstsw WORD PTR [edx+0x6b]
  4231e4:	ss (bad) 
  4231e7:	mov    BYTE PTR [edx],dl
  4231e9:	add    eax,0x34373fee
  4231ee:	into   
  4231ef:	sti    
  4231f0:	jo     0x4231af
  4231f2:	xlat   BYTE PTR ds:[ebx]
  4231f3:	fbstp  TBYTE PTR [ecx+0xb0042]
  4231f9:	add    BYTE PTR [ebx+0x250ade59],cl
  4231ff:	enter  0xc671,0x4c
  423203:	iret   
  423204:	adc    edi,DWORD PTR [esi-0x11]
  423207:	pop    ds
  423208:	cwde   
  423209:	mov    ah,0x93
  42320b:	dec    eax
  42320c:	xor    al,0x7c
  42320e:	test   DWORD PTR [ebx],0x2398f023
  423214:	test   al,0x3
  423216:	neg    BYTE PTR ds:[eax+esi*8+0x78b26600]
  42321e:	not    DWORD PTR [ebx]
  423220:	cwde   
  423221:	js     0x423218
  423223:	ret    
  423224:	cwde   
  423225:	or     ah,ch
  423227:	mov    DWORD PTR [eax],0xebcd4a9d
  42322d:	sbb    eax,0x9a80336
  423232:	(bad)
  423235:	lds    ebx,FWORD PTR [esi+eiz*2]
  423238:	shr    edi,cl
  42323a:	cld    
  42323b:	sub    BYTE PTR [eax],ch
  42323d:	add    al,0x60
  42323f:	inc    ecx
  423240:	in     al,0xf8
  423242:	mov    ah,0x3d
  423244:	jmp    0x25fb694c
  423249:	adc    al,0x9a
  42324b:	mov    ecx,0xf392fa29
  423250:	nop
  423251:	add    eax,0xf8e071af
  423256:	ret    0xe3f4
  423259:	pop    eax
  42325a:	ja     0x42327c
  42325c:	popa   
  42325d:	lds    eax,FWORD PTR [eax]
  42325f:	add    BYTE PTR [esp+ebx*4],ah
  423262:	out    0x8f,eax
  423264:	cmp    dh,BYTE PTR [ecx-0xb48f778]
  42326a:	add    ebp,ebp
  42326c:	test   DWORD PTR [esi-0x44d34ac2],esi
  423272:	in     eax,dx
  423273:	addr16 cs dec ebp
  423276:	jl     0x423269
  423278:	xor    eax,0x345244f6
  42327d:	aas    
  42327e:	test   BYTE PTR [edi],dh
  423280:	xor    esi,DWORD PTR [ecx+eax*1]
  423283:	je     0x42327d
  423285:	clc    
  423286:	repnz ds test DWORD PTR cs:[edx+esi*1+0x3b],0x34d73ddc
  423291:	xor    al,0x67
  423293:	stc    
  423294:	pushf  
  423295:	inc    ebp
  423296:	aad    0xaa
  423298:	xor    al,0xb9
  42329a:	ds aad 0xa4
  42329d:	aad    0x98
  42329f:	std    
  4232a0:	ror    BYTE PTR ds:[esp+edi*1-0x1053603],1
  4232a8:	cmp    al,0x67
  4232aa:	pusha  
  4232ab:	idiv   BYTE PTR [edi]
  4232ad:	mov    esp,0x34341f81
  4232b2:	add    DWORD PTR [eax+0x7b],esi
  4232b5:	jns    0x42323d
  4232b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232b8:	test   ch,dl
  4232ba:	inc    esp
  4232bb:	dec    edx
  4232bc:	shr    BYTE PTR ds:[ecx-0x15],1
  4232c0:	xor    eax,0x740134
  4232c5:	add    BYTE PTR [ecx+0x2fbef939],ah
  4232cb:	jge    0x423259
  4232cd:	sub    cl,bl
  4232cf:	jl     0x4232ba
  4232d1:	inc    ecx
  4232d2:	das    
  4232d3:	iret   
  4232d4:	cli    
  4232d5:	adc    esi,DWORD PTR [ecx+edi*4]
  4232d8:	inc    esp
  4232d9:	les    edx,FWORD PTR gs:[edi+ebx*1+0x58]
  4232de:	pop    esp
  4232df:	and    eax,0xcce2b6e9
  4232e4:	cli    
  4232e5:	add    BYTE PTR [ebx-0x72],ch
  4232e8:	jle    0x42333a
  4232ea:	popf   
  4232eb:	cmp    edx,DWORD PTR [ebp+0x68]
  4232ee:	push   ds
  4232ef:	push   es
  4232f0:	inc    ecx
  4232f1:	add    BYTE PTR [ecx-0x22],bl
  4232f4:	cli    
  4232f5:	adc    cl,BYTE PTR [esi-0x117c7dd0]
  4232fb:	xor    DWORD PTR [ecx],eax
  4232fd:	add    BYTE PTR [ebp+0x73],al
  423300:	or     eax,0xfd3aaf84
  423305:	inc    ecx
  423307:	cmp    ecx,DWORD PTR [edi]
  423309:	test   al,0x82
  42330b:	lock cli 
  42330d:	mov    cl,BYTE PTR [esi+0x0]
  423310:	div    BYTE PTR [edi+edx*8-0x7e]
  423314:	std    
  423315:	adc    eax,0x3ac12a
  42331a:	pop    es
  42331b:	mov    eax,0x305e014e
  423320:	cmp    bh,al
  423322:	ret    0x68e0
  423325:	add    esp,eax
  423327:	xor    DWORD PTR [ebx-0x1],edx
  42332a:	add    BYTE PTR [eax],al
  42332c:	sub    DWORD PTR [eax],0xa
  42332f:	inc    eax
  423330:	pop    esi
  423331:	dec    ecx
  423332:	sbb    DWORD PTR [edi+ebx*2+0x30],0xa3913b01
  42333a:	sbb    DWORD PTR [eax+0x59],edx
  42333d:	pusha  
  42333e:	dec    esi
  42333f:	add    DWORD PTR [esi],ebx
  423341:	cmp    ah,bh
  423343:	adc    eax,0x3ac0fe
  423348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423349:	mov    bh,0x52
  42334b:	add    DWORD PTR [esi],ecx
  42334d:	cmp    BYTE PTR [eax],bh
  42334f:	(bad)  
  423350:	push   edx
  423351:	xor    al,0xc3
  423353:	inc    ebp
  423354:	lds    esi,FWORD PTR [ecx]
  423356:	push   ebx
  423357:	push   edi
  423358:	fld    st(5)
  42335a:	(bad)  
  42335b:	adc    al,0x4e
  42335d:	xor    BYTE PTR [edi-0x5d59c8bb],al
  423363:	pop    ebp
  423364:	(bad)  
  423365:	lahf   
  423366:	add    DWORD PTR [eax],eax
  423368:	test   BYTE PTR [esi-0x18],al
  42336b:	ret    
  42336c:	inc    edi
  42336d:	sbb    eax,0x4dbc5605
  423372:	jbe    0x4233b9
  423374:	sub    esp,DWORD PTR [edx]
  423376:	cmp    BYTE PTR [edi-0x35121b5],0xe4
  42337d:	inc    esi
  42337e:	mov    ebx,0x3d20bc0b
  423383:	adc    edi,esi
  423385:	fadd   QWORD PTR [ecx-0x5121d441]
  42338b:	cld    
  42338c:	add    BYTE PTR [esi-0x45],0x3
  423390:	add    BYTE PTR [eax],al
  423392:	mov    ah,0x5
  423394:	add    dh,BYTE PTR [ebx+0x30]
  423397:	lods   eax,DWORD PTR ds:[esi]
  423398:	add    edx,DWORD PTR [edx]
  42339a:	mov    bh,0xcc
  42339c:	mov    esi,0xea93adff
  4233a1:	xor    BYTE PTR [edi-0x57],0xff
  4233a5:	dec    edi
  4233a6:	push   0x47457602
  4233ab:	pop    eax
  4233ac:	inc    ebp
  4233ad:	jae    0x4233df
  4233af:	lods   eax,DWORD PTR ds:[esi]
  4233b0:	add    edx,DWORD PTR [edx]
  4233b2:	and    ebp,esp
  4233b4:	mov    esi,0x81d3bdff
  4233b9:	mov    edi,0xfcaeddcb
  4233be:	pusha  
  4233bf:	pop    ebp
  4233c0:	and    BYTE PTR [ebx],0x47
  4233c3:	fisttp QWORD PTR [edx-0x59ad438a]
  4233c9:	(bad)  
  4233ca:	and    ch,bl
  4233cc:	cmp    DWORD PTR [edi-0x351275d],0x428c9
  4233d6:	aaa    
  4233d7:	call   0x428:0x3427dff1
  4233de:	scas   al,BYTE PTR es:[edi]
  4233df:	mov    cl,0x3c
  4233e1:	add    eax,0x436d3437
  4233e6:	fs aaa 
  4233e8:	cmp    BYTE PTR [edi],al
  4233ea:	pop    es
  4233eb:	mov    edi,0xcad9af6a
  4233f0:	call   0xeb81c475
  4233f5:	mov    bl,0x0
  4233f7:	add    bl,cl
  4233f9:	and    BYTE PTR [ebx+esi*8+0x7d6f3400],cl
  423400:	pop    eax
  423401:	xor    eax,0xf3b403e8
  423406:	fadd   QWORD PTR [edx]
  423408:	pop    es
  423409:	retf   
  42340a:	xor    edi,DWORD PTR [edx-0x46]
  42340d:	mov    bl,0xe9
  42340f:	add    esi,DWORD PTR [edi]
  423411:	mov    cl,0x28
  423413:	(bad)  
  423414:	push   esi
  423415:	pop    esi
  423416:	call   0x3c62bfce
  42341b:	icebp  
  42341c:	inc    eax
  42341d:	xor    al,0xe5
  42341f:	add    DWORD PTR [eax-0x36],edi
  423422:	call   0xe8a07ab6
  423427:	cdq    
  423428:	push   0xaa06f65c
  42342d:	mov    ebx,0xcb3703e9
  423432:	aad    0xf
  423434:	daa    
  423435:	je     0x42341f
  423437:	test   BYTE PTR [edx+0x47],dh
  42343a:	jmp    0xb51e6b42
  42343f:	arpl   WORD PTR [ebx],di
  423441:	retf   0xa63b
  423444:	(bad)  
  423445:	imul   ah
  423447:	add    edi,DWORD PTR [esi-0x5fb60785]
  42344d:	xor    al,0xe8
  42344f:	add    esi,DWORD PTR [ebx-0x6f70cb0c]
  423455:	dec    eax
  423456:	add    DWORD PTR ds:0xde4e3437,ecx
  42345c:	add    BYTE PTR [eax],al
  42345e:	nop
  42345f:	hlt    
  423460:	push   ebx
  423461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423462:	cmp    BYTE PTR ds:[ebx-0x76142a67],dh
  423469:	cmc    
  42346a:	loop   0x4234d3
  42346c:	push   esi
  42346d:	int    0x54
  42346f:	inc    ebx
  423470:	push   esi
  423471:	lds    edx,FWORD PTR [ebp+0x3f]
  423474:	cmp    edi,DWORD PTR [ebp-0x4ae5c0a9]
  42347a:	imul   eax,DWORD PTR [eax+0x4a],0x1954465
  423481:	jmp    0x654f79ba
  423486:	and    al,0x96
  423488:	add    ecx,ebp
  42348a:	xor    al,0x45
  42348c:	add    eax,0xffdbfb1a
  423491:	jno    0x423488
  423493:	mov    al,0x40
  423495:	fld    TBYTE PTR [edi]
  423497:	add    eax,0xc9155885
  42349c:	cli    
  42349d:	jmp    0x78c77253
  4234a2:	push   ss
  4234a3:	leave  
  4234a4:	cli    
  4234a5:	jmp    0x29706a6b
  4234aa:	dec    esi
  4234ab:	xor    eax,DWORD PTR [esi+0x1009e32b]
  4234b1:	adc    cl,BYTE PTR [ebp+esi*4-0x70]
  4234b5:	dec    ecx
  4234b6:	cmp    esi,DWORD PTR [ecx+eax*1]
  4234b9:	jl     0x4234fb
  4234bb:	mov    ch,0x90
  4234bd:	dec    eax
  4234be:	cmp    esi,DWORD PTR [ecx+eax*1]
  4234c1:	pop    esp
  4234c2:	add    BYTE PTR [eax],al
  4234c4:	aaa    
  4234c5:	add    eax,ecx
  4234c7:	shl    BYTE PTR [esi],cl
  4234c9:	mov    ebx,0x38f561bf
  4234ce:	cs test eax,0x7aa0
  4234d4:	pop    edx
  4234d5:	xor    eax,0x362f8441
  4234da:	jne    0x4234df
  4234dc:	popf   
  4234dd:	or     eax,0x341f8400
  4234e2:	jne    0x4234e7
  4234e4:	lea    ecx,ds:0xc02f840a
  4234ea:	outs   dx,BYTE PTR ds:[esi]
  4234eb:	add    ebx,DWORD PTR [ebp+0xd]
  4234ee:	inc    BYTE PTR [ebx+0x36ec51f]
  4234f4:	dec    ebp
  4234f5:	or     eax,0x34dac202
  4234fa:	dec    esi
  4234fb:	mov    esi,DWORD PTR [edx+0x4ff8deb3]
  423501:	and    esi,ecx
  423503:	add    dh,cl
  423505:	xor    al,0x50
  423507:	jmp    FWORD PTR [ebx-0x61bff444]
  42350d:	test   ch,bh
  42350f:	adc    eax,0x3ac436
  423514:	or     esi,DWORD PTR [ebp+0x6e]
  423517:	and    eax,DWORD PTR gs:[ecx-0x5550fbe2]
  42351e:	pop    esi
  42351f:	lea    esp,[edx-0x5bae8d18]
  423525:	xor    dl,BYTE PTR [ecx-0x1]
  423528:	add    BYTE PTR [eax],al
  42352a:	imul   esp,DWORD PTR [eax],0x11
  42352d:	inc    eax
  42352e:	pop    esi
  42352f:	dec    ecx
  423530:	mov    edx,0x76b3c274
  423535:	and    al,0x4a
  423537:	jle    0x4235a8
  423539:	inc    ebp
  42353a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42353b:	xor    al,0x86
  42353d:	inc    esp
  42353e:	jp     0x423500
  423540:	dec    edx
  423541:	push   0x29358de3
  423546:	data16 mov cl,0x11
  423549:	add    BYTE PTR [esi],bl
  42354b:	pop    edx
  42354c:	dec    ebp
  42354d:	lea    esi,[edi]
  42354f:	sbb    DWORD PTR [ecx],ebp
  423551:	or     al,0xb2
  423553:	sub    DWORD PTR [ecx],ebp
  423555:	je     0x423566
  423557:	jno    0x423544
  423559:	cli    
  42355a:	adc    BYTE PTR [ecx-0x3b],dl
  42355d:	jne    0x4235b5
  42355f:	sub    eax,0x1ae778ba
  423564:	add    eax,0xfe929de8
  423569:	sti    
  42356a:	mov    ebx,0xb409799d
  42356f:	rol    BYTE PTR [esi],1
  423571:	into   
  423572:	je     0x423551
  423574:	add    ah,bh
  423576:	and    eax,DWORD PTR cs:0xf7a5f487
  42357d:	std    
  42357e:	enter  0x5a3e,0x87
  423582:	fidivr DWORD PTR [eax]
  423584:	ret    0x36b0
  423587:	sbb    cl,BYTE PTR [edx-0x382ea4bc]
  42358d:	inc    BYTE PTR [eax]
  42358f:	add    BYTE PTR [esp+eiz*8-0x7353ffc2],ah
  423596:	sub    ah,BYTE PTR [edi]
  423598:	push   es
  423599:	cmp    DWORD PTR [eax+edx*1+0x272eacbc],ecx
  4235a0:	out    0x34,al
  4235a2:	mov    WORD PTR [eax+0x3b],ss
  4235a5:	push   edx
  4235a6:	test   BYTE PTR [esi+esi*1-0x23],dl
  4235aa:	(bad)  
  4235ab:	mov    ebp,0x8759dd3b
  4235b0:	pop    ebx
  4235b1:	pop    edx
  4235b2:	icebp  
  4235b3:	pop    eax
  4235b4:	lods   al,BYTE PTR ds:[esi]
  4235b5:	sbb    al,0x90
  4235b7:	dec    ebp
  4235b8:	mov    esp,DWORD PTR [ebx-0x36fd76f2]
  4235be:	xchg   ecx,eax
  4235bf:	push   eax
  4235c0:	adc    ebp,DWORD PTR [ebx-0x53acb26f]
  4235c6:	lea    eax,[ebp+0x4f]
  4235c9:	xor    al,0xd0
  4235cb:	xchg   BYTE PTR [esi],bl
  4235cd:	(bad)  
  4235ce:	fld    TBYTE PTR [ebp+0x29]
  4235d1:	shl    DWORD PTR gs:[ebx+0x3e8358b],cl
  4235d8:	sbb    al,0x21
  4235da:	add    al,0x18
  4235dc:	ja     0x423612
  4235de:	dec    esi
  4235df:	add    al,0xc
  4235e1:	and    DWORD PTR [esi+edx*1-0x3c9acb89],eax
  4235e8:	cmp    DWORD PTR [edx],0x38
  4235eb:	xchg   ecx,eax
  4235ec:	jp     0x4235ca
  4235ee:	cmp    ah,ch
  4235f0:	daa    
  4235f1:	fist   DWORD PTR [ebx-0x12fffffe]
  4235f7:	repnz xor bl,BYTE PTR [ebx-0x50]
  4235fb:	les    ebp,FWORD PTR [edi+0x49]
  4235fe:	daa    
  4235ff:	(bad)  
  423600:	cmp    BYTE PTR [edi],al
  423602:	ss xor al,0xe8
  423605:	mov    gs,WORD PTR [edi+0x3703e933]
  42360b:	gs into 
  42360d:	addr16 mov eax,0xed617c9
  423613:	fcom   QWORD PTR ds:0x65c69cef
  423619:	ret    
  42361a:	and    edi,DWORD PTR [eax]
  42361c:	inc    ebx
  42361d:	ja     0x42367a
  42361f:	cmp    BYTE PTR [eax+0x31db748e],bl
  423625:	test   eax,0x618bc67d
  42362a:	mov    ecx,0xea02e82f
  42362f:	paddsb mm1,QWORD PTR [esi+0x279cc676]
  423636:	xor    eax,edi
  423638:	xchg   esp,eax
  423639:	daa    
  42363a:	sub    esp,DWORD PTR [edx+0x10]
  42363d:	inc    ebp
  42363e:	retf   0xe833
  423641:	lds    edi,FWORD PTR [ebx]
  423643:	xor    al,0x1
  423645:	sub    edi,DWORD PTR [eax]
  423647:	xor    al,0x54
  423649:	bound  ecx,QWORD PTR [eax+0x46]
  42364c:	in     eax,0xe1
  42364e:	ret    0xd6f
  423651:	push   0x27
  423653:	sub    DWORD PTR [esi+0x3f],ecx
  423656:	jle    0x42369d
  423658:	stc    
  423659:	int3   
  42365a:	add    BYTE PTR [eax],al
  42365c:	inc    esi
  42365d:	mov    al,0x6e
  42365f:	call   0x674c6a98
  423664:	ja     0x423699
  423666:	add    ecx,ebp
  423668:	mov    ebx,0xafdefacc
  42366d:	adc    eax,0xc934e900
  423672:	je     0x423665
  423674:	aaa    
  423675:	push   ds
  423676:	adc    ebp,edi
  423678:	je     0x4236ae
  42367a:	xchg   BYTE PTR [ecx+0x6d0ac9b0],dl
  423680:	jo     0x4236b5
  423682:	add    ecx,ebp
  423684:	mov    bl,0x78
  423686:	and    eax,0xfa6037dd
  42368b:	aam    0xbc
  42368d:	xor    eax,0xdd6be941
  423692:	mov    BYTE PTR [ebp-0x1644dbb0],ah
  423698:	cmp    BYTE PTR [ecx+eax*1],dh
  42369b:	fs jae 0x4236e8
  42369e:	and    eax,0xfa60eb9f
  4236a3:	aam    0xe8
  4236a5:	pop    ds
  4236a6:	inc    ecx
  4236a7:	jmp    0xd9bb2b64
  4236ac:	fidiv  WORD PTR [edx+edx*2+0x26]
  4236b0:	call   0x653730f0
  4236b5:	xor    eax,0x68ade941
  4236ba:	and    eax,0x5cfcf3f5
  4236bf:	add    BYTE PTR [eax],al
  4236c1:	add    BYTE PTR [edx-0x2382df],al
  4236c7:	mov    bh,0xd1
  4236c9:	inc    ebx
  4236ca:	dec    esi
  4236cb:	xor    al,0xb0
  4236cd:	add    al,0x4f
  4236cf:	xor    DWORD PTR [ecx],eax
  4236d1:	dec    esi
  4236d3:	xor    BYTE PTR [eax],al
  4236d5:	add    BYTE PTR [esi],bl
  4236d7:	ins    BYTE PTR es:[edi],dx
  4236d8:	div    BYTE PTR [ebp+0x16]
  4236db:	xor    al,0x13
  4236dd:	adc    al,0x22
  4236df:	jno    0x4236e2
  4236e1:	mov    edx,esi
  4236e3:	scas   eax,DWORD PTR es:[edi]
  4236e4:	repnz call FWORD PTR [ecx]
  4236e7:	lods   eax,DWORD PTR ds:[esi]
  4236e8:	stc    
  4236e9:	add    BYTE PTR [esi],cl
  4236eb:	xor    DWORD PTR [edi+0x53],ecx
  4236ee:	and    DWORD PTR [ebx],esi
  4236f0:	adc    ebx,DWORD PTR [edx+esi*8+0x70]
  4236f4:	add    DWORD PTR [ecx+0x39111c12],ecx
  4236fa:	sub    bl,BYTE PTR [edx*1+0x1333d074]
  423701:	cld    
  423702:	in     eax,dx
  423703:	jo     0x423706
  423705:	push   0x12d5e
  42370a:	sbb    eax,0xd675f66b
  42370f:	xor    edx,DWORD PTR [ebx]
  423711:	lock lods eax,DWORD PTR ds:[esi]
  423713:	jo     0x423716
  423715:	or     DWORD PTR [ebx+0x120ff734],0xffffffee
  42371c:	add    DWORD PTR [eax],eax
  42371e:	mov    cs,edx
  423720:	inc    ebp
  423721:	and    al,0x6e
  423723:	das    
  423724:	push   es
  423725:	test   DWORD PTR [eax],eax
  423727:	add    BYTE PTR [eax+esi*1+0x6d400001],dh
  42372e:	and    eax,0x443c5e10
  423733:	push   ebx
  423734:	mov    cl,0x33
  423736:	adc    ebx,DWORD PTR [edx+eiz*2]
  423739:	jo     0x42373c
  42373b:	mov    esi,DWORD PTR [edi]
  42373d:	sub    eax,DWORD PTR [ebx-0x60b0d70e]
  423743:	add    BYTE PTR [edi],dh
  423745:	fisttp DWORD PTR [ebx+0x4ed31344]
  42374b:	dec    edi
  42374c:	call   0x384aac0e
  423751:	fisttp WORD PTR [edx]
  423753:	adc    al,0x77
  423755:	int    0x89
  423757:	sar    BYTE PTR [eax],0x59
  42375a:	mov    WORD PTR [eax],es
  42375c:	aaa    
  42375d:	int    0x68
  42375f:	add    BYTE PTR [eax],bl
  423761:	imul   ecx,DWORD PTR ds:0x31318bfb,0x293983fb
  42376b:	push   0x50d37
  423770:	popa   
  423771:	xchg   edx,eax
  423772:	sbb    BYTE PTR [eax],cl
  423774:	dec    ebx
  423775:	or     eax,0xaa59e705
  42377a:	dec    ecx
  42377b:	and    al,0x47
  42377d:	int    0x6
  42377f:	add    BYTE PTR [edi],dh
  423781:	sub    DWORD PTR [ecx],ecx
  423783:	das    
  423784:	mul    DWORD PTR [esi+0x42604f10]
  42378a:	sbb    BYTE PTR [eax+eax*1],ah
  42378d:	add    BYTE PTR [ebx],ch
  42378f:	or     eax,0x52bf7f05
  423794:	jns    0x4237e5
  423796:	sbb    eax,0x77b30bcd
  42379b:	jge    0x423803
  42379d:	adc    DWORD PTR [esi],esi
  42379f:	int    0xfe
  4237a1:	cli    
  4237a2:	and    dl,ch
  4237a4:	sti    
  4237a5:	adc    eax,0x3ee117
  4237aa:	pushf  
  4237ab:	ror    BYTE PTR [ebx],0xb3
  4237ae:	addr16 or al,0xed
  4237b1:	adc    BYTE PTR [esi+0x401c2299],ch
  4237b7:	xor    al,0x5b
  4237b9:	(bad)
  4237bc:	sbb    edi,DWORD PTR [ecx+0x2f]
  4237bf:	lods   eax,DWORD PTR ds:[esi]
  4237c0:	lods   al,BYTE PTR ds:[esi]
  4237c1:	daa    
  4237c2:	pmaddwd mm0,QWORD PTR [ecx]
  4237c5:	adc    al,0xdf
  4237c7:	cmp    ebx,DWORD PTR [eax]
  4237c9:	inc    ebx
  4237ca:	aaa    
  4237cb:	mov    cl,0xa4
  4237cd:	daa    
  4237ce:	sbb    ebp,DWORD PTR [ebp-0x52ecd864]
  4237d4:	pushf  
  4237d5:	daa    
  4237d6:	addr16 int3 
  4237d8:	in     eax,dx
  4237d9:	mov    cl,0x37
  4237db:	xor    al,0xcf
  4237dd:	nop    DWORD PTR [ecx]
  4237e0:	pusha  
  4237e1:	rcr    DWORD PTR [eax+0x34],cl
  4237e4:	retf   
  4237e5:	sbb    BYTE PTR [edi+0x28],dl
  4237e8:	sub    BYTE PTR [esp+ecx*1],al
  4237eb:	or     DWORD PTR [ebx+edx*8+0x40],esp
  4237ef:	xor    al,0xb3
  4237f1:	sbb    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [edi],cl
  4237f5:	sub    BYTE PTR es:[esp+ecx*4],al
  4237f9:	(bad)  
  4237fa:	xlat   BYTE PTR ds:[ebx]
  4237fb:	ret    
  4237fc:	sub    BYTE PTR [edi+0x2ba16085],0xe8
  423803:	pop    eax
  423804:	mov    al,0xcf
  423806:	addr16 out dx,eax
  423808:	pop    ebx
  423809:	retf   0xbed
  42380c:	stc    
  42380d:	jbe    0x4237f7
  42380f:	pop    es
  423810:	dec    ebx
  423811:	adc    al,BYTE PTR [eax-0x17cbd3b9]
  423817:	xchg   DWORD PTR [edi+0x47],esi
  42381a:	or     eax,0xa5b1376a
  42381f:	lahf   
  423820:	pop    es
  423821:	dec    esp
  423822:	gs dec esp
  423824:	fs or  eax,0x3442b540
  42382a:	call   0x6d663b2d
  42382f:	dec    eax
  423830:	mov    ds:0x28bc01c2,eax
  423835:	mov    edi,0xbf04e174
  42383a:	adc    al,0x1
  42383c:	dec    edi
  42383d:	je     0x423840
  42383f:	adc    dh,BYTE PTR [ecx]
  423841:	mov    edi,0x4859f974
  423846:	or     eax,0xfa2bcf0e
  42384b:	fsubr  QWORD PTR [eax+0x73e94127]
  423851:	or     DWORD PTR ds:0x93842e9,0x7500001b
  42385b:	xor    al,0x5
  42385d:	pop    ebp
  42385e:	cmp    cl,ah
  423860:	imul   edi
  423862:	xor    al,0x34
  423864:	test   DWORD PTR [ecx-0x56d1c961],ebp
  42386a:	jnp    0x4237ee
  42386c:	add    eax,0xd9180be9
  423871:	aad    0x74
  423873:	xor    al,0x54
  423875:	bound  eax,QWORD PTR [edi]
  423877:	mov    DWORD PTR [ecx+eiz*8],0xed010206
  42387e:	cmp    BYTE PTR [ecx+0x1368ed74],0xe9
  423885:	mov    esp,0x65013429
  42388a:	sti    
  42388b:	dec    eax
  42388c:	sbb    edx,eax
  42388e:	add    DWORD PTR [ecx+edx*8+0x11473b2a],esi
  423895:	jbe    0x4238d7
  423897:	and    al,0x86
  423899:	sbb    al,0x4f
  42389b:	mov    ebp,0x879cf174
  4238a0:	cld    
  4238a1:	pop    esi
  4238a2:	mov    ds:0x205611d9,al
  4238a7:	sub    dl,bh
  4238a9:	aam    0x24
  4238ab:	data16 cli 
  4238ad:	add    bl,cl
  4238af:	sub    eax,0x2a6a15f6
  4238b4:	inc    ecx
  4238b5:	add    BYTE PTR [eax+0x5e10bb62],ah
  4238bb:	push   0xffffff82
  4238bd:	in     al,dx
  4238be:	add    BYTE PTR [eax],al
  4238c0:	dec    eax
  4238c1:	cmp    DWORD PTR [ecx],ecx
  4238c3:	ror    BYTE PTR [ebp-0x2aa9facb],cl
  4238c9:	dec    eax
  4238ca:	or     eax,0x86cd7f74
  4238cf:	push   cs
  4238d0:	pop    esi
  4238d1:	xor    eax,0x1ccac085
  4238d6:	xor    dh,BYTE PTR ds:0x3ae7ce
  4238dc:	stos   DWORD PTR es:[edi],eax
  4238dd:	and    eax,0xac2e75f6
  4238e2:	dec    esp
  4238e3:	adc    al,0x1
  4238e5:	dec    edx
  4238e6:	or     eax,ebp
  4238e8:	jno    0x4238ab
  4238ea:	idiv   bh
  4238ec:	cmc    
  4238ed:	and    al,0xf6
  4238ef:	jne    0x4238db
  4238f1:	mov    edi,0xbf281074
  4238f6:	je     0x423900
  4238f8:	shr    DWORD PTR [ecx],0xd1
  4238fb:	adc    al,0x1e
  4238fd:	cmp    BYTE PTR [edi+0x5d],dl
  423900:	pushf  
  423901:	and    al,0x1
  423903:	push   ebp
  423904:	gs shr edi,1
  423907:	add    eax,0x3ae2d6
  42390c:	fisub  DWORD PTR [esi-0x7e]
  42390f:	jne    0x4238d3
  423911:	dec    eax
  423912:	and    al,ch
  423914:	pop    es
  423915:	xor    al,BYTE PTR [ecx]
  423917:	add    BYTE PTR [edx-0xb],cl
  42391a:	jne    0x423934
  42391c:	in     eax,0x9
  42391e:	adc    eax,0x107434dd
  423924:	add    BYTE PTR [eax],al
  423926:	add    DWORD PTR [edx+0x11],ecx
  423929:	mov    esi,DWORD PTR [edi]
  42392b:	cwde   
  42392c:	adc    bh,bl
  42392e:	or     dl,bl
  423930:	out    0x29,al
  423932:	mov    bh,BYTE PTR [ecx-0x3]
  423935:	out    0x27,eax
  423937:	add    dh,BYTE PTR [ebx+0x14]
  42393a:	js     0x4239bb
  42393c:	push   cs
  42393d:	push   edx
  42393e:	jo     0x4238c7
  423940:	push   es
  423941:	sti    
  423942:	inc    edx
  423943:	aas    
  423944:	adc    al,BYTE PTR [eax+0x37]
  423947:	sbb    DWORD PTR [ebx-0x42],0x8753cb47
  42394e:	arpl   WORD PTR [eax],bp
  423950:	add    ecx,DWORD PTR [eax]
  423952:	gs (bad) 
  423954:	inc    BYTE PTR [ebx]
  423956:	jmp    0xc34eaca0
  42395b:	jmp    0x423943
  42395d:	inc    DWORD PTR [edx-0x33]
  423960:	inc    BYTE PTR [ebx+0x371d61f7]
  423966:	push   0x4d
  423968:	aad    0x3f
  42396a:	aaa    
  42396b:	pusha  
  42396c:	adc    eax,0x8bbd8afb
  423971:	dec    ebp
  423972:	and    esi,esi
  423974:	jo     0x42397e
  423976:	por    mm7,mm1
  423979:	sti    
  42397a:	clc    
  42397b:	repnz adc eax,0xf7e96afb
  423981:	jne    0x4239ca
  423983:	push   ebp
  423985:	jne    0x4239b6
  423987:	sahf   
  423988:	adc    ah,bl
  42398a:	add    BYTE PTR [eax],al
  42398c:	inc    ebx
  42398d:	or     eax,0x8b725a05
  423992:	adc    eax,0xe9426200
  423997:	repnz cmp al,ch
  42399a:	aam    0x3f
  42399c:	aaa    
  42399d:	rcl    DWORD PTR [eax-0x79],1
  4239a0:	sub    bl,ch
  4239a2:	push   0x21
  4239a4:	lahf   
  4239a5:	xor    al,0xa5
  4239a7:	or     DWORD PTR [edi],esi
  4239a9:	xor    al,0x64
  4239ab:	les    esp,FWORD PTR [ebx]
  4239ad:	sbb    al,0xf
  4239af:	xor    DWORD PTR [edi+0x203a7e4],esi
  4239b5:	and    al,0x43
  4239b7:	jno    0x4239e4
  4239b9:	stos   DWORD PTR es:[edi],eax
  4239ba:	lods   eax,DWORD PTR ds:[esi]
  4239bb:	sbb    edi,DWORD PTR [ecx+ecx*2-0x20]
  4239bf:	jmp    0x423993
  4239c1:	shr    BYTE PTR [ebx],0xfb
  4239c4:	push   eax
  4239c5:	and    esp,DWORD PTR [ebx]
  4239c7:	jno    0x423a08
  4239c9:	mov    edi,0xbf050f95
  4239ce:	popf   
  4239cf:	pop    es
  4239d0:	dec    esp
  4239d1:	dec    ecx
  4239d2:	loopne 0x4239ce
  4239d4:	and    dh,BYTE PTR [eax]
  4239d6:	fld    QWORD PTR [ebx+0x37]
  4239d9:	pop    esi
  4239da:	popf   
  4239db:	lds    esp,FWORD PTR [ebx]
  4239dd:	xor    al,0x9d
  4239df:	mov    fs,WORD PTR [ebx]
  4239e1:	(bad)  
  4239e2:	in     eax,0xb
  4239e4:	stc    
  4239e5:	jb     0x4239cf
  4239e7:	inc    DWORD PTR [esi-0x5cebaa55]
  4239ed:	adc    eax,0x6fc0
  4239f2:	inc    edx
  4239f3:	xor    al,0xe8
  4239f5:	jg     0x4239ee
  4239f7:	inc    edi
  4239f8:	loopne 0x423a38
  4239fa:	dec    edx
  4239fb:	mov    ah,0x98
  4239fd:	inc    esi
  4239fe:	aaa    
  4239ff:	dec    ecx
  423a00:	fdivr  st,st(2)
  423a02:	push   0x28
  423a04:	pop    edi
  423a05:	dec    eax
  423a06:	dec    edi
  423a07:	mov    edi,0x67cf0c1d
  423a0c:	pushf  
  423a0d:	cli    
  423a0e:	fmul   st(2),st
  423a10:	idiv   edx
  423a12:	dec    edx
  423a13:	sbb    al,0x8b
  423a15:	jo     0x423a3a
  423a17:	xor    WORD PTR [eax+0x33],0xffbf
  423a1c:	cmc    
  423a1d:	or     edi,DWORD PTR [eax+ebp*1+0x74405101]
  423a24:	add    DWORD PTR [edi],ecx
  423a26:	push   cs
  423a27:	jle    0x423a3e
  423a29:	jmp    0x582ff135
  423a2e:	aaa    
  423a2f:	sub    al,0xcf
  423a31:	stos   BYTE PTR es:[edi],al
  423a32:	xor    al,0x38
  423a34:	push   ebx
  423a35:	bound  eax,QWORD PTR [edi]
  423a37:	xor    BYTE PTR [ebp+0x8],dh
  423a3a:	xchg   ebx,eax
  423a3b:	push   ss
  423a3c:	or     al,0xe9
  423a3e:	xor    al,0xb8
  423a40:	sar    DWORD PTR [ebp+0x6934074c],0x84
  423a47:	inc    BYTE PTR [eax]
  423a49:	pushf  
  423a4a:	inc    esp
  423a4b:	mov    ebx,0x70a9f974
  423a50:	adc    eax,0xe92bc716
  423a55:	loop   0x423a57
  423a57:	add    BYTE PTR [eax-0x46],al
  423a5a:	cli    
  423a5b:	adc    ah,BYTE PTR [ebx+edi*4]
  423a5e:	je     0x423a35
  423a60:	cmp    eax,0x2d9f1148
  423a65:	dec    eax
  423a66:	or     esi,ebp
  423a68:	cmp    al,ch
  423a6a:	adc    eax,0x5c5a3b29
  423a6f:	stos   DWORD PTR es:[edi],eax
  423a70:	inc    ebx
  423a71:	xor    al,0x54
  423a73:	bound  ebx,QWORD PTR [edi]
  423a75:	ret    
  423a76:	add    al,0xe1
  423a78:	loop   0x423a77
  423a7a:	add    ch,ch
  423a7c:	data16 mov ch,0x74
  423a7f:	in     eax,dx
  423a80:	mov    BYTE PTR [ebx],dl
  423a82:	jmp    0x1767a53
  423a87:	gs repz dec eax
  423a8a:	sbb    edx,esp
  423a8c:	adc    DWORD PTR [ecx+edx*8+0x1147332a],esi
  423a93:	xchg   esi,eax
  423a94:	pusha  
  423a95:	and    al,0x86
  423a97:	sbb    al,0x27
  423a99:	mov    ecx,0xc9c60074
  423a9e:	(bad)  
  423a9f:	sti    
  423aa0:	cmp    DWORD PTR [ebx+0x4d2910e2],edi
  423aa6:	adc    eax,0x4f21a3ff
  423aab:	inc    DWORD PTR [ebx+0x4615f629]
  423ab1:	sub    eax,0x66c80041
  423ab6:	mov    ebx,0x826e9e10
  423abb:	in     al,dx
  423abc:	add    BYTE PTR [eax],al
  423abe:	inc    eax
  423abf:	mov    ebp,0x31cdd202
  423ac4:	add    eax,0x114cd556
  423ac9:	je     0x423b0a
  423acb:	rcl    BYTE PTR [esi-0x7aceb1f4],1
  423ad1:	rol    dl,0x19
  423ad4:	xor    dh,BYTE PTR ds:0x3ae7de
  423ada:	mov    ds:0x6275f621,eax
  423adf:	mov    al,0x4c
  423ae1:	sbb    BYTE PTR [ecx],bh
  423ae3:	dec    esi
  423ae4:	or     eax,0xf6c0a9e8
  423ae9:	push   DWORD PTR ds:0x3675f627
  423aef:	mov    ebx,0xbb601474
  423af4:	je     0x423b02
  423af6:	jmp    0x4414448
  423afb:	sbb    DWORD PTR [eax+eax*2],edx
  423afe:	push   cs
  423aff:	pop    ebx
  423b00:	pop    esp
  423b01:	ret    0x30e2
  423b04:	push   esp
  423b05:	mov    edi,edx
  423b07:	ret    0x804
  423b0a:	int3   
  423b0b:	ja     0x423b0e
  423b0d:	add    al,0x20
  423b0f:	scas   eax,DWORD PTR es:[edi]
  423b10:	je     0x423b22
  423b12:	inc    edx
  423b13:	adc    ecx,ebp
  423b15:	push   esi
  423b16:	aaa    
  423b17:	xlat   BYTE PTR ds:[ebx]
  423b18:	(bad)  
  423b19:	push   DWORD PTR [ebx-0x3e79576]
  423b1f:	jg     0x423b9f
  423b21:	rol    BYTE PTR [eax],1
  423b23:	add    BYTE PTR [ebx+ecx*8+0x6b],dh
  423b27:	adc    BYTE PTR [eax-0x578f541],dh
  423b2d:	loop   0x423b28
  423b2f:	jne    0x423b64
  423b31:	arpl   WORD PTR [eax],si
  423b33:	neg    DWORD PTR [eax-0x6ff012a3]
  423b39:	fist   WORD PTR [esi]
  423b3b:	sti    
  423b3c:	add    al,bh
  423b3e:	push   eax
  423b3f:	sti    
  423b40:	or     al,bh
  423b42:	stc    
  423b43:	jne    0x423b74
  423b45:	dec    BYTE PTR [edx]
  423b47:	sbb    al,0x4a
  423b49:	mov    edi,esi
  423b4b:	pop    ecx
  423b4c:	or     cl,BYTE PTR [ecx]
  423b4e:	or     al,BYTE PTR [eax]
  423b50:	sbb    al,0xd0
  423b52:	or     dl,BYTE PTR ds:0x26bcaf7
  423b58:	(bad)  
  423b59:	cmc    
  423b5a:	or     eax,0x3d0a373e
  423b5f:	add    eax,0x3ede67
  423b64:	ret    0xb6d4
  423b67:	jne    0x423ba5
  423b69:	(bad)  
  423b6a:	(bad)  
  423b6b:	mov    esi,0x14cad06c
  423b70:	ja     0x423b3f
  423b72:	jno    0x423b76
  423b74:	fcomip st,st(4)
  423b76:	or     DWORD PTR [esi],edi
  423b78:	aaa    
  423b79:	mov    fs,WORD PTR [esi]
  423b7b:	add    eax,0x3ec05f
  423b80:	or     BYTE PTR [esi-0x61ff3fea],dl
  423b86:	and    BYTE PTR [ebx],bl
  423b88:	add    BYTE PTR [eax],al
  423b8a:	inc    edx
  423b8b:	syscall 
  423b8d:	mov    edi,0x7fe95682
  423b92:	shl    DWORD PTR [eax+edx*8],cl
  423b95:	in     eax,dx
  423b96:	xor    ch,BYTE PTR [esi+esi*4]
  423b99:	inc    ebx
  423b9a:	aaa    
  423b9b:	xor    BYTE PTR [edx],bh
  423b9d:	mov    eax,DWORD PTR [edx+0x2c]
  423ba0:	adc    al,0x26
  423ba2:	iret   
  423ba3:	jmp    0x70a8:0xb03703ef
  423baa:	pop    edx
  423bab:	mov    cl,0x7a
  423bad:	jo     0x423c05
  423baf:	scas   eax,DWORD PTR es:[edi]
  423bb0:	and    al,BYTE PTR [eax]
  423bb2:	(bad)  
  423bb3:	cwde   
  423bb4:	arpl   di,si
  423bb6:	pushf  
  423bb7:	mov    cl,0x28
  423bb9:	jo     0x423be5
  423bbb:	dec    esi
  423bbc:	add    BYTE PTR [esi-0x46],cl
  423bbf:	imul   esi,DWORD PTR [eax],0x47818f55
  423bc5:	idiv   BYTE PTR [ebp+ebp*4-0x5b]
  423bc9:	xlat   BYTE PTR ds:[ebx]
  423bca:	ret    0x1071
  423bcd:	push   esp
  423bce:	push   eax
  423bcf:	xor    eax,0x144af692
  423bd4:	std    
  423bd5:	inc    ebx
  423bd6:	aaa    
  423bd7:	pop    edx
  423bd8:	xor    edx,eax
  423bda:	cmp    esi,DWORD PTR [edi*4-0x348a476]
  423be1:	sub    eax,DWORD PTR [ebp+0x31]
  423be4:	lock sar eax,1
  423be7:	xor    esp,esp
  423be9:	dec    ebp
  423bea:	mov    eax,0x6fe040
  423bef:	add    BYTE PTR [ebp-0x34],bl
  423bf2:	imul   ecx,DWORD PTR [ebx],0xc36c3437
  423bf8:	mov    ds:0x8bed6511,eax
  423bfd:	adc    eax,0xcc333d5f
  423c02:	sbb    esi,edi
  423c04:	cld    
  423c05:	mov    edx,0x2183c36d
  423c0a:	dec    esi
  423c0b:	sub    al,0x85
  423c0d:	test   eax,0x650b2401
  423c12:	jmp    0xfb001058
  423c17:	jo     0x423c90
  423c19:	fmul   DWORD PTR [esp-0x17199c0d]
  423c20:	jp     0x423be1
  423c22:	adc    al,0xe1
  423c24:	daa    
  423c25:	je     0x423c28
  423c27:	daa    
  423c28:	jmp    0xedb3:0x7e90579
  423c2f:	push   0xffffff90
  423c31:	add    esi,ebx
  423c33:	in     al,0x2c
  423c35:	jmp    0xd486:0x6498e93e
  423c3c:	cmp    al,0x40
  423c3e:	cs inc ecx
  423c40:	pop    eax
  423c41:	xor    eax,DWORD PTR [ecx]
  423c43:	jmp    0x13b83048
  423c48:	mov    dh,0xc5
  423c4a:	jne    0x423c53
  423c4c:	mov    ah,0xfd
  423c4e:	xor    BYTE PTR [ebx+edx*1+0xe143b3],bh
  423c55:	add    BYTE PTR [eax+edi*4-0x5],cl
  423c59:	es popa 
  423c5b:	mov    al,0xc1
  423c5d:	xchg   ebp,eax
  423c5e:	daa    
  423c5f:	push   edx
  423c60:	xor    DWORD PTR [edi-0x472e9741],edi
  423c66:	dec    esp
  423c67:	and    eax,0xac4107de
  423c6c:	inc    esp
  423c6d:	and    DWORD PTR [edi+0x1d99d16f],edi
  423c73:	xor    al,0x53
  423c75:	out    dx,al
  423c76:	xor    BYTE PTR [eax+0x5e332915],al
  423c7c:	enter  0x37ab,0x34
  423c80:	push   esp
  423c81:	bound  ebx,QWORD PTR [edi]
  423c83:	cmp    ch,ch
  423c85:	sbb    DWORD PTR [ecx],edx
  423c87:	xor    BYTE PTR [ecx],cl
  423c89:	add    BYTE PTR [ebx+esi*2-0x54b7fbff],bl
  423c90:	je     0x423c9a
  423c92:	sub    al,BYTE PTR [ebx]
  423c94:	jmp    0x178117b
  423c99:	test   BYTE PTR [esi-0x577adcbc],cl
  423c9f:	inc    esp
  423ca0:	pop    ds
  423ca1:	and    eax,0x5
  423ca4:	je     0x423cc7
  423ca6:	push   ebp
  423ca7:	cli    
  423ca8:	or     al,ch
  423caa:	gs ret 0xfff6
  423cae:	sbb    esi,eax
  423cb0:	jne    0x423cc7
  423cb2:	xor    al,0x0
  423cb4:	dec    edi
  423cb5:	lea    eax,[ebx-0x20]
  423cb8:	push   eax
  423cb9:	call   0xd68c3cbe
  423cbe:	idiv   edi
  423cc0:	pop    es
  423cc1:	stc    
  423cc2:	fmul   DWORD PTR [ebp-0x14ae1a25]
  423cc8:	(bad)  
  423cc9:	not    BYTE PTR [di]
  423ccc:	jmp    0xbbee:0xd0004122
  423cd3:	add    al,0x5e
  423cd5:	add    al,0xc1
  423cd7:	push   0x62
  423cd9:	mov    BYTE PTR gs:[esi+0x66],al
  423cdd:	scas   al,BYTE PTR es:[edi]
  423cde:	aas    
  423cdf:	or     al,0xc7
  423ce1:	stc    
  423ce2:	adc    BYTE PTR [ebp-0x36d5d868],cl
  423ce8:	jle    0x423d62
  423cea:	aas    
  423ceb:	add    al,0x4f
  423ced:	xor    eax,0xba590001
  423cf2:	idiv   BYTE PTR [ecx-0x22]
  423cf5:	xor    al,0x5f
  423cf7:	mov    eax,eax
  423cf9:	sub    dh,dh
  423cfb:	adc    eax,0x412a36
  423d00:	popf   
  423d01:	jns    0x423d10
  423d03:	mov    esi,DWORD PTR [edi]
  423d05:	mov    ecx,eax
  423d07:	push   edx
  423d08:	lods   al,BYTE PTR ds:[esi]
  423d09:	(bad)  
  423d0b:	getsec 
  423d0d:	retf   
  423d0e:	(bad)  
  423d0f:	icebp  
  423d10:	jnp    0x423d41
  423d12:	or     eax,0x4cc96301
  423d17:	call   0xfc372a2e
  423d1c:	lods   al,BYTE PTR ds:[esi]
  423d1d:	mov    BYTE PTR [esi+edi*4+0x0],dl
  423d21:	add    BYTE PTR [ebx],bh
  423d23:	retf   
  423d24:	mov    DWORD PTR [edx+0x3f],eax
  423d27:	mov    bh,ah
  423d29:	sti    
  423d2a:	or     eax,DWORD PTR ds:0xfdb6f785
  423d31:	dec    edi
  423d32:	mov    al,0xdf
  423d34:	(bad)  
  423d35:	push   cs
  423d36:	test   edx,0xb34772f5
  423d3c:	or     esi,ebx
  423d3e:	cdq    
  423d3f:	push   ecx
  423d40:	mov    ebp,0x3ed6b302
  423d45:	add    BYTE PTR [ebp+ecx*2+0x74],dh
  423d49:	or     BYTE PTR [edi],dh
  423d4b:	loopne 0x423d59
  423d4d:	data16 aaa 
  423d4f:	in     eax,0xfe
  423d51:	gs ss in eax,0xfe
  423d55:	cli    
  423d56:	inc    edx
  423d57:	pop    ss
  423d58:	adc    BYTE PTR [eax+0x37],al
  423d5b:	push   esp
  423d5c:	cmp    al,0x8
  423d5e:	mov    dl,0xa
  423d60:	imul   eax,DWORD PTR [ecx],0x74
  423d63:	fnstsw WORD PTR [esi-0x522e8bc0]
  423d69:	inc    ecx
  423d6a:	sub    ecx,DWORD PTR [esi-0xa]
  423d6d:	sub    al,0xc0
  423d6f:	int    0x31
  423d71:	shl    ah,0xc6
  423d74:	lods   al,BYTE PTR ds:[esi]
  423d75:	dec    ecx
  423d76:	dec    edi
  423d77:	dec    edx
  423d78:	mov    esi,0xc10c4cd4
  423d7d:	push   ebp
  423d7e:	lods   al,BYTE PTR ds:[esi]
  423d7f:	xor    al,0xd4
  423d81:	xchg   DWORD PTR [ebx],esp
  423d83:	adc    eax,0x5b32
  423d88:	mov    al,0xbc
  423d8a:	pop    ss
  423d8b:	les    esi,FWORD PTR [edi-0x57]
  423d8e:	push   ebp
  423d8f:	call   0xf3381ea3
  423d94:	in     al,dx
  423d95:	int3   
  423d96:	mov    al,0xd7
  423d98:	in     eax,dx
  423d99:	mov    bh,0x61
  423d9b:	dec    ecx
  423d9c:	jecxz  0x423d47
  423d9e:	and    eax,0xfdb787f4
  423da3:	jnp    0x423de6
  423da5:	je     0x423d8f
  423da7:	mov    bh,dh
  423da9:	inc    ecx
  423daa:	in     al,0x24
  423dac:	jp     0x423d6e
  423dae:	mov    ebx,DWORD PTR [ecx]
  423db0:	mov    bl,0x22
  423db2:	sub    BYTE PTR [esi+edi*4],al
  423db5:	jno    0x423e2f
  423db7:	pop    esi
  423db8:	inc    ebx
  423db9:	int3   
  423dba:	mov    ch,0x20
  423dbc:	aaa    
  423dbd:	xor    al,0x18
  423dbf:	xor    edx,0x3d1350cf
  423dc5:	mov    bh,0x5b
  423dc7:	mov    BYTE PTR [edi+0x40],dh
  423dca:	sbb    BYTE PTR [esi+0x2f],bl
  423dcd:	test   eax,0xa8e7f3a5
  423dd2:	lods   eax,DWORD PTR ds:[esi]
  423dd3:	out    0x5f,eax
  423dd5:	sub    edx,ebp
  423dd7:	repnz ins BYTE PTR es:[edi],dx
  423dd9:	mov    al,0x28
  423ddb:	js     0x423e1a
  423ddd:	dec    edx
  423dde:	in     al,0x80
  423de0:	repnz mov bh,0xb8
  423de3:	cmp    dl,0xcf
  423de6:	adc    bh,ch
  423de8:	cmp    dh,BYTE PTR [edi+0x8813]
  423dee:	ja     0x423e30
  423df0:	fadd   QWORD PTR [eax-0x6aef300e]
  423df6:	cmp    eax,0xf787fbb7
  423dfb:	inc    eax
  423dfc:	add    edi,edx
  423dfe:	and    BYTE PTR [eax],0x67
  423e01:	jmp    0x156f983
  423e06:	sub    eax,0xb530174
  423e0b:	test   al,0x44
  423e0d:	fldenv [edi+esi*1-0x3e]
  423e11:	fstp   QWORD PTR [ebp-0x45]
  423e14:	adc    al,0xd9
  423e16:	dec    esi
  423e17:	je     0x423e1a
  423e19:	push   0xfffffff0
  423e1b:	sbb    ecx,DWORD PTR [esp+ebp*1-0x23623431]
  423e22:	in     eax,0xba
  423e24:	pop    edx
  423e25:	inc    edi
  423e26:	xchg   edx,eax
  423e27:	jbe    0x423e7c
  423e29:	ss dec eax
  423e2b:	(bad)  
  423e2c:	jmp    0xfafc280e
  423e31:	fidivr WORD PTR [esi-0xd]
  423e34:	cwde   
  423e35:	inc    esi
  423e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e37:	xor    eax,DWORD PTR [ecx]
  423e39:	jmp    0x71352967
  423e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e3f:	jne    0x423dca
  423e41:	xlat   BYTE PTR ds:[ebx]
  423e42:	jl     0x423e5d
  423e44:	into   
  423e45:	test   DWORD PTR [bp+si],ebp
  423e48:	mov    bl,0x29
  423e4a:	mov    ebx,0xf863fac2
  423e4f:	prefetch BYTE PTR [edx+0x0]
  423e53:	add    BYTE PTR [edi+0x24],al
  423e56:	adc    ebp,DWORD PTR [ecx-0x14bc53cc]
  423e5c:	jmp    0xfe71:0xdcd9256f
  423e63:	pop    ebx
  423e64:	out    dx,al
  423e65:	das    
  423e66:	sti    
  423e67:	sub    edi,DWORD PTR [ecx+0x34f52537]
  423e6d:	lods   al,BYTE PTR ds:[esi]
  423e6e:	push   ebx
  423e6f:	call   0xf5a9683c
  423e74:	inc    ebp
  423e75:	aas    
  423e76:	and    eax,0xf6621600
  423e7b:	xlat   BYTE PTR ds:[ebx]
  423e7c:	popf   
  423e7d:	in     eax,dx
  423e7e:	or     eax,0x1da13eb
  423e83:	dec    DWORD PTR [ecx]
  423e85:	les    esp,FWORD PTR [ebx+0x14]
  423e88:	out    0x3c,al
  423e8a:	sub    eax,0x7a621e00
  423e8f:	mov    BYTE PTR [esi],0x5c
  423e92:	not    bh
  423e94:	(bad)  
  423e95:	in     al,dx
  423e96:	or     eax,0xdee185f
  423e9b:	add    BYTE PTR [ebp+0x6b],ah
  423e9e:	cmp    eax,0x75374053
  423ea3:	cmp    BYTE PTR [esi],ah
  423ea5:	das    
  423ea6:	out    dx,al
  423ea7:	xor    esi,ebp
  423ea9:	or     DWORD PTR [edi+0x18],edx
  423eac:	and    BYTE PTR [esp+ecx*4],cl
  423eaf:	add    al,0x49
  423eb1:	das    
  423eb2:	aas    
  423eb3:	and    BYTE PTR [edx],ah
  423eb5:	sbb    al,BYTE PTR [edx+0x44000008]
  423ebb:	ret    
  423ebc:	div    BYTE PTR [edx+esi*2+0x21]
  423ec0:	cli    
  423ec1:	into   
  423ec2:	or     eax,0x33e8f678
  423ec7:	jns    0x423ec0
  423ec9:	jmp    DWORD PTR [ebx]
  423ecb:	lock jne 0x423edb
  423ece:	fisttp QWORD PTR [eax]
  423ed0:	push   edi
  423ed1:	sbb    BYTE PTR [ebp+eiz*8+0x2a],bl
  423ed5:	ror    al,0x68
  423ed8:	mov    ebx,0x3f385e04
  423edd:	and    al,0xe5
  423edf:	jno    0x423efe
  423ee1:	lea    edx,[edx+0x69]
  423ee4:	push   es
  423ee5:	mov    bh,0x52
  423ee7:	or     DWORD PTR [esp+eax*1+0x380536df],ecx
  423eee:	pop    ebp
  423eef:	in     al,dx
  423ef0:	loop   0x423ed6
  423ef2:	aaa    
  423ef3:	js     0x423f72
  423ef5:	in     al,dx
  423ef6:	or     al,0xd0
  423ef8:	or     cl,dh
  423efa:	je     0x423ec7
  423efc:	push   ebp
  423efd:	push   edx
  423efe:	mov    esp,0x7711327f
  423f03:	retf   
  423f04:	pop    ecx
  423f05:	xor    ax,0xf17a
  423f09:	push   ebx
  423f0a:	push   0x728dc642
  423f0f:	mov    ebx,0xd38afb4e
  423f14:	icebp  
  423f15:	jne    0x423f3e
  423f17:	jno    0x423f09
  423f19:	sti    
  423f1a:	or     DWORD PTR [eax-0x42],ecx
  423f1d:	je     0x423f1f
  423f1f:	add    BYTE PTR ds:0x880c4bca,bl
  423f25:	jno    0x423f30
  423f27:	lea    esi,[edx-0x25]
  423f2a:	dec    esi
  423f2b:	dec    edi
  423f2c:	rcl    BYTE PTR [edi],1
  423f2e:	std    
  423f2f:	cli    
  423f30:	and    ch,BYTE PTR [edi]
  423f32:	push   cs
  423f33:	inc    eax
  423f34:	aaa    
  423f35:	dec    eax
  423f36:	mov    esi,0xff5b3374
  423f3b:	out    0x47,al
  423f3d:	and    esi,edi
  423f3f:	push   edx
  423f40:	add    BYTE PTR [esi],bl
  423f42:	pop    eax
  423f43:	sti    
  423f44:	sub    bl,bl
  423f46:	icebp  
  423f47:	jne    0x423f78
  423f49:	inc    esi
  423f4a:	fsubr  DWORD PTR [esi]
  423f4c:	ja     0x423f3b
  423f4e:	push   eax
  423f4f:	push   edi
  423f50:	jmp    0xea75:0xeafffa08
  423f57:	lods   al,BYTE PTR fs:[esi]
  423f59:	mov    edi,0xcb37002e
  423f5e:	jge    0x423fae
  423f60:	cmp    eax,DWORD PTR [edx+0x54]
  423f63:	adc    al,0xac
  423f65:	js     0x423f7d
  423f67:	mov    ecx,0xfffecb3f
  423f6c:	add    al,0x34
  423f6e:	and    esi,DWORD PTR [edi+esi*2]
  423f71:	xchg   esp,ebx
  423f73:	(bad)  
  423f75:	xor    esp,eax
  423f77:	and    esi,DWORD PTR [esi-0x1c]
  423f7a:	fld    QWORD PTR [edi+ebp*1]
  423f7d:	xchg   edi,eax
  423f7e:	clc    
  423f7f:	sub    DWORD PTR [eax+edx*1],0x3d3c
  423f86:	cdq    
  423f87:	mov    edi,0x46b013a6
  423f8c:	jne    0x423f58
  423f8e:	ins    BYTE PTR es:[edi],dx
  423f8f:	adc    ah,BYTE PTR [edi+0x67a0b059]
  423f95:	loopne 0x423fc2
  423f97:	pushf  
  423f98:	(bad)  
  423f99:	out    dx,eax
  423f9a:	cld    
  423f9b:	mov    bl,0x87
  423f9d:	and    al,0x1
  423f9f:	clc    
  423fa0:	out    0x88,eax
  423fa2:	imul   DWORD PTR [ecx]
  423fa4:	jecxz  0x423fd7
  423fa6:	neg    DWORD PTR [ebp+0x343704df]
  423fac:	mov    dl,0x49
  423fae:	aas    
  423faf:	xor    eax,0xac2a7b37
  423fb4:	clc    
  423fb5:	inc    ebx
  423fb6:	aaa    
  423fb7:	or     ebx,DWORD PTR ds:0x8b345101
  423fbd:	rcl    eax,cl
  423fbf:	push   eax
  423fc0:	xchg   esi,eax
  423fc1:	inc    ebx
  423fc2:	aaa    
  423fc3:	mov    ecx,0x1c58dba8
  423fc8:	call   0x5f763736
  423fcd:	in     al,dx
  423fce:	lahf   
  423fcf:	test   DWORD PTR [edx-0x11],esp
  423fd2:	mov    WORD PTR [edi-0x88edbe3],?
  423fd8:	out    0x53,eax
  423fda:	cmove  ecx,esi
  423fdd:	inc    ebx
  423fde:	aaa    
  423fdf:	pushf  
  423fe0:	sub    dh,ch
  423fe2:	ins    BYTE PTR es:[edi],dx
  423fe3:	mov    bl,0x6f
  423fe5:	add    DWORD PTR [ebx-0x7a],eax
  423fe8:	add    DWORD PTR [edx+0x4340000],ebp
  423fee:	jmp    0xfaf1adae
  423ff3:	ins    DWORD PTR es:[edi],dx
  423ff4:	jae    0x42401f
  423ff6:	add    bl,bl
  423ff8:	je     0x423f97
  423ffa:	mov    bh,0xe9
  423ffc:	xor    al,0x34
  423ffe:	push   ebx
  423fff:	pop    esp
  424000:	scas   al,BYTE PTR es:[edi]
  424001:	mov    al,ds:0x3433efb9
  424006:	add    DWORD PTR [ecx],edx
  424008:	adc    cl,BYTE PTR [ecx+eax*1+0x51769de9]
  42400f:	out    dx,al
  424010:	in     eax,0x62
  424012:	cli    
  424013:	mov    dl,BYTE PTR [eax-0x7e]
  424016:	ds jmp 0x6d4cb769
  42401c:	lahf   
  42401d:	xor    eax,DWORD PTR [ecx]
  42401f:	jmp    0xdbeba991
  424024:	je     0x42405a
  424026:	imul   ecx,DWORD PTR [ecx],0x1900f44d
  42402c:	enter  0x6985,0xf9
  424030:	pop    esi
  424031:	hlt    
  424032:	add    BYTE PTR [esi+0x2acf580f],ah
  424038:	cmp    edx,ebx
  42403a:	sub    DWORD PTR [ebx-0x4805cb8b],edi
  424040:	or     al,0xf8
  424042:	jbe    0x42406d
  424044:	xor    ebp,DWORD PTR [edi+0x7286c534]
  42404a:	add    DWORD PTR [edx+0x38],ecx
  42404d:	cmp    BYTE PTR [esi],0xe9
  424050:	add    BYTE PTR [eax],al
  424052:	mov    eax,ds:0x1ec96985
  424057:	hlt    
  424058:	add    BYTE PTR [esi+0x3f],bl
  42405b:	pop    eax
  42405c:	iret   
  42405d:	stos   BYTE PTR es:[edi],al
  42405e:	xor    al,0xd3
  424060:	xor    DWORD PTR [ebx],edi
  424062:	cmc    
  424063:	xor    edi,edx
  424065:	add    BYTE PTR [eax+0xf],cl
  424068:	jne    0x4240e4
  42406a:	mov    ?,WORD PTR [esi]
  42406c:	div    BYTE PTR ds:0x3a862a
  424072:	mov    ebp,0x5e43cb6a
  424077:	mov    eax,ds:0x1cce68cf
  42407c:	inc    ecx
  42407d:	add    BYTE PTR [ecx],ah
  42407f:	ins    BYTE PTR es:[edi],dx
  424080:	and    eax,0x9a35ddd2
  424085:	cmp    BYTE PTR [esi+esi*8+0x0],cl
  424089:	dec    DWORD PTR [eax-0x2a]
  42408c:	cmp    eax,0x3835cdd2
  424091:	cmp    eax,0x3a83f6
  424096:	imul   esi,DWORD PTR [eax-0x79cdc2c7],0x3a
  42409d:	add    BYTE PTR [edx+0x40],bl
  4240a0:	cmp    BYTE PTR ds:0x3a864e,bh
  4240a6:	sub    cl,BYTE PTR [eax+0x38]
  4240a9:	cmp    eax,0x3a8636
  4240ae:	sbb    dh,BYTE PTR [eax+0x3c0ac733]
  4240b4:	mov    cl,0x1
  4240b6:	add    BYTE PTR [eax],al
  4240b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240b9:	ss sub eax,eax
  4240bc:	add    bh,bh
  4240be:	push   ecx
  4240bf:	leave  
  4240c0:	mov    WORD PTR [ecx+eax*1],?
  4240c3:	push   ebx
  4240c4:	adc    eax,0x9fe37a80
  4240c9:	sub    dl,BYTE PTR [ecx]
  4240cb:	call   0x3903f6
  4240d0:	or     bh,BYTE PTR [eax+0x75]
  4240d3:	pop    es
  4240d4:	sbb    eax,0xddd202b1
  4240d9:	xor    eax,0xe0c95600
  4240de:	dec    ebp
  4240df:	shl    BYTE PTR [edi],cl
  4240e1:	fdivp  st(6),st
  4240e3:	mov    ecx,0x406cf7
  4240e8:	pop    edi
  4240e9:	mov    bl,0x5f
  4240eb:	add    BYTE PTR [edi],dh
  4240ed:	shl    BYTE PTR [ecx-0x1217aa0],cl
  4240f3:	pop    ecx
  4240f4:	mov    edx,0x504725b
  4240f9:	pop    ebx
  4240fa:	dec    eax
  4240fb:	mov    edi,0x671f6ba
  424100:	iret   
  424101:	ret    0x3fd2
  424104:	aaa    
  424105:	xor    esi,DWORD PTR [ebx-0x2e]
  424108:	aaa    
  424109:	fwait
  42410a:	(bad)  
  42410b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42410c:	ins    DWORD PTR es:[edi],dx
  42410d:	mov    dl,0xed
  42410f:	cmp    al,0x35
  424111:	sub    eax,0xcbde8e3
  424116:	in     al,dx
  424117:	sti    
  424118:	aad    0xa
  42411a:	fnstcw WORD PTR [edi]
  42411c:	add    BYTE PTR [eax],al
  42411e:	aaa    
  42411f:	pop    ss
  424120:	mov    esi,0x92732775
  424125:	inc    esi
  424126:	lock sub DWORD PTR [edx],0xaee96404
  42412d:	(bad)  
  42412e:	xchg   esi,eax
  42412f:	push   0xffffffd9
  424131:	aas    
  424132:	aaa    
  424133:	and    cl,cl
  424135:	jne    0x424172
  424137:	lahf   
  424138:	add    BYTE PTR [esi-0x78],ch
  42413b:	or     bh,bh
  42413d:	push   esi
  42413e:	hlt    
  42413f:	inc    edx
  424140:	or     eax,0x589b74ce
  424145:	sti    
  424146:	lahf   
  424147:	sahf   
  424148:	(bad)  
  424149:	sti    
  42414a:	test   al,0xfd
  42414c:	stc    
  42414d:	int    0xf4
  42414f:	call   0xfb55:0x8223c083
  424156:	inc    edi
  424157:	and    dl,BYTE PTR [ebx]
  424159:	dec    esp
  42415a:	daa    
  42415b:	xor    al,0xa8
  42415d:	add    esp,edi
  42415f:	aam    0xf8
  424161:	sar    DWORD PTR [eax],1
  424163:	xor    al,0x89
  424165:	inc    DWORD PTR [edx+0x27ece7f4]
  42416b:	icebp  
  42416c:	(bad)  
  42416e:	and    BYTE PTR [esi+ecx*8],dh
  424171:	add    edi,edi
  424173:	fwait
  424174:	imul   edi,eax,0x4d
  424177:	mov    al,0x78
  424179:	add    ch,ah
  42417b:	je     0x424153
  42417d:	ret    
  42417e:	add    BYTE PTR [esi],0x6f
  424181:	fild   WORD PTR [eax]
  424183:	add    BYTE PTR [esi+0x3701e09f],dh
  424189:	xor    al,0x12
  42418b:	inc    esi
  42418c:	aas    
  42418d:	xor    eax,0xb9b22a7d
  424192:	add    dh,ch
  424194:	sbb    al,0xb0
  424196:	cwde   
  424197:	pop    ecx
  424198:	aaa    
  424199:	sbb    ch,al
  42419b:	pop    ecx
  42419c:	and    DWORD PTR [edx],ebx
  42419e:	call   0xf7a66c8d
  4241a3:	inc    ebx
  4241a4:	aaa    
  4241a5:	mov    ecx,0x623b70a8
  4241aa:	test   al,0xdf
  4241ac:	jne    0x4241b4
  4241ae:	jne    0x424131
  4241b0:	fbstp  TBYTE PTR [ecx-0x11781445]
  4241b6:	inc    eax
  4241b7:	(bad)  
  4241b8:	adc    BYTE PTR [edx+edx*1],dh
  4241bb:	jmp    0x4241df
  4241bd:	sbb    bh,dh
  4241bf:	inc    ebx
  4241c0:	aaa    
  4241c1:	push   es
  4241c2:	fwait
  4241c3:	adc    DWORD PTR [edi+0x43],edx
  4241c6:	sub    BYTE PTR [ecx*1+0x3704e41c],al
  4241cd:	xor    al,0x75
  4241cf:	sbb    DWORD PTR [edi+0x7eb7bb1],0x9de9011a
  4241d9:	dec    ecx
  4241da:	cmp    eax,0x8c33f4d8
  4241df:	je     0x424174
  4241e1:	mov    cl,0xfa
  4241e3:	pop    esi
  4241e4:	loop   0x424181
  4241e6:	aas    
  4241e7:	sub    DWORD PTR [eax],eax
  4241e9:	add    BYTE PTR [ebp-0x55],bl
  4241ec:	test   BYTE PTR [ecx],ch
  4241ee:	nop
  4241ef:	sbb    bh,cl
  4241f1:	stos   BYTE PTR es:[edi],al
  4241f2:	xor    al,0x3b
  4241f4:	xchg   esp,eax
  4241f5:	sub    DWORD PTR [edx-0x1816fa12],ebx
  4241fb:	mov    dh,0xed
  4241fd:	push   0xe905cc6f
  424202:	xor    al,0xa2
  424204:	inc    esp
  424205:	icebp  
  424206:	xor    edi,edi
  424208:	push   edx
  424209:	mov    esi,0xe98db32d
  42420e:	xor    al,0x34
  424210:	add    esp,0xe93e88a4
  424216:	xor    edi,DWORD PTR [ebx]
  424218:	sbb    DWORD PTR [ebx+0x3b],0x34
  42421c:	add    DWORD PTR [edx-0xe8342e3],edi
  424222:	xchg   esi,eax
  424223:	mov    bh,0x82
  424225:	icebp  
  424226:	xchg   ecx,eax
  424227:	hlt    
  424228:	add    BYTE PTR [edi+eiz*4+0x1b],ah
  42422c:	test   dh,0xdd
  42422f:	ficomp DWORD PTR [edi+0x648c3434]
  424236:	int3   
  424237:	mov    al,0xfa
  424239:	mov    dh,0x64
  42423b:	pop    edi
  42423c:	rcr    DWORD PTR [ecx],0x63
  42423f:	stos   DWORD PTR es:[edi],eax
  424240:	mov    dl,0xf9
  424242:	pop    ecx
  424243:	hlt    
  424244:	add    BYTE PTR [ecx],bh
  424246:	int3   
  424247:	dec    eax
  424248:	xor    edx,edi
  42424a:	hlt    
  42424b:	xor    eax,DWORD PTR [ecx+ebp*4+0x57270000]
  424252:	mov    WORD PTR [eax],es
  424254:	adc    ebx,DWORD PTR [ebx+0x319fffc]
  42425a:	add    dh,0x1b
  42425d:	mov    esp,0x9a19fdf9
  424262:	jmp    0xf6dc01bb
  424267:	test   BYTE PTR [esi+0x1f],cl
  42426a:	or     bh,bh
  42426c:	push   ebx
  42426d:	adc    al,0xcb
  42426f:	inc    ebx
  424270:	pop    esi
  424271:	sub    eax,0x43f950ba
  424276:	popa   
  424277:	adc    cl,BYTE PTR [esi-0x6d3f7bce]
  42427d:	stos   DWORD PTR es:[edi],eax
  42427e:	test   DWORD PTR [ebp+0x56],0xcd0cbeb5
  424285:	cdq    
  424286:	push   ebp
  424287:	jb     0x424243
  424289:	lea    ebx,[esi]
  42428b:	mov    esp,ebx
  42428d:	test   eax,0x2f0ac063
  424292:	or     DWORD PTR [ebp*4+0x130900f1],0x1e43ccaa
  42429d:	(bad)
  4242a1:	stos   BYTE PTR es:[edi],al
  4242a2:	int3   
  4242a3:	inc    ebx
  4242a4:	push   cs
  4242a5:	xor    esi,DWORD PTR [ebp+0xa]
  4242a8:	(bad)  
  4242a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242aa:	add    dl,dl
  4242ac:	sbb    eax,0xde0fe138
  4242b1:	xor    DWORD PTR [esi+0x5e],edx
  4242b4:	add    BYTE PTR [eax],al
  4242b6:	pop    esi
  4242b7:	xor    DWORD PTR [edx-0x37],edx
  4242ba:	mov    WORD PTR [ecx+eax*1],?
  4242bd:	push   ebp
  4242be:	push   ebp
  4242bf:	mov    WORD PTR [eax+0x1378aec],es
  4242c5:	add    ch,bh
  4242c7:	cs sbb al,0xe4
  4242ca:	mov    esp,0x375600f1
  4242cf:	outs   dx,BYTE PTR ds:[esi]
  4242d0:	pop    ebp
  4242d1:	inc    esp
  4242d2:	xchg   DWORD PTR [edx+0x5],ebx
  4242d5:	sti    
  4242d6:	test   dl,ch
  4242d8:	mov    esi,0xb7ea5766
  4242dd:	push   eax
  4242de:	shl    DWORD PTR [edi],1
  4242e0:	mov    esp,0xa445373f
  4242e5:	cmp    BYTE PTR [edi-0x26],ah
  4242e8:	(bad)  
  4242e9:	popa   
  4242ea:	scas   al,BYTE PTR es:[edi]
  4242eb:	mov    al,ds:0x9af4d03e
  4242f0:	pusha  
  4242f1:	mov    DWORD PTR [edx],edi
  4242f3:	aas    
  4242f4:	aad    0x3f
  4242f6:	aaa    
  4242f7:	mov    edx,0x9af4d031
  4242fc:	jmp    0x3ecf7216
  424301:	add    BYTE PTR [edi+edx*2+0x6a4051f9],dh
  424308:	jb     0x4242bf
  42430a:	sbb    eax,0x1ffbe84f
  42430f:	mov    edi,0x1228fb4f
  424314:	inc    ebp
  424315:	jl     0x4242eb
  424317:	es mov esp,0x3700003f
  42431d:	and    bh,BYTE PTR [edi+0x55cf1f50]
  424323:	sti    
  424324:	or     BYTE PTR [eax],dl
  424326:	stos   BYTE PTR es:[edi],al
  424327:	push   ss
  424328:	add    edx,DWORD PTR [esi+0x6c6ee8e9]
  42432e:	call   0x3615002e
  424333:	sar    BYTE PTR [edx-0x1f021141],0x75
  42433a:	ds call 0xfc2a8dc7
  424340:	mov    esp,0x6e84edc
  424345:	dec    edx
  424346:	call   0xac769346
  42434b:	outs   dx,BYTE PTR ds:[esi]
  42434c:	ja     0x424382
  42434e:	outs   dx,DWORD PTR ds:[esi]
  42434f:	rol    BYTE PTR [edi],0xad
  424352:	std    
  424353:	inc    edi
  424354:	cmp    esp,esi
  424356:	out    0x84,eax
  424358:	repnz stos DWORD PTR es:[edi],eax
  42435a:	xor    DWORD PTR [eiz*4-0x6fa1edfb],0x6
  424362:	inc    BYTE PTR [edx]
  424364:	pop    ds
  424365:	xor    al,0xe8
  424367:	add    esi,DWORD PTR [edi+0x74532bb8]
  42436d:	neg    BYTE PTR [ebx-0x17]
  424370:	ss xor al,0xe8
  424373:	call   0x44392bba
  424378:	aaa    
  424379:	mov    ecx,0xac5c8440
  42437e:	mov    ah,0x20
  424380:	add    BYTE PTR [eax],al
  424382:	in     eax,0xbe
  424384:	lods   eax,DWORD PTR ds:[esi]
  424385:	out    0xe7,eax
  424387:	lods   al,BYTE PTR ds:[esi]
  424388:	mov    ch,0xe7
  42438a:	mov    dl,0xb6
  42438c:	sbb    dh,ah
  42438e:	cmp    al,0xac
  424390:	mov    eax,0xa4422c50
  424395:	adc    eax,0xc3653477
  42439a:	stos   DWORD PTR es:[edi],eax
  42439b:	xor    ch,BYTE PTR [edi+0x3e]
  42439e:	sbb    edi,DWORD PTR [esi-0x549b145b]
  4243a4:	fnstsw WORD PTR [ebx+0x7ce7f439]
  4243aa:	jp     0x424358
  4243ac:	addr16 in al,dx
  4243ae:	cld    
  4243af:	and    ah,ah
  4243b1:	fwait
  4243b2:	ss and dh,ah
  4243b5:	xor    dh,bh
  4243b7:	test   eax,eax
  4243b9:	xor    ebp,esi
  4243bb:	adc    dh,BYTE PTR [ecx+0x78]
  4243be:	jb     0x424364
  4243c0:	mov    ebp,0x1b9cce7
  4243c5:	ins    BYTE PTR es:[edi],dx
  4243c6:	ret    
  4243c7:	test   eax,0x61e3aefa
  4243cc:	leave  
  4243cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243ce:	sar    BYTE PTR [ecx-0x5061667c],1
  4243d4:	cli    
  4243d5:	cmp    DWORD PTR [ecx+0x38efa2c],0x332ac1f0
  4243df:	mov    ebp,0x6bd02934
  4243e4:	add    DWORD PTR [eax+0x0],esp
  4243e7:	add    BYTE PTR [esi+0x8],al
  4243ea:	ret    0x3b2a
  4243ed:	scas   eax,DWORD PTR es:[edi]
  4243ee:	into   
  4243ef:	push   ecx
  4243f0:	add    ah,BYTE PTR [ebp-0x3feca106]
  4243f6:	jb     0x4243a1
  4243f8:	xor    al,0xaf
  4243fa:	adc    al,0x51
  4243fc:	dec    ebx
  4243fd:	hlt    
  4243fe:	add    BYTE PTR [edx],al
  424400:	cdq    
  424401:	and    BYTE PTR [eax],cl
  424403:	jb     0x424468
  424405:	pushf  
  424406:	clc    
  424407:	pop    esi
  424408:	push   eax
  424409:	scas   eax,DWORD PTR es:[edi]
  42440a:	out    0xeb,al
  42440c:	push   es
  42440d:	je     0x424394
  42440f:	sub    edi,eax
  424411:	ss jle 0x424400
  424414:	mov    al,ds:0x33e93e84
  424419:	pushf  
  42441a:	mov    BYTE PTR [eax+ebx*1-0x51],dh
  42441e:	pop    edx
  42441f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424420:	in     al,0x34
  424422:	push   esi
  424423:	xor    ah,dh
  424425:	add    BYTE PTR [esi-0x6704bfb],al
  42442b:	push   0xe9021fdf
  424430:	xor    al,0xfb
  424432:	push   edx
  424433:	ss ins BYTE PTR es:[edi],dx
  424435:	sub    DWORD PTR [ecx],ecx
  424437:	sbb    bh,ah
  424439:	sub    ah,dl
  42443b:	call   0x1278da3
  424440:	mov    eax,0xd87500f5
  424445:	daa    
  424446:	sbb    al,0x8
  424448:	lods   al,BYTE PTR ds:[esi]
  424449:	cmc    
  42444a:	add    bh,bh
  42444c:	add    BYTE PTR [eax],al
  42444e:	or     ebp,DWORD PTR [eax-0x6e6aa11e]
  424454:	test   BYTE PTR [esi+ebx*8-0x21ce01dd],0x87
  42445c:	dec    ebp
  42445d:	add    DWORD PTR [esi-0x7197b5ca],ecx
  424463:	or     DWORD PTR ss:[eax],eax
  424466:	sub    eax,0x6c681493
  42446b:	test   BYTE PTR [eax],0xa3
  42446e:	push   edx
  42446f:	jmp    0x779744ae
  424474:	je     0x424489
  424476:	adc    DWORD PTR [ecx+esi*2+0x12],eax
  42447a:	sahf   
  42447b:	ss call 0x5388:0xf618bc
  424483:	jge    0x424442
  424485:	inc    ebx
  424486:	pop    esi
  424487:	(bad)  
  424488:	inc    ch
  42448a:	pop    ebx
  42448b:	jge    0x42444a
  42448d:	inc    ebx
  42448e:	dec    esi
  42448f:	das    
  424490:	arpl   WORD PTR [ecx],cx
  424492:	(bad)  
  424493:	out    dx,al
  424494:	mov    edi,0x88f91e43
  424499:	sbb    BYTE PTR [ebp-0x34b6f68b],bl
  42449f:	popf   
  4244a0:	xor    BYTE PTR ds:0x41432a,0xa6
  4244a7:	inc    ebp
  4244a8:	mov    esi,0xcf931e43
  4244ad:	push   0x3a85b2
  4244b2:	add    BYTE PTR [eax],al
  4244b4:	adc    DWORD PTR [ebx-0x74],edi
  4244b7:	inc    esp
  4244b8:	cmp    al,BYTE PTR [eax+0x51]
  4244bb:	push   0x9d37
  4244c0:	aaa    
  4244c1:	adc    al,0x2
  4244c3:	je     0x4244cc
  4244c5:	pop    edi
  4244c6:	add    eax,0xadb2afb
  4244cb:	inc    eax
  4244cc:	aaa    
  4244cd:	push   ss
  4244ce:	cmp    cl,BYTE PTR [eax]
  4244d0:	iret   
  4244d1:	xchg   esi,eax
  4244d2:	loop   0x4244cf
  4244d4:	mov    eax,0xb474c517
  4244d9:	xchg   esi,eax
  4244da:	jmp    0x50b09954
  4244df:	xor    ax,WORD PTR ss:[ebp-0x32]
  4244e4:	hlt    
  4244e5:	call   0x3e:0x8d6b15e5
  4244ec:	mov    ah,0x90
  4244ee:	(bad)  
  4244f0:	hlt    
  4244f1:	call   0x40:0x695b9fe5
  4244f8:	sub    al,0x5e
  4244fa:	hlt    
  4244fb:	or     DWORD PTR [ebx],0x2
  4244fe:	in     al,0xfb
  424500:	dec    edi
  424501:	(bad)  
  424503:	sti    
  424504:	pop    eax
  424505:	pop    ss
  424506:	lds    ecx,FWORD PTR [ebx]
  424508:	mov    ebx,0x48fbe5da
  42450d:	bound  ebp,QWORD PTR [edx+0x8]
  424510:	dec    edi
  424511:	push   ds
  424512:	jmp    0xc5597e12
  424517:	or     eax,DWORD PTR [eax]
  424519:	add    BYTE PTR [ebx+0x28fbe589],bh
  42451f:	inc    edx
  424520:	or     bl,BYTE PTR [eax-0x610124ba]
  424526:	mov    ds:0x4c004047,eax
  42452b:	ss push 0x51
  42452e:	mov    esp,0x74ce0287
  424533:	fwait
  424534:	(bad)  
  424535:	arpl   WORD PTR [ebx],dx
  424537:	xor    al,0xe3
  424539:	in     al,0x28
  42453b:	jne    0x424528
  42453d:	jg     0x424589
  42453f:	test   eax,0x2f18e4d3
  424544:	in     al,dx
  424545:	rcr    DWORD PTR [eax],1
  424547:	xor    al,0x87
  424549:	retf   
  42454a:	in     eax,0xf4
  42454c:	out    0x28,eax
  42454e:	rcr    BYTE PTR [esi],0x3
  424551:	ja     0x4244d6
  424553:	dec    edi
  424554:	mov    BYTE PTR [edx],al
  424556:	aaa    
  424557:	xor    al,0x90
  424559:	in     eax,dx
  42455a:	mov    al,0xa8
  42455c:	call   0xccf1ffb1
  424561:	fbstp  TBYTE PTR [esi]
  424563:	xor    al,0xe8
  424565:	push   ebx
  424566:	pushf  
  424567:	pop    esi
  424568:	(bad)  
  42456a:	push   eax
  42456b:	xor    al,0x41
  42456d:	jnp    0x4245d4
  42456f:	hlt    
  424570:	out    0x5b,eax
  424572:	(bad)  
  424573:	jg     0x42459c
  424575:	add    al,0xbf
  424577:	inc    ebp
  424578:	ja     0x42450a
  42457a:	mov    ebx,0xd1389b
  42457f:	add    BYTE PTR [edi],dh
  424581:	xor    al,0x53
  424583:	outs   dx,BYTE PTR ds:[esi]
  424584:	das    
  424585:	pushf  
  424586:	popa   
  424587:	out    0x5c,eax
  424589:	test   al,0x6c
  42458b:	ret    
  42458c:	cmp    al,0xb0
  42458e:	sub    esp,ebp
  424590:	dec    esp
  424591:	test   al,0xf7
  424593:	ret    
  424594:	inc    ebp
  424595:	out    dx,al
  424596:	fild   WORD PTR [ecx]
  424598:	scas   al,BYTE PTR es:[edi]
  424599:	inc    esi
  42459a:	in     al,0xbc
  42459c:	jo     0x4245d2
  42459e:	and    BYTE PTR [eax+0x3a77c17],0xab
  4245a5:	das    
  4245a6:	add    BYTE PTR ds:0xd803a81a,bl
  4245ac:	adc    eax,ebx
  4245ae:	jmp    0x17a0ddc
  4245b3:	pop    esp
  4245b4:	hlt    
  4245b5:	or     ebx,DWORD PTR [ebx-0x6e]
  4245b8:	jg     0x42454b
  4245ba:	pop    esp
  4245bb:	stos   DWORD PTR es:[edi],eax
  4245bc:	aas    
  4245bd:	xor    al,0x54
  4245bf:	jb     0x4245a8
  4245c1:	daa    
  4245c2:	in     eax,0xd1
  4245c4:	mov    edx,0x34e12198
  4245c9:	xor    al,0x53
  4245cb:	push   ds
  4245cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245cd:	call   0x347376f7
  4245d2:	add    ecx,eax
  4245d4:	push   ebp
  4245d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245d6:	cli    
  4245d7:	jmp    0x1b676683
  4245dc:	mov    ds:0x949e4bce,eax
  4245e1:	scas   eax,DWORD PTR es:[edi]
  4245e2:	and    DWORD PTR [edi+0x343a0000],0xb9310301
  4245ec:	(bad)  
  4245ed:	int    0xc0
  4245ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245f0:	cli    
  4245f1:	jmp    0xe1b6f139
  4245f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245f7:	clc    
  4245f8:	and    al,0xd5
  4245fa:	or     al,0x2c
  4245fc:	aad    0xaa
  4245fe:	xor    al,0x9c
  424600:	push   eax
  424601:	cmp    esi,DWORD PTR [ebx]
  424603:	xor    al,0x86
  424605:	das    
  424606:	sub    ebx,DWORD PTR [eax+eax*4-0x7354aa47]
  42460d:	lods   eax,DWORD PTR ds:[esi]
  42460e:	sbb    BYTE PTR [ecx+edx*2],bh
  424611:	shl    DWORD PTR [ebx],cl
  424613:	sbb    al,0x41
  424615:	sbb    edi,eax
  424617:	xor    edi,edx
  424619:	aam    0x34
  42461b:	aaa    
  42461c:	inc    ecx
  42461d:	jmp    0x17c6e9e3
  424622:	pop    DWORD PTR [edx-0x6]
  424625:	cld    
  424626:	shl    BYTE PTR ds:0xe357e941,1
  42462c:	add    DWORD PTR [eax],eax
  42462e:	push   ds
  42462f:	xor    esi,DWORD PTR [ecx+ecx*1-0x60]
  424633:	xchg   ecx,eax
  424634:	adc    al,0xc8
  424636:	fdivr  st(2),st
  424638:	add    BYTE PTR [ebx],dh
  42463a:	add    dl,dh
  42463c:	add    esi,0x5de4b778
  424642:	pushf  
  424643:	add    DWORD PTR cs:[ebp+0x55],edx
  424647:	xchg   edi,eax
  424648:	jp     0x42462e
  42464a:	add    BYTE PTR [eax],al
  42464c:	push   es
  42464d:	mov    al,0xed
  42464f:	in     al,0xe3
  424651:	xor    al,BYTE PTR [ecx]
  424653:	push   edi
  424654:	pop    ebx
  424655:	pop    es
  424656:	and    eax,0xfb94f608
  42465b:	dec    esi
  42465d:	xchg   ecx,eax
  42465e:	je     0x424670
  424660:	and    eax,0x528d0d04
  424665:	pop    esp
  424666:	dec    ebp
  424667:	push   eax
  424668:	leave  
  424669:	dec    ebx
  42466a:	adc    eax,0x82304dd2
  42466f:	inc    ebp
  424670:	xchg   BYTE PTR [edx],bl
  424672:	jns    0x424648
  424674:	pop    ebp
  424675:	xor    cl,ch
  424677:	fstp   QWORD PTR [edi+0x155f0132]
  42467d:	pushf  
  42467e:	pop    esp
  42467f:	ret    0x326a
  424682:	push   esp
  424683:	mov    edi,edx
  424685:	lods   eax,DWORD PTR ds:[esi]
  424686:	in     eax,dx
  424687:	push   0xc7491a0
  42468c:	sti    
  42468d:	sti    
  42468e:	cwde   
  42468f:	push   eax
  424690:	stc    
  424691:	or     ecx,DWORD PTR [ecx]
  424693:	call   0x38d851
  424698:	(bad)  
  42469a:	cwde   
  42469b:	push   eax
  42469c:	je     0x4246d0
  42469e:	imul   eax,DWORD PTR [eax+0x6c],0x23ff00ee
  4246a5:	xor    cl,BYTE PTR [edx]
  4246a7:	inc    eax
  4246a8:	aaa    
  4246a9:	fwait
  4246aa:	mov    esi,eax
  4246ac:	mov    dl,0x3d
  4246ae:	push   edx
  4246af:	pop    ss
  4246b0:	add    BYTE PTR [eax],al
  4246b2:	popf   
  4246b3:	cs cmp bl,bh
  4246b6:	and    dh,BYTE PTR [edi]
  4246b8:	hlt    
  4246b9:	aas    
  4246ba:	aaa    
  4246bb:	sbb    BYTE PTR [esi+0x7ed82274],bh
  4246c1:	add    BYTE PTR [edi],dh
  4246c3:	fwait
  4246c4:	push   edx
  4246c5:	or     al,BYTE PTR [ecx+0x45c7f286]
  4246cb:	pop    ebx
  4246cc:	add    eax,0xc655f72f
  4246d1:	mov    esi,0xc28d9b3f
  4246d6:	(bad)  
  4246d8:	xor    al,BYTE PTR [edi-0x78d1b32d]
  4246de:	sub    dh,BYTE PTR [edi-0x4c]
  4246e1:	aas    
  4246e2:	aaa    
  4246e3:	push   0x38
  4246e5:	call   0xfc230195
  4246ea:	fs loop 0x424673
  4246ed:	inc    ebp
  4246ee:	lahf   
  4246ef:	add    ch,0x75
  4246f2:	cmp    dl,ch
  4246f4:	mov    esi,0xfe9b72e9
  4246f9:	dec    DWORD PTR ds:0xaa4f3599
  4246ff:	push   eax
  424700:	or     eax,0x520e0850
  424705:	or     BYTE PTR [edi+0x6066e1e8],bh
  42470b:	(bad)  
  42470c:	icebp  
  42470d:	xor    eax,DWORD PTR [esi-0x25]
  424710:	inc    BYTE PTR [edi+esi*2+0xc202e8]
  424717:	add    dl,dh
  424719:	gs (bad) 
  42471b:	mov    al,ds:0x44492f
  424720:	mov    ah,0xfb
  424722:	clc    
  424723:	or     BYTE PTR [edx+0x34],bh
  424726:	hlt    
  424727:	cmp    DWORD PTR [eax+0x60f2845e],esi
  42472d:	xor    al,0xb7
  42472f:	fwait
  424730:	das    
  424731:	and    BYTE PTR [edi-0x1bd0a7fd],0xb5
  424738:	dec    eax
  424739:	xor    al,0x8e
  42473b:	pop    es
  42473c:	add    al,dh
  42473e:	out    dx,eax
  42473f:	mov    gs,WORD PTR [edx+0x38]
  424742:	cdq    
  424743:	xor    eax,DWORD PTR [ebp+eiz*4+0x1ef786ba]
  42474a:	out    0xe1,eax
  42474c:	jp     0x4246f3
  42474e:	aaa    
  42474f:	pushf  
  424750:	cmp    eax,DWORD PTR [edx+0x2f180427]
  424756:	in     al,0xb5
  424758:	or     BYTE PTR [esi+ecx*2],dh
  42475b:	or     al,al
  42475d:	out    dx,eax
  42475e:	scas   eax,DWORD PTR es:[edi]
  42475f:	mov    gs,WORD PTR [edx-0x54]
  424762:	sbb    DWORD PTR [esp+eax*1],esi
  424765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	mov    edx,0x1573b241
  42476b:	add    eax,0xe092ee9d
  424770:	bound  ecx,QWORD PTR [eax-0x13c8bb4e]
  424776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424777:	mov    ecx,0x567b3448
  42477c:	add    BYTE PTR [eax],al
  42477e:	jg     0x42477c
  424780:	jg     0x42472e
  424782:	test   BYTE PTR [ebx+ebp*2-0x18e18879],ah
  424789:	loope  0x42477d
  42478b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42478c:	pop    ebx
  42478d:	push   ss
  42478e:	push   edi
  42478f:	jge    0x424738
  424791:	add    ebx,DWORD PTR [edi+0x37443293]
  424797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424798:	mov    ebp,0x589be4db
  42479d:	fdivr  DWORD PTR [esp+eiz*4]
  4247a0:	add    DWORD PTR [ebp+0x74],ebp
  4247a3:	push   ds
  4247a4:	(bad)  
  4247a5:	cs jns 0x424747
  4247a8:	cmp    esp,eax
  4247aa:	pop    ss
  4247ab:	sub    DWORD PTR [ecx+edx*4],edx
  4247ae:	xor    al,0xb4
  4247b0:	add    ecx,ebp
  4247b2:	arpl   WORD PTR [edi-0x60b0ee8c],bx
  4247b8:	adc    al,0xa5
  4247ba:	add    eax,0x1f100164
  4247bf:	lahf   
  4247c0:	cli    
  4247c1:	imul   BYTE PTR [ecx+edi*8-0x1d026d08]
  4247c8:	or     ecx,ebp
  4247ca:	pop    esi
  4247cb:	xor    al,0xfa
  4247cd:	adc    al,0xf7
  4247cf:	xchg   BYTE PTR [esi],bh
  4247d1:	jmp    0xfc2f91cf
  4247d6:	je     0x42480c
  4247d8:	repnz mov eax,ds:0xa1f2e3cc
  4247de:	hlt    
  4247df:	or     DWORD PTR [ebp+eax*2-0x4ff10000],ecx
  4247e6:	cmp    BYTE PTR [ebp-0x16055dc1],0x62
  4247ed:	mov    cl,0x44
  4247ef:	add    eax,0x8144b16b
  4247f4:	arpl   WORD PTR [edi+0x44],si
  4247f7:	add    eax,0xe9013463
  4247fc:	imul   ecx,DWORD PTR [ecx-0x73],0x8433f4d8
  424803:	test   eax,0xf48c30de
  424808:	pop    esp
  424809:	fdivr  st(7),st
  42480b:	jmp    0x142b7c44
  424810:	stos   BYTE PTR es:[edi],al
  424811:	xor    al,0x1
  424813:	bound  edi,QWORD PTR [esi]
  424815:	cmp    al,0x13
  424817:	test   eax,0x51f334
  42481c:	mov    ch,0x34
  42481e:	add    BYTE PTR [eax],al
  424820:	dec    esi
  424821:	data16 sub bh,bh
  424824:	shr    DWORD PTR [ecx+esi*2+0x4e8361fe],cl
  42482b:	push   eax
  42482c:	push   ecx
  42482d:	jmp    0x7084:0xc412c47a
  424834:	inc    eax
  424835:	xor    esi,0x50
  424838:	xchg   edi,eax
  424839:	mov    ch,0x71
  42483b:	(bad)  
  42483c:	xor    DWORD PTR [ebx-0x5b15ea0a],eax
  424842:	cmp    al,BYTE PTR [eax]
  424844:	mov    edi,DWORD PTR [eax+0x74]
  424847:	or     DWORD PTR [eax],eax
  424849:	add    ch,cl
  42484b:	ret    
  42484c:	test   BYTE PTR [eax-0x30],dh
  42484f:	xor    esi,0x10ee5eb
  424855:	add    esi,ecx
  424857:	mov    WORD PTR ss:[ebp-0x97ea6],es
  42485e:	sub    DWORD PTR [eax-0xa],ebp
  424861:	(bad)  
  424862:	dec    ebp
  424863:	jnp    0x424872
  424865:	(bad)  
  424866:	sti    
  424867:	ret    
  424868:	mov    ecx,0x1369ef5
  42486d:	call   0x442f52
  424872:	adc    edi,esp
  424874:	inc    eax
  424875:	mov    eax,0x136b8
  42487a:	mov    dh,0x77
  42487c:	rol    DWORD PTR [eax],1
  42487e:	sahf   
  42487f:	lods   eax,DWORD PTR ds:[esi]
  424880:	mov    edi,0x8cec1350
  424885:	push   eax
  424886:	inc    ecx
  424887:	xor    eax,0xadde0001
  42488c:	mov    esi,0x1d19ee8
  424891:	add    bh,ah
  424893:	jmp    0x4248f1
  424895:	lea    esi,[edi]
  424897:	adc    BYTE PTR [esi],0xb8
  42489a:	dec    eax
  42489b:	mov    esi,?
  42489d:	call   FWORD PTR [edi+0x1a]
  4248a0:	scas   al,BYTE PTR es:[edi]
  4248a1:	add    BYTE PTR [edi],dh
  4248a3:	adc    BYTE PTR [ecx+0x70],cl
  4248a6:	out    0x76,eax
  4248a8:	add    eax,0x91ca292f
  4248ad:	inc    ebp
  4248ae:	add    BYTE PTR [eax],al
  4248b0:	mov    ebx,0xaa8933db
  4248b5:	scas   eax,DWORD PTR es:[edi]
  4248b6:	lea    edi,[ebp-0x59]
  4248b9:	adc    al,0x59
  4248bb:	push   0x1032a910
  4248c0:	ja     0x42484d
  4248c2:	mov    eax,eax
  4248c4:	mov    bh,BYTE PTR [esi-0x6f]
  4248c7:	inc    ebp
  4248c8:	(bad)  
  4248c9:	mov    ebx,0xe37a8d34
  4248ce:	lea    ebp,cs:[edx-0x5]
  4248d2:	in     al,dx
  4248d3:	fcom   DWORD PTR [eax+0x34e6fe8b]
  4248d9:	push   cs
  4248da:	int    0xfb
  4248dc:	mov    ah,0x83
  4248de:	fdiv   QWORD PTR [esp+ebp*1+0x36]
  4248e2:	ret    
  4248e3:	jb     0x42490d
  4248e5:	cmp    ebx,esp
  4248e7:	jne    0x424938
  4248e9:	sbb    BYTE PTR [edx+0x6c],bl
  4248ec:	sbb    eax,0xf7e8368d
  4248f1:	mov    ds,ebp
  4248f3:	sti    
  4248f4:	mov    al,ds:0xd6e86d48
  4248f9:	loope  0x4248d6
  4248fb:	sti    
  4248fc:	mov    esp,0xf2897158
  424901:	sub    cl,BYTE PTR [edx-0x230d088b]
  424907:	add    BYTE PTR [edi],dh
  424909:	mov    esp,esi
  42490b:	xor    al,0x87
  42490d:	mov    edi,esi
  42490f:	dec    esi
  424910:	mov    edx,0x546d34
  424915:	add    BYTE PTR [ebp-0x5f],bl
  424918:	pop    ebx
  424919:	xor    al,0xd1
  42491b:	xor    eax,0xfbc75f65
  424920:	aas    
  424921:	repnz xor al,0xa1
  424924:	inc    ebx
  424925:	push   0x2f
  424927:	scas   eax,DWORD PTR es:[edi]
  424928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424929:	aas    
  42492a:	out    0xd,eax
  42492c:	out    0x8e,al
  42492e:	mov    dl,0x10
  424930:	nop
  424931:	jmp    0x424969
  424933:	cmp    BYTE PTR [ebx],ah
  424935:	fstp   QWORD PTR [edi+eiz*1]
  424938:	mov    WORD PTR [esi+0x57138c72],cs
  42493e:	xchg   DWORD PTR [edi+ebx*2],eax
  424941:	(bad)  
  424942:	mov    al,0x26
  424944:	test   BYTE PTR [ebx],dh
  424946:	cdq    
  424947:	pusha  
  424948:	lahf   
  424949:	mov    ch,bh
  42494b:	mov    ebx,DWORD PTR [edx]
  42494d:	(bad)  
  42494e:	in     eax,dx
  42494f:	mov    al,ds:0x147c867
  424954:	jno    0x42499c
  424956:	pop    ebx
  424957:	std    
  424958:	data16 (bad) [esi]
  42495b:	pop    ds
  42495c:	ficomp WORD PTR [ebx+0x3e833ce]
  424962:	fild   WORD PTR [eax+0x23703b3]
  424968:	mov    BYTE PTR [bp+di+0x6b],0xa6
  42496d:	pop    es
  42496e:	aaa    
  42496f:	or     ch,BYTE PTR [edx-0x1d]
  424972:	xor    dh,BYTE PTR [eax+ebp*8]
  424975:	xor    eax,0x4433740f
  42497a:	add    BYTE PTR [eax],al
  42497c:	aaa    
  42497d:	or     DWORD PTR [ebx+0x284a40f6],edx
  424983:	add    al,0xb0
  424985:	mov    al,cs:0xe73440b5
  42498b:	push   cs
  42498c:	sbb    eax,DWORD PTR [esi+0x213b2a01]
  424992:	(bad)
  424995:	je     0x4249bd
  424997:	ss scas al,BYTE PTR es:[edi]
  424999:	inc    edi
  42499a:	add    BYTE PTR [ecx],bl
  42499c:	arpl   WORD PTR [eax+0x4b],sp
  42499f:	fsubr  QWORD PTR [ebx-0x3]
  4249a2:	mov    ebp,0x808fbfb4
  4249a7:	push   ebp
  4249a8:	sub    al,0xa2
  4249aa:	cli    
  4249ab:	jmp    0x64944fb7
  4249b0:	xchg   ecx,eax
  4249b1:	test   BYTE PTR [ecx+0x134342c],bh
  4249b7:	adc    DWORD PTR [ebx+0x6b],ebp
  4249ba:	add    ecx,ebp
  4249bc:	test   eax,0xf314f7e9
  4249c1:	fwait
  4249c2:	jmp    0xfaddc7d0
  4249c7:	push   es
  4249c8:	and    BYTE PTR fs:[esi+0x77c48c26],al
  4249cf:	test   eax,0xa48c0434
  4249d4:	or     BYTE PTR ds:0x9afa12e9,al
  4249da:	cli    
  4249db:	jb     0x4249d8
  4249dd:	pop    ds
  4249de:	(bad)  
  4249e1:	add    cl,al
  4249e3:	jb     0x424a36
  4249e5:	shr    DWORD PTR [eax+esi*8+0x6d28c6f9],0x36
  4249ed:	rcr    BYTE PTR [ebx+esi*1+0x2e],0xa9
  4249f2:	mov    ds:0x34e90196,al
  4249f7:	pop    ebp
  4249f8:	dec    esp
  4249f9:	icebp  
  4249fa:	sub    eax,0x34e9b1aa
  4249ff:	xor    al,0x86
  424a01:	xor    al,0x6f
  424a03:	lods   eax,DWORD PTR ds:[esi]
  424a04:	dec    esp
  424a05:	cdq    
  424a06:	mov    esi,0xa50008f9
  424a0b:	xor    eax,0x47aa4582
  424a10:	enter  0x9e83,0x34
  424a14:	mov    BYTE PTR [ebp-0x16],al
  424a17:	scas   al,BYTE PTR es:[edi]
  424a18:	add    DWORD PTR [ebx],edi
  424a1a:	(bad)  
  424a1c:	inc    ecx
  424a1d:	popw   ss
  424a1f:	xor    BYTE PTR [ebp+0x3b],dh
  424a22:	mov    gs,WORD PTR [esp+esi*2-0x9902220]
  424a29:	call   0x39c2c4
  424a2e:	shl    BYTE PTR [edi+0x6],cl
  424a31:	test   BYTE PTR [ebx+0x59000138],bl
  424a37:	add    eax,0x92c3ffe9
  424a3c:	jmp    0x1755264
  424a41:	mov    ebx,esp
  424a43:	outs   dx,BYTE PTR ds:[esi]
  424a44:	jmp    0x5f424a76
  424a49:	jp     0x424a41
  424a4b:	cmp    DWORD PTR [ebx-0x7d8bfe92],0x7a
  424a52:	je     0x424a48
  424a54:	jmp    0x9e5508fc
  424a59:	xor    cl,BYTE PTR [eax-0x7229bb]
  424a5f:	mov    BYTE PTR [ebx],cl
  424a61:	or     BYTE PTR [eax+0x44adf24d],0xf8
  424a68:	imul   esi,edi,0x38
  424a6b:	add    cl,BYTE PTR [ebx+0x4]
  424a6e:	std    
  424a6f:	call   0x3a2e70
  424a74:	adc    eax,0x92c6fd5c
  424a79:	cmp    eax,0xfc0d473c
  424a7e:	clc    
  424a7f:	add    BYTE PTR [eax],bh
  424a81:	mov    ds:0xc53775f7,al
  424a86:	mov    DWORD PTR [esp+ecx*2],eax
  424a89:	scas   al,BYTE PTR es:[edi]
  424a8a:	push   ecx
  424a8b:	hlt    
  424a8c:	out    0xb5,eax
  424a8e:	icebp  
  424a8f:	mov    ebp,db1
  424a92:	add    eax,0x3987b7f
  424a97:	jge    0x424b08
  424a99:	or     eax,0x9079f451
  424a9e:	sbb    eax,DWORD PTR [eax]
  424aa0:	dec    edi
  424aa1:	cwde   
  424aa2:	mov    cl,0xfa
  424aa4:	push   eax
  424aa5:	add    eax,0xd7bcf041
  424aaa:	into   
  424aab:	aaa    
  424aac:	add    BYTE PTR [eax],al
  424aae:	cli    
  424aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ab0:	pop    es
  424ab1:	mov    esp,ds
  424ab3:	pop    ebp
  424ab4:	xlat   BYTE PTR ds:[ebx]
  424ab5:	sti    
  424ab6:	ret    0x3d6
  424ab9:	lea    esp,[edx+0xb28e64f]
  424abf:	push   esi
  424ac0:	xlat   BYTE PTR ds:[ebx]
  424ac1:	test   bh,dh
  424ac3:	enter  0x8708,0x72
  424ac7:	inc    edi
  424ac8:	xor    ebp,eax
  424aca:	jmp    0xd76b:0xefbd867
  424ad1:	sti    
  424ad2:	clc    
  424ad3:	and    dl,BYTE PTR [ecx-0x4]
  424ad6:	pop    edi
  424ad7:	mov    edi,0x37404a
  424adc:	cli    
  424add:	cmp    DWORD PTR [edi+0x459fea96],eax
  424ae3:	dec    ebx
  424ae4:	add    eax,0x3766f987
  424ae9:	push   edi
  424aea:	dec    dl
  424aec:	sub    al,BYTE PTR [edi+0x10e90cd3]
  424af2:	xor    al,0x8b
  424af4:	dec    BYTE PTR [esi+0x1f]
  424af7:	imul   edi,edx,0xffffffff
  424afa:	test   al,0xf3
  424afc:	les    edx,FWORD PTR [ebx-0x9]
  424aff:	xor    ebp,eax
  424b01:	xchg   BYTE PTR [edx-0x73266558],dh
  424b07:	mov    WORD PTR [eax-0x4d],es
  424b0a:	lea    ebx,[ebp-0x5718f5a1]
  424b10:	sub    eax,0x8f00000c
  424b15:	adc    DWORD PTR [edx-0x158a9326],0x3
  424b1c:	imul   ebx,DWORD PTR [ebp+0x28777ee8],0xa8aa870c
  424b26:	pop    edx
  424b27:	(bad)  [ebx+eax*1-0x46]
  424b2b:	xor    edi,DWORD PTR [edx+0x3cd854bf]
  424b31:	popf   
  424b32:	push   eax
  424b33:	lods   al,BYTE PTR ds:[esi]
  424b34:	bound  ebx,QWORD PTR [esi+0x27f7803b]
  424b3a:	in     al,0xd8
  424b3c:	gs test eax,0x850f3427
  424b42:	cmp    al,0xda
  424b44:	sbb    al,0x89
  424b46:	out    0x14,al
  424b48:	idiv   eax
  424b4a:	and    dh,al
  424b4c:	xor    esi,DWORD PTR [esi*4+0x14b3138c]
  424b53:	or     BYTE PTR [esi],dh
  424b55:	xor    al,0xe8
  424b57:	xor    al,0x5f
  424b59:	xchg   esp,eax
  424b5a:	in     eax,dx
  424b5b:	add    esi,DWORD PTR [edi]
  424b5d:	or     al,0x28
  424b5f:	xor    DWORD PTR [edi+0x34],esi
  424b62:	jne    0x424be2
  424b64:	fistp  WORD PTR [ebp-0x15202725]
  424b6a:	mov    eax,0x1da8ccd9
  424b6f:	or     BYTE PTR [edi-0x57],ah
  424b72:	sub    eax,0x9222cf0c
  424b77:	fld    DWORD PTR [eax]
  424b79:	add    BYTE PTR [eax+ebp*4-0x7ad66eff],ch
  424b80:	jne    0x424b54
  424b82:	mov    ecx,0x7fa7f9b6
  424b87:	cwde   
  424b88:	push   ecx
  424b89:	sahf   
  424b8a:	add    DWORD PTR [esi+eax*4+0x2c],eax
  424b8e:	xchg   DWORD PTR [eax+ebx*8-0x7a67a14c],edx
  424b95:	test   eax,0xa92e36e8
  424b9a:	hlt    
  424b9b:	xchg   esp,eax
  424b9c:	(bad)  
  424b9d:	mov    ecx,0xabc80474
  424ba2:	fs pushf 
  424ba4:	push   ebp
  424ba5:	jb     0x424bf7
  424ba7:	mov    dl,0xed
  424ba9:	and    DWORD PTR [esp+esi*1],esi
  424bac:	add    DWORD PTR [edx-0xa49fefa],edi
  424bb2:	xor    eax,0xab9a0134
  424bb7:	fwait
  424bb8:	imul   edi,DWORD PTR [ecx],0x6400f495
  424bbe:	test   eax,0xff2efb68
  424bc3:	add    al,0xc2
  424bc5:	lods   al,BYTE PTR ds:[esi]
  424bc6:	cld    
  424bc7:	mov    al,ds:0x8c7aa492
  424bcc:	sbb    al,0x3d
  424bce:	out    dx,al
  424bcf:	lahf   
  424bd0:	cs pop ss
  424bd2:	sub    esi,DWORD PTR [edi+eax*4-0x4b]
  424bd6:	stc    
  424bd7:	mov    ds:0x68416d31,eax
  424bdc:	sti    
  424bdd:	test   BYTE PTR [eax],0x0
  424be0:	add    ch,dh
  424be2:	jge    0x424bd5
  424be4:	loope  0x424c06
  424be6:	call   FWORD PTR [ecx]
  424be8:	repz div BYTE PTR ds:0x2e8c65da
  424bef:	test   eax,0xc174a973
  424bf4:	rol    DWORD PTR [ecx-0x7c0fff06],cl
  424bfa:	jp     0x424c61
  424bfc:	jmp    0xf682:0xd2858c30
  424c03:	(bad)  
  424c04:	ds scas eax,DWORD PTR es:[edi]
  424c06:	mov    edi,0xf690ace8
  424c0b:	call   FWORD PTR [edx]
  424c0d:	jo     0x424c84
  424c0f:	inc    esp
  424c10:	adc    eax,0xaf22e9da
  424c15:	xor    esi,0xffffff8b
  424c18:	(bad)  
  424c19:	test   al,0x74
  424c1b:	clc    
  424c1c:	fld    TBYTE PTR [ecx+0x77]
  424c1f:	xor    al,0xa5
  424c21:	sub    DWORD PTR [edi+0x30],0xff4e8175
  424c28:	jnp    0x424c59
  424c2a:	mov    WORD PTR [ebp-0x1a],es
  424c2d:	xchg   DWORD PTR [ebx],edx
  424c2f:	add    cl,ah
  424c31:	add    BYTE PTR [ebp-0x45e9540],0x7c
  424c38:	inc    esi
  424c39:	scas   al,BYTE PTR es:[edi]
  424c3a:	mov    edi,0xe8fda357
  424c3f:	call   0x38dc6b
  424c44:	add    BYTE PTR [eax],al
  424c46:	call   0xe96b:0xa50c7570
  424c4d:	mov    bh,BYTE PTR [esi]
  424c4f:	xor    esi,0xffffff8b
  424c52:	stos   DWORD PTR es:[edi],eax
  424c53:	jle    0x424c37
  424c55:	or     ah,BYTE PTR [ebx+0x5]
  424c58:	jmp    0xf6d90045
  424c5d:	jmp    FWORD PTR [ebp+0x5b8d4a68]
  424c63:	ins    BYTE PTR es:[edi],dx
  424c64:	idiv   edi
  424c66:	ror    DWORD PTR [ecx+eax*1],1
  424c69:	push   eax
  424c6a:	shl    DWORD PTR [ebx+0x301e1612],1
  424c70:	jp     0x424c36
  424c72:	aaa    
  424c73:	xchg   ecx,eax
  424c74:	xor    eax,DWORD PTR [edi-0x36c9b507]
  424c7a:	cmc    
  424c7b:	mov    dh,bh
  424c7d:	push   esp
  424c7e:	mov    esp,0x93ec8568
  424c83:	xchg   esi,edi
  424c85:	dec    DWORD PTR [ecx]
  424c87:	inc    edx
  424c88:	addr16 and al,0x8f
  424c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c8c:	scas   eax,DWORD PTR es:[edi]
  424c8d:	cli    
  424c8e:	nop
  424c8f:	movsx  esi,BYTE PTR [esi+edi*1+0x16]
  424c94:	into   
  424c95:	call   0x4041ba
  424c9a:	mov    WORD PTR [esi-0x6f6b3ff1],cs
  424ca0:	mov    al,0x3f
  424ca2:	aaa    
  424ca3:	or     BYTE PTR [esi-0x19a44f5],bh
  424ca9:	inc    DWORD PTR [eax]
  424cab:	add    BYTE PTR [edi],dh
  424cad:	lods   al,BYTE PTR ds:[esi]
  424cae:	push   es
  424caf:	into   
  424cb0:	hlt    
  424cb1:	mov    WORD PTR [ebp-0x172c720],gs
  424cb7:	or     bh,BYTE PTR [ebx+0x37fffeb5]
  424cbd:	(bad)  
  424cbe:	inc    BYTE PTR [edi]
  424cc0:	aaa    
  424cc1:	mov    ecx,DWORD PTR [edx+0x27]
  424cc4:	lahf   
  424cc5:	sti    
  424cc6:	stc    
  424cc7:	jmp    DWORD PTR [eax]
  424cc9:	hlt    
  424cca:	(bad)  
  424ccb:	into   
  424ccc:	sbb    DWORD PTR [ebx-0x7f],edx
  424ccf:	ror    BYTE PTR [ebx-0x14ca2c64],0x59
  424cd6:	aas    
  424cd7:	add    BYTE PTR [ebx+edi*1+0x31783ee6],ch
  424cde:	rol    DWORD PTR [edi+0x2f0046e7],cl
  424ce4:	loope  0x424cd2
  424ce6:	stc    
  424ce7:	int    0x74
  424ce9:	mov    esp,esi
  424ceb:	sub    eax,0xd5e234ee
  424cf0:	lds    ebp,FWORD PTR [edi]
  424cf2:	lock mov cl,0x8
  424cf5:	xor    al,0x8
  424cf7:	push   eax
  424cf8:	cmp    BYTE PTR [edi-0x663d0773],ah
  424cfe:	ret    
  424cff:	in     al,dx
  424d00:	mov    edx,0xa4d5bb98
  424d05:	das    
  424d06:	loopne 0x424cb9
  424d08:	pusha  
  424d09:	xor    al,0xe8
  424d0b:	add    dh,BYTE PTR [edi]
  424d0d:	xor    al,0x1c
  424d0f:	out    dx,al
  424d10:	add    BYTE PTR [eax],al
  424d12:	mov    ecx,0x48b1e457
  424d17:	xor    al,0xfe
  424d19:	add    ebx,DWORD PTR [ecx]
  424d1b:	xor    al,0x0
  424d1d:	pop    edi
  424d1e:	fs repz out 0x69,eax
  424d22:	aaa    
  424d23:	mov    WORD PTR [ecx],fs
  424d25:	lods   al,BYTE PTR ds:[esi]
  424d26:	aaa    
  424d27:	xor    al,0x7a
  424d29:	(bad)  
  424d2a:	cmp    BYTE PTR [esi+0x1ff70427],al
  424d30:	in     eax,dx
  424d31:	jmp    0x424d3c
  424d33:	mov    ecx,0x2f45d55b
  424d38:	loopne 0x424ceb
  424d3a:	add    BYTE PTR [eax+ebp*2],dh
  424d3d:	push   eax
  424d3e:	xor    cl,BYTE PTR [eax+ebx*4+0x68992cb3]
  424d45:	push   edi
  424d46:	aas    
  424d47:	xor    al,0xbc
  424d49:	and    bh,BYTE PTR [eax+0x58b1e45e]
  424d4f:	xor    al,0x10
  424d51:	jmp    0x8633:0xa2e833df
  424d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d59:	add    edi,DWORD PTR [eax-0x7c3b9a5d]
  424d5f:	sub    eax,0x33945410
  424d64:	call   0x1452c96
  424d69:	sbb    ecx,DWORD PTR [ecx]
  424d6b:	popf   
  424d6c:	pop    edx
  424d6d:	(bad)  
  424d6e:	in     eax,dx
  424d6f:	fld    DWORD PTR ds:0xedb121e9
  424d75:	cmp    BYTE PTR [eax],al
  424d77:	add    BYTE PTR [ecx+ebp*8],al
  424d7a:	push   edx
  424d7b:	add    DWORD PTR fs:[eax-0x54fb4dd2],ebx
  424d82:	pop    esp
  424d83:	lds    ebx,FWORD PTR [ecx+edi*4-0x507c4070]
  424d8a:	sar    DWORD PTR ds:0x5ac18c5a,0x82
  424d91:	pushf  
  424d92:	jle    0x424d45
  424d94:	push   esp
  424d95:	add    al,0xe9
  424d97:	xchg   ecx,eax
  424d98:	pop    es
  424d99:	sahf   
  424d9a:	cli    
  424d9b:	xchg   esi,eax
  424d9c:	icebp  
  424d9d:	xchg   edi,eax
  424d9e:	jmp    0x17619a3
  424da3:	push   0x39
  424da5:	sub    al,0xcf
  424da7:	sub    dh,BYTE PTR [ebx]
  424da9:	inc    esp
  424daa:	imul   ebp,ecx,0x3813434
  424db0:	stos   DWORD PTR es:[di],eax
  424db2:	pop    esp
  424db3:	imul   edi,DWORD PTR gs:[esi],0xffffff8d
  424db7:	cmc    
  424db8:	hlt    
  424db9:	xor    ebp,DWORD PTR [esi-0x2e14618]
  424dbf:	inc    ecx
  424dc0:	or     eax,ebx
  424dc2:	sti    
  424dc3:	inc    esi
  424dc4:	push   0xffffffae
  424dc6:	mov    esi,0x54d7fda2
  424dcb:	bound  ebx,QWORD PTR [eax]
  424dcd:	mov    dh,0xed
  424dcf:	fnsave [esi]
  424dd1:	xor    al,0x1
  424dd3:	je     0x424e26
  424dd5:	sub    al,0x51
  424dd7:	push   ds
  424dd8:	jns    0x424e06
  424dda:	ret    
  424ddb:	lods   al,BYTE PTR ds:[esi]
  424ddc:	add    BYTE PTR [eax],al
  424dde:	jmp    0x424e14
  424de0:	cli    
  424de1:	hlt    
  424de2:	inc    esp
  424de3:	inc    esp
  424de4:	inc    ecx
  424de5:	add    dh,bl
  424de7:	push   ss
  424de8:	shl    DWORD PTR [esp+eax*8+0x64],0x4e
  424ded:	jmp    DWORD PTR [ebx+0x2b]
  424df0:	mov    dl,0x4
  424df2:	iret   
  424df3:	xor    eax,DWORD PTR [ecx]
  424df5:	push   0x40e6b6
  424dfa:	pop    ebx
  424dfb:	vpaddw ymm5,ymm1,ymm1
  424dff:	sub    ecx,0x43
  424e02:	stos   BYTE PTR es:[edi],al
  424e03:	xor    dh,0x59
  424e06:	push   edi
  424e07:	lods   eax,DWORD PTR ds:[esi]
  424e08:	sar    DWORD PTR [esi-0x57],0x5e
  424e0c:	imul   edx,DWORD PTR [eax],0x8b00f065
  424e12:	shl    DWORD PTR [eax-0x47],1
  424e15:	add    bl,BYTE PTR [esi+0x70e88133]
  424e1b:	mov    eax,0x70130001
  424e20:	jne    0x424e4a
  424e22:	or     eax,0x7d74f668
  424e27:	push   ss
  424e28:	mov    esi,0x6e9ce950
  424e2d:	adc    ecx,DWORD PTR [esi]
  424e2f:	xor    BYTE PTR [edx-0x1],cl
  424e32:	arpl   WORD PTR [edi-0x7d71387d],dx
  424e38:	adc    al,0x58
  424e3a:	dec    esp
  424e3b:	repz add BYTE PTR [eax-0x25],cl
  424e3f:	push   esi
  424e40:	idiv   BYTE PTR [ebx]
  424e42:	add    BYTE PTR [eax],al
  424e44:	push   ss
  424e45:	xchg   BYTE PTR [edx+0x44185efe],bh
  424e4b:	jmp    FWORD PTR [ecx-0x3]
  424e4e:	or     bh,bh
  424e50:	add    edx,DWORD PTR [edi]
  424e52:	or     eax,DWORD PTR [eax+0xe]
  424e55:	bound  edx,QWORD PTR [edx-0x76]
  424e58:	jecxz  0x424ddb
  424e5a:	enter  0x6c2,0x33
  424e5e:	push   esp
  424e5f:	mov    esi,DWORD PTR [edi]
  424e61:	xor    DWORD PTR [edx+0x3b2ffe4],eax
  424e67:	call   0xfc11e5a0
  424e6c:	mov    bl,0x4c
  424e6e:	pop    ecx
  424e6f:	adc    BYTE PTR [ebp-0x73],cl
  424e72:	(bad)  
  424e73:	adc    al,0xd9
  424e75:	test   edi,ecx
  424e77:	call   0x477ba8
  424e7c:	xchg   DWORD PTR [ebx-0x32f90125],ecx
  424e82:	jnp    0x424e69
  424e84:	pop    edx
  424e85:	retf   0xd4d6
  424e88:	mov    al,0x6d
  424e8a:	iret   
  424e8b:	test   BYTE PTR [edi+0x60],dh
  424e8e:	daa    
  424e8f:	data16 aaa 
  424e91:	fdivp  st(1),st
  424e93:	test   DWORD PTR [edi+0x4d],0xf302b905
  424e9a:	add    al,0x0
  424e9c:	adc    DWORD PTR [esi+esi*8+0x36122b74],edx
  424ea3:	cmp    al,0xb6
  424ea5:	push   0x5005
  424eaa:	cli    
  424eab:	mov    esi,?
  424ead:	je     0x424eee
  424eaf:	and    bh,BYTE PTR [edx]
  424eb1:	add    DWORD PTR [edi],ecx
  424eb3:	mov    dh,BYTE PTR [esi-0x4126a905]
  424eb9:	mov    edi,0xfbcfaa5f
  424ebe:	dec    eax
  424ebf:	cmp    ebp,eax
  424ec1:	mov    esi,0x87398d3b
  424ec6:	dec    ebx
  424ec7:	or     edx,ebx
  424ec9:	push   0xd714b584
  424ece:	cmp    BYTE PTR ds:0x103566d3,bl
  424ed4:	dec    ecx
  424ed5:	cwde   
  424ed6:	xchg   eax,edi
  424ed8:	adc    DWORD PTR [ebp+0x439f344b],esi
  424ede:	aaa    
  424edf:	xchg   ebp,eax
  424ee0:	rcr    bl,cl
  424ee2:	mov    ds:0xaad2139d,al
  424ee7:	out    dx,eax
  424ee8:	outs   dx,DWORD PTR ds:[esi]
  424ee9:	xor    ebx,edi
  424eeb:	pop    esi
  424eec:	push   eax
  424eed:	add    esi,DWORD PTR [edi]
  424eef:	mov    al,0x28
  424ef1:	pop    eax
  424ef2:	sbb    cl,BYTE PTR [edx]
  424ef4:	jmp    0x98fec179
  424ef9:	rol    BYTE PTR ds:0xccd9678c,cl
  424eff:	xchg   ebp,eax
  424f00:	ins    DWORD PTR es:[edi],dx
  424f01:	inc    edi
  424f02:	lahf   
  424f03:	add    al,0xc0
  424f05:	lock nop
  424f07:	xor    al,0xe8
  424f09:	xchg   DWORD PTR [edi+0x1f],esi
  424f0c:	out    dx,eax
  424f0d:	rol    DWORD PTR [eax],1
  424f0f:	add    al,ch
  424f11:	mov    ah,0xbf
  424f13:	pop    es
  424f14:	adc    ecx,ebx
  424f16:	adc    ch,BYTE PTR ds:0x378716e
  424f1c:	cwde   
  424f1d:	pushf  
  424f1e:	cmp    eax,0x84b19b7d
  424f23:	int3   
  424f24:	mov    dh,0x88
  424f26:	mov    ah,0xfe
  424f28:	js     0x424ebf
  424f2a:	aaa    
  424f2b:	cmp    al,BYTE PTR [ecx+eiz*2]
  424f2e:	cmp    DWORD PTR [ecx],0x6c
  424f31:	pop    edi
  424f32:	add    al,0xb6
  424f34:	and    BYTE PTR [eiz*2-0x5db3eca8],dh
  424f3b:	dec    eax
  424f3c:	sbb    edi,DWORD PTR [edi]
  424f3e:	call   0x5b98681e
  424f43:	sar    DWORD PTR [ebx-0x4fde238c],1
  424f49:	lock add ebp,DWORD PTR [eax]
  424f4c:	sub    al,0x20
  424f4e:	or     al,0x24
  424f50:	mov    edx,0xaff8041f
  424f55:	out    dx,eax
  424f56:	add    BYTE PTR ds:0x32ab8d1f,cl
  424f5c:	out    0x98,al
  424f5e:	xchg   BYTE PTR [ecx-0x74],al
  424f61:	clc    
  424f62:	and    al,0x1
  424f64:	xor    bh,BYTE PTR [ecx+0x74]
  424f67:	in     eax,dx
  424f68:	jge    0x424f82
  424f6a:	and    eax,0x24f071f9
  424f6f:	leave  
  424f70:	or     al,0x72
  424f72:	cmp    edi,esi
  424f74:	add    BYTE PTR [eax],al
  424f76:	pop    es
  424f77:	lea    eax,ds:0x19502762
  424f7d:	push   0xbf115067
  424f82:	xor    eax,0xb9ee0134
  424f87:	cs add cl,ch
  424f8a:	xor    al,0xe5
  424f8c:	call   0x175c8a3
  424f91:	ins    DWORD PTR es:[edi],dx
  424f92:	je     0x424fbc
  424f94:	test   DWORD PTR [ebp+0x3a],eax
  424f97:	xor    al,0x1
  424f99:	inc    ebx
  424f9a:	xor    al,0xa7
  424f9c:	inc    ebp
  424f9d:	add    eax,0xd969042f
  424fa2:	test   DWORD PTR [ecx+edi*1-0x55e396f],esp
  424fa9:	xchg   esi,eax
  424faa:	stc    
  424fab:	out    dx,eax
  424fac:	and    al,0xd9
  424fae:	and    al,0xe
  424fb0:	add    BYTE PTR [ecx],dl
  424fb2:	repz gs ds jmp 0xda438e41
  424fba:	hlt    
  424fbb:	xor    ecx,DWORD PTR [eax+0x36441f25]
  424fc1:	cs aaa 
  424fc3:	mov    al,0x34
  424fc5:	jmp    0x2598:0xfcfa3434
  424fcc:	inc    ecx
  424fcd:	jmp    0x441713
  424fd2:	push   ds
  424fd3:	cmp    BYTE PTR [esi+ecx*1+0x61],dh
  424fd7:	jmp    0x424ffd
  424fd9:	adc    BYTE PTR [eax],al
  424fdb:	add    BYTE PTR [ecx-0x76],ah
  424fde:	ret    0xde12
  424fe1:	aaa    
  424fe2:	mov    BYTE PTR [edx+edi*8-0x79],bh
  424fe6:	cmp    DWORD PTR [edx+edi*8-0x79],edi
  424fea:	pop    es
  424feb:	test   dh,bh
  424fed:	cmp    BYTE PTR [ecx],al
  424fef:	add    BYTE PTR [esi],dh
  424ff1:	adc    eax,0xaf31fe90
  424ff6:	and    DWORD PTR [ecx+ebx*8-0x48],esi
  424ffa:	or     al,0x8
  424ffc:	cmp    al,0xf8
  424ffe:	add    BYTE PTR [eax],dl
  425000:	jae    0x424fad
  425002:	and    eax,0x137de9c
  425007:	call   0x395679
  42500c:	dec    edx
  42500d:	js     0x425083
  42500f:	sbb    dl,BYTE PTR [ebx]
  425011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425012:	and    eax,0x1379cd0
  425017:	call   0x38d129
  42501c:	adc    edi,DWORD PTR [ebp+eiz*1+0x1379a8c]
  425023:	call   0x3956d0
  425028:	pop    ebp
  425029:	sub    cl,0x8a
  42502c:	clc    
  42502d:	aaa    
  42502e:	add    esi,esi
  425030:	pop    ebx
  425031:	(bad)  
  425032:	int3   
  425033:	inc    ebx
  425034:	pop    esi
  425035:	xchg   DWORD PTR [esi+0xd],ebp
  425038:	inc    esi
  425039:	cmp    BYTE PTR [ecx],al
  42503b:	add    dh,cl
  42503d:	in     eax,dx
  42503e:	adc    al,0xff
  425040:	add    BYTE PTR [eax],al
  425042:	imul   edx,DWORD PTR [ebx],0x15
  425045:	inc    eax
  425046:	pop    esi
  425047:	in     eax,dx
  425048:	dec    DWORD PTR [edx+ebx*4+0x3750355b]
  42504f:	jne    0x42505c
  425051:	dec    edi
  425052:	je     0x42508b
  425054:	fnsave ds:0x8dc9fa21
  42505a:	jnp    0x425095
  42505c:	adc    eax,0x778050
  425061:	sti    
  425062:	sub    ch,cl
  425064:	repz aas 
  425066:	aaa    
  425067:	push   es
  425068:	aad    0x37
  42506a:	or     BYTE PTR [ecx-0x7007ae04],ch
  425070:	(bad)  
  425071:	push   cs
  425072:	ja     0x425011
  425074:	xor    al,0xfb
  425076:	inc    edx
  425077:	inc    ebp
  425078:	out    dx,eax
  425079:	aas    
  42507a:	aaa    
  42507b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42507c:	add    eax,0xcb8940e8
  425081:	sti    
  425082:	ror    BYTE PTR [eax],1
  425084:	and    dl,BYTE PTR [eax]
  425086:	icebp  
  425087:	pusha  
  425088:	sub    DWORD PTR [ecx],edx
  42508a:	ss jb  0x425086
  42508d:	(bad)  
  42508e:	and    eax,0x22e9055d
  425093:	lahf   
  425094:	(bad)  
  425095:	push   DWORD PTR [eax+edi*8-0x5db8efd8]
  42509c:	mov    DWORD PTR [esi+0x35],ebx
  42509f:	popf   
  4250a0:	(bad)  
  4250a1:	gs xor eax,0x3445f5
  4250a7:	add    BYTE PTR [esi-0x76e329df],bh
  4250ad:	mov    cl,0xcb
  4250af:	mov    ebx,esi
  4250b1:	sub    dl,0x36
  4250b4:	js     0x425127
  4250b6:	cmp    BYTE PTR [ecx],0x35
  4250b9:	popf   
  4250ba:	dec    BYTE PTR [ebx+edi*4+0x58feae78]
  4250c1:	pushf  
  4250c2:	cs ret 0x78fb
  4250c6:	lock call DWORD PTR [eax+0x33]
  4250ca:	test   DWORD PTR [eax+0x186f923c],eax
  4250d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250d1:	and    al,0xa8
  4250d3:	add    edi,DWORD PTR [eax+0x68f4304f]
  4250d9:	xor    al,0x6c
  4250db:	ret    
  4250dc:	stos   DWORD PTR es:[edi],eax
  4250dd:	pop    ecx
  4250de:	and    al,BYTE PTR [edi+0x53]
  4250e1:	inc    edx
  4250e2:	jmp    0xa7a8948b
  4250e7:	add    edx,DWORD PTR [ecx-0x3ecdcd6]
  4250ed:	daa    
  4250ee:	mov    al,0xf3
  4250f0:	cmp    BYTE PTR [edi+eiz*2],dh
  4250f3:	retf   
  4250f4:	ss pop es
  4250f6:	mov    al,0xdb
  4250f8:	pop    ebp
  4250f9:	jbe    0x4250e3
  4250fb:	add    ebp,DWORD PTR [edi-0x31ff3c08]
  425101:	cdq    
  425102:	jmp    0xe960880a
  425107:	xor    BYTE PTR [ebx+0x58],0x1c
  42510b:	xor    al,0x0
  42510d:	add    BYTE PTR [edi+0x34],cl
  425110:	push   esp
  425111:	push   ss
  425112:	push   ds
  425113:	pushf  
  425114:	dec    edi
  425115:	xlat   BYTE PTR ds:[ebx]
  425116:	lods   al,BYTE PTR ds:[esi]
  425117:	xchg   ecx,eax
  425118:	pop    ebp
  425119:	dec    eax
  42511a:	push   ebx
  42511b:	inc    esp
  42511c:	sbb    ah,bl
  42511e:	xor    dl,bl
  425120:	call   0x3cb70428
  425125:	lea    ebx,[ecx]
  425127:	xor    al,0x3e
  425129:	add    edi,DWORD PTR [edx-0xf0b3408]
  42512f:	jmp    0xf8b81e41
  425134:	retf   
  425135:	and    BYTE PTR [edi],dh
  425137:	xchg   ecx,eax
  425138:	mov    bl,0x87
  42513a:	ja     0x425144
  42513c:	jmp    0x4250c1
  42513e:	jecxz  0x425197
  425140:	jmp    0x42511c
  425142:	jecxz  0x425116
  425144:	add    DWORD PTR [ecx],eax
  425146:	outs   dx,DWORD PTR ds:[esi]
  425147:	xor    eax,DWORD PTR [ecx]
  425149:	jmp    0xfc2378c9
  42514e:	hlt    
  42514f:	xor    esp,esi
  425151:	xor    al,0xb6
  425153:	sbb    BYTE PTR ds:0x7db434f9,ah
  425159:	add    eax,0x743429
  42515e:	repnz and BYTE PTR [ecx],cl
  425161:	xchg   BYTE PTR ds:[eax],bh
  425164:	xchg   ah,dl
  425166:	and    BYTE PTR [edi+0x3e],bh
  425169:	jmp    0xa8f25ada
  42516e:	xor    al,0x9c
  425170:	push   ds
  425171:	cmp    BYTE PTR [eax],al
  425173:	add    cl,ch
  425175:	mov    edx,?
  425177:	pushf  
  425178:	in     al,dx
  425179:	mov    edi,0x33a8c585
  42517e:	add    ecx,ebp
  425180:	mov    dl,0x1b
  425182:	iret   
  425183:	stos   BYTE PTR es:[edi],al
  425184:	xor    al,0xe4
  425186:	test   DWORD PTR [edi],ebx
  425188:	push   eax
  425189:	shl    BYTE PTR ds:0x1343511,0xd1
  425190:	xchg   edx,eax
  425191:	mov    esi,0xcadddefa
  425196:	add    ecx,ebp
  425198:	xor    al,0x1a
  42519a:	add    DWORD PTR [ebx+0x34],eax
  42519d:	mov    edi,0xa90d45
  4251a2:	push   ebx
  4251a3:	push   ebx
  4251a4:	push   0x75
  4251a6:	inc    ebp
  4251a7:	or     eax,0x96fa3455
  4251ac:	mov    cl,0x73
  4251ae:	jne    0x4251c4
  4251b0:	mov    ebx,0x5def250f
  4251b5:	push   es
  4251b6:	arpl   WORD PTR [eax+edi*8+0x57],sp
  4251ba:	adc    DWORD PTR [ecx],edi
  4251bc:	or     edx,DWORD PTR [esi+ebx*2]
  4251bf:	add    bh,bl
  4251c1:	cld    
  4251c2:	push   0xf3c088
  4251c7:	push   DWORD PTR [eax+0x4301f9b3]
  4251cd:	inc    esp
  4251ce:	jp     0x42524c
  4251d0:	xor    cl,BYTE PTR [eax+0x7f8773fa]
  4251d6:	push   0x8
  4251d8:	add    BYTE PTR [eax],al
  4251da:	mov    esp,esp
  4251dc:	or     al,0x8b
  4251de:	sbb    esp,DWORD PTR [eax-0x13f1bc34]
  4251e4:	imul   esp,esp,0xafe933cc
  4251ea:	cs xor esi,0x838bc3ff
  4251f1:	dec    esp
  4251f2:	xacquire xchg DWORD PTR [ebp+0x1cff284],ecx
  4251f9:	add    dh,bl
  4251fb:	shr    DWORD PTR [ecx-0x2e],0x9d
  4251ff:	xor    edx,DWORD PTR [ecx-0x75]
  425202:	inc    eax
  425203:	imul   esp,DWORD PTR [eax+eax*8-0x32],0x33
  425208:	imul   eax,DWORD PTR [eax],0x3301335e
  42520e:	and    eax,0x3274f644
  425213:	mov    al,ds:0xa1324482
  425218:	not    DWORD PTR ds:0x3a8996
  42521e:	jne    0x42525f
  425220:	jmp    0xf6bdccdb
  425225:	test   dh,cl
  425227:	mov    eax,DWORD PTR [ebp+0x1339ec7]
  42522d:	dec    DWORD PTR [ebp-0x70]
  425230:	div    DWORD PTR [ebx]
  425232:	add    eax,0x4dd2169d
  425237:	cmp    BYTE PTR [ecx-0x7c],ch
  42523a:	aaa    
  42523b:	mov    ebx,0x43
  425240:	pop    edi
  425241:	inc    ebx
  425242:	mov    ch,0xfa
  425244:	pusha  
  425245:	neg    DWORD PTR [esi+ecx*8-0xc]
  425249:	pushf  
  42524a:	jns    0x4251e0
  42524c:	sbb    edx,ebp
  42524e:	add    eax,0xb7123700
  425253:	call   0x482966
  425258:	add    al,0xf2
  42525a:	jl     0x4252a0
  42525c:	pop    ebx
  42525d:	cwde   
  42525e:	jle    0x4252dc
  425260:	push   ebx
  425261:	jo     0x425268
  425263:	or     edi,DWORD PTR [edx+0x37000502]
  425269:	and    BYTE PTR [ecx+0x24],al
  42526c:	push   edi
  42526d:	lods   eax,DWORD PTR ds:[esi]
  42526e:	xor    edx,DWORD PTR [edx+0x64]
  425271:	lock and BYTE PTR [edi+ebx*8],0x9c
  425276:	(bad)  
  425277:	jmp    DWORD PTR [edi+0x25]
  42527a:	call   0x806842fd
  42527f:	sar    BYTE PTR [eax],0x8
  425282:	inc    ecx
  425283:	and    al,0x32
  425285:	jne    0x4252a9
  425287:	and    al,0x2a
  425289:	or     DWORD PTR [esi+0x66],edx
  42528c:	sbb    BYTE PTR ss:[ecx+0x24],al
  425290:	add    ebp,DWORD PTR [ebp+0x5a643b56]
  425296:	sbb    ebp,eax
  425298:	aaa    
  425299:	imul   eax,edi,0x2160c2fb
  42529f:	xor    BYTE PTR [edi],al
  4252a1:	dec    edx
  4252a2:	pop    ebx
  4252a3:	add    DWORD PTR [eax],eax
  4252a5:	add    BYTE PTR [edi],cl
  4252a7:	pop    ebp
  4252a8:	mov    bl,0x3f
  4252aa:	aaa    
  4252ab:	into   
  4252ac:	icebp  
  4252ad:	shl    DWORD PTR ds:0xb87055d,cl
  4252b3:	cmp    DWORD PTR ds:0xcc33fb89,esp
  4252b9:	repz scas eax,DWORD PTR es:[edi]
  4252bb:	pinsrw mm5,edi,0xda
  4252bf:	mov    cs,edi
  4252c1:	(bad)  
  4252c2:	loop   0x425300
  4252c4:	xor    ecx,ebx
  4252c6:	dec    edx
  4252c7:	mov    al,ds:0x9b3743d6
  4252cc:	jmp    0xf8eb:0xcbf7c236
  4252d3:	sbb    esi,esp
  4252d5:	retf   0x642a
  4252d8:	test   BYTE PTR [ebx+0x37],0xbb
  4252dc:	adc    eax,0xe7f441bc
  4252e1:	or     al,0x8b
  4252e3:	pop    eax
  4252e4:	clc    
  4252e5:	dec    edi
  4252e6:	xor    eax,0x471fbc8d
  4252eb:	lea    edx,[edx]
  4252ed:	retf   0x588b
  4252f0:	or     al,0xcb
  4252f2:	in     eax,0xe5
  4252f4:	sub    dh,BYTE PTR [ecx-0x14340f48]
  4252fa:	std    
  4252fb:	or     ah,al
  4252fd:	out    0xd8,eax
  4252ff:	pop    esi
  425300:	dec    esp
  425301:	add    esi,DWORD PTR [edi]
  425303:	mov    ah,0x8d
  425305:	div    DWORD PTR [edi]
  425307:	pop    es
  425308:	out    dx,eax
  425309:	retf   0x0
  42530c:	and    bl,BYTE PTR [eax]
  42530e:	push   ss
  42530f:	inc    esi
  425310:	aaa    
  425311:	pushf  
  425312:	sar    BYTE PTR [edi-0x34],0x8d
  425316:	xchg   edi,eax
  425317:	(bad)  
  425319:	and    dl,0xc9
  42531c:	mov    cl,0xf8
  42531e:	add    esi,edi
  425320:	or     eax,0x927d2eee
  425325:	out    dx,eax
  425326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425327:	cld    
  425328:	mov    al,ds:0x6d86ee8
  42532d:	loope  0x425340
  42532f:	adc    eax,0xfb00e685
  425334:	fistp  DWORD PTR [edx+edx*2-0x7a769148]
  42533b:	test   eax,0xe9dab17e
  425340:	xor    al,0x34
  425342:	push   edx
  425343:	add    DWORD PTR [esi],esi
  425345:	mov    ah,0x1
  425347:	jmp    0xd8cb7abb
  42534c:	hlt    
  42534d:	xor    ecx,DWORD PTR [esp-0x6dd21b81]
  425354:	jle    0x42537d
  425356:	and    eax,0x5133f4d8
  42535b:	dec    ax
  42535d:	pop    ecx
  42535e:	push   cs
  42535f:	test   eax,0x12f9b534
  425364:	std    
  425365:	pop    es
  425366:	push   edi
  425367:	adc    BYTE PTR [eax-0x70],bl
  42536a:	jnp    0x425323
  42536c:	fwait
  42536d:	cmp    BYTE PTR [edx-0x4ffff9c],dh
  425373:	pop    es
  425374:	inc    eax
  425375:	iret   
  425376:	mov    bl,0x4b
  425378:	sub    al,0xb4
  42537a:	xor    edi,DWORD PTR [ecx]
  42537c:	mov    dl,0xb1
  42537e:	xor    cl,BYTE PTR ds:0x598087e8
  425384:	jle    0x425386
  425386:	jmp    0x425388
  425388:	and    al,0x6a
  42538a:	cld    
  42538b:	xor    BYTE PTR [ebp-0xf],dh
  42538e:	sbb    eax,0x926a2407
  425393:	(bad)  
  425394:	out    0xc9,eax
  425396:	mov    bl,0x73
  425398:	add    eax,0x14bbb87
  42539d:	pop    ebp
  42539e:	(bad)  
  42539f:	cld    
  4253a0:	stc    
  4253a1:	hlt    
  4253a2:	inc    esp
  4253a3:	and    al,BYTE PTR [ecx-0x17]
  4253a6:	pop    ebp
  4253a7:	lods   eax,DWORD PTR ds:[esi]
  4253a8:	in     eax,0xb7
  4253aa:	sti    
  4253ab:	xor    esp,esi
  4253ad:	add    BYTE PTR [esi+0x6510c2b7],ah
  4253b3:	aaa    
  4253b4:	jp     0x425381
  4253b6:	xchg   esi,eax
  4253b7:	repnz xor DWORD PTR [ebp-0x2e],esi
  4253bb:	hlt    
  4253bc:	stos   BYTE PTR es:[edi],al
  4253bd:	push   edi
  4253be:	rcr    DWORD PTR [ebp+0x381e1286],1
  4253c4:	push   esi
  4253c5:	neg    BYTE PTR [ebp-0x49dc8aca]
  4253cb:	(bad)  
  4253cc:	fdiv   st(7),st
  4253ce:	mov    cl,0x68
  4253d0:	ss sahf 
  4253d2:	pop    esi
  4253d3:	xor    bh,ch
  4253d5:	add    eax,0xc6560000
  4253da:	cmp    al,BYTE PTR [eax]
  4253dc:	pop    edx
  4253dd:	push   cs
  4253de:	fnstenv [edx+eiz*1-0x12]
  4253e2:	add    BYTE PTR [eax+0x3ac816],bh
  4253e8:	jbe    0x4253fb
  4253ea:	loope  0x4253eb
  4253ec:	jno    0x425456
  4253ee:	pop    ss
  4253ef:	mov    ecx,DWORD PTR [ebp+0x76]
  4253f2:	jmp    0x26099bfb
  4253f7:	add    DWORD PTR [ecx],edx
  4253f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253fa:	rol    ecx,0x75
  4253fd:	xor    BYTE PTR [ecx-0x80],dl
  425400:	sub    eax,0x1db60636
  425405:	inc    edi
  425406:	jmp    0xf6be9940
  42540b:	mov    ah,BYTE PTR [esi]
  42540d:	or     edx,edx
  42540f:	je     0x42540c
  425411:	gs add al,0x8
  425414:	sub    al,0xf0
  425416:	add    BYTE PTR [edx],al
  425418:	dec    edx
  425419:	and    DWORD PTR [edi+edi*8-0x2f],0xffffff99
  42541e:	ficom  DWORD PTR [edx]
  425420:	push   cs
  425421:	xor    BYTE PTR [edi+0x5b],dl
  425424:	out    0x77,eax
  425426:	sub    al,al
  425428:	aaa    
  425429:	sbb    DWORD PTR [esi+0x35ddcb0b],esp
  42542f:	sti    
  425430:	inc    edx
  425431:	sbb    esp,esi
  425433:	aas    
  425434:	aaa    
  425435:	fnstenv [eax]
  425437:	xchg   DWORD PTR [ebx+0x522e2c],ebx
  42543d:	add    BYTE PTR [eax+eax*2-0x7787ad03],ch
  425444:	mov    edx,0x7d9cf70e
  425449:	inc    ebp
  42544a:	imul   ebx,DWORD PTR ds:0xabac0002,0x51
  425451:	xor    al,0xad
  425453:	xchg   ebx,eax
  425454:	jp     0x42542d
  425456:	retf   
  425457:	js     0x425470
  425459:	repz mov esp,0xcbd781aa
  42545f:	popa   
  425460:	js     0x425478
  425462:	mov    bl,0xf6
  425464:	push   eax
  425465:	and    BYTE PTR [eax-0x55],al
  425468:	add    DWORD PTR [edx],edx
  42546a:	cmp    BYTE PTR [ebx+0x5ff427a6],ah
  425470:	cld    
  425471:	cmp    eax,0x74ec995f
  425476:	push   ds
  425477:	sbb    eax,0x97830007
  42547c:	inc    ebp
  42547d:	xchg   BYTE PTR [esi],bl
  42547f:	sar    DWORD PTR [edx-0x29],cl
  425482:	or     BYTE PTR [ebx+0xe],0xc9
  425486:	mov    edx,0xbc375143
  42548b:	xlat   BYTE PTR ds:[ebx]
  42548c:	ret    0x2b8d
  42548f:	pushf  
  425490:	jle    0x4254cc
  425492:	sbb    cl,BYTE PTR [eax]
  425494:	mov    WORD PTR [edi],?
  425496:	add    BYTE PTR [ebp+0x3b7024a],0xc3
  42549d:	and    cl,BYTE PTR [edx-0xa]
  4254a0:	ja     0x425516
  4254a2:	add    BYTE PTR [eax],al
  4254a4:	ss xor al,0xe9
  4254a7:	xchg   ecx,eax
  4254a8:	push   ebp
  4254a9:	mov    edi,0xc0c1dba2
  4254ae:	rol    dh,cl
  4254b0:	mov    edx,0x6fd5573
  4254b5:	mov    ebx,ebp
  4254b7:	mov    edi,0xdae7f441
  4254bc:	mov    DWORD PTR [ebp-0x56],ebx
  4254bf:	jp     0x4254b3
  4254c1:	aaa    
  4254c2:	popa   
  4254c3:	add    al,0xb0
  4254c5:	jno    0x425456
  4254c7:	add    DWORD PTR [eax],esp
  4254c9:	je     0x425505
  4254cb:	sub    edi,DWORD PTR [esi+0x75]
  4254ce:	loopne 0x4254d3
  4254d0:	or     bh,BYTE PTR [edi+0x474b827c]
  4254d6:	pop    ss
  4254d7:	das    
  4254d8:	fld    DWORD PTR [edi+0x1b]
  4254db:	das    
  4254dc:	sbb    BYTE PTR [edi+0x65],ch
  4254df:	inc    eax
  4254e0:	jnp    0x4254c8
  4254e2:	pop    ss
  4254e3:	(bad)  
  4254e4:	and    ch,BYTE PTR [edx+edi*8]
  4254e7:	inc    ebx
  4254e8:	aaa    
  4254e9:	inc    ebp
  4254ea:	sub    BYTE PTR [ebx-0x58],al
  4254ed:	jo     0x4254d3
  4254ef:	jl     0x42556b
  4254f1:	ins    BYTE PTR es:[edi],dx
  4254f2:	popa   
  4254f3:	inc    eax
  4254f4:	and    edi,DWORD PTR [ebp+ebp*4+0x23efc2c7]
  4254fb:	xor    edi,DWORD PTR [eax-0x1b]
  4254fe:	xor    dl,BYTE PTR [eax+0x2f]
  425501:	mov    ebx,0x1ffcbfad
  425506:	shl    al,0x0
  425509:	add    BYTE PTR [eax],dh
  42550b:	xor    al,0x65
  42550d:	ret    
  42550e:	bound  esi,QWORD PTR [ecx]
  425510:	(bad)  
  425511:	ret    
  425512:	into   
  425513:	(bad)  
  425514:	call   0xd8608c1c
  425519:	sub    eax,0xc52f7edf
  42551e:	int3   
  42551f:	mov    DWORD PTR [ecx],eax
  425521:	jl     0x4254b3
  425523:	mov    cl,0x44
  425525:	adc    esp,ebx
  425527:	jl     0x4254d5
  425529:	out    0x7a,eax
  42552b:	mov    ebx,0x762203
  425530:	loope  0x4254f4
  425532:	test   eax,0xb3d944b2
  425537:	dec    esp
  425538:	sub    bh,BYTE PTR [esi+ecx*4]
  42553b:	mov    cs,WORD PTR [ebp+esi*4+0x72]
  42553f:	out    dx,eax
  425540:	lock lock pop ecx
  425543:	xor    BYTE PTR [edx-0x44],0xfe
  425547:	out    dx,al
  425548:	cld    
  425549:	jb     0x425573
  42554b:	or     BYTE PTR [ebp+ebx*1+0x2e8c346b],0x34
  425553:	inc    ecx
  425554:	mov    esi,0xc1593714
  425559:	xchg   edx,eax
  42555a:	push   eax
  42555b:	xchg   ecx,eax
  42555c:	pop    edi
  42555d:	mov    bl,0x71
  42555f:	lea    ecx,[eax-0x41bec8d1]
  425565:	hlt    
  425566:	cmp    eax,0xb251338e
  42556b:	jb     0x425568
  42556d:	pop    esi
  42556e:	add    BYTE PTR [eax],al
  425570:	push   cs
  425571:	sar    edx,cl
  425573:	fdivr  st(0),st
  425575:	repz stc 
  425577:	aam    0x4
  425579:	in     al,0xe8
  42557b:	jge    0x42554a
  42557d:	(bad)  
  42557e:	cli    
  42557f:	ds js  0x42550a
  425582:	xchg   BYTE PTR [edi+0x354cb200],ch
  425588:	repnz (bad) 
  42558a:	clc    
  42558b:	je     0x425604
  42558d:	cmp    al,0x0
  42558f:	mov    ecx,0x17c7ae0c
  425594:	cli    
  425595:	mov    al,0x43
  425597:	in     eax,0x9a
  425599:	xor    ebp,DWORD PTR [edx]
  42559b:	add    BYTE PTR [ebp+0x4a],al
  42559e:	add    eax,0x8387ea88
  4255a3:	inc    ebp
  4255a4:	ret    0x87f4
  4255a7:	inc    esi
  4255a8:	(bad)  
  4255a9:	out    0x81,al
  4255ab:	inc    ebp
  4255ac:	jp     0x425594
  4255ae:	xchg   DWORD PTR [esi-0x66],eax
  4255b1:	or     eax,DWORD PTR [eax+edx*8+0xd]
  4255b5:	ins    DWORD PTR es:[edi],dx
  4255b6:	cli    
  4255b7:	jae    0x425631
  4255b9:	dec    esp
  4255ba:	jne    0x4255c1
  4255bc:	push   es
  4255bd:	dec    edi
  4255be:	pop    es
  4255bf:	jmp    0x425545
  4255c1:	(bad)  
  4255c2:	aas    
  4255c3:	push   cs
  4255c4:	mov    WORD PTR [ebx+0x5],gs
  4255c7:	(bad)  
  4255c8:	push   eax
  4255c9:	add    BYTE PTR [ecx],0xb0
  4255cc:	pop    edi
  4255cd:	dec    edi
  4255ce:	push   edx
  4255cf:	leave  
  4255d0:	pushf  
  4255d1:	mov    dl,bh
  4255d3:	push   esp
  4255d4:	add    BYTE PTR [eax],al
  4255d6:	aad    0x60
  4255d8:	jp     0x4255c6
  4255da:	pop    esi
  4255db:	push   esi
  4255dc:	dec    esi
  4255dd:	call   DWORD PTR [ebx-0x74]
  4255e0:	lea    esi,[ebp-0x32]
  4255e3:	and    esi,esi
  4255e5:	call   0x38c4a2
  4255ea:	shl    BYTE PTR [ebp+esi*2+0x79],cl
  4255ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255ef:	inc    esi
  4255f0:	cmc    
  4255f1:	mov    ebx,ebx
  4255f3:	jnp    0x4255b4
  4255f5:	add    al,0xf
  4255f7:	xor    al,0x82
  4255f9:	inc    ebp
  4255fa:	or     BYTE PTR ds:0xcaa24009,0x74
  425601:	stc    
  425602:	(bad)  
  425603:	cmp    al,0x44
  425605:	hlt    
  425606:	ret    0x7a86
  425609:	cmp    cl,bh
  42560b:	div    bl
  42560d:	adc    dh,0x20
  425610:	jne    0x425614
  425612:	or     eax,0x37c08474
  425617:	test   eax,0x9c5f8005
  42561c:	(bad)  
  42561d:	jae    0x42562d
  42561f:	lods   eax,DWORD PTR ds:[esi]
  425620:	or     eax,0xacaf25c8
  425626:	sar    DWORD PTR [esi+0x72],0xf0
  42562a:	mov    dl,0x7f
  42562c:	dec    ebx
  42562d:	es pop ds
  42562f:	popf   
  425630:	dec    BYTE PTR [edi]
  425632:	aaa    
  425633:	jecxz  0x425639
  425635:	data16 aaa 
  425637:	inc    edi
  425638:	mov    esi,0xfb000015
  42563d:	mov    DWORD PTR [esi],edi
  42563f:	add    BYTE PTR [edx-0x1eefc723],bh
  425645:	in     al,0xab
  425647:	std    
  425648:	aaa    
  425649:	popf   
  42564a:	or     eax,0x78
  42564d:	jne    0x425611
  42564f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425650:	jno    0x425620
  425652:	mov    bh,al
  425654:	add    DWORD PTR [ebp-0x619e369e],esp
  42565a:	mov    esi,0x9ab56775
  42565f:	leave  
  425660:	push   ecx
  425661:	scas   al,BYTE PTR es:[edi]
  425662:	mov    esi,0x92a54375
  425667:	leave  
  425668:	inc    ecx
  425669:	dec    BYTE PTR [ecx-0x33c9273d]
  42566f:	mov    esi,0x87589d3b
  425674:	daa    
  425675:	sbb    eax,0x9caa3bff
  42567a:	dec    eax
  42567b:	sbb    BYTE PTR [ecx-0x7a],0x39
  42567f:	add    DWORD PTR [ecx-0x5a],edi
  425682:	mov    edi,0x58995374
  425687:	sti    
  425688:	sub    ah,BYTE PTR [ebp+0x10374013]
  42568e:	lds    esi,FWORD PTR [ebp+0x50]
  425691:	xor    al,0x6e
  425693:	or     BYTE PTR ds:0x4b3828b0,ch
  425699:	dec    eax
  42569a:	enter  0x4737,0x48
  42569e:	loope  0x4256d5
  4256a0:	add    BYTE PTR [eax],al
  4256a2:	cmp    ecx,DWORD PTR [eax-0xb]
  4256a5:	cmp    DWORD PTR [edi],edi
  4256a7:	dec    eax
  4256a8:	mov    edx,0xc3483b37
  4256ad:	cmp    BYTE PTR [ebx],dh
  4256af:	(bad)  
  4256b0:	jmp    0xa8870863
  4256b5:	popa   
  4256b6:	jmp    0xb89b3eea
  4256bb:	xchg   edi,eax
  4256bc:	scas   eax,DWORD PTR es:[di]
  4256be:	inc    edi
  4256bf:	inc    ebx
  4256c0:	mov    eax,ds:0x7187605a
  4256c5:	push   eax
  4256c6:	cmp    DWORD PTR [ebx+0x8aec22d],0xffffffb8
  4256cd:	mov    edx,gs
  4256cf:	mov    esi,ecx
  4256d1:	push   eax
  4256d2:	aas    
  4256d3:	aaa    
  4256d4:	push   0xfffffff9
  4256d6:	aaa    
  4256d7:	xor    al,0xe8
  4256d9:	pop    ecx
  4256da:	pop    eax
  4256db:	xor    edi,edx
  4256dd:	int3   
  4256de:	push   ds
  4256df:	stc    
  4256e0:	xchg   ebx,eax
  4256e1:	aaa    
  4256e2:	cmp    eax,0xd22c4b4
  4256e7:	add    eax,esi
  4256e9:	ret    0x7ff2
  4256ec:	adc    DWORD PTR [eax],0x90e83436
  4256f2:	imul   esp,DWORD PTR ds:0x486b096e,0xffffffeb
  4256f9:	mov    dl,dl
  4256fb:	xor    al,0xe8
  4256fd:	add    esi,DWORD PTR [eax+0x7ac253ef]
  425703:	sub    BYTE PTR [ebp-0x3d],0x0
  425707:	add    BYTE PTR [edi+ebp*4],bh
  42570a:	add    esi,DWORD PTR ss:[edi]
  42570d:	xor    al,0x1
  42570f:	bound  edi,QWORD PTR [edi]
  425711:	cmp    al,0x26
  425713:	ss mov ah,0x7
  425716:	sti    
  425717:	jmp    0xe85c47e3
  42571c:	sub    BYTE PTR [ebx+0x7e],al
  42571f:	pop    ss
  425720:	sub    eax,0x34338339
  425725:	xor    al,0x1
  425727:	imul   ecx,esp,0xeb640a5a
  42572d:	xor    al,0x1
  42572f:	jmp    0xa9b8fb40
  425734:	xor    al,0xe
  425736:	add    ebp,DWORD PTR [ecx]
  425738:	push   ss
  425739:	pushf  
  42573a:	aaa    
  42573b:	fidiv  WORD PTR [esi-0x77]
  42573e:	test   DWORD PTR [ecx-0x16494fba],ebp
  425744:	xor    al,0x34
  425746:	ret    
  425747:	sub    al,0x75
  425749:	xor    al,0xe8
  42574b:	jnp    0x425788
  42574d:	xor    al,0x1
  42574f:	inc    ebx
  425750:	sub    eax,0x2db635e9
  425755:	and    DWORD PTR [ecx+0x79],ebp
  425758:	sub    dh,ah
  42575a:	add    BYTE PTR [ecx-0x690576bd],dl
  425760:	scas   eax,DWORD PTR es:[edi]
  425761:	je     0x4257d8
  425763:	loopne 0x4257e3
  425765:	out    dx,eax
  425766:	cli    
  425767:	call   0xe943f809
  42576c:	add    BYTE PTR [eax],al
  42576e:	xor    al,0x72
  425770:	inc    esp
  425771:	jbe    0x4257a6
  425773:	cmp    DWORD PTR [ebx-0x4cc709dc],esi
  425779:	mov    eax,ds:0xe940fd6b
  42577e:	and    eax,DWORD PTR [edx+0x3ff7fe73]
  425784:	test   BYTE PTR [ecx+0x14593],bl
  42578a:	test   ebp,ebp
  42578c:	lock (bad) 
  42578e:	fisubr DWORD PTR [eax]
  425790:	add    al,ch
  425792:	imul   esi,DWORD PTR [edx-0xa],0xffffffff
  425796:	pop    edx
  425797:	jo     0x42580d
  425799:	or     edx,DWORD PTR [eax]
  42579b:	in     eax,dx
  42579c:	cmc    
  42579d:	add    bl,0x73
  4257a0:	or     eax,0x56d71f72
  4257a5:	punpckhbw mm5,mm5
  4257a8:	cmc    
  4257a9:	mov    bl,BYTE PTR [esi-0x44]
  4257ac:	jb     0x4257ee
  4257ae:	into   
  4257af:	xlat   BYTE PTR ds:[ebx]
  4257b0:	inc    ebx
  4257b1:	cmp    DWORD PTR [ebx+0x1e4e74bc],edx
  4257b7:	inc    ebp
  4257b8:	test   DWORD PTR [eax],0xd3cf80b
  4257be:	or     bh,ah
  4257c0:	cmp    al,0xa
  4257c2:	cli    
  4257c3:	out    dx,eax
  4257c4:	cmp    al,0x9
  4257c6:	jmp    0x8395:0x4b263d33
  4257cd:	inc    ebp
  4257ce:	xchg   BYTE PTR [edi+0x83bf],dl
  4257d4:	(bad)  
  4257d5:	sub    eax,0x2cf4236f
  4257da:	imul   ebx,DWORD PTR [eax-0x72ff0feb],0x5000531a
  4257e4:	rcr    DWORD PTR ds:0x301e1359,0x84
  4257eb:	ror    BYTE PTR [ebx+0x35],0x82
  4257ef:	inc    ebp
  4257f0:	mov    dh,0xaf
  4257f2:	inc    esp
  4257f3:	lock dec ebx
  4257f5:	jp     0x4257fc
  4257f7:	sbb    dh,bh
  4257f9:	ror    BYTE PTR [ecx],1
  4257fb:	mov    bl,BYTE PTR [eax]
  4257fd:	mov    cl,0x4c
  4257ff:	clc    
  425800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425801:	cmp    ebx,DWORD PTR [eax]
  425803:	push   DWORD PTR [edi]
  425805:	shl    BYTE PTR [esi+0x48dd9287],1
  42580b:	mov    DWORD PTR [edx+0x2f7cfd3d],ecx
  425811:	xchg   edx,eax
  425812:	test   dl,cl
  425814:	stc    
  425815:	dec    edx
  425816:	rcr    DWORD PTR [edx-0x44],0xd8
  42581a:	mov    dh,0x27
  42581c:	lock mov es,WORD PTR [ebx+0x8]
  425820:	add    BYTE PTR [esp+eax*8+0x4],0x37
  425825:	ret    
  425826:	(bad)  
  425827:	lock push 0xc82fbe5e
  42582d:	je     0x425871
  42582f:	and    al,0x27
  425831:	xchg   edx,eax
  425832:	mov    BYTE PTR [ebx+0x4efe8d37],al
  425838:	add    BYTE PTR [eax],al
  42583a:	mov    esp,0xbd0fe2a1
  42583f:	mov    DWORD PTR [ebx],ecx
  425841:	sbb    BYTE PTR [esi+0x7102382d],0x91
  425848:	out    dx,al
  425849:	es pushf 
  42584b:	cli    
  42584c:	test   cl,bh
  42584e:	inc    edi
  42584f:	ds pop es
  425851:	cmp    BYTE PTR [esi+0x30],0x39
  425855:	add    eax,0x74ebc4b7
  42585a:	push   ebx
  42585b:	or     eax,0x8fe441bc
  425860:	jle    0x42585b
  425862:	push   ds
  425863:	sub    cl,BYTE PTR [edi]
  425865:	lea    eax,[esi]
  425867:	lock test dh,dh
  42586a:	cmp    ch,BYTE PTR [edx]
  42586c:	or     BYTE PTR [eax+0x5385a4e],al
  425872:	mov    bh,0xb4
  425874:	aaa    
  425875:	jb     0x425875
  425877:	push   ss
  425878:	aam    0xc0
  42587a:	sbb    eax,0x38e17e99
  42587f:	xor    al,0x68
  425881:	mov    edx,0xc37a332e
  425886:	sbb    eax,0x34a3686f
  42588b:	mov    ah,0x27
  42588d:	hlt    
  42588e:	or     bl,BYTE PTR [ebp+0x68]
  425891:	mov    ebp,0xc25a332e
  425896:	std    
  425897:	ins    DWORD PTR es:[edi],dx
  425898:	push   0x26b434a2
  42589d:	hlt    
  42589e:	add    BYTE PTR [eax],al
  4258a0:	div    BYTE PTR [edi]
  4258a2:	fsubr  st,st(0)
  4258a4:	loop   0x425909
  4258a6:	jo     0x425908
  4258a8:	daa    
  4258a9:	xor    eax,0x36075860
  4258ae:	addr16 (bad) 
  4258b0:	leave  
  4258b1:	(bad)  
  4258b2:	out    0x8b,eax
  4258b4:	xor    eax,DWORD PTR [ebx+eiz*4+0x43]
  4258b8:	add    BYTE PTR [eax],al
  4258ba:	int3   
  4258bb:	pop    ss
  4258bc:	cmp    al,0xb6
  4258be:	outs   dx,DWORD PTR ds:[esi]
  4258bf:	mov    esi,0x5f3f82ac
  4258c4:	jne    0x4258fd
  4258c6:	loop   0x4258cb
  4258c8:	std    
  4258c9:	jne    0x4258ab
  4258cb:	add    edi,DWORD PTR [eax+0x100c03f7]
  4258d1:	je     0x4258ba
  4258d3:	inc    ebx
  4258d4:	in     eax,0x7
  4258d6:	fsubr  QWORD PTR [ebx-0x414d8684]
  4258dc:	mov    eax,0xe3b56583
  4258e1:	and    al,0xa3
  4258e3:	aaa    
  4258e4:	sbb    esi,DWORD PTR [eax]
  4258e6:	fwait
  4258e7:	aaa    
  4258e8:	adc    esi,DWORD PTR [eax]
  4258ea:	cmp    dl,0x4d
  4258ed:	or     BYTE PTR [ebx-0x19718a76],0xf2
  4258f4:	and    cl,0xa5
  4258f7:	or     esi,DWORD PTR [edi]
  4258f9:	jmp    0x222bafe
  4258fe:	in     eax,dx
  4258ff:	fnsave [ebp+0xed10ff]
  425905:	add    BYTE PTR [edx+0x2e],ch
  425908:	cli    
  425909:	aam    0x44
  42590b:	jge    0x425921
  42590d:	sub    eax,0x6000f426
  425912:	jg     0x425894
  425914:	out    0xed,al
  425916:	mov    ch,0x17
  425918:	std    
  425919:	jmp    0x624b50cb
  42591e:	xchg   DWORD PTR [eax],esi
  425920:	dec    esi
  425921:	xchg   edi,eax
  425922:	(bad)  
  425923:	dec    eax
  425924:	or     DWORD PTR [edx-0x79],esi
  425927:	sub    BYTE PTR [esi-0x38],bh
  42592a:	xor    al,0xb9
  42592c:	fnstcw WORD PTR [esi-0x2d07203d]
  425932:	repnz adc DWORD PTR [edx+ebx*4-0x59],ecx
  425937:	(bad)  
  425938:	clc    
  425939:	adc    eax,eax
  42593b:	sar    bl,cl
  42593d:	idiv   BYTE PTR [esi-0x52e4d184]
  425943:	xchg   DWORD PTR [ebp+0x2c],esi
  425946:	sahf   
  425947:	loopne 0x425951
  425949:	push   esp
  42594a:	inc    esp
  42594b:	cmp    edx,DWORD PTR [ecx+edi*8+0x48]
  42594f:	out    dx,eax
  425950:	jge    0x42599e
  425952:	and    esi,DWORD PTR [ebx]
  425954:	jne    0x425984
  425956:	mov    dh,0xff
  425958:	adc    bl,ch
  42595a:	inc    eax
  42595b:	repz xor eax,0x17067734
  425961:	scas   al,BYTE PTR es:[edi]
  425962:	and    BYTE PTR [eax+0x2428a64e],al
  425968:	cli    
  425969:	hlt    
  42596a:	add    BYTE PTR [eax],al
  42596c:	cld    
  42596d:	xor    BYTE PTR [ecx-0x17],al
  425970:	mov    ecx,0xbfe07474
  425975:	idiv   esp
  425977:	add    dh,cl
  425979:	xor    edi,edx
  42597b:	cmp    DWORD PTR [edx+0x42],eax
  42597e:	sbb    BYTE PTR [ebp-0x5a],0x7b
  425982:	fdiv   DWORD PTR [edx+0x6d]
  425985:	cmp    DWORD PTR [edx-0x382407a1],0xffffffc2
  42598c:	push   ds
  42598d:	xor    eax,0x340e7d7a
  425992:	je     0x425985
  425994:	xchg   ebp,eax
  425995:	stc    
  425996:	clc    
  425997:	mov    ecx,ebx
  425999:	sub    BYTE PTR [edx],ah
  42599b:	lock xchg DWORD PTR [ebp+0x2c5be7e3],eax
  4259a2:	push   ss
  4259a3:	mov    ebp,DWORD PTR ds:0x7a73d27b
  4259a9:	scas   al,BYTE PTR es:[edi]
  4259aa:	pop    es
  4259ab:	adc    BYTE PTR [edi],0x98
  4259ae:	outs   dx,BYTE PTR ds:[esi]
  4259af:	or     bl,BYTE PTR [esi-0x43]
  4259b2:	or     BYTE PTR [ecx+ebp*8-0x4c],bh
  4259b6:	clc    
  4259b7:	or     eax,0xfa7a2ab9
  4259bc:	int3   
  4259bd:	inc    ebx
  4259be:	add    eax,0xf5aa3289
  4259c3:	inc    edx
  4259c4:	sar    BYTE PTR [ebx-0x16],1
  4259c7:	jb     0x425a37
  4259c9:	mov    bl,0xf3
  4259cb:	add    bh,ah
  4259cd:	push   es
  4259ce:	jp     0x425a4d
  4259d0:	add    BYTE PTR [eax],al
  4259d2:	mov    ?,WORD PTR [esi*2+0x11421d1b]
  4259d9:	add    DWORD PTR [edx+0x24],eax
  4259dc:	jp     0x425a5b
  4259de:	pop    esi
  4259df:	xor    dh,BYTE PTR [edx+edx*1-0x2b]
  4259e3:	loope  0x4259dd
  4259e5:	inc    ebx
  4259e6:	jne    0x425a18
  4259e8:	sbb    BYTE PTR [ebp-0x3e],0xab
  4259ec:	inc    esp
  4259ed:	clc    
  4259ee:	or     eax,0x378afacb
  4259f3:	push   eax
  4259f4:	mov    ecx,0xe986fa87
  4259f9:	mov    esi,0x1ba98bae
  4259fe:	stos   BYTE PTR es:[edi],al
  4259ff:	mov    ds,WORD PTR ds:0xff8a938d
  425a05:	test   DWORD PTR [ecx+edx*8],esi
  425a08:	fidiv  WORD PTR [ebx+0x2f]
  425a0b:	pop    ecx
  425a0c:	push   es
  425a0d:	jl     0x425a3f
  425a0f:	and    DWORD PTR [edx],ecx
  425a11:	jnp    0x425a47
  425a13:	retf   0xeba9
  425a16:	mov    esp,0xec2712d8
  425a1b:	add    al,0x6
  425a1d:	xchg   esp,esi
  425a1f:	in     al,0x23
  425a21:	sti    
  425a22:	lock inc esi
  425a24:	push   ebx
  425a25:	xchg   ebx,ebx
  425a27:	pushf  
  425a28:	dec    edi
  425a29:	push   edx
  425a2a:	mov    BYTE PTR [esi+0x33],dl
  425a2d:	adc    al,bl
  425a2f:	mov    dl,al
  425a31:	push   cs
  425a32:	ja     0x4259c1
  425a34:	mov    DWORD PTR [ebp+0x0],esi
  425a37:	add    BYTE PTR [edi],bh
  425a39:	adc    al,0x43
  425a3b:	clc    
  425a3c:	lods   al,BYTE PTR ds:[esi]
  425a3d:	ror    BYTE PTR [edx],1
  425a3f:	(bad)  
  425a40:	sti    
  425a41:	xchg   esi,eax
  425a42:	stc    
  425a43:	repnz and al,0x5
  425a46:	push   ecx
  425a47:	xchg   DWORD PTR [eax+0x72],esi
  425a4a:	les    edx,FWORD PTR [eax+0xd]
  425a4d:	adc    DWORD PTR [eax-0x5],0x42
  425a51:	sub    DWORD PTR [edi],ecx
  425a53:	inc    eax
  425a54:	aaa    
  425a55:	or     al,cl
  425a57:	or     al,0xbe
  425a59:	pop    eax
  425a5a:	mov    ecx,0x407785
  425a5f:	mov    edx,edi
  425a61:	shr    BYTE PTR [edx-0x46af8e01],0x87
  425a68:	or     dl,cl
  425a6a:	jmp    0xe305:0x9f34b4d9
  425a71:	out    dx,eax
  425a72:	mov    di,0x851
  425a76:	in     eax,dx
  425a77:	or     DWORD PTR ds:0xb8461431,0xfffffff9
  425a7e:	jg     0x425a09
  425a80:	out    dx,eax
  425a81:	xor    al,0xbf
  425a83:	fsub   QWORD PTR [ebp+0x36f86845]
  425a89:	cmp    dh,ch
  425a8b:	out    dx,al
  425a8c:	jo     0x425a74
  425a8e:	bound  esi,QWORD PTR [ecx]
  425a90:	inc    edi
  425a91:	jg     0x425a88
  425a93:	pop    ebx
  425a94:	inc    eax
  425a95:	hlt    
  425a96:	out    0x80,eax
  425a98:	test   DWORD PTR [eax],0xeeec
  425a9e:	add    DWORD PTR [eax-0x7f7d4565],0xffffff92
  425aa5:	mov    edx,0x43da244a
  425aaa:	aaa    
  425aab:	dec    ebp
  425aac:	lea    eax,[edi]
  425aae:	mov    eax,0xf386f000
  425ab3:	das    
  425ab4:	out    0x38,eax
  425ab6:	inc    ebx
  425ab7:	mov    esp,edi
  425ab9:	mov    es,WORD PTR [edx-0x80]
  425abc:	iret   
  425abd:	mov    dl,0x51
  425abf:	stos   BYTE PTR es:[edi],al
  425ac0:	lahf   
  425ac1:	mov    ?,WORD PTR [edx+0x30]
  425ac4:	fwait
  425ac5:	pop    ecx
  425ac6:	jle    0x425b39
  425ac8:	in     al,0x3
  425aca:	add    ch,BYTE PTR [ebx+0x239386fc]
  425ad0:	aaa    
  425ad1:	push   edx
  425ad2:	pushf  
  425ad3:	or     ah,dh
  425ad5:	mov    cs,WORD PTR [edx+0x78]
  425ad8:	test   BYTE PTR [ebx+0x37],0x7f
  425adc:	mov    dl,0xba
  425ade:	or     ah,BYTE PTR [ecx+esi*2]
  425ae1:	inc    eax
  425ae2:	jnp    0x425b62
  425ae4:	xchg   edx,eax
  425ae5:	mov    es,WORD PTR [edx]
  425ae7:	xor    BYTE PTR [ecx],al
  425ae9:	pusha  
  425aea:	test   DWORD PTR [ebx-0x4eccdb7a],0x5ba9f135
  425af4:	mov    BYTE PTR [edi+eax*4],bh
  425af7:	inc    esi
  425af8:	ret    
  425af9:	out    0xb1,al
  425afb:	sahf   
  425afc:	add    ecx,ebp
  425afe:	xor    al,0xe3
  425b00:	dec    ebp
  425b01:	je     0x425b03
  425b03:	add    bh,bh
  425b05:	xchg   ecx,ebp
  425b07:	hlt    
  425b08:	stos   DWORD PTR es:[edi],eax
  425b09:	jp     0x425b05
  425b0b:	pusha  
  425b0c:	ja     0x425b8a
  425b0e:	test   BYTE PTR [ecx-0x167347d3],ch
  425b14:	xor    al,0x34
  425b16:	xchg   ah,bl
  425b18:	les    eax,FWORD PTR [ebp-0x3e]
  425b1b:	fisttp WORD PTR [ecx-0x1f]
  425b1e:	dec    ebp
  425b1f:	dec    esi
  425b20:	inc    edi
  425b21:	and    al,0xfa
  425b23:	fcomp  QWORD PTR [ebp+ebp*1+0x41]
  425b27:	jmp    0xc5b6cfe3
  425b2c:	mov    ah,0x40
  425b2e:	ss repz daa 
  425b31:	adc    al,BYTE PTR [esi-0x3882634c]
  425b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b38:	loope  0x425abe
  425b3a:	jne    0x425afe
  425b3c:	mov    ecx,0xf562fce7
  425b41:	mov    bh,0xcf
  425b43:	jge    0x425afd
  425b45:	mov    al,0x45
  425b47:	(bad)  
  425b48:	cmp    eax,DWORD PTR [ebp+0x44]
  425b4b:	icebp  
  425b4c:	addr16 das 
  425b4e:	push   eax
  425b4f:	pop    esp
  425b50:	xor    BYTE PTR [esi+eax*4],bl
  425b53:	mov    bh,0xcb
  425b55:	sbb    eax,esp
  425b57:	(bad)  
  425b59:	xchg   ebp,eax
  425b5a:	or     eax,0x4fe2395a
  425b5f:	jmp    0x74ba:0xe8e47b
  425b66:	idiv   edi
  425b68:	add    BYTE PTR [eax],al
  425b6a:	fld    QWORD PTR [ebp+edi*8+0x0]
  425b6e:	sub    BYTE PTR [ebx],ah
  425b70:	div    BYTE PTR [ebp-0x6e]
  425b73:	jb     0x425b7a
  425b75:	pop    ds
  425b76:	outs   dx,BYTE PTR ds:[esi]
  425b77:	mov    esp,0xb5191474
  425b7c:	add    eax,0xd3d00e1f
  425b81:	les    esi,FWORD PTR [eax-0x4d830545]
  425b87:	scas   eax,DWORD PTR es:[edi]
  425b88:	inc    esp
  425b89:	or     BYTE PTR ds:0xf5f6fac1,al
  425b8f:	inc    ebp
  425b90:	stc    
  425b91:	add    ebx,DWORD PTR [ebp+0xd0c74a9]
  425b97:	rol    DWORD PTR [eax],0x7d
  425b9a:	push   0xffffffaf
  425b9c:	pop    esp
  425b9d:	hlt    
  425b9e:	and    eax,0xd182065a
  425ba3:	mov    ebx,0xafd1fff6
  425ba8:	inc    esp
  425ba9:	or     al,0xd0
  425bab:	ffreep st(7)
  425bad:	ret    0x310e
  425bb0:	push   esp
  425bb1:	mov    esp,DWORD PTR [edx]
  425bb3:	loope  0x425bfe
  425bb5:	push   esi
  425bb6:	lea    edi,gs:[esi+0x4e309e12]
  425bbd:	jmp    FWORD PTR [ebx+0x31d6f634]
  425bc3:	dec    ebp
  425bc4:	or     DWORD PTR [ebx-0x7a3044ca],ecx
  425bca:	mov    cl,0x3a
  425bcc:	push   edi
  425bcd:	test   DWORD PTR [eax],eax
  425bcf:	add    BYTE PTR [esi+0x3a],bl
  425bd2:	push   ebx
  425bd3:	mov    ebx,ebx
  425bd5:	sub    BYTE PTR [ebx-0x586479c1],ch
  425bdb:	(bad)  
  425bdc:	jno    0x425bdb
  425bde:	shl    BYTE PTR [edi+esi*1+0x57],0x45
  425be3:	push   eax
  425be4:	scas   al,BYTE PTR es:[edi]
  425be5:	push   edi
  425be6:	or     eax,0x3b0361fb
  425beb:	cld    
  425bec:	ret    0xfd56
  425bef:	std    
  425bf0:	mov    bl,0xca
  425bf2:	sub    dh,BYTE PTR [esi]
  425bf4:	dec    edi
  425bf5:	ret    
  425bf6:	vaddss xmm0,xmm0,DWORD PTR [ecx]
  425bfa:	(bad)  
  425bfb:	test   DWORD PTR [esi+eiz*1-0x18],ebp
  425bff:	xchg   dl,dh
  425c01:	xchg   esi,eax
  425c02:	push   ecx
  425c03:	push   eax
  425c04:	in     al,0xb2
  425c06:	push   ecx
  425c07:	les    edi,FWORD PTR [ecx]
  425c09:	mov    ch,0x74
  425c0b:	cmp    eax,edx
  425c0d:	sar    ebp,0xe7
  425c10:	sahf   
  425c11:	repz mov bh,0xfb
  425c14:	and    BYTE PTR [ecx+0x37fff306],al
  425c1a:	lds    esp,FWORD PTR [eax+ebx*1]
  425c1d:	nop
  425c1e:	les    ecx,FWORD PTR [eax-0x3c4e9cf]
  425c24:	jns    0x425c1b
  425c26:	pushf  
  425c27:	mov    ds:0xbf8cf2f9,al
  425c2c:	fadd   QWORD PTR [edi+0x163b75b9]
  425c32:	shr    eax,0x0
  425c35:	add    ah,cl
  425c37:	mov    bl,0xb8
  425c39:	sti    
  425c3a:	js     0x425caf
  425c3c:	pop    ebp
  425c3d:	leave  
  425c3e:	cmc    
  425c3f:	test   esi,edi
  425c41:	push   esp
  425c42:	mov    esp,0x27ec7f31
  425c47:	mov    esi,?
  425c49:	jmp    DWORD PTR [ebx+ebx*4+0x51]
  425c4d:	cmp    WORD PTR [esi],ax
  425c50:	scas   al,BYTE PTR es:[edi]
  425c51:	pop    eax
  425c52:	jno    0x425c1c
  425c54:	mov    ebp,0x6d05e00
  425c59:	or     esi,DWORD PTR [ecx+0x37046a34]
  425c5f:	xor    al,0x38
  425c61:	sub    al,0xd7
  425c63:	jmp    DWORD PTR [edi]
  425c65:	add    al,0xb8
  425c67:	push   0xffffffc0
  425c69:	nop
  425c6a:	retf   
  425c6b:	jp     0x425c30
  425c6d:	xor    DWORD PTR [edi+0x1],0x31fd8935
  425c74:	pop    esi
  425c75:	add    eax,0xc345423
  425c7a:	sbb    ebp,DWORD PTR ds:0x290cff24
  425c80:	sbb    eax,DWORD PTR [ebx]
  425c82:	test   BYTE PTR [esi+0x2bfa8983],0x38
  425c89:	mov    esi,DWORD PTR [ebp+0x4f]
  425c8c:	test   eax,0x192c7a03
  425c91:	mov    edx,ecx
  425c93:	xor    DWORD PTR [edx-0x49],0x1c
  425c97:	jae    0x425cfe
  425c99:	mov    ah,0x0
  425c9b:	add    BYTE PTR ds:0x3703637b,bl
  425ca1:	xor    al,0xe8
  425ca3:	stos   DWORD PTR es:[edi],eax
  425ca4:	mov    esi,DWORD PTR [esi+0x52]
  425ca7:	mov    bh,0xb8
  425ca9:	pop    ebx
  425caa:	fild   DWORD PTR gs:[ebx-0x270589c2]
  425cb1:	push   0xaeecb68d
  425cb6:	xor    BYTE PTR [ecx+0x5302ffdc],al
  425cbc:	popf   
  425cbd:	mov    WORD PTR ds:0x274f3704,fs
  425cc3:	dec    esi
  425cc4:	(bad)  
  425cc6:	dec    ebx
  425cc7:	mov    dh,0xbc
  425cc9:	scas   al,BYTE PTR es:[edi]
  425cca:	popf   
  425ccb:	pop    es
  425ccc:	je     0x425cb1
  425cce:	jo     0x425cd5
  425cd0:	add    eax,0x9fb730b7
  425cd5:	or     al,0x1
  425cd7:	dec    ebp
  425cd8:	jmp    0x44dee35b
  425cdd:	lods   eax,DWORD PTR ds:[esi]
  425cde:	add    BYTE PTR [edi+0x3a0082f7],ch
  425ce4:	fstp   TBYTE PTR [ecx]
  425ce6:	mov    esi,0x44b1c9d7
  425ceb:	shl    cl,cl
  425ced:	fst    QWORD PTR [ebp-0x50]
  425cf0:	jbe    0x425d19
  425cf2:	add    DWORD PTR [edx+0x28],esi
  425cf5:	push   eax
  425cf6:	or     eax,0x94ff862
  425cfb:	pop    ss
  425cfc:	lods   al,BYTE PTR ds:[esi]
  425cfd:	jmp    DWORD PTR [ecx+esi*8]
  425d00:	add    BYTE PTR [eax],al
  425d02:	mov    DWORD PTR [ebp+0x7e],eax
  425d05:	test   eax,0xa87de431
  425d0a:	cmp    DWORD PTR [ebx+ebx*8-0x7ecbcb24],ecx
  425d11:	pop    es
  425d12:	aaa    
  425d13:	xor    al,0x5b
  425d15:	hlt    
  425d16:	ss test ecx,ebx
  425d19:	stos   BYTE PTR es:[edi],al
  425d1a:	xchg   DWORD PTR [ecx-0x547de713],esi
  425d20:	inc    esp
  425d21:	popa   
  425d22:	mov    edi,0x5cb9f8ef
  425d27:	enter  0xab2b,0x34
  425d2b:	or     al,0xd6
  425d2d:	call   0xbd3c9166
  425d32:	cmp    BYTE PTR [esi+0x44],dh
  425d35:	cmp    eax,0xe1747d33
  425d3a:	mov    WORD PTR [edx],es
  425d3c:	retf   0x34e9
  425d3f:	stc    
  425d40:	(bad)  
  425d41:	std    
  425d42:	add    edi,DWORD PTR [ebx+0x201ee909]
  425d48:	mov    bh,ch
  425d4a:	scas   eax,DWORD PTR es:[edi]
  425d4b:	test   BYTE PTR [ebx+eax*4],0x34
  425d4f:	in     al,0xf9
  425d51:	add    BYTE PTR [ebx-0x61bff0e3],dl
  425d57:	mov    dh,0xc5
  425d59:	or     al,0x1b
  425d5b:	aaa    
  425d5c:	sbb    DWORD PTR [eax-0x77],edx
  425d5f:	sub    ebp,esp
  425d61:	adc    bl,BYTE PTR [esi+0x30]
  425d64:	add    dh,0x0
  425d67:	add    ch,bl
  425d69:	jmp    0x395849ef
  425d6e:	or     eax,0x4a18ba83
  425d73:	sbb    DWORD PTR [esi+0x6b574f60],0x15
  425d7a:	add    BYTE PTR [eax],al
  425d7c:	dec    esi
  425d7d:	xor    BYTE PTR [esi-0x1e],bh
  425d80:	dec    esi
  425d81:	xor    eax,0x28238b01
  425d86:	jp     0x425d48
  425d88:	push   edx
  425d89:	dec    ebx
  425d8a:	adc    eax,0xf538d750
  425d8f:	call   0x438fab
  425d94:	dec    esi
  425d95:	mov    edi,0xf5001414
  425d9a:	add    BYTE PTR [ebx-0x3f7bd42e],al
  425da0:	stc    
  425da1:	clc    
  425da2:	mov    ch,0x0
  425da4:	push   ds
  425da5:	xor    eax,0xbee631e9
  425daa:	test   BYTE PTR [ecx+0x458cbcd3],0x3a
  425db1:	xor    eax,0x50
  425db4:	addr16 dec ecx
  425db6:	icebp  
  425db7:	call   0x3a004c
  425dbc:	push   edi
  425dbd:	cmp    ebp,edi
  425dbf:	cmp    edx,DWORD PTR [eax]
  425dc1:	dec    ecx
  425dc2:	add    eax,0x75cb1933
  425dc7:	mov    ebp,DWORD PTR [ebx+0xff7ad0]
  425dcd:	add    BYTE PTR [edi],dh
  425dcf:	xchg   ebp,eax
  425dd0:	xor    bh,bh
  425dd2:	dec    esi
  425dd3:	xchg   ebp,eax
  425dd4:	push   ebp
  425dd5:	aaa    
  425dd6:	mov    cl,0xf8
  425dd8:	jecxz  0x425d66
  425dda:	jp     0xf7e27208
  425de0:	test   eax,0xa5f984f
  425de5:	adc    dh,bh
  425de7:	mov    al,BYTE PTR [ecx-0x41efc43c]
  425ded:	je     0x425e21
  425def:	dec    ecx
  425df0:	jle    0x425db1
  425df2:	pop    esp
  425df3:	mov    edi,esi
  425df5:	jmp    FWORD PTR [edx+edi*4]
  425df8:	xor    dh,bl
  425dfa:	pop    esp
  425dfb:	test   DWORD PTR [edi],esp
  425dfd:	bnd jl 0x425d8b
  425e00:	(bad)  
  425e01:	push   DWORD PTR [eax+eax*2]
  425e04:	mov    ecx,0xd05dc675
  425e09:	test   DWORD PTR [eax+0x1e],ecx
  425e0c:	out    dx,al
  425e0d:	xchg   dl,bh
  425e0f:	sahf   
  425e10:	add    eax,0x4360b33
  425e16:	xor    al,0x0
  425e18:	cs cld 
  425e1a:	mov    al,ds:0xba088819
  425e1f:	aam    0x2a
  425e21:	push   cs
  425e22:	pop    esi
  425e23:	sbb    BYTE PTR [ebp+0x53024272],bh
  425e29:	clc    
  425e2a:	pop    esp
  425e2b:	hlt    
  425e2c:	jle    0x425e25
  425e2e:	mov    bh,0x10
  425e30:	pop    ecx
  425e31:	add    BYTE PTR [eax],al
  425e33:	add    BYTE PTR [ecx+edx*8-0x72f3fac0],al
  425e3a:	(bad)  
  425e3b:	jmp    FWORD PTR [esi+ebx*1]
  425e3e:	xor    ch,dl
  425e40:	lods   al,BYTE PTR ds:[esi]
  425e41:	push   ds
  425e42:	daa    
  425e43:	xlat   BYTE PTR ds:[ebx]
  425e44:	cld    
  425e45:	mov    esi,?
  425e47:	inc    edx
  425e49:	xor    al,0x6f
  425e4b:	fdiv   DWORD PTR [esi]
  425e4d:	xor    al,0xe8
  425e4f:	xchg   BYTE PTR [edx+0x78],cl
  425e52:	add    BYTE PTR [esi],dl
  425e54:	div    BYTE PTR [esi+0xb]
  425e57:	jg     0x425ed0
  425e59:	add    ecx,esp
  425e5b:	mov    ah,0x22
  425e5d:	js     0x425e6f
  425e5f:	shl    BYTE PTR [esi+0x76],1
  425e62:	repz test DWORD PTR [edx],esp
  425e65:	test   BYTE PTR [eax],al
  425e67:	fdiv   QWORD PTR [edi-0x37091c8a]
  425e6d:	xlat   BYTE PTR ds:[ebx]
  425e6e:	cmp    DWORD PTR [edi+0x6e],ecx
  425e71:	jb     0x425e57
  425e73:	add    esi,DWORD PTR [eax+0x2b81cbf1]
  425e79:	xor    ebp,DWORD PTR [ebx]
  425e7b:	sbb    al,0x80
  425e7d:	xor    eax,0x33d903e8
  425e82:	sbb    dh,BYTE PTR [ebx+0x43d21c42]
  425e88:	aaa    
  425e89:	daa    
  425e8a:	pop    edx
  425e8b:	dec    ecx
  425e8c:	daa    
  425e8d:	mov    bl,0xa4
  425e8f:	add    BYTE PTR [esp+ebx*2-0x11],al
  425e93:	ret    
  425e94:	sbb    cl,dh
  425e96:	(bad)
  425e9a:	jne    0x425ec8
  425e9c:	call   0x6f72d41d
  425ea1:	dec    ecx
  425ea2:	xor    esp,esp
  425ea4:	jb     0x425edf
  425ea6:	das    
  425ea7:	push   cs
  425ea8:	popa   
  425ea9:	dec    edx
  425eaa:	ds mov bl,0x2a
  425ead:	jmp    DWORD PTR [esi+0x77]
  425eb0:	cmc    
  425eb1:	adc    esp,DWORD PTR ds:0xf386e7f4
  425eb7:	daa    
  425eb8:	addr16 mov bl,0x36
  425ebb:	inc    BYTE PTR [esp+ebx*4]
  425ebe:	dec    eax
  425ebf:	sub    eax,ebp
  425ec1:	add    edi,DWORD PTR [eax+0x7c350100]
  425ec7:	loop   0x425eb1
  425ec9:	nop
  425eca:	xchg   BYTE PTR [edx-0x6],bh
  425ecd:	push   0xffffff84
  425ecf:	sub    eax,0x7b23d073
  425ed4:	(bad)  
  425ed5:	call   0xf5a9930e
  425eda:	in     eax,0x0
  425edc:	cmc    
  425edd:	je     0x425e9e
  425edf:	inc    edx
  425ee0:	xor    eax,0x517ae5ff
  425ee5:	idiv   BYTE PTR [edi]
  425ee7:	and    BYTE PTR [ebx],dl
  425ee9:	test   eax,0xf5c4f734
  425eee:	mov    edi,0x79740a73
  425ef3:	or     eax,0x7eb33607
  425ef8:	add    BYTE PTR [edi+esi*1+0x7b],dl
  425efc:	je     0x425ec3
  425efe:	add    BYTE PTR [eax],al
  425f00:	jmp    0xbf404877
  425f05:	jns    0x425f01
  425f07:	arpl   WORD PTR [edx+edi*2+0x74],bp
  425f0b:	lods   eax,DWORD PTR ds:[esi]
  425f0c:	lods   al,BYTE PTR ds:[esi]
  425f0d:	dec    ebp
  425f0e:	shl    BYTE PTR [edi-0x668b577b],0x9c
  425f15:	stc    
  425f16:	adc    BYTE PTR [edi-0x7f41527b],0x8a
  425f1d:	jns    0x425f19
  425f1f:	xchg   BYTE PTR [edi-0x3f951253],cl
  425f25:	and    al,0x4e
  425f27:	pop    ds
  425f28:	jl     0x425ed1
  425f2a:	inc    esp
  425f2b:	ins    DWORD PTR es:[edi],dx
  425f2c:	fs mov esi,ss
  425f2f:	jns    0x425ef7
  425f31:	jns    0x425eb9
  425f33:	popa   
  425f34:	xor    edi,0xfffffff4
  425f37:	ins    BYTE PTR es:[edi],dx
  425f38:	(bad)  
  425f3b:	sbb    edi,ebx
  425f3d:	lea    esp,[edi+0x0]
  425f40:	gs cmp al,0xfd
  425f43:	mov    ebx,DWORD PTR [ebx+0x76574f21]
  425f49:	gs cld 
  425f4b:	jmp    DWORD PTR [ecx]
  425f4d:	scas   al,BYTE PTR es:[edi]
  425f4e:	test   DWORD PTR [esp+ebp*4],0x8004632e
  425f55:	imul   eax,DWORD PTR [ebx+edx*1-0x32],0xffffffac
  425f5a:	out    dx,eax
  425f5b:	je     0x425f37
  425f5d:	mov    ah,0x3e
  425f5f:	or     esp,DWORD PTR [edi]
  425f61:	in     al,dx
  425f62:	clc    
  425f63:	mov    DWORD PTR [eax],eax
  425f65:	add    BYTE PTR [ebx],ch
  425f67:	lds    eax,FWORD PTR [esi]
  425f69:	mov    bh,0xc9
  425f6b:	js     0x425ef0
  425f6d:	dec    ebp
  425f6e:	jb     0x425f51
  425f70:	cmc    
  425f71:	jne    0x425f09
  425f73:	push   ss
  425f74:	add    DWORD PTR [edx-0x68],ebp
  425f77:	cdq    
  425f78:	jb     0x425f42
  425f7a:	mov    ?,WORD PTR [ecx]
  425f7c:	xor    al,0xdb
  425f7f:	mov    ecx,0xece51c75
  425f84:	or     BYTE PTR [ebx-0x172908ca],cl
  425f8a:	or     dl,BYTE PTR [edx-0x9]
  425f8d:	(bad)  
  425f8e:	fisubr DWORD PTR [edi+0x75]
  425f91:	add    al,0x98
  425f93:	in     eax,dx
  425f94:	or     DWORD PTR [ecx],eax
  425f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f97:	jg     0x425f22
  425f99:	add    BYTE PTR [esi-0x8],cl
  425f9c:	jnp    0x425f92
  425f9e:	shl    DWORD PTR [edi*8-0x1725248b],0x95
  425fa6:	into   
  425fa7:	shl    esi,0x8a
  425faa:	dec    ebx
  425fab:	pop    ds
  425fac:	push   esi
  425fad:	pop    esi
  425fae:	and    eax,0x1e0cbbb9
  425fb3:	fiadd  WORD PTR [ecx+0x49e1bfec]
  425fb9:	push   esi
  425fba:	aaa    
  425fbb:	mov    dh,0x7d
  425fbd:	jbe    0x426006
  425fbf:	adc    bh,BYTE PTR [eax-0x476df60d]
  425fc5:	lea    esi,[ebp+0x5d]
  425fc8:	in     eax,0xef
  425fca:	add    BYTE PTR [eax],al
  425fcc:	mov    bh,0xbc
  425fce:	add    eax,0x50bc2e
  425fd3:	xchg   esp,eax
  425fd4:	jb     0x426025
  425fd6:	popf   
  425fd7:	jle    0x425fba
  425fd9:	adc    eax,0x22b462b0
  425fde:	cmc    
  425fdf:	outs   dx,BYTE PTR ds:[esi]
  425fe0:	cmp    ebx,DWORD PTR [ecx-0x42]
  425fe3:	out    0x2,eax
  425fe5:	or     BYTE PTR [eax-0x3245c48b],dh
  425feb:	out    0x34,eax
  425fed:	adc    BYTE PTR [eax+0x2c],dl
  425ff0:	mov    esp,0x69629d50
  425ff5:	lea    esi,[ecx+0x5592c80b]
  425ffb:	xchg   DWORD PTR [eax+0x72],esi
  425ffe:	hlt    
  425fff:	jmp    0x426071
  426001:	gs add eax,0xffffffe9
  426005:	shl    DWORD PTR [ecx+0x541d6375],1
  42600b:	call   0xfbf41fdd
  426010:	mov    bh,0x47
  426012:	mov    cl,0x1
  426014:	ret    0x7c68
  426017:	inc    edx
  426018:	movsx  esi,BYTE PTR ss:[esp+ebx*1-0x63]
  42601e:	mov    dh,0x53
  426020:	inc    eax
  426021:	or     edi,DWORD PTR [esi+0x47e8874f]
  426027:	add    al,0x87
  426029:	bound  edi,QWORD PTR [eax+0x42]
  42602c:	xor    al,0x4d
  42602e:	jl     0x426075
  426030:	add    BYTE PTR [eax],al
  426032:	aas    
  426033:	loop   0x426022
  426035:	out    0xc2,eax
  426037:	xor    al,0xd2
  426039:	mov    cl,0xfc
  42603b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42603c:	jmp    0x2151bd91
  426041:	lds    edi,FWORD PTR [ebx]
  426043:	xor    al,0xb5
  426045:	jl     0x426022
  426047:	mov    ch,0x54
  426049:	fwait
  42604a:	aaa    
  42604b:	xor    al,0xe8
  42604d:	push   esp
  42604e:	test   DWORD PTR [ebx],ecx
  426050:	gs inc esi
  426052:	fild   DWORD PTR [eax+eax*2]
  426055:	outs   dx,BYTE PTR ds:[esi]
  426056:	mov    esp,0xc6f42372
  42605b:	mov    ebp,0x7a00cfa5
  426060:	popf   
  426061:	or     BYTE PTR [ecx+0x74],ah
  426064:	add    DWORD PTR [edx-0x36178c57],eax
  42606a:	cli    
  42606b:	outs   dx,BYTE PTR ds:[esi]
  42606c:	call   0xb19682eb
  426071:	ss fwait
  426073:	inc    ebx
  426074:	bound  ebp,QWORD PTR [ecx]
  426076:	mov    DWORD PTR [ebx-0x18],esi
  426079:	sbb    bh,0x1a
  42607c:	iret   
  42607d:	add    cl,BYTE PTR [eax+0x6a]
  426080:	dec    edx
  426081:	in     eax,dx
  426082:	and    eax,ebp
  426084:	adc    bl,dh
  426086:	test   al,0xc1
  426088:	inc    ebp
  426089:	mov    esi,0x268f9f98
  42608e:	nop
  42608f:	fsubrp st(5),st
  426091:	dec    ebx
  426092:	aad    0xbc
  426094:	and    eax,0xd10000c0
  426099:	aaa    
  42609a:	jne    0x4260df
  42609c:	inc    ebx
  42609d:	add    al,0x6d
  42609f:	dec    ecx
  4260a0:	addr16 add al,0x93
  4260a3:	sbb    DWORD PTR [edi+0x4a],eax
  4260a6:	sub    BYTE PTR [eax+ebp*4],al
  4260a9:	js     0x42609f
  4260ab:	cmp    BYTE PTR [edx+0x1caf7b4f],0x4
  4260b2:	add    DWORD PTR [esi+edi*2-0x80],esp
  4260b6:	push   ecx
  4260b7:	xor    ebx,0x66fa16
  4260bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260be:	ss push edx
  4260c0:	outs   dx,DWORD PTR ds:[esi]
  4260c1:	(bad)  
  4260c2:	aaa    
  4260c3:	fiadd  DWORD PTR [esi+0x3f]
  4260c6:	test   esp,ebx
  4260c8:	xor    esi,DWORD PTR [ecx+eax*1]
  4260cb:	sar    DWORD PTR [edx],cl
  4260cd:	or     eax,0xf0b6292e
  4260d2:	scas   al,BYTE PTR es:[edi]
  4260d3:	cmp    ch,BYTE PTR [esi+edx*8-0x5b]
  4260d7:	ret    
  4260d8:	and    DWORD PTR [ebx+eiz*2],ecx
  4260db:	jo     0x42614b
  4260dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260de:	addr16 stc 
  4260e0:	mov    bh,0x32
  4260e2:	(bad)  
  4260e3:	mov    eax,0xb9b8f8b7
  4260e8:	(bad)  [eax+0x11]
  4260eb:	fcomip st,st(4)
  4260ed:	xor    edi,DWORD PTR [esi+0x25]
  4260f0:	aaa    
  4260f1:	rol    DWORD PTR [ebp+edx*8-0x6605911f],0xb7
  4260f9:	clc    
  4260fa:	mov    al,0x39
  4260fc:	add    BYTE PTR [eax],al
  4260fe:	mov    ds:0xc9de21ea,eax
  426103:	ds mov dl,0x52
  426106:	inc    ebp
  426107:	mov    eax,0x7ab0dec1
  42610c:	add    ecx,ebp
  42610e:	xor    al,0xda
  426110:	xor    BYTE PTR [edi+ebp*4+0x4f],ch
  426114:	cli    
  426115:	mov    dh,0xa1
  426117:	add    edx,DWORD PTR [ebx+0x5c]
  42611a:	lfs    edi,FWORD PTR [esi-0x4f]
  42611e:	xchg   ecx,eax
  42611f:	pop    ebx
  426120:	ins    BYTE PTR es:[edi],dx
  426121:	jle    0x4260ad
  426123:	outs   dx,BYTE PTR ds:[esi]
  426124:	test   BYTE PTR [ecx-0x165243cf],ch
  42612a:	xor    al,0x34
  42612c:	cli    
  42612d:	add    BYTE PTR [ebx],ah
  42612f:	outs   dx,BYTE PTR ds:[esi]
  426130:	adc    edi,0xffffffa5
  426133:	scas   eax,DWORD PTR es:[edi]
  426134:	jmp    0xf6e4fc4a
  426139:	cmp    al,0x1f
  42613b:	jae    0x4261bb
  42613d:	cmp    cl,BYTE PTR [edi]
  42613f:	ss add eax,ebp
  426142:	mov    ds:0x62fff6ec,eax
  426147:	jne    0x42614f
  426149:	test   al,ah
  42614b:	cmp    BYTE PTR [ecx],al
  42614d:	add    BYTE PTR [ebx-0x4],ch
  426150:	in     al,dx
  426151:	xor    ebx,DWORD PTR [ecx]
  426153:	add    eax,0xcd0e7d88
  426158:	ror    DWORD PTR [esi-0xf7d5de8],0x47
  42615f:	sub    al,0xf5
  426161:	cmp    eax,DWORD PTR [eax]
  426163:	add    BYTE PTR [ecx],ah
  426165:	jb     0x4261e5
  426167:	repz sahf 
  426169:	xor    eax,0xd1bb3901
  42616e:	push   es
  42616f:	xchg   BYTE PTR [esi*1+0x49c40001],ch
  426176:	mov    WORD PTR [ebx+0x36],es
  426179:	add    eax,0x569468c
  42617e:	not    BYTE PTR ds:0x414782
  426184:	or     eax,0x9e850d7c
  426189:	sub    al,0x10
  42618b:	inc    edi
  42618c:	fistp  QWORD PTR [ecx-0x2e]
  42618f:	add    DWORD PTR [esi+0x35],ecx
  426192:	xor    bh,BYTE PTR [ebp+0x6a]
  426195:	es fsub st(1),st
  426198:	les    esi,FWORD PTR [edi]
  42619a:	add    DWORD PTR [eax],eax
  42619c:	cwde   
  42619d:	cli    
  42619e:	or     BYTE PTR [eax+0x75fb7018],al
  4261a4:	pop    edi
  4261a5:	dec    esi
  4261a6:	neg    bl
  4261a8:	aaa    
  4261a9:	pop    esp
  4261aa:	(bad)  
  4261ab:	push   DWORD PTR [eax+eax*2]
  4261ae:	mov    ecx,0x2eefa237
  4261b3:	push   ss
  4261b4:	lods   al,BYTE PTR ds:[esi]
  4261b5:	pop    ss
  4261b6:	mov    eax,ds:0xfec5f769
  4261bb:	push   DWORD PTR [edi]
  4261bd:	pop    esi
  4261be:	inc    ebx
  4261bf:	hlt    
  4261c0:	mov    dl,0xe9
  4261c2:	mov    DWORD PTR [ecx],0xe8555b37
  4261c8:	add    BYTE PTR [eax],al
  4261ca:	ret    
  4261cb:	leave  
  4261cc:	stos   DWORD PTR es:[edi],eax
  4261cd:	sti    
  4261ce:	fcomp  QWORD PTR [eax+esi*8-0x41]
  4261d2:	mov    ebx,0xd9ff391a
  4261d7:	lahf   
  4261d8:	call   0x46f:0x97f77a87
  4261df:	sub    DWORD PTR [edx+0x45],edi
  4261e2:	iret   
  4261e3:	stos   BYTE PTR es:[edi],al
  4261e4:	ja     0x42625b
  4261e6:	mov    DWORD PTR [edx-0xe],0x7649b189
  4261ed:	inc    ebp
  4261ee:	mov    ds:0x1174c485,eax
  4261f3:	je     0x426228
  4261f5:	call   0x78be1e1b
  4261fa:	inc    eax
  4261fb:	mov    ch,0x12
  4261fd:	(bad)  
  4261fe:	hlt    
  4261ff:	xor    dl,BYTE PTR [ebp+0x53]
  426202:	sub    BYTE PTR [edi+0x12],0x12
  426206:	neg    DWORD PTR [edx-0x7f]
  426209:	les    eax,FWORD PTR [ebx-0x20]
  42620c:	mov    ebp,0x7e193974
  426211:	ret    
  426212:	jl     0x42626f
  426214:	(bad)  
  426215:	call   FWORD PTR [eax+ebp*1]
  426218:	popf   
  426219:	outs   dx,BYTE PTR ds:[esi]
  42621a:	push   edi
  42621b:	jne    0x426207
  42621d:	push   0xffffc541
  426222:	aaa    
  426223:	xor    al,0xe7
  426225:	ss inc ebx
  426227:	sub    al,0x15
  426229:	mov    eax,0x465f4aa1
  42622e:	add    BYTE PTR [eax],al
  426230:	pop    ds
  426231:	fisub  WORD PTR [edi-0x17cbc938]
  426237:	add    BYTE PTR [edx+0x68],dh
  42623a:	ins    DWORD PTR es:[edi],dx
  42623b:	jge    0x426225
  42623d:	xor    eax,0x5c6503e8
  426242:	shr    DWORD PTR [ebp+edi*8+0x6f],cl
  426246:	dec    edi
  426247:	add    DWORD PTR [ecx+0x74],ecx
  42624a:	fs ret 
  42624c:	imul   edi,DWORD PTR [esi],0x53
  42624f:	fistp  QWORD PTR ds:[ebx-0x1623645b]
  426256:	cmp    ebx,DWORD PTR [ebx-0x53c53d23]
  42625c:	int3   
  42625d:	jmp    0xb21ffd9d
  426262:	sub    ch,BYTE PTR [edx+esi*4-0x664e817]
  426269:	lock sbb DWORD PTR [esp+ebp*4-0xd87f807],ebp
  426271:	push   ebx
  426272:	imul   eax,eax,0x3e83588
  426278:	pusha  
  426279:	stc    
  42627a:	add    edi,esp
  42627c:	adc    bh,BYTE PTR [ebx]
  42627e:	repnz stos DWORD PTR es:[edi],eax
  426280:	mov    WORD PTR [ebx+0x7e],ds
  426283:	jle    0x42627f
  426285:	cmp    edx,DWORD PTR [edi]
  426287:	stos   DWORD PTR es:[edi],eax
  426288:	out    0xbc,eax
  42628a:	pop    ebp
  42628b:	mov    ah,0x5f
  42628d:	ret    
  42628e:	gs stos BYTE PTR es:[edi],al
  426290:	ins    BYTE PTR es:[edi],dx
  426291:	mov    ebx,0x7dd8
  426296:	jmp    0xf6:0xe3b2ff57
  42629d:	sub    DWORD PTR [edi],edi
  42629f:	out    0x0,al
  4262a1:	repz mov cl,0xaf
  4262a4:	jmp    0x440389ec
  4262a9:	mul    cl
  4262ab:	add    edi,edx
  4262ad:	hlt    
  4262ae:	inc    eax
  4262af:	inc    edx
  4262b0:	inc    ecx
  4262b1:	jmp    0x644fda67
  4262b6:	sti    
  4262b7:	out    0xa,eax
  4262b9:	cs mov dl,0x71
  4262bc:	(bad)  
  4262bd:	call   0xf47896f6
  4262c2:	or     al,0xe1
  4262c4:	loopne 0x426248
  4262c6:	es mov ah,0x7b
  4262c9:	icebp  
  4262ca:	xor    al,0xe8
  4262cc:	or     DWORD PTR [esi+0x26],ebx
  4262cf:	pop    eax
  4262d0:	xchg   BYTE PTR [esp+ebp*8+0x34e14374],ch
  4262d7:	pop    esp
  4262d8:	sbb    BYTE PTR [ebx-0x73],0x6a
  4262dc:	cli    
  4262dd:	mov    ah,0xb0
  4262df:	pop    ebx
  4262e0:	jo     0x426356
  4262e2:	popf   
  4262e3:	push   0xffffff8c
  4262e5:	mov    ah,0x84
  4262e7:	pop    ebx
  4262e8:	les    esp,FWORD PTR [ebp-0x5b3c9572]
  4262ee:	loope  0x426324
  4262f0:	cli    
  4262f1:	pushf  
  4262f2:	jo     0x42634f
  4262f4:	pop    esp
  4262f5:	dec    esp
  4262f6:	int    0x6a
  4262f8:	xchg   DWORD PTR [eax+eax*1+0x5b0ac900],ebp
  4262ff:	mov    ds:0xe905add3,al
  426304:	out    0xb6,eax
  426306:	in     eax,dx
  426307:	push   0xffffff9f
  426309:	add    ecx,DWORD PTR [esi+0x3f]
  42630c:	in     al,0xb6
  42630e:	jl     0x426301
  426310:	icebp  
  426311:	xor    al,BYTE PTR [esi+0x133ec69]
  426317:	jmp    0x12f5bff
  42631c:	jecxz  0x426311
  42631e:	in     al,0x50
  426320:	xor    cx,WORD PTR [esi+edi*8-0x17bc107f]
  426328:	(bad)  [edx+0x74]
  42632b:	pop    es
  42632c:	pop    esp
  42632d:	jb     0x426317
  42632f:	in     eax,dx
  426330:	pop    ds
  426331:	xor    al,BYTE PTR [ecx]
  426333:	mov    ecx,DWORD PTR [ebx-0x6c]
  426336:	jp     0x42639d
  426338:	mov    esi,0xffe7a31
  42633d:	and    al,0x47
  42633f:	lea    ebx,[ecx+0x40]
  426342:	push   ecx
  426343:	mov    DWORD PTR [ebx-0x68],ebx
  426346:	not    BYTE PTR ds:0x4147a6
  42634c:	lea    edx,[esi*8+0x75a35b00]
  426353:	xor    BYTE PTR [ebx-0x6],dl
  426356:	add    al,0x8b
  426358:	repz leave 
  42635a:	jp     0x426323
  42635c:	loope  0x4263ad
  42635e:	adc    eax,0xad000057
  426363:	call   0x8300:0xf1e81414
  42636a:	sbb    ah,BYTE PTR [ebp-0x7b]
  42636d:	rcr    BYTE PTR [edx+0x4a45f641],0xb8
  426374:	mov    esi,0x1319fdb
  426379:	cmp    ebx,ecx
  42637b:	popf   
  42637c:	imul   esp,ecx,0x45
  42637f:	xor    eax,DWORD PTR [edx+0x43e98a45]
  426385:	lock sbb DWORD PTR ds:0x756bffe1,0xb88e400b
  426390:	fs hlt 
  426392:	pop    esi
  426393:	out    0x4,al
  426395:	ss aaa 
  426397:	popf   
  426398:	cmp    dh,bh
  42639a:	aaa    
  42639b:	fadd   st,st(4)
  42639d:	or     esi,DWORD PTR [ebx+0x37fffe30]
  4263a3:	loop   0x4263de
  4263a5:	hlt    
  4263a6:	xor    al,0x20
  4263a8:	mov    ch,0x2f
  4263aa:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4263ac:	scas   eax,DWORD PTR es:[edi]
  4263ad:	das    
  4263ae:	ja     0x4263f1
  4263b0:	jmp    DWORD PTR [ecx-0x42]
  4263b3:	pop    ss
  4263b4:	jno    0x42640f
  4263b6:	mov    edx,0xccef6f47
  4263bb:	xor    al,0x5c
  4263bd:	xchg   ebp,edi
  4263bf:	inc    ebx
  4263c0:	int3   
  4263c1:	xlat   BYTE PTR ds:[ebx]
  4263c2:	ss pop ebx
  4263c4:	(bad)  
  4263c5:	inc    BYTE PTR [eax]
  4263c7:	add    BYTE PTR [ebx-0x4d],ch
  4263ca:	jbe    0x426421
  4263cc:	pop    ss
  4263cd:	xor    eax,0x5b507784
  4263d2:	sub    ah,BYTE PTR ds:0x6246595d
  4263d8:	mov    esi,0xa90b6a9f
  4263dd:	cdq    
  4263de:	(bad)  
  4263df:	popa   
  4263e0:	lods   al,BYTE PTR ds:[esi]
  4263e1:	mov    eax,ds:0xfbf661e1
  4263e6:	cld    
  4263e7:	popa   
  4263e8:	cmp    al,0x1c
  4263ea:	pop    ds
  4263eb:	mov    DWORD PTR [edx-0x1b],edi
  4263ee:	jno    0x42642f
  4263f0:	adc    al,0xc1
  4263f2:	cli    
  4263f3:	dec    edi
  4263f4:	ret    0x6697
  4263f7:	out    0x59,eax
  4263f9:	mov    ebp,0x5b5e7785
  4263fe:	stc    
  4263ff:	sbb    ecx,0x5a
  426402:	(bad)  
  426403:	call   FWORD PTR ds:0xbe624686
  426409:	lahf   
  42640a:	push   0xb
  42640c:	leave  
  42640d:	cdq    
  42640e:	in     al,dx
  42640f:	popa   
  426410:	lods   al,BYTE PTR ds:[esi]
  426411:	xor    ebp,DWORD PTR [edi]
  426413:	jmp    0x4263eb
  426415:	jb     0x4263e0
  426417:	sti    
  426418:	(bad)  
  426419:	cmp    BYTE PTR [ecx-0x6e0951df],ch
  42641f:	jbe    0x426439
  426421:	sbb    ecx,DWORD PTR [esi+0x14]
  426424:	out    0xbe,eax
  426426:	and    eax,0xdd6ce768
  42642b:	adc    eax,DWORD PTR [eax]
  42642d:	add    BYTE PTR ds:0x85f8e7f4,ah
  426433:	neg    BYTE PTR [ebx-0x7c]
  426436:	sti    
  426437:	cmp    BYTE PTR [esi],cl
  426439:	add    ebx,DWORD PTR [edi]
  42643b:	mov    edx,0x3c1ca8f5
  426440:	push   edx
  426441:	ret    
  426442:	xchg   DWORD PTR [ecx+0xc1fd3fd],edi
  426448:	fild   QWORD PTR [eax-0x680293f4]
  42644e:	mov    dl,0xf1
  426450:	xor    ebx,DWORD PTR [ebx]
  426452:	lahf   
  426453:	cs call 0x50bd1c5c
  426459:	stos   BYTE PTR es:[edi],al
  42645a:	dec    edx
  42645b:	imul   edx,DWORD PTR [ebx+0x7f],0xfffffff7
  42645f:	loopne 0x426451
  426461:	test   al,0x62
  426463:	pop    eax
  426464:	outs   dx,DWORD PTR ds:[esi]
  426465:	dec    esi
  426466:	inc    ebx
  426467:	fdivr  st(7),st
  426469:	cs aaa 
  42646b:	xor    al,0xbe
  42646d:	(bad)  
  42646e:	push   0xcd9b1abf
  426473:	adc    al,0x23
  426475:	test   al,0xbb
  426477:	je     0x42640e
  426479:	inc    edi
  42647a:	mov    al,0xf1
  42647c:	pop    es
  42647d:	jmp    0xe1b1:0xeb9563fb
  426484:	out    dx,eax
  426485:	jbe    0x426494
  426487:	dec    esp
  426488:	xchg   ebx,eax
  426489:	test   al,0x22
  42648b:	mov    WORD PTR [ecx],es
  42648d:	fcomi  st,st(4)
  42648f:	xor    esp,DWORD PTR [edi-0x2b]
  426492:	add    BYTE PTR [eax],al
  426494:	mov    bl,0xab
  426496:	or     ch,BYTE PTR [edx-0x4f]
  426499:	xor    BYTE PTR [esi+0x37],cl
  42649c:	nop
  42649d:	inc    ecx
  42649e:	adc    eax,0x7e33f4ff
  4264a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264a4:	pop    edi
  4264a5:	mov    al,0xc1
  4264a7:	cmp    al,0x4e
  4264a9:	rcl    DWORD PTR [ecx+ebx*1],1
  4264ac:	stc    
  4264ad:	outs   dx,BYTE PTR ds:[esi]
  4264ae:	adc    al,0xd1
  4264b0:	xor    dh,ah
  4264b2:	add    BYTE PTR [edx+0x77],ch
  4264b5:	cmp    BYTE PTR [edx-0x5a],dl
  4264b8:	inc    esi
  4264b9:	mov    BYTE PTR [edi],cl
  4264bb:	sub    DWORD PTR [ebx],esi
  4264bd:	mov    ecx,0xeac3b974
  4264c2:	sbb    al,0x8e
  4264c4:	shl    BYTE PTR [edx-0xf27728c],1
  4264ca:	hlt    
  4264cb:	ins    BYTE PTR es:[edi],dx
  4264cc:	aaa    
  4264cd:	cmp    BYTE PTR es:[edi+eax*8],ch
  4264d1:	ds jg  0x426469
  4264d4:	shr    DWORD PTR [esi-0x6],1
  4264d7:	push   edx
  4264d8:	xor    dl,dl
  4264da:	add    BYTE PTR [esi+0x26],bl
  4264dd:	pop    eax
  4264de:	mov    WORD PTR [esp+eax*1+0x44d4fa04],gs
  4264e5:	pop    esp
  4264e6:	xor    BYTE PTR ds:0xa4896e98,cl
  4264ec:	popf   
  4264ed:	daa    
  4264ee:	add    BYTE PTR [ecx+eiz*8+0x3fe17cb1],bh
  4264f5:	out    0x18,eax
  4264f7:	mov    edi,0x40d90000
  4264fc:	fsincos 
  4264fe:	hlt    
  4264ff:	xor    esp,DWORD PTR [edi-0x3]
  426502:	mov    ch,0xaa
  426504:	or     bh,BYTE PTR [edx+0x576b5]
  42650a:	mov    cl,0x91
  42650c:	adc    al,0x10
  42650e:	pusha  
  42650f:	test   BYTE PTR [eax],0x83
  426512:	push   edx
  426513:	ins    BYTE PTR es:[edi],dx
  426514:	push   eax
  426515:	jmp    DWORD PTR [ebx+0x72]
  426518:	or     eax,DWORD PTR [eax+0x5e]
  42651b:	jmp    0x426590
  42651d:	rol    BYTE PTR [esi-0x7600e972],1
  426523:	xchg   ecx,eax
  426524:	je     0x42650e
  426526:	jbe    0x426585
  426528:	mov    bl,0xfe
  42652a:	jns    0x426518
  42652c:	inc    ebx
  42652d:	sti    
  42652e:	sub    edx,esi
  426530:	push   ecx
  426531:	leave  
  426532:	mov    WORD PTR [edx-0x6],fs
  426535:	push   esp
  426536:	aad    0xc2
  426538:	jp     0x426526
  42653a:	xor    dh,BYTE PTR [edi-0x4e10b9c]
  426540:	cmp    DWORD PTR [esi+0x12],0x780ff6b5
  426547:	mov    ebp,0xb71e0001
  42654c:	fs clc 
  42654e:	push   ds
  42654f:	pop    es
  426550:	arpl   WORD PTR [eax],di
  426552:	and    eax,0xff044a9
  426557:	add    DWORD PTR ss:[eax],eax
  42655a:	addr16 cld 
  42655c:	in     al,dx
  42655d:	mov    eax,DWORD PTR [eax]
  42655f:	add    al,dl
  426561:	ss inc esp
  426563:	clc    
  426564:	jbe    0x42658a
  426566:	add    al,0x0
  426568:	into   
  426569:	jmp    0xef18db2e
  42656e:	inc    ebx
  42656f:	hlt    
  426570:	inc    ebp
  426571:	lahf   
  426572:	jmp    0x1783812
  426577:	call   FWORD PTR [ebx+0x4e4df699]
  42657d:	mov    BYTE PTR [ebp-0x14],bl
  426580:	xchg   esp,edi
  426582:	clc    
  426583:	jmp    0x4265bc
  426585:	call   0xfc40:0xd4a74577
  42658c:	dec    esp
  42658d:	sbb    ch,BYTE PTR [ecx]
  42658f:	cmp    eax,0x8791e8bc
  426594:	cmp    esi,edx
  426596:	cmp    al,bh
  426598:	stos   BYTE PTR es:[edi],al
  426599:	mov    DWORD PTR ds:0x4f66dd08,0xf651f38d
  4265a3:	dec    edi
  4265a4:	pusha  
  4265a5:	push   0x5af7120a
  4265aa:	add    esp,0x75c4d843
  4265b0:	cmp    dh,ah
  4265b2:	cmp    esp,edi
  4265b4:	lods   al,BYTE PTR ds:[esi]
  4265b5:	xchg   ecx,eax
  4265b6:	popf   
  4265b7:	pop    eax
  4265b8:	xor    ebx,DWORD PTR [ebx-0x2]
  4265bb:	cli    
  4265bc:	or     BYTE PTR [edi+0x1028f6d8],0xa9
  4265c3:	xchg   DWORD PTR [eax],eax
  4265c5:	add    BYTE PTR [edx-0x41],bh
  4265c8:	add    bh,dh
  4265ca:	pop    esp
  4265cb:	adc    DWORD PTR [ecx],eax
  4265cd:	jl     0x4265c8
  4265cf:	mov    cl,0x3a
  4265d1:	hlt    
  4265d2:	mov    esp,0x7afafa68
  4265d7:	jmp    0x4265d6
  4265d9:	pop    esp
  4265da:	or     ebx,DWORD PTR [ebx+eax*2-0x8]
  4265de:	cs push eax
  4265e0:	stos   BYTE PTR es:[edi],al
  4265e1:	or     edi,DWORD PTR [ebx-0x1f045aab]
  4265e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265e8:	inc    ebp
  4265e9:	leave  
  4265ea:	hlt    
  4265eb:	mov    al,ds:0x19bcf079
  4265f0:	popf   
  4265f1:	in     al,dx
  4265f2:	xor    ebx,DWORD PTR [ebx-0x2]
  4265f5:	xor    edi,0xffffffa6
  4265f8:	add    eax,0x4e53708d
  4265fd:	call   0x42e99dc
  426602:	aaa    
  426603:	scas   eax,DWORD PTR es:[edi]
  426604:	sub    BYTE PTR [ebx],ch
  426606:	xor    DWORD PTR [ebp+0x5b6d792b],edi
  42660c:	ret    0x3702
  42660f:	xor    al,0x6c
  426611:	les    eax,FWORD PTR [edx]
  426613:	das    
  426614:	mov    bh,0xc3
  426616:	test   DWORD PTR [ecx],0x9b8f127
  42661c:	daa    
  42661d:	dec    edi
  42661e:	mov    eax,0x5513957
  426623:	add    DWORD PTR [ebp+0x3e],ebp
  426626:	arpl   WORD PTR [ebx],ax
  426628:	inc    eax
  426629:	mov    es,WORD PTR [eax]
  42662b:	add    BYTE PTR [edi],dh
  42662d:	xor    al,0xe8
  42662f:	fwait
  426630:	jle    0x42661f
  426632:	shl    DWORD PTR [eax+esi*4+0x8adf76b],0x6a
  42663a:	cmp    al,0xd
  42663c:	mov    al,0xee
  42663e:	stos   DWORD PTR es:[edi],eax
  42663f:	sbb    DWORD PTR [edi+0x23],ebp
  426642:	mov    dh,0x4a
  426644:	and    al,0x66
  426646:	(bad)  
  426648:	stos   BYTE PTR es:[edi],al
  426649:	cmp    eax,0xe31b36d1
  42664e:	jecxz  0x4266c8
  426650:	out    dx,eax
  426651:	pop    ebx
  426652:	out    dx,eax
  426653:	dec    esp
  426654:	pop    ds
  426655:	inc    edx
  426656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426658:	cld    
  426659:	mov    ebx,0x6748a815
  42665e:	scas   eax,DWORD PTR es:[edi]
  42665f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426660:	imul   ebp,DWORD PTR ds:0xe836a867,0x13
  426667:	sbb    ch,BYTE PTR [edi]
  426669:	pop    esp
  42666a:	dec    eax
  42666b:	push   0xffffffdd
  42666d:	movsx  ecx,BYTE PTR [bp+di+0x2f]
  426672:	jno    0x426667
  426674:	mov    edi,0xc778e3e4
  426679:	mov    cl,0x1
  42667b:	aas    
  42667c:	or     BYTE PTR [edx-0x78],cl
  42667f:	out    dx,eax
  426680:	sub    eax,0x1a11050a
  426685:	push   0xfffffffa
  426687:	push   ds
  426688:	mov    bh,0xea
  42668a:	add    al,0xe8
  42668c:	push   ecx
  42668d:	cs cli 
  42668f:	xlat   BYTE PTR ds:[ebx]
  426690:	add    BYTE PTR [eax],al
  426692:	lods   al,BYTE PTR ds:[esi]
  426693:	jle    0x42664d
  426695:	pop    es
  426696:	rol    DWORD PTR [edx],cl
  426698:	out    0xe4,al
  42669a:	push   DWORD PTR [ecx-0x1a]
  42669d:	loope  0x42668a
  42669f:	pop    ebx
  4266a0:	int3   
  4266a1:	xor    BYTE PTR [edx-0xb56d195],bl
  4266a7:	or     DWORD PTR [esi-0x50],edx
  4266aa:	js     0x4266ad
  4266ac:	xchg   ch,al
  4266ae:	and    dh,bh
  4266b0:	push   ecx
  4266b1:	sbb    dl,BYTE PTR [edi+edx*1+0x681670d6]
  4266b8:	cmp    BYTE PTR [edi],bh
  4266ba:	das    
  4266bb:	jmp    0x47c3:0x672d622b
  4266c2:	mov    eax,0x4ee920eb
  4266c7:	dec    ebp
  4266c8:	addr16 in eax,0xb9
  4266cb:	jae    0x4266ea
  4266cd:	cmp    esp,edx
  4266cf:	loopne 0x4266d9
  4266d1:	mov    cs,WORD PTR [esi]
  4266d3:	inc    ebx
  4266d4:	adc    ebp,DWORD PTR [ecx]
  4266d6:	xor    esp,edi
  4266d8:	(bad)  
  4266d9:	in     eax,dx
  4266da:	scas   eax,DWORD PTR es:[edi]
  4266db:	jae    0x426751
  4266dd:	jmp    0x72b8:0x2afcf0d5
  4266e4:	cmp    DWORD PTR [edx],esp
  4266e6:	jne    0x426718
  4266e8:	jge    0x426724
  4266ea:	mov    al,0xf0
  4266ec:	cld    
  4266ed:	mov    dh,0x19
  4266ef:	jge    0x4266b0
  4266f1:	in     eax,0x34
  4266f3:	add    DWORD PTR [esi+0x62000000],eax
  4266f9:	and    DWORD PTR [edx+0x57],ecx
  4266fc:	mov    ebp,0x57db2a91
  426701:	adc    eax,0x2ee039fd
  426706:	ja     0x426735
  426708:	and    eax,0xb8c6fa3a
  42670d:	lods   eax,DWORD PTR ds:[esi]
  42670e:	jns    0x426744
  426710:	mov    cs,WORD PTR [eax+ebx*1+0x6a]
  426714:	mov    gs,WORD PTR [ebp-0x6e51db3f]
  42671a:	je     0x426724
  42671c:	sub    DWORD PTR [ebx+0xe],0x7a32ce16
  426723:	les    edx,FWORD PTR [edx+0x5d75c1bb]
  426729:	xchg   ecx,eax
  42672a:	inc    esp
  42672b:	cld    
  42672c:	or     eax,0x4538beaf
  426731:	repnz add al,0x7c
  426734:	lea    esi,[ebp+0x2711fc44]
  42673a:	enter  0x5ac2,0x32
  42673e:	dec    edi
  42673f:	push   edi
  426740:	aad    0xca
  426742:	mov    WORD PTR [edi+0x2],es
  426745:	mov    bh,0xf0
  426747:	push   eax
  426748:	(bad)  
  426749:	adc    dh,dh
  42674b:	inc    ecx
  42674d:	scas   al,BYTE PTR es:[edi]
  42674e:	stc    
  42674f:	add    al,BYTE PTR [ebx+0x5e]
  426752:	jnp    0x42671b
  426754:	cli    
  426755:	sub    ch,cl
  426757:	fwait
  426758:	mov    cl,0x92
  42675a:	test   BYTE PTR [ebx+0x2fb60000],0x7c
  426761:	add    al,0xbd
  426763:	jno    0x426747
  426765:	add    ebp,DWORD PTR [ebp-0xfa0be8f]
  42676b:	outs   dx,BYTE PTR ds:[esi]
  42676c:	add    BYTE PTR [edx+edi*1+0x38],0x82
  426771:	dec    esp
  426772:	aaa    
  426773:	aaa    
  426774:	adc    DWORD PTR [edi+0x498b4f77],eax
  42677a:	xor    esi,DWORD PTR [edx]
  42677c:	les    esi,FWORD PTR [ebp+0x34]
  42677f:	push   0xffffffbe
  426781:	mov    edi,0xe0831b1c
  426786:	mov    cl,0x9b
  426788:	ret    
  426789:	data16 aaa 
  42678b:	ret    
  42678c:	mov    esp,0x2c5af538
  426791:	cmp    BYTE PTR [eax+0x47fb02cb],bl
  426797:	xor    esp,DWORD PTR [edi]
  426799:	lds    esi,FWORD PTR [edi]
  42679b:	pop    ebx
  42679c:	add    esp,0x2b
  42679f:	sbb    cl,BYTE PTR [ebx-0x74b0acbc]
  4267a5:	dec    esp
  4267a6:	sbb    edx,DWORD PTR [ebx+0x38]
  4267a9:	xchg   ebx,esp
  4267ab:	ss or  eax,0xc4da29fb
  4267b1:	or     BYTE PTR [edi],al
  4267b3:	fidivr DWORD PTR [ebp+0x3f85f08]
  4267b9:	add    BYTE PTR [edi],dh
  4267bb:	fistp  DWORD PTR [esi]
  4267bd:	add    al,0x37
  4267bf:	inc    ebp
  4267c0:	adc    bh,dh
  4267c2:	add    BYTE PTR [eax],al
  4267c4:	inc    ecx
  4267c5:	ret    
  4267c6:	les    edx,FWORD PTR [ebp-0x44]
  4267c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267ca:	test   ah,ch
  4267cc:	inc    edi
  4267cd:	and    eax,0x14acf08c
  4267d2:	or     DWORD PTR [ebx-0x54],edx
  4267d5:	aas    
  4267d6:	or     eax,0x2d4f81ff
  4267db:	leave  
  4267dc:	dec    edi
  4267dd:	ret    
  4267de:	mov    dl,0xb3
  4267e0:	add    esi,esp
  4267e2:	mov    al,al
  4267e4:	sub    bh,dl
  4267e6:	jno    0x4267e8
  4267e8:	aaa    
  4267e9:	pop    ebx
  4267ea:	lea    eax,[edx+0x33]
  4267ed:	xor    al,0xb7
  4267ef:	aam    0x9
  4267f1:	mov    ebx,0x6ae93a5
  4267f6:	pop    esp
  4267f7:	fld    TBYTE PTR [ebp+0x30]
  4267fa:	retf   0xbe19
  4267fd:	push   es
  4267fe:	inc    eax
  4267ff:	lods   eax,DWORD PTR ds:[esi]
  426800:	shl    DWORD PTR [ecx],0x1f
  426803:	(bad)  
  426804:	cld    
  426805:	xor    BYTE PTR [ebp+0x2c06be9b],dh
  42680b:	fisttp DWORD PTR [ebx]
  42680d:	mov    fs:0x6d2db9eb,al
  426813:	dec    eax
  426814:	cwde   
  426815:	sub    al,0x7e
  426817:	test   DWORD PTR [eax],0xe70ba3b7
  42681d:	fs (bad) 
  426820:	es hlt 
  426822:	out    0x84,eax
  426824:	jae    0x42685d
  426826:	ins    DWORD PTR es:[edi],dx
  426827:	les    eax,FWORD PTR [eax]
  426829:	add    bl,ch
  42682b:	pop    es
  42682c:	jmp    0x426874
  42682e:	imul   edi,DWORD PTR [eax+0x70e0a02d],0x20
  426835:	(bad)  
  426837:	arpl   WORD PTR [esp+edi*4-0x48],dx
  42683b:	ins    BYTE PTR es:[edi],dx
  42683c:	pop    edi
  42683d:	rcr    DWORD PTR [edi+0x30],1
  426840:	ret    
  426841:	mov    al,ds:0x16a8af3c
  426846:	and    BYTE PTR [ecx+0x75b80822],bh
  42684c:	aas    
  42684d:	les    ebp,FWORD PTR [edi+0x37]
  426850:	jmp    0xae34:0x32f55f2d
  426857:	bnd jmp 0x4267fa
  42685a:	sub    al,BYTE PTR [edx+esi*8+0x43]
  42685e:	aaa    
  42685f:	mov    bh,0xac
  426861:	paddb  mm7,mm1
  426864:	jae    0x4267f2
  426866:	jp     0x426894
  426868:	add    DWORD PTR [edx+0x79],esp
  42686b:	push   0x1ccb247e
  426870:	ss scas al,BYTE PTR es:[edi]
  426872:	cmp    al,ah
  426874:	mov    DWORD PTR [edx-0x7a],esi
  426877:	cmp    BYTE PTR [esi+0x20],ah
  42687a:	in     al,dx
  42687b:	pop    ebx
  42687c:	ss xchg esi,eax
  42687e:	xchg   esi,eax
  42687f:	pop    edi
  426880:	mov    cl,0xe8
  426882:	add    edi,edi
  426884:	pop    edx
  426885:	xor    dl,dh
  426887:	cmp    BYTE PTR [ecx],al
  426889:	(bad)  
  42688a:	stc    
  42688b:	pop    edi
  42688c:	test   BYTE PTR [ecx],ch
  42688e:	add    BYTE PTR [eax],al
  426890:	dec    esp
  426891:	fwait
  426892:	addr16 jmp 0xe9ebb4f6
  426898:	xor    al,0x34
  42689a:	out    0x20,al
  42689c:	mov    ah,0xe0
  42689e:	and    al,0xe5
  4268a0:	xor    al,0x6
  4268a2:	push   edx
  4268a3:	jb     0x426841
  4268a5:	mov    ebx,0x4c2c75f0
  4268aa:	jl     0x426840
  4268ac:	xchg   esi,eax
  4268ad:	pop    edi
  4268ae:	mov    BYTE PTR [esi-0x2e3c44d0],ah
  4268b4:	clc    
  4268b5:	pusha  
  4268b6:	cli    
  4268b7:	fisubr WORD PTR [edi+0x66ed7474]
  4268bd:	mov    ds:0xeebdfce6,eax
  4268c2:	add    al,0x28
  4268c4:	or     al,0x6d
  4268c6:	cmp    ecx,edx
  4268c8:	mov    ds:0xbfb6fba6,al
  4268cd:	jae    0x426944
  4268cf:	mov    ebp,0x7204edbc
  4268d4:	cli    
  4268d5:	fcmovb st,st(0)
  4268d7:	loope  0x42690e
  4268d9:	sar    DWORD PTR ss:[bp+di+0x7],1
  4268de:	push   ecx
  4268df:	pusha  
  4268e0:	jns    0x42691a
  4268e2:	cli    
  4268e3:	add    bl,ah
  4268e5:	data16 adc BYTE PTR [eax+0xe],al
  4268e9:	mov    dh,0xc5
  4268eb:	or     al,0x2e
  4268ed:	cmp    DWORD PTR [esi+0x5e],edx
  4268f0:	pushf  
  4268f1:	sub    eax,DWORD PTR [ecx]
  4268f3:	push   ebp
  4268f4:	add    BYTE PTR [eax],al
  4268f6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4268f8:	jp     0x4268e6
  4268fa:	mov    gs,WORD PTR [eax]
  4268fc:	mov    WORD PTR [ebp+0x22],?
  4268ff:	nop
  426900:	lea    eax,[ebx]
  426902:	fidiv  WORD PTR [esi]
  426904:	or     BYTE PTR [ebp-0x3a],0xc
  426908:	add    BYTE PTR [ebx-0x796ff0],cl
  42690e:	imul   eax,ebx,0x2c5cc957
  426914:	add    DWORD PTR [esi-0x1f],edx
  426917:	lods   eax,DWORD PTR ds:[esi]
  426918:	stc    
  426919:	mov    edi,DWORD PTR [edi]
  42691b:	nop
  42691c:	pop    es
  42691d:	pop    ebp
  42691e:	sub    bl,al
  426920:	mov    BYTE PTR [edi-0x6e],al
  426923:	lods   eax,DWORD PTR ds:[esi]
  426924:	mov    edx,0xf69456e8
  426929:	call   DWORD PTR [edx]
  42692b:	js     0x4269a2
  42692d:	adc    al,0xb5
  42692f:	enter  0x339,0xad
  426933:	or     al,0x39
  426935:	push   edi
  426936:	and    bl,al
  426938:	adc    al,0x10
  42693a:	pusha  
  42693b:	test   BYTE PTR [eax],0x83
  42693e:	mov    ds:0x1901b132,al
  426943:	and    bh,BYTE PTR [edx+0x5092c555]
  426949:	mov    ecx,DWORD PTR [ebx]
  42694b:	xor    BYTE PTR [edx-0x40],ah
  42694e:	es aaa 
  426950:	add    BYTE PTR [esi-0x63],ah
  426953:	inc    edx
  426954:	and    DWORD PTR [eax],eax
  426956:	pop    ebp
  426957:	sub    al,BYTE PTR [edx-0x2fffff28]
  42695d:	in     al,dx
  42695e:	cmc    
  42695f:	add    BYTE PTR [edi],dh
  426961:	aas    
  426962:	cmp    esp,DWORD PTR [esi+0x33]
  426965:	add    BYTE PTR [ebx],dl
  426967:	sbb    al,0xb2
  426969:	push   cs
  42696a:	add    DWORD PTR [edx+0x67],edx
  42696d:	loop   0x426967
  42696f:	adc    ecx,DWORD PTR [ecx+0xb]
  426972:	add    eax,0x897ff37f
  426977:	shr    BYTE PTR [ebx+0x4a],0x33
  42697b:	xchg   DWORD PTR [edx+0x63],esp
  42697e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42697f:	cmp    al,0xd2
  426981:	or     bl,BYTE PTR [ebx+0xb4dcf7f]
  426987:	popf   
  426988:	test   edi,0x330375bd
  42698e:	dec    eax
  42698f:	or     al,0x2a
  426991:	jle    0x4269bb
  426993:	add    al,0xba
  426995:	call   0x4ffa:0x8eb24ffa
  42699c:	cwde   
  42699d:	push   0x4af711ee
  4269a2:	jg     0x426968
  4269a4:	cmp    ebx,DWORD PTR [ecx]
  4269a6:	dec    ecx
  4269a7:	sti    
  4269a8:	ss push 0x53
  4269ab:	inc    ebx
  4269ac:	push   edi
  4269ad:	mov    ecx,0xdf173edd
  4269b2:	or     eax,DWORD PTR [eax+0x74fe7eea]
  4269b8:	cmp    esi,ecx
  4269ba:	test   DWORD PTR [edi],edi
  4269bc:	pop    ss
  4269bd:	cdq    
  4269be:	inc    edx
  4269bf:	sti    
  4269c0:	add    BYTE PTR [eax],al
  4269c2:	ss icebp 
  4269c4:	jg     0x426a41
  4269c6:	add    ecx,DWORD PTR [ebx+0x12]
  4269c9:	pop    edx
  4269ca:	int    0x7a
  4269cc:	mov    esi,DWORD PTR [ebx+0x13]
  4269cf:	sar    BYTE PTR [edi],1
  4269d1:	and    al,0x89
  4269d3:	cmp    ebx,DWORD PTR [ebp+edx*1+0x3e8943]
  4269da:	mov    ah,0x33
  4269dc:	lods   al,BYTE PTR ds:[esi]
  4269dd:	adc    BYTE PTR [edx+0x66ed1473],dh
  4269e3:	lods   eax,DWORD PTR ds:[esi]
  4269e4:	sbb    eax,0x8d411f0c
  4269e9:	popf   
  4269ea:	cld    
  4269eb:	mov    ah,0x80
  4269ed:	add    ch,BYTE PTR [edi+edi*4]
  4269f0:	test   al,0x88
  4269f2:	mul    esi
  4269f4:	mov    ebx,0xf53073db
  4269f9:	lock pop edx
  4269fb:	inc    esp
  4269fc:	jne    0x426a43
  4269fe:	adc    eax,DWORD PTR [ebp*2+0x53041b41]
  426a05:	idiv   DWORD PTR [eax]
  426a07:	dec    edx
  426a08:	test   al,0x3
  426a0a:	inc    eax
  426a0b:	js     0x426a01
  426a0d:	lds    esi,FWORD PTR [edx+0x61]
  426a10:	jmp    0xfc3b4e21
  426a15:	and    eax,0x17f3f56e
  426a1a:	sub    eax,0x370fa5b4
  426a1f:	out    0xe3,eax
  426a21:	and    eax,0xc5dbf4be
  426a26:	add    BYTE PTR [eax],al
  426a28:	repnz pusha 
  426a2a:	jmp    0xa2a364b8
  426a2f:	cmp    BYTE PTR [esi+0x75],ch
  426a32:	lock add ebx,eax
  426a35:	jae    0x4269e7
  426a37:	xor    eax,0xe5f62b0
  426a3c:	mov    dl,0x47
  426a3e:	jmp    0x4f7a5fcb
  426a43:	les    ecx,FWORD PTR [edi]
  426a45:	xor    eax,0xe567d8a9
  426a4a:	fimul  WORD PTR [esi-0x53e9e407]
  426a50:	imul   BYTE PTR [eax+0x33189cba]
  426a56:	add    ebx,edi
  426a58:	hlt    
  426a59:	mov    eax,0x5b3135c1
  426a5e:	dec    ebx
  426a5f:	in     eax,dx
  426a60:	scas   eax,DWORD PTR es:[edi]
  426a61:	jmp    0x37e9:0x1cfc1204
  426a68:	pusha  
  426a69:	pop    edx
  426a6a:	cli    
  426a6b:	das    
  426a6c:	test   BYTE PTR [ecx],0x86
  426a6f:	xchg   ebp,eax
  426a70:	scas   eax,DWORD PTR es:[edi]
  426a71:	icebp  
  426a72:	or     BYTE PTR [edx-0x60],ch
  426a75:	or     al,0x4e
  426a77:	push   ds
  426a78:	mov    eax,0x8681d909
  426a7d:	xor    al,0x1
  426a7f:	jmp    0xbf7af18b
  426a84:	cmp    dl,bl
  426a86:	sub    eax,0x3b7aa1a
  426a8b:	bound  eax,QWORD PTR [eax]
  426a8d:	add    BYTE PTR [ecx+0x2c],dh
  426a90:	mov    WORD PTR [ebp-0x6b73d3cd],gs
  426a96:	loopne 0x426ae4
  426a98:	cdq    
  426a99:	jmp    0xd5a99ed2
  426a9e:	mov    cl,0xf9
  426aa0:	in     al,dx
  426aa1:	mov    ecx,0xb9d8f9a9
  426aa6:	mov    bl,0x49
  426aa8:	adc    eax,0x7e33f4ff
  426aad:	and    eax,0x81c1b930
  426ab2:	xchg   BYTE PTR [esi],bl
  426ab4:	jle    0x426adc
  426ab6:	mov    WORD PTR [esi],fs
  426ab8:	pop    ebx
  426ab9:	in     eax,dx
  426aba:	dec    eax
  426abb:	imul   edi,DWORD PTR [esi+0x21],0xffffffc3
  426abf:	sti    
  426ac0:	push   ebp
  426ac1:	mov    al,0x71
  426ac3:	cmp    BYTE PTR [ecx],al
  426ac5:	jb     0x426b3f
  426ac7:	push   edi
  426ac8:	repz cmp ah,BYTE PTR [eax-0x7a]
  426acc:	push   edx
  426acd:	adc    ch,bh
  426acf:	aaa    
  426ad0:	jnp    0x426ad2
  426ad2:	sub    eax,DWORD PTR [edi+0x11188bf7]
  426ad8:	adc    eax,0x9335a8d
  426add:	push   eax
  426ade:	rol    DWORD PTR [ebx+0x25],1
  426ae1:	adc    al,0xd1
  426ae3:	fs push cs
  426ae5:	push   ss
  426ae6:	pop    esi
  426ae7:	cmp    BYTE PTR [edx-0x3c],bh
  426aea:	adc    dh,BYTE PTR [ecx+eax*8+0x79f5ff74]
  426af1:	mov    DWORD PTR [eax],0x587df600
  426af7:	add    al,0xf2
  426af9:	fwait
  426afa:	jp     0x426ac4
  426afc:	popa   
  426afd:	sbb    edx,DWORD PTR [edx-0x3e]
  426b00:	fidiv  DWORD PTR [edx]
  426b02:	add    bl,0x85
  426b05:	ret    
  426b06:	sub    dl,dl
  426b08:	pop    ss
  426b09:	sub    BYTE PTR ds:0x38123974,al
  426b0f:	push   eax
  426b10:	cs inc ebp
  426b12:	jmp    DWORD PTR [ebp+0x37]
  426b15:	sub    BYTE PTR ds:0xc9889574,dh
  426b1b:	push   esi
  426b1c:	push   ds
  426b1d:	rcl    DWORD PTR ds:0xaf298073,0xf1
  426b24:	push   eax
  426b25:	jns    0x426b60
  426b27:	push   esp
  426b28:	cwde   
  426b29:	sub    dh,BYTE PTR [ebp-0x10]
  426b2c:	push   ds
  426b2d:	rcl    DWORD PTR ds:0x57780b0f,0xc3
  426b34:	mov    esp,0xc956ba72
  426b39:	lods   eax,DWORD PTR ds:[esi]
  426b3a:	jmp    0x426ba6
  426b3c:	mov    cl,BYTE PTR [ebp-0x3e]
  426b3f:	sub    ebx,DWORD PTR [esi+0x19]
  426b42:	adc    DWORD PTR [edi+ecx*2],0xffffff88
  426b46:	or     cl,BYTE PTR [eax+0x4f41344a]
  426b4c:	aaa    
  426b4d:	add    BYTE PTR [ecx+0x3189e15b],dl
  426b53:	xchg   DWORD PTR [ebx-0x1f],ecx
  426b56:	inc    eax
  426b57:	or     al,0x0
  426b59:	add    BYTE PTR [edi+ebp*2-0x3c7d731a],dh
  426b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b61:	aad    0x20
  426b63:	(bad)  
  426b64:	xchg   edi,eax
  426b65:	xchg   DWORD PTR [edx+0x67],esi
  426b68:	mov    ecx,DWORD PTR [ebp+0x3f]
  426b6b:	shl    BYTE PTR [eax],1
  426b6d:	in     al,dx
  426b6e:	pop    ds
  426b6f:	(bad)  
  426b70:	xchg   edi,eax
  426b71:	sti    
  426b72:	add    BYTE PTR [edx],dh
  426b74:	icebp  
  426b75:	mov    WORD PTR [edx-0x39],?
  426b78:	lea    edi,cs:[edx-0x6d]
  426b7c:	cs sti 
  426b7e:	inc    edx
  426b7f:	jg     0x426b71
  426b81:	aas    
  426b82:	aaa    
  426b83:	retf   0xcb9
  426b86:	out    dx,al
  426b87:	or     DWORD PTR [esi],eax
  426b89:	add    BYTE PTR [edx-0x1e],ch
  426b8c:	mov    eax,ds:0x4efdb81
  426b91:	add    BYTE PTR [edi],dh
  426b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b94:	das    
  426b95:	lea    eax,[edx-0x4f0467a9]
  426b9b:	add    ecx,DWORD PTR [edi-0x2cd957d7]
  426ba1:	mov    edi,0xf410fff7
  426ba6:	(bad)
  426baa:	nop
  426bab:	rol    BYTE PTR [eax-0x68b976e0],1
  426bb1:	push   eax
  426bb2:	sub    BYTE PTR [eax+0x76],0xe
  426bb6:	test   DWORD PTR [edx+0x3],0x80d007c0
  426bbd:	and    BYTE PTR [eax],al
  426bbf:	add    BYTE PTR [ecx+0x66],ch
  426bc2:	cwde   
  426bc3:	push   eax
  426bc4:	lods   al,BYTE PTR ds:[esi]
  426bc5:	adc    eax,0x34565ea6
  426bca:	loop   0x426b65
  426bcc:	mov    WORD PTR [edx+esi*4+0x45],cs
  426bd0:	aaa    
  426bd1:	mov    eax,0xca0510a8
  426bd6:	test   DWORD PTR [esi-0x663d3f4e],0xc26f042c
  426be0:	pop    ds
  426be1:	jmp    0x426bab
  426be3:	call   0xa939:0x10a8b81c
  426bea:	stos   BYTE PTR es:[edi],al
  426beb:	lods   al,BYTE PTR ds:[esi]
  426bec:	pop    ss
  426bed:	push   ebx
  426bee:	call   0xb9f1:0x1c73b399
  426bf5:	jne    0x426b77
  426bf7:	push   cs
  426bf8:	push   ss
  426bf9:	pop    esi
  426bfa:	add    DWORD PTR [edi-0x6685c046],0xffffffec
  426c01:	add    eax,DWORD PTR [eax+0x6b5d1875]
  426c07:	push   esp
  426c08:	ss dec ecx
  426c0a:	sbb    al,0x2e
  426c0c:	sub    ecx,edx
  426c0e:	out    0x30,eax
  426c10:	int3   
  426c11:	inc    esi
  426c12:	lock icebp 
  426c14:	add    BYTE PTR [esi+edi*4],dh
  426c17:	rep stos DWORD PTR es:[edi],eax
  426c19:	mov    dh,0x64
  426c1b:	call   0x46ac:0x30985cac
  426c22:	fdiv   st,st(1)
  426c24:	add    BYTE PTR [eax],al
  426c26:	pusha  
  426c27:	xor    al,0x67
  426c29:	sar    BYTE PTR [edi],0xaf
  426c2c:	lods   eax,DWORD PTR ds:[esi]
  426c2d:	(bad)  
  426c2e:	lahf   
  426c2f:	xchg   DWORD PTR [eax],ecx
  426c31:	call   0x5c7e:0xf86dae8c
  426c38:	or     esi,DWORD PTR [edi+ecx*4]
  426c3b:	dec    dh
  426c3d:	cwde   
  426c3e:	ins    BYTE PTR es:[edi],dx
  426c3f:	and    DWORD PTR [eax],ebp
  426c41:	cmp    DWORD PTR ds:0xbb2a016b,ecx
  426c47:	push   ds
  426c48:	stc    
  426c49:	daa    
  426c4a:	repnz xor eax,DWORD PTR [ecx]
  426c4d:	pop    esp
  426c4e:	add    BYTE PTR [edx],0xbb
  426c51:	stc    
  426c52:	ja     0x426c70
  426c54:	add    DWORD PTR [edi],edi
  426c56:	sahf   
  426c57:	inc    esi
  426c58:	fsincos 
  426c5a:	hlt    
  426c5b:	xor    eax,DWORD PTR [ecx+0x3e76d304]
  426c61:	jmp    0xc1544d9a
  426c66:	push   ss
  426c67:	pop    edi
  426c68:	cli    
  426c69:	scas   al,BYTE PTR es:[edi]
  426c6a:	cwde   
  426c6b:	je     0x426ce2
  426c6d:	idiv   DWORD PTR [ebx+0x73a7fd11]
  426c73:	xor    al,0x1
  426c75:	scas   eax,DWORD PTR es:[edi]
  426c76:	add    DWORD PTR [ebx+eax*8+0x2a],esp
  426c7a:	xor    esi,DWORD PTR ds:0x7fe18653
  426c80:	movaps XMMWORD PTR [ebx],xmm6
  426c83:	(bad)  
  426c84:	mov    eax,0x11ba681
  426c89:	stos   BYTE PTR es:[edi],al
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	or     al,BYTE PTR [eax-0x17]
  426c8f:	pushf  
  426c90:	scas   eax,DWORD PTR es:[edi]
  426c91:	pop    edi
  426c92:	cli    
  426c93:	mov    ecx,0xe524e0af
  426c98:	lahf   
  426c99:	inc    ecx
  426c9a:	adc    eax,0x7e3474f7
  426c9f:	sub    eax,0xe2d96738
  426ca4:	je     0x426c9a
  426ca6:	mov    esi,0x85eb34ed
  426cab:	int3   
  426cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cad:	inc    ebp
  426cae:	inc    ecx
  426caf:	jmp    0x8797081f
  426cb4:	mov    ebp,0xad8f1ef6
  426cb9:	div    BYTE PTR [edx]
  426cbb:	or     DWORD PTR [eax+0x5f0042a8],0x27
  426cc2:	mov    WORD PTR [esi+0x66],es
  426cc5:	sub    ch,0x50
  426cc8:	xlat   BYTE PTR ds:[ebx]
  426cc9:	dec    esp
  426cca:	mov    DWORD PTR [esi+0x52],ebp
  426ccd:	mov    esp,0x2ca283ca
  426cd2:	arpl   WORD PTR [eax+esi*8],ax
  426cd5:	js     0x426d3e
  426cd7:	sbb    edx,esp
  426cd9:	sub    ecx,DWORD PTR [edi+eax*2+0x468c2743]
  426ce0:	sbb    ah,BYTE PTR [edi]
  426ce2:	not    bl
  426ce4:	add    eax,0xa468c2f
  426ce9:	and    al,0x51
  426ceb:	inc    DWORD PTR [ebx]
  426ced:	pop    edi
  426cee:	adc    BYTE PTR [eax+0x0],al
  426cf1:	add    BYTE PTR [esi],bl
  426cf3:	cmp    DWORD PTR [edx-0x3a48c8b9],eax
  426cf9:	or     al,0x30
  426cfb:	test   eax,0x5aa0203f
  426d00:	cld    
  426d01:	jae    0x426cd8
  426d03:	cmp    BYTE PTR [eax],bh
  426d05:	outs   dx,DWORD PTR ds:[esi]
  426d06:	add    eax,0xfe6a142b
  426d0b:	stos   DWORD PTR es:[edi],eax
  426d0c:	sbb    edi,DWORD PTR ds:[esi]
  426d0f:	lods   eax,DWORD PTR ds:[esi]
  426d10:	aas    
  426d11:	and    al,0x8e
  426d13:	ror    edx,0x66
  426d16:	inc    ebp
  426d17:	sbb    esp,DWORD PTR [edx]
  426d19:	adc    DWORD PTR [edx],0x2c
  426d1c:	loop   0x426d30
  426d1e:	hlt    
  426d1f:	lea    ax,[esi+0x42]
  426d23:	and    eax,0x5e83ff51
  426d28:	adc    BYTE PTR [eax-0x72],al
  426d2b:	mov    ch,0xc5
  426d2d:	or     al,0x9d
  426d2f:	jbe    0x426d8d
  426d31:	popw   es
  426d33:	sbb    dh,BYTE PTR ds:0x54275d5b
  426d39:	mov    esi,DWORD PTR [edi]
  426d3b:	jo     0x426d2b
  426d3d:	adc    edi,esi
  426d3f:	dec    esp
  426d40:	sub    BYTE PTR [edx+eax*8],dl
  426d43:	mov    DWORD PTR [esi],eax
  426d45:	push   eax
  426d46:	mov    edx,0x79500592
  426d4b:	dec    edx
  426d4c:	(bad)  
  426d4d:	cli    
  426d4e:	adc    ch,0xf7
  426d51:	pop    ss
  426d52:	sub    DWORD PTR ds:0x7f05,ecx
  426d58:	jae    0x426da2
  426d5a:	sbb    al,0x7f
  426d5c:	shr    BYTE PTR [eax*1+0x9013366],0x8d
  426d64:	js     0x426db5
  426d66:	lea    esi,cs:[ecx-0x80]
  426d6a:	cs sti 
  426d6c:	or     dh,BYTE PTR [edi+0x6]
  426d6f:	lea    esi,[ecx-0x80]
  426d72:	sub    BYTE PTR [eax],al
  426d74:	addr16 xchg edx,eax
  426d76:	scas   eax,DWORD PTR es:[edi]
  426d77:	bound  edi,QWORD PTR [edx+edx*1+0x4ffb7ee5]
  426d7e:	sbb    al,0x89
  426d80:	jno    0x426de6
  426d82:	sbb    al,0x7f
  426d84:	jo     0x426d1d
  426d86:	(bad)  
  426d87:	gs inc edi
  426d89:	pop    edi
  426d8a:	in     al,dx
  426d8b:	mov    WORD PTR [eax+0x67],?
  426d8e:	lea    esi,cs:[ecx-0x7a]
  426d92:	cs sti 
  426d94:	jmp    0xb9ce:0x3438769
  426d9b:	or     al,0xb7
  426d9d:	push   ecx
  426d9e:	add    bh,ah
  426da0:	sub    bh,al
  426da2:	cmp    edx,DWORD PTR [edi]
  426da4:	sbb    eax,0x84fb2e4b
  426da9:	into   
  426daa:	mov    ecx,0x390b640c
  426daf:	bound  ebp,QWORD PTR [esi+0x7456e791]
  426db5:	xor    al,0xb7
  426db7:	sub    eax,0x38e1c11
  426dbc:	add    BYTE PTR [eax],al
  426dbe:	in     al,0xac
  426dc0:	sbb    BYTE PTR [esi+0x43f23c22],dl
  426dc6:	aaa    
  426dc7:	lods   eax,DWORD PTR ds:[esi]
  426dc8:	stos   BYTE PTR es:[edi],al
  426dc9:	repz mov cl,0x37
  426dcc:	fsubr  st,st(5)
  426dce:	and    BYTE PTR [ebx+edi*8],dh
  426dd1:	mov    edx,0x455d7440
  426dd6:	and    eax,0x7781a915
  426ddb:	cmp    al,0x4e
  426ddd:	lock lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426de0:	sub    ecx,DWORD PTR [edi+eiz*8]
  426de3:	pop    eax
  426de4:	mov    bh,0x87
  426de6:	jne    0x426dd4
  426de8:	repnz dec esp
  426dea:	addr16 mov ch,0xa4
  426ded:	cld    
  426dee:	and    eax,0x388dcf7a
  426df3:	fisttp DWORD PTR fs:[ebp+esi*1-0x14]
  426df8:	das    
  426df9:	adc    BYTE PTR [esi-0x4b],bl
  426dfc:	nop
  426dfd:	out    dx,eax
  426dfe:	mov    esi,edx
  426e00:	std    
  426e01:	rep stos DWORD PTR es:[edi],eax
  426e03:	icebp  
  426e04:	fbstp  TBYTE PTR [ebx]
  426e06:	ret    0xcbf0
  426e09:	xor    ebp,esp
  426e0b:	test   BYTE PTR [edx],al
  426e0d:	mov    DWORD PTR [ebp+0x36],esi
  426e10:	jecxz  0x426e5f
  426e12:	ins    DWORD PTR es:[edi],dx
  426e13:	xor    eax,0x2bd7c302
  426e18:	sar    BYTE PTR [bp+di],0xd2
  426e1c:	out    dx,al
  426e1d:	ret    0xab55
  426e20:	stos   DWORD PTR es:[edi],eax
  426e21:	iret   
  426e22:	add    BYTE PTR [eax],al
  426e24:	rcl    DWORD PTR ds:0xf1c3ffbe,1
  426e2a:	jmp    0x426e5f
  426e2c:	mov    edx,0x9c33dbf0
  426e31:	test   BYTE PTR [ecx],al
  426e33:	iret   
  426e34:	scas   eax,DWORD PTR es:[edi]
  426e35:	cmc    
  426e36:	(bad)  
  426e37:	fld    QWORD PTR [edx]
  426e39:	out    dx,al
  426e3a:	std    
  426e3b:	mov    ?,WORD PTR [ebp+0x53]
  426e3e:	or     DWORD PTR [edx+0x77],ebp
  426e41:	daa    
  426e42:	arpl   dx,sp
  426e44:	jne    0x426e1b
  426e46:	xchg   DWORD PTR [esi+0x2a55fa54],esp
  426e4c:	sbb    BYTE PTR [ecx-0x6c709713],dh
  426e52:	(bad)  
  426e53:	call   0xeec6748c
  426e58:	inc    eax
  426e59:	pop    ss
  426e5a:	arpl   WORD PTR [edx+0x63],bp
  426e5d:	pop    eax
  426e5e:	outs   dx,BYTE PTR ds:[esi]
  426e5f:	push   ss
  426e60:	mov    eax,0xa3d4619e
  426e65:	pop    esp
  426e66:	jmp    0x1770e36
  426e6b:	push   ds
  426e6c:	mov    al,0xe1
  426e6e:	hlt    
  426e6f:	push   0xffffffec
  426e71:	pop    ebx
  426e72:	jmp    0xfa9d1150
  426e77:	gs hlt 
  426e79:	loopne 0x426e97
  426e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e7c:	cmp    DWORD PTR [eax-0x74],ebx
  426e7f:	fs push esp
  426e81:	pop    ecx
  426e82:	cli    
  426e83:	xchg   esi,eax
  426e84:	mov    ds:0x3f4e1,eax
  426e89:	add    BYTE PTR [ebx],bh
  426e8b:	add    al,0xfa
  426e8d:	cld    
  426e8e:	cmp    al,0x4c
  426e90:	xchg   ebx,eax
  426e91:	push   0x89e95bcb
  426e96:	popa   
  426e97:	pop    edx
  426e98:	cli    
  426e99:	push   ss
  426e9a:	mov    ds:0xa367af2e,eax
  426e9f:	cli    
  426ea0:	(bad)  
  426ea1:	sub    eax,eax
  426ea3:	push   edi
  426ea4:	push   ebp
  426ea5:	bound  edx,QWORD PTR [eax-0x4aae1b29]
  426eab:	dec    eax
  426eac:	cmc    
  426ead:	add    BYTE PTR [ebx-0x37acfecd],bl
  426eb3:	or     BYTE PTR [esp+eax*2-0x9d49fd6],cl
  426eba:	scas   al,BYTE PTR es:[edi]
  426ebb:	stos   BYTE PTR es:[edi],al
  426ebc:	jne    0x426ee2
  426ebe:	mov    cl,BYTE PTR [ebx-0x3fdf8eb5]
  426ec4:	test   eax,eax
  426ec6:	xchg   ecx,eax
  426ec7:	xlat   BYTE PTR ds:[ebx]
  426ec8:	pushf  
  426ec9:	add    BYTE PTR [esi+0x33],bl
  426ecc:	jmp    0xf7035c3d
  426ed1:	mov    edx,DWORD PTR [esi]
  426ed3:	stos   BYTE PTR es:[edi],al
  426ed4:	pop    ebp
  426ed5:	and    al,0x7a
  426ed7:	test   eax,0x63cb10ba
  426edc:	loop   0x426eea
  426ede:	mov    ebp,0x856f6c3
  426ee3:	ss add al,ch
  426ee6:	or     eax,0x9dfff5ce
  426eeb:	xchg   edi,eax
  426eec:	adc    ebx,ebp
  426eee:	add    BYTE PTR [eax],al
  426ef0:	cmp    DWORD PTR [edx+0x5f6b01ba],0xffffffe2
  426ef7:	imul   ecx,DWORD PTR [edx+0x628df6c3],0x29e81a4c
  426f01:	xchg   esi,esi
  426f03:	dec    DWORD PTR [ebp+0x3beb0097]
  426f09:	mov    edx,0x564a02ba
  426f0e:	loop   0x426eff
  426f10:	fidiv  WORD PTR [edx]
  426f12:	add    DWORD PTR [ebx+0x46e2c4ad],eax
  426f18:	pop    eax
  426f19:	outs   dx,DWORD PTR ds:[esi]
  426f1a:	add    eax,0x28bad474
  426f1f:	add    esi,ebx
  426f21:	xor    bh,BYTE PTR [edx-0x1d]
  426f24:	push   ebp
  426f25:	mov    bh,0x2e
  426f27:	div    BYTE PTR [edi]
  426f29:	or     al,BYTE PTR [ebp+0x75]
  426f2c:	inc    esp
  426f2d:	clc    
  426f2e:	sbb    BYTE PTR [edi+ecx*2],ah
  426f31:	add    eax,0x15a05fba
  426f36:	popf   
  426f37:	and    al,BYTE PTR [edi+0x4d]
  426f3a:	(bad)  
  426f3b:	jle    0x426fb9
  426f3d:	mov    WORD PTR [ebx-0x2f67eee],ds
  426f43:	je     0x426f9e
  426f45:	enter  0x2418,0x1f
  426f49:	xor    eax,0x25705f52
  426f4e:	popf   
  426f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f50:	and    al,0x4d
  426f52:	(bad)  
  426f53:	jle    0x426f55
  426f55:	add    BYTE PTR [esp+eiz*2-0x7f],ch
  426f59:	dec    esp
  426f5a:	adc    eax,DWORD PTR [ebp+0x45d4cf96]
  426f60:	(bad)  
  426f61:	aaa    
  426f62:	jmp    0x426f8c
  426f64:	stc    
  426f65:	jae    0x426fa0
  426f67:	sbb    bl,BYTE PTR [ebp-0x70813bfe]
  426f6d:	lea    ebp,[ebx-0x3d180ad1]
  426f73:	sbb    ecx,DWORD PTR [edi-0x2dca7f05]
  426f79:	mov    edi,0x5da8d27c
  426f7e:	cmc    
  426f7f:	dec    edi
  426f80:	(bad)  
  426f81:	jg     0x426fcd
  426f83:	cmp    edi,DWORD PTR [ecx+0x184c373f]
  426f89:	aaa    
  426f8a:	popa   
  426f8b:	push   ss
  426f8c:	sar    dl,cl
  426f8e:	mov    BYTE PTR [esi],bl
  426f90:	ss push 0x446f08
  426f96:	mov    BYTE PTR [esi],bh
  426f98:	mov    ss,WORD PTR ds:0x3e79b7
  426f9e:	mov    esp,0x43f2cadb
  426fa3:	xor    al,0x3
  426fa5:	sbb    al,0xaf
  426fa7:	inc    ecx
  426fa8:	call   0xfd97d4b0
  426fad:	lahf   
  426fae:	inc    ecx
  426faf:	hlt    
  426fb0:	out    0x88,eax
  426fb2:	ja     0x426f94
  426fb4:	out    dx,eax
  426fb5:	cmp    al,BYTE PTR ds:0x6fd555
  426fbb:	add    BYTE PTR [esi-0xc],al
  426fbe:	out    0x39,eax
  426fc0:	mov    WORD PTR [edi],?
  426fc2:	and    ch,dh
  426fc4:	dec    eax
  426fc5:	xor    al,0xc3
  426fc7:	xor    eax,eax
  426fc9:	jmp    FWORD PTR [esi-0x61]
  426fcc:	clc    
  426fcd:	inc    edi
  426fce:	fdiv   DWORD PTR [esi]
  426fd0:	add    eax,0x8f7e99ca
  426fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fd6:	jge    0x426f8b
  426fd8:	dec    DWORD PTR [ebx+0x7e]
  426fdb:	pop    ebp
  426fdc:	aaa    
  426fdd:	xor    al,0x97
  426fdf:	(bad)  
  426fe0:	inc    esi
  426fe1:	(bad)  
  426fe2:	xchg   ecx,eax
  426fe3:	sbb    eax,0xf7e2fe21
  426fe8:	adc    BYTE PTR [ecx+0x28],al
  426feb:	add    al,0xb2
  426fed:	je     0x42704c
  426fef:	test   BYTE PTR [ecx+0x1fb425a7],0x30
  426ff6:	or     eax,0xa8b01c91
  426ffb:	sbb    BYTE PTR [edx],dh
  426ffd:	and    DWORD PTR [eax-0x8cde7bc],ebp
  427003:	ret    
  427004:	ins    DWORD PTR es:[edi],dx
  427005:	stc    
  427006:	mov    al,0xc5
  427008:	push   0xffffffa9
  42700a:	mov    WORD PTR [ebx+0x3e6180b],es
  427010:	aaa    
  427011:	(bad)  
  427012:	std    
  427013:	xor    edi,DWORD PTR [edx-0x30d38822]
  427019:	sbb    BYTE PTR [esi+0x4],cl
  42701c:	aaa    
  42701d:	test   eax,0xaf01
  427022:	xor    ecx,ebp
  427024:	xchg   DWORD PTR [edi+eiz*4],esp
  427027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427028:	je     0x427063
  42702a:	adc    ecx,DWORD PTR [esi+eiz*1-0x6d]
  42702e:	xor    esi,DWORD PTR [esp+ecx*4]
  427031:	ins    BYTE PTR es:[edi],dx
  427032:	repz push esi
  427034:	cli    
  427035:	dec    esi
  427036:	retf   
  427037:	ret    0x46fa
  42703a:	(bad)  
  42703b:	scas   eax,DWORD PTR es:[edi]
  42703c:	shl    DWORD PTR [ebp-0x663c525e],0x11
  427043:	out    dx,eax
  427044:	cld    
  427045:	cdq    
  427046:	or     DWORD PTR [edi+0x58a624c9],ebp
  42704c:	jmp    0xfa9b2468
  427051:	mov    bh,0xad
  427053:	xchg   esp,eax
  427054:	push   esp
  427055:	bound  edx,QWORD PTR [edi+0x3af1edb2]
  42705b:	xor    al,0x1
  42705d:	ins    BYTE PTR es:[edi],dx
  42705e:	mov    al,0x5b
  427060:	cld    
  427061:	mul    BYTE PTR [edi-0x58119ab5]
  427067:	pop    eax
  427068:	test   DWORD PTR [ecx+0x6c8c2d28],ebp
  42706e:	lods   al,BYTE PTR ds:[esi]
  42706f:	push   esi
  427070:	cli    
  427071:	(bad)  
  427072:	int3   
  427073:	retf   
  427074:	push   ds
  427075:	into   
  427076:	(bad)  
  427077:	jge    0x427037
  427079:	sbb    al,0xa2
  42707b:	pusha  
  42707c:	jle    0x42704b
  42707e:	or     BYTE PTR [ebx],al
  427080:	push   ebx
  427081:	bound  ebp,QWORD PTR [ecx]
  427083:	cmp    al,0x86
  427085:	out    0x0,eax
  427087:	add    BYTE PTR [edi-0x43],cl
  42708a:	dec    esp
  42708b:	popf   
  42708c:	add    DWORD PTR [ecx],0xc9a63809
  427092:	or     al,0x62
  427094:	mov    ds:0x3303f9da,al
  427099:	(bad)  
  42709b:	inc    DWORD PTR [eax-0x31]
  42709e:	pop    ebx
  42709f:	lock pop ecx
  4270a1:	pop    es
  4270a2:	push   ecx
  4270a3:	test   DWORD PTR [esi-0x21227bcc],ebx
  4270a9:	aaa    
  4270aa:	add    DWORD PTR [ebx-0x7b42d30],ecx
  4270b0:	jg     0x427082
  4270b2:	dec    ebx
  4270b3:	or     al,0x76
  4270b5:	scas   eax,DWORD PTR es:[edi]
  4270b6:	jb     0x4270f8
  4270b8:	sahf   
  4270b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270ba:	jo     0x4270c4
  4270bc:	shl    BYTE PTR [ecx+edx*2+0x6771328],0x85
  4270c4:	out    0x36,al
  4270c6:	add    DWORD PTR [eax],eax
  4270c8:	adc    eax,0x868bf8fa
  4270cd:	rcl    BYTE PTR [ebx-0x18],cl
  4270d0:	mov    esp,0x6a6a2131
  4270d5:	pop    es
  4270d6:	not    BYTE PTR [ecx+0x1374a]
  4270dc:	shl    DWORD PTR [esi+0x74],cl
  4270df:	ja     0x427150
  4270e1:	cli    
  4270e2:	cld    
  4270e3:	cmp    DWORD PTR [ebx-0x729d9051],esp
  4270e9:	mov    al,ds:0x4582
  4270ee:	push   0xffffffcf
  4270f0:	jl     0x4270f5
  4270f2:	cmp    bh,BYTE PTR [esi+esi*8+0x40e66274]
  4270f9:	mov    edx,ecx
  4270fb:	scas   eax,DWORD PTR es:[edi]
  4270fc:	or     ebx,DWORD PTR [edx-0x3f7b3d08]
  427102:	bound  ebp,QWORD PTR [ebx+0x4f]
  427105:	push   0x1e
  427107:	mov    dh,0xc9
  427109:	push   esi
  42710b:	jbe    0x42709e
  42710d:	(bad)  
  42710e:	fxch   st(6)
  427110:	clc    
  427111:	test   DWORD PTR [ecx+0x378b212b],ebx
  427117:	sbb    cl,bh
  427119:	push   edx
  42711a:	mov    ah,0x94
  42711c:	mov    ch,al
  42711e:	or     ch,bh
  427120:	mov    bh,bl
  427122:	mov    bl,0x9c
  427124:	sbb    DWORD PTR [eax],edx
  427126:	mov    esp,0xf72ef917
  42712b:	xor    al,0xed
  42712d:	jnp    0x4271a6
  42712f:	pop    ebp
  427130:	ds call 0xfbcd402c
  427136:	or     ch,dh
  427138:	or     DWORD PTR [ebx+0x458a01a9],ebp
  42713e:	mov    ds:0xb4fc47c5,eax
  427143:	sbb    eax,0xf4fa3745
  427148:	push   cs
  427149:	lahf   
  42714a:	mov    esp,0xfa878ebf
  42714f:	xor    BYTE PTR [esi+0x8],dh
  427152:	add    BYTE PTR [eax],al
  427154:	stos   BYTE PTR es:[edi],al
  427155:	xchg   DWORD PTR [esi+0x342a074e],edx
  42715b:	sub    BYTE PTR [edi+edx*4-0x52d0787a],bh
  427162:	mov    edx,DWORD PTR [ecx+0x2f]
  427165:	push   edx
  427166:	sbb    DWORD PTR [esp+edi*4],ecx
  427169:	bound  esi,QWORD PTR [ebx+edi*8]
  42716c:	out    0x68,eax
  42716e:	mov    esi,DWORD PTR [ebp+0x33]
  427171:	mov    BYTE PTR [ebx],0x66
  427174:	ss jb  0x427190
  427177:	or     BYTE PTR [ecx-0x4dabd196],cl
  42717d:	fwait
  42717e:	sti    
  42717f:	adc    DWORD PTR [ebx+0x7a],0xffffff8b
  427183:	sti    
  427184:	sbb    BYTE PTR [ecx],cl
  427186:	std    
  427187:	xchg   BYTE PTR [ecx],bh
  427189:	xor    DWORD PTR [edx+0x10d66f50],ecx
  42718f:	adc    BYTE PTR [esp+esi*1+0x349136ea],ch
  427196:	xor    cl,BYTE PTR [edi-0x3c92bf79]
  42719c:	(bad)  
  42719e:	rol    BYTE PTR [esi+0x2f],1
  4271a1:	shl    BYTE PTR [eax],cl
  4271a3:	jnp    0x42717d
  4271a5:	shr    BYTE PTR ds:0x72e967fc,0x16
  4271ac:	xor    esp,ebp
  4271ae:	push   0x33
  4271b0:	ja     0x427169
  4271b2:	sub    BYTE PTR [eax],bl
  4271b4:	je     0x427173
  4271b6:	out    0x80,eax
  4271b8:	add    BYTE PTR [eax],al
  4271ba:	add    ah,BYTE PTR [ecx+edi*4]
  4271bd:	sbb    DWORD PTR [edi],esi
  4271bf:	push   ecx
  4271c0:	rol    DWORD PTR [edi],cl
  4271c2:	lock push eax
  4271c4:	cwde   
  4271c5:	jmp    0x42717a
  4271c7:	je     0x42717e
  4271c9:	lock (bad) 
  4271cb:	(bad)  
  4271cc:	fstp   TBYTE PTR [edx-0x6]
  4271cf:	inc    edi
  4271d0:	xchg   ebx,eax
  4271d1:	mov    cs,WORD PTR [edx]
  4271d3:	inc    eax
  4271d4:	outs   dx,DWORD PTR ds:[esi]
  4271d5:	mov    dl,0x7c
  4271d7:	(bad)  
  4271d8:	neg    DWORD PTR [ebx-0x71ecad6b]
  4271de:	mov    al,0xf7
  4271e0:	idiv   DWORD PTR [edx+0x2f]
  4271e3:	in     al,0x2
  4271e5:	xor    al,0x2f
  4271e7:	mov    ebp,0xc74c36e7
  4271ec:	fbstp  TBYTE PTR [edx]
  4271ee:	dec    esp
  4271ef:	in     al,0xa3
  4271f1:	mov    BYTE PTR [edi-0x38],dh
  4271f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271f5:	(bad)  
  4271f6:	ret    0x6f3b
  4271f9:	add    DWORD PTR [eax-0x73c3c7af],eax
  4271ff:	repnz cs mov ebx,0x36e823e1
  427206:	mov    al,0x5f
  427208:	imul   esp,DWORD PTR [eax-0x16fecc61],0x4151e634
  427212:	add    ecx,ebp
  427214:	inc    eax
  427215:	jmp    0x29b8be36
  42721a:	cmp    ebx,DWORD PTR [eax+esi*2+0x8]
  42721e:	add    BYTE PTR [eax],al
  427220:	mov    edx,0xb899864c
  427225:	inc    ebp
  427226:	or     ch,BYTE PTR [ebp+0x4b]
  427229:	xor    al,0x1
  42722b:	jmp    0xea3f48e7
  427230:	dec    edi
  427231:	ss addr16 jmp 0x6695a656
  427238:	add    eax,DWORD PTR [eax-0x7c]
  42723b:	sub    DWORD PTR [eax-0xe],ecx
  42723e:	test   edi,ebp
  427240:	sub    edi,edi
  427242:	clc    
  427243:	mov    eax,0xeb67343e
  427248:	bound  ecx,QWORD PTR [ebp+0x51]
  42724b:	aad    0xb9
  42724d:	jae    0x4272c3
  42724f:	cdq    
  427250:	sub    al,0x6c
  427252:	jbe    0x4271fd
  427254:	xor    al,0xdc
  427256:	enter  0xf4a2,0x33
  42725a:	jmp    0xfa8f8834
  42725f:	bound  edi,QWORD PTR [ebx-0x796a054a]
  427265:	mov    edi,0xbf230544
  42726a:	test   BYTE PTR [ecx-0x3f],ah
  42726d:	dec    esp
  42726e:	cli    
  42726f:	cdq    
  427270:	leave  
  427271:	div    BYTE PTR [eax-0x7394c67]
  427277:	jb     0x4271fb
  427279:	mov    eax,0x8479a6ca
  42727e:	inc    ebp
  42727f:	jmp    0x6504a6b8
  427284:	add    BYTE PTR [eax],al
  427286:	mov    WORD PTR [edx-0x6],cs
  427289:	add    cl,dh
  42728b:	pop    ebx
  42728c:	add    DWORD PTR [eax],eax
  42728e:	push   ds
  42728f:	lods   al,BYTE PTR ds:[esi]
  427290:	out    dx,eax
  427291:	std    
  427292:	rol    eax,0x82
  427295:	pop    es
  427296:	sub    ecx,eax
  427298:	push   ecx
  427299:	or     BYTE PTR [ebp-0x1974070a],al
  42729f:	add    esi,esi
  4272a1:	push   ecx
  4272a2:	(bad)  
  4272a3:	int3   
  4272a4:	(bad)  
  4272a5:	push   ebp
  4272a6:	mov    cl,0x3
  4272a8:	or     eax,ebp
  4272aa:	inc    ebx
  4272ab:	pop    edx
  4272ac:	idiv   edi
  4272ae:	inc    ebp
  4272af:	ds std 
  4272b1:	cmp    al,0xda
  4272b3:	sub    ecx,ebp
  4272b5:	add    dh,cl
  4272b7:	xor    edx,DWORD PTR [edx]
  4272b9:	rcr    BYTE PTR [ecx-0x65],0x7a
  4272bd:	shl    BYTE PTR [esi+0x50],0xaf
  4272c1:	shl    dh,0xd6
  4272c4:	icebp  
  4272c5:	push   ecx
  4272c7:	pop    ds
  4272c8:	push   edi
  4272c9:	leave  
  4272ca:	dec    ebp
  4272cb:	push   es
  4272cc:	sub    ah,0x1f
  4272cf:	scas   eax,DWORD PTR es:[edi]
  4272d0:	jge    0x4272d5
  4272d2:	sahf   
  4272d3:	xor    ecx,DWORD PTR [edx+0x56]
  4272d6:	test   eax,0x8e0100fc
  4272db:	xor    ecx,DWORD PTR [edx-0x73]
  4272de:	jecxz  0x427296
  4272e0:	cld    
  4272e1:	inc    DWORD PTR [ecx+0x2]
  4272e4:	div    BYTE PTR [ebp-0x7e]
  4272e7:	int3   
  4272e8:	lock mov eax,DWORD PTR [eax]
  4272eb:	add    BYTE PTR [eax+0x9],cl
  4272ee:	not    BYTE PTR [eax+0x6a]
  4272f1:	mov    dh,0xc1
  4272f3:	je     0x42734d
  4272f5:	mov    ah,0x64
  4272f7:	or     al,0x4e
  4272f9:	lods   al,BYTE PTR ds:[esi]
  4272fa:	adc    eax,0xfcb3cb8d
  4272ff:	call   DWORD PTR [ecx]
  427301:	or     BYTE PTR [ebx+0x0],ah
  427304:	aaa    
  427305:	fidivr DWORD PTR [ebx+edi*8-0x58876f1]
  42730c:	sbb    ah,al
  42730e:	aas    
  42730f:	or     al,0xbc
  427311:	push   esi
  427312:	xor    ecx,DWORD PTR [ebp-0x4791f46]
  427318:	add    BYTE PTR [esi+eax*4],ch
  42731b:	jne    0x42733c
  42731d:	jbe    0x87acbe73
  427323:	test   edi,esi
  427325:	xor    BYTE PTR [eax],al
  427327:	mov    DWORD PTR [edx+0x45],esp
  42732a:	fwait
  42732b:	rsm    
  42732d:	fild   WORD PTR [eax+0x34cdd0fa]
  427333:	push   ebx
  427334:	mov    ah,0x94
  427336:	xchg   al,ch
  427338:	call   0xe69f:0xaefb86ee
  42733f:	xchg   BYTE PTR [ecx],bh
  427341:	mov    bh,BYTE PTR [ecx-0x73]
  427344:	mov    bl,0xe8
  427346:	test   ebx,edi
  427348:	push   es
  427349:	dec    BYTE PTR [edi]
  42734b:	sbb    al,0x1
  42734d:	div    BYTE PTR [esp+edx*1]
  427350:	add    BYTE PTR [eax],al
  427352:	mov    edx,0xba0e101c
  427357:	fild   WORD PTR [eax+0x351d80fc]
  42735d:	push   ebx
  42735e:	mov    ah,0x4
  427360:	xchg   al,ch
  427362:	repnz fiadd WORD PTR [esi+0x7a24bcfb]
  427369:	add    dh,BYTE PTR [edx+0x585182af]
  42736f:	iret   
  427370:	in     eax,dx
  427371:	push   ecx
  427372:	push   eax
  427373:	lods   al,BYTE PTR ds:[esi]
  427374:	out    dx,al
  427375:	test   BYTE PTR [edi-0x30],dh
  427378:	stc    
  427379:	jle    0x427355
  42737b:	pusha  
  42737c:	inc    BYTE PTR [esi+0x38753431]
  427382:	das    
  427383:	in     al,0xda
  427385:	adc    BYTE PTR [ebx-0x1a],al
  427388:	shl    BYTE PTR [ebx],cl
  42738a:	inc    edi
  42738b:	mov    bh,0xa8
  42738d:	rdpmc  
  42738f:	mov    cl,0x4d
  427391:	mov    WORD PTR [edi],?
  427393:	fiadd  DWORD PTR [edx+0x79]
  427396:	cmp    BYTE PTR [eax-0x691463f0],0xe8
  42739d:	add    edx,DWORD PTR [ecx-0x20ef8b3c]
  4273a3:	in     al,dx
  4273a4:	(bad)  
  4273a5:	mov    esp,0x7ee83495
  4273aa:	mov    ch,BYTE PTR [eax+edx*2]
  4273ad:	outs   dx,DWORD PTR ds:[esi]
  4273ae:	arpl   sp,si
  4273b0:	out    0x80,eax
  4273b2:	int3   
  4273b3:	mov    ecx,0xfa78
  4273b8:	jae    0x4273ff
  4273ba:	ins    DWORD PTR es:[edi],dx
  4273bb:	mov    ch,0x2c
  4273bd:	clc    
  4273be:	xchg   edi,eax
  4273bf:	xchg   BYTE PTR [edx],bh
  4273c1:	dec    esp
  4273c2:	call   0xe70af345
  4273c7:	js     0x4273c3
  4273c9:	pop    ebx
  4273ca:	or     BYTE PTR [bp+di],dh
  4273cd:	xor    al,0xb2
  4273cf:	cli    
  4273d0:	repz div bl
  4273d3:	jle    0x4273df
  4273d5:	adc    al,0x96
  4273d7:	xor    al,0x8c
  4273d9:	(bad)  
  4273da:	xor    esi,DWORD PTR [ebx]
  4273dc:	jl     0x4273a5
  4273de:	fistp  QWORD PTR [eax-0xe]
  4273e1:	mov    bh,0xb8
  4273e3:	mov    ah,BYTE PTR ds:0x396bf54d
  4273e9:	hlt    
  4273ea:	out    0x7e,eax
  4273ec:	jg     0x4273a7
  4273ee:	and    bl,BYTE PTR [ebx-0x75fd5a9f]
  4273f4:	shl    BYTE PTR [edi-0x24],1
  4273f7:	mov    al,dl
  4273f9:	aas    
  4273fa:	add    DWORD PTR [ecx],eax
  4273fc:	jge    0x42739e
  4273fe:	sti    
  4273ff:	out    dx,al
  427400:	scas   al,BYTE PTR es:[edi]
  427401:	(bad)  
  427402:	sbb    cl,dl
  427404:	neg    BYTE PTR [edi+0x5c66defb]
  42740a:	rol    BYTE PTR [ebp+0x2f5a48ad],0x4a
  427411:	jnp    0x4273d2
  427413:	in     eax,0x34
  427415:	out    0x85,eax
  427417:	int    0xb4
  427419:	pop    edi
  42741a:	test   ebx,ebp
  42741c:	add    BYTE PTR [eax],al
  42741e:	xor    al,0x34
  427420:	dec    esi
  427421:	pop    ss
  427422:	inc    esi
  427423:	fdivr  QWORD PTR [eax+0x69347b22]
  427429:	push   ecx
  42742a:	cmp    dh,ah
  42742c:	add    BYTE PTR [ecx-0x710616c2],al
  427432:	pop    edx
  427433:	inc    esp
  427434:	mov    cs:0xc2e8c74c,al
  42743a:	mov    ds:0x3aed8538,eax
  42743f:	xor    al,0x1
  427441:	bound  esi,QWORD PTR ds:0x66b9ffd6
  427447:	mov    ebx,0xe3be615c
  42744c:	inc    eax
  42744d:	ins    BYTE PTR es:[edi],dx
  42744e:	jnp    0x427488
  427450:	test   BYTE PTR [ebx],dh
  427452:	xor    al,0x34
  427454:	add    DWORD PTR [edx+0x35],esi
  427457:	mov    edi,0xd6444d4c
  42745c:	or     bl,BYTE PTR [edi+0x6414e3af]
  427462:	jae    0x42749c
  427464:	test   BYTE PTR [edi],ch
  427466:	xor    al,0x34
  427468:	add    DWORD PTR [eax],edx
  42746a:	shl    BYTE PTR [edx],cl
  42746c:	add    ecx,ebp
  42746e:	jecxz  0x427466
  427470:	cld    
  427471:	bound  ebx,QWORD PTR [ebx-0x41]
  427474:	push   esp
  427475:	add    BYTE PTR [edx+0x6],dl
  427478:	push   ecx
  427479:	jmp    FWORD PTR [edi+0x59c08578]
  42747f:	int    0x83
  427481:	add    DWORD PTR [eax],eax
  427483:	add    BYTE PTR [esi+0x30],cl
  427486:	cmp    BYTE PTR [ebp+0x12],bl
  427489:	dec    ebp
  42748a:	jle    0x427508
  42748c:	pop    ds
  42748d:	cmp    BYTE PTR [ecx],al
  42748f:	mov    edx,DWORD PTR [ebx-0x44]
  427492:	or     BYTE PTR [eax],0xa8
  427495:	aaa    
  427496:	add    BYTE PTR [eax],al
  427498:	push   ds
  427499:	push   es
  42749a:	mov    WORD PTR [ebp-0x94262],ss
  4274a0:	sbb    al,0x28
  4274a2:	icebp  
  4274a3:	add    eax,DWORD PTR [ebx]
  4274a5:	inc    edx
  4274a6:	dec    edx
  4274a7:	jmp    FWORD PTR [edi]
  4274a9:	inc    esp
  4274aa:	test   eax,eax
  4274ac:	inc    edx
  4274ad:	dec    ebx
  4274ae:	mov    DWORD PTR [ebp-0x42],ebx
  4274b1:	test   al,0xa
  4274b3:	lea    edx,[ebx-0x49]
  4274b6:	idiv   edi
  4274b8:	mov    ecx,0x86834a07
  4274bd:	mov    esp,0xbd5b29e9
  4274c2:	test   BYTE PTR [ecx+0x4582a013],0x1a
  4274c9:	enter  0x5608,0x1b
  4274cd:	fiadd  DWORD PTR [eax+0x4bbc09fd]
  4274d3:	push   0x142b2ffe
  4274d8:	scas   al,BYTE PTR es:[edi]
  4274d9:	mov    esp,0x77131450
  4274de:	jne    0x4274e4
  4274e0:	jge    0x42749e
  4274e2:	loop   0x4274f6
  4274e4:	fcmovne st,st(1)
  4274e6:	cmp    ch,0x0
  4274e9:	add    BYTE PTR [ecx],bl
  4274eb:	mov    esp,0x8edd5351
  4274f0:	imul   al
  4274f2:	aaa    
  4274f3:	and    eax,0xd658fa72
  4274f8:	test   DWORD PTR [esi-0x27],esp
  4274fb:	mov    edi,0x24ef840a
  427500:	pop    es
  427501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427502:	aaa    
  427503:	pop    ebp
  427504:	inc    esi
  427505:	xchg   esp,eax
  427506:	ret    
  427507:	pushf  
  427508:	inc    BYTE PTR [esi+0x74861607]
  42750e:	xor    eax,0x7287a9c6
  427513:	ins    DWORD PTR es:[edi],dx
  427514:	jbe    0x42758b
  427516:	pop    ds
  427517:	es mov dh,0xb
  42751a:	jnp    0x4274a1
  42751c:	(bad)  
  42751d:	out    dx,al
  42751e:	add    DWORD PTR [edi+0x1c],0x39
  427522:	and    DWORD PTR [ecx],ecx
  427524:	add    BYTE PTR [eax+0x45191f],bh
  42752a:	test   DWORD PTR [esi*1+0x34d1728d],ecx
  427531:	push   edx
  427532:	loopne 0x42757b
  427534:	pushw  cs
  427536:	ja     0x427595
  427538:	ja     0x427512
  42753a:	ret    0x8d17
  42753d:	call   0xfbc557c4
  427542:	mov    ah,0x98
  427544:	cmc    
  427545:	cli    
  427546:	inc    edx
  427547:	int    0x75
  427549:	lock lahf 
  42754b:	les    edx,FWORD PTR [ebp-0x6]
  42754e:	add    BYTE PTR [eax],al
  427550:	test   al,0x81
  427552:	xchg   esi,eax
  427553:	jle    0x427521
  427555:	loop   0x4274d8
  427557:	jg     0x4274f2
  427559:	stc    
  42755a:	(bad)  
  42755c:	mov    ah,0x77
  42755e:	mov    al,BYTE PTR [eax]
  427560:	or     DWORD PTR [edi+0x4e04fe8a],0x7faa6b18
  42756a:	mov    edx,0xf2335f58
  42756f:	pusha  
  427570:	aaa    
  427571:	xor    al,0x6d
  427573:	inc    ecx
  427574:	pop    edi
  427575:	jecxz  0x4275f6
  427577:	lea    ebx,[eax-0x54]
  42757a:	neg    BYTE PTR [ebx]
  42757c:	inc    edi
  42757d:	ss popa 
  42757f:	repnz rol BYTE PTR [eax-0x19],1
  427583:	gs xor esp,ebx
  427586:	add    BYTE PTR [ebx],al
  427588:	call   0xf6a2:0x30938025
  42758f:	jp     0x427586
  427591:	in     al,0x6e
  427593:	inc    eax
  427594:	and    ebx,DWORD PTR [ebp+0x2d]
  427597:	mov    DWORD PTR [edx+ecx*2],ebx
  42759a:	rol    BYTE PTR [eax+0xb],cl
  42759d:	xor    DWORD PTR [ebx+edx*8],edi
  4275a0:	xchg   edx,eax
  4275a1:	fisubr DWORD PTR [eax+edx*1-0x19]
  4275a5:	in     al,dx
  4275a6:	mov    edi,0xe834d3b0
  4275ab:	js     0x427627
  4275ad:	dec    esp
  4275ae:	cmp    BYTE PTR [eiz*8+0xf2a235],bl
  4275b5:	add    BYTE PTR [eax+0x44],bl
  4275b8:	out    0xc0,eax
  4275ba:	sub    ah,bl
  4275bc:	xchg   esp,eax
  4275bd:	add    bh,cl
  4275bf:	and    eax,0x7cc89d10
  4275c4:	xlat   BYTE PTR ds:[ebx]
  4275c5:	sbb    eax,edi
  4275c7:	xor    eax,0x72b1f2ac
  4275cc:	sbb    BYTE PTR [ebx-0x6],bh
  4275cf:	inc    edi
  4275d0:	push   eax
  4275d1:	imul   DWORD PTR [ebx-0x572a4b7]
  4275d7:	aas    
  4275d8:	loopne 0x4275e9
  4275da:	dec    eax
  4275db:	fidivr WORD PTR [eax+edi*2-0x645f97f6]
  4275e2:	stos   DWORD PTR es:[edi],eax
  4275e3:	nop
  4275e4:	call   0x13227ec
  4275e9:	xor    DWORD PTR [esp+ebx*8-0xe],eax
  4275ed:	jmp    0x1b35:0x1969258e
  4275f4:	adc    eax,0x2c49c791
  4275f9:	std    
  4275fa:	cmp    al,0x5b
  4275fc:	(bad)  
  4275fd:	mov    ebx,0xeaf0d160
  427602:	ins    BYTE PTR es:[edi],dx
  427603:	and    eax,0xb1042786
  427608:	inc    esp
  427609:	cmc    
  42760a:	popf   
  42760b:	jns    0x42760a
  42760d:	out    dx,al
  42760e:	mov    edx,0x6d174b0
  427613:	bound  eax,QWORD PTR [esi+0x9b0af24]
  427619:	cmp    DWORD PTR [eax],eax
  42761b:	add    BYTE PTR [edx+0x506208e2],dh
  427621:	pop    eax
  427622:	xchg   cl,dh
  427624:	sbb    edi,0x4d4b1bfc
  42762a:	push   eax
  42762b:	fnstsw WORD PTR [ecx+0x74]
  42762e:	or     ah,BYTE PTR [ebp+0x33]
  427631:	dec    esi
  427632:	cli    
  427633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427634:	outs   dx,BYTE PTR ds:[esi]
  427635:	out    dx,eax
  427636:	in     al,dx
  427637:	jb     0x42761c
  427639:	clc    
  42763a:	stc    
  42763b:	cmp    bl,bl
  42763d:	mov    cl,0x3
  42763f:	aaa    
  427640:	mov    edx,0x307208e3
  427645:	dec    esp
  427646:	imul   ebp,DWORD PTR [ebp+0x301343b],0xb8e8ec0d
  427650:	mov    esp,0x52c6fa4c
  427655:	loope  0x42761e
  427657:	sub    dl,BYTE PTR [eax-0x4f]
  42765a:	in     eax,dx
  42765b:	push   0xe901b7bf
  427660:	xor    al,0xf9
  427662:	push   edx
  427663:	add    BYTE PTR [ecx-0x193b8c3f],ch
  427669:	pop    esp
  42766a:	sahf   
  42766b:	add    BYTE PTR [esi-0x2af38b51],cl
  427671:	mov    DWORD PTR [ecx+0x6a],edx
  427674:	xchg   BYTE PTR [ebx],bl
  427676:	mov    WORD PTR [ebp-0x95036],?
  42767c:	ss test eax,0xfe95
  427682:	inc    ecx
  427683:	sbb    eax,0x321e8558
  427688:	and    BYTE PTR [ebx+0x8834c9b],cl
  42768e:	rcr    DWORD PTR [eax],cl
  427690:	or     eax,0x4b999552
  427695:	push   eax
  427696:	adc    ebx,eax
  427698:	xchg   esp,eax
  427699:	add    BYTE PTR [esi],cl
  42769b:	xor    al,0x84
  42769d:	sar    BYTE PTR [ebx+0x4a],0x83
  4276a1:	jne    0x427695
  4276a3:	stos   DWORD PTR es:[edi],eax
  4276a4:	push   ecx
  4276a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a6:	lock mov al,0xe2
  4276a9:	add    bh,ch
  4276ab:	jae    0x427703
  4276ad:	pop    esi
  4276ae:	and    eax,0xde08bb8b
  4276b3:	push   ss
  4276b4:	sub    ah,0x5f
  4276b7:	lahf   
  4276b8:	lds    eax,FWORD PTR [eax]
  4276ba:	into   
  4276bb:	xor    ecx,DWORD PTR [edx+0x56]
  4276be:	sbb    ebp,ecx
  4276c0:	jnp    0x4276ca
  4276c2:	or     ebp,ecx
  4276c4:	lock push esi
  4276c6:	and    al,0x28
  4276c8:	pop    ecx
  4276c9:	call   0x392721
  4276ce:	sbb    DWORD PTR [esi],edx
  4276d0:	arpl   WORD PTR [ebx+0x17],bp
  4276d3:	push   es
  4276d4:	in     eax,dx
  4276d5:	pop    eax
  4276d6:	push   es
  4276d7:	mov    bl,0xf6
  4276d9:	inc    DWORD PTR [ecx]
  4276db:	sbb    BYTE PTR [edi+0x6a],cl
  4276de:	aaa    
  4276df:	jno    0x427758
  4276e1:	inc    ebp
  4276e2:	xchg   DWORD PTR [ebp+0x6f96],eax
  4276e8:	mov    dh,ch
  4276ea:	test   BYTE PTR [ebx-0x17],dl
  4276ed:	bound  edx,QWORD PTR [edi]
  4276ef:	mov    edx,esi
  4276f1:	hlt    
  4276f2:	and    eax,0x8515d9e8
  4276f7:	sti    
  4276f8:	add    BYTE PTR [edi-0x6f5199e8],al
  4276fe:	mov    ds:0x85844f58,al
  427703:	sti    
  427704:	push   eax
  427705:	push   0xffffffa9
  427707:	cmp    edx,ebp
  427709:	and    BYTE PTR [edi+0x45],dh
  42770c:	aas    
  42770d:	push   esi
  42770e:	imul   eax,DWORD PTR [ebp+0x38],0xffffff85
  427712:	and    edi,ebx
  427714:	inc    eax
  427715:	ror    edi,1
  427717:	add    BYTE PTR [edi],dh
  427719:	pop    ebp
  42771a:	lea    ebx,[ebp+0x17]
  42771d:	(bad)  
  42771e:	(bad)  
  427720:	pop    esi
  427721:	add    BYTE PTR [ebp+0x74],ch
  427724:	cmp    al,0xd2
  427726:	xlat   BYTE PTR ds:[ebx]
  427727:	out    0xba,eax
  427729:	pop    ss
  42772a:	imul   ebp,eax,0x53911
  427730:	scas   al,BYTE PTR es:[edi]
  427731:	pop    ds
  427732:	jns    0x42776d
  427734:	xchg   edx,eax
  427735:	(bad)  
  427736:	stc    
  427737:	and    eax,0x75903d5d
  42773c:	pop    es
  42773d:	cmc    
  42773e:	ins    BYTE PTR es:[edi],dx
  42773f:	dec    eax
  427740:	xchg   esp,eax
  427741:	pop    esp
  427742:	(bad)  
  427743:	cli    
  427744:	dec    edx
  427745:	lods   eax,DWORD PTR ds:[esi]
  427746:	mov    al,dl
  427748:	and    edx,DWORD PTR [bx+di]
  42774b:	push   edi
  42774c:	add    BYTE PTR [eax],al
  42774e:	mov    dl,0x47
  427750:	sahf   
  427751:	call   0xfbc16076
  427756:	push   cs
  427757:	and    al,0x90
  427759:	inc    ebp
  42775a:	xchg   edi,eax
  42775b:	xor    ebp,DWORD PTR [edi+0x5b]
  42775e:	pop    DWORD PTR [ebp+0x337040c]
  427764:	das    
  427765:	or     DWORD PTR [edx],0x4c
  427768:	pop    edi
  427769:	inc    ecx
  42776a:	scas   eax,DWORD PTR es:[edi]
  42776b:	and    DWORD PTR [eax+0x15e7c03],ebp
  427771:	loope  0x4276f3
  427773:	mov    edi,0x346f86ba
  427778:	stos   BYTE PTR es:[edi],al
  427779:	cmc    
  42777a:	mov    cl,0x7b
  42777c:	imul   esp,DWORD PTR [ebp+0x36],0xde83e834
  427783:	xor    BYTE PTR [ecx-0x56ba817a],ah
  427789:	clc    
  42778a:	xlat   BYTE PTR ds:[ebx]
  42778b:	lods   al,BYTE PTR ds:[esi]
  42778c:	iret   
  42778d:	inc    ebp
  42778e:	dec    bx
  427790:	jno    0x42775b
  427792:	push   0xf736ebc0
  427797:	pop    ecx
  427798:	in     eax,0x6b
  42779a:	inc    esp
  42779b:	fwait
  42779c:	loop   0x427720
  42779e:	scas   al,BYTE PTR es:[edi]
  42779f:	out    dx,eax
  4277a0:	mov    bl,0x3e
  4277a2:	fadd   st,st(0)
  4277a4:	sub    cl,BYTE PTR [edi+0x7c25b9ff]
  4277aa:	pop    ds
  4277ab:	mov    ch,0x75
  4277ad:	cmp    esp,0xf7a8b0
  4277b3:	add    BYTE PTR [edi-0x49],al
  4277b6:	sub    eax,0x16e1874c
  4277bb:	xlat   BYTE PTR ds:[ebx]
  4277bc:	in     eax,dx
  4277bd:	mov    edi,0x647a90f3
  4277c2:	aaa    
  4277c3:	aam    0xdd
  4277c5:	pop    ds
  4277c6:	inc    esp
  4277c7:	adc    esi,DWORD PTR [edi+0x34]
  4277ca:	addr16 jnp 0x427803
  4277cd:	mov    edi,0x784a82da
  4277d2:	outs   dx,DWORD PTR ds:[esi]
  4277d3:	enter  0x5cf0,0x1
  4277d7:	cwde   
  4277d8:	ror    DWORD PTR [edx-0x6],0x6e
  4277dc:	scas   eax,DWORD PTR es:[edi]
  4277dd:	jns    0x427767
  4277df:	lods   al,BYTE PTR ds:[esi]
  4277e0:	sub    BYTE PTR [ecx+0x14],cl
  4277e3:	ins    DWORD PTR es:[edi],dx
  4277e4:	inc    edx
  4277e5:	hlt    
  4277e6:	add    BYTE PTR [esi-0x71],dl
  4277e9:	popa   
  4277ea:	jmp    0xfa8d543c
  4277ef:	ror    DWORD PTR [ebp-0x4a024b48],cl
  4277f5:	dec    ecx
  4277f6:	cli    
  4277f7:	xchg   ecx,eax
  4277f8:	fcomp  QWORD PTR [edi-0x31cb1661]
  4277fe:	jo     0x427874
  427800:	pop    edi
  427801:	jge    0x42785c
  427803:	adc    DWORD PTR [ebx-0x3e16fe5a],ebp
  427809:	fcomip st,st(4)
  42780b:	bound  esp,QWORD PTR [edi+0x69]
  42780e:	sbb    bh,BYTE PTR ss:[eax+eiz*4+0x75]
  427813:	test   eax,0x19453934
  427818:	add    BYTE PTR [eax],al
  42781a:	jno    0x427889
  42781c:	or     ah,BYTE PTR [ebp-0x32a3f484]
  427822:	pop    ds
  427823:	inc    edi
  427824:	xchg   DWORD PTR [edi+0x3b10beaa],esp
  42782a:	in     al,0xf4
  42782c:	stc    
  42782d:	push   esp
  42782e:	xchg   ebx,eax
  42782f:	mov    bh,0x84
  427831:	add    eax,0xbefa48b6
  427836:	add    BYTE PTR [ecx-0x6],bl
  427839:	cmp    al,0x43
  42783b:	in     al,0xf9
  42783d:	div    DWORD PTR [edi-0x4d3e79a0]
  427843:	jno    0x42782e
  427845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427846:	ret    0xfa49
  427849:	push   0x7f
  42784b:	sub    dl,bh
  42784d:	adc    al,0x4f
  42784f:	pop    esp
  427850:	cwde   
  427851:	add    BYTE PTR [esi-0x4e],ah
  427854:	idiv   bh
  427856:	ret    
  427857:	aam    0xe8
  427859:	push   ecx
  42785a:	inc    ebp
  42785b:	mov    bl,0xf6
  42785d:	jmp    DWORD PTR [ebx+0x7549e8c0]
  427863:	mov    bl,0xf6
  427865:	inc    DWORD PTR [ebx-0x3abe1728]
  42786b:	mov    bl,0xf6
  42786d:	jmp    DWORD PTR [ebx-0x1c]
  427870:	call   0xf6f64dae
  427875:	inc    ebx
  427877:	enter  0x31e8,0xc5
  42787b:	mov    bl,0xf6
  42787d:	mov    al,BYTE PTR [eax]
  42787f:	add    BYTE PTR [ebx+0x755e56b3],dl
  427885:	stc    
  427886:	mov    edx,0x835d4e0c
  42788b:	in     al,dx
  42788c:	ffreep st(3)
  42788e:	mov    eax,0x4a305e02
  427893:	lea    ecx,[esp+edx*1+0x77e38d4e]
  42789a:	std    
  42789b:	jmp    FWORD PTR [ecx]
  42789d:	push   0xffffff83
  42789f:	fnstenv [esi]
  4278a1:	sahf   
  4278a2:	sbb    eax,0xc1bc19ff
  4278a7:	setb   bh
  4278aa:	(bad)  
  4278ab:	call   FWORD PTR [esi]
  4278ad:	mov    bl,0x84
  4278af:	dec    eax
  4278b0:	sti    
  4278b1:	mov    ah,0xf6
  4278b3:	push   eax
  4278b4:	out    0xf0,al
  4278b6:	lahf   
  4278b7:	(bad)  
  4278b8:	mov    ecx,0x2b89f9b0
  4278bd:	les    eax,FWORD PTR [ebx-0x4143f601]
  4278c3:	add    esi,ecx
  4278c5:	aaa    
  4278c6:	add    BYTE PTR [edi],0x4b
  4278c9:	jb     0x4278c1
  4278cb:	push   ecx
  4278cc:	aaa    
  4278cd:	add    al,BYTE PTR [eax-0x1b27c70]
  4278d3:	(bad)  
  4278d4:	mov    edx,0x8b85118d
  4278d9:	dec    esp
  4278da:	(bad)  
  4278db:	(bad)  
  4278dc:	mov    esp,0x3f878110
  4278e1:	loopne 0x4278b5
  4278e3:	repz add BYTE PTR [eax],al
  4278e6:	add    eax,0x3b51817d
  4278eb:	fdivr  DWORD PTR ds:0xfedbba0b
  4278f1:	push   DWORD PTR [edi]
  4278f3:	mov    ebp,esp
  4278f5:	pop    esi
  4278f6:	mov    dl,0x80
  4278f8:	mov    dh,0x58
  4278fa:	(bad)  
  4278fb:	xlat   BYTE PTR ds:[ebx]
  4278fc:	sahf   
  4278fd:	add    BYTE PTR [edi],dh
  4278ff:	(bad)  
  427900:	retf   0xddf3
  427903:	adc    DWORD PTR [ebp+0x10a707c2],ecx
  427909:	pop    eax
  42790a:	dec    edi
  42790b:	xchg   esi,eax
  42790c:	(bad)  
  42790d:	cli    
  42790e:	push   eax
  42790f:	sub    dh,bl
  427911:	repz mov esp,0x1dd77905
  427917:	push   ss
  427918:	xchg   dx,ax
  42791a:	fld    QWORD PTR [ecx+0x7a]
  42791d:	cli    
  42791e:	hlt    
  42791f:	pop    ecx
  427920:	adc    BYTE PTR [edi+0x36],0x4d
  427924:	(bad)  
  427925:	gs fwait
  427927:	push   ds
  427928:	jp     0x4278b7
  42792a:	mov    ds:0x9288dda1,al
  42792f:	gs ins DWORD PTR es:[edi],dx
  427931:	fs (bad) 
  427933:	dec    esp
  427934:	inc    BYTE PTR [esi+0x886797a]
  42793a:	stos   BYTE PTR es:[edi],al
  42793b:	daa    
  42793c:	popa   
  42793d:	dec    esi
  42793e:	mov    esp,0xe84fcfa2
  427943:	fistp  DWORD PTR [eax-0x17cbc900]
  427949:	mov    BYTE PTR [eax],al
  42794b:	add    bh,dh
  42794d:	enter  0x8aec,0x4a
  427951:	pusha  
  427952:	cmp    BYTE PTR [ecx-0x7274be6a],0x7a
  427959:	inc    esp
  42795a:	pop    DWORD PTR [ebx]
  42795c:	scas   al,BYTE PTR es:[edi]
  42795d:	shl    BYTE PTR [edi-0x16],0x1b
  427961:	mov    cl,0xfd
  427963:	xchg   ebx,eax
  427964:	cmovl  esi,DWORD PTR [esi+0x6f3437a4]
  42796b:	leave  
  42796c:	pushf  
  42796d:	scas   al,BYTE PTR es:[edi]
  42796e:	lock nop
  427970:	jmp    0xb7e5:0x658ab65b
  427977:	jle    0x42791f
  427979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42797a:	call   0x28fbb082
  42797f:	stc    
  427980:	inc    ebx
  427981:	scas   eax,DWORD PTR es:[edi]
  427982:	mov    ebp,0x89b65f5b
  427987:	jle    0x4279e5
  427989:	lods   al,BYTE PTR ds:[esi]
  42798a:	lods   eax,DWORD PTR ds:[esi]
  42798b:	ja     0x4279dd
  42798d:	ss jno 0x427991
  427990:	dec    ebx
  427991:	int    0x89
  427993:	nop
  427994:	and    bl,0xa
  427997:	jg     0x4279d5
  427999:	fisttp DWORD PTR [edi]
  42799b:	adc    DWORD PTR [edi-0x557517cd],0x18d95f48
  4279a5:	(bad)  
  4279a6:	repnz mov esp,0x427c8cb
  4279ac:	sub    al,0xf8
  4279ae:	fdivr  DWORD PTR [edx]
  4279b0:	add    BYTE PTR [eax],al
  4279b2:	in     al,0xad
  4279b4:	push   ebp
  4279b5:	or     al,0xb0
  4279b7:	cmp    ebx,ebx
  4279b9:	(bad)  
  4279ba:	out    0xb7,eax
  4279bc:	test   al,0xf7
  4279be:	xor    edx,ebx
  4279c0:	cmp    si,WORD PTR [edi]
  4279c3:	enter  0xec00,0xab
  4279c7:	sbb    al,0x7d
  4279c9:	sub    DWORD PTR [ebx],edi
  4279cb:	out    0x4e,al
  4279cd:	cmp    dh,al
  4279cf:	mov    bh,0x51
  4279d1:	sahf   
  4279d2:	push   ecx
  4279d3:	cmp    eax,0x49ff6451
  4279d8:	push   ecx
  4279d9:	or     DWORD PTR [edx+esi*4],0x78b586fb
  4279e0:	adc    eax,0x8651af7e
  4279e5:	jns    0x427a03
  4279e7:	outs   dx,BYTE PTR ds:[esi]
  4279e8:	pop    eax
  4279e9:	outs   dx,BYTE PTR ds:[esi]
  4279ea:	and    DWORD PTR ds:0x760c5d74,edi
  4279f0:	pop    eax
  4279f1:	pop    esi
  4279f2:	adc    DWORD PTR [edi+0x1236d6f3],esi
  4279f8:	(bad)  
  4279f9:	(bad)  gs:[eax*4+0x134346b]
  427a01:	shl    DWORD PTR [ecx-0x50],cl
  427a04:	je     0x427a4f
  427a06:	mov    WORD PTR [edi],cs
  427a08:	(bad)  
  427a09:	inc    ecx
  427a0a:	retf   
  427a0b:	xchg   esp,eax
  427a0c:	add    ecx,ebp
  427a0e:	(bad)  
  427a0f:	idiv   eax
  427a11:	mov    ecx,0xbe0575b5
  427a16:	add    BYTE PTR [eax],al
  427a18:	mov    ebp,0x6f625176
  427a1d:	cmp    eax,0x3cb850e9
  427a22:	cli    
  427a23:	gs je  0x4279ee
  427a26:	(bad)  
  427a27:	div    BYTE PTR [esi-0x26]
  427a2a:	push   0x5c
  427a2c:	pop    ds
  427a2d:	popa   
  427a2e:	pop    ecx
  427a2f:	ror    DWORD PTR [eax],1
  427a31:	mov    eax,ds:0xf6c1e901
  427a36:	clc    
  427a37:	cmp    edx,esp
  427a39:	mov    ecx,0xf6ae39c3
  427a3e:	cld    
  427a3f:	add    dh,ah
  427a41:	scas   eax,DWORD PTR es:[edi]
  427a42:	std    
  427a43:	push   DWORD PTR [ecx-0x238b3e55]
  427a49:	mov    esi,0xb1236ab9
  427a4e:	je     0x427a30
  427a50:	jbe    0x427a22
  427a52:	dec    esp
  427a53:	mov    al,ds:0x458c34de
  427a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a59:	addr16 dec edi
  427a5b:	mov    ebx,DWORD PTR [eax-0x4dba7c99]
  427a61:	iret   
  427a62:	pop    ebp
  427a63:	cld    
  427a64:	xor    DWORD PTR [edi+0x32aac084],edi
  427a6a:	test   ebx,0xe74db1a
  427a70:	adc    DWORD PTR [ecx-0xe],ecx
  427a73:	mov    esp,ebx
  427a75:	sub    al,0x7a
  427a77:	enter  0xcfe1,0xb2
  427a7b:	mov    DWORD PTR [eax],eax
  427a7d:	add    al,dh
  427a7f:	mov    esi,0xcff675f5
  427a84:	outs   dx,BYTE PTR ds:[esi]
  427a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a86:	xor    BYTE PTR [edi+0x61f27d81],bh
  427a8c:	add    DWORD PTR [ebp+0x12],0xffffffab
  427a90:	or     DWORD PTR [eax+0x11],edx
  427a93:	add    cl,BYTE PTR gs:[ebx+0x50f76759]
  427a9a:	push   esi
  427a9b:	pop    edi
  427a9c:	stos   BYTE PTR es:[edi],al
  427a9d:	add    DWORD PTR [ebp+0x4e04baed],eax
  427aa3:	imul   eax,DWORD PTR [ebx-0x573b6014],0x2a341e02
  427aad:	shl    dh,0x76
  427ab0:	add    dl,BYTE PTR [ebx+0x21]
  427ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ab4:	rcl    DWORD PTR [esi+0x49],0xaf
  427ab8:	mov    ah,0x64
  427aba:	aaa    
  427abb:	data16 jge 0x427ab9
  427abe:	mov    ah,0x8d
  427ac0:	(bad)  
  427ac2:	fcom   st(6)
  427ac4:	std    
  427ac5:	call   FWORD PTR [ebp+0x1f]
  427ac8:	mov    dh,BYTE PTR [ebp-0x1]
  427acb:	and    eax,0x4dc0d46d
  427ad0:	(bad)  
  427ad1:	xor    ecx,DWORD PTR [si-0x2]
  427ad5:	(bad)  
  427ad6:	mov    esp,0xb28cce97
  427adb:	xor    DWORD PTR [ebx+edi*8-0x40],edi
  427adf:	std    
  427ae0:	mov    bh,0x1
  427ae2:	add    BYTE PTR [eax],al
  427ae4:	aaa    
  427ae5:	dec    ebp
  427ae6:	jle    0x427a75
  427ae8:	repnz and DWORD PTR [edx-0x5],edi
  427aec:	test   al,0xd2
  427aee:	inc    eax
  427aef:	call   0x40cba4
  427af4:	fs (bad) 
  427af6:	cmp    bl,al
  427af8:	inc    eax
  427af9:	fldcw  WORD PTR [eax-0x7eb2c900]
  427aff:	clc    
  427b00:	sbb    BYTE PTR [esi-0x7e],0x9e
  427b04:	aaa    
  427b05:	dec    ebp
  427b06:	(bad)  
  427b07:	gs adc al,dl
  427b0a:	repnz fisttp WORD PTR [edi]
  427b0d:	aam    0xfa
  427b0f:	jmp    0x427b60
  427b11:	fistp  DWORD PTR [eax+eax*1-0x83d37c9]
  427b18:	out    0xa2,eax
  427b1a:	call   DWORD PTR [edx-0x46]
  427b1d:	shl    cl,1
  427b1f:	cli    
  427b20:	inc    eax
  427b21:	cs into 
  427b23:	dec    esi
  427b24:	scas   al,BYTE PTR es:[edi]
  427b25:	cwde   
  427b26:	jbe    0x427ab1
  427b28:	mov    dl,0x49
  427b2a:	jbe    0x427b41
  427b2c:	sbb    DWORD PTR [ebp-0x42],0xffffffff
  427b30:	mov    ebx,0xaa13f30c
  427b35:	xor    ebp,DWORD PTR ds:0x6ee76770
  427b3b:	inc    edx
  427b3c:	addr16 mov cl,0x55
  427b3f:	jl     0x427b50
  427b41:	outs   dx,DWORD PTR ds:[esi]
  427b42:	dec    edx
  427b43:	add    al,0x37
  427b45:	add    eax,ebx
  427b47:	outs   dx,DWORD PTR ds:[esi]
  427b48:	add    BYTE PTR [eax],al
  427b4a:	lock mov cl,0xb0
  427b4d:	jnp    0x427b0d
  427b4f:	clc    
  427b50:	mov    bh,0x87
  427b52:	fistp  QWORD PTR [esi]
  427b54:	xor    eax,0x752c5114
  427b59:	shl    eax,0xe6
  427b5c:	aaa    
  427b5d:	jnp    0x427b81
  427b5f:	sbb    al,0xfa
  427b61:	ret    
  427b62:	shl    BYTE PTR [ecx-0x24aef75c],0x74
  427b69:	icebp  
  427b6a:	in     al,0xdb
  427b6c:	(bad)  
  427b6d:	cmp    eax,0xd2e833cc
  427b72:	add    eax,0xafd3a2ab
  427b77:	clc    
  427b78:	pop    edi
  427b79:	mov    edx,edi
  427b7b:	dec    edi
  427b7c:	mov    eax,0xa5ed0beb
  427b81:	add    ebx,DWORD PTR [ecx]
  427b83:	cmp    DWORD PTR [esi+0x3fe8aa04],edi
  427b89:	mov    edx,eax
  427b8b:	fistp  QWORD PTR [ebx+edi*2]
  427b8e:	ins    BYTE PTR es:[edi],dx
  427b8f:	dec    ebx
  427b90:	retf   0x5c1b
  427b93:	ds pop edi
  427b95:	stc    
  427b96:	dec    esp
  427b97:	add    ch,BYTE PTR [eax]
  427b99:	cmp    al,0xfa
  427b9b:	sub    edx,DWORD PTR [eax-0x17cbc8b9]
  427ba1:	or     ch,BYTE PTR [edx-0x29bb988d]
  427ba7:	dec    ebx
  427ba8:	add    eax,0x9b3e2c76
  427bad:	fld    DWORD PTR [eax]
  427baf:	add    BYTE PTR [ecx+0x372b016b],al
  427bb5:	xor    al,0x54
  427bb7:	bound  ecx,QWORD PTR [edi+0x3a75edb3]
  427bbd:	xor    al,0x1
  427bbf:	cmp    ah,ch
  427bc1:	loop   0x427c29
  427bc3:	cmp    ebp,DWORD PTR [esi-0x74ce7f39]
  427bc9:	push   esp
  427bca:	fwait
  427bcb:	jmp    0xe8474804
  427bd0:	xor    al,0x34
  427bd2:	cs xchg edx,eax
  427bd4:	or     DWORD PTR [edi+0x7fae19c3],esi
  427bda:	jns    0x427b80
  427bdc:	dec    ebp
  427bdd:	cmp    DWORD PTR [ecx-0x7ecbcb15],edi
  427be3:	sbb    DWORD PTR [ebx-0x4e16ff40],0x30f6fa3c
  427bed:	sub    edi,edi
  427bef:	call   0xe7008128
  427bf4:	and    BYTE PTR [ecx],dh
  427bf6:	(bad)  
  427bf7:	call   0xba053130
  427bfc:	or     eax,0x74f81927
  427c01:	cmp    eax,0x4e4ac89
  427c06:	mov    esi,0x4cf8de
  427c0b:	jmp    0x6c905244
  427c10:	outs   dx,DWORD PTR ds:[esi]
  427c11:	jno    0x427c6c
  427c13:	inc    ecx
  427c14:	add    BYTE PTR [eax],al
  427c16:	jge    0x427bb3
  427c18:	add    ecx,ebp
  427c1a:	test   eax,0x47265171
  427c1f:	ins    DWORD PTR es:[edi],dx
  427c20:	cli    
  427c21:	hlt    
  427c22:	pushf  
  427c23:	cs inc ecx
  427c25:	jmp    0x654cf92b
  427c2a:	jmp    0x1e427d61
  427c2f:	dec    bx
  427c31:	(bad)  
  427c32:	fcmovnb st,st(4)
  427c34:	dec    edi
  427c35:	(bad)  
  427c36:	fcmovnbe st,st(0)
  427c38:	dec    edi
  427c39:	(bad)  
  427c3a:	ds mov ah,0xc1
  427c3d:	bt     DWORD PTR [ebx-0x4fe20000],eax
  427c44:	inc    esp
  427c45:	loopne 0x427bdc
  427c47:	xor    BYTE PTR [ebp+edx*2+0x558d65c6],cl
  427c4e:	stos   BYTE PTR es:[edi],al
  427c4f:	gs dec edx
  427c51:	mov    DWORD PTR [ebx-0x40],ecx
  427c54:	cmc    
  427c55:	push   ecx
  427c56:	jb     0x427c15
  427c58:	ror    BYTE PTR [edi],0x53
  427c5b:	cmp    DWORD PTR [ecx],eax
  427c5d:	add    dh,bl
  427c5f:	scas   eax,DWORD PTR es:[edi]
  427c60:	inc    esp
  427c61:	loopne 0x427ca8
  427c63:	xor    BYTE PTR [ebp+edx*2+0x558d6582],cl
  427c6a:	mov    fs,WORD PTR [ebp+0x64]
  427c6d:	adc    BYTE PTR [ebp-0x45],cl
  427c70:	jae    0x427c4a
  427c72:	sub    DWORD PTR [ebp-0x3a],ecx
  427c75:	push   eax
  427c76:	sub    DWORD PTR [ecx+0x32],esp
  427c79:	test   DWORD PTR [eax],eax
  427c7b:	add    dh,cl
  427c7d:	sub    al,BYTE PTR [ebx+ecx*2-0x7cfecf61]
  427c84:	imul   esi,eax,0x4
  427c87:	movlps QWORD PTR [eax],xmm0
  427c8a:	add    BYTE PTR [eax],al
  427c8c:	mov    gs,WORD PTR [edi+0x2fe5d444]
  427c92:	mov    WORD PTR [ebp+0x6],ss
  427c95:	bound  ax,DWORD PTR [eax]
  427c98:	dec    esi
  427c99:	adc    BYTE PTR [ecx],al
  427c9b:	push   eax
  427c9c:	or     DWORD PTR [ecx+0x32],esp
  427c9f:	test   DWORD PTR [esi],ebx
  427ca1:	sub    eax,DWORD PTR [esi+ebx*1-0x74fecfa1]
  427ca8:	aaa    
  427ca9:	nop
  427caa:	xchg   WORD PTR [edi],bp
  427cad:	loopne 0x427c78
  427caf:	mov    DWORD PTR [ebp-0x79053162],0x30c07b71
  427cb9:	enter  0x77,0x37
  427cbd:	dec    ebp
  427cbe:	lea    eax,[ebp+0x1f]
  427cc1:	mov    DWORD PTR ds:0xd479628d,0x4cd9004e
  427ccb:	push   eax
  427ccc:	clc    
  427ccd:	cld    
  427cce:	enter  0xf784,0x42
  427cd2:	jnp    0x427cb6
  427cd4:	aaa    
  427cd5:	dec    ebp
  427cd6:	inc    BYTE PTR [esi+0x5d87a17a]
  427cdc:	out    0x44,eax
  427cde:	push   ss
  427cdf:	or     eax,DWORD PTR [eax]
  427ce1:	add    BYTE PTR [ecx+0x37fffe83],bh
  427ce7:	(bad)  
  427ce8:	shl    bl,cl
  427cea:	lods   al,BYTE PTR ds:[esi]
  427ceb:	adc    BYTE PTR [ecx-0x73],ah
  427cee:	inc    ebx
  427cef:	dec    esp
  427cf0:	cli    
  427cf1:	mov    BYTE PTR [edx],dl
  427cf3:	mov    ecx,0x4a335a36
  427cf8:	adc    BYTE PTR [ebx-0x7701b2c9],0xfa
  427cff:	mov    eax,0x4e3f428c
  427d04:	mov    ebx,0x8cf645eb
  427d09:	or     BYTE PTR [esi+0x340017f4],dh
  427d0f:	sbb    eax,0x77fe23f1
  427d14:	in     al,dx
  427d15:	xchg   bh,ch
  427d17:	inc    esp
  427d18:	in     al,dx
  427d19:	aas    
  427d1a:	std    
  427d1b:	aad    0x40
  427d1d:	call   0xfbba5820
  427d22:	mov    edx,0xefef2834
  427d27:	loop   0x427d8f
  427d29:	dec    ebx
  427d2a:	cmp    al,0xa9
  427d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d2d:	jnp    0x427d7e
  427d2f:	sbb    eax,0xae2c7963
  427d34:	and    BYTE PTR [edx+eiz*2-0x51],ch
  427d38:	or     BYTE PTR [ebx],0xd1
  427d3b:	repz pop esi
  427d3d:	inc    eax
  427d3e:	movups XMMWORD PTR [edx+0x79],xmm3
  427d42:	or     al,0xb1
  427d44:	test   al,0xf0
  427d46:	add    BYTE PTR [eax],al
  427d48:	dec    edi
  427d49:	jecxz  0x427d98
  427d4b:	add    al,0x80
  427d4d:	ins    BYTE PTR es:[edi],dx
  427d4e:	shr    DWORD PTR [ebp+eiz*8-0x51],cl
  427d52:	retf   0xb877
  427d55:	cmp    ebp,DWORD PTR [ebp+0x77]
  427d58:	arpl   WORD PTR [edx],bp
  427d5a:	adc    eax,DWORD PTR [ebx-0x369ac511]
  427d60:	loopne 0x427dad
  427d62:	sar    BYTE PTR [esi-0x33],0x3a
  427d66:	outs   dx,BYTE PTR ds:[esi]
  427d67:	pop    esp
  427d68:	fs dec esp
  427d6a:	inc    esp
  427d6b:	mov    ds:0x5b6c3abd,eax
  427d70:	inc    ebx
  427d71:	and    al,0xd7
  427d73:	inc    ebx
  427d74:	pop    ds
  427d75:	sbb    al,0x4
  427d77:	les    ebp,FWORD PTR [eax-0x57369306]
  427d7d:	dec    ebx
  427d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d7f:	jle    0x427d1e
  427d81:	cmp    ch,BYTE PTR [ebx-0x3f]
  427d84:	test   BYTE PTR [esi-0xef79053],ch
  427d8a:	dec    ebx
  427d8b:	adc    al,0x48
  427d8d:	bnd jmp 0x427d96
  427d90:	stc    
  427d91:	leave  
  427d92:	dec    edx
  427d93:	ja     0x427e01
  427d95:	push   es
  427d96:	pop    ds
  427d97:	mov    esi,edx
  427d99:	aaa    
  427d9a:	cmp    ebp,esi
  427d9c:	cmp    BYTE PTR [edi+0x3d84e101],ch
  427da2:	push   eax
  427da3:	ror    ecx,1
  427da5:	lock lock jb 0x427e1f
  427da9:	pop    esi
  427daa:	xchg   BYTE PTR [eax+eax*1+0x43bac400],ch
  427db1:	or     eax,0xde09032f
  427db6:	mov    dh,0xff
  427db8:	stc    
  427db9:	push   es
  427dba:	mov    al,ds:0xadfd4cb1
  427dbf:	and    edx,DWORD PTR [ecx-0x68]
  427dc2:	mov    eax,ds:0xf66218ea
  427dc7:	push   ecx
  427dc8:	xchg   cl,dh
  427dca:	in     al,0x3e
  427dcc:	push   eax
  427dcd:	icebp  
  427dce:	lods   eax,DWORD PTR ds:[esi]
  427dcf:	out    dx,eax
  427dd0:	aam    0x62
  427dd2:	sub    al,0xe4
  427dd4:	stc    
  427dd5:	cmp    BYTE PTR [ebx-0x4f],al
  427dd8:	inc    esp
  427dd9:	lds    esp,FWORD PTR [ecx-0x41]
  427ddc:	fdiv   DWORD PTR [edx+0x2c]
  427ddf:	in     al,0xf9
  427de1:	sbb    BYTE PTR [ebx],bh
  427de3:	mov    cl,0x44
  427de5:	leave  
  427de6:	mov    ebp,0xe3a6512c
  427deb:	xor    DWORD PTR [esi+0x9b13f24],eax
  427df1:	cmp    DWORD PTR [eax-0x1d],eax
  427df4:	or     BYTE PTR [edx-0x51],ah
  427df7:	inc    ecx
  427df8:	imul   esi,DWORD PTR [ebp+0x13013434],0x3ce8e18a
  427e02:	and    al,0x3d
  427e04:	cli    
  427e05:	outs   dx,BYTE PTR ds:[esi]
  427e06:	xchg   DWORD PTR [ecx-0x6],ebp
  427e09:	cld    
  427e0a:	shr    BYTE PTR [edx],0x41
  427e0d:	jmp    0x2098597b
  427e12:	add    BYTE PTR [eax],al
  427e14:	cmc    
  427e15:	fiadd  WORD PTR [ebp-0x3ab744c3]
  427e1b:	add    BYTE PTR [edi+0x35],bl
  427e1e:	add    DWORD PTR [ebx-0x38],edx
  427e21:	push   0x62
  427e23:	or     BYTE PTR [ecx+0x75],bh
  427e26:	cli    
  427e27:	sub    DWORD PTR ss:[bx+di+0x0],eax
  427e2c:	mov    dl,BYTE PTR es:[edi+edi*8+0x21]
  427e31:	scas   al,BYTE PTR es:[edi]
  427e32:	stc    
  427e33:	mov    DWORD PTR [ebx+0x11ff83d5],esp
  427e39:	mov    ecx,0x351e0187
  427e3e:	arpl   WORD PTR [ebp-0x6d],dx
  427e41:	inc    esp
  427e42:	retf   0x3658
  427e45:	inc    esp
  427e46:	xchg   esi,eax
  427e47:	add    BYTE PTR [esi],bl
  427e49:	dec    ebx
  427e4a:	push   eax
  427e4b:	lea    ebp,[ebx-0x2c]
  427e4e:	pop    eax
  427e4f:	call   0x441ab8
  427e54:	xchg   ebp,eax
  427e55:	aaa    
  427e56:	jnp    0x427ebd
  427e58:	or     dh,BYTE PTR [eax]
  427e5a:	or     dh,0x4f
  427e5d:	mov    cl,0x4c
  427e5f:	sar    BYTE PTR [edi],1
  427e61:	not    DWORD PTR [bx+si-0x2e]
  427e65:	mov    ecx,0x745b0fc0
  427e6a:	add    DWORD PTR [eax],eax
  427e6c:	fisubr WORD PTR [ebx-0x47ec7302]
  427e72:	dec    edi
  427e73:	push   edi
  427e74:	mov    eax,ds:0x851a5f
  427e79:	add    dh,bl
  427e7b:	test   BYTE PTR cs:[edx],dh
  427e7e:	lahf   
  427e7f:	xor    al,0x1
  427e81:	push   0x49
  427e83:	mov    cl,0xb4
  427e85:	test   al,0x20
  427e87:	mov    edi,0x4b658f5
  427e8c:	popf   
  427e8d:	add    BYTE PTR [esi+0x5f844ab],bl
  427e93:	sub    BYTE PTR [ecx-0x1],dl
  427e96:	aaa    
  427e97:	jl     0x427e9b
  427e99:	jmp    0x40c911
  427e9e:	mov    edx,0x74e6297
  427ea3:	cli    
  427ea4:	int    0x13
  427ea6:	mov    dl,0xa
  427ea8:	add    al,0x85
  427eaa:	arpl   WORD PTR [edx-0x2],cx
  427ead:	(bad)  
  427eae:	mov    esp,0x2f876287
  427eb3:	enter  0xefc9,0xe5
  427eb7:	mov    dl,0x16
  427eb9:	adc    esi,DWORD PTR [edi+0x4d]
  427ebc:	into   
  427ebd:	cli    
  427ebe:	inc    esi
  427ebf:	enter  0xb44,0xba
  427ec3:	add    eax,DWORD PTR ds:0xba073700
  427ec9:	cli    
  427eca:	ss push esi
  427ecc:	lods   al,BYTE PTR ds:[esi]
  427ecd:	inc    ebp
  427ece:	or     dh,bh
  427ed0:	add    DWORD PTR [ebp-0x48aa831],0x5730f367
  427eda:	ret    0xbea8
  427edd:	stc    
  427ede:	add    BYTE PTR [eax],al
  427ee0:	call   0xb3fee553
  427ee5:	ja     0x427f5c
  427ee7:	pop    ecx
  427ee8:	jle    0x427eb2
  427eea:	cmp    eax,0xfddfc10b
  427eef:	push   DWORD PTR [edi]
  427ef1:	ret    0xefba
  427ef4:	dec    ebp
  427ef5:	xor    eax,ebx
  427ef7:	mov    WORD PTR [edx-0x4b],fs
  427efa:	ror    BYTE PTR [esi-0x3e],1
  427efd:	rol    BYTE PTR ds:0xd0aea8fb,0x65
  427f04:	aaa    
  427f05:	ret    0x4e4c
  427f08:	scas   al,BYTE PTR es:[edi]
  427f09:	and    BYTE PTR [ebp-0x79],ch
  427f0c:	aas    
  427f0d:	sbb    eax,0x343b5174
  427f12:	ins    DWORD PTR es:[edi],dx
  427f13:	inc    ebx
  427f14:	or     bl,al
  427f16:	rol    DWORD PTR [eax+0x74532cba],0x6c
  427f1d:	xor    al,0x5d
  427f1f:	jle    0x427f60
  427f21:	aaa    
  427f22:	inc    ebx
  427f23:	je     0x427f10
  427f25:	sbb    ebp,ebx
  427f27:	lods   al,BYTE PTR ds:[esi]
  427f28:	stos   BYTE PTR es:[edi],al
  427f29:	sub    al,0x33
  427f2b:	je     0x427f79
  427f2d:	into   
  427f2e:	data16 jp 0x427f28
  427f31:	mov    edi,0x327780f6
  427f36:	jmp    0x427ee4
  427f38:	das    
  427f39:	into   
  427f3a:	ins    BYTE PTR es:[edi],dx
  427f3b:	dec    edx
  427f3c:	stos   BYTE PTR es:[edi],al
  427f3d:	inc    edi
  427f3e:	add    BYTE PTR [eax+0x17bf46f],0x0
  427f45:	add    BYTE PTR [eax+0x74],dl
  427f48:	gs inc ebx
  427f4a:	mov    ds:0x3f7e6502,eax
  427f4f:	aaa    
  427f50:	jmp    0x427fc5
  427f52:	addr16 mov bl,0xb0
  427f55:	jae    0x427f09
  427f57:	call   0xb03fdc2f
  427f5c:	shl    BYTE PTR [ebx-0x45],cl
  427f5f:	jae    0x427fb5
  427f61:	adc    BYTE PTR [eax],bl
  427f63:	je     0x427fb5
  427f65:	or     al,0x63
  427f67:	hlt    
  427f68:	out    0xc3,eax
  427f6a:	stos   DWORD PTR es:[edi],eax
  427f6b:	call   0xb01bdc2b
  427f70:	stos   BYTE PTR es:[edi],al
  427f71:	jae    0x427f43
  427f73:	sub    DWORD PTR [edi+0x6c],esp
  427f76:	dec    ecx
  427f77:	shl    ah,0x86
  427f7a:	mov    edi,0xad001d34
  427f7f:	lock mov ch,BYTE PTR [edx+ecx*1]
  427f83:	aaa    
  427f84:	repz mov ebp,esi
  427f87:	ss jnp 0x427ffd
  427f8a:	mov    al,0xf0
  427f8c:	add    BYTE PTR [ecx+0x10],bh
  427f8f:	sub    al,0x51
  427f91:	outs   dx,BYTE PTR ds:[esi]
  427f92:	bound  ebp,QWORD PTR [esi]
  427f94:	xchg   ah,ah
  427f96:	adc    al,0xaf
  427f98:	inc    esp
  427f99:	dec    ebp
  427f9a:	clc    
  427f9b:	sub    edx,DWORD PTR [ecx+0x56]
  427f9e:	mov    ch,BYTE PTR [esi]
  427fa0:	xchg   BYTE PTR [esp+ebx*8-0x1a66f652],ah
  427fa7:	in     al,0x10
  427fa9:	add    BYTE PTR fs:[eax],al
  427fac:	repz scas al,BYTE PTR es:[edi]
  427fae:	inc    esp
  427faf:	xor    eax,edx
  427fb1:	sub    ecx,DWORD PTR [edx]
  427fb3:	gs aad 0x39
  427fb6:	cli    
  427fb7:	imul   edi,DWORD PTR es:[ecx],0x50
  427fbb:	icebp  
  427fbc:	mov    ecx,0xb165232
  427fc1:	xchg   BYTE PTR cs:[eax+eiz*4+0x34e9cccc],cl
  427fc9:	xor    al,0x67
  427fcb:	xchg   ebp,eax
  427fcc:	in     al,dx
  427fcd:	dec    ebp
  427fce:	repz pop es
  427fd0:	test   BYTE PTR [ecx],bh
  427fd2:	pop    edx
  427fd3:	(bad)  
  427fd4:	stc    
  427fd5:	ins    BYTE PTR es:[edi],dx
  427fd6:	mov    esi,0xc9d6338
  427fdb:	fiadd  WORD PTR [ebp+0x355b04f8]
  427fe1:	into   
  427fe2:	add    cl,al
  427fe4:	push   esp
  427fe5:	ds cli 
  427fe7:	(bad)  
  427fe8:	jl     0x427fea
  427fea:	sti    
  427feb:	mov    esi,0xc1074d65
  427ff0:	iret   
  427ff1:	inc    ecx
  427ff2:	cli    
  427ff3:	scas   al,BYTE PTR es:[edi]
  427ff4:	ins    BYTE PTR es:[edi],dx
  427ff5:	pop    ebx
  427ff6:	mul    BYTE PTR [esi-0x6498b3bb]
  427ffc:	inc    ebp
  427ffd:	cmp    DWORD PTR [edi-0x18],esp
  428000:	or     al,0x75
  428002:	test   DWORD PTR [esi+0xbddb25],0x81ecb543
  42800c:	stos   BYTE PTR es:[edi],al
  42800d:	jns    0x428010
  42800f:	add    BYTE PTR [eax],al
  428011:	add    BYTE PTR [esi-0x61039b52],bl
  428017:	pop    ebx
  428018:	dec    edi
  428019:	push   0xffffff8d
  42801b:	addr16 xor eax,0xffffffe6
  42801f:	push   ecx
  428020:	cmp    esi,0x9
  428023:	mov    dh,0x3b
  428025:	cwde   
  428026:	ins    BYTE PTR es:[edi],dx
  428027:	jno    0x428023
  428029:	test   BYTE PTR [esi],cl
  42802b:	cmp    eax,0xda195603
  428030:	xchg   DWORD PTR [ebp+0x6],eax
  428033:	mov    eax,0x19f5f473
  428038:	mov    WORD PTR [ebp-0x2a],es
  42803b:	push   esi
  42803c:	outs   dx,BYTE PTR ds:[esi]
  42803d:	mov    DWORD PTR [ebx-0x190f7e43],edx
  428043:	jmp    0x315d788b
  428048:	add    DWORD PTR [eax],eax
  42804a:	inc    esi
  42804b:	inc    esp
  42804c:	xchg   esp,eax
  42804d:	add    BYTE PTR [esi],cl
  42804f:	pop    esi
  428050:	not    edi
  428052:	addr16 push ss
  428054:	mov    ebx,0xf5e1068b
  428059:	sbb    DWORD PTR [ecx],0xe0000c3
  42805f:	inc    esi
  428060:	dec    ebx
  428061:	lea    ebx,[ebx-0x78]
  428064:	idiv   edi
  428066:	stc    
  428067:	mov    dh,0xb9
  428069:	call   0x3a2c67
  42806e:	push   edx
  42806f:	lock je 0x4280b4
  428072:	sbb    edi,edi
  428074:	(bad)  
  428075:	xor    eax,DWORD PTR [eax]
  428077:	add    BYTE PTR [eax-0x21810954],al
  42807d:	pop    es
  42807e:	je     0x428078
  428080:	and    ebp,DWORD PTR [esi]
  428082:	sub    dh,dh
  428084:	aaa    
  428085:	rol    cl,cl
  428087:	repz mov ebp,0xbb2dee4e
  42808d:	aas    
  42808e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42808f:	cli    
  428090:	cwde   
  428091:	mov    ch,0x7a
  428093:	xchg   esp,eax
  428094:	inc    edx
  428095:	add    ebp,DWORD PTR [edi-0x5]
  428098:	mov    BYTE PTR [eax-0x32ca90bc],al
  42809e:	cmp    al,0x26
  4280a0:	jne    0x4280e7
  4280a2:	mov    eax,0x8d3d9c0
  4280a7:	inc    edi
  4280a8:	test   BYTE PTR [ebp+ebp*1+0x341ae3cb],0xc0
  4280b0:	rol    ebx,1
  4280b2:	or     BYTE PTR [edi-0x42],al
  4280b5:	(bad)
  4280b9:	push   es
  4280ba:	rcr    BYTE PTR [ecx+0x6e],1
  4280bd:	or     edx,edx
  4280bf:	xchg   BYTE PTR [ebx-0x37],cl
  4280c2:	pusha  
  4280c3:	dec    esp
  4280c4:	mov    DWORD PTR [edi+0x3da28cf2],esi
  4280ca:	int    0xe7
  4280cc:	and    BYTE PTR [ebp-0x5472fffb],dl
  4280d2:	jnp    0x428149
  4280d4:	add    eax,esi
  4280d6:	push   ebp
  4280d7:	hlt    
  4280d8:	scas   al,BYTE PTR es:[edi]
  4280d9:	sbb    eax,0x65fe
  4280de:	mov    BYTE PTR [eax+0x55fb3f3],ch
  4280e4:	push   edi
  4280e5:	cdq    
  4280e6:	aaa    
  4280e7:	sbb    eax,0x903f4d7d
  4280ec:	ret    
  4280ed:	fild   QWORD PTR [esi+0x728d7960]
  4280f3:	loope  0x42816b
  4280f5:	inc    ebp
  4280f6:	iret   
  4280f7:	xchg   esi,eax
  4280f8:	dec    eax
  4280f9:	mov    DWORD PTR [edx-0x1f],esi
  4280fc:	xor    al,0xc0
  4280fe:	addr16 xor al,0x38
  428101:	aam    0xbd
  428103:	test   eax,0x280a7eec
  428108:	add    BYTE PTR [ebp+0x6],dl
  42810b:	jbe    0x4280f5
  42810d:	fnstsw WORD PTR [ebx]
  42810f:	sahf   
  428110:	out    0x5b,eax
  428112:	sub    eax,DWORD PTR [edi+0x7b]
  428115:	jo     0x428104
  428117:	cld    
  428118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428119:	sti    
  42811a:	mov    BYTE PTR [eax+0x18005f5f],cl
  428120:	pusha  
  428121:	or     BYTE PTR [ebx+0x3703e5b8],0x87
  428128:	mov    edx,0x5d8b597c
  42812d:	xchg   edi,eax
  42812e:	sbb    edi,DWORD PTR [edi+eiz*8-0x5e3ec8fd]
  428135:	pop    ds
  428136:	add    DWORD PTR [edi+0x480e5b10],edi
  42813c:	sub    esi,DWORD PTR [eax-0x45]
  42813f:	hlt    
  428140:	xacquire xchg DWORD PTR [eax],eax
  428143:	add    BYTE PTR [edx+0x35],dl
  428146:	call   0xf87ca64e
  42814b:	test   DWORD PTR [ebx+0x33],0xb7b3fb95
  428152:	retf   
  428153:	jg     0x42818c
  428155:	xor    al,0xe8
  428157:	rcr    DWORD PTR [eax],cl
  428159:	call   0x21f:0x1d0c6ff3
  428160:	aaa    
  428161:	xor    al,0x6f
  428163:	cmp    DWORD PTR [edi+0x46],edi
  428166:	sub    BYTE PTR [edi+ebx*2],al
  428169:	ss call 0xe0e0b870
  42816f:	outs   dx,BYTE PTR ds:[esi]
  428170:	sub    dh,al
  428172:	test   eax,0x9231d8c3
  428177:	jnp    0x428148
  428179:	add    WORD PTR [edx+0x650a2b1c],dx
  428180:	popf   
  428181:	xor    al,0x1
  428183:	jmp    0x7167393f
  428188:	cmp    esi,DWORD PTR [ecx+eax*1]
  42818b:	cmp    DWORD PTR [ebx+0x34e9fa2d],ecx
  428191:	xchg   DWORD PTR [esi+0x1a],ecx
  428194:	test   BYTE PTR [edx+0x2f60c55c],bh
  42819a:	adc    al,0x75
  42819c:	and    esi,DWORD PTR [ecx+eax*1+0x19]
  4281a0:	cld    
  4281a1:	inc    BYTE PTR [edi-0x779faf53]
  4281a7:	fld    QWORD PTR [eax]
  4281a9:	add    BYTE PTR [eax],bl
  4281ab:	mov    BYTE PTR fs:[ebp-0x521697f0],dh
  4281b2:	push   ss
  4281b3:	xor    al,0x1
  4281b5:	ins    DWORD PTR es:[edi],dx
  4281b6:	repz ds test ebx,edx
  4281ba:	cmp    esi,DWORD PTR [ecx+eax*1]
  4281bd:	rcl    DWORD PTR [eax+eax*2],0x1
  4281c1:	jmp    0xdd3cbc24
  4281c6:	mov    ch,dh
  4281c8:	cmp    eax,0x8806a1e9
  4281cd:	lods   eax,DWORD PTR ds:[esi]
  4281ce:	push   eax
  4281cf:	dec    eax
  4281d0:	sub    ah,BYTE PTR ss:[eax]
  4281d3:	mov    dh,0x49
  4281d5:	call   0xff46b60e
  4281da:	cmp    esi,DWORD PTR [ecx+eax*1]
  4281dd:	pusha  
  4281de:	call   DWORD PTR [ebp+0x19]
  4281e1:	in     al,0x92
  4281e3:	xor    eax,DWORD PTR [ecx]
  4281e5:	jmp    0xf967fa65
  4281ea:	aas    
  4281eb:	cs add cl,ch
  4281ee:	xor    al,0x9a
  4281f0:	jns    0x428252
  4281f2:	clc    
  4281f3:	push   ebp
  4281f4:	and    DWORD PTR [eax],eax
  4281f6:	arpl   WORD PTR [ecx],bp
  4281f8:	push   ds
  4281f9:	cmp    BYTE PTR [esi],dl
  4281fb:	nop
  4281fc:	fstp   DWORD PTR [eax+0x796335de]
  428202:	arpl   WORD PTR [ecx],bp
  428204:	push   ds
  428205:	inc    eax
  428206:	jbe    0x428198
  428208:	int    0x98
  42820a:	sahf   
  42820b:	xor    eax,0x7a63
  428210:	adc    ebp,DWORD PTR [ecx]
  428212:	push   ds
  428213:	dec    esp
  428214:	xchg   ax,ax
  428216:	rcr    DWORD PTR [eax+0x7b63358e],0x23
  42821d:	sub    DWORD PTR [esi],ebx
  42821f:	pop    eax
  428220:	es nop
  428222:	mov    ch,0x98
  428224:	mov    ?,WORD PTR ds:0x358edde8
  42822a:	add    DWORD PTR [ebp+0x8958da],ecx
  428230:	pop    esi
  428231:	xor    eax,0x34f1be51
  428236:	add    DWORD PTR [eax],eax
  428238:	mov    eax,0x722475a2
  42823d:	mov    ah,0x44
  42823f:	and    al,0x9e
  428241:	push   es
  428242:	dec    edx
  428243:	push   edi
  428244:	adc    DWORD PTR [ebp+edi*8+0x10],ecx
  428248:	mov    ?,WORD PTR ds:0xb921c084
  42824e:	scas   al,BYTE PTR es:[edi]
  42824f:	add    BYTE PTR [esi],bl
  428251:	xor    eax,0xacfa848c
  428256:	add    DWORD PTR [eax],eax
  428258:	push   cs
  428259:	add    eax,0xf9a31564
  42825e:	sbb    eax,0xf709ae44
  428263:	adc    eax,0x41480e
  428268:	xchg   esp,edi
  42826a:	sbb    eax,0xf7612620
  42826f:	push   DWORD PTR [edi]
  428271:	sbb    edi,esi
  428273:	or     al,BYTE PTR [eax]
  428275:	add    BYTE PTR [eax+0x370005aa],bh
  42827b:	test   al,0x89
  42827d:	and    al,0xbf
  42827f:	sbb    bh,dh
  428281:	jmp    DWORD PTR [edi+0x51]
  428284:	ins    BYTE PTR es:[edi],dx
  428285:	je     0x4282a2
  428287:	cmp    edi,DWORD PTR [edx+0x44]
  42828a:	adc    ebp,DWORD PTR [edi-0x30]
  42828d:	dec    edi
  42828e:	or     dl,dl
  428290:	adc    esp,edi
  428292:	inc    edi
  428293:	pop    ebx
  428294:	add    eax,0xef467785
  428299:	mov    WORD PTR [ebx+0x370075fe],?
  42829f:	sbb    ecx,esi
  4282a1:	push   ecx
  4282a2:	mov    BYTE PTR [esi],ch
  4282a4:	and    bl,BYTE PTR [eax]
  4282a6:	mov    dl,0x56
  4282a8:	sub    DWORD PTR [eax-0x1c],esp
  4282ab:	jmp    0x4015:0x8f4afad4
  4282b2:	aaa    
  4282b3:	mov    al,ds:0x960b7445
  4282b8:	shl    DWORD PTR [ebx],1
  4282ba:	inc    edi
  4282bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282bc:	inc    esp
  4282bd:	call   0xfbaef2b0
  4282c2:	mov    dl,0x5a
  4282c4:	jmp    0x428304
  4282c6:	int    0xeb
  4282c8:	jp     0x42833e
  4282ca:	adc    edi,DWORD PTR [edi-0x4ac3183b]
  4282d0:	add    al,0x0
  4282d2:	sub    dl,dl
  4282d4:	and    DWORD PTR [eax],esp
  4282d6:	lods   al,BYTE PTR ds:[esi]
  4282d7:	shl    DWORD PTR [ecx],0x20
  4282da:	add    BYTE PTR [eax],al
  4282dc:	sbb    BYTE PTR [edx+0x57bc1822],dh
  4282e2:	sar    dl,1
  4282e4:	add    DWORD PTR [ecx],0x22
  4282e7:	mov    bh,0x26
  4282e9:	sbb    bh,dh
  4282eb:	jmp    DWORD PTR [edi+0x34]
  4282ee:	sar    BYTE PTR [esi],1
  4282f0:	mov    edi,0xf380db2e
  4282f5:	dec    eax
  4282f6:	ins    DWORD PTR es:[edi],dx
  4282f7:	inc    ebx
  4282f8:	pop    ebp
  4282f9:	inc    edx
  4282fa:	pop    edi
  4282fb:	div    BYTE PTR [eax]
  4282fd:	xchg   DWORD PTR [edi+0x3d],ebp
  428300:	fbld   TBYTE PTR [ebp-0x47339297]
  428306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428307:	test   ecx,0x808222e
  42830d:	or     esi,DWORD PTR [ebp-0x39]
  428310:	push   esp
  428311:	pop    eax
  428312:	nop
  428313:	inc    eax
  428314:	push   edi
  428315:	xor    al,0xe8
  428317:	js     0x4282b8
  428319:	imul   ecx,DWORD PTR [edi-0x7cbb4c04],0x6c
  428320:	mov    WORD PTR [edi],gs
  428322:	hlt    
  428323:	daa    
  428324:	and    ebx,DWORD PTR [eax+ebx*8]
  428327:	lea    edi,[ebp+0x2f]
  42832a:	mov    al,0xcf
  42832c:	push   esp
  42832d:	pop    eax
  42832e:	(bad)  
  428330:	ins    DWORD PTR es:[edi],dx
  428331:	test   al,0x4
  428333:	and    BYTE PTR [edi+0x35],bl
  428336:	jb     0x4283a5
  428338:	pop    esp
  428339:	(bad)
  42833d:	mov    ebp,DWORD PTR [edi+0x66]
  428340:	add    BYTE PTR [eax],al
  428342:	repnz icebp 
  428344:	jecxz  0x428349
  428346:	loop   0x428302
  428348:	inc    ebx
  428349:	adc    BYTE PTR [ebx-0x48],0xe3
  42834d:	add    esi,DWORD PTR [edi]
  42834f:	cmp    DWORD PTR [edx-0x28c3652c],0x48
  428356:	mov    edx,0x70d01078
  42835b:	das    
  42835c:	cmc    
  42835d:	or     eax,DWORD PTR [ebp+0x74]
  428360:	call   0x8e827ee5
  428365:	out    dx,eax
  428366:	mov    ebx,0xec5901a8
  42836b:	push   ss
  42836c:	outs   dx,BYTE PTR ds:[esi]
  42836d:	push   esi
  42836e:	xor    al,0x34
  428370:	outs   dx,BYTE PTR fs:[si]
  428373:	test   eax,0x9c8b41d1
  428378:	xchg   edx,eax
  428379:	jmp    0xe8476db2
  42837e:	xor    al,0x34
  428380:	push   ebx
  428381:	je     0x428379
  428383:	(bad)  
  428384:	push   eax
  428385:	ins    BYTE PTR es:[edi],dx
  428386:	idiv   BYTE PTR [esi-0x44719bb0]
  42838c:	sti    
  42838d:	scas   al,BYTE PTR es:[edi]
  42838e:	dec    esp
  42838f:	in     al,dx
  428390:	(bad)  
  428391:	call   0xc82b37ca
  428396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428397:	cs cli 
  428399:	push   0x13
  42839b:	sub    esi,DWORD PTR [ebp-0x3c]
  42839e:	dec    ecx
  42839f:	out    dx,eax
  4283a0:	jb     0x42836a
  4283a2:	mov    di,0x6983
  4283a6:	add    BYTE PTR [eax],al
  4283a8:	sbb    BYTE PTR [ebx],ch
  4283aa:	cli    
  4283ab:	sbb    DWORD PTR [eax],eax
  4283ad:	repz push eax
  4283af:	outs   dx,BYTE PTR ds:[esi]
  4283b0:	mov    WORD PTR es:[edi],cs
  4283b3:	test   eax,0x6143c134
  4283b8:	cmp    DWORD PTR [edi+0x2ad06983],0xfffffffa
  4283bf:	mov    ecx,0x46fc3afc
  4283c4:	fsubr  QWORD PTR [esp+ebx*2+0x3d]
  4283c8:	inc    esi
  4283c9:	xchg   esp,eax
  4283ca:	addr16 mov bh,0xbf
  4283cd:	test   al,0xb9
  4283cf:	xchg   ecx,eax
  4283d0:	fadd   QWORD PTR [ebx-0x6e]
  4283d3:	jmp    0x2705390c
  4283d8:	not    BYTE PTR ds:0x3434e91e
  4283de:	ret    0x80a4
  4283e1:	inc    esi
  4283e2:	add    DWORD PTR [eax],eax
  4283e4:	push   ds
  4283e5:	xor    bh,BYTE PTR [esi+0x1540e45]
  4283eb:	add    BYTE PTR [esi],cl
  4283ed:	mov    cl,0x44
  4283ef:	hlt    
  4283f0:	mov    ebp,0x66858ca3
  4283f5:	pushf  
  4283f6:	idiv   bh
  4283f8:	cs add eax,0xe382ff4b
  4283fe:	call   0x31876d56
  428403:	adc    ebx,DWORD PTR [esi]
  428405:	cmp    BYTE PTR [eax+eax*8+0x534a3a03],al
  42840c:	add    BYTE PTR [eax],al
  42840e:	sbb    eax,0x1ef844ab
  428413:	adc    bl,cl
  428415:	push   ecx
  428416:	pop    esp
  428417:	cmp    BYTE PTR [ebx+0x2],ah
  42841a:	inc    esp
  42841b:	aaa    
  42841c:	mov    WORD PTR [ebp-0x3e],ss
  42841f:	lods   al,BYTE PTR ds:[esi]
  428420:	mov    WORD PTR [eax-0x17096555],cs
  428426:	mov    BYTE PTR [ecx-0xa],al
  428429:	call   DWORD PTR [eax-0x4b]
  42842c:	test   BYTE PTR [ebx],0x7c
  42842f:	ins    DWORD PTR es:[edi],dx
  428430:	cmp    BYTE PTR [ebp+0xa],bl
  428433:	and    ecx,DWORD PTR [ebx+ecx*4]
  428436:	pop    ebx
  428437:	cdq    
  428438:	imul   ecx,ebx,0x6a01315e
  42843e:	mov    ecx,edi
  428440:	loope  0x4283e4
  428442:	hlt    
  428443:	cdq    
  428444:	imul   bl
  428446:	inc    esi
  428447:	call   0xfe9d:0xa5e6f874
  42844e:	or     edx,edi
  428450:	push   edi
  428451:	pop    ebx
  428452:	pop    ss
  428453:	jbe    0x4284a9
  428455:	mov    ecx,DWORD PTR [edx-0x48]
  428458:	in     al,dx
  428459:	add    BYTE PTR [edi],bl
  42845b:	xor    DWORD PTR [ecx],eax
  42845d:	push   esi
  42845e:	aaa    
  42845f:	out    dx,al
  428460:	adc    ax,0x28bf
  428464:	mov    esi,0x4401afff
  428469:	xchg   DWORD PTR [edi],eax
  42846b:	dec    esp
  42846c:	push   0xff260181
  428471:	inc    DWORD PTR [eax]
  428473:	add    BYTE PTR [edi],dh
  428475:	mov    al,ds:0x1ac28cd0
  42847a:	imul   edi,ebx,0xe840a1e8
  428480:	das    
  428481:	pushf  
  428482:	addr16 sti 
  428484:	mov    bl,0xda
  428486:	lock inc esp
  428488:	mov    ah,0x4
  42848a:	add    DWORD PTR [edi],ebp
  42848c:	not    DWORD PTR [edi+0x5b3a7a6f]
  428492:	sub    al,0xc2
  428494:	cmp    esp,edx
  428496:	xor    eax,eax
  428498:	mov    edx,0xf704e6cc
  42849d:	adc    DWORD PTR [eax+0x7c],eax
  4284a0:	pushf  
  4284a1:	or     DWORD PTR [esi],edi
  4284a3:	test   DWORD PTR [ecx+0x4c3ffa3c],esp
  4284a9:	fucomp st(0)
  4284ab:	test   BYTE PTR [ebx+ebx*8+0x79],0xf2
  4284b0:	add    DWORD PTR [ecx+edi*8],ecx
  4284b3:	mov    cl,0xab
  4284b5:	pop    ss
  4284b6:	(bad)  
  4284b7:	cli    
  4284b8:	jo     0x42844f
  4284ba:	fisttp WORD PTR [eax+0x36bdd63b]
  4284c0:	jns    0x4284c8
  4284c2:	pop    ecx
  4284c3:	das    
  4284c4:	ja     0x4284ba
  4284c6:	jbe    0x4284cc
  4284c8:	enter  0x3fa1,0xe7
  4284cc:	xor    eax,0x6e5a3e2a
  4284d1:	pop    ecx
  4284d2:	retf   0x4b86
  4284d5:	cdq    
  4284d6:	pop    ecx
  4284d7:	and    BYTE PTR [eax],al
  4284d9:	add    BYTE PTR [ecx+0x8ef7534],cl
  4284df:	in     eax,dx
  4284e0:	addr16 add al,0x37
  4284e3:	xor    al,0x0
  4284e5:	inc    esi
  4284e7:	xor    al,0xe8
  4284e9:	jl     0x4284e0
  4284eb:	xor    DWORD PTR [bp+di+0x72],edi
  4284ef:	sub    al,0xb7
  4284f1:	inc    ebx
  4284f2:	aas    
  4284f3:	jno    0x4284cd
  4284f5:	shr    DWORD PTR [eax+0x3b],cl
  4284f8:	push   ebp
  4284f9:	inc    ebx
  4284fa:	xchg   DWORD PTR [ebx],ebp
  4284fc:	pop    ebp
  4284fd:	clc    
  4284fe:	mov    ebx,0x50dbe081
  428503:	and    DWORD PTR [esi],0x4
  428506:	pop    eax
  428507:	std    
  428508:	jecxz  0x4284dc
  42850a:	mov    ecx,0x37ddf079
  42850f:	sbb    al,0xe
  428511:	stc    
  428512:	mov    ebp,0x793b122b
  428517:	cmp    al,ch
  428519:	into   
  42851a:	mov    ecx,0xcb576918
  42851f:	xor    al,0xe8
  428521:	add    esi,eax
  428523:	sbb    DWORD PTR [edi+0x2e],0x428461f
  42852a:	in     al,0x9b
  42852c:	out    0x3,al
  42852e:	mov    DWORD PTR [ebx],ebp
  428530:	push   cs
  428531:	cld    
  428532:	jge    0x428595
  428534:	xor    al,0x41
  428536:	cmp    BYTE PTR [ebx+ebp*2],dh
  428539:	push   ecx
  42853a:	mov    eax,0x4d172c
  42853f:	add    BYTE PTR [eax],ah
  428541:	das    
  428542:	jmp    0x4285c3
  428544:	mov    ah,0x35
  428546:	call   0xe0e3e14e
  42854b:	jnp    0x42853f
  42854d:	adc    edx,eax
  42854f:	push   0xd0e8344c
  428554:	icebp  
  428555:	xchg   BYTE PTR [ecx],al
  428557:	call   0x2af4:0xd9fd40cf
  42855e:	dec    edx
  42855f:	jb     0x4285d0
  428561:	mov    ebp,0xa99d0543
  428566:	jmp    0xe96176cb
  42856b:	dec    ebp
  42856c:	ds xor al,0x1
  42856f:	ins    DWORD PTR es:[edi],dx
  428570:	je     0x4285b1
  428572:	test   DWORD PTR [eax-0x7efecbcb],ebx
  428578:	add    BYTE PTR [edi],bh
  42857a:	add    ecx,ebp
  42857c:	adc    dh,BYTE PTR [ebx]
  42857e:	cli    
  42857f:	sbb    al,0x9f
  428581:	cmc    
  428582:	cmp    eax,0x880659e9
  428587:	sub    al,0x4f
  428589:	arpl   WORD PTR [esi+0x6750de],di
  42858f:	jmp    0xe93db6c8
  428594:	xor    al,0x34
  428596:	mov    BYTE PTR [edi+eax*2],ch
  428599:	xor    ebx,edi
  42859b:	call   0x2ccab9d4
  4285a0:	sbb    esi,DWORD PTR [ecx]
  4285a2:	sti    
  4285a3:	call   0x347685a8
  4285a8:	mov    BYTE PTR [ebx+eiz*1],ch
  4285ab:	mov    ecx,0xb4e36573
  4285b0:	add    cl,ch
  4285b2:	xor    al,0x1c
  4285b4:	ss push esp
  4285b6:	cmp    esi,DWORD PTR [esp+ecx*4]
  4285b9:	cld    
  4285ba:	cmp    ah,ch
  4285bc:	jle    0x4285a7
  4285be:	xor    al,0x34
  4285c0:	jmp    0x1764bdc
  4285c5:	ins    BYTE PTR es:[edi],dx
  4285c6:	pushw  es
  4285c8:	mov    ecx,0x134336a
  4285cd:	inc    ecx
  4285ce:	sbb    al,cl
  4285d0:	add    BYTE PTR [eax],al
  4285d2:	pop    esi
  4285d3:	stos   DWORD PTR es:[edi],eax
  4285d4:	je     0x428586
  4285d6:	mov    dh,0xb3
  4285d8:	add    BYTE PTR [eax],al
  4285da:	dec    esi
  4285db:	mov    ss,WORD PTR ds:0x8c361e95
  4285e1:	jne    0x428595
  4285e3:	fadd   DWORD PTR [ebx-0x16c9f200]
  4285e9:	pop    es
  4285ea:	fwait
  4285eb:	xor    BYTE PTR [ecx],al
  4285ed:	jmp    0x43b656
  4285f2:	test   DWORD PTR [ebx+0x51],esp
  4285f5:	adc    ecx,esi
  4285f7:	xor    eax,0x8a458c
  4285fc:	dec    edi
  4285fd:	dec    DWORD PTR [eax-0x4d]
  428600:	ror    BYTE PTR [edi],0x5b
  428603:	aam    0x0
  428605:	add    dh,cl
  428607:	lods   al,BYTE PTR ds:[esi]
  428608:	inc    esp
  428609:	les    eax,FWORD PTR [eax]
  42860b:	add    BYTE PTR [esi],bl
  42860d:	stc    
  42860e:	not    dh
  428610:	pop    ebx
  428611:	jne    0x428619
  428613:	test   DWORD PTR [eax+0x35],ebp
  428616:	add    DWORD PTR [eax],eax
  428618:	and    DWORD PTR [edx+eax*1],0x13581be
  42861f:	add    BYTE PTR [eax-0x6f],cl
  428622:	je     0x428620
  428624:	and    esi,esp
  428626:	int    0x53
  428628:	pop    esi
  428629:	stc    
  42862a:	not    BYTE PTR ds:0x4145c2
  428630:	sbb    esi,DWORD PTR [ebp+0x75]
  428633:	jp     0x4285e6
  428635:	and    al,0x2
  428637:	lea    ebx,[ebx-0x20]
  42863a:	dec    esi
  42863b:	(bad)  
  42863c:	jnp    0x4285d7
  42863e:	dec    edx
  42863f:	push   eax
  428640:	dec    ecx
  428641:	xchg   ecx,eax
  428642:	adc    al,0xfc
  428644:	outs   dx,BYTE PTR ds:[esi]
  428645:	cmc    
  428646:	stc    
  428647:	test   BYTE PTR [esi],cl
  428649:	sbb    DWORD PTR [ebx-0x1],ebx
  42864c:	aaa    
  42864d:	or     dh,dh
  42864f:	mov    edx,?
  428651:	xchg   esi,eax
  428652:	int3   
  428653:	cli    
  428654:	ret    0xcf72
  428657:	dec    edi
  428658:	call   0x283e97c6
  42865d:	(bad)  
  42865f:	test   bh,dh
  428661:	fidiv  WORD PTR [ecx+0x5653aa86]
  428667:	clc    
  428668:	and    cl,BYTE PTR [edx+0x63]
  42866b:	test   edi,esi
  42866d:	sar    BYTE PTR [ebp-0x7affff9b],0x88
  428674:	mov    cl,0x64
  428676:	or     BYTE PTR [edx],dh
  428678:	arpl   WORD PTR [eax+0xf],bx
  42867b:	mov    ch,0x89
  42867d:	add    BYTE PTR [edi],dh
  42867f:	and    ch,dl
  428681:	sti    
  428682:	mov    esp,0x62facb50
  428687:	pop    es
  428688:	js     0x428707
  42868a:	out    0x6a,eax
  42868c:	test   al,0x3
  42868e:	xor    al,0x1b
  428690:	(bad)  
  428691:	out    0x74,eax
  428693:	nop
  428694:	arpl   bx,di
  428696:	mov    ah,0xd6
  428698:	adc    al,0x85
  42869a:	imul   DWORD PTR [eax+0xf]
  42869d:	xchg   DWORD PTR [edx+0xf],eax
  4286a0:	int    0x86
  4286a2:	xor    edx,0xd1a97d5b
  4286a8:	add    al,0x2b
  4286ab:	push   ds
  4286ac:	gs inc edx
  4286ae:	xor    ecx,DWORD PTR [esi]
  4286b0:	dec    ecx
  4286b1:	(bad)  
  4286b2:	cli    
  4286b3:	mov    edx,0x1b2a365c
  4286b8:	inc    BYTE PTR [esi+0xb68f57f]
  4286be:	mov    dl,0xe6
  4286c0:	fs sti 
  4286c2:	jo     0x42865d
  4286c4:	jmp    0x5d8a:0x70335ffb
  4286cb:	sub    BYTE PTR [eax],ah
  4286cd:	(bad)  
  4286ce:	js     0x42866e
  4286d0:	loopne 0x428736
  4286d2:	retf   0x401b
  4286d5:	jmp    0x29e486da
  4286da:	inc    ebx
  4286db:	(bad)
  4286de:	xor    DWORD PTR [edx+0x2f],eax
  4286e1:	xor    al,0x9d
  4286e3:	js     0x428708
  4286e5:	mov    ah,0x43
  4286e7:	ins    BYTE PTR es:[edi],dx
  4286e8:	mov    dh,0x18
  4286ea:	lock add DWORD PTR [edi],esi
  4286ed:	xor    al,0xb7
  4286ef:	int    0xb1
  4286f1:	and    ah,BYTE PTR [ebp-0x30]
  4286f4:	push   esp
  4286f5:	cmp    al,0x5d
  4286f7:	mov    esi,0x4b6f825c
  4286fc:	pmullw mm5,mm1
  4286ff:	fs cld 
  428701:	mov    al,0x27
  428703:	lock dec ebp
  428705:	push   ds
  428706:	loop   0x42871b
  428708:	mov    edx,0x64fc0c70
  42870d:	cmp    DWORD PTR [esi+0x3],ecx
  428710:	fsub   QWORD PTR [ecx-0x5272c20]
  428716:	int3   
  428717:	fs int3 
  428719:	sbb    esi,ecx
  42871b:	fs dec edx
  42871d:	cmp    al,0x18
  42871f:	pop    esp
  428720:	mov    eax,0xd64b329
  428725:	in     al,0xe8
  428727:	enter  0x11b1,0x45
  42872b:	inc    edx
  42872c:	cmp    esi,DWORD PTR [esi*1-0x7c4a7487]
  428733:	idiv   DWORD PTR [ebx]
  428735:	xor    al,0xe8
  428737:	shl    dh,1
  428739:	jle    0x428749
  42873b:	cld    
  42873c:	add    BYTE PTR [eax],al
  42873e:	mov    bl,0x71
  428740:	sbb    cl,0x78
  428743:	ja     0x428746
  428745:	jbe    0x428788
  428747:	dec    esp
  428748:	adc    ebp,DWORD PTR [ecx]
  42874a:	xor    esp,DWORD PTR [edi-0x1f160a3b]
  428750:	or     BYTE PTR [esi-0x2d],bl
  428753:	sub    bh,BYTE PTR [ecx+0x134346f]
  428759:	inc    ecx
  42875a:	xchg   ebp,eax
  42875b:	mov    bh,0x0
  42875d:	jmp    0x81dc282b
  428762:	mov    ebx,0x8ce90133
  428767:	ror    BYTE PTR [ebp+0x4df34e9],0xe8
  42876e:	xor    al,0x34
  428770:	dec    esi
  428771:	jb     0x4287cd
  428773:	test   BYTE PTR [esp+ebp*2+0xefa2a0c],cl
  42877a:	in     al,0xb7
  42877c:	mov    ebx,0xfa2b99e9
  428781:	inc    ecx
  428782:	xor    eax,0x8c690134
  428787:	test   BYTE PTR [eax-0x17],dh
  42878a:	xor    al,0xa7
  42878c:	stc    
  42878d:	out    0xff,al
  42878f:	pop    eax
  428790:	test   BYTE PTR [ecx+0x644e5cff],ch
  428796:	mov    esi,0x54cef72b
  42879b:	test   BYTE PTR [esi+0x14298bae],al
  4287a1:	and    DWORD PTR [eax],eax
  4287a3:	add    cl,al
  4287a5:	add    WORD PTR [esi+edi*2+0x1e],sp
  4287aa:	push   ecx
  4287ab:	pop    esp
  4287ac:	mov    esi,0x14a6f72b
  4287b1:	test   cl,ch
  4287b3:	adc    al,0x16
  4287b5:	sub    edi,edx
  4287b7:	fs mov esi,0x148ef72b
  4287bd:	test   dl,bh
  4287bf:	add    BYTE PTR [ebx-0x4e],ah
  4287c2:	or     DWORD PTR [eax-0x72],eax
  4287c5:	cmp    eax,0x866b39f6
  4287ca:	push   es
  4287cb:	test   DWORD PTR [edx+0x2f],esi
  4287ce:	add    DWORD PTR [eax],eax
  4287d0:	jmp    0x4287de
  4287d2:	mov    esi,0x12fe7b8
  4287d7:	add    dh,dh
  4287d9:	pop    esp
  4287da:	mov    al,BYTE PTR [eax]
  4287dc:	pop    esi
  4287dd:	ret    
  4287de:	mov    bl,0x6c
  4287e0:	stc    
  4287e1:	xchg   edx,eax
  4287e2:	idiv   BYTE PTR [eax+0x12fc4]
  4287e8:	jbe    0x428815
  4287ea:	mov    eax,DWORD PTR [eax]
  4287ec:	push   ds
  4287ed:	lds    esi,FWORD PTR [ebx-0x50]
  4287f0:	xchg   esi,eax
  4287f1:	mov    ch,0x0
  4287f3:	add    BYTE PTR [esi],cl
  4287f5:	call   0x458c:0x321e9309
  4287fc:	push   edx
  4287fd:	mov    bh,0x43
  4287ff:	in     al,dx
  428800:	mov    edi,DWORD PTR [ebx-0x6d060094]
  428806:	mov    BYTE PTR [ebp+0x0],al
  428809:	add    dh,ch
  42880b:	mov    dh,0xbe
  42880d:	(bad)  
  42880e:	xchg   ebx,eax
  42880f:	gs and eax,0xbe31ce00
  428815:	inc    ebp
  428816:	out    dx,al
  428817:	daa    
  428818:	cli    
  428819:	(bad)  
  42881a:	fidivr WORD PTR [edx+0x44]
  42881d:	in     al,0x30
  42881f:	xor    BYTE PTR [ecx],al
  428821:	add    BYTE PTR [ecx-0x31dc1e04],dl
  428827:	xor    DWORD PTR [ecx],eax
  428829:	mov    DWORD PTR [ebx-0x74],esp
  42882c:	xor    BYTE PTR [ebx+ebx*1+0x65],0x8c
  428831:	test   DWORD PTR [esi+0x5efff694],ecx
  428837:	cmp    eax,0x6b3750c1
  42883c:	mov    bh,0x4f
  42883e:	mov    BYTE PTR [eax],ah
  428840:	push   cs
  428841:	maskmovq mm3,(bad)
  428842:	neg    DWORD PTR [edx]
  428844:	mov    eax,eax
  428846:	add    ah,dh
  428848:	cmp    dl,0x1b
  42884b:	sub    ah,bh
  42884d:	dec    edi
  42884e:	mov    edx,0xb2505d50
  428853:	cwde   
  428854:	(bad)  
  428855:	cld    
  428856:	pop    eax
  428857:	xchg   BYTE PTR [esi+0x5f7fc1e7],ch
  42885d:	sti    
  42885e:	add    al,0x5b
  428860:	call   0x615842ed
  428865:	sti    
  428866:	cmp    BYTE PTR [edx],ch
  428868:	ds push eax
  42886a:	xchg   ebx,ecx
  42886c:	nop
  42886d:	inc    ebp
  42886e:	add    BYTE PTR [eax],al
  428870:	das    
  428871:	retf   
  428872:	in     eax,0x6f
  428874:	mov    cl,bl
  428876:	std    
  428877:	gs xor eax,0x6a8d02c1
  42887d:	das    
  42887e:	xchg   ecx,eax
  42887f:	lea    esi,[edi]
  428881:	cmp    BYTE PTR [edi-0x5],bl
  428884:	minps  xmm1,XMMWORD PTR [ebx]
  428887:	sti    
  428888:	clc    
  428889:	int    0x82
  42888b:	sti    
  42888c:	cmp    ebp,DWORD PTR [ecx+0x176a7f9e]
  428892:	push   DWORD PTR [edi+ecx*2-0x60]
  428896:	xchg   edx,eax
  428897:	push   eax
  428898:	fadd   DWORD PTR ds:0x1ab9b860
  42889e:	(bad)  
  42889f:	(bad)  
  4288a0:	fistp  QWORD PTR [eax+0x73]
  4288a3:	add    BYTE PTR [edi],dh
  4288a5:	mov    al,ds:0xa27fc3d2
  4288aa:	add    eax,0xb1f33700
  4288af:	lea    esi,[edi]
  4288b1:	sbb    esi,DWORD PTR [ebp+0x38337986]
  4288b7:	(bad)  
  4288b8:	mov    dl,0x83
  4288ba:	fwait
  4288bb:	popa   
  4288bc:	mov    WORD PTR [ebx+0x27379f65],es
  4288c2:	mov    esp,DWORD PTR [ecx-0x41]
  4288c5:	xor    ch,al
  4288c7:	add    esi,DWORD PTR [edi+0x70d3d21b]
  4288cd:	and    al,0x67
  4288cf:	pop    esp
  4288d0:	ins    BYTE PTR es:[edi],dx
  4288d1:	lahf   
  4288d2:	ret    
  4288d3:	xchg   BYTE PTR [eax],al
  4288d5:	add    BYTE PTR [edi-0x61],dh
  4288d8:	pop    es
  4288d9:	mov    ch,0xab
  4288db:	scas   al,BYTE PTR es:[edi]
  4288dc:	pop    edi
  4288dd:	pop    esi
  4288de:	dec    esp
  4288df:	and    al,0xb8
  4288e1:	mov    WORD PTR [ebx+eax*4+0x4b],?
  4288e5:	imul   eax
  4288e7:	inc    ecx
  4288e8:	test   al,0x3
  4288ea:	shl    DWORD PTR [edx],1
  4288ec:	ins    DWORD PTR es:[edi],dx
  4288ed:	(bad)  
  4288ee:	sub    BYTE PTR [ebp+0x1f2f8765],al
  4288f4:	sub    esp,DWORD PTR [ecx-0x79]
  4288f7:	or     al,0x1d
  4288f9:	pop    ebp
  4288fa:	sbb    al,0x24
  4288fc:	fisttp WORD PTR [si]
  4288ff:	xor    eax,0xa1b1f79a
  428904:	adc    ah,ch
  428906:	stc    
  428907:	xor    al,0xe8
  428909:	add    edi,DWORD PTR [edi+0x3703e7b0]
  42890f:	or     al,0xfd
  428911:	data16 in al,dx
  428913:	and    edi,edi
  428915:	or     ebx,esp
  428917:	test   eax,0xbc756be0
  42891c:	fldenv [eax+0x6c]
  42891f:	sub    BYTE PTR [edi],0x4b
  428922:	mov    BYTE PTR [ecx+0x10406f5f],cl
  428928:	in     al,0xb9
  42892a:	stos   DWORD PTR es:[edi],eax
  42892b:	test   eax,0x34c29bc4
  428930:	add    ecx,ebp
  428932:	xor    al,0xc
  428934:	into   
  428935:	pop    eax
  428936:	xor    al,0x34
  428938:	xchg   BYTE PTR [eax+eax*1],dh
  42893b:	add    BYTE PTR [ebx],ch
  42893d:	mov    ebx,0x1f7970c2
  428942:	cs test eax,0x8e5173c4
  428948:	imul   ebp,DWORD PTR [edi],0x8c171c8c
  42894e:	fsub   QWORD PTR [eax]
  428950:	jns    0x428975
  428952:	push   0xe9345aec
  428957:	jmp    0x42898c
  428959:	pop    ds
  42895a:	cli    
  42895b:	(bad)  
  42895c:	in     eax,dx
  42895d:	loope  0x428967
  42895f:	jmp    0x6b2f43ed
  428964:	rcr    BYTE PTR [ebx],1
  428966:	cmp    BYTE PTR ds:0xe9fa21c8,0x83
  42896d:	test   DWORD PTR [esi-0x6b5010c5],eax
  428973:	or     eax,0xe90134ab
  428978:	mov    cl,0x75
  42897a:	sub    eax,0xe8fcabbb
  42897f:	into   
  428980:	inc    eax
  428981:	pop    ds
  428982:	cli    
  428983:	ins    DWORD PTR es:[edi],dx
  428984:	je     0x4289b5
  428986:	test   eax,edi
  428988:	cmp    dh,BYTE PTR [ecx+eax*1]
  42898b:	jmp    FWORD PTR [edi]
  42898d:	inc    esp
  42898e:	jne    0x428964
  428990:	push   edi
  428991:	test   eax,0x57b06409
  428996:	popf   
  428997:	jmp    0xd193bdd0
  42899c:	mov    cl,0x1e
  42899e:	cli    
  42899f:	fiadd  WORD PTR [eax]
  4289a1:	add    BYTE PTR [edx+0x27],ah
  4289a4:	add    cl,ch
  4289a6:	xor    al,0xbb
  4289a8:	xor    edx,DWORD PTR [ecx-0x3b]
  4289ab:	bound  eax,QWORD PTR [ecx]
  4289ad:	add    BYTE PTR [esi+0x36],ah
  4289b0:	add    DWORD PTR [edx],eax
  4289b2:	sahf   
  4289b3:	or     al,0x2
  4289b5:	jmp    FWORD PTR [ebx-0x71bc413e]
  4289bb:	or     edi,0xd246d68b
  4289c1:	cmp    edx,ebp
  4289c3:	xor    al,BYTE PTR [ebp+0x1369fd6]
  4289c9:	lea    ebx,[edx]
  4289cb:	dec    esp
  4289cc:	cdq    
  4289cd:	add    BYTE PTR [esi-0xe97aeca],cl
  4289d3:	add    BYTE PTR [ecx],0x0
  4289d6:	dec    ecx
  4289d7:	out    0x4a,eax
  4289d9:	push   ebx
  4289da:	(bad)  
  4289db:	repz sbb eax,0xf61cd13c
  4289e1:	adc    BYTE PTR [esi+0x118b5136],bl
  4289e7:	mov    cl,0x44
  4289e9:	and    al,0x42
  4289eb:	scas   eax,DWORD PTR es:[edi]
  4289ec:	jl     0x428a12
  4289ee:	ds scas eax,DWORD PTR es:[edi]
  4289f0:	pop    esp
  4289f1:	and    al,0x2a
  4289f3:	mov    cs,WORD PTR [ebx+0x1a]
  4289f6:	push   ds
  4289f7:	ss test eax,eax
  4289fa:	add    DWORD PTR [edx+0x360e018e],edi
  428a00:	imul   esp,DWORD PTR [eax],0x6a013622
  428a06:	add    BYTE PTR [eax],al
  428a08:	push   ss
  428a09:	xor    DWORD PTR [esp+edi*4],0x58
  428a0d:	cmc    
  428a0e:	stc    
  428a0f:	(bad)  
  428a10:	sbb    BYTE PTR [edi+0x3f0a2444],ch
  428a16:	mov    edx,0xfd5a0f
  428a1b:	add    dh,cl
  428a1d:	sub    al,0xf7
  428a1f:	add    esi,ecx
  428a21:	xor    eax,0x203a4488
  428a26:	add    eax,0xfe0c37fe
  428a2b:	jmp    FWORD PTR [esi+0x32102957]
  428a31:	stc    
  428a32:	add    al,0x0
  428a34:	aaa    
  428a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a36:	ret    0x4b23
  428a39:	cwde   
  428a3a:	shl    BYTE PTR [ebx],cl
  428a3c:	add    esp,DWORD PTR [ebx+0xb37008c]
  428a42:	data16 int3 
  428a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a45:	or     edi,esi
  428a47:	mov    WORD PTR [ebx],es
  428a49:	out    dx,eax
  428a4a:	lods   eax,DWORD PTR ds:[esi]
  428a4b:	mov    bh,0xb0
  428a4d:	or     edi,esi
  428a4f:	dec    DWORD PTR [edi+0x37006e79]
  428a55:	nop
  428a56:	shl    BYTE PTR [ebx],cl
  428a58:	repz bound ebp,QWORD PTR [esi+0x0]
  428a5c:	aaa    
  428a5d:	or     esp,DWORD PTR [esi-0x50]
  428a60:	(bad)  
  428a61:	or     edi,esi
  428a63:	mov    ebx,cs
  428a65:	and    DWORD PTR ss:[eax-0x1f45a],edi
  428a6c:	add    BYTE PTR [eax],al
  428a6e:	dec    edi
  428a6f:	lods   eax,DWORD PTR ds:[esi]
  428a70:	ins    DWORD PTR es:[edi],dx
  428a71:	add    BYTE PTR [edi],dh
  428a73:	test   al,0xd2
  428a75:	and    ebp,DWORD PTR [ebx-0x4d]
  428a78:	outs   dx,DWORD PTR ds:[esi]
  428a79:	add    BYTE PTR [edi],dh
  428a7b:	or     esp,DWORD PTR [esi-0x6c]
  428a7e:	(bad)  
  428a7f:	or     bh,dh
  428a81:	call   0x4095aa
  428a86:	ret    0x21d6
  428a89:	pop    esp
  428a8a:	addr16 loop 0x428ae7
  428a8d:	adc    eax,0xffbe1e67
  428a92:	mov    bl,0x4a
  428a94:	or     eax,DWORD PTR [ebp-0x1f4f0]
  428a9a:	mov    edx,0x3798228e
  428a9f:	or     edi,esi
  428aa1:	dec    edi
  428aa2:	cdq    
  428aa3:	xor    esp,ebx
  428aa5:	add    al,0x37
  428aa7:	xor    al,0x32
  428aa9:	pop    ebp
  428aaa:	inc    ebx
  428aab:	pop    eax
  428aac:	hlt    
  428aad:	mov    ?,WORD PTR [ebx+0x58]
  428ab0:	sub    al,0xb1
  428ab2:	push   0xacf7c389
  428ab7:	inc    ebx
  428ab8:	sub    BYTE PTR [edx+esi*4],al
  428abb:	repz loop 0x428a45
  428abe:	fbstp  TBYTE PTR [ebx]
  428ac0:	call   0xcbfa34c8
  428ac5:	jnp    0x428afe
  428ac7:	xor    al,0xe8
  428ac9:	mov    bl,0x12
  428acb:	inc    edi
  428acc:	gs enter 0x7054,0x38
  428ad1:	mov    ch,0x0
  428ad3:	add    BYTE PTR [ebp+0x46],bh
  428ad6:	call   0x7176bbcd
  428adb:	enter  0x5414,0x20
  428adf:	pop    ds
  428ae0:	pop    ebp
  428ae1:	and    al,ch
  428ae3:	add    ebp,DWORD PTR [ecx+edi*4]
  428ae6:	jne    0x428aec
  428ae8:	aaa    
  428ae9:	xor    al,0x6d
  428aeb:	mov    BYTE PTR [ebx],dl
  428aed:	mov    esp,0x843703e7
  428af2:	mov    dl,0x5c
  428af4:	ret    
  428af5:	push   edi
  428af6:	or     BYTE PTR [edi-0x4f4fa785],cl
  428afc:	js     0x428a85
  428afe:	xor    esi,edi
  428b00:	sbb    al,0x45
  428b02:	test   al,0x3
  428b04:	mov    dl,0xf4
  428b06:	fwait
  428b07:	xlat   BYTE PTR ds:[ebx]
  428b08:	ret    
  428b09:	mov    eax,0x34377bc3
  428b0e:	call   0x9461f1c6
  428b13:	daa    
  428b14:	pop    ds
  428b15:	mov    cl,0xab
  428b17:	daa    
  428b18:	ja     0x428a9d
  428b1a:	cwde   
  428b1b:	mov    ah,0xed
  428b1d:	dec    ecx
  428b1e:	add    ebp,esi
  428b20:	in     al,0x5f
  428b22:	add    DWORD PTR [ebx+esi*2-0x58],esp
  428b26:	push   ebx
  428b27:	out    0xe8,al
  428b29:	push   ebx
  428b2a:	adc    esi,ebx
  428b2c:	rol    edi,0xe
  428b2f:	sub    DWORD PTR [ebx],edi
  428b31:	mov    ecx,0x99eb4fc0
  428b36:	jo     0x428bac
  428b38:	add    BYTE PTR [eax],al
  428b3a:	mov    BYTE PTR [ebx+0x75],dl
  428b3d:	and    DWORD PTR [ebx],ebx
  428b3f:	cld    
  428b40:	mov    ecx,ebp
  428b42:	xor    al,0x1b
  428b44:	jne    0x428b4b
  428b46:	push   ebx
  428b47:	mov    bh,0x7c
  428b49:	int    0x54
  428b4b:	sbb    esi,DWORD PTR [ebp-0x3b]
  428b4e:	mov    WORD PTR [esi+0x536896c2],?
  428b54:	sbb    DWORD PTR [edx-0x7b],edx
  428b57:	push   ds
  428b58:	cli    
  428b59:	jmp    0xc5683371
  428b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b5f:	pop    ss
  428b60:	xchg   edx,eax
  428b61:	imul   eax,DWORD PTR [edx],0x60a57e1b
  428b67:	mov    eax,0xb646e7c0
  428b6c:	jae    0x428b5f
  428b6e:	xor    DWORD PTR [esi-0x62e0be36],0xfffffffb
  428b75:	dec    esi
  428b76:	mov    al,0xf4
  428b78:	je     0x428b64
  428b7a:	xchg   ebx,eax
  428b7b:	jb     0x428b82
  428b7d:	cli    
  428b7e:	outs   dx,DWORD PTR ds:[esi]
  428b7f:	mov    cl,0x44
  428b81:	or     eax,0xd18c0c4f
  428b86:	xor    al,0x34
  428b88:	xchg   BYTE PTR [ecx],ah
  428b8a:	das    
  428b8b:	daa    
  428b8c:	or     ah,BYTE PTR [esi+ebp*2+0x1a]
  428b90:	cli    
  428b91:	push   ss
  428b92:	arpl   WORD PTR [eax+0x68cf525],bp
  428b98:	xchg   esp,eax
  428b99:	add    BYTE PTR [eax],bh
  428b9b:	cmp    BYTE PTR [ecx],0x5c
  428b9e:	add    BYTE PTR [eax],al
  428ba0:	repnz push esi
  428ba2:	je     0x428bad
  428ba4:	jmp    0x366ea9ae
  428ba9:	ins    BYTE PTR es:[edi],dx
  428baa:	xchg   esp,eax
  428bab:	(bad)  
  428bac:	(bad)  
  428bae:	push   edi
  428baf:	mov    al,0xdf
  428bb1:	fld    QWORD PTR [edx+0x5760be5]
  428bb7:	add    BYTE PTR [ebx],al
  428bb9:	scas   eax,DWORD PTR es:[edi]
  428bba:	in     al,dx
  428bbb:	or     DWORD PTR [edx-0x61fffb55],0xf4574fe5
  428bc5:	das    
  428bc6:	sub    bl,bl
  428bc8:	sti    
  428bc9:	hlt    
  428bca:	icebp  
  428bcb:	push   ebx
  428bcc:	dec    esi
  428bcd:	jnp    0x428be3
  428bcf:	sbb    BYTE PTR [eax-0x2d7d060e],al
  428bd5:	sub    ecx,DWORD PTR [ebp+esi*2+0x89bfda]
  428bdc:	pop    esi
  428bdd:	xor    ch,cl
  428bdf:	cmp    ebx,ecx
  428be1:	aaa    
  428be2:	add    DWORD PTR [ebp-0x6b46a59d],ecx
  428be8:	dec    esi
  428be9:	xor    al,BYTE PTR [ecx]
  428beb:	call   0x433718
  428bf0:	test   al,0x33
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	dec    esi
  428bf5:	in     al,0x8c
  428bf7:	inc    ebp
  428bf8:	push   es
  428bf9:	call   0xe8ecd18a
  428bfe:	mov    WORD PTR [ebp-0x98462],?
  428c04:	add    BYTE PTR [eax],al
  428c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c07:	aaa    
  428c08:	add    DWORD PTR [eax],eax
  428c0a:	mov    ss,WORD PTR [eax+0x321e6ced]
  428c10:	jp     0x428c0a
  428c12:	sub    DWORD PTR [eiz*1-0x30b5c8c5],eax
  428c19:	and    BYTE PTR [ecx-0x80],ah
  428c1c:	cmp    BYTE PTR [eax-0x14],0x36
  428c20:	push   esi
  428c21:	push   eax
  428c22:	mov    esp,0x4afab556
  428c27:	ret    
  428c28:	repz aas 
  428c2a:	aaa    
  428c2b:	add    al,0xf7
  428c2e:	addr16 test al,0x81
  428c31:	js     0x428bff
  428c33:	(bad)  
  428c34:	push   esi
  428c35:	push   eax
  428c36:	iret   
  428c37:	push   es
  428c38:	push   edx
  428c39:	sti    
  428c3a:	mov    eax,0x2afbb844
  428c3f:	or     DWORD PTR [eax+0x70b37775],0x0
  428c46:	aaa    
  428c47:	or     esp,DWORD PTR [esi-0x2c]
  428c4a:	test   eax,0x7986fe0b
  428c4f:	into   
  428c50:	shl    bh,0x2d
  428c53:	or     edi,esi
  428c55:	(bad)  
  428c56:	js     0x428ca8
  428c58:	imul   esp,DWORD PTR [edx],0xc2fe0b37
  428c5e:	cli    
  428c5f:	call   0x458d:0xb370023
  428c66:	imul   ebx,edx,0x4f
  428c69:	lea    eax,[eax]
  428c6b:	add    BYTE PTR [edx+0x50fb598b],dh
  428c71:	(bad)  [edx-0x6ef8b7b2]
  428c77:	call   0x30341260
  428c7c:	and    al,0xcb
  428c7e:	std    
  428c7f:	test   bh,dh
  428c81:	fcomip st,st(7)
  428c83:	dec    esi
  428c84:	test   BYTE PTR [edx-0x44e0ba78],bh
  428c8a:	in     eax,0xdc
  428c8c:	jle    0x428c57
  428c8e:	std    
  428c8f:	gs xor eax,0xba048e34
  428c95:	xchg   BYTE PTR [eax+ecx*4],dl
  428c98:	mov    dl,0xb3
  428c9a:	adc    al,0x5a
  428c9c:	cld    
  428c9d:	or     esi,DWORD PTR [esi]
  428c9f:	add    ch,ah
  428ca1:	sbb    al,0xaa
  428ca3:	xchg   ch,ch
  428ca5:	xor    BYTE PTR [esi+0x3f],dh
  428ca8:	push   ds
  428ca9:	jg     0x428c9f
  428cab:	rol    BYTE PTR [ecx+ebp*4+0x6c],1
  428caf:	pop    ebx
  428cb0:	pop    edi
  428cb1:	jmp    0xdc79909d
  428cb6:	jno    0x428cbc
  428cb8:	aaa    
  428cb9:	xor    al,0xc0
  428cbb:	loopne 0x428c97
  428cbd:	sbb    al,0xcb
  428cbf:	ins    DWORD PTR es:[edi],dx
  428cc0:	aas    
  428cc1:	sbb    eax,0xe69f5c3d
  428cc6:	push   ebx
  428cc7:	pop    edx
  428cc8:	pushf  
  428cc9:	jl     0x428cdd
  428ccb:	mov    ebp,0x8d14f06f
  428cd0:	add    BYTE PTR [eax],al
  428cd2:	mov    ds:0xb65c8bb0,eax
  428cd7:	cmove  eax,DWORD PTR [esi]
  428cda:	aaa    
  428cdb:	xor    al,0x37
  428cdd:	mov    dl,0xb1
  428cdf:	and    DWORD PTR [ebx],esi
  428ce1:	xchg   ebx,ecx
  428ce3:	push   edi
  428ce4:	push   eax
  428ce5:	add    al,0x37
  428ce7:	xor    al,0x6d
  428ce9:	ret    0x820c
  428cec:	pop    edi
  428ced:	cmp    ecx,DWORD PTR [edi-0x5]
  428cf0:	fistp  WORD PTR [eax+0x4c]
  428cf3:	mov    bh,0x27
  428cf5:	or     DWORD PTR [ebx+0x3703e68c],esi
  428cfb:	es jmp 0x54d0:0x5d59c4f3
  428d03:	pop    esp
  428d04:	xor    BYTE PTR [ecx+0x37],0x34
  428d08:	call   0xeccc78
  428d0d:	jmp    0x61054046
  428d12:	not    DWORD PTR [edi+0x11]
  428d15:	fidiv  DWORD PTR [esp+eax*4+0x51]
  428d19:	mov    ecx,0x6409a15f
  428d1e:	(bad)  
  428d1f:	push   edi
  428d20:	and    DWORD PTR [ecx-0x16c086c0],eax
  428d26:	fidiv  DWORD PTR [eax]
  428d28:	addr16 call 0x2d6735e7
  428d2e:	xor    esi,DWORD PTR [ecx+eax*1]
  428d31:	add    esp,esi
  428d33:	ss cli 
  428d35:	out    0x0,al
  428d37:	add    BYTE PTR [ebp+0x64],bl
  428d3a:	(bad)  
  428d3b:	call   0xdc73674
  428d40:	mov    esi,DWORD PTR [ecx+eax*1]
  428d43:	jmp    0x750ea12c
  428d48:	push   cs
  428d49:	pop    ds
  428d4a:	xchg   cl,al
  428d4c:	lods   eax,DWORD PTR ds:[esi]
  428d4d:	cwde   
  428d4e:	and    eax,0xa1f19fd
  428d53:	mov    eax,gs:0xb1e9fa19
  428d59:	mov    al,ds:0xbca31125
  428d5e:	add    cl,ch
  428d60:	xor    al,0xc
  428d62:	mov    esi,0x8634345c
  428d67:	out    dx,al
  428d68:	mov    cl,0x68
  428d6a:	and    eax,0xcab2a5d9
  428d6f:	sbb    BYTE PTR [esi+0x3459911e],ah
  428d75:	xor    al,0x1
  428d77:	ins    BYTE PTR es:[edi],dx
  428d78:	hlt    
  428d79:	test   BYTE PTR cs:[ecx+0x35],dl
  428d7d:	xor    al,0x1
  428d7f:	bound  edi,QWORD PTR [eax+0x57]
  428d82:	adc    DWORD PTR [edx+0x3c],esp
  428d85:	test   eax,0x2c3a0054
  428d8a:	dec    ebx
  428d8b:	push   eax
  428d8c:	popa   
  428d8d:	out    0x1d,al
  428d8f:	test   DWORD PTR [esi+0x2c],ecx
  428d92:	test   bh,al
  428d94:	pop    ds
  428d95:	aaa    
  428d96:	add    DWORD PTR [ebp-0x47a2c556],ecx
  428d9c:	add    BYTE PTR [eax],al
  428d9e:	mov    bh,0x36
  428da0:	add    DWORD PTR [eax],eax
  428da2:	ss call 0x2444:0xa7de008c
  428daa:	loop   0x428d53
  428dac:	or     BYTE PTR [ebp+0x522d3aca],cl
  428db2:	push   ebp
  428db3:	gs dec ebx
  428db5:	push   eax
  428db6:	loope  0x428d5c
  428db8:	xchg   ebp,eax
  428db9:	add    dh,bl
  428dbb:	ss test al,al
  428dbe:	imul   esi,DWORD PTR [ebx],0xffffff82
  428dc1:	je     0x428ded
  428dc3:	dec    esp
  428dc4:	jmp    0xf6c4a19c
  428dc9:	mov    DWORD PTR [edx+0x54],ebx
  428dcc:	adc    eax,0x64b59beb
  428dd1:	and    al,0x7a
  428dd3:	mov    WORD PTR ss:[edx+edi*1-0xc],?
  428dd8:	mov    cl,0x9a
  428dda:	sahf   
  428ddb:	ss add eax,ebp
  428dde:	inc    esp
  428ddf:	lods   eax,DWORD PTR ds:[esi]
  428de0:	add    BYTE PTR [eax],al
  428de2:	adc    eax,0xd50c1df4
  428de7:	daa    
  428de8:	mov    WORD PTR [edx+edi*2+0x46],ss
  428dec:	dec    ebx
  428ded:	mov    ecx,eax
  428def:	in     eax,0x49
  428df1:	(bad)  
  428df2:	jmp    DWORD PTR [ebx-0x4ca1ffff]
  428df8:	shl    BYTE PTR [ebp+0x41],0xad
  428dfc:	je     0x428e22
  428dfe:	push   ds
  428dff:	mov    BYTE PTR [ecx+0x3700008d],bl
  428e05:	adc    DWORD PTR [edx-0x77],0x7b
  428e09:	das    
  428e0a:	stc    
  428e0b:	out    0x32,al
  428e0d:	mov    fs,ecx
  428e0f:	and    eax,DWORD PTR [ebx+0xb]
  428e12:	mov    DWORD PTR [ebx+edx*2-0x45],esi
  428e16:	xchg   ebp,eax
  428e17:	xchg   edi,eax
  428e18:	aaa    
  428e19:	or     edi,esi
  428e1b:	out    0x38,eax
  428e1d:	mov    al,ds:0xcfac0005
  428e22:	sbb    DWORD PTR [esp+ebp*4],ecx
  428e25:	adc    ecx,DWORD PTR [ecx-0x5010e4ac]
  428e2b:	xchg   BYTE PTR [ecx],al
  428e2d:	mov    esi,0x7fc6faad
  428e32:	add    eax,0x45883700
  428e37:	jne    0x428e7b
  428e39:	xchg   esi,eax
  428e3a:	shl    DWORD PTR [ebx],1
  428e3c:	adc    eax,DWORD PTR [ebx]
  428e3e:	mov    ecx,0x86fac18c
  428e43:	fmul   st,st(4)
  428e45:	or     eax,0x7fc2d70f
  428e4a:	and    DWORD PTR [eax],edi
  428e4c:	out    dx,eax
  428e4d:	(bad)  
  428e4e:	(bad)  
  428e4f:	push   DWORD PTR [edi]
  428e51:	add    edi,DWORD PTR ds:0x870b378c
  428e57:	inc    esp
  428e58:	pop    ebx
  428e59:	test   DWORD PTR [esi+0x2157ba08],0x2ca5e528
  428e63:	dec    esi
  428e64:	out    0xc1,eax
  428e66:	je     0x428dfc
  428e68:	add    BYTE PTR [eax],al
  428e6a:	aaa    
  428e6b:	or     edi,esi
  428e6d:	test   BYTE PTR [edi+0x18],dh
  428e70:	or     DWORD PTR [edi-0x17da1115],eax
  428e76:	adc    BYTE PTR [eax-0x5c4304ac],dl
  428e7c:	inc    BYTE PTR [di]
  428e7f:	xor    al,0x63
  428e81:	mov    bh,bl
  428e83:	dec    edi
  428e84:	hlt    
  428e85:	adc    al,BYTE PTR [ebp+0x5d]
  428e88:	sub    al,BYTE PTR [esi]
  428e8a:	mov    ebx,0x3703e7bf
  428e8f:	xchg   edx,eax
  428e90:	add    DWORD PTR [esp+ebp*1],edx
  428e93:	mov    al,0x6e
  428e95:	add    esi,DWORD PTR [edi]
  428e97:	xor    al,0xef
  428e99:	xor    eax,0x366b03c
  428e9e:	aaa    
  428e9f:	xor    al,0x8a
  428ea1:	sbb    al,0x50
  428ea3:	mov    al,ds:0x9ffd1a9a
  428ea8:	mov    ds,ebp
  428eaa:	das    
  428eab:	popa   
  428eac:	xchg   esp,eax
  428ead:	shl    BYTE PTR [ecx-0x4c083381],1
  428eb3:	outs   dx,DWORD PTR ds:[esi]
  428eb4:	(bad)  
  428eb5:	sti    
  428eb6:	shr    BYTE PTR ds:0xb53703da,1
  428ebc:	imul   ebx,DWORD PTR [edi],0x2f
  428ebf:	xor    edx,DWORD PTR [esi+0xa]
  428ec2:	mov    dh,0x97
  428ec4:	add    al,0xfc
  428ec6:	mov    ebp,0x2503e818
  428ecb:	sub    al,0xa3
  428ecd:	rol    BYTE PTR [eax],0x0
  428ed0:	push   esp
  428ed1:	cmp    al,0xdd
  428ed3:	add    esi,DWORD PTR [edi]
  428ed5:	xor    al,0x4e
  428ed7:	shr    DWORD PTR [edi-0x3ddff361],cl
  428edd:	fild   WORD PTR [ebx]
  428edf:	xor    BYTE PTR [edi],0x34
  428ee2:	call   0x6caf27a2
  428ee7:	add    al,0x37
  428ee9:	sbb    DWORD PTR [eax+eiz*1],ebx
  428eec:	dec    edi
  428eed:	lods   eax,DWORD PTR ds:[esi]
  428eee:	mov    eax,ds:0xe04fe355
  428ef3:	lods   al,BYTE PTR ds:[esi]
  428ef4:	icebp  
  428ef5:	sub    DWORD PTR [ebp-0x40],0x14
  428ef9:	pusha  
  428efa:	add    DWORD PTR [ecx],ebx
  428efc:	jecxz  0x428ebe
  428efe:	jnp    0x428f6f
  428f00:	loop   0x428e9a
  428f02:	lds    eax,FWORD PTR [ecx]
  428f04:	shl    bl,0x7a
  428f07:	hlt    
  428f08:	scas   eax,DWORD PTR es:[edi]
  428f09:	sahf   
  428f0a:	or     DWORD PTR [esi+0x7],edx
  428f0d:	push   esp
  428f0e:	and    DWORD PTR [edx+0x71],esp
  428f11:	or     al,0xb4
  428f13:	mov    esp,0x29851b8a
  428f18:	pop    es
  428f19:	pop    ss
  428f1a:	sti    
  428f1b:	scas   eax,DWORD PTR es:[edi]
  428f1c:	adc    BYTE PTR [ebx],bl
  428f1e:	jne    0x428f25
  428f20:	push   ebx
  428f21:	or     al,0x68
  428f23:	jnp    0x428f8e
  428f25:	sbb    edi,edx
  428f27:	xchg   ebp,eax
  428f28:	sbb    BYTE PTR [eax-0x17],al
  428f2b:	leave  
  428f2c:	mov    cl,0x1a
  428f2e:	cli    
  428f2f:	push   cs
  428f30:	pop    es
  428f31:	push   esp
  428f32:	sbb    eax,0xd2000011
  428f37:	jo     0x428f33
  428f39:	(bad)  
  428f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f3b:	movups xmm5,XMMWORD PTR [ebx+ebp*2+0x3e01521b]
  428f43:	jno    0x428f3f
  428f45:	out    0xaf,al
  428f47:	jo     0x428f6e
  428f49:	in     eax,dx
  428f4a:	scas   eax,DWORD PTR es:[edi]
  428f4b:	sub    al,0x51
  428f4d:	(bad)  
  428f4e:	in     eax,0x2f
  428f50:	xchg   BYTE PTR ds:0xf1864457,ah
  428f56:	mov    ecx,0xe6ed2580
  428f5b:	addr16 cli 
  428f5d:	sbb    BYTE PTR [edi-0x4f],dl
  428f60:	rcr    dh,0x8
  428f63:	pop    ecx
  428f64:	sti    
  428f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f66:	jmp    0x428f16
  428f68:	jl     0x428f2f
  428f6a:	sub    BYTE PTR [edi-0x519b32bc],ch
  428f70:	or     BYTE PTR [ecx],bh
  428f72:	add    al,BYTE PTR [ebp+0x17e50009]
  428f78:	dec    edi
  428f79:	(bad)  
  428f7a:	sub    BYTE PTR ds:[esi+0x5e],dl
  428f7e:	push   cs
  428f7f:	xor    dl,BYTE PTR [edx-0x75]
  428f82:	mov    bl,0xde
  428f84:	mov    ebx,0x82c64e04
  428f89:	in     al,dx
  428f8a:	iret   
  428f8b:	mov    ?,WORD PTR [ecx]
  428f8d:	add    bl,BYTE PTR [esi]
  428f8f:	xor    ecx,DWORD PTR [edi+0x57]
  428f92:	mov    esp,esi
  428f94:	leave  
  428f95:	mov    eax,0x1339b
  428f9a:	add    BYTE PTR [eax],al
  428f9c:	xchg   BYTE PTR [edx-0x53e1ff7e],bl
  428fa2:	mov    esi,0x43aa166a
  428fa7:	hlt    
  428fa8:	(bad)  [eax-0x74]
  428fab:	inc    ebp
  428fac:	push   esi
  428fad:	leave  
  428fae:	dec    ecx
  428faf:	(bad)  
  428fb0:	mov    ds:0xde001f8a,eax
  428fb5:	xor    bh,BYTE PTR [esi-0x5e2b5bb]
  428fbb:	dec    esi
  428fbd:	push   edi
  428fbe:	inc    esp
  428fbf:	lock std 
  428fc1:	xor    al,BYTE PTR [ecx]
  428fc3:	add    cl,bl
  428fc5:	or     BYTE PTR [edx],dl
  428fc7:	push   ss
  428fc8:	push   cs
  428fc9:	xor    BYTE PTR [edx-0x3c],bh
  428fcc:	retf   0xf63d
  428fcf:	lea    esp,[ebx]
  428fd1:	pop    eax
  428fd2:	cld    
  428fd3:	(bad)  
  428fd4:	jns    0x428fb5
  428fd6:	dec    edi
  428fd7:	push   esi
  428fd8:	jns    0x428fd5
  428fda:	mov    esp,0x148340e8
  428fdf:	xor    BYTE PTR [ebp-0xe],ch
  428fe2:	stc    
  428fe3:	test   dh,bl
  428fe5:	cld    
  428fe6:	pop    ss
  428fe7:	push   esi
  428fe8:	inc    eax
  428fe9:	fimul  DWORD PTR [ebp+eax*2+0x3461dfd6]
  428ff0:	aaa    
  428ff1:	pusha  
  428ff2:	ret    
  428ff3:	(bad)  
  428ff4:	fimul  WORD PTR [edx]
  428ff6:	fadd   QWORD PTR [eax]
  428ff8:	mov    dl,0x37
  428ffa:	pop    ecx
  428ffb:	lea    ebp,[edx+0xfb4fe4]
  429001:	add    BYTE PTR [eax-0x4c],dl
  429004:	xchg   DWORD PTR [eax+ecx*2],eax
  429007:	test   esi,eax
  429009:	jle    0x42904b
  42900b:	or     esp,edx
  42900d:	ret    
  42900e:	(bad)  
  42900f:	dec    DWORD PTR [ecx+0x72]
  429012:	dec    ebx
  429013:	xchg   edx,eax
  429014:	shl    bh,1
  429016:	lahf   
  429017:	push   edx
  429018:	add    eax,0x6eb33700
  42901d:	add    BYTE PTR [edi],dh
  42901f:	or     edx,DWORD PTR [esi+0x13]
  429022:	lock pop esi
  429024:	dec    esi
  429025:	out    0x3f,eax
  429027:	inc    esi
  429028:	fdiv   st,st(7)
  42902a:	pinsrw mm6,WORD PTR [edx+edi*8-0x8],0xd6
  429030:	scas   eax,DWORD PTR es:[edi]
  429031:	enter  0xd8f4,0x7a
  429035:	in     al,dx
  429036:	mov    dh,0x17
  429038:	inc    BYTE PTR [eax]
  42903a:	aaa    
  42903b:	or     edx,esi
  42903d:	cli    
  42903e:	aaa    
  42903f:	or     edi,esi
  429041:	push   edx
  429042:	ret    0x588
  429045:	sti    
  429046:	enter  0xae06,0xe7
  42904a:	mov    edx,0xadfb509c
  42904f:	mov    BYTE PTR ds:0x13feb0fb,al
  429055:	lea    esi,[edi]
  429057:	out    0x4e,al
  429059:	sti    
  42905a:	lods   eax,DWORD PTR ds:[esi]
  42905b:	js     0x429061
  42905d:	sti    
  42905e:	cwde   
  42905f:	(bad)  
  429060:	adc    al,al
  429062:	mov    bh,0xd4
  429064:	lods   eax,DWORD PTR ds:[esi]
  429065:	xchg   DWORD PTR [eax],eax
  429067:	add    dl,dh
  429069:	les    ecx,FWORD PTR [ebx]
  42906b:	ror    BYTE PTR [ebx],1
  42906d:	xor    al,0x1
  42906f:	mov    edx,0x52e5dfab
  429074:	ins    BYTE PTR es:[edi],dx
  429075:	adc    eax,0xde3c34d6
  42907a:	mov    ch,0xe9
  42907c:	scas   eax,DWORD PTR es:[edi]
  42907d:	inc    eax
  42907e:	sub    eax,esp
  429080:	imul   BYTE PTR [ecx-0x607e782f]
  429086:	xor    DWORD PTR [ecx+0x7d01eb19],0x33
  42908d:	ins    DWORD PTR es:[edi],dx
  42908e:	xor    DWORD PTR [esi-0x1e],eax
  429091:	test   al,0x4b
  429093:	test   BYTE PTR [ebx],ah
  429095:	dec    eax
  429096:	out    0x3,eax
  429098:	aaa    
  429099:	xor    DWORD PTR [edx-0xbd76746],0xf08a3703
  4290a3:	push   edx
  4290a4:	dec    edx
  4290a5:	fsubr  DWORD PTR [ecx]
  4290a7:	(bad)  
  4290a8:	or     BYTE PTR [esi],dl
  4290aa:	aad    0xcb
  4290ac:	xor    dh,BYTE PTR [eax+ebp*8+0x7e]
  4290b0:	jmp    DWORD PTR [eax+0x3f]
  4290b3:	jl     0x429127
  4290b5:	adc    bh,cl
  4290b7:	dec    esi
  4290b8:	cmp    al,0xb0
  4290ba:	rol    BYTE PTR ds:0x98753437,1
  4290c0:	adc    edx,DWORD PTR ds:0xb48f51fb
  4290c6:	out    0x3,eax
  4290c8:	aaa    
  4290c9:	or     al,0x76
  4290cb:	jge    0x4290cd
  4290cd:	add    BYTE PTR [edi],dh
  4290cf:	xor    al,0x75
  4290d1:	xchg   edi,eax
  4290d2:	xlat   BYTE PTR ds:[ebx]
  4290d3:	adc    eax,0xd3ef51db
  4290d8:	out    0x3,eax
  4290da:	aaa    
  4290db:	or     al,0x46
  4290dd:	jle    0x429116
  4290df:	xor    al,0x75
  4290e1:	xchg   DWORD PTR [ebx+0x15],edx
  4290e4:	mov    ebx,0x16ebe51
  4290e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290ea:	or     dh,dl
  4290ec:	data16 loope 0x4290ec
  4290ef:	outs   dx,BYTE PTR ds:[esi]
  4290f0:	shl    DWORD PTR [eax+esi*2-0x8],1
  4290f4:	dec    ebp
  4290f5:	cmp    DWORD PTR [esi],eax
  4290f7:	aas    
  4290f8:	sbb    edi,edi
  4290fa:	je     0x429110
  4290fc:	jg     0x4290a3
  4290fe:	aaa    
  4290ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429100:	jae    0x429163
  429102:	stos   DWORD PTR es:[edi],eax
  429103:	rol    BYTE PTR [eax],cl
  429105:	jmp    0x63749d3e
  42910a:	xor    esi,DWORD PTR [esp+ecx*4]
  42910d:	hlt    
  42910e:	mov    al,ds:0x34e99edb
  429113:	xor    al,0xe9
  429115:	adc    esi,DWORD PTR [ecx+0x640134]
  42911b:	aam    0xb8
  42911d:	mov    bh,BYTE PTR [ebx]
  42911f:	xor    al,0x1
  429121:	push   ecx
  429122:	or     BYTE PTR [edx-0x766e1700],bh
  429128:	test   DWORD PTR [ecx-0x21],esi
  42912b:	xor    al,0x1
  42912d:	jmp    0xe9c9b58e
  429132:	add    BYTE PTR [eax],al
  429134:	xor    al,0xc1
  429136:	sbb    DWORD PTR [edi],0x60013434
  42913c:	lock sbb eax,DWORD PTR [edi+ecx*1]
  429140:	xor    al,0x34
  429142:	add    DWORD PTR [eax-0x10],esi
  429145:	and    eax,DWORD PTR [edi+edi*8]
  429148:	xor    eax,0xf0600134
  42914d:	out    0x87,eax
  42914f:	mov    WORD PTR [eax-0x3f],gs
  429152:	inc    ebx
  429153:	in     eax,0x84
  429155:	mov    edx,0x3b92d543
  42915a:	dec    esi
  42915b:	(bad)  
  42915c:	cmp    BYTE PTR [eax+0x343441cc],0x1
  429163:	add    BYTE PTR [esi],cl
  429165:	fs adc al,0x54
  429168:	outs   dx,BYTE PTR ds:[esi]
  429169:	idiv   ecx
  42916b:	test   dh,bl
  42916d:	xor    al,0x84
  42916f:	push   esp
  429170:	(bad)  
  429171:	aaa    
  429172:	add    DWORD PTR [ebx+0x3d],edx
  429175:	leave  
  429176:	dec    edx
  429177:	lea    ebx,[ebx]
  429179:	adc    BYTE PTR [ecx-0x73],0xdb
  42917d:	pop    esi
  42917e:	std    
  42917f:	push   DWORD PTR [ecx-0x3da27739]
  429185:	enter  0x1be8,0x5f
  429189:	aaa    
  42918a:	add    DWORD PTR [ebx+0x45f69b43],ecx
  429190:	ret    0xf5a4
  429193:	add    BYTE PTR [esi+0x37],cl
  429196:	dec    edi
  429197:	lea    eax,[eax]
  429199:	add    bl,bl
  42919b:	sahf   
  42919c:	push   ecx
  42919d:	lea    ebx,[ebx+0x71fffd5f]
  4291a3:	mov    DWORD PTR [edx+0x796f7245],0x88371e67
  4291ad:	inc    ebp
  4291ae:	inc    esi
  4291af:	mov    eax,0xbae1fff8
  4291b4:	(bad)  
  4291b5:	add    BYTE PTR [esi],cl
  4291b7:	aaa    
  4291b8:	xor    al,bl
  4291ba:	loope  0x429178
  4291bc:	into   
  4291bd:	add    dh,bl
  4291bf:	cmp    BYTE PTR ss:[ebp+0x36],0xcd
  4291c4:	mov    WORD PTR [ebp-0x7e],es
  4291c7:	(bad)  
  4291c8:	mov    WORD PTR [ebp-0x97cea],es
  4291ce:	scas   al,BYTE PTR es:[edi]
  4291cf:	pop    DWORD PTR [esp+edi*8+0x36]
  4291d3:	rcr    BYTE PTR [esi+0x0],cl
  4291d6:	into   
  4291d7:	pop    DWORD PTR [eax+edi*8+0x1d]
  4291db:	xor    dh,0x74
  4291de:	aaa    
  4291df:	and    DWORD PTR [edi],eax
  4291e1:	mov    edi,0x8cb33528
  4291e6:	repnz fdiv QWORD PTR [esp+ecx*4-0x4af2b46]
  4291ee:	mov    BYTE PTR [esi+esi*2],ch
  4291f1:	inc    ebp
  4291f2:	xor    esp,0x1f
  4291f5:	arpl   WORD PTR [edi],si
  4291f7:	sbb    eax,0x9d6f457d
  4291fc:	dec    ebp
  4291fd:	sti    
  4291fe:	add    BYTE PTR [eax],al
  429200:	cmp    BYTE PTR [ecx+0x1d37006e],ah
  429206:	pop    es
  429207:	mov    edi,0x76a328
  42920c:	aaa    
  42920d:	sbb    eax,0x974b4577
  429212:	rcl    bh,0xe6
  429215:	ss add al,0x4f
  429218:	stos   BYTE PTR es:[edi],al
  429219:	xchg   DWORD PTR ds:0xb47330fc,ebp
  42921f:	dec    edi
  429220:	mov    esi,0x4afb25e0
  429225:	(bad)  
  429226:	in     eax,dx
  429227:	aas    
  429228:	aaa    
  429229:	mov    al,ds:0xa9247545
  42922e:	dec    edx
  42922f:	jne    0x429238
  429231:	cdq    
  429232:	enter  0x6483,0xab
  429236:	xor    BYTE PTR [ebp-0x21],0x23
  42923a:	dec    edi
  42923b:	arpl   WORD PTR [edi],si
  42923d:	sbb    edx,DWORD PTR [edi-0x1]
  429240:	mov    ch,0x53
  429242:	dec    edx
  429243:	mov    DWORD PTR [edx+0x23],edi
  429246:	jle    0x429240
  429248:	fmul   DWORD PTR [edi-0x760bc944]
  42924e:	mov    eax,0x560b4a86
  429253:	out    0xc2,al
  429255:	and    cl,BYTE PTR [ebx-0x7b]
  429258:	div    DWORD PTR [edx+eiz*2]
  42925b:	push   cs
  42925c:	sbb    DWORD PTR [esi+0x1113986d],eax
  429262:	ror    DWORD PTR [esi+0x0],cl
  429265:	add    bh,bh
  429267:	sbb    eax,esi
  429269:	jnp    0x4292a2
  42926b:	xor    al,0xc3
  42926d:	fcom   DWORD PTR [ebp+edi*4-0x7872495f]
  429274:	sar    BYTE PTR [edx+0x2],0xe8
  429278:	pop    ss
  429279:	mov    esi,DWORD PTR [esi*1-0x22a0fc18]
  429280:	and    BYTE PTR [esi+0x6c],cl
  429283:	mov    ch,0xab
  429285:	repz mov ebx,0x5f409f4
  42928b:	mov    edi,0x635f3034
  429290:	test   BYTE PTR [ebp+0x4c],0xb8
  429294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429295:	xlat   BYTE PTR ds:[ebx]
  429296:	inc    ecx
  429297:	adc    ah,BYTE PTR ds:0xb6ed0864
  42929d:	mov    dl,0x81
  42929f:	gs ins DWORD PTR es:[edi],dx
  4292a1:	enter  0x6420,0x65
  4292a5:	mov    bh,bh
  4292a7:	cmovnp ecx,DWORD PTR [esi-0x79]
  4292ab:	adc    DWORD PTR [ebp+0x3c870c5f],edi
  4292b1:	inc    esi
  4292b2:	jb     0x4292c0
  4292b4:	in     al,dx
  4292b5:	add    al,0x37
  4292b7:	xor    al,0x2b
  4292b9:	clc    
  4292ba:	pusha  
  4292bb:	and    al,0xa8
  4292bd:	add    edi,DWORD PTR [edx-0x578150d]
  4292c3:	adc    DWORD PTR [ebx],edx
  4292c5:	dec    esi
  4292c6:	fadd   QWORD PTR [esi+0x4e0c]
  4292cc:	inc    edx
  4292cd:	jo     0x4292a7
  4292cf:	ret    
  4292d0:	rcl    BYTE PTR [ecx],1
  4292d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292d3:	push   edi
  4292d4:	dec    eax
  4292d5:	pop    DWORD PTR [ecx]
  4292d7:	std    
  4292d8:	aaa    
  4292d9:	cmp    eax,0xd6a6f7f
  4292de:	cli    
  4292df:	out    0x88,al
  4292e1:	adc    al,0xe9
  4292e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292e4:	sub    DWORD PTR [esi],ecx
  4292e6:	cli    
  4292e7:	adc    al,dl
  4292e9:	lock jb 0x4292e1
  4292ec:	pop    ds
  4292ed:	(bad)  
  4292ee:	fst    QWORD PTR [ecx+0x4e]
  4292f1:	xor    al,0x1
  4292f3:	jmp    0xe94369b4
  4292f8:	xor    al,0x1c
  4292fa:	dec    edi
  4292fb:	(bad)  
  4292fc:	jmp    0xdd87:0x3f1e60c
  429303:	xchg   ecx,eax
  429304:	xchg   esi,eax
  429305:	mov    ebp,0x6a9296fa
  42930a:	push   esi
  42930b:	mov    al,ds:0x958666f6
  429310:	mov    ah,0x1f
  429312:	add    eax,ebp
  429314:	xor    al,0x34
  429316:	dec    esi
  429317:	pop    ds
  429318:	mov    cl,BYTE PTR ds:0x50455114
  42931e:	add    DWORD PTR [eax+0x5985ce4e],eax
  429324:	or     al,BYTE PTR fs:[eax+0x1347257]
  42932b:	jmp    0xe9ce544b
  429330:	add    BYTE PTR [eax],al
  429332:	xor    al,0x34
  429334:	mov    WORD PTR [ebx+esi*1+0xb],gs
  429338:	cli    
  429339:	ss jle 0x42932f
  42933c:	call   0xfa5078bb
  429341:	ins    DWORD PTR es:[edi],dx
  429342:	jnp    0x4292cc
  429344:	jge    0x429320
  429346:	je     0x429301
  429348:	repnz xchg edi,eax
  42934a:	loope  0x4292db
  42934c:	mov    ch,0xe4
  42934e:	xor    al,0xb
  429350:	cli    
  429351:	add    BYTE PTR [ecx],bh
  429353:	les    edi,FWORD PTR [ecx]
  429355:	cmp    edx,DWORD PTR [eax]
  429357:	in     al,0xea
  429359:	mov    ch,BYTE PTR [ebx+0x38]
  42935c:	idiv   bh
  42935e:	leave  
  42935f:	mov    bl,0xf1
  429361:	call   DWORD PTR [ebx]
  429363:	push   cs
  429364:	test   BYTE PTR [ebp-0x97f64],bl
  42936a:	sbb    esi,DWORD PTR [esi-0x7f960107]
  429370:	loop   0x429378
  429372:	or     esi,DWORD PTR [esi-0x7f360101]
  429378:	push   es
  429379:	mov    dh,0x96
  42937b:	mov    cs,WORD PTR [ebp+0x8]
  42937e:	(bad)  
  42937f:	adc    BYTE PTR [eax+0x206ebc3],dh
  429385:	lea    eax,[edx]
  429387:	es add edi,edi
  42938a:	leave  
  42938b:	xor    BYTE PTR [edx],0xd6
  42938e:	inc    ecx
  42938f:	and    dh,BYTE PTR [edx]
  429391:	inc    ebp
  429392:	inc    esi
  429393:	jmp    FWORD PTR [eax+eax*4]
  429396:	add    BYTE PTR [eax],al
  429398:	or     esi,DWORD PTR [ebx]
  42939a:	idiv   bh
  42939c:	leave  
  42939d:	jg     0x429413
  42939f:	push   es
  4293a0:	dec    ebp
  4293a1:	into   
  4293a2:	add    DWORD PTR [edx],ebp
  4293a4:	sti    
  4293a5:	or     al,BYTE PTR [edi]
  4293a7:	mov    dh,0x5d
  4293a9:	and    al,0xcb
  4293ab:	test   DWORD PTR [esi+0x1],ecx
  4293ae:	or     eax,0x326c00f
  4293b3:	xchg   WORD PTR [edi],sp
  4293b6:	dec    esi
  4293b7:	inc    edx
  4293b8:	xor    eax,0xfdf37d48
  4293bd:	dec    ecx
  4293be:	pop    edi
  4293bf:	mov    edx,ebx
  4293c1:	mul    edx
  4293c3:	add    cl,BYTE PTR ds:0x275b5773
  4293c9:	jne    0x4293d0
  4293cb:	add    BYTE PTR [edi],dh
  4293cd:	sar    BYTE PTR [eax-0x14],1
  4293d0:	mov    dh,0x10
  4293d2:	jmp    0x4293d2
  4293d4:	rcr    BYTE PTR [ecx+esi*4],1
  4293d7:	push   ecx
  4293d8:	pusha  
  4293d9:	mov    ds:0x97dc2ef5,eax
  4293de:	ret    
  4293df:	jecxz  0x429445
  4293e1:	lods   eax,DWORD PTR ds:[esi]
  4293e2:	dec    esp
  4293e3:	adc    eax,0xffbe0f4f
  4293e8:	mov    ch,0xd8
  4293ea:	clc    
  4293eb:	addr16 push edi
  4293ed:	sbb    esi,edi
  4293ef:	dec    DWORD PTR ds:0xd3354715
  4293f5:	faddp  st(1),st
  4293f7:	dec    DWORD PTR [ecx+0xdc5e7]
  4293fd:	add    bh,dh
  4293ff:	sbb    al,0x7d
  429401:	inc    ebp
  429402:	xchg   DWORD PTR [ecx],eax
  429404:	inc    ebx
  429405:	or     edi,DWORD PTR [ebx+0x370003a7]
  42940b:	sbb    BYTE PTR [eax+0x1],cl
  42940e:	aaa    
  42940f:	sbb    eax,0x1757457d
  429414:	dec    eax
  429415:	add    DWORD PTR [edi],esi
  429417:	sbb    eax,0x176f457d
  42941c:	dec    eax
  42941d:	add    DWORD PTR [edi],esi
  42941f:	sbb    eax,0x6f5b457d
  429424:	nop
  429425:	lock xor DWORD PTR [edi+0x1bd1b846],edx
  42942c:	(bad)  
  42942d:	(bad)  
  42942e:	clc    
  42942f:	loopne 0x429466
  429431:	add    DWORD PTR [edi],esi
  429433:	sbb    edi,DWORD PTR [esi-0x3d]
  429436:	jp     0x42947f
  429438:	add    eax,DWORD PTR [eax]
  42943a:	aaa    
  42943b:	fwait
  42943c:	pop    ebp
  42943d:	sbb    BYTE PTR [eax-0x7d7301e5],bh
  429443:	outs   dx,DWORD PTR ds:[esi]
  429444:	lea    esp,[ebx+0x3e83437]
  42944a:	fistp  QWORD PTR [ecx]
  42944c:	arpl   WORD PTR [edi+esi*1],ax
  42944f:	mov    edi,0xdddd05c
  429454:	or     ecx,DWORD PTR [edi+ebx*4-0x20fc17cc]
  42945b:	or     DWORD PTR [edx+0x4],esp
  42945e:	aaa    
  42945f:	mov    edi,0xa37c
  429464:	jg     0x429441
  429466:	out    0x3,eax
  429468:	aaa    
  429469:	sbb    al,0xd2
  42946b:	xor    DWORD PTR [edi],0xe4d06d34
  429471:	int3   
  429472:	jge    0x429477
  429474:	aaa    
  429475:	xor    al,0xc0
  429477:	fs mov ch,0x34
  42947a:	call   0x6d4a7efb
  42947f:	sar    BYTE PTR [esp+eiz*2+0x3e],0xfc
  429484:	jmp    0x6d95f947
  429489:	or     eax,0x77b1b3a3
  42948e:	xchg   esp,eax
  42948f:	dec    edx
  429490:	jmp    0x429448
  429492:	lahf   
  429493:	dec    edx
  429494:	inc    edx
  429495:	push   0xb850c3f8
  42949a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42949b:	cli    
  42949c:	mov    bl,0x77
  42949e:	jmp    0x17a3cba6
  4294a3:	mov    bh,0xe9
  4294a5:	mov    esi,0xbf874c24
  4294aa:	ins    BYTE PTR es:[edi],dx
  4294ab:	pop    ebx
  4294ac:	sub    ecx,DWORD PTR ds:0x6eafb35b
  4294b2:	inc    esp
  4294b3:	mov    dh,0xf
  4294b5:	inc    eax
  4294b6:	jmp    0xc4fbcbbe
  4294bb:	push   ebx
  4294bc:	or     al,0x77
  4294be:	dec    esp
  4294bf:	mov    esp,edi
  4294c1:	xor    eax,DWORD PTR [ecx]
  4294c3:	jmp    0xa4cef6fc
  4294c8:	add    BYTE PTR [eax],al
  4294ca:	push   0x8c6c8c64
  4294cf:	adc    dl,bh
  4294d1:	push   ds
  4294d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4294d3:	mov    ch,0x43
  4294d5:	adc    eax,0xe965947c
  4294da:	xor    al,0xbb
  4294dc:	inc    ebx
  4294dd:	sbb    eax,0xeefa0bb1
  4294e2:	inc    eax
  4294e3:	stc    
  4294e4:	add    cl,ch
  4294e6:	xor    al,0x45
  4294e8:	mov    esi,0xf0b6de
  4294ed:	jmp    0xc9be4a26
  4294f2:	in     eax,0xbf
  4294f4:	inc    ebx
  4294f5:	mov    ebx,esp
  4294f7:	mov    edi,0x8ffc183
  4294fc:	cli    
  4294fd:	sbb    DWORD PTR [edx],ecx
  4294ff:	ja     0x4294fe
  429501:	shl    DWORD PTR [eax],1
  429503:	cwde   
  429504:	add    ecx,ebp
  429506:	std    
  429507:	jbe    0x4294da
  429509:	push   0x3
  42950b:	or     DWORD PTR [edx],ecx
  42950d:	ins    DWORD PTR es:[edi],dx
  42950e:	xchg   edi,eax
  42950f:	xor    eax,DWORD PTR [ecx]
  429511:	jmp    0x6f4c6249
  429516:	iret   
  429517:	xor    eax,DWORD PTR [ecx]
  429519:	jmp    0x201c23f1
  42951e:	shl    BYTE PTR [esi-0x4b],0x19
  429522:	enter  0xe8b6,0x75
  429526:	out    dx,al
  429527:	or     BYTE PTR [ecx+0x62],dl
  42952a:	lock psubsw mm6,mm3
  42952e:	add    BYTE PTR [eax],al
  429530:	or     BYTE PTR [edx+edi*8],cl
  429533:	jo     0x429515
  429535:	add    edi,DWORD PTR [esi+0x51]
  429538:	outs   dx,BYTE PTR ds:[esi]
  429539:	cmp    BYTE PTR [edx+edx*1+0x7a],0x86
  42953e:	js     0x429540
  429540:	test   ebx,ecx
  429542:	leave  
  429543:	add    ebx,ebx
  429545:	pop    ebx
  429546:	push   ecx
  429547:	call   0x390868
  42954c:	pop    ebx
  42954d:	jo     0x4295c6
  42954f:	imul   esp,DWORD PTR [ebx-0x75],0x7d41ff75
  429556:	push   ecx
  429557:	lea    ecx,[ebx+0x68]
  42955a:	std    
  42955b:	inc    DWORD PTR [ecx-0x40]
  42955e:	add    BYTE PTR [ebp+0x32],0x68
  429562:	xchg   DWORD PTR [esi+ecx*8+0x37],esp
  429566:	cmp    al,0x4d
  429569:	jge    0x42956b
  42956b:	jb     0x429503
  42956d:	mov    dh,0xf5
  42956f:	call   DWORD PTR [ecx-0x7289fec9]
  429575:	jmp    0xe736f48e
  42957a:	mov    WORD PTR [ebp-0x982ce],?
  429580:	push   esi
  429581:	push   0x378e85dd
  429586:	dec    esi
  429587:	(bad)  
  429588:	cmp    esp,DWORD PTR [eax-0x7e]
  42958b:	jge    0x42954f
  42958d:	jl     0x429603
  42958f:	fsub   st,st(5)
  429591:	je     0x429589
  429593:	jne    0x429595
  429595:	add    BYTE PTR [esi+0x4e030fb8],ch
  42959b:	aaa    
  42959c:	push   ecx
  42959d:	call   0x3a7a9e
  4295a2:	fisttp QWORD PTR [edx+0x15]
  4295a5:	test   DWORD PTR [esi-0x2ca8f603],ecx
  4295ab:	rcr    ebp,0xe8
  4295ae:	push   esi
  4295af:	in     eax,dx
  4295b0:	idiv   edi
  4295b2:	call   0xe1ca:0x81037577
  4295b9:	xor    esi,DWORD PTR [edi]
  4295bb:	inc    esi
  4295bc:	mov    ch,0x4e
  4295be:	fs into 
  4295c0:	jb     0x429607
  4295c2:	shrd   DWORD PTR [edx-0x7b],esi,cl
  4295c6:	cmovns ecx,DWORD PTR [ecx-0x5]
  4295ca:	addr16 inc edx
  4295cc:	retf   
  4295cd:	jmp    0x4295bf
  4295cf:	mov    edi,0x5572c341
  4295d4:	cli    
  4295d5:	add    BYTE PTR [edi],dh
  4295d7:	sbb    eax,0xd7f1549
  4295dc:	mov    esi,0xf95cbbff
  4295e1:	sub    ebx,0x32
  4295e4:	dec    ecx
  4295e5:	sti    
  4295e6:	sar    BYTE PTR [edi+0x42],0xfb
  4295ea:	and    ah,BYTE PTR [ecx+0x1a373fed]
  4295f0:	mov    esp,0x518fb4f3
  4295f5:	(bad)  
  4295f6:	xor    DWORD PTR [edi+0xfa76],ebx
  4295fc:	cwde   
  4295fd:	loope  0x429640
  4295ff:	jne    0x429588
  429601:	hlt    
  429602:	test   DWORD PTR [edi+0x5d0bf189],eax
  429608:	pop    DWORD PTR [edx-0xf]
  42960b:	xchg   dl,bh
  42960d:	clc    
  42960e:	fadd   st(6),st
  429610:	aaa    
  429611:	sbb    eax,0x1c9cb7fe
  429616:	(bad)  
  429617:	dec    DWORD PTR [edi+0x43]
  42961a:	sub    al,0xfb
  42961c:	pop    eax
  42961d:	mov    ch,0xfc
  42961f:	cli    
  429620:	retf   0x5cb0
  429623:	xchg   esi,eax
  429624:	mov    esp,0xe15b41b2
  429629:	push   ebp
  42962a:	cmp    al,0xbf
  42962c:	test   ebp,eax
  42962e:	push   ebp
  42962f:	loop   0x4295db
  429631:	cdq    
  429632:	inc    edx
  429633:	test   edi,esi
  429635:	xor    al,0xdc
  429637:	cmc    
  429638:	sbb    DWORD PTR [edi],esi
  42963a:	outs   dx,DWORD PTR ds:[esi]
  42963b:	inc    ebp
  42963c:	stos   BYTE PTR es:[edi],al
  42963d:	jl     0x429628
  42963f:	or     esp,DWORD PTR [esi]
  429641:	adc    BYTE PTR [ebx+0x3e],0x37
  429645:	xor    al,0x27
  429647:	mov    cl,0xb9
  429649:	sbb    BYTE PTR [edi+0x60],ah
  42964c:	push   DWORD PTR [ebx+0x9f17043]
  429652:	call   0x16001d09
  429657:	scas   eax,DWORD PTR es:[edi]
  429658:	mov    bl,0xa0
  42965a:	ret    
  42965b:	imul   esi,DWORD PTR [edi],0x34
  42965e:	call   0x754296db
  429663:	pop    eax
  429664:	mov    dh,0x7a
  429666:	out    dx,al
  429667:	sbb    al,0x47
  429669:	inc    edi
  42966a:	mov    ebp,0x2c446409
  42966f:	mov    al,0x4e
  429671:	add    dh,BYTE PTR [edi]
  429673:	xor    al,0xf2
  429675:	std    
  429676:	cmp    BYTE PTR [eax+0x502b791e],al
  42967c:	sub    BYTE PTR [ebx+ecx*8-0x60fc17cc],cl
  429683:	adc    eax,0xbd370364
  429688:	test   eax,0x84ffb7c
  42968d:	adc    esi,DWORD PTR [edi+0x64]
  429690:	sbb    BYTE PTR [ebp+ebp*2+0x378e07f],dh
  429697:	push   eax
  429698:	fcomp  st(3)
  42969a:	iret   
  42969b:	xchg   ecx,eax
  42969c:	es add al,0xd1
  42969f:	inc    BYTE PTR cs:[edx+eax*8]
  4296a3:	mov    eax,0x34378fc3
  4296a8:	call   0x7a4cca08
  4296ad:	inc    esi
  4296ae:	dec    esi
  4296af:	push   0x3434eb01
  4296b4:	addr16 call 0x85674769
  4296ba:	xor    al,0x34
  4296bc:	add    DWORD PTR [ecx-0x5eda7f61],edi
  4296c2:	ins    BYTE PTR es:[edi],dx
  4296c3:	sar    eax,1
  4296c5:	dec    edi
  4296c6:	add    BYTE PTR [eax],al
  4296c8:	jno    0x42967a
  4296ca:	shl    dh,0x80
  4296cd:	jae    0x4296ce
  4296cf:	call   0xa035f008
  4296d4:	push   cs
  4296d5:	xor    al,0x8c
  4296d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296d8:	dec    eax
  4296d9:	push   eax
  4296da:	push   ecx
  4296db:	es lock push esp
  4296de:	dec    ebp
  4296df:	jb     0x429679
  4296e1:	push   esp
  4296e2:	push   ebp
  4296e3:	add    DWORD PTR [eax-0x63],edx
  4296e6:	sti    
  4296e7:	push   cs
  4296e8:	dec    ebx
  4296e9:	jo     0x429710
  4296eb:	leave  
  4296ec:	mov    ch,0xb
  4296ee:	cli    
  4296ef:	out    dx,al
  4296f0:	cmp    BYTE PTR [eax],ah
  4296f2:	(bad)  
  4296f3:	call   0xe766332c
  4296f8:	xor    al,0x34
  4296fa:	addr16 icebp 
  4296fc:	sti    
  4296fd:	ds mov ebp,0xfb0876a7
  429703:	cld    
  429704:	jl     0x42973c
  429706:	inc    ecx
  429707:	jmp    0xd680719
  42970c:	or     BYTE PTR [eax-0x2954dedb],cl
  429712:	add    cl,ch
  429714:	xor    al,0x1c
  429716:	sbb    al,0x65
  429718:	xor    esi,DWORD PTR [esp+ecx*4]
  42971b:	and    eax,0x4fb94c17
  429720:	xor    esi,DWORD PTR [ecx+eax*1]
  429723:	or     DWORD PTR [edx-0x4c],0x87c1e900
  42972a:	and    eax,0x7e000000
  42972f:	mov    esp,0x344e00a5
  429734:	jmp    0x173393a
  429739:	lea    ebx,[edx]
  42973b:	sub    BYTE PTR [ebp-0x48],ah
  42973e:	mov    esi,0x86000130
  429743:	gs jp  0x429746
  429746:	push   ds
  429747:	cmp    esi,DWORD PTR [ebp+0x24]
  42974a:	xor    al,BYTE PTR [ecx]
  42974c:	jle    0x4296f3
  42974e:	sysenter 
  429750:	add    DWORD PTR [ecx+0x392927c2],ecx
  429756:	mov    dl,0x27
  429758:	and    DWORD PTR [edi],ecx
  42975a:	push   eax
  42975b:	cdq    
  42975c:	add    BYTE PTR [eax],al
  42975e:	into   
  42975f:	ins    BYTE PTR es:[edi],dx
  429760:	sti    
  429761:	xor    al,BYTE PTR [eax-0x73]
  429764:	jge    0x42978a
  429766:	test   BYTE PTR [ebp+eax*2+0x353ada24],0xb8
  42976e:	leave  
  42976f:	xchg   DWORD PTR [ecx+0x1],esi
  429772:	into   
  429773:	xor    eax,DWORD PTR [edx+0x3a04d235]
  429779:	add    BYTE PTR [ebx],cl
  42977b:	int3   
  42977c:	sbb    eax,0x35715f58
  429781:	mov    eax,0x44885979
  429786:	inc    edx
  429787:	add    al,0x8d
  429789:	inc    esp
  42978a:	xor    bh,BYTE PTR [eax]
  42978c:	push   ecx
  42978d:	mov    edx,DWORD PTR [edx+0x54]
  429790:	and    edi,edi
  429792:	add    BYTE PTR [eax],al
  429794:	cmp    BYTE PTR [ebx-0x3928290b],0x1d
  42979b:	sub    al,0xb
  42979d:	(bad)  
  42979e:	sbb    eax,0x458d1e30
  4297a3:	and    al,0x6e
  4297a5:	jo     0x4297dc
  4297a7:	mov    eax,0x892b9e37
  4297ac:	repz lock in eax,0x8c
  4297b0:	sti    
  4297b1:	clc    
  4297b2:	(bad)  [edi-0x54]
  4297b5:	push   ecx
  4297b6:	and    DWORD PTR [eax],esp
  4297b8:	xor    cl,cl
  4297ba:	test   ebx,edi
  4297bc:	add    edx,ecx
  4297be:	inc    esp
  4297bf:	xchg   edi,edi
  4297c1:	push   ebx
  4297c2:	leave  
  4297c3:	and    eax,DWORD PTR [ebx+0x16]
  4297c6:	jp     0x4297e4
  4297c8:	ss sbb eax,0x318b38fe
  4297ce:	in     eax,dx
  4297cf:	or     bh,BYTE PTR [ebx+0x37fffeea]
  4297d5:	xor    ah,BYTE PTR [ebx+ecx*1]
  4297d8:	mov    ebx,0x37ffff12
  4297dd:	call   0x4479:0x54b23ba
  4297e4:	adc    eax,DWORD PTR [ecx]
  4297e6:	add    DWORD PTR [ebx+ebx*1+0x5],0x12f47efc
  4297ee:	push   esi
  4297ef:	inc    ebp
  4297f0:	shr    DWORD PTR ds:0xf1738745,0xe5
  4297f7:	out    0x0,eax
  4297f9:	add    BYTE PTR [ebx-0x1],dh
  4297fc:	cmp    eax,0x5659bcfb
  429801:	xor    eax,0x873e0da1
  429806:	and    esi,DWORD PTR [ecx]
  429808:	icebp  
  429809:	mov    BYTE PTR [ebx],dl
  42980b:	cmp    DWORD PTR ds:0xd3608037,edx
  429811:	jle    0x42988c
  429813:	push   ss
  429814:	mov    eax,edx
  429816:	(bad)  
  429817:	in     eax,0x3f
  429819:	sti    
  42981a:	jo     0x42981d
  42981c:	aaa    
  42981d:	je     0x429837
  42981f:	xchg   ebx,eax
  429820:	pop    es
  429821:	test   BYTE PTR [edi+0x33],dh
  429824:	sbb    al,0xed
  429826:	sbb    al,0x44
  429828:	adc    eax,0xe96db91c
  42982d:	inc    eax
  42982f:	jg     0x429815
  429831:	(bad)  
  429832:	call   0xf3d38db7
  429837:	dec    edi
  429838:	fmul   DWORD PTR [esi+0x111d1d05]
  42983e:	aaa    
  42983f:	xor    al,0x7f
  429841:	adc    eax,0x140c88b2
  429846:	mov    al,0xde
  429848:	dec    edi
  429849:	mov    ecx,DWORD PTR [eax+0x5]
  42984c:	push   ebx
  42984d:	das    
  42984e:	xor    edi,DWORD PTR [ebx-0x4ecf1835]
  429854:	ret    
  429855:	out    0x28,eax
  429857:	xor    esi,DWORD PTR [esi+0xc88b60d]
  42985d:	adc    al,0x0
  42985f:	add    ah,ch
  429861:	add    eax,0x3c6503e8
  429866:	sub    ecx,eax
  429868:	adc    al,0x24
  42986a:	cmc    
  42986b:	add    esi,DWORD PTR [edi]
  42986d:	xor    al,0x5f
  42986f:	enter  0x2014,0x68
  429873:	cld    
  429874:	rol    BYTE PTR [ecx+0x50738e7d],0xe0
  42987b:	sub    DWORD PTR [edi+0x34],0x7c
  42987f:	scas   eax,DWORD PTR es:[edi]
  429880:	mov    dl,0x31
  429882:	fs inc esp
  429884:	sub    ecx,DWORD PTR [esi+0x3024f424]
  42988a:	sbb    al,0xf5
  42988c:	or     ebp,DWORD PTR [esi]
  42988e:	push   0x543437be
  429893:	fcom   QWORD PTR [ecx-0xc]
  429896:	inc    DWORD PTR [esi]
  429898:	add    esp,DWORD PTR [edx+0x68]
  42989b:	test   DWORD PTR [eax+0x2b],0x48b32901
  4298a2:	sbb    ecx,ebp
  4298a4:	lahf   
  4298a5:	add    BYTE PTR [ecx+ebp*4+0x1a674676],al
  4298ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298ad:	and    BYTE PTR ds:0xbe0d6b1d,0x6b
  4298b4:	xor    al,0x34
  4298b6:	cli    
  4298b7:	std    
  4298b8:	push   eax
  4298b9:	xor    eax,0x4d18fd86
  4298be:	cli    
  4298bf:	std    
  4298c0:	adc    BYTE PTR ds:0xa786,bl
  4298c6:	or     DWORD PTR [edx],ecx
  4298c8:	jne    0x4298d7
  4298ca:	movsx  ecx,BYTE PTR [edi]
  4298cd:	jmp    0x94bf:0x41513434
  4298d4:	sti    
  4298d5:	dec    esi
  4298d6:	mov    ecx,0x746c14ef
  4298db:	mov    cl,BYTE PTR [edi]
  4298dd:	jb     0x42988e
  4298df:	sub    al,0x52
  4298e1:	bound  eax,QWORD PTR [esi+0x76bd281c]
  4298e7:	or     DWORD PTR [ebp-0x4fa5fd7],eax
  4298ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298ee:	cmp    BYTE PTR [ecx],cl
  4298f0:	inc    ebp
  4298f1:	int    0xdc
  4298f3:	lods   eax,DWORD PTR ds:[esi]
  4298f4:	inc    esp
  4298f5:	(bad)
  4298f8:	inc    ebp
  4298f9:	int    0xd4
  4298fb:	cmp    DWORD PTR [edi-0x6e],edi
  4298fe:	test   BYTE PTR [eax],0xfa
  429901:	mul    cl
  429903:	push   eax
  429904:	and    eax,0xfabbf101
  429909:	out    0xaa,al
  42990b:	outs   dx,DWORD PTR ds:[esi]
  42990c:	and    eax,0x2587c209
  429911:	cmc    
  429912:	pop    esp
  429913:	fimul  WORD PTR [eax+0x44b6f6cf]
  429919:	add    BYTE PTR [edx],ch
  42991b:	lock loope 0x429943
  42991e:	test   eax,0x405ff671
  429923:	add    BYTE PTR [eax],0x5b
  429926:	aad    0x4c
  429928:	pop    esp
  429929:	ret    0x0
  42992c:	dec    edx
  42992d:	xor    BYTE PTR [ebx+ecx*4-0x3e],dl
  429931:	mov    al,0xec
  429933:	inc    eax
  429934:	pop    esp
  429935:	xor    BYTE PTR [ecx],al
  429937:	push   esi
  429938:	or     DWORD PTR [ebp-0x7f09378d],esi
  42993e:	add    DWORD PTR [eax],eax
  429940:	push   ds
  429941:	push   eax
  429942:	cmp    DWORD PTR [edx-0x397dc7e2],eax
  429948:	xor    al,0x30
  42994a:	mov    BYTE PTR [ebp+0x7a],al
  42994d:	or     eax,esi
  42994f:	(bad)  
  429950:	fstp   TBYTE PTR [edi]
  429952:	dec    edi
  429953:	push   eax
  429954:	pop    ecx
  429955:	sti    
  429956:	loope  0x42997e
  429958:	push   cs
  429959:	cmp    BYTE PTR [ecx],al
  42995b:	(bad)  
  42995c:	retf   
  42995d:	push   ebx
  42995e:	adc    eax,DWORD PTR [eax]
  429960:	fidiv  WORD PTR [edi]
  429962:	mov    esi,0xfa192e45
  429967:	dec    esi
  429969:	je     0x42997f
  42996b:	sbb    al,bl
  42996d:	idiv   ecx
  42996f:	sbb    BYTE PTR [edx],0x24
  429972:	sub    bh,bh
  429974:	push   ebx
  429975:	mov    ebx,0x7531fdc0
  42997a:	push   ecx
  42997b:	push   esi
  42997c:	cwde   
  42997d:	je     0x4299f4
  42997f:	mov    ebp,0x15f6de46
  429984:	out    dx,al
  429985:	sub    BYTE PTR [ecx+0x0],al
  429988:	sbb    edi,DWORD PTR [eax+0x74]
  42998b:	push   ds
  42998c:	pop    eax
  42998d:	fimul  WORD PTR [edi-0x73]
  429990:	add    BYTE PTR [eax],al
  429992:	pop    ebx
  429993:	inc    eax
  429994:	push   ecx
  429995:	push   0x3da77437
  42999a:	aaa    
  42999b:	ja     0x4299a0
  42999d:	data16 ss mov bl,dl
  4299a1:	repz ret 0x3e90
  4299a5:	std    
  4299a6:	push   0x5c2425ca
  4299ab:	rol    DWORD PTR [eax+0x43],cl
  4299ae:	mov    ah,0xda
  4299b0:	add    al,0x6e
  4299b2:	jnp    0x4299c8
  4299b4:	mov    bl,0xfb
  4299b6:	rol    DWORD PTR [eax],0x8d
  4299b9:	jge    0x4299fa
  4299bb:	xor    eax,0xd37004c
  4299c0:	jbe    0x429970
  4299c2:	aaa    
  4299c3:	or     eax,0x9fe1e7fe
  4299c8:	inc    eax
  4299c9:	sti    
  4299ca:	or     al,0x15
  4299cc:	inc    ecx
  4299cd:	jne    0x4299ee
  4299cf:	or     DWORD PTR gs:[eax+0x59e16211],ecx
  4299d6:	dec    BYTE PTR [ebp-0x2d]
  4299d9:	xchg   BYTE PTR [ebx],dl
  4299db:	mov    WORD PTR [edx],gs
  4299dd:	les    esi,FWORD PTR ds:0x894efe0d
  4299e3:	stos   BYTE PTR es:[edi],al
  4299e4:	stos   DWORD PTR es:[edi],eax
  4299e5:	pop    es
  4299e6:	and    al,0x26
  4299e8:	mov    eax,DWORD PTR [ebp-0x31]
  4299eb:	popf   
  4299ec:	int    0xfa
  4299ee:	inc    edx
  4299ef:	xor    eax,0x8e374017
  4299f4:	inc    edx
  4299f5:	or     al,0x0
  4299f7:	add    BYTE PTR [edi-0x13],bl
  4299fa:	or     DWORD PTR [eax],eax
  4299fc:	aaa    
  4299fd:	mov    bh,0x5
  4299ff:	sti    
  429a00:	add    bh,BYTE PTR [ecx+0x48]
  429a03:	aas    
  429a04:	aaa    
  429a05:	add    dl,BYTE PTR [eax+edi*2]
  429a08:	inc    ebp
  429a09:	int    0xfd
  429a0b:	mov    dl,bh
  429a0d:	or     dh,dh
  429a0f:	mov    esi,0x246c3428
  429a14:	ss xor al,0xe8
  429a17:	or     BYTE PTR [ebp-0x51fc17cc],cl
  429a1d:	js     0x4299e3
  429a1f:	or     DWORD PTR [ebp+0x34],edi
  429a22:	call   0x9cbb582a
  429a27:	or     DWORD PTR [ebp+0x34],ebp
  429a2a:	call   0xc8bb4832
  429a2f:	xchg   ecx,eax
  429a30:	mov    ds:0x4c3fa36b,al
  429a35:	mov    ebx,0x34370456
  429a3a:	or     cl,0xb7
  429a3d:	xor    ebp,eax
  429a3f:	nop
  429a40:	ret    0x3fc3
  429a43:	js     0x429a7c
  429a45:	xor    al,0xe8
  429a47:	sub    ebp,DWORD PTR [edi-0x4d]
  429a4a:	out    0x3,eax
  429a4c:	mov    dl,0x87
  429a4e:	mov    al,ds:0xe834e27c
  429a53:	add    ebx,DWORD PTR [edi]
  429a55:	dec    esi
  429a56:	imul   eax,DWORD PTR [edi+esi*1],0x7fdcaf
  429a5d:	add    BYTE PTR [edi+0x3703e7ca],bh
  429a63:	or     al,0xe2
  429a65:	test   BYTE PTR [edi],dh
  429a67:	xor    al,0x6d
  429a69:	mov    ecx,0x47abd04
  429a6e:	aaa    
  429a6f:	xor    al,0x40
  429a71:	adc    eax,0x90e834b6
  429a76:	jp     0x429a78
  429a78:	mov    eax,0x656530a9
  429a7d:	mov    DWORD PTR [edi+0x1],ebp
  429a80:	or     edi,DWORD PTR [edi]
  429a82:	addr16 mov ecx,gs
  429a85:	add    esi,DWORD PTR [edi]
  429a87:	mov    ah,0xfa
  429a89:	sbb    BYTE PTR [ebx],al
  429a8b:	and    al,0x1
  429a8d:	test   eax,0xdec0b734
  429a92:	scas   eax,DWORD PTR es:[edi]
  429a93:	dec    edx
  429a94:	add    cl,ch
  429a96:	xor    al,0x71
  429a98:	dec    esi
  429a99:	cmp    ah,BYTE PTR [eax+esi*4+0x43]
  429a9d:	shl    DWORD PTR [eax+esi*4-0x7d],1
  429aa1:	sub    esi,esi
  429aa3:	cld    
  429aa4:	stc    
  429aa5:	sbb    edx,eax
  429aa7:	pop    edi
  429aa8:	icebp  
  429aa9:	sbb    bl,BYTE PTR [edx]
  429aab:	xor    eax,DWORD PTR [eax]
  429aad:	jmp    0xb5be53e6
  429ab2:	sbb    DWORD PTR [edi-0xf],esi
  429ab5:	adc    DWORD PTR [si],esi
  429ab8:	add    ecx,ebp
  429aba:	bound  esi,QWORD PTR [eax-0x4f9ba6bd]
  429ac0:	sub    DWORD PTR [ecx],0x0
  429ac3:	add    dh,dh
  429ac5:	cld    
  429ac6:	stc    
  429ac7:	sbb    DWORD PTR [esi+esi*2+0x5dcf91fd],edi
  429ace:	add    ecx,ebp
  429ad0:	mov    bl,0x76
  429ad2:	stc    
  429ad3:	push   0x5c
  429ad5:	std    
  429ad6:	or     DWORD PTR [ebp+0x78],ebp
  429ad9:	xor    al,0x1
  429adb:	jmp    0x6f4c5ced
  429ae0:	xor    BYTE PTR [ecx+eax*1],0xe9
  429ae4:	lods   eax,DWORD PTR ds:[esi]
  429ae5:	jle    0x429acc
  429ae7:	lahf   
  429ae8:	(bad)  
  429ae9:	jbe    0x429aa8
  429aeb:	cdq    
  429aec:	(bad)  
  429aed:	mov    dh,0x40
  429aef:	xor    al,0x21
  429af1:	std    
  429af2:	push   eax
  429af3:	(bad)  
  429af4:	out    dx,eax
  429af5:	cld    
  429af6:	call   0xfa438d8e
  429afb:	jo     0x429afc
  429afd:	or     BYTE PTR [esi+0x11],bh
  429b00:	add    DWORD PTR ds:0x34347085,ebp
  429b06:	add    DWORD PTR [eax],eax
  429b08:	jne    0x429b7f
  429b0a:	push   es
  429b0b:	xchg   BYTE PTR [edi],cl
  429b0d:	xor    eax,0xf4150001
  429b12:	aad    0x56
  429b14:	sti    
  429b15:	jmp    0x429ae4
  429b17:	push   eax
  429b18:	or     edi,DWORD PTR [ecx+0x3e69fd40]
  429b1e:	push   ecx
  429b1f:	mov    edx,DWORD PTR [ebx+0x74]
  429b22:	jmp    0x17ae366
  429b27:	mov    DWORD PTR [eax],eax
  429b29:	add    BYTE PTR [ebx],ah
  429b2b:	inc    eax
  429b2c:	jp     0x429b26
  429b2e:	test   eax,0x8d3b6bbb
  429b33:	leave  
  429b34:	addr16 push edi
  429b36:	mov    DWORD PTR [eax],ebp
  429b38:	cdq    
  429b39:	adc    bl,BYTE PTR [esi]
  429b3b:	cmp    BYTE PTR [eax+eax*8+0x458cd328],al
  429b42:	xchg   esi,eax
  429b43:	out    0x8c,eax
  429b45:	test   DWORD PTR [esi],ecx
  429b47:	inc    ecx
  429b48:	idiv   bh
  429b4a:	dec    esi
  429b4b:	lods   eax,DWORD PTR ds:[esi]
  429b4c:	inc    ebx
  429b4d:	cld    
  429b4e:	(bad)  
  429b4f:	ins    DWORD PTR es:[edi],dx
  429b50:	push   edi
  429b51:	add    BYTE PTR [esi],cl
  429b53:	lods   eax,DWORD PTR ds:[esi]
  429b54:	clc    
  429b55:	or     DWORD PTR [ecx-0x60f794cd],0x41
  429b5c:	idiv   bh
  429b5e:	push   ds
  429b5f:	xor    al,0x6f
  429b61:	add    esi,esp
  429b63:	es push esi
  429b65:	push   0xffffffdf
  429b67:	scas   al,BYTE PTR es:[edi]
  429b68:	jae    0x429af2
  429b6a:	xchg   esi,eax
  429b6b:	dec    ebx
  429b6c:	sbb    eax,0x4e33de80
  429b71:	jmp    DWORD PTR [ebx+0x6e7d8247]
  429b77:	inc    ecx
  429b78:	je     0x429b56
  429b7a:	inc    ebp
  429b7b:	jbe    0x429b73
  429b7d:	jne    0x429bb1
  429b7f:	jge    0x429b91
  429b81:	add    esi,DWORD PTR [edi]
  429b83:	or     eax,0x2bcf4ffe
  429b88:	mov    ch,0xf9
  429b8a:	mov    al,0x8a
  429b8c:	dec    ecx
  429b8d:	adc    al,0x0
  429b8f:	add    BYTE PTR [edx+0x80fbb4d],dh
  429b95:	cwde   
  429b96:	retf   0x8fe7
  429b99:	xchg   ebp,eax
  429b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b9b:	stc    
  429b9c:	nop
  429b9d:	xchg   ecx,eax
  429b9e:	ds je  0x429bd5
  429ba1:	faddp  st(2),st
  429ba3:	jmp    0x429be9
  429ba5:	ret    0x4ed0
  429ba8:	in     al,0x39
  429baa:	mov    al,BYTE PTR [ebp+0x6f]
  429bad:	sbb    eax,0xbff7858a
  429bb2:	cmp    al,0xfb
  429bb4:	pop    es
  429bb5:	(bad)  
  429bb6:	mov    dl,0xef
  429bb8:	pop    eax
  429bb9:	dec    eax
  429bba:	inc    ecx
  429bbb:	ret    
  429bbc:	cli    
  429bbd:	aam    0x1
  429bbf:	add    DWORD PTR [edi],esi
  429bc1:	or     eax,0xfcdf153d
  429bc6:	mov    ebp,0xccdb3ff
  429bcb:	test   BYTE PTR [eax],bl
  429bcd:	mov    bh,0x3c
  429bcf:	sti    
  429bd0:	sub    BYTE PTR [eax],cl
  429bd2:	cmp    bh,bl
  429bd4:	dec    edx
  429bd5:	sub    DWORD PTR ds:0xb38e3740,edx
  429bdb:	repz pop ds
  429bdd:	add    eax,0x5408fa84
  429be2:	(bad)  
  429be4:	mov    DWORD PTR [ecx],eax
  429be6:	mov    DWORD PTR [ebp+0xf],edi
  429be9:	cmc    
  429bea:	dec    eax
  429beb:	add    BYTE PTR [edi],dh
  429bed:	or     eax,0xd37b876
  429bf2:	(bad)  
  429bf3:	out    0x0,eax
  429bf5:	add    cl,cl
  429bf7:	sbb    DWORD PTR ds:0x3d14ccfb,edi
  429bfd:	jne    0x429bde
  429bff:	xor    edx,DWORD PTR [eax]
  429c01:	and    al,0xb2
  429c03:	std    
  429c04:	sbb    bl,ah
  429c06:	pop    esi
  429c07:	pop    ebx
  429c08:	and    DWORD PTR [eax+0x62],eax
  429c0b:	mov    cl,0x7b
  429c0d:	out    0xb8,eax
  429c0f:	mov    ah,0x13
  429c11:	das    
  429c12:	ss xor al,0xe8
  429c15:	aad    0xe8
  429c17:	push   ecx
  429c18:	or     eax,DWORD PTR [ebx]
  429c1a:	aaa    
  429c1b:	xchg   esi,eax
  429c1c:	popa   
  429c1d:	(bad)  
  429c1e:	mov    ah,0xbb
  429c20:	adc    dh,BYTE PTR [edx]
  429c22:	aaa    
  429c23:	xor    al,0x42
  429c25:	(bad)  
  429c26:	cli    
  429c27:	mov    ch,0x8f
  429c29:	mov    eax,0xa1e833c6
  429c2e:	mov    edi,0x17c7078
  429c33:	loope  0x429c1c
  429c35:	add    edx,ebp
  429c37:	lods   al,BYTE PTR ds:[esi]
  429c38:	sub    al,0x8e
  429c3a:	lahf   
  429c3b:	fcmovu st,st(2)
  429c3d:	add    esi,DWORD PTR [edi]
  429c3f:	xchg   esi,eax
  429c40:	jno    0x429c03
  429c42:	mov    esp,0x377d29bb
  429c47:	xor    al,0xa
  429c49:	(bad)  
  429c4a:	repnz lods eax,DWORD PTR ds:[esi]
  429c4c:	dec    edi
  429c4d:	xchg   edx,eax
  429c4e:	xchg   BYTE PTR [eax+ebp*8],dh
  429c51:	mov    eax,ds:0x7c5877bf
  429c56:	ja     0x429c6c
  429c58:	call   0x95429c60
  429c5d:	stos   DWORD PTR es:[edi],eax
  429c5e:	and    al,0x96
  429c60:	iret   
  429c61:	test   al,0x59
  429c63:	add    al,0x37
  429c65:	xchg   esi,eax
  429c66:	jno    0x429c29
  429c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429c69:	mov    esp,0x34376f45
  429c6e:	ret    0x7a8c
  429c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c72:	jg     0x429cf3
  429c74:	push   ss
  429c75:	xor    al,0xe8
  429c77:	mov    eax,ds:0x510177af
  429c7c:	pop    ebx
  429c7d:	sub    al,0xfd
  429c7f:	jmp    0xaccb2eb8
  429c84:	stos   BYTE PTR es:[edi],al
  429c85:	mov    esp,0x343b058a
  429c8a:	arpl   WORD PTR [eax-0xa],sp
  429c8d:	cdq    
  429c8e:	mov    eax,0x1343383
  429c93:	(bad)  
  429c94:	mov    ebx,0x4419b77
  429c99:	addr16 add ecx,ebp
  429c9c:	(bad)  
  429c9d:	lods   al,BYTE PTR ds:[esi]
  429c9e:	inc    ebx
  429c9f:	dec    ecx
  429ca0:	adc    edx,DWORD PTR [edi]
  429ca2:	mov    ds:0x889234e9,eax
  429ca7:	and    al,0x19
  429ca9:	mov    esp,0x34348d9f
  429cae:	arpl   WORD PTR [eax+0x77],sp
  429cb1:	sar    DWORD PTR [eax-0x602adc5],1
  429cb7:	inc    edi
  429cb8:	mov    dl,0x77
  429cba:	mov    ds:0x17f4f71,eax
  429cbf:	jmp    0xacd89cc4
  429cc4:	inc    ebx
  429cc5:	push   ecx
  429cc6:	int3   
  429cc7:	movaps xmm5,xmm1
  429cca:	xor    al,0x92
  429ccc:	mov    BYTE PTR [ecx+ecx*8],ch
  429ccf:	mov    ebx,0x343b36e4
  429cd4:	arpl   WORD PTR [eax-0x9],si
  429cd7:	enter  0x21b8,0x47
  429cdb:	xor    al,0x1
  429cdd:	rsm    
  429cdf:	jbe    0x429c8c
  429ce1:	xor    DWORD PTR [ebx+0x38],ebp
  429ce4:	add    ecx,ebp
  429ce6:	(bad)  
  429ce7:	stos   DWORD PTR es:[edi],eax
  429ce8:	inc    ebx
  429ce9:	cdq    
  429cea:	jl     0x429cdf
  429cec:	fwait
  429ced:	jmp    0xa4cb2f26
  429cf2:	push   0xffffffbc
  429cf4:	and    BYTE PTR [eax],al
  429cf6:	scas   al,BYTE PTR es:[edi]
  429cf7:	xor    BYTE PTR [ecx],al
  429cf9:	data16 addr16 hlt 
  429cfc:	lods   eax,DWORD PTR ds:[esi]
  429cfd:	mov    eax,0x144f4
  429d02:	clc    
  429d03:	scas   eax,DWORD PTR es:[edi]
  429d04:	inc    ebx
  429d05:	mov    dh,0x56
  429d07:	stos   BYTE PTR es:[edi],al
  429d08:	jmp    0x429d0a
  429d0a:	into   
  429d0b:	ror    BYTE PTR [eax-0x4c8699bb],cl
  429d11:	out    dx,eax
  429d12:	sahf   
  429d13:	xor    BYTE PTR [edi-0x77],bl
  429d16:	fstp   TBYTE PTR [esi-0x47]
  429d19:	mov    BYTE PTR [eax],dl
  429d1b:	xor    DWORD PTR [ecx],eax
  429d1d:	popw   ss
  429d1f:	hlt    
  429d20:	mov    ch,0xb8
  429d22:	pop    ss
  429d23:	arpl   WORD PTR [ecx],ax
  429d25:	add    BYTE PTR [eax],al
  429d27:	add    al,bh
  429d29:	test   al,0x43
  429d2b:	mov    esi,0xcfa9d6
  429d30:	mov    ss,edx
  429d32:	mov    BYTE PTR [ebp-0x62],al
  429d35:	jg     0x429d78
  429d37:	xchg   DWORD PTR [esi+0x30],ebx
  429d3a:	pop    edi
  429d3b:	mov    DWORD PTR [ebx],ebx
  429d3d:	jbe    0x429cf8
  429d3f:	fisubr WORD PTR [eax-0x2899fec9]
  429d45:	mov    esp,0xaa5fb8bd
  429d4a:	add    BYTE PTR [eax],al
  429d4c:	cmp    BYTE PTR [ecx+0x75e6c643],ch
  429d52:	xor    eax,DWORD PTR [eax]
  429d54:	push   ds
  429d55:	(bad)  
  429d56:	mov    BYTE PTR [ebp-0x1a],al
  429d59:	js     0x429dcb
  429d5b:	push   0x895f380e
  429d60:	dec    ebx
  429d61:	push   0xffffffb9
  429d63:	adc    DWORD PTR [eax-0x7899fed0],edx
  429d69:	mov    ebx,0xac24b8c5
  429d6e:	add    BYTE PTR [eax],al
  429d70:	aaa    
  429d71:	jmp    0x429cf9
  429d73:	inc    ebp
  429d74:	add    DWORD PTR [esi+0xd375b3d],esp
  429d7a:	mov    al,ds:0x7d1d7a88
  429d7f:	jnp    0x429da5
  429d81:	or     eax,0xd0be61fe
  429d86:	push   ebx
  429d87:	mov    eax,0xfffda005
  429d8c:	add    BYTE PTR [eax],al
  429d8e:	pop    ecx
  429d8f:	test   BYTE PTR [edx+0x499c7fd3],bh
  429d95:	add    BYTE PTR [edi],dh
  429d97:	mov    bl,0x86
  429d99:	inc    ebp
  429d9a:	xor    DWORD PTR [ebp+0x46],0xa00d377d
  429da1:	mov    dl,dh
  429da3:	and    al,0x7d
  429da5:	fld    DWORD PTR [ebx+0xd]
  429da8:	(bad)  
  429da9:	popa   
  429daa:	mov    esi,0x6b85b48
  429daf:	cmp    eax,0x94110005
  429db4:	mov    ebx,0x5e81afdb
  429db9:	add    BYTE PTR [edi],dh
  429dbb:	imul   eax,DWORD PTR [esi-0x54a7ebb],0x11
  429dc2:	aaa    
  429dc3:	or     eax,0xecfa88a0
  429dc8:	jne    0x429d9d
  429dca:	fmul   DWORD PTR [esi+edi*8]
  429dcd:	popa   
  429dce:	scas   al,BYTE PTR es:[edi]
  429dcf:	push   eax
  429dd0:	and    edi,DWORD PTR [eax-0x22501]
  429dd6:	cdq    
  429dd7:	xchg   esp,eax
  429dd8:	mov    ebx,0xc8afefe3
  429ddd:	jmp    DWORD PTR [eax]
  429ddf:	xor    eax,DWORD PTR [esi+0x74451145]
  429de5:	scas   eax,DWORD PTR es:[edi]
  429de6:	aaa    
  429de7:	or     eax,0x347288a0
  429dec:	push   eax
  429ded:	jnp    0x429e13
  429def:	mov    ds:0x3e7,eax
  429df4:	xchg   ebp,eax
  429df5:	lods   eax,DWORD PTR ds:[esi]
  429df6:	lods   al,BYTE PTR ds:[esi]
  429df7:	sub    eax,0x389edaf
  429dfc:	aaa    
  429dfd:	xchg   edx,eax
  429dfe:	jno    0x429dbe
  429e00:	int3   
  429e01:	mov    ebx,0xfad8b5db
  429e06:	leave  
  429e07:	mov    bh,BYTE PTR [edx+0xa]
  429e0a:	jo     0x429e04
  429e0c:	push   0x34
  429e0e:	call   0x18b34db4
  429e13:	jnp    0x429dc1
  429e15:	xor    eax,ebp
  429e17:	add    edx,DWORD PTR ds:0xef35a4ad
  429e1d:	stos   BYTE PTR es:[edi],al
  429e1e:	nop
  429e1f:	add    esi,DWORD PTR [edi]
  429e21:	xchg   edx,eax
  429e22:	jno    0x429de2
  429e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e25:	mov    ebx,0xfa90b7f2
  429e2a:	or     DWORD PTR [edx-0x675ffe0e],0x9de83361
  429e34:	scas   eax,DWORD PTR es:[edi]
  429e35:	jo     0x429e07
  429e37:	jl     0x429e98
  429e39:	push   edx
  429e3a:	call   0x2cef7342
  429e3f:	cmp    bl,BYTE PTR [edi+0x370438ac]
  429e45:	xchg   edx,eax
  429e46:	popa   
  429e47:	ror    DWORD PTR [ebx+edi*4-0x10],0xcc
  429e4c:	dec    eax
  429e4d:	cli    
  429e4e:	or     DWORD PTR [ebp-0x39a00606],ecx
  429e54:	popa   
  429e55:	xor    ebp,eax
  429e57:	popf   
  429e58:	add    BYTE PTR [eax],al
  429e5a:	mov    edi,0x2a7be86f
  429e5f:	mul    bh
  429e61:	add    edx,DWORD PTR [ebp-0x20fddb55]
  429e67:	lods   eax,DWORD PTR ds:[esi]
  429e68:	add    BYTE PTR [esi+0x3b],ah
  429e6b:	xor    al,0x63
  429e6d:	pusha  
  429e6e:	div    BYTE PTR ds:0x344757b9
  429e74:	add    edi,eax
  429e76:	stos   DWORD PTR es:[edi],eax
  429e77:	outs   dx,DWORD PTR ds:[esi]
  429e78:	add    edx,DWORD PTR [ecx-0x16ff563a]
  429e7e:	retf   0x43ac
  429e81:	icebp  
  429e82:	pop    esp
  429e83:	and    ah,BYTE PTR [esi-0x17]
  429e86:	xor    al,0x96
  429e88:	mov    BYTE PTR [esi+edi*1+0x3318afbc],ch
  429e8f:	xor    al,0x63
  429e91:	jo     0x429e89
  429e93:	sub    eax,0x343193b9
  429e98:	add    DWORD PTR [edi+0x510b6fc3],ecx
  429e9e:	mov    esp,0xc2e90167
  429ea3:	lods   al,BYTE PTR ds:[esi]
  429ea4:	inc    ebx
  429ea5:	fstp   DWORD PTR [esi+eiz*4]
  429ea8:	mov    ds:0x889634e9,al
  429ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429eae:	es mov esp,0x34348e9b
  429eb4:	arpl   WORD PTR [eax+0x77],si
  429eb7:	and    eax,0x33ed77b9
  429ebc:	add    DWORD PTR [edi+0x0],eax
  429ebf:	add    BYTE PTR [edx+0x981136f],bh
  429ec5:	xor    al,0x1
  429ec7:	jmp    0xd1864b86
  429ecc:	int3   
  429ecd:	aaa    
  429ece:	or     cl,ch
  429ed0:	xor    al,0x96
  429ed2:	mov    BYTE PTR [ebx*1+0x346469bc],ch
  429ed9:	xor    al,0x63
  429edb:	pusha  
  429edc:	neg    DWORD PTR [ecx+edi*4]
  429edf:	in     eax,dx
  429ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ee1:	xor    al,0x1
  429ee3:	add    BYTE PTR [eax],dh
  429ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ee6:	inc    ebx
  429ee7:	push   ds
  429ee8:	jbe    0x429f5e
  429eea:	lock add BYTE PTR [esi],bl
  429eed:	scas   al,BYTE PTR es:[edi]
  429eee:	enter  0x9766,0xec
  429ef2:	sbb    DWORD PTR [ecx+0x1485b],edi
  429ef8:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429efa:	dec    ebx
  429efb:	and    al,bh
  429efd:	cli    
  429efe:	cmp    BYTE PTR [eax],al
  429f00:	ficom  WORD PTR [esi+0x77324d88]
  429f06:	rol    BYTE PTR [ebx],1
  429f08:	into   
  429f09:	xor    al,0x5f
  429f0b:	mov    DWORD PTR [ebx-0x927472a],ebx
  429f11:	xor    al,0x1
  429f13:	inc    di
  429f15:	in     al,dx
  429f16:	and    DWORD PTR [ecx+0xa6f7],edi
  429f1c:	shl    BYTE PTR [edi-0x5ff8d5b5],0xed
  429f23:	add    BYTE PTR [eax],al
  429f25:	add    BYTE PTR [esi+0x6a4d8896],cl
  429f2b:	ja     0x429ee8
  429f2d:	mov    dl,0x9e
  429f2f:	xor    al,0x5f
  429f31:	mov    DWORD PTR [ebx-0x73cb46f2],ebp
  429f37:	xor    al,0x1
  429f39:	popw   es
  429f3b:	icebp  
  429f3c:	sub    DWORD PTR [eax+0x15a5f],edi
  429f42:	lock lods al,BYTE PTR ds:[esi]
  429f44:	inc    ebx
  429f45:	cmp    al,0xb7
  429f47:	fist   DWORD PTR [edx-0x7769b200]
  429f4d:	dec    ebp
  429f4e:	dec    esp
  429f4f:	jl     0x429f8f
  429f51:	lock pop esi
  429f53:	xor    al,0x5f
  429f55:	mov    DWORD PTR [ebx],edx
  429f57:	add    bh,BYTE PTR [ecx+0x12fdfbf]
  429f5d:	mov    eax,0xfff1c537
  429f62:	sub    BYTE PTR [eax],dh
  429f64:	xchg   BYTE PTR [ebp+0x77],al
  429f67:	daa    
  429f68:	xchg   BYTE PTR [ebp+0x63],cl
  429f6b:	je     0x429f95
  429f6d:	outs   dx,BYTE PTR ds:[esi]
  429f6e:	aaa    
  429f6f:	or     eax,0x2ff74183
  429f74:	xchg   BYTE PTR [ebp+0x75],al
  429f77:	aad    0xc8
  429f79:	ja     0x429fb2
  429f7b:	or     eax,0xc97a889c
  429f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f81:	jb     0x429f12
  429f83:	out    dx,eax
  429f84:	xchg   BYTE PTR [ebp+0x79],al
  429f87:	mov    ch,0xd3
  429f89:	scas   eax,DWORD PTR es:[edi]
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	aaa    
  429f8d:	or     eax,0xd57a889c
  429f92:	jne    0x429fd9
  429f94:	xchg   ebp,eax
  429f95:	or     eax,0xc8ae61fe
  429f9a:	(bad)  
  429f9b:	mov    bh,0xa3
  429f9d:	(bad)  
  429f9e:	std    
  429f9f:	call   FWORD PTR [ecx]
  429fa1:	xchg   esp,eax
  429fa2:	mov    edx,0xb44ef4b
  429fa7:	add    BYTE PTR [edi],dh
  429fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429faa:	xchg   BYTE PTR [ebp-0x17],al
  429fad:	je     0x429fea
  429faf:	ret    0xd37
  429fb2:	pushf  
  429fb3:	mov    dl,dh
  429fb5:	pushf  
  429fb6:	jne    0x429f56
  429fb8:	or     BYTE PTR ds:0x50ae61fe,0xcf
  429fbf:	mov    bh,0xce
  429fc1:	(bad)  
  429fc3:	call   ecx
  429fc5:	xchg   ebx,eax
  429fc6:	mov    ebx,0xf3859f53
  429fcb:	call   FWORD PTR [eax+0x6f]
  429fce:	xchg   BYTE PTR [ebp-0x17],al
  429fd1:	test   dl,bl
  429fd3:	mov    eax,ds:0x889c0d37
  429fd8:	cli    
  429fd9:	xor    eax,DWORD PTR [eax+0x7c]
  429fdc:	cli    
  429fdd:	aad    0xe7
  429fdf:	add    edx,DWORD PTR [ebp-0x1f25d353]
  429fe5:	pop    edx
  429fe6:	mov    bh,0x3
  429fe8:	aaa    
  429fe9:	mov    ?,WORD PTR [ecx-0x42]
  429fec:	jl     0x429faa
  429fee:	add    DWORD PTR ss:[eax],0xa343700
  429ff5:	mov    esi,DWORD PTR [edx+0x56]
  429ff8:	xor    BYTE PTR [edi-0x6217cb83],dl
  429ffe:	scas   eax,DWORD PTR es:[edi]
  429fff:	jo     0x429fc9
  42a001:	jnp    0x42a038
  42a003:	add    al,ch
  42a005:	add    edx,DWORD PTR [ebp-0x53]
  42a008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a009:	mov    eax,ds:0x3da2ba8
  42a00e:	aaa    
  42a00f:	mov    ?,WORD PTR [ecx-0x42]
  42a012:	push   esp
  42a013:	mov    esp,0xf6c8fc7d
  42a018:	ror    DWORD PTR [edx-0x4a9f7186],0xbf
  42a01f:	xor    ebp,eax
  42a021:	popf   
  42a022:	mov    edi,0x617b8070
  42a027:	aas    
  42a028:	call   0xacefb530
  42a02d:	test   eax,0x32474e0
  42a032:	aaa    
  42a033:	mov    fs,WORD PTR [ecx-0x42]
  42a036:	sbb    al,0xbc
  42a038:	aaa    
  42a039:	push   cs
  42a03a:	aaa    
  42a03b:	xor    al,0x4a
  42a03d:	jge    0x42a031
  42a03f:	test   DWORD PTR [eax-0x17cc5a73],esp
  42a045:	test   eax,0x6c5870bf
  42a04a:	inc    ebx
  42a04b:	cld    
  42a04c:	out    0x3,eax
  42a04e:	aad    0xac
  42a050:	and    al,0xb6
  42a052:	mov    BYTE PTR [esi+0xca00],ah
  42a058:	xor    esi,DWORD PTR [ebx+eiz*2]
  42a05b:	pusha  
  42a05c:	outs   dx,BYTE PTR ds:[esi]
  42a05d:	and    BYTE PTR [ebx+0x70],0x76
  42a061:	inc    esp
  42a062:	ret    0x2324
  42a065:	rcl    dh,0xac
  42a068:	bound  edi,QWORD PTR [ecx+edx*4+0x52343ba2]
  42a06f:	setp   BYTE PTR [edi+0x73]
  42a073:	jle    0x42a0a3
  42a075:	pushf  
  42a076:	push   cs
  42a077:	sub    DWORD PTR [ebx],esi
  42a079:	fwait
  42a07a:	jge    0x42a007
  42a07c:	cmp    BYTE PTR [edi-0x58c14cc],ah
  42a082:	(bad)  
  42a083:	imul   esp,DWORD PTR ds:0xb7a16e7d,0x244f8ca7
  42a08d:	stc    
  42a08e:	test   DWORD PTR [esi],ebp
  42a090:	cmp    esi,DWORD PTR [edi-0x4ffbc09d]
  42a096:	sar    BYTE PTR [ebp+0x64c146cd],0xfd
  42a09d:	jns    0x42a0c1
  42a09f:	je     0x42a058
  42a0a1:	outs   dx,DWORD PTR ds:[esi]
  42a0a2:	mov    WORD PTR [edi],ds
  42a0a4:	fs stc 
  42a0a6:	bound  esp,QWORD PTR [edx-0x7e]
  42a0a9:	cli    
  42a0aa:	or     DWORD PTR [edi-0x5e],edx
  42a0ad:	xchg   ebx,eax
  42a0ae:	ror    BYTE PTR [ebx],0x9b
  42a0b1:	xchg   ebx,eax
  42a0b2:	push   es
  42a0b3:	sbb    ch,bl
  42a0b5:	inc    esi
  42a0b6:	push   ebp
  42a0b7:	lods   al,BYTE PTR ds:[esi]
  42a0b8:	mov    al,0x92
  42a0ba:	shr    BYTE PTR [ebx],0x0
  42a0bd:	add    BYTE PTR [ebx+0x6dfd8893],al
  42a0c3:	xor    eax,0xdca0a736
  42a0c8:	sub    eax,0x4ac9ea9
  42a0cd:	push   esi
  42a0ce:	loopne 0x42a0c1
  42a0d0:	in     eax,0x0
  42a0d2:	dec    esp
  42a0d3:	(bad)  
  42a0d4:	mov    ecx,0x796bdd5e
  42a0d9:	leave  
  42a0da:	popf   
  42a0db:	fadd   QWORD PTR [edx-0x6b33214]
  42a0e1:	and    DWORD PTR [edx+0x69564a1d],0xffffffb3
  42a0e8:	je     0x42a10e
  42a0ea:	sub    cl,BYTE PTR [ecx+0x310e00b8]
  42a0f0:	cmp    dl,0xa5
  42a0f3:	push   0x3034bbe9
  42a0f8:	add    DWORD PTR [ebx+0x244577d8],ecx
  42a0fe:	fdivp  st(5),st
  42a100:	mov    ecx,0x4ee0be50
  42a105:	push   0x3bc188
  42a10a:	hlt    
  42a10b:	sub    esp,DWORD PTR [ebx+0x1]
  42a10e:	sbb    ebp,0x1d
  42a111:	sub    al,0x65
  42a113:	ss jmp 0xf685af04
  42a119:	pop    edi
  42a11a:	mov    al,ds:0xb3e582e5
  42a11f:	ins    DWORD PTR es:[edi],dx
  42a120:	push   esp
  42a121:	mov    eax,DWORD PTR [eax]
  42a123:	add    BYTE PTR [edx],ah
  42a125:	mov    al,0xec
  42a127:	mov    al,0x9c
  42a129:	xor    BYTE PTR [ecx],al
  42a12b:	push   ebx
  42a12c:	call   0x2bd08ca6
  42a131:	loope  0x42a12f
  42a133:	push   DWORD PTR [ecx]
  42a135:	mov    ah,0x3e
  42a137:	sub    al,0xac
  42a139:	jne    0x42a113
  42a13b:	call   0x39dca5
  42a140:	sbb    dh,BYTE PTR [ecx+0x6]
  42a143:	test   BYTE PTR [eax],dh
  42a145:	add    DWORD PTR cs:[eax],eax
  42a148:	mov    BYTE PTR [ecx],ch
  42a14a:	adc    DWORD PTR [edi+esi*1-0x6],esi
  42a14e:	jl     0x42a1a5
  42a150:	das    
  42a151:	pop    eax
  42a152:	jp     0x42a1a4
  42a154:	pop    edx
  42a155:	in     eax,dx
  42a156:	das    
  42a157:	call   0xfb725711
  42a15c:	pop    esi
  42a15d:	add    al,0x4
  42a15f:	add    BYTE PTR [edi],dh
  42a161:	push   ds
  42a162:	jp     0x42a0e9
  42a164:	out    0xcf,eax
  42a166:	das    
  42a167:	sti    
  42a168:	xchg   ebp,eax
  42a16a:	div    DWORD PTR [ebp+0x29]
  42a16d:	retf   
  42a16e:	jnp    0x42a148
  42a170:	fs ret 0x5d75
  42a174:	add    esi,edi
  42a176:	push   eax
  42a177:	or     edi,DWORD PTR [ebx+0x37fffdc4]
  42a17d:	push   esi
  42a17e:	add    al,0x8d
  42a180:	jb     0x42a1e3
  42a182:	into   
  42a183:	dec    esi
  42a184:	clc    
  42a185:	ins    DWORD PTR es:[edi],dx
  42a186:	jns    0x42a188
  42a188:	add    BYTE PTR [eax],al
  42a18a:	aaa    
  42a18b:	fld    QWORD PTR [edx+0x3f6038c0]
  42a191:	add    DWORD PTR [edi],esi
  42a193:	fnstsw WORD PTR [ebp+eax*2-0x25]
  42a197:	data16 std 
  42a199:	mov    WORD PTR [edx-0x7b],gs
  42a19c:	ror    DWORD PTR [edi-0x38],cl
  42a19f:	int3   
  42a1a0:	or     DWORD PTR [ebp-0x4f7ced09],eax
  42a1a6:	ss (bad) 
  42a1a9:	mov    WORD PTR [edx],gs
  42a1ab:	pop    ebp
  42a1ac:	ins    DWORD PTR es:[edi],dx
  42a1ad:	mov    dh,0x37
  42a1af:	(bad)  
  42a1b1:	out    0x34,eax
  42a1b3:	(bad)  
  42a1b4:	std    
  42a1b5:	dec    DWORD PTR ds:0x9f7530e9
  42a1bb:	pop    esi
  42a1bc:	cmp    eax,0x1d1bbcfb
  42a1c1:	in     eax,0xe
  42a1c3:	jecxz  0x42a1f5
  42a1c5:	test   DWORD PTR [edi+0x34],esi
  42a1c8:	xrelease xchg BYTE PTR [ebx-0x45fc17cb],bh
  42a1cf:	imul   edx,DWORD PTR [ebx+ebp*2+0x3e834a8],0x441134f
  42a1da:	aaa    
  42a1db:	mov    edi,0x3cb03024
  42a1e0:	gs (bad) 
  42a1e2:	pusha  
  42a1e3:	xchg   BYTE PTR [edi+0x59],bl
  42a1e6:	jmp    0xcbd5456e
  42a1eb:	xor    ebp,eax
  42a1ed:	add    eax,DWORD PTR [eax]
  42a1ef:	add    BYTE PTR [edx-0x4600e30d],dh
  42a1f5:	push   0x6e671b88
  42a1fa:	xor    BYTE PTR [eax],0xbe
  42a1fd:	js     0x42a277
  42a1ff:	sbb    al,0x8
  42a201:	mov    esp,0x68b233f4
  42a206:	mov    al,ds:0xe833bb6b
  42a20b:	add    ebx,edi
  42a20d:	sahf   
  42a20e:	loopne 0x42a213
  42a210:	aaa    
  42a211:	mov    edi,0x3bb82fac
  42a216:	pop    ebp
  42a217:	(bad)  
  42a218:	add    BYTE PTR [esi-0x7b7ea691],al
  42a21e:	cmp    edx,DWORD PTR [edx+0x3e833a3]
  42a224:	mov    edx,0xb1feb4f3
  42a229:	push   0x6cb31b40
  42a22e:	sbb    dh,BYTE PTR [eax]
  42a230:	mov    esi,0xa01c0478
  42a235:	mov    ebx,0x68aa1f8c
  42a23a:	cmp    BYTE PTR [ebx-0x2e],ch
  42a23d:	xor    ebp,eax
  42a23f:	add    ebx,DWORD PTR [edi+0x3470016a]
  42a245:	xor    al,0x86
  42a247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a248:	dec    eax
  42a249:	mov    ebx,0xd68e7408
  42a24e:	dec    esi
  42a24f:	jb     0x42a252
  42a251:	adc    BYTE PTR [ecx-0x2a],0x0
  42a255:	add    dl,cl
  42a257:	mov    DWORD PTR [eax],0xc0b934e9
  42a25d:	cmp    al,0x37
  42a25f:	mov    ebx,0xfc2bc573
  42a264:	ja     0x42a21d
  42a266:	adc    BYTE PTR [ebx+0x2335c2d8],bh
  42a26c:	(bad)  
  42a26d:	je     0x42a25d
  42a26f:	int    0xb8
  42a271:	pop    edi
  42a272:	xor    esi,DWORD PTR [ecx+eax*1]
  42a275:	sub    esi,0x9de9016c
  42a27b:	ja     0x42a27a
  42a27d:	jb     0x42a292
  42a27f:	rcl    DWORD PTR [ebx-0x63],0xe5
  42a283:	mov    edx,0xeeeb1bd2
  42a288:	(bad)  
  42a289:	push   ebp
  42a28a:	xor    esi,DWORD PTR [ecx+eax*1]
  42a28d:	ins    BYTE PTR es:[edi],dx
  42a28e:	jnp    0x42a2f7
  42a290:	or     al,0x72
  42a292:	scas   al,BYTE PTR es:[edi]
  42a293:	or     eax,0xeb927fe9
  42a298:	stc    
  42a299:	pusha  
  42a29a:	out    dx,al
  42a29b:	jmp    0x6f968d85
  42a2a0:	stc    
  42a2a1:	jb     0x42a2a1
  42a2a3:	loope  0x42a2da
  42a2a5:	shl    BYTE PTR cs:[ebp+0x3434e986],0x63
  42a2ad:	loopne 0x42a24b
  42a2af:	test   DWORD PTR ds:[eax+0x33],ebp
  42a2b3:	xor    al,0x1
  42a2b5:	shl    cl,cl
  42a2b7:	addr16 jl 0x42a241
  42a2ba:	add    BYTE PTR [eax],al
  42a2bc:	mov    ebp,DWORD PTR [edx]
  42a2be:	jne    0x42a2c0
  42a2c0:	mov    dh,0xe0
  42a2c2:	jl     0x42a2bc
  42a2c4:	add    ah,BYTE PTR [esi+0x4d867d82]
  42a2ca:	ins    DWORD PTR es:[edi],dx
  42a2cb:	stc    
  42a2cc:	mov    DWORD PTR [edx],esp
  42a2ce:	test   al,al
  42a2d0:	fcomp  DWORD PTR [eax-0x4b85aa7e]
  42a2d6:	inc    ebx
  42a2d7:	hlt    
  42a2d8:	jbe    0x42a277
  42a2da:	sti    
  42a2db:	dec    DWORD PTR [esi+0x6e]
  42a2de:	jl     0x42a2d4
  42a2e0:	frstor [ecx]
  42a2e2:	add    BYTE PTR [edx+0x46],dh
  42a2e5:	mov    eax,0x3589fff5
  42a2ea:	add    DWORD PTR [esi+0x4d],esi
  42a2ed:	retf   
  42a2ee:	adc    al,0x5f
  42a2f0:	popf   
  42a2f1:	pushf  
  42a2f2:	in     eax,dx
  42a2f3:	add    BYTE PTR [edi+eiz*4-0x74],al
  42a2f7:	mov    ch,0x66
  42a2f9:	and    esi,esi
  42a2fb:	jmp    DWORD PTR [esi+0x50]
  42a2fe:	sar    DWORD PTR [eax+0x1e],0x35
  42a302:	dec    esi
  42a303:	inc    DWORD PTR [ebx]
  42a305:	and    eax,0xac89c682
  42a30a:	icebp  
  42a30b:	push   ebx
  42a30c:	push   ds
  42a30d:	mov    bl,0x43
  42a30f:	hlt    
  42a310:	scas   al,BYTE PTR es:[edi]
  42a311:	dec    esp
  42a312:	or     ch,BYTE PTR [edx-0x78]
  42a315:	and    bh,BYTE PTR [edx-0x3c]
  42a318:	out    0xbb,al
  42a31a:	sar    BYTE PTR [esi-0x1e],0x6d
  42a31e:	je     0x42a328
  42a320:	add    BYTE PTR [eax],al
  42a322:	jns    0x42a2d0
  42a324:	in     eax,dx
  42a325:	mov    ebx,DWORD PTR [eax]
  42a327:	dec    ebp
  42a328:	daa    
  42a329:	bound  ecx,QWORD PTR [eax]
  42a32b:	and    al,BYTE PTR [ebp-0x9ca7d40]
  42a331:	inc    esi
  42a332:	mov    ds:0x46f47421,al
  42a337:	push   ss
  42a338:	ja     0x42a338
  42a33a:	aaa    
  42a33b:	dec    edx
  42a33c:	sub    esi,DWORD PTR [ebp-0x59]
  42a33f:	xor    al,BYTE PTR [edi+0x2b399031]
  42a345:	jne    0x42a2e2
  42a347:	inc    edx
  42a348:	(bad)  
  42a349:	xor    DWORD PTR [eax-0x55183017],eax
  42a34f:	stos   DWORD PTR es:[edi],eax
  42a350:	sub    bh,bl
  42a352:	jo     0x42a2e3
  42a354:	sub    eax,0x2c4bb2e8
  42a359:	sti    
  42a35a:	lods   al,BYTE PTR ds:[esi]
  42a35b:	daa    
  42a35c:	pop    ecx
  42a35d:	sti    
  42a35e:	loop   0x42a352
  42a360:	sbb    al,0x76
  42a362:	push   es
  42a363:	cli    
  42a364:	sub    eax,DWORD PTR [edi+0x877aef2]
  42a36a:	out    0xa9,eax
  42a36c:	int    0x7
  42a36e:	lods   al,BYTE PTR ds:[esi]
  42a36f:	fst    st(0)
  42a371:	cli    
  42a372:	xchg   ebp,esp
  42a374:	int3   
  42a375:	pop    ecx
  42a376:	out    0xdc,eax
  42a378:	enter  0xf5c8,0xe1
  42a37c:	std    
  42a37d:	push   esp
  42a37e:	lods   al,BYTE PTR ds:[esi]
  42a37f:	jno    0x42a3ff
  42a381:	in     al,dx
  42a382:	push   ebx
  42a383:	loopne 0x42a382
  42a385:	inc    DWORD PTR [eax]
  42a387:	add    BYTE PTR [edi+eax*2-0x2c],ah
  42a38b:	gs das 
  42a38d:	pop    eax
  42a38e:	ret    0x8df3
  42a391:	(bad)  
  42a393:	cli    
  42a394:	dec    edx
  42a395:	xor    eax,0x5a374013
  42a39a:	dec    ecx
  42a39b:	or     al,0xb2
  42a39d:	ror    BYTE PTR [edx+edi*8-0x28],1
  42a3a1:	jle    0x42a410
  42a3a3:	mov    ebx,0xe7fddd37
  42a3a8:	sub    al,0xf5
  42a3aa:	std    
  42a3ab:	push   DWORD PTR [edx-0x47054290]
  42a3b1:	push   ds
  42a3b2:	ins    DWORD PTR es:[edi],dx
  42a3b3:	shl    DWORD PTR [edi],0x34
  42a3b6:	call   0xa07e42be
  42a3bb:	add    esi,DWORD PTR [edi]
  42a3bd:	rcr    DWORD PTR [edi+ebx*2+0x3e7f4df],0x37
  42a3c5:	fadd   QWORD PTR [ecx]
  42a3c7:	mov    ch,0x88
  42a3c9:	out    dx,eax
  42a3ca:	ins    BYTE PTR es:[edi],dx
  42a3cb:	mov    bh,0x64
  42a3cd:	lods   al,BYTE PTR ds:[esi]
  42a3ce:	and    eax,0x343704
  42a3d3:	xor    esp,esp
  42a3d5:	xor    ebp,eax
  42a3d7:	jle    0x42a38b
  42a3d9:	or     al,0xda
  42a3db:	sub    al,0x5c
  42a3dd:	mov    ebp,0xb9aa282c
  42a3e2:	pop    ds
  42a3e3:	sub    eax,0xc670ef4c
  42a3e8:	push   eax
  42a3e9:	shl    DWORD PTR [eax+eiz*2],0x0
  42a3ed:	add    BYTE PTR [esi+0x7578c479],ch
  42a3f3:	mov    ebp,0xe6603424
  42a3f8:	stos   BYTE PTR es:[edi],al
  42a3f9:	(bad)  
  42a3fa:	sub    al,0x32
  42a3fc:	call   0xebeddb04
  42a401:	add    dh,BYTE PTR [edi]
  42a403:	xor    al,0x37
  42a405:	sub    eax,0x7e94298b
  42a40a:	retf   0x7c03
  42a40d:	sub    al,0xfc
  42a40f:	out    dx,al
  42a410:	sti    
  42a411:	not    BYTE PTR [esp+ebp*4]
  42a414:	call   0x4ff6db1c
  42a419:	jp     0x42a39d
  42a41b:	xor    al,0xe8
  42a41d:	sbb    bh,0xee
  42a420:	fneni(8087 only) 
  42a422:	mov    bl,0xf3
  42a424:	ror    DWORD PTR [eax+eax*4],cl
  42a427:	shr    DWORD PTR [ebx+edi*1-0x3f],0xee
  42a42c:	cmp    dl,bl
  42a42e:	mov    ecx,0xb9900f6
  42a433:	dec    ecx
  42a434:	pop    ecx
  42a435:	(bad)  [esi+ebp*8-0x74]
  42a439:	mov    esp,0x318bc160
  42a43e:	dec    esi
  42a43f:	jmp    0x42a43a
  42a441:	add    eax,edi
  42a443:	out    dx,eax
  42a444:	stc    
  42a445:	push   cs
  42a446:	mov    bh,0xf1
  42a448:	add    al,0x6
  42a44a:	leave  
  42a44b:	jmp    0xe9f9:0x70b73673
  42a452:	add    BYTE PTR [eax],al
  42a454:	ret    0x8642
  42a457:	ins    BYTE PTR es:[edi],dx
  42a458:	sub    BYTE PTR [esi+eax*8-0x17],bl
  42a45c:	xor    al,0x34
  42a45e:	mov    ecx,0x1343baa
  42a463:	rcl    DWORD PTR [edi+0x30cef9f5],0x3c
  42a46a:	cli    
  42a46b:	cmp    al,0x7
  42a46d:	fdiv   QWORD PTR [ebx+0x59eb0d3c]
  42a473:	pop    ss
  42a474:	push   0x3343bdfb
  42a479:	push   esi
  42a47a:	leave  
  42a47b:	or     al,0xf0
  42a47d:	in     eax,dx
  42a47e:	loope  0x42a46d
  42a480:	fs xor al,0x1
  42a483:	push   0xffffffd6
  42a485:	jmp    0x9d9258a
  42a48a:	cli    
  42a48b:	xchg   BYTE PTR [ebx],ch
  42a48d:	pop    edx
  42a48e:	fidivr WORD PTR [esi+0x4c]
  42a491:	fmul   st(7),st
  42a493:	mov    cs,WORD PTR [ecx+ebp*8-0x18]
  42a497:	push   0x51f9e950
  42a49c:	sahf   
  42a49d:	fyl2xp1 
  42a49f:	pop    esi
  42a4a0:	inc    ebx
  42a4a1:	retf   0x56e9
  42a4a4:	or     al,0xdc
  42a4a6:	int    0x55
  42a4a8:	sbb    al,0xe9
  42a4aa:	call   0xf6672faf
  42a4af:	jmp    DWORD PTR [esi-0x79]
  42a4b2:	idiv   edi
  42a4b4:	add    DWORD PTR [ebp-0x2],ecx
  42a4b7:	xor    al,BYTE PTR [eax]
  42a4b9:	add    BYTE PTR [esi-0x8],bl
  42a4bc:	mov    edx,0x7a49bb8b
  42a4c1:	dec    ebp
  42a4c2:	inc    edx
  42a4c3:	sbb    ecx,ebp
  42a4c5:	add    al,0x3e
  42a4c7:	cmp    BYTE PTR [ecx],al
  42a4c9:	ret    
  42a4ca:	adc    eax,0x478505b0
  42a4cf:	mov    ds:0xe9c68b03,eax
  42a4d4:	mov    BYTE PTR [eax-0x6e],cl
  42a4d7:	outs   dx,BYTE PTR ds:[esi]
  42a4d8:	inc    ecx
  42a4d9:	or     al,0x1d
  42a4db:	ins    DWORD PTR es:[edi],dx
  42a4dc:	push   ecx
  42a4dd:	or     BYTE PTR ds:0x28256b2e,dl
  42a4e3:	ins    DWORD PTR es:[edi],dx
  42a4e4:	jno    0x42a4ea
  42a4e6:	sar    DWORD PTR [ebx+ebp*2],cl
  42a4e9:	pop    esi
  42a4ea:	and    eax,0xf8196a2e
  42a4ef:	ins    BYTE PTR es:[edi],dx
  42a4f0:	adc    BYTE PTR [ebx+0x4888378f],al
  42a4f6:	push   edx
  42a4f7:	xchg   ebx,eax
  42a4f8:	test   dl,dl
  42a4fa:	imul   esp,DWORD PTR [esi],0x5f
  42a4fd:	cmp    DWORD PTR [edi],ebp
  42a4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a500:	iret   
  42a501:	or     edi,0x36
  42a504:	mov    BYTE PTR [eax+0x12],cl
  42a507:	out    0xb9,al
  42a509:	ret    
  42a50a:	xor    al,0xec
  42a50c:	popa   
  42a50d:	cmp    BYTE PTR [ebx],bh
  42a50f:	cmc    
  42a510:	stc    
  42a511:	out    0x2,eax
  42a513:	dec    edx
  42a514:	add    DWORD PTR [eax],eax
  42a516:	mov    ebp,0xeaca3286
  42a51b:	fstp   TBYTE PTR [edx+0x7d]
  42a51e:	add    BYTE PTR [eax],al
  42a520:	out    0x36,al
  42a522:	ja     0x42a55b
  42a524:	addr16 add al,0xf6
  42a527:	xor    esi,DWORD PTR [edi]
  42a529:	sbb    edi,DWORD PTR [ebp+0x45]
  42a52c:	fild   DWORD PTR [ecx-0x40]
  42a52f:	pop    es
  42a530:	dec    edx
  42a531:	cmp    eax,0x9c2b389f
  42a536:	mov    al,0x11
  42a538:	push   ecx
  42a539:	in     al,0xc9
  42a53b:	inc    eax
  42a53c:	xor    eax,0x777ef6a8
  42a541:	fsubr  st,st(2)
  42a543:	inc    esp
  42a544:	das    
  42a545:	fimul  WORD PTR [ecx+0x2197b4c0]
  42a54b:	sti    
  42a54c:	pushf  
  42a54d:	jmp    0x403d:0xa96ee6bd
  42a554:	je     0x42a5b7
  42a556:	mov    eax,ds:0x2197b4e7
  42a55b:	sti    
  42a55c:	and    eax,0x586d161b
  42a561:	(bad)  
  42a563:	mov    ebp,0x86d0db3b
  42a568:	pop    edi
  42a569:	pop    edi
  42a56a:	push   ebx
  42a56b:	je     0x42a58b
  42a56d:	push   cs
  42a56e:	jno    0x42a56e
  42a570:	rcr    BYTE PTR [edi+0x45],cl
  42a573:	je     0x42a58b
  42a575:	pop    edx
  42a576:	sub    eax,0xf90fc230
  42a57b:	mov    dl,0x75
  42a57d:	fild   WORD PTR [eax+edi*8+0x7efa49af]
  42a584:	add    BYTE PTR [eax],al
  42a586:	pop    ds
  42a587:	jbe    0x42a533
  42a589:	add    cl,BYTE PTR [edi]
  42a58b:	cmp    al,ch
  42a58d:	cli    
  42a58e:	adc    BYTE PTR [ebx],bl
  42a590:	inc    esp
  42a591:	call   0x4082d3
  42a596:	pusha  
  42a597:	sahf   
  42a598:	and    DWORD PTR [ebx],0x37
  42a59b:	aaa    
  42a59c:	std    
  42a59d:	push   edi
  42a59e:	nop
  42a59f:	sahf   
  42a5a0:	into   
  42a5a1:	cs loope 0x42a5d8
  42a5a4:	pop    ds
  42a5a5:	push   edx
  42a5a6:	imul   esi,DWORD PTR [edx-0x15],0x70
  42a5aa:	xor    DWORD PTR [edx+0xf],edx
  42a5ad:	cmp    cl,BYTE PTR [ebx+0x2a]
  42a5b0:	pop    ss
  42a5b1:	inc    esp
  42a5b2:	dec    eax
  42a5b3:	in     eax,dx
  42a5b4:	adc    al,0xaf
  42a5b6:	cmp    ebx,DWORD PTR [esi-0x1a]
  42a5b9:	retf   
  42a5ba:	rol    DWORD PTR [ebx+0x67],1
  42a5bd:	sub    ebx,DWORD PTR [eax+0x61]
  42a5c0:	aad    0x1c
  42a5c2:	inc    edi
  42a5c3:	push   edx
  42a5c4:	sub    ebx,DWORD PTR [bp+0x63]
  42a5c8:	cmc    
  42a5c9:	pushf  
  42a5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5cb:	ds jecxz 0x42a63e
  42a5ce:	jle    0x42a589
  42a5d0:	xchg   ebx,eax
  42a5d1:	stc    
  42a5d2:	js     0x42a58b
  42a5d4:	and    eax,0xeda32c06
  42a5d9:	test   BYTE PTR [esi+0x24],bh
  42a5dc:	ja     0x42a5fc
  42a5de:	aad    0xb0
  42a5e0:	and    BYTE PTR [eax+0x2afb669],dh
  42a5e6:	(bad)  
  42a5e7:	ss push esp
  42a5e9:	add    DWORD PTR [eax],eax
  42a5eb:	add    BYTE PTR [edx+ecx*1-0x41],ah
  42a5ef:	add    al,0xd9
  42a5f1:	cmp    esi,DWORD PTR [eax]
  42a5f3:	jnp    0x42a5f9
  42a5f5:	mov    ah,BYTE PTR [edi+0x3860717e]
  42a5fb:	jle    0x42a62e
  42a5fd:	mov    al,0xa0
  42a5ff:	scas   eax,DWORD PTR es:[edi]
  42a600:	call   0xa327:0x26f51382
  42a607:	sbb    DWORD PTR [esi],0x24
  42a60a:	adc    eax,0xe97db115
  42a60f:	or     DWORD PTR [esi],0x6c
  42a612:	adc    al,0xff
  42a614:	mov    ch,ch
  42a616:	pop    ds
  42a617:	scas   eax,DWORD PTR es:[edi]
  42a618:	ss pop esi
  42a61a:	in     al,0x84
  42a61c:	mov    ecx,0xa160135
  42a621:	mov    cl,0x6
  42a623:	pop    esp
  42a624:	std    
  42a625:	cli    
  42a626:	and    BYTE PTR [edx-0x23],0x65
  42a62a:	push   es
  42a62b:	out    dx,al
  42a62c:	dec    esi
  42a62d:	std    
  42a62e:	std    
  42a62f:	pop    esi
  42a630:	dec    ecx
  42a631:	pusha  
  42a632:	lock cmp DWORD PTR [ebx],ebp
  42a635:	adc    BYTE PTR [eax+eiz*4-0x1b0a4bb1],cl
  42a63c:	xchg   DWORD PTR [ecx],esi
  42a63e:	or     dh,BYTE PTR [edi+0x6d]
  42a641:	jmp    0x42a636
  42a643:	pop    esp
  42a644:	fsub   st,st(3)
  42a646:	(bad)  
  42a647:	adc    al,BYTE PTR [ebp-0x47]
  42a64a:	push   edi
  42a64b:	jle    0x42a601
  42a64d:	loop   0x42a652
  42a64f:	sahf   
  42a650:	add    BYTE PTR [eax],al
  42a652:	mov    BYTE PTR ds:0xe63320bb,bh
  42a658:	mov    edi,DWORD PTR [ebp+0x45]
  42a65b:	popf   
  42a65c:	adc    bh,BYTE PTR ds:[eax]
  42a65f:	add    DWORD PTR [ebp+0x7ee9a020],0x1e
  42a666:	xor    eax,0x207230bd
  42a66b:	(bad)  
  42a66c:	pop    ebx
  42a66d:	stos   BYTE PTR es:[edi],al
  42a66e:	mov    ah,0x13
  42a670:	add    DWORD PTR [ebx+0x53],eax
  42a673:	cmp    BYTE PTR [esi+0x7dd7cc34],0xd5
  42a67a:	sub    edi,DWORD PTR [ebx+0x67]
  42a67d:	call   0x495693eb
  42a682:	dec    ebx
  42a683:	je     0x42a686
  42a685:	fs jae 0x42a6e8
  42a688:	js     0x42a664
  42a68a:	ins    DWORD PTR es:[edi],dx
  42a68b:	jns    0x42a6db
  42a68d:	adc    esi,DWORD PTR [edx]
  42a68f:	test   edx,edi
  42a691:	cld    
  42a692:	mov    al,0x39
  42a694:	inc    ecx
  42a695:	jmp    0xb79b51
  42a69a:	es add eax,0x7a458d
  42a6a0:	add    DWORD PTR fs:[esi],esi
  42a6a3:	cmp    al,0x7d
  42a6a5:	inc    eax
  42a6a6:	ficom  WORD PTR [edx]
  42a6a8:	adc    al,0x6c
  42a6aa:	fdivrp st(5),st
  42a6ac:	stc    
  42a6ad:	test   BYTE PTR [esi],cl
  42a6af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a6b0:	cmp    BYTE PTR [ebp-0x72aee65d],cl
  42a6b6:	add    BYTE PTR [eax],al
  42a6b8:	xchg   ebx,eax
  42a6b9:	sbb    eax,0x25938d51
  42a6be:	push   ecx
  42a6bf:	inc    DWORD PTR [ebx+0x665d8811]
  42a6c5:	adc    DWORD PTR [eax+esi*2],edx
  42a6c8:	mov    ?,ebp
  42a6ca:	stc    
  42a6cb:	test   BYTE PTR [esi-0x5c],cl
  42a6ce:	or     eax,0xf619c3ff
  42a6d3:	jne    0x42a6fb
  42a6d5:	adc    DWORD PTR [eax+esi*8-0x3f],esi
  42a6d9:	adc    dl,BYTE PTR [esp+esi*2]
  42a6dc:	pop    esi
  42a6dd:	cmc    
  42a6de:	stc    
  42a6df:	test   BYTE PTR [esi-0x5d],cl
  42a6e2:	or     al,0xff
  42a6e4:	repz adc dh,dh
  42a6e7:	adc    eax,0x41460a
  42a6ec:	int    0xab
  42a6ee:	cmc    
  42a6ef:	call   DWORD PTR ds:0xa10c7525
  42a6f5:	out    0x5,eax
  42a6f7:	add    BYTE PTR [esi+0x35],bl
  42a6fa:	mov    BYTE PTR [esi+0x52],bh
  42a6fd:	push   0xf3c50857
  42a702:	cmc    
  42a703:	jmp    0x42a721
  42a705:	out    0xb9,al
  42a707:	pop    ebx
  42a708:	xlat   BYTE PTR ds:[ebx]
  42a709:	jne    0x42a75f
  42a70b:	mov    ecx,edx
  42a70d:	mov    ch,0xec
  42a70f:	adc    BYTE PTR [ebp-0x38],bl
  42a712:	cmp    eax,0x51b377c
  42a717:	das    
  42a718:	in     al,dx
  42a719:	mov    dl,0x4d
  42a71b:	sub    al,BYTE PTR [eax]
  42a71d:	add    BYTE PTR [eax],al
  42a71f:	mov    dl,0xce
  42a721:	mov    WORD PTR [edx-0x4d],?
  42a724:	int    0x65
  42a726:	xor    ebx,DWORD PTR ss:[ecx+0x22db777b]
  42a72d:	adc    eax,0xffbdeb53
  42a732:	mov    bl,0x1a
  42a734:	stos   BYTE PTR es:[edi],al
  42a735:	cmp    edx,eax
  42a737:	xchg   edi,eax
  42a738:	sub    DWORD PTR [eax-0x46],edx
  42a73b:	(bad)  
  42a73c:	and    DWORD PTR [eax-0x4e],edx
  42a73f:	xchg   edi,eax
  42a740:	sub    eax,0x259fb850
  42a745:	mov    DWORD PTR [edx],edx
  42a747:	pop    ds
  42a748:	and    edx,DWORD PTR ds:0xffbe0b27
  42a74e:	mov    ebx,0x9818aa1a
  42a753:	mov    edi,0xade44f21
  42a758:	xchg   edi,eax
  42a759:	nop    esp
  42a75c:	and    dh,BYTE PTR [ebp+0x2f]
  42a75f:	xor    dl,BYTE PTR [ecx]
  42a761:	push   0x84fd9b27
  42a766:	ja     0x42a7cf
  42a768:	add    BYTE PTR [edi-0x85625ca],ch
  42a76e:	pusha  
  42a76f:	out    0x71,eax
  42a771:	push   cs
  42a772:	neg    edx
  42a774:	ja     0x42a735
  42a776:	in     al,dx
  42a777:	xchg   ebx,eax
  42a778:	ds add al,0x37
  42a77b:	and    BYTE PTR [eax-0x14],bh
  42a77e:	out    0x48,al
  42a780:	js     0x42a7b7
  42a782:	add    BYTE PTR [eax],al
  42a784:	ud2    
  42a786:	mov    esi,0xba5089ff
  42a78b:	sti    
  42a78c:	xchg   DWORD PTR [ebx+0x5],esi
  42a78f:	data16 aaa 
  42a791:	xor    al,0xe
  42a793:	add    ebx,DWORD PTR [edx+eiz*2]
  42a796:	lock and al,0xe5
  42a799:	mov    cl,0xa7
  42a79b:	scas   eax,DWORD PTR es:[edi]
  42a79c:	inc    edx
  42a79d:	out    0xf4,eax
  42a79f:	push   edi
  42a7a0:	xor    DWORD PTR [eax+ebp*8-0x80],esi
  42a7a4:	jmp    FWORD PTR [edx-0xb]
  42a7a7:	aam    0xb9
  42a7a9:	jno    0x42a81f
  42a7ab:	jg     0x42a7a4
  42a7ad:	pusha  
  42a7ae:	rcr    BYTE PTR [ebx],0x84
  42a7b1:	push   0x62
  42a7b3:	and    eax,0x2564ecb0
  42a7b8:	dec    ebx
  42a7b9:	dec    ecx
  42a7ba:	gs mov edi,0xaf4b84cc
  42a7c0:	mov    esp,0xbc02ce7f
  42a7c5:	popa   
  42a7c6:	lock and al,0x85
  42a7c9:	mov    cl,0x27
  42a7cb:	mov    al,0x34
  42a7cd:	mov    ebx,0x7f2f1922
  42a7d2:	adc    BYTE PTR [ebp-0xee519de],bl
  42a7d8:	rol    BYTE PTR [edi+0x30c93ab2],1
  42a7de:	call   0x991b61b1
  42a7e3:	sar    cl,cl
  42a7e5:	push   eax
  42a7e6:	add    BYTE PTR [eax+eax*1],al
  42a7e9:	add    BYTE PTR [ebx+eiz*1],al
  42a7ec:	repz jmp 0xbb06:0xb5743beb
  42a7f4:	sbb    al,0x18
  42a7f6:	sub    BYTE PTR [eax+ebp*8+0x76],dh
  42a7fa:	cli    
  42a7fb:	jmp    0x42a834
  42a7fd:	int    0xbb
  42a7ff:	jno    0x42a7cd
  42a801:	rcr    edx,cl
  42a803:	xor    ebx,eax
  42a805:	scas   al,BYTE PTR es:[edi]
  42a806:	xor    bh,ah
  42a808:	xchg   ecx,eax
  42a809:	jle    0x42a802
  42a80b:	pusha  
  42a80c:	add    ebx,edi
  42a80e:	scas   eax,DWORD PTR es:[edi]
  42a80f:	jno    0x42a80a
  42a811:	fs je  0x42a874
  42a814:	es push 0x74
  42a817:	out    0x6d,al
  42a819:	lds    ebp,FWORD PTR [ebx+ebx*8]
  42a81c:	ja     0x42a7b5
  42a81e:	push   ebx
  42a81f:	scas   eax,DWORD PTR es:[edi]
  42a820:	clc    
  42a821:	fs pop ebx
  42a823:	pusha  
  42a824:	push   ss
  42a825:	je     0x42a7e0
  42a827:	cs push ecx
  42a829:	jle    0x42a7cc
  42a82b:	ficom  WORD PTR [ecx+0x3]
  42a82e:	xor    eax,0x1be173eb
  42a833:	add    al,BYTE PTR [ecx+ebp*1+0x51522e89]
  42a83a:	aaa    
  42a83b:	pop    esi
  42a83c:	sti    
  42a83d:	push   esi
  42a83e:	(bad)  
  42a83f:	jmp    0x8b460a9e
  42a844:	enter  0xb82b,0xe6
  42a848:	dec    esi
  42a849:	xchg   esi,eax
  42a84a:	pop    ebx
  42a84b:	pusha  
  42a84c:	and    eax,0xa60000e5
  42a851:	std    
  42a852:	call   0xfa2e03b3
  42a857:	jb     0x42a8a5
  42a859:	mov    cl,0xf9
  42a85b:	xchg   ebp,eax
  42a85c:	outs   dx,DWORD PTR ds:[esi]
  42a85d:	test   dl,bh
  42a85f:	popf   
  42a860:	push   0x5b8ce942
  42a865:	jmp    0x42a860
  42a867:	jb     0x42a8ad
  42a869:	mov    cl,0xf2
  42a86b:	jne    0x42a8ad
  42a86d:	adc    BYTE PTR [edx-0xa],0x3a
  42a871:	push   esp
  42a872:	pop    gs
  42a874:	xor    al,0xb1
  42a876:	rcr    BYTE PTR [ecx+esi*1-0x16],0xbd
  42a87b:	aaa    
  42a87c:	and    esp,DWORD PTR [esi-0x7ceb2889]
  42a882:	jmp    0xfa2f4b14
  42a887:	add    BYTE PTR [eax],dl
  42a889:	repz add ebx,0x55
  42a88d:	outs   dx,BYTE PTR ds:[esi]
  42a88e:	or     DWORD PTR [eax],eax
  42a890:	loope  0x42a85e
  42a892:	sbb    eax,0xf5ebd104
  42a897:	adc    al,0x4e
  42a899:	xor    BYTE PTR [ecx-0x18],dl
  42a89c:	gs adc esi,esi
  42a89f:	call   FWORD PTR [edx-0x4ef18b90]
  42a8a5:	int3   
  42a8a6:	sbb    eax,0xe9ebb104
  42a8ab:	adc    al,0x1e
  42a8ad:	xor    BYTE PTR [eax+eax*8-0x3fd5d116],al
  42a8b4:	add    BYTE PTR [eax],al
  42a8b6:	push   cs
  42a8b7:	outs   dx,BYTE PTR ds:[esi]
  42a8b8:	add    eax,0xecb69b00
  42a8bd:	add    DWORD PTR [edx+0x2d564ae4],0x25
  42a8c4:	dec    esi
  42a8c5:	(bad)  
  42a8c6:	jmp    0x42a8d5
  42a8c8:	mov    ecx,0x131cee7
  42a8cd:	mov    bl,dl
  42a8cf:	adc    ch,cl
  42a8d1:	pop    ss
  42a8d2:	in     eax,dx
  42a8d3:	xor    DWORD PTR [ecx],eax
  42a8d5:	mov    edi,0x1001318e
  42a8da:	fstp   DWORD PTR [esi+0x12cec682]
  42a8e0:	adc    al,0x30
  42a8e2:	mov    dh,cl
  42a8e4:	stc    
  42a8e5:	mov    bl,bl
  42a8e7:	dec    ecx
  42a8e8:	xor    al,bl
  42a8ea:	sti    
  42a8eb:	jmp    0xb710003a
  42a8f0:	mov    esi,0xf1ec6150
  42a8f5:	adc    al,0x8e
  42a8f7:	xor    DWORD PTR [eax-0x44f9a9bb],ecx
  42a8fd:	pminub mm3,QWORD PTR [ecx+0x1]
  42a901:	add    BYTE PTR [edi],dh
  42a903:	fistp  DWORD PTR [esi]
  42a905:	adc    eax,0xffbddf43
  42a90a:	cmp    DWORD PTR [eax],ebp
  42a90c:	sbb    eax,0x259f7a89
  42a911:	jp     0x42a93b
  42a913:	sahf   
  42a914:	push   ds
  42a915:	test   bh,dh
  42a917:	add    eax,0x8582
  42a91c:	aaa    
  42a91d:	(bad)  
  42a91f:	xchg   BYTE PTR [edx-0x1d],bh
  42a922:	mov    WORD PTR [ebp+0x3f],es
  42a925:	add    al,BYTE PTR [ebx+0x75]
  42a928:	and    eax,0xaed3c988
  42a92d:	pop    ss
  42a92e:	or     eax,0x2672e787
  42a933:	add    BYTE PTR [edi],dh
  42a935:	(bad)  ds:0xfddb65b4
  42a93b:	push   edx
  42a93c:	test   BYTE PTR [edx-0x79c08ae2],ch
  42a942:	stc    
  42a943:	pop    ss
  42a944:	and    ebx,DWORD PTR [ebx+0x41c786fd]
  42a94a:	adc    dh,BYTE PTR [ebp+0x23]
  42a94d:	retf   0x4eb6
  42a950:	add    al,0xca
  42a952:	push   ds
  42a953:	jne    0x42a994
  42a955:	push   ds
  42a956:	stc    
  42a957:	jmp    0x42a9a4
  42a959:	fwait
  42a95a:	std    
  42a95b:	xchg   BYTE PTR [edi+0x497412d1],ah
  42a961:	inc    esi
  42a962:	stc    
  42a963:	ja     0x42a98b
  42a965:	fwait
  42a966:	std    
  42a967:	dec    edi
  42a968:	sbb    bh,0xe5
  42a96b:	adc    esi,edi
  42a96d:	fidiv  DWORD PTR [edi+0x20115f4f]
  42a973:	sti    
  42a974:	push   0x31753e56
  42a979:	mov    ebp,0x3433151e
  42a97e:	std    
  42a97f:	ret    
  42a980:	add    BYTE PTR [eax],al
  42a982:	push   eax
  42a983:	lods   al,BYTE PTR ds:[esi]
  42a984:	cmp    al,0x21
  42a986:	mov    dl,0xf3
  42a988:	pop    ebx
  42a989:	or     BYTE PTR [ebp+0x6e],dh
  42a98c:	retf   
  42a98d:	add    esp,ebp
  42a98f:	in     al,0xdc
  42a991:	add    ecx,DWORD PTR [edx+0x74]
  42a994:	call   0x3d263574
  42a999:	divps  xmm0,XMMWORD PTR [ecx-0x1ccf674c]
  42a9a0:	sbb    al,0x18
  42a9a2:	pop    ds
  42a9a3:	out    0x99,al
  42a9a5:	and    DWORD PTR [esp+eiz*8],ecx
  42a9a8:	sbb    al,0x1c
  42a9aa:	cld    
  42a9ab:	dec    ecx
  42a9ac:	xchg   esp,eax
  42a9ad:	clc    
  42a9ae:	cmp    BYTE PTR [esi+ebp*2],dh
  42a9b1:	(bad)  
  42a9b2:	in     eax,dx
  42a9b3:	sbb    DWORD PTR [edx],0xffffffbd
  42a9b6:	push   esi
  42a9b8:	jmp    0x42a9bd
  42a9ba:	test   BYTE PTR [esi+0x6b],cl
  42a9bd:	and    DWORD PTR [ebp+0x48],esp
  42a9c0:	arpl   di,si
  42a9c2:	fadd   QWORD PTR [esi-0x58]
  42a9c5:	add    esi,DWORD PTR [eax+0x7f8cf87a]
  42a9cb:	sub    al,0xe9
  42a9cd:	add    esi,DWORD PTR [edi]
  42a9cf:	scas   eax,DWORD PTR es:[edi]
  42a9d0:	mov    bl,0xe7
  42a9d2:	cmp    BYTE PTR [ebp+0x3436106f],ch
  42a9d8:	call   0xc2869f69
  42a9dd:	mov    ebx,gs
  42a9df:	pop    ss
  42a9e0:	hlt    
  42a9e1:	mov    ch,BYTE PTR [edi+0x3e92c]
  42a9e7:	add    BYTE PTR [edi],dh
  42a9e9:	scas   eax,DWORD PTR es:[edi]
  42a9ea:	test   eax,0x5fad16f3
  42a9ef:	hlt    
  42a9f0:	aaa    
  42a9f1:	xor    al,0xe8
  42a9f3:	and    ch,ah
  42a9f5:	inc    edi
  42a9f6:	sti    
  42a9f7:	not    BYTE PTR [esi+eax*2]
  42a9fa:	add    DWORD PTR [ecx-0x2b0578cc],ebp
  42aa00:	les    eax,FWORD PTR [edi+0x41]
  42aa03:	jmp    0xffb79ec1
  42aa08:	adc    DWORD PTR [edx],0xffffffc1
  42aa0b:	cmp    DWORD PTR [ebx+0x34e8ff48],edx
  42aa11:	xchg   DWORD PTR [ecx],edi
  42aa13:	sub    eax,0xf175431f
  42aa18:	push   edi
  42aa19:	dec    ecx
  42aa1a:	jne    0x42a9f9
  42aa1c:	hlt    
  42aa1d:	loop   0x42aa05
  42aa1f:	out    0x57,eax
  42aa21:	dec    ecx
  42aa22:	popa   
  42aa23:	std    
  42aa24:	hlt    
  42aa25:	loop   0x42a9ad
  42aa27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa28:	mul    DWORD PTR [eax-0x463616f4]
  42aa2e:	in     al,dx
  42aa2f:	push   0x48
  42aa31:	inc    eax
  42aa32:	dec    esi
  42aa33:	pop    ds
  42aa34:	scas   al,BYTE PTR es:[edi]
  42aa35:	mov    ecx,0xdf1613ee
  42aa3a:	jb     0x42aa19
  42aa3c:	mov    bl,0xfb
  42aa3e:	test   DWORD PTR [eax+0x17],esi
  42aa41:	dec    ecx
  42aa42:	in     eax,dx
  42aa43:	sti    
  42aa44:	hlt    
  42aa45:	loop   0x42a9cd
  42aa47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa48:	les    edi,FWORD PTR [ecx+0xe188]
  42aa4e:	xor    eax,0x5fde0134
  42aa53:	mov    ah,0x10
  42aa55:	call   0xb83cde8e
  42aa5a:	mov    al,ds:0xad354bab
  42aa5f:	js     0x42aa5a
  42aa61:	mov    eax,cs:0x34a90f16
  42aa67:	mov    cl,0x43
  42aa69:	adc    esp,eax
  42aa6b:	fnsave [ebx+0x15]
  42aa6e:	push   edi
  42aa6f:	dec    ecx
  42aa70:	push   ecx
  42aa71:	cmc    
  42aa72:	je     0x42aa56
  42aa74:	test   BYTE PTR [eax],al
  42aa76:	push   ds
  42aa77:	inc    esp
  42aa78:	test   esi,ecx
  42aa7a:	pop    esi
  42aa7b:	add    DWORD PTR ss:[esi-0x33],esp
  42aa7f:	shl    ecx,0x2
  42aa82:	jecxz  0x42aa65
  42aa84:	xor    BYTE PTR [esi+0x4e],0xcd
  42aa88:	mov    bh,0x0
  42aa8a:	pop    edi
  42aa8b:	add    DWORD PTR ss:[ebx],ebp
  42aa8e:	enter  0x2b,0x0
  42aa92:	dec    esi
  42aa93:	aaa    
  42aa94:	jl     0x42aa7e
  42aa96:	pop    ds
  42aa97:	cmc    
  42aa98:	in     eax,0x1
  42aa9a:	imul   ecx,DWORD PTR [eax+0x0],0x5d
  42aa9e:	loop   0x42aaad
  42aaa0:	inc    edi
  42aaa1:	pop    fs
  42aaa3:	jmp    0x42aa96
  42aaa5:	adc    esi,0x43
  42aaa8:	jbe    0x42aac6
  42aaaa:	and    bl,bl
  42aaac:	inc    ecx
  42aaad:	dec    eax
  42aaae:	and    ah,bh
  42aab0:	inc    ecx
  42aab1:	dec    eax
  42aab2:	add    BYTE PTR [eax],al
  42aab4:	and    bl,al
  42aab6:	jp     0x42aaa0
  42aab8:	loopne 0x42aa83
  42aaba:	pop    ds
  42aabb:	dec    eax
  42aabc:	loop   0x42aa9c
  42aabe:	inc    ecx
  42aabf:	jne    0x42aa5f
  42aac1:	push   cs
  42aac2:	and    cl,BYTE PTR [ecx+0x26e20dcb]
  42aac8:	pop    ebp
  42aac9:	adc    BYTE PTR [edi],al
  42aacb:	je     0x42aa95
  42aacd:	in     eax,dx
  42aace:	ins    DWORD PTR es:[edi],dx
  42aacf:	push   ss
  42aad0:	xchg   esi,eax
  42aad1:	leave  
  42aad2:	add    cl,BYTE PTR [eax-0x1d]
  42aad5:	fimul  WORD PTR [eax+0x7baf725d]
  42aadb:	lock add eax,0x625d88e5
  42aae1:	scas   eax,DWORD PTR es:[edi]
  42aae2:	jnp    0x42aacc
  42aae4:	cmc    
  42aae5:	sub    al,0x88
  42aae7:	pop    ebp
  42aae8:	xor    cl,BYTE PTR ds:0x45ab88ff
  42aaee:	mov    BYTE PTR [ebp+0x37],bl
  42aaf1:	aaa    
  42aaf2:	nop
  42aaf3:	inc    ebp
  42aaf4:	(bad)  
  42aaf5:	fwait
  42aaf6:	sbb    dl,BYTE PTR ds:0xffbdff5f
  42aafc:	mov    bl,0xb
  42aafe:	cwde   
  42aaff:	dec    ecx
  42ab00:	int    0xda
  42ab02:	sbb    dh,BYTE PTR [ebp+0x5b]
  42ab05:	sar    al,cl
  42ab07:	mov    bh,0x24
  42ab09:	or     eax,DWORD PTR ds:0xfdcb37a9
  42ab0f:	aas    
  42ab10:	retf   
  42ab11:	loop   0x42aaba
  42ab13:	std    
  42ab14:	stos   DWORD PTR es:[edi],eax
  42ab15:	sbb    BYTE PTR ds:0x30000050,ch
  42ab1b:	and    BYTE PTR [ecx],ah
  42ab1d:	sti    
  42ab1e:	inc    edx
  42ab1f:	inc    edi
  42ab20:	stc    
  42ab21:	aas    
  42ab22:	aaa    
  42ab23:	cmp    esp,DWORD PTR [edi+0x220819ff]
  42ab29:	adc    al,0x77
  42ab2b:	retf   
  42ab2c:	xchg   BYTE PTR [ebp+0x3],al
  42ab2f:	push   es
  42ab30:	leave  
  42ab31:	jmp    0x42aac2
  42ab33:	xlat   BYTE PTR ds:[ebx]
  42ab34:	sahf   
  42ab35:	(bad)  
  42ab36:	clc    
  42ab37:	sbb    al,BYTE PTR [esi-0x36fa18bb]
  42ab3d:	out    0x87,eax
  42ab3f:	bound  ebx,QWORD PTR [ecx+0x25dfe0eb]
  42ab45:	data16 aaa 
  42ab47:	push   edx
  42ab48:	cdq    
  42ab49:	sti    
  42ab4a:	rcr    bh,1
  42ab4c:	test   eax,0xbacb7713
  42ab51:	pop    ecx
  42ab52:	pop    esp
  42ab53:	adc    al,0x3f
  42ab55:	push   ebp
  42ab56:	lods   al,BYTE PTR ds:[esi]
  42ab57:	push   ds
  42ab58:	mov    ch,0x86
  42ab5a:	cli    
  42ab5b:	out    0xf0,al
  42ab5d:	mov    al,ds:0x4efdcb37
  42ab62:	or     BYTE PTR [edi-0x3bcb9a30],bl
  42ab68:	out    0xc0,al
  42ab6a:	or     esi,DWORD PTR [eiz*8-0x27988816]
  42ab71:	lock jmp 0xbf14:0x303e832
  42ab79:	inc    esp
  42ab7a:	jmp    0x42abc0
  42ab7c:	iret   
  42ab7d:	inc    esp
  42ab7e:	add    BYTE PTR [eax],al
  42ab80:	cmp    al,0xb7
  42ab82:	dec    edi
  42ab83:	add    esi,DWORD PTR [edi]
  42ab85:	xor    al,0x2b
  42ab87:	enter  0x2a5c,0xe6
  42ab8b:	add    esi,DWORD PTR [edi]
  42ab8d:	es mov edi,0x24f91a29
  42ab93:	and    BYTE PTR ds:0x5003e836,dh
  42ab99:	in     al,0xa2
  42ab9b:	(bad)  
  42ab9c:	sub    al,0x34
  42ab9e:	out    0x3,al
  42aba0:	aaa    
  42aba1:	retf   
  42aba2:	int    0x45
  42aba4:	jp     0x42ab86
  42aba6:	add    BYTE PTR [edi+esi*1],0x34
  42abaa:	mov    edi,0xa479f5f4
  42abaf:	data16 aaa 
  42abb1:	xor    al,0xe8
  42abb3:	sub    BYTE PTR [edi+esi*8],dh
  42abb6:	sub    al,0x20
  42abb8:	cwde   
  42abb9:	xor    al,0xe8
  42abbb:	add    esp,DWORD PTR [eax-0x4b087ccb]
  42abc1:	inc    edx
  42abc2:	sub    BYTE PTR [eax+edi*4],al
  42abc5:	fcomp  QWORD PTR [esi-0x39]
  42abc8:	xor    BYTE PTR ds:0x3437b062,bl
  42abce:	call   0x69ee1c69
  42abd3:	lods   al,BYTE PTR ds:[esi]
  42abd4:	aaa    
  42abd5:	xor    al,0xe8
  42abd7:	fsubr  DWORD PTR [ebx+0x30]
  42abda:	aad    0xde
  42abdc:	mov    ecx,0x138e0eef
  42abe1:	xor    eax,0x3e8
  42abe6:	mov    dh,0xdd
  42abe8:	add    BYTE PTR [ecx+0x36],al
  42abeb:	xor    al,0x1
  42abed:	mov    dh,0xa1
  42abef:	mov    bl,0xd5
  42abf1:	pushf  
  42abf2:	cmp    DWORD PTR [esi-0x1d],edx
  42abf5:	mov    ecx,0xfd654923
  42abfa:	je     0x42abdb
  42abfc:	mov    eax,ds:0x2e3cc8e1
  42ac01:	sub    DWORD PTR [edx+esi*4+0x3434e868],edi
  42ac08:	mov    BYTE PTR [edi-0x71],ch
  42ac0b:	xor    al,0x1
  42ac0d:	jmp    0xe8af5ecf
  42ac12:	xor    al,0x34
  42ac14:	xchg   BYTE PTR [edi+edx*1],ah
  42ac17:	xlat   BYTE PTR ds:[ebx]
  42ac18:	adc    eax,0x86377162
  42ac1d:	sbb    al,0x47
  42ac1f:	lods   eax,DWORD PTR ds:[esi]
  42ac20:	mov    dl,BYTE PTR [ecx+0x34]
  42ac23:	xor    al,0x1
  42ac25:	jo     0x42aba9
  42ac27:	pop    eax
  42ac28:	add    cl,ch
  42ac2a:	xor    al,0xad
  42ac2c:	cmp    BYTE PTR ds:0x72013434,0xf1
  42ac33:	sub    bl,BYTE PTR [edx+0x42]
  42ac36:	ins    BYTE PTR es:[edi],dx
  42ac37:	sahf   
  42ac38:	or     cl,ch
  42ac3a:	shl    DWORD PTR [ebp-0x7b59c714],0x52
  42ac41:	jb     0x42ac0c
  42ac43:	inc    edx
  42ac44:	xchg   BYTE PTR [ecx-0x4b],bh
  42ac47:	(bad)  
  42ac49:	jmp    0xd975:0x34340000
  42ac50:	mov    ch,0xda
  42ac52:	add    ebx,ebp
  42ac54:	xor    al,0x34
  42ac56:	jne    0x42ac49
  42ac58:	mov    ch,0xda
  42ac5a:	add    al,0xeb
  42ac5c:	xor    al,0x34
  42ac5e:	je     0x42ac15
  42ac60:	fsubrp st(0),st
  42ac62:	cli    
  42ac63:	add    bl,ch
  42ac65:	sub    dh,dh
  42ac67:	adc    eax,0x39e686
  42ac6c:	adc    eax,0xce9e321b
  42ac71:	xor    DWORD PTR [ecx],eax
  42ac73:	add    BYTE PTR [edx-0x2c48f901],ch
  42ac79:	loop   0x42ac07
  42ac7b:	inc    ebp
  42ac7c:	and    ah,BYTE PTR [ebx-0x786e9b9d]
  42ac82:	mov    esi,0xe1715c6a
  42ac87:	adc    BYTE PTR [ebp+0x71],ah
  42ac8a:	push   ecx
  42ac8b:	push   ebx
  42ac8c:	mov    ah,0xd1
  42ac8e:	div    BYTE PTR [ebp+0x56]
  42ac91:	aas    
  42ac92:	adc    al,0xc0
  42ac94:	dec    ebp
  42ac95:	repnz stc 
  42ac97:	test   BYTE PTR [esi-0x1c7cf23d],cl
  42ac9d:	cmp    edi,ebx
  42ac9f:	push   cs
  42aca0:	call   0x7bb7:0x1e0000df
  42aca7:	cld    
  42aca8:	sbb    ch,BYTE PTR [ebx]
  42acaa:	test   DWORD PTR [edi],ecx
  42acac:	rdmsr  
  42acae:	add    DWORD PTR [ecx-0x37800000],ecx
  42acb4:	add    BYTE PTR [eax],al
  42acb6:	push   ds
  42acb7:	sub    ebp,DWORD PTR [esi-0x51d501a3]
  42acbd:	(bad)  
  42acbe:	xchg   ebp,eax
  42acbf:	sti    
  42acc0:	ins    DWORD PTR es:[edi],dx
  42acc1:	adc    al,0x1e
  42acc3:	cmp    al,al
  42acc5:	loopne 0x42acd5
  42acc7:	das    
  42acc8:	mov    edx,0x1c36150
  42accd:	mov    DWORD PTR [ebx+0x3c],eax
  42acd0:	arpl   WORD PTR [eax],sp
  42acd2:	popa   
  42acd3:	ret    
  42acd4:	add    edi,edi
  42acd6:	or     DWORD PTR [edx+0x38be7d7a],edx
  42acdc:	je     0x42ad01
  42acde:	aaa    
  42acdf:	icebp  
  42ace0:	std    
  42ace1:	sub    eax,0xe8475277
  42ace6:	loopne 0x42ad49
  42ace8:	push   ss
  42ace9:	sti    
  42acea:	mov    al,ds:0xe00af1a8
  42acef:	or     esi,DWORD PTR [ebp+0x17070afa]
  42acf5:	jne    0x42ad36
  42acf7:	inc    ebx
  42acf8:	mov    al,ds:0xb53e80f9
  42acfd:	call   0x4078bf
  42ad02:	jo     0x42accc
  42ad04:	cmc    
  42ad05:	cli    
  42ad06:	loop   0x42acea
  42ad08:	and    eax,0x16de6154
  42ad0d:	mov    edx,esi
  42ad0f:	add    al,BYTE PTR [ebx-0x7901c009]
  42ad15:	adc    DWORD PTR [eax],eax
  42ad17:	add    BYTE PTR [esi],dh
  42ad19:	retf   
  42ad1a:	std    
  42ad1b:	or     bh,BYTE PTR [ebx+0x37fffdf0]
  42ad21:	dec    edx
  42ad22:	sbb    edi,esi
  42ad24:	inc    ecx
  42ad25:	push   edi
  42ad26:	push   esp
  42ad27:	add    BYTE PTR [edi],dh
  42ad29:	retf   
  42ad2a:	xor    bh,0x34
  42ad2d:	daa    
  42ad2e:	mov    ?,WORD PTR [esi+0x1c]
  42ad31:	ror    BYTE PTR [ecx+0x1b11c254],1
  42ad37:	jg     0x42ad47
  42ad39:	int3   
  42ad3a:	mov    es,WORD PTR [ebx+0x42]
  42ad3d:	ins    BYTE PTR es:[edi],dx
  42ad3e:	(bad)  
  42ad3f:	push   DWORD PTR [edi]
  42ad41:	aas    
  42ad42:	in     al,0x3c
  42ad44:	xchg   ebp,eax
  42ad45:	retf   0xfffd
  42ad48:	arpl   WORD PTR [ebp-0x34c86128],bx
  42ad4e:	std    
  42ad4f:	jae    0x42ad59
  42ad51:	test   al,0x5d
  42ad53:	add    BYTE PTR [edi],dh
  42ad55:	retf   
  42ad56:	mov    DWORD PTR [edi],esp
  42ad58:	or     dh,BYTE PTR [ecx*4-0x2acbc8fd]
  42ad5f:	lahf   
  42ad60:	iret   
  42ad61:	jl     0x42ad4c
  42ad63:	add    esi,DWORD PTR [edi]
  42ad65:	test   eax,0x33110bac
  42ad6a:	into   
  42ad6b:	add    ebx,DWORD PTR [ecx]
  42ad6d:	xor    al,0x97
  42ad6f:	sbb    al,BYTE PTR [edx-0x68]
  42ad72:	(bad)  
  42ad73:	ret    
  42ad74:	nop
  42ad75:	ins    BYTE PTR es:[edi],dx
  42ad76:	inc    eax
  42ad77:	mov    esp,0x8e22dc8c
  42ad7c:	add    BYTE PTR [eax],al
  42ad7e:	cli    
  42ad7f:	cmp    ebp,DWORD PTR [edi-0x48]
  42ad82:	jl     0x42ad60
  42ad84:	pushf  
  42ad85:	jecxz  0x42ad88
  42ad87:	retf   
  42ad88:	xchg   esp,eax
  42ad89:	sbb    ch,BYTE PTR [esp+ebx*8-0x3c]
  42ad8d:	fs aaa 
  42ad8f:	xor    al,0xe8
  42ad91:	nop
  42ad92:	das    
  42ad93:	dec    edx
  42ad94:	call   0x721efb46
  42ad99:	or     edx,DWORD PTR [eax+0x16]
  42ad9c:	and    eax,0xe8343764
  42ada1:	mov    ds,WORD PTR [ecx]
  42ada3:	dec    edx
  42ada4:	call   0xba12dc56
  42ada9:	xlat   BYTE PTR ds:[ebx]
  42adaa:	leave  
  42adab:	xor    al,0xe8
  42adad:	add    ebp,DWORD PTR [edx+0x8a48039]
  42adb3:	xor    eax,0x148a18e8
  42adb8:	fist   DWORD PTR [eax-0x9]
  42adbb:	test   BYTE PTR [eax],dl
  42adbd:	div    BYTE PTR [edi]
  42adbf:	xor    al,0xe8
  42adc1:	sbb    BYTE PTR [edx-0x73ce6cd4],al
  42adc7:	jp     0x42adf8
  42adc9:	dec    ebx
  42adca:	test   eax,0x9bd6e838
  42adcf:	xor    al,0xe8
  42add1:	add    ebp,DWORD PTR [eax+esi*4]
  42add4:	add    BYTE PTR [edi-0x53fecbc5],al
  42adda:	push   ebp
  42addb:	xor    al,0x1
  42addd:	jmp    0x8a7e62f5
  42ade2:	add    BYTE PTR [eax],al
  42ade4:	xor    esi,DWORD PTR [ecx+eax*1]
  42ade7:	(bad)  [ecx]
  42ade9:	sbb    DWORD PTR [ecx+ebp*8+0x6d0a3434],esp
  42adf0:	push   eax
  42adf1:	xor    al,0x1
  42adf3:	jmp    0xe9434279
  42adf8:	xor    al,0x61
  42adfa:	retf   
  42adfb:	(bad)  
  42adfc:	shl    BYTE PTR [ebx],0x67
  42adff:	call   0x93540f23
  42ae04:	xor    al,0x6b
  42ae06:	cli    
  42ae07:	cld    
  42ae08:	adc    BYTE PTR [ebx],ch
  42ae0a:	inc    ecx
  42ae0b:	jmp    0x30481b4
  42ae10:	ds (bad) 
  42ae13:	xor    al,0x80
  42ae15:	mov    ecx,0x2f34e900
  42ae1a:	test   BYTE PTR [esi+0x72f9df2f],ch
  42ae20:	sub    DWORD PTR [edi],0xdb5729f2
  42ae26:	stc    
  42ae27:	jmp    0x42ae5d
  42ae29:	pusha  
  42ae2a:	fwait
  42ae2b:	xchg   ecx,eax
  42ae2c:	adc    al,0xcb
  42ae2e:	add    cl,ch
  42ae30:	push   ebx
  42ae31:	mov    dh,0x7d
  42ae33:	ret    0x602d
  42ae36:	cmp    esp,esi
  42ae38:	mov    esi,0x2faefa6c
  42ae3d:	pop    ebx
  42ae3e:	idiv   al
  42ae40:	sahf   
  42ae41:	mov    BYTE PTR [ebp-0x5e],bh
  42ae44:	or     BYTE PTR [edi+0x1b],ah
  42ae47:	push   0x0
  42ae49:	add    BYTE PTR [ebx+0x41],dl
  42ae4c:	or     ah,BYTE PTR [esi+eax*1-0x22]
  42ae50:	stc    
  42ae51:	add    BYTE PTR [ecx-0x31ff63ff],bh
  42ae57:	ss push es
  42ae59:	test   ebp,ebx
  42ae5b:	cmp    esi,esi
  42ae5d:	inc    DWORD PTR [esi]
  42ae5f:	mov    bh,0xef
  42ae61:	add    dh,cl
  42ae63:	or     eax,0x3c59ff4a
  42ae68:	cmp    al,0xa2
  42ae6a:	sahf   
  42ae6b:	add    DWORD PTR ss:[edi],ecx
  42ae6e:	adc    ecx,DWORD PTR ds:0xdf9fff7
  42ae74:	aaa    
  42ae75:	call   FWORD PTR [ecx+0x3c]
  42ae78:	mov    eax,0x13749ff
  42ae7d:	cmp    eax,0x136bc
  42ae82:	mov    ds:0x8a4582cd,eax
  42ae87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae88:	inc    eax
  42ae89:	and    al,0xf7
  42ae8b:	add    DWORD PTR ss:[ecx],eax
  42ae8e:	pop    esi
  42ae8f:	sub    eax,DWORD PTR [ebp-0x9c3c6c9]
  42ae95:	and    eax,0x101364e
  42ae9a:	push   ecx
  42ae9b:	sbb    eax,0x4673c012
  42aea0:	add    DWORD PTR [eax],eax
  42aea2:	dec    esi
  42aea3:	xor    esi,DWORD PTR [ecx]
  42aea5:	lock dec esi
  42aea7:	ss push es
  42aea9:	mov    bh,0xde
  42aeab:	or     eax,0x3d0c
  42aeb0:	mov    bl,0x30
  42aeb2:	add    DWORD PTR [eax],eax
  42aeb4:	sub    DWORD PTR [ebp+0x41d9ff14],esi
  42aeba:	add    cl,0x80
  42aebd:	mov    bl,0xc0
  42aebf:	setb   BYTE PTR [edi]
  42aec2:	idiv   bh
  42aec4:	fnstcw WORD PTR [edx-0x4af63ece]
  42aeca:	in     eax,0xfe
  42aecc:	aaa    
  42aecd:	ret    0xfb11
  42aed0:	(bad)  
  42aed1:	jmp    0x42aee5
  42aed3:	jne    0x42af04
  42aed5:	inc    ebp
  42aed6:	xchg   esi,eax
  42aed7:	call   0xfb5508a5
  42aedc:	push   0x56
  42aede:	sub    DWORD PTR [edi-0x25],edi
  42aee1:	daa    
  42aee2:	scas   al,BYTE PTR es:[edi]
  42aee3:	push   ecx
  42aee4:	lods   al,BYTE PTR ds:[esi]
  42aee5:	jnp    0x42ae6d
  42aee7:	inc    edx
  42aee8:	daa    
  42aee9:	mov    ds:0xbeface,al
  42aeee:	or     ah,BYTE PTR [edx+0x6e]
  42aef1:	ret    
  42aef2:	hlt    
  42aef3:	add    BYTE PTR [edi],dh
  42aef5:	retf   
  42aef6:	mov    DWORD PTR ds:0x10590a1,esp
  42aefc:	or     edi,esp
  42aefe:	xchg   BYTE PTR [ebp+0x27],al
  42af01:	push   esi
  42af02:	enter  0xac0b,0x19
  42af06:	sub    eax,0x123a7c3f
  42af0b:	jg     0x42aee7
  42af0d:	rcl    BYTE PTR [ebx],cl
  42af0f:	repnz repnz sar cl,cl
  42af13:	jae    0x42af15
  42af15:	add    BYTE PTR [eax],dl
  42af17:	lds    eax,FWORD PTR [ebx+edx*2]
  42af1a:	add    BYTE PTR [esi-0x1a6f17ca],bl
  42af20:	adc    bh,bl
  42af22:	pop    esp
  42af23:	in     eax,dx
  42af24:	xchg   BYTE PTR [eax-0x233d1],al
  42af2a:	scas   al,BYTE PTR es:[edi]
  42af2b:	adc    BYTE PTR [ecx],dl
  42af2d:	aaa    
  42af2e:	clc    
  42af2f:	ja     0x42af31
  42af31:	mov    DWORD PTR [edx-0x77efd911],ebp
  42af37:	fnstsw WORD PTR ds:0x9502e987
  42af3d:	xchg   DWORD PTR [eax],edx
  42af3f:	mov    ds:0x53f7b302,al
  42af44:	shl    ebx,0xac
  42af47:	xor    ebp,DWORD PTR [edx]
  42af49:	hlt    
  42af4a:	mov    cl,0x66
  42af4c:	in     al,dx
  42af4d:	mov    dl,BYTE PTR [edx+0x378b612c]
  42af53:	xor    ebp,eax
  42af55:	add    edi,DWORD PTR [eax+0x6a8ad871]
  42af5b:	inc    esp
  42af5c:	jno    0x42aee9
  42af5e:	cmp    esi,DWORD PTR [ebx]
  42af60:	call   0xdb3baf68
  42af65:	jg     0x42afa4
  42af67:	ss call 0x58b95d70
  42af6d:	sbb    BYTE PTR [edx],0xe4
  42af70:	in     eax,0x8f
  42af72:	xor    al,0x4e
  42af74:	jmp    0x2724e4a3
  42af79:	inc    DWORD PTR [eax]
  42af7b:	add    BYTE PTR [esi+ebp*1],ah
  42af7e:	xchg   ebx,eax
  42af7f:	push   ebx
  42af80:	lods   eax,DWORD PTR ss:[esi]
  42af82:	and    DWORD PTR [ebx],ebp
  42af84:	pop    ebx
  42af85:	lods   al,BYTE PTR ds:[esi]
  42af86:	sub    dl,BYTE PTR [esi]
  42af88:	scas   al,BYTE PTR es:[edi]
  42af89:	jbe    0x42af9f
  42af8b:	adc    BYTE PTR [edx],0xc8
  42af8e:	(bad)  
  42af8f:	(bad)  
  42af90:	xor    al,0x4e
  42af92:	jmp    0x2724e4c1
  42af97:	ret    
  42af98:	in     al,0x2d
  42af9a:	fwait
  42af9b:	push   ebx
  42af9c:	xor    ebp,DWORD PTR [ebp-0x53d8d4d7]
  42afa2:	repnz adc eax,0x820076be
  42afa8:	fcmove st,st(3)
  42afaa:	out    dx,eax
  42afab:	(bad)  
  42afac:	xor    al,0x4e
  42afae:	jmp    0xa720e4db
  42afb3:	hlt    
  42afb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42afb5:	sub    dh,BYTE PTR [ebx]
  42afb7:	push   esp
  42afb8:	and    DWORD PTR [ebx-0x4fdcd34f],ebp
  42afbe:	mov    edx,0x16eb815
  42afc3:	fldenv [ebx]
  42afc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42afc6:	add    al,0xe8
  42afc8:	xor    al,0x34
  42afca:	mov    WORD PTR [ebx+ebx*1],?
  42afcd:	(bad)  [eax+0x13435e9]
  42afd3:	add    edx,DWORD PTR [edi-0x384f1684]
  42afd9:	(bad)  
  42afdb:	jb     0x42b018
  42afdd:	scas   eax,DWORD PTR es:[edi]
  42afde:	inc    ebx
  42afdf:	add    DWORD PTR [eax],0xf2f4b600
  42afe5:	pusha  
  42afe6:	mov    al,ds:0xc2717ddb
  42afeb:	bound  esi,QWORD PTR ds:0xfa8324d3
  42aff1:	hlt    
  42aff2:	or     al,0x27
  42aff4:	inc    ecx
  42aff5:	jmp    0xe943e417
  42affa:	je     0x42b05f
  42affc:	and    eax,0xc1343380
  42b001:	jmp    0x1860b4c5
  42b006:	outs   dx,BYTE PTR ds:[esi]
  42b007:	add    al,0x75
  42b009:	(bad)  
  42b00a:	or     eax,0xb4ed0134
  42b00f:	popa   
  42b010:	adc    DWORD PTR [esi-0x2aabeb5],esi
  42b016:	je     0x42afef
  42b018:	test   BYTE PTR [ecx],ch
  42b01a:	(bad)  
  42b01b:	xor    BYTE PTR [eax-0x750bf54],cl
  42b021:	sub    ah,BYTE PTR fs:[eax+0x2c]
  42b025:	sahf   
  42b026:	sbb    al,0xfc
  42b028:	jge    0x42b018
  42b02a:	sub    ecx,DWORD PTR [eax+eax*2+0x7c1e565d]
  42b031:	aad    0xc0
  42b033:	aas    
  42b034:	addr16 jmp 0x85568a15
  42b03a:	daa    
  42b03b:	pop    ss
  42b03c:	add    DWORD PTR [eax],eax
  42b03e:	test   BYTE PTR [ebx],dh
  42b040:	arpl   WORD PTR [eax],ax
  42b042:	lods   eax,DWORD PTR cs:[esi]
  42b044:	aad    0xe8
  42b046:	add    BYTE PTR [eax],al
  42b048:	pusha  
  42b049:	cmp    dh,dh
  42b04b:	(bad)  
  42b04c:	fst    DWORD PTR [ebp+0x330e01f1]
  42b052:	add    ebx,ebp
  42b054:	sbb    ch,BYTE PTR [ebp+0x1c5bf45b]
  42b05a:	jne    0x42b099
  42b05c:	sbb    eax,0xfa701441
  42b061:	repnz stc 
  42b063:	test   BYTE PTR [esi+0x418515a6],bl
  42b069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b06a:	add    edi,DWORD PTR [ebx]
  42b06c:	mov    cl,0xa6
  42b06e:	push   ebp
  42b070:	mov    esi,DWORD PTR [esi]
  42b072:	(bad)  
  42b073:	jae    0x42b015
  42b075:	test   eax,0x9659fc5b
  42b07a:	icebp  
  42b07b:	add    DWORD PTR [esi-0xa74fece],ecx
  42b081:	or     ecx,DWORD PTR [edi]
  42b083:	adc    ebx,0x9e80002a
  42b089:	xor    dh,BYTE PTR [ebp+0xd]
  42b08c:	je     0x42b0bf
  42b08e:	arpl   WORD PTR [eax],ax
  42b090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b091:	xor    ch,BYTE PTR [edx]
  42b093:	fild   DWORD PTR [esi-0x5e]
  42b096:	clc    
  42b097:	inc    DWORD PTR [ecx+0x56]
  42b09a:	test   BYTE PTR [edi],0xda
  42b09d:	out    dx,eax
  42b09e:	add    BYTE PTR [eax],al
  42b0a0:	dec    esi
  42b0a1:	lods   eax,DWORD PTR ds:[esi]
  42b0a2:	inc    ebx
  42b0a3:	test   al,0xae
  42b0a5:	xchg   DWORD PTR [esi-0x60109bb],edi
  42b0ab:	inc    DWORD PTR [eax]
  42b0ad:	add    BYTE PTR [esi+0x3f],cl
  42b0b0:	adc    al,0x58
  42b0b2:	cmp    dh,dl
  42b0b4:	stc    
  42b0b5:	test   dh,bl
  42b0b7:	xor    DWORD PTR [ebp-0x233c8cb],eax
  42b0bd:	push   DWORD PTR [eax]
  42b0bf:	mov    esi,0x56280faf
  42b0c4:	enter  0xf60b,0xea
  42b0c8:	hlt    
  42b0c9:	push   es
  42b0ca:	out    dx,eax
  42b0cb:	dec    edx
  42b0cc:	nop
  42b0cd:	div    DWORD PTR [esi]
  42b0cf:	and    dh,ah
  42b0d1:	push   edx
  42b0d2:	psubd  mm0,QWORD PTR [edx-0x1a7c0f05]
  42b0d9:	jae    0x42b10e
  42b0db:	push   edx
  42b0dc:	or     ah,bh
  42b0de:	inc    ebx
  42b0df:	push   edx
  42b0e0:	enter  0xc0f,0x8
  42b0e4:	inc    ebp
  42b0e5:	or     ecx,DWORD PTR [eax+0x3b4579b3]
  42b0eb:	repnz enter 0xf6bb,0xae
  42b0f0:	hlt    
  42b0f1:	or     al,BYTE PTR [eax-0x630805f5]
  42b0f7:	retf   0x7d7a
  42b0fa:	aas    
  42b0fb:	dec    edx
  42b0fc:	nop
  42b0fd:	out    dx,eax
  42b0fe:	aaa    
  42b0ff:	(bad)  
  42b100:	dec    DWORD PTR [esi+0x0]
  42b103:	add    esp,DWORD PTR [ebp+0x0]
  42b106:	aaa    
  42b107:	retf   
  42b108:	xchg   ebp,eax
  42b109:	add    BYTE PTR ds:0x25e6fdcb,dh
  42b10f:	sbb    eax,0x7c8
  42b114:	xor    esi,DWORD PTR [edi-0x3cf7b110]
  42b11a:	arpl   WORD PTR [eax],ax
  42b11c:	aaa    
  42b11d:	retf   
  42b11e:	xchg   ebp,eax
  42b11f:	std    
  42b120:	ss retf 
  42b122:	std    
  42b123:	cli    
  42b124:	loop   0x42b158
  42b126:	add    BYTE PTR [ebp-0x61],0xbb
  42b12a:	push   cs
  42b12b:	jne    0x42b178
  42b12d:	push   edx
  42b12e:	inc    edi
  42b12f:	call   0xfb519341
  42b134:	mov    ah,0x34
  42b136:	and    BYTE PTR gs:[edi],dh
  42b139:	pusha  
  42b13a:	jmp    0x3703:0x8b4c85b6
  42b141:	xor    al,0x40
  42b143:	or     ebx,DWORD PTR [ecx]
  42b145:	aad    0xe7
  42b147:	push   ds
  42b148:	inc    ecx
  42b149:	fisub  WORD PTR [esp+edi*8]
  42b14c:	dec    eax
  42b14d:	pusha  
  42b14e:	aad    0xb6
  42b150:	gs dec esp
  42b152:	add    BYTE PTR [ebx],0x37
  42b155:	xor    al,0x10
  42b157:	cld    
  42b158:	repnz aam 0xe7
  42b15b:	adc    ah,BYTE PTR [edx-0x24]
  42b15e:	fs enter 0x8398,0x8b
  42b163:	cwde   
  42b164:	fsubr  QWORD PTR [eax-0x261fe457]
  42b16a:	jp     0x42b17e
  42b16c:	dec    eax
  42b16d:	push   edi
  42b16e:	add    BYTE PTR [ebx],0x4b
  42b171:	es pop ss
  42b173:	mov    ebx,0x3e79050
  42b178:	add    BYTE PTR [eax],al
  42b17a:	aaa    
  42b17b:	dec    esp
  42b17c:	in     al,0x5
  42b17e:	aaa    
  42b17f:	xor    al,0x3f
  42b181:	cmc    
  42b182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b183:	outs   dx,BYTE PTR ds:[esi]
  42b184:	loopne 0x42b179
  42b186:	and    al,0x37
  42b188:	xchg   edi,eax
  42b189:	mov    edx,0x3e78f18
  42b18e:	aaa    
  42b18f:	dec    esp
  42b190:	in     eax,dx
  42b191:	add    eax,0x982b3437
  42b196:	and    BYTE PTR [esi-0x2af8a454],0x94
  42b19d:	cmpxchg ch,ch
  42b1a0:	dec    DWORD PTR [esi+0x69]
  42b1a3:	aam    0xa
  42b1a5:	sbb    edx,esi
  42b1a7:	sub    ebp,ecx
  42b1a9:	xchg   edi,eax
  42b1aa:	xor    eax,DWORD PTR [ecx+0x33a89b93]
  42b1b0:	add    ecx,ebp
  42b1b2:	xor    al,0x4c
  42b1b4:	add    ebx,ebp
  42b1b6:	xor    al,0x34
  42b1b8:	cli    
  42b1b9:	pop    esp
  42b1ba:	inc    ebx
  42b1bb:	rol    DWORD PTR [ebx-0x6f],0xe3
  42b1bf:	into   
  42b1c0:	jae    0x42b197
  42b1c2:	mov    ds:0x2970e8f6,al
  42b1c7:	iret   
  42b1c8:	stc    
  42b1c9:	mov    esi,0xf1013bf8
  42b1ce:	xor    al,0x34
  42b1d0:	jne    0x42b1e0
  42b1d2:	mov    eax,ds:0x7aa92fd3
  42b1d7:	(bad)  
  42b1d8:	call   0xfa126a6c
  42b1dd:	out    dx,al
  42b1de:	add    BYTE PTR [eax],al
  42b1e0:	pop    DWORD PTR [ecx-0xb8019eb]
  42b1e6:	dec    ebp
  42b1e7:	test   al,0x14
  42b1e9:	and    al,0x6
  42b1eb:	mov    cl,0x84
  42b1ed:	pop    ebx
  42b1ee:	pop    es
  42b1ef:	jmp    0x42b225
  42b1f1:	xor    al,0xfa
  42b1f3:	cld    
  42b1f4:	xor    bh,cl
  42b1f6:	adc    esi,ebp
  42b1f8:	rcl    BYTE PTR [ebx],0x1
  42b1fb:	(bad)  
  42b1fc:	out    0x6a,al
  42b1fe:	enter  0xa32b,0xd3
  42b202:	repz in al,dx
  42b204:	pushf  
  42b205:	add    DWORD PTR [esi],edi
  42b207:	jmp    0x5160fa3c
  42b20c:	pop    ss
  42b20d:	lods   al,BYTE PTR ds:[esi]
  42b20e:	stc    
  42b20f:	ds mov edi,0x3d374f4
  42b215:	inc    ecx
  42b216:	mov    DWORD PTR [ecx],ebx
  42b218:	jb     0x42b1ed
  42b21a:	or     bl,BYTE PTR [esi-0x4c]
  42b21d:	cmp    BYTE PTR [eax],al
  42b21f:	jmp    0x60f4f158
  42b224:	cmp    esi,DWORD PTR ds:0xd3f5e901
  42b22a:	adc    BYTE PTR [eax],al
  42b22c:	inc    ebp
  42b22d:	jbe    0x42b1e9
  42b22f:	push   DWORD PTR [ebx-0x39]
  42b232:	adc    al,0x40
  42b234:	dec    esi
  42b235:	sub    eax,0xf91c0804
  42b23a:	stc    
  42b23b:	add    edx,DWORD PTR [edx-0x49851e00]
  42b241:	and    esi,esi
  42b243:	test   BYTE PTR [eax],al
  42b245:	add    dh,cl
  42b247:	stos   BYTE PTR es:[edi],al
  42b248:	mov    edx,DWORD PTR es:[edx-0x24]
  42b24c:	std    
  42b24d:	test   dh,bl
  42b24f:	stos   BYTE PTR es:[edi],al
  42b250:	sbb    cl,BYTE PTR [ebx+0x43d14f1b]
  42b256:	push   cs
  42b257:	push   eax
  42b258:	mov    BYTE PTR [eax],al
  42b25a:	getsec 
  42b25c:	add    DWORD PTR [ecx-0x77f3b01a],ecx
  42b262:	scas   al,BYTE PTR es:[edi]
  42b263:	idiv   ecx
  42b265:	mov    dl,BYTE PTR [edi+0x3b]
  42b268:	add    BYTE PTR [eax],al
  42b26a:	into   
  42b26b:	dec    ebp
  42b26c:	dec    ecx
  42b26d:	add    al,0x8d
  42b26f:	jbe    0x42b2b2
  42b271:	ret    0x36d2
  42b274:	sub    al,al
  42b276:	mov    ch,0x3d
  42b278:	mul    BYTE PTR ds:0x39cb4e
  42b27e:	adc    BYTE PTR [edx],bh
  42b280:	or     edx,edx
  42b282:	fnsave [esi]
  42b284:	add    eax,0x2a303874
  42b289:	cwde   
  42b28a:	jmp    0xd30337b2
  42b28f:	fldenv [eax-0x607d178]
  42b295:	mov    bl,dl
  42b297:	(bad)  
  42b299:	mov    BYTE PTR [esi],dl
  42b29b:	aaa    
  42b29c:	add    BYTE PTR [eax],al
  42b29e:	pop    esi
  42b29f:	dec    edi
  42b2a0:	inc    ebp
  42b2a1:	and    al,0x66
  42b2a3:	dec    edi
  42b2a4:	or     al,0x88
  42b2a6:	aaa    
  42b2a7:	or     eax,0xffc5
  42b2ac:	scas   eax,DWORD PTR es:[edi]
  42b2ad:	pop    ebx
  42b2ae:	add    al,BYTE PTR [ecx]
  42b2b0:	aaa    
  42b2b1:	fst    st(4)
  42b2b3:	mov    edi,0xfff61ef7
  42b2b8:	inc    ecx
  42b2b9:	inc    DWORD PTR [ebp+0x14]
  42b2bc:	neg    esp
  42b2be:	pop    ss
  42b2bf:	add    eax,0xffbd8d3f
  42b2c4:	xor    al,0xe
  42b2c6:	mov    bl,0x52
  42b2c8:	stos   DWORD PTR es:[edi],eax
  42b2c9:	and    BYTE PTR ds:0xa02c0ef,bl
  42b2cf:	test   bh,dh
  42b2d1:	psrlw  mm0,QWORD PTR [esi+0x2ef5376b]
  42b2d8:	or     edi,eax
  42b2da:	sub    esi,DWORD PTR [ebp+0x22]
  42b2dd:	sub    DWORD PTR [ebx+0x4af62451],esi
  42b2e3:	js     0x42b2ec
  42b2e5:	pop    ds
  42b2e6:	add    eax,0x9b230e8
  42b2eb:	sti    
  42b2ec:	js     0x42b30f
  42b2ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b2ef:	mov    ebp,0x150adb3b
  42b2f4:	dec    edi
  42b2f5:	in     al,dx
  42b2f6:	mov    ebp,0x762e6aff
  42b2fb:	clc    
  42b2fc:	mov    eax,0xf70f61e8
  42b301:	fcmovb st,st(6)
  42b303:	mul    DWORD PTR [edx]
  42b305:	fdiv   DWORD PTR [ebx+0x32760851]
  42b30b:	das    
  42b30c:	ja     0x42b384
  42b30e:	xor    BYTE PTR [ebx+0x0],bl
  42b311:	add    cl,dh
  42b313:	xchg   ebp,eax
  42b314:	or     ah,BYTE PTR ds:0xffbde7a7
  42b31a:	mov    ah,al
  42b31c:	cmc    
  42b31d:	int    0xf4
  42b31f:	fiadd  DWORD PTR [ecx]
  42b321:	je     0x42b319
  42b323:	xor    edx,DWORD PTR [eax]
  42b325:	jo     0x42b2eb
  42b327:	rcr    DWORD PTR [edx],1
  42b329:	mov    BYTE PTR [edi+0x48],dh
  42b32c:	ror    BYTE PTR [esi],1
  42b32e:	inc    edx
  42b32f:	dec    esp
  42b330:	stc    
  42b331:	ret    
  42b332:	push   eax
  42b333:	mov    esi,0x75677bf4
  42b338:	call   0xe9836b09
  42b33d:	add    esi,DWORD PTR [edi]
  42b33f:	inc    edi
  42b340:	shl    DWORD PTR [edx-0x4c57fa7a],1
  42b346:	js     0x42b3ac
  42b348:	pop    ss
  42b349:	sub    ebx,ebp
  42b34b:	dec    ebx
  42b34c:	mov    eax,0x7dd918c2
  42b351:	adc    eax,0x43f6d10c
  42b356:	ins    DWORD PTR es:[edi],dx
  42b357:	je     0x42b378
  42b359:	inc    ebx
  42b35a:	cdq    
  42b35b:	aaa    
  42b35c:	mov    bl,0xf8
  42b35e:	jo     0x42b383
  42b360:	sub    BYTE PTR [eax+eiz*1],al
  42b363:	hlt    
  42b364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b365:	push   cs
  42b366:	adc    bl,BYTE PTR [eax]
  42b368:	cmc    
  42b369:	ret    
  42b36a:	loopne 0x42b332
  42b36c:	in     al,dx
  42b36d:	sti    
  42b36e:	jmp    0x2f48:0x6507e874
  42b375:	sbb    al,0x0
  42b377:	add    BYTE PTR [eax-0x57],dh
  42b37a:	jp     0x42b38a
  42b37c:	mov    ebx,0xbdc1fbf3
  42b381:	es lock hlt 
  42b384:	jo     0x42b3ba
  42b386:	outs   dx,DWORD PTR ds:[esi]
  42b387:	add    BYTE PTR [edi+0x5e03a6e3],bh
  42b38d:	mov    bl,0xe3
  42b38f:	add    al,0x37
  42b391:	xor    al,0xd5
  42b393:	in     eax,0xb9
  42b395:	sub    bh,0x4
  42b398:	aaa    
  42b399:	xor    al,0x65
  42b39b:	adc    eax,0x9f01140b
  42b3a0:	sub    DWORD PTR [edi],esp
  42b3a2:	jno    0x42b379
  42b3a4:	je     0x42b376
  42b3a6:	test   BYTE PTR [ecx],ch
  42b3a8:	iret   
  42b3a9:	daa    
  42b3aa:	dec    esi
  42b3ab:	mov    ecx,0x322e80a4
  42b3b0:	jmp    0x41dc:0x34aad14b
  42b3b7:	(bad)  
  42b3b8:	cmp    cl,ch
  42b3ba:	push   ebp
  42b3bb:	mov    edx,0x62be6df4
  42b3c0:	repnz ins DWORD PTR es:[edi],dx
  42b3c2:	mov    esi,0xad19418f
  42b3c7:	std    
  42b3c8:	hlt    
  42b3c9:	iret   
  42b3ca:	jle    0x42b429
  42b3cc:	sysenter 
  42b3ce:	add    DWORD PTR [ebp-0x14],ebx
  42b3d1:	dec    esi
  42b3d2:	jge    0x42b3d9
  42b3d4:	aas    
  42b3d5:	retf   
  42b3d6:	je     0x42b3d3
  42b3d8:	mov    cl,0xc2
  42b3da:	je     0x42b3eb
  42b3dc:	add    BYTE PTR [eax],al
  42b3de:	sub    DWORD PTR [ecx],edi
  42b3e0:	or     DWORD PTR [ebx+0x34fdcff6],ebx
  42b3e6:	fcom   st(7)
  42b3e8:	fidivr DWORD PTR [edi+0x3a]
  42b3eb:	retf   
  42b3ec:	test   BYTE PTR [ecx+0x61a02bbf],ch
  42b3f2:	and    ecx,DWORD PTR [edi]
  42b3f4:	add    DWORD PTR [edx-0x45],esp
  42b3f7:	xor    al,0x0
  42b3f9:	jmp    0xd5857132
  42b3fe:	push   ebp
  42b3ff:	mov    esp,0xb7332ad0
  42b404:	and    ch,0x35
  42b407:	xor    al,0x1
  42b409:	jo     0x42b47c
  42b40b:	daa    
  42b40c:	mov    edi,0x866234e5
  42b411:	fst    QWORD PTR [eax-0x50b1adc9]
  42b417:	adc    ebx,DWORD PTR [ecx]
  42b419:	add    cl,dh
  42b41b:	stos   DWORD PTR es:[edi],eax
  42b41c:	sbb    eax,0x1dac4118
  42b421:	sbb    BYTE PTR [eax-0x721febc0],bl
  42b427:	repz stc 
  42b429:	mov    dl,BYTE PTR [esi]
  42b42b:	mov    ecx,esp
  42b42d:	pushf  
  42b42e:	inc    ecx
  42b42f:	inc    ecx
  42b430:	test   BYTE PTR [ebx-0x3da85ef7],0x4e
  42b437:	xor    ecx,DWORD PTR [edi-0x75]
  42b43a:	retf   0x1d6
  42b43d:	push   edi
  42b43e:	inc    ecx
  42b43f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b440:	sbb    eax,0x41000018
  42b445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b446:	sbb    eax,0x1da72118
  42b44b:	sbb    BYTE PTR [eax+0x41],ch
  42b44e:	adc    al,0xd8
  42b450:	sbb    eax,0x68af9f3
  42b455:	mov    cl,ah
  42b457:	je     0x42b45a
  42b459:	inc    eax
  42b45a:	test   BYTE PTR [ebx-0x3da86027],0xde
  42b461:	xor    dl,BYTE PTR [ebx+ecx*4-0xe]
  42b465:	mov    BYTE PTR [edx-0x978298b],al
  42b46b:	jne    0x42b4a3
  42b46d:	inc    ecx
  42b46e:	je     0x42b484
  42b470:	shl    DWORD PTR [ebp+0x343bff09],0x4f
  42b477:	dec    ebx
  42b479:	jb     0x42b490
  42b47b:	inc    eax
  42b47c:	fimul  WORD PTR [ebx-0x7]
  42b47f:	push   edi
  42b480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b481:	mov    esi,?
  42b483:	inc    DWORD PTR [ecx+0x4c]
  42b486:	mov    esi,0xbb9f405f
  42b48b:	adc    al,0x9e
  42b48d:	test   DWORD PTR [edx+0x744be8ec],eax
  42b493:	or     BYTE PTR [edi],dh
  42b495:	mov    cs,WORD PTR [esi*2+0x13937e2f]
  42b49c:	mov    BYTE PTR [edi-0x1ef50513],cl
  42b4a2:	mov    bl,0xfa
  42b4a4:	and    dl,BYTE PTR ds:0x3ff2
  42b4aa:	aaa    
  42b4ab:	push   edx
  42b4ac:	push   es
  42b4ad:	push   ebx
  42b4ae:	pop    edi
  42b4af:	xor    eax,0x4160fb0c
  42b4b4:	inc    ebp
  42b4b5:	pop    ebx
  42b4b6:	stc    
  42b4b7:	xchg   DWORD PTR [edi],edi
  42b4b9:	adc    al,0x37
  42b4bb:	xchg   DWORD PTR [eax+0x74],edi
  42b4be:	adc    eax,ebp
  42b4c0:	mov    ah,0x86
  42b4c2:	cmp    eax,0xac0bae41
  42b4c7:	lock dec edi
  42b4c9:	xchg   DWORD PTR [edi-0x4311ff4d],esp
  42b4cf:	or     ebx,DWORD PTR [ecx+0xb130626]
  42b4d5:	jp     0x42b50a
  42b4d7:	sub    al,BYTE PTR [ebp-0x19]
  42b4da:	pop    ebp
  42b4db:	in     eax,0xc0
  42b4dd:	and    esp,DWORD PTR [edi]
  42b4df:	fdiv   QWORD PTR [edx+0x6584573]
  42b4e5:	jp     0x42b504
  42b4e7:	push   edx
  42b4e8:	lds    ebp,FWORD PTR [edi]
  42b4ea:	sbb    al,0x8c
  42b4ec:	cmc    
  42b4ed:	mov    cl,0x4e
  42b4ef:	(bad)  
  42b4f0:	dec    edi
  42b4f1:	adc    al,0x31
  42b4f3:	inc    ecx
  42b4f4:	jmp    0xcd5f1ef7
  42b4f9:	sbb    esi,DWORD PTR ds:0xc884e728
  42b4ff:	sbb    ch,BYTE PTR ss:[edi]
  42b502:	neg    DWORD PTR [ebx]
  42b504:	stos   BYTE PTR es:[edi],al
  42b505:	pop    edx
  42b506:	pop    ecx
  42b507:	cdq    
  42b508:	cld    
  42b509:	(bad)  
  42b50a:	mov    esi,0x27bec
  42b50f:	add    al,bh
  42b511:	xor    ebp,DWORD PTR [ecx-0x2b0d953f]
  42b517:	add    DWORD PTR [edx-0x67eb2d33],esi
  42b51d:	(bad)  
  42b51e:	push   ss
  42b51f:	inc    esp
  42b520:	nop
  42b521:	xlat   BYTE PTR ds:[ebx]
  42b522:	pushf  
  42b523:	jle    0x42b4b8
  42b525:	mov    bl,0x4b
  42b527:	lock aaa 
  42b529:	xor    al,0xe8
  42b52b:	mov    dh,0x6
  42b52d:	mov    ecx,0xb905efb4
  42b532:	sbb    eax,0xcbdb7e7f
  42b537:	jmp    0x914:0xc15ecd58
  42b53e:	mov    ds:0xbbb13dfb,al
  42b543:	jmp    0x3218:0xc0f1cd40
  42b54a:	pop    edi
  42b54b:	ror    DWORD PTR [eax-0x45],0xa4
  42b54f:	sbb    esp,DWORD PTR [ebx+0x3cc06f3d]
  42b555:	mov    ebx,0x76aa3c24
  42b55a:	mov    al,ds:0x6100727c
  42b55f:	shr    BYTE PTR [edx+edi*4],0xf2
  42b563:	xchg   BYTE PTR [edx-0x6d79183c],bl
  42b569:	loopne 0x42b552
  42b56b:	cli    
  42b56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b56d:	repnz pusha 
  42b56f:	shr    ah,0xb0
  42b572:	lahf   
  42b573:	xchg   ecx,eax
  42b574:	add    BYTE PTR [eax],al
  42b576:	sub    eax,0xd8dc4cb5
  42b57b:	int3   
  42b57c:	loop   0x42b5cf
  42b57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b57f:	xchg   ebx,eax
  42b580:	cmp    al,ch
  42b582:	enter  0xcbcd,0x70
  42b586:	aas    
  42b587:	sahf   
  42b588:	and    eax,0x862c04
  42b58d:	cmp    bh,BYTE PTR cs:[ecx]
  42b590:	mov    bl,0x1e
  42b592:	xor    ebx,esi
  42b594:	loopne 0x42b587
  42b596:	mov    eax,ds:0x31de80f3
  42b59b:	jge    0x42b525
  42b59d:	lods   al,BYTE PTR ds:[esi]
  42b59e:	mov    al,ds:0x34748439
  42b5a3:	xor    al,0x1
  42b5a5:	push   0x6f
  42b5a7:	enter  0xaad2,0x34
  42b5ab:	xor    al,0xa
  42b5ad:	ins    DWORD PTR es:[edi],dx
  42b5ae:	mov    bh,0x33
  42b5b0:	add    ecx,ebp
  42b5b2:	ins    DWORD PTR es:[edi],dx
  42b5b3:	add    BYTE PTR [ecx-0x13],0xe1
  42b5b7:	jns    0x42b626
  42b5b9:	jo     0x42b632
  42b5bb:	test   al,0x85
  42b5bd:	scas   eax,DWORD PTR es:[edi]
  42b5be:	dec    eax
  42b5bf:	mov    ebx,0x71c94943
  42b5c4:	imul   edx,edx,0x514bbafc
  42b5ca:	mov    ecx,0x6cc2097e
  42b5cf:	mov    ebp,0x79ab4543
  42b5d4:	lods   eax,DWORD PTR ds:[esi]
  42b5d5:	jb     0x42b639
  42b5d7:	adc    ecx,ecx
  42b5d9:	out    dx,al
  42b5da:	add    BYTE PTR [eax],al
  42b5dc:	xchg   BYTE PTR [edi+0x4],dh
  42b5df:	test   al,0x5b
  42b5e1:	cmp    al,0x88
  42b5e3:	sbb    al,0x63
  42b5e5:	aas    
  42b5e6:	mov    bl,0x36
  42b5e8:	xor    eax,0x66eec033
  42b5ed:	jg     0x42b5f8
  42b5ef:	pusha  
  42b5f0:	mov    al,0x8b
  42b5f2:	or     DWORD PTR [edi-0xa],esi
  42b5f5:	ror    BYTE PTR ss:[ecx+0x70c032e3],0x98
  42b5fd:	test   DWORD PTR [ebp+0x25accb2c],0x87cc04ab
  42b607:	add    BYTE PTR [ebx],dl
  42b609:	add    BYTE PTR fs:[esi+0x13052],0x17
  42b611:	mov    esi,DWORD PTR [ecx+0x158108b]
  42b617:	add    BYTE PTR [esi+0x51984c42],cl
  42b61d:	mov    edx,DWORD PTR [ecx+0x1379e01]
  42b623:	mov    ebx,edx
  42b625:	jae    0x42b61d
  42b627:	adc    eax,0x3a05fa
  42b62c:	adc    esi,DWORD PTR [eax+0x6]
  42b62f:	(bad)  
  42b630:	or     ecx,edx
  42b632:	stc    
  42b633:	dec    DWORD PTR [ecx+0x4e28ef4f]
  42b639:	aaa    
  42b63a:	jp     0x42b603
  42b63c:	push   eax
  42b63d:	inc    edx
  42b63e:	dec    esi
  42b63f:	add    eax,DWORD PTR [eax]
  42b641:	add    BYTE PTR [ecx+0x65],bl
  42b644:	add    ecx,DWORD PTR [ecx-0x685d855]
  42b64a:	mov    al,0xcc
  42b64c:	jge    0x42b637
  42b64e:	dec    edi
  42b64f:	aaa    
  42b650:	add    DWORD PTR [ebx-0x7bf96bd9],eax
  42b656:	ds aaa 
  42b658:	add    DWORD PTR [eax],eax
  42b65a:	lea    edi,[esi]
  42b65c:	gs je  0x42b6d4
  42b65f:	mov    cl,0xf7
  42b661:	gs jb  0x42b5ea
  42b664:	jp     0x42b65f
  42b666:	jbe    0x42b623
  42b668:	or     eax,0xf4800f
  42b66d:	jo     0xff03b1ff
  42b673:	into   
  42b674:	add    al,cl
  42b676:	fnstsw WORD PTR [esi]
  42b678:	call   0x17985ff
  42b67d:	mov    edx,DWORD PTR [ebx]
  42b67f:	aam    0x39
  42b681:	push   eax
  42b682:	aaa    
  42b683:	aaa    
  42b684:	(bad)  
  42b685:	gs aaa 
  42b687:	mov    edx,0x85ac178a
  42b68c:	scas   eax,DWORD PTR es:[edi]
  42b68d:	cli    
  42b68e:	inc    edx
  42b68f:	in     eax,dx
  42b690:	or     BYTE PTR [ebp+0x43],dh
  42b693:	inc    edx
  42b694:	mov    eax,DWORD PTR [edi]
  42b696:	lahf   
  42b697:	ins    BYTE PTR es:[edi],dx
  42b698:	or     bl,bh
  42b69a:	mov    al,ds:0x2801065d
  42b69f:	push   ecx
  42b6a0:	pusha  
  42b6a1:	sbb    al,0x37
  42b6a3:	fnstsw WORD PTR [edx-0x40]
  42b6a6:	add    BYTE PTR [eax],al
  42b6a8:	add    edx,esi
  42b6aa:	ret    0x8319
  42b6ad:	jno    0x42b6b8
  42b6af:	or     esi,DWORD PTR [edx+0x70ffd65c]
  42b6b5:	fld    QWORD PTR [edx-0x170a1ed]
  42b6bb:	push   DWORD PTR [edi]
  42b6bd:	ret    0x434f
  42b6c0:	xor    ebx,edx
  42b6c2:	dec    edi
  42b6c3:	push   ebx
  42b6c4:	cmp    bl,BYTE PTR [esi+ebx*1]
  42b6c7:	or     BYTE PTR [edi+ebx*1],bh
  42b6ca:	add    eax,0xed97fcc0
  42b6cf:	jl     0x42b6fb
  42b6d1:	inc    esi
  42b6d2:	mov    al,0xb
  42b6d4:	mov    ah,0x7f
  42b6d6:	add    DWORD PTR [eax],0x38
  42b6d9:	push   0xdc20fe69
  42b6de:	jle    0x42b745
  42b6e0:	and    ebx,esp
  42b6e2:	jle    0x42b6dd
  42b6e4:	call   0xfddb:0x37fe80d2
  42b6eb:	xchg   BYTE PTR [ecx+0x23],dh
  42b6ee:	jle    0x42b755
  42b6f0:	and    ebx,ebx
  42b6f2:	xor    al,0xf8
  42b6f4:	mov    ah,0x1
  42b6f6:	in     eax,0xff
  42b6f8:	mov    edi,0x72891510
  42b6fd:	xor    al,0x94
  42b6ff:	xchg   BYTE PTR [edx],bh
  42b701:	cmp    DWORD PTR [edx+0x5],edx
  42b704:	cmp    al,0x82
  42b706:	cmp    BYTE PTR ds:0xfadfd4f6,al
  42b70c:	add    BYTE PTR [eax],al
  42b70e:	or     BYTE PTR ds:0x2343142d,0xe7
  42b715:	mov    ch,0x54
  42b717:	leave  
  42b718:	sub    al,0xf0
  42b71a:	mov    cl,0x6f
  42b71c:	aam    0x7c
  42b71e:	repnz xlat BYTE PTR ds:[ebx]
  42b720:	push   ds
  42b721:	mov    esi,0x7b3a4838
  42b726:	cli    
  42b727:	pop    ds
  42b728:	movsx  ebp,BYTE PTR [eax]
  42b72b:	cmp    DWORD PTR [ebp+0x47],ebx
  42b72e:	aaa    
  42b72f:	xor    al,0xe8
  42b731:	jp     0x42b725
  42b733:	xlat   BYTE PTR ds:[ebx]
  42b734:	jo     0x42b6f7
  42b736:	pusha  
  42b737:	or     eax,0x77e6dbaa
  42b73c:	pop    edi
  42b73d:	rcl    DWORD PTR [eax+0x1d],0xaa
  42b741:	fild   QWORD PTR [edi+0x7783186f]
  42b747:	ss mov eax,0x66d7f27a
  42b74d:	inc    esp
  42b74e:	inc    ecx
  42b74f:	jns    0x42b754
  42b751:	icebp  
  42b752:	add    BYTE PTR [edx],ah
  42b754:	test   al,0x3
  42b756:	mov    gs,WORD PTR [ebx+0x6d]
  42b759:	inc    esp
  42b75a:	mov    ds:0x10b95f18,al
  42b75f:	cmp    DWORD PTR [edx+0x38822c04],ebx
  42b765:	add    eax,0xfadfd3f6
  42b76a:	retf   0xa834
  42b76d:	retf   0x247b
  42b770:	inc    ebp
  42b771:	stc    
  42b772:	add    BYTE PTR [eax],al
  42b774:	mov    cl,0x61
  42b776:	in     al,dx
  42b777:	xor    BYTE PTR [ebx],0xb6
  42b77a:	add    cl,ch
  42b77c:	loope  0x42b735
  42b77e:	(bad)  
  42b77f:	jmp    0x3447:0xc7e3434
  42b786:	ss das 
  42b788:	repz inc ebp
  42b78a:	mov    ch,0x62
  42b78c:	neg    esp
  42b78e:	stc    
  42b78f:	and    al,0xc7
  42b791:	mov    ebx,0x6f3d7943
  42b796:	adc    eax,0x7c28f2c2
  42b79b:	push   ds
  42b79c:	sub    al,0x6f
  42b79e:	in     eax,dx
  42b79f:	push   0xfffffff4
  42b7a1:	leave  
  42b7a2:	mov    BYTE PTR [eax+eax*2+0x355943b1],ch
  42b7a9:	jbe    0x42b7d0
  42b7ab:	pusha  
  42b7ac:	ja     0x42b786
  42b7ae:	jge    0x42b7d9
  42b7b0:	ss fs cli 
  42b7b3:	mov    esp,0x113cd20
  42b7b8:	popa   
  42b7b9:	or     BYTE PTR [ecx],al
  42b7bb:	nop
  42b7bc:	fwait
  42b7bd:	scas   eax,DWORD PTR es:[edi]
  42b7be:	shl    BYTE PTR [esi+eax*4+0x61194bb1],0x82
  42b7c6:	(bad)  
  42b7c7:	in     eax,dx
  42b7c8:	add    bh,BYTE PTR [ebx+0x0]
  42b7cb:	sub    BYTE PTR [esp+edi*1],dl
  42b7ce:	push   es
  42b7cf:	sub    BYTE PTR ds:0x44ac35f4,dh
  42b7d5:	inc    edi
  42b7d6:	or     al,0x72
  42b7d8:	add    BYTE PTR [eax],al
  42b7da:	jmp    0xa34:0xb3b57e3b
  42b7e1:	pop    esp
  42b7e2:	cdq    
  42b7e3:	xor    eax,0x51b7e901
  42b7e8:	cmc    
  42b7e9:	jmp    0x62582929
  42b7ee:	enter  0x3623,0x27
  42b7f2:	sbb    ecx,DWORD PTR [edi+ebp*4+0x0]
  42b7f6:	add    DWORD PTR [edx+0x3e],edi
  42b7f9:	add    ecx,esp
  42b7fb:	jns    0x42b843
  42b7fd:	add    bl,BYTE PTR [edi-0x70f4f6f0]
  42b803:	xor    eax,0x241383f9
  42b808:	add    DWORD PTR [ebp-0x39],esi
  42b80b:	mov    bl,0x35
  42b80d:	push   esp
  42b80e:	rol    DWORD PTR [esi+0x53],1
  42b811:	add    ecx,esi
  42b813:	xor    edi,DWORD PTR [edx-0x39]
  42b816:	int    0xb4
  42b818:	jnp    0x42b816
  42b81a:	cmp    eax,0x825584c1
  42b81f:	xor    eax,DWORD PTR [ecx]
  42b821:	mov    ebx,DWORD PTR [ebx-0x2c]
  42b824:	cmp    DWORD PTR [eax-0x7c],edx
  42b827:	xor    eax,0x4c9275f6
  42b82c:	into   
  42b82d:	jmp    FWORD PTR [ebx-0x25]
  42b830:	dec    edi
  42b831:	jmp    FWORD PTR [ebx-0x3d]
  42b834:	or     bl,0xf1
  42b837:	mov    dh,0x5
  42b839:	jmp    FWORD PTR [ebx+0xf5e1cb]
  42b83f:	add    BYTE PTR [edx],ah
  42b841:	xor    esi,esi
  42b843:	jmp    0x3c9e6e
  42b848:	in     eax,0x55
  42b84a:	xchg   ebp,eax
  42b84b:	add    BYTE PTR [esi+0x33],bl
  42b84e:	test   dl,dl
  42b850:	push   ecx
  42b851:	inc    edi
  42b852:	and    dh,bh
  42b854:	xor    DWORD PTR [ecx],esi
  42b856:	push   es
  42b857:	mov    dh,0x89
  42b859:	mov    DWORD PTR [esi],0xc0c5e1b6
  42b85f:	loopne 0x42b877
  42b861:	int3   
  42b862:	ror    BYTE PTR [ecx-0xc3c525],0x11
  42b869:	xor    eax,DWORD PTR [ecx]
  42b86b:	setp   al
  42b86e:	add    BYTE PTR [eax],al
  42b870:	aaa    
  42b871:	(bad)  
  42b873:	cmp    eax,0xa79e63b
  42b878:	ss (bad) 
  42b87b:	jle    0x42b8d7
  42b87d:	cmp    ebp,0x9c8d6a7e
  42b883:	or     bh,BYTE PTR [edx-0x2704fbf4]
  42b889:	inc    ecx
  42b88a:	mov    esp,0xf12fb427
  42b88f:	push   DWORD PTR [ebp-0x50001ae2]
  42b895:	nop    DWORD PTR [edx+0x15]
  42b899:	mov    esi,0xff40084b
  42b89e:	lods   eax,DWORD PTR ds:[esi]
  42b89f:	add    BYTE PTR [esi-0x45],dh
  42b8a2:	cmc    
  42b8a3:	push   es
  42b8a4:	add    BYTE PTR [eax],al
  42b8a6:	ins    DWORD PTR es:[edi],dx
  42b8a7:	xor    DWORD PTR [edx+0xcc23f7],0xbb665b42
  42b8b1:	adc    edi,DWORD PTR [edi+ecx*4+0x8fa88e9]
  42b8b8:	leave  
  42b8b9:	dec    ecx
  42b8ba:	push   edi
  42b8bb:	icebp  
  42b8bc:	and    eax,DWORD PTR [edi+0x41c8e0fa]
  42b8c2:	pop    ss
  42b8c3:	into   
  42b8c4:	jb     0x42b8f4
  42b8c6:	pusha  
  42b8c7:	adc    eax,0x20f28705
  42b8cc:	ja     0x42b913
  42b8ce:	inc    edi
  42b8cf:	sar    DWORD PTR [ebx+0x7895c127],1
  42b8d5:	inc    ebp
  42b8d6:	inc    edi
  42b8d7:	icebp  
  42b8d8:	mov    ebx,0xd97ae23
  42b8dd:	jg     0x42b8d6
  42b8df:	fldcw  WORD PTR [ebp-0x7ed08d7a]
  42b8e5:	shl    BYTE PTR ds:0x5f1504ab,0x34
  42b8ec:	cli    
  42b8ed:	inc    ebx
  42b8ee:	aaa    
  42b8ef:	imul   eax,DWORD PTR [ecx-0x77],0xffffffc8
  42b8f3:	aas    
  42b8f4:	or     ecx,DWORD PTR [edi-0x46253b8d]
  42b8fa:	daa    
  42b8fb:	xor    eax,0xf336457a
  42b900:	lds    ecx,FWORD PTR [eax+esi*1]
  42b903:	repnz pop esi
  42b905:	call   0x0:0x3e834c4
  42b90c:	adc    BYTE PTR [edx-0x14],dh
  42b90f:	cli    
  42b910:	call   0xbe87613e
  42b915:	outs   dx,DWORD PTR ds:[esi]
  42b916:	pushf  
  42b917:	jns    0x42b95c
  42b919:	or     DWORD PTR [edx],ebx
  42b91b:	sub    al,0x44
  42b91d:	mov    ebp,DWORD PTR [esi+0x49]
  42b920:	mov    ds:0xbe1824c5,eax
  42b925:	outs   dx,DWORD PTR ds:[esi]
  42b926:	js     0x42b8b7
  42b928:	sti    
  42b929:	pop    ds
  42b92a:	scas   eax,DWORD PTR es:[edi]
  42b92b:	dec    ecx
  42b92c:	push   edi
  42b92d:	xor    eax,0xc58ecf75
  42b932:	pop    edx
  42b933:	(bad)  
  42b934:	repz xlat BYTE PTR ds:[ebx]
  42b936:	les    ax,DWORD PTR [edx-0x4e105b44]
  42b93d:	outs   dx,DWORD PTR ds:[esi]
  42b93e:	cmp    BYTE PTR [edi],al
  42b940:	cmc    
  42b941:	(bad)  
  42b943:	dec    ecx
  42b944:	addr16 mov cl,0x27
  42b947:	push   es
  42b948:	pop    es
  42b949:	lds    esi,FWORD PTR [edi+ebp*8+0x19e01f5d]
  42b950:	div    DWORD PTR [ebx]
  42b952:	rcr    DWORD PTR [edx+esi*4-0xc],0xe2
  42b957:	mov    BYTE PTR [edx-0x4ffcf53a],ah
  42b95d:	ja     0x42b957
  42b95f:	adc    ah,ch
  42b961:	jb     0x42b94c
  42b963:	adc    ah,ch
  42b965:	cmp    al,BYTE PTR [ecx]
  42b967:	sub    BYTE PTR [edx],bl
  42b969:	sub    eax,0xbaa82806
  42b96e:	xchg   esp,eax
  42b96f:	jmp    0x3476b974
  42b974:	sub    BYTE PTR es:[edi],bh
  42b977:	rcr    eax,0xf2
  42b97a:	hlt    
  42b97b:	add    al,0x88
  42b97d:	and    al,0xff
  42b97f:	aas    
  42b980:	adc    al,dh
  42b982:	jg     0x42b9a4
  42b984:	xchg   BYTE PTR [edi+ecx*2],ah
  42b987:	std    
  42b988:	inc    edx
  42b989:	or     DWORD PTR [edi+0x3539e794],esi
  42b98f:	leave  
  42b990:	stc    
  42b991:	scas   al,BYTE PTR es:[edi]
  42b992:	jg     0x42b954
  42b994:	(bad)  
  42b995:	call   0xeaa9edce
  42b99a:	pop    esp
  42b99b:	fld    TBYTE PTR [edx-0x71]
  42b99e:	xor    eax,0xfd3f09c9
  42b9a3:	xor    cl,BYTE PTR [edx]
  42b9a5:	aaa    
  42b9a6:	add    eax,0x2c89c0c6
  42b9ab:	sub    eax,0x34405cc0
  42b9b0:	mov    BYTE PTR [esp+eax*4+0x346582bb],bh
  42b9b7:	xor    al,0x1
  42b9b9:	adc    bl,ch
  42b9bb:	pop    ds
  42b9bc:	jge    0x42b99b
  42b9be:	ins    DWORD PTR es:[edi],dx
  42b9bf:	jb     0x42b9fa
  42b9c1:	call   0x5043edfa
  42b9c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9c7:	xor    eax,DWORD PTR [ecx]
  42b9c9:	jmp    0x2850347f
  42b9ce:	push   edx
  42b9cf:	(bad)  
  42b9d0:	mov    BYTE PTR [eax+ebp*1+0xf952ad],bh
  42b9d7:	add    BYTE PTR [ecx],bl
  42b9d9:	in     al,0x85
  42b9db:	std    
  42b9dc:	stos   DWORD PTR es:[edi],eax
  42b9dd:	lods   eax,DWORD PTR ds:[esi]
  42b9de:	inc    ebx
  42b9df:	cmc    
  42b9e0:	stos   DWORD PTR es:[edi],eax
  42b9e1:	and    BYTE PTR [ecx],cl
  42b9e3:	add    BYTE PTR [ebp+0x658b0d5d],ah
  42b9e9:	adc    al,BYTE PTR [edi+0x68]
  42b9ec:	xchg   edi,eax
  42b9ed:	jae    0x42ba00
  42b9ef:	add    al,0x95
  42b9f1:	ins    BYTE PTR es:[edi],dx
  42b9f2:	icebp  
  42b9f3:	cmp    DWORD PTR [ebx+0x28],esp
  42b9f6:	push   es
  42b9f7:	(bad)  
  42b9f8:	sahf   
  42b9f9:	aaa    
  42b9fa:	add    DWORD PTR [eax],eax
  42b9fc:	(bad)  
  42b9fd:	clc    
  42b9fe:	sti    
  42b9ff:	mov    BYTE PTR [ebx+0x28],dl
  42ba02:	call   0x17a997c
  42ba07:	mov    ebp,DWORD PTR [eax-0x64]
  42ba0a:	stc    
  42ba0b:	dec    esi
  42ba0d:	or     al,cl
  42ba0f:	cmp    esp,DWORD PTR [edi+0x3be78525]
  42ba15:	cmp    BYTE PTR [ecx],al
  42ba17:	cmp    DWORD PTR [ecx],ebx
  42ba19:	sub    al,0x6
  42ba1b:	test   DWORD PTR [eax+0x55000123],ecx
  42ba21:	and    eax,0x38128e88
  42ba26:	add    DWORD PTR [eax],eax
  42ba28:	and    eax,0xaec1116d
  42ba2d:	cmp    dl,BYTE PTR [ecx-0x1]
  42ba30:	mov    eax,ds:0x8a76f633
  42ba35:	xor    al,0x14
  42ba37:	sub    BYTE PTR [eax+0x8b0177],al
  42ba3d:	add    cl,dl
  42ba3f:	sub    eax,DWORD PTR [edx+0x44ae967f]
  42ba45:	adc    ch,ah
  42ba47:	jp     0x42ba32
  42ba49:	adc    DWORD PTR [edx],0x24
  42ba4c:	mov    BYTE PTR [ebp-0x7a],al
  42ba4f:	into   
  42ba50:	xor    bl,bh
  42ba52:	or     DWORD PTR ds:0x36a1b606,esi
  42ba58:	mov    BYTE PTR [ebp+0x36],al
  42ba5b:	mov    ecx,0x343702be
  42ba60:	and    esi,edi
  42ba62:	cmp    BYTE PTR [edx],dh
  42ba64:	mov    WORD PTR [ebx+ebx*2-0x73],es
  42ba68:	dec    ebp
  42ba69:	data16 aaa 
  42ba6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba6c:	std    
  42ba6d:	cli    
  42ba6e:	stos   BYTE PTR es:[edi],al
  42ba6f:	in     eax,0x8a
  42ba71:	push   edx
  42ba72:	xor    al,0xab
  42ba74:	add    BYTE PTR [ebp+0x27],dh
  42ba77:	inc    esi
  42ba78:	int    0xfa
  42ba7a:	adc    cl,0x0
  42ba7d:	jne    0x42baae
  42ba7f:	cmc    
  42ba80:	(bad)  
  42ba81:	cmc    
  42ba82:	clc    
  42ba83:	icebp  
  42ba84:	test   bh,dh
  42ba86:	add    DWORD PTR ss:[ecx],esi
  42ba89:	cmp    eax,0xfb00814e
  42ba8e:	imul   esi,DWORD PTR [eax],0xffffff82
  42ba91:	mov    edi,0x1a3ad663
  42ba96:	rcr    DWORD PTR [ecx+0x5cb20b00],cl
  42ba9c:	and    al,BYTE PTR [eax]
  42ba9e:	aaa    
  42ba9f:	fidiv  DWORD PTR [edi+0x36000042]
  42baa5:	loop   0x42ba5e
  42baa7:	dec    edx
  42baa8:	xor    eax,0x3c07dd8c
  42baad:	mov    WORD PTR [eax+edi*8],es
  42bab0:	mov    bh,0x89
  42bab2:	push   ecx
  42bab3:	je     0x42ba9b
  42bab5:	mov    ch,0x7
  42bab7:	xchg   ecx,edi
  42bab9:	fadd   QWORD PTR [esi+0x414d3f44]
  42babf:	push   ebp
  42bac0:	xor    BYTE PTR [ecx-0xd],dl
  42bac3:	sbb    esi,DWORD PTR [edi]
  42bac5:	int    0xf7
  42bac7:	inc    esp
  42bac8:	pop    ss
  42bac9:	int3   
  42baca:	adc    BYTE PTR [ebp-0x22016],al
  42bad0:	xor    BYTE PTR [ebx+0x49],al
  42bad3:	add    DWORD PTR [eax],ebp
  42bad5:	dec    ebx
  42bad6:	push   ecx
  42bad7:	(bad)  
  42bad8:	ja     0x42bb0d
  42bada:	or     BYTE PTR [ebx],cl
  42badc:	xor    ch,dh
  42bade:	out    0xfb,al
  42bae0:	rol    BYTE PTR [edx],0xbc
  42bae3:	ja     0x42bb30
  42bae5:	scas   al,BYTE PTR es:[edi]
  42bae6:	popa   
  42bae7:	xor    DWORD PTR [eax],0xffffffc2
  42baea:	out    0x84,eax
  42baec:	cmc    
  42baed:	xor    eax,0xcb474671
  42baf2:	push   esi
  42baf3:	std    
  42baf4:	sbb    eax,0x5b465ec2
  42baf9:	je     0x42bb33
  42bafb:	push   0x37
  42bafd:	dec    esi
  42bafe:	call   0x655f4701
  42bb03:	push   edi
  42bb04:	clc    
  42bb05:	addr16 retf 
  42bb07:	jns    0x42bb09
  42bb09:	add    BYTE PTR [edi-0x53],al
  42bb0c:	scas   al,BYTE PTR es:[edi]
  42bb0d:	jmp    DWORD PTR [ebx+0x30]
  42bb10:	mov    ebx,0xfbcc2f79
  42bb15:	stc    
  42bb16:	ffree  st(1)
  42bb18:	data16 cld 
  42bb1a:	aaa    
  42bb1b:	xor    DWORD PTR [ecx+eiz*4+0x2c],ebp
  42bb1f:	xor    al,0xe8
  42bb21:	inc    eax
  42bb22:	push   ds
  42bb23:	rcl    BYTE PTR [edx+0x75b82dff],0x20
  42bb2a:	aaa    
  42bb2b:	xor    al,0xc5
  42bb2d:	pop    ds
  42bb2e:	stos   DWORD PTR es:[edi],eax
  42bb2f:	sar    DWORD PTR [edx+0x78],0x50
  42bb33:	dec    esi
  42bb35:	call   FWORD PTR [ebp+0x522ff3c1]
  42bb3b:	push   ds
  42bb3c:	dec    DWORD PTR fs:[ebp-0x3f76fab8]
  42bb43:	dec    eax
  42bb44:	fild   WORD PTR [eax+0x1d]
  42bb47:	ror    BYTE PTR [edx-0x1],0x3d
  42bb4b:	mov    bh,0xeb
  42bb4d:	daa    
  42bb4e:	aaa    
  42bb4f:	xor    al,0xeb
  42bb51:	mov    ch,0xf5
  42bb53:	xor    al,BYTE PTR [ecx]
  42bb55:	out    0xa2,al
  42bb57:	outs   dx,BYTE PTR ds:[esi]
  42bb58:	jmp    DWORD PTR [edi]
  42bb5a:	pop    ebx
  42bb5b:	cmp    DWORD PTR [esi],eax
  42bb5d:	sub    BYTE PTR [esp+edi*4],dh
  42bb60:	sbb    dh,0xe8
  42bb63:	inc    edi
  42bb64:	xchg   ebp,eax
  42bb65:	add    bl,BYTE PTR [edi]
  42bb67:	sub    eax,0x2d3ba6b3
  42bb6c:	mov    bl,0xb6
  42bb6e:	add    BYTE PTR [eax],al
  42bb70:	ss repz loopne 0x42bb65
  42bb74:	sub    eax,0xb4f0fdf3
  42bb79:	std    
  42bb7a:	push   esp
  42bb7b:	jne    0x42bb9d
  42bb7d:	ret    
  42bb7e:	inc    ebx
  42bb7f:	or     DWORD PTR [edx],esi
  42bb81:	sub    eax,0x3420ad84
  42bb86:	add    DWORD PTR [edx-0xf],ebp
  42bb89:	shr    eax,0xce
  42bb8c:	repz mov ebp,0x75a2f6f9
  42bb92:	add    dh,ch
  42bb94:	stos   BYTE PTR es:[edi],al
  42bb95:	ins    DWORD PTR es:[edi],dx
  42bb96:	jmp    DWORD PTR [edi-0x57f9c72c]
  42bb9c:	sbb    eax,0x5b4735dc
  42bba1:	sub    eax,0x3417037f
  42bba6:	add    edx,edx
  42bba8:	pop    edx
  42bba9:	cmp    al,0x6e
  42bbab:	mov    dl,0xc3
  42bbad:	pop    edx
  42bbae:	jns    0x42bb42
  42bbb0:	add    BYTE PTR [ecx+0x3c],0x7d
  42bbb4:	mov    al,BYTE PTR [ecx]
  42bbb6:	add    ecx,ebp
  42bbb8:	sub    DWORD PTR [eax+0x3434e996],edi
  42bbbe:	or     bl,BYTE PTR [edi-0x5079cd0f]
  42bbc4:	adc    BYTE PTR [ebx-0x42863a7d],ch
  42bbca:	stc    
  42bbcb:	(bad)  
  42bbcc:	cli    
  42bbcd:	das    
  42bbce:	mov    BYTE PTR [eax],al
  42bbd0:	fild   DWORD PTR [esi+esi*8-0x1]
  42bbd4:	add    BYTE PTR [eax],al
  42bbd6:	and    DWORD PTR [esi-0xfca97c1],ebp
  42bbdc:	mov    BYTE PTR [ebp-0x93e7a],cl
  42bbe2:	lds    esp,FWORD PTR [ebx+0x9]
  42bbe5:	sub    eax,DWORD PTR [esi]
  42bbe7:	mov    al,0x84
  42bbe9:	je     0x42bc0c
  42bbeb:	ret    0x89f6
  42bbee:	xchg   ebx,eax
  42bbef:	aas    
  42bbf0:	idiv   bh
  42bbf2:	xor    DWORD PTR [edx+0x2e662bc2],ebp
  42bbf8:	scas   eax,DWORD PTR es:[edi]
  42bbf9:	inc    edi
  42bbfa:	or     al,0xf9
  42bbfc:	(bad)  [eax]
  42bbfe:	xchg   edi,eax
  42bbff:	or     DWORD PTR fs:[edi],0xafa71a8
  42bc06:	iret   
  42bc07:	xor    DWORD PTR [edi+0x44ab0b4f],ebp
  42bc0d:	nop
  42bc0e:	adc    DWORD PTR [edx-0x2760fbc2],ecx
  42bc14:	add    DWORD PTR [ebx],ecx
  42bc16:	(bad)  
  42bc17:	stos   DWORD PTR es:[edi],eax
  42bc18:	inc    esp
  42bc19:	xchg   esp,eax
  42bc1a:	push   ebp
  42bc1b:	ja     0x42bc2e
  42bc1d:	cdq    
  42bc1e:	xor    eax,0x47f8d0f2
  42bc23:	ja     0x42bbaa
  42bc25:	mov    ebx,DWORD PTR [eax-0x54]
  42bc28:	stc    
  42bc29:	dec    esi
  42bc2b:	stos   BYTE PTR es:[edi],al
  42bc2c:	inc    esp
  42bc2d:	mov    BYTE PTR ds:0x9e0091b6,dl
  42bc33:	xor    ecx,DWORD PTR [ebp+ecx*4-0x93eba]
  42bc3a:	add    BYTE PTR [eax],al
  42bc3c:	leave  
  42bc3d:	mov    bh,0x61
  42bc3f:	jmp    DWORD PTR [ecx]
  42bc41:	rol    DWORD PTR [eax],0x0
  42bc44:	sahf   
  42bc45:	xor    ecx,DWORD PTR [eax+0x14c11245]
  42bc4b:	cld    
  42bc4c:	aaa    
  42bc4d:	(bad)  
  42bc4e:	aas    
  42bc4f:	add    BYTE PTR [edx-0x6e74f3f3],bh
  42bc55:	sar    ebp,1
  42bc57:	push   DWORD PTR [eax]
  42bc59:	inc    ebp
  42bc5a:	cld    
  42bc5b:	sbb    eax,0xc280cd37
  42bc60:	cmp    DWORD PTR [ebx+ebp*1-0x7],esi
  42bc64:	dec    eax
  42bc65:	push   ss
  42bc66:	xchg   BYTE PTR [ebx+ebp*1+0x44],bh
  42bc6a:	pop    edx
  42bc6b:	lock lods al,BYTE PTR ds:[esi]
  42bc6d:	nop
  42bc6e:	and    DWORD PTR [eax-0x79],eax
  42bc71:	mov    bl,0xfd
  42bc73:	cli    
  42bc74:	mov    ds:0x34528ad9,al
  42bc79:	mov    esi,0x11ac1872
  42bc7e:	push   ebx
  42bc7f:	sti    
  42bc80:	mov    bl,ch
  42bc82:	cld    
  42bc83:	je     0x42bcc0
  42bc85:	(bad)  
  42bc86:	jb     0x42bc90
  42bc88:	jne    0x4a3bb783
  42bc8e:	test   BYTE PTR [eax],0x6b
  42bc91:	cmp    BYTE PTR [edx+0x3ac263bf],al
  42bc97:	sbb    ah,bl
  42bc99:	jge    0x42bc97
  42bc9b:	or     dh,BYTE PTR [edx+0x2048]
  42bca1:	add    BYTE PTR [edi],dh
  42bca3:	fidiv  WORD PTR [ebx-0x4c39c9be]
  42bca9:	dec    edx
  42bcaa:	xor    eax,0x2c07dd8c
  42bcaf:	mov    WORD PTR [eax],es
  42bcb1:	clc    
  42bcb2:	mov    bh,0xed
  42bcb4:	push   ecx
  42bcb5:	je     0x42bc97
  42bcb7:	mov    eax,ds:0xbcf98703
  42bcbc:	xchg   BYTE PTR [edi+ebp*1+0x53],al
  42bcc0:	add    eax,0x5c8f23c
  42bcc5:	cmp    al,0xe3
  42bcc7:	xor    esi,ebx
  42bcc9:	xchg   BYTE PTR [ebx],bh
  42bccb:	sbb    ebp,eax
  42bccd:	add    ebp,DWORD PTR [esi+eax*4]
  42bcd0:	stos   BYTE PTR es:[edi],al
  42bcd1:	add    bh,BYTE PTR [esi+eax*4]
  42bcd4:	call   0x7608:0xefd37601
  42bcdb:	xor    al,BYTE PTR [eax-0x7d]
  42bcde:	sbb    eax,0xd0efbc68
  42bce3:	(bad)  
  42bce4:	xchg   esp,eax
  42bce5:	mov    BYTE PTR [esi+0x3703e7b3],dh
  42bceb:	stos   DWORD PTR es:[edi],eax
  42bcec:	mov    ecx,0xf878ae77
  42bcf1:	or     al,0xbb
  42bcf3:	fwait
  42bcf4:	or     esp,edi
  42bcf6:	sub    eax,0x2df3a4fa
  42bcfb:	mov    eax,0xbe1dfd57
  42bd00:	fs inc esp
  42bd02:	adc    BYTE PTR [esi],bh
  42bd04:	mov    al,0x1a
  42bd06:	add    BYTE PTR [eax],al
  42bd08:	mov    esi,0x2c710877
  42bd0d:	test   eax,0x862c1c2c
  42bd12:	sub    al,BYTE PTR [eax]
  42bd14:	jo     0x42bce9
  42bd16:	iret   
  42bd17:	psadbw mm5,QWORD PTR [ebx+0x77b81c2c]
  42bd1e:	add    al,0x44
  42bd20:	mov    bh,0xfd
  42bd22:	sbb    cl,BYTE PTR [edi-0x7f249b07]
  42bd28:	sub    al,0x25
  42bd2a:	call   0xc8aa7532
  42bd2f:	ins    DWORD PTR es:[edi],dx
  42bd30:	aaa    
  42bd31:	mov    ebp,0x47ac181c
  42bd36:	lock push ecx
  42bd38:	lods   al,BYTE PTR ds:[esi]
  42bd39:	inc    edi
  42bd3a:	fdivr  st,st(2)
  42bd3c:	sub    esi,DWORD PTR [eax]
  42bd3e:	jnp    0x42bdb1
  42bd40:	das    
  42bd41:	int3   
  42bd42:	add    ch,bl
  42bd44:	mov    WORD PTR [edx+0x2a7364f9],?
  42bd4a:	test   ch,bh
  42bd4c:	pop    edx
  42bd4d:	xor    al,0x1
  42bd4f:	jb     0x42bd4f
  42bd51:	daa    
  42bd52:	call   0x1770304
  42bd57:	fisub  WORD PTR [esi-0x5909ff8e]
  42bd5d:	push   0xffffffff
  42bd5f:	daa    
  42bd60:	push   ebx
  42bd61:	xor    eax,0xbc382806
  42bd66:	sub    dh,0xf8
  42bd69:	inc    edi
  42bd6a:	in     eax,dx
  42bd6b:	adc    BYTE PTR [eax],al
  42bd6d:	add    BYTE PTR [ecx],dl
  42bd6f:	mov    esp,0x78a81ef9
  42bd74:	and    eax,0x676474ae
  42bd79:	jmp    0x726005ab
  42bd7e:	add    al,0xba
  42bd80:	jae    0x42bd63
  42bd82:	test   eax,0x87f652f5
  42bd87:	and    al,0xfa
  42bd89:	je     0x42bdbb
  42bd8b:	mov    ecx,0xf70cf173
  42bd90:	icebp  
  42bd91:	fdivp  st(5),st
  42bd93:	mov    bh,0xc0
  42bd95:	out    0xb7,al
  42bd97:	neg    BYTE PTR [edi]
  42bd99:	jmp    0x2ef5e6d2
  42bd9e:	cmp    ch,BYTE PTR [ecx]
  42bda0:	mov    bl,0x2e
  42bda2:	xor    ebx,esi
  42bda4:	loopne 0x42bd87
  42bda6:	inc    ecx
  42bda7:	repz std 
  42bda9:	mov    al,0xb4
  42bdab:	stc    
  42bdac:	push   esp
  42bdad:	sbb    eax,0x9cdfcbcf
  42bdb2:	mov    ebp,0x756241b9
  42bdb7:	sub    DWORD PTR [ebx-0x4cd6cddf],esi
  42bdbd:	add    BYTE PTR [esi],bh
  42bdbf:	ss shl cl,0xa6
  42bdc3:	sub    eax,0xb0df03c3
  42bdc8:	xor    DWORD PTR [edx+eax*4-0x2c],edx
  42bdcc:	or     BYTE PTR [ebp+0x32],0x77
  42bdd0:	push   eax
  42bdd1:	push   0x0
  42bdd3:	add    BYTE PTR [esi-0x24e38b47],cl
  42bdd9:	pusha  
  42bdda:	cli    
  42bddb:	inc    BYTE PTR [ebx-0x3f347de8]
  42bde1:	mov    ecx,0x44191074
  42bde6:	or     eax,0xe92893ff
  42bdeb:	jno    0x42bdee
  42bded:	mov    edx,0x2a0e85f6
  42bdf2:	test   BYTE PTR [ecx+0x6f],dh
  42bdf5:	xor    BYTE PTR [ecx],al
  42bdf7:	jmp    0x398479
  42bdfc:	shr    DWORD PTR [esi],1
  42bdfe:	scas   eax,DWORD PTR es:[edi]
  42bdff:	inc    edi
  42be00:	comiss xmm5,DWORD PTR [edi-0x260ef3b1]
  42be07:	or     BYTE PTR ds:0x9ef7faf1,dl
  42be0d:	(bad)  
  42be0e:	push   esp
  42be0f:	je     0x42bdfb
  42be11:	iret   
  42be12:	jnp    0x42be11
  42be14:	fnstcw WORD PTR [ebp+0x3719b606]
  42be1a:	push   es
  42be1b:	mov    dh,0x11
  42be1d:	xor    al,al
  42be1f:	loope  0x42be07
  42be21:	sub    cl,cl
  42be23:	mov    edx,DWORD PTR [ecx-0x397f3ff7]
  42be29:	push   esi
  42be2a:	mov    BYTE PTR [ebp-0x1e],al
  42be2d:	inc    ecx
  42be2e:	adc    DWORD PTR [ebx+0x51821c0b],ecx
  42be34:	shr    BYTE PTR [eax+0x8908],cl
  42be3a:	aaa    
  42be3b:	clc    
  42be3c:	hlt    
  42be3d:	mov    dl,bh
  42be3f:	enter  0x3ec,0xb4
  42be43:	sub    ch,dh
  42be45:	jmp    FWORD PTR [esi-0x1007823b]
  42be4b:	sar    DWORD PTR [ecx-0x39],1
  42be4e:	sub    al,0xcd
  42be50:	std    
  42be51:	jg     0x42bed1
  42be53:	hlt    
  42be54:	or     BYTE PTR [eax+edi*4-0x48fffaca],al
  42be5b:	fs pop ebx
  42be5d:	or     esi,DWORD PTR [ebx+0x37001ba3]
  42be63:	dec    ebp
  42be64:	not    BYTE PTR [esi+0x28]
  42be67:	push   ecx
  42be68:	mov    ds:0x7dcd3716,al
  42be6d:	clc    
  42be6e:	jmp    0xfdcd:0x1ca379d9
  42be75:	jg     0x42beb5
  42be77:	jp     0x42bee2
  42be79:	or     DWORD PTR [edi-0x4df49cdd],esi
  42be7f:	inc    ebp
  42be80:	add    eax,0xafc23700
  42be85:	inc    edi
  42be86:	xor    al,0xca
  42be88:	scas   eax,DWORD PTR es:[edi]
  42be89:	aas    
  42be8a:	cmp    ecx,DWORD PTR [esi+ebx*8]
  42be8d:	pop    es
  42be8e:	cmp    al,0x15
  42be90:	adc    BYTE PTR [ebx],0x2e
  42be93:	inc    esp
  42be94:	inc    ebx
  42be95:	hlt    
  42be96:	scas   al,BYTE PTR es:[edi]
  42be97:	dec    edx
  42be98:	jp     0x42be99
  42be9a:	lock int3 
  42be9c:	cmp    al,0x52
  42be9e:	add    BYTE PTR [eax],al
  42bea0:	inc    ebx
  42bea1:	imul   eax,DWORD PTR [esi],0xfe3579c3
  42bea7:	push   DWORD PTR [edi]
  42bea9:	int    0xec
  42beab:	sub    DWORD PTR [edx+ecx*1+0x55fd8709],edi
  42beb2:	push   eax
  42beb3:	adc    BYTE PTR [esp+esi*1],cl
  42beb6:	cmp    eax,0x781fb1f0
  42bebb:	mov    al,BYTE PTR [esp+ebp*4+0x5e]
  42bebf:	push   ecx
  42bec0:	cmp    ebp,DWORD PTR [edi+0x4bf52ca6]
  42bec6:	jno    0x42bf07
  42bec8:	mov    cl,0x2f
  42beca:	outs   dx,DWORD PTR ds:[esi]
  42becb:	inc    esi
  42becc:	mov    ebp,DWORD PTR [eax+0x714e0aeb]
  42bed2:	fdivr  DWORD PTR [eax+0x35]
  42bed5:	mov    bh,0x27
  42bed7:	add    eax,0x8cf870ae
  42bedc:	(bad)  
  42bedd:	lahf   
  42bede:	out    0x3,eax
  42bee0:	aaa    
  42bee1:	mov    cl,0x35
  42bee3:	outs   dx,DWORD PTR ds:[esi]
  42bee4:	push   ds
  42bee5:	std    
  42bee6:	lods   eax,DWORD PTR ds:[esi]
  42bee7:	jmp    ebx
  42bee9:	jmp    FWORD PTR [esi-0x3]
  42beec:	mov    ecx,0xa489612a
  42bef1:	xor    ebp,eax
  42bef3:	add    edi,DWORD PTR [eax+0x58c2f872]
  42bef9:	xor    eax,0x28a5f8b8
  42befe:	adc    esi,DWORD PTR [ecx+0x3b]
  42bf01:	mov    ecx,0x13f4
  42bf06:	inc    ebp
  42bf07:	je     0x42bef1
  42bf09:	mov    WORD PTR [ebp+0x20],?
  42bf0c:	outs   dx,DWORD PTR ds:[esi]
  42bf0d:	js     0x42bf4e
  42bf0f:	stos   DWORD PTR es:[edi],eax
  42bf10:	lods   al,BYTE PTR ds:[esi]
  42bf11:	adc    esi,DWORD PTR [eax-0xb7bff91]
  42bf17:	sub    BYTE PTR [ecx+0x41],dh
  42bf1a:	pop    ds
  42bf1b:	retf   
  42bf1c:	(bad)  
  42bf1d:	out    dx,al
  42bf1e:	in     eax,dx
  42bf1f:	mov    ecx,0xb443415e
  42bf24:	or     dl,BYTE PTR [ecx-0x48]
  42bf27:	ror    BYTE PTR [di+0x1c6b],1
  42bf2c:	jmp    0x42bfad
  42bf2e:	pop    esi
  42bf2f:	mov    eax,0x2c0b600
  42bf34:	pop    esp
  42bf35:	mov    ecx,0xa563b038
  42bf3a:	sar    BYTE PTR [esi+0x211be180],0xc1
  42bf41:	push   0xffffff93
  42bf43:	mov    ebx,0xb435a97d
  42bf48:	cmp    DWORD PTR [esi],ebx
  42bf4a:	stos   BYTE PTR es:[edi],al
  42bf4b:	jo     0x42bf6e
  42bf4d:	out    dx,al
  42bf4e:	mov    bh,0x12
  42bf50:	adc    al,0xe9
  42bf52:	xor    al,0xb1
  42bf54:	inc    ebx
  42bf55:	(bad)
  42bf58:	addr16 jmp 0x6c5fffdf
  42bf5e:	add    BYTE PTR [ecx+0x4061bf50],bh
  42bf64:	adc    DWORD PTR [edx+0x6c],esp
  42bf67:	mov    esi,0xf573
  42bf6c:	popa   
  42bf6d:	inc    eax
  42bf6e:	or     DWORD PTR [ecx+0x60],edx
  42bf71:	sar    cl,0x36
  42bf74:	mov    dh,0x79
  42bf76:	or     DWORD PTR [eax+edx*2+0x1e],esp
  42bf7a:	add    ecx,ebp
  42bf7c:	sti    
  42bf7d:	outs   dx,BYTE PTR ds:[esi]
  42bf7e:	and    esi,ebp
  42bf80:	mov    bh,0xb2
  42bf82:	push   ss
  42bf83:	jmp    0xf5be70bc
  42bf88:	adc    edx,DWORD PTR [edi]
  42bf8a:	adc    al,0xe9
  42bf8c:	xor    al,0x39
  42bf8e:	jnp    0x42bf4d
  42bf90:	xor    al,0x40
  42bf92:	or     BYTE PTR [edx+0x650a4c62],dh
  42bf98:	jp     0x42bfb6
  42bf9a:	add    ecx,ebp
  42bf9c:	or     dh,BYTE PTR [eax+0x19]
  42bf9f:	jmp    0x42c001
  42bfa1:	push   edx
  42bfa2:	xchg   BYTE PTR [edi],ah
  42bfa4:	pop    ebx
  42bfa5:	add    eax,ebx
  42bfa7:	push   ebp
  42bfa8:	jle    0x42bfab
  42bfaa:	pop    ebx
  42bfab:	add    BYTE PTR [edx-0x29d47acf],al
  42bfb1:	xor    al,0x1
  42bfb3:	mov    ebx,DWORD PTR [eax]
  42bfb5:	sbb    BYTE PTR [eax+eax*8-0x26cdeff6],al
  42bfbc:	shl    DWORD PTR [esi],0x16
  42bfbf:	sbb    BYTE PTR [esi+0x6f006334],bl
  42bfc5:	pusha  
  42bfc6:	mov    WORD PTR [esi-0x6e],ss
  42bfc9:	lods   eax,DWORD PTR ds:[esi]
  42bfca:	mov    edx,0xf75e20e8
  42bfcf:	inc    DWORD PTR [eax]
  42bfd1:	add    BYTE PTR [ebx],bl
  42bfd3:	cmc    
  42bfd4:	push   es
  42bfd5:	test   BYTE PTR [eax-0x4afffee4],bl
  42bfdb:	or     eax,DWORD PTR [edx-0x36cacdba]
  42bfe1:	cmp    esi,edi
  42bfe3:	xor    DWORD PTR [ebx-0x9],edi
  42bfe6:	imul   esi,DWORD PTR [ecx+eax*1],0xc90e158b
  42bfed:	mov    bh,BYTE PTR [edi-0x6]
  42bff0:	dec    esi
  42bff1:	sub    al,0x61
  42bff3:	mov    bl,0xe1
  42bff5:	pop    ss
  42bff6:	pop    esi
  42bff7:	xor    al,0x7a
  42bff9:	clc    
  42bffa:	dec    edi
  42bffb:	dec    eax
  42bffc:	or     eax,0x332f8f8a
  42c001:	inc    esi
  42c002:	add    ebp,DWORD PTR [edi]
  42c004:	test   bh,dl
  42c006:	sub    DWORD PTR [ecx+eax*1],esi
  42c009:	inc    edi
  42c00a:	aaa    
  42c00b:	mov    eax,ds:0xfa31fff4
  42c010:	push   esi
  42c011:	push   0x8682ce25
  42c016:	xchg   esi,eax
  42c017:	xor    eax,DWORD PTR [ecx]
  42c019:	add    BYTE PTR ds:0xf63b68fa,cl
  42c01f:	int    0xdb
  42c021:	mov    DWORD PTR [ebx],esi
  42c023:	sub    dl,ah
  42c025:	jecxz  0x42c05e
  42c027:	xlat   BYTE PTR ds:[ebx]
  42c028:	cmp    DWORD PTR [eax],ebx
  42c02a:	xor    eax,0x69873a61
  42c02f:	popa   
  42c030:	cmp    cl,bl
  42c032:	inc    esp
  42c033:	xor    eax,0x4188
  42c038:	das    
  42c039:	dec    eax
  42c03a:	lds    esi,FWORD PTR [ebx+0x30]
  42c03d:	jae    0x42c044
  42c03f:	push   eax
  42c040:	stos   BYTE PTR es:[edi],al
  42c041:	neg    DWORD PTR [eax]
  42c043:	xchg   DWORD PTR [ebp+eiz*4-0x6d],esi
  42c047:	push   ebp
  42c048:	test   eax,0xac88e79e
  42c04d:	nop    DWORD PTR [edi]
  42c050:	outs   dx,DWORD PTR ds:[esi]
  42c051:	repnz (bad) 
  42c053:	or     bh,BYTE PTR [eax+0x37000c43]
  42c059:	push   ebx
  42c05a:	or     BYTE PTR [esi],dh
  42c05c:	icebp  
  42c05d:	js     0x42c063
  42c05f:	test   eax,edi
  42c061:	mov    ch,0xfd
  42c063:	push   DWORD PTR [ebp+edx*2+0x539473fe]
  42c06a:	inc    eax
  42c06b:	add    DWORD PTR [eax+eax*2-0x80],ecx
  42c06f:	jns    0x42c068
  42c071:	int3   
  42c072:	call   0x3dba7504
  42c077:	add    BYTE PTR [eax],bh
  42c079:	dec    eax
  42c07a:	pop    edx
  42c07b:	adc    esi,DWORD PTR [edi]
  42c07d:	int    0x80
  42c07f:	jns    0x42c068
  42c081:	int3   
  42c082:	push   0x61
  42c084:	mov    esp,0xe376186
  42c089:	cdq    
  42c08a:	jle    0x42c012
  42c08c:	jns    0x42c053
  42c08e:	jp     0x42c04f
  42c090:	mov    ds:0x40d938ce,eax
  42c095:	dec    edx
  42c096:	inc    esi
  42c097:	adc    esi,DWORD PTR [edi]
  42c099:	int    0x67
  42c09b:	add    BYTE PTR [eax],al
  42c09d:	add    BYTE PTR [edi+0x58],ah
  42c0a0:	dec    ebx
  42c0a1:	sbb    al,0xac
  42c0a3:	xor    esp,DWORD PTR [edi-0x25a5cd15]
  42c0a9:	hlt    
  42c0aa:	mov    bl,0xf3
  42c0ac:	loop   0x42c12d
  42c0ae:	and    al,0x1f
  42c0b0:	call   0x6f4f90b8
  42c0b5:	cmp    eax,0x38b00b33
  42c0ba:	out    dx,al
  42c0bb:	imul   ebx,DWORD PTR es:[esi],0x24
  42c0bf:	xor    al,0xe8
  42c0c1:	mov    DWORD PTR [ecx],esi
  42c0c3:	cli    
  42c0c4:	xor    DWORD PTR [eax],ebp
  42c0c6:	cmp    al,0xb1
  42c0c8:	std    
  42c0c9:	or     al,0x37
  42c0cb:	xor    al,0x67
  42c0cd:	sti    
  42c0ce:	aaa    
  42c0cf:	inc    eax
  42c0d0:	fmul   QWORD PTR [ecx+0x3dbe3559]
  42c0d6:	bound  esp,QWORD PTR [edi]
  42c0d8:	or     ah,BYTE PTR gs:[esp+esi*1]
  42c0dc:	call   0xbf8ab769
  42c0e1:	cmp    eax,0xf51ecd1b
  42c0e6:	ins    DWORD PTR es:[edi],dx
  42c0e7:	mov    dh,0x1e
  42c0e9:	push   esi
  42c0ea:	(bad)  [esi]
  42c0ec:	data16 out dx,al
  42c0ee:	inc    esi
  42c0ef:	xor    al,0xe8
  42c0f1:	jmp    0x65b9:0xf442b73f
  42c0f8:	int3   
  42c0f9:	cmp    BYTE PTR [esi+0x26],ch
  42c0fc:	ins    BYTE PTR es:[edi],dx
  42c0fd:	add    eax,0x882ab63c
  42c102:	add    BYTE PTR [eax],al
  42c104:	neg    BYTE PTR [ebx]
  42c106:	ins    DWORD PTR es:[edi],dx
  42c107:	ret    
  42c108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c109:	pandn  mm3,mm2
  42c10c:	cdq    
  42c10d:	and    edi,DWORD PTR [esi+0x3]
  42c110:	xchg   DWORD PTR [edi-0xe4fe84f],esp
  42c116:	(bad)  
  42c118:	outs   dx,DWORD PTR ds:[esi]
  42c119:	mov    dh,0xfa
  42c11b:	jge    0x42c0e5
  42c11d:	aas    
  42c11e:	add    esp,eax
  42c120:	inc    edi
  42c121:	hlt    
  42c122:	test   DWORD PTR [eax+esi*1+0x3b858aab],ebx
  42c129:	xor    al,0x1
  42c12b:	shl    BYTE PTR [edx+ebx*1+0x1],1
  42c12f:	jmp    0x2603495
  42c134:	fwait
  42c135:	(bad)  
  42c136:	xlat   BYTE PTR ds:[ebx]
  42c137:	fsubr  QWORD PTR ds:[edi+0x8750305]
  42c13e:	je     0x42c109
  42c140:	mov    eax,0xbb34ffbd
  42c145:	scas   eax,DWORD PTR es:[edi]
  42c146:	cmp    eax,0x2c7262e8
  42c14b:	adc    al,0x80
  42c14d:	scas   al,BYTE PTR es:[edi]
  42c14e:	inc    edx
  42c14f:	add    eax,0xd21d7240
  42c154:	ins    BYTE PTR es:[edi],dx
  42c155:	inc    eax
  42c156:	enter  0xcd90,0xbb
  42c15a:	stc    
  42c15b:	jle    0x42c1b5
  42c15d:	pop    edx
  42c15e:	imul   edi,esp,0x82c80538
  42c164:	daa    
  42c165:	std    
  42c166:	pop    edx
  42c167:	loope  0x42c169
  42c169:	add    ch,ch
  42c16b:	xor    DWORD PTR [edx+ebp*4-0x2ebd539b],ecx
  42c172:	xor    eax,0xd84e3d82
  42c177:	push   0x35
  42c179:	test   BYTE PTR [esi+0x6a280929],0x31
  42c180:	jle    0x42c1ca
  42c182:	cmp    bh,ch
  42c184:	pop    edx
  42c185:	mov    ebp,0xaf8619c2
  42c18a:	mov    al,ds:0x4195c0af
  42c18f:	std    
  42c190:	pop    ebx
  42c191:	loope  0x42c131
  42c193:	sub    ch,BYTE PTR [esi]
  42c195:	cmp    esi,DWORD PTR [ecx-0x55]
  42c198:	push   edx
  42c199:	add    dl,bl
  42c19b:	add    eax,0x7d990fbb
  42c1a0:	stc    
  42c1a1:	dec    DWORD PTR [esi]
  42c1a3:	inc    al
  42c1a5:	jmp    0x42c185
  42c1a7:	xor    DWORD PTR [edi+0x355b6503],ebp
  42c1ad:	xadd   BYTE PTR [ebx+edi*8],ch
  42c1b1:	shl    dh,0x2c
  42c1b4:	jp     0x42c196
  42c1b6:	iret   
  42c1b7:	cmova  ebx,DWORD PTR ss:[esi-0x39]
  42c1bc:	add    al,0x75
  42c1be:	(bad)  
  42c1bf:	std    
  42c1c0:	retf   0x8f3b
  42c1c3:	xor    DWORD PTR [ebp+0x2a29f5c2],edx
  42c1c9:	rcl    BYTE PTR [ebp+0x9506ef],cl
  42c1cf:	add    ah,bl
  42c1d1:	xor    eax,0x31ce85bc
  42c1d6:	test   eax,esp
  42c1d8:	mov    ebp,0x63e9f6c1
  42c1dd:	shl    esi,0xff
  42c1e0:	add    eax,0x588b196b
  42c1e5:	push   esp
  42c1e6:	test   al,al
  42c1e8:	and    BYTE PTR ds:0x48dd932,0x63
  42c1ef:	add    BYTE PTR [esi-0x2ae3b04d],ch
  42c1f5:	in     eax,dx
  42c1f6:	loope  0x42c1f1
  42c1f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1f9:	ret    0x85f6
  42c1fc:	push   ds
  42c1fd:	xor    al,BYTE PTR [edx+eiz*1-0x14093df7]
  42c204:	xor    esi,DWORD PTR ds:0x78351c40
  42c20a:	xor    bl,cl
  42c20c:	rol    DWORD PTR [ebx-0x7d],1
  42c20f:	or     edx,DWORD PTR [esi+esi*8]
  42c212:	sub    al,0x75
  42c214:	aaa    
  42c215:	mov    al,0x82
  42c217:	div    DWORD PTR [esi]
  42c219:	xchg   edx,eax
  42c21a:	add    DWORD PTR [edx],0x85ef3b10
  42c220:	je     0x42c1be
  42c222:	sub    eax,DWORD PTR [edx+0x52]
  42c225:	call   0x86ef:0xa2f9f681
  42c22c:	hlt    
  42c22d:	pop    esi
  42c22e:	sub    al,0x42
  42c230:	pop    ebx
  42c231:	mov    ds:0xe083,al
  42c236:	loop   0x42c1c2
  42c238:	out    dx,eax
  42c239:	xchg   BYTE PTR [ecx+0x1],dh
  42c23c:	cmp    BYTE PTR [edi-0x616dec0],0xc8
  42c243:	repnz sub ebx,DWORD PTR [ebp+0x2f]
  42c247:	call   0x2eef:0xe2b9d687
  42c24e:	jle    0x42c2ac
  42c250:	jbe    0x42c29b
  42c252:	or     edx,DWORD PTR [esi-0x274ef542]
  42c258:	out    dx,al
  42c259:	cli    
  42c25a:	cwde   
  42c25b:	aaa    
  42c25c:	stc    
  42c25d:	push   edi
  42c25e:	sahf   
  42c25f:	loop   0x42c24f
  42c261:	cli    
  42c262:	mov    BYTE PTR [esi+0x4f],dh
  42c265:	ins    BYTE PTR es:[edi],dx
  42c266:	add    al,0xcc
  42c268:	push   DWORD PTR [ecx+0x343f1634]
  42c26e:	hlt    
  42c26f:	adc    cl,BYTE PTR [ecx]
  42c271:	or     BYTE PTR [ebx],dh
  42c273:	add    al,0xe2
  42c275:	stc    
  42c276:	pusha  
  42c277:	or     ch,BYTE PTR [edx+ebx*2]
  42c27a:	retf   
  42c27b:	lea    ebp,[ecx+0x7c9e890a]
  42c281:	dec    ecx
  42c282:	add    ebx,esi
  42c284:	test   DWORD PTR [ebx],0x8400a12f
  42c28a:	popf   
  42c28b:	arpl   ax,si
  42c28d:	cli    
  42c28e:	push   ds
  42c28f:	xor    al,0x6b
  42c291:	out    dx,eax
  42c292:	sub    eax,0x9351deb3
  42c297:	daa    
  42c298:	dec    ecx
  42c299:	add    DWORD PTR [eax],eax
  42c29b:	add    ch,ah
  42c29d:	ss pop edi
  42c29f:	inc    edx
  42c2a0:	dec    ebx
  42c2a1:	idiv   ecx
  42c2a3:	pop    es
  42c2a4:	aas    
  42c2a5:	xor    eax,0xb2feb711
  42c2aa:	repnz sub al,0x5d
  42c2ad:	and    BYTE PTR [edi+0x7f],dh
  42c2b0:	cmp    eax,0x7e7ce6ea
  42c2b5:	push   0x3c34fa27
  42c2ba:	jmp    0x2ab1b19b
  42c2bf:	pusha  
  42c2c0:	cmp    al,0xb7
  42c2c2:	cmp    ecx,esi
  42c2c4:	int    0xb2
  42c2c6:	jmp    0xf838:0x21bdc1b9
  42c2cd:	test   eax,0x9d40fbe3
  42c2d2:	ins    DWORD PTR es:[edi],dx
  42c2d3:	icebp  
  42c2d4:	lods   eax,DWORD PTR ds:[esi]
  42c2d5:	mov    dl,0xde
  42c2d7:	push   ecx
  42c2d8:	adc    eax,DWORD PTR [ebx+0x67]
  42c2db:	dec    esi
  42c2dc:	pushf  
  42c2dd:	mov    dl,0x8a
  42c2df:	add    ch,al
  42c2e1:	outs   dx,DWORD PTR ss:[esi]
  42c2e3:	inc    ecx
  42c2e4:	inc    ebx
  42c2e5:	div    DWORD PTR [ecx+0x7]
  42c2e8:	das    
  42c2e9:	inc    esp
  42c2ea:	jg     0x42c27c
  42c2ec:	mov    cl,0x1
  42c2ee:	cld    
  42c2ef:	sub    al,0x8e
  42c2f1:	inc    edx
  42c2f2:	addr16 inc esi
  42c2f4:	ins    BYTE PTR es:[edi],dx
  42c2f5:	mov    dl,0x5a
  42c2f7:	add    BYTE PTR [ebp+0x6084a736],ah
  42c2fd:	cmp    eax,0x87db
  42c302:	das    
  42c303:	mov    cl,0x42
  42c305:	lock cmp eax,0x3df208ba
  42c30b:	mov    dl,0x0
  42c30d:	push   0x4c
  42c30f:	ds jae 0x42c31d
  42c312:	mov    edx,0x499d0ba9
  42c317:	outs   dx,DWORD PTR ds:[esi]
  42c318:	test   cl,ch
  42c31a:	xor    al,0x34
  42c31c:	jne    0x42c31d
  42c31e:	dec    ecx
  42c31f:	push   ebp
  42c320:	and    ecx,ebp
  42c322:	xor    al,0x3d
  42c324:	sub    esp,0x6
  42c327:	scas   eax,DWORD PTR es:[edi]
  42c328:	stc    
  42c329:	mov    esp,0xe901541d
  42c32e:	aaa    
  42c32f:	mov    ch,0xf6
  42c331:	in     al,dx
  42c332:	loopne 0x42c2e2
  42c334:	sub    eax,0x60f61aa9
  42c339:	out    dx,al
  42c33a:	scas   eax,DWORD PTR es:[edi]
  42c33b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c33c:	sti    
  42c33d:	(bad)  
  42c33e:	enter  0xdc9c,0xcd
  42c342:	loopne 0x42c2f2
  42c344:	xor    eax,0xd532c8a0
  42c349:	mov    ebp,0xf280aed0
  42c34e:	mov    esi,0xa7a2843e
  42c353:	scas   al,BYTE PTR es:[edi]
  42c354:	stc    
  42c355:	sub    cl,BYTE PTR [edx-0x6f610388]
  42c35b:	push   0x5b
  42c35d:	add    eax,0x8fd63298
  42c362:	mov    al,ds:0x3f09ae
  42c367:	add    BYTE PTR [ebx+ebp*8],dh
  42c36a:	or     ah,cl
  42c36c:	xor    al,0x34
  42c36e:	ds mov dl,0x73
  42c371:	es sub al,0xde
  42c374:	mov    eax,0x5866fbe6
  42c379:	xor    bh,cl
  42c37b:	lock popa 
  42c37d:	mov    ch,0xaa
  42c37f:	push   esp
  42c380:	dec    eax
  42c381:	scas   al,BYTE PTR es:[edi]
  42c382:	jge    0x42c3d5
  42c384:	sbb    edi,DWORD PTR ds:0xa3bb0085
  42c38a:	idiv   bh
  42c38c:	inc    ebx
  42c38d:	aad    0xf9
  42c38f:	dec    DWORD PTR [esi-0x4e]
  42c392:	jge    0x42c32e
  42c394:	arpl   WORD PTR [ecx+0x4a9e3df6],sp
  42c39a:	add    DWORD PTR [eax],eax
  42c39c:	inc    edi
  42c39d:	test   al,0xf7
  42c39f:	inc    DWORD PTR [ecx+0x63]
  42c3a2:	add    DWORD PTR [eax],esp
  42c3a4:	push   ds
  42c3a5:	xor    eax,0xa1898206
  42c3aa:	idiv   bh
  42c3ac:	ret    
  42c3ad:	stos   BYTE PTR es:[edi],al
  42c3ae:	sbb    DWORD PTR [eax],eax
  42c3b0:	push   cs
  42c3b1:	mov    dl,0x7f
  42c3b3:	jp     0x42c398
  42c3b5:	mov    eax,ds:0x58413df6
  42c3ba:	add    DWORD PTR [eax],eax
  42c3bc:	sar    DWORD PTR [eax-0x5dfe029a],1
  42c3c2:	cmp    al,0x5f
  42c3c4:	cmp    BYTE PTR ds:[ecx],al
  42c3c7:	cvtps2pd xmm3,QWORD PTR [ecx]
  42c3ca:	cld    
  42c3cb:	inc    DWORD PTR [eax]
  42c3cd:	add    BYTE PTR [ecx-0x31cffe9d],al
  42c3d3:	xor    al,0xe8
  42c3d5:	mov    edx,0x3bf6a1e0
  42c3da:	lock adc eax,DWORD PTR [esi]
  42c3dd:	sub    DWORD PTR [edx+eiz*4],0xfffffff6
  42c3e1:	call   DWORD PTR [ecx+0x70b8fae6]
  42c3e7:	cmp    al,0x1
  42c3e9:	add    BYTE PTR [ebp+0x5d],bl
  42c3ec:	shl    BYTE PTR [edi+0x73],0xb1
  42c3f0:	jge    0x42c422
  42c3f2:	add    ah,BYTE PTR [edx-0x50197c0a]
  42c3f8:	push   es
  42c3f9:	test   BYTE PTR [ecx],bh
  42c3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c3fc:	idiv   bh
  42c3fe:	int    0x9c
  42c400:	sbb    DWORD PTR [edi],ecx
  42c402:	aaa    
  42c403:	pop    ds
  42c404:	or     al,0xfc
  42c406:	push   eax
  42c407:	add    DWORD PTR [ecx],esi
  42c409:	mov    al,ds:0xafd9b37
  42c40e:	mov    ebx,0x38fae98d
  42c413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c414:	jge    0x42c427
  42c416:	aaa    
  42c417:	popf   
  42c418:	fmul   QWORD PTR [ebx+0x2a]
  42c41b:	push   edi
  42c41c:	jmp    0x42c45a
  42c41e:	aaa    
  42c41f:	jge    0x42c41e
  42c421:	jmp    FWORD PTR [eax]
  42c423:	sbb    edi,edx
  42c425:	cld    
  42c426:	adc    BYTE PTR [edi],bh
  42c428:	xor    DWORD PTR [esi],eax
  42c42a:	push   edi
  42c42b:	popf   
  42c42c:	std    
  42c42d:	or     bh,BYTE PTR [ecx+0xfae7aa]
  42c433:	add    al,bh
  42c435:	call   0x9d79e454
  42c43a:	cli    
  42c43b:	sbb    edi,0xffffff92
  42c43e:	jmp    0x42c43a
  42c440:	and    ch,BYTE PTR [esi+0x25]
  42c443:	add    BYTE PTR [edi],dh
  42c445:	xchg   esi,eax
  42c446:	sbb    esp,0x3ceb7ecc
  42c44c:	aaa    
  42c44d:	lods   eax,DWORD PTR ds:[esi]
  42c44e:	std    
  42c44f:	dec    esi
  42c451:	xchg   edx,ebp
  42c453:	cli    
  42c454:	mov    eax,0x406c4ba2
  42c459:	sbb    dl,dh
  42c45b:	cld    
  42c45c:	test   al,0xd6
  42c45e:	sti    
  42c45f:	mov    cl,0x34
  42c461:	pop    edx
  42c462:	xor    bh,0x2d
  42c465:	xchg   esi,eax
  42c466:	jg     0x42c424
  42c468:	mov    WORD PTR [esi-0x57708115],?
  42c46e:	cld    
  42c46f:	xor    DWORD PTR [ebp+0x31],0x203afaec
  42c476:	add    eax,0x818e3700
  42c47b:	mov    dl,0x6b
  42c47d:	xor    al,0x63
  42c47f:	in     eax,dx
  42c480:	and    edx,DWORD PTR [edi+0x8]
  42c483:	add    al,0x37
  42c485:	aas    
  42c486:	push   0xffffff8e
  42c488:	dec    ecx
  42c489:	scas   eax,DWORD PTR es:[edi]
  42c48a:	dec    edx
  42c48b:	das    
  42c48c:	push   ds
  42c48d:	push   esp
  42c48e:	call   0x88f8f096
  42c493:	lock cmp eax,0x7e40af
  42c499:	add    BYTE PTR [ecx],ch
  42c49b:	scas   eax,DWORD PTR es:[edi]
  42c49c:	sub    ch,BYTE PTR [ecx]
  42c49e:	lea    esp,[eax]
  42c4a0:	repz adc ah,0xb0
  42c4a4:	sbb    ch,ch
  42c4a6:	sub    eax,0x9040e6e6
  42c4ab:	lods   al,BYTE PTR ds:[esi]
  42c4ac:	(bad)  
  42c4ae:	mov    dh,BYTE PTR [esi-0x4d0212fd]
  42c4b4:	(bad)  
  42c4b5:	(bad)  
  42c4b6:	sub    eax,0xede882b6
  42c4bb:	scas   al,BYTE PTR es:[edi]
  42c4bc:	lods   al,BYTE PTR ds:[esi]
  42c4bd:	xchg   al,ch
  42c4bf:	scas   al,BYTE PTR es:[edi]
  42c4c0:	out    0xfc,eax
  42c4c2:	mov    ah,0x17
  42c4c4:	fucomip st,st(4)
  42c4c6:	fnsave [eax+0xb]
  42c4c9:	and    al,0x37
  42c4cb:	xor    al,0xdb
  42c4cd:	test   DWORD PTR [ebp-0x50],edx
  42c4d0:	ret    0x3ec
  42c4d3:	pop    ebp
  42c4d4:	or     BYTE PTR [edi+esi*1],al
  42c4d7:	aas    
  42c4d8:	imul   ecx,DWORD PTR [edi-0x4d],0xffffffae
  42c4dc:	stos   BYTE PTR es:[edi],al
  42c4dd:	(bad)  
  42c4df:	stos   BYTE PTR es:[edi],al
  42c4e0:	mov    ds:0x22e62dec,al
  42c4e5:	add    ebp,DWORD PTR [esi+eiz*8]
  42c4e8:	and    al,BYTE PTR [edx]
  42c4ea:	jbe    0x42c47f
  42c4ec:	(bad)  
  42c4ee:	ja     0x42c522
  42c4f0:	test   al,0x80
  42c4f2:	jne    0x42c526
  42c4f4:	jno    0x42c53c
  42c4f6:	xchg   DWORD PTR [edx+0x1],ebp
  42c4f9:	sub    al,0x4b
  42c4fb:	xor    DWORD PTR [esi],ecx
  42c4fd:	bound  eax,QWORD PTR [eax]
  42c4ff:	add    BYTE PTR [edx],ch
  42c501:	inc    eax
  42c502:	mov    ebp,gs
  42c504:	mov    ch,0xb5
  42c506:	or     BYTE PTR [ebp+ebx*4+0x26],ah
  42c50a:	add    ah,BYTE PTR [edx-0x1c]
  42c50d:	aaa    
  42c50e:	cmp    BYTE PTR es:[edi+0x3f],ch
  42c512:	sbb    ecx,DWORD PTR cs:0x32b44902
  42c519:	mov    bh,0x52
  42c51b:	lds    ecx,FWORD PTR [edi+0x7d]
  42c51e:	arpl   WORD PTR ds:[ebx],si
  42c521:	mov    ebx,0xf2501d53
  42c526:	or     DWORD PTR [ebx-0x12],ebp
  42c529:	lods   eax,DWORD PTR ds:[esi]
  42c52a:	stc    
  42c52b:	jmp    0xa5b5ba90
  42c530:	pop    eax
  42c531:	dec    DWORD PTR [ecx]
  42c533:	outs   dx,BYTE PTR ds:[esi]
  42c534:	ret    0xf9ad
  42c537:	jmp    0xed94a937
  42c53c:	daa    
  42c53d:	jnp    0x42c57b
  42c53f:	pushf  
  42c540:	jmp    0x42c525
  42c542:	inc    ecx
  42c543:	jmp    0x42c522
  42c545:	sar    DWORD PTR [edi+0x9a01e70],0x9f
  42c54c:	or     al,0x33
  42c54e:	ror    al,0xcb
  42c551:	ss leave 
  42c553:	test   BYTE PTR [esi-0x2c58020e],0x35
  42c55a:	push   es
  42c55b:	stos   DWORD PTR es:[edi],eax
  42c55c:	xor    al,BYTE PTR [eax]
  42c55e:	std    
  42c55f:	pusha  
  42c560:	imul   BYTE PTR [ebx+0xf173]
  42c566:	int3   
  42c567:	stos   BYTE PTR es:[edi],al
  42c568:	stc    
  42c569:	sahf   
  42c56a:	or     al,0xbb
  42c56c:	inc    ebx
  42c56d:	xchg   ecx,eax
  42c56e:	adc    BYTE PTR [eax],cl
  42c570:	cmc    
  42c571:	push   0x74
  42c573:	cmp    dh,ah
  42c575:	add    BYTE PTR [ebx-0x56],ch
  42c578:	scas   eax,DWORD PTR es:[edi]
  42c579:	ror    BYTE PTR [ebx],0x70
  42c57c:	mov    bl,0x83
  42c57e:	mov    edi,0xea4d8837
  42c583:	test   al,0xb7
  42c585:	mov    BYTE PTR [esp+edi*8+0x40],dh
  42c589:	add    BYTE PTR [ecx-0x25],cl
  42c58c:	jns    0x42c5f0
  42c58e:	mov    esi,ecx
  42c590:	add    BYTE PTR [edi-0x29],al
  42c593:	push   0xfffffffd
  42c595:	mov    DWORD PTR [ebx-0x7c3f7b67],edx
  42c59b:	test   eax,0x9969ffb1
  42c5a0:	jbe    0x42c52b
  42c5a2:	rcr    DWORD PTR [eax+0x2d29d284],cl
  42c5a8:	sub    eax,esi
  42c5aa:	cmp    DWORD PTR [ecx+0x2fdcd22a],ebx
  42c5b0:	push   ebp
  42c5b1:	adc    al,0xe5
  42c5b3:	out    dx,al
  42c5b4:	jne    0x42c5e4
  42c5b6:	cmp    DWORD PTR [ebx],esp
  42c5b8:	sbb    DWORD PTR [ebx+0x75f69ca3],ecx
  42c5be:	out    dx,al
  42c5bf:	sub    eax,0x90158bc0
  42c5c4:	arpl   di,bp
  42c5c6:	fstp   DWORD PTR [ecx+0xc084]
  42c5cc:	leave  
  42c5cd:	sub    al,0x75
  42c5cf:	adc    eax,0x5cfa30de
  42c5d4:	loop   0x42c56f
  42c5d6:	inc    esp
  42c5d7:	adc    al,0x45
  42c5d9:	hlt    
  42c5da:	adc    al,0x3b
  42c5dc:	adc    ebx,DWORD PTR [edi+esi*2-0x293ea28]
  42c5e3:	mov    edx,DWORD PTR [ebx-0x60]
  42c5e6:	xor    cl,al
  42c5e8:	test   eax,0xb9efe92c
  42c5ed:	cdq    
  42c5ee:	jp     0x42c66d
  42c5f0:	aaa    
  42c5f1:	mov    bh,0xfd
  42c5f3:	or     dh,BYTE PTR [ebx+0x370009ff]
  42c5f9:	and    al,BYTE PTR [ecx-0x4]
  42c5fc:	scas   al,BYTE PTR es:[edi]
  42c5fd:	push   edi
  42c5fe:	adc    DWORD PTR [edi-0x76c28106],eax
  42c604:	bnd jbe 0x42c654
  42c607:	jmp    0x4074c5
  42c60c:	pop    eax
  42c60d:	xchg   DWORD PTR ds:0xe70eea87,eax
  42c613:	je     0x42c65c
  42c615:	adc    eax,eax
  42c617:	xchg   BYTE PTR [edx+eax*1+0xf],ch
  42c61b:	jmp    0x42c655
  42c61d:	ins    DWORD PTR es:[edi],dx
  42c61e:	cmp    DWORD PTR [edi+0x15241940],0x5d029d37
  42c628:	sub    eax,DWORD PTR [ebp-0x64]
  42c62b:	jmp    0x0:0x42794b18
  42c632:	ss push ds
  42c634:	mov    edi,0xe9d0be20
  42c639:	test   DWORD PTR [eax],edi
  42c63b:	jno    0x42c67c
  42c63d:	outs   dx,BYTE PTR ds:[esi]
  42c63e:	mov    ch,cl
  42c640:	cmp    dh,BYTE PTR [edx+0x32]
  42c643:	loope  0x42c67d
  42c645:	jae    0x42c699
  42c647:	mov    ch,BYTE PTR [edi-0x49b1c4ae]
  42c64d:	cmp    ebp,DWORD PTR [edx-0x66]
  42c650:	scas   eax,DWORD PTR es:[edi]
  42c651:	inc    edx
  42c652:	xor    eax,0xbec08992
  42c657:	dec    eax
  42c658:	(bad)  [edx]
  42c65a:	mov    DWORD PTR [edx-0x2],esp
  42c65d:	rcl    dh,0xa5
  42c660:	cld    
  42c661:	mov    DWORD PTR [eax+0x2b],0x7d77ff40
  42c668:	cld    
  42c669:	push   es
  42c66a:	jne    0x42c6a0
  42c66c:	jno    0x42c6a5
  42c66e:	fwait
  42c66f:	mov    ebp,0x3c0bec24
  42c674:	push   eax
  42c675:	jmp    0x7b4d7207
  42c67a:	sti    
  42c67b:	stos   DWORD PTR es:[edi],eax
  42c67c:	shl    WORD PTR [ebx],0x9f
  42c680:	mov    dl,0xf8
  42c682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c683:	je     0x42c6e9
  42c685:	cmp    al,0xa1
  42c687:	mov    bh,0x88
  42c689:	add    ebp,DWORD PTR [esi-0x6106ac07]
  42c68f:	mov    esp,0x33f746bd
  42c694:	jecxz  0x42c63f
  42c696:	add    BYTE PTR [eax],al
  42c698:	enter  0xad15,0x43
  42c69c:	aaa    
  42c69d:	repz jo 0x42c6d7
  42c6a0:	cmp    edi,DWORD PTR [ebp+0x73bbeba4]
  42c6a6:	mov    esp,0x2aaaef15
  42c6ab:	jmp    0x3532664d
  42c6b0:	out    dx,al
  42c6b1:	hlt    
  42c6b2:	outs   dx,BYTE PTR ds:[esi]
  42c6b3:	ret    
  42c6b4:	mov    edi,0x737b13f8
  42c6b9:	lods   al,BYTE PTR ds:[esi]
  42c6ba:	(bad)  
  42c6bb:	aad    0x42
  42c6bd:	mov    ebp,0x7e400f9c
  42c6c2:	jnp    0x42c6f5
  42c6c4:	sub    BYTE PTR [edx],cl
  42c6c6:	test   al,bh
  42c6c8:	imul   edi,DWORD PTR [edi+0x3adde8ee],0x7bb0049a
  42c6d2:	push   ss
  42c6d3:	(bad)  
  42c6d4:	push   ecx
  42c6d5:	xchg   ebp,eax
  42c6d6:	jmp    0xcb36:0x5e95f845
  42c6dd:	je     0x42c6ae
  42c6df:	add    al,0xb1
  42c6e1:	das    
  42c6e2:	lock inc esp
  42c6e4:	mov    ebx,0x28e60083
  42c6e9:	add    dh,bh
  42c6eb:	scas   al,BYTE PTR es:[edi]
  42c6ec:	(bad)  
  42c6ed:	lods   eax,DWORD PTR ds:[esi]
  42c6ee:	inc    ebx
  42c6ef:	std    
  42c6f0:	sbb    edi,eax
  42c6f2:	cld    
  42c6f3:	loopne 0x42c73e
  42c6f5:	inc    eax
  42c6f6:	jnp    0x42c69c
  42c6f8:	or     esi,eax
  42c6fa:	clc    
  42c6fb:	rol    BYTE PTR [eax],cl
  42c6fd:	add    BYTE PTR [ebp+edi*1-0x52a15d7b],bh
  42c704:	stc    
  42c705:	push   0xffffffd9
  42c707:	xchg   edi,eax
  42c708:	add    BYTE PTR [eax+0x21],ah
  42c70b:	inc    eax
  42c70c:	or     ah,BYTE PTR [ebp+0x76]
  42c70f:	inc    esi
  42c710:	add    ecx,ebp
  42c712:	fucomi st,st(7)
  42c714:	and    al,0xa9
  42c716:	int    0xef
  42c718:	and    al,0xb9
  42c71a:	ins    DWORD PTR es:[edi],dx
  42c71b:	mov    edi,0xb334e914
  42c720:	inc    edx
  42c721:	aad    0x3
  42c723:	jge    0x42c74a
  42c725:	sub    dh,BYTE PTR [ebp+0x61]
  42c728:	shl    dh,0xa0
  42c72b:	popa   
  42c72c:	adc    al,0xe9
  42c72e:	xor    al,0xb2
  42c730:	std    
  42c731:	test   eax,0xedfff54c
  42c736:	xchg   ecx,eax
  42c737:	not    DWORD PTR ds:[esi]
  42c73a:	pop    ds
  42c73b:	popf   
  42c73c:	jb     0x42c758
  42c73e:	imul   eax,DWORD PTR [ebp-0x37a69f51]
  42c745:	sar    bl,cl
  42c747:	hlt    
  42c748:	xor    eax,0x11bdef28
  42c74d:	aam    0x34
  42c74f:	xor    al,0xa
  42c751:	lahf   
  42c752:	inc    esp
  42c753:	mov    cl,0x42
  42c755:	sbb    eax,ecx
  42c757:	jecxz  0x42c7a2
  42c759:	call   0x2a420cac
  42c75e:	adc    eax,DWORD PTR [eax+0x0]
  42c761:	add    BYTE PTR [eax],al
  42c763:	add    ch,ah
  42c765:	xchg   BYTE PTR [esi],al
  42c767:	mov    dh,0x59
  42c769:	das    
  42c76a:	push   es
  42c76b:	mov    dh,0x51
  42c76d:	ss shl al,0x96
  42c771:	scas   al,BYTE PTR es:[edi]
  42c772:	ror    BYTE PTR [ecx-0x388563b5],0x9d
  42c779:	mov    gs,WORD PTR [ebx-0x39]
  42c77c:	pop    ebx
  42c77d:	mov    al,ds:0x358e0000
  42c782:	push   es
  42c783:	mov    dh,0x49
  42c785:	das    
  42c786:	push   es
  42c787:	mov    dh,0x49
  42c789:	ss jp  0x42c7f1
  42c78c:	loop   0x42c7bd
  42c78e:	shl    al,0x56
  42c791:	scas   al,BYTE PTR es:[edi]
  42c792:	mov    ebx,0xf8b01c33
  42c797:	es popa 
  42c799:	mov    ecx,0x818b89bb
  42c79e:	loop   0x42c776
  42c7a0:	int    0x12
  42c7a2:	std    
  42c7a3:	add    BYTE PTR [ecx],cl
  42c7a5:	xrelease lock add DWORD PTR [esi],ebx
  42c7a9:	xor    eax,0x5e754701
  42c7ae:	sub    al,al
  42c7b0:	into   
  42c7b1:	daa    
  42c7b2:	inc    ebp
  42c7b3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c7b5:	repz cld 
  42c7b7:	jmp    0x42c7e5
  42c7b9:	mov    ch,0x64
  42c7bb:	cld    
  42c7bc:	push   ds
  42c7bd:	rol    WORD PTR [eax-0x69],0xf3
  42c7c2:	lock inc edi
  42c7c4:	and    eax,0x488c49
  42c7c9:	add    BYTE PTR [edi],bh
  42c7cb:	mov    ch,0xe0
  42c7cd:	add    DWORD PTR [edi+0x6b],edx
  42c7d0:	in     eax,dx
  42c7d1:	movups xmm5,XMMWORD PTR [eax]
  42c7d4:	sbb    DWORD PTR [ebp+0xe],0x5ebe0630
  42c7db:	sub    BYTE PTR [ebp+0x40],bl
  42c7de:	aaa    
  42c7df:	fwait
  42c7e0:	cmp    cl,BYTE PTR [ecx+0x447c7772]
  42c7e6:	mov    edi,0x3f74be17
  42c7eb:	mov    bl,0xe2
  42c7ed:	cli    
  42c7ee:	test   al,0x61
  42c7f0:	jl     0x42c836
  42c7f2:	lahf   
  42c7f3:	mov    DWORD PTR [ebx+0x40c8f012],ebp
  42c7f9:	sbb    BYTE PTR [esi],dh
  42c7fb:	and    al,0x51
  42c7fd:	hlt    
  42c7fe:	cmp    BYTE PTR [edi],dl
  42c800:	(bad)  
  42c802:	sbb    BYTE PTR [edx-0x5db8b68a],0xab
  42c809:	or     eax,DWORD PTR [esi-0x12]
  42c80c:	iret   
  42c80d:	mov    dl,bh
  42c80f:	es ja  0x42c85e
  42c812:	arpl   WORD PTR [esp+edi*2+0x54],bx
  42c816:	inc    ebx
  42c817:	push   esi
  42c818:	mov    bh,0x7b
  42c81a:	and    al,BYTE PTR [esi]
  42c81c:	jmp    FWORD PTR [esi]
  42c81e:	fsub   QWORD PTR gs:[esi]
  42c821:	pop    edx
  42c822:	ror    DWORD PTR [ecx-0x64dca382],cl
  42c828:	std    
  42c829:	or     ch,cl
  42c82b:	mov    dh,BYTE PTR [esi+0x49]
  42c82e:	add    BYTE PTR [eax],al
  42c830:	mov    gs,WORD PTR [bp+di+0x2d0b]
  42c835:	fisubr DWORD PTR [ecx*2+0xe809f23]
  42c83c:	push   cs
  42c83d:	inc    edi
  42c83e:	jecxz  0x42c83a
  42c840:	jb     0x42c7eb
  42c842:	jbe    0x42c890
  42c844:	add    eax,DWORD PTR [ebp+0x48791438]
  42c84a:	daa    
  42c84b:	enter  0x1140,0x8c
  42c84f:	in     al,dx
  42c850:	call   0xd3bf47f3
  42c855:	popf   
  42c856:	repnz test BYTE PTR [ebp+0x34],ch
  42c85a:	cld    
  42c85b:	add    esi,DWORD PTR [edi]
  42c85d:	mov    ebp,0x7c01e83c
  42c862:	push   esp
  42c863:	sub    BYTE PTR [esi+0x5d28f3f9],ch
  42c869:	sbb    BYTE PTR [edi],dh
  42c86b:	or     bh,BYTE PTR [esi+ebx*8]
  42c86e:	(bad)  
  42c86f:	js     0x42c86f
  42c871:	arpl   bx,sp
  42c873:	lods   eax,DWORD PTR ds:[esi]
  42c874:	sub    al,0x3a
  42c876:	icebp  
  42c877:	mov    ss:0x8c40cd21,eax
  42c87d:	icebp  
  42c87e:	repz sub dh,dl
  42c881:	aas    
  42c882:	adc    al,0xe1
  42c884:	cdq    
  42c885:	dec    edx
  42c886:	pop    edi
  42c887:	ds sti 
  42c889:	mov    al,0xa7
  42c88b:	jo     0x42c8cd
  42c88d:	imul   ebx,DWORD PTR ds:0xb735e6fc,0xffffffba
  42c894:	add    BYTE PTR [eax],al
  42c896:	idiv   DWORD PTR [ecx+ebx*1-0xd8adfb8]
  42c89d:	je     0x42c8f5
  42c89f:	lods   eax,DWORD PTR ds:[esi]
  42c8a0:	pop    edx
  42c8a1:	in     eax,0xc9
  42c8a3:	sub    BYTE PTR [eax+0x4],bl
  42c8a6:	sub    al,0xb1
  42c8a8:	or     dl,bh
  42c8aa:	cmp    eax,0x3346fea7
  42c8af:	aaa    
  42c8b0:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8b2:	and    BYTE PTR [edi+0x507b7932],ah
  42c8b8:	test   al,0x7a
  42c8ba:	jae    0x42c90c
  42c8bc:	and    ebp,DWORD PTR [edi+0x5b]
  42c8bf:	mov    ebx,0xa7375a32
  42c8c4:	pushf  
  42c8c5:	pop    es
  42c8c6:	mov    eax,0x1f6f0a7a
  42c8cb:	inc    BYTE PTR [edx]
  42c8cd:	outs   dx,DWORD PTR ds:[esi]
  42c8ce:	inc    edi
  42c8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8d0:	je     0x42c8c9
  42c8d2:	in     eax,dx
  42c8d3:	and    BYTE PTR [ecx],al
  42c8d5:	loope  0x42c8d3
  42c8d7:	js     0x42c8c5
  42c8d9:	out    dx,al
  42c8da:	shr    ebp,cl
  42c8dc:	sub    DWORD PTR [ecx-0x8305035],0x34
  42c8e3:	xor    al,0x36
  42c8e5:	xor    al,0xcf
  42c8e7:	adc    eax,0xac5cc0d5
  42c8ec:	stc    
  42c8ed:	(bad)  
  42c8ee:	das    
  42c8ef:	clc    
  42c8f0:	cld    
  42c8f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8f2:	imul   eax,DWORD PTR [eax+0x0],0x7e3434e9
  42c8f9:	mov    al,0x0
  42c8fb:	add    BYTE PTR ds:0xfae22028,dh
  42c901:	pop    ss
  42c902:	or     ch,BYTE PTR [edx+0x15]
  42c905:	lods   eax,DWORD PTR ds:[esi]
  42c906:	stc    
  42c907:	xchg   esi,eax
  42c908:	mov    esp,esp
  42c90a:	add    eax,0xf4f94c2a
  42c90f:	div    cl
  42c911:	gs stc 
  42c913:	jle    0x42c968
  42c915:	test   eax,0xf7dfdd43
  42c91a:	cld    
  42c91b:	mov    al,0x21
  42c91d:	inc    eax
  42c91e:	jnp    0x42c966
  42c920:	pop    ds
  42c921:	jl     0x42c92c
  42c923:	mov    bl,BYTE PTR gs:[edx+0x27b756f9]
  42c92a:	in     eax,dx
  42c92b:	jmp    0xf657c0ed
  42c930:	mov    cl,0x82
  42c932:	or     eax,0x5bbb34e9
  42c937:	xor    eax,0xfb7b7c4f
  42c93c:	dec    edi
  42c93d:	or     ch,BYTE PTR [ebp-0x66]
  42c940:	daa    
  42c941:	cmp    DWORD PTR [ebx-0xb08a20e],esi
  42c947:	pushf  
  42c948:	and    DWORD PTR [ebp-0x6],esp
  42c94b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c94c:	sub    BYTE PTR [ebx+0x44],ch
  42c94f:	add    BYTE PTR [edx],dl
  42c951:	push   cs
  42c952:	jecxz  0x42c93f
  42c954:	aam    0x2c
  42c956:	inc    eax
  42c957:	jl     0x42c9ac
  42c959:	jno    0x42c9c8
  42c95b:	adc    esp,DWORD PTR [ebp+0x7608ee]
  42c961:	add    al,cl
  42c963:	ds enter 0x4741,0x2
  42c968:	pop    ebp
  42c969:	cmp    ecx,DWORD PTR [edi-0x18e279bf]
  42c96f:	xchg   ecx,eax
  42c970:	test   BYTE PTR [ebx+0xef97ffb],0x13
  42c977:	or     ch,ch
  42c979:	(bad)  
  42c97a:	jmp    0x7a3f25c4
  42c97f:	scas   eax,DWORD PTR es:[edi]
  42c980:	into   
  42c981:	neg    ecx
  42c983:	xchg   ecx,eax
  42c984:	add    BYTE PTR [ebp+0x72],0xf1
  42c988:	xchg   DWORD PTR [ebp+0x72],eax
  42c98b:	xchg   edx,eax
  42c98c:	je     0x42c9b2
  42c98e:	adc    eax,0xb90063e9
  42c993:	or     ebx,DWORD PTR ds:0x7491a58b
  42c999:	sbb    BYTE PTR [eax-0x6f],al
  42c99c:	je     0x42c9ae
  42c99e:	leave  
  42c99f:	or     cl,BYTE PTR ds:0xe93973ff
  42c9a5:	or     edx,edi
  42c9a7:	nop
  42c9a8:	test   BYTE PTR [ebx-0x2d],0x6f
  42c9ac:	push   es
  42c9ad:	test   DWORD PTR [esi-0x55],edx
  42c9b0:	stc    
  42c9b1:	push   DWORD PTR ds:0x4273fcf3
  42c9b7:	xchg   edi,eax
  42c9b8:	xchg   esi,eax
  42c9b9:	imul   DWORD PTR [ecx-0x6f]
  42c9bc:	xor    bl,BYTE PTR [esi-0x26]
  42c9bf:	inc    ecx
  42c9c0:	jp     0x42c969
  42c9c2:	push   esi
  42c9c3:	xchg   ecx,eax
  42c9c4:	test   BYTE PTR [edi],0x0
  42c9c7:	add    BYTE PTR [eax+0x35],ah
  42c9ca:	cmp    dh,dh
  42c9cc:	aaa    
  42c9cd:	fdiv   st,st(5)
  42c9cf:	add    BYTE PTR [ebx+0x27418aa2],al
  42c9d5:	sahf   
  42c9d6:	xchg   edi,eax
  42c9d7:	push   edx
  42c9d8:	and    DWORD PTR ss:[ecx],edx
  42c9db:	or     BYTE PTR [ebp+edx*2-0x66d4c7fd],dh
  42c9e2:	push   cs
  42c9e3:	test   DWORD PTR [ebx+0x7f],eax
  42c9e6:	fdivp  st(2),st
  42c9e8:	fimul  WORD PTR [ebx]
  42c9ea:	(bad)  
  42c9eb:	cli    
  42c9ec:	ror    BYTE PTR [ebp+0x1a364297],0xc7
  42c9f3:	std    
  42c9f4:	ins    DWORD PTR es:[edi],dx
  42c9f5:	fsub   st(2),st
  42c9f7:	in     eax,0x38
  42c9f9:	sbb    eax,0x25300147
  42c9fe:	dec    edi
  42c9ff:	(bad)  
  42ca00:	ja     0x42ca7c
  42ca02:	add    eax,0x49237607
  42ca07:	cld    
  42ca08:	mov    ah,0xcd
  42ca0a:	add    ch,cl
  42ca0c:	mov    edx,0x28fffd9a
  42ca11:	std    
  42ca12:	inc    esi
  42ca13:	add    DWORD PTR [eax+0x65],eax
  42ca16:	aaa    
  42ca17:	(bad)  
  42ca18:	mov    ch,0x2f
  42ca1a:	loope  0x42ca1b
  42ca1c:	ja     0x42c9d8
  42ca1e:	add    eax,0xb3e97507
  42ca23:	jg     0x42ca73
  42ca25:	dec    ecx
  42ca26:	push   cs
  42ca27:	xchg   esp,eax
  42ca28:	jne    0x42ca4d
  42ca2a:	cmp    esp,ebp
  42ca2c:	add    BYTE PTR [eax],al
  42ca2e:	dec    esp
  42ca2f:	pusha  
  42ca30:	and    DWORD PTR [ebx+edi*1-0x66],0xffffffc6
  42ca35:	inc    esp
  42ca36:	daa    
  42ca37:	(bad)  
  42ca38:	std    
  42ca39:	push   DWORD PTR [edi]
  42ca3b:	(bad)  
  42ca3d:	push   ebx
  42ca3e:	fs dec ebp
  42ca40:	mov    DWORD PTR ds:[edx+0x5d],esi
  42ca44:	lea    eax,[ebx+edx*1+0x35]
  42ca48:	pmullw mm1,QWORD PTR [ecx+0x50031c19]
  42ca4f:	je     0x42c9f8
  42ca51:	mov    WORD PTR [ebx-0x5c],?
  42ca54:	mov    ds:0x3a3377ee,al
  42ca59:	dec    edx
  42ca5a:	xor    esi,DWORD PTR ss:[edx]
  42ca5d:	push   edx
  42ca5e:	loope  0x42ca16
  42ca60:	mov    edi,ds
  42ca62:	fdiv   DWORD PTR [edi+eax*1+0xb]
  42ca66:	hlt    
  42ca67:	stc    
  42ca68:	xlat   BYTE PTR ds:[ebx]
  42ca69:	add    esi,DWORD PTR [edi]
  42ca6b:	xor    al,0xe8
  42ca6d:	or     al,0xf6
  42ca6f:	(bad)  
  42ca70:	ins    DWORD PTR es:[edi],dx
  42ca71:	(bad)  
  42ca72:	jo     0x42c9fc
  42ca74:	data16 jecxz 0x42caae
  42ca77:	lods   eax,DWORD PTR ds:[esi]
  42ca78:	xor    al,0xf0
  42ca7a:	cmp    eax,0x2586fe2
  42ca7f:	hlt    
  42ca80:	out    0x10,eax
  42ca82:	fnsave [ebx+ebp*1+0x2b33f73f]
  42ca89:	mov    edi,ebx
  42ca8b:	lahf   
  42ca8c:	jo     0x42cad5
  42ca8e:	jg     0x42ca49
  42ca90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca91:	push   edi
  42ca92:	add    BYTE PTR [eax],al
  42ca94:	das    
  42ca95:	fmul   QWORD PTR [edx+0x71236de1]
  42ca9b:	inc    edi
  42ca9c:	outs   dx,DWORD PTR ds:[esi]
  42ca9d:	xor    esi,DWORD PTR [edx]
  42ca9f:	stc    
  42caa0:	cmc    
  42caa1:	test   eax,0xad37fc2c
  42caa6:	adc    al,0xd8
  42caa8:	cmp    eax,0x37044bb8
  42caad:	xor    al,0x6f
  42caaf:	push   edx
  42cab0:	pop    es
  42cab1:	xor    ebx,DWORD PTR [edx+0x36672610]
  42cab7:	mov    eax,DWORD PTR [ebx+0x2b4f6ea8]
  42cabd:	div    BYTE PTR [eax+0x37]
  42cac0:	dec    ebx
  42cac1:	pop    edi
  42cac2:	add    DWORD PTR [ebx],esp
  42cac4:	xchg   edi,eax
  42cac5:	push   ecx
  42cac6:	out    0xea,al
  42cac8:	sub    esi,DWORD PTR [edx+0x3e]
  42cacb:	loop   0x42cb43
  42cacd:	adc    BYTE PTR [edx],cl
  42cacf:	push   0xffffffed
  42cad1:	inc    ebx
  42cad2:	add    ecx,ebp
  42cad4:	daa    
  42cad5:	out    0xd,al
  42cad7:	bound  eax,QWORD PTR [ebp+0x473f0a64]
  42cadd:	cmp    bh,BYTE PTR [esi]
  42cadf:	shl    BYTE PTR [ecx-0x58],0x9
  42cae3:	ins    DWORD PTR es:[edi],dx
  42cae4:	push   edi
  42cae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cae6:	stc    
  42cae7:	out    dx,al
  42cae8:	xlat   BYTE PTR ds:[ebx]
  42cae9:	not    DWORD PTR [edx+esi*2]
  42caec:	jns    0x42ca8e
  42caee:	aaa    
  42caef:	sub    al,0xbf
  42caf1:	sbb    al,0xd4
  42caf3:	adc    ch,bl
  42caf5:	sub    eax,0xce85
  42cafa:	mov    ds:0x96af99d,al
  42caff:	nop
  42cb00:	add    BYTE PTR [eax-0xf],dh
  42cb03:	inc    edi
  42cb04:	or     ch,BYTE PTR [esi+ecx*1+0x32]
  42cb08:	add    ecx,ebp
  42cb0a:	mov    ebp,0x7ce2fcff
  42cb0f:	pop    ds
  42cb10:	cmp    dl,ah
  42cb12:	test   BYTE PTR [edi],0x6e
  42cb15:	repz daa 
  42cb17:	out    0xd,al
  42cb19:	bound  eax,QWORD PTR [esi]
  42cb1b:	or     bh,BYTE PTR fs:[edi]
  42cb1e:	cmp    BYTE PTR [edx],bh
  42cb20:	cmp    BYTE PTR [edi+edi*2],ch
  42cb23:	es and al,0x2a
  42cb26:	push   esi
  42cb27:	not    DWORD PTR [eax+esi*4]
  42cb2a:	stc    
  42cb2b:	inc    edi
  42cb2c:	jge    0x42cb78
  42cb2e:	pop    ebx
  42cb2f:	dec    eax
  42cb30:	xchg   BYTE PTR [edi-0x223f4720],ah
  42cb36:	inc    ebx
  42cb37:	imul   ebx,DWORD PTR [ecx+eiz*8-0x72],0x67002e2e
  42cb3f:	test   BYTE PTR [edi-0x3fbf3db2],0xf
  42cb46:	xchg   ecx,eax
  42cb47:	add    al,0xee
  42cb49:	jmp    DWORD PTR [ecx-0x48]
  42cb4c:	jl     0x42cb3e
  42cb4e:	push   ds
  42cb4f:	inc    ebp
  42cb50:	test   BYTE PTR [eax+0x3bf69424],ch
  42cb56:	ret    
  42cb57:	add    DWORD PTR [esi],0xf67bd782
  42cb5d:	inc    DWORD PTR [eax]
  42cb5f:	add    BYTE PTR [ebp-0x6],ah
  42cb62:	and    al,0x40
  42cb64:	addr16 cli 
  42cb66:	and    al,0xff
  42cb68:	pop    ebx
  42cb69:	pop    ecx
  42cb6a:	adc    bh,0xb4
  42cb6d:	xor    eax,0xad3275f6
  42cb72:	ret    0x6bff
  42cb75:	mov    al,ds:0xa85bff4f
  42cb7a:	div    BYTE PTR [ebp-0x6e]
  42cb7d:	xor    BYTE PTR [eax+ecx*1-0x7a],0x3d
  42cb82:	jecxz  0x42cb83
  42cb84:	loope  0x42cb31
  42cb86:	mov    ecx,0x153d0b0f
  42cb8b:	add    BYTE PTR [esi-0x2da2ce12],bl
  42cb91:	add    eax,0x7bbfe9d5
  42cb96:	idiv   bh
  42cb98:	adc    eax,0x1bc7fd03
  42cb9d:	pushf  
  42cb9e:	add    BYTE PTR [eax],al
  42cba0:	pop    esi
  42cba1:	xor    eax,0x14ff97a
  42cba6:	and    BYTE PTR [ebx],bh
  42cba8:	inc    eax
  42cba9:	and    al,0x6
  42cbab:	adc    DWORD PTR [edx+ecx*4-0x38be000a],0x2
  42cbb3:	inc    ebx
  42cbb4:	pop    ss
  42cbb5:	add    esi,ebp
  42cbb7:	getsec 
  42cbb9:	cmpxchg esp,esi
  42cbbc:	xor    dl,dh
  42cbbe:	fld    DWORD PTR [ebx+eax*2+0x26]
  42cbc2:	push   eax
  42cbc3:	cld    
  42cbc4:	add    BYTE PTR [eax],al
  42cbc6:	pop    esi
  42cbc7:	shl    cl,1
  42cbc9:	jns    0x42cbc3
  42cbcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbcc:	lds    ecx,FWORD PTR [edx]
  42cbce:	mov    ebx,0x8fae7a1
  42cbd3:	push   cs
  42cbd4:	pusha  
  42cbd5:	in     al,dx
  42cbd6:	aaa    
  42cbd7:	and    al,0x50
  42cbd9:	adc    al,0x28
  42cbdb:	adc    dh,cl
  42cbdd:	adc    BYTE PTR [edi],dh
  42cbdf:	mov    ecx,DWORD PTR [esp+ebx*2+0x7cc575eb]
  42cbe6:	and    eax,0x646c3b76
  42cbeb:	jle    0x42cbf7
  42cbed:	mov    dl,0x3c
  42cbef:	in     al,0x50
  42cbf1:	hlt    
  42cbf2:	inc    ebx
  42cbf3:	xor    BYTE PTR [esi],bh
  42cbf5:	sti    
  42cbf6:	jp     0x42cb9f
  42cbf8:	sbb    al,0x45
  42cbfa:	and    eax,DWORD PTR [edi]
  42cbfc:	out    0xe6,eax
  42cbfe:	dec    ebp
  42cbff:	push   ss
  42cc00:	inc    esp
  42cc01:	jl     0x42cbb5
  42cc03:	retf   0xf51
  42cc06:	pop    esp
  42cc07:	inc    eax
  42cc08:	or     eax,0xcc9e2972
  42cc0d:	inc    eax
  42cc0e:	mov    esi,0x76374140
  42cc13:	test   eax,0xc189818a
  42cc18:	fidivr DWORD PTR [esi-0x6]
  42cc1b:	mov    edx,0xd1ba0afd
  42cc20:	in     al,dx
  42cc21:	cli    
  42cc22:	push   0x30fc4075
  42cc27:	or     eax,0xf53e
  42cc2c:	pop    eax
  42cc2d:	sub    DWORD PTR [edi-0x73b4e4bc],eax
  42cc33:	inc    esp
  42cc34:	adc    esi,DWORD PTR [ebx+eiz*2]
  42cc37:	pop    eax
  42cc38:	sbb    ebp,DWORD PTR [ebp-0x5ec896ce]
  42cc3e:	fdiv   st(7),st
  42cc40:	mov    ecx,0x4f584a6b
  42cc45:	push   es
  42cc46:	inc    ebx
  42cc47:	pop    eax
  42cc48:	inc    edi
  42cc49:	lahf   
  42cc4a:	mov    ah,0xf
  42cc4c:	sbb    al,0x2a
  42cc4e:	loopne 0x42cc3b
  42cc50:	mov    ds:0xb3de2a8d,al
  42cc55:	je     0x42cc49
  42cc57:	mov    BYTE PTR [edx+0x7003e843],dl
  42cc5d:	pop    ebx
  42cc5e:	mov    ch,0xdf
  42cc60:	popa   
  42cc61:	mov    BYTE PTR [eax],al
  42cc63:	or     esp,edx
  42cc65:	lahf   
  42cc66:	add    cl,BYTE PTR [esi]
  42cc68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc69:	out    dx,eax
  42cc6a:	call   0xe63a717d
  42cc6f:	(bad)  
  42cc70:	xlat   BYTE PTR ds:[ebx]
  42cc71:	sub    al,0xdf
  42cc73:	retf   
  42cc74:	mov    cl,0x75
  42cc76:	stos   BYTE PTR es:[edi],al
  42cc77:	inc    edi
  42cc78:	shl    DWORD PTR ds:0xad3703e8,cl
  42cc7e:	sub    al,0xe0
  42cc80:	xor    DWORD PTR [edi-0x1a],esi
  42cc83:	jmp    0xe62c:0x3e834be
  42cc8a:	sub    al,BYTE PTR [ebx]
  42cc8c:	sub    al,0xe6
  42cc8e:	sbb    al,BYTE PTR [edx]
  42cc90:	add    BYTE PTR [eax],al
  42cc92:	jbe    0x42cc29
  42cc94:	fisttp WORD PTR [eax]
  42cc96:	jno    0x42cc45
  42cc98:	xor    al,0xdc
  42cc9a:	push   ecx
  42cc9b:	ins    DWORD PTR es:[edi],dx
  42cc9c:	(bad)  
  42cc9d:	ret    
  42cc9e:	clc    
  42cc9f:	pop    esi
  42cca0:	sub    BYTE PTR [ebx+0x77da9ffb],cl
  42cca6:	ja     0x42cc5b
  42cca8:	stos   BYTE PTR es:[edi],al
  42cca9:	add    DWORD PTR [esi-0x1476740f],ebp
  42ccaf:	fwait
  42ccb0:	add    BYTE PTR [edx+0x794372dc],al
  42ccb6:	xor    al,0x34
  42ccb8:	add    ecx,ebp
  42ccba:	daa    
  42ccbb:	je     0x42cc44
  42ccbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ccbe:	pop    eax
  42ccbf:	repnz in eax,0xbb
  42ccc2:	inc    edi
  42ccc3:	je     0x42cd05
  42ccc5:	pusha  
  42ccc6:	jo     0x42cc6c
  42ccc8:	in     eax,0x3b
  42ccca:	inc    esi
  42cccb:	ins    DWORD PTR es:[edi],dx
  42cccc:	aas    
  42cccd:	cli    
  42ccce:	hlt    
  42cccf:	stos   DWORD PTR es:[edi],eax
  42ccd0:	dec    ebx
  42ccd1:	cmp    DWORD PTR [edi+esi*8-0xbe05904],edi
  42ccd8:	or     DWORD PTR [edi+0x72],ebx
  42ccdb:	xor    eax,0x9e42570a
  42cce0:	ror    BYTE PTR [eax],0x43
  42cce3:	dec    edi
  42cce4:	shl    DWORD PTR [esi],0x70
  42cce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cce8:	(bad)  
  42cce9:	call   0x33490122
  42ccee:	into   
  42ccef:	scas   al,BYTE PTR es:[edi]
  42ccf0:	mov    esp,DWORD PTR [ecx+0x6abfb5fb]
  42ccf6:	add    BYTE PTR [eax],al
  42ccf8:	shl    DWORD PTR [ebx],cl
  42ccfa:	mov    BYTE PTR [edi+eax*8],ch
  42ccfd:	sub    DWORD PTR [ebx+0x40ff9468],edi
  42cd03:	jmp    0x81caa74b
  42cd08:	imul   esi,esp,0xf7ac2e00
  42cd0e:	cld    
  42cd0f:	jo     0x42ccfa
  42cd11:	fwait
  42cd12:	and    DWORD PTR [eax-0x5147d417],0x6b
  42cd19:	cdq    
  42cd1a:	jns    0x42cd8c
  42cd1c:	icebp  
  42cd1d:	fwait
  42cd1e:	or     DWORD PTR [edi-0x7d],edx
  42cd21:	icebp  
  42cd22:	xchg   DWORD PTR [edi+ecx*4],edi
  42cd25:	mov    bh,0xc0
  42cd27:	fidivr WORD PTR [edx+0x4efffe11]
  42cd2d:	xor    bh,BYTE PTR [edx-0x3e]
  42cd30:	mov    ah,0xb3
  42cd32:	mulss  xmm6,DWORD PTR [edi+0x325e10f1]
  42cd3a:	mul    BYTE PTR [ebx+eax*8]
  42cd3d:	call   0x42cb:0x434e42a9
  42cd44:	inc    ebp
  42cd45:	jb     0x42cd4d
  42cd47:	mov    edi,ss
  42cd49:	xor    al,0x1
  42cd4b:	add    BYTE PTR [edi+0xdeb1566],ah
  42cd51:	inc    ebp
  42cd52:	retf   
  42cd53:	inc    edx
  42cd54:	xchg   ebp,eax
  42cd55:	out    dx,eax
  42cd56:	ins    BYTE PTR es:[edi],dx
  42cd57:	cmp    esp,DWORD PTR [edi]
  42cd59:	xor    BYTE PTR [edx+0x4c],bh
  42cd5c:	add    BYTE PTR [eax],al
  42cd5e:	or     DWORD PTR [edx],esi
  42cd60:	add    DWORD PTR [ebx+0x73f99998],eax
  42cd66:	jmp    0x8c99:0xc0ff010b
  42cd6d:	push   esi
  42cd6e:	fisubr DWORD PTR [edx+edi*4-0x911c118]
  42cd75:	jmp    DWORD PTR [ebx+0x71]
  42cd78:	push   es
  42cd79:	test   edi,eax
  42cd7b:	ins    DWORD PTR es:[edi],dx
  42cd7c:	idiv   bh
  42cd7e:	inc    ebp
  42cd7f:	repz cld 
  42cd81:	jmp    0x42cdb6
  42cd83:	lods   eax,DWORD PTR ds:[esi]
  42cd84:	dec    edi
  42cd85:	sbb    al,0x35
  42cd87:	outs   dx,BYTE PTR ds:[esi]
  42cd88:	xor    bl,cl
  42cd8a:	add    DWORD PTR [ebx+eax*4+0x2cea340b],ebx
  42cd91:	jne    0x42cd16
  42cd93:	mov    dh,0xf3
  42cd95:	add    DWORD PTR [ecx-0x260c2ce3],ebx
  42cd9b:	jns    0x42cd20
  42cd9d:	dec    ebx
  42cd9e:	(bad)  
  42cd9f:	aas    
  42cda0:	inc    edi
  42cda1:	sub    eax,0xf3c71d89
  42cda6:	aaa    
  42cda7:	(bad)  
  42cda8:	aad    0x86
  42cdaa:	cli    
  42cdab:	ret    0xfb41
  42cdae:	cli    
  42cdaf:	jle    0x42cdcd
  42cdb1:	inc    ebp
  42cdb2:	inc    ebx
  42cdb3:	popf   
  42cdb4:	jbe    0x42cd9e
  42cdb6:	jno    0x42cd41
  42cdb8:	std    
  42cdb9:	(bad)  
  42cdba:	mov    esp,0x67276945
  42cdbf:	push   edx
  42cdc0:	mov    ebx,0xb000000a
  42cdc5:	dec    ecx
  42cdc6:	sar    edx,1
  42cdc8:	xor    BYTE PTR [edx-0x7702174b],cl
  42cdce:	std    
  42cdcf:	(bad)  
  42cdd0:	clc    
  42cdd1:	iret   
  42cdd2:	jmp    0xfdce04d7
  42cdd7:	jle    0x42cde8
  42cdd9:	mov    WORD PTR [esi],es
  42cddb:	mov    ebp,cs
  42cddd:	mov    ch,bh
  42cddf:	(bad)  
  42cde0:	cmp    al,0x75
  42cde2:	popa   
  42cde3:	or     esi,DWORD PTR [eax+ebp*8-0x6a0f0530]
  42cdea:	(bad)  
  42cdeb:	push   cs
  42cdec:	je     0x42cdf8
  42cdee:	fild   DWORD PTR ds:0x8a066d6b
  42cdf4:	mov    ch,0x99
  42cdf6:	(bad)  
  42cdf7:	cli    
  42cdf8:	mov    ah,0xa0
  42cdfa:	add    DWORD PTR [edx+0x26],edi
  42cdfd:	or     bl,bl
  42cdff:	or     al,0x4b
  42ce01:	sub    al,BYTE PTR [ebp+esi*8-0x2754e]
  42ce08:	inc    eax
  42ce09:	adc    BYTE PTR [edx-0x11],ah
  42ce0c:	test   al,0x6d
  42ce0e:	cmp    BYTE PTR [ecx+0x17],0x8b
  42ce12:	push   es
  42ce13:	test   DWORD PTR ds:0x90fad6da,edx
  42ce19:	dec    edi
  42ce1a:	icebp  
  42ce1b:	cmp    dl,dh
  42ce1d:	xchg   BYTE PTR [edi-0x40],dl
  42ce20:	mov    ?,WORD PTR [ebx]
  42ce22:	sbb    eax,0xdf343706
  42ce27:	cmp    DWORD PTR [eax],eax
  42ce29:	add    bl,ah
  42ce2b:	and    BYTE PTR [edx+0x152a2183],al
  42ce31:	in     eax,dx
  42ce32:	and    DWORD PTR [ecx+0x47f3c289],ecx
  42ce38:	jmp    0x67770540
  42ce3d:	(bad)  [edi]
  42ce3f:	sub    eax,0x9c413b5c
  42ce44:	out    0x1e,eax
  42ce46:	fisttp QWORD PTR [edi]
  42ce48:	jmp    0x42cdd0
  42ce4a:	jo     0x42cdec
  42ce4c:	push   edx
  42ce4d:	fidivr DWORD PTR ds:0xa046f6e2
  42ce53:	sahf   
  42ce54:	lock or dh,BYTE PTR [ebx+0xdda3756]
  42ce5b:	mov    eax,0xb03c232d
  42ce60:	rcl    dh,1
  42ce62:	std    
  42ce63:	fwait
  42ce64:	push   0xe83498dd
  42ce69:	add    edi,DWORD PTR [eax+esi*4]
  42ce6c:	in     al,0xd6
  42ce6e:	in     eax,dx
  42ce6f:	fwait
  42ce70:	or     al,BYTE PTR [eax+0x4b]
  42ce73:	pop    ebp
  42ce74:	lods   eax,DWORD PTR ds:[esi]
  42ce75:	out    dx,eax
  42ce76:	pop    esi
  42ce77:	imul   edx,DWORD PTR [eax],0xe79bd123
  42ce7d:	ret    0x4073
  42ce80:	jmp    0x67770588
  42ce85:	fdiv   QWORD PTR [edi]
  42ce87:	sub    ebp,DWORD PTR [esp+esi*8-0x4e]
  42ce8b:	fwait
  42ce8c:	out    0x1c,eax
  42ce8e:	add    BYTE PTR [eax],al
  42ce90:	or     eax,0xa884db08
  42ce95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce96:	ret    0x2dd9
  42ce99:	loop   0x42ce71
  42ce9b:	inc    esp
  42ce9c:	adc    BYTE PTR [esi+0x44f8e000],bl
  42cea2:	jle    0x42ce57
  42cea4:	pop    ebx
  42cea5:	and    BYTE PTR ds:0xbb5968,cl
  42ceab:	jmp    0xa4c6fde4
  42ceb0:	sbb    DWORD PTR [esi+0x40208ef9],0x1d672c38
  42ceba:	aam    0x90
  42cebc:	pop    ebx
  42cebd:	xor    al,0x1
  42cebf:	jmp    0xe857bf3b
  42cec4:	xor    al,0x34
  42cec6:	add    DWORD PTR [edx+0x5b],ebp
  42cec9:	xor    al,0xa
  42cecb:	ins    DWORD PTR es:[edi],dx
  42cecc:	jmp    0x42cf01
  42cece:	add    ecx,ebp
  42ced0:	dec    ebx
  42ced1:	(bad)  
  42ced2:	ins    BYTE PTR es:[edi],dx
  42ced3:	fidivr WORD PTR [ebx-0x1b9121e]
  42ced9:	sub    eax,0x1b7bdab3
  42cede:	mul    ebx
  42cee0:	pusha  
  42cee1:	inc    ecx
  42cee2:	jle    0x42cf17
  42cee4:	cmp    BYTE PTR [edi],ch
  42cee6:	mov    edi,DWORD PTR [ecx+eiz*8-0x63]
  42ceea:	stc    
  42ceeb:	push   0xe900b011
  42cef0:	xor    al,0x2f
  42cef2:	test   DWORD PTR [eax+0x0],esp
  42cef5:	add    BYTE PTR [ecx],cl
  42cef7:	sahf   
  42cef8:	stc    
  42cef9:	push   es
  42cefa:	sbb    BYTE PTR [eax+0x38],al
  42cefd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cefe:	loopne 0x42cf1c
  42cf00:	rol    BYTE PTR [eax],1
  42cf02:	dec    edi
  42cf03:	xor    al,0x1
  42cf05:	jmp    0xe857bf01
  42cf0a:	xor    al,0x34
  42cf0c:	add    DWORD PTR [edx-0x74],ebp
  42cf0f:	xor    ecx,DWORD PTR [edx]
  42cf11:	gs mov al,0x33
  42cf14:	add    ecx,ebp
  42cf16:	inc    ebx
  42cf17:	(bad)  
  42cf18:	ins    BYTE PTR es:[edi],dx
  42cf19:	add    BYTE PTR [ecx-0x2e0c9251],ah
  42cf1f:	jnp    0x42cf27
  42cf21:	mov    dh,0x6d
  42cf23:	out    dx,eax
  42cf24:	jns    0x42cf20
  42cf26:	xchg   esp,eax
  42cf27:	sub    ecx,DWORD PTR [ebp-0x98463aa]
  42cf2d:	adc    DWORD PTR [ecx+esi*1+0x78df0c77],0xffffff84
  42cf35:	add    BYTE PTR [esi+0x36],cl
  42cf38:	push   es
  42cf39:	test   DWORD PTR [ebx],ecx
  42cf3b:	xor    dh,0xff
  42cf3e:	rcr    DWORD PTR [ecx+0x15],1
  42cf41:	cmp    DWORD PTR [ebx],ebx
  42cf43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf44:	ja     0x42cf17
  42cf46:	mov    bh,0x5e
  42cf48:	add    BYTE PTR [eax],al
  42cf4a:	dec    esi
  42cf4b:	aas    
  42cf4c:	retf   
  42cf4d:	inc    edx
  42cf4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf4f:	dec    edx
  42cf50:	adc    eax,0x8d2c5c3b
  42cf55:	dec    edx
  42cf56:	(bad)  
  42cf58:	add    ebx,ebp
  42cf5a:	add    BYTE PTR [eax],al
  42cf5c:	or     eax,0x3542cb41
  42cf61:	pop    esi
  42cf62:	ins    DWORD PTR es:[edi],dx
  42cf63:	setge  BYTE PTR [edi+0xc]
  42cf67:	add    BYTE PTR [esi],cl
  42cf69:	sub    eax,0x63850baf
  42cf6e:	xor    eax,0x3aa6e28a
  42cf73:	cmp    BYTE PTR [edi],0x99
  42cf76:	push   es
  42cf77:	test   edi,edx
  42cf79:	jg     0x42cf71
  42cf7b:	push   DWORD PTR [ecx]
  42cf7d:	pop    edx
  42cf7e:	adc    eax,0x77899b39
  42cf83:	fnstenv [edi]
  42cf85:	sahf   
  42cf86:	add    BYTE PTR [eax],al
  42cf88:	into   
  42cf89:	inc    eax
  42cf8a:	retf   
  42cf8b:	inc    edx
  42cf8c:	inc    edi
  42cf8d:	arpl   WORD PTR ds:0x8d31dc3b,dx
  42cf93:	push   cs
  42cf94:	aaa    
  42cf95:	mov    ebp,?
  42cf97:	dec    DWORD PTR [esi+ecx*4+0x35f5ce0e]
  42cf9e:	xor    ebp,DWORD PTR [eax+eax*2+0xe]
  42cfa2:	jmp    0x42cfb0
  42cfa4:	aaa    
  42cfa5:	mov    eax,DWORD PTR [edx]
  42cfa7:	mov    dl,0x2c
  42cfa9:	push   ss
  42cfaa:	sub    esi,DWORD PTR [ebp*4-0x48c10b61]
  42cfb1:	lods   al,BYTE PTR ds:[esi]
  42cfb2:	add    BYTE PTR [ebx],cl
  42cfb4:	mov    bl,0xd0
  42cfb6:	sar    edx,cl
  42cfb8:	pusha  
  42cfb9:	stos   BYTE PTR es:[edi],al
  42cfba:	aas    
  42cfbb:	adc    al,0x1e
  42cfbd:	dec    eax
  42cfbe:	icebp  
  42cfbf:	jns    0x42cfc1
  42cfc1:	add    BYTE PTR [esi-0x3c],ch
  42cfc4:	mov    bh,0xff
  42cfc6:	dec    eax
  42cfc7:	mov    ecx,DWORD PTR [esi]
  42cfc9:	into   
  42cfca:	cmc    
  42cfcb:	adc    esi,DWORD PTR [eax]
  42cfcd:	adc    al,0xfc
  42cfcf:	dec    esp
  42cfd0:	add    cl,BYTE PTR [ebp+eax*1+0x1cfffd8b]
  42cfd7:	mov    cs,WORD PTR [esi]
  42cfd9:	into   
  42cfda:	jne    0x42d022
  42cfdc:	xor    ebp,DWORD PTR [eax+ebp*1+0xe]
  42cfe0:	mov    bh,0xb
  42cfe2:	aaa    
  42cfe3:	mov    eax,DWORD PTR [edx]
  42cfe5:	mov    dl,0x3c
  42cfe7:	push   ss
  42cfe8:	sub    esi,DWORD PTR [ebp*4-0x48c10b8a]
  42cfef:	sub    eax,DWORD PTR [ebx+ecx*1]
  42cff2:	mov    edx,0xe8fad41b
  42cff7:	inc    ecx
  42cff8:	inc    eax
  42cff9:	adc    al,0x1e
  42cffb:	shr    cl,1
  42cffd:	jns    0x42cffd
  42cfff:	inc    ebx
  42d000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d001:	call   eax
  42d003:	mov    cl,BYTE PTR [esi]
  42d005:	into   
  42d006:	jne    0x42d01c
  42d008:	xor    BYTE PTR [esp+edi*8],dl
  42d00b:	dec    esp
  42d00c:	add    cl,BYTE PTR [ecx+eiz*4+0x3703e833]
  42d013:	(bad)  
  42d014:	out    0x12,al
  42d016:	jns    0x42d00d
  42d018:	push   cs
  42d019:	adc    ebp,DWORD PTR ss:[ecx]
  42d01c:	addr16 jne 0x42d04b
  42d01f:	xor    al,0xe8
  42d021:	push   es
  42d022:	lds    ebp,FWORD PTR [edi+ebp*2]
  42d025:	sub    eax,0xae430000
  42d02a:	jecxz  0x42d020
  42d02c:	inc    ecx
  42d02d:	mov    ah,0xc8
  42d02f:	add    al,0x2c
  42d031:	mov    al,0x3c
  42d033:	aad    0x6d
  42d035:	cwde   
  42d036:	call   0xdef0:0x2d5b4340
  42d03d:	jp     0x42d0bd
  42d03f:	imul   ecx,DWORD PTR [eax],0xffffff86
  42d042:	and    eax,0xbf3feb8d
  42d047:	ror    esp,0x12
  42d04a:	jg     0x42d04e
  42d04c:	adc    BYTE PTR [esi+0x7dd1b25],al
  42d052:	repz sbb BYTE PTR [edi+0x3c03e828],0xde
  42d05a:	fimul  WORD PTR [edx+0x75e6086]
  42d060:	inc    esi
  42d061:	repz addr16 in al,0x40
  42d065:	daa    
  42d066:	and    eax,DWORD PTR gs:[esi]
  42d069:	cwde   
  42d06a:	xor    dl,dh
  42d06c:	jnp    0x42d0ae
  42d06e:	icebp  
  42d06f:	inc    eax
  42d070:	and    edx,DWORD PTR [esi]
  42d072:	inc    ecx
  42d073:	jmp    0x1be:0x41366321
  42d07a:	cld    
  42d07b:	sbb    ah,BYTE PTR [ecx-0x261543e8]
  42d081:	bound  edx,QWORD PTR [esi]
  42d083:	inc    ecx
  42d084:	or     dh,dh
  42d086:	mov    eax,DWORD PTR [esi]
  42d088:	dec    eax
  42d089:	pusha  
  42d08a:	add    ebp,esp
  42d08c:	add    BYTE PTR [eax],al
  42d08e:	xor    al,0x34
  42d090:	or     dh,BYTE PTR [edi]
  42d092:	sub    eax,0xbd1d52af
  42d097:	sub    edx,DWORD PTR [eax]
  42d099:	sub    dh,BYTE PTR [ebx+0x20e61094]
  42d09f:	mov    ?,eax
  42d0a1:	into   
  42d0a2:	sbb    BYTE PTR [edx-0xed222bd],0x14
  42d0a9:	aas    
  42d0aa:	int3   
  42d0ab:	scas   al,BYTE PTR es:[edi]
  42d0ac:	dec    ebx
  42d0ad:	mov    cl,0x1e
  42d0af:	jne    0x42d0ba
  42d0b1:	adc    DWORD PTR gs:[ecx+0x18b6a6f9],edx
  42d0b8:	in     eax,dx
  42d0b9:	jmp    0xe4d181f1
  42d0be:	xor    al,0x34
  42d0c0:	xchg   BYTE PTR [edi+eax*4],dh
  42d0c3:	push   ss
  42d0c4:	mov    edi,0xfcf8bc83
  42d0c9:	push   0x6d
  42d0cb:	sub    cl,BYTE PTR [edx]
  42d0cd:	outs   dx,BYTE PTR ds:[esi]
  42d0ce:	fsubr  QWORD PTR [eax]
  42d0d0:	add    ecx,ebp
  42d0d2:	arpl   WORD PTR [ebx-0x6c],dx
  42d0d5:	rol    esp,0x58
  42d0d8:	add    DWORD PTR [eax+0x68],esi
  42d0db:	inc    eax
  42d0dc:	sub    BYTE PTR ss:[eax-0x6f5879e4],cl
  42d0e3:	pop    edi
  42d0e4:	fnstcw WORD PTR [edx-0x1e84e89d]
  42d0ea:	xor    al,0x20
  42d0ec:	pop    ss
  42d0ed:	ret    
  42d0ee:	xor    al,0x9b
  42d0f0:	jb     0x42d0c3
  42d0f2:	add    BYTE PTR [eax],al
  42d0f4:	scas   eax,DWORD PTR es:[edi]
  42d0f5:	outs   dx,BYTE PTR ds:[esi]
  42d0f6:	mov    edi,DWORD PTR [edi+0x11bdade8]
  42d0fc:	and    ch,dh
  42d0fe:	cli    
  42d0ff:	push   ss
  42d100:	pusha  
  42d101:	xlat   BYTE PTR ds:[ebx]
  42d102:	jae    0x42d0bb
  42d104:	scas   eax,DWORD PTR es:[edi]
  42d105:	out    0xf8,eax
  42d107:	add    BYTE PTR ds:0xea56829f,ah
  42d10d:	dec    ebx
  42d10e:	mov    ebx,0x14e9263b
  42d113:	mov    cl,ch
  42d115:	cmp    al,0x3f
  42d117:	sub    al,0x13
  42d119:	das    
  42d11a:	jp     0x42d116
  42d11c:	lahf   
  42d11d:	out    0x3c,al
  42d11f:	mov    cl,BYTE PTR [ebp+0x33]
  42d122:	xor    eax,DWORD PTR [esi-0x65]
  42d125:	out    0x34,al
  42d127:	inc    ebx
  42d128:	jns    0x42d17f
  42d12a:	adc    eax,0x75a45b39
  42d12f:	mov    bl,0x75
  42d131:	dec    ecx
  42d132:	and    cl,al
  42d134:	adc    eax,0xae8b6d59
  42d139:	dec    ebx
  42d13a:	retf   0xa43b
  42d13d:	call   0xabe95c9f
  42d142:	aas    
  42d143:	jl     0x42d118
  42d145:	jb     0x42d1b4
  42d147:	adc    esi,DWORD PTR [ebp+0x5d]
  42d14a:	or     DWORD PTR [esi+0x58],esi
  42d14d:	inc    ebx
  42d14e:	enter  0xd741,0xf0
  42d152:	pop    esp
  42d153:	cmp    ecx,DWORD PTR [edi+0x69862f]
  42d159:	add    BYTE PTR [edi+0xb83f680],cl
  42d15f:	cmp    cl,0xe
  42d162:	xchg   ebx,eax
  42d163:	jae    0x42d142
  42d165:	jmp    FWORD PTR [ecx+0x3c]
  42d168:	pop    esp
  42d169:	cld    
  42d16a:	or     DWORD PTR [edx+ebx*1-0x7d7fb610],esi
  42d171:	inc    ebp
  42d172:	xor    dh,al
  42d174:	xchg   DWORD PTR [ebp+0x32],eax
  42d177:	jg     0x42d1ed
  42d179:	and    al,0x65
  42d17b:	enter  0x63,0x49
  42d17f:	out    0x1c,al
  42d181:	mov    esi,DWORD PTR [edi]
  42d183:	push   edx
  42d184:	aad    0x74
  42d186:	aas    
  42d187:	fst    st(4)
  42d189:	je     0x42d1b2
  42d18b:	cs dec ebx
  42d18d:	or     al,0xc8
  42d18f:	and    BYTE PTR [esi],al
  42d191:	call   0xfb17f900
  42d196:	ins    BYTE PTR es:[edi],dx
  42d197:	adc    BYTE PTR [esi-0xa845f6],bh
  42d19d:	push   DWORD PTR [edi]
  42d19f:	push   edx
  42d1a0:	xor    ah,bh
  42d1a2:	and    al,0xd7
  42d1a4:	(bad)  
  42d1a6:	mov    BYTE PTR [esi-0x33],ah
  42d1a9:	(bad)  
  42d1aa:	outs   dx,DWORD PTR ds:[esi]
  42d1ab:	adc    BYTE PTR [ebx+0xa7ef288],0xc1
  42d1b2:	add    dh,BYTE PTR [ecx-0x5df4be87]
  42d1b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1b9:	outs   dx,BYTE PTR ds:[esi]
  42d1ba:	mov    esi,0xe979e
  42d1bf:	add    BYTE PTR [ecx+edx*8+0x4a3374ff],dh
  42d1c6:	or     bl,al
  42d1c8:	in     al,0x1c
  42d1ca:	test   DWORD PTR [esi],esi
  42d1cc:	cmp    eax,0x16e72198
  42d1d1:	or     cl,bl
  42d1d3:	add    eax,0x79827ecb
  42d1d8:	xlat   BYTE PTR ds:[ebx]
  42d1d9:	mov    bl,BYTE PTR [eax-0x7c]
  42d1dc:	mov    ah,0x10
  42d1de:	cli    
  42d1df:	jae    0x42d227
  42d1e1:	or     cl,bl
  42d1e3:	or     ebp,DWORD PTR [ebx-0x4d0a7b71]
  42d1e9:	mov    bh,ch
  42d1eb:	inc    DWORD PTR [eax+0x8]
  42d1ee:	pop    edi
  42d1ef:	sti    
  42d1f0:	or     BYTE PTR [esi+0x42],dl
  42d1f3:	sti    
  42d1f4:	jp     0x42d26d
  42d1f6:	or     al,0x4d
  42d1f8:	and    eax,edi
  42d1fa:	(bad)
  42d1fe:	and    edx,ebx
  42d200:	in     eax,dx
  42d201:	pop    eax
  42d202:	mov    edx,0xd4b12c5f
  42d207:	rcr    ch,cl
  42d209:	xchg   esp,eax
  42d20a:	ficomp DWORD PTR [ecx-0x3024ebf]
  42d210:	cmp    eax,0xbdd2aeb0
  42d215:	xchg   esp,eax
  42d216:	data16 into 
  42d218:	sbb    BYTE PTR ds:0x94ac4664,ah
  42d21e:	loop   0x42d1a4
  42d220:	mov    ds:0x3e7d3,al
  42d225:	add    BYTE PTR [edi],dh
  42d227:	and    eax,0x949c196c
  42d22c:	retf   0xf746
  42d22f:	pop    eax
  42d230:	test   eax,0xe8a674f
  42d235:	sar    DWORD PTR [ebp-0x6c],cl
  42d238:	out    dx,al
  42d239:	xor    DWORD PTR [ebx],ecx
  42d23b:	and    eax,0x946dfb67
  42d240:	mov    ds:0x6740a502,al
  42d245:	int    0x2f
  42d247:	and    cl,bh
  42d249:	xchg   BYTE PTR [edx+0x53],ah
  42d24c:	adc    al,0x0
  42d24e:	mov    dh,0x99
  42d250:	inc    edi
  42d251:	add    esi,DWORD PTR [edi]
  42d253:	xor    al,0xeb
  42d255:	mov    BYTE PTR [edi],ch
  42d257:	xchg   ebp,eax
  42d258:	jb     0x42d22c
  42d25a:	stc    
  42d25b:	repz scas al,BYTE PTR es:[edi]
  42d25d:	les    ebp,FWORD PTR [esp+ebp*2-0x6bd12eb0]
  42d264:	pop    edx
  42d265:	push   cs
  42d266:	jge    0x42d288
  42d268:	jecxz  0x42d1f0
  42d26a:	add    DWORD PTR [ebx-0x35c22db6],edx
  42d270:	(bad)  
  42d271:	xchg   BYTE PTR [edx],al
  42d273:	aas    
  42d274:	jmp    0x42d1fd
  42d276:	setae  BYTE PTR [eax]
  42d279:	ss in  eax,0x12
  42d27c:	mul    edx
  42d27e:	xor    eax,0x527e0b8
  42d283:	(bad)  
  42d284:	jge    0x42d2a9
  42d286:	loopne 0x42d2c6
  42d288:	test   DWORD PTR [esi],edi
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	push   es
  42d28d:	(bad)  
  42d28e:	stc    
  42d28f:	push   0x2
  42d291:	inc    ecx
  42d292:	or     ch,BYTE PTR [ebp-0xa]
  42d295:	(bad)  
  42d296:	stc    
  42d297:	(bad)  
  42d298:	mov    ah,0x89
  42d29a:	sub    ecx,0x34
  42d29d:	xor    al,0xa
  42d29f:	gs jp  0x42d22f
  42d2a2:	stc    
  42d2a3:	out    0xf2,al
  42d2a5:	repz xor eax,0xe7ce07a8
  42d2ab:	sahf   
  42d2ac:	test   DWORD PTR [esi+0x204512f9],ecx
  42d2b2:	or     ch,BYTE PTR [edx+0xf]
  42d2b5:	(bad)  
  42d2b6:	stc    
  42d2b7:	mov    esi,0x6a0dc636
  42d2bc:	imul   edi,DWORD PTR [ecx],0x89bbd275
  42d2c2:	add    eax,0xf7126d1d
  42d2c7:	in     eax,dx
  42d2c8:	or     BYTE PTR ds:0x758937e,ah
  42d2ce:	or     eax,0xb88168
  42d2d3:	jmp    0x72c7120c
  42d2d8:	gs mov ?,ecx
  42d2db:	sub    dh,bl
  42d2dd:	dec    edx
  42d2de:	shr    ch,0xf6
  42d2e1:	fwait
  42d2e2:	and    BYTE PTR [edi+0x6],0x8e
  42d2e6:	xchg   DWORD PTR [eax+ebp*1-0x66193fb6],esp
  42d2ed:	or     bl,bh
  42d2ef:	dec    esi
  42d2f0:	add    BYTE PTR [eax],al
  42d2f2:	out    0x49,al
  42d2f4:	pop    ebx
  42d2f5:	add    dl,ah
  42d2f7:	xor    edi,DWORD PTR [edx+0x52]
  42d2fa:	inc    eax
  42d2fb:	test   BYTE PTR gs:[edi],0x78
  42d2ff:	cmp    DWORD PTR [edx-0x29315aa],eax
  42d305:	pminub mm6,QWORD PTR [ebx]
  42d308:	test   BYTE PTR [eax+eax*2+0x65],bl
  42d30c:	test   BYTE PTR [ebx+0x41],0xfb
  42d310:	adc    al,0x39
  42d312:	mov    bl,0x8a
  42d314:	jne    0x42d2f4
  42d316:	daa    
  42d317:	div    dh
  42d319:	inc    ecx
  42d31b:	or     eax,0x75851445
  42d320:	push   es
  42d321:	(bad)  
  42d322:	frstor [esi+esi*8-0x1]
  42d326:	push   ebp
  42d327:	inc    esi
  42d328:	ins    DWORD PTR es:[edi],dx
  42d329:	prefetchwt1 BYTE PTR [edi-0x9]
  42d32d:	inc    DWORD PTR [ecx+0x1503af33]
  42d333:	dec    ebp
  42d334:	xor    eax,0xfd869af6
  42d339:	push   cs
  42d33a:	sbb    dh,BYTE PTR [ecx]
  42d33c:	idiv   edi
  42d33e:	shl    edi,0xf5
  42d341:	inc    ebp
  42d342:	mov    bh,BYTE PTR ds:0xc612144c
  42d348:	call   0xf6a69369
  42d34d:	mov    DWORD PTR [ebx],ecx
  42d34f:	mov    WORD PTR [edx],?
  42d351:	shl    DWORD PTR [ecx+0x11],0x11
  42d355:	inc    BYTE PTR [eax]
  42d357:	add    BYTE PTR [ecx+0x325e3263],dh
  42d35d:	xor    eax,0x63c3ee7a
  42d362:	test   BYTE PTR [edi],0x68
  42d365:	cmp    BYTE PTR [edx-0x291b5aa],al
  42d36b:	(bad)  
  42d36c:	sysexit 
  42d36e:	test   al,bh
  42d370:	aaa    
  42d371:	call   0x2b7ce46
  42d376:	inc    ebx
  42d377:	adc    al,0x4e
  42d379:	enter  0x7bf1,0xe1
  42d37d:	in     al,0xdb
  42d37f:	cld    
  42d380:	clc    
  42d381:	dec    edx
  42d382:	ja     0x42d3c8
  42d384:	dec    ebx
  42d385:	xchg   BYTE PTR [esi-0x350545f6],bh
  42d38b:	cli    
  42d38c:	loopne 0x42d324
  42d38e:	das    
  42d38f:	ins    BYTE PTR es:[edi],dx
  42d390:	sub    BYTE PTR [esi],bl
  42d392:	mov    bh,ah
  42d394:	rol    BYTE PTR [edx+0x1],1
  42d397:	mov    dl,0x34
  42d399:	push   es
  42d39a:	cmp    BYTE PTR [ecx+ecx*8],dh
  42d39d:	xchg   edi,eax
  42d39e:	in     eax,dx
  42d39f:	add    BYTE PTR [eax],ch
  42d3a1:	pop    ds
  42d3a2:	enter  0xb0fc,0xa2
  42d3a6:	cmp    eax,0xc8ef2fb
  42d3ab:	dec    ebp
  42d3ac:	dec    ebx
  42d3ad:	out    dx,eax
  42d3ae:	stos   BYTE PTR es:[edi],al
  42d3af:	call   0xfb0c3c93
  42d3b4:	mov    esi,0x7636f958
  42d3b9:	mov    al,BYTE PTR [eax-0x7dffff54]
  42d3bf:	ror    cl,cl
  42d3c1:	ss fdecstp 
  42d3c4:	stc    
  42d3c5:	jle    0x42d384
  42d3c7:	loopne 0x42d392
  42d3c9:	cli    
  42d3ca:	cmp    cl,dh
  42d3cc:	std    
  42d3cd:	xchg   BYTE PTR [ecx],cl
  42d3cf:	rol    DWORD PTR [bp+di],cl
  42d3d2:	inc    edi
  42d3d3:	mov    edi,edx
  42d3d5:	test   BYTE PTR [ebx-0xb053640],ch
  42d3db:	mov    ecx,0x5ffe1447
  42d3e0:	stc    
  42d3e1:	jnp    0x42d43c
  42d3e3:	mov    ah,0x82
  42d3e5:	cld    
  42d3e6:	xor    BYTE PTR [edx],ah
  42d3e8:	jl     0x42d42e
  42d3ea:	inc    ebx
  42d3eb:	xor    al,0x1f
  42d3ed:	lds    ebp,FWORD PTR ds:0x1dd0debf
  42d3f3:	xchg   ecx,eax
  42d3f4:	push   cs
  42d3f5:	mov    cs:0xa2c6741,eax
  42d3fb:	xchg   ecx,eax
  42d3fc:	inc    edx
  42d3fd:	inc    esi
  42d3ff:	xor    al,0x6f
  42d401:	ss inc ebx
  42d403:	mov    ch,bl
  42d405:	repz inc eax
  42d407:	inc    ecx
  42d408:	fs (bad) 
  42d40a:	jmp    0xf3f6:0xdc432290
  42d411:	or     al,0x6a
  42d413:	sub    BYTE PTR [ebp+ebp*4-0x30f31821],dl
  42d41a:	int    0x40
  42d41c:	cmp    al,BYTE PTR [edi+0x3b]
  42d41f:	inc    ecx
  42d420:	xor    bh,BYTE PTR [edi]
  42d422:	add    BYTE PTR [eax],al
  42d424:	xor    dh,BYTE PTR [ebx+0x7]
  42d427:	cld    
  42d428:	cmp    DWORD PTR [ebx+0x5c],esi
  42d42b:	push   eax
  42d42c:	xor    al,0x35
  42d42e:	iret   
  42d42f:	(bad)  
  42d430:	sub    eax,0x2c0522ca
  42d435:	retf   0x222
  42d438:	jbe    0x42d3cd
  42d43a:	(bad)  
  42d43c:	ja     0x42d472
  42d43e:	rol    BYTE PTR [ebx-0x1fcc17c3],0x8f
  42d445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d446:	retf   
  42d447:	into   
  42d448:	ins    DWORD PTR es:[edi],dx
  42d449:	inc    eax
  42d44a:	jb     0x42d48a
  42d44c:	push   0x3b365a41
  42d451:	jae    0x42d3db
  42d453:	sti    
  42d454:	xor    DWORD PTR [esi+0x60],edi
  42d457:	inc    eax
  42d458:	dec    ebx
  42d459:	xor    al,0xa1
  42d45b:	or     bh,ch
  42d45d:	daa    
  42d45e:	repz jg 0x42d464
  42d461:	xor    eax,0x8bb803e8
  42d466:	add    BYTE PTR [eax],cl
  42d468:	xchg   DWORD PTR ds:0x8e5324c2,edi
  42d46e:	stc    
  42d46f:	jmp    0x6a8c6ba8
  42d474:	(bad)  
  42d475:	push   esp
  42d476:	add    DWORD PTR [edx+0x53],eax
  42d479:	mov    bh,0x43
  42d47b:	add    eax,0xbcf9e473
  42d480:	push   esp
  42d481:	cmp    esi,DWORD PTR [ebx+0x1d08e9e6]
  42d487:	out    0x0,al
  42d489:	add    dl,cl
  42d48b:	mov    edi,0x3474cac0
  42d490:	cli    
  42d491:	pushf  
  42d492:	int3   
  42d493:	mov    ss,edx
  42d495:	mov    bh,0xe9
  42d497:	or     BYTE PTR [ecx],dl
  42d499:	bound  ecx,QWORD PTR [ebp-0x6228c76]
  42d49f:	or     BYTE PTR [ecx],cl
  42d4a1:	adc    DWORD PTR ds:0xb0fef995,ecx
  42d4a7:	iret   
  42d4a8:	je     0x42d48c
  42d4aa:	inc    edi
  42d4ab:	sub    bh,ch
  42d4ad:	out    dx,al
  42d4ae:	jp     0x42d4ea
  42d4b0:	test   BYTE PTR ds:0xeef98f9e,bh
  42d4b6:	ret    0xfff2
  42d4b9:	in     eax,0xaa
  42d4bb:	cli    
  42d4bc:	(bad)  
  42d4bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4be:	xchg   ebx,eax
  42d4bf:	aaa    
  42d4c0:	push   es
  42d4c1:	test   al,0x36
  42d4c3:	mov    WORD PTR [ecx],cs
  42d4c5:	ja     0x42d4b9
  42d4c7:	xor    al,0xa
  42d4c9:	jg     0x42d4fd
  42d4cb:	mov    es,eax
  42d4cd:	leave  
  42d4ce:	imul   esi,DWORD PTR [esi],0xffffffc0
  42d4d1:	imul   eax,DWORD PTR [edi+0x4c],0xe8f1555
  42d4d8:	jl     0x42d4a3
  42d4da:	xor    al,0x3b
  42d4dc:	test   BYTE PTR [ebx+0x36],cl
  42d4df:	xor    al,0x1
  42d4e1:	add    BYTE PTR [ecx-0x57],cl
  42d4e4:	dec    BYTE PTR [esi]
  42d4e6:	add    BYTE PTR [eax+0x385e63b9],bh
  42d4ec:	cli    
  42d4ed:	test   DWORD PTR [eax],0x8245b500
  42d4f3:	push   ebp
  42d4f4:	and    ch,ch
  42d4f6:	cli    
  42d4f7:	inc    BYTE PTR [ebx]
  42d4f9:	lahf   
  42d4fa:	div    BYTE PTR [ebp+0x6]
  42d4fd:	dec    ecx
  42d4fe:	div    BYTE PTR [ebp+0xe]
  42d501:	xor    BYTE PTR [esp+ecx*1+0x79],0xe7
  42d506:	or     al,ch
  42d508:	jbe    0x42d4a2
  42d50a:	idiv   bh
  42d50c:	arpl   WORD PTR [eax+0x6],di
  42d50f:	test   DWORD PTR [esi],esp
  42d511:	mov    bh,cl
  42d513:	jmp    DWORD PTR [ebp-0x1]
  42d516:	and    bl,ch
  42d518:	add    eax,0x55244d0c
  42d51d:	inc    edi
  42d51e:	adc    eax,0xf6428f41
  42d523:	jne    0x42d4ff
  42d525:	or     eax,ebx
  42d527:	inc    DWORD PTR [ebx+0x6b]
  42d52a:	dec    edi
  42d52b:	push   DWORD PTR [ebx]
  42d52d:	xor    esi,0x75
  42d530:	mov    bh,BYTE PTR [edi+0x74]
  42d533:	or     BYTE PTR [esi+0x79ffd9cb],al
  42d539:	mov    ch,0xb9
  42d53b:	mov    db1,esp
  42d53e:	add    eax,DWORD PTR [eax]
  42d540:	sahf   
  42d541:	mov    bl,0xbe
  42d543:	add    ecx,DWORD PTR ds:0x5002116
  42d549:	cmp    DWORD PTR [edx],esi
  42d54b:	inc    esi
  42d54c:	bound  edi,QWORD PTR [edi-0x1]
  42d54f:	push   cs
  42d550:	fdiv   QWORD PTR [edi-0x27]
  42d553:	inc    DWORD PTR [eax]
  42d555:	add    BYTE PTR [ecx-0x16160714],bl
  42d55b:	mov    ecx,?
  42d55d:	push   DWORD PTR [edi]
  42d55f:	xor    ebx,eax
  42d561:	call   0x406805
  42d566:	lods   al,BYTE PTR ds:[esi]
  42d567:	inc    edi
  42d568:	sub    DWORD PTR [ebx],ecx
  42d56a:	and    DWORD PTR ds:0x68640fe,0x56ba2053
  42d574:	(bad)  
  42d575:	cli    
  42d576:	stos   BYTE PTR es:[edi],al
  42d577:	aaa    
  42d578:	jbe    0x42d5be
  42d57a:	sub    ebp,esi
  42d57c:	push   edx
  42d57d:	sbb    BYTE PTR [edx+edx*2-0x747d04cc],bh
  42d584:	sub    eax,0xfc9ec90b
  42d589:	mov    cl,0xb7
  42d58b:	pop    ebx
  42d58c:	popa   
  42d58d:	inc    eax
  42d58e:	aaa    
  42d58f:	inc    esi
  42d590:	push   ebx
  42d591:	or     BYTE PTR [esi+edx*2],dh
  42d594:	add    eax,edx
  42d596:	iret   
  42d597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d598:	(bad)  
  42d59a:	fadd   DWORD PTR [edx]
  42d59c:	mov    BYTE PTR [eax-0x5367730],0xc8
  42d5a3:	test   al,0xea
  42d5a5:	cli    
  42d5a6:	dec    ecx
  42d5a7:	or     ecx,ebp
  42d5a9:	je     0x42d5d6
  42d5ab:	mov    ?,ebx
  42d5ad:	aaa    
  42d5ae:	dec    ecx
  42d5af:	(bad)  
  42d5b1:	pop    eax
  42d5b2:	push   cs
  42d5b3:	sbb    BYTE PTR [esi+0x27042c74],bh
  42d5b9:	jo     0x42d5bb
  42d5bb:	add    BYTE PTR [edx+0x2e8c656],ch
  42d5c1:	xchg   ecx,eax
  42d5c2:	std    
  42d5c3:	push   DWORD PTR [ebp+edi*4-0x647f0098]
  42d5ca:	std    
  42d5cb:	je     0x42d5fb
  42d5cd:	add    al,BYTE PTR [eax+0xc]
  42d5d0:	mov    esi,0x68ff691d
  42d5d5:	fwait
  42d5d6:	jp     0x42d59a
  42d5d8:	dec    esi
  42d5d9:	xor    al,0xdc
  42d5db:	std    
  42d5dc:	pop    eax
  42d5dd:	lea    ebp,[esi+0x41]
  42d5e0:	sbb    esi,esp
  42d5e2:	aaa    
  42d5e3:	retf   
  42d5e4:	ret    
  42d5e5:	push   ebx
  42d5e6:	fist   DWORD PTR [ecx-0x180372cb]
  42d5ec:	sub    eax,0x91c457c6
  42d5f1:	hlt    
  42d5f2:	out    0xca,eax
  42d5f4:	mov    ds:0x86b2e72c,eax
  42d5f9:	(bad)  
  42d5fa:	fdivr  st(3),st
  42d5fc:	mov    cl,0x78
  42d5fe:	pop    edx
  42d5ff:	push   ecx
  42d600:	inc    ebx
  42d601:	(bad)  
  42d602:	fdiv   st(3),st
  42d604:	adc    BYTE PTR [ebx],dh
  42d606:	dec    eax
  42d607:	retf   
  42d608:	std    
  42d609:	mov    dh,0x27
  42d60b:	sti    
  42d60c:	mov    bl,0x32
  42d60e:	out    dx,al
  42d60f:	add    esi,DWORD PTR [edi]
  42d611:	int3   
  42d612:	int    0xc7
  42d614:	in     eax,dx
  42d615:	mov    WORD PTR [eax+0x6e],es
  42d618:	(bad)  [edx+eiz*1-0x57a78c81]
  42d61f:	xor    eax,DWORD PTR [eax]
  42d621:	add    ah,cl
  42d623:	push   es
  42d624:	enter  0x86fa,0x34
  42d628:	or     edx,DWORD PTR [ecx+0x23]
  42d62b:	cmp    eax,0x1078743a
  42d630:	test   al,0x3
  42d632:	lods   al,BYTE PTR ds:[esi]
  42d633:	push   es
  42d634:	rol    BYTE PTR [esi],1
  42d636:	test   ch,ah
  42d638:	jmp    0x23ca:0xaeb94750
  42d63f:	inc    eax
  42d640:	fist   DWORD PTR [eax+0x3f]
  42d643:	pushf  
  42d644:	stos   DWORD PTR es:[edi],eax
  42d645:	stos   BYTE PTR es:[edi],al
  42d646:	lea    ecx,[esp+eiz*2-0x5448d23d]
  42d64d:	cld    
  42d64e:	js     0x42d5dc
  42d650:	jg     0x42d640
  42d652:	ins    BYTE PTR es:[edi],dx
  42d653:	mov    WORD PTR [eax],es
  42d655:	mov    dh,0x8b
  42d657:	out    dx,eax
  42d658:	in     eax,0xae
  42d65a:	ins    DWORD PTR es:[edi],dx
  42d65b:	mov    ch,0x43
  42d65d:	int    0x5d
  42d65f:	ret    0xe851
  42d662:	hlt    
  42d663:	jecxz  0x42d65e
  42d665:	sbb    al,0x13
  42d667:	cmp    DWORD PTR [ebx+0x1d076de6],esi
  42d66d:	mul    BYTE PTR [esi+0x7b0ac10c]
  42d673:	xor    al,0xfa
  42d675:	cld    
  42d676:	sbb    al,0x8b
  42d678:	ret    0xec17
  42d67b:	add    BYTE PTR [ecx],dl
  42d67d:	jmp    0x7291:0xed738ee4
  42d684:	stc    
  42d685:	fadd   QWORD PTR [eax]
  42d687:	add    BYTE PTR [esp+edx*4],cl
  42d68a:	jg     0x42d6ba
  42d68c:	in     eax,dx
  42d68d:	mov    es,WORD PTR [ebx+0x7fb0fd29]
  42d693:	lock xor al,0x34
  42d696:	mov    ecx,0xf98ef0d2
  42d69b:	push   0xfffffff5
  42d69d:	mov    DWORD PTR [eax-0x674af99],ecx
  42d6a3:	jmp    0xe94af49b
  42d6a8:	xor    al,0xb3
  42d6aa:	inc    ebx
  42d6ab:	lds    esi,FWORD PTR [esp+eiz*8-0x7]
  42d6af:	jl     0x42d6c5
  42d6b1:	aas    
  42d6b2:	mov    bl,0xe6
  42d6b4:	jge    0x42d6b6
  42d6b6:	sbb    eax,0xc0bbc6e6
  42d6bb:	mov    dh,ah
  42d6bd:	xor    edi,edx
  42d6bf:	pop    esp
  42d6c0:	mov    ecx,DWORD PTR [edx+0x7e37d2]
  42d6c6:	adc    DWORD PTR [edx-0x36],esp
  42d6c9:	mov    ?,WORD PTR [ebx-0x23]
  42d6cc:	outs   dx,DWORD PTR ds:[esi]
  42d6cd:	add    BYTE PTR [ecx],cl
  42d6cf:	add    BYTE PTR [esi+0x39],ah
  42d6d2:	(bad)  
  42d6d3:	push   DWORD PTR [ecx-0x24f045f5]
  42d6d9:	cmp    BYTE PTR [eax],cl
  42d6db:	add    BYTE PTR [esi+0xe],cl
  42d6de:	pop    eax
  42d6df:	jo     0x42d6b7
  42d6e1:	fwait
  42d6e2:	cmc    
  42d6e3:	push   DWORD PTR [ecx-0x5e152f91]
  42d6e9:	jge    0x42d66d
  42d6eb:	inc    ebp
  42d6ec:	add    BYTE PTR [eax],al
  42d6ee:	jp     0x42d67c
  42d6f0:	scas   eax,DWORD PTR es:[edi]
  42d6f1:	push   edi
  42d6f2:	dec    edi
  42d6f3:	not    DWORD PTR [eax-0x1]
  42d6f6:	sub    edx,DWORD PTR [edi+0x6]
  42d6f9:	mov    dh,0x19
  42d6fb:	jl     0x42d771
  42d6fd:	sbb    al,0x1
  42d6ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d700:	jns    0x42d6c2
  42d702:	in     eax,dx
  42d703:	test   BYTE PTR [eax],0xff
  42d706:	jmp    0x42d6a6
  42d708:	cli    
  42d709:	(bad)  
  42d70a:	enter  0x747b,0x10
  42d70e:	or     eax,0x275f6c7
  42d713:	or     bl,al
  42d715:	jmp    FWORD PTR [ebx+0x40f5e18e]
  42d71b:	jge    0x42d713
  42d71d:	test   DWORD PTR [esi],ecx
  42d71f:	lea    eax,[ebp+esi*8-0x7cfec91a]
  42d726:	sbb    DWORD PTR [edx],esi
  42d728:	mov    BYTE PTR [esi-0x52],bh
  42d72b:	mov    esi,0x7d31fc1c
  42d730:	call   0x1799e1a
  42d735:	mov    ebx,ebx
  42d737:	sub    al,BYTE PTR [ecx+0x50]
  42d73a:	mov    eax,ds:0x680f20f9
  42d73f:	xor    eax,0x8d3275f6
  42d744:	scas   eax,DWORD PTR es:[edi]
  42d745:	nop
  42d746:	fimul  WORD PTR [edi]
  42d748:	inc    ecx
  42d749:	add    BYTE PTR [edi],dh
  42d74b:	bound  ecx,QWORD PTR [edx+0x18]
  42d74e:	xor    al,0xc2
  42d750:	das    
  42d751:	sti    
  42d752:	add    BYTE PTR [eax],al
  42d754:	add    ch,BYTE PTR [ebp+0x7c]
  42d757:	(bad)  
  42d758:	jo     0x42d799
  42d75a:	stc    
  42d75b:	cli    
  42d75c:	loop   0x42d6f2
  42d75e:	aad    0xad
  42d760:	sbb    ecx,0x817784c8
  42d766:	jp     0x42d715
  42d768:	aas    
  42d769:	popf   
  42d76a:	std    
  42d76b:	mov    bh,0x29
  42d76d:	mov    eax,ds:0x554efac8
  42d772:	(bad)  
  42d774:	cmp    BYTE PTR ds:0x4140243b,al
  42d77a:	xor    DWORD PTR [ecx],eax
  42d77c:	ja     0x42d7a9
  42d77e:	enter  0x5774,0x6a
  42d782:	pop    DWORD PTR [edx]
  42d784:	sbb    BYTE PTR [ecx-0x1f],ch
  42d787:	or     cl,cl
  42d789:	sbb    edi,DWORD PTR [esi-0x376488a2]
  42d78f:	je     0x42d7b0
  42d791:	sahf   
  42d792:	rcl    BYTE PTR [ecx-0x8],0xc8
  42d796:	in     eax,dx
  42d797:	inc    BYTE PTR [eax]
  42d799:	dec    ebx
  42d79a:	dec    ebx
  42d79b:	or     al,0xbc
  42d79d:	push   esi
  42d79e:	leave  
  42d79f:	je     0x42d7d0
  42d7a1:	repz pop eax
  42d7a3:	fcmovu st,st(0)
  42d7a5:	push   edx
  42d7a6:	jnp    0x42d767
  42d7a8:	inc    eax
  42d7a9:	adc    BYTE PTR [ecx+0x8],bl
  42d7ac:	aaa    
  42d7ad:	fwait
  42d7ae:	test   DWORD PTR [ecx],ebx
  42d7b0:	ret    
  42d7b1:	cmp    cl,cl
  42d7b3:	call   0xfb0c0986
  42d7b8:	add    BYTE PTR [eax],al
  42d7ba:	mov    esp,0x96c0f1d1
  42d7bf:	popf   
  42d7c0:	jl     0x42d7d5
  42d7c2:	ss adc al,0x33
  42d7c5:	adc    al,0xac
  42d7c7:	xor    al,0x34
  42d7c9:	add    eax,0xd82cbb3b
  42d7ce:	mov    cl,0xfa
  42d7d0:	neg    DWORD PTR [edx]
  42d7d2:	bnd jg 0x42d835
  42d7d5:	xor    DWORD PTR [edi-0x46841449],eax
  42d7db:	cmp    al,0x71
  42d7dd:	cmp    DWORD PTR [edi-0x43],ebp
  42d7e0:	popa   
  42d7e1:	and    BYTE PTR [eax-0x77],0xe7
  42d7e5:	jl     0x42d7d2
  42d7e7:	fwait
  42d7e8:	outs   dx,BYTE PTR ds:[esi]
  42d7e9:	mov    ebx,0x830ffa19
  42d7ee:	retf   
  42d7ef:	xchg   DWORD PTR ds:0xe0ff387d,eax
  42d7f5:	mov    esi,0x3e653f3
  42d7fa:	aaa    
  42d7fb:	xor    al,0x8f
  42d7fd:	add    BYTE PTR [eax-0x47fc37f1],ch
  42d803:	out    dx,al
  42d804:	ret    
  42d805:	inc    ebx
  42d806:	scas   al,BYTE PTR es:[edi]
  42d807:	out    dx,al
  42d808:	or     eax,edi
  42d80a:	mov    edx,DWORD PTR [eax-0x15]
  42d80d:	lea    esi,ds:0x2c23dc89
  42d813:	ret    0xc477
  42d816:	pop    ecx
  42d817:	hlt    
  42d818:	out    0xc6,eax
  42d81a:	imul   ebp,DWORD PTR [eax],0xffffffe7
  42d81d:	scas   al,BYTE PTR es:[edi]
  42d81e:	add    BYTE PTR [eax],al
  42d820:	in     eax,dx
  42d821:	dec    bh
  42d823:	jp     0x42d81e
  42d825:	loope  0x42d851
  42d827:	push   ecx
  42d828:	inc    edi
  42d829:	mov    DWORD PTR [edi+esi*8-0x24100133],ebx
  42d830:	(bad)  
  42d831:	data16 adc al,bh
  42d834:	mov    ebx,0xfbfa9373
  42d839:	sub    DWORD PTR [edi+eax*8],eax
  42d83c:	lods   eax,DWORD PTR ds:[esi]
  42d83d:	cmp    BYTE PTR [ebp-0x59],ah
  42d840:	xor    eax,0x1de90134
  42d845:	clc    
  42d846:	call   0xf7f9ab
  42d84b:	jmp    0x2ef61584
  42d850:	xor    bh,BYTE PTR ds:0x73353eb3
  42d856:	(bad)  
  42d858:	jge    0x42d8c8
  42d85a:	std    
  42d85b:	mov    edi,0x35554db4
  42d860:	int3   
  42d861:	mov    cl,0x52
  42d863:	in     eax,0xdd
  42d865:	not    DWORD PTR [edx+eiz*2]
  42d868:	out    dx,eax
  42d869:	add    DWORD PTR [edi+0x52b14be5],0xffffffed
  42d870:	int    0x7
  42d872:	in     eax,dx
  42d873:	pusha  
  42d874:	clc    
  42d875:	and    al,BYTE PTR ds:0x26240262
  42d87b:	xor    al,0x7
  42d87d:	scas   eax,DWORD PTR es:[edi]
  42d87e:	push   edx
  42d87f:	in     eax,dx
  42d880:	lods   eax,DWORD PTR ds:[esi]
  42d881:	or     cl,bh
  42d883:	pusha  
  42d884:	add    BYTE PTR [eax],al
  42d886:	cmp    BYTE PTR [esi-0x750f30c5],ch
  42d88c:	stc    
  42d88d:	fst    QWORD PTR [ebx]
  42d88f:	scas   eax,DWORD PTR es:[edi]
  42d890:	inc    ebx
  42d891:	in     eax,dx
  42d892:	mov    esi,DWORD PTR [ebp+0x3434e99c]
  42d898:	cs sub ebx,ebx
  42d89b:	mov    ch,0x1
  42d89d:	jmp    0x58687d6
  42d8a2:	jae    0x42d888
  42d8a4:	stc    
  42d8a5:	mov    esp,0xe6b33b14
  42d8aa:	icebp  
  42d8ab:	add    BYTE PTR ds:0xc0b7c2f6,bl
  42d8b1:	mov    dh,BYTE PTR [esp+esi*1-0x6]
  42d8b5:	pushf  
  42d8b6:	int3   
  42d8b7:	xchg   dl,dl
  42d8b9:	mov    bh,0xf1
  42d8bb:	add    BYTE PTR [ecx],dl
  42d8bd:	add    BYTE PTR ds:0x9a75f6ca,ah
  42d8c3:	outs   dx,BYTE PTR ds:[esi]
  42d8c4:	je     0x42d8ce
  42d8c6:	ss inc edx
  42d8c8:	fdiv   st(7),st
  42d8ca:	mov    DWORD PTR [edi],eax
  42d8cc:	mov    edx,0xfe45230f
  42d8d1:	call   FWORD PTR [esi+0x69e8f06a]
  42d8d7:	jno    0x42d90b
  42d8d9:	pop    ebp
  42d8da:	xchg   esi,eax
  42d8db:	neg    BYTE PTR [eax]
  42d8dd:	cmp    DWORD PTR [eax],ebp
  42d8df:	inc    esp
  42d8e0:	je     0x42d890
  42d8e2:	aaa    
  42d8e3:	ds pop ecx
  42d8e5:	je     0x42d93f
  42d8e7:	or     al,0x80
  42d8e9:	mov    BYTE PTR [eax],al
  42d8eb:	add    BYTE PTR [esi+0x33],cl
  42d8ee:	add    DWORD PTR [ebx],eax
  42d8f0:	and    al,ch
  42d8f2:	aaa    
  42d8f3:	inc    ebp
  42d8f4:	inc    esi
  42d8f5:	not    DWORD PTR [ecx-0x777fec75]
  42d8fb:	xchg   dh,cl
  42d8fd:	das    
  42d8fe:	add    DWORD PTR [eax],eax
  42d900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d901:	inc    edi
  42d902:	or     DWORD PTR [ecx+0x4581e050],ecx
  42d908:	sbb    cl,BYTE PTR [edx]
  42d90a:	sbb    BYTE PTR [esi+ecx*1-0x1c74fecd],0x6e
  42d912:	out    dx,al
  42d913:	fdiv   DWORD PTR ds:0x6a182470
  42d919:	jno    0x42d911
  42d91b:	mov    eax,ecx
  42d91d:	test   BYTE PTR [eax-0x17],0xe2
  42d921:	xchg   ecx,edi
  42d923:	(bad)  
  42d924:	in     eax,dx
  42d925:	jb     0x42d960
  42d927:	jmp    0x3c5f56
  42d92c:	stc    
  42d92d:	mov    eax,0xb8c9013e
  42d932:	dec    esi
  42d933:	add    al,BYTE PTR [ebp+0x3e]
  42d936:	shl    DWORD PTR gs:[edi],0x3d
  42d93a:	std    
  42d93b:	push   es
  42d93c:	cmc    
  42d93d:	cdq    
  42d93e:	mov    esi,0x87cfa88
  42d943:	shl    DWORD PTR [edx],0x8f
  42d946:	and    BYTE PTR [ebx+ecx*4-0x64],0xd8
  42d94b:	movaps xmm7,XMMWORD PTR [edi]
  42d94e:	cmp    eax,0x410000ff
  42d953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d954:	cmp    eax,0xf57b7604
  42d959:	push   es
  42d95a:	outs   dx,DWORD PTR ds:[esi]
  42d95b:	adc    esi,DWORD PTR [ebx]
  42d95d:	aam    0xac
  42d95f:	push   cs
  42d960:	push   0xffffffff
  42d962:	jo     0x42d900
  42d964:	jbe    0x42d9aa
  42d966:	xchg   DWORD PTR [edi],edx
  42d968:	cmp    edx,eax
  42d96a:	scas   al,BYTE PTR es:[edi]
  42d96b:	push   ss
  42d96c:	push   0xffffffff
  42d96e:	pop    eax
  42d96f:	pushf  
  42d970:	js     0x42d9b3
  42d972:	daa    
  42d973:	sbb    bh,BYTE PTR [ebp-0x52d84002]
  42d979:	mov    dl,bh
  42d97b:	mov    esp,0x3619f780
  42d980:	clc    
  42d981:	mov    edx,es
  42d983:	or     eax,esp
  42d985:	cli    
  42d986:	sub    BYTE PTR ds:0x600cdc33,al
  42d98c:	js     0x42d955
  42d98e:	idiv   BYTE PTR [edi+edi*8-0x7a44d506]
  42d995:	ds aaa 
  42d997:	add    al,0x3b
  42d999:	fdivr  QWORD PTR [edx-0x72fcb4a5]
  42d99f:	loope  0x42d977
  42d9a1:	test   BYTE PTR [ecx],bh
  42d9a3:	fwait
  42d9a4:	std    
  42d9a5:	xchg   BYTE PTR [edx-0x5],dh
  42d9a8:	mov    esi,0xc4ab35df
  42d9ad:	jno    0x42d9da
  42d9af:	push   esi
  42d9b0:	dec    ebx
  42d9b1:	(bad)  
  42d9b3:	xor    al,0xfd
  42d9b5:	repz add BYTE PTR [eax],al
  42d9b8:	es hlt 
  42d9ba:	out    0x78,eax
  42d9bc:	jnp    0x42d9e2
  42d9be:	pop    edi
  42d9bf:	adc    edi,DWORD PTR ss:[ebx-0x1046205c]
  42d9c6:	(bad)  
  42d9c7:	jns    0x42d971
  42d9c9:	mov    dl,0x23
  42d9cb:	neg    DWORD PTR [ebx+edx*1-0x31]
  42d9cf:	les    ebx,FWORD PTR [ecx]
  42d9d1:	(bad)  
  42d9d2:	jmp    0x29754f56
  42d9d7:	(bad)  
  42d9d8:	sti    
  42d9d9:	dec    edi
  42d9da:	fstp   TBYTE PTR [ecx]
  42d9dc:	pop    ebx
  42d9dd:	xor    eax,0xbe2dc49a
  42d9e2:	ja     0x42d9a8
  42d9e4:	adc    esp,esi
  42d9e6:	out    0x6,eax
  42d9e8:	add    dl,BYTE PTR [ebx+edx*1-0x3d]
  42d9ec:	jmp    0x42da15
  42d9ee:	pop    edi
  42d9ef:	iret   
  42d9f0:	pop    ebp
  42d9f1:	dec    edi
  42d9f3:	pop    ecx
  42d9f4:	dec    esp
  42d9f5:	push   edi
  42d9f7:	ret    0x37c3
  42d9fa:	fwait
  42d9fb:	cmp    DWORD PTR [edi],ebp
  42d9fd:	pushf  
  42d9fe:	retf   
  42d9ff:	fistp  QWORD PTR ds:0x4b496085
  42da05:	mov    cl,0x7f
  42da07:	add    eax,0x453b03c
  42da0c:	aaa    
  42da0d:	xor    al,0xb5
  42da0f:	sbb    al,0x1b
  42da11:	test   DWORD PTR [edx+0x13],ebp
  42da14:	mov    ebx,0x3703e7ba
  42da19:	scas   eax,DWORD PTR es:[edi]
  42da1a:	daa    
  42da1b:	cmp    BYTE PTR [eax],al
  42da1d:	add    BYTE PTR [edi+eax*2],dh
  42da20:	repnz mov edi,0x26d484fd
  42da26:	ret    0x17ee
  42da29:	lea    esi,[esi+0x3703e79f]
  42da2f:	mov    ecx,0x7394ac00
  42da34:	loopne 0x42da21
  42da36:	mov    DWORD PTR fs:[ebx+0x45],esi
  42da3a:	hlt    
  42da3b:	add    cl,BYTE PTR ds:0x13241e1e
  42da41:	test   eax,0xc943ad34
  42da46:	inc    ebp
  42da47:	ret    0xe848
  42da4a:	inc    ebp
  42da4b:	ret    0xeb50
  42da4e:	jnp    0x42d9e3
  42da50:	or     dl,ah
  42da52:	push   0xffffff85
  42da54:	shl    BYTE PTR [eax-0x2],0x53
  42da58:	xchg   ecx,ebp
  42da5a:	mov    cl,0x70
  42da5c:	or     al,0x1d
  42da5e:	fistp  QWORD PTR [eax]
  42da60:	test   DWORD PTR [ecx+0x74],edx
  42da63:	mov    ecx,edi
  42da65:	(bad)  
  42da66:	jmp    DWORD PTR [ebx-0x7b]
  42da69:	xor    al,0x57
  42da6b:	mov    ebx,0x34345582
  42da70:	add    DWORD PTR [edi+ebp*4-0x6c],esp
  42da74:	cli    
  42da75:	scas   al,BYTE PTR es:[edi]
  42da76:	jne    0x42dab5
  42da78:	leave  
  42da79:	div    BYTE PTR [eax+0x759ee1f5]
  42da7f:	mov    DWORD PTR [ebx],edx
  42da81:	dec    ebp
  42da82:	add    BYTE PTR [eax],al
  42da84:	mov    esp,0x7c800145
  42da89:	xchg   edi,eax
  42da8a:	stc    
  42da8b:	xchg   BYTE PTR [ecx-0x50932310],bh
  42da91:	xchg   ebx,eax
  42da92:	cli    
  42da93:	jbe    0x42da8a
  42da95:	dec    edx
  42da96:	leave  
  42da97:	cmc    
  42da98:	ds jg  0x42daae
  42da9b:	lea    ecx,[edx+eax*2+0x286f7201]
  42daa2:	call   0x1770a0c
  42daa7:	bound  edi,QWORD PTR [edi+0x64]
  42daaa:	test   DWORD PTR [eax],eax
  42daac:	mov    ds:0x8a868863,eax
  42dab1:	aaa    
  42dab2:	add    DWORD PTR [eax],eax
  42dab4:	push   ebx
  42dab5:	lods   al,BYTE PTR ds:[esi]
  42dab6:	jmp    0x32b8fcb9
  42dabb:	enter  0x2daa,0xf6
  42dabf:	adc    eax,0x3aff7a
  42dac4:	fnsave [edi+0x39]
  42dac7:	jmp    0x39a961
  42dacc:	and    eax,0xcb8b24ec
  42dad1:	sub    eax,DWORD PTR [ecx+0x50]
  42dad4:	mov    eax,ds:0xbff214b
  42dad9:	and    esi,esi
  42dadb:	jne    0x42db43
  42dadd:	iret   
  42dade:	cmp    eax,0x827561de
  42dae3:	inc    ebp
  42dae4:	jle    0x42da94
  42dae6:	jg     0x42da68
  42dae8:	add    BYTE PTR [eax],al
  42daea:	pop    esi
  42daeb:	aaa    
  42daec:	add    DWORD PTR [ebx+0x5e88301b],ecx
  42daf2:	sub    ch,BYTE PTR [edi+0x6675703f]
  42daf8:	add    BYTE PTR [ebp-0x7a],0x7f
  42dafc:	inc    esp
  42dafd:	adc    al,0x41
  42daff:	mov    dl,0xca
  42db01:	out    0xa1,al
  42db03:	jne    0x42dafb
  42db05:	jne    0x42db4d
  42db07:	mov    al,0x54
  42db09:	hlt    
  42db0a:	ror    DWORD PTR [edx-0xf],0x8b
  42db0e:	fdiv   DWORD PTR [eax+0x626ae8c2]
  42db14:	idiv   bh
  42db16:	mov    edi,DWORD PTR [eax+0x6]
  42db19:	test   BYTE PTR [ecx+0x38],ah
  42db1c:	add    DWORD PTR [eax],eax
  42db1e:	sbb    eax,0xdbfff4e2
  42db23:	sub    dh,dh
  42db25:	jne    0x42db5e
  42db27:	xor    DWORD PTR [ebx],ebp
  42db29:	add    al,dh
  42db2b:	sbb    DWORD PTR [bx-0x600],eax
  42db30:	xor    DWORD PTR [eax],ebx
  42db32:	lods   al,BYTE PTR ds:[esi]
  42db33:	inc    ebp
  42db34:	push   edi
  42db35:	sti    
  42db36:	bound  ebx,QWORD PTR [ebp-0x40]
  42db39:	je     0x42db7e
  42db3b:	push   edx
  42db3c:	xor    cl,BYTE PTR [eax]
  42db3e:	fild   QWORD PTR [eax]
  42db40:	(bad)  
  42db42:	rcl    BYTE PTR [edi],0xc5
  42db45:	jae    0x42dacc
  42db47:	xor    ebp,DWORD PTR [ebx+eax*1+0x5c868d37]
  42db4e:	add    BYTE PTR [eax],al
  42db50:	stos   DWORD PTR es:[edi],eax
  42db51:	add    ecx,DWORD PTR [edx+0x14]
  42db54:	pop    esp
  42db55:	inc    ebp
  42db56:	cmp    cl,BYTE PTR [edx-0x68]
  42db59:	call   DWORD PTR ds:0xc088ea87
  42db5f:	je     0x42dae8
  42db61:	add    eax,0x646c86c8
  42db66:	and    al,0xd6
  42db68:	js     0x42dbd3
  42db6a:	cmp    BYTE PTR [edi+0x5d047ceb],0x63
  42db71:	jns    0x42dbb5
  42db73:	adc    al,0xac
  42db75:	push   edi
  42db76:	sbb    DWORD PTR [edi],esi
  42db78:	repnz les edi,FWORD PTR [ecx]
  42db7b:	fcomp  QWORD PTR [ecx+esi*2-0x74]
  42db7f:	dec    ecx
  42db80:	retf   
  42db81:	vmptrld QWORD PTR [ebx+0x1f]
  42db85:	xchg   esi,eax
  42db86:	pop    edi
  42db87:	ins    BYTE PTR es:[edi],dx
  42db88:	lds    edi,FWORD PTR [ebp-0x4]
  42db8b:	pop    esp
  42db8c:	aas    
  42db8d:	sub    DWORD PTR [edi],ecx
  42db8f:	das    
  42db90:	test   DWORD PTR [ebx-0x7a],0xc5768341
  42db97:	or     ch,BYTE PTR [eax+0x10faa87b]
  42db9d:	(bad)  
  42db9e:	pop    edx
  42db9f:	cld    
  42dba0:	cmp    BYTE PTR [esi+eiz*2],dh
  42dba3:	not    DWORD PTR [esi]
  42dba5:	sbb    BYTE PTR [edx-0x74],0x73
  42dba9:	pop    eax
  42dbaa:	test   al,0x8a
  42dbac:	jnp    0x42dc06
  42dbae:	dec    ebx
  42dbaf:	adc    ebp,DWORD PTR ss:[ebp+0x2d1a]
  42dbb6:	aaa    
  42dbb7:	xor    DWORD PTR [edi+ebx*1+0x36326db0],0x362aea2f
  42dbc2:	daa    
  42dbc3:	sbb    DWORD PTR [edi+ecx*1-0x540ff844],0xc0125e56
  42dbce:	mov    ebx,0x1686da74
  42dbd3:	cmp    al,ch
  42dbd5:	add    ebx,DWORD PTR [eax-0x21]
  42dbd8:	repz sti 
  42dbda:	sti    
  42dbdb:	jg     0x42dc53
  42dbdd:	aad    0x9f
  42dbdf:	jle    0x42dbe5
  42dbe1:	ror    BYTE PTR [ebp-0x45bfce53],0x6b
  42dbe8:	jmp    0x29bf:0xd2978d87
  42dbef:	loop   0x42dc2c
  42dbf1:	psubsw mm3,QWORD PTR [ecx+0x3d5dbfcc]
  42dbf8:	sbb    eax,0x94ba2c0c
  42dbfd:	test   eax,0xc3f6814d
  42dc02:	or     BYTE PTR [ebx+0x6c086029],ch
  42dc08:	nop
  42dc09:	rcl    DWORD PTR [esi-0x7f],0x92
  42dc0d:	mov    edi,DWORD PTR [ebx+0x7c]
  42dc10:	ror    BYTE PTR [eax+0x43],1
  42dc13:	xor    DWORD PTR [ebp-0x38],esi
  42dc16:	sbb    eax,DWORD PTR [ecx+0xfb7a]
  42dc1c:	jle    0x42dc2e
  42dc1e:	add    esi,esp
  42dc20:	mov    ch,0x6c
  42dc22:	loop   0x42dc92
  42dc24:	enter  0xb32d,0xea
  42dc28:	lods   eax,DWORD PTR ds:[esi]
  42dc29:	js     0x42dc58
  42dc2b:	cmp    esi,DWORD PTR [ebx+edx*4+0x5f05ab01]
  42dc32:	test   DWORD PTR [eax+eiz*4-0x5115178d],ebx
  42dc39:	xor    al,0x9
  42dc3b:	stos   BYTE PTR es:[edi],al
  42dc3c:	mov    al,0x70
  42dc3e:	or     DWORD PTR [ebp-0x69],ebp
  42dc41:	xchg   edi,eax
  42dc42:	stc    
  42dc43:	cs mov bh,dh
  42dc46:	adc    al,0x26
  42dc48:	(bad)  
  42dc49:	push   edi
  42dc4a:	addr16 jmp 0x625fe3c9
  42dc50:	mov    BYTE PTR [ebp+0x73],bh
  42dc53:	icebp  
  42dc54:	mov    ebp,0x5e065279
  42dc59:	and    al,0xfa
  42dc5b:	je     0x42dc85
  42dc5d:	jge    0x42dcd2
  42dc5f:	loope  0x42dc3d
  42dc61:	outs   dx,BYTE PTR ds:[esi]
  42dc62:	xlat   BYTE PTR ds:[ebx]
  42dc63:	out    dx,al
  42dc64:	leave  
  42dc65:	mov    bh,0xc0
  42dc67:	pop    ebp
  42dc68:	sbb    BYTE PTR [edi+ecx*8-0x77cbcb16],cl
  42dc6f:	xor    al,0x77
  42dc71:	dec    ecx
  42dc72:	leave  
  42dc73:	dec    esp
  42dc74:	add    ecx,DWORD PTR [ecx+0x5b]
  42dc77:	push   ebp
  42dc78:	and    al,0x4c
  42dc7a:	or     dh,BYTE PTR [edi+0x35]
  42dc7d:	mov    ecx,0xfac8
  42dc82:	add    ax,sp
  42dc85:	out    0xf6,al
  42dc87:	jo     0x42dc67
  42dc89:	jb     0x42dc72
  42dc8b:	xchg   DWORD PTR [edi+0x4ba3591],edi
  42dc91:	loope  0x42dc4b
  42dc93:	outs   dx,DWORD PTR ds:[esi]
  42dc94:	je     0x42dc57
  42dc96:	jne    0x42dd13
  42dc98:	inc    ebx
  42dc99:	add    BYTE PTR [edx],al
  42dc9b:	stos   DWORD PTR es:[edi],eax
  42dc9c:	inc    esp
  42dc9d:	adc    al,0xf5
  42dc9f:	in     al,dx
  42dca0:	clc    
  42dca1:	jl     0x42dc56
  42dca3:	retf   0x8b13
  42dca6:	push   eax
  42dca7:	hlt    
  42dca8:	add    eax,0xffffffe2
  42dcab:	and    dh,BYTE PTR [edx]
  42dcad:	pop    ebp
  42dcae:	push   es
  42dcaf:	dec    edx
  42dcb0:	pop    es
  42dcb1:	xor    edx,DWORD PTR [edi]
  42dcb3:	clc    
  42dcb4:	xchg   DWORD PTR [esi-0x66],ecx
  42dcb7:	jp     0x42dc79
  42dcb9:	punpckhwd mm4,mm6
  42dcbc:	fdivp  st(7),st
  42dcbe:	sbb    DWORD PTR [edx+0x5c],edi
  42dcc1:	cld    
  42dcc2:	fnstenv [ebp-0x41e61aee]
  42dcc8:	add    BYTE PTR [ebp-0xe],0xf3
  42dccc:	xchg   DWORD PTR [ebp-0xe],eax
  42dccf:	mov    esi,0x66152474
  42dcd4:	arpl   WORD PTR [eax],ax
  42dcd6:	cmp    DWORD PTR [ebx*1+0x74be658b],edi
  42dcdd:	sbb    al,al
  42dcdf:	mov    esi,0x47891074
  42dce4:	or     eax,0x30000ff
  42dce9:	sub    ebp,ecx
  42dceb:	dec    ebp
  42dcec:	ja     0x42dcaf
  42dcee:	test   BYTE PTR [ebp+0x4d8431ce],0x5d
  42dcf5:	xor    eax,DWORD PTR [ecx]
  42dcf7:	dec    ebx
  42dcf8:	inc    ebp
  42dcf9:	(bad)  
  42dcfb:	jae    0x42dcbf
  42dcfd:	retf   
  42dcfe:	(bad)  
  42dd00:	cdq    
  42dd01:	rol    DWORD PTR [edx-0x4648f5ba],0xf
  42dd08:	rcr    BYTE PTR [edi-0x23],cl
  42dd0b:	call   FWORD PTR [ecx+0x49085c7d]
  42dd11:	mov    ecx,0xa637e4c6
  42dd16:	mov    ebx,0xbbb825e8
  42dd1b:	cli    
  42dd1c:	lods   al,BYTE PTR ds:[esi]
  42dd1d:	dec    esi
  42dd1e:	inc    ecx
  42dd1f:	test   edi,esi
  42dd21:	lea    eax,[ecx-0x43f9e446]
  42dd27:	ss push 0xffffff95
  42dd2a:	or     al,0x82
  42dd2c:	leave  
  42dd2d:	lock mov ebx,0x59c6aefa
  42dd33:	aaa    
  42dd34:	cmc    
  42dd35:	repz aad 0xe4
  42dd38:	call   0x1b87652a
  42dd3d:	int    0x86
  42dd3f:	dec    esp
  42dd40:	inc    ebx
  42dd41:	add    al,0x42
  42dd43:	and    al,0x67
  42dd45:	bnd jmp 0x42dcce
  42dd48:	jb     0x42dd8f
  42dd4a:	test   BYTE PTR [eax+eax*1+0x0],0x2b
  42dd4f:	xchg   BYTE PTR [edx-0x43e22c72],cl
  42dd55:	adc    DWORD PTR ss:[ecx+0x37cc7f0c],edi
  42dd5c:	mov    esp,0x3f30fa
  42dd61:	xchg   ecx,ebp
  42dd63:	mov    esp,0x953bb20c
  42dd68:	inc    eax
  42dd69:	cmp    edx,esi
  42dd6b:	mov    BYTE PTR [eax*4-0x5438ef7],cl
  42dd72:	js     0x42ddcb
  42dd74:	sbb    ebx,edi
  42dd76:	jmp    0x20e7:0x68002730
  42dd7d:	xchg   DWORD PTR [eax-0x53e7cd8b],ecx
  42dd83:	rcl    DWORD PTR [ebx-0x5],0xca
  42dd87:	pop    esp
  42dd88:	mov    esp,0x32ce3b74
  42dd8d:	or     BYTE PTR [edi+0x33],cl
  42dd90:	push   esp
  42dd91:	fstp   TBYTE PTR ds:0xa4c3647e
  42dd97:	ret    0x6880
  42dd9a:	sub    bh,BYTE PTR [esi-0x19]
  42dd9d:	mov    BYTE PTR [ebx+0x58],bh
  42dda0:	sub    BYTE PTR [ebx-0x56e7a78d],cl
  42dda6:	pop    eax
  42dda7:	test   eax,0xf74fbc2c
  42ddac:	ror    DWORD PTR [edx+esi*4],cl
  42ddaf:	inc    esi
  42ddb0:	dec    esp
  42ddb1:	mov    esp,0x39fd0000
  42ddb6:	mov    edx,0x11b13c2f
  42ddbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddbc:	in     eax,dx
  42ddbd:	jge    0x42dd99
  42ddbf:	jne    0x42dda2
  42ddc1:	repnz add BYTE PTR [edi-0x1d],al
  42ddc5:	sub    eax,0x7dd4e365
  42ddca:	xor    bh,BYTE PTR [ebx+esi*2+0x1b362b28]
  42ddd1:	or     ch,al
  42ddd3:	mov    esp,0xd46f2043
  42ddd8:	lods   eax,DWORD PTR ds:[esi]
  42ddd9:	pop    es
  42ddda:	lock mov BYTE PTR [ecx-0x1a],dh
  42ddde:	or     dh,BYTE PTR [esi]
  42dde0:	inc    edi
  42dde1:	jge    0x42de5f
  42dde3:	setl   BYTE PTR [edi]
  42dde6:	lock stos DWORD PTR es:[edi],eax
  42dde8:	out    0x5b,al
  42ddea:	repnz mov ebx,0x7a7374b3
  42ddf0:	(bad)  
  42ddf1:	out    0xe5,eax
  42ddf3:	add    esi,DWORD PTR [edi]
  42ddf5:	test   eax,0xab30e024
  42ddfa:	sub    al,0xe0
  42ddfc:	clc    
  42ddfd:	mov    dl,bh
  42ddff:	mov    ?,ebx
  42de01:	jnp    0x42de03
  42de03:	inc    ecx
  42de04:	inc    ebx
  42de05:	sub    eax,0x7d71a46d
  42de0a:	add    BYTE PTR [esi-0x219324b8],dh
  42de10:	mov    ecx,0x7ca6e495
  42de15:	sub    dh,BYTE PTR [ebx-0x3effff16]
  42de1b:	jmp    0x2a09:0x31a6e630
  42de22:	and    bh,al
  42de24:	hlt    
  42de25:	neg    BYTE PTR [eax-0x33812242]
  42de2b:	jns    0x42de70
  42de2d:	(bad)  
  42de2f:	pop    es
  42de30:	and    eax,0x73793b03
  42de35:	add    eax,0xd4f961a8
  42de3a:	dec    esp
  42de3b:	mov    ch,0xc5
  42de3d:	mov    edi,0x4e1107ad
  42de42:	es xor dl,bh
  42de45:	mov    esp,0x16f78c2c
  42de4a:	mov    WORD PTR [ecx-0x7d],?
  42de4d:	sub    DWORD PTR [edi],eax
  42de4f:	into   
  42de50:	out    0x31,eax
  42de52:	cmp    dh,BYTE PTR [ecx+eax*1]
  42de55:	jb     0x42decd
  42de57:	pop    eax
  42de58:	inc    ecx
  42de59:	jo     0x42de51
  42de5b:	push   edi
  42de5c:	push   ecx
  42de5d:	add    bl,BYTE PTR [ebx-0x5deebc4b]
  42de63:	not    DWORD PTR [esi+esi*8]
  42de66:	scas   eax,DWORD PTR es:[edi]
  42de67:	std    
  42de68:	(bad)  
  42de6a:	int    0x45
  42de6c:	pop    ebx
  42de6d:	test   DWORD PTR ds:0xbc0585fd,edi
  42de73:	jns    0x42de7e
  42de75:	lahf   
  42de76:	xor    DWORD PTR ds:0x29a72438,edi
  42de7c:	test   DWORD PTR [eax+eax*1+0x0],eax
  42de80:	nop
  42de81:	jns    0x42de7c
  42de83:	into   
  42de84:	mul    DWORD PTR [edi]
  42de86:	cli    
  42de87:	add    BYTE PTR [ebx],bl
  42de89:	xchg   esp,eax
  42de8a:	arpl   WORD PTR [eax],ax
  42de8c:	xchg   ecx,eax
  42de8d:	inc    ebx
  42de8e:	sbb    eax,0x74b9a98b
  42de93:	sbb    ch,dl
  42de95:	ins    DWORD PTR es:[edi],dx
  42de96:	dec    edi
  42de97:	call   FWORD PTR [ebx]
  42de99:	sub    dh,dh
  42de9b:	jne    0x42debf
  42de9d:	mov    edi,0x12b60874
  42dea2:	iret   
  42dea3:	push   DWORD PTR [ecx+0x7774b9b4]
  42dea9:	enter  0x19b,0x1e
  42dead:	cmp    BYTE PTR [ebx-0xe],ah
  42deb0:	mov    bh,0x99
  42deb2:	add    BYTE PTR [eax],al
  42deb4:	push   cs
  42deb5:	stos   DWORD PTR es:[edi],eax
  42deb6:	inc    esp
  42deb7:	cld    
  42deb8:	xchg   esp,esi
  42deba:	adc    al,0x8b
  42debc:	fwait
  42debd:	pop    ebx
  42debe:	cmp    DWORD PTR [ecx-0x16b6a465],ecx
  42dec4:	out    dx,al
  42dec5:	xor    BYTE PTR [ecx],al
  42dec7:	add    BYTE PTR [ebp-0xc],ah
  42deca:	clc    
  42decb:	cmp    DWORD PTR [ebx-0x1c72f9d5],ebx
  42ded1:	shl    dh,cl
  42ded3:	call   DWORD PTR [ebp-0x13]
  42ded6:	ins    BYTE PTR es:[edi],dx
  42ded7:	cmp    esi,DWORD PTR [edi+0x2e]
  42deda:	jp     0x42deff
  42dedc:	cmp    bh,BYTE PTR [esi-0x343c7c0a]
  42dee2:	add    eax,0xcd000075
  42dee7:	stos   BYTE PTR es:[edi],al
  42dee8:	aas    
  42dee9:	sbb    BYTE PTR [ebx],cl
  42deeb:	ja     0x42df5a
  42deed:	pop    ss
  42deee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42deef:	aaa    
  42def0:	push   ecx
  42def1:	lea    ebp,[eax+0x36c38223]
  42def7:	jbe    0x42df2e
  42def9:	(bad)  
  42defa:	xchg   ecx,eax
  42defb:	sti    
  42defc:	mov    ecx,0xdbbfdb0f
  42df01:	push   DWORD PTR [edi]
  42df03:	bound  ebp,QWORD PTR [ebx+0x1953ac24]
  42df09:	daa    
  42df0a:	outs   dx,DWORD PTR ds:[esi]
  42df0b:	ss (bad) 
  42df0d:	jb     0x42df42
  42df0f:	pop    es
  42df10:	or     al,0x36
  42df12:	stc    
  42df13:	xor    BYTE PTR [edx],ch
  42df15:	adc    eax,0xafdc5b4
  42df1a:	mov    bl,0xb8
  42df1c:	mov    ds:0x440730fa,al
  42df21:	add    DWORD PTR [ebp+0x4b],ebp
  42df24:	loop   0x42df30
  42df26:	mov    ebx,0x18faa2d3
  42df2b:	push   es
  42df2c:	inc    edx
  42df2d:	hlt    
  42df2e:	inc    eax
  42df2f:	inc    ebx
  42df30:	add    al,0x7f
  42df32:	test   BYTE PTR [esi],0x44
  42df35:	jg     0x42df35
  42df37:	pop    ecx
  42df38:	or     BYTE PTR [ebx-0x547ed7c],al
  42df3e:	lock xor BYTE PTR [edx-0x2315869],al
  42df45:	jle    0x42df26
  42df47:	xchg   esi,eax
  42df48:	or     BYTE PTR [eax+eax*1-0x2730000],al
  42df4f:	inc    DWORD PTR [eax+0x13]
  42df52:	gs (bad) 
  42df55:	inc    ecx
  42df56:	test   bh,dh
  42df58:	xor    eax,ebx
  42df5a:	or     eax,0x297fbf7f
  42df5f:	pop    ss
  42df60:	jb     0x42df72
  42df62:	add    eax,0x7a923700
  42df67:	xchg   BYTE PTR [ebp+0x772eb829],dl
  42df6d:	jae    0x42dfae
  42df6f:	pusha  
  42df70:	inc    eax
  42df71:	adc    BYTE PTR [ebx-0x597e7723],al
  42df77:	stos   DWORD PTR es:[edi],eax
  42df78:	aaa    
  42df79:	(bad)  
  42df7a:	std    
  42df7b:	fnstenv ss:[ebx]
  42df7e:	push   esp
  42df7f:	or     eax,esi
  42df81:	(bad)  
  42df82:	out    0x3,eax
  42df84:	aaa    
  42df85:	mov    ah,0xe
  42df87:	push   cs
  42df88:	sub    al,0xb1
  42df8a:	ins    DWORD PTR es:[edi],dx
  42df8b:	add    esi,DWORD PTR [edi]
  42df8d:	xor    al,0x27
  42df8f:	stos   DWORD PTR es:[edi],eax
  42df90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df91:	xor    ebp,eax
  42df93:	add    ecx,eax
  42df95:	jnp    0x42df77
  42df97:	or     BYTE PTR [ebx+0x3db8c5dd],bh
  42df9d:	mov    dh,0x9f
  42df9f:	jecxz  0x42dfde
  42dfa1:	mov    al,0x38
  42dfa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dfa4:	sub    eax,0x2063d47a
  42dfa9:	jp     0x42df92
  42dfab:	lods   al,BYTE PTR ds:[esi]
  42dfac:	mov    ds:0xa7fb5,eax
  42dfb1:	add    BYTE PTR [ebx+0x28bb6702],cl
  42dfb7:	add    cl,bh
  42dfb9:	mul    BYTE PTR [eax+0x2c03e834]
  42dfbf:	scas   eax,DWORD PTR es:[edi]
  42dfc0:	sbb    al,0xa6
  42dfc2:	in     eax,dx
  42dfc3:	jns    0x42e013
  42dfc5:	pop    ds
  42dfc6:	push   0x7c35dd7c
  42dfcb:	mov    ch,0x4f
  42dfcd:	push   es
  42dfce:	sub    al,0xb2
  42dfd0:	or     al,0xa6
  42dfd2:	int    0x79
  42dfd4:	cld    
  42dfd5:	jle    0x42df9f
  42dfd7:	jns    0x42dfc0
  42dfd9:	lods   al,BYTE PTR ds:[esi]
  42dfda:	outs   dx,DWORD PTR ds:[esi]
  42dfdb:	mov    ch,0x2f
  42dfdd:	or     eax,0xa5fcb62c
  42dfe2:	lods   eax,DWORD PTR ds:[esi]
  42dfe3:	jns    0x42e04b
  42dfe5:	mov    ebx,0xf6a9023b
  42dfea:	mov    ebx,0x9003e834
  42dfef:	push   0x6e
  42dff1:	dec    ecx
  42dff2:	dec    ebx
  42dff3:	and    bl,0xb
  42dff6:	xor    ecx,DWORD PTR [ebp-0x144cd400]
  42dffc:	xor    al,0xf7
  42dffe:	jns    0x42e031
  42e000:	add    eax,0x4ab255d2
  42e005:	adc    eax,0xe8093599
  42e00a:	(bad)  
  42e00b:	retf   0x1f85
  42e00e:	add    DWORD PTR [si],0xfffffff1
  42e012:	cmp    edx,DWORD PTR [ecx+0x7210]
  42e018:	icebp  
  42e019:	aas    
  42e01a:	repz in eax,dx
  42e01c:	sub    al,0x24
  42e01e:	out    0x88,al
  42e020:	lods   al,BYTE PTR ds:[esi]
  42e021:	jmp    0x42e057
  42e023:	lahf   
  42e024:	aaa    
  42e025:	sub    al,0x11
  42e027:	out    dx,al
  42e028:	test   al,0x6e
  42e02a:	fist   WORD PTR [esi-0xabc8218]
  42e030:	loope  0x42e031
  42e032:	and    al,0x13
  42e034:	cmp    edi,DWORD PTR [ebp+0x73]
  42e037:	fnstsw WORD PTR [ebp+0x1cfcf965]
  42e03d:	mov    cl,0xc5
  42e03f:	pop    ss
  42e040:	sar    bh,0x10
  42e043:	data16 es sub dl,bh
  42e047:	aam    0x3c
  42e049:	mov    WORD PTR [ebx],es
  42e04b:	aas    
  42e04c:	test   al,0x7d
  42e04e:	sub    DWORD PTR [ecx],0x30
  42e051:	mov    al,0x7b
  42e053:	inc    edi
  42e054:	mov    BYTE PTR [ebp-0x1b],bh
  42e057:	jmp    0xe16a:0x9658811e
  42e05e:	(bad)  
  42e05f:	sub    edx,ebx
  42e061:	js     0x42dfec
  42e063:	rol    bl,cl
  42e065:	ss add eax,esi
  42e068:	mov    cl,0x36
  42e06a:	add    edi,esp
  42e06c:	mov    ecx,0xb1f20136
  42e071:	add    DWORD PTR ss:[eax],eax
  42e074:	retf   
  42e075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e076:	cmp    eax,DWORD PTR [eax]
  42e078:	ficomp DWORD PTR [edi+0x3b]
  42e07e:	scas   eax,DWORD PTR es:[edi]
  42e07f:	lahf   
  42e080:	cmp    eax,DWORD PTR [eax]
  42e082:	or     ah,BYTE PTR [eax-0x6010ffc5]
  42e088:	cmp    eax,DWORD PTR [eax]
  42e08a:	mov    ebp,0xca003b9f
  42e08f:	lahf   
  42e090:	cmp    eax,DWORD PTR [eax]
  42e092:	mov    edx,0x70003ba4
  42e097:	lahf   
  42e098:	cmp    eax,DWORD PTR [eax]
  42e09a:	lods   al,BYTE PTR ds:[esi]
  42e09b:	lahf   
  42e09c:	cmp    eax,DWORD PTR [eax]
  42e09e:	dec    eax
  42e09f:	mov    ds:0xa2c1003b,al
  42e0a4:	cmp    eax,DWORD PTR [eax]
  42e0a6:	push   cs
  42e0a7:	mov    ds:0xa343003b,eax
  42e0ac:	cmp    eax,DWORD PTR [eax]
  42e0ae:	mov    ah,0xae
  42e0b0:	cmp    eax,DWORD PTR [eax]
  42e0b2:	retf   0x3bae
  42e0b5:	add    BYTE PTR [eax],dl
  42e0b7:	test   eax,0xb184003b
  42e0bc:	cmp    eax,DWORD PTR [eax]
  42e0be:	out    dx,al
  42e0bf:	scas   al,BYTE PTR es:[edi]
  42e0c0:	cmp    eax,DWORD PTR [eax]
  42e0c2:	mov    al,0xa4
  42e0c4:	cmp    eax,DWORD PTR [eax]
  42e0c6:	loope  0x42e071
  42e0c8:	cmp    eax,DWORD PTR [eax]
  42e0ca:	or     al,0x9c
  42e0cc:	cmp    eax,DWORD PTR [eax]
  42e0ce:	push   esp
  42e0cf:	test   eax,0xa990003b
  42e0d4:	cmp    eax,DWORD PTR [eax]
  42e0d6:	and    al,0xa6
  42e0d8:	cmp    eax,DWORD PTR [eax]
  42e0da:	repnz test eax,0xa97c003b
  42e0e0:	cmp    eax,DWORD PTR [eax]
  42e0e2:	add    BYTE PTR [eax],al
  42e0e4:	mov    ebp,DWORD PTR [ecx-0x5666ffc5]
  42e0ea:	cmp    eax,DWORD PTR [eax]
  42e0ec:	jg     0x42e086
  42e0ee:	cmp    eax,DWORD PTR [eax]
  42e0f0:	aaa    
  42e0f1:	dec    edx
  42e0f2:	xchg   esi,eax
  42e0f3:	cmp    eax,0x3d95f237
  42e0f8:	aaa    
  42e0f9:	sub    al,0x96
  42e0fb:	cmp    eax,0x3d962637
  42e100:	aaa    
  42e101:	adc    DWORD PTR [esi-0x6371c8c3],0x3d
  42e108:	aaa    
  42e109:	(bad)  
  42e10a:	xchg   edi,eax
  42e10b:	cmp    eax,0x3d982337
  42e110:	aaa    
  42e111:	xchg   esp,eax
  42e112:	cwde   
  42e113:	cmp    eax,0x3d983b37
  42e118:	aaa    
  42e119:	in     al,dx
  42e11a:	xchg   edi,eax
  42e11b:	cmp    eax,0x3d97e437
  42e120:	aaa    
  42e121:	ss cwde 
  42e123:	cmp    eax,0x3d90c837
  42e128:	aaa    
  42e129:	adc    edx,DWORD PTR [eax+0x5c21373d]
  42e12f:	cmp    eax,0x3d86d337
  42e134:	aaa    
  42e135:	xor    DWORD PTR [ecx-0x7d70c8c3],ecx
  42e13b:	cmp    eax,0x3d861037
  42e140:	aaa    
  42e141:	pop    ecx
  42e142:	xchg   DWORD PTR ds:0x3d86f537,edi
  42e148:	add    BYTE PTR [eax],al
  42e14a:	aaa    
  42e14b:	xchg   esp,eax
  42e14c:	mov    BYTE PTR ds:0x3d5f4737,bh
  42e152:	aaa    
  42e153:	call   0x3d81:0x17373d5e
  42e15a:	aaa    
  42e15b:	jo     0x42e0de
  42e15d:	cmp    eax,0x3d88f637
  42e162:	aaa    
  42e163:	inc    esi
  42e164:	pusha  
  42e165:	cmp    eax,0x3d59c437
  42e16a:	aaa    
  42e16b:	xor    al,0x5a
  42e16d:	pusha  
  42e16e:	push   0x34
  42e170:	out    0x5e,al
  42e172:	bound  esi,QWORD PTR [esi+eiz*4]
  42e175:	pop    esi
  42e176:	pop    edx
  42e177:	xor    al,0x5f
  42e179:	pop    edi
  42e17a:	push   edx
  42e17b:	xor    al,0x30
  42e17d:	pop    edi
  42e17e:	dec    edx
  42e17f:	xor    al,0xbc
  42e181:	pop    edi
  42e182:	inc    edx
  42e183:	xor    al,0xd9
  42e185:	xchg   ebx,eax
  42e186:	cmp    dh,BYTE PTR [ebx+eiz*1]
  42e189:	mov    WORD PTR [edx],?
  42e18b:	xor    al,0xec
  42e18d:	xchg   BYTE PTR [edx],ch
  42e18f:	xor    al,0x4d
  42e191:	data16 and dh,BYTE PTR [eax+ebp*8]
  42e195:	add    bl,BYTE PTR [ecx+0x31]
  42e198:	in     al,0xff
  42e19a:	cmp    ebp,DWORD PTR [esi]
  42e19c:	jmp    0x42e1a9
  42e19e:	ds sub ch,bh
  42e1a1:	pop    es
  42e1a2:	xor    ebp,ebp
  42e1a4:	and    BYTE PTR [edi],al
  42e1a6:	sub    eax,0x7e12d827
  42e1ab:	and    dh,bh
  42e1ad:	sldt   WORD PTR [eax]
  42e1b0:	inc    edx
  42e1b1:	push   ds
  42e1b2:	repz sbb edi,DWORD PTR [esi]
  42e1b5:	sbb    ch,dh
  42e1b7:	sbb    DWORD PTR [ecx+0x1a],eax
  42e1ba:	out    dx,al
  42e1bb:	sbb    BYTE PTR [eax],ch
  42e1bd:	sbb    ch,ah
  42e1bf:	adc    eax,0xe2c9542c
  42e1c4:	push   edi
  42e1c5:	push   ebx
  42e1c6:	leave  
  42e1c7:	loop   0x42e1e3
  42e1c9:	push   edx
  42e1ca:	(bad)  
  42e1cb:	fistp  WORD PTR [ebx]
  42e1cd:	dec    esi
  42e1ce:	or     ebp,esp
  42e1d0:	adc    BYTE PTR [eax+edx*1-0x14],cl
  42e1d4:	sbb    BYTE PTR [ebx+0x1],cl
  42e1d7:	jmp    0xeb7f:0xe5fd4811
  42e1de:	mov    al,0x4a
  42e1e0:	jle    0x42e1cd
  42e1e2:	mov    al,0x4a
  42e1e4:	or     al,0x45
  42e1e6:	add    DWORD PTR [eax-0x5d0bb3c],esp
  42e1ec:	mov    al,ds:0x9adc3541
  42e1f1:	inc    eax
  42e1f2:	xor    edx,esi
  42e1f4:	pushf  
  42e1f5:	cmp    al,0x37
  42e1f7:	rcr    BYTE PTR [ebp-0x25fc9c1],cl
  42e1fd:	jmp    0xbe3b:0x3880b047
  42e204:	hlt    
  42e205:	repnz ds stos BYTE PTR es:[edi],al
  42e208:	cmp    bh,ch
  42e20a:	inc    edx
  42e20b:	jmp    0xc0d3ce43
  42e210:	(bad)  
  42e211:	aaa    
  42e212:	add    esp,esi
  42e214:	add    BYTE PTR [eax],al
  42e216:	(bad)  
  42e217:	aaa    
  42e218:	add    DWORD PTR [eax],edi
  42e21a:	lds    esi,FWORD PTR [edi]
  42e21c:	add    DWORD PTR [ebp+eiz*4+0x37],ebx
  42e220:	add    DWORD PTR [edi-0x3dfec85b],ebp
  42e226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e227:	aaa    
  42e228:	add    DWORD PTR [eax+ebp*4-0x38e5fec9],edx
  42e22f:	add    DWORD PTR ss:[edx],edi
  42e232:	(bad)  
  42e233:	add    DWORD PTR ss:[edi-0x58fec869],ebp
  42e23a:	xchg   edi,eax
  42e23b:	aaa    
  42e23c:	add    DWORD PTR [esi],eax
  42e23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e23f:	add    DWORD PTR ss:[eax-0x27fec959],esi
  42e246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e247:	add    DWORD PTR ss:[eax],ebx
  42e24a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e24b:	add    DWORD PTR ss:[esi+eax*8+0x36],edx
  42e250:	add    edx,eax
  42e252:	push   ebx
  42e253:	aaa    
  42e254:	add    DWORD PTR [edx+ebx*2+0x37],ebp
  42e258:	add    DWORD PTR [esi+0x58013752],edx
  42e25e:	pop    edx
  42e25f:	aaa    
  42e260:	add    DWORD PTR [eax],eax
  42e262:	cmp    eax,0xab003c0e
  42e267:	push   cs
  42e268:	cmp    al,0x0
  42e26a:	mov    ds:0x2c003ba1,al
  42e26f:	mov    eax,ds:0xa10c003b
  42e274:	cmp    eax,DWORD PTR [eax]
  42e276:	push   eax
  42e277:	adc    al,0x3c
  42e279:	add    BYTE PTR [eax],al
  42e27b:	add    BYTE PTR [eax+0x14],dl
  42e27e:	cmp    al,0x0
  42e280:	je     0x42e292
  42e282:	cmp    al,0x0
  42e284:	stc    
  42e285:	(bad)  
  42e287:	add    BYTE PTR [edx],ch
  42e289:	adc    BYTE PTR [eax+eax*1],bh
  42e28c:	gs (bad) 
  42e28f:	add    ah,cl
  42e291:	(bad)  
  42e293:	add    BYTE PTR [esi+0x12],ah
  42e296:	cmp    al,0x0
  42e298:	pop    edi
  42e299:	adc    bh,BYTE PTR [eax+eax*1]
  42e29c:	adc    bh,BYTE PTR fs:[eax+eax*1]
  42e2a0:	cmp    eax,0x22003c12
  42e2a5:	adc    bh,BYTE PTR [eax+eax*1]
  42e2a8:	dec    ebx
  42e2a9:	adc    bh,BYTE PTR [eax+eax*1]
  42e2ac:	or     al,0x12
  42e2ae:	cmp    al,0x0
  42e2b0:	pop    esp
  42e2b1:	(bad)  
  42e2b2:	cmp    eax,DWORD PTR [eax]
  42e2b4:	pop    esp
  42e2b5:	(bad)  
  42e2b6:	cmp    eax,DWORD PTR [eax]
  42e2b8:	rcl    BYTE PTR [ebx],1
  42e2ba:	cmp    al,0x0
  42e2bc:	rcl    BYTE PTR [ebx],1
  42e2be:	cmp    al,0x0
  42e2c0:	cmp    al,0xd5
  42e2c2:	cmp    eax,DWORD PTR [eax]
  42e2c4:	pusha  
  42e2c5:	aam    0x3b
  42e2c7:	add    cl,bl
  42e2c9:	aam    0x3b
  42e2cb:	add    BYTE PTR [eax+0x6d003bd4],ah
  42e2d1:	aam    0x3b
  42e2d3:	add    BYTE PTR [ebx+0x7281e5f2],ch
  42e2d9:	imul   eax,DWORD PTR [eax],0x0
  42e2dc:	aaa    
  42e2dd:	pop    ebp
  42e2de:	or     BYTE PTR [eax+eax*1+0x0],0xcb
  42e2e3:	add    al,BYTE PTR [ebx-0x7d0538b4]
  42e2e9:	dec    esp
  42e2ea:	repz xor dl,BYTE PTR [ebx-0x79]
  42e2ee:	pop    edx
  42e2ef:	push   ebp
  42e2f0:	push   edi
  42e2f1:	das    
  42e2f2:	test   edx,ecx
  42e2f4:	jp     0x42e2ed
  42e2f6:	mov    edx,0xa88ae9e
  42e2fb:	cmp    eax,0xd46f547d
  42e300:	pop    eax
  42e301:	fdivr  QWORD PTR [esi-0x1d775660]
  42e307:	inc    esp
  42e308:	jge    0x42e34e
  42e30a:	addr16 out 0xb6,al
  42e30d:	ss jge 0x42e36a
  42e310:	and    DWORD PTR [ebx],0x36fd5d38
  42e316:	lea    ebp,[edx-0x7f]
  42e319:	sbb    edi,DWORD PTR [eax]
  42e31b:	pop    ebp
  42e31c:	std    
  42e31d:	cmp    BYTE PTR [edx],al
  42e31f:	ins    DWORD PTR es:[edi],dx
  42e320:	xor    cl,BYTE PTR [ecx]
  42e322:	push   cs
  42e323:	sub    BYTE PTR [ecx],bl
  42e325:	or     edi,DWORD PTR [eax+0x3700086b]
  42e32b:	xor    al,0x52
  42e32d:	adc    al,0xba
  42e32f:	popa   
  42e330:	sbb    esi,ecx
  42e332:	push   ds
  42e333:	pop    ecx
  42e334:	or     BYTE PTR [eax],al
  42e336:	aaa    
  42e337:	push   0x78
  42e339:	inc    edx
  42e33a:	aas    
  42e33b:	pop    esi
  42e33c:	enter  0xb288,0x2c
  42e340:	mov    al,0xfa
  42e342:	adc    BYTE PTR [edx+0x4278],dl
  42e348:	sub    esp,esp
  42e34a:	add    DWORD PTR [edi+0x0],0xc00aaff2
  42e351:	and    DWORD PTR [ebx],ecx
  42e353:	mov    DWORD PTR [edx-0x17054fb0],edi
  42e359:	xor    esp,DWORD PTR [eax-0x17bcdebc]
  42e35f:	jp     0x42e314
  42e361:	pop    ds
  42e362:	push   ebx
  42e363:	mov    cl,0xcd
  42e365:	mov    esp,0x72cdf464
  42e36a:	inc    edx
  42e36b:	jge    0x42e3e2
  42e36d:	adc    al,0x71
  42e36f:	push   edi
  42e370:	idiv   DWORD PTR [esp+ebp*4-0x4b899655]
  42e377:	or     BYTE PTR [eax+edi*8+0x1f],dh
  42e37b:	je     0x42e380
  42e37d:	hlt    
  42e37e:	out    0x82,eax
  42e380:	pop    ebp
  42e381:	stc    
  42e382:	mov    ch,0x44
  42e384:	out    0xe7,eax
  42e386:	sar    DWORD PTR [esi-0x4d],0x7f
  42e38a:	add    DWORD PTR [ecx+0x38e037d],esi
  42e390:	stos   BYTE PTR es:[edi],al
  42e391:	mov    eax,0x726db1ef
  42e396:	xchg   edi,eax
  42e397:	jl     0x42e40e
  42e399:	pop    ebx
  42e39a:	pop    ecx
  42e39b:	xchg   ebx,eax
  42e39c:	pop    esi
  42e39d:	jb     0x42e40d
  42e39f:	mov    bl,0xb3
  42e3a1:	imul   ebx,DWORD PTR [ecx+ecx*1-0x27],0x3694c06f
  42e3a9:	xor    al,0xe8
  42e3ab:	hlt    
  42e3ac:	add    BYTE PTR [eax],al
  42e3ae:	jb     0x42e36e
  42e3b0:	and    esp,edi
  42e3b2:	mov    cl,0x7b
  42e3b4:	test   al,0x9b
  42e3b6:	inc    edx
  42e3b7:	jae    0x42e379
  42e3b9:	pop    es
  42e3ba:	test   al,0x54
  42e3bc:	call   0x7176fb45
  42e3c1:	inc    esi
  42e3c2:	add    eax,DWORD PTR [edx+0x5b]
  42e3c5:	dec    ecx
  42e3c6:	sub    DWORD PTR [ebx-0x56c233e4],edi
  42e3cc:	xor    DWORD PTR [eax],eax
  42e3ce:	neg    BYTE PTR [ebx-0x1a]
  42e3d1:	test   BYTE PTR [edi],dl
  42e3d3:	xor    al,0x1
  42e3d5:	pusha  
  42e3d6:	jno    0x42e3ed
  42e3d8:	cli    
  42e3d9:	outs   dx,BYTE PTR ds:[esi]
  42e3da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3db:	ds mov dl,0xb7
  42e3de:	xor    BYTE PTR ds:0xa53731aa,bh
  42e3e4:	inc    edx
  42e3e5:	icebp  
  42e3e6:	dec    ebp
  42e3e7:	adc    BYTE PTR [ecx-0x1bf8616],dl
  42e3ed:	xor    eax,0xa487733b
  42e3f2:	cmp    BYTE PTR [ebx+edx*2-0x6aefd287],bh
  42e3f9:	(bad)  
  42e3fa:	(bad)  
  42e3fb:	cmp    eax,eax
  42e3fd:	adc    DWORD PTR [ecx],edi
  42e3ff:	and    eax,ecx
  42e401:	test   al,0x93
  42e403:	je     0x42e38c
  42e405:	ins    BYTE PTR es:[edi],dx
  42e406:	pop    esp
  42e407:	ins    DWORD PTR es:[edi],dx
  42e408:	stc    
  42e409:	push   cs
  42e40a:	or     esi,ebx
  42e40c:	or     BYTE PTR [eax],ch
  42e40e:	pushf  
  42e40f:	cmp    bl,BYTE PTR [esi]
  42e411:	sub    BYTE PTR [eax],al
  42e413:	add    ch,bh
  42e415:	mul    esp
  42e417:	pusha  
  42e418:	mov    ecx,0x98eef9dd
  42e41d:	mov    edx,0x597bf142
  42e422:	sbb    ecx,DWORD PTR [edx]
  42e424:	jb     0x42e3e2
  42e426:	sbb    DWORD PTR [ebp-0x60],0x6e
  42e42a:	stc    
  42e42b:	(bad)  
  42e42d:	cmp    eax,eax
  42e42f:	shl    DWORD PTR [edx],1
  42e431:	push   ecx
  42e432:	shl    BYTE PTR [eax-0x52],0xe1
  42e436:	stc    
  42e437:	mov    dh,0xe0
  42e439:	mov    ecx,0xb8aab143
  42e43e:	pop    eax
  42e43f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e440:	shr    BYTE PTR [ebp+0x3],1
  42e443:	sub    DWORD PTR [esp+esi*1],esi
  42e446:	add    DWORD PTR [eax-0x52],esp
  42e449:	aam    0xf9
  42e44b:	mov    ds,eax
  42e44d:	mov    ebx,0xa1260093
  42e452:	idiv   bh
  42e454:	xchg   ebx,ecx
  42e456:	jne    0x42e457
  42e458:	imul   esp,DWORD PTR [ecx-0x10a1aa78],0xb67a454
  42e462:	test   DWORD PTR [ecx+0x558878a3],ecx
  42e468:	stos   BYTE PTR es:[edi],al
  42e469:	out    dx,al
  42e46a:	test   BYTE PTR [ecx+edi*2-0x5f],bl
  42e46e:	test   BYTE PTR [ebx+0x5d886c90],0xca
  42e475:	psubd  mm7,mm7
  42e478:	add    BYTE PTR [eax],al
  42e47a:	push   ds
  42e47b:	aaa    
  42e47c:	jne    0x42e488
  42e47e:	pop    edi
  42e47f:	ror    BYTE PTR [esi],1
  42e481:	and    ecx,DWORD PTR [edi-0x11]
  42e484:	inc    esp
  42e485:	mov    BYTE PTR [ebp+0x35],al
  42e488:	mov    BYTE PTR [ebp+0x16],dl
  42e48b:	in     eax,dx
  42e48c:	aas    
  42e48d:	or     BYTE PTR [ebx+0x34],dh
  42e490:	add    DWORD PTR [eax-0x72],esi
  42e493:	dec    edx
  42e494:	sti    
  42e495:	pop    esi
  42e496:	add    dl,BYTE PTR [edi]
  42e498:	cmp    al,0x0
  42e49a:	pop    esi
  42e49b:	inc    esp
  42e49c:	add    DWORD PTR [ebp+ecx*8+0x63],esi
  42e4a0:	stc    
  42e4a1:	jmp    FWORD PTR [esi]
  42e4a3:	cmp    BYTE PTR [ebp+0x47],dh
  42e4a6:	cmp    edi,DWORD PTR [eax]
  42e4a8:	add    DWORD PTR [eax],esi
  42e4aa:	pop    esi
  42e4ab:	sub    BYTE PTR [edi*1+0x41345e],dl
  42e4b2:	add    ch,BYTE PTR [esi]
  42e4b4:	cmp    al,0x0
  42e4b6:	dec    esi
  42e4b7:	add    al,0x1
  42e4b9:	je     0x42e4e0
  42e4bb:	dec    esi
  42e4bc:	call   0x17f77aa
  42e4c1:	add    BYTE PTR [esi+0xe000c6d],dl
  42e4c7:	icebp  
  42e4c8:	xchg   esp,eax
  42e4c9:	inc    eax
  42e4ca:	aaa    
  42e4cb:	(bad)  
  42e4cc:	stos   BYTE PTR es:[edi],al
  42e4cd:	cli    
  42e4ce:	dec    edx
  42e4cf:	mov    esi,0x3737fffd
  42e4d4:	out    dx,eax
  42e4d5:	xchg   bh,ch
  42e4d7:	pushf  
  42e4d8:	lods   al,BYTE PTR ds:[esi]
  42e4d9:	pop    es
  42e4da:	mov    esi,0xfb4228
  42e4df:	add    al,ch
  42e4e1:	fidiv  WORD PTR [ebp-0x74]
  42e4e4:	mov    edx,esi
  42e4e6:	stos   BYTE PTR es:[edi],al
  42e4e7:	cli    
  42e4e8:	scas   eax,DWORD PTR es:[edi]
  42e4e9:	fcomp  DWORD PTR [eax-0x5]
  42e4ec:	rol    BYTE PTR [esi],1
  42e4ee:	xchg   edi,eax
  42e4ef:	and    al,0x5d
  42e4f1:	push   ebx
  42e4f2:	inc    ebp
  42e4f3:	out    0xea,eax
  42e4f5:	add    DWORD PTR [eax],0xffffffe7
  42e4f8:	mov    esi,0xb03f70e4
  42e4fd:	es stos DWORD PTR es:[edi],eax
  42e4ff:	out    0x43,al
  42e501:	aam    0x80
  42e503:	aas    
  42e504:	mov    al,ds:0x2be6ab16
  42e509:	in     al,0x80
  42e50b:	inc    ebx
  42e50c:	nop
  42e50d:	inc    esi
  42e50e:	stos   DWORD PTR es:[edi],eax
  42e50f:	xchg   DWORD PTR [edx-0x7f055557],esi
  42e515:	loop   0x42e55a
  42e517:	or     BYTE PTR [eax+esi*8+0x5e577f11],ch
  42e51e:	jl     0x42e4a4
  42e520:	pop    ss
  42e521:	pop    esi
  42e522:	stos   DWORD PTR es:[edi],eax
  42e523:	cli    
  42e524:	lods   al,BYTE PTR ds:[esi]
  42e525:	sahf   
  42e526:	test   DWORD PTR [ebp+0x34],esp
  42e529:	hlt    
  42e52a:	mov    bl,0xf8
  42e52c:	inc    eax
  42e52d:	into   
  42e52e:	inc    edx
  42e52f:	push   cs
  42e530:	sbb    al,0x83
  42e532:	and    al,BYTE PTR [ebp-0x7917ce89]
  42e538:	outs   dx,DWORD PTR ds:[esi]
  42e539:	loop   0x42e4fe
  42e53b:	gs xor al,0x4
  42e53e:	dec    eax
  42e53f:	repz sub al,0x62
  42e542:	mov    ch,0x7b
  42e544:	add    BYTE PTR [eax],al
  42e546:	push   edx
  42e547:	xor    al,0x75
  42e549:	sub    esi,DWORD PTR [esi]
  42e54b:	fistp  DWORD PTR [edx-0x578147ff]
  42e551:	mov    ds:0x63f46e0a,eax
  42e556:	enter  0xe7f2,0x78
  42e55a:	loopne 0x42e518
  42e55c:	pop    esp
  42e55d:	clc    
  42e55e:	in     eax,dx
  42e55f:	outs   dx,BYTE PTR ds:[esi]
  42e560:	jb     0x42e4e9
  42e562:	add    ecx,ebp
  42e564:	loop   0x42e57f
  42e566:	jmp    0x374b2cc7
  42e56b:	xor    al,0x23
  42e56d:	inc    edi
  42e56e:	xlat   BYTE PTR ds:[ebx]
  42e56f:	xor    al,0xe8
  42e571:	add    esi,DWORD PTR [edi]
  42e573:	pop    ebx
  42e574:	fidivr WORD PTR [eax+0x7b]
  42e577:	inc    esp
  42e578:	jno    0x42e501
  42e57a:	add    al,0x6f
  42e57c:	cmp    ch,BYTE PTR [ebp+0x8648bb9]
  42e582:	ins    BYTE PTR es:[edi],dx
  42e583:	int    0xbd
  42e585:	add    dh,bh
  42e587:	data16 and BYTE PTR [ecx-0x52e52c2d],al
  42e58e:	lea    esi,[ebx]
  42e590:	addr16 aas 
  42e592:	fld    TBYTE PTR [esi+0x60]
  42e595:	outs   dx,DWORD PTR ds:[esi]
  42e596:	dec    eax
  42e597:	outs   dx,DWORD PTR ds:[esi]
  42e598:	add    ch,BYTE PTR [ebp-0x53444751]
  42e59e:	ins    DWORD PTR es:[edi],dx
  42e59f:	outs   dx,BYTE PTR ds:[esi]
  42e5a0:	loop   0x42e616
  42e5a2:	test   BYTE PTR [ebx+0x5d],0x48
  42e5a6:	aaa    
  42e5a7:	xor    dh,BYTE PTR [ecx+0x46]
  42e5aa:	add    BYTE PTR [eax],al
  42e5ac:	dec    ebx
  42e5ad:	sub    ah,BYTE PTR ds:0x6132cd18
  42e5b3:	cs pop ebx
  42e5b5:	mov    eax,0xbb1937ae
  42e5ba:	sub    al,0xa0
  42e5bc:	lahf   
  42e5bd:	sbb    ah,BYTE PTR [esi+0x8402f0]
  42e5c3:	mov    cl,0x76
  42e5c5:	mov    edi,0x7dff720c
  42e5ca:	mov    ebp,ebp
  42e5cc:	(bad)
  42e5cf:	in     eax,0x1f
  42e5d1:	jbe    0x42e641
  42e5d3:	stc    
  42e5d4:	mov    bh,0x3c
  42e5d6:	cli    
  42e5d7:	push   0xffffff9d
  42e5d9:	xor    DWORD PTR [esi],esi
  42e5db:	mov    cl,0x47
  42e5dd:	bound  eax,QWORD PTR [ebp-0x69517a4]
  42e5e3:	jbe    0x42e59c
  42e5e5:	lock fsubr st,st(1)
  42e5e8:	sub    DWORD PTR [edi],ebx
  42e5ea:	repz scas eax,DWORD PTR es:[edi]
  42e5ec:	fsubr  DWORD PTR [edi+0x6d]
  42e5ef:	push   es
  42e5f0:	shl    BYTE PTR [edx+0x754ffd42],cl
  42e5f6:	jg     0x42e640
  42e5f8:	xchg   ebx,eax
  42e5f9:	ins    DWORD PTR es:[edi],dx
  42e5fa:	stc    
  42e5fb:	jmp    0x6a4b3bf5
  42e600:	aam    0x34
  42e602:	mov    BYTE PTR [eax+eiz*8+0x682143bc],ah
  42e609:	aas    
  42e60a:	xchg   BYTE PTR [esp+ebp*8+0x68],ch
  42e60e:	stc    
  42e60f:	push   ds
  42e610:	add    BYTE PTR [eax],al
  42e612:	xchg   ebx,eax
  42e613:	mov    ds:0xf80de104,eax
  42e618:	hlt    
  42e619:	pop    ss
  42e61a:	cli    
  42e61b:	aas    
  42e61c:	add    eax,0xb23a927d
  42e621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e622:	dec    edx
  42e623:	mov    ch,0xc8
  42e625:	sub    ah,cl
  42e627:	xor    eax,0x6d930880
  42e62c:	stc    
  42e62d:	jmp    0x704273e3
  42e632:	test   BYTE PTR [edi+0x3a9b2c85],0xb3
  42e639:	gs inc ebx
  42e63b:	ins    DWORD PTR es:[edi],dx
  42e63c:	add    BYTE PTR [eax],al
  42e63e:	dec    esi
  42e63f:	xor    DWORD PTR [eax+0x44eeee4d],ecx
  42e645:	int3   
  42e646:	xchg   ebp,eax
  42e647:	repz or al,0x8b
  42e64a:	dec    ebx
  42e64b:	pushf  
  42e64c:	mov    BYTE PTR [ebp-0x2a],al
  42e64f:	mov    dl,0xd2
  42e651:	je     0x42e689
  42e653:	in     eax,dx
  42e654:	inc    esp
  42e655:	in     al,dx
  42e656:	xchg   ebx,eax
  42e657:	ins    BYTE PTR es:[edi],dx
  42e658:	jp     0x42e695
  42e65a:	(bad)  
  42e65b:	and    al,0x7
  42e65d:	sub    eax,ebp
  42e65f:	cs shr cl,0xdc
  42e663:	idiv   DWORD PTR [ecx-0x38]
  42e666:	popa   
  42e667:	in     eax,dx
  42e668:	bnd repz jne 0x42e621
  42e66c:	jl     0x42e642
  42e66e:	into   
  42e66f:	sbb    al,0x5f
  42e671:	mov    edx,DWORD PTR [ebp+ebx*2+0x54]
  42e675:	xchg   esp,eax
  42e676:	add    BYTE PTR [eax],al
  42e678:	in     eax,dx
  42e679:	hlt    
  42e67a:	jns    0x42e639
  42e67c:	mov    ds,WORD PTR [ecx+0x1ccefff6]
  42e682:	sbb    edi,edi
  42e684:	jmp    0x42e652
  42e686:	or     BYTE PTR [ebp+0xa],0x99
  42e68a:	mov    ah,0x40
  42e68c:	push   ecx
  42e68d:	cdq    
  42e68e:	test   BYTE PTR [ebp-0xa0be5],0x31
  42e695:	in     eax,dx
  42e696:	mov    esi,0xf763c2e8
  42e69b:	call   DWORD PTR ds:0x4e85fd03
  42e6a1:	and    ebp,DWORD PTR [edx]
  42e6a3:	jmp    0x42e62a
  42e6a5:	in     eax,dx
  42e6a6:	inc    esp
  42e6a7:	xchg   esp,eax
  42e6a8:	jne    0x42e65d
  42e6aa:	cmp    eax,0x329951ff
  42e6af:	clc    
  42e6b0:	stc    
  42e6b1:	cmp    DWORD PTR [ebx+0x4db31407],eax
  42e6b7:	push   DWORD PTR [edi]
  42e6b9:	xchg   BYTE PTR [esi+0x68da2b74],ah
  42e6bf:	inc    ebx
  42e6c0:	cmp    BYTE PTR [ebp-0x5a],dh
  42e6c3:	add    BYTE PTR [ebx+0x36427b8c],ch
  42e6c9:	adc    BYTE PTR [si+0x20],0x9b
  42e6ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6cf:	jae    0x42e702
  42e6d1:	sbb    ch,dl
  42e6d3:	jl     0x42e680
  42e6d5:	dec    edi
  42e6d6:	popa   
  42e6d7:	mov    BYTE PTR [edx+0xbff251],cl
  42e6dd:	add    BYTE PTR [esi],bh
  42e6df:	adc    BYTE PTR [ecx+0x4074727b],dh
  42e6e5:	enter  0xa36b,0x9a
  42e6e9:	adc    eax,0x87042b38
  42e6ee:	mov    dl,0x45
  42e6f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6f1:	cli    
  42e6f2:	fsub   DWORD PTR [edx+0x6f]
  42e6f5:	add    edi,DWORD PTR [edi]
  42e6f7:	push   ss
  42e6f8:	inc    eax
  42e6f9:	hlt    
  42e6fa:	cmp    cl,bl
  42e6fc:	mov    cl,0xff
  42e6fe:	rcr    BYTE PTR [ebp+0x43],0x89
  42e702:	(bad)  
  42e704:	jmp    0xe9e8:0xa4af4354
  42e70b:	pop    ebp
  42e70c:	std    
  42e70d:	push   DWORD PTR [eax]
  42e70f:	jecxz  0x42e714
  42e711:	aaa    
  42e712:	repnz dec eax
  42e714:	test   DWORD PTR [ebx-0x2a23b],0xfc50d3f5
  42e71e:	cmp    al,0xa0
  42e720:	icebp  
  42e721:	ins    DWORD PTR es:[edi],dx
  42e722:	mov    WORD PTR [edx+ebx*2-0x1],es
  42e726:	jo     0x42e785
  42e728:	in     al,dx
  42e729:	test   BYTE PTR [ebx],dl
  42e72b:	bound  esp,QWORD PTR [edi-0x7a2ecf06]
  42e731:	call   FWORD PTR [eax+0x34]
  42e734:	call   0xeb06d325
  42e739:	cmp    DWORD PTR [ebp+0x5803e834],0x6766d6
  42e743:	add    al,bh
  42e745:	push   0xffffffc2
  42e747:	test   eax,0xed0fe730
  42e74c:	add    esp,0x39
  42e74f:	push   esp
  42e750:	sbb    al,0xe1
  42e752:	ret    
  42e753:	jge    0x42e7c8
  42e755:	push   0xb8a72fa2
  42e75a:	je     0x42e79c
  42e75c:	or     al,0x6b
  42e75e:	xchg   edx,eax
  42e75f:	test   eax,0xa98af3cb
  42e764:	std    
  42e765:	pop    ebx
  42e766:	icebp  
  42e767:	out    dx,al
  42e768:	out    dx,al
  42e769:	push   0x6e
  42e76b:	dec    edi
  42e76c:	jmp    0x42e71e
  42e76e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e76f:	das    
  42e770:	pop    ds
  42e771:	pop    edi
  42e772:	mov    esp,0x62ef9b7c
  42e777:	test   eax,0x93a4becd
  42e77c:	leave  
  42e77d:	jno    0x42e78d
  42e77f:	aam    0x52
  42e781:	dec    edx
  42e782:	pop    esi
  42e783:	ja     0x42e7e9
  42e785:	imul   eax,DWORD PTR [edx-0x57],0xffffffb9
  42e789:	jne    0x42e799
  42e78b:	shl    DWORD PTR [eax+0x3c],0xbd
  42e78f:	adc    esp,DWORD PTR [eax]
  42e791:	imul   ebp,eax,0x2f
  42e794:	inc    ebx
  42e795:	mov    esi,0x6a8c4f74
  42e79a:	sbb    ch,ah
  42e79c:	lock xor al,0x9c
  42e79f:	cli    
  42e7a0:	inc    edx
  42e7a1:	mov    ebp,0x141a7b4
  42e7a6:	hlt    
  42e7a7:	xor    eax,0xb3ce0000
  42e7ac:	jge    0x42e756
  42e7ae:	cmp    esp,ecx
  42e7b0:	add    cl,cl
  42e7b2:	mov    ebx,0x8fee40a7
  42e7b7:	ins    DWORD PTR es:[edi],dx
  42e7b8:	call   FWORD PTR [esp+ecx*2-0x17]
  42e7bc:	mov    ebx,0xf96d9e29
  42e7c1:	jmp    0x42e7d4
  42e7c3:	ds ss xor al,0x3f
  42e7c7:	fld    DWORD PTR [edi]
  42e7c9:	imul   esp,DWORD PTR [edx],0x72e57430
  42e7cf:	mov    ebx,0xe8a3b553
  42e7d4:	clc    
  42e7d5:	cli    
  42e7d6:	fnstsw WORD PTR [ebx+edi*2-0x5b06e20b]
  42e7dd:	adc    al,0x52
  42e7df:	sub    ecx,DWORD PTR [ecx+ebx*4+0x58]
  42e7e3:	push   cs
  42e7e4:	xchg   BYTE PTR [esi-0x6ec45825],ah
  42e7ea:	cmp    esi,DWORD PTR [ecx+eax*1]
  42e7ed:	cld    
  42e7ee:	sbb    DWORD PTR [ecx],0xffffffc1
  42e7f1:	mov    al,0x29
  42e7f3:	pusha  
  42e7f4:	or     DWORD PTR [esp+esi*8+0x6a],ecx
  42e7f8:	mov    edi,0x72841022
  42e7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e7fe:	(bad)  
  42e800:	(bad)  
  42e802:	cmp    BYTE PTR [ecx],ah
  42e804:	ret    0xb3de
  42e807:	in     al,0xff
  42e809:	call   0xf1f62542
  42e80e:	add    BYTE PTR [eax],al
  42e810:	hlt    
  42e811:	and    BYTE PTR [ecx+edi*1+0x50],cl
  42e815:	dec    edx
  42e816:	ss pushf 
  42e818:	loopne 0x42e7ff
  42e81a:	sbb    esp,edx
  42e81c:	ja     0x42e7f5
  42e81e:	jmp    0xbbe6:0xc2213c12
  42e825:	add    BYTE PTR [eax],al
  42e827:	jmp    0xf62560
  42e82c:	data16 cmc 
  42e82e:	xor    DWORD PTR [ebp+0x6e],ecx
  42e831:	sbb    bh,bh
  42e833:	cmp    dl,BYTE PTR [ecx]
  42e835:	pop    ds
  42e836:	jmp    0x49c7:0x322d4feb
  42e83d:	mov    dh,0x3c
  42e83f:	add    DWORD PTR [esi+0x35],ebx
  42e842:	mov    BYTE PTR [ebp+0x7e],al
  42e845:	in     eax,dx
  42e846:	jl     0x42e844
  42e848:	aad    0x2
  42e84a:	lea    esi,[ebx]
  42e84c:	fdivp  st(7),st
  42e84e:	push   eax
  42e84f:	push   eax
  42e850:	jmp    0xea420237
  42e855:	nop
  42e856:	mov    WORD PTR [ebp-0x96eca],cs
  42e85c:	dec    edi
  42e85d:	dec    esi
  42e85e:	sti    
  42e85f:	dec    edi
  42e860:	inc    ecx
  42e861:	in     eax,dx
  42e862:	(bad)  
  42e863:	mov    DWORD PTR [ebx],ebp
  42e865:	mov    eax,0xe76e7d88
  42e86a:	test   BYTE PTR [eax],ch
  42e86c:	mov    ecx,0xd6e8f690
  42e871:	sahf   
  42e872:	idiv   bh
  42e874:	add    BYTE PTR [eax],al
  42e876:	popf   
  42e877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e878:	sbb    al,0xa7
  42e87b:	sub    eax,DWORD PTR [ebp+0x4c57c574]
  42e881:	call   0x45c54f69
  42e886:	scas   al,BYTE PTR es:[edi]
  42e887:	out    0x44,al
  42e889:	call   0xfc5685dd
  42e88e:	stc    
  42e88f:	nop
  42e890:	push   es
  42e891:	test   cl,bh
  42e893:	das    
  42e894:	add    DWORD PTR [eax],eax
  42e896:	setge  BYTE PTR [edx]
  42e899:	cld    
  42e89a:	dec    ecx
  42e89b:	xchg   ecx,eax
  42e89c:	ins    DWORD PTR es:[edi],dx
  42e89d:	pop    ds
  42e89e:	push   ss
  42e89f:	cmp    al,0xfd
  42e8a1:	jmp    FWORD PTR [ecx]
  42e8a3:	pop    ebp
  42e8a4:	shl    DWORD PTR [edi+esi*1-0x53],1
  42e8a8:	repnz mov DWORD PTR [ebp+0x5a],ebx
  42e8ac:	std    
  42e8ad:	push   DWORD PTR [esi+0x68fc0335]
  42e8b3:	imul   esp,DWORD PTR [ebx],0xf2441c08
  42e8b9:	test   BYTE PTR [ebp+0x5a],ch
  42e8bc:	std    
  42e8bd:	(bad)  
  42e8be:	mov    esp,0x442a8cf
  42e8c3:	jbe    0x42e8b1
  42e8c5:	pop    esp
  42e8c6:	imul   eax,DWORD PTR [esi],0x1c
  42e8c9:	xchg   edx,esi
  42e8cb:	jbe    0x42e8b9
  42e8cd:	pushf  
  42e8ce:	ja     0x42e93e
  42e8d0:	mov    ds:0xe66da3fa,al
  42e8d5:	inc    esp
  42e8d6:	retf   
  42e8d7:	sub    cl,BYTE PTR [ebx+edi*8+0x0]
  42e8db:	add    BYTE PTR [edx-0x54b3898f],ah
  42e8e1:	mov    ?,WORD PTR [eax+0x3f]
  42e8e4:	or     bh,al
  42e8e6:	mov    ds:0xa219aa8c,al
  42e8eb:	cli    
  42e8ec:	clc    
  42e8ed:	mov    ch,0xa
  42e8ef:	das    
  42e8f0:	icebp  
  42e8f1:	scas   al,BYTE PTR es:[edi]
  42e8f2:	cmp    BYTE PTR [edi-0x7d2fc8],0xe0
  42e8f9:	pop    ebp
  42e8fa:	xchg   esi,eax
  42e8fb:	aaa    
  42e8fc:	push   ds
  42e8fd:	pop    eax
  42e8fe:	test   DWORD PTR [ebx-0x70],esi
  42e901:	loop   0x42e92b
  42e903:	cwde   
  42e904:	fadd   st(7),st
  42e906:	jbe    0x42e954
  42e908:	stos   DWORD PTR es:[edi],eax
  42e909:	xor    bh,BYTE PTR [eax+0x43]
  42e90c:	mov    eax,0x7636a2f6
  42e911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e912:	in     al,0x85
  42e914:	mov    edx,0xa0faa2c1
  42e919:	gs cmc 
  42e91b:	je     0x42e95d
  42e91d:	fisubr DWORD PTR [eax+0x43]
  42e920:	nop
  42e921:	xor    al,0x23
  42e923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e924:	aaa    
  42e925:	loopne 0x42e8bd
  42e927:	jns    0x42e8e4
  42e929:	add    DWORD PTR [ebx],edx
  42e92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e92c:	jge    0x42e8e9
  42e92e:	pushf  
  42e92f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e930:	sub    ch,dh
  42e932:	call   0x7cffbb66
  42e937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e938:	pop    ds
  42e939:	or     DWORD PTR [eax],edx
  42e93b:	xor    dl,bh
  42e93d:	sub    ch,BYTE PTR [ebp-0x55]
  42e940:	add    BYTE PTR [eax],al
  42e942:	lds    ecx,FWORD PTR [ebx]
  42e944:	push   0x55394c25
  42e949:	aad    0x9
  42e94b:	jmp    0xb4541b1f
  42e950:	or     bh,dl
  42e952:	stos   DWORD PTR es:[edi],eax
  42e953:	adc    DWORD PTR [edx+0x35143b3e],edi
  42e959:	add    eax,0xa527a9a0
  42e95e:	sbb    eax,0x412fe867
  42e963:	mov    bl,0x64
  42e965:	inc    esp
  42e966:	or     al,0x67
  42e968:	call   0x7467:0x673d8b02
  42e96f:	mov    ah,BYTE PTR [di-0x200e]
  42e974:	jmp    0x42e9b2
  42e976:	mov    esi,0x83e37be8
  42e97b:	jo     0x42e9db
  42e97d:	xchg   DWORD PTR [edi+eiz*2],esp
  42e980:	push   0xffffffa5
  42e982:	fild   WORD PTR [eax+0x22cda563]
  42e988:	aas    
  42e989:	cdq    
  42e98a:	daa    
  42e98b:	and    ebp,DWORD PTR [edi]
  42e98d:	icebp  
  42e98e:	mov    ebp,0x24c50eee
  42e993:	or     al,0x69
  42e995:	test   eax,0xa53a684f
  42e99a:	and    al,0x4
  42e99c:	add    DWORD PTR [edx+0x50],ebp
  42e99f:	push   esp
  42e9a0:	add    BYTE PTR [ebp-0x22745278],dh
  42e9a6:	add    BYTE PTR [eax],al
  42e9a8:	shr    DWORD PTR [ecx-0x7],cl
  42e9ab:	push   ds
  42e9ac:	xor    BYTE PTR [eax-0x31cb5548],dl
  42e9b2:	hlt    
  42e9b3:	mov    cl,0xf1
  42e9b5:	jge    0x42ea2b
  42e9b7:	repnz pop edi
  42e9b9:	jle    0x42ea2f
  42e9bb:	out    0xdf,al
  42e9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9be:	out    0x40,eax
  42e9c0:	xor    esi,DWORD PTR [ecx+eax*1]
  42e9c3:	bound  ecx,QWORD PTR [eax]
  42e9c5:	pop    esp
  42e9c6:	xor    DWORD PTR [eax+0x5c7e1418],0x27
  42e9cd:	xor    eax,0x66ac670a
  42e9d2:	stc    
  42e9d3:	jmp    0x724be2e7
  42e9d8:	jns    0x42ea1e
  42e9da:	mov    bl,dh
  42e9dc:	lahf   
  42e9dd:	clc    
  42e9de:	clc    
  42e9df:	add    ah,BYTE PTR [eax+0x3c]
  42e9e2:	mov    BYTE PTR [ebx],ah
  42e9e4:	aaa    
  42e9e5:	pop    ebx
  42e9e6:	jle    0x42e9d1
  42e9e8:	xor    al,0x34
  42e9ea:	jle    0x42e99d
  42e9ec:	fisttp DWORD PTR [esi+0x7b]
  42e9ef:	bound  ecx,QWORD PTR [ecx+0x40]
  42e9f2:	cmp    BYTE PTR [ebx+ebx*4],bl
  42e9f5:	loope  0x42ea31
  42e9f7:	push   0xffffff92
  42e9f9:	xor    DWORD PTR [ebp-0x35],edi
  42e9fc:	imul   esi,DWORD PTR [ecx],0x6a9371b4
  42ea02:	stc    
  42ea03:	sbb    DWORD PTR [esi-0x50],ecx
  42ea06:	xor    al,0x66
  42ea08:	xchg   ebx,eax
  42ea09:	push   0x7d
  42ea0b:	sub    DWORD PTR [eax],eax
  42ea0d:	add    BYTE PTR [ebp+esi*8-0x1adb537b],bh
  42ea14:	shl    cl,0x4
  42ea17:	imul   edx,DWORD PTR [ebx],0x41378e00
  42ea1d:	add    BYTE PTR ds:0xdb3905a5,cl
  42ea23:	or     DWORD PTR [eax+0x6],edi
  42ea26:	pop    ss
  42ea27:	into   
  42ea28:	pop    ecx
  42ea29:	call   DWORD PTR [ecx-0x70]
  42ea2c:	or     BYTE PTR [ebp-0x96f96],0x21
  42ea33:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42ea35:	mov    eax,0xbd7a319d
  42ea3a:	mov    esi,0x4efff690
  42ea3f:	adc    eax,0xcc0e3305
  42ea44:	add    DWORD PTR [ebx+0x2b99099b],ecx
  42ea4a:	pushf  
  42ea4b:	lahf   
  42ea4c:	icebp  
  42ea4d:	and    DWORD PTR [eax+0x2e],0x7c
  42ea51:	add    al,0x1d
  42ea53:	jo     0x42ea37
  42ea55:	sbb    DWORD PTR [ebp+0x4b2b992b],edx
  42ea5b:	loopne 0x42e9df
  42ea5d:	dec    ebp
  42ea5e:	(bad)  
  42ea5f:	mov    bh,0x10
  42ea61:	mov    edi,DWORD PTR [ebx]
  42ea63:	mov    ah,0x22
  42ea65:	push   ebp
  42ea66:	outs   dx,BYTE PTR ds:[esi]
  42ea67:	mov    bh,0x50
  42ea69:	add    al,0xa5
  42ea6b:	sub    al,0x63
  42ea6d:	(bad)  
  42ea6e:	jbe    0x42ea61
  42ea70:	push   esi
  42ea71:	pop    ebx
  42ea72:	add    BYTE PTR [eax],al
  42ea74:	xlat   BYTE PTR ds:[ebx]
  42ea75:	ins    DWORD PTR es:[edi],dx
  42ea76:	or     DWORD PTR [eax],eax
  42ea78:	sub    esi,DWORD PTR [ebp+0x294d51e5]
  42ea7e:	div    BYTE PTR [ebp-0x1a]
  42ea81:	jge    0x42ea55
  42ea83:	push   ebx
  42ea84:	ss inc esi
  42ea86:	add    eax,0x5cb8de00
  42ea8b:	call   DWORD PTR [ecx+0x6b]
  42ea8e:	or     DWORD PTR [ecx],edx
  42ea90:	mov    ?,WORD PTR [eax]
  42ea92:	cmp    al,0x37
  42ea95:	inc    edx
  42ea96:	call   0x22fb:0x329d1773
  42ea9d:	pop    edi
  42ea9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea9f:	mov    edx,0x869e2617
  42eaa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eaa5:	popa   
  42eaa6:	xchg   edx,eax
  42eaa7:	jae    0x42eaa8
  42eaa9:	xor    DWORD PTR [eax],ecx
  42eaab:	sbb    al,0x65
  42eaad:	cdq    
  42eaae:	std    
  42eaaf:	dec    esi
  42eab0:	in     al,0xa9
  42eab2:	or     bl,dl
  42eab4:	push   edi
  42eab5:	cdq    
  42eab6:	std    
  42eab7:	dec    edi
  42eab8:	add    al,0xaa
  42eaba:	ss sti 
  42eabc:	inc    edx
  42eabd:	sti    
  42eabe:	repz aas 
  42eac0:	aaa    
  42eac1:	in     al,0x47
  42eac3:	or     BYTE PTR [edx+ebx*1],bl
  42eac6:	sbb    DWORD PTR [edi],edx
  42eac8:	fisttp WORD PTR [edx+0x2a48ffe6]
  42eace:	sahf   
  42eacf:	adc    al,0x53
  42ead1:	push   0x738003d
  42ead6:	or     eax,0x4a0000fb
  42eadb:	xchg   ebp,eax
  42eadc:	repz aas 
  42eade:	aaa    
  42eadf:	xchg   ebx,eax
  42eae0:	dec    eax
  42eae1:	sti    
  42eae2:	xchg   BYTE PTR ss:[edi],cl
  42eae5:	push   0xfffdcd37
  42eaea:	fs dec ebx
  42eaec:	ss sti 
  42eaee:	and    bh,cl
  42eaf0:	repz aas 
  42eaf2:	aaa    
  42eaf3:	sub    bl,BYTE PTR [esi+0x3d5fef14]
  42eaf9:	add    BYTE PTR [ecx-0x7704b729],dl
  42eaff:	push   ss
  42eb00:	int3   
  42eb01:	mov    ebp,0x87384d2f
  42eb06:	retf   
  42eb07:	into   
  42eb08:	mov    eax,ds:0x49e1b6f7
  42eb0d:	dec    al
  42eb0f:	xor    al,0xe8
  42eb11:	ss mov eax,0xf8f53041
  42eb17:	xor    edi,DWORD PTR [edx+0x2163603a]
  42eb1d:	inc    edi
  42eb1e:	push   ebx
  42eb1f:	xor    ebp,eax
  42eb21:	mov    WORD PTR [eax+ebx*1],ds
  42eb24:	aam    0x8c
  42eb26:	sbb    al,0x18
  42eb28:	fdivr  DWORD PTR [edx]
  42eb2a:	sbb    DWORD PTR [esi],esi
  42eb2c:	sub    edi,eax
  42eb2e:	sub    BYTE PTR [ebp-0x58],al
  42eb31:	add    ebp,DWORD PTR [esi-0x50043c08]
  42eb37:	loopne 0x42eb04
  42eb39:	push   ecx
  42eb3b:	pop    ebx
  42eb3c:	or     dl,BYTE PTR [edx]
  42eb3e:	add    BYTE PTR [eax],al
  42eb40:	mov    bl,0x1d
  42eb42:	jmp    0xa3f4224a
  42eb47:	out    0x10,eax
  42eb49:	add    al,0xf3
  42eb4b:	push   ss
  42eb4c:	sbb    eax,DWORD PTR [eax+0x23]
  42eb4f:	inc    edi
  42eb50:	adc    esp,DWORD PTR [esp+edx*1]
  42eb53:	push   es
  42eb54:	aaa    
  42eb55:	xor    al,0xdb
  42eb57:	not    DWORD PTR [ebp+eax*2+0x391e0428]
  42eb5e:	jmp    0x33f22266
  42eb63:	call   0x11ee0ab8
  42eb68:	mov    ch,0x4d
  42eb6a:	out    0x3,eax
  42eb6c:	aaa    
  42eb6d:	pop    ds
  42eb6e:	fst    QWORD PTR [edi]
  42eb70:	jecxz  0x42eb68
  42eb72:	out    0x10,eax
  42eb74:	mov    ebx,0x3703e781
  42eb79:	daa    
  42eb7a:	test   al,0xdb
  42eb7c:	ins    BYTE PTR es:[edi],dx
  42eb7d:	sbb    al,bh
  42eb7f:	sbb    DWORD PTR [ebx-0x51],eax
  42eb82:	sbb    ebp,eax
  42eb84:	inc    esp
  42eb85:	sbb    eax,0xb82d85ec
  42eb8a:	add    BYTE PTR [eax+0x2901343b],ah
  42eb90:	jmp    0x4f50:0x2af924f6
  42eb97:	push   ecx
  42eb98:	pop    ecx
  42eb99:	std    
  42eb9a:	stc    
  42eb9b:	push   esi
  42eb9c:	mov    esp,0x8a0924f6
  42eba1:	jne    0x42ebac
  42eba3:	ins    DWORD PTR es:[edi],dx
  42eba4:	add    BYTE PTR [eax],al
  42eba6:	or     esp,DWORD PTR [ebx-0x7]
  42eba9:	jmp    0xf967d285
  42ebae:	dec    edi
  42ebaf:	int3   
  42ebb0:	add    ch,ah
  42ebb2:	xor    al,0x34
  42ebb4:	cli    
  42ebb5:	cld    
  42ebb6:	test   BYTE PTR [ebx+0x41],al
  42ebb9:	jmp    0x1e783e69
  42ebbe:	inc    esi
  42ebbf:	mov    eax,0x3434e990
  42ebc4:	mov    WORD PTR [ebp-0x68aee9a8],gs
  42ebca:	mov    eax,?
  42ebcc:	in     eax,0xf7
  42ebce:	xchg   edi,eax
  42ebcf:	add    al,0x86
  42ebd1:	icebp  
  42ebd2:	xchg   edi,eax
  42ebd3:	jno    0x42eb58
  42ebd5:	out    0x28,al
  42ebd7:	jmp    0xec36:0x164f2585
  42ebde:	sub    al,0x70
  42ebe0:	cmp    eax,0xf9cc41e9
  42ebe5:	(bad)  
  42ebe6:	xlat   BYTE PTR ds:[ebx]
  42ebe7:	dec    eax
  42ebe8:	dec    ebp
  42ebe9:	fnstenv [esp+esi*1+0x36]
  42ebed:	in     al,dx
  42ebee:	add    al,0x70
  42ebf0:	cmp    eax,0x85fc21e9
  42ebf5:	test   BYTE PTR [ebx+edx*4+0xc],0xbb
  42ebfa:	jae    0x42ec30
  42ebfc:	xchg   cl,ch
  42ebfe:	pushf  
  42ebff:	cmp    BYTE PTR [eax],0x8f
  42ec02:	xchg   edi,eax
  42ec03:	mov    eax,0xfae300c0
  42ec08:	or     DWORD PTR [eax+eax*1+0x0],0xc8c65f2
  42ec10:	pop    ebx
  42ec11:	cmp    DWORD PTR [ecx],eax
  42ec13:	add    dh,bl
  42ec15:	mov    dl,0x6d
  42ec17:	and    al,0xc2
  42ec19:	lea    edi,ds:0x7d945837
  42ec1f:	rcl    BYTE PTR [edx+0x32548252],0x68
  42ec26:	add    BYTE PTR [edx+esi*1-0x78],0x82
  42ec2b:	dec    esp
  42ec2c:	xor    bl,BYTE PTR [esi+esi*8+0x74]
  42ec30:	inc    edx
  42ec31:	pop    eax
  42ec32:	test   BYTE PTR [edx+esi*1+0x5c],0xf6
  42ec37:	inc    esp
  42ec38:	jb     0x42ec8f
  42ec3a:	mov    BYTE PTR [edi+edi*8],al
  42ec3d:	xchg   ebx,eax
  42ec3e:	ins    DWORD PTR es:[edi],dx
  42ec3f:	and    al,0x92
  42ec41:	lea    esi,[edi]
  42ec43:	(bad)  
  42ec44:	cmp    DWORD PTR [ebp+edi*2-0x40c61d40],edx
  42ec4b:	inc    esp
  42ec4c:	jb     0x42ec92
  42ec4e:	add    BYTE PTR [edi+0x36],dl
  42ec51:	test   BYTE PTR [esi],ch
  42ec53:	(bad)  
  42ec54:	pop    ecx
  42ec55:	test   esi,esi
  42ec57:	jmp    edx
  42ec59:	dec    ebx
  42ec5a:	sbb    edi,edi
  42ec5c:	jge    0x42ec21
  42ec5e:	cmp    eax,0xf6283624
  42ec63:	je     0x42ec97
  42ec65:	xor    al,0xf6
  42ec67:	adc    eax,0x3966c6
  42ec6c:	xchg   ebx,eax
  42ec6d:	js     0x42ec75
  42ec6f:	test   DWORD PTR [eax],eax
  42ec71:	add    ch,cl
  42ec73:	shl    esi,0xff
  42ec76:	fnstcw WORD PTR [ebx]
  42ec78:	and    eax,0x38a4d918
  42ec7d:	jl     0x42ec71
  42ec7f:	pusha  
  42ec80:	push   es
  42ec81:	test   DWORD PTR [edi],esi
  42ec83:	clc    
  42ec84:	call   0x4b24:0x18b1e8fa
  42ec8b:	ret    
  42ec8c:	jno    0x42ecc0
  42ec8e:	fabs   
  42ec90:	xchg   BYTE PTR [ebx+0x1b],al
  42ec93:	pop    edx
  42ec94:	cmp    bl,BYTE PTR [edx+0x6c]
  42ec97:	(bad)  
  42ec98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec99:	pop    esp
  42ec9a:	hlt    
  42ec9b:	add    BYTE PTR [ecx+0x24],cl
  42ec9e:	xor    ecx,DWORD PTR [ebx+esi*1-0x79]
  42eca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eca3:	adc    DWORD PTR [ebx],eax
  42eca5:	pushf  
  42eca6:	sub    ecx,DWORD PTR [ebx-0x3ec68c03]
  42ecac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecad:	jno    0x42ed0f
  42ecaf:	and    DWORD PTR [edx-0x4037867a],ebx
  42ecb5:	add    esi,DWORD PTR [edi]
  42ecb7:	retf   0x4190
  42ecba:	cmp    ebx,DWORD PTR [ebx+0x5bc7149a]
  42ecc0:	cmp    eax,0x8842bc00
  42ecc5:	cli    
  42ecc6:	loop   0x42ed46
  42ecc8:	mov    cl,dh
  42ecca:	jmp    0x42ed2e
  42eccc:	xchg   BYTE PTR [ecx],al
  42ecce:	int    0x4b
  42ecd0:	xchg   cl,cl
  42ecd2:	push   eax
  42ecd3:	jp     0x42ec5b
  42ecd5:	ret    0x0
  42ecd8:	call   0xe8951aea
  42ecdd:	add    al,0xcf
  42ecdf:	xchg   BYTE PTR [ebp+0x3d],al
  42ece2:	lds    ebp,FWORD PTR [esi]
  42ece4:	or     al,0x27
  42ece6:	out    0xf0,al
  42ece8:	mov    edx,0x20fac9e6
  42eced:	test   DWORD PTR [edi-0x78b05c33],0xafd14113
  42ecf7:	jae    0x42ed29
  42ecf9:	aad    0xf4
  42ecfb:	inc    eax
  42ecfc:	je     0x42ed32
  42ecfe:	xor    ebx,DWORD PTR [ecx]
  42ed00:	(bad)  
  42ed02:	call   0x625c:0x1eed3418
  42ed09:	xor    al,0xe3
  42ed0b:	xor    esi,0x35
  42ed0e:	call   0xd85b599d
  42ed13:	mov    bh,bh
  42ed15:	call   0xff7279ff
  42ed1a:	or     DWORD PTR [ebx],edi
  42ed1c:	cmp    DWORD PTR [eax],0x50b038e8
  42ed22:	mov    eax,0xe7601b82
  42ed27:	xor    al,BYTE PTR ds:0x89d255ab
  42ed2d:	mov    ecx,0x7381739
  42ed32:	outs   dx,DWORD PTR ds:[esi]
  42ed33:	and    BYTE PTR [ebx+0xb],al
  42ed36:	xor    DWORD PTR [eax+0xed3e8c8],ecx
  42ed3c:	add    BYTE PTR [eax],al
  42ed3e:	les    ecx,FWORD PTR [eax-0xd]
  42ed41:	and    eax,0xa9382b2
  42ed46:	aad    0xac
  42ed48:	clc    
  42ed49:	xor    BYTE PTR [edi+0x32],0xa0
  42ed4d:	inc    edx
  42ed4e:	in     eax,dx
  42ed4f:	call   0x66f52b63
  42ed54:	je     0x42ed60
  42ed56:	ror    BYTE PTR [ebp+eiz*8+0x4a],1
  42ed5a:	je     0x42ed55
  42ed5c:	jmp    0x42ed76
  42ed5e:	aaa    
  42ed5f:	aaa    
  42ed60:	push   0x70d678d1
  42ed65:	add    edi,DWORD PTR [eax-0x17792008]
  42ed6b:	out    0xe5,eax
  42ed6d:	mov    cl,BYTE PTR [eax-0x55]
  42ed70:	sub    al,0xa0
  42ed72:	jle    0x42ed6f
  42ed74:	mov    al,0xc2
  42ed76:	cmp    BYTE PTR [ecx+eax*1],dh
  42ed79:	sbb    BYTE PTR [ecx-0x49],al
  42ed7c:	lock cli 
  42ed7e:	hlt    
  42ed7f:	mov    bh,0xc7
  42ed81:	sbb    al,0x2f
  42ed83:	mov    ecx,0xb54314ce
  42ed88:	not    BYTE PTR [esi+0x177959ca]
  42ed8e:	cmp    BYTE PTR [ecx+edx*2-0x7c4bcc17],bl
  42ed95:	test   eax,0xa92e0f33
  42ed9a:	out    dx,al
  42ed9b:	dec    esi
  42ed9c:	jae    0x42ed82
  42ed9e:	(bad)
  42eda3:	add    BYTE PTR [edi+eiz*1],dh
  42eda6:	rcl    esp,1
  42eda8:	test   al,0xd4
  42edaa:	aaa    
  42edab:	out    dx,eax
  42edac:	inc    eax
  42edad:	cmp    esi,edx
  42edaf:	xor    BYTE PTR [esi-0x69b78295],bl
  42edb5:	scas   eax,DWORD PTR es:[edi]
  42edb6:	jg     0x42ed4e
  42edb8:	xor    al,0x33
  42edba:	add    DWORD PTR [edx-0x7d],0x98a58c04
  42edc1:	ss push ecx
  42edc3:	popa   
  42edc4:	cdq    
  42edc5:	pop    ecx
  42edc6:	stc    
  42edc7:	sahf   
  42edc8:	pushf  
  42edc9:	add    edx,edi
  42edcb:	push   ss
  42edcc:	retf   0x57fc
  42edcf:	sub    cl,BYTE PTR ds:0x11d16930
  42edd5:	pop    ds
  42edd6:	add    DWORD PTR [ecx],edx
  42edd8:	out    dx,al
  42edd9:	xchg   esi,eax
  42edda:	add    cl,ch
  42eddc:	mov    bh,0xd7
  42edde:	cld    
  42eddf:	jmp    0xe64fd587
  42ede4:	and    DWORD PTR [edx+edi*8],ebp
  42ede7:	hlt    
  42ede8:	mov    BYTE PTR [ecx+eax*2-0x17],al
  42edec:	mov    ebp,0x716ae4f8
  42edf1:	pusha  
  42edf2:	stc    
  42edf3:	add    BYTE PTR ds:0x5ec02a2f,al
  42edf9:	jae    0x42ed7d
  42edfb:	div    BYTE PTR gs:[ecx+eax*8-0x3096801]
  42ee03:	call   0x3cb7cd
  42ee08:	add    BYTE PTR [eax],al
  42ee0a:	pushf  
  42ee0b:	sub    DWORD PTR [ecx],eax
  42ee0d:	push   ebp
  42ee0e:	push   ebp
  42ee0f:	lea    edi,[edx-0x14]
  42ee12:	add    ch,BYTE PTR [ebp-0x54c2f7b0]
  42ee18:	sbb    BYTE PTR [esi+0x29],dl
  42ee1b:	stos   DWORD PTR es:[edi],eax
  42ee1c:	icebp  
  42ee1d:	invd   
  42ee1f:	clc    
  42ee20:	cmp    BYTE PTR [ebx-0x2cdd7a37],cl
  42ee26:	rcl    eax,0xc9
  42ee29:	xadd   DWORD PTR [edx+eiz*1-0xe],esi
  42ee2e:	pop    ss
  42ee2f:	inc    esi
  42ee30:	std    
  42ee31:	mov    edi,DWORD PTR [edi+0x35]
  42ee34:	mov    BYTE PTR [ebp+0x5a],dh
  42ee37:	xor    BYTE PTR [esi-0xecb7589],ah
  42ee3d:	add    ecx,ecx
  42ee3f:	pop    ecx
  42ee40:	jns    0x42eebf
  42ee42:	xchg   esi,eax
  42ee43:	xor    DWORD PTR [eax+0x9455655],ecx
  42ee49:	mov    ebx,DWORD PTR [ecx+0x56458851]
  42ee4f:	mov    edi,?
  42ee51:	mov    bl,cl
  42ee53:	sub    DWORD PTR [edx+0x58ac6e77],eax
  42ee59:	or     al,0x65
  42ee5b:	push   ds
  42ee5c:	cmc    
  42ee5d:	psllw  mm3,QWORD PTR [edi]
  42ee60:	xor    eax,0xf629b303
  42ee65:	adc    eax,0x39689a
  42ee6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee6b:	icebp  
  42ee6c:	cmp    BYTE PTR [eax+eax*1],bh
  42ee6f:	add    BYTE PTR [edi],dh
  42ee71:	dec    esp
  42ee72:	adc    BYTE PTR [edi],bl
  42ee74:	lods   al,BYTE PTR ds:[esi]
  42ee75:	pop    ss
  42ee76:	or     eax,0x47e23fe7
  42ee7b:	clc    
  42ee7c:	ret    0x55e
  42ee7f:	out    0x31,eax
  42ee81:	ror    DWORD PTR [eax+ecx*4],1
  42ee84:	xor    DWORD PTR ds:0x38f03745,edx
  42ee8a:	(bad)  
  42ee8b:	(bad)  
  42ee8c:	imul   edi,DWORD PTR [edi-0x7e14baff],0xffffffc2
  42ee93:	ins    DWORD PTR es:[edi],dx
  42ee94:	(bad)  [ecx+0x60353c30]
  42ee9a:	in     eax,0x86
  42ee9c:	jp     0x42ef01
  42ee9e:	stos   BYTE PTR es:[edi],al
  42ee9f:	sbb    al,0xbc
  42eea1:	pop    ss
  42eea2:	popf   
  42eea3:	(bad)  
  42eea4:	clc    
  42eea5:	mov    cl,0x8
  42eea7:	bound  ebp,QWORD PTR [edx+ebx*2-0x35b676e1]
  42eeae:	mov    esi,0x30ab5fd
  42eeb3:	aaa    
  42eeb4:	jbe    0x42ef2e
  42eeb6:	(bad)  
  42eeb7:	(bad)  
  42eeb8:	and    esi,edi
  42eeba:	add    DWORD PTR [ebp-0x6d],eax
  42eebd:	xor    edx,eax
  42eebf:	ins    DWORD PTR es:[edi],dx
  42eec0:	push   0x3b3becf1
  42eec5:	test   al,0xd9
  42eec7:	xchg   dl,dh
  42eec9:	bound  ebp,QWORD PTR [edx-0x6a7043ea]
  42eecf:	(bad)  
  42eed0:	jo     0x42ef03
  42eed2:	or     eax,DWORD PTR [edi-0x2bb90000]
  42eed8:	out    dx,al
  42eed9:	jle    0x42ef4c
  42eedb:	dec    esi
  42eedc:	cmp    BYTE PTR [edi+0x6dc4723b],0x45
  42eee3:	dec    ecx
  42eee4:	adc    ah,bh
  42eee6:	xor    al,0x98
  42eee8:	xchg   ecx,eax
  42eee9:	ss je  0x42ef1f
  42eeec:	push   esi
  42eeed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eeee:	(bad)  
  42eeef:	cli    
  42eef0:	ds int 0xea
  42eef3:	xor    al,ch
  42eef5:	xor    BYTE PTR [eax-0x475897b8],bh
  42eefb:	xor    al,0xe8
  42eefd:	add    eax,DWORD PTR [eax-0x7c64ecfe]
  42ef03:	sub    BYTE PTR [edi-0x65],bl
  42ef06:	sbb    BYTE PTR [ecx+eiz*1+0x5b2bfd9b],ah
  42ef0d:	ret    
  42ef0e:	mov    edi,0x376b93f1
  42ef13:	loopne 0x42eeff
  42ef15:	push   ebx
  42ef16:	aaa    
  42ef17:	dec    ebp
  42ef18:	ret    
  42ef19:	push   es
  42ef1a:	aaa    
  42ef1b:	xor    al,0xb7
  42ef1d:	mov    esi,0x10a71f56
  42ef22:	xor    DWORD PTR [ebx+0x2c],esi
  42ef25:	nop
  42ef26:	ret    0xe75b
  42ef29:	add    esi,DWORD PTR [eax+0x13db5bf1]
  42ef2f:	inc    esp
  42ef30:	aam    0xa
  42ef32:	fbstp  TBYTE PTR [esi]
  42ef34:	fmul   QWORD PTR [esi]
  42ef36:	pop    edx
  42ef37:	pop    ecx
  42ef38:	dec    edx
  42ef39:	add    eax,DWORD PTR [eax]
  42ef3b:	add    BYTE PTR [edi],dh
  42ef3d:	mov    bh,0x2f
  42ef3f:	or     edi,DWORD PTR [esi-0x4c77cc0f]
  42ef45:	aam    0x32
  42ef47:	call   0xad2b:0x102b047d
  42ef4e:	les    esp,FWORD PTR [edi-0x73e80641]
  42ef54:	or     ecx,DWORD PTR [eax+eiz*2+0x38]
  42ef58:	pop    ebx
  42ef59:	jae    0x42efbf
  42ef5b:	and    ebx,DWORD PTR [ebx+ebx*2+0x2]
  42ef5f:	xlat   BYTE PTR ds:[ebx]
  42ef60:	push   eax
  42ef61:	pop    ebx
  42ef62:	out    0x9a,eax
  42ef64:	and    edi,esp
  42ef66:	add    ch,bl
  42ef68:	hlt    
  42ef69:	xor    eax,DWORD PTR [ecx+ebp*1-0x56d0c8d9]
  42ef70:	fsubr  QWORD PTR [esi+edi*8-0x18]
  42ef74:	xor    al,0xb3
  42ef76:	xor    ebp,DWORD PTR ds:0x36011b27
  42ef7c:	mov    al,0xaf
  42ef7e:	fs (bad) 
  42ef80:	scas   al,BYTE PTR es:[edi]
  42ef81:	pop    ebp
  42ef82:	push   eax
  42ef83:	ins    BYTE PTR es:[edi],dx
  42ef84:	dec    eax
  42ef85:	jo     0x42efd7
  42ef87:	mov    dh,0xc5
  42ef89:	scas   eax,DWORD PTR es:[edi]
  42ef8a:	rcr    dh,0x89
  42ef8d:	cdq    
  42ef8e:	mov    BYTE PTR [ecx+edx*8],bh
  42ef91:	and    dh,cl
  42ef93:	adc    eax,0xed49b1d2
  42ef98:	mov    bl,0xaf
  42ef9a:	push   0x355dbe8e
  42ef9f:	test   al,0x0
  42efa1:	add    BYTE PTR [eax],ch
  42efa3:	xor    DWORD PTR [esi],esp
  42efa5:	test   al,0xbc
  42efa7:	out    dx,eax
  42efa8:	lock bound ebp,QWORD PTR [esi]
  42efab:	mov    bl,0x83
  42efad:	add    eax,0x22f95d9e
  42efb2:	je     0x42ef8b
  42efb4:	add    edx,DWORD PTR [edx]
  42efb6:	je     0x42ef63
  42efb8:	inc    ebx
  42efb9:	inc    ebp
  42efba:	mov    dl,0xef
  42efbc:	hlt    
  42efbd:	push   0xffffffd3
  42efbf:	pop    eax
  42efc0:	mov    BYTE PTR [eax+ebp*8+0x48364ce6],ch
  42efc7:	mov    al,0x0
  42efc9:	jmp    0xe4b80402
  42efce:	lods   al,BYTE PTR ds:[esi]
  42efcf:	test   DWORD PTR ds:0x8c06f412,0xf95f4764
  42efd9:	push   ss
  42efda:	sub    ebp,DWORD PTR [ecx+0x5f233543]
  42efe0:	rol    BYTE PTR [eax],cl
  42efe2:	jecxz  0x42f053
  42efe4:	push   es
  42efe5:	xchg   ebp,eax
  42efe6:	xchg   ebx,eax
  42efe7:	pop    edi
  42efe8:	xor    DWORD PTR [ebp+0x5d],ebx
  42efeb:	sub    ch,BYTE PTR [ecx]
  42efed:	mov    ebx,DWORD PTR [ecx-0x697a7da6]
  42eff3:	mov    ebx,0x7555fff6
  42eff8:	jl     0x42efff
  42effa:	xor    eax,0xf2458875
  42efff:	test   al,0x6
  42f001:	mov    esp,DWORD PTR [ebx+0xfff629]
  42f007:	add    cl,cl
  42f009:	js     0x42efcb
  42f00b:	jge    0x42f021
  42f00d:	dec    ecx
  42f00e:	ror    BYTE PTR [ecx+0x3e28853],0x66
  42f015:	or     cl,BYTE PTR [edx]
  42f017:	cmp    BYTE PTR [ebx],ch
  42f019:	mov    edx,0x23060974
  42f01e:	or     cl,BYTE PTR [edi]
  42f020:	push   edx
  42f021:	mov    ebp,0x20b9fff7
  42f026:	not    BYTE PTR ds:0x394966
  42f02c:	push   ebp
  42f02d:	mov    ebp,0xd9d9fb32
  42f032:	cmp    al,0xff
  42f034:	sbb    DWORD PTR [esi+ecx*2+0x991a3ff],edi
  42f03b:	inc    eax
  42f03c:	mov    fs,WORD PTR [edx+ecx*2]
  42f03f:	mov    edi,esi
  42f041:	mov    ebx,0xf572cc14
  42f046:	add    BYTE PTR [ebx],bh
  42f048:	dec    ebp
  42f049:	sub    al,0x85
  42f04b:	and    al,0x49
  42f04d:	mov    esp,0x2dcb8bf6
  42f052:	div    BYTE PTR [edi+0x3a]
  42f055:	not    BYTE PTR es:0x39653e
  42f05c:	aaa    
  42f05d:	aam    0x3a
  42f05f:	rcr    BYTE PTR [esi+ecx*1],0xb
  42f063:	or     al,0xe9
  42f065:	xor    ebx,ebp
  42f067:	(bad)  [edi]
  42f069:	mov    edi,ebp
  42f06b:	call   0x627df070
  42f070:	xchg   ecx,eax
  42f071:	cli    
  42f072:	jno    0x42f004
  42f074:	pushf  
  42f075:	add    BYTE PTR [ecx+0x38bc3814],bl
  42f07b:	iret   
  42f07c:	adc    eax,DWORD PTR [ecx]
  42f07e:	aaa    
  42f07f:	dec    ebx
  42f080:	xchg   BYTE PTR [ebx+ebp*1-0x2c],al
  42f084:	aas    
  42f085:	mov    al,ds:0x26b907bc
  42f08a:	jb     0x42f04b
  42f08c:	mov    esi,DWORD PTR [ebx+ebx*8-0x2d]
  42f090:	aas    
  42f091:	mov    al,0xac
  42f093:	shld   DWORD PTR [esi],esp,cl
  42f096:	jp     0x42f10b
  42f098:	mov    ecx,0xfd4baf44
  42f09d:	push   DWORD PTR [edi]
  42f09f:	aam    0x3f
  42f0a1:	mov    ah,0xaa
  42f0a3:	vmwrite ecx,DWORD PTR [edi-0x30]
  42f0a7:	xchg   edi,eax
  42f0a8:	adc    eax,edx
  42f0aa:	je     0x42f0f7
  42f0ac:	mov    WORD PTR [edi+ecx*4-0x2d],ds
  42f0b0:	aaa    
  42f0b1:	lods   al,BYTE PTR ds:[esi]
  42f0b2:	mov    eax,0xf710517f
  42f0b7:	dec    edx
  42f0b8:	jge    0x42f136
  42f0ba:	lods   eax,DWORD PTR ds:[esi]
  42f0bb:	dec    ebx
  42f0bc:	xchg   BYTE PTR [edi+edx*1],bh
  42f0bf:	push   edi
  42f0c0:	cmp    eax,0x88682200
  42f0c5:	inc    esp
  42f0c6:	jnp    0x42f082
  42f0c8:	mov    BYTE PTR [ebx+eiz*2-0x46],al
  42f0cc:	xchg   edx,eax
  42f0cd:	adc    al,0xef
  42f0cf:	jbe    0x42f10e
  42f0d1:	add    BYTE PTR [eax],al
  42f0d3:	add    BYTE PTR [edx+0x967100a],dh
  42f0d9:	xor    al,0x23
  42f0db:	icebp  
  42f0dc:	jo     0x42f121
  42f0de:	test   al,0x3
  42f0e0:	scas   al,BYTE PTR es:[edi]
  42f0e1:	out    dx,al
  42f0e2:	sbb    ebx,ebp
  42f0e4:	sti    
  42f0e5:	inc    edi
  42f0e6:	xchg   esp,eax
  42f0e7:	add    BYTE PTR [esi],cl
  42f0e9:	div    edi
  42f0eb:	(bad)  
  42f0ed:	add    eax,0x584710fb
  42f0f2:	jl     0x42f09b
  42f0f4:	out    0x58,al
  42f0f6:	aam    0x9f
  42f0f8:	inc    eax
  42f0f9:	hlt    
  42f0fa:	out    0x8a,eax
  42f0fc:	jae    0x42f12a
  42f0fe:	aaa    
  42f0ff:	mov    DWORD PTR [ebx+0x70],esi
  42f102:	mov    edi,0xca581bf9
  42f107:	xor    bl,BYTE PTR [ecx+0x8815035]
  42f10d:	pop    eax
  42f10e:	out    0x96,eax
  42f110:	mov    ebp,DWORD PTR [eax]
  42f112:	pusha  
  42f113:	cmp    BYTE PTR [ebx-0x6c246da9],bl
  42f119:	mov    eax,0x3252f51c
  42f11e:	xor    ch,BYTE PTR [esp+eax*2]
  42f121:	xor    ebp,eax
  42f123:	add    ebx,esp
  42f125:	loope  0x42f102
  42f127:	xchg   esi,eax
  42f128:	sub    eax,DWORD PTR [eax-0x23]
  42f12b:	inc    ebx
  42f12c:	aaa    
  42f12d:	stos   DWORD PTR es:[edi],eax
  42f12e:	and    al,0xc
  42f130:	pop    ecx
  42f131:	xor    eax,0x4cf34865
  42f136:	adc    BYTE PTR [edi+0x57ad0000],0x62
  42f13d:	adc    BYTE PTR [ebx+0x6cf05afe],ah
  42f143:	inc    esp
  42f144:	test   al,0x3
  42f146:	mov    bh,0xd9
  42f148:	test   BYTE PTR [esp+edi*1],0xb1
  42f14c:	pop    edx
  42f14d:	add    esi,DWORD PTR [edi]
  42f14f:	xor    al,0x1
  42f151:	cmp    DWORD PTR [edi-0x531eff1f],ecx
  42f157:	clc    
  42f158:	or     eax,0x74502ff0
  42f15d:	in     eax,dx
  42f15e:	stos   BYTE PTR es:[edi],al
  42f15f:	lock or eax,0x135b12e8
  42f165:	and    DWORD PTR [edi+edx*1+0x1],esp
  42f169:	pusha  
  42f16a:	neg    DWORD PTR [edi+0x38]
  42f16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f16e:	inc    ebp
  42f16f:	jecxz  0x42f17b
  42f171:	call   0x4c28:0xf6e4e0a9
  42f178:	push   edx
  42f179:	out    dx,al
  42f17a:	and    BYTE PTR [ebx+0x10],dl
  42f17d:	sub    DWORD PTR [ebx],esi
  42f17f:	scas   eax,DWORD PTR es:[edi]
  42f180:	inc    ebx
  42f181:	icebp  
  42f182:	addr16 test eax,0xbbcbbd4b
  42f188:	cld    
  42f189:	into   
  42f18a:	stos   BYTE PTR es:[edi],al
  42f18b:	in     eax,0x52
  42f18d:	push   ebx
  42f18e:	pop    es
  42f18f:	pop    edx
  42f190:	jae    0x42f17f
  42f192:	stos   DWORD PTR es:[edi],eax
  42f193:	cmp    ecx,0xd861a73c
  42f199:	shl    ah,cl
  42f19b:	push   ss
  42f19c:	push   ebx
  42f19d:	jo     0x42f19f
  42f19f:	add    BYTE PTR [eax],ch
  42f1a1:	pushf  
  42f1a2:	stc    
  42f1a3:	hlt    
  42f1a4:	clc    
  42f1a5:	es inc ecx
  42f1a7:	jmp    0x1550e9a8
  42f1ac:	cmp    edi,esp
  42f1ae:	stc    
  42f1af:	cld    
  42f1b0:	test   al,0x59
  42f1b2:	jae    0x42f145
  42f1b4:	adc    DWORD PTR [ebx+0x13],ebx
  42f1b7:	(bad)  
  42f1b8:	ret    
  42f1b9:	push   ss
  42f1ba:	add    DWORD PTR [edx],ebx
  42f1bc:	data16 into 
  42f1be:	or     DWORD PTR [esi+0x38],esp
  42f1c1:	sub    BYTE PTR [ecx-0x2ea5d744],cl
  42f1c7:	adc    DWORD PTR [eax-0x48],esp
  42f1ca:	jae    0x42f1c4
  42f1cc:	pop    esi
  42f1cd:	xor    BYTE PTR [ebx+0x0],dl
  42f1d0:	inc    di
  42f1d2:	cli    
  42f1d3:	dec    DWORD PTR [esi+0x410c74bf]
  42f1d9:	inc    edi
  42f1da:	or     eax,0x82329e15
  42f1df:	inc    ebp
  42f1e0:	data16 or al,0x0
  42f1e3:	lea    edx,[ebx+0x423ce186]
  42f1e9:	shl    esi,0x53
  42f1ec:	inc    ecx
  42f1ed:	addr16 jne 0x42f1c0
  42f1f0:	popf   
  42f1f1:	xor    dh,dh
  42f1f3:	adc    eax,0x396302
  42f1f8:	xor    eax,0x2a45ef16
  42f1fd:	push   esi
  42f1fe:	ins    DWORD PTR es:[edi],dx
  42f1ff:	pop    ebx
  42f200:	push   edi
  42f201:	sbb    eax,0x75ed
  42f206:	sbb    edi,DWORD PTR [ebx+0x5c]
  42f209:	lock jp 0x42f23a
  42f20c:	dec    edx
  42f20d:	jmp    FWORD PTR [ebx-0x40]
  42f210:	div    BYTE PTR [ebp-0x1e]
  42f213:	pop    es
  42f214:	not    BYTE PTR ds:0x3961fa
  42f21a:	sbb    eax,0x55c44cad
  42f21f:	cwde   
  42f220:	loope  0x42f226
  42f222:	xchg   edx,eax
  42f223:	shl    dh,0x6a
  42f226:	rol    BYTE PTR [edi],1
  42f228:	imul   edx,DWORD PTR [edi],0xff0131cd
  42f22e:	sub    ebp,DWORD PTR [esi+esi*8]
  42f231:	adc    eax,0x3946ea
  42f236:	and    al,0x31
  42f238:	mov    WORD PTR [ebp-0x76],cs
  42f23b:	lods   al,BYTE PTR ds:[esi]
  42f23c:	mov    esi,0xf6bcb9e8
  42f241:	call   DWORD PTR [ecx]
  42f243:	rcl    DWORD PTR es:[esi+0x1],0x46
  42f248:	fst    DWORD PTR [eax]
  42f24a:	aaa    
  42f24b:	mov    edi,ebp
  42f24d:	push   ecx
  42f24e:	nop
  42f24f:	pusha  
  42f250:	mov    cl,0xf
  42f252:	test   DWORD PTR [edx-0x79],0x33b67c44
  42f259:	push   edi
  42f25a:	outs   dx,BYTE PTR ds:[esi]
  42f25b:	or     DWORD PTR [edx],eax
  42f25d:	add    BYTE PTR [ecx-0x70],ch
  42f260:	mov    DWORD PTR [edi],eax
  42f262:	jecxz  0x42f251
  42f264:	(bad)  
  42f265:	pop    esp
  42f266:	push   ebx
  42f267:	sar    dl,0x38
  42f26a:	add    BYTE PTR [eax],al
  42f26c:	cli    
  42f26d:	cmp    cl,BYTE PTR [edx]
  42f26f:	or     ah,ah
  42f271:	and    eax,0xd848f00b
  42f276:	mov    eax,ds:0x99804051
  42f27b:	maskmovq mm1,(bad)
  42f27c:	test   DWORD PTR [edx+0x30],0x890f828d
  42f283:	ret    0xaa1f
  42f286:	mov    edx,edi
  42f288:	and    BYTE PTR [edx],bl
  42f28a:	aaa    
  42f28b:	sti    
  42f28c:	mov    ds:0x83148e4f,al
  42f291:	pop    edi
  42f292:	cmp    eax,0x178ab200
  42f297:	mov    eax,ds:0xe68a37af
  42f29c:	iret   
  42f29d:	xchg   esp,eax
  42f29e:	pop    es
  42f29f:	or     BYTE PTR ds:0x8404050a,al
  42f2a5:	loop   0x42f2d7
  42f2a7:	and    al,0x2f
  42f2a9:	sbb    eax,0x675b8736
  42f2ae:	icebp  
  42f2af:	jae    0x42f232
  42f2b1:	mov    bl,0xb4
  42f2b3:	pop    eax
  42f2b4:	enter  0x88ad,0xbf
  42f2b8:	dec    ebx
  42f2b9:	adc    BYTE PTR [eax-0x71f3bc06],cl
  42f2bf:	xor    al,0x33
  42f2c1:	mov    ebx,0x33a80041
  42f2c6:	std    
  42f2c7:	dec    ebx
  42f2c8:	inc    edi
  42f2c9:	hlt    
  42f2ca:	out    0x7e,eax
  42f2cc:	mov    BYTE PTR [esi+0x1859],ch
  42f2d2:	pop    esp
  42f2d3:	sbb    DWORD PTR [edx-0x31f5fdf9],ebp
  42f2d9:	inc    ebx
  42f2da:	in     al,0x4b
  42f2dc:	rcl    ch,1
  42f2de:	jle    0x42f334
  42f2e0:	pop    esi
  42f2e1:	dec    edx
  42f2e2:	aas    
  42f2e3:	stos   DWORD PTR es:[edi],eax
  42f2e4:	loop   0x42f364
  42f2e6:	div    BYTE PTR [edi]
  42f2e8:	jno    0x42f335
  42f2ea:	cmp    ecx,edx
  42f2ec:	test   DWORD PTR [eax-0x7947d80a],0x9bb32b75
  42f2f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f2f7:	and    al,BYTE PTR [edx]
  42f2f9:	xchg   ebx,eax
  42f2fa:	mov    ecx,0x36c9efed
  42f2ff:	xor    edi,edi
  42f301:	sti    
  42f302:	test   edi,esp
  42f304:	jmp    0x7c04:0x2828c8f8
  42f30b:	repnz ds (bad) 
  42f30e:	xor    BYTE PTR [edx+ebx*8],dh
  42f311:	or     BYTE PTR [edi],bh
  42f313:	data16 es add al,0x33
  42f317:	jmp    0xe734:0x3c5b176e
  42f31e:	adc    bl,bl
  42f320:	adc    BYTE PTR [ebx+0x17a7b8ed],dl
  42f326:	inc    ecx
  42f327:	push   ebx
  42f328:	fmul   QWORD PTR [edi]
  42f32a:	pop    es
  42f32b:	clc    
  42f32c:	out    0x92,eax
  42f32e:	inc    ebx
  42f32f:	mov    eax,?
  42f331:	inc    ebx
  42f332:	aaa    
  42f333:	mov    ecx,0x17a7
  42f338:	xor    DWORD PTR [edi],ecx
  42f33a:	clc    
  42f33b:	pop    es
  42f33c:	dec    edx
  42f33d:	cmp    DWORD PTR [edi+0x5ef8c3],esi
  42f343:	loop   0x42f30a
  42f345:	(bad)  
  42f346:	and    al,0xdd
  42f348:	outs   dx,BYTE PTR ds:[esi]
  42f349:	dec    edi
  42f34a:	adc    edi,DWORD PTR ds:0xbf0113a9
  42f350:	jb     0x42f38d
  42f352:	add    DWORD PTR [ecx+edx*1-0x731b0da1],edi
  42f359:	cmp    DWORD PTR ds:0x51e638e9,0x753c2772
  42f363:	dec    ah
  42f365:	xor    bl,BYTE PTR [eax+0x2e]
  42f368:	lds    esi,FWORD PTR [edi+0x4e569dc0]
  42f36e:	xor    ebx,DWORD PTR [ebp+0x160112a4]
  42f374:	dec    edi
  42f375:	mov    ecx,DWORD PTR [edi]
  42f377:	test   eax,0x6cf0bb34
  42f37c:	sahf   
  42f37d:	(bad)  
  42f37e:	sbb    al,0xc2
  42f380:	cmp    BYTE PTR es:[esi+ebx*8-0x32],dh
  42f385:	not    DWORD PTR [eax]
  42f387:	sub    DWORD PTR [eax+0x3d],eax
  42f38a:	cli    
  42f38b:	pop    esp
  42f38c:	aaa    
  42f38d:	dec    edi
  42f38e:	adc    esp,DWORD PTR [ebp+0x62011323]
  42f394:	jge    0x42f3d2
  42f396:	ret    
  42f397:	out    0x35,eax
  42f399:	pop    ebx
  42f39a:	or     eax,esi
  42f39c:	add    BYTE PTR [eax],al
  42f39e:	sub    BYTE PTR [edx+edi*8],ah
  42f3a1:	xor    al,0x37
  42f3a3:	out    0xf9,eax
  42f3a5:	fdiv   st(0),st
  42f3a7:	es inc ecx
  42f3a9:	jmp    0xab9ee1d5
  42f3ae:	aaa    
  42f3af:	xor    al,0xf3
  42f3b1:	in     al,0xdc
  42f3b3:	cmp    BYTE PTR ds:0x85e638e9,0x15
  42f3ba:	fistp  QWORD PTR [edx]
  42f3bc:	jne    0x42f3be
  42f3be:	lock scas al,BYTE PTR es:[edi]
  42f3c0:	ret    0x3958
  42f3c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3c4:	jge    0x42f386
  42f3c6:	mov    dl,0x61
  42f3c8:	div    BYTE PTR ds:0x3a869a
  42f3ce:	sbb    DWORD PTR [ebx-0x4f],ecx
  42f3d1:	adc    esi,ecx
  42f3d3:	ss test al,al
  42f3d6:	jb     0x42f429
  42f3d8:	xor    dh,BYTE PTR [eax-0x6e]
  42f3db:	sub    DWORD PTR [ecx],ecx
  42f3dd:	(bad)  
  42f3de:	mov    ?,WORD PTR ds:0xaf864082
  42f3e4:	(bad)  
  42f3e5:	push   ebp
  42f3e6:	sub    DWORD PTR [ebx-0x5f],ecx
  42f3e9:	adc    al,0x9e
  42f3eb:	ss push edi
  42f3ed:	ret    0x3652
  42f3f0:	out    dx,eax
  42f3f1:	add    eax,0x3a8866
  42f3f6:	bound  ecx,QWORD PTR [edx+eax*4]
  42f3f9:	je     0x42f46d
  42f3fb:	dec    esi
  42f3fc:	ins    DWORD PTR es:[edi],dx
  42f3fd:	es es mov ah,0x51
  42f401:	inc    DWORD PTR [eax]
  42f403:	add    BYTE PTR [ecx],bh
  42f405:	mov    edx,0xa50b74b9
  42f40a:	xor    al,0x7c
  42f40c:	dec    esi
  42f40d:	test   DWORD PTR [eax],0x10fe23ff
  42f413:	inc    eax
  42f414:	push   cs
  42f415:	mov    ebx,0x811b74b9
  42f41a:	imul   eax,DWORD PTR [ebx+eiz*2],0xf00bf50
  42f421:	sar    DWORD PTR [ecx],1
  42f423:	or     ch,ah
  42f425:	cmp    al,0x4f
  42f427:	call   DWORD PTR [ebx]
  42f429:	scas   al,BYTE PTR es:[edi]
  42f42a:	or     al,BYTE PTR [eax-0x22]
  42f42d:	add    edi,DWORD PTR [ebx+0x4abce04]
  42f433:	or     BYTE PTR [eax+edi*8+0x11370400],bl
  42f43a:	jl     0x42f4af
  42f43c:	adc    ebp,DWORD PTR [edi+0x11]
  42f43f:	pop    ds
  42f440:	iret   
  42f441:	or     BYTE PTR ds:0xbdd7b8fb,ch
  42f447:	jae    0x42f496
  42f449:	retf   0x7bd2
  42f44c:	xchg   DWORD PTR [esi],ebx
  42f44e:	add    eax,0xee934afb
  42f453:	aas    
  42f454:	aaa    
  42f455:	fdivr  DWORD PTR [ebp+0x15263d73]
  42f45b:	or     BYTE PTR [edx],al
  42f45d:	pop    eax
  42f45e:	aam    0xbf
  42f460:	mul    ebp
  42f462:	cld    
  42f463:	push   ecx
  42f464:	js     0x42f3ed
  42f466:	loope  0x42f473
  42f468:	add    BYTE PTR [eax],al
  42f46a:	jo     0x42f4dc
  42f46c:	mov    ecx,0x2f5af713
  42f471:	mov    esi,0x87325b2f
  42f476:	dec    ebx
  42f477:	sub    DWORD PTR [ebx],eax
  42f479:	or     BYTE PTR [ebp-0x62],ah
  42f47c:	std    
  42f47d:	add    esp,esp
  42f47f:	aad    0x2a
  42f481:	or     cl,ch
  42f483:	into   
  42f484:	and    al,ch
  42f486:	sub    eax,0xbbfa9093
  42f48b:	sbb    dl,BYTE PTR [edx]
  42f48d:	bound  ebp,QWORD PTR [eax]
  42f48f:	mov    BYTE PTR [ecx],cl
  42f491:	shl    BYTE PTR [ebx+ebx*2-0x76],1
  42f495:	adc    al,0xdf
  42f497:	dec    ebx
  42f498:	cmp    eax,0x876abc00
  42f49d:	icebp  
  42f49e:	add    DWORD PTR [edi],0xffffffc6
  42f4a1:	pop    ecx
  42f4a2:	cmp    edx,DWORD PTR [eax]
  42f4a4:	cmp    bh,BYTE PTR [edi+0x7a]
  42f4a7:	pop    edi
  42f4a8:	std    
  42f4a9:	jae    0x42f4eb
  42f4ab:	cmc    
  42f4ac:	hlt    
  42f4ad:	mov    WORD PTR [ecx+0x6f],?
  42f4b0:	sub    eax,0xf4347a8d
  42f4b5:	xor    ecx,edi
  42f4b7:	push   edx
  42f4b8:	retf   0xcd8d
  42f4bb:	mov    ah,0x14
  42f4bd:	hlt    
  42f4be:	enter  0xbcc4,0x36
  42f4c2:	mov    esp,0x238eefc9
  42f4c7:	jl     0x42f4a0
  42f4c9:	inc    ebx
  42f4ca:	aaa    
  42f4cb:	fsubrp st(7),st
  42f4cd:	mov    es,WORD PTR [eax]
  42f4cf:	add    BYTE PTR [esi],ah
  42f4d1:	cmp    al,0x5f
  42f4d3:	mov    WORD PTR [edx],ds
  42f4d5:	sub    BYTE PTR [edi-0xc2bbc72],dh
  42f4db:	inc    ebx
  42f4dc:	aaa    
  42f4dd:	dec    ecx
  42f4de:	das    
  42f4df:	jmp    0x42f4a9
  42f4e1:	call   0xf4720b30
  42f4e6:	jo     0x42f52e
  42f4e8:	sbb    edx,DWORD PTR [ecx-0x2c]
  42f4eb:	mov    edi,0x2ee7f440
  42f4f0:	sbb    BYTE PTR [edi+eiz*4+0x7b],dh
  42f4f4:	ss pop ebp
  42f4f6:	hlt    
  42f4f7:	mov    fs,ebx
  42f4f9:	and    ebx,DWORD PTR [ebx]
  42f4fb:	sbb    DWORD PTR [ebx-0x1b],eax
  42f4fe:	adc    bh,cl
  42f500:	xchg   esp,eax
  42f501:	daa    
  42f502:	test   al,0x3
  42f504:	fucomp st(4)
  42f506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f507:	shr    DWORD PTR [esp+esi*1],0x95
  42f50b:	jp     0x42f529
  42f50d:	inc    edi
  42f50e:	in     al,dx
  42f50f:	sti    
  42f510:	cli    
  42f511:	repz out 0x7,eax
  42f514:	jo     0x42f4d1
  42f516:	inc    esp
  42f517:	cld    
  42f518:	xchg   al,cl
  42f51a:	push   edi
  42f51b:	pushf  
  42f51c:	test   edi,esp
  42f51e:	ror    BYTE PTR [esi+0x275374b4],cl
  42f524:	cld    
  42f525:	or     DWORD PTR [esp+esi*4+0x39],eax
  42f529:	xor    al,0xbb
  42f52b:	clc    
  42f52c:	test   al,0x25
  42f52e:	add    DWORD PTR [ecx],ebp
  42f530:	xor    esi,DWORD PTR [edi+0x64f0]
  42f536:	retf   0x53c3
  42f539:	loop   0x42f545
  42f53b:	cmp    BYTE PTR [ecx+edi*1-0x40],dh
  42f53f:	lds    ebx,FWORD PTR [eax]
  42f541:	xchg   esi,eax
  42f542:	and    ch,BYTE PTR [eax]
  42f544:	cli    
  42f545:	pop    ss
  42f546:	retf   
  42f547:	dec    edx
  42f548:	jb     0x42f53f
  42f54a:	test   eax,0xaf7e0cc8
  42f54f:	mov    edx,DWORD PTR [eax]
  42f551:	sub    DWORD PTR [ebx],esi
  42f553:	iret   
  42f554:	jnp    0x42f52f
  42f556:	xor    al,0xc8
  42f558:	sub    edi,DWORD PTR [esi+0x5e08c5a9]
  42f55e:	(bad)  
  42f55f:	ja     0x42f571
  42f561:	test   eax,0x4e00d634
  42f566:	sub    bh,BYTE PTR [esi+eax*4]
  42f569:	inc    ecx
  42f56a:	push   ds
  42f56b:	sub    BYTE PTR [esi+0x3e],cl
  42f56e:	outs   dx,DWORD PTR ds:[esi]
  42f56f:	out    dx,eax
  42f570:	adc    al,0xa9
  42f572:	xor    al,0x43
  42f574:	fcom   st(2)
  42f576:	je     0x42f55a
  42f578:	stc    
  42f579:	lahf   
  42f57a:	pop    esp
  42f57b:	js     0x138d5628
  42f581:	and    eax,0xae010f44
  42f586:	push   ds
  42f587:	dec    esi
  42f588:	ret    
  42f589:	out    dx,eax
  42f58a:	xor    ebp,esp
  42f58c:	in     eax,0xec
  42f58e:	rol    edi,0x10
  42f591:	test   BYTE PTR [eax+0x40],0x4e
  42f595:	out    dx,al
  42f596:	sub    BYTE PTR [ebx+0xd],ch
  42f599:	sub    DWORD PTR [eax],eax
  42f59b:	add    BYTE PTR [ebx],dh
  42f59d:	jmp    0x3c01:0x3af53c55
  42f5a4:	mov    ds,WORD PTR [ebx-0x7b]
  42f5a7:	push   0xffffffbb
  42f5a9:	xor    eax,DWORD PTR [ecx]
  42f5ab:	add    BYTE PTR [esi],cl
  42f5ad:	mov    dl,0xe5
  42f5af:	mov    al,ds:0x560132da
  42f5b4:	dec    ecx
  42f5b5:	mov    bh,0xb9
  42f5b7:	je     0x42f5c3
  42f5b9:	sub    eax,0x46915001
  42f5be:	in     eax,0x12
  42f5c0:	push   ds
  42f5c1:	cmp    BYTE PTR [edx+eax*1],bh
  42f5c4:	fbstp  TBYTE PTR [edx]
  42f5c6:	add    DWORD PTR [edi],ecx
  42f5c8:	pop    edx
  42f5c9:	(bad)  
  42f5ca:	stc    
  42f5cb:	dec    esi
  42f5cd:	int    0xaa
  42f5cf:	jl     0x42f570
  42f5d1:	xor    al,BYTE PTR [ecx]
  42f5d3:	call   0x3a8ce2
  42f5d8:	add    esp,edi
  42f5da:	arpl   bp,di
  42f5dc:	adc    ecx,eax
  42f5de:	loope  0x42f569
  42f5e0:	mov    ebp,0x568bf6bd
  42f5e5:	iret   
  42f5e6:	mov    esp,0xf6c0e560
  42f5eb:	xor    ecx,DWORD PTR [esi-0x50]
  42f5ee:	nop
  42f5ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5f0:	xor    cl,al
  42f5f2:	add    dh,0xce
  42f5f5:	stos   BYTE PTR es:[edi],al
  42f5f6:	imul   esp,DWORD PTR [ebp-0xd53ef0],0xffffff99
  42f5fd:	int    0x84
  42f5ff:	inc    eax
  42f600:	add    BYTE PTR [eax],al
  42f602:	xor    ecx,eax
  42f604:	not    BYTE PTR [eax-0x4a]
  42f607:	int    0x48
  42f609:	aaa    
  42f60a:	ja     0x42f5b6
  42f60c:	adc    al,0x55
  42f60e:	xor    ecx,eax
  42f610:	arpl   WORD PTR [eax+edx*8+0x7],ax
  42f614:	mov    WORD PTR [ebp+0x76],es
  42f617:	pop    es
  42f618:	push   ecx
  42f619:	dec    DWORD PTR [ebx]
  42f61b:	pop    edx
  42f61c:	cmovo  ecx,DWORD PTR [esi]
  42f61f:	mov    ch,0xbd
  42f621:	or     al,0xf1
  42f623:	and    al,0xd
  42f625:	lea    esi,[edi]
  42f627:	loopne 0x42f666
  42f629:	sti    
  42f62a:	add    BYTE PTR [edi+0x76],bh
  42f62d:	je     0x42f5fe
  42f62f:	les    eax,FWORD PTR [edx-0x50]
  42f632:	lock push 0x5b771139
  42f638:	jp     0x42f67e
  42f63a:	out    0x2b,eax
  42f63c:	jp     0x42f682
  42f63e:	(bad)  
  42f63f:	or     esi,DWORD PTR [eax+ebp*2]
  42f642:	xchg   edi,eax
  42f643:	das    
  42f644:	inc    ebp
  42f645:	add    BYTE PTR [edx-0x3f08e220],bh
  42f64b:	mov    esi,0xbae4e82d
  42f650:	mov    edi,edx
  42f652:	mov    edx,0x6504129b
  42f657:	fwait
  42f658:	cwde   
  42f659:	xor    DWORD PTR ds:0xa7447a6b,ecx
  42f65f:	mov    edi,DWORD PTR [edx-0x52]
  42f662:	adc    ebx,DWORD PTR [ebp+edi*8-0x1]
  42f666:	add    BYTE PTR [eax],al
  42f668:	loope  0x42f65c
  42f66a:	enter  0x8129,0xfe
  42f66e:	adc    eax,0xfd5b34e8
  42f673:	cli    
  42f674:	in     al,0x5e
  42f676:	mov    WORD PTR [ebx+ebx*2],ss
  42f679:	imul   edi,DWORD PTR ds:0x121bba00,0xd4160010
  42f683:	cli    
  42f684:	sub    bl,BYTE PTR [ebx]
  42f686:	out    dx,eax
  42f687:	aas    
  42f688:	aaa    
  42f689:	xor    esp,DWORD PTR [ecx-0x66c1be1d]
  42f68f:	mov    DWORD PTR [edi-0x1a5d3a4],0x1b873319
  42f699:	fisub  DWORD PTR [ecx-0x21b14b09]
  42f69f:	push   ecx
  42f6a0:	xor    BYTE PTR [esi+ecx*2],0x5
  42f6a4:	or     al,0x27
  42f6a6:	in     al,dx
  42f6a7:	hlt    
  42f6a8:	dec    eax
  42f6a9:	xor    al,0x38
  42f6ab:	mov    ebp,DWORD PTR [ebx]
  42f6ad:	clc    
  42f6ae:	clc    
  42f6af:	inc    ebx
  42f6b0:	aaa    
  42f6b1:	dec    ebp
  42f6b2:	cld    
  42f6b3:	jg     0x42f6b5
  42f6b5:	icebp  
  42f6b6:	out    0x7e,eax
  42f6b8:	sub    ebx,DWORD PTR [ebp+edx*8+0x43]
  42f6bc:	aaa    
  42f6bd:	dec    ebp
  42f6be:	xchg   edx,eax
  42f6bf:	jg     0x42f6e4
  42f6c1:	push   esp
  42f6c2:	test   BYTE PTR [ebx+0x37],0x59
  42f6c6:	and    al,0x81
  42f6c8:	mov    bh,al
  42f6ca:	ss jg  0x42f6cd
  42f6cd:	add    BYTE PTR [eax+ebx*1-0x8],dh
  42f6d1:	into   
  42f6d2:	xor    esi,DWORD PTR [edi+edx*4-0x4b38c8b9]
  42f6d9:	xchg   BYTE PTR [eax+ebx*1],ch
  42f6dc:	fadd   QWORD PTR [edi+0x7c491e2b]
  42f6e2:	push   0x361de7f0
  42f6e7:	dec    ebp
  42f6e8:	rcr    edi,cl
  42f6ea:	sub    al,0x37
  42f6ec:	cld    
  42f6ed:	add    al,0x37
  42f6ef:	xor    al,0xc0
  42f6f1:	or     esp,DWORD PTR [edi-0x10]
  42f6f4:	out    0x9b,eax
  42f6f6:	and    DWORD PTR [edx+edi*1-0x75],ecx
  42f6fa:	mov    cl,0x3e
  42f6fc:	pusha  
  42f6fd:	mov    ah,0x21
  42f6ff:	xor    al,0x60
  42f701:	test   DWORD PTR [ebx+esi*1],edx
  42f704:	call   0x6449430c
  42f709:	mov    ah,0x9
  42f70b:	xor    al,0x13
  42f70d:	mov    bl,0xda
  42f70f:	xor    edi,DWORD PTR [esi+0x3]
  42f712:	ror    DWORD PTR [esp+esi*2+0x40],1
  42f716:	pop    ebx
  42f717:	sub    al,0x98
  42f719:	mov    al,BYTE PTR [esi]
  42f71b:	mov    eax,0xc0adf100
  42f720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f721:	mov    edx,0x46c0b0db
  42f726:	or     al,0xa8
  42f728:	sar    BYTE PTR [edi],0x88
  42f72b:	push   eax
  42f72c:	pop    ebx
  42f72d:	stos   BYTE PTR es:[edi],al
  42f72e:	inc    edi
  42f72f:	mov    bl,0xec
  42f731:	push   0xb3a00000
  42f736:	add    cl,ch
  42f738:	xor    al,0xfb
  42f73a:	push   edx
  42f73b:	mov    esi,0x91863c47
  42f740:	mov    esp,0xadae3a83
  42f745:	ds mov dl,0xa9
  42f748:	push   ebx
  42f749:	lock hlt 
  42f74b:	push   ecx
  42f74c:	xor    edi,DWORD PTR [edi]
  42f74e:	test   BYTE PTR [edi],ch
  42f750:	cmp    dh,BYTE PTR [ecx+eax*1]
  42f753:	pop    esp
  42f754:	ja     0x42f7a2
  42f756:	push   eax
  42f757:	xchg   BYTE PTR [edi+0x3c],al
  42f75a:	cli    
  42f75b:	aam    0x8
  42f75d:	cmp    al,BYTE PTR [ecx-0x17]
  42f760:	mov    bh,0x8b
  42f762:	je     0x42f721
  42f764:	cmp    cl,BYTE PTR [edx-0x74]
  42f767:	stos   BYTE PTR es:[edi],al
  42f768:	inc    esp
  42f769:	in     al,0xf9
  42f76b:	aam    0xbc
  42f76d:	mov    eax,0xb34b153d
  42f772:	cmp    eax,0x78b7ff9d
  42f777:	inc    esi
  42f778:	mov    ebp,0x5729e84e
  42f77d:	dec    ebx
  42f77e:	stc    
  42f77f:	fs mov bh,0xc3
  42f782:	stc    
  42f783:	lods   eax,DWORD PTR cs:[esi]
  42f785:	sti    
  42f786:	call   0xf98e4837
  42f78b:	jno    0x42f784
  42f78d:	dec    esi
  42f78e:	in     eax,0xed
  42f790:	jbe    0x42f782
  42f792:	stc    
  42f793:	jmp    0x13cc04c
  42f798:	add    BYTE PTR [eax],al
  42f79a:	push   ds
  42f79b:	retf   0x4c34
  42f79e:	maskmovq mm0,(bad)
  42f79f:	test   DWORD PTR [eax],0x44a4d774
  42f7a5:	hlt    
  42f7a6:	(bad)  
  42f7a7:	and    edi,DWORD PTR [edx]
  42f7a9:	jmp    FWORD PTR [ebp+0x4c]
  42f7ac:	not    dh
  42f7ae:	sbb    esp,esp
  42f7b0:	ds or  al,0x19
  42f7b3:	in     al,0x46
  42f7b5:	or     bh,cl
  42f7b7:	(bad)
  42f7bb:	dec    esp
  42f7bc:	scas   al,BYTE PTR es:[edi]
  42f7bd:	cmovle ecx,DWORD PTR [ebp-0x52]
  42f7c1:	inc    edi
  42f7c2:	shl    BYTE PTR [ebp-0x27],cl
  42f7c5:	adc    ch,dl
  42f7c7:	jne    0x42f812
  42f7c9:	jmp    FWORD PTR ds:0xc675f648
  42f7cf:	mov    ebx,0xf6c27414
  42f7d4:	add    BYTE PTR [ebp+0x6a0a238e],al
  42f7da:	inc    edx
  42f7db:	mov    ebp,0x5b290c6a
  42f7e0:	in     eax,0x12
  42f7e2:	dec    esi
  42f7e3:	xor    BYTE PTR [eax+eax*8+0xa9ca79],al
  42f7ea:	sahf   
  42f7eb:	ss jmp 0xf6ffe3b2
  42f7f1:	test   BYTE PTR [esi+0x24],cl
  42f7f4:	pop    edi
  42f7f5:	mov    ecx,ebp
  42f7f7:	inc    esi
  42f7f8:	arpl   WORD PTR [eax],dx
  42f7fa:	ror    DWORD PTR [ecx+0xd],1
  42f7fd:	add    DWORD PTR [eax],eax
  42f7ff:	add    BYTE PTR [esi+0x36],bl
  42f802:	push   ecx
  42f803:	call   0x3a63c2
  42f808:	or     DWORD PTR [ecx],esp
  42f80a:	or     eax,0x74bd10ff
  42f80f:	or     BYTE PTR [edx+esi*4+0x553773f6],ah
  42f816:	mov    BYTE PTR [esi-0x2a451],ch
  42f81c:	xor    BYTE PTR [ecx-0x77],ch
  42f81f:	push   cs
  42f820:	ja     0x42f87d
  42f822:	jp     0x42f7e3
  42f824:	stos   DWORD PTR es:[edi],eax
  42f825:	adc    DWORD PTR ds:0xfd5b34e8,0xfffffffa
  42f82c:	test   BYTE PTR [edi],bh
  42f82e:	mov    BYTE PTR [ebx+ebx*1],dl
  42f831:	dec    esi
  42f832:	cmp    eax,0xa9bba00
  42f837:	adc    DWORD PTR [esi+ebx*1+0x37af7ff5],ebp
  42f83e:	(bad)  
  42f83f:	push   DWORD PTR [edi]
  42f841:	pop    esp
  42f842:	or     dl,BYTE PTR [esi]
  42f844:	lods   eax,DWORD PTR ds:[esi]
  42f845:	sbb    BYTE PTR [eax+0x4f57fe6],cl
  42f84b:	lea    eax,[edi+ecx*1-0x55c80002]
  42f852:	iret   
  42f853:	cli    
  42f854:	sub    bl,BYTE PTR [ebx-0x4cc8c012]
  42f85a:	call   0x7cf5aa3d
  42f85f:	inc    esp
  42f860:	cmp    eax,edx
  42f862:	cmp    eax,0x37000024
  42f867:	pop    ebx
  42f868:	std    
  42f869:	aas    
  42f86a:	and    al,BYTE PTR [eax+0x57777f30]
  42f870:	sub    eax,0x2deef28d
  42f875:	sti    
  42f876:	sub    dl,BYTE PTR [edi+0x75373fe9]
  42f87c:	dec    DWORD PTR [edx+edi*8-0x5b04d20a]
  42f883:	lahf   
  42f884:	(bad)  
  42f885:	push   DWORD PTR [edi]
  42f887:	add    ch,bl
  42f889:	cmp    eax,DWORD PTR [ebx-0x65]
  42f88c:	std    
  42f88d:	gs inc eax
  42f88f:	xor    al,0x8e
  42f891:	std    
  42f892:	mov    ebx,0x3c3303ef
  42f897:	test   DWORD PTR [ebx+0xb343702],edi
  42f89d:	out    dx,al
  42f89e:	jo     0x42f8c0
  42f8a0:	test   al,0x3
  42f8a2:	out    0x32,eax
  42f8a4:	call   0x8203:0xdf75ee2c
  42f8ab:	mov    ebp,0x4c1483fb
  42f8b0:	cbw    
  42f8b2:	sub    al,0xe5
  42f8b4:	xor    DWORD PTR [ebx+0x12],edi
  42f8b7:	mov    ebp,0x7165f029
  42f8bc:	out    0xc7,eax
  42f8be:	lock dec eax
  42f8c0:	out    0x86,eax
  42f8c2:	data16 and BYTE PTR [ecx+0x38],dh
  42f8c6:	sbb    esp,DWORD PTR [ecx+ebx*1]
  42f8c9:	xchg   DWORD PTR [eax],eax
  42f8cb:	add    BYTE PTR [ebx-0x14],al
  42f8ce:	rol    DWORD PTR [ebx+0x37],cl
  42f8d1:	scas   eax,DWORD PTR es:[edi]
  42f8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8d3:	div    DWORD PTR [ecx+ebp*4-0x42c8fc19]
  42f8da:	sub    eax,esi
  42f8dc:	mov    cl,0xfb
  42f8de:	ret    
  42f8df:	mov    ?,WORD PTR [edi+0x33]
  42f8e2:	call   0xe502efea
  42f8e7:	js     0x42f8e7
  42f8e9:	das    
  42f8ea:	jg     0x42f8ed
  42f8ec:	mov    al,0x29
  42f8ee:	addr16 ret 
  42f8f0:	push   esp
  42f8f1:	inc    ecx
  42f8f2:	sub    BYTE PTR [edi+esi*1],al
  42f8f5:	xor    al,0xf8
  42f8f7:	cmovno edi,DWORD PTR [ebp-0xbdcbfec]
  42f8fe:	out    0x32,eax
  42f900:	lock jae 0x42f8de
  42f903:	xor    edi,DWORD PTR [edx-0xf17fc11]
  42f909:	dec    eax
  42f90a:	add    BYTE PTR [esi],bl
  42f90c:	mov    dh,0x88
  42f90e:	or     DWORD PTR [ebx+edi*2-0x4c],edx
  42f912:	rcr    BYTE PTR [edi+ebp*2-0x4a0abd4f],0x88
  42f91a:	adc    al,0xb9
  42f91c:	mov    cl,0x1f
  42f91e:	jmp    0x84776e18
  42f923:	sub    DWORD PTR [edi-0xa],eax
  42f926:	test   DWORD PTR [edi+0x297df710],esp
  42f92c:	aaa    
  42f92d:	in     al,0x8b
  42f92f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f930:	add    BYTE PTR [eax],al
  42f932:	lock sub edx,DWORD PTR [ecx-0x1a]
  42f936:	fnstenv [eax-0x78781140]
  42f93c:	in     eax,0xeb
  42f93e:	out    0x87,al
  42f940:	test   BYTE PTR [ecx+0x3ffa0240],ch
  42f946:	out    0xae,eax
  42f948:	add    bh,BYTE PTR [esi+0x62111030]
  42f94e:	lods   eax,DWORD PTR ds:[esi]
  42f94f:	dec    edi
  42f950:	out    0xac,al
  42f952:	mov    ecx,0xb1ef854a
  42f957:	ret    
  42f958:	and    al,0xed
  42f95a:	inc    ebx
  42f95b:	repz and al,0xfd
  42f95e:	cmp    eax,0x706014f5
  42f963:	adc    BYTE PTR [ecx],ch
  42f965:	xchg   BYTE PTR [edi+0x3b290d9b],ah
  42f96b:	mov    cl,0xc0
  42f96d:	std    
  42f96e:	popf   
  42f96f:	test   DWORD PTR [ebx+0x51239725],0xfa188751
  42f979:	pop    esi
  42f97a:	pop    ecx
  42f97b:	jmp    0xace3:0xaf4de8b0
  42f982:	jne    0x42f93c
  42f984:	inc    edx
  42f985:	add    BYTE PTR [edx+0x3],ah
  42f988:	not    BYTE PTR ds:0x3944fa
  42f98e:	pop    ebp
  42f98f:	jae    0x42f919
  42f991:	push   es
  42f992:	xlat   BYTE PTR ds:[ebx]
  42f993:	or     BYTE PTR ds:0x98000089,al
  42f999:	dec    ebx
  42f99a:	add    dh,0xd
  42f99d:	sbb    DWORD PTR [esi-0x75],ecx
  42f9a0:	push   ds
  42f9a1:	(bad)  
  42f9a2:	idiv   BYTE PTR [ecx]
  42f9a4:	add    BYTE PTR [ecx],bh
  42f9a6:	adc    BYTE PTR [ebx+0x34f646d8],cl
  42f9ac:	jbe    0x42f95c
  42f9ae:	adc    al,0xc8
  42f9b0:	cld    
  42f9b1:	repnz add BYTE PTR [edi-0x3b],al
  42f9b5:	jo     0x42fa22
  42f9b7:	out    dx,eax
  42f9b8:	adc    DWORD PTR [esi],esi
  42f9ba:	add    eax,0xf769dae8
  42f9bf:	dec    DWORD PTR [ebp+0x1560586]
  42f9c5:	push   edi
  42f9c6:	lds    edx,FWORD PTR [edx]
  42f9c8:	push   ds
  42f9c9:	xor    BYTE PTR [esi+0x5e],dl
  42f9cc:	lea    eax,[edx]
  42f9ce:	dec    edx
  42f9cf:	push   esi
  42f9d0:	push   ebp
  42f9d1:	mov    al,ds:0x2f2468c
  42f9d6:	mov    BYTE PTR [edx+edi*8+0x3e],al
  42f9da:	not    BYTE PTR ds:0x3941f6
  42f9e0:	fstp   QWORD PTR [ebx+0x35965e38]
  42f9e6:	push   ebp
  42f9e7:	push   ebp
  42f9e8:	in     eax,dx
  42f9e9:	popf   
  42f9ea:	cmp    BYTE PTR [esi],bl
  42f9ec:	test   al,0x6d
  42f9ee:	dec    esi
  42f9ef:	mov    ecx,DWORD PTR [eax+0x34]
  42f9f2:	cmp    ch,0x1d
  42f9f5:	jl     0x42f9a8
  42f9f7:	add    BYTE PTR [edx+0x6b],ch
  42f9fa:	arpl   WORD PTR [eax],ax
  42f9fc:	add    BYTE PTR [eax],al
  42f9fe:	loope  0x42fa63
  42fa00:	mov    cl,0xff
  42fa02:	aaa    
  42fa03:	dec    eax
  42fa04:	xchg   ecx,eax
  42fa05:	or     eax,0xbf7a5cf7
  42fa0a:	mov    esp,0x4574f996
  42fa0f:	push   es
  42fa10:	shl    DWORD PTR [edi+0xdb56758],1
  42fa16:	neg    DWORD PTR [eax+edi*2+0x41]
  42fa1a:	xor    ebx,edx
  42fa1c:	loopne 0x42f9d5
  42fa1e:	aaa    
  42fa1f:	and    bh,ah
  42fa21:	xchg   BYTE PTR [ebx],ch
  42fa23:	in     eax,0x75
  42fa25:	or     ecx,edi
  42fa27:	call   0x5aba:0xc959373a
  42fa2e:	scas   al,BYTE PTR es:[edi]
  42fa2f:	gs js  0x42f9f8
  42fa32:	idiv   BYTE PTR [edi+edi*8]
  42fa35:	jle    0x42fa30
  42fa37:	dec    edi
  42fa38:	xchg   ebp,eax
  42fa39:	xchg   DWORD PTR [esi+0x4d],ebx
  42fa3c:	test   BYTE PTR [eax+eax*1-0x20],bl
  42fa40:	loopne 0x42fa49
  42fa42:	clc    
  42fa43:	dec    eax
  42fa44:	mov    eax,ds:0x235b770d
  42fa49:	push   edi
  42fa4a:	mov    ds,WORD PTR [edx+0x2cd3872a]
  42fa50:	cs dec edi
  42fa52:	stos   BYTE PTR es:[edi],al
  42fa53:	push   ss
  42fa54:	stc    
  42fa55:	push   ecx
  42fa56:	addr16 aam 0x3a
  42fa59:	clc    
  42fa5a:	enter  0xa548,0xd
  42fa5e:	ja     0x42fabb
  42fa60:	rcl    dh,1
  42fa62:	add    BYTE PTR [eax],al
  42fa64:	(bad)  
  42fa65:	std    
  42fa66:	cld    
  42fa67:	or     bh,BYTE PTR [edx+0x37fffde5]
  42fa6d:	je     0x42fa91
  42fa6f:	or     al,0x30
  42fa71:	iret   
  42fa72:	jp     0x42fa73
  42fa74:	cwde   
  42fa75:	pop    ebx
  42fa76:	js     0x42fa82
  42fa78:	ret    0xf93e
  42fa7b:	mov    WORD PTR [ebx],?
  42fa7d:	xor    al,0x75
  42fa7f:	inc    DWORD PTR [eax+0x37ae745]
  42fa85:	dec    eax
  42fa86:	aas    
  42fa87:	(bad)  
  42fa88:	pop    ds
  42fa89:	inc    esi
  42fa8a:	dec    edx
  42fa8b:	jg     0x42fa35
  42fa8d:	rcl    ah,0x30
  42fa90:	fldcw  WORD PTR [edi]
  42fa92:	cmp    ecx,DWORD PTR [esi]
  42fa94:	inc    edi
  42fa95:	inc    ebp
  42fa96:	mov    esp,0xdfbf4df7
  42fa9b:	xor    BYTE PTR [edi+ebx*1+0x68],cl
  42fa9f:	icebp  
  42faa0:	add    BYTE PTR [edi+ebp*2],dh
  42faa3:	xchg   ebx,eax
  42faa4:	add    DWORD PTR [ecx-0x65],eax
  42faa7:	shr    DWORD PTR [edi-0x19],cl
  42faaa:	(bad)  
  42faad:	(bad)  
  42faaf:	xor    BYTE PTR [eax+0x45],dh
  42fab2:	je     0x42faa3
  42fab4:	xchg   edx,eax
  42fab5:	inc    ebp
  42fab6:	cdq    
  42fab7:	sbb    DWORD PTR [eax*2-0xbd8302c],ecx
  42fabe:	out    0x88,eax
  42fac0:	sar    BYTE PTR [esi-0x67dc7cfd],0xf5
  42fac7:	ret    
  42fac8:	add    BYTE PTR [eax],al
  42faca:	lock hlt 
  42facc:	xor    DWORD PTR [ebx-0x3c2757bd],eax
  42fad2:	loopne 0x42fab2
  42fad4:	mov    edx,0x2821ef19
  42fad9:	add    al,0xb8
  42fadb:	xor    al,0x5f
  42fadd:	stc    
  42fade:	int3   
  42fadf:	jb     0x42fa69
  42fae1:	push   es
  42fae2:	iret   
  42fae3:	push   eax
  42fae4:	iret   
  42fae5:	cmp    DWORD PTR [ebp+0x358efc58],0xb1801cb9
  42faef:	cmp    dh,BYTE PTR [ecx+0x38]
  42faf2:	mov    dh,0x44
  42faf4:	loop   0x42facf
  42faf6:	popf   
  42faf7:	push   ds
  42faf8:	add    DWORD PTR [ecx+0x3a00f42b],esi
  42fafe:	xor    cl,BYTE PTR [ecx+0x73]
  42fb01:	popa   
  42fb02:	mov    ah,0x1f
  42fb04:	(bad)  
  42fb06:	je     0x42fb4c
  42fb08:	pop    ebx
  42fb09:	arpl   ax,di
  42fb0b:	ffree  st(7)
  42fb0d:	sub    eax,DWORD PTR [ebx+0x34]
  42fb10:	push   eax
  42fb11:	call   0x4474:0xdbd927b1
  42fb18:	push   esp
  42fb19:	sahf   
  42fb1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb1b:	retf   0x960c
  42fb1e:	mov    ch,0x75
  42fb20:	stc    
  42fb21:	scas   eax,DWORD PTR es:[edi]
  42fb22:	sub    al,0xe1
  42fb24:	stc    
  42fb25:	hlt    
  42fb26:	fdiv   DWORD PTR [esi]
  42fb28:	inc    ecx
  42fb29:	jmp    0xa6054c97
  42fb2e:	add    BYTE PTR [eax],al
  42fb30:	push   eax
  42fb31:	das    
  42fb32:	add    al,al
  42fb34:	data16 (bad) 
  42fb36:	xor    BYTE PTR [edx+0x2d],dh
  42fb39:	sbb    eax,esp
  42fb3b:	push   0xffffff93
  42fb3d:	add    ebp,DWORD PTR [edi-0x16]
  42fb40:	sbb    al,BYTE PTR [ecx+ebx*2]
  42fb43:	jb     0x42fb2b
  42fb45:	aaa    
  42fb46:	fimul  WORD PTR [bp+si]
  42fb49:	xor    eax,0xe4a3e58c
  42fb4e:	push   eax
  42fb4f:	into   
  42fb50:	dec    edi
  42fb51:	fs push cs
  42fb53:	sub    DWORD PTR [ebx],edi
  42fb55:	mov    ecx,0xc32a34c0
  42fb5a:	ret    
  42fb5b:	sub    DWORD PTR [eax],edx
  42fb5d:	push   cs
  42fb5e:	outs   dx,DWORD PTR ds:[esi]
  42fb5f:	xchg   esi,eax
  42fb60:	pop    ecx
  42fb61:	cmp    bl,al
  42fb63:	sub    eax,0x36012f0f
  42fb68:	mov    ah,0x72
  42fb6a:	stc    
  42fb6b:	daa    
  42fb6c:	inc    ebx
  42fb6d:	out    0xf9,eax
  42fb6f:	hlt    
  42fb70:	or     BYTE PTR [ecx],dh
  42fb72:	inc    ecx
  42fb73:	add    BYTE PTR [esi-0x76dbc24f],cl
  42fb79:	push   esi
  42fb7a:	pop    esp
  42fb7b:	pop    ebx
  42fb7c:	daa    
  42fb7d:	sti    
  42fb7e:	push   esp
  42fb7f:	mov    ecx,DWORD PTR [edx]
  42fb81:	mov    edx,0x5ec020e5
  42fb86:	cmp    BYTE PTR ds:0x412b4e,0x4d
  42fb8d:	mov    esi,0x3752ff61
  42fb92:	add    DWORD PTR [edx+0x0],ebp
  42fb95:	add    cl,bh
  42fb97:	pop    esp
  42fb98:	div    BYTE PTR [ebp+0x66]
  42fb9b:	push   ecx
  42fb9c:	add    bh,bh
  42fb9e:	jae    0x42fbab
  42fba0:	adc    eax,0x44b05e40
  42fba5:	cld    
  42fba6:	int    0xbe
  42fba8:	add    BYTE PTR [ebp+ebp*2-0x4e],dh
  42fbac:	inc    esp
  42fbad:	cld    
  42fbae:	jmp    0x1305c407
  42fbb3:	aaa    
  42fbb4:	jp     0x42fc33
  42fbb6:	xor    ch,BYTE PTR [ecx]
  42fbb8:	jne    0x42fbab
  42fbba:	mov    ebp,DWORD PTR [ecx+ebx*8+0x50]
  42fbbe:	or     DWORD PTR [ebx],ebp
  42fbc0:	mov    cl,0x14
  42fbc2:	fidiv  WORD PTR [esi]
  42fbc4:	mov    WORD PTR [ebp-0x12],es
  42fbc7:	not    BYTE PTR [di]
  42fbca:	push   esi
  42fbcb:	sbb    al,0x41
  42fbcd:	add    BYTE PTR [edi+esi*1+0x4f],dh
  42fbd1:	push   esi
  42fbd2:	and    BYTE PTR [ebx-0x4ac11fbc],dh
  42fbd8:	into   
  42fbd9:	test   DWORD PTR [esi+0x4febce4a],ecx
  42fbdf:	mov    ch,0x6d
  42fbe1:	and    al,0xd2
  42fbe3:	mov    bl,0x14
  42fbe5:	and    al,0xbc
  42fbe7:	jbe    0x42fbe2
  42fbe9:	(bad)  
  42fbea:	repz out dx,al
  42fbec:	or     eax,DWORD PTR [eax+0x37]
  42fbef:	dec    ebp
  42fbf0:	xor    BYTE PTR [ebx+0x53],0x59
  42fbf4:	jmp    0x42fbf5
  42fbf6:	sbb    BYTE PTR [ebp-0x3],cl
  42fbf9:	sldt   WORD PTR [eax]
  42fbfc:	aaa    
  42fbfd:	ret    0xc411
  42fc00:	es or  eax,0x48778505
  42fc06:	or     al,0x50
  42fc08:	cmp    BYTE PTR [edi],0x45
  42fc0b:	or     eax,0xad4cf7
  42fc10:	pop    esp
  42fc11:	dec    esi
  42fc12:	xor    eax,eax
  42fc14:	jne    0x42fc6e
  42fc16:	std    
  42fc17:	push   esp
  42fc18:	lods   al,BYTE PTR ds:[esi]
  42fc19:	call   0xd0444aeb
  42fc1e:	leave  
  42fc1f:	sti    
  42fc20:	out    0x76,al
  42fc22:	(bad)  
  42fc23:	gs aaa 
  42fc25:	adc    dh,dl
  42fc27:	pop    es
  42fc28:	scas   al,BYTE PTR es:[edi]
  42fc29:	(bad)  
  42fc2a:	jns    0x42fc7b
  42fc2c:	cmp    BYTE PTR [edi-0x2f],al
  42fc2f:	emms   
  42fc31:	dec    ebx
  42fc32:	cmp    BYTE PTR [edi+0x448c45a2],0x47
  42fc39:	dec    esi
  42fc3a:	cmp    eax,0xc1d0804f
  42fc3f:	pop    es
  42fc40:	addr16 dec edx
  42fc42:	repnz or edi,DWORD PTR [edx-0x14188638]
  42fc49:	dec    ebx
  42fc4a:	std    
  42fc4b:	jmp    FWORD PTR [ebx+esi*2-0x694a0194]
  42fc52:	cmp    BYTE PTR [esi-0x14],0x72
  42fc56:	icebp  
  42fc57:	imul   ebp,ecx,0xffffff8e
  42fc5a:	(bad)  
  42fc5b:	je     0x42fcad
  42fc5d:	into   
  42fc5e:	cli    
  42fc5f:	pop    es
  42fc60:	add    BYTE PTR [eax],al
  42fc62:	inc    DWORD PTR ss:[esi]
  42fc65:	jg     0x42fcb1
  42fc67:	push   ebx
  42fc68:	add    esi,DWORD PTR [ebp+0x5c]
  42fc6b:	xor    al,0x6d
  42fc6d:	pop    esp
  42fc6e:	inc    ebx
  42fc6f:	cmp    edi,edx
  42fc71:	inc    ebx
  42fc72:	push   ss
  42fc73:	stos   DWORD PTR es:[edi],eax
  42fc74:	jmp    0x618e:0x7e62fc6c
  42fc7b:	inc    ecx
  42fc7c:	or     DWORD PTR [ebp-0x91806a4],eax
  42fc82:	xchg   ecx,eax
  42fc83:	out    dx,al
  42fc84:	jle    0x42fc97
  42fc86:	idiv   edx
  42fc88:	and    al,0x14
  42fc8a:	add    eax,0x164b16fd
  42fc8f:	stos   DWORD PTR es:[edi],eax
  42fc90:	jmp    0x42fc5a
  42fc92:	mov    ecx,0x6a7b665c
  42fc97:	(bad)  
  42fc98:	std    
  42fc99:	test   bl,ah
  42fc9b:	sub    esp,esi
  42fc9d:	not    BYTE PTR [ecx+ebp*8]
  42fca0:	dec    edi
  42fca1:	mov    bh,0x3a
  42fca3:	inc    edx
  42fca4:	xor    cl,BYTE PTR [eax+ebx*2+0x2df731b7]
  42fcab:	inc    ecx
  42fcac:	pushf  
  42fcad:	adc    esp,esp
  42fcaf:	jmp    0x26d212ce
  42fcb4:	test   al,0x3
  42fcb6:	mov    dl,0x73
  42fcb8:	xchg   esp,eax
  42fcb9:	add    al,0xa0
  42fcbb:	ins    DWORD PTR es:[edi],dx
  42fcbc:	add    bl,cl
  42fcbe:	adc    BYTE PTR [edi-0x3e],ah
  42fcc1:	or     DWORD PTR ds:0x6c26ad,0x1fb60900
  42fccb:	sbb    BYTE PTR [esi-0x23],0xb0
  42fccf:	inc    edx
  42fcd0:	sub    al,0x34
  42fcd2:	xor    eax,0x38e2dc8b
  42fcd7:	adc    DWORD PTR [ebx+0x40],0xffffffe7
  42fcdb:	nop
  42fcdc:	jae    0x42fd1a
  42fcde:	sbb    dl,ch
  42fce0:	aaa    
  42fce1:	into   
  42fce2:	out    0x7e,eax
  42fce4:	dec    ebx
  42fce5:	sub    al,0x1
  42fce7:	pusha  
  42fce8:	dec    BYTE PTR [eax+0x50]
  42fceb:	scas   al,BYTE PTR es:[edi]
  42fcec:	push   ds
  42fced:	call   0xb7762602
  42fcf2:	rcl    BYTE PTR [edx+edx*2],0xe6
  42fcf6:	in     ax,dx
  42fcf8:	(bad)  
  42fcf9:	idiv   esp
  42fcfb:	cmp    esi,eax
  42fcfd:	test   DWORD PTR [eax],0xcc81819
  42fd03:	ins    BYTE PTR es:[edi],dx
  42fd04:	mov    cs,WORD PTR [eax-0x18]
  42fd07:	shl    BYTE PTR [esp+esi*1],cl
  42fd0a:	add    DWORD PTR [edi],ecx
  42fd0c:	or     al,0x42
  42fd0e:	jle    0x42fd41
  42fd10:	clc    
  42fd11:	sar    eax,0xe5
  42fd14:	outs   dx,DWORD PTR ds:[esi]
  42fd15:	aaa    
  42fd16:	cmp    BYTE PTR [esp+edi*1+0x4e6a04c8],ch
  42fd1d:	cmp    al,0x0
  42fd1f:	jb     0x42fd8f
  42fd21:	cmp    al,0xc7
  42fd23:	sub    eax,DWORD PTR [ebx+0x34]
  42fd26:	push   esp
  42fd27:	(bad)  
  42fd28:	(bad)  
  42fd29:	in     eax,0x8b
  42fd2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd2c:	add    BYTE PTR [eax],al
  42fd2e:	sub    ah,ah
  42fd30:	stc    
  42fd31:	pushf  
  42fd32:	and    al,0xc1
  42fd34:	leave  
  42fd35:	push   ds
  42fd36:	mov    al,0xc8
  42fd38:	or     al,0x83
  42fd3a:	xor    al,0x3b
  42fd3c:	jae    0x42fd1f
  42fd3e:	mov    eax,ds:0x18dcfa05
  42fd43:	xor    BYTE PTR [ecx-0x17],al
  42fd46:	xchg   ecx,eax
  42fd47:	add    eax,0xf8382984
  42fd4c:	jnp    0x42fd23
  42fd4e:	sub    DWORD PTR [eax],0x3ff4f95d
  42fd54:	xchg   BYTE PTR [esi-0x6411eef],ah
  42fd5a:	xor    al,0xe9
  42fd5c:	test   DWORD PTR [ebp+0x2def0b],edi
  42fd62:	xchg   ebp,eax
  42fd63:	bound  ecx,QWORD PTR [ebp+ecx*2+0x6a4a6892]
  42fd6a:	fsub   QWORD PTR [edx+0x4a]
  42fd6d:	push   ebx
  42fd6e:	xchg   ecx,eax
  42fd6f:	cmp    al,0x1
  42fd71:	mov    eax,0x800133cf
  42fd76:	outs   dx,BYTE PTR ds:[esi]
  42fd77:	mov    cl,0x44
  42fd79:	cld    
  42fd7a:	rcr    DWORD PTR [ecx+edi*2],0x10
  42fd7e:	dec    esi
  42fd7f:	cmp    BYTE PTR [eax+eax*8+0x75f60c9b],al
  42fd86:	xchg   esi,eax
  42fd87:	mov    esi,0x3c011474
  42fd8c:	or     DWORD PTR [ebx+0x11],edx
  42fd8f:	cmp    al,0x5
  42fd91:	inc    DWORD PTR [eax]
  42fd93:	add    BYTE PTR [ebx-0x41],bl
  42fd96:	not    BYTE PTR ds:0x4122de
  42fd9c:	fcomi  st,st(2)
  42fd9e:	je     0x42fda2
  42fda0:	mov    ebp,0xf275f638
  42fda5:	mov    ebp,0x736e5c14
  42fdaa:	stc    
  42fdab:	mov    DWORD PTR ds:0x6ac2c85a,ebx
  42fdb1:	xor    edx,DWORD PTR [ebx+ecx*4+0x22]
  42fdb5:	mov    dl,0xe5
  42fdb7:	or     al,0x9d
  42fdb9:	fs icebp 
  42fdbb:	(bad)  
  42fdbc:	in     eax,dx
  42fdbd:	push   0x22b23582
  42fdc2:	inc    ecx
  42fdc3:	add    BYTE PTR [ebx-0x32af0a94],ah
  42fdc9:	(bad)  [edx-0x1]
  42fdcc:	mov    ebp,DWORD PTR [edi]
  42fdce:	mov    BYTE PTR [ebp+0x12],bl
  42fdd1:	div    BYTE PTR gs:[ebp+0x6]
  42fdd5:	shr    BYTE PTR [esi],0xff
  42fdd8:	test   al,0xb6
  42fdda:	mov    ecx,0x88123775
  42fddf:	inc    esp
  42fde0:	jecxz  0x42fe03
  42fde2:	inc    eax
  42fde3:	je     0x42fe17
  42fde5:	(bad)  
  42fde6:	fincstp 
  42fde8:	fdivr  QWORD PTR ds:0x4233bf80
  42fdee:	inc    eax
  42fdef:	jae    0x42fdf0
  42fdf1:	je     0x42fdef
  42fdf3:	and    DWORD PTR [ecx+0x448595],edi
  42fdf9:	add    BYTE PTR [ebx+0x5b734051],ch
  42fdff:	fmul   st,st(1)
  42fe01:	sti    
  42fe02:	push   es
  42fe03:	std    
  42fe04:	jnp    0x42fe7a
  42fe06:	sub    ebx,DWORD PTR [edx]
  42fe08:	jl     0x42fe7e
  42fe0a:	aas    
  42fe0b:	mov    esi,0xcf61fb33
  42fe10:	inc    esp
  42fe11:	je     0x42fe3a
  42fe13:	rol    cl,cl
  42fe15:	shrd   DWORD PTR [edi-0x3dc0778f],eax,0xc1
  42fe1d:	sti    
  42fe1e:	mov    esi,0x2fe6758f
  42fe23:	out    dx,al
  42fe24:	icebp  
  42fe25:	repz dec edi
  42fe27:	je     0x42fe4c
  42fe29:	cli    
  42fe2a:	push   eax
  42fe2b:	std    
  42fe2c:	xor    edi,ebx
  42fe2e:	and    ch,BYTE PTR [ecx-0x2dc8bff3]
  42fe34:	shl    edi,0xd9
  42fe37:	jno    0x42fe7f
  42fe39:	mov    ebp,0x2ed04b43
  42fe3e:	idiv   DWORD PTR [ebx-0x33]
  42fe41:	dec    edi
  42fe42:	xchg   DWORD PTR [esi],ebp
  42fe44:	stc    
  42fe45:	and    edi,DWORD PTR [edi]
  42fe47:	ss xor edi,ebx
  42fe4a:	sub    bh,BYTE PTR [edi+0x4637400d]
  42fe50:	xor    eax,DWORD PTR [edi+0x155846df]
  42fe56:	fdiv   QWORD PTR [edx+eiz*8]
  42fe59:	inc    eax
  42fe5a:	in     eax,dx
  42fe5b:	daa    
  42fe5c:	cmp    al,0x14
  42fe5e:	add    BYTE PTR [eax],al
  42fe60:	ja     0x42fe96
  42fe62:	pop    esi
  42fe63:	inc    eax
  42fe64:	mov    DWORD PTR [edx-0x1d],esi
  42fe67:	add    ebp,DWORD PTR [edx-0x357f2b1c]
  42fe6d:	sub    ch,bl
  42fe6f:	test   BYTE PTR [ecx],dh
  42fe71:	xor    ebp,eax
  42fe73:	add    edi,DWORD PTR [eax+ebx*1-0xd15faab]
  42fe7a:	out    0x83,eax
  42fe7c:	scas   eax,DWORD PTR es:[edi]
  42fe7d:	or     eax,0x3bb73914
  42fe82:	mov    ebp,0xa8aa66f7
  42fe87:	xorps  xmm0,XMMWORD PTR [eax]
  42fe8a:	or     edx,esi
  42fe8c:	xor    al,0x0
  42fe8e:	(bad)  
  42fe8f:	cmc    
  42fe90:	and    eax,0x3b27f3b1
  42fe95:	xor    al,0xdb
  42fe97:	xchg   DWORD PTR [ecx+0x34],ebx
  42fe9a:	call   0x178eb5a2
  42fe9f:	test   BYTE PTR [edi+0x2b],ch
  42fea2:	jecxz  0x42fe28
  42fea4:	test   DWORD PTR [eax+ebp*8],esi
  42fea7:	add    esi,DWORD PTR [eax+0x44080bf8]
  42fead:	pop    esp
  42feae:	fiadd  WORD PTR [ebx-0x37]
  42feb1:	push   ebx
  42feb2:	out    0x80,al
  42feb4:	sub    BYTE PTR [eax],0x41
  42feb7:	inc    esp
  42feb8:	cmp    BYTE PTR ds:0xdc4fe9e7,bh
  42febe:	adc    BYTE PTR [eax+ebp*1+0x89e73d],bh
  42fec5:	add    BYTE PTR [edi],al
  42fec7:	mov    ah,0x1d
  42fec9:	and    esi,DWORD PTR [edi+0x3ff18839]
  42fecf:	mov    ah,0xfd
  42fed1:	clc    
  42fed2:	cmp    eax,0x344500b6
  42fed7:	xor    al,0x1
  42fed9:	imul   edi,DWORD PTR [ebp+0x7],0x3c9b6c0a
  42fee0:	stc    
  42fee1:	jmp    0xb42926c0
  42fee6:	mov    ebx,0xb7de293b
  42feeb:	lods   eax,DWORD PTR ds:[esi]
  42feec:	add    cl,ch
  42feee:	xor    al,0xd6
  42fef0:	adc    dl,dl
  42fef2:	jle    0x42feb1
  42fef4:	test   DWORD PTR [esi],0xe982b72c
  42fefa:	xor    al,0x34
  42fefc:	addr16 (bad) 
  42fefe:	and    DWORD PTR [ebp-0x7a],edi
  42ff01:	mov    eax,0x692076b3
  42ff06:	and    esp,edx
  42ff08:	outs   dx,BYTE PTR ds:[esi]
  42ff09:	in     al,0xb4
  42ff0b:	inc    esi
  42ff0c:	jbe    0x42ff0d
  42ff0e:	xchg   BYTE PTR [edi+esi*8-0x7ec87f47],bh
  42ff15:	jo     0x42ff59
  42ff17:	mov    edx,0xafa696c
  42ff1c:	jne    0x42feec
  42ff1e:	mov    ah,0x3b
  42ff20:	sub    edx,ebp
  42ff22:	push   edx
  42ff23:	mov    esp,0xa26706f7
  42ff28:	adc    BYTE PTR [eax+0x0],0x0
  42ff2c:	sbb    eax,ecx
  42ff2e:	pop    es
  42ff2f:	imul   edx,edx,0x5a9973f9
  42ff35:	es out 0x63,al
  42ff38:	push   ecx
  42ff39:	and    al,0xe6
  42ff3b:	scas   al,BYTE PTR es:[di]
  42ff3d:	jecxz  0x42ff0f
  42ff3f:	imul   esi,DWORD PTR [ecx-0x4b558cd4],0xa0e6293c
  42ff49:	retf   0xef9
  42ff4c:	pushf  
  42ff4d:	push   edx
  42ff4e:	loopne 0x42ff50
  42ff50:	or     DWORD PTR [esi-0xf8b7f30],eax
  42ff56:	dec    edi
  42ff57:	inc    eax
  42ff58:	push   cs
  42ff59:	cmp    BYTE PTR [esp+ebp*1-0x72],dh
  42ff5d:	mov    ecx,0x49a9751a
  42ff62:	adc    eax,0xf6bf75e9
  42ff67:	(bad)  
  42ff68:	fld    DWORD PTR [ebp-0x83b7f30]
  42ff6e:	dec    edi
  42ff6f:	inc    eax
  42ff70:	fidiv  WORD PTR [edi]
  42ff72:	jne    0x42ff7b
  42ff74:	fs sbb ebp,eax
  42ff77:	dec    eax
  42ff78:	mov    DWORD PTR [esi+0x128780f6],edi
  42ff7e:	jne    0x42ff61
  42ff80:	push   ds
  42ff81:	mov    eax,0x29d7436
  42ff86:	rol    DWORD PTR [eax-0x34],0x3b
  42ff8a:	stc    
  42ff8b:	push   cs
  42ff8c:	add    al,ah
  42ff8e:	jns    0x42ff4a
  42ff90:	add    BYTE PTR [eax],al
  42ff92:	fisub  WORD PTR [ebp+0x39]
  42ff95:	add    BYTE PTR [esi-0x53140fbc],bl
  42ff9b:	cs scas eax,DWORD PTR es:[edi]
  42ff9d:	ror    DWORD PTR [esi],1
  42ff9f:	jns    0x42ff5a
  42ffa1:	push   esi
  42ffa2:	sahf   
  42ffa3:	aaa    
  42ffa4:	add    DWORD PTR [ecx+edx*2+0x49],esi
  42ffa8:	sbb    al,0xe9
  42ffaa:	popa   
  42ffab:	mov    esi,0xb7cefff6
  42ffb0:	sbb    dh,BYTE PTR [ecx+esi*1-0x49]
  42ffb4:	clc    
  42ffb5:	aas    
  42ffb6:	sub    esi,0xffffffe2
  42ffb9:	in     eax,dx
  42ffba:	pop    ecx
  42ffbb:	test   eax,edx
  42ffbd:	add    ah,0xf6
  42ffc0:	dec    edi
  42ffc1:	inc    eax
  42ffc2:	push   ds
  42ffc3:	aaa    
  42ffc4:	je     0x42ff8a
  42ffc6:	sahf   
  42ffc7:	mov    eax,0xe237741a
  42ffcc:	push   0xffffffb4
  42ffce:	stos   BYTE PTR es:[edi],al
  42ffcf:	xchg   ebx,eax
  42ffd0:	std    
  42ffd1:	mov    eax,0xfd8efc
  42ffd6:	sti    
  42ffd7:	mov    ?,ebp
  42ffd9:	and    bl,dh
  42ffdb:	mov    ?,ebp
  42ffdd:	sub    ebx,ebp
  42ffdf:	mov    ?,ebp
  42ffe1:	add    ecx,DWORD PTR ss:[edi]
  42ffe4:	add    eax,0x50efb75
  42ffe9:	mov    bl,dh
  42ffeb:	push   cs
  42ffec:	add    eax,0x50eeba0
  42fff1:	mov    edi,0xd1050f03
  42fff6:	add    BYTE PTR [eax],al
  42fff8:	sti    
  42fff9:	push   cs
  42fffa:	add    eax,0x50ef3f0
  42ffff:	push   ebp
  430000:	lods   al,BYTE PTR ds:[esi]
  430001:	js     0x42ff86
  430003:	jecxz  0x42ffb4
  430005:	int    0x68
  430007:	das    
  430008:	mov    esp,0xf28714ff
  43000d:	push   eax
  43000e:	xor    al,0xc0
  430010:	scas   al,BYTE PTR es:[edi]
  430011:	adc    BYTE PTR [ecx],ah
  430013:	adc    al,0xbe
  430015:	or     BYTE PTR [ecx],ah
  430017:	or     al,0xbe
  430019:	adc    BYTE PTR [ecx],ah
  43001b:	sbb    BYTE PTR [esi-0x52efdef8],ch
  430021:	adc    dl,BYTE PTR [eax]
  430023:	dec    edi
  430024:	mov    edi,0xb7071988
  430029:	jo     0x430044
  43002b:	pop    es
  43002c:	loopne 0x4300a7
  43002e:	mov    WORD PTR [edi+ebp*1+0x61],?
  430032:	add    BYTE PTR [edi],ch
  430034:	ja     0x430019
  430036:	daa    
  430037:	adc    BYTE PTR [edi],dh
  430039:	dec    ebp
  43003a:	jp     0x430009
  43003c:	retf   0x8b87
  43003f:	dec    ecx
  430040:	rol    DWORD PTR ss:[ebp+0x73],1
  430044:	pusha  
  430045:	xor    al,0x68
  430047:	jnp    0x430073
  430049:	rcl    BYTE PTR [eax],0x84
  43004c:	pop    ds
  43004d:	xor    DWORD PTR [edi+ebx*2-0x1007c468],ebx
  430054:	in     eax,dx
  430055:	mov    ah,0x0
  430057:	cmp    al,0x82
  430059:	sbb    eax,0xc16f
  43005e:	sub    BYTE PTR [edi-0x52160fd9],ch
  430064:	sbb    DWORD PTR [ecx+0x0],edi
  430067:	mov    al,0xa7
  430069:	out    dx,eax
  43006a:	icebp  
  43006b:	scas   al,BYTE PTR es:[edi]
  43006c:	and    DWORD PTR [ecx],edx
  43006e:	sbb    ebp,DWORD PTR [esi-0xd50f21d]
  430074:	repnz ins BYTE PTR es:[edi],dx
  430076:	lea    edx,[eax]
  430078:	outs   dx,DWORD PTR ds:[esi]
  430079:	pop    es
  43007a:	xor    BYTE PTR [ecx+eiz*1+0x27741011],ch
  430081:	imul   edx,esi,0x29
  430084:	call   0xe935b98c
  430089:	aaa    
  43008a:	pop    esi
  43008b:	mov    edi,0xfec8ae3
  430090:	hlt    
  430091:	aaa    
  430092:	push   eax
  430093:	mov    edi,0xffc8ae3
  430098:	fdiv   QWORD PTR [edi]
  43009a:	cs rol bl,0x37
  43009e:	sub    eax,eax
  4300a0:	(bad)  
  4300a1:	aaa    
  4300a2:	and    al,al
  4300a4:	retf   
  4300a5:	aaa    
  4300a6:	inc    ebp
  4300a7:	sar    bh,0x37
  4300aa:	dec    edi
  4300ab:	shl    bl,0x37
  4300ae:	dec    ecx
  4300af:	shl    bh,0x37
  4300b2:	inc    eax
  4300b3:	rcr    bl,0x37
  4300b6:	and    al,0xc0
  4300b8:	out    dx,eax
  4300b9:	aaa    
  4300ba:	sub    eax,eax
  4300bc:	jecxz  0x4300f5
  4300be:	and    bh,BYTE PTR [edi+0xed00]
  4300c4:	lods   eax,DWORD PTR ds:[esi]
  4300c5:	in     eax,dx
  4300c6:	and    al,0x9
  4300c8:	mov    eax,0xf0701034
  4300cd:	adc    al,0x11
  4300cf:	jo     0x4300b1
  4300d1:	adc    al,0x25
  4300d3:	shr    BYTE PTR [esi+ebp*1-0x7b],cl
  4300d7:	dec    esp
  4300d8:	ds xor al,0x1
  4300db:	imul   ecx,DWORD PTR [esi],0xc0722e34
  4300e1:	adc    al,0x11
  4300e3:	arpl   WORD PTR [eax*8+0x34f7ee10],bx
  4300ea:	and    BYTE PTR [edi+0x37],0x34
  4300ee:	inc    ecx
  4300ef:	call   0x69c52e28
  4300f4:	xor    BYTE PTR [ecx+eax*1],dh
  4300f7:	sbb    ah,BYTE PTR [ebp+0x2e]
  4300fa:	mov    bl,0x2f
  4300fc:	xor    ch,ah
  4300fe:	jge    0x4300c1
  430100:	add    ebp,DWORD PTR ds:0x3424e682
  430106:	add    DWORD PTR [esi-0x38a550a9],ebp
  43010c:	jne    0x430146
  43010e:	jns    0x4300b2
  430110:	cs sub eax,0x34310685
  430116:	add    DWORD PTR [ecx+0xc],ebp
  430119:	das    
  43011a:	or     ch,BYTE PTR [ebp+0x69]
  43011d:	sub    al,BYTE PTR [ecx]
  43011f:	jmp    0x6a4113d8
  430124:	jno    0x430156
  430126:	cli    
  430127:	push   0x0
  430129:	add    BYTE PTR [ecx+0x2c],bh
  43012c:	cli    
  43012d:	jae    0x430198
  43012f:	mov    eax,0xb039b1f5
  430134:	mov    dh,0xe8
  430136:	xor    al,0x34
  430138:	and    eax,0xc332c34d
  43013d:	add    BYTE PTR [eax-0x4814efd1],bl
  430143:	scas   eax,DWORD PTR es:[edi]
  430144:	repnz or eax,0x77fb851
  43014a:	push   ds
  43014b:	xor    al,0x81
  43014d:	sti    
  43014e:	and    al,0x2f
  430150:	test   BYTE PTR [esi-0x39fecbe7],al
  430156:	enter  0x2b30,0xeb
  43015a:	jg     0x43010c
  43015c:	repnz or eax,0xa78b801
  430162:	push   cs
  430163:	xor    al,0x81
  430165:	sti    
  430166:	adc    al,0x2f
  430168:	test   BYTE PTR [ecx-0x2c],bh
  43016b:	xor    eax,DWORD PTR [ecx]
  43016d:	(bad)  
  43016e:	sbb    BYTE PTR [ecx],dh
  430170:	sub    al,0x39
  430172:	sub    dl,BYTE PTR [edx*1+0x3eaa4b74]
  430179:	or     al,0x25
  43017b:	repnz ins DWORD PTR es:[edi],dx
  43017d:	cs inc ebp
  43017f:	outs   dx,DWORD PTR ds:[esi]
  430180:	sbb    eax,0x1d6c2510
  430185:	adc    al,0x55
  430187:	addr16 sbb eax,0xc7ab4f14
  43018d:	inc    DWORD PTR [eax]
  43018f:	add    dh,ch
  430191:	mov    ah,0xb9
  430193:	je     0x430139
  430195:	lods   eax,DWORD PTR ds:[esi]
  430196:	aas    
  430197:	pop    ss
  430198:	push   0xffffffb6
  43019a:	add    eax,0xe791607
  43019f:	mov    bl,BYTE PTR [eax+0x27]
  4301a2:	and    eax,0x1d77067f
  4301a7:	setno  BYTE PTR [esp+eax*4+0x7a335e00]
  4301af:	cmp    ah,BYTE PTR fs:[ecx+eax*1]
  4301b3:	jmp    0x39c052
  4301b8:	aaa    
  4301b9:	int    0x76
  4301bb:	pop    ds
  4301bc:	inc    eax
  4301bd:	shl    esp,1
  4301bf:	push   es
  4301c0:	aaa    
  4301c1:	dec    ebp
  4301c2:	jge    0x4301ba
  4301c4:	cs inc esi
  4301c6:	jns    0x43022f
  4301c8:	sub    al,0x4d
  4301ca:	std    
  4301cb:	sar    DWORD PTR [ecx+0x4c],0x25
  4301cf:	jmp    0xfab61030
  4301d4:	mov    bh,0x11
  4301d6:	or     BYTE PTR [ebx],cl
  4301d8:	mov    dl,0x5f
  4301da:	(bad)  
  4301db:	push   DWORD PTR [edi]
  4301dd:	sar    ebx,cl
  4301df:	mov    edi,0x7a54b1f
  4301e4:	xor    al,dl
  4301e6:	iret   
  4301e7:	push   es
  4301e8:	aaa    
  4301e9:	dec    ebp
  4301ea:	cmp    eax,DWORD PTR [ecx+0x36]
  4301ed:	jp     0x430194
  4301ef:	punpckldq mm0,DWORD PTR [ebx+0x7d]
  4301f3:	jns    0x4301f5
  4301f5:	add    BYTE PTR [ecx+0x50],cl
  4301f8:	jmp    0x67d02600
  4301fd:	inc    BYTE PTR ds:0xd7bfc48d
  430203:	inc    ebp
  430204:	pop    es
  430205:	inc    esp
  430206:	sbb    eax,DWORD PTR [esi-0x7b]
  430209:	inc    ecx
  43020a:	and    dl,dl
  43020c:	mov    ebx,0xf08b6c0f
  430211:	adc    al,0xbc
  430213:	jle    0x430288
  430215:	iret   
  430216:	mov    ah,0xa4
  430218:	add    al,0x74
  43021a:	sub    eax,0xb3850415
  43021f:	push   esi
  430220:	std    
  430221:	push   DWORD PTR [edi+0x652e7d3e]
  430227:	ret    0x12ba
  43022a:	push   ebx
  43022b:	test   DWORD PTR ds:[ebx+0x1b],eax
  43022f:	push   esi
  430230:	add    al,0x84
  430232:	jl     0x430267
  430234:	bound  esi,QWORD PTR [ebp+0x5d]
  430237:	stos   BYTE PTR es:[edi],al
  430238:	mov    ds:0xad0b471f,eax
  43023d:	pop    es
  43023e:	pop    esi
  43023f:	add    dl,bl
  430241:	add    esi,DWORD PTR [edi]
  430243:	stos   DWORD PTR es:[edi],eax
  430244:	lods   al,BYTE PTR ds:[esi]
  430245:	pop    es
  430246:	sbb    al,dh
  430248:	add    edx,DWORD PTR [eax+esi*4]
  43024b:	in     eax,0xe3
  43024d:	add    BYTE PTR [edx+0x24],bh
  430250:	push   ecx
  430251:	mov    DWORD PTR [edx],esp
  430253:	lods   al,BYTE PTR ds:[esi]
  430254:	stos   DWORD PTR es:[edi],eax
  430255:	pop    ds
  430256:	dec    edi
  430257:	test   eax,0xba1
  43025c:	pusha  
  43025d:	gs xchg edx,eax
  43025f:	adc    edx,DWORD PTR [ebx+0x54bfcf2e]
  430265:	or     al,0x77
  430267:	or     edi,DWORD PTR [eax+0x54c87064]
  43026d:	add    bh,bh
  43026f:	or     edi,DWORD PTR [eax-0x41d43c20]
  430275:	mov    eax,0xb860300b
  43027a:	add    ebx,DWORD PTR [edi+esi*1]
  43027d:	mov    edi,0x104c88df
  430282:	clc    
  430283:	mov    cl,BYTE PTR [eax+edx*1-0x20]
  430287:	mov    BYTE PTR [ebx+0x2c],al
  43028a:	cmovb  esp,DWORD PTR [ecx]
  43028d:	call   0xef01329d
  430292:	fisttp WORD PTR [eax-0x7907f00c]
  430298:	hlt    
  430299:	and    ebx,DWORD PTR [ebx-0x7f00b76]
  43029f:	mov    dh,dh
  4302a1:	sub    ebx,edi
  4302a3:	inc    edx
  4302a4:	mov    edi,0xba04f3e6
  4302a9:	push   eax
  4302aa:	jmp    0x4302af
  4302ac:	aaa    
  4302ad:	outs   dx,BYTE PTR ds:[esi]
  4302ae:	add    BYTE PTR [edi],ch
  4302b0:	xor    al,0xfb
  4302b2:	aaa    
  4302b3:	and    eax,0x6d0a1c17
  4302b8:	mov    ds:0xaf5ef93b,eax
  4302bd:	repnz adc al,0x6c
  4302c0:	add    BYTE PTR [eax],al
  4302c2:	hlt    
  4302c3:	shr    BYTE PTR [ecx],0x62
  4302c6:	jo     0x4302d9
  4302c8:	adc    DWORD PTR [edx],edx
  4302ca:	outs   dx,DWORD PTR ds:[esi]
  4302cb:	adc    DWORD PTR [ecx],ebx
  4302cd:	jb     0x430337
  4302cf:	adc    DWORD PTR [ecx],ebx
  4302d1:	test   al,0x5
  4302d3:	scas   al,BYTE PTR es:[edi]
  4302d4:	retf   0x842e
  4302d7:	mov    al,0xc0
  4302d9:	popf   
  4302da:	cs scas al,BYTE PTR es:[edi]
  4302dc:	inc    edx
  4302dd:	idiv   BYTE PTR [eax]
  4302df:	stos   DWORD PTR es:[edi],eax
  4302e0:	or     al,0xe0
  4302e2:	mov    esp,0xca6311f2
  4302e7:	and    DWORD PTR ds:0x24f0ac86,esp
  4302ed:	out    dx,al
  4302ee:	xor    ebp,DWORD PTR [edi+0x3a64f648]
  4302f4:	jge    0x43027b
  4302f6:	dec    eax
  4302f7:	sbb    al,0x1
  4302f9:	shr    BYTE PTR [edx+edi*1],1
  4302fc:	stc    
  4302fd:	fisubr WORD PTR [ebp-0xd]
  430300:	(bad)  
  430301:	jmp    0xab793557
  430306:	xor    al,0xb0
  430308:	mov    ch,dh
  43030a:	xor    al,0x34
  43030c:	xchg   BYTE PTR [edi-0x567c9abc],ch
  430312:	scas   eax,DWORD PTR es:[edi]
  430313:	xchg   DWORD PTR cs:[edi],esp
  430316:	dec    esp
  430317:	adc    BYTE PTR [eax+0x42ac3bf5],al
  43031d:	neg    BYTE PTR [edx]
  43031f:	repz adc ebp,ecx
  430322:	test   DWORD PTR [esp+eax*2+0x350000c5],ebp
  430329:	sub    DWORD PTR [ebp+0x1343100],eax
  43032f:	add    BYTE PTR ds:0x75101d6c,al
  430335:	imul   eax,DWORD PTR ds:0xc6cb740,0x0
  43033c:	dec    esi
  43033d:	mov    al,0xf2
  43033f:	push   esp
  430340:	xor    DWORD PTR [esi],0xffffff83
  430343:	push   es
  430344:	inc    edx
  430345:	ret    
  430346:	add    eax,0xe229d601
  43034b:	dec    ebp
  43034c:	into   
  43034d:	les    eax,FWORD PTR [edi+ecx*1-0x2d]
  430351:	je     0x43035f
  430353:	add    BYTE PTR [esi],bl
  430355:	mov    eax,0xfe50fc22
  43035a:	adc    al,BYTE PTR [edx]
  43035c:	push   eax
  43035d:	(bad)  
  43035e:	test   DWORD PTR [ecx],0x1201fe50
  430364:	aaa    
  430365:	push   esi
  430366:	add    eax,0x22b81e00
  43036b:	add    ecx,DWORD PTR [ebp-0x7200ff0a]
  430371:	test   BYTE PTR [edi+edi*8],0x5e
  430375:	mov    ds:0xb88a73fe,eax
  43037a:	out    dx,eax
  43037b:	or     eax,0xfb78bf82
  430380:	es aaa 
  430382:	jle    0x43039d
  430384:	(bad)  [edi]
  430386:	add    esi,eax
  430388:	adc    BYTE PTR [ecx],bh
  43038a:	(bad)  
  43038b:	call   0xa7460390
  430390:	sti    
  430391:	dec    DWORD PTR [esi-0x5e]
  430394:	push   esp
  430395:	mov    db6,ebx
  430398:	add    DWORD PTR [eax],eax
  43039a:	sahf   
  43039b:	jge    0x4303df
  43039d:	add    DWORD PTR [eax-0x71f41270],edx
  4303a3:	aaa    
  4303a4:	cmp    ebx,0x85047137
  4303aa:	or     eax,0x7900051c
  4303af:	arpl   si,di
  4303b1:	add    cl,BYTE PTR [esi+0x70fff7be]
  4303b7:	popf   
  4303b8:	addr16 dec edi
  4303ba:	cmp    BYTE PTR [eax+0x1d3700dc],bl
  4303c0:	dec    ebx
  4303c1:	inc    ecx
  4303c2:	ss and eax,0x1d3cd056
  4303c8:	add    eax,0x4324c80
  4303cd:	test   ecx,ebp
  4303cf:	sbb    eax,DWORD PTR ds:0xfddb7100
  4303d5:	or     BYTE PTR [esi],bl
  4303d7:	stos   BYTE PTR es:[edi],al
  4303d8:	idiv   edi
  4303da:	sub    BYTE PTR [eax+0x2463cfbf],dl
  4303e0:	cld    
  4303e1:	dec    ebp
  4303e2:	xchg   ecx,eax
  4303e3:	and    dh,BYTE PTR [ebx+0x5c9e99be]
  4303e9:	das    
  4303ea:	xchg   ecx,eax
  4303eb:	xchg   esp,eax
  4303ec:	retf   0xf90f
  4303ef:	loop   0x4303ee
  4303f1:	add    eax,0x7e0e0000
  4303f6:	idiv   edi
  4303f8:	lock pushf 
  4303fa:	sub    DWORD PTR [bp+si+0x14],esp
  4303fe:	dec    ebx
  4303ff:	inc    ecx
  430400:	ss es pop esp
  430403:	xchg   esp,eax
  430404:	sub    al,0x1d
  430406:	add    eax,0xf14ccc80
  43040b:	and    eax,0x7b2d05b7
  430410:	sbb    al,BYTE PTR [ebx+0x7b274176]
  430416:	(bad)  
  430417:	mov    edi,0xba02833d
  43041c:	jl     0x430498
  43041e:	inc    al
  430420:	sbb    DWORD PTR [ebx+ebp*2],esi
  430423:	pop    esp
  430424:	dec    eax
  430425:	call   0x587:0xed40ca71
  43042c:	aaa    
  43042d:	xor    al,0x0
  43042f:	sub    eax,0xea684276
  430434:	xor    DWORD PTR [edx+ebp*8],esi
  430437:	jge    0x43042f
  430439:	dec    edx
  43043a:	mov    BYTE PTR [ecx+0x7381423c],0x2c
  430441:	xor    al,0xea
  430443:	jle    0x43045e
  430445:	add    al,0x17
  430447:	sti    
  430448:	lds    esp,FWORD PTR [eax]
  43044a:	leave  
  43044b:	add    BYTE PTR [ebp+0x5884c0f6],cl
  430451:	arpl   ax,cx
  430453:	jp     0x43044b
  430455:	inc    ebp
  430456:	and    dl,cl
  430458:	add    BYTE PTR [eax],al
  43045a:	aaa    
  43045b:	inc    eax
  43045c:	inc    ecx
  43045d:	xor    dh,BYTE PTR [eax]
  43045f:	xor    al,0xea
  430461:	sub    DWORD PTR [ecx],0x55
  430464:	xchg   ebp,eax
  430465:	cli    
  430466:	idiv   BYTE PTR [edx-0x17]
  430469:	(bad)  
  43046a:	pop    ds
  43046b:	gs jecxz 0x430471
  43046e:	aaa    
  43046f:	mov    ah,0x13
  430471:	xor    al,0x83
  430473:	imul   DWORD PTR [edx+0x6d]
  430476:	aas    
  430477:	mov    cl,0x2a
  430479:	jmp    0xf451:0xe9dc7ab9
  430480:	in     al,0xe9
  430482:	sub    eax,0xd9e9b3f2
  430487:	hlt    
  430488:	inc    eax
  430489:	test   eax,ebx
  43048b:	fs dec eax
  43048d:	jnp    0x430505
  43048f:	inc    esi
  430490:	ret    
  430491:	mov    dh,BYTE PTR [ebx+0x2e2f9a75]
  430497:	test   eax,0xf23de9cd
  43049c:	add    DWORD PTR [edx-0x6164d62],ebp
  4304a2:	mov    ?,WORD PTR [edi+edi*1+0x272eefd]
  4304a9:	out    dx,eax
  4304aa:	in     eax,dx
  4304ab:	and    ecx,DWORD PTR [ecx+ebp*8]
  4304ae:	xor    al,0xb4
  4304b0:	cld    
  4304b1:	leave  
  4304b2:	aaa    
  4304b3:	mov    eax,0x3434f3e9
  4304b8:	mov    esp,DWORD PTR [edi]
  4304ba:	dec    esi
  4304bb:	pop    eax
  4304bc:	mov    ch,ah
  4304be:	add    BYTE PTR [eax],al
  4304c0:	aaa    
  4304c1:	sbb    esi,DWORD PTR [ebp-0x23]
  4304c4:	xor    al,0x34
  4304c6:	xchg   BYTE PTR [edx-0x29f592fc],ch
  4304cc:	push   ds
  4304cd:	xchg   esi,eax
  4304ce:	mov    WORD PTR [edi+0x296c9620],gs
  4304d4:	inc    edx
  4304d5:	xchg   ebx,eax
  4304d6:	or     BYTE PTR [edi+0x280492fb],al
  4304dc:	push   ds
  4304dd:	mov    dl,0xe9
  4304df:	stc    
  4304e0:	fst    QWORD PTR ds:0x9634e905
  4304e6:	mov    ch,BYTE PTR [edi+0x283c9640]
  4304ec:	paddw  mm5,mm2
  4304ef:	inc    esi
  4304f0:	or     dh,BYTE PTR [ecx]
  4304f2:	stc    
  4304f3:	imul   edx,DWORD PTR [ebx-0x4b2c92c9],0x4b750729
  4304fd:	mov    ah,0xfc
  4304ff:	leave  
  430500:	loope  0x4304ea
  430502:	mov    edi,0xea3d35a7
  430507:	jle    0x4304e6
  430509:	xor    cl,bh
  43050b:	imul   ebx,DWORD PTR [eax+eax*2+0x6e],0x27372e0
  430513:	stc    
  430514:	arpl   WORD PTR [ebx+ecx*1-0x7ecb3200],di
  43051b:	sti    
  43051c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43051d:	xor    DWORD PTR [esi-0x80],edi
  430520:	xchg   esp,eax
  430521:	xor    al,0x1
  430523:	mov    BYTE PTR [eax],0x0
  430526:	pop    eax
  430527:	aaa    
  430528:	sub    ecx,ebp
  43052a:	cmp    DWORD PTR [esi],ebp
  43052c:	stc    
  43052d:	call   FWORD PTR [esi]
  43052f:	popf   
  430530:	(bad)  
  430531:	jae    0x4304df
  430533:	lods   eax,DWORD PTR ds:[esi]
  430534:	inc    edx
  430535:	pop    ss
  430536:	jp     0x4304fb
  430538:	or     al,0x1d
  43053a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43053b:	mov    ds:0xb45effff,al
  430540:	out    dx,eax
  430541:	or     eax,0xa55b851
  430546:	dec    esi
  430547:	xor    al,0x81
  430549:	sti    
  43054a:	xor    DWORD PTR fs:[ebp+0x1344454],eax
  430551:	cmp    BYTE PTR [eax],0x35
  430554:	js     0x4305a4
  430556:	push   esi
  430557:	mov    eax,ds:0xa1424e77
  43055c:	jle    0x430521
  43055e:	and    dl,BYTE PTR [ebp+esi*1+0x61]
  430562:	adc    DWORD PTR [esi+0x340e0b46],esi
  430568:	xor    eax,0x3eb7217a
  43056d:	or     ebx,DWORD PTR [esi]
  43056f:	xor    al,0xc
  430571:	mov    esi,0x1642765d
  430576:	push   cs
  430577:	jp     0x4305bb
  430579:	add    ecx,DWORD PTR [edi]
  43057b:	mov    bl,0xf0
  43057d:	dec    esi
  43057e:	jno    0x43056b
  430580:	je     0x4305c2
  430582:	pop    ebp
  430583:	nop
  430584:	aaa    
  430585:	je     0x430532
  430587:	jmp    0x4305fd
  430589:	sub    al,0x0
  43058b:	add    BYTE PTR [ebp-0x75],cl
  43058e:	div    DWORD PTR [ebx+0x3f]
  430591:	lock je 0x4305ac
  430594:	aaa    
  430595:	call   0xabd:0x104b035c
  43059c:	mov    dl,0x19
  43059e:	cld    
  43059f:	push   DWORD PTR [eax+0x3d11bed7]
  4305a5:	repnz mov ecx,0xe6f606f9
  4305ac:	(bad)  
  4305ad:	fidivr WORD PTR [esi-0x2c3dcaef]
  4305b3:	shl    ecx,0x2e
  4305b6:	(bad)  
  4305b7:	out    0xf2,al
  4305b9:	(bad)  
  4305ba:	mov    esi,0xbfc23711
  4305bf:	sar    ecx,0x6
  4305c2:	or     ah,bh
  4305c4:	neg    dh
  4305c6:	mov    esi,0x2bb24b11
  4305cb:	jg     0x43061c
  4305cd:	out    0xf0,al
  4305cf:	sub    eax,0x481608ff
  4305d4:	call   DWORD PTR [eax]
  4305d6:	or     BYTE PTR [eax-0x35],cl
  4305d9:	es mov ebp,0xf7e52a73
  4305df:	test   BYTE PTR [esi],cl
  4305e1:	and    eax,DWORD PTR ds:0xedef100
  4305e7:	or     cl,BYTE PTR [ecx+eax*1]
  4305ea:	aas    
  4305eb:	inc    ecx
  4305ec:	inc    ecx
  4305ed:	push   ds
  4305ee:	pop    esp
  4305ef:	adc    DWORD PTR [eax],eax
  4305f1:	add    cl,bh
  4305f3:	(bad)  
  4305f4:	push   cs
  4305f5:	adc    eax,0x413f2d1c
  4305fa:	sub    DWORD PTR [esi],ecx
  4305fc:	pop    esp
  4305fd:	add    eax,0xff0edef1
  430602:	fstp   QWORD PTR [eax]
  430604:	aas    
  430605:	inc    ecx
  430606:	inc    ecx
  430607:	pop    ds
  430608:	aas    
  430609:	inc    ecx
  43060a:	or     edx,DWORD PTR ss:[esi+0x2]
  43060e:	fidiv  DWORD PTR [ebx]
  430610:	fild   QWORD PTR [ebp-0x4c]
  430613:	or     ch,al
  430615:	xchg   DWORD PTR [esi-0x46fc15c7],edx
  43061b:	test   eax,esi
  43061d:	cld    
  43061e:	xchg   cl,dh
  430620:	jae    0x43062a
  430622:	mov    edx,0xa8c17ba3
  430627:	scas   al,BYTE PTR es:[edi]
  430628:	mov    bl,0x24
  43062a:	sub    cl,BYTE PTR [ecx+0x64]
  43062d:	mov    esi,0x6b583d99
  430632:	adc    BYTE PTR [eax-0x21],dh
  430635:	add    eax,DWORD PTR [edx]
  430637:	cmp    eax,0x4337c6a8
  43063c:	sub    DWORD PTR [eax+edi*2+0x2e],0x32fe79eb
  430644:	out    0xb5,eax
  430646:	outs   dx,DWORD PTR ds:[esi]
  430647:	imul   ecx,esi,0x81b82c04
  43064d:	add    al,0x37
  43064f:	xor    al,0x6a
  430651:	push   0x3b
  430653:	test   eax,0x8408
  430658:	dec    edi
  430659:	xor    al,0xd5
  43065b:	std    
  43065c:	shr    BYTE PTR [edx],0xa3
  43065f:	imul   BYTE PTR [edi]
  430661:	imul   BYTE PTR [eax+0x1a1b4615]
  430667:	add    al,0x37
  430669:	xor    al,0x6a
  43066b:	imul   esp,DWORD PTR [edx],0x3f
  43066e:	pop    ebp
  43066f:	pop    eax
  430670:	xor    dh,BYTE PTR [edx+ebp*8]
  430673:	or     DWORD PTR [ecx],0xffffff85
  430676:	out    0x86,eax
  430678:	icebp  
  430679:	cmp    ch,dl
  43067b:	add    esi,ebp
  43067d:	jbe    0x43066f
  43067f:	sti    
  430680:	movntq (bad),mm5
  430681:	out    0xea,eax
  430683:	add    esi,DWORD PTR [edi]
  430685:	mov    ah,0x4
  430687:	cli    
  430688:	arpl   WORD PTR [esi+0x1],di
  43068b:	imul   ecx,DWORD PTR [esp+esi*1+0x6e],0x4926b4b8
  430693:	pop    esp
  430694:	int3   
  430695:	repz aas 
  430697:	test   edi,0x34e9981c
  43069d:	xor    al,0x81
  43069f:	shl    BYTE PTR ds:0x1f6917a7,1
  4306a5:	js     0x430715
  4306a7:	lock bnd jb 0x4306ba
  4306ab:	(bad)  
  4306ad:	mov    ch,0x1
  4306af:	jmp    0xe93dbae8
  4306b4:	mov    DWORD PTR [esi],esi
  4306b6:	and    DWORD PTR [edx-0x510058d7],0x437a0000
  4306c0:	adc    al,0x82
  4306c2:	(bad)  
  4306c3:	lods   eax,DWORD PTR ds:[esi]
  4306c4:	cli    
  4306c5:	jmp    0x43073a
  4306c7:	mov    eax,0x3434f377
  4306cc:	xor    DWORD PTR [edx+0x75],0x5ef47e3a
  4306d3:	sub    eax,0x437a2ff9
  4306d8:	adc    DWORD PTR [edx+0x57],edx
  4306db:	lods   eax,DWORD PTR ds:[esi]
  4306dc:	cli    
  4306dd:	call   0x53c45e2b
  4306e2:	aaa    
  4306e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4306e4:	push   ds
  4306e5:	imul   ebx,DWORD PTR [edi+0x72e76e7f],0x7fe50f73
  4306ef:	jnp    0x430672
  4306f1:	xor    al,BYTE PTR [ecx]
  4306f3:	test   al,0xff
  4306f5:	cs cli 
  4306f7:	inc    edx
  4306f8:	std    
  4306f9:	adc    edi,esi
  4306fb:	lods   al,BYTE PTR ds:[esi]
  4306fc:	cld    
  4306fd:	test   al,0x3
  4306ff:	mov    eax,0x3434e33f
  430704:	mov    edi,0x1446a000
  430709:	jmp    0x4306ad
  43070b:	mov    al,0xf9
  43070d:	add    ah,BYTE PTR [ebx+0x41]
  430710:	cmp    edx,0x800025f8
  430716:	aad    0x4
  430718:	outs   dx,BYTE PTR ds:[esi]
  430719:	push   es
  43071a:	nop
  43071b:	icebp  
  43071c:	adc    dl,BYTE PTR [esi]
  43071e:	cmc    
  43071f:	cmp    BYTE PTR [ecx-0x2dffff07],al
  430725:	sub    DWORD PTR [esi-0x63],edi
  430728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430729:	xor    BYTE PTR [ecx],al
  43072b:	xor    BYTE PTR [ebx+ebp*1+0xc],0x85
  430730:	add    ch,BYTE PTR [edi]
  430732:	stc    
  430733:	dec    DWORD PTR [esi]
  430735:	popf   
  430736:	dec    eax
  430737:	mov    db5,ebp
  43073a:	or     DWORD PTR [eax],eax
  43073c:	sahf   
  43073d:	jb     0x430781
  43073f:	push   ss
  430740:	fwait
  430741:	lods   eax,DWORD PTR ds:[esi]
  430742:	jne    0x43074c
  430744:	test   al,0x76
  430746:	or     BYTE PTR [esi+0x5d],0x8f
  43074a:	pop    ebp
  43074b:	or     BYTE PTR [esi+0x30],bl
  43074e:	cmp    ebx,0x5c85296e
  430754:	push   esi
  430755:	xor    BYTE PTR [ecx],al
  430757:	cmp    DWORD PTR [edx+0x4675214c],edx
  43075d:	lods   eax,DWORD PTR ds:[esi]
  43075e:	inc    esp
  43075f:	and    al,0x3e
  430761:	scas   eax,DWORD PTR es:[edi]
  430762:	inc    esp
  430763:	and    al,0x2e
  430765:	rol    DWORD PTR gs:[eax-0x7601ba08],0x65
  43076d:	das    
  43076e:	xchg   ebp,eax
  43076f:	sar    BYTE PTR [esi+0xf46b32e],0x90
  430776:	sub    al,0xf7
  430778:	pop    ecx
  430779:	lahf   
  43077a:	add    BYTE PTR [esi+0x1f],0x54
  43077e:	add    cl,BYTE PTR [edi]
  430780:	aaa    
  430781:	cwde   
  430782:	sbb    ecx,DWORD PTR [eax]
  430784:	aaa    
  430785:	sbb    eax,0x4177
  43078a:	dec    eax
  43078b:	stc    
  43078c:	lea    ecx,[ebx]
  43078e:	inc    esi
  43078f:	inc    esp
  430790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430791:	or     BYTE PTR [edi],dh
  430793:	sbb    eax,0xa12df685
  430798:	pop    ebx
  430799:	jg     0x430767
  43079b:	and    cl,ch
  43079d:	in     eax,0xb7
  43079f:	push   ss
  4307a0:	and    eax,0x3ff6da74
  4307a5:	jg     0x430763
  4307a7:	pop    ss
  4307a8:	jmp    0xfa39bebc
  4307ad:	jae    0x4307eb
  4307af:	popf   
  4307b0:	addr16 pop ds
  4307b2:	sub    ch,BYTE PTR [ecx-0x4c9bebe]
  4307b8:	push   edi
  4307b9:	pop    ss
  4307ba:	inc    esp
  4307bb:	fucom  st(2)
  4307bd:	mov    cl,dh
  4307bf:	sub    al,0xd7
  4307c1:	or     bh,bl
  4307c3:	pushf  
  4307c4:	addr16 or al,0x11
  4307c7:	xchg   esp,eax
  4307c8:	ret    0x400d
  4307cb:	mov    BYTE PTR [ebx+eax*1+0x10],al
  4307cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4307d0:	ret    0x1e00
  4307d3:	dec    ecx
  4307d4:	and    DWORD PTR [eax],esp
  4307d6:	sub    BYTE PTR [ecx+0x1d370246],dl
  4307dc:	js     0x430820
  4307de:	xor    edx,DWORD PTR [esi+0x3f]
  4307e1:	jae    0x4307f6
  4307e3:	xchg   esi,eax
  4307e4:	enter  0x1723,0x96
  4307e8:	mov    al,0x23
  4307ea:	inc    edi
  4307eb:	inc    esi
  4307ec:	aaa    
  4307ed:	push   eax
  4307ee:	add    BYTE PTR [eax],al
  4307f0:	mov    esp,0xbacf6b5a
  4307f5:	pop    esp
  4307f6:	call   0x1415b500
  4307fb:	and    al,0xbb
  4307fd:	xor    ebp,esi
  4307ff:	push   DWORD PTR [eax+0x767def71]
  430805:	inc    ebx
  430806:	(bad)  
  430807:	jmp    0xb13d:0xfabe6fb0
  43080e:	stos   BYTE PTR es:[edi],al
  43080f:	outs   dx,BYTE PTR ds:[esi]
  430810:	in     eax,dx
  430811:	sub    ch,BYTE PTR [edi+ebx*8+0x14]
  430815:	push   esp
  430816:	jmp    0xb703:0xea32bb5c
  43081d:	cs or  edi,ecx
  430820:	mov    ah,0xbf
  430822:	fild   WORD PTR [ebx]
  430824:	aaa    
  430825:	mov    ah,0xd3
  430827:	mov    esp,0xfc6eb12d
  43082c:	mov    al,0x2a
  43082e:	test   eax,0xd14b37c2
  430833:	xchg   BYTE PTR ds:0xa183ea34,dh
  430839:	jg     0x430812
  43083b:	jle    0x430872
  43083d:	sub    DWORD PTR [eax-0x168e8997],esp
  430843:	and    ecx,DWORD PTR [esi+0x3703e7a3]
  430849:	mov    ah,0x93
  43084b:	sar    BYTE PTR ds:0x6d6875b1,1
  430851:	sub    ah,BYTE PTR [ecx+0x370000c2]
  430857:	push   ebp
  430858:	or     edx,0x83ea3435
  43085e:	dec    ecx
  43085f:	sub    edi,0x7e
  430862:	imul   esp,DWORD PTR [edi],0x71766958
  430868:	jmp    0xdfba5692
  43086d:	add    esi,DWORD PTR [edi]
  43086f:	mov    ah,0x43
  430871:	sbb    DWORD PTR [edi+ebp*4],edi
  430874:	sbb    DWORD PTR [eax+0x1d],ebp
  430877:	sub    al,BYTE PTR [edx]
  430879:	das    
  43087a:	cmc    
  43087b:	xor    al,0x24
  43087d:	inc    eax
  43087e:	popa   
  43087f:	xor    eax,0x6a81e901
  430884:	enter  0xfcdd,0x3e
  430888:	and    BYTE PTR [eax],0x8a
  43088b:	cs stc 
  43088d:	xchg   edi,ebp
  43088f:	jmp    0x430855
  430891:	(bad)  
  430892:	mov    bl,0x11
  430894:	xor    al,BYTE PTR [edi+0x2f11735d]
  43089a:	cmc    
  43089b:	xor    al,0x1d
  43089d:	add    BYTE PTR [ecx+0x35],al
  4308a0:	add    ecx,ebp
  4308a2:	mov    ah,0x22
  4308a4:	sub    dh,ch
  4308a6:	inc    ecx
  4308a7:	lods   eax,DWORD PTR ds:[esi]
  4308a8:	cld    
  4308a9:	(bad)  
  4308aa:	dec    edi
  4308ab:	repz aas 
  4308ad:	call   0xee4d2403
  4308b2:	xor    al,0x34
  4308b4:	xchg   BYTE PTR [edx],ch
  4308b6:	or     ebp,DWORD PTR [ebp+0xa]
  4308b9:	out    0x0,al
  4308bb:	add    BYTE PTR [edi+0x1faefcc6],dh
  4308c1:	xchg   ebx,eax
  4308c2:	or     BYTE PTR [edi-0xd],ah
  4308c5:	xchg   edx,eax
  4308c6:	test   BYTE PTR [ecx+0x2f8a9644],dl
  4308cc:	and    esi,esi
  4308ce:	aas    
  4308cf:	call   0xf02d23ea
  4308d4:	xor    al,0x34
  4308d6:	add    DWORD PTR [edx-0x50f55f97],0x80203476
  4308e0:	add    dh,BYTE PTR [ebx]
  4308e2:	add    ecx,ebp
  4308e4:	mov    ah,0x22
  4308e6:	or     al,0xee
  4308e8:	rol    BYTE PTR [ebx+0x1bcf56f5],0x96
  4308ef:	push   edx
  4308f0:	lahf   
  4308f1:	add    BYTE PTR cs:[eax],0x75
  4308f5:	daa    
  4308f6:	or     al,0x84
  4308f8:	int    0x90
  4308fa:	sti    
  4308fb:	call   DWORD PTR [ebx+esi*8+0x21692413]
  430902:	adc    al,0xe9
  430904:	shr    BYTE PTR [ecx+edi*8],0xff
  430908:	pop    eax
  430909:	repz add DWORD PTR [edx],esi
  43090c:	aaa    
  43090d:	retf   
  43090e:	add    al,BYTE PTR [eax]
  430910:	fisubr WORD PTR [ebx]
  430912:	mov    bl,0xc3
  430914:	fs mov ch,0xb8
  430917:	push   esp
  430918:	mov    ?,WORD PTR [edi*2-0x50572e40]
  43091f:	pop    es
  430920:	add    BYTE PTR [eax],al
  430922:	fidiv  WORD PTR [edx+edi*1]
  430925:	push   esp
  430926:	cmp    bh,BYTE PTR [esi+ebp*2]
  430929:	or     BYTE PTR [ebp-0x14],al
  43092c:	and    al,0x10
  43092e:	push   edi
  43092f:	in     al,dx
  430930:	and    al,0x1c
  430932:	xchg   ecx,eax
  430933:	into   
  430934:	mov    eax,0xc3148683
  430939:	inc    esi
  43093a:	lea    esi,[ebx+eax*8]
  43093d:	inc    esi
  43093e:	pop    DWORD PTR [edi+0x6d]
  430941:	sub    al,0x1d
  430943:	mov    BYTE PTR ds:0xe0b53074,al
  430949:	add    al,0x2a
  43094b:	inc    eax
  43094c:	dec    ecx
  43094d:	ud2    
  43094f:	repnz add DWORD PTR [eax],eax
  430952:	pop    esi
  430953:	inc    dx
  430955:	add    ah,BYTE PTR [esi-0x79]
  430958:	pop    ebp
  430959:	push   es
  43095a:	dec    esi
  43095b:	xor    al,0xc3
  43095d:	inc    esi
  43095e:	dec    esp
  43095f:	sub    edx,ebp
  430961:	pop    esp
  430962:	pop    eax
  430963:	xor    al,0x1
  430965:	(bad)  
  430966:	cwde   
  430967:	xor    bh,dh
  430969:	call   0x3c2feb
  43096e:	aaa    
  43096f:	pop    ecx
  430970:	mov    bh,0xfd
  430972:	aaa    
  430973:	je     0x430930
  430975:	add    DWORD PTR [edi],esi
  430977:	sbb    eax,0xa3f4b1f0
  43097c:	jge    0x43093d
  43097e:	sbb    ebp,0x4
  430981:	test   bh,dh
  430983:	push   es
  430984:	jns    0x4309b3
  430986:	add    BYTE PTR [eax],al
  430988:	ss sbb eax,0xd7c90b05
  43098e:	add    cl,BYTE PTR [ecx-0x4c]
  430991:	inc    esp
  430992:	cld    
  430993:	or     bh,BYTE PTR [eax-0x1700090e]
  430999:	and    DWORD PTR cs:[ebp-0x3cb98b],ecx
  4309a0:	fcmovbe st,st(7)
  4309a2:	add    edi,DWORD PTR [eax+eiz*2]
  4309a5:	push   es
  4309a6:	xchg   edx,eax
  4309a7:	mov    edi,0xfe18e5c9
  4309ac:	iret   
  4309ad:	add    ax,WORD PTR [eax]
  4309b0:	aaa    
  4309b1:	push   DWORD PTR [esi-0xf989302]
  4309b7:	xchg   esp,eax
  4309b8:	ja     0x4309a9
  4309ba:	cmp    al,0x23
  4309bc:	xor    al,0x4
  4309be:	scas   eax,DWORD PTR es:[edi]
  4309bf:	std    
  4309c0:	cwde   
  4309c1:	sbb    eax,0x1934415f
  4309c6:	iret   
  4309c7:	jae    0x430a02
  4309c9:	adc    ecx,ebp
  4309cb:	or     ch,BYTE PTR [edx+0x53c75edd]
  4309d1:	pop    ss
  4309d2:	push   esi
  4309d3:	cmp    BYTE PTR ds:0xf1c2051d,dh
  4309d9:	sbb    bh,cl
  4309db:	call   0x481a3b
  4309e0:	pop    ecx
  4309e1:	push   edi
  4309e2:	add    al,0x86
  4309e4:	add    DWORD PTR [edx],ebx
  4309e6:	test   eax,edi
  4309e8:	cmp    eax,0x7eef34
  4309ed:	add    BYTE PTR [ebx+0x34],bh
  4309f0:	jmp    0xb129:0x39de2c03
  4309f7:	enter  0xc36b,0x28
  4309fb:	ss lods eax,DWORD PTR gs:[esi]
  4309fe:	and    BYTE PTR [edi],ah
  430a00:	jmp    0x430985
  430a02:	pop    ds
  430a03:	cmp    eax,0x30d380df
  430a08:	jmp    0xffc:0xec6df503
  430a0f:	loopne 0x4309ee
  430a11:	add    esi,DWORD PTR [edi]
  430a13:	es test eax,0xeb75b902
  430a19:	sub    edi,0x43
  430a1c:	out    dx,eax
  430a1d:	jle    0x4309ea
  430a1f:	xor    ebp,edx
  430a21:	add    ebp,DWORD PTR [esi+ebx*8]
  430a24:	sbb    DWORD PTR [ecx],ebp
  430a26:	push   ecx
  430a27:	fsubr  QWORD PTR [ebx-0x3d]
  430a2a:	enter  0x6535,0x7e
  430a2e:	shl    BYTE PTR [esi],0xeb
  430a31:	cmp    DWORD PTR [edi-0x51c93cca],0x6d
  430a38:	jmp    0x430ab3
  430a3a:	(bad)  
  430a3b:	xor    ch,BYTE PTR [edx+0x6b]
  430a3e:	cs lahf 
  430a40:	xor    ch,dh
  430a42:	out    0x4,al
  430a44:	cmc    
  430a45:	or     esp,0x2042ab2
  430a4b:	fwait
  430a4c:	push   0x6b
  430a4e:	xor    esi,DWORD PTR [edi]
  430a50:	pop    ebp
  430a51:	repnz add BYTE PTR [eax],al
  430a54:	xor    esi,DWORD PTR [edx+ebp*8]
  430a57:	cmp    eax,0x5ae431f6
  430a5c:	fbstp  TBYTE PTR [eax]
  430a5e:	jmp    0xee79:0xeb6d5d03
  430a65:	xor    al,BYTE PTR [ecx]
  430a67:	imul   ebx,esp,0x421f7043
  430a6d:	in     al,0xd2
  430a6f:	and    esi,DWORD PTR [ebp+0x34a984fa]
  430a75:	mov    eax,ds:0x359c6944
  430a7a:	or     BYTE PTR [ebp+ebp*8+0x30],ah
  430a7e:	add    ecx,ebp
  430a80:	bound  esi,QWORD PTR [ebx+0x3]
  430a83:	bnd jge 0x430afa
  430a86:	(bad)  
  430a87:	call   0xea8334c0
  430a8c:	mov    ?,WORD PTR [ebx+0x4]
  430a8f:	imul   ecx,DWORD PTR [edx+esi*1-0x1bfc3890],0x5b6d3d2
  430a9a:	test   DWORD PTR [ecx+0x691c9f34],ebp
  430aa0:	dec    esp
  430aa1:	xor    ecx,DWORD PTR [eax]
  430aa3:	fs adc eax,0x12e9012f
  430aa9:	jae    0x430aae
  430aab:	(bad)  [ebp+0x4c]
  430aae:	(bad)  
  430aaf:	call   0xa3fbee8
  430ab4:	ret    0x11b1
  430ab7:	in     al,dx
  430ab8:	add    BYTE PTR [eax],al
  430aba:	xor    al,0x34
  430abc:	mov    edi,0xea343527
  430ac1:	out    dx,al
  430ac2:	mov    eax,ds:0xf69f925
  430ac7:	pop    edi
  430ac8:	outs   dx,BYTE PTR ds:[esi]
  430ac9:	and    dl,BYTE PTR [ecx+0x73]
  430acc:	add    al,BYTE PTR [ebx]
  430ace:	pop    esp
  430acf:	sbb    BYTE PTR ds:0xedb18a05,0xe5
  430ad6:	xor    al,0x34
  430ad8:	mov    WORD PTR [esi],gs
  430ada:	jae    0x430b3a
  430adc:	ret    
  430add:	adc    eax,0x4dad4f
  430ae2:	jb     0x430b11
  430ae4:	or     BYTE PTR [edx+esi*2+0x41],0x20
  430ae9:	retf   0xab2f
  430aec:	retf   0xaeff
  430aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430af0:	mov    eax,0x42ab4474
  430af5:	pop    ss
  430af6:	xor    ah,BYTE PTR [esi-0x1869f9f4]
  430afc:	adc    ecx,DWORD PTR [edx+0x7f1d37d0]
  430b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b03:	in     eax,0x24
  430b05:	wbinvd 
  430b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b08:	dec    esi
  430b09:	clc    
  430b0a:	dec    ecx
  430b0b:	nop
  430b0c:	ja     0x430b72
  430b0e:	xor    bh,BYTE PTR [ecx+eax*1]
  430b11:	jmp    0x3c3077
  430b16:	mov    ds,WORD PTR [ebp+eax*1+0x4266e075]
  430b1d:	add    DWORD PTR [eax],eax
  430b1f:	add    BYTE PTR [ebx+0x3580aa8b],ch
  430b25:	sub    ecx,DWORD PTR [eax*4-0x6d9f1]
  430b2c:	and    bh,ah
  430b2e:	add    DWORD PTR [eax],ebp
  430b30:	xor    eax,0x2efb78b0
  430b35:	inc    ecx
  430b36:	jge    0x430acc
  430b38:	shl    BYTE PTR [eax],cl
  430b3a:	add    DWORD PTR [eax-0x7bf3c97b],eax
  430b40:	adc    eax,0x3700013c
  430b45:	in     al,dx
  430b46:	and    al,0x14
  430b48:	arpl   WORD PTR [eax],di
  430b4a:	add    BYTE PTR [edx+eax*2+0x20],0x8a
  430b4f:	inc    esp
  430b50:	xor    ch,BYTE PTR [ebx+eax*8]
  430b53:	inc    esi
  430b54:	(bad)  
  430b55:	push   ebp
  430b56:	ret    
  430b57:	inc    esi
  430b58:	lea    esi,[eax]
  430b5a:	cmp    ebx,0x4cda1037
  430b60:	ror    ebp,1
  430b62:	retf   
  430b63:	add    BYTE PTR [edx],dl
  430b65:	sbb    edx,DWORD PTR [esi]
  430b67:	push   esp
  430b68:	adc    edi,edi
  430b6a:	adc    eax,DWORD PTR [edi+edx*8-0x43fffaea]
  430b71:	dec    ebp
  430b72:	adc    DWORD PTR [edi],esi
  430b74:	jne    0x430b7c
  430b76:	sub    DWORD PTR [edi-0x7906d11d],eax
  430b7c:	xor    DWORD PTR [ecx],0xffffffed
  430b7f:	es std 
  430b81:	fadd   QWORD PTR [edi+0x200000c9]
  430b87:	mov    bh,BYTE PTR ds:[edi+0x418727a3]
  430b8e:	sub    BYTE PTR [ecx],dh
  430b90:	mov    WORD PTR [ebx],cs
  430b92:	xor    BYTE PTR [ebp-0x2c52ed35],dl
  430b98:	sti    
  430b99:	and    edi,DWORD PTR [eax-0x5b]
  430b9c:	leave  
  430b9d:	and    eax,DWORD PTR [eax+0x1a]
  430ba0:	mov    al,cl
  430ba2:	loopne 0x430bd6
  430ba4:	fs jle 0x430c02
  430ba7:	icebp  
  430ba8:	lock dec edi
  430bab:	out    dx,al
  430bac:	add    BYTE PTR [eax],al
  430bae:	aaa    
  430baf:	lea    ebx,[eax+0x5]
  430bb2:	inc    edx
  430bb3:	sbb    ecx,DWORD PTR [ebx+0x41]
  430bb6:	ss inc ebp
  430bb8:	push   0xd2cb28a9
  430bbd:	std    
  430bbe:	mov    esi,0xb42008ce
  430bc3:	hlt    
  430bc4:	add    eax,0xd963f674
  430bc9:	and    dh,ch
  430bcb:	push   0x537948f0
  430bd0:	(bad)  
  430bd1:	(bad)  
  430bd2:	cmp    BYTE PTR [eax+0x3480fe56],bl
  430bd8:	jmp    0x7155:0x91742e83
  430bdf:	and    ebp,ebx
  430be1:	pop    ds
  430be2:	or     BYTE PTR [ebx],dh
  430be4:	ins    DWORD PTR es:[edi],dx
  430be5:	inc    ebx
  430be6:	pop    esi
  430be7:	in     al,dx
  430be8:	(bad)  
  430be9:	adc    BYTE PTR [eax],al
  430beb:	add    BYTE PTR [eax+0x67],dl
  430bee:	mov    BYTE PTR gs:[eax-0x4bed1ea0],0x37
  430bf6:	fld    QWORD PTR [ebx]
  430bf8:	aaa    
  430bf9:	xor    esp,DWORD PTR [eax+0x1b0bb946]
  430bff:	jge    0x430bc0
  430c01:	jns    0x430be5
  430c03:	mov    WORD PTR [esi+0x214d4130],es
  430c09:	and    ebp,ebx
  430c0b:	pop    ds
  430c0c:	nop
  430c0d:	test   eax,0x367649f1
  430c12:	loopne 0x430c80
  430c14:	retf   
  430c15:	ss jmp 0xb878:0xef974303
  430c1d:	and    DWORD PTR [ebx],esi
  430c1f:	daa    
  430c20:	cmp    al,0xac
  430c22:	test   al,0x5
  430c24:	fmulp  st(7),st
  430c26:	jmp    0x430c2b
  430c28:	aaa    
  430c29:	cli    
  430c2a:	test   al,0x4
  430c2c:	or     cl,BYTE PTR ds:0x22cd62c2
  430c32:	loopne 0x430bcd
  430c34:	jle    0x430c6c
  430c36:	fs inc esi
  430c38:	sub    al,0x54
  430c3a:	imul   ebx,DWORD PTR [ebx+0x2b],0x33
  430c3e:	test   BYTE PTR [bx+si-0x14de],dh
  430c43:	xlat   BYTE PTR ds:[ebx]
  430c44:	dec    BYTE PTR [esi-0x5c]
  430c47:	adc    DWORD PTR [ebx+0x3703ebab],edi
  430c4d:	mov    bh,0xd1
  430c4f:	or     eax,DWORD PTR [eax]
  430c51:	add    BYTE PTR [eax+edi*4],bh
  430c54:	add    DWORD PTR [esi],esi
  430c56:	xor    dh,BYTE PTR [ecx+eax*1]
  430c59:	and    BYTE PTR [edi+0x2b],bl
  430c5c:	dec    edx
  430c5d:	div    BYTE PTR [eax+0x34e904a7]
  430c63:	sbb    esi,DWORD PTR [ecx+0x69]
  430c66:	or     al,BYTE PTR [ebx+0x8]
  430c69:	gs push ecx
  430c6b:	and    ecx,edi
  430c6d:	jmp    0xbe146e1b
  430c72:	cmp    eax,0x3f6f802f
  430c77:	xor    al,0x1
  430c79:	add    edi,DWORD PTR [ebx]
  430c7b:	call   0xd7f8:0x2e5d660b
  430c82:	cmp    al,0xc
  430c84:	xchg   edi,eax
  430c85:	adc    dh,BYTE PTR [ebx]
  430c87:	xor    al,0x8a
  430c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430c8a:	sub    al,0x2d
  430c8c:	mov    bh,0x2a
  430c8e:	mov    dl,0x19
  430c90:	xor    dl,BYTE PTR [eax-0x37]
  430c93:	pop    ds
  430c94:	stc    
  430c95:	jmp    0x63478030
  430c9a:	in     eax,0x22
  430c9c:	jns    0x430cbe
  430c9e:	cs sub eax,0x1e56ca80
  430ca4:	stc    
  430ca5:	out    0xce,al
  430ca7:	add    al,0x3c
  430ca9:	imul   edx,DWORD PTR [ebx-0x5e],0x41
  430cad:	jmp    0xff50c3f9
  430cb2:	push   edi
  430cb3:	push   ds
  430cb4:	xor    al,0x0
  430cb7:	add    BYTE PTR [esi],bh
  430cb9:	sub    eax,0x343bd27e
  430cbe:	add    DWORD PTR [edi-0x2ff6e012],ebp
  430cc4:	stos   BYTE PTR es:[edi],al
  430cc5:	and    bh,cl
  430cc7:	jmp    0x554b297f
  430ccc:	xchg   DWORD PTR [edx+0x9a100fa],esp
  430cd2:	adc    al,0x83
  430cd4:	fild   WORD PTR [ebp+0x449cf977]
  430cda:	and    ebx,0xffffffd3
  430cdd:	xchg   esp,eax
  430cde:	sti    
  430cdf:	leavew 
  430ce1:	jmp    0x430ce4
  430ce3:	sub    ebx,DWORD PTR [esi-0x72]
  430ce6:	icebp  
  430ce7:	add    bl,BYTE PTR [esi+0x35]
  430cea:	sti    
  430ceb:	inc    esi
  430cec:	dec    ebp
  430ced:	scas   eax,DWORD PTR es:[edi]
  430cee:	dec    edx
  430cef:	add    ecx,esi
  430cf1:	jge    0x430cf0
  430cf3:	push   cs
  430cf4:	fldenv [esi-0xb]
  430cf7:	inc    ecx
  430cf9:	inc    ebx
  430cfa:	mov    bl,0xd1
  430cfc:	test   BYTE PTR [edi+0x358e83fc],dh
  430d02:	or     al,0x85
  430d04:	pop    ebp
  430d05:	cmp    bl,0xff
  430d08:	sahf   
  430d09:	jle    0x430d0f
  430d0b:	setnp  BYTE PTR [edi-0xa]
  430d0f:	dec    DWORD PTR [esi]
  430d11:	imul   eax,DWORD PTR [edx+0x2],0xffffffec
  430d15:	(bad)  
  430d16:	rol    DWORD PTR [edx],0x1e
  430d19:	xor    eax,0x46fb
  430d1e:	or     eax,0x8e034aaf
  430d23:	jle    0x430d23
  430d25:	push   cs
  430d26:	pop    ecx
  430d27:	xlat   BYTE PTR ds:[ebx]
  430d28:	cmc    
  430d29:	inc    DWORD PTR [ecx+0x44]
  430d2c:	mov    bl,0xd1
  430d2e:	add    al,0xb7
  430d30:	call   0xc779bb8
  430d35:	test   DWORD PTR [ebp-0x7e],ebp
  430d38:	sti    
  430d39:	call   FWORD PTR [esi+0x7e]
  430d3c:	or     DWORD PTR [edi],ecx
  430d3e:	pop    ebx
  430d3f:	lahf   
  430d40:	idiv   bh
  430d42:	into   
  430d43:	jbe    0x430d87
  430d45:	add    ch,BYTE PTR [edi+0x3702918f]
  430d4b:	or     eax,DWORD PTR ds:0x8149c80
  430d51:	test   DWORD PTR [ecx-0xd],eax
  430d54:	pop    eax
  430d55:	cli    
  430d56:	inc    eax
  430d57:	test   eax,0xf2b5fdbf
  430d5c:	in     eax,dx
  430d5d:	sar    ecx,0xb
  430d60:	sub    DWORD PTR [ebp+ebx*1+0x63],esi
  430d64:	(bad)  [edx]
  430d66:	call   DWORD PTR [ecx]
  430d68:	mov    dh,BYTE PTR [eax+0x35]
  430d6b:	or     eax,DWORD PTR ds:0x661b3180
  430d71:	push   0x80050b35
  430d76:	inc    ecx
  430d77:	and    esp,DWORD PTR [esi+0x60]
  430d7a:	xor    eax,0x3180050b
  430d7f:	pop    ss
  430d80:	pop    ax
  430d82:	add    BYTE PTR [eax],al
  430d84:	xor    eax,0x79c2050b
  430d89:	or     al,0x2b
  430d8b:	jmp    0x481917
  430d90:	lods   al,BYTE PTR ds:[esi]
  430d91:	aas    
  430d92:	gs pop esp
  430d94:	xor    cl,BYTE PTR ds:0xe9f78505
  430d9a:	repz test DWORD PTR [ecx],esi
  430d9d:	xor    DWORD PTR [ebx+ecx*1],eax
  430da0:	leave  
  430da1:	dec    ebp
  430da2:	push   eax
  430da3:	xlat   BYTE PTR ds:[ebx]
  430da4:	sbb    al,0x4d
  430da6:	test   bh,bl
  430da8:	in     al,0x8a
  430daa:	cmp    eax,0x140adc10
  430daf:	shl    BYTE PTR [edi-0x6b],0xbf
  430db3:	add    BYTE PTR [esi+ecx*8+0xef784fc],ch
  430dba:	and    DWORD PTR [eax],0xfb050d35
  430dc0:	out    0x98,eax
  430dc2:	cmp    eax,0x8934b30a
  430dc7:	pop    eax
  430dc8:	lods   eax,DWORD PTR ds:[esi]
  430dc9:	pop    ds
  430dca:	jne    0x430d91
  430dcc:	inc    ebp
  430dcd:	pop    eax
  430dce:	fs (bad) 
  430dd1:	or     eax,0x1f9d587d
  430dd6:	imul   ebx,DWORD PTR [edx+0x3a],0x2f
  430dda:	pop    ebp
  430ddb:	jae    0x430d62
  430ddd:	pop    ds
  430dde:	mov    al,0x55
  430de0:	test   BYTE PTR [esi+0x6a],0x8c
  430de4:	out    0x37,al
  430de6:	out    dx,eax
  430de7:	mov    BYTE PTR [eax],al
  430de9:	add    BYTE PTR [ebx+esi*1],ah
  430dec:	jmp    0xa042:0x643eb103
  430df3:	or     al,0xed
  430df5:	stos   DWORD PTR es:[edi],eax
  430df6:	cmp    BYTE PTR [ecx+0x2f37abd6],ch
  430dfc:	pop    ebp
  430dfd:	cmp    eax,0x8aea3437
  430e02:	out    dx,al
  430e03:	sub    esp,DWORD PTR [ebx-0x3b]
  430e06:	sub    al,0xab
  430e08:	cmp    DWORD PTR [edx],ecx
  430e0a:	pop    es
  430e0b:	test   eax,0xbfe8afb
  430e10:	dec    esp
  430e11:	pop    es
  430e12:	aaa    
  430e13:	xor    al,0x5d
  430e15:	inc    ebx
  430e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e17:	mov    ebp,0x2e11626a
  430e1c:	jo     0x430e60
  430e1e:	adc    DWORD PTR [ecx+0x2f7c4365],edi
  430e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e25:	pop    es
  430e26:	mov    dl,0xec
  430e28:	xchg   esi,eax
  430e29:	or     al,0xf5
  430e2b:	jne    0x430e16
  430e2d:	push   ss
  430e2e:	fsubrp st(3),st
  430e30:	jmp    0xbf74538
  430e35:	add    ah,BYTE PTR [ebx+0x48]
  430e38:	jae    0x430e87
  430e3a:	fcom   DWORD PTR [edx-0x46c8fc22]
  430e40:	add    DWORD PTR [ecx],ebp
  430e42:	call   0x33eacd72
  430e47:	pop    esp
  430e48:	jmp    0x72:0x134347e
  430e4f:	add    cl,bh
  430e51:	push   ss
  430e52:	sahf   
  430e53:	in     eax,dx
  430e54:	xor    al,0x34
  430e56:	jle    0x430e01
  430e58:	sub    bh,BYTE PTR [eax+0x19f2c64f]
  430e5e:	xor    eax,0x905bfa9
  430e63:	pop    esp
  430e64:	sti    
  430e65:	jbe    0x430deb
  430e67:	leave  
  430e68:	sub    BYTE PTR [edi+0x74ddedc1],bl
  430e6e:	clc    
  430e6f:	sahf   
  430e70:	or     bl,BYTE PTR [ebp+ecx*2-0x33]
  430e74:	pop    esp
  430e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e76:	or     DWORD PTR [edx+0x6f],esp
  430e79:	push   edx
  430e7a:	adc    DWORD PTR [eax+0x7f],esi
  430e7d:	push   edx
  430e7e:	sbb    DWORD PTR [edx+0x7f],esi
  430e81:	push   edx
  430e82:	sbb    eax,0x1d72ac21
  430e87:	fxch   st(5)
  430e89:	jnp    0x430e8d
  430e8b:	jmp    0x2af237c4
  430e90:	mov    ebp,0xf4bcc19d
  430e95:	sbb    eax,0xb82a4e3d
  430e9a:	enter  0x34eb,0x34
  430e9e:	or     BYTE PTR [edi+0x73],bh
  430ea1:	mov    esp,0xab2caf8a
  430ea6:	dec    edi
  430ea7:	fnsave [edx+0x73]
  430eaa:	add    dl,dh
  430eac:	pop    ebp
  430ead:	push   0xb434e902
  430eb2:	cld    
  430eb3:	in     al,0x0
  430eb5:	add    BYTE PTR [ecx],cl
  430eb7:	sub    eax,0x6335a7bf
  430ebc:	jmp    0xd900:0x1330100
  430ec3:	(bad)  
  430ec4:	mov    bh,0x8a
  430ec6:	dec    esi
  430ec7:	js     0x430f16
  430ec9:	inc    eax
  430eca:	into   
  430ecb:	cmp    eax,0xb1b175fc
  430ed0:	out    dx,eax
  430ed1:	cmp    eax,DWORD PTR [edx]
  430ed3:	sub    DWORD PTR [ecx+0x7e2f2efb],eax
  430ed9:	xchg   ebx,eax
  430eda:	mov    WORD PTR [ecx],?
  430edc:	add    esi,eax
  430ede:	pusha  
  430edf:	xor    DWORD PTR [ecx],esi
  430ee1:	jmp    0x444183
  430ee6:	adc    eax,0x208b00ef
  430eeb:	inc    esp
  430eec:	or     al,0xa4
  430eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430eef:	xor    eax,0xaa52e1c2
  430ef4:	dec    edx
  430ef5:	or     BYTE PTR [ecx-0x41],bl
  430ef8:	mov    eax,0x9a442089
  430efd:	add    DWORD PTR [eax],esp
  430eff:	xor    BYTE PTR [edx],dl
  430f01:	push   esi
  430f02:	pop    edx
  430f03:	mov    ah,cl
  430f05:	add    BYTE PTR [esi+0x31],cl
  430f08:	cmp    ebx,0xd87e305b
  430f0e:	push   ds
  430f0f:	xor    DWORD PTR [ecx],eax
  430f11:	jmp    0x430ec3
  430f13:	mov    al,0xef
  430f15:	or     bl,BYTE PTR [ecx]
  430f17:	mov    dh,0x4f
  430f19:	test   BYTE PTR [eax],0x0
  430f1c:	imul   eax,DWORD PTR [eax+0x2c06467f],0xe7870c43
  430f26:	add    al,0x75
  430f28:	push   ss
  430f29:	mov    cl,0xa
  430f2b:	and    BYTE PTR [edi+0x3b],dh
  430f2e:	repz call FWORD PTR [ecx]
  430f31:	ja     0x430f75
  430f33:	add    DWORD PTR [edx],eax
  430f35:	mov    dh,BYTE PTR [ecx+0x50b3700]
  430f3b:	xchg   DWORD PTR [edx-0x1],esi
  430f3e:	sub    DWORD PTR [ebx+ebx*1-0x5],eax
  430f42:	mov    DWORD PTR [ecx+0x3b],ecx
  430f45:	or     al,al
  430f47:	shrd   esp,eax,0xc
  430f4b:	cdq    
  430f4c:	cld    
  430f4d:	push   eax
  430f4e:	aad    0x5
  430f50:	xor    ecx,DWORD PTR [edi]
  430f52:	sbb    al,bl
  430f54:	and    al,0x17
  430f56:	mov    BYTE PTR [esi+0x7b80dbac],bh
  430f5c:	push   ebx
  430f5d:	and    eax,DWORD PTR ds:0xd9a23c75
  430f63:	and    esp,DWORD PTR [edi]
  430f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f66:	fldenv [ebx]
  430f68:	pop    ds
  430f69:	xchg   edx,eax
  430f6a:	fiadd  DWORD PTR [edi]
  430f6c:	dec    esp
  430f6d:	ret    
  430f6e:	clc    
  430f6f:	lds    edi,FWORD PTR [esi-0x478f69c]
  430f75:	div    ah
  430f77:	mov    ebx,?
  430f79:	or     ebx,DWORD PTR [eax+ecx*4-0xd]
  430f7d:	div    ah
  430f7f:	xchg   BYTE PTR [eax],al
  430f81:	add    BYTE PTR [ecx+eiz*1-0x3d],dh
  430f85:	or     edi,DWORD PTR [esi-0x2b8afac4]
  430f8b:	int3   
  430f8c:	ret    
  430f8d:	add    BYTE PTR [edx],al
  430f8f:	mov    dl,0xba
  430f91:	jg     0x430fbf
  430f93:	and    DWORD PTR [eax*4-0x5a37eeb],ecx
  430f9a:	stc    
  430f9b:	retf   
  430f9c:	std    
  430f9d:	xor    DWORD PTR [esi-0x1f],ebx
  430fa0:	sbb    BYTE PTR [eax],bl
  430fa2:	mov    esp,edi
  430fa4:	xchg   DWORD PTR [edx+0x23],eax
  430fa7:	ss aas 
  430fa9:	jae    0x430ffe
  430fab:	xchg   esi,eax
  430fac:	mov    cl,0x23
  430fae:	pop    ds
  430faf:	xchg   esi,eax
  430fb0:	leave  
  430fb1:	and    eax,DWORD PTR [edi+0x34]
  430fb4:	ror    DWORD PTR [ebp-0x79],cl
  430fb7:	scas   eax,DWORD PTR es:[edi]
  430fb8:	sub    BYTE PTR [ebx-0x10],bl
  430fbb:	mov    cl,0x2a
  430fbd:	shl    BYTE PTR [edx],1
  430fbf:	scas   al,BYTE PTR es:[edi]
  430fc0:	mov    al,ds:0xeead14f2
  430fc5:	or     al,0xbf
  430fc7:	jb     0x430f98
  430fc9:	lea    esi,[esi+0x43]
  430fcc:	(bad)  
  430fcd:	fidiv  DWORD PTR [eax+0x3c0abe70]
  430fd3:	mov    cl,0x9a
  430fd5:	push   esi
  430fd6:	lods   eax,DWORD PTR ds:[esi]
  430fd7:	sbb    ebp,DWORD PTR [edi+ebx*8+0x54]
  430fdb:	cmp    al,0xea
  430fdd:	outs   dx,BYTE PTR ds:[esi]
  430fde:	sub    BYTE PTR [ebx+edx*8+0x55b13c0d],dh
  430fe5:	push   eax
  430fe6:	add    BYTE PTR [eax],al
  430fe8:	lea    ebx,[ebx]
  430fea:	jb     0x430f9d
  430fec:	xor    al,0xf2
  430fee:	sub    BYTE PTR ds:0x201f1b4d,al
  430ff4:	inc    edi
  430ff5:	scas   eax,DWORD PTR es:[edi]
  430ff6:	and    BYTE PTR es:[edi+0x5f],al
  430ffa:	push   ds
  430ffb:	and    BYTE PTR [ebx],bl
  430ffd:	sub    esp,DWORD PTR [ebp-0x3a]
  431000:	sbb    ecx,DWORD PTR [bx+si-0x337a]
  431005:	dec    edi
  431006:	fiadd  WORD PTR [ebx]
  431008:	ret    
  431009:	dec    ecx
  43100a:	jae    0x430fce
  43100c:	cmp    BYTE PTR [ecx-0x50ea3056],dh
  431012:	push   cs
  431013:	and    BYTE PTR [ebx-0x51],dl
  431016:	scas   al,BYTE PTR es:[edi]
  431017:	pop    ds
  431018:	inc    edi
  431019:	dec    edi
  43101a:	xor    al,0xb4
  43101c:	mov    ecx,0xb3334fe9
  431021:	repz into 
  431023:	or     eax,0x1fd771b9
  431028:	mov    ch,0x27
  43102a:	loopne 0x430fb7
  43102c:	jbe    0x431071
  43102e:	add    DWORD PTR [edi],edi
  431030:	test   BYTE PTR [ebp+0x78],0xde
  431034:	mov    bh,0x93
  431036:	repz lea ebx,es:[edx+0x1ad0c575]
  43103e:	jne    0x431007
  431040:	test   eax,0x74640575
  431045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431046:	and    BYTE PTR [edx-0x68],dh
  431049:	push   esi
  43104a:	or     eax,0xf8000072
  43104f:	push   esi
  431050:	adc    edx,eax
  431052:	push   0xffffff84
  431054:	mov    WORD PTR [edi],ds
  431056:	or     eax,0x87a97eeb
  43105b:	xor    BYTE PTR [ebx-0x7fa959d9],cl
  431061:	in     eax,0x37
  431063:	lods   al,BYTE PTR ds:[esi]
  431064:	aas    
  431065:	mul    dh
  431067:	je     0x431079
  431069:	inc    esi
  43106a:	ds mov cl,0x25
  43106d:	mov    ebx,0x35851dde
  431072:	push   edi
  431073:	push   esp
  431074:	add    DWORD PTR ds:0xed40b31d,esi
  43107a:	jmp    0xb4097e59
  43107f:	xchg   BYTE PTR ds:0x1d6eabc9,bl
  431085:	stc    
  431086:	and    esi,edx
  431088:	push   edx
  431089:	jb     0x431088
  43108b:	sbb    eax,0xa6fb64d2
  431090:	or     esp,DWORD PTR [ebx+0x75]
  431093:	inc    ebp
  431094:	sbb    eax,0x89303f65
  431099:	scas   eax,DWORD PTR es:[edi]
  43109a:	daa    
  43109b:	and    al,0x40
  43109d:	idiv   bh
  43109f:	cs jle 0x431100
  4310a2:	test   BYTE PTR [esi],bl
  4310a4:	stc    
  4310a5:	push   0xffffffef
  4310a7:	push   ebp
  4310a8:	sbb    DWORD PTR [eax],eax
  4310aa:	push   ds
  4310ab:	jmp    0xc07e:0x9d98b2a
  4310b2:	add    BYTE PTR [eax],al
  4310b4:	mov    edx,0x3a548054
  4310b9:	sbb    BYTE PTR [eax+0x2025fa4c],al
  4310bf:	retf   0xa89f
  4310c2:	retf   0x1eff
  4310c5:	cdq    
  4310c6:	mov    eax,0x42a7d474
  4310cb:	pop    ss
  4310cc:	cli    
  4310cd:	scas   al,BYTE PTR es:[edi]
  4310ce:	or     al,0x9
  4310d0:	inc    esi
  4310d1:	not    BYTE PTR [ebx]
  4310d3:	test   BYTE PTR [eax+0x1b0f7c24],0x72
  4310da:	icebp  
  4310db:	call   DWORD PTR [ecx+0x61103da8]
  4310e1:	xlat   BYTE PTR ds:[ebx]
  4310e2:	jg     0x4310c9
  4310e4:	arpl   WORD PTR [edx+0xc],si
  4310e7:	add    BYTE PTR [ebx+esi*8],dl
  4310ea:	adc    esp,DWORD PTR [edx+eax*1]
  4310ed:	xor    DWORD PTR ds:0x13514e9,eax
  4310f3:	add    BYTE PTR [ebx+esi*8],dl
  4310f6:	adc    esp,DWORD PTR [ebx+edx*1]
  4310f9:	xor    DWORD PTR [esi],eax
  4310fb:	jmp    0x4445e0
  431100:	in     al,0xf2
  431102:	adc    esp,DWORD PTR [eiz*8-0x2316efd0]
  431109:	xor    al,0x1
  43110b:	add    ah,al
  43110d:	repnz adc esp,DWORD PTR [esi+ebx*8]
  431111:	xor    BYTE PTR [ecx],dl
  431113:	jmp    0x43115c
  431115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431116:	inc    edx
  431117:	pop    ss
  431118:	add    BYTE PTR [eax],al
  43111a:	cli    
  43111b:	pushf  
  43111c:	or     al,0x18
  43111e:	test   DWORD PTR ds:0x3929467f,eax
  431124:	call   0xbd62:0x6624370c
  43112b:	shl    cl,1
  43112d:	and    edi,DWORD PTR [edi+0x79880d1e]
  431133:	add    ch,BYTE PTR [eax+ebp*2+0x6]
  431137:	bound  ebx,QWORD PTR [ecx-0x7a]
  43113a:	add    DWORD PTR [ebx+0x4a],esi
  43113d:	add    BYTE PTR [edi],dh
  43113f:	or     edi,DWORD PTR [eax-0x41]
  431142:	imul   ebx,DWORD PTR [esi],0xffffff87
  431145:	add    DWORD PTR [ebx],edx
  431147:	push   cs
  431148:	or     dh,BYTE PTR [edx+0x163c41f7]
  43114e:	test   DWORD PTR [ebp+0x4ab4ee64],0xde34e6f3
  431158:	inc    esp
  431159:	aas    
  43115a:	mov    edi,0xf08703d0
  43115f:	xor    al,BYTE PTR [edx+0x2c8f30bf]
  431165:	out    dx,al
  431166:	cwde   
  431167:	add    DWORD PTR [ecx-0x31],edx
  43116a:	mov    edx,0x568400ca
  43116f:	fst    QWORD PTR [eax-0x6]
  431172:	lods   eax,DWORD PTR ds:[esi]
  431173:	push   eax
  431174:	call   0xb51be9c
  431179:	mov    cl,bh
  43117b:	add    DWORD PTR [esi+0xd],esp
  43117e:	add    BYTE PTR [eax],al
  431180:	rcl    DWORD PTR gs:[eax-0x7b],1
  431184:	stc    
  431185:	and    DWORD PTR [ecx],ebx
  431187:	xchg   esi,eax
  431188:	sub    esp,DWORD PTR ds:0x50bd026c
  43118e:	call   0xf161bcb6
  431193:	xchg   ecx,edi
  431195:	add    DWORD PTR [ebx-0x2f8cdfbf],ecx
  43119b:	or     bh,BYTE PTR [edx+0x28fa4e0a]
  4311a1:	xor    eax,0x372c7706
  4311a6:	push   ebx
  4311a7:	mov    al,cl
  4311a9:	stc    
  4311aa:	lods   al,BYTE PTR ds:[esi]
  4311ab:	add    ecx,DWORD PTR [eax-0x1a]
  4311ae:	lods   al,BYTE PTR ds:[esi]
  4311af:	add    ebp,DWORD PTR [esi+0x4]
  4311b2:	lods   eax,DWORD PTR ds:[esi]
  4311b3:	add    edi,DWORD PTR [edx-0x34fc52fc]
  4311b9:	add    al,0xad
  4311bb:	add    ebp,DWORD PTR [ebp+0x703ad04]
  4311c1:	add    eax,0x50103ad
  4311c6:	lods   eax,DWORD PTR ds:[esi]
  4311c7:	add    esp,ebx
  4311c9:	add    al,0xad
  4311cb:	add    esp,DWORD PTR [edi]
  4311cd:	add    eax,0x56e03ad
  4311d2:	lods   eax,DWORD PTR ds:[esi]
  4311d3:	add    ecx,DWORD PTR [edx+0x5]
  4311d6:	lods   eax,DWORD PTR ds:[esi]
  4311d7:	add    edx,DWORD PTR [ebp-0x7bfc52fb]
  4311dd:	add    eax,0x24b03ad
  4311e2:	sub    eax,0x63000004
  4311e7:	add    ch,BYTE PTR ds:0x2d01ea04
  4311ed:	add    al,0x29
  4311ef:	add    ebp,DWORD PTR ds:0x2cfffd04
  4311f5:	add    al,0xa6
  4311f7:	add    BYTE PTR ds:0x2d00a604,ch
  4311fd:	add    al,0xc6
  4311ff:	add    BYTE PTR ds:0x2d00c904,ch
  431205:	add    al,0xc1
  431207:	add    BYTE PTR ds:0x2d00b904,ch
  43120d:	add    al,0xb1
  43120f:	add    BYTE PTR ds:0x2d00a904,ch
  431215:	add    al,0xa1
  431217:	add    BYTE PTR ds:0x2009904,ch
  43121d:	sub    edi,DWORD PTR [ebx]
  43121f:	inc    edx
  431220:	into   
  431221:	sub    esi,DWORD PTR [ebx]
  431223:	gs into 
  431225:	stos   DWORD PTR es:[edi],eax
  431226:	xor    al,0x57
  431228:	into   
  431229:	stos   DWORD PTR es:[edi],eax
  43122a:	xor    al,0x81
  43122c:	into   
  43122d:	stos   DWORD PTR es:[edi],eax
  43122e:	xor    al,0x93
  431230:	into   
  431231:	stos   DWORD PTR es:[edi],eax
  431232:	xor    al,0x9d
  431234:	into   
  431235:	stos   DWORD PTR es:[edi],eax
  431236:	xor    al,0xbd
  431238:	into   
  431239:	stos   DWORD PTR es:[edi],eax
  43123a:	xor    al,0xcf
  43123c:	into   
  43123d:	stos   DWORD PTR es:[edi],eax
  43123e:	xor    al,0xef
  431240:	into   
  431241:	stos   DWORD PTR es:[edi],eax
  431242:	xor    al,0x13
  431244:	iret   
  431245:	stos   DWORD PTR es:[edi],eax
  431246:	xor    al,0x89
  431248:	(bad)  
  431249:	stos   DWORD PTR es:[edi],eax
  43124a:	add    BYTE PTR [eax],al
  43124c:	xor    al,0x8d
  43124e:	iret   
  43124f:	stos   DWORD PTR es:[edi],eax
  431250:	xor    al,0x42
  431252:	fldcw  WORD PTR [ebx-0x54384ecc]
  431258:	xor    al,0x14
  43125a:	enter  0x34ab,0x36
  43125e:	fld    TBYTE PTR [ebx-0x542381cc]
  431264:	xor    al,0x9a
  431266:	fsubr  QWORD PTR [ebx]
  431268:	cmp    esp,esi
  43126a:	fsubr  QWORD PTR [ebx]
  43126c:	xor    edi,ecx
  43126e:	fsubr  QWORD PTR [ebx]
  431270:	cmp    ebx,DWORD PTR [edi]
  431272:	enter  0x332b,0xcc
  431276:	fld    TBYTE PTR [ebx]
  431278:	cmp    edx,DWORD PTR [esi]
  43127a:	(bad)  [ebx]
  43127c:	xor    eax,DWORD PTR [edx-0x48c4d42b]
  431282:	aad    0x2b
  431284:	xor    edx,DWORD PTR [ebx+0x5a3b2bc8]
  43128a:	fsubr  QWORD PTR [ebx]
  43128c:	xor    esi,DWORD PTR [edi-0x25]
  43128f:	sub    edi,DWORD PTR [ebx]
  431291:	stos   DWORD PTR es:[edi],eax
  431292:	iret   
  431293:	sub    esi,DWORD PTR [ebx]
  431295:	aam    0xcf
  431297:	add    BYTE PTR [eax+esi*1],cl
  43129a:	mov    dl,0xd6
  43129c:	or     al,0x30
  43129e:	int3   
  43129f:	(bad)  
  4312a0:	pop    esp
  4312a1:	xor    ah,bh
  4312a3:	(bad)  
  4312a4:	pop    esp
  4312a5:	xor    BYTE PTR [edi],dl
  4312a7:	xlat   BYTE PTR ds:[ebx]
  4312a8:	int3   
  4312a9:	xor    DWORD PTR [edi],edi
  4312ab:	xlat   BYTE PTR ds:[ebx]
  4312ac:	int3   
  4312ad:	xor    DWORD PTR [edi-0x29],esp
  4312b0:	add    BYTE PTR [eax],al
  4312b2:	fdiv   QWORD PTR [ecx]
  4312b4:	(bad)  
  4312b5:	xlat   BYTE PTR ds:[ebx]
  4312b6:	fdiv   QWORD PTR [ecx]
  4312b8:	(bad)  
  4312b9:	xlat   BYTE PTR ds:[ebx]
  4312ba:	int3   
  4312bb:	xor    DWORD PTR [edi-0x70ce3329],ecx
  4312c1:	xlat   BYTE PTR ds:[ebx]
  4312c2:	pushf  
  4312c3:	xor    DWORD PTR [eax-0x76],ecx
  4312c6:	pop    es
  4312c7:	push   0x15c303b7
  4312cc:	sub    al,al
  4312ce:	cmc    
  4312cf:	je     0x431323
  4312d1:	(bad)  
  4312d3:	add    DWORD PTR ds:0x5e565557,edx
  4312d9:	fs push edi
  4312db:	fcomip st,st(3)
  4312dd:	dec    DWORD PTR [ebp+0x78]
  4312e0:	add    DWORD PTR [esi+ebp*8-0x52],esi
  4312e4:	inc    ebx
  4312e5:	push   0x74f13cb0
  4312ea:	inc    esi
  4312eb:	mov    bl,0xb8
  4312ed:	fs lock cmp dh,cl
  4312f1:	je     0x431331
  4312f3:	stos   BYTE PTR es:[edi],al
  4312f4:	mov    bh,0xc0
  4312f6:	jbe    0x43132b
  4312f8:	test   eax,0xa1074320
  4312fd:	add    DWORD PTR [ebx+0x23],eax
  431300:	js     0x43137b
  431302:	pop    edx
  431303:	xor    DWORD PTR [ebp+ecx*1+0x1a],edi
  431307:	push   ss
  431308:	js     0x431383
  43130a:	xor    WORD PTR [eax+0x5],bp
  43130e:	jge    0x431381
  431310:	cmp    bl,ch
  431312:	aaa    
  431313:	or     DWORD PTR [edx],edx
  431315:	rol    BYTE PTR [eax],0x0
  431318:	call   0xda01cd61
  43131d:	mov    ebx,ebx
  43131f:	getsec 
  431321:	sbb    eax,0x23b461fe
  431326:	repz jmp DWORD PTR [edx+0x47004713]
  43132d:	test   DWORD PTR [edi+ebp*1],0x4649f7
  431334:	aas    
  431335:	neg    DWORD PTR [edi+eiz*8-0x44]
  431339:	gs dec ebp
  43133b:	cli    
  43133c:	or     BYTE PTR [ebx-0x7],dl
  43133f:	mov    edi,0x78a4a77
  431344:	and    eax,0xb70418cf
  431349:	imul   eax,DWORD PTR [ecx],0x30
  43134c:	das    
  43134d:	mov    dl,al
  43134f:	and    esi,DWORD PTR [ebx]
  431351:	or     ecx,DWORD PTR [ebx-0x14f7b5f9]
  431357:	adc    BYTE PTR [ebp+0x32],ch
  43135a:	(bad)  
  43135b:	cs in  eax,0x89
  43135e:	shl    BYTE PTR [ebx],1
  431360:	xor    ecx,DWORD PTR [esi+edi*8]
  431363:	xchg   ebx,eax
  431364:	jne    0x4312f5
  431366:	test   al,0xd
  431368:	xor    eax,0x6400b493
  43136d:	fnstcw WORD PTR [ebp-0x20]
  431370:	xor    al,0xa4
  431372:	lods   eax,DWORD PTR ds:[esi]
  431373:	add    edi,DWORD PTR [edi-0x187714ee]
  431379:	sbb    al,0x3f
  43137b:	add    eax,DWORD PTR [eax]
  43137d:	add    BYTE PTR [edi],dh
  43137f:	mov    eax,ds:0xbaad12be
  431384:	jge    0x431363
  431386:	lock push esi
  431388:	or     al,BYTE PTR [eax+0x12d9e46d]
  43138e:	mov    ah,0x33
  431390:	push   ds
  431391:	sub    BYTE PTR [ebx],dh
  431393:	xor    al,0xe7
  431395:	ja     0x431329
  431397:	adc    eax,0x356a84a5
  43139c:	fdiv   QWORD PTR [ebx]
  43139e:	rcl    BYTE PTR [ecx],0x0
  4313a1:	push   ss
  4313a2:	stos   DWORD PTR es:[di],eax
  4313a4:	sbb    ebx,edi
  4313a6:	repnz cmp dl,ch
  4313a9:	mov    eax,0x606a20b1
  4313ae:	inc    esp
  4313af:	ss jmp 0x6154:0x736a6803
  4313b7:	out    dx,eax
  4313b8:	adc    edx,DWORD PTR [edi-0x7d]
  4313bb:	sub    al,0xc4
  4313bd:	and    DWORD PTR [edi-0x62],ebx
  4313c0:	jmp    0x4313ab
  4313c2:	scas   eax,DWORD PTR es:[edi]
  4313c3:	jns    0x4313f3
  4313c5:	lods   al,BYTE PTR ds:[esi]
  4313c6:	add    cl,0x9d
  4313c9:	pop    ecx
  4313ca:	xchg   DWORD PTR [edi+0x55],esp
  4313cd:	ftst   
  4313cf:	sbb    al,0xd1
  4313d1:	pop    es
  4313d2:	fst    QWORD PTR [ebx]
  4313d4:	xchg   ebp,eax
  4313d5:	or     DWORD PTR [eax-0x349f9a3f],eax
  4313db:	adc    ecx,DWORD PTR [eax]
  4313dd:	mov    ah,0xbd
  4313df:	mov    edx,esi
  4313e1:	fld    QWORD PTR [eax]
  4313e3:	add    BYTE PTR [esp+ebx*1],dh
  4313e6:	jno    0x4313e3
  4313e8:	mov    al,0x13
  4313ea:	addr16 inc esp
  4313ec:	and    al,0x87
  4313ee:	fwait
  4313ef:	cmp    BYTE PTR [ebx-0x62ad21e0],0x64
  4313f6:	xlat   BYTE PTR ds:[ebx]
  4313f7:	clc    
  4313f8:	cmp    al,0x26
  4313fa:	sub    al,BYTE PTR [edx+esi*4]
  4313fd:	hlt    
  4313fe:	dec    esi
  4313ff:	in     eax,0x48
  431401:	jno    0x4313dd
  431403:	xlat   BYTE PTR ds:[ebx]
  431404:	sub    al,0xc1
  431406:	pop    ebp
  431407:	pop    edi
  431408:	jae    0x43141d
  43140a:	add    dh,BYTE PTR [esi+0x54f91ba4]
  431410:	add    eax,0x9eec6c0e
  431415:	push   cs
  431416:	outs   dx,DWORD PTR ds:[esi]
  431417:	in     eax,dx
  431418:	mov    bh,0xb8
  43141a:	in     eax,0x94
  43141c:	in     eax,0xd
  43141e:	push   edx
  43141f:	cmp    ah,bl
  431421:	dec    esi
  431422:	or     ecx,ebp
  431424:	xor    al,0xb8
  431426:	shl    ebp,0x43
  431429:	aas    
  43142a:	scas   eax,DWORD PTR es:[edi]
  43142b:	sub    al,0x23
  43142d:	sub    BYTE PTR [ecx+0x69],0x34
  431431:	xor    al,0x1
  431433:	pop    esi
  431434:	dec    esp
  431435:	cdq    
  431436:	add    eax,DWORD PTR [edx]
  431438:	jnp    0x431492
  43143a:	inc    ecx
  43143b:	cmp    esi,ecx
  43143d:	adc    cl,BYTE PTR [ecx-0x46]
  431440:	fcom   QWORD PTR [edx]
  431442:	stc    
  431443:	jmp    0xedb222bc
  431448:	add    BYTE PTR [eax],al
  43144a:	test   DWORD PTR [eax],ebp
  43144c:	lods   eax,DWORD PTR ds:[esi]
  43144d:	fcomi  st,st(4)
  43144f:	adc    al,BYTE PTR [ecx+esi*1-0x46f7787b]
  431456:	test   DWORD PTR [eax],ebp
  431458:	leave  
  431459:	sti    
  43145a:	hlt    
  43145b:	adc    ch,BYTE PTR [ecx-0x35967918]
  431461:	sub    eax,eax
  431463:	adc    dh,BYTE PTR [ebx]
  431465:	sub    DWORD PTR [ecx+0x5],ebx
  431468:	dec    edi
  431469:	jb     0x43147b
  43146b:	sar    BYTE PTR [esi],0xe5
  43146e:	in     al,0xd
  431470:	outs   dx,DWORD PTR ds:[esi]
  431471:	fld    QWORD PTR ds:0xf36c0968
  431477:	xchg   BYTE PTR [ebp+0x36],dl
  43147a:	out    0x87,al
  43147c:	add    eax,0xf8a7e6c1
  431481:	into   
  431482:	add    cl,BYTE PTR [ebx]
  431484:	jg     0x431486
  431486:	jno    0x431473
  431488:	aaa    
  431489:	jmp    FWORD PTR [ebx]
  43148b:	or     ah,bh
  43148d:	aaa    
  43148e:	mov    eax,ds:0xe10850a
  431493:	cmp    BYTE PTR [esi-0x40],bh
  431496:	cmp    dl,BYTE PTR [esi+0x53]
  431499:	jmp    FWORD PTR [ebx]
  43149b:	or     al,0x80
  43149d:	jne    0x4314f1
  43149f:	xchg   ecx,eax
  4314a0:	cmp    eax,0x73683608
  4314a5:	inc    eax
  4314a6:	dec    esi
  4314a7:	(bad)  
  4314a8:	loopne 0x43144c
  4314aa:	mov    ch,0x81
  4314ac:	sti    
  4314ad:	add    DWORD PTR [eax],0x0
  4314b0:	fidiv  DWORD PTR [esi+edi*2]
  4314b3:	rcl    BYTE PTR [eax],0x7
  4314b6:	cld    
  4314b7:	jne    0x4314df
  4314b9:	int3   
  4314ba:	loopne 0x431456
  4314bc:	pop    eax
  4314bd:	data16 sti 
  4314bf:	(bad)  
  4314c0:	jmp    0x4314cf
  4314c2:	loope  0x431541
  4314c4:	(bad)  
  4314c5:	arpl   bx,di
  4314c7:	pop    esi
  4314c8:	cdq    
  4314c9:	ins    DWORD PTR es:[edi],dx
  4314ca:	jb     0x4314dc
  4314cc:	xor    BYTE PTR [ebx-0x5],ah
  4314cf:	jne    0x4314a3
  4314d1:	fs or  eax,0xf8f5fcc8
  4314d7:	pop    esi
  4314d8:	repz ja 0x4314e3
  4314db:	add    BYTE PTR [ebx+0x3283ec90],cl
  4314e1:	adc    al,0x53
  4314e3:	lea    ebp,[ebx-0x30ff4f77]
  4314e9:	xor    eax,0xd34e801
  4314ee:	stc    
  4314ef:	call   DWORD PTR ds:0x8bff487e
  4314f5:	sbb    eax,0x8e8e4012
  4314fa:	cmp    eax,0xb751bfc
  4314ff:	test   BYTE PTR [edi],dh
  431501:	mov    BYTE PTR [eax+eax*1],0x37
  431505:	dec    esi
  431506:	mov    edx,0x8c8afa8c
  43150b:	add    BYTE PTR [esi],dh
  43150d:	sbb    eax,DWORD PTR ds:0x51496e8
  431513:	add    BYTE PTR [eax],al
  431515:	add    BYTE PTR [eax+ecx*1+0x1af70d9d],ch
  43151c:	jbe    0x4314e0
  43151e:	out    0xb1,eax
  431520:	iret   
  431521:	sti    
  431522:	dec    eax
  431523:	shl    DWORD PTR [ebp-0x29],1
  431526:	mov    dl,0x40
  431528:	xor    DWORD PTR [edi+0x51c35],esi
  43152e:	pop    ds
  43152f:	xchg   edi,eax
  431530:	sti    
  431531:	jmp    FWORD PTR [eax]
  431533:	xchg   esi,eax
  431534:	dec    ecx
  431535:	dec    edi
  431536:	and    BYTE PTR [eax],cl
  431538:	dec    ecx
  431539:	cli    
  43153a:	add    DWORD PTR [edi+edi*4+0x3cefc2ef],eax
  431541:	mov    bh,0x34
  431543:	sbb    al,0x5
  431545:	add    BYTE PTR [edi],cl
  431547:	iret   
  431548:	sti    
  431549:	(bad)  
  43154a:	clc    
  43154b:	test   DWORD PTR [ecx+0x4f],ecx
  43154e:	lock (bad) 
  431550:	dec    eax
  431551:	cli    
  431552:	add    DWORD PTR [esi],ecx
  431554:	pop    ebx
  431555:	xchg   bh,bl
  431557:	add    eax,0x145b7333
  43155c:	shr    bh,1
  43155e:	dec    ebx
  43155f:	stos   BYTE PTR es:[edi],al
  431560:	add    eax,0xdcae43fa
  431565:	add    edi,DWORD PTR [ebx-0x5617fb26]
  43156b:	pop    ebp
  43156c:	push   edx
  43156d:	cli    
  43156e:	mov    al,0xe7
  431570:	cmp    al,0x10
  431572:	neg    DWORD PTR [edx]
  431574:	jl     0x4315ba
  431576:	xchg   ebx,eax
  431577:	popf   
  431578:	dec    esp
  431579:	cli    
  43157a:	add    BYTE PTR [eax],al
  43157c:	and    esi,DWORD PTR [ebp*8-0x28bff4b2]
  431583:	fnstenv [eax]
  431585:	fs aaa 
  431587:	pop    esp
  431588:	fwait
  431589:	adc    eax,ecx
  43158b:	dec    edi
  43158c:	stos   DWORD PTR es:[edi],eax
  43158d:	jbe    0x431551
  43158f:	mov    ah,0xc3
  431591:	jbe    0x431541
  431593:	mov    ah,0xd2
  431595:	xor    bl,BYTE PTR [eax]
  431597:	mov    dh,0x5d
  431599:	in     al,0x5d
  43159b:	inc    esp
  43159c:	in     al,0x4f
  43159e:	fld    TBYTE PTR [edx]
  4315a0:	ja     0xbd60ec48
  4315a6:	and    eax,0xe03fb358
  4315ab:	jp     0x4315a4
  4315ad:	cmp    esp,DWORD PTR [ebp+0x44]
  4315b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4315b1:	cmp    DWORD PTR [ebx+0x4c],ebp
  4315b4:	xor    al,0x89
  4315b6:	(bad)  
  4315b7:	jp     0x4315f0
  4315b9:	dec    ebx
  4315ba:	sbb    eax,0x5f41a460
  4315bf:	fnstcw WORD PTR [edi+ecx*1]
  4315c2:	into   
  4315c3:	sti    
  4315c4:	js     0x43162d
  4315c6:	inc    edx
  4315c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4315c8:	dec    BYTE PTR [edi]
  4315ca:	dec    eax
  4315cb:	ret    
  4315cc:	jns    0x4315c4
  4315ce:	out    dx,al
  4315cf:	or     dl,BYTE PTR [edx-0x12cb42f4]
  4315d5:	mov    DWORD PTR [esi],esi
  4315d7:	dec    edi
  4315d8:	mov    eax,DWORD PTR [eax+ebp*1]
  4315db:	(bad)  
  4315dd:	psadbw mm1,QWORD PTR [edi+0x74420000]
  4315e4:	jmp    0x3842:0x216e61ae
  4315eb:	xor    al,0xc8
  4315ed:	and    al,0x20
  4315ef:	cld    
  4315f0:	outs   dx,DWORD PTR ds:[esi]
  4315f1:	mov    dl,0x26
  4315f3:	xlat   BYTE PTR ds:[ebx]
  4315f4:	xchg   edi,eax
  4315f5:	lahf   
  4315f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315f7:	jnp    0x4315fa
  4315f9:	mov    cl,0xf0
  4315fb:	scas   al,BYTE PTR es:[edi]
  4315fc:	rcr    DWORD PTR [ebx+0x50],0xd7
  431600:	push   0x68af5466
  431605:	pop    edx
  431606:	push   esp
  431607:	mov    bh,0x68
  431609:	dec    esi
  43160a:	jne    0x43159f
  43160c:	jg     0x431682
  43160e:	mov    edi,0x97e68c9e
  431613:	clc    
  431614:	mov    WORD PTR [ebx-0x4d],gs
  431617:	add    eax,0x8f18424d
  43161c:	push   0x4c3b6512
  431621:	adc    ch,BYTE PTR [ebp+0x556a91f3]
  431627:	or     cl,BYTE PTR [ebp+0x2]
  43162a:	out    0x36,al
  43162c:	push   edi
  43162d:	cmp    ch,BYTE PTR [ebx-0x196eb33e]
  431633:	ss aaa 
  431635:	or     al,0x86
  431637:	sub    ah,BYTE PTR [ebp+0x1936e882]
  43163d:	xchg   DWORD PTR [edx],edi
  43163f:	(bad)  
  431640:	js     0x431612
  431642:	scas   al,BYTE PTR es:[edi]
  431643:	add    DWORD PTR ds:0x500001d,ebx
  431649:	dec    al
  43164b:	add    bl,BYTE PTR [ebp-0x4088ddd7]
  431651:	ss enter 0x9f92,0x9d
  431656:	mov    eax,ds:0x2301ced2
  43165b:	ret    
  43165c:	sbb    DWORD PTR [edi+0x1ba9668],ebx
  431662:	dec    ebp
  431663:	loop   0x4316cc
  431665:	repz mov WORD PTR [edx+0x7e],gs
  431669:	cmp    DWORD PTR [ebp+0x3d43227d],ebp
  43166f:	(bad)  
  431670:	out    dx,al
  431671:	add    DWORD PTR [ebp+0x0],ecx
  431674:	lds    edx,FWORD PTR [ebp-0x58]
  431677:	outs   dx,DWORD PTR ds:[esi]
  431678:	and    DWORD PTR [ebp+0x6e],edi
  43167b:	psubusw mm4,QWORD PTR [eax-0x511d5c5d]
  431682:	repz dec ebx
  431684:	imul   ebp,ecx,0xa9cfcff0
  43168a:	repz dec ebx
  43168c:	sub    al,bh
  43168e:	(bad)  
  43168f:	shl    edi,cl
  431691:	imul   esi,ebx,0xd79059b4
  431697:	or     eax,DWORD PTR [esi]
  431699:	jmp    0xc6a2:0x8a19076e
  4316a0:	jno    0x43164f
  4316a2:	mov    bl,0x4f
  4316a4:	and    eax,0xb9c6a2aa
  4316a9:	lods   eax,DWORD PTR ds:[esi]
  4316aa:	mov    edi,0x35000049
  4316af:	stos   BYTE PTR es:[edi],al
  4316b0:	mov    ds:0x9b9041c6,eax
  4316b5:	mov    ds:0xb40a29cc,eax
  4316ba:	mov    esi,0xb4a3a3ed
  4316bf:	push   esp
  4316c0:	or     dh,BYTE PTR [esi+eiz*8-0x69097a8]
  4316c7:	test   eax,0x51554bf3
  4316cc:	xor    DWORD PTR [ebx],ebx
  4316ce:	lea    ecx,[edi]
  4316d0:	mov    bh,0xb5
  4316d2:	sub    BYTE PTR [esi],0x34
  4316d5:	aas    
  4316d6:	jmp    0x7b:0xf16fa858
  4316dd:	aas    
  4316de:	cdq    
  4316df:	mov    ebx,0xc602b51b
  4316e4:	add    bh,cl
  4316e6:	gs pop esi
  4316e8:	fcmovb st,st(6)
  4316ea:	stc    
  4316eb:	(bad)  
  4316ec:	out    dx,eax
  4316ed:	mov    ds:0x5e6c637,eax
  4316f2:	cmp    DWORD PTR [ebx],0xffffffab
  4316f5:	jne    0x431677
  4316f7:	(bad)  
  4316f8:	push   0xfffffff4
  4316fa:	cld    
  4316fb:	mov    eax,ds:0x9ab27b4a
  431700:	jnp    0x431689
  431702:	loop   0x43176b
  431704:	push   ds
  431705:	outs   dx,DWORD PTR ds:[esi]
  431706:	and    BYTE PTR [edx-0x69],cl
  431709:	repnz cld 
  43170b:	push   ecx
  43170c:	and    al,0x31
  43170e:	aam    0x61
  431710:	xor    BYTE PTR [eax],cl
  431712:	add    BYTE PTR [eax],al
  431714:	ret    
  431715:	sbb    cl,cl
  431717:	icebp  
  431718:	cld    
  431719:	popa   
  43171a:	push   ds
  43171b:	scas   eax,DWORD PTR es:[edi]
  43171c:	fadd   DWORD PTR ds:0x86749a4b
  431722:	pop    ebx
  431723:	repnz mov ds:0x3ce08b5d,eax
  431729:	and    bl,BYTE PTR [edi+ebp*1]
  43172c:	lock mov ah,0x16
  43172f:	iret   
  431730:	mov    esp,0x1cf29b33
  431735:	xchg   DWORD PTR [esi],esp
  431737:	into   
  431738:	mov    BYTE PTR [edi-0x7b],ch
  43173b:	out    0x8e,al
  43173d:	loop   0x4316d9
  43173f:	inc    ebx
  431740:	ins    DWORD PTR es:[edi],dx
  431741:	mov    ebp,0xc244ce56
  431746:	ret    0x1f8
  431749:	nop
  43174a:	scas   eax,DWORD PTR es:[edi]
  43174b:	jl     0x43170c
  43174d:	es pop ecx
  43174f:	stos   DWORD PTR es:[edi],eax
  431750:	not    DWORD PTR [ebp+ecx*2+0x589262be]
  431757:	and    bl,0x62
  43175a:	add    DWORD PTR [eax],eax
  43175c:	aaa    
  43175d:	stos   BYTE PTR es:[edi],al
  43175e:	scas   al,BYTE PTR es:[edi]
  43175f:	push   edx
  431760:	dec    edi
  431761:	sub    eax,0x5e370003
  431766:	iret   
  431767:	pop    es
  431768:	pop    edi
  431769:	xor    al,0x72
  43176b:	aaa    
  43176c:	or     DWORD PTR [edi+edx*1],esi
  43176f:	div    BYTE PTR [eax]
  431771:	es stos BYTE PTR es:[edi],al
  431773:	add    edi,DWORD PTR [eax]
  431775:	clc    
  431776:	(bad)  
  431777:	jle    0x431779
  431779:	add    bl,ch
  43177b:	push   edi
  43177c:	add    BYTE PTR [ebp+ebp*4+0x1b],cl
  431780:	and    eax,DWORD PTR [ecx-0xc7af362]
  431786:	stos   DWORD PTR es:[edi],eax
  431787:	mov    dh,0x3e
  431789:	dec    ebp
  43178a:	lea    ecx,[edx+eiz*4]
  43178d:	int3   
  43178e:	fs jo  0x43177b
  431791:	pop    ebx
  431792:	mov    ch,0x3d
  431794:	ror    BYTE PTR [ebx-0x4d],1
  431797:	repz dec esi
  431799:	cmc    
  43179a:	mov    ecx,0xa25c1af5
  43179f:	mov    bh,0xb8
  4317a1:	dec    ebx
  4317a2:	adc    dh,ah
  4317a4:	rsm    
  4317a6:	add    ebx,edi
  4317a8:	lods   al,BYTE PTR ds:[esi]
  4317a9:	add    BYTE PTR [edi],dh
  4317ab:	mov    edi,0xc4ce85d
  4317b0:	cwde   
  4317b1:	pop    ss
  4317b2:	ja     0x431772
  4317b4:	pop    ebp
  4317b5:	and    BYTE PTR ds:0xeb5c880c,bh
  4317bb:	mov    al,0x80
  4317bd:	dec    ebx
  4317be:	sub    eax,0x6135fe42
  4317c3:	xor    al,0x63
  4317c5:	inc    ebx
  4317c6:	push   0x42e3ce0b
  4317cb:	je     0x4317b7
  4317cd:	or     al,0x80
  4317d0:	cld    
  4317d1:	adc    eax,0x2065b9e8
  4317d6:	std    
  4317d7:	or     ecx,DWORD PTR [eax-0x4c]
  4317da:	fmul   DWORD PTR [ecx+0x4a66]
  4317e0:	in     eax,dx
  4317e1:	mov    esi,0xc7f75f2b
  4317e6:	add    eax,ebp
  4317e8:	jns    0x431809
  4317ea:	cmp    BYTE PTR [eax],cl
  4317ec:	loopne 0x4317e1
  4317ee:	mov    BYTE PTR [ebx+0x4a90d6e6],bh
  4317f4:	fs jb  0x431830
  4317f7:	adc    eax,0x7093cb93
  4317fc:	dec    edi
  4317fd:	retf   0x7738
  431800:	clc    
  431801:	enter  0x6f10,0x14
  431805:	stos   BYTE PTR es:[edi],al
  431806:	(bad)  
  431807:	mov    BYTE PTR [ebx-0x457c1739],bl
  43180d:	jg     0x431869
  43180f:	push   ebx
  431810:	popf   
  431811:	mov    eax,ds:0xf0e5936c
  431816:	dec    ebp
  431817:	daa    
  431818:	jecxz  0x43188b
  43181a:	ins    BYTE PTR es:[edi],dx
  43181b:	scas   al,BYTE PTR es:[edi]
  43181c:	ss repz jg 0x10a9652a
  431824:	jecxz  0x43186f
  431826:	jno    0x4317bd
  431828:	add    esi,ebx
  43182a:	or     eax,0xad42e88b
  43182f:	repnz inc ecx
  431831:	test   al,0x29
  431833:	push   ebx
  431834:	push   0xffffffb2
  431836:	pop    ss
  431837:	inc    esi
  431838:	jge    0x431854
  43183a:	bound  eax,QWORD PTR [ebx-0x7b]
  43183d:	and    bl,bh
  43183f:	out    0x61,eax
  431841:	into   
  431842:	imul   edx,DWORD PTR [ebx+0x0],0x0
  431846:	test   DWORD PTR [edx-0x38e5f308],ebp
  43184c:	loope  0x431843
  43184e:	add    al,BYTE PTR [esi+0x48]
  431851:	fwait
  431852:	sbb    eax,0xfcb5e94b
  431857:	retf   0x53a5
  43185a:	or     eax,0xecb5e8d7
  43185f:	retf   0x18
  431862:	pusha  
  431863:	xchg   esi,eax
  431864:	mov    eax,0x7fe1822d
  431869:	pop    ds
  43186a:	mov    al,0x9b
  43186c:	aas    
  43186d:	xchg   esp,eax
  43186e:	test   BYTE PTR [esi],cl
  431870:	cmp    esp,DWORD PTR [ebx-0x1]
  431873:	test   eax,0xdff97b6b
  431878:	ja     0x4318e4
  43187a:	je     0x4318e2
  43187c:	xchg   edi,eax
  43187d:	inc    ebx
  43187e:	jne    0x431887
  431880:	mov    ch,0xef
  431882:	les    esi,FWORD PTR [ecx-0x44e0a7a6]
  431888:	adc    BYTE PTR [ecx+eax*2-0xfd03d82],dl
  43188f:	inc    ebp
  431890:	jae    0x94f08cf0
  431896:	xor    BYTE PTR ds:0x2c066f3b,ah
  43189c:	mov    eax,ds:0x6ba13954
  4318a1:	jnp    0x431917
  4318a3:	pop    es
  4318a4:	cmp    al,0x4f
  4318a6:	mov    ah,0x1c
  4318a8:	add    DWORD PTR ds:0x83a0000,edx
  4318ae:	int3   
  4318af:	stos   DWORD PTR es:[edi],eax
  4318b0:	rcl    BYTE PTR [ecx-0x603e14c],0xb
  4318b7:	dec    edi
  4318b8:	loopne 0x43188f
  4318ba:	xchg   edi,eax
  4318bb:	push   ds
  4318bc:	inc    esi
  4318bd:	or     BYTE PTR [ebp-0x689ecf18],dh
  4318c3:	add    ecx,ecx
  4318c5:	or     eax,0x642203b5
  4318ca:	aas    
  4318cb:	imul   ebp,ecx,0xffffffa0
  4318ce:	imul   esi,DWORD PTR [edi-0x7c],0xffffff9b
  4318d2:	mov    bh,0xbf
  4318d4:	arpl   WORD PTR [si-0x2b82],si
  4318d9:	xchg   ebp,eax
  4318da:	jmp    FWORD PTR [edx+0x37]
  4318dd:	xor    al,0xe
  4318df:	inc    ebx
  4318e0:	(bad)  [ecx+0x2e]
  4318e3:	dec    esi
  4318e4:	sub    al,0xdd
  4318e6:	jo     0x4318af
  4318e8:	retf   0xbfa0
  4318eb:	xchg   DWORD PTR [ebx],esp
  4318ed:	inc    edi
  4318ee:	cdq    
  4318ef:	mov    edi,0x73f42c1
  4318f4:	aaa    
  4318f5:	enter  0xeb75,0xb6
  4318f9:	aaa    
  4318fa:	rol    DWORD PTR [ecx],1
  4318fc:	aaa    
  4318fd:	sbb    ebp,DWORD PTR [esi+0x40fec51]
  431903:	add    BYTE PTR [edi],dh
  431905:	stos   BYTE PTR es:[edi],al
  431906:	outs   dx,DWORD PTR ds:[esi]
  431907:	je     0x43197c
  431909:	xchg   BYTE PTR [esi],bh
  43190b:	shl    edx,0x1
  43190e:	add    eax,0x840000e8
  431913:	adc    BYTE PTR ds:0xb4d9bc00,al
  431919:	cli    
  43191a:	sub    dh,BYTE PTR [ebx]
  43191c:	hlt    
  43191d:	aas    
  43191e:	aaa    
  43191f:	cs push ebx
  431921:	mov    dl,bh
  431923:	fiadd  WORD PTR ds:0x699738c2
  431929:	jmp    DWORD PTR [eax+0x1b]
  43192c:	jo     0x4319aa
  43192e:	mov    edx,DWORD PTR [eax+0x775f00bd]
  431934:	idiv   edi
  431936:	dec    eax
  431937:	xchg   BYTE PTR [ecx+0x4f],al
  43193a:	inc    eax
  43193b:	and    BYTE PTR [ecx-0x6],dl
  43193e:	and    dh,BYTE PTR [ebx-0x12]
  431941:	aas    
  431942:	aaa    
  431943:	out    0x42,al
  431945:	jae    0x4318e9
  431947:	sub    BYTE PTR [edi+0x6f9886f7],0x9f
  43194e:	sbb    al,BYTE PTR [edx+0x37be5049]
  431954:	inc    ebp
  431955:	cli    
  431956:	out    0x33,eax
  431958:	imul   ecx,DWORD PTR [ebx+0x37],0x7f
  43195c:	retf   0xb376
  43195f:	stos   DWORD PTR es:[edi],eax
  431960:	push   ebx
  431961:	dec    eax
  431962:	in     eax,dx
  431963:	arpl   sp,ax
  431965:	add    dl,BYTE PTR [ecx+0x9]
  431968:	aad    0x0
  43196a:	test   DWORD PTR [ecx],ecx
  43196c:	into   
  43196d:	adc    ebp,DWORD PTR [eax]
  43196f:	je     0x43195b
  431971:	jle    0x431903
  431973:	jle    0x431917
  431975:	jbe    0x431977
  431977:	add    BYTE PTR [ebx-0x42b7e22d],dh
  43197d:	arpl   WORD PTR [edi],dx
  43197f:	out    dx,al
  431980:	mov    al,ds:0x703aa25
  431985:	mov    ebx,0xaebb4b9d
  43198a:	bound  ecx,QWORD PTR [ebp+ebx*4+0x8]
  43198e:	fwait
  43198f:	jbe    0x431944
  431991:	shr    ebp,cl
  431993:	inc    edi
  431994:	lea    esp,[ebx-0x19]
  431997:	in     eax,dx
  431998:	hlt    
  431999:	and    al,0x2a
  43199b:	add    al,0xba
  43199d:	repz dec ebp
  43199f:	out    0xb1,eax
  4319a1:	outs   dx,BYTE PTR ds:[esi]
  4319a2:	sar    BYTE PTR [ecx-0x4c],cl
  4319a5:	outs   dx,BYTE PTR ds:[esi]
  4319a6:	jb     0x4319f3
  4319a8:	ins    DWORD PTR es:[edi],dx
  4319a9:	or     BYTE PTR [ebx],bl
  4319ab:	cmp    DWORD PTR [eax+0x8],0x66
  4319af:	xchg   ecx,eax
  4319b0:	ror    BYTE PTR [eax+esi*4],0x47
  4319b4:	pop    eax
  4319b5:	pop    ebx
  4319b6:	mov    eax,0x25f14d49
  4319bb:	inc    edi
  4319bc:	aaa    
  4319bd:	inc    ebp
  4319be:	nop
  4319bf:	inc    edi
  4319c0:	ret    
  4319c1:	dec    DWORD PTR [edi+0x2a22ecf1]
  4319c7:	add    al,0xb7
  4319c9:	mov    DWORD PTR [edi+0x4],edi
  4319cc:	stos   BYTE PTR es:[edi],al
  4319cd:	das    
  4319ce:	mov    esp,0x1970f43
  4319d3:	call   0x25024e0c
  4319d8:	jo     0x4319e1
  4319da:	mov    bl,ah
  4319dc:	add    BYTE PTR [eax],al
  4319de:	pop    esp
  4319df:	retf   0x651d
  4319e2:	repz pop es
  4319e4:	xchg   BYTE PTR [esp+ecx*4-0x775b7989],ch
  4319eb:	ja     0x431973
  4319ed:	lods   al,BYTE PTR ds:[esi]
  4319ee:	test   BYTE PTR [edi+0x6b],dh
  4319f1:	ds pop esi
  4319f3:	jo     0x4319ee
  4319f5:	cdq    
  4319f6:	out    dx,al
  4319f7:	or     DWORD PTR [edi-0x69],ecx
  4319fa:	dec    ebx
  4319fb:	cmp    cl,0x26
  4319fe:	(bad)  
  4319ff:	das    
  431a00:	adc    al,0xa9
  431a02:	xor    al,0xbd
  431a04:	ds add eax,0xe26df23c
  431a0a:	aas    
  431a0b:	push   cs
  431a0c:	add    ch,cl
  431a0e:	xor    al,0x3b
  431a10:	jle    0x431a1d
  431a12:	xor    esi,DWORD PTR [ecx+eax*1]
  431a15:	mov    al,0x67
  431a17:	dec    DWORD PTR [eax]
  431a19:	gs dec edi
  431a1b:	pop    es
  431a1c:	stc    
  431a1d:	jmp    0xea34a2d7
  431a22:	xor    DWORD PTR [ebp+0x3434e9b0],0x77072486
  431a2c:	mov    WORD PTR [ebx+esi*8],gs
  431a2f:	nop
  431a30:	adc    BYTE PTR [esi-0x16943bd8],bh
  431a36:	stc    
  431a37:	pop    ds
  431a38:	adc    edx,ebx
  431a3a:	je     0x431a43
  431a3c:	jle    0x4319e7
  431a3e:	dec    ecx
  431a3f:	mov    al,0x92
  431a41:	jmp    0x34771a46
  431a46:	mov    WORD PTR [edi+eax*4],gs
  431a49:	mov    al,0xc1
  431a4b:	fisubr WORD PTR [eax+0xe0001b5]
  431a51:	xor    eax,DWORD PTR [esi-0x4839173]
  431a57:	jmp    FWORD PTR [edi]
  431a59:	outs   dx,DWORD PTR ds:[esi]
  431a5a:	push   0x3a18b610
  431a5f:	call   FWORD PTR [ecx-0x1b8b4779]
  431a65:	mov    edi,DWORD PTR [ebp-0x60]
  431a68:	mov    ebp,DWORD PTR [esi-0x5]
  431a6b:	push   eax
  431a6c:	mov    esi,DWORD PTR [eax+edx*4-0x7a918605]
  431a73:	popf   
  431a74:	scas   al,BYTE PTR es:[edi]
  431a75:	jnp    0x431a72
  431a77:	push   DWORD PTR [esi+0x3d]
  431a7a:	jl     0x431a7a
  431a7c:	sbb    DWORD PTR [edi-0x76778b48],eax
  431a82:	mov    bh,0x50
  431a84:	es mov eax,0x8749fe7c
  431a8a:	mov    eax,0x2ecdc74
  431a8f:	push   edi
  431a90:	sub    esi,DWORD PTR [eax+ecx*4+0x487099f9]
  431a97:	mov    ebx,DWORD PTR [ebp-0x3d]
  431a9a:	pop    esi
  431a9b:	add    BYTE PTR [esi],dh
  431a9d:	ins    BYTE PTR es:[edi],dx
  431a9e:	add    DWORD PTR [eax],eax
  431aa0:	mov    es,WORD PTR [esi-0x15db8b48]
  431aa6:	clc    
  431aa7:	mov    WORD PTR [eax],es
  431aa9:	add    bl,ah
  431aab:	jg     0x431aa6
  431aad:	(bad)  
  431aae:	jns    0x431a6f
  431ab0:	pop    esi
  431ab1:	add    BYTE PTR [esi-0x6601ceb2],al
  431ab7:	mov    bl,0xb8
  431ab9:	je     0x431b2b
  431abb:	jge    0x431b3a
  431abd:	nop
  431abe:	xchg   DWORD PTR [eax-0x5],esi
  431ac1:	push   eax
  431ac2:	(bad)
  431ac5:	call   FWORD PTR [esi]
  431ac7:	add    bl,al
  431ac9:	inc    ebp
  431aca:	aaa    
  431acb:	sahf   
  431acc:	add    al,0xe8
  431ace:	bound  esp,QWORD PTR [ecx+0x920fa3e]
  431ad4:	dec    ecx
  431ad5:	cli    
  431ad6:	inc    edx
  431ad7:	pop    ss
  431ad8:	repnz aas 
  431ada:	aaa    
  431adb:	push   ebp
  431adc:	or     dh,BYTE PTR [ebp+0x7]
  431adf:	out    0x82,eax
  431ae1:	dec    eax
  431ae2:	add    BYTE PTR [edi-0x6c7d05c2],cl
  431ae8:	ds adc al,0x43
  431aeb:	or     al,ch
  431aed:	jmp    DWORD PTR ds:0xd37c845d
  431af3:	popa   
  431af4:	std    
  431af5:	push   DWORD PTR [edi]
  431af7:	push   ss
  431af8:	jns    0x431ae6
  431afa:	sar    DWORD PTR [esi],1
  431afc:	mov    WORD PTR ds:[edx-0x3f05b59d],?
  431b03:	retf   
  431b04:	fiadd  DWORD PTR [eax]
  431b06:	dec    ebp
  431b07:	es aad 0x2
  431b0a:	mov    bh,0x1b
  431b0c:	add    eax,0xa8000052
  431b11:	add    BYTE PTR ds:0x781af70f,dl
  431b17:	mov    edi,0x1dacc22
  431b1c:	call   0x8ed293b0
  431b21:	push   ss
  431b22:	ds dec edi
  431b24:	mov    dl,0x98
  431b26:	ins    BYTE PTR es:[edi],dx
  431b27:	idiv   BYTE PTR [eax-0x1a]
  431b2a:	mov    ah,0x51
  431b2c:	pop    edi
  431b2d:	jns    0x431b33
  431b2f:	add    BYTE PTR [edi],dh
  431b31:	pop    DWORD PTR [ebx+esi*2+0x49]
  431b35:	and    eax,0xf4c78470
  431b3a:	cmp    eax,0x5524e7fa
  431b3f:	push   ebx
  431b40:	push   es
  431b41:	aad    0x3d
  431b43:	xor    DWORD PTR [edi+0x34],0x16
  431b47:	add    BYTE PTR [ebp+0x6f],dh
  431b4a:	xchg   edi,eax
  431b4b:	add    bh,BYTE PTR [ecx-0x715b7092]
  431b51:	imul   esp,DWORD PTR [ecx-0x714674c0],0xe5f40c82
  431b5b:	add    esi,DWORD PTR [edi]
  431b5d:	pop    esi
  431b5e:	pop    ss
  431b5f:	ja     0x431b24
  431b61:	jecxz  0x431bc9
  431b63:	inc    esp
  431b64:	std    
  431b65:	sbb    ebp,edi
  431b67:	(bad)  
  431b68:	inc    BYTE PTR [esi+eiz*2]
  431b6b:	xchg   BYTE PTR [eax+0x1944500b],dh
  431b71:	hlt    
  431b72:	arpl   WORD PTR ds:0x1fd80000,si
  431b78:	imul   eax,DWORD PTR [ebp-0x23],0x4183edb8
  431b7f:	je     0x431b6b
  431b81:	js     0x431b78
  431b83:	arpl   WORD PTR [edi],sp
  431b85:	sub    eax,0x866df411
  431b8a:	cmp    ch,0x17
  431b8d:	inc    esp
  431b8e:	jo     0x431b47
  431b90:	pop    ebp
  431b91:	xor    ebp,DWORD PTR [esp+eax*1-0x4c54a4f8]
  431b98:	add    BYTE PTR [ecx+esi*4-0x14],al
  431b9c:	call   0x6627:0xb6046644
  431ba3:	jo     0x431b8f
  431ba5:	xor    BYTE PTR [ebx],0x3c
  431ba8:	mov    esp,0xd73278c7
  431bad:	sbb    DWORD PTR [edi+0x21],ebx
  431bb0:	sub    al,BYTE PTR [esi+edx*4]
  431bb3:	adc    esi,DWORD PTR [ecx-0x3d4e9f39]
  431bb9:	inc    ebx
  431bba:	in     al,0x3a
  431bbc:	push   esp
  431bbd:	inc    ebx
  431bbe:	add    BYTE PTR ds:0x3718dc02,al
  431bc4:	inc    ecx
  431bc5:	jmp    0xa6440bd6
  431bca:	hlt    
  431bcb:	mov    bh,0x86
  431bcd:	test   eax,0x81f8fe73
  431bd2:	xchg   edi,eax
  431bd3:	mov    dh,bh
  431bd5:	mov    es,esi
  431bd7:	mov    al,0xb9
  431bd9:	jg     0x431bdb
  431bdb:	add    BYTE PTR [esi+edi*8-0x17],dh
  431bdf:	cwde   
  431be0:	sar    ch,1
  431be2:	clc    
  431be3:	add    esi,DWORD PTR [ecx]
  431be5:	mov    cl,0xb6
  431be7:	mov    eax,ds:0xc1f8fe41
  431bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431bed:	mov    al,0xd1
  431bef:	pop    ebp
  431bf0:	je     0x431bf0
  431bf2:	jmp    0xf940cf69
  431bf7:	bound  ebp,QWORD PTR [ebx+esi*2+0x69]
  431bfb:	call   0x3ec45034
  431c00:	cs ins BYTE PTR es:[edi],dx
  431c02:	adc    al,0xa9
  431c04:	xor    al,0xbb
  431c06:	cs dec ecx
  431c08:	pop    ds
  431c09:	je     0x431c0c
  431c0b:	je     0x431bbb
  431c0d:	sti    
  431c0e:	cld    
  431c0f:	push   ds
  431c10:	hlt    
  431c11:	jb     0x431b99
  431c13:	ins    BYTE PTR es:[edi],dx
  431c14:	repz or bh,cl
  431c17:	push   cs
  431c18:	mov    edi,esi
  431c1a:	iret   
  431c1b:	je     0x431bcb
  431c1d:	fcomi  st,st(7)
  431c1f:	(bad)  
  431c20:	cmc    
  431c21:	jb     0x431ba9
  431c23:	ins    BYTE PTR es:[edi],dx
  431c24:	or     eax,DWORD PTR ds:0xfe64eef9
  431c2a:	iret   
  431c2b:	je     0x431ca4
  431c2d:	sar    DWORD PTR [ecx+0x13434cd],cl
  431c33:	shl    ebp,0x0
  431c36:	stc    
  431c37:	jmp    0xecd503
  431c3c:	jo     0x431cb4
  431c3e:	sti    
  431c3f:	push   eax
  431c40:	add    BYTE PTR [eax],al
  431c42:	jecxz  0x431bef
  431c44:	sar    bl,0x81
  431c47:	jbe    0x431c91
  431c49:	(bad)  
  431c4a:	fisttp DWORD PTR [esi-0x186e0006]
  431c50:	test   DWORD PTR [ebp-0x4be1a],eax
  431c56:	outs   dx,BYTE PTR ds:[esi]
  431c57:	mov    bl,0xc3
  431c59:	push   eax
  431c5a:	jno    0x431c27
  431c5c:	add    al,0x0
  431c5e:	push   cs
  431c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431c60:	lods   eax,DWORD PTR ds:[esi]
  431c61:	inc    eax
  431c62:	mov    WORD PTR [esi-0x5],?
  431c65:	call   0x386629
  431c6a:	lea    edi,[ebx+0x14]
  431c6d:	test   DWORD PTR [esi-0xb],ecx
  431c70:	add    BYTE PTR [ebx-0x4b1f18e8],cl
  431c76:	push   ds
  431c77:	jne    0x431c74
  431c79:	xor    DWORD PTR [ebx],0x58
  431c7c:	rol    BYTE PTR [ebx-0x32],cl
  431c7f:	jne    0x431cee
  431c81:	or     ah,ah
  431c83:	ss cld 
  431c85:	adc    eax,0x41285a
  431c8a:	arpl   WORD PTR [eax+ecx*8+0x487611fc],bp
  431c91:	call   0x3e12dc
  431c96:	loope  0x431c1e
  431c98:	add    DWORD PTR [esi+0x57],ebx
  431c9b:	jp     0x431cea
  431c9d:	mov    eax,DWORD PTR [edx-0x48]
  431ca0:	in     al,dx
  431ca1:	or     BYTE PTR [esi+esi*1+0x5301],bl
  431ca8:	test   al,0x25
  431caa:	mov    bl,0x75
  431cac:	frstorw [edi]
  431caf:	jmp    esp
  431cb1:	sub    eax,DWORD PTR [esi-0x4bda97b]
  431cb7:	push   DWORD PTR [edi]
  431cb9:	cmp    eax,0x962f7442
  431cbe:	dec    ebx
  431cbf:	out    0xd8,eax
  431cc1:	cmc    
  431cc2:	cmp    dl,bh
  431cc4:	push   eax
  431cc5:	inc    edi
  431cc6:	or     eax,0x8818ea87
  431ccb:	test   BYTE PTR [edi],bh
  431ccd:	iret   
  431cce:	inc    edx
  431ccf:	cli    
  431cd0:	dec    edi
  431cd1:	popf   
  431cd2:	sar    ecx,0x30
  431cd5:	cwde   
  431cd6:	cmp    eax,0xb88e5373
  431cdb:	adc    esi,DWORD PTR [edi]
  431cdd:	daa    
  431cde:	or     eax,0x41dfa2fb
  431ce3:	je     0x431d0c
  431ce5:	adc    BYTE PTR [eax],0x3c
  431ce8:	and    al,0x4b
  431cea:	std    
  431ceb:	test   bh,dh
  431ced:	pop    es
  431cee:	adc    edi,ebx
  431cf0:	cmp    bl,0x41
  431cf3:	adc    al,0x2f
  431cf5:	std    
  431cf6:	(bad)  
  431cf7:	push   DWORD PTR [ebp+0x30734263]
  431cfd:	fidivr DWORD PTR [ebp-0x6]
  431d00:	push   ebx
  431d01:	mov    ebp,0xa2f72d72
  431d06:	loop   0x431d5e
  431d08:	dec    BYTE PTR [ebp+0x19]
  431d0b:	add    BYTE PTR [eax],al
  431d0d:	add    BYTE PTR [edi+0x62f4260c],al
  431d13:	xchg   BYTE PTR [ecx],dh
  431d15:	jle    0x431cba
  431d17:	sti    
  431d18:	int    0x51
  431d1a:	mov    esp,0xf70fbce0
  431d1f:	or     ch,dh
  431d21:	(bad)  
  431d22:	add    al,0x88
  431d24:	shl    bh,0xe7
  431d27:	popf   
  431d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431d29:	add    esp,esp
  431d2b:	popf   
  431d2c:	int    0xfa
  431d2e:	or     dl,BYTE PTR [ebx]
  431d30:	lea    ebx,[eax+edi*2+0x34]
  431d34:	push   edx
  431d35:	add    esi,DWORD PTR [edi]
  431d37:	xor    al,0x6a
  431d39:	inc    eax
  431d3a:	xchg   BYTE PTR [edi+0x68f1b6aa],dh
  431d40:	arpl   si,di
  431d42:	cld    
  431d43:	and    ebp,DWORD PTR [edx]
  431d45:	add    al,0xbe
  431d47:	pop    edi
  431d48:	repnz lods eax,DWORD PTR ds:[esi]
  431d4a:	xor    al,0x1
  431d4c:	ss adc cl,bl
  431d4f:	aaa    
  431d50:	inc    esp
  431d51:	or     bl,bh
  431d53:	or     edx,DWORD PTR [ecx+0x6601333d]
  431d59:	(bad)  
  431d5a:	sbb    BYTE PTR [ebp+ebx*2-0x3a],ah
  431d5e:	and    al,0x64
  431d60:	cmp    ebp,DWORD PTR [esi-0x2ae499e7]
  431d66:	or     eax,0x8340e687
  431d6b:	cld    
  431d6c:	outs   dx,DWORD PTR ds:[esi]
  431d6d:	pop    ecx
  431d6e:	mov    ebx,0xcedf3
  431d73:	add    ah,bh
  431d75:	xchg   BYTE PTR [esi+0x40],dl
  431d78:	add    eax,0x3733d5b5
  431d7d:	mov    bl,ah
  431d7f:	inc    eax
  431d80:	jnp    0x431dae
  431d82:	imul   edi,DWORD PTR [esi+0x44bc9830],0xffffffd9
  431d89:	aaa    
  431d8a:	and    dh,al
  431d8c:	int    0x32
  431d8e:	das    
  431d8f:	mov    dh,0xc8
  431d91:	add    BYTE PTR [eax],dl
  431d93:	loopne 0x431d47
  431d95:	jbe    0x431db6
  431d97:	loope  0x431da2
  431d99:	jmp    0x431dc7
  431d9b:	or     esi,DWORD PTR [edi]
  431d9d:	addr16 pop ebp
  431d9f:	scas   eax,DWORD PTR es:[edi]
  431da0:	push   esp
  431da1:	mov    al,0x69
  431da3:	das    
  431da4:	push   0x3ea35
  431da9:	push   0xffffff8f
  431dab:	hlt    
  431dac:	enter  0x1ae,0x64
  431db0:	sbb    BYTE PTR [eax],al
  431db2:	stc    
  431db3:	out    dx,al
  431db4:	data16 jo 0x431e08
  431db7:	push   ebx
  431db8:	pop    edi
  431db9:	jo     0x431dee
  431dbb:	ret    0x2828
  431dbe:	xor    edx,edi
  431dc0:	je     0x431dc2
  431dc2:	jle    0x431d6d
  431dc4:	sahf   
  431dc5:	xchg   ecx,eax
  431dc6:	mov    esp,?
  431dc8:	je     0x431dfb
  431dca:	inc    ecx
  431dcb:	jmp    0xb4e0d577
  431dd0:	add    dh,bh
  431dd2:	push   ecx
  431dd3:	scas   al,BYTE PTR es:[edi]
  431dd4:	loope  0x431d8f
  431dd6:	ss mov ch,0x0
  431dd9:	add    BYTE PTR [edx+0x74],cl
  431ddc:	add    DWORD PTR [edx+0x4d7eb110],edx
  431de2:	jbe    0x431dde
  431de4:	clc    
  431de5:	cmp    DWORD PTR [eax+0x28],ebx
  431de8:	popa   
  431de9:	(bad)  
  431deb:	inc    DWORD PTR [ebp-0x6ff609c]
  431df1:	jbe    0x431dde
  431df3:	cli    
  431df4:	push   cs
  431df5:	imul   esp,DWORD PTR [esp+esi*2],0x837b6c01
  431dfc:	aaa    
  431dfd:	ins    BYTE PTR es:[edi],dx
  431dfe:	mov    esi,0x2056f6d3
  431e03:	outs   dx,DWORD PTR ds:[esi]
  431e04:	clc    
  431e05:	aaa    
  431e06:	lea    edx,[ebx+0x6f60ac86]
  431e0c:	xchg   BYTE PTR [edi+ebx*2+0x0],ah
  431e10:	stc    
  431e11:	ss jmp 0x431e0e
  431e14:	shl    BYTE PTR [ebx+esi*2-0x7d],1
  431e18:	mov    edi,0xc180b58f
  431e1d:	mov    ds:0x9cf826ef,al
  431e22:	loopne 0x431e72
  431e24:	rol    DWORD PTR [edi+0x578ab],0xb
  431e2b:	in     eax,dx
  431e2c:	mov    eax,0x791c8950
  431e31:	push   ss
  431e32:	into   
  431e33:	xor    edi,DWORD PTR [esi-0x40]
  431e36:	add    esi,DWORD PTR [edi]
  431e38:	test   al,0x1
  431e3a:	test   DWORD PTR ds:0x105f,ebp
  431e40:	mov    DWORD PTR [esp+edi*2-0x4cfbc18],edi
  431e47:	dec    DWORD PTR [ecx]
  431e49:	fidivr WORD PTR [esi-0x3d]
  431e4c:	adc    eax,0x8774bdb3
  431e51:	jne    0x431e57
  431e53:	add    BYTE PTR [ebx],ah
  431e55:	stos   DWORD PTR es:[edi],eax
  431e56:	in     al,dx
  431e57:	cmp    DWORD PTR [edx+0x1f],0xe21e0002
  431e5e:	push   edx
  431e5f:	push   edi
  431e60:	inc    esp
  431e61:	sub    ah,bh
  431e63:	jne    0x431e7b
  431e65:	stos   BYTE PTR es:[edi],al
  431e66:	(bad)  [ebp-0x17aeb7c5]
  431e6c:	xor    dh,BYTE PTR [edi]
  431e6e:	sti    
  431e6f:	dec    edi
  431e71:	jmp    0x431e5b
  431e73:	mov    di,0xf4eb
  431e77:	shl    DWORD PTR [esi-0x5cce9cde],0x48
  431e7e:	daa    
  431e7f:	leave  
  431e80:	dec    ebp
  431e81:	js     0x431f01
  431e83:	push   esp
  431e84:	shr    DWORD PTR [esi],cl
  431e86:	xor    DWORD PTR [ebx+edi*8+0x3a],edx
  431e8a:	cmp    BYTE PTR [ebx+0x26e3776],al
  431e90:	int    0x72
  431e92:	inc    ecx
  431e93:	add    DWORD PTR [edi],0x2b
  431e96:	addr16 jmp 0x1fd2:0x8f44d
  431e9e:	cld    
  431e9f:	jne    0x431e4f
  431ea1:	mov    ds:0xe8ad,eax
  431ea6:	aaa    
  431ea7:	daa    
  431ea8:	aaa    
  431ea9:	cli    
  431eaa:	(bad)  
  431eab:	push   esi
  431eac:	add    edi,edx
  431eae:	nop
  431eaf:	mov    ds:0x87ba5614,al
  431eb4:	xor    al,0xe7
  431eb6:	cmp    al,0x11
  431eb8:	aaa    
  431eb9:	cli    
  431eba:	sub    BYTE PTR [edi-0x37],al
  431ebd:	adc    esi,DWORD PTR [esp+eiz*8+0x451373fd]
  431ec4:	mov    ecx,0x175fef0b
  431ec9:	mov    eax,0xffbd9927
  431ece:	fimul  WORD PTR ds:0x4c8f022a
  431ed4:	mov    DWORD PTR [edi],edi
  431ed6:	aaa    
  431ed7:	jae    0x431ed8
  431ed9:	pop    edx
  431eda:	out    0x91,eax
  431edc:	xchg   BYTE PTR ds:[esp+eiz*4],ah
  431ee0:	jecxz  0x431eca
  431ee2:	sub    bl,BYTE PTR [edi+0x319c1b88]
  431ee8:	in     eax,0x4e
  431eea:	stos   BYTE PTR es:[edi],al
  431eeb:	pop    eax
  431eec:	sub    eax,0x88e1104f
  431ef1:	adc    DWORD PTR [edi+0xb],esi
  431ef4:	(bad)  
  431ef5:	pop    ecx
  431ef6:	pop    esp
  431ef7:	aam    0x43
  431ef9:	getsec 
  431efb:	fisubr WORD PTR [ebp-0x41]
  431efe:	ret    0x400f
  431f01:	ja     0x431f7e
  431f03:	retf   
  431f04:	add    al,0x2f
  431f06:	add    eax,0x614c1b
  431f0b:	add    BYTE PTR [ebx+edi*4],bl
  431f0e:	add    ch,BYTE PTR [edi+0x2e]
  431f11:	popf   
  431f12:	mov    DWORD PTR [edi+0x33],ecx
  431f15:	push   cs
  431f16:	outs   dx,BYTE PTR ds:[esi]
  431f17:	lock lods eax,DWORD PTR ds:[esi]
  431f19:	fcomip st,st(2)
  431f1b:	sub    eax,0x4053f927
  431f20:	mov    edi,0x16fdf634
  431f25:	cmp    DWORD PTR [edx-0x4ef4eeff],esi
  431f2b:	or     al,0xe4
  431f2d:	je     0x431f1b
  431f2f:	inc    ebp
  431f30:	xor    al,0x3c
  431f32:	jmp    0x348f:0x2ac53d40
  431f39:	div    DWORD PTR [edx-0x31]
  431f3c:	cmp    BYTE PTR [ebx+edi*4],dh
  431f3f:	dec    edx
  431f40:	and    edx,esp
  431f42:	dec    eax
  431f43:	stc    
  431f44:	lock xor DWORD PTR [ebx-0x17],ebx
  431f48:	icebp  
  431f49:	arpl   WORD PTR fs:[ebx+0x1b902d34],di
  431f50:	cmp    al,0xc5
  431f52:	mov    ah,0xa5
  431f54:	cmp    eax,0xd50cf6be
  431f59:	inc    eax
  431f5a:	mov    bl,0xa5
  431f5c:	or     edx,edi
  431f5e:	jae    0x431f9c
  431f60:	xor    ch,bh
  431f62:	jmp    0xafa6:0x2cf949a5
  431f69:	aas    
  431f6a:	and    BYTE PTR [esi-0x4e139b9f],ah
  431f70:	add    BYTE PTR [eax],al
  431f72:	out    dx,eax
  431f73:	pop    esp
  431f74:	and    ecx,DWORD PTR ds:0xf0ec73c4
  431f7a:	out    dx,eax
  431f7b:	xchg   ebp,eax
  431f7c:	popa   
  431f7d:	pcmpeqw mm6,mm1
  431f80:	or     eax,0xa5a8dc89
  431f85:	or     ebp,DWORD PTR [eax+0x10]
  431f88:	out    0xd0,eax
  431f8a:	xchg   BYTE PTR [ebp-0x3c],ah
  431f8d:	or     ebp,DWORD PTR [edx-0x2727b97a]
  431f93:	sub    bh,dh
  431f95:	cmp    eax,0xf83740cd
  431f9a:	cmc    
  431f9b:	xchg   BYTE PTR [ecx],al
  431f9d:	retf   0x7fbd
  431fa0:	cmc    
  431fa1:	scas   eax,DWORD PTR es:[edi]
  431fa2:	(bad)  
  431fa3:	mov    ch,0x3e
  431fa5:	icebp  
  431fa6:	fidiv  WORD PTR [ecx]
  431fa8:	xchg   BYTE PTR [esp+ebx*2-0x5de4169a],dl
  431faf:	cli    
  431fb0:	clc    
  431fb1:	sar    bl,cl
  431fb3:	xchg   DWORD PTR [ebp+0x72],eax
  431fb6:	jno    0x431fec
  431fb8:	imul   esi,eax,0xffffffb1
  431fbb:	xchg   DWORD PTR [ecx],ecx
  431fbd:	xchg   edx,eax
  431fbe:	dec    esp
  431fbf:	(bad)  [edi]
  431fc1:	out    dx,eax
  431fc2:	sub    al,0x46
  431fc4:	rcr    BYTE PTR [ecx+ebp*2-0x4b],0x3e
  431fc9:	fnstsw WORD PTR [eax]
  431fcb:	icebp  
  431fcc:	call   0x10b8:0xd9b5f102
  431fd3:	mov    dh,0xf4
  431fd5:	test   BYTE PTR [eax],0x0
  431fd8:	fld    QWORD PTR [edi+0x3487eaf9]
  431fde:	xchg   BYTE PTR [edi],ch
  431fe0:	xor    DWORD PTR [eax+edi*8+0x34],esp
  431fe4:	aas    
  431fe5:	dec    DWORD PTR [esi]
  431fe7:	loope  0x43202f
  431fe9:	je     0x431fec
  431feb:	inc    eax
  431fec:	add    dh,BYTE PTR [ecx+0x7e3a1dc1]
  431ff2:	(bad)  
  431ff3:	pop    ebx
  431ff4:	shl    BYTE PTR [esp+ebp*8],1
  431ff7:	jmp    0xffbf:0xc0f558bb
  431ffe:	js     0x431fa0
  432000:	leave  
  432001:	cld    
  432002:	pop    ecx
  432003:	push   cs
  432004:	or     eax,0x3b2bca63
  432009:	xor    al,0x8
  43200b:	xchg   edi,eax
  43200c:	xor    eax,0x33a7af2f
  432011:	cmc    
  432012:	loope  0x431ff5
  432014:	cmp    ebp,esi
  432016:	in     al,dx
  432017:	add    BYTE PTR [ebp-0x1b],ah
  43201a:	jg     0x432008
  43201c:	inc    ebp
  43201d:	cmc    
  43201e:	or     al,0x81
  432020:	jb     0x431fc2
  432022:	clc    
  432023:	call   FWORD PTR [esi-0x6238ac1b]
  432029:	scas   eax,DWORD PTR es:[edi]
  43202a:	xchg   ebx,eax
  43202b:	inc    eax
  43202c:	mov    es,WORD PTR [edx]
  43202e:	cld    
  43202f:	mov    ebp,eax
  432031:	out    0x89,eax
  432033:	jnp    0x431fff
  432035:	test   al,0x6f
  432037:	pop    eax
  432038:	pop    ecx
  432039:	repz pop esp
  43203b:	add    BYTE PTR [eax],al
  43203d:	add    BYTE PTR [edx-0x3276fec9],bl
  432043:	mov    ebx,0xe6564385
  432048:	loopne 0x43209c
  43204a:	lea    edi,[esi]
  43204c:	sti    
  43204d:	push   0x62
  43204f:	lods   al,BYTE PTR ds:[esi]
  432050:	sub    BYTE PTR [bx+di],bl
  432053:	out    0x89,al
  432055:	pop    ebx
  432056:	ds aas 
  432058:	or     eax,0xf8f76818
  43205d:	sbb    BYTE PTR [edx+0x26055f33],0x77
  432064:	add    bl,BYTE PTR [ecx+esi*8]
  432067:	lock clc 
  432069:	(bad)  
  43206a:	pop    ebp
  43206b:	add    BYTE PTR [edi-0x11],bl
  43206e:	dec    esp
  43206f:	xor    ah,al
  432071:	inc    ebx
  432072:	cli    
  432073:	imul   ebp,ebx,0x42
  432076:	push   ds
  432077:	jbe    0x4320b0
  432079:	cmp    bh,ah
  43207b:	dec    ebp
  43207c:	add    BYTE PTR ss:[edi+0x33958f2],al
  432083:	das    
  432084:	ins    DWORD PTR es:[edi],dx
  432085:	adc    eax,0x86d3f4e
  43208a:	test   al,0xab
  43208c:	or     BYTE PTR [bp-0x2720],al
  432091:	push   DWORD PTR [edi]
  432093:	bound  edi,QWORD PTR [edi-0x9]
  432096:	cmp    ah,cl
  432098:	dec    DWORD PTR [eax+0x7487ed4c]
  43209e:	xor    eax,DWORD PTR [esi+0xe742]
  4320a4:	dec    eax
  4320a5:	jmp    0x4320e1
  4320a7:	cli    
  4320a8:	pop    es
  4320a9:	xchg   esp,eax
  4320aa:	rol    DWORD PTR [edi],0xba
  4320ad:	(bad)  
  4320ae:	sbb    BYTE PTR [edx+0x7],dl
  4320b1:	sbb    dl,BYTE PTR [ecx]
  4320b3:	sbb    BYTE PTR [ecx-0x33],al
  4320b6:	add    al,0x7f
  4320b8:	jnp    0x432092
  4320ba:	mov    DWORD PTR [edi+edi*1-0x63],eax
  4320be:	mov    DWORD PTR [ebx+ebx*4-0x64],eax
  4320c2:	cmp    esi,DWORD PTR [ecx]
  4320c4:	js     0x43209d
  4320c6:	pushf  
  4320c7:	adc    al,0xf7
  4320c9:	or     al,0x82
  4320cb:	mov    edi,0xb68c04e3
  4320d0:	xchg   ebx,eax
  4320d1:	or     al,0x5
  4320d3:	add    BYTE PTR [edi+edi*1+0xa],cl
  4320d7:	mov    bl,0xfa
  4320d9:	lock lds eax,FWORD PTR [edi-0x3d]
  4320dd:	pop    es
  4320de:	jle    0x4320c7
  4320e0:	sub    al,BYTE PTR [eax+0x3]
  4320e3:	das    
  4320e4:	ja     0x432150
  4320e6:	mov    WORD PTR [ecx+ebx*1+0x59],es
  4320ea:	mov    al,0xd3
  4320ec:	out    dx,eax
  4320ed:	sar    ebp,1
  4320ef:	push   DWORD PTR [edi]
  4320f1:	mov    ds:0xa318fa0e,eax
  4320f6:	add    BYTE PTR [edi+eax*4+0x67fa3aaa],0x80
  4320fe:	mov    eax,0x45a367e3
  432103:	imul   edi,ecx,0xffffff82
  432106:	cmp    DWORD PTR [edi-0x12950000],0x3467847f
  432110:	pop    edi
  432111:	cmp    ebp,ebx
  432113:	fs jae 0x432157
  432116:	push   0x5aababa7
  43211b:	jae    0x4320d7
  43211d:	sub    ebx,esp
  43211f:	and    eax,0xf04003ea
  432124:	fimul  DWORD PTR [edx+0x3eac839]
  43212a:	aaa    
  43212b:	scas   eax,DWORD PTR es:[edi]
  43212c:	sub    bh,BYTE PTR [ecx+0x684bb535]
  432132:	mov    al,ds:0xfc03eaf9
  432137:	lods   al,BYTE PTR ds:[esi]
  432138:	sub    ebx,edx
  43213a:	jg     0x432132
  43213c:	loop   0x432141
  43213e:	loop   0x4320ec
  432140:	push   cs
  432141:	test   DWORD PTR [eax+ebp*1+0x4b1d090],ecx
  432148:	pop    esi
  432149:	mov    bh,0x64
  43214b:	mov    esp,0x343703e7
  432150:	shl    BYTE PTR [eax+0x63],cl
  432153:	stc    
  432154:	xlat   BYTE PTR ds:[ebx]
  432155:	mov    esi,?
  432157:	pop    edi
  432158:	pop    ebp
  432159:	into   
  43215a:	inc    esp
  43215b:	push   bp
  43215d:	mov    ecx,0xd3efacf8
  432162:	out    0xb,eax
  432164:	sub    bh,dl
  432166:	cmp    eax,0x84c1f3f9
  43216b:	and    dl,0xfc
  43216e:	add    BYTE PTR [eax],al
  432170:	jne    0x4321a2
  432172:	pop    ss
  432173:	sbb    DWORD PTR [esi-0x49732190],ebp
  432179:	(bad)  
  43217a:	jmp    0x26b9:0xaaaf3703
  432181:	imul   eax,DWORD PTR fs:[ecx-0x68],0x62
  432186:	jae    0x4321c8
  432188:	adc    BYTE PTR [ecx-0x1d2f8ff],ah
  43218e:	jle    0x432139
  432190:	cdq    
  432191:	xor    ch,ah
  432193:	out    dx,al
  432194:	jmp    0x41b8:0xe3eaecb8
  43219b:	mov    dh,0xee
  43219d:	jmp    0x432163
  43219f:	mov    ah,0xbb
  4321a1:	or     al,0x85
  4321a3:	dec    ebp
  4321a4:	cld    
  4321a5:	arpl   WORD PTR [esp+eiz*4-0x61b096d4],cx
  4321ac:	ret    
  4321ad:	sti    
  4321ae:	cmp    al,0xa6
  4321b0:	call   0x363f9fe2
  4321b5:	xor    al,0x1
  4321b7:	push   0xffffffdf
  4321b9:	pop    eax
  4321ba:	add    esi,esp
  4321bc:	adc    BYTE PTR [edx],dh
  4321be:	add    ch,cl
  4321c0:	xor    al,0xb1
  4321c2:	fldcw  WORD PTR ds:[ebp-0x5412e28c]
  4321c9:	outs   dx,DWORD PTR ds:[esi]
  4321ca:	or     eax,0xc80b4c62
  4321cf:	jmp    0xe6975608
  4321d4:	add    BYTE PTR [eax],al
  4321d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321d7:	push   esp
  4321d8:	adc    DWORD PTR [eax+ebx*4+0x50],ebp
  4321dc:	push   ecx
  4321dd:	mov    al,fs:0xe1e3e930
  4321e3:	std    
  4321e4:	clc    
  4321e5:	call   0x1248766a
  4321ea:	fld    TBYTE PTR [esi+0x7b10d640]
  4321f0:	ins    DWORD PTR es:[edi],dx
  4321f1:	loope  0x432213
  4321f3:	push   ds
  4321f4:	or     BYTE PTR [ebx+ecx*4-0x9],ch
  4321f8:	clc    
  4321f9:	jmp    0x6d4bd996
  4321fe:	fwait
  4321ff:	idiv   eax
  432201:	jmp    0xa494c3
  432206:	inc    esi
  432207:	call   0xe8899580
  43220c:	or     eax,DWORD PTR [ebp+0x13061]
  432212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432213:	mov    dh,0x54
  432215:	rsqrtps xmm0,XMMWORD PTR [eax-0x55310008]
  43221c:	ins    DWORD PTR es:[edi],dx
  43221d:	adc    BYTE PTR [ebp-0x31db8bc2],cl
  432223:	jmp    0x2a213823
  432228:	inc    ecx
  432229:	add    BYTE PTR [ebp-0xb],al
  43222c:	adc    al,0x89
  43222e:	xchg   BYTE PTR [edx+0x37150cc4],dh
  432234:	mov    DWORD PTR [edx+esi*2+0x2f],esi
  432238:	jmp    0x39432244
  43223d:	aas    
  43223e:	sti    
  43223f:	test   BYTE PTR [esi+0x2f],bl
  432242:	jge    0x4321ca
  432244:	sahf   
  432245:	xor    eax,DWORD PTR [ecx]
  432247:	push   0xffffff8f
  432249:	retf   
  43224a:	je     0x4321e3
  43224c:	into   
  43224d:	xor    eax,DWORD PTR [esi-0x2bb431b9]
  432253:	ins    DWORD PTR es:[edi],dx
  432254:	pop    eax
  432255:	ds jge 0x432218
  432258:	add    al,bl
  43225a:	sti    
  43225b:	ja     0x432267
  43225d:	stos   DWORD PTR es:[edi],eax
  43225e:	inc    ebx
  43225f:	push   esp
  432260:	imul   eax,esi,0xe0018b40
  432266:	jg     0x4322b5
  432268:	dec    edx
  432269:	dec    ebx
  43226a:	cs push 0xc0843e78
  432270:	jb     0x43224d
  432272:	ja     0x4322db
  432274:	inc    edx
  432275:	xor    ah,al
  432277:	inc    edi
  432278:	cs xor eax,0x4a0e0001
  43227e:	sbb    al,0x8b
  432280:	aaa    
  432281:	inc    esi
  432282:	mov    eax,ds:0xebfd6286
  432287:	mov    ebp,0x722fdb8b
  43228c:	imul   eax,DWORD PTR [edx-0xa0ff437],0xffffffcc
  432293:	out    0x46,eax
  432295:	xor    eax,0x4cbbfa2f
  43229a:	test   al,0x2d
  43229c:	dec    ebp
  43229d:	or     eax,0x4a8a
  4322a2:	aas    
  4322a3:	jne    0x432268
  4322a5:	lock enter 0x8165,0xd6
  4322aa:	xor    BYTE PTR [eax+0x35b8faea],cl
  4322b0:	mov    eax,DWORD PTR [edx+0x17]
  4322b3:	mov    bh,BYTE PTR [eax+eax*1]
  4322b6:	sub    DWORD PTR [ebx],edx
  4322b8:	test   bh,dh
  4322ba:	cmp    dl,al
  4322bc:	add    DWORD PTR [edi+0x17de00f2],eax
  4322c2:	iret   
  4322c3:	ins    BYTE PTR es:[edi],dx
  4322c4:	(bad)  
  4322c6:	aaa    
  4322c7:	loop   0x432280
  4322c9:	push   ebx
  4322ca:	sbb    eax,0x8cbf2e4d
  4322cf:	push   cs
  4322d0:	repz mov edi,0x750a5c
  4322d6:	or     BYTE PTR [edi+0x6f5a86db],ah
  4322dc:	inc    ebx
  4322dd:	getsec 
  4322df:	add    ah,0x17
  4322e2:	js     0x432330
  4322e4:	popf   
  4322e5:	add    BYTE PTR [edi],dh
  4322e7:	or     eax,0xc9772f05
  4322ec:	(bad)  
  4322ed:	push   edx
  4322ee:	lods   al,BYTE PTR ds:[esi]
  4322ef:	repz mov dh,BYTE PTR [edx+0x4f]
  4322f3:	xchg   edx,eax
  4322f4:	mov    bh,0x5f
  4322f6:	mov    ah,0xc3
  4322f8:	clc    
  4322f9:	jae    0x43234d
  4322fb:	xor    al,0x6b
  4322fd:	cmp    al,0x19
  4322ff:	add    DWORD PTR [edx],0x368e12aa
  432305:	mov    al,0x0
  432307:	add    BYTE PTR [eax+0x34],cl
  43230a:	push   ebp
  43230b:	mov    esi,0xa6e10c70
  432310:	(bad)  
  432311:	cmc    
  432312:	pop    ebp
  432313:	inc    esp
  432314:	imul   ebp,DWORD PTR [edi],0x6b
  432317:	dec    esp
  432318:	in     eax,dx
  432319:	or     ebp,ebx
  43231b:	test   eax,0x3d2fa937
  432320:	jbe    0x4322b6
  432322:	fiadd  WORD PTR [ebx]
  432324:	aaa    
  432325:	xor    al,0x42
  432327:	inc    ecx
  432328:	fdiv   st,st(5)
  43232a:	inc    edi
  43232b:	icebp  
  43232c:	adc    BYTE PTR [ebp-0x60],0x40
  432330:	imul   ebx,DWORD PTR [esi+0x73],0xa8a948b3
  432337:	mov    ds:0x3c6bdab1,eax
  43233c:	cmp    edi,DWORD PTR [edi-0x1a]
  43233f:	lock fmul DWORD PTR [ecx]
  432342:	mov    ah,0xcb
  432344:	in     eax,0x89
  432346:	in     al,dx
  432347:	aam    0x4
  432349:	push   esp
  43234a:	ret    
  43234b:	cmp    al,0xb
  43234d:	dec    ebx
  43234e:	xchg   edi,eax
  43234f:	stos   DWORD PTR es:[edi],eax
  432350:	in     al,0x7f
  432352:	stos   BYTE PTR es:[edi],al
  432353:	add    eax,edx
  432355:	outs   dx,BYTE PTR ds:[esi]
  432356:	call   0xbb34:0xe888842b
  43235d:	hlt    
  43235e:	push   ebp
  43235f:	(bad)  
  432360:	fldpi  
  432362:	xlat   BYTE PTR ds:[ebx]
  432363:	sub    BYTE PTR [eax],bl
  432365:	stos   DWORD PTR es:[edi],eax
  432366:	push   eax
  432367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432368:	push   ecx
  432369:	daa    
  43236a:	inc    esp
  43236b:	add    eax,DWORD PTR [eax]
  43236d:	add    BYTE PTR [esi-0x4174b9aa],ch
  432373:	xchg   ebx,eax
  432374:	shr    BYTE PTR [eax+eiz*1+0x63b601f5],cl
  43237b:	sbb    DWORD PTR ds:0x5172b9d9,0x65c94b3a
  432385:	lahf   
  432386:	dec    ebx
  432387:	add    bl,dl
  432389:	bnd je 0x432402
  43238c:	loope  0x43231d
  43238e:	aaa    
  43238f:	icebp  
  432390:	pop    eax
  432391:	daa    
  432392:	fidiv  WORD PTR [esi-0x51fd1703]
  432398:	jb     0x43236b
  43239a:	mov    edi,0xae166172
  43239f:	inc    BYTE PTR [ecx+eiz*2+0x19fd7fd9]
  4323a6:	jnp    0x4323b6
  4323a8:	cmp    al,0xa1
  4323aa:	cld    
  4323ab:	jg     0x4323c5
  4323ad:	ret    
  4323ae:	mov    WORD PTR ss:[ebp-0x7a0b0b42],?
  4323b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4323b6:	test   BYTE PTR [ecx+esi*2],cl
  4323b9:	lds    esp,FWORD PTR [edx-0x6]
  4323bc:	jle    0x4323e7
  4323be:	shr    DWORD PTR [edi],1
  4323c0:	test   BYTE PTR [ecx],dh
  4323c2:	arpl   WORD PTR [esi],cx
  4323c4:	sbb    BYTE PTR [esi],ah
  4323c6:	rcl    BYTE PTR [esp+eax*1-0x17],cl
  4323ca:	xor    al,0x34
  4323cc:	clc    
  4323cd:	xchg   ebp,eax
  4323ce:	pusha  
  4323cf:	sub    BYTE PTR [esi+0x640000af],al
  4323d5:	popa   
  4323d6:	jmp    0xf93dbc7e
  4323db:	dec    BYTE PTR ds:0x146ac11e
  4323e1:	sti    
  4323e2:	test   BYTE PTR [ecx-0x54a8a6cf],ch
  4323e8:	aas    
  4323e9:	xor    al,0x4e
  4323eb:	bound  edx,QWORD PTR [edi]
  4323ed:	jbe    0x4323d4
  4323ef:	cmc    
  4323f0:	imul   esp,DWORD PTR [edx+0x50],0x7f47c500
  4323f7:	icebp  
  4323f8:	fwait
  4323f9:	daa    
  4323fa:	je     0x432443
  4323fc:	je     0x432436
  4323fe:	imul   ecx,eax,0x5701380e
  432404:	mov    ds:0x1ae8fd05,eax
  432409:	aas    
  43240a:	sti    
  43240b:	call   DWORD PTR [edi-0x317a0f03]
  432411:	aaa    
  432412:	jge    0x4323ee
  432414:	phaddw mm1,QWORD PTR [ebx-0x788dbe5]
  43241c:	or     DWORD PTR [edi],esi
  43241e:	ja     0x4323ee
  432420:	iret   
  432421:	aaa    
  432422:	add    DWORD PTR [edx-0x27],ebp
  432425:	jmp    0xd27d:0x296959c6
  43242c:	sar    DWORD PTR [ebx+edi*4+0x4737ce01],1
  432433:	push   0xffffffea
  432435:	push   cs
  432436:	xchg   BYTE PTR [ebp+0x0],bl
  432439:	add    BYTE PTR [edx+0x71],ch
  43243c:	cmp    eax,0x276f6fc
  432441:	(bad)  
  432442:	push   ecx
  432443:	push   ebx
  432444:	dec    ebx
  432445:	(bad)  
  432446:	retf   
  432447:	sub    ecx,DWORD PTR [eax+0x68]
  43244a:	mov    bh,0x38
  43244c:	add    DWORD PTR [eax],eax
  43244e:	ss push ss
  432450:	sar    ebp,0x31
  432453:	jae    0x432415
  432455:	test   DWORD PTR [edi-0x54],eax
  432458:	push   cs
  432459:	mov    ebx,DWORD PTR [ebx-0x52e8a1d5]
  43245f:	mov    DWORD PTR [edi-0x9],ecx
  432462:	pop    ebp
  432463:	mov    esp,0xe06275c6
  432468:	push   ebp
  432469:	hlt    
  43246a:	in     al,dx
  43246b:	mov    al,BYTE PTR ds:[ebp+0x37]
  43246f:	or     DWORD PTR [eax-0x40],edi
  432472:	dec    esp
  432473:	aad    0xcd
  432475:	out    0xfe,eax
  432477:	(bad)  [edx]
  432479:	cli    
  43247a:	fs popf 
  43247c:	jne    0x4324c2
  43247e:	das    
  43247f:	pusha  
  432480:	inc    esp
  432481:	or     bh,BYTE PTR [ebx+0x37fffe2f]
  432487:	push   0x4567f3c9
  43248c:	test   edi,edi
  43248e:	or     ch,bl
  432490:	sbb    al,0xac
  432492:	idiv   BYTE PTR [edi+0x5fdf8633]
  432498:	inc    edi
  432499:	or     bh,BYTE PTR [ebx+0xfffe19]
  43249f:	add    BYTE PTR [edi],dh
  4324a1:	push   esi
  4324a2:	leave  
  4324a3:	repz mov ah,0x64
  4324a6:	hlt    
  4324a7:	or     dh,BYTE PTR [ebp+0x37fffe15]
  4324ad:	scas   al,BYTE PTR es:[edi]
  4324ae:	sbb    al,0xf4
  4324b0:	sbb    ecx,DWORD PTR [edx+0x11f78433]
  4324b6:	sub    DWORD PTR [esi+esi*1],0xffffffdd
  4324ba:	add    al,0x85
  4324bc:	mov    al,0xa8
  4324be:	sti    
  4324bf:	push   ecx
  4324c0:	mov    esp,0x39d11c25
  4324c5:	fld    QWORD PTR [esp+eax*4]
  4324c8:	ja     0x432499
  4324ca:	sbb    ebp,DWORD PTR [edi]
  4324cc:	mov    DWORD PTR [ecx-0x47],edx
  4324cf:	neg    DWORD PTR [edi-0x7f05fbc4]
  4324d5:	lods   eax,DWORD PTR ds:[esi]
  4324d6:	sbb    al,0xd5
  4324d8:	aaa    
  4324d9:	cmp    esi,DWORD PTR [ebx]
  4324db:	xchg   BYTE PTR [ecx+0x43],bh
  4324de:	sbb    eax,DWORD PTR [ecx]
  4324e0:	aaa    
  4324e1:	fnsave [ebx]
  4324e3:	je     0x432544
  4324e5:	push   ebp
  4324e6:	leave  
  4324e7:	sti    
  4324e8:	dec    edi
  4324e9:	xor    edx,DWORD PTR [edx]
  4324eb:	pop    eax
  4324ec:	push   ebx
  4324ed:	bnd jae 0x43249f
  4324f0:	inc    esp
  4324f1:	xchg   dl,al
  4324f3:	sbb    DWORD PTR [eax+esi*8-0x39],ebp
  4324f7:	jge    0x4324ec
  4324f9:	out    dx,eax
  4324fa:	push   ebx
  4324fb:	inc    esp
  4324fc:	cmp    al,0xb7
  4324fe:	stos   BYTE PTR es:[edi],al
  4324ff:	mov    eax,0x42ddc3c
  432504:	add    BYTE PTR [eax],al
  432506:	sbb    eax,0x8c761f2
  43250b:	mov    eax,0x5e3bb7aa
  432510:	cwde   
  432511:	rcl    BYTE PTR [ecx],cl
  432513:	mov    cl,0x5d
  432515:	mov    dl,0x38
  432517:	mov    DWORD PTR [edi+0x2a46df17],eax
  43251d:	add    al,0xb8
  43251f:	cli    
  432520:	xchg   edx,eax
  432521:	outs   dx,BYTE PTR ds:[esi]
  432522:	jmp    0x7bc01018
  432527:	in     al,dx
  432528:	popa   
  432529:	retf   0xbd10
  43252c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43252d:	das    
  43252e:	mov    edi,0x737d067a
  432533:	in     al,0x61
  432535:	retf   0xdc10
  432538:	jp     0x432570
  43253a:	mov    ebx,0xa555fbf1
  43253f:	addr16 ss jge 0x432536
  432543:	out    0x97,eax
  432545:	jp     0x432545
  432547:	adc    esp,DWORD PTR [ecx-0x36]
  43254a:	push   esp
  43254b:	mov    ebx,0x478df7b8
  432550:	ss push ss
  432552:	div    DWORD PTR [ebx]
  432554:	(bad)  [eax]
  432556:	aas    
  432557:	jb     0x43251f
  432559:	mov    dh,0x1a
  43255b:	mov    DWORD PTR [edi-0x320efa28],edx
  432561:	push   edi
  432562:	cmp    dh,BYTE PTR [ecx+eax*1-0x17]
  432566:	fnsave [edx+0x35]
  432569:	mov    dl,0x0
  43256b:	add    bh,ch
  43256d:	adc    bh,BYTE PTR ds:0x7333
  432572:	add    edi,ebx
  432574:	pop    es
  432575:	xchg   cl,ch
  432577:	sub    DWORD PTR [ebx],edi
  432579:	out    dx,al
  43257a:	clc    
  43257b:	inc    ebx
  43257c:	add    eax,0x6646ec89
  432581:	arpl   WORD PTR ds:0x13dc41be,si
  432587:	sub    DWORD PTR [ebx],edi
  432589:	mov    edi,0xf29bf157
  43258e:	cmp    ebp,DWORD PTR [esi+0x2c864ec8]
  432594:	inc    ebx
  432595:	test   BYTE PTR [ecx-0x6a],dl
  432598:	sub    DWORD PTR [ebx+edx*1],eax
  43259b:	sub    DWORD PTR [ebx],esi
  43259d:	mov    bh,0xc1
  43259f:	std    
  4325a0:	dec    ebx
  4325a1:	mov    bl,0x76
  4325a3:	jns    0x4325d8
  4325a5:	xor    eax,DWORD PTR [ecx]
  4325a7:	jmp    0xbb3b5c54
  4325ac:	daa    
  4325ad:	dec    eax
  4325ae:	leave  
  4325af:	sti    
  4325b0:	hlt    
  4325b1:	lock mov DWORD PTR [edx],esp
  4325b4:	fsubr  QWORD PTR [ecx]
  4325b6:	outs   dx,BYTE PTR ds:[esi]
  4325b7:	or     al,0x42
  4325b9:	imul   edi,ebp,0xffffffb9
  4325bc:	ficomp WORD PTR [eax-0x4]
  4325bf:	cmp    eax,0xe960f07a
  4325c4:	xor    al,0x3c
  4325c6:	add    DWORD PTR [ecx+0x28],eax
  4325c9:	or     cl,bh
  4325cb:	cs mov al,0xb0
  4325ce:	outs   dx,BYTE PTR ds:[esi]
  4325cf:	repnz add BYTE PTR [eax],al
  4325d2:	mov    dl,0xf0
  4325d4:	loopne 0x4325db
  4325d6:	inc    edi
  4325d7:	lock clc 
  4325d9:	xor    DWORD PTR [ecx+ebx*8],0xffffff9c
  4325dd:	fiadd  DWORD PTR [edi-0x7a]
  4325e0:	jmp    0xf5673be5
  4325e5:	inc    ecx
  4325e7:	dec    esp
  4325e8:	(bad)  
  4325e9:	jmp    FWORD PTR [ebx+0x20]
  4325ec:	daa    
  4325ed:	ror    BYTE PTR [esi-0xc00eeb1],0x1f
  4325f4:	loopne 0x4325bb
  4325f6:	imul   esp,DWORD PTR [edx],0x607653fb
  4325fc:	sti    
  4325fd:	std    
  4325fe:	imul   esi,DWORD PTR [eax+eax*8+0x4ffe59ff],0x800dddc9
  432609:	in     al,dx
  43260a:	xchg   ebp,eax
  43260b:	std    
  43260c:	add    BYTE PTR [ecx-0x8bf26],al
  432612:	push   ds
  432613:	add    edx,DWORD PTR [ebx+0x57]
  432616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432617:	sub    dh,dh
  432619:	dec    DWORD PTR [esi]
  43261b:	mov    ah,0x35
  43261d:	jo     0x4325e1
  43261f:	repz clc 
  432621:	add    al,dh
  432623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432624:	test   DWORD PTR [ebp-0x4da3a],esi
  43262a:	mov    dh,0xc3
  43262c:	je     0x43262c
  43262e:	dec    ecx
  43262f:	mov    ch,0x3d
  432631:	les    ecx,FWORD PTR [esi+0x99cb]
  432637:	add    dh,bl
  432639:	xor    eax,DWORD PTR [eax+0x744b7ec6]
  43263f:	mov    edi,0x3d7f1f6b
  432644:	jmp    0xc4fd:0x1b004142
  43264b:	push   eax
  43264c:	jbe    0x432681
  43264e:	mov    ch,0x43
  432650:	mov    ds,WORD PTR [edx+0x1]
  432653:	add    BYTE PTR [esi+0x41ff47b3],bl
  432659:	imul   eax,edx,0x50
  43265c:	aaa    
  43265d:	xor    eax,0x3e7971a4
  432662:	jge    0x4326a0
  432664:	out    0x50,eax
  432666:	(bad)  
  432667:	push   DWORD PTR [edi]
  432669:	addr16 hlt 
  43266b:	mov    WORD PTR [edx+0x58fa3235],gs
  432671:	xor    eax,0xd65173b8
  432676:	add    DWORD PTR [ebx+esi*2+0x2d],0xdd379795
  43267e:	add    al,0x87
  432680:	jno    0x4326af
  432682:	adc    eax,0x27f7f02f
  432687:	mov    WORD PTR [edx-0x67],?
  43268a:	aam    0x67
  43268c:	aaa    
  43268d:	imul   eax,ebx,0x4f9e85ff
  432693:	xchg   cl,bh
  432695:	sub    al,0x15
  432697:	and    eax,0x5a27cf81
  43269c:	add    BYTE PTR [eax],al
  43269e:	popa   
  43269f:	and    dh,BYTE PTR [esi]
  4326a1:	mov    ebp,0x86d9dd33
  4326a6:	jecxz  0x4326f3
  4326a8:	into   
  4326a9:	dec    esi
  4326aa:	and    BYTE PTR [eax-0x5a],0x7
  4326ae:	mov    BYTE PTR [ecx+esi*4-0x9],dl
  4326b2:	fadd   DWORD PTR [edi]
  4326b4:	dec    ebp
  4326b5:	or     eax,0xd6f3dd77
  4326ba:	push   cs
  4326bb:	scas   eax,DWORD PTR es:[edi]
  4326bc:	fdiv   QWORD PTR [ebx+0x4b]
  4326bf:	push   edx
  4326c0:	mov    esi,0xb019fc2b
  4326c5:	ins    BYTE PTR es:[edi],dx
  4326c6:	mov    esi,0x61712897
  4326cb:	cs mov esi,0xf09eac33
  4326d1:	test   DWORD PTR cs:0x33be2bae,esp
  4326d8:	mov    eax,0xe70211f7
  4326dd:	add    ah,ch
  4326df:	and    esp,DWORD PTR [ebx+0x29]
  4326e2:	aas    
  4326e3:	(bad)  
  4326e4:	loop   0x43269d
  4326e6:	sbb    bh,ch
  4326e8:	aad    0x87
  4326ea:	cmp    dh,BYTE PTR [edx+ebp*8-0x26]
  4326ee:	cmc    
  4326ef:	cmp    ebp,DWORD PTR [ebp-0x15c856dd]
  4326f5:	mov    dl,0x40
  4326f7:	out    dx,eax
  4326f8:	and    eax,0xd678b130
  4326fd:	jmp    0x3a9f46f8
  432702:	add    BYTE PTR [eax],al
  432704:	cmp    eax,0x5e19d268
  432709:	mov    ebx,0x388d7adf
  43270e:	jno    0x4326dd
  432710:	cmp    BYTE PTR [ecx-0xb6e07d8],bh
  432716:	iret   
  432717:	add    BYTE PTR [ebp+0x1c],dh
  43271a:	adc    al,0x15
  43271c:	addr16 in eax,dx
  43271e:	or     eax,0xfa47fdfc
  432723:	adc    eax,0x486b3477
  432728:	cmp    al,0xed
  43272a:	cmc    
  43272b:	sub    ebp,ebp
  43272d:	inc    edi
  43272e:	xchg   esi,eax
  43272f:	adc    dh,BYTE PTR [edi+0x34]
  432732:	cmp    al,BYTE PTR [ebx]
  432734:	sar    BYTE PTR [ebx],1
  432736:	cvtps2pi mm5,QWORD PTR [ebx]
  432739:	adc    ch,bh
  43273b:	ret    
  43273c:	enter  0x2a23,0xcd
  432740:	imul   edi,ebx,0x8737082c
  432746:	arpl   WORD PTR [eax],sp
  432748:	xor    eax,esp
  43274a:	fcmovbe st,st(0)
  43274c:	add    eax,0xa02c9df6
  432751:	out    dx,al
  432752:	add    esp,ebx
  432754:	mov    al,0x3f
  432756:	inc    ecx
  432757:	jmp    0xafca0c6b
  43275c:	mov    WORD PTR [ebp-0x76],?
  43275f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432760:	inc    esp
  432761:	jmp    0xda01:0x7425310e
  432768:	add    BYTE PTR [eax],al
  43276a:	(bad)  
  43276b:	mov    ebx,0x8b5c0156
  432770:	and    eax,0x3eb69377
  432775:	loope  0x43272e
  432777:	lods   eax,DWORD PTR ds:[esi]
  432778:	std    
  432779:	pop    edi
  43277a:	js     0x43275d
  43277c:	mov    al,BYTE PTR [ebx+ecx*2-0x4a]
  432780:	aas    
  432781:	adc    DWORD PTR [ebp+0x2b2d863e],ebx
  432787:	cmp    BYTE PTR [ecx-0x32],dl
  43278a:	jmp    0x4120206f
  43278f:	inc    edx
  432790:	inc    ecx
  432791:	jmp    0x6c49184d
  432796:	je     0x432800
  432798:	inc    eax
  432799:	(bad)  
  43279a:	cli    
  43279b:	sbb    al,0x4
  43279d:	sub    al,0xb
  43279f:	ins    DWORD PTR es:[edi],dx
  4327a0:	jbe    0x43278f
  4327a2:	xor    al,0x67
  4327a4:	add    eax,0x9bc3dda
  4327a9:	pusha  
  4327aa:	lods   al,BYTE PTR ds:[esi]
  4327ab:	xor    BYTE PTR [edx+0x2cd5eb31],cl
  4327b1:	jb     0x43278f
  4327b3:	mov    bh,0xca
  4327b5:	std    
  4327b6:	fdiv   DWORD PTR [ebp-0x4b9a3d30]
  4327bc:	sti    
  4327bd:	jno    0x4327e6
  4327bf:	xor    al,0x1
  4327c1:	(bad)  [ecx]
  4327c3:	jmp    0x37e21509
  4327c8:	pop    edx
  4327c9:	pusha  
  4327ca:	pushf  
  4327cb:	sub    ecx,DWORD PTR [ecx+0x0]
  4327ce:	add    BYTE PTR [eax],al
  4327d0:	call   0x89e8:0x768900a2
  4327d7:	dec    eax
  4327d8:	mov    cl,BYTE PTR [ebx+0x4]
  4327db:	cmp    DWORD PTR [esi-0x18],0xfffffff8
  4327df:	(bad)
  4327e2:	add    edi,edi
  4327e4:	fistp  DWORD PTR [eax]
  4327e6:	jg     0x43282d
  4327e8:	es mov ah,0x3d
  4327eb:	or     BYTE PTR [edx+0x7517b7b3],dl
  4327f1:	imul   BYTE PTR [edx+esi*2]
  4327f4:	rcr    DWORD PTR [edi],cl
  4327f6:	ins    DWORD PTR es:[edi],dx
  4327f7:	lock popa 
  4327f9:	inc    esi
  4327fa:	aad    0x12
  4327fc:	sahf   
  4327fd:	xor    BYTE PTR [edi+0x45],bh
  432800:	push   ecx
  432801:	clc    
  432802:	dec    edi
  432803:	leave  
  432804:	mov    edi,gs
  432806:	clc    
  432807:	push   esp
  432808:	aad    0x4b
  43280a:	ja     0x4327f0
  43280c:	push   es
  43280d:	mov    ah,0xec
  43280f:	adc    BYTE PTR [ebp-0x597f7fcd],ah
  432815:	xor    BYTE PTR [ecx],al
  432817:	add    BYTE PTR [eax],bh
  432819:	imul   eax,DWORD PTR [esp-0xe],0x493c376a
  432821:	imul   eax,DWORD PTR [esp+0xa],0x38ffcab3
  432829:	retf   0x8cf8
  43282c:	sbb    dl,ah
  43282e:	adc    BYTE PTR [eax+0x44],dl
  432831:	xor    bh,ah
  432833:	adc    eax,0x42be0000
  432838:	inc    ecx
  432839:	add    BYTE PTR [ebx-0x21fffdcf],ah
  43283f:	fwait
  432840:	or     DWORD PTR [ebx-0x7af3ceaa],eax
  432846:	dec    ebx
  432847:	xor    BYTE PTR [ecx],al
  432849:	add    BYTE PTR [edi],dh
  43284b:	pop    esi
  43284c:	mov    eax,ds:0xefdd3f23
  432851:	mov    edi,0xbd8f1ba
  432856:	int3   
  432857:	pop    eax
  432858:	rol    BYTE PTR [edi],0x7
  43285b:	and    dl,BYTE PTR [edx]
  43285d:	fsub   DWORD PTR ds:0xf487049d
  432863:	cld    
  432864:	cmp    DWORD PTR [edi+0x4677ff0b],0x73365853
  43286e:	dec    esp
  43286f:	lods   al,BYTE PTR ds:[esi]
  432870:	aam    0xe7
  432872:	jo     0x4328a4
  432874:	sub    bh,dl
  432876:	lods   al,BYTE PTR ds:[esi]
  432877:	xor    eax,0x54133e78
  43287c:	shl    DWORD PTR [ebx],0x43
  43287f:	push   eax
  432880:	sub    al,0x74
  432882:	cmp    DWORD PTR [ebx-0x22dab57c],edx
  432888:	pop    ss
  432889:	add    ch,BYTE PTR [ecx+eax*4-0x354bf81f]
  432890:	sub    ecx,DWORD PTR [esp+esi*2+0x4afad4e5]
  432897:	leave  
  432898:	push   cs
  432899:	inc    eax
  43289a:	add    BYTE PTR [eax],al
  43289c:	aaa    
  43289d:	pop    eax
  43289e:	sub    esi,DWORD PTR [ebx-0x3d]
  4328a1:	dec    ebp
  4328a2:	adc    eax,0x4dd340d
  4328a7:	test   bh,dh
  4328a9:	aas    
  4328aa:	add    al,0xba
  4328ac:	mov    bh,0x11
  4328ae:	ltr    sp
  4328b1:	out    dx,eax
  4328b2:	sub    esi,DWORD PTR [ebx+0x13]
  4328b5:	loope  0x43288a
  4328b7:	cmp    eax,DWORD PTR gs:[edi-0x3]
  4328bb:	gs and eax,0x8ee7ef62
  4328c1:	jne    0x4328ec
  4328c3:	cli    
  4328c4:	cmp    BYTE PTR [eax+ebx*4],dh
  4328c7:	xor    eax,ebp
  4328c9:	or     DWORD PTR [edx+esi*1],eax
  4328cc:	mov    bh,0xd1
  4328ce:	jmp    0x2841:0x6934548a
  4328d5:	jnp    0x4328b3
  4328d7:	add    eax,DWORD PTR [esp+ebx*8]
  4328da:	cs daa 
  4328dc:	fwait
  4328dd:	jmp    0xca27:0xea8dbe41
  4328e4:	out    dx,al
  4328e5:	mov    esi,0x86c1c805
  4328ea:	jae    0x4328b3
  4328ec:	push   esp
  4328ed:	cmp    al,0x2
  4328ef:	or     eax,0xf607ea6c
  4328f4:	test   al,0x8e
  4328f6:	sub    al,0xff
  4328f8:	pusha  
  4328f9:	test   DWORD PTR [eax+0x5d82487e],edx
  4328ff:	leave  
  432900:	add    BYTE PTR [eax],al
  432902:	cmp    BYTE PTR [edi+0x456f0fe7],al
  432908:	sub    al,BYTE PTR [edx+esi*4]
  43290b:	imul   edx,DWORD PTR [edx],0xaadc0529
  432911:	sub    BYTE PTR [ebx],dh
  432913:	jmp    0x2882:0xdc58b2c7
  43291a:	and    ebp,edx
  43291c:	push   esp
  43291d:	adc    al,0x7f
  43291f:	repnz out 0x3,eax
  432922:	je     0x4329a0
  432924:	sub    eax,0xcaf2892b
  432929:	sub    BYTE PTR [esi-0x24],al
  43292c:	ds sub bl,bh
  43292f:	jmp    0xf2cc2538
  432934:	loopne 0x432939
  432936:	jne    0x4329b4
  432938:	cmc    
  432939:	sub    dh,BYTE PTR [ecx-0x17]
  43293c:	int    0x47
  43293e:	sub    dh,BYTE PTR [ecx+eax*1-0x17]
  432942:	dec    DWORD PTR [ebx-0x4d0755a4]
  432948:	in     eax,0x68
  43294a:	pop    ds
  43294b:	jmp    0xb1781251
  432950:	add    BYTE PTR [edx-0x16763ecd],bh
  432956:	xor    al,0x34
  432958:	dec    edi
  432959:	jo     0x4329d3
  43295b:	loope  0x43291c
  43295d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43295e:	dec    edi
  43295f:	jmp    0x7997d5e9
  432964:	mov    WORD PTR [esi],?
  432966:	add    BYTE PTR [eax],al
  432968:	sub    esi,DWORD PTR [edx-0xa]
  43296b:	es dec esi
  43296d:	mov    ch,0xc1
  43296f:	out    dx,al
  432970:	clc    
  432971:	cmc    
  432972:	add    ecx,ebp
  432974:	xor    al,0xb2
  432976:	ds add eax,0x756974b
  43297c:	push   cs
  43297d:	mov    dl,0xf1
  43297f:	push   0xd
  432981:	out    0x6d,eax
  432983:	in     eax,dx
  432984:	mov    dl,0x39
  432986:	in     al,dx
  432987:	out    0xb3,al
  432989:	jmp    0x43299b
  43298b:	pop    esp
  43298c:	inc    eax
  43298d:	dec    edi
  43298e:	adc    eax,0x33e71a41
  432993:	test   eax,0x953eb804
  432998:	retf   0x48e8
  43299b:	(bad)  
  43299c:	xor    DWORD PTR [edi+ecx*1+0x29],ecx
  4329a0:	xor    ebp,DWORD PTR [ecx-0x43]
  4329a3:	in     eax,0xd6
  4329a5:	mov    ebx,0x7ace756e
  4329aa:	ins    DWORD PTR es:[edi],dx
  4329ab:	pop    es
  4329ac:	mov    edx,0x79ee0eda
  4329b1:	mov    esi,0x5234e901
  4329b6:	adc    DWORD PTR [ecx+ebp*4-0x31],ebx
  4329ba:	push   ecx
  4329bb:	add    BYTE PTR [ebx-0x56],ch
  4329be:	mov    esp,0x113a5950
  4329c3:	push   ss
  4329c4:	push   ds
  4329c5:	xor    BYTE PTR [eax-0x3c],bh
  4329c8:	jmp    0x9300:0x8b0247
  4329cf:	dec    ecx
  4329d0:	mov    DWORD PTR [ebp-0x6a],eax
  4329d3:	xchg   edx,eax
  4329d4:	jg     0x432a1b
  4329d6:	adc    eax,edi
  4329d8:	add    edi,edi
  4329da:	or     DWORD PTR [eax+0x62],0xffffffc1
  4329de:	dec    esi
  4329df:	in     eax,dx
  4329e0:	test   DWORD PTR [ebp+0x3e],esi
  4329e3:	xchg   ebx,eax
  4329e4:	mov    DWORD PTR [ebp+0x10],eax
  4329e7:	dec    ebp
  4329e8:	xor    BYTE PTR [ebx+0x58],bl
  4329eb:	sbb    al,0x47
  4329ed:	push   0xfff8d37e
  4329f2:	or     ebp,DWORD PTR [edx+0x4d188bb4]
  4329f8:	aam    0x5d
  4329fa:	cmp    BYTE PTR [esp+eax*4],bl
  4329fd:	shl    dl,0x31
  432a00:	js     0x432a7f
  432a02:	data16 xor al,0x6d
  432a05:	push   eax
  432a06:	aad    0xf9
  432a08:	add    BYTE PTR [ebx-0x4a],dl
  432a0b:	in     al,0x6d
  432a0d:	add    BYTE PTR [esi-0x36],cl
  432a10:	std    
  432a11:	push   edi
  432a12:	lds    esp,FWORD PTR [ecx]
  432a14:	loopne 0x4329db
  432a16:	jle    0x432a26
  432a18:	sti    
  432a19:	test   dh,bl
  432a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432a1c:	cmp    DWORD PTR [edx+0xf],ebp
  432a1f:	ins    DWORD PTR es:[edi],dx
  432a20:	cmp    eax,0xf36b3ee0
  432a25:	call   0x3e4763
  432a2a:	imul   esp,DWORD PTR [ebp-0x3741738],0xfffffffa
  432a31:	inc    DWORD PTR [eax]
  432a33:	add    BYTE PTR [eax+0x3780fbf5],bl
  432a39:	inc    eax
  432a3a:	and    BYTE PTR [eax+edi*1],al
  432a3d:	pop    ebx
  432a3e:	xlat   BYTE PTR ds:[ebx]
  432a3f:	cli    
  432a40:	loopne 0x4329f0
  432a42:	repz mov edi,0xbd361279
  432a48:	aas    
  432a49:	fstp   QWORD PTR [edx+0x1d10ba00]
  432a4f:	dec    edi
  432a50:	lods   al,BYTE PTR ds:[esi]
  432a51:	xchg   BYTE PTR ds:0x2086ba04,dl
  432a57:	out    0x93,al
  432a59:	jle    0x432a0d
  432a5b:	or     edi,DWORD PTR [edx-0x5f0502a8]
  432a61:	outs   dx,BYTE PTR ds:[esi]
  432a62:	and    BYTE PTR [edi+ebp*1-0x7b],dh
  432a66:	and    eax,0x7c1e90f4
  432a6b:	mov    esi,0xf7b215e7
  432a70:	mov    dl,0x98
  432a72:	push   esp
  432a73:	cli    
  432a74:	add    bl,cl
  432a76:	aam    0xe7
  432a78:	dec    esi
  432a79:	mov    ecx,0x8068fa1e
  432a7e:	int    0xfa
  432a80:	pusha  
  432a81:	cs jnp 0x432a5b
  432a84:	jo     0x432ad6
  432a86:	std    
  432a87:	cli    
  432a88:	push   eax
  432a89:	fidivr WORD PTR [edx+edx*4-0x9]
  432a8d:	fcomp  QWORD PTR [eax*2+0x651fd03c]
  432a94:	aaa    
  432a95:	pop    eax
  432a96:	rcr    edi,0x0
  432a99:	add    BYTE PTR [edi-0x1418d8ae],al
  432a9f:	clc    
  432aa0:	pop    ds
  432aa1:	cli    
  432aa2:	mov    dl,0x27
  432aa4:	dec    ebp
  432aa5:	out    0x3d,eax
  432aa7:	dec    ecx
  432aa8:	pop    ds
  432aa9:	cli    
  432aaa:	mov    ebp,0x62971b99
  432aaf:	push   edx
  432ab0:	adc    BYTE PTR [eax+0x963413],al
  432ab6:	aaa    
  432ab7:	xor    al,0x3b
  432ab9:	iret   
  432aba:	in     eax,dx
  432abb:	inc    eax
  432abc:	adc    WORD PTR [edi+0x34],si
  432ac0:	arpl   WORD PTR [eax+0x1825bd38],di
  432ac6:	mov    cl,0x2d
  432ac8:	ja     0x432b3d
  432aca:	mov    eax,0xba03ea33
  432acf:	xor    BYTE PTR [esi-0x65],0x10
  432ad3:	popa   
  432ad4:	jmp    0x361b:0xc2305103
  432adb:	push   esp
  432adc:	push   eax
  432add:	es mov ah,0xf3
  432ae0:	int    0xfe
  432ae2:	push   edx
  432ae3:	hlt    
  432ae4:	push   ecx
  432ae5:	dec    esp
  432ae6:	cwde   
  432ae7:	out    0xea,al
  432ae9:	jp     0x432b21
  432aeb:	out    0xb5,eax
  432aed:	sti    
  432aee:	mov    cl,0x73
  432af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432af1:	xor    bl,0xeb
  432af4:	pop    ds
  432af5:	js     0x432ad2
  432af7:	jecxz  0x432b0b
  432af9:	and    eax,0x7f0fe588
  432afe:	add    BYTE PTR [eax],al
  432b00:	test   al,0x5f
  432b02:	or     DWORD PTR [esi],esp
  432b04:	jmp    0x432ae9
  432b06:	jae    0x432ac8
  432b08:	fistp  DWORD PTR fs:[edi]
  432b0b:	fisttp QWORD PTR [ebp-0x1a]
  432b0e:	arpl   WORD PTR [ebx-0x4d],cx
  432b11:	or     bl,al
  432b13:	jne    0x432ace
  432b15:	xor    ebp,edx
  432b17:	add    ebp,DWORD PTR [edx+0x2d29e6a8]
  432b1d:	out    0xc2,al
  432b1f:	jbe    0x432b75
  432b21:	in     eax,0xc7
  432b23:	jns    0x432b98
  432b25:	in     al,0x54
  432b27:	add    ebp,DWORD PTR [edx+0xd2a26af]
  432b2d:	out    0x1,al
  432b2f:	sbb    DWORD PTR [esi+0x7602ed70],ecx
  432b35:	int    0x66
  432b37:	jmp    0x432b8b
  432b39:	jmp    0x923c:0xfee6a18c
  432b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432b41:	xchg   DWORD PTR [esi+eiz*8+0x7015255f],ecx
  432b48:	lock aad 0x3c
  432b4b:	and    al,0x2f
  432b4d:	popa   
  432b4e:	jmp    FWORD PTR [ecx-0x80]
  432b51:	(bad)  
  432b53:	xor    ch,0x76
  432b56:	imul   esi,DWORD PTR [ecx],0xb6013433
  432b5c:	dec    esp
  432b5d:	aas    
  432b5e:	clc    
  432b5f:	push   esp
  432b60:	push   edx
  432b61:	push   ds
  432b62:	(bad)  
  432b63:	aad    0x0
  432b65:	add    BYTE PTR [ecx-0x360aa6d4],ah
  432b6b:	aaa    
  432b6c:	push   esp
  432b6d:	shl    DWORD PTR [eax+0x53e1e982],cl
  432b73:	call   0x613b1e70
  432b78:	adc    al,0xe0
  432b7a:	ins    BYTE PTR es:[edi],dx
  432b7b:	cmp    DWORD PTR [ebp-0x11],ebp
  432b7e:	out    dx,eax
  432b7f:	icebp  
  432b80:	mov    WORD PTR [edi],fs
  432b82:	dec    ebx
  432b83:	int3   
  432b84:	stc    
  432b85:	push   cs
  432b86:	sbb    bh,BYTE PTR [esi+edi*1+0x4f383e01]
  432b8d:	adc    DWORD PTR [edi+0xbf6f8df],edi
  432b93:	jo     0x432b8e
  432b95:	call   0xe6445fce
  432b9a:	dec    ebx
  432b9b:	int    0x3e
  432b9d:	jecxz  0x432bf8
  432b9f:	jmp    0xcef6:0xdf13c150
  432ba6:	pop    ebx
  432ba7:	pusha  
  432ba8:	icebp  
  432ba9:	add    BYTE PTR [esi],al
  432bab:	fsubr  st,st(6)
  432bad:	std    
  432bae:	shr    DWORD PTR [ebx+0x2],1
  432bb1:	dec    DWORD PTR [ebx+0x18]
  432bb4:	jg     0x432c03
  432bb6:	push   ss
  432bb7:	ins    BYTE PTR es:[edi],dx
  432bb8:	cmp    BYTE PTR [esi+eiz*4+0x7c],bh
  432bbc:	sar    dh,1
  432bbe:	shl    ebx,1
  432bc0:	mov    eax,0x1184383
  432bc5:	punpckhdq mm6,QWORD PTR [ecx+0x5b]
  432bc9:	pop    ebx
  432bca:	add    BYTE PTR [eax],al
  432bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432bcd:	jb     0x432bd3
  432bcf:	add    BYTE PTR [esp+eax*2],ah
  432bd2:	jmp    0xfb524795
  432bd7:	push   eax
  432bd8:	arpl   WORD PTR [eax+0x36515004],bp
  432bde:	or     eax,0x7830de16
  432be3:	les    edx,FWORD PTR [edx-0x668b479b]
  432be9:	loop   0x432ba3
  432beb:	jmp    0x445d3e
  432bf0:	mov    eax,ds:0xad1c4357
  432bf5:	cmc    
  432bf6:	daa    
  432bf7:	in     eax,dx
  432bf8:	test   al,0xc6
  432bfa:	das    
  432bfb:	lds    ebx,FWORD PTR [edx+0x7a4c8001]
  432c01:	inc    eax
  432c02:	or     BYTE PTR [ecx],0xb8
  432c05:	fld    DWORD PTR [ecx+0x18]
  432c08:	retf   
  432c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432c0a:	pop    esi
  432c0b:	add    DWORD PTR [esi+0xa],eax
  432c0e:	(bad)  
  432c0f:	(bad)  
  432c10:	push   ecx
  432c11:	pop    esp
  432c12:	call   0x30d87752
  432c17:	cmp    DWORD PTR [eax-0xf72d572],eax
  432c1d:	cmp    edi,DWORD PTR [eax+0x7b]
  432c20:	sbb    ch,al
  432c22:	ins    DWORD PTR es:[edi],dx
  432c23:	sbb    eax,0x85005637
  432c28:	test   DWORD PTR [ecx-0x2e088104],0x3a6
  432c32:	addr16 push eax
  432c34:	int3   
  432c35:	pop    ss
  432c36:	stos   BYTE PTR es:[di],al
  432c38:	cli    
  432c39:	adc    ebp,DWORD PTR [ecx]
  432c3b:	or     eax,0xe9f37efd
  432c40:	mov    DWORD PTR [edi+0x7eca3f6b],edi
  432c46:	hlt    
  432c47:	aad    0xd7
  432c49:	sub    DWORD PTR [ebx-0x58],esp
  432c4c:	mov    ebx,0x22b4bee7
  432c51:	cli    
  432c52:	inc    eax
  432c53:	sub    cl,ah
  432c55:	sub    DWORD PTR [eax+edi*4],eax
  432c58:	stos   DWORD PTR es:[edi],eax
  432c59:	ss cli 
  432c5b:	jmp    0x31aeb30d
  432c60:	in     eax,dx
  432c61:	xchg   BYTE PTR [esi],bh
  432c63:	sti    
  432c64:	aad    0x40
  432c66:	dec    ebp
  432c67:	add    dl,cl
  432c69:	gs xor eax,0x995f5275
  432c6f:	jp     0x432bf9
  432c71:	out    dx,eax
  432c72:	dec    esp
  432c73:	sub    BYTE PTR [ecx-0x5cc4b1c9],bl
  432c79:	sub    DWORD PTR [edx-0x380ff4d],esi
  432c7f:	sar    al,1
  432c81:	je     0x432cd5
  432c83:	data16 add BYTE PTR [ebp+0x7efbc177],al
  432c8a:	ja     0x432c61
  432c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432c8d:	sysret 
  432c8f:	push   0xe1e719cc
  432c94:	stc    
  432c95:	adc    eax,DWORD PTR [eax]
  432c97:	add    BYTE PTR [ecx],ah
  432c99:	lea    eax,[edi+edi*2]
  432c9c:	jnp    0x432c9f
  432c9e:	mov    bh,BYTE PTR [edi-0x3707cc3d]
  432ca4:	mov    cl,0xf7
  432ca6:	repnz ficomp WORD PTR [esi+0x60]
  432caa:	mov    ch,0xb9
  432cac:	sbb    BYTE PTR [ecx],ah
  432cae:	shl    DWORD PTR [eax],1
  432cb0:	sbb    eax,0x73c1aa26
  432cb5:	jg     0x432c63
  432cb7:	pop    es
  432cb8:	aaa    
  432cb9:	mov    al,dl
  432cbb:	bnd jmp eax
  432cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432cbf:	push   ebx
  432cc0:	aaa    
  432cc1:	iret   
  432cc2:	call   0x658e:0xa1af85b9
  432cc9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  432ccb:	or     dh,BYTE PTR [ebx-0x4dfbd536]
  432cd1:	jmp    0x992235cc
  432cd6:	test   eax,0x77aecd22
  432cdb:	sub    edx,ebp
  432cdd:	dec    ecx
  432cde:	addr16 and al,dh
  432ce1:	ja     0x432ce9
  432ce3:	adc    BYTE PTR [esi],dh
  432ce5:	push   0x3490bae0
  432cea:	push   ecx
  432ceb:	and    BYTE PTR [ebp-0x13de052],bl
  432cf1:	cmc    
  432cf2:	out    0x3,al
  432cf4:	jmp    0x9789:0xf9b446ae
  432cfb:	and    al,BYTE PTR [eax]
  432cfd:	add    BYTE PTR [ebx],cl
  432cff:	inc    eax
  432d00:	sti    
  432d01:	ds jge 0x432d6c
  432d04:	add    cl,BYTE PTR [edi-0x8721d98]
  432d0a:	ins    DWORD PTR es:[edi],dx
  432d0b:	push   0x2feb22fa
  432d10:	pop    es
  432d11:	cwde   
  432d12:	xor    BYTE PTR [edi+0x337e2b9b],al
  432d18:	jmp    0x29b2:0x1e3b003
  432d1f:	addr16 js 0x432ca9
  432d22:	pop    ebx
  432d23:	jge    0x432d46
  432d25:	pop    ebp
  432d26:	or     ebx,DWORD PTR [eax+0x11]
  432d29:	ins    BYTE PTR es:[edi],dx
  432d2a:	std    
  432d2b:	jne    0x432d81
  432d2d:	cmp    DWORD PTR [esi+0x48],edx
  432d30:	sbb    edi,esi
  432d32:	hlt    
  432d33:	loope  0x432cb8
  432d35:	lods   eax,DWORD PTR ds:[esi]
  432d36:	daa    
  432d37:	pop    edx
  432d38:	add    esp,DWORD PTR [ecx]
  432d3a:	(bad)  [edi+edi*1+0x40a6262d]
  432d41:	or     ch,cl
  432d43:	mov    edx,0xf49ec948
  432d48:	loop   0x432d3b
  432d4a:	sahf   
  432d4b:	cmp    al,dl
  432d4d:	shrd   DWORD PTR [ebx+0x3f],esi,0x62
  432d52:	out    dx,al
  432d53:	cmp    eax,0x54032f8a
  432d58:	cmp    bl,BYTE PTR [esi]
  432d5a:	out    dx,eax
  432d5b:	gs inc esp
  432d5d:	add    esi,DWORD PTR [edi]
  432d5f:	scas   eax,DWORD PTR es:[edi]
  432d60:	aas    
  432d61:	adc    eax,0x71820000
  432d66:	clc    
  432d67:	cld    
  432d68:	lods   al,BYTE PTR ds:[esi]
  432d69:	inc    ebx
  432d6a:	inc    ecx
  432d6b:	jmp    0xc3492323
  432d70:	lahf   
  432d71:	mov    DWORD PTR [edi+0x60],ebx
  432d74:	ins    DWORD PTR es:[edi],dx
  432d75:	test   DWORD PTR [eax],ecx
  432d77:	jg     0x432df7
  432d79:	sub    BYTE PTR [edi+0x72],bl
  432d7c:	and    ax,0x285f
  432d80:	push   esp
  432d81:	cmp    DWORD PTR [edi-0x1e],ebx
  432d84:	cmc    
  432d85:	push   esi
  432d86:	adc    DWORD PTR [edi+0x6a4f73bd],ecx
  432d8c:	(bad)  
  432d8d:	adc    al,0x86
  432d8f:	scas   eax,DWORD PTR es:[edi]
  432d90:	mov    al,ds:0x75605186
  432d95:	mov    eax,edi
  432d97:	add    BYTE PTR [ebx-0x1b],dh
  432d9a:	adc    al,BYTE PTR [eax+0x5e]
  432d9d:	mov    eax,0xf5d70cc4
  432da2:	ins    BYTE PTR es:[edi],dx
  432da3:	pop    edi
  432da4:	aad    0x6d
  432da6:	pop    edx
  432da7:	pop    ebx
  432da8:	ja     0x432d4b
  432daa:	mov    dh,0x18
  432dac:	push   ds
  432dad:	stos   BYTE PTR es:[edi],al
  432dae:	jg     0x432d9c
  432db0:	pop    edi
  432db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432db2:	or     esi,DWORD PTR [edi-0x7c38f7f1]
  432db8:	div    BYTE PTR [esi]
  432dba:	outs   dx,BYTE PTR ds:[esi]
  432dbb:	or     BYTE PTR [edi+0x2389f0f2],al
  432dc1:	adc    al,0xdf
  432dc3:	or     ecx,DWORD PTR [ebp+0x75133d]
  432dc9:	add    al,ah
  432dcb:	lods   eax,DWORD PTR ds:[esi]
  432dcc:	dec    ebp
  432dcd:	clc    
  432dce:	addr16 repnz cld 
  432dd1:	push   edx
  432dd2:	leave  
  432dd3:	leave  
  432dd4:	adc    al,0xff
  432dd6:	inc    ebx
  432dd7:	call   0x31172d22
  432ddc:	cld    
  432ddd:	jne    0x432da5
  432ddf:	adc    ebp,DWORD PTR [ebp-0x4]
  432de2:	dec    ecx
  432de3:	retf   0xe8f0
  432de6:	shl    BYTE PTR [ecx+eax*1],cl
  432de9:	add    BYTE PTR [edi+0x77],ah
  432dec:	or     BYTE PTR [eax],al
  432dee:	jecxz  0x432d9f
  432df0:	in     al,dx
  432df1:	cmp    edx,0x8e000230
  432df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432df8:	scas   eax,DWORD PTR es:[edi]
  432df9:	mov    fs:0xa1560134,eax
  432dff:	std    
  432e00:	push   ebp
  432e01:	and    cl,al
  432e03:	xchg   edx,eax
  432e04:	pop    esi
  432e05:	je     0x432dfd
  432e07:	outs   dx,DWORD PTR ds:[esi]
  432e08:	repz std 
  432e0a:	sbb    DWORD PTR [eax+0x4933e8],esi
  432e10:	hlt    
  432e11:	je     0x432e4a
  432e13:	in     eax,0x2c
  432e15:	inc    dx
  432e17:	xor    ah,BYTE PTR [ecx]
  432e19:	cs ja  0x432e7f
  432e1c:	mov    ds:0x88d8706f,al
  432e21:	xchg   edx,eax
  432e22:	test   edx,0x96f188aa
  432e28:	stos   BYTE PTR es:[edi],al
  432e29:	mov    BYTE PTR [ecx+0x21],bh
  432e2c:	mov    ecx,?
  432e2e:	add    BYTE PTR [eax],al
  432e30:	mov    dl,0xfe
  432e32:	cdq    
  432e33:	push   eax
  432e34:	mov    bh,0x88
  432e36:	jmp    0xa56cd33a
  432e3b:	(bad)  
  432e3c:	aaa    
  432e3d:	int    0x4
  432e3f:	call   0xfa65d4e6
  432e44:	lods   al,BYTE PTR ds:[esi]
  432e45:	popf   
  432e46:	mov    dh,cl
  432e48:	cmp    edx,0x2c
  432e4b:	xor    cl,BYTE PTR [edx-0x6a]
  432e4e:	sbb    BYTE PTR [esi],ch
  432e50:	not    DWORD PTR [esi+0xd6bc3ff]
  432e56:	std    
  432e57:	popa   
  432e58:	scas   al,BYTE PTR es:[edi]
  432e59:	pop    ss
  432e5a:	(bad)
  432e5d:	call   0xf189:0xdd40880e
  432e64:	dec    ebx
  432e65:	dec    BYTE PTR [ebx-0x5aa300e]
  432e6b:	cli    
  432e6c:	mov    al,0x51
  432e6e:	cmp    eax,0x90623b73
  432e73:	outs   dx,DWORD PTR ds:[esi]
  432e74:	(bad)  
  432e78:	cwde   
  432e79:	pop    ecx
  432e7a:	cmp    eax,0x622674
  432e7f:	bound  cx,DWORD PTR ss:[eax-0x6]
  432e84:	daa    
  432e85:	fiadd  DWORD PTR [edx+ebx*2-0x27]
  432e89:	rol    DWORD PTR [ebp-0x43],0x17
  432e8d:	xor    al,0xea
  432e8f:	mov    bh,bl
  432e91:	adc    esp,DWORD PTR [edx+0x34]
  432e94:	add    BYTE PTR [eax],al
  432e96:	aaa    
  432e97:	xor    al,0xea
  432e99:	fidiv  DWORD PTR [eax+0x68]
  432e9c:	iret   
  432e9d:	fidivr DWORD PTR [ecx+0x68]
  432ea0:	mov    ebx,0xeaeca790
  432ea5:	add    esi,DWORD PTR [edi]
  432ea7:	das    
  432ea8:	aaa    
  432ea9:	adc    al,BYTE PTR [ecx]
  432eab:	in     al,dx
  432eac:	gs or  al,0x95
  432eaf:	sbb    ebx,edx
  432eb1:	xchg   edx,eax
  432eb2:	cmp    ebp,DWORD PTR [ebx-0x54d0d560]
  432eb8:	test   al,0xa5
  432eba:	popa   
  432ebb:	jecxz  0x432f19
  432ebd:	add    bh,BYTE PTR [eax+0x3d4514f2]
  432ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ec4:	stos   BYTE PTR es:[edi],al
  432ec5:	test   eax,0x2c8ccc37
  432eca:	sti    
  432ecb:	fisub  WORD PTR [ebx-0x30]
  432ece:	push   eax
  432ecf:	lods   al,BYTE PTR ds:[esi]
  432ed0:	and    eax,0xa037d1e8
  432ed5:	enter  0x3414,0xdf
  432ed9:	push   ebp
  432eda:	jae    0x432ef4
  432edc:	add    BYTE PTR [ebx],al
  432ede:	not    BYTE PTR [ebp+0x6b]
  432ee1:	inc    ebx
  432ee2:	sbb    al,0x56
  432ee4:	jno    0x432eac
  432ee6:	and    al,0x2f
  432ee8:	aaa    
  432ee9:	inc    ebx
  432eea:	push   0xb31576cc
  432eef:	fidiv  WORD PTR [ecx-0x3a]
  432ef2:	cmp    BYTE PTR [ecx-0x4d5068d6],bh
  432ef8:	int    0xb
  432efa:	add    BYTE PTR [eax],al
  432efc:	aaa    
  432efd:	stos   DWORD PTR es:[edi],eax
  432efe:	in     eax,0xf3
  432f00:	es je  0x432eed
  432f03:	xchg   edi,eax
  432f04:	ds dec edx
  432f06:	ficomp DWORD PTR [esi]
  432f08:	or     ebp,DWORD PTR [ecx+eax*1]
  432f0b:	fs jno 0x432f80
  432f0e:	push   ecx
  432f0f:	cs and eax,0xb5f5bd5e
  432f15:	pop    edi
  432f16:	add    eax,0x6b2cc8e9
  432f1b:	cmc    
  432f1c:	cmp    DWORD PTR [eax+0x5],ebp
  432f1f:	pop    esp
  432f20:	jns    0x432ea4
  432f22:	push   ecx
  432f23:	push   es
  432f24:	add    eax,0x21edbd5e
  432f29:	push   0x2e6f630d
  432f2e:	clc    
  432f2f:	je     0x432f55
  432f31:	or     dh,BYTE PTR [ebx]
  432f33:	out    0xc0,al
  432f35:	adc    DWORD PTR [esi+0x19692926],eax
  432f3b:	shl    DWORD PTR [ecx-0x443107b8],0x60
  432f42:	sbb    ebp,ebp
  432f44:	mov    ds:0x4ea93431,al
  432f49:	xor    DWORD PTR [eax],ecx
  432f4b:	jg     0x432f3d
  432f4d:	inc    ebp
  432f4e:	mov    DWORD PTR [esi],esp
  432f50:	jmp    0xf848:0xc990fed6
  432f57:	sahf   
  432f58:	scas   al,BYTE PTR es:[edi]
  432f59:	bound  edx,QWORD PTR [ecx]
  432f5b:	add    esp,edi
  432f5d:	mov    al,0x40
  432f5f:	test   DWORD PTR [eax],0xf8838400
  432f65:	call   0x979:0x6a21682a
  432f6c:	clc    
  432f6d:	cld    
  432f6e:	mov    eax,0x429af883
  432f73:	mov    ds:0x67360d3e,al
  432f78:	and    DWORD PTR [edx-0x11],ebp
  432f7b:	inc    esp
  432f7c:	imul   ebp,eax,0xffffffe4
  432f7f:	sub    ecx,0xfffffff4
  432f82:	pop    ebp
  432f83:	loopne 0x432f7d
  432f85:	add    BYTE PTR [ecx+0x59145388],al
  432f8b:	mov    ch,0xf0
  432f8d:	inc    BYTE PTR [ecx+0x3f]
  432f90:	add    al,0x0
  432f92:	pop    esi
  432f93:	xor    DWORD PTR [esi-0x2e],edi
  432f96:	retf   0x802f
  432f99:	ja     0x432ff9
  432f9b:	scas   al,BYTE PTR es:[edi]
  432f9c:	jge    0x432f96
  432f9e:	inc    eax
  432f9f:	aas    
  432fa0:	sti    
  432fa1:	call   0x3872be
  432fa6:	lds    esi,FWORD PTR [esi-0x17]
  432fa9:	jecxz  0x432feb
  432fab:	inc    eax
  432fac:	sti    
  432fad:	push   ebp
  432fae:	aad    0x23
  432fb0:	ja     0x432f9e
  432fb2:	add    ah,BYTE PTR [edi-0x74f174ad]
  432fb8:	sbb    al,0x8d
  432fba:	pop    ebx
  432fbb:	or     al,0x48
  432fbd:	push   esi
  432fbe:	je     0x432fff
  432fc0:	daa    
  432fc1:	inc    DWORD PTR [ecx]
  432fc3:	out    0xd4,al
  432fc5:	adc    DWORD PTR [eax],eax
  432fc7:	add    BYTE PTR [esi+0x38],bl
  432fca:	jle    0x432f8c
  432fcc:	dec    edx
  432fcd:	fadd   DWORD PTR [ecx+0x1130ba7d]
  432fd3:	add    dh,bl
  432fd5:	lds    edx,FWORD PTR [ebx]
  432fd7:	neg    DWORD PTR [ebx]
  432fd9:	inc    eax
  432fda:	add    DWORD PTR [ecx],eax
  432fdc:	into   
  432fdd:	xor    BYTE PTR [esi+0xe],ch
  432fe0:	cmc    
  432fe1:	(bad)
  432fe4:	sbb    ecx,DWORD PTR [eax+0x2f]
  432fe7:	(bad)  
  432fe8:	enter  0x2034,0xc6
  432fec:	inc    ebp
  432fed:	cmp    DWORD PTR [edi-0x39],edi
  432ff0:	and    DWORD PTR [esi-0x54b43c37],ebx
  432ff6:	in     al,dx
  432ff7:	add    DWORD PTR [edx],0xffffffcd
  432ffa:	push   edx
  432ffb:	xor    ecx,DWORD PTR [eax]
  432ffd:	lods   al,BYTE PTR ds:[esi]
  432ffe:	mov    bh,0x89
  433000:	aaa    
  433001:	add    BYTE PTR ds:0x156ddfe7,bl
  433007:	cli    
  433008:	mov    ah,0x72
  43300a:	test   BYTE PTR [edx],0xb5
  43300d:	and    al,0x4
  43300f:	add    BYTE PTR [edi],dh
  433011:	pop    eax
  433012:	mov    edi,0xc4f107fb
  433017:	gs dec ecx
  433019:	call   0x1038:0xe760faaa
  433020:	test   edx,0x5740bf7f
  433026:	aaa    
  433027:	dec    DWORD PTR [eax-0x36]
  43302a:	stos   BYTE PTR es:[edi],al
  43302b:	push   ds
  43302c:	add    BYTE PTR [eax],al
  43302e:	mov    dl,0x97
  433030:	xor    BYTE PTR [ebp-0x59],ah
  433033:	mov    edx,0x34f1415
  433038:	(bad)  
  43303b:	mov    DWORD PTR [ecx],ecx
  43303d:	push   edx
  43303e:	(bad)  
  43303f:	fisttp DWORD PTR [ecx-0x4fe1fcbc]
  433045:	gs adc bl,ch
  433048:	repnz xlat BYTE PTR ds:[ebx]
  43304a:	es or  eax,0xcaf784fd
  433050:	js     0x432fef
  433052:	aaa    
  433053:	int    0x4
  433055:	push   ebx
  433056:	ret    0x3108
  433059:	push   ecx
  43305a:	mov    esp,0x27e6ad8a
  43305f:	into   
  433060:	adc    al,0x7e
  433062:	(bad)  
  433064:	or     eax,DWORD PTR [ebx+0x4cdc3]
  43306a:	mov    ebp,0xcef884e2
  43306f:	loope  0x433072
  433071:	cmp    BYTE PTR [esi-0x4bf36d4b],0x65
  433078:	add    dh,BYTE PTR [ebp+0x3f]
  43307b:	xor    al,0x73
  43307d:	inc    edi
  43307e:	pop    ecx
  43307f:	jno    0x433067
  433081:	add    al,0xf4
  433083:	xor    al,0xc4
  433085:	add    edx,DWORD PTR [eax]
  433087:	fcmovu st,st(5)
  433089:	xchg   esi,eax
  43308a:	daa    
  43308b:	test   eax,0x8364d0be
  433090:	push   edx
  433091:	stos   DWORD PTR es:[edi],eax
  433092:	add    BYTE PTR [eax],al
  433094:	sysenter 
  433096:	jmp    0x5141:0xaddb6886
  43309d:	jg     0x433112
  43309f:	inc    edi
  4330a0:	sbb    DWORD PTR [ecx-0x1a],esi
  4330a3:	mov    dh,bl
  4330a5:	xor    BYTE PTR [ebx+0x2c],ch
  4330a8:	cmp    ebp,DWORD PTR [ebp-0x7c9c2f62]
  4330ae:	ins    DWORD PTR es:[edi],dx
  4330af:	shl    DWORD PTR [esp+eax*4-0x9],0x90
  4330b4:	sub    al,0xf2
  4330b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4330b7:	rol    BYTE PTR [ecx*8+0x4594d163],1
  4330be:	sub    al,BYTE PTR [ecx+ebx*4]
  4330c1:	fcmovnbe st,st(7)
  4330c3:	xor    DWORD PTR [ebx-0x462aa90d],esi
  4330c9:	jo     0x4330ad
  4330cb:	out    dx,al
  4330cc:	leave  
  4330cd:	mov    dh,0xd2
  4330cf:	add    BYTE PTR [eax-0xafc25a7],al
  4330d5:	jo     0x43306d
  4330d7:	sub    al,0xbf
  4330d9:	jo     0x433068
  4330db:	(bad)  
  4330dc:	xor    BYTE PTR [edi-0x1147f7cb],ch
  4330e2:	xchg   edi,eax
  4330e3:	mov    al,0x28
  4330e5:	dec    esi
  4330e6:	jmp    0x7830:0x1da93bad
  4330ed:	xchg   DWORD PTR [ebx+ebx*1],edx
  4330f0:	mov    ebp,0x44435e01
  4330f5:	aaa    
  4330f6:	add    DWORD PTR [eax+0x0],esp
  4330f9:	add    bh,cl
  4330fb:	loop   0x433155
  4330fd:	pop    esp
  4330fe:	ja     0x4330de
  433100:	push   ecx
  433101:	data16 (bad) 
  433103:	fisubr WORD PTR [ebx-0x1]
  433106:	loope  0x433158
  433108:	clc    
  433109:	push   esi
  43310a:	xchg   esi,edi
  43310c:	adc    ch,BYTE PTR [ecx+0x413eb334]
  433112:	mov    esi,0x34edc3eb
  433117:	mov    bl,0xf8
  433119:	pushf  
  43311a:	ror    esi,0x82
  43311d:	cmp    eax,0xe9f8d924
  433122:	fcmovnu st,st(2)
  433124:	test   al,0xaa
  433126:	xor    al,0xb
  433128:	mov    esi,0x8ade7760
  43312d:	fs adc al,0xd8
  433130:	clc    
  433131:	push   es
  433132:	mov    bl,0xa7
  433134:	aad    0xfc
  433136:	push   ds
  433137:	fimul  WORD PTR [edx-0x72793a4]
  43313d:	out    dx,al
  43313e:	mov    esp,0x3ee4cdb8
  433143:	fimul  WORD PTR [edx-0x7279c6c]
  433149:	(bad)  
  43314a:	mov    esp,0x2eccc598
  43314f:	ficomp WORD PTR [edi+0x75]
  433152:	nop
  433153:	loope  0x43314b
  433155:	mov    esi,0x6485531e
  43315a:	pop    ds
  43315b:	fdivr  st,st(0)
  43315d:	scas   al,BYTE PTR es:[edi]
  43315e:	add    BYTE PTR [eax],al
  433160:	xchg   ebp,eax
  433161:	lods   eax,DWORD PTR ds:[esi]
  433162:	xchg   esi,eax
  433163:	mov    cl,0x48
  433165:	fdivp  st(0),st
  433167:	pop    es
  433168:	scas   eax,DWORD PTR es:[edi]
  433169:	mov    al,0xbd
  43316b:	xchg   esp,eax
  43316c:	ficomp WORD PTR cs:[edi+0x5d]
  433170:	push   0xb900f699
  433175:	cmp    esp,DWORD PTR [edx-0x74]
  433178:	imul   edi,DWORD PTR [ebp+esi*8-0x1],0x29
  43317d:	pop    esp
  43317e:	mov    eax,DWORD PTR [ebp-0x4bed2]
  433184:	and    eax,0x13890499
  433189:	or     ch,dh
  43318b:	(bad)  
  43318c:	jmp    0x51476f41
  433191:	pop    ecx
  433192:	sub    ch,bh
  433194:	stc    
  433195:	cmp    al,BYTE PTR [ecx]
  433197:	add    BYTE PTR [edi+0x32858a35],cl
  43319d:	inc    ecx
  43319e:	sti    
  43319f:	call   ebp
  4331a1:	out    dx,eax
  4331a2:	cld    
  4331a3:	push   0x38e456
  4331a8:	out    0x58,eax
  4331aa:	in     al,0xfd
  4331ac:	sub    DWORD PTR [ebx],edi
  4331ae:	sti    
  4331af:	adc    eax,0x38e52e
  4331b4:	(bad)
  4331b7:	xor    ecx,DWORD PTR [ebx]
  4331b9:	or     BYTE PTR [edx],cl
  4331bb:	add    BYTE PTR [esi],bl
  4331bd:	xor    eax,0x3b95c3ca
  4331c2:	dec    ebp
  4331c3:	mov    eax,DWORD PTR [eax]
  4331c5:	add    BYTE PTR [edx],cl
  4331c7:	mov    ds:0x3bf94fe9,al
  4331cc:	sti    
  4331cd:	int3   
  4331ce:	and    eax,0x5db00131
  4331d3:	xor    BYTE PTR [esi+0x3],ch
  4331d6:	int3   
  4331d7:	xor    al,0x1
  4331d9:	jmp    0x446560
  4331de:	push   ebp
  4331df:	cmp    al,0x52
  4331e1:	mov    ebp,DWORD PTR [edi+esi*8+0x59e174c1]
  4331e8:	bnd je 0x4331c8
  4331eb:	lahf   
  4331ec:	jg     0x4331ed
  4331ee:	aaa    
  4331ef:	push   ebp
  4331f0:	sti    
  4331f1:	test   DWORD PTR [edi],esp
  4331f3:	push   ebx
  4331f4:	cld    
  4331f5:	dec    ecx
  4331f6:	scas   eax,DWORD PTR es:[edi]
  4331f7:	sti    
  4331f8:	les    eax,FWORD PTR [eax-0x4e]
  4331fb:	pusha  
  4331fc:	xchg   eax,esi
  4331fe:	or     al,0x41
  433200:	ds retf 
  433202:	jnp    0x4331ba
  433204:	inc    eax
  433205:	retf   
  433206:	jae    0x433226
  433208:	inc    eax
  433209:	retf   
  43320a:	imul   eax,DWORD PTR [esi],0x40
  43320d:	retf   
  43320e:	adc    DWORD PTR [ebp+0x19],0x54
  433212:	mov    esp,0xea86b316
  433217:	loop   0x4331ca
  433219:	xchg   BYTE PTR [edi+0x35],bh
  43321c:	pop    ss
  43321d:	jno    0x433200
  43321f:	push   ebp
  433220:	mov    edi,0x6ceba0b
  433225:	dec    edi
  433226:	scas   al,BYTE PTR es:[edi]
  433227:	xchg   DWORD PTR [eax],edx
  433229:	push   ecx
  43322a:	add    BYTE PTR [eax],al
  43322c:	dec    esp
  43322d:	int    0x7f
  43322f:	dec    eax
  433230:	aaa    
  433231:	push   esi
  433232:	xchg   ebx,edi
  433234:	mov    esp,0xc8f2d524
  433239:	call   0xcb56d5bd
  43323e:	add    al,0x0
  433240:	aaa    
  433241:	push   edx
  433242:	mov    edi,0xb3bf8413
  433247:	cli    
  433248:	mov    bl,ch
  43324a:	add    ebx,0x2b
  43324d:	push   eax
  43324e:	cmp    eax,0x2f523579
  433253:	inc    BYTE PTR [ebx-0x760d2407]
  433259:	out    0x8c,al
  43325b:	dec    esp
  43325c:	sub    esp,DWORD PTR [edx-0x4e]
  43325f:	pop    es
  433260:	mov    esp,0x2cc28c9c
  433265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433266:	xchg   ecx,eax
  433267:	sbb    bh,BYTE PTR [edx+0x4190b134]
  43326d:	stos   DWORD PTR es:[edi],eax
  43326e:	mov    bl,0xeb
  433270:	std    
  433271:	les    esp,FWORD PTR [esp+edi*8-0x4e]
  433275:	inc    eax
  433276:	jmp    0x30784f06
  43327b:	mov    WORD PTR [eax],gs
  43327d:	je     0x4332dc
  43327f:	push   cs
  433280:	sub    esp,esp
  433282:	arpl   cx,cx
  433284:	cmp    al,0xab
  433286:	or     eax,0x23dd580c
  43328b:	sbb    ah,BYTE PTR ds:0xbab890
  433291:	add    ch,ch
  433293:	stos   BYTE PTR es:[edi],al
  433294:	inc    ebp
  433295:	mov    ecx,0x4816e8c9
  43329a:	ins    BYTE PTR es:[edi],dx
  43329b:	call   0xe8af7ace
  4332a0:	es dec eax
  4332a2:	jl     0x43328c
  4332a4:	arpl   WORD PTR [edi],dx
  4332a6:	add    ebp,DWORD PTR [ebx+0x344c8536]
  4332ac:	jmp    0x73c669b4
  4332b1:	mov    ecx,0x99637f38
  4332b6:	cmp    al,0xb1
  4332b8:	xor    edx,DWORD PTR [ecx-0x70004ee8]
  4332be:	adc    al,0xd7
  4332c0:	int    0x7
  4332c2:	inc    ebp
  4332c3:	je     0x4332af
  4332c5:	test   eax,0xa9ea4d28
  4332ca:	and    BYTE PTR [ebp-0x16],cl
  4332cd:	test   eax,0xedeaee18
  4332d2:	adc    bh,dl
  4332d4:	jmp    0x8116:0xc7d61e2b
  4332db:	lock (bad) 
  4332dd:	mov    dh,0x61
  4332df:	stos   DWORD PTR es:[edi],eax
  4332e0:	mov    ebp,0x17db1b8
  4332e5:	(bad)  
  4332e6:	(bad)  
  4332e7:	es jle 0x4332a1
  4332ea:	mov    dl,0x34
  4332ec:	test   BYTE PTR [edi+eiz*8],ah
  4332ef:	(bad)  
  4332f0:	ins    DWORD PTR es:[edi],dx
  4332f1:	les    ebp,FWORD PTR [ecx]
  4332f3:	inc    eax
  4332f4:	add    eax,0xf40000ff
  4332f9:	(bad)  
  4332fa:	push   0xffffffe9
  4332fc:	mov    ss,esi
  4332fe:	push   0xffffffe9
  433300:	mov    ss,esi
  433302:	push   0xffffffe9
  433304:	jno    0x4332dd
  433306:	push   cs
  433307:	jmp    0x2e2c6740
  43330c:	dec    edx
  43330d:	(bad)  
  43330f:	push   0x58
  433311:	inc    ebx
  433312:	push   edi
  433313:	mov    esi,0xb4deadcd
  433318:	cmc    
  433319:	push   ebp
  43331a:	clc    
  43331b:	jmp    0x4332c3
  43331d:	loop   0x433367
  43331f:	not    BYTE PTR [ecx]
  433321:	fld    QWORD PTR [edx+eax*2]
  433324:	xor    DWORD PTR [eax-0x13],esi
  433327:	jmp    0x60446760
  43332c:	lahf   
  43332d:	fimul  DWORD PTR [edx-0x6357c35c]
  433333:	jmp    0x6244676c
  433338:	or     DWORD PTR [esi],ecx
  43333a:	(bad)  
  43333b:	fiadd  DWORD PTR [esi]
  43333d:	loop   0x43332e
  43333f:	test   eax,0x7609deb5
  433344:	xor    ebp,DWORD PTR [edi+0x68bdd13e]
  43334a:	or     eax,0x5483eb99
  43334f:	jb     0x4333ab
  433351:	int    0xc2
  433353:	fild   QWORD PTR [edx]
  433355:	fiadd  DWORD PTR [ebp+ebp*4-0x176832fd]
  43335c:	add    BYTE PTR [eax],al
  43335e:	xor    al,0x34
  433360:	mov    WORD PTR [eax],es
  433362:	sbb    ebx,eax
  433364:	shr    eax,1
  433366:	loope  0x4333b8
  433368:	ret    0x9d03
  43336b:	stos   DWORD PTR es:[edi],eax
  43336c:	call   0xfbe570c7
  433371:	push   ebp
  433372:	fidiv  DWORD PTR [esp+eax*8+0x7a705b0c]
  433379:	or     al,0x55
  43337b:	test   DWORD PTR [eax],ecx
  43337d:	mov    esp,DWORD PTR [eax+0x2ae8b7ab]
  433383:	ds sti 
  433385:	jmp    DWORD PTR ds:0x4d571095
  43338b:	mov    al,ds:0xb48a55fb
  433390:	les    ecx,FWORD PTR [ebx+ecx*1]
  433393:	jo     0x43340f
  433395:	or     al,0x5
  433397:	test   DWORD PTR [eax],ecx
  433399:	mov    edx,DWORD PTR [ecx-0x55]
  43339c:	mov    bh,0xe8
  43339e:	(bad)  
  43339f:	aas    
  4333a0:	sti    
  4333a1:	inc    DWORD PTR ds:0xc85710ed
  4333a7:	mov    ds:0xb48a55fb,al
  4333ac:	les    ecx,FWORD PTR [ebx+ebx*8]
  4333af:	outs   dx,DWORD PTR ds:[esi]
  4333b0:	jp     0x4333be
  4333b2:	in     eax,0x84
  4333b4:	or     BYTE PTR [ebx-0x173d54df],cl
  4333ba:	jb     0x4333fb
  4333bc:	sti    
  4333bd:	jmp    DWORD PTR [ebp+0x44]
  4333c0:	jb     0x4333dd
  4333c2:	add    BYTE PTR [eax],al
  4333c4:	dec    ebp
  4333c5:	sahf   
  4333c6:	or     BYTE PTR [ebx],bh
  4333c8:	push   eax
  4333c9:	ret    
  4333ca:	adc    al,0x8b
  4333cc:	retf   
  4333cd:	fcom   DWORD PTR [edx+0x53]
  4333d0:	mov    esp,0x8d144d3f
  4333d5:	adc    eax,0xbede850c
  4333da:	jmp    0x863d6b1a
  4333df:	sbb    al,0x34
  4333e1:	or     ch,ch
  4333e3:	ss pop edx
  4333e5:	repz test DWORD PTR [esp+edi*4],edx
  4333e9:	pmaddwd mm2,QWORD PTR [ecx-0x7c]
  4333ed:	cmp    ecx,DWORD PTR [esi]
  4333ef:	push   esp
  4333f0:	dec    ebx
  4333f1:	dec    edx
  4333f2:	cmp    BYTE PTR [ebx],cl
  4333f4:	mov    dl,0x8a
  4333f6:	mov    fs,edi
  4333f8:	fmul   st(1),st
  4333fa:	jg     0x433444
  4333fc:	aaa    
  4333fd:	repnz (bad) 
  4333ff:	paddb  mm4,QWORD PTR [esi+eax*4-0xae053f1]
  433407:	push   ecx
  433408:	or     BYTE PTR [esi+ecx*1],bh
  43340b:	push   esp
  43340c:	inc    ebx
  43340d:	dec    edx
  43340e:	cmp    BYTE PTR [ebx],cl
  433410:	mov    edx,0x5ce88d8a
  433415:	outs   dx,BYTE PTR ds:[esi]
  433416:	test   DWORD PTR [eax],edi
  433418:	mov    esp,0x7086f49f
  43341d:	mul    cl
  43341f:	xchg   BYTE PTR [ecx+esi*1+0x3e],ch
  433423:	inc    ebp
  433424:	scas   al,BYTE PTR es:[edi]
  433425:	mov    bh,0x14
  433427:	or     al,BYTE PTR [eax]
  433429:	add    BYTE PTR [ecx+0x28803fe],ch
  43342f:	sar    ch,cl
  433431:	mov    cl,0x47
  433433:	push   ebx
  433434:	call   0xa7b85c39
  433439:	push   es
  43343a:	mov    edi,0x475489da
  43343f:	mov    dh,BYTE PTR [edi-0x33]
  433442:	retf   0xd92b
  433445:	repnz sub BYTE PTR [eax-0x7b],cl
  433449:	cli    
  43344a:	xor    bl,dl
  43344c:	sub    dh,0x1e
  43344f:	dec    esi
  433450:	or     eax,0x8fdf20fa
  433455:	subps  xmm6,XMMWORD PTR [edi+edx*8]
  433459:	xchg   edi,eax
  43345a:	pop    ebx
  43345b:	fucomip st,st(3)
  43345d:	cmp    BYTE PTR [edi+0x34],0x3
  433461:	xchg   ecx,eax
  433462:	xor    BYTE PTR [edi],cl
  433464:	enter  0x1f9a,0xbf
  433468:	and    eax,0x1a6b86ec
  43346d:	adc    eax,DWORD PTR [ebx+0x2c486b28]
  433473:	mov    ecx,0xfcf98aa
  433478:	xchg   edi,eax
  433479:	xchg   esi,eax
  43347a:	sub    eax,0x7f80ebdf
  43347f:	xor    al,0xc3
  433481:	nop
  433482:	xor    BYTE PTR [edi-0x33feefe3],bh
  433488:	clc    
  433489:	idiv   BYTE PTR [ecx+0xb9e281]
  43348f:	add    BYTE PTR ds:0x44b96f65,al
  433495:	mov    bh,0x9e
  433497:	add    BYTE PTR [edx-0x46d6290c],dh
  43349d:	jns    0x4334f5
  43349f:	jg     0x433484
  4334a1:	retf   
  4334a2:	arpl   WORD PTR [esi],di
  4334a4:	mov    ecx,0x513f03cb
  4334a9:	les    eax,FWORD PTR [ebx]
  4334ab:	adc    eax,0x4b031eec
  4334b0:	fldcw  WORD PTR [eax]
  4334b2:	arpl   cx,ax
  4334b4:	fs mov ebp,0xd2e0815e
  4334ba:	pop    ds
  4334bb:	adc    edi,DWORD PTR [edi+0x4c046590]
  4334c1:	ror    DWORD PTR [edi],cl
  4334c3:	lds    ebp,FWORD PTR [edi+0x62cf0e81]
  4334c9:	inc    edi
  4334ca:	sar    DWORD PTR [esi-0x4d],0xcc
  4334ce:	jae    0x433469
  4334d0:	cmp    BYTE PTR [ebp-0x23cf6bff],bh
  4334d6:	push   0xffffffef
  4334d8:	inc    ebp
  4334d9:	into   
  4334da:	cmp    al,0xc3
  4334dc:	test   eax,0x2f2c8c27
  4334e1:	mov    esp,0xcdac6495
  4334e6:	clc    
  4334e7:	into   
  4334e8:	jnp    0x433491
  4334ea:	xchg   cl,ch
  4334ec:	inc    ebp
  4334ed:	into   
  4334ee:	clc    
  4334ef:	sub    BYTE PTR [edx-0x80],ch
  4334f2:	in     eax,dx
  4334f3:	repnz add BYTE PTR [eax],al
  4334f6:	ins    DWORD PTR es:[edi],dx
  4334f7:	bound  eax,QWORD PTR [edi]
  4334f9:	bound  esp,QWORD PTR [edi-0x34e37332]
  4334ff:	mov    ebx,0xd2ba176
  433504:	not    DWORD PTR [esi-0x69145db]
  43350a:	cmp    DWORD PTR [eax-0x13],edi
  43350d:	push   0x4c
  43350f:	xor    al,0x8a
  433511:	and    al,0x4f
  433513:	ds mov esi,ebp
  433516:	inc    esi
  433517:	into   
  433518:	clc    
  433519:	bound  esp,QWORD PTR [eax]
  43351b:	mov    eax,0xce256679
  433520:	mov    WORD PTR [ebp-0x41],fs
  433523:	shl    bh,cl
  433525:	push   esi
  433526:	and    eax,0xfb4d4ebc
  43352b:	ja     0x433526
  43352d:	jb     0x433551
  43352f:	mov    edx,0xce3550f9
  433534:	clc    
  433535:	ss loope 0x433505
  433538:	dec    esi
  433539:	bound  edi,QWORD PTR [eax]
  43353b:	or     BYTE PTR [edi+0x72],0xaf
  43353f:	cmp    dh,BYTE PTR [edx+eax*2]
  433542:	jns    0x433525
  433544:	ins    DWORD PTR es:[edi],dx
  433545:	in     al,dx
  433546:	jae    0x4335b7
  433548:	add    eax,0xecd5496
  43354d:	add    BYTE PTR [edx],ch
  43354f:	int3   
  433550:	cmp    BYTE PTR [eax],al
  433552:	push   ecx
  433553:	xor    eax,0x360e0013
  433558:	dec    eax
  433559:	push   ebx
  43355a:	add    BYTE PTR [eax],al
  43355c:	mov    ebp,0x96e8478a
  433561:	and    al,0xfb
  433563:	call   FWORD PTR [ebp-0x297ceb84]
  433569:	and    ebx,DWORD PTR [edx+0x5b]
  43356c:	dec    ebx
  43356d:	ja     0x4335a8
  43356f:	pop    ebp
  433570:	push   cs
  433571:	stos   BYTE PTR es:[edi],al
  433572:	iret   
  433573:	jmp    DWORD PTR [ebx]
  433575:	int3   
  433576:	sti    
  433577:	jne    0x433577
  433579:	and    al,0x6d
  43357b:	or     al,0x40
  43357d:	xor    al,bl
  43357f:	adc    esi,ebx
  433581:	xor    eax,0xcec478
  433586:	mov    eax,0x1a50af7d
  43358b:	and    DWORD PTR [esi-0x462892da],0xffffffc9
  433592:	or     al,0x16
  433594:	pop    esi
  433595:	cmp    ah,al
  433597:	add    BYTE PTR [ebp+esi*1+0x1],ch
  43359b:	add    BYTE PTR [ebp-0x2c00809c],dh
  4335a1:	push   eax
  4335a2:	in     al,dx
  4335a3:	(bad)  
  4335a4:	ror    ecx,cl
  4335a6:	dec    eax
  4335a7:	jmp    DWORD PTR [ebx-0x3b]
  4335aa:	sti    
  4335ab:	jne    0x433607
  4335ad:	and    al,0x6d
  4335af:	or     BYTE PTR [esi],al
  4335b1:	mov    esp,0xb729fffb
  4335b6:	les    edx,FWORD PTR [eax]
  4335b8:	retf   
  4335b9:	js     0x433587
  4335bb:	int3   
  4335bc:	mov    ebp,0x8b538b
  4335c1:	add    BYTE PTR [edx-0x6d74f727],dl
  4335c7:	fst    DWORD PTR [ebx+ecx*4]
  4335ca:	aaa    
  4335cb:	xchg   edi,eax
  4335cc:	loopne 0x4335e5
  4335ce:	loop   0x43355c
  4335d0:	mov    ah,0x50
  4335d2:	xchg   BYTE PTR [ebx-0x248a0200],ah
  4335d8:	mov    al,ds:0x4db6afa
  4335dd:	add    BYTE PTR [edi],dh
  4335df:	jl     0x4335de
  4335e1:	scas   eax,DWORD PTR es:[edi]
  4335e2:	je     0x4335bf
  4335e4:	int    0xc3
  4335e6:	mov    esi,0x9b07e916
  4335eb:	push   esp
  4335ec:	(bad)  
  4335ee:	clc    
  4335ef:	fiadd  DWORD PTR [edi+eax*4]
  4335f2:	jnp    0x433633
  4335f4:	int    0x86
  4335f6:	pop    ebx
  4335f8:	jne    0x433645
  4335fa:	sbb    esi,DWORD PTR [edi]
  4335fc:	into   
  4335fd:	sbb    BYTE PTR [edx+ecx*1-0x672e80ff],ch
  433604:	nop
  433605:	ss mov esp,0xb433e906
  43360b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43360c:	adc    dh,BYTE PTR [ebx+0x33]
  43360f:	out    0xe,al
  433611:	jno    0x433674
  433613:	dec    eax
  433614:	shl    BYTE PTR [ecx-0x46],1
  433617:	cs dec esi
  433619:	shrd   ebp,edx,0x7b
  43361d:	inc    edi
  43361e:	sub    ebx,DWORD PTR [esi-0x7b]
  433621:	add    esi,DWORD PTR [edi]
  433623:	lock cmp BYTE PTR [edi+0x0],ah
  433627:	add    BYTE PTR [esi],dh
  433629:	fadd   QWORD PTR [eax+eax*1]
  43362c:	lods   al,BYTE PTR ds:[esi]
  43362d:	popf   
  43362e:	cld    
  43362f:	out    0x89,eax
  433631:	retf   
  433632:	add    al,0x0
  433634:	scas   al,BYTE PTR es:[edi]
  433635:	fild   DWORD PTR [eax+eax*1]
  433638:	aaa    
  433639:	inc    esi
  43363a:	mov    ebp,0xeeda4f07
  43363f:	call   FWORD PTR [eax+0x75]
  433642:	push   esp
  433643:	arpl   ax,ax
  433645:	xor    esp,ebp
  433647:	add    esi,DWORD PTR [edi]
  433649:	xor    al,0xea
  43364b:	test   BYTE PTR [ebx+ebp*1-0x51],dh
  43364f:	mov    cl,0xe1
  433651:	hlt    
  433652:	arpl   WORD PTR [edi-0x3e08c7ac],di
  433658:	xor    al,0x36
  43365a:	jmp    0x3703:0xe98c3703
  433661:	xor    al,0x6e
  433663:	aam    0xb9
  433665:	js     0x43366d
  433667:	cld    
  433668:	mov    cl,0x7c
  43366a:	repnz sar al,cl
  43366d:	fmul   QWORD PTR [esi+0xb]
  433670:	std    
  433671:	iret   
  433672:	sub    eax,0xbf2c587b
  433677:	xchg   esp,eax
  433678:	cmp    al,0xcf
  43367a:	cmp    dh,ah
  43367c:	fld    QWORD PTR [esi+edx*8+0x1b]
  433680:	push   ds
  433681:	iret   
  433682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433683:	sqrtps xmm7,xmm0
  433686:	out    dx,al
  433687:	mov    al,0xb1
  433689:	js     0x433649
  43368b:	sti    
  43368c:	add    BYTE PTR [eax],al
  43368e:	mov    ecx,0xaff3c668
  433693:	xor    dl,BYTE PTR [edx+0x3]
  433696:	aaa    
  433697:	xor    al,0xea
  433699:	inc    edx
  43369a:	add    edi,DWORD PTR [ebx-0x44c717da]
  4336a0:	ror    DWORD PTR [esi],0x27
  4336a3:	xor    BYTE PTR [edi-0x6b],ah
  4336a6:	sub    bh,cl
  4336a8:	(bad)  
  4336aa:	nop
  4336ab:	sub    DWORD PTR [edi+0xf],edx
  4336ae:	jge    0x433663
  4336b0:	es add dl,bl
  4336b3:	icebp  
  4336b4:	fiadd  WORD PTR [ebx]
  4336b6:	or     ah,BYTE PTR [esi-0x69]
  4336b9:	mov    dl,0xb1
  4336bb:	(bad)  
  4336bd:	inc    ebx
  4336be:	adc    ebx,ebp
  4336c0:	add    edx,edi
  4336c2:	es push ds
  4336c4:	out    dx,eax
  4336c5:	cli    
  4336c6:	inc    ecx
  4336c7:	retf   0xc2d2
  4336ca:	cdq    
  4336cb:	ins    DWORD PTR es:[edi],dx
  4336cc:	push   esi
  4336cd:	sub    bh,BYTE PTR [eax+ebx*8-0xc43e774]
  4336d4:	imul   ebp,eax,0x4c
  4336d7:	jbe    0x4336eb
  4336d9:	jmp    0xbb045612
  4336de:	dec    ebp
  4336df:	push   ds
  4336e0:	retf   0x66ba
  4336e3:	push   ds
  4336e4:	clc    
  4336e5:	out    dx,al
  4336e6:	pop    edx
  4336e7:	push   0x64c5d58c
  4336ec:	push   eax
  4336ed:	push   ebx
  4336ee:	cmp    edx,DWORD PTR [esi+0x1]
  4336f1:	inc    ecx
  4336f2:	add    BYTE PTR [eax],al
  4336f4:	pop    esp
  4336f5:	rol    DWORD PTR [ebx-0x17],1
  4336f8:	stos   DWORD PTR es:[edi],eax
  4336f9:	(bad)  
  4336fa:	mov    cs,WORD PTR [eax+0x33]
  4336fd:	xor    al,0x58
  4336ff:	pop    ds
  433700:	mov    WORD PTR [edi-0x3c],gs
  433703:	sbb    al,0x5c
  433705:	pop    ebx
  433706:	sbb    eax,0xf86386e1
  43370b:	sbb    eax,0x55e922df
  433710:	xor    cl,dl
  433712:	clc    
  433713:	push   0x70
  433715:	cmp    edx,DWORD PTR [esi-0x55]
  433718:	lods   al,BYTE PTR ds:[esi]
  433719:	into   
  43371a:	int3   
  43371b:	mov    ch,0x68
  43371d:	sti    
  43371e:	lds    ebp,FWORD PTR [ebp+0x62c5fb60]
  433724:	sub    DWORD PTR [eax-0x74],ebp
  433727:	jge    0x4336de
  433729:	ficomp DWORD PTR [ecx]
  43372b:	jb     0x4337ac
  43372d:	ss push esp
  43372f:	jb     0x4336f8
  433731:	and    cl,BYTE PTR [edi+0x62]
  433734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433735:	ss xor al,0x19
  433738:	test   al,0xb5
  43373a:	(bad)  
  43373b:	call   FWORD PTR [eax]
  43373d:	cld    
  43373e:	sti    
  43373f:	add    BYTE PTR [ecx],bl
  433741:	cld    
  433742:	hlt    
  433743:	add    DWORD PTR [esi+0x32],ecx
  433746:	add    DWORD PTR [ebp-0x7883d7b],ecx
  43374c:	adc    BYTE PTR [edi+0x36908aff],ah
  433752:	clc    
  433753:	into   
  433754:	pop    ebp
  433755:	into   
  433756:	xor    bh,bh
  433758:	add    BYTE PTR [eax],al
  43375a:	jmp    0x433729
  43375c:	jg     0x4337ac
  43375e:	and    cl,BYTE PTR [ebx+0x52]
  433761:	or     BYTE PTR ds:0xe40c270f,cl
  433767:	ds dec ebp
  433769:	or     al,0x95
  43376b:	cld    
  43376c:	or     dh,dh
  43376e:	pop    esi
  43376f:	cmp    al,0x63
  433771:	setnp  dl
  433774:	add    DWORD PTR [eax],eax
  433776:	push   cs
  433777:	dec    edi
  433778:	inc    ebp
  433779:	call   0x8c3fc2d5
  43377e:	adc    eax,0x6458a34
  433783:	dec    esp
  433784:	cmp    eax,0xecf55718
  433789:	add    DWORD PTR [ebp-0x5a9f8bc2],0x36
  433790:	xchg   BYTE PTR [ebx+0x131ce],bl
  433796:	push   ebx
  433797:	int3   
  433798:	dec    edi
  433799:	mov    edx,DWORD PTR [edx+0x46]
  43379c:	adc    al,0x8d
  43379e:	pop    edx
  43379f:	inc    esi
  4337a0:	or     BYTE PTR [ecx+0x7f285b],cl
  4337a6:	pop    ss
  4337a7:	cmc    
  4337a8:	lock test edi,edx
  4337ab:	lods   al,BYTE PTR ds:[esi]
  4337ac:	adc    al,0x8b
  4337ae:	dec    ecx
  4337af:	xor    BYTE PTR [eax],al
  4337b1:	jmp    ecx
  4337b3:	ds ret 0x3745
  4337b7:	data16 add al,0x85
  4337ba:	ja     0x4337bb
  4337bc:	enter  0x7a,0x0
  4337c0:	hlt    
  4337c1:	inc    ecx
  4337c2:	shl    bh,0xac
  4337c5:	adc    eax,DWORD PTR [edx+0x369059f7]
  4337cb:	jg     0x43379f
  4337cd:	sbb    eax,0x421773fd
  4337d2:	(bad)  
  4337d3:	jle    0x433814
  4337d5:	sub    eax,0x95ac0699
  4337da:	add    bh,bh
  4337dc:	add    edx,ebp
  4337de:	clc    
  4337df:	aaa    
  4337e0:	sub    BYTE PTR [eax-0x208e7908],dh
  4337e6:	jns    0x433839
  4337e8:	das    
  4337e9:	fidiv  DWORD PTR ds:0x581432e
  4337ef:	push   esp
  4337f0:	cmp    eax,DWORD PTR [edx-0x41]
  4337f3:	repz pusha 
  4337f5:	or     eax,0x81286aa
  4337fa:	inc    edx
  4337fb:	ret    0xe77a
  4337fe:	add    al,0x0
  433800:	aaa    
  433801:	fistp  DWORD PTR [ecx]
  433803:	int3   
  433804:	lods   al,BYTE PTR ds:[esi]
  433805:	pop    ss
  433806:	in     eax,dx
  433807:	sbb    BYTE PTR [edi],0x7a
  43380a:	xchg   edx,eax
  43380b:	ins    BYTE PTR es:[edi],dx
  43380c:	xlat   BYTE PTR ds:[ebx]
  43380d:	pop    es
  43380e:	fdivr  QWORD PTR [esi+0xa]
  433811:	or     ebp,DWORD PTR [esi]
  433813:	ds aaa 
  433815:	fist   DWORD PTR [eax+0x2e0b4f1f]
  43381b:	ds aaa 
  43381d:	mov    bl,0x49
  43381f:	getsec 
  433821:	fild   DWORD PTR [ecx+0x3b0000c3]
  433827:	pop    eax
  433828:	inc    esp
  433829:	jae    0x433853
  43382b:	push   edx
  43382c:	mov    bh,0xf
  43382e:	sbb    eax,0x22fab3dc
  433833:	xor    al,0xba
  433835:	xor    al,0x41
  433837:	xor    al,0x6b
  433839:	inc    edi
  43383a:	xor    BYTE PTR [ecx-0x63a70863],bh
  433840:	dec    eax
  433841:	or     al,0x6d
  433843:	mov    eax,0x6c1ff7a5
  433848:	out    0x97,al
  43384a:	inc    edi
  43384b:	mov    ecx,0x6502fb95
  433850:	arpl   WORD PTR [eax],si
  433852:	mov    cl,0xfb
  433854:	adc    dl,BYTE PTR [eax+0x3e]
  433857:	int3   
  433858:	pop    ss
  433859:	js     0x43384e
  43385b:	daa    
  43385c:	arpl   WORD PTR [esi-0x5d41d8],di
  433862:	mov    cl,0x32
  433864:	imul   ecx,DWORD PTR [ebx],0x1e
  433867:	inc    ecx
  433868:	repz js 0x4338d9
  43386b:	xor    bl,ch
  43386d:	cmp    al,0x61
  43386f:	cmp    BYTE PTR [edx+0x7338630c],dh
  433875:	mov    edx,0xfc30bf2c
  43387a:	stc    
  43387b:	cli    
  43387c:	sbb    edi,eax
  43387e:	sub    cl,bl
  433880:	sub    eax,0xba71b1f8
  433885:	jg     0x4338ff
  433887:	cmp    al,0x73
  433889:	xor    eax,DWORD PTR [eax]
  43388b:	add    al,dl
  43388d:	jle    0x43383f
  43388f:	or     ecx,ebp
  433891:	mov    gs,WORD PTR [eax-0x1e3432f5]
  433897:	mov    dh,0x2c
  433899:	cmp    ebx,DWORD PTR [esi-0x4d]
  43389c:	mov    ebp,0x37f8fcb
  4338a1:	cmp    al,0x39
  4338a3:	mov    bl,0xb1
  4338a5:	call   DWORD PTR [edx+0x77cb9ea7]
  4338ab:	sbb    eax,0x7601cb56
  4338b0:	cmp    al,0xce
  4338b2:	push   ds
  4338b3:	fld    DWORD PTR [esi-0x6999fef5]
  4338b9:	and    ecx,DWORD PTR [edi]
  4338bb:	test   eax,0x91ecf34
  4338c0:	or     eax,DWORD PTR gs:[ecx]
  4338c3:	bound  edi,QWORD PTR [eax+eiz*2]
  4338c6:	mov    WORD PTR [ebp-0x46],ss
  4338c9:	fild   QWORD PTR [ecx]
  4338cb:	jmp    0xa02:0x49a43434
  4338d2:	add    DWORD PTR [eax+0x4e],esp
  4338d5:	out    dx,eax
  4338d6:	mov    edx,0xebd34aa
  4338db:	inc    ecx
  4338dc:	jmp    0xbae7:0x1e600109
  4338e3:	stos   BYTE PTR es:[edi],al
  4338e4:	xor    al,0xbd
  4338e6:	sbb    DWORD PTR cs:[edx+0xa],esi
  4338ea:	add    DWORD PTR [eax-0x12],esi
  4338ed:	(bad)  
  4338ee:	mov    edx,0x340000aa
  4338f3:	push   esi
  4338f4:	test   esp,edx
  4338f6:	cmp    al,0x8c
  4338f8:	inc    esp
  4338f9:	jmp    0xcd49f7d4
  4338fe:	imul   ecx,DWORD PTR [edx],0x1
  433901:	dec    edi
  433902:	outs   dx,DWORD PTR ds:[esi]
  433903:	sub    cl,cl
  433905:	nop
  433906:	icebp  
  433907:	retf   0x755e
  43390a:	aaa    
  43390b:	lock mov edx,0x8556332a
  433911:	or     al,0x7b
  433913:	mov    WORD PTR [ecx+ebp*8-0x6a],es
  433917:	mov    esi,0xa736526
  43391c:	add    DWORD PTR [ebp+0x3d],edi
  43391f:	xor    cl,dh
  433921:	push   eax
  433922:	jns    0x4338ee
  433924:	mov    esp,DWORD PTR [ebx+esi*1]
  433927:	stos   DWORD PTR es:[edi],eax
  433928:	fld    QWORD PTR [eax]
  43392a:	div    ecx
  43392c:	clc    
  43392d:	mov    dl,BYTE PTR [ebx+0x34]
  433930:	cwde   
  433931:	call   0x8d3c2b7d
  433936:	push   ebx
  433937:	enter  0xf497,0xd7
  43393b:	icebp  
  43393c:	clc    
  43393d:	mov    dl,BYTE PTR [ebx]
  43393f:	pop    ss
  433940:	cld    
  433941:	dec    DWORD PTR [ecx]
  433943:	jbe    0x433942
  433945:	das    
  433946:	(bad)  
  433947:	icebp  
  433948:	clc    
  433949:	add    BYTE PTR [esi+0x2f],cl
  43394c:	add    DWORD PTR [ecx+0x377806],esp
  433952:	mov    ebp,0x43b022
  433957:	add    BYTE PTR [esi+0x75],bl
  43395a:	std    
  43395b:	(bad)  
  43395d:	icebp  
  43395e:	clc    
  43395f:	or     BYTE PTR [edx+0x36],dl
  433962:	rol    edi,0x23
  433965:	sub    dh,BYTE PTR [eax+0x1311e43]
  43396b:	add    BYTE PTR [esi],cl
  43396d:	push   ecx
  43396e:	clc    
  43396f:	scas   eax,DWORD PTR es:[edi]
  433970:	int    0x35
  433972:	mov    al,BYTE PTR [ebp-0x4ceda]
  433978:	jg     0x433943
  43397a:	test   al,0x43
  43397c:	push   cs
  43397d:	dec    edi
  43397e:	jge    0x43395c
  433980:	fidivr DWORD PTR [ebx]
  433982:	sti    
  433983:	push   0xffffffde
  433985:	cmp    al,0xd
  433987:	loopne 0x433978
  433989:	cmc    
  43398a:	clc    
  43398b:	addr16 mov al,bl
  43398e:	cmp    BYTE PTR [eax],al
  433990:	cdq    
  433991:	ftst   
  433993:	adc    DWORD PTR [esi],ebx
  433995:	xor    BYTE PTR [ecx+0x9],ch
  433998:	shl    BYTE PTR ds:0x2dc3ffc1,cl
  43399e:	adc    DWORD PTR [eax-0x32],eax
  4339a1:	test   ebx,edi
  4339a3:	adc    eax,0x3ff49b37
  4339a8:	aaa    
  4339a9:	xchg   esp,eax
  4339aa:	ds retf 
  4339ac:	jae    0x433a2d
  4339ae:	cmp    ebx,ecx
  4339b0:	imul   edx,DWORD PTR [edi+0x2983cb39],0x76
  4339b7:	inc    ebx
  4339b8:	push   ebx
  4339b9:	fcomip st,st(5)
  4339bb:	mov    edi,0x230a0000
  4339c0:	jbe    0x433a0d
  4339c2:	push   ebx
  4339c3:	retf   
  4339c4:	jne    0x433a09
  4339c6:	sbb    ecx,edi
  4339c8:	int    0xcd
  4339ca:	pusha  
  4339cb:	ins    BYTE PTR es:[edi],dx
  4339cc:	jbe    0x4339a5
  4339ce:	lods   al,BYTE PTR ds:[esi]
  4339cf:	xchg   edi,eax
  4339d0:	fadd   DWORD PTR [edi]
  4339d2:	pusha  
  4339d3:	or     al,0x76
  4339d5:	out    dx,eax
  4339d6:	mov    esp,0x1363121e
  4339db:	jmp    0x433a52
  4339dd:	(bad)  
  4339de:	lods   al,BYTE PTR ds:[esi]
  4339df:	sbb    DWORD PTR [edx],edx
  4339e1:	arpl   WORD PTR [ebx],dx
  4339e3:	retf   
  4339e4:	std    
  4339e5:	rcr    BYTE PTR [edx+ebx*4],1
  4339e8:	jne    0x4339b1
  4339ea:	mov    esp,0xac0fd896
  4339ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4339f0:	fmul   DWORD PTR [ebx]
  4339f2:	lods   al,BYTE PTR ds:[esi]
  4339f3:	mov    ds,eax
  4339f5:	pop    es
  4339f6:	out    0x33,al
  4339f8:	xor    al,0xd6
  4339fa:	out    0x34,al
  4339fc:	xor    al,0xd7
  4339fe:	sub    al,0x84
  433a00:	xchg   ebx,esi
  433a02:	add    dh,ch
  433a04:	jne    0x4339f5
  433a06:	call   0xbc571b81
  433a0b:	xchg   edx,eax
  433a0c:	jne    0x433a51
  433a0e:	sbb    ebp,ebx
  433a10:	adc    ecx,esp
  433a12:	xor    al,0xac
  433a14:	mov    cs,WORD PTR [ecx]
  433a16:	or     al,0x27
  433a18:	loope  0x433a25
  433a1a:	inc    eax
  433a1b:	ror    DWORD PTR [esi+0x2633fc0a],cl
  433a21:	loopne 0x433a23
  433a23:	add    BYTE PTR [eax],dh
  433a25:	inc    edx
  433a26:	icebp  
  433a27:	mov    ecx,0xf3c67059
  433a2c:	inc    ecx
  433a2d:	pusha  
  433a2e:	mov    esi,0xd3ed51ef
  433a33:	mov    edi,0xafe33c54
  433a38:	push   esp
  433a39:	cmp    BYTE PTR [edi+0x2d],dh
  433a3c:	test   ebx,ebp
  433a3e:	imul   ebp,DWORD PTR ds:0x7c34bd80,0x69
  433a45:	mov    esp,0xbc787c41
  433a4a:	sub    BYTE PTR [ecx+0x11ea23aa],ch
  433a50:	div    DWORD PTR [edi]
  433a52:	stos   BYTE PTR es:[edi],al
  433a53:	(bad)  
  433a54:	ss mov ch,0xc1
  433a57:	sti    
  433a58:	push   eax
  433a59:	inc    esp
  433a5a:	push   es
  433a5b:	or     edi,edi
  433a5d:	das    
  433a5e:	mov    dl,0xfc
  433a60:	mov    ecx,0x3c057222
  433a65:	xor    ah,bh
  433a67:	push   ecx
  433a68:	lock fcmovnu st,st(6)
  433a6b:	clc    
  433a6c:	out    dx,al
  433a6d:	hlt    
  433a6e:	mov    ecx,0xef9018b3
  433a73:	add    esi,DWORD PTR [edi]
  433a75:	ins    DWORD PTR es:[edi],dx
  433a76:	mov    eax,ds:0x75c80884
  433a7b:	add    al,0x3e
  433a7d:	sub    ecx,DWORD PTR cs:[eax]
  433a80:	ss repz jae 0x433a8b
  433a84:	arpl   WORD PTR [ebx+0xaec6],di
  433a8a:	mov    ecx,0xb1f3c3c4
  433a8f:	jns    0x433a8b
  433a91:	jns    0x433b0e
  433a93:	cmp    al,0xbf
  433a95:	mov    ecx,0x76ddc2c
  433a9a:	int    0xc7
  433a9c:	add    DWORD PTR [edx-0xf],ebp
  433a9f:	retf   0xe76d
  433aa2:	mov    ch,0x48
  433aa4:	add    eax,0x57d2b1e9
  433aa9:	cmp    al,0xf4
  433aab:	lods   eax,DWORD PTR ds:[esi]
  433aac:	clc    
  433aad:	cmp    al,0x2c
  433aaf:	fucomi st,st(7)
  433ab1:	es lahf 
  433ab3:	pop    es
  433ab4:	push   esp
  433ab5:	pop    ds
  433ab6:	sbb    al,0xd7
  433ab8:	mov    WORD PTR [eax-0x97be959],fs
  433abe:	mov    edi,es
  433ac0:	ins    DWORD PTR es:[edi],dx
  433ac1:	mov    esp,0xe8096ffd
  433ac6:	jp     0x433a96
  433ac8:	and    eax,0x46cb3473
  433acd:	loope  0x433abc
  433acf:	stc    
  433ad0:	jmp    0xf90d74a1
  433ad5:	stos   BYTE PTR es:[edi],al
  433ad6:	mov    ch,0xd
  433ad8:	clc    
  433ad9:	mov    ah,0x60
  433adb:	retf   0xe50e
  433ade:	pop    edx
  433adf:	pop    es
  433ae0:	add    DWORD PTR [edx+0x73],ebp
  433ae3:	adc    DWORD PTR [esi-0xa],ebp
  433ae6:	mov    ebp,0x4cdeb1f9
  433aeb:	data16 clc 
  433aed:	push   ss
  433aee:	add    BYTE PTR [eax],al
  433af0:	xor    BYTE PTR [esi+0x76],al
  433af3:	loope  0x433b29
  433af5:	dec    ebx
  433af6:	int    0xa7
  433af8:	int    0x67
  433afa:	les    esi,FWORD PTR [edx+0x38]
  433afd:	pusha  
  433afe:	mov    WORD PTR ds:0x4829dab4,es
  433b04:	cmp    eax,DWORD PTR [esp+eax*2-0x75101a17]
  433b0b:	and    al,0x3f
  433b0d:	scas   al,BYTE PTR es:[edi]
  433b0e:	ds loope 0x433b7c
  433b11:	jo     0x433aec
  433b13:	sbb    bh,BYTE PTR [ebx+0x7]
  433b16:	push   eax
  433b17:	add    BYTE PTR [ebp-0x44],ah
  433b1a:	or     al,0x84
  433b1c:	sbb    ebx,esp
  433b1e:	je     0x433b24
  433b20:	pop    ebp
  433b21:	lods   al,BYTE PTR ds:[esi]
  433b22:	adc    al,0x20
  433b24:	mov    bl,dh
  433b26:	sbb    al,0x80
  433b28:	mov    bl,dh
  433b2a:	fsub   QWORD PTR ds:0x25ec74a
  433b30:	fdiv   st,st(3)
  433b32:	aad    0x23
  433b34:	xchg   si,ax
  433b36:	ret    0x8b44
  433b39:	push   cs
  433b3a:	sub    ch,BYTE PTR [edx-0x7c]
  433b3d:	dec    ebx
  433b3e:	inc    esp
  433b3f:	add    eax,0x75fb82a3
  433b44:	sub    ax,0x500d
  433b48:	js     0x433b3c
  433b4a:	clc    
  433b4b:	mov    WORD PTR [ebx+0x52c4770e],ds
  433b51:	dec    ebx
  433b52:	push   0xd4000001
  433b57:	retf   0x8438
  433b5a:	daa    
  433b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433b5c:	stc    
  433b5d:	mov    ah,BYTE PTR [ebx-0x2939e02a]
  433b63:	jle    0x433b62
  433b65:	fistp  DWORD PTR [eax]
  433b67:	xchg   ebp,edi
  433b69:	fmul   QWORD PTR [esi+0x49]
  433b6c:	cmp    eax,0x3b5a310
  433b71:	call   FWORD PTR [eax-0x39]
  433b74:	clc    
  433b75:	push   eax
  433b76:	fisttp WORD PTR [edx+0x45]
  433b79:	fcom   DWORD PTR [ebx+0x30]
  433b7c:	xchg   BYTE PTR [ebp+0x32],cl
  433b7f:	sbb    al,0x1c
  433b81:	and    al,0xaf
  433b83:	adc    DWORD PTR [ebx-0x1],0x40127deb
  433b8a:	push   cs
  433b8b:	mov    ch,0xc4
  433b8d:	adc    al,0x5e
  433b8f:	out    dx,al
  433b90:	clc    
  433b91:	pop    ebp
  433b92:	aaa    
  433b93:	push   0x75f784f5
  433b98:	add    DWORD PTR [edi],ebp
  433b9a:	mul    edx
  433b9c:	mul    DWORD PTR [ebp+0x29]
  433b9f:	(bad)  
  433ba0:	idiv   bh
  433ba2:	pusha  
  433ba3:	push   edx
  433ba4:	mov    al,0xfb
  433ba6:	add    al,0xa8
  433ba8:	sahf   
  433ba9:	out    0x52,eax
  433bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433bac:	(bad)  
  433bad:	stc    
  433bae:	jle    0x433b4a
  433bb0:	jp     0x433bac
  433bb2:	add    dl,BYTE PTR [edx+0x19]
  433bb5:	jle    0x433b4a
  433bb7:	out    0x63,eax
  433bb9:	inc    DWORD PTR [eax]
  433bbb:	add    al,cl
  433bbd:	sbb    bh,ch
  433bbf:	cs jp  0x433c06
  433bc2:	mov    eax,0x7a24e4fb
  433bc7:	je     0x433bf8
  433bc9:	push   ds
  433bca:	jp     0x433c48
  433bcc:	sub    ebp,DWORD PTR [edx]
  433bce:	sub    dh,BYTE PTR [esi]
  433bd0:	ins    BYTE PTR es:[edi],dx
  433bd1:	loopne 0x433bbb
  433bd3:	cmp    BYTE PTR [edx],cl
  433bd5:	retf   
  433bd6:	xchg   BYTE PTR [edx],cl
  433bd8:	sbb    al,0x6a
  433bda:	out    dx,al
  433bdb:	or     DWORD PTR [ebp-0x41fffb25],0xffffffe5
  433be2:	sbb    ebx,DWORD PTR [esi+0x3704db37]
  433be8:	inc    esp
  433be9:	jg     0x433bec
  433beb:	jg     0x433c16
  433bed:	push   cs
  433bee:	test   BYTE PTR [edi+eax*2+0x26],bh
  433bf2:	(bad)  
  433bf3:	stc    
  433bf4:	test   al,0xa5
  433bf6:	fdivp  st(2),st
  433bf8:	dec    edx
  433bf9:	out    0xe6,eax
  433bfb:	aas    
  433bfc:	aaa    
  433bfd:	mov    eax,ds:0xaa6458e6
  433c02:	mov    cl,0x4e
  433c04:	fs push edx
  433c06:	adc    al,0x88
  433c08:	das    
  433c09:	xor    ecx,DWORD PTR [edx]
  433c0b:	hlt    
  433c0c:	clc    
  433c0d:	xor    ebx,edi
  433c0f:	xor    ah,0x1f
  433c12:	jae    0x433c51
  433c14:	sar    DWORD PTR [edi+ecx*8],1
  433c17:	mov    es,WORD PTR [edi+esi*4+0x1d]
  433c1b:	adc    BYTE PTR [eax-0x3b],ch
  433c1e:	aad    0xaf
  433c20:	add    BYTE PTR [eax],al
  433c22:	es je  0x433c0f
  433c25:	enter  0x6a89,0x11
  433c29:	xchg   DWORD PTR [ebx],ebx
  433c2b:	or     DWORD PTR [ebx+0x3d0b2a8f],esi
  433c31:	hlt    
  433c32:	es aaa 
  433c34:	xchg   edi,eax
  433c35:	mov    ?,WORD PTR [eax]
  433c37:	popa   
  433c38:	aaa    
  433c39:	sbb    al,0xb2
  433c3b:	mov    DWORD PTR [edi-0x110fe6fc],0xd0382b04
  433c45:	ret    
  433c46:	mov    BYTE PTR [edx-0x3c],bl
  433c49:	stos   BYTE PTR es:[edi],al
  433c4a:	scas   eax,DWORD PTR es:[edi]
  433c4b:	cmp    esp,DWORD PTR [ebx+0x42]
  433c4e:	xchg   ecx,eax
  433c4f:	add    al,0x23
  433c51:	adc    esp,esp
  433c53:	xor    DWORD PTR [ecx-0x3],esi
  433c56:	das    
  433c57:	outs   dx,DWORD PTR ds:[esi]
  433c58:	cli    
  433c59:	xchg   BYTE PTR [eax+0x9],al
  433c5c:	push   ebx
  433c5d:	(bad)
  433c61:	repz (bad) 
  433c63:	ss aaa 
  433c65:	mov    ?,WORD PTR [eax]
  433c67:	popa   
  433c68:	xchg   edi,eax
  433c69:	sbb    esp,edx
  433c6b:	(bad)  
  433c6c:	daa    
  433c6d:	add    al,0xb9
  433c6f:	out    dx,eax
  433c70:	out    dx,al
  433c71:	add    al,0x4b
  433c73:	xor    al,dh
  433c75:	ret    
  433c76:	sub    BYTE PTR [esi-0x34],cl
  433c79:	sbb    BYTE PTR [ebp+0x2e8f12ff],dh
  433c7f:	fs ins DWORD PTR es:[edi],dx
  433c81:	mov    esi,0x1b8f6504
  433c86:	add    BYTE PTR [eax],al
  433c88:	dec    eax
  433c89:	rol    BYTE PTR [ecx],0xf6
  433c8c:	xor    al,0x42
  433c8e:	mov    ebp,0x8c83e7dd
  433c93:	xor    al,0x37
  433c95:	pop    esi
  433c96:	push   edi
  433c97:	sbb    al,BYTE PTR [esi]
  433c99:	push   0xffffffe9
  433c9b:	push   ebp
  433c9c:	fidivr WORD PTR [ebp-0x460f5f08]
  433ca2:	clc    
  433ca3:	sbb    al,0xc0
  433ca5:	rol    BYTE PTR [edx-0x73da433],1
  433cab:	jmp    0x2af4714b
  433cb0:	xor    edx,DWORD PTR [ecx]
  433cb2:	mov    esi,0x8cbffe70
  433cb7:	and    al,0x3b
  433cb9:	jno    0x433c47
  433cbb:	xor    al,0x47
  433cbd:	data16 xor al,0x97
  433cc0:	cld    
  433cc1:	mov    eax,0xb7c3d976
  433cc6:	lods   eax,DWORD PTR ds:[esi]
  433cc7:	jl     0x433cfd
  433cc9:	mov    esi,0xbf97348a
  433cce:	clc    
  433ccf:	outs   dx,BYTE PTR ds:[esi]
  433cd0:	stos   BYTE PTR es:[edi],al
  433cd1:	xchg   DWORD PTR [ecx-0x7541cb9c],edi
  433cd7:	xchg   esp,eax
  433cd8:	arpl   WORD PTR [edi-0x784da908],di
  433cde:	lds    ecx,FWORD PTR [esp+esi*1-0x42]
  433ce2:	mov    bh,BYTE PTR [ebx+eiz*2-0x41]
  433ce6:	clc    
  433ce7:	ds mov edx,0x34d187
  433ced:	add    BYTE PTR [esi+edi*4],dh
  433cf0:	mov    dh,BYTE PTR [edi+ebp*2-0x41]
  433cf4:	clc    
  433cf5:	es ret 0xb186
  433cf9:	sbb    al,0x34
  433cfb:	mov    esi,0xbef35c8a
  433d00:	clc    
  433d01:	push   cs
  433d02:	pop    eax
  433d03:	imul   BYTE PTR [esi+0x0]
  433d06:	push   DWORD PTR ds:0x76e00c0d
  433d0c:	add    DWORD PTR [esi-0x60],edx
  433d0f:	pop    esp
  433d10:	push   ebx
  433d11:	push   esi
  433d12:	push   ecx
  433d13:	cmp    BYTE PTR [ebx],dl
  433d15:	add    dh,bl
  433d17:	ss jmp 0xfb794012
  433d1d:	adc    DWORD PTR [edx-0x163789d6],0xffffffcf
  433d24:	inc    ecx
  433d25:	or     bl,dh
  433d27:	ss fiadd WORD PTR cs:[edx]
  433d2b:	jecxz  0x433dac
  433d2d:	or     edx,DWORD PTR [edi+0x7c]
  433d30:	fscale 
  433d32:	mov    DWORD PTR ds:0x33beb589,esi
  433d38:	sti    
  433d39:	jmp    DWORD PTR [edi]
  433d3b:	jl     0x433cfe
  433d3d:	std    
  433d3e:	leave  
  433d3f:	xor    eax,0x33eab589
  433d44:	sti    
  433d45:	inc    DWORD PTR [esi]
  433d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433d48:	jmp    0x99c9:0x7e3609fd
  433d4f:	mov    edx,0xa0b
  433d54:	mov    ?,WORD PTR [esi]
  433d56:	ss cmp ebx,edx
  433d59:	fdivp  st(4),st
  433d5b:	dec    DWORD PTR [ecx]
  433d5d:	mov    al,0x9c
  433d5f:	mov    al,ds:0xffb360b
  433d64:	cli    
  433d65:	int3   
  433d66:	add    BYTE PTR [eax],al
  433d68:	pop    esi
  433d69:	mov    al,0xb8
  433d6b:	sub    al,0x3e
  433d6d:	je     0x433dc8
  433d6f:	ja     0x433dca
  433d71:	and    eax,0x7c59c1bb
  433d76:	xor    DWORD PTR [eax+0x31],0x3e830176
  433d7d:	fiadd  WORD PTR es:[edx]
  433d80:	aaa    
  433d81:	faddp  st(4),st
  433d83:	test   edx,eax
  433d85:	or     eax,DWORD PTR [ecx]
  433d87:	cli    
  433d88:	adc    BYTE PTR [edi+0x93807c4],ah
  433d8e:	adc    BYTE PTR [eax],0xa7
  433d91:	loop   0x433dd7
  433d93:	add    dh,dh
  433d95:	xor    eax,DWORD PTR [eax]
  433d97:	xchg   DWORD PTR [edx-0x17060775],edi
  433d9d:	dec    esi
  433d9e:	cmc    
  433d9f:	or     BYTE PTR [eax],dh
  433da1:	dec    edi
  433da2:	imul   edi,ecx,0x167f2d8
  433da8:	ins    DWORD PTR es:[edi],dx
  433da9:	ss mov edi,0xc29b009
  433daf:	add    BYTE PTR [edi],dh
  433db1:	mov    ch,BYTE PTR [ecx]
  433db3:	cmp    DWORD PTR [ebp+0x3ddd],0x0
  433dba:	mov    ah,0x48
  433dbc:	in     eax,0xfb
  433dbe:	test   al,0xa2
  433dc0:	add    cl,BYTE PTR [eax-0x6077016]
  433dc6:	cwde   
  433dc7:	push   esp
  433dc8:	mov    al,0xb0
  433dca:	xchg   edx,eax
  433dcb:	mov    edx,0x8fc28802
  433dd0:	clc    
  433dd1:	stc    
  433dd2:	adc    BYTE PTR [eax+esi*4-0x30],0x7a
  433dd7:	push   edx
  433dd8:	add    cl,BYTE PTR [eax-0x607a456]
  433dde:	push   0x62c8b044
  433de3:	push   0x2
  433de5:	call   0x4811f4
  433dea:	inc    eax
  433deb:	mov    ecx,0x2b5f7dc4
  433df0:	jns    0x433e38
  433df2:	mov    ah,0x73
  433df4:	(bad)  
  433df5:	jae    0x433df8
  433df7:	dec    esi
  433df8:	in     eax,0x8
  433dfa:	stos   DWORD PTR es:[edi],eax
  433dfb:	xor    al,0xc5
  433dfd:	dec    ebx
  433dfe:	jg     0x433e48
  433e00:	in     eax,dx
  433e01:	test   BYTE PTR [edi],cl
  433e03:	xor    eax,0x2b3786df
  433e08:	jmp    0xefe:0xfaaf9203
  433e0f:	shl    edx,0xea
  433e12:	add    DWORD PTR [edx+ebp*8],ebp
  433e15:	add    edi,DWORD PTR [edx-0x51]
  433e18:	cli    
  433e19:	(bad)  
  433e1a:	out    dx,al
  433e1b:	shl    dh,0xea
  433e1e:	add    BYTE PTR [eax],al
  433e20:	in     eax,0x2b
  433e22:	jmp    0xdefe:0xdaaf6203
  433e29:	shr    cl,0xea
  433e2c:	fldcw  WORD PTR [ebx]
  433e2e:	jmp    0xbefe:0xbaaf4803
  433e35:	shr    BYTE PTR [edx+0x3],0x37
  433e39:	xor    al,0xc1
  433e3b:	fdivr  QWORD PTR [edi]
  433e3d:	xor    al,0xea
  433e3f:	test   BYTE PTR [ebx+eax*8+0x359d0095],bh
  433e46:	adc    eax,0x83ea342f
  433e4c:	mov    BYTE PTR ds:0x38b22cf5,cl
  433e52:	imul   ecx,eax,0x3b
  433e55:	std    
  433e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433e57:	mov    bh,BYTE PTR [edi+ebx*8-0x5592ff9b]
  433e5e:	gs iret 
  433e60:	ins    BYTE PTR es:[edi],dx
  433e61:	rcl    BYTE PTR [edi+0x10],0xac
  433e65:	and    dl,0x3
  433e68:	aaa    
  433e69:	mov    ch,0x55
  433e6b:	repz dec esp
  433e6d:	sar    BYTE PTR [edi],0x7
  433e70:	inc    esi
  433e71:	sahf   
  433e72:	es (bad) 
  433e74:	rol    BYTE PTR ds:[ecx],0x40
  433e78:	xchg   edi,eax
  433e79:	sub    eax,DWORD PTR [ecx]
  433e7b:	jmp    0x2508f243
  433e80:	aaa    
  433e81:	mov    edx,0x296c
  433e86:	xor    ch,BYTE PTR ds:0x78a920b7
  433e8c:	or     DWORD PTR [ecx],edi
  433e8e:	mov    ebp,0x3704c5b3
  433e93:	mov    edx,0x342c65ea
  433e98:	add    DWORD PTR [eax-0x3f],esp
  433e9b:	int3   
  433e9c:	imul   dh
  433e9e:	lock xlat BYTE PTR ds:[ebx]
  433ea0:	jp     0x433e93
  433ea2:	xor    al,0x34
  433ea4:	and    eax,0x621e430d
  433eaa:	xor    BYTE PTR [ecx-0x40],al
  433ead:	in     eax,0xd
  433eaf:	repnz mov al,BYTE PTR [edi+edx*8-0x4d410745]
  433eb7:	mov    bl,0xe9
  433eb9:	mov    ah,0xb8
  433ebb:	mov    ebp,0x2c0c5c08
  433ec0:	add    ecx,ebp
  433ec2:	mov    ch,0xab
  433ec4:	jmp    0xf900df65
  433ec9:	sub    al,0x2b
  433ecc:	add    ecx,ebp
  433ece:	mov    ebp,0x8884e9b3
  433ed3:	mov    ebp,0x2d2da96c
  433ed8:	mov    bh,0xa0
  433eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433edb:	js     0x433ee6
  433edd:	cdq    
  433ede:	ret    0xe9b3
  433ee1:	fs push 0x3315eabd
  433ee7:	xor    al,0x1
  433ee9:	imul   eax,DWORD PTR [eax],0x6d775a00
  433eef:	sahf   
  433ef0:	mov    ah,0xc7
  433ef2:	imul   eax,DWORD PTR [eax],0xf981018a
  433ef8:	jb     0x433f41
  433efa:	sbb    DWORD PTR [eax-0x7af5b8f9],eax
  433f00:	add    ch,BYTE PTR [ebx]
  433f02:	add    DWORD PTR [eax],eax
  433f04:	lahf   
  433f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433f06:	icebp  
  433f07:	std    
  433f08:	inc    ecx
  433f09:	mov    edi,0x330e0801
  433f0e:	loopne 0x433f1d
  433f10:	push   ss
  433f11:	xor    eax,DWORD PTR [ecx]
  433f13:	xor    ch,0x4e
  433f16:	je     0x433f28
  433f18:	int    0xb7
  433f1a:	mov    eax,?
  433f1c:	add    edi,DWORD PTR [esi+0x330e00fa]
  433f22:	add    ecx,ebp
  433f24:	(bad)  
  433f25:	xor    eax,0xa44d0001
  433f2a:	icebp  
  433f2b:	std    
  433f2c:	add    DWORD PTR [esi+0x3592e911],edi
  433f32:	add    DWORD PTR [eax],eax
  433f34:	pop    ebp
  433f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433f36:	icebp  
  433f37:	std    
  433f38:	cmp    DWORD PTR [ebp+0x35eee921],0x32140001
  433f42:	xor    eax,0x81274b36
  433f47:	jnp    0x433ed8
  433f49:	push   es
  433f4a:	je     0x433f5d
  433f4c:	dec    ebp
  433f4d:	jae    0x433fc7
  433f4f:	lea    eax,[eax]
  433f51:	add    BYTE PTR [esi-0x610004cd],ch
  433f57:	mov    dl,0x1
  433f59:	add    BYTE PTR [edi-0x71fffd0f],ah
  433f5f:	(bad)  
  433f60:	and    eax,0x6eb28975
  433f65:	add    DWORD PTR [ebp+edi*1+0x8],ecx
  433f69:	inc    ebx
  433f6a:	lea    esi,[edi+0x6837f0a4]
  433f70:	idiv   ecx
  433f72:	push   eax
  433f73:	in     eax,dx
  433f74:	idiv   ecx
  433f76:	pop    esi
  433f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433f78:	(bad)  
  433f79:	push   DWORD PTR [edi]
  433f7b:	shl    DWORD PTR [eax+0x9],0xb3
  433f7f:	lods   al,BYTE PTR ds:[esi]
  433f80:	(bad)  
  433f81:	push   DWORD PTR [edi]
  433f83:	iret   
  433f84:	or     DWORD PTR gs:[ebx+0x37ffffb3],esi
  433f8b:	fbld   TBYTE PTR [edi+0x9]
  433f8e:	mov    bl,0x3b
  433f90:	(bad)  
  433f91:	push   DWORD PTR [edi]
  433f93:	out    dx,eax
  433f94:	jns    0x433f9f
  433f96:	mov    bl,0x43
  433f98:	(bad)  
  433f99:	push   DWORD PTR [edi]
  433f9b:	jg     0x434019
  433f9d:	or     DWORD PTR [ebx+0x37ffff4b],esi
  433fa3:	(bad)  
  433fa4:	pop    esp
  433fa5:	or     DWORD PTR [ebx+0x37fffe53],esi
  433fab:	inc    esp
  433fac:	mov    al,0xc0
  433fae:	(bad)  
  433fb0:	test   BYTE PTR [ecx],0x89
  433fb3:	mov    WORD PTR [ebp-0x79],cs
  433fb6:	add    BYTE PTR [eax],al
  433fb8:	add    BYTE PTR [ebx+0x7ec0f9f8],0x10
  433fbf:	inc    esp
  433fc0:	and    DWORD PTR [ebx],ecx
  433fc2:	std    
  433fc3:	push   esi
  433fc4:	mov    edx,0xbc28798b
  433fc9:	dec    eax
  433fca:	mov    ecx,0x8b9ea0fb
  433fcf:	or     DWORD PTR [eax-0x3d060958],0x68
  433fd6:	aad    0xfb
  433fd8:	mov    BYTE PTR [esi+0x3e7d91e5],dh
  433fde:	test   BYTE PTR [esi-0x7c7af5cc],0x60
  433fe5:	push   eax
  433fe6:	idiv   cl
  433fe8:	mov    bl,0x34
  433fea:	sub    cl,BYTE PTR ds:0x3df6cbb
  433ff0:	aaa    
  433ff1:	test   eax,0xbd4cb85d
  433ff6:	inc    edi
  433ff7:	mov    dh,BYTE PTR [ebp+ecx*8-0x50c102c3]
  433ffe:	ins    DWORD PTR es:[edi],dx
  433fff:	fdivr  QWORD PTR [edi*4-0x456113d1]
  434006:	daa    
  434007:	std    
  434008:	adc    BYTE PTR ds:0x2d3703e7,ah
  43400e:	pop    eax
  43400f:	ret    
  434010:	call   0xec25:0xbe0c86bc
  434017:	add    esi,DWORD PTR [edi]
  434019:	sub    eax,0x6566
  43401e:	add    DWORD PTR [ebp+0x60ff80ea],edi
  434024:	fisttp WORD PTR [ecx+eiz*8+0x3e03ea33]
  43402b:	mov    eax,0x3437036a
  434030:	imul   ebp,ebx,0x18
  434033:	dec    eax
  434034:	cli    
  434035:	dec    ebx
  434036:	jg     0x434080
  434038:	xor    cl,BYTE PTR [edi+edi*2+0x48]
  43403c:	repnz dec ebx
  43403e:	outs   dx,DWORD PTR ds:[esi]
  43403f:	sub    eax,0x3434465d
  434044:	jmp    0x7386:0x9f13f083
  43404b:	mov    esi,0xbca0fc9f
  434050:	jmp    0x8efe:0x7faeaf03
  434057:	mov    esp,0xbe878e6b
  43405c:	jg     0x43405a
  43405e:	idiv   edx
  434060:	sub    al,0xeb
  434062:	jl     0x434020
  434064:	add    DWORD PTR [esi-0x3f],esi
  434067:	mov    al,0xed
  434069:	ins    BYTE PTR es:[edi],dx
  43406a:	imul   edi,DWORD PTR [edx-0x47a79376],0xfffffff8
  434071:	pop    esi
  434072:	pushf  
  434073:	xor    eax,DWORD PTR [ebx]
  434075:	jmp    0x7dc1f5ae
  43407a:	dec    ecx
  43407b:	mov    edx,0xb1f6f8
  434080:	add    ebp,ecx
  434082:	add    BYTE PTR [eax],al
  434084:	xor    al,0xf3
  434086:	jle    0x4340c9
  434088:	xor    DWORD PTR [esi+0x3434e7f8],edi
  43408e:	add    DWORD PTR [eax],edx
  434090:	enter  0xf8ba,0xe9
  434094:	and    edi,DWORD PTR [eax-0x41eceb0f]
  43409a:	xor    ecx,esp
  43409c:	xor    al,0x34
  43409e:	or     BYTE PTR [esp+ebx*4+0x34],ch
  4340a2:	add    ecx,ebp
  4340a4:	mov    ch,0xaf
  4340a6:	icebp  
  4340a7:	hlt    
  4340a8:	in     al,dx
  4340a9:	mov    ebp,0x3434e101
  4340ae:	jmp    0xb6d6:0x1343b70
  4340b5:	(bad)  
  4340b6:	not    dh
  4340b8:	int3   
  4340b9:	add    al,0x9
  4340bb:	jmp    0x684e87f4
  4340c0:	scas   al,BYTE PTR es:[edi]
  4340c1:	(bad)  
  4340c2:	idiv   BYTE PTR [esi-0x16f6cb44]
  4340c8:	xor    al,0xb1
  4340ca:	xchg   cl,al
  4340cc:	scas   al,BYTE PTR es:[edi]
  4340cd:	mov    ebp,0xbda26af8
  4340d2:	outs   dx,BYTE PTR ds:[esi]
  4340d3:	in     al,0xdb
  4340d5:	mov    ebp,0x390c96f8
  4340da:	shl    ch,0x85
  4340dd:	mov    bh,0xf1
  4340df:	add    BYTE PTR [ebx-0x79ef0541],bh
  4340e5:	aaa    
  4340e6:	add    DWORD PTR [ecx-0x23d50000],ecx
  4340ec:	cld    
  4340ed:	(bad)  
  4340ee:	fldcw  WORD PTR [edx+0x7ce7fc7a]
  4340f4:	(bad)  
  4340f6:	stc    
  4340f7:	mov    esi,0xbb82840a
  4340fc:	clc    
  4340fd:	jmp    DWORD PTR ds:0xaf0b74be
  434103:	and    al,0xb1
  434105:	inc    ebx
  434106:	dec    esi
  434107:	test   al,0x84
  434109:	in     al,0x6b
  43410b:	mov    edi,0xd4938bfa
  434110:	cld    
  434111:	call   FWORD PTR [ecx-0x9]
  434114:	test   al,cl
  434116:	cmp    edi,DWORD PTR [edi+0x371e01fa]
  43411c:	add    ecx,ebp
  43411e:	in     al,dx
  43411f:	mov    edx,0xc88dfff8
  434124:	pop    ecx
  434125:	setb   BYTE PTR [ebp+0x6edefff7]
  43412c:	dec    ecx
  43412d:	je     0x434196
  43412f:	or     dh,BYTE PTR [edi-0x5e9adf1]
  434135:	(bad)  
  434136:	stc    
  434137:	outs   dx,BYTE PTR ds:[esi]
  434138:	dec    ecx
  434139:	packsswb mm4,QWORD PTR [eax-0x3]
  43413d:	(bad)  
  43413e:	fidiv  WORD PTR [ecx-0x4c7efb3e]
  434144:	icebp  
  434145:	std    
  434146:	jns    0x434105
  434148:	adc    DWORD PTR [eax],ecx
  43414a:	sahf   
  43414b:	cmp    BYTE PTR ss:[ebp-0x44460000],0xfa
  434153:	inc    DWORD PTR [edx+0x0]
  434156:	or     dh,BYTE PTR [edi+0x6851bc51]
  43415c:	aaa    
  43415d:	int    0xfe
  43415f:	push   DWORD PTR [edi]
  434161:	pop    eax
  434162:	xor    esp,0x50fbb182
  434168:	stos   BYTE PTR es:[edi],al
  434169:	dec    edi
  43416a:	in     al,0xfb
  43416c:	jo     0x4341af
  43416e:	push   esp
  43416f:	call   0xfa3e8845
  434174:	mov    ah,0x8
  434176:	adc    al,0x83
  434178:	ja     0x43415a
  43417a:	sbb    eax,ecx
  43417c:	mov    edx,0x48f9f99c
  434181:	retf   
  434182:	add    al,0x0
  434184:	aaa    
  434185:	jbe    0x3a7a
  43418a:	mov    eax,DWORD PTR [ebx-0x604fed5]
  434190:	lock push eax
  434192:	in     al,0xfb
  434194:	and    BYTE PTR [ebx],dl
  434196:	std    
  434197:	push   DWORD PTR [edi]
  434199:	retf   
  43419a:	mov    DWORD PTR [ebx-0x604def5],eax
  4341a0:	mov    esi,0xfbd850
  4341a5:	xor    esp,ebp
  4341a7:	call   0x85480ce0
  4341ac:	cmp    BYTE PTR [esi-0x3d],cl
  4341af:	add    al,0xbe
  4341b1:	or     al,dl
  4341b3:	sti    
  4341b4:	add    BYTE PTR [eax],al
  4341b6:	loopne 0x43418a
  4341b8:	ss ret 0x6f63
  4341bc:	xchg   BYTE PTR [eax+0x3b],dh
  4341bf:	push   ds
  4341c0:	cli    
  4341c1:	xor    eax,0x9565fc0
  4341c6:	mov    bl,al
  4341c8:	bound  esi,QWORD PTR [edi]
  4341ca:	outs   dx,DWORD PTR ds:[esi]
  4341cb:	int    0x9
  4341cd:	jle    0x434192
  4341cf:	enter  0x4,0xa0
  4341d3:	push   eax
  4341d4:	in     eax,dx
  4341d5:	sti    
  4341d6:	mov    al,ds:0x2f049f34
  4341db:	xor    al,0xea
  4341dd:	or     dh,al
  4341df:	repz push ss
  4341e1:	sub    bl,BYTE PTR [edx-0x15]
  4341e4:	arpl   sp,dx
  4341e6:	xchg   dh,ah
  4341e8:	sub    DWORD PTR [eax+0x6a5e2968],eax
  4341ee:	xor    al,0x34
  4341f0:	jmp    0x7080:0x9cc1858c
  4341f7:	sub    DWORD PTR [esi+0x66],esp
  4341fa:	xor    al,0x34
  4341fc:	jmp    0x4ef9:0x4dd0848a
  434203:	jecxz  0x434247
  434205:	mov    ebp,DWORD PTR [esp+ebp*8-0x34c106c3]
  43420c:	push   0x5
  43420e:	aaa    
  43420f:	xor    al,0x61
  434211:	mov    bh,0xff
  434213:	mov    dh,0x27
  434215:	stc    
  434216:	mov    eax,0xf7067e
  43421b:	add    BYTE PTR [esi],bl
  43421d:	mov    ecx,0xb9126911
  434222:	jmp    0xb803:0xab8427a2
  434229:	scas   al,BYTE PTR es:[edi]
  43422a:	push   es
  43422b:	idiv   esi
  43422d:	mov    eax,0xaaf05465
  434232:	loop   0x434277
  434234:	mov    bl,0xea
  434236:	ins    DWORD PTR es:[edi],dx
  434237:	cli    
  434238:	sbb    dh,dh
  43423a:	rcl    DWORD PTR [edx+ebx*8-0x48],1
  43423e:	jmp    0xb788:0xdf43cf84
  434245:	xor    ch,dl
  434247:	add    ebp,DWORD PTR [esi]
  434249:	mov    al,0x52
  43424b:	add    esi,DWORD PTR [edi]
  43424d:	xor    al,0x6b
  43424f:	sti    
  434250:	adc    al,0x29
  434252:	add    DWORD PTR [ebp-0xb],esp
  434255:	mov    dh,0xf8
  434257:	jmp    0xf6a3fe17
  43425c:	scas   al,BYTE PTR es:[edi]
  43425d:	xor    eax,0x368f9ef7
  434262:	stc    
  434263:	add    BYTE PTR [edi],al
  434265:	or     DWORD PTR [ecx+edx*4+0x447d2b0e],eax
  43426c:	jp     0x434228
  43426e:	clc    
  43426f:	push   0x6c
  434271:	dec    edx
  434272:	or     BYTE PTR [ebp+edx*1-0x49],ch
  434276:	clc    
  434277:	jmp    0x6534f6e2
  43427c:	pop    edi
  43427d:	mov    edx,0x2681
  434282:	rcl    ebx,1
  434284:	not    BYTE PTR [esi+0x4f]
  434287:	sub    eax,DWORD PTR [ecx]
  434289:	jmp    0x685982c2
  43428e:	mov    cl,0xc3
  434290:	idiv   BYTE PTR [esi]
  434292:	das    
  434293:	xor    eax,0xd134e903
  434298:	adc    ch,BYTE PTR [edx-0x47]
  43429b:	(bad)  
  43429c:	mul    BYTE PTR [esi]
  43429e:	pop    ds
  43429f:	jne    0x434261
  4342a1:	fs adc al,0xbc
  4342a4:	clc    
  4342a5:	push   ss
  4342a6:	cmp    dh,BYTE PTR [ecx+eax*1]
  4342a9:	jmp    0x534f661
  4342ae:	(bad)  
  4342af:	mov    ebp,0x34b4e9aa
  4342b4:	add    esi,esp
  4342b6:	push   0x34e9024d
  4342bb:	mov    cl,0x0
  4342bd:	jb     0x434327
  4342bf:	xor    BYTE PTR [esi+eiz*4-0x176f30bd],al
  4342c6:	xor    al,0x34
  4342c8:	outs   dx,BYTE PTR ds:[esi]
  4342c9:	clc    
  4342ca:	mov    ah,0xbf
  4342cc:	pusha  
  4342cd:	add    bl,bh
  4342cf:	push   esi
  4342d0:	ret    0x8685
  4342d3:	mov    ebp,0x339ffffa
  4342d8:	add    DWORD PTR [eax],eax
  4342da:	jne    0x434337
  4342dc:	xor    BYTE PTR [ebp-0x5423a],al
  4342e2:	xor    BYTE PTR [esi+0x857f],dh
  4342e8:	mov    dh,0xbd
  4342ea:	cli    
  4342eb:	jmp    ebp
  4342ed:	xchg   edx,eax
  4342ee:	add    DWORD PTR [eax],eax
  4342f0:	mov    ?,eax
  4342f2:	fwait
  4342f3:	call   0x7f3e01eb
  4342f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4342f9:	stos   BYTE PTR es:[edi],al
  4342fa:	mov    ah,0xe8
  4342fc:	sar    DWORD PTR [esi+0x5d0881fa],cl
  434302:	clc    
  434303:	call   FWORD PTR [esi+0x69]
  434306:	cli    
  434307:	adc    eax,0x412986
  43430c:	xchg   DWORD PTR [ebp-0x410c1074],ebp
  434312:	cli    
  434313:	mov    DWORD PTR [ebx+0x61fffc7c],ebx
  434319:	mov    ch,0xc1
  43431b:	je     0x43431d
  43431d:	test   al,0x84
  43431f:	in     al,0x53
  434321:	mov    edi,0x8c6b89fa
  434326:	cld    
  434327:	jmp    DWORD PTR [ecx]
  434329:	retf   
  43432a:	or     ecx,DWORD PTR [ecx-0x3376d]
  434330:	xor    ebx,ecx
  434332:	add    ecx,DWORD PTR [edx-0x3309d]
  434338:	loope  0x434302
  43433a:	test   al,dh
  43433c:	sar    DWORD PTR [ebp+0x2a7a80fa],cl
  434342:	js     0x4342d1
  434344:	call   0x44d:0x37fffabb
  43434b:	add    BYTE PTR [eax],al
  43434d:	add    BYTE PTR [edi],dh
  43434f:	push   edx
  434350:	idiv   eax
  434352:	or     BYTE PTR [eax+0x41b0f9f9],0xb1
  434359:	in     al,0xaa
  43435b:	jge    0x43434c
  43435d:	stc    
  43435e:	jmp    0xb749:0x98f9f9f4
  434365:	or     BYTE PTR [esi-0x770463b1],bh
  43436b:	popf   
  43436c:	mov    eax,DWORD PTR [ecx-0x7d]
  43436f:	push   ebx
  434370:	sbb    DWORD PTR [edx+edi*2-0x4ef61053],0xa2f9548b
  43437b:	jo     0x434376
  43437d:	stc    
  43437e:	pusha  
  43437f:	push   edi
  434380:	sbb    DWORD PTR [eax+0x52ef4d5a],0xdcb943e7
  43438a:	dec    edx
  43438b:	pop    ebp
  43438c:	out    dx,eax
  43438d:	call   0xfa32a12c
  434392:	mov    ah,0x8
  434394:	sbb    al,0x80
  434396:	jno    0x4343c0
  434398:	jb     0x4343aa
  43439a:	mov    dh,0x50
  43439c:	hlt    
  43439d:	sti    
  43439e:	and    BYTE PTR [edi],al
  4343a0:	add    al,0xff
  4343a2:	sbb    ah,cl
  4343a4:	out    dx,eax
  4343a5:	sbb    DWORD PTR [ebx],0x19
  4343a8:	out    dx,eax
  4343a9:	stc    
  4343aa:	mov    esp,0xfbd848
  4343af:	daa    
  4343b0:	mov    DWORD PTR [eax+0x0],edx
  4343b3:	add    BYTE PTR [esi],dh
  4343b5:	inc    ecx
  4343b6:	or     al,0x40
  4343b8:	mov    ebx,0xdef77104
  4343bd:	dec    ecx
  4343be:	out    dx,al
  4343bf:	stc    
  4343c0:	loopne 0x4343d0
  4343c2:	sub    eax,0xf5df34da
  4343c8:	aas    
  4343c9:	xor    al,0xea
  4343cb:	add    esi,DWORD PTR [eax-0x41086d61]
  4343d1:	mov    ch,0xc3
  4343d3:	and    BYTE PTR [edx],bh
  4343d5:	int3   
  4343d6:	cmp    eax,DWORD PTR ds:0xf5b531bb
  4343dc:	scas   al,BYTE PTR es:[edi]
  4343dd:	ins    BYTE PTR es:[edi],dx
  4343de:	and    al,BYTE PTR ds:0xf5a8f0bb
  4343e4:	sahf   
  4343e5:	mov    cl,0x92
  4343e7:	add    DWORD PTR [esi],edi
  4343e9:	scas   eax,DWORD PTR es:[edi]
  4343ea:	push   eax
  4343eb:	add    esi,DWORD PTR [edi]
  4343ed:	xor    al,0xa7
  4343ef:	jg     0x4343b0
  4343f1:	mov    bh,0x87
  4343f3:	cmc    
  4343f4:	push   esi
  4343f5:	xor    al,0xea
  4343f7:	add    esp,DWORD PTR [ebp-0x51]
  4343fa:	jp     0x4343f3
  4343fc:	outs   dx,BYTE PTR ds:[esi]
  4343fd:	mov    ch,0x6a
  4343ff:	mov    ebp,0xf565d4b4
  434404:	pop    esi
  434405:	and    al,0xea
  434407:	add    esi,DWORD PTR [edi]
  434409:	and    eax,0xb54da05e
  43440e:	dec    edi
  43440f:	mov    dh,BYTE PTR [esp+edi*2+0x303ef545]
  434416:	cdq    
  434417:	mov    ebp,0xdfb40000
  43441c:	xor    eax,0x62042ef5
  434421:	jg     0x434427
  434423:	mov    bh,0x27
  434425:	cmc    
  434426:	imul   BYTE PTR [esi-0x4af108c6]
  43442c:	in     al,dx
  43442d:	add    esi,DWORD PTR [edi]
  43442f:	xor    al,0x1
  434431:	test   ch,bh
  434433:	mov    ah,0x7
  434435:	stos   DWORD PTR es:[edi],eax
  434436:	aaa    
  434437:	and    al,0xea
  434439:	add    edi,DWORD PTR [esi]
  43443b:	scas   eax,DWORD PTR es:[edi]
  43443c:	pusha  
  43443d:	imul   dh
  43443f:	mov    ah,0x1
  434441:	push   0xffffffa2
  434443:	das    
  434444:	test   eax,0x8a2348c9
  434449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43444a:	call   0x9d223d07
  43444f:	jae    0x4344be
  434451:	out    dx,eax
  434452:	cmp    edi,DWORD PTR [ebx+0x40]
  434455:	int    0xcf
  434457:	das    
  434458:	or     BYTE PTR [esi+0x73],bh
  43445b:	mov    eax,0x8c46d29a
  434460:	inc    ecx
  434461:	bound  esp,QWORD PTR [ebx-0x48]
  434464:	ins    DWORD PTR es:[edi],dx
  434465:	jmp    0xac66:0xda03cebd
  43446c:	mov    dh,0xbd
  43446e:	cmp    DWORD PTR [edx-0x3bfe6008],0x73838ef6
  434478:	ins    DWORD PTR es:[edi],dx
  434479:	loop   0x4344aa
  43447b:	loop   0x4344f5
  43447d:	(bad)  
  43447e:	add    BYTE PTR [eax],al
  434480:	loopne 0x4344b1
  434482:	cmp    al,0xaf
  434484:	out    0x24,eax
  434486:	lock xchg ecx,eax
  434488:	mov    bh,0xe5
  43448a:	add    DWORD PTR [esi+0x6e],ebx
  43448d:	xor    al,0x86
  43448f:	pop    ecx
  434490:	inc    ecx
  434491:	mov    edx,0x3435e9f8
  434496:	add    DWORD PTR [esi-0x47],edx
  434499:	ret    
  43449a:	test   BYTE PTR [esi+0x2b],0x35
  43449e:	xchg   ecx,eax
  43449f:	jmp    0x631efdd8
  4344a4:	sbb    al,0x28
  4344a6:	add    edi,edx
  4344a8:	push   DWORD PTR [ecx]
  4344aa:	mov    dh,0x11
  4344ac:	or     DWORD PTR [esi+0x4081e9f8],ebp
  4344b2:	shr    BYTE PTR [esp+ecx*1-0x50],0xf8
  4344b7:	push   cs
  4344b8:	xor    eax,0xde000134
  4344bd:	pushf  
  4344be:	jae    0x3fec37
  4344c4:	jmp    0xcc43fe68
  4344c9:	aaa    
  4344ca:	add    DWORD PTR [ecx],edi
  4344cc:	arpl   WORD PTR [eax+0x26e9fffc],dx
  4344d2:	add    ecx,DWORD PTR [ecx-0x36fad]
  4344d8:	jmp    0xdd4f0710
  4344dd:	sub    eax,0x88132103
  4344e2:	cld    
  4344e3:	inc    DWORD PTR [eax]
  4344e5:	add    cl,ch
  4344e7:	mov    ch,0x74
  4344e9:	repz adc eax,0xd9fde9bd
  4344ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4344f0:	cli    
  4344f1:	lea    esp,[esi+0x13fffaa5]
  4344f7:	js     0x434573
  4344f9:	push   es
  4344fa:	adc    eax,0x72c2fe7f
  4344ff:	push   esp
  434500:	jle    0x434487
  434502:	mov    esi,0x7fffaa5
  434507:	or     dl,BYTE PTR [ecx+0x53]
  43450a:	inc    ecx
  43450b:	nop
  43450c:	repz hlt 
  43450e:	fldenv [esi-0x44d13e8a]
  434514:	lock cmp edi,edx
  434517:	les    esp,FWORD PTR [ebp+0x7ea6e9fd]
  43451d:	clc    
  43451e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43451f:	cmp    BYTE PTR [ebx+0x6],0x1d
  434523:	mov    ah,0xb9
  434525:	std    
  434526:	imul   esp,DWORD PTR [edi-0x6e47f177],0xa9e38dbc
  434530:	push   ds
  434531:	(bad)  
  434532:	shr    BYTE PTR [ebp+0x4837f084],1
  434538:	hlt    
  434539:	stc    
  43453a:	aaa    
  43453b:	lahf   
  43453c:	add    al,0x0
  43453e:	mov    esi,0xe8fbdd1f
  434543:	mov    cl,0x75
  434545:	mov    bl,0xdb
  434547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434548:	repz stc 
  43454a:	add    BYTE PTR [eax],al
  43454c:	arpl   WORD PTR [ecx+ecx*4+0x77a24bc0],di
  434553:	retf   0x53b7
  434556:	sub    eax,0x818a6974
  43455b:	in     al,0xba
  43455d:	xor    ebx,0xf180c285
  434563:	stc    
  434564:	test   al,0xda
  434566:	std    
  434567:	das    
  434568:	div    DWORD PTR [ebp+0x32]
  43456b:	inc    edi
  43456c:	adc    DWORD PTR [esp+esi*1+0x3d5d3974],esp
  434573:	xor    eax,0x25f94779
  434578:	mov    edx,0x78f9f1c0
  43457d:	jmp    0x43456b
  43457f:	in     eax,0x1f
  434581:	jbe    0x434575
  434583:	jae    0x4345c1
  434585:	cld    
  434586:	adc    esi,DWORD PTR [eax-0x7c8a630c]
  43458c:	push   ebx
  43458d:	pop    ds
  43458e:	repz stc 
  434590:	mov    esp,0x48fbe01f
  434595:	adc    edi,edx
  434597:	add    esi,ebp
  434599:	sbb    al,0x2c
  43459b:	add    bl,al
  43459d:	xchg   edi,eax
  43459e:	inc    esp
  43459f:	xor    eax,0x25f9f101
  4345a4:	mov    dl,0xf7
  4345a6:	lock stc 
  4345a8:	and    BYTE PTR ds:0x631ae089,dl
  4345ae:	repz jge 0x4345b1
  4345b1:	add    dl,dl
  4345b3:	xor    al,0x5a
  4345b5:	lock push cs
  4345b7:	mov    dl,0xea
  4345b9:	add    dh,BYTE PTR [edx+ebx*1-0x42c8fc17]
  4345c0:	pop    ebp
  4345c1:	repz in al,dx
  4345c3:	mov    cl,0xff
  4345c5:	call   0x3337:0x9cbc2877
  4345cc:	jmp    0xeb88:0x203b6303
  4345d3:	scas   eax,DWORD PTR es:[edi]
  4345d4:	fcomip st,st(1)
  4345d6:	sbb    al,0x9d
  4345d8:	add    bl,BYTE PTR [eax+eax*8-0x4b361edb]
  4345df:	mov    ch,al
  4345e1:	icebp  
  4345e2:	scas   al,BYTE PTR es:[edi]
  4345e3:	pop    ebp
  4345e4:	sar    ebp,cl
  4345e6:	shl    BYTE PTR [esi],1
  4345e8:	adc    esi,DWORD PTR cs:[ebp-0x49]
  4345ec:	xchg   esi,eax
  4345ed:	out    dx,eax
  4345ee:	sahf   
  4345ef:	mov    cl,0xa
  4345f1:	leave  
  4345f2:	mov    ah,0x84
  4345f4:	popf   
  4345f5:	icebp  
  4345f6:	mov    ?,WORD PTR [ebx]
  4345f8:	jmp    0x7cc0:0x6dbd3703
  4345ff:	mov    cl,0x87
  434601:	sbb    eax,0xf17d94cc
  434606:	outs   dx,BYTE PTR ds:[esi]
  434607:	pop    ebp
  434608:	push   ebp
  434609:	aam    0x5c
  43460b:	mov    cl,0x6f
  43460d:	cli    
  43460e:	mov    ah,0xa4
  434610:	gs icebp 
  434612:	dec    esi
  434613:	inc    eax
  434614:	aad    0x18
  434616:	add    BYTE PTR [eax],al
  434618:	dec    esi
  434619:	out    0x8e,eax
  43461b:	out    dx,eax
  43461c:	ds mov cl,0x5d
  43461f:	xchg   DWORD PTR [edi-0x51],ebx
  434622:	inc    edi
  434623:	icebp  
  434624:	sbb    BYTE PTR [esi],0xa
  434627:	(bad)  
  434629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43462a:	aaa    
  43462b:	icebp  
  43462c:	mov    ds:0x27e50178,al
  434631:	in     eax,0xd1
  434633:	sub    al,0x6
  434635:	stos   DWORD PTR es:[edi],eax
  434636:	mov    WORD PTR [edi+ecx*8-0x54],fs
  43463a:	clc    
  43463b:	push   ds
  43463c:	xor    BYTE PTR [ebp-0x54f9eb27],0x86
  434643:	pop    esp
  434644:	shrd   eax,edi,cl
  434647:	push   es
  434648:	or     esp,esp
  43464a:	in     eax,dx
  43464b:	(bad)  
  43464c:	out    0xa5,eax
  43464e:	jle    0x434649
  434650:	leave  
  434651:	stos   BYTE PTR es:[edi],al
  434652:	clc    
  434653:	loope  0x4346d2
  434655:	sub    BYTE PTR [edi+ebx*8],bl
  434658:	mov    cl,0xa3
  43465a:	neg    dh
  43465c:	(bad)  
  43465d:	aaa    
  43465e:	outs   dx,BYTE PTR ds:[esi]
  43465f:	sti    
  434660:	pop    edi
  434661:	jmp    FWORD PTR [edx+0x19]
  434664:	xor    BYTE PTR [ebp-0x55583b27],dh
  43466a:	jmp    0xf8ede5c0
  43466f:	push   0x70
  434671:	aas    
  434672:	test   BYTE PTR [esp+ecx*8-0x54],ch
  434676:	clc    
  434677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434678:	xor    al,0x28
  43467a:	jb     0x4346e6
  43467c:	add    BYTE PTR [eax],al
  43467e:	rcl    DWORD PTR [ebx+0x338796f6],1
  434684:	ja     0x434687
  434686:	repnz mov ah,0xe1
  434689:	test   BYTE PTR [edi-0x56],ah
  43468c:	mov    WORD PTR [eax+ebx*2],?
  43468f:	lods   al,BYTE PTR ds:[esi]
  434690:	clc    
  434691:	jbe    0x434670
  434693:	mov    ah,0xa5
  434695:	ins    BYTE PTR es:[edi],dx
  434696:	inc    edi
  434697:	stos   BYTE PTR es:[edi],al
  434698:	or     BYTE PTR [esi-0x727954c2],bl
  43469e:	push   ecx
  43469f:	stos   BYTE PTR es:[edi],al
  4346a0:	clc    
  4346a1:	mov    ecx,0xa48635da
  4346a6:	sub    BYTE PTR ds:0xd79b0086,al
  4346ac:	cld    
  4346ad:	jmp    DWORD PTR [ecx-0x3]
  4346b0:	push   eax
  4346b1:	inc    esi
  4346b2:	jbe    0x43471f
  4346b4:	hlt    
  4346b5:	jmp    DWORD PTR [ecx-0x48]
  4346b8:	mov    ebp,0x74739b10
  4346bd:	sub    BYTE PTR [edi],dl
  4346bf:	mov    bh,0x9d
  4346c1:	std    
  4346c2:	and    DWORD PTR [ebp+ebp*2-0x6219bee0],esp
  4346c9:	std    
  4346ca:	xor    DWORD PTR [esp+ecx*4-0x561e97b],esp
  4346d1:	call   DWORD PTR [ebx+0x6e]
  4346d4:	in     eax,dx
  4346d5:	call   0x3deed2
  4346da:	pop    ebp
  4346db:	in     eax,0xa5
  4346dd:	std    
  4346de:	loope  0x43467f
  4346e0:	add    DWORD PTR [ecx+0x0],ebx
  4346e3:	add    BYTE PTR [ebx-0x13],bl
  4346e6:	fisub  WORD PTR [ecx]
  4346e8:	sbb    eax,0x71fdd9b5
  4346ed:	lahf   
  4346ee:	cli    
  4346ef:	jmp    0x434687
  4346f1:	sahf   
  4346f2:	mov    ah,0xe0
  4346f4:	jecxz  0x434695
  4346f6:	cli    
  4346f7:	mov    esi,ebx
  4346f9:	fwait
  4346fa:	cld    
  4346fb:	call   ecx
  4346fd:	mov    ch,0x84
  4346ff:	fsub   DWORD PTR [ebx-0x5b170561]
  434705:	mov    ds:0xb327fffa,eax
  43470a:	mov    esp,0xfa9fb3d8
  43470f:	add    BYTE PTR [edx+0x3a],ah
  434712:	repz test esi,ebx
  434715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434716:	cli    
  434717:	call   FWORD PTR [edx+0x27]
  43471a:	pop    es
  43471b:	push   edi
  43471c:	lea    ecx,ds:0x7fdb8d21
  434722:	cld    
  434723:	push   DWORD PTR [edi]
  434725:	push   es
  434726:	aad    0xae
  434728:	and    al,0xfe
  43472a:	out    0x7d,eax
  43472c:	repz test al,0x83
  43472f:	mov    ebx,0xf9e86fe3
  434734:	aaa    
  434735:	icebp  
  434736:	adc    cl,bh
  434738:	retf   0xf220
  43473b:	stc    
  43473c:	or     BYTE PTR [esi+0x1a],dl
  43473f:	cmp    al,0x29
  434741:	fld    QWORD PTR [edi*2-0x60df72e]
  434748:	add    BYTE PTR [eax],al
  43474a:	lock pushf 
  43474c:	inc    ebp
  43474d:	test   edx,ecx
  43474f:	cld    
  434750:	icebp  
  434751:	stc    
  434752:	loopne 0x434775
  434754:	mov    dl,0xdc
  434756:	fisub  DWORD PTR [ebp+0x12c92de7]
  43475c:	add    al,0x88
  43475e:	mov    dl,0x85
  434760:	icebp  
  434761:	stc    
  434762:	rcr    BYTE PTR [eax],0xc4
  434765:	je     0x43476f
  434767:	adc    edi,DWORD PTR [edi+eiz*8-0x61878a0]
  43476e:	test   al,0x8f
  434770:	clc    
  434771:	adc    edi,esi
  434773:	pushf  
  434774:	mov    edi,0x49d4100
  434779:	add    BYTE PTR [ebp+ebx*8+0x54],al
  43477d:	push   eax
  43477e:	out    0x6c,eax
  434780:	dec    ebp
  434781:	out    0x5c,eax
  434783:	(bad)  
  434784:	out    0xf9,eax
  434786:	js     0x434737
  434788:	clc    
  434789:	adc    edi,esi
  43478b:	pushf  
  43478c:	dec    edi
  43478d:	push   ecx
  43478e:	add    BYTE PTR [esi+0x50],cl
  434791:	out    0x7a,eax
  434793:	daa    
  434794:	out    0xf9,eax
  434796:	push   ds
  434797:	jo     0x43475d
  434799:	sti    
  43479a:	push   eax
  43479b:	sbb    eax,0x33b40b70
  4347a0:	popf   
  4347a1:	ret    
  4347a2:	cmp    al,0xae
  4347a4:	push   edi
  4347a5:	push   es
  4347a6:	cs mov ecx,0xae2ef885
  4347ac:	arpl   WORD PTR [eax-0x4ff10000],cx
  4347b2:	aas    
  4347b3:	out    dx,al
  4347b4:	mov    edx,0x7d4e35ff
  4347b9:	popa   
  4347ba:	sbb    eax,0x44dc1f4a
  4347bf:	out    dx,al
  4347c0:	push   cs
  4347c1:	jl     0x4347ee
  4347c3:	xchg   ebx,eax
  4347c4:	and    DWORD PTR [ecx],edi
  4347c6:	stos   DWORD PTR es:[edi],eax
  4347c7:	add    eax,DWORD PTR [esi+0x3b]
  4347ca:	stos   DWORD PTR es:[edi],eax
  4347cb:	add    edx,DWORD PTR [esi+0x3b]
  4347ce:	stos   DWORD PTR es:[edi],eax
  4347cf:	add    esi,esp
  4347d1:	cmp    ebp,DWORD PTR [ebx-0x54c5b8fd]
  4347d7:	add    eax,DWORD PTR [edx+0x3a]
  4347da:	stos   DWORD PTR es:[edi],eax
  4347db:	add    edx,DWORD PTR [edi+0x3a]
  4347de:	stos   DWORD PTR es:[edi],eax
  4347df:	add    eax,DWORD PTR [edx+0x39]
  4347e2:	sub    eax,DWORD PTR [edx+edi*4]
  4347e5:	lods   eax,DWORD PTR ds:[esi]
  4347e6:	sub    eax,0xbeb1cb79
  4347eb:	and    al,0x6
  4347ed:	mov    ecx,0xad2a0045
  4347f2:	mov    edi,0x1d753877
  4347f7:	call   0x6df2f59a
  4347fc:	call   0x9fad:0x8eed6959
  434803:	ins    DWORD PTR es:[edi],dx
  434804:	add    eax,0x2b179754
  434809:	inc    esi
  43480a:	sub    al,BYTE PTR [esi+esi*2]
  43480d:	xor    al,0xf0
  43480f:	add    esi,DWORD PTR [edi]
  434811:	xor    al,0xbb
  434813:	ret    
  434814:	add    BYTE PTR [eax],al
  434816:	pop    es
  434817:	add    al,0x1a
  434819:	push   esp
  43481a:	pop    es
  43481b:	pushf  
  43481c:	add    DWORD PTR [ecx],ebp
  43481e:	ins    DWORD PTR es:[edi],dx
  43481f:	stos   DWORD PTR es:[edi],eax
  434820:	clc    
  434821:	push   0x7f
  434823:	dec    eax
  434824:	test   BYTE PTR [ecx],dh
  434826:	push   edx
  434827:	xchg   edi,eax
  434828:	imul   esi,DWORD PTR [eax-0x38],0xffffff97
  43482c:	push   esp
  43482d:	mov    edi,0x620d2123
  434832:	mov    al,ds:0x44bcf83c
  434837:	mov    ecx,0xb583493e
  43483c:	outs   dx,BYTE PTR ds:[esi]
  43483d:	inc    ecx
  43483e:	mov    WORD PTR [ecx],fs
  434840:	loope  0x434868
  434842:	jo     0x4347e4
  434844:	inc    ebx
  434845:	jmp    0x482c7c7e
  43484a:	jmp    FWORD PTR [edx+0x5f0362f8]
  434850:	shr    DWORD PTR [edx-0x1],0x3f
  434854:	cmp    al,0x21
  434856:	arpl   ax,di
  434858:	dec    BYTE PTR ss:[ecx+0x3d]
  43485c:	cmp    ch,BYTE PTR [eax+ebx*8-0x3b4dd9d1]
  434863:	daa    
  434864:	push   ds
  434865:	and    dl,bl
  434867:	and    DWORD PTR [edx],esp
  434869:	jno    0x43489d
  43486b:	xchg   edi,eax
  43486c:	push   ss
  43486d:	(bad)  
  43486e:	jno    0x434808
  434870:	jns    0x434858
  434872:	das    
  434873:	stc    
  434874:	loopne 0x4348e7
  434876:	xor    eax,0x6c1297
  43487b:	add    BYTE PTR [ecx-0x6c],bl
  43487e:	push   edx
  43487f:	sbb    DWORD PTR [ebx-0x51],esi
  434882:	add    ch,cl
  434884:	xor    al,0x5
  434886:	pop    edx
  434887:	push   0xffffff8c
  434889:	stos   BYTE PTR es:[edi],al
  43488a:	ins    DWORD PTR es:[edi],dx
  43488b:	in     eax,0xff
  43488d:	out    dx,al
  43488e:	in     al,dx
  43488f:	jmp    0xafe:0x2f59aa0e
  434896:	retf   0x8d00
  434899:	in     al,dx
  43489a:	(bad)
  43489d:	add    DWORD PTR [esi+0xf40e18],ebp
  4348a3:	jmp    0x4348fa
  4348a5:	add    ecx,DWORD PTR [eax-0x45]
  4348a8:	ss call 0x6d0848e4
  4348ae:	sbb    eax,0x96c970c
  4348b3:	mov    ebp,ebx
  4348b5:	xor    eax,DWORD PTR [eax+0x48032a6b]
  4348bb:	push   eax
  4348bc:	(bad)  
  4348bd:	(bad)  
  4348be:	pop    ebx
  4348bf:	pop    ecx
  4348c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4348c1:	jne    0x4348c0
  4348c3:	call   FWORD PTR [ecx-0x79]
  4348c6:	mov    dh,0xcc
  4348c8:	dec    edx
  4348c9:	jmp    0x434890
  4348cb:	int3   
  4348cc:	dec    edx
  4348cd:	jmp    0x434894
  4348cf:	int3   
  4348d0:	push   ebp
  4348d1:	cwde   
  4348d2:	push   esp
  4348d3:	mov    ebp,edx
  4348d5:	and    ecx,DWORD PTR [eax+ecx*1+0x76]
  4348d9:	push   0x4f
  4348db:	add    dh,cl
  4348dd:	adc    DWORD PTR [eax],esi
  4348df:	add    DWORD PTR [eax],eax
  4348e1:	add    BYTE PTR [edx+0x33],dl
  4348e4:	sar    BYTE PTR es:[ebx+0x1a417e74],0x33
  4348ec:	mov    eax,0x44001681
  4348f1:	add    BYTE PTR [esi-0x13cc15dc],bl
  4348f7:	fsin   
  4348f9:	add    BYTE PTR [esi+0x66396337],cl
  4348ff:	cmp    BYTE PTR [edx],cl
  434901:	xchg   esp,eax
  434902:	fsubr  QWORD PTR [ebx]
  434904:	mov    bh,0x5d
  434906:	fucomp st(4)
  434908:	(bad)
  43490b:	in     al,dx
  43490c:	(bad)
  43490f:	in     al,dx
  434910:	(bad)
  434913:	push   ss
  434914:	in     al,dx
  434915:	push   ebx
  434916:	mov    esp,0x2f437829
  43491b:	es xor eax,0xfce5343c
  434921:	mov    al,0xf6
  434923:	mov    BYTE PTR [edi+0x52],cl
  434926:	cmp    BYTE PTR [edx+0x6e],ah
  434929:	add    al,BYTE PTR [edi+ebp*2]
  43492c:	push   esp
  43492d:	mov    esi,ebx
  43492f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434930:	or     al,0x83
  434932:	sub    DWORD PTR [ebx-0x76557af9],ecx
  434938:	ja     0x434982
  43493a:	xor    esi,DWORD PTR [esi]
  43493c:	out    0x6e,al
  43493e:	cs es inc ebp
  434941:	or     BYTE PTR [esp+eax*2],dh
  434944:	sub    ch,dh
  434946:	add    BYTE PTR [eax],al
  434948:	test   DWORD PTR [edi-0x7b0882c2],edx
  43494e:	daa    
  43494f:	rol    BYTE PTR [ebp-0x6f3fcfbb],cl
  434955:	jecxz  0x43499e
  434957:	pop    ebx
  434958:	hlt    
  434959:	mov    dh,0xfc
  43495b:	addr16 das 
  43495d:	mov    eax,0xf0cf003f
  434962:	cld    
  434963:	push   DWORD PTR [edi]
  434965:	push   ds
  434966:	(bad)  
  434967:	cld    
  434968:	aaa    
  434969:	pop    ebx
  43496a:	std    
  43496b:	push   DWORD PTR [edi-0x63]
  43496e:	push   edx
  43496f:	call   0xfa2ed3ca
  434974:	push   cs
  434975:	sbb    ah,al
  434977:	je     0x4349e3
  434979:	push   ss
  43497a:	inc    ecx
  43497b:	or     BYTE PTR [ebx+ebx*8+0x54],cl
  43497f:	push   edx
  434980:	(bad)  
  434981:	or     al,0xeb
  434983:	stc    
  434984:	nop
  434985:	inc    ebx
  434986:	inc    esi
  434987:	xor    DWORD PTR [edi+0x60],0x18
  43498b:	test   edi,esi
  43498d:	xor    eax,esi
  43498f:	les    ecx,FWORD PTR [edi-0xd2c70b6]
  434995:	xchg   ebx,eax
  434996:	jmp    0x88eb3e5d
  43499b:	jmp    0xf0b2:0x2393aa5e
  4349a2:	test   DWORD PTR [esi+0x37],edi
  4349a5:	mov    edi,0x687036ea
  4349aa:	fld    QWORD PTR [ebx]
  4349ac:	add    BYTE PTR [eax],al
  4349ae:	aaa    
  4349af:	je     0x4349a0
  4349b1:	(bad)  
  4349b2:	js     0x434972
  4349b4:	sub    esi,eax
  4349b6:	mov    edx,0x74c2420f
  4349bb:	test   al,0x48
  4349bd:	jmp    0xbf0f:0xc3fbaa1e
  4349c4:	jmp    0x4b20:0x2f753703
  4349cb:	inc    edx
  4349cc:	stos   BYTE PTR es:[edi],al
  4349cd:	add    esi,ebx
  4349cf:	js     0x4349ff
  4349d1:	mov    bh,0xeb
  4349d3:	js     0x4349fb
  4349d5:	mov    bh,0x3
  4349d7:	jns    0x434a3c
  4349d9:	aas    
  4349da:	adc    edi,DWORD PTR [ebx+eiz*2]
  4349dd:	aaa    
  4349de:	sbb    eax,DWORD PTR [ebx+esi*8-0x45]
  4349e2:	mov    dl,0xf8
  4349e4:	mov    ebp,0x633b45f7
  4349e9:	aas    
  4349ea:	adc    esi,DWORD PTR [eax]
  4349ec:	out    dx,eax
  4349ed:	jecxz  0x434970
  4349ef:	inc    esp
  4349f0:	jmp    0xbacc:0x7393c654
  4349f7:	lock add eax,0xfe10a7fc
  4349fd:	cpuid  
  4349ff:	xor    DWORD PTR [ebx+0x40],0xe3af3c53
  434a06:	xchg   edx,eax
  434a07:	xchg   BYTE PTR [ecx],al
  434a09:	adc    dh,BYTE PTR [ecx+0x44]
  434a0c:	add    DWORD PTR [ecx+0x8],eax
  434a0f:	inc    ebp
  434a10:	inc    esp
  434a11:	jmp    0xab1b4a16
  434a16:	cs jmp 0x62447e50
  434a1c:	test   DWORD PTR [edi+0x11],0x114fff60
  434a23:	je     0x434a24
  434a25:	dec    edi
  434a26:	adc    edx,edx
  434a28:	push   esp
  434a29:	test   DWORD PTR [esi+0x1e],0x2ab13494
  434a30:	cmp    ebx,DWORD PTR [ecx+0x3e]
  434a33:	add    dh,BYTE PTR gs:[ebp+0x51]
  434a37:	jo     0x4349c9
  434a39:	pushf  
  434a3a:	clc    
  434a3b:	fcomp  QWORD PTR [edi+ebp*4]
  434a3e:	ds dec ebp
  434a40:	div    ah
  434a42:	hlt    
  434a43:	inc    edi
  434a44:	push   cs
  434a45:	stos   DWORD PTR es:[edi],eax
  434a46:	clc    
  434a47:	jo     0x434a99
  434a49:	lods   al,BYTE PTR ds:[esi]
  434a4a:	xchg   BYTE PTR [esp+eax*1+0x34e9a410],ch
  434a51:	xor    al,0x1
  434a53:	sub    bh,BYTE PTR [edx-0x3]
  434a56:	lock test DWORD PTR [ebp+0x3d],ebp
  434a5a:	add    ecx,ebp
  434a5c:	xor    al,0x34
  434a5e:	pop    edx
  434a5f:	scas   al,BYTE PTR es:[edi]
  434a60:	outs   dx,DWORD PTR ds:[esi]
  434a61:	push   cs
  434a62:	pop    esp
  434a63:	jb     0x434a5d
  434a65:	or     al,0x52
  434a67:	sub    dl,BYTE PTR [edx-0x55]
  434a6a:	dec    esi
  434a6b:	(bad)  
  434a6c:	out    dx,eax
  434a6d:	stos   BYTE PTR es:[edi],al
  434a6e:	outs   dx,BYTE PTR ds:[esi]
  434a6f:	aad    0xcf
  434a71:	and    al,0x11
  434a73:	out    0x49,al
  434a75:	cmp    al,bh
  434a77:	push   esp
  434a78:	add    BYTE PTR [eax],al
  434a7a:	mov    bl,0x10
  434a7c:	mov    eax,ds:0x6933f2d4
  434a81:	jmp    0x44b16a
  434a86:	xchg   BYTE PTR [edi-0x14],cl
  434a89:	call   ecx
  434a8b:	scas   eax,DWORD PTR es:[edi]
  434a8c:	mov    ebp,0x7e6f2318
  434a91:	jmp    FWORD PTR [ebx]
  434a93:	daa    
  434a94:	in     eax,0x51
  434a96:	cmp    BYTE PTR [edi],ah
  434a98:	je     0x434aa6
  434a9a:	sub    BYTE PTR [ebx-0xb979bec],bl
  434aa0:	add    BYTE PTR [ecx+0x467dac1b],cl
  434aa6:	(bad)  
  434aa7:	std    
  434aa8:	test   al,0x82
  434aaa:	dec    ebx
  434aab:	cmp    al,0xfa
  434aad:	adc    eax,0x414252
  434ab2:	cdq    
  434ab3:	xor    al,0x0
  434ab5:	add    BYTE PTR [esi+0x34],cl
  434ab8:	jbe    0x434b08
  434aba:	and    dl,BYTE PTR [esi+esi*2-0x38]
  434abe:	or     DWORD PTR [edx+0x340e0141],0xadda40a9
  434ac8:	stc    
  434ac9:	adc    eax,0x414622
  434ace:	pop    ecx
  434acf:	xor    edx,DWORD PTR [edi]
  434ad1:	add    BYTE PTR [esi],cl
  434ad3:	xor    al,0xde
  434ad5:	loop   0x434a94
  434ad7:	pusha  
  434ad8:	into   
  434ad9:	test   al,0xdf
  434adb:	pop    ss
  434adc:	pop    es
  434add:	mov    DWORD PTR [eax],eax
  434adf:	add    BYTE PTR [eax-0x35ef5f59],ah
  434ae5:	adc    eax,0xb0e64e7e
  434aea:	loope  0x434aea
  434aec:	inc    edi
  434aed:	lods   eax,DWORD PTR ds:[esi]
  434aee:	jg     0x434b36
  434af0:	shr    BYTE PTR [eax],cl
  434af2:	inc    ebx
  434af3:	or     al,0x4d
  434af5:	xchg   ebx,eax
  434af6:	jmp    0xa246:0x80328683
  434afd:	sub    BYTE PTR [ebx+0x4],bl
  434b00:	aaa    
  434b01:	adc    al,0x4a
  434b03:	cld    
  434b04:	into   
  434b05:	mov    ebp,edi
  434b07:	push   DWORD PTR [edi]
  434b09:	push   0x7eff9f3b
  434b0e:	inc    esp
  434b0f:	add    BYTE PTR [edx-0x79cae2ab],bh
  434b15:	popa   
  434b16:	clc    
  434b17:	jl     0x434b90
  434b19:	pop    ebp
  434b1a:	sub    al,0xf0
  434b1c:	jmp    0x12be:0x3b73df96
  434b23:	jo     0x434b6e
  434b25:	pop    ebp
  434b26:	std    
  434b27:	push   esi
  434b28:	mov    dl,0xdd
  434b2a:	jb     0x434b53
  434b2c:	push   eax
  434b2d:	xor    al,0x11
  434b30:	neg    DWORD PTR [ebx+edx*2+0x5449e44d]
  434b37:	shl    DWORD PTR [edi],0xa7
  434b3a:	add    al,0x0
  434b3c:	aaa    
  434b3d:	add    eax,0xfe28e134
  434b42:	add    esp,0x0
  434b45:	add    BYTE PTR [ebx+0x1a],cl
  434b48:	mov    ch,0xf9
  434b4a:	push   cs
  434b4b:	mov    ah,0xfd
  434b4d:	push   DWORD PTR [edi]
  434b4f:	sbb    dh,BYTE PTR [ebp-0xf2941e0]
  434b55:	in     al,0x7
  434b57:	pop    esi
  434b58:	aaa    
  434b59:	or     al,0x2f
  434b5b:	pushf  
  434b5c:	add    al,0x0
  434b5e:	mov    cl,al
  434b60:	test   DWORD PTR gs:[ecx-0x6b],esi
  434b64:	jnp    0x434ba0
  434b66:	mov    dl,0xd4
  434b68:	std    
  434b69:	xchg   BYTE PTR [ecx],ch
  434b6b:	and    ch,BYTE PTR [edi]
  434b6d:	sbb    BYTE PTR [esi*1+0x13cc3536],bl
  434b74:	das    
  434b75:	add    al,0x41
  434b77:	mov    al,BYTE PTR [edi+0x50]
  434b7a:	mov    eax,0xaff85533
  434b7f:	inc    eax
  434b80:	inc    esi
  434b81:	push   cs
  434b82:	div    DWORD PTR [ebx]
  434b84:	imul   edi,DWORD PTR [edi-0x17e242cd],0xffffff92
  434b8b:	lock jb 0x434bce
  434b8e:	inc    ebx
  434b8f:	mov    bl,0xc2
  434b91:	out    0x3,al
  434b93:	dec    ebx
  434b94:	imul   ebp,ebx,0x7d
  434b97:	pop    ds
  434b98:	sar    BYTE PTR [edx+0x24],1
  434b9b:	adc    al,0xf8
  434b9d:	inc    ebx
  434b9e:	aaa    
  434b9f:	mov    ebx,0x465782b2
  434ba4:	add    eax,esp
  434ba6:	sbb    esi,DWORD PTR [ebp-0x6f]
  434ba9:	add    BYTE PTR [eax],al
  434bab:	add    BYTE PTR [edx+0x32],bl
  434bae:	je     0x434b8a
  434bb0:	xor    al,0xd5
  434bb2:	push   ss
  434bb3:	push   cs
  434bb4:	div    DWORD PTR [ebx]
  434bb6:	js     0x434bfb
  434bb8:	cmp    edx,DWORD PTR [esi+ebp*8+0xe]
  434bbc:	shl    DWORD PTR [ecx],1
  434bbe:	mov    ebx,0xe6202e52
  434bc3:	out    0x44,al
  434bc5:	sbb    al,0xf8
  434bc7:	inc    ebx
  434bc8:	aaa    
  434bc9:	push   ecx
  434bca:	sub    al,0x82
  434bcc:	repz inc esp
  434bce:	imul   ebp,ebx,0xe
  434bd1:	and    DWORD PTR [eax],eax
  434bd3:	jnp    0x434c4a
  434bd5:	cmp    al,0x64
  434bd7:	cmp    BYTE PTR [edi],ch
  434bd9:	mov    esp,0x6126dae2
  434bde:	pop    ds
  434bdf:	xchg   BYTE PTR ds:[edi-0x5a870463],dh
  434be6:	xchg   ebp,eax
  434be7:	neg    edi
  434be9:	aas    
  434bea:	jbe    0x434bf9
  434bec:	ja     0x434c22
  434bee:	imul   edi,DWORD PTR [edi-0x186244bd],0x0
  434bf5:	daa    
  434bf6:	add    ebp,esi
  434bf8:	push   ecx
  434bf9:	sub    eax,0x45c09f84
  434bfe:	test   BYTE PTR [ecx+0x72098f9a],dh
  434c04:	push   0x3bd61e3c
  434c09:	xor    al,0x1
  434c0b:	cs out dx,al
  434c0d:	or     edx,ecx
  434c0f:	stos   BYTE PTR es:[edi],al
  434c10:	add    BYTE PTR [eax],al
  434c12:	iret   
  434c13:	stos   DWORD PTR es:[edi],eax
  434c14:	push   ds
  434c15:	and    DWORD PTR [ecx],edi
  434c17:	hlt    
  434c18:	add    BYTE PTR [edi],bl
  434c1a:	(bad)  
  434c1b:	mov    ds:0xaf2f278c,eax
  434c20:	inc    edi
  434c21:	stc    
  434c22:	add    ebp,DWORD PTR [edi-0x62e00a87]
  434c28:	outs   dx,DWORD PTR ds:[esi]
  434c29:	jmp    0x434c0a
  434c2b:	pushf  
  434c2c:	jle    0x434bbc
  434c2e:	out    0x60,eax
  434c30:	mov    WORD PTR [ecx],gs
  434c32:	sub    ebp,DWORD PTR [edi+0x3fbed47]
  434c38:	push   edx
  434c39:	sbb    DWORD PTR [eax-0x68],0xf1be6ef8
  434c40:	adc    al,0xe8
  434c42:	call   0x76a5:0x44e10238
  434c49:	std    
  434c4a:	cmp    eax,0x5962112a
  434c4f:	dec    eax
  434c50:	sub    al,cl
  434c52:	inc    eax
  434c53:	scas   eax,DWORD PTR es:[edi]
  434c54:	outs   dx,DWORD PTR ds:[esi]
  434c55:	fnsave [edi-0x6695fa91]
  434c5b:	inc    eax
  434c5c:	add    DWORD PTR [edx+edi*8+0x6df14faf],esi
  434c63:	add    dl,BYTE PTR [ecx]
  434c65:	mov    esi,0xbcc5e772
  434c6a:	pop    edi
  434c6b:	cwde   
  434c6c:	dec    edi
  434c6d:	bound  ecx,QWORD PTR [eax+0x3c]
  434c70:	jle    0x434c72
  434c72:	rcr    BYTE PTR [edi+0xc284],1
  434c78:	fidiv  WORD PTR [eax]
  434c7a:	add    DWORD PTR [ebx-0x3f7bd370],ecx
  434c80:	fldenv [edx+esi*4]
  434c83:	add    BYTE PTR [esi+0x168b5230],bl
  434c89:	xor    al,0x76
  434c8b:	push   DWORD PTR [esp]
  434c8e:	and    eax,0x6d656983
  434c93:	daa    
  434c94:	sbb    eax,0x3c744090
  434c99:	mov    bl,0xfa
  434c9b:	pop    ebx
  434c9c:	inc    edx
  434c9d:	sub    eax,0x23f1ff76
  434ca2:	sbb    DWORD PTR [ebx+0x136d2199],eax
  434ca8:	fisttp WORD PTR [edi+0x304e028f]
  434cae:	ins    DWORD PTR es:[edi],dx
  434caf:	or     ecx,DWORD PTR [ecx]
  434cb1:	fdivr  st,st(3)
  434cb3:	(bad)  
  434cb4:	mov    ecx,0x9c5d5b8f
  434cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434cba:	clc    
  434cbb:	mov    cl,BYTE PTR [esi]
  434cbd:	test   al,0x83
  434cbf:	rol    BYTE PTR [edx-0x63],0x7d
  434cc3:	dec    esi
  434cc4:	inc    edx
  434cc5:	or     BYTE PTR [esi+0x46],bh
  434cc8:	inc    esi
  434cc9:	or     dl,bh
  434ccb:	ror    DWORD PTR [ebp-0x1f74f61d],1
  434cd1:	cmp    edi,DWORD PTR [esi+0x42]
  434cd4:	loop   0x434cf8
  434cd6:	shl    DWORD PTR [ebx+ebx*1+0x1d],0x4b
  434cdb:	and    al,0x0
  434cdd:	add    BYTE PTR [esi-0x61d7bce4],bl
  434ce3:	cwde   
  434ce4:	enter  0x2283,0x9f
  434ce8:	jge    0x434d40
  434cea:	jmp    0xc410:0x3740371c
  434cf1:	je     0x434d1d
  434cf3:	push   ss
  434cf4:	cs and al,0x67
  434cf7:	es sub BYTE PTR ss:[edi-0x5e],ah
  434cfc:	sar    BYTE PTR [ebp-0x5],cl
  434cff:	xchg   ebp,eax
  434d00:	jns    0x434d54
  434d02:	sbb    edx,DWORD PTR [esi]
  434d04:	inc    edx
  434d05:	cmp    BYTE PTR [edx-0x43f4a633],bh
  434d0b:	push   ebx
  434d0c:	sub    DWORD PTR [eax-0x54],edx
  434d0f:	push   ebx
  434d10:	and    eax,0x80dc9850
  434d15:	les    edi,FWORD PTR [edi]
  434d17:	cmp    ebx,DWORD PTR es:[esp+edi*4]
  434d1b:	pop    ebx
  434d1c:	and    eax,0x2f30f185
  434d21:	push   eax
  434d22:	js     0x434ce0
  434d24:	add    ah,0x3f
  434d27:	jle    0x434ced
  434d29:	jge    0x434d93
  434d2b:	cmp    al,0x14
  434d2d:	xchg   ebx,eax
  434d2e:	ja     0x434d9a
  434d30:	int3   
  434d31:	inc    edx
  434d32:	cmp    ecx,DWORD PTR [ebp+0x5b370004]
  434d38:	inc    ebp
  434d39:	jge    0x434d92
  434d3b:	and    BYTE PTR [edx-0x42],al
  434d3e:	cmp    ecx,DWORD PTR [ebp+0xfa9c]
  434d44:	cmp    BYTE PTR [edx],dl
  434d46:	in     al,0x5a
  434d48:	xchg   edx,eax
  434d49:	dec    edi
  434d4a:	or     DWORD PTR [eax],eax
  434d4c:	sti    
  434d4d:	push   eax
  434d4e:	ror    esp,1
  434d50:	repz fild WORD PTR [edi+0xdaacec]
  434d57:	push   ecx
  434d58:	mov    esp,0x81f717f4
  434d5d:	pop    DWORD PTR [edi+0x5a69baf7]
  434d63:	add    eax,DWORD PTR [ebp+ecx*2+0x44]
  434d67:	pop    ebx
  434d68:	hlt    
  434d69:	xor    edx,ebx
  434d6b:	retf   0xf9b0
  434d6e:	fisttp QWORD PTR [esi+0x44634075]
  434d74:	aas    
  434d75:	mov    bh,0x12
  434d77:	add    eax,0x12733344
  434d7c:	mov    dl,0x9
  434d7e:	mov    edx,0x206703a
  434d83:	aas    
  434d84:	sbb    BYTE PTR [edx+ebp*8],dh
  434d87:	out    dx,al
  434d88:	inc    ecx
  434d89:	mov    bh,0xe2
  434d8b:	add    eax,0x9734424
  434d90:	mov    edx,0x73b19f1
  434d95:	add    eax,0x34555ac2
  434d9a:	jmp    0xbbf9:0x7363f58c
  434da1:	clc    
  434da2:	loope  0x434dde
  434da4:	jmp    0xc00fac
  434da9:	add    BYTE PTR [edx-0x5e],bl
  434dac:	lahf   
  434dad:	add    al,0x2d
  434daf:	mov    bh,0x9e
  434db1:	punpcklbw mm4,DWORD PTR [eax]
  434db4:	loop   0x434d44
  434db6:	jbe    0x434dba
  434db8:	and    eax,0xae6f83c7
  434dbd:	iret   
  434dbe:	jnp    0x434e2f
  434dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434dc1:	iret   
  434dc2:	jae    0x434e33
  434dc4:	sbb    ecx,DWORD PTR [edi-0x70efb022]
  434dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434dcb:	pusha  
  434dcc:	adc    ebx,DWORD PTR [ebx-0x5d]
  434dcf:	lods   eax,DWORD PTR ds:[esi]
  434dd0:	lahf   
  434dd1:	outs   dx,DWORD PTR ds:[esi]
  434dd2:	mov    edx,0xc390fdf1
  434dd7:	sub    eax,0xa20ee154
  434ddc:	adc    edx,esp
  434dde:	inc    edx
  434ddf:	jbe    0x434d9d
  434de1:	ds mov edx,0x41f100f9
  434de7:	lods   eax,DWORD PTR ds:[esi]
  434de8:	add    eax,0xe9042bd1
  434ded:	mov    edi,0x72f89bd9
  434df2:	sbb    eax,0x70ae8bf0
  434df7:	pop    ecx
  434df8:	pop    eax
  434df9:	cdq    
  434dfa:	and    edi,ebx
  434dfc:	fs push 0xfffffff0
  434dff:	xor    BYTE PTR [edx],ch
  434e01:	sahf   
  434e02:	add    BYTE PTR [ebp-0x1cda66fb],ch
  434e08:	inc    edx
  434e09:	out    dx,eax
  434e0a:	mov    edx,0x220399
  434e0f:	add    BYTE PTR [edx+0x12],dh
  434e12:	std    
  434e13:	adc    DWORD PTR [edx-0x69],edi
  434e16:	add    ebx,DWORD PTR [edx]
  434e18:	jae    0x434e14
  434e1a:	pop    esi
  434e1b:	pusha  
  434e1c:	xor    al,0x25
  434e1e:	jmp    0xb09a:0x8bf3e672
  434e25:	xor    BYTE PTR [edx-0x1a],bl
  434e28:	lahf   
  434e29:	popa   
  434e2a:	imul   DWORD PTR [edx+0x5c]
  434e2d:	mov    ds:0x3801aa3b,al
  434e32:	sub    al,0xaa
  434e34:	push   edx
  434e35:	mov    ds:0x15e9a933,al
  434e3a:	mov    ch,al
  434e3c:	jmp    0xbabd52d9
  434e41:	xor    eax,DWORD PTR [ecx+eax*1+0x6d08342f]
  434e48:	ins    DWORD PTR es:[edi],dx
  434e49:	xor    al,0x1
  434e4b:	jmp    0xeab05113
  434e50:	outs   dx,DWORD PTR ds:[esi]
  434e51:	adc    BYTE PTR [edi+ebp*1+0x6239033a],cl
  434e58:	add    esi,edx
  434e5a:	call   0xf8de63b0
  434e5f:	add    BYTE PTR [edi],bl
  434e61:	in     al,dx
  434e62:	ins    BYTE PTR es:[edi],dx
  434e63:	mov    ebp,DWORD PTR [ecx+0xac47608]
  434e69:	mov    eax,0xa1ac03ef
  434e6e:	jge    0x434ee7
  434e70:	ret    0x7237
  434e73:	cmp    BYTE PTR [eax],al
  434e75:	add    BYTE PTR [ebp+0x3],ah
  434e78:	pop    ecx
  434e79:	vmread DWORD PTR [esi],ebp
  434e7c:	add    BYTE PTR [edi-0x6a],0xe7
  434e80:	loope  0x434e91
  434e82:	or     BYTE PTR [esi],al
  434e84:	clc    
  434e85:	xor    cl,BYTE PTR [edi]
  434e87:	push   edi
  434e88:	inc    edx
  434e89:	push   esp
  434e8a:	push   edi
  434e8b:	jmp    0x434ed5
  434e8d:	and    DWORD PTR [edx+ebp*1+0x79efff8],0xb7998b05
  434e98:	jns    0x434e9e
  434e9a:	mov    es,WORD PTR [ebx-0x7c]
  434e9d:	adc    DWORD PTR cs:[ebx+0x75198bfa],0xaf8e0013
  434ea8:	dec    edx
  434ea9:	cmp    al,0x85
  434eab:	jne    0x434f13
  434ead:	addr16 aad 0xfb
  434eb0:	fs add ecx,esp
  434eb3:	aas    
  434eb4:	ret    
  434eb5:	jae    0x434f2a
  434eb7:	dec    edi
  434eb8:	retf   
  434eb9:	mov    esp,DWORD PTR [edi+0x5f02eeb5]
  434ebf:	xor    al,0x1
  434ec1:	jbe    0x434f1e
  434ec3:	mov    edi,0x344e00f7
  434ec8:	jle    0x434f19
  434eca:	xchg   BYTE PTR [edi-0xa],ah
  434ecd:	int    0x34
  434ecf:	cmp    BYTE PTR [eax-0x18],cl
  434ed2:	adc    dl,BYTE PTR [edx+0x778dfffa]
  434ed8:	add    eax,0x37000003
  434edd:	addr16 inc edx
  434edf:	xchg   DWORD PTR [eax+0x8fffa4d],esi
  434ee5:	sar    DWORD PTR [ebp+0x38ba98b],cl
  434eeb:	add    BYTE PTR [edi],dh
  434eed:	mov    ds:0x32186dbe,al
  434ef2:	int    0x7f
  434ef4:	icebp  
  434ef5:	mov    eax,DWORD PTR [ebx]
  434ef7:	add    BYTE PTR [edi],dh
  434ef9:	or     ah,0x35
  434efc:	out    0xbf,al
  434efe:	inc    BYTE PTR [esi+eax*8+0x61385112]
  434f05:	mov    cl,ah
  434f07:	data16 aaa 
  434f09:	mov    esp,0xa6cd42ec
  434f0e:	fdivr  DWORD PTR [ebp+0x7b]
  434f11:	add    DWORD PTR [ebx],0x49f77b1
  434f17:	add    BYTE PTR [ecx],al
  434f19:	bnd ret 
  434f1b:	int3   
  434f1c:	imul   esp,DWORD PTR [eax-0x74],0xffffffec
  434f20:	jmp    0x3fbedb8a
  434f25:	and    al,BYTE PTR [eax+0xc]
  434f28:	rcr    esi,0xd8
  434f2b:	add    BYTE PTR [edi],dh
  434f2d:	or     bh,BYTE PTR [ebp+0x54d72cf5]
  434f33:	pop    es
  434f34:	mov    esp,0x1ba492bd
  434f39:	lea    eax,[eax+eax*1]
  434f3c:	aaa    
  434f3d:	adc    al,BYTE PTR [eax+0x74]
  434f40:	add    BYTE PTR [eax],al
  434f42:	mov    ah,0xc5
  434f44:	(bad)  
  434f45:	jo     0x434f6e
  434f47:	lds    eax,FWORD PTR [edx+edi*8+0x418c1e40]
  434f4e:	ret    
  434f4f:	bsr    ecx,DWORD PTR [ecx]
  434f52:	mov    ebx,0x37fffced
  434f57:	xor    al,0xe9
  434f59:	inc    esi
  434f5a:	xchg   ebx,eax
  434f5b:	stos   DWORD PTR es:[edi],eax
  434f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434f5d:	aas    
  434f5e:	mov    dl,0x6
  434f60:	mov    esi,0xea2876c6
  434f65:	add    esi,DWORD PTR [edi]
  434f67:	xor    al,0x6d
  434f69:	or     BYTE PTR [eax+0x28],dl
  434f6c:	ficomp WORD PTR [edx]
  434f6e:	out    0x21,eax
  434f70:	icebp  
  434f71:	sub    al,BYTE PTR [edi]
  434f73:	lods   eax,DWORD PTR ds:[esi]
  434f74:	(bad)  
  434f75:	push   edi
  434f76:	mov    al,0xf6
  434f78:	lea    ecx,[eax-0x7520e408]
  434f7e:	xchg   BYTE PTR [ebx+ebp*8-0x4c],bl
  434f82:	fidiv  DWORD PTR [ecx]
  434f84:	(bad)  [ecx-0x3b2ccbaf]
  434f8a:	add    cl,BYTE PTR [bx+0x1deb]
  434f8f:	pusha  
  434f90:	jmp    0xf68c:0x75f6ba03
  434f97:	push   DWORD PTR [edx+0x6]
  434f9a:	and    bh,BYTE PTR [eax-0x6]
  434f9d:	jmp    0x434f4c
  434f9f:	lahf   
  434fa0:	iret   
  434fa1:	fidivr WORD PTR [edx+0x5c6b2e]
  434fa7:	add    BYTE PTR [edi],ah
  434fa9:	xor    al,0x36
  434fab:	inc    edi
  434fac:	mov    edx,0xe68b15ee
  434fb1:	packsswb mm0,QWORD PTR [esi+0x23]
  434fb5:	dec    ebx
  434fb6:	cdq    
  434fb7:	xor    BYTE PTR ds:0x2a03ea35,dh
  434fbd:	test   BYTE PTR [edx+eax*4],bl
  434fc0:	mov    ah,0x6c
  434fc2:	adc    al,BYTE PTR [edi]
  434fc4:	mov    edx,0x8802d1f6
  434fc9:	mov    ch,ah
  434fcb:	adc    dh,BYTE PTR [edi+0x9]
  434fce:	jmp    0xed81:0x106e731
  434fd5:	addr16 add ecx,ebp
  434fd8:	mov    ebp,0x397264eb
  434fdd:	pop    ds
  434fde:	mov    ebp,0x54ebabf9
  434fe3:	inc    ecx
  434fe4:	jge    0x434f86
  434fe6:	clc    
  434fe7:	dec    esi
  434fe8:	mov    ebp,0x4c38443
  434fed:	sahf   
  434fee:	pop    es
  434fef:	imul   ebx,DWORD PTR fs:[ebx+0x4f3136f8],0xdf778fc1
  434ffa:	mov    WORD PTR [eax+esi*1+0x595efb1],ds
  435001:	mov    eax,0x75bfb548
  435006:	jns    0x434fee
  435008:	mov    ebp,0xea38f3
  43500d:	add    bl,bh
  43500f:	xchg   edi,eax
  435010:	add    edi,DWORD PTR [edx+0x6ad34ff4]
  435016:	xchg   edx,eax
  435017:	cmp    BYTE PTR [eax],cl
  435019:	push   ebp
  43501a:	jbe    0x43500a
  43501c:	mov    edi,DWORD PTR [esi]
  43501e:	daa    
  43501f:	push   edi
  435020:	sar    BYTE PTR [ebx],cl
  435022:	arpl   WORD PTR [ebx],ax
  435024:	jmp    0x1777e8e
  435029:	(bad)
  43502e:	div    DWORD PTR [esi+0x446f6a00]
  435034:	jmp    0xf8dedeee
  435039:	bound  edi,QWORD PTR [edx]
  43503b:	dec    edi
  43503c:	shl    eax,0xf5
  43503f:	inc    ebx
  435040:	outs   dx,BYTE PTR ds:[esi]
  435041:	out    dx,eax
  435042:	mov    bh,0x9a
  435044:	std    
  435045:	in     eax,0xc9
  435047:	jae    0x4350a1
  435049:	das    
  43504a:	sti    
  43504b:	push   ds
  43504c:	loope  0x43504e
  43504e:	dec    esp
  43504f:	pop    esi
  435050:	mov    dh,0x83
  435052:	mov    eax,0xde940a2b
  435057:	pop    esi
  435058:	pop    ebx
  435059:	lea    edx,[edx+0x38]
  43505c:	clc    
  43505d:	pop    esp
  43505e:	dec    ebp
  43505f:	test   ch,al
  435061:	int3   
  435062:	dec    edx
  435063:	test   ch,al
  435065:	int3   
  435066:	shr    DWORD PTR [ebx+0x67c053e5],cl
  43506c:	jle    0x4350eb
  43506e:	push   es
  43506f:	mov    esp,0xfff8
  435074:	push   cs
  435075:	xor    DWORD PTR [esi-0x1],edi
  435078:	push   ebp
  435079:	imul   DWORD PTR [ebp+edi*1-0x30]
  43507d:	xor    DWORD PTR [ecx],eax
  43507f:	add    BYTE PTR [ebp+0x3b51e952],bh
  435085:	jg     0x435081
  435087:	mov    esp,DWORD PTR [ecx-0x158a81fc]
  43508d:	cmp    eax,0x30ce0103
  435092:	data16 or BYTE PTR [ebx-0x7a],dl
  435096:	or     al,BYTE PTR [esi+edx*8+0x13000132]
  43509d:	js     0x4350a9
  43509f:	test   BYTE PTR [ecx+0x32],dl
  4350a2:	add    DWORD PTR [eax],eax
  4350a4:	or     eax,0xfa71f679
  4350a9:	stos   BYTE PTR es:[edi],al
  4350aa:	inc    edx
  4350ab:	dec    eax
  4350ac:	adc    eax,0x218b58f0
  4350b1:	and    al,0x7e
  4350b3:	ja     0x435037
  4350b5:	jecxz  0x435098
  4350b7:	mov    ebx,DWORD PTR [ecx]
  4350b9:	inc    eax
  4350ba:	or     dh,BYTE PTR [esi+0x32f6a14a]
  4350c0:	(bad)  
  4350c1:	push   ebx
  4350c2:	inc    edx
  4350c3:	push   esp
  4350c4:	in     eax,0xef
  4350c6:	cmp    al,0x23
  4350c8:	aaa    
  4350c9:	mov    ecx,0x13f75189
  4350ce:	cmp    eax,0x21d948
  4350d3:	aas    
  4350d4:	shl    DWORD PTR [ebx],1
  4350d6:	add    BYTE PTR [esi+0x0],ch
  4350d9:	add    BYTE PTR [edx+edx*2-0x1e87e28f],bh
  4350e0:	mov    DWORD PTR [ecx+0x77],edx
  4350e3:	mov    ds:0x266d048d,al
  4350e8:	inc    ebp
  4350e9:	dec    eax
  4350ea:	mov    esp,0xbc6240da
  4350ef:	sub    BYTE PTR [eax+0x62],0xae
  4350f3:	cdq    
  4350f4:	dec    edx
  4350f5:	xor    edi,0xffffffe1
  4350f8:	cmc    
  4350f9:	test   BYTE PTR [eax+0x1b518971],al
  4350ff:	lds    edi,FWORD PTR ss:[edi-0x33]
  435103:	mov    eax,DWORD PTR [ebx]
  435105:	add    BYTE PTR [edi],dh
  435107:	xchg   esi,eax
  435108:	retf   0x4271
  43510b:	(bad)  ds:0x46e0ee8
  435111:	add    BYTE PTR [ecx+ecx*2-0x528f78f4],dh
  435118:	cmp    DWORD PTR [ecx+0x17],0x527e058e
  43511f:	mov    WORD PTR [eax+eax*1],es
  435122:	sbb    DWORD PTR [esi],esp
  435124:	dec    esp
  435125:	ins    BYTE PTR es:[edi],dx
  435126:	adc    DWORD PTR [esi+0x4c],eax
  435129:	jo     0x4350e7
  43512b:	sbb    bl,BYTE PTR [ebp-0x7972c8ee]
  435131:	inc    ecx
  435132:	pop    ss
  435133:	es xchg esp,eax
  435135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435136:	and    DWORD PTR [ebp-0x2b57f6fc],ecx
  43513c:	arpl   WORD PTR [edi+0x433b0000],ax
  435142:	mov    BYTE PTR [ecx+0x3f834bf],dl
  435148:	aaa    
  435149:	scas   eax,DWORD PTR es:[edi]
  43514a:	dec    edi
  43514b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43514c:	and    eax,0x4a27ea34
  435151:	mov    bl,0xde
  435153:	adc    eax,0xf24aba40
  435158:	cmp    BYTE PTR [ebx+0x2af791e7],bl
  43515e:	cmp    BYTE PTR [edi+edx*4-0x13],dh
  435162:	sub    DWORD PTR [edx*4-0x408c81cb],eax
  435169:	das    
  43516a:	jmp    0x337c:0x77afbc03
  435171:	xor    al,0xea
  435173:	test   al,al
  435175:	call   0x4ea:0xdc37043f
  43517c:	aaa    
  43517d:	xor    al,0xc8
  43517f:	push   ds
  435180:	jmp    DWORD PTR [esi]
  435182:	(bad)  
  435183:	or     ah,BYTE PTR [esi+0x5891ef6c]
  435189:	adc    al,0x9f
  43518b:	inc    ebx
  43518c:	aaa    
  43518d:	(bad)  
  43518e:	fisttp QWORD PTR [edx]
  435190:	xchg   BYTE PTR [ecx+ebp*1+0x382b36ee],al
  435197:	xchg   BYTE PTR [edi-0x14],dl
  43519a:	test   eax,0x4e351503
  43519f:	cmp    DWORD PTR [edi+0x3ea2c],0x0
  4351a6:	mov    edx,0x98f17eb2
  4351ab:	call   0x8311:0x775acd1b
  4351b2:	xlat   BYTE PTR ds:[ebx]
  4351b3:	inc    ecx
  4351b4:	jmp    0xa30b:0x49f2ba03
  4351bb:	je     0x4351ce
  4351bd:	inc    ebx
  4351be:	jmp    0x43516e
  4351c0:	add    DWORD PTR [eax-0xd931347],edi
  4351c6:	mov    ch,0xb3
  4351c8:	add    ecx,ebp
  4351ca:	xor    al,0x25
  4351cc:	push   eax
  4351cd:	push   0x73
  4351cf:	cwde   
  4351d0:	jb     0x43520d
  4351d2:	sti    
  4351d3:	mov    dl,0x40
  4351d5:	or     DWORD PTR [edx],edi
  4351d7:	std    
  4351d8:	fs jb  0x4351e0
  4351db:	or     BYTE PTR [esi+ebx*1+0x1148af83],cl
  4351e2:	mov    eax,0xc6de38f3
  4351e7:	lock add ch,bl
  4351ea:	loope  0x435263
  4351ec:	mov    WORD PTR [esi+0xac44750],gs
  4351f2:	je     0x4351f4
  4351f4:	mov    WORD PTR [esi-0x4ebf4ed0],gs
  4351fa:	sub    eax,0x19a7fde3
  4351ff:	or     BYTE PTR [esi+ebx*4-0x1a75e98c],0x22
  435207:	sub    esi,DWORD PTR [eax+0x500000ae]
  43520d:	scas   eax,DWORD PTR es:[edi]
  43520e:	dec    eax
  43520f:	mov    cl,0xc1
  435211:	add    edi,DWORD PTR ds:0x4b30bb8f
  435217:	push   cs
  435218:	ins    DWORD PTR es:[edi],dx
  435219:	adc    al,0xbc
  43521b:	call   0x74448654
  435220:	lds    edx,FWORD PTR [ecx+0x3434e984]
  435226:	add    ah,BYTE PTR [esi+0x2150af18]
  43522c:	xor    al,BYTE PTR [ebx]
  43522e:	gs jb  0x43522f
  435231:	sti    
  435232:	mov    edi,0x134132e
  435237:	jmp    0xf27d70
  43523c:	mov    WORD PTR [esi-0x6f32b7be],gs
  435242:	or     dh,BYTE PTR [esi-0x3ed9caec]
  435248:	sub    eax,0x9894cf3
  43524d:	call   0x6308b02f
  435252:	mov    ebx,DWORD PTR gs:[ecx]
  435255:	cmp    BYTE PTR [edi+0x4],bh
  435258:	dec    esp
  435259:	test   al,0x8a
  43525b:	mov    al,ds:0x8b013558
  435260:	mov    esp,edx
  435262:	adc    eax,DWORD PTR [eax]
  435264:	push   ds
  435265:	inc    eax
  435266:	repz xchg di,ax
  435269:	inc    esp
  43526a:	aas    
  43526b:	mov    ebx,DWORD PTR [ecx+0x13d0]
  435271:	add    BYTE PTR [esi],bl
  435273:	test   al,0x8a
  435275:	cwde   
  435276:	or     BYTE PTR ds:0xa61a8801,dh
  43527c:	neg    DWORD PTR [esi-0x75a52]
  435282:	loope  0x435246
  435284:	shl    DWORD PTR [esi-0x21],0x20
  435288:	adc    BYTE PTR [esi+ecx*8+0x618b0134],0x1c
  435290:	adc    eax,DWORD PTR [eax]
  435292:	fidiv  WORD PTR [ecx+0x304a877d]
  435298:	add    DWORD PTR [eax],eax
  43529a:	fstp   st(6)
  43529c:	push   ds
  43529d:	retf   
  43529e:	imul   DWORD PTR [ebx+0x349e16a1]
  4352a4:	or     dl,BYTE PTR [esp+ebx*2+0x15744a7b]
  4352ab:	cmp    al,0x5e
  4352ae:	add    bl,BYTE PTR [ecx]
  4352b0:	bndcl  (bad),[esp+edi*8-0x1]
  4352b6:	aaa    
  4352b7:	add    BYTE PTR [ebp-0x34f01cb7],0x78
  4352be:	xor    BYTE PTR [esi],ah
  4352c0:	inc    ecx
  4352c1:	cmp    BYTE PTR [esp+ecx*8],dh
  4352c4:	in     eax,0xfe
  4352c6:	and    eax,0xd35185cb
  4352cb:	hlt    
  4352cc:	cld    
  4352cd:	and    al,0x86
  4352cf:	pop    esp
  4352d0:	sub    eax,0x1cba5f51
  4352d5:	add    BYTE PTR [eax],al
  4352d7:	add    BYTE PTR [edi],dh
  4352d9:	push   ss
  4352da:	inc    ecx
  4352db:	ins    BYTE PTR es:[edi],dx
  4352dc:	scas   al,BYTE PTR es:[edi]
  4352dd:	push   ecx
  4352de:	cmp    DWORD PTR [ebp+0x10b80e30],eax
  4352e4:	pop    ds
  4352e5:	cs fdiv st(1),st
  4352e8:	sub    BYTE PTR [ebx],dl
  4352ea:	or     DWORD PTR [ebp-0x62],edi
  4352ed:	jge    0x4352f3
  4352ef:	or     DWORD PTR [edx+0x10f9cf19],esi
  4352f5:	xlat   BYTE PTR ds:[ebx]
  4352f6:	cmp    ch,BYTE PTR ds:0xbd2fe2f7
  4352fc:	lods   al,BYTE PTR ds:[esi]
  4352fd:	mov    dh,0x30
  4352ff:	sub    esi,0x75
  435302:	add    DWORD PTR [ebp-0x4101ca88],eax
  435308:	fmul   QWORD PTR [ebx+0x3b24c00d]
  43530e:	jge    0x43530a
  435310:	xor    ebx,DWORD PTR [esi+0x2265be68]
  435316:	xor    DWORD PTR [esp+ebx*1+0x5c],ebp
  43531a:	cs push eax
  43531c:	push   0x3738a135
  435321:	lea    eax,[ebp+0x41242341]
  435327:	pop    esp
  435328:	mov    esp,0x47c47d86
  43532d:	xor    eax,0x3498f6f1
  435332:	fisttp WORD PTR [ebx+0x1daa633e]
  435338:	dec    eax
  435339:	inc    esp
  43533a:	push   ebp
  43533b:	pop    es
  43533c:	add    BYTE PTR [eax],al
  43533e:	add    dl,BYTE PTR [esi+0x74a406de]
  435344:	pop    ds
  435345:	ss or  ch,ah
  435348:	push   0xffffffe4
  43534a:	imul   edi,eax,0x305d83aa
  435350:	xlat   BYTE PTR ds:[ebx]
  435351:	outs   dx,DWORD PTR ds:[esi]
  435352:	ja     0x43534b
  435354:	aas    
  435355:	cmp    edi,DWORD PTR [eax+esi*8+0x72ec04e9]
  43535c:	xor    eax,0x3003538b
  435361:	das    
  435362:	mov    dl,0x19
  435364:	repnz call 0x96b2:0x3ea9730
  43536c:	arpl   WORD PTR [edi-0x55],ax
  43536f:	mov    ch,0x71
  435371:	(bad)  
  435372:	sbb    DWORD PTR [edi-0x73cead16],edx
  435378:	fcmovu st,st(1)
  43537a:	push   cs
  43537b:	xchg   edi,eax
  43537c:	arpl   WORD PTR [edi-0x75],ax
  43537f:	mov    ch,0x51
  435381:	(bad)  
  435382:	stc    
  435383:	xchg   esi,eax
  435384:	jmp    0x3707:0xb5b33952
  43538b:	daa    
  43538c:	data16 es loope 0x435326
  435390:	jmp    0xd1af:0x6626f080
  435397:	xchg   esi,eax
  435398:	jmp    0x5103:0x11b2f712
  43539f:	in     eax,dx
  4353a0:	bound  edi,QWORD PTR [edi]
  4353a2:	add    BYTE PTR [eax],al
  4353a4:	outs   dx,DWORD PTR ds:[esi]
  4353a5:	stos   DWORD PTR es:[edi],eax
  4353a6:	scas   eax,DWORD PTR es:[edi]
  4353a7:	cmp    edi,DWORD PTR [edx+0x268a85fe]
  4353ad:	pusha  
  4353ae:	add    DWORD PTR [edx],ebx
  4353b0:	fwait
  4353b1:	mov    al,0x48
  4353b3:	mov    cl,0x31
  4353b5:	loop   0x4353fc
  4353b7:	clc    
  4353b8:	ss dec ecx
  4353ba:	ret    0x480a
  4353bd:	add    BYTE PTR [esi+eiz*1+0x62f338f7],cl
  4353c4:	dec    ecx
  4353c5:	hlt    
  4353c6:	mov    DWORD PTR [esi],ebp
  4353c8:	add    edx,DWORD PTR [edx]
  4353ca:	mov    ebp,fs
  4353cc:	repz adc DWORD PTR [edx+0x48b106ed],ecx
  4353d3:	cmp    eax,0x722ced14
  4353d8:	and    esp,esi
  4353da:	pop    es
  4353db:	push   esi
  4353dc:	dec    eax
  4353dd:	lock mov esp,DWORD PTR [esi]
  4353e0:	repz mov al,0x50
  4353e3:	and    eax,0x1570b0d9
  4353e8:	xchg   ecx,eax
  4353e9:	lods   eax,DWORD PTR ds:[esi]
  4353ea:	sub    eax,0x60ebbc33
  4353ef:	bound  edx,QWORD PTR [ecx+0x24]
  4353f2:	mov    bh,0xeb
  4353f4:	xor    al,0x34
  4353f6:	add    DWORD PTR [eax+0x79],esi
  4353f9:	sbb    al,0x8a
  4353fb:	mov    dh,0x68
  4353fd:	lods   eax,DWORD PTR ds:[esi]
  4353fe:	jo     0x4353c9
  435400:	mov    bh,0x74
  435402:	ins    DWORD PTR es:[edi],dx
  435403:	mov    ds:0xe981ab1d,eax
  435408:	add    BYTE PTR [eax],al
  43540a:	xor    al,0x34
  43540c:	je     0x4353b9
  43540e:	mov    ebp,0x79626503
  435413:	dec    eax
  435414:	sub    al,0x19
  435416:	mov    bl,0x8d
  435418:	jmp    edi
  43541a:	xor    al,0x34
  43541c:	cmp    al,0x38
  43541e:	jns    0x435484
  435420:	push   ecx
  435421:	mov    esi,0xe9215ecc
  435426:	xor    al,0x17
  435428:	mov    ebp,0x42a8a600
  43542d:	pusha  
  43542e:	sbb    eax,0x88770479
  435433:	cmp    BYTE PTR [edx+0x1318e88],bl
  435439:	je     0x4353c8
  43543b:	mov    ah,0xf9
  43543d:	add    esp,ebx
  43543f:	mov    al,ds:0x4afa577d
  435444:	push   edx
  435445:	jo     0x435456
  435447:	jp     0x43544a
  435449:	adc    BYTE PTR [esi+0x31],bl
  43544c:	jae    0x435451
  43544e:	out    0xe6,eax
  435450:	pusha  
  435451:	mov    edx,DWORD PTR [ecx]
  435453:	clc    
  435454:	jne    0x43544e
  435456:	dec    ebp
  435457:	xor    BYTE PTR [edi+0x6f],dh
  43545a:	pop    edi
  43545b:	xor    DWORD PTR [ecx],eax
  43545d:	cmp    DWORD PTR [ecx],edx
  43545f:	adc    BYTE PTR [edx],cl
  435461:	xchg   DWORD PTR [eax],esi
  435463:	xor    DWORD PTR [ecx],eax
  435465:	add    BYTE PTR [eax],dh
  435467:	stos   DWORD PTR es:[edi],eax
  435468:	push   edx
  435469:	ins    BYTE PTR es:[edi],dx
  43546a:	inc    eax
  43546b:	dec    ebx
  43546c:	push   edx
  43546d:	add    BYTE PTR fs:[eax],al
  435470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435471:	push   edi
  435472:	mov    ebx,DWORD PTR gs:[ecx+0x4]
  435476:	arpl   WORD PTR [ebx],bp
  435478:	mov    ebp,0x10a49aaa
  43547d:	xor    DWORD PTR [ecx],eax
  43547f:	(bad)  
  435480:	loop   0x4354aa
  435482:	cld    
  435483:	mov    dl,cl
  435485:	clc    
  435486:	or     DWORD PTR [edi-0x5f6d54ac],esi
  43548c:	adc    BYTE PTR [ecx],dh
  43548e:	add    DWORD PTR [esi+0x67],esp
  435491:	sub    al,0x46
  435493:	mov    ecx,DWORD PTR [ecx-0x31ffec30]
  435499:	stos   DWORD PTR es:[edi],eax
  43549a:	xchg   edx,eax
  43549b:	cwde   
  43549c:	shl    BYTE PTR [eax],1
  43549e:	add    DWORD PTR [ebx*8+0x3719fda8],ebp
  4354a5:	mov    es,WORD PTR [esi+0x48b7cc0]
  4354ab:	add    BYTE PTR [edi],dh
  4354ad:	mov    WORD PTR [ebp-0x60],gs
  4354b0:	inc    ecx
  4354b1:	mov    eax,DWORD PTR [ecx+ecx*1]
  4354b4:	jmp    0xf78ab1b3
  4354b9:	mov    dl,BYTE PTR [esi-0x1]
  4354bc:	lods   al,BYTE PTR ds:[esi]
  4354bd:	adc    eax,0x8b37047c
  4354c2:	jg     0x435448
  4354c4:	test   al,0x22
  4354c6:	clc    
  4354c7:	(bad)  
  4354c8:	js     0x4354d5
  4354ca:	ret    
  4354cb:	stc    
  4354cc:	jo     0x435458
  4354ce:	add    al,0xb8
  4354d0:	aaa    
  4354d1:	mov    WORD PTR [eax+eax*1],es
  4354d4:	add    BYTE PTR [eax],al
  4354d6:	fldenv [ecx+0x762b6dcc]
  4354dc:	test   edi,eax
  4354de:	inc    eax
  4354df:	cmc    
  4354e0:	and    BYTE PTR [eax-0x10],0x4a
  4354e4:	std    
  4354e5:	in     al,0x32
  4354e7:	mov    es,WORD PTR [ebp-0xa4f8931]
  4354ed:	or     cl,ch
  4354ef:	pop    ds
  4354f0:	fs dec eax
  4354f2:	ja     0x435491
  4354f4:	push   esi
  4354f5:	(bad)  
  4354f6:	mov    esp,0x37078c22
  4354fb:	popf   
  4354fc:	mov    DWORD PTR [ecx+0x493b3],eax
  435502:	pop    esp
  435503:	pop    esi
  435504:	adc    edi,eax
  435506:	and    ah,BYTE PTR ds:[edx+edx*1+0x41899d37]
  43550e:	outs   dx,DWORD PTR ds:[esi]
  43550f:	mov    ch,BYTE PTR [eax-0x41]
  435512:	mov    esp,0x36d0292e
  435517:	mov    dl,0x48
  435519:	jge    0x435512
  43551b:	arpl   WORD PTR [ebx+0x71344f41],cx
  435521:	inc    esi
  435522:	aas    
  435523:	lahf   
  435524:	jmp    0x4354ac
  435526:	js     0x43555c
  435528:	jmp    0xb002a061
  43552d:	addr16 push 0x6a
  435530:	ja     0x435547
  435532:	mov    dl,0xfb
  435534:	mov    cl,0x88
  435536:	out    dx,al
  435537:	jmp    0x43559b
  435539:	xor    al,0x0
  43553b:	add    BYTE PTR [ebx+0x67],ah
  43553e:	or     cl,BYTE PTR [eax-0x6610b402]
  435544:	sti    
  435545:	and    al,0xec
  435547:	push   ss
  435548:	rcl    BYTE PTR [edi+0x27],0x38
  43554c:	mov    dl,0x3
  43554e:	push   ds
  43554f:	jge    0x435547
  435551:	sti    
  435552:	out    dx,al
  435553:	call   0xebba:0xae0af533
  43555a:	sub    DWORD PTR [edx-0x50],ebp
  43555d:	cmp    BYTE PTR [ebx+eax*1],dl
  435560:	xchg   bl,bh
  435562:	or     eax,0x72fbfe7f
  435567:	cmp    edi,ebx
  435569:	sbb    DWORD PTR [ecx+0x8],esp
  43556c:	icebp  
  43556d:	into   
  43556e:	jmp    0x7f778c76
  435573:	inc    ebx
  435574:	scas   eax,DWORD PTR es:[edi]
  435575:	or     DWORD PTR [ebx],edi
  435577:	add    eax,0x516b207e
  43557c:	das    
  43557d:	xor    al,0x63
  43557f:	dec    ebx
  435580:	mov    ds:0x375ba77b,eax
  435585:	xor    al,0xea
  435587:	add    esi,esi
  435589:	cli    
  43558a:	leave  
  43558b:	add    eax,0x2ea3437
  435590:	mov    ebx,0xeed33d98
  435595:	mov    esi,0x65b42f8f
  43559a:	add    DWORD PTR [ecx-0xeb746d3],esi
  4355a0:	add    BYTE PTR [eax],al
  4355a2:	cmp    DWORD PTR [edx-0x14],edi
  4355a5:	jmp    0x4355c8
  4355a7:	jnp    0x435614
  4355a9:	jmp    0xb89527cf
  4355ae:	std    
  4355af:	fwait
  4355b0:	sub    dl,bh
  4355b2:	xor    al,0x34
  4355b4:	mov    WORD PTR [esi+0x6a00b908],?
  4355ba:	outs   dx,DWORD PTR ds:[esi]
  4355bb:	and    ecx,DWORD PTR [edx-0x6563b75a]
  4355c1:	mul    DWORD PTR [ebp-0x74]
  4355c4:	mov    esi,?
  4355c6:	mov    cl,0x9
  4355c8:	adc    ecx,ebp
  4355ca:	xor    eax,0x65d4a6b7
  4355cf:	mov    WORD PTR [eax+0x2f],ds
  4355d2:	dec    eax
  4355d3:	je     0x435631
  4355d5:	and    al,0x70
  4355d7:	adc    BYTE PTR [eax+0x51],bh
  4355da:	cmp    edi,DWORD PTR ds:0x34345b7d
  4355e0:	add    DWORD PTR [edx-0x3],esp
  4355e3:	pop    ds
  4355e4:	mov    WORD PTR [esi],?
  4355e6:	cmp    edi,DWORD PTR [edx-0x479a0ec3]
  4355ec:	nop
  4355ed:	dec    ecx
  4355ee:	ds xchg edx,eax
  4355f0:	clc    
  4355f1:	bound  esi,QWORD PTR [ebp+0x34e90fd8]
  4355f7:	pop    edi
  4355f8:	out    dx,eax
  4355f9:	pop    es
  4355fa:	mov    ds:0x9d625248,al
  4355ff:	lods   al,BYTE PTR ds:[esi]
  435600:	psubsw mm6,QWORD PTR [edi+esi*4]
  435604:	mov    BYTE PTR [ecx-0x6df20000],cl
  43560a:	clc    
  43560b:	jno    0x435645
  43560d:	cmp    al,BYTE PTR [edx]
  43560f:	jbe    0x4355e5
  435611:	es add ecx,ebp
  435614:	xor    eax,0xf800d1c6
  435619:	cmp    BYTE PTR [ebp+0x1358a97],dl
  43561f:	add    BYTE PTR [ebx-0x47],dl
  435622:	xchg   edx,eax
  435623:	xchg   esp,eax
  435624:	fidiv  WORD PTR ds:0x21598b01
  43562a:	adc    eax,DWORD PTR [eax]
  43562c:	into   
  43562d:	xor    dh,BYTE PTR [esi+0x13d54939]
  435633:	add    BYTE PTR [esi-0x1e74d614],bl
  435639:	popa   
  43563a:	test   cl,cl
  43563c:	mov    dh,0x3e
  43563e:	jle    0x435687
  435640:	out    0x3a,al
  435642:	mov    eax,0xc12a9ceb
  435647:	mov    ecx,DWORD PTR [ecx+0x14]
  43564a:	pop    edi
  43564b:	add    BYTE PTR ds:0x395047c5,ah
  435651:	jo     0x4356d2
  435653:	xor    eax,0x477e355e
  435658:	add    cl,BYTE PTR ds:0x3ae55c42
  43565e:	jbe    0x435624
  435660:	jle    0x4356cf
  435662:	out    dx,eax
  435663:	cmc    
  435664:	mov    eax,ds:0x5f0f7e63
  435669:	inc    esp
  43566a:	inc    DWORD PTR gs:[eax]
  43566d:	add    BYTE PTR [ecx],dl
  43566f:	in     al,dx
  435670:	das    
  435671:	jno    0x4356b1
  435673:	outs   dx,BYTE PTR ds:[esi]
  435674:	push   edx
  435675:	inc    ecx
  435677:	(bad)  
  435678:	clc    
  435679:	pop    esi
  43567a:	inc    edx
  43567b:	arpl   WORD PTR [edx+0x74],cx
  43567e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43567f:	inc    ebx
  435680:	imul   ebp,ecx,0xfffa64a2
  435686:	popf   
  435687:	jecxz  0x4356f1
  435689:	add    dl,ch
  43568b:	cli    
  43568c:	jge    0x4356e5
  43568e:	repnz cmovb edi,DWORD PTR [eax]
  435692:	aaa    
  435693:	adc    eax,0x15f1fe49
  435698:	and    BYTE PTR [eax-0x7afb64bf],0xc8
  43569f:	mov    dh,0xfb
  4356a1:	(bad)  
  4356a2:	fmul   DWORD PTR [ebp-0x79419d26]
  4356a8:	test   DWORD PTR ss:[eax-0x3f000506],esp
  4356af:	add    eax,0x9b219882
  4356b4:	add    al,0x88
  4356b6:	cmp    ecx,DWORD PTR [ebx+eax*1+0x470d799]
  4356bd:	add    BYTE PTR [eax],dh
  4356bf:	dec    ecx
  4356c0:	mov    ebp,0x89e73662
  4356c5:	xchg   esp,eax
  4356c6:	aaa    
  4356c7:	fwait
  4356c8:	add    al,0x8b
  4356ca:	mov    bl,0x21
  4356cc:	jo     0x4356ce
  4356ce:	aaa    
  4356cf:	fwait
  4356d0:	jnp    0x435743
  4356d2:	add    BYTE PTR [eax],al
  4356d4:	movhps xmm0,QWORD PTR [ecx+0x5c]
  4356d8:	mov    edx,0xbc014cd3
  4356dd:	popa   
  4356de:	add    eax,0xfe6577fd
  4356e3:	sub    al,0x77
  4356e5:	adc    eax,0xad040c4f
  4356ea:	jge    0x4356e6
  4356ec:	xor    ecx,DWORD PTR [edx+0x5e5be70]
  4356f2:	cmp    DWORD PTR [esp+ecx*1-0x34],ebp
  4356f6:	cs push eax
  4356f8:	mov    BYTE PTR [ebp-0x62c8cb17],dh
  4356fe:	jne    0x435741
  435700:	xchg   ebx,eax
  435701:	add    al,0x49
  435703:	pop    esp
  435704:	lods   al,BYTE PTR ds:[esi]
  435705:	sahf   
  435706:	jge    0x4356cc
  435708:	daa    
  435709:	mov    ch,0x39
  43570b:	repz or BYTE PTR ds:0x432e7c5f,dh
  435712:	sub    cl,BYTE PTR [edx]
  435714:	cmp    BYTE PTR [edx*8-0x21718e00],ah
  43571b:	add    ah,al
  43571d:	je     0x4356be
  43571f:	xor    DWORD PTR [edx-0x261c9504],ecx
  435725:	lock sub al,BYTE PTR [ebp+ecx*8-0x88828c8]
  43572d:	out    dx,eax
  43572e:	mov    edi,0xe9f8ac2c
  435733:	add    bl,BYTE PTR [ebx+esi*2-0x4b]
  435737:	jl     0x435739
  435739:	add    BYTE PTR [ebx+0x5bfbadbb],ah
  43573f:	jge    0x435704
  435741:	mov    dl,0x2b
  435743:	sbb    BYTE PTR [ebx+0x45],dh
  435746:	cmp    ecx,DWORD PTR [ebx+0x29]
  435749:	push   edi
  43574a:	in     al,dx
  43574b:	mov    esp,0xfab1efa2
  435750:	cmc    
  435751:	jl     0x43574c
  435753:	cmp    esi,DWORD PTR [ecx+0x3a]
  435756:	pop    ds
  435757:	ja     0x435785
  435759:	adc    al,0x70
  43575b:	(bad)
  43575f:	cmp    al,0x71
  435761:	cmp    al,0x3b
  435763:	mov    ebp,0xfcb00032
  435768:	or     DWORD PTR [ebp-0x1],edi
  43576b:	pop    ebx
  43576c:	popa   
  43576d:	cmp    al,0x1b
  43576f:	mov    ebp,0xfcb81432
  435774:	loope  0x4357f2
  435776:	out    dx,eax
  435777:	dec    edi
  435778:	pop    ebp
  435779:	jl     0x4357e2
  43577b:	cmp    edx,ebp
  43577d:	add    esi,esi
  43577f:	repz aad 0x3
  435782:	mov    bh,0x33
  435784:	jmp    0x5360:0x1206f7c
  43578b:	in     al,0x89
  43578d:	and    DWORD PTR [edi+0x75],esi
  435790:	sub    DWORD PTR [ecx],0xe8f88f0c
  435796:	xor    al,0x34
  435798:	add    DWORD PTR [esi],ebp
  43579a:	mov    ebx,0xe91c77
  43579f:	add    BYTE PTR [ecx*4+0x60f046f8],dh
  4357a6:	rcr    DWORD PTR [esi+esi*8+0x1710137],0x8d
  4357ae:	clc    
  4357af:	cs push es
  4357b1:	into   
  4357b2:	std    
  4357b3:	call   0x2e08d738
  4357b8:	idiv   DWORD PTR [edi-0x3b]
  4357bb:	mov    esp,0x9c8ca02d
  4357c0:	lods   al,BYTE PTR ds:[esi]
  4357c1:	jecxz  0x435840
  4357c3:	xor    bh,bh
  4357c5:	pop    es
  4357c6:	mov    WORD PTR [eax+0x7df8b188],es
  4357cc:	pop    ss
  4357cd:	add    DWORD PTR [edi+0x62],ecx
  4357d0:	out    dx,al
  4357d1:	aas    
  4357d2:	jle    0x4357b3
  4357d4:	repz xor DWORD PTR [edx+eax*8],esi
  4357d8:	popa   
  4357d9:	imul   ebp,esp,0xc269ede7
  4357df:	shl    BYTE PTR [eax],cl
  4357e1:	push   ecx
  4357e2:	test   bh,al
  4357e4:	inc    esp
  4357e5:	or     eax,DWORD PTR [edx+ebp*2]
  4357e8:	push   edx
  4357e9:	cmp    al,0x7e
  4357eb:	mov    edi,0xaf8421e8
  4357f0:	dec    esp
  4357f1:	or     bh,dh
  4357f3:	imul   esi,DWORD PTR [edx+0x3c],0xe90aed77
  4357fa:	mov    eax,0xf88c0197
  4357ff:	cs data16 into 
  435802:	or     DWORD PTR [eax],eax
  435804:	add    BYTE PTR [eax],al
  435806:	push   cs
  435807:	or     eax,DWORD PTR [edx+0x34]
  43580a:	xchg   ebx,eax
  43580b:	jno    0x43587a
  43580d:	sbb    al,0xc7
  43580f:	out    0x1c,al
  435811:	je     0x4357f4
  435813:	inc    ecx
  435814:	jle    0x435857
  435816:	or     DWORD PTR es:[eax+0x24],eax
  43581a:	mov    esi,0x9b8bc87e
  43581f:	mov    DWORD PTR [ebp-0x3c],esi
  435822:	(bad)  
  435823:	jbe    0x435867
  435825:	xor    al,0xce
  435827:	xor    DWORD PTR [ecx],eax
  435829:	add    BYTE PTR [edi+0x57085a10],bh
  43582f:	out    0x1c,al
  435831:	call   0x3dd70c
  435836:	clc    
  435837:	pop    edx
  435838:	pop    edx
  435839:	pop    ebp
  43583a:	or     al,0x89
  43583c:	clc    
  43583d:	mov    bh,0x48
  43583f:	jle    0x43583b
  435841:	(bad)  
  435842:	fld    DWORD PTR [edi+esi*4+0x8]
  435846:	mov    cs,ebp
  435848:	kaddw  k1,k6,k5
  43584c:	(bad)
  43584f:	or     ah,ch
  435851:	mov    edx,ebx
  435853:	add    DWORD PTR [ebp+0x33],0xfb63b75
  43585a:	adc    bl,BYTE PTR [ebx]
  43585c:	add    DWORD PTR [eax],eax
  43585e:	pop    esi
  43585f:	mov    cl,0x39
  435861:	xor    DWORD PTR [ecx+0x4e0087b6],ecx
  435867:	xor    DWORD PTR [esi+0x7d],esi
  43586a:	add    BYTE PTR [eax],al
  43586c:	cmp    BYTE PTR [ecx],0xa
  43586f:	test   esi,edx
  435871:	aaa    
  435872:	add    DWORD PTR [eax],eax
  435874:	and    BYTE PTR [ebx],cl
  435876:	je     0x435880
  435878:	push   ebp
  435879:	fs je  0x435885
  43587c:	clc    
  43587d:	or     al,0x36
  43587f:	(bad)  
  435880:	aaa    
  435881:	inc    edx
  435882:	sub    BYTE PTR [esi+0x5a7b9b47],bh
  435888:	aas    
  435889:	je     0x4358b1
  43588b:	and    BYTE PTR [edx+0x5742bd81],ah
  435891:	dec    ebx
  435892:	and    eax,0x2714373d
  435897:	sub    BYTE PTR [esi],bh
  435899:	jne    0x4358bb
  43589b:	jae    0x4358cd
  43589d:	push   esi
  43589e:	aas    
  43589f:	and    al,0x7
  4358a1:	ret    
  4358a2:	inc    ecx
  4358a3:	add    BYTE PTR [esp+edx*8+0x3b71851c],bh
  4358aa:	cs push 0x491eb
  4358b0:	pop    ebp
  4358b1:	pushf  
  4358b2:	xor    al,0xf9
  4358b4:	out    0x11,al
  4358b6:	lds    edi,FWORD PTR [ebp-0x5]
  4358b9:	xchg   BYTE PTR [ecx],cl
  4358bb:	cmc    
  4358bc:	inc    edx
  4358bd:	lahf   
  4358be:	and    eax,0xc626ef5a
  4358c3:	stc    
  4358c4:	test   al,0xc1
  4358c6:	daa    
  4358c7:	mov    esi,0x53799b47
  4358cc:	sub    ebp,DWORD PTR [ecx+0x7a7b]
  4358d2:	xor    ebp,DWORD PTR [ebp+0x3343597b]
  4358d8:	fdivp  st(2),st
  4358da:	adc    BYTE PTR [ebp+0x71b2d879],0x50
  4358e1:	adc    al,0xbc
  4358e3:	pop    esp
  4358e4:	adc    eax,0x2e36f985
  4358e9:	push   eax
  4358ea:	pusha  
  4358eb:	stos   DWORD PTR es:[edi],eax
  4358ec:	add    esp,0x1c3ed62f
  4358f2:	aaa    
  4358f3:	fwait
  4358f4:	add    al,0x0
  4358f6:	call   0xdd00d337
  4358fb:	xor    edi,DWORD PTR ds:0x623427c2
  435901:	leave  
  435902:	mov    WORD PTR cs:[edi-0x58973d8],cs
  435909:	add    esi,ebx
  43590b:	js     0x4358bb
  43590d:	mov    edi,0xbfa678eb
  435912:	add    edi,DWORD PTR [ecx-0x59]
  435915:	inc    ebx
  435916:	jnp    0x43591c
  435918:	rol    BYTE PTR [ebx+0x37],cl
  43591b:	jae    0x4358c7
  43591d:	aaa    
  43591e:	xor    BYTE PTR [edx+ebp*8],dh
  435921:	add    esi,esi
  435923:	hlt    
  435924:	mov    ecx,0xe9f41753
  435929:	les    esi,FWORD PTR [edi-0x14]
  43592c:	in     al,0x3
  43592e:	aaa    
  43592f:	xor    al,0x2b
  435931:	mov    edi,0x78957903
  435936:	add    BYTE PTR [eax],al
  435938:	frstpm(287 only) 
  43593a:	(bad)  
  43593b:	js     0x43598f
  43593d:	sub    BYTE PTR [ebx+0x4d],ch
  435940:	add    esi,DWORD PTR [edi+ebp*4]
  435943:	js     0x4358f4
  435945:	add    ebx,eax
  435947:	js     0x435946
  435949:	dec    edi
  43594a:	arpl   WORD PTR [eax],si
  43594c:	push   edi
  43594d:	int3   
  43594e:	jmp    0x1b779056
  435953:	jecxz  0x43590f
  435955:	inc    ecx
  435957:	pop    ecx
  435958:	mov    bl,bh
  43595a:	cwde   
  43595b:	int3   
  43595c:	jno    0x435915
  43595e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43595f:	clc    
  435960:	mov    cl,0xf2
  435962:	or     eax,0xe3017781
  435967:	sub    ch,BYTE PTR [edi+0x3703ea35]
  43596d:	jmp    0xc3fb:0x76fce172
  435974:	or     dl,dh
  435976:	add    BYTE PTR [ecx],al
  435978:	out    0x38,al
  43597a:	mov    WORD PTR [edi],ds
  43597c:	pop    ss
  43597d:	ret    0xe902
  435980:	xor    al,0x34
  435982:	aam    0x8b
  435984:	mov    dl,0xf6
  435986:	xor    BYTE PTR [eax+0x75],ah
  435989:	pop    eax
  43598a:	mov    dh,BYTE PTR [edi]
  43598c:	inc    ebx
  43598d:	push   ecx
  43598e:	jl     0x435969
  435990:	cdq    
  435991:	imul   BYTE PTR [eax]
  435993:	ret    0x19fc
  435996:	sub    DWORD PTR [edx+0x48],esp
  435999:	cmp    BYTE PTR [edi+edx*1-0x1bd90000],cl
  4359a0:	sub    esi,DWORD PTR [ecx]
  4359a2:	inc    edx
  4359a3:	cli    
  4359a4:	call   0xf8cff604
  4359a9:	bound  esi,QWORD PTR [ebp+0x5c]
  4359ac:	test   BYTE PTR ds:0x153fb1df,ah
  4359b2:	or     al,0x75
  4359b4:	aas    
  4359b5:	stc    
  4359b6:	xor    al,0x34
  4359b8:	add    ecx,ebp
  4359ba:	and    DWORD PTR [edi+edx*2+0x62],esi
  4359be:	(bad)  
  4359bf:	out    dx,al
  4359c0:	ret    
  4359c1:	shl    BYTE PTR [esi+0x44],cl
  4359c4:	mov    ah,BYTE PTR [eax+edi*2+0x379fc040]
  4359cb:	mov    bl,0x76
  4359cd:	or     eax,0xb28c7520
  4359d2:	mov    al,ds:0x39b54faf
  4359d7:	out    0x30,al
  4359d9:	cdq    
  4359da:	sub    DWORD PTR [ebp+0x52],edi
  4359dd:	fwait
  4359de:	pop    esp
  4359df:	retf   
  4359e0:	fsub   st,st(6)
  4359e2:	ins    DWORD PTR es:[edi],dx
  4359e3:	mov    al,0x46
  4359e5:	fnstsw WORD PTR [ecx+0x7a02056f]
  4359eb:	call   FWORD PTR [edx+eiz*2]
  4359ee:	stc    
  4359ef:	aaa    
  4359f0:	mov    WORD PTR [eax],es
  4359f2:	and    BYTE PTR [edx+edx*2],ah
  4359f5:	sub    ebx,DWORD PTR [ecx-0x1f17b7ba]
  4359fb:	(bad)  
  4359fd:	call   ebp
  4359ff:	inc    esp
  435a00:	sub    DWORD PTR [ebx-0x7d760000],eax
  435a06:	jg     0x435a86
  435a08:	push   cs
  435a09:	pop    edi
  435a0a:	adc    BYTE PTR [esi-0xe],0x22
  435a0e:	rcr    DWORD PTR [esi-0x6b],0x94
  435a12:	pop    esp
  435a13:	ret    
  435a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435a15:	repz sub BYTE PTR [ecx],al
  435a18:	pusha  
  435a19:	and    BYTE PTR [eax],dh
  435a1b:	inc    esi
  435a1c:	into   
  435a1d:	in     al,0x1
  435a1f:	(bad)  
  435a20:	pop    eax
  435a21:	and    BYTE PTR [ecx],al
  435a23:	add    BYTE PTR [esi],cl
  435a25:	ss jle 0x435a7e
  435a28:	inc    edx
  435a29:	cmp    ecx,edx
  435a2b:	jae    0x435a08
  435a2d:	xor    cl,al
  435a2f:	mov    DWORD PTR [eax+0xe335a21],ebp
  435a35:	pop    ebx
  435a36:	jle    0x435a1d
  435a38:	mov    bl,0x72
  435a3a:	(bad)
  435a3d:	or     ah,ch
  435a3f:	mov    ebx,DWORD PTR [ebx-0x21138a73]
  435a45:	inc    esi
  435a46:	test   al,al
  435a48:	mov    eax,ds:0x9e13ed09
  435a4d:	xor    eax,0xb492787e
  435a52:	cli    
  435a53:	(bad)  
  435a55:	push   0xb29e0006
  435a5a:	jns    0x435a68
  435a5c:	sahf   
  435a5d:	mov    es,WORD PTR [edi+ebx*8-0x7cfecaa3]
  435a64:	push   esi
  435a65:	xor    BYTE PTR [edx+ecx*1+0x0],dh
  435a69:	add    ch,bl
  435a6b:	idiv   esp
  435a6d:	push   DWORD PTR [edi]
  435a6f:	xchg   edx,eax
  435a70:	ja     0x435a42
  435a72:	inc    esp
  435a73:	fwait
  435a74:	add    al,0x7d
  435a76:	sbb    BYTE PTR [esi-0x6d87fdb9],al
  435a7c:	lock dec DWORD PTR [eax-0x65]
  435a80:	jne    0x435aca
  435a82:	xor    edx,DWORD PTR [esi]
  435a84:	in     eax,dx
  435a85:	xchg   dl,ch
  435a87:	mov    ds:0x6474876,al
  435a8c:	cmp    eax,0x2a168404
  435a91:	cmp    BYTE PTR [esi+0x7287c94f],ch
  435a97:	stos   DWORD PTR es:[edi],eax
  435a98:	jbe    0x435a9b
  435a9a:	imul   eax,DWORD PTR [esi],0x4fbe3c52
  435aa0:	int    0x87
  435aa2:	push   0x3
  435aa4:	jl     0x435af1
  435aa6:	pop    ss
  435aa7:	pop    edx
  435aa8:	cmp    al,bl
  435aaa:	aaa    
  435aab:	fwait
  435aac:	add    al,0x0
  435aae:	mov    ah,0xe2
  435ab0:	jmp    0xd8ff:0xef3ab808
  435ab7:	icebp  
  435ab8:	and    BYTE PTR [ebx+0x3e343b],al
  435abe:	mov    esp,0xf782fcd9
  435ac3:	mov    edi,0x7f30c0f5
  435ac8:	add    al,0x0
  435aca:	aaa    
  435acb:	and    al,0xc9
  435acd:	sldt   WORD PTR [eax]
  435ad0:	aaa    
  435ad1:	fwait
  435ad2:	jge    0x435ace
  435ad4:	inc    edi
  435ad5:	scas   al,BYTE PTR es:[edi]
  435ad6:	push   ds
  435ad7:	jge    0x435af3
  435ad9:	das    
  435ada:	std    
  435adb:	or     BYTE PTR [ebx-0x7700113b],bh
  435ae1:	xchg   ecx,eax
  435ae2:	xchg   edx,eax
  435ae3:	inc    BYTE PTR [ecx+0x6985c0a7]
  435ae9:	xor    edi,DWORD PTR [ebx-0x5f4ace1d]
  435aef:	sti    
  435af0:	mov    cl,0xde
  435af2:	rol    DWORD PTR [edi+edi*2],1
  435af5:	mov    ah,0xc8
  435af7:	repz retf 0xb869
  435afb:	inc    eax
  435afc:	aas    
  435afd:	ss cs or cl,al
  435b01:	mov    edi,cs
  435b03:	jl     0x435b3c
  435b05:	xor    al,0x2d
  435b07:	adc    dl,cl
  435b09:	xor    edx,DWORD PTR [esp+eax*1]
  435b0c:	cdq    
  435b0d:	xor    al,0x92
  435b0f:	sub    BYTE PTR [eax+0x34],al
  435b12:	jmp    0xac06:0x42c767a
  435b19:	stc    
  435b1a:	lea    esp,[ecx-0x48]
  435b1d:	jmp    0x2ca9d7a7
  435b22:	sbb    DWORD PTR [esi],esi
  435b24:	paddd  mm2,mm0
  435b27:	add    esi,DWORD PTR [edi]
  435b29:	mov    ebx,0x6b22cbb5
  435b2e:	jno    0x435b70
  435b30:	dec    edi
  435b31:	inc    ebx
  435b32:	pop    eax
  435b33:	rol    BYTE PTR [eax],0x0
  435b36:	ss xor eax,0x9d3703ea
  435b3c:	pop    ecx
  435b3d:	repnz rol BYTE PTR [edi+0x6f174073],1
  435b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435b45:	repz rol BYTE PTR [edi+0x74b403ea],0x96
  435b4d:	add    BYTE PTR [esi-0xc],dh
  435b50:	fxch   st(0)
  435b52:	scas   al,BYTE PTR es:[edi]
  435b53:	xchg   DWORD PTR [edi],ecx
  435b55:	shl    esi,1
  435b57:	cmp    ebp,ecx
  435b59:	clc    
  435b5a:	mov    ah,0xa5
  435b5c:	jmp    0xc8c4:0x30373703
  435b63:	xchg   esp,eax
  435b64:	add    ecx,esp
  435b66:	add    esi,DWORD PTR [ecx-0x3e]
  435b69:	add    BYTE PTR [eax+ecx*4-0x3f],bh
  435b6d:	sbb    ah,BYTE PTR [ebp+0x34e918bf]
  435b73:	xor    al,0xf0
  435b75:	fdiv   DWORD PTR [esi-0x23a9918a]
  435b7b:	js     0x435afe
  435b7d:	retf   
  435b7e:	dec    eax
  435b7f:	pop    es
  435b80:	sti    
  435b81:	icebp  
  435b82:	clc    
  435b83:	xor    eax,0xb0432c8c
  435b88:	dec    esi
  435b89:	mov    cl,0x78
  435b8b:	hlt    
  435b8c:	sbb    BYTE PTR [edx-0x79],bh
  435b8f:	hlt    
  435b90:	add    BYTE PTR [eax-0x16fec8c7],dl
  435b96:	popf   
  435b97:	cmc    
  435b98:	sbb    al,0xa8
  435b9a:	add    BYTE PTR [eax],al
  435b9c:	cld    
  435b9d:	das    
  435b9e:	mov    WORD PTR [edx+0x6a0866b4],?
  435ba4:	loope  0x435bd5
  435ba6:	test   BYTE PTR [eax-0xb3e4dfd],ch
  435bac:	cs scas eax,DWORD PTR es:[edi]
  435bae:	dec    eax
  435baf:	or     eax,0xe9f886bd
  435bb4:	xor    al,0xe
  435bb6:	add    DWORD PTR [edx],edi
  435bb8:	aad    0xd
  435bba:	add    ebx,eax
  435bbc:	xor    al,0xaf
  435bbe:	push   eax
  435bbf:	fucomp st(4)
  435bc1:	add    eax,0xb134e914
  435bc6:	inc    esi
  435bc7:	loope  0x435c06
  435bc9:	jecxz  0x435bc3
  435bcb:	sub    ah,bl
  435bcd:	cmp    esi,eax
  435bcf:	cmp    dh,BYTE PTR [eax+ebp*2+0x2eec6a03]
  435bd6:	mov    ch,BYTE PTR [esi-0x26bd5274]
  435bdc:	sbb    ebp,DWORD PTR ds:0x23550034
  435be2:	repz jmp 0x3bdc23
  435be8:	(bad)
  435beb:	lds    edx,FWORD PTR ds:0xafe9f945
  435bf1:	cmp    al,0xff
  435bf4:	in     eax,0x43
  435bf6:	or     edi,eax
  435bf8:	or     al,0x98
  435bfa:	test   DWORD PTR [esi+ecx*1+0x30],esi
  435bfe:	jle    0x435c55
  435c00:	add    BYTE PTR [eax],al
  435c02:	jbe    0x435c6b
  435c04:	rcl    BYTE PTR [eax],0x5e
  435c07:	xor    dh,BYTE PTR [esi-0x2]
  435c0a:	pop    esi
  435c0b:	loope  0x435c23
  435c0d:	or     DWORD PTR [ebx],0x7c
  435c10:	add    DWORD PTR [edi],ecx
  435c12:	mov    ds:0x1e00078f,al
  435c17:	jg     0x435bcb
  435c19:	add    cl,cl
  435c1b:	dec    esp
  435c1c:	cmc    
  435c1d:	mov    edi,DWORD PTR [eax-0x62bd1e3e]
  435c23:	(bad)  
  435c24:	or     DWORD PTR [ecx-0x280987dd],ecx
  435c2a:	lea    ebp,[edi+0x11]
  435c2d:	jb     0x435bd7
  435c2f:	or     BYTE PTR [edx+0x10],bl
  435c32:	pop    esi
  435c33:	jp     0x435c3e
  435c35:	rcpps  xmm7,xmm5
  435c38:	adc    BYTE PTR [eax],al
  435c3a:	into   
  435c3b:	jbe    0x435bf3
  435c3d:	add    BYTE PTR [esi+0x31],ch
  435c40:	add    DWORD PTR [ecx+ecx*8+0xa],esi
  435c44:	inc    esp
  435c45:	or     BYTE PTR [ecx],dl
  435c47:	icebp  
  435c48:	sbb    BYTE PTR [ebx-0x16ff0e7e],dl
  435c4e:	mov    DWORD PTR [ecx+0x4625fff8],eax
  435c54:	and    DWORD PTR [ebp-0x75010aa2],eax
  435c5a:	aaa    
  435c5b:	push   edx
  435c5c:	mov    ebp,0xdd1a2fe7
  435c61:	(bad)  
  435c62:	mov    edi,0x41c783
  435c67:	add    BYTE PTR [edi],ah
  435c69:	fwait
  435c6a:	add    al,BYTE PTR [eax]
  435c6c:	aaa    
  435c6d:	pop    es
  435c6e:	fiadd  WORD PTR [edi-0x1a3b7926]
  435c74:	aas    
  435c75:	loope  0x435c79
  435c77:	mov    eax,DWORD PTR [edx]
  435c79:	ja     0x435cf0
  435c7b:	pop    ebx
  435c7c:	push   edx
  435c7d:	adc    dh,BYTE PTR [esi]
  435c7f:	sbb    BYTE PTR ds:0x28f2d54b,al
  435c85:	fwait
  435c86:	add    al,0x85
  435c88:	loop   0x435cfc
  435c8a:	jl     0x435ccd
  435c8c:	pop    ds
  435c8d:	mov    ch,BYTE PTR [ecx-0x931bed3]
  435c93:	std    
  435c94:	xor    BYTE PTR [ebx+0x1a32e504],bl
  435c9a:	mov    edi,0x8179a420
  435c9f:	jnp    0x435cbc
  435ca1:	fwait
  435ca2:	in     eax,dx
  435ca3:	and    DWORD PTR [edi+0x3800046a],0x3d
  435caa:	add    edi,ecx
  435cac:	jb     0x435cad
  435cae:	jns    0x435c7a
  435cb0:	in     al,0xba
  435cb2:	inc    ebx
  435cb3:	jge    0x435cae
  435cb5:	cmp    BYTE PTR [ebx+0x53],0xef
  435cb9:	cdq    
  435cba:	lods   al,BYTE PTR ds:[esi]
  435cbb:	jge    0x435c9e
  435cbd:	cmp    dl,BYTE PTR [ebx-0x26]
  435cc0:	lods   al,BYTE PTR ds:[esi]
  435cc1:	int    0x24
  435cc3:	xor    edi,0xffffffc6
  435cc6:	add    DWORD PTR [edi+0x41c58f6f],eax
  435ccc:	add    BYTE PTR [eax],al
  435cce:	daa    
  435ccf:	fwait
  435cd0:	add    al,BYTE PTR [eax]
  435cd2:	aaa    
  435cd3:	mov    edi,0x3412880e
  435cd8:	push   cs
  435cd9:	jns    0x435d4d
  435cdb:	mov    eax,0x3b98c33b
  435ce0:	sub    edx,ebx
  435ce2:	inc    edi
  435ce3:	jae    0x435ce8
  435ce5:	in     al,dx
  435ce6:	sbb    dh,BYTE PTR [eax]
  435ce8:	ins    DWORD PTR es:[edi],dx
  435ce9:	aas    
  435cea:	fwait
  435ceb:	mov    ebx,0xdeafd6a5
  435cf0:	(bad)  
  435cf1:	jnp    0x435ccf
  435cf3:	xchg   esp,eax
  435cf4:	arpl   WORD PTR ds:0xdc38e44f,si
  435cfa:	jmp    0xba47471b
  435cff:	(bad)  
  435d01:	jp     0x435cf9
  435d03:	sub    ebx,DWORD PTR [ebx]
  435d05:	test   eax,0xfca77e22
  435d0a:	dec    ebx
  435d0b:	test   dl,ch
  435d0d:	add    ebx,DWORD PTR [edx+0x2e]
  435d10:	imul   eax,ebp,0x27
  435d13:	add    DWORD PTR [ecx+eax*4],ecx
  435d16:	lods   al,BYTE PTR ds:[esi]
  435d17:	sub    dl,0xf4
  435d1a:	mov    ah,0x20
  435d1c:	cli    
  435d1d:	add    esi,DWORD PTR [edi]
  435d1f:	xor    ebx,DWORD PTR [eax+0x1]
  435d22:	push   ds
  435d23:	repnz test DWORD PTR [eax-0x3],edi
  435d27:	mov    al,BYTE PTR [bx+di-0x76]
  435d2b:	jp     0x435d1f
  435d2d:	jp     0x435d93
  435d2f:	jl     0x435d1c
  435d31:	stos   DWORD PTR es:[edi],eax
  435d32:	add    BYTE PTR [eax],al
  435d34:	jp     0x435cb8
  435d36:	ficom  DWORD PTR [ecx+0xd]
  435d39:	mov    al,0xa7
  435d3b:	and    esi,DWORD PTR [esp+esi*2+0x6fbbedce]
  435d42:	imul   esp,edx,0x3ea34de
  435d48:	mov    eax,0x7e78f1ec
  435d4d:	push   esp
  435d4e:	jae    0x435d10
  435d50:	or     BYTE PTR [ecx+eax*1+0x5433de1],0x36
  435d58:	jae    0x435d7e
  435d5a:	add    ebx,ebp
  435d5c:	xor    al,0x34
  435d5e:	ins    DWORD PTR es:[edi],dx
  435d5f:	call   FWORD PTR [edi+ebx*8]
  435d62:	in     al,0x28
  435d64:	jg     0x435d92
  435d66:	imul   ebp,ebx,0x9
  435d69:	out    0xe4,eax
  435d6b:	jno    0x435dbe
  435d6d:	(bad)  
  435d6e:	mov    WORD PTR [esi+0x150f18c],fs
  435d74:	jg     0x435d9a
  435d76:	add    ecx,ebp
  435d78:	out    dx,eax
  435d79:	out    0xf8,al
  435d7b:	jo     0x435d79
  435d7d:	sbb    esi,DWORD PTR [edx+eax*8]
  435d80:	push   0x30eec085
  435d85:	xor    al,0x1
  435d87:	jmp    0xe9545319
  435d8c:	xor    BYTE PTR [ecx+eax*1],dh
  435d8f:	xor    eax,0xd9f7011a
  435d94:	add    DWORD PTR [edx],esp
  435d96:	test   BYTE PTR [eax+eax*1],ch
  435d99:	add    bh,dh
  435d9b:	xor    ecx,DWORD PTR [eax]
  435d9d:	ins    DWORD PTR es:[edi],dx
  435d9e:	aad    0x2c
  435da0:	add    ecx,ebp
  435da2:	inc    ebp
  435da3:	mov    BYTE PTR [ebx],0x96
  435da6:	xchg   BYTE PTR [eax-0x6c176074],al
  435dac:	inc    ebx
  435dad:	push   0xfffffffd
  435daf:	sub    ecx,DWORD PTR [edx-0x2f7f3cec]
  435db5:	push   0xfffffff5
  435db7:	and    esi,DWORD PTR [ebx-0x71]
  435dba:	shl    ah,0x20
  435dbd:	jo     0x435e13
  435dbf:	hlt    
  435dc0:	jge    0x435deb
  435dc2:	pop    ds
  435dc3:	or     DWORD PTR [ecx+0x408540b1],0xf88234f9
  435dcd:	add    dh,bl
  435dcf:	dec    edx
  435dd0:	sbb    ecx,DWORD PTR [eax-0x14472d5d]
  435dd6:	(bad)  
  435dd7:	push   eax
  435dd8:	test   DWORD PTR [ebx+edx*8+0x435d89d2],0xdf1852b3
  435de3:	call   0x36dbfbd0
  435de8:	add    DWORD PTR [ebx+0x4780becb],ecx
  435dee:	xchg   esi,eax
  435def:	mov    ebp,ecx
  435df1:	xor    ecx,DWORD PTR [eax-0x3674f42f]
  435df7:	xchg   esi,eax
  435df8:	add    eax,0xffffffea
  435dfb:	sub    eax,0x40c2
  435e00:	outs   dx,BYTE PTR ds:[esi]
  435e01:	add    DWORD PTR ss:[eax],eax
  435e04:	dec    esi
  435e05:	ins    DWORD PTR es:[edi],dx
  435e06:	add    al,BYTE PTR ds:0xf701364e
  435e0c:	sbb    DWORD PTR [eax],ebp
  435e0e:	add    DWORD PTR [esi+ebx*2],eax
  435e11:	or     al,BYTE PTR ss:[ecx+ebp*8-0x2afffeca]
  435e19:	in     eax,dx
  435e1a:	inc    eax
  435e1b:	mov    edx,DWORD PTR [ebx+0x74]
  435e1e:	add    BYTE PTR [ebp-0x36],0x82
  435e22:	mov    bh,0x76
  435e24:	sbb    esi,DWORD PTR [ebx-0x43ac7648]
  435e2a:	test   al,al
  435e2c:	icebp  
  435e2d:	mov    ecx,0x361e0066
  435e32:	jle    0x435e83
  435e34:	out    dx,al
  435e35:	lods   al,BYTE PTR ds:[esi]
  435e36:	shl    BYTE PTR [eax+eax*8-0x4e],0x40
  435e3b:	adc    BYTE PTR [edi-0x1c],dl
  435e3e:	int3   
  435e3f:	test   DWORD PTR [edi],esp
  435e41:	dec    ecx
  435e42:	sub    eax,0x7d95a98b
  435e47:	dec    edx
  435e48:	aaa    
  435e49:	jg     0x435e32
  435e4b:	dec    eax
  435e4c:	ja     0x435e64
  435e4e:	dec    esi
  435e4f:	sbb    BYTE PTR [esi-0x7025f38],bh
  435e55:	ss (bad) 
  435e57:	jb     0x435e8b
  435e59:	ss pop edx
  435e5b:	in     al,0xbc
  435e5d:	dec    ebp
  435e5e:	xchg   DWORD PTR [ebx-0x51],edx
  435e61:	mov    ebx,0x4387
  435e66:	mov    ecx,DWORD PTR [esi-0x44fa1bb7]
  435e6c:	lods   al,BYTE PTR ds:[esi]
  435e6d:	dec    esp
  435e6e:	ins    BYTE PTR es:[edi],dx
  435e6f:	xor    al,bl
  435e71:	test   edx,esi
  435e73:	jle    0x435dfb
  435e75:	push   ebx
  435e76:	jg     0x435e86
  435e78:	ror    BYTE PTR [eax+eax*4],0xd2
  435e7c:	adc    al,0x0
  435e7e:	xor    eax,0x4d74048b
  435e83:	push   es
  435e84:	push   eax
  435e85:	hlt    
  435e86:	lods   al,BYTE PTR ds:[esi]
  435e87:	pop    eax
  435e88:	mov    ch,0x85
  435e8a:	call   0xe693ad11
  435e8f:	jb     0x435e4b
  435e91:	adc    esi,DWORD PTR [edi]
  435e93:	mov    eax,DWORD PTR [ebp+0x4a043f53]
  435e99:	sbb    BYTE PTR [eax+edx*2-0x3085d847],ch
  435ea0:	dec    bh
  435ea2:	pop    esi
  435ea3:	push   edx
  435ea4:	cmp    eax,0x7ed38a87
  435ea9:	jns    0x435f22
  435eab:	mov    edx,DWORD PTR [ecx]
  435ead:	sub    DWORD PTR [ebx-0xffffba0],0x51
  435eb4:	cmp    eax,0x48b3700
  435eb9:	shl    DWORD PTR [eax],0x91
  435ebc:	add    al,0x0
  435ebe:	aaa    
  435ebf:	or     cl,BYTE PTR [edx+0x10]
  435ec2:	aaa    
  435ec3:	xor    al,0xf2
  435ec5:	add    esi,DWORD PTR [edi]
  435ec7:	xor    DWORD PTR [esi-0x77],ebx
  435eca:	add    BYTE PTR [eax],al
  435ecc:	aaa    
  435ecd:	xor    al,0xea
  435ecf:	test   BYTE PTR [eax+eax*4-0x16],cl
  435ed3:	adc    BYTE PTR [ebx+0x3703f003],dh
  435ed9:	inc    ebp
  435eda:	sub    cl,BYTE PTR [edi+0x79df3470]
  435ee0:	inc    ebx
  435ee1:	and    al,0xaa
  435ee3:	mov    dh,ah
  435ee5:	xchg   DWORD PTR [ebx+0x49],esi
  435ee8:	push   edi
  435ee9:	stos   DWORD PTR es:[edi],eax
  435eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435eec:	mov    ah,0x73
  435eee:	xchg   esi,eax
  435eef:	loop   0x435eac
  435ef1:	jmp    0x435ed8
  435ef3:	mov    bh,ah
  435ef5:	addr16 gs retf 
  435ef8:	or     ebp,DWORD PTR [ecx]
  435efa:	jae    0x435f4d
  435efc:	idiv   DWORD PTR [edx+eiz*4]
  435eff:	jecxz  0x435ee4
  435f01:	xor    BYTE PTR [ebx+0x57],ah
  435f04:	sub    DWORD PTR [ebp+0x37afa825],0xfffffff4
  435f0b:	shl    dh,0xf3
  435f0e:	bound  edx,QWORD PTR [esi+0x4f]
  435f11:	mov    ah,0x45
  435f13:	test   al,0x37
  435f15:	or     dl,dh
  435f17:	mov    esp,?
  435f19:	xchg   DWORD PTR [ebx],eax
  435f1b:	inc    edi
  435f1c:	cmp    eax,DWORD PTR ds:0x2476b86f
  435f22:	jmp    0xba19:0x16343705
  435f29:	icebp  
  435f2a:	lea    ecx,[esp+eax*4+0x48637c]
  435f31:	add    BYTE PTR [edi],ch
  435f33:	in     eax,0x3b
  435f35:	push   esp
  435f36:	pop    ds
  435f37:	jmp    0xbc0d:0xab3703d4
  435f3e:	mov    al,0xf7
  435f40:	add    cl,dl
  435f42:	ret    
  435f43:	repz in al,dx
  435f45:	shl    BYTE PTR [ecx-0x80],0x4
  435f49:	cmp    DWORD PTR [ebx-0x52162305],edi
  435f4f:	jecxz  0x435f49
  435f51:	out    0xb9,al
  435f53:	add    DWORD PTR [esi],0xffffffe9
  435f56:	xor    al,0x99
  435f58:	pop    es
  435f59:	jb     0x435fca
  435f5b:	push   esp
  435f5c:	jle    0x435f87
  435f5e:	add    BYTE PTR ds:0x3450a9c0,dh
  435f64:	add    ecx,ebp
  435f66:	xor    al,0x75
  435f68:	inc    eax
  435f69:	test   eax,0xe9013434
  435f6e:	outs   dx,DWORD PTR ds:[esi]
  435f6f:	xor    eax,0x3434e900
  435f74:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f76:	and    al,0x34
  435f78:	adc    ecx,ebp
  435f7a:	xor    al,0x2d
  435f7c:	jge    0x435fef
  435f7e:	xor    al,0x34
  435f80:	add    DWORD PTR [edx+0x31],ebp
  435f83:	add    BYTE PTR [ecx],0xde
  435f86:	mov    al,0xbf
  435f88:	push   es
  435f89:	jmp    0x6d04b0c2
  435f8e:	addps  xmm0,XMMWORD PTR [ecx]
  435f91:	out    0xca,al
  435f93:	das    
  435f94:	adc    DWORD PTR [ecx],ebp
  435f96:	add    BYTE PTR [eax],al
  435f98:	mov    edx,0xf872ecf3
  435f9d:	push   ebx
  435f9e:	mov    ch,BYTE PTR [edi+ecx*4]
  435fa1:	mov    bl,0xc1
  435fa3:	cmp    eax,0x549b81a
  435fa8:	mov    edx,0xf26cccea
  435fad:	pop    es
  435fae:	adc    BYTE PTR [edx+0x68],dh
  435fb1:	hlt    
  435fb2:	cmp    esp,DWORD PTR [ecx]
  435fb4:	and    edx,DWORD PTR [eax]
  435fb6:	or     BYTE PTR [edx+0x6e],ah
  435fb9:	push   0xcc53008b
  435fbe:	mov    DWORD PTR [esp+eax*1],eax
  435fc1:	mov    esi,0xdd554042
  435fc6:	clc    
  435fc7:	sbb    ebx,0xffffffd6
  435fca:	add    DWORD PTR [esi+eiz*8-0x57],esi
  435fce:	inc    esp
  435fcf:	hlt    
  435fd0:	adc    eax,0xa972f4ed
  435fd5:	mov    BYTE PTR [edx+0x10],0xde
  435fd9:	xor    al,0x1
  435fdb:	add    BYTE PTR [edx+0x24d7e25],al
  435fe1:	stos   DWORD PTR es:[edi],eax
  435fe2:	push   esp
  435fe3:	clc    
  435fe4:	adc    eax,0xcc5118f7
  435fe9:	loop   0x435fd3
  435feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435fec:	mov    ds:0xe38b0132,al
  435ff1:	mov    edx,0xa9864780
  435ff6:	inc    esp
  435ff7:	hlt    
  435ff8:	ja     0x435fe5
  435ffa:	hlt    
  435ffb:	add    eax,DWORD PTR [eax]
  435ffd:	add    BYTE PTR [esi],bl
  435fff:	mov    bl,0x7c
  436001:	in     al,0x8e
  436003:	scas   eax,DWORD PTR es:[edi]
  436004:	push   esp
  436005:	clc    
  436006:	pop    ecx
  436007:	stos   DWORD PTR es:[edi],eax
  436008:	inc    esp
  436009:	or     eax,0xede325e
  43600e:	in     eax,0xf5
  436010:	and    BYTE PTR [ebp-0x38fdb972],al
  436016:	push   ds
  436017:	mov    eax,?
  436019:	call   FWORD PTR [esi+0x32]
  43601c:	ret    0x4607
  43601f:	xor    al,BYTE PTR [ecx]
  436021:	add    BYTE PTR [ecx+0x1c0010f5],al
  436027:	xor    al,BYTE PTR [ecx]
  436029:	je     0x436046
  43602b:	mov    bl,0xfb
  43602d:	adc    BYTE PTR ds:0xe9b8b90,bh
  436033:	xor    al,BYTE PTR [ecx]
  436035:	add    BYTE PTR [edi],dh
  436037:	or     al,BYTE PTR [ecx-0x4]
  43603a:	aaa    
  43603b:	pop    esi
  43603c:	or     BYTE PTR [edi],0x32
  43603f:	mov    eax,DWORD PTR [ecx+ecx*1]
  436042:	ror    DWORD PTR [ecx+0x12f34bb7],0xc6
  436049:	int    0xd7
  43604b:	dec    ecx
  43604c:	test   dl,al
  43604e:	das    
  43604f:	add    al,0x59
  436051:	clc    
  436052:	xor    al,0xf3
  436054:	cmp    dl,0x27
  436057:	pop    ecx
  436058:	(bad)  
  436059:	or     DWORD PTR [eax-0x21cae362],eax
  43605f:	xchg   BYTE PTR [ecx-0x43ffff0b],cl
  436065:	ds mov bh,0x2d
  436068:	mov    WORD PTR [edx-0x52],?
  43606b:	test   eax,esi
  43606d:	sub    cl,BYTE PTR [edx-0x7482d440]
  436073:	dec    ecx
  436074:	inc    edi
  436075:	dec    esp
  436076:	mov    ch,0x7
  436078:	mov    ah,0x2c
  43607a:	std    
  43607b:	xchg   bh,bh
  43607d:	mov    esi,0x4e57518b
  436082:	inc    edx
  436083:	xor    BYTE PTR [esi],dh
  436085:	mov    eax,DWORD PTR [eax+eax*1]
  436088:	fisttp QWORD PTR [edx-0x7522ffd6]
  43608e:	lods   al,BYTE PTR ds:[esi]
  43608f:	add    cl,BYTE PTR [ebx-0x75]
  436092:	add    al,0x85
  436094:	jmp    0x3e14:0x4f538982
  43609b:	sbb    BYTE PTR [esi+0x38c0ed4c],bh
  4360a1:	add    BYTE PTR [eax+eax*1],0x37
  4360a5:	fs push ecx
  4360a7:	or     al,0x37
  4360a9:	mov    eax,DWORD PTR [ecx-0x1cc5a806]
  4360af:	jl     0x436053
  4360b1:	xor    al,0x9e
  4360b3:	add    al,0x2e
  4360b5:	mov    eax,0x34371083
  4360ba:	fbstp  TBYTE PTR [ebp+0x9]
  4360bd:	jle    0x4360d4
  4360bf:	sar    BYTE PTR [edx+0x39a49b6d],0xb1
  4360c6:	mov    al,ds:0xb800000c
  4360cb:	out    0x71,al
  4360cd:	add    DWORD PTR [edi],ecx
  4360cf:	mov    cl,0x68
  4360d1:	in     al,0x52
  4360d3:	pop    esi
  4360d4:	jae    0x43609f
  4360d6:	mov    dl,0x70
  4360d8:	sub    DWORD PTR [edi+eiz*1-0x31fbb64d],esp
  4360df:	xor    ebp,edx
  4360e1:	add    bh,ch
  4360e3:	test   al,0x2b
  4360e5:	ret    
  4360e6:	iret   
  4360e7:	sub    ebp,DWORD PTR [ecx]
  4360e9:	mov    ds:0xbcea573f,eax
  4360ee:	aaa    
  4360ef:	xor    al,0xeb
  4360f1:	ret    0xeeba
  4360f4:	icebp  
  4360f5:	ret    0x1b92
  4360f8:	jmp    0x4360ba
  4360fa:	mov    eax,0x488af1f4
  4360ff:	inc    esp
  436100:	fcmovnu st,st(0)
  436102:	push   edx
  436103:	xchg   BYTE PTR [edi],ah
  436105:	add    eax,0x3ea3431
  43610a:	repnz cld 
  43610c:	fld    QWORD PTR [ebx]
  43610e:	ds mov eax,0x343708e8
  436114:	push   esp
  436115:	add    al,0xd1
  436117:	xor    edx,DWORD PTR [esp+eax*1+0x5f]
  43611b:	out    dx,al
  43611c:	fild   WORD PTR [ebx]
  43611e:	aaa    
  43611f:	test   eax,0xf4b80c2d
  436124:	loope  0x4360b0
  436126:	stc    
  436127:	inc    ebx
  436128:	jae    0x436180
  43612a:	das    
  43612b:	je     0x43612e
  43612d:	out    dx,al
  43612e:	add    BYTE PTR [eax],al
  436130:	aas    
  436131:	xor    al,0x1
  436133:	jmp    0xec4860ef
  436138:	sub    esi,DWORD PTR [eax+0x3434ed15]
  43613e:	test   BYTE PTR [edi+eiz*1],dl
  436141:	or     BYTE PTR ss:[ebp+0x26],ah
  436145:	sub    BYTE PTR [ecx],al
  436147:	jmp    0xe9405f03
  43614c:	sub    BYTE PTR [eax],ah
  43614e:	mov    WORD PTR [edi-0x65ffa449],fs
  436154:	(bad)  
  436155:	push   ecx
  436156:	repnz xor esp,DWORD PTR cs:[edx]
  43615a:	add    ecx,ebp
  43615c:	xor    al,0x93
  43615e:	fwait
  43615f:	loop   0x436195
  436161:	xor    al,0x84
  436163:	dec    edi
  436164:	aaa    
  436165:	or     DWORD PTR [ebx],ebp
  436167:	push   edx
  436168:	xor    ch,BYTE PTR [edi+0x3434e99c]
  43616e:	add    DWORD PTR [edx+0x69],ebp
  436171:	js     0x436174
  436173:	fidivr WORD PTR [eax+0x34e90c5b]
  436179:	sub    eax,0xefd3ebaf
  43617e:	hlt    
  43617f:	bound  edi,QWORD PTR [edx+0x69]
  436182:	loope  0x43612f
  436184:	mov    bh,0x76
  436186:	or     DWORD PTR [eax-0x1f],esi
  436189:	jnp    0x43618f
  43618b:	and    DWORD PTR [edi-0x7584fb82],esi
  436191:	mov    cl,0xcc
  436193:	sbb    BYTE PTR [eax],al
  436195:	add    BYTE PTR [edi-0x6d953b4f],cl
  43619b:	jnp    0x436120
  43619d:	leave  
  43619e:	cmp    BYTE PTR [ebx+0x7cb1ed48],dh
  4361a4:	add    al,0x56
  4361a6:	in     al,0x7c
  4361a8:	sbb    eax,0x30afcb00
  4361ad:	inc    ebx
  4361ae:	push   ds
  4361af:	jo     0x43618f
  4361b1:	add    bl,cl
  4361b3:	ss or  al,0x0
  4361b6:	push   cs
  4361b7:	aaa    
  4361b8:	jbe    0x4361a8
  4361ba:	or     eax,0x1e0b3ac8
  4361bf:	aaa    
  4361c0:	jle    0x436189
  4361c2:	mov    dh,0xaa
  4361c4:	repnz push DWORD PTR [ecx+0x80c7cb2]
  4361cb:	jbe    0x4361cf
  4361cd:	adc    ebx,esi
  4361cf:	add    DWORD PTR ss:[ebp-0xe],esi
  4361d3:	outs   dx,DWORD PTR ds:[esi]
  4361d4:	fiadd  WORD PTR [edx]
  4361d6:	dec    ebp
  4361d7:	into   
  4361d8:	imul   al
  4361da:	shr    DWORD PTR [ecx],1
  4361dc:	add    DWORD PTR [eax],eax
  4361de:	pop    ds
  4361df:	retf   
  4361e0:	test   esi,0x126d9
  4361e6:	into   
  4361e7:	mov    cl,0xeb
  4361e9:	add    esp,DWORD PTR [edi+0x20]
  4361ec:	(bad)  
  4361ed:	call   FWORD PTR [esi+0x590844a9]
  4361f3:	lock sbb BYTE PTR [ebx-0x38ff0916],dl
  4361fa:	add    BYTE PTR [eax],al
  4361fc:	mov    DWORD PTR [ebx],ebx
  4361fe:	add    DWORD PTR [eax],eax
  436200:	sahf   
  436201:	outs   dx,DWORD PTR ds:[esi]
  436202:	fiadd  WORD PTR [edx]
  436204:	sbb    eax,0x2be8f6ce
  436209:	sub    al,BYTE PTR [ecx]
  43620b:	add    BYTE PTR ds:0x59e1766e,al
  436211:	mov    edi,esp
  436213:	shl    DWORD PTR ds:0xdd20fbb3,cl
  436219:	nop
  43621a:	jne    0x436299
  43621c:	push   edx
  43621d:	or     al,BYTE PTR ss:[ebp+edx*1+0x3700012b]
  436225:	xchg   edx,eax
  436226:	jb     0x436226
  436228:	inc    ecx
  436229:	pop    ss
  43622a:	mov    ecx,0xa49d6985
  43622f:	ds mov ah,0xd1
  436232:	or     al,0x87
  436234:	add    bl,0xff
  436237:	xlat   BYTE PTR ds:[ebx]
  436238:	mov    ah,0xc9
  43623a:	in     al,0x6d
  43623c:	stc    
  43623d:	push   es
  43623e:	mov    DWORD PTR [ebp+0x23cda2f4],0x4a308
  436248:	div    BYTE PTR [esp+edx*1-0x7e7d09cb]
  43624f:	adc    eax,0x2dbafaed
  436254:	or     al,0xbf
  436256:	mov    dl,0x7d
  436258:	bound  edx,QWORD PTR [edi+0x2]
  43625b:	xchg   DWORD PTR [eax-0x35],esi
  43625e:	ret    
  43625f:	add    DWORD PTR [eax],eax
  436261:	add    BYTE PTR [ecx-0x75],al
  436264:	add    al,0x0
  436266:	cmp    BYTE PTR [edi],al
  436268:	mov    dl,0x6
  43626a:	aaa    
  43626b:	mov    eax,ebx
  43626d:	add    DWORD PTR [eax],ebp
  43626f:	mov    eax,DWORD PTR [eax+eax*1]
  436272:	mov    esp,0xf28744d2
  436277:	ss add eax,0x25c0f30
  43627e:	aaa    
  43627f:	mov    eax,DWORD PTR [edi-0x42696cb5]
  436285:	jb     0x4362b9
  436287:	push   ss
  436288:	mov    ebp,0x871ef287
  43628d:	dec    ebx
  43628e:	xchg   DWORD PTR [esi-0x43],esi
  436291:	jb     0x4362cd
  436293:	push   es
  436294:	mov    ebp,0x7876f287
  436299:	shl    BYTE PTR [eax],0xf
  43629c:	mov    esi,0xea343706
  4362a1:	mov    esp,?
  4362a3:	jg     0x436318
  4362a5:	dec    edi
  4362a6:	dec    edi
  4362a7:	lods   eax,DWORD PTR ds:[esi]
  4362a8:	and    eax,0x39e5f0ac
  4362ad:	lods   al,BYTE PTR ds:[esi]
  4362ae:	punpcklwd mm7,DWORD PTR [edi-0x52114547]
  4362b5:	add    esi,DWORD PTR [esp+edi*2+0x1]
  4362b9:	aas    
  4362ba:	and    ecx,DWORD PTR [ebx+0x1d]
  4362bd:	mov    ah,0x18
  4362bf:	lock xchg ecx,eax
  4362c1:	lea    esp,[esp+edi*2+0x6b]
  4362c5:	rol    BYTE PTR [eax],0x0
  4362c8:	cmp    ecx,DWORD PTR [ebx+0x27]
  4362cb:	inc    esp
  4362cc:	sbb    BYTE PTR [edx-0x1c],al
  4362cf:	add    esi,DWORD PTR [edi]
  4362d1:	mov    ch,0x80
  4362d3:	or     ah,BYTE PTR [edx+0x52]
  4362d6:	and    BYTE PTR gs:[ebx],dl
  4362d9:	xor    al,0x6b
  4362db:	aaa    
  4362dc:	jecxz  0x436311
  4362de:	xlat   BYTE PTR ds:[ebx]
  4362df:	jg     0x436339
  4362e1:	cs jmp 0x7cb8:0xecc23e03
  4362e9:	js     0x43634e
  4362eb:	retf   0x93f2
  4362ee:	lods   al,BYTE PTR ds:[esi]
  4362ef:	test   ch,dh
  4362f1:	sub    esi,DWORD PTR [ecx+0x4f]
  4362f4:	scas   eax,DWORD PTR es:[edi]
  4362f5:	xor    al,0x22
  4362f7:	test   DWORD PTR [ebp-0x452643d7],ebp
  4362fd:	ins    BYTE PTR es:[edi],dx
  4362fe:	imul   esp,DWORD PTR [ebx-0xec8cc2],0x11
  436305:	jae    0x4362f0
  436307:	add    dh,BYTE PTR [edi]
  436309:	xor    al,0x63
  43630b:	lds    edi,FWORD PTR [eax-0x6d3d7618]
  436311:	cs jae 0x4362e1
  436314:	repnz xchg ebx,eax
  436316:	xlat   BYTE PTR ds:[ebx]
  436317:	test   BYTE PTR [eax-0x4456fed8],cl
  43631d:	mov    eax,0x2f8a27fd
  436322:	test   bh,dl
  436324:	ds stc 
  436326:	ja     0x436371
  436328:	sub    eax,0xe9f879
  43632d:	add    BYTE PTR [ebp-0x109fa30e],ch
  436333:	xlat   BYTE PTR ds:[ebx]
  436334:	pop    es
  436335:	outs   dx,BYTE PTR ds:[esi]
  436336:	sub    BYTE PTR [edi-0x8],bh
  436339:	mov    esi,0xe6177cb3
  43633e:	mov    bh,0x49
  436340:	cli    
  436341:	scas   al,BYTE PTR es:[edi]
  436342:	fbstp  TBYTE PTR [ebp+0x40]
  436345:	adc    DWORD PTR [ebx],edi
  436347:	xor    al,0x1
  436349:	jmp    0xe9559945
  43634e:	xor    al,0x34
  436350:	mov    WORD PTR [esi],ds
  436352:	dec    ebx
  436353:	inc    ecx
  436354:	dec    eax
  436355:	and    eax,0xeaebe62a
  43635a:	mov    cl,0xef
  43635c:	add    BYTE PTR [edx-0x62],ch
  43635f:	jns    0x4363d4
  436361:	retf   
  436362:	mov    bl,0xfb
  436364:	hlt    
  436365:	jmp    0xf13913a9
  43636a:	xor    al,0x34
  43636c:	or     BYTE PTR [edi+0x4d467d3a],bl
  436372:	stos   DWORD PTR es:[edi],eax
  436373:	push   0xffffffd4
  436375:	dec    ecx
  436376:	cli    
  436377:	clc    
  436378:	mov    esi,0xf8e3bdf1
  43637d:	jmp    0x5a62:0xeaf6f97c
  436384:	mov    WORD PTR [esi-0x1a4fd2a4],gs
  43638a:	dec    ecx
  43638b:	test   BYTE PTR [ecx],ah
  43638d:	test   eax,0x6accb134
  436392:	add    BYTE PTR [eax],al
  436394:	aad    0x35
  436396:	pop    edi
  436397:	add    bh,ah
  436399:	out    dx,al
  43639a:	inc    ecx
  43639b:	jo     0x436406
  43639d:	aaa    
  43639e:	imul   ecx,DWORD PTR [ebx-0x1447b467],0x3ebb04d
  4363a8:	adc    eax,0xad7254ef
  4363ad:	clc    
  4363ae:	add    eax,0x30334e00
  4363b3:	inc    edi
  4363b4:	test   BYTE PTR [edx+0x16],0xeb
  4363b8:	and    DWORD PTR [ebp+ebx*4+0x1331e24],ebp
  4363bf:	add    BYTE PTR [ebp-0x5ef09719],dl
  4363c5:	sub    al,0x54
  4363c7:	lock (bad) 
  4363c9:	repnz add BYTE PTR [ebx],dh
  4363cc:	int3   
  4363cd:	adc    eax,0x40595480
  4363d2:	cli    
  4363d3:	inc    edi
  4363d4:	ss jns 0x436418
  4363d7:	push   0x878c98ec
  4363dc:	scas   al,BYTE PTR es:[edi]
  4363dd:	xor    eax,DWORD PTR [ecx]
  4363df:	add    BYTE PTR [ebx-0x11],bl
  4363e2:	fs mov edi,ecx
  4363e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4363e6:	inc    edx
  4363e7:	dec    esp
  4363e8:	dec    ebx
  4363e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4363ea:	icebp  
  4363eb:	add    bl,dh
  4363ed:	xor    al,BYTE PTR [edi-0x73]
  4363f0:	xchg   ecx,eax
  4363f1:	out    0x50,al
  4363f3:	push   ecx
  4363f4:	adc    DWORD PTR [eax],esi
  4363f6:	add    al,BYTE PTR [eax]
  4363f8:	add    BYTE PTR [eax],al
  4363fa:	sahf   
  4363fb:	xor    bl,BYTE PTR [edi+0x13]
  4363fe:	sbb    esi,DWORD PTR [edi]
  436400:	jno    0x436452
  436402:	je     0x436436
  436404:	jmp    0x17603b2
  436409:	mov    edx,ebx
  43640b:	mov    edx,0xa936c476
  436410:	inc    esp
  436411:	fdiv   DWORD PTR [edi]
  436413:	or     BYTE PTR [ebp+0x52fb209],bh
  436419:	add    BYTE PTR [edi],dh
  43641b:	add    al,0x38
  43641d:	push   0x128d70
  436422:	aaa    
  436423:	lea    ecx,[ebx+0x3789d341]
  436429:	pusha  
  43642a:	push   cs
  43642b:	inc    esi
  43642c:	and    eax,0x329b409
  436431:	add    BYTE PTR [edi],dh
  436433:	adc    bh,BYTE PTR [edi]
  436435:	push   esp
  436436:	jg     0x4363c3
  436438:	add    al,0x0
  43643a:	aaa    
  43643b:	call   0x1d45:0x477885a4
  436442:	hlt    
  436443:	adc    bh,al
  436445:	jle    0x4363f3
  436447:	sar    DWORD PTR [ebp+0x667e3fe7],cl
  43644d:	(bad)  
  43644e:	mov    esi,0xf135b150
  436453:	adc    eax,0xa77a7cf0
  436458:	add    al,0x9
  43645a:	mov    ebx,0x57e
  43645f:	add    BYTE PTR [edi],dh
  436461:	xchg   BYTE PTR [esi-0x2],ah
  436464:	loope  0x4364b6
  436466:	mov    ecx,0xa49ae985
  43646b:	test   DWORD PTR [eax-0xe82bd49],eax
  436471:	add    DWORD PTR [ebx],0xffffffd8
  436474:	jg     0x436402
  436476:	add    al,0x0
  436478:	aaa    
  436479:	cmp    ah,BYTE PTR [ebp+eax*4+0x5385bf00]
  436480:	scas   eax,DWORD PTR es:[edi]
  436481:	ret    
  436482:	jecxz  0x436440
  436484:	lods   al,BYTE PTR ds:[esi]
  436485:	xchg   DWORD PTR [ebp-0x7b],edi
  436488:	outs   dx,DWORD PTR ds:[esi]
  436489:	dec    esp
  43648a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43648b:	or     BYTE PTR [eax+0x34],al
  43648e:	pop    eax
  43648f:	int3   
  436490:	mov    al,0xef
  436492:	or     eax,0x28fd6efa
  436497:	mov    ch,BYTE PTR [edi+0x73]
  43649a:	add    DWORD PTR [ebx],edx
  43649c:	bnd jp 0x436479
  43649f:	xor    al,BYTE PTR [esi]
  4364a1:	test   eax,0x2c58c432
  4364a6:	fild   QWORD PTR [ebp+0x70]
  4364a9:	cmp    ecx,edi
  4364ab:	xor    DWORD PTR [edi],eax
  4364ad:	mov    edi,esp
  4364af:	xchg   BYTE PTR [ebx+0x3703ea50],dl
  4364b5:	xor    al,0x6b
  4364b7:	aaa    
  4364b8:	cmp    esi,DWORD PTR [edi+edx*8]
  4364bb:	jg     0x43649d
  4364bd:	sub    ebp,edx
  4364bf:	add    edi,DWORD PTR [esi]
  4364c1:	mov    esi,0xb4ec
  4364c6:	ins    BYTE PTR es:[edi],dx
  4364c7:	js     0x43652c
  4364c9:	(bad)  
  4364ca:	jmp    0x712b:0xf5812c93
  4364d1:	dec    edi
  4364d2:	rdtsc  
  4364d4:	ret    0x7489
  4364d7:	sbb    bh,0x6d
  4364da:	jmp    0x436514
  4364dc:	cdq    
  4364dd:	xor    cl,BYTE PTR [eax]
  4364df:	and    eax,0xecb2c838
  4364e4:	adc    ecx,edx
  4364e6:	fimul  DWORD PTR [eax+0x79]
  4364e9:	push   ds
  4364ea:	mov    dl,0xe6
  4364ec:	outs   dx,DWORD PTR ds:[esi]
  4364ed:	push   ds
  4364ee:	mov    eax,0xce33a6e7
  4364f3:	in     al,dx
  4364f4:	shr    DWORD PTR [edx+0x3ea3371],1
  4364fa:	push   ebp
  4364fb:	test   eax,0xb115ad95
  436500:	inc    ecx
  436501:	adc    al,0x24
  436503:	or     al,0xe7
  436505:	ins    DWORD PTR es:[edi],dx
  436506:	jae    0x4364ae
  436508:	add    DWORD PTR [eax+0xd46ad36],ebp
  43650e:	mov    es,WORD PTR [esp+esi*2+0x1dcfb1d7]
  436515:	jmp    0x6a44994e
  43651a:	inc    eax
  43651b:	js     0x43651e
  43651d:	fdivrp st(0),st
  43651f:	in     al,0x8
  436521:	jmp    0xebf2905a
  436526:	stos   DWORD PTR es:[edi],eax
  436527:	call   0x43c820
  43652c:	jno    0x436594
  43652e:	loope  0x436592
  436530:	clc    
  436531:	push   edi
  436532:	inc    ebx
  436533:	push   0xffffff8a
  436535:	sub    eax,DWORD PTR [ecx+eax*8]
  436538:	mov    ecx,0xe9600334
  43653d:	jnp    0x43657b
  43653f:	fldenv [esi-0x75]
  436542:	mov    WORD PTR [esi],gs
  436544:	pop    ebx
  436545:	sub    esp,0xc1b7e412
  43654b:	out    0x98,al
  43654d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43654e:	add    cl,ch
  436550:	xor    al,0x3d
  436552:	mov    al,0x35
  436554:	dec    edx
  436555:	fimul  WORD PTR [ebx+0x454b7aa]
  43655b:	push   0xfffffff4
  43655d:	jno    0x436520
  43655f:	xor    BYTE PTR [esi],0xbb
  436562:	inc    esi
  436563:	lea    edi,[ebp-0x65951309]
  436569:	jb     0x436554
  43656b:	inc    edx
  43656c:	xor    al,0x34
  43656e:	add    DWORD PTR [edi],eax
  436570:	mov    dh,0x6b
  436572:	adc    dh,dh
  436574:	pop    edx
  436575:	or     BYTE PTR [edx+0x46e7e8ac],0x64
  43657c:	jne    0x4365ef
  43657e:	cmp    ebx,DWORD PTR [ecx+0x67]
  436581:	and    al,0xec
  436583:	add    BYTE PTR [ecx-0x71db6246],bl
  436589:	aaa    
  43658a:	add    DWORD PTR [eax],eax
  43658c:	or     eax,0xf52a
  436591:	add    BYTE PTR [ecx-0xd],dh
  436594:	xlat   BYTE PTR ds:[ebx]
  436595:	pop    es
  436596:	sahf   
  436597:	aaa    
  436598:	or     dh,BYTE PTR [esi-0x3b35774]
  43659e:	adc    eax,0xd5e0c679
  4365a3:	stc    
  4365a4:	aam    0x42
  4365a6:	fnsave [eax-0x45e9fcf7]
  4365ac:	cmp    BYTE PTR [ebx],al
  4365ae:	xlat   BYTE PTR ds:[ebx]
  4365af:	add    ecx,edi
  4365b1:	cmp    ecx,DWORD PTR [esi+0x24]
  4365b4:	rcl    bl,1
  4365b6:	gs repz mov ch,0x83
  4365ba:	outs   dx,BYTE PTR ds:[esi]
  4365bb:	aas    
  4365bc:	jbe    0x43657e
  4365be:	dec    ebp
  4365bf:	lock inc ebx
  4365c1:	hlt    
  4365c2:	(bad)  
  4365c4:	div    BYTE PTR [edi-0x5590d]
  4365ca:	add    eax,0x9418bfb
  4365cf:	(bad)  
  4365d0:	call   0x7cfe9f48
  4365d5:	cld    
  4365d6:	push   ds
  4365d7:	ss jge 0x436576
  4365da:	sbb    DWORD PTR [edi],esi
  4365dc:	add    DWORD PTR [edi],ecx
  4365de:	pop    eax
  4365df:	cmp    bh,dl
  4365e1:	dec    ebp
  4365e2:	ret    0xcaf2
  4365e5:	sar    DWORD PTR [esi+0xcdc4bf2],cl
  4365eb:	mov    ebx,0x7ecd08c3
  4365f0:	mov    WORD PTR [ecx-0x27],es
  4365f3:	out    dx,eax
  4365f4:	push   ebx
  4365f5:	clc    
  4365f6:	add    BYTE PTR [eax],al
  4365f8:	adc    eax,0xfdd967a8
  4365fd:	sar    BYTE PTR [esi-0x3d],cl
  436600:	aaa    
  436601:	ficomp WORD PTR [ecx+edi*2-0x7907e34c]
  436608:	repnz xor BYTE PTR [esi-0x594ac71b],bh
  43660f:	stc    
  436610:	cwde   
  436611:	sub    eax,ebx
  436613:	mov    esi,0x43782d34
  436618:	and    DWORD PTR [ecx],0x4a
  43661b:	in     al,0x37
  43661d:	pop    ebp
  43661e:	add    al,0x0
  436620:	lods   al,BYTE PTR ds:[esi]
  436621:	cdq    
  436622:	sbb    al,0xfd
  436624:	js     0x4365fb
  436626:	dec    ebx
  436627:	fs xor al,0xa2
  43662a:	and    al,0x35
  43662c:	outs   dx,DWORD PTR ds:[esi]
  43662d:	popa   
  43662e:	mov    ecx,edx
  436630:	xor    eax,0xd27d045d
  436635:	push   0xe62b7404
  43663a:	dec    eax
  43663b:	in     al,0x4c
  43663d:	pop    ebp
  43663e:	add    DWORD PTR [edi+0x37],0x306842d6
  436645:	push   ecx
  436646:	mov    ecx,0x441fbe62
  43664b:	jo     0x43666d
  43664d:	sbb    edx,DWORD PTR ds:0x4af9a7d
  436653:	jae    0x436678
  436655:	xlat   BYTE PTR ds:[ebx]
  436656:	dec    edx
  436657:	fs xor al,0x22
  43665a:	sbb    eax,0x78000037
  43665f:	inc    ebx
  436660:	add    al,0x7e
  436662:	fcmove st,st(0)
  436664:	mov    bl,0xf9
  436666:	mov    ah,0x82
  436668:	adc    DWORD PTR [ecx],ecx
  43666a:	mov    bl,0x2c
  43666c:	or     al,BYTE PTR [eax]
  43666e:	aaa    
  43666f:	cmp    DWORD PTR [eax+0x45d67b9],eax
  436675:	add    BYTE PTR [edi],dh
  436677:	xchg   edx,eax
  436678:	or     BYTE PTR [ebp+0x3ea3431],0xac
  43667f:	mov    ecx,0x3437091a
  436684:	pop    ebp
  436685:	inc    edx
  436686:	and    edi,DWORD PTR [ebx-0x98317]
  43668c:	ins    BYTE PTR es:[edi],dx
  43668d:	call   0xbce9:0x3ea36a7
  436694:	xchg   edi,eax
  436695:	and    edi,DWORD PTR [ecx+edi*8+0x78f8538d]
  43669c:	jmp    0xac55:0xea7180fc
  4366a3:	stc    
  4366a4:	cdq    
  4366a5:	push   ebx
  4366a6:	fnstenv [edx]
  4366a8:	add    bl,BYTE PTR [edx]
  4366aa:	push   ds
  4366ab:	xor    al,0xea
  4366ad:	xchg   BYTE PTR [ebx+0x4c],bh
  4366b0:	jno    0x4366fa
  4366b2:	jg     0x43666b
  4366b4:	sub    al,BYTE PTR [edx]
  4366b6:	mov    ah,0xef
  4366b8:	in     al,dx
  4366b9:	mov    cl,0x4e
  4366bb:	mov    ebp,0x1ac2037
  4366c0:	inc    esi
  4366c1:	jnp    0x4366c3
  4366c3:	add    dh,ah
  4366c5:	add    ebx,DWORD PTR [ebp-0x67]
  4366c8:	daa    
  4366c9:	ss jmp 0x874c:0x27bf7903
  4366d1:	add    esi,DWORD PTR [ebx+0x41]
  4366d4:	xchg   edi,eax
  4366d5:	jns    0x4366c1
  4366d7:	or     DWORD PTR [edi],esi
  4366d9:	xor    al,0xea
  4366db:	jl     0x436753
  4366dd:	fdivr  DWORD PTR [ecx]
  4366df:	jg     0x43674c
  4366e1:	add    DWORD PTR [edx],ebx
  4366e3:	push   esi
  4366e4:	xchg   ecx,eax
  4366e5:	ss or  ch,0x1d
  4366e9:	xor    al,0xea
  4366eb:	test   bl,dh
  4366ed:	dec    ebx
  4366ee:	jno    0x436737
  4366f0:	push   DWORD PTR [esi-0x704bfe56]
  4366f6:	add    DWORD PTR [ebp-0x7a],edi
  4366f9:	push   0xffffff84
  4366fb:	in     al,dx
  4366fc:	enter  0x8c32,0xbc
  436700:	mov    WORD PTR [edx+0x0],?
  436703:	cli    
  436704:	xor    al,0x34
  436706:	add    esi,esp
  436708:	mov    eax,0x34e8fee4
  43670d:	jae    0x43670f
  43670f:	fnsave [esp+esi*1]
  436712:	add    DWORD PTR [edx+0x48],ebp
  436715:	jo     0x436716
  436717:	mov    edx,0x3975f156
  43671c:	xor    DWORD PTR [ecx-0x8],esi
  43671f:	jmp    0xa4cf3c6e
  436724:	jl     0x4366dd
  436726:	inc    esi
  436727:	add    DWORD PTR [eax],eax
  436729:	add    dl,dh
  43672b:	add    al,0xf1
  43672d:	pusha  
  43672e:	sub    eax,DWORD PTR [eax-0x74]
  436731:	mov    ah,0x8c
  436733:	mov    eax,0x54187209
  436738:	mov    bl,BYTE PTR [ecx-0x12b148dc]
  43673e:	in     eax,0xb8
  436740:	push   ecx
  436741:	in     eax,dx
  436742:	in     al,0xb8
  436744:	pop    eax
  436745:	and    DWORD PTR [edx+eiz*8+0x1573c134],edi
  43674c:	add    ecx,ebp
  43674e:	stos   DWORD PTR es:[edi],eax
  43674f:	repz or BYTE PTR [edx-0x7c],dh
  436753:	inc    eax
  436754:	mov    WORD PTR [ecx],?
  436756:	inc    ebx
  436757:	mov    ecx,0xe593f158
  43675c:	xor    al,0x60
  43675e:	popa   
  43675f:	pop    esp
  436760:	mov    ecx,?
  436762:	xor    esp,0xfffffffc
  436765:	imul   esi,eax,0xf3d6843c
  43676b:	mov    dh,0x46
  43676d:	cdq    
  43676e:	ins    DWORD PTR es:[edi],dx
  43676f:	add    edi,ecx
  436771:	add    BYTE PTR [edi-0xa],ah
  436774:	hlt    
  436775:	rcpps  xmm1,XMMWORD PTR [edi]
  436778:	add    al,0x0
  43677a:	fidivr WORD PTR [edx+eax*4-0x3c]
  43677e:	in     eax,0x33
  436780:	add    edi,edi
  436782:	pop    ecx
  436783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436784:	cli    
  436785:	jmp    0x449dc5
  43678a:	adc    eax,0xb84cf4
  43678f:	add    BYTE PTR [edi+0x3d000133],bl
  436795:	xchg   ebx,eax
  436796:	ret    0x5287
  436799:	inc    eax
  43679a:	add    DWORD PTR [eax],eax
  43679c:	sahf   
  43679d:	xor    eax,DWORD PTR [ecx]
  43679f:	add    dh,dl
  4367a1:	pop    eax
  4367a2:	mov    ch,0x8b
  4367a4:	inc    esi
  4367a5:	lock inc ecx
  4367a7:	dec    esp
  4367a8:	add    eax,0x168b8937
  4367ad:	jb     0x43678f
  4367af:	or     BYTE PTR [ecx-0x6c764013],cl
  4367b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4367b6:	cs into 
  4367b8:	loopne 0x4367ab
  4367ba:	jge    0x4367bb
  4367bc:	fstp   QWORD PTR ds:0xb76900f5
  4367c2:	mov    eax,0xa334e05
  4367c7:	mov    dh,0x4c
  4367c9:	sahf   
  4367ca:	dec    esp
  4367cb:	cld    
  4367cc:	xchg   ebp,eax
  4367cd:	scas   al,BYTE PTR es:[edi]
  4367ce:	(bad)  
  4367cf:	loopne 0x436766
  4367d1:	das    
  4367d2:	dec    ebp
  4367d3:	inc    edx
  4367d4:	lea    esi,[esi+0x9]
  4367d7:	add    edx,esi
  4367d9:	fcomip st,st(7)
  4367db:	call   FWORD PTR [esi]
  4367dd:	xor    eax,esi
  4367df:	loopne 0x436776
  4367e1:	das    
  4367e2:	inc    ebp
  4367e3:	mov    DWORD PTR [ebx-0x60],eax
  4367e6:	dec    ecx
  4367e7:	and    ecx,ebp
  4367e9:	jmp    0xbfb4:0xd23780fc
  4367f0:	ficom  WORD PTR [edi+esi*8-0x4f]
  4367f4:	add    BYTE PTR [eax],al
  4367f6:	out    dx,al
  4367f7:	jecxz  0x436842
  4367f9:	hlt    
  4367fa:	sbb    al,0x9f
  4367fc:	xor    BYTE PTR [edi-0x7c076345],bh
  436802:	neg    DWORD PTR [esp+eax*1+0x0]
  436806:	(bad)  
  436807:	or     al,0xf8
  436809:	cmp    BYTE PTR [edi+0x5c],0x4
  43680d:	add    BYTE PTR [esp+edx*1-0x2bc01842],bh
  436814:	inc    ecx
  436815:	aam    0x30
  436817:	out    dx,eax
  436818:	mov    ch,0x87
  43681a:	jmp    0x4159:0x7fb1f7f8
  436821:	in     al,0xbe
  436823:	xchg   edi,eax
  436824:	enter  0x36b8,0x5d
  436828:	add    al,0x0
  43682a:	fs cmp al,0x7c
  43682d:	dec    ebx
  43682e:	pop    ebx
  43682f:	xchg   esp,eax
  436830:	jecxz  0x4367ee
  436832:	test   BYTE PTR [esp+edi*2],dh
  436835:	dec    ebx
  436836:	imul   ebx,DWORD PTR [ebx],0xffffff96
  436839:	adc    BYTE PTR [esp+ebx*1],dh
  43683c:	jl     0x436806
  43683e:	mov    esp,0x3385389d
  436843:	aad    0xf7
  436845:	mov    cl,0xf2
  436847:	mov    al,0x75
  436849:	inc    ebx
  43684a:	inc    ebx
  43684b:	fwait
  43684c:	pushf  
  43684d:	or     BYTE PTR [eax-0x33],al
  436850:	(bad)  
  436851:	std    
  436852:	test   DWORD PTR [edx-0x41],0xfe828172
  436859:	mov    al,BYTE PTR [eax]
  43685b:	add    BYTE PTR [ebx+ebx*2-0x25c8fffc],bh
  436862:	xor    ah,bh
  436864:	aaa    
  436865:	mov    es,WORD PTR [eax-0x15cbc5e1]
  43686b:	add    ebp,DWORD PTR [esi]
  43686d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43686e:	in     al,dx
  43686f:	jp     0x43686e
  436871:	or     DWORD PTR [edx-0x786f8386],0xeaf2e340
  43687b:	retf   
  43687c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  43687e:	popf   
  43687f:	jl     0x4368f5
  436881:	pop    eax
  436882:	fbstp  TBYTE PTR [ebp-0x10]
  436885:	xor    DWORD PTR [edx-0x15923f95],esp
  43688b:	add    ebp,edx
  43688d:	push   esp
  43688e:	jae    0x4368d0
  436890:	fwait
  436891:	mov    cl,0x28
  436893:	sti    
  436894:	mov    cl,0x7
  436896:	push   edx
  436897:	cmp    eax,DWORD PTR [edx+0x71]
  43689a:	sbb    ebx,DWORD PTR [ebx-0x325a5ad2]
  4368a0:	xchg   edx,eax
  4368a1:	je     0x436906
  4368a3:	ds sti 
  4368a5:	mov    eax,0xf7b884de
  4368aa:	adc    eax,0xe73c8fc4
  4368af:	jne    0x436928
  4368b1:	xor    DWORD PTR [ebp-0x7089dd59],esp
  4368b7:	pop    ecx
  4368b8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4368ba:	lods   eax,DWORD PTR ds:[esi]
  4368bb:	shl    BYTE PTR [edx+0xd1edf7],1
  4368c1:	add    BYTE PTR [edx+0x19],bl
  4368c4:	stc    
  4368c5:	jnp    0x436885
  4368c7:	js     0x43689c
  4368c9:	add    esi,DWORD PTR [edi]
  4368cb:	mov    ecx,0x3c50c3b2
  4368d0:	out    0x75,eax
  4368d2:	clc    
  4368d3:	xor    bl,BYTE PTR [edi-0x38]
  4368d6:	inc    edx
  4368d7:	xor    al,0xea
  4368d9:	rcr    BYTE PTR [edx],1
  4368db:	sbb    DWORD PTR [ecx+0x73586c7b],edi
  4368e1:	mov    esp,0xd9015ad0
  4368e6:	(bad)  
  4368e7:	sti    
  4368e8:	inc    eax
  4368e9:	gs sti 
  4368eb:	loopne 0x4368f8
  4368ed:	scas   al,BYTE PTR es:[edi]
  4368ee:	xor    al,BYTE PTR [ebp+0x1]
  4368f1:	jmp    0xed7ebe2a
  4368f6:	xor    al,0x34
  4368f8:	test   eax,0xc04128c9
  4368fd:	outs   dx,BYTE PTR ds:[esi]
  4368fe:	out    dx,eax
  4368ff:	inc    esi
  436900:	add    ecx,ebp
  436902:	mov    ds:0xf276f86a,eax
  436907:	xor    cl,BYTE PTR [ecx+ebp*8]
  43690a:	xor    al,0x34
  43690c:	jmp    0xfb91:0x1342f08
  436913:	out    0x7,eax
  436915:	(bad)  
  436916:	lock cmp eax,eax
  436919:	test   eax,0xa96dbf2c
  43691e:	xor    al,0x55
  436920:	or     ebp,esp
  436922:	xor    al,0x34
  436924:	or     BYTE PTR [edi+0x0],bh
  436927:	add    bl,cl
  436929:	out    dx,al
  43692a:	loope  0x43690a
  43692c:	std    
  43692d:	cli    
  43692e:	dec    eax
  43692f:	xor    al,BYTE PTR cs:[ecx+0x1]
  436933:	jmp    0xa184206c
  436938:	mov    cl,0x73
  43693a:	ins    DWORD PTR es:[edi],dx
  43693b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43693c:	dec    edi
  43693d:	pop    esp
  43693e:	je     0x436910
  436940:	fst    DWORD PTR [edi+0x3434e91d]
  436946:	add    DWORD PTR [edx+0x18],ebp
  436949:	jo     0x43694c
  43694b:	fidivr WORD PTR [eax+0x34e8fd2c]
  436951:	cmp    ebp,DWORD PTR [edi-0xb001c15]
  436957:	(bad)  
  436958:	jmp    0x976:0xb62be179
  43695f:	add    BYTE PTR [edi-0x29fc06fe],ah
  436965:	pop    esp
  436966:	jno    0x4369b0
  436968:	dec    esp
  436969:	jp     0x4369e9
  43696b:	dec    edi
  43696c:	push   esi
  43696d:	fdiv   st,st(7)
  43696f:	dec    DWORD PTR [esi]
  436971:	cmp    dh,al
  436973:	loopne 0x43697a
  436975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436976:	dec    ecx
  436977:	and    ebx,DWORD PTR [ebp-0x62bfbdca]
  43697d:	int3   
  43697e:	clc    
  43697f:	mov    cs,WORD PTR [edx+0x4500013c]
  436985:	sub    BYTE PTR [ecx-0x77],al
  436988:	push   ecx
  436989:	scas   eax,DWORD PTR es:[edi]
  43698a:	push   cs
  43698b:	add    BYTE PTR [eax],al
  43698d:	add    dh,cl
  43698f:	jo     0x436993
  436991:	push   ss
  436992:	into   
  436993:	aaa    
  436994:	add    DWORD PTR [ebx+0x1b8ffe1],ecx
  43699a:	sahf   
  43699b:	aaa    
  43699c:	add    ebx,edx
  43699e:	out    dx,al
  43699f:	cs push ss
  4369a1:	ret    
  4369a2:	and    eax,0xae477eaf
  4369a7:	in     al,dx
  4369a8:	cld    
  4369a9:	xchg   DWORD PTR ds:0x96e9b8af,edx
  4369af:	push   0xf207c9b2
  4369b4:	in     al,dx
  4369b5:	cmp    esp,DWORD PTR [eax]
  4369b7:	and    DWORD PTR [ecx-0x70],eax
  4369ba:	fstp   QWORD PTR [ecx]
  4369bc:	cmc    
  4369bd:	add    BYTE PTR [ecx+0x4e03c8b3],al
  4369c3:	aaa    
  4369c4:	or     dh,BYTE PTR [esi-0x3b367a4]
  4369ca:	aad    0xa8
  4369cc:	(bad)  
  4369cd:	loopne 0x4369a4
  4369cf:	daa    
  4369d0:	pop    ecx
  4369d1:	inc    edx
  4369d2:	int    0x75
  4369d4:	or     DWORD PTR [ebx],eax
  4369d6:	not    bh
  4369d8:	idiv   edi
  4369da:	aaa    
  4369db:	pop    ebp
  4369dc:	add    al,0xcd
  4369de:	pop    ss
  4369df:	(bad)  
  4369e0:	cmp    edx,DWORD PTR [eax-0x52]
  4369e3:	inc    edi
  4369e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4369e5:	dec    eax
  4369e6:	push   esp
  4369e7:	sahf   
  4369e8:	js     0x4369ee
  4369ea:	mov    dh,0xd5
  4369ec:	mov    ah,0xbf
  4369ee:	push   cs
  4369ef:	push   ebp
  4369f0:	sti    
  4369f1:	mov    cl,0x0
  4369f3:	add    dh,ch
  4369f5:	jecxz  0x436a38
  4369f7:	hlt    
  4369f8:	sub    al,0x9b
  4369fa:	xor    al,0xbf
  4369fc:	lahf   
  4369fd:	int3   
  4369fe:	cld    
  4369ff:	and    BYTE PTR [edi-0x53fffba4],0xa4
  436a06:	mov    esi,0x39e43fe7
  436a0b:	aam    0x38
  436a0d:	sub    esi,DWORD PTR [esi-0x34e8d79]
  436a13:	mov    cl,0xef
  436a15:	pop    ebp
  436a16:	cmp    esp,esp
  436a18:	mov    esi,0x36b8c08f
  436a1d:	pop    ebp
  436a1e:	add    al,0x0
  436a20:	test   ah,bh
  436a22:	ja     0x436a6f
  436a24:	xchg   ebx,eax
  436a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a26:	fistp  QWORD PTR [esp+eiz*2-0x7cb487fc]
  436a2d:	sbb    edx,DWORD PTR [esi+0x781c3410]
  436a33:	enter  0x99ac,0x54
  436a37:	test   DWORD PTR [ebx],edi
  436a39:	in     eax,0xfb
  436a3b:	mov    cl,0xfa
  436a3d:	sub    BYTE PTR [esi+0x43],dh
  436a40:	imul   ebx,DWORD PTR [ebx],0xffffff95
  436a43:	or     BYTE PTR [eax],ch
  436a45:	sub    edi,DWORD PTR [ebp-0x3d8a8803]
  436a4b:	jb     0x436a2e
  436a4d:	(bad)  [ecx]
  436a4f:	cld    
  436a50:	aaa    
  436a51:	mov    bh,BYTE PTR [eax+0x3f]
  436a54:	xor    al,0x34
  436a56:	jmp    0xeca2:0x3e000003
  436a5d:	jle    0x436a5c
  436a5f:	test   edx,ecx
  436a61:	jle    0x436acf
  436a63:	mov    bh,al
  436a65:	cmp    BYTE PTR [ebx],bl
  436a67:	imul   edx
  436a69:	retf   
  436a6a:	mov    ds:0x50747c9d,al
  436a70:	fbstp  TBYTE PTR [ecx-0x8]
  436a73:	xor    eax,0x69f86ba2
  436a78:	jmp    0xd338:0x73550203
  436a7f:	mov    ch,0xa8
  436a81:	sti    
  436a82:	mov    ecx,0x3a3b91ff
  436a87:	jne    0x436a24
  436a89:	fwait
  436a8a:	mov    eax,ds:0x74caca25
  436a90:	arpl   WORD PTR [edx],di
  436a92:	addr16 mov ebp,0xefb084de
  436a98:	push   ebp
  436a99:	les    ebx,FWORD PTR [edi+0x7771e73c]
  436a9f:	xor    eax,0x726a9fa5
  436aa4:	iret   
  436aa5:	pop    ebp
  436aa6:	mov    cs:0xefbac8ad,al
  436aac:	sub    eax,0x391d92d6
  436ab1:	add    al,0xae
  436ab3:	jo     0x436a88
  436ab5:	add    esi,DWORD PTR [edi]
  436ab7:	mov    ebp,0x3c58c432
  436abc:	out    0x71,eax
  436abe:	add    BYTE PTR [eax],al
  436ac0:	jo     0x436af5
  436ac2:	pop    edi
  436ac3:	mov    edi,0xd6ea344a
  436ac8:	push   edx
  436ac9:	sbb    eax,0x4ffc7bf9
  436ace:	push   edx
  436acf:	inc    ebx
  436ad0:	ret    
  436ad1:	cmp    BYTE PTR [ecx],al
  436ad3:	(bad)  
  436ad4:	idiv   DWORD PTR [ebx]
  436ad6:	shr    BYTE PTR [ecx+0x296db72c],0x3b
  436add:	push   ecx
  436ade:	pop    ecx
  436adf:	jmp    0x436b15
  436ae1:	xor    al,0x8c
  436ae3:	mov    eax,ds:0xa8c1a31e
  436ae8:	mov    esp,0xec98443
  436aed:	mov    dl,0x48
  436aef:	and    eax,0xae48f38c
  436af4:	ss inc ebx
  436af6:	add    ecx,ebp
  436af8:	xor    al,0xaf
  436afa:	inc    eax
  436afb:	xor    DWORD PTR [eax+0x74],esi
  436afe:	ins    DWORD PTR es:[edi],dx
  436aff:	sub    edx,ebx
  436b01:	pop    eax
  436b02:	je     0x436acf
  436b04:	mov    ebx,0xdfe9f4ec
  436b09:	mov    ah,0x91
  436b0b:	jmp    0x436b41
  436b0d:	xor    al,0x8
  436b0f:	aaa    
  436b10:	xor    DWORD PTR [ebx+0x46],ebp
  436b13:	jne    0x436b57
  436b15:	jle    0x436aeb
  436b17:	mov    DWORD PTR [ecx-0x19],esi
  436b1a:	mov    esi,0xf9052df1
  436b1f:	jmp    0x0:0xa1701e7c
  436b26:	push   0xffffff8e
  436b28:	mov    WORD PTR [esi-0x16fd53a4],ds
  436b2e:	xor    al,0x34
  436b30:	aam    0x49
  436b32:	push   0x59
  436b34:	dec    ecx
  436b35:	or     bh,BYTE PTR [edx+0x68]
  436b38:	aas    
  436b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436b3a:	arpl   WORD PTR [esi+0x2],cx
  436b3d:	jbe    0x436bb6
  436b3f:	ds add ecx,ebp
  436b42:	ja     0x436b76
  436b44:	sbb    ecx,ebp
  436b46:	xor    al,0x34
  436b48:	test   BYTE PTR [esp+eiz*4-0x1dfff7cd],cl
  436b4f:	sub    eax,0xe75efff7
  436b54:	dec    ebx
  436b55:	loopne 0x436bcc
  436b57:	and    ecx,esi
  436b59:	mov    edx,DWORD PTR [ecx-0x6f3ed1d8]
  436b5f:	sub    ebx,DWORD PTR [esi]
  436b61:	shl    DWORD PTR [edi+0x513bed26],0x8c
  436b68:	jb     0x436b77
  436b6a:	(bad)  
  436b6b:	fadd   st(0),st
  436b6d:	sbb    ebx,DWORD PTR [esi]
  436b6f:	xor    al,0x1
  436b71:	setae  bh
  436b74:	idiv   edi
  436b76:	push   cs
  436b77:	jmp    0x73489bc5
  436b7c:	jae    0x436b8d
  436b7e:	add    eax,0x24f7e73
  436b83:	xor    DWORD PTR [edx+0x28],ecx
  436b86:	push   edi
  436b87:	es in  eax,dx
  436b89:	sub    eax,DWORD PTR [eax]
  436b8b:	add    BYTE PTR [esi+0x98afec8],dl
  436b91:	fs sbb eax,0x312cddc8
  436b97:	mov    edx,DWORD PTR [ebx]
  436b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436b9a:	or     BYTE PTR [ebp-0x5e],0xe8
  436b9e:	dec    ecx
  436b9f:	inc    eax
  436ba0:	daa    
  436ba1:	push   ds
  436ba2:	aad    0x3b
  436ba4:	pop    edi
  436ba5:	and    eax,0xc84f8b14
  436baa:	or     ecx,DWORD PTR [ebx-0x37e13445]
  436bb0:	add    eax,0xdb8940f4
  436bb5:	ja     0x436b37
  436bb7:	inc    ebp
  436bb8:	sub    ch,dl
  436bba:	inc    ebx
  436bbb:	hlt    
  436bbc:	adc    eax,0x1f3bf11e
  436bc1:	and    eax,0xea1f8b04
  436bc6:	inc    ebx
  436bc7:	hlt    
  436bc8:	aaa    
  436bc9:	jb     0x436b87
  436bcb:	xchg   edx,ebp
  436bcd:	dec    esp
  436bce:	jne    0x436c1b
  436bd0:	jae    0x436b54
  436bd2:	mov    esp,0x7b44f285
  436bd7:	dec    ecx
  436bd8:	not    ecx
  436bda:	cs aam 0xc
  436bdd:	enter  0x879c,0x82
  436be1:	test   eax,0x5a1c089c
  436be6:	jns    0x436c2f
  436be8:	aaa    
  436be9:	sar    BYTE PTR [ecx],cl
  436beb:	aam    0xad
  436bed:	mov    ch,bh
  436bef:	test   BYTE PTR [eax],al
  436bf1:	add    BYTE PTR [edx-0x7b],bh
  436bf4:	jne    0x436bfe
  436bf6:	ja     0x436b9e
  436bf8:	cmp    dh,ah
  436bfa:	scas   al,BYTE PTR es:[edi]
  436bfb:	pop    ss
  436bfc:	xchg   ebp,eax
  436bfd:	jae    0x436c0a
  436bff:	ficomp DWORD PTR [edi]
  436c01:	inc    eax
  436c02:	aaa    
  436c03:	pop    esi
  436c04:	cmp    DWORD PTR [ecx],0xc1045d36
  436c0a:	cmp    BYTE PTR [ecx+0x4],ch
  436c0d:	add    BYTE PTR [edi],dh
  436c0f:	mov    ah,0xf1
  436c11:	(bad)  
  436c12:	rcr    BYTE PTR [ebx+eax*4+0x7b],1
  436c16:	(bad)  
  436c17:	pop    esp
  436c18:	out    dx,eax
  436c19:	sub    DWORD PTR [edi-0x53fffba5],0xf
  436c20:	xchg   ebp,eax
  436c21:	xchg   BYTE PTR [eax],al
  436c23:	popf   
  436c24:	jl     0x436c2e
  436c26:	test   DWORD PTR ds:0x97aef03a,0x6130c19c
  436c30:	add    al,0x0
  436c32:	aaa    
  436c33:	add    al,0xd
  436c35:	dec    DWORD PTR [eax+0x2f79835c]
  436c3b:	pop    ebp
  436c3c:	out    dx,eax
  436c3d:	add    edi,0x5c
  436c40:	add    al,0x0
  436c42:	mov    ah,0x33
  436c44:	and    ah,ah
  436c46:	fisttp DWORD PTR ds:0x341b2065
  436c4c:	imul   ebp,DWORD PTR [ecx],0x5b
  436c4f:	xor    edx,edi
  436c51:	jg     0x436c53
  436c53:	xor    eax,0x3ea
  436c58:	ds sahf 
  436c5a:	in     al,dx
  436c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436c5c:	in     al,dx
  436c5d:	arpl   WORD PTR [bp+0x536a],si
  436c62:	lods   al,BYTE PTR ds:[esi]
  436c63:	xor    ch,0x3c
  436c66:	jno    0x436cb8
  436c68:	das    
  436c69:	xor    al,dl
  436c6b:	sbb    BYTE PTR ds:0xb2c65c15,0xef
  436c72:	leave  
  436c73:	fidiv  DWORD PTR [ebp+0x64]
  436c76:	jae    0x436cb0
  436c78:	aas    
  436c79:	xor    ebp,DWORD PTR [ecx]
  436c7b:	adc    BYTE PTR [eax],al
  436c7d:	out    dx,eax
  436c7e:	int    0x7c
  436c80:	je     0x436cd6
  436c82:	pop    ebp
  436c83:	ret    
  436c84:	imul   ebx,DWORD PTR [ebx],0x73
  436c87:	cmp    bh,bl
  436c89:	mov    ecx,0x19870c2f
  436c8e:	mov    ds:0xea445e82,al
  436c93:	push   esp
  436c94:	and    eax,0x3c799be6
  436c9a:	jmp    0xba0a:0x822fda03
  436ca1:	gs jmp 0xaf50:0x733bfc7a
  436ca9:	mov    ebx,0xf3b80b9f
  436cae:	sbb    DWORD PTR [ebx+0x7aea441e],eax
  436cb4:	hlt    
  436cb5:	arpl   WORD PTR [ecx+0x40],si
  436cb8:	xchg   edi,eax
  436cb9:	mov    ecx,0x302b
  436cbe:	and    cl,BYTE PTR [edi]
  436cc0:	add    ecx,ebp
  436cc2:	shl    DWORD PTR [ecx+eax*1],1
  436cc5:	bound  ebp,QWORD PTR [ebp+0x35f9e2a5]
  436ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436ccc:	mov    WORD PTR [edx],?
  436cce:	jnp    0x436d1d
  436cd0:	or     DWORD PTR [eax-0x6d],ebp
  436cd3:	xor    al,0xf8
  436cd5:	jmp    0xf225120e
  436cda:	xor    eax,0x7b328ca5
  436cdf:	dec    ebp
  436ce0:	sbb    edx,ebp
  436ce2:	jae    0x436d03
  436ce4:	inc    eax
  436ce5:	shl    DWORD PTR [eax+0x38],1
  436ce8:	mov    WORD PTR [ebx+ebp*1],gs
  436ceb:	je     0x436d2e
  436ced:	add    esi,eax
  436cef:	fild   WORD PTR [eax-0x17]
  436cf2:	mov    edi,0x6b233ff
  436cf7:	arpl   ax,ax
  436cf9:	out    dx,al
  436cfa:	aas    
  436cfb:	xor    al,0x1
  436cfd:	jmp    0xe94c57b9
  436d02:	add    esi,DWORD PTR [ecx+0x3434e987]
  436d08:	test   BYTE PTR [esi],ah
  436d0a:	inc    ebx
  436d0b:	xor    al,0x8
  436d0d:	gs mov bh,0x33
  436d10:	add    ecx,ebp
  436d12:	mov    bh,0x69
  436d14:	and    DWORD PTR [edx],ebx
  436d16:	aad    0xe7
  436d18:	jne    0x436c9f
  436d1a:	xor    edi,DWORD PTR [ebx]
  436d1c:	jge    0x436d90
  436d1e:	cmp    esi,DWORD PTR [ecx+eax*1]
  436d21:	out    0x0,al
  436d23:	add    BYTE PTR [edx+0x66],cl
  436d26:	neg    DWORD PTR [edi+ebx*8]
  436d29:	scas   al,BYTE PTR es:[edi]
  436d2a:	(bad)  
  436d2b:	cmp    dl,bl
  436d2d:	and    eax,0xada32784
  436d32:	dec    esi
  436d33:	push   ecx
  436d34:	mov    WORD PTR ss:[edi+ecx*2+0xd6d69b],es
  436d3c:	xor    eax,0xaa7414ef
  436d41:	jmp    0x436d8e
  436d43:	or     BYTE PTR [ecx-0xf],cl
  436d46:	sbb    BYTE PTR [ebx-0x38ff0f56],dl
  436d4c:	pop    ecx
  436d4d:	sub    eax,0xeb4e0001
  436d52:	add    DWORD PTR [ebx-0x79f5d1ba],eax
  436d58:	ds mov ebp,0x8df6fffa
  436d5e:	cli    
  436d5f:	inc    DWORD PTR [ecx-0x12]
  436d62:	dec    ebp
  436d63:	pop    edi
  436d64:	aad    0xc4
  436d66:	pop    esp
  436d67:	ret    0x3816
  436d6a:	jle    0x436db1
  436d6c:	fisttp QWORD PTR es:[ebx-0x18]
  436d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436d71:	pop    ds
  436d72:	add    eax,0x80a8538b
  436d77:	adc    BYTE PTR [ebp+0x4689f4f2],dl
  436d7d:	dec    eax
  436d7e:	adc    BYTE PTR [eax+0x1a],0xdf
  436d82:	jno    0x436dc0
  436d84:	and    bh,bl
  436d86:	pop    ecx
  436d87:	cmp    BYTE PTR [eax],al
  436d89:	add    BYTE PTR [ebp-0x30],al
  436d8c:	idiv   bh
  436d8e:	fidiv  WORD PTR [edi]
  436d90:	pop    edx
  436d91:	mov    edi,DWORD PTR [ebx-0x31f74906]
  436d97:	fs int 0x33
  436d9a:	test   al,0xa0
  436d9c:	add    bl,BYTE PTR [esi+ebx*8]
  436d9f:	aaa    
  436da0:	add    edi,eax
  436da2:	sbb    esi,DWORD PTR [eax-0x8]
  436da5:	dec    esi
  436da7:	aaa    
  436da8:	fiadd  WORD PTR [edi]
  436daa:	fldenv [edx]
  436dac:	fscale 
  436dae:	adc    DWORD PTR [eax+0x5fdb8bfa],ebx
  436db4:	jge    0x436e03
  436db6:	aaa    
  436db7:	cmc    
  436db8:	jp     0x436e02
  436dba:	inc    ebx
  436dbb:	(bad)  
  436dbc:	cs lock mov esi,0x8353797d
  436dc3:	in     al,0x3b
  436dc5:	adc    BYTE PTR [esi-0xf830743],ch
  436dcb:	xor    al,0xfd
  436dcd:	xchg   BYTE PTR [eax],cl
  436dcf:	push   ebp
  436dd0:	jnp    0x436e43
  436dd2:	and    ecx,eax
  436dd4:	adc    al,0x7d
  436dd6:	sbb    BYTE PTR [edi+0x1f],ah
  436dd9:	sub    bh,BYTE PTR [eax+ebx*4+0x64fa85a4]
  436de0:	jmp    0xe12c9523
  436de5:	test   dl,dh
  436de7:	sub    al,0x79
  436de9:	pop    ebx
  436dea:	aas    
  436deb:	xor    eax,0xe5c5
  436df0:	sub    BYTE PTR [edx-0x76],bl
  436df3:	shr    BYTE PTR [ebx+0x3901cb69],0x4d
  436dfa:	add    al,0x0
  436dfc:	jno    0x436e24
  436dfe:	push   ebp
  436dff:	cld    
  436e00:	or     BYTE PTR [edx-0x5c],bh
  436e03:	pop    ecx
  436e04:	lods   al,BYTE PTR ds:[esi]
  436e05:	ja     0x436e49
  436e07:	mov    esi,0x73874d2f
  436e0c:	aas    
  436e0d:	(bad)  
  436e0e:	dec    ecx
  436e0f:	rcr    BYTE PTR [ebx+edx*1],1
  436e12:	or     DWORD PTR [ebp+0x59e8ad82],eax
  436e18:	inc    edi
  436e19:	dec    esp
  436e1a:	dec    edx
  436e1b:	or     BYTE PTR [esi],dh
  436e1d:	adc    edi,ecx
  436e1f:	(bad)  
  436e20:	imul   ebx,DWORD PTR [ecx+0x7f],0x854d2f79
  436e27:	inc    ebx
  436e28:	out    0x60,eax
  436e2a:	int    0x82
  436e2c:	mov    WORD PTR [eax-0xf],gs
  436e2f:	jl     0x436e59
  436e31:	xor    al,0xfa
  436e33:	add    esi,edx
  436e35:	out    0xf8,eax
  436e37:	mov    es,WORD PTR ds:0x2f4b6330
  436e3d:	(bad)  
  436e3f:	ss out 0x4b,eax
  436e42:	jbe    0x436e4e
  436e44:	aaa    
  436e45:	xor    al,0x53
  436e47:	adc    esi,DWORD PTR [edx+0x68eddf1]
  436e4d:	cmp    al,0x3
  436e4f:	iret   
  436e50:	clc    
  436e51:	add    eax,0x1712
  436e56:	pusha  
  436e57:	(bad)  
  436e58:	jmp    0x74a:0x613bf68c
  436e5f:	scas   eax,DWORD PTR es:[edi]
  436e60:	fild   WORD PTR [esi+0xf76464f]
  436e66:	jbe    0x436e60
  436e68:	icebp  
  436e69:	add    esi,DWORD PTR [edi]
  436e6b:	xor    al,0xea
  436e6d:	xchg   BYTE PTR [edi],ch
  436e6f:	xor    ebp,DWORD PTR [ebp+0xa]
  436e72:	div    bh
  436e74:	icebp  
  436e75:	add    esp,DWORD PTR [eax]
  436e77:	(bad)  
  436e78:	jmp    0x2abc:0xd7386e8e
  436e7f:	imul   ebx,DWORD PTR [ebx],0xffffffb6
  436e82:	mov    dl,BYTE PTR [ebx+0x2a]
  436e85:	xchg   edi,edi
  436e87:	sub    eax,0x35b978e7
  436e8c:	sbb    eax,0xccb3790c
  436e91:	xor    DWORD PTR [edi],0x34
  436e94:	jmp    0x5be0:0x2f35f006
  436e9b:	fistp  QWORD PTR [ecx-0x49f547fd]
  436ea1:	sbb    BYTE PTR [ebx],dh
  436ea3:	mov    bh,0xa3
  436ea5:	pop    ss
  436ea6:	xor    eax,0x330ff5b5
  436eab:	out    0x0,eax
  436ead:	rol    cl,1
  436eaf:	cmc    
  436eb0:	fsub   DWORD PTR [esp+esi*2+0x2b]
  436eb4:	jle    0x436e4e
  436eb6:	(bad)  
  436eb7:	pop    ebx
  436eb8:	clc    
  436eb9:	mov    edi,0x9c590000
  436ebe:	cld    
  436ebf:	push   esi
  436ec0:	aad    0x5b
  436ec2:	pop    eax
  436ec3:	(bad)  
  436ec4:	(bad)  
  436ec6:	ret    0x34f1
  436ec9:	mov    bh,0x3e
  436ecb:	and    esi,esi
  436ecd:	push   es
  436ece:	pop    eax
  436ecf:	bound  ebx,QWORD PTR [edi+0x34e1c2fd]
  436ed5:	pushf  
  436ed6:	mul    DWORD PTR [esi]
  436ed8:	xchg   ebp,eax
  436ed9:	pop    ebx
  436eda:	pop    eax
  436edb:	jb     0x436e6c
  436edd:	std    
  436ede:	ret    0x34e1
  436ee1:	mov    bh,0xf8
  436ee3:	jle    0x436f44
  436ee5:	and    BYTE PTR [ecx],al
  436ee7:	push   edi
  436ee8:	dec    esi
  436ee9:	and    BYTE PTR [ecx],al
  436eeb:	mov    ebp,0x3901204d
  436ef0:	sbb    eax,0x1cc40120
  436ef5:	and    BYTE PTR [ecx],al
  436ef7:	mov    dl,BYTE PTR [ebx]
  436ef9:	and    BYTE PTR [ecx],al
  436efb:	xor    eax,0xea01200c
  436f00:	and    ah,BYTE PTR [eax]
  436f02:	add    DWORD PTR [ebp+0x19],edi
  436f05:	and    BYTE PTR [ecx],al
  436f07:	clc    
  436f08:	adc    esp,DWORD PTR [eax]
  436f0a:	add    DWORD PTR [edi+0xa],ebp
  436f0d:	and    BYTE PTR [ecx],al
  436f0f:	jl     0x436ef3
  436f11:	pop    ds
  436f12:	add    DWORD PTR [eax+0x71011fda],esp
  436f18:	out    0x1f,eax
  436f1a:	add    DWORD PTR [edi+eiz*8+0x82011f],eax
  436f21:	add    bh,al
  436f23:	pop    ds
  436f24:	add    DWORD PTR [esi],esp
  436f26:	fcomp  DWORD PTR [edi]
  436f28:	add    DWORD PTR [eax],eax
  436f2a:	lea    edx,[eax+0x35]
  436f2d:	add    BYTE PTR [edi+0x66],bl
  436f30:	xor    eax,0x35854000
  436f35:	add    BYTE PTR [edx-0x67ffca7b],ch
  436f3b:	xchg   DWORD PTR ds:0x3586f500,esi
  436f41:	add    BYTE PTR [eax],dh
  436f43:	mov    DWORD PTR ds:0x35891d00,esi
  436f49:	add    bh,al
  436f4b:	jp     0x436f82
  436f4d:	add    BYTE PTR [ebx+0x7a],ch
  436f50:	xor    eax,0x357b3b00
  436f55:	add    BYTE PTR ds:0x2200357b,dl
  436f5b:	jnp    0x436f92
  436f5d:	add    BYTE PTR [ebp+0x7c],ch
  436f60:	xor    eax,0x35507b00
  436f65:	add    BYTE PTR [eax+0x50],bh
  436f68:	xor    eax,0x35509a00
  436f6d:	add    BYTE PTR [ebx-0x2cffcab0],ch
  436f73:	mov    al,0xe5
  436f75:	push   esi
  436f76:	xchg   ebp,eax
  436f77:	inc    edi
  436f78:	or     DWORD PTR [ebp-0x74c3b800],eax
  436f7e:	push   eax
  436f7f:	xor    al,0x84
  436f81:	shl    BYTE PTR [edx+0x7a],0x7d
  436f85:	dec    esi
  436f86:	add    BYTE PTR [eax],al
  436f88:	xor    dh,BYTE PTR [edi-0x4ed68b40]
  436f8e:	inc    ecx
  436f8f:	xor    al,0x93
  436f91:	jae    0x437000
  436f93:	or     cl,BYTE PTR [esi-0x4f]
  436f96:	inc    ebx
  436f97:	sub    BYTE PTR [esi-0x6b],cl
  436f9a:	enter  0x9283,0x2b
  436f9e:	jle    0x436fee
  436fa0:	fidiv  DWORD PTR [eax-0x2dc8d7ad]
  436fa6:	dec    ecx
  436fa7:	and    al,0x66
  436fa9:	sbb    esp,DWORD PTR [edx+0xc91b4d0]
  436faf:	shl    DWORD PTR [ecx-0x7f],0x4
  436fb3:	add    BYTE PTR [edi],dh
  436fb5:	dec    ebp
  436fb6:	int    0xbf
  436fb8:	or     DWORD PTR [eax],esi
  436fba:	mov    edi,0xa2953704
  436fbf:	stc    
  436fc0:	cwde   
  436fc1:	inc    BYTE PTR [ecx+0x5b]
  436fc4:	jne    0x437017
  436fc6:	add    al,0xcc
  436fc8:	jnp    0x43700b
  436fca:	enter  0x73cc,0x29
  436fce:	enter  0x6bcc,0x11
  436fd2:	enter  0x83cc,0xc0
  436fd6:	test   esp,ebp
  436fd8:	mov    esp,0xac4d0cc0
  436fdd:	js     0x436fd3
  436fdf:	push   eax
  436fe0:	lods   al,BYTE PTR ds:[esi]
  436fe1:	adc    al,0xc3
  436fe3:	jmp    0xf9e63c0f
  436fe8:	dec    eax
  436fe9:	dec    ebp
  436fea:	add    al,0x7d
  436fec:	add    BYTE PTR [eax],al
  436fee:	cmp    al,0x4c
  436ff0:	cvtps2pi mm5,QWORD PTR [eax+ebx*4+0x7ce90908]
  436ff8:	std    
  436ff9:	lds    esi,FWORD PTR [esi+0x37f99263]
  436fff:	dec    ebp
  437000:	adc    al,BYTE PTR [edx]
  437002:	mov    dh,0x83
  437004:	mov    ?,ecx
  437006:	aaa    
  437007:	dec    ebp
  437008:	add    esi,edi
  43700a:	mov    dh,0x6d
  43700c:	mov    ?,ecx
  43700e:	aaa    
  43700f:	dec    ebp
  437010:	adc    al,BYTE PTR [edx]
  437012:	mov    dh,0x6d
  437014:	mov    ?,ecx
  437016:	aaa    
  437017:	dec    ebp
  437018:	mov    eax,ecx
  43701a:	imul   BYTE PTR [ebp+ebp*8+0x58]
  43701e:	sub    al,0x34
  437020:	test   eax,0xe6727c3b
  437025:	add    esp,DWORD PTR [ebp-0x55]
  437028:	adc    eax,0xd65b410
  43702d:	or     ch,BYTE PTR [ebp+esi*8-0x4a1c218]
  437034:	adc    al,0xc2
  437036:	inc    ebx
  437037:	xor    al,0x6b
  437039:	fwait
  43703a:	inc    edi
  43703b:	jecxz  0x437067
  43703d:	mov    DWORD PTR [edx-0x2c6f0419],ecx
  437043:	pop    ss
  437044:	jmp    0x3555:0xdf343703
  43704b:	xor    esp,DWORD PTR [edx]
  43704d:	inc    esi
  43704e:	sbb    BYTE PTR [ebx-0x4d],0x18
  437052:	add    BYTE PTR [eax],al
  437054:	test   BYTE PTR [ecx+eax*2-0x15cc916b],dh
  43705b:	adc    DWORD PTR ds:0x5e9541b5,esi
  437061:	xor    ebp,edx
  437063:	pop    ebx
  437064:	enter  0xdfb3,0x83
  437068:	inc    esi
  437069:	push   esi
  43706a:	sub    DWORD PTR [edx-0x3ad354c2],ebp
  437070:	push   edi
  437071:	aaa    
  437072:	rol    ecx,cl
  437074:	cmp    dh,BYTE PTR [ebp-0x68]
  437077:	les    edx,FWORD PTR [edi]
  437079:	inc    ebp
  43707a:	(bad)
  43707e:	test   cl,al
  437080:	xor    esi,DWORD PTR [ecx+ebp*2]
  437083:	call   0xb23e:0x3ea47e7
  43708a:	mov    esp,0x92343703
  43708f:	outs   dx,BYTE PTR ds:[esi]
  437090:	fmul   st,st(6)
  437092:	pop    ds
  437093:	xchg   edi,eax
  437094:	fidiv  DWORD PTR [ebx-0x2c]
  437097:	or     bh,BYTE PTR [eax-0x4c1afef9]
  43709d:	push   edi
  43709e:	mov    cl,0xd4
  4370a0:	xor    al,0x34
  4370a2:	mov    ecx,0x1343242
  4370a7:	ins    BYTE PTR es:[edi],dx
  4370a8:	sbb    BYTE PTR [eax],bl
  4370aa:	add    esi,esp
  4370ac:	bound  eax,QWORD PTR [edx+0x4]
  4370af:	mov    ds:0xe84fa231,eax
  4370b4:	xor    eax,0xb30465
  4370b9:	add    BYTE PTR [ecx-0x5e],al
  4370bc:	dec    edi
  4370bd:	jmp    0x4370f4
  4370bf:	gs add al,0xa3
  4370c2:	xor    DWORD PTR [edx+0x6535ea4f],esp
  4370c8:	add    al,0x33
  4370ca:	inc    ecx
  4370cb:	mov    ds:0x6535ed4f,al
  4370d0:	add    al,0x23
  4370d2:	xor    DWORD PTR [edx+0x6535ec4f],esp
  4370d8:	add    al,0x33
  4370da:	inc    ecx
  4370db:	mov    ds:0x6535ef4f,al
  4370e0:	add    al,0x23
  4370e2:	xor    DWORD PTR [edx+0x6535ee4f],esp
  4370e8:	add    al,0x33
  4370ea:	inc    ecx
  4370eb:	mov    ds:0x6535e14f,al
  4370f0:	add    al,0x23
  4370f2:	xor    DWORD PTR [edx+0x6535f04f],esp
  4370f8:	add    al,0x33
  4370fa:	inc    ecx
  4370fb:	mov    ds:0x6535e34f,al
  437100:	add    al,0x23
  437102:	xor    DWORD PTR [edx+0x6537f24f],esp
  437108:	add    al,0xb3
  43710a:	inc    edx
  43710b:	mov    ds:0x6537e54f,al
  437110:	add    al,0xa3
  437112:	xor    ah,BYTE PTR [edx+0x3403004f]
  437118:	lock add esp,DWORD PTR [esi+ebp*1+0x56b3]
  437120:	shl    BYTE PTR [ebx],1
  437122:	lock add edx,DWORD PTR [esi+ebp*1+0x33e156b3]
  43712a:	lock add eax,DWORD PTR [edx+esi*1+0x679883f0]
  437132:	inc    eax
  437133:	cvtdq2ps xmm0,XMMWORD PTR [edi-0x6]
  437137:	push   DWORD PTR [ecx-0x667f9801]
  43713d:	mov    al,0xf2
  43713f:	loope  0x437120
  437141:	mov    DWORD PTR [edx],ecx
  437143:	imul   edi,DWORD PTR [esi+ebp*1+0x3311ff01],0xb06fb8bf
  43714e:	add    al,BYTE PTR [eax-0x15476917]
  437154:	popa   
  437155:	or     edi,eax
  437157:	jle    0xf4476c1c
  43715d:	mov    esi,0xb5510c4c
  437162:	call   DWORD PTR cs:[ecx]
  437165:	mov    edi,0xb461db84
  43716a:	enter  0x5e00,0x30
  43716e:	jbe    0x43716b
  437170:	dec    esi
  437171:	das    
  437172:	ja     0x437109
  437174:	dec    esi
  437175:	xor    BYTE PTR [ecx],al
  437177:	mov    ecx,DWORD PTR ds:0xa304e971
  43717d:	or     al,0x1d
  43717f:	add    BYTE PTR [ecx],dl
  437181:	add    dl,BYTE PTR [ebx]
  437183:	add    eax,DWORD PTR [eax]
  437185:	add    BYTE PTR [ecx+ebp*1-0x4d],dl
  437189:	push   esi
  43718a:	sysexit 
  43718c:	lock add eax,esp
  43718f:	sub    BYTE PTR [ebx+0x14f3756],dh
  437195:	div    DWORD PTR [edi+edx*4]
  437198:	add    eax,0x14e61b2
  43719d:	div    DWORD PTR [edi+eiz*4]
  4371a0:	add    eax,0x14981b2
  4371a5:	div    DWORD PTR [edi+edx*4]
  4371a8:	add    eax,0x14881b2
  4371ad:	div    DWORD PTR [edi+eiz*4]
  4371b0:	add    eax,0x14b61b2
  4371b5:	div    DWORD PTR [edi+edx*4]
  4371b8:	add    eax,0x14a61b2
  4371bd:	div    DWORD PTR [edi+eiz*4]
  4371c0:	add    eax,0x15501b2
  4371c5:	div    DWORD PTR [edi+edx*4]
  4371c8:	add    eax,0x16401b2
  4371cd:	div    DWORD PTR [edi+eiz*1]
  4371d0:	add    eax,0x156e1b2
  4371d5:	div    DWORD PTR [edi+edx*1]
  4371d8:	add    eax,0x165e1b2
  4371dd:	div    DWORD PTR [edi+eiz*1]
  4371e0:	add    eax,0x15101b2
  4371e5:	div    DWORD PTR [edi+edx*1]
  4371e8:	add    eax,0x10000b2
  4371ed:	pusha  
  4371ee:	add    edi,esi
  4371f0:	xor    al,0x27
  4371f2:	add    eax,0x152e1b2
  4371f7:	div    DWORD PTR [edi+edx*1]
  4371fa:	add    eax,0x161e1b2
  4371ff:	div    DWORD PTR [edi+eiz*1]
  437202:	and    ebp,0x7d9b4e47
  437208:	stc    
  437209:	jl     0x437257
  43720b:	or     DWORD PTR [edx+0xe9b5633],esi
  437211:	pop    ebx
  437212:	pop    ebp
  437213:	mov    edi,0x51df2f83
  437218:	xor    eax,0xfa42a237
  43721d:	pop    ebx
  43721e:	xor    edx,DWORD PTR [ecx]
  437220:	in     al,0x9b
  437222:	cmp    DWORD PTR [esi+esi*1-0x5f5a484c],eax
  437229:	dec    ebp
  43722a:	xlat   BYTE PTR ds:[ebx]
  43722b:	sub    al,0xe9
  43722d:	sub    ch,dl
  43722f:	call   0xb458:0x5cb436ce
  437236:	out    0x83,eax
  437238:	(bad)  
  437239:	push   edx
  43723a:	test   eax,0x9bcd2eae
  43723f:	or     esi,DWORD PTR [edi]
  437241:	pop    ebx
  437242:	ja     0x43724b
  437244:	mov    eax,ds:0xe03aa7ae
  437249:	push   ebx
  43724a:	fidivr DWORD PTR [edx]
  43724c:	xor    dh,BYTE PTR [ebp-0x3d]
  43724f:	cmp    BYTE PTR [eax],al
  437251:	add    cl,dl
  437253:	daa    
  437254:	jmp    0x918e:0xb8677bc7
  43725b:	bound  edi,QWORD PTR [edx]
  43725d:	add    DWORD PTR [ebp-0x6476fb21],0x3703ea0f
  437267:	xor    al,0x38
  437269:	lds    esp,FWORD PTR [edx-0x1a]
  43726c:	ror    BYTE PTR [edx],1
  43726e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43726f:	inc    esp
  437270:	(bad)  [ebx+0x41755d0]
  437276:	aaa    
  437277:	xor    al,0x29
  437279:	lods   al,BYTE PTR ds:[esi]
  43727a:	das    
  43727b:	daa    
  43727c:	fidiv  WORD PTR [eax+0x1f]
  43727f:	adc    eax,0xea7003aa
  437284:	ins    BYTE PTR es:[edi],dx
  437285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437286:	jp     0x437289
  437288:	add    DWORD PTR [edx-0x43],ebp
  43728b:	adc    al,0x8
  43728d:	imul   ebp,DWORD PTR [eax],0x5a
  437290:	clc    
  437291:	jmp    0xcf05d157
  437296:	aaa    
  437297:	scas   eax,DWORD PTR es:[edi]
  437298:	clc    
  437299:	sbb    bh,BYTE PTR [edx]
  43729b:	scas   eax,DWORD PTR es:[edi]
  43729c:	shr    DWORD PTR [eax-0x5e73bb36],1
  4372a2:	sti    
  4372a3:	dec    edi
  4372a4:	or     DWORD PTR [eax-0x6f],ebp
  4372a7:	pop    ebx
  4372a8:	add    ecx,ebp
  4372aa:	xor    al,0xd9
  4372ac:	loop   0x43725c
  4372ae:	xor    al,0x34
  4372b0:	add    DWORD PTR [edx-0x20],esi
  4372b3:	(bad)  
  4372b4:	sbb    esp,eax
  4372b6:	add    BYTE PTR [eax],al
  4372b8:	je     0x4372ee
  4372ba:	xor    al,0xfd
  4372bc:	aas    
  4372bd:	cmp    al,0x2a
  4372bf:	sub    DWORD PTR [ebx],esi
  4372c1:	scas   eax,DWORD PTR es:[edi]
  4372c2:	fldcw  WORD PTR [eax-0x2acbc31f]
  4372c8:	das    
  4372c9:	cmp    al,0x22
  4372cb:	sub    DWORD PTR [ebx],edi
  4372cd:	adc    eax,0x3434e9f8
  4372d2:	xor    al,0xfd
  4372d4:	mov    bh,0x3c
  4372d6:	es test eax,0xed520734
  4372dc:	mov    cl,0x9a
  4372de:	ret    0x8441
  4372e1:	push   ss
  4372e2:	clc    
  4372e3:	jmp    0xe5cfa71c
  4372e8:	mov    bh,0x3c
  4372ea:	push   ds
  4372eb:	test   eax,0x28dbaf34
  4372f0:	mov    DWORD PTR [edx+eax*4],ebp
  4372f3:	or     ch,BYTE PTR [ebp+0x61e90134]
  4372f9:	xor    eax,0x1953f196
  4372fe:	add    DWORD PTR [edx+0x7a],esp
  437301:	cdq    
  437302:	in     al,dx
  437303:	add    BYTE PTR [esi],dl
  437305:	add    BYTE PTR [ebx*4+0x385016],0x8f
  43730d:	(bad)  
  43730e:	cli    
  43730f:	add    BYTE PTR [esi],cl
  437311:	xor    eax,0x58930426
  437316:	sub    eax,DWORD PTR [eax+0x1e]
  437319:	xor    BYTE PTR [edi],0x8
  43731c:	add    BYTE PTR [eax],al
  43731e:	xchg   ebp,eax
  43731f:	mov    al,ds:0xa7feeab8
  437324:	fld    st(1)
  437326:	add    eax,0xa9e37828
  43732b:	das    
  43732c:	add    DWORD PTR [eax],eax
  43732e:	dec    edi
  43732f:	xchg   edx,eax
  437330:	cli    
  437331:	add    dh,cl
  437333:	xor    al,0x7e
  437335:	adc    al,0x53
  437337:	pop    eax
  437338:	and    eax,DWORD PTR [eax-0x22]
  43733b:	jg     0x437351
  43733d:	popf   
  43733e:	(bad)  
  43733f:	dec    ebp
  437340:	cmp    BYTE PTR [eax],al
  437342:	push   ebp
  437343:	cwde   
  437344:	mov    eax,0x147f96eb
  437349:	popf   
  43734a:	xchg   esi,eax
  43734b:	push   ebp
  43734c:	cmp    BYTE PTR [eax],al
  43734e:	jae    0x43730b
  437350:	add    DWORD PTR [eax],eax
  437352:	mov    ?,WORD PTR [edi+0x14]
  437355:	test   DWORD PTR [esi],esi
  437357:	push   ecx
  437358:	cmp    BYTE PTR [eax],al
  43735a:	sub    eax,0x4c8b0525
  43735f:	jne    0x43734a
  437361:	adc    BYTE PTR [ebx],dh
  437363:	mov    ebx,0xa75e0001
  437368:	std    
  437369:	test   BYTE PTR [esi+0x79],dl
  43736c:	cmp    BYTE PTR [eax],al
  43736e:	aad    0x99
  437370:	mov    eax,0xd6b556eb
  437375:	call   FWORD PTR [esi+0x34]
  437378:	add    DWORD PTR [ebx],esi
  43737a:	push   edx
  43737b:	loope  0x437395
  43737d:	sub    DWORD PTR [edi],esi
  43737f:	mov    eax,DWORD PTR [eax*4+0xb5d0000]
  437386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437387:	sbb    BYTE PTR [ecx+ecx*2+0x6f],ah
  43738b:	sbb    BYTE PTR [esi-0x73],dl
  43738e:	add    al,0x7f
  437390:	adc    eax,0x3700045f
  437395:	call   0x3d:0x402f92f8
  43739c:	inc    esp
  43739d:	or     al,0xed
  43739f:	test   bh,ah
  4373a1:	mov    WORD PTR [esi-0x3c5a53f0],fs
  4373a7:	in     eax,0x3f
  4373a9:	int3   
  4373aa:	popf   
  4373ab:	stc    
  4373ac:	aaa    
  4373ad:	dec    ebp
  4373ae:	add    al,0x85
  4373b0:	dec    ebx
  4373b1:	clc    
  4373b2:	sti    
  4373b3:	and    dh,BYTE PTR [edi+0x4d]
  4373b6:	sbb    ebp,0xffffffd0
  4373b9:	dec    ebp
  4373ba:	add    al,0x0
  4373bc:	add    al,0x61
  4373be:	outs   dx,DWORD PTR ds:[esi]
  4373bf:	sbb    BYTE PTR [esi],cl
  4373c1:	or     eax,0x8cdf84fd
  4373c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4373c7:	sbb    BYTE PTR [ecx+edi*2+0x6f],ah
  4373cb:	sbb    BYTE PTR [esi+0xd],dl
  4373ce:	std    
  4373cf:	and    ah,BYTE PTR [eax+0x6400044d]
  4373d5:	xor    DWORD PTR [edi+0x18],0x2d048d62
  4373dc:	out    0x60,al
  4373de:	test   DWORD PTR [esi+0x22f3f576],edi
  4373e4:	js     0x437433
  4373e6:	add    al,0x0
  4373e8:	add    BYTE PTR [eax],al
  4373ea:	mov    esp,0x12187749
  4373ef:	lea    eax,[eax*4+0x8a50c7d]
  4373f6:	mov    dh,0xea
  4373f8:	cwde   
  4373f9:	add    BYTE PTR [edi],dh
  4373fb:	xor    al,0xea
  4373fd:	aam    0x34
  4373ff:	mov    ecx,0x3400eb02
  437404:	arpl   WORD PTR [ebp-0x2b0db488],di
  43740a:	xor    al,0xb9
  43740c:	loop   0x4373f0
  43740e:	push   0x1ea56934
  437413:	xor    al,0xea
  437415:	add    ecx,DWORD PTR [edx+0x30]
  437418:	dec    ebp
  437419:	sti    
  43741a:	pop    ebp
  43741b:	hlt    
  43741c:	jmp    0x1b573ca3
  437421:	inc    ebp
  437422:	push   DWORD PTR [edx-0x7c4c1b40]
  437428:	arpl   WORD PTR [eax+esi*4-0x2d3b25b7],di
  43742f:	sub    ebp,DWORD PTR [ecx-0x5e]
  437432:	fidiv  WORD PTR [ebx]
  437434:	jmp    0x15fc:0x4d3fb203
  43743b:	hlt    
  43743c:	jmp    0xea9a5ec5
  437441:	add    esi,DWORD PTR [edi]
  437443:	and    esi,esi
  437445:	js     0x437466
  437447:	or     eax,0x7bba042a
  43744c:	test   eax,0x4f0000ab
  437451:	and    ecx,esi
  437453:	js     0x437494
  437455:	adc    eax,0x5754042a
  43745a:	jmp    0x2f80:0xf6233703
  437461:	or     DWORD PTR [edx+0x4e055203],ebp
  437467:	mov    edi,DWORD PTR [ecx+0x15f44274]
  43746d:	push   edi
  43746e:	jmp    0x3f80:0xdeab3703
  437475:	adc    DWORD PTR [ecx],eax
  437477:	test   eax,0x28dbb134
  43747c:	pushf  
  43747d:	sub    eax,DWORD PTR [edx+0x133a00a]
  437483:	jmp    0xf1d9a6ed
  437488:	dec    ebx
  437489:	push   ss
  43748a:	add    DWORD PTR [edx-0x13],esp
  43748d:	xchg   ebp,eax
  43748e:	in     al,dx
  43748f:	loope  0x437496
  437491:	xor    dl,BYTE PTR [esi+0x1161be1]
  437497:	push   0xe9015bd5
  43749c:	xor    al,0x7
  43749e:	std    
  43749f:	jnp    0x4374ad
  4374a1:	or     eax,DWORD PTR [ecx-0x17]
  4374a4:	jns    0x4374d1
  4374a6:	jle    0x43747d
  4374a8:	lahf   
  4374a9:	pop    ebx
  4374aa:	clc    
  4374ab:	push   0xffffffca
  4374ad:	xor    BYTE PTR [ebx+0x19],dh
  4374b0:	mov    esp,0xd3c282
  4374b5:	add    BYTE PTR [esi],dh
  4374b7:	scas   eax,DWORD PTR es:[edi]
  4374b8:	clc    
  4374b9:	cli    
  4374ba:	xor    edx,edi
  4374bc:	shl    ebp,0xbd
  4374bf:	pop    esp
  4374c0:	ret    0xc496
  4374c3:	(bad)  
  4374c4:	fistp  WORD PTR [esi+0x62013434]
  4374ca:	loopne 0x437466
  4374cc:	sbb    esp,eax
  4374ce:	hlt    
  4374cf:	xor    ecx,DWORD PTR [ecx+eiz*4+0x68094f73]
  4374d6:	aad    0x5b
  4374d8:	add    ecx,ebp
  4374da:	xor    al,0x7
  4374dc:	xor    eax,0x410e8c4c
  4374e1:	jmp    0x5305f1a3
  4374e6:	jl     0x4374f0
  4374e8:	xor    eax,0x41367c74
  4374ed:	jmp    0x44d149
  4374f2:	pop    esi
  4374f3:	xor    DWORD PTR [esi],esp
  4374f5:	cmp    al,0xdb
  4374f7:	pop    eax
  4374f8:	sub    eax,DWORD PTR [eax+0x4e]
  4374fb:	mov    dl,0xeb
  4374fd:	add    al,0x94
  4374ff:	stos   BYTE PTR es:[edi],al
  437500:	ret    0xe975
  437503:	sbb    eax,0x2528854e
  437508:	seto   BYTE PTR [ecx-0x19]
  43750c:	pop    es
  43750d:	xor    ebp,DWORD PTR [esi-0x50]
  437510:	xlat   BYTE PTR ds:[ebx]
  437511:	call   FWORD PTR [esi]
  437513:	xor    DWORD PTR [ecx],eax
  437515:	rol    DWORD PTR [esi+0x29],0x26
  437519:	add    al,0x0
  43751b:	add    BYTE PTR [ebx+0x59],bh
  43751e:	pop    ss
  43751f:	inc    eax
  437520:	push   ds
  437521:	lock dec edx
  437523:	jne    0x43751e
  437525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437526:	rcr    DWORD PTR [esi-0x33],1
  437529:	imul   eax,ebp,0xffffffcc
  43752c:	cmp    ebp,DWORD PTR [ebx+0x2c538be5]
  437532:	test   cl,cl
  437534:	sub    edx,DWORD PTR [esi+0x25]
  437537:	rol    BYTE PTR [ebx+0x72],0x5
  43753b:	add    BYTE PTR [ebp+0x5],dl
  43753e:	adc    DWORD PTR [ebx+0x25e9281b],ecx
  437544:	xchg   ebx,eax
  437545:	mov    esi,0x2b8c5dfa
  43754a:	add    esp,ecx
  43754c:	sti    
  43754d:	push   es
  43754e:	push   ebx
  43754f:	push   ebx
  437550:	sbb    eax,0x4a8b1d8c
  437555:	push   esp
  437556:	xor    BYTE PTR [ebx-0x74c3abae],cl
  43755c:	dec    esp
  43755d:	cmp    BYTE PTR [esi-0x66],bh
  437560:	repnz das 
  437562:	add    DWORD PTR [eax],eax
  437564:	push   ebp
  437565:	jae    0x4375e5
  437567:	inc    edx
  437568:	sub    ch,BYTE PTR [ebx+0x7f377c4f]
  43756e:	add    DWORD PTR [edi-0x40b6b7a4],edi
  437574:	push   esp
  437575:	jp     0x437580
  437577:	fsubr  DWORD PTR [esi-0x4a7b278a]
  43757d:	cli    
  43757e:	cld    
  43757f:	inc    DWORD PTR [eax]
  437581:	add    BYTE PTR [edi],dh
  437583:	sar    BYTE PTR [edx],cl
  437585:	je     0x437593
  437587:	repz sbb dh,bh
  43758a:	lods   eax,DWORD PTR ds:[esi]
  43758b:	repnz mov ebx,DWORD PTR [ebx+edx*1+0x63]
  437590:	mov    DWORD PTR [esi+0x6f],ebp
  437593:	aam    0x10
  437595:	and    al,0x33
  437597:	(bad)  
  437598:	sub    ch,BYTE PTR [edx+esi*4-0x2f]
  43759c:	(bad)  
  43759d:	jmp    FWORD PTR [edi-0x43e02837]
  4375a3:	sbb    al,BYTE PTR [esi+0x17db4d8]
  4375a9:	xchg   DWORD PTR [ebx+0x39],edi
  4375ac:	icebp  
  4375ad:	test   BYTE PTR [ebp+0x39],dh
  4375b0:	loopne 0x4375b3
  4375b2:	ss pop ebp
  4375b4:	add    al,0x25
  4375b6:	(bad)  
  4375b8:	add    ch,BYTE PTR ds:0x7841c6d2
  4375be:	scas   al,BYTE PTR es:[edi]
  4375bf:	and    ecx,esp
  4375c1:	sbb    esi,DWORD PTR [ecx*4+0x4513748b]
  4375c8:	std    
  4375c9:	mov    al,0x20
  4375cb:	les    ebp,FWORD PTR [edi]
  4375cd:	and    al,0x27
  4375cf:	pop    edx
  4375d0:	inc    ebp
  4375d1:	pop    esp
  4375d2:	outs   dx,DWORD PTR ds:[esi]
  4375d3:	ret    0x5c8b
  4375d6:	push   ebx
  4375d7:	dec    ecx
  4375d8:	mov    DWORD PTR [esi-0x9],esi
  4375db:	(bad)
  4375de:	mov    WORD PTR [eax+0x7f],gs
  4375e1:	inc    edi
  4375e2:	aaa    
  4375e3:	jle    0x4375af
  4375e5:	or     DWORD PTR [eax],eax
  4375e7:	add    al,al
  4375e9:	xor    al,0xee
  4375eb:	inc    esp
  4375ec:	dec    edx
  4375ed:	and    edi,0xea34977d
  4375f3:	add    esi,eax
  4375f5:	pop    ebp
  4375f6:	jmp    0x8b8b:0xef536803
  4375fd:	xor    al,0xea
  4375ff:	add    ebp,DWORD PTR [esi]
  437601:	mov    esp,DWORD PTR [esi+0x2b0f4fd2]
  437607:	push   cs
  437608:	ins    BYTE PTR es:[edi],dx
  437609:	mov    edi,0x4334dfa6
  43760e:	dec    edi
  43760f:	(bad)  
  437610:	cmp    DWORD PTR [esi],ecx
  437612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437613:	fild   WORD PTR [eax-0x37]
  437616:	push   ss
  437617:	mov    al,BYTE PTR [ebx+0x18]
  43761a:	jae    0x43762b
  43761c:	pop    ebx
  43761d:	cmp    BYTE PTR [ebx+0x17],dh
  437620:	push   ebx
  437621:	adc    al,0xeb
  437623:	xchg   edx,eax
  437624:	mov    edx,0xc2efbdf7
  437629:	dec    ebx
  43762a:	loopne 0x4375bf
  43762c:	inc    al
  43762e:	xchg   esi,eax
  43762f:	int3   
  437630:	xor    BYTE PTR ds:0x87bc03ea,dh
  437636:	sbb    bh,ah
  437638:	jmp    0x3bc2608f
  43763d:	push   es
  43763e:	sti    
  43763f:	pop    es
  437640:	and    ecx,ecx
  437642:	aad    0x7e
  437644:	jnp    0x43764c
  437646:	(bad)  
  437648:	je     0x437658
  43764a:	out    0x18,al
  43764c:	add    BYTE PTR [eax],al
  43764e:	ss mov bh,0xac
  437651:	cld    
  437652:	inc    ebp
  437653:	pop    ebp
  437654:	adc    DWORD PTR ds:0x5cde7632,0xffffffae
  43765b:	push   edx
  43765c:	jmp    0x99c6:0x6b3a2403
  437663:	jae    0x437666
  437665:	or     DWORD PTR [ebx-0x3e95fde2],0x72ed8633
  43766f:	mov    bh,0x75
  437671:	add    eax,0x14c01793
  437676:	cmp    DWORD PTR [ebx-0x8],edx
  437679:	jmp    0x9dcf76c5
  43767e:	pop    eax
  43767f:	or     cl,BYTE PTR [ebp+ebx*4+0x2a3c2e50]
  437686:	and    al,0x41
  437688:	mov    WORD PTR [ebp-0x5c73c5b0],?
  43768e:	hlt    
  43768f:	mov    eax,0xb738c555
  437694:	or     eax,0xf7fed3cd
  437699:	push   cs
  43769a:	les    esi,FWORD PTR [edi-0x44f332ab]
  4376a0:	cmp    eax,0x4bbb08c5
  4376a5:	jns    0x4376a8
  4376a7:	xchg   ecx,eax
  4376a8:	jbe    0x437666
  4376aa:	mov    eax,ecx
  4376ac:	sbb    al,0xed
  4376ae:	cmp    DWORD PTR [edx+ecx*4+0x55],eax
  4376b2:	add    BYTE PTR [eax],al
  4376b4:	(bad)  
  4376b7:	sahf   
  4376b8:	and    BYTE PTR [eax+edi*8],cl
  4376bb:	bound  edi,QWORD PTR [edx]
  4376bd:	hlt    
  4376be:	mov    DWORD PTR ds:0xd58c3dcf,esp
  4376c4:	rcr    BYTE PTR [edx+0x22],1
  4376c7:	mov    dh,0xa5
  4376c9:	dec    ebx
  4376ca:	mov    WORD PTR ds:0x2dc009df,ss
  4376d0:	iret   
  4376d1:	sub    eax,0x3434e803
  4376d6:	mov    ah,BYTE PTR [ebx]
  4376d8:	dec    ebx
  4376d9:	mov    bh,0x4d
  4376db:	lds    edi,FWORD PTR [eax+edi*4+0x55]
  4376df:	add    BYTE PTR [edx+0x61],dh
  4376e2:	jge    0x437726
  4376e4:	mov    ds:0x9c7fd082,al
  4376e9:	shl    BYTE PTR [ebp+0x4d59d283],cl
  4376ef:	pop    esi
  4376f0:	jns    0x4376f6
  4376f2:	mov    dh,0xd
  4376f4:	test   BYTE PTR [eax],bl
  4376f6:	ins    WORD PTR es:[edi],dx
  4376f8:	push   eax
  4376f9:	xor    BYTE PTR [edx],0x20
  4376fc:	xor    DWORD PTR [eax],0x132e686d
  437702:	pop    eax
  437703:	jae    0x437770
  437705:	jno    0x43771f
  437707:	outs   dx,DWORD PTR ds:[esi]
  437708:	mov    gs,WORD PTR [ecx]
  43770a:	pusha  
  43770b:	ins    DWORD PTR es:[edi],dx
  43770c:	ja     0x437738
  43770e:	fs outs dx,BYTE PTR fs:[esi]
  437711:	sbb    BYTE PTR [esi+0x73],ah
  437714:	mov    bl,0x14
  437716:	push   edi
  437717:	ins    BYTE PTR es:[edi],dx
  437718:	add    BYTE PTR [eax],al
  43771a:	(bad)  
  43771b:	push   esp
  43771c:	push   ebp
  43771d:	outs   dx,DWORD PTR ds:[esi]
  43771e:	mov    dl,0x1b
  437720:	and    DWORD PTR [esi-0x64],esp
  437723:	push   ss
  437724:	ins    BYTE PTR es:[edi],dx
  437725:	and    ah,cl
  437727:	es pusha 
  437729:	popa   
  43772a:	mov    eax,0xb7614654
  43772f:	sub    BYTE PTR [edx+esi*2+0x2a],ah
  437733:	pop    eax
  437734:	jno    0x4377a8
  437736:	addr16 sub al,0x6d
  437739:	gs js  0x437794
  43773c:	daa    
  43773d:	cmp    DWORD PTR [edi-0x80],eax
  437740:	or     ecx,DWORD PTR [edx]
  437742:	lea    esi,[ebx-0x3b]
  437745:	int3   
  437746:	mov    dh,BYTE PTR [ebx-0x3b]
  437749:	int3   
  43774a:	pop    ebx
  43774b:	mov    edx,0x34de008d
  437750:	mov    al,0x1e
  437752:	iret   
  437753:	xor    al,0x1
  437755:	push   esi
  437756:	dec    ebx
  437757:	sbb    al,0x1d
  437759:	add    BYTE PTR [edi],dh
  43775b:	outs   dx,BYTE PTR ds:[esi]
  43775c:	call   0x3bc0:0x7d6abe62
  437763:	add    al,0x10
  437765:	rep stos BYTE PTR es:[edi],al
  437767:	fdiv   QWORD PTR [edi+eax*1+0x37]
  43776b:	pop    ebx
  43776c:	dec    ebx
  43776d:	sbb    dh,BYTE PTR [edi]
  43776f:	pop    ebx
  437770:	add    al,0x2d
  437772:	mov    DWORD PTR [eax+0x1ab4307b],eax
  437778:	or     DWORD PTR [edi-0x16],eax
  43777b:	out    dx,eax
  43777c:	ja     0x4377fc
  43777e:	add    BYTE PTR [eax],al
  437780:	jmp    0x4377d6
  437782:	add    al,0x0
  437784:	sahf   
  437785:	ins    DWORD PTR es:[edi],dx
  437786:	add    al,0x0
  437788:	aaa    
  437789:	loopne 0x4377b3
  43778b:	and    al,0x37
  43778d:	dec    esi
  43778e:	call   0x3bc0:0x7d4abe62
  437795:	test   BYTE PTR [edi],cl
  437797:	repz jg 0x4377f5
  43779a:	add    al,0x0
  43779c:	aaa    
  43779d:	mov    edi,0x59c37e7b
  4377a2:	add    al,0x0
  4377a4:	fs sbb eax,0x67cb7e7c
  4377aa:	add    al,0x0
  4377ac:	mov    esi,0x371254db
  4377b1:	pop    ebp
  4377b2:	jnp    0x437832
  4377b4:	(bad)  
  4377b5:	dec    edi
  4377b6:	add    al,0x0
  4377b8:	scas   al,BYTE PTR es:[edi]
  4377b9:	(bad)  [ebx+0x12]
  4377bc:	aaa    
  4377bd:	pop    ebp
  4377be:	xor    bh,BYTE PTR [ebp-0x33474e05]
  4377c4:	xrelease mov DWORD PTR [eax-0x475e1434],edi
  4377cb:	int3   
  4377cc:	add    esi,DWORD PTR [ecx]
  4377ce:	jbe    0x4377bc
  4377d0:	data16 shl BYTE PTR [ebx+0x50],cl
  4377d4:	sub    esi,DWORD PTR [edx+ebp*8]
  4377d7:	add    ebp,DWORD PTR [edx-0x1a]
  4377da:	jb     0x4377f2
  4377dc:	aas    
  4377dd:	mov    ebx,0x3b0b536e
  4377e2:	jmp    0xb840:0xac000003
  4377e9:	jp     0x4377e7
  4377eb:	dec    edi
  4377ec:	ret    
  4377ed:	mov    ebp,0x349bf3e
  4377f2:	aaa    
  4377f3:	xor    al,0xe5
  4377f5:	(bad)  
  4377f6:	mov    ebx,0x32237288
  4377fb:	xor    al,0xea
  4377fd:	jl     0x4377d2
  4377ff:	mov    esp,0x4f68fcae
  437804:	xlat   BYTE PTR ds:[ebx]
  437805:	pop    eax
  437806:	dec    ebx
  437807:	xchg   edi,ebp
  437809:	pop    eax
  43780a:	cmp    ebp,DWORD PTR [edi-0x3d7c3340]
  437810:	rcl    BYTE PTR [esi],1
  437812:	das    
  437813:	mov    edx,0x27df094e
  437818:	jmp    0x3a2f:0x7288b203
  43781f:	xor    al,0xea
  437821:	int    0xc4
  437823:	xor    eax,0x4f20f7b2
  437828:	ja     0x43782c
  43782a:	pop    eax
  43782b:	mov    ebx,0x3b737b2e
  437830:	jmp    0xc7ff:0xe5e8b203
  437837:	daa    
  437838:	ja     0x437839
  43783a:	(bad)  
  43783b:	das    
  43783c:	(bad)  
  43783d:	sub    ah,BYTE PTR es:[ebx+0x5c]
  437841:	inc    esp
  437842:	and    esp,DWORD PTR fs:[ebx+0x39]
  437846:	jecxz  0x437801
  437848:	pop    esi
  437849:	add    al,BYTE PTR [eax]
  43784b:	add    BYTE PTR [edi+0x28],bh
  43784e:	jmp    0x1cef:0x1b00903
  437855:	sub    BYTE PTR [ecx],al
  437857:	jmp    0x3ccf9286
  43785c:	mov    ebx,0x6779adb5
  437861:	cmp    DWORD PTR [ecx],eax
  437863:	jmp    0xf5951c95
  437868:	xor    al,0x34
  43786a:	mov    WORD PTR [eax+0x34],?
  43786d:	ja     0x4377f9
  43786f:	hlt    
  437870:	mov    WORD PTR [edi],es
  437872:	retf   
  437873:	div    DWORD PTR [esi+0x26d46b8]
  437879:	shl    BYTE PTR [ecx-0x7b1823b],0xbf
  437880:	sbb    eax,0x75b4deb9
  437885:	mov    eax,0xfadc4d4e
  43788a:	or     BYTE PTR [edi-0x62765825],ah
  437890:	dec    ebp
  437891:	dec    esi
  437892:	clc    
  437893:	xchg   edx,eax
  437894:	int    0x52
  437896:	push   esi
  437897:	sub    al,dl
  437899:	scas   eax,DWORD PTR es:[edi]
  43789a:	mov    cl,0xc5
  43789c:	cmp    eax,0x5dbff84e
  4378a1:	mov    bh,0xde
  4378a3:	mov    ah,0xf5
  4378a5:	add    ch,0x1d
  4378a8:	test   DWORD PTR [eax-0x7f08ca3b],0x2dc5
  4378b2:	test   DWORD PTR [eax+0x608d9cc5],0xb8dcfd84
  4378bc:	push   edx
  4378bd:	in     eax,dx
  4378be:	inc    ebp
  4378bf:	mov    bh,0x1a
  4378c1:	jb     0x4378f6
  4378c3:	cmp    al,0x8a
  4378c5:	cmp    al,0xcb
  4378c7:	mov    bh,0x12
  4378c9:	pusha  
  4378ca:	pop    ds
  4378cb:	jo     0x437859
  4378cd:	add    BYTE PTR [edi],bh
  4378cf:	cmp    al,0x53
  4378d1:	mov    DWORD PTR [ebx],ebp
  4378d3:	cwde   
  4378d4:	jle    0x437927
  4378d6:	(bad)  
  4378d7:	push   es
  4378d8:	jle    0x437953
  4378da:	fisub  WORD PTR [edx-0x41]
  4378dd:	mov    ebx,edi
  4378df:	fwait
  4378e0:	or     dh,BYTE PTR [edi-0x3e413511]
  4378e6:	mov    esp,0x17c9fd41
  4378eb:	leave  
  4378ec:	xor    al,0xb
  4378ee:	mov    ?,WORD PTR [ecx]
  4378f0:	or     BYTE PTR [eax-0x7b6a2],0x17
  4378f7:	leave  
  4378f8:	cmp    al,0xb
  4378fa:	mov    ?,WORD PTR [ecx]
  4378fc:	or     BYTE PTR [eax-0x7b53a],0xe7
  437903:	enter  0xb44,0x5e
  437907:	xor    DWORD PTR [eax-0x7b56178],eax
  43790d:	jmp    edi
  43790f:	enter  0xb4c,0x5e
  437913:	xor    DWORD PTR [eax-0x59ffff78],eax
  437919:	dec    edx
  43791a:	clc    
  43791b:	call   ebp
  43791d:	enter  0x144c,0x4e
  437921:	xor    DWORD PTR [esi-0x6c],edi
  437924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437925:	sbb    eax,0x621efffe
  43792a:	mov    edi,0x860d9766
  43792f:	add    ah,BYTE PTR [ebp+0x1e144cc9]
  437935:	xor    DWORD PTR [esi],esp
  437937:	neg    bh
  437939:	iret   
  43793a:	pop    ebx
  43793b:	fcom   DWORD PTR [edi+0x5b89f524]
  437941:	sar    BYTE PTR [eax-0x7],0x53
  437945:	xor    al,BYTE PTR [ecx]
  437947:	add    BYTE PTR [edi],dh
  437949:	push   esi
  43794a:	ja     0x4379a2
  43794c:	ss pop ebx
  43794e:	add    al,0x8b
  437950:	ret    
  437951:	ret    0x530
  437954:	aaa    
  437955:	pop    ebx
  437956:	jnp    0x4379ab
  437958:	ret    
  437959:	rol    bh,0xfd
  43795c:	rcr    BYTE PTR [edx-0x27],0xce
  437960:	xor    al,0x81
  437962:	jl     0x4379b7
  437964:	mov    ds:0xc7f037c3,eax
  437969:	shl    DWORD PTR [edi],1
  43796b:	hlt    
  43796c:	lods   al,BYTE PTR ds:[esi]
  43796d:	dec    ebx
  43796e:	cmc    
  43796f:	mov    al,0xeb
  437971:	jmp    0x1f0b8278
  437976:	jp     0x437976
  437978:	test   DWORD PTR [ecx+0x7ab5],0xc97a1539
  437982:	scas   al,BYTE PTR es:[edi]
  437983:	outs   dx,DWORD PTR ds:[esi]
  437984:	mov    WORD PTR [edx-0x42],fs
  437987:	sahf   
  437988:	jno    0x437988
  43798a:	sub    eax,0xf8799c90
  43798f:	rol    DWORD PTR [edi],1
  437991:	in     al,0xd1
  437993:	cmc    
  437994:	mov    BYTE PTR [eax+0x13],cl
  437997:	inc    edx
  437998:	add    al,0x0
  43799a:	add    al,0xd
  43799c:	retf   0xc3d0
  43799f:	push   eax
  4379a0:	jns    0x437990
  4379a2:	or     al,0x2e
  4379a4:	jp     0x437a21
  4379a6:	pop    ss
  4379a7:	(bad)  
  4379a8:	fdiv   DWORD PTR [eax-0x732f15c8]
  4379ae:	xor    al,0x2b
  4379b0:	imul   BYTE PTR [eax-0x5783a318]
  4379b6:	sub    DWORD PTR [ebp+0x4],ebx
  4379b9:	test   DWORD PTR [edx+0x21],edi
  4379bc:	add    bh,0x8b
  4379bf:	ins    DWORD PTR es:[edi],dx
  4379c0:	cmc    
  4379c1:	mov    al,0x63
  4379c3:	xor    al,0x79
  4379c5:	add    edx,esi
  4379c7:	popa   
  4379c8:	out    0x5c,eax
  4379ca:	push   es
  4379cb:	ss jp  0x437a2d
  4379ce:	inc    ebp
  4379cf:	xor    al,0xea
  4379d1:	js     0x437a2f
  4379d3:	dec    eax
  4379d4:	jae    0x4379ec
  4379d6:	iret   
  4379d7:	mov    bh,0x1d
  4379d9:	cwde   
  4379da:	xor    ecx,DWORD PTR [ebx+0x1d]
  4379dd:	mov    al,ds:0x955db844
  4379e2:	add    BYTE PTR [eax],al
  4379e4:	cs mov al,0xa6
  4379e7:	add    esi,DWORD PTR [edi]
  4379e9:	xor    al,0x65
  4379eb:	dec    edi
  4379ec:	das    
  4379ed:	or     bl,ah
  4379ef:	add    esi,DWORD PTR [edi]
  4379f1:	mov    edi,0xd1f09015
  4379f6:	push   0x4f
  4379f8:	inc    DWORD PTR [edi]
  4379fa:	repz add esi,DWORD PTR [edi]
  4379fd:	xor    al,0x5d
  4379ff:	ja     0x4379f0
  437a01:	pop    es
  437a02:	jecxz  0x437a07
  437a04:	aaa    
  437a05:	sar    eax,0x7e
  437a08:	fwait
  437a09:	adc    dl,ch
  437a0b:	add    esi,DWORD PTR [edi]
  437a0d:	xor    al,0x6b
  437a0f:	cdq    
  437a10:	popa   
  437a11:	cld    
  437a12:	mov    edi,0xb6342180
  437a17:	xchg   ebp,eax
  437a18:	aad    0xb6
  437a1a:	pop    esi
  437a1b:	cmp    ecx,DWORD PTR ds:0x4103ea3f
  437a21:	lea    esp,[edi]
  437a23:	mov    WORD PTR [edi],?
  437a25:	xor    al,0x88
  437a27:	add    cl,bl
  437a29:	sti    
  437a2a:	aad    0xf8
  437a2c:	sub    BYTE PTR [ebx+0x63],cl
  437a2f:	mov    ecx,0x80d73595
  437a34:	or     eax,0x8e956536
  437a39:	xor    DWORD PTR [ebx+0x36],0xb
  437a3d:	mov    cl,0x1
  437a3f:	sbb    ebp,DWORD PTR [eax]
  437a41:	fisttp WORD PTR [ecx-0x4fc36794]
  437a47:	add    BYTE PTR es:[eax],al
  437a4a:	jb     0x437a1b
  437a4c:	in     al,dx
  437a4d:	fs mov esp,0x1e624cbf
  437a53:	inc    esp
  437a54:	xchg   BYTE PTR [ebp-0x16f417a5],dl
  437a5a:	xor    al,0xbf
  437a5c:	pushf  
  437a5d:	jmp    0x6244ae96
  437a62:	std    
  437a63:	inc    edi
  437a64:	clc    
  437a65:	sbb    al,0xa3
  437a67:	enter  0xede6,0x33
  437a6b:	(bad)  
  437a6c:	loopne 0x437a50
  437a6e:	outs   dx,DWORD PTR ds:[esi]
  437a6f:	pop    esp
  437a70:	js     0x437a38
  437a72:	popf   
  437a73:	xor    DWORD PTR [ebp+0x62],0x31
  437a77:	mov    edi,0x139726d
  437a7c:	sti    
  437a7d:	cmc    
  437a7e:	fwait
  437a7f:	scas   eax,DWORD PTR es:[edi]
  437a80:	fcmovnb st,st(2)
  437a82:	int    0xb0
  437a84:	cld    
  437a85:	bound  ecx,QWORD PTR [esi+0x6c]
  437a88:	or     BYTE PTR [esi-0x71f75091],bl
  437a8e:	mov    edx,0x6581b04a
  437a93:	dec    edx
  437a94:	clc    
  437a95:	(bad)  
  437a96:	(bad)  ds:0xb0c0b4f8
  437a9c:	jbe    0x437ad3
  437a9e:	enter  0xe0c6,0x6c
  437aa2:	lods   al,BYTE PTR ds:[esi]
  437aa3:	(bad)  
  437aa4:	mov    ah,0x62
  437aa6:	cs pop eax
  437aa8:	test   BYTE PTR [esi],dl
  437aaa:	cmp    edx,esi
  437aac:	mov    DWORD PTR [eax+eax*1-0x713a4000],ebx
  437ab3:	mov    dh,0x4e
  437ab5:	fisttp WORD PTR [ebx-0x3a78b1fc]
  437abb:	add    BYTE PTR [edx-0x74],cl
  437abe:	(bad)
  437ac1:	mov    ebp,es
  437ac3:	int3   
  437ac4:	mov    ds:0xfa83e4ca,eax
  437ac9:	inc    ebp
  437aca:	inc    ebp
  437acb:	push   esi
  437acc:	xor    ecx,ecx
  437ace:	out    dx,eax
  437acf:	mov    esi,esi
  437ad1:	dec    esi
  437ad2:	mov    cl,0x47
  437ad4:	int3   
  437ad5:	(bad)  
  437ad6:	mov    bh,0x13
  437ad9:	mov    eax,0xbef9fffa
  437ade:	add    BYTE PTR [ebp-0x72],0xcc
  437ae2:	ds pop es
  437ae4:	pop    ebx
  437ae5:	pop    ds
  437ae6:	std    
  437ae7:	test   BYTE PTR [esi+0x24b90924],cl
  437aed:	xor    eax,0x251b0001
  437af2:	div    BYTE PTR [edi+0x1bec9]
  437af8:	xor    bh,al
  437afa:	cmp    al,0x9f
  437afc:	mov    al,ds:0x60fceb4
  437b01:	lds    eax,FWORD PTR [eax]
  437b03:	add    BYTE PTR [esi+0x4d06c2b2],cl
  437b09:	(bad)  
  437b0a:	jnp    0x437b08
  437b0c:	in     eax,0x3b
  437b0e:	or     DWORD PTR [ecx+0x5d7eb9ab],ecx
  437b14:	add    BYTE PTR [eax],al
  437b16:	dec    cl
  437b18:	mov    ch,0x8b
  437b1a:	mov    esi,DWORD PTR [ecx-0x10aa48f6]
  437b20:	sub    eax,0x2d498bd1
  437b25:	ret    
  437b26:	adc    BYTE PTR [ebx],0x2e
  437b29:	(bad)  
  437b2a:	mov    eax,DWORD PTR [edi+0x62]
  437b2d:	add    DWORD PTR [edx+0x1e0a75b6],esi
  437b33:	xor    eax,0xd8372fde
  437b38:	ret    
  437b39:	je     0x437b7c
  437b3b:	inc    cx
  437b3d:	clc    
  437b3e:	mov    eax,DWORD PTR [ebx+0x22]
  437b41:	stc    
  437b42:	mov    bl,0xd1
  437b44:	inc    DWORD PTR ds:0xf9225b37
  437b4a:	mov    al,0x16
  437b4c:	idiv   bh
  437b4e:	lock gs call 0x98868d1
  437b55:	pop    es
  437b56:	pop    ecx
  437b57:	bound  eax,QWORD PTR [edx+0x45b2dc0]
  437b5d:	in     eax,0x38
  437b5f:	stc    
  437b60:	mov    DWORD PTR [ecx+0x444f3],eax
  437b66:	add    al,0xad
  437b68:	jl     0x437bad
  437b6a:	mov    edi,0x3d73a5cf
  437b6f:	aam    0x76
  437b71:	add    BYTE PTR [edi],dh
  437b73:	pop    ebx
  437b74:	outs   dx,DWORD PTR ds:[esi]
  437b75:	outs   dx,BYTE PTR ds:[esi]
  437b76:	xor    al,0xb6
  437b78:	repz xor al,0x0
  437b7b:	add    BYTE PTR [edi+ebx*1-0x9],dh
  437b7f:	mov    dh,0x39
  437b81:	pop    ebx
  437b82:	add    al,0x0
  437b84:	mov    edx,0x2fe57f4b
  437b89:	add    al,0x2
  437b8b:	add    BYTE PTR [edi],dh
  437b8d:	pop    ebx
  437b8e:	outs   dx,DWORD PTR ds:[esi]
  437b8f:	outs   dx,DWORD PTR ds:[esi]
  437b90:	jb     0x437b6f
  437b92:	aaa    
  437b93:	cld    
  437b94:	xor    ebp,edx
  437b96:	das    
  437b97:	hlt    
  437b98:	jmp    0x97d5:0xfc5a29da
  437b9f:	pop    ebx
  437ba0:	je     0x437ba0
  437ba2:	mov    eax,0xb9167bcc
  437ba7:	int3   
  437ba8:	jae    0x437b51
  437baa:	jne    0x437b98
  437bac:	mov    ah,0x6
  437bae:	jmp    0x737804ff
  437bb3:	xchg   esi,eax
  437bb4:	ds jg  0x437b6f
  437bb7:	add    eax,0x7cb76252
  437bbc:	and    BYTE PTR [eax-0x63],dh
  437bbf:	xchg   edi,eax
  437bc0:	push   cs
  437bc1:	dec    eax
  437bc2:	dec    DWORD PTR [eax+0x76ede9b0]
  437bc8:	jns    0x437bf9
  437bca:	daa    
  437bcb:	aas    
  437bcc:	push   DWORD PTR [eax]
  437bce:	jmp    0x3b0e:0xc3b13703
  437bd5:	lea    esi,[ebx+eax*1+0x37]
  437bd9:	xor    al,0xa7
  437bdb:	fbstp  TBYTE PTR ds:[ebx]
  437bde:	jmp    0xbfb1:0x37000003
  437be5:	clc    
  437be6:	mov    al,0x1
  437be8:	fld    QWORD PTR [ebx]
  437bea:	aaa    
  437beb:	mov    bl,0xa8
  437bed:	add    DWORD PTR [esi-0x43],esi
  437bf0:	sub    eax,0x91c9b894
  437bf5:	dec    esp
  437bf6:	test   al,0x47
  437bf8:	jmp    0xa706:0x6347ba03
  437bff:	aaa    
  437c00:	dec    edi
  437c01:	enter  0xc1bb,0x75
  437c05:	add    al,0x7a
  437c07:	mov    ebp,0xc9b89fed
  437c0c:	jne    0x437c88
  437c0e:	in     al,0x47
  437c10:	mov    bl,0xb2
  437c12:	in     al,dx
  437c13:	cmp    esp,DWORD PTR [ebx]
  437c15:	xchg   ecx,eax
  437c16:	ds mov al,0x4f
  437c19:	jmp    DWORD PTR [eax+0x47]
  437c1c:	adc    ebp,DWORD PTR [edi]
  437c1e:	pop    edi
  437c1f:	aaa    
  437c20:	push   ebp
  437c21:	pop    esi
  437c22:	aaa    
  437c23:	xor    al,0xea
  437c25:	jbe    0x437bba
  437c27:	adc    dl,ch
  437c29:	add    esi,DWORD PTR [edi]
  437c2b:	xor    al,0x1
  437c2d:	out    0xe7,al
  437c2f:	xchg   DWORD PTR [ecx-0x7b8cd51],esi
  437c35:	jb     0x437be3
  437c37:	mov    BYTE PTR [edi],cl
  437c39:	jmp    0xe954fa72
  437c3e:	xor    al,0x34
  437c40:	sub    al,0x36
  437c42:	add    esi,DWORD PTR [ecx+0x77]
  437c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c46:	add    BYTE PTR [eax],al
  437c48:	je     0x2e7bb5fb
  437c4e:	add    ecx,ebp
  437c50:	push   esi
  437c51:	mov    cl,0xcf
  437c53:	xchg   DWORD PTR [ebx-0x14ce739b],ebp
  437c59:	aam    0x9
  437c5b:	jns    0x437cd0
  437c5d:	and    al,BYTE PTR [ecx]
  437c5f:	jmp    0x91dd0145
  437c64:	loope  0x437cac
  437c66:	clc    
  437c67:	jb     0x437c6c
  437c69:	and    BYTE PTR [ecx+0x414bcbdd],cl
  437c6f:	ffree  st(1)
  437c71:	test   BYTE PTR [ecx-0x7b95e90],bl
  437c77:	jb     0x437ce4
  437c79:	and    BYTE PTR [ecx+edi*1-0x7ea515d],cl
  437c80:	sbb    eax,0x34f7b5a4
  437c85:	xor    al,0xb2
  437c87:	fscale 
  437c89:	inc    esi
  437c8a:	clc    
  437c8b:	jmp    0xdd93c3c4
  437c90:	pop    esi
  437c91:	jo     0x437cf2
  437c93:	call   0xd1c3:0x2345bac9
  437c9a:	mov    DWORD PTR [ecx-0x16fede0d],ebx
  437ca0:	ffree  st(2)
  437ca2:	fadd   QWORD PTR [edx+0x47]
  437ca5:	aam    0x8b
  437ca7:	add    dl,ch
  437ca9:	fbstp  TBYTE PTR [edx+ecx*1+0x0]
  437cad:	add    BYTE PTR [esi+0x32],cl
  437cb0:	arpl   bx,dx
  437cb2:	in     al,dx
  437cb3:	and    eax,0x56a69000
  437cb8:	clc    
  437cb9:	call   FWORD PTR ds:0x425d207f
  437cbf:	(bad)  
  437cc0:	mov    BYTE PTR [eax+ebx*1-0x64f0fece],bh
  437cc7:	and    eax,0xa731fffa
  437ccc:	or     BYTE PTR [esi+ecx*1],al
  437ccf:	xor    al,BYTE PTR [esi+esi*8+0x1bdc611]
  437cd6:	fidiv  WORD PTR [ecx]
  437cd8:	cs jne 0x437cdd
  437cdb:	aas    
  437cdc:	test   BYTE PTR [edx+0xf0131ce],ch
  437ce2:	mov    ecx,0xd47eb0bd
  437ce7:	xor    DWORD PTR [ecx],eax
  437ce9:	mov    edi,0x131ee
  437cee:	and    eax,0x864d80b7
  437cf3:	retf   0xbc88
  437cf6:	mov    BYTE PTR [ecx],dh
  437cf8:	add    DWORD PTR [ebx],edi
  437cfa:	loope  0x437d2b
  437cfc:	imul   ecx,DWORD PTR [edi],0x7cb0d509
  437d02:	xchg   esp,eax
  437d03:	xor    DWORD PTR [ecx],eax
  437d05:	mov    DWORD PTR [ebx-0x54],ecx
  437d08:	arpl   bx,dx
  437d0a:	mov    esp,0x70848ca
  437d0f:	hlt    
  437d10:	fsub   QWORD PTR [esi+0x0]
  437d13:	add    BYTE PTR [edi+0x5e16b8c1],dl
  437d19:	xor    DWORD PTR [esi+0x50],edi
  437d1c:	push   0xffffffcb
  437d1e:	cmp    BYTE PTR [eax-0x77fece98],0x37
  437d25:	push   edi
  437d26:	in     eax,dx
  437d27:	test   dl,bh
  437d29:	out    dx,al
  437d2a:	cld    
  437d2b:	push   edi
  437d2c:	and    eax,edx
  437d2e:	or     edx,DWORD PTR [esp+ebp*4]
  437d31:	cmp    esp,0xffffff85
  437d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437d35:	(bad)  
  437d36:	in     eax,0xff
  437d38:	xor    bl,dl
  437d3a:	out    0x8,eax
  437d3c:	mov    esp,0x37123fca
  437d41:	pop    ebx
  437d42:	jnp    0x437dbf
  437d44:	or     ebx,DWORD PTR [esp+ebp*1+0x14]
  437d48:	(bad)  
  437d49:	dec    edx
  437d4a:	fcmovb st,st(5)
  437d4c:	xchg   ecx,eax
  437d4d:	sub    cl,BYTE PTR [edi+0x79337285]
  437d53:	push   esp
  437d54:	sub    eax,0xb3907c4b
  437d59:	pop    esp
  437d5a:	add    al,0x0
  437d5c:	mov    esp,0xae628907
  437d61:	xchg   edx,eax
  437d62:	inc    ebp
  437d63:	adc    dh,BYTE PTR [edi]
  437d65:	pop    ebx
  437d66:	cdq    
  437d67:	pop    ds
  437d68:	pop    ecx
  437d69:	ror    BYTE PTR [eax-0x50],cl
  437d6c:	dec    ebx
  437d6d:	inc    ecx
  437d6e:	add    al,0x0
  437d70:	pop    ecx
  437d71:	stos   BYTE PTR es:[edi],al
  437d72:	xchg   esi,eax
  437d73:	test   DWORD PTR [edi+0xffe6be],ebp
  437d79:	add    BYTE PTR [eax-0x10480414],dh
  437d7f:	inc    esp
  437d80:	add    al,0x0
  437d82:	xor    al,0x18
  437d84:	test   DWORD PTR [edi-0x192151],eax
  437d8a:	nop
  437d8b:	jno    0x437d3e
  437d8d:	xchg   edx,esp
  437d8f:	scas   al,BYTE PTR es:[edi]
  437d90:	out    dx,al
  437d91:	mov    al,0xaf
  437d93:	add    al,0xfb
  437d95:	(bad)  
  437d96:	js     0x437d95
  437d98:	in     al,dx
  437d99:	push   DWORD PTR [eax+0x5a]
  437d9c:	fdecstp 
  437d9e:	mov    esi,0xba8bad33
  437da3:	mov    ebx,0x4458ee96
  437da8:	adc    esi,DWORD PTR [ebp+0x4cd6cccd]
  437dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437daf:	xchg   esp,esi
  437db1:	add    esi,DWORD PTR [edi]
  437db3:	mov    ebx,0x60d5978d
  437db8:	dec    esp
  437db9:	jns    0x437e3a
  437dbb:	sub    al,0x61
  437dbd:	aas    
  437dbe:	adc    ebx,ebx
  437dc0:	lock jae 0x437da2
  437dc3:	sub    ch,dl
  437dc5:	add    esi,DWORD PTR [edx-0x48860a1c]
  437dcb:	jl     0x437dbd
  437dcd:	add    esi,DWORD PTR [edi]
  437dcf:	lods   al,BYTE PTR ds:[esi]
  437dd0:	out    0xf2,al
  437dd2:	mov    ebx,0x5f02fdf9
  437dd7:	sub    BYTE PTR [ebx+0xc],ah
  437dda:	dec    ebx
  437ddb:	scas   eax,DWORD PTR es:[edi]
  437ddc:	mov    ds:0xb20000fb,al
  437de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437de2:	mov    eax,ds:0x7243e0ed
  437de7:	out    dx,eax
  437de8:	das    
  437de9:	scas   eax,DWORD PTR es:[edi]
  437dea:	jp     0x437e33
  437dec:	and    eax,0x4c78ea34
  437df1:	push   eax
  437df2:	jmp    0xdac8a922
  437df7:	fptan  
  437df9:	ficomp DWORD PTR [edx-0x4e0e456c]
  437dff:	jbe    0x437e04
  437e01:	cs call 0x3703:0xf080c77a
  437e09:	scas   eax,DWORD PTR es:[edi]
  437e0a:	xor    eax,0x52ad1588
  437e0f:	dec    ebx
  437e10:	and    eax,0x2998ea34
  437e15:	fidiv  DWORD PTR [edx+0x4b]
  437e18:	mov    ebx,0x34e9012e
  437e1d:	(bad)  
  437e1e:	rol    DWORD PTR [esi-0x5e46c4b6],cl
  437e24:	push   edx
  437e25:	inc    ebx
  437e26:	clc    
  437e27:	jmp    0x25f8:0x618a3c21
  437e2e:	add    ecx,ebp
  437e30:	iret   
  437e31:	stos   DWORD PTR es:[edi],eax
  437e32:	mov    ch,0xdf
  437e34:	xor    al,0x34
  437e36:	test   BYTE PTR [ebx],ch
  437e38:	mov    cl,0xc1
  437e3a:	stc    
  437e3b:	out    0x3a,eax
  437e3d:	loopne 0x437dc8
  437e3f:	xchg   esp,eax
  437e40:	rcl    ch,0xd3
  437e43:	or     eax,DWORD PTR [eax]
  437e45:	add    BYTE PTR [edi+0x597008ec],bl
  437e4b:	pop    eax
  437e4c:	pop    edi
  437e4d:	loopne 0x437dd3
  437e4f:	jl     0x437e60
  437e51:	jmp    0xdd95378a
  437e56:	jle    0x437e0c
  437e58:	mov    ecx,0x893434d7
  437e5d:	in     eax,dx
  437e5e:	in     eax,0xb7
  437e60:	ds add eax,0x720cdc35
  437e66:	jecxz  0x437e8e
  437e68:	mov    edi,DWORD PTR [ecx-0x66]
  437e6b:	and    eax,0xebc1e901
  437e70:	or     BYTE PTR [ecx+0x2f],ah
  437e73:	sub    eax,0x25f7598c
  437e78:	add    ecx,ebp
  437e7a:	test   eax,0x8ce8e4be
  437e7f:	es mov dl,0xd9
  437e82:	pop    edx
  437e83:	jp     0x437ee4
  437e85:	mov    edx,0x9bc2c124
  437e8a:	stos   BYTE PTR es:[edi],al
  437e8b:	mov    ds:0x3434ffb5,eax
  437e90:	pop    edi
  437e91:	pusha  
  437e92:	retf   
  437e93:	jnp    0x437ea4
  437e95:	add    BYTE PTR [esi-0x73af1fca],cl
  437e9b:	add    DWORD PTR ss:[esi-0x33],esp
  437e9f:	fldenv [edx+0x9]
  437ea2:	push   cs
  437ea3:	adc    BYTE PTR [ebx],0x0
  437ea6:	dec    esi
  437ea7:	mov    ecx,0x2b8
  437eac:	pop    es
  437ead:	add    bh,dh
  437eaf:	call   FWORD PTR [esi+0x75]
  437eb2:	adc    DWORD PTR [eax],eax
  437eb4:	pop    esi
  437eb5:	ss jbe 0x437eb2
  437eb8:	inc    esp
  437eb9:	and    eax,0x364f198a
  437ebe:	add    DWORD PTR [edi],ecx
  437ec0:	mov    cl,0xb0
  437ec2:	mov    bh,0xa
  437ec4:	push   ds
  437ec5:	ss push ds
  437ec7:	stc    
  437ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ec9:	arpl   ax,si
  437ecb:	mov    esp,DWORD PTR [esi+0x1e001374]
  437ed1:	add    ecx,edx
  437ed3:	jle    0x437e86
  437ed5:	es mov dl,0x90
  437ed8:	dec    esi
  437ed9:	xor    al,BYTE PTR [ecx]
  437edb:	add    BYTE PTR [edi+0x4d66ec5b],al
  437ee1:	fidivr DWORD PTR [ebp+0x48]
  437ee4:	(bad)  
  437ee5:	mov    al,0x44
  437ee7:	in     al,0x70
  437ee9:	das    
  437eea:	xchg   ecx,eax
  437eeb:	mov    eax,0x8b0135e0
  437ef0:	push   cs
  437ef1:	sbb    al,0x7f
  437ef3:	and    BYTE PTR [esi+0x4600011b],0x39
  437efa:	or     BYTE PTR [ebx+0x57f7cc13],cl
  437f00:	xchg   edx,eax
  437f01:	mov    dl,0x79
  437f03:	adc    al,0x15
  437f05:	ins    DWORD PTR es:[edi],dx
  437f06:	add    BYTE PTR [edx+0x13801e],cl
  437f0c:	mov    gs,WORD PTR [ebp+0xf0d]
  437f12:	aaa    
  437f13:	(bad)  
  437f14:	xchg   ebx,eax
  437f15:	mov    esp,0x85044b21
  437f1a:	add    ah,BYTE PTR [edi-0x3dca803]
  437f20:	adc    esp,DWORD PTR [esi]
  437f22:	jge    0x437f55
  437f24:	push   eax
  437f25:	jmp    0x8bb89fe6
  437f2a:	or     eax,DWORD PTR [ebp+0x74]
  437f2d:	xchg   edi,eax
  437f2f:	lahf   
  437f30:	sbb    al,BYTE PTR [eax]
  437f32:	aaa    
  437f33:	(bad)  
  437f34:	fdivr  st,st(3)
  437f36:	rcl    ebx,1
  437f38:	mov    ebx,0x44b29b8
  437f3d:	in     eax,0x17
  437f3f:	jns    0x437ec8
  437f41:	mov    eax,0x454f7
  437f46:	xchg   ecx,eax
  437f47:	push   ds
  437f48:	imul   eax,DWORD PTR [ebp+0x19d6af],0x37
  437f4f:	mov    ecx,0x40cfb805
  437f54:	add    al,0x0
  437f56:	xor    al,0xa0
  437f58:	jl     0x437ee1
  437f5a:	scas   eax,DWORD PTR es:[edi]
  437f5b:	neg    BYTE PTR [ecx]
  437f5d:	add    BYTE PTR [edi],dh
  437f5f:	(bad)  
  437f60:	mov    edi,DWORD PTR [ecx+ecx*2-0xa82fbb5]
  437f67:	dec    edi
  437f68:	jle    0x437f61
  437f6a:	xor    bl,cl
  437f6c:	loopne 0x437ef4
  437f6e:	sub    BYTE PTR [edi-0x15],0xcc
  437f72:	aad    0xd5
  437f74:	les    eax,FWORD PTR [edi]
  437f76:	add    BYTE PTR [eax],al
  437f78:	mov    esi,0x2e626917
  437f7d:	(bad)  [edx+edx*1+0x50854b37]
  437f84:	dec    ebx
  437f85:	aad    0x7c
  437f87:	mov    eax,0x88044b41
  437f8c:	cmp    esi,DWORD PTR [ecx+edi*8]
  437f8f:	mov    esp,?
  437f91:	push   edi
  437f92:	jmp    0x12f0a472
  437f97:	sbb    BYTE PTR [ecx+0x371a51a3],dh
  437f9d:	xor    al,0x73
  437f9f:	int3   
  437fa0:	xor    BYTE PTR [esi+ecx*8+0x2ea3ba10],ch
  437fa7:	sbb    dh,BYTE PTR [edi]
  437fa9:	xor    al,0x63
  437fab:	dec    DWORD PTR [edx+esi*1-0x3e]
  437faf:	pop    ss
  437fb0:	mov    BYTE PTR [ebx],ah
  437fb2:	adc    al,0x4e
  437fb4:	aad    0x64
  437fb6:	aas    
  437fb7:	test   DWORD PTR [ecx-0x7c6b9ebc],ecx
  437fbd:	sub    edx,ebp
  437fbf:	add    edx,ebp
  437fc1:	stos   BYTE PTR es:[edi],al
  437fc2:	cmp    BYTE PTR [ebp+eax*2+0x506aea34],0x35
  437fca:	jmp    0x31ea:0xc639503
  437fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437fd2:	bound  ebx,QWORD PTR [edx]
  437fd4:	aaa    
  437fd5:	xor    al,0x6b
  437fd7:	inc    ebx
  437fd8:	or     cl,BYTE PTR [ebp-0x7]
  437fdb:	add    al,BYTE PTR [eax]
  437fdd:	add    BYTE PTR [edi],dh
  437fdf:	xor    al,0xef
  437fe1:	mov    eax,0x3f476af
  437fe6:	aaa    
  437fe7:	or     esi,ecx
  437fe9:	mov    bh,BYTE PTR [esp+edi*1+0x63]
  437fed:	mov    WORD PTR [ebx+0x2203ea26],fs
  437ff3:	outs   dx,DWORD PTR ds:[esi]
  437ff4:	pop    eax
  437ff5:	jmp    0x47be0739
  437ffa:	xor    DWORD PTR [edx+ebp*8],esi
  437ffd:	mov    ah,BYTE PTR [eax+edx*2+0x48]
  438001:	push   ebp
  438002:	fldcw  WORD PTR [ebx-0x647f3ce]
  438008:	add    ch,cl
  43800a:	sahf   
  43800b:	ss xchg ecx,eax
  43800d:	jno    0x43804d
  43800f:	xor    al,0x1
  438011:	jb     0x437f97
  438013:	and    ecx,DWORD PTR [ebx+0x122cc69]
  438019:	jmp    0x6255b8da
  43801e:	jns    0x438073
  438020:	add    ah,BYTE PTR [ecx]
  438022:	pop    ds
  438023:	mov    ecx,0xecc3d579
  438028:	or     BYTE PTR [ebx-0x3c],ah
  43802b:	xchg   DWORD PTR [edi],ecx
  43802d:	jmp    0xf6512c66
  438032:	stos   DWORD PTR es:[edi],eax
  438033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438034:	mov    ch,0xf7
  438036:	xor    al,0x34
  438038:	mov    esp,ss
  43803a:	fdivr  DWORD PTR [esi]
  43803c:	push   eax
  43803d:	cmc    
  43803e:	test   DWORD PTR [ebx+ebp*1],esp
  438041:	xor    eax,DWORD PTR [eax]
  438043:	add    BYTE PTR [esi+0x70],cl
  438046:	call   0x868a81bd
  43804b:	popf   
  43804c:	cmp    al,BYTE PTR [edx+ecx*4+0x59]
  438050:	loopne 0x438073
  438052:	add    ecx,ebp
  438054:	stos   DWORD PTR es:[edi],eax
  438055:	loop   0x43804b
  438057:	xchg   DWORD PTR [ebp+0x34ffb97b],edi
  43805d:	xor    al,0xec
  43805f:	leave  
  438060:	push   cs
  438061:	mov    eax,0x342a2db9
  438066:	add    DWORD PTR [edi+0x618c558b],eax
  43806c:	test   al,0x21
  43806e:	add    ecx,ebp
  438070:	into   
  438071:	xor    eax,0x3441a1b9
  438076:	add    edx,ebp
  438078:	out    0x46,eax
  43807a:	mov    ah,BYTE PTR [ecx-0x9]
  43807d:	and    DWORD PTR [ecx],eax
  43807f:	jmp    0xf92c31
  438084:	fdiv   DWORD PTR [edx]
  438086:	add    DWORD PTR [ebx-0x68a4324],eax
  43808c:	xchg   edi,eax
  43808d:	inc    eax
  43808e:	dec    edi
  43808f:	mov    DWORD PTR [ebx-0x3c],ecx
  438092:	(bad)
  438097:	or     BYTE PTR [edi],al
  438099:	ins    DWORD PTR es:[edi],dx
  43809a:	in     al,0x66
  43809c:	xchg   edi,eax
  43809d:	mov    ds:0x328e16b9,al
  4380a2:	jle    0x4380f4
  4380a4:	pop    edx
  4380a5:	lods   al,BYTE PTR ds:[esi]
  4380a6:	cmp    DWORD PTR [eax+0x32880000],0x275a8801
  4380b0:	jle    0x4380f7
  4380b2:	mov    edx,0xe5145938
  4380b7:	aas    
  4380b8:	adc    al,0x8a
  4380ba:	into   
  4380bb:	adc    BYTE PTR [ebx],0x0
  4380be:	pop    esi
  4380bf:	test   eax,0x1bd60849
  4380c4:	or     cl,BYTE PTR [ebx+0x1373de]
  4380ca:	push   ds
  4380cb:	stos   DWORD PTR es:[edi],eax
  4380cc:	jl     0x4380ba
  4380ce:	pop    ds
  4380cf:	pop    edx
  4380d0:	adc    al,0xb1
  4380d2:	dec    BYTE PTR [ebx]
  4380d4:	mov    edi,0x75cd5d66
  4380d9:	ret    0xaf29
  4380dc:	xchg   ecx,eax
  4380dd:	mov    esp,0x66013208
  4380e2:	xchg   edi,eax
  4380e3:	cmp    BYTE PTR [ecx-0x21cdf1ea],0x13
  4380ea:	mov    eax,0xd766d6e2
  4380ef:	mov    eax,ds:0x31ce16b9
  4380f4:	jbe    0x4380b7
  4380f6:	leave  
  4380f7:	mov    al,0x89
  4380f9:	mov    esp,0x8b0131c8
  4380fe:	aaa    
  4380ff:	sbb    BYTE PTR [ecx+0x2d],bh
  438102:	in     eax,0xd4
  438104:	clc    
  438105:	jmp    0x4380b9
  438107:	test   cl,bh
  438109:	or     esi,ebp
  43810b:	rol    DWORD PTR [ebx],0x0
  43810e:	add    BYTE PTR [eax],al
  438110:	aaa    
  438111:	mov    cs,ecx
  438113:	div    DWORD PTR [ebx+ecx*2]
  438116:	add    al,0x0
  438118:	mov    WORD PTR ds:0x4d0aef3c,?
  43811e:	mov    ch,0x2
  438120:	aaa    
  438121:	dec    ebx
  438122:	add    al,0xc1
  438124:	cli    
  438125:	mov    ds:0x4b370003,al
  43812a:	imul   ecx,DWORD PTR [esi+ebp*4],0x56
  43812e:	add    al,0x0
  438130:	aaa    
  438131:	mov    cs,ecx
  438133:	idiv   DWORD PTR [ebx]
  438135:	dec    ebx
  438136:	add    al,0x0
  438138:	mov    ah,0x90
  43813a:	je     0x438140
  43813c:	push   ds
  43813d:	sub    BYTE PTR [ecx+ecx*1-0x4e],0x7
  438142:	jp     0x43813d
  438144:	inc    eax
  438145:	mov    ss,esi
  438147:	push   esp
  438148:	lods   al,BYTE PTR ds:[esi]
  438149:	lock loopne 0x438108
  43814c:	add    ecx,DWORD PTR [edi]
  43814e:	dec    eax
  43814f:	int3   
  438150:	sti    
  438151:	lahf   
  438152:	mov    ebp,esp
  438154:	xchg   dl,dl
  438156:	enter  0xac07,0xc4
  43815a:	mov    bh,0x12
  43815c:	aaa    
  43815d:	dec    ebx
  43815e:	rol    DWORD PTR [edx],cl
  438160:	or     BYTE PTR ds:0xe268f977,ah
  438166:	cld    
  438167:	push   DWORD PTR [edi]
  438169:	dec    ebx
  43816a:	xor    edi,0x3c
  43816d:	mov    ebp,0x1abc61cd
  438172:	fmulp  st(4),st
  438174:	add    BYTE PTR [eax],al
  438176:	aad    0xd1
  438178:	lds    edx,FWORD PTR [ebx]
  43817a:	scas   al,BYTE PTR es:[edi]
  43817b:	xor    esp,DWORD PTR ds:0x702b5580
  438181:	mov    esp,0x88ea3425
  438186:	gs sub al,0x64
  438189:	xchg   BYTE PTR [edi+0x25],bh
  43818c:	jmp    0xd02:0xd937bf03
  438193:	sub    BYTE PTR [esi+edx*4-0x18],ah
  438197:	and    eax,0xbdb203ea
  43819c:	cmc    
  43819d:	mov    ch,bh
  43819f:	sub    esi,DWORD PTR [ebx-0x39]
  4381a2:	mov    WORD PTR [ebx-0x5a45f30a],gs
  4381a8:	inc    esi
  4381a9:	push   ss
  4381aa:	aaa    
  4381ab:	xor    al,0xe9
  4381ad:	fld    QWORD PTR [ebx+eax*4-0x26]
  4381b1:	sub    DWORD PTR [ecx-0x2b],esi
  4381b4:	call   0xc58b:0x6d71e26c
  4381bb:	jg     0x4381b5
  4381bd:	add    esi,DWORD PTR [edi]
  4381bf:	(bad)  
  4381c0:	jo     0x438148
  4381c2:	(bad)  
  4381c3:	and    eax,0x205a03ea
  4381c8:	rcl    BYTE PTR [eax+0x57],0xd5
  4381cc:	lock test edi,ebp
  4381cf:	and    ch,dl
  4381d1:	add    ebp,DWORD PTR [edx-0x52751a8b]
  4381d7:	js     0x4381a9
  4381d9:	add    eax,DWORD PTR [eax]
  4381db:	add    BYTE PTR [edi],dh
  4381dd:	scas   eax,DWORD PTR es:[edi]
  4381de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4381df:	bts    DWORD PTR [edx+0x34371656],0xa2
  4381e7:	or     BYTE PTR [eax],0x30
  4381ea:	mov    ch,dl
  4381ec:	xchg   esi,eax
  4381ed:	scas   eax,DWORD PTR es:[edi]
  4381ee:	sbb    ah,dh
  4381f0:	add    edx,DWORD PTR [edi+0x73]
  4381f3:	into   
  4381f4:	inc    esp
  4381f5:	lods   eax,DWORD PTR ds:[esi]
  4381f6:	add    DWORD PTR [eax+eiz*2-0x64a8f62a],ebp
  4381fd:	es add ecx,ebp
  438200:	mov    edi,0xb27308e6
  438205:	jl     0x438216
  438207:	jmp    0xf8412e40
  43820c:	xor    eax,0xca730cde
  438211:	or     DWORD PTR [edi],0xffffffe9
  438214:	xor    al,0xb1
  438216:	ja     0x4381f5
  438218:	scas   eax,DWORD PTR es:[edi]
  438219:	out    dx,al
  43821a:	or     BYTE PTR [edx+0x71],ah
  43821d:	aas    
  43821e:	mov    ebp,edi
  438220:	inc    ebx
  438221:	mov    cl,0x8f
  438223:	pop    ebp
  438224:	and    dh,BYTE PTR [ecx+eax*1]
  438227:	call   0xf9f5a98e
  43822c:	dec    esi
  43822d:	jb     0x43828e
  43822f:	call   0xa6bd:0x74c2b8dc
  438236:	mov    ch,0xdf
  438238:	xor    al,0x34
  43823a:	pop    edi
  43823b:	pusha  
  43823c:	mov    dl,0x7c
  43823e:	psubsw mm0,QWORD PTR [eax]
  438241:	add    BYTE PTR [ecx+edx*2],dh
  438244:	adc    al,0xc7
  438246:	out    0x53,eax
  438248:	pop    edi
  438249:	loopne 0x438205
  43824b:	jl     0x43825c
  43824d:	jmp    0xed053b86
  438252:	mov    ebp,0x34d7b5ad
  438257:	xor    al,0x8c
  438259:	lods   al,BYTE PTR ds:[esi]
  43825a:	inc    esp
  43825b:	mov    cl,0x87
  43825d:	ins    DWORD PTR es:[edi],dx
  43825e:	inc    edx
  43825f:	xor    al,0x1
  438261:	push   0x74
  438263:	cmp    BYTE PTR [eax+eiz*1-0x70b141c8],al
  43826a:	scas   eax,DWORD PTR es:[edi]
  43826b:	arpl   WORD PTR [edi+0x3a],bx
  43826e:	xchg   esi,eax
  43826f:	mov    cl,0x47
  438271:	add    BYTE PTR [edx],dl
  438273:	scas   al,BYTE PTR es:[edi]
  438274:	inc    esp
  438275:	cld    
  438276:	mov    al,0x2d
  438278:	xchg   ebx,eax
  438279:	mov    eax,0x8b013700
  43827e:	shr    BYTE PTR [esi],0x7f
  438281:	xchg   BYTE PTR [esi+0x46000125],dl
  438287:	xor    al,0x8
  438289:	add    DWORD PTR [eax],ecx
  43828b:	and    al,0x7f
  43828d:	xchg   esi,eax
  43828e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43828f:	and    eax,0x3e250001
  438294:	adc    al,0x8b
  438296:	pop    eax
  438297:	sub    BYTE PTR [esi+0x45],bh
  43829a:	jmp    0xb5a6:0x150f0da7
  4382a1:	push   ss
  4382a2:	sahf   
  4382a3:	ss clc 
  4382a5:	pop    ebp
  4382a6:	add    BYTE PTR [eax],al
  4382a8:	cmp    BYTE PTR [edi+0x11],0x2a
  4382ac:	aam    0x55
  4382ae:	(bad)
  4382b1:	repnz in al,dx
  4382b3:	mov    DWORD PTR [eax],edx
  4382b5:	jl     0x4382ca
  4382b7:	add    BYTE PTR [esi+0x54],bl
  4382ba:	jg     0x438242
  4382bc:	es add DWORD PTR es:[eax],eax
  4382c0:	mov    ch,0x22
  4382c2:	arpl   bx,dx
  4382c4:	(bad)  
  4382c5:	push   ebp
  4382c6:	inc    DWORD PTR [ebp+0x12596]
  4382cc:	int    0xf0
  4382ce:	cld    
  4382cf:	mov    al,bl
  4382d1:	jnp    0x4382e6
  4382d3:	add    BYTE PTR [esi],bl
  4382d5:	add    edi,edx
  4382d7:	cmp    ebx,ebp
  4382d9:	and    eax,0x30888e0a
  4382de:	add    DWORD PTR [eax],eax
  4382e0:	xchg   ebp,eax
  4382e1:	scas   al,BYTE PTR es:[edi]
  4382e2:	mov    ch,0x16
  4382e4:	push   ds
  4382e5:	ss jbe 0x4382e1
  4382e8:	sbb    edi,DWORD PTR [edx+eiz*2]
  4382eb:	getsec 
  4382ed:	fst    DWORD PTR [ebx+0x48b768c]
  4382f3:	or     DWORD PTR [eax+0x3d7a92c7],ebp
  4382f9:	dec    ebx
  4382fa:	add    al,0x62
  4382fc:	lods   al,BYTE PTR ds:[esi]
  4382fd:	sbb    esp,ebx
  4382ff:	int3   
  438300:	aad    0xd6
  438302:	retf   0x5913
  438305:	inc    esp
  438306:	xchg   edx,eax
  438307:	mov    eax,0x9044b21
  43830c:	add    BYTE PTR [eax],al
  43830e:	mov    ecx,eax
  438310:	mov    ebx,0x874b3712
  438315:	push   edx
  438316:	aas    
  438317:	ret    
  438318:	(bad)  
  438319:	push   gs
  43831b:	adc    DWORD PTR [ecx],edx
  43831d:	or     ecx,ebp
  43831f:	loope  0x4382d5
  438321:	adc    dh,BYTE PTR [edi]
  438323:	dec    ebx
  438324:	xchg   DWORD PTR [edx+0x2b],ecx
  438327:	(bad)  
  438328:	rol    DWORD PTR [edi],1
  43832a:	mov    edi,0xa9850d37
  43832f:	fist   WORD PTR [ecx]
  438331:	add    BYTE PTR [edi],dh
  438333:	fcom   QWORD PTR [ebx]
  438335:	es jge 0x438361
  438338:	push   eax
  438339:	call   0x47cfea
  43833e:	aaa    
  43833f:	dec    esp
  438340:	ficom  DWORD PTR [ebx]
  438342:	mov    ah,0x8d
  438344:	outs   dx,DWORD PTR ds:[esi]
  438345:	bound  edi,QWORD PTR [esi+0x3712bbc9]
  43834b:	dec    ebx
  43834c:	test   DWORD PTR [edx+0x43983],edx
  438352:	dec    esp
  438353:	sub    eax,0xbeb8b20c
  438358:	mov    esp,0x8771373f
  43835d:	xchg   esp,eax
  43835e:	mov    ecx,0x37000680
  438363:	jno    0x4383b4
  438365:	ficomp WORD PTR [ecx-0x306e0ecc]
  43836b:	and    edx,ebp
  43836d:	add    eax,DWORD PTR [edx+0x8ceb73]
  438373:	add    BYTE PTR [ebp+0x3703f077],ch
  438379:	xor    eax,0x246c3e03
  43837e:	out    0x87,eax
  438380:	cmp    DWORD PTR [ecx],0xe6b279ef
  438386:	loope  0x438354
  438388:	mov    ebp,0x370476a1
  43838d:	xor    al,0x73
  43838f:	inc    edx
  438390:	iret   
  438391:	out    0xd1,al
  438393:	jns    0x438353
  438395:	lods   al,BYTE PTR ds:[esi]
  438396:	adc    eax,0x58a6f808
  43839b:	mov    WORD PTR [eax],?
  43839d:	xor    al,0xea
  43839f:	mov    WORD PTR [ebp+0x4b],?
  4383a2:	out    dx,al
  4383a3:	jnp    0x438343
  4383a5:	cmp    BYTE PTR [edi],al
  4383a7:	fnstsw WORD PTR [ebx+0x7b453d4e]
  4383ad:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4383af:	dec    eax
  4383b0:	jae    0x438419
  4383b2:	xor    eax,0x76b48b8d
  4383b7:	adc    al,0x2
  4383b9:	lods   eax,DWORD PTR ds:[esi]
  4383ba:	sbb    eax,0x10661a0c
  4383bf:	shr    DWORD PTR [ecx],1
  4383c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4383c2:	dec    edx
  4383c3:	adc    dh,BYTE PTR [edi]
  4383c5:	xor    al,0xd7
  4383c7:	jg     0x4383d1
  4383c9:	xor    eax,0x305203ea
  4383ce:	gs loopne 0x4383e5
  4383d1:	xor    al,0x63
  4383d3:	iret   
  4383d4:	inc    esp
  4383d5:	lods   al,BYTE PTR ds:[esi]
  4383d6:	bound  esp,QWORD PTR [eax+0x34450000]
  4383dc:	jmp    0xe78c:0x9928e608
  4383e3:	pushf  
  4383e4:	add    edi,ebx
  4383e6:	xor    al,0x34
  4383e8:	or     BYTE PTR [edi+0x47],dh
  4383eb:	push   es
  4383ec:	inc    ebx
  4383ed:	jo     0x4383df
  4383ef:	cmp    edi,DWORD PTR [esi+0x30]
  4383f2:	mov    dl,0xac
  4383f4:	mov    ch,0xff
  4383f6:	xor    al,0x34
  4383f8:	mov    dh,BYTE PTR [eax+eiz*2+0x33707e2d]
  4383ff:	xor    al,0x1
  438401:	out    dx,al
  438402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438403:	loopne 0x4383b8
  438405:	jmp    0x4383a6
  438407:	and    al,0x1
  438409:	jmp    0x713e9542
  43840e:	stc    
  43840f:	aas    
  438410:	cmp    al,0xae
  438412:	mov    esi,0x89e07d6
  438417:	mov    DWORD PTR [edi+0x62],ebx
  43841a:	push   es
  43841b:	rcl    bl,cl
  43841d:	retf   
  43841e:	mov    ebx,0x897008ec
  438423:	cmp    ebx,DWORD PTR [edi-0x20]
  438426:	les    edi,FWORD PTR [edi+ecx*1-0x17]
  43842a:	xor    al,0xb1
  43842c:	push   ecx
  43842d:	std    
  43842e:	mov    edx,0x34f7b99c
  438433:	xor    al,0x89
  438435:	cmc    
  438436:	and    eax,0xc3f5413d
  43843b:	in     al,dx
  43843c:	or     BYTE PTR [ebx+0x0],dh
  43843f:	add    ah,al
  438441:	jg     0x438452
  438443:	jmp    0xddbd357c
  438448:	stos   DWORD PTR es:[edi],eax
  438449:	fcomi  st,st(4)
  43844b:	popa   
  43844c:	inc    eax
  43844d:	sub    eax,0x2280798c
  438452:	add    ecx,ebp
  438454:	mov    edi,0x24980cf3
  438459:	push   cs
  43845a:	retf   
  43845b:	(bad)  
  43845c:	mov    ecx,DWORD PTR [edx-0x74]
  43845f:	add    bl,ah
  438461:	mov    edx,0xc324548b
  438466:	jg     0x4383f8
  438468:	mov    ds:0xf8000125,al
  43846d:	test   eax,0x3308b8b1
  438472:	add    ecx,ebp
  438474:	call   0x2da7:0xa8000131
  43847b:	mov    bl,0xb8
  43847d:	(bad)  
  43847f:	out    0x82,ax
  438482:	mov    ecx,0xf632ce16
  438487:	leave  
  438488:	aaa    
  438489:	dec    edx
  43848a:	idiv   bh
  43848c:	fisubr WORD PTR [ebx]
  43848e:	mov    bl,0xbe
  438490:	jle    0x4384fb
  438492:	cmp    BYTE PTR [eax],al
  438494:	rol    DWORD PTR [ebp+0x36c8bb8d],1
  43849a:	clc    
  43849b:	inc    ebp
  43849d:	pop    ds
  43849e:	add    DWORD PTR [eax],eax
  4384a0:	sahf   
  4384a1:	or     edi,ecx
  4384a3:	mov    DWORD PTR [eax],eax
  4384a5:	add    BYTE PTR [ebx-0x48],cl
  4384a8:	jge    0x4384ff
  4384aa:	xchg   esi,eax
  4384ab:	stc    
  4384ac:	mov    ebp,0xb22eff7e
  4384b1:	xchg   esp,eax
  4384b2:	adc    al,0x34
  4384b4:	std    
  4384b5:	dec    DWORD PTR [esi+0x28f054a7]
  4384bb:	jecxz  0x438493
  4384bd:	mov    edx,DWORD PTR [esi]
  4384bf:	sub    BYTE PTR [ebx+0x9],ah
  4384c2:	push   cs
  4384c3:	js     0x4384d8
  4384c5:	add    BYTE PTR [esi+0x2d],cl
  4384c8:	mov    bl,0x98
  4384ca:	es add DWORD PTR es:[eax],eax
  4384ce:	aad    0x5f
  4384d0:	adc    al,0x88
  4384d2:	xor    ah,BYTE PTR [ecx]
  4384d4:	cli    
  4384d5:	inc    eax
  4384d6:	dec    edx
  4384d7:	sub    eax,0xa43798b3
  4384dc:	pop    es
  4384dd:	add    BYTE PTR [edi],dh
  4384df:	rol    ah,cl
  4384e1:	adc    edi,DWORD PTR [ebx+ebx*4+0x5c43880c]
  4384e8:	mov    edx,DWORD PTR [eax+0x455db]
  4384ee:	mov    esp,0x77f974a8
  4384f3:	aaa    
  4384f4:	lods   eax,DWORD PTR ds:[esi]
  4384f5:	adc    BYTE PTR [ebp+0x1],cl
  4384f8:	xlat   BYTE PTR ds:[ebx]
  4384f9:	int3   
  4384fa:	or     al,0xd3
  4384fc:	leave  
  4384fd:	test   edx,0xbef00a7f
  438503:	fstp   TBYTE PTR [eax-0x29b4c8ee]
  438509:	xchg   BYTE PTR [eax],al
  43850b:	add    BYTE PTR [edi+0x37000703],bh
  438511:	xor    bl,BYTE PTR [edx+eiz*2]
  438514:	mov    esp,0x3b04b9b7
  438519:	dec    ebx
  43851a:	add    al,0x62
  43851c:	in     al,0x69
  43851e:	(bad)  
  43851f:	push   es
  438520:	(bad)  
  438521:	mov    ds:0x4a370006,eax
  438526:	leave  
  438527:	imul   DWORD PTR [esi+0x3712afc3]
  43852d:	dec    ebx
  43852e:	mov    ebx,DWORD PTR [edx+edx*8]
  438531:	arpl   WORD PTR [ebp-0x2f3dc8c1],di
  438537:	sti    
  438538:	scas   al,BYTE PTR es:[edi]
  438539:	clc    
  43853a:	ins    BYTE PTR es:[edi],dx
  43853b:	sbb    DWORD PTR [edi+edx*1-0x5],0x24
  438540:	sub    ebp,eax
  438542:	jecxz  0x438589
  438544:	test   DWORD PTR [edx-0x75],0x45da388
  43854b:	add    BYTE PTR [eax+0x3700045b],bl
  438551:	jb     0x4385ce
  438553:	xor    eax,0xd3e03478
  438558:	(bad)  
  438559:	test   al,0x58
  43855b:	(bad)  [ebx+0x4d]
  43855e:	arpl   bx,cx
  438560:	cmp    dh,cl
  438562:	loopne 0x43851f
  438564:	out    dx,eax
  438565:	sbb    eax,0x7e2e03ea
  43856a:	bound  edi,QWORD PTR [ebx-0x7515cbbb]
  438570:	add    BYTE PTR [eax],al
  438572:	(bad)  
  438573:	and    BYTE PTR [edx+0x17],ah
  438576:	inc    eax
  438577:	xor    eax,0x7e2e0faa
  43857c:	cmp    BYTE PTR [ebp+eiz*1+0x7f8aea34],0x2c
  438584:	arpl   bx,di
  438586:	inc    esp
  438587:	lods   al,BYTE PTR ds:[esi]
  438588:	fiadd  WORD PTR [esi]
  43858a:	mov    edx,0x370d369b
  43858f:	xor    al,0xef
  438591:	ret    0x8324
  438594:	fisubr DWORD PTR [ecx]
  438596:	repnz int 0xba
  438599:	mov    dx,0xd9e6
  43859d:	xchg   DWORD PTR [ebx+0x29],ebp
  4385a0:	fcmovu st,st(6)
  4385a2:	mov    ecx,0x370e9283
  4385a7:	xor    al,0xd3
  4385a9:	or     BYTE PTR ds:0x31dec061,dl
  4385af:	test   BYTE PTR [edx+0xe],dh
  4385b2:	aaa    
  4385b3:	xor    al,0xeb
  4385b5:	dec    eax
  4385b6:	mov    al,0xab
  4385b8:	pop    esi
  4385b9:	push   cs
  4385ba:	aaa    
  4385bb:	xor    al,0x34
  4385bd:	mov    esp,esp
  4385bf:	aaa    
  4385c0:	imul   edi,DWORD PTR [edx+0x37],0xda03ea33
  4385c7:	sub    ch,bh
  4385c9:	lods   eax,DWORD PTR ds:[esi]
  4385ca:	xchg   ecx,eax
  4385cb:	rcr    DWORD PTR [esi],cl
  4385cd:	les    ebx,FWORD PTR [eax+0x49]
  4385d0:	add    ebp,esp
  4385d2:	mov    edi,0x80c26d
  4385d7:	add    BYTE PTR [edx+0x2b],cl
  4385da:	scas   eax,DWORD PTR es:[edi]
  4385db:	cwde   
  4385dc:	pop    ebx
  4385dd:	in     al,dx
  4385de:	inc    eax
  4385df:	jmp    0xe6486e93
  4385e4:	jecxz  0x438596
  4385e6:	mov    dl,0xeb
  4385e8:	mov    edi,0x34dfb4bc
  4385ed:	xor    al,0xbc
  4385ef:	fnstenv [esp+esi*1]
  4385f2:	add    DWORD PTR [edx],eax
  4385f4:	push   0xffffffbb
  4385f6:	jne    0x438631
  4385f8:	dec    esi
  4385f9:	stc    
  4385fa:	jbe    0x438585
  4385fc:	scas   eax,DWORD PTR es:[edi]
  4385fd:	xchg   DWORD PTR ds:0xb370cbee,eax
  438603:	(bad)  
  438604:	mov    edi,0x553a5f05
  438609:	mov    ecx,0x3b02f148
  43860e:	xchg   ecx,eax
  43860f:	inc    ecx
  438610:	sub    DWORD PTR [ecx+eax*1],esi
  438613:	out    0xa2,al
  438615:	int3   
  438616:	mov    eax,0x8c3434d7
  43861b:	cmp    DWORD PTR [edi],esp
  43861d:	mov    esp,0x7443f814
  438622:	or     eax,0x8477c62
  438627:	xchg   edi,eax
  438628:	int3   
  438629:	jmp    0x438639
  43862b:	jmp    0xf1943f64
  438630:	lods   al,BYTE PTR ds:[esi]
  438631:	push   eax
  438632:	adc    ah,BYTE PTR [edx-0x5c]
  438635:	lock push cs
  438637:	jmp    0xfd84b370
  43863c:	add    BYTE PTR [eax],al
  43863e:	lds    eax,FWORD PTR [ebx+ebp*1-0x4d]
  438642:	pop    edx
  438643:	add    al,ch
  438645:	bound  edi,QWORD PTR [ecx+0x23]
  438648:	xchg   BYTE PTR ds:0x8a243d,dh
  43864e:	(bad)  
  43864f:	jmp    0xfc53:0xbc4e0012
  438656:	inc    eax
  438657:	mov    edi,0x3760b8b8
  43865c:	add    ebx,ebp
  43865e:	aaa    
  43865f:	mov    ebp,0xbc700c5b
  438664:	adc    al,0xb3
  438666:	add    BYTE PTR [esi+edx*8-0x4730e89a],al
  43866d:	push   ss
  43866e:	push   cs
  43866f:	aaa    
  438670:	test   dh,0xa7
  438673:	mov    edi,0x371e16b4
  438678:	jle    0x4386b6
  43867a:	adc    edi,0x37
  43867d:	inc    eax
  43867e:	push   cs
  43867f:	mov    esp,0xa893085b
  438684:	or     al,BYTE PTR [esi+ebx*2-0xafffec9]
  43868b:	inc    edx
  43868c:	mov    ah,0xd8
  43868e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43868f:	div    bh
  438691:	mov    ah,BYTE PTR [esi-0x15]
  438694:	adc    al,BYTE PTR [eax]
  438696:	fsubp  st(0),st
  438698:	adc    BYTE PTR [eax],al
  43869a:	fidiv  WORD PTR [esi]
  43869c:	push   ds
  43869d:	not    DWORD PTR ds:0x567b76
  4386a3:	add    BYTE PTR [eax-0x4d],dh
  4386a6:	out    0x66,eax
  4386a8:	in     eax,dx
  4386a9:	popf   
  4386aa:	jle    0x4386f4
  4386ac:	xchg   esi,eax
  4386ad:	sbb    al,0xff
  4386af:	scas   eax,DWORD PTR es:[edi]
  4386b0:	mov    dh,0x4d
  4386b2:	add    DWORD PTR [eax],eax
  4386b4:	mov    esp,ebp
  4386b6:	cwde   
  4386b7:	mov    eax,0x8b013670
  4386bc:	dec    esi
  4386bd:	dec    esp
  4386be:	mov    DWORD PTR [edi+ebx*2],ebx
  4386c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4386c2:	inc    ecx
  4386c3:	adc    al,0x89
  4386c5:	in     al,dx
  4386c6:	cwde   
  4386c7:	mov    ecx,0x43337
  4386cc:	mov    esp,0xef85194c
  4386d1:	and    al,0x7c
  4386d3:	sbb    al,0x29
  4386d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4386d6:	test   DWORD PTR [ecx+ebp*1-0x806fbe3],edi
  4386dd:	or     BYTE PTR [ebp-0x1499f2f0],ch
  4386e3:	int3   
  4386e4:	dec    ebp
  4386e5:	cli    
  4386e6:	je     0x438678
  4386e8:	out    dx,eax
  4386e9:	xor    DWORD PTR [eax+eax*1],eax
  4386ec:	mov    edx,0xacf026e7
  4386f1:	fdivr  st,st(3)
  4386f3:	xchg   bh,al
  4386f5:	scas   eax,DWORD PTR es:[edi]
  4386f6:	sbb    eax,DWORD PTR [eax]
  4386f8:	aaa    
  4386f9:	jbe    0x43870a
  4386fb:	(bad)  
  4386fc:	in     al,0x7d
  4386fe:	jmp    0x438706
  438700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438701:	xchg   ebx,eax
  438702:	sbb    eax,DWORD PTR [eax]
  438704:	aaa    
  438705:	push   ds
  438706:	inc    ebx
  438707:	xchg   DWORD PTR [eax],eax
  438709:	add    BYTE PTR [edi+0x37001b87],bh
  43870f:	xchg   esi,eax
  438710:	ret    0x1cf3
  438713:	mov    ds:0x1b37129d,eax
  438718:	add    edi,DWORD PTR [esi+0x2]
  43871b:	sub    BYTE PTR [ebx-0x7],dh
  43871e:	cmp    BYTE PTR [edx-0x70],ch
  438721:	(bad)  
  438722:	xor    al,0x1b
  438724:	add    al,0x85
  438726:	scas   eax,DWORD PTR es:[edi]
  438727:	iret   
  438728:	sbb    DWORD PTR [eax],eax
  43872a:	aaa    
  43872b:	leave  
  43872c:	adc    eax,DWORD PTR [eax]
  43872e:	aaa    
  43872f:	sbb    edx,DWORD PTR [edi]
  438731:	out    dx,al
  438732:	scas   al,BYTE PTR es:[edi]
  438733:	push   eax
  438734:	cmc    
  438735:	xor    al,0x69
  438737:	jno    0x438729
  438739:	or     al,cl
  43873b:	scas   al,BYTE PTR es:[edi]
  43873c:	add    al,0x4
  43873e:	aaa    
  43873f:	sbb    ebp,edx
  438741:	test   BYTE PTR [ecx+0x34],ch
  438744:	or     BYTE PTR [edi+0x59],dl
  438747:	mov    ebp,0x8fb9fc31
  43874c:	call   0x3719:0x51c431e9
  438753:	xor    al,0x73
  438755:	rol    DWORD PTR [esi+edi*4+0x61],cl
  438759:	stos   DWORD PTR es:[edi],eax
  43875a:	and    eax,0x2b7bea34
  43875f:	inc    ebx
  438760:	addr16 ret 
  438762:	and    al,0xbd
  438764:	loope  0x43877d
  438766:	mov    dl,0x7c
  438768:	bnd jge 0x438732
  43876b:	jmp    0xbd37:0x3f7
  438772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438773:	jae    0x438724
  438775:	inc    edi
  438776:	out    dx,eax
  438777:	jle    0x438740
  438779:	out    dx,eax
  43877a:	iret   
  43877b:	add    esi,DWORD PTR [edi]
  43877d:	xor    DWORD PTR [edx+0x443d817],ebp
  438783:	ds xchg ebp,eax
  438785:	add    eax,0x3c6c7e10
  43878a:	xlat   BYTE PTR gs:[ebx]
  43878c:	cmp    ah,BYTE PTR [ecx+eiz*2]
  43878f:	xchg   ebx,eax
  438790:	stos   DWORD PTR es:[edi],eax
  438791:	dec    ecx
  438792:	jmp    0x45ab:0x39bb5503
  438799:	xor    al,0xea
  43879b:	add    al,BYTE PTR [esi+0x3707ebbc]
  4387a1:	xor    al,0x87
  4387a3:	sar    DWORD PTR [ecx+0x371a95bb],1
  4387a9:	xor    al,0x43
  4387ab:	jge    0x438741
  4387ad:	mov    gs,WORD PTR [ebx-0x161b4c16]
  4387b3:	pop    es
  4387b4:	aaa    
  4387b5:	xor    al,0x48
  4387b7:	push   ebp
  4387b8:	xchg   ebp,eax
  4387b9:	nop
  4387ba:	inc    eax
  4387bb:	sti    
  4387bc:	loopne 0x4387a9
  4387be:	add    bh,bl
  4387c0:	xor    al,0x34
  4387c2:	add    al,0xa3
  4387c4:	cld    
  4387c5:	mov    ebx,0x3434ffb4
  4387ca:	or     BYTE PTR [esi-0x36],dl
  4387cd:	xor    DWORD PTR [ecx+ebp*8],eax
  4387d0:	xor    al,0x8e
  4387d2:	mov    bh,BYTE PTR [ecx+0x0]
  4387d5:	add    BYTE PTR [edi+0x6be90145],bl
  4387db:	mov    bh,0xdd
  4387dd:	sbb    al,0xfa
  4387df:	inc    esp
  4387e1:	xor    eax,DWORD PTR [esi-0x10]
  4387e4:	idiv   DWORD PTR [edx+0xa]
  4387e7:	hlt    
  4387e8:	test   DWORD PTR [edi-0x61],esi
  4387eb:	xor    eax,DWORD PTR [ecx]
  4387ed:	jmp    0x5f44ffa3
  4387f2:	jno    0x438823
  4387f4:	je     0x4387dd
  4387f6:	push   cs
  4387f7:	mov    cl,0x3a
  4387f9:	jmp    0x6a84fe1f
  4387fe:	je     0x438838
  438800:	rol    BYTE PTR [ebx-0x4e],cl
  438803:	sub    al,0x18
  438805:	scas   eax,DWORD PTR es:[edi]
  438806:	bound  edx,QWORD PTR [edx+0x34cb6784]
  43880c:	add    ecx,ebp
  43880e:	xor    al,0xa3
  438810:	sub    eax,0xb4eab38f
  438815:	jmp    0x7c44bc4e
  43881a:	cmp    dl,BYTE PTR [edx+0x34133f84]
  438820:	add    ecx,ebp
  438822:	xor    al,0xa3
  438824:	and    DWORD PTR [ecx],esi
  438826:	sbb    esi,DWORD PTR [ecx+eax*1]
  438829:	jmp    0xe8504267
  43882e:	xor    al,0x34
  438830:	xchg   ecx,eax
  438831:	dec    edi
  438832:	mov    dl,0x67
  438834:	add    DWORD PTR [ebp+esi*1+0x74],edx
  438838:	test   BYTE PTR [eax],al
  43883a:	add    BYTE PTR [eax],al
  43883c:	iret   
  43883d:	aaa    
  43883e:	cmp    al,0x0
  438840:	lahf   
  438841:	xor    eax,DWORD PTR [ecx]
  438843:	jl     0x4388b6
  438845:	push   0x3206c3c1
  43884a:	add    DWORD PTR [eax],eax
  43884c:	mov    ?,WORD PTR [eax-0x3b]
  43884f:	int3   
  438850:	mov    ds:0x8dccc56f,al
  438855:	jae    0x4388aa
  438857:	mov    edi,DWORD PTR [edi+0x6501e2b8]
  43885d:	jge    0x43889e
  43885f:	shl    DWORD PTR [edi-0x537a3ec8],1
  438865:	and    al,0xe8
  438867:	shl    DWORD PTR [esi+0x2ccb505],1
  43886d:	outs   dx,DWORD PTR ds:[esi]
  43886e:	(bad)
  438871:	outs   dx,DWORD PTR ds:[esi]
  438872:	(bad)
  438875:	stos   DWORD PTR es:[edi],eax
  438876:	mov    ch,0x16
  438878:	push   cs
  438879:	xor    eax,DWORD PTR [esi-0x7d]
  43887c:	ja     0x4388a9
  43887e:	jp     0x4388a2
  438880:	and    ebp,ebp
  438882:	cwde   
  438883:	mov    eax,0x8b0132e8
  438888:	sahf   
  438889:	inc    esi
  43888a:	jle    0x4388d4
  43888c:	push   es
  43888d:	stos   DWORD PTR es:[edi],eax
  43888e:	adc    eax,0x13f35111
  438893:	mov    edx,DWORD PTR [esi-0x29af81ba]
  438899:	xor    esi,DWORD PTR [ebx+0x14d7798]
  43889f:	add    BYTE PTR [eax],al
  4388a1:	add    BYTE PTR ds:0x40c98443,ah
  4388a7:	dec    ecx
  4388a8:	jle    0x4388f2
  4388aa:	(bad)  
  4388ab:	scas   eax,DWORD PTR es:[edi]
  4388ac:	push   ecx
  4388ad:	adc    al,0x44
  4388af:	sar    BYTE PTR [eax-0x76cd61ea],0x1c
  4388b6:	aaa    
  4388b7:	sub    al,0x67
  4388b9:	inc    eax
  4388ba:	dec    ebx
  4388bb:	dec    edx
  4388bc:	bound  ebp,QWORD PTR ss:[esi+0x3712a5a4]
  4388c3:	sbb    eax,0xecb8875
  4388c8:	add    al,0x0
  4388ca:	(bad)  
  4388cc:	inc    eax
  4388cd:	int3   
  4388ce:	imul   ebp,eax,0x40
  4388d1:	int3   
  4388d2:	and    eax,0x40
  4388d5:	int3   
  4388d6:	jnp    0x438947
  4388d8:	jl     0x4388c6
  4388da:	add    al,0x67
  4388dc:	jl     0x4388b5
  4388de:	lods   al,BYTE PTR ds:[esi]
  4388df:	stos   BYTE PTR es:[edi],al
  4388e0:	push   ebp
  4388e1:	mov    ss,WORD PTR [eax-0x53]
  4388e4:	push   0x414ca7d
  4388e9:	shl    DWORD PTR [edi+0x37000f68],0x25
  4388f0:	add    al,0x0
  4388f2:	aaa    
  4388f3:	pop    es
  4388f4:	ret    0x7f84
  4388f7:	das    
  4388f8:	jnp    0x43894a
  4388fa:	das    
  4388fb:	xchg   ebx,eax
  4388fc:	adc    DWORD PTR [edi],ecx
  4388fe:	sbb    ah,bl
  438900:	jne    0x8512ac6d
  438906:	add    BYTE PTR [eax],al
  438908:	(bad)  
  438909:	(bad)  
  43890b:	(bad)
  43890e:	cmc    
  43890f:	xchg   DWORD PTR [ebx],ebp
  438911:	cs addr16 inc eax
  438914:	dec    ebx
  438915:	mov    ds:0xebbc13e5,al
  43891a:	sti    
  43891b:	test   esp,ebp
  43891d:	inc    ebp
  43891e:	dec    esi
  43891f:	mov    BYTE PTR [ebx],ch
  438921:	push   cs
  438922:	addr16 inc eax
  438924:	sub    esp,DWORD PTR [edx-0x3443ec1b]
  43892a:	sti    
  43892b:	test   ah,ch
  43892d:	es dec ebp
  43892f:	mov    edi,0x7bf234ce
  438934:	inc    ebx
  438935:	inc    ebp
  438936:	xlat   BYTE PTR ds:[ebx]
  438937:	ret    
  438938:	inc    esp
  438939:	lea    esp,[ebp+0x4a]
  43893c:	sub    ecx,DWORD PTR [edx+0x63]
  43893f:	mov    ebx,0xfc19b944
  438944:	sti    
  438945:	mov    edx,0x4eb2fc14
  43894a:	bound  ecx,QWORD PTR [edi]
  43894c:	xor    BYTE PTR [ecx+0x747ffc04],bh
  438952:	test   ch,0xb5
  438955:	or     DWORD PTR ds:0x2d890d66,ecx
  43895b:	inc    ebx
  43895c:	jae    0x43895e
  43895e:	xchg   esi,eax
  43895f:	aas    
  438960:	imul   eax,DWORD PTR [eax],0xffffffae
  438963:	aas    
  438964:	add    DWORD PTR [eax],0xffffffa6
  438967:	aas    
  438968:	jnp    0x43896a
  43896a:	adc    eax,0x5300007b
  43896f:	mov    cl,0x75
  438971:	and    esp,ebp
  438973:	mov    esi,0xfb6261d4
  438978:	mov    eax,ds:0xea343704
  43897d:	sbb    al,BYTE PTR ds:0x96c20dbf
  438983:	mov    ecx,0x961738b5
  438988:	jmp    0x4389fe
  43898a:	xchg   ebp,eax
  43898b:	xor    DWORD PTR [eax],edi
  43898d:	inc    bh
  43898f:	std    
  438990:	mov    edi,0xa776b7c
  438995:	ret    
  438996:	jae    0x4389c4
  438998:	out    0xed,eax
  43899a:	aam    0x60
  43899c:	sbb    BYTE PTR [eax-0x14153f6],cl
  4389a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4389a3:	xchg   DWORD PTR [edi],esi
  4389a5:	add    DWORD PTR [ecx+eax*1-0x1ac1ea92],esi
  4389ac:	add    BYTE PTR [ebp+0x218c0cdf],ch
  4389b2:	hlt    
  4389b3:	xchg   edx,eax
  4389b4:	mov    ch,BYTE PTR ds:0x89e90c88
  4389ba:	sbb    DWORD PTR [ebx],ebp
  4389bc:	clc    
  4389bd:	dec    edi
  4389be:	sbb    al,0x38
  4389c0:	mov    al,0x27
  4389c2:	dec    esi
  4389c3:	pop    ds
  4389c4:	ja     0x43896b
  4389c6:	xor    DWORD PTR [edi-0x9e323],0x1ffe1cc4
  4389d0:	test   BYTE PTR [ebp-0x48850000],bh
  4389d6:	cmp    eax,0x8c8387f1
  4389db:	loope  0x4389cc
  4389dd:	jae    0x4389e8
  4389df:	bound  ecx,QWORD PTR [ebx-0x480e73c8]
  4389e5:	hlt    
  4389e6:	idiv   DWORD PTR [edx-0x7eb24b0c]
  4389ec:	int3   
  4389ed:	js     0x4389e4
  4389ef:	scas   al,BYTE PTR es:[edi]
  4389f0:	mov    ecx,0x34e90d83
  4389f5:	xor    al,0x1
  4389f7:	jmp    0xb5c27f30
  4389fc:	inc    eax
  4389fd:	xor    al,0x1
  4389ff:	adc    al,0x35
  438a01:	xor    al,0x1
  438a03:	test   DWORD PTR fs:[esi+0x68b7cf2f],ebp
  438a0a:	sub    cl,0x0
  438a0d:	dec    edx
  438a0e:	clc    
  438a0f:	outs   dx,DWORD PTR ds:[esi]
  438a10:	jmp    0x438a59
  438a12:	add    ecx,ebp
  438a14:	jg     0x4389dc
  438a16:	push   eax
  438a17:	std    
  438a18:	xor    al,0x34
  438a1a:	mov    ah,BYTE PTR [ebp-0x3f]
  438a1d:	mov    BYTE PTR [ecx+ebp*8],cl
  438a20:	xor    al,0xb3
  438a22:	cmp    eax,0x30b0710d
  438a27:	add    BYTE PTR [esi-0x21fffebd],dl
  438a2d:	lods   al,BYTE PTR ds:[esi]
  438a2e:	leave  
  438a2f:	jmp    0x438a02
  438a31:	fs (bad) 
  438a33:	push   di
  438a35:	or     al,0x81
  438a37:	add    al,BYTE PTR [eax]
  438a39:	add    BYTE PTR [esi+0x5d],bl
  438a3c:	inc    esp
  438a3d:	clc    
  438a3e:	or     ch,BYTE PTR [esi+0x76]
  438a41:	mov    esi,0x14c5e
  438a46:	mov    WORD PTR [edx],ds
  438a48:	inc    edi
  438a49:	xor    DWORD PTR [edi+0x35],0x7c
  438a4d:	add    eax,0xebb8ad5f
  438a52:	mov    WORD PTR [ecx+eax*8-0x1],fs
  438a56:	adc    BYTE PTR [edi],al
  438a58:	adc    al,0x0
  438a5a:	pop    esi
  438a5b:	lods   al,BYTE PTR ds:[esi]
  438a5c:	xchg   ebx,eax
  438a5d:	push   eax
  438a5e:	bound  esi,QWORD PTR [edi]
  438a60:	add    DWORD PTR [ecx+0xb54c0d2],ecx
  438a66:	dec    esi
  438a67:	aaa    
  438a68:	scas   eax,DWORD PTR es:[edi]
  438a69:	add    DWORD PTR [esi+0x37],ebx
  438a6c:	add    DWORD PTR [esi-0x39],esp
  438a6f:	inc    edx
  438a70:	add    dh,0xd2
  438a73:	xor    BYTE PTR [ecx+0x14],bl
  438a76:	dec    esi
  438a77:	aaa    
  438a78:	add    edi,edi
  438a7a:	test   al,0xcf
  438a7c:	adc    al,BYTE PTR [eax]
  438a7e:	push   ds
  438a7f:	mov    dl,0xcd
  438a81:	je     0x438a98
  438a83:	sub    BYTE PTR [ecx+0x20358d44],dh
  438a89:	xchg   BYTE PTR [edx-0x62fffec0],ch
  438a8f:	fst    DWORD PTR [eax+0x14]
  438a92:	push   cs
  438a93:	aaa    
  438a94:	idiv   DWORD PTR [ebx+0x7c]
  438a97:	scas   al,BYTE PTR es:[edi]
  438a98:	dec    esp
  438a99:	cld    
  438a9a:	add    al,BYTE PTR gs:[eax]
  438a9d:	mov    DWORD PTR [eax],eax
  438a9f:	add    BYTE PTR [edx+esi*1-0x12c87982],ah
  438aa6:	(bad)  
  438aa8:	aaa    
  438aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438aaa:	sbb    DWORD PTR [esi-0xaacab44],edi
  438ab0:	mov    ah,0x35
  438ab2:	add    edi,DWORD PTR [esi+eiz*1-0x32]
  438ab6:	js     0x438a7a
  438ab8:	iret   
  438ab9:	test   BYTE PTR [edi-0x7],dl
  438abc:	mov    al,0x65
  438abe:	add    ah,0x33
  438ac1:	sahf   
  438ac2:	push   0x77f223ff
  438ac7:	inc    ebx
  438ac8:	lahf   
  438ac9:	xchg   ebx,eax
  438aca:	ret    0x9cf7
  438acd:	sbb    DWORD PTR [ecx-0x5c],edi
  438ad0:	push   ebx
  438ad1:	sbb    eax,0x96370004
  438ad6:	adc    DWORD PTR [eax+0x23],0x1d
  438ada:	add    al,0x85
  438adc:	ret    
  438add:	call   0x9a77:0x1d3704c9
  438ae4:	xlat   BYTE PTR ds:[ebx]
  438ae5:	adc    eax,0x93ef0004
  438aea:	adc    DWORD PTR [eax+0x2b],0x1d
  438aee:	add    al,0x66
  438af0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  438af2:	inc    ebx
  438af3:	xchg   DWORD PTR [ecx+0x38fff83c],esi
  438af9:	mov    ah,0xd3
  438afb:	jmp    0x2697:0x82789330
  438b02:	add    al,0x0
  438b04:	add    BYTE PTR [eax],al
  438b06:	mov    ah,0x55
  438b08:	ins    BYTE PTR es:[edi],dx
  438b09:	inc    edx
  438b0b:	fild   WORD PTR [edi]
  438b0d:	add    BYTE PTR [edi],dh
  438b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438b10:	jnp    0x438b66
  438b12:	and    ebx,DWORD PTR [ebx]
  438b14:	add    al,0x87
  438b16:	mov    ds:0x3704c991,eax
  438b1b:	sbb    edi,ebp
  438b1d:	xchg   ecx,eax
  438b1e:	mov    esi,DWORD PTR [esi+esi*8]
  438b21:	add    esi,DWORD PTR [edi]
  438b23:	mov    ebp,0x3444d067
  438b28:	jmp    0xd0fe:0xa5bab37c
  438b2f:	sub    DWORD PTR [eax+0x7fb1237e],ecx
  438b35:	push   es
  438b36:	sub    ecx,ecx
  438b38:	bound  edi,QWORD PTR [ecx+0x106192c0]
  438b3e:	mov    esi,0xf0975be
  438b43:	inc    eax
  438b44:	jmp    0x44cb:0xe7b8b903
  438b4b:	xor    al,0xea
  438b4d:	xchg   BYTE PTR [ebx+0x30],bh
  438b50:	add    al,0x55
  438b52:	ds loop 0x438af0
  438b55:	test   BYTE PTR [ebx-0x4dab87c6],0x77
  438b5c:	mov    dl,0x69
  438b5e:	mov    cl,0xbc
  438b60:	jne    0x438b5b
  438b62:	add    BYTE PTR [eax-0x16],al
  438b65:	add    ebp,DWORD PTR [esi]
  438b67:	loope  0x438b21
  438b69:	loope  0x438b6b
  438b6b:	add    BYTE PTR [ecx-0x2afaa080],dh
  438b71:	mov    edx,0xbc498b15
  438b76:	jcxz   0x438bb4
  438b79:	xor    al,0xea
  438b7b:	(bad)  
  438b7c:	shl    BYTE PTR [edx],cl
  438b7e:	arpl   WORD PTR [ecx-0x48],ax
  438b81:	jbe    0x438be5
  438b83:	pop    ebx
  438b84:	stc    
  438b85:	pop    ss
  438b86:	push   edi
  438b87:	push   0xffffffa2
  438b89:	lock in eax,0x86
  438b8c:	fld    QWORD PTR [ebx+0x363703ee]
  438b92:	out    dx,eax
  438b93:	js     0x438bde
  438b95:	sub    DWORD PTR [edi],esi
  438b97:	push   0xfffffffe
  438b99:	mov    ecx,0x34289d00
  438b9e:	add    DWORD PTR [edx-0x4a],esp
  438ba1:	jg     0x438bb0
  438ba3:	jmp    0x89d23adc
  438ba8:	loope  0x438bd2
  438baa:	clc    
  438bab:	bound  ebx,QWORD PTR [edi-0x498a75d0]
  438bb1:	xchg   DWORD PTR [ecx+ebp*8],ecx
  438bb4:	xor    al,0xaf
  438bb6:	mov    esi,0xf81dcd11
  438bbb:	idiv   BYTE PTR [edx]
  438bbd:	(bad)  
  438bbe:	cmc    
  438bbf:	pop    esp
  438bc0:	(bad)  
  438bc1:	addr16 or al,0xe9
  438bc4:	xor    al,0x1c
  438bc6:	mov    dl,0xdc
  438bc8:	push   cs
  438bc9:	sub    ebx,DWORD PTR [eax+0x32]
  438bcc:	sbb    dl,BYTE PTR ds:0xaa56
  438bd2:	dec    edi
  438bd3:	clc    
  438bd4:	les    esi,FWORD PTR [ebp-0x523b07b1]
  438bda:	aas    
  438bdb:	clc    
  438bdc:	les    ebx,FWORD PTR [edi]
  438bde:	cli    
  438bdf:	and    ecx,DWORD PTR [edi+eiz*2-0x16fed0c1]
  438be6:	loope  0x438ba5
  438be8:	mov    ecx,gs
  438bea:	xor    al,0x34
  438bec:	dec    edi
  438bed:	sbb    DWORD PTR [edx-0x2d7107e5],0x34f228b5
  438bf7:	xor    al,0x86
  438bf9:	outs   dx,DWORD PTR ds:[esi]
  438bfa:	ret    
  438bfb:	xor    BYTE PTR [ecx],al
  438bfd:	jmp    0x7e7d9c68
  438c02:	sahf   
  438c03:	sub    eax,0x31636f86
  438c08:	add    ecx,ebp
  438c0a:	add    al,0x10
  438c0c:	(bad)  
  438c0d:	push   esp
  438c0e:	mov    gs,WORD PTR ds:0xe00f2584
  438c14:	adc    al,BYTE PTR [eax]
  438c16:	push   ds
  438c17:	xor    al,0x1
  438c19:	jmp    0x438c28
  438c1b:	lahf   
  438c1c:	inc    eax
  438c1d:	add    BYTE PTR [ecx],dl
  438c1f:	out    0x88,al
  438c21:	mov    WORD PTR [edi+0x5d65f7f3],ds
  438c27:	fmul   QWORD PTR [edx+0x133e47e]
  438c2d:	add    BYTE PTR [ebx+0x4eb6090a],bh
  438c33:	test   eax,0x4038
  438c38:	ficom  WORD PTR ds:0x1a68bc75
  438c3e:	(bad)  
  438c3f:	dec    esi
  438c41:	xor    esi,DWORD PTR [eax+edi*1-0x6f]
  438c45:	in     eax,0x88
  438c47:	mov    bl,BYTE PTR [edi-0x10]
  438c4a:	mul    DWORD PTR [ebp+0xd]
  438c4d:	iret   
  438c4e:	mov    bh,BYTE PTR [esi-0x6c]
  438c51:	xor    eax,DWORD PTR [ecx]
  438c53:	add    bl,ch
  438c55:	pusha  
  438c56:	or     dh,BYTE PTR [esi+0x4038a9ee]
  438c5c:	mov    ss,WORD PTR ds:0x1cd8bc75
  438c62:	(bad)  
  438c63:	call   FWORD PTR [esi+0x33]
  438c66:	je     0x438c98
  438c68:	fisttp QWORD PTR [edx+0x309682fd]
  438c6e:	jl     0x438c20
  438c70:	rcr    esi,cl
  438c72:	aaa    
  438c73:	adc    DWORD PTR [edi-0x53],ebx
  438c76:	test   eax,0x5b335e16
  438c7b:	ret    
  438c7c:	push   es
  438c7d:	lahf   
  438c7e:	inc    ebp
  438c7f:	inc    eax
  438c80:	pop    edi
  438c81:	xor    cl,BYTE PTR [ebx+0x13308a8]
  438c87:	pop    esi
  438c88:	pop    ebp
  438c89:	mov    al,0xe8
  438c8b:	add    dl,BYTE PTR [ebx+0x371137df]
  438c91:	sbb    al,0x7a
  438c93:	test   al,0x29
  438c95:	sbb    eax,0x99f45a04
  438c9a:	pop    esp
  438c9b:	std    
  438c9c:	add    BYTE PTR [eax],al
  438c9e:	mov    bl,0xd8
  438ca0:	ret    
  438ca1:	push   cs
  438ca2:	ss (bad) 
  438ca4:	pushf  
  438ca5:	adc    dh,BYTE PTR [edi]
  438ca7:	sbb    eax,0x60fbbcca
  438cac:	xor    ah,cl
  438cae:	repz pop eax
  438cb0:	xor    ah,cl
  438cb2:	jmp    0x438c9b
  438cb4:	je     0x438ca2
  438cb6:	mov    esp,0xbf84fbcf
  438cbb:	jo     0x438ccf
  438cbd:	add    BYTE PTR [edi],dh
  438cbf:	call   0x51cc:0xb4390b6b
  438cc6:	mov    esp,0xbc62089f
  438ccb:	out    0xd6,al
  438ccd:	int3   
  438cce:	xchg   ebp,eax
  438ccf:	mov    eax,ds:0x141107b5
  438cd4:	xchg   esp,eax
  438cd5:	mov    eax,0x9041d29
  438cda:	rcl    DWORD PTR [ebp+eiz*4+0x7b1d3712],0x50
  438ce2:	and    edx,DWORD PTR [ebp-0x60bff0f7]
  438ce8:	test   DWORD PTR [edi-0x6fbe2bf],esi
  438cee:	mul    DWORD PTR [eax]
  438cf0:	jnp    0x438d3a
  438cf2:	inc    ebx
  438cf3:	xchg   edx,eax
  438cf4:	int    0x7
  438cf6:	mov    edi,0xa7850d18
  438cfb:	jo     0x438d04
  438cfd:	add    BYTE PTR [edi],dh
  438cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438d00:	mov    ebp,0x86000013
  438d05:	or     al,0x1a
  438d07:	(bad)  
  438d08:	cdq    
  438d09:	retf   0x854e
  438d0c:	jp     0x438d42
  438d0e:	cli    
  438d0f:	and    cl,0x21
  438d12:	jno    0x438ca8
  438d14:	fstp   TBYTE PTR [esi]
  438d16:	jmp    0xb1dd:0xd67fba03
  438d1d:	in     al,0x81
  438d1f:	push   cs
  438d20:	aaa    
  438d21:	xor    al,0x98
  438d23:	retf   0x3392
  438d26:	inc    edx
  438d27:	cmp    ebp,edx
  438d29:	and    eax,0x30f38327
  438d2e:	mov    ebp,0xacb95542
  438d33:	andnps xmm0,XMMWORD PTR [ecx]
  438d36:	or     al,0x83
  438d38:	nop
  438d39:	xor    DWORD PTR [ecx+0x7c],esp
  438d3c:	mov    edi,DWORD PTR [esi]
  438d3e:	jmp    0x31dd:0xda77ba03
  438d45:	les    esi,FWORD PTR [ecx]
  438d47:	push   cs
  438d48:	aaa    
  438d49:	xor    al,0x63
  438d4b:	sar    DWORD PTR [edx+ebx*4],1
  438d4e:	jmp    0xd76d4eae
  438d53:	data16 sbb dh,al
  438d56:	in     eax,0xc8
  438d58:	sar    eax,cl
  438d5a:	xchg   ebp,eax
  438d5b:	aaa    
  438d5c:	jnp    0x438d56
  438d5e:	lods   eax,DWORD PTR ds:[esi]
  438d5f:	aaa    
  438d60:	jae    0x438d5a
  438d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438d63:	aaa    
  438d64:	imul   edi,eax,0x14
  438d67:	jnp    0x438d69
  438d69:	add    BYTE PTR [ebx-0x7d],ah
  438d6c:	sbb    edi,DWORD PTR [ebx+0xc]
  438d6f:	inc    esp
  438d70:	cmp    BYTE PTR [ebx-0x1c],bh
  438d73:	cmp    ebp,DWORD PTR [ebx-0x5b]
  438d76:	mov    bl,0x34
  438d78:	jmp    0x4cc0:0x9f7d3703
  438d7f:	xor    al,0xea
  438d81:	add    esi,DWORD PTR [edi]
  438d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438d84:	sbb    edi,DWORD PTR [ebx-0x3]
  438d87:	mov    al,0x0
  438d89:	test   BYTE PTR [eax+0x26],0x6d
  438d8d:	loope  0x438d1b
  438d8f:	mov    ds:0xad9966fb,al
  438d94:	aas    
  438d95:	or     eax,0xe218b29e
  438d9a:	xor    al,0x34
  438d9c:	push   ecx
  438d9d:	inc    ecx
  438d9e:	leave  
  438d9f:	sub    al,bh
  438da1:	inc    esi
  438da2:	jg     0x438d5e
  438da4:	sbb    al,0xf2
  438da6:	xor    al,0x34
  438da8:	push   edx
  438da9:	inc    ecx
  438daa:	sbb    eax,0xb52ef828
  438daf:	out    dx,eax
  438db0:	or     BYTE PTR [edx+0x22],dh
  438db3:	sbb    al,0x32
  438db5:	pop    ds
  438db6:	push   ecx
  438db7:	sub    ecx,DWORD PTR [edi+edi*2-0x16febe54]
  438dbe:	dec    ebp
  438dbf:	mov    edx,0x3434dfa4
  438dc4:	test   BYTE PTR [ebx],ch
  438dc6:	mov    esi,0xfbe3c2a7
  438dcb:	or     eax,0x2804
  438dd0:	or     esp,DWORD PTR [edi]
  438dd2:	mov    DWORD PTR [edi+ecx*1],ebp
  438dd5:	pop    edi
  438dd6:	retf   
  438dd7:	push   esi
  438dd8:	call   0x8c31:0xce64040f
  438ddf:	mov    eax,0x1fd6700
  438de4:	cmc    
  438de5:	mov    ds:0x38b8721c,al
  438dea:	jle    0x438d95
  438dec:	addr16 inc eax
  438dee:	mov    WORD PTR [edi+eax*2],gs
  438df1:	adc    DWORD PTR [ecx+edi*1+0x71],0xc
  438df6:	ret    0xd29f
  438df9:	sub    al,BYTE PTR [ebp+ebp*4-0x17baf2d5]
  438e00:	xor    al,0x34
  438e02:	test   BYTE PTR [eax],al
  438e04:	clc    
  438e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438e06:	add    DWORD PTR [eax],eax
  438e08:	dec    esi
  438e09:	and    al,0x9
  438e0b:	test   BYTE PTR [ebx+0x38],dh
  438e0e:	add    DWORD PTR [eax],eax
  438e10:	in     eax,0x5d
  438e12:	or     al,BYTE PTR [ebx+ecx*8-0x5afffec8]
  438e19:	stos   BYTE PTR es:[edi],al
  438e1a:	mov    ch,0x16
  438e1c:	push   ds
  438e1d:	cmp    BYTE PTR [esi+0x7d],bh
  438e20:	add    ch,BYTE PTR [ebx-0x7072fbae]
  438e26:	or     al,0x7e
  438e28:	pushf  
  438e29:	add    DWORD PTR [ebp-0x3e],edi
  438e2c:	add    BYTE PTR [ebp+0x33c88be1],al
  438e32:	arpl   WORD PTR [ecx],cx
  438e34:	add    BYTE PTR [eax],al
  438e36:	push   eax
  438e37:	rcl    BYTE PTR [edx],1
  438e39:	add    dh,cl
  438e3b:	sub    BYTE PTR [edx+0x132669e],dh
  438e41:	add    BYTE PTR [ebp-0x1e],dl
  438e44:	inc    DWORD PTR [edi+0x46fa36da]
  438e4a:	loop   0x438e74
  438e4c:	mov    dl,0x9e
  438e4e:	xor    al,BYTE PTR [bx+di]
  438e51:	add    BYTE PTR ds:0x688b13e2,dl
  438e57:	and    BYTE PTR [eax-0x7c6359e4],al
  438e5d:	mov    esp,0xff013790
  438e62:	push   eax
  438e63:	inc    esp
  438e64:	test   al,0x10
  438e66:	and    al,0x60
  438e68:	arpl   bx,dx
  438e6a:	fs mov ah,0xc0
  438e6d:	repz xlat BYTE PTR ds:[ebx]
  438e6f:	mov    al,ds:0x375e16b5
  438e74:	arpl   WORD PTR [ecx+0x12cee0],cx
  438e7a:	dec    esi
  438e7b:	jl     0x438e83
  438e7d:	data16 aaa 
  438e7f:	fisub  WORD PTR [ecx+0x62]
  438e82:	ds stos DWORD PTR es:[edi],eax
  438e84:	lods   al,BYTE PTR ds:[esi]
  438e85:	adc    dh,BYTE PTR [edi]
  438e87:	or     eax,0xa434bf81
  438e8c:	outs   dx,BYTE PTR ds:[esi]
  438e8d:	mov    esp,0x85040d49
  438e92:	jb     0x438e25
  438e94:	jns    0x438e20
  438e96:	dec    edi
  438e97:	es add al,0x0
  438e9a:	add    BYTE PTR [eax],al
  438e9c:	lods   al,BYTE PTR ds:[esi]
  438e9d:	stos   BYTE PTR es:[edi],al
  438e9e:	add    BYTE PTR ds:0x4fc40d37,al
  438ea4:	jbe    0x438e82
  438ea6:	ror    DWORD PTR [ebp+0xf],0x11
  438eaa:	jno    0x438ea5
  438eac:	clc    
  438ead:	(bad)  
  438eae:	jbe    0x438e38
  438eb0:	ds or  eax,0x82ba5004
  438eb6:	mov    BYTE PTR [eax],al
  438eb8:	aaa    
  438eb9:	or     eax,0x44f184d3
  438ebe:	sbb    eax,0x8149d0f3
  438ec3:	les    esp,FWORD PTR [ebx]
  438ec5:	xor    al,0x7a
  438ec7:	add    BYTE PTR [edi],dh
  438ec9:	or     eax,0xa7b8a79
  438ece:	add    al,0x0
  438ed0:	mov    esp,0xf08b08a7
  438ed5:	push   cs
  438ed6:	xor    edi,0x61af9b32
  438edc:	lods   al,BYTE PTR ds:[esi]
  438edd:	fsub   st(2),st
  438edf:	int3   
  438ee0:	xchg   ebp,eax
  438ee1:	xchg   ebp,eax
  438ee2:	rcl    DWORD PTR [ebx],cl
  438ee4:	adc    DWORD PTR [edx+edi*2],edx
  438ee7:	mov    eax,0x9040d29
  438eec:	rol    DWORD PTR [edx+0xd371295],0x87
  438ef3:	push   edx
  438ef4:	aas    
  438ef5:	xchg   ebp,eax
  438ef6:	add    DWORD PTR [edi],ecx
  438ef8:	pusha  
  438ef9:	xor    ebp,DWORD PTR [eax]
  438efb:	clc    
  438efc:	das    
  438efd:	jmp    0x3425:0x9d77
  438f04:	jmp    0x38ba:0x6347fd8e
  438f0b:	lods   al,BYTE PTR ds:[esi]
  438f0c:	(bad)  
  438f0e:	mov    bl,0xc9
  438f10:	xor    eax,0x6f2230fa
  438f15:	retf   0xe344
  438f18:	fldcw  WORD PTR ds:0x6c3b9af9
  438f1e:	call   0xf7e0:0xa58d5af6
  438f25:	add    esi,DWORD PTR [edi]
  438f27:	call   0x3ea:0x4abf8a61
  438f2e:	adc    al,BYTE PTR [esi-0x40]
  438f31:	xlat   BYTE PTR ss:[ebx]
  438f33:	call   0x3ea:0x4aaf89e1
  438f3a:	(bad)  
  438f3c:	jmp    0x3703:0xefe0ad8c
  438f43:	mov    WORD PTR [edx],es
  438f45:	retf   0x3408
  438f48:	sub    bl,0x2
  438f4b:	je     0x438f37
  438f4d:	mov    ?,ebp
  438f4f:	or     al,0x3a
  438f51:	pop    eax
  438f52:	scas   al,BYTE PTR es:[edi]
  438f53:	and    DWORD PTR [ebx+0x48],ebp
  438f56:	aas    
  438f57:	lods   eax,DWORD PTR ds:[esi]
  438f58:	(bad)  
  438f5a:	lds    ecx,FWORD PTR [edi+ebx*8]
  438f5d:	bound  esi,QWORD PTR [ecx+eiz*1-0x545f4b2]
  438f64:	rcr    DWORD PTR [esi],0x0
  438f67:	add    BYTE PTR [eax-0x213d38df],al
  438f6d:	jl     0x438fe2
  438f6f:	push   0x4fa5f4dc
  438f74:	xor    eax,0x0
  438f77:	sbb    al,0xb8
  438f79:	adc    BYTE PTR [esp+0x2ca82b47],cl
  438f80:	arpl   WORD PTR [ecx-0x17],si
  438f83:	adc    edx,DWORD PTR [ebp-0xf9507e5]
  438f89:	aaa    
  438f8a:	push   esi
  438f8b:	stos   BYTE PTR es:[edi],al
  438f8c:	lock out dx,eax
  438f8e:	les    esi,FWORD PTR [ebp-0x523b1018]
  438f94:	xor    al,0xc4
  438f97:	sbb    al,0xb8
  438f99:	jl     0xe9c7d6c3
  438f9f:	std    
  438fa0:	mov    eax,0x786af81a
  438fa5:	cmp    BYTE PTR [esi+0x2a],dl
  438fa8:	js     0x438f9a
  438faa:	les    ebx,FWORD PTR ds:0x35c4f070
  438fb0:	push   0x802dc4f0
  438fb5:	lock les eax,FWORD PTR [eax+0x6d]
  438fb9:	xor    al,0x1
  438fbb:	jmp    0xe9450887
  438fc0:	(bad)  
  438fc1:	js     0x438fc4
  438fc3:	jmp    0xe945086f
  438fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438fc9:	js     0x438fcc
  438fcb:	jmp    0x78ea8fd0
  438fd0:	add    ecx,ebp
  438fd2:	xor    al,0x34
  438fd4:	add    eax,ebp
  438fd6:	xor    al,0x34
  438fd8:	add    edx,ebp
  438fda:	xor    al,0x34
  438fdc:	add    esi,esp
  438fde:	xor    al,0x34
  438fe0:	add    esi,esi
  438fe2:	xor    al,0x34
  438fe4:	add    esi,edi
  438fe6:	xor    al,0x34
  438fe8:	add    DWORD PTR [esi],edx
  438fea:	xor    esi,DWORD PTR [ecx+eax*1]
  438fed:	dec    esi
  438fee:	cmp    esi,DWORD PTR [ecx+eax*1]
  438ff1:	add    BYTE PTR [ecx+0x37],dh
  438ff4:	add    DWORD PTR [eax],eax
  438ff6:	mov    cl,0x34
  438ff8:	add    DWORD PTR [eax],eax
  438ffa:	mov    eax,ds:0x91000136
  438fff:	sub    al,BYTE PTR [ecx]
  439001:	add    BYTE PTR [ecx-0x4efffebe],dl
  439007:	xor    al,BYTE PTR [ecx]
  439009:	add    BYTE PTR [ecx-0x4efffeae],ah
  43900f:	adc    bh,al
  439011:	push   DWORD PTR [ecx-0x4efffe6e]
  439017:	xchg   ebp,eax
  439018:	clc    
  439019:	jmp    DWORD PTR [ecx-0x6e00096b]
  43901f:	xchg   ebp,eax
  439020:	add    al,BYTE PTR [eax]
  439022:	xchg   ecx,eax
  439023:	xchg   ebp,eax
  439024:	or     al,BYTE PTR [eax]
  439026:	jno    0x438fbd
  439028:	sbb    al,BYTE PTR [eax]
  43902a:	popa   
  43902b:	xchg   ebp,eax
  43902c:	cmp    al,BYTE PTR [eax]
  43902e:	jno    0x438fc5
  439030:	jp     0x439032
  439032:	add    BYTE PTR [eax],al
  439034:	jno    0x438fcb
  439036:	cli    
  439037:	add    BYTE PTR [ecx],dh
  439039:	xchg   ebp,eax
  43903a:	cli    
  43903b:	add    DWORD PTR [ecx],esp
  43903d:	xchg   ebp,eax
  43903e:	cli    
  43903f:	add    edx,DWORD PTR [ecx]
  439041:	xchg   ebp,eax
  439042:	cli    
  439043:	pop    es
  439044:	adc    DWORD PTR [ebp-0x6acef006],edx
  43904a:	cli    
  43904b:	pop    ds
  43904c:	and    DWORD PTR [ebp-0x6acec006],edx
  439052:	cli    
  439053:	jg     0x439086
  439055:	xchg   ebp,eax
  439056:	cli    
  439057:	dec    ecx
  439059:	fst    QWORD PTR [edx+0x53]
  43905c:	add    bh,BYTE PTR [ecx-0x4f6dbf1c]
  439062:	ins    BYTE PTR es:[edi],dx
  439063:	and    al,0xf6
  439065:	mov    al,0x7a
  439067:	sbb    al,0x5
  439069:	fld    QWORD PTR [ebx]
  43906b:	mov    esi,DWORD PTR [edi]
  43906d:	paddw  mm1,mm7
  439070:	mov    ah,0xf3
  439072:	add    al,0x87
  439074:	repz xor BYTE PTR [ecx],dh
  439077:	xchg   DWORD PTR [ebx],ecx
  439079:	cmp    ecx,edi
  43907b:	test   bl,bl
  43907d:	xor    cl,al
  43907f:	test   cl,dh
  439081:	cld    
  439082:	test   BYTE PTR [edx+0x2b],bl
  439085:	add    ch,BYTE PTR [ebx-0xf]
  439088:	jb     0x439094
  43908a:	gs jg  0x4390eb
  43908d:	or     al,0x3
  43908f:	add    BYTE PTR [edi],dh
  439091:	or     al,BYTE PTR [ebp-0x79]
  439094:	fcomi  st,st(0)
  439096:	pop    ss
  439097:	xchg   DWORD PTR [eax],eax
  439099:	add    BYTE PTR [ebx+0x7b872bf9],ah
  43909f:	icebp  
  4390a0:	repz test BYTE PTR [eax+0x41],bh
  4390a4:	xchg   BYTE PTR [ecx-0x79],cl
  4390a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4390a8:	shl    BYTE PTR [ebx],0x3f
  4390ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4390ac:	enter  0x3b23,0xc5
  4390b0:	add    al,BYTE PTR [eax]
  4390b2:	aaa    
  4390b3:	or     eax,0x3a634985
  4390b8:	fs dec eax
  4390ba:	mov    esi,0x36b82018
  4390bf:	or     eax,0xbdac0004
  4390c4:	mov    ebx,0x8ae4d7cc
  4390c9:	inc    esp
  4390ca:	sbb    ebx,DWORD PTR [ecx]
  4390cc:	test   DWORD PTR [ecx+0x1f],eax
  4390cf:	xchg   edx,eax
  4390d0:	shr    DWORD PTR [edi],1
  4390d2:	lods   al,BYTE PTR ds:[esi]
  4390d3:	in     eax,0xf
  4390d5:	xchg   DWORD PTR [ebx-0xf],esi
  4390d8:	ja     0x875789e1
  4390de:	add    esi,ecx
  4390e0:	sbb    eax,DWORD PTR [ebp+0x5984e510]
  4390e6:	pop    ebx
  4390e7:	xor    al,0x73
  4390e9:	fcom   DWORD PTR [eax+edx*2+0x73]
  4390ed:	rcl    BYTE PTR [eax+ecx*2+0x13],1
  4390f1:	dec    esi
  4390f2:	push   es
  4390f3:	push   edx
  4390f4:	imul   eax,DWORD PTR [ebp+0x32],0x4b
  4390f8:	mov    al,0x9c
  4390fa:	inc    ebx
  4390fb:	xor    al,0xea
  4390fd:	add    eax,DWORD PTR [eax]
  4390ff:	add    BYTE PTR [edx],dl
  439101:	cmc    
  439102:	pop    esp
  439103:	loopne 0x439119
  439105:	inc    eax
  439106:	mov    ebx,0xdaebb2a8
  43910b:	inc    ebx
  43910c:	(bad)  
  43910d:	leave  
  43910e:	fcom   DWORD PTR fs:[eax+eax*2]
  439112:	popa   
  439113:	fcom   DWORD PTR [eax+ecx*2]
  439116:	cmp    esp,0x47
  439119:	cmc    
  43911a:	jmp    0x5bf3:0xee343703
  439121:	hlt    
  439122:	arpl   WORD PTR [esi],ax
  439124:	jne    0x4390cf
  439126:	mov    ds:0x3b2cda83,al
  43912b:	cmp    cl,BYTE PTR fs:[ebx+edx*2]
  43912f:	ins    BYTE PTR es:[edi],dx
  439130:	mov    dl,0xa0
  439132:	push   es
  439133:	and    BYTE PTR [edx+0x3a92ca5f],al
  439139:	xor    al,0xec
  43913b:	push   cs
  43913c:	mov    ebx,0x3703ebab
  439141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439142:	ret    
  439143:	mov    bl,0x73
  439145:	sbb    DWORD PTR [edi+edi*2-0x7b39c74e],0xb
  43914d:	pop    eax
  43914e:	jmp    0x6980:0x6d341703
  439155:	popa   
  439156:	cmp    bl,al
  439158:	je     0x4391bb
  43915a:	sub    cl,BYTE PTR [edi]
  43915c:	shl    DWORD PTR [ebx-0x71ea38fe],1
  439162:	add    DWORD PTR [eax+eax*1+0x0],edi
  439166:	jg     0x4391cd
  439168:	xor    al,0x8a
  43916b:	mov    eax,ds:0x4d6e555e
  439170:	and    bl,0x9b
  439173:	mov    ebx,DWORD PTR [esi+0x20]
  439176:	pop    esi
  439177:	push   ebp
  439178:	mov    ecx,0x13434e8
  43917d:	not    BYTE PTR [esi-0x4a0e1723]
  439183:	adc    al,0x8
  439185:	push   0xfffffffc
  439187:	xor    DWORD PTR [esi-0x29],ebp
  43918a:	add    esi,ebx
  43918c:	add    cl,ch
  43918e:	mov    ah,0x34
  439190:	outs   dx,BYTE PTR ds:[esi]
  439191:	jmp    0x439170
  439193:	das    
  439194:	shr    ah,0x54
  439197:	rol    BYTE PTR [ebx-0x17],1
  43919a:	ss xor al,0x1
  43919d:	jmp    0xe503c83f
  4391a2:	adc    al,0xd0
  4391a4:	inc    ebx
  4391a5:	jmp    0xe944c5df
  4391aa:	fiadd  WORD PTR [ebp-0x4c623ea4]
  4391b0:	nop
  4391b1:	imul   ebp,DWORD PTR [ebp+0x2b],0xf425e470
  4391b8:	pop    esi
  4391b9:	jl     0x439169
  4391bb:	test   BYTE PTR [eax-0x1f101bd6],0xf2
  4391c2:	pop    esp
  4391c3:	mov    bh,0xc
  4391c5:	or     eax,0xe11d6fac
  4391ca:	add    BYTE PTR [eax],al
  4391cc:	adc    eax,0x4bed8c01
  4391d1:	mov    dh,0xc4
  4391d3:	ror    DWORD PTR [eax],cl
  4391d5:	out    dx,eax
  4391d6:	in     eax,0x6d
  4391d8:	je     0x43917b
  4391da:	sbb    ch,BYTE PTR [eax]
  4391dc:	dec    esp
  4391dd:	inc    esp
  4391de:	stos   DWORD PTR es:[edi],eax
  4391df:	add    BYTE PTR [edi-0x4],dh
  4391e2:	and    edx,DWORD PTR [eax]
  4391e4:	cdq    
  4391e5:	mov    dh,0x56
  4391e7:	add    al,0x8e
  4391e9:	xor    BYTE PTR [eax],dh
  4391eb:	je     0x43925f
  4391ed:	and    al,0x71
  4391ef:	les    esp,FWORD PTR [edi-0x1a]
  4391f2:	add    eax,DWORD PTR [eax]
  4391f4:	sahf   
  4391f5:	stos   DWORD PTR es:[edi],eax
  4391f6:	rol    cl,1
  4391f8:	je     0x439221
  4391fa:	jle    0x4391c4
  4391fc:	mov    dh,0x27
  4391fe:	or     DWORD PTR [edx+esi*4-0x21fffec9],eax
  439205:	nop
  439206:	or     dh,BYTE PTR [ebx+esi*1+0x3a]
  43920a:	shl    BYTE PTR [ebx+0x7f],1
  43920d:	stos   BYTE PTR es:[edi],al
  43920e:	fbstp  TBYTE PTR [ebx]
  439210:	sahf   
  439211:	adc    eax,0xb7858aab
  439216:	mov    ch,0x10
  439218:	jge    0x4391b1
  43921a:	(bad)  
  43921b:	out    0xd4,eax
  43921d:	ins    BYTE PTR es:[edi],dx
  43921e:	mov    ecx,0x1381e01
  439223:	sar    DWORD PTR [esi-0x1226e218],cl
  439229:	jb     0x4391f1
  43922b:	in     eax,dx
  43922c:	or     eax,0x548068
  439231:	add    BYTE PTR [edx+0x18],al
  439234:	js     0x439231
  439236:	sbb    DWORD PTR [ecx],eax
  439238:	or     esi,DWORD PTR [ebx]
  43923a:	dec    esi
  43923b:	adc    ch,BYTE PTR [ebx-0x4a4faa76]
  439241:	adc    BYTE PTR [ebp-0x70],cl
  439244:	(bad)  
  439245:	out    0x65,eax
  439247:	fsub   QWORD PTR [ebx]
  439249:	add    al,0x55
  43924b:	add    al,0x24
  43924d:	or     al,0x2d
  43924f:	arpl   WORD PTR [esi+0x4],di
  439252:	dec    edi
  439253:	lods   eax,DWORD PTR ds:[esi]
  439254:	rol    cl,1
  439256:	and    al,0x20
  439258:	jle    0x439226
  43925a:	aaa    
  43925b:	div    DWORD PTR [edi]
  43925d:	int    0xca
  43925f:	xchg   edi,eax
  439260:	inc    ebp
  439261:	test   al,0x47
  439263:	and    al,BYTE PTR [eax+0x40d37ae]
  439269:	adc    BYTE PTR [esi+0x5d62d012],0x44
  439270:	ror    BYTE PTR [esi],cl
  439272:	mov    ebp,0x11c01104
  439277:	test   al,0x89
  439279:	lds    esi,FWORD PTR [edi-0x68330c32]
  43927f:	push   ss
  439280:	ins    BYTE PTR es:[edi],dx
  439281:	xchg   BYTE PTR [edx+0x370002b5],al
  439287:	or     eax,0x36efe031
  43928c:	cmp    al,0x1d
  43928e:	jb     0x43924e
  439290:	data16 std 
  439292:	add    dh,0x3
  439295:	xchg   DWORD PTR [eax],eax
  439297:	add    bl,al
  439299:	lock daa 
  43929b:	test   DWORD PTR [eax-0xa],edi
  43929e:	mov    edi,0x42060f23
  4392a3:	or     DWORD PTR [ebp+0x37000478],esi
  4392a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4392aa:	enter  0x3f23,0x96
  4392ae:	dec    ebp
  4392af:	and    eax,0xfd6b8e25
  4392b4:	mov    esi,0xbd018c0a
  4392b9:	rol    BYTE PTR [edx],cl
  4392bb:	xchg   BYTE PTR [ecx+0xf],ch
  4392be:	add    edx,0xfebd9534
  4392c4:	mov    eax,0xf07d01b9
  4392c9:	or     eax,0xd8aca451
  4392ce:	pop    ds
  4392cf:	sub    al,0xce
  4392d1:	cld    
  4392d2:	push   esp
  4392d3:	stc    
  4392d4:	shl    BYTE PTR [ebx],1
  4392d6:	imul   ebx,DWORD PTR [ecx-0x38],0xffffff9f
  4392da:	push   ebp
  4392db:	sbb    al,BYTE PTR [ebx+0x50]
  4392de:	ret    0x87d7
  4392e1:	push   0x63
  4392e3:	iret   
  4392e4:	push   esp
  4392e5:	cmp    al,0x74
  4392e7:	add    al,0x2a
  4392e9:	or     eax,0x34f68beb
  4392ee:	(bad)  
  4392ef:	les    ebx,FWORD PTR [edx+0x12009eb2]
  4392f5:	repz in eax,0x56
  4392f8:	ror    DWORD PTR [edx+edx*8],1
  4392fb:	pop    edx
  4392fc:	add    BYTE PTR [eax],al
  4392fe:	jle    0x43931a
  439300:	add    ah,0x2f
  439303:	mov    cl,0xd7
  439305:	push   es
  439306:	aaa    
  439307:	xor    al,0x82
  439309:	add    eax,0x36ea3437
  43930e:	push   edi
  43930f:	imul   ecx,DWORD PTR [ebx],0x41
  439312:	pop    edx
  439313:	hlt    
  439314:	bound  esi,QWORD PTR [eax+0x732c14]
  43931a:	leave  
  43931b:	or     al,0x64
  43931d:	pop    edx
  43931e:	sbb    al,BYTE PTR ds:[edx-0x3c]
  439322:	das    
  439323:	mov    cl,0x8b
  439325:	push   es
  439326:	aaa    
  439327:	xor    al,0x42
  439329:	add    eax,0x36ea3437
  43932e:	pop    ss
  43932f:	ins    DWORD PTR es:[edi],dx
  439330:	retf   
  439331:	inc    eax
  439332:	sbb    dh,ah
  439334:	bound  esi,QWORD PTR [eax+0x732854]
  43933a:	mov    DWORD PTR [ebx],ecx
  43933c:	add    DWORD PTR [ebx-0x2],ebx
  43933f:	sbb    DWORD PTR [ebx+0x4c],esp
  439342:	mov    dl,0x70
  439344:	dec    BYTE PTR [edi]
  439346:	out    0xfb,al
  439348:	jb     0x43931a
  43934a:	adc    al,0x5c
  43934c:	add    eax,DWORD PTR [esi+0x2e]
  43934f:	mov    dh,0x0
  439351:	pop    ss
  439352:	xor    DWORD PTR [ecx+eax*1],esi
  439355:	jmp    0x3424:0xcd759782
  43935c:	outs   dx,BYTE PTR ds:[esi]
  43935d:	lds    edx,FWORD PTR [ecx]
  43935f:	fld    DWORD PTR [ebx]
  439361:	sbb    DWORD PTR [eax],eax
  439363:	add    BYTE PTR [eax+0x51f11d70],ch
  439369:	fldcw  WORD PTR [esi-0x77]
  43936c:	pop    ecx
  43936d:	fpatan 
  43936f:	inc    ebp
  439370:	mov    al,0x23
  439372:	sub    al,0xfb
  439374:	or     DWORD PTR [esi+0x6765283c],eax
  43937a:	sub    al,0xa8
  43937c:	loope  0x43934d
  43937e:	mov    edx,esi
  439380:	push   ecx
  439381:	or     ch,ah
  439383:	and    DWORD PTR [eax+0x50191d70],ebp
  439389:	in     al,dx
  43938a:	outs   dx,BYTE PTR ds:[esi]
  43938b:	adc    eax,0xf51da030
  439390:	cmp    DWORD PTR [esp+ebp*1],esp
  439393:	mov    eax,0x258bec09
  439398:	pop    ss
  439399:	cmp    al,0x3c
  43939b:	test   al,0x66
  43939d:	dec    ebx
  43939e:	sub    al,0xa8
  4393a0:	jmp    0x17611f74
  4393a5:	pop    esp
  4393a6:	mov    WORD PTR ds:0xa83c6457,ds
  4393ac:	push   es
  4393ad:	cmp    ebp,DWORD PTR [eax+ebp*4]
  4393b0:	mov    eax,edx
  4393b2:	mov    edi,DWORD PTR [esi+0x49]
  4393b5:	or     ch,ah
  4393b7:	aad    0x39
  4393b9:	and    al,0x2c
  4393bb:	pop    eax
  4393bc:	mov    ecx,0x20011d6f
  4393c1:	fldcw  WORD PTR [esi-0x1f]
  4393c4:	dec    ecx
  4393c5:	fpatan 
  4393c7:	test   DWORD PTR [eax],eax
  4393c9:	add    cl,al
  4393cb:	and    ch,BYTE PTR [eax+eax*1]
  4393ce:	sub    al,0xaa
  4393d0:	enter  0xbaf3,0xa9
  4393d4:	ins    BYTE PTR es:[edi],dx
  4393d5:	and    al,0x32
  4393d7:	xchg   DWORD PTR [edi],eax
  4393d9:	(bad)  
  4393da:	and    DWORD PTR [esi+0x7e],edi
  4393dd:	inc    ecx
  4393df:	add    eax,0xaa1b6e09
  4393e4:	fisttp QWORD PTR [edi]
  4393e6:	mov    al,0x38
  4393e8:	sbb    eax,0xa91c10f
  4393ed:	outs   dx,BYTE PTR ds:[esi]
  4393ee:	ret    0xfd38
  4393f1:	push   cs
  4393f2:	and    DWORD PTR [edi-0x55a810f6],eax
  4393f8:	push   esp
  4393f9:	and    al,0x96
  4393fb:	mov    eax,edi
  4393fd:	pop    DWORD PTR [ecx+0x6383b85f]
  439403:	dec    edi
  439404:	jb     0x439418
  439406:	xchg   ecx,eax
  439407:	or     dh,bl
  439409:	wrmsr  
  43940b:	ds jbe 0x4393d4
  43940e:	pop    edx
  43940f:	sub    esp,esi
  439411:	dec    ch
  439413:	pop    eax
  439414:	and    DWORD PTR [edi],ecx
  439416:	jne    0x43948a
  439418:	or     bl,bl
  43941a:	jle    0x439446
  43941c:	jnp    0x4393fe
  43941e:	inc    ecx
  43941f:	sti    
  439420:	fisttp DWORD PTR [ebx-0x49f650a6]
  439426:	xchg   edx,eax
  439427:	sub    ch,BYTE PTR [ebx-0x37]
  43942a:	cmc    
  43942b:	mov    bh,BYTE PTR [ebp-0x40]
  43942e:	add    BYTE PTR [eax],al
  439430:	sub    ebx,DWORD PTR [ebx]
  439432:	mov    bh,0xe8
  439434:	dec    cl
  439436:	das    
  439437:	jl     0x439423
  439439:	and    ecx,DWORD PTR [ecx]
  43943b:	xchg   BYTE PTR [edx],al
  43943d:	xor    al,BYTE PTR [ecx]
  43943f:	add    BYTE PTR [edi+0x4],dl
  439442:	and    al,0x14
  439444:	jmp    0x37557402
  439449:	or     eax,DWORD PTR [eax+eax*1]
  43944c:	mov    esp,0x47e6445d
  439451:	(bad)
  439454:	mov    ebx,0x37fffd6d
  439459:	mov    bl,BYTE PTR [ebp+0x9]
  43945c:	dec    ebx
  43945d:	add    DWORD PTR [ecx],ecx
  43945f:	int    0xf6
  439461:	push   ds
  439462:	jmp    0xcf25:0x42b730c7
  439469:	jmp    0xffbc:0xe43f82ff
  439470:	xor    eax,0x76cd0a3c
  439475:	mov    dl,BYTE PTR [eax+0x20]
  439478:	and    bl,bh
  43947a:	or     BYTE PTR [edx-0x76],ch
  43947d:	imul   cl
  43947f:	cmp    DWORD PTR [edi+eax*8-0x87bf709],esi
  439486:	jl     0x43944b
  439488:	push   edi
  439489:	push   cs
  43948a:	sar    DWORD PTR gs:[ecx+ecx*2-0x2dc7f3df],0x6b
  439493:	or     DWORD PTR [eax],eax
  439495:	add    cl,ah
  439497:	add    al,0x9
  439499:	jns    0x43941d
  43949b:	xchg   edx,eax
  43949c:	clc    
  43949d:	jl     0x4394df
  43949f:	lahf   
  4394a0:	inc    eax
  4394a1:	test   DWORD PTR [edi-0x34],ebp
  4394a4:	adc    BYTE PTR fs:[esp+eax*8],cl
  4394a8:	or     BYTE PTR [edx+0x6e],ch
  4394ab:	jne    0x4394a1
  4394ad:	or     BYTE PTR [ebx+0x37000458],bh
  4394b3:	mov    ah,BYTE PTR [ecx+ecx*1-0x55]
  4394b7:	ds or  cl,ch
  4394ba:	test   BYTE PTR ds:0x740c7ea,0x43
  4394c1:	and    eax,0x80b341f
  4394c6:	mov    ah,0x2b
  4394c8:	rol    esp,0xf8
  4394cb:	xor    DWORD PTR [ecx],esi
  4394cd:	mov    ch,BYTE PTR [ebx+0x50]
  4394d0:	test   BYTE PTR [esi+esi*8+0xf1fa64a],0x5b
  4394d8:	sub    ecx,DWORD PTR [eax]
  4394da:	pop    ecx
  4394db:	int    0xe9
  4394dd:	add    esi,DWORD PTR [edi]
  4394df:	stos   DWORD PTR es:[edi],eax
  4394e0:	and    ecx,DWORD PTR [esi+eax*8-0x277be4b6]
  4394e7:	xor    dh,BYTE PTR [ecx+eax*1-0x51]
  4394eb:	cs shl DWORD PTR fs:[ecx+0x2a05afac],0xee
  4394f4:	jmp    0xb0:0x7234f68b
  4394fb:	add    BYTE PTR [edx-0x5dfbd94f],bl
  439501:	iret   
  439502:	(bad)  
  439503:	iret   
  439504:	push   esp
  439505:	dec    eax
  439506:	jae    0x4394c0
  439508:	push   esp
  439509:	sub    al,0xd1
  43950b:	sub    DWORD PTR [esi+0x16],edi
  43950e:	iret   
  43950f:	mov    eax,edi
  439511:	xor    ebp,DWORD PTR [ebx+0x5b]
  439514:	push   0xe31d829f
  439519:	dec    edi
  43951a:	adc    dl,al
  43951c:	mov    ah,BYTE PTR [esi+0x63]
  43951f:	dec    edx
  439520:	mov    ecx,0x4a6d6b2e
  439525:	scas   al,BYTE PTR es:[edi]
  439526:	es add eax,0x8bec6eaf
  43952c:	div    BYTE PTR [edx]
  43952e:	imul   edi,DWORD PTR [edi],0x3b
  439531:	and    DWORD PTR [ebx+ecx*4-0x75],eax
  439535:	push   eax
  439536:	repnz ins BYTE PTR es:[edi],dx
  439538:	aaa    
  439539:	adc    eax,0x15b25777
  43953e:	add    DWORD PTR [ecx-0x5],eax
  439541:	sub    al,0x7e
  439543:	(bad)  
  439544:	xor    esi,DWORD PTR [ecx+eax*1]
  439547:	push   0xffffff9b
  439549:	sub    ecx,DWORD PTR [eax]
  43954b:	cmp    dh,BYTE PTR [edx+0x2b]
  43954e:	ja     0x439578
  439550:	adc    al,0x28
  439552:	jle    0x439535
  439554:	stos   DWORD PTR es:[edi],eax
  439555:	pop    eax
  439556:	add    edx,ebp
  439558:	outs   dx,BYTE PTR ds:[esi]
  439559:	scas   eax,DWORD PTR es:[edi]
  43955a:	cld    
  43955b:	jno    0x4395a7
  43955d:	call   0x43cc58
  439562:	push   0xf381f7af
  439567:	sub    al,0x7e
  439569:	push   edi
  43956a:	cmp    esi,DWORD PTR [ecx+eax*1]
  43956d:	push   0x53
  43956f:	sub    ecx,DWORD PTR [eax]
  439571:	cmp    bh,dl
  439573:	sub    dh,BYTE PTR [edi+0x28]
  439576:	push   esp
  439577:	sub    BYTE PTR [esi-0xf],bh
  43957a:	jecxz  0x4395d4
  43957c:	add    DWORD PTR [edx+0x77],esi
  43957f:	push   ecx
  439580:	add    eax,0xfcaefdea
  439585:	pusha  
  439586:	sbb    bh,BYTE PTR ds:0xaee9e6f8
  43958c:	div    DWORD PTR [edx-0x14]
  43958f:	scas   al,BYTE PTR es:[edi]
  439590:	cmp    al,0xd
  439592:	inc    edi
  439593:	and    ebx,edx
  439595:	bound  edi,QWORD PTR [eax+0x51]
  439598:	cmp    DWORD PTR [edx],eax
  43959a:	hlt    
  43959b:	sub    al,BYTE PTR [ebx+0x134348b]
  4395a1:	jmp    0x3423:0x57596fd
  4395a8:	outs   dx,BYTE PTR ds:[esi]
  4395a9:	leave  
  4395aa:	or     eax,0x1d9903d5
  4395af:	in     eax,0x6e
  4395b1:	xor    DWORD PTR [ebp+eiz*8-0xd],ebx
  4395b5:	inc    ebp
  4395b6:	mov    ebp,0x9d002c22
  4395bb:	mov    cl,BYTE PTR [ebx+0x3b]
  4395be:	mov    edi,0xaf2b3de6
  4395c3:	sbb    DWORD PTR [ebp-0x7effff75],0xceebe64a
  4395cd:	test   eax,0x391e243c
  4395d2:	leave  
  4395d3:	jbe    0x43960b
  4395d5:	xor    DWORD PTR [ebp+0x24],ebp
  4395d8:	inc    edx
  4395d9:	xor    ecx,esi
  4395db:	sub    ebx,DWORD PTR [edi]
  4395dd:	dec    edx
  4395de:	leave  
  4395df:	cmp    edi,DWORD PTR [edi]
  4395e1:	out    0x1d,eax
  4395e3:	sub    ebp,DWORD PTR [edi]
  4395e5:	sbb    BYTE PTR [ebp+0x3934828b],0x8b
  4395ec:	mov    dh,BYTE PTR [ecx+esi*1]
  4395ef:	cmp    edi,edi
  4395f1:	out    0xd,al
  4395f3:	sub    ebp,DWORD PTR [edi-0x7e]
  4395f6:	popf   
  4395f7:	mov    eax,DWORD PTR [ecx+0x4a]
  4395fa:	out    0xeb,al
  4395fc:	jle    0x43962f
  4395fe:	icebp  
  4395ff:	sub    ebx,DWORD PTR [edi-0x698937c6]
  439605:	dec    ecx
  439606:	enter  0xf2f3,0xa9
  43960a:	icebp  
  43960b:	sub    ebx,DWORD PTR [ebp-0x56]
  43960e:	mov    esi,0x6caab2f3
  439613:	and    al,0x3a
  439615:	stos   DWORD PTR es:[edi],eax
  439616:	push   esp
  439617:	and    al,0x56
  439619:	mov    DWORD PTR ds:0xb07e79fe,ebx
  43961f:	add    BYTE PTR [edi],dl
  439621:	repz idiv DWORD PTR [ecx+0x13064]
  439628:	jne    0x439675
  43962a:	test   eax,0x22000020
  43962f:	sub    al,0xb0
  439631:	add    BYTE PTR [esi+0x30],cl
  439634:	add    DWORD PTR [edx+0x41637],edi
  43963a:	aaa    
  43963b:	mov    dh,0xf8
  43963d:	mov    dh,0x23
  43963f:	push   esi
  439640:	ret    0xdeff
  439643:	pop    ss
  439644:	add    al,0x0
  439646:	aaa    
  439647:	mov    dh,0xec
  439649:	test   BYTE PTR [ebx+0x3bb71ff9],al
  43964f:	hlt    
  439650:	sar    bh,0xbe
  439653:	aaa    
  439654:	std    
  439655:	push   DWORD PTR [edi]
  439657:	jbe    0x439656
  439659:	test   BYTE PTR [ebx+0x39],dh
  43965c:	mov    ch,0x82
  43965e:	out    dx,al
  43965f:	rol    DWORD PTR [eax],1
  439661:	xchg   DWORD PTR [edi+0x15],ebp
  439664:	mov    DWORD PTR [eax+0x33],eax
  439667:	xchg   esp,eax
  439668:	in     eax,dx
  439669:	in     al,0x37
  43966b:	sahf   
  43966c:	adc    BYTE PTR [eax-0x7c],ah
  43966f:	fiadd  WORD PTR [ebx]
  439671:	inc    BYTE PTR [ebx+0x1f]
  439674:	mov    ebx,ebx
  439676:	mov    esp,0xbc5817e1
  43967b:	push   esi
  43967c:	mov    dl,BYTE PTR [eax+0x43]
  43967f:	pop    esp
  439680:	ins    BYTE PTR es:[edi],dx
  439681:	std    
  439682:	dec    ebp
  439683:	or     al,0x43
  439685:	fbstp  TBYTE PTR [esi+esi*8]
  439688:	cmp    al,BYTE PTR [edi+0x568af10f]
  43968e:	inc    ebx
  43968f:	xchg   BYTE PTR [ecx-0x75],cl
  439692:	add    BYTE PTR [eax],al
  439694:	fstp   TBYTE PTR [eax]
  439696:	stc    
  439697:	adc    eax,DWORD PTR ss:[ecx-0xf]
  43969b:	jb     0x4396e0
  43969d:	ss push edx
  43969f:	test   DWORD PTR [edi],edi
  4396a1:	test   BYTE PTR [eax+0x511e4323],dh
  4396a7:	test   edi,ebp
  4396a9:	and    BYTE PTR [ecx-0x4fe3c31b],al
  4396af:	and    ebp,DWORD PTR [ebx]
  4396b1:	xor    al,0x71
  4396b3:	adc    eax,DWORD PTR [edx+0x3703ea35]
  4396b9:	out    0x8a,eax
  4396bb:	enter  0x51ab,0xa
  4396bf:	xchg   ecx,eax
  4396c0:	bound  esi,QWORD PTR [esp+ebp*8]
  4396c3:	into   
  4396c4:	xor    BYTE PTR [ebx-0x65],al
  4396c7:	inc    edx
  4396c8:	ds xchg edx,eax
  4396ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4396cb:	add    al,0x86
  4396cd:	push   edi
  4396ce:	or     DWORD PTR [edx-0x488cb367],0x54
  4396d5:	sub    BYTE PTR [ebx],ah
  4396d7:	ss gs add esi,DWORD PTR ds:[esi]
  4396dc:	push   0xfffffff7
  4396de:	loop   0x43966a
  4396e0:	jg     0x43971a
  4396e2:	push   ebx
  4396e3:	or     DWORD PTR [edx],edx
  4396e5:	pop    es
  4396e6:	das    
  4396e7:	xor    eax,0x8ae2fa52
  4396ec:	inc    edi
  4396ed:	cmp    BYTE PTR [ebx-0x49],ah
  4396f0:	adc    al,0x24
  4396f2:	jecxz  0x439728
  4396f4:	inc    ebp
  4396f5:	inc    ecx
  4396f6:	shl    DWORD PTR [eax+eax*1],cl
  4396f9:	add    BYTE PTR [eax],dh
  4396fb:	imul   eax
  4396fd:	add    dh,BYTE PTR [edi]
  4396ff:	xor    al,0x61
  439701:	mov    ebx,0x28ed1f30
  439706:	mov    ds:0x7682170a,al
  43970b:	xor    al,0xe9
  43970d:	add    esi,DWORD PTR [edi]
  43970f:	mov    ebp,0xf803f371
  439714:	sub    DWORD PTR [ecx-0x1e],esi
  439717:	jo     0x439751
  439719:	mov    bl,0xb3
  43971b:	push   DWORD PTR [edi+edi*2]
  43971e:	pop    ebx
  43971f:	mov    dh,0xb5
  439721:	sar    BYTE PTR [ebx+0x7716da68],1
  439727:	inc    edx
  439728:	outs   dx,DWORD PTR ds:[esi]
  439729:	cmp    al,0xba
  43972b:	hlt    
  43972c:	add    BYTE PTR [eax-0x57f3dc2e],ch
  439732:	mov    BYTE PTR [edi+0x76bbf555],dh
  439738:	popf   
  439739:	jo     0x439739
  43973b:	(bad)  [ecx+0x3db9d72c]
  439741:	pop    ecx
  439742:	mov    ds:0xee70ad75,al
  439747:	leave  
  439748:	mov    DWORD PTR [edi+eiz*4],esp
  43974b:	mov    ecx,0xf420a93d
  439750:	dec    esi
  439751:	fs dec ecx
  439753:	mov    BYTE PTR [ebx],bl
  439755:	push   edx
  439756:	sub    eax,0x34e99bbd
  43975b:	xor    al,0x1
  43975d:	out    0x0,al
  43975f:	add    ch,cl
  439761:	inc    eax
  439762:	inc    esp
  439763:	mov    DWORD PTR [ebp-0x4972b988],0xfb854680
  43976d:	dec    eax
  43976e:	ret    
  43976f:	mov    ebx,0xd16db756
  439774:	inc    ecx
  439775:	mov    dh,BYTE PTR ds:[eax+ebp*2+0x34e907cc]
  43977d:	xor    al,0x91
  43977f:	(bad)  
  439780:	mov    cl,0x90
  439782:	ds inc ebp
  439784:	cmp    eax,DWORD PTR [ebp+0xcb1b0ff]
  43978a:	add    bh,BYTE PTR [edx-0x16]
  43978d:	mov    eax,0xfc39fd3d
  439792:	outs   dx,BYTE PTR ds:[esi]
  439793:	in     al,0x3
  439795:	jne    0x43978c
  439797:	jb     0x4397d5
  439799:	mov    ch,0xc0
  43979b:	push   esp
  43979c:	push   edx
  43979d:	mov    bh,0x3d
  43979f:	std    
  4397a0:	jmp    0x6b6857c8
  4397a5:	push   ecx
  4397a6:	add    al,BYTE PTR [eax]
  4397a8:	dec    esi
  4397a9:	xor    eax,0x906e4d7e
  4397ae:	inc    DWORD PTR [edx+0x107e395e]
  4397b4:	xlat   BYTE PTR ds:[ebx]
  4397b5:	push   cs
  4397b6:	jne    0x4397b8
  4397b8:	dec    edx
  4397b9:	jle    0x4397be
  4397bb:	add    DWORD PTR [esi],ebx
  4397bd:	xor    eax,0x750d5e01
  4397c2:	dec    esi
  4397c3:	mov    eax,DWORD PTR [eax]
  4397c5:	add    BYTE PTR [ebx+0x7157b4c3],bh
  4397cb:	cmp    BYTE PTR [ecx],al
  4397cd:	add    BYTE PTR [esi],bl
  4397cf:	inc    edx
  4397d0:	ret    0x1376
  4397d3:	sbb    esi,DWORD PTR [ebp+0x7c]
  4397d6:	adc    ebx,ecx
  4397d8:	add    BYTE PTR [ebp+0xb],dh
  4397db:	(bad)  
  4397dc:	sub    al,0xf8
  4397de:	or     al,0x6a
  4397e0:	cs iret 
  4397e2:	or     eax,0x727d803a
  4397e7:	mov    ds:0x34cefff7,eax
  4397ec:	jle    0x4397c4
  4397ee:	arpl   WORD PTR [ecx],bx
  4397f0:	and    al,0x0
  4397f2:	shr    DWORD PTR [ebp+0x39ba5544],1
  4397f8:	repz sub ebx,DWORD PTR [edi]
  4397fb:	std    
  4397fc:	adc    DWORD PTR [edx+0x1d],eax
  4397ff:	jg     0x43980b
  439801:	jbe    0x439834
  439803:	xchg   edx,eax
  439804:	push   esp
  439805:	or     BYTE PTR [ebx],bl
  439807:	imul   edi,DWORD PTR [ebx+0x13],0xb
  43980b:	inc    edi
  43980c:	ins    DWORD PTR es:[edi],dx
  43980d:	add    eax,0x73f87d1d
  439812:	xchg   esp,eax
  439813:	lds    ebx,FWORD PTR [ecx-0x7d]
  439816:	push   esi
  439817:	dec    si
  439819:	mov    ebp,DWORD PTR [ebx-0x20]
  43981c:	mov    ah,0x33
  43981e:	sahf   
  43981f:	sbb    eax,0xa137457f
  439824:	test   esi,edi
  439826:	pusha  
  439827:	sbb    al,BYTE PTR [eiz*8-0x77d10000]
  43982e:	test   eax,0x41b3724
  439833:	add    BYTE PTR [edi+0x3a4c7680],ah
  439839:	xchg   edi,eax
  43983a:	jmp    0x439838
  43983c:	in     al,dx
  43983d:	pop    ds
  43983e:	mov    al,ds:0xea1bf77d
  439843:	xchg   BYTE PTR [ebx+0x20],bh
  439846:	cmp    BYTE PTR [ebp+0x1f],0x20
  43984a:	into   
  43984b:	out    0xac,al
  43984d:	dec    eax
  43984e:	in     eax,dx
  43984f:	test   BYTE PTR [edx-0x4d3ff30f],cl
  439855:	aam    0xd8
  439857:	es cdq 
  439859:	call   0x8e6:0xf1373d11
  439860:	test   al,0x9
  439862:	mov    ebp,0xaed1a008
  439867:	sbb    DWORD PTR [ecx-0x6c],0x9
  43986b:	push   edx
  43986c:	sub    BYTE PTR [esi+0x4e593cf9],cl
  439872:	leave  
  439873:	push   edx
  439874:	mov    bl,0x98
  439876:	mov    ecx,0xb092bb52
  43987b:	pop    es
  43987c:	ja     0x439890
  43987e:	inc    ebx
  43987f:	outs   dx,BYTE PTR ds:[esi]
  439880:	mov    BYTE PTR [edx+0x1d9f7d3f],al
  439886:	mov    edi,ecx
  439888:	mov    al,ds:0x5e74523e
  43988d:	(bad)
  439890:	add    BYTE PTR [eax],al
  439892:	js     0x43986c
  439894:	daa    
  439895:	clc    
  439896:	cld    
  439897:	fadd   QWORD PTR [ebx]
  439899:	sar    edx,0x3c
  43989c:	add    eax,0xea33f74c
  4398a1:	jp     0x43989f
  4398a3:	pop    ss
  4398a4:	rcl    DWORD PTR [ebx],cl
  4398a6:	scas   eax,DWORD PTR es:[edi]
  4398a7:	mov    WORD PTR [ebx],fs
  4398a9:	les    esp,FWORD PTR [eax+0x60]
  4398ac:	in     al,dx
  4398ad:	add    eax,0xc6713437
  4398b2:	ins    BYTE PTR es:[edi],dx
  4398b3:	int3   
  4398b4:	cmp    DWORD PTR [eax+ecx*1+0x4105fd34],0xf47aea0f
  4398bf:	adc    esp,DWORD PTR [edi-0x16cbeb3a]
  4398c5:	add    esi,DWORD PTR [edi]
  4398c7:	sbb    ebx,ebp
  4398c9:	jp     0x43986f
  4398cb:	adc    al,0x61
  4398cd:	(bad)  
  4398ce:	cld    
  4398cf:	mul    BYTE PTR [eax+ebp*2]
  4398d2:	inc    edx
  4398d3:	xor    al,0xea
  4398d5:	add    esi,DWORD PTR [edx+0x377cd678]
  4398db:	mov    ebp,0x80b0541c
  4398e0:	inc    edx
  4398e1:	jl     0x43995f
  4398e3:	adc    BYTE PTR [edx-0x15cbc8fe],ah
  4398e9:	xor    al,0xd7
  4398eb:	inc    edx
  4398ec:	xor    edi,DWORD PTR [edx+0x5c]
  4398ef:	or     al,0x71
  4398f1:	scas   al,BYTE PTR es:[edi]
  4398f2:	fdivr  QWORD PTR [edx+0x7e41]
  4398f8:	jg     0x439909
  4398fa:	popa   
  4398fb:	into   
  4398fc:	lock mov esp,0x80b0379c
  439902:	test   BYTE PTR cs:[ecx+0x6c088d34],ch
  439909:	push   0x1b3703eb
  43990e:	in     al,0x84
  439910:	mov    eax,ds:0x4dfc7531
  439915:	fs in  al,dx
  439917:	add    esi,DWORD PTR [edi]
  439919:	aas    
  43991a:	add    DWORD PTR [edx-0x7a],ebp
  43991d:	adc    al,bh
  43991f:	jmp    0xd32d1c21
  439924:	jb     0x4398df
  439926:	fwait
  439927:	jmp    0x6244cd60
  43992c:	xchg   dh,bh
  43992e:	mov    dh,BYTE PTR [ebx+ebp*8]
  439931:	mov    eax,0x12dcd6d
  439936:	mov    DWORD PTR [edx+eax*2],edx
  439939:	mov    bh,0x4d
  43993b:	rol    DWORD PTR [eax-0x3d],0x2
  43993f:	(bad)  
  439940:	sti    
  439941:	dec    eax
  439942:	(bad)  
  439943:	and    al,0x39
  439945:	repnz cmp eax,0x241734f9
  43994b:	pop    ss
  43994c:	or     al,0x3d
  43994e:	mov    al,0xeb
  439950:	popf   
  439951:	jns    0x439934
  439953:	jmp    0x798d:0xf10cb674
  43995a:	aad    0x61
  43995c:	add    BYTE PTR [eax],al
  43995e:	mov    esi,0xff625f3d
  439963:	xor    eax,0x3fae705f
  439968:	in     al,dx
  439969:	repz jb 0x4399dd
  43996c:	adc    ecx,ecx
  43996e:	inc    ebp
  43996f:	hlt    
  439970:	pop    esi
  439971:	pusha  
  439972:	out    dx,al
  439973:	aas    
  439974:	mov    WORD PTR [esp+edi*2+0x7072cc57],?
  43997b:	mov    bh,0x75
  43997d:	inc    ebp
  43997e:	lods   eax,DWORD PTR ds:[esi]
  43997f:	or     eax,0xff34e9f8
  439984:	loop   0x4399f8
  439986:	ins    BYTE PTR es:[edi],dx
  439987:	jmp    edi
  439989:	jb     0x439a01
  43998b:	sbb    eax,0xb95cac8a
  439990:	sub    al,0x74
  439992:	xor    esi,DWORD PTR [ecx+eax*1]
  439995:	add    BYTE PTR [esi-0x657206ce],bl
  43999b:	sar    BYTE PTR [ebp+0x7d],0x5e
  43999f:	sub    cl,bl
  4399a1:	sub    ecx,DWORD PTR [edi+ecx*4+0x30]
  4399a5:	jne    0x4399fd
  4399a7:	mov    dl,BYTE PTR [eax+edi*8-0x25]
  4399ab:	retf   0xb8f8
  4399ae:	dec    edi
  4399af:	xor    DWORD PTR [ecx],eax
  4399b1:	add    BYTE PTR [ebp+0x6a4d7e91],bl
  4399b7:	mov    esp,0xb44774b7
  4399bc:	aas    
  4399bd:	add    BYTE PTR [edi+0xc18469],bl
  4399c3:	add    BYTE PTR [ebx],al
  4399c5:	jp     0x43994b
  4399c7:	rcl    BYTE PTR [edx+0xf],0x8b
  4399cb:	js     0x439996
  4399cd:	push   ecx
  4399ce:	lock add eax,esi
  4399d1:	imul   esi,edi,0x43b1a932
  4399d7:	call   0x3d52f8
  4399dc:	push   ds
  4399dd:	xor    DWORD PTR [ebx+0x1],esp
  4399e0:	push   edx
  4399e1:	retf   
  4399e2:	mov    ds:0x746d0b89,eax
  4399e7:	sbb    edx,DWORD PTR ds:0x520ff3cb
  4399ed:	dec    ebp
  4399ee:	add    DWORD PTR [eax],eax
  4399f0:	into   
  4399f1:	mov    DWORD PTR [eax+ebp*8-0x7],ecx
  4399f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4399f6:	pop    es
  4399f7:	mov    esp,DWORD PTR [ebx-0x2548f6f4]
  4399fd:	sar    BYTE PTR [esi+0x4d],0x6
  439a01:	mov    cl,al
  439a03:	cmp    esp,DWORD PTR [ebx-0x7d79f584]
  439a09:	jge    0x439a05
  439a0b:	jmp    DWORD PTR ds:0x3723cbec
  439a11:	cs jne 0x439a87
  439a14:	jae    0x4399f7
  439a16:	fcom   st(7)
  439a18:	inc    eax
  439a19:	lahf   
  439a1a:	repz clc 
  439a1c:	mov    BYTE PTR ds:0x1a0ad580,cl
  439a22:	jnp    0x439a7f
  439a24:	jnp    0x4399b7
  439a26:	mov    ecx,0xbc0000ef
  439a2b:	pop    edi
  439a2c:	xor    eax,0x7c993b8b
  439a31:	dec    ebx
  439a32:	addr16 xchg ecx,eax
  439a34:	mov    eax,0x84d20cf7
  439a39:	call   DWORD PTR [eax+0x1a]
  439a3c:	add    al,0x8b
  439a3e:	and    eax,DWORD PTR [edx]
  439a40:	xor    eax,esp
  439a42:	cld    
  439a43:	das    
  439a44:	pop    ecx
  439a45:	ins    DWORD PTR es:[edi],dx
  439a46:	sbb    esi,DWORD PTR [eax-0x27]
  439a49:	push   edx
  439a4a:	fild   DWORD PTR [edx]
  439a4c:	lea    edi,[edx]
  439a4e:	pop    esp
  439a4f:	sar    BYTE PTR [edi-0x40],cl
  439a52:	mov    eax,ds:0xb43ec211
  439a57:	rol    DWORD PTR [edx],cl
  439a59:	std    
  439a5a:	shl    dh,1
  439a5c:	scas   al,BYTE PTR es:[edi]
  439a5d:	repz test DWORD PTR [esi-0x69048c87],esp
  439a64:	mov    al,0xd3
  439a66:	lods   al,BYTE PTR ds:[esi]
  439a67:	push   eax
  439a68:	cmc    
  439a69:	mov    eax,0x41d36
  439a6e:	add    al,0x73
  439a70:	add    dl,cl
  439a72:	scas   al,BYTE PTR es:[edi]
  439a73:	loopne 0x439aa8
  439a75:	xchg   DWORD PTR [edx+0x36f88241],eax
  439a7b:	enter  0x7efb,0xcd
  439a7f:	mov    eax,ds:0x76370000
  439a84:	cli    
  439a85:	jl     0x439a46
  439a87:	pop    ds
  439a88:	iret   
  439a89:	or     esi,DWORD PTR [esi+0xb42434]
  439a8f:	add    BYTE PTR [edx+0x23fcea0b],ch
  439a95:	(bad)  
  439a96:	jmp    0x2002d19e
  439a9b:	jns    0x439aa1
  439a9d:	and    BYTE PTR [ebx-0xa],dh
  439aa0:	mov    al,0x38
  439aa2:	ins    BYTE PTR es:[edi],dx
  439aa3:	jns    0x439ad2
  439aa5:	mov    esi,0x60af4f94
  439aaa:	imul   eax,DWORD PTR [ebx],0xbe7342ba
  439ab0:	pop    eax
  439ab1:	pop    edi
  439ab2:	test   al,0x42
  439ab4:	push   0x80c66136
  439ab9:	xchg   edx,eax
  439aba:	popa   
  439abb:	mov    edi,0xd5d136b6
  439ac0:	dec    esi
  439ac1:	or     esi,DWORD PTR [edi-0x54a17e87]
  439ac7:	adc    BYTE PTR [eax-0xe],dh
  439aca:	sbb    al,0xf4
  439acc:	jo     0x439a8a
  439ace:	and    al,0xf3
  439ad0:	xchg   esi,eax
  439ad1:	mov    ebp,0xab5f224
  439ad6:	push   ss
  439ad7:	mov    bl,0xb3
  439ad9:	sbb    BYTE PTR [edx-0x2180157a],0x78
  439ae0:	je     0x439ada
  439ae2:	retf   0x4a44
  439ae5:	jno    0x439a79
  439ae7:	xlat   BYTE PTR ds:[ebx]
  439ae8:	sub    bh,BYTE PTR [edi+0x78ba501c]
  439aee:	idiv   BYTE PTR [eax+0x18]
  439af1:	inc    edi
  439af2:	inc    ebx
  439af3:	jp     0x439af5
  439af5:	add    BYTE PTR [esp+ecx*1+0x62],dh
  439af9:	(bad)  
  439afa:	sub    DWORD PTR [edi-0x410587c7],edi
  439b00:	es xor bh,bl
  439b03:	mov    esi,0x37b9f3a4
  439b08:	add    DWORD PTR [edi+0x39],ebp
  439b0b:	jb     0x439b05
  439b0d:	jno    0x439b44
  439b0f:	xor    al,0x1
  439b11:	jmp    0x26c1af7d
  439b16:	mov    BYTE PTR [ebx],dh
  439b18:	xchg   ecx,eax
  439b19:	cmp    ah,bh
  439b1b:	mov    dh,0xbf
  439b1d:	xchg   esp,eax
  439b1e:	(bad)  
  439b1f:	mov    dh,0xc0
  439b21:	jge    0x439ab0
  439b23:	mov    ebp,0x320fe48
  439b28:	add    al,0xf1
  439b2a:	(bad)  
  439b2b:	fmul   DWORD PTR [ebx+0x3db12894]
  439b31:	std    
  439b32:	out    dx,eax
  439b33:	aaa    
  439b34:	mov    gs,ecx
  439b36:	xor    al,0x34
  439b38:	add    eax,ebp
  439b3a:	pop    esp
  439b3b:	scas   eax,DWORD PTR es:[edi]
  439b3c:	cmp    eax,0x1966d0cd
  439b41:	es popf 
  439b43:	mov    cl,0x2
  439b45:	cli    
  439b46:	hlt    
  439b47:	pusha  
  439b48:	mov    esp,cs
  439b4a:	mov    es,edi
  439b4c:	push   edi
  439b4d:	movnti DWORD PTR [ecx],ecx
  439b50:	clc    
  439b51:	jmp    0x84cffa8a
  439b56:	into   
  439b57:	enter  0x96c4,0x0
  439b5b:	add    BYTE PTR [esi+0x18],dl
  439b5e:	adc    ch,BYTE PTR [ecx]
  439b60:	cmp    edi,eax
  439b62:	les    esi,FWORD PTR [edx+0x71]
  439b65:	(bad)  
  439b66:	nop
  439b67:	adc    DWORD PTR [ebx-0x2716bb70],edx
  439b6d:	stos   BYTE PTR es:[edi],al
  439b6e:	add    cl,ch
  439b70:	xor    al,0x34
  439b72:	push   ecx
  439b73:	jb     0x439b6c
  439b75:	push   ebp
  439b76:	adc    DWORD PTR [eax-0x1],esi
  439b79:	push   ebp
  439b7a:	adc    DWORD PTR [edi+edi*8+0x55],esp
  439b7e:	adc    DWORD PTR [edx],eax
  439b80:	pop    ebx
  439b81:	ja     0x439bd2
  439b83:	add    BYTE PTR [ecx+0x47f8448a],ch
  439b89:	adc    esp,eax
  439b8b:	push   eax
  439b8c:	push   ebp
  439b8d:	repz sti 
  439b8f:	(bad)  
  439b90:	(bad)  [ecx-0x6]
  439b93:	call   DWORD PTR [ecx+0x7d]
  439b96:	add    BYTE PTR [ebp+0x56],0x8b
  439b9a:	inc    esp
  439b9b:	lock stos BYTE PTR es:[edi],al
  439b9d:	rol    BYTE PTR [eax],cl
  439b9f:	add    BYTE PTR [esi-0x3c7449cb],bl
  439ba5:	gs pop ebp
  439ba7:	mov    DWORD PTR [ebx-0x71fffecb],edx
  439bad:	fcomp  DWORD PTR [eax+0x5e]
  439bb0:	lds    ecx,FWORD PTR [eax+0x48]
  439bb3:	ret    
  439bb4:	push   ecx
  439bb5:	push   esp
  439bb6:	inc    ecx
  439bb7:	push   ss
  439bb8:	push   cs
  439bb9:	xor    ch,al
  439bbb:	int3   
  439bbc:	sbb    eax,0x447cc6
  439bc1:	add    BYTE PTR [edx],bh
  439bc3:	sbb    ch,bh
  439bc5:	mov    edi,0x4c7d180b
  439bca:	cmp    al,BYTE PTR [edi*2+0x25002a44]
  439bd1:	shr    cl,cl
  439bd3:	pop    edi
  439bd4:	jle    0x439bae
  439bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bd7:	leave  
  439bd8:	and    ecx,DWORD PTR [ecx+ecx*8]
  439bdb:	pop    edi
  439bdc:	jle    0x439bb1
  439bde:	mov    ch,0xef
  439be0:	jl     0x439baa
  439be2:	xchg   ebp,eax
  439be3:	shl    DWORD PTR [ebx],1
  439be5:	adc    al,0x85
  439be7:	fldenv [ebx]
  439be9:	adc    BYTE PTR [ebp-0x60f3dc37],al
  439bef:	addr16 enter 0xcfdb,0x66
  439bf4:	enter  0xe5d8,0x47
  439bf8:	je     0x439bee
  439bfa:	mov    DWORD PTR [edx+0x7e],esp
  439bfd:	lock aaa 
  439bff:	push   0xffffffd8
  439c01:	and    ebp,DWORD PTR [edi]
  439c03:	xchg   esi,eax
  439c04:	cmp    al,0x85
  439c06:	jae    0x439c3f
  439c08:	icebp  
  439c09:	lock fstp DWORD PTR ds:0x6296e2d
  439c10:	test   al,0x23
  439c12:	inc    edi
  439c13:	ret    0x6dfb
  439c16:	xor    BYTE PTR [esi],dl
  439c18:	mov    eax,0xfca13323
  439c1d:	dec    ecx
  439c1e:	fs dec ebp
  439c20:	ja     0x439be4
  439c22:	icebp  
  439c23:	lds    edi,FWORD PTR ds:0x37000010
  439c29:	xor    DWORD PTR [ebx-0x7],ecx
  439c2c:	sbb    BYTE PTR [edx],0x4
  439c2f:	add    BYTE PTR [edi],dh
  439c31:	and    ecx,DWORD PTR [ebx-0x7]
  439c34:	jo     0x439c50
  439c36:	add    al,0x0
  439c38:	aaa    
  439c39:	adc    DWORD PTR [edx-0x7],ecx
  439c3c:	pusha  
  439c3d:	(bad)  
  439c3e:	lock cmp al,0x37
  439c41:	shl    eax,0x3c
  439c44:	aaa    
  439c45:	sbb    eax,DWORD PTR [eax+eax*1]
  439c48:	aaa    
  439c49:	repnz dec ecx
  439c4b:	stc    
  439c4c:	inc    eax
  439c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439c4e:	test   DWORD PTR [esi],edi
  439c50:	aaa    
  439c51:	mov    cl,0x85
  439c53:	ds aaa 
  439c55:	sbb    eax,0xce370004
  439c5a:	dec    ecx
  439c5b:	stc    
  439c5c:	and    BYTE PTR [esi],al
  439c5e:	(bad)  
  439c5f:	cmp    eax,0x3dc71137
  439c64:	aaa    
  439c65:	sbb    eax,0xae370004
  439c6a:	dec    ecx
  439c6b:	stc    
  439c6c:	add    BYTE PTR [edi-0x75c8c0b6],dh
  439c72:	dec    ebx
  439c73:	aas    
  439c74:	aaa    
  439c75:	sbb    eax,0x34370004
  439c7a:	pop    edi
  439c7b:	dec    ecx
  439c7c:	fiadd  WORD PTR [edi]
  439c7e:	fisttp DWORD PTR [ecx+0x18]
  439c81:	xor    al,0xd7
  439c83:	dec    ecx
  439c84:	adc    BYTE PTR [edx+ebp*8],dh
  439c87:	add    esi,DWORD PTR [edi]
  439c89:	xor    al,0x3f
  439c8b:	dec    ecx
  439c8c:	add    BYTE PTR [eax],al
  439c8e:	mov    esi,0xf8470007
  439c93:	xor    eax,DWORD PTR [edi+eax*2]
  439c96:	jo     0x439ccc
  439c98:	jmp    0x9e49:0x1f343703
  439c9f:	pop    es
  439ca0:	mov    ebx,0xb7345847
  439ca5:	inc    edi
  439ca6:	push   eax
  439ca7:	xor    al,0xea
  439ca9:	add    esi,DWORD PTR [edi]
  439cab:	xor    al,0xff
  439cad:	dec    eax
  439cae:	jle    0x439cb7
  439cb0:	push   0x46
  439cb2:	div    DWORD PTR [ebx]
  439cb4:	inc    si
  439cb6:	div    DWORD PTR [ebx]
  439cb8:	jmp    0x5e48:0xdf343703
  439cbf:	pop    es
  439cc0:	lods   eax,DWORD PTR ds:[esi]
  439cc1:	inc    esi
  439cc2:	sbb    BYTE PTR [ecx+esi*4],dh
  439cc5:	inc    esi
  439cc6:	adc    BYTE PTR [edx+ebp*8],dh
  439cc9:	add    esi,DWORD PTR [edi]
  439ccb:	xor    al,0xbf
  439ccd:	dec    eax
  439cce:	ds pop es
  439cd0:	daa    
  439cd1:	xchg   ebx,eax
  439cd2:	clc    
  439cd3:	xor    ebx,DWORD PTR [ebx]
  439cd5:	xchg   ebx,eax
  439cd6:	jo     0x439d0c
  439cd8:	jmp    0x1e48:0x9f343703
  439cdf:	pop    es
  439ce0:	mov    esi,0xc2345893
  439ce5:	xchg   ebx,eax
  439ce6:	push   eax
  439ce7:	xor    al,0xea
  439ce9:	add    esi,DWORD PTR [edi]
  439ceb:	xor    al,0x7f
  439ced:	dec    eax
  439cee:	inc    BYTE PTR [esi]
  439cf0:	sti    
  439cf1:	iret   
  439cf2:	add    BYTE PTR [eax],al
  439cf4:	cmp    dh,BYTE PTR [ecx+eax*1]
  439cf7:	inc    BYTE PTR [eax]
  439cf9:	dec    ecx
  439cfa:	add    ecx,ebp
  439cfc:	xor    al,0x34
  439cfe:	add    ecx,ebp
  439d00:	xor    al,0x34
  439d02:	add    ecx,ebp
  439d04:	xor    al,0x34
  439d06:	add    DWORD PTR [ebx+edi*4+0x69602017],edi
  439d0d:	ja     0x439d62
  439d0f:	lahf   
  439d10:	pop    esp
  439d11:	mov    ah,0x10
  439d13:	jmp    0xe956314c
  439d18:	xor    al,0x68
  439d1a:	adc    ch,cl
  439d1c:	xor    al,0x6c
  439d1e:	adc    ch,cl
  439d20:	xor    al,0x60
  439d22:	adc    ch,cl
  439d24:	xor    al,0x90
  439d26:	adc    ch,cl
  439d28:	xor    al,0xa8
  439d2a:	adc    ecx,ebp
  439d2c:	xor    al,0xbc
  439d2e:	adc    ecx,ebp
  439d30:	xor    al,0xb0
  439d32:	adc    ecx,ebp
  439d34:	xor    al,0x74
  439d36:	adc    ch,cl
  439d38:	xor    al,0x48
  439d3a:	adc    ch,cl
  439d3c:	xor    al,0x4c
  439d3e:	adc    ch,cl
  439d40:	xor    al,0x40
  439d42:	adc    ch,cl
  439d44:	xor    al,0x70
  439d46:	adc    ch,cl
  439d48:	xor    al,0x88
  439d4a:	adc    ch,cl
  439d4c:	xor    al,0x9c
  439d4e:	adc    ch,cl
  439d50:	xor    al,0x3f
  439d52:	sbb    ebp,ecx
  439d54:	xor    al,0x54
  439d56:	adc    ch,cl
  439d58:	add    BYTE PTR [eax],al
  439d5a:	xor    al,0x28
  439d5c:	adc    ch,cl
  439d5e:	xor    al,0x2c
  439d60:	adc    ch,cl
  439d62:	xor    al,0x20
  439d64:	adc    ch,cl
  439d66:	xor    al,0x50
  439d68:	adc    ch,cl
  439d6a:	xor    al,0x68
  439d6c:	adc    ch,cl
  439d6e:	xor    al,0x7c
  439d70:	adc    al,BYTE PTR [eax]
  439d72:	push   cs
  439d73:	xor    bh,BYTE PTR ds:0x1320e11
  439d79:	adc    esi,ebx
  439d7b:	xor    ebp,esi
  439d7d:	adc    dh,bl
  439d7f:	xor    ecx,edi
  439d81:	adc    dh,cl
  439d83:	xor    ebp,ebp
  439d85:	adc    dh,cl
  439d87:	xor    ebp,edi
  439d89:	adc    dh,bl
  439d8b:	xor    DWORD PTR ds:0x2931de11,esi
  439d91:	adc    esi,ecx
  439d93:	xor    DWORD PTR ds:0xe131ce11,ebx
  439d99:	adc    BYTE PTR [esi-0x61ef2acf],bl
  439d9f:	xor    ecx,ebx
  439da1:	adc    BYTE PTR [esi-0x71ef32cf],cl
  439da7:	xor    ebp,ebx
  439da9:	adc    BYTE PTR [esi-0x61eeeacf],bl
  439daf:	xor    DWORD PTR [ebx-0x2ce71ef],esp
  439db5:	adc    BYTE PTR [esi+0x5e10c131],cl
  439dbb:	xor    DWORD PTR [ebp+0x5e000010],esi
  439dc1:	xor    DWORD PTR [ecx-0x52ceb1f0],edi
  439dc7:	adc    BYTE PTR [esi+0x31],cl
  439dca:	mov    ebp,0xf5315e10
  439dcf:	adc    BYTE PTR [esi+0x31],bl
  439dd2:	adc    DWORD PTR [ecx],0x4e
  439dd5:	xor    ebp,ebx
  439dd7:	adc    BYTE PTR [esi+0x31],cl
  439dda:	mov    eax,ds:0x95311e10
  439ddf:	adc    BYTE PTR [esi],bl
  439de1:	xor    DWORD PTR [ecx-0x72cef1f0],ebx
  439de7:	adc    BYTE PTR [esi],cl
  439de9:	xor    DWORD PTR [ebp+0x41b3710],ebx
  439def:	fsub   QWORD PTR [edi]
  439df1:	sbb    eax,DWORD PTR [edx+eiz*2]
  439df4:	sbb    eax,DWORD PTR es:[esp+eax*8]
  439df8:	daa    
  439df9:	sbb    eax,DWORD PTR [eax+eax*4]
  439dfc:	inc    edi
  439dfd:	sbb    eax,DWORD PTR [esp+edi*2]
  439e00:	inc    edi
  439e01:	sbb    eax,DWORD PTR [eax+edi*2]
  439e04:	inc    edi
  439e05:	sbb    eax,DWORD PTR [esp+esi*2]
  439e08:	inc    edi
  439e09:	sbb    eax,DWORD PTR [esp+eax*4]
  439e0c:	daa    
  439e0d:	sbb    eax,DWORD PTR [esp+edi*4]
  439e10:	daa    
  439e11:	sbb    eax,DWORD PTR [edx+eax*2]
  439e14:	sbb    eax,DWORD PTR es:[esp+eiz*4]
  439e18:	daa    
  439e19:	sbb    eax,DWORD PTR [eax+edx*1]
  439e1c:	inc    esi
  439e1d:	sbb    eax,DWORD PTR [esp+ecx*1]
  439e20:	inc    esi
  439e21:	sbb    eax,DWORD PTR [eax+ecx*1]
  439e24:	add    BYTE PTR [eax],al
  439e26:	inc    esi
  439e27:	sbb    eax,DWORD PTR [esp+eax*1]
  439e2a:	inc    esi
  439e2b:	sbb    eax,DWORD PTR [eax+eax*1]
  439e2e:	sbb    eax,DWORD PTR es:[esp+edi*8]
  439e32:	daa    
  439e33:	sbb    eax,DWORD PTR [eax+edi*8]
  439e36:	daa    
  439e37:	sbb    eax,DWORD PTR [esp+esi*8]
  439e3a:	daa    
  439e3b:	sbb    eax,DWORD PTR [esp+eax*8]
  439e3e:	inc    edi
  439e3f:	sbb    eax,DWORD PTR [eax+eax*8]
  439e42:	inc    edi
  439e43:	sbb    eax,DWORD PTR [esp+edi*4]
  439e46:	inc    edi
  439e47:	sbb    eax,DWORD PTR [eax+edi*4]
  439e4a:	inc    edi
  439e4b:	sbb    eax,DWORD PTR [esp+esi*4]
  439e4e:	daa    
  439e4f:	sbb    eax,DWORD PTR [eax+esi*4]
  439e52:	daa    
  439e53:	sbb    eax,DWORD PTR [esp+ebp*4]
  439e56:	daa    
  439e57:	sbb    eax,DWORD PTR [eax+ebp*4]
  439e5a:	daa    
  439e5b:	sbb    eax,DWORD PTR [eax+esi*1]
  439e5e:	inc    edi
  439e5f:	or     eax,0xd472c04
  439e64:	add    al,0x28
  439e66:	inc    edi
  439e67:	xor    al,0xea
  439e69:	add    edx,DWORD PTR [ebx+0x24]
  439e6c:	jmp    0x2b03:0xea245703
  439e73:	and    al,0xea
  439e75:	add    ebx,DWORD PTR [edi]
  439e77:	and    al,0xea
  439e79:	add    esp,DWORD PTR [ebx]
  439e7b:	and    al,0xea
  439e7d:	add    eax,DWORD PTR [edi+0x24]
  439e80:	jmp    0x2f03:0xea243b03
  439e87:	and    al,0xea
  439e89:	add    eax,DWORD PTR [eax]
  439e8b:	add    BYTE PTR [ebx],dh
  439e8d:	and    al,0xea
  439e8f:	add    esi,DWORD PTR [edi]
  439e91:	and    al,0xea
  439e93:	add    ecx,ebx
  439e95:	xor    ebp,edx
  439e97:	add    edi,DWORD PTR [edi-0x3cfc15cd]
  439e9d:	xor    ebp,edx
  439e9f:	add    esp,DWORD PTR [edi-0x64fc15cd]
  439ea5:	xor    ebp,edx
  439ea7:	add    ebp,DWORD PTR ds:0x8303ea25
  439ead:	xor    ebp,edx
  439eaf:	add    ebx,ebp
  439eb1:	and    al,0xea
  439eb3:	add    edx,ecx
  439eb5:	and    al,0xea
  439eb7:	add    edi,DWORD PTR [esi-0x74fc15d5]
  439ebd:	sub    ebp,edx
  439ebf:	add    esi,DWORD PTR [eax+0x25]
  439ec2:	jmp    0x7303:0xea259303
  439ec9:	xor    ebp,edx
  439ecb:	add    ecx,DWORD PTR [esi]
  439ecd:	and    al,0xea
  439ecf:	add    esi,DWORD PTR [edi+0x33]
  439ed2:	jmp    0x7f03:0xea338b03
  439ed9:	xor    ebp,edx
  439edb:	add    eax,DWORD PTR [ebx-0x14fc15cd]
  439ee1:	xor    al,BYTE PTR [ecx]
  439ee3:	jmp    0xe94b631c
  439ee8:	xor    al,0xd0
  439eea:	pop    es
  439eeb:	jmp    0xe94b6b24
  439ef0:	add    BYTE PTR [eax],al
  439ef2:	xor    al,0xd8
  439ef4:	pop    es
  439ef5:	jmp    0xe94b732e
  439efa:	xor    al,0xa0
  439efc:	pop    es
  439efd:	jmp    0xe94b3b36
  439f02:	xor    al,0xa8
  439f04:	pop    es
  439f05:	jmp    0xe94b433e
  439f0a:	xor    al,0xb0
  439f0c:	pop    es
  439f0d:	jmp    0xe94b4b46
  439f12:	xor    al,0xb8
  439f14:	pop    es
  439f15:	jmp    0xe94b534e
  439f1a:	xor    al,0x80
  439f1c:	or     cl,ch
  439f1e:	xor    al,0x7c
  439f20:	or     cl,ch
  439f22:	xor    al,0xe9
  439f24:	pop    es
  439f25:	jmp    0xe955b55e
  439f2a:	xor    al,0xf0
  439f2c:	adc    ecx,ebp
  439f2e:	xor    al,0xed
  439f30:	pop    es
  439f31:	jmp    0xe94c036a
  439f36:	xor    al,0x70
  439f38:	or     cl,ch
  439f3a:	xor    al,0x6c
  439f3c:	or     cl,ch
  439f3e:	xor    al,0x78
  439f40:	or     cl,ch
  439f42:	xor    al,0x74
  439f44:	or     cl,ch
  439f46:	xor    al,0x40
  439f48:	or     cl,ch
  439f4a:	xor    al,0x3c
  439f4c:	or     cl,ch
  439f4e:	xor    al,0x48
  439f50:	or     cl,ch
  439f52:	xor    al,0x44
  439f54:	or     cl,ch
  439f56:	add    BYTE PTR [eax],al
  439f58:	xor    al,0x50
  439f5a:	or     cl,ch
  439f5c:	xor    al,0x4c
  439f5e:	or     BYTE PTR [eax],al
  439f60:	dec    esi
  439f61:	ss dec ebx
  439f63:	adc    DWORD PTR [esi],ebx
  439f65:	xor    DWORD PTR ss:[edi],ecx
  439f68:	push   ds
  439f69:	ss and eax,0x29360e0f
  439f6f:	femms  
  439f71:	ss sbb eax,0x21361e0f
  439f77:	nop    DWORD PTR [esi]
  439f7a:	adc    eax,0x19360e0f
  439f7f:	femms  
  439f81:	ss or  eax,0x1135de0f
  439f87:	pmaxub mm6,QWORD PTR ds:0x35ce0f05
  439f8e:	mov    dh,0x10
  439f90:	into   
  439f91:	xor    eax,0x35de0efd
  439f96:	add    DWORD PTR [edi],ecx
  439f98:	fidiv  WORD PTR ds:0x35ce0ef5
  439f9e:	stc    
  439f9f:	push   cs
  439fa0:	into   
  439fa1:	xor    eax,0x359e0eed
  439fa6:	cmp    eax,0x51359e10
  439fab:	adc    BYTE PTR [esi-0x71efcacb],cl
  439fb1:	xor    eax,0x359e1049
  439fb6:	loope  0x439fc6
  439fb8:	sahf   
  439fb9:	xor    eax,0xed5
  439fbe:	mov    ?,WORD PTR ds:0x358e0ed9
  439fc4:	int    0xe
  439fc6:	pop    esi
  439fc7:	xor    eax,0x355e0ecd
  439fcc:	add    eax,0xc9354e0f
  439fd1:	push   cs
  439fd2:	dec    esi
  439fd3:	xor    eax,0x355e0ebd
  439fd8:	ror    DWORD PTR [esi],0x37
  439fdb:	or     eax,DWORD PTR [esp+edi*4]
  439fde:	xor    DWORD PTR [ebx],ecx
  439fe0:	add    al,0xb8
  439fe2:	sub    DWORD PTR [ebx],ecx
  439fe4:	add    al,0xb4
  439fe6:	inc    ecx
  439fe7:	or     eax,DWORD PTR [esp+esi*4]
  439fea:	cmp    DWORD PTR [ebx],ecx
  439fec:	add    al,0xb0
  439fee:	xor    DWORD PTR [ebx],ecx
  439ff0:	add    al,0xac
  439ff2:	sub    DWORD PTR [ebx],ecx
  439ff4:	add    al,0xa8
  439ff6:	inc    ecx
  439ff7:	or     eax,DWORD PTR [esp+eiz*4]
  439ffa:	cmp    DWORD PTR [ebx],ecx
  439ffc:	add    al,0xa0
  439ffe:	xor    DWORD PTR [ebx],ecx
  43a000:	add    al,0x9c
  43a002:	sub    DWORD PTR [ebx],ecx
  43a004:	add    al,0x98
  43a006:	inc    ecx
  43a007:	or     eax,DWORD PTR [eax+eiz*8]
  43a00a:	cmp    DWORD PTR [ebx],ecx
  43a00c:	add    al,0xdc
  43a00e:	xor    DWORD PTR [ebx],ecx
  43a010:	add    al,0xd8
  43a012:	sub    DWORD PTR [ebx],ecx
  43a014:	add    al,0xd4
  43a016:	inc    ecx
  43a017:	or     eax,DWORD PTR [eax+edx*8]
  43a01a:	cmp    DWORD PTR [ebx],ecx
  43a01c:	add    al,0xcc
  43a01e:	xor    DWORD PTR [ebx],ecx
  43a020:	add    al,0xc8
  43a022:	add    BYTE PTR [eax],al
  43a024:	sub    DWORD PTR [ebx],ecx
  43a026:	add    al,0xc4
  43a028:	inc    ecx
  43a029:	or     eax,DWORD PTR [edx*8-0x2efbf4c7]
  43a030:	xor    DWORD PTR [ebx],ecx
  43a032:	add    al,0xb1
  43a034:	sub    BYTE PTR [ebx],cl
  43a036:	add    al,0x64
  43a038:	inc    ecx
  43a039:	or     eax,DWORD PTR [edx+eax*4]
  43a03c:	cmp    BYTE PTR [ebx],cl
  43a03e:	add    al,0x7e
  43a040:	xor    BYTE PTR [ebx],cl
  43a042:	add    al,0xbd
  43a044:	sub    DWORD PTR [ebx],ecx
  43a046:	add    al,0x43
  43a048:	inc    eax
  43a049:	or     eax,DWORD PTR [esp+ebp*2]
  43a04c:	cmp    BYTE PTR [ebx],cl
  43a04e:	add    al,0x4c
  43a050:	xor    DWORD PTR [ebx],ecx
  43a052:	add    al,0x91
  43a054:	sub    BYTE PTR [edx+ebp*8],dh
  43a057:	add    edi,ebx
  43a059:	xor    edx,ebp
  43a05b:	add    esi,edi
  43a05d:	xor    edx,ebp
  43a05f:	add    esi,edi
  43a061:	xor    edx,ebp
  43a063:	add    ecx,edi
  43a065:	xor    edx,ebp
  43a067:	add    ebp,DWORD PTR [ebx+0x2e]
  43a06a:	jmp    0x4303:0xea2e5703
  43a071:	cs jmp 0x2b03:0xea2e3f03
  43a079:	cs jmp 0x5603:0xea2f5203
  43a081:	das    
  43a082:	jmp    0x3:0xea2e1f03
  43a089:	add    BYTE PTR [ebx+0x2e],cl
  43a08c:	jmp    0xa303:0xea27b103
  43a093:	daa    
  43a094:	jmp    0x9e03:0xea1c6803
  43a09b:	sbb    al,0xea
  43a09d:	add    edx,DWORD PTR [ecx]
  43a09f:	sbb    eax,0x1d3f03ea
  43a0a4:	jmp    0x6003:0xea1ddd03
  43a0ab:	sbb    ch,dl
  43a0ad:	add    esp,DWORD PTR [ebx-0x58fc15cf]
  43a0b3:	xor    edx,ebp
  43a0b5:	add    ecx,DWORD PTR [ebx-0x60fc15cf]
  43a0bb:	xor    edx,ebp
  43a0bd:	add    edx,DWORD PTR [ebx-0x68fc15cf]
  43a0c3:	xor    edx,ebp
  43a0c5:	add    ebx,DWORD PTR [ebx+0x31]
  43a0c8:	jmp    0x4703:0xea318f03
  43a0cf:	cs add ecx,ebp
  43a0d2:	xor    al,0x30
  43a0d4:	pop    es
  43a0d5:	jmp    0xe94b930e
  43a0da:	xor    al,0xec
  43a0dc:	add    eax,0x5f434e9
  43a0e1:	jmp    0xe949611a
  43a0e6:	xor    al,0xbc
  43a0e8:	add    eax,0x5c834e9
  43a0ed:	jmp    0x7a77a0f2
  43a0f2:	pop    es
  43a0f3:	jmp    0xe949712c
  43a0f8:	xor    al,0x11
  43a0fa:	push   cs
  43a0fb:	jmp    0xe952e334
  43a100:	xor    al,0xd4
  43a102:	add    eax,0x5a034e9
  43a107:	jmp    0xe954f140
  43a10c:	xor    al,0x66
  43a10e:	adc    ecx,ebp
  43a110:	xor    al,0xa4
  43a112:	add    eax,0x5b034e9
  43a117:	jmp    0xe9494d50
  43a11c:	xor    al,0xb8
  43a11e:	add    eax,0x5b434e9
  43a123:	jmp    0xe94a215c
  43a128:	xor    al,0xcc
  43a12a:	adc    cl,ch
  43a12c:	xor    al,0xf3
  43a12e:	adc    cl,ch
  43a130:	xor    al,0xde
  43a132:	adc    cl,ch
  43a134:	xor    al,0xfd
  43a136:	adc    cl,ch
  43a138:	xor    al,0x5c
  43a13a:	push   es
  43a13b:	jmp    0xe94a0974
  43a140:	xor    al,0xba
  43a142:	pop    es
  43a143:	jmp    0xe94a017c
  43a148:	xor    al,0x5c
  43a14a:	push   es
  43a14b:	add    BYTE PTR [esi+0x32],bl
  43a14e:	dec    ebp
  43a14f:	or     eax,0xd51325e
  43a154:	add    BYTE PTR [eax],al
  43a156:	dec    esi
  43a157:	xor    al,BYTE PTR [ebp+0xd]
  43a15a:	dec    esi
  43a15b:	xor    ah,BYTE PTR [ebx+0x3d325e0f]
  43a161:	or     eax,0xf9b325e
  43a166:	dec    esi
  43a167:	xor    ah,BYTE PTR ds:0x39324e0d
  43a16d:	or     eax,0xf87321e
  43a172:	push   ds
  43a173:	xor    ah,BYTE PTR [ecx]
  43a175:	or     eax,0xd15320e
  43a17a:	push   cs
  43a17b:	xor    bl,BYTE PTR [ecx]
  43a17d:	or     eax,0xd0d321e
  43a182:	push   ds
  43a183:	xor    dl,BYTE PTR [ecx]
  43a185:	or     eax,0xd05320e
  43a18a:	push   cs
  43a18b:	xor    cl,BYTE PTR [ecx]
  43a18d:	or     eax,0xcfd31de
  43a192:	fidiv  WORD PTR [ecx]
  43a194:	test   BYTE PTR [esi+ecx*8],dl
  43a197:	xor    ebp,esi
  43a199:	or     al,0xce
  43a19b:	xor    ecx,edi
  43a19d:	or     al,0xde
  43a19f:	xor    ebp,ebp
  43a1a1:	or     al,0xde
  43a1a3:	xor    ecx,esi
  43a1a5:	or     al,0xce
  43a1a7:	xor    ebp,esp
  43a1a9:	or     al,0xce
  43a1ab:	xor    ecx,ebp
  43a1ad:	or     al,0x9e
  43a1af:	xor    ebp,ebx
  43a1b1:	or     al,0x9e
  43a1b3:	xor    DWORD PTR [ecx],ebp
  43a1b5:	push   cs
  43a1b6:	mov    ?,WORD PTR [ecx]
  43a1b8:	sbb    eax,0x8e00000e
  43a1bd:	xor    DWORD PTR [ecx],esp
  43a1bf:	push   cs
  43a1c0:	sahf   
  43a1c1:	xor    DWORD PTR ds:0x3b319e0e,edx
  43a1c7:	getsec 
  43a1c9:	or     eax,DWORD PTR [esi+esi*1]
  43a1cc:	sub    BYTE PTR [ebx],cl
  43a1ce:	add    al,0x32
  43a1d0:	inc    eax
  43a1d1:	or     eax,DWORD PTR [esi+ebp*1]
  43a1d4:	cmp    BYTE PTR [ebx],cl
  43a1d6:	add    al,0xc0
  43a1d8:	xor    ecx,DWORD PTR [ebx]
  43a1da:	add    al,0xbc
  43a1dc:	sub    ecx,DWORD PTR [ebx]
  43a1de:	add    al,0xb8
  43a1e0:	inc    ebx
  43a1e1:	or     eax,DWORD PTR [esp+esi*4]
  43a1e4:	cmp    ecx,DWORD PTR [ebx]
  43a1e6:	add    al,0xb0
  43a1e8:	xor    ecx,DWORD PTR [ebx]
  43a1ea:	add    al,0xac
  43a1ec:	sub    ecx,DWORD PTR [ebx]
  43a1ee:	add    al,0xa8
  43a1f0:	inc    ebx
  43a1f1:	or     eax,DWORD PTR [esp+eiz*4]
  43a1f4:	cmp    ecx,DWORD PTR [ebx]
  43a1f6:	add    al,0xb0
  43a1f8:	xor    ecx,DWORD PTR [ebx]
  43a1fa:	add    al,0xac
  43a1fc:	sub    ecx,DWORD PTR [ebx]
  43a1fe:	add    al,0xa8
  43a200:	inc    ebx
  43a201:	or     eax,DWORD PTR [esp+eiz*4]
  43a204:	cmp    ecx,DWORD PTR [ebx]
  43a206:	add    al,0xa0
  43a208:	xor    ecx,DWORD PTR [ebx]
  43a20a:	add    al,0x9c
  43a20c:	sub    ecx,DWORD PTR [ebx]
  43a20e:	add    al,0xf2
  43a210:	inc    ecx
  43a211:	or     eax,DWORD PTR [esi+ebp*8]
  43a214:	cmp    DWORD PTR [ebx],ecx
  43a216:	add    al,0xbc
  43a218:	dec    edx
  43a219:	or     eax,DWORD PTR [esi+eiz*8]
  43a21c:	sub    DWORD PTR [ebx],ecx
  43a21e:	add    al,0xd5
  43a220:	add    BYTE PTR [eax],al
  43a222:	sub    cl,BYTE PTR [ebx]
  43a224:	add    al,0xde
  43a226:	cmp    DWORD PTR [ebx],ecx
  43a228:	add    al,0xda
  43a22a:	xor    DWORD PTR [ebx],ecx
  43a22c:	add    al,0xd6
  43a22e:	sub    DWORD PTR [ebx],ecx
  43a230:	add    al,0xd2
  43a232:	inc    ecx
  43a233:	or     eax,DWORD PTR [esi+ecx*8]
  43a236:	cmp    DWORD PTR [ebx],ecx
  43a238:	add    al,0x60
  43a23a:	xor    ecx,DWORD PTR [ebx]
  43a23c:	add    al,0x5c
  43a23e:	sub    ecx,DWORD PTR [ebx]
  43a240:	add    al,0x58
  43a242:	inc    ebx
  43a243:	xor    al,0xea
  43a245:	add    esp,ebx
  43a247:	das    
  43a248:	jmp    0xeb03:0xea2fe703
  43a24f:	das    
  43a250:	jmp    0xf303:0xea2fff03
  43a257:	das    
  43a258:	jmp    0x1b03:0xea2ff703
  43a25f:	xor    dl,ch
  43a261:	add    ecx,DWORD PTR [edi]
  43a263:	xor    dl,ch
  43a265:	add    eax,DWORD PTR [ebx]
  43a267:	xor    dl,ch
  43a269:	add    eax,DWORD PTR [edi]
  43a26b:	xor    dl,ch
  43a26d:	add    ecx,DWORD PTR [ebx]
  43a26f:	xor    dl,ch
  43a271:	add    ebx,DWORD PTR [edi+0x28]
  43a274:	jmp    0x5703:0xea285303
  43a27b:	sub    dl,ch
  43a27d:	add    edi,DWORD PTR [ebx]
  43a27f:	sub    dl,ch
  43a281:	add    ebp,DWORD PTR [edi]
  43a283:	sub    dl,ch
  43a285:	add    eax,DWORD PTR [eax]
  43a287:	add    BYTE PTR [ebx],ah
  43a289:	sub    dl,ch
  43a28b:	add    esp,DWORD PTR [edi]
  43a28d:	sub    dl,ch
  43a28f:	add    ebp,DWORD PTR [ebx]
  43a291:	sub    dl,ch
  43a293:	add    edi,DWORD PTR [edi]
  43a295:	sub    dl,ch
  43a297:	add    esi,DWORD PTR [ebx]
  43a299:	sub    dl,ch
  43a29b:	add    esi,DWORD PTR [edi]
  43a29d:	sub    dl,ch
  43a29f:	add    ebx,ebx
  43a2a1:	das    
  43a2a2:	jmp    0xc303:0xea2fcf03
  43a2a9:	das    
  43a2aa:	jmp    0xcb03:0xea2fc703
  43a2b1:	das    
  43a2b2:	jmp    0x9303:0xea2f9f03
  43a2b9:	das    
  43a2ba:	jmp    0x34e9:0x12f9703
  43a2c1:	fmul   DWORD PTR [ebx]
  43a2c3:	jmp    0xe94f7efc
  43a2c8:	xor    al,0xe0
  43a2ca:	or     ebp,ecx
  43a2cc:	xor    al,0xe4
  43a2ce:	or     ebp,ecx
  43a2d0:	xor    al,0xe8
  43a2d2:	or     ebp,ecx
  43a2d4:	xor    al,0xec
  43a2d6:	or     ebp,ecx
  43a2d8:	xor    al,0xf0
  43a2da:	or     ebp,ecx
  43a2dc:	xor    al,0xf4
  43a2de:	or     ebp,ecx
  43a2e0:	xor    al,0xb8
  43a2e2:	or     ebp,ecx
  43a2e4:	xor    al,0xbc
  43a2e6:	or     ebp,ecx
  43a2e8:	xor    al,0xc0
  43a2ea:	or     ebp,ecx
  43a2ec:	add    BYTE PTR [eax],al
  43a2ee:	xor    al,0xf3
  43a2f0:	or     ebp,ecx
  43a2f2:	xor    al,0xf7
  43a2f4:	or     ebp,ecx
  43a2f6:	xor    al,0xcc
  43a2f8:	or     ebp,ecx
  43a2fa:	xor    al,0xd0
  43a2fc:	or     ebp,ecx
  43a2fe:	xor    al,0xd4
  43a300:	or     ebp,ecx
  43a302:	xor    al,0xae
  43a304:	adc    cl,ch
  43a306:	xor    al,0x27
  43a308:	adc    ch,cl
  43a30a:	xor    al,0x98
  43a30c:	adc    ecx,ebp
  43a30e:	xor    al,0xa4
  43a310:	or     ebp,ecx
  43a312:	xor    al,0xa8
  43a314:	or     ebp,ecx
  43a316:	xor    al,0xac
  43a318:	or     ebp,ecx
  43a31a:	xor    al,0xa0
  43a31c:	or     ebp,ecx
  43a31e:	xor    al,0xb4
  43a320:	or     ebp,ecx
  43a322:	xor    al,0x78
  43a324:	or     al,0xe9
  43a326:	xor    al,0x16
  43a328:	push   es
  43a329:	jmp    0xe9497d62
  43a32e:	xor    al,0x84
  43a330:	or     al,0xe9
  43a332:	xor    al,0x88
  43a334:	or     al,0xe9
  43a336:	xor    al,0x8c
  43a338:	or     al,0x0
  43a33a:	sahf   
  43a33b:	ss pop ebp
  43a33d:	or     ecx,DWORD PTR [esi-0x71f44eca]
  43a343:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  43a345:	or     ebx,DWORD PTR [esi-0x61f37fca]
  43a34b:	test   BYTE PTR ss:[esi+ecx*4],cl
  43a34f:	ss js  0x43a35e
  43a352:	add    BYTE PTR [eax],al
  43a354:	mov    ?,WORD PTR [esi]
  43a356:	jl     0x43a364
  43a358:	pop    esi
  43a359:	ss cdq 
  43a35b:	or     ebx,DWORD PTR [esi+0x36]
  43a35e:	lea    ecx,[ebx]
  43a360:	dec    esi
  43a361:	ss xchg ecx,eax
  43a363:	or     ecx,DWORD PTR [esi+0x36]
  43a366:	test   DWORD PTR [ebx],ecx
  43a368:	pop    esi
  43a369:	mov    DWORD PTR ss:[ebx],ecx
  43a36c:	pop    esi
  43a36d:	ss jge 0x43a37b
  43a370:	dec    esi
  43a371:	or     DWORD PTR ss:[ebx],0xb75364e
  43a378:	push   ds
  43a379:	ss jns 0x43a387
  43a37c:	push   ds
  43a37d:	ss ins DWORD PTR es:[edi],dx
  43a37f:	or     ecx,DWORD PTR [esi]
  43a381:	and    DWORD PTR ss:[ebx],ecx
  43a384:	push   cs
  43a385:	ss adc eax,0x19361e0b
  43a38b:	or     ebx,DWORD PTR [esi]
  43a38d:	ss or  eax,0x11360e0b
  43a393:	or     ecx,DWORD PTR [esi]
  43a395:	ss add eax,0x935de0b
  43a39b:	or     ebx,esi
  43a39d:	xor    eax,0x35ce0afd
  43a3a2:	add    DWORD PTR [ebx],ecx
  43a3a4:	into   
  43a3a5:	xor    eax,0x35de0af5
  43a3aa:	stc    
  43a3ab:	or     bl,dh
  43a3ad:	xor    eax,0x35ce0aed
  43a3b2:	icebp  
  43a3b3:	or     dh,BYTE PTR [edi]
  43a3b5:	or     eax,DWORD PTR [esp+ebp*8]
  43a3b8:	add    BYTE PTR [eax],al
  43a3ba:	cmp    eax,0x3de8040b
  43a3bf:	or     eax,DWORD PTR [esp+eiz*8]
  43a3c2:	sub    eax,0x2df0040b
  43a3c7:	or     eax,DWORD PTR [esp+ebp*8]
  43a3ca:	cmp    eax,0x3de8040b
  43a3cf:	or     eax,DWORD PTR [esp+edx*8]
  43a3d2:	sub    eax,0x2c45040b
  43a3d7:	or     eax,DWORD PTR [esp+ecx*8]
  43a3da:	cmp    eax,0x3a32040b
  43a3df:	or     eax,DWORD PTR [esi+ebp*1]
  43a3e2:	xor    cl,BYTE PTR [ebx]
  43a3e4:	add    al,0xd0
  43a3e6:	sub    eax,0x3dcc040b
  43a3eb:	or     eax,DWORD PTR [eax+ecx*8]
  43a3ee:	cmp    eax,0x2db4040b
  43a3f3:	or     eax,DWORD PTR [eiz*1-0x53fbf4d4]
  43a3fa:	cmp    eax,0x4668040b
  43a3ff:	or     eax,DWORD PTR [esp+eiz*4]
  43a402:	sub    eax,0x2da0040b
  43a407:	or     eax,DWORD PTR [esp+ebx*4]
  43a40a:	cmp    eax,0x3d98040b
  43a40f:	or     eax,DWORD PTR [esp+edx*4]
  43a412:	sub    eax,0x2d90040b
  43a417:	or     eax,DWORD PTR [esp+ecx*4]
  43a41a:	cmp    eax,0x88040b
  43a41f:	add    BYTE PTR ds:0x2d84040b,bh
  43a425:	or     eax,DWORD PTR [eax+eax*4]
  43a428:	sub    eax,0x3d8c040b
  43a42d:	or     eax,DWORD PTR [esp+ebp*8]
  43a430:	cmp    DWORD PTR [edx+ebp*8],esi
  43a433:	add    ecx,DWORD PTR [ebx+0x2e]
  43a436:	jmp    0x2303:0xea2e4703
  43a43d:	cs jmp 0x1b03:0xea2e1f03
  43a445:	cs jmp 0xf303:0xea2e1703
  43a44d:	sub    eax,0x2def03ea
  43a452:	jmp    0xe703:0xea2deb03
  43a459:	sub    eax,0x2e0303ea
  43a45e:	jmp    0x8803:0xea2dff03
  43a465:	sub    edx,ebp
  43a467:	add    eax,DWORD PTR [edi]
  43a469:	cs jmp 0xff03:0xea2e0303
  43a471:	sub    eax,0x2dfb03ea
  43a476:	jmp    0x7303:0xea2df703
  43a47d:	sub    ch,dl
  43a47f:	add    ebp,DWORD PTR [edi+0x2a]
  43a482:	jmp    0xea2a:0x6b000003
  43a489:	add    edx,DWORD PTR [edi+0x2a]
  43a48c:	jmp    0x2f03:0xea2a3303
  43a493:	sub    ch,dl
  43a495:	add    ebp,DWORD PTR [ebx]
  43a497:	sub    ch,dl
  43a499:	add    esp,DWORD PTR [edi]
  43a49b:	sub    ch,dl
  43a49d:	add    eax,DWORD PTR [ebx+0x2a]
  43a4a0:	jmp    0x3b03:0xea2b9003
  43a4a7:	sub    ch,dl
  43a4a9:	add    esi,DWORD PTR [edi]
  43a4ab:	sub    al,BYTE PTR [ecx]
  43a4ad:	jmp    0xe94d9ce6
  43a4b2:	xor    al,0xfc
  43a4b4:	or     ecx,ebp
  43a4b6:	xor    al,0x0
  43a4b8:	or     ch,cl
  43a4ba:	xor    al,0x4
  43a4bc:	or     ch,cl
  43a4be:	xor    al,0x8
  43a4c0:	or     ch,cl
  43a4c2:	xor    al,0xc
  43a4c4:	or     ch,cl
  43a4c6:	xor    al,0x10
  43a4c8:	or     ch,cl
  43a4ca:	xor    al,0x14
  43a4cc:	or     ch,cl
  43a4ce:	xor    al,0xd8
  43a4d0:	or     ecx,ebp
  43a4d2:	xor    al,0xdc
  43a4d4:	or     ecx,ebp
  43a4d6:	xor    al,0xe0
  43a4d8:	or     ecx,ebp
  43a4da:	xor    al,0xe4
  43a4dc:	or     ecx,ebp
  43a4de:	xor    al,0xe8
  43a4e0:	or     ecx,ebp
  43a4e2:	xor    al,0x8f
  43a4e4:	or     al,0xe9
  43a4e6:	xor    al,0xf0
  43a4e8:	or     ecx,ebp
  43a4ea:	add    BYTE PTR [eax],al
  43a4ec:	xor    al,0xf4
  43a4ee:	or     ecx,ebp
  43a4f0:	xor    al,0xb8
  43a4f2:	or     ecx,ebp
  43a4f4:	xor    al,0xbc
  43a4f6:	or     ecx,ebp
  43a4f8:	xor    al,0xc0
  43a4fa:	or     ecx,ebp
  43a4fc:	xor    al,0xc4
  43a4fe:	or     ecx,ebp
  43a500:	xor    al,0xc8
  43a502:	or     ecx,ebp
  43a504:	xor    al,0xcc
  43a506:	or     ecx,ebp
  43a508:	xor    al,0xd0
  43a50a:	or     ecx,ebp
  43a50c:	xor    al,0xf8
  43a50e:	or     ebp,ecx
  43a510:	xor    al,0x98
  43a512:	or     ecx,ebp
  43a514:	xor    al,0x9c
  43a516:	or     ecx,ebp
  43a518:	xor    al,0xa0
  43a51a:	or     ecx,ebp
  43a51c:	xor    al,0xa4
  43a51e:	or     ecx,ebp
  43a520:	xor    al,0xa8
  43a522:	or     ecx,ebp
  43a524:	xor    al,0xac
  43a526:	or     DWORD PTR [eax],eax
  43a528:	into   
  43a529:	xor    bh,BYTE PTR [ebp+0x9]
  43a52c:	into   
  43a52d:	xor    al,BYTE PTR [ecx+0x7532de09]
  43a533:	or     esi,ebx
  43a535:	xor    bh,BYTE PTR [ecx+0x9]
  43a538:	into   
  43a539:	xor    ch,BYTE PTR [ebp+0x9]
  43a53c:	into   
  43a53d:	xor    dh,BYTE PTR [ecx+0x9]
  43a540:	sahf   
  43a541:	xor    ah,BYTE PTR [ebp+0x9]
  43a544:	sahf   
  43a545:	xor    ch,BYTE PTR [ecx+0x9]
  43a548:	mov    ?,WORD PTR [edx]
  43a54a:	(bad)  
  43a54b:	or     ecx,DWORD PTR [esi+0x96132]
  43a551:	add    BYTE PTR [esi-0x61f6aace],bl
  43a557:	xor    bl,BYTE PTR [ecx+0x9]
  43a55a:	mov    ?,WORD PTR [edx]
  43a55c:	dec    ebp
  43a55d:	or     DWORD PTR [esi+0x5e095132],ecx
  43a563:	xor    al,BYTE PTR [ebp+0x9]
  43a566:	pop    esi
  43a567:	xor    cl,BYTE PTR [ecx+0x9]
  43a56a:	dec    esi
  43a56b:	xor    bh,BYTE PTR ds:0x41324e09
  43a571:	or     DWORD PTR [esi+0x32],ebx
  43a574:	xor    eax,0x39325e09
  43a579:	or     DWORD PTR [esi+0x32],ecx
  43a57c:	sub    eax,0x9b324e09
  43a581:	or     ebx,DWORD PTR [esi]
  43a583:	xor    cl,BYTE PTR [edi-0x6ccde1f5]
  43a589:	or     ecx,DWORD PTR [esi]
  43a58b:	xor    al,BYTE PTR [edi+0x30320e0b]
  43a591:	or     DWORD PTR [esi],ebx
  43a593:	xor    bh,BYTE PTR [edi+0xb]
  43a596:	push   ds
  43a597:	xor    al,BYTE PTR [ebx+0x77320e0b]
  43a59d:	or     ecx,DWORD PTR [esi]
  43a59f:	xor    ah,BYTE PTR [eax]
  43a5a1:	or     DWORD PTR [edi],esi
  43a5a3:	or     eax,DWORD PTR [ebx+eiz*1]
  43a5a6:	or     eax,DWORD PTR ds:[edx+esi*2]
  43a5aa:	sub    al,0xb
  43a5ac:	add    al,0x1b
  43a5ae:	or     eax,DWORD PTR cs:[edx+ebp*2]
  43a5b2:	cmp    al,0xb
  43a5b4:	add    al,0x66
  43a5b6:	add    BYTE PTR [eax],al
  43a5b8:	cmp    al,0xb
  43a5ba:	add    al,0x62
  43a5bc:	sub    al,0xb
  43a5be:	add    al,0x5e
  43a5c0:	sub    al,0xb
  43a5c2:	add    al,0xf0
  43a5c4:	aas    
  43a5c5:	or     eax,DWORD PTR [esp+ebp*8]
  43a5c8:	aas    
  43a5c9:	or     eax,DWORD PTR [eax+ebp*8]
  43a5cc:	das    
  43a5cd:	or     eax,DWORD PTR [esi+ecx*2]
  43a5d0:	sub    al,0xb
  43a5d2:	add    al,0xf7
  43a5d4:	aas    
  43a5d5:	or     eax,DWORD PTR [ebx+esi*8]
  43a5d8:	aas    
  43a5d9:	or     eax,DWORD PTR [edi+ebp*8]
  43a5dc:	das    
  43a5dd:	or     eax,DWORD PTR [ebx+ebp*8]
  43a5e0:	das    
  43a5e1:	or     eax,DWORD PTR [edi+eiz*8]
  43a5e4:	aas    
  43a5e5:	or     eax,DWORD PTR [ebx+eiz*8]
  43a5e8:	aas    
  43a5e9:	or     eax,DWORD PTR [edx+esi*1]
  43a5ec:	sub    al,0xb
  43a5ee:	add    al,0x2e
  43a5f0:	sub    al,0xb
  43a5f2:	add    al,0xd7
  43a5f4:	aas    
  43a5f5:	or     eax,DWORD PTR [ebx+edx*8]
  43a5f8:	aas    
  43a5f9:	or     eax,DWORD PTR [edi+ecx*8]
  43a5fc:	das    
  43a5fd:	or     eax,DWORD PTR [ebx+ecx*8]
  43a600:	das    
  43a601:	or     eax,DWORD PTR [edx+ebx*1]
  43a604:	cmp    al,0xb
  43a606:	add    al,0x16
  43a608:	cmp    al,0xb
  43a60a:	add    al,0x12
  43a60c:	sub    al,0xb
  43a60e:	add    al,0xe
  43a610:	sub    al,0xb
  43a612:	add    al,0xb7
  43a614:	aas    
  43a615:	or     eax,DWORD PTR [ebx+esi*4]
  43a618:	aas    
  43a619:	or     eax,DWORD PTR [edi+ebp*4]
  43a61c:	add    BYTE PTR [eax],al
  43a61e:	das    
  43a61f:	xor    al,0xea
  43a621:	add    ecx,esp
  43a623:	sub    ebp,edx
  43a625:	add    ebx,DWORD PTR [eax-0x6bfc15d5]
  43a62b:	sub    ebp,edx
  43a62d:	add    esp,ebp
  43a62f:	sub    edx,ebp
  43a631:	add    edi,DWORD PTR [ebx+ebp*1+0x2ba803ea]
  43a638:	jmp    0xb003:0xea2ba403
  43a63f:	sub    ebp,edx
  43a641:	add    ebp,DWORD PTR [ebx+ebp*1+0x2bb803ea]
  43a648:	jmp    0x2003:0xea2bb403
  43a64f:	sub    al,0xea
  43a651:	add    ebx,DWORD PTR [esp+ebp*1]
  43a654:	jmp    0x403:0xea2c0803
  43a65b:	sub    al,0xea
  43a65d:	add    esi,DWORD PTR [ebp+0x29]
  43a660:	jmp    0xad03:0xea29b903
  43a667:	sub    edx,ebp
  43a669:	add    esp,DWORD PTR [ecx-0x5afc15d7]
  43a66f:	sub    edx,ebp
  43a671:	add    ecx,DWORD PTR [ecx-0x62fc15d7]
  43a677:	sub    edx,ebp
  43a679:	add    edx,DWORD PTR [ecx-0x6afc15d7]
  43a67f:	sub    edx,ebp
  43a681:	add    eax,DWORD PTR [eax]
  43a683:	add    BYTE PTR [ecx-0x32fc15d7],bl
  43a689:	ds jmp 0xc503:0xea3ec103
  43a691:	ds jmp 0xbd03:0xea3ea903
  43a699:	ds add ecx,ebp
  43a69c:	xor    al,0xba
  43a69e:	or     ch,cl
  43a6a0:	xor    al,0xb6
  43a6a2:	or     ch,cl
  43a6a4:	xor    al,0x72
  43a6a6:	or     ebp,ecx
  43a6a8:	xor    al,0x6e
  43a6aa:	or     ebp,ecx
  43a6ac:	xor    al,0x6a
  43a6ae:	or     ebp,ecx
  43a6b0:	xor    al,0x66
  43a6b2:	or     ebp,ecx
  43a6b4:	xor    al,0x62
  43a6b6:	or     ebp,ecx
  43a6b8:	xor    al,0x5e
  43a6ba:	or     ebp,ecx
  43a6bc:	xor    al,0x5a
  43a6be:	or     ebp,ecx
  43a6c0:	xor    al,0x56
  43a6c2:	or     ebp,ecx
  43a6c4:	xor    al,0x92
  43a6c6:	or     ebp,ecx
  43a6c8:	xor    al,0x8e
  43a6ca:	or     ebp,ecx
  43a6cc:	xor    al,0x8a
  43a6ce:	or     ebp,ecx
  43a6d0:	xor    al,0x86
  43a6d2:	or     ebp,ecx
  43a6d4:	xor    al,0x82
  43a6d6:	or     ebp,ecx
  43a6d8:	xor    al,0x7e
  43a6da:	or     ebp,ecx
  43a6dc:	xor    al,0x7a
  43a6de:	or     ebp,ecx
  43a6e0:	xor    al,0x76
  43a6e2:	or     ebp,ecx
  43a6e4:	xor    al,0x32
  43a6e6:	or     ebp,ecx
  43a6e8:	add    BYTE PTR [eax],al
  43a6ea:	xor    al,0x2e
  43a6ec:	or     ebp,ecx
  43a6ee:	xor    al,0x2a
  43a6f0:	or     ebp,ecx
  43a6f2:	xor    al,0x26
  43a6f4:	or     ebp,ecx
  43a6f6:	xor    al,0x22
  43a6f8:	or     ebp,ecx
  43a6fa:	xor    al,0x1e
  43a6fc:	or     ebp,ecx
  43a6fe:	xor    al,0x1a
  43a700:	or     ebp,ecx
  43a702:	xor    al,0x16
  43a704:	or     ebp,ecx
  43a706:	xor    al,0x52
  43a708:	or     ebp,ecx
  43a70a:	xor    al,0x4e
  43a70c:	or     ebp,ecx
  43a70e:	xor    al,0x4a
  43a710:	or     ebp,ecx
  43a712:	xor    al,0x46
  43a714:	or     eax,DWORD PTR [eax]
  43a716:	push   cs
  43a717:	aaa    
  43a718:	pop    es
  43a719:	or     bl,BYTE PTR [esi]
  43a71b:	aaa    
  43a71c:	or     ecx,DWORD PTR [edx]
  43a71e:	push   ds
  43a71f:	aaa    
  43a720:	dec    DWORD PTR [ecx]
  43a722:	push   cs
  43a723:	aaa    
  43a724:	add    ecx,DWORD PTR [edx]
  43a726:	push   cs
  43a727:	aaa    
  43a728:	test   DWORD PTR [ecx],0x9fb36de
  43a72e:	fidiv  WORD PTR [esi]
  43a730:	out    dx,eax
  43a731:	or     esi,ecx
  43a733:	ss repz or esi,ecx
  43a737:	ss out 0x9,eax
  43a73a:	fidiv  WORD PTR [esi]
  43a73c:	jmp    0x43a747
  43a73e:	fidiv  WORD PTR [esi]
  43a740:	fisttp WORD PTR [ecx]
  43a742:	into   
  43a743:	ss jecxz 0x43a74f
  43a746:	into   
  43a747:	xlat   BYTE PTR ss:[ebx]
  43a749:	or     DWORD PTR [esi+0x9db36],ebx
  43a74f:	add    BYTE PTR [esi-0x71f630ca],bl
  43a755:	ror    DWORD PTR ss:[ecx],cl
  43a758:	mov    ?,WORD PTR [esi]
  43a75a:	(bad)  
  43a75b:	or     DWORD PTR [esi-0x61f634ca],ebx
  43a761:	ss mov edi,0xc3368e09
  43a767:	or     DWORD PTR [esi+0x5e09b736],ecx
  43a76d:	ss mov ebx,0xaf365e09
  43a773:	or     DWORD PTR [esi+0x36],ecx
  43a776:	mov    bl,0x9
  43a778:	dec    esi
  43a779:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  43a77b:	or     DWORD PTR [esi+0x36],ebx
  43a77e:	stos   DWORD PTR es:[edi],eax
  43a77f:	or     DWORD PTR [esi+0x36],ebx
  43a782:	lahf   
  43a783:	or     DWORD PTR [esi+0x36],ecx
  43a786:	mov    ds:0x97364e09,eax
  43a78b:	or     DWORD PTR [esi],ebx
  43a78d:	ss fwait
  43a78f:	or     DWORD PTR [edi],esi
  43a791:	fild   DWORD PTR [ebx]
  43a793:	xchg   esi,eax
  43a794:	fild   DWORD PTR cs:[ebx]
  43a797:	xchg   edx,eax
  43a798:	fild   DWORD PTR cs:[ebx]
  43a79b:	mov    ?,WORD PTR [esi]
  43a79d:	fild   DWORD PTR [ebx]
  43a79f:	mov    bh,BYTE PTR [esi]
  43a7a1:	fild   DWORD PTR [ebx]
  43a7a3:	xchg   BYTE PTR [esi],ch
  43a7a5:	fild   DWORD PTR [ebx]
  43a7a7:	sub    BYTE PTR [esi],0xdb
  43a7aa:	add    edi,DWORD PTR [esi+0x3e]
  43a7ad:	fild   DWORD PTR [ebx]
  43a7af:	jp     0x43a7ef
  43a7b1:	fild   DWORD PTR [ebx]
  43a7b3:	jbe    0x43a7b5
  43a7b5:	add    BYTE PTR [esi],ch
  43a7b7:	fild   DWORD PTR [ebx]
  43a7b9:	jb     0x43a7e9
  43a7bb:	fild   DWORD PTR [ebx]
  43a7bd:	outs   dx,BYTE PTR ds:[esi]
  43a7be:	fild   DWORD PTR ds:[ebx]
  43a7c1:	push   0x3e
  43a7c3:	fild   DWORD PTR [ebx]
  43a7c5:	data16 fild DWORD PTR cs:[ebx]
  43a7c9:	bound  ebp,QWORD PTR [esi]
  43a7cb:	fild   DWORD PTR [ebx]
  43a7cd:	pop    esi
  43a7ce:	fild   DWORD PTR ds:[ebx]
  43a7d1:	pop    edx
  43a7d2:	fild   DWORD PTR ds:[ebx]
  43a7d5:	push   esi
  43a7d6:	fild   DWORD PTR cs:[ebx]
  43a7d9:	push   edx
  43a7da:	fild   DWORD PTR cs:[ebx]
  43a7dd:	dec    esi
  43a7de:	fild   DWORD PTR ds:[ebx]
  43a7e1:	dec    edx
  43a7e2:	fild   DWORD PTR ds:[ebx]
  43a7e5:	inc    esi
  43a7e6:	fild   DWORD PTR cs:[ebx]
  43a7e9:	inc    edx
  43a7ea:	fild   DWORD PTR cs:[ebx]
  43a7ed:	ds fild DWORD PTR ds:[ebx]
  43a7f1:	cmp    bh,BYTE PTR [esi]
  43a7f3:	fild   DWORD PTR [ebx]
  43a7f5:	ss fild DWORD PTR cs:[ebx]
  43a7f9:	xor    ch,BYTE PTR [esi]
  43a7fb:	fild   DWORD PTR [ebx]
  43a7fd:	cs fild DWORD PTR ds:[ebx]
  43a801:	sub    bh,BYTE PTR [esi]
  43a803:	fild   DWORD PTR [ebx]
  43a805:	es fild DWORD PTR cs:[ebx]
  43a809:	and    ch,BYTE PTR [esi]
  43a80b:	xor    al,0xea
  43a80d:	add    edx,DWORD PTR [ecx+0x3b]
  43a810:	jmp    0x4903:0xea3b4d03
  43a817:	cmp    ebp,edx
  43a819:	add    eax,DWORD PTR [eax]
  43a81b:	add    BYTE PTR [ebp+0x3b],al
  43a81e:	jmp    0x3d03:0xea3b4103
  43a825:	cmp    ebp,edx
  43a827:	add    edi,DWORD PTR [ecx]
  43a829:	cmp    ebp,edx
  43a82b:	add    esi,DWORD PTR ds:0xf103ea3b
  43a831:	cmp    ebp,edx
  43a833:	add    ebp,ebp
  43a835:	cmp    ebp,edx
  43a837:	add    ebp,ecx
  43a839:	cmp    ebp,edx
  43a83b:	add    esp,ebp
  43a83d:	cmp    ebp,edx
  43a83f:	add    esp,ecx
  43a841:	cmp    ebp,edx
  43a843:	add    ebx,ebp
  43a845:	cmp    ebp,edx
  43a847:	add    ebx,ecx
  43a849:	cmp    ebp,edx
  43a84b:	add    edx,ebp
  43a84d:	cmp    ebp,edx
  43a84f:	add    edx,DWORD PTR [ecx-0x72fc15c5]
  43a855:	cmp    ebp,edx
  43a857:	add    ecx,DWORD PTR [ecx-0x7afc15c5]
  43a85d:	cmp    ebp,edx
  43a85f:	add    eax,DWORD PTR [ecx+0x7d03ea3b]
  43a865:	cmp    ebp,edx
  43a867:	add    edi,DWORD PTR [ecx+0x3b]
  43a86a:	jmp    0xb103:0xea3b7503
  43a871:	cmp    ebp,edx
  43a873:	add    ebp,DWORD PTR [ebp-0x56fc15c5]
  43a879:	cmp    ebp,edx
  43a87b:	add    esp,DWORD PTR [ebp+0x3ea3b]
  43a881:	add    BYTE PTR [ecx-0x62fc15c5],ah
  43a887:	cmp    eax,DWORD PTR [ecx]
  43a889:	jmp    0xe94c42c2
  43a88e:	xor    al,0x96
  43a890:	or     cl,ch
  43a892:	xor    al,0xce
  43a894:	or     cl,ch
  43a896:	xor    al,0xca
  43a898:	or     cl,ch
  43a89a:	xor    al,0xc6
  43a89c:	or     cl,ch
  43a89e:	xor    al,0xc2
  43a8a0:	or     cl,ch
  43a8a2:	xor    al,0xbe
  43a8a4:	or     cl,ch
  43a8a6:	xor    al,0xba
  43a8a8:	or     cl,ch
  43a8aa:	xor    al,0xb6
  43a8ac:	or     cl,ch
  43a8ae:	xor    al,0xb2
  43a8b0:	or     cl,ch
  43a8b2:	xor    al,0x6e
  43a8b4:	or     ecx,ebp
  43a8b6:	xor    al,0x6a
  43a8b8:	or     ecx,ebp
  43a8ba:	xor    al,0x66
  43a8bc:	or     ecx,ebp
  43a8be:	xor    al,0x62
  43a8c0:	or     ecx,ebp
  43a8c2:	xor    al,0x5e
  43a8c4:	or     ecx,ebp
  43a8c6:	xor    al,0x5a
  43a8c8:	or     ecx,ebp
  43a8ca:	xor    al,0x56
  43a8cc:	or     ecx,ebp
  43a8ce:	xor    al,0x52
  43a8d0:	or     ecx,ebp
  43a8d2:	xor    al,0x8e
  43a8d4:	or     ecx,ebp
  43a8d6:	xor    al,0x8a
  43a8d8:	or     ecx,ebp
  43a8da:	xor    al,0x86
  43a8dc:	or     ecx,ebp
  43a8de:	xor    al,0x82
  43a8e0:	or     ecx,ebp
  43a8e2:	xor    al,0x7e
  43a8e4:	or     ecx,ebp
  43a8e6:	add    BYTE PTR [eax],al
  43a8e8:	xor    al,0x7a
  43a8ea:	or     ecx,ebp
  43a8ec:	xor    al,0x76
  43a8ee:	or     ecx,ebp
  43a8f0:	xor    al,0x72
  43a8f2:	or     ecx,ebp
  43a8f4:	xor    al,0x2e
  43a8f6:	or     ecx,ebp
  43a8f8:	xor    al,0x2a
  43a8fa:	or     ecx,ebp
  43a8fc:	xor    al,0x26
  43a8fe:	or     ecx,ebp
  43a900:	xor    al,0x22
  43a902:	or     DWORD PTR [eax],eax
  43a904:	pop    esi
  43a905:	xor    esp,DWORD PTR [edi]
  43a907:	or     BYTE PTR [esi+0x33],bl
  43a90a:	sub    ecx,DWORD PTR [eax]
  43a90c:	dec    esi
  43a90d:	xor    ebx,DWORD PTR [edi]
  43a90f:	or     BYTE PTR [esi+0x33],cl
  43a912:	and    ecx,DWORD PTR [eax]
  43a914:	push   ds
  43a915:	xor    edx,DWORD PTR [edi]
  43a917:	or     BYTE PTR [esi],bl
  43a919:	xor    ebx,DWORD PTR [ebx]
  43a91b:	or     BYTE PTR [esi],cl
  43a91d:	xor    ecx,DWORD PTR [edi]
  43a91f:	or     BYTE PTR [esi],cl
  43a921:	xor    edx,DWORD PTR [ebx]
  43a923:	or     BYTE PTR [esi],bl
  43a925:	xor    eax,DWORD PTR [edi]
  43a927:	or     BYTE PTR [esi],bl
  43a929:	xor    ebp,DWORD PTR [edx]
  43a92b:	pop    es
  43a92c:	push   cs
  43a92d:	xor    ebx,DWORD PTR [esi]
  43a92f:	pop    es
  43a930:	push   cs
  43a931:	xor    eax,DWORD PTR [ebx]
  43a933:	or     dh,bl
  43a935:	xor    dh,bh
  43a937:	pop    es
  43a938:	fidiv  WORD PTR [edx]
  43a93a:	sti    
  43a93b:	pop    es
  43a93c:	into   
  43a93d:	xor    ch,bh
  43a93f:	pop    es
  43a940:	into   
  43a941:	xor    dh,bl
  43a943:	pop    es
  43a944:	fidiv  WORD PTR [edx]
  43a946:	out    0x7,eax
  43a948:	fidiv  WORD PTR [edx]
  43a94a:	jmp    0x43a953
  43a94c:	add    BYTE PTR [eax],al
  43a94e:	into   
  43a94f:	xor    bl,bh
  43a951:	pop    es
  43a952:	into   
  43a953:	xor    ah,bl
  43a955:	pop    es
  43a956:	sahf   
  43a957:	xor    dl,bh
  43a959:	pop    es
  43a95a:	sahf   
  43a95b:	xor    bl,bl
  43a95d:	pop    es
  43a95e:	mov    ?,WORD PTR [edx]
  43a960:	iret   
  43a961:	pop    es
  43a962:	mov    ?,WORD PTR [edx]
  43a964:	rol    DWORD PTR [edi],cl
  43a966:	sahf   
  43a967:	xor    al,bh
  43a969:	pop    es
  43a96a:	sahf   
  43a96b:	xor    cl,bl
  43a96d:	pop    es
  43a96e:	mov    ?,WORD PTR [edx]
  43a970:	mov    edi,0xc3328e07
  43a975:	pop    es
  43a976:	pop    esi
  43a977:	xor    dh,BYTE PTR [edi-0x44cda1f9]
  43a97d:	pop    es
  43a97e:	aaa    
  43a97f:	fld    QWORD PTR [ebx]
  43a981:	mov    dh,0x30
  43a983:	fld    QWORD PTR [ebx]
  43a985:	mov    dl,0x38
  43a987:	fld    QWORD PTR [ebx]
  43a989:	scas   al,BYTE PTR es:[edi]
  43a98a:	xor    ch,bl
  43a98c:	add    esp,DWORD PTR [ebp+0x3a]
  43a98f:	fld    QWORD PTR [ebx]
  43a991:	popa   
  43a992:	xor    bl,ch
  43a994:	add    ebx,DWORD PTR [ebp+0x3a]
  43a997:	fild   DWORD PTR [ebx]
  43a999:	pop    ecx
  43a99a:	xor    bl,bl
  43a99c:	add    edx,DWORD PTR [ebp+0x3a]
  43a99f:	fild   DWORD PTR [ebx]
  43a9a1:	push   ecx
  43a9a2:	xor    bl,bl
  43a9a4:	add    ecx,DWORD PTR [ebp+0x3a]
  43a9a7:	fild   DWORD PTR [ebx]
  43a9a9:	and    al,0x32
  43a9ab:	fild   DWORD PTR [ebx]
  43a9ad:	mov    bh,BYTE PTR [eax]
  43a9af:	fild   DWORD PTR [ebx]
  43a9b1:	xchg   BYTE PTR [eax],al
  43a9b3:	add    BYTE PTR [eax],dh
  43a9b5:	fild   DWORD PTR [ebx]
  43a9b7:	cmp    BYTE PTR [eax],0xdb
  43a9ba:	add    edi,DWORD PTR [esi+0x30]
  43a9bd:	fild   DWORD PTR [ebx]
  43a9bf:	xor    eax,0x3103db3a
  43a9c4:	xor    bl,bl
  43a9c6:	add    ebp,DWORD PTR ds:0x2903db3a
  43a9cc:	xor    bl,bl
  43a9ce:	add    ebp,DWORD PTR [edx+0x38]
  43a9d1:	fild   DWORD PTR [ebx]
  43a9d3:	data16 xor bl,bl
  43a9d6:	add    esp,DWORD PTR [edx+0x38]
  43a9d9:	fild   DWORD PTR [ebx]
  43a9db:	pop    esi
  43a9dc:	xor    bl,bl
  43a9de:	add    ebx,DWORD PTR [edx+0x38]
  43a9e1:	fild   DWORD PTR [ebx]
  43a9e3:	push   esi
  43a9e4:	xor    bl,bl
  43a9e6:	add    edx,DWORD PTR [edx+0x38]
  43a9e9:	fild   DWORD PTR [ebx]
  43a9eb:	dec    esi
  43a9ec:	xor    bl,bl
  43a9ee:	add    eax,DWORD PTR ds:0x103db3a
  43a9f4:	xor    bl,bl
  43a9f6:	add    edi,ebp
  43a9f8:	cmp    esi,DWORD PTR [edx+ebp*8]
  43a9fb:	add    ebp,DWORD PTR [ecx]
  43a9fd:	xor    eax,0x351d03ea
  43aa02:	jmp    0x503:0xea352103
  43aa09:	xor    eax,0x351903ea
  43aa0e:	jmp    0x1103:0xea350d03
  43aa15:	xor    eax,0x3ea
  43aa1a:	push   ebp
  43aa1b:	xor    eax,0x354903ea
  43aa20:	jmp    0x4103:0xea353d03
  43aa27:	xor    eax,0x352503ea
  43aa2c:	jmp    0x2d03:0xea353903
  43aa33:	xor    eax,0x353103ea
  43aa38:	jmp    0xe903:0xea353503
  43aa3f:	xor    eax,0x35dd03ea
  43aa44:	jmp    0xc503:0xea35e103
  43aa4b:	xor    eax,0x35d903ea
  43aa50:	jmp    0xd103:0xea35cd03
  43aa57:	xor    eax,0x359503ea
  43aa5c:	jmp    0x7d03:0xea358903
  43aa63:	xor    eax,0x358103ea
  43aa68:	jmp    0x7903:0xea356503
  43aa6f:	xor    eax,0x37ba03ea
  43aa74:	add    ecx,ebp
  43aa76:	xor    al,0xb3
  43aa78:	cld    
  43aa79:	call   0xe94119b2
  43aa7e:	add    BYTE PTR [eax],al
  43aa80:	xor    al,0xae
  43aa82:	(bad)  
  43aa83:	call   0xe94254bc
  43aa88:	xor    al,0xa6
  43aa8a:	(bad)  
  43aa8b:	call   0xe9424cc4
  43aa90:	xor    al,0x9e
  43aa92:	(bad)  
  43aa93:	call   0xe94244cc
  43aa98:	xor    al,0x96
  43aa9a:	(bad)  
  43aa9b:	call   0xe94240d4
  43aaa0:	xor    al,0xca
  43aaa2:	(bad)  
  43aaa3:	call   0xe94278dc
  43aaa8:	xor    al,0xc2
  43aaaa:	(bad)  
  43aaab:	call   0xe94270e4
  43aab0:	xor    al,0xba
  43aab2:	(bad)  
  43aab3:	call   0xe94268ec
  43aab8:	xor    al,0xb2
  43aaba:	(bad)  
  43aabb:	call   0xe94260f4
  43aac0:	xor    al,0x6a
  43aac2:	(bad)  
  43aac3:	call   0xe94318fc
  43aac8:	xor    al,0x62
  43aaca:	(bad)  
  43aacb:	call   0xe9431104
  43aad0:	xor    al,0x5a
  43aad2:	(bad)  
  43aad3:	call   0xe943090c
  43aad8:	xor    al,0x52
  43aada:	(bad)  
  43aadb:	call   0xe9430114
  43aae0:	xor    al,0x8a
  43aae2:	(bad)  
  43aae3:	call   0x8e77aae8
  43aae8:	(bad)  
  43aae9:	call   0xe9432d22
  43aaee:	xor    al,0x86
  43aaf0:	(bad)  
  43aaf1:	call   FWORD PTR [esi-0x71f9b8c9]
  43aaf7:	aaa    
  43aaf8:	inc    BYTE PTR [ebx]
  43aafa:	mov    ?,WORD PTR [edi]
  43aafc:	add    al,BYTE PTR [esi+ebx*2]
  43aaff:	aaa    
  43ab00:	test   BYTE PTR [ebx],0x5e
  43ab03:	aaa    
  43ab04:	cli    
  43ab05:	add    ecx,DWORD PTR [esi+0x37]
  43ab08:	cmp    eax,DWORD PTR [esi]
  43ab0a:	dec    esi
  43ab0b:	aaa    
  43ab0c:	das    
  43ab0d:	push   es
  43ab0e:	pop    esi
  43ab0f:	aaa    
  43ab10:	xor    eax,DWORD PTR [esi]
  43ab12:	pop    esi
  43ab13:	aaa    
  43ab14:	daa    
  43ab15:	push   es
  43ab16:	dec    esi
  43ab17:	aaa    
  43ab18:	sub    eax,DWORD PTR [esi]
  43ab1a:	dec    esi
  43ab1b:	aaa    
  43ab1c:	pop    ds
  43ab1d:	push   es
  43ab1e:	push   ds
  43ab1f:	aaa    
  43ab20:	and    eax,DWORD PTR [esi]
  43ab22:	push   ds
  43ab23:	aaa    
  43ab24:	pop    ss
  43ab25:	push   es
  43ab26:	push   cs
  43ab27:	aaa    
  43ab28:	sbb    eax,DWORD PTR [esi]
  43ab2a:	push   cs
  43ab2b:	aaa    
  43ab2c:	clts   
  43ab2e:	push   ds
  43ab2f:	aaa    
  43ab30:	adc    eax,DWORD PTR [esi]
  43ab32:	push   ds
  43ab33:	aaa    
  43ab34:	pop    es
  43ab35:	push   es
  43ab36:	push   cs
  43ab37:	aaa    
  43ab38:	or     eax,DWORD PTR [esi]
  43ab3a:	push   cs
  43ab3b:	aaa    
  43ab3c:	inc    DWORD PTR ds:0x60336de
  43ab42:	fidiv  WORD PTR [esi]
  43ab44:	test   DWORD PTR ds:0x5fb36ce,0x36ce0000
  43ab4e:	out    dx,eax
  43ab4f:	add    eax,0x5f336de
  43ab54:	fidiv  WORD PTR [esi]
  43ab56:	out    0x5,eax
  43ab58:	into   
  43ab59:	ss jmp 0x43ab61
  43ab5c:	into   
  43ab5d:	fild   WORD PTR ss:0x5e3369e
  43ab64:	sahf   
  43ab65:	xlat   BYTE PTR ss:[ebx]
  43ab67:	add    eax,0x5db368e
  43ab6c:	aaa    
  43ab6d:	fld    QWORD PTR [ebx]
  43ab6f:	(bad)  
  43ab70:	cmp    bl,ch
  43ab72:	add    edx,edx
  43ab74:	xor    bl,ch
  43ab76:	add    ecx,esi
  43ab78:	cmp    bl,ch
  43ab7a:	add    ecx,edx
  43ab7c:	xor    bl,ch
  43ab7e:	add    eax,esi
  43ab80:	cmp    bl,ch
  43ab82:	add    eax,edx
  43ab84:	xor    bl,ch
  43ab86:	add    edi,DWORD PTR [esi-0x45fc22c6]
  43ab8c:	xor    bl,ch
  43ab8e:	add    esi,DWORD PTR [esi-0x4dfc22c6]
  43ab94:	xor    bl,ch
  43ab96:	add    ebp,DWORD PTR [esi-0x55fc22c6]
  43ab9c:	xor    bl,ch
  43ab9e:	add    esp,DWORD PTR [esi-0x5dfc24c6]
  43aba4:	xor    bl,bl
  43aba6:	add    ebx,DWORD PTR [esi-0x65fc24c6]
  43abac:	xor    bl,bl
  43abae:	add    edx,DWORD PTR [esi-0x24c60000]
  43abb4:	add    edx,DWORD PTR [edx-0x71fc24ce]
  43abba:	cmp    bl,bl
  43abbc:	add    ecx,DWORD PTR [edx-0x79fc24ce]
  43abc2:	cmp    bl,bl
  43abc4:	add    eax,DWORD PTR [edx+0x7e03db32]
  43abca:	cmp    bl,bl
  43abcc:	add    edi,DWORD PTR [edx+0x32]
  43abcf:	fild   DWORD PTR [ebx]
  43abd1:	jbe    0x43ac0d
  43abd3:	fild   DWORD PTR [ebx]
  43abd5:	jb     0x43ac09
  43abd7:	fild   DWORD PTR [ebx]
  43abd9:	outs   dx,BYTE PTR ds:[esi]
  43abda:	cmp    bl,bl
  43abdc:	add    ebp,DWORD PTR [edx+0x32]
  43abdf:	fild   DWORD PTR [ebx]
  43abe1:	data16 cmp bl,bl
  43abe4:	add    esp,DWORD PTR [edx+0x32]
  43abe7:	xor    al,0xea
  43abe9:	add    eax,DWORD PTR [ecx]
  43abeb:	das    
  43abec:	jmp    0xe903:0xea2efd03
  43abf3:	cs jmp 0xf103:0xea2ee503
  43abfb:	cs jmp 0xf903:0xea2eed03
  43ac03:	cs jmp 0x2103:0xea2ef503
  43ac0b:	das    
  43ac0c:	jmp    0x903:0xea2f1d03
  43ac13:	das    
  43ac14:	jmp    0xea2f:0x5000003
  43ac1b:	add    edx,DWORD PTR [ecx]
  43ac1d:	das    
  43ac1e:	jmp    0x5903:0xea2f0d03
  43ac25:	das    
  43ac26:	jmp    0x4103:0xea2f5503
  43ac2d:	das    
  43ac2e:	jmp    0x2903:0xea2f3d03
  43ac35:	das    
  43ac36:	jmp    0x3103:0xea2f2503
  43ac3d:	das    
  43ac3e:	jmp    0x3903:0xea2f2d03
  43ac45:	das    
  43ac46:	jmp    0xe103:0xea2f3503
  43ac4d:	das    
  43ac4e:	jmp    0xc903:0xea2fdd03
  43ac55:	das    
  43ac56:	jmp    0xd103:0xea2fc503
  43ac5d:	das    
  43ac5e:	jmp    0x34e9:0x12fcd03
  43ac65:	sar    ah,cl
  43ac67:	call   0xe94082a0
  43ac6c:	xor    al,0xa
  43ac6e:	std    
  43ac6f:	call   0xe940baa8
  43ac74:	xor    al,0x2
  43ac76:	std    
  43ac77:	call   0xe940b2b0
  43ac7c:	add    BYTE PTR [eax],al
  43ac7e:	xor    al,0xfa
  43ac80:	cld    
  43ac81:	call   0xe940aaba
  43ac86:	xor    al,0xf2
  43ac88:	cld    
  43ac89:	call   0xe940a2c2
  43ac8e:	xor    al,0xaa
  43ac90:	cld    
  43ac91:	call   0xe9405aca
  43ac96:	xor    al,0xa2
  43ac98:	cld    
  43ac99:	call   0xe94052d2
  43ac9e:	xor    al,0x9a
  43aca0:	cld    
  43aca1:	call   0xe9404ada
  43aca6:	xor    al,0x8e
  43aca8:	cld    
  43aca9:	call   0xe9403ee2
  43acae:	xor    al,0xc6
  43acb0:	cld    
  43acb1:	call   0xe94076ea
  43acb6:	xor    al,0xbe
  43acb8:	cld    
  43acb9:	call   0xe9406ef2
  43acbe:	xor    al,0xb6
  43acc0:	cld    
  43acc1:	call   0xe94066fa
  43acc6:	xor    al,0xae
  43acc8:	cld    
  43acc9:	call   0xe9405f02
  43acce:	xor    al,0x66
  43acd0:	std    
  43acd1:	call   0xe941170a
  43acd6:	xor    al,0x5e
  43acd8:	std    
  43acd9:	call   0x410f12
  43acde:	into   
  43acdf:	xor    esp,DWORD PTR [edi+0x4]
  43ace2:	add    BYTE PTR [eax],al
  43ace4:	into   
  43ace5:	xor    ebp,DWORD PTR [ebx+0x4]
  43ace8:	sahf   
  43ace9:	xor    ebx,DWORD PTR [edi+0x4]
  43acec:	sahf   
  43aced:	xor    esp,DWORD PTR [ebx+0x4]
  43acf0:	mov    ?,WORD PTR [ebx]
  43acf2:	push   edi
  43acf3:	add    al,0x8e
  43acf5:	xor    ebx,DWORD PTR [ebx+0x4]
  43acf8:	sahf   
  43acf9:	xor    ecx,DWORD PTR [edi+0x4]
  43acfc:	sahf   
  43acfd:	xor    edx,DWORD PTR [ebx+0x4]
  43ad00:	mov    ?,WORD PTR [ebx]
  43ad02:	inc    edi
  43ad03:	add    al,0x8e
  43ad05:	xor    ecx,DWORD PTR [ebx+0x4]
  43ad08:	pop    esi
  43ad09:	xor    edi,DWORD PTR [edi]
  43ad0b:	add    al,0x5e
  43ad0d:	xor    eax,DWORD PTR [ebx+0x4]
  43ad10:	dec    esi
  43ad11:	xor    esi,DWORD PTR [edi]
  43ad13:	add    al,0x4e
  43ad15:	xor    edi,DWORD PTR [ebx]
  43ad17:	add    al,0x5e
  43ad19:	xor    ebp,DWORD PTR [edi]
  43ad1b:	add    al,0x5e
  43ad1d:	xor    esi,DWORD PTR [ebx]
  43ad1f:	add    al,0x4e
  43ad21:	xor    esp,DWORD PTR [edi]
  43ad23:	add    al,0x4e
  43ad25:	xor    ebp,DWORD PTR [ebx]
  43ad27:	add    al,0x1e
  43ad29:	xor    ebx,DWORD PTR [edi]
  43ad2b:	add    al,0x1e
  43ad2d:	xor    esp,DWORD PTR [ebx]
  43ad2f:	add    al,0xe
  43ad31:	xor    edx,DWORD PTR [edi]
  43ad33:	add    al,0xe
  43ad35:	xor    ebx,DWORD PTR [ebx]
  43ad37:	add    al,0x1e
  43ad39:	xor    ecx,DWORD PTR [edi]
  43ad3b:	add    al,0x1e
  43ad3d:	xor    edx,DWORD PTR [ebx]
  43ad3f:	add    al,0xe
  43ad41:	xor    eax,DWORD PTR [edi]
  43ad43:	add    al,0xe
  43ad45:	xor    ecx,DWORD PTR [ebx]
  43ad47:	add    al,0x0
  43ad49:	add    dh,bl
  43ad4b:	xor    bh,bh
  43ad4d:	add    ebx,esi
  43ad4f:	xor    al,BYTE PTR [ebx]
  43ad51:	add    al,0xce
  43ad53:	xor    dh,bh
  43ad55:	add    ecx,esi
  43ad57:	xor    bh,bl
  43ad59:	add    esi,DWORD PTR [edi]
  43ad5b:	fld    QWORD PTR [ebx]
  43ad5d:	div    BYTE PTR [ebx*8-0x22cb0dfd]
  43ad64:	add    ebp,esi
  43ad66:	xor    al,0xdd
  43ad68:	add    ebp,edx
  43ad6a:	xor    al,0xdd
  43ad6c:	add    esp,esi
  43ad6e:	xor    al,0xdd
  43ad70:	add    esp,edx
  43ad72:	xor    al,0xdd
  43ad74:	add    ebx,esi
  43ad76:	xor    al,0xdd
  43ad78:	add    ebx,edx
  43ad7a:	xor    al,0xdd
  43ad7c:	add    edx,esi
  43ad7e:	xor    al,0xdd
  43ad80:	add    edx,edx
  43ad82:	xor    al,0xdd
  43ad84:	add    ecx,esi
  43ad86:	xor    al,0xdd
  43ad88:	add    ebx,DWORD PTR [edi]
  43ad8a:	fld    QWORD PTR ss:[ebx]
  43ad8d:	sbb    esi,DWORD PTR [esi]
  43ad8f:	fld    QWORD PTR [ebx]
  43ad91:	pop    ss
  43ad92:	fld    QWORD PTR ss:[ebx]
  43ad95:	adc    esi,DWORD PTR [esi]
  43ad97:	fld    QWORD PTR [ebx]
  43ad99:	push   cs
  43ad9a:	fld    QWORD PTR ss:[ebx]
  43ad9d:	xor    dh,BYTE PTR [esi]
  43ad9f:	fld    QWORD PTR [ebx]
  43ada1:	cmp    esi,DWORD PTR [esi]
  43ada3:	fld    QWORD PTR [ebx]
  43ada5:	add    esi,DWORD PTR [esi]
  43ada7:	fld    QWORD PTR [ebx]
  43ada9:	push   DWORD PTR [edi]
  43adab:	fild   DWORD PTR [ebx]
  43adad:	sti    
  43adae:	add    BYTE PTR [eax],al
  43adb0:	aaa    
  43adb1:	fild   DWORD PTR [ebx]
  43adb3:	div    DWORD PTR [edi]
  43adb5:	fild   DWORD PTR [ebx]
  43adb7:	repz aaa 
  43adb9:	fild   DWORD PTR [ebx]
  43adbb:	out    dx,al
  43adbc:	aaa    
  43adbd:	fild   DWORD PTR [ebx]
  43adbf:	jmp    0x43adf8
  43adc1:	fild   DWORD PTR [ebx]
  43adc3:	out    0x37,eax
  43adc5:	fild   DWORD PTR [ebx]
  43adc7:	jecxz  0x43ae00
  43adc9:	fild   DWORD PTR [ebx]
  43adcb:	fbstp  TBYTE PTR [edi]
  43adcd:	fild   DWORD PTR [ebx]
  43adcf:	(bad)  [edi]
  43add1:	fild   DWORD PTR [ebx]
  43add3:	xlat   BYTE PTR ds:[ebx]
  43add4:	aaa    
  43add5:	xor    al,0xea
  43add7:	add    eax,DWORD PTR [esi*1+0x350103ea]
  43adde:	jmp    0xf803:0xea34fc03
  43ade5:	xor    al,0xea
  43ade7:	add    esi,esp
  43ade9:	xor    al,0xea
  43adeb:	add    esi,eax
  43aded:	xor    al,0xea
  43adef:	add    ebp,esp
  43adf1:	xor    al,0xea
  43adf3:	add    ebp,eax
  43adf5:	xor    al,0xea
  43adf7:	add    esp,esp
  43adf9:	xor    al,0xea
  43adfb:	add    esp,eax
  43adfd:	xor    al,0xea
  43adff:	add    ebx,esp
  43ae01:	xor    al,0xea
  43ae03:	add    ebx,eax
  43ae05:	xor    al,0xea
  43ae07:	add    edx,esp
  43ae09:	xor    al,0xea
  43ae0b:	add    ecx,DWORD PTR ds:0xbfd6b4e5
  43ae11:	outs   dx,DWORD PTR ds:[esi]
  43ae12:	or     edi,DWORD PTR [esi]
  43ae14:	add    BYTE PTR [eax],al
  43ae16:	hlt    
  43ae17:	adc    edx,ebp
  43ae19:	ds hlt 
  43ae1b:	xor    edx,ecx
  43ae1d:	add    esi,DWORD PTR [edi]
  43ae1f:	xor    al,0x27
  43ae21:	shl    DWORD PTR [esi],0x14
  43ae24:	jmp    0xf8f2:0x7cb13703
  43ae2b:	pop    esi
  43ae2c:	fistp  QWORD PTR [esi]
  43ae2e:	je     0x43ae5e
  43ae30:	stos   BYTE PTR es:[edi],al
  43ae31:	add    esi,DWORD PTR [edi]
  43ae33:	xor    al,0x63
  43ae35:	rol    DWORD PTR [ebx+0x35],0x98
  43ae39:	sti    
  43ae3a:	lods   eax,DWORD PTR ds:[esi]
  43ae3b:	das    
  43ae3c:	push   0xa9b13702
  43ae41:	dec    DWORD PTR [edi]
  43ae43:	add    al,0x6b
  43ae45:	sub    edi,esi
  43ae47:	pop    edi
  43ae48:	call   0x135522c7
  43ae4d:	rcr    DWORD PTR [edi],0x86
  43ae50:	add    DWORD PTR [ebx],edx
  43ae52:	cli    
  43ae53:	addr16 mov ebp,0x8a6ee06
  43ae59:	jmp    0xe95f1f77
  43ae5e:	xor    al,0x34
  43ae60:	add    DWORD PTR [edx-0x9],esp
  43ae63:	inc    edi
  43ae64:	or     BYTE PTR [edi-0xc],dl
  43ae67:	in     eax,0x1c
  43ae69:	scas   al,BYTE PTR es:[edi]
  43ae6a:	xor    al,0x34
  43ae6c:	add    DWORD PTR [eax+0x74],eax
  43ae6f:	in     al,0xf7
  43ae71:	jmp    0x7933a519
  43ae76:	and    esi,DWORD PTR [ecx+0xb]
  43ae79:	push   0x0
  43ae7b:	add    BYTE PTR [ebp+eiz*8+0x6c],cl
  43ae7f:	in     eax,0xb5
  43ae81:	jo     0x43ae9e
  43ae83:	call   0xd4469a3d
  43ae88:	and    BYTE PTR [edi+0x3e],0xe3
  43ae8c:	js     0x43ae3b
  43ae8e:	dec    ebp
  43ae8f:	out    dx,eax
  43ae90:	sti    
  43ae91:	sar    ebp,cl
  43ae93:	out    0x24,eax
  43ae95:	xor    DWORD PTR [ecx],eax
  43ae97:	fnstenv [esp+esi*1]
  43ae9a:	xchg   ch,ch
  43ae9c:	(bad)  
  43ae9d:	out    0xf7,al
  43ae9f:	push   0xfffffff4
  43aea1:	das    
  43aea2:	clc    
  43aea3:	cmp    ebp,esi
  43aea5:	scas   al,BYTE PTR es:[edi]
  43aea6:	cmp    eax,0x40a249ca
  43aeab:	call   0x287c8265
  43aeb0:	dec    esp
  43aeb1:	loope  0x43ae3b
  43aeb3:	lods   al,BYTE PTR ds:[esi]
  43aeb4:	cmp    ah,BYTE PTR [ecx+0x35cf6ac3]
  43aeba:	and    DWORD PTR [ebp+0x14],esp
  43aebd:	popa   
  43aebe:	add    esi,DWORD PTR ds:[ecx+edi*4]
  43aec2:	cmp    eax,0x40a6020a
  43aec7:	jmp    0x43ae80
  43aec9:	aam    0xff
  43aecb:	inc    DWORD PTR [edi+0x338305a3]
  43aed1:	inc    esi
  43aed2:	add    al,0x75
  43aed4:	aam    0xb4
  43aed6:	jnp    0x43aee2
  43aed8:	into   
  43aed9:	xchg   edx,eax
  43aeda:	add    eax,DWORD PTR [ebx-0x3d02d1f5]
  43aee0:	add    BYTE PTR [eax],al
  43aee2:	pop    ebp
  43aee3:	fwait
  43aee4:	add    DWORD PTR [eax],esp
  43aee6:	and    dh,BYTE PTR [esi+esi*2]
  43aee9:	inc    ebp
  43aeea:	(bad)
  43aeee:	xor    esp,edx
  43aef0:	pop    es
  43aef1:	jne    0x43ae8d
  43aef3:	mov    ah,0x43
  43aef5:	sbb    bl,BYTE PTR [esp+esi*2+0x191162e9]
  43aefc:	cli    
  43aefd:	mov    ecx,ebx
  43aeff:	sub    eax,0xb53d44f8
  43af04:	inc    ebx
  43af05:	and    ebx,DWORD PTR [esp+esi*2+0x752d45fa]
  43af0c:	jbe    0x43af53
  43af0e:	sub    eax,0xb383b636
  43af13:	xor    eax,0x3f587511
  43af18:	aad    0xff
  43af1a:	adc    DWORD PTR [ecx],ebx
  43af1c:	mov    dh,0xe8
  43af1e:	mov    dh,BYTE PTR ds:0xb51d0001
  43af24:	jnp    0x43af28
  43af26:	dec    esi
  43af27:	xchg   edx,eax
  43af28:	(bad)  
  43af29:	out    0x14,eax
  43af2b:	sbb    edx,edi
  43af2d:	push   DWORD PTR [ecx]
  43af2f:	mov    ds:0x946c314,eax
  43af34:	idiv   bh
  43af36:	push   ds
  43af37:	je     0x43afaf
  43af39:	jge    0x43af18
  43af3b:	div    BYTE PTR [edx+0x6]
  43af3e:	push   es
  43af3f:	aam    0xf5
  43af41:	call   FWORD PTR [esi]
  43af43:	je     0x43af3f
  43af45:	inc    ebp
  43af46:	add    BYTE PTR [eax],al
  43af48:	aaa    
  43af49:	cs inc edx
  43af4b:	jge    0x43aecf
  43af4d:	iret   
  43af4e:	jecxz  0x43afcb
  43af50:	xor    cl,BYTE PTR [esi-0x49]
  43af53:	sbb    al,0x3a
  43af55:	mov    es,WORD PTR [eax+0x40ce1443]
  43af5b:	jge    0x43afbf
  43af5d:	iret   
  43af5e:	ret    
  43af5f:	jb     0x43af93
  43af61:	dec    esi
  43af62:	mov    bh,0x1c
  43af64:	mov    es,WORD PTR ds:[eax-0x5912ca85]
  43af6b:	add    dh,BYTE PTR [edi+edx*1+0x4df402e2]
  43af72:	mov    bh,0x1c
  43af74:	xor    al,0x8e
  43af76:	sbb    eax,DWORD PTR [eax-0x6e29658]
  43af7c:	cli    
  43af7d:	in     eax,dx
  43af7e:	inc    eax
  43af7f:	jge    0x43af9b
  43af81:	ds mov ebp,0xb71a5572
  43af87:	std    
  43af88:	dec    eax
  43af89:	int    0x3
  43af8b:	add    BYTE PTR [eax-0xd7b1f69],al
  43af91:	sub    eax,0x503fb1ee
  43af96:	clc    
  43af97:	mov    DWORD PTR [ecx*8+0x123bc080],esi
  43af9e:	push   esp
  43af9f:	shl    edx,0xce
  43afa2:	jecxz  0x43afa3
  43afa4:	push   eax
  43afa5:	int3   
  43afa6:	inc    eax
  43afa7:	stc    
  43afa8:	repnz in eax,dx
  43afaa:	inc    eax
  43afab:	jge    0x43afad
  43afad:	add    dl,al
  43afaf:	std    
  43afb0:	ret    
  43afb1:	jb     0x43afc7
  43afb3:	cmp    dh,BYTE PTR [edi-0x1e66cee4]
  43afb9:	jg     0x43af65
  43afbb:	in     eax,dx
  43afbc:	in     al,dx
  43afbd:	jb     0x43aff8
  43afbf:	xor    edx,DWORD PTR [ebp-0x1]
  43afc2:	sbb    BYTE PTR ds:0x77ba46ea,dh
  43afc8:	or     edx,DWORD PTR [ebx]
  43afca:	lds    ebp,FWORD PTR [ebx*2-0x15ca52f8]
  43afd1:	xchg   bh,dh
  43afd3:	cmp    BYTE PTR [edi+0x1cb5b234],bh
  43afd9:	out    0xe9,eax
  43afdb:	imul   BYTE PTR [esi+0x1ce243c9]
  43afe1:	out    0x58,al
  43afe3:	pop    edi
  43afe4:	int3   
  43afe5:	adc    al,BYTE PTR [edx+edi*1-0x6e]
  43afe9:	mov    ds:0x46e9e1c9,eax
  43afee:	mov    edx,0x8512cb77
  43aff3:	sub    al,0x6d
  43aff5:	or     BYTE PTR [ebp+0x7786ea35],bh
  43affb:	cmp    BYTE PTR [edi+0x34],ch
  43affe:	loop   0x43afb5
  43b000:	in     al,0x5
  43b002:	push   edi
  43b003:	pusha  
  43b004:	hlt    
  43b005:	sub    ecx,DWORD PTR [ebx+0xa2356e2]
  43b00b:	ja     0x43b018
  43b00d:	or     dl,al
  43b00f:	int3   
  43b010:	inc    ebx
  43b011:	and    al,BYTE PTR [eax]
  43b013:	add    BYTE PTR [esi-0x1f],bh
  43b016:	push   0xffffffc9
  43b018:	push   ebx
  43b019:	sub    eax,DWORD PTR ss:[edi-0x6755db14]
  43b020:	ss int3 
  43b022:	mov    eax,ds:0x2b343704
  43b027:	xchg   esp,esi
  43b029:	adc    al,0xec
  43b02b:	inc    esi
  43b02c:	retf   0xcb76
  43b02f:	pop    es
  43b030:	xor    BYTE PTR [ebp-0xaca1964],0x6a
  43b037:	mov    eax,ds:0x96d7463
  43b03c:	pop    ds
  43b03d:	(bad)  
  43b03f:	call   0x207e478
  43b044:	jp     0x43b024
  43b046:	mul    esi
  43b048:	jns    0x43b016
  43b04a:	sbb    bl,bh
  43b04c:	push   ebp
  43b04d:	fild   DWORD PTR [ebx+0x6cdf3154]
  43b053:	out    0x4c,eax
  43b055:	mov    esi,?
  43b057:	(bad)  
  43b058:	adc    eax,0x33d9e89f
  43b05d:	xor    al,0x1
  43b05f:	stos   BYTE PTR es:[edi],al
  43b060:	mov    ecx,0x71ea2474
  43b065:	pop    edi
  43b066:	jbe    0x43b057
  43b068:	hlt    
  43b069:	gs (bad) 
  43b06b:	imul   edi,edi,0xb9aa0a3f
  43b071:	je     0x43b097
  43b073:	in     al,0x71
  43b075:	pop    edi
  43b076:	jbe    0x43b067
  43b078:	add    BYTE PTR [eax],al
  43b07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b07b:	gs (bad) 
  43b07d:	imul   edi,DWORD PTR [edi+0x3f],0x5cb9aa04
  43b084:	dec    eax
  43b086:	mov    edi,0x99ac8435
  43b08b:	xor    eax,0x3f7f6ac4
  43b090:	or     ch,BYTE PTR [edx]
  43b092:	mov    ah,0x5c
  43b094:	add    eax,ebp
  43b096:	lahf   
  43b097:	xor    ch,cl
  43b099:	iret   
  43b09a:	push   ss
  43b09b:	fcomi  st,st(7)
  43b09d:	sub    bl,BYTE PTR [esi+ebp*8]
  43b0a0:	add    cl,ch
  43b0a2:	xor    al,0x9f
  43b0a4:	sub    BYTE PTR [esp+esi*1+0x1cef6ce1],0x88
  43b0ac:	neg    DWORD PTR [esi]
  43b0ae:	adc    eax,0x3b94809f
  43b0b3:	loope  0x43b121
  43b0b5:	out    0xc,eax
  43b0b7:	ins    BYTE PTR es:[edi],dx
  43b0b8:	test   DWORD PTR [eax],0x83b61239
  43b0be:	stos   DWORD PTR es:[edi],eax
  43b0bf:	cmp    DWORD PTR [ecx],edx
  43b0c1:	jne    0x43b0d3
  43b0c3:	or     al,0x35
  43b0c5:	dec    BYTE PTR [ecx]
  43b0c7:	push   ss
  43b0c8:	mov    dh,0xe8
  43b0ca:	ret    0x138
  43b0cd:	add    ch,bl
  43b0cf:	mov    ecx,0xc74e337b
  43b0d4:	add    eax,ebp
  43b0d6:	xchg   BYTE PTR [eax],bh
  43b0d8:	add    DWORD PTR [eax],eax
  43b0da:	popf   
  43b0db:	mov    ecx,0x27b
  43b0e0:	mov    DWORD PTR ds:[edx],0xd91383
  43b0e7:	ret    
  43b0e8:	dec    ebp
  43b0e9:	not    DWORD PTR [eax*1+0x7d76799d]
  43b0f0:	fsubr  st(3),st
  43b0f2:	jae    0x43b104
  43b0f4:	mov    dh,0xbc
  43b0f6:	cli    
  43b0f7:	jmp    FWORD PTR [ecx-0x60e5bc4f]
  43b0fd:	not    BYTE PTR [ebx+eax*4]
  43b100:	push   ebx
  43b101:	fld    DWORD PTR [ecx]
  43b103:	ret    
  43b104:	mov    dh,0x8c
  43b106:	cli    
  43b107:	dec    DWORD PTR [ecx]
  43b109:	mov    cl,0x43
  43b10b:	sbb    bl,BYTE PTR [edi-0x2c7ceb0a]
  43b111:	fadd   DWORD PTR [ebx]
  43b113:	ret    
  43b114:	or     eax,0x634024bf
  43b119:	sub    eax,0x335e55e9
  43b11e:	add    ebx,eax
  43b120:	fnstsw WORD PTR [esi+0x36a31ff5]
  43b126:	jbe    0x43b16d
  43b128:	sub    eax,0xa383b62d
  43b12d:	fadd   DWORD PTR [edx]
  43b12f:	ret    
  43b130:	es mov bl,0xfb
  43b133:	push   DWORD PTR [edi]
  43b135:	inc    esi
  43b136:	jle    0x43b1b3
  43b138:	and    ebp,ecx
  43b13a:	mov    es,WORD PTR [ecx]
  43b13c:	pop    ds
  43b13d:	(bad)  
  43b13f:	stc    
  43b140:	sub    BYTE PTR [edx],cl
  43b142:	and    eax,0x3700002a
  43b147:	int    0x3
  43b149:	mov    ebp,0x3fcd4fb4
  43b14e:	mov    dl,al
  43b150:	jl     0x43b195
  43b152:	push   esp
  43b153:	fdivr  DWORD PTR [edi*2+0x72e3cb82]
  43b15a:	xor    cl,BYTE PTR [edx-0x41]
  43b15d:	sbb    al,0x3a
  43b15f:	mov    bh,BYTE PTR [ebx+eax*2+0x14]
  43b163:	retf   0x803c
  43b166:	(bad)  
  43b167:	int    0x2
  43b169:	jae    0x43b19c
  43b16b:	cmc    
  43b16c:	jp     0x43b169
  43b16e:	rcl    BYTE PTR [ebp-0x32c917c4],1
  43b174:	add    eax,DWORD PTR [eax]
  43b176:	hlt    
  43b177:	test   BYTE PTR [ecx],ah
  43b179:	stc    
  43b17a:	mov    eax,0x327d3cad
  43b17f:	call   0xf930:0xc53172c3
  43b186:	mov    al,ds:0x1ce83d65
  43b18b:	push   eax
  43b18c:	and    ecx,edi
  43b18e:	mov    ah,0x8f
  43b190:	fdiv   st(6),st
  43b192:	jne    0x43b1dd
  43b194:	xchg   edi,eax
  43b195:	std    
  43b196:	and    BYTE PTR [ecx],cl
  43b198:	push   es
  43b199:	call   0xf96521aa
  43b19e:	mov    ah,0x8f
  43b1a0:	fadd   QWORD PTR [ebx]
  43b1a2:	je     0x43b128
  43b1a4:	mov    ds:0x7d2560fa,eax
  43b1a9:	inc    ebx
  43b1aa:	add    BYTE PTR [eax],al
  43b1ac:	adc    al,0xcb
  43b1ae:	cmp    al,0xe8
  43b1b0:	xchg   ecx,eax
  43b1b1:	xor    ebx,DWORD PTR [esi]
  43b1b3:	and    BYTE PTR [esi-0x35],cl
  43b1b6:	jmp    0x43b1d6
  43b1b8:	fisubr WORD PTR ds:[edx-0x62]
  43b1bc:	es xor al,0x8d
  43b1bf:	or     al,0xba
  43b1c1:	ja     0x43b1a7
  43b1c3:	add    dh,BYTE PTR [ecx+edx*1+0x6b]
  43b1c7:	mov    BYTE PTR [ebx+0x31],0x2b
  43b1cb:	test   BYTE PTR [esi+eax*2-0x33c96917],bl
  43b1d2:	test   DWORD PTR [edi],ebx
  43b1d4:	push   cs
  43b1d5:	fisubr WORD PTR [edx-0x16c58b75]
  43b1db:	enter  0xb11b,0x1c
  43b1df:	jecxz  0x43b1d3
  43b1e1:	repnz push 0xffffffa1
  43b1e4:	jmp    0xadb6:0xd8d2363d
  43b1eb:	pop    ds
  43b1ec:	fmulp  st(4),st
  43b1ee:	mov    ds:0x6addce20,eax
  43b1f3:	mov    eax,ds:0xb0d3426
  43b1f8:	mov    edx,0x7404f477
  43b1fd:	adc    DWORD PTR [ebx-0x37],ebp
  43b200:	push   ebx
  43b201:	ss stos DWORD PTR es:[edi],eax
  43b203:	sub    DWORD PTR [esi+eax*2],0xffffffe9
  43b207:	cwde   
  43b208:	ss int3 
  43b20a:	std    
  43b20b:	push   ds
  43b20c:	sahf   
  43b20d:	(bad)  [edx-0xbffff75]
  43b213:	cmp    ecx,ebp
  43b215:	enter  0xb12b,0x9c
  43b219:	loop   0x43b19d
  43b21b:	repnz inc ecx
  43b21d:	mov    eax,0x2c46dd7c
  43b222:	iret   
  43b223:	loopne 0x43b263
  43b225:	pop    ds
  43b226:	jmp    0x128:0xe403d05e
  43b22d:	bound  ebp,QWORD PTR [esi+0x47]
  43b230:	add    ah,BYTE PTR [ebp+edx*2+0x30ca3e60]
  43b237:	lahf   
  43b238:	sbb    DWORD PTR [edx+ecx*2+0xcef6cde],0x26
  43b240:	clc    
  43b241:	push   cs
  43b242:	push   eax
  43b243:	lahf   
  43b244:	mov    ebp,DWORD PTR [esi+ebp*1-0x4a35c322]
  43b24b:	jo     0x43b271
  43b24d:	jmp    0x43b2c4
  43b24f:	int3   
  43b250:	and    ch,ch
  43b252:	xor    ebx,ebx
  43b254:	call   0xf81f09a8
  43b259:	push   0xffffffd7
  43b25b:	inc    edx
  43b25c:	add    dl,BYTE PTR [edi+0x31]
  43b25f:	int3   
  43b260:	sbb    esi,ecx
  43b262:	push   ecx
  43b263:	fcmovnb st,st(3)
  43b265:	jb     0x43b266
  43b267:	inc    esi
  43b268:	add    ah,BYTE PTR [esp+edx*8]
  43b26b:	pop    edi
  43b26c:	or     dh,BYTE PTR ds:0x1723e89f
  43b273:	fcomi  st,st(7)
  43b275:	push   0x0
  43b277:	add    BYTE PTR [edi+0x391eff42],dl
  43b27d:	int3   
  43b27e:	cmc    
  43b27f:	xchg   edi,eax
  43b280:	sbb    ebx,ebx
  43b282:	ret    
  43b283:	add    DWORD PTR [edi+eiz*8-0x9],0x1b70bd86
  43b28b:	call   0x2cc7f1ff
  43b290:	xchg   esp,eax
  43b291:	faddp  st(2),st
  43b293:	adc    DWORD PTR [edi+eiz*8-0x9],0xf5185c66
  43b29b:	pop    esi
  43b29c:	and    DWORD PTR [edi+0x76],ebx
  43b29f:	jmp    FWORD PTR [edi]
  43b2a1:	pop    edx
  43b2a2:	inc    DWORD PTR [eax+0x29]
  43b2a5:	(bad)  
  43b2a7:	add    cl,dh
  43b2a9:	jno    0x43b329
  43b2ab:	inc    ebp
  43b2ac:	push   esp
  43b2ad:	aaa    
  43b2ae:	inc    esp
  43b2af:	and    ecx,ebp
  43b2b1:	jmp    0x43b2c7
  43b2b3:	add    bl,BYTE PTR ds:0x11fbba09
  43b2b9:	ds jmp 0xfa81d4c2
  43b2bf:	and    DWORD PTR [ebx+0x2474f7e6],0xffffffb7
  43b2c6:	jnp    0x43b2d2
  43b2c8:	sbb    eax,0xeac842b
  43b2cd:	cmp    BYTE PTR [ecx],al
  43b2cf:	and    DWORD PTR [ebx+0x700efd29],0x55
  43b2d6:	add    DWORD PTR [eax],eax
  43b2d8:	push   ds
  43b2d9:	adc    BYTE PTR [edi-0x1effff02],dl
  43b2df:	cmp    DWORD PTR [esi-0x91d9c7d],esi
  43b2e5:	je     0x43b2cb
  43b2e7:	mov    ah,0x7b
  43b2e9:	or     bl,ch
  43b2eb:	sub    BYTE PTR [esp+ecx*4-0x7cfec832],al
  43b2f2:	and    ebp,DWORD PTR [edx]
  43b2f4:	clc    
  43b2f5:	push   cs
  43b2f6:	jo     0x43b2ae
  43b2f8:	add    BYTE PTR [eax],al
  43b2fa:	fimul  WORD PTR [edi]
  43b2fc:	ja     0x43b2fc
  43b2fe:	mov    eax,ds:0x2383b639
  43b303:	loop   0x43b2fa
  43b305:	je     0x43b2b5
  43b307:	mov    ah,0x7b
  43b309:	or     bl,BYTE PTR [ebp-0x71937bd8]
  43b30f:	aaa    
  43b310:	add    eax,ebp
  43b312:	xor    bh,BYTE PTR [edx]
  43b314:	cli    
  43b315:	(bad)  
  43b316:	fnsave [ebp-0x3d62e985]
  43b31c:	or     eax,DWORD PTR [ebx+0x74f62d63]
  43b322:	aaa    
  43b323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b324:	sub    edx,DWORD PTR [esi+0x71]
  43b327:	push   0x16
  43b329:	mov    ebp,0x3edf0b4
  43b32e:	jmp    0x8ece:0x2d7b80c8
  43b335:	inc    edi
  43b336:	pop    edi
  43b337:	xchg   ebp,eax
  43b338:	adc    eax,0x820e48f9
  43b33d:	jnp    0x43b368
  43b33f:	ror    BYTE PTR [esi+0x4f000001],1
  43b345:	add    DWORD PTR [esi],edx
  43b347:	stc    
  43b348:	xor    BYTE PTR [esi],cl
  43b34a:	cmp    BYTE PTR [ebx+0x41],0xcb
  43b34e:	mov    cs,WORD PTR [ebx]
  43b350:	mov    ah,0x57
  43b352:	or     bh,ch
  43b354:	mov    ds:0x11262bf7,eax
  43b359:	retf   0xbd14
  43b35c:	mov    ah,0x4f
  43b35e:	out    dx,eax
  43b35f:	add    BYTE PTR [edx+0x2d7b80db],cl
  43b365:	into   
  43b366:	mov    ss,WORD PTR [edi]
  43b368:	mov    ah,0x67
  43b36a:	sar    BYTE PTR [edi],cl
  43b36c:	(bad)  
  43b36e:	cmp    BYTE PTR [ebx+0x31],0xcd
  43b372:	(bad)  
  43b373:	or     ecx,edi
  43b375:	rcl    BYTE PTR ds:0x2b8dd0f9,1
  43b37b:	add    cl,cl
  43b37d:	xchg   ecx,eax
  43b37e:	adc    al,0xbd
  43b380:	lods   al,BYTE PTR ds:[esi]
  43b381:	psubq  mm7,mm6
  43b384:	jae    0x43b374
  43b386:	add    BYTE PTR [ebx+0x54],0xcf
  43b38a:	inc    eax
  43b38b:	call   0xf9586a29
  43b390:	(bad)  
  43b391:	sahf   
  43b392:	sbb    cl,bh
  43b394:	cwde   
  43b395:	dec    ebp
  43b396:	xchg   edi,eax
  43b397:	adc    DWORD PTR [ebx],edi
  43b399:	enter  0xe7fd,0x92
  43b39d:	xor    ebx,DWORD PTR [ebp+0x1c]
  43b3a0:	jle    0x43b398
  43b3a2:	jb     0x43b36a
  43b3a4:	and    dh,BYTE PTR ds:0xe0a5
  43b3aa:	repz jo 0x43b3b8
  43b3ad:	add    DWORD PTR [edx+0x5e192ccb],ebp
  43b3b3:	ficom  DWORD PTR [ecx-0xe]
  43b3b6:	arpl   dx,bx
  43b3b8:	cs or  ah,0x41
  43b3bc:	jmp    0x3e1e:0x25cc3696
  43b3c3:	fisubr DWORD PTR [edx]
  43b3c5:	cmp    BYTE PTR [ecx+eax*2-0x33c96914],0x51
  43b3cd:	push   ds
  43b3ce:	fisubr DWORD PTR cs:[edx]
  43b3d1:	sbb    BYTE PTR [edx+eax*2-0x33c96915],0x3d
  43b3d9:	push   ds
  43b3da:	push   cs
  43b3db:	fisubr DWORD PTR [edx]
  43b3dd:	or     BYTE PTR [edx+eax*2-0x33c96f1a],0x89
  43b3e5:	sbb    esi,edi
  43b3e7:	fldcw  WORD PTR [edx-0x22bd9379]
  43b3ed:	nop
  43b3ee:	ss int3 
  43b3f0:	push   ebp
  43b3f1:	sbb    esi,ebx
  43b3f3:	fldcw  WORD PTR [edx-0x18bda379]
  43b3f9:	cdq    
  43b3fa:	ss int3 
  43b3fc:	popa   
  43b3fd:	sbb    esi,ecx
  43b3ff:	fldcw  WORD PTR [edx-0x16c18b71]
  43b405:	rcr    BYTE PTR [ebx],0xb5
  43b408:	and    al,0xe7
  43b40a:	mov    dl,0xf6
  43b40c:	sbb    DWORD PTR [ebp+0x0],0x7ed9a100
  43b413:	xchg   DWORD PTR [edx+eax*2],ebx
  43b416:	jmp    0x2e05:0xcc3690
  43b41d:	fcomi  st,st(7)
  43b41f:	stos   BYTE PTR es:[edi],al
  43b420:	mov    al,0x5d
  43b422:	psubsb mm4,QWORD PTR [edi+0x1fc9e933]
  43b429:	fcomi  st,st(7)
  43b42b:	sub    bh,BYTE PTR [eax-0x3814f0a3]
  43b431:	sub    ch,cl
  43b433:	mov    ah,0x42
  43b435:	fcomi  st,st(7)
  43b437:	push   0xffffffbe
  43b439:	das    
  43b43a:	add    al,0xbd
  43b43c:	mov    dl,cl
  43b43e:	dec    ecx
  43b43f:	sub    al,0x2c
  43b441:	fcmovnb st,st(3)
  43b443:	push   0xffffff9e
  43b445:	inc    ebx
  43b446:	add    al,0x94
  43b448:	ss int3 
  43b44a:	xor    eax,0xc3db4c14
  43b44f:	push   0xffffffce
  43b451:	inc    edx
  43b452:	std    
  43b453:	jnp    0x43b480
  43b455:	shr    DWORD PTR [edx],1
  43b457:	add    edi,DWORD PTR [ebx+ebx*8]
  43b45a:	xor    DWORD PTR [edx+eax*2-0x29],0x73
  43b45f:	mov    esi,0xe6f6165c
  43b464:	sbb    eax,0x55c8397
  43b469:	outs   dx,BYTE PTR ss:[esi]
  43b46b:	out    dx,eax
  43b46c:	sbb    al,0x42
  43b46e:	test   dh,0x4d
  43b471:	xchg   edi,eax
  43b472:	add    DWORD PTR [eax+eax*1+0x0],0xffffffe5
  43b477:	xor    ch,BYTE PTR [esi-0x28]
  43b47a:	or     al,0x33
  43b47c:	sti    
  43b47d:	mov    dh,0x2d
  43b47f:	push   edi
  43b480:	jbe    0x43b465
  43b482:	xor    DWORD PTR [eax+0x5],esp
  43b485:	xchg   ecx,eax
  43b486:	cmp    ebp,ebx
  43b488:	neg    DWORD PTR [esi-0x6a0a338f]
  43b48e:	dec    ebp
  43b48f:	fcmovnb st,st(3)
  43b491:	bound  esi,QWORD PTR [edi+0x3e]
  43b494:	add    al,BYTE PTR [eax]
  43b496:	push   ebx
  43b497:	shl    DWORD PTR [ebp+eax*2+0x6d],1
  43b49b:	xor    DWORD PTR [esi-0x5c98718],esi
  43b4a1:	call   FWORD PTR ds:0x630011bc
  43b4a7:	xor    ch,cl
  43b4a9:	loope  0x43b485
  43b4ab:	cmp    eax,0xbbddc3fa
  43b4b0:	adc    DWORD PTR [ecx],eax
  43b4b2:	xor    DWORD PTR [edx],0xffffffe9
  43b4b5:	aad    0xfa
  43b4b7:	cmp    eax,0xbbcdc3fa
  43b4bc:	adc    DWORD PTR [edx],eax
  43b4be:	xchg   ebx,eax
  43b4bf:	(bad)  
  43b4c1:	ret    0x3e07
  43b4c4:	cli    
  43b4c5:	sbb    DWORD PTR [ebx+0x7c73f626],0xc
  43b4cc:	mov    ebx,0xb63a49fc
  43b4d1:	cmp    DWORD PTR [ebx+0x1074f4e5],0xc
  43b4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b4d9:	cld    
  43b4da:	add    BYTE PTR [eax],al
  43b4dc:	sbb    DWORD PTR [esi],edi
  43b4de:	mov    dh,0x83
  43b4e0:	mov    esp,ebp
  43b4e2:	add    esi,DWORD PTR [ebp-0x11]
  43b4e5:	or     ebx,DWORD PTR [edx+0x763e19f9]
  43b4eb:	jge    0x43b4f1
  43b4ed:	xor    DWORD PTR [ebp+0x2f],ebp
  43b4f0:	neg    BYTE PTR [ecx-0xb]
  43b4f3:	(bad)  
  43b4f4:	stc    
  43b4f5:	jno    0x43b56d
  43b4f7:	jge    0x43b4f9
  43b4f9:	xlat   BYTE PTR ds:[ebx]
  43b4fa:	jb     0x43b502
  43b4fc:	push   es
  43b4fd:	scas   al,BYTE PTR es:[edi]
  43b4fe:	hlt    
  43b4ff:	dec    DWORD PTR [ecx-0x1f82898f]
  43b505:	xor    eax,0xbca61174
  43b50a:	out    dx,al
  43b50b:	call   FWORD PTR [ecx+0x370a7bb1]
  43b511:	retf   0xb87
  43b514:	lahf   
  43b515:	inc    ebp
  43b516:	sbb    ecx,edi
  43b518:	mov    al,ds:0x9b6e248a
  43b51d:	push   esi
  43b51e:	sbb    bh,BYTE PTR [ebp-0x108f744]
  43b524:	repz jmp 0xca97f8a6
  43b52a:	cmp    al,0xe8
  43b52c:	aam    0x54
  43b52e:	sbb    bh,cl
  43b530:	mov    ah,0x0
  43b532:	bnd jmp ebx
  43b535:	into   
  43b536:	sub    edx,DWORD PTR [edx+0x63]
  43b539:	outs   dx,BYTE PTR ds:[esi]
  43b53a:	sbb    bh,BYTE PTR [ebp-0x10e674c]
  43b540:	add    BYTE PTR [eax],al
  43b542:	retf   
  43b543:	(bad)  
  43b544:	sub    eax,DWORD PTR [esi+0x4b]
  43b547:	push   es
  43b548:	sbb    bh,BYTE PTR [ebp-0x20e6f4c]
  43b54e:	ret    
  43b54f:	fild   QWORD PTR [ebx]
  43b551:	xor    DWORD PTR [esi],ebp
  43b553:	sbb    bh,BYTE PTR ds:[ebp-0x56]
  43b557:	sar    esp,cl
  43b559:	or     BYTE PTR [ebx+0x370003b1],bh
  43b55f:	inc    ebp
  43b560:	jmp    0x8a7d:0x3cde10fb
  43b567:	(bad)  
  43b568:	cld    
  43b569:	jb     0x43b58d
  43b56b:	dec    edx
  43b56c:	(bad)  
  43b56d:	std    
  43b56e:	sub    BYTE PTR [eax+0x449e7f4],al
  43b574:	sbb    ecx,edi
  43b576:	mov    ah,0x67
  43b578:	pop    es
  43b579:	std    
  43b57a:	fs (bad) 
  43b57d:	push   cs
  43b57e:	fist   DWORD PTR [ebp-0x2f2042e8]
  43b584:	psubw  mm1,mm0
  43b587:	mov    DWORD PTR [ebx+edi*2+0x29],edi
  43b58b:	xor    al,0xe6
  43b58d:	mov    ?,WORD PTR [esi]
  43b58f:	int3   
  43b590:	jmp    0xab1a63ac
  43b595:	test   BYTE PTR [esi+edi*1],ch
  43b598:	fisttp QWORD PTR [esi+0x1c75cc36]
  43b59e:	sahf   
  43b59f:	(bad)  
  43b5a0:	stos   BYTE PTR es:[edi],al
  43b5a1:	test   BYTE PTR [esi+edi*1],cl
  43b5a4:	call   0x3943b637
  43b5a9:	int3   
  43b5aa:	mov    BYTE PTR [ebx],bl
  43b5ac:	jle    0x43b584
  43b5ae:	push   0xffffff96
  43b5b0:	xor    dh,BYTE PTR [ebx]
  43b5b2:	into   
  43b5b3:	jmp    0xf26e:0x1852f858
  43b5ba:	push   0xffffff96
  43b5bc:	inc    esi
  43b5bd:	das    
  43b5be:	mov    ch,0xf0
  43b5c0:	fistp  DWORD PTR [eax-0x14]
  43b5c3:	repz lds eax,FWORD PTR [edx+eax*2+0x3f]
  43b5c8:	dec    edi
  43b5c9:	(bad)  
  43b5ca:	test   BYTE PTR es:[ecx+ebp*1-0x33d37015],bh
  43b5d2:	sub    DWORD PTR [esi+ebp*1],ebx
  43b5d5:	(bad)  
  43b5d6:	sub    ch,BYTE PTR [ebx]
  43b5d8:	loope  0x43b5b3
  43b5da:	push   es
  43b5db:	sbb    dl,ah
  43b5dd:	test   eax,0x7119fda4
  43b5e2:	retf   
  43b5e3:	test   BYTE PTR [ecx+edx*1-0x15],dh
  43b5e7:	inc    esp
  43b5e8:	pop    ds
  43b5e9:	retf   0x17f1
  43b5ec:	(bad)  
  43b5ed:	mov    cl,0x5c
  43b5ef:	out    dx,al
  43b5f0:	clc    
  43b5f1:	pusha  
  43b5f2:	in     eax,dx
  43b5f3:	sub    eax,esi
  43b5f5:	fmul   st(6),st
  43b5f7:	pop    ss
  43b5f8:	push   0x57
  43b5fa:	in     al,0x2
  43b5fc:	cs scas eax,DWORD PTR es:[edi]
  43b5fe:	mov    DWORD PTR [edi+esi*1],eax
  43b601:	xor    al,0xd2
  43b603:	xchg   edx,ecx
  43b605:	aad    0x0
  43b607:	mov    dh,0x74
  43b609:	push   edi
  43b60a:	jbe    0x43b5e3
  43b60c:	add    BYTE PTR [eax],al
  43b60e:	cmp    esp,DWORD PTR [ecx+0xe]
  43b611:	xchg   ecx,eax
  43b612:	lahf   
  43b613:	(bad)  
  43b615:	sahf   
  43b616:	mov    ah,0x59
  43b618:	or     ebp,edx
  43b61a:	xor    DWORD PTR [ecx+0x3434e97d],esi
  43b620:	jmp    0xf81ef422
  43b625:	stos   BYTE PTR es:[edi],al
  43b626:	mov    ah,0x59
  43b628:	por    mm4,QWORD PTR [edi+0x2308e942]
  43b62f:	fcomi  st,st(7)
  43b631:	push   0xffffff9e
  43b633:	das    
  43b634:	add    al,0xee
  43b636:	mov    bh,0x4e
  43b638:	add    ecx,ebp
  43b63a:	xor    al,0xcc
  43b63c:	pop    ecx
  43b63d:	push   edx
  43b63e:	dec    eax
  43b63f:	fcmovnb st,st(3)
  43b641:	push   0xffffffbe
  43b643:	inc    ebx
  43b644:	add    al,0xb4
  43b646:	dec    ebx
  43b647:	int    0x3e
  43b649:	xor    DWORD PTR [eax],esp
  43b64b:	fild   DWORD PTR [ebx+0x6cd72eac]
  43b651:	mov    edx,0x1efc160c
  43b656:	dec    eax
  43b657:	xchg   edi,eax
  43b658:	adc    DWORD PTR [edx+ebx*1+0x4ce76e31],0x22
  43b660:	cld    
  43b661:	push   es
  43b662:	inc    eax
  43b663:	xchg   edi,eax
  43b664:	cmp    DWORD PTR [edx+eiz*1+0x32],0x6e
  43b669:	fcomp  DWORD PTR [edi+esi*1-0x7]
  43b66d:	out    dx,al
  43b66e:	sub    DWORD PTR [edi+0x76],edx
  43b671:	repz add BYTE PTR [eax],al
  43b674:	xor    eax,0xe9d13161
  43b679:	fcomip st,st(7)
  43b67b:	(bad)  
  43b67c:	jne    0x43b6d5
  43b67e:	jbe    0x43b677
  43b680:	loop   0x43b6e3
  43b682:	adc    al,BYTE PTR [eax]
  43b684:	push   es
  43b685:	sub    eax,0xb191fff9
  43b68a:	jnp    0x43b696
  43b68c:	ffree  st(3)
  43b68e:	push   cs
  43b68f:	call   0x3df06a
  43b694:	lea    esi,[ecx-0x4266e985]
  43b69a:	add    al,ch
  43b69c:	retf   
  43b69d:	and    eax,0xd6b5fffa
  43b6a2:	fcomip st,st(5)
  43b6a4:	mov    ah,0x3d
  43b6a6:	cli    
  43b6a7:	ret    
  43b6a8:	add    eax,0x5b010df4
  43b6ad:	shl    DWORD PTR [ebp+eax*2+0x6d],1
  43b6b1:	xor    dh,BYTE PTR [esi-0x5c7d718]
  43b6b7:	(bad)  
  43b6b8:	fnstsw WORD PTR [ebx-0x2074ffef]
  43b6be:	(bad)  
  43b6c0:	or     DWORD PTR [esi],edi
  43b6c2:	cli    
  43b6c3:	xor    DWORD PTR [ebx+0x2a],0xfffffff6
  43b6c7:	je     0x43b678
  43b6c9:	or     bl,cl
  43b6cb:	cli    
  43b6cc:	add    DWORD PTR [esi],edi
  43b6ce:	mov    dh,0x83
  43b6d0:	xchg   ebx,eax
  43b6d1:	(bad)  
  43b6d2:	div    BYTE PTR [edi+edi*1+0x8]
  43b6d6:	scas   al,BYTE PTR es:[edi]
  43b6d7:	test   DWORD PTR [eax],0x762a5100
  43b6dd:	jge    0x43b6f3
  43b6df:	aaa    
  43b6e0:	je     0x43b71c
  43b6e2:	ss sub bh,0xff
  43b6e6:	xor    DWORD PTR [esi+0x76],esi
  43b6e9:	jge    0x43b6d3
  43b6eb:	xor    eax,0x73361174
  43b6f0:	bnd call DWORD PTR [ecx]
  43b6f3:	mov    dh,0x7b
  43b6f5:	or     cl,BYTE PTR ds:0xbee814c3
  43b6fb:	cs cli 
  43b6fd:	push   DWORD PTR [edi]
  43b6ff:	sahf   
  43b700:	cmp    DWORD PTR [ebx+0x49],0xcf0e86de
  43b707:	dec    eax
  43b708:	push   es
  43b709:	stc    
  43b70a:	rcr    BYTE PTR [esi-0x70],1
  43b70d:	add    eax,0xe8091034
  43b712:	scas   al,BYTE PTR es:[edi]
  43b713:	xchg   DWORD PTR ds:0x81a5f4f9,ecx
  43b719:	div    BYTE PTR [eax-0xd7abe4e]
  43b71f:	mov    BYTE PTR [edx],0x43
  43b722:	push   esp
  43b723:	pop    esi
  43b724:	mov    eax,0xd9e351c
  43b729:	inc    ebx
  43b72a:	push   esp
  43b72b:	call   0x3:0xdd38fdb7
  43b732:	sbb    DWORD PTR [eax],0x3efa7fe3
  43b738:	(bad)  
  43b739:	jb     0x43b774
  43b73b:	gs scas al,BYTE PTR es:[edi]
  43b73d:	cmc    
  43b73e:	add    BYTE PTR [eax],al
  43b740:	push   0xfa85426a
  43b745:	cmp    eax,0x482fb1fe
  43b74a:	add    DWORD PTR [edx-0x3f7f22cc],ecx
  43b750:	xor    ecx,DWORD PTR [edx]
  43b752:	sub    eax,0xe3defac1
  43b757:	(bad)  
  43b758:	cmp    ch,bl
  43b75a:	inc    eax
  43b75b:	stc    
  43b75c:	jp     0x43b75c
  43b75e:	or     eax,0x905d5543
  43b763:	sbb    eax,0xe7f5a830
  43b768:	bound  esi,QWORD PTR [edi]
  43b76a:	push   cs
  43b76b:	stc    
  43b76c:	hlt    
  43b76d:	inc    ebp
  43b76e:	rol    BYTE PTR [ecx],0xe6
  43b771:	xor    ecx,DWORD PTR [ebx+ebx*2+0x1cb85639]
  43b778:	sub    BYTE PTR [eax+ebx*4],dh
  43b77b:	or     edi,DWORD PTR [edi+esi*1-0x48c8ff98]
  43b782:	test   eax,0x62e3dfff
  43b787:	mov    dh,0x36
  43b789:	in     eax,0xc8
  43b78b:	mov    bh,BYTE PTR [edx+edi*1-0x55]
  43b78f:	adc    al,0x74
  43b791:	pop    ss
  43b792:	mov    al,0xbe
  43b794:	and    dh,BYTE PTR [esp-0x17b6d01e]
  43b79b:	sub    esi,DWORD PTR [ecx-0x15eb6934]
  43b7a1:	mov    esi,0xe124
  43b7a6:	das    
  43b7a7:	mov    ch,cl
  43b7a9:	xlat   BYTE PTR ds:[ebx]
  43b7aa:	aam    0x47
  43b7ac:	(bad)  
  43b7ae:	xlat   BYTE PTR ds:[ebx]
  43b7af:	inc    edi
  43b7b0:	call   0xe48b968c
  43b7b5:	xlat   BYTE PTR ds:[ebx]
  43b7b6:	iret   
  43b7b7:	inc    edi
  43b7b8:	loopne 0x43b791
  43b7ba:	das    
  43b7bb:	dec    eax
  43b7bc:	in     al,dx
  43b7bd:	sub    BYTE PTR [ebx],bh
  43b7bf:	cli    
  43b7c0:	pushf  
  43b7c1:	add    ebp,DWORD PTR [eax-0x43]
  43b7c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b7c5:	loopne 0x43b7f6
  43b7c7:	mov    ah,cl
  43b7c9:	xchg   BYTE PTR [ebx],dh
  43b7cb:	ret    0x3ea
  43b7ce:	shl    bl,cl
  43b7d0:	fst    QWORD PTR [edi+eiz*2]
  43b7d3:	stc    
  43b7d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b7d5:	add    esi,DWORD PTR [edi]
  43b7d7:	mul    DWORD PTR [esi]
  43b7d9:	mov    esi,0xe1a4d21b
  43b7de:	mov    al,0x4f
  43b7e0:	int3   
  43b7e1:	add    al,0xa4
  43b7e3:	cmp    al,BYTE PTR [edx]
  43b7e5:	pop    eax
  43b7e6:	sub    dl,dl
  43b7e8:	push   es
  43b7e9:	inc    eax
  43b7ea:	mov    dl,0x77
  43b7ec:	retf   
  43b7ed:	add    al,0xc5
  43b7ef:	xor    al,0xb6
  43b7f1:	jae    0x43b776
  43b7f3:	adc    al,BYTE PTR [ecx]
  43b7f5:	mov    ch,0x60
  43b7f7:	dec    eax
  43b7f8:	cmp    ebp,DWORD PTR [ebp+0x252f4859]
  43b7fe:	pop    ebp
  43b7ff:	dec    eax
  43b800:	xor    ebx,DWORD PTR ds:0x1527485c
  43b806:	or     DWORD PTR [eax+0x2b],0x7800000d
  43b80d:	dec    eax
  43b80e:	pop    ds
  43b80f:	add    eax,0xfd234857
  43b814:	push   edi
  43b815:	dec    eax
  43b816:	pop    ss
  43b817:	cmc    
  43b818:	push   esi
  43b819:	dec    eax
  43b81a:	sbb    ebp,ebp
  43b81c:	push   ebp
  43b81d:	dec    eax
  43b81e:	pmulhw mm2,mm0
  43b821:	inc    ebp
  43b822:	adc    ebx,ebp
  43b824:	xlat   BYTE PTR ds:[ebx]
  43b825:	inc    ebp
  43b826:	pop    es
  43b827:	aad    0xd6
  43b829:	inc    ebp
  43b82a:	or     ecx,ebp
  43b82c:	aad    0x45
  43b82e:	inc    esp
  43b830:	xor    eax,0x3f920348
  43b835:	idiv   BYTE PTR ds:0x3db73be8
  43b83b:	retf   0x8635
  43b83e:	or     BYTE PTR [edi+edi*1-0x42],dh
  43b842:	add    ebp,ecx
  43b844:	mov    cl,0xf4
  43b846:	cld    
  43b847:	push   ebp
  43b848:	sub    esi,esi
  43b84a:	cmp    eax,0xf78f34e8
  43b84f:	lods   al,BYTE PTR ds:[esi]
  43b850:	pop    ecx
  43b851:	retf   
  43b852:	cmp    eax,0x234db30b
  43b857:	out    0x9f,al
  43b859:	xor    ebp,ecx
  43b85b:	mov    eax,ds:0x2af7cb2b
  43b860:	mov    al,0x75
  43b862:	and    al,0xee
  43b864:	mov    ?,WORD PTR [esi+eax*4]
  43b867:	ins    DWORD PTR es:[edi],dx
  43b868:	mov    ch,0x33
  43b86a:	std    
  43b86b:	call   0x13b87a4
  43b870:	add    BYTE PTR [eax],al
  43b872:	popf   
  43b873:	js     0x43b872
  43b875:	(bad)  
  43b876:	cs jns 0x43b873
  43b879:	inc    ebp
  43b87a:	in     eax,dx
  43b87b:	and    al,BYTE PTR [edx+eiz*1-0x72]
  43b87f:	mov    ds:0x3e930f15,eax
  43b884:	jmp    0xfa698faa
  43b889:	ret    
  43b88a:	push   ebp
  43b88b:	cld    
  43b88c:	adc    al,0xf
  43b88e:	ror    ah,0x8a
  43b891:	test   BYTE PTR [eax+0x35],cl
  43b894:	or     DWORD PTR [eax],eax
  43b896:	fidivr WORD PTR [ecx]
  43b898:	add    DWORD PTR [ebx-0x2f05c772],eax
  43b89e:	lea    esp,ds:0xfbd82344
  43b8a4:	adc    eax,0x8da4b80
  43b8a9:	jne    0x43b83b
  43b8ab:	sub    al,0xef
  43b8ad:	clc    
  43b8ae:	test   eax,0x638bb625
  43b8b3:	(bad)  [eax]
  43b8b5:	mov    dh,0x86
  43b8b7:	mov    bl,0x7c
  43b8b9:	mov    cs,WORD PTR [esi-0x72000830]
  43b8bf:	xor    al,0x76
  43b8c1:	shl    BYTE PTR [edx+0x25],0xd1
  43b8c5:	ret    
  43b8c6:	adc    esp,edi
  43b8c8:	or     eax,0x1344e00
  43b8cd:	mov    edx,DWORD PTR [ebx-0x6149f727]
  43b8d3:	aaa    
  43b8d4:	cmp    al,0xbf
  43b8d6:	add    BYTE PTR [eax],al
  43b8d8:	pop    esi
  43b8d9:	xor    al,0x1
  43b8db:	jg     0x43b93c
  43b8dd:	sub    al,0x5
  43b8df:	test   BYTE PTR [ecx],0x26
  43b8e2:	jbe    0x43b961
  43b8e4:	xor    BYTE PTR [ebx],bh
  43b8e6:	jnp    0x43b8ee
  43b8e8:	inc    esi
  43b8e9:	(bad)  
  43b8ea:	stc    
  43b8eb:	push   DWORD PTR [edi]
  43b8ed:	es aas 
  43b8ef:	call   0xf956e1d9
  43b8f4:	mov    esp,0x73fee5a0
  43b8f9:	cli    
  43b8fa:	jle    0x43b93f
  43b8fc:	push   esp
  43b8fd:	fstp   TBYTE PTR [esi]
  43b8ff:	shl    DWORD PTR [edx-0x1d],0x3
  43b903:	add    BYTE PTR [edi],dh
  43b905:	fnsave [ebx+eax*2+0x14]
  43b909:	ficomp WORD PTR [ecx+0x40]
  43b90c:	sub    BYTE PTR ss:[edx+0x0],dl
  43b910:	aaa    
  43b911:	fst    QWORD PTR [eax+0xfafdf10]
  43b917:	stc    
  43b918:	enter  0x885a,0x11
  43b91c:	adc    BYTE PTR ss:[esp+edi*2+0x7a08e73a],bl
  43b924:	adc    al,0xa5
  43b926:	jge    0x43b920
  43b928:	test   al,0xae
  43b92a:	cmp    eax,0x3dd773b
  43b92f:	add    BYTE PTR [ebx],bl
  43b931:	pop    es
  43b932:	jl     0x43b8f2
  43b934:	jbe    0x43b8d9
  43b936:	or     BYTE PTR [edi+0x9245a76],al
  43b93c:	add    BYTE PTR [eax],al
  43b93e:	mov    ah,0x43
  43b940:	clc    
  43b941:	jb     0x43b96f
  43b943:	pop    edx
  43b944:	or     al,0x0
  43b946:	jmp    0x43b8e2
  43b948:	sbb    ebx,DWORD PTR [esi+0x6f]
  43b94b:	outs   dx,BYTE PTR ds:[esi]
  43b94c:	adc    bh,BYTE PTR [ebp+0x730363b4]
  43b952:	and    BYTE PTR [edx+0xc],bl
  43b955:	dec    bl
  43b957:	ficomp WORD PTR [ebx]
  43b959:	dec    esi
  43b95a:	dec    edi
  43b95b:	push   cs
  43b95c:	adc    bh,BYTE PTR [ebp+0x72fe04b4]
  43b962:	xor    DWORD PTR [ebp-0x36],esi
  43b965:	div    DWORD PTR [eax]
  43b967:	xor    al,0x1f
  43b969:	inc    ebp
  43b96a:	stos   BYTE PTR es:[edi],al
  43b96b:	int    0xdf
  43b96d:	xchg   esi,eax
  43b96e:	ss fmul st(5),st
  43b971:	or     ebx,DWORD PTR [esi]
  43b973:	iret   
  43b974:	sub    al,BYTE PTR [ebp+0x9753708]
  43b97a:	pop    ds
  43b97b:	add    eax,0xf2fe1102
  43b980:	push   0xb
  43b982:	cs dec ecx
  43b984:	loopne 0x43b9a1
  43b986:	adc    eax,0xaa10decc
  43b98b:	fild   DWORD PTR [eax]
  43b98d:	pop    ss
  43b98e:	fmulp  st(6),st
  43b990:	(bad)  
  43b991:	mov    BYTE PTR [edx+0x35],0x1d
  43b995:	in     eax,0x53
  43b997:	jns    0x43b9a4
  43b999:	push   es
  43b99a:	mov    dh,dh
  43b99c:	sbb    al,0xee
  43b99e:	ror    dh,0xe9
  43b9a1:	add    eax,DWORD PTR [eax]
  43b9a3:	add    BYTE PTR [edx-0x1afef488],dh
  43b9a9:	jae    0x43b994
  43b9ab:	into   
  43b9ac:	out    dx,eax
  43b9ad:	xor    ebp,edx
  43b9af:	add    ebx,DWORD PTR [esi]
  43b9b1:	and    eax,0xcea5ce82
  43b9b6:	xchg   BYTE PTR [esp+ecx*1+0x5a91e726],al
  43b9bd:	fdivr  QWORD PTR [ecx+0x18]
  43b9c0:	jle    0x43b990
  43b9c2:	stos   BYTE PTR es:[edi],al
  43b9c3:	into   
  43b9c4:	mov    eax,0xf303ea33
  43b9c9:	sbb    BYTE PTR [ecx+0x45],dh
  43b9cc:	test   al,0xd9
  43b9ce:	fnstsw WORD PTR [edx-0x60]
  43b9d1:	mov    dl,0x48
  43b9d3:	add    dl,bl
  43b9d5:	leave  
  43b9d6:	xlat   BYTE PTR ds:[ebx]
  43b9d7:	xchg   esi,eax
  43b9d8:	cmp    esi,DWORD PTR [ebx+0x24c4fa40]
  43b9de:	push   edx
  43b9df:	inc    eax
  43b9e0:	inc    esi
  43b9e1:	into   
  43b9e2:	add    BYTE PTR [esi],dh
  43b9e4:	repz push eax
  43b9e6:	sti    
  43b9e7:	fmulp  st(1),st
  43b9e9:	xor    ebp,ecx
  43b9eb:	sub    eax,0x2af7cb4f
  43b9f0:	cmp    al,0x83
  43b9f2:	in     al,dx
  43b9f3:	push   ss
  43b9f4:	inc    edi
  43b9f5:	mov    bh,0x3d
  43b9f7:	repz xor eax,0xf16a2471
  43b9fd:	xor    BYTE PTR [ebx],al
  43b9ff:	sub    ch,BYTE PTR [edi+0x71]
  43ba02:	sbb    ebp,ecx
  43ba04:	xor    al,0x34
  43ba06:	add    DWORD PTR [edx+0x0],esp
  43ba09:	add    cl,bh
  43ba0b:	xor    BYTE PTR [eax],cl
  43ba0d:	lahf   
  43ba0e:	repz into 
  43ba10:	xor    al,0x9e
  43ba12:	cmp    esi,DWORD PTR [ecx+eax*1]
  43ba15:	push   esi
  43ba16:	enter  0xdbd5,0xd5
  43ba1a:	inc    eax
  43ba1b:	retf   
  43ba1c:	add    DWORD PTR [ecx+eax*8+0x31],0x6d
  43ba21:	out    dx,eax
  43ba22:	mov    ch,0x49
  43ba24:	pxor   mm4,QWORD PTR [eax-0x56d37bcb]
  43ba2b:	xor    al,0x78
  43ba2d:	jmp    0x43ba7c
  43ba2f:	or     eax,0xcb4869e9
  43ba34:	imul   DWORD PTR [edx-0x16ff727a]
  43ba3a:	xor    al,0x50
  43ba3c:	sub    eax,0xea8cf570
  43ba41:	in     eax,0x3
  43ba43:	lea    eax,[ebx-0x4af8778]
  43ba49:	(bad)  
  43ba4b:	and    al,BYTE PTR [eax+eiz*2+0x6a214a6b]
  43ba52:	xor    cl,bh
  43ba54:	jae    0x43ba48
  43ba56:	mov    ch,0xc5
  43ba58:	add    dl,ch
  43ba5a:	dec    edx
  43ba5b:	aad    0x4d
  43ba5d:	add    BYTE PTR [ecx],cl
  43ba5f:	cmp    eax,0x39cdc3fa
  43ba64:	or     dh,BYTE PTR [ebp+0x55]
  43ba67:	mov    dl,0xef
  43ba69:	or     dl,ah
  43ba6b:	ss jmp 0x4943bab6
  43ba71:	cmp    eax,0x46c3fa
  43ba76:	hlt    
  43ba77:	inc    DWORD PTR [ecx+0x49]
  43ba7a:	inc    esp
  43ba7b:	sbb    bl,BYTE PTR [edi]
  43ba7d:	cld    
  43ba7e:	adc    al,0x83
  43ba80:	fcmovnbe st,st(1)
  43ba82:	cmc    
  43ba83:	ret    0xfb59
  43ba86:	or     eax,0x1310e00
  43ba8b:	mov    ebx,DWORD PTR [ebx+0x1eb608d1]
  43ba91:	aaa    
  43ba92:	cmp    al,0xbf
  43ba94:	into   
  43ba95:	xor    BYTE PTR [ecx],al
  43ba97:	jg     0x43ba78
  43ba99:	sub    BYTE PTR [ebp-0xc],dl
  43ba9c:	add    DWORD PTR [esi],edi
  43ba9e:	jbe    0x43bb1d
  43baa0:	call   0xe66635da
  43baa5:	int    0xf0
  43baa7:	inc    DWORD PTR [ecx-0x613fc38f]
  43baad:	xor    BYTE PTR [ecx],al
  43baaf:	jl     0x43ba5c
  43bab1:	dec    edi
  43bab2:	mov    bh,0xc1
  43bab4:	les    esi,FWORD PTR [eax+eax*4]
  43bab7:	ror    DWORD PTR ds:0xa4830a18,0x33
  43babe:	je     0x43bac6
  43bac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bac1:	and    ebx,esi
  43bac3:	inc    DWORD PTR [ecx]
  43bac5:	jb     0x43bab0
  43bac7:	out    0xfd,al
  43bac9:	cmp    eax,0xda1b8bfa
  43bace:	test   BYTE PTR [ebp+edi*1-0x4f],0x43
  43bad3:	and    eax,DWORD PTR [eax]
  43bad5:	add    BYTE PTR [ecx+esi*2-0x3e],cl
  43bad9:	inc    ebp
  43bada:	aaa    
  43badb:	rol    DWORD PTR [ebx],0x0
  43bade:	aaa    
  43badf:	fstp   TBYTE PTR [edx+0x43]
  43bae2:	adc    al,0xc6
  43bae4:	dec    ebp
  43bae5:	inc    eax
  43bae6:	rol    BYTE PTR ss:[esi+0x0],1
  43baea:	aaa    
  43baeb:	fild   DWORD PTR [esi+0xfd81f16]
  43baf1:	stc    
  43baf2:	sub    BYTE PTR [edi-0x6f],bl
  43baf5:	adc    DWORD PTR [edx],edi
  43baf7:	mov    eax,ds:0xcb9a7cfb
  43bafc:	(bad)  
  43bafd:	js     0x43bb34
  43baff:	ss shl bh,cl
  43bb02:	ret    0x5cb
  43bb05:	stc    
  43bb06:	hlt    
  43bb07:	mov    BYTE PTR [ebx+0x0],al
  43bb0a:	aaa    
  43bb0b:	fld    QWORD PTR [edi+0x3d1fbe22]
  43bb11:	out    0x33,al
  43bb13:	inc    esp
  43bb14:	inc    esp
  43bb15:	jge    0x43baed
  43bb17:	fiadd  DWORD PTR [eax-0x597d40a]
  43bb1d:	jl     0x43baed
  43bb1f:	aad    0x87
  43bb21:	push   cs
  43bb22:	fild   QWORD PTR [ecx+0xf]
  43bb25:	stc    
  43bb26:	rcr    BYTE PTR [esi+0x828f681],0xff
  43bb2d:	out    0xbe,eax
  43bb2f:	add    DWORD PTR ds:0x90a574f9,0xffffffec
  43bb36:	mov    al,ds:0x4379aa
  43bb3b:	add    BYTE PTR ds:0xb41cbedc,bh
  43bb41:	adc    dl,ah
  43bb43:	std    
  43bb44:	jne    0x43bae0
  43bb46:	mov    edi,0x3dd3715
  43bb4b:	add    BYTE PTR [eax+ebx*1+0x1da908e2],ch
  43bb52:	add    al,0x3b
  43bb54:	test   al,0x34
  43bb56:	jmp    0x971b:0xf94b3703
  43bb5d:	(bad)  
  43bb5e:	dec    esi
  43bb5f:	or     eax,0x4f048d2
  43bb64:	int    0x12
  43bb66:	push   edx
  43bb67:	mov    cl,0x46
  43bb69:	retf   
  43bb6a:	ss inc ecx
  43bb6c:	cld    
  43bb6d:	repz jmp 0xd48bf276
  43bb73:	jp     0x43bb5e
  43bb75:	hlt    
  43bb76:	adc    ecx,DWORD PTR [eax]
  43bb78:	mov    eax,0x2e236af4
  43bb7d:	mov    bh,0x13
  43bb7f:	inc    DWORD PTR [ebp+0x300b6b3f]
  43bb85:	inc    eax
  43bb86:	call   0xf7060ca6
  43bb8b:	or     al,0xba
  43bb8d:	fcmovnb st,st(4)
  43bb8f:	adc    dh,ch
  43bb91:	retf   0xc762
  43bb94:	inc    edx
  43bb95:	xor    eax,0x7163e125
  43bb9a:	or     eax,DWORD PTR [edx]
  43bb9c:	call   0xd000:0xea24f2
  43bba3:	retf   0x3e9
  43bba6:	mov    dl,0x70
  43bba8:	or     edi,ebp
  43bbaa:	xchg   BYTE PTR [ebx-0x17],dh
  43bbad:	into   
  43bbae:	jg     0x43bbe3
  43bbb0:	jmp    0x9bba:0xc2252e03
  43bbb7:	retf   0x809e
  43bbba:	sbb    al,0x22
  43bbbc:	fisttp WORD PTR [ebp+0x168ddbea]
  43bbc2:	mov    cs,edx
  43bbc4:	stos   BYTE PTR es:[edi],al
  43bbc5:	into   
  43bbc6:	enter  0xea33,0x3
  43bbca:	add    esi,DWORD PTR [ecx+0x71]
  43bbcd:	inc    ecx
  43bbce:	mov    eax,0xeded00dd
  43bbd3:	mov    al,BYTE PTR [ebx-0x4b89478]
  43bbd9:	cmc    
  43bbda:	leave  
  43bbdb:	xor    al,0xe9
  43bbdd:	dec    ecx
  43bbde:	inc    ecx
  43bbdf:	int    0xf7
  43bbe1:	sub    dh,BYTE PTR [edi+0x32d405c1]
  43bbe7:	fmul   st(5),st
  43bbe9:	cmp    al,0x33
  43bbeb:	int    0xc3
  43bbed:	push   0x2e
  43bbef:	outs   dx,BYTE PTR ds:[esi]
  43bbf1:	fnstenv [edi+0x1fb500c1]
  43bbf7:	dec    ecx
  43bbf8:	cli    
  43bbf9:	icebp  
  43bbfa:	mov    cl,0x23
  43bbfc:	jmp    0xf80efd2a
  43bc01:	sub    dh,BYTE PTR [edi+0x9407c2]
  43bc07:	add    BYTE PTR [edi],cl
  43bc09:	dec    ecx
  43bc0a:	cli    
  43bc0b:	icebp  
  43bc0c:	mov    al,0x33
  43bc0e:	jmp    0xf80edd4c
  43bc13:	sub    cl,BYTE PTR [edi+eiz*4-0xe]
  43bc17:	out    dx,al
  43bc18:	cmp    al,0xaf
  43bc1a:	cmp    eax,0x24753a03
  43bc1f:	push   0xfffffff6
  43bc21:	sub    BYTE PTR [ebx],al
  43bc23:	stos   BYTE PTR es:[edi],al
  43bc24:	psubb  mm0,mm4
  43bc27:	and    eax,0xe9f7c7b5
  43bc2c:	xor    al,0x34
  43bc2e:	add    ecx,ebp
  43bc30:	xor    al,0x34
  43bc32:	add    DWORD PTR [ebp-0x4a0838d9],edi
  43bc38:	mov    ds:0x239df7c9,eax
  43bc3d:	(bad)  
  43bc3e:	imul   ecx
  43bc40:	xor    al,0x34
  43bc42:	add    ecx,ebp
  43bc44:	xor    al,0x34
  43bc46:	add    DWORD PTR [ecx+0x18],esi
  43bc49:	(bad)  
  43bc4a:	test   DWORD PTR [eax],0xfff7c0f2
  43bc50:	push   ds
  43bc51:	mov    bl,0xf5
  43bc53:	call   FWORD PTR [esi+0x35]
  43bc56:	add    DWORD PTR [eax],eax
  43bc58:	pop    esi
  43bc59:	xor    eax,0x5ec80001
  43bc5e:	idiv   bh
  43bc60:	dec    esi
  43bc61:	(bad)
  43bc64:	fiadd  DWORD PTR [edi-0xa]
  43bc67:	call   FWORD PTR [esi+0x35]
  43bc6a:	add    DWORD PTR [eax],eax
  43bc6c:	add    BYTE PTR [eax],al
  43bc6e:	dec    esi
  43bc6f:	xor    eax,0x553c0001
  43bc74:	idiv   bh
  43bc76:	sub    al,dl
  43bc78:	idiv   edi
  43bc7a:	fimul  DWORD PTR [esi+esi*8-0x1]
  43bc7e:	push   cs
  43bc7f:	xor    eax,0x350e0001
  43bc84:	add    DWORD PTR [eax],eax
  43bc86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bc87:	push   esp
  43bc88:	idiv   bh
  43bc8a:	retf   0xf7c1
  43bc8d:	jmp    FWORD PTR [edx]
  43bc8f:	dec    eax
  43bc90:	idiv   bh
  43bc92:	push   cs
  43bc93:	xor    eax,0x34de0001
  43bc98:	add    DWORD PTR [eax],eax
  43bc9a:	adc    BYTE PTR [eax-0xa],0xff
  43bc9e:	mov    edx,0xa6fff7c1
  43bca3:	dec    ecx
  43bca4:	idiv   bh
  43bca6:	fidiv  WORD PTR [ecx+eax*1]
  43bca9:	add    dh,bl
  43bcab:	xor    al,0x1
  43bcad:	add    al,ah
  43bcaf:	dec    edi
  43bcb0:	idiv   bh
  43bcb2:	jbe    0x43bc7a
  43bcb4:	idiv   edi
  43bcb6:	mov    ds:0x9efff5b2,al
  43bcbb:	xor    al,0x1
  43bcbd:	add    BYTE PTR [esi-0x6ffffecc],cl
  43bcc3:	dec    esi
  43bcc4:	idiv   bh
  43bcc6:	aaa    
  43bcc7:	addr16 hlt 
  43bcc9:	dec    DWORD PTR [eax-0x7f028a46]
  43bccf:	fiadd  DWORD PTR [ebx]
  43bcd1:	add    BYTE PTR [eax],al
  43bcd3:	add    BYTE PTR [edi],dh
  43bcd5:	fild   DWORD PTR [ebx]
  43bcd7:	add    BYTE PTR [edi],dh
  43bcd9:	or     ebx,DWORD PTR [esi-0x3]
  43bcdc:	push   0x60fff16a
  43bce1:	jp     0x43bc64
  43bce3:	std    
  43bce4:	pop    eax
  43bce5:	fiadd  DWORD PTR [ebx]
  43bce7:	add    BYTE PTR [edi],dh
  43bce9:	fild   DWORD PTR [ebx]
  43bceb:	add    BYTE PTR [edi],dh
  43bced:	addr16 pop edi
  43bcef:	std    
  43bcf0:	inc    eax
  43bcf1:	push   0xfffffff4
  43bcf3:	(bad)  
  43bcf4:	cmp    BYTE PTR [esi+0x76],cl
  43bcf7:	std    
  43bcf8:	xor    dh,bl
  43bcfa:	add    eax,DWORD PTR [eax]
  43bcfc:	aaa    
  43bcfd:	fld    QWORD PTR [ebx]
  43bcff:	add    BYTE PTR [edi],dh
  43bd01:	inc    ecx
  43bd02:	popa   
  43bd03:	std    
  43bd04:	sbb    dl,ah
  43bd06:	lock call DWORD PTR [eax]
  43bd09:	mov    dh,0x7b
  43bd0b:	std    
  43bd0c:	or     dh,bl
  43bd0e:	add    eax,DWORD PTR [eax]
  43bd10:	aaa    
  43bd11:	fld    QWORD PTR [ebx]
  43bd13:	add    BYTE PTR [edi],dh
  43bd15:	push   ebp
  43bd16:	popa   
  43bd17:	std    
  43bd18:	lock in eax,0xee
  43bd1b:	(bad)  
  43bd1c:	call   0xe14138c6
  43bd21:	fld    QWORD PTR [ebx]
  43bd23:	add    BYTE PTR [edi],dh
  43bd25:	fld    QWORD PTR [ebx]
  43bd27:	add    BYTE PTR [edi],dh
  43bd29:	adc    DWORD PTR [edi-0x3],0xffffffc8
  43bd2d:	aad    0xec
  43bd2f:	inc    eax
  43bd31:	adc    DWORD PTR [esi-0x3],esi
  43bd34:	mov    eax,0x3dd
  43bd39:	add    BYTE PTR [edi],dh
  43bd3b:	fld    QWORD PTR [ebx]
  43bd3d:	add    BYTE PTR [edi],dh
  43bd3f:	cmp    DWORD PTR [ebx-0x3],esp
  43bd42:	mov    al,ds:0x98f1ee34
  43bd47:	(bad)  
  43bd48:	jmp    0xea77f450
  43bd4d:	add    esi,DWORD PTR [edi]
  43bd4f:	xor    al,0xea
  43bd51:	add    esi,DWORD PTR [edi]
  43bd53:	xor    al,0xea
  43bd55:	add    esi,DWORD PTR [edi]
  43bd57:	xor    al,0xea
  43bd59:	add    esi,DWORD PTR [edi]
  43bd5b:	xor    al,0xaa
  43bd5d:	ins    DWORD PTR es:[edi],dx
  43bd5e:	push   0xffffffc7
  43bd60:	lea    ebp,[ebp+0x62]
  43bd63:	(bad)  
  43bd64:	dec    ebp
  43bd65:	ins    DWORD PTR es:[edi],dx
  43bd66:	pop    edx
  43bd67:	(bad)  
  43bd68:	jmp    0x43bdd1
  43bd6a:	push   edx
  43bd6b:	(bad)  
  43bd6c:	cmc    
  43bd6d:	addr16 dec edx
  43bd6f:	mov    DWORD PTR [ecx],0x1c74268
  43bd75:	push   0x67a5c73a
  43bd7a:	xor    al,bh
  43bd7c:	retf   
  43bd7d:	addr16 sub al,bh
  43bd80:	lods   eax,DWORD PTR ds:[esi]
  43bd81:	addr16 and al,bh
  43bd84:	outs   dx,DWORD PTR ds:[esi]
  43bd85:	push   0x683dc71a
  43bd8a:	adc    al,bh
  43bd8c:	dec    ebp
  43bd8d:	push   0x682dc70a
  43bd92:	add    al,bh
  43bd94:	or     eax,0xddc6fa68
  43bd99:	data16 repnz (bad) 
  43bd9c:	shl    DWORD PTR [esi+0x0],1
  43bd9f:	add    dl,ch
  43bda1:	mov    bl,0x66
  43bda4:	loop   0x43bd6c
  43bda6:	sbb    eax,0x27c6da67
  43bdab:	addr16 rol dh,cl
  43bdae:	das    
  43bdaf:	addr16 retf 0x51c6
  43bdb3:	addr16 ret 0x71c6
  43bdb7:	mov    dx,0x61c6
  43bdbb:	data16 mov dl,0xc6
  43bdbe:	add    BYTE PTR [edi-0x580836ef],cl
  43bdc4:	sbb    ecx,ecx
  43bdc6:	test   DWORD PTR [ebx-0x5c0836ef],0xdbf7c919
  43bdd0:	push   ds
  43bdd1:	leave  
  43bdd2:	neg    DWORD PTR [edi]
  43bdd4:	or     eax,0xd13f7c9
  43bdd9:	leave  
  43bdda:	idiv   ebp
  43bddc:	fmulp  st(0),st
  43bdde:	neg    DWORD PTR [ecx-0x22]
  43bde1:	enter  0x4bf7,0xce
  43bde5:	enter  0x8df7,0xcb
  43bde9:	enter  0xe9f7,0x34
  43bded:	xor    al,0x1
  43bdef:	mov    bh,0xd3
  43bdf1:	enter  0xdf7,0xda
  43bdf5:	enter  0xe7f7,0xd3
  43bdf9:	enter  0xedf7,0x9b
  43bdfd:	(bad)  
  43bdfe:	idiv   DWORD PTR ds:0x1bf7c792
  43be04:	add    BYTE PTR [eax],al
  43be06:	call   0xf7c7:0x9265f7c7
  43be0d:	xchg   edi,eax
  43be0e:	fwait
  43be0f:	(bad)  
  43be10:	imul   ecx
  43be12:	xor    al,0x34
  43be14:	add    DWORD PTR [edi],eax
  43be16:	xchg   ebp,eax
  43be17:	(bad)  
  43be18:	test   DWORD PTR [ebp+0x21f7c795],0x79f7c755
  43be22:	push   ebp
  43be23:	(bad)  
  43be24:	test   DWORD PTR [ecx-0x480838ab],0xabf7c752
  43be2e:	pop    edx
  43be2f:	(bad)  
  43be30:	test   DWORD PTR [edi-0x740838ae],0xf7c75a
  43be3a:	push   esi
  43be3b:	dec    edi
  43be3c:	idiv   bh
  43be3e:	and    cl,BYTE PTR [edi-0xa]
  43be41:	dec    DWORD PTR [esi+0x4f]
  43be44:	idiv   bh
  43be46:	fmul   QWORD PTR [edi-0xa]
  43be49:	jmp    FWORD PTR [esi+0x50]
  43be4c:	idiv   bh
  43be4e:	xchg   esp,eax
  43be4f:	push   eax
  43be50:	idiv   bh
  43be52:	sahf   
  43be53:	xor    DWORD PTR [ecx],eax
  43be55:	add    dl,ah
  43be57:	aas    
  43be58:	idiv   bh
  43be5a:	in     al,dx
  43be5b:	aas    
  43be5c:	idiv   bh
  43be5e:	sub    BYTE PTR [eax-0xa],al
  43be61:	dec    esp
  43be63:	inc    eax
  43be64:	idiv   bh
  43be66:	mov    ah,0x40
  43be68:	idiv   bh
  43be6a:	add    BYTE PTR [eax],al
  43be6c:	dec    edx
  43be6d:	inc    eax
  43be6e:	idiv   bh
  43be70:	dec    eax
  43be71:	inc    eax
  43be72:	idiv   bh
  43be74:	xor    al,0x3f
  43be76:	idiv   bh
  43be78:	es aas 
  43be7a:	idiv   bh
  43be7c:	xchg   BYTE PTR [eax-0xa],al
  43be7f:	call   esi
  43be81:	aas    
  43be82:	idiv   bh
  43be84:	idiv   BYTE PTR [edi]
  43be86:	idiv   bh
  43be88:	call   0xf63f:0x98fff63f
  43be8f:	(bad)  
  43be90:	js     0x43bed1
  43be92:	idiv   bh
  43be94:	data16 aas 
  43be96:	idiv   bh
  43be98:	and    BYTE PTR [edi],bh
  43be9a:	idiv   bh
  43be9c:	cs aas 
  43be9e:	idiv   bh
  43bea0:	out    dx,al
  43bea1:	aas    
  43bea2:	idiv   bh
  43bea4:	fadd   DWORD PTR [edx-0xa]
  43bea7:	(bad)  
  43bea8:	in     al,dx
  43bea9:	inc    edx
  43beaa:	idiv   bh
  43beac:	cmp    BYTE PTR [edx-0xa],al
  43beaf:	call   FWORD PTR [eax]
  43beb1:	inc    edx
  43beb2:	idiv   bh
  43beb4:	aaa    
  43beb5:	pop    es
  43beb6:	jae    0x43beb5
  43beb8:	sar    BYTE PTR [eax+0x73],0xfd
  43bebc:	mov    eax,0xb0fd7308
  43bec1:	pop    eax
  43bec2:	jb     0x43bec1
  43bec4:	test   al,0x68
  43bec6:	jb     0x43bec5
  43bec8:	mov    al,ds:0x98fd71ae
  43becd:	push   eax
  43bece:	jb     0x43becd
  43bed0:	add    BYTE PTR [eax],al
  43bed2:	nop
  43bed3:	xchg   esp,eax
  43bed4:	jno    0x43bed3
  43bed6:	mov    BYTE PTR [eax+0x3480fd71],bh
  43bedc:	ins    DWORD PTR es:[edi],dx
  43bedd:	std    
  43bede:	js     0x43beb8
  43bee0:	jb     0x43bedf
  43bee2:	jo     0x43beb6
  43bee4:	jb     0x43bee3
  43bee6:	push   0x60fd72f6
  43beeb:	test   BYTE PTR [edx-0x3],dh
  43beee:	pop    eax
  43beef:	push   cs
  43bef0:	je     0x43beef
  43bef2:	push   eax
  43bef3:	xchg   esi,eax
  43bef4:	jb     0x43bef3
  43bef6:	dec    eax
  43bef7:	cli    
  43bef8:	jb     0x43bef7
  43befa:	inc    eax
  43befb:	loop   0x43bf6f
  43befd:	std    
  43befe:	cmp    BYTE PTR [ebx+esi*2-0x3],dl
  43bf02:	xor    BYTE PTR [edx+0x73],ah
  43bf05:	std    
  43bf06:	sub    BYTE PTR [edx+esi*2+0x731a20fd],bh
  43bf0d:	std    
  43bf0e:	sbb    BYTE PTR [ebx+esi*2],al
  43bf11:	std    
  43bf12:	adc    BYTE PTR [esi],ah
  43bf14:	jae    0x43bf13
  43bf16:	or     dh,cl
  43bf18:	addr16 std 
  43bf1a:	add    dh,al
  43bf1c:	addr16 std 
  43bf1e:	clc    
  43bf1f:	icebp  
  43bf20:	addr16 std 
  43bf22:	lock jg 0x43bf8c
  43bf25:	std    
  43bf26:	call   0xe14126b8
  43bf2b:	test   eax,0x34d8fd67
  43bf30:	dec    esp
  43bf31:	jo     0x43bf05
  43bf33:	ret    
  43bf34:	imul   esi,DWORD PTR [eax+0x0],0x0
  43bf38:	retf   0x87c3
  43bf3b:	jo     0x43beff
  43bf3d:	ret    
  43bf3e:	xchg   ebx,eax
  43bf3f:	jo     0x43befb
  43bf41:	ret    
  43bf42:	lods   eax,DWORD PTR ds:[esi]
  43bf43:	jo     0x43bef7
  43bf45:	ret    
  43bf46:	leave  
  43bf47:	jo     0x43bef3
  43bf49:	ret    
  43bf4a:	and    eax,0x1c3a25d
  43bf4f:	pop    ebp
  43bf50:	call   0xf1c3:0x925cf5c3
  43bf57:	pop    esp
  43bf58:	mov    al,bl
  43bf5a:	fwait
  43bf5b:	pop    esi
  43bf5c:	add    bl,0x19
  43bf5f:	je     0x43bfdb
  43bf61:	ret    
  43bf62:	sbb    eax,0x25c37274
  43bf67:	je     0x43bfd3
  43bf69:	ret    
  43bf6a:	lods   eax,DWORD PTR ds:[esi]
  43bf6b:	jae    0x43bfcf
  43bf6d:	ret    
  43bf6e:	mov    bh,0x73
  43bf70:	pop    edx
  43bf71:	ret    
  43bf72:	or     DWORD PTR [edx+edx*2-0x3d],esi
  43bf76:	in     eax,0x73
  43bf78:	dec    edx
  43bf79:	ret    
  43bf7a:	push   ecx
  43bf7b:	jne    0x43bfbf
  43bf7d:	ret    
  43bf7e:	inc    ecx
  43bf7f:	jne    0x43bfbb
  43bf81:	ret    
  43bf82:	sbb    esi,DWORD PTR [ebp+0x32]
  43bf85:	ret    
  43bf86:	pop    ds
  43bf87:	jne    0x43bfb3
  43bf89:	ret    
  43bf8a:	jg     0x43c001
  43bf8c:	and    al,bl
  43bf8e:	inc    edi
  43bf8f:	jne    0x43bfab
  43bf91:	ret    
  43bf92:	outs   dx,DWORD PTR ds:[esi]
  43bf93:	jne    0x43bfa7
  43bf95:	ret    
  43bf96:	imul   esi,DWORD PTR [ebp+0xa],0xffffffc3
  43bf9a:	cdq    
  43bf9b:	je     0x43bf9d
  43bf9d:	add    BYTE PTR [edx],al
  43bf9f:	ret    
  43bfa0:	mov    DWORD PTR [edx+edi*8-0x3e],esi
  43bfa4:	mov    bl,0x74
  43bfa6:	bnd ret 0x74b5
  43bfaa:	jmp    0xf7c1:0x6bd700c2
  43bfb1:	in     eax,0x63
  43bfb3:	shl    edi,0xdd
  43bfb6:	dec    edx
  43bfb7:	shl    edi,0xd1
  43bfba:	inc    edx
  43bfbb:	shl    edi,0xbd
  43bfbe:	dec    edx
  43bfbf:	shl    edi,0x8d
  43bfc2:	inc    edx
  43bfc3:	shl    edi,0x89
  43bfc6:	sub    al,cl
  43bfc8:	not    DWORD PTR [ebp+0x22]
  43bfcb:	shl    edi,0x61
  43bfce:	sub    al,cl
  43bfd0:	div    DWORD PTR [edi]
  43bfd2:	and    ecx,eax
  43bfd4:	not    DWORD PTR [ecx]
  43bfd6:	or     ecx,eax
  43bfd8:	test   DWORD PTR [ebx+0x1],0x921f7c1
  43bfdf:	shl    edi,0xcd
  43bfe2:	add    al,cl
  43bfe4:	idiv   DWORD PTR [ecx-0x34083f16]
  43bfea:	loop   0x43bfac
  43bfec:	neg    ebx
  43bfee:	jmp    0xf7c0:0xe2ebf7c0
  43bff5:	push   ecx
  43bff6:	leave  
  43bff7:	shl    bh,0x3d
  43bffa:	rol    eax,0xf7
  43bffd:	das    
  43bffe:	leave  
  43bfff:	shl    bh,0x99
  43c002:	add    BYTE PTR [eax],al
  43c004:	rol    eax,0xf7
  43c007:	lea    ebp,[ecx-0x5e9e0841]
  43c00d:	mov    edi,0xbfa965f7
  43c012:	imul   DWORD PTR [ebp-0x6c08405f]
  43c018:	mov    DWORD PTR [edi-0x407e3c09],edi
  43c01e:	imul   DWORD PTR [edi-0x2e084077]
  43c024:	cmp    DWORD PTR [edi+0x4b0a00f7],0x4b08fff6
  43c02e:	idiv   bh
  43c030:	cld    
  43c031:	dec    edx
  43c032:	idiv   bh
  43c034:	ror    BYTE PTR [edx-0xa],1
  43c037:	call   esi
  43c039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c03a:	hlt    
  43c03b:	(bad)  
  43c03c:	(bad)  
  43c03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c03e:	hlt    
  43c03f:	call   DWORD PTR [eax-0x5f000b5c]
  43c045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c046:	hlt    
  43c047:	call   FWORD PTR [eax]
  43c049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c04a:	hlt    
  43c04b:	call   DWORD PTR [eax]
  43c04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c04e:	hlt    
  43c04f:	jmp    FWORD PTR [eax-0x5c]
  43c052:	hlt    
  43c053:	(bad)  
  43c054:	in     al,dx
  43c055:	mov    ds:0xa450fff4,eax
  43c05a:	hlt    
  43c05b:	call   FWORD PTR [esi-0x5c]
  43c05e:	hlt    
  43c05f:	push   DWORD PTR [eax-0x4f]
  43c062:	hlt    
  43c063:	push   DWORD PTR [edx+0xfff4b1]
  43c069:	add    BYTE PTR [eax-0x15000b4f],dl
  43c06f:	mov    al,0xf4
  43c071:	(bad)  
  43c072:	fsubr  QWORD PTR [ecx+0x354efff4]
  43c078:	add    DWORD PTR [eax],eax
  43c07a:	or     cl,BYTE PTR [ebx-0x7469000c]
  43c080:	hlt    
  43c081:	push   DWORD PTR [eax+0x4efff48b]
  43c087:	xor    eax,0x35200001
  43c08c:	add    DWORD PTR [eax-0x7ffecada],eax
  43c092:	pop    ss
  43c093:	xor    eax,0x350c8001
  43c098:	add    DWORD PTR [eax+0x1351e],eax
  43c09e:	mov    esp,0x37fff494
  43c0a3:	cdq    
  43c0a4:	mov    ds:0xa3f0f8fc,eax
  43c0a9:	cld    
  43c0aa:	lock retf 0x3
  43c0ae:	aaa    
  43c0af:	loope  0x43c054
  43c0b1:	cld    
  43c0b2:	loopne 0x43c088
  43c0b4:	mov    ds:0xa2d0d8fc,eax
  43c0b9:	cld    
  43c0ba:	shr    al,1
  43c0bc:	mov    ds:0xa27ec8fc,al
  43c0c1:	cld    
  43c0c2:	sar    BYTE PTR [edx-0x5e],0xfc
  43c0c6:	mov    eax,0xb0fca296
  43c0cb:	mov    dl,0xa2
  43c0cd:	cld    
  43c0ce:	add    BYTE PTR [eax],al
  43c0d0:	test   al,0xa2
  43c0d2:	mov    ds:0xa35aa0fc,al
  43c0d7:	cld    
  43c0d8:	cwde   
  43c0d9:	push   cs
  43c0da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c0db:	cld    
  43c0dc:	nop
  43c0dd:	and    ah,BYTE PTR [esp+edi*8-0x35c0178]
  43c0e4:	adc    BYTE PTR [esp+eiz*4],0xfc
  43c0e8:	js     0x43c0d0
  43c0ea:	mov    ds:0xa2ee70fc,al
  43c0ef:	cld    
  43c0f0:	push   0x60fca2da
  43c0f5:	inc    esp
  43c0f6:	mov    ds:0xa1b858fc,al
  43c0fb:	cld    
  43c0fc:	push   eax
  43c0fd:	jb     0x43c0a1
  43c0ff:	cld    
  43c100:	dec    eax
  43c101:	add    al,0xa2
  43c103:	cld    
  43c104:	inc    eax
  43c105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c106:	mov    eax,ds:0x3e038fc
  43c10b:	add    BYTE PTR [edi+0x370003cd],dh
  43c111:	pop    ecx
  43c112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c113:	cld    
  43c114:	and    dh,cl
  43c116:	add    eax,DWORD PTR [eax]
  43c118:	aaa    
  43c119:	test   DWORD PTR [ebx-0x77caef04],ebx
  43c11f:	fwait
  43c120:	or     eax,eax
  43c122:	scas   eax,DWORD PTR es:[edi]
  43c123:	fwait
  43c124:	add    eax,eax
  43c126:	mov    eax,ds:0xcfbffb9b
  43c12b:	fwait
  43c12c:	repz mov edi,0xbfeb9bc5
  43c132:	fistp  DWORD PTR [ebx-0x401d0000]
  43c138:	in     eax,dx
  43c139:	cdq    
  43c13a:	fstp   TBYTE PTR [edi-0x402c6607]
  43c140:	mov    ebp,0xb9bfcb99
  43c145:	cdq    
  43c146:	ret    
  43c147:	mov    edi,0xbfbb99ab
  43c14c:	(bad)  
  43c14d:	cdq    
  43c14e:	mov    bl,0xbf
  43c150:	xchg   ecx,eax
  43c151:	cdq    
  43c152:	stos   DWORD PTR es:[edi],eax
  43c153:	mov    edi,0xbfa39961
  43c158:	arpl   WORD PTR [ecx-0x66d04065],bx
  43c15e:	xchg   ebx,eax
  43c15f:	mov    edi,0xbf8b9911
  43c164:	inc    edi
  43c165:	pushf  
  43c166:	cmp    DWORD PTR [edi-0x4084635d],0xffffffa5
  43c16d:	pushf  
  43c16e:	jae    0x43c12f
  43c170:	jnp    0x43c10e
  43c172:	imul   edi,DWORD PTR [edi-0x409c63b3],0xffffffd7
  43c179:	call   0xbf53:0x9abfbf5b
  43c180:	pop    ds
  43c181:	fwait
  43c182:	dec    ebx
  43c183:	mov    edi,0xbf439abb
  43c188:	lds    ebx,FWORD PTR [edx-0x654840c5]
  43c18e:	xor    edi,DWORD PTR [edi-0x40d46495]
  43c194:	pop    ebx
  43c195:	fwait
  43c196:	and    edi,DWORD PTR [edi+0x8900]
  43c19c:	mov    esp,0xac75f7bf
  43c1a1:	mov    edi,0xbfac2df7
  43c1a6:	test   DWORD PTR [ecx-0x64],0x9c1bf7bf
  43c1ad:	mov    edi,0xbfd38df7
  43c1b2:	not    DWORD PTR [ecx-0x62084035]
  43c1b8:	ret    
  43c1b9:	mov    edi,0xbfbb99f7
  43c1be:	imul   DWORD PTR [ecx+0x1df7bfb3]
  43c1c4:	stos   BYTE PTR es:[edi],al
  43c1c5:	mov    edi,0xbfa207f7
  43c1ca:	idiv   edi
  43c1cc:	fwait
  43c1cd:	mov    edi,0xbfd3e3f7
  43c1d2:	test   ebx,0xe7f7bfca
  43c1d8:	mov    ebp,0xbc57f7bf
  43c1dd:	mov    edi,0xbfb2c3f7
  43c1e2:	test   ebp,0xadf7bfaa
  43c1e8:	mov    ds:0x9aa9f7bf,al
  43c1ed:	mov    edi,0xbfc9ebf7
  43c1f2:	neg    ebx
  43c1f4:	sar    DWORD PTR [edi-0x40363a09],0xf7
  43c1fb:	mov    ebx,0x2bf7bfc1
  43c200:	add    BYTE PTR [eax],al
  43c202:	test   al,0xbf
  43c204:	idiv   DWORD PTR [ecx-0x4208405f]
  43c20a:	test   eax,0x9fb3f7bf
  43c20f:	mov    edi,0xc0cf9df7
  43c214:	test   DWORD PTR [eax],0xfff49b32
  43c21a:	inc    esi
  43c21b:	fwait
  43c21c:	hlt    
  43c21d:	inc    DWORD PTR [ebx*4-0x62eb000c]
  43c224:	hlt    
  43c225:	call   FWORD PTR [ebx*4-0x64d5000c]
  43c22c:	hlt    
  43c22d:	jmp    FWORD PTR [esi]
  43c22f:	fwait
  43c230:	hlt    
  43c231:	call   DWORD PTR [edx-0x65]
  43c234:	hlt    
  43c235:	push   DWORD PTR [edx-0x65]
  43c238:	hlt    
  43c239:	inc    DWORD PTR [esi-0x79000b65]
  43c23f:	fwait
  43c240:	hlt    
  43c241:	push   DWORD PTR [eax-0x65]
  43c244:	hlt    
  43c245:	call   DWORD PTR [eax-0x5a]
  43c248:	hlt    
  43c249:	call   FWORD PTR [esi+eiz*4-0xc]
  43c24d:	jmp    FWORD PTR [esi-0x5a]
  43c250:	hlt    
  43c251:	call   DWORD PTR [edx-0x5a]
  43c254:	hlt    
  43c255:	push   DWORD PTR [edx]
  43c257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c258:	hlt    
  43c259:	push   DWORD PTR [eax]
  43c25b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c25c:	hlt    
  43c25d:	dec    DWORD PTR [esi]
  43c25f:	fwait
  43c260:	hlt    
  43c261:	call   DWORD PTR [eax]
  43c263:	call   0x99fe:0xfff4
  43c26a:	hlt    
  43c26b:	call   DWORD PTR [eax]
  43c26d:	call   0xfff4:0x9a1afff4
  43c274:	and    BYTE PTR [edx-0x65e7000c],bl
  43c27a:	hlt    
  43c27b:	push   DWORD PTR [edx-0x65]
  43c27e:	hlt    
  43c27f:	inc    DWORD PTR [edx+0x56fff49b]
  43c285:	fwait
  43c286:	hlt    
  43c287:	inc    eax
  43c289:	call   0xfff4:0x9baefff4
  43c290:	aaa    
  43c291:	fwait
  43c292:	cdq    
  43c293:	cld    
  43c294:	xor    BYTE PTR [ebx],cl
  43c296:	call   0x20fc:0x9a1928fc
  43c29d:	ja     0x43c239
  43c29f:	cld    
  43c2a0:	sbb    ch,bh
  43c2a2:	cdq    
  43c2a3:	cld    
  43c2a4:	adc    bl,dl
  43c2a6:	(bad)  
  43c2a7:	cld    
  43c2a8:	or     BYTE PTR [ecx],dh
  43c2aa:	(bad)  
  43c2ab:	cld    
  43c2ac:	add    BYTE PTR [edi-0x35070368],ch
  43c2b2:	add    eax,DWORD PTR [eax]
  43c2b4:	aaa    
  43c2b5:	cdq    
  43c2b6:	test   al,0xfc
  43c2b8:	call   0xe1406b4d
  43c2bd:	jle    0x43c267
  43c2bf:	cld    
  43c2c0:	fdiv   st,st(2)
  43c2c2:	test   al,0xfc
  43c2c4:	rcr    al,1
  43c2c6:	test   al,0xfc
  43c2c8:	enter  0x9fde,0xfc
  43c2cc:	add    BYTE PTR [eax],al
  43c2ce:	rol    BYTE PTR [edi+ebx*4-0x60754704],0xfc
  43c2d6:	mov    al,0xb0
  43c2d8:	lahf   
  43c2d9:	cld    
  43c2da:	test   al,0x5c
  43c2dc:	mov    al,ds:0xa04aa0fc
  43c2e1:	cld    
  43c2e2:	cwde   
  43c2e3:	jb     0x43c28e
  43c2e5:	cld    
  43c2e6:	nop
  43c2e7:	sbb    BYTE PTR [ecx-0x56f77704],ch
  43c2ed:	cld    
  43c2ee:	sub    ah,0x9f
  43c2f1:	cld    
  43c2f2:	js     0x43c2b2
  43c2f4:	lahf   
  43c2f5:	cld    
  43c2f6:	jo     0x43c2c2
  43c2f8:	lahf   
  43c2f9:	cld    
  43c2fa:	push   0x60fca2a0
  43c2ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c300:	mov    ds:0xa36258fc,al
  43c305:	cld    
  43c306:	push   eax
  43c307:	jo     0x43c2ac
  43c309:	cld    
  43c30a:	dec    eax
  43c30b:	xor    esp,DWORD PTR [eax-0x1643bc5e]
  43c311:	add    esi,DWORD PTR [edi]
  43c313:	xor    al,0x16
  43c315:	mov    ds:0x3f8bc33,al
  43c31a:	aaa    
  43c31b:	mov    ah,0xe4
  43c31d:	add    esi,DWORD PTR [edi]
  43c31f:	mov    ah,0xe8
  43c321:	add    esi,DWORD PTR [edi]
  43c323:	mov    ah,0xdc
  43c325:	add    esi,DWORD PTR [edi]
  43c327:	mov    ah,0xde
  43c329:	add    esi,DWORD PTR [edi]
  43c32b:	mov    ah,0x99
  43c32d:	add    esi,DWORD PTR [edi]
  43c32f:	mov    ah,0xab
  43c331:	mov    eax,ds:0xbbfb0000
  43c336:	dec    ecx
  43c337:	mov    eax,ds:0xa16dbbf3
  43c33c:	jmp    0x43c2f9
  43c33e:	in     eax,0x3
  43c340:	aaa    
  43c341:	mov    ah,0x77
  43c343:	mov    eax,ds:0x37abbdb
  43c348:	aaa    
  43c349:	mov    ah,0x7f
  43c34b:	mov    eax,ds:0xa235bbcb
  43c350:	ret    
  43c351:	mov    ebx,0xb43703ef
  43c356:	hlt    
  43c357:	add    esi,DWORD PTR [edi]
  43c359:	mov    ah,0x4d
  43c35b:	add    al,0x37
  43c35d:	mov    ah,0xeb
  43c35f:	add    esi,DWORD PTR [edi]
  43c361:	mov    ah,0xdb
  43c363:	add    esi,DWORD PTR [edi]
  43c365:	mov    ah,0xe7
  43c367:	add    esi,DWORD PTR [edi]
  43c369:	mov    ah,0xcd
  43c36b:	add    esi,DWORD PTR [edi]
  43c36d:	mov    ah,0xc5
  43c36f:	mov    eax,ds:0xa203bb83
  43c374:	jnp    0x43c331
  43c376:	stc    
  43c377:	mov    eax,ds:0x3f9bb73
  43c37c:	aaa    
  43c37d:	mov    ah,0xea
  43c37f:	add    esi,DWORD PTR [edi]
  43c381:	mov    ah,0xda
  43c383:	add    esi,DWORD PTR [edi]
  43c385:	mov    ah,0x0
  43c387:	push   es
  43c388:	cmp    esi,DWORD PTR [ecx+eax*4]
  43c38b:	(bad)  
  43c38c:	xor    al,0x34
  43c38e:	sub    ecx,0x51013434
  43c394:	nop
  43c395:	mov    eax,0x5bf7
  43c39a:	fdiv   DWORD PTR [edi-0x482fb209]
  43c3a0:	imul   edi
  43c3a2:	fidiv  DWORD PTR [edi-0x482d2609]
  43c3a8:	not    ebx
  43c3aa:	fidiv  DWORD PTR [edi-0x482ef809]
  43c3b0:	not    ebp
  43c3b2:	fidiv  DWORD PTR [edi-0x482d2809]
  43c3b8:	imul   DWORD PTR [ecx-0x5e084866]
  43c3be:	xchg   edx,eax
  43c3bf:	mov    bh,0xf7
  43c3c1:	fwait
  43c3c2:	call   0xf7b7:0x9291f7b7
  43c3c9:	mov    ebx,DWORD PTR [ebx-0x6d860849]
  43c3cf:	mov    bh,0xf7
  43c3d1:	addr16 cdq 
  43c3d3:	mov    bh,0xf7
  43c3d5:	addr16 xchg edx,eax
  43c3d7:	mov    bh,0xf7
  43c3d9:	jnp    0x43c3b5
  43c3db:	mov    bh,0xf7
  43c3dd:	jae    0x43c3b1
  43c3df:	mov    bh,0xf7
  43c3e1:	(bad)  
  43c3e2:	fidiv  DWORD PTR [edi-0x482d7009]
  43c3e8:	div    DWORD PTR [ebp-0x26]
  43c3eb:	mov    bh,0xf7
  43c3ed:	mov    eax,ds:0xbbf7b7d2
  43c3f2:	fidiv  DWORD PTR [edi-0x482d4009]
  43c3f8:	test   DWORD PTR [ecx-0x16084866],0x34340000
  43c402:	add    DWORD PTR [eax],eax
  43c404:	fcom   QWORD PTR [esi-0x6951000c]
  43c40a:	hlt    
  43c40b:	call   FWORD PTR [eax+0x4fff496]
  43c411:	xchg   edi,eax
  43c412:	hlt    
  43c413:	jmp    FWORD PTR [esi+edx*4-0x6aad000c]
  43c41a:	hlt    
  43c41b:	call   FWORD PTR [esi]
  43c41d:	add    DWORD PTR ss:[eax],eax
  43c420:	mov    ebx,0xdd794631
  43c425:	inc    ecx
  43c426:	fs ins DWORD PTR es:[edi],dx
  43c428:	ret    0x6c4e
  43c42b:	gs mov dl,0x48
  43c42e:	inc    ebx
  43c42f:	imul   ecx,edx,0xab694d52
  43c435:	push   edx
  43c436:	add    DWORD PTR [eax],eax
  43c438:	mov    dh,0x33
  43c43a:	inc    edx
  43c43b:	shl    BYTE PTR gs:[ecx+0x60],cl
  43c43f:	ins    DWORD PTR es:[edi],dx
  43c440:	mov    bl,0x5b
  43c442:	push   0x6e
  43c444:	mov    bl,0x6e
  43c446:	imul   esp,DWORD PTR [esi-0x57],0x43
  43c44a:	ins    BYTE PTR es:[edi],dx
  43c44b:	popa   
  43c44c:	push   edx
  43c44d:	dec    esi
  43c44e:	push   0x6e
  43c450:	fidiv  WORD PTR ds:0x53110272
  43c456:	ins    DWORD PTR es:[edi],dx
  43c457:	push   ebx
  43c458:	push   edi
  43c459:	inc    ecx
  43c45a:	ins    DWORD PTR es:[edi],dx
  43c45b:	gs sti 
  43c45d:	arpl   WORD PTR [eax+0x6d],sp
  43c460:	repz das 
  43c462:	retf   
  43c463:	add    al,0x0
  43c465:	add    BYTE PTR [edx+0x42],al
  43c468:	jo     0x43c4af
  43c46a:	call   0x5db628b2
  43c46f:	inc    edx
  43c470:	pusha  
  43c471:	je     0x43c46a
  43c473:	push   eax
  43c474:	pop    eax
  43c475:	ins    BYTE PTR es:[edi],dx
  43c476:	cmp    eax,0x27745653
  43c47b:	dec    ebp
  43c47c:	imul   eax,DWORD PTR [eax],0x37
  43c47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c480:	add    BYTE PTR [ecx-0x2a],dl
  43c483:	xor    esi,DWORD PTR [ecx+0x42]
  43c486:	sar    BYTE PTR [esi+ecx*2+0x6931c967],1
  43c48d:	arpl   WORD PTR [eax],ax
  43c48f:	sub    eax,0xbed46367
  43c494:	add    edx,DWORD PTR [edi+0x3b]
  43c497:	jle    0x43c4f9
  43c499:	je     0x43c48d
  43c49b:	loopne 0x43c4fd
  43c49d:	push   0xffffffab
  43c49f:	retf   
  43c4a0:	add    ebx,esi
  43c4a2:	xor    eax,0xab676994
  43c4a7:	in     al,0x5c
  43c4a9:	ins    BYTE PTR es:[edi],dx
  43c4aa:	mov    ?,ebp
  43c4ac:	pusha  
  43c4ad:	cmp    eax,0x6767f485
  43c4b2:	xchg   esp,eax
  43c4b3:	in     al,dx
  43c4b4:	pop    edi
  43c4b5:	dec    ebp
  43c4b6:	call   0x3a9:0x886767ae
  43c4bd:	scas   al,BYTE PTR es:[edi]
  43c4be:	cmp    edi,DWORD PTR [esi+0x5f]
  43c4c1:	arpl   WORD PTR [edx-0x65],dx
  43c4c4:	add    esi,DWORD PTR [edi]
  43c4c6:	xor    al,0x7f
  43c4c8:	pusha  
  43c4c9:	pop    edi
  43c4ca:	add    BYTE PTR [eax],al
  43c4cc:	popa   
  43c4cd:	mov    al,0x3e
  43c4cf:	outs   dx,BYTE PTR ds:[esi]
  43c4d0:	pop    esi
  43c4d1:	aaa    
  43c4d2:	gs pop ebp
  43c4d4:	push   esi
  43c4d5:	aaa    
  43c4d6:	dec    edi
  43c4d7:	arpl   WORD PTR [edi+edx*2+0x66],dx
  43c4db:	imul   ecx,DWORD PTR [ecx-0x35],0x837ea03
  43c4e2:	imul   esi,DWORD PTR [edx+edx*1+0x5d],0x40
  43c4e7:	outs   dx,BYTE PTR ds:[esi]
  43c4e8:	push   cs
  43c4e9:	mul    DWORD PTR [ebp+0x5d]
  43c4ec:	push   ss
  43c4ed:	addr16 push eax
  43c4ef:	arpl   WORD PTR [edi+esi*8],dx
  43c4f2:	imul   ebx,DWORD PTR gs:[ecx],0x378303cb
  43c4f9:	xor    al,0x2b
  43c4fb:	jbe    0x43c511
  43c4fd:	push   ebx
  43c4fe:	push   cs
  43c4ff:	popa   
  43c500:	hlt    
  43c501:	inc    ecx
  43c502:	add    eax,0xea60e36a
  43c507:	add    esp,DWORD PTR [esi+0x2f]
  43c50a:	pop    ss
  43c50b:	sar    BYTE PTR gs:[edi],1
  43c50e:	and    BYTE PTR [ebx-0x1f],ch
  43c511:	data16 cmc 
  43c513:	addr16 ret 
  43c515:	dec    edx
  43c516:	cli    
  43c517:	addr16 aam 0x68
  43c51a:	int3   
  43c51b:	ins    DWORD PTR es:[edi],dx
  43c51c:	aam    0x54
  43c51e:	into   
  43c51f:	jbe    0x43c558
  43c521:	xor    al,0x39
  43c523:	add    esi,DWORD PTR [ebx+0x51]
  43c526:	mov    dh,0x60
  43c528:	stos   DWORD PTR es:[edi],eax
  43c529:	push   ecx
  43c52a:	stos   DWORD PTR es:[edi],eax
  43c52b:	jne    0x43c4bd
  43c52d:	inc    eax
  43c52e:	shl    DWORD PTR [esi+0x0],1
  43c531:	add    BYTE PTR [eax+0x48],dh
  43c534:	fwait
  43c535:	pusha  
  43c536:	push   0x40
  43c538:	shr    DWORD PTR [edx-0x73],0x34
  43c53c:	mov    esp,0x87483a03
  43c541:	jbe    0x43c597
  43c543:	ins    BYTE PTR es:[edi],dx
  43c544:	mov    DWORD PTR [ecx+0x53],ebp
  43c547:	dec    eax
  43c548:	jge    0x43c54d
  43c54a:	ins    BYTE PTR es:[edi],dx
  43c54b:	xor    DWORD PTR [esi-0x79bd9c8a],ecx
  43c551:	pusha  
  43c552:	pop    ebp
  43c553:	jne    0x43c53f
  43c555:	add    esi,DWORD PTR [ecx+0x31]
  43c558:	jbe    0x43c5d0
  43c55a:	dec    ebx
  43c55b:	inc    edx
  43c55c:	dec    ebx
  43c55d:	je     0x43c59f
  43c55f:	inc    esi
  43c560:	sub    DWORD PTR [ecx+edx*1],eax
  43c563:	xor    eax,0x51147628
  43c568:	push   ss
  43c569:	imul   eax,DWORD PTR [ecx],0x42
  43c56c:	dec    ecx
  43c56d:	jbe    0x43c58f
  43c56f:	xor    al,0xfd
  43c571:	(bad)  
  43c572:	out    0x41,eax
  43c574:	add    DWORD PTR [eax+0x7],eax
  43c577:	push   ebx
  43c578:	aas    
  43c579:	inc    eax
  43c57a:	rcpps  xmm0,XMMWORD PTR [ecx]
  43c57d:	jbe    0x43c5b2
  43c57f:	stc    
  43c580:	jb     0x43c586
  43c582:	aam    0x3f
  43c584:	pop    esi
  43c585:	das    
  43c586:	fadd   QWORD PTR [edi+0x5e]
  43c589:	cmp    esp,DWORD PTR ss:[ebp+0x2]
  43c58d:	das    
  43c58e:	iret   
  43c58f:	inc    edx
  43c590:	je     0x43c5a3
  43c592:	cmc    
  43c593:	dec    esi
  43c594:	gs or  al,0x0
  43c597:	add    cl,dh
  43c599:	inc    edx
  43c59a:	pop    edi
  43c59b:	pop    es
  43c59c:	loopne 0x43c5e3
  43c59e:	je     0x43c589
  43c5a0:	xor    al,0xb6
  43c5a2:	add    DWORD PTR [esi-0x37babf6f],esp
  43c5a8:	mov    ds:0xaadb3e40,eax
  43c5ad:	dec    ebp
  43c5ae:	jae    0x43c599
  43c5b0:	xor    al,0x73
  43c5b2:	add    esp,DWORD PTR [esi-0x44aebf8f]
  43c5b8:	lahf   
  43c5b9:	pop    ecx
  43c5ba:	inc    edx
  43c5bb:	lds    esp,FWORD PTR [eax+0x46]
  43c5be:	pop    esi
  43c5bf:	call   0x683b:0xdd013483
  43c5c6:	push   0x6a688888
  43c5cb:	mov    ebp,DWORD PTR [edx+0x57]
  43c5ce:	jae    0x43c550
  43c5d0:	jne    0x43c606
  43c5d2:	add    DWORD PTR [esi+0x7d744ad1],esp
  43c5d8:	inc    edx
  43c5d9:	pop    ecx
  43c5da:	jno    0x43c64c
  43c5dc:	jne    0x43c612
  43c5de:	add    DWORD PTR [eax],ebp
  43c5e0:	mov    eax,0x2955744a
  43c5e5:	pop    ecx
  43c5e6:	pop    cx
  43c5e8:	hlt    
  43c5e9:	xor    eax,DWORD PTR [ecx]
  43c5eb:	pop    ds
  43c5ec:	mov    al,ds:0x5a00744a
  43c5f1:	ds gs add BYTE PTR gs:[ebp+0x1],ah
  43c5f7:	add    BYTE PTR [edi-0x4b],ch
  43c5fa:	push   eax
  43c5fb:	imul   eax,DWORD PTR [eax],0x3656fa00
  43c601:	push   0x6f4d3e2f
  43c606:	and    eax,DWORD PTR [edi+0x65]
  43c609:	je     0x43c642
  43c60b:	outs   dx,BYTE PTR ds:[esi]
  43c60c:	jo     0x43c682
  43c60e:	cmp    esi,DWORD PTR [eax]
  43c610:	bound  eax,QWORD PTR [ebx]
  43c612:	and    eax,DWORD PTR [edi+0x65]
  43c615:	je     0x43c63e
  43c617:	outs   dx,BYTE PTR ds:[esi]
  43c618:	jo     0x43c68e
  43c61a:	cmp    esp,DWORD PTR [edx+ebp*2+0x57]
  43c61e:	aaa    
  43c61f:	push   esp
  43c620:	fs inc ebx
  43c622:	push   cx
  43c624:	addr16 add dh,ah
  43c627:	xor    BYTE PTR [ebp+0x6f],al
  43c62a:	std    
  43c62b:	push   edx
  43c62c:	gs inc esi
  43c62e:	cld    
  43c62f:	push   esi
  43c630:	add    BYTE PTR fs:[ecx-0x48ab7d0],ch
  43c637:	aas    
  43c638:	jo     0x43c68a
  43c63a:	sti    
  43c63b:	aas    
  43c63c:	arpl   WORD PTR [edi-0x44],bp
  43c63f:	dec    esi
  43c640:	pop    eax
  43c641:	outs   dx,BYTE PTR ds:[esi]
  43c642:	lods   eax,DWORD PTR ds:[esi]
  43c643:	push   esi
  43c644:	outs   dx,DWORD PTR ss:[esi]
  43c646:	retf   
  43c647:	dec    ebx
  43c648:	ins    DWORD PTR es:[edi],dx
  43c649:	gs int3 
  43c64b:	xor    DWORD PTR [esi+0x6d569902],eax
  43c651:	push   esp
  43c652:	(bad)  
  43c653:	push   eax
  43c654:	pop    esi
  43c655:	inc    ebx
  43c656:	rol    DWORD PTR [esi+0x6b],0x74
  43c65a:	fidiv  WORD PTR [ecx]
  43c65c:	mov    ah,0x0
  43c65e:	lea    edi,[edi]
  43c660:	fs popa 
  43c662:	add    BYTE PTR [eax],al
  43c664:	pop    edx
  43c665:	push   ebx
  43c666:	dec    ebp
  43c667:	push   0x6458530c
  43c66c:	aaa    
  43c66d:	retf   
  43c66e:	add    ecx,esi
  43c670:	xor    eax,0x275f6213
  43c675:	sbb    DWORD PTR [edx+0x3f],esp
  43c678:	and    esp,DWORD PTR [edi+0x60]
  43c67b:	pop    ebp
  43c67c:	aaa    
  43c67d:	xchg   edx,eax
  43c67e:	add    cl,BYTE PTR [eax+0x1a]
  43c681:	ins    BYTE PTR es:[edi],dx
  43c682:	ins    DWORD PTR es:[edi],dx
  43c683:	aas    
  43c684:	or     ebx,DWORD PTR [edi]
  43c686:	pusha  
  43c687:	pop    ebp
  43c688:	aaa    
  43c689:	xchg   BYTE PTR [edx],al
  43c68b:	dec    eax
  43c68c:	shr    BYTE PTR [ebx],cl
  43c68e:	ins    DWORD PTR es:[edi],dx
  43c68f:	inc    edx
  43c690:	in     eax,0x2f
  43c692:	bound  eax,QWORD PTR [eax]
  43c694:	aaa    
  43c695:	add    DWORD PTR [ebx],eax
  43c697:	inc    ecx
  43c698:	fidivr DWORD PTR [esi+0x29d86e53]
  43c69e:	bound  ebp,QWORD PTR [ebp-0x3c]
  43c6a1:	adc    ah,BYTE PTR [edx+0x5f]
  43c6a4:	(bad)  
  43c6a5:	retf   0xca03
  43c6a8:	xor    eax,0xa75f6083
  43c6ad:	xchg   DWORD PTR [eax+0x6d],esp
  43c6b0:	stos   DWORD PTR es:[edi],eax
  43c6b1:	fstp   DWORD PTR [esi+0x77]
  43c6b4:	aaa    
  43c6b5:	add    BYTE PTR [ebx],al
  43c6b7:	dec    eax
  43c6b8:	call   0x5ce8:0x853d73ec
  43c6bf:	je     0x43c65b
  43c6c1:	retf   
  43c6c2:	add    ebp,ecx
  43c6c4:	xor    esi,DWORD PTR [ebp+0x64]
  43c6c7:	outs   dx,BYTE PTR ds:[esi]
  43c6c8:	add    BYTE PTR [eax],al
  43c6ca:	imul   esp,DWORD PTR [eax-0x667893a4],0x5e
  43c6d1:	je     0x43c72d
  43c6d3:	stos   BYTE PTR es:[edi],al
  43c6d4:	add    BYTE PTR [bx],dh
  43c6d7:	mov    BYTE PTR [eax],al
  43c6d9:	ins    BYTE PTR es:[edi],dx
  43c6da:	inc    esp
  43c6db:	aas    
  43c6dc:	jb     0x43c73b
  43c6de:	pop    edx
  43c6df:	cmp    esp,DWORD PTR [ebp+0x51]
  43c6e2:	aaa    
  43c6e3:	xchg   BYTE PTR [eax],al
  43c6e5:	ins    BYTE PTR es:[edi],dx
  43c6e6:	inc    esp
  43c6e7:	xor    al,0x56
  43c6e9:	jb     0x43c6fd
  43c6eb:	push   ebx
  43c6ec:	dec    esi
  43c6ed:	dec    edi
  43c6ee:	aaa    
  43c6ef:	xor    al,0xed
  43c6f1:	add    al,0xf4
  43c6f3:	cmp    ebx,DWORD PTR [edx+0x65]
  43c6f6:	or     eax,0x5662550
  43c6fb:	dec    ebx
  43c6fc:	cmp    al,0x67
  43c6fe:	sbb    eax,0xb664547
  43c703:	popa   
  43c704:	cs jb  0x43c717
  43c707:	inc    esi
  43c708:	pop    es
  43c709:	jae    0x43c711
  43c70b:	xor    al,0xcb
  43c70d:	add    al,0xf5
  43c70f:	dec    edx
  43c710:	(bad)  
  43c711:	pusha  
  43c712:	or     ecx,DWORD PTR [ebx-0xb]
  43c715:	pusha  
  43c716:	add    eax,DWORD PTR [ebp+0x26]
  43c719:	addr16 loop 0x43c78b
  43c71c:	or     DWORD PTR [eax-0x2c],esi
  43c71f:	pop    edi
  43c720:	add    DWORD PTR [ecx-0x2c],ebp
  43c723:	xor    ebp,DWORD PTR [ebx+0x1]
  43c726:	test   BYTE PTR [esi-0x2a],0x4f
  43c72a:	xchg   esp,eax
  43c72b:	and    edx,ebx
  43c72d:	cmp    eax,0x20900000
  43c732:	lds    eax,FWORD PTR [ebp-0x80]
  43c735:	and    DWORD PTR [ebp+0x2a34374e],edi
  43c73b:	add    al,BYTE PTR [ecx+0x755fc919]
  43c741:	sbb    eax,0x343760be
  43c746:	pop    ebp
  43c747:	add    DWORD PTR [esi+0x19],esi
  43c74a:	xchg   esi,eax
  43c74b:	dec    edi
  43c74c:	push   esp
  43c74d:	and    DWORD PTR [edx-0x7dd777ad],ebx
  43c753:	dec    esi
  43c754:	aaa    
  43c755:	xor    al,0xbe
  43c757:	add    al,0x75
  43c759:	sbb    eax,0x1d6b608e
  43c75e:	test   DWORD PTR [eax+0x63],esp
  43c761:	and    eax,DWORD PTR [ecx]
  43c763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c764:	pop    ecx
  43c765:	adc    DWORD PTR [edx+0x7d],esp
  43c768:	cli    
  43c769:	sbb    ah,BYTE PTR [ebp+0x4c]
  43c76c:	pop    es
  43c76d:	sbb    esp,DWORD PTR [esi+0x44]
  43c770:	xor    esp,DWORD PTR [eax+0x28002e01]
  43c776:	aas    
  43c777:	inc    eax
  43c778:	movhps QWORD PTR [edx+0x57],xmm1
  43c77c:	icebp  
  43c77d:	sbb    al,0x73
  43c77f:	dec    esp
  43c780:	adc    al,0x28
  43c782:	push   0x46
  43c784:	sbb    DWORD PTR [edx+0x7a],esi
  43c787:	and    DWORD PTR [esi+ebx*1],edx
  43c78a:	pop    ebp
  43c78b:	adc    eax,0x9013410
  43c790:	jmp    DWORD PTR ss:[edi+0x1f]
  43c794:	add    BYTE PTR [eax],al
  43c796:	add    dh,dh
  43c798:	imul   edi,ebp,0x1e78f6f9
  43c79e:	cmp    ebx,DWORD PTR [edx+0x27e82601]
  43c7a4:	aas    
  43c7a5:	add    bh,cl
  43c7a7:	push   ss
  43c7a8:	inc    edx
  43c7a9:	cmc    
  43c7aa:	enter  0x6a21,0xcb
  43c7ae:	mov    eax,ds:0x7bda5e28
  43c7b3:	xor    al,0x1
  43c7b5:	mov    edx,0xd55e0020
  43c7ba:	pop    ecx
  43c7bb:	push   ds
  43c7bc:	pop    ebp
  43c7bd:	mov    dh,0x72
  43c7bf:	imul   BYTE PTR [ecx-0x33]
  43c7c2:	imul   esi,DWORD PTR [ecx+eax*1],0x69f635f0
  43c7c9:	mov    edi,0x9b69f658
  43c7ce:	sub    BYTE PTR [bx],bh
  43c7d1:	nop
  43c7d2:	push   eax
  43c7d3:	pop    ss
  43c7d4:	push   eax
  43c7d5:	jmp    0xa746260e
  43c7da:	dec    ebp
  43c7db:	push   ds
  43c7dc:	pop    ebp
  43c7dd:	add    BYTE PTR [ebp-0x4c8c95e6],bl
  43c7e3:	ss inc esp
  43c7e5:	add    DWORD PTR [eax-0x679b94e3],edx
  43c7eb:	adc    DWORD PTR [ecx+0x74],edi
  43c7ee:	pusha  
  43c7ef:	pop    ds
  43c7f0:	gs gs popa 
  43c7f3:	cmp    bh,ch
  43c7f5:	add    ebx,DWORD PTR [ebx+edx*1+0x65]
  43c7f9:	add    BYTE PTR gs:[eax],al
  43c7fc:	out    dx,eax
  43c7fd:	and    al,0x64
  43c7ff:	dec    ebp
  43c800:	push   ebx
  43c801:	and    al,0x64
  43c803:	js     0x43c7a3
  43c805:	ss cli 
  43c807:	add    DWORD PTR [ecx+0x13],edx
  43c80a:	ins    DWORD PTR es:[edi],dx
  43c80b:	dec    eax
  43c80c:	out    dx,eax
  43c80d:	sbb    DWORD PTR [ebp+0x6c],ebx
  43c810:	inc    ebx
  43c811:	jmp    FWORD PTR [edx+0x66]
  43c814:	cmp    DWORD PTR [esi],esp
  43c816:	ins    BYTE PTR es:[edi],dx
  43c817:	popa   
  43c818:	inc    edx
  43c819:	pop    ds
  43c81a:	push   0x6e
  43c81c:	dec    esi
  43c81d:	ss dec ecx
  43c81f:	add    eax,0x726d252a
  43c824:	cmp    eax,0x4e577028
  43c829:	ss and al,0x2
  43c82c:	adc    DWORD PTR [ebx],edx
  43c82e:	ins    DWORD PTR es:[edi],dx
  43c82f:	dec    esi
  43c830:	jmp    DWORD PTR [ecx]
  43c832:	pusha  
  43c833:	jbe    0x43c828
  43c835:	add    al,0x70
  43c837:	jae    0x43c83b
  43c839:	adc    ebp,DWORD PTR [ecx+ecx*2-0x28]
  43c83d:	punpckhdq mm0,QWORD PTR [eax]
  43c840:	ret    0x4233
  43c843:	gs ret 0x63ff
  43c847:	jb     0x43c806
  43c849:	push   ds
  43c84a:	push   0x6e
  43c84c:	shr    DWORD PTR ds:0xb1c10052,cl
  43c852:	inc    esp
  43c853:	gs ret 0x606f
  43c857:	ins    BYTE PTR es:[edi],dx
  43c858:	aaa    
  43c859:	rcl    BYTE PTR [ebx+0x69],0x4e
  43c85d:	xor    DWORD PTR [eax+0x63],ebp
  43c860:	add    BYTE PTR [eax],al
  43c862:	inc    ebp
  43c863:	loopne 0x43c8e0
  43c865:	add    BYTE PTR [edi],dh
  43c867:	sbb    al,0x4
  43c869:	cmp    eax,0x7462c045
  43c86e:	push   edx
  43c86f:	xlat   BYTE PTR ds:[ebx]
  43c870:	push   0x6e
  43c872:	sbb    bh,dh
  43c874:	js     0x43c8df
  43c876:	and    eax,0x37005c14
  43c87b:	ja     0x43c885
  43c87d:	push   edx
  43c87e:	push   cs
  43c87f:	or     eax,0x7167379
  43c884:	dec    ebx
  43c885:	outs   dx,BYTE PTR ds:[esi]
  43c886:	adc    bh,al
  43c888:	cld    
  43c889:	cmp    ecx,DWORD PTR gs:[esi+0x6a]
  43c88d:	je     0x43c880
  43c88f:	repz pusha 
  43c891:	arpl   WORD PTR [ebx],cx
  43c893:	inc    esp
  43c894:	bound  esp,QWORD PTR [ebx+0x37]
  43c897:	int3   
  43c898:	std    
  43c899:	inc    eax
  43c89a:	fimul  DWORD PTR [esi+0x4b]
  43c89d:	addr16 retf 
  43c89f:	aaa    
  43c8a0:	push   eax
  43c8a1:	addr16 int 0x3f
  43c8a4:	dec    edx
  43c8a5:	js     0x43c8de
  43c8a7:	les    ecx,FWORD PTR [eax]
  43c8a9:	push   edx
  43c8aa:	into   
  43c8ab:	lods   al,BYTE PTR ds:[esi]
  43c8ac:	outs   dx,DWORD PTR ds:[esi]
  43c8ad:	jae    0x43c885
  43c8af:	scas   al,BYTE PTR es:[edi]
  43c8b0:	cmp    al,0x6c
  43c8b2:	mov    ds:0x37005e8a,eax
  43c8b7:	sahf   
  43c8b8:	dec    DWORD PTR [ebp-0x66]
  43c8bb:	js     0x43c91f
  43c8bd:	jb     0x43c851
  43c8bf:	xlat   BYTE PTR ds:[ebx]
  43c8c0:	push   esp
  43c8c1:	outs   dx,BYTE PTR ds:[esi]
  43c8c2:	call   0x8500:0x696f7e
  43c8c9:	je     0x43c925
  43c8cb:	add    BYTE PTR [edi],dh
  43c8cd:	ins    DWORD PTR es:[edi],dx
  43c8ce:	inc    BYTE PTR [eax-0x6e]
  43c8d1:	out    0x49,eax
  43c8d3:	arpl   WORD PTR [si],si
  43c8d6:	test   DWORD PTR [edi+0x50],edx
  43c8d9:	pop    ds
  43c8da:	jge    0x43c8df
  43c8dc:	add    eax,0x4b68a634
  43c8e1:	pop    ss
  43c8e2:	mov    gs,WORD PTR [eax+0x75]
  43c8e5:	sbb    ecx,DWORD PTR [esi-0x76cb9998]
  43c8eb:	pop    es
  43c8ec:	jb     0x43c905
  43c8ee:	jbe    0x43c939
  43c8f0:	push   eax
  43c8f1:	and    BYTE PTR [ebp+0x44],bh
  43c8f4:	sub    ebp,DWORD PTR [eax]
  43c8f6:	pop    esp
  43c8f7:	pop    ebp
  43c8f8:	or     DWORD PTR [edi],esp
  43c8fa:	dec    esi
  43c8fb:	imul   edx,DWORD PTR [edx],0x3f03ea09
  43c901:	ss pop ds
  43c903:	imul   ecx,DWORD PTR [ebx],0x4684eff
  43c909:	and    BYTE PTR ds:0x4621e03c,bh
  43c90f:	pusha  
  43c910:	adc    al,0x9
  43c912:	jmp    0xe369:0x27363103
  43c919:	add    ebx,DWORD PTR [ebx*2+0x691612e5]
  43c920:	pop    es
  43c921:	imul   DWORD PTR es:[ecx-0x28]
  43c925:	pop    ds
  43c926:	add    eax,0x1125c357
  43c92b:	bound  eax,QWORD PTR [eax]
  43c92d:	add    dh,dl
  43c92f:	or     dl,ch
  43c931:	add    edi,ebx
  43c933:	xor    eax,0x4ab691f
  43c938:	fcomp  QWORD PTR [ebp+eiz*4+0x15]
  43c93c:	into   
  43c93d:	push   0x69bf2287
  43c942:	nop
  43c943:	and    BYTE PTR [ebp-0x68d762c4],bh
  43c949:	add    ebp,ebx
  43c94b:	xor    eax,0xf98b689f
  43c950:	add    bh,al
  43c952:	jle    0x43c96b
  43c954:	jae    0x43c914
  43c956:	push   esi
  43c957:	sbb    ebx,DWORD PTR [esi-0x69]
  43c95a:	pusha  
  43c95b:	add    ah,BYTE PTR [edx-0x65]
  43c95e:	or     DWORD PTR [edi],0x63
  43c961:	test   DWORD PTR [edi+0x5],ecx
  43c964:	add    DWORD PTR [ecx+0x34],eax
  43c967:	jno    0x43c9dc
  43c969:	mov    WORD PTR [ebx+0x28],ss
  43c96c:	pop    esi
  43c96d:	cdq    
  43c96e:	dec    edx
  43c96f:	sbb    eax,0x21418c64
  43c974:	push   eax
  43c975:	jmp    0x2e4541ae
  43c97a:	adc    BYTE PTR [eax],ch
  43c97c:	inc    esp
  43c97d:	push   esp
  43c97e:	sub    DWORD PTR [esi],ebx
  43c980:	pop    esi
  43c981:	inc    edi
  43c982:	pop    ds
  43c983:	or     BYTE PTR [ecx+0x5b],ch
  43c986:	sbb    BYTE PTR [edi],cl
  43c988:	pop    ebp
  43c989:	jmp    0x2e477dc2
  43c98e:	or     edx,DWORD PTR [ebx]
  43c990:	sbb    DWORD PTR [bx+si],eax
  43c993:	add    BYTE PTR [ecx],al
  43c995:	sbb    eax,0x20ea4464
  43c99a:	add    DWORD PTR [edx+0x1b69083f],ebp
  43c9a0:	fmul   DWORD PTR [esi]
  43c9a2:	pop    ebp
  43c9a3:	fisub  DWORD PTR [edx]
  43c9a5:	repnz imul ebx,DWORD PTR [ebx],0xc60127ca
  43c9ac:	xor    eax,DWORD PTR [eax]
  43c9ae:	push   0x69ffcf08
  43c9b3:	or     eax,ecx
  43c9b5:	push   cs
  43c9b6:	jae    0x43c9a8
  43c9b8:	(bad)  
  43c9b9:	xor    al,0x1
  43c9bb:	sub    eax,0xdb69083f
  43c9c0:	cdq    
  43c9c1:	minps  xmm3,XMMWORD PTR [edx]
  43c9c4:	popa   
  43c9c5:	cli    
  43c9c6:	pop    ebp
  43c9c7:	ror    DWORD PTR [eax-0x4ffffecc],1
  43c9cd:	aaa    
  43c9ce:	ss jb  0x43c9cc
  43c9d1:	adc    DWORD PTR [ebp+0x65],ebp
  43c9d4:	call   0x6515:0xf66c6a13
  43c9db:	jo     0x43c9ea
  43c9dd:	imul   eax,DWORD PTR [esi+0x6e],0x686622af
  43c9e4:	mov    cl,0x26
  43c9e6:	add    DWORD PTR [eax],eax
  43c9e8:	pop    ecx
  43c9e9:	xor    eax,DWORD PTR [edx+0x65]
  43c9ec:	dec    edx
  43c9ed:	clc    
  43c9ee:	imul   ebp,DWORD PTR [ebp-0x4d],0x92646b11
  43c9f5:	or     DWORD PTR [ebx+0x65],ebp
  43c9f8:	add    BYTE PTR [eax],al
  43c9fa:	leave  
  43c9fb:	xor    dl,BYTE PTR [edx+0x3]
  43c9fe:	arpl   WORD PTR [ebx],dx
  43ca00:	jno    0x43ca58
  43ca02:	pop    es
  43ca03:	pop    ss
  43ca04:	jb     0x43ca55
  43ca06:	call   0xfbb02a04
  43ca0b:	aaa    
  43ca0c:	rol    DWORD PTR [ebx+ebp*1],cl
  43ca0f:	adc    ch,BYTE PTR [ecx+eiz*2+0x3e]
  43ca13:	or     ah,BYTE PTR [eax+0x65]
  43ca16:	cmp    ebp,esi
  43ca18:	bound  eax,QWORD PTR [esi-0x9]
  43ca1b:	adc    esp,DWORD PTR [eax+eax*1-0x1e]
  43ca1f:	xor    dh,BYTE PTR [esi]
  43ca21:	jb     0x43ca5e
  43ca23:	adc    ebp,DWORD PTR [ebp+0x65]
  43ca26:	or     BYTE PTR [ebx],cl
  43ca28:	gs xor edx,DWORD PTR gs:[ebx]
  43ca2c:	jno    0x43ca9e
  43ca2e:	daa    
  43ca2f:	adc    ah,BYTE PTR [edx+0x57]
  43ca32:	dec    esi
  43ca33:	xor    ch,cl
  43ca35:	add    BYTE PTR [edx],cl
  43ca37:	daa    
  43ca38:	jno    0x43caa6
  43ca3a:	aaa    
  43ca3b:	pop    ss
  43ca3c:	pop    eax
  43ca3d:	je     0x43ca3a
  43ca3f:	imul   ebx,DWORD PTR [eax+0x6e],0x640dfa
  43ca46:	aaa    
  43ca47:	stos   BYTE PTR es:[edi],al
  43ca48:	dec    DWORD PTR [ebp-0x66]
  43ca4b:	mov    ch,BYTE PTR [esi+0x6b]
  43ca4e:	xchg   edx,eax
  43ca4f:	iret   
  43ca50:	pop    ebx
  43ca51:	outs   dx,BYTE PTR ds:[esi]
  43ca52:	call   0xfd8f:0x37005f7c
  43ca59:	inc    eax
  43ca5a:	pop    edx
  43ca5b:	out    0x36,eax
  43ca5d:	imul   eax,DWORD PTR [eax],0x57d05300
  43ca63:	arpl   WORD PTR [ecx-0x3c],di
  43ca66:	push   edi
  43ca67:	arpl   WORD PTR [ecx-0x44],bp
  43ca6a:	push   esi
  43ca6b:	arpl   WORD PTR [eax-0x65],bp
  43ca6e:	add    ebx,DWORD PTR [edx+0x745ede35]
  43ca74:	push   0x2a
  43ca76:	pop    edi
  43ca77:	outs   dx,BYTE PTR ds:[esi]
  43ca78:	jae    0x43ca3a
  43ca7a:	imul   ebx,DWORD PTR [edi+0x2a],0xfe53702f
  43ca81:	pop    si
  43ca83:	push   0x18
  43ca85:	or     BYTE PTR [esi+0x61],bl
  43ca88:	adc    bl,BYTE PTR [ebx+0x6a3b9703]
  43ca8e:	push   0x74
  43ca90:	jecxz  0x43ca94
  43ca92:	jae    0x43caf7
  43ca94:	push   ss
  43ca95:	test   DWORD PTR [esi+ebp*2+0xe],0xeb6772f6
  43ca9d:	arpl   bp,di
  43ca9f:	ins    BYTE PTR es:[edi],dx
  43caa0:	xor    ebp,DWORD PTR [edx+0x6a]
  43caa3:	je     0x43ca98
  43caa5:	cmp    esi,DWORD PTR [esp+esi*2-0xe]
  43caa9:	dec    eax
  43caaa:	jae    0x43cb15
  43caac:	lds    ebx,FWORD PTR [edx+0x49330903]
  43cab2:	push   0x6d
  43cab4:	fisub  DWORD PTR [esi+0x34d27248]
  43caba:	jns    0x43cabc
  43cabc:	aaa    
  43cabd:	pop    ebp
  43cabe:	add    eax,DWORD PTR [ecx-0x65]
  43cac1:	xor    al,0xcf
  43cac3:	popa   
  43cac4:	add    BYTE PTR [eax],al
  43cac6:	and    BYTE PTR [eax],0xa6
  43cac9:	pop    esi
  43caca:	jp     0x43cae5
  43cacc:	jmp    0x9e5f:0x9f31f403
  43cad3:	adc    cl,cl
  43cad5:	pop    edi
  43cad6:	fs push ds
  43cad8:	(bad)  
  43cad9:	pop    esi
  43cada:	pop    edx
  43cadb:	sbb    edx,ebp
  43cadd:	add    esp,esi
  43cadf:	xor    DWORD PTR [ecx-0x79ecd68e],esp
  43cae5:	push   ecx
  43cae6:	push   esp
  43cae7:	adc    edi,DWORD PTR [esi+0x53]
  43caea:	arpl   WORD PTR [edx],sp
  43caec:	jmp    0x595c:0xb037dc03
  43caf3:	sub    BYTE PTR [ebp+0x64],dh
  43caf6:	push   ebx
  43caf7:	idiv   BYTE PTR [ebx+0x68]
  43cafa:	push   esp
  43cafb:	div    DWORD PTR [ecx+0x3]
  43cafe:	cdq    
  43caff:	aaa    
  43cb00:	nop
  43cb01:	pop    esp
  43cb02:	sbb    DWORD PTR [eax],ebp
  43cb04:	push   ebp
  43cb05:	gs adc esi,ebx
  43cb08:	inc    ebp
  43cb09:	pusha  
  43cb0a:	push   cs
  43cb0b:	adc    DWORD PTR ds:0xf834376c,esp
  43cb11:	or     dh,ah
  43cb13:	and    DWORD PTR [ecx+0x78],edx
  43cb16:	adc    al,0x4
  43cb18:	cmp    al,0x5f
  43cb1a:	ficom  DWORD PTR [esi]
  43cb1c:	cmp    esi,DWORD PTR [ebx-0x4]
  43cb1f:	push   ss
  43cb20:	xor    eax,0xea2ad95f
  43cb25:	add    esi,DWORD PTR [ebp+0x691f31]
  43cb2b:	add    bl,ah
  43cb2d:	pop    es
  43cb2e:	add    dh,BYTE PTR [edx-0x2c]
  43cb31:	adc    bh,dh
  43cb33:	inc    edx
  43cb34:	ficomp WORD PTR ds:0x27bf68f6
  43cb3a:	jmp    0x9e1a:0x137a803
  43cb41:	and    BYTE PTR [ebp+0x1],cl
  43cb44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cb45:	pop    ss
  43cb46:	(bad)  
  43cb47:	int    0x75
  43cb49:	sbb    eax,0x2c8fd567
  43cb4e:	ins    DWORD PTR es:[edi],dx
  43cb4f:	jmp    0xa646c388
  43cb54:	lahf   
  43cb55:	and    BYTE PTR [ecx-0x45],dl
  43cb58:	popa   
  43cb59:	or     DWORD PTR [esi-0x46],ebx
  43cb5c:	test   ebx,esi
  43cb5e:	pop    esp
  43cb5f:	jmp    0xaa449998
  43cb64:	popw   ss
  43cb66:	bound  ebx,QWORD PTR [ebp-0x6a9200b1]
  43cb6c:	dec    edi
  43cb6d:	sub    al,0x50
  43cb6f:	jmp    0xa64542a8
  43cb74:	pop    edi
  43cb75:	and    BYTE PTR [esp+edi*2+0x46],al
  43cb79:	sbb    bl,BYTE PTR [esi-0x71]
  43cb7c:	inc    eax
  43cb7d:	add    BYTE PTR [ecx+0x7b],ch
  43cb80:	pop    ds
  43cb81:	or     ebx,DWORD PTR [ebp-0x60]
  43cb84:	adc    BYTE PTR [ecx+eax*1],dh
  43cb87:	lods   al,BYTE PTR ds:[esi]
  43cb88:	das    
  43cb89:	add    BYTE PTR [ebp+0x5a],ah
  43cb8c:	hlt    
  43cb8d:	pop    ss
  43cb8e:	gs inc esi
  43cb90:	add    BYTE PTR [eax],al
  43cb92:	push   ss
  43cb93:	xor    al,0x1
  43cb95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cb96:	aas    
  43cb97:	add    BYTE PTR [ebp+0x3a],ah
  43cb9a:	stc    
  43cb9b:	sbb    DWORD PTR [esi+0x44],ebx
  43cb9e:	xor    eax,DWORD PTR [ebx+0x2]
  43cba1:	sub    al,0xe3
  43cba3:	adc    ch,BYTE PTR [ebp+0x19]
  43cba6:	in     eax,0x1c
  43cba8:	fs or  al,0xe6
  43cbab:	sbb    BYTE PTR [ecx],al
  43cbad:	inc    ecx
  43cbae:	das    
  43cbaf:	stc    
  43cbb0:	pop    ebp
  43cbb1:	sbb    eax,0xfe7319f8
  43cbb6:	(bad)  
  43cbb7:	(bad)  
  43cbb8:	add    BYTE PTR [bp+si],dh
  43cbbb:	adc    eax,DWORD PTR [ecx]
  43cbbd:	add    cl,cl
  43cbbf:	ss inc edx
  43cbc1:	gs xor dh,ah
  43cbc4:	imul   ebp,DWORD PTR [ebp+0x2e],0xfc656d22
  43cbcb:	push   0xfff36d58
  43cbd0:	add    BYTE PTR [eax],al
  43cbd2:	xor    DWORD PTR [edi],0xf0e26542
  43cbd8:	pop    edi
  43cbd9:	ins    BYTE PTR es:[edi],dx
  43cbda:	repz cmc 
  43cbdc:	ins    BYTE PTR es:[edi],dx
  43cbdd:	je     0x43cb9b
  43cbdf:	or     eax,0x11b27557
  43cbe4:	inc    bp
  43cbe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cbe7:	inc    DWORD PTR [eax]
  43cbe9:	add    bl,al
  43cbeb:	xor    ecx,DWORD PTR [edx+0x70]
  43cbee:	mov    bl,0x8
  43cbf0:	inc    esp
  43cbf1:	jbe    0x43cbb6
  43cbf3:	or     BYTE PTR [ebp+0x57],ch
  43cbf6:	add    BYTE PTR [eax],al
  43cbf8:	fidiv  WORD PTR [esi]
  43cbfa:	mov    eax,0x6d119101
  43cbff:	inc    ebx
  43cc00:	inc    ebx
  43cc01:	and    eax,0x22b86567
  43cc06:	push   ecx
  43cc07:	jb     0x43cc32
  43cc09:	adc    al,0x64
  43cc0b:	jae    0x43cc0a
  43cc0d:	outs   dx,BYTE PTR ds:[esi]
  43cc0e:	pop    ebp
  43cc0f:	add    bh,cl
  43cc11:	xor    cl,BYTE PTR [ebp+0x65]
  43cc14:	in     al,dx
  43cc15:	or     ah,BYTE PTR [eax+0x6e]
  43cc18:	jmp    FWORD PTR [ebx]
  43cc1a:	fs push esp
  43cc1c:	out    0x25,al
  43cc1e:	fs popa 
  43cc20:	repnz das 
  43cc22:	mov    al,ds:0x64261d00
  43cc27:	popa   
  43cc28:	and    dl,BYTE PTR [ebx]
  43cc2a:	inc    edi
  43cc2b:	gs dec ebx
  43cc2d:	or     DWORD PTR [ebp+0x65],ebp
  43cc30:	and    cl,BYTE PTR [eax]
  43cc32:	addr16 gs aaa 
  43cc35:	cmp    al,0x69
  43cc37:	add    BYTE PTR [edi],dh
  43cc39:	and    eax,DWORD PTR [ecx]
  43cc3b:	push   eax
  43cc3c:	lds    eax,FWORD PTR [ecx+0x62]
  43cc3f:	arpl   sp,ax
  43cc41:	lods   eax,DWORD PTR ds:[esi]
  43cc42:	xor    BYTE PTR [esi],ch
  43cc44:	jns    0x43cc7a
  43cc46:	jae    0x43ccb5
  43cc48:	mov    ds:0x3497fd42,eax
  43cc4d:	jmp    0x43ccc0
  43cc4f:	imul   edx,DWORD PTR [eax+esi*2+0x4d446d70],0x7f8f6337
  43cc5a:	dec    esp
  43cc5b:	add    BYTE PTR [eax],al
  43cc5d:	add    BYTE PTR [edi],dh
  43cc5f:	add    al,BYTE PTR [edx]
  43cc61:	inc    edi
  43cc62:	mov    edi,ebx
  43cc64:	pop    esi
  43cc65:	outs   dx,BYTE PTR ds:[esi]
  43cc66:	arpl   WORD PTR [edx+0x60],si
  43cc69:	gs push edx
  43cc6b:	outs   dx,DWORD PTR ds:[esi]
  43cc6c:	cmp    ch,BYTE PTR [edx+0x54]
  43cc6f:	int    0x5e
  43cc71:	imul   edx,DWORD PTR [edx-0x47],0x6f
  43cc75:	add    BYTE PTR [edi],dh
  43cc77:	add    al,BYTE PTR ss:[edi+0x59]
  43cc7b:	mov    edi,0xc2536e5e
  43cc80:	pusha  
  43cc81:	gs push edx
  43cc83:	scas   eax,DWORD PTR es:[edi]
  43cc84:	aas    
  43cc85:	arpl   WORD PTR [ebp*1+0x29126b5f],dx
  43cc8c:	jo     0x43cc8e
  43cc8e:	aaa    
  43cc8f:	push   edi
  43cc90:	add    ch,BYTE PTR [esp-0x1]
  43cc94:	outs   dx,BYTE PTR ds:[esi]
  43cc95:	pop    ebp
  43cc96:	and    cl,BYTE PTR [ebx]
  43cc98:	push   esi
  43cc99:	aas    
  43cc9a:	aaa    
  43cc9b:	rol    BYTE PTR [eax],cl
  43cc9d:	push   esp
  43cc9e:	adc    ebp,DWORD PTR [esi+0x44]
  43cca1:	arpl   WORD PTR [ebx],ax
  43cca3:	inc    ecx
  43cca4:	pop    esi
  43cca5:	ins    BYTE PTR es:[edi],dx
  43cca6:	jmp    0x593f:0x33c7fcf7
  43ccad:	ins    DWORD PTR es:[edi],dx
  43ccae:	add    al,0x34
  43ccb0:	add    eax,0x6130570
  43ccb5:	jno    0x43cc8b
  43ccb7:	xor    ebp,DWORD PTR [edx+0x1c0ee300]
  43ccbd:	pop    ecx
  43ccbe:	fcomp  DWORD PTR [ecx]
  43ccc0:	or     DWORD PTR [eax+0x0],esi
  43ccc3:	add    ah,dl
  43ccc5:	add    edi,esp
  43ccc7:	pop    edx
  43ccc8:	xchg   edx,eax
  43ccc9:	psubq  mm6,QWORD PTR [esi+0x37]
  43cccd:	xor    al,0xe5
  43cccf:	push   es
  43ccd0:	outs   dx,BYTE PTR ds:[esi]
  43ccd1:	and    al,0xc5
  43ccd3:	pop    ecx
  43ccd4:	ins    BYTE PTR es:[edi],dx
  43ccd5:	pop    ds
  43ccd6:	into   
  43ccd7:	pusha  
  43ccd8:	pop    DWORD PTR [ecx]
  43ccda:	jmp    0x724f:0xaf300303
  43cce1:	icebp  
  43cce2:	les    ebp,FWORD PTR [edi+0x38]
  43cce5:	adc    eax,0xf655cae
  43ccea:	stos   DWORD PTR es:[edi],eax
  43cceb:	pop    edx
  43ccec:	pop    ebp
  43cced:	and    eax,0x55457b7
  43ccf2:	test   DWORD PTR [esi+0x4a],esi
  43ccf5:	sbb    eax,DWORD PTR [edi-0x15ef87a7]
  43ccfb:	add    edx,DWORD PTR [eax+0x4b609f35]
  43cd01:	add    cl,BYTE PTR [edi+0x7d174457]
  43cd07:	cmp    DWORD PTR [eax],edx
  43cd09:	pop    ss
  43cd0a:	test   DWORD PTR [ecx+0x1e],eax
  43cd0d:	es nop
  43cd0f:	pop    edx
  43cd10:	adc    ebx,DWORD PTR [edi]
  43cd12:	dec    ebp
  43cd13:	popa   
  43cd14:	in     al,dx
  43cd15:	sbb    BYTE PTR [ebp+0x5a],cl
  43cd18:	or     eax,DWORD PTR [edi+edi*1]
  43cd1b:	pop    ebp
  43cd1c:	sbb    eax,0x97042f20
  43cd21:	xor    ah,BYTE PTR [edi]
  43cd23:	popa   
  43cd24:	add    ebp,edi
  43cd26:	inc    ecx
  43cd27:	pop    ebp
  43cd28:	add    BYTE PTR [eax],al
  43cd2a:	jmp    0x43cd20
  43cd2c:	add    BYTE PTR [esi-0x29],al
  43cd2f:	adc    al,0x4d
  43cd31:	inc    ecx
  43cd32:	jmp    0x33512f4b
  43cd37:	call   0x1c6d:0x19f236fc
  43cd3e:	rcl    BYTE PTR [edi],cl
  43cd40:	push   edx
  43cd41:	adc    al,0xd6
  43cd43:	sbb    DWORD PTR [edx+0x2c],edi
  43cd46:	retf   
  43cd47:	xor    eax,DWORD PTR [ecx]
  43cd49:	stos   BYTE PTR es:[edi],al
  43cd4a:	cmp    esi,esi
  43cd4c:	pop    ebp
  43cd4d:	or     BYTE PTR [edi-0x66018cfc],dl
  43cd53:	adc    esi,DWORD PTR [edx+ebx*8+0x5f]
  43cd57:	adc    esp,DWORD PTR [esi-0x32]
  43cd5a:	mov    bl,BYTE PTR [edi]
  43cd5c:	add    DWORD PTR [ecx+0x8],ebx
  43cd5f:	push   es
  43cd60:	push   0xffffffdb
  43cd62:	nop
  43cd63:	and    esp,DWORD PTR [edx-0x2b]
  43cd66:	fs push ss
  43cd68:	push   0x6d0957b5
  43cd6d:	lods   al,BYTE PTR ds:[esi]
  43cd6e:	pop    esp
  43cd6f:	xor    al,0x1
  43cd71:	mov    ds:0xac46f677,al
  43cd76:	and    BYTE PTR [ecx+0x33],bl
  43cd79:	iret   
  43cd7a:	jo     0x43cd94
  43cd7c:	gs jmp 0xb9472fb6
  43cd82:	pop    ebp
  43cd83:	sbb    DWORD PTR [ebp-0x4c],ebp
  43cd86:	push   edi
  43cd87:	sbb    DWORD PTR [eax+ecx*4+0x15],esi
  43cd8b:	adc    edx,DWORD PTR [eax-0x17]
  43cd8e:	add    BYTE PTR [eax],al
  43cd90:	xor    al,0x3c
  43cd92:	add    ebx,DWORD PTR [ebx+ebx*1+0x21504f24]
  43cd99:	and    BYTE PTR [esi+0x48],ch
  43cd9c:	out    dx,eax
  43cd9d:	lock pop ebp
  43cd9f:	push   eax
  43cda0:	out    0x33,al
  43cda2:	add    DWORD PTR [edx],eax
  43cda4:	cmp    ebp,DWORD PTR [ecx+0x69]
  43cda7:	add    bh,ch
  43cda9:	sbb    eax,0x7296f45
  43cdae:	addr16 inc ecx
  43cdb0:	pop    esi
  43cdb1:	xor    esp,DWORD PTR [ecx]
  43cdb3:	add    DWORD PTR [ecx],ebx
  43cdb5:	pop    es
  43cdb6:	ins    DWORD PTR es:[edi],dx
  43cdb7:	inc    ebx
  43cdb8:	cmp    ebx,DWORD PTR [esi]
  43cdba:	outs   dx,WORD PTR ds:[esi]
  43cdbc:	sub    al,0x0
  43cdbe:	push   0x73
  43cdc0:	pop    esi
  43cdc1:	xor    esp,DWORD PTR [esi]
  43cdc3:	add    DWORD PTR [ecx],ebx
  43cdc5:	pop    es
  43cdc6:	ins    DWORD PTR es:[edi],dx
  43cdc7:	dec    ecx
  43cdc8:	sub    eax,0x40496b0d
  43cdcd:	adc    ch,BYTE PTR [edx+0x0]
  43cdd0:	fldcw  WORD PTR [edi]
  43cdd2:	cmp    eax,0x40252f72
  43cdd7:	arpl   WORD PTR [ecx],ax
  43cdd9:	or     eax,0x306b0001
  43cdde:	inc    esp
  43cddf:	js     0x43cdd8
  43cde1:	push   ss
  43cde2:	push   edx
  43cde3:	imul   eax,eax,0xbd776a06
  43cde9:	gs jns 0x43cdec
  43cdec:	mov    al,0x31
  43cdee:	inc    edx
  43cdef:	gs stos BYTE PTR es:[edi],al
  43cdf1:	jmp    FWORD PTR [edi+0x73]
  43cdf4:	add    BYTE PTR [eax],al
  43cdf6:	stos   BYTE PTR es:[edi],al
  43cdf7:	add    eax,0x16ab4d6c
  43cdfc:	imul   edi,DWORD PTR [di+0x11f],0x3632e600
  43ce05:	push   0x6f4d20af
  43ce0a:	add    DWORD PTR ds:0x329e576c,0x5cc023e
  43ce14:	bound  ebp,QWORD PTR [ecx+0x1d]
  43ce17:	pop    ss
  43ce18:	fs jb  0x43ce68
  43ce1b:	or     al,0x58
  43ce1d:	jae    0x43ce0c
  43ce1f:	repnz add BYTE PTR [eax],al
  43ce22:	aaa    
  43ce23:	es add al,0x44
  43ce26:	sbb    ch,bh
  43ce28:	inc    edx
  43ce29:	outs   dx,BYTE PTR ds:[esi]
  43ce2a:	push   ss
  43ce2b:	add    BYTE PTR [eax+0x50],bl
  43ce2e:	in     eax,0xf5
  43ce30:	pop    ebp
  43ce31:	push   ecx
  43ce32:	aaa    
  43ce33:	inc    edx
  43ce34:	add    al,0x41
  43ce36:	fisub  DWORD PTR [eax+0x30]
  43ce39:	arpl   sp,sp
  43ce3b:	dec    ecx
  43ce3c:	fs popa 
  43ce3e:	fisubr DWORD PTR [edx+ebx*2+0x6d]
  43ce42:	aaa    
  43ce43:	and    DWORD PTR [esp+eax*2],eax
  43ce46:	fisubr DWORD PTR [esi]
  43ce48:	push   edx
  43ce49:	addr16 leave 
  43ce4b:	cmp    BYTE PTR [edx+0x71],bl
  43ce4e:	xchg   DWORD PTR [ecx-0x647fa2a8],ebp
  43ce54:	add    ebx,DWORD PTR [edx]
  43ce56:	aaa    
  43ce57:	pop    edx
  43ce58:	fs ins BYTE PTR es:[edi],dx
  43ce5a:	add    BYTE PTR [eax],al
  43ce5c:	mov    esp,esi
  43ce5e:	pop    edx
  43ce5f:	push   0xffffff9b
  43ce61:	jbe    0x43ced3
  43ce63:	push   eax
  43ce64:	test   DWORD PTR [esi+0x5c],ebp
  43ce67:	push   ecx
  43ce68:	aaa    
  43ce69:	cwde   
  43ce6a:	add    edi,DWORD PTR ds:0x514f7f96
  43ce70:	pop    esi
  43ce71:	jne    0x43ceca
  43ce73:	imul   esp,DWORD PTR [eax-0x35],0xdc54696d
  43ce7a:	add    ecx,DWORD PTR [edx+0x35]
  43ce7d:	jmp    0xcaa22fd8
  43ce82:	arpl   WORD PTR [di-0x26],ax
  43ce86:	dec    edi
  43ce87:	pop    edi
  43ce88:	inc    esp
  43ce89:	retf   0x50
  43ce8c:	aaa    
  43ce8d:	mov    bh,0xfd
  43ce8f:	dec    ebp
  43ce90:	sbb    dh,BYTE PTR [edi-0x47dba0aa]
  43ce96:	cmp    al,0x5f
  43ce98:	daa    
  43ce99:	pop    ds
  43ce9a:	outs   dx,BYTE PTR ds:[si]
  43ce9c:	adc    dh,BYTE PTR [edx+ebp*8]
  43ce9f:	add    ebp,DWORD PTR [edi+0x15611e34]
  43cea5:	mul    DWORD PTR ds:0x411c423d
  43ceab:	pop    eax
  43ceac:	adc    eax,DWORD PTR [esp+edi*1]
  43ceaf:	push   edi
  43ceb0:	adc    dh,bl
  43ceb2:	jmp    0x267891ba
  43ceb7:	popa   
  43ceb8:	aad    0xef
  43ceba:	xor    eax,0xf22075f
  43cebf:	arpl   WORD PTR [eax],ax
  43cec1:	add    BYTE PTR [eax],dl
  43cec3:	xor    al,0x92
  43cec5:	add    bh,dl
  43cec7:	sbb    al,0x1
  43cec9:	jo     0x43cead
  43cecb:	sbb    ebx,DWORD PTR [esi]
  43cecd:	popa   
  43cece:	retf   0xf618
  43ced1:	push   esi
  43ced2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ced3:	xor    al,0x61
  43ced5:	add    al,0x73
  43ced7:	invd   
  43ced9:	cmp    DWORD PTR [ebx-0x5],edi
  43cedc:	sub    bl,BYTE PTR [eax+edx*4+0x18]
  43cee0:	(bad)  
  43cee1:	push   ebx
  43cee2:	mov    eax,ds:0x374ecb15
  43cee7:	xor    al,0x73
  43cee9:	add    al,0x7b
  43ceeb:	xadd   BYTE PTR [esi-0x70],cl
  43ceef:	push   ss
  43cef0:	(bad)  
  43cef1:	push   esi
  43cef2:	data16 add al,0xbc
  43cef5:	push   esi
  43cef6:	mov    dh,bl
  43cef8:	jmp    0x9c762300
  43cefd:	pusha  
  43cefe:	dec    ebx
  43ceff:	jns    0xab342377
  43cf05:	add    ebx,DWORD PTR [ecx]
  43cf07:	xor    bh,BYTE PTR [edx-0x6ae6aba0]
  43cf0d:	pusha  
  43cf0e:	dec    edx
  43cf0f:	and    DWORD PTR [ecx-0x160ceba2],ecx
  43cf15:	add    ecx,DWORD PTR [ecx+0x33]
  43cf18:	add    DWORD PTR [esi-0x55c2dfe9],ebp
  43cf1e:	imul   DWORD PTR [ebx]
  43cf20:	add    DWORD PTR [edx],ebx
  43cf22:	xor    eax,0x445e04
  43cf27:	add    ah,ch
  43cf29:	clc    
  43cf2a:	pop    ebp
  43cf2b:	pop    edx
  43cf2c:	add    al,0x5
  43cf2e:	pusha  
  43cf2f:	inc    esp
  43cf30:	call   0x3c22d068
  43cf35:	repz pop ebp
  43cf37:	xor    eax,0x396a17f4
  43cf3c:	aad    0x1a
  43cf3e:	bound  edi,QWORD PTR [ebx]
  43cf40:	xlat   BYTE PTR ds:[ebx]
  43cf41:	out    dx,eax
  43cf42:	popa   
  43cf43:	sbb    eax,0x730133da
  43cf48:	neg    DWORD PTR ss:[ebp+0x1d]
  43cf4c:	hlt    
  43cf4d:	and    BYTE PTR [ebx+0x1a],dh
  43cf50:	loopne 0x43cf67
  43cf52:	push   ecx
  43cf53:	push   ss
  43cf54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cf55:	xor    al,0x1
  43cf57:	sub    al,0x35
  43cf59:	repnz pop ebp
  43cf5b:	push   cs
  43cf5c:	adc    BYTE PTR [ecx],0x6d
  43cf5f:	add    al,0xa5
  43cf61:	popa   
  43cf62:	gs enter 0x1185,0x3e
  43cf67:	loope  0x43cfe2
  43cf69:	xor    al,0x1
  43cf6b:	push   ebp
  43cf6c:	or     BYTE PTR ss:[ebx-0x38],dh
  43cf70:	bound  edx,QWORD PTR [ecx]
  43cf72:	gs enter 0x1760,0x46
  43cf77:	les    esp,FWORD PTR [ebp+0x11]
  43cf7a:	(bad)  
  43cf7b:	into   
  43cf7c:	push   edi
  43cf7d:	xor    al,0x1
  43cf7f:	loope  0x43cfb4
  43cf81:	cmc    
  43cf82:	pop    ebp
  43cf83:	popf   
  43cf84:	jne    0x43cf89
  43cf86:	jno    0x43cf1d
  43cf88:	inc    edi
  43cf89:	adc    bl,BYTE PTR [esi-0x17]
  43cf8c:	add    BYTE PTR [eax],al
  43cf8e:	xor    al,0x43
  43cf90:	add    ah,BYTE PTR [esi+0x3d2857]
  43cf96:	fnsave [edi]
  43cf98:	add    BYTE PTR [ecx],0xd1
  43cf9b:	adc    al,0x6d
  43cf9d:	push   ebp
  43cf9e:	push   ds
  43cf9f:	add    ebx,DWORD PTR [eax+0x74]
  43cfa2:	mov    bl,0x5
  43cfa4:	fs arpl dx,si
  43cfa7:	aaa    
  43cfa8:	or     eax,DWORD PTR [eax]
  43cfaa:	pop    esp
  43cfab:	add    esp,DWORD PTR [edx+0x69]
  43cfae:	clc    
  43cfaf:	pop    es
  43cfb0:	pop    eax
  43cfb1:	imul   edi,DWORD PTR [eax],0x44000124
  43cfb7:	ss dec edx
  43cfb9:	jo     0x43cfae
  43cfbb:	or     DWORD PTR [eax+0x6e],eax
  43cfbe:	push   ds
  43cfbf:	adc    ebp,DWORD PTR [ebp+0x44]
  43cfc2:	repz and al,0x5e
  43cfc5:	je     0x43cff0
  43cfc7:	sub    BYTE PTR [ecx],al
  43cfc9:	add    al,al
  43cfcb:	aaa    
  43cfcc:	cmp    eax,0x67623065
  43cfd1:	popa   
  43cfd2:	cmp    eax,DWORD PTR [edx]
  43cfd4:	push   ecx
  43cfd5:	jb     0x43d020
  43cfd7:	adc    eax,0x38830038
  43cfdc:	cmp    eax,0x64f43065
  43cfe1:	addr16 ds es push 0x63
  43cfe6:	shl    DWORD PTR [esi],1
  43cfe8:	add    DWORD PTR [edx],0x436d01cd
  43cfee:	out    dx,eax
  43cfef:	es ins DWORD PTR es:[edi],dx
  43cff1:	jne    0x43cff3
  43cff3:	add    ah,bl
  43cff5:	add    DWORD PTR [ecx],eax
  43cff7:	add    BYTE PTR [edi+esi*1-0x105d9abe],cl
  43cffe:	pop    edi
  43cfff:	outs   dx,BYTE PTR ds:[esi]
  43d000:	repnz pop es
  43d002:	jb     0x43d048
  43d004:	lea    esi,[esi]
  43d006:	inc    ebp
  43d007:	add    cl,BYTE PTR [ecx+eax*1+0x12ad6962]
  43d00e:	fs jb  0x43d048
  43d011:	into   
  43d012:	dec    edi
  43d013:	pop    edi
  43d014:	inc    esp
  43d015:	mov    esi,0x8cf67836
  43d01a:	add    ebx,DWORD PTR [ebx+0x36]
  43d01d:	ficom  DWORD PTR [esi+0x74]
  43d020:	repnz scas eax,DWORD PTR es:[edi]
  43d022:	jo     0x43d091
  43d024:	push   ss
  43d025:	mov    edx,0x25375156
  43d02a:	add    eax,DWORD PTR [ecx+0x12]
  43d02d:	or     DWORD PTR [eax+0x70],ecx
  43d030:	sbb    ebp,esp
  43d032:	jo     0x43d097
  43d034:	in     eax,0xf9
  43d036:	dec    esi
  43d037:	add    BYTE PTR [edi],dh
  43d039:	push   esp
  43d03a:	add    al,0x41
  43d03c:	shr    BYTE PTR [eax+0x30],cl
  43d03f:	arpl   sp,sp
  43d041:	pop    ebp
  43d042:	fs popa 
  43d044:	ror    BYTE PTR [ebx-0x3],cl
  43d047:	(bad)  [edi]
  43d049:	push   eax
  43d04a:	dec    edi
  43d04b:	fs out 0x2b,eax
  43d04e:	pop    esp
  43d04f:	push   0xffffffcb
  43d051:	mov    WORD PTR [ebx],es
  43d053:	sub    dh,BYTE PTR [edi]
  43d055:	dec    esi
  43d056:	push   ebp
  43d057:	pop    edi
  43d058:	add    BYTE PTR [eax],al
  43d05a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d05b:	addr16 dec esi
  43d05d:	jno    0x43cff1
  43d05f:	popf   
  43d060:	inc    esp
  43d061:	add    BYTE PTR [edi],dh
  43d063:	push   ds
  43d064:	add    dl,BYTE PTR [eax+ecx*4+0x48]
  43d068:	dec    edi
  43d069:	addr16 xchg esp,eax
  43d06b:	mov    dl,BYTE PTR [edi+0x63]
  43d06e:	aaa    
  43d06f:	int    0x2
  43d071:	inc    ecx
  43d072:	call   0x4c6d:0x7e63387f
  43d079:	pop    edi
  43d07a:	outs   dx,DWORD PTR gs:[esi]
  43d07c:	push   eax
  43d07d:	je     0x43d0d5
  43d07f:	out    0x56,eax
  43d081:	add    BYTE PTR [edi],dh
  43d083:	sbb    DWORD PTR [ebx],eax
  43d085:	inc    ecx
  43d086:	push   edx
  43d087:	out    0x44,eax
  43d089:	addr16 popa 
  43d08b:	xor    al,0x86
  43d08d:	push   esp
  43d08e:	inc    esi
  43d08f:	xor    al,0xa3
  43d091:	add    DWORD PTR [edx+0x17],esi
  43d094:	sbb    BYTE PTR [edi+0x6c],0x17
  43d098:	fwait
  43d099:	jo     0x43d0ab
  43d09b:	sbb    DWORD PTR [ebp+0x7d0f104f],eax
  43d0a1:	push   esp
  43d0a2:	and    al,0x28
  43d0a4:	xchg   edi,eax
  43d0a5:	add    esi,DWORD PTR [ebx+0x36]
  43d0a8:	fwait
  43d0a9:	pop    esi
  43d0aa:	or     ecx,DWORD PTR [ecx]
  43d0ac:	push   ecx
  43d0ad:	jb     0x43d0c2
  43d0af:	adc    DWORD PTR [edi+0x50],ecx
  43d0b2:	push   cs
  43d0b3:	adc    al,BYTE PTR [edi+0x3b]
  43d0b6:	aaa    
  43d0b7:	xor    al,0x70
  43d0b9:	add    eax,0x3b3616f6
  43d0be:	add    BYTE PTR [eax],al
  43d0c0:	rcl    BYTE PTR [ecx],1
  43d0c2:	ds jae 0x43d0ab
  43d0c5:	out    dx,eax
  43d0c6:	ds jb  0x43d09f
  43d0c9:	or     dl,ch
  43d0cb:	add    esp,DWORD PTR [ebx]
  43d0cd:	xor    eax,0x17dd6d37
  43d0d2:	pop    es
  43d0d3:	pop    ebx
  43d0d4:	cmc    
  43d0d5:	and    eax,0x10e770ff
  43d0da:	add    DWORD PTR [edx-0x55],esi
  43d0dd:	xor    al,0x8f
  43d0df:	add    eax,0x6809117b
  43d0e4:	js     0x43d0f5
  43d0e6:	or     DWORD PTR [ebx-0x6c],ebp
  43d0e9:	or     edx,ebp
  43d0eb:	add    esi,DWORD PTR [edx+esi*1+0x88368a7]
  43d0f2:	(bad)  
  43d0f3:	push   ebx
  43d0f4:	or     ax,ax
  43d0f7:	mov    gs,WORD PTR [bx+di]
  43d0fa:	jmp    0x6368:0xa7336803
  43d101:	add    eax,0x105368d2
  43d106:	add    DWORD PTR [esi-0x41a2f1b5],ebx
  43d10c:	ins    DWORD PTR es:[edi],dx
  43d10d:	xor    al,0x1
  43d10f:	dec    ebp
  43d110:	xor    dh,bl
  43d112:	pop    ebp
  43d113:	xchg   ebp,eax
  43d114:	std    
  43d115:	sbb    BYTE PTR [edi-0x73],ah
  43d118:	inc    ebp
  43d119:	and    ecx,DWORD PTR [ebp-0x7f]
  43d11c:	or     dl,BYTE PTR ds:0x12648d62
  43d122:	push   0xf00008a
  43d127:	pcmpeqb mm4,QWORD PTR [eax+0x12013410]
  43d12e:	cmp    esi,ebp
  43d130:	dec    bp
  43d132:	out    0x14,al
  43d134:	addr16 push esp
  43d136:	cmp    esp,DWORD PTR [eax]
  43d138:	add    edi,DWORD PTR [edx]
  43d13a:	push   cs
  43d13b:	push   cs
  43d13c:	pop    ebp
  43d13d:	sbb    al,0xde
  43d13f:	push   cs
  43d140:	je     0x43d18a
  43d142:	fcom   QWORD PTR [eax+edx*2]
  43d145:	jmp    0x2e45887e
  43d14a:	into   
  43d14b:	daa    
  43d14c:	dec    esi
  43d14d:	cmp    bl,dh
  43d14f:	adc    DWORD PTR [eax+0xb],ecx
  43d152:	fst    DWORD PTR [esp+eiz*2]
  43d155:	adc    eax,0x65f0df2
  43d15a:	loope  0x43d168
  43d15c:	bound  edx,QWORD PTR ds:0x1e670da2
  43d162:	xor    edx,esi
  43d164:	add    DWORD PTR [ecx],esi
  43d166:	xchg   edx,eax
  43d167:	adc    BYTE PTR [edx-0x3],ch
  43d16a:	(bad)  
  43d16b:	jmp    0x43d1ca
  43d16d:	jmp    FWORD PTR [edi-0x9]
  43d170:	ins    BYTE PTR es:[edi],dx
  43d171:	int3   
  43d172:	xchg   DWORD PTR [ecx+eax*1],esi
  43d175:	and    BYTE PTR [ecx],bh
  43d177:	add    al,0x68
  43d179:	fisub  DWORD PTR [eax+0x8]
  43d17c:	imul   ebx,ebx,0x5cff5f
  43d182:	mov    ds:0xef73660c,eax
  43d187:	or     ah,BYTE PTR [edi+edx*2+0x0]
  43d18b:	add    dh,cl
  43d18d:	xor    ecx,DWORD PTR [eax+0x1]
  43d190:	cdq    
  43d191:	or     al,0x6d
  43d193:	dec    ebp
  43d194:	mov    ebx,0xaa497425
  43d199:	or     al,0x6c
  43d19b:	inc    ebx
  43d19c:	mov    cl,0xfc
  43d19e:	push   0x74
  43d1a0:	sahf   
  43d1a1:	xor    edx,DWORD PTR [ebx+0x1]
  43d1a4:	(bad)  [ebp*2+0x7425bb4d]
  43d1ab:	push   ebx
  43d1ac:	sbb    bl,BYTE PTR [eax]
  43d1ae:	ins    DWORD PTR es:[edi],dx
  43d1af:	gs sahf 
  43d1b1:	xor    eax,DWORD PTR [edi]
  43d1b3:	add    DWORD PTR [ecx+0x17],ebx
  43d1b6:	ins    DWORD PTR es:[edi],dx
  43d1b7:	inc    ebx
  43d1b8:	repnz adc ah,BYTE PTR [esi+0x73]
  43d1bc:	push   eax
  43d1bd:	adc    ebp,DWORD PTR [ebp+eiz*2+0x29]
  43d1c1:	cmp    ch,ah
  43d1c3:	add    cl,BYTE PTR [ebp-0x5]
  43d1c6:	gs je  0x43d1c4
  43d1c9:	push   cs
  43d1ca:	push   ecx
  43d1cb:	popa   
  43d1cc:	sbb    al,0x13
  43d1ce:	ins    BYTE PTR es:[edi],dx
  43d1cf:	or     dl,BYTE PTR gs:[edi]
  43d1d2:	addr16 jae 0x43d1dc
  43d1d5:	and    ah,BYTE PTR [ebx+0x6f]
  43d1d8:	or     DWORD PTR [eax],edi
  43d1da:	repnz add bh,dl
  43d1dd:	add    eax,0x68356358
  43d1e2:	push   0x70
  43d1e4:	sub    eax,DWORD PTR [ebx]
  43d1e6:	dec    esp
  43d1e7:	xor    BYTE PTR gs:[edi],al
  43d1ea:	inc    esp
  43d1eb:	js     0x43d1fb
  43d1ed:	xor    edx,DWORD PTR [ecx+eax*1+0x0]
  43d1f1:	add    BYTE PTR [ecx+0x17],bl
  43d1f4:	ins    DWORD PTR es:[edi],dx
  43d1f5:	dec    ebp
  43d1f6:	sti    
  43d1f7:	and    al,0x74
  43d1f9:	dec    ecx
  43d1fa:	jmp    0x5c70:0x37526c15
  43d201:	je     0x43d23a
  43d203:	rol    BYTE PTR [edx],cl
  43d205:	inc    ecx
  43d206:	push   edx
  43d207:	loope  0x43d24f
  43d209:	arpl   WORD PTR [ecx-0x18],dx
  43d20c:	add    eax,DWORD PTR [esi]
  43d20e:	xor    eax,0x4a6a5ed8
  43d213:	aam    0x4f
  43d215:	arpl   WORD PTR [edx-0x31],bx
  43d218:	dec    ebp
  43d219:	imul   edx,DWORD PTR [edx-0x23],0xc1496770
  43d220:	add    ebp,DWORD PTR [eax]
  43d222:	xor    eax,0x196353be
  43d227:	rcr    DWORD PTR [esi+0x6d],1
  43d22a:	or     al,0x29
  43d22c:	jno    0x43d29e
  43d22e:	add    BYTE PTR [ebp-0x29c989fd],cl
  43d234:	pop    esi
  43d235:	je     0x43d21b
  43d237:	call   FWORD PTR [esi+0x4b]
  43d23a:	sbb    ch,bh
  43d23c:	dec    edi
  43d23d:	add    BYTE PTR [edi],dh
  43d23f:	pop    ds
  43d240:	dec    BYTE PTR [edx+ebx*8+0x8]
  43d244:	inc    esi
  43d245:	arpl   si,bp
  43d247:	jmp    0x742d:0xf8e55f71
  43d24e:	(bad)  
  43d24f:	pusha  
  43d250:	pusha  
  43d251:	add    BYTE PTR [edi],dh
  43d253:	cmp    eax,DWORD PTR [ecx+eax*2]
  43d256:	add    BYTE PTR [eax],al
  43d258:	rol    BYTE PTR [eax+0x48],cl
  43d25b:	arpl   cx,dx
  43d25d:	inc    edi
  43d25e:	dec    esp
  43d25f:	je     0x43d233
  43d261:	aaa    
  43d262:	dec    esp
  43d263:	inc    esp
  43d264:	aaa    
  43d265:	or     DWORD PTR [ebx],eax
  43d267:	inc    ecx
  43d268:	xchg   edx,eax
  43d269:	lahf   
  43d26a:	das    
  43d26b:	push   0x646438a5
  43d270:	jae    0x43d2a2
  43d272:	dec    esi
  43d273:	mov    ebx,DWORD PTR gs:[esi+0x34370053]
  43d27a:	retf   
  43d27b:	add    eax,0x6abf1771
  43d280:	mov    ch,BYTE PTR [eax]
  43d282:	lds    edx,FWORD PTR [ebp-0x7a]
  43d285:	or     edi,DWORD PTR [eax-0x52daa199]
  43d28b:	push   dx
  43d28d:	and    ecx,ecx
  43d28f:	push   0x3ea0554
  43d294:	sbb    al,0x32
  43d296:	xchg   edi,eax
  43d297:	push   ebx
  43d298:	push   esp
  43d299:	push   cs
  43d29a:	mov    bh,0x6a
  43d29c:	dec    ebp
  43d29d:	sbb    BYTE PTR [edi-0x76d795a8],al
  43d2a3:	push   edi
  43d2a4:	sbb    BYTE PTR ds:0x34373878,cl
  43d2aa:	inc    esp
  43d2ab:	add    eax,0x376e16f2
  43d2b0:	mov    cr0,ebp
  43d2b3:	bound  ebx,QWORD PTR [ebx]
  43d2b5:	clc    
  43d2b6:	jl     0x43d30c
  43d2b8:	adc    ch,BYTE PTR [eax]
  43d2ba:	dec    edi
  43d2bb:	push   esp
  43d2bc:	add    BYTE PTR [eax],al
  43d2be:	aaa    
  43d2bf:	xor    al,0x34
  43d2c1:	add    al,0x3a
  43d2c3:	adc    BYTE PTR [edi],bh
  43d2c5:	push   ebx
  43d2c6:	aam    0xf7
  43d2c8:	cmp    al,0x53
  43d2ca:	shl    BYTE PTR [edi],cl
  43d2cc:	dec    edi
  43d2cd:	push   esp
  43d2ce:	aaa    
  43d2cf:	xor    al,0x52
  43d2d1:	add    eax,0x343616f6
  43d2d6:	loope  0x43d2e4
  43d2d8:	dec    ebx
  43d2d9:	imul   ebx,edx,0xcd6d3720
  43d2df:	pop    ss
  43d2e0:	pop    es
  43d2e1:	push   edi
  43d2e2:	jmp    0xf80d:0x98580927
  43d2e9:	add    esp,DWORD PTR [edi-0x6badd4cc]
  43d2ef:	adc    ebp,esi
  43d2f1:	push   0x7010b86
  43d2f6:	lahf   
  43d2f7:	or     esi,DWORD PTR [eax+0x1a]
  43d2fa:	outs   dx,DWORD PTR ds:[esi]
  43d2fb:	std    
  43d2fc:	ins    BYTE PTR es:[edi],dx
  43d2fd:	rcl    BYTE PTR [ecx+0x34e9500a],1
  43d303:	jmp    0xc474:0xb60aa00
  43d30a:	and    DWORD PTR ds:0x2351cd67,edx
  43d310:	push   esp
  43d311:	mov    ch,0x53
  43d313:	sub    BYTE PTR [edx-0x3a],ch
  43d316:	bound  esi,QWORD PTR [ecx+eax*1]
  43d319:	xor    DWORD PTR ds:0x49d5def,0xe
  43d320:	push   0x4f00008a
  43d325:	pcmpeqb mm7,QWORD PTR [esi+0x7e5d0a23]
  43d32c:	add    edi,ebp
  43d32e:	ins    BYTE PTR es:[edi],dx
  43d32f:	mov    BYTE PTR [eax],cl
  43d331:	adc    eax,0xfa348f68
  43d336:	add    BYTE PTR [edx+0x756210e6],ch
  43d33c:	pop    ds
  43d33d:	clc    
  43d33e:	pop    ebp
  43d33f:	pop    edx
  43d340:	or     al,0x28
  43d342:	push   0x1344059
  43d347:	mov    ebp,0x3b73f53b
  43d34c:	fdivp  st(6),st
  43d34e:	ins    BYTE PTR es:[edi],dx
  43d34f:	sub    al,0xe6
  43d351:	and    ebp,DWORD PTR [ebp+0x40]
  43d354:	xor    esi,DWORD PTR ds:0x23da2403
  43d35a:	push   eax
  43d35b:	inc    eax
  43d35c:	fst    DWORD PTR [edi]
  43d35e:	push   0x6a0b0b1e
  43d363:	pandn  mm1,QWORD PTR [esi]
  43d366:	add    DWORD PTR [edx+0x3673f33b],esi
  43d36c:	call   0x103:0x49005d0e
  43d373:	add    al,dl
  43d375:	xor    eax,0x63126546
  43d37a:	pusha  
  43d37b:	outs   dx,BYTE PTR ds:[esi]
  43d37c:	xor    cl,BYTE PTR [ebx]
  43d37e:	jb     0x43d3d0
  43d380:	jmp    0x1243d48b
  43d385:	xor    DWORD PTR [edx+0x65],eax
  43d388:	add    BYTE PTR [eax],al
  43d38a:	adc    dh,cl
  43d38c:	push   0x63
  43d38e:	repz push es
  43d390:	ins    DWORD PTR es:[edi],dx
  43d391:	outs   dx,DWORD PTR ds:[esi]
  43d392:	pushf  
  43d393:	aaa    
  43d394:	adc    DWORD PTR [ecx],eax
  43d396:	xchg   ecx,eax
  43d397:	or     al,0x6d
  43d399:	inc    ebx
  43d39a:	cli    
  43d39b:	adc    BYTE PTR [esi+0x73],ah
  43d39e:	stos   BYTE PTR es:[edi],al
  43d39f:	or     ch,BYTE PTR [ebx+0x67]
  43d3a2:	xor    DWORD PTR [edi],0xc91018d
  43d3a8:	ins    DWORD PTR es:[edi],dx
  43d3a9:	push   edi
  43d3aa:	mov    bh,0x9
  43d3ac:	pop    ebp
  43d3ad:	outs   dx,DWORD PTR ds:[esi]
  43d3ae:	shr    eax,0x6a
  43d3b1:	leavew 
  43d3b3:	aaa    
  43d3b4:	pop    ebp
  43d3b5:	add    ecx,edx
  43d3b7:	or     al,0x6d
  43d3b9:	push   eax
  43d3ba:	mov    edi,0x26e6405
  43d3bf:	aaa    
  43d3c0:	xchg   ebp,eax
  43d3c1:	add    DWORD PTR [ecx+0x13],edx
  43d3c4:	ins    DWORD PTR es:[edi],dx
  43d3c5:	push   edi
  43d3c6:	out    0x9,eax
  43d3c8:	pop    ebp
  43d3c9:	outs   dx,DWORD PTR ds:[esi]
  43d3ca:	adc    DWORD PTR [esi+0x64],esp
  43d3cd:	arpl   WORD PTR [edx],ax
  43d3cf:	xor    BYTE PTR [edi],ch
  43d3d1:	add    bh,BYTE PTR [esi]
  43d3d3:	push   es
  43d3d4:	pusha  
  43d3d5:	outs   dx,BYTE PTR ds:[esi]
  43d3d6:	and    ah,BYTE PTR [ecx+0x60]
  43d3d9:	outs   dx,BYTE PTR ds:[esi]
  43d3da:	add    cl,BYTE PTR [ecx]
  43d3dc:	jb     0x43d3de
  43d3de:	lea    esi,[eax]
  43d3e0:	inc    esp
  43d3e1:	jno    0x43d406
  43d3e3:	pop    ss
  43d3e4:	gs push edx
  43d3e6:	xor    edx,DWORD PTR ds:0x37006d
  43d3ec:	add    al,0x47
  43d3ee:	add    BYTE PTR [eax],al
  43d3f0:	cdq    
  43d3f1:	inc    ecx
  43d3f2:	pusha  
  43d3f3:	outs   dx,BYTE PTR ds:[esi]
  43d3f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d3f5:	sub    BYTE PTR [edx+0x74],ah
  43d3f8:	test   DWORD PTR [eax],esi
  43d3fa:	bound  esi,QWORD PTR [edi+esi*1-0x32]
  43d3fe:	cld    
  43d3ff:	inc    ebx
  43d400:	test   DWORD PTR [esi+ecx*2],ebp
  43d403:	inc    ebx
  43d404:	fwait
  43d405:	push   0x5e
  43d407:	add    BYTE PTR [edi],dh
  43d409:	add    edi,ebp
  43d40b:	inc    ecx
  43d40c:	pop    esi
  43d40d:	jno    0x43d476
  43d40f:	dec    esi
  43d410:	push   edx
  43d411:	outs   dx,BYTE PTR ds:[esi]
  43d412:	dec    edi
  43d413:	add    BYTE PTR [edi],dh
  43d415:	ret    0x43fc
  43d418:	dec    esi
  43d419:	ficom  WORD PTR [ebx+0x5f]
  43d41c:	dec    ebx
  43d41d:	outs   dx,BYTE PTR ds:[esi]
  43d41e:	imul   ecx,DWORD PTR [ebx+0x52],0xffffffde
  43d422:	push   eax
  43d423:	pop    edi
  43d424:	pop    eax
  43d425:	test   al,0x2c
  43d427:	add    BYTE PTR [edi],dh
  43d429:	cdq    
  43d42a:	add    DWORD PTR [ebx+0x24],ecx
  43d42d:	stos   BYTE PTR es:[edi],al
  43d42e:	sub    al,0x5f
  43d430:	push   ds
  43d431:	sar    DWORD PTR ds:0x4ee02569,0x6c
  43d438:	and    eax,esp
  43d43a:	push   ebx
  43d43b:	ins    BYTE PTR es:[edi],dx
  43d43c:	sbb    dl,dl
  43d43e:	popa   
  43d43f:	data16 adc ch,BYTE PTR [esi+0x58376d4f]
  43d446:	xor    al,BYTE PTR [ebx-0x1b]
  43d449:	cmp    eax,0xf0db2a13
  43d44e:	jo     0x43d450
  43d450:	aaa    
  43d451:	call   0x441b59
  43d456:	rol    DWORD PTR [ebx],1
  43d458:	pop    ecx
  43d459:	addr16 (bad) 
  43d45b:	pusha  
  43d45c:	pusha  
  43d45d:	dec    ebp
  43d45e:	into   
  43d45f:	pop    ebp
  43d460:	pop    ecx
  43d461:	arpl   dx,bx
  43d463:	cmp    eax,0x33cb7365
  43d468:	push   es
  43d469:	ins    DWORD PTR es:[edi],dx
  43d46a:	(bad)  
  43d46b:	or     DWORD PTR ds:0xa634865c,ebx
  43d471:	add    ebp,DWORD PTR [edx+0x26]
  43d474:	adc    DWORD PTR [ebx+ebp*4-0xf],edx
  43d478:	add    al,0x58
  43d47a:	outs   dx,DWORD PTR ds:[esi]
  43d47b:	adc    edi,ebx
  43d47d:	imul   esp,DWORD PTR [edi+0x13],0xfffffffc
  43d481:	bound  ebx,QWORD PTR [esp+esi*1+0x26420339]
  43d488:	loope  0x43d4dd
  43d48a:	xor    ebx,0xffffffca
  43d48d:	push   edx
  43d48e:	fs or  ebx,esp
  43d491:	data16 sub cl,BYTE PTR [ecx]
  43d494:	mov    eax,0xb61c5457
  43d499:	xor    al,0x37
  43d49b:	xor    al,0x33
  43d49d:	add    edx,DWORD PTR [edx]
  43d49f:	es mov cl,0x53
  43d4a2:	inc    ebx
  43d4a3:	push   es
  43d4a4:	mov    ebp,0x9b13546f
  43d4a9:	data16 cli 
  43d4ab:	or     BYTE PTR [eax-0x69e3eba9],cl
  43d4b1:	add    ebx,edx
  43d4b3:	xor    al,0xab
  43d4b5:	push   ecx
  43d4b6:	sub    BYTE PTR [esi+esi*2],ah
  43d4b9:	inc    eax
  43d4ba:	add    BYTE PTR [eax],al
  43d4bc:	or     DWORD PTR [edi],ecx
  43d4be:	mov    DWORD PTR [edi+0x14],edx
  43d4c1:	in     al,dx
  43d4c2:	mov    BYTE PTR [eax+0x1f],dl
  43d4c5:	xor    al,0x30
  43d4c7:	add    eax,DWORD PTR [edx+0x26]
  43d4ca:	popa   
  43d4cb:	push   esp
  43d4cc:	add    esi,eax
  43d4ce:	cmp    al,0x57
  43d4d0:	jmp    0x43d4f7
  43d4d2:	aas    
  43d4d3:	pop    ebp
  43d4d4:	call   DWORD PTR [edx]
  43d4d6:	pop    ebx
  43d4d7:	ins    BYTE PTR es:[edi],dx
  43d4d8:	aaa    
  43d4d9:	xor    al,0xb2
  43d4db:	add    al,0x1a
  43d4dd:	es inc ecx
  43d4df:	push   esp
  43d4e0:	retf   
  43d4e1:	jmp    0x43d4e3
  43d4e3:	dec    eax
  43d4e4:	loopne 0x43d4f1
  43d4e6:	cmp    eax,0xf8e748
  43d4eb:	sahf   
  43d4ec:	xor    ch,bl
  43d4ee:	jo     0x43d4f4
  43d4f0:	popf   
  43d4f1:	add    al,0x73
  43d4f3:	push   es
  43d4f4:	nop
  43d4f5:	adc    eax,0xb671a74
  43d4fa:	ins    BYTE PTR es:[edi],dx
  43d4fb:	or     al,0x8d
  43d4fd:	xor    al,0x1
  43d4ff:	push   ss
  43d500:	cmp    dh,bl
  43d502:	pop    ebp
  43d503:	std    
  43d504:	inc    ecx
  43d505:	adc    DWORD PTR [ebp+0x1a],ebx
  43d508:	data16 cli 
  43d50a:	inc    ecx
  43d50b:	fsubr  QWORD PTR [eax+0xc]
  43d50e:	push   0x7a2063db
  43d513:	jmp    0x9e456d4c
  43d518:	test   BYTE PTR ds:0xa4c9d67,dl
  43d51e:	pop    esi
  43d51f:	enter  0x0,0x70
  43d523:	add    BYTE PTR [eax-0x3e],ch
  43d526:	push   edi
  43d527:	push   cs
  43d528:	add    DWORD PTR [ecx-0x62a20cc5],edx
  43d52e:	add    DWORD PTR [ecx],edx
  43d530:	pop    ebp
  43d531:	mov    edx,0x9c41fa07
  43d536:	clc    
  43d537:	or     ebp,DWORD PTR [eax-0x65]
  43d53a:	adc    esp,DWORD PTR [eax]
  43d53c:	jp     0x43d4e8
  43d53e:	or     eax,0x34756725
  43d543:	add    al,BYTE PTR [edx]
  43d545:	scas   al,BYTE PTR es:[edi]
  43d546:	pop    ss
  43d547:	and    BYTE PTR [ebp+0x7e],cl
  43d54a:	adc    DWORD PTR ds:0x160d3067,edx
  43d550:	push   0x6cf8de5b
  43d555:	inc    eax
  43d556:	fmul   QWORD PTR ds:0x573b4d01
  43d55c:	jae    0x43d55e
  43d55e:	jmp    0x43d56e
  43d560:	ins    DWORD PTR es:[edi],dx
  43d561:	gs add ch,BYTE PTR cs:[edx+0x63]
  43d566:	sti    
  43d567:	add    BYTE PTR [esi+0x41],ah
  43d56a:	std    
  43d56b:	bound  esp,QWORD PTR [esi+0x65]
  43d56e:	sbb    al,0x65
  43d570:	add    DWORD PTR [eax],eax
  43d572:	test   eax,0x316f4530
  43d577:	pop    es
  43d578:	je     0x43d5ea
  43d57a:	pop    esi
  43d57b:	(bad)  
  43d57c:	pop    edi
  43d57d:	jbe    0x43d5c6
  43d57f:	or     al,0x64
  43d581:	cmp    esp,DWORD PTR [bp+si+0x58]
  43d585:	ins    BYTE PTR es:[edi],dx
  43d586:	add    BYTE PTR [eax],al
  43d588:	or     edx,DWORD PTR ds:0x33f10052
  43d58e:	cmp    BYTE PTR [esp+eiz*8+0x4],ah
  43d592:	data16 je 0x43d53f
  43d595:	or     bl,BYTE PTR [esi+0x65]
  43d598:	lock arpl WORD PTR [edi+0x69],sp
  43d59c:	or     BYTE PTR [ecx],cl
  43d59e:	gs gs jmp 0x28443bb9
  43d5a5:	xor    esi,DWORD PTR [esi]
  43d5a7:	jb     0x43d530
  43d5a9:	add    ebp,DWORD PTR [ebp+0x56]
  43d5ac:	sti    
  43d5ad:	add    DWORD PTR [eax+0x66],esp
  43d5b0:	xchg   edi,eax
  43d5b1:	pop    esi
  43d5b2:	pusha  
  43d5b3:	rcl    BYTE PTR [bx+si],0x6d
  43d5b7:	jne    0x43d585
  43d5b9:	adc    al,0x52
  43d5bb:	add    BYTE PTR [ebx+0x33],bl
  43d5be:	ss jb  0x43d578
  43d5c1:	add    ebp,DWORD PTR [ebp+0x47]
  43d5c4:	mov    ebx,0x7653de7
  43d5c9:	arpl   WORD PTR [eax+0x72],bx
  43d5cc:	scas   eax,DWORD PTR es:[edi]
  43d5cd:	or     al,0x1
  43d5cf:	add    ah,al
  43d5d1:	xor    BYTE PTR [esi],dh
  43d5d3:	jb     0x43d5ac
  43d5d5:	jmp    FWORD PTR [ecx+ecx*2+0x37]
  43d5d9:	lock dec esp
  43d5db:	imul   esp,ebp,0xde634600
  43d5e1:	mov    WORD PTR [ebx],es
  43d5e3:	mov    cl,0x37
  43d5e5:	dec    edx
  43d5e6:	dec    edi
  43d5e7:	ja     0x43d5b0
  43d5e9:	pop    eax
  43d5ea:	inc    ecx
  43d5eb:	arpl   WORD PTR [eax],ax
  43d5ed:	add    ah,al
  43d5ef:	pusha  
  43d5f0:	dec    edi
  43d5f1:	imul   edi,DWORD PTR [esi+0x37775861],0xa447040e
  43d5fb:	push   esi
  43d5fc:	pop    eax
  43d5fd:	ins    BYTE PTR es:[edi],dx
  43d5fe:	xchg   ebx,eax
  43d5ff:	push   edx
  43d600:	imul   ebp,DWORD PTR [ecx-0x60],0x3f
  43d604:	cs addr16 fwait
  43d607:	lea    eax,[ebx]
  43d609:	xor    dh,BYTE PTR [esi]
  43d60b:	inc    esi
  43d60c:	pop    eax
  43d60d:	je     0x43d682
  43d60f:	xor    BYTE PTR [ebx+0x61],ch
  43d612:	add    DWORD PTR [ebp-0x72a498d4],0x3
  43d619:	ins    BYTE PTR es:[edi],dx
  43d61a:	aaa    
  43d61b:	retf   0x6a68
  43d61e:	imul   esi,DWORD PTR [eax+0x4d],0x57848474
  43d625:	push   esp
  43d626:	pusha  
  43d627:	mov    edx,0x6f5e6e47
  43d62c:	pusha  
  43d62d:	dec    ebp
  43d62e:	dec    esi
  43d62f:	jno    0x43d661
  43d631:	add    BYTE PTR [edi],dh
  43d633:	lods   al,BYTE PTR ds:[esi]
  43d634:	std    
  43d635:	dec    ebp
  43d636:	sbb    ch,BYTE PTR [esi-0x50ed8fb8]
  43d63c:	inc    esp
  43d63d:	arpl   WORD PTR [esi],bx
  43d63f:	rcr    BYTE PTR [ebx+0x51],1
  43d642:	aaa    
  43d643:	fdivp  st(5),st
  43d645:	dec    ebp
  43d646:	sbb    ch,BYTE PTR [esi-0x4ffd95ca]
  43d64c:	inc    esp
  43d64d:	arpl   si,di
  43d64f:	iret   
  43d650:	pop    ebx
  43d651:	push   ecx
  43d652:	add    BYTE PTR [eax],al
  43d654:	aaa    
  43d655:	xor    al,0x1a
  43d657:	push   es
  43d658:	add    DWORD PTR [ecx],edx
  43d65a:	aas    
  43d65b:	inc    ebp
  43d65c:	fild   DWORD PTR [esi]
  43d65e:	pop    ebx
  43d65f:	pop    edi
  43d660:	cli    
  43d661:	adc    BYTE PTR [ecx+0x4],dl
  43d664:	out    0x34,al
  43d666:	xor    DWORD PTR [edx-0x28],ebp
  43d669:	pop    ds
  43d66a:	push   ecx
  43d66b:	arpl   bx,bx
  43d66d:	or     al,0x34
  43d66f:	pop    edi
  43d670:	repnz adc BYTE PTR [ebx+0x4f],cl
  43d674:	leave  
  43d675:	or     al,0x16
  43d677:	pop    ebx
  43d678:	jnp    0x43d689
  43d67a:	sbb    esp,DWORD PTR [ebp-0x67]
  43d67d:	or     ebx,DWORD PTR [edx]
  43d67f:	push   eax
  43d680:	mov    fs,WORD PTR [edx]
  43d682:	jmp    0x8b5f:0x1b32e503
  43d689:	add    ebp,edi
  43d68b:	test   BYTE PTR fs:[edx],ah
  43d68e:	add    DWORD PTR [eax-0x78],edx
  43d691:	lock cld 
  43d693:	push   esp
  43d694:	pop    edx
  43d695:	and    dl,cl
  43d697:	push   ebx
  43d698:	imul   eax,DWORD PTR ds:0x11883fdc,0xffffffbe
  43d69f:	add    edx,DWORD PTR [eax+0x635ebb32]
  43d6a5:	out    0xc8,al
  43d6a7:	push   sp
  43d6a9:	adc    BYTE PTR [ebx-0x43e095a2],bl
  43d6af:	push   0x4b
  43d6b1:	sbb    esp,DWORD PTR [ecx-0x48faaa97]
  43d6b7:	add    eax,DWORD PTR [eax]
  43d6b9:	add    BYTE PTR [ecx],ah
  43d6bb:	xor    al,0xab
  43d6bd:	push   0x55851e1d
  43d6c2:	sub    eax,DWORD PTR [ecx]
  43d6c4:	mov    ss,WORD PTR [ebp+0x10]
  43d6c7:	push   es
  43d6c8:	xchg   DWORD PTR [esp+edx*1],esi
  43d6cb:	adc    DWORD PTR [ebp+0x55],ebp
  43d6ce:	adc    BYTE PTR [eax],ah
  43d6d0:	add    DWORD PTR [eax+0x40],esi
  43d6d3:	adc    DWORD PTR [edx+ecx*4-0x1e],esi
  43d6d7:	or     al,0x71
  43d6d9:	pop    ebp
  43d6da:	fadd   DWORD PTR ds:0x11244e4d
  43d6e0:	fs pop esp
  43d6e2:	add    eax,0xf7506d0d
  43d6e7:	adc    BYTE PTR [edx+ecx*2-0x1b],dh
  43d6eb:	or     al,0x71
  43d6ed:	xor    eax,0xe95005d0
  43d6f2:	xor    al,0xe9
  43d6f4:	add    DWORD PTR [esi],esp
  43d6f6:	(bad)  
  43d6f7:	pop    ds
  43d6f8:	push   esp
  43d6f9:	or     al,0x94
  43d6fb:	and    DWORD PTR [ebx+0x10],esi
  43d6fe:	xchg   DWORD PTR ds:0xf7840c3d,ebx
  43d704:	jb     0x43d706
  43d706:	and    DWORD PTR [eax],0x68
  43d709:	sti    
  43d70a:	inc    ebp
  43d70b:	cmc    
  43d70c:	arpl   WORD PTR ds:0x1a02de33,cx
  43d712:	xchg   esi,eax
  43d713:	and    BYTE PTR [esp+eax*1-0x6c],dl
  43d717:	and    DWORD PTR [ebx-0x30],esi
  43d71a:	sbb    BYTE PTR ds:0xc43d,0x85
  43d721:	div    DWORD PTR [edx-0x40]
  43d724:	test   BYTE PTR [eax],ah
  43d726:	push   0x63f525db
  43d72b:	aad    0x34
  43d72d:	pop    ebp
  43d72e:	add    ebx,DWORD PTR [ebx-0x44bbeca9]
  43d734:	push   edi
  43d735:	cmc    
  43d736:	ins    BYTE PTR es:[edi],dx
  43d737:	les    ebp,FWORD PTR [ebp+0x11]
  43d73a:	jp     0x43d6e8
  43d73c:	or     al,0x3
  43d73e:	add    DWORD PTR [edi-0x71a219ca],ecx
  43d744:	imul   esp,DWORD PTR [ecx],0x5e
  43d747:	fwait
  43d748:	sti    
  43d749:	add    DWORD PTR [edx+0x0],esp
  43d74c:	stos   BYTE PTR es:[edi],al
  43d74d:	add    esp,DWORD PTR [ebp+eax*2-0x4a]
  43d751:	inc    ebp
  43d752:	add    DWORD PTR [eax],eax
  43d754:	or     BYTE PTR [ebx],dh
  43d756:	inc    edi
  43d757:	gs mov cl,0x61
  43d75a:	fs je  0x43d78d
  43d75d:	pcmpgtw mm6,QWORD PTR [ebp-0xd]
  43d761:	bnd js 0x43d7bb
  43d764:	dec    esi
  43d765:	xor    BYTE PTR [edx],al
  43d767:	add    DWORD PTR [ebx],edx
  43d769:	push   DWORD PTR [ebx+0x61]
  43d76c:	jmp    0x3830:0x5e646060
  43d773:	inc    esp
  43d774:	and    bh,ch
  43d776:	push   eax
  43d777:	dec    ecx
  43d778:	cmp    eax,0x4a642b42
  43d77d:	sbb    al,0x1
  43d77f:	add    BYTE PTR [esi+0x39],cl
  43d782:	jb     0x43d7fa
  43d784:	add    BYTE PTR [eax],al
  43d786:	cmp    bh,ah
  43d788:	jo     0x43d7fc
  43d78a:	aaa    
  43d78b:	sbb    ch,BYTE PTR [ebp+0x66]
  43d78e:	xor    DWORD PTR [eax],edi
  43d790:	push   0x1
  43d792:	add    DWORD PTR [edx],eax
  43d794:	imul   esi,DWORD PTR [ebx-0x2],0xffffffe5
  43d798:	pop    edi
  43d799:	outs   dx,BYTE PTR ds:[esi]
  43d79a:	add    dh,dl
  43d79c:	aaa    
  43d79d:	add    BYTE PTR ds:0x2615138,cl
  43d7a3:	and    BYTE PTR [eax+0x73],al
  43d7a6:	mov    ds:0xce574545,eax
  43d7ab:	aaa    
  43d7ac:	inc    eax
  43d7ad:	add    BYTE PTR [esi-0x6f9792e8],ch
  43d7b3:	and    BYTE PTR [ebx+0x64],ch
  43d7b6:	nop
  43d7b7:	and    BYTE PTR [ebp+0x65],ah
  43d7ba:	cwde   
  43d7bb:	sbb    BYTE PTR [ebp+eiz*2-0xf],ch
  43d7bf:	aaa    
  43d7c0:	jle    0x43d7c2
  43d7c2:	out    dx,al
  43d7c3:	sbb    BYTE PTR [ebp+0x68],ch
  43d7c6:	aaa    
  43d7c7:	iret   
  43d7c8:	pusha  
  43d7c9:	imul   ecx,DWORD PTR [eax],0xffffffab
  43d7cc:	pusha  
  43d7cd:	inc    edx
  43d7ce:	push   ds
  43d7cf:	test   eax,0xb8074d60
  43d7d4:	bound  edx,QWORD PTR [ecx+0x37]
  43d7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d7d8:	add    edx,DWORD PTR [eax+0x16]
  43d7db:	or     DWORD PTR [edi+eax*2-0x1c],ebp
  43d7df:	pusha  
  43d7e0:	ins    BYTE PTR es:[edi],dx
  43d7e1:	outs   dx,BYTE PTR ds:[esi]
  43d7e2:	sar    ch,cl
  43d7e4:	push   eax
  43d7e5:	imul   esp,ebp,0x25e3
  43d7eb:	add    BYTE PTR [edi],dh
  43d7ed:	push   cs
  43d7ee:	std    
  43d7ef:	dec    edi
  43d7f0:	(bad)  
  43d7f1:	push   eax
  43d7f2:	gs dec ebp
  43d7f4:	fsubr  st(3),st
  43d7f6:	dec    esp
  43d7f7:	dec    esi
  43d7f8:	sar    cl,1
  43d7fa:	push   eax
  43d7fb:	push   ecx
  43d7fc:	aaa    
  43d7fd:	add    bh,ch
  43d7ff:	dec    edi
  43d800:	xchg   esi,eax
  43d801:	xor    DWORD PTR [ebp+0x53],esp
  43d804:	cdq    
  43d805:	sub    al,0x48
  43d807:	imul   ebp,DWORD PTR [ebx-0x698fcdc0],0x686d583e
  43d811:	popf   
  43d812:	add    esi,DWORD PTR [ebp+0x37]
  43d815:	sub    eax,0x588f7464
  43d81a:	fs je  0x43d7b1
  43d81d:	xor    eax,0x7e5a7032
  43d822:	and    al,0x0
  43d824:	aaa    
  43d825:	aas    
  43d826:	add    al,0x4d
  43d828:	imul   ebp,DWORD PTR [edi+0x40],0x6b
  43d82c:	addr16 mov bl,0x24
  43d82f:	add    BYTE PTR [edi],dh
  43d831:	jp     0x43d836
  43d833:	push   eax
  43d834:	push   esi
  43d835:	leave  
  43d836:	imul   ecx,DWORD PTR [edi+0x4a],0x7a
  43d83a:	inc    edi
  43d83b:	arpl   WORD PTR [ebp+ecx*8+0x62],sp
  43d83f:	pop    ebp
  43d840:	sbb    dh,BYTE PTR [ebx+ebx*4]
  43d843:	sub    al,0x37
  43d845:	xor    al,0xe2
  43d847:	add    eax,DWORD PTR [edi]
  43d849:	adc    eax,0x155a6b96
  43d84e:	js     0x43d8b4
  43d850:	add    BYTE PTR [eax],al
  43d852:	sbb    eax,0x1b628b1d
  43d857:	sbb    eax,0x33e65e84
  43d85c:	gs add al,0xe7
  43d85f:	adc    al,0x6e
  43d861:	imul   eax,DWORD PTR [ecx],0x19
  43d864:	dec    ebp
  43d865:	gs in  eax,0x18
  43d868:	sub    al,0x63
  43d86a:	add    bl,BYTE PTR [edi]
  43d86c:	pop    ebx
  43d86d:	push   0x2d4206f8
  43d872:	aaa    
  43d873:	xor    al,0x54
  43d875:	add    esp,esp
  43d877:	add    eax,0x18cd2f46
  43d87c:	cmp    esp,DWORD PTR [ecx-0x28]
  43d87f:	add    edi,DWORD PTR ds:0x343743
  43d885:	add    edi,DWORD PTR [edx+0x8]
  43d888:	sbb    al,0x41
  43d88a:	mov    WORD PTR [eax+eiz*1],es
  43d88d:	dec    ebx
  43d88e:	pop    eax
  43d88f:	xor    al,0x1e
  43d891:	add    eax,DWORD PTR [edx-0x7ccf03f8]
  43d897:	push   es
  43d898:	xor    DWORD PTR [ebx+0x37],eax
  43d89b:	xor    al,0x25
  43d89d:	add    ebp,DWORD PTR [edx+0x8]
  43d8a0:	cld    
  43d8a1:	xor    BYTE PTR [ebx+0x6],ch
  43d8a4:	mov    cl,0x2c
  43d8a6:	aaa    
  43d8a7:	xor    al,0x8f
  43d8a9:	add    esi,DWORD PTR [edx-0x4]
  43d8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d8ad:	pop    esi
  43d8ae:	dec    ebx
  43d8af:	pop    ss
  43d8b0:	into   
  43d8b1:	pop    esi
  43d8b2:	gs adc ecx,esi
  43d8b5:	dec    esi
  43d8b6:	add    BYTE PTR [eax],al
  43d8b8:	push   esp
  43d8b9:	jmp    0x34d5dca7
  43d8be:	add    DWORD PTR [edx-0x42a20794],ebx
  43d8c4:	adc    DWORD PTR [eax],ecx
  43d8c6:	pop    esi
  43d8c7:	mov    dl,0x9
  43d8c9:	or     DWORD PTR [eax-0x17],edx
  43d8cc:	xor    al,0x31
  43d8ce:	add    bh,BYTE PTR [edx+0x7c4421e8]
  43d8d4:	in     al,0xfd
  43d8d6:	dec    ecx
  43d8d7:	sahf   
  43d8d8:	xor    al,0x44
  43d8da:	add    DWORD PTR [ecx-0x5796f7eb],ebx
  43d8e0:	fcom   DWORD PTR [edi]
  43d8e2:	inc    ebx
  43d8e3:	mov    bh,dl
  43d8e5:	push   ss
  43d8e6:	je     0x43d93d
  43d8e8:	rcr    BYTE PTR [esi],cl
  43d8ea:	imul   esi,DWORD PTR [esi],0x3901623b
  43d8f0:	rol    BYTE PTR [edi],cl
  43d8f2:	imul   ebp,DWORD PTR [eax],0x413e17df
  43d8f8:	out    dx,eax
  43d8f9:	adc    al,0x67
  43d8fb:	cmp    ah,dl
  43d8fd:	sbb    ah,BYTE PTR [edi+0x1e]
  43d900:	xor    edi,edi
  43d902:	dec    eax
  43d903:	sbb    eax,0x3051516c
  43d908:	push   ebp
  43d909:	sbb    BYTE PTR [ebp+0xd],ah
  43d90c:	cmp    esi,DWORD PTR [edx]
  43d90e:	add    bh,BYTE PTR [edx]
  43d910:	jnp    0x43d927
  43d912:	gs std 
  43d914:	jg     0x43d922
  43d916:	pop    esi
  43d917:	or     ch,BYTE PTR [esi+0x8]
  43d91a:	pop    esi
  43d91b:	push   ss
  43d91c:	add    BYTE PTR [eax],al
  43d91e:	cmp    ecx,edi
  43d920:	add    BYTE PTR [edx],bl
  43d922:	cmp    esi,ebx
  43d924:	pop    ebp
  43d925:	cmc    
  43d926:	jle    0x43d943
  43d928:	gs int 0x5f
  43d92b:	and    dl,BYTE PTR [ecx-0x38]
  43d92e:	mov    BYTE PTR [eax+edx*2],bl
  43d931:	jmp    0xaa450f6a
  43d936:	push   ebp
  43d937:	sbb    eax,0x12ff0066
  43d93c:	pop    ebp
  43d93d:	dec    esp
  43d93e:	out    0x12,eax
  43d940:	fs push esp
  43d942:	icebp  
  43d943:	mul    DWORD PTR [esi+0x67]
  43d946:	call   0xed43da98
  43d94b:	dec    esp
  43d94c:	inc    esp
  43d94d:	dec    esp
  43d94e:	shr    BYTE PTR [ecx],cl
  43d950:	daa    
  43d951:	cs stos BYTE PTR es:[edi],al
  43d953:	lock add BYTE PTR fs:[eax+0xa654234],ah
  43d95b:	dec    esp
  43d95c:	data16 gs cld 
  43d95f:	repnz push edi
  43d961:	ins    DWORD PTR es:[edi],dx
  43d962:	stos   DWORD PTR es:[edi],eax
  43d963:	sti    
  43d964:	js     0x43d9bd
  43d966:	pop    esi
  43d967:	xor    al,0x46
  43d969:	gs std 
  43d96b:	jmp    0x6c5d:0x563c3366
  43d972:	repnz aaa 
  43d974:	add    DWORD PTR [eax],0x1d
  43d977:	jmp    0x7446:0x1b0a6163
  43d97e:	cld    
  43d97f:	sbb    bl,BYTE PTR [eax+0x6d]
  43d982:	add    BYTE PTR [eax],al
  43d984:	adc    DWORD PTR [esi],edx
  43d986:	dec    ecx
  43d987:	inc    edi
  43d988:	jb     0x43d99d
  43d98a:	push   edi
  43d98b:	popa   
  43d98c:	inc    edx
  43d98d:	cmp    BYTE PTR [ecx],dl
  43d98f:	add    BYTE PTR [ebp+0x13],cl
  43d992:	ss jb  0x43d9c0
  43d995:	sbb    DWORD PTR [ebp+0x65],ebp
  43d998:	push   edi
  43d999:	adc    ah,BYTE PTR [esi+0x74]
  43d99c:	aas    
  43d99d:	adc    dl,BYTE PTR [esi+0x65]
  43d9a0:	push   cs
  43d9a1:	xor    al,0x65
  43d9a3:	add    BYTE PTR [ebp+0x13],cl
  43d9a6:	push   esp
  43d9a7:	outs   dx,BYTE PTR ds:[esi]
  43d9a8:	aaa    
  43d9a9:	adc    ah,BYTE PTR [eax+0x74]
  43d9ac:	pop    es
  43d9ad:	sbb    DWORD PTR [ebp+0x69],esp
  43d9b0:	aam    0x1c
  43d9b2:	add    DWORD PTR [eax],eax
  43d9b4:	aaa    
  43d9b5:	es std 
  43d9b7:	cmp    al,0x60
  43d9b9:	aam    0x61
  43d9bb:	addr16 inc ebx
  43d9bd:	fs pop esp
  43d9bf:	ins    BYTE PTR es:[edi],dx
  43d9c0:	dec    esi
  43d9c1:	jae    0x43da2b
  43d9c3:	inc    ebx
  43d9c4:	aas    
  43d9c5:	popf   
  43d9c6:	add    ecx,DWORD PTR [eax]
  43d9c8:	aaa    
  43d9c9:	fidiv  DWORD PTR [edi]
  43d9cb:	dec    ebp
  43d9cc:	(bad)  
  43d9cd:	loopne 0x43da18
  43d9cf:	outs   dx,BYTE PTR ds:[esi]
  43d9d0:	adc    al,al
  43d9d2:	cs je  0x43d9fa
  43d9d5:	mov    ah,0x61
  43d9d7:	popa   
  43d9d8:	aaa    
  43d9d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d9da:	cld    
  43d9db:	dec    esp
  43d9dc:	add    ecx,DWORD PTR [ebx]
  43d9de:	push   ebp
  43d9df:	push   0x18
  43d9e1:	xlat   BYTE PTR ds:[ebx]
  43d9e2:	dec    ebp
  43d9e3:	imul   ecx,DWORD PTR [edx],0x4738de
  43d9e9:	add    bl,bh
  43d9eb:	retf   0x6903
  43d9ee:	(bad)  
  43d9f0:	or     eax,0x60f9112e
  43d9f5:	ins    BYTE PTR es:[edi],dx
  43d9f6:	aaa    
  43d9f7:	ss std 
  43d9f9:	cmp    al,0xc5
  43d9fb:	mul    DWORD PTR [ebx+0x74]
  43d9fe:	rcr    BYTE PTR [ecx+0x62],cl
  43da01:	imul   eax,edi,0xfffffffb
  43da04:	pop    eax
  43da05:	addr16 aad 0xf8
  43da08:	pop    edi
  43da09:	ds sahf 
  43da0b:	dec    ecx
  43da0c:	pop    eax
  43da0d:	pop    edi
  43da0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da0f:	popf   
  43da10:	add    esi,DWORD PTR [eax]
  43da12:	aaa    
  43da13:	pop    edx
  43da14:	dec    edi
  43da15:	arpl   WORD PTR [esi-0x5fc29fcf],dx
  43da1b:	nop
  43da1c:	push   ebx
  43da1d:	pop    edi
  43da1e:	and    DWORD PTR [edi+ebx*2],0x6c
  43da22:	call   0xfd8e:0x37003e59
  43da29:	dec    esp
  43da2a:	pop    edx
  43da2b:	xchg   ecx,eax
  43da2c:	pop    esi
  43da2d:	pop    ebp
  43da2e:	arpl   WORD PTR [edi+ebp*4],si
  43da31:	gs pop ecx
  43da33:	sbb    ebx,ecx
  43da35:	push   edi
  43da36:	aaa    
  43da37:	xor    al,0x48
  43da39:	add    al,0x7b
  43da3b:	sbb    DWORD PTR [esi-0x50e6bc9a],esi
  43da41:	gs pop ecx
  43da43:	sbb    ebx,ecx
  43da45:	push   edi
  43da46:	aaa    
  43da47:	xor    al,0xfc
  43da49:	add    esi,DWORD PTR [edx+0x2]
  43da4c:	mov    ebp,0x23000062
  43da51:	sbb    DWORD PTR [esi+0x33340644],esp
  43da57:	add    esi,esi
  43da59:	sbb    BYTE PTR [esi-0x7ef9ebb9],dl
  43da5f:	fs adc al,0xf3
  43da62:	mov    BYTE PTR [ebx+0x12],dl
  43da65:	xor    al,0xb
  43da67:	add    al,0xf3
  43da69:	sbb    BYTE PTR [esi+0x66],bh
  43da6c:	jmp    0x43da86
  43da6e:	sahf   
  43da6f:	inc    esp
  43da70:	aaa    
  43da71:	xor    al,0xfb
  43da73:	add    esp,DWORD PTR [ecx]
  43da75:	sbb    eax,0x7cb464e
  43da7a:	jmp    0xc367:0x1f347903
  43da81:	div    DWORD PTR [eax]
  43da83:	inc    esi
  43da84:	fadd   DWORD PTR [edi]
  43da86:	cmp    eax,DWORD PTR [esp+eax*1]
  43da89:	xor    al,0x2b
  43da8b:	push   esi
  43da8c:	xchg   esp,eax
  43da8d:	adc    ebp,DWORD PTR [esi]
  43da8f:	addr16 jae 0x43da8d
  43da92:	sub    esi,DWORD PTR ds:0x5b0e1194
  43da98:	mov    ds,WORD PTR [esi]
  43da9a:	jmp    0x9a67:0x3c329803
  43daa1:	or     BYTE PTR [edi],cl
  43daa3:	push   esi
  43daa4:	xchg   esp,eax
  43daa5:	clc    
  43daa6:	sub    al,BYTE PTR [edi+eax*4]
  43daa9:	xor    al,BYTE PTR [ecx]
  43daab:	sbb    dl,BYTE PTR [edx+eax*1+0x5e]
  43daaf:	and    eax,0x89013472
  43dab4:	add    BYTE PTR [eax],al
  43dab6:	cmp    bh,bh
  43dab8:	pop    ebp
  43dab9:	aad    0x22
  43dabb:	adc    DWORD PTR [ebp+ebx*8+0xa],esp
  43dabf:	adc    esp,DWORD PTR [edi-0x17]
  43dac2:	xor    al,0x1
  43dac4:	add    ch,BYTE PTR [esi-0x32c0eaa8]
  43daca:	popa   
  43dacb:	pop    ds
  43dacc:	imul   ebp,ecx,0x9a02d534
  43dad2:	adc    DWORD PTR [eax],ecx
  43dad4:	dec    edi
  43dad5:	nop
  43dad6:	sbb    DWORD PTR [ebx],eax
  43dad8:	jno    0x43da68
  43dada:	add    cl,BYTE PTR [eax]
  43dadc:	dec    eax
  43dadd:	fwait
  43dade:	pop    ds
  43dadf:	icebp  
  43dae0:	js     0x43dacb
  43dae2:	xor    al,0xf3
  43dae4:	cmp    al,0xb0
  43dae6:	sub    ebx,DWORD PTR [esi+0x27]
  43dae9:	test   eax,ebx
  43daeb:	pop    ds
  43daec:	add    DWORD PTR [eax-0x57ac1ccc],esp
  43daf2:	and    edx,DWORD PTR [ecx]
  43daf4:	addr16 dec ebp
  43daf6:	cmp    edi,eax
  43daf8:	add    BYTE PTR [esi],dh
  43dafa:	and    al,0x4d
  43dafc:	push   ebx
  43dafd:	dec    esp
  43dafe:	aam    0x1
  43db00:	add    DWORD PTR [ecx+0x33],esp
  43db03:	adc    dh,BYTE PTR [ebx+0x4c]
  43db06:	into   
  43db07:	in     al,dx
  43db08:	pop    esp
  43db09:	inc    ebp
  43db0a:	in     eax,0x14
  43db0c:	addr16 dec edi
  43db0e:	nop
  43db0f:	xor    al,0x1
  43db11:	pusha  
  43db12:	xor    edx,DWORD PTR [ebx]
  43db14:	pop    esi
  43db15:	sbb    eax,0x1b5d189a
  43db1a:	add    BYTE PTR [eax],al
  43db1c:	jp     0x43db38
  43db1e:	pop    edi
  43db1f:	push   es
  43db20:	cmp    edx,DWORD PTR [ecx+eax*1+0x36]
  43db24:	inc    esp
  43db25:	dec    ebp
  43db26:	inc    esp
  43db27:	add    ah,bh
  43db29:	sbb    ebx,DWORD PTR [eax+0x74]
  43db2c:	xor    edi,ebx
  43db2e:	jb     0x43db95
  43db30:	cmp    ah,ch
  43db32:	add    BYTE PTR [eax],al
  43db34:	hlt    
  43db35:	xor    BYTE PTR [edx+0x53],dl
  43db38:	(bad)  
  43db39:	sti    
  43db3a:	jb     0x43dba1
  43db3c:	call   0xfaa92125
  43db41:	sbb    edx,DWORD PTR [esi+0x74]
  43db44:	fidiv  WORD PTR [eax]
  43db46:	and    al,BYTE PTR [eax]
  43db48:	mov    eax,ds:0xe8453841
  43db4d:	jmp    0x43dbba
  43db4f:	dec    esi
  43db50:	and    esp,0x71
  43db53:	outs   dx,DWORD PTR ds:[esi]
  43db54:	in     al,dx
  43db55:	jmp    0xeef7519d
  43db5a:	ins    BYTE PTR es:[edi],dx
  43db5b:	jae    0x43daeb
  43db5d:	xor    BYTE PTR [edx],cl
  43db5f:	add    cl,dl
  43db61:	inc    ecx
  43db62:	cmp    BYTE PTR [ecx-0x4e],al
  43db65:	adc    al,0x67
  43db67:	gs std 
  43db69:	loope  0x43dbb7
  43db6b:	outs   dx,DWORD PTR ds:[esi]
  43db6c:	popf   
  43db6d:	in     al,0x66
  43db6f:	imul   edi,DWORD PTR [eax-0x5fffadeb],0xf535230
  43db79:	dec    edi
  43db7a:	push   0x63
  43db7c:	add    dl,BYTE PTR [ecx+eax*1]
  43db7f:	add    BYTE PTR [eax],al
  43db81:	add    BYTE PTR [ebp+0x30],al
  43db84:	push   edx
  43db85:	push   ebx
  43db86:	pop    ds
  43db87:	icebp  
  43db88:	outs   dx,DWORD PTR fs:[esi]
  43db8a:	std    
  43db8b:	sbb    al,BYTE PTR [esi+esi*2-0xd]
  43db8f:	in     eax,dx
  43db90:	ins    BYTE PTR es:[edi],dx
  43db91:	add    BYTE PTR [ecx+0x47],dl
  43db94:	daa    
  43db95:	pop    edi
  43db96:	sub    eax,0x4a642b26
  43db9b:	adc    al,0x1
  43db9d:	add    BYTE PTR [ecx],ah
  43db9f:	xor    DWORD PTR [ecx+0x46],edx
  43dba2:	aaa    
  43dba3:	inc    ebp
  43dba4:	imul   eax,DWORD PTR ss:[edi+0x7474518a],0x38
  43dbac:	push   ebx
  43dbad:	je     0x43dc13
  43dbaf:	adc    DWORD PTR [esi+0x6e],0x1f039d5a
  43dbb6:	aaa    
  43dbb7:	pop    esi
  43dbb8:	push   0x6e
  43dbba:	imul   ebx,ecx,0x68
  43dbbd:	ins    BYTE PTR es:[edi],dx
  43dbbe:	push   edx
  43dbbf:	popa   
  43dbc0:	push   0x4f6f5a3d
  43dbc5:	addr16 push ecx
  43dbc7:	je     0x43dc2b
  43dbc9:	pop    edi
  43dbca:	dec    ebx
  43dbcb:	js     0x43dc0a
  43dbcd:	outs   dx,BYTE PTR ds:[esi]
  43dbce:	dec    eax
  43dbcf:	js     0x43dc03
  43dbd1:	je     0x43dbf3
  43dbd3:	iret   
  43dbd4:	push   0x3a43700
  43dbd9:	cmp    eax,0x494faf1a
  43dbde:	daa    
  43dbdf:	mov    al,0x55
  43dbe1:	dec    ebp
  43dbe2:	push   cs
  43dbe3:	scas   al,BYTE PTR es:[edi]
  43dbe4:	dec    edi
  43dbe5:	arpl   WORD PTR [eax],ax
  43dbe7:	add    BYTE PTR [edx],bl
  43dbe9:	into   
  43dbea:	dec    edi
  43dbeb:	imul   eax,DWORD PTR ds:0x37002eb8,0xda3d036f
  43dbf5:	push   cs
  43dbf6:	push   eax
  43dbf7:	cmp    eax,0x635309db
  43dbfc:	add    al,0xe9
  43dbfe:	push   ebp
  43dbff:	outs   dx,BYTE PTR ds:[esi]
  43dc00:	rcr    BYTE PTR [ebx+eax*1+0x605e372c],cl
  43dc07:	outs   dx,BYTE PTR ds:[esi]
  43dc08:	ret    
  43dc09:	dec    edi
  43dc0a:	push   edi
  43dc0b:	jae    0x43dbdf
  43dc0d:	pop    ebp
  43dc0e:	pusha  
  43dc0f:	outs   dx,BYTE PTR ds:[esi]
  43dc10:	ret    
  43dc11:	jecxz  0x43dc71
  43dc13:	addr16 xchg esp,eax
  43dc15:	cld    
  43dc16:	pop    eax
  43dc17:	arpl   WORD PTR [esp+edx*2+0x34ab4d57],sp
  43dc1e:	rsqrtps xmm2,XMMWORD PTR [esp+esi*1+0x115203bd]
  43dc26:	sbb    al,0x58
  43dc28:	jae    0x43dc2b
  43dc2a:	sbb    ah,BYTE PTR [eax-0x68]
  43dc2d:	pop    ss
  43dc2e:	or     DWORD PTR [eax-0x6c],ebx
  43dc31:	idiv   esp
  43dc33:	push   ecx
  43dc34:	imul   ebx,DWORD PTR ds:0x158a5b08,0xffffffee
  43dc3b:	data16 and bl,BYTE PTR [ebx]
  43dc3e:	rcl    BYTE PTR [edi+0x54],1
  43dc41:	or     al,0xce
  43dc43:	add    esp,DWORD PTR ds:0x6f45ba35
  43dc49:	icebp  
  43dc4a:	rcl    DWORD PTR [ebx+0x0],1
  43dc4d:	add    BYTE PTR [esi+0x6],cl
  43dc50:	mov    dh,0x40
  43dc52:	push   esp
  43dc53:	push   es
  43dc54:	scas   al,BYTE PTR es:[edi]
  43dc55:	xor    BYTE PTR [ebx],ch
  43dc57:	sbb    edi,DWORD PTR [esi+eiz*2+0x3ea0bf4]
  43dc5e:	mov    dh,BYTE PTR [ebx]
  43dc60:	stos   DWORD PTR es:[edi],eax
  43dc61:	push   ecx
  43dc62:	and    BYTE PTR [esi+ecx*4],al
  43dc65:	ss sbb eax,0x35c9c04
  43dc6b:	adc    DWORD PTR [ebx+0x7614fb57],ecx
  43dc71:	bound  esi,QWORD PTR [edi]
  43dc73:	xor    al,0xab
  43dc75:	xor    DWORD PTR [eax],ecx
  43dc77:	in     al,0x95
  43dc79:	adc    BYTE PTR [ecx],bl
  43dc7b:	pop    edx
  43dc7c:	jle    0x43dcdd
  43dc7e:	shl    DWORD PTR [ebx],cl
  43dc80:	inc    ecx
  43dc81:	add    al,0xef
  43dc83:	dec    DWORD PTR [ebp+0x54]
  43dc86:	add    BYTE PTR [ecx],al
  43dc88:	inc    ebp
  43dc89:	push   edx
  43dc8a:	sar    ah,0x37
  43dc8d:	data16 into 
  43dc8f:	hlt    
  43dc90:	jmp    0x3177a498
  43dc95:	pop    esi
  43dc96:	stos   DWORD PTR es:[edi],eax
  43dc97:	invlpg BYTE PTR [ebx]
  43dc9a:	mov    DWORD PTR ds:0x1e822a6d,edx
  43dca0:	addr16 or al,0x96
  43dca3:	add    BYTE PTR [edx-0x17],al
  43dca6:	xor    al,0xae
  43dca8:	add    BYTE PTR [eax],ah
  43dcaa:	imul   eax,DWORD PTR [eax],0x15611b5e
  43dcb0:	ins    DWORD PTR es:[edi],dx
  43dcb1:	sbb    BYTE PTR [eax],al
  43dcb3:	add    BYTE PTR [eax+0x15],ah
  43dcb6:	jae    0x43dcb8
  43dcb8:	xor    al,BYTE PTR [ebp*2+0x501e8a00]
  43dcbf:	jmp    0xb04487f8
  43dcc4:	jp     0x43dcc6
  43dcc6:	pop    esi
  43dcc7:	(bad)  [edx+0x15]
  43dcca:	ins    DWORD PTR es:[edi],dx
  43dccb:	mov    ebx,0xa75ce951
  43dcd0:	pop    ebp
  43dcd1:	sbb    BYTE PTR [esi-0x17],bl
  43dcd4:	xor    al,0xd8
  43dcd6:	add    BYTE PTR [eax-0x44a1ffee],dh
  43dcdc:	or     dl,BYTE PTR ds:0x199a6d
  43dce2:	dec    eax
  43dce3:	cdq    
  43dce4:	add    BYTE PTR [ecx],dl
  43dce6:	push   0x133f58f
  43dceb:	mov    esi,0x956cfc34
  43dcf0:	in     al,0xfa
  43dcf2:	jo     0x43dc80
  43dcf4:	(bad)  
  43dcf6:	pop    ebp
  43dcf7:	js     0x43dd02
  43dcf9:	adc    eax,0x33f57d74
  43dcfe:	add    DWORD PTR [ebx+0x5d6cfc34],ebx
  43dd04:	add    ecx,DWORD PTR [ecx+0x5d]
  43dd07:	inc    ebp
  43dd08:	or     DWORD PTR ds:0x16d65c72,edx
  43dd0e:	ins    DWORD PTR es:[edi],dx
  43dd0f:	and    esi,edx
  43dd11:	call   0xe22edd72
  43dd16:	gs inc ecx
  43dd18:	add    BYTE PTR [eax],al
  43dd1a:	push   ds
  43dd1b:	xor    eax,0xe456004e
  43dd20:	ins    BYTE PTR es:[edi],dx
  43dd21:	jo     0x43dd60
  43dd23:	adc    ebp,DWORD PTR [ebx+0x64]
  43dd26:	pop    esp
  43dd27:	adc    ebp,DWORD PTR [eax+0x75]
  43dd2a:	cmp    esp,ecx
  43dd2c:	ins    BYTE PTR es:[edi],dx
  43dd2d:	inc    ecx
  43dd2e:	push   ds
  43dd2f:	xor    eax,0xee570092
  43dd34:	ins    BYTE PTR es:[edi],dx
  43dd35:	gs cld 
  43dd37:	jmp    0x6e63:0xe0217463
  43dd3e:	pop    ds
  43dd3f:	xor    BYTE PTR [esi+0x0],bl
  43dd42:	pop    ss
  43dd43:	out    dx,al
  43dd44:	ins    BYTE PTR es:[edi],dx
  43dd45:	gs cld 
  43dd47:	jmp    0x7369:0xe09d7463
  43dd4e:	sti    
  43dd4f:	dec    esp
  43dd50:	pop    eax
  43dd51:	outs   dx,BYTE PTR ds:[esi]
  43dd52:	cli    
  43dd53:	loopne 0x43ddb8
  43dd55:	add    BYTE PTR [ebx+0x30],dl
  43dd58:	inc    eax
  43dd59:	outs   dx,BYTE PTR ds:[esi]
  43dd5a:	jmp    0x47f8:0x7b6e6713
  43dd61:	jne    0x43ddde
  43dd63:	fisubr WORD PTR [edi+0x4f]
  43dd66:	mov    esi,0xc06f5ff8
  43dd6b:	out    dx,eax
  43dd6c:	add    BYTE PTR [eax],al
  43dd6e:	cli    
  43dd6f:	das    
  43dd70:	inc    eax
  43dd71:	outs   dx,BYTE PTR ds:[esi]
  43dd72:	stos   BYTE PTR es:[edi],al
  43dd73:	adc    esp,DWORD PTR [edi+0x6e]
  43dd76:	stos   DWORD PTR es:[edi],eax
  43dd77:	clc    
  43dd78:	inc    ebp
  43dd79:	gs jmp 0xb500:0x6f69f1
  43dd81:	out    0x63,eax
  43dd83:	inc    ecx
  43dd84:	dec    esi
  43dd85:	xor    al,0x66
  43dd87:	add    BYTE PTR [edi],ah
  43dd89:	out    dx,al
  43dd8a:	ins    BYTE PTR es:[edi],dx
  43dd8b:	gs in  al,dx
  43dd8d:	in     eax,dx
  43dd8e:	arpl   WORD PTR [edi+esi*1+0x5e],si
  43dd92:	dec    edi
  43dd93:	pop    edi
  43dd94:	aam    0xf5
  43dd96:	xor    DWORD PTR [esi-0x35],ebp
  43dd99:	pop    ebx
  43dd9a:	std    
  43dd9b:	pop    ebx
  43dd9c:	aaa    
  43dd9d:	inc    ebp
  43dd9e:	push   ecx
  43dd9f:	je     0x43dd48
  43dda1:	sub    ah,BYTE PTR [edx+0x6a]
  43dda4:	fwait
  43dda5:	sub    esp,DWORD PTR [edx+0x6f]
  43dda8:	mov    ds:0x7a745038,al
  43ddad:	push   ebp
  43ddae:	add    BYTE PTR ds:[edi],dh
  43ddb1:	inc    eax
  43ddb2:	std    
  43ddb3:	inc    edi
  43ddb4:	mov    esp,DWORD PTR [ecx]
  43ddb6:	dec    ebp
  43ddb7:	dec    ebp
  43ddb8:	xchg   edx,eax
  43ddb9:	pop    ds
  43ddba:	popa   
  43ddbb:	dec    esi
  43ddbc:	pop    edx
  43ddbd:	mov    WORD PTR [eax+0x63],ss
  43ddc0:	mov    DWORD PTR fs:[eax+0x78],eax
  43ddc4:	mov    BYTE PTR [ebp-0x3bc852fd],bl
  43ddca:	pop    ecx
  43ddcb:	je     0x43de27
  43ddcd:	imul   ebx,DWORD PTR [ecx+0x63],0x43
  43ddd1:	retf   0x7460
  43ddd4:	fs popa 
  43ddd6:	pop    esp
  43ddd7:	je     0x43de1b
  43ddd9:	retf   0x5f3e
  43dddc:	and    edi,DWORD PTR [ecx+0x5d]
  43dddf:	pop    edi
  43dde0:	adc    al,0x72
  43dde2:	cmp    al,0x0
  43dde4:	add    BYTE PTR [eax],al
  43dde6:	aaa    
  43dde7:	loop   0x43ddec
  43dde9:	inc    edi
  43ddea:	or     DWORD PTR [ecx-0x4fde91a0],ebp
  43ddf0:	inc    edi
  43ddf1:	dec    edi
  43ddf2:	add    bh,BYTE PTR [eax-0x440488b3]
  43ddf8:	inc    edi
  43ddf9:	pop    edi
  43ddfa:	test   BYTE PTR [esi],0x5d
  43ddfd:	jcxz   0x43ddbb
  43de00:	pop    ebp
  43de01:	ins    BYTE PTR es:[edi],dx
  43de02:	rcr    BYTE PTR [ebx+eax*1+0x59d437a0],cl
  43de09:	je     0x43dddd
  43de0b:	xor    ebx,DWORD PTR [edx+ebx*2-0x2c]
  43de0f:	(bad)  
  43de10:	cmp    ebx,DWORD PTR [edi-0x18]
  43de13:	movaps xmm3,XMMWORD PTR [ebx-0x2d]
  43de17:	adc    BYTE PTR ds:0x2033f84c,bl
  43de1d:	add    al,0x7f
  43de1f:	add    BYTE PTR [esi],ch
  43de21:	push   esp
  43de22:	jp     0x43de35
  43de24:	inc    eax
  43de25:	pusha  
  43de26:	jno    0x43de39
  43de28:	cmp    DWORD PTR [edi-0x6c],ecx
  43de2b:	add    edx,DWORD PTR [esi]
  43de2d:	xor    DWORD PTR [edi],esi
  43de2f:	xor    al,0x4e
  43de31:	add    al,0x70
  43de33:	push   ss
  43de34:	push   ss
  43de35:	pop    edi
  43de36:	xchg   ecx,eax
  43de37:	push   ss
  43de38:	std    
  43de39:	dec    edi
  43de3a:	push   0x11
  43de3c:	div    BYTE PTR [ebx+ebp*2]
  43de3f:	adc    eax,0xf35a4eee
  43de44:	or     BYTE PTR [eax+0x53],bl
  43de47:	adc    cl,BYTE PTR [ecx]
  43de49:	add    BYTE PTR gs:[eax],al
  43de4c:	push   edx
  43de4d:	fucomip st,st(1)
  43de4f:	add    edi,DWORD PTR [ebx+0x34]
  43de52:	lahf   
  43de53:	pop    esi
  43de54:	inc    ebx
  43de55:	loope  0x43de32
  43de57:	push   edi
  43de58:	add    dl,BYTE PTR ds:0xf1545bcb
  43de5e:	iret   
  43de5f:	dec    edi
  43de60:	and    DWORD PTR ds:0x171559b1,ecx
  43de66:	xchg   edi,eax
  43de67:	add    esi,edx
  43de69:	xor    esp,DWORD PTR [edx-0x56fbdcb1]
  43de6f:	pop    edi
  43de70:	sbb    esp,edx
  43de72:	jl     0x43dec6
  43de74:	add    al,0x11
  43de76:	fwait
  43de77:	dec    edi
  43de78:	out    dx,eax
  43de79:	adc    BYTE PTR [ecx+0x7b02145f],cl
  43de7f:	xor    BYTE PTR [edi],dh
  43de81:	xor    al,0x8f
  43de83:	cmp    bh,ch
  43de85:	cld    
  43de86:	add    BYTE PTR [edi-0x7ad91fdf],ah
  43de8c:	add    BYTE PTR [eax],bl
  43de8e:	add    DWORD PTR [esi],esi
  43de90:	psllq  mm0,QWORD PTR [ecx+0x34]
  43de94:	pop    es
  43de95:	pop    ecx
  43de96:	xor    eax,DWORD PTR [edi]
  43de98:	xlat   BYTE PTR ds:[ebx]
  43de99:	pop    ss
  43de9a:	gs jmp 0x37446bd4
  43dea0:	nop
  43dea1:	add    BYTE PTR [esi+0x3a],cl
  43dea4:	mov    BYTE PTR [esi],dl
  43dea6:	inc    eax
  43dea7:	dec    esp
  43dea8:	xchg   ebp,ebp
  43deaa:	inc    di
  43deac:	jle    0x43dee2
  43deae:	add    DWORD PTR [eax+eax*1],ecx
  43deb1:	add    BYTE PTR [ebx],bh
  43deb3:	cli    
  43deb4:	pop    ebp
  43deb5:	adc    eax,0x2b6a0474
  43deba:	jo     0x43dece
  43debc:	pop    edi
  43debd:	add    al,0x61
  43debf:	bnd jb 0x43dece
  43dec2:	nop
  43dec3:	xor    al,0x1
  43dec5:	jl     0x43defb
  43dec7:	cli    
  43dec8:	pop    ebp
  43dec9:	std    
  43deca:	adc    DWORD PTR [edi],edx
  43decc:	pop    esi
  43decd:	sti    
  43dece:	sbb    DWORD PTR [edx],ebx
  43ded0:	outs   dx,BYTE PTR ds:[esi]
  43ded1:	aam    0x34
  43ded3:	cli    
  43ded4:	cmp    eax,0x49e475b5
  43ded9:	sbb    ch,BYTE PTR [ecx]
  43dedb:	pop    edx
  43dedc:	pop    ebp
  43dedd:	mov    ebp,0x9f013460
  43dee2:	xor    eax,0x2bb5deb
  43dee7:	sbb    ch,BYTE PTR [eax-0x17]
  43deea:	xor    al,0x8e
  43deec:	cld    
  43deed:	mov    ebx,0x996418f9
  43def2:	std    
  43def3:	xor    eax,DWORD PTR [ecx]
  43def5:	adc    BYTE PTR [eax+0x1b845e1a],cl
  43defb:	sbb    DWORD PTR [ecx-0x17],esi
  43defe:	xor    al,0x9a
  43df00:	cld    
  43df01:	dec    ebx
  43df03:	out    0x6b,al
  43df05:	jae    0x43deba
  43df07:	cmc    
  43df08:	add    BYTE PTR [eax],al
  43df0a:	or     BYTE PTR [eax],dh
  43df0c:	pop    edx
  43df0d:	jne    0x43dee9
  43df0f:	hlt    
  43df10:	imul   esi,DWORD PTR [edi+0x5e],0x2f531
  43df17:	add    BYTE PTR [ecx],cl
  43df19:	loopne 0x43df8e
  43df1b:	jb     0x43df10
  43df1d:	adc    BYTE PTR [eax+0x6c],bl
  43df20:	cli    
  43df21:	das    
  43df22:	jb     0x43df28
  43df24:	jg     0x43df38
  43df26:	data16 add dl,bh
  43df29:	xor    ebp,DWORD PTR [ebp+eiz*2+0x7b]
  43df2d:	jmp    0x43df98
  43df2f:	jbe    0x43dfa4
  43df31:	xor    BYTE PTR [ebp+0x64e37903],dl
  43df37:	je     0x43df72
  43df39:	sgdtd  [eax]
  43df3c:	aaa    
  43df3d:	xor    al,0x5a
  43df3f:	ja     0x43df63
  43df41:	fstp   QWORD PTR [edi+0x0]
  43df44:	(bad)  
  43df45:	xor    ebp,DWORD PTR [ebp+eiz*2+0x3b]
  43df49:	adc    DWORD PTR [ecx+0x72],ebp
  43df4c:	into   
  43df4d:	xor    BYTE PTR ds:0x66f4dd05,cl
  43df53:	arpl   bx,bp
  43df55:	loopne 0x43df57
  43df57:	add    bl,bh
  43df59:	loope  0x43dfcd
  43df5b:	arpl   sp,bx
  43df5d:	hlt    
  43df5e:	sub    ah,BYTE PTR [edx+edi*2-0x24]
  43df62:	add    BYTE PTR [eax],al
  43df64:	shl    BYTE PTR [ebx],0x63
  43df67:	jb     0x43dfdc
  43df69:	adc    eax,DWORD PTR [ecx]
  43df6b:	add    BYTE PTR [esp+esi*1+0x60],cl
  43df6f:	jae    0x43df4b
  43df71:	adc    ebx,DWORD PTR [eax+0x64]
  43df74:	mov    esp,0x9e656cf7
  43df79:	xor    dh,cl
  43df7b:	add    DWORD PTR [eax],eax
  43df7d:	add    BYTE PTR [edi],dh
  43df7f:	mov    esi,0x9b156954
  43df84:	add    ebp,DWORD PTR [ecx]
  43df86:	xor    al,0xce
  43df88:	push   edx
  43df89:	push   0xffffffe7
  43df8b:	or     BYTE PTR [ebp+0x6a],dl
  43df8e:	jmp    0x43df44
  43df90:	add    ebp,DWORD PTR [edi]
  43df92:	xor    eax,0xe07454b6
  43df97:	sti    
  43df98:	cld    
  43df99:	imul   esi,DWORD PTR [edx],0xd07463de
  43df9f:	out    dx,eax
  43dfa0:	bound  eax,QWORD PTR [eax]
  43dfa2:	aaa    
  43dfa3:	aad    0xf7
  43dfa5:	push   0xffffff96
  43dfa7:	jmp    0x8dd84904
  43dfac:	add    eax,DWORD PTR [ebx+0x5e202a37]
  43dfb2:	xchg   esi,eax
  43dfb3:	stc    
  43dfb4:	push   ebp
  43dfb5:	imul   ebx,DWORD PTR [esi+0x3769572b],0x605903d2
  43dfbf:	sbb    eax,0x838e6956
  43dfc4:	push   ebp
  43dfc5:	imul   esi,DWORD PTR [edi],0x5158fe2a
  43dfcb:	and    al,0x59
  43dfcd:	arpl   WORD PTR [ecx+0x3a],dx
  43dfd0:	std    
  43dfd1:	inc    esp
  43dfd2:	xor    eax,0x5a6d5932
  43dfd7:	jo     0x43e033
  43dfd9:	add    DWORD PTR [bx+di],ebp
  43dfdc:	std    
  43dfdd:	inc    edi
  43dfde:	cmp    ecx,edx
  43dfe0:	inc    esi
  43dfe1:	outs   dx,BYTE PTR ds:[esi]
  43dfe2:	add    BYTE PTR [eax],al
  43dfe4:	dec    esi
  43dfe5:	imul   esp,DWORD PTR [eax+0x0],0x58fd5b37
  43dfec:	push   ds
  43dfed:	mov    esi,0xc42b745c
  43dff2:	add    eax,DWORD PTR [edi+0x7450a234]
  43dff8:	pop    es
  43dff9:	xor    al,0x95
  43dffb:	dec    edi
  43dffc:	repz sbb BYTE PTR [eax+edx*2+0x5195e716],cl
  43e004:	adc    BYTE PTR [edx],dl
  43e006:	jg     0x43e04c
  43e008:	aaa    
  43e009:	xor    al,0xe2
  43e00b:	(bad)  
  43e00c:	cli    
  43e00d:	pop    es
  43e00e:	xchg   BYTE PTR [eax],dh
  43e010:	int    0xa
  43e012:	adc    DWORD PTR [ebp-0x2d],0xf6042a33
  43e019:	sbb    BYTE PTR [esi+0x41],dl
  43e01c:	les    eax,FWORD PTR ds:0x7cd5f5c
  43e022:	cmp    dl,BYTE PTR [edx-0x32]
  43e025:	push   ss
  43e026:	cmp    eax,0x9b34a251
  43e02b:	add    BYTE PTR [edx+edx*1+0x188d6352],al
  43e032:	ds pop edi
  43e034:	xchg   ebx,eax
  43e035:	stc    
  43e036:	xor    DWORD PTR [ecx-0x6c],esp
  43e039:	add    al,0x16
  43e03b:	pop    ebx
  43e03c:	sahf   
  43e03d:	adc    ah,BYTE PTR [eax]
  43e03f:	pop    ebx
  43e040:	xchg   ebx,eax
  43e041:	or     BYTE PTR ds:0x3d343752,al
  43e047:	add    BYTE PTR [eax],al
  43e049:	add    BYTE PTR [edx+0x5d2ef619],al
  43e04f:	or     al,0x9
  43e051:	push   esi
  43e052:	pop    ebx
  43e053:	adc    BYTE PTR ds:0xafc7460,al
  43e059:	pop    edi
  43e05a:	inc    edi
  43e05b:	or     cl,dl
  43e05d:	push   esp
  43e05e:	pop    ebp
  43e05f:	cli    
  43e060:	rcl    BYTE PTR [edi+0x4b],1
  43e063:	sbb    esp,ebx
  43e065:	add    ebx,DWORD PTR [edi+0x35]
  43e068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e069:	pop    esi
  43e06a:	das    
  43e06b:	pop    ss
  43e06c:	lds    edx,FWORD PTR [ebx+0x23]
  43e06f:	jecxz  0x43e042
  43e071:	bound  ecx,QWORD PTR ds:0xf9c50118
  43e077:	adc    DWORD PTR [ecx+ebp*8],esi
  43e07a:	xor    al,0x34
  43e07c:	add    ecx,ebp
  43e07e:	xor    al,0x34
  43e080:	add    ecx,ebp
  43e082:	xor    al,0x34
  43e084:	add    ecx,ebp
  43e086:	xor    al,0x34
  43e088:	add    ecx,ebp
  43e08a:	xor    al,0x34
  43e08c:	add    ecx,ebp
  43e08e:	xor    al,0x34
  43e090:	add    ecx,ebp
  43e092:	xor    al,0x34
  43e094:	add    ecx,ebp
  43e096:	xor    al,0x34
  43e098:	add    ecx,ebp
  43e09a:	xor    al,0x34
  43e09c:	add    ecx,ebp
  43e09e:	xor    al,0x34
  43e0a0:	add    ecx,ebp
  43e0a2:	xor    al,0x34
  43e0a4:	add    ecx,ebp
  43e0a6:	xor    al,0x34
  43e0a8:	add    ecx,ebp
  43e0aa:	xor    al,0x34
  43e0ac:	add    ecx,ebp
  43e0ae:	add    BYTE PTR [eax],al
  43e0b0:	xor    al,0x34
  43e0b2:	add    ecx,ebp
  43e0b4:	xor    al,0x34
  43e0b6:	add    ecx,ebp
  43e0b8:	xor    al,0x34
  43e0ba:	add    ecx,ebp
  43e0bc:	xor    al,0x34
  43e0be:	add    ecx,ebp
  43e0c0:	xor    al,0x34
  43e0c2:	add    ecx,ebp
  43e0c4:	xor    al,0x34
  43e0c6:	add    ecx,ebp
  43e0c8:	xor    al,0x34
  43e0ca:	add    ecx,ebp
  43e0cc:	xor    al,0x34
  43e0ce:	add    ecx,ebp
  43e0d0:	xor    al,0x34
  43e0d2:	add    ecx,ebp
  43e0d4:	xor    al,0x34
  43e0d6:	add    ecx,ebp
  43e0d8:	xor    al,0x34
  43e0da:	add    ecx,ebp
  43e0dc:	xor    al,0x34
  43e0de:	add    ecx,ebp
  43e0e0:	xor    al,0x34
  43e0e2:	add    ecx,ebp
  43e0e4:	xor    al,0x34
  43e0e6:	add    ecx,ebp
  43e0e8:	xor    al,0x34
  43e0ea:	add    ecx,ebp
  43e0ec:	xor    al,0x34
  43e0ee:	add    DWORD PTR [eax],eax
  43e0f0:	sahf   
  43e0f1:	xor    eax,0x358e0001
  43e0f6:	add    DWORD PTR [eax],eax
  43e0f8:	mov    ?,WORD PTR ds:0x359e0001
  43e0fe:	add    DWORD PTR [eax],eax
  43e100:	sahf   
  43e101:	xor    eax,0x358e0001
  43e106:	add    DWORD PTR [eax],eax
  43e108:	rcr    BYTE PTR [edi+0x37],1
  43e10b:	mov    ebx,0x44b88e0f
  43e110:	pop    esi
  43e111:	xor    eax,0x1
  43e116:	dec    esi
  43e117:	xor    eax,0x8fca0001
  43e11c:	aaa    
  43e11d:	add    dl,cl
  43e11f:	(bad)  
  43e120:	aaa    
  43e121:	add    BYTE PTR [esi],bh
  43e123:	sub    eax,DWORD PTR [esi+0x1354e19]
  43e129:	add    BYTE PTR [esi+0x35],cl
  43e12c:	add    DWORD PTR [eax],eax
  43e12e:	push   ds
  43e12f:	xor    eax,0x391e0001
  43e134:	add    DWORD PTR [eax],eax
  43e136:	xadd   eax,edi
  43e139:	call   FWORD PTR [ebx]
  43e13b:	xor    eax,0x35150001
  43e140:	add    DWORD PTR [eax],eax
  43e142:	pop    esi
  43e143:	cmp    BYTE PTR [ecx],al
  43e145:	add    BYTE PTR [ecx-0x71fffec8],ah
  43e14b:	cmp    BYTE PTR [ecx],al
  43e14d:	add    BYTE PTR [edi+0x75],bl
  43e150:	clc    
  43e151:	call   esi
  43e153:	xor    al,0x1
  43e155:	add    dh,ah
  43e157:	xor    al,0x1
  43e159:	add    dh,ch
  43e15b:	xor    al,0x1
  43e15d:	add    cl,ah
  43e15f:	xor    al,0x1
  43e161:	add    dh,bl
  43e163:	xor    al,0x1
  43e165:	add    dh,cl
  43e167:	xor    al,0x1
  43e169:	add    BYTE PTR [edi],dh
  43e16b:	mov    esp,DWORD PTR [ebx-0x3]
  43e16e:	jo     0x43e0fb
  43e170:	add    eax,DWORD PTR [eax]
  43e172:	aaa    
  43e173:	mov    eax,DWORD PTR [ebx]
  43e175:	add    BYTE PTR [edi],dh
  43e177:	mov    ecx,ebx
  43e179:	add    al,BYTE PTR [eax]
  43e17b:	add    bh,dh
  43e17d:	mov    al,BYTE PTR [ebx]
  43e17f:	add    BYTE PTR [edi],dh
  43e181:	mov    eax,DWORD PTR [ebx]
  43e183:	add    BYTE PTR [edi],dh
  43e185:	mov    esi,DWORD PTR [ebp+0x38af707]
  43e18b:	add    BYTE PTR [edi],dh
  43e18d:	mov    eax,DWORD PTR [ebx]
  43e18f:	add    BYTE PTR [edi],dh
  43e191:	retf   
  43e192:	xchg   edi,eax
  43e193:	or     esi,edi
  43e195:	mov    al,BYTE PTR [ebx]
  43e197:	add    BYTE PTR [edi],dh
  43e199:	mov    eax,DWORD PTR [ebx]
  43e19b:	add    BYTE PTR [edi],dh
  43e19d:	fwait
  43e19e:	mov    esi,0x38af708
  43e1a3:	add    BYTE PTR [edi],dh
  43e1a5:	mov    eax,DWORD PTR [ebx]
  43e1a7:	add    BYTE PTR [edi],dh
  43e1a9:	aaa    
  43e1aa:	mov    ecx,0x38af70d
  43e1af:	add    BYTE PTR [edi],dh
  43e1b1:	lea    eax,[ebx]
  43e1b3:	add    BYTE PTR [edi+0x77119bdf],dh
  43e1b9:	lea    eax,[ebx]
  43e1bb:	add    BYTE PTR [edi],dh
  43e1bd:	lea    eax,[ebx]
  43e1bf:	add    BYTE PTR [edi+0x11],dl
  43e1c2:	adc    BYTE PTR [esi],0x77
  43e1c5:	lea    eax,[ebx]
  43e1c7:	add    BYTE PTR [edi],dh
  43e1c9:	(bad)  
  43e1ca:	(bad)  
  43e1cb:	mov    eax,0x339182ee
  43e1d0:	ja     0x43e15f
  43e1d2:	add    eax,DWORD PTR [eax]
  43e1d4:	xchg   esi,eax
  43e1d5:	test   al,0xc7
  43e1d7:	leave  
  43e1d8:	cmp    al,0xcb
  43e1da:	into   
  43e1db:	dec    ecx
  43e1dc:	ja     0x43e24b
  43e1de:	mov    bl,0x99
  43e1e0:	add    BYTE PTR [eax],al
  43e1e2:	mov    bh,BYTE PTR [ebp-0x1a]
  43e1e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e1e6:	call   0x39f4:0x59a02534
  43e1ed:	pusha  
  43e1ee:	mov    esp,0xbd1d4559
  43e1f3:	out    dx,eax
  43e1f4:	lock scas al,BYTE PTR es:[edi]
  43e1f6:	sub    esi,esp
  43e1f8:	mov    eax,0xaaa98799
  43e1fd:	adc    DWORD PTR [ecx+esi*4],esi
  43e200:	add    BYTE PTR [ebx-0x52],dh
  43e203:	hlt    
  43e204:	xor    BYTE PTR [edx-0x7bf30758],al
  43e20a:	xor    ch,BYTE PTR [edi-0xb3e7a98]
  43e210:	dec    esi
  43e211:	inc    DWORD PTR [ebp-0xe3de92a]
  43e217:	push   ds
  43e218:	add    ch,0x73
  43e21b:	hlt    
  43e21c:	xchg   cl,cl
  43e21e:	js     0x43e1d0
  43e220:	add    BYTE PTR [ebx-0x69cc0887],al
  43e226:	nop
  43e227:	cmc    
  43e228:	popf   
  43e229:	xchg   ebx,ebx
  43e22b:	call   0x87f1dd2e
  43e230:	pop    ecx
  43e231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e232:	lods   al,BYTE PTR ds:[esi]
  43e233:	repnz test edi,ebx
  43e236:	mov    esi,0x2b9fc05d
  43e23b:	mov    esi,DWORD PTR [edi]
  43e23d:	outs   dx,BYTE PTR ds:[esi]
  43e23e:	imul   esi,ebx,0x9386aa88
  43e244:	xchg   ebp,eax
  43e245:	mov    dh,0x0
  43e247:	add    BYTE PTR [ecx+0x4f],dl
  43e24a:	adc    WORD PTR [esi-0x8],0xffd1
  43e24f:	adc    esp,DWORD PTR [esi]
  43e251:	retf   0x7291
  43e254:	inc    eax
  43e255:	xchg   ebx,eax
  43e256:	pushf  
  43e257:	enter  0xf7e2,0x92
  43e25b:	imul   eax,DWORD PTR [ebx+eax*4],0xe9f9ad6e
  43e262:	add    bl,dh
  43e264:	test   eax,0xe7043d6b
  43e269:	jae    0x43e1fc
  43e26b:	test   DWORD PTR [esi-0x33],0x9f9200a0
  43e272:	ds in  al,0x59
  43e275:	and    eax,0xb4b5d405
  43e27a:	ins    DWORD PTR es:[edi],dx
  43e27b:	mov    edi,0xa145f66d
  43e280:	repnz xchg edi,eax
  43e282:	lahf   
  43e283:	pop    edx
  43e284:	mov    WORD PTR [edi+0x2e],es
  43e287:	jno    0x43e28a
  43e289:	mov    dl,BYTE PTR [ebx-0x4c]
  43e28c:	setb   BYTE PTR [ebp-0x24]
  43e290:	jno    0x43e26b
  43e292:	cmp    esp,DWORD PTR [edx-0x6b]
  43e295:	mov    al,0x5a
  43e297:	push   cs
  43e298:	or     dl,dl
  43e29a:	lock dec eax
  43e29c:	pop    ebx
  43e29d:	mov    esi,0x43c7444c
  43e2a2:	bound  ebx,QWORD PTR [eax]
  43e2a4:	nop
  43e2a5:	mov    bh,0x5a
  43e2a7:	bound  ebp,QWORD PTR [ebx+0x51]
  43e2aa:	push   esi
  43e2ab:	jo     0x43e2ad
  43e2ad:	add    BYTE PTR [ebp+0x67],bh
  43e2b0:	pop    edi
  43e2b1:	xchg   ebx,eax
  43e2b2:	mov    eax,ds:0xb60ef386
  43e2b7:	lahf   
  43e2b8:	enter  0x82c,0xfe
  43e2bc:	xor    ax,0xa8ec
  43e2c0:	(bad)
  43e2c4:	push   ecx
  43e2c5:	dec    ecx
  43e2c6:	call   DWORD PTR [edx+0x6e]
  43e2c9:	jmp    0xb4451702
  43e2ce:	lock push 0xffffffc4
  43e2d1:	lods   eax,DWORD PTR ds:[esi]
  43e2d2:	call   0xe9a740
  43e2d7:	mov    DWORD PTR [edi],esi
  43e2d9:	sbb    al,ch
  43e2db:	aaa    
  43e2dc:	rol    BYTE PTR [eax],1
  43e2de:	ins    DWORD PTR es:[edi],dx
  43e2df:	inc    ecx
  43e2e0:	cmp    al,0xa
  43e2e2:	rcr    DWORD PTR [eax],0xf0
  43e2e5:	aas    
  43e2e6:	and    al,0x4c
  43e2e8:	fild   QWORD PTR cs:[ecx]
  43e2eb:	lods   eax,DWORD PTR ds:[esi]
  43e2ec:	nop
  43e2ed:	outs   dx,BYTE PTR ds:[esi]
  43e2ee:	mov    esp,0xd3ff2b8
  43e2f3:	push   0xd7a7652b
  43e2f8:	dec    edi
  43e2f9:	pop    ss
  43e2fa:	shl    DWORD PTR [edx-0x1a],0x3f
  43e2fe:	ds and al,0x16
  43e301:	test   cl,dl
  43e303:	and    BYTE PTR [edx-0x54],al
  43e306:	arpl   WORD PTR [edx+ebp*8],cx
  43e309:	aas    
  43e30a:	fimul  WORD PTR [ebx]
  43e30c:	mov    dl,0x69
  43e30e:	stos   BYTE PTR es:[edi],al
  43e30f:	add    al,0x3
  43e311:	mov    ebp,0xab610000
  43e316:	fdivr  QWORD PTR [edi]
  43e318:	lea    edi,[esi-0x45]
  43e31b:	inc    edx
  43e31c:	(bad)  
  43e31d:	(bad)  
  43e31e:	rcl    BYTE PTR [ecx+edi*8+0xc3fe05a],cl
  43e325:	mov    esi,0xb5bfcefa
  43e32a:	push   es
  43e32b:	ja     0x43e357
  43e32d:	adc    ah,ah
  43e32f:	aas    
  43e330:	sub    esp,esp
  43e332:	dec    ebp
  43e333:	loope  0x43e340
  43e335:	ins    BYTE PTR es:[edi],dx
  43e336:	mov    ecx,0xbed6b394
  43e33b:	aas    
  43e33c:	lods   al,BYTE PTR ds:[esi]
  43e33d:	ins    BYTE PTR es:[edi],dx
  43e33e:	inc    esp
  43e33f:	cmp    esp,DWORD PTR [ebx-0x14]
  43e342:	retf   
  43e343:	adc    al,0x98
  43e345:	call   0x94af:0x54a83fa8
  43e34c:	pop    es
  43e34d:	in     al,dx
  43e34e:	stos   DWORD PTR es:[edi],eax
  43e34f:	push   ds
  43e350:	pop    edi
  43e351:	ins    DWORD PTR es:[edi],dx
  43e352:	xchg   ebx,eax
  43e353:	aas    
  43e354:	repnz xchg ecx,eax
  43e356:	shl    edx,0x37
  43e359:	out    0x7a,eax
  43e35b:	xor    al,0x26
  43e35d:	sub    al,0x8c
  43e35f:	jne    0x43e381
  43e361:	sub    al,0x5a
  43e363:	push   edi
  43e364:	idiv   BYTE PTR [esp+ebp*2+0x4c]
  43e368:	push   ebx
  43e369:	pop    ecx
  43e36a:	jp     0x43e3c4
  43e36c:	or     BYTE PTR [esi-0x734dd75a],ah
  43e372:	jne    0x43e301
  43e374:	mov    dl,0x87
  43e376:	mov    edx,0x70000043
  43e37b:	das    
  43e37c:	clc    
  43e37d:	mov    ds:0x206a239e,al
  43e382:	lea    esi,[ebp+0x6b]
  43e385:	and    eax,0x9e67c058
  43e38a:	fwait
  43e38b:	push   es
  43e38c:	sub    DWORD PTR [ecx+esi*8+0x1a],edi
  43e390:	loop   0x43e3e4
  43e392:	inc    ecx
  43e393:	stos   BYTE PTR es:[edi],al
  43e394:	cmp    al,BYTE PTR [edx]
  43e396:	imul   ebp,DWORD PTR [ecx+0x4f],0x71
  43e39a:	mov    ah,0x25
  43e39c:	mov    ?,WORD PTR [esi+0x2a]
  43e39f:	cld    
  43e3a0:	mov    edx,0x22b13e35
  43e3a5:	and    esi,esp
  43e3a7:	mov    ebx,0x6c13abc3
  43e3ac:	test   dh,cl
  43e3ae:	wbinvd 
  43e3b0:	inc    eax
  43e3b1:	xchg   ecx,eax
  43e3b2:	jg     0x43e33e
  43e3b4:	rcl    al,0xfc
  43e3b7:	mov    esi,0x863f578b
  43e3bc:	ins    BYTE PTR es:[edi],dx
  43e3bd:	out    0x14,eax
  43e3bf:	adc    al,0x5e
  43e3c1:	cld    
  43e3c2:	pop    ebp
  43e3c3:	retf   
  43e3c4:	jg     0x43e408
  43e3c6:	jne    0x43e35a
  43e3c8:	ins    DWORD PTR es:[edi],dx
  43e3c9:	xchg   esi,eax
  43e3ca:	mov    bh,BYTE PTR [edx-0x26]
  43e3cd:	sub    DWORD PTR [ebp+0x7e],ecx
  43e3d0:	sub    al,0x1c
  43e3d2:	in     eax,0x34
  43e3d4:	retf   
  43e3d5:	fimul  DWORD PTR [edx-0x76]
  43e3d8:	xor    BYTE PTR [edx+ecx*4+0x86483d],dl
  43e3df:	add    BYTE PTR [esi-0x6a25d18c],ch
  43e3e5:	mov    dh,0x47
  43e3e7:	popa   
  43e3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e3e9:	inc    esi
  43e3ea:	mov    WORD PTR [ebx],gs
  43e3ec:	mov    eax,ds:0xae514725
  43e3f1:	lock adc BYTE PTR [edi+0x30],dh
  43e3f5:	dec    eax
  43e3f6:	add    eax,0x1049d34d
  43e3fb:	clc    
  43e3fc:	jmp    esi
  43e3fe:	jg     0x43e3cd
  43e400:	adc    edx,DWORD PTR [ecx+0x57]
  43e403:	pop    esp
  43e404:	cmp    edx,eax
  43e406:	sub    ebp,ebx
  43e408:	(bad)  
  43e40a:	inc    edx
  43e40b:	stos   DWORD PTR es:[edi],eax
  43e40c:	jbe    0x43e428
  43e40e:	push   eax
  43e40f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e410:	mov    al,0xde
  43e412:	mov    ss,WORD PTR [esp+edi*1+0x1a82b9bb]
  43e419:	sbb    al,0xa8
  43e41b:	dec    edx
  43e41c:	aam    0x15
  43e41e:	or     eax,0xdfcbbf82
  43e423:	xchg   edi,eax
  43e424:	frstor [esi+eax*1]
  43e427:	lock jle 0x43e3c5
  43e42a:	daa    
  43e42b:	sar    DWORD PTR [eax+0x30],1
  43e42e:	or     eax,0xea2e6065
  43e433:	add    esi,DWORD PTR [edi]
  43e435:	xor    al,0xea
  43e437:	add    esi,DWORD PTR [edi]
  43e439:	xor    al,0xea
  43e43b:	add    esi,DWORD PTR [edi]
  43e43d:	xor    al,0x42
  43e43f:	inc    edx
  43e440:	ja     0x43e476
  43e442:	repnz inc edx
  43e444:	add    BYTE PTR [eax],al
  43e446:	ja     0x43e47c
  43e448:	jmp    0xd8781b4f
  43e44d:	add    dh,BYTE PTR [edi]
  43e44f:	xor    al,0x1
  43e451:	out    0x34,al
  43e453:	xor    al,0x1
  43e455:	sar    DWORD PTR [ecx-0xc],0x0
  43e459:	dec    ecx
  43e45a:	je     0x43e450
  43e45c:	add    cl,ch
  43e45e:	xor    al,0x34
  43e460:	add    edi,esi
  43e462:	xor    al,0x34
  43e464:	add    esi,ebx
  43e466:	xor    al,0x34
  43e468:	add    ecx,ebp
  43e46a:	xor    al,0x34
  43e46c:	add    ecx,esp
  43e46e:	jbe    0x43e464
  43e470:	add    cl,ch
  43e472:	xor    al,0x34
  43e474:	add    edx,ebx
  43e476:	xor    al,0x34
  43e478:	add    esi,ebp
  43e47a:	xor    al,0x34
  43e47c:	add    ecx,ebp
  43e47e:	xor    al,0x34
  43e480:	add    eax,ebp
  43e482:	xor    al,0x34
  43e484:	add    DWORD PTR ds:0xe900f45f,eax
  43e48a:	xor    al,0x34
  43e48c:	add    ecx,ebp
  43e48e:	xor    al,0x34
  43e490:	add    DWORD PTR [ebp-0x4a],ebx
  43e493:	cmp    al,BYTE PTR [ecx]
  43e495:	stc    
  43e496:	dec    eax
  43e497:	hlt    
  43e498:	add    BYTE PTR [ebp-0x4a],dh
  43e49b:	cmp    al,BYTE PTR [ecx]
  43e49d:	shr    DWORD PTR [eax],1
  43e49f:	hlt    
  43e4a0:	add    BYTE PTR [ecx-0x4a],ah
  43e4a3:	cmp    al,BYTE PTR [ecx]
  43e4a5:	imul   esi,DWORD PTR [esi+0x81013a],0x13ab700
  43e4af:	jns    0x43e468
  43e4b1:	cmp    al,BYTE PTR [ecx]
  43e4b3:	xor    DWORD PTR [edi-0x4876fec6],0xb641013a
  43e4bd:	cmp    al,BYTE PTR [ecx]
  43e4bf:	cmp    DWORD PTR [esi-0x49d2fec7],esi
  43e4c5:	cmp    DWORD PTR [ecx],eax
  43e4c7:	adc    DWORD PTR [esi+0x1e000139],esi
  43e4cd:	mov    ch,0x37
  43e4cf:	add    BYTE PTR [esi],ah
  43e4d1:	mov    bl,0x37
  43e4d3:	add    dl,ah
  43e4d5:	mov    ah,0x37
  43e4d7:	add    dh,bl
  43e4d9:	mov    ah,0x37
  43e4db:	add    BYTE PTR [esi],al
  43e4dd:	mov    ch,0x37
  43e4df:	add    dl,dl
  43e4e1:	mov    bl,0x37
  43e4e3:	add    dl,cl
  43e4e5:	mov    bl,0x37
  43e4e7:	add    BYTE PTR [esi-0x6dffc84d],dh
  43e4ed:	mov    bl,0x37
  43e4ef:	add    BYTE PTR [edx-0x6dffc84d],ch
  43e4f5:	mov    bl,0x37
  43e4f7:	add    BYTE PTR [edx-0x5dffc84d],bl
  43e4fd:	mov    bl,0x37
  43e4ff:	add    BYTE PTR [edx],bl
  43e501:	mov    bl,0x37
  43e503:	add    BYTE PTR [esi-0x2dffc84d],al
  43e509:	mov    bl,0x37
  43e50b:	add    dh,ah
  43e50d:	mov    bl,0x37
  43e50f:	add    BYTE PTR [eax],al
  43e511:	add    BYTE PTR [edx],bh
  43e513:	mov    dh,0x37
  43e515:	add    BYTE PTR [esi-0x4d],ah
  43e518:	aaa    
  43e519:	add    BYTE PTR [edx-0x4a],dl
  43e51c:	aaa    
  43e51d:	add    BYTE PTR [edx],ah
  43e51f:	mov    dh,0x37
  43e521:	add    BYTE PTR [edx],ah
  43e523:	mov    dh,0x37
  43e525:	add    BYTE PTR [esi],al
  43e527:	mov    dh,0x37
  43e529:	add    dl,ch
  43e52b:	mov    ch,0x37
  43e52d:	add    dh,cl
  43e52f:	mov    ch,0x37
  43e531:	add    BYTE PTR [edx-0x65ffc84a],dh
  43e537:	mov    dh,0x37
  43e539:	add    BYTE PTR [edx-0x4a],dh
  43e53c:	aaa    
  43e53d:	add    BYTE PTR [esi],bh
  43e53f:	mov    al,0x37
  43e541:	add    BYTE PTR [edx],cl
  43e543:	mov    al,0x37
  43e545:	add    BYTE PTR [edi],dh
  43e547:	mov    edi,0x9f373f7c
  43e54c:	jl     0x43e58d
  43e54e:	aaa    
  43e54f:	(bad)  
  43e551:	aas    
  43e552:	aaa    
  43e553:	repz jl 0x43e595
  43e556:	aaa    
  43e557:	out    0x7c,eax
  43e559:	aas    
  43e55a:	aaa    
  43e55b:	jg     0x43e4e0
  43e55d:	aas    
  43e55e:	aaa    
  43e55f:	das    
  43e560:	jge    0x43e5a1
  43e562:	aaa    
  43e563:	scas   eax,DWORD PTR es:[edi]
  43e564:	cmp    eax,DWORD PTR [eax+0x37]
  43e567:	mov    ebx,0xe337403b
  43e56c:	cmp    eax,DWORD PTR [eax+0x37]
  43e56f:	out    0x3b,eax
  43e571:	inc    eax
  43e572:	aaa    
  43e573:	add    edi,DWORD PTR [eax+eax*2]
  43e576:	add    BYTE PTR [eax],al
  43e578:	aaa    
  43e579:	ja     0x43e5b5
  43e57b:	inc    eax
  43e57c:	aaa    
  43e57d:	sub    edi,DWORD PTR [eax+eax*2]
  43e580:	aaa    
  43e581:	mov    ebx,0xcf37403a
  43e586:	cmp    al,BYTE PTR [eax+0x37]
  43e589:	sbb    edi,DWORD PTR [eax+eax*2]
  43e58c:	aaa    
  43e58d:	sub    edi,DWORD PTR [eax+eax*2]
  43e590:	aaa    
  43e591:	jg     0x43e5cd
  43e593:	inc    eax
  43e594:	aaa    
  43e595:	aaa    
  43e596:	cmp    eax,DWORD PTR [eax+0x37]
  43e599:	repz cmp al,BYTE PTR [eax+0x37]
  43e59d:	and    edi,DWORD PTR [ebx]
  43e59f:	inc    eax
  43e5a0:	aaa    
  43e5a1:	(bad)  
  43e5a3:	inc    eax
  43e5a4:	aaa    
  43e5a5:	out    dx,eax
  43e5a6:	cmp    al,BYTE PTR [eax+0x37]
  43e5a9:	(bad)  
  43e5ab:	inc    eax
  43e5ac:	aaa    
  43e5ad:	mov    ds:0xa3374039,eax
  43e5b2:	cmp    DWORD PTR [eax+0x37],eax
  43e5b5:	fwait
  43e5b6:	cmp    DWORD PTR [eax+0x37],eax
  43e5b9:	mov    bh,0x39
  43e5bb:	inc    eax
  43e5bc:	aaa    
  43e5bd:	arpl   WORD PTR [ecx],di
  43e5bf:	inc    eax
  43e5c0:	aaa    
  43e5c1:	xor    al,0xde
  43e5c3:	cmp    BYTE PTR [edi+0x34],dh
  43e5c6:	mov    edx,0x92347738
  43e5cb:	cmp    BYTE PTR [edi+0x34],dh
  43e5ce:	jp     0x43e608
  43e5d0:	ja     0x43e606
  43e5d2:	inc    edx
  43e5d3:	cmp    DWORD PTR [edi+0x34],esi
  43e5d6:	dec    edx
  43e5d7:	cmp    DWORD PTR [edi+0x34],esi
  43e5da:	cmp    DWORD PTR es:[eax],eax
  43e5dd:	add    BYTE PTR [edi+0x34],dh
  43e5e0:	(bad)  
  43e5e1:	cmp    BYTE PTR [edi+0x34],dh
  43e5e4:	cli    
  43e5e5:	cmp    BYTE PTR [edi+0x34],dh
  43e5e8:	call   0x7737:0x86347737
  43e5ef:	xor    al,0xba
  43e5f1:	aaa    
  43e5f2:	ja     0x43e628
  43e5f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e5f5:	aaa    
  43e5f6:	ja     0x43e62c
  43e5f8:	push   edx
  43e5f9:	aaa    
  43e5fa:	ja     0x43e630
  43e5fc:	jmp    0x3703:0xea343703
  43e603:	xor    al,0xea
  43e605:	add    esi,DWORD PTR [edi]
  43e607:	xor    al,0xea
  43e609:	add    esi,DWORD PTR [edi]
  43e60b:	xor    al,0xea
  43e60d:	add    esi,DWORD PTR [edi]
  43e60f:	xor    al,0xe9
  43e611:	add    eax,0x3ea3459
  43e616:	aaa    
  43e617:	xor    al,0xea
  43e619:	add    esi,DWORD PTR [edi]
  43e61b:	xor    al,0xea
  43e61d:	add    esi,DWORD PTR [edi]
  43e61f:	xor    al,0x6f
  43e621:	lods   eax,DWORD PTR ds:[esi]
  43e622:	cmp    DWORD PTR [edx+ebp*8],esi
  43e625:	add    esi,DWORD PTR [edi]
  43e627:	xor    al,0xea
  43e629:	add    esi,DWORD PTR [edi]
  43e62b:	xor    al,0xea
  43e62d:	add    esi,DWORD PTR [edi]
  43e62f:	xor    al,0xd8
  43e631:	scas   al,BYTE PTR es:[edi]
  43e632:	sbb    DWORD PTR [edx+ebp*8],esi
  43e635:	add    esi,DWORD PTR [edi]
  43e637:	xor    al,0xea
  43e639:	add    esi,DWORD PTR [edi]
  43e63b:	xor    al,0x1
  43e63d:	jmp    0x84451a76
  43e642:	add    BYTE PTR [eax],al
  43e644:	mov    DWORD PTR [esi],esi
  43e646:	add    ecx,ebp
  43e648:	xor    al,0x34
  43e64a:	add    ecx,ebp
  43e64c:	xor    al,0x34
  43e64e:	add    ecx,ebp
  43e650:	xor    al,0x34
  43e652:	add    ebx,esp
  43e654:	shl    BYTE PTR ds:0x3434e901,1
  43e65a:	add    ecx,ebp
  43e65c:	xor    al,0x34
  43e65e:	add    ecx,ebp
  43e660:	xor    al,0x34
  43e662:	add    DWORD PTR [esi-0x31],edi
  43e665:	xor    eax,0x3434e901
  43e66a:	add    ecx,ebp
  43e66c:	xor    al,0x34
  43e66e:	add    ecx,ebp
  43e670:	xor    al,0x34
  43e672:	add    DWORD PTR [ebx-0x16feca71],ebx
  43e678:	xor    al,0x34
  43e67a:	add    ecx,ebp
  43e67c:	xor    al,0x34
  43e67e:	add    ecx,ebp
  43e680:	xor    al,0x34
  43e682:	add    DWORD PTR [ebx-0x16feca6f],edi
  43e688:	xor    al,0x34
  43e68a:	add    ecx,ebp
  43e68c:	xor    al,0x34
  43e68e:	add    ecx,ebp
  43e690:	xor    al,0x34
  43e692:	add    DWORD PTR [ecx-0x30],ebp
  43e695:	xor    eax,0x3434e901
  43e69a:	add    ecx,ebp
  43e69c:	xor    al,0x34
  43e69e:	add    ecx,ebp
  43e6a0:	xor    al,0x34
  43e6a2:	add    DWORD PTR [ecx-0x30],edi
  43e6a5:	xor    eax,0xe901
  43e6aa:	xor    al,0x34
  43e6ac:	add    ecx,ebp
  43e6ae:	xor    al,0x34
  43e6b0:	add    ecx,ebp
  43e6b2:	xor    al,0x34
  43e6b4:	add    esp,esp
  43e6b6:	mov    ?,WORD PTR ds:0x325e0001
  43e6bc:	add    DWORD PTR [eax],eax
  43e6be:	pop    esi
  43e6bf:	xor    al,BYTE PTR [ecx]
  43e6c1:	add    BYTE PTR [esi+0x32],cl
  43e6c4:	add    DWORD PTR [eax],eax
  43e6c6:	imul   ecx,esp,0x36
  43e6c9:	add    BYTE PTR [esi],bl
  43e6cb:	xor    al,BYTE PTR [ecx]
  43e6cd:	add    BYTE PTR [esi],bl
  43e6cf:	xor    al,BYTE PTR [ecx]
  43e6d1:	add    BYTE PTR [esi],cl
  43e6d3:	xor    al,BYTE PTR [ecx]
  43e6d5:	add    BYTE PTR [ebx-0x36],al
  43e6d8:	add    BYTE PTR ss:[esi],bl
  43e6db:	xor    al,BYTE PTR [ecx]
  43e6dd:	add    BYTE PTR [esi],bl
  43e6df:	xor    al,BYTE PTR [ecx]
  43e6e1:	add    BYTE PTR [esi],cl
  43e6e3:	xor    al,BYTE PTR [ecx]
  43e6e5:	add    BYTE PTR [eax+0x25],al
  43e6e8:	cmp    BYTE PTR [eax],al
  43e6ea:	fidiv  WORD PTR [ecx]
  43e6ec:	add    DWORD PTR [eax],eax
  43e6ee:	fidiv  WORD PTR [ecx]
  43e6f0:	add    DWORD PTR [eax],eax
  43e6f2:	into   
  43e6f3:	xor    DWORD PTR [ecx],eax
  43e6f5:	add    BYTE PTR [esi-0x21ffc7da],dl
  43e6fb:	xor    DWORD PTR [ecx],eax
  43e6fd:	add    dh,bl
  43e6ff:	xor    DWORD PTR [ecx],eax
  43e701:	add    dh,cl
  43e703:	xor    DWORD PTR [ecx],eax
  43e705:	add    ah,cl
  43e707:	and    edi,DWORD PTR [eax]
  43e709:	add    BYTE PTR [esi+0x131],bl
  43e70f:	add    BYTE PTR [esi-0x71fffecf],bl
  43e715:	xor    DWORD PTR [ecx],eax
  43e717:	add    BYTE PTR [edx-0x61ffc7dd],al
  43e71d:	xor    DWORD PTR [ecx],eax
  43e71f:	add    BYTE PTR [esi-0x71fffecf],bl
  43e725:	xor    DWORD PTR [ecx],eax
  43e727:	add    BYTE PTR [edx],cl
  43e729:	and    edi,DWORD PTR [eax]
  43e72b:	add    BYTE PTR [esi+0x31],bl
  43e72e:	add    DWORD PTR [eax],eax
  43e730:	pop    esi
  43e731:	xor    DWORD PTR [ecx],eax
  43e733:	add    BYTE PTR [edi],dh
  43e735:	mov    eax,DWORD PTR [ebx]
  43e737:	add    BYTE PTR [edi],dh
  43e739:	dec    esp
  43e73a:	push   es
  43e73b:	ds aaa 
  43e73d:	mov    eax,DWORD PTR [ebx]
  43e73f:	add    BYTE PTR [edi],dh
  43e741:	mov    eax,DWORD PTR [ebx]
  43e743:	add    BYTE PTR [edi],dh
  43e745:	mov    eax,DWORD PTR [ebx]
  43e747:	add    BYTE PTR [edi],dh
  43e749:	pop    esp
  43e74a:	add    al,0x3e
  43e74c:	aaa    
  43e74d:	mov    eax,DWORD PTR [ebx]
  43e74f:	add    BYTE PTR [edi],dh
  43e751:	mov    eax,DWORD PTR [ebx]
  43e753:	add    BYTE PTR [edi],dh
  43e755:	mov    eax,DWORD PTR [ebx]
  43e757:	add    BYTE PTR [edi],dh
  43e759:	jbe    0x43e765
  43e75b:	ds aaa 
  43e75d:	mov    eax,DWORD PTR [ebx]
  43e75f:	add    BYTE PTR [edi],dh
  43e761:	mov    eax,DWORD PTR [ebx]
  43e763:	add    BYTE PTR [edi],dh
  43e765:	mov    eax,DWORD PTR [ebx]
  43e767:	add    BYTE PTR [edi],dh
  43e769:	inc    eax
  43e76a:	or     al,0x3e
  43e76c:	aaa    
  43e76d:	mov    eax,DWORD PTR [ebx]
  43e76f:	add    BYTE PTR [edi],dh
  43e771:	mov    eax,DWORD PTR [ebx]
  43e773:	add    BYTE PTR [eax],al
  43e775:	add    BYTE PTR [edi],dh
  43e777:	mov    eax,DWORD PTR [ebx]
  43e779:	add    BYTE PTR [edi],dh
  43e77b:	loop   0x43e788
  43e77d:	ds aaa 
  43e77f:	mov    eax,DWORD PTR [ebx]
  43e781:	add    BYTE PTR [edi],dh
  43e783:	mov    eax,DWORD PTR [ebx]
  43e785:	add    BYTE PTR [edi],dh
  43e787:	mov    eax,DWORD PTR [ebx]
  43e789:	add    BYTE PTR [edi],dh
  43e78b:	mov    edi,?
  43e78d:	cmp    eax,0x38b37
  43e792:	aaa    
  43e793:	mov    eax,DWORD PTR [ebx]
  43e795:	add    BYTE PTR [edi],dh
  43e797:	mov    eax,DWORD PTR [ebx]
  43e799:	add    BYTE PTR [edi],dh
  43e79b:	into   
  43e79c:	(bad)  
  43e79d:	cmp    eax,0x38b37
  43e7a2:	aaa    
  43e7a3:	mov    eax,DWORD PTR [ebx]
  43e7a5:	add    BYTE PTR [edi],dh
  43e7a7:	mov    eax,DWORD PTR [ebx]
  43e7a9:	add    BYTE PTR [edi],dh
  43e7ab:	fisttp DWORD PTR [eax]
  43e7ad:	ds aaa 
  43e7af:	xor    al,0xea
  43e7b1:	add    esi,DWORD PTR [edi]
  43e7b3:	xor    al,0xea
  43e7b5:	add    esi,DWORD PTR [edi]
  43e7b7:	xor    al,0xea
  43e7b9:	add    esi,DWORD PTR [edi]
  43e7bb:	xor    al,0x31
  43e7bd:	or     BYTE PTR [ecx],dl
  43e7bf:	xor    al,0xea
  43e7c1:	add    esi,DWORD PTR [edi]
  43e7c3:	xor    al,0xea
  43e7c5:	add    esi,DWORD PTR [edi]
  43e7c7:	xor    al,0xea
  43e7c9:	add    esi,DWORD PTR [edi]
  43e7cb:	xor    al,0xc7
  43e7cd:	or     BYTE PTR [ecx+0x34],dh
  43e7d0:	jmp    0x3703:0xea343703
  43e7d7:	xor    al,0xea
  43e7d9:	add    eax,DWORD PTR [eax]
  43e7db:	add    BYTE PTR [edi],dh
  43e7dd:	xor    al,0x3d
  43e7df:	or     DWORD PTR [ecx+0x34],edx
  43e7e2:	jmp    0x3703:0xea343703
  43e7e9:	xor    al,0xea
  43e7eb:	add    esi,DWORD PTR [edi]
  43e7ed:	xor    al,0x78
  43e7ef:	or     BYTE PTR [ecx],dh
  43e7f1:	xor    al,0xea
  43e7f3:	add    esi,DWORD PTR [edi]
  43e7f5:	xor    al,0xea
  43e7f7:	add    esi,DWORD PTR [edi]
  43e7f9:	xor    al,0xea
  43e7fb:	add    esi,DWORD PTR [edi]
  43e7fd:	xor    al,0xdb
  43e7ff:	add    eax,0x3ea3411
  43e804:	aaa    
  43e805:	xor    al,0xea
  43e807:	add    esi,DWORD PTR [edi]
  43e809:	xor    al,0xea
  43e80b:	add    esi,DWORD PTR [edi]
  43e80d:	xor    al,0x6a
  43e80f:	add    eax,0x3ea3471
  43e814:	aaa    
  43e815:	xor    al,0xea
  43e817:	add    esi,DWORD PTR [edi]
  43e819:	xor    al,0xea
  43e81b:	add    esi,DWORD PTR [edi]
  43e81d:	xor    al,0x15
  43e81f:	add    eax,0x3ea3451
  43e824:	aaa    
  43e825:	xor    al,0xea
  43e827:	add    esi,DWORD PTR [edi]
  43e829:	xor    al,0x1
  43e82b:	jmp    0xce451c64
  43e830:	cmp    DWORD PTR [edx],esi
  43e832:	add    ecx,ebp
  43e834:	xor    al,0x34
  43e836:	add    ecx,ebp
  43e838:	xor    al,0x34
  43e83a:	add    ecx,ebp
  43e83c:	xor    al,0x34
  43e83e:	add    ecx,ebx
  43e840:	add    BYTE PTR [eax],al
  43e842:	je     0x43e875
  43e844:	add    ecx,ebp
  43e846:	xor    al,0x34
  43e848:	add    ecx,ebp
  43e84a:	xor    al,0x34
  43e84c:	add    ecx,ebp
  43e84e:	xor    al,0x34
  43e850:	add    DWORD PTR [ecx-0xc],ecx
  43e853:	xor    BYTE PTR [ecx],al
  43e855:	jmp    0xe9451c8e
  43e85a:	xor    al,0x34
  43e85c:	add    ecx,ebp
  43e85e:	xor    al,0x34
  43e860:	add    ecx,ecx
  43e862:	sti    
  43e863:	xor    BYTE PTR [ecx],al
  43e865:	jmp    0xe9451c9e
  43e86a:	xor    al,0x34
  43e86c:	add    ecx,ebp
  43e86e:	xor    al,0x34
  43e870:	add    edx,esi
  43e872:	cmc    
  43e873:	xor    BYTE PTR [ecx],al
  43e875:	jmp    0xe9451cae
  43e87a:	xor    al,0x34
  43e87c:	add    ecx,ebp
  43e87e:	xor    al,0x34
  43e880:	add    DWORD PTR [ebx],edx
  43e882:	hlt    
  43e883:	xor    BYTE PTR [ecx],al
  43e885:	jmp    0xe9451cbe
  43e88a:	xor    al,0x34
  43e88c:	add    ecx,ebp
  43e88e:	xor    al,0x34
  43e890:	add    DWORD PTR [eax],esi
  43e892:	je     0x43e8c4
  43e894:	add    ecx,ebp
  43e896:	xor    al,0x34
  43e898:	add    ecx,ebp
  43e89a:	xor    al,0x34
  43e89c:	add    ecx,ebp
  43e89e:	xor    al,0x34
  43e8a0:	add    DWORD PTR [eax+0x74],edx
  43e8a3:	xor    BYTE PTR [ecx],al
  43e8a5:	add    BYTE PTR [eax],al
  43e8a7:	add    BYTE PTR [esi-0x71fffeca],bl
  43e8ad:	add    DWORD PTR ss:[eax],eax
  43e8b0:	mov    ?,WORD PTR [esi]
  43e8b2:	add    DWORD PTR [eax],eax
  43e8b4:	adc    dh,BYTE PTR [esi+0x35]
  43e8b7:	add    BYTE PTR [esi+0x36],bl
  43e8ba:	add    DWORD PTR [eax],eax
  43e8bc:	dec    esi
  43e8bd:	add    DWORD PTR ss:[eax],eax
  43e8c0:	dec    esi
  43e8c1:	add    DWORD PTR ss:[eax],eax
  43e8c4:	mov    eax,ds:0x5e0035b5
  43e8c9:	add    DWORD PTR ss:[eax],eax
  43e8cc:	dec    esi
  43e8cd:	add    DWORD PTR ss:[eax],eax
  43e8d0:	dec    esi
  43e8d1:	add    DWORD PTR ss:[eax],eax
  43e8d4:	(bad)  
  43e8d5:	mov    ch,0x35
  43e8d7:	add    BYTE PTR [esi],bl
  43e8d9:	add    DWORD PTR ss:[eax],eax
  43e8dc:	push   cs
  43e8dd:	add    DWORD PTR ss:[eax],eax
  43e8e0:	push   cs
  43e8e1:	add    DWORD PTR ss:[eax],eax
  43e8e4:	(bad)  
  43e8e5:	mov    dh,0x35
  43e8e7:	add    BYTE PTR [esi],bl
  43e8e9:	add    DWORD PTR ss:[eax],eax
  43e8ec:	push   cs
  43e8ed:	add    DWORD PTR ss:[eax],eax
  43e8f0:	push   cs
  43e8f1:	add    DWORD PTR ss:[eax],eax
  43e8f4:	or     esi,DWORD PTR [ebp+esi*1+0x135de00]
  43e8fb:	add    dh,cl
  43e8fd:	xor    eax,0x35ce0001
  43e902:	add    DWORD PTR [eax],eax
  43e904:	shl    DWORD PTR [ebx+0x35de0035],1
  43e90a:	add    DWORD PTR [eax],eax
  43e90c:	add    BYTE PTR [eax],al
  43e90e:	into   
  43e90f:	xor    eax,0x35ce0001
  43e914:	add    DWORD PTR [eax],eax
  43e916:	popa   
  43e917:	mov    bl,0x35
  43e919:	add    BYTE PTR [esi-0x71fffecb],bl
  43e91f:	xor    eax,0x5b370001
  43e924:	add    eax,DWORD PTR [eax]
  43e926:	aaa    
  43e927:	mov    eax,ds:0x5b373d80
  43e92c:	add    eax,DWORD PTR [eax]
  43e92e:	aaa    
  43e92f:	pop    ebx
  43e930:	add    eax,DWORD PTR [eax]
  43e932:	aaa    
  43e933:	pop    ebx
  43e934:	add    eax,DWORD PTR [eax]
  43e936:	aaa    
  43e937:	fld    DWORD PTR [eax+0x35b373d]
  43e93d:	add    BYTE PTR [edi],dh
  43e93f:	pop    ebx
  43e940:	add    eax,DWORD PTR [eax]
  43e942:	aaa    
  43e943:	pop    ebx
  43e944:	add    eax,DWORD PTR [eax]
  43e946:	aaa    
  43e947:	xor    DWORD PTR [ecx+0x35b373d],eax
  43e94d:	add    BYTE PTR [edi],dh
  43e94f:	pop    ebx
  43e950:	add    eax,DWORD PTR [eax]
  43e952:	aaa    
  43e953:	pop    ebx
  43e954:	add    eax,DWORD PTR [eax]
  43e956:	aaa    
  43e957:	inc    esp
  43e958:	cmp    DWORD PTR ds:0x35b37,0x35b37
  43e962:	aaa    
  43e963:	pop    ebx
  43e964:	add    eax,DWORD PTR [eax]
  43e966:	aaa    
  43e967:	lods   eax,DWORD PTR ds:[esi]
  43e968:	lods   eax,DWORD PTR ds:[esi]
  43e969:	ds aaa 
  43e96b:	pop    ebx
  43e96c:	add    eax,DWORD PTR [eax]
  43e96e:	aaa    
  43e96f:	pop    ebx
  43e970:	add    eax,DWORD PTR [eax]
  43e972:	add    BYTE PTR [eax],al
  43e974:	aaa    
  43e975:	pop    ebx
  43e976:	add    eax,DWORD PTR [eax]
  43e978:	aaa    
  43e979:	data16 scas al,BYTE PTR es:[edi]
  43e97b:	ds aaa 
  43e97d:	pop    ebx
  43e97e:	add    eax,DWORD PTR [eax]
  43e980:	aaa    
  43e981:	pop    ebx
  43e982:	add    eax,DWORD PTR [eax]
  43e984:	aaa    
  43e985:	pop    ebx
  43e986:	add    eax,DWORD PTR [eax]
  43e988:	aaa    
  43e989:	leavew 
  43e98b:	ds aaa 
  43e98d:	pop    ebx
  43e98e:	add    eax,DWORD PTR [eax]
  43e990:	aaa    
  43e991:	pop    ebx
  43e992:	add    eax,DWORD PTR [eax]
  43e994:	aaa    
  43e995:	pop    ebx
  43e996:	add    eax,DWORD PTR [eax]
  43e998:	aaa    
  43e999:	cli    
  43e99a:	cwde   
  43e99b:	ds aaa 
  43e99d:	xor    al,0xea
  43e99f:	add    esi,DWORD PTR [edi]
  43e9a1:	xor    al,0xea
  43e9a3:	add    esi,DWORD PTR [edi]
  43e9a5:	xor    al,0xea
  43e9a7:	add    esi,DWORD PTR [edi]
  43e9a9:	xor    al,0x44
  43e9ab:	cwde   
  43e9ac:	dec    ecx
  43e9ad:	xor    al,0xea
  43e9af:	add    esi,DWORD PTR [edi]
  43e9b1:	xor    al,0xea
  43e9b3:	add    esi,DWORD PTR [edi]
  43e9b5:	xor    al,0xea
  43e9b7:	add    esi,DWORD PTR [edi]
  43e9b9:	xor    al,0xf1
  43e9bb:	sub    WORD PTR [edx+ebp*8],si
  43e9bf:	add    esi,DWORD PTR [edi]
  43e9c1:	xor    al,0xea
  43e9c3:	add    esi,DWORD PTR [edi]
  43e9c5:	xor    al,0xea
  43e9c7:	add    esi,DWORD PTR [edi]
  43e9c9:	xor    al,0x5
  43e9cb:	mov    cs,WORD PTR [ecx]
  43e9cd:	xor    al,0xea
  43e9cf:	add    esi,DWORD PTR [edi]
  43e9d1:	xor    al,0xea
  43e9d3:	add    esi,DWORD PTR [edi]
  43e9d5:	xor    al,0xea
  43e9d7:	add    eax,DWORD PTR [eax]
  43e9d9:	add    BYTE PTR [edi],dh
  43e9db:	xor    al,0xc
  43e9dd:	xchg   ebx,eax
  43e9de:	imul   esi,DWORD PTR [edx+ebp*8],0xea343703
  43e9e5:	add    esi,DWORD PTR [edi]
  43e9e7:	xor    al,0x55
  43e9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e9ea:	push   eax
  43e9eb:	xor    al,0x46
  43e9ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e9ee:	dec    eax
  43e9ef:	xor    al,0xea
  43e9f1:	add    esi,DWORD PTR [edi]
  43e9f3:	xor    al,0x97
  43e9f5:	jae    0x43ea27
  43e9f7:	int    0x35
  43e9f9:	das    
  43e9fa:	ja     0x43ea30
  43e9fc:	cmp    ch,BYTE PTR [edi]
  43e9fe:	ja     0x43ea34
  43ea00:	push   cs
  43ea01:	das    
  43ea02:	ja     0x43ea38
  43ea04:	adc    ch,BYTE PTR [edi]
  43ea06:	ja     0x43ea3c
  43ea08:	push   es
  43ea09:	das    
  43ea0a:	ja     0x43ea40
  43ea0c:	or     ch,BYTE PTR [edi]
  43ea0e:	ja     0x43ea44
  43ea10:	push   ds
  43ea11:	das    
  43ea12:	ja     0x43ea48
  43ea14:	and    ch,BYTE PTR [edi]
  43ea16:	ja     0x43ea4c
  43ea18:	add    DWORD PTR ds:0x1900f460,ebx
  43ea1e:	pop    eax
  43ea1f:	hlt    
  43ea20:	add    BYTE PTR [ebp-0x4eff0baf],dh
  43ea26:	dec    ecx
  43ea27:	hlt    
  43ea28:	add    cl,ch
  43ea2a:	xor    al,0x34
  43ea2c:	add    ecx,ebp
  43ea2e:	xor    al,0x34
  43ea30:	add    ecx,ebp
  43ea32:	xor    al,0x34
  43ea34:	add    ecx,ebp
  43ea36:	xor    al,0x34
  43ea38:	add    ecx,ebp
  43ea3a:	xor    al,0x34
  43ea3c:	add    ecx,ebp
  43ea3e:	add    BYTE PTR [eax],al
  43ea40:	xor    al,0x34
  43ea42:	add    ecx,ebp
  43ea44:	xor    al,0x34
  43ea46:	add    ecx,ebp
  43ea48:	xor    al,0x34
  43ea4a:	add    ecx,ebp
  43ea4c:	xor    al,0x34
  43ea4e:	add    ecx,ebp
  43ea50:	xor    al,0x34
  43ea52:	add    ecx,ebp
  43ea54:	xor    al,0x34
  43ea56:	add    ecx,ebp
  43ea58:	xor    al,0x34
  43ea5a:	add    ecx,ebp
  43ea5c:	xor    al,0x34
  43ea5e:	add    ecx,ebp
  43ea60:	xor    al,0x34
  43ea62:	add    ecx,ebp
  43ea64:	xor    al,0x34
  43ea66:	add    ecx,ebp
  43ea68:	xor    al,0x34
  43ea6a:	add    ecx,ebp
  43ea6c:	xor    al,0x34
  43ea6e:	add    ecx,ebp
  43ea70:	xor    al,0x34
  43ea72:	add    ecx,ebp
  43ea74:	xor    al,0x34
  43ea76:	add    ecx,ebp
  43ea78:	xor    al,0x34
  43ea7a:	add    ecx,ebp
  43ea7c:	xor    al,0x34
  43ea7e:	add    ecx,ebp
  43ea80:	xor    al,0x34
  43ea82:	add    ecx,ebp
  43ea84:	xor    al,0x34
  43ea86:	add    ecx,ebp
  43ea88:	xor    al,0x34
  43ea8a:	add    ecx,ebp
  43ea8c:	xor    al,0x34
  43ea8e:	add    ecx,ebp
  43ea90:	xor    al,0x34
  43ea92:	add    DWORD PTR [eax],eax
  43ea94:	into   
  43ea95:	xor    al,BYTE PTR [ecx]
  43ea97:	add    dh,cl
  43ea99:	xor    al,BYTE PTR [ecx]
  43ea9b:	add    BYTE PTR [esi-0x61fffece],bl
  43eaa1:	xor    al,BYTE PTR [ecx]
  43eaa3:	add    BYTE PTR [eax],al
  43eaa5:	add    BYTE PTR [esi-0x71fffece],cl
  43eaab:	xor    al,BYTE PTR [ecx]
  43eaad:	add    BYTE PTR [esi-0x61fffece],bl
  43eab3:	xor    al,BYTE PTR [ecx]
  43eab5:	add    BYTE PTR [esi-0x71fffece],cl
  43eabb:	xor    al,BYTE PTR [ecx]
  43eabd:	add    BYTE PTR [esi+0x32],bl
  43eac0:	add    DWORD PTR [eax],eax
  43eac2:	pop    esi
  43eac3:	xor    al,BYTE PTR [ecx]
  43eac5:	add    BYTE PTR [esi+0x32],cl
  43eac8:	add    DWORD PTR [eax],eax
  43eaca:	dec    esi
  43eacb:	xor    al,BYTE PTR [ecx]
  43eacd:	add    BYTE PTR [esi+0x32],bl
  43ead0:	add    DWORD PTR [eax],eax
  43ead2:	pop    esi
  43ead3:	xor    al,BYTE PTR [ecx]
  43ead5:	add    BYTE PTR [esi+0x32],cl
  43ead8:	add    DWORD PTR [eax],eax
  43eada:	dec    esi
  43eadb:	xor    al,BYTE PTR [ecx]
  43eadd:	add    BYTE PTR [esi],bl
  43eadf:	xor    al,BYTE PTR [ecx]
  43eae1:	add    BYTE PTR [esi],bl
  43eae3:	xor    al,BYTE PTR [ecx]
  43eae5:	add    BYTE PTR [esi],cl
  43eae7:	xor    al,BYTE PTR [ecx]
  43eae9:	add    BYTE PTR [esi],cl
  43eaeb:	xor    al,BYTE PTR [ecx]
  43eaed:	add    BYTE PTR [esi],bl
  43eaef:	xor    al,BYTE PTR [ecx]
  43eaf1:	add    BYTE PTR [esi],bl
  43eaf3:	xor    al,BYTE PTR [ecx]
  43eaf5:	add    BYTE PTR [esi],cl
  43eaf7:	xor    al,BYTE PTR [ecx]
  43eaf9:	add    BYTE PTR [esi],cl
  43eafb:	xor    al,BYTE PTR [ecx]
  43eafd:	add    dh,bl
  43eaff:	xor    DWORD PTR [ecx],eax
  43eb01:	add    dh,bl
  43eb03:	xor    DWORD PTR [ecx],eax
  43eb05:	add    dh,cl
  43eb07:	xor    DWORD PTR [ecx],eax
  43eb09:	add    BYTE PTR [eax],al
  43eb0b:	add    dh,cl
  43eb0d:	xor    DWORD PTR [ecx],eax
  43eb0f:	add    BYTE PTR [edi],dh
  43eb11:	pop    ebx
  43eb12:	add    eax,DWORD PTR [eax]
  43eb14:	aaa    
  43eb15:	pop    ebx
  43eb16:	add    eax,DWORD PTR [eax]
  43eb18:	aaa    
  43eb19:	pop    ebx
  43eb1a:	add    eax,DWORD PTR [eax]
  43eb1c:	aaa    
  43eb1d:	pop    ebx
  43eb1e:	add    eax,DWORD PTR [eax]
  43eb20:	aaa    
  43eb21:	pop    ebx
  43eb22:	add    eax,DWORD PTR [eax]
  43eb24:	aaa    
  43eb25:	pop    ebx
  43eb26:	add    eax,DWORD PTR [eax]
  43eb28:	aaa    
  43eb29:	pop    ebx
  43eb2a:	add    eax,DWORD PTR [eax]
  43eb2c:	aaa    
  43eb2d:	pop    ebx
  43eb2e:	add    eax,DWORD PTR [eax]
  43eb30:	aaa    
  43eb31:	pop    ebx
  43eb32:	add    eax,DWORD PTR [eax]
  43eb34:	aaa    
  43eb35:	pop    ebx
  43eb36:	add    eax,DWORD PTR [eax]
  43eb38:	aaa    
  43eb39:	pop    ebx
  43eb3a:	add    eax,DWORD PTR [eax]
  43eb3c:	aaa    
  43eb3d:	pop    ebx
  43eb3e:	add    eax,DWORD PTR [eax]
  43eb40:	aaa    
  43eb41:	pop    ebx
  43eb42:	add    eax,DWORD PTR [eax]
  43eb44:	aaa    
  43eb45:	pop    ebx
  43eb46:	add    eax,DWORD PTR [eax]
  43eb48:	aaa    
  43eb49:	pop    ebx
  43eb4a:	add    eax,DWORD PTR [eax]
  43eb4c:	aaa    
  43eb4d:	pop    ebx
  43eb4e:	add    eax,DWORD PTR [eax]
  43eb50:	aaa    
  43eb51:	pop    ebx
  43eb52:	adc    eax,DWORD PTR [eax]
  43eb54:	aaa    
  43eb55:	jnp    0x43eb5a
  43eb57:	add    BYTE PTR [edi],dh
  43eb59:	xbegin 0xf976ebce
  43eb5f:	add    ebp,DWORD PTR [edi-0x75]
  43eb62:	jmp    0x43eb7f
  43eb64:	outs   dx,DWORD PTR ds:[esi]
  43eb65:	jae    0x43eb52
  43eb67:	xor    ebx,DWORD PTR [edi+0x1b]
  43eb6a:	in     eax,0x4b
  43eb6c:	pop    edi
  43eb6d:	repz in al,0x63
  43eb70:	add    BYTE PTR [eax],al
  43eb72:	dec    edi
  43eb73:	pop    ebx
  43eb74:	inc    ebx
  43eb75:	add    BYTE PTR [edi],dh
  43eb77:	pop    ebx
  43eb78:	cld    
  43eb79:	push   DWORD PTR [edi]
  43eb7b:	dec    ebx
  43eb7c:	in     al,dx
  43eb7d:	push   ebx
  43eb7e:	cmp    al,0x13
  43eb80:	in     al,dx
  43eb81:	pop    ebx
  43eb82:	sub    al,0xfb
  43eb84:	jmp    0x43ebe9
  43eb86:	sub    al,0xf3
  43eb88:	jmp    0x43ebf5
  43eb8a:	sbb    al,0x34
  43eb8c:	sbb    ch,bl
  43eb8e:	sub    DWORD PTR fs:[esi],edx
  43eb91:	lock mov ah,0x2f
  43eb94:	pop    esi
  43eb95:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43eb97:	das    
  43eb98:	lock xchg sp,ax
  43eb9b:	das    
  43eb9c:	dec    esi
  43eb9d:	lock test BYTE PTR [edi],ch
  43eba0:	ss lock je 0x43ebd3
  43eba4:	sahf   
  43eba5:	lock test BYTE PTR [edi],ch
  43eba8:	xchg   al,dh
  43ebaa:	xchg   esp,eax
  43ebab:	das    
  43ebac:	dec    esi
  43ebad:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ebaf:	das    
  43ebb0:	push   esi
  43ebb1:	lock xor al,0x2f
  43ebb4:	fdivrp st(0),st
  43ebb6:	and    al,0x2f
  43ebb8:	out    0xf0,al
  43ebba:	push   esp
  43ebbb:	das    
  43ebbc:	push   cs
  43ebbd:	icebp  
  43ebbe:	inc    esp
  43ebbf:	das    
  43ebc0:	div    al
  43ebc2:	hlt    
  43ebc3:	cs sahf 
  43ebc5:	lock add al,0x2f
  43ebc8:	xchg   al,dh
  43ebca:	aam    0x2e
  43ebcc:	mov    ?,eax
  43ebce:	in     al,0x2e
  43ebd0:	xchg   esi,eax
  43ebd1:	lock mov ah,0x2e
  43ebd4:	pop    esi
  43ebd5:	icebp  
  43ebd6:	add    BYTE PTR [eax],al
  43ebd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ebd9:	cs data16 icebp 
  43ebdc:	xchg   esp,eax
  43ebdd:	cs dec esi
  43ebdf:	icebp  
  43ebe0:	test   BYTE PTR [esi],ch
  43ebe2:	ss icebp 
  43ebe4:	hlt    
  43ebe5:	sub    DWORD PTR [esi],ebx
  43ebe7:	icebp  
  43ebe8:	add    al,0x2a
  43ebea:	push   es
  43ebeb:	icebp  
  43ebec:	adc    al,0x2a
  43ebee:	into   
  43ebef:	lock and al,0x2a
  43ebf2:	(bad)  
  43ebf3:	lock xor al,0x2a
  43ebf6:	fsubp  st(5),st
  43ebf8:	and    al,0x2a
  43ebfa:	out    0xed,al
  43ebfc:	push   esp
  43ebfd:	sub    cl,BYTE PTR [esi]
  43ebff:	out    dx,al
  43ec00:	inc    esp
  43ec01:	sub    dh,dh
  43ec03:	in     eax,dx
  43ec04:	je     0x43ec30
  43ec06:	add    DWORD PTR ds:0xd3707d9,esp
  43ec0c:	rcl    edi,1
  43ec0e:	ss adc eax,0x1d36e7c9
  43ec14:	loope  0x43ebcd
  43ec16:	ss gs fcmovb st,st(7)
  43ec1a:	ss ins DWORD PTR es:[edi],dx
  43ec1c:	rcl    BYTE PTR [edi-0x5835aaca],cl
  43ec22:	ss cmp eax,0xa53677a2
  43ec28:	call   0x3657:0x928d3687
  43ec2f:	push   ebp
  43ec30:	mov    ah,BYTE PTR [edi+0x36]
  43ec33:	pop    ebp
  43ec34:	mov    ds:0x99e53837,al
  43ec39:	inc    edi
  43ec3a:	cmp    ch,ch
  43ec3c:	add    BYTE PTR [eax],al
  43ec3e:	xchg   ecx,eax
  43ec3f:	pop    ss
  43ec40:	cmp    BYTE PTR ds:0xfd382788,dl
  43ec46:	popa   
  43ec47:	div    DWORD PTR [edi]
  43ec49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ec4a:	pop    ecx
  43ec4b:	pop    es
  43ec4c:	cmp    BYTE PTR [ebp-0x6ac828af],cl
  43ec52:	dec    ecx
  43ec53:	out    0x37,eax
  43ec55:	popf   
  43ec56:	popa   
  43ec57:	mov    bh,0x37
  43ec59:	gs pop ecx
  43ec5b:	(bad)  
  43ec5c:	aaa    
  43ec5d:	ins    DWORD PTR es:[edi],dx
  43ec5e:	push   ecx
  43ec5f:	xchg   edi,eax
  43ec60:	aaa    
  43ec61:	push   ebp
  43ec62:	dec    ecx
  43ec63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ec64:	aaa    
  43ec65:	cmp    eax,0x25377721
  43ec6a:	sbb    DWORD PTR [edi+0x57110d37],eax
  43ec70:	aaa    
  43ec71:	aad    0xa
  43ec73:	addr16 aaa 
  43ec75:	frstor [edx]
  43ec77:	imul   esi,edi,0xffffffe9
  43ec7a:	fs xor al,0x1
  43ec7d:	adc    DWORD PTR [esp+esi*1],esi
  43ec80:	add    DWORD PTR [eax],eax
  43ec82:	or     ah,BYTE PTR [edi+0xb]
  43ec85:	xor    BYTE PTR [edx],cl
  43ec87:	sbb    esi,DWORD PTR [bx+si]
  43ec8a:	cmp    ah,BYTE PTR [eax+0x2b]
  43ec8d:	xor    dl,ch
  43ec8f:	cmp    si,WORD PTR [eax]
  43ec92:	or     ah,BYTE PTR [eax+0x4b]
  43ec95:	xor    BYTE PTR [edx],cl
  43ec97:	pusha  
  43ec98:	pop    ebx
  43ec99:	xor    BYTE PTR [edx],bh
  43ec9b:	pusha  
  43ec9c:	imul   esi,DWORD PTR [eax],0x2a
  43ec9f:	pusha  
  43eca0:	jnp    0x43ecd2
  43eca2:	add    BYTE PTR [eax],al
  43eca4:	dec    edx
  43eca5:	pusha  
  43eca6:	mov    esi,DWORD PTR [eax]
  43eca8:	or     ah,BYTE PTR [eax-0x65]
  43ecab:	xor    dl,bh
  43ecad:	pop    edi
  43ecae:	stos   DWORD PTR es:[edi],eax
  43ecaf:	xor    BYTE PTR [edx+0x60],ch
  43ecb2:	mov    ebx,0xcb604a30
  43ecb7:	xor    BYTE PTR [edx+0x60],cl
  43ecba:	(bad)  [eax]
  43ecbc:	cli    
  43ecbd:	pop    edi
  43ecbe:	jmp    0x43ecf0
  43ecc0:	jmp    0xb65:0x8a30fb5f
  43ecc7:	xor    DWORD PTR [edx+0x3a311b65],ecx
  43eccd:	sub    esi,DWORD PTR [bx+di]
  43ecd0:	push   0x65
  43ecd2:	cmp    esi,DWORD PTR [ecx]
  43ecd4:	mov    ah,BYTE PTR [ebp+0x4b]
  43ecd7:	xor    DWORD PTR [edx-0x45cea49b],ecx
  43ecdd:	imul   esi,DWORD PTR gs:[ecx],0xffffffaa
  43ece1:	gs jnp 0x43ed15
  43ece4:	retf   0x8b66
  43ece7:	xor    DWORD PTR [edx+0x7a319b65],ecx
  43eced:	gs stos DWORD PTR es:[edi],eax
  43ecef:	xor    DWORD PTR [edx+0x65],ebp
  43ecf2:	mov    ebx,0xcb66ca31
  43ecf7:	xor    edx,ecx
  43ecf9:	data16 (bad) [ecx]
  43ecfc:	aaa    
  43ecfd:	ja     0x43ecf1
  43ecff:	jmp    0x43ed47
  43ed01:	jg     0x43ecf5
  43ed03:	sti    
  43ed04:	inc    esi
  43ed05:	push   edi
  43ed06:	icebp  
  43ed07:	or     eax,DWORD PTR [eax]
  43ed09:	add    BYTE PTR ds:0x251bf17f,ah
  43ed0f:	aaa    
  43ed10:	repz sub esp,DWORD PTR ds:0x253bf15f
  43ed17:	pop    ss
  43ed18:	repz dec ebx
  43ed1a:	add    eax,0x55bf31f
  43ed1f:	aaa    
  43ed20:	repz imul eax,DWORD PTR ds:0x57bf33f,0xffffffd7
  43ed28:	icebp  
  43ed29:	mov    esp,DWORD PTR [ebp-0x1]
  43ed2c:	icebp  
  43ed2d:	fwait
  43ed2e:	gs div ecx
  43ed31:	stos   DWORD PTR es:[edi],eax
  43ed32:	gs pop ds
  43ed34:	repnz mov ebx,0xcbf21765
  43ed3a:	inc    ebp
  43ed3b:	pop    ds
  43ed3c:	repnz fild DWORD PTR [ebp-0x9]
  43ed40:	icebp  
  43ed41:	jmp    0x43ed88
  43ed43:	push   ecx
  43ed45:	sti    
  43ed46:	inc    ebp
  43ed47:	push   edi
  43ed48:	lock or esp,DWORD PTR [edi+edi*2]
  43ed4c:	lock sbb esp,DWORD PTR [edi+esi*1]
  43ed50:	repnz sub esp,DWORD PTR [edi+ebx*2]
  43ed54:	lock cmp esp,DWORD PTR [edi+edx*4]
  43ed58:	lock dec ebx
  43ed5a:	add    al,0x9f
  43ed5c:	lock pop ebx
  43ed5e:	add    al,0xb7
  43ed60:	lock imul eax,DWORD PTR [edi+edi*4],0xfffffff0
  43ed65:	jnp    0x43ed6b
  43ed67:	xlat   BYTE PTR ds:[ebx]
  43ed68:	lock mov esp,DWORD PTR [edi+edi*8-0x10]
  43ed6d:	fwait
  43ed6e:	add    BYTE PTR [eax],al
  43ed70:	fs div eax
  43ed73:	stos   DWORD PTR es:[edi],eax
  43ed74:	fs pop ds
  43ed76:	icebp  
  43ed77:	mov    ebx,0xf7a63464
  43ed7c:	cld    
  43ed7d:	and    al,0xae
  43ed7f:	imul   esp
  43ed81:	and    al,0xc6
  43ed83:	test   DWORD PTR [eiz*1+0x24fcf7ce],0x203cefe6
  43ed8e:	into   
  43ed8f:	out    dx,eax
  43ed90:	dec    esp
  43ed91:	and    BYTE PTR [esi],al
  43ed93:	lock or al,0x20
  43ed96:	out    dx,al
  43ed97:	out    dx,eax
  43ed98:	sbb    al,0x20
  43ed9a:	es lock jl 0x43edbe
  43ed9e:	cs lock ins BYTE PTR es:[edi],dx
  43eda1:	and    BYTE PTR [esi],al
  43eda3:	lock dec esp
  43eda5:	and    BYTE PTR [esi],cl
  43eda7:	lock cmp al,0x20
  43edaa:	lock mov sp,0x4e1f
  43edaf:	lock int3 
  43edb1:	pop    ds
  43edb2:	inc    esi
  43edb3:	lock int3 
  43edb5:	pop    ds
  43edb6:	cs lock cwde 
  43edb9:	push   0x343723e9
  43edbe:	mov    edx,0xe6343703
  43edc3:	not    BYTE PTR [eiz*1+0x2508f6c2]
  43edca:	mov    dh,0xf6
  43edcc:	call   0xb93b4bf5
  43edd1:	and    al,0x4e
  43edd3:	test   DWORD PTR [eax],0x6e249800
  43edd9:	neg    DWORD PTR [eax+eiz*1]
  43eddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eddd:	out    dx,eax
  43edde:	cld    
  43eddf:	pop    ds
  43ede0:	scas   al,BYTE PTR es:[edi]
  43ede1:	out    dx,eax
  43ede2:	in     al,dx
  43ede3:	pop    ds
  43ede4:	xchg   bh,ch
  43ede6:	int3   
  43ede7:	pop    ds
  43ede8:	mov    gs,edi
  43edea:	mov    esp,0xbcf0661f
  43edef:	and    BYTE PTR [esi-0x10],cl
  43edf2:	int3   
  43edf3:	and    BYTE PTR [ecx],al
  43edf5:	dec    ebp
  43edf6:	daa    
  43edf7:	pushf  
  43edf8:	sub    al,0x35
  43edfa:	daa    
  43edfb:	lods   al,BYTE PTR ds:[esi]
  43edfc:	sub    al,0xad
  43edfe:	and    BYTE PTR [esp+ebp*1-0x4b],bh
  43ee02:	sbb    BYTE PTR [esp+ebp*1+0x2c5c10cd],cl
  43ee09:	aad    0x8
  43ee0b:	push   0x3424e9f7
  43ee10:	add    DWORD PTR [ecx],edx
  43ee12:	xor    esi,DWORD PTR [ecx+eax*1]
  43ee15:	rcl    eax,1
  43ee17:	dec    ebx
  43ee18:	sub    eax,0x2c73e709
  43ee1d:	mov    cl,0xe0
  43ee1f:	jnp    0x43ee4d
  43ee21:	mov    ecx,0xe12e33d8
  43ee26:	(bad)  
  43ee27:	lahf   
  43ee28:	cs test eax,0x3539efc5
  43ee2e:	mov    ds:0x9b7d39f7,al
  43ee33:	retf   
  43ee34:	xor    al,0xe9
  43ee36:	les    esp,FWORD PTR [edi-0x9]
  43ee39:	and    DWORD PTR [eax],eax
  43ee3b:	add    BYTE PTR [ebx],dh
  43ee3d:	xor    al,0x1
  43ee3f:	jno    0x43edc6
  43ee41:	mov    ebx,0x91857d2f
  43ee46:	das    
  43ee47:	add    eax,0x6438ef93
  43ee4c:	mov    ebp,es
  43ee4e:	cmp    cl,ah
  43ee50:	popa   
  43ee51:	add    al,0x3c
  43ee53:	jno    0x43eeae
  43ee55:	ins    BYTE PTR es:[edi],dx
  43ee56:	cmp    esi,esi
  43ee58:	pop    eax
  43ee59:	test   al,0x34
  43ee5b:	dec    ebx
  43ee5c:	push   eax
  43ee5d:	dec    esp
  43ee5e:	ss mov al,0x5f
  43ee61:	in     eax,0x35
  43ee63:	pop    ecx
  43ee64:	pop    edi
  43ee65:	jg     0x43ee9c
  43ee67:	mov    eax,0x69370d4e
  43ee6c:	dec    esi
  43ee6d:	fs ss add cl,dh
  43ee71:	pop    ecx
  43ee72:	inc    esp
  43ee73:	aas    
  43ee74:	lods   al,BYTE PTR ds:[esi]
  43ee75:	pop    edx
  43ee76:	jge    0x43eeb7
  43ee78:	push   0x5a
  43ee7a:	(bad)  
  43ee7b:	aas    
  43ee7c:	sub    BYTE PTR [edx-0x9],bl
  43ee7f:	call   FWORD PTR [esi]
  43ee81:	shl    edi,cl
  43ee83:	(bad)  
  43ee84:	mov    esi,0x1800012f
  43ee89:	arpl   WORD PTR ds:0x5f608d30,si
  43ee8f:	xor    DWORD PTR [edi],esi
  43ee91:	pop    esi
  43ee92:	fbstp  TBYTE PTR [edx]
  43ee94:	ficomp DWORD PTR [edi+0x65]
  43ee97:	xor    eax,DWORD PTR [ebx-0x32cc1d9f]
  43ee9d:	push   esi
  43ee9e:	xor    esi,DWORD PTR [eax+eax*1]
  43eea1:	add    BYTE PTR [eax-0x20cb4b9d],bh
  43eea7:	push   ebp
  43eea8:	push   esi
  43eea9:	xor    eax,0x358c575a
  43eeae:	test   eax,0x3366856
  43eeb3:	bound  esi,QWORD PTR [edx]
  43eeb5:	aaa    
  43eeb6:	mov    ds,WORD PTR [edx+0x17]
  43eeb9:	cmp    BYTE PTR [eax],dl
  43eebb:	pop    eax
  43eebc:	mov    WORD PTR [eax],?
  43eebe:	pop    esp
  43eebf:	pop    eax
  43eec0:	leave  
  43eec1:	cmp    BYTE PTR [esi],dl
  43eec3:	pop    eax
  43eec4:	pop    ss
  43eec5:	cmp    ebx,eax
  43eec7:	pop    ecx
  43eec8:	pop    ecx
  43eec9:	cmp    DWORD PTR [ebp+0x59],esi
  43eecc:	cmp    DWORD PTR gs:[ecx+0x59],ebp
  43eed0:	xchg   edi,eax
  43eed1:	cmp    ebp,eax
  43eed3:	pop    edx
  43eed4:	into   
  43eed5:	cmp    DWORD PTR [eax],ebp
  43eed7:	pop    ebx
  43eed8:	add    eax,0x2358873a
  43eedd:	cmp    bl,BYTE PTR [eax+ebx*2+0x5c]
  43eee1:	cmp    al,dh
  43eee3:	push   ebp
  43eee4:	ret    0x2f3a
  43eee7:	push   esi
  43eee8:	or     bh,BYTE PTR [ebx]
  43eeea:	aaa    
  43eeeb:	cwde   
  43eeec:	in     al,0x95
  43eeee:	cld    
  43eeef:	adc    ah,dh
  43eef1:	loop   0x43ef5f
  43eef3:	pop    edi
  43eef4:	fistp  WORD PTR [esi]
  43eef6:	imul   ebx,DWORD PTR [edi+0x1563bfdf],0xffffffe9
  43eefd:	rcr    DWORD PTR [ebx+0x36],1
  43ef00:	jmp    0xdf9742f2
  43ef05:	sub    eax,0xe4a0000
  43ef0a:	loopne 0x43ef6f
  43ef0c:	inc    edx
  43ef0d:	ret    
  43ef0e:	(bad)  
  43ef10:	cmp    ch,BYTE PTR [esi]
  43ef12:	jmp    0x43ef43
  43ef14:	xor    DWORD PTR ds:0xb22971eb,ebx
  43ef1a:	jmp    0xea7910ef
  43ef1f:	cmp    eax,0xe0e89418
  43ef24:	adc    BYTE PTR [ebx+0x73],bl
  43ef27:	dec    eax
  43ef29:	out    0x3,eax
  43ef2b:	add    BYTE PTR [edi],dh
  43ef2d:	dec    ebp
  43ef2e:	repz ss pop es
  43ef31:	das    
  43ef32:	in     eax,dx
  43ef33:	imul   esp,DWORD PTR [edi+0x4],0xfffffff4
  43ef37:	stc    
  43ef38:	addr16 push eax
  43ef3a:	repnz or BYTE PTR [esi+0x49],ah
  43ef3e:	hlt    
  43ef3f:	push   esp
  43ef40:	cmp    sp,si
  43ef43:	addr16 inc esi
  43ef45:	push   ecx
  43ef46:	bnd jle 0x43ef8f
  43ef49:	in     al,0xf2
  43ef4b:	mov    DWORD PTR [esi-0x18],eax
  43ef4e:	repnz xchg esp,eax
  43ef50:	inc    esi
  43ef51:	mov    cl,0xf2
  43ef53:	mov    ebx,0xebf2f926
  43ef58:	es sub dh,bl
  43ef5b:	mul    BYTE PTR [esi]
  43ef5d:	push   edx
  43ef5e:	in     eax,dx
  43ef5f:	or     eax,0x58ed8125
  43ef64:	add    eax,0x8df55c34
  43ef69:	and    bl,BYTE PTR [ebx-0xc]
  43ef6c:	add    BYTE PTR [eax],al
  43ef6e:	cmp    esp,DWORD PTR [eax]
  43ef70:	mov    eax,0x891f15ef
  43ef75:	out    dx,al
  43ef76:	fwait
  43ef77:	pop    ds
  43ef78:	sbb    ebp,esi
  43ef7a:	inc    esi
  43ef7b:	push   ds
  43ef7c:	fwait
  43ef7d:	icebp  
  43ef7e:	pushf  
  43ef7f:	push   ds
  43ef80:	addr16 icebp 
  43ef82:	std    
  43ef83:	sbb    eax,0x1d98f0aa
  43ef88:	pop    ebx
  43ef89:	out    dx,eax
  43ef8a:	rcr    DWORD PTR [ecx+eax*1],cl
  43ef8d:	in     al,dx
  43ef8e:	xchg   esp,eax
  43ef8f:	sub    al,0x88
  43ef91:	in     al,dx
  43ef92:	fisubr WORD PTR [ebx]
  43ef94:	shr    esp,0x2c
  43ef97:	sub    esp,DWORD PTR [edi-0x13]
  43ef9a:	lods   eax,DWORD PTR ds:[esi]
  43ef9b:	sub    ch,BYTE PTR [ebp+0x1b2ae0ed]
  43efa1:	jmp    0x28b4:0xeb3c29be
  43efa8:	mov    edi,0xc728d2eb
  43efad:	out    0x41,eax
  43efaf:	sub    BYTE PTR [esi-0x26d8e918],cl
  43efb5:	call   0xe6321694
  43efba:	push   0xb0e63326
  43efbf:	and    eax,0x255de68c
  43efc4:	jmp    0x3704:0x696490c3
  43efcb:	xor    al,0xee
  43efcd:	repz adc DWORD PTR [esp+ecx*2],esp
  43efd1:	hlt    
  43efd2:	add    BYTE PTR [eax],al
  43efd4:	dec    esi
  43efd5:	and    ecx,ebx
  43efd7:	hlt    
  43efd8:	mov    edi,0x29f56422
  43efdd:	and    bl,cl
  43efdf:	repnz pop ds
  43efe1:	and    DWORD PTR [ecx],eax
  43efe3:	(bad)  
  43efe4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  43efe6:	xor    edx,DWORD PTR [edx]
  43efe8:	inc    esp
  43efe9:	sbb    BYTE PTR ds:0x2cb158dc,ch
  43efef:	cmp    al,BYTE PTR [edi+0x5b]
  43eff2:	sub    al,0xf1
  43eff4:	inc    edi
  43eff5:	inc    edi
  43eff6:	imul   esp,DWORD PTR cs:[esi],0x26472d91
  43effd:	dec    ecx
  43effe:	das    
  43efff:	xchg   DWORD PTR [edx],edx
  43f001:	int3   
  43f002:	cs sub eax,0xc22e6d09
  43f008:	and    esi,edi
  43f00a:	das    
  43f00b:	push   eax
  43f00c:	sbb    BYTE PTR [esi+0x2f],dh
  43f00f:	clc    
  43f010:	or     al,0x21
  43f012:	cmp    DWORD PTR [esi+0xb],eax
  43f015:	jmp    0xd83a:0x35dcba38
  43f01c:	fcmovne st,st(5)
  43f01e:	cmp    DWORD PTR [eax-0x21c6a72d],eax
  43f024:	into   
  43f025:	inc    ecx
  43f026:	cmp    ebp,DWORD PTR [esi]
  43f028:	fisttp QWORD PTR [edx+edi*1+0x3c49de63]
  43f02f:	adc    cl,ah
  43f031:	mov    esp,0x70cda13b
  43f036:	cmp    esp,edi
  43f038:	add    BYTE PTR [eax],al
  43f03a:	cwde   
  43f03b:	xor    DWORD PTR [esp+ebx*8],0xffffff9f
  43f03f:	mov    ds:0x1199c436,al
  43f044:	cmp    BYTE PTR [ebp-0x6f],dl
  43f047:	cdq    
  43f048:	aaa    
  43f049:	jmp    0xca3b53b2
  43f04e:	xor    al,0x34
  43f050:	add    ecx,ebp
  43f052:	test   bl,bh
  43f054:	xor    cl,al
  43f056:	test   BYTE PTR [esi+0x30],cl
  43f059:	clc    
  43f05a:	imul   edx,DWORD PTR [edi],0x32
  43f05d:	add    BYTE PTR [ebx-0x7bceb998],bl
  43f063:	push   0x67e83189
  43f068:	add    dh,BYTE PTR [edx]
  43f06a:	inc    edi
  43f06b:	gs inc edi
  43f06d:	xor    dl,BYTE PTR [edi+0x2f32c965]
  43f073:	or     DWORD PTR gs:[ebx],esi
  43f076:	mov    bh,0x66
  43f078:	sahf   
  43f079:	xor    esp,DWORD PTR [esi+eiz*2+0x0]
  43f07d:	xor    al,0xc4
  43f07f:	push   edx
  43f080:	mov    BYTE PTR [esi*2-0xccb13ad],dh
  43f087:	arpl   WORD PTR [ebp+esi*1+0x5b],si
  43f08b:	fs aaa 
  43f08d:	aaa    
  43f08e:	xchg   esi,eax
  43f08f:	push   eax
  43f090:	cmp    BYTE PTR [ecx],0x3a
  43f093:	dec    esi
  43f094:	call   0x8490a3d3
  43f099:	cmp    al,0xb9
  43f09b:	dec    ebx
  43f09c:	sar    DWORD PTR [eax+eax*1],cl
  43f09f:	add    bl,bh
  43f0a1:	dec    ebx
  43f0a2:	lds    edi,FWORD PTR ds:0x3f575af6
  43f0a8:	jae    0x43f103
  43f0aa:	idiv   edi
  43f0ac:	ficom  WORD PTR [esi+0x37a2fff7]
  43f0b2:	add    DWORD PTR [eax],eax
  43f0b4:	xchg   esi,eax
  43f0b5:	div    BYTE PTR [bx+si]
  43f0b8:	mov    edi,0x55310f65
  43f0bd:	addr16 inc esi
  43f0bf:	xor    DWORD PTR [ebx],edi
  43f0c1:	xor    BYTE PTR [bx+di],0x9
  43f0c5:	addr16 mov ds:0x5c31,al
  43f0c9:	addr16 retf 0xa431
  43f0cd:	div    WORD PTR [ecx]
  43f0d0:	daa    
  43f0d1:	dec    cx
  43f0d3:	xor    cl,cl
  43f0d5:	fs pop ecx
  43f0d7:	xor    dh,BYTE PTR [edi]
  43f0d9:	jne    0x43f0cc
  43f0db:	outs   dx,BYTE PTR ds:[esi]
  43f0dc:	and    eax,0x2593f2ce
  43f0e1:	xlat   BYTE PTR ds:[ebx]
  43f0e2:	repnz mov bh,0x25
  43f0e5:	or     eax,0xf125c0f3
  43f0ea:	repnz in al,0x5
  43f0ed:	sub    ebx,esi
  43f0ef:	std    
  43f0f0:	add    eax,0x40ef064
  43f0f5:	test   eax,esi
  43f0f7:	cmp    al,BYTE PTR [edi+ebx*4]
  43f0fa:	lock push ebp
  43f0fc:	fs xchg edx,eax
  43f0fe:	lock ins BYTE PTR es:[edi],dx
  43f100:	fs mov ch,0xf0
  43f103:	jg     0x43f105
  43f105:	add    BYTE PTR [esp+eiz*8-0xf],ah
  43f109:	mov    BYTE PTR [ebx+ecx*1-0xe],ah
  43f10d:	rol    DWORD PTR [ebx+edi*1-0xe],0xd5
  43f112:	inc    esp
  43f113:	mov    al,dh
  43f115:	in     al,dx
  43f116:	inc    esp
  43f117:	push   ebp
  43f118:	lock std 
  43f11a:	inc    esp
  43f11b:	push   ebp
  43f11c:	out    0xe,eax
  43f11e:	sub    esp,DWORD PTR [ebp-0x19]
  43f121:	sub    esp,DWORD PTR [ebx]
  43f123:	pop    ebx
  43f124:	out    0x31,eax
  43f126:	sub    esp,DWORD PTR [edx-0x19]
  43f129:	retf   0xbf23
  43f12c:	out    0xda,eax
  43f12e:	or     esi,DWORD PTR [edi-0x19]
  43f131:	pop    ss
  43f132:	add    bh,BYTE PTR [edx]
  43f134:	call   0xe6b5fb60
  43f139:	mov    dl,0x2
  43f13b:	sub    eax,0x8969f8e7
  43f140:	in     al,0x44
  43f142:	pusha  
  43f143:	out    0xe4,al
  43f145:	retf   0xae68
  43f148:	in     al,0x59
  43f14a:	pop    edi
  43f14b:	pop    ebx
  43f14c:	jmp    0x43f0ec
  43f14e:	dec    edi
  43f14f:	repz jmp 0x43f0fa
  43f152:	dec    edi
  43f153:	xor    al,0x95
  43f155:	jmp    0x43f114
  43f157:	sbb    al,0x1e
  43f159:	jmp    0x43f1cb
  43f15b:	sbb    al,0x20
  43f15d:	jmp    0x43f0e3
  43f15f:	sbb    al,0x26
  43f161:	jmp    0x43f1bd
  43f163:	sbb    al,0x10
  43f165:	jmp    0x43f18c
  43f167:	sbb    esi,esi
  43f169:	jmp    0xeaa4:0x1b1a0000
  43f170:	add    DWORD PTR [ebx],ebx
  43f172:	(bad)  
  43f173:	jmp    0x1ad9:0xea891ae3
  43f17a:	ins    BYTE PTR es:[edi],dx
  43f17b:	jmp    0x1e13:0xea251b8c
  43f182:	add    ch,cl
  43f184:	push   ecx
  43f185:	sbb    eax,0x1d7ce8c4
  43f18a:	push   eax
  43f18b:	call   0xe8530e66
  43f190:	inc    ebx
  43f191:	pop    ds
  43f192:	(bad)  
  43f193:	out    0x73,al
  43f195:	pop    ds
  43f196:	dec    esp
  43f197:	loope  0x43f1a3
  43f199:	pop    ds
  43f19a:	retf   0xf8e2
  43f19d:	pusha  
  43f19e:	jmp    0x49a4e236
  43f1a3:	add    al,0x37
  43f1a5:	xor    al,0x2a
  43f1a7:	aad    0x76
  43f1a9:	and    ebx,DWORD PTR [ecx]
  43f1ab:	aad    0x87
  43f1ad:	and    esp,DWORD PTR [edi-0x2b]
  43f1b0:	mov    ebp,0xaed55222
  43f1b5:	and    ah,BYTE PTR [ecx-0x2b]
  43f1b8:	jg     0x43f1dc
  43f1ba:	scas   eax,DWORD PTR es:[edi]
  43f1bb:	aad    0xdd
  43f1bd:	and    bl,BYTE PTR [ebx-0xadd562b]
  43f1c3:	aad    0xc6
  43f1c5:	and    eax,0x2535d685
  43f1ca:	nop
  43f1cb:	fadd   DWORD PTR [eax+0x27]
  43f1ce:	add    ebx,eax
  43f1d0:	add    BYTE PTR [eax],al
  43f1d2:	ins    BYTE PTR es:[edi],dx
  43f1d3:	adc    BYTE PTR [ecx],bh
  43f1d5:	xor    eax,0xe139ce6b
  43f1da:	arpl   ax,si
  43f1dc:	cmp    dl,BYTE PTR [esi+0x59]
  43f1df:	xor    DWORD PTR [esi+eiz*2],edi
  43f1e2:	nop
  43f1e3:	(bad)  
  43f1e4:	cmp    eax,DWORD PTR [ebx+0x573b5588]
  43f1ea:	or     BYTE PTR [eax],0x35
  43f1ed:	mov    dh,0x78
  43f1ef:	sub    esi,DWORD PTR [esi]
  43f1f1:	fist   WORD PTR [edi+0x40]
  43f1f4:	ss lock push esi
  43f1f7:	in     al,dx
  43f1f8:	ss mov edx,0x7a37fd55
  43f1fe:	push   esp
  43f1ff:	pusha  
  43f200:	imul   ecx
  43f202:	xor    al,0x5f
  43f204:	imul   DWORD PTR [ebp+0x33]
  43f207:	xor    al,0x1
  43f209:	repz add al,0xf8
  43f20c:	xor    BYTE PTR [edi+0x3],ch
  43f20f:	xor    BYTE PTR [eax],0x3
  43f212:	jmp    0x43f278
  43f214:	xor    dl,ch
  43f216:	jecxz  0x43f245
  43f218:	xor    cl,BYTE PTR [ebx]
  43f21a:	jmp    0x31c6:0xe36a31e9
  43f221:	sub    eax,0x4732fb09
  43f226:	add    eax,edx
  43f228:	xor    dh,BYTE PTR [ecx+0xa]
  43f22b:	leave  
  43f22c:	xor    bl,BYTE PTR [eax]
  43f22e:	add    BYTE PTR [ebp+0x46ef4733],dh
  43f234:	cs push ds
  43f236:	add    BYTE PTR [eax],al
  43f238:	out    dx,al
  43f239:	or     DWORD PTR [esi],ebp
  43f23b:	pop    edx
  43f23c:	fild   QWORD PTR [ecx+0x2d]
  43f23f:	adc    ch,bl
  43f241:	shr    DWORD PTR [edi],cl
  43f243:	lea    edx,[si+0x4f2f]
  43f248:	(bad)  
  43f249:	cli    
  43f24a:	cmp    BYTE PTR [eax],al
  43f24c:	add    DWORD PTR [eax-0x7eaec6c8],0xffffffe5
  43f253:	cmp    ch,BYTE PTR [esi+0x7e]
  43f256:	or     al,0x3b
  43f258:	xchg   BYTE PTR [esi+0x79],bh
  43f25b:	cmp    edi,esp
  43f25d:	jge    0x43f1ee
  43f25f:	cmp    ebx,DWORD PTR [esi]
  43f261:	push   esp
  43f262:	dec    ebx
  43f263:	cmp    al,0xe1
  43f265:	jle    0x43f209
  43f267:	cmp    al,0x15
  43f269:	jg     0x43f2d2
  43f26b:	cmp    eax,0x3dda53e1
  43f270:	leave  
  43f271:	push   esp
  43f272:	mov    WORD PTR [esi],?
  43f274:	adc    al,0x55
  43f276:	sar    BYTE PTR [esi],1
  43f278:	xor    eax,0x8b3f3a53
  43f27d:	push   edx
  43f27e:	mov    edi,DWORD PTR [edi]
  43f280:	rcl    DWORD PTR [ecx-0x66],0x3f
  43f284:	jl     0x43f2d8
  43f286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f287:	aas    
  43f288:	adc    BYTE PTR [edx-0x47],0x3f
  43f28c:	push   edx
  43f28d:	push   edx
  43f28e:	mov    esi,0xd1523e3f
  43f293:	aas    
  43f294:	and    eax,0x363fd552
  43f299:	push   edx
  43f29a:	jmp    0xec54:0xe200003f
  43f2a1:	aas    
  43f2a2:	push   cs
  43f2a3:	arpl   si,si
  43f2a5:	inc    DWORD PTR [edx]
  43f2a7:	cmp    BYTE PTR [ecx],al
  43f2a9:	add    ch,bl
  43f2ab:	cmp    ah,0x2f
  43f2ae:	fadd   DWORD PTR [edx-0x77d4cfec]
  43f2b4:	and    al,0x30
  43f2b6:	retf   
  43f2b7:	add    BYTE PTR [eax+0x30],0x29
  43f2bb:	mov    BYTE PTR [edx+0x30],dl
  43f2be:	jne    0x43f248
  43f2c0:	push   esi
  43f2c1:	xor    BYTE PTR [esi-0x78],cl
  43f2c4:	xor    DWORD PTR [eax],0xddcd0537
  43f2ca:	addr16 enter 0x7cc,0x66
  43f2cf:	push   0x86660dd2
  43f2d4:	rcr    BYTE PTR [ebx],cl
  43f2d6:	inc    esi
  43f2d7:	ins    BYTE PTR es:[edi],dx
  43f2d8:	shl    BYTE PTR [ecx],cl
  43f2da:	inc    esi
  43f2db:	jb     0x43f2af
  43f2dd:	das    
  43f2de:	inc    esi
  43f2df:	adc    eax,0x844638d4
  43f2e4:	shl    bh,cl
  43f2e6:	es clc 
  43f2e8:	shr    ebp,cl
  43f2ea:	es add edx,esp
  43f2ed:	std    
  43f2ee:	es aam 0xce
  43f2f1:	mov    ah,0x25
  43f2f3:	cmp    cl,bh
  43f2f5:	xlat   BYTE PTR ds:[ebx]
  43f2f6:	add    eax,0x5f6ceec
  43f2fb:	jp     0x43f2c9
  43f2fd:	push   ds
  43f2fe:	add    al,0x9b
  43f300:	int3   
  43f301:	pop    ebp
  43f302:	add    BYTE PTR [eax],al
  43f304:	add    al,0xcf
  43f306:	int    0x9a
  43f308:	fs hlt 
  43f30a:	int    0xa8
  43f30c:	fs or  cl,dh
  43f30f:	iret   
  43f310:	fs ss into 
  43f313:	add    eax,0x1acf8563
  43f318:	dec    ebx
  43f319:	pop    edx
  43f31a:	iret   
  43f31b:	cmc    
  43f31c:	inc    ebx
  43f31d:	pop    eax
  43f31e:	into   
  43f31f:	cmp    al,0x4a
  43f321:	and    eax,edx
  43f323:	push   0x42
  43f325:	leave  
  43f326:	into   
  43f327:	xchg   BYTE PTR [edx],ch
  43f329:	(bad)  
  43f32a:	into   
  43f32b:	ret    
  43f32c:	and    ah,BYTE PTR [ecx-0x32d6e032]
  43f332:	(bad)  
  43f334:	and    DWORD PTR [eax],esi
  43f336:	fisubr DWORD PTR [eax+ecx*1+0x24]
  43f33a:	fiadd  DWORD PTR [ebx-0x23272e00]
  43f340:	or     BYTE PTR [ebp*1+0x481cb0dc],dh
  43f347:	fcomi  st,st(2)
  43f349:	sbb    al,0x9b
  43f34b:	fild   DWORD PTR [eax+0x1b]
  43f34e:	mov    al,0xda
  43f350:	dec    ecx
  43f351:	sbb    al,BYTE PTR [esi-0x23]
  43f354:	outs   dx,DWORD PTR ds:[esi]
  43f355:	sbb    ah,al
  43f357:	fdivr  QWORD PTR [esi]
  43f359:	sbb    ebp,ebp
  43f35b:	fdiv   QWORD PTR [ecx-0x682378e7]
  43f361:	sbb    DWORD PTR [eax+eiz*8],eax
  43f364:	hlt    
  43f365:	push   ds
  43f366:	jecxz  0x43f346
  43f368:	add    BYTE PTR [eax],al
  43f36a:	mov    esi,0x5fde1e1f
  43f36f:	pop    ds
  43f370:	out    dx,al
  43f371:	loope  0x43f3b0
  43f373:	push   ds
  43f374:	push   es
  43f375:	loop   0x43f389
  43f377:	push   ds
  43f378:	mul    cl
  43f37a:	adc    ebx,DWORD PTR [esi]
  43f37c:	mov    ds:0xb01dd7e1,eax
  43f381:	loope  0x43f3f9
  43f383:	push   ds
  43f384:	cmp    eax,0xc41d31e1
  43f389:	loopne 0x43f3bb
  43f38b:	pop    ebp
  43f38c:	jmp    0x95a11d74
  43f391:	add    esi,DWORD PTR [edi]
  43f393:	xor    al,0xd3
  43f395:	rol    DWORD PTR [ecx+0x4ad53c24],cl
  43f39b:	and    DWORD PTR [ebp-0x2c],eax
  43f39e:	out    0x20,al
  43f3a0:	adc    al,0xd4
  43f3a2:	fisub  WORD PTR [eax]
  43f3a4:	int3   
  43f3a5:	rcl    DWORD PTR [esi],cl
  43f3a7:	and    esp,edx
  43f3a9:	rcr    esi,cl
  43f3ab:	and    ah,bl
  43f3ad:	shl    esi,cl
  43f3af:	and    ah,dl
  43f3b1:	rcr    esi,cl
  43f3b3:	and    ah,ch
  43f3b5:	xlat   BYTE PTR ds:[ebx]
  43f3b6:	ss sub ah,dh
  43f3b9:	xlat   BYTE PTR ds:[ebx]
  43f3ba:	sub    BYTE PTR ds:[ecx],al
  43f3bd:	fneni(8087 only) 
  43f3bf:	xlat   BYTE PTR ds:[ebx]
  43f3c0:	sub    al,0xb7
  43f3c2:	fistp  WORD PTR [edi+0x2c]
  43f3c5:	rcr    bh,1
  43f3c7:	sbb    al,0x2e
  43f3c9:	es mov es,esp
  43f3cc:	sub    eax,0x8e00009f
  43f3d1:	sbb    al,0x2f
  43f3d3:	pop    esi
  43f3d4:	mov    DWORD PTR [ebp+0x6581912e],ebx
  43f3da:	cs jmp 0xc63b5144
  43f3e0:	xor    al,0x34
  43f3e2:	add    DWORD PTR [edi+ebx*2],ebp
  43f3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f3e6:	cs and eax,0xdd38f25b
  43f3ec:	mov    WORD PTR [esi+0x6a8a9b39],gs
  43f3f2:	cmp    DWORD PTR [esi],esi
  43f3f4:	xor    BYTE PTR [eax],0x3b
  43f3f7:	mov    edi,0x263a957e
  43f3fc:	ins    BYTE PTR es:[edi],dx
  43f3fd:	shl    DWORD PTR [ebx+eiz*1],1
  43f400:	push   edi
  43f401:	push   edx
  43f402:	xor    al,0xac
  43f404:	push   edi
  43f405:	mov    edx,0x5cf4e936
  43f40a:	mul    DWORD PTR [ebp+0x76013434]
  43f410:	add    dl,BYTE PTR [edi-0x29f94bcf]
  43f416:	sub    al,0x81
  43f418:	add    dl,dh
  43f41a:	cs imul ebp,ecx,0x5b
  43f41e:	cs mov ah,0xe1
  43f421:	fldcw  WORD PTR [edi]
  43f423:	int3   
  43f424:	fsub   QWORD PTR [ecx+edi*1]
  43f427:	imul   ebx,esp,0x13eb38b5
  43f42d:	sbb    bh,BYTE PTR [edx]
  43f42f:	xlat   BYTE PTR ds:[ebx]
  43f430:	or     eax,ebp
  43f432:	cmp    cl,bh
  43f434:	add    BYTE PTR [eax],al
  43f436:	inc    BYTE PTR [esp+edi*1]
  43f439:	add    BYTE PTR [esi+0x603c097e],ah
  43f43f:	jnp    0x43f409
  43f441:	cmp    al,0x26
  43f443:	jp     0x43f4a5
  43f445:	or     edi,DWORD PTR ds:[ebx-0x57]
  43f449:	aas    
  43f44a:	cmp    BYTE PTR [edx-0x9],0xff
  43f44e:	sahf   
  43f44f:	daa    
  43f450:	clc    
  43f451:	inc    DWORD PTR [edx-0x5afffed0]
  43f457:	sbb    BYTE PTR ds:0x2e80de31,0x31
  43f45e:	pop    esi
  43f45f:	add    DWORD PTR [ecx+0x31],0x315b8126
  43f466:	sub    al,0x81
  43f468:	pop    ebp
  43f469:	xor    edx,edi
  43f46b:	jg     0x43f407
  43f46d:	xor    DWORD PTR [edx-0x3dce6280],edi
  43f473:	xor    BYTE PTR [edi-0x367fe7cf],0x31
  43f47a:	sbb    al,BYTE PTR [eax-0x7a6dce01]
  43f480:	lea    esi,[edx]
  43f482:	mov    ch,0x85
  43f484:	mov    ecx,0xda852b32
  43f489:	xor    ah,BYTE PTR [eax]
  43f48b:	test   DWORD PTR [esi],edx
  43f48d:	xor    edi,DWORD PTR [edx-0x7a]
  43f490:	mov    cl,0x33
  43f492:	push   eax
  43f493:	xchg   BYTE PTR [edx],bl
  43f495:	xor    al,0xf9
  43f497:	xor    BYTE PTR [esp+esi*1],0x0
  43f49b:	add    BYTE PTR [ebp+0x3b34c682],dh
  43f4a1:	and    esp,0x34
  43f4a4:	pop    ds
  43f4a5:	jl     0x43f50c
  43f4a7:	xor    eax,0x35c87c51
  43f4ac:	add    eax,DWORD PTR [ecx-0x7f0dc9ed]
  43f4b2:	daa    
  43f4b3:	ss aaa 
  43f4b5:	sbb    edi,ecx
  43f4b7:	popa   
  43f4b8:	sub    DWORD PTR [edx+0x6621dfce],esi
  43f4be:	int3   
  43f4bf:	sbb    cl,BYTE PTR [eax]
  43f4c1:	cmp    ecx,esi
  43f4c3:	jns    0x43f4c5
  43f4c5:	add    ecx,esi
  43f4c7:	fisttp DWORD PTR [eax]
  43f4c9:	data16 fstp TBYTE PTR [ebx-0x1]
  43f4cd:	jmp    0x43f4a3
  43f4cf:	mov    cl,0x6f
  43f4d1:	cli    
  43f4d2:	aam    0xc1
  43f4d4:	outs   dx,DWORD PTR ds:[esi]
  43f4d5:	xchg   ecx,eax
  43f4d6:	aam    0xd9
  43f4d8:	pop    edi
  43f4d9:	scas   eax,DWORD PTR es:[edi]
  43f4da:	aam    0xe7
  43f4dc:	pop    edi
  43f4dd:	ret    0xf9d4
  43f4e0:	dec    edi
  43f4e1:	outs   dx,BYTE PTR ds:[esi]
  43f4e2:	fidivr DWORD PTR ds:0x4fdc144e
  43f4e8:	ds inc ebx
  43f4ea:	fsub   QWORD PTR [eax+0x3e]
  43f4ed:	xchg   dl,bl
  43f4ef:	outs   dx,BYTE PTR ds:[esi]
  43f4f0:	cs push esp
  43f4f2:	fiadd  DWORD PTR [esi+ebp*1+0x1ec2dbe0]
  43f4f9:	push   esi
  43f4fa:	fstp   DWORD PTR [eax]
  43f4fc:	sbb    eax,0x28db45
  43f501:	add    BYTE PTR ds:0xd40d960,cl
  43f507:	xchg   esi,eax
  43f508:	(bad)  [esi-0x3]
  43f50b:	ret    
  43f50c:	fnstcw WORD PTR [ebx-0x3]
  43f50f:	(bad)  
  43f510:	fimul  DWORD PTR [ecx+0xddb026d]
  43f516:	ins    BYTE PTR es:[edi],dx
  43f517:	xchg   edi,eax
  43f518:	fdivr  DWORD PTR [eax-0x1325c6a4]
  43f51e:	pop    esp
  43f51f:	jns    0x43f4f8
  43f521:	pop    eax
  43f522:	push   ebx
  43f523:	sbb    al,0xe1
  43f525:	fimul  WORD PTR [ebx+0x7a]
  43f528:	(bad)  
  43f529:	xor    BYTE PTR [edx-0x45],al
  43f52c:	(bad)  
  43f52d:	pop    ebp
  43f52e:	cmp    dh,BYTE PTR [edi+eiz*2]
  43f531:	(bad)  
  43f533:	pop    ss
  43f534:	fiadd  WORD PTR [eax+ebx*1]
  43f538:	int3   
  43f539:	fmulp  st(6),st
  43f53b:	pop    ss
  43f53c:	rcr    esi,cl
  43f53e:	xor    BYTE PTR [edx],bl
  43f540:	(bad)  
  43f541:	fnsave [ecx]
  43f543:	sbb    bh,bh
  43f545:	fstp   QWORD PTR ds:0x74ddf31a
  43f54b:	sbb    ah,BYTE PTR [ebx]
  43f54d:	fisubr WORD PTR [ecx+0x1a]
  43f550:	or     ebx,esi
  43f552:	pop    ss
  43f553:	sbb    al,BYTE PTR ds:0x131a25de
  43f559:	fisub  WORD PTR [edx]
  43f55b:	sbb    ah,BYTE PTR [ebx-0x23]
  43f55e:	stos   BYTE PTR es:[edi],al
  43f55f:	sbb    ah,BYTE PTR [edx-0x23]
  43f562:	ficomp DWORD PTR [edx]
  43f564:	dec    eax
  43f565:	fld    QWORD PTR [eax]
  43f567:	add    ah,al
  43f569:	sbb    ch,BYTE PTR [esi]
  43f56b:	ffree  st(2)
  43f56d:	sbb    ah,BYTE PTR [ecx+0x3e1a6add]
  43f573:	fst    QWORD PTR [edi+0x1a]
  43f576:	pop    edx
  43f577:	frstor [edi+0x1a]
  43f57a:	dec    ebp
  43f57b:	(bad)  [edi]
  43f57d:	sbb    ebx,edi
  43f57f:	fadd   QWORD PTR [ecx+0x19]
  43f582:	or     ebp,ebx
  43f584:	pop    ss
  43f585:	sbb    DWORD PTR [edx-0x4de72c24],esi
  43f58b:	fmul   QWORD PTR [ebx+0x40dc1c19]
  43f591:	sbb    edx,ebp
  43f593:	and    esi,DWORD PTR [eax]
  43f595:	pop    ecx
  43f596:	pop    ecx
  43f597:	add    esi,DWORD PTR [edi]
  43f599:	xor    al,0xfa
  43f59b:	rcr    DWORD PTR [ebx+0x24],cl
  43f59e:	stos   BYTE PTR es:[edi],al
  43f59f:	shl    DWORD PTR [ecx+0x24],cl
  43f5a2:	xchg   ebx,edx
  43f5a4:	test   DWORD PTR [edi+eiz*2],esp
  43f5a7:	rcr    edx,cl
  43f5a9:	and    eax,DWORD PTR [ecx]
  43f5ab:	adc    ah,ah
  43f5ad:	pop    ebp
  43f5ae:	xor    dh,ah
  43f5b0:	in     eax,0xd
  43f5b2:	xor    ch,BYTE PTR [edx+ecx*1]
  43f5b5:	out    dx,eax
  43f5b6:	xor    DWORD PTR [eax+0x2],edi
  43f5b9:	mov    WORD PTR [ecx],?
  43f5bb:	mov    eax,0xc231530a
  43f5c0:	add    dh,BYTE PTR [edi]
  43f5c2:	xor    ebp,DWORD PTR [ebp-0x17]
  43f5c5:	mov    edx,0x1ee19332
  43f5ca:	xor    al,0x49
  43f5cc:	add    BYTE PTR [eax],al
  43f5ce:	call   0xe0ce297e
  43f5d3:	mov    esi,DWORD PTR [ebx]
  43f5d5:	scas   al,BYTE PTR es:[edi]
  43f5d6:	mov    BYTE PTR [ebx+0x33],cl
  43f5d9:	pushf  
  43f5da:	and    BYTE PTR [ebx],0x2d
  43f5dd:	cmp    al,BYTE PTR [edi-0x78aed373]
  43f5e3:	je     0x43f611
  43f5e5:	mov    dl,0x67
  43f5e7:	fs sub al,0xe1
  43f5ea:	ucomiss xmm6,DWORD PTR [di-0x4f99]
  43f5f0:	sub    eax,0x2f3666d9
  43f5f5:	mov    dh,0x86
  43f5f7:	dec    edx
  43f5f8:	cs push esp
  43f5fa:	test   DWORD PTR [ecx+0x30],eax
  43f5fd:	push   eax
  43f5fe:	test   BYTE PTR ds:0x657b1b39,bh
  43f604:	cmp    BYTE PTR [ebx+0x72],dh
  43f607:	adc    BYTE PTR [ebx],bh
  43f609:	stos   DWORD PTR es:[edi],eax
  43f60a:	push   0x2
  43f60c:	cmp    al,0xc0
  43f60e:	popa   
  43f60f:	ins    DWORD PTR es:[edi],dx
  43f610:	cmp    eax,DWORD PTR [edi+0x58]
  43f613:	xor    dh,BYTE PTR ds:0x351b08f8
  43f619:	jae    0x43f62a
  43f61b:	jns    0x43f651
  43f61d:	jmp    0x38ff:0xf33627ff
  43f624:	ss add ah,ah
  43f627:	jl     0x43f66b
  43f629:	cmp    eax,0x3d8c7d9f
  43f62e:	mov    ch,0x7d
  43f630:	ins    DWORD PTR es:[edi],dx
  43f631:	add    BYTE PTR ds:[eax],al
  43f634:	and    edi,DWORD PTR [edx-0x20]
  43f637:	or     BYTE PTR ds:[esi-0x7],bh
  43f63b:	ds call 0x228314bb
  43f641:	jnp    0x43f6b8
  43f643:	aas    
  43f644:	push   ecx
  43f645:	jp     0x43f63e
  43f647:	(bad)  
  43f648:	fiadd  WORD PTR [ebx-0x8]
  43f64b:	push   DWORD PTR [edx+0x30]
  43f64e:	add    DWORD PTR [eax],eax
  43f650:	rol    DWORD PTR [ebx-0x7fd1d003],cl
  43f656:	and    dh,BYTE PTR [ecx]
  43f658:	test   BYTE PTR [eax-0x7fe3cedc],al
  43f65e:	jge    0x43f691
  43f660:	and    al,0x80
  43f662:	mov    ds:0x6a817731,al
  43f667:	xor    ah,BYTE PTR [ebx]
  43f669:	sub    esp,0xb7e9132
  43f66f:	xor    ebx,DWORD PTR [edi+0x7e]
  43f672:	sti    
  43f673:	xor    ecx,DWORD PTR [esi]
  43f675:	test   DWORD PTR [edi-0x257a32ca],edx
  43f67b:	cmp    BYTE PTR [edx],ah
  43f67d:	js     0x43f68f
  43f67f:	cmp    al,dh
  43f681:	jns    0x43f638
  43f683:	cmp    dl,BYTE PTR [ecx]
  43f685:	jns    0x43f651
  43f687:	cmp    dh,BYTE PTR [ecx+0x76]
  43f68a:	sbb    bh,BYTE PTR [ebx]
  43f68c:	ds jl  0x43f6ac
  43f68f:	cmp    eax,0x3dbf7c9c
  43f694:	out    dx,eax
  43f695:	jnp    0x43f63a
  43f697:	add    BYTE PTR ds:[eax],al
  43f69a:	test   DWORD PTR [ebp-0x5a],edi
  43f69d:	mov    bh,BYTE PTR ds:[ebp-0x2d]
  43f6a1:	ds aaa 
  43f6a3:	cmp    ebx,edx
  43f6a5:	stc    
  43f6a6:	pop    ecx
  43f6a7:	jne    0x43f683
  43f6a9:	inc    ecx
  43f6aa:	push   eax
  43f6ab:	(bad)  
  43f6ad:	or     BYTE PTR [eax+0x4d],0x83
  43f6b1:	inc    BYTE PTR [eax]
  43f6b3:	in     eax,dx
  43f6b4:	add    eax,DWORD PTR [eax]
  43f6b6:	aaa    
  43f6b7:	mov    ebx,0xa326bccc
  43f6bc:	sar    DWORD PTR ds:0x46cf1a25,cl
  43f6c2:	and    al,0xe2
  43f6c4:	int    0xaf
  43f6c6:	and    al,0x9a
  43f6c8:	int    0x34
  43f6ca:	or     eax,ecx
  43f6cc:	(bad)  
  43f6cd:	lods   eax,DWORD PTR ds:[esi]
  43f6ce:	add    ch,BYTE PTR [ecx-0x39]
  43f6d1:	in     al,dx
  43f6d2:	or     cl,BYTE PTR [ecx-0x2f]
  43f6d5:	add    eax,0x1ad17b01
  43f6da:	imul   edi,DWORD PTR [ebx-0x2f],0xd0666137
  43f6e1:	push   esp
  43f6e2:	push   0x607bd238
  43f6e7:	(bad)  
  43f6e8:	shr    DWORD PTR [edx+0x5dd1a248],1
  43f6ee:	dec    edi
  43f6ef:	into   
  43f6f0:	aam    0xa8
  43f6f2:	aas    
  43f6f3:	mov    ah,dl
  43f6f5:	enter  0xc43f,0xd4
  43f6f9:	fs cs push ds
  43f6fc:	fsub   st(7),st
  43f6fe:	add    BYTE PTR [eax],al
  43f700:	cs aad 0xdb
  43f703:	adc    eax,0x38d7271d
  43f708:	sbb    eax,0xd7ed59e
  43f70d:	std    
  43f70e:	(bad)  
  43f70f:	xchg   ecx,eax
  43f710:	or     eax,0xfcbdd6b1
  43f715:	push   esp
  43f716:	iret   
  43f717:	adc    edi,ebx
  43f719:	(bad)  
  43f71a:	iret   
  43f71b:	push   ebx
  43f71c:	jae    0x43f752
  43f71e:	mov    edi,0xb18b8d7
  43f723:	fdiv   DWORD PTR [edi+0x17]
  43f726:	cwde   
  43f727:	(bad)  
  43f728:	pop    esp
  43f729:	push   ss
  43f72a:	mov    bl,cl
  43f72c:	mov    esi,0xc8da3716
  43f731:	push   ss
  43f732:	or     ebx,edx
  43f734:	add    al,0x17
  43f736:	hlt    
  43f737:	fldcw  WORD PTR [ebx]
  43f739:	adc    eax,0x1598d94a
  43f73e:	nop
  43f73f:	fsub   DWORD PTR [ebp+edx*1+0x15f4d896]
  43f746:	sahf   
  43f747:	fadd   DWORD PTR [esi+edx*1]
  43f74a:	test   al,0xd8
  43f74c:	fcom   DWORD PTR ds:0x55c8d8b7
  43f752:	jmp    0x4d99b8ca
  43f757:	add    esi,DWORD PTR [edi]
  43f759:	xor    al,0xea
  43f75b:	rol    DWORD PTR [edx+0x24],cl
  43f75e:	add    edx,esp
  43f760:	pop    ebp
  43f761:	and    al,0xd0
  43f763:	rol    DWORD PTR [eax],cl
  43f765:	add    al,bh
  43f767:	and    ebx,DWORD PTR [edi]
  43f769:	aam    0x5
  43f76b:	and    al,0x25
  43f76d:	aam    0x15
  43f76f:	and    al,0xd
  43f771:	aam    0x0
  43f773:	and    al,0x7f
  43f775:	ror    BYTE PTR [edx-0x563018df],cl
  43f77b:	and    BYTE PTR [eax],bh
  43f77d:	iret   
  43f77e:	stos   DWORD PTR es:[edi],eax
  43f77f:	and    BYTE PTR ds:0x492084cf,ch
  43f785:	iret   
  43f786:	push   ebx
  43f787:	and    dh,ah
  43f789:	into   
  43f78a:	inc    ebp
  43f78b:	pop    ds
  43f78c:	out    0xce,al
  43f78e:	and    bl,BYTE PTR [edi]
  43f790:	mov    ecx,0x941ec7ce
  43f795:	into   
  43f796:	nop
  43f797:	pop    ds
  43f798:	add    DWORD PTR [edx],esi
  43f79a:	imul   edi,DWORD PTR [ebx-0x2df9e3d2],0x540ca62f
  43f7a4:	cmp    BYTE PTR [esi],bl
  43f7a6:	cld    
  43f7a7:	cmp    edi,DWORD PTR [edx]
  43f7a9:	repz cli 
  43f7ab:	enter  0xe43a,0xf3
  43f7af:	repz cmp esi,DWORD PTR [ebp-0x46c43715]
  43f7b6:	call   0xe0f32cde
  43f7bb:	loop   0x43f7f1
  43f7bd:	inc    edx
  43f7be:	or     BYTE PTR [edi+esi*1],dh
  43f7c1:	dec    eax
  43f7c2:	add    esp,edx
  43f7c4:	ss pop ecx
  43f7c6:	or     ebx,esp
  43f7c8:	ss push 0x0
  43f7cb:	add    BYTE PTR [ecx],al
  43f7cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f7ce:	ss mov ecx,ebp
  43f7d1:	sahf   
  43f7d2:	lods   al,BYTE PTR ss:[esi]
  43f7d4:	loope  0x43f83c
  43f7d6:	ss retf 0x58e9
  43f7da:	ss in  eax,0xe1
  43f7dd:	and    edi,DWORD PTR [eax]
  43f7df:	inc    esp
  43f7e0:	mov    bh,cl
  43f7e2:	aaa    
  43f7e3:	sbb    al,BYTE PTR [eax-0x7784c822]
  43f7e9:	mov    bh,0x37
  43f7eb:	push   ebp
  43f7ec:	sub    BYTE PTR [eax+0x37],0xb7
  43f7f0:	push   0x14e93761
  43f7f5:	push   esi
  43f7f6:	div    DWORD PTR [ecx-0x46fecbc6]
  43f7fc:	and    esi,DWORD PTR fs:[ecx]
  43f7ff:	sbb    cl,BYTE PTR [ebx-0x7c5acf77]
  43f805:	arpl   WORD PTR [eax],si
  43f807:	jmp    0x1a82:0x7131b18b
  43f80e:	xor    al,0xc9
  43f810:	shl    BYTE PTR gs:[ebx],cl
  43f813:	add    ch,al
  43f815:	and    BYTE PTR [ebp-0x3d7f49cd],0x33
  43f81c:	sbb    al,0x81
  43f81e:	iret   
  43f81f:	xor    esp,DWORD PTR [eax]
  43f821:	test   BYTE PTR [ebx+0x34],al
  43f824:	iret   
  43f825:	xor    DWORD PTR [edi+0x34],0x73
  43f829:	fs enter 0x3834,0x64
  43f82e:	adc    eax,0xe9000035
  43f833:	fs inc esi
  43f835:	xor    eax,0x357564a2
  43f83a:	xchg   ebx,eax
  43f83b:	gs pushf 
  43f83d:	xor    eax,0x35c3653c
  43f842:	ss gs cli 
  43f845:	xor    eax,0x361181d9
  43f84a:	cmp    eax,0x27363582
  43f84f:	or     BYTE PTR [ebx-0x367e42ca],0x36
  43f856:	inc    DWORD PTR [ecx-0x7e81c920]
  43f85c:	lock ss mov edx,0x19376282
  43f863:	and    BYTE PTR [edi-0xb7d27c9],0x37
  43f86a:	xchg   edx,eax
  43f86b:	outs   dx,DWORD PTR ds:[esi]
  43f86c:	sbb    BYTE PTR [eax],bh
  43f86e:	push   0x6f
  43f870:	sub    edi,DWORD PTR [eax]
  43f872:	xchg   ecx,eax
  43f873:	outs   dx,DWORD PTR ds:[esi]
  43f874:	stos   DWORD PTR es:[edi],eax
  43f875:	cmp    bh,dh
  43f877:	outs   dx,BYTE PTR ds:[esi]
  43f878:	int    0x38
  43f87a:	mov    al,0x6f
  43f87c:	adc    eax,0x44707339
  43f881:	cmp    DWORD PTR [esi],edi
  43f883:	jno    0x43f822
  43f885:	cmp    DWORD PTR ds:0x6339da70,esp
  43f88b:	ins    DWORD PTR es:[edi],dx
  43f88c:	inc    edx
  43f88d:	cmp    dh,BYTE PTR [edi]
  43f88f:	xchg   esi,eax
  43f890:	fstp   DWORD PTR [ebp+0xd]
  43f893:	jmp    0x43f86e
  43f895:	or     eax,DWORD PTR [eax]
  43f897:	add    BYTE PTR [ebx+eax*2],cl
  43f89a:	fmul   QWORD PTR [ebx-0x4]
  43f89d:	xchg   ebp,eax
  43f89e:	ficomp DWORD PTR [esp+edi*8-0x46]
  43f8a2:	fcmovb st,st(6)
  43f8a4:	ins    BYTE PTR es:[edi],dx
  43f8a5:	ins    BYTE PTR es:[edi],dx
  43f8a6:	iret   
  43f8a7:	adc    al,0x6b
  43f8a9:	cmp    bl,cl
  43f8ab:	and    DWORD PTR [ebx-0x7f],esp
  43f8ae:	iret   
  43f8af:	das    
  43f8b0:	pop    ebx
  43f8b1:	jo     0x43f882
  43f8b3:	xor    eax,0x43cf8253
  43f8b8:	dec    ebx
  43f8b9:	test   bh,cl
  43f8bb:	dec    ecx
  43f8bc:	inc    ebx
  43f8bd:	scas   al,BYTE PTR es:[edi]
  43f8be:	iret   
  43f8bf:	push   edi
  43f8c0:	cmp    ebp,DWORD PTR [eax-0x45cca231]
  43f8c6:	iret   
  43f8c7:	imul   ebp,DWORD PTR [ebx],0xffffffec
  43f8ca:	fdiv   DWORD PTR [ecx+0x23]
  43f8cd:	(bad)  
  43f8ce:	fdivr  DWORD PTR [edi+0x1b]
  43f8d1:	loopne 0x43f8ab
  43f8d3:	test   DWORD PTR [ebx],edx
  43f8d5:	repnz fcom DWORD PTR [ebx-0x66272bf5]
  43f8dc:	add    edi,DWORD PTR [esi-0x48045828]
  43f8e2:	fsubr  DWORD PTR [ebp-0x4427358d]
  43f8e8:	imul   ebx,DWORD PTR [eax+ebx*8-0x27799c3f],0xffffffcf
  43f8f0:	pop    ebx
  43f8f1:	nop
  43f8f2:	fcom   st(5)
  43f8f4:	push   ebx
  43f8f5:	mov    ds:0xa44be3d8,al
  43f8fa:	fsubr  st,st(1)
  43f8fc:	add    BYTE PTR [eax],al
  43f8fe:	inc    ebx
  43f8ff:	into   
  43f900:	fdiv   st,st(7)
  43f902:	cmp    ecx,eax
  43f904:	fdivr  st,st(5)
  43f906:	xor    ebx,DWORD PTR [edx-0x32]
  43f909:	or     ebp,DWORD PTR [edx]
  43f90b:	xor    al,0xf9
  43f90d:	(bad)  
  43f90e:	inc    esi
  43f90f:	adc    DWORD PTR [ebx],eax
  43f911:	xlat   BYTE PTR ds:[ebx]
  43f912:	cmp    BYTE PTR [ecx],dl
  43f914:	add    eax,0xf7111ad7
  43f919:	(bad)  
  43f91a:	add    al,0x11
  43f91c:	add    edi,edx
  43f91e:	(bad)  
  43f91f:	adc    BYTE PTR [ebx-0x62ef0f2a],ch
  43f925:	(bad)  
  43f926:	or     BYTE PTR [edi],0x8f
  43f929:	(bad)  
  43f92a:	mov    WORD PTR [edi],cs
  43f92c:	mov    esi,edx
  43f92e:	xchg   esi,eax
  43f92f:	setae  dh
  43f932:	mov    BYTE PTR [edi],cl
  43f934:	xchg   ebp,eax
  43f935:	(bad)  
  43f936:	mov    cl,BYTE PTR [edi]
  43f938:	xchg   esi,edx
  43f93a:	mov    ah,0xf
  43f93c:	jno    0x43f915
  43f93e:	scas   al,BYTE PTR es:[edi]
  43f93f:	cvtdq2ps xmm2,xmm7
  43f942:	mov    al,ds:0xd2d74d0f
  43f947:	(bad)  
  43f949:	xlat   BYTE PTR ds:[ebx]
  43f94a:	pushf  
  43f94b:	setns  dh
  43f94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f94f:	bt     esi,edx
  43f952:	cwde   
  43f953:	shld   esi,edx,cl
  43f956:	cli    
  43f957:	seta   dh
  43f95a:	in     al,0xf
  43f95c:	mov    eax,ds:0xcb0fded6
  43f961:	(bad)  
  43f962:	add    BYTE PTR [eax],al
  43f964:	ror    BYTE PTR [edi],1
  43f966:	mov    ebp,0xaf0fa2d6
  43f96b:	(bad)  
  43f96c:	lods   al,BYTE PTR ds:[esi]
  43f96d:	psubsw mm2,mm5
  43f970:	ss adc dh,bl
  43f973:	aad    0x28
  43f975:	adc    dh,ch
  43f977:	aad    0x2a
  43f979:	adc    ah,bh
  43f97b:	aad    0x54
  43f97d:	adc    dl,cl
  43f97f:	aad    0x4e
  43f981:	adc    bh,BYTE PTR [ebx+0x11240d5]
  43f987:	mov    ah,0x8a
  43f989:	getsec 
  43f98b:	es cmp ebp,0xe38ab836
  43f992:	ss mov esp,0xd936ef82
  43f998:	push   0xffffffc6
  43f99a:	ss int3 
  43f99c:	(bad)  
  43f99d:	shl    BYTE PTR [esi],1
  43f99f:	jae    0x43fa0b
  43f9a1:	shl    DWORD PTR [esi],0x56
  43f9a4:	bound  ebp,QWORD PTR [esi-0x68f572ca]
  43f9aa:	ss jp  0x43f9af
  43f9ad:	mov    DWORD PTR [esi],esi
  43f9af:	xor    BYTE PTR [edx],cl
  43f9b1:	xor    BYTE PTR [esi],0x36
  43f9b4:	add    ch,BYTE PTR [esi+0x36]
  43f9b7:	or     ch,dl
  43f9b9:	inc    edi
  43f9ba:	ss fucom st(3)
  43f9bd:	es cmp cl,al
  43f9c0:	jmp    0x43f9d2
  43f9c2:	cmp    BYTE PTR [edx-0x1608af1d],ah
  43f9c8:	add    BYTE PTR [eax],al
  43f9ca:	test   BYTE PTR [edx-0x9],dl
  43f9cd:	push   ecx
  43f9ce:	xor    al,0x34
  43f9d0:	add    eax,ebp
  43f9d2:	add    al,0x26
  43f9d4:	xor    DWORD PTR [eax+0x3],ecx
  43f9d7:	int3   
  43f9d8:	xor    BYTE PTR [edx-0x15],bh
  43f9db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f9dc:	xor    BYTE PTR [esi-0x2ccf751d],dl
  43f9e2:	jmp    0x43fa21
  43f9e4:	xor    al,BYTE PTR [edi]
  43f9e6:	loop   0x43f9d3
  43f9e8:	xor    DWORD PTR [ecx-0x76],eax
  43f9eb:	mov    esi,DWORD PTR [ecx]
  43f9ed:	xchg   ebp,eax
  43f9ee:	adc    BYTE PTR [ecx],0x33
  43f9f1:	cs mov edi,ecx
  43f9f4:	xor    dh,BYTE PTR [esi-0x7f]
  43f9f7:	test   DWORD PTR [edx],esi
  43f9f9:	mov    ds:0x90325b69,eax
  43f9fe:	popa   
  43f9ff:	push   eax
  43fa00:	xor    al,BYTE PTR [eax]
  43fa02:	push   esi
  43fa03:	imul   eax,DWORD PTR [ebx+0x868e233],0xa36bdc34
  43fa0d:	xor    al,0x97
  43fa0f:	imul   edx,esi,0x34
  43fa12:	aas    
  43fa13:	imul   ecx,DWORD PTR [ebp+0x35],0xffffffcd
  43fa17:	push   0x20
  43fa19:	ss outs dx,BYTE PTR es:[esi]
  43fa1c:	cmp    dh,BYTE PTR [esi]
  43fa1e:	mov    ch,BYTE PTR [edx+0x75]
  43fa21:	ss (bad) 
  43fa23:	ins    DWORD PTR es:[edi],dx
  43fa24:	sahf   
  43fa25:	ss mov ecx,0x4838536d
  43fa2b:	sub    BYTE PTR [ebx],0x39
  43fa2e:	add    BYTE PTR [eax],al
  43fa30:	jmp    0x937e:0x7139a780
  43fa37:	cmp    eax,DWORD PTR [edi]
  43fa39:	xor    BYTE PTR [esp+edi*1],0xd5
  43fa3d:	jg     0x43faa3
  43fa3f:	cmp    al,0x4e
  43fa41:	or     BYTE PTR fs:0x3d3564bd,bh
  43fa48:	lods   al,BYTE PTR ds:[esi]
  43fa49:	fs js  0x43fa89
  43fa4c:	das    
  43fa4d:	gs into 
  43fa4f:	cmp    eax,0x3e6865b7
  43fa54:	mov    ebx,0xbc3ea365
  43fa59:	gs mov ah,0x3e
  43fa5c:	mov    esp,DWORD PTR [ebp+0x4c]
  43fa5f:	aas    
  43fa60:	jae    0x43fac5
  43fa62:	idiv   edi
  43fa64:	into   
  43fa65:	jae    0x43fa5d
  43fa67:	dec    DWORD PTR [edx]
  43fa69:	cmp    BYTE PTR [ecx],al
  43fa6b:	add    BYTE PTR [eax+ebp*2+0x2e],al
  43fa6f:	xor    DWORD PTR [eax+0x69],edx
  43fa72:	dec    ebp
  43fa73:	xor    DWORD PTR [ecx-0x1cc6e97],eax
  43fa79:	gs mov edx,0xd9103733
  43fa7f:	test   eax,0xc4cfe443
  43fa84:	dec    ebx
  43fa85:	ins    DWORD PTR es:[edi],dx
  43fa86:	fcomp  DWORD PTR [esi+0x42]
  43fa89:	inc    edi
  43fa8a:	fdivr  DWORD PTR [esi+0x2a]
  43fa8d:	mov    edi,0x8a210bd8
  43fa92:	fnstcw WORD PTR [eax+0x0]
  43fa95:	add    BYTE PTR [ecx],ch
  43fa97:	pop    ebx
  43fa98:	fiadd  DWORD PTR [esi]
  43fa9a:	and    BYTE PTR [eax+0x3508b4da],bh
  43faa0:	(bad)  
  43faa1:	test   eax,0xcfc6a20c
  43faa6:	cld    
  43faa7:	imul   eax,edi,0xffffff82
  43faaa:	sti    
  43faab:	mov    al,dl
  43faad:	lea    esi,[edx-0x36]
  43fab0:	shl    BYTE PTR [esi],1
  43fab2:	push   0x20feb35d
  43fab7:	fld    DWORD PTR [ebx]
  43fab9:	add    BYTE PTR [edi],dh
  43fabb:	cmp    dl,ah
  43fabd:	test   BYTE PTR [edi-0xc],0xcd
  43fac1:	scas   eax,DWORD PTR es:[edi]
  43fac2:	inc    ebp
  43fac3:	sub    dh,cl
  43fac5:	es inc esp
  43fac7:	xchg   esp,eax
  43fac8:	into   
  43fac9:	lea    eax,[ecx+esi*8-0x32]
  43facd:	mov    dh,0x24
  43facf:	xor    ecx,edi
  43fad1:	in     eax,dx
  43fad2:	and    al,0x43
  43fad4:	int    0xfd
  43fad6:	and    al,0x43
  43fad8:	iret   
  43fad9:	or     eax,0xa6d93323
  43fade:	or     esi,DWORD PTR [esi-0x4afd6228]
  43fae4:	iret   
  43fae5:	mov    edx,0xabdafa0a
  43faea:	add    ebx,ecx
  43faec:	fidivr DWORD PTR [ecx+ebp*2+0x61e0daaa]
  43faf3:	nop
  43faf4:	(bad)  
  43faf6:	imul   esi,DWORD PTR [edx+eiz*8],0xaf0000d8
  43fafd:	push   es
  43fafe:	jo     0x43fad9
  43fb00:	fwait
  43fb01:	push   es
  43fb02:	pop    eax
  43fb03:	int3   
  43fb04:	bound  ecx,QWORD PTR [ebx]
  43fb06:	mov    cl,ah
  43fb08:	imul   ecx,DWORD PTR [ecx],0xffffff87
  43fb0b:	into   
  43fb0c:	sub    ecx,DWORD PTR [ebx]
  43fb0e:	retf   0xf4cc
  43fb11:	or     bl,BYTE PTR [ebx]
  43fb13:	int    0x1
  43fb15:	or     edi,esi
  43fb17:	int3   
  43fb18:	in     eax,0xa
  43fb1a:	mov    ecx,ebp
  43fb1c:	mov    BYTE PTR [edx],cl
  43fb1e:	xor    eax,0xf90a59cd
  43fb23:	iret   
  43fb24:	sub    eax,0x6d00210
  43fb29:	adc    BYTE PTR [ecx-0x30],bl
  43fb2c:	mov    al,ds:0xedd0940f
  43fb31:	adc    BYTE PTR [eax],ch
  43fb33:	shr    BYTE PTR [esi],1
  43fb35:	adc    esi,ebx
  43fb37:	into   
  43fb38:	das    
  43fb39:	str    edi
  43fb3c:	cmp    ecx,DWORD PTR [edi]
  43fb3e:	fxch   st(6)
  43fb40:	dec    ebp
  43fb41:	(bad)  
  43fb43:	into   
  43fb44:	xchg   edx,eax
  43fb45:	setp   dh
  43fb48:	xchg   BYTE PTR [edi],cl
  43fb4a:	ins    BYTE PTR es:[edi],dx
  43fb4b:	iret   
  43fb4c:	mov    cl,0xf
  43fb4e:	fs iret 
  43fb50:	xchg   esi,eax
  43fb51:	cvtps2pi mm1,xmm7
  43fb54:	or     DWORD PTR [eax],edx
  43fb56:	test   dh,0xe4
  43fb59:	pavgw  mm1,mm6
  43fb5c:	(bad)  [edi]
  43fb5e:	out    dx,eax
  43fb5f:	rol    DWORD PTR [eax],1
  43fb61:	add    BYTE PTR [esi+0xe],cl
  43fb64:	push   0x6e0ebed1
  43fb69:	rcr    DWORD PTR [esi-0x762e7af2],1
  43fb6f:	push   cs
  43fb70:	xchg   edi,eax
  43fb71:	sar    DWORD PTR [ebx-0x2b16fef3],1
  43fb77:	dec    esi
  43fb78:	idiv   DWORD PTR [ebp+0x34]
  43fb7b:	xor    al,0x1
  43fb7d:	add    eax,0xab329281
  43fb82:	push   0xffffffae
  43fb84:	xor    ecx,DWORD PTR [esi+0x63]
  43fb87:	lea    esi,[ebx]
  43fb89:	mov    ch,0x6b
  43fb8b:	inc    esi
  43fb8c:	xor    ebx,ecx
  43fb8e:	pusha  
  43fb8f:	daa    
  43fb90:	sub    eax,0x2cb188fc
  43fb95:	push   edi
  43fb96:	adc    BYTE PTR [ebx+0x2c],0x78
  43fb9a:	mov    BYTE PTR ds:0xaa815a2e,al
  43fba0:	mov    ch,BYTE PTR cs:[esi+0x77]
  43fba4:	cs dec ebx
  43fba6:	outs   dx,BYTE PTR ds:[esi]
  43fba7:	mov    bl,0x2f
  43fba9:	xchg   DWORD PTR [eax+edx*2+0x38],ebp
  43fbad:	cld    
  43fbae:	ins    DWORD PTR es:[edi],dx
  43fbaf:	retf   
  43fbb0:	cmp    DWORD PTR [ebp+edi*8-0x67],esp
  43fbb4:	cmp    DWORD PTR [ebx],ebp
  43fbb6:	std    
  43fbb7:	jl     0x43fbf2
  43fbb9:	adc    ebp,ebp
  43fbbb:	push   eax
  43fbbc:	cmp    DWORD PTR [ebp*8+0x2e63946],edx
  43fbc3:	add    eax,0xd63b
  43fbc8:	cli    
  43fbc9:	jmp    0x43fc05
  43fbcb:	(bad)  
  43fbcc:	repnz mov esi,0x6cea643a
  43fbd2:	cmp    ah,bh
  43fbd4:	add    eax,DWORD PTR [esp+edi*1]
  43fbd7:	xchg   esp,eax
  43fbd8:	sti    
  43fbd9:	mov    ch,0x3b
  43fbdb:	sub    bl,dh
  43fbdd:	dec    ebx
  43fbde:	cmp    edx,DWORD PTR [edi]
  43fbe0:	pop    es
  43fbe1:	shl    DWORD PTR [eax*4-0x5fcb7b19],cl
  43fbe8:	out    0x7c,eax
  43fbea:	xor    al,0xc7
  43fbec:	out    0x16,eax
  43fbee:	ss add cl,bh
  43fbf1:	bound  ebx,QWORD PTR [edi-0x3e9ccec3]
  43fbf7:	cmp    eax,0x3def62c2
  43fbfc:	(bad)  
  43fbfd:	jle    0x43fc0d
  43fbff:	ds jg  0x43fc80
  43fc02:	dec    edi
  43fc03:	ds sbb al,0x7e
  43fc06:	jle    0x43fc46
  43fc08:	adc    DWORD PTR [esi-0x74],edi
  43fc0b:	fidivr WORD PTR ds:[ebp-0x2f]
  43fc0f:	sar    DWORD PTR ds:[ebp+0x31],cl
  43fc13:	aas    
  43fc14:	mov    cl,0x7d
  43fc16:	pop    eax
  43fc17:	aas    
  43fc18:	xor    eax,0x9b3f967d
  43fc1d:	jl     0x43fbe8
  43fc1f:	aas    
  43fc20:	repz jl 0x43fc1a
  43fc23:	call   FWORD PTR [esi-0x60]
  43fc26:	idiv   bh
  43fc28:	mov    dl,0x37
  43fc2a:	add    DWORD PTR [eax],eax
  43fc2c:	add    BYTE PTR [eax],al
  43fc2e:	mov    fs,WORD PTR [eax+0x48]
  43fc31:	xor    BYTE PTR [ebx+0x60],ch
  43fc34:	cwde   
  43fc35:	xor    cl,al
  43fc37:	pusha  
  43fc38:	mov    cl,0x30
  43fc3a:	mov    ds:0x3f30c060,al
  43fc3f:	pusha  
  43fc40:	shl    BYTE PTR [eax],1
  43fc42:	sub    al,0x60
  43fc44:	fbstp  TBYTE PTR [eax]
  43fc46:	inc    ecx
  43fc47:	pusha  
  43fc48:	icebp  
  43fc49:	xor    BYTE PTR [ecx],dl
  43fc4b:	popa   
  43fc4c:	sbb    dh,BYTE PTR [ecx]
  43fc4e:	shl    BYTE PTR [eax+0x34],0x31
  43fc52:	cdq    
  43fc53:	pusha  
  43fc54:	push   ebp
  43fc55:	xor    DWORD PTR [eax+0x60],ebp
  43fc58:	ins    BYTE PTR es:[edi],dx
  43fc59:	xor    DWORD PTR [edi+0x61],ebx
  43fc5c:	mov    DWORD PTR [ecx],esi
  43fc5e:	mov    esp,DWORD PTR [ecx-0x67]
  43fc61:	xor    DWORD PTR [edx-0x7bce3ca0],ebp
  43fc67:	pusha  
  43fc68:	push   DWORD PTR [ecx]
  43fc6a:	aaa    
  43fc6b:	push   ebx
  43fc6c:	rcl    DWORD PTR [edx],1
  43fc6e:	add    eax,0x560d335
  43fc73:	push   cs
  43fc74:	shl    DWORD PTR [ebp+0x65],cl
  43fc77:	mov    ebx,0x9365b3d1
  43fc7c:	shl    ecx,1
  43fc7e:	gs push edi
  43fc80:	shr    BYTE PTR [ecx],cl
  43fc82:	fs sbb edx,esp
  43fc85:	jne    0x43fccb
  43fc87:	out    dx,al
  43fc88:	shl    BYTE PTR [ebp-0x312d1dbc],cl
  43fc8e:	inc    esp
  43fc8f:	mov    cl,0xd2
  43fc91:	repnz add BYTE PTR [eax],al
  43fc94:	inc    esp
  43fc95:	jb     0x43fc66
  43fc97:	outs   dx,DWORD PTR ds:[esi]
  43fc98:	sub    edx,edx
  43fc9a:	iret   
  43fc9b:	xchg   ecx,eax
  43fc9c:	and    ecx,DWORD PTR [esi]
  43fc9e:	into   
  43fc9f:	pop    esi
  43fca0:	sub    BYTE PTR ds:0x6e1f25cf,cl
  43fca6:	(bad)  
  43fca7:	(bad)  
  43fca8:	push   cs
  43fca9:	sti    
  43fcaa:	les    esp,FWORD PTR [ecx*1-0x22c34d8]
  43fcb1:	pusha  
  43fcb2:	retf   0xfca5
  43fcb5:	push   es
  43fcb6:	retf   
  43fcb7:	fsubr  DWORD PTR [eax+eax*1-0x35]
  43fcbb:	add    ebp,DWORD PTR [ebx+0x43]
  43fcbe:	(bad)  
  43fcbf:	data16 arpl WORD PTR [ebx-0x30],bx
  43fcc3:	popa   
  43fcc4:	pop    edx
  43fcc5:	mov    al,0xd0
  43fcc7:	ret    0x3852
  43fcca:	rol    DWORD PTR [ecx+ecx*2+0x4030c64e],1
  43fcd1:	add    esi,0x35d3884
  43fcd7:	(bad)  
  43fcd8:	lock jo 0x43fcd7
  43fcdb:	push   DWORD PTR [edi]
  43fcdd:	pop    edi
  43fcde:	rol    DWORD PTR [edx+0x27],cl
  43fce1:	rcl    bl,1
  43fce3:	test   DWORD PTR [edi],esp
  43fce5:	xor    al,0x7a
  43fce7:	aam    0x9c
  43fce9:	add    esi,DWORD PTR [edx+0x1003cad4]
  43fcef:	rcl    DWORD PTR [edx+0x5],cl
  43fcf2:	pop    esi
  43fcf3:	shl    DWORD PTR [esp+eax*1+0xd386],cl
  43fcfa:	fadd   QWORD PTR [esi+ecx*4]
  43fcfd:	rcl    DWORD PTR [edx+0x30d3bb04],cl
  43fd03:	push   es
  43fd04:	std    
  43fd05:	shl    DWORD PTR [edi+0x6],1
  43fd08:	xor    eax,0xc05ecd2
  43fd0d:	rcl    BYTE PTR [edx],cl
  43fd0f:	push   es
  43fd10:	sbb    dl,dl
  43fd12:	mov    ecx,0xb3d27905
  43fd17:	push   es
  43fd18:	arpl   cx,dx
  43fd1a:	rol    DWORD PTR [esi],1
  43fd1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fd1d:	rcr    DWORD PTR [ebp+0x6],1
  43fd20:	xlat   BYTE PTR ds:[ebx]
  43fd21:	xlat   BYTE PTR ds:[ebx]
  43fd22:	sub    al,BYTE PTR [eax]
  43fd24:	sub    eax,ebx
  43fd26:	aam    0xff
  43fd28:	outs   dx,BYTE PTR ds:[esi]
  43fd29:	fcom   DWORD PTR [ebp+0x64d82aff]
  43fd2f:	call   DWORD PTR [ebx-0x28]
  43fd32:	and    al,BYTE PTR [ecx]
  43fd34:	aam    0xd6
  43fd36:	push   0x1bd71800
  43fd3b:	add    BYTE PTR [edx-0x29],al
  43fd3e:	cmp    eax,0x6ad60602
  43fd43:	add    ah,BYTE PTR [ebp+edx*8-0x2a68fd87]
  43fd4a:	mov    edi,0xe4d65002
  43fd4f:	add    dl,BYTE PTR [esi]
  43fd51:	(bad)  
  43fd52:	sub    eax,0x14d52501
  43fd57:	add    bh,ch
  43fd59:	aam    0x22
  43fd5b:	or     al,0xa9
  43fd5d:	retf   
  43fd5e:	add    BYTE PTR [eax],al
  43fd60:	(bad)  
  43fd61:	or     al,0x1
  43fd63:	inc    ecx
  43fd64:	repz cdq 
  43fd66:	cmp    BYTE PTR [esi+0x5439e6ed],ch
  43fd6c:	cld    
  43fd6d:	into   
  43fd6e:	cmp    DWORD PTR [ebp+edi*8-0x58],ebp
  43fd72:	cmp    DWORD PTR [esi-0x49c68b13],ebx
  43fd78:	in     eax,dx
  43fd79:	inc    eax
  43fd7a:	cmp    esp,ebx
  43fd7c:	jle    0x43fd81
  43fd7e:	cmp    ebp,DWORD PTR [edi]
  43fd80:	jge    0x43fd56
  43fd82:	cmp    ch,BYTE PTR [esi+0x6e]
  43fd85:	test   eax,0x9d6e873a
  43fd8a:	cmp    bl,BYTE PTR [ebx+0x7e]
  43fd8d:	jb     0x43fdc9
  43fd8f:	mov    eax,ds:0xfa3c327e
  43fd94:	outs   dx,DWORD PTR ds:[esi]
  43fd95:	adc    BYTE PTR [edx*8+0x153bef6f],bh
  43fd9c:	jle    0x43fd5d
  43fd9e:	cmp    ebx,DWORD PTR [ecx+0x7f]
  43fda1:	xchg   edi,eax
  43fda2:	cmp    ebp,DWORD PTR [ecx+0x713b636f]
  43fda8:	outs   dx,DWORD PTR ds:[esi]
  43fda9:	xor    esi,DWORD PTR ds:0x350b6705
  43fdaf:	lods   eax,DWORD PTR ds:[esi]
  43fdb0:	js     0x43fd99
  43fdb2:	xor    al,0x6e
  43fdb4:	jo     0x43fd5c
  43fdb6:	xor    al,0x82
  43fdb8:	push   0x273479
  43fdbd:	inc    ebp
  43fdbe:	xor    al,0xd7
  43fdc0:	stc    
  43fdc1:	adc    al,0x36
  43fdc3:	repz add BYTE PTR [eax],al
  43fdc6:	icebp  
  43fdc7:	in     al,dx
  43fdc8:	xor    eax,0x35c8e9c3
  43fdcd:	dec    esp
  43fdce:	add    DWORD PTR [eax+0x5af93035],ebx
  43fdd4:	xor    eax,0x3548f110
  43fdd9:	out    0xea,al
  43fddb:	cmp    dh,BYTE PTR [edi]
  43fddd:	add    BYTE PTR [ebx],dl
  43fddf:	ja     0x43fdfc
  43fde1:	ds std 
  43fde3:	jbe    0x43fe0e
  43fde5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fde7:	jbe    0x43fe59
  43fde9:	ds push esi
  43fdeb:	ja     0x43fdb0
  43fded:	ds xchg ebx,eax
  43fdef:	jge    0x43fe02
  43fdf1:	aas    
  43fdf2:	xor    DWORD PTR [ebp+0x5f],edi
  43fdf5:	aas    
  43fdf6:	pop    eax
  43fdf7:	jge    0x43fd88
  43fdf9:	aas    
  43fdfa:	mov    WORD PTR [edx+ecx*8+0x3f],?
  43fdfe:	aad    0x7c
  43fe00:	out    0x3f,eax
  43fe02:	sahf   
  43fe03:	inc    esp
  43fe04:	cmc    
  43fe05:	(bad)  
  43fe06:	out    dx,al
  43fe07:	add    DWORD PTR cs:[eax],eax
  43fe0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fe0b:	fs inc ecx
  43fe0d:	xor    BYTE PTR [esi-0x4fcf60a1],dh
  43fe13:	pop    edi
  43fe14:	xor    BYTE PTR [ecx],0x1b
  43fe17:	pop    edi
  43fe18:	mov    ebx,0x2c5e7331
  43fe1d:	xor    ah,BYTE PTR [ecx]
  43fe1f:	bound  eax,QWORD PTR [edi+0x32]
  43fe22:	dec    ebx
  43fe23:	bound  edx,QWORD PTR [edx+esi*1+0x38]
  43fe27:	bound  ecx,QWORD PTR [esi-0xeffffce]
  43fe2d:	popa   
  43fe2e:	stos   DWORD PTR es:[edi],eax
  43fe2f:	xor    dh,BYTE PTR [edx-0x56cd529f]
  43fe35:	popa   
  43fe36:	shl    DWORD PTR [edx],0x1a
  43fe39:	(bad)  
  43fe3a:	(bad)  
  43fe3b:	xor    al,BYTE PTR [esi]
  43fe3d:	(bad)  
  43fe3e:	fnstenv [edx]
  43fe40:	jge    0x43fea0
  43fe42:	fnsave [edx]
  43fe44:	outs   dx,BYTE PTR ds:[esi]
  43fe45:	pop    esi
  43fe46:	repnz xor ch,BYTE PTR [edx+0x5e]
  43fe4a:	cmc    
  43fe4b:	xor    dl,BYTE PTR [ecx]
  43fe4d:	pop    edi
  43fe4e:	or     DWORD PTR [ebx],esi
  43fe50:	adc    bl,BYTE PTR [edi+0x1b]
  43fe53:	xor    esi,edx
  43fe55:	pop    esi
  43fe56:	sub    esi,DWORD PTR [ebx]
  43fe58:	aaa    
  43fe59:	xchg   esi,ecx
  43fe5b:	pop    ecx
  43fe5c:	inc    esp
  43fe5d:	mov    edx,0xdd2469ce
  43fe62:	iret   
  43fe63:	xchg   edi,eax
  43fe64:	and    al,0xf9
  43fe66:	iret   
  43fe67:	mov    edx,0xd1d01424
  43fe6c:	and    al,0x39
  43fe6e:	rcr    dh,1
  43fe70:	add    al,0x65
  43fe72:	into   
  43fe73:	adc    al,0x3
  43fe75:	sub    eax,0x1f0b30d1
  43fe7a:	ror    DWORD PTR [ebx+eax*1-0x11],1
  43fe7e:	rol    BYTE PTR [esi-0x48382e95],1
  43fe84:	arpl   si,ax
  43fe86:	(bad)  
  43fe87:	fisubr WORD PTR [ebx+0x73]
  43fe8a:	mov    DWORD PTR [eax],0x12d06862
  43fe90:	add    BYTE PTR [eax],al
  43fe92:	dec    edx
  43fe93:	das    
  43fe94:	shl    BYTE PTR [edx+eax*2],cl
  43fe97:	sbb    edx,edx
  43fe99:	dec    edi
  43fe9a:	dec    edx
  43fe9b:	pop    es
  43fe9c:	rcr    BYTE PTR [edx+0x42],cl
  43fe9f:	xor    edx,edx
  43fea1:	data16 sub bl,BYTE PTR [esi]
  43fea4:	rol    BYTE PTR [edi-0x412f0ade],cl
  43feaa:	sub    bh,BYTE PTR [edx+0x6c22ffd0]
  43feb0:	rol    DWORD PTR [ecx+0x9],1
  43feb3:	adc    ecx,0xd187014d
  43feb9:	arpl   WORD PTR [ecx],cx
  43febb:	pusha  
  43febc:	shl    DWORD PTR [eax-0x372e39ff],1
  43fec2:	imul   ebp,DWORD PTR [ecx],0xfa61d9d2
  43fec8:	shl    esi,1
  43feca:	imul   ecx,DWORD PTR [edx+edx*8],0xd25561f6
  43fed1:	or     cl,BYTE PTR [eax+0x34]
  43fed4:	not    dl
  43fed6:	push   esi
  43fed7:	inc    ebp
  43fed9:	shl    BYTE PTR [ebp-0x1],cl
  43fedc:	mov    ds:0xaeff69d2,al
  43fee1:	shl    BYTE PTR [edx-0x1],cl
  43fee4:	data16 sar BYTE PTR [ecx-0x662dc202],cl
  43feeb:	(bad)  
  43feec:	and    edx,edx
  43feee:	in     eax,dx
  43feef:	(bad)  
  43fef0:	sbb    edx,edx
  43fef2:	enter  0xdffe,0xd1
  43fef6:	add    BYTE PTR [eax],al
  43fef8:	data16 or al,0x47
  43fefb:	int3   
  43fefc:	inc    ebp
  43fefd:	or     al,0x69
  43feff:	int3   
  43ff00:	scas   eax,DWORD PTR es:[edi]
  43ff01:	or     ebp,DWORD PTR [esp+ecx*8-0x3348f486]
  43ff08:	lods   eax,DWORD PTR ds:[esi]
  43ff09:	or     esp,esi
  43ff0b:	retf   0xd3e
  43ff0e:	test   dl,0xfa
  43ff11:	or     al,0x37
  43ff13:	retf   
  43ff14:	or     al,0xd
  43ff16:	ins    BYTE PTR es:[edi],dx
  43ff17:	retf   
  43ff18:	mov    al,0xc
  43ff1a:	dec    esp
  43ff1b:	retf   
  43ff1c:	fmul   DWORD PTR [ebx+ebp*4]
  43ff1f:	retf   
  43ff20:	jo     0x43ff2e
  43ff22:	test   al,0xcb
  43ff24:	xchg   ebx,eax
  43ff25:	or     al,0xf2
  43ff27:	int    0x4d
  43ff29:	or     cl,bl
  43ff2b:	int    0xfb
  43ff2d:	or     DWORD PTR [esi+ecx*8],ecx
  43ff30:	lods   al,BYTE PTR ds:[esi]
  43ff31:	or     ebp,ebx
  43ff33:	int3   
  43ff34:	mov    ecx,DWORD PTR [edx]
  43ff36:	sub    al,0xcd
  43ff38:	jo     0x43ff44
  43ff3a:	sub    ch,cl
  43ff3c:	or     BYTE PTR cs:[eax+ecx*8+0x72],bh
  43ff41:	pop    es
  43ff42:	cli    
  43ff43:	(bad)  
  43ff44:	dec    edx
  43ff45:	pop    es
  43ff46:	cmc    
  43ff47:	mov    ah,0x7
  43ff4a:	inc    esi
  43ff4b:	(bad)  
  43ff4c:	retf   0x106
  43ff4f:	and    eax,0x2e365eed
  43ff54:	std    
  43ff55:	cmp    BYTE PTR ss:0xdd3815fe,al
  43ff5c:	add    BYTE PTR [eax],al
  43ff5e:	out    dx,eax
  43ff5f:	repnz aaa 
  43ff61:	mov    ebx,0x9537e5ef
  43ff66:	dec    ebx
  43ff68:	aaa    
  43ff69:	xor    edi,esi
  43ff6b:	pusha  
  43ff6c:	aaa    
  43ff6d:	jmp    0x463b4746
  43ff72:	xor    esi,DWORD PTR [ecx+eax*1]
  43ff75:	in     al,0xe4
  43ff77:	sbb    eax,0xfbe31631
  43ff7c:	xor    BYTE PTR [edx-0x15],al
  43ff7f:	(bad)  
  43ff80:	xor    BYTE PTR [ebx+0x1d3044e4],bl
  43ff86:	test   BYTE PTR [esi+0x31],ch
  43ff89:	mov    dh,0x85
  43ff8b:	xor    WORD PTR [ebx+0x2c333c85],di
  43ff92:	and    edx,0xc6693532
  43ff98:	xor    dh,BYTE PTR [ecx+0x62]
  43ff9b:	stos   DWORD PTR es:[edi],eax
  43ff9c:	xor    bh,BYTE PTR [edi-0x64cdae96]
  43ffa2:	bound  ecx,QWORD PTR [ecx+0x32]
  43ffa5:	ss mov dl,dh
  43ffa8:	xor    edi,edi
  43ffaa:	sub    DWORD PTR [edi+0x528bb233],0x33
  43ffb1:	add    DWORD PTR [ebx-0x7f36ccb9],0xffffffff
  43ffb8:	sub    al,0x26
  43ffba:	addr16 out dx,al
  43ffbc:	sub    al,0x91
  43ffbe:	jo     0x43ff5b
  43ffc0:	sub    al,0x2e
  43ffc2:	add    BYTE PTR [eax],al
  43ffc4:	push   0x2c2c64
  43ffc9:	xor    BYTE PTR [esi],ch
  43ffcb:	add    cl,bl
  43ffcd:	jne    0x440013
  43ffcf:	xor    eax,0x359a75d4
  43ffd4:	lods   eax,DWORD PTR ds:[esi]
  43ffd5:	jne    0x43ff84
  43ffd7:	xor    eax,0x35db762e
  43ffdc:	add    eax,0xe6361163
  43ffe1:	bound  ebp,QWORD PTR [esi]
  43ffe3:	ss ja  0x440049
  43ffe6:	shl    BYTE PTR [esi],1
  43ffe8:	inc    esi
  43ffe9:	arpl   WORD PTR [eax+edi*1],dx
  43ffec:	outs   dx,BYTE PTR ds:[esi]
  43ffed:	jns    0x43fff4
  43ffef:	cmp    esi,esi
  43fff1:	jns    0x440041
  43fff3:	cmp    DWORD PTR [edx+0x9397e79],ebp
  43fff9:	jp     0x43ffb0
  43fffb:	cmp    esi,edi
  43fffd:	jns    0x440039
  43ffff:	cmp    esp,ebx
  440001:	js     0x44001e
  440003:	cmp    al,0x3
  440005:	jl     0x44006f
  440007:	cmp    al,0x21
  440009:	jl     0x43ffe9
  44000b:	cmp    al,0xf4
  44000d:	jp     0x440028
  44000f:	shr    BYTE PTR ds:[ebp-0x2],0x3e
  440014:	js     0x440083
  440016:	cmp    al,0x3f
  440018:	jmp    0x440086
  44001a:	idiv   edi
  44001c:	sahf   
  44001d:	pusha  
  44001e:	cmc    
  44001f:	jmp    FWORD PTR [edx]
  440021:	xor    BYTE PTR [ecx],al
  440023:	add    BYTE PTR [ebp+0x60],bl
  440026:	pop    edx
  440027:	xor    BYTE PTR [eax],al
  440029:	add    ah,ch
  44002b:	pop    edi
  44002c:	xor    eax,0xf61d932
  440031:	xor    edx,edi
  440033:	pusha  
  440034:	cmp    dh,BYTE PTR [edx+edi*4]
  440037:	arpl   ax,bp
  440039:	xor    al,0x6b
  44003b:	arpl   WORD PTR [esi+0x18764135],sp
  440041:	ss push ds
  440043:	jbe    0x440072
  440045:	ss aaa 
  440047:	(bad)  
  440048:	lds    eax,FWORD PTR [ecx+ebp*2+0x601ec6c8]
  44004f:	xchg   ebx,eax
  440050:	retf   
  440051:	mov    DWORD PTR [edi-0xc],ebx
  440054:	les    eax,FWORD PTR [esi+0x46c60e5e]
  44005a:	dec    ebp
  44005b:	out    0xca,al
  44005d:	leave  
  44005e:	dec    ebp
  44005f:	sbb    bl,cl
  440061:	sub    al,0x3c
  440063:	scas   eax,DWORD PTR es:[edi]
  440064:	retf   0x3cf8
  440067:	addr16 mov edi,0xc85833cf
  44006d:	adc    al,0x2a
  44006f:	lods   eax,DWORD PTR ds:[esi]
  440070:	enter  0x226f,0xde
  440074:	leave  
  440075:	fwait
  440076:	sbb    ch,dh
  440078:	leave  
  440079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44007a:	adc    al,BYTE PTR [esi]
  44007c:	retf   0xabd
  44007f:	xchg   eax,ecx
  440081:	iret   
  440082:	add    ch,BYTE PTR [esi-0x38]
  440085:	repnz cli 
  440087:	pop    ds
  440088:	mov    edi,0xbdcc716a
  44008d:	xchg   ecx,eax
  44008e:	add    BYTE PTR [eax],al
  440090:	imul   ecx,DWORD PTR [esi-0x42],0x434d600b
  440097:	(bad)  
  440098:	cwde   
  440099:	sbb    eax,0xc537fffd
  44009e:	rol    eax,cl
  4400a0:	inc    edi
  4400a1:	mov    dl,bl
  4400a3:	fiadd  WORD PTR [edi-0x50]
  4400a6:	shl    ebx,cl
  4400a8:	inc    edi
  4400a9:	inc    edi
  4400aa:	int3   
  4400ab:	fisub  WORD PTR [esi]
  4400ad:	or     bl,dl
  4400af:	xor    ah,BYTE PTR [edi+esi*2]
  4400b2:	shr    BYTE PTR [ebp+0x24],cl
  4400b5:	dec    edx
  4400b6:	rol    dl,cl
  4400b8:	and    ecx,eax
  4400ba:	(bad)  
  4400bb:	xor    BYTE PTR [edx],cl
  4400bd:	xchg   ecx,eax
  4400be:	ror    BYTE PTR ds:0xce1b3401,1
  4400c4:	add    DWORD PTR [edx],ecx
  4400c6:	ror    bl,0x78
  4400c9:	cld    
  4400ca:	sub    eax,0x6ffd3acb
  4400cf:	leave  
  4400d0:	(bad)  
  4400d2:	out    dx,al
  4400d3:	(bad)  
  4400d4:	pop    edi
  4400d5:	add    BYTE PTR [eax+0x2d0003c7],bl
  4400db:	(bad)  
  4400dc:	ja     0x4400e0
  4400de:	adc    ebp,eax
  4400e0:	pop    ds
  4400e1:	add    dl,BYTE PTR [esi]
  4400e3:	lds    eax,FWORD PTR [ecx-0x6cc15fd]
  4400e9:	inc    edx
  4400ea:	add    DWORD PTR [ebx],0xd3c13437
  4400f0:	or     eax,DWORD PTR [ecx+ebp*1]
  4400f3:	aam    0x0
  4400f5:	add    BYTE PTR [edx+0x6],cl
  4400f8:	mov    edi,0x710668d1
  4400fd:	rol    esi,1
  4400ff:	add    eax,0x70ed2ce
  440104:	shl    DWORD PTR ds:0x96d03008,1
  44010b:	pop    es
  44010c:	cwde   
  44010d:	shl    BYTE PTR [ebx-0x153097f9],1
  440113:	or     BYTE PTR [edx-0x1ef76c31],bl
  440119:	int    0xb2
  44011b:	or     DWORD PTR [edx-0x47f69832],ebp
  440121:	into   
  440122:	jp     0x44012e
  440124:	into   
  440125:	retf   
  440126:	stc    
  440127:	sti    
  440128:	pushf  
  440129:	int3   
  44012a:	xchg   bl,bh
  44012c:	pop    es
  44012d:	retf   
  44012e:	jnp    0x44012c
  440130:	mov    ebp,0x23fe19c9
  440135:	retf   0xfde3
  440138:	jmp    0x7e21:0xff12c8
  44013f:	sar    BYTE PTR [ebx],1
  440141:	pop    ecx
  440142:	jle    0x4400e0
  440144:	cmp    esp,DWORD PTR [edx]
  440146:	outs   dx,DWORD PTR ds:[esi]
  440147:	mov    dl,0x34
  440149:	dec    ebx
  44014a:	outs   dx,DWORD PTR ds:[esi]
  44014b:	push   eax
  44014c:	xor    al,0x6c
  44014e:	clc    
  44014f:	inc    ecx
  440150:	imul   ecx
  440152:	push   esp
  440153:	inc    edx
  440154:	div    DWORD PTR [ecx-0x28fecbcc]
  44015a:	add    BYTE PTR [eax],al
  44015c:	add    al,0xd
  44015e:	xor    esi,esi
  440160:	in     al,0x4c
  440162:	xor    BYTE PTR [ebx+eiz*8],dh
  440165:	cld    
  440166:	xor    DWORD PTR [edx-0x1c],edx
  440169:	aad    0x32
  44016b:	pop    ss
  44016c:	in     eax,0x34
  44016e:	xor    al,0xbd
  440170:	pop    es
  440171:	and    eax,0xef8c62d
  440176:	sub    eax,0x2d3d072a
  44017b:	fldl2e 
  44017d:	xchg   DWORD PTR [esi],ebp
  44017f:	rol    BYTE PTR [ebx],cl
  440181:	and    esi,DWORD PTR [eax]
  440183:	pop    ecx
  440184:	cli    
  440185:	les    edi,FWORD PTR [ecx]
  440187:	jns    0x440176
  440189:	mov    eax,ds:0x39ede139
  44018e:	cmp    esp,edi
  440190:	jle    0x44013d
  440192:	cmp    dl,BYTE PTR [edi]
  440194:	jle    0x440212
  440196:	cmp    ebx,DWORD PTR [ecx-0x1608be91]
  44019c:	inc    esp
  44019d:	inc    edx
  44019e:	imul   DWORD PTR [ecx+0x34]
  4401a1:	xor    al,0x1
  4401a3:	pop    ds
  4401a4:	arpl   WORD PTR [ebp+0x30],bx
  4401a7:	inc    ecx
  4401a8:	push   ax
  4401aa:	xor    edx,esi
  4401ac:	push   0x82d92c74
  4401b1:	add    ch,BYTE PTR [edi]
  4401b3:	cmp    BYTE PTR [ecx-0x1c],bh
  4401b6:	add    BYTE PTR cs:[ebp+0x6f],bl
  4401ba:	xor    BYTE PTR [esi],0x2
  4401bd:	outs   dx,DWORD PTR ds:[esi]
  4401be:	mov    ecx,0xaf000036
  4401c3:	outs   dx,DWORD PTR ds:[esi]
  4401c4:	shl    BYTE PTR [esi],1
  4401c6:	int    0x6e
  4401c8:	std    
  4401c9:	ss aaa 
  4401cb:	outs   dx,DWORD PTR ds:[esi]
  4401cc:	sbb    al,0x37
  4401ce:	xchg   ebx,eax
  4401cf:	jo     0x44015f
  4401d1:	aaa    
  4401d2:	sub    al,0x6d
  4401d4:	xor    DWORD PTR [eax],edi
  4401d6:	aam    0x6c
  4401d8:	js     0x440212
  4401da:	jl     0x440249
  4401dc:	xchg   esp,eax
  4401dd:	cmp    BYTE PTR [eax],bh
  4401df:	ins    DWORD PTR es:[edi],dx
  4401e0:	in     eax,0x38
  4401e2:	dec    eax
  4401e3:	ins    DWORD PTR es:[edi],dx
  4401e4:	add    bh,BYTE PTR [ecx]
  4401e6:	loope  0x440255
  4401e8:	push   ds
  4401e9:	cmp    edx,edx
  4401eb:	ins    DWORD PTR es:[edi],dx
  4401ec:	dec    ebp
  4401ed:	cmp    DWORD PTR [eax+0x7939926e],ecx
  4401f3:	outs   dx,BYTE PTR ds:[esi]
  4401f4:	mov    al,0x39
  4401f6:	and    DWORD PTR [esi-0xf],ebp
  4401f9:	cmp    ebp,ecx
  4401fb:	push   0xffffff80
  4401fd:	cmp    al,BYTE PTR [eax+0x133aab6b]
  440203:	imul   ecx,esi,0x3a
  440206:	xchg   esp,eax
  440207:	imul   edi,DWORD PTR [eax+0x3b],0xffffffea
  44020b:	add    BYTE PTR [edx],dl
  44020d:	cmp    al,0xc
  44020f:	hlt    
  440210:	jmp    0x5c372151
  440215:	aas    
  440216:	stc    
  440217:	hlt    
  440218:	pushf  
  440219:	aas    
  44021a:	shl    esp,1
  44021c:	add    BYTE PTR [eax],al
  44021e:	mov    ?,WORD PTR [ebp+esi*8+0x137faff]
  440225:	add    BYTE PTR [eax],al
  440227:	add    BYTE PTR [ecx+0x4],ah
  44022a:	dec    ebp
  44022b:	xor    DWORD PTR [edi],ebp
  44022d:	pop    es
  44022e:	xor    WORD PTR [ebx],cx
  440231:	pop    es
  440232:	xchg   BYTE PTR [ecx],dh
  440234:	aaa    
  440235:	clc    
  440236:	sub    eax,0x2d8726b5
  44023b:	(bad)  
  44023c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  44023e:	sub    eax,0x2d5c26f9
  440243:	adc    DWORD PTR ds:0x5452d85,eax
  440249:	sub    BYTE PTR [edi],ch
  44024b:	gs add eax,0x57d2d5c
  440251:	les    ebp,FWORD PTR [esi]
  440253:	cdq    
  440254:	gs fwait
  440256:	cs mov ch,0x65
  440259:	or     al,0x2f
  44025b:	aam    0x65
  44025d:	adc    ebp,DWORD PTR [edi]
  44025f:	in     eax,dx
  440260:	gs dec ebx
  440262:	adc    DWORD PTR cs:[esi+esi*1+0x30],eax
  440267:	inc    eax
  440268:	inc    esp
  440269:	lahf   
  44026a:	cs ins DWORD PTR es:[edi],dx
  44026c:	inc    esp
  44026d:	mov    dl,0x2f
  44026f:	ret    
  440270:	inc    esp
  440271:	sbb    eax,0x132bbd30
  440276:	cmp    esi,esp
  440278:	and    esi,DWORD PTR [ebp+0x29298638]
  44027e:	cmp    edx,DWORD PTR [ecx]
  440280:	pop    ds
  440281:	mov    ch,0x3b
  440283:	push   ebp
  440284:	push   cs
  440285:	sbb    DWORD PTR [edi],esi
  440287:	pop    ecx
  440288:	or     al,0x58
  44028a:	inc    ecx
  44028b:	add    BYTE PTR [eax],al
  44028d:	add    BYTE PTR [edi],dh
  44028f:	dec    ebp
  440290:	xchg   ebx,eax
  440291:	std    
  440292:	mov    eax,0x37fffd2d
  440297:	add    eax,0x11635939
  44029c:	cmp    bl,BYTE PTR [ebp+0x6a]
  44029f:	fistp  QWORD PTR [ecx]
  4402a1:	fwait
  4402a2:	popa   
  4402a3:	xor    BYTE PTR [esi],dh
  4402a5:	xor    al,0x4e
  4402a7:	call   0xa490a6e2
  4402ac:	ss pop eax
  4402ae:	inc    eax
  4402af:	xor    al,0xea
  4402b1:	mov    ds:0x3b13f7a,eax
  4402b6:	aaa    
  4402b7:	xor    al,0x9b
  4402b9:	xor    eax,0x367602fd
  4402be:	sub    eax,0xb1382d08
  4402c3:	or     BYTE PTR [ebx+0x17094237],dh
  4402c9:	cmp    DWORD PTR [ebx-0x2bc77af7],ebp
  4402cf:	add    eax,0x75f3963
  4402d4:	popa   
  4402d5:	cmp    dl,BYTE PTR [esp+edi*8-0x31]
  4402d9:	cmp    esi,edi
  4402db:	sti    
  4402dc:	xor    DWORD PTR [ebx],edi
  4402de:	and    edi,esp
  4402e0:	lahf   
  4402e1:	inc    eax
  4402e2:	lahf   
  4402e3:	(bad)  
  4402e4:	mov    ch,0x41
  4402e6:	mov    bh,0xfd
  4402e8:	gs inc ecx
  4402ea:	mov    edi,0xa74155fd
  4402ef:	std    
  4402f0:	jne    0x440333
  4402f2:	add    BYTE PTR [eax],al
  4402f4:	lahf   
  4402f5:	std    
  4402f6:	jne    0x440339
  4402f8:	xchg   edi,eax
  4402f9:	std    
  4402fa:	inc    ebp
  4402fb:	inc    ecx
  4402fc:	lahf   
  4402fd:	std    
  4402fe:	xor    eax,0x35fda741
  440303:	inc    ecx
  440304:	lahf   
  440305:	std    
  440306:	xor    eax,0x25fdf741
  44030b:	inc    ecx
  44030c:	(bad)  
  44030d:	std    
  44030e:	adc    eax,0xb5fde741
  440313:	inc    edx
  440314:	(bad)  
  440316:	mov    ch,0x42
  440318:	xchg   edi,eax
  440319:	std    
  44031a:	lds    eax,FWORD PTR [edx-0x61]
  44031d:	std    
  44031e:	mov    ch,0x42
  440320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440321:	std    
  440322:	mov    ch,0x42
  440324:	lahf   
  440325:	std    
  440326:	mov    ch,0x42
  440328:	aaa    
  440329:	inc    DWORD PTR [eax]
  44032b:	in     eax,dx
  44032c:	imul   DWORD PTR [ebx]
  44032e:	cmp    ch,bl
  440330:	mul    DWORD PTR [ebx]
  440332:	cmp    ch,bh
  440334:	neg    DWORD PTR [ebx]
  440336:	cmp    ch,bh
  440338:	not    DWORD PTR [ebx]
  44033a:	cmp    ch,cl
  44033c:	test   DWORD PTR [ebx],0x3f7bd38
  440342:	cmp    BYTE PTR [ebp-0x42c80409],bh
  440348:	div    ebx
  44034a:	aaa    
  44034b:	sub    eax,0x1d37ebf6
  440350:	mul    bl
  440352:	aaa    
  440353:	mov    ebp,0xbd37dbf7
  440358:	add    BYTE PTR [eax],al
  44035a:	ja     0x440330
  44035c:	aaa    
  44035d:	int    0x77
  44035f:	int3   
  440360:	aaa    
  440361:	mov    ebp,0xbd37c477
  440366:	ja     0x440324
  440368:	aaa    
  440369:	mov    ebp,0x6d37b477
  44036e:	jbe    0x44031c
  440370:	aaa    
  440371:	pop    ebp
  440372:	jbe    0x440318
  440374:	aaa    
  440375:	jge    0x4403ed
  440377:	pushf  
  440378:	aaa    
  440379:	jge    0x4403f1
  44037b:	xor    al,0x1
  44037d:	jmp    0x323b4326
  440382:	cmp    esi,DWORD PTR [ecx+eax*1]
  440385:	loope  0x4403ab
  440387:	and    BYTE PTR [ecx],dh
  440389:	leave  
  44038a:	add    al,0x18
  44038c:	xor    ecx,eax
  44038e:	add    al,0x10
  440390:	xor    DWORD PTR [ecx+0x21310804],edi
  440396:	add    eax,DWORD PTR [eax]
  440398:	xor    DWORD PTR [ecx],ebp
  44039a:	imul   edi,eax,0x30
  44039d:	and    DWORD PTR [ebx-0x10],esp
  4403a0:	xor    BYTE PTR [ecx],bh
  4403a2:	imul   ebp,eax,0x30
  4403a5:	add    BYTE PTR [esi+0x8],dl
  4403a8:	push   ebp
  4403a9:	xor    dh,bh
  4403ab:	pop    es
  4403ac:	pop    ebp
  4403ad:	xor    dh,dh
  4403af:	pop    es
  4403b0:	xor    BYTE PTR gs:[esi],bh
  4403b3:	or     BYTE PTR [ebp+0x30],ch
  4403b6:	push   esi
  4403b7:	or     BYTE PTR [ebp+0x30],dh
  4403ba:	fiadd  WORD PTR [eax]
  4403bc:	jge    0x4403ee
  4403be:	add    BYTE PTR [eax],al
  4403c0:	(bad)  
  4403c1:	add    BYTE PTR [ebp-0x72ff21d0],al
  4403c7:	xor    dh,dl
  4403c9:	add    BYTE PTR [ebp-0x62ff01d0],dl
  4403cf:	xor    dh,dh
  4403d1:	add    BYTE PTR [ebp-0x52ff01d0],ah
  4403d7:	xor    BYTE PTR [esi+0x5e30b501],dl
  4403dd:	add    DWORD PTR [ebp-0x3afea9d0],edi
  4403e3:	xor    BYTE PTR [esi+0x1],bl
  4403e6:	int    0x30
  4403e8:	test   DWORD PTR [ecx],0xfbd03344
  4403ee:	call   0x4f3d202a
  4403f3:	cmp    al,cl
  4403f5:	clc    
  4403f6:	jp     0x440430
  4403f8:	xchg   cl,bh
  4403fa:	lea    edi,[eax]
  4403fc:	jp     0x4403f7
  4403fe:	mov    eax,0xd4f98138
  440403:	cmp    BYTE PTR [eax-0x7],cl
  440406:	sbb    bh,BYTE PTR [ecx]
  440408:	fwait
  440409:	stc    
  44040a:	outs   dx,DWORD PTR ds:[esi]
  44040b:	cmp    DWORD PTR [edi-0x6],edi
  44040e:	popf   
  44040f:	cmp    DWORD PTR [edi],ecx
  440411:	cli    
  440412:	lods   eax,DWORD PTR ds:[esi]
  440413:	cmp    esi,esi
  440415:	(bad)  
  440416:	push   esi
  440417:	cmp    dl,BYTE PTR [ebp-0x6]
  44041a:	push   edx
  44041b:	cmp    esp,DWORD PTR [esi]
  44041d:	stc    
  44041e:	fwait
  44041f:	cmp    esi,DWORD PTR [edi]
  440421:	inc    ebx
  440422:	aaa    
  440423:	or     DWORD PTR [eax],eax
  440425:	add    BYTE PTR [edx+0x2b],ah
  440428:	inc    edx
  440429:	int3   
  44042a:	pop    edx
  44042b:	cwde   
  44042c:	inc    ecx
  44042d:	loope  0x440481
  44042f:	jg     0x440472
  440431:	push   es
  440432:	dec    ecx
  440433:	adc    al,0x37
  440435:	push   ebx
  440436:	inc    ecx
  440437:	cs aaa 
  440439:	imul   edi,DWORD PTR [ecx],0x31933711
  44043f:	xchg   esi,eax
  440440:	fisubr DWORD PTR ss:[ecx]
  440443:	dec    ebx
  440444:	adc    ah,BYTE PTR ss:[eax]
  440447:	jo     0x44047f
  440449:	push   eax
  44044a:	sbb    BYTE PTR [ecx],bh
  44044c:	adc    BYTE PTR ss:[eax],0xcf
  440450:	aaa    
  440451:	lods   al,BYTE PTR ds:[esi]
  440452:	or     BYTE PTR [ebx-0x47ff25c9],dl
  440458:	aaa    
  440459:	add    BYTE PTR [edi],dh
  44045b:	dec    ebx
  44045c:	inc    ebx
  44045d:	std    
  44045e:	xor    BYTE PTR [edx-0x4],cl
  440461:	push   DWORD PTR [edi]
  440463:	push   eax
  440464:	xor    ebx,DWORD PTR ds:0x4d2d1f67
  44046a:	addr16 xchg esp,eax
  44046c:	xor    edx,DWORD PTR [edx-0x48d350b9]
  440472:	inc    edi
  440473:	ret    0xd82c
  440476:	inc    edi
  440477:	lock sub al,0xfc
  44047a:	inc    edi
  44047b:	dec    edi
  44047c:	sub    al,0x1c
  44047e:	es pop esp
  440480:	sub    al,0x3b
  440482:	es jns 0x4404b1
  440485:	push   esi
  440486:	es lahf 
  440488:	sub    al,0x7c
  44048a:	add    BYTE PTR [eax],al
  44048c:	fisubr WORD PTR es:0x2dfc0697
  440493:	mov    ch,0x6
  440495:	pop    ds
  440496:	fadd   DWORD PTR cs:[esi]
  440499:	cmp    al,0x2c
  44049b:	cli    
  44049c:	push   es
  44049d:	xor    al,0xf5
  44049f:	xor    DWORD PTR [edx+0x6],ecx
  4404a2:	xor    esi,DWORD PTR [edx]
  4404a4:	add    al,BYTE PTR [esi]
  4404a6:	cmp    eax,0x79062132
  4404ab:	xor    edi,ecx
  4404ad:	push   es
  4404ae:	nop
  4404af:	xor    DWORD PTR [ebp+0x6],edi
  4404b2:	cwde   
  4404b3:	xor    DWORD PTR [ebp+0x2532ea06],ebx
  4404b9:	pop    es
  4404ba:	hlt    
  4404bb:	xor    ah,BYTE PTR [edi+eax*1+0x7aa324d]
  4404c2:	xchg   DWORD PTR [edx],esi
  4404c4:	imul   eax,DWORD PTR [edi],0xffffffee
  4404c7:	aaa    
  4404c8:	inc    edx
  4404c9:	add    cl,al
  4404cb:	aaa    
  4404cc:	push   cs
  4404cd:	add    BYTE PTR [edi+0xcfff637],dh
  4404d3:	cmp    ah,dl
  4404d5:	(bad)  
  4404d6:	stc    
  4404d7:	aaa    
  4404d8:	ret    
  4404d9:	call   DWORD PTR [edi+esi*1+0x391f0132]
  4404e0:	jge    0x4404e3
  4404e2:	jno    0x44051c
  4404e4:	ret    0x2a00
  4404e7:	cmp    BYTE PTR [edi],dl
  4404e9:	add    DWORD PTR [eax+edi*1+0x35],ebx
  4404ed:	add    bh,bl
  4404ef:	xor    eax,0x2700000
  4404f4:	imul   esi,DWORD PTR ds:0x353e01f1,0x2e
  4404fb:	add    eax,DWORD PTR [eax]
  4404fd:	aaa    
  4404fe:	cmp    eax,DWORD PTR [ebx]
  440500:	mov    DWORD PTR [esi],esi
  440502:	pusha  
  440503:	add    ecx,DWORD PTR [ecx+0x36]
  440506:	mov    al,ds:0x44361202
  44050b:	cld    
  44050c:	out    0x3b,al
  44050e:	push   ss
  44050f:	cld    
  440510:	iret   
  440511:	cmp    esp,DWORD PTR [edi-0x4]
  440514:	mov    ds:0xfc523b,al
  440519:	je     0x440517
  44051b:	xchg   ebp,eax
  44051c:	cmp    BYTE PTR [esp+edi*8],ah
  44051f:	push   edi
  440520:	cmp    al,bl
  440522:	jae    0x44054e
  440524:	cmp    bh,ch
  440526:	ins    DWORD PTR es:[edi],dx
  440527:	add    eax,0xee5c143a
  44052c:	cmp    DWORD PTR [eax],esi
  44052e:	pop    esp
  44052f:	mov    edi,0x64cc739
  440534:	cmp    esi,DWORD PTR [eax+0x4d]
  440537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440538:	cmp    ch,BYTE PTR [ebx-0x3dc5a7c3]
  44053e:	cmp    eax,0x2e193c30
  440543:	test   al,0x3b
  440545:	jge    0x440575
  440547:	xchg   DWORD PTR [ebx],edi
  440549:	not    DWORD PTR fs:[esi+0x65f7a134]
  440550:	xor    al,0x7c
  440552:	div    DWORD PTR ds:0xf336
  440558:	or     DWORD PTR [esi],ebp
  44055a:	fild   DWORD PTR ss:[ecx]
  44055d:	es ss sar ecx,cl
  440561:	sbb    eax,0x16700b36
  440566:	adc    ebp,DWORD PTR ss:[eax+0xe]
  44056a:	ss push ds
  44056c:	popa   
  44056d:	xor    al,0x1
  44056f:	jmp    0x7a3b3cf8
  440574:	cmp    esi,DWORD PTR [ecx+eax*1]
  440577:	adc    al,BYTE PTR [esi+0x32]
  44057a:	das    
  44057b:	(bad)  
  44057c:	dec    edx
  44057d:	scas   eax,DWORD PTR es:[edi]
  44057e:	cs dec edx
  440580:	inc    ecx
  440581:	daa    
  440582:	xor    bl,bl
  440584:	sub    esp,edx
  440586:	das    
  440587:	imul   esp,DWORD PTR [edx],0xffffffb5
  44058a:	cmp    DWORD PTR [edi],edi
  44058c:	sbb    al,0x36
  44058e:	cmp    ebp,DWORD PTR [esi+0x3ba91f]
  440594:	cwde   
  440595:	not    DWORD PTR [esi+0x3e]
  440598:	mov    al,0xf7
  44059a:	pop    esi
  44059b:	ds mov eax,0x403e66f7
  4405a1:	imul   DWORD PTR [esi+0x3e]
  4405a4:	sbb    dl,bh
  4405a6:	jbe    0x4405e6
  4405a8:	adc    bh,dh
  4405aa:	jle    0x4405ea
  4405ac:	sbb    bh,dh
  4405ae:	xchg   BYTE PTR [esi],bh
  4405b0:	and    bh,dh
  4405b2:	mov    ?,WORD PTR [esi]
  4405b4:	sbb    bh,dh
  4405b6:	xchg   esi,eax
  4405b7:	ds mov al,0xf7
  4405ba:	sahf   
  4405bb:	add    BYTE PTR ds:[eax],al
  4405be:	mov    eax,0x3ea6f7
  4405c3:	imul   DWORD PTR [esi-0x490927c2]
  4405c9:	ds nop
  4405cb:	idiv   DWORD PTR [esi-0x390867c2]
  4405d1:	mov    al,ds:0x983ecef7
  4405d7:	not    esi
  4405d9:	ds mov al,0xf7
  4405dc:	fidivr WORD PTR [esi]
  4405de:	mov    eax,0xc03ee6f7
  4405e3:	imul   dh
  4405e5:	ds cwde 
  4405e7:	div    esi
  4405e9:	ds adc al,bh
  4405ec:	(bad)  
  4405ed:	ds sbb al,bh
  4405f0:	push   es
  4405f1:	aas    
  4405f2:	and    al,bh
  4405f4:	push   cs
  4405f5:	aas    
  4405f6:	sbb    al,bh
  4405f8:	push   ss
  4405f9:	aas    
  4405fa:	xor    bh,dh
  4405fc:	push   ds
  4405fd:	aas    
  4405fe:	cmp    bh,dh
  440600:	es aas 
  440602:	add    al,bh
  440604:	cs aas 
  440606:	fdiv   st,st(7)
  440608:	ss aas 
  44060a:	nop
  44060b:	idiv   DWORD PTR [esi]
  44060d:	aas    
  44060e:	aaa    
  44060f:	xchg   ecx,eax
  440610:	xor    al,0x4e
  440612:	sbb    BYTE PTR [ecx-0x6eefa9cc],al
  440618:	xor    al,0x5e
  44061a:	or     BYTE PTR [ecx-0x4eff99cc],dh
  440620:	xor    al,0x0
  440622:	add    BYTE PTR [eax],al
  440624:	aaa    
  440625:	dec    ebx
  440626:	arpl   bp,di
  440628:	mov    al,0xa6
  44062a:	cld    
  44062b:	push   DWORD PTR [edi]
  44062d:	mov    ecx,0x7267d92c
  440632:	sub    al,0xf5
  440634:	addr16 sbb eax,0xfe46432e
  44063a:	sub    eax,0x2dc04693
  44063f:	inc    BYTE PTR [esi+0x50]
  440642:	sub    eax,0x2e8f4577
  440647:	fisub  DWORD PTR ds:0x24a92e6e
  44064d:	loopne 0x44067e
  44064f:	(bad)  
  440650:	and    al,0xa3
  440652:	das    
  440653:	cli    
  440654:	and    al,0x44
  440656:	daa    
  440657:	dec    esp
  440658:	or     ebx,DWORD PTR [eax]
  44065a:	xor    DWORD PTR [edi+0x5c322103],esi
  440660:	or     bl,bh
  440662:	xor    eax,eax
  440664:	add    bh,BYTE PTR [eax+0x376afa31]
  44066a:	xor    DWORD PTR [esi],edi
  44066c:	popa   
  44066d:	jb     0x4406a0
  44066f:	jbe    0x4406da
  440671:	call   0x8332:0x86604c32
  440678:	dec    eax
  440679:	loopne 0x4406ae
  44067b:	cmovg  ebx,DWORD PTR [esi+0x3b]
  44067f:	sbb    bh,BYTE PTR [edi]
  440681:	sub    dh,BYTE PTR ds:0x3b773f2f
  440687:	je     0x440689
  440689:	add    BYTE PTR [edi],ch
  44068b:	xor    al,0x5
  44068d:	cmp    al,0xe7
  44068f:	cld    
  440690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440691:	cmp    al,0x8a
  440693:	std    
  440694:	push   0xe6fd953d
  440699:	cmp    eax,0x3dc1fa18
  44069e:	jbe    0x44069a
  4406a0:	lea    edi,ds:0x3ecafaad
  4406a6:	or     edi,ebx
  4406a8:	mov    al,ds:0x79fb093e
  4406ad:	outs   dx,DWORD PTR ds:[esi]
  4406af:	clc    
  4406b0:	pusha  
  4406b1:	cmp    dh,dl
  4406b3:	clc    
  4406b4:	call   0x7f37:0xa8f8e137
  4406bb:	clc    
  4406bc:	mov    edi,0x51f93837
  4406c1:	cmp    bh,BYTE PTR [ecx-0x4ec4d60a]
  4406c7:	idiv   DWORD PTR [esi-0x15cbc8c6]
  4406cd:	jae    0x440739
  4406cf:	aaa    
  4406d0:	sbb    DWORD PTR [edi+esi*1],eax
  4406d3:	xor    al,0x28
  4406d5:	xor    eax,0x345504db
  4406da:	popf   
  4406db:	add    eax,0x56634ac
  4406e0:	jg     0x440716
  4406e2:	add    al,BYTE PTR [edx]
  4406e4:	add    dh,BYTE PTR [esi]
  4406e6:	enter  0x5f01,0x35
  4406ea:	fiadd  WORD PTR [ecx]
  4406ec:	xor    eax,0x30000035
  4406f1:	add    ebp,DWORD PTR [edx-0x48fc8cca]
  4406f7:	mov    BYTE PTR ss:[ebx],al
  4406fa:	push   0x36
  4406fc:	fadd   DWORD PTR [edx]
  4406fe:	fsubr  QWORD PTR [edi]
  440700:	jnp    0x440702
  440702:	mov    esp,0xffd32f
  440707:	fild   WORD PTR [edi-0x15]
  44070a:	sub    eax,0x2d6a2783
  44070f:	js     0x440737
  440711:	je     0x440741
  440713:	inc    ebx
  440714:	and    eax,0x1c673906
  440719:	jbe    0x440753
  44071b:	retf   0xdf13
  44071e:	cmp    DWORD PTR [eax+0xb],esi
  440721:	sub    edi,DWORD PTR [ebx]
  440723:	mov    edi,0x4f3a5302
  440728:	stc    
  440729:	cmp    bh,BYTE PTR [ebx]
  44072b:	fisubr DWORD PTR [eax+0x12]
  44072e:	xor    eax,0x34566f7f
  440733:	jecxz  0x440794
  440735:	mov    esp,0x96606d35
  44073a:	xor    eax,0x367d4d5c
  44073f:	jmp    0x3e3b4078
  440744:	cmp    esi,DWORD PTR [ecx+eax*1]
  440747:	loope  0x44078e
  440749:	out    dx,al
  44074a:	xor    DWORD PTR [eax+0x24],esp
  44074d:	mov    ds:0x7c214831,eax
  440752:	xor    ebp,DWORD PTR [ecx+0x5c2a0000]
  440758:	xor    edi,DWORD PTR ds:0x92cde27
  44075e:	pop    es
  44075f:	les    ebp,FWORD PTR [edi+edi*8]
  440762:	sbb    BYTE PTR [eax-0x53f894d4],bh
  440768:	sub    al,0x67
  44076a:	pop    es
  44076b:	mov    ds:0x97674d2c,eax
  440770:	sub    al,0x93
  440772:	test   DWORD PTR [si],ebp
  440775:	mov    eax,ds:0x2e2c7b67
  44077a:	imul   ebp,DWORD PTR [si],0x36
  44077e:	inc    edi
  44077f:	push   edi
  440780:	sub    al,0x0
  440782:	bound  eax,QWORD PTR [eax+ebp*8]
  440785:	xor    al,0x49
  440787:	add    al,0xf8
  440789:	xor    al,0x14
  44078b:	pop    es
  44078c:	adc    al,0x35
  44078e:	cmp    eax,0x352905
  440793:	pop    es
  440794:	xor    BYTE PTR ds:0x3671068e,dh
  44079a:	pop    ebx
  44079b:	add    dl,dl
  44079d:	ss retf 
  44079f:	add    al,0x43
  4407a1:	aaa    
  4407a2:	pop    edx
  4407a3:	add    esp,DWORD PTR [eax-0x11fcfac9]
  4407a9:	aaa    
  4407aa:	jl     0x4407a5
  4407ac:	jge    0x4407e6
  4407ae:	test   eax,0x4d3909f9
  4407b3:	stc    
  4407b4:	sub    bh,BYTE PTR [ebx]
  4407b6:	pop    es
  4407b7:	cld    
  4407b8:	jbe    0x4407f7
  4407ba:	add    BYTE PTR [eax],al
  4407bc:	out    dx,al
  4407bd:	stc    
  4407be:	add    BYTE PTR [eax],al
  4407c0:	sahf   
  4407c1:	and    esi,esi
  4407c3:	call   DWORD PTR [esi+0x30]
  4407c6:	add    DWORD PTR [eax],eax
  4407c8:	rol    DWORD PTR [ecx],cl
  4407ca:	outs   dx,DWORD PTR ds:[esi]
  4407cb:	xor    dh,BYTE PTR [edi-0x5bcd4801]
  4407d1:	(bad)  
  4407d2:	cli    
  4407d3:	xor    bl,BYTE PTR [eax+eax*1+0x3]
  4407d7:	xor    esp,DWORD PTR [eax+eax*1+0xb]
  4407db:	xor    ebx,DWORD PTR [eax+eax*1+0x13]
  4407df:	xor    eax,DWORD PTR [eax-0x69cc3600]
  4407e5:	add    BYTE PTR [edx-0x18fb14cc],al
  4407eb:	xor    al,0x7b
  4407ed:	push   es
  4407ee:	inc    edi
  4407ef:	xor    eax,0x359d0681
  4407f4:	rol    DWORD PTR ds:0x67235d1,1
  4407fa:	push   ds
  4407fb:	ss aaa 
  4407fd:	mov    DWORD PTR [ecx],esi
  4407ff:	dec    ebx
  440800:	dec    ecx
  440801:	(bad)  
  440802:	xor    DWORD PTR [ecx-0x26ce00bf],esi
  440808:	dec    ecx
  440809:	dec    edi
  44080a:	xor    BYTE PTR [eax+eax*2],ch
  44080d:	cdq    
  44080e:	das    
  44080f:	jne    0x440844
  440811:	shr    DWORD PTR [edi],1
  440813:	(bad)
  440817:	(bad)  
  440818:	and    BYTE PTR [ebx+0x23],cl
  44081b:	std    
  44081c:	fsubr  DWORD PTR [edx+0x3]
  44081f:	add    BYTE PTR [eax],al
  440821:	add    BYTE PTR [edi],dh
  440823:	jnp    0x440851
  440825:	pop    ecx
  440826:	add    al,0x1a
  440828:	sub    eax,0x26a204df
  44082d:	cmp    BYTE PTR [ecx],al
  44082f:	jmp    0x74adf165
  440834:	das    
  440835:	ins    DWORD PTR es:[edi],dx
  440836:	imul   ecx,DWORD PTR [ebp+0x39],0x31
  44083a:	popa   
  44083b:	dec    ebx
  44083c:	xor    edi,ebp
  44083e:	cwde   
  44083f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440840:	cld    
  440841:	push   DWORD PTR [edi]
  440843:	in     eax,dx
  440844:	xor    edx,DWORD PTR [edx]
  440846:	inc    edx
  440847:	push   eax
  440848:	es ins DWORD PTR es:[edi],dx
  44084a:	dec    eax
  44084b:	dec    edi
  44084c:	xor    al,0x8
  44084e:	ds dec edi
  440850:	xor    al,0x10
  440852:	cs pop edi
  440854:	xor    al,0x18
  440856:	cs das 
  440858:	and    BYTE PTR ss:[esi],bl
  44085b:	outs   dx,DWORD PTR ds:[esi]
  44085c:	xor    al,0x28
  44085e:	push   ds
  44085f:	outs   dx,DWORD PTR ds:[esi]
  440860:	xor    al,0x30
  440862:	push   cs
  440863:	pop    edi
  440864:	xor    al,0x38
  440866:	push   cs
  440867:	outs   dx,DWORD PTR ds:[esi]
  440868:	xor    al,0x40
  44086a:	dec    BYTE PTR [esi]
  44086c:	ss dec eax
  44086e:	dec    BYTE PTR [esi]
  440870:	ss push eax
  440872:	outs   dx,BYTE PTR ds:[esi]
  440873:	dec    ecx
  440874:	xor    al,0x58
  440876:	outs   dx,BYTE PTR ds:[esi]
  440877:	xor    al,0xbc
  440879:	cmp    al,0x97
  44087b:	ins    DWORD PTR es:[edi],dx
  44087c:	mov    esp,0xbc6d8f3c
  440881:	cmp    al,0x87
  440883:	ins    DWORD PTR es:[edi],dx
  440884:	int3   
  440885:	cmp    al,0x0
  440887:	add    BYTE PTR [edi-0x48c34393],cl
  44088d:	ins    DWORD PTR es:[edi],dx
  44088e:	pop    esp
  44088f:	cmp    eax,0x3d5c6daf
  440894:	mov    ch,0x70
  440896:	jae    0x4408d0
  440898:	test   eax,0x9382e70
  44089d:	jno    0x4408a5
  44089f:	cmp    BYTE PTR [edi],dh
  4408a1:	jno    0x44087f
  4408a3:	cmp    BYTE PTR [eax],ch
  4408a5:	jno    0x440878
  4408a7:	cmp    BYTE PTR [edi+0x71],dh
  4408aa:	lods   al,BYTE PTR ds:[esi]
  4408ab:	cmp    BYTE PTR [edi+0x71],bl
  4408ae:	test   BYTE PTR [eax],bh
  4408b0:	cmp    eax,0xc6396271
  4408b5:	jno    0x4408f0
  4408b7:	cmp    ebp,ebp
  4408b9:	jno    0x44086d
  4408bb:	cmp    BYTE PTR [ebp-0x64c72d8f],al
  4408c1:	jno    0x4408a3
  4408c3:	xor    eax,0x360d7224
  4408c8:	dec    ecx
  4408c9:	jb     0x4408f9
  4408cb:	ss jmp 0xb77a4f42
  4408d1:	jb     0x44092f
  4408d3:	xor    eax,0x35ab72c8
  4408d8:	test   BYTE PTR [edx-0x77],dh
  4408db:	xor    eax,0x36f9724c
  4408e0:	aaa    
  4408e1:	xor    al,0xe8
  4408e3:	ret    
  4408e4:	push   ebx
  4408e5:	xor    esi,ecx
  4408e7:	add    esi,DWORD PTR [edi]
  4408e9:	xor    al,0x6a
  4408eb:	aaa    
  4408ec:	add    BYTE PTR [eax],al
  4408ee:	dec    edi
  4408ef:	jo     0x4408d1
  4408f1:	xor    eax,0xac017283
  4408f6:	push   0x79
  4408f8:	adc    BYTE PTR ss:[eax+0x27],ah
  4408fc:	aaa    
  4408fd:	jmp    0x1a3b3906
  440902:	xor    esi,DWORD PTR [ecx+eax*1]
  440905:	out    dx,al
  440906:	inc    esp
  440907:	mov    eax,ds:0xc547642c
  44090c:	sub    al,0x90
  44090e:	inc    edi
  44090f:	mov    ah,0x39
  440911:	fs cmp al,0x98
  440914:	cmp    ebp,DWORD PTR [eax]
  440916:	cs (bad) 
  440918:	cmp    ebp,DWORD PTR [edx+0x2f]
  44091b:	or     DWORD PTR ds:0x37bc2a8d,esi
  440921:	shl    BYTE PTR [ecx],cl
  440923:	jne    0x44095b
  440925:	mov    esi,0x2536a609
  44092a:	add    DWORD PTR [ecx+eax*1],esi
  44092d:	jmp    0xb23b3906
  440932:	xor    al,0x34
  440934:	add    DWORD PTR [edi+0x6b],esp
  440937:	(bad)  
  440938:	xor    BYTE PTR [esi+0x63],cl
  44093b:	loopne 0x44096d
  44093d:	sub    esp,DWORD PTR [edi+0x7f]
  440940:	sub    eax,0x2c506783
  440945:	or     DWORD PTR [eax+0x60],esp
  440948:	sub    al,0x19
  44094a:	pop    eax
  44094b:	jo     0x440979
  44094d:	sub    DWORD PTR [eax-0x80],edx
  440950:	sub    al,0x19
  440952:	add    BYTE PTR [eax],al
  440954:	dec    eax
  440955:	nop
  440956:	sub    al,0x49
  440958:	and    BYTE PTR [eax-0x4fe7c6d4],ah
  44095e:	sub    al,0x69
  440960:	adc    al,al
  440962:	sub    al,0x79
  440964:	or     al,dl
  440966:	sub    al,0x49
  440968:	and    al,ah
  44096a:	sub    al,0x59
  44096c:	sbb    al,dh
  44096e:	sub    al,0x0
  440970:	mov    fs,WORD PTR [edx-0x3b]
  440973:	xor    eax,0x1629e
  440978:	push   ds
  440979:	out    0xf5,al
  44097b:	(bad)  
  44097c:	cmp    dh,BYTE PTR ds:0x661e0001
  440982:	or     eax,0x1d632e30
  440987:	xor    esi,DWORD PTR [edx]
  440989:	arpl   WORD PTR [ecx],di
  44098b:	xor    ebp,DWORD PTR [edx-0x41cca29c]
  440991:	fs ins DWORD PTR es:[edi],dx
  440993:	xor    esi,esi
  440995:	fs jne 0x4409cb
  440998:	pop    esi
  440999:	arpl   WORD PTR [ebp+0x33],di
  44099c:	push   esi
  44099d:	arpl   WORD PTR [ebp-0x729ca1cd],ax
  4409a3:	xor    esi,DWORD PTR [esi+0x7e339563]
  4409a9:	arpl   WORD PTR [ebp-0x5a9c89cd],bx
  4409af:	xor    edi,esi
  4409b1:	bound  ebp,QWORD PTR [ebp-0x4a9c89cd]
  4409b7:	xor    eax,DWORD PTR [eax]
  4409b9:	add    BYTE PTR [esi+0x63],bl
  4409bc:	mov    ebp,0xc5635633
  4409c1:	xor    ebx,esi
  4409c3:	fs int 0x33
  4409c6:	jbe    0x440a2c
  4409c8:	aad    0x33
  4409ca:	jle    0x440a30
  4409cc:	fnsave [ebx]
  4409ce:	jbe    0x440a34
  4409d0:	in     eax,0x33
  4409d2:	mov    esi,0x7633ed64
  4409d7:	fs cmc 
  4409d9:	xor    ebx,DWORD PTR [esi+0x61]
  4409dc:	std    
  4409dd:	xor    edx,DWORD PTR [esi+0x61]
  4409e0:	add    eax,0xd615e34
  4409e5:	xor    al,0x36
  4409e7:	fs adc eax,0x26fb3734
  4409ed:	and    al,0x3
  4409ef:	repz es sub al,0xb
  4409f3:	jmp    0x440a1b
  4409f5:	xor    al,0x3
  4409f7:	repz es cmp al,0x6b
  4409fb:	pop    ebx
  4409fc:	xor    DWORD PTR [ebx+eiz*2+0x53],eax
  440a00:	xor    DWORD PTR [ebx+ebp*2-0x15],ecx
  440a04:	es push esp
  440a06:	arpl   bx,si
  440a08:	es pop esp
  440a0a:	dec    ebx
  440a0b:	sti    
  440a0c:	es fs inc ebx
  440a0f:	rep es ins BYTE PTR es:[edi],dx
  440a12:	dec    ebx
  440a13:	jmp    0x440a3b
  440a15:	je     0x440a5a
  440a17:	repz es jl 0x440a46
  440a1b:	fwait
  440a1c:	test   BYTE PTR es:[eax],al
  440a1f:	add    BYTE PTR [ebx],ah
  440a21:	xchg   ebx,eax
  440a22:	mov    WORD PTR es:[ebx],gs
  440a25:	stos   DWORD PTR es:[edi],eax
  440a26:	es xchg esp,eax
  440a28:	and    esi,DWORD PTR [ebx+0x7b0b9c26]
  440a2e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  440a30:	add    esi,DWORD PTR [ebx+0x26]
  440a33:	lods   al,BYTE PTR ds:[esi]
  440a34:	or     ebp,DWORD PTR [ebx+0x26]
  440a37:	mov    ah,0x3
  440a39:	jae    0x440a61
  440a3b:	mov    esp,0xc4265b6b
  440a40:	arpl   WORD PTR [ebx+0x26],dx
  440a43:	int3   
  440a44:	imul   edi,edi,0x39
  440a47:	hlt    
  440a48:	arpl   WORD PTR [edi],dx
  440a4a:	cmp    dl,BYTE PTR [edx+ecx*2]
  440a4d:	aas    
  440a4e:	cmp    BYTE PTR [edx+eax*2],dh
  440a51:	push   edi
  440a52:	cmp    BYTE PTR [edx+ecx*2+0x7f],dl
  440a56:	cmp    BYTE PTR [edx+eax*2-0x69],dh
  440a5a:	cmp    BYTE PTR [edx+ebp*1+0x22b438bf],dl
  440a61:	xlat   BYTE PTR ds:[ebx]
  440a62:	cmp    ah,dl
  440a64:	sub    dh,BYTE PTR [esp+eax*4]
  440a67:	cmp    DWORD PTR [ebx+0x66],esp
  440a6a:	fdivr  QWORD PTR [ecx]
  440a6c:	sub    ebp,DWORD PTR [edx-0x3c]
  440a6f:	cmp    DWORD PTR [ebx],eax
  440a71:	push   0x1c
  440a73:	cmp    ch,bl
  440a75:	imul   eax,DWORD PTR [edx+edi*1],0x3a5c69c3
  440a7c:	retf   
  440a7d:	inc    sp
  440a7f:	cmp    ah,bl
  440a81:	pushfw 
  440a83:	cmp    al,BYTE PTR [eax]
  440a85:	add    BYTE PTR [ebx],cl
  440a87:	addr16 inc esp
  440a89:	cmp    ah,BYTE PTR [ebx]
  440a8b:	fdivr  QWORD PTR [bp+si]
  440a8e:	sub    esp,DWORD PTR [edi+0x4]
  440a91:	cmp    eax,DWORD PTR [ebx+0x67]
  440a94:	pushf  
  440a95:	cmp    ch,BYTE PTR [ebx+0x67]
  440a98:	les    edi,FWORD PTR [edx]
  440a9a:	and    DWORD PTR [edi+0x5c],0x3b
  440a9e:	retf   
  440a9f:	test   BYTE PTR [bp+di],bh
  440aa2:	mov    ds:0xb3b1c67,eax
  440aa7:	push   0x67e33b04
  440aac:	fsubr  QWORD PTR [ebx]
  440aae:	sub    ebp,DWORD PTR [esp+eax*8+0x2b]
  440ab2:	add    ebp,DWORD PTR [esp+ebx*4+0x2b]
  440ab6:	imul   ebp,DWORD PTR [esp+eax*4+0x2b],0x43
  440abb:	ins    BYTE PTR es:[edi],dx
  440abc:	pop    esp
  440abd:	sub    al,0xcb
  440abf:	ins    BYTE PTR es:[edi],dx
  440ac0:	dec    eax
  440ac1:	sub    al,0xd3
  440ac3:	ins    BYTE PTR es:[edi],dx
  440ac4:	cmp    BYTE PTR [ebx+ebp*8],ch
  440ac7:	ins    BYTE PTR es:[edi],dx
  440ac8:	mov    al,ds:0xa86cdb2b
  440acd:	sub    edi,DWORD PTR [ebx+0x6c]
  440ad0:	mov    al,ds:0xb86c7b2b
  440ad5:	sub    ebp,DWORD PTR [ebx+0x6c]
  440ad8:	mov    al,ds:0xe86c5b2b
  440add:	add    esi,DWORD PTR [edi]
  440adf:	xor    al,0x1
  440ae1:	jmp    0xe9453f1a
  440ae6:	xor    al,0x34
  440ae8:	add    ecx,ebp
  440aea:	add    BYTE PTR [eax],al
  440aec:	xor    al,0x34
  440aee:	add    ecx,ebp
  440af0:	xor    al,0x34
  440af2:	add    ecx,ebp
  440af4:	xor    al,0x34
  440af6:	add    ecx,ebp
  440af8:	xor    al,0x34
  440afa:	add    ecx,ebp
  440afc:	xor    al,0x34
  440afe:	add    ecx,ebp
  440b00:	xor    al,0x34
  440b02:	add    ecx,ebp
  440b04:	xor    al,0x34
  440b06:	add    ecx,ebp
  440b08:	xor    al,0x34
  440b0a:	add    ecx,ebp
  440b0c:	xor    al,0x34
  440b0e:	add    ecx,ebp
  440b10:	xor    al,0x34
  440b12:	add    ecx,ebp
  440b14:	xor    al,0x34
  440b16:	add    ecx,ebp
  440b18:	xor    al,0x34
  440b1a:	add    ecx,ebp
  440b1c:	xor    al,0x34
  440b1e:	add    ecx,ebp
  440b20:	xor    al,0x34
  440b22:	add    ecx,ebp
  440b24:	xor    al,0x34
  440b26:	add    ecx,ebp
  440b28:	xor    al,0x34
  440b2a:	add    ecx,ebp
  440b2c:	xor    al,0x34
  440b2e:	add    ecx,ebp
  440b30:	xor    al,0x34
  440b32:	add    ecx,ebp
  440b34:	xor    al,0x34
  440b36:	add    ecx,ebp
  440b38:	xor    al,0x34
  440b3a:	add    ecx,ebp
  440b3c:	xor    al,0x34
  440b3e:	add    ecx,ebp
  440b40:	xor    al,0x34
  440b42:	add    ecx,ebp
  440b44:	xor    al,0x34
  440b46:	add    ecx,ebp
  440b48:	xor    al,0x34
  440b4a:	add    ecx,ebp
  440b4c:	xor    al,0x34
  440b4e:	add    ecx,ebp
  440b50:	add    BYTE PTR [eax],al
  440b52:	xor    al,0x34
  440b54:	add    ecx,ebp
  440b56:	xor    al,0x34
  440b58:	add    ecx,ebp
  440b5a:	xor    al,0x34
  440b5c:	add    DWORD PTR [eax],eax
  440b5e:	mov    ?,WORD PTR [edx]
  440b60:	add    DWORD PTR [eax],eax
  440b62:	pop    esi
  440b63:	xor    al,BYTE PTR [ecx]
  440b65:	add    BYTE PTR [esi+0x32],bl
  440b68:	add    DWORD PTR [eax],eax
  440b6a:	dec    esi
  440b6b:	xor    al,BYTE PTR [ecx]
  440b6d:	add    BYTE PTR [esi+0x32],cl
  440b70:	add    DWORD PTR [eax],eax
  440b72:	pop    esi
  440b73:	xor    al,BYTE PTR [ecx]
  440b75:	add    BYTE PTR [esi+0x32],bl
  440b78:	add    DWORD PTR [eax],eax
  440b7a:	dec    esi
  440b7b:	xor    al,BYTE PTR [ecx]
  440b7d:	add    BYTE PTR [esi+0x32],cl
  440b80:	add    DWORD PTR [eax],eax
  440b82:	push   ds
  440b83:	xor    al,BYTE PTR [ecx]
  440b85:	add    BYTE PTR [esi],bl
  440b87:	xor    al,BYTE PTR [ecx]
  440b89:	add    BYTE PTR [esi],cl
  440b8b:	xor    al,BYTE PTR [ecx]
  440b8d:	add    BYTE PTR [esi],cl
  440b8f:	xor    al,BYTE PTR [ecx]
  440b91:	add    BYTE PTR [esi],bl
  440b93:	xor    al,BYTE PTR [ecx]
  440b95:	add    BYTE PTR [esi],bl
  440b97:	xor    al,BYTE PTR [ecx]
  440b99:	add    BYTE PTR [esi],cl
  440b9b:	xor    al,BYTE PTR [ecx]
  440b9d:	add    BYTE PTR [esi],cl
  440b9f:	xor    al,BYTE PTR [ecx]
  440ba1:	add    dh,bl
  440ba3:	xor    DWORD PTR [ecx],eax
  440ba5:	add    dh,bl
  440ba7:	xor    DWORD PTR [ecx],eax
  440ba9:	add    dh,cl
  440bab:	xor    DWORD PTR [ecx],eax
  440bad:	add    dh,cl
  440baf:	xor    DWORD PTR [ecx],eax
  440bb1:	add    dh,bl
  440bb3:	xor    DWORD PTR [ecx],eax
  440bb5:	add    BYTE PTR [eax],al
  440bb7:	add    dh,bl
  440bb9:	xor    DWORD PTR [ecx],eax
  440bbb:	add    dh,cl
  440bbd:	xor    DWORD PTR [ecx],eax
  440bbf:	add    dh,cl
  440bc1:	xor    DWORD PTR [ecx],eax
  440bc3:	add    BYTE PTR [esi-0x61fffecf],bl
  440bc9:	xor    DWORD PTR [ecx],eax
  440bcb:	add    BYTE PTR [esi-0x71fffecf],cl
  440bd1:	xor    DWORD PTR [ecx],eax
  440bd3:	add    BYTE PTR [esi+0x37000131],bl
  440bd9:	sbb    eax,DWORD PTR [ebx]
  440bdb:	add    BYTE PTR [edi],dh
  440bdd:	sbb    eax,DWORD PTR [ebx]
  440bdf:	add    BYTE PTR [edi],dh
  440be1:	sbb    eax,DWORD PTR [ebx]
  440be3:	add    BYTE PTR [edi],dh
  440be5:	sbb    eax,DWORD PTR [ebx]
  440be7:	add    BYTE PTR [edi],dh
  440be9:	sbb    eax,DWORD PTR [ebx]
  440beb:	add    BYTE PTR [edi],dh
  440bed:	sbb    eax,DWORD PTR [ebx]
  440bef:	add    BYTE PTR [edi],dh
  440bf1:	sbb    eax,DWORD PTR [ebx]
  440bf3:	add    BYTE PTR [edi],dh
  440bf5:	sbb    eax,DWORD PTR [ebx]
  440bf7:	add    BYTE PTR [edi],dh
  440bf9:	sbb    eax,DWORD PTR [ebx]
  440bfb:	add    BYTE PTR [edi],dh
  440bfd:	sbb    eax,DWORD PTR [ebx]
  440bff:	add    BYTE PTR [edi],dh
  440c01:	sbb    eax,DWORD PTR [ebx]
  440c03:	add    BYTE PTR [edi],dh
  440c05:	sbb    eax,DWORD PTR [ebx]
  440c07:	add    BYTE PTR [edi],dh
  440c09:	sbb    eax,DWORD PTR [ebx]
  440c0b:	add    BYTE PTR [edi],dh
  440c0d:	sbb    eax,DWORD PTR [ebx]
  440c0f:	add    BYTE PTR [edi],dh
  440c11:	sbb    eax,DWORD PTR [ebx]
  440c13:	add    BYTE PTR [edi],dh
  440c15:	sbb    eax,DWORD PTR [ebx]
  440c17:	add    BYTE PTR [edi],dh
  440c19:	sbb    eax,DWORD PTR [ebx]
  440c1b:	add    BYTE PTR [eax],al
  440c1d:	add    BYTE PTR [edi],dh
  440c1f:	sbb    eax,DWORD PTR [ebx]
  440c21:	add    BYTE PTR [edi],dh
  440c23:	sbb    eax,DWORD PTR [ebx]
  440c25:	add    BYTE PTR [edi],dh
  440c27:	sbb    eax,DWORD PTR [ebx]
  440c29:	add    BYTE PTR [edi],dh
  440c2b:	sbb    eax,DWORD PTR [ebx]
  440c2d:	add    BYTE PTR [edi],dh
  440c2f:	sbb    eax,DWORD PTR [ebx]
  440c31:	add    BYTE PTR [edi],dh
  440c33:	sbb    eax,DWORD PTR [ebx]
  440c35:	add    BYTE PTR [edi],dh
  440c37:	sbb    eax,DWORD PTR [ebx]
  440c39:	add    BYTE PTR [edi],dh
  440c3b:	sbb    eax,DWORD PTR [ebx]
  440c3d:	add    BYTE PTR [edi],dh
  440c3f:	sbb    eax,DWORD PTR [ebx]
  440c41:	add    BYTE PTR [edi],dh
  440c43:	sbb    eax,DWORD PTR [ebx]
  440c45:	add    BYTE PTR [edi],dh
  440c47:	sbb    eax,DWORD PTR [ebx]
  440c49:	add    BYTE PTR [edi],dh
  440c4b:	sbb    eax,DWORD PTR [ebx]
  440c4d:	add    BYTE PTR [edi],dh
  440c4f:	sbb    eax,DWORD PTR [ebx]
  440c51:	add    BYTE PTR [edi],dh
  440c53:	xor    al,0xe8
  440c55:	add    esi,DWORD PTR [edi]
  440c57:	xor    al,0xe8
  440c59:	add    esi,DWORD PTR [edi]
  440c5b:	xor    al,0xe8
  440c5d:	add    esi,DWORD PTR [edi]
  440c5f:	xor    al,0xe8
  440c61:	add    esi,DWORD PTR [edi]
  440c63:	xor    al,0xe8
  440c65:	add    esi,DWORD PTR [edi]
  440c67:	xor    al,0xe8
  440c69:	add    esi,DWORD PTR [edi]
  440c6b:	xor    al,0xe8
  440c6d:	add    esi,DWORD PTR [edi]
  440c6f:	xor    al,0xe8
  440c71:	add    esi,DWORD PTR [edi]
  440c73:	xor    al,0xe8
  440c75:	add    esi,DWORD PTR [edi]
  440c77:	xor    al,0xe8
  440c79:	add    esi,DWORD PTR [edi]
  440c7b:	xor    al,0xe8
  440c7d:	add    esi,DWORD PTR [edi]
  440c7f:	xor    al,0xe8
  440c81:	add    eax,DWORD PTR [eax]
  440c83:	add    BYTE PTR [edi],dh
  440c85:	xor    al,0xe8
  440c87:	add    esi,DWORD PTR [edi]
  440c89:	xor    al,0xe8
  440c8b:	add    esi,DWORD PTR [edi]
  440c8d:	xor    al,0xe8
  440c8f:	add    esi,DWORD PTR [edi]
  440c91:	xor    al,0xe8
  440c93:	add    esi,DWORD PTR [edi]
  440c95:	xor    al,0xe8
  440c97:	add    esi,DWORD PTR [edi]
  440c99:	xor    al,0xe8
  440c9b:	add    esi,DWORD PTR [edi]
  440c9d:	xor    al,0xe8
  440c9f:	add    esi,DWORD PTR [edi]
  440ca1:	xor    al,0xe8
  440ca3:	add    esi,DWORD PTR [edi]
  440ca5:	xor    al,0xe8
  440ca7:	add    esi,DWORD PTR [edi]
  440ca9:	xor    al,0xe8
  440cab:	add    esi,DWORD PTR [edi]
  440cad:	xor    al,0xe8
  440caf:	add    esi,DWORD PTR [edi]
  440cb1:	xor    al,0xe8
  440cb3:	add    esi,DWORD PTR [edi]
  440cb5:	xor    al,0xe8
  440cb7:	add    esi,DWORD PTR [edi]
  440cb9:	xor    al,0xe8
  440cbb:	add    esi,DWORD PTR [edi]
  440cbd:	xor    al,0xe8
  440cbf:	add    esi,DWORD PTR [edi]
  440cc1:	xor    al,0xe8
  440cc3:	add    esi,DWORD PTR [edi]
  440cc5:	xor    al,0xe8
  440cc7:	add    esi,DWORD PTR [edi]
  440cc9:	xor    al,0xe8
  440ccb:	add    esi,DWORD PTR [edi]
  440ccd:	xor    al,0x1
  440ccf:	jmp    0xe9454108
  440cd4:	xor    al,0x34
  440cd6:	add    ecx,ebp
  440cd8:	xor    al,0x34
  440cda:	add    ecx,ebp
  440cdc:	xor    al,0x34
  440cde:	add    ecx,ebp
  440ce0:	xor    al,0x34
  440ce2:	add    ecx,ebp
  440ce4:	xor    al,0x34
  440ce6:	add    ecx,ebp
  440ce8:	add    BYTE PTR [eax],al
  440cea:	xor    al,0x34
  440cec:	add    ecx,ebp
  440cee:	xor    al,0x34
  440cf0:	add    ecx,ebp
  440cf2:	xor    al,0x34
  440cf4:	add    ecx,ebp
  440cf6:	xor    al,0x34
  440cf8:	add    ecx,ebp
  440cfa:	xor    al,0x34
  440cfc:	add    ecx,ebp
  440cfe:	xor    al,0x34
  440d00:	add    ecx,ebp
  440d02:	xor    al,0x34
  440d04:	add    ecx,ebp
  440d06:	xor    al,0x34
  440d08:	add    ecx,ebp
  440d0a:	xor    al,0x34
  440d0c:	add    ecx,ebp
  440d0e:	xor    al,0x34
  440d10:	add    ecx,ebp
  440d12:	xor    al,0x34
  440d14:	add    ecx,ebp
  440d16:	xor    al,0x34
  440d18:	add    ecx,ebp
  440d1a:	xor    al,0x34
  440d1c:	add    ecx,ebp
  440d1e:	xor    al,0x34
  440d20:	add    ecx,ebp
  440d22:	xor    al,0x34
  440d24:	add    ecx,ebp
  440d26:	xor    al,0x34
  440d28:	add    ecx,ebp
  440d2a:	xor    al,0x34
  440d2c:	add    ecx,ebp
  440d2e:	xor    al,0x34
  440d30:	add    ecx,ebp
  440d32:	xor    al,0x34
  440d34:	add    ecx,ebp
  440d36:	xor    al,0x34
  440d38:	add    ecx,ebp
  440d3a:	xor    al,0x34
  440d3c:	add    ecx,ebp
  440d3e:	xor    al,0x34
  440d40:	add    ecx,ebp
  440d42:	xor    al,0x34
  440d44:	add    ecx,ebp
  440d46:	xor    al,0x34
  440d48:	add    DWORD PTR [eax],eax
  440d4a:	sahf   
  440d4b:	add    DWORD PTR ss:[eax],eax
  440d4e:	add    BYTE PTR [eax],al
  440d50:	sahf   
  440d51:	add    DWORD PTR ss:[eax],eax
  440d54:	mov    ?,WORD PTR [esi]
  440d56:	add    DWORD PTR [eax],eax
  440d58:	mov    ?,WORD PTR [esi]
  440d5a:	add    DWORD PTR [eax],eax
  440d5c:	sahf   
  440d5d:	add    DWORD PTR ss:[eax],eax
  440d60:	sahf   
  440d61:	add    DWORD PTR ss:[eax],eax
  440d64:	mov    ?,WORD PTR [esi]
  440d66:	add    DWORD PTR [eax],eax
  440d68:	mov    ?,WORD PTR [esi]
  440d6a:	add    DWORD PTR [eax],eax
  440d6c:	pop    esi
  440d6d:	add    DWORD PTR ss:[eax],eax
  440d70:	pop    esi
  440d71:	add    DWORD PTR ss:[eax],eax
  440d74:	dec    esi
  440d75:	add    DWORD PTR ss:[eax],eax
  440d78:	dec    esi
  440d79:	add    DWORD PTR ss:[eax],eax
  440d7c:	pop    esi
  440d7d:	add    DWORD PTR ss:[eax],eax
  440d80:	pop    esi
  440d81:	add    DWORD PTR ss:[eax],eax
  440d84:	dec    esi
  440d85:	add    DWORD PTR ss:[eax],eax
  440d88:	dec    esi
  440d89:	add    DWORD PTR ss:[eax],eax
  440d8c:	push   ds
  440d8d:	add    DWORD PTR ss:[eax],eax
  440d90:	push   ds
  440d91:	add    DWORD PTR ss:[eax],eax
  440d94:	push   cs
  440d95:	add    DWORD PTR ss:[eax],eax
  440d98:	push   cs
  440d99:	add    DWORD PTR ss:[eax],eax
  440d9c:	push   ds
  440d9d:	add    DWORD PTR ss:[eax],eax
  440da0:	push   ds
  440da1:	add    DWORD PTR ss:[eax],eax
  440da4:	push   cs
  440da5:	add    DWORD PTR ss:[eax],eax
  440da8:	push   cs
  440da9:	add    DWORD PTR ss:[eax],eax
  440dac:	fidiv  WORD PTR ds:0x35de0001
  440db2:	add    DWORD PTR [eax],eax
  440db4:	add    BYTE PTR [eax],al
  440db6:	into   
  440db7:	xor    eax,0x35ce0001
  440dbc:	add    DWORD PTR [eax],eax
  440dbe:	fidiv  WORD PTR ds:0x35de0001
  440dc4:	add    DWORD PTR [eax],eax
  440dc6:	aaa    
  440dc7:	sbb    eax,DWORD PTR [ebx]
  440dc9:	add    BYTE PTR [edi],dh
  440dcb:	sbb    eax,DWORD PTR [ebx]
  440dcd:	add    BYTE PTR [edi],dh
  440dcf:	sbb    eax,DWORD PTR [ebx]
  440dd1:	add    BYTE PTR [edi],dh
  440dd3:	sbb    eax,DWORD PTR [ebx]
  440dd5:	add    BYTE PTR [edi],dh
  440dd7:	sbb    eax,DWORD PTR [ebx]
  440dd9:	add    BYTE PTR [edi],dh
  440ddb:	sbb    eax,DWORD PTR [ebx]
  440ddd:	add    BYTE PTR [edi],dh
  440ddf:	sbb    eax,DWORD PTR [ebx]
  440de1:	add    BYTE PTR [edi],dh
  440de3:	sbb    eax,DWORD PTR [ebx]
  440de5:	add    BYTE PTR [edi],dh
  440de7:	sbb    eax,DWORD PTR [ebx]
  440de9:	add    BYTE PTR [edi],dh
  440deb:	sbb    eax,DWORD PTR [ebx]
  440ded:	add    BYTE PTR [edi],dh
  440def:	sbb    eax,DWORD PTR [ebx]
  440df1:	add    BYTE PTR [edi],dh
  440df3:	sbb    eax,DWORD PTR [ebx]
  440df5:	add    BYTE PTR [edi],dh
  440df7:	sbb    eax,DWORD PTR [ebx]
  440df9:	add    BYTE PTR [edi],dh
  440dfb:	sbb    eax,DWORD PTR [ebx]
  440dfd:	add    BYTE PTR [edi],dh
  440dff:	sbb    eax,DWORD PTR [ebx]
  440e01:	add    BYTE PTR [edi],dh
  440e03:	sbb    eax,DWORD PTR [ebx]
  440e05:	add    BYTE PTR [edi],dh
  440e07:	sbb    eax,DWORD PTR [ebx]
  440e09:	add    BYTE PTR [edi],dh
  440e0b:	sbb    eax,DWORD PTR [ebx]
  440e0d:	add    BYTE PTR [edi],dh
  440e0f:	sbb    eax,DWORD PTR [ebx]
  440e11:	add    BYTE PTR [edi],dh
  440e13:	sbb    eax,DWORD PTR [ebx]
  440e15:	add    BYTE PTR [edi],dh
  440e17:	sbb    eax,DWORD PTR [ebx]
  440e19:	add    BYTE PTR [eax],al
  440e1b:	add    BYTE PTR [edi],dh
  440e1d:	sbb    eax,DWORD PTR [ebx]
  440e1f:	add    BYTE PTR [edi],dh
  440e21:	sbb    eax,DWORD PTR [ebx]
  440e23:	add    BYTE PTR [edi],dh
  440e25:	sbb    eax,DWORD PTR [ebx]
  440e27:	add    BYTE PTR [edi],dh
  440e29:	sbb    eax,DWORD PTR [ebx]
  440e2b:	add    BYTE PTR [edi],dh
  440e2d:	sbb    eax,DWORD PTR [ebx]
  440e2f:	add    BYTE PTR [edi],dh
  440e31:	sbb    eax,DWORD PTR [ebx]
  440e33:	add    BYTE PTR [edi],dh
  440e35:	sbb    eax,DWORD PTR [ebx]
  440e37:	add    BYTE PTR [edi],dh
  440e39:	sbb    eax,DWORD PTR [ebx]
  440e3b:	add    BYTE PTR [edi],dh
  440e3d:	sbb    eax,DWORD PTR [ebx]
  440e3f:	add    BYTE PTR [edi],dh
  440e41:	xor    al,0xe8
  440e43:	add    esi,DWORD PTR [edi]
  440e45:	xor    al,0xe8
  440e47:	add    esi,DWORD PTR [edi]
  440e49:	xor    al,0xe8
  440e4b:	add    esi,DWORD PTR [edi]
  440e4d:	xor    al,0xe8
  440e4f:	add    esi,DWORD PTR [edi]
  440e51:	xor    al,0xe8
  440e53:	add    esi,DWORD PTR [edi]
  440e55:	xor    al,0xe8
  440e57:	add    esi,DWORD PTR [edi]
  440e59:	xor    al,0xe8
  440e5b:	add    esi,DWORD PTR [edi]
  440e5d:	xor    al,0xe8
  440e5f:	add    esi,DWORD PTR [edi]
  440e61:	xor    al,0xe8
  440e63:	add    esi,DWORD PTR [edi]
  440e65:	xor    al,0xe8
  440e67:	add    esi,DWORD PTR [edi]
  440e69:	xor    al,0xe8
  440e6b:	add    esi,DWORD PTR [edi]
  440e6d:	xor    al,0xe8
  440e6f:	add    esi,DWORD PTR [edi]
  440e71:	xor    al,0xe8
  440e73:	add    esi,DWORD PTR [edi]
  440e75:	xor    al,0xe8
  440e77:	add    esi,DWORD PTR [edi]
  440e79:	xor    al,0xe8
  440e7b:	add    esi,DWORD PTR [edi]
  440e7d:	xor    al,0xe8
  440e7f:	add    eax,DWORD PTR [eax]
  440e81:	add    BYTE PTR [edi],dh
  440e83:	xor    al,0xe8
  440e85:	add    esi,DWORD PTR [edi]
  440e87:	xor    al,0xe8
  440e89:	add    esi,DWORD PTR [edi]
  440e8b:	xor    al,0xe8
  440e8d:	add    esi,DWORD PTR [edi]
  440e8f:	xor    al,0xe8
  440e91:	add    esi,DWORD PTR [edi]
  440e93:	xor    al,0xe8
  440e95:	add    esi,DWORD PTR [edi]
  440e97:	xor    al,0xe8
  440e99:	add    esi,DWORD PTR [edi]
  440e9b:	xor    al,0xe8
  440e9d:	add    esi,DWORD PTR [edi]
  440e9f:	xor    al,0xe8
  440ea1:	add    esi,DWORD PTR [edi]
  440ea3:	xor    al,0xe8
  440ea5:	add    esi,DWORD PTR [edi]
  440ea7:	xor    al,0xe8
  440ea9:	add    esi,DWORD PTR [edi]
  440eab:	xor    al,0xe8
  440ead:	add    esi,DWORD PTR [edi]
  440eaf:	xor    al,0xe8
  440eb1:	add    esi,DWORD PTR [edi]
  440eb3:	xor    al,0xe8
  440eb5:	add    esi,DWORD PTR [edi]
  440eb7:	xor    al,0xe8
  440eb9:	add    esi,DWORD PTR [edi]
  440ebb:	xor    al,0x1
  440ebd:	jmp    0xe94542f6
  440ec2:	xor    al,0x34
  440ec4:	add    ecx,ebp
  440ec6:	xor    al,0x34
  440ec8:	add    ecx,ebp
  440eca:	xor    al,0x34
  440ecc:	add    ecx,ebp
  440ece:	xor    al,0x34
  440ed0:	add    ecx,ebp
  440ed2:	xor    al,0x34
  440ed4:	add    ecx,ebp
  440ed6:	xor    al,0x34
  440ed8:	add    ecx,ebp
  440eda:	xor    al,0x34
  440edc:	add    ecx,ebp
  440ede:	xor    al,0x34
  440ee0:	add    ecx,ebp
  440ee2:	xor    al,0x34
  440ee4:	add    ecx,ebp
  440ee6:	add    BYTE PTR [eax],al
  440ee8:	xor    al,0x34
  440eea:	add    ecx,ebp
  440eec:	xor    al,0x34
  440eee:	add    ecx,ebp
  440ef0:	xor    al,0x34
  440ef2:	add    ecx,ebp
  440ef4:	xor    al,0x34
  440ef6:	add    ecx,ebp
  440ef8:	xor    al,0x34
  440efa:	add    ecx,ebp
  440efc:	xor    al,0x34
  440efe:	add    ecx,ebp
  440f00:	xor    al,0x34
  440f02:	add    ecx,ebp
  440f04:	xor    al,0x34
  440f06:	add    ecx,ebp
  440f08:	xor    al,0x34
  440f0a:	add    ecx,ebp
  440f0c:	xor    al,0x34
  440f0e:	add    ecx,ebp
  440f10:	xor    al,0x34
  440f12:	add    ecx,ebp
  440f14:	xor    al,0x34
  440f16:	add    ecx,ebp
  440f18:	xor    al,0x34
  440f1a:	add    ecx,ebp
  440f1c:	xor    al,0x34
  440f1e:	add    ecx,ebp
  440f20:	xor    al,0x34
  440f22:	add    ecx,ebp
  440f24:	xor    al,0x34
  440f26:	add    ecx,ebp
  440f28:	xor    al,0x34
  440f2a:	add    ecx,ebp
  440f2c:	xor    al,0x34
  440f2e:	add    ecx,ebp
  440f30:	xor    al,0x34
  440f32:	add    ecx,ebp
  440f34:	xor    al,0x34
  440f36:	add    DWORD PTR [eax],eax
  440f38:	fidiv  WORD PTR [edx]
  440f3a:	add    DWORD PTR [eax],eax
  440f3c:	into   
  440f3d:	xor    al,BYTE PTR [ecx]
  440f3f:	add    dh,cl
  440f41:	xor    al,BYTE PTR [ecx]
  440f43:	add    dh,bl
  440f45:	xor    al,BYTE PTR [ecx]
  440f47:	add    dh,bl
  440f49:	xor    al,BYTE PTR [ecx]
  440f4b:	add    BYTE PTR [eax],al
  440f4d:	add    dh,cl
  440f4f:	xor    al,BYTE PTR [ecx]
  440f51:	add    dh,cl
  440f53:	xor    al,BYTE PTR [ecx]
  440f55:	add    BYTE PTR [esi-0x61fffece],bl
  440f5b:	xor    al,BYTE PTR [ecx]
  440f5d:	add    BYTE PTR [esi-0x71fffece],cl
  440f63:	xor    al,BYTE PTR [ecx]
  440f65:	add    BYTE PTR [esi-0x61fffece],bl
  440f6b:	xor    al,BYTE PTR [ecx]
  440f6d:	add    BYTE PTR [esi-0x71fffece],cl
  440f73:	xor    al,BYTE PTR [ecx]
  440f75:	add    BYTE PTR [esi+0x32],bl
  440f78:	add    DWORD PTR [eax],eax
  440f7a:	pop    esi
  440f7b:	xor    al,BYTE PTR [ecx]
  440f7d:	add    BYTE PTR [esi+0x32],cl
  440f80:	add    DWORD PTR [eax],eax
  440f82:	dec    esi
  440f83:	xor    al,BYTE PTR [ecx]
  440f85:	add    BYTE PTR [esi+0x32],bl
  440f88:	add    DWORD PTR [eax],eax
  440f8a:	pop    esi
  440f8b:	xor    al,BYTE PTR [ecx]
  440f8d:	add    BYTE PTR [esi+0x32],cl
  440f90:	add    DWORD PTR [eax],eax
  440f92:	dec    esi
  440f93:	xor    al,BYTE PTR [ecx]
  440f95:	add    BYTE PTR [esi],bl
  440f97:	xor    al,BYTE PTR [ecx]
  440f99:	add    BYTE PTR [esi],bl
  440f9b:	xor    al,BYTE PTR [ecx]
  440f9d:	add    BYTE PTR [esi],cl
  440f9f:	xor    al,BYTE PTR [ecx]
  440fa1:	add    BYTE PTR [esi],cl
  440fa3:	xor    al,BYTE PTR [ecx]
  440fa5:	add    BYTE PTR [esi],bl
  440fa7:	xor    al,BYTE PTR [ecx]
  440fa9:	add    BYTE PTR [esi],bl
  440fab:	xor    al,BYTE PTR [ecx]
  440fad:	add    BYTE PTR [esi],cl
  440faf:	xor    al,BYTE PTR [ecx]
  440fb1:	add    BYTE PTR [eax],al
  440fb3:	add    BYTE PTR [edi],dh
  440fb5:	sbb    eax,DWORD PTR [ebx]
  440fb7:	add    BYTE PTR [edi],dh
  440fb9:	sbb    eax,DWORD PTR [ebx]
  440fbb:	add    BYTE PTR [edi],dh
  440fbd:	sbb    eax,DWORD PTR [ebx]
  440fbf:	add    BYTE PTR [edi],dh
  440fc1:	sbb    eax,DWORD PTR [ebx]
  440fc3:	add    BYTE PTR [edi],dh
  440fc5:	sbb    eax,DWORD PTR [ebx]
  440fc7:	add    BYTE PTR [edi],dh
  440fc9:	sbb    eax,DWORD PTR [ebx]
  440fcb:	add    BYTE PTR [edi],dh
  440fcd:	sbb    eax,DWORD PTR [ebx]
  440fcf:	add    BYTE PTR [edi],dh
  440fd1:	sbb    eax,DWORD PTR [ebx]
  440fd3:	add    BYTE PTR [edi],dh
  440fd5:	sbb    eax,DWORD PTR [ebx]
  440fd7:	add    BYTE PTR [edi],dh
  440fd9:	sbb    eax,DWORD PTR [ebx]
  440fdb:	add    BYTE PTR [edi],dh
  440fdd:	sbb    eax,DWORD PTR [ebx]
  440fdf:	add    BYTE PTR [edi],dh
  440fe1:	sbb    eax,DWORD PTR [ebx]
  440fe3:	add    BYTE PTR [edi],dh
  440fe5:	sbb    eax,DWORD PTR [ebx]
  440fe7:	add    BYTE PTR [edi],dh
  440fe9:	sbb    eax,DWORD PTR [ebx]
  440feb:	add    BYTE PTR [edi],dh
  440fed:	sbb    eax,DWORD PTR [ebx]
  440fef:	add    BYTE PTR [edi],dh
  440ff1:	sbb    eax,DWORD PTR [ebx]
  440ff3:	add    BYTE PTR [edi],dh
  440ff5:	sbb    eax,DWORD PTR [ebx]
  440ff7:	add    BYTE PTR [edi],dh
  440ff9:	sbb    eax,DWORD PTR [ebx]
  440ffb:	add    BYTE PTR [edi],dh
  440ffd:	sbb    eax,DWORD PTR [ebx]
  440fff:	add    BYTE PTR [edi],dh
  441001:	sbb    eax,DWORD PTR [ebx]
  441003:	add    BYTE PTR [edi],dh
  441005:	sbb    eax,DWORD PTR [ebx]
  441007:	add    BYTE PTR [edi],dh
  441009:	sbb    eax,DWORD PTR [ebx]
  44100b:	add    BYTE PTR [edi],dh
  44100d:	sbb    eax,DWORD PTR [ebx]
  44100f:	add    BYTE PTR [edi],dh
  441011:	sbb    eax,DWORD PTR [ebx]
  441013:	add    BYTE PTR [edi],dh
  441015:	sbb    eax,DWORD PTR [ebx]
  441017:	add    BYTE PTR [eax],al
  441019:	add    BYTE PTR [edi],dh
  44101b:	sbb    eax,DWORD PTR [ebx]
  44101d:	add    BYTE PTR [edi],dh
  44101f:	sbb    eax,DWORD PTR [ebx]
  441021:	add    BYTE PTR [edi],dh
  441023:	sbb    eax,DWORD PTR [ebx]
  441025:	add    BYTE PTR [edi],dh
  441027:	sbb    eax,DWORD PTR [ebx]
  441029:	add    BYTE PTR [edi],dh
  44102b:	sbb    eax,DWORD PTR [ebx]
  44102d:	add    BYTE PTR [edi],dh
  44102f:	xor    al,0xe8
  441031:	add    esi,DWORD PTR [edi]
  441033:	xor    al,0xe8
  441035:	add    esi,DWORD PTR [edi]
  441037:	xor    al,0xe8
  441039:	add    esi,DWORD PTR [edi]
  44103b:	xor    al,0xe8
  44103d:	add    esi,DWORD PTR [edi]
  44103f:	xor    al,0xe8
  441041:	add    esi,DWORD PTR [edi]
  441043:	xor    al,0xe8
  441045:	add    esi,DWORD PTR [edi]
  441047:	xor    al,0xe8
  441049:	add    esi,DWORD PTR [edi]
  44104b:	xor    al,0xe8
  44104d:	add    esi,DWORD PTR [edi]
  44104f:	xor    al,0xe8
  441051:	add    esi,DWORD PTR [edi]
  441053:	xor    al,0xe8
  441055:	add    esi,DWORD PTR [edi]
  441057:	xor    al,0xe8
  441059:	add    esi,DWORD PTR [edi]
  44105b:	xor    al,0xe8
  44105d:	add    esi,DWORD PTR [edi]
  44105f:	xor    al,0xe8
  441061:	add    esi,DWORD PTR [edi]
  441063:	xor    al,0xe8
  441065:	add    esi,DWORD PTR [edi]
  441067:	xor    al,0xe8
  441069:	add    esi,DWORD PTR [edi]
  44106b:	xor    al,0xe8
  44106d:	add    esi,DWORD PTR [edi]
  44106f:	xor    al,0xe8
  441071:	add    esi,DWORD PTR [edi]
  441073:	xor    al,0xe8
  441075:	add    esi,DWORD PTR [edi]
  441077:	xor    al,0xe8
  441079:	add    esi,DWORD PTR [edi]
  44107b:	xor    al,0xe8
  44107d:	add    eax,DWORD PTR [eax]
  44107f:	add    BYTE PTR [edi],dh
  441081:	xor    al,0xe8
  441083:	add    esi,DWORD PTR [edi]
  441085:	xor    al,0xe8
  441087:	add    esi,DWORD PTR [edi]
  441089:	xor    al,0xe8
  44108b:	add    esi,DWORD PTR [edi]
  44108d:	xor    al,0xe8
  44108f:	add    esi,DWORD PTR [edi]
  441091:	xor    al,0xe8
  441093:	add    esi,DWORD PTR [edi]
  441095:	xor    al,0xe8
  441097:	add    esi,DWORD PTR [edi]
  441099:	xor    al,0xe8
  44109b:	add    esi,DWORD PTR [edi]
  44109d:	xor    al,0xe8
  44109f:	add    esi,DWORD PTR [edi]
  4410a1:	xor    al,0xe8
  4410a3:	add    esi,DWORD PTR [edi]
  4410a5:	xor    al,0xe8
  4410a7:	add    esi,DWORD PTR [edi]
  4410a9:	xor    al,0x1
  4410ab:	jmp    0xe94544e4
  4410b0:	xor    al,0x34
  4410b2:	add    ecx,ebp
  4410b4:	xor    al,0x34
  4410b6:	add    ecx,ebp
  4410b8:	xor    al,0x34
  4410ba:	add    ecx,ebp
  4410bc:	xor    al,0x34
  4410be:	add    ecx,ebp
  4410c0:	xor    al,0x34
  4410c2:	add    ecx,ebp
  4410c4:	xor    al,0x34
  4410c6:	add    ecx,ebp
  4410c8:	xor    al,0x34
  4410ca:	add    ecx,ebp
  4410cc:	xor    al,0x34
  4410ce:	add    ecx,ebp
  4410d0:	xor    al,0x34
  4410d2:	add    ecx,ebp
  4410d4:	xor    al,0x34
  4410d6:	add    ecx,ebp
  4410d8:	xor    al,0x34
  4410da:	add    ecx,ebp
  4410dc:	xor    al,0x34
  4410de:	add    ecx,ebp
  4410e0:	xor    al,0x34
  4410e2:	add    ecx,ebp
  4410e4:	add    BYTE PTR [eax],al
  4410e6:	xor    al,0x34
  4410e8:	add    ecx,ebp
  4410ea:	xor    al,0x34
  4410ec:	add    ecx,ebp
  4410ee:	xor    al,0x34
  4410f0:	add    ecx,ebp
  4410f2:	xor    al,0x34
  4410f4:	add    ecx,ebp
  4410f6:	xor    al,0x34
  4410f8:	add    ecx,ebp
  4410fa:	xor    al,0x34
  4410fc:	add    ecx,ebp
  4410fe:	xor    al,0x34
  441100:	add    ecx,ebp
  441102:	xor    al,0x34
  441104:	add    ecx,ebp
  441106:	xor    al,0x34
  441108:	add    ecx,ebp
  44110a:	xor    al,0x34
  44110c:	add    ecx,ebp
  44110e:	xor    al,0x34
  441110:	add    ecx,ebp
  441112:	xor    al,0x34
  441114:	add    ecx,ebp
  441116:	xor    al,0x34
  441118:	add    ecx,ebp
  44111a:	xor    al,0x34
  44111c:	add    ecx,ebp
  44111e:	xor    al,0x34
  441120:	add    ecx,ebp
  441122:	xor    al,0x34
  441124:	add    DWORD PTR [eax],eax
  441126:	push   cs
  441127:	aaa    
  441128:	add    DWORD PTR [eax],eax
  44112a:	push   cs
  44112b:	aaa    
  44112c:	add    DWORD PTR [eax],eax
  44112e:	push   ds
  44112f:	aaa    
  441130:	add    DWORD PTR [eax],eax
  441132:	push   ds
  441133:	aaa    
  441134:	add    DWORD PTR [eax],eax
  441136:	push   cs
  441137:	aaa    
  441138:	add    DWORD PTR [eax],eax
  44113a:	push   cs
  44113b:	aaa    
  44113c:	add    DWORD PTR [eax],eax
  44113e:	fidiv  WORD PTR [esi]
  441140:	add    DWORD PTR [eax],eax
  441142:	fidiv  WORD PTR [esi]
  441144:	add    DWORD PTR [eax],eax
  441146:	into   
  441147:	add    DWORD PTR ss:[eax],eax
  44114a:	add    BYTE PTR [eax],al
  44114c:	into   
  44114d:	add    DWORD PTR ss:[eax],eax
  441150:	fidiv  WORD PTR [esi]
  441152:	add    DWORD PTR [eax],eax
  441154:	fidiv  WORD PTR [esi]
  441156:	add    DWORD PTR [eax],eax
  441158:	into   
  441159:	add    DWORD PTR ss:[eax],eax
  44115c:	into   
  44115d:	add    DWORD PTR ss:[eax],eax
  441160:	sahf   
  441161:	add    DWORD PTR ss:[eax],eax
  441164:	sahf   
  441165:	add    DWORD PTR ss:[eax],eax
  441168:	mov    ?,WORD PTR [esi]
  44116a:	add    DWORD PTR [eax],eax
  44116c:	mov    ?,WORD PTR [esi]
  44116e:	add    DWORD PTR [eax],eax
  441170:	sahf   
  441171:	add    DWORD PTR ss:[eax],eax
  441174:	sahf   
  441175:	add    DWORD PTR ss:[eax],eax
  441178:	mov    ?,WORD PTR [esi]
  44117a:	add    DWORD PTR [eax],eax
  44117c:	mov    ?,WORD PTR [esi]
  44117e:	add    DWORD PTR [eax],eax
  441180:	pop    esi
  441181:	add    DWORD PTR ss:[eax],eax
  441184:	pop    esi
  441185:	add    DWORD PTR ss:[eax],eax
  441188:	dec    esi
  441189:	add    DWORD PTR ss:[eax],eax
  44118c:	dec    esi
  44118d:	add    DWORD PTR ss:[eax],eax
  441190:	pop    esi
  441191:	add    DWORD PTR ss:[eax],eax
  441194:	pop    esi
  441195:	add    DWORD PTR ss:[eax],eax
  441198:	dec    esi
  441199:	add    DWORD PTR ss:[eax],eax
  44119c:	dec    esi
  44119d:	add    DWORD PTR ss:[eax],eax
  4411a0:	aaa    
  4411a1:	or     eax,DWORD PTR [ebx]
  4411a3:	add    BYTE PTR [edi],dh
  4411a5:	or     eax,DWORD PTR [ebx]
  4411a7:	add    BYTE PTR [edi],dh
  4411a9:	or     eax,DWORD PTR [ebx]
  4411ab:	add    BYTE PTR [edi],dh
  4411ad:	or     eax,DWORD PTR [ebx]
  4411af:	add    BYTE PTR [eax],al
  4411b1:	add    BYTE PTR [edi],dh
  4411b3:	or     eax,DWORD PTR [ebx]
  4411b5:	add    BYTE PTR [edi],dh
  4411b7:	or     eax,DWORD PTR [ebx]
  4411b9:	add    BYTE PTR [edi],dh
  4411bb:	or     eax,DWORD PTR [ebx]
  4411bd:	add    BYTE PTR [edi],dh
  4411bf:	or     eax,DWORD PTR [ebx]
  4411c1:	add    BYTE PTR [edi],dh
  4411c3:	or     eax,DWORD PTR [ebx]
  4411c5:	add    BYTE PTR [edi],dh
  4411c7:	or     eax,DWORD PTR [ebx]
  4411c9:	add    BYTE PTR [edi],dh
  4411cb:	or     eax,DWORD PTR [ebx]
  4411cd:	add    BYTE PTR [edi],dh
  4411cf:	or     eax,DWORD PTR [ebx]
  4411d1:	add    BYTE PTR [edi],dh
  4411d3:	or     eax,DWORD PTR [ebx]
  4411d5:	add    BYTE PTR [edi],dh
  4411d7:	or     eax,DWORD PTR [ebx]
  4411d9:	add    BYTE PTR [edi],dh
  4411db:	or     eax,DWORD PTR [ebx]
  4411dd:	add    BYTE PTR [edi],dh
  4411df:	or     eax,DWORD PTR [ebx]
  4411e1:	add    BYTE PTR [edi],dh
  4411e3:	or     eax,DWORD PTR [ebx]
  4411e5:	add    BYTE PTR [edi],dh
  4411e7:	or     eax,DWORD PTR [ebx]
  4411e9:	add    BYTE PTR [edi],dh
  4411eb:	or     eax,DWORD PTR [ebx]
  4411ed:	add    BYTE PTR [edi],dh
  4411ef:	or     eax,DWORD PTR [ebx]
  4411f1:	add    BYTE PTR [edi],dh
  4411f3:	or     eax,DWORD PTR [ebx]
  4411f5:	add    BYTE PTR [edi],dh
  4411f7:	or     eax,DWORD PTR [ebx]
  4411f9:	add    BYTE PTR [edi],dh
  4411fb:	or     eax,DWORD PTR [ebx]
  4411fd:	add    BYTE PTR [edi],dh
  4411ff:	or     eax,DWORD PTR [ebx]
  441201:	add    BYTE PTR [edi],dh
  441203:	or     eax,DWORD PTR [ebx]
  441205:	add    BYTE PTR [edi],dh
  441207:	or     eax,DWORD PTR [ebx]
  441209:	add    BYTE PTR [edi],dh
  44120b:	or     eax,DWORD PTR [ebx]
  44120d:	add    BYTE PTR [edi],dh
  44120f:	or     eax,DWORD PTR [ebx]
  441211:	add    BYTE PTR [edi],dh
  441213:	or     eax,DWORD PTR [ebx]
  441215:	add    BYTE PTR [eax],al
  441217:	add    BYTE PTR [edi],dh
  441219:	or     eax,DWORD PTR [ebx]
  44121b:	add    BYTE PTR [edi],dh
  44121d:	xor    al,0xe8
  44121f:	add    esi,DWORD PTR [edi]
  441221:	xor    al,0xe8
  441223:	add    esi,DWORD PTR [edi]
  441225:	xor    al,0xe8
  441227:	add    esi,DWORD PTR [edi]
  441229:	xor    al,0xe8
  44122b:	add    esi,DWORD PTR [edi]
  44122d:	xor    al,0xe8
  44122f:	add    esi,DWORD PTR [edi]
  441231:	xor    al,0xe8
  441233:	add    esi,DWORD PTR [edi]
  441235:	xor    al,0xe8
  441237:	add    esi,DWORD PTR [edi]
  441239:	xor    al,0xe8
  44123b:	add    esi,DWORD PTR [edi]
  44123d:	xor    al,0xe8
  44123f:	add    esi,DWORD PTR [edi]
  441241:	xor    al,0xe8
  441243:	add    esi,DWORD PTR [edi]
  441245:	xor    al,0xe8
  441247:	add    esi,DWORD PTR [edi]
  441249:	xor    al,0xe8
  44124b:	add    esi,DWORD PTR [edi]
  44124d:	xor    al,0xe8
  44124f:	add    esi,DWORD PTR [edi]
  441251:	xor    al,0xe8
  441253:	add    esi,DWORD PTR [edi]
  441255:	xor    al,0xe8
  441257:	add    esi,DWORD PTR [edi]
  441259:	xor    al,0xe8
  44125b:	add    esi,DWORD PTR [edi]
  44125d:	xor    al,0xe8
  44125f:	add    esi,DWORD PTR [edi]
  441261:	xor    al,0xe8
  441263:	add    esi,DWORD PTR [edi]
  441265:	xor    al,0xe8
  441267:	add    esi,DWORD PTR [edi]
  441269:	xor    al,0xe8
  44126b:	add    esi,DWORD PTR [edi]
  44126d:	xor    al,0xe8
  44126f:	add    esi,DWORD PTR [edi]
  441271:	xor    al,0xe8
  441273:	add    esi,DWORD PTR [edi]
  441275:	xor    al,0xe8
  441277:	add    esi,DWORD PTR [edi]
  441279:	xor    al,0xe8
  44127b:	add    eax,DWORD PTR [eax]
  44127d:	add    BYTE PTR [edi],dh
  44127f:	xor    al,0xe8
  441281:	add    esi,DWORD PTR [edi]
  441283:	xor    al,0xe8
  441285:	add    esi,DWORD PTR [edi]
  441287:	xor    al,0xe8
  441289:	add    esi,DWORD PTR [edi]
  44128b:	xor    al,0xe8
  44128d:	add    esi,DWORD PTR [edi]
  44128f:	xor    al,0xe8
  441291:	add    esi,DWORD PTR [edi]
  441293:	xor    al,0xe8
  441295:	add    esi,DWORD PTR [edi]
  441297:	xor    al,0x1
  441299:	jmp    0xe94546d2
  44129e:	xor    al,0x34
  4412a0:	add    ecx,ebp
  4412a2:	xor    al,0x34
  4412a4:	add    ecx,ebp
  4412a6:	xor    al,0x34
  4412a8:	add    ecx,ebp
  4412aa:	xor    al,0x34
  4412ac:	add    ecx,ebp
  4412ae:	xor    al,0x34
  4412b0:	add    ecx,ebp
  4412b2:	xor    al,0x34
  4412b4:	add    ecx,ebp
  4412b6:	xor    al,0x34
  4412b8:	add    ecx,ebp
  4412ba:	xor    al,0x34
  4412bc:	add    ecx,ebp
  4412be:	xor    al,0x34
  4412c0:	add    ecx,ebp
  4412c2:	xor    al,0x34
  4412c4:	add    ecx,ebp
  4412c6:	xor    al,0x34
  4412c8:	add    ecx,ebp
  4412ca:	xor    al,0x34
  4412cc:	add    ecx,ebp
  4412ce:	xor    al,0x34
  4412d0:	add    ecx,ebp
  4412d2:	xor    al,0x34
  4412d4:	add    ecx,ebp
  4412d6:	xor    al,0x34
  4412d8:	add    ecx,ebp
  4412da:	xor    al,0x34
  4412dc:	add    ecx,ebp
  4412de:	xor    al,0x34
  4412e0:	add    ecx,ebp
  4412e2:	add    BYTE PTR [eax],al
  4412e4:	xor    al,0x34
  4412e6:	add    ecx,ebp
  4412e8:	xor    al,0x34
  4412ea:	add    ecx,ebp
  4412ec:	xor    al,0x34
  4412ee:	add    ecx,ebp
  4412f0:	xor    al,0x34
  4412f2:	add    ecx,ebp
  4412f4:	xor    al,0x34
  4412f6:	add    ecx,ebp
  4412f8:	xor    al,0x34
  4412fa:	add    ecx,ebp
  4412fc:	xor    al,0x34
  4412fe:	add    ecx,ebp
  441300:	xor    al,0x34
  441302:	add    ecx,ebp
  441304:	xor    al,0x34
  441306:	add    ecx,ebp
  441308:	xor    al,0x34
  44130a:	add    ecx,ebp
  44130c:	xor    al,0x34
  44130e:	add    ecx,ebp
  441310:	xor    al,0x34
  441312:	add    DWORD PTR [eax],eax
  441314:	dec    esi
  441315:	xor    eax,DWORD PTR [ecx]
  441317:	add    BYTE PTR [esi+0x33],bl
  44131a:	add    DWORD PTR [eax],eax
  44131c:	pop    esi
  44131d:	xor    eax,DWORD PTR [ecx]
  44131f:	add    BYTE PTR [esi+0x33],cl
  441322:	add    DWORD PTR [eax],eax
  441324:	dec    esi
  441325:	xor    eax,DWORD PTR [ecx]
  441327:	add    BYTE PTR [esi],bl
  441329:	xor    eax,DWORD PTR [ecx]
  44132b:	add    BYTE PTR [esi],bl
  44132d:	xor    eax,DWORD PTR [ecx]
  44132f:	add    BYTE PTR [esi],cl
  441331:	xor    eax,DWORD PTR [ecx]
  441333:	add    BYTE PTR [esi],cl
  441335:	xor    eax,DWORD PTR [ecx]
  441337:	add    BYTE PTR [esi],bl
  441339:	xor    eax,DWORD PTR [ecx]
  44133b:	add    BYTE PTR [esi],bl
  44133d:	xor    eax,DWORD PTR [ecx]
  44133f:	add    BYTE PTR [esi],cl
  441341:	xor    eax,DWORD PTR [ecx]
  441343:	add    BYTE PTR [esi],cl
  441345:	xor    eax,DWORD PTR [ecx]
  441347:	add    BYTE PTR [eax],al
  441349:	add    dh,bl
  44134b:	xor    al,BYTE PTR [ecx]
  44134d:	add    dh,bl
  44134f:	xor    al,BYTE PTR [ecx]
  441351:	add    dh,cl
  441353:	xor    al,BYTE PTR [ecx]
  441355:	add    dh,cl
  441357:	xor    al,BYTE PTR [ecx]
  441359:	add    dh,bl
  44135b:	xor    al,BYTE PTR [ecx]
  44135d:	add    dh,bl
  44135f:	xor    al,BYTE PTR [ecx]
  441361:	add    dh,cl
  441363:	xor    al,BYTE PTR [ecx]
  441365:	add    dh,cl
  441367:	xor    al,BYTE PTR [ecx]
  441369:	add    BYTE PTR [esi-0x61fffece],bl
  44136f:	xor    al,BYTE PTR [ecx]
  441371:	add    BYTE PTR [esi-0x71fffece],cl
  441377:	xor    al,BYTE PTR [ecx]
  441379:	add    BYTE PTR [esi-0x61fffece],bl
  44137f:	xor    al,BYTE PTR [ecx]
  441381:	add    BYTE PTR [esi-0x71fffece],cl
  441387:	xor    al,BYTE PTR [ecx]
  441389:	add    BYTE PTR [esi+0x32],bl
  44138c:	add    DWORD PTR [eax],eax
  44138e:	aaa    
  44138f:	or     eax,0xd370003
  441394:	add    eax,DWORD PTR [eax]
  441396:	aaa    
  441397:	or     eax,0xd370003
  44139c:	add    eax,DWORD PTR [eax]
  44139e:	aaa    
  44139f:	or     eax,0xd370003
  4413a4:	add    eax,DWORD PTR [eax]
  4413a6:	aaa    
  4413a7:	or     eax,0xb370003
  4413ac:	add    eax,DWORD PTR [eax]
  4413ae:	add    BYTE PTR [eax],al
  4413b0:	aaa    
  4413b1:	or     eax,DWORD PTR [ebx]
  4413b3:	add    BYTE PTR [edi],dh
  4413b5:	or     eax,DWORD PTR [ebx]
  4413b7:	add    BYTE PTR [edi],dh
  4413b9:	or     eax,DWORD PTR [ebx]
  4413bb:	add    BYTE PTR [edi],dh
  4413bd:	or     eax,DWORD PTR [ebx]
  4413bf:	add    BYTE PTR [edi],dh
  4413c1:	or     eax,DWORD PTR [ebx]
  4413c3:	add    BYTE PTR [edi],dh
  4413c5:	or     eax,DWORD PTR [ebx]
  4413c7:	add    BYTE PTR [edi],dh
  4413c9:	or     eax,DWORD PTR [ebx]
  4413cb:	add    BYTE PTR [edi],dh
  4413cd:	or     eax,DWORD PTR [ebx]
  4413cf:	add    BYTE PTR [edi],dh
  4413d1:	or     eax,DWORD PTR [ebx]
  4413d3:	add    BYTE PTR [edi],dh
  4413d5:	or     eax,DWORD PTR [ebx]
  4413d7:	add    BYTE PTR [edi],dh
  4413d9:	or     eax,DWORD PTR [ebx]
  4413db:	add    BYTE PTR [edi],dh
  4413dd:	or     eax,DWORD PTR [ebx]
  4413df:	add    BYTE PTR [edi],dh
  4413e1:	or     eax,DWORD PTR [ebx]
  4413e3:	add    BYTE PTR [edi],dh
  4413e5:	or     eax,DWORD PTR [ebx]
  4413e7:	add    BYTE PTR [edi],dh
  4413e9:	or     eax,DWORD PTR [ebx]
  4413eb:	add    BYTE PTR [edi],dh
  4413ed:	or     eax,DWORD PTR [ebx]
  4413ef:	add    BYTE PTR [edi],dh
  4413f1:	or     eax,DWORD PTR [ebx]
  4413f3:	add    BYTE PTR [edi],dh
  4413f5:	or     eax,DWORD PTR [ebx]
  4413f7:	add    BYTE PTR [edi],dh
  4413f9:	or     eax,DWORD PTR [ebx]
  4413fb:	add    BYTE PTR [edi],dh
  4413fd:	or     eax,DWORD PTR [ebx]
  4413ff:	add    BYTE PTR [edi],dh
  441401:	or     eax,DWORD PTR [ebx]
  441403:	add    BYTE PTR [edi],dh
  441405:	or     eax,DWORD PTR [ebx]
  441407:	add    BYTE PTR [edi],dh
  441409:	xor    al,0xe8
  44140b:	add    esi,DWORD PTR [edi]
  44140d:	xor    al,0xe8
  44140f:	add    esi,DWORD PTR [edi]
  441411:	xor    al,0xe8
  441413:	add    eax,DWORD PTR [eax]
  441415:	add    BYTE PTR [edi],dh
  441417:	xor    al,0xe8
  441419:	add    esi,DWORD PTR [edi]
  44141b:	xor    al,0xe8
  44141d:	add    esi,DWORD PTR [edi]
  44141f:	xor    al,0xe8
  441421:	add    esi,DWORD PTR [edi]
  441423:	xor    al,0xe8
  441425:	add    esi,DWORD PTR [edi]
  441427:	xor    al,0xe8
  441429:	add    esi,DWORD PTR [edi]
  44142b:	xor    al,0xe8
  44142d:	add    esi,DWORD PTR [edi]
  44142f:	xor    al,0xe8
  441431:	add    esi,DWORD PTR [edi]
  441433:	xor    al,0xe8
  441435:	add    esi,DWORD PTR [edi]
  441437:	xor    al,0xe8
  441439:	add    esi,DWORD PTR [edi]
  44143b:	xor    al,0xe8
  44143d:	add    esi,DWORD PTR [edi]
  44143f:	xor    al,0xe8
  441441:	add    esi,DWORD PTR [edi]
  441443:	xor    al,0xe8
  441445:	add    esi,DWORD PTR [edi]
  441447:	xor    al,0xe8
  441449:	add    esi,DWORD PTR [edi]
  44144b:	xor    al,0xe8
  44144d:	add    esi,DWORD PTR [edi]
  44144f:	xor    al,0xe8
  441451:	add    esi,DWORD PTR [edi]
  441453:	xor    al,0xe8
  441455:	add    esi,DWORD PTR [edi]
  441457:	xor    al,0xe8
  441459:	add    esi,DWORD PTR [edi]
  44145b:	xor    al,0xe8
  44145d:	add    esi,DWORD PTR [edi]
  44145f:	xor    al,0xe8
  441461:	add    esi,DWORD PTR [edi]
  441463:	xor    al,0xe8
  441465:	add    esi,DWORD PTR [edi]
  441467:	xor    al,0xe8
  441469:	add    esi,DWORD PTR [edi]
  44146b:	xor    al,0xe8
  44146d:	add    esi,DWORD PTR [edi]
  44146f:	xor    al,0xe8
  441471:	add    esi,DWORD PTR [edi]
  441473:	xor    al,0x7f
  441475:	ja     0x4414b8
  441477:	jl     0x4414e1
  441479:	pop    ebp
  44147a:	add    BYTE PTR [eax],al
  44147c:	rcr    BYTE PTR [ecx-0x29f2a0eb],cl
  441482:	jns    0x44147f
  441484:	shr    BYTE PTR [edx],0x1
  441487:	ficomp WORD PTR [edx+0x23]
  44148a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44148b:	add    al,0x54
  44148d:	imul   esp,ecx,0x7dfaab0
  441493:	ret    0x3c11
  441496:	xor    dh,BYTE PTR [esi-0x5d]
  441499:	shl    DWORD PTR [ebx+0x76],1
  44149c:	inc    eax
  44149d:	adc    eax,0x7225249e
  4414a2:	mov    eax,0xf99fbaa7
  4414a7:	in     al,0xc
  4414a9:	pushf  
  4414aa:	mov    WORD PTR [ebx],ds
  4414ac:	or     eax,0xaf64de18
  4414b1:	test   DWORD PTR [ebx-0x2f36b330],ebp
  4414b7:	gs int3 
  4414b9:	pop    ecx
  4414ba:	mov    al,ds:0xe70f2de3
  4414bf:	lahf   
  4414c0:	ficomp DWORD PTR [edx-0x62db9809]
  4414c6:	xlat   BYTE PTR ds:[ebx]
  4414c7:	mov    bh,0xda
  4414c9:	xchg   ebx,eax
  4414ca:	dec    eax
  4414cb:	enter  0x7d55,0x3e
  4414cf:	xor    DWORD PTR [ebx+0x1d25e228],ebx
  4414d5:	fisub  DWORD PTR [esi]
  4414d7:	push   edi
  4414d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4414d9:	jnp    0x4414f7
  4414db:	stos   DWORD PTR es:[edi],eax
  4414dc:	imul   eax,DWORD PTR [ebp+0x4c],0x3a000017
  4414e3:	push   ds
  4414e4:	fld    st(7)
  4414e6:	out    0x95,eax
  4414e8:	inc    edx
  4414e9:	call   0x2dcc:0x53c72aab
  4414f0:	sub    al,0xf5
  4414f2:	mov    eax,0x7e4bb620
  4414f7:	aad    0xd7
  4414f9:	aaa    
  4414fa:	adc    BYTE PTR [edx-0x58],0x90
  4414fe:	push   ss
  4414ff:	loope  0x441530
  441501:	add    dh,ch
  441503:	xor    BYTE PTR [ebx-0x6],bh
  441506:	sbb    esp,edx
  441508:	inc    ebx
  441509:	push   edx
  44150a:	xor    DWORD PTR [esi+ebp*4-0x9b21508],eax
  441511:	stc    
  441512:	jne    0x441506
  441514:	imul   ecx,DWORD PTR [esi-0x346a8bed],0x4f433f30
  44151e:	jg     0x4414f5
  441520:	cwde   
  441521:	xchg   esp,eax
  441522:	mov    ecx,0x1aa51d2
  441527:	(bad)  
  441528:	and    BYTE PTR [edi-0x57],bh
  44152b:	mov    ds:0xa1e134ed,eax
  441530:	push   ebx
  441531:	dec    edx
  441532:	cmp    DWORD PTR [ebp+0x21],esp
  441535:	pop    esi
  441536:	sti    
  441537:	data16 (bad) 
  441539:	(bad)  
  44153a:	adc    al,BYTE PTR [esi+0x61]
  44153d:	rcr    DWORD PTR [ebp-0x2402a1fe],0x66
  441544:	push   edi
  441545:	cmp    al,0x0
  441547:	add    BYTE PTR [eax-0x53f1948b],ch
  44154d:	repnz inc edx
  44154f:	jmp    0x6a7518af
  441554:	pushf  
  441555:	pop    edi
  441556:	cmp    ebx,ecx
  441558:	mov    ebp,0xefb1a48
  44155d:	loope  0x44152c
  44155f:	cli    
  441560:	dec    ebp
  441561:	fisttp WORD PTR [eax-0x2c177687]
  441567:	mov    DWORD PTR [ebp-0x78eeae3d],ebp
  44156d:	cs pop ss
  44156f:	sar    DWORD PTR [ecx+0x73edf140],cl
  441575:	adc    al,0x3d
  441577:	mov    ah,0x85
  441579:	out    0xcf,eax
  44157b:	xlat   BYTE PTR ds:[ebx]
  44157c:	aaa    
  44157d:	js     0x4415f1
  44157f:	mov    cl,0x37
  441581:	fisubr DWORD PTR gs:[eax-0xf]
  441585:	call   0x8cab5b9a
  44158a:	mov    bl,0xdf
  44158c:	sbb    al,dh
  44158e:	cmp    cl,al
  441590:	cmp    ch,BYTE PTR [edx]
  441592:	cmp    eax,0x4874d7c
  441597:	ficomp WORD PTR [eax+0x6a8099]
  44159d:	loop   0x44153b
  44159f:	lahf   
  4415a0:	and    al,0xb3
  4415a2:	imul   ebx,DWORD PTR [ebp-0x4d],0xffffffeb
  4415a6:	ror    BYTE PTR [edi],1
  4415a8:	pop    ebp
  4415a9:	sub    DWORD PTR [esi+0x4a0000d1],0xb
  4415b0:	xchg   edx,eax
  4415b1:	das    
  4415b2:	inc    edi
  4415b3:	in     eax,0xf4
  4415b5:	inc    eax
  4415b6:	scas   eax,DWORD PTR es:[edi]
  4415b7:	mov    esp,0xdea4ac9e
  4415bc:	inc    edi
  4415bd:	retf   
  4415be:	or     al,0xf0
  4415c0:	or     eax,0x2b8dd0c0
  4415c5:	lods   al,BYTE PTR ds:[esi]
  4415c6:	sti    
  4415c7:	shr    BYTE PTR [eax-0x1770fe23],0x4
  4415ce:	sbb    esp,DWORD PTR [ebp+0x205491dc]
  4415d4:	in     al,dx
  4415d5:	sbb    cl,bl
  4415d7:	inc    esp
  4415d8:	loopne 0x44162a
  4415da:	ficom  WORD PTR [ebx+0x77376fda]
  4415e0:	fiadd  WORD PTR [edi+edi*8-0x3ccd889]
  4415e7:	cs cdq 
  4415e9:	push   esp
  4415ea:	push   cs
  4415eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4415ec:	imul   esp,DWORD PTR [ebp+0x774b2e2a],0x852e452d
  4415f6:	add    al,0x34
  4415f8:	frstor [edi+0x59421812]
  4415fe:	inc    eax
  4415ff:	push   ebp
  441600:	mov    ecx,0x93e3ecfd
  441605:	pop    ds
  441606:	retf   
  441607:	imul   DWORD PTR [esi]
  441609:	(bad)  
  44160a:	mov    edx,0x6267a376
  44160f:	call   0x3a9a:0x8e85
  441616:	jns    0x441683
  441618:	jo     0x44162d
  44161a:	aam    0xef
  44161c:	lahf   
  44161d:	jecxz  0x44164e
  44161f:	and    ecx,esp
  441621:	out    dx,al
  441622:	push   cs
  441623:	push   ebx
  441624:	sub    al,0x22
  441626:	fmul   st(2),st
  441628:	push   esi
  441629:	std    
  44162a:	add    eax,0xb197899a
  44162f:	aad    0xd
  441631:	pop    ss
  441632:	scas   eax,DWORD PTR es:[edi]
  441633:	lahf   
  441634:	sub    eax,0x9a291202
  441639:	xor    al,0xd2
  44163b:	push   ebp
  44163c:	mov    ecx,0xc1d633f4
  441641:	aad    0xd4
  441643:	cmp    DWORD PTR [edx-0x59],ebp
  441646:	mov    esi,0x615e9c9b
  44164b:	pop    es
  44164c:	mov    bl,BYTE PTR [ecx]
  44164e:	daa    
  44164f:	jae    0x4415e2
  441651:	test   BYTE PTR ds:0x17336cc0,0x14
  441658:	(bad)  
  441659:	in     al,dx
  44165a:	loopne 0x441691
  44165c:	enter  0x1fc3,0x24
  441660:	fidiv  WORD PTR ds:[esi-0x4d55e308]
  441667:	dec    eax
  441668:	xor    DWORD PTR [ebx+0x3a],ebx
  44166b:	inc    edx
  44166c:	xor    esp,DWORD PTR [edx+0x49]
  44166f:	ficom  WORD PTR [esi+0x7f]
  441672:	add    DWORD PTR [ebx+0x46],esp
  441675:	shl    DWORD PTR [eax+0x5d00009b],cl
  44167b:	cwde   
  44167c:	mov    ds,WORD PTR [esi+0x6c]
  44167f:	cmp    dh,bh
  441681:	mov    bl,0x63
  441683:	test   eax,0xe76bcc80
  441688:	(bad)
  44168b:	out    0xc5,eax
  44168d:	int3   
  44168e:	loop   0x44163c
  441690:	in     eax,0x51
  441692:	lods   al,BYTE PTR ds:[esi]
  441693:	outs   dx,BYTE PTR ds:[esi]
  441694:	or     DWORD PTR [edx-0xbb53d1],ecx
  44169a:	mov    esp,0x2c3550e
  44169f:	lods   eax,DWORD PTR ds:[esi]
  4416a0:	in     eax,0x51
  4416a2:	or     DWORD PTR [ecx-0x532c36ce],eax
  4416a8:	jo     0x4416da
  4416aa:	mov    esp,0xc18b05a1
  4416af:	aaa    
  4416b0:	mov    al,BYTE PTR [esi+0x2f]
  4416b3:	stos   DWORD PTR es:[edi],eax
  4416b4:	cmp    al,0xfc
  4416b6:	lods   al,BYTE PTR ds:[esi]
  4416b7:	cdq    
  4416b8:	and    DWORD PTR [ebx+0x6b36b469],ecx
  4416be:	mov    ds:0x6c3f812f,eax
  4416c3:	mov    al,ds:0x780eeb03
  4416c8:	push   edi
  4416c9:	mov    ebx,DWORD PTR [edx]
  4416cb:	jp     0x44168f
  4416cd:	int3   
  4416ce:	bound  ebp,QWORD PTR [ebx+0x511383e5]
  4416d4:	mov    al,BYTE PTR [ebp+0x2f]
  4416d7:	lods   eax,DWORD PTR ds:[esi]
  4416d8:	cmp    al,0xe0
  4416da:	mov    esp,0x8be169
  4416df:	add    BYTE PTR [edx+0x23510314],al
  4416e5:	lods   eax,DWORD PTR ds:[esi]
  4416e6:	dec    esp
  4416e7:	in     al,0xac
  4416e9:	jno    0x4416c8
  4416eb:	mov    edi,DWORD PTR [edi-0x64]
  4416ee:	add    cl,BYTE PTR [ebp+0x3f]
  4416f1:	lods   eax,DWORD PTR ds:[esi]
  4416f2:	inc    esp
  4416f3:	clc    
  4416f4:	lods   al,BYTE PTR ds:[esi]
  4416f5:	cmp    ecx,0x250758b
  4416fb:	inc    ebp
  4416fc:	aas    
  4416fd:	lods   eax,DWORD PTR ds:[esi]
  4416fe:	cmp    al,0xe8
  441700:	mov    esp,0x68bf969
  441705:	push   esp
  441706:	add    dl,BYTE PTR [ebp+0x2f]
  441709:	lods   eax,DWORD PTR ds:[esi]
  44170a:	dec    esp
  44170b:	lock mov esp,0xff8bf971
  441711:	aaa    
  441712:	add    cl,BYTE PTR [ebp+0x2f]
  441715:	lods   eax,DWORD PTR ds:[esi]
  441716:	inc    esp
  441717:	cld    
  441718:	jo     0x44178b
  44171a:	in     eax,dx
  44171b:	add    BYTE PTR [edi],dh
  44171d:	xor    al,0x1
  44171f:	jmp    0x44175f
  441721:	stos   DWORD PTR es:[edi],eax
  441722:	dec    esp
  441723:	hlt    
  441724:	mov    ah,0xf2
  441726:	add    BYTE PTR [ecx+0x458b2002],cl
  44172c:	dec    edi
  44172d:	stos   DWORD PTR es:[edi],eax
  44172e:	inc    esp
  44172f:	hlt    
  441730:	or     al,0x6c
  441732:	sbb    DWORD PTR [ebx-0x11],esi
  441735:	stos   BYTE PTR es:[edi],al
  441736:	dec    esp
  441737:	lock lods al,BYTE PTR ds:[esi]
  441739:	xor    al,BYTE PTR [edx]
  44173b:	inc    ebp
  44173c:	aas    
  44173d:	lods   eax,DWORD PTR ds:[esi]
  44173e:	cmp    al,0xdc
  441740:	popf   
  441741:	imul   ebp,DWORD PTR es:[eax+eax*1+0x1743400],0x50f86a8b
  44174d:	call   0x454cb9
  441752:	mov    ah,0xef
  441754:	add    eax,0x1aa0f785
  441759:	mov    esp,DWORD PTR [edx+0x20]
  44175c:	mov    eax,DWORD PTR [ebp-0x21]
  44175f:	es scas al,BYTE PTR es:[edi]
  441761:	or     al,0x87
  441763:	lods   eax,DWORD PTR ds:[esi]
  441764:	inc    esp
  441765:	in     al,dx
  441766:	lods   al,BYTE PTR ds:[esi]
  441767:	and    ch,0x8b
  44176a:	jb     0x441784
  44176c:	mov    eax,DWORD PTR [edi+eiz*4]
  44176f:	xor    bh,BYTE PTR [eax+ecx*1]
  441772:	fsubr  QWORD PTR [eax]
  441774:	mov    cl,BYTE PTR [ebp-0x39]
  441777:	mov    dl,0xc0
  441779:	add    al,0xae
  44177b:	push   0x62dbebf1
  441780:	ror    DWORD PTR [ebx-0x333d876e],0x73
  441787:	out    0xc5,eax
  441789:	int3   
  44178a:	imul   esp,edi,0xffffffc5
  44178d:	int3   
  44178e:	and    edi,0xffffffc5
  441791:	int3   
  441792:	loop   0x44173e
  441794:	in     eax,0x83
  441796:	xchg   ebx,eax
  441797:	cmp    ebp,ecx
  441799:	add    eax,0x89f71678
  44179e:	cli    
  44179f:	or     ecx,DWORD PTR [ebx-0x167ca0bb]
  4417a5:	sub    DWORD PTR [eax+0x16],esp
  4417a8:	test   DWORD PTR [ebx+0x2f730000],0x725f24a2
  4417b2:	add    DWORD PTR [eax-0x75],ebp
  4417b5:	xor    al,BYTE PTR [ecx+0x0]
  4417b8:	lods   al,BYTE PTR ds:[esi]
  4417b9:	push   0x403851e9
  4417be:	sbb    eax,0xa23474e8
  4417c3:	sub    BYTE PTR [edi],bl
  4417c5:	jb     0x4417c8
  4417c7:	push   0x37
  4417c9:	mov    al,BYTE PTR [ecx]
  4417cb:	push   0x4131eb
  4417d0:	adc    BYTE PTR [eax+0x29],al
  4417d3:	call   0x45cc4c4c
  4417d8:	pmaxsw mm7,QWORD PTR [esp+edi*8]
  4417dc:	aaa    
  4417dd:	xor    al,0x1
  4417df:	add    ah,bl
  4417e1:	sub    ecx,DWORD PTR [edx-0x3c4e14ab]
  4417e7:	add    DWORD PTR [esi+0x5a83f57f],ebp
  4417ed:	sbb    BYTE PTR [edx],cl
  4417ef:	jae    0x441807
  4417f1:	test   eax,0x28bcfc3c
  4417f6:	jl     0x441784
  4417f8:	xor    al,0x74
  4417fa:	add    DWORD PTR [ecx-0x54],edx
  4417fd:	jg     0x4417e8
  4417ff:	push   edx
  441800:	mov    al,0x3f
  441802:	sbb    eax,0x8a33f4e8
  441807:	dec    ebp
  441808:	mov    ds:0x538cfdab,eax
  44180d:	or     al,0x43
  44180f:	add    BYTE PTR [eax],al
  441811:	add    BYTE PTR [esp+eax*1-0xf151a75],bl
  441818:	(bad)
  44181b:	call   0xe8afe4e5
  441820:	(bad)
  441823:	call   0xa946e4ed
  441828:	in     eax,0xa1
  44182a:	mov    bh,0xc
  44182c:	inc    ebx
  44182d:	add    BYTE PTR [ecx],bl
  44182f:	test   eax,0x67bc3041
  441834:	or     DWORD PTR [esi],edi
  441836:	mov    esi,0x745d096c
  44183b:	call   0xe8afe505
  441840:	(bad)
  441843:	call   0xa9c6e50d
  441848:	in     eax,0x8b
  44184a:	jp     0x441874
  44184c:	push   ecx
  44184d:	mov    ebp,DWORD PTR [edx+0x2c]
  441850:	push   eax
  441851:	jmp    FWORD PTR [edx]
  441853:	push   eax
  441854:	jmp    0xc2bb4f9c
  441859:	int3   
  44185a:	repz out 0xc5,eax
  44185d:	int3   
  44185e:	jmp    0x441847
  441860:	(bad)
  441863:	call   0xa9c6e52d
  441868:	in     eax,0x83
  44186a:	shr    DWORD PTR [ebx],cl
  44186c:	imul   eax,DWORD PTR [eax],0x4d
  44186f:	xor    al,0x69
  441871:	fdiv   QWORD PTR [esp+esi*2]
  441874:	add    edi,edi
  441876:	add    BYTE PTR [eax],al
  441878:	and    cl,BYTE PTR [ecx+ebp*8+0x43]
  44187c:	aaa    
  44187d:	stos   DWORD PTR es:[edi],eax
  44187e:	cmp    al,0xf8
  441880:	dec    edi
  441881:	or     al,0x3
  441883:	inc    eax
  441884:	aaa    
  441885:	test   eax,0xc07f83c
  44188a:	mov    esp,0x8314a0ff
  44188f:	les    ebp,FWORD PTR [edi]
  441891:	stos   DWORD PTR es:[edi],eax
  441892:	cmp    al,0xfc
  441894:	mov    esp,0xbc511166
  441899:	jle    0x4418a0
  44189b:	push   edx
  44189c:	lods   al,BYTE PTR ds:[esi]
  44189d:	outs   dx,BYTE PTR ds:[esi]
  44189e:	or     DWORD PTR [eax+0x78],edx
  4418a1:	jle    0x441898
  4418a3:	mov    ebx,DWORD PTR [edx+0x76]
  4418a6:	ret    0x2cc
  4418a9:	test   eax,0x6e7851e5
  4418ae:	cmc    
  4418af:	add    BYTE PTR [edi],dh
  4418b1:	xor    al,0x1
  4418b3:	jmp    0x4418f3
  4418b5:	test   eax,0xf3b4fc3c
  4418ba:	add    BYTE PTR [ecx+0x4d8b17fa],cl
  4418c0:	cmp    ebx,DWORD PTR [eax+0x44]
  4418c3:	adc    BYTE PTR [ebx+esi*1+0x373f558a],ah
  4418ca:	dec    esp
  4418cb:	cld    
  4418cc:	xor    dl,cl
  4418ce:	add    ecx,DWORD PTR [ebx+0x4d02406a]
  4418d4:	adc    eax,DWORD PTR [edi+ebp*4+0x11]
  4418d8:	dec    esp
  4418d9:	imul   BYTE PTR [ebp+0x7]
  4418dc:	add    BYTE PTR [eax],al
  4418de:	mov    edi,0x37000135
  4418e3:	pop    ds
  4418e4:	(bad)  
  4418e5:	jmp    0x71d2:0x8bc14807
  4418ec:	ret    0xf3cc
  4418ef:	add    dh,al
  4418f1:	int3   
  4418f2:	jmp    0x4418f4
  4418f4:	(bad)  
  4418f5:	int3   
  4418f6:	add    eax,DWORD PTR [ecx]
  4418f8:	(bad)  
  4418f9:	int3   
  4418fa:	bound  edi,QWORD PTR [edi+0x341fb9e5]
  441900:	add    DWORD PTR [eax],eax
  441902:	push   ebx
  441903:	mov    edi,0xb4428908
  441908:	jmp    0xc2b55050
  44190d:	int3   
  44190e:	jae    0x441910
  441910:	(bad)  
  441911:	int3   
  441912:	imul   eax,DWORD PTR [eax],0xffffffc6
  441915:	int3   
  441916:	add    DWORD PTR [eax],0xffffffc6
  441919:	int3   
  44191a:	loop   0x4418da
  44191c:	in     eax,0x83
  44191e:	xchg   ebx,eax
  44191f:	and    al,0x8a
  441921:	inc    ebp
  441922:	das    
  441923:	mov    bh,0x79
  441925:	add    al,0x37
  441927:	inc    ebx
  441928:	jge    0x4418b2
  44192a:	aaa    
  44192b:	xor    al,0x1
  44192d:	mov    esi,edx
  44192f:	cmp    ecx,DWORD PTR [edx-0x1448ccaf]
  441935:	or     BYTE PTR [esi+0x1e],ah
  441938:	mov    DWORD PTR [ebp+0x43],edx
  44193b:	mov    edi,0xf4b4083c
  441940:	or     DWORD PTR [ecx+0x3f20000],ecx
  441946:	mov    edi,0x1343345
  44194b:	add    BYTE PTR [edi],dh
  44194d:	pop    ds
  44194e:	or     DWORD PTR [ebx-0x3e7cef8e],ecx
  441954:	ss mov ebp,0x68bcfc44
  44195a:	cmc    
  44195b:	cmp    esp,DWORD PTR [edx+0x8]
  44195e:	jae    0x4419a6
  441960:	lods   al,BYTE PTR ds:[esi]
  441961:	js     0x441958
  441963:	mov    ebp,DWORD PTR [edx+0x4]
  441966:	pop    es
  441967:	mov    bh,0x4b
  441969:	jne    0x44192b
  44196b:	cli    
  44196c:	cmp    esi,DWORD PTR [edi+0x466a03fb]
  441972:	mov    al,BYTE PTR [ebp-0x25]
  441975:	mov    esi,0xcb40f044
  44197a:	or     eax,0xf715b641
  44197f:	getsec 
  441981:	xor    al,0x88
  441983:	push   ebp
  441984:	mov    edi,0xbc083cbe
  441989:	add    BYTE PTR ds:0x4cbf3f03,0xf8
  441990:	lods   al,BYTE PTR ds:[esi]
  441991:	aaa    
  441992:	adc    BYTE PTR [ebx],al
  441994:	repnz and ecx,DWORD PTR [edx+0x4cbf3f4d]
  44199b:	or     al,0x34
  44199d:	and    eax,0xbc7f4d8a
  4419a2:	std    
  4419a3:	or     DWORD PTR [esp+ebx*8+0x558a],ecx
  4419aa:	aas    
  4419ab:	mov    edi,0x7634083c
  4419b0:	std    
  4419b1:	mov    dl,bh
  4419b3:	cmp    ebp,eax
  4419b5:	imul   ebx,DWORD PTR [eax+0x12],0xfffffff7
  4419b9:	mov    ebx,DWORD PTR [edx+0x70]
  4419bc:	ret    0xe2cc
  4419bf:	mov    esi,0x575383e5
  4419c4:	mov    al,BYTE PTR [ebp+0x2f]
  4419c7:	mov    ebp,0x7fbce43c
  4419cc:	fisttp QWORD PTR [ebx+0x51031882]
  4419d2:	arpl   WORD PTR [ebx+0x77ace84c],di
  4419d8:	jmp    0x1f8d968
  4419dd:	add    BYTE PTR [edi],dh
  4419df:	mov    ebx,0x8fb4f044
  4419e4:	icebp  
  4419e5:	add    BYTE PTR [eax],ch
  4419e7:	mov    eax,0x343700fa
  4419ec:	mov    dl,BYTE PTR [ebp+0x3f]
  4419ef:	xor    eax,0x67aef04c
  4419f4:	loope  0x441981
  4419f6:	jb     0x441a0c
  4419f8:	cmp    DWORD PTR [eax+0x27],0x34
  4419fc:	push   es
  4419fd:	test   dl,dl
  4419ff:	xor    al,0x1
  441a01:	add    BYTE PTR [ebp+0x34],cl
  441a04:	imul   eax,DWORD PTR [eax],0xffffffac
  441a07:	jg     0x4419ea
  441a09:	mov    ecx,DWORD PTR [edx]
  441a0b:	cmp    al,0x2
  441a0d:	push   ecx
  441a0e:	add    BYTE PTR [eax],al
  441a10:	cmp    esp,DWORD PTR [esi-0xa]
  441a13:	adc    eax,0x431c4f
  441a18:	scas   al,BYTE PTR es:[edi]
  441a19:	ja     0x441a10
  441a1b:	mov    edi,edx
  441a1d:	adc    eax,DWORD PTR [ebx+0x18883738]
  441a23:	mov    esi,edx
  441a25:	adc    ecx,DWORD PTR [ebx+0x10352f55]
  441a2b:	mov    DWORD PTR [edx],ecx
  441a2d:	or     BYTE PTR [ebx+0x44bd5745],cl
  441a33:	or     BYTE PTR [esp+edi*2],dh
  441a36:	adc    DWORD PTR [ecx+0x17eb1fea],ecx
  441a3c:	mov    esp,0xf28be167
  441a41:	cmp    eax,DWORD PTR [edx]
  441a43:	inc    edx
  441a44:	daa    
  441a45:	mov    ebx,0x7facf43c
  441a4a:	loope  0x4419d7
  441a4c:	mov    bh,BYTE PTR [edx+eax*1]
  441a4f:	adc    DWORD PTR [esi+0x7ac7e566],edi
  441a55:	or     al,0x2
  441a57:	add    BYTE PTR [edi],dh
  441a59:	xor    al,0x8a
  441a5b:	inc    ebp
  441a5c:	pop    ss
  441a5d:	mov    ch,0x79
  441a5f:	adc    BYTE PTR [edi],dh
  441a61:	mov    BYTE PTR [esi],al
  441a63:	mov    esi,DWORD PTR [edx+0x14]
  441a66:	cmp    DWORD PTR [ecx],0x37
  441a69:	mov    dh,bh
  441a6b:	(bad)  
  441a6c:	jp     0x441a7a
  441a6e:	add    DWORD PTR [eax],eax
  441a70:	aaa    
  441a71:	xor    al,0x8a
  441a73:	push   ebp
  441a74:	add    BYTE PTR [eax],al
  441a76:	jmp    0x441a2c
  441a78:	cmp    eax,DWORD PTR [eax]
  441a7a:	arpl   WORD PTR [ebx-0x4334ba76],dx
  441a80:	or     DWORD PTR [ecx+0x133d6],eax
  441a86:	mov    bh,0x87
  441a88:	adc    eax,0x8b08628b
  441a8d:	add    bl,BYTE PTR [edx+0x11]
  441a90:	idiv   edi
  441a92:	sub    BYTE PTR [edx+ecx*4+0x4d],ah
  441a96:	mov    ds:0x9ab5e962,eax
  441a9b:	adc    bh,dh
  441a9d:	cmp    DWORD PTR [ebx+0x3b],0xffffff88
  441aa1:	inc    ebp
  441aa2:	imul   ebx,DWORD PTR [esi+edx*1],0xffffff8b
  441aa6:	jmp    0x97e:0xac028b07
  441aad:	lea    ecx,[ebx]
  441aaf:	cmp    al,0x3
  441ab1:	push   edx
  441ab2:	mov    esp,0x4f50f576
  441ab7:	test   al,0xf4
  441ab9:	call   FWORD PTR [eax-0x4c]
  441abc:	mov    ebp,0xd576be08
  441ac1:	mov    edi,edx
  441ac3:	pop    ds
  441ac4:	mov    edx,DWORD PTR [ebp+0x63]
  441ac7:	mov    edx,0x7f28b10
  441acc:	add    eax,0x3b
  441acf:	mov    ebp,0x81bcf43c
  441ad4:	in     eax,0x83
  441ad6:	idiv   BYTE PTR [eax]
  441ad8:	mov    BYTE PTR [ebp+0x0],cl
  441adb:	add    BYTE PTR [ebx],cl
  441add:	sbb    al,0x8f
  441adf:	mov    ebp,DWORD PTR [edx+0x14]
  441ae2:	add    edx,0x23
  441ae5:	mov    ebp,0x3f0ee04c
  441aea:	idiv   bh
  441aec:	clc    
  441aed:	mov    ebx,0xf45ddc
  441af2:	(bad)  
  441af3:	int3   
  441af4:	cmp    BYTE PTR [ebx+0x3cd383e5],0x69
  441afb:	lock xor al,0x74
  441afe:	add    edi,edi
  441b00:	sub    al,BYTE PTR [ecx+ebp*8+0x43]
  441b04:	aaa    
  441b05:	mov    ebp,0x104ff83c
  441b0a:	add    eax,DWORD PTR [eax+0x37]
  441b0d:	mov    ebx,0x1c07f83c
  441b12:	cmp    ch,bh
  441b14:	test   al,0xf
  441b16:	add    esp,0x2f
  441b19:	mov    ebp,0x81acfc3c
  441b1e:	adc    DWORD PTR [ecx-0x44],edx
  441b21:	imul   eax,DWORD PTR ds:0x979bc52,0xf5698050
  441b2b:	mov    edx,DWORD PTR [edx-0x7c333d8f]
  441b31:	add    dh,al
  441b33:	int3   
  441b34:	add    bh,BYTE PTR [ebx+0x1cb3a1e5]
  441b3a:	inc    ebx
  441b3b:	add    BYTE PTR [ecx+0x34],dh
  441b3e:	imul   ecx,DWORD PTR [ebx-0x47d60000],0xbd3743e9
  441b48:	push   ecx
  441b49:	add    DWORD PTR [ebp+0x325089f3],eax
  441b4f:	jno    0x441b13
  441b51:	int3   
  441b52:	add    eax,DWORD PTR [eax]
  441b54:	(bad)  
  441b55:	int3   
  441b56:	cmp    BYTE PTR [ebx+0x401383e5],0xa0
  441b5d:	or     BYTE PTR [edi],0x73
  441b60:	add    DWORD PTR [ebx+0x3ec842e5],ecx
  441b66:	mov    esp,0xe58b3173
  441b6b:	mov    edx,0x7bac3ed3
  441b70:	add    eax,0x44bd058b
  441b75:	hlt    
  441b76:	mov    esp,0x6f8bed78
  441b7b:	inc    eax
  441b7c:	mov    BYTE PTR [ebp-0x21],cl
  441b7f:	mov    edx,0x68bef84c
  441b84:	cmc    
  441b85:	mov    eax,0x13436
  441b8a:	mov    edx,0xb4446df3
  441b8f:	nop
  441b90:	stc    
  441b91:	add    BYTE PTR [edx],ch
  441b93:	cmp    BYTE PTR [edx],dh
  441b95:	rcr    BYTE PTR [edi+ecx*2-0x4560b276],0x50
  441b9d:	sbb    BYTE PTR [ecx+ebp*2+0x9],bl
  441ba1:	jne    0x441bd1
  441ba3:	mov    ebx,0xf83c
  441ba8:	mov    esp,0xef890580
  441bad:	das    
  441bae:	mov    dl,BYTE PTR [ebp+0x7f]
  441bb1:	mov    edx,0x71be103c
  441bb6:	sbb    DWORD PTR [eax+0x13436],edi
  441bbc:	dec    esp
  441bbd:	sub    ecx,DWORD PTR [edx+0x10ba5f4d]
  441bc3:	mov    edx,ebp
  441bc5:	or     ecx,DWORD PTR [ebx+0x3c4a4f45]
  441bcb:	cld    
  441bcc:	retf   0x3237
  441bcf:	ror    BYTE PTR [edi+esi*1-0x16],0xb3
  441bd4:	fs hlt 
  441bd6:	mov    ah,ch
  441bd8:	mov    dh,cl
  441bda:	(bad)
  441bdd:	add    dh,al
  441bdf:	int3   
  441be0:	jmp    0x441be2
  441be2:	(bad)  
  441be3:	int3   
  441be4:	add    eax,DWORD PTR [ecx]
  441be6:	(bad)  
  441be7:	int3   
  441be8:	bound  edi,QWORD PTR [ecx+0x2d1383e5]
  441bee:	mov    esi,0x3134ff45
  441bf3:	add    BYTE PTR [edi],dh
  441bf5:	pushf  
  441bf6:	std    
  441bf7:	add    esi,DWORD PTR [edi+0x34]
  441bfa:	mov    al,ds:0x171cf6c
  441bff:	push   eax
  441c00:	iret   
  441c01:	popa   
  441c02:	cmc    
  441c03:	call   eax
  441c05:	mov    cl,0xbd
  441c07:	or     BYTE PTR [esi+0x6aed77],bh
  441c0d:	add    BYTE PTR [edi-0x47],dh
  441c10:	inc    esp
  441c11:	clc    
  441c12:	mov    cx,0x4c0c
  441c16:	lahf   
  441c17:	jno    0x441c1a
  441c19:	mov    esi,ebp
  441c1b:	arpl   WORD PTR [ecx+0x6a],dx
  441c1e:	aaa    
  441c1f:	or     eax,0x78d4f44d
  441c24:	jmp    0x34f5536c
  441c29:	inc    esp
  441c2a:	lahf   
  441c2b:	jno    0x441c2e
  441c2d:	add    BYTE PTR [edx],cl
  441c2f:	xor    eax,0x343702b9
  441c34:	add    ebx,ebp
  441c36:	fnstsw WORD PTR [eax+0x74340004]
  441c3c:	add    DWORD PTR [ecx+0x6a03f2],ecx
  441c42:	push   ecx
  441c43:	xor    DWORD PTR [ecx],eax
  441c45:	push   0x413137
  441c4a:	mov    esp,0xf4e83d27
  441c4f:	xor    eax,DWORD PTR [eax+0x13137c2]
  441c55:	add    BYTE PTR [ebp+0x28fe981c],al
  441c5b:	or     eax,0xcc33c483
  441c60:	add    DWORD PTR [ebx],eax
  441c62:	ja     0x441c98
  441c64:	and    al,0x0
  441c66:	xor    al,0x34
  441c68:	add    DWORD PTR [ebx+0x43e9783a],ecx
  441c6e:	aaa    
  441c6f:	pop    ecx
  441c70:	leave  
  441c71:	mov    DWORD PTR [eax],eax
  441c73:	add    BYTE PTR [edx],ch
  441c75:	mov    cl,ch
  441c77:	inc    ebx
  441c78:	aaa    
  441c79:	mov    ecx,0x70df740c
  441c7e:	add    DWORD PTR [edx-0x6a],edx
  441c81:	ja     0x441c6c
  441c83:	inc    ebx
  441c84:	aaa    
  441c85:	mov    cl,BYTE PTR fs:[ebp-0x39]
  441c89:	(bad)  
  441c8a:	jmp    0xf750e82c
  441c8f:	cmp    ebx,0x3f
  441c92:	mov    dl,BYTE PTR ds:0x431c73
  441c98:	xor    al,0x67
  441c9a:	or     DWORD PTR [ecx+0x558b1c02],ecx
  441ca0:	(bad)  
  441ca1:	or     al,0xe4
  441ca3:	mov    edx,DWORD PTR [edx-0x7c333d92]
  441ca9:	inc    ebp
  441cab:	int3   
  441cac:	loop   0x441c66
  441cae:	in     eax,0x8b
  441cb0:	cli    
  441cb1:	cmp    edi,DWORD PTR [edx]
  441cb3:	inc    ebp
  441cb4:	sub    eax,DWORD PTR [ecx+0x3bfa8afe]
  441cba:	jmp    0x3345:0x8a305c05
  441cc1:	outs   dx,DWORD PTR ds:[esi]
  441cc2:	ret    0x6bcc
  441cc5:	inc    ebp
  441cc7:	int3   
  441cc8:	cmp    edi,0xffffffc5
  441ccb:	int3   
  441ccc:	loop   0x441c86
  441cce:	in     eax,0x83
  441cd0:	push   ebx
  441cd1:	pop    edi
  441cd2:	mov    esi,0x11333b45
  441cd7:	add    al,0x0
  441cd9:	add    BYTE PTR [edi],dh
  441cdb:	mov    edi,0x71be083c
  441ce0:	(bad)  [ebx+0x558aec72]
  441ce6:	das    
  441ce7:	aaa    
  441ce8:	push   eax
  441ce9:	cmp    al,0xbe
  441ceb:	popa   
  441cec:	loope  0x441c79
  441cee:	jb     0x441d04
  441cf0:	pop    es
  441cf1:	mov    bh,0x6f
  441cf3:	and    BYTE PTR [edx+0x3dba1755],cl
  441cf9:	or     cl,BYTE PTR [edi-0x43]
  441cfc:	cmp    al,0xe8
  441cfe:	pop    edi
  441cff:	and    ch,bh
  441d01:	aas    
  441d02:	aaa    
  441d03:	mov    edi,0x77cf6c04
  441d08:	add    DWORD PTR [ecx-0x21],edx
  441d0b:	jnp    0x441d07
  441d0d:	dec    eax
  441d0f:	mov    bh,0xbd
  441d11:	or     BYTE PTR [esi+0x776af171],ch
  441d17:	pushf  
  441d18:	add    DWORD PTR [eax],esi
  441d1a:	aaa    
  441d1b:	xor    al,0x69
  441d1d:	add    BYTE PTR [edi+0x30],al
  441d20:	add    DWORD PTR [edx+0x37],ebp
  441d23:	or     ecx,DWORD PTR [ebp-0x10]
  441d26:	scas   al,BYTE PTR es:[edi]
  441d27:	jno    0x441d06
  441d29:	mov    ebp,edx
  441d2b:	adc    ecx,DWORD PTR [ebx-0x759c1cbe]
  441d31:	dec    ebp
  441d32:	das    
  441d33:	mov    dl,BYTE PTR gs:[ebp-0x6d]
  441d37:	jmpw   0x8ffc
  441d3b:	or     esi,edi
  441d3d:	add    DWORD PTR [eax],0x0
  441d40:	jae    0x441d7a
  441d42:	mov    esi,0x1346b45
  441d47:	add    BYTE PTR [edi],dh
  441d49:	pop    ds
  441d4a:	or     DWORD PTR [ebx-0x3f7d0006],ecx
  441d50:	ss mov ebp,0x79acf43c
  441d56:	loope  0x441d67
  441d58:	and    BYTE PTR [ebp-0x1],0x38
  441d5c:	mov    al,BYTE PTR [eax]
  441d5e:	jae    0x441db9
  441d60:	mov    esp,0x9f83e970
  441d65:	and    BYTE PTR [ecx],al
  441d67:	je     0x441ddb
  441d69:	mov    edi,0x8cb4e844
  441d6e:	adc    DWORD PTR [eax],eax
  441d70:	or     DWORD PTR [eax-0x76],0x55
  441d74:	movsx  eax,WORD PTR [ebx+0x10]
  441d78:	lods   al,BYTE PTR ds:[esi]
  441d79:	js     0x441d5c
  441d7b:	mov    eax,DWORD PTR [esi+0x47448448]
  441d81:	or     ecx,DWORD PTR [ebx-0x2cb928b3]
  441d87:	mul    DWORD PTR [esi+0x48]
  441d8a:	mov    dl,BYTE PTR [ebp-0x29]
  441d8d:	cmp    ah,BYTE PTR [esi-0x759bf4be]
  441d93:	inc    ebp
  441d94:	iret   
  441d95:	mov    esi,0x7c340844
  441d9a:	or     eax,0xe960bc51
  441d9f:	mov    esi,edx
  441da1:	lsl    eax,WORD PTR [edx+0x0]
  441da5:	add    BYTE PTR [ebx],dh
  441da7:	fs jmp 0xf74eb802
  441dad:	cmp    DWORD PTR [ebx+0x37],0xffffff8a
  441db1:	dec    ebp
  441db2:	lahf   
  441db3:	mov    dh,0xc0
  441db5:	sub    BYTE PTR [esi-0x5a141688],ch
  441dbb:	mov    esi,0x1c05e44c
  441dc0:	or     ah,bh
  441dc2:	push   0x3bc4830a
  441dc7:	pushf  
  441dc8:	sbb    eax,0xa033f704
  441dcd:	ins    BYTE PTR es:[edi],dx
  441dce:	pop    edi
  441dcf:	jbe    0x441dd2
  441dd1:	push   eax
  441dd2:	pop    edi
  441dd3:	mov    esi,0xb640fffb
  441dd8:	mov    ebp,0xd570ae08
  441ddd:	xor    DWORD PTR [edx-0x64],0xffffffe9
  441de1:	inc    ebx
  441de2:	aaa    
  441de3:	xor    al,0x6c
  441de5:	or     ch,BYTE PTR [edi+esi*1+0x3474e861]
  441dec:	push   eax
  441ded:	jmp    FWORD PTR [edx-0x18]
  441df0:	cmp    BYTE PTR ds:0x431c9f,0x37
  441df7:	jg     0x441e0e
  441df9:	push   0x77
  441dfb:	pushf  
  441dfc:	add    DWORD PTR [eax],esi
  441dfe:	aaa    
  441dff:	xor    al,0x8a
  441e01:	push   ebp
  441e02:	jmp    0x441e6a
  441e04:	mov    al,BYTE PTR [ebp-0x29]
  441e07:	mov    ebp,0x3449
  441e0c:	xchg   BYTE PTR [ecx],cl
  441e0e:	dec    ebp
  441e0f:	lock xchg esp,eax
  441e11:	jo     0x441dfc
  441e13:	inc    ebx
  441e14:	aaa    
  441e15:	sbb    eax,0x9c776a0d
  441e1a:	add    DWORD PTR [eax],esi
  441e1c:	aaa    
  441e1d:	xor    al,0x8a
  441e1f:	push   ebp
  441e20:	mov    bl,0x66
  441e22:	imul   eax,DWORD PTR [eax],0xffffffa8
  441e25:	pop    edi
  441e26:	icebp  
  441e27:	mov    ds:0x431bfb,eax
  441e2c:	mov    ah,0x47
  441e2e:	cmp    eax,0x133f4e8
  441e33:	jne    0x441e57
  441e35:	sahf   
  441e36:	inc    ecx
  441e37:	push   0x14437
  441e3c:	lods   al,BYTE PTR ds:[esi]
  441e3d:	outs   dx,DWORD PTR ds:[esi]
  441e3e:	cmc    
  441e3f:	push   eax
  441e40:	fnsave [ebx]
  441e42:	not    BYTE PTR [ebp+0x67]
  441e45:	aad    0x3d
  441e47:	call   0x4dce5240
  441e4c:	push   ebx
  441e4d:	mov    ebx,0x5fbcd844
  441e52:	(bad)  [ebx+0x4202ebf2]
  441e58:	add    edi,DWORD PTR [ebx+0x77ace03c]
  441e5e:	loope  0x441deb
  441e60:	xchg   BYTE PTR [ebx+edx*2-0x75],ah
  441e64:	jb     0x441e76
  441e66:	push   edx
  441e67:	mov    esi,DWORD PTR [edx]
  441e69:	jo     0x441e54
  441e6b:	inc    ebx
  441e6c:	aaa    
  441e6d:	arpl   cx,bp
  441e6f:	xchg   ecx,eax
  441e70:	add    BYTE PTR [eax],al
  441e72:	adc    ecx,DWORD PTR [ecx]
  441e74:	test   DWORD PTR [ebx+0x558a37f3],0xa4bbb517
  441e7e:	aaa    
  441e7f:	xor    al,0x1
  441e81:	add    BYTE PTR [ebx+0x4b],ch
  441e84:	mov    al,BYTE PTR [ebp-0x29]
  441e87:	mov    esp,0xbc34d844
  441e8c:	mov    eax,ds:0x88343700
  441e91:	dec    ebp
  441e92:	jecxz  0x441e50
  441e94:	dec    esp
  441e95:	loopne 0x441e2d
  441e97:	outs   dx,DWORD PTR ds:[esi]
  441e98:	jmp    0x43a155e0
  441e9d:	xor    al,0x94
  441e9f:	jg     0x441e8a
  441ea1:	inc    ebx
  441ea2:	aaa    
  441ea3:	mov    ebp,0x749f7404
  441ea8:	add    DWORD PTR [ecx-0x54],edx
  441eab:	push   ds
  441eac:	cmp    eax,0x5333f4e8
  441eb1:	mov    edi,edx
  441eb3:	pop    ss
  441eb4:	push   edx
  441eb5:	call   0x3b2cc5
  441eba:	mov    ah,0xef
  441ebc:	add    eax,0x8b13ea8b
  441ec1:	adc    eax,0x431bfb
  441ec6:	xor    al,0x63
  441ec8:	sub    DWORD PTR [ecx+0x43e9b04a],ecx
  441ece:	aaa    
  441ecf:	mov    ch,0x34
  441ed1:	push   0x1745f
  441ed6:	add    BYTE PTR [eax],al
  441ed8:	ret    0xa057
  441edb:	inc    esp
  441edc:	dec    edi
  441edd:	je     0x441ee0
  441edf:	push   eax
  441ee0:	lods   al,BYTE PTR ds:[esi]
  441ee1:	ss jge 0x441ecc
  441ee4:	je     0x441f1a
  441ee6:	push   eax
  441ee7:	mov    eax,DWORD PTR [edx-0x6c]
  441eea:	jmp    0xe9a65632
  441eef:	jne    0x441f0c
  441ef1:	or     bh,dh
  441ef3:	cmp    ebx,0x38
  441ef6:	mov    al,ds:0x1741f44
  441efb:	push   eax
  441efc:	pshufw mm7,mm0,0xff
  441f00:	clc    
  441f01:	mov    bl,0xbd
  441f03:	add    al,0xdc
  441f05:	xchg   esp,eax
  441f06:	imul   esi,DWORD PTR [ebx+esi*1],0x328b0174
  441f0d:	cwde   
  441f0e:	jmp    0xe9a95656
  441f13:	push   ecx
  441f14:	into   
  441f15:	pop    es
  441f16:	test   DWORD PTR [ebx+0x45883cf3],0x440cbbeb
  441f20:	iret   
  441f21:	jae    0x441f24
  441f23:	push   edx
  441f24:	mov    esp,0x3a8be171
  441f29:	jo     0x441f14
  441f2b:	inc    ebx
  441f2c:	aaa    
  441f2d:	xor    ecx,DWORD PTR [ecx+0x28]
  441f30:	push   es
  441f31:	mov    ebx,0x739f600c
  441f36:	add    DWORD PTR [edx-0x61],edx
  441f39:	pop    ebx
  441f3a:	cmc    
  441f3b:	inc    DWORD PTR [eax]
  441f3d:	add    BYTE PTR [eax-0x29f3424d],al
  441f43:	xchg   esp,eax
  441f44:	jmp    0xc175568c
  441f49:	in     eax,0x34
  441f4b:	xor    al,0xa2
  441f4d:	mov    WORD PTR [edi+0x73],cs
  441f50:	add    DWORD PTR [ebp+0x6a510bea],ecx
  441f56:	neg    DWORD PTR [ecx-0x47dd7501]
  441f5c:	jmp    0xf6a656a4
  441f61:	push   ebp
  441f62:	arpl   WORD PTR [esp+eiz*8],bx
  441f65:	sti    
  441f66:	xor    BYTE PTR [edi],al
  441f68:	mov    edx,0x1343701
  441f6d:	mov    ebx,DWORD PTR [edx]
  441f6f:	imul   eax,ebx,0xc5f83704
  441f75:	int3   
  441f76:	add    edi,eax
  441f78:	(bad)
  441f7b:	mov    ebx,0x3c7a8be5
  441f80:	mov    al,BYTE PTR [eax-0x5]
  441f83:	push   0xf803ccc2
  441f88:	(bad)
  441f8b:	mov    ebx,0x5f8953e5
  441f90:	mov    bh,BYTE PTR ds:0x431c87
  441f96:	mov    esp,0x74e85528
  441f9b:	xor    al,0x8a
  441f9d:	xor    eax,0x431c6f
  441fa2:	add    BYTE PTR [eax],al
  441fa4:	pop    eax
  441fa5:	pop    dx
  441fa7:	pop    ebp
  441fa8:	je     0x441fa1
  441faa:	(bad)
  441fad:	mov    ebx,0x700f51e5
  441fb2:	std    
  441fb3:	aas    
  441fb4:	aaa    
  441fb5:	aad    0x65
  441fb7:	call   0xe89553b0
  441fbc:	fisttp DWORD PTR [ebx]
  441fbe:	idiv   edi
  441fc0:	mov    ah,0xef
  441fc2:	or     DWORD PTR [ecx+0x4d8b07f2],ecx
  441fc8:	aas    
  441fc9:	imul   eax,DWORD PTR gs:[eax],0xffffffbc
  441fcd:	and    BYTE PTR [ecx+0x5333f4e8],cl
  441fd3:	inc    DWORD PTR [edx]
  441fd5:	or     BYTE PTR [ebx-0x3a0d0d1b],cl
  441fdb:	int3   
  441fdc:	loop   0x441f98
  441fde:	in     eax,0x83
  441fe0:	push   ebx
  441fe1:	dec    edi
  441fe2:	mov    esi,0x1333f45
  441fe7:	add    BYTE PTR [edi],dh
  441fe9:	in     eax,dx
  441fea:	cmp    al,0xdc
  441fec:	scas   eax,DWORD PTR es:[edi]
  441fed:	xor    al,0x1
  441fef:	add    al,bh
  441ff1:	outs   dx,DWORD PTR ds:[esi]
  441ff2:	in     eax,dx
  441ff3:	add    DWORD PTR [edi],esi
  441ff5:	xor    al,0x1
  441ff7:	(bad)  
  441ff8:	jp     0x442002
  441ffa:	add    al,BYTE PTR [eax]
  441ffc:	aaa    
  441ffd:	xor    al,0xbe
  441fff:	inc    ebp
  442000:	sbb    esi,DWORD PTR ds:0xb9370001
  442006:	inc    esp
  442007:	or     BYTE PTR [eax],al
  442009:	add    BYTE PTR [esi+0x74e86137],bh
  44200f:	xor    al,0xe9
  442011:	test   eax,0xa1f705e8
  442016:	push   edi
  442017:	sbb    al,0x43
  442019:	add    BYTE PTR [edx],bl
  44201b:	add    eax,0x803700f7
  442020:	add    eax,0xe99c3ac7
  442025:	inc    ebx
  442026:	aaa    
  442027:	xor    al,0x1
  442029:	add    BYTE PTR [edi],dh
  44202b:	sbb    DWORD PTR [edi+eax*8],ecx
  44202e:	xor    bl,BYTE PTR [ecx+ebp*8+0x1333743]
  442035:	add    BYTE PTR [edi],dh
  442037:	mov    cl,0x34
  442039:	pusha  
  44203a:	lahf   
  44203b:	jno    0x44203e
  44203d:	add    BYTE PTR [edx],al
  44203f:	cmp    bh,BYTE PTR [esi+0x431c0f05]
  442045:	add    BYTE PTR [edi],dh
  442047:	xor    al,0x1
  442049:	add    BYTE PTR [edi+eax*2+0x33f4e869],dh
  442050:	add    DWORD PTR [ebp+0x32],esi
  442053:	call   0x43e9:0x4442ff01
  44205a:	aaa    
  44205b:	shl    DWORD PTR [ecx-0x18],1
  44205e:	hlt    
  44205f:	xor    ecx,DWORD PTR [edx+0x431bd70d]
  442065:	add    BYTE PTR [esi+0x4a8be977],ch
  44206b:	xchg   esp,eax
  44206c:	jmp    0x374420b4
  442071:	mov    ecx,0x7234e83c
  442076:	xor    eax,0x8b1c7289
  44207b:	dec    ebp
  44207c:	pop    ds
  44207d:	mov    ebx,0x711f4c04
  442082:	add    DWORD PTR [eax+0x67],ebp
  442085:	xor    BYTE PTR [ecx+0x0],al
  442088:	clc    
  442089:	push   ds
  44208a:	xor    eax,ebp
  44208c:	je     0x4420c2
  44208e:	mov    ds:0x170df6c,al
  442093:	(bad)  
  442094:	cmp    cl,BYTE PTR [eax+0x7f3743e9]
  44209a:	std    
  44209b:	aas    
  44209c:	aaa    
  44209d:	pushf  
  44209e:	popa   
  44209f:	add    al,0x77
  4420a1:	xor    al,0x8a
  4420a3:	adc    eax,0x431c53
  4420a8:	gs sbb al,0xc4
  4420ab:	div    DWORD PTR [eax+0x3fc48304]
  4420b1:	sar    DWORD PTR [ecx-0x18],1
  4420b4:	hlt    
  4420b5:	xor    esi,esi
  4420b7:	adc    eax,0x431c1f
  4420bc:	aam    0xbb
  4420be:	jmp    0x76175806
  4420c3:	call   0xe89554bc
  4420c8:	ret    
  4420c9:	add    eax,0xefb4fff7
  4420ce:	std    
  4420cf:	mov    dl,dh
  4420d1:	add    ecx,DWORD PTR [ebx+0x6700004d]
  4420d7:	(bad)  
  4420d8:	jmp    0xf7487ab2
  4420dd:	cmp    DWORD PTR [ebx+0x2f],0xffffffa2
  4420e1:	fs pop edi
  4420e3:	jo     0x4420e6
  4420e5:	mov    ebp,edx
  4420e7:	add    edx,DWORD PTR [edx+ebp*2+0x37]
  4420eb:	rcr    DWORD PTR [ebp-0x18],cl
  4420ee:	je     0x442124
  4420f0:	push   ecx
  4420f1:	call   0x3b2cc1
  4420f6:	mov    ah,0xf8
  4420f8:	add    eax,0x89046a8b
  4420fd:	dec    ebp
  4420fe:	pop    ss
  4420ff:	mov    al,0x4c
  442101:	cld    
  442102:	dec    esp
  442103:	imul   esi,ecx,0x3caf5d73
  442109:	loopne 0x442172
  44210b:	scas   eax,DWORD PTR es:[edi]
  44210c:	inc    esp
  44210d:	fadd   QWORD PTR [esi-0x170457f4]
  442113:	add    eax,DWORD PTR [ebx+0x71d72fc4]
  442119:	call   0x15ce5592
  44211e:	inc    edi
  44211f:	or     al,0x43
  442121:	add    BYTE PTR [ebp-0x2b],ah
  442124:	jne    0x44210e
  442126:	je     0x44215c
  442128:	add    al,BYTE PTR [ebp-0x2d]
  44212b:	mov    cl,BYTE PTR fs:0x430c1b
  442132:	xor    al,0x71
  442134:	cmc    
  442135:	push   ecx
  442136:	(bad)  
  442137:	jmp    0x442131
  442139:	inc    DWORD PTR [eax]
  44213b:	add    BYTE PTR [eax-0x43f34249],bl
  442141:	imul   ebp,ebp,0x2dfe203
  442147:	push   ebp
  442148:	fwait
  442149:	lods   eax,DWORD PTR ds:[esi]
  44214a:	dec    esp
  44214b:	in     al,0xac
  44214d:	jns    0x442144
  44214f:	add    edi,edx
  442151:	fisttp WORD PTR [eax+0x44af6b45]
  442157:	loopne 0x442165
  442159:	xor    DWORD PTR [ecx-0x18],esi
  44215c:	hlt    
  44215d:	xor    ecx,DWORD PTR [eax-0x67f0a8b3]
  442163:	(bad)  
  442164:	repnz sti 
  442166:	add    DWORD PTR [eax],eax
  442168:	aaa    
  442169:	xor    al,0xea
  44216b:	or     DWORD PTR [ecx+ebp*2+0x37f583f9],ebp
  442172:	mov    BYTE PTR [ebp+0x2f],dl
  442175:	scas   eax,DWORD PTR es:[edi]
  442176:	cmp    al,0xf8
  442178:	pop    esp
  442179:	jns    0x44216c
  44217b:	jae    0x4421dc
  44217d:	scas   eax,DWORD PTR es:[edi]
  44217e:	add    al,0x64
  442180:	pop    ds
  442181:	ja     0x442184
  442183:	add    edi,DWORD PTR [edx-0x4]
  442186:	mov    dl,BYTE PTR [ecx]
  442188:	xor    al,0x69
  44218a:	stc    
  44218b:	mov    eax,ds:0x430c93
  442190:	xor    al,0x79
  442192:	stc    
  442193:	mov    DWORD PTR [edi-0x51],eax
  442196:	inc    esp
  442197:	clc    
  442198:	mov    dh,0xf4
  44219a:	call   0x8a7858a2
  44219f:	adc    eax,0xc5b0000
  4421a4:	inc    ebx
  4421a5:	add    BYTE PTR [ecx+ebp*2],dh
  4421a8:	stc    
  4421a9:	xor    ebp,DWORD PTR ds:0x74e85dd5
  4421af:	xor    al,0x2
  4421b1:	inc    ebp
  4421b2:	scas   eax,DWORD PTR es:[edi]
  4421b3:	lods   al,BYTE PTR ds:[esi]
  4421b4:	or     ebx,ebp
  4421b6:	loopne 0x442164
  4421b8:	and    al,0x54
  4421ba:	(bad)  
  4421bb:	jbe    0x4421be
  4421bd:	mov    DWORD PTR [edx+0x64],ebx
  4421c0:	jmp    0xc88b5908
  4421c5:	mov    DWORD PTR [edx+0x6c],eax
  4421c8:	jmp    0xc88b5910
  4421cd:	mov    DWORD PTR [edx],ebx
  4421cf:	pusha  
  4421d0:	jmp    0x48505918
  4421d5:	imul   DWORD PTR [eax+0x2]
  4421d8:	test   DWORD PTR ds:0x431a80,ecx
  4421de:	scas   al,BYTE PTR es:[edi]
  4421df:	jo     0x4421da
  4421e1:	mov    ecx,0x413737
  4421e6:	mov    dh,0xc
  4421e8:	add    al,BYTE PTR [ebx]
  4421ea:	aaa    
  4421eb:	xor    al,0x8a
  4421ed:	push   ebp
  4421ee:	aas    
  4421ef:	dec    esi
  4421f0:	ror    BYTE PTR [ecx+0x43e95c4a],1
  4421f6:	aaa    
  4421f7:	rcr    DWORD PTR [ecx-0x18],cl
  4421fa:	je     0x442230
  4421fc:	push   ecx
  4421fd:	call   0x3b2035
  442202:	mov    ah,0xf8
  442204:	std    
  442205:	mov    al,BYTE PTR [eax]
  442207:	add    BYTE PTR [edx],bh
  442209:	cwde   
  44220a:	jmp    0xe9a75952
  44220f:	aad    0xfd
  442211:	add    edi,esi
  442213:	test   edi,esi
  442215:	xchg   ebp,edi
  442217:	xor    dh,bh
  442219:	or     eax,0x681a8b2c
  44221e:	jmp    0xbdf95966
  442223:	add    al,0xb4
  442225:	aas    
  442226:	imul   ebp,eax,0x74013474
  44222c:	sar    DWORD PTR cs:0x883474e8,cl
  442233:	inc    esp
  442234:	pop    ebx
  442235:	cmp    cl,ch
  442237:	pop    ebp
  442238:	stos   BYTE PTR es:[edi],al
  442239:	add    edi,esi
  44223b:	mov    ecx,DWORD PTR [edx-0x48]
  44223e:	jmp    0xc2aa5986
  442243:	xor    esi,DWORD PTR [edi-0x53]
  442246:	fcomp  QWORD PTR [ebp+0x74]
  442249:	(bad)
  44224d:	xor    al,0x1
  44224f:	add    BYTE PTR [edi],dh
  442251:	xor    al,0x1
  442253:	add    BYTE PTR [edi],dh
  442255:	xor    al,0x1
  442257:	add    BYTE PTR [edi],dh
  442259:	xor    al,0x1
  44225b:	add    BYTE PTR [edi],dh
  44225d:	xor    al,0x1
  44225f:	add    BYTE PTR [edi],dh
  442261:	xor    al,0x1
  442263:	add    BYTE PTR [edi],dh
  442265:	xor    al,0x1
  442267:	add    BYTE PTR [edi],dh
  442269:	xor    al,0x1
  44226b:	add    BYTE PTR [eax],al
  44226d:	add    BYTE PTR [edi],dh
  44226f:	xor    al,0x1
  442271:	add    BYTE PTR [edi],dh
  442273:	xor    al,0x1
  442275:	add    BYTE PTR [edi],dh
  442277:	xor    al,0x1
  442279:	add    BYTE PTR [edi],dh
  44227b:	xor    al,0x1
  44227d:	add    BYTE PTR [edi],dh
  44227f:	xor    al,0x1
  442281:	add    BYTE PTR [edi],dh
  442283:	xor    al,0x1
  442285:	add    BYTE PTR [edi],dh
  442287:	xor    al,0x1
  442289:	add    BYTE PTR [edi],dh
  44228b:	xor    al,0x1
  44228d:	add    BYTE PTR [edi],dh
  44228f:	xor    al,0x1
  442291:	add    BYTE PTR [edi],dh
  442293:	xor    al,0x1
  442295:	add    BYTE PTR [edi],dh
  442297:	xor    al,0x1
  442299:	add    BYTE PTR [edi],dh
  44229b:	xor    al,0x1
  44229d:	add    BYTE PTR [edi],dh
  44229f:	xor    al,0x1
  4422a1:	add    BYTE PTR [edi],dh
  4422a3:	xor    al,0x1
  4422a5:	add    BYTE PTR [edi],dh
  4422a7:	xor    al,0x1
  4422a9:	add    BYTE PTR [edi],dh
  4422ab:	xor    al,0x1
  4422ad:	add    BYTE PTR [edi],dh
  4422af:	xor    al,0x1
  4422b1:	add    BYTE PTR [edi],dh
  4422b3:	xor    al,0x1
  4422b5:	add    BYTE PTR [edi],dh
  4422b7:	xor    al,0x1
  4422b9:	add    BYTE PTR [edi],dh
  4422bb:	xor    al,0x1
  4422bd:	add    BYTE PTR [edi],dh
  4422bf:	xor    al,0x1
  4422c1:	add    BYTE PTR [edi],dh
  4422c3:	xor    al,0x1
  4422c5:	add    BYTE PTR [edi],dh
  4422c7:	xor    al,0x1
  4422c9:	add    BYTE PTR [edi],dh
  4422cb:	xor    al,0x1
  4422cd:	add    BYTE PTR [edi],dh
  4422cf:	xor    al,0x1
  4422d1:	add    BYTE PTR [eax],al
  4422d3:	add    BYTE PTR [edi],dh
  4422d5:	xor    al,0x1
  4422d7:	add    BYTE PTR [edi],dh
  4422d9:	xor    al,0x1
  4422db:	add    BYTE PTR [edi],dh
  4422dd:	xor    al,0x1
  4422df:	add    BYTE PTR [edi],dh
  4422e1:	xor    al,0x1
  4422e3:	add    BYTE PTR [edi],dh
  4422e5:	xor    al,0x1
  4422e7:	add    BYTE PTR [edi],dh
  4422e9:	xor    al,0x1
  4422eb:	add    BYTE PTR [edi],dh
  4422ed:	xor    al,0x1
  4422ef:	add    BYTE PTR [edi],dh
  4422f1:	xor    al,0x1
  4422f3:	add    BYTE PTR [edi],dh
  4422f5:	xor    al,0x1
  4422f7:	add    BYTE PTR [edi],dh
  4422f9:	xor    al,0x1
  4422fb:	add    BYTE PTR [edi],dh
  4422fd:	xor    al,0x1
  4422ff:	add    BYTE PTR [edi],dh
  442301:	xor    al,0x1
  442303:	add    BYTE PTR [edi],dh
  442305:	xor    al,0x1
  442307:	add    BYTE PTR [edi],dh
  442309:	xor    al,0x1
  44230b:	add    BYTE PTR [edi],dh
  44230d:	xor    al,0x1
  44230f:	add    BYTE PTR [edi],dh
  442311:	xor    al,0x1
  442313:	add    BYTE PTR [edi],dh
  442315:	xor    al,0x1
  442317:	add    BYTE PTR [edi],dh
  442319:	xor    al,0x1
  44231b:	add    BYTE PTR [edi],dh
  44231d:	xor    al,0x1
  44231f:	add    BYTE PTR [edi],dh
  442321:	xor    al,0x1
  442323:	add    BYTE PTR [edi],dh
  442325:	xor    al,0x1
  442327:	add    BYTE PTR [edi],dh
  442329:	xor    al,0x1
  44232b:	add    BYTE PTR [eax],al
  44232d:	add    al,0x0
  44232f:	add    BYTE PTR [edi],dh
  442331:	xor    al,0x1
  442333:	add    BYTE PTR [edi],bl
  442335:	xor    al,0x1
  442337:	add    BYTE PTR [ebx-0x34cc6ef9],ch
  44233d:	pop    es
  44233e:	cdq    
  44233f:	xor    ecx,ebx
  442341:	pop    es
  442342:	mov    eax,ds:0xa907db33
  442347:	xor    esi,DWORD PTR [edi]
  442349:	in     al,0x2
  44234b:	add    BYTE PTR [edi+0x34],bl
  44234e:	add    DWORD PTR [eax],eax
  442350:	in     al,0x8
  442352:	mov    edx,0xcb09773d
  442357:	cmp    eax,0x3dd90968
  44235c:	xchg   ecx,eax
  44235d:	or     DWORD PTR [edx],eax
  44235f:	cmp    DWORD PTR ds:[edx],ecx
  442362:	sbb    DWORD PTR [esi],edi
  442364:	sub    ecx,DWORD PTR [edx]
  442366:	pop    esp
  442367:	fmul   QWORD PTR ds:[ecx]
  44236a:	cmp    BYTE PTR [esi],0xbe
  44236d:	or     cl,BYTE PTR [edi+edi*1]
  442370:	aaa    
  442371:	aam    0x2
  442373:	add    BYTE PTR [ebx+0x34],ah
  442376:	add    DWORD PTR [eax],eax
  442378:	and    eax,DWORD PTR [esi+esi*8]
  44237b:	xor    BYTE PTR [edx],dh
  44237d:	add    al,0x4
  44237f:	xor    DWORD PTR [ebx+0x5],esp
  442382:	cmp    al,0x31
  442384:	mov    BYTE PTR ds:0x52431ef,al
  44238a:	or     dh,BYTE PTR [edx]
  44238c:	cs push es
  44238e:	push   ds
  44238f:	xor    bl,BYTE PTR [eax+0x6]
  442392:	cmp    eax,0x75000032
  442397:	push   es
  442398:	push   edi
  442399:	xor    dl,BYTE PTR [esi+0x60326806]
  44239f:	push   es
  4423a0:	je     0x4423d4
  4423a2:	mov    edi,0xe832f005
  4423a7:	add    eax,0x69c33b7
  4423ac:	int3   
  4423ad:	xor    ebp,ecx
  4423af:	push   es
  4423b0:	loope  0x4423e5
  4423b2:	retf   0x1506
  4423b5:	xor    al,0x1d
  4423b7:	add    BYTE PTR [ebx],dh
  4423b9:	xor    al,0x62
  4423bb:	add    BYTE PTR [eax-0x720041cc],al
  4423c1:	xor    al,0xc1
  4423c3:	jmp    FWORD PTR [esp+esi*1+0x34b9ffea]
  4423ca:	je     0x4423cb
  4423cc:	retf   0x6634
  4423cf:	(bad)  
  4423d0:	fnsave [eax+ebx*4]
  4423d3:	push   ebx
  4423d5:	xor    al,0x38
  4423d7:	add    DWORD PTR [eax],edx
  4423d9:	xor    eax,0x3528011c
  4423de:	and    al,0x1
  4423e0:	inc    eax
  4423e1:	xor    eax,0x357f00ef
  4423e6:	mov    ebx,0xbd359400
  4423eb:	add    BYTE PTR [ebx-0x6ff9ecb],dh
  4423f1:	xor    eax,0x36100232
  4423f6:	sbb    al,0x2
  4423f8:	and    eax,0x9000036
  4423fd:	add    bh,BYTE PTR [eax]
  4423ff:	ss jno 0x442404
  442402:	inc    ebp
  442403:	ss jp  0x442408
  442406:	pop    esi
  442407:	ss fwait
  442409:	add    ch,BYTE PTR [ebx+0x36]
  44240c:	mov    BYTE PTR [edx],al
  44240e:	je     0x442446
  442410:	mov    es,WORD PTR [edx]
  442412:	jg     0x44244a
  442414:	mov    bl,0x2
  442416:	xchg   ebx,eax
  442417:	ss lahf 
  442419:	add    bl,BYTE PTR [esi+esi*1+0x36be02d5]
  442420:	std    
  442421:	add    dh,bh
  442423:	ss jmp 0x442428
  442426:	add    esi,DWORD PTR [edi]
  442428:	xor    eax,DWORD PTR [ecx]
  44242a:	aaa    
  44242b:	aaa    
  44242c:	jl     0x44242f
  44242e:	imul   esi,DWORD PTR [edi],0x37870153
  442434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442435:	add    DWORD PTR [eax-0x57fe69c9],ebx
  44243b:	aaa    
  44243c:	add    DWORD PTR [ecx],0xffffffbd
  44243f:	aaa    
  442440:	add    BYTE PTR [ecx],0xd3
  442443:	aaa    
  442444:	xchg   esi,eax
  442445:	add    esp,esi
  442447:	aaa    
  442448:	mov    eax,ds:0x42380701
  44244d:	or     al,0x1
  44244f:	add    BYTE PTR [edi],dh
  442451:	xor    al,0x1
  442453:	add    BYTE PTR [edi],dh
  442455:	xor    al,0x1
  442457:	add    BYTE PTR [edi],dh
  442459:	xor    al,0x1
  44245b:	add    BYTE PTR [edi],dh
  44245d:	xor    al,0x1
  44245f:	add    BYTE PTR [eax],al
  442461:	add    BYTE PTR [edi],dh
  442463:	xor    al,0x1
  442465:	add    BYTE PTR [edi],dh
  442467:	xor    al,0x1
  442469:	add    BYTE PTR [edi],dh
  44246b:	xor    al,0x1
  44246d:	add    BYTE PTR [edi],dh
  44246f:	xor    al,0x1
  442471:	add    BYTE PTR [edi],dh
  442473:	xor    al,0x1
  442475:	add    BYTE PTR [edi],dh
  442477:	xor    al,0x1
  442479:	add    BYTE PTR [edi],dh
  44247b:	xor    al,0x1
  44247d:	add    BYTE PTR [edi],dh
  44247f:	xor    al,0x1
  442481:	add    BYTE PTR [edi],dh
  442483:	xor    al,0x1
  442485:	add    BYTE PTR [edi],dh
  442487:	xor    al,0x1
  442489:	add    BYTE PTR [edi],dh
  44248b:	xor    al,0x1
  44248d:	add    BYTE PTR [edi],dh
  44248f:	xor    al,0x1
  442491:	add    BYTE PTR [edi],dh
  442493:	xor    al,0x1
  442495:	add    BYTE PTR [edi],dh
  442497:	xor    al,0x1
  442499:	add    BYTE PTR [edi],dh
  44249b:	xor    al,0x1
  44249d:	add    BYTE PTR [edi],dh
  44249f:	xor    al,0x1
  4424a1:	add    BYTE PTR [edi],dh
  4424a3:	xor    al,0x1
  4424a5:	add    BYTE PTR [edi],dh
  4424a7:	xor    al,0x1
  4424a9:	add    BYTE PTR [edi],dh
  4424ab:	xor    al,0x1
  4424ad:	add    BYTE PTR [edi],dh
  4424af:	xor    al,0x1
  4424b1:	add    BYTE PTR [edi],dh
  4424b3:	xor    al,0x1
  4424b5:	add    BYTE PTR [edi],dh
  4424b7:	xor    al,0x1
  4424b9:	add    BYTE PTR [edi],dh
  4424bb:	xor    al,0x1
  4424bd:	add    BYTE PTR [edi],dh
  4424bf:	xor    al,0x1
  4424c1:	add    BYTE PTR [edi],dh
  4424c3:	xor    al,0x1
  4424c5:	add    BYTE PTR [eax],al
  4424c7:	add    BYTE PTR [edi],dh
  4424c9:	xor    al,0x1
  4424cb:	add    BYTE PTR [edi],dh
  4424cd:	xor    al,0x1
  4424cf:	add    BYTE PTR [edi],dh
  4424d1:	xor    al,0x1
  4424d3:	add    BYTE PTR [edi],dh
  4424d5:	xor    al,0x1
  4424d7:	add    BYTE PTR [edi],dh
  4424d9:	xor    al,0x1
  4424db:	add    BYTE PTR [edi],dh
  4424dd:	xor    al,0x1
  4424df:	add    BYTE PTR [edi],dh
  4424e1:	xor    al,0x1
  4424e3:	add    BYTE PTR [edi],dh
  4424e5:	xor    al,0x1
  4424e7:	add    BYTE PTR [edi],dh
  4424e9:	xor    al,0x1
  4424eb:	add    BYTE PTR [edi],dh
  4424ed:	xor    al,0x1
  4424ef:	add    BYTE PTR [edi],dh
  4424f1:	xor    al,0x1
  4424f3:	add    BYTE PTR [edi],dh
  4424f5:	xor    al,0x1
  4424f7:	add    BYTE PTR [edi],dh
  4424f9:	xor    al,0x1
  4424fb:	add    BYTE PTR [edi],dh
  4424fd:	xor    al,0x1
  4424ff:	add    BYTE PTR [edi],dh
  442501:	xor    al,0x1
  442503:	add    BYTE PTR [edi],dh
  442505:	xor    al,0x1
  442507:	add    BYTE PTR [edi],dh
  442509:	xor    al,0x1
  44250b:	add    BYTE PTR [edi],dh
  44250d:	xor    al,0x1
  44250f:	add    BYTE PTR [edi],dh
  442511:	xor    al,0x1
  442513:	add    BYTE PTR [edi],dh
  442515:	xor    al,0x1
  442517:	add    BYTE PTR [edi],dh
  442519:	xor    al,0x1
  44251b:	add    BYTE PTR [edi],dh
  44251d:	xor    al,0x1
  44251f:	add    BYTE PTR [edi],dh
  442521:	xor    al,0x1
  442523:	add    BYTE PTR [edi],dh
  442525:	xor    al,0x1
  442527:	add    BYTE PTR [edi],dh
  442529:	xor    al,0x1
  44252b:	add    BYTE PTR [eax],al
  44252d:	add    BYTE PTR [edi],dh
  44252f:	xor    al,0x1
  442531:	add    BYTE PTR [edi],dh
  442533:	xor    al,0x1
  442535:	add    BYTE PTR [edi],dh
  442537:	xor    al,0x1
  442539:	add    BYTE PTR [edi],dh
  44253b:	xor    al,0x1
  44253d:	add    BYTE PTR [edi],dh
  44253f:	xor    al,0x1
  442541:	add    BYTE PTR [edi],dh
  442543:	xor    al,0x1
  442545:	add    BYTE PTR [edi],dh
  442547:	xor    al,0x1
  442549:	add    BYTE PTR [edi],dh
  44254b:	xor    al,0x1
  44254d:	add    BYTE PTR [edi],dh
  44254f:	xor    al,0x1
  442551:	add    BYTE PTR [edi],dh
  442553:	xor    al,0x1
  442555:	add    BYTE PTR [edi],dh
  442557:	xor    al,0x1
  442559:	add    BYTE PTR [edi],dh
  44255b:	xor    al,0x1
  44255d:	add    BYTE PTR [edi],dh
  44255f:	xor    al,0x1
  442561:	add    BYTE PTR [edi],dh
  442563:	xor    al,0x1
  442565:	add    BYTE PTR [edi],dh
  442567:	xor    al,0x1
  442569:	add    BYTE PTR [edi],dh
  44256b:	xor    al,0x1
  44256d:	add    BYTE PTR [edi],dh
  44256f:	xor    al,0x1
  442571:	add    BYTE PTR [edi],dh
  442573:	xor    al,0x1
  442575:	add    BYTE PTR [edi],dh
  442577:	xor    al,0x1
  442579:	add    BYTE PTR [edi],dh
  44257b:	xor    al,0x1
  44257d:	add    BYTE PTR [edi],dh
  44257f:	xor    al,0x1
  442581:	add    BYTE PTR [edi],dh
  442583:	xor    al,0x1
  442585:	add    BYTE PTR [edi],dh
  442587:	xor    al,0x1
  442589:	add    BYTE PTR [edi],dh
  44258b:	xor    al,0x1
  44258d:	add    BYTE PTR [edi],dh
  44258f:	xor    al,0x1
  442591:	add    BYTE PTR [eax],al
  442593:	add    BYTE PTR [edi],dh
  442595:	xor    al,0x1
  442597:	add    BYTE PTR [edi],dh
  442599:	xor    al,0x1
  44259b:	add    BYTE PTR [edi],dh
  44259d:	xor    al,0x1
  44259f:	add    BYTE PTR [edi],dh
  4425a1:	xor    al,0x1
  4425a3:	add    BYTE PTR [edi],dh
  4425a5:	xor    al,0x1
  4425a7:	add    BYTE PTR [edi],dh
  4425a9:	xor    al,0x1
  4425ab:	add    BYTE PTR [edi],dh
  4425ad:	xor    al,0x1
  4425af:	add    BYTE PTR [edi],dh
  4425b1:	xor    al,0x1
  4425b3:	add    BYTE PTR [edi],dh
  4425b5:	xor    al,0x1
  4425b7:	add    BYTE PTR [edi],dh
  4425b9:	xor    al,0x1
  4425bb:	add    BYTE PTR [edi],dh
  4425bd:	xor    al,0x1
  4425bf:	add    BYTE PTR [edi],dh
  4425c1:	xor    al,0x1
  4425c3:	add    BYTE PTR [edi],dh
  4425c5:	xor    al,0x1
  4425c7:	add    BYTE PTR [edi],dh
  4425c9:	xor    al,0x1
  4425cb:	add    BYTE PTR [edi],dh
  4425cd:	xor    al,0x1
  4425cf:	add    BYTE PTR [edi],dh
  4425d1:	xor    al,0x1
  4425d3:	add    BYTE PTR [edi],dh
  4425d5:	xor    al,0x1
  4425d7:	add    BYTE PTR [edi],dh
  4425d9:	xor    al,0x1
  4425db:	add    BYTE PTR [edi],dh
  4425dd:	xor    al,0x1
  4425df:	add    BYTE PTR [edi],dh
  4425e1:	xor    al,0x1
  4425e3:	add    BYTE PTR [edi],dh
  4425e5:	xor    al,0x1
  4425e7:	add    BYTE PTR [edi],dh
  4425e9:	xor    al,0x1
  4425eb:	add    BYTE PTR [edi],dh
  4425ed:	xor    al,0x1
  4425ef:	add    BYTE PTR [edi],dh
  4425f1:	xor    al,0x1
  4425f3:	add    BYTE PTR [edi],dh
  4425f5:	xor    al,0x1
  4425f7:	add    BYTE PTR [eax],al
  4425f9:	add    BYTE PTR [edi],dh
  4425fb:	xor    al,0x1
  4425fd:	add    BYTE PTR [edi],dh
  4425ff:	xor    al,0x1
  442601:	add    BYTE PTR [edi],dh
  442603:	xor    al,0x1
  442605:	add    BYTE PTR [edi],dh
  442607:	xor    al,0x1
  442609:	add    BYTE PTR [edi],dh
  44260b:	xor    al,0x1
  44260d:	add    BYTE PTR [edi],dh
  44260f:	xor    al,0x1
  442611:	add    BYTE PTR [edi],dh
  442613:	xor    al,0x1
  442615:	add    BYTE PTR [edi],dh
  442617:	xor    al,0x1
  442619:	add    BYTE PTR [edi],dh
  44261b:	xor    al,0x1
  44261d:	add    BYTE PTR [edi],dh
  44261f:	xor    al,0x1
  442621:	add    BYTE PTR [edi],dh
  442623:	xor    al,0x1
  442625:	add    BYTE PTR [edi],dh
  442627:	xor    al,0x1
  442629:	add    BYTE PTR [edi],dh
  44262b:	xor    al,0x1
  44262d:	add    BYTE PTR [edi],dh
  44262f:	xor    al,0x1
  442631:	add    BYTE PTR [edi],dh
  442633:	xor    al,0x1
  442635:	add    BYTE PTR [edi],dh
  442637:	xor    al,0x1
  442639:	add    BYTE PTR [edi],dh
  44263b:	xor    al,0x1
  44263d:	add    BYTE PTR [edi],dh
  44263f:	xor    al,0x1
  442641:	add    BYTE PTR [edi],dh
  442643:	xor    al,0x1
  442645:	add    BYTE PTR [edi],dh
  442647:	xor    al,0x1
  442649:	add    BYTE PTR [edi],dh
  44264b:	xor    al,0x1
  44264d:	add    BYTE PTR [edi],dh
  44264f:	xor    al,0x1
  442651:	add    BYTE PTR [edi],dh
  442653:	xor    al,0x1
  442655:	add    BYTE PTR [edi],dh
  442657:	xor    al,0x1
  442659:	add    BYTE PTR [edi],dh
  44265b:	xor    al,0x1
  44265d:	add    BYTE PTR [eax],al
  44265f:	add    BYTE PTR [edi],dh
  442661:	xor    al,0x1
  442663:	add    BYTE PTR [edi],dh
  442665:	xor    al,0x1
  442667:	add    BYTE PTR [edi],dh
  442669:	xor    al,0x1
  44266b:	add    BYTE PTR [edi],dh
  44266d:	xor    al,0x1
  44266f:	add    BYTE PTR [edi],dh
  442671:	xor    al,0x1
  442673:	add    BYTE PTR [edi],dh
  442675:	xor    al,0x1
  442677:	add    BYTE PTR [edi],dh
  442679:	xor    al,0x1
  44267b:	add    BYTE PTR [edi],dh
  44267d:	xor    al,0x1
  44267f:	add    BYTE PTR [edi],dh
  442681:	xor    al,0x1
  442683:	add    BYTE PTR [edi],dh
  442685:	xor    al,0x1
  442687:	add    BYTE PTR [edi],dh
  442689:	xor    al,0x1
  44268b:	add    BYTE PTR [edi],dh
  44268d:	xor    al,0x1
  44268f:	add    BYTE PTR [edi],dh
  442691:	xor    al,0x1
  442693:	add    BYTE PTR [edi],dh
  442695:	xor    al,0x1
  442697:	add    BYTE PTR [edi],dh
  442699:	xor    al,0x1
  44269b:	add    BYTE PTR [edi],dh
  44269d:	xor    al,0x1
  44269f:	add    BYTE PTR [edi],dh
  4426a1:	xor    al,0x1
  4426a3:	add    BYTE PTR [edi],dh
  4426a5:	xor    al,0x1
  4426a7:	add    BYTE PTR [edi],dh
  4426a9:	xor    al,0x1
  4426ab:	add    BYTE PTR [edi],dh
  4426ad:	xor    al,0x1
  4426af:	add    BYTE PTR [edi],dh
  4426b1:	xor    al,0x1
  4426b3:	add    BYTE PTR [edi],dh
  4426b5:	xor    al,0x1
  4426b7:	add    BYTE PTR [edi],dh
  4426b9:	xor    al,0x1
  4426bb:	add    BYTE PTR [edi],dh
  4426bd:	xor    al,0x1
  4426bf:	add    BYTE PTR [edi],dh
  4426c1:	xor    al,0x1
  4426c3:	add    BYTE PTR [eax],al
  4426c5:	add    BYTE PTR [edi],dh
  4426c7:	xor    al,0x1
  4426c9:	add    BYTE PTR [edi],dh
  4426cb:	xor    al,0x1
  4426cd:	add    BYTE PTR [edi],dh
  4426cf:	xor    al,0x1
  4426d1:	add    BYTE PTR [edi],dh
  4426d3:	xor    al,0x1
  4426d5:	add    BYTE PTR [edi],dh
  4426d7:	xor    al,0x1
  4426d9:	add    BYTE PTR [edi],dh
  4426db:	xor    al,0x1
  4426dd:	add    BYTE PTR [edi],dh
  4426df:	xor    al,0x1
  4426e1:	add    BYTE PTR [edi],dh
  4426e3:	xor    al,0x1
  4426e5:	add    BYTE PTR [edi],dh
  4426e7:	xor    al,0x1
  4426e9:	add    BYTE PTR [edi],dh
  4426eb:	xor    al,0x1
  4426ed:	add    BYTE PTR [edi],dh
  4426ef:	xor    al,0x1
  4426f1:	add    BYTE PTR [edi],dh
  4426f3:	xor    al,0x1
  4426f5:	add    BYTE PTR [edi],dh
  4426f7:	xor    al,0x1
  4426f9:	add    BYTE PTR [edi],dh
  4426fb:	xor    al,0x1
  4426fd:	add    BYTE PTR [edi],dh
  4426ff:	xor    al,0x1
  442701:	add    BYTE PTR [edi],dh
  442703:	xor    al,0x1
  442705:	add    BYTE PTR [edi],dh
  442707:	xor    al,0x1
  442709:	add    BYTE PTR [edi],dh
  44270b:	xor    al,0x1
  44270d:	add    BYTE PTR [edi],dh
  44270f:	xor    al,0x1
  442711:	add    BYTE PTR [edi],dh
  442713:	xor    al,0x1
  442715:	add    BYTE PTR [edi],dh
  442717:	xor    al,0x1
  442719:	add    BYTE PTR [edi],dh
  44271b:	xor    al,0x1
  44271d:	add    BYTE PTR [edi],dh
  44271f:	xor    al,0x1
  442721:	add    BYTE PTR [edi],dh
  442723:	xor    al,0x1
  442725:	add    BYTE PTR [edi],dh
  442727:	xor    al,0x1
  442729:	add    BYTE PTR [eax],al
  44272b:	add    BYTE PTR [edi],dh
  44272d:	xor    al,0x1
  44272f:	add    BYTE PTR [edi],dh
  442731:	xor    al,0x1
  442733:	add    BYTE PTR [edi],dh
  442735:	xor    al,0x1
  442737:	add    BYTE PTR [edi],dh
  442739:	xor    al,0x1
  44273b:	add    BYTE PTR [edi],dh
  44273d:	xor    al,0x1
  44273f:	add    BYTE PTR [edi],dh
  442741:	xor    al,0x1
  442743:	add    al,ch
  442745:	inc    ebp
  442746:	inc    esp
  442747:	add    ah,ch
  442749:	inc    ebp
  44274a:	inc    esp
  44274b:	add    al,dh
  44274d:	inc    ebp
  44274e:	inc    esp
  44274f:	add    ah,dh
  442751:	inc    ebp
  442752:	inc    esp
  442753:	add    al,bh
  442755:	inc    ebp
  442756:	inc    esp
  442757:	add    ah,bh
  442759:	inc    ebp
  44275a:	inc    esp
  44275b:	add    BYTE PTR [eax],al
  44275d:	inc    esi
  44275e:	inc    esp
  44275f:	add    BYTE PTR [esi+eax*2],al
  442762:	inc    esp
  442763:	add    BYTE PTR [eax],cl
  442765:	inc    esi
  442766:	inc    esp
  442767:	add    BYTE PTR [esi+eax*2],cl
  44276a:	inc    esp
  44276b:	add    BYTE PTR [eax],dl
  44276d:	inc    esi
  44276e:	inc    esp
  44276f:	add    BYTE PTR [esi+eax*2],dl
  442772:	inc    esp
  442773:	add    BYTE PTR [eax],bl
  442775:	inc    esi
  442776:	inc    esp
  442777:	add    BYTE PTR [esi+eax*2],bl
  44277a:	inc    esp
  44277b:	add    BYTE PTR [eax],ah
  44277d:	inc    esi
  44277e:	inc    esp
  44277f:	add    BYTE PTR [esi+eax*2],ah
  442782:	inc    esp
  442783:	add    BYTE PTR [eax],ch
  442785:	inc    esi
  442786:	inc    esp
  442787:	add    BYTE PTR [esi+eax*2],ch
  44278a:	inc    esp
  44278b:	add    BYTE PTR [eax],dh
  44278d:	inc    esi
  44278e:	inc    esp
  44278f:	add    BYTE PTR [esi+eax*2],dh
  442792:	inc    esp
  442793:	add    BYTE PTR [eax],bh
  442795:	inc    esi
  442796:	inc    esp
  442797:	add    BYTE PTR [esi+eax*2],bh
  44279a:	inc    esp
  44279b:	add    BYTE PTR [eax+0x46],al
  44279e:	inc    esp
  44279f:	add    BYTE PTR [esi+eax*2+0x44],al
  4427a3:	add    BYTE PTR [eax+0x46],cl
  4427a6:	inc    esp
  4427a7:	add    BYTE PTR [esi+eax*2+0x44],cl
  4427ab:	add    BYTE PTR [eax+0x46],dl
  4427ae:	inc    esp
  4427af:	add    BYTE PTR [esi+eax*2+0x44],dl
  4427b3:	add    BYTE PTR [eax+0x46],bl
  4427b6:	inc    esp
  4427b7:	add    BYTE PTR [esi+eax*2+0x44],bl
  4427bb:	add    BYTE PTR [eax+0x46],ah
  4427be:	inc    esp
  4427bf:	add    BYTE PTR [esi+eax*2+0x44],ah
  4427c3:	add    BYTE PTR [eax+0x46],ch
  4427c6:	inc    esp
  4427c7:	add    BYTE PTR [esi+eax*2],dl
  4427ca:	inc    esp
  4427cb:	add    BYTE PTR [esi+eax*2+0x44],ch
  4427cf:	add    BYTE PTR [eax+0x46],dh
  4427d2:	inc    esp
  4427d3:	add    BYTE PTR [esi+eax*2+0x44],dh
  4427d7:	add    BYTE PTR [eax+0x46],bh
  4427da:	inc    esp
  4427db:	add    BYTE PTR [esi+eax*2+0x44],bh
  4427df:	add    BYTE PTR [eax-0x7bffbbba],al
  4427e5:	inc    esi
  4427e6:	inc    esp
  4427e7:	add    BYTE PTR [eax-0x73ffbbba],cl
  4427ed:	inc    esi
  4427ee:	inc    esp
  4427ef:	add    BYTE PTR [eax-0x6bffbbba],dl
  4427f5:	inc    esi
  4427f6:	inc    esp
  4427f7:	add    BYTE PTR [eax-0x63ffbbba],bl
  4427fd:	inc    esi
  4427fe:	inc    esp
  4427ff:	add    BYTE PTR [eax-0x5bffbbba],ah
  442805:	inc    esi
  442806:	inc    esp
  442807:	add    BYTE PTR [eax-0x53ffbbba],ch
  44280d:	inc    esi
  44280e:	inc    esp
  44280f:	add    BYTE PTR [eax-0x4bffbbba],dh
  442815:	inc    esi
  442816:	inc    esp
  442817:	add    BYTE PTR [eax-0x43ffbbba],bh
  44281d:	inc    esi
  44281e:	inc    esp
  44281f:	add    al,al
  442821:	inc    esi
  442822:	inc    esp
  442823:	add    ah,al
  442825:	inc    esi
  442826:	inc    esp
  442827:	add    al,cl
  442829:	inc    esi
  44282a:	inc    esp
  44282b:	add    ah,cl
  44282d:	inc    esi
  44282e:	inc    esp
  44282f:	add    al,dl
  442831:	inc    esi
  442832:	inc    esp
  442833:	add    ah,dl
  442835:	inc    esi
  442836:	inc    esp
  442837:	add    al,bl
  442839:	inc    esi
  44283a:	inc    esp
  44283b:	add    ah,bl
  44283d:	inc    esi
  44283e:	inc    esp
  44283f:	add    al,ah
  442841:	inc    esi
  442842:	inc    esp
  442843:	add    ah,ah
  442845:	inc    esi
  442846:	inc    esp
  442847:	add    ah,ah
  442849:	inc    esi
  44284a:	inc    esp
  44284b:	add    BYTE PTR [eax+0x46],ah
  44284e:	inc    esp
  44284f:	add    al,ch
  442851:	inc    esi
  442852:	inc    esp
  442853:	add    ah,ch
  442855:	inc    esi
  442856:	inc    esp
  442857:	add    al,dh
  442859:	inc    esi
  44285a:	inc    esp
  44285b:	add    ah,dh
  44285d:	inc    esi
  44285e:	inc    esp
  44285f:	add    al,bh
  442861:	inc    ebp
  442862:	inc    esp
  442863:	add    al,bh
  442865:	inc    esi
  442866:	inc    esp
  442867:	add    ah,bh
  442869:	inc    esi
  44286a:	inc    esp
  44286b:	add    BYTE PTR [eax],al
  44286d:	inc    edi
  44286e:	inc    esp
  44286f:	add    BYTE PTR [edi+eax*2],al
  442872:	inc    esp
  442873:	add    BYTE PTR [eax],cl
  442875:	inc    edi
  442876:	inc    esp
  442877:	add    BYTE PTR [edi+eax*2],cl
  44287a:	inc    esp
  44287b:	add    BYTE PTR [eax],dl
  44287d:	inc    edi
  44287e:	inc    esp
  44287f:	add    BYTE PTR [edi+eax*2],dl
  442882:	inc    esp
  442883:	add    BYTE PTR [eax],bl
  442885:	inc    edi
  442886:	inc    esp
  442887:	add    BYTE PTR [edi+eax*2],bl
  44288a:	inc    esp
  44288b:	add    BYTE PTR [eax],ah
  44288d:	inc    edi
  44288e:	inc    esp
  44288f:	add    BYTE PTR [edi+eax*2],ah
  442892:	inc    esp
  442893:	add    BYTE PTR [eax],ch
  442895:	inc    edi
  442896:	inc    esp
  442897:	add    BYTE PTR [edi+eax*2],ch
  44289a:	inc    esp
  44289b:	add    BYTE PTR [eax],dh
  44289d:	inc    edi
  44289e:	inc    esp
  44289f:	add    BYTE PTR [edi+eax*2],dh
  4428a2:	inc    esp
  4428a3:	add    BYTE PTR [eax],bh
  4428a5:	inc    edi
  4428a6:	inc    esp
  4428a7:	add    BYTE PTR [edi+eax*2],bh
  4428aa:	inc    esp
  4428ab:	add    BYTE PTR [eax+0x47],al
  4428ae:	inc    esp
  4428af:	add    BYTE PTR [edi+eax*2+0x44],al
  4428b3:	add    BYTE PTR [eax+0x47],cl
  4428b6:	inc    esp
  4428b7:	add    BYTE PTR [edi+eax*2+0x44],cl
  4428bb:	add    BYTE PTR [eax+0x47],dl
  4428be:	inc    esp
  4428bf:	add    BYTE PTR [edi+eax*2+0x44],dl
  4428c3:	add    BYTE PTR [eax+0x47],bl
  4428c6:	inc    esp
  4428c7:	add    BYTE PTR [edi+eax*2+0x44],bl
  4428cb:	add    BYTE PTR [eax+0x47],ah
  4428ce:	inc    esp
  4428cf:	add    BYTE PTR [esi+eax*2+0x44],dl
  4428d3:	add    BYTE PTR [eax+0x47],ch
  4428d6:	inc    esp
  4428d7:	add    BYTE PTR [edi+eax*2+0x44],ch
  4428db:	add    BYTE PTR [edi+eax*2+0x44],ch
  4428df:	add    BYTE PTR [eax+0x47],dh
  4428e2:	inc    esp
  4428e3:	add    BYTE PTR [edi+eax*2+0x44],dh
  4428e7:	add    BYTE PTR [eax+0x47],bh
  4428ea:	inc    esp
  4428eb:	add    BYTE PTR [edi+eax*2+0x44],bh
  4428ef:	add    BYTE PTR [eax-0x7bffbbb9],al
  4428f5:	inc    edi
  4428f6:	inc    esp
  4428f7:	add    BYTE PTR [eax-0x73ffbbb9],cl
  4428fd:	inc    edi
  4428fe:	inc    esp
  4428ff:	add    BYTE PTR [eax-0x6bffbbb9],dl
  442905:	inc    edi
  442906:	inc    esp
  442907:	add    BYTE PTR [eax-0x63ffbbb9],bl
  44290d:	inc    edi
  44290e:	inc    esp
  44290f:	add    BYTE PTR [eax-0x5bffbbb9],ah
  442915:	inc    edi
  442916:	inc    esp
  442917:	add    BYTE PTR [eax-0x53ffbbb9],ch
  44291d:	inc    edi
  44291e:	inc    esp
  44291f:	add    BYTE PTR [eax-0x4bffbbb9],dh
  442925:	inc    edi
  442926:	inc    esp
  442927:	add    BYTE PTR [eax-0x43ffbbb9],bh
  44292d:	inc    edi
  44292e:	inc    esp
  44292f:	add    al,al
  442931:	inc    edi
  442932:	inc    esp
  442933:	add    ah,al
  442935:	inc    edi
  442936:	inc    esp
  442937:	add    al,cl
  442939:	inc    edi
  44293a:	inc    esp
  44293b:	add    ah,cl
  44293d:	inc    edi
  44293e:	inc    esp
  44293f:	add    al,dl
  442941:	inc    edi
  442942:	inc    esp
  442943:	add    BYTE PTR [edi+eax*2+0x47d40044],al
  44294a:	inc    esp
  44294b:	add    al,bl
  44294d:	inc    edi
  44294e:	inc    esp
  44294f:	add    ah,bl
  442951:	inc    edi
  442952:	inc    esp
  442953:	add    al,ah
  442955:	inc    edi
  442956:	inc    esp
  442957:	add    ah,ah
  442959:	inc    edi
  44295a:	inc    esp
  44295b:	add    al,ch
  44295d:	inc    edi
  44295e:	inc    esp
  44295f:	add    ah,ch
  442961:	inc    edi
  442962:	inc    esp
  442963:	add    al,dh
  442965:	inc    edi
  442966:	inc    esp
  442967:	add    ah,dh
  442969:	inc    edi
  44296a:	inc    esp
  44296b:	add    al,bh
  44296d:	inc    edi
  44296e:	inc    esp
  44296f:	add    ah,bh
  442971:	inc    edi
  442972:	inc    esp
  442973:	add    BYTE PTR [eax],al
  442975:	dec    eax
  442976:	inc    esp
  442977:	add    BYTE PTR [eax+ecx*2],al
  44297a:	inc    esp
  44297b:	add    BYTE PTR [eax],cl
  44297d:	dec    eax
  44297e:	inc    esp
  44297f:	add    BYTE PTR [eax+ecx*2],cl
  442982:	inc    esp
  442983:	add    BYTE PTR [eax],dl
  442985:	dec    eax
  442986:	inc    esp
  442987:	add    BYTE PTR [eax+ecx*2],dl
  44298a:	inc    esp
  44298b:	add    BYTE PTR [eax],bl
  44298d:	dec    eax
  44298e:	inc    esp
  44298f:	add    al,dh
  442991:	inc    edi
  442992:	inc    esp
  442993:	add    BYTE PTR [eax+ecx*2],bl
  442996:	inc    esp
  442997:	add    BYTE PTR [eax],ah
  442999:	dec    eax
  44299a:	inc    esp
  44299b:	add    BYTE PTR [eax+ecx*2],ah
  44299e:	inc    esp
  44299f:	add    BYTE PTR [eax],ch
  4429a1:	dec    eax
  4429a2:	inc    esp
  4429a3:	add    BYTE PTR [eax+ecx*2],ch
  4429a6:	inc    esp
  4429a7:	add    BYTE PTR [eax],dh
  4429a9:	dec    eax
  4429aa:	inc    esp
  4429ab:	add    BYTE PTR [eax+ecx*2],dh
  4429ae:	inc    esp
  4429af:	add    BYTE PTR [eax],bh
  4429b1:	dec    eax
  4429b2:	inc    esp
  4429b3:	add    BYTE PTR [eax+ecx*2],bh
  4429b6:	inc    esp
  4429b7:	add    BYTE PTR [eax+0x48],al
  4429ba:	inc    esp
  4429bb:	add    BYTE PTR [eax+ecx*2+0x44],al
  4429bf:	add    BYTE PTR [eax+0x48],cl
  4429c2:	inc    esp
  4429c3:	add    BYTE PTR [eax+ecx*2+0x44],cl
  4429c7:	add    BYTE PTR [eax+0x48],dl
  4429ca:	inc    esp
  4429cb:	add    BYTE PTR [eax+ecx*2+0x44],dl
  4429cf:	add    BYTE PTR [eax+0x48],bl
  4429d2:	inc    esp
  4429d3:	add    BYTE PTR [eax+ecx*2+0x44],bl
  4429d7:	add    BYTE PTR [eax+0x48],ah
  4429da:	inc    esp
  4429db:	add    BYTE PTR [eax+ecx*2+0x44],ah
  4429df:	add    BYTE PTR [eax+0x48],ch
  4429e2:	inc    esp
  4429e3:	add    BYTE PTR [eax+ecx*2+0x44],ch
  4429e7:	add    BYTE PTR [eax+0x48],dh
  4429ea:	inc    esp
  4429eb:	add    BYTE PTR [eax+ecx*2+0x44],dh
  4429ef:	add    BYTE PTR [eax+0x48],bh
  4429f2:	inc    esp
  4429f3:	add    BYTE PTR [eax+ecx*2+0x44],bh
  4429f7:	add    BYTE PTR [eax-0x7bffbbb8],al
  4429fd:	dec    eax
  4429fe:	inc    esp
  4429ff:	add    BYTE PTR [eax-0x73ffbbb8],cl
  442a05:	dec    eax
  442a06:	inc    esp
  442a07:	add    BYTE PTR [eax-0x6bffbbb8],dl
  442a0d:	dec    eax
  442a0e:	inc    esp
  442a0f:	add    BYTE PTR [eax-0x63ffbbb8],bl
  442a15:	dec    eax
  442a16:	inc    esp
  442a17:	add    BYTE PTR [eax-0x23ffbbb8],ah
  442a1d:	inc    edi
  442a1e:	inc    esp
  442a1f:	add    BYTE PTR [eax+ecx*2+0x48a80044],ah
  442a26:	inc    esp
  442a27:	add    BYTE PTR [eax+ecx*2+0x48b00044],ch
  442a2e:	inc    esp
  442a2f:	add    BYTE PTR [eax+ecx*2+0x48b80044],dh
  442a36:	inc    esp
  442a37:	add    BYTE PTR [eax+ecx*2+0x48c00044],bh
  442a3e:	inc    esp
  442a3f:	add    ah,al
  442a41:	dec    eax
  442a42:	inc    esp
  442a43:	add    al,cl
  442a45:	dec    eax
  442a46:	inc    esp
  442a47:	add    ah,cl
  442a49:	dec    eax
  442a4a:	inc    esp
  442a4b:	add    al,dl
  442a4d:	dec    eax
  442a4e:	inc    esp
  442a4f:	add    ah,dl
  442a51:	dec    eax
  442a52:	inc    esp
  442a53:	add    al,bl
  442a55:	dec    eax
  442a56:	inc    esp
  442a57:	add    ah,bl
  442a59:	dec    eax
  442a5a:	inc    esp
  442a5b:	add    al,ah
  442a5d:	dec    eax
  442a5e:	inc    esp
  442a5f:	add    ah,ah
  442a61:	dec    eax
  442a62:	inc    esp
  442a63:	add    ah,dh
  442a65:	dec    eax
  442a66:	inc    esp
  442a67:	add    ah,dl
  442a69:	dec    ecx
  442a6a:	inc    esp
  442a6b:	add    al,bl
  442a6d:	dec    ecx
  442a6e:	inc    esp
  442a6f:	add    al,bh
  442a71:	dec    eax
  442a72:	inc    esp
  442a73:	add    ah,bh
  442a75:	dec    eax
  442a76:	inc    esp
  442a77:	add    BYTE PTR [eax],al
  442a79:	dec    ecx
  442a7a:	inc    esp
  442a7b:	add    BYTE PTR [ecx+ecx*2],al
  442a7e:	inc    esp
  442a7f:	add    BYTE PTR [eax],cl
  442a81:	dec    ecx
  442a82:	inc    esp
  442a83:	add    BYTE PTR [ecx+ecx*2],cl
  442a86:	inc    esp
  442a87:	add    ah,bl
  442a89:	dec    ecx
  442a8a:	inc    esp
  442a8b:	add    BYTE PTR [eax],dl
  442a8d:	dec    ecx
  442a8e:	inc    esp
  442a8f:	add    BYTE PTR [ecx+ecx*2],dl
  442a92:	inc    esp
  442a93:	add    BYTE PTR [eax],bl
  442a95:	dec    ecx
  442a96:	inc    esp
  442a97:	add    BYTE PTR [ecx+ecx*2],bl
  442a9a:	inc    esp
  442a9b:	add    BYTE PTR [eax],ah
  442a9d:	dec    ecx
  442a9e:	inc    esp
  442a9f:	add    BYTE PTR [ecx+ecx*2],ah
  442aa2:	inc    esp
  442aa3:	add    BYTE PTR [eax],ch
  442aa5:	dec    ecx
  442aa6:	inc    esp
  442aa7:	add    al,ah
  442aa9:	dec    ecx
  442aaa:	inc    esp
  442aab:	add    ah,ah
  442aad:	dec    ecx
  442aae:	inc    esp
  442aaf:	add    al,ch
  442ab1:	dec    ecx
  442ab2:	inc    esp
  442ab3:	add    BYTE PTR [ecx+ecx*2],ch
  442ab6:	inc    esp
  442ab7:	add    BYTE PTR [eax],dh
  442ab9:	dec    ecx
  442aba:	inc    esp
  442abb:	add    BYTE PTR [ecx+ecx*2],dh
  442abe:	inc    esp
  442abf:	add    BYTE PTR [eax],bh
  442ac1:	dec    ecx
  442ac2:	inc    esp
  442ac3:	add    BYTE PTR [ecx+ecx*2],bh
  442ac6:	inc    esp
  442ac7:	add    BYTE PTR [eax+0x49],al
  442aca:	inc    esp
  442acb:	add    ah,ch
  442acd:	dec    ecx
  442ace:	inc    esp
  442acf:	add    BYTE PTR [ecx+ecx*2],dl
  442ad2:	inc    esp
  442ad3:	add    BYTE PTR [ecx+ecx*2+0x44],al
  442ad7:	add    BYTE PTR [eax+0x49],cl
  442ada:	inc    esp
  442adb:	add    al,bl
  442add:	dec    ecx
  442ade:	inc    esp
  442adf:	add    BYTE PTR [ecx+ecx*2+0x44],cl
  442ae3:	add    BYTE PTR [eax+0x49],dl
  442ae6:	inc    esp
  442ae7:	add    BYTE PTR [ecx+ecx*2],bl
  442aea:	inc    esp
  442aeb:	add    BYTE PTR [eax],al
  442aed:	dec    ecx
  442aee:	inc    esp
  442aef:	add    BYTE PTR [ecx+ecx*2+0x44],dl
  442af3:	add    BYTE PTR [eax+0x49],bl
  442af6:	inc    esp
  442af7:	add    BYTE PTR [ecx+ecx*2+0x44],bl
  442afb:	add    BYTE PTR [ecx+ecx*2],ah
  442afe:	inc    esp
  442aff:	add    al,dh
  442b01:	dec    ecx
  442b02:	inc    esp
  442b03:	add    ah,dh
  442b05:	dec    ecx
  442b06:	inc    esp
  442b07:	add    BYTE PTR [eax+0x49],ah
  442b0a:	inc    esp
  442b0b:	add    BYTE PTR [ecx+ecx*2],ch
  442b0e:	inc    esp
  442b0f:	add    al,bh
  442b11:	dec    ecx
  442b12:	inc    esp
  442b13:	add    ah,bh
  442b15:	dec    eax
  442b16:	inc    esp
  442b17:	add    ah,dl
  442b19:	dec    ecx
  442b1a:	inc    esp
  442b1b:	add    ah,bh
  442b1d:	dec    ecx
  442b1e:	inc    esp
  442b1f:	add    BYTE PTR [ecx+ecx*2+0x44],ah
  442b23:	add    BYTE PTR [eax+0x49],dl
  442b26:	inc    esp
  442b27:	add    BYTE PTR [ecx+ecx*2],al
  442b2a:	inc    esp
  442b2b:	add    ah,bh
  442b2d:	dec    ecx
  442b2e:	inc    esp
  442b2f:	add    BYTE PTR [ecx+ecx*2+0x44],al
  442b33:	add    BYTE PTR [eax+0x49],ch
  442b36:	inc    esp
  442b37:	add    BYTE PTR [ecx+ecx*2+0x44],ch
  442b3b:	add    BYTE PTR [eax+0x49],dh
  442b3e:	inc    esp
  442b3f:	add    BYTE PTR [ecx+ecx*2+0x44],dh
  442b43:	add    BYTE PTR [eax+0x49],bh
  442b46:	inc    esp
  442b47:	add    BYTE PTR [ecx+ecx*2+0x44],bh
  442b4b:	add    BYTE PTR [eax+0x10004449],al
  442b51:	dec    ecx
  442b52:	inc    esp
  442b53:	add    BYTE PTR [ecx+ecx*2+0x49880044],al
  442b5a:	inc    esp
  442b5b:	add    BYTE PTR [ecx+ecx*2+0x495c0044],cl
  442b62:	inc    esp
  442b63:	add    BYTE PTR [eax],al
  442b65:	dec    ecx
  442b66:	inc    esp
  442b67:	add    BYTE PTR [eax],al
  442b69:	dec    edx
  442b6a:	inc    esp
  442b6b:	add    BYTE PTR [eax],ah
  442b6d:	dec    ecx
  442b6e:	inc    esp
  442b6f:	add    BYTE PTR [edx+ecx*2],al
  442b72:	inc    esp
  442b73:	add    BYTE PTR [eax],cl
  442b75:	dec    edx
  442b76:	inc    esp
  442b77:	add    BYTE PTR [edx+ecx*2],cl
  442b7a:	inc    esp
  442b7b:	add    BYTE PTR [eax-0x6bffbbb7],dl
  442b81:	dec    ecx
  442b82:	inc    esp
  442b83:	add    BYTE PTR [ecx+ecx*2+0x44],ah
  442b87:	add    BYTE PTR [eax-0x63ffbbb7],bl
  442b8d:	dec    ecx
  442b8e:	inc    esp
  442b8f:	add    BYTE PTR [eax+0x49],ch
  442b92:	inc    esp
  442b93:	add    BYTE PTR [eax+0x49],bl
  442b96:	inc    esp
  442b97:	add    BYTE PTR [eax+0x49],dl
  442b9a:	inc    esp
  442b9b:	add    BYTE PTR [eax-0x5bffbbb7],ah
  442ba1:	dec    ecx
  442ba2:	inc    esp
  442ba3:	add    BYTE PTR [eax-0x7fffbbb7],ch
  442ba9:	dec    ecx
  442baa:	inc    esp
  442bab:	add    BYTE PTR [ecx+ecx*2+0x49a40044],ch
  442bb2:	inc    esp
  442bb3:	add    BYTE PTR [eax-0x4fffbbb7],bl
  442bb9:	dec    ecx
  442bba:	inc    esp
  442bbb:	add    BYTE PTR [eax+0x49],ch
  442bbe:	inc    esp
  442bbf:	add    BYTE PTR [eax+0x49],al
  442bc2:	inc    esp
  442bc3:	add    ah,dh
  442bc5:	dec    eax
  442bc6:	inc    esp
  442bc7:	add    BYTE PTR [eax],ch
  442bc9:	dec    ecx
  442bca:	inc    esp
  442bcb:	add    BYTE PTR [ecx+ecx*2+0x49b00044],dh
  442bd2:	inc    esp
  442bd3:	add    BYTE PTR [eax-0x43ffbbb7],bh
  442bd9:	dec    ecx
  442bda:	inc    esp
  442bdb:	add    al,bh
  442bdd:	dec    ecx
  442bde:	inc    esp
  442bdf:	add    al,al
  442be1:	dec    ecx
  442be2:	inc    esp
  442be3:	add    BYTE PTR [ecx+ecx*2+0x44],bl
  442be7:	add    ah,al
  442be9:	dec    ecx
  442bea:	inc    esp
  442beb:	add    al,cl
  442bed:	dec    ecx
  442bee:	inc    esp
  442bef:	add    ah,cl
  442bf1:	dec    ecx
  442bf2:	inc    esp
  442bf3:	add    bh,bh
  442bf5:	and    eax,0x4445d4
  442bfa:	jmp    DWORD PTR ds:0x4445d8
  442c00:	jmp    DWORD PTR ds:0x4445dc
  442c06:	jmp    DWORD PTR ds:0x4445e0
  442c0c:	jmp    DWORD PTR ds:0x4445e4
  442c12:	jmp    DWORD PTR ds:0x4445e8
  442c18:	jmp    DWORD PTR ds:0x4445ec
  442c1e:	jmp    DWORD PTR ds:0x4445f0
  442c24:	jmp    DWORD PTR ds:0x4445f4
  442c2a:	jmp    DWORD PTR ds:0x4445f8
  442c30:	jmp    DWORD PTR ds:0x4445fc
  442c36:	jmp    DWORD PTR ds:0x444600
  442c3c:	jmp    DWORD PTR ds:0x444604
  442c42:	jmp    DWORD PTR ds:0x444608
  442c48:	jmp    DWORD PTR ds:0x44460c
  442c4e:	jmp    DWORD PTR ds:0x444610
  442c54:	jmp    DWORD PTR ds:0x444614
  442c5a:	jmp    DWORD PTR ds:0x444618
  442c60:	jmp    DWORD PTR ds:0x44461c
  442c66:	jmp    DWORD PTR ds:0x444620
  442c6c:	jmp    DWORD PTR ds:0x444624
  442c72:	jmp    DWORD PTR ds:0x444628
  442c78:	jmp    DWORD PTR ds:0x44462c
  442c7e:	jmp    DWORD PTR ds:0x444630
  442c84:	jmp    DWORD PTR ds:0x444634
  442c8a:	jmp    DWORD PTR ds:0x444638
  442c90:	jmp    DWORD PTR ds:0x44463c
  442c96:	jmp    DWORD PTR ds:0x444640
  442c9c:	jmp    DWORD PTR ds:0x444644
  442ca2:	jmp    DWORD PTR ds:0x444648
  442ca8:	jmp    DWORD PTR ds:0x44464c
  442cae:	jmp    DWORD PTR ds:0x444650
  442cb4:	jmp    DWORD PTR ds:0x444654
  442cba:	jmp    DWORD PTR ds:0x444658
  442cc0:	jmp    DWORD PTR ds:0x44465c
  442cc6:	jmp    DWORD PTR ds:0x444660
  442ccc:	jmp    DWORD PTR ds:0x444664
  442cd2:	jmp    DWORD PTR ds:0x444668
  442cd8:	jmp    DWORD PTR ds:0x44466c
  442cde:	jmp    DWORD PTR ds:0x444670
  442ce4:	jmp    DWORD PTR ds:0x444674
  442cea:	jmp    DWORD PTR ds:0x444678
  442cf0:	jmp    DWORD PTR ds:0x44467c
  442cf6:	jmp    DWORD PTR ds:0x444680
  442cfc:	jmp    DWORD PTR ds:0x444684
  442d02:	jmp    DWORD PTR ds:0x444688
  442d08:	jmp    DWORD PTR ds:0x44468c
  442d0e:	jmp    DWORD PTR ds:0x444690
  442d14:	jmp    DWORD PTR ds:0x444694
  442d1a:	jmp    DWORD PTR ds:0x444698
  442d20:	jmp    DWORD PTR ds:0x44469c
  442d26:	jmp    DWORD PTR ds:0x4446a0
  442d2c:	jmp    DWORD PTR ds:0x4446a4
  442d32:	jmp    DWORD PTR ds:0x4446a8
  442d38:	jmp    DWORD PTR ds:0x4446ac
  442d3e:	jmp    DWORD PTR ds:0x4446b0
  442d44:	jmp    DWORD PTR ds:0x4446b4
  442d4a:	jmp    DWORD PTR ds:0x4446b8
  442d50:	jmp    DWORD PTR ds:0x4446bc
  442d56:	jmp    DWORD PTR ds:0x4446c0
  442d5c:	jmp    DWORD PTR ds:0x4446c4
  442d62:	jmp    DWORD PTR ds:0x4446c8
  442d68:	jmp    DWORD PTR ds:0x4446cc
  442d6e:	jmp    DWORD PTR ds:0x4446d0
  442d74:	jmp    DWORD PTR ds:0x4446d4
  442d7a:	jmp    DWORD PTR ds:0x4446d8
  442d80:	jmp    DWORD PTR ds:0x4446dc
  442d86:	jmp    DWORD PTR ds:0x4446e0
  442d8c:	jmp    DWORD PTR ds:0x4446e4
  442d92:	jmp    DWORD PTR ds:0x4446e8
  442d98:	jmp    DWORD PTR ds:0x4446ec
  442d9e:	jmp    DWORD PTR ds:0x4446f0
  442da4:	jmp    DWORD PTR ds:0x4446f4
  442daa:	jmp    DWORD PTR ds:0x4446f8
  442db0:	jmp    DWORD PTR ds:0x4446fc
  442db6:	jmp    DWORD PTR ds:0x444700
  442dbc:	jmp    DWORD PTR ds:0x444704
  442dc2:	jmp    DWORD PTR ds:0x444708
  442dc8:	jmp    DWORD PTR ds:0x44470c
  442dce:	jmp    DWORD PTR ds:0x444710
  442dd4:	jmp    DWORD PTR ds:0x444714
  442dda:	jmp    DWORD PTR ds:0x444718
  442de0:	jmp    DWORD PTR ds:0x44471c
  442de6:	jmp    DWORD PTR ds:0x444720
  442dec:	jmp    DWORD PTR ds:0x444724
  442df2:	jmp    DWORD PTR ds:0x444728
  442df8:	jmp    DWORD PTR ds:0x44472c
  442dfe:	jmp    DWORD PTR ds:0x444730
  442e04:	jmp    DWORD PTR ds:0x444734
  442e0a:	jmp    DWORD PTR ds:0x444738
  442e10:	jmp    DWORD PTR ds:0x44473c
  442e16:	jmp    DWORD PTR ds:0x444740
  442e1c:	jmp    DWORD PTR ds:0x444744
  442e22:	jmp    DWORD PTR ds:0x444748
  442e28:	jmp    DWORD PTR ds:0x44474c
  442e2e:	jmp    DWORD PTR ds:0x444750
  442e34:	jmp    DWORD PTR ds:0x444754
  442e3a:	jmp    DWORD PTR ds:0x444758
  442e40:	jmp    DWORD PTR ds:0x44475c
  442e46:	jmp    DWORD PTR ds:0x444760
  442e4c:	jmp    DWORD PTR ds:0x444768
  442e52:	jmp    DWORD PTR ds:0x44476c
  442e58:	jmp    DWORD PTR ds:0x444770
  442e5e:	jmp    DWORD PTR ds:0x444774
  442e64:	jmp    DWORD PTR ds:0x444778
  442e6a:	jmp    DWORD PTR ds:0x44477c
  442e70:	jmp    DWORD PTR ds:0x444780
  442e76:	jmp    DWORD PTR ds:0x444784
  442e7c:	jmp    DWORD PTR ds:0x444788
  442e82:	jmp    DWORD PTR ds:0x44478c
  442e88:	jmp    DWORD PTR ds:0x444790
  442e8e:	jmp    DWORD PTR ds:0x444794
  442e94:	jmp    DWORD PTR ds:0x444798
  442e9a:	jmp    DWORD PTR ds:0x44479c
  442ea0:	jmp    DWORD PTR ds:0x4447a0
  442ea6:	jmp    DWORD PTR ds:0x4447a4
  442eac:	jmp    DWORD PTR ds:0x4447a8
  442eb2:	jmp    DWORD PTR ds:0x4447ac
  442eb8:	jmp    DWORD PTR ds:0x4447b0
  442ebe:	jmp    DWORD PTR ds:0x4447b4
  442ec4:	jmp    DWORD PTR ds:0x4447b8
  442eca:	jmp    DWORD PTR ds:0x4447bc
  442ed0:	jmp    DWORD PTR ds:0x4447c0
  442ed6:	jmp    DWORD PTR ds:0x4447c4
  442edc:	jmp    DWORD PTR ds:0x4447c8
  442ee2:	jmp    DWORD PTR ds:0x4447cc
  442ee8:	jmp    DWORD PTR ds:0x4447d0
  442eee:	jmp    DWORD PTR ds:0x4447d4
  442ef4:	jmp    DWORD PTR ds:0x4447d8
  442efa:	jmp    DWORD PTR ds:0x4447dc
  442f00:	jmp    DWORD PTR ds:0x4447e0
  442f06:	jmp    DWORD PTR ds:0x4447e4
  442f0c:	jmp    DWORD PTR ds:0x4447e8
  442f12:	jmp    DWORD PTR ds:0x4447ec
  442f18:	jmp    DWORD PTR ds:0x4447f0
  442f1e:	jmp    DWORD PTR ds:0x4447f4
  442f24:	jmp    DWORD PTR ds:0x4447f8
  442f2a:	jmp    DWORD PTR ds:0x4447fc
  442f30:	jmp    DWORD PTR ds:0x444800
  442f36:	jmp    DWORD PTR ds:0x444804
  442f3c:	jmp    DWORD PTR ds:0x444808
  442f42:	jmp    DWORD PTR ds:0x44480c
  442f48:	jmp    DWORD PTR ds:0x444810
  442f4e:	jmp    DWORD PTR ds:0x444814
  442f54:	jmp    DWORD PTR ds:0x444818
  442f5a:	jmp    DWORD PTR ds:0x44481c
  442f60:	jmp    DWORD PTR ds:0x444820
  442f66:	jmp    DWORD PTR ds:0x444824
  442f6c:	jmp    DWORD PTR ds:0x444828
  442f72:	jmp    DWORD PTR ds:0x44482c
  442f78:	jmp    DWORD PTR ds:0x444830
  442f7e:	jmp    DWORD PTR ds:0x444834
  442f84:	jmp    DWORD PTR ds:0x444838
  442f8a:	jmp    DWORD PTR ds:0x44483c
  442f90:	jmp    DWORD PTR ds:0x444840
  442f96:	jmp    DWORD PTR ds:0x444844
  442f9c:	jmp    DWORD PTR ds:0x444848
  442fa2:	jmp    DWORD PTR ds:0x44484c
  442fa8:	jmp    DWORD PTR ds:0x444850
  442fae:	jmp    DWORD PTR ds:0x444854
  442fb4:	jmp    DWORD PTR ds:0x444858
  442fba:	jmp    DWORD PTR ds:0x44485c
  442fc0:	jmp    DWORD PTR ds:0x444860
  442fc6:	jmp    DWORD PTR ds:0x444864
  442fcc:	jmp    DWORD PTR ds:0x444868
  442fd2:	jmp    DWORD PTR ds:0x44486c
  442fd8:	jmp    DWORD PTR ds:0x444870
  442fde:	jmp    DWORD PTR ds:0x444874
  442fe4:	jmp    DWORD PTR ds:0x444878
  442fea:	jmp    DWORD PTR ds:0x44487c
  442ff0:	jmp    DWORD PTR ds:0x444880
  442ff6:	jmp    DWORD PTR ds:0x444884
  442ffc:	jmp    DWORD PTR ds:0x444888
  443002:	jmp    DWORD PTR ds:0x44488c
  443008:	jmp    DWORD PTR ds:0x444890
  44300e:	jmp    DWORD PTR ds:0x444894
  443014:	jmp    DWORD PTR ds:0x444898
  44301a:	jmp    DWORD PTR ds:0x44489c
  443020:	jmp    DWORD PTR ds:0x4448a0
  443026:	jmp    DWORD PTR ds:0x4448a4
  44302c:	jmp    DWORD PTR ds:0x4448a8
  443032:	jmp    DWORD PTR ds:0x4448ac
  443038:	jmp    DWORD PTR ds:0x4448b0
  44303e:	jmp    DWORD PTR ds:0x4448b4
  443044:	jmp    DWORD PTR ds:0x4448b8
  44304a:	jmp    DWORD PTR ds:0x4448bc
  443050:	jmp    DWORD PTR ds:0x4448c0
  443056:	jmp    DWORD PTR ds:0x4448c4
  44305c:	jmp    DWORD PTR ds:0x4448c8
  443062:	jmp    DWORD PTR ds:0x4448cc
  443068:	jmp    DWORD PTR ds:0x4448d0
  44306e:	jmp    DWORD PTR ds:0x4448d4
  443074:	jmp    DWORD PTR ds:0x4448d8
  44307a:	jmp    DWORD PTR ds:0x4448dc
  443080:	jmp    DWORD PTR ds:0x4448e0
  443086:	jmp    DWORD PTR ds:0x4448e4
  44308c:	jmp    DWORD PTR ds:0x4448ec
  443092:	jmp    DWORD PTR ds:0x4448f4
  443098:	jmp    DWORD PTR ds:0x4448f8
  44309e:	jmp    DWORD PTR ds:0x4448fc
  4430a4:	jmp    DWORD PTR ds:0x444900
  4430aa:	jmp    DWORD PTR ds:0x444904
  4430b0:	jmp    DWORD PTR ds:0x444908
  4430b6:	jmp    DWORD PTR ds:0x44490c
  4430bc:	jmp    DWORD PTR ds:0x444910
  4430c2:	jmp    DWORD PTR ds:0x444914
  4430c8:	jmp    DWORD PTR ds:0x444918
  4430ce:	jmp    DWORD PTR ds:0x44491c
  4430d4:	jmp    DWORD PTR ds:0x444920
  4430da:	jmp    DWORD PTR ds:0x444924
  4430e0:	jmp    DWORD PTR ds:0x444928
  4430e6:	jmp    DWORD PTR ds:0x44492c
  4430ec:	jmp    DWORD PTR ds:0x444930
  4430f2:	jmp    DWORD PTR ds:0x444934
  4430f8:	jmp    DWORD PTR ds:0x444938
  4430fe:	jmp    DWORD PTR ds:0x44493c
  443104:	jmp    DWORD PTR ds:0x444940
  44310a:	jmp    DWORD PTR ds:0x444944
  443110:	jmp    DWORD PTR ds:0x444948
  443116:	jmp    DWORD PTR ds:0x44494c
  44311c:	jmp    DWORD PTR ds:0x444950
  443122:	jmp    DWORD PTR ds:0x444954
  443128:	jmp    DWORD PTR ds:0x444958
  44312e:	jmp    DWORD PTR ds:0x44495c
  443134:	jmp    DWORD PTR ds:0x444960
  44313a:	jmp    DWORD PTR ds:0x444964
  443140:	jmp    DWORD PTR ds:0x444968
  443146:	jmp    DWORD PTR ds:0x44496c
  44314c:	jmp    DWORD PTR ds:0x444970
  443152:	jmp    DWORD PTR ds:0x444974
  443158:	jmp    DWORD PTR ds:0x444978
  44315e:	jmp    DWORD PTR ds:0x44497c
  443164:	jmp    DWORD PTR ds:0x444980
  44316a:	jmp    DWORD PTR ds:0x444984
  443170:	jmp    DWORD PTR ds:0x444988
  443176:	jmp    DWORD PTR ds:0x44498c
  44317c:	jmp    DWORD PTR ds:0x444990
  443182:	jmp    DWORD PTR ds:0x444994
  443188:	jmp    DWORD PTR ds:0x444998
  44318e:	jmp    DWORD PTR ds:0x44499c
  443194:	jmp    DWORD PTR ds:0x4449a0
  44319a:	jmp    DWORD PTR ds:0x4449a4
  4431a0:	jmp    DWORD PTR ds:0x4449a8
  4431a6:	jmp    DWORD PTR ds:0x4449ac
  4431ac:	jmp    DWORD PTR ds:0x4449b0
  4431b2:	jmp    DWORD PTR ds:0x4449b4
  4431b8:	jmp    DWORD PTR ds:0x4449b8
  4431be:	jmp    DWORD PTR ds:0x4449bc
  4431c4:	jmp    DWORD PTR ds:0x4449c0
  4431ca:	jmp    DWORD PTR ds:0x4449c4
  4431d0:	jmp    DWORD PTR ds:0x4449c8
  4431d6:	jmp    DWORD PTR ds:0x4449cc
  4431dc:	jmp    DWORD PTR ds:0x4449d4
  4431e2:	jmp    DWORD PTR ds:0x4449d8
  4431e8:	jmp    DWORD PTR ds:0x4449dc
  4431ee:	jmp    DWORD PTR ds:0x4449e0
  4431f4:	jmp    DWORD PTR ds:0x4449e4
  4431fa:	jmp    DWORD PTR ds:0x4449e8
  443200:	jmp    DWORD PTR ds:0x4449ec
  443206:	jmp    DWORD PTR ds:0x4449f0
  44320c:	jmp    DWORD PTR ds:0x4449f4
  443212:	jmp    DWORD PTR ds:0x4449f8
  443218:	jmp    DWORD PTR ds:0x4449fc
  44321e:	jmp    DWORD PTR ds:0x444a00
  443224:	jmp    DWORD PTR ds:0x444a04
  44322a:	jmp    DWORD PTR ds:0x444a08
  443230:	jmp    DWORD PTR ds:0x444a0c
